xor
add
dec
add
add
add
add
add
add
add
push
add
push
lock
add
add
add
xor
add
add
add
add
adc
cmp
add
adc
push
add
add
jae
add
or
add
or
or
adc
push
rol
add
add
adc
inc
adc
add
mov
(bad)
inc
add
add
add
add
add
js
add
xchg
add
add
add
push
add
add
add
add
jp
add
fwait
add
add
add
add
add
add
add
mov
add
add
add
add
or
pop
pop
and
add
add
adc
sbb
rol
add
add
frstor
push
pop
pop
adc
adc
outs
xchg
add
and
add
pop
adc
outs
xchg
add
popa
outs
mov
add
adc
sbb
adc
popa
(bad)
(bad)
call
add
add
adc
adc
pop
and
hlt
out
nop
js
sbb
ror
cmp
(bad)
call
add
add
adc
adc
push
adc
pop
adc
adc
and
add
add
sbb
add
sub
add
or
mov
add
aam
dec
add
add
add
or
adc
(bad)
(bad)
(bad)
call
add
add
adc
pop
or
mov
add
and
pop
and
or
rcl
or
or
add
adc
adc
or
retf
call
add
add
and
sbb
and
xor
adc
pop
pop
adc
pop
adc
adc
test
(bad)
call
add
add
push
adc
adc
adc
add
outs
dec
add
or
pop
or
(bad)
(bad)
call
push
adc
cmp
call
add
add
and
test
dec
and
adc
sub
push
sbb
adc
pop
(bad)
(bad)
call
add
add
sub
adc
adc
inc
(bad)
(bad)
call
add
add
and
clc
retf
mov
dec
and
adc
adc
add
adc
imul
pop
or
adc
sbb
(bad)
call
add
add
sbb
add
or
and
add
or
pop
and
pop
adc
adc
adc
shl
or
adc
loopne
(bad)
call
add
add
(bad)
cmp
ja
dec
arpl
adc
adc
add
or
adc
cmp
add
add
adc
adc
outs
mov
add
adc
outs
push
add
or
sub
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
es
add
add
sub
add
push
sub
add
push
sub
add
add
pop
sbb
and
repnz
cmp
dec
fimul
and
adc
lea
add
adc
push
and
movs
call
inc
pop
and
mov
or
and
push
loopne
and
fstp
out
and
popa
pop
outs
dec
add
or
or
cld
(bad)
call
add
add
sub
add
add
or
pop
adc
adc
(bad)
(bad)
call
add
add
and
push
and
cdq
add
pop
adc
es
add
or
or
ins
add
or
pop
sub
push
jp
or
mov
sub
nop
add
or
add
or
or
adc
cmp
add
add
adc
adc
adc
imul
(bad)
call
add
pop
add
or
add
or
movaps
movq
add
or
jae
add
or
jae
add
or
or
movlps
cmp
(bad)
call
add
add
sbb
sub
add
sub
adc
push
add
add
add
add
adc
sub
add
add
xchg
add
adc
xchg
add
outs
mov
add
adc
pop
or
or
push
rol
add
adc
inc
push
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
jge
add
int3
add
add
add
pop
add
add
or
add
or
add
or
mov
add
pop
or
or
stos
rol
add
push
adc
cmp
add
pop
adc
or
or
or
sub
add
or
mov
add
lock
add
adc
cmp
(bad)
call
add
add
mov
push
test
xor
or
sub
adc
add
adc
outs
cdq
add
or
add
or
or
or
inc
(bad)
(bad)
call
adc
cmp
(bad)
(bad)
call
add
add
pop
adc
or
add
or
adc
sbb
or
sbb
add
add
adc
adc
xchg
add
adc
and
adc
adc
mov
pop
xchg
and
pop
outs
fisubr
aad
outs
adc
push
cmp
and
and
hlt
xchg
xchg
and
neg
pusha
outs
popf
add
or
add
add
or
or
add
or
mov
(bad)
call
add
add
and
jne
cld
inc
pop
adc
adc
or
or
add
or
add
or
add
or
add
push
adc
mov
movs
add
or
add
or
adc
cmp
(bad)
call
add
add
adc
es
or
or
or
push
(bad)
(bad)
call
add
add
movs
cmp
jl
ja
fwait
pusha
pop
adc
es
add
jo
or
add
or
adc
cdq
add
or
jae
add
or
sub
jb
add
jo
or
add
or
adc
outs
cdq
add
or
jae
add
or
push
outs
cmps
add
or
add
cmp
std
(bad)
call
add
add
adc
adc
mov
pop
xchg
adc
adc
mov
pop
xchg
push
bound
push
adc
mov
pop
xchg
pop
adc
adc
adc
mov
pop
xchg
and
das
aam
and
mov
pop
and
xchg
xor
pusha
adc
sbb
std
(bad)
call
add
add
sbb
add
sub
add
add
add
or
outs
test
pop
pop
or
adc
cmp
(bad)
call
add
add
adc
adc
pop
pop
adc
adc
or
(bad)
call
adc
cmp
(bad)
call
add
add
adc
add
add
adc
adc
add
add
add
cwde
add
or
outs
xchg
add
or
add
or
add
or
or
adc
sub
rol
add
adc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fld
add
inc
add
sub
add
dec
add
add
add
jns
add
test
add
add
add
add
add
jo
outs
stos
add
or
add
add
pop
jae
add
or
add
adc
pop
or
or
mov
add
add
sbb
xor
sub
add
outs
cdq
add
or
add
or
add
or
add
or
jb
add
jo
outs
stos
add
or
add
add
pop
jae
add
or
cmp
(bad)
(bad)
call
add
add
inc
arpl
cmp
jne
adc
es
or
push
add
add
add
add
call
pop
or
or
or
(bad)
call
add
add
pop
adc
adc
jle
add
or
push
outs
test
adc
cmp
(bad)
(bad)
call
add
add
aaa
sub
sbb
dec
pop
jbe
pop
adc
es
outs
sahf
add
or
add
or
or
leave
(bad)
(bad)
call
add
add
and
arpl
push
and
adc
adc
sub
lods
add
or
outs
cdq
add
or
add
or
push
pop
pop
adc
pop
adc
or
xchg
(bad)
(bad)
call
add
add
sbb
xor
sub
add
pop
or
add
or
outs
scas
add
or
inc
sub
add
sub
or
outs
mov
add
pop
adc
or
push
(bad)
(bad)
call
add
add
sbb
xor
sub
add
or
or
adc
adc
mov
pop
xchg
push
bound
or
or
pop
adc
adc
adc
mov
pop
xchg
and
cmp
and
cmp
pop
bound
or
outs
xchg
add
adc
and
mov
or
or
pop
sbb
outs
popf
add
or
add
add
pop
push
adc
cmp
std
(bad)
call
add
add
pop
pop
pop
or
adc
imul
(bad)
call
adc
cmp
std
(bad)
call
add
add
sbb
xor
sub
add
add
imul
add
adc
sbb
add
sub
add
mov
(bad)
std
(bad)
call
add
add
adc
es
adc
pop
movlps
cmp
(bad)
call
add
add
and
and
sbb
pop
adc
or
or
add
or
add
or
add
or
cmp
mov
(bad)
call
adc
cmp
(bad)
call
add
add
adc
es
outs
mov
add
cmp
(bad)
dec
adc
outs
mov
sub
add
or
sbb
or
adc
(bad)
call
add
add
sbb
or
pop
adc
or
(bad)
cld
(bad)
call
add
add
sbb
xor
sub
add
pop
jle
add
or
add
or
or
or
fdivr
(bad)
call
add
add
sbb
add
sub
add
push
adc
sbb
or
mov
adc
cmp
add
add
and
(bad)
aam
xor
adc
add
add
xor
add
add
add
add
add
out
add
add
adc
add
push
sbb
xor
sub
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
pop
add
add
add
test
add
add
sub
add
outs
jne
add
jb
add
jo
xchg
add
or
mov
push
and
fadd
fsub
popa
adc
or
add
push
popa
rcr
rol
add
add
or
add
or
jae
add
or
add
or
cmp
outs
mov
add
aam
dec
add
add
adc
call
add
add
or
push
or
add
es
(bad)
out
and
es
push
adc
bound
adc
call
add
add
sbb
add
rcr
and
add
and
loop
and
pop
dec
pop
pop
and
jl
add
mov
pop
pop
pop
and
rcl
aaa
addr16
popa
and
sbb
xor
and
iret
imul
popa
pop
pop
pop
pop
ror
adc
pop
adc
add
mov
adc
call
adc
call
add
add
sbb
add
sub
add
pop
pop
outs
mov
add
outs
mov
add
or
adc
add
push
and
lock
and
in
mov
popa
adc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
sub
add
add
adc
add
push
and
push
mov
add
sub
mov
dec
add
add
or
or
add
sbb
add
add
push
and
std
cwde
push
and
lds
pop
adc
pop
sub
pop
outs
mov
jle
add
add
xor
add
add
add
or
add
add
adc
jle
add
add
sub
adc
add
(bad)
(bad)
inc
adc
or
add
sub
add
adc
add
add
xchg
out
add
add
add
adc
adc
dec
add
add
add
adc
sbb
add
jae
add
or
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
or
inc
add
add
mov
sub
xor
mov
add
adc
sbb
add
sub
in
add
and
add
add
or
add
pop
or
adc
add
add
adc
push
sub
movs
lea
push
pop
or
pop
inc
add
add
enter
add
add
fiadd
sub
add
add
sub
add
push
add
mov
fld
add
sub
or
push
rol
add
push
es
inc
add
add
sar
(bad)
inc
add
add
pop
or
inc
add
add
add
add
add
add
add
add
add
push
add
push
es
push
add
push
sub
add
sub
add
add
add
add
add
add
add
add
xor
add
add
add
adc
push
sub
add
add
push
and
add
and
add
sub
or
inc
add
add
xlat
(bad)
(bad)
inc
jle
add
add
sub
add
outs
rol
or
adc
and
add
add
test
add
sub
sub
pop
and
add
add
add
add
sub
sub
rol
add
push
es
pop
add
push
sub
add
adc
add
add
add
cmp
adc
add
add
xor
add
add
push
add
adc
sub
add
push
outs
and
add
sub
push
or
inc
add
add
add
add
add
add
add
add
add
add
add
or
add
es
or
add
sub
or
inc
add
add
mov
sub
add
adc
adc
xor
add
or
add
add
ret
or
or
push
ror
add
push
es
inc
add
add
loop
(bad)
inc
add
add
ror
add
push
es
or
add
sub
add
sub
add
adc
adc
add
add
adc
or
or
add
adc
push
add
push
and
pop
mov
mulps
add
adc
cmp
inc
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
je
add
sahf
add
add
add
add
add
add
add
add
add
jle
add
movs
add
add
add
add
add
add
add
add
add
pop
or
push
adc
xchg
rol
add
add
adc
push
add
add
jle
(bad)
call
sldt
push
and
js
fild
adc
and
add
add
and
add
xchg
add
add
mov
loopne
add
add
add
adc
add
ds
(bad)
call
or
add
cmp
add
pop
inc
or
add
ret
add
add
ins
add
add
add
add
add
add
add
add
or
pop
or
add
add
(bad)
call
or
add
hlt
and
push
pop
pop
adc
sub
or
add
push
add
add
add
add
or
add
es
or
add
sub
test
add
pop
or
mov
sbb
or
add
push
add
popf
pop
or
add
sahf
(bad)
(bad)
call
adc
push
xor
sub
add
adc
test
(bad)
call
adc
add
pop
sbb
add
sub
add
sbb
cmp
add
sbb
pop
adc
pusha
(bad)
(bad)
call
adc
cmp
loop
jo
adc
sub
cmp
(bad)
call
adc
add
cmp
(bad)
call
pop
add
push
and
repnz
lods
rcr
adc
pop
sub
add
sbb
or
add
adc
(bad)
call
adc
add
and
ret
and
or
pop
adc
or
add
add
add
add
(bad)
(bad)
dec
add
push
add
add
add
add
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
movs
add
add
(bad)
(bad)
call
(bad)
call
std
(bad)
call
push
add
add
sbb
pop
or
or
add
mov
or
add
sbb
add
sub
add
or
or
movlps
xchg
(bad)
call
push
add
push
and
movlps
pop
adc
cmp
(bad)
inc
pop
and
add
popf
push
sbb
mov
add
popf
push
push
and
add
add
cmp
(bad)
call
sbb
add
cmp
inc
sbb
adc
add
popf
pop
push
adc
xor
(bad)
call
or
add
jb
test
adc
adc
pop
or
or
sbb
add
sbb
add
or
(bad)
call
or
add
retf
pushf
aaa
jg
call
adc
sbb
out
(bad)
call
adc
cld
(bad)
call
pop
add
add
adc
sbb
(bad)
(bad)
call
or
add
iret
cld
(bad)
call
or
add
sbb
xor
sub
add
lea
add
or
or
or
add
scas
cld
(bad)
call
push
add
add
pop
or
xchg
std
(bad)
call
push
cmp
adc
add
xchg
cld
(bad)
call
pop
add
add
(bad)
icebp
mov
jo
pop
adc
pop
or
ins
std
(bad)
call
cmp
(bad)
call
or
pop
std
(bad)
call
adc
add
popa
cld
(bad)
call
adc
add
push
sbb
add
sub
add
sbb
mov
add
popf
push
adc
inc
cld
(bad)
call
or
add
adc
add
add
xor
add
add
adc
or
adc
push
ror
add
add
push
xor
sub
add
add
or
add
mov
add
add
add
cwde
add
add
add
add
add
add
add
add
add
add
inc
or
add
cli
add
add
add
add
add
push
add
add
add
jno
add
push
add
add
add
push
add
std
add
add
or
sub
push
inc
push
add
add
add
pop
add
add
add
add
add
add
add
sgdtd
add
or
stos
push
sub
pop
or
neg
sub
sbb
add
imul
add
push
and
jge
push
add
push
sub
pop
or
rcr
add
inc
(bad)
(bad)
call
or
add
sbb
add
sub
add
and
call
add
sub
or
add
add
add
add
add
add
or
add
push
add
add
add
inc
add
add
add
add
or
add
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
pop
sub
push
sub
sbb
icebp
pop
sub
ror
add
push
es
sub
cmp
adc
add
pop
adc
cmp
(bad)
(bad)
call
sub
or
or
add
fwait
(bad)
(bad)
call
adc
add
sbb
sub
add
cmp
or
add
das
mov
sbb
add
sbb
in
(bad)
(bad)
call
adc
(bad)
(bad)
(bad)
call
or
add
out
push
and
jbe
inc
push
push
sub
pop
or
sbb
add
inc
(bad)
(bad)
call
push
add
add
pop
add
sub
add
popa
pop
xor
add
add
aam
(bad)
call
adc
sbb
(bad)
call
adc
add
pop
adc
sbb
pop
adc
or
(bad)
call
pop
add
add
pop
add
sub
add
sub
add
adc
push
add
add
adc
add
inc
sbb
add
fwait
add
add
add
add
add
add
push
add
mov
add
sbb
add
fild
add
sub
add
je
add
mov
add
add
inc
add
jno
add
mov
add
push
add
add
add
pop
push
add
sub
add
add
add
add
add
add
add
add
add
add
int
add
pop
adc
or
or
push
add
push
push
adc
adc
inc
xor
add
stos
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
fwait
add
add
add
add
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
mov
add
add
in
add
or
add
add
outs
add
add
mov
add
add
sbb
add
pop
(bad)
add
add
and
(bad)
(bad)
call
adc
add
es
or
adc
or
or
(bad)
call
pop
add
add
adc
cmp
(bad)
call
sbb
or
jbe
(bad)
call
or
add
add
(bad)
(bad)
push
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
pop
daa
adc
cmp
add
add
sbb
add
add
or
add
es
movlps
cmp
or
add
sbb
add
add
add
push
adc
or
or
outs
(bad)
(bad)
call
sbb
add
and
dec
and
push
fs
popa
adc
sbb
or
or
and
or
dec
(bad)
(bad)
call
sbb
add
and
cmp
adc
es
cmp
das
adc
cmp
(bad)
(bad)
call
sldt
push
sbb
xor
sub
add
push
pop
pop
xchg
or
pop
adc
cmp
(bad)
(bad)
call
push
add
add
adc
es
push
adc
pop
adc
or
clc
std
(bad)
call
or
add
es
or
ins
std
(bad)
(bad)
jle
add
add
call
add
pop
sbb
or
sar
(bad)
call
add
adc
sbb
cmp
add
pop
adc
xor
adc
std
(bad)
call
push
add
push
and
pop
arpl
(bad)
inc
sbb
or
jle
add
add
push
adc
mov
pop
push
sbb
sbb
or
or
(bad)
call
adc
pop
xor
or
jnp
(bad)
call
pop
add
add
pop
movs
push
aaa
and
popf
aas
cmp
or
cmp
cld
(bad)
call
sub
std
(bad)
call
pop
add
add
adc
es
or
sub
or
inc
std
(bad)
call
or
add
sbb
add
sub
add
or
or
or
std
(bad)
call
adc
adc
es
or
sub
or
adc
(bad)
call
or
add
and
mov
push
fs
adc
ror
add
es
pop
adc
sbb
or
out
cld
(bad)
call
sbb
add
es
sbb
pop
add
add
sub
or
fdivr
(bad)
call
or
add
and
pop
and
adc
or
cmp
(bad)
call
xor
or
mov
(bad)
call
adc
sbb
add
add
es
(bad)
call
sbb
or
fwait
cld
(bad)
call
pop
add
add
adc
es
push
cmp
add
pop
sub
or
cmp
call
push
add
push
sbb
sub
add
add
push
adc
cmp
(bad)
call
sldt
push
or
sbb
pop
adc
pop
or
sbb
or
dec
cld
(bad)
call
push
add
push
and
push
sub
push
icebp
mov
es
adc
or
mov
(bad)
call
or
or
sbb
or
es
(bad)
call
adc
add
push
adc
es
or
sti
(bad)
call
or
cmc
push
adc
pop
adc
or
add
(bad)
call
add
sbb
add
sub
add
or
and
or
jmp
add
jle
add
add
adc
pop
pop
adc
cmp
sti
(bad)
call
pop
add
add
cmps
fwait
mov
rcl
cmp
or
adc
cmp
add
cmp
pop
add
jecxz
push
pusha
pop
adc
es
adc
push
adc
sbb
or
(bad)
sti
(bad)
call
pop
add
add
inc
les
and
adc
es
or
or
repz
(bad)
call
sub
pop
adc
pop
and
or
(bad)
sti
(bad)
call
add
xchg
aas
lea
data16
pop
adc
adc
cmp
add
cmp
cli
(bad)
call
adc
pop
adc
pop
adc
cmp
sti
(bad)
call
push
add
push
cmp
sbb
or
pop
sti
(bad)
call
sldt
push
sbb
or
pop
push
cmp
or
add
adc
cmp
cli
(bad)
call
push
add
add
pop
sbb
outs
pop
adc
or
in
cli
(bad)
call
or
add
adc
es
or
xor
or
xlat
cli
(bad)
call
sbb
add
and
sbb
jg
adc
es
sbb
cmp
and
or
mov
(bad)
call
pop
add
push
and
loopne
and
inc
pop
pop
adc
cmp
cli
(bad)
call
or
adc
cmp
adc
add
sbb
or
pop
push
adc
cmp
cli
(bad)
call
sub
pop
adc
cmp
(bad)
call
sbb
add
and
lds
fdiv
xor
or
pop
or
xlat
sbb
or
push
cli
(bad)
call
or
sbb
add
sub
add
(bad)
call
or
sub
push
adc
cmp
cli
(bad)
call
or
add
in
push
jge
and
div
cmp
sbb
cli
(bad)
call
sldt
push
es
push
cmp
(bad)
call
stc
(bad)
call
sbb
add
and
aam
push
adc
cmp
(bad)
call
or
inc
push
(bad)
call
push
adc
cmp
stc
(bad)
call
push
add
push
and
pop
sub
pop
pop
adc
add
pop
vmovups
popa
or
add
add
or
xchg
or
adc
or
adc
cmp
push
add
push
and
jb
and
adc
es
adc
pop
push
adc
cmp
(bad)
call
pop
add
push
push
sbb
add
sub
add
adc
call
or
or
popa
stc
(bad)
call
sbb
add
es
clc
(bad)
call
or
loop
(bad)
call
adc
cmp
(bad)
call
pop
add
add
adc
adc
pop
xchg
adc
adc
pop
pop
adc
pop
xchg
popa
rcr
movs
clc
(bad)
call
or
sbb
(bad)
call
or
add
sbb
or
sub
or
or
(bad)
call
push
add
add
pop
test
dec
dec
jno
adc
add
sub
add
xor
add
add
adc
dec
add
add
inc
or
add
add
add
add
add
add
add
add
add
add
add
or
add
enter
inc
add
add
add
mov
add
add
or
or
add
and
xor
or
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
lahf
add
add
add
add
add
add
add
add
add
add
cmp
add
add
or
into
add
add
or
mov
push
push
or
ror
pop
adc
(bad)
ror
add
push
sbb
add
sub
add
or
or
jne
(bad)
call
push
add
add
loope
daa
pop
and
mov
push
or
or
or
(bad)
inc
and
add
add
mov
add
sub
add
push
sub
or
or
adc
cmp
sbb
add
push
pop
add
sub
add
or
or
aad
(bad)
call
cmp
(bad)
(bad)
call
push
add
push
and
shl
jnp
imul
sbb
add
(bad)
call
adc
add
sbb
sub
add
cmp
add
add
or
call
or
add
ins
adc
jb
sub
or
push
or
jle
(bad)
inc
popa
pop
push
pop
inc
add
add
inc
add
add
or
mov
or
add
xchg
xchg
adc
and
ins
sbb
or
cmp
(bad)
call
cmp
add
add
push
or
xchg
(bad)
(bad)
call
sbb
add
and
mov
and
or
cmp
(bad)
call
call
or
jo
(bad)
call
push
add
push
es
or
mov
add
pop
or
test
add
sbb
push
(bad)
(bad)
call
or
add
es
inc
or
add
xchg
(bad)
(bad)
cmp
add
add
add
(bad)
push
(bad)
(bad)
jge
(bad)
(bad)
mov
(bad)
(bad)
call
(bad)
cmp
(bad)
(bad)
call
or
add
sub
es
or
push
or
mov
(bad)
call
or
scas
std
(bad)
call
or
cmp
std
(bad)
call
adc
add
push
or
pop
or
adc
sub
sbb
(bad)
call
sldt
push
push
or
pop
or
pop
or
into
std
(bad)
call
sbb
add
sbb
xor
sub
add
push
(bad)
jmp
adc
or
or
mov
(bad)
call
or
add
sbb
add
sub
add
xor
add
add
or
add
sbb
sub
rol
add
add
sbb
add
sub
add
inc
sldt
add
add
add
add
add
pop
add
add
add
popf
add
add
add
add
add
add
add
dec
add
add
add
test
add
add
popa
pop
bound
add
add
jne
add
pop
or
sub
push
and
and
loopne
popa
or
pop
or
pop
or
nop
rol
add
add
sbb
add
sub
add
or
cmp
sub
sbb
hlt
pop
sub
push
or
push
(bad)
call
or
add
sbb
push
or
(bad)
call
push
add
add
sbb
add
add
or
(bad)
sbb
les
or
rcl
add
push
sbb
xor
(bad)
call
or
add
jg
jnp
and
xchg
push
popa
or
pop
or
pop
or
push
(bad)
(bad)
call
adc
add
sbb
xor
sub
add
or
add
(bad)
call
push
add
push
es
je
(bad)
call
cmp
(bad)
call
or
out
(bad)
call
push
add
add
pop
inc
or
add
add
add
add
add
add
add
add
add
add
add
addr16
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
call
push
add
push
sbb
call
add
push
or
sbb
pop
or
(bad)
call
adc
add
and
fadd
js
pop
or
sub
add
aam
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
call
call
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
call
or
inc
(bad)
(bad)
call
or
add
sbb
cmp
(bad)
call
sub
push
or
or
dec
(bad)
(bad)
call
sub
pop
or
and
(bad)
call
adc
add
sbb
sub
add
or
or
or
(bad)
call
or
add
and
xchg
lahf
cmp
or
add
cli
add
add
int
add
sub
add
push
sub
or
or
or
fdivr
(bad)
call
or
add
sbb
add
sub
add
xor
ret
add
add
add
adc
or
push
adc
push
rcl
adc
mov
add
add
add
add
add
add
add
je
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
or
push
adc
test
add
adc
sbb
adc
cdq
rol
add
add
push
inc
push
add
add
add
add
add
add
add
add
add
add
add
movlps
ins
(bad)
(bad)
call
push
add
add
add
jo
cmp
pop
push
adc
push
(bad)
(bad)
call
or
add
call
jae
pop
adc
pop
cmp
add
add
cmp
add
add
cmp
add
pop
or
(bad)
(bad)
call
or
add
cmp
cmp
adc
or
(bad)
call
adc
add
sbb
add
push
or
adc
cmc
(bad)
(bad)
call
pop
add
add
adc
push
cmp
add
add
adc
add
(bad)
(bad)
call
or
add
push
adc
pop
push
adc
retf
(bad)
(bad)
call
add
adc
sbb
sub
(bad)
(bad)
call
or
add
or
adc
movs
(bad)
(bad)
call
push
add
push
sbb
xor
sub
add
or
or
or
add
mov
(bad)
call
or
add
sbb
add
js
(bad)
call
sbb
add
sbb
xor
sub
add
inc
or
add
jp
(bad)
inc
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
or
add
xor
(bad)
call
pop
add
add
stc
xchg
jg
and
adc
pop
or
push
adc
adc
adc
adc
add
and
add
and
add
add
aad
add
sub
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
sldt
push
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
push
sub
sbb
hlt
sbb
icebp
sbb
out
ror
add
push
es
sub
cmp
push
add
add
sbb
add
sub
add
cmp
(bad)
inc
pop
inc
add
add
dec
(bad)
(bad)
call
or
adc
pop
std
(bad)
call
pop
add
push
push
sbb
add
sub
add
sub
adc
adc
iret
add
add
add
adc
or
inc
or
add
pop
add
add
add
add
add
jne
add
pop
add
add
add
mov
add
add
add
xor
or
add
push
rol
add
add
sbb
add
add
add
adc
add
jno
(bad)
inc
add
add
add
add
add
fiadd
add
or
add
sbb
add
aaa
add
add
add
pop
add
add
add
pushf
add
add
add
add
add
push
add
add
or
or
add
mov
or
add
sbb
sub
add
or
push
(bad)
(bad)
inc
add
add
add
cmp
add
sub
add
push
sbb
add
xchg
or
add
dec
pop
aam
and
sub
add
sub
or
add
add
add
jns
add
cmp
add
add
add
cmp
add
add
add
add
add
adc
add
sub
or
inc
push
add
add
add
pop
add
add
add
add
add
add
add
add
or
cli
push
sub
push
sub
push
sub
sbb
out
sbb
jmp
adc
add
sub
add
call
add
repnz
(bad)
call
or
add
adc
xor
add
pop
inc
add
add
pop
add
add
(bad)
(bad)
call
or
jg
(bad)
call
sub
pop
adc
mov
pop
add
push
sbb
add
pop
or
outs
sbb
add
movs
(bad)
(bad)
call
sbb
add
es
or
adc
xchg
(bad)
(bad)
call
sbb
add
and
xor
pop
adc
pop
or
aas
sbb
add
jbe
(bad)
call
add
cmp
push
adc
(bad)
(bad)
(bad)
call
sbb
add
es
or
or
or
add
dec
(bad)
(bad)
call
push
add
add
sbb
add
sub
add
or
repz
(bad)
call
movlps
xor
(bad)
call
adc
add
and
in
ficomp
ss
adc
sbb
adc
adc
(bad)
call
push
add
add
cmp
std
(bad)
inc
inc
push
add
add
add
dec
add
add
add
add
push
(bad)
(bad)
call
or
add
loope
(bad)
call
add
ds
imul
mov
addr16
adc
sub
adc
(bad)
call
or
add
sbb
add
sub
add
cmp
std
(bad)
call
add
test
adc
add
es
or
pop
(bad)
(bad)
call
cmp
(bad)
call
call
or
dec
(bad)
(bad)
call
std
(bad)
call
or
add
add
add
xor
loop
add
or
add
pop
or
or
add
or
add
adc
adc
pushf
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
and
add
add
add
sbb
inc
add
add
cmp
add
add
adc
pushf
ror
add
add
sub
or
add
add
add
add
add
add
add
add
add
adc
add
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
pop
sub
pop
sub
push
sub
push
sub
rcl
add
push
sub
adc
sub
(bad)
call
or
add
push
sbb
add
sub
add
cmp
add
pop
and
add
pop
add
add
adc
add
(bad)
call
or
add
sbb
add
sub
add
or
adc
add
call
pop
add
add
pop
sub
pop
or
add
(bad)
(bad)
(bad)
call
sbb
add
sbb
add
sbb
adc
sar
call
or
add
sbb
add
sub
add
bound
sub
or
adc
movs
(bad)
(bad)
call
adc
adc
push
or
adc
xchg
(bad)
(bad)
call
or
add
sbb
xor
sub
add
xor
inc
push
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
or
movlps
pop
(bad)
(bad)
call
add
adc
or
add
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
call
or
adc
add
push
(bad)
(bad)
call
push
add
push
and
pop
mov
and
adc
sbb
pop
or
add
clc
std
(bad)
call
sbb
add
and
cmp
(bad)
imul
adc
add
sbb
or
std
(bad)
call
sbb
add
es
or
add
retf
std
(bad)
call
push
add
add
sbb
add
add
cmp
(bad)
call
adc
scas
std
(bad)
call
or
add
cmp
(bad)
call
call
add
xchg
std
(bad)
call
pop
add
add
sbb
add
sub
add
add
pop
add
add
add
add
pop
add
push
sbb
add
outs
std
(bad)
call
or
add
adc
sbb
or
add
pop
std
(bad)
call
or
add
push
add
push
and
inc
sbb
add
pop
or
add
aas
std
(bad)
call
pop
add
add
push
xor
sub
add
sub
add
xor
add
add
add
add
pop
push
or
or
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
sbb
sbb
pushf
rol
add
add
or
pop
or
pop
or
mov
push
add
add
in
ds
and
or
pop
or
pop
adc
cmp
(bad)
call
or
add
es
cmp
add
or
pop
add
add
cmp
add
push
cmp
add
pop
or
dec
add
add
or
inc
add
add
cmp
adc
(bad)
call
push
add
add
xchg
fnstcw
jp
leave
xor
es
or
pop
or
pop
(bad)
(bad)
call
or
add
sbb
add
add
and
add
add
test
add
sub
add
push
sub
or
or
out
(bad)
(bad)
call
pop
add
add
pop
xor
sub
es
adc
add
es
or
(bad)
call
or
add
pop
cmp
(bad)
(bad)
call
or
(bad)
cmp
pop
add
add
cmp
sub
or
sbb
pop
adc
mov
or
add
pop
or
xchg
(bad)
(bad)
call
push
add
add
sbb
add
sub
add
inc
or
(bad)
(bad)
inc
add
add
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
ret
add
(bad)
(bad)
jle
add
and
adc
add
es
or
pop
or
cmp
(bad)
call
or
add
es
xor
and
or
sub
add
xchg
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
dec
add
add
or
adc
idiv
(bad)
call
add
pop
xor
sub
add
or
or
(bad)
(bad)
call
or
add
jmp
(bad)
or
or
pop
or
cmp
std
(bad)
call
push
add
push
and
dec
xchg
retf
ds
or
pop
or
pop
or
movs
std
(bad)
call
sbb
add
es
or
xchg
std
(bad)
call
sbb
add
pop
sbb
add
sub
add
popa
pop
jo
inc
add
add
push
add
add
or
jb
(bad)
call
sldt
push
sbb
xor
sub
add
cmp
cmp
(bad)
call
or
add
or
pop
or
inc
std
(bad)
call
pop
add
push
es
or
cmp
(bad)
call
sbb
add
sbb
sbb
sub
(bad)
call
(bad)
call
adc
add
add
sub
adc
adc
or
add
or
add
push
or
movlps
adc
adc
add
and
int3
stos
and
fldcw
adc
adc
xchg
(bad)
(bad)
inc
add
add
add
add
add
push
add
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
or
add
mov
add
adc
pop
or
or
adc
(bad)
ror
add
add
outs
movs
cmp
pop
pop
add
sub
adc
jae
(bad)
call
or
add
pop
movlps
fs
(bad)
call
push
add
add
adc
sbb
pop
or
(bad)
(bad)
call
or
add
fcmovu
hlt
add
and
add
push
inc
push
add
add
add
pop
add
add
(bad)
inc
add
add
add
add
or
add
push
(bad)
(bad)
call
add
pop
xor
sub
add
sub
adc
std
(bad)
(bad)
call
adc
add
and
or
and
jns
add
add
pop
or
cs
popa
pop
sub
add
add
adc
add
stc
add
add
push
adc
(bad)
(bad)
(bad)
call
sbb
add
push
push
xor
sub
add
or
pushf
add
add
or
neg
(bad)
(bad)
call
sbb
add
and
cmp
xchg
jbe
popa
adc
pop
movlps
mov
(bad)
call
or
add
mov
int
and
inc
test
adc
sbb
movlps
ins
(bad)
(bad)
call
push
add
add
push
add
sub
add
sub
push
(bad)
(bad)
call
or
sbb
add
sub
add
or
sub
cmp
(bad)
(bad)
call
or
or
add
xor
(bad)
call
or
add
sbb
or
add
pop
(bad)
(bad)
call
add
adc
or
add
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
call
(bad)
(bad)
cmp
adc
loopne
(bad)
call
sbb
add
sbb
add
add
sub
adc
enter
rcr
add
push
sbb
add
sbb
xchg
sbb
add
mov
(bad)
call
or
adc
add
and
add
add
test
or
add
sub
or
add
add
add
out
std
(bad)
inc
add
add
std
(bad)
inc
add
inc
add
add
add
add
add
add
add
add
adc
add
sub
or
inc
push
add
add
add
pop
add
add
add
add
add
add
add
add
or
cli
sbb
neg
icebp
sbb
jmp
adc
add
sbb
adc
add
sbb
(bad)
call
adc
add
add
add
xor
add
add
adc
aam
add
pop
or
push
rcl
add
push
sbb
xor
sub
add
inc
adc
(bad)
(bad)
inc
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
inc
add
add
add
bound
add
jg
add
xchg
add
add
or
or
adc
sub
push
sbb
add
popa
pop
sub
add
add
mov
add
mov
or
jnp
(bad)
call
add
jmp
rol
sbb
pop
or
pop
or
cmp
(bad)
call
adc
add
push
sbb
add
sub
add
and
add
add
les
add
sub
add
push
sub
or
aaa
(bad)
(bad)
call
sbb
add
pop
sbb
add
sub
add
pop
add
push
inc
or
add
add
add
add
add
push
add
add
add
adc
add
sbb
add
lds
add
pop
or
sub
or
stc
sbb
neg
sub
pop
(bad)
cmp
(bad)
(bad)
call
adc
push
or
adc
sar
(bad)
call
or
add
sbb
pusha
(bad)
(bad)
call
cmp
(bad)
call
or
(bad)
call
adc
add
sbb
sub
add
adc
cmp
add
add
adc
fwait
(bad)
(bad)
call
or
add
pop
inc
sldt
add
(bad)
(bad)
jmp
add
adc
add
add
(bad)
jmp
(bad)
(bad)
inc
add
add
add
add
add
mov
add
add
add
xchg
add
add
(bad)
(bad)
call
adc
add
sbb
pop
adc
inc
(bad)
(bad)
call
pop
add
add
sbb
add
sub
add
cmp
(bad)
(bad)
call
adc
add
es
or
and
(bad)
call
or
add
sbb
add
sub
add
and
add
add
and
(bad)
add
push
sub
or
adc
stc
std
(bad)
call
push
add
add
xor
test
push
cmp
(bad)
(bad)
call
or
loop
(bad)
call
or
sar
(bad)
call
add
add
and
jae
or
es
or
or
or
mov
(bad)
call
pop
add
push
adc
sbb
cmp
add
add
inc
add
and
test
pop
or
pop
or
xchg
(bad)
(bad)
call
cmp
or
xchg
(bad)
call
or
cmp
(bad)
call
push
add
push
and
lahf
or
adc
or
pop
or
pop
std
(bad)
call
or
add
or
push
or
or
dec
std
(bad)
call
or
add
cmp
or
sbb
xor
or
add
sbb
add
sub
add
(bad)
(bad)
(bad)
call
push
or
sbb
(bad)
call
pop
add
add
or
pop
or
or
(bad)
call
adc
sbb
add
sub
add
adc
data16
add
add
add
xor
nop
add
add
add
adc
or
inc
or
add
cmp
add
xor
add
cmp
add
add
add
add
add
add
add
add
add
add
adc
push
rol
add
add
adc
cmp
inc
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
cdq
add
add
add
add
add
add
add
add
mov
add
sbb
add
mov
adc
add
and
test
(bad)
aaa
popa
adc
sbb
leave
add
add
or
add
xchg
ror
add
add
mov
cmps
dec
sbb
cmp
(bad)
call
adc
jae
(bad)
call
sldt
push
sbb
sub
add
cmp
add
pop
cmp
add
adc
push
(bad)
(bad)
call
or
add
adc
push
or
or
add
cmp
or
add
sbb
xor
sub
add
or
(bad)
(bad)
call
sbb
add
push
adc
cmp
(bad)
(bad)
call
adc
push
(bad)
(bad)
call
pop
add
add
sbb
std
add
add
cmp
add
add
cmp
add
add
pop
inc
add
add
adc
add
pop
push
adc
fdivrp
(bad)
call
or
add
push
or
or
xchg
(bad)
(bad)
inc
add
sahf
add
add
xchg
add
add
or
add
sub
or
add
add
add
add
add
add
add
add
add
inc
add
add
adc
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
pop
sub
sbb
icebp
push
sub
rcl
pop
or
adc
dec
(bad)
(bad)
call
add
cmp
(bad)
(bad)
call
or
add
aaa
(bad)
(bad)
call
adc
add
and
pop
(bad)
ficomp
push
inc
push
add
add
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
dec
(bad)
(bad)
call
sbb
add
cld
std
(bad)
call
sbb
add
pop
push
xor
sub
add
or
or
add
loop
(bad)
call
or
add
adc
cmp
sub
sbb
sbb
add
(bad)
std
(bad)
call
sbb
add
es
or
or
std
(bad)
call
sbb
add
push
adc
add
adc
adc
xchg
add
add
add
cmp
inc
or
add
add
add
add
add
add
add
add
add
lar
add
add
add
add
add
add
pop
or
or
push
add
add
or
or
add
add
(bad)
inc
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
add
lahf
add
add
add
add
push
add
push
es
or
sub
push
sbb
sbb
add
or
or
xchg
rol
add
add
pop
or
pop
adc
test
or
rcl
add
push
es
or
jno
(bad)
call
push
add
add
or
push
inc
or
add
pop
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
or
idiv
(bad)
call
sub
sbb
hlt
pop
push
or
cs
(bad)
call
pop
add
add
jle
pop
xor
sbb
or
add
popa
pop
jle
inc
add
add
sahf
add
add
or
or
(bad)
call
sbb
add
es
sub
adc
out
(bad)
(bad)
call
push
add
add
inc
dec
ja
and
es
or
pop
or
sar
(bad)
call
pop
add
add
or
sbb
pop
or
cmp
(bad)
call
cmp
or
add
push
add
sub
add
or
(bad)
cmp
push
add
push
push
sbb
add
sub
add
dec
(bad)
(bad)
(bad)
cmp
add
add
or
cmp
(bad)
call
or
jp
(bad)
call
pop
add
push
cmp
(bad)
(bad)
call
cmp
(bad)
call
pop
or
cmp
(bad)
(bad)
call
or
pop
(bad)
(bad)
call
or
add
push
add
sub
add
call
cmp
(bad)
(bad)
call
(bad)
call
push
add
add
rcr
and
cmps
pop
pop
or
cmp
std
(bad)
call
or
sbb
(bad)
call
or
add
cmp
std
(bad)
inc
and
add
add
repnz
push
sub
or
or
hlt
std
(bad)
call
adc
add
and
ret
sub
es
or
cdq
(bad)
(bad)
call
cmp
or
into
std
(bad)
call
or
add
and
jge
and
mov
jle
or
add
sub
adc
adc
mov
add
or
add
cmp
add
pop
inc
or
add
add
add
add
add
add
add
add
add
add
add
fld
add
(bad)
add
add
add
add
add
add
add
add
add
fwait
add
add
pop
add
push
sbb
pop
adc
or
or
add
sbb
or
add
add
(bad)
inc
add
add
add
inc
add
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
cwde
add
add
add
add
add
add
or
inc
add
add
or
cmp
add
sbb
mov
push
and
ror
outs
es
or
cmp
(bad)
call
push
or
jg
(bad)
call
push
add
push
pop
pop
xor
sub
add
sbb
or
gs
(bad)
call
pop
add
add
pop
and
inc
and
or
sbb
in
add
push
cmp
add
add
cmp
add
add
cmp
add
add
pop
add
push
es
sbb
sub
(bad)
call
add
mov
jns
arpl
or
sbb
cmp
(bad)
(bad)
inc
popa
pop
and
add
add
xchg
add
pop
or
cld
(bad)
(bad)
call
add
sbb
add
sub
add
or
jg
add
pop
or
loopne
(bad)
call
sldt
push
sbb
xor
add
and
add
add
or
add
sub
adc
mov
or
add
or
push
sub
cmp
pop
add
add
sbb
add
sub
add
dec
(bad)
(bad)
(bad)
cmp
add
add
or
cmp
(bad)
(bad)
call
or
test
(bad)
call
adc
add
pop
or
sbb
sbb
jno
(bad)
call
push
add
push
adc
sbb
pusha
(bad)
(bad)
call
add
push
xor
sub
add
(bad)
std
(bad)
call
(bad)
cmp
(bad)
call
push
add
add
sbb
sbb
cmp
std
(bad)
call
(bad)
call
pop
add
push
and
scas
inc
pop
and
cwde
cmp
or
push
inc
or
add
cmp
(bad)
(bad)
inc
(bad)
dec
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
call
or
cmp
std
(bad)
call
or
add
imul
inc
stos
sbb
cmp
or
or
(bad)
call
pop
add
add
sbb
add
sub
add
sbb
pop
or
mov
(bad)
call
pop
add
push
sbb
add
sub
adc
adc
std
add
add
add
cmp
add
pop
inc
or
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
xor
add
and
add
pop
(bad)
sub
rol
xor
xlat
js
repnz
dec
pop
or
or
add
add
inc
add
add
add
add
add
add
add
jno
add
mov
add
mov
add
rol
add
in
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
or
add
add
or
lahf
ror
pop
xor
sub
add
or
cmp
(bad)
call
pop
add
add
jg
loopne
and
pop
sti
sub
es
or
das
add
add
or
data16
(bad)
call
add
sbb
add
sub
add
add
(bad)
call
or
dec
(bad)
(bad)
call
push
add
add
jns
(bad)
and
or
pop
or
hlt
add
add
adc
sub
(bad)
call
or
add
sbb
add
sub
add
or
(bad)
(bad)
(bad)
inc
and
add
add
clc
add
add
fadd
add
sub
stos
(bad)
(bad)
(bad)
cmp
add
pop
pop
inc
add
add
pop
add
add
adc
(bad)
(bad)
call
pop
add
add
sbb
pop
or
cmp
(bad)
(bad)
call
push
add
add
movs
cli
sub
in
pop
or
rcr
add
push
es
scas
(bad)
(bad)
call
push
add
add
pop
xor
sub
add
pop
push
sub
cmp
adc
add
sbb
mov
or
or
(bad)
call
adc
add
and
mov
or
cmp
inc
or
add
mov
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
add
add
or
cmp
std
(bad)
call
or
xor
(bad)
call
sbb
add
and
mov
cmp
pop
or
adc
adc
(bad)
call
pop
add
add
shl
cmp
and
mov
jae
or
cmp
cmp
std
(bad)
call
pop
add
add
es
push
cmps
add
rcr
add
push
es
adc
(bad)
std
(bad)
call
push
add
push
es
or
or
(bad)
std
(bad)
call
or
add
cmp
(bad)
call
cmp
(bad)
(bad)
call
lods
std
(bad)
call
pop
add
push
sbb
push
cmp
(bad)
call
cmp
(bad)
call
cmp
(bad)
call
or
mov
(bad)
call
add
sbb
add
sub
add
or
push
or
jae
(bad)
call
push
add
push
and
inc
cld
cmp
pop
or
add
sub
add
sbb
adc
dec
push
add
or
adc
adc
sub
rcl
add
push
push
sbb
add
sub
add
or
add
add
add
add
add
add
add
add
add
mov
add
ret
add
add
add
add
add
add
and
add
and
add
sub
add
push
and
add
and
add
add
retf
add
push
cmp
add
add
add
or
add
add
add
mov
add
xor
add
scas
(bad)
(bad)
call
add
add
add
add
add
add
or
adc
adc
cmp
(bad)
call
sldt
push
sbb
or
sub
sbb
sbb
or
(bad)
(bad)
(bad)
call
pop
add
push
push
sbb
add
sub
add
add
add
lods
add
add
adc
cmp
(bad)
call
pop
add
add
sbb
add
adc
cmp
(bad)
(bad)
call
or
add
push
xor
sub
add
adc
adc
cmp
(bad)
(bad)
call
or
add
sbb
xor
sub
sbb
sub
sub
sbb
or
(bad)
(bad)
(bad)
call
push
add
add
pop
inc
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
adc
sub
(bad)
call
sub
sbb
(bad)
(bad)
call
pop
add
add
xor
xor
pop
adc
add
adc
add
add
add
scas
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
or
or
adc
add
aas
sbb
das
inc
pop
adc
adc
inc
adc
add
pop
(bad)
(bad)
inc
add
add
add
add
add
jg
add
cdq
add
add
add
add
add
add
add
add
add
add
add
fwait
add
add
add
add
add
add
add
add
pop
(bad)
(bad)
call
or
mov
adc
sub
push
and
test
and
adc
cmp
(bad)
(bad)
call
or
or
jle
(bad)
call
or
add
and
xchg
dec
dec
and
cwde
mov
sbb
adc
pop
(bad)
(bad)
call
push
add
push
and
push
push
sbb
sbb
add
call
(bad)
(bad)
call
add
adc
es
or
add
es
(bad)
call
adc
add
sbb
xor
sub
add
ret
(bad)
(bad)
call
cmp
add
sbb
or
add
sbb
add
and
imul
and
push
pop
pop
pop
adc
frstor
add
cmp
add
cmp
cmp
(bad)
call
adc
or
aam
(bad)
call
or
add
jle
add
add
mov
adc
or
mov
adc
add
sbb
xor
sub
add
or
retf
add
add
or
or
mov
sbb
add
sbb
add
sub
add
or
adc
dec
inc
push
add
add
add
add
add
imul
add
mov
movlps
cmp
(bad)
call
adc
add
sbb
xor
sub
add
nop
add
add
popf
add
add
or
add
adc
push
cmps
add
push
jae
add
or
jle
add
and
add
add
loop
add
sbb
adc
cmp
(bad)
(bad)
call
push
add
push
sbb
or
sbb
xor
push
adc
cmp
(bad)
(bad)
call
add
sbb
sbb
cmp
std
(bad)
call
add
sub
rcl
es
adc
aam
(bad)
call
or
add
adc
es
or
add
adc
cmp
adc
add
sbb
or
pop
adc
test
adc
add
push
sbb
add
sub
add
ficom
push
and
add
add
repnz
add
retf
add
push
fcomp
inc
or
add
arpl
add
and
add
fadd
add
imul
add
jns
add
cwde
add
add
add
pop
or
or
adc
pop
add
add
sbb
clc
adc
or
adc
inc
adc
add
jbe
(bad)
inc
add
add
add
add
add
add
add
js
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
ja
add
pop
sub
or
sub
push
cmp
(bad)
call
sub
sub
dec
pop
push
adc
sub
push
pop
xor
sub
add
inc
(bad)
(bad)
dec
inc
push
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
adc
cmp
(bad)
call
push
add
add
adc
sbb
push
sbb
or
inc
(bad)
(bad)
call
pop
add
add
rcr
add
push
es
or
or
xor
(bad)
call
or
add
(bad)
lods
dec
and
sbb
popa
adc
es
push
sbb
or
adc
(bad)
call
adc
add
sbb
mov
add
(bad)
call
adc
add
push
push
xor
sub
add
sbb
pop
adc
inc
add
add
add
add
add
add
add
add
add
sbb
add
es
sbb
add
sub
pushf
add
add
jle
(bad)
call
adc
cmp
or
add
sbb
cmps
(bad)
(bad)
call
add
sbb
push
pop
movlps
cmp
add
add
sbb
add
sub
add
or
cmp
(bad)
call
adc
add
es
push
pop
or
or
imul
add
push
and
cmc
xor
clc
in
ja
adc
sbb
(bad)
(bad)
(bad)
call
(bad)
(bad)
call
pop
add
add
cmp
std
(bad)
call
adc
cmp
push
add
push
sbb
xor
sub
add
sub
add
inc
sbb
add
add
add
add
mov
add
add
add
add
add
add
xor
add
add
add
adc
dec
sbb
sub
rcl
add
push
push
sbb
add
sub
add
inc
or
add
mov
(bad)
inc
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
sub
add
jg
inc
add
add
or
add
push
or
mov
or
add
push
cmp
or
sub
es
inc
or
add
cdq
add
add
add
add
add
mov
add
ins
add
add
add
test
or
cmp
(bad)
call
add
sbb
add
add
or
pop
(bad)
(bad)
call
sldt
push
sbb
add
add
or
inc
(bad)
(bad)
call
push
add
push
es
or
or
aaa
(bad)
(bad)
call
adc
add
sbb
sbb
cmp
(bad)
(bad)
call
or
add
sbb
sbb
cmp
(bad)
(bad)
call
pop
add
add
sbb
add
sub
es
sbb
add
es
cmp
(bad)
(bad)
call
adc
add
sbb
add
sub
add
or
(bad)
call
push
add
add
or
and
add
add
cmc
add
add
or
add
sub
or
or
(bad)
(bad)
(bad)
call
adc
add
add
sub
xor
add
add
add
add
adc
cdq
add
add
or
or
or
add
or
pop
inc
or
add
leave
(bad)
(bad)
inc
add
add
add
dec
add
add
add
pop
add
pushf
add
add
inc
or
add
xchg
add
add
add
add
add
add
add
aaa
add
add
add
sbb
sub
add
push
das
jge
and
push
js
or
sbb
pop
sbb
sub
push
sbb
sbb
pop
add
add
sbb
add
add
sbb
add
sbb
sub
jge
inc
add
add
(bad)
(bad)
(bad)
call
cmp
(bad)
call
push
add
add
neg
bound
and
jb
or
pop
or
inc
(bad)
(bad)
call
pop
add
push
sbb
sbb
cmp
push
add
add
cmp
(bad)
inc
pop
xor
xor
or
sbb
pop
or
push
(bad)
(bad)
call
or
add
add
sub
add
adc
adc
push
add
add
add
adc
or
inc
or
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
or
add
add
add
add
add
add
add
push
add
jle
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
or
add
add
push
add
sub
add
outs
(bad)
(bad)
inc
inc
add
add
add
add
add
add
js
add
pop
or
cmp
(bad)
call
or
popf
fcmovnu
push
and
push
jmp
or
add
add
call
or
sbb
add
sub
add
sbb
add
pop
or
call
or
or
add
or
add
les
add
or
add
or
call
push
add
add
sbb
add
sub
add
cmp
cmp
or
call
pop
add
push
sbb
lahf
add
add
cmp
or
call
and
add
es
add
or
pop
push
or
call
sbb
add
sbb
xor
sub
add
mov
(bad)
call
(bad)
call
sbb
add
and
or
and
repz
sbb
inc
add
add
add
add
add
add
add
sbb
add
es
sbb
add
sub
xchg
add
add
or
cmp
(bad)
call
prefetch
fs
(bad)
call
sbb
add
sbb
sub
add
or
or
call
and
add
and
add
jmp
push
or
or
add
(bad)
call
or
call
sbb
push
xor
sub
add
add
or
pop
or
call
pop
add
push
push
sbb
add
sub
add
add
or
pop
or
(bad)
call
and
add
sbb
adc
adc
nop
add
add
add
adc
push
add
add
or
add
push
or
add
add
add
add
add
add
add
add
add
ja
add
cdq
add
add
add
aad
add
test
add
add
add
sbb
sbb
pop
or
add
push
sbb
add
add
add
push
sub
push
sub
adc
add
or
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
call
add
(bad)
(bad)
push
or
call
sbb
sbb
pop
or
call
or
or
add
add
cmp
or
call
or
sbb
add
sub
add
cmp
or
call
or
add
jle
add
add
enter
or
or
or
call
pop
add
push
es
or
or
call
sbb
add
cmp
call
or
or
cmp
(bad)
(bad)
call
and
add
and
(bad)
pop
and
mov
rcr
sbb
call
and
add
cmp
(bad)
(bad)
inc
inc
add
add
add
(bad)
(bad)
in
(bad)
(bad)
dec
(bad)
call
(bad)
call
or
(bad)
(bad)
(bad)
call
sub
sbb
(bad)
call
push
add
add
add
sub
xor
add
add
adc
add
cmp
add
add
inc
or
add
add
add
mov
add
add
add
xchg
add
or
add
pusha
add
add
add
add
push
add
push
es
or
add
push
or
add
add
add
add
add
add
add
add
add
add
mov
add
test
add
mov
add
sub
sub
rcr
add
sbb
or
or
add
add
rcr
add
push
sbb
add
push
sbb
pop
or
add
add
push
xor
sub
add
inc
add
add
add
(bad)
(bad)
jmp
add
add
add
add
or
xor
(bad)
call
sub
sbb
call
sbb
add
cmp
or
add
leave
add
or
push
sub
push
sbb
rcr
sub
sbb
call
or
add
adc
jge
or
es
(bad)
(bad)
call
or
call
push
add
push
and
imul
and
clc
push
pop
or
or
call
push
add
push
sbb
xor
sub
add
adc
add
add
sub
adc
adc
jo
add
adc
add
sbb
add
add
or
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
sbb
sub
ror
add
add
sbb
sbb
sub
push
sbb
sbb
or
add
push
and
int
add
mov
or
sbb
or
add
push
es
sub
fiadd
add
or
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
(bad)
(bad)
call
pop
add
push
es
or
or
call
sbb
or
add
add
(bad)
(bad)
dec
add
dec
add
add
add
sbb
push
(bad)
(bad)
call
or
add
popf
mov
and
xor
es
add
add
retf
or
pop
or
call
pop
add
push
push
sbb
add
sub
add
call
or
add
sbb
mov
sub
pop
add
push
sbb
call
push
add
add
or
stc
data16
xchg
int3
sub
sbb
or
call
push
add
add
or
push
adc
adc
mov
add
adc
add
sub
or
add
push
and
in
sbb
addr16
or
add
add
add
add
add
add
add
add
add
call
add
add
loop
add
sti
add
add
add
add
add
sbb
adc
add
sbb
or
add
sbb
or
add
push
add
sub
add
cmp
or
or
add
add
cmp
(bad)
pop
or
add
add
cmp
add
add
and
add
es
cmp
call
or
add
or
add
add
add
add
add
add
add
add
add
sar
call
add
sbb
add
pop
or
call
or
add
pop
xor
sub
add
or
mov
add
add
or
or
call
sbb
add
sbb
pop
sbb
call
and
add
sbb
xchg
jle
add
add
retf
add
or
sbb
call
or
add
or
(bad)
(bad)
call
push
add
push
and
xchg
add
and
jne
jns
or
add
add
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
call
or
or
cmp
or
add
push
add
sub
dec
fadd
shl
add
push
es
sbb
call
and
add
pop
or
ja
(bad)
call
push
add
add
or
push
add
add
add
add
xor
add
add
add
add
adc
lock
add
inc
or
add
retf
add
add
inc
add
add
add
add
add
inc
add
add
add
add
or
add
push
sbb
xor
sub
add
inc
push
add
add
add
xor
add
inc
add
add
add
je
add
mov
add
fwait
add
add
add
out
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
or
push
or
add
push
sbb
xor
sub
add
or
add
push
pop
sbb
add
add
sub
shl
add
push
sbb
call
or
add
sbb
or
call
push
add
push
sbb
xor
sub
add
adc
(bad)
call
cmp
(bad)
(bad)
call
push
add
add
or
or
(bad)
call
sbb
add
es
add
add
int3
add
or
pop
or
call
and
add
es
call
call
or
call
or
add
sbb
add
sub
add
call
cmp
(bad)
(bad)
call
or
call
and
add
shl
add
push
sbb
call
or
add
sbb
add
sub
add
sub
xor
jbe
(bad)
call
or
call
sbb
add
cmp
call
(bad)
call
sbb
cmc
xchg
ins
and
xchg
and
add
sub
add
xor
add
add
adc
inc
push
or
add
add
or
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
push
or
mov
add
sbb
or
add
add
or
sbb
ds
or
add
push
sbb
sub
shl
add
push
sbb
xor
sub
add
inc
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
call
imul
add
push
and
xchg
sbb
shl
add
push
es
(bad)
call
and
add
sbb
xor
sub
add
or
call
and
add
sbb
xor
sub
add
or
push
or
call
adc
add
push
add
sub
add
inc
or
add
sbb
add
add
add
popa
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
(bad)
mov
and
add
es
or
call
sldt
add
sbb
add
add
cmp
(bad)
call
or
call
and
add
jnp
add
add
add
add
jge
add
add
or
pop
jnp
add
add
sbb
or
call
adc
add
sbb
add
sub
add
sub
add
adc
or
add
add
xor
add
or
add
fld
add
adc
inc
sbb
add
adc
add
add
push
add
mov
add
add
add
add
add
add
pop
add
loope
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
xor
add
aaa
add
add
add
add
add
inc
add
pop
sbb
movntps
shl
sbb
add
sub
add
cmovne
add
popf
(bad)
(bad)
inc
add
add
add
add
add
add
add
jae
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
mov
add
add
add
add
add
add
add
sub
add
dec
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
jp
add
mov
add
mov
add
inc
add
sbb
add
add
push
add
add
add
rol
fild
add
add
add
add
add
arpl
add
popf
add
add
rol
add
es
add
inc
push
add
pop
push
adc
pop
sbb
or
sbb
(bad)
(bad)
(bad)
call
adc
add
jle
add
add
inc
push
inc
adc
cmp
(bad)
(bad)
call
and
add
es
or
or
(bad)
(bad)
call
sldt
add
pop
or
add
add
push
or
add
outs
rol
add
cmp
adc
or
adc
cmp
adc
add
adc
cmp
(bad)
(bad)
call
sub
(bad)
(bad)
(bad)
call
and
add
and
repz
xor
adc
sbb
pushf
add
add
and
(bad)
(bad)
(bad)
call
sub
add
es
std
(bad)
call
adc
sbb
adc
cmp
(bad)
call
and
add
adc
(bad)
add
pop
pop
adc
cmp
(bad)
call
adc
add
sbb
add
sub
add
mov
sbb
(bad)
(bad)
(bad)
call
sldt
add
cmp
sbb
(bad)
(bad)
(bad)
call
sldt
add
adc
es
sbb
or
(bad)
std
(bad)
inc
mov
add
sbb
adc
(bad)
pop
(bad)
(bad)
call
and
(bad)
std
(bad)
call
sldt
add
cmp
call
adc
cmp
std
(bad)
call
add
push
pop
adc
es
cmp
add
pop
adc
(bad)
std
(bad)
call
sldt
add
ins
das
mov
call
(bad)
cmp
adc
cmp
adc
add
sbb
add
sub
add
sbb
(bad)
call
adc
(bad)
std
(bad)
call
and
add
sbb
add
add
push
cmp
(bad)
(bad)
call
adc
cmp
(bad)
call
sldt
add
sbb
add
sub
add
adc
adc
cmp
(bad)
call
and
adc
shl
add
push
es
daa
adc
cmp
(bad)
call
add
push
sbb
xor
sub
add
adc
and
adc
pop
sbb
or
sub
(bad)
std
(bad)
call
add
push
sbb
add
sub
add
movlps
pop
sub
psignb
(bad)
call
adc
add
adc
sub
add
push
adc
add
sub
(bad)
cld
(bad)
call
add
push
sbb
xor
sub
add
push
cld
(bad)
(bad)
cmp
add
add
sbb
or
inc
cld
(bad)
call
adc
(bad)
cld
(bad)
call
sub
add
shl
add
push
es
cld
(bad)
call
adc
pop
push
adc
cmp
adc
add
fsubr
shl
and
adc
es
fild
add
sbb
pop
pop
xor
(bad)
cld
(bad)
call
sldt
add
adc
es
sti
(bad)
call
adc
(bad)
cld
(bad)
call
and
add
sbb
add
sub
add
or
add
or
cld
(bad)
call
adc
add
adc
es
pop
cmp
add
sbb
aas
add
add
sub
(bad)
cld
(bad)
call
and
add
and
cmp
imul
pop
adc
es
or
push
add
add
jnp
int3
adc
sub
add
push
lea
add
add
and
add
and
add
sub
xor
add
jp
adc
pop
sbb
or
pop
adc
cmp
sti
(bad)
call
adc
add
sub
add
aas
sti
(bad)
call
adc
cmp
adc
add
pop
xor
sub
add
and
(bad)
call
adc
sti
(bad)
call
sldt
add
sbb
mov
sbb
fwait
add
add
das
adc
cmp
daa
add
push
and
add
aas
popa
adc
es
sbb
or
loop
(bad)
(bad)
jle
add
add
or
add
and
rol
add
sub
and
add
and
add
sub
or
pop
pop
xor
(bad)
sti
(bad)
call
sub
add
sbb
sbb
xor
pabsd
(bad)
call
sldt
add
sbb
add
sub
add
or
or
movlps
cmp
sti
(bad)
call
and
add
push
sbb
add
sub
add
adc
or
or
(bad)
cli
(bad)
call
adc
add
fnstcw
sbb
sbb
fistp
or
fistp
adc
(bad)
cli
(bad)
call
and
add
adc
inc
adc
add
cmp
(bad)
inc
(bad)
dec
add
push
add
add
add
bound
add
dec
(bad)
(bad)
push
sti
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
add
mov
(bad)
(bad)
call
and
(bad)
cli
(bad)
call
sldt
add
pop
adc
pop
or
(bad)
cli
(bad)
call
adc
add
and
jo
and
push
push
pop
adc
es
or
jp
(bad)
call
adc
pop
sbb
or
or
(bad)
cli
(bad)
call
adc
add
adc
xor
(bad)
call
cmp
(bad)
(bad)
call
adc
and
(bad)
call
adc
call
and
phsubd
(bad)
call
and
add
sbb
pop
pop
and
(bad)
stc
(bad)
call
and
add
push
sbb
add
add
pop
stc
(bad)
call
adc
cmp
stc
(bad)
call
and
fs
add
es
sbb
or
or
(bad)
stc
(bad)
call
adc
add
sbb
add
sub
add
adc
cmp
(bad)
call
sbb
(bad)
stc
(bad)
call
sub
add
push
sbb
add
add
add
cmp
sub
stc
(bad)
call
daa
add
push
es
cmp
(bad)
call
cmp
(bad)
call
and
stc
(bad)
call
adc
add
pop
or
enter
jle
add
add
or
add
pop
cmp
ins
sub
fld
add
and
add
add
inc
add
push
adc
pop
adc
cmp
(bad)
call
add
push
sbb
xor
sub
add
sbb
or
push
adc
cmp
stc
(bad)
call
adc
add
pop
or
pop
pop
sbb
or
push
adc
cmp
clc
(bad)
call
adc
add
sub
add
sbb
or
push
clc
(bad)
call
xor
(bad)
clc
(bad)
call
and
push
xor
sub
add
push
adc
adc
sub
ror
add
add
adc
inc
or
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
xor
add
add
add
add
add
add
adc
adc
sub
ror
add
add
adc
sbb
movntps
add
push
xor
sub
add
sub
sbb
ror
add
add
adc
adc
add
add
mov
add
add
add
add
add
add
add
add
add
pop
adc
sbb
(bad)
(bad)
(bad)
call
and
mov
xor
adc
sub
add
sub
frstor
add
add
mov
add
adc
inc
push
add
add
add
dec
add
add
(bad)
call
add
add
add
add
add
add
adc
cmp
(bad)
(bad)
call
sldt
add
shl
and
mov
(bad)
sbb
cmp
(bad)
call
cmp
cmp
(bad)
(bad)
call
adc
cmp
(bad)
(bad)
call
sldt
add
(bad)
mov
mov
ss
adc
es
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
call
adc
cmp
(bad)
(bad)
call
and
add
sbb
xor
sub
add
frstor
add
jne
add
add
sub
and
add
and
add
sub
and
add
add
lea
add
sub
add
push
adc
add
inc
push
inc
(bad)
adc
and
vmovups
sub
add
pop
lea
add
add
mov
add
movs
add
add
push
add
push
and
add
add
mov
cwde
add
push
mov
add
and
add
add
jmp
pop
or
ins
add
add
pop
add
add
out
add
push
sub
add
jp
rol
add
mov
add
sub
add
push
fnstsw
add
sbb
or
add
add
add
add
add
add
add
add
add
add
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
adc
stc
push
sub
sbb
repz
lock
in
jle
add
add
or
add
pop
and
add
push
and
int3
add
add
enter
fcom
adc
adc
inc
or
add
xchg
add
add
add
pop
add
add
add
sbb
add
inc
add
xor
add
add
add
add
add
add
or
movntps
ror
add
add
adc
adc
inc
adc
add
ins
(bad)
(bad)
inc
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
or
push
pop
push
adc
sub
add
jo
cmp
pop
adc
sbb
aas
sbb
cmp
adc
movntps
add
sbb
add
sub
add
or
add
add
(bad)
(bad)
push
add
jbe
add
hlt
add
add
add
add
add
add
add
add
adc
pop
or
(bad)
(bad)
(bad)
call
daa
add
push
push
pop
xor
sub
add
or
push
sbb
(bad)
(bad)
(bad)
call
sldt
add
sbb
add
sub
add
adc
pop
adc
(bad)
(bad)
(bad)
call
sldt
add
adc
es
(bad)
(bad)
call
adc
cmp
(bad)
(bad)
call
sldt
add
sbb
or
or
push
cmp
adc
cmp
(bad)
(bad)
call
and
add
push
adc
es
sub
push
add
add
mov
(bad)
call
adc
cmp
(bad)
(bad)
call
sldt
add
sbb
add
sub
add
adc
pop
or
push
cmp
(bad)
call
or
(bad)
(bad)
(bad)
call
sldt
add
sbb
add
sub
add
(bad)
(bad)
(bad)
call
and
add
sbb
add
sub
add
or
adc
cmp
(bad)
call
and
add
and
arpl
(bad)
sbb
pop
(bad)
(bad)
call
add
(bad)
call
sti
(bad)
(bad)
call
cmp
(bad)
(bad)
call
or
(bad)
(bad)
(bad)
call
sub
add
and
xor
es
std
(bad)
call
(bad)
(bad)
call
adc
add
sbb
add
sub
add
adc
pop
adc
cmp
sldt
add
cmp
movlps
cmp
std
(bad)
call
sldt
add
sbb
add
add
call
cmp
or
std
(bad)
call
sldt
add
adc
add
sub
inc
xor
add
add
add
pop
add
dec
add
add
add
jno
add
pop
or
add
add
add
pop
add
test
add
jnp
add
add
add
adc
adc
and
add
or
add
add
adc
add
sub
and
add
es
and
add
sub
or
inc
add
add
(bad)
(bad)
inc
sub
adc
adc
dec
add
add
add
adc
push
inc
or
add
in
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
and
sbb
or
add
push
push
sbb
add
sub
add
inc
or
add
xchg
(bad)
(bad)
inc
add
add
add
add
add
jle
add
xchg
add
add
add
sbb
or
add
push
sbb
add
and
add
and
add
add
stos
add
push
sub
push
or
push
(bad)
call
add
add
test
cwde
xor
popa
or
add
add
add
add
add
add
add
add
add
or
xor
(bad)
call
sub
sbb
hlt
push
sub
sbb
out
sbb
(bad)
call
sub
add
push
or
(bad)
call
or
call
sldt
add
or
(bad)
call
or
call
and
add
sbb
xor
sub
add
sub
sub
sub
push
sbb
sbb
(bad)
call
or
call
and
add
and
scas
(bad)
push
and
icebp
cs
or
outs
add
add
add
xor
add
add
adc
retf
add
add
inc
or
add
call
add
add
add
add
add
add
add
add
add
push
sbb
add
push
and
addr16
aas
and
or
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
jmp
add
add
cmp
add
add
cmp
add
add
or
add
push
and
lds
xchg
pop
pop
or
(bad)
call
or
add
add
sbb
pop
or
or
add
push
and
jmp
inc
and
push
es
or
cs
(bad)
call
or
call
sub
add
sbb
or
call
sldt
add
cmp
(bad)
call
or
call
adc
add
pop
xor
sub
add
repnz
(bad)
inc
sub
pop
or
call
sub
add
push
sbb
add
sub
add
sub
shl
add
push
sbb
call
add
push
pop
sbb
add
sub
add
inc
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
call
sbb
cmp
(bad)
(bad)
call
and
sbb
add
add
sub
add
adc
data16
add
add
xor
add
add
pop
add
adc
xor
inc
or
add
ret
add
add
add
add
add
jae
add
or
add
pop
add
add
add
add
add
jg
add
shl
add
push
sbb
int3
push
or
or
add
add
push
add
sub
add
inc
or
add
mov
(bad)
inc
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
cmp
or
add
add
shl
add
push
sbb
push
or
or
add
add
or
(bad)
inc
sub
stos
add
add
push
(bad)
(bad)
call
push
add
add
scas
add
add
sti
add
add
or
sbb
or
add
add
and
je
enter
pop
or
pop
or
call
sub
add
sbb
cmp
(bad)
(bad)
inc
inc
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
call
or
repnz
(bad)
call
or
call
sldt
add
or
sbb
in
or
call
adc
add
push
arpl
scas
and
or
sbb
(bad)
call
sub
add
sbb
movs
adc
add
sub
xor
add
add
add
add
adc
or
add
push
push
or
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
prefetch
mov
add
push
push
or
or
add
add
push
cmp
add
add
or
sub
add
shr
add
push
es
or
add
add
fcmovnbe
out
or
loop
mov
pop
or
add
add
or
call
and
add
and
adc
push
pop
or
add
push
or
or
call
sub
add
sbb
add
sub
add
or
or
prefetch
sub
(bad)
call
add
push
sbb
jg
add
sbb
jl
sub
add
es
(bad)
call
sub
add
es
prefetch
add
(bad)
call
daa
add
push
sbb
or
call
adc
add
sbb
prefetch
(bad)
(bad)
call
and
add
sbb
push
or
call
adc
add
xchg
out
inc
or
arpl
es
inc
add
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
(bad)
jl
(bad)
inc
or
prefetch
xchg
(bad)
(bad)
call
daa
add
push
push
push
xor
sub
add
sub
inc
or
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
aas
(bad)
(bad)
(bad)
aas
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
jmp
or
call
and
add
and
imul
add
sub
add
xor
add
add
push
add
adc
sbb
add
pop
or
adc
adc
add
mov
into
das
and
aas
dec
pop
or
pop
inc
add
add
xlat
(bad)
(bad)
inc
add
add
sbb
push
inc
add
add
add
add
add
add
add
add
add
add
add
sub
add
es
sub
add
sub
add
sub
xor
enter
push
add
adc
push
sbb
pop
add
add
sbb
add
sub
add
inc
push
add
add
add
add
add
add
add
add
add
dec
add
add
add
popf
add
add
add
add
add
add
add
add
add
sub
add
inc
add
add
or
xchg
add
add
mov
pop
add
add
sbb
pop
add
add
or
sbb
add
push
push
sbb
add
sub
add
sub
push
or
add
add
sbb
add
sub
add
or
push
sbb
or
call
das
add
push
and
pop
mov
and
mov
es
inc
add
(bad)
(bad)
jmp
(bad)
push
add
add
or
call
pop
add
add
sbb
imul
or
add
add
add
inc
(bad)
(bad)
jmp
add
add
add
inc
(bad)
(bad)
jmp
add
add
(bad)
call
or
call
sub
sbb
outs
(bad)
(bad)
call
sub
add
es
or
or
call
pop
add
add
add
es
or
call
sub
pop
jb
arpl
jns
gs
pop
or
or
(bad)
call
pop
add
add
or
inc
sbb
call
or
call
add
push
sbb
add
add
push
(bad)
(bad)
inc
add
mov
add
and
add
add
stos
add
push
sub
sbb
(bad)
call
add
push
add
sub
xor
add
add
adc
loopne
add
or
add
add
add
dec
add
add
add
add
add
mov
add
add
add
push
add
add
or
add
push
or
add
add
add
adc
add
sub
add
pop
add
add
add
add
add
add
enter
fild
add
test
add
add
add
add
add
sub
pop
or
sub
or
pop
or
add
push
push
sbb
add
sub
add
(bad)
(bad)
(bad)
inc
inc
add
(bad)
(bad)
(bad)
jg
add
cmp
add
imul
add
add
sbb
(bad)
call
or
call
pop
add
add
cmp
(bad)
(bad)
call
or
call
pop
add
add
or
or
call
pop
add
add
or
push
or
call
pop
add
add
or
idiv
(bad)
call
or
call
das
add
push
and
jne
and
inc
aad
xor
or
sbb
or
call
pop
add
add
pop
cmp
call
call
pop
add
add
sbb
or
call
sub
add
and
in
push
dec
and
add
or
add
es
(bad)
call
pop
add
add
shr
add
push
es
or
or
call
sub
push
xor
sub
add
sub
add
adc
data16
add
add
xor
add
add
pop
add
adc
or
add
add
pop
in
inc
dec
and
xor
or
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
or
or
add
push
and
int
and
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
es
sbb
pop
add
add
rol
add
add
into
add
add
fwait
add
add
or
sbb
or
call
add
push
sbb
es
sub
push
es
or
call
pop
add
add
or
or
call
pop
add
add
sbb
jo
(bad)
call
sub
sbb
hlt
pop
sub
sbb
out
sbb
call
pop
add
add
jno
cmp
into
mov
sbb
call
sub
add
cmp
(bad)
(bad)
inc
sub
cs
or
cs
(bad)
inc
inc
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
call
call
sub
add
sub
add
xor
add
add
add
add
adc
jae
add
or
add
add
add
sub
add
fild
add
add
add
add
add
add
add
pop
add
add
or
add
push
sbb
or
add
add
add
add
add
add
add
add
add
jg
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
push
cmp
or
pop
add
add
add
add
sub
pop
or
sub
push
and
icebp
and
inc
mov
das
pop
or
(bad)
call
or
call
sub
or
(bad)
inc
inc
add
add
add
add
xchg
(bad)
(bad)
dec
add
add
or
call
pop
add
add
add
add
or
or
call
sub
add
pop
or
mov
add
sbb
in
(bad)
(bad)
call
sub
pop
or
call
pop
add
add
or
(bad)
call
call
sub
add
and
scas
out
and
es
sub
pop
or
call
pop
add
add
or
add
es
sbb
call
pop
add
add
sub
add
or
or
call
das
add
push
sbb
or
jae
(bad)
inc
sub
sbb
call
sub
add
sbb
sub
add
cmp
(bad)
call
or
call
pop
add
add
movs
push
add
add
add
xor
add
add
add
add
adc
sub
add
pop
or
push
rol
add
add
push
inc
add
add
loop
(bad)
inc
add
add
shr
add
push
es
add
push
sub
add
sub
add
adc
adc
add
add
add
adc
sbb
add
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
das
add
push
es
das
add
push
sub
or
inc
add
add
(bad)
(bad)
(bad)
inc
sub
add
xor
add
add
adc
rol
add
pop
or
add
push
rcl
add
add
adc
cwde
(bad)
(bad)
inc
add
add
add
sub
add
dec
add
add
add
cmps
add
add
add
add
add
add
add
add
add
imul
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
or
add
mov
push
sbb
xor
sub
add
sub
sub
xor
add
es
or
add
adc
add
push
es
add
add
cmp
adc
add
imul
add
add
adc
or
add
add
add
add
add
add
add
inc
add
add
(bad)
(bad)
call
or
cmp
(bad)
(bad)
call
adc
add
rol
add
mov
add
sbb
add
pop
cmp
or
or
(bad)
call
adc
add
or
cmp
(bad)
(bad)
call
adc
add
adc
push
sub
mov
add
pop
or
add
(bad)
(bad)
call
adc
add
adc
pop
or
or
cmp
(bad)
(bad)
call
adc
add
pushf
out
dec
adc
add
add
or
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
(bad)
call
add
add
xor
add
es
or
add
jno
(bad)
call
xor
add
pop
push
xor
sub
add
stos
jle
add
or
sbb
(bad)
(bad)
call
adc
add
xor
popa
dec
and
adc
sbb
or
xor
(bad)
call
xor
add
sbb
add
sbb
adc
push
(bad)
(bad)
call
adc
add
call
cmp
pop
adc
pop
or
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
call
call
call
adc
jmp
add
sbb
sub
add
or
sar
(bad)
call
xor
add
pop
adc
sbb
movlps
mov
adc
add
imul
and
adc
sub
add
adc
add
pop
or
std
(bad)
call
xor
add
adc
or
dec
(bad)
(bad)
call
push
adc
jg
(bad)
call
adc
add
adc
sbb
pop
(bad)
(bad)
call
adc
add
addr16
(bad)
call
xor
add
sbb
add
add
sub
adc
adc
cmp
add
adc
sub
add
pop
or
adc
xor
add
and
mov
or
push
inc
add
add
(bad)
(bad)
(bad)
inc
add
add
shl
add
push
es
xor
add
sub
add
sub
add
adc
adc
add
add
add
adc
sbb
add
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
xor
add
es
xor
add
sub
or
inc
add
add
(bad)
(bad)
(bad)
inc
sub
add
xor
add
add
add
add
adc
sub
add
pop
or
push
rcl
add
add
push
xor
sub
add
inc
add
add
(bad)
(bad)
inc
add
add
shl
add
push
es
xor
add
sub
add
sub
add
sbb
adc
or
add
sbb
add
sub
or
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
shl
add
sbb
or
rcl
adc
or
adc
add
adc
adc
mov
(bad)
inc
add
add
aaa
adc
sbb
add
sbb
add
add
add
add
add
sbb
or
xchg
sbb
stc
shl
add
sbb
add
adc
cmp
(bad)
jmp
add
pop
or
or
movlps
or
inc
add
push
sbb
or
adc
mov
(bad)
inc
add
add
add
add
add
add
add
jle
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
add
mov
add
fld
add
add
add
cmp
add
dec
add
add
add
add
add
test
add
or
add
add
push
adc
pop
or
or
mov
adc
adc
cmp
add
sbb
jmp
add
fst
add
cmp
push
add
add
and
add
and
add
sub
sbb
or
or
or
dec
(bad)
(bad)
call
cmp
add
push
sbb
add
sub
add
or
sbb
sub
adc
sub
(bad)
call
cmp
adc
sbb
or
add
add
pop
or
or
or
(bad)
call
adc
add
sbb
add
sub
add
or
fistp
adc
or
lock
(bad)
call
adc
mov
mov
or
sbb
adc
sar
(bad)
call
adc
add
sbb
add
sub
add
movlps
mov
adc
add
pop
movlps
stos
(bad)
(bad)
call
adc
cmp
aad
add
or
adc
(bad)
(bad)
call
xor
add
sbb
add
adc
jl
(bad)
call
cmp
add
sbb
add
add
pop
fstp
add
or
(bad)
(bad)
call
adc
sbb
add
add
adc
xor
outs
(bad)
add
or
pop
adc
xor
adc
add
cmp
or
or
sbb
inc
add
push
adc
or
add
add
(bad)
call
(bad)
jmp
(bad)
call
add
add
(bad)
push
add
xor
(bad)
inc
(bad)
inc
(bad)
(bad)
push
add
mov
(bad)
push
(bad)
(bad)
(bad)
cmp
(bad)
inc
(bad)
call
std
(bad)
call
adc
add
adc
sbb
pushf
(bad)
(bad)
call
cmp
push
adc
stos
std
(bad)
call
adc
add
sbb
add
sub
add
add
add
(bad)
(bad)
cmp
(bad)
inc
(bad)
inc
(bad)
(bad)
jns
(bad)
jmp
(bad)
(bad)
(bad)
mov
adc
outs
std
(bad)
call
inc
add
push
sbb
or
sbb
or
adc
pop
std
(bad)
call
adc
add
adc
sbb
sub
adc
or
inc
std
(bad)
call
adc
push
ja
and
movs
pop
fsubr
adc
sbb
or
or
or
and
(bad)
call
adc
add
pop
or
or
adc
adc
(bad)
call
adc
das
iret
sub
and
adc
add
add
or
adc
cmp
cld
(bad)
call
adc
adc
add
mov
adc
adc
inc
or
add
popa
add
add
add
ins
add
add
add
add
add
inc
add
add
add
add
add
push
add
add
add
add
adc
pop
or
or
rcl
inc
push
add
add
add
add
add
adc
add
adc
add
push
add
add
adc
sub
sub
pop
or
icebp
pop
sub
push
sub
pop
or
out
adc
add
inc
or
cmp
(bad)
dec
sub
sbb
or
imul
call
sub
sbb
push
pop
or
or
pop
(bad)
(bad)
call
sub
or
add
or
adc
pop
or
or
inc
(bad)
(bad)
(bad)
fcomp
or
or
or
or
adc
add
or
or
(bad)
(bad)
inc
add
add
add
add
add
add
je
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
sar
add
push
push
push
xor
sub
add
pop
inc
add
add
add
add
add
add
add
add
inc
add
add
adc
(bad)
rol
add
sbb
xor
sub
add
sub
sub
sbb
or
jo
(bad)
call
adc
sbb
or
or
pop
(bad)
(bad)
call
adc
add
push
xor
sub
add
sub
sbb
loop
or
adc
pop
or
or
cmp
cmp
add
and
ins
loop
and
es
popa
adc
pop
or
or
and
(bad)
call
adc
add
adc
pop
adc
pop
or
or
or
(bad)
call
xor
add
sbb
xor
sub
add
sub
jno
or
or
icebp
(bad)
(bad)
call
adc
add
push
xor
sub
add
or
add
add
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
sti
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
sti
(bad)
(bad)
call
adc
mov
adc
sbb
add
sub
add
or
or
mov
adc
add
pop
adc
pop
or
or
(bad)
(bad)
(bad)
call
adc
add
add
sub
inc
sbb
add
add
add
add
add
add
add
add
add
xor
or
add
sbb
push
pop
adc
or
push
sar
add
push
push
push
xor
sub
add
or
add
add
add
add
add
add
add
arpl
add
jnp
add
nop
add
add
add
add
add
add
add
add
add
add
add
arpl
add
add
add
add
add
add
outs
add
add
add
add
adc
or
fwait
rol
add
and
and
and
adc
adc
add
add
or
pop
or
adc
or
jb
(bad)
call
cmp
add
and
sbb
fisubr
sbb
fiadd
add
sbb
or
push
(bad)
(bad)
call
cmp
add
and
pushf
dec
and
adc
es
or
mov
adc
cmp
(bad)
(bad)
call
xor
adc
es
adc
cmp
(bad)
(bad)
call
adc
add
adc
es
outs
(bad)
add
or
pop
or
or
add
(bad)
call
adc
cmp
(bad)
(bad)
call
inc
add
push
sbb
adc
pop
adc
or
jecxz
(bad)
call
adc
add
cmp
add
push
cmp
add
pop
adc
or
(bad)
call
adc
add
push
sub
push
cmp
add
add
sub
pop
or
or
cmps
(bad)
(bad)
call
inc
add
push
sbb
xor
sub
add
cmp
add
add
adc
cmp
inc
add
push
frstor
add
cmp
adc
or
jno
(bad)
call
add
push
and
loop
and
aad
popa
adc
sbb
imul
or
dec
(bad)
(bad)
call
adc
sbb
add
sub
add
or
cmp
(bad)
(bad)
call
adc
add
shl
and
adc
es
outs
aad
add
or
add
push
cmp
mov
add
pop
push
adc
cmp
std
(bad)
call
adc
add
mov
fcom
and
ins
adc
adc
adc
inc
or
(bad)
(bad)
inc
add
add
(bad)
inc
add
add
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
call
or
mov
add
in
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
imul
add
xchg
add
lea
add
push
adc
pop
adc
cmp
(bad)
call
cmp
add
sbb
add
add
adc
or
pop
std
(bad)
call
xor
push
xor
sub
add
adc
pop
or
or
inc
std
(bad)
call
adc
add
sbb
add
sub
add
sub
es
(bad)
call
inc
add
push
and
fcomp
outs
jecxz
pop
pop
adc
es
sub
pop
adc
std
(bad)
call
xor
add
push
sbb
add
sub
add
cmp
call
or
ins
(bad)
(bad)
call
adc
cmp
cld
(bad)
call
adc
add
adc
es
mov
add
pop
adc
adc
inc
or
add
inc
add
add
add
add
add
inc
add
add
add
ins
add
add
add
pop
add
add
add
add
add
or
add
push
adc
or
pop
sub
adc
add
add
add
add
add
add
add
add
add
add
add
adc
sub
neg
repz
lock
or
in
push
sub
sbb
out
adc
add
inc
or
sub
sbb
(bad)
(bad)
call
sub
sbb
add
or
pop
cmp
call
repnz
outs
mov
adc
or
pop
cmp
(bad)
(bad)
fcomp
adc
sbb
or
push
rcl
add
add
push
xor
sub
add
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
adc
sub
rcl
add
add
adc
popa
and
adc
sbb
outs
sbb
ins
sbb
imul
or
add
add
add
add
add
add
add
add
add
add
xor
sub
xor
sub
ins
adc
inc
add
add
add
(bad)
inc
add
add
(bad)
(bad)
call
adc
push
(bad)
(bad)
call
inc
add
push
and
cmp
popa
and
or
sbb
or
ret
stc
sbb
or
sub
adc
add
sbb
call
sbb
(bad)
call
adc
add
sbb
cld
lods
ds
adc
add
add
inc
sbb
add
add
add
add
add
add
inc
add
add
add
add
xor
leave
add
add
sub
adc
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
es
adc
sub
sub
add
add
add
add
add
add
add
add
add
add
adc
sub
sub
shl
add
push
sbb
add
adc
sub
add
add
(bad)
(bad)
(bad)
inc
sbb
or
or
or
adc
adc
inc
mov
pop
adc
adc
jge
(bad)
inc
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
jl
add
xchg
add
add
add
add
add
add
add
add
add
jb
add
mov
add
sahf
add
add
or
or
xchg
rcl
add
add
adc
pop
or
adc
jge
(bad)
call
adc
add
sbb
or
or
or
imul
call
inc
add
push
fst
add
cmp
add
pop
pop
dec
sub
jmp
add
sub
add
or
adc
or
aaa
(bad)
(bad)
call
xor
add
and
mov
and
lahf
push
xor
or
sbb
pop
add
add
or
or
adc
adc
add
sbb
add
sub
add
cmp
add
pop
or
cmp
add
sbb
or
repnz
(bad)
call
adc
add
sub
add
dec
pop
or
sbb
add
pop
adc
or
sar
(bad)
call
cmp
add
push
adc
sbb
add
pop
adc
mov
adc
add
adc
add
add
or
adc
or
mov
adc
add
sbb
add
sub
add
or
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
add
add
add
add
add
add
(bad)
(bad)
push
add
add
add
push
add
pop
or
or
dec
(bad)
(bad)
call
xor
adc
sub
add
or
cmp
(bad)
(bad)
call
xor
mov
xor
or
push
pop
adc
sbb
add
pop
or
or
or
add
push
sbb
or
sbb
or
or
or
clc
std
(bad)
call
cmp
add
sbb
add
sub
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
(bad)
call
or
or
adc
mov
(bad)
call
adc
add
sbb
add
sub
add
sub
sbb
or
sahf
std
(bad)
call
adc
push
adc
ds
jb
jle
adc
pop
adc
cmp
(bad)
(bad)
call
add
jne
(bad)
call
inc
add
push
sbb
sub
add
sub
cmp
(bad)
call
xor
add
and
push
int3
mov
sbb
add
cmp
outs
aad
add
or
adc
sub
xor
fst
add
add
or
std
(bad)
call
adc
add
adc
or
or
add
(bad)
call
add
push
sbb
or
sbb
xor
(bad)
call
pop
adc
in
cld
(bad)
call
adc
add
pop
or
push
(bad)
(bad)
call
or
pop
(bad)
(bad)
call
cld
(bad)
call
adc
add
add
mov
add
sbb
or
or
add
add
add
pusha
add
add
add
add
add
outs
add
add
add
arpl
add
jg
add
or
add
push
add
add
add
sbb
push
push
adc
sub
adc
inc
push
add
add
add
add
add
add
add
adc
add
adc
add
pop
add
add
or
or
mov
sub
pop
or
repnz
or
out
sbb
jmp
sub
or
add
inc
or
cmp
(bad)
dec
sub
pop
adc
cmp
(bad)
call
sub
push
adc
push
adc
cmp
(bad)
call
sub
or
add
or
adc
push
adc
cmp
(bad)
(bad)
fcomp
adc
adc
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
or
or
cmp
add
sbb
or
adc
call
add
add
cmp
add
add
add
jne
add
xchg
add
add
add
add
fwait
sbb
call
or
ret
rcl
add
adc
inc
add
(bad)
(bad)
inc
add
add
add
push
adc
popf
shl
adc
cmp
(bad)
call
adc
mov
adc
pop
sub
adc
jns
(bad)
call
cmp
add
sbb
or
sbb
or
adc
gs
(bad)
call
dec
add
push
push
adc
adc
sbb
(bad)
(bad)
call
adc
add
daa
cmps
sbb
and
es
adc
sbb
or
add
(bad)
inc
sub
cmp
adc
pop
adc
and
cmp
add
sbb
sub
pop
sub
pop
sub
sbb
or
or
(bad)
call
cmp
add
and
sub
sub
or
add
sub
add
inc
sbb
add
add
add
add
add
int3
add
add
add
add
xor
add
add
adc
or
push
pop
movlps
sub
rcl
push
xor
sub
add
or
add
add
add
add
add
add
add
data16
add
add
xchg
add
add
add
add
add
add
add
add
add
inc
add
add
add
jl
add
cwde
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
aad
add
and
add
add
fwait
add
push
sbb
movlps
cmp
call
inc
add
push
push
sbb
add
sub
add
cmp
add
add
adc
cmp
(bad)
call
adc
add
sbb
add
add
cmp
add
add
or
cmp
(bad)
call
adc
adc
es
or
repz
add
or
or
and
(bad)
call
adc
add
adc
es
or
adc
cmp
adc
add
add
add
or
pop
push
adc
cmp
(bad)
(bad)
call
adc
add
loope
test
sbb
pop
adc
es
cmp
cmp
adc
cmp
(bad)
(bad)
call
adc
add
pop
xor
sub
add
adc
pop
adc
cmp
add
push
and
pushf
pop
and
adc
es
outs
(bad)
add
or
adc
cmp
adc
sbb
add
sub
add
push
cmp
add
pop
or
inc
add
add
cmp
add
add
adc
cmp
(bad)
call
cmp
add
es
movlps
cmp
call
inc
add
push
sbb
or
sbb
adc
cmp
(bad)
call
cmp
sbb
add
sub
add
sbb
sbb
(bad)
call
or
sub
sub
fst
add
add
pop
add
add
adc
add
or
adc
cmp
(bad)
(bad)
call
adc
adc
inc
sldt
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
dec
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
call
(bad)
(bad)
call
adc
or
mov
(bad)
call
adc
add
or
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cli
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
call
adc
or
js
(bad)
call
add
push
cmp
call
cmp
(bad)
call
adc
add
sbb
add
sub
add
sub
sbb
std
(bad)
call
adc
add
sub
add
or
push
pop
push
adc
cmp
std
(bad)
call
inc
add
push
sbb
or
or
or
pop
std
(bad)
call
cmp
add
es
or
cmp
std
(bad)
call
adc
add
cmp
(bad)
(bad)
call
or
mov
adc
or
jmp
(bad)
call
adc
add
push
xor
sub
add
adc
cmp
cld
(bad)
call
adc
add
sbb
add
sub
add
(bad)
adc
adc
inc
or
add
pop
add
add
add
jp
add
or
add
add
add
inc
add
add
add
data16
add
add
pop
add
add
adc
adc
sub
adc
add
add
add
add
add
add
add
add
add
add
pop
add
add
adc
sub
sub
sbb
repz
lock
in
sbb
jmp
add
inc
or
sub
sbb
pop
cmp
(bad)
call
sub
push
adc
adc
cmp
(bad)
call
sub
pop
outs
mov
adc
adc
cmp
(bad)
(bad)
fcomp
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
or
push
sar
add
sbb
xor
sub
add
or
add
add
add
add
add
cmp
add
add
add
cwde
add
add
add
add
cmp
cmp
adc
sub
rcl
retf
and
add
adc
es
cmp
adc
sub
push
pop
pop
add
sub
add
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
aaa
add
push
es
aaa
add
push
sub
outs
cmp
(bad)
(bad)
call
(bad)
(bad)
call
adc
push
sub
dec
(bad)
(bad)
call
inc
add
push
push
push
add
sub
add
adc
add
add
add
add
(bad)
call
(bad)
jmp
(bad)
dec
(bad)
(bad)
call
adc
sbb
or
sbb
(bad)
call
adc
add
push
sub
pop
adc
cmp
(bad)
(bad)
call
cmp
add
sbb
or
add
add
add
add
add
add
add
add
pop
add
add
add
lods
add
add
add
add
xor
cld
add
add
add
adc
or
add
push
pop
sbb
add
sub
add
inc
adc
add
cmps
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
adc
add
test
and
mov
es
sbb
add
sbb
adc
add
sbb
push
add
add
or
add
add
add
and
lods
add
add
add
push
and
add
and
add
add
inc
add
push
or
or
or
or
(bad)
call
add
push
push
or
add
add
or
call
inc
add
push
sbb
xor
sub
add
or
(bad)
call
cmp
add
and
repnz
xchg
jns
or
prefetch
adc
(bad)
call
adc
add
pop
or
call
xor
add
sbb
add
sub
add
sub
sub
or
call
adc
add
sar
add
push
es
or
(bad)
call
inc
add
push
sbb
add
es
cmp
add
push
adc
sub
add
out
(bad)
(bad)
push
(bad)
(bad)
(bad)
sti
(bad)
(bad)
inc
(bad)
call
(bad)
(bad)
call
or
cmp
adc
pop
or
or
call
adc
add
or
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
or
call
xor
or
push
pop
or
(bad)
call
inc
add
push
sbb
add
sub
add
adc
push
add
add
adc
adc
add
add
adc
add
adc
add
and
add
add
fwait
add
push
pop
or
push
shl
sbb
add
sub
add
inc
add
add
into
(bad)
(bad)
inc
add
add
sbb
push
inc
add
add
add
add
add
add
add
add
add
cmp
add
es
cmp
add
sub
add
sub
add
adc
adc
fld
add
sbb
add
sbb
add
adc
inc
add
push
and
sbb
and
cmp
pop
adc
adc
gs
(bad)
inc
add
add
add
xor
add
inc
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
lds
add
xlat
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
pop
cmp
add
sbb
add
outs
(bad)
(bad)
call
adc
sbb
pop
(bad)
(bad)
call
inc
add
push
and
mov
test
adc
pop
sbb
add
inc
(bad)
(bad)
call
adc
adc
pop
sbb
add
xor
(bad)
call
dec
add
push
sbb
add
push
or
cmp
adc
sbb
add
sub
add
add
(bad)
(bad)
call
adc
add
and
cmp
and
mov
pop
adc
pop
push
cmp
add
add
cmp
add
add
adc
fsin
(bad)
call
adc
add
sbb
add
sub
add
or
add
sbb
add
mov
adc
add
pop
sbb
add
lods
(bad)
(bad)
call
adc
add
adc
pop
or
pop
sbb
add
xchg
(bad)
(bad)
call
adc
add
sbb
add
sub
add
or
cmp
(bad)
call
add
push
es
add
ins
(bad)
(bad)
call
adc
add
sub
or
cmp
(bad)
call
adc
add
pop
or
cmp
(bad)
call
adc
sbb
add
sub
es
cmp
add
es
or
or
add
and
(bad)
call
adc
add
adc
pop
or
cmp
adc
add
adc
or
add
add
add
add
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
(bad)
fild
add
pop
adc
add
aad
(bad)
call
adc
add
adc
push
sub
sar
call
adc
add
adc
pop
sbb
add
scas
std
(bad)
call
adc
adc
cmp
add
add
sub
cmp
adc
add
adc
pop
pop
or
std
(bad)
call
or
add
jns
(bad)
call
cmp
add
adc
add
inc
pop
sub
push
sub
add
or
or
add
push
std
(bad)
call
xor
pop
sbb
add
inc
std
(bad)
call
dec
add
push
and
cmp
cmp
pop
adc
add
add
sbb
add
daa
std
(bad)
call
adc
add
sub
add
cmp
pop
push
adc
or
(bad)
call
xor
adc
pop
or
loope
(bad)
call
movlps
out
cld
(bad)
call
inc
add
push
sbb
add
sub
add
sub
xchg
add
add
inc
sldt
add
(bad)
dec
(bad)
call
add
inc
add
add
(bad)
push
(bad)
(bad)
jmp
call
(bad)
push
(bad)
(bad)
cmp
(bad)
(bad)
aas
add
add
(bad)
(bad)
call
sbb
cld
(bad)
call
adc
cmp
aas
add
test
inc
pop
adc
sar
add
push
es
or
cmp
(bad)
call
cmp
add
sbb
add
pop
or
(bad)
call
sbb
add
dec
cld
(bad)
call
adc
adc
add
sub
add
adc
adc
mov
add
sbb
or
add
push
shl
add
push
adc
mov
add
add
add
add
add
add
add
pop
add
add
add
pop
add
mov
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
or
add
cmps
rcl
add
adc
cmp
add
add
cmp
add
add
or
add
(bad)
rcl
add
add
adc
sbb
mov
adc
jbe
(bad)
call
adc
add
adc
sar
add
push
sbb
add
pop
(bad)
(bad)
call
adc
add
sub
add
or
or
inc
(bad)
(bad)
call
adc
add
sbb
add
adc
xor
(bad)
call
adc
add
jae
dec
sub
mov
add
sbb
cmp
(bad)
(bad)
call
inc
add
push
es
or
add
add
(bad)
call
inc
add
push
push
sbb
add
sub
add
cmp
add
add
cmp
add
add
or
(bad)
(bad)
call
aaa
add
push
add
pop
jle
sub
inc
add
push
or
add
and
add
and
add
pushf
add
push
pop
or
cmp
cmp
add
sbb
xor
sub
add
inc
or
add
lds
add
jne
add
sbb
add
jle
add
outs
add
add
add
add
(bad)
call
add
pop
add
add
adc
add
data16
(bad)
call
adc
add
push
xor
sub
add
or
push
add
add
(bad)
(bad)
inc
(bad)
call
add
add
(bad)
(bad)
push
adc
add
sub
adc
sbb
add
sub
add
sub
adc
adc
(bad)
call
adc
sbb
cli
mov
popa
adc
pop
sub
outs
add
add
or
or
inc
or
std
(bad)
call
adc
add
push
xor
sub
add
or
add
sar
(bad)
call
cmp
add
sbb
add
add
cmp
dec
add
push
push
sbb
add
sub
es
cmp
add
es
or
cdq
std
(bad)
call
adc
add
sbb
add
sub
add
adc
push
add
add
add
add
xor
fiadd
add
push
add
adc
jo
add
adc
add
add
add
add
add
add
add
add
mov
add
sbb
add
dec
add
add
add
add
add
mov
add
add
add
push
add
or
add
push
add
rol
add
ins
add
add
add
push
add
add
add
add
add
aad
add
sar
add
es
daa
adc
sub
sar
add
sbb
push
inc
add
add
add
add
add
add
add
jno
add
xchg
add
add
add
add
add
add
add
add
add
jbe
add
fwait
add
add
add
add
add
add
add
sbb
add
cmp
add
pop
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
outs
add
add
add
loope
add
cmp
add
add
gs
add
add
add
add
add
add
add
add
add
add
pop
add
add
mov
add
enter
repnz
add
and
push
add
push
push
add
cmp
push
cmp
add
add
add
sub
add
push
or
xor
push
cmp
(bad)
(bad)
call
cmp
add
es
adc
add
or
push
cmp
(bad)
(bad)
call
adc
push
xor
sub
add
pop
(bad)
(bad)
call
sbb
push
cmp
(bad)
(bad)
call
adc
pop
adc
add
mov
aas
add
push
sbb
add
sub
add
(bad)
add
add
push
es
xor
push
cmp
adc
pop
add
sub
add
adc
or
push
cmp
adc
add
sbb
add
sub
add
or
ds
cmp
add
adc
cmp
(bad)
call
adc
add
cmp
std
(bad)
call
adc
push
cmp
(bad)
call
adc
and
int3
dec
and
adc
es
pop
adc
cmp
(bad)
(bad)
call
adc
add
pop
mov
scas
jno
pop
adc
es
push
cmp
add
add
cmp
add
add
movlps
cmp
std
(bad)
call
cmp
add
cmp
(bad)
call
adc
mov
and
push
cmp
std
(bad)
call
add
push
and
or
add
push
es
pop
adc
dec
cmp
add
add
push
adc
cmp
add
push
sbb
push
es
cmp
add
sbb
add
sub
push
cmp
inc
add
push
and
pop
and
adc
cmp
cmp
pop
adc
cmp
(bad)
call
inc
add
push
and
cmps
sub
not
mov
adc
es
add
adc
cmp
(bad)
call
adc
cmp
cld
(bad)
inc
inc
or
push
cmp
std
(bad)
call
adc
cmp
std
(bad)
call
inc
add
push
sbb
xor
sub
add
pushf
cld
(bad)
call
and
push
cmp
std
(bad)
call
adc
adc
es
pop
adc
cmp
cld
(bad)
call
adc
add
scas
adc
and
lahf
pop
pop
adc
es
pop
adc
cmp
cld
(bad)
call
adc
add
push
test
push
es
clc
std
(bad)
call
adc
push
adc
cmp
add
add
push
cmp
add
sbb
cld
(bad)
call
adc
add
adc
es
pop
adc
cmp
inc
add
push
push
adc
cmp
cld
(bad)
call
sbb
cld
(bad)
call
adc
add
sbb
add
sub
add
adc
add
call
or
cld
(bad)
call
xor
add
and
adc
push
popa
adc
es
adc
cmp
(bad)
call
inc
add
push
pop
pop
xor
sub
add
adc
add
inc
or
cmp
xor
adc
sbb
add
cmp
cld
(bad)
call
adc
in
xchg
and
dec
clc
pop
popa
adc
or
or
sti
(bad)
call
sbb
push
cmp
sti
(bad)
call
adc
mov
jb
mov
popa
adc
es
call
and
sti
(bad)
call
cmp
add
es
pop
adc
call
and
push
cmp
aas
add
push
and
arpl
cmp
push
add
add
sub
push
adc
sub
push
cmp
(bad)
call
cmp
add
and
fiadd
jp
adc
es
or
add
pop
adc
cmp
(bad)
call
inc
add
push
and
jecxz
push
and
in
sbb
push
adc
or
(bad)
call
add
add
(bad)
dec
cld
(bad)
inc
add
add
(bad)
(bad)
jmp
cld
(bad)
call
add
add
add
add
add
add
add
dec
cld
(bad)
call
xor
push
cmp
cli
(bad)
call
adc
add
sub
add
(bad)
add
add
adc
cli
(bad)
call
adc
add
pop
leave
sub
and
push
pop
pop
adc
es
sub
adc
add
cmp
cli
(bad)
call
and
push
cmp
cmp
add
push
adc
es
add
pop
sbb
push
cmp
adc
add
cmp
cli
(bad)
call
sbb
push
cmp
inc
add
push
and
out
sbb
imul
pop
adc
es
or
adc
cmp
(bad)
call
inc
add
push
and
ins
jecxz
push
popa
adc
es
pop
adc
call
or
add
sub
push
cmp
cli
(bad)
call
adc
mov
mov
pop
pop
adc
es
pop
adc
sbb
(bad)
call
adc
add
call
xchg
pop
adc
es
adc
rol
add
sbb
int3
add
add
adc
lds
add
sbb
push
cmp
stc
(bad)
call
adc
add
cmp
(bad)
call
das
adc
cmp
stc
(bad)
call
adc
add
pop
xor
sub
add
pop
adc
mov
cmp
add
es
add
adc
cmp
cmp
add
and
jae
cmps
cs
adc
es
or
fs
sub
push
cmp
inc
add
push
and
mov
inc
and
adc
es
pop
push
adc
cmp
(bad)
call
adc
add
sub
add
fdivr
(bad)
inc
add
adc
add
inc
or
cmp
adc
add
sbb
add
add
adc
add
cmp
stc
(bad)
call
inc
add
push
es
or
add
adc
push
cmp
stc
(bad)
call
aas
add
push
and
test
mov
push
es
adc
adc
push
cmp
clc
(bad)
call
adc
adc
cmp
(bad)
call
xor
clc
(bad)
call
adc
sbb
add
sub
add
or
add
adc
pop
adc
cmp
add
add
adc
add
sub
add
xor
inc
add
sbb
add
add
push
push
adc
sub
add
cmp
(bad)
inc
add
add
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
jge
add
xchg
add
add
add
add
add
add
add
add
add
mov
add
retf
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
push
sub
sar
pop
push
adc
call
cmp
add
and
cmp
push
and
add
pop
sbb
add
call
adc
add
pop
adc
add
adc
call
xor
add
sbb
add
sub
add
and
add
call
xor
add
and
pop
xchg
int
pop
adc
pop
adc
add
call
aas
add
push
adc
sub
mov
adc
add
push
imul
pop
adc
add
or
add
call
add
push
pop
adc
(bad)
(bad)
call
sub
add
call
adc
add
push
xor
sub
add
or
add
and
add
call
xor
add
sbb
add
add
and
(bad)
(bad)
call
inc
add
push
cmp
or
pop
adc
add
call
adc
add
adc
add
and
add
call
add
push
adc
movlps
pop
adc
call
adc
add
pop
xor
sub
add
or
adc
call
adc
sbb
jnp
add
pop
adc
add
call
adc
add
adc
mov
add
add
sbb
pop
sub
add
call
adc
add
adc
pop
adc
add
adc
add
pop
adc
cmc
pop
sub
add
call
inc
add
push
and
fild
xor
pop
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
(bad)
(bad)
call
adc
call
aaa
add
push
sbb
xor
sub
add
and
add
call
aaa
add
push
es
cmp
(bad)
(bad)
call
or
or
(bad)
call
adc
add
(bad)
call
adc
cld
std
(bad)
call
add
call
adc
add
adc
sbb
std
inc
pushf
pop
popa
adc
add
dec
add
push
and
add
jae
add
or
add
sbb
cld
(bad)
call
adc
pop
std
jecxz
and
dec
inc
sbb
add
add
sub
add
dec
add
push
and
add
jae
add
or
pop
add
sub
pop
push
adc
std
add
add
or
cmp
adc
add
adc
add
and
add
call
inc
add
push
es
movlps
and
add
call
inc
add
push
sbb
add
sub
add
mov
add
add
inc
or
adc
add
call
cmp
add
push
sbb
add
sub
add
sub
pop
push
adc
call
adc
add
pop
movlps
sbb
add
call
cmp
add
adc
or
pop
and
add
call
add
push
adc
or
cmp
sti
(bad)
call
adc
add
mov
mov
and
adc
popa
adc
add
call
adc
add
adc
adc
add
inc
or
pop
push
adc
call
or
add
call
adc
add
adc
push
add
add
(bad)
(bad)
jmp
(bad)
push
add
add
add
add
(bad)
dec
(bad)
inc
(bad)
(bad)
jnp
(bad)
call
cld
(bad)
call
cld
(bad)
push
(bad)
(bad)
jmp
(bad)
call
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
out
cld
(bad)
push
sti
(bad)
jmp
(bad)
dec
(bad)
dec
add
add
cmp
pop
or
add
call
adc
add
ss
dec
cmp
sbb
mov
es
and
add
call
adc
add
add
or
cli
(bad)
call
adc
add
push
pop
or
fild
popa
adc
sti
(bad)
call
or
enter
pop
daa
adc
call
aas
add
push
sbb
add
add
call
adc
add
sbb
add
sub
add
or
pop
and
add
call
adc
add
int3
xchg
in
and
lods
xchg
cmp
add
jbe
(bad)
call
adc
call
adc
add
loope
ror
xchg
xor
adc
or
add
call
adc
add
pop
push
cmp
(bad)
call
adc
call
adc
add
sbb
add
and
add
call
add
push
adc
cmp
sti
(bad)
call
and
add
call
adc
add
adc
je
add
sub
add
xor
sbb
add
and
add
cmp
push
adc
sub
sar
adc
inc
lods
add
add
add
sub
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
add
repnz
add
add
push
add
add
add
lea
add
stos
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
mov
add
stos
add
add
add
add
add
add
add
sub
add
add
data16
add
add
add
add
add
add
add
xor
add
dec
add
add
add
add
test
add
add
inc
push
add
pushw
add
jge
add
call
add
push
add
sbb
add
cmp
add
arpl
add
xchg
pop
add
scas
pop
add
iret
pop
add
loop
add
hlt
pop
add
pop
or
add
or
add
add
pop
or
add
add
dec
or
add
add
add
call
add
or
add
or
add
or
add
or
add
add
ror
add
or
add
or
add
or
add
or
add
add
jbe
add
xchg
or
add
or
add
or
add
or
add
sub
add
addr16
add
mov
add
fmul
add
and
add
push
push
add
test
add
mov
add
retf
add
push
add
dec
add
sub
add
push
sldt
sldt
test
add
mov
add
(bad)
sldt
in
add
or
adc
add
add
test
add
movs
adc
add
adc
add
adc
add
adc
add
adc
add
add
jnp
add
call
add
adc
add
adc
add
adc
add
add
push
adc
add
add
(bad)
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
pusha
adc
add
add
mov
adc
add
adc
add
adc
add
jnp
add
fwait
adc
add
fcom
add
pop
push
add
xor
push
add
ins
push
add
xchg
push
add
mov
push
add
loop
add
stc
push
add
xor
add
cmp
add
pop
adc
lds
add
and
push
cmp
adc
xchg
call
jg
popa
adc
es
push
adc
cmp
std
(bad)
call
adc
add
cmp
or
add
sub
ins
push
add
pop
and
adc
dec
adc
cmp
cld
(bad)
call
adc
add
push
add
sub
add
dec
cmp
(bad)
or
add
movlps
cmp
cld
(bad)
call
adc
add
pop
or
dec
push
add
sbb
cld
(bad)
call
inc
add
push
pop
adc
es
cmp
cmp
add
sbb
ja
add
pop
push
cmp
add
pop
pop
adc
cmp
adc
add
add
adc
add
adc
cmc
and
push
cmp
(bad)
call
adc
add
or
jbe
and
adc
es
adc
sub
add
pop
and
push
cmp
(bad)
call
cmp
add
and
daa
add
and
adc
sbb
ret
or
adc
cmp
cld
(bad)
call
add
push
sbb
push
es
cmp
lock
add
and
push
cmp
adc
add
adc
es
push
cmp
add
pop
das
adc
cmp
sti
(bad)
call
adc
add
push
add
sub
add
add
jg
add
sub
sbb
push
cmp
sti
(bad)
call
xor
add
and
outs
sub
(bad)
push
pop
adc
es
dec
adc
add
or
push
adc
adc
ds
push
add
and
push
cmp
adc
add
sbb
add
sub
add
or
adc
cmp
call
adc
adc
es
add
push
adc
cmp
call
adc
adc
es
xor
sub
add
push
adc
cmp
call
adc
add
mov
mov
inc
pop
pop
adc
es
dec
adc
add
push
cmp
add
adc
or
push
and
mov
add
adc
adc
pop
or
push
cmp
sti
(bad)
call
imul
(bad)
call
add
push
es
dec
adc
add
or
xor
pop
adc
cmp
cli
(bad)
call
add
push
sbb
add
sub
add
pop
adc
cmp
add
push
es
dec
adc
add
push
cmp
cmp
sbb
add
add
dec
cmp
add
and
push
cmp
inc
add
push
sbb
push
es
dec
adc
cmp
(bad)
call
add
push
sbb
add
sub
add
or
adc
ds
push
add
pop
jge
push
cmp
(bad)
call
adc
sbb
cli
adc
add
inc
push
inc
adc
adc
cmp
std
(bad)
call
adc
cli
(bad)
call
adc
add
adc
es
sbb
adc
adc
push
cmp
cli
(bad)
call
adc
mov
rcl
int
push
push
pop
adc
add
add
add
push
cmp
stc
(bad)
call
adc
add
pop
or
mov
adc
cmp
stc
(bad)
call
xor
add
es
dec
adc
add
push
cmp
stc
(bad)
call
adc
add
mov
or
adc
dec
adc
cmp
add
push
es
push
cmp
add
pop
inc
adc
cmp
cmp
add
sbb
push
es
adc
add
sbb
adc
dec
adc
add
adc
pop
adc
cmp
(bad)
call
push
adc
cmp
(bad)
call
adc
pop
xor
sub
adc
cmp
(bad)
call
cmp
add
pop
adc
es
xor
adc
add
add
push
cmp
stc
(bad)
call
adc
add
adc
es
dec
adc
cmp
stc
(bad)
call
xor
(bad)
push
and
mov
push
es
push
cmp
add
add
dec
adc
cmp
clc
(bad)
call
xor
add
sbb
xor
sub
add
das
cmp
dec
adc
cmp
clc
(bad)
call
add
push
and
cmp
in
sahf
ins
pop
adc
es
sub
xchg
add
add
xchg
add
add
push
cmp
adc
add
pop
push
adc
cmp
adc
add
sbb
add
sub
add
out
add
push
cmp
add
pop
jb
push
cmp
(bad)
call
adc
add
int3
rcl
and
pop
adc
es
dec
adc
add
adc
arpl
push
cmp
(bad)
call
aaa
add
push
push
adc
es
dec
adc
cmp
clc
(bad)
call
inc
add
push
sbb
xor
sub
add
adc
add
push
cmp
clc
(bad)
call
inc
add
push
sbb
push
es
dec
adc
add
push
cmp
clc
(bad)
call
adc
add
adc
adc
outs
or
add
adc
adc
adc
add
inc
adc
pop
adc
cmp
idiv
call
adc
add
adc
es
push
adc
cmp
idiv
call
inc
add
push
es
add
add
adc
dec
adc
cmp
inc
add
push
and
xor
and
xchg
sbb
adc
dec
adc
add
pop
sub
pop
sbb
push
cmp
adc
add
icebp
in
pusha
and
and
es
and
pop
or
add
cwde
add
add
push
cmp
(bad)
call
adc
add
sbb
add
sub
add
push
adc
push
adc
cmp
(bad)
call
cmp
add
es
sbb
adc
add
push
cmp
(bad)
call
adc
add
pop
jo
push
and
adc
es
push
adc
cmp
(bad)
call
adc
adc
es
sbb
adc
dec
adc
cmp
idiv
call
adc
add
push
jmp
or
jb
adc
es
push
adc
cmp
idiv
call
cmp
pop
add
sub
add
adc
scas
or
adc
add
push
cmp
inc
add
push
adc
pop
and
add
add
push
add
add
mov
add
adc
pop
xor
push
cmp
adc
add
push
and
cmp
adc
cmp
add
pop
and
add
adc
adc
cmp
(bad)
call
aas
add
push
sar
add
push
es
aaa
adc
add
sbb
adc
cmp
(bad)
call
aas
add
push
and
jne
repnz
push
cmp
add
add
and
adc
push
adc
cmp
idiv
call
aas
add
push
sbb
xor
sub
add
adc
add
inc
adc
adc
pop
push
adc
cmp
cmc
(bad)
call
inc
adc
cmp
cmc
(bad)
call
add
push
sbb
xor
sub
add
and
add
and
popf
add
push
adc
pop
pop
adc
cmp
cmc
(bad)
call
inc
add
push
and
fs
and
adc
cmp
and
stos
clc
(bad)
call
bound
push
cmp
cmp
add
sbb
push
es
dec
adc
cmp
adc
add
pop
call
stc
adc
pop
adc
es
dec
adc
cmp
(bad)
call
adc
add
pop
adc
cmp
(bad)
call
adc
add
pop
and
sub
add
pop
and
cmc
(bad)
call
aas
add
push
and
cmp
jo
mov
cmp
adc
es
or
adc
cmp
cmc
(bad)
call
adc
sar
add
push
and
push
cmp
cmc
(bad)
call
adc
add
pop
and
fild
add
pop
je
push
cmp
hlt
(bad)
call
adc
add
pop
and
adc
sub
push
cmp
hlt
(bad)
call
adc
push
xor
sub
add
adc
sub
add
or
add
sar
(bad)
call
idiv
jmp
sti
(bad)
dec
add
add
cli
(bad)
call
or
add
in
add
in
or
add
cli
or
(bad)
dec
(bad)
(bad)
mov
add
add
call
add
pop
add
add
add
add
add
add
syscall
add
js
(bad)
(bad)
jg
(bad)
inc
idiv
jmp
clc
(bad)
(bad)
jns
add
or
xchg
add
cli
(bad)
call
(bad)
(bad)
jmp
(bad)
call
add
add
and
(bad)
(bad)
cmp
add
mov
add
mov
(bad)
call
adc
adc
add
and
cmc
pop
adc
push
cmp
cmp
add
and
dec
add
pop
adc
es
and
adc
dec
adc
jmp
add
sbb
push
es
push
adc
cmp
repz
call
adc
sbb
add
sub
add
inc
sub
pop
dec
adc
cmp
adc
sbb
add
sub
add
scas
add
add
or
or
or
jl
push
cmp
adc
add
adc
xor
or
es
inc
adc
adc
pop
ja
push
cmp
call
xor
push
cmp
(bad)
call
adc
add
adc
es
sbb
call
sbb
push
cmp
(bad)
call
adc
add
pop
push
adc
cmp
repz
call
xor
add
adc
pop
(bad)
adc
and
push
cmp
repz
call
adc
sbb
add
add
sbb
in
(bad)
(bad)
call
and
push
cmp
adc
add
sbb
add
add
adc
add
call
add
add
(bad)
dec
cmc
(bad)
dec
idiv
jmp
add
add
clc
(bad)
call
(bad)
(bad)
mov
add
add
or
add
or
add
cld
(bad)
call
stc
(bad)
inc
push
add
pop
hlt
(bad)
call
add
add
or
add
pop
add
sub
(bad)
dec
add
add
(bad)
jmp
(bad)
inc
or
add
add
xchg
or
add
(bad)
call
add
fxtract
(bad)
inc
cli
(bad)
(bad)
mov
or
add
add
idiv
(bad)
(bad)
in
sti
(bad)
jmp
sti
(bad)
push
or
add
add
sbb
(bad)
jmp
push
add
(bad)
sti
(bad)
(bad)
jle
add
pop
add
add
clc
(bad)
dec
(bad)
inc
(bad)
(bad)
cli
or
add
pop
add
je
(bad)
call
(bad)
(bad)
cli
or
add
add
mov
add
add
add
add
add
adc
add
add
add
add
add
add
cmc
(bad)
(bad)
(bad)
(bad)
inc
(bad)
dec
add
retf
call
stc
(bad)
jmp
idiv
dec
(bad)
jmp
add
xor
add
cdq
cli
(bad)
call
cmp
push
cmp
adc
sbb
add
sub
add
or
call
or
add
add
push
cmp
(bad)
call
adc
add
jnp
jae
and
ja
pop
adc
es
sub
adc
cmp
(bad)
call
inc
add
push
and
test
push
loope
pop
adc
es
pop
inc
adc
cmp
icebp
(bad)
call
adc
add
sub
add
adc
and
push
cmp
icebp
(bad)
call
xor
add
push
adc
adc
and
cmp
lock
call
jns
push
cmp
lock
call
adc
sbb
add
sub
add
sub
sar
call
and
push
cmp
lock
call
adc
add
adc
es
dec
adc
cmp
lock
call
aas
add
push
and
aaa
pop
and
pop
popa
adc
es
push
adc
cmp
adc
add
sub
add
push
adc
cmp
adc
add
sub
add
and
pop
cld
(bad)
call
or
push
cmp
(bad)
call
adc
adc
es
and
add
add
cld
add
add
ret
push
and
push
cmp
call
cmp
sbb
add
sub
add
push
adc
cmp
cmp
add
push
adc
es
adc
adc
sub
push
cmp
lock
call
add
push
es
inc
cmp
adc
adc
dec
adc
call
es
pop
outs
or
add
or
cmp
out
(bad)
call
cmp
add
and
repz
and
adc
es
pop
adc
dec
adc
add
push
cmp
out
(bad)
call
adc
add
sub
add
inc
adc
call
sub
adc
adc
push
cmp
aas
add
push
and
jle
pop
and
shl
adc
cmp
adc
add
xchg
add
add
push
cmp
(bad)
call
adc
sbb
add
sub
add
fiadd
add
pop
ficom
or
adc
adc
adc
cmp
(bad)
call
adc
add
sbb
jle
push
jno
cmp
push
es
dec
adc
cmp
out
(bad)
call
cmp
sbb
add
sub
add
cmp
stc
cli
(bad)
call
cmp
cli
(bad)
call
inc
cmp
cli
(bad)
call
push
cmp
adc
add
pop
xchg
inc
data16
adc
or
or
fiadd
add
and
add
add
inc
add
push
adc
adc
pop
jo
push
cmp
out
(bad)
call
inc
adc
cmp
out
(bad)
call
adc
add
adc
es
sti
(bad)
call
or
push
adc
dec
adc
add
push
cmp
adc
add
pop
add
sub
add
inc
adc
mov
(bad)
call
adc
add
sbb
add
add
push
adc
cmp
(bad)
call
add
push
adc
adc
adc
add
push
cmp
(bad)
call
add
push
and
adc
pop
and
fimul
cmp
(bad)
call
adc
mov
aas
adc
cmp
adc
add
add
ins
and
les
fs
adc
es
sbb
adc
dec
adc
call
push
sub
pop
adc
cmp
out
(bad)
call
adc
add
sbb
add
sub
add
push
adc
cmp
in
(bad)
call
cmp
add
sbb
adc
add
inc
adc
adc
cmp
pusha
adc
cmp
in
(bad)
call
adc
add
pop
and
add
and
add
adc
add
and
add
add
lods
add
add
sahf
add
push
adc
mov
push
cmp
add
add
pop
push
cmp
or
sub
add
add
xor
call
pop
adc
cmp
(bad)
call
adc
add
sbb
add
sub
add
fs
(bad)
call
sbb
add
add
jae
push
cmp
(bad)
call
adc
add
stos
test
sub
pop
pop
adc
es
adc
adc
pop
or
push
cmp
in
(bad)
call
jbe
push
cmp
in
(bad)
call
adc
add
push
(bad)
dec
and
callw
pop
adc
es
pop
adc
dec
adc
add
push
cmp
in
(bad)
call
adc
add
xor
out
adc
(bad)
xor
es
xor
mov
add
add
push
cmp
in
(bad)
call
inc
add
push
and
sbb
adc
es
and
adc
adc
push
cmp
add
push
and
pop
jg
and
cmp
es
adc
cmp
add
push
es
dec
cmp
(bad)
call
xor
push
cmp
(bad)
call
adc
add
adc
es
adc
adc
sbb
push
cmp
(bad)
call
add
push
and
call
pop
adc
es
daa
adc
cmp
(bad)
call
adc
add
adc
or
and
push
cmp
in
(bad)
call
aaa
add
push
push
push
add
sub
add
daa
stc
(bad)
inc
adc
add
inc
adc
pop
push
adc
cmp
(bad)
call
inc
add
push
sbb
add
add
or
outs
add
add
push
add
add
adc
add
and
stc
add
add
sahf
add
push
adc
adc
push
cmp
jmp
call
aas
add
push
push
adc
es
adc
adc
call
adc
cmc
pop
inc
adc
cmp
add
push
sbb
push
es
push
adc
cmp
add
push
sbb
xor
sub
add
and
adc
cmp
inc
add
push
and
test
add
adc
es
cmp
dec
idiv
call
push
adc
cmp
(bad)
call
adc
add
ins
cmp
popa
and
push
es
(bad)
idiv
call
ins
adc
cmp
inc
add
push
sbb
xor
sub
add
sbb
adc
test
push
cmp
jmp
call
adc
sbb
add
sub
add
push
adc
cmp
jmp
call
adc
add
sahf
mov
jns
movs
mov
es
add
popf
add
add
push
cmp
jmp
add
sbb
add
sub
add
adc
cmp
jmp
add
aad
mov
xor
adc
es
adc
adc
cmp
inc
add
push
and
outs
or
es
and
add
add
or
test
add
pop
js
push
cmp
(bad)
call
adc
adc
es
push
adc
cmp
(bad)
call
adc
add
adc
sbb
adc
cmp
(bad)
call
xor
add
and
stc
inc
pusha
adc
push
es
outs
fild
add
pop
or
adc
mov
push
cmp
adc
add
pop
or
adc
or
jmp
add
sbb
add
add
dec
adc
add
push
cmp
jmp
add
add
cmp
idiv
call
and
inc
and
add
add
rol
add
test
add
pop
jg
push
cmp
jmp
add
push
sbb
(bad)
idiv
call
daa
adc
dec
adc
cmp
adc
add
adc
es
push
adc
cmp
adc
add
adc
es
pop
cmp
or
push
cmp
(bad)
call
cmp
add
sbb
push
es
sub
adc
dec
adc
jmpw
rol
add
and
or
and
cmp
pop
adc
cmp
(bad)
call
and
push
cmp
(bad)
call
inc
add
push
push
sbb
add
sub
add
adc
call
adc
pop
aaa
adc
cmp
adc
add
cmp
idiv
call
cmp
(bad)
call
jne
push
cmp
jmp
add
push
push
adc
es
adc
aas
adc
cmp
call
add
add
adc
es
pop
adc
mov
add
adc
cmp
call
add
push
sbb
xor
sub
add
and
lahf
hlt
(bad)
call
push
cmp
inc
adc
cmp
dec
add
push
sbb
add
sub
add
adc
add
inc
adc
adc
sub
pop
sub
adc
call
or
cmc
and
push
cmp
call
inc
add
push
and
aam
dec
pop
pop
adc
es
dec
adc
cmp
call
cmp
add
and
lods
leave
push
and
and
push
es
sbb
add
add
push
cmp
call
add
push
sbb
push
es
push
adc
cmp
call
add
add
loop
push
push
and
jge
adc
es
push
adc
cmp
call
add
add
or
push
and
add
and
add
sub
add
adc
adc
cmp
(bad)
call
sbb
adc
cmp
out
call
dec
add
push
and
mov
mov
pop
adc
es
dec
adc
cmp
inc
add
push
and
inc
ins
and
xchg
sub
push
es
dec
cmp
cmp
call
push
cmp
call
and
push
cmp
add
add
adc
es
cmp
adc
cmp
(bad)
call
adc
add
adc
es
adc
adc
dec
adc
cmp
call
cmp
add
sbb
push
cmp
(bad)
inc
and
xchg
add
sub
add
or
cmp
push
cmp
(bad)
call
cmp
push
add
sub
add
dec
adc
cmp
out
call
adc
add
adc
es
sbb
mov
(bad)
call
pop
adc
cmp
out
call
add
push
and
mov
adc
es
adc
cdq
add
add
push
cmp
out
call
adc
pop
adc
inc
cmp
(bad)
call
push
adc
cmp
out
call
adc
sbb
add
sub
add
push
adc
cmp
inc
add
push
adc
or
adc
dec
adc
cmp
adc
sbb
sbb
xchg
in
jae
pop
adc
es
dec
adc
cmp
(bad)
call
aaa
add
push
sbb
xor
sub
add
push
adc
cmp
(bad)
call
adc
add
pop
xor
sub
add
inc
cmp
(bad)
call
push
cmp
push
cmp
repnz
call
push
cmp
repnz
call
dec
cmp
repnz
call
dec
cmp
repnz
call
adc
cmp
out
call
adc
add
pop
dec
adc
add
push
cmp
(bad)
call
cmp
add
add
sub
adc
adc
add
add
adc
or
or
add
push
sbb
or
add
add
add
cmp
add
pop
add
add
add
mov
add
add
add
add
add
add
add
jge
add
call
add
add
add
inc
or
add
repnz
add
add
add
add
xor
add
mov
add
ret
add
add
add
add
push
or
add
add
call
or
or
add
add
xor
add
outs
(bad)
(bad)
call
inc
add
push
es
sbb
js
add
popf
sbb
cmp
(bad)
call
xor
mov
xlat
arpl
pop
or
add
add
sbb
sbb
(bad)
call
inc
add
push
and
stc
out
jbe
xchg
out
pop
or
gs
add
popf
pop
or
call
inc
add
push
es
push
and
sbb
call
adc
add
cli
dec
dec
jnp
inc
scas
xor
and
(bad)
inc
adc
add
sbb
add
sub
or
inc
add
add
add
add
add
add
add
aas
add
push
es
aas
add
push
sub
ret
add
lea
add
and
add
cli
add
add
rol
add
sub
add
push
adc
add
lea
add
or
or
mov
sbb
mov
push
sbb
mov
sbb
call
adc
add
sbb
add
sub
add
cmp
(bad)
call
adc
or
pop
push
add
popf
sbb
call
adc
add
push
xor
sub
add
or
call
adc
add
or
adc
(bad)
call
dec
add
push
and
lds
pop
or
or
call
inc
add
push
sbb
add
sub
add
sub
xor
mov
add
adc
or
push
sar
add
or
add
add
add
add
add
add
add
add
add
fwait
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
fwait
add
add
add
add
add
add
add
add
add
pop
or
jns
add
sbb
lahf
rol
add
sbb
imul
arpl
add
push
cmp
add
sbb
inc
add
push
es
sbb
cmp
call
add
push
and
enter
mov
or
sbb
pop
(bad)
cmp
(bad)
call
inc
add
push
sbb
xor
sub
add
or
xor
add
push
inc
or
add
loopne
add
jae
(bad)
inc
(bad)
call
add
add
add
add
push
or
adc
add
push
es
(bad)
cmp
(bad)
(bad)
call
inc
add
push
sbb
rol
add
pop
adc
repz
(bad)
call
inc
add
push
adc
add
add
cmp
cmp
(bad)
(bad)
call
adc
add
sbb
add
sub
add
or
cmp
sub
pop
or
mov
dec
add
push
and
add
pusha
and
or
pop
or
push
or
pushf
(bad)
(bad)
call
adc
add
adc
or
addps
sbb
cmp
add
inc
add
add
mov
(bad)
call
or
ins
(bad)
(bad)
call
inc
add
push
push
pop
xor
sub
add
add
push
cmp
fld
add
sub
adc
inc
(bad)
(bad)
call
inc
add
push
sub
pop
or
movhps
xor
(bad)
call
adc
add
pop
or
pop
or
(bad)
call
adc
pop
sub
pop
and
lock
inc
popa
or
pop
inc
or
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
out
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
call
inc
add
push
es
or
(bad)
cmp
std
(bad)
call
adc
add
sbb
sbb
mov
(bad)
call
adc
add
sub
es
inc
add
push
sbb
pop
or
cwde
std
(bad)
call
xor
add
pop
sbb
add
sub
add
cmp
(bad)
call
adc
jl
(bad)
call
aaa
add
push
sbb
add
sub
add
or
cmp
adc
pop
std
(bad)
call
adc
add
or
add
sub
adc
adc
xchg
add
add
add
pop
or
inc
add
push
and
adc
adc
(bad)
sub
or
add
add
add
add
add
mov
add
rol
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
add
add
add
add
pop
inc
or
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
inc
add
push
es
or
pop
or
cmp
(bad)
call
adc
push
inc
or
add
add
add
xlat
add
add
add
pusha
add
add
add
jns
add
test
add
add
add
or
test
sub
pop
or
xor
(bad)
call
adc
add
pop
or
cmp
inc
add
out
add
add
int3
add
add
sgdtd
push
sub
or
or
pop
or
add
(bad)
call
adc
add
sbb
add
sub
add
or
or
push
or
jmp
add
or
push
sub
sub
sar
(bad)
call
cmp
add
push
sbb
add
sub
es
inc
add
push
sbb
mov
(bad)
call
cmp
add
sbb
add
sub
add
or
mov
adc
sbb
add
sub
add
fdivr
(bad)
inc
pop
inc
add
add
pop
add
add
or
(bad)
call
adc
add
sbb
add
add
cmp
(bad)
call
or
pop
(bad)
(bad)
call
inc
add
push
and
xor
and
jbe
inc
pop
or
sbb
add
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
call
inc
add
push
and
lea
in
sbb
inc
pop
or
pop
or
mov
or
push
(bad)
(bad)
call
adc
add
pop
or
or
(bad)
call
adc
add
fadd
cli
sbb
es
or
push
or
in
std
(bad)
call
xor
sbb
add
sub
add
or
fdivr
(bad)
call
adc
add
out
call
aad
pop
pop
or
sbb
cmp
call
or
mov
inc
add
push
push
sbb
add
sub
add
or
cmp
std
(bad)
call
cmp
(bad)
call
or
or
xchg
std
(bad)
call
inc
add
push
add
sub
add
xor
cmps
add
add
add
adc
pop
or
add
push
rcl
adc
scas
(bad)
(bad)
inc
add
add
add
add
add
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
adc
mov
adc
add
adc
pop
or
sti
add
add
cmp
add
add
cmp
add
add
cmp
add
add
or
rol
add
sbb
xor
sub
add
or
add
jne
(bad)
call
inc
add
push
sbb
sbb
add
inc
add
add
add
pop
add
add
add
add
add
add
add
add
add
pop
add
add
inc
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
sbb
neg
hlt
push
sub
push
sub
rol
add
es
sub
cmp
(bad)
(bad)
call
adc
add
addr16
xchg
sbb
push
adc
(bad)
(bad)
call
inc
add
push
and
push
jns
cmp
popa
pop
adc
sub
inc
push
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
call
(bad)
(bad)
(bad)
jmp
add
icebp
add
add
or
adc
mov
adc
add
push
xor
sub
add
or
add
mov
(bad)
call
inc
add
push
sbb
add
pop
or
adc
jne
(bad)
call
inc
add
push
and
int
pop
dec
pop
adc
or
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
dec
(bad)
(bad)
call
add
jle
add
cmp
add
push
adc
sub
(bad)
call
xor
push
xor
sub
add
sub
or
or
add
or
(bad)
call
adc
add
es
jns
and
mov
adc
pop
or
xchg
add
and
add
and
add
add
xlat
add
push
sbb
add
(bad)
(bad)
call
adc
add
sbb
xor
or
adc
enter
rcl
add
adc
push
cmp
(bad)
(bad)
call
or
or
(bad)
inc
pop
inc
add
add
into
(bad)
(bad)
call
or
adc
cdq
std
(bad)
call
adc
je
ror
pop
retf
adc
pop
or
add
jge
(bad)
call
cmp
add
and
mov
cmps
mov
add
add
add
adc
adc
or
add
or
add
cmp
add
add
inc
or
add
add
add
cdq
add
add
add
add
add
add
add
add
add
fadd
add
mov
add
add
or
aaa
add
push
sbb
or
add
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
push
(bad)
(bad)
call
adc
sub
add
sbb
add
sub
add
or
or
or
jg
(bad)
call
inc
add
push
and
xchg
icebp
mov
cmp
(bad)
(bad)
call
adc
pusha
(bad)
(bad)
call
aas
add
push
sbb
xor
sub
add
push
(bad)
(bad)
call
or
mov
add
pop
adc
ds
(bad)
call
adc
add
or
cmp
(bad)
(bad)
call
or
or
sub
(bad)
call
adc
add
or
rol
add
sbb
pop
or
retf
inc
popa
sbb
add
add
add
add
sbb
(bad)
call
inc
add
push
pop
or
sbb
cmp
adc
in
(bad)
call
adc
add
push
sub
push
or
aam
(bad)
call
adc
add
leave
repz
and
push
pop
or
pop
or
sbb
mov
cmp
add
sbb
sub
add
or
pop
sbb
cmp
adc
add
sbb
add
sub
add
or
sbb
xchg
(bad)
call
adc
add
sbb
add
sub
add
sub
and
add
and
add
sub
add
push
sub
adc
(bad)
call
adc
or
rol
add
es
or
inc
(bad)
(bad)
call
cmp
add
push
push
xor
sub
add
sub
or
sub
(bad)
call
adc
add
sbb
add
add
or
mov
sub
(bad)
(bad)
call
adc
add
sbb
add
sub
add
cmp
(bad)
(bad)
call
or
repnz
(bad)
call
adc
add
mov
ds
into
pop
pop
or
cmp
add
add
or
inc
(bad)
(bad)
call
(bad)
cmp
std
(bad)
call
inc
add
push
push
or
push
inc
or
add
dec
(bad)
(bad)
inc
(bad)
(bad)
(bad)
jle
(bad)
inc
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
out
(bad)
(bad)
call
or
xchg
std
(bad)
call
adc
add
or
sbb
cli
std
(bad)
call
or
or
or
cmp
(bad)
call
cmp
add
sbb
xor
sub
add
or
or
adc
pop
std
(bad)
call
cmp
add
and
jmp
sbb
or
add
sub
add
adc
adc
mov
add
or
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
adc
add
adc
adc
jbe
(bad)
inc
add
add
add
add
add
add
add
imul
add
lahf
add
add
add
add
add
pop
add
add
add
mov
add
rol
add
sti
add
add
add
add
pop
inc
add
add
in
add
add
adc
add
mov
add
sbb
nop
add
add
adc
(bad)
rcl
inc
jns
push
and
mov
addps
add
sbb
jb
add
sbb
add
outs
(bad)
(bad)
call
adc
add
or
or
add
pop
(bad)
(bad)
call
aas
add
push
sbb
sub
add
cmp
add
sbb
cmp
add
pop
adc
cmp
(bad)
call
add
push
es
(bad)
(bad)
call
movlps
and
(bad)
call
adc
add
sbb
add
sub
add
sub
sbb
pop
or
add
or
(bad)
call
adc
add
sbb
add
sub
add
or
adc
lock
(bad)
call
adc
add
sub
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
sub
sbb
hlt
push
sub
sbb
add
push
sbb
adc
js
(bad)
call
inc
add
push
sbb
add
sbb
pop
or
(bad)
(bad)
call
cmp
adc
cmp
(bad)
(bad)
call
(bad)
(bad)
call
adc
sbb
cmp
(bad)
call
push
adc
cmp
(bad)
call
inc
add
push
push
sbb
add
add
cmp
std
(bad)
inc
inc
push
add
add
add
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
or
sar
call
sub
pop
sub
sbb
add
lock
(bad)
call
cmp
add
sbb
xor
sub
add
add
dec
add
add
push
add
add
icebp
add
push
pop
or
add
enter
rol
add
sbb
xor
sub
add
sub
push
adc
scas
std
(bad)
call
adc
add
sbb
add
sub
add
or
adc
xchg
std
(bad)
call
adc
add
add
adc
adc
data16
add
add
cmp
add
add
or
push
rcl
sbb
add
sub
add
inc
adc
add
lahf
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
jle
add
enter
fiadd
add
sbb
sbb
sbb
scas
rcl
add
pop
or
sub
or
lahf
rcl
add
add
or
sub
cmp
(bad)
sub
push
sbb
sub
add
or
pop
pop
or
stc
sbb
neg
or
cmp
(bad)
call
xor
add
push
or
pop
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
rol
add
es
push
or
sbb
(bad)
call
inc
add
push
sbb
sub
add
and
adc
add
sub
or
idiv
(bad)
call
inc
add
push
sbb
pop
cmp
add
add
or
loop
(bad)
call
cmp
loopne
adc
xor
or
cmp
(bad)
(bad)
call
inc
add
push
rol
add
sbb
pop
or
mov
(bad)
call
adc
add
push
xor
sub
add
cmp
(bad)
(bad)
call
cmp
(bad)
call
adc
(bad)
(bad)
(bad)
call
adc
add
sbb
cmp
(bad)
(bad)
inc
popa
pop
and
add
add
fdivrp
(bad)
call
or
or
push
(bad)
call
adc
add
or
pop
or
loopne
(bad)
call
or
push
(bad)
(bad)
call
inc
add
push
sbb
inc
(bad)
(bad)
call
adc
add
sbb
add
sub
add
(bad)
call
or
cmp
(bad)
(bad)
inc
inc
or
add
mov
(bad)
dec
(bad)
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
add
add
add
(bad)
call
or
cld
std
(bad)
call
adc
add
sbb
add
sub
add
sbb
pop
or
(bad)
call
adc
add
pop
or
pop
(bad)
(bad)
call
or
push
(bad)
(bad)
call
or
(bad)
std
(bad)
call
adc
add
push
add
sub
add
adc
push
add
add
add
adc
adc
pop
add
add
add
cmp
add
add
or
adc
adc
add
mov
or
sub
or
add
add
(bad)
inc
add
add
add
add
add
jns
add
xchg
add
add
add
add
add
add
add
add
add
pop
add
add
add
jl
add
mov
add
test
add
add
add
add
add
add
add
add
add
add
add
jne
add
call
add
or
(bad)
rcl
or
push
inc
or
add
xor
add
add
add
fild
add
sbb
add
and
add
push
add
add
add
sbb
(bad)
call
adc
add
sbb
add
sub
add
cmps
add
add
or
or
cmp
(bad)
call
dec
add
push
and
mov
mov
or
sbb
inc
pop
or
pop
(bad)
(bad)
call
dec
add
push
es
or
cs
adc
or
inc
add
push
sbb
xor
sub
es
inc
add
push
es
or
cmp
(bad)
(bad)
call
inc
add
push
sbb
pop
or
pop
adc
fdivrp
(bad)
call
adc
enter
and
or
push
or
adc
ret
call
adc
bound
iret
arpl
pop
or
sbb
(bad)
pop
sbb
movs
(bad)
(bad)
call
inc
add
push
es
inc
or
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
stc
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jl
add
dec
add
add
add
dec
add
add
cmp
(bad)
call
adc
add
addr16
and
or
or
pop
or
jmp
cmp
inc
add
push
sbb
sbb
cs
(bad)
call
adc
add
push
or
adc
push
(bad)
(bad)
call
adc
add
or
pop
or
push
(bad)
(bad)
call
adc
add
sbb
sbb
(bad)
call
or
sti
std
(bad)
call
inc
add
push
and
cli
and
mov
and
pop
or
rol
add
es
or
(bad)
call
inc
add
push
pop
or
pop
or
retf
std
(bad)
call
adc
add
sbb
add
sub
add
(bad)
inc
add
test
add
aad
add
sub
add
push
sub
or
cmp
inc
add
push
es
cmp
adc
or
sbb
xchg
(bad)
(bad)
call
push
or
jb
(bad)
call
adc
add
add
pop
inc
add
add
adc
(bad)
call
or
pop
sbb
push
std
(bad)
call
adc
add
pop
xor
sub
add
or
push
(bad)
(bad)
call
cmp
(bad)
call
(bad)
cmp
std
(bad)
call
inc
add
push
and
jle
and
mov
jb
or
sbb
sbb
(bad)
call
cmc
push
or
or
(bad)
call
adc
add
push
outs
push
jle
imul
pop
or
sbb
or
(bad)
call
adc
cmp
cld
(bad)
call
inc
add
push
es
or
fdivr
(bad)
call
adc
add
jg
jle
and
ins
fcom
or
add
sub
add
xor
lahf
add
add
add
adc
or
add
add
add
add
add
add
pop
add
add
add
aad
add
inc
add
add
add
add
add
add
adc
or
adc
add
add
sldt
add
(bad)
inc
add
add
add
add
add
pop
add
add
add
test
add
xchg
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
or
mov
add
sbb
mov
add
pop
or
add
stos
rol
add
and
mov
sbb
add
push
or
adc
nop
rcl
add
add
add
not
xor
xor
popa
adc
cmp
(bad)
(bad)
call
or
add
outs
(bad)
(bad)
call
inc
add
push
sbb
add
add
sub
push
adc
push
(bad)
(bad)
call
dec
add
push
sbb
add
cmp
(bad)
(bad)
call
adc
aas
(bad)
(bad)
call
adc
add
sbb
sbb
add
das
(bad)
(bad)
call
inc
add
push
sbb
loop
(bad)
call
adc
sbb
(bad)
call
adc
fdivr
test
pop
adc
add
pop
inc
add
add
xchg
(bad)
(bad)
call
or
adc
out
(bad)
(bad)
call
inc
add
push
and
js
and
sbb
ja
adc
push
inc
push
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
add
add
add
add
sbb
(bad)
(bad)
call
cmp
add
es
sub
mov
inc
add
push
adc
cmp
call
or
gs
(bad)
call
or
add
test
(bad)
call
add
push
push
sbb
add
sub
add
cmp
(bad)
call
adc
push
adc
add
add
and
add
add
adc
add
sub
or
add
add
add
add
inc
add
add
add
add
add
push
add
add
inc
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
pop
sub
sbb
hlt
push
sub
sbb
out
rol
add
es
sub
cmp
std
(bad)
call
adc
add
or
or
(bad)
std
(bad)
call
sub
sbb
push
or
cmp
adc
mov
adc
in
adc
sbb
jge
cs
pop
adc
add
add
xor
add
add
add
add
adc
inc
add
adc
inc
push
add
add
add
add
add
xor
add
add
add
dec
add
add
add
add
add
jnp
add
int3
add
add
add
add
add
add
adc
sub
rcl
add
sbb
add
sub
add
or
add
add
(bad)
inc
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
lahf
add
add
add
add
add
add
add
add
add
add
adc
adc
cmp
add
add
inc
(bad)
(bad)
call
adc
or
xchg
rol
add
sbb
add
add
sub
(bad)
call
or
or
jne
(bad)
call
adc
add
fmul
arpl
push
popa
adc
es
add
add
or
xchg
or
adc
sbb
(bad)
(bad)
call
cmp
add
ror
add
es
or
ss
(bad)
call
adc
add
test
and
jmp
or
pop
pop
xchg
or
push
sbb
pop
adc
pop
or
adc
pop
or
or
push
(bad)
(bad)
call
cmp
add
cmp
or
or
repnz
(bad)
call
cmp
add
sbb
or
xchg
(bad)
(bad)
call
adc
or
(bad)
(bad)
call
xor
add
sbb
add
sub
add
jbe
(bad)
dec
lea
add
adc
add
push
adc
mov
pop
pop
adc
or
stos
(bad)
(bad)
call
adc
add
sbb
add
sub
add
add
add
call
adc
cmp
(bad)
(bad)
call
sub
adc
sbb
or
jp
(bad)
call
inc
add
push
cmp
or
(bad)
(bad)
call
adc
add
pusha
lahf
sub
and
adc
add
pop
vmovups
popa
or
adc
cmp
(bad)
call
adc
add
adc
adc
pop
xchg
adc
adc
pop
pop
adc
pop
xchg
popa
rcr
sbb
(bad)
call
cmp
add
sbb
add
sub
add
add
push
adc
adc
cmp
std
(bad)
call
aaa
add
push
sbb
or
pop
or
xor
push
adc
cmp
std
(bad)
call
adc
add
adc
es
adc
pop
adc
sbb
or
adc
cmp
std
(bad)
call
cmp
add
adc
or
add
int3
pop
or
or
gs
(bad)
call
movlps
cmp
adc
add
sbb
pop
or
or
inc
std
(bad)
call
adc
sbb
or
or
or
mov
(bad)
call
adc
add
add
sub
xor
add
add
and
add
add
adc
add
sbb
add
add
sbb
add
sub
add
inc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
ror
add
es
dec
add
push
sub
cmp
add
jl
add
add
jge
add
add
add
jl
add
add
jge
add
add
add
add
jge
add
add
or
add
add
pop
add
sub
add
sub
add
adc
adc
daa
add
add
add
sub
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
jge
add
mov
add
cmp
add
add
or
or
add
add
ror
add
es
or
sub
add
ret
fsub
xor
daa
push
xor
sbb
add
add
cmp
add
push
cmp
add
push
cmp
add
sbb
dec
add
add
or
call
push
add
add
or
or
call
push
add
add
sbb
add
sub
add
or
(bad)
call
dec
add
push
pop
push
add
sub
add
cmp
add
add
or
call
push
add
add
sbb
cmp
(bad)
(bad)
call
dec
add
push
es
or
call
push
add
add
pop
or
call
push
add
add
pop
xor
sub
add
inc
or
add
push
add
add
add
xor
add
add
add
adc
(bad)
push
call
(bad)
jge
add
add
add
add
dec
add
push
es
adc
call
push
add
add
sbb
add
sub
add
mov
sub
mov
or
or
call
push
add
add
add
add
pop
add
add
jl
add
add
sbb
add
jl
add
add
sbb
add
sub
add
push
or
or
or
call
dec
add
push
push
or
cmp
(bad)
call
push
add
add
or
add
add
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
jmp
pop
push
or
call
dec
add
push
and
jb
jb
popa
or
or
call
dec
add
push
push
or
sub
add
sub
adc
adc
add
and
adc
ror
add
adc
add
(bad)
inc
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
add
pop
sub
(bad)
add
add
or
add
sbb
outs
add
add
pop
adc
call
push
add
add
sbb
add
sub
es
dec
add
push
es
push
adc
sbb
add
call
push
add
add
sbb
add
or
add
call
dec
add
push
and
xchg
test
pop
adc
add
adc
call
push
add
add
sti
dec
jmp
cmp
add
sbb
add
movlps
call
push
add
add
(bad)
or
and
out
pop
adc
add
add
or
add
cmp
add
add
or
pop
add
add
sbb
add
call
dec
add
push
sbb
sub
add
or
add
call
dec
add
push
sbb
jne
add
add
pop
or
add
pop
adc
call
dec
add
push
sbb
add
or
add
call
push
add
add
adc
adc
add
xchg
(bad)
(bad)
(bad)
cmp
add
test
add
add
add
add
add
add
(bad)
(bad)
call
add
dec
add
add
add
add
add
add
add
add
add
add
add
sbb
add
call
dec
add
push
sbb
add
add
inc
or
or
cmp
std
(bad)
call
dec
add
push
sub
add
or
add
or
add
mov
add
mov
add
add
add
loope
(bad)
jmp
(bad)
(bad)
(bad)
out
(bad)
(bad)
push
(bad)
(bad)
jmp
add
pop
or
add
dec
(bad)
(bad)
call
sub
pop
or
repnz
push
adc
call
push
add
add
adc
adc
call
dec
add
push
and
dec
and
adc
add
call
push
add
add
adc
lods
sbb
std
(bad)
call
dec
add
push
sbb
add
call
cmp
add
add
sbb
add
call
dec
add
push
pop
push
xor
sub
add
adc
sbb
add
call
dec
add
push
and
cmp
scas
dec
push
pop
adc
add
es
add
call
push
add
add
sbb
adc
call
push
add
add
adc
add
or
cld
(bad)
call
dec
add
push
sbb
add
pop
adc
add
call
dec
add
push
sbb
add
add
call
push
add
add
mov
pop
pop
adc
(bad)
call
or
cmp
call
dec
add
push
sbb
add
add
call
push
add
add
xor
jg
cmp
add
(bad)
call
movntps
adc
add
call
push
add
add
adc
xchg
(bad)
(bad)
call
adc
add
call
dec
add
push
sbb
adc
sbb
add
call
dec
add
push
sbb
add
(bad)
(bad)
call
adc
add
call
dec
add
push
sbb
add
sub
add
inc
(bad)
(bad)
call
or
inc
(bad)
(bad)
call
sbb
sti
(bad)
call
dec
add
push
and
mov
push
inc
popa
adc
add
add
pop
add
add
jl
add
add
sbb
add
jl
add
add
sbb
add
sub
add
push
or
adc
call
push
add
add
sbb
add
sub
add
adc
sbb
add
sub
adc
adc
push
add
add
add
adc
sbb
add
pop
or
push
rcl
add
add
sbb
add
sub
add
inc
add
add
(bad)
(bad)
inc
add
add
sbb
push
inc
add
add
add
add
add
add
add
add
add
dec
add
push
es
dec
add
push
sub
add
sub
xor
add
add
push
add
adc
sbb
add
pop
or
push
rcr
add
add
pop
inc
add
add
jecxz
(bad)
inc
add
add
add
or
sub
or
inc
add
add
add
add
add
add
add
dec
add
push
es
dec
add
push
sub
add
sub
add
xor
jg
add
pop
add
adc
sub
add
or
add
add
jae
add
or
(bad)
add
add
mov
add
sub
sbb
add
push
and
in
add
add
test
or
inc
add
add
mov
jle
add
add
sub
add
outs
rol
or
adc
and
add
and
add
add
test
add
add
push
sub
dec
add
push
es
dec
add
push
sub
add
adc
add
add
adc
adc
add
add
xor
add
add
add
add
adc
or
add
add
add
fadd
add
stc
add
add
add
add
add
add
add
add
add
jns
add
mov
add
add
add
add
add
add
add
loopne
add
cmp
add
sbb
sbb
add
or
push
add
push
sbb
add
adc
cmp
(bad)
inc
add
add
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
add
fwait
add
add
add
add
add
add
add
daa
add
add
add
pop
add
add
add
cdq
add
add
or
adc
mov
jp
add
push
sbb
add
sub
add
and
(bad)
call
add
jae
(bad)
call
jbe
add
sbb
sub
add
or
adc
pop
(bad)
(bad)
call
sbb
add
sbb
add
sub
add
cmp
add
add
or
or
add
cmp
(bad)
call
pop
add
push
and
add
and
scas
or
add
pop
movntps
adc
sbb
sbb
add
adc
pop
inc
or
add
mov
add
add
add
add
add
jl
add
add
add
(bad)
(bad)
jmp
add
add
add
add
or
pop
adc
(bad)
(bad)
call
pop
add
push
push
adc
sbb
bound
or
add
retf
call
sbb
add
push
sub
pop
adc
add
mov
pop
add
push
pop
sbb
add
sub
add
dec
(bad)
(bad)
call
(bad)
(bad)
call
sbb
add
sbb
add
mov
(bad)
call
sbb
add
sbb
add
add
pop
(bad)
(bad)
call
adc
sub
(bad)
call
or
or
or
add
gs
(bad)
call
sbb
add
add
add
push
add
add
mov
adc
add
inc
(bad)
(bad)
call
add
push
sbb
sub
add
cmp
adc
sub
(bad)
call
ins
add
push
pop
sbb
add
sub
add
mov
cmp
or
(bad)
(bad)
call
push
add
push
push
push
add
sub
add
cmp
(bad)
inc
jl
add
add
push
add
add
arpl
pop
adc
add
fdivr
(bad)
call
add
push
sbb
xor
sub
add
cmp
(bad)
(bad)
call
adc
add
mov
bound
add
es
cmp
(bad)
(bad)
inc
sub
pop
or
dec
std
(bad)
call
adc
pushf
std
(bad)
call
sbb
add
push
jns
and
lods
daa
popa
adc
cmp
std
(bad)
call
sub
pop
push
adc
je
(bad)
call
sbb
add
pop
(bad)
(bad)
(bad)
call
cmp
(bad)
call
adc
pop
std
(bad)
call
sbb
add
adc
sbb
pop
adc
std
(bad)
call
jne
add
sbb
xor
sub
add
or
(bad)
cld
(bad)
(bad)
fidiv
gs
push
cmp
(bad)
call
or
xor
cmp
(bad)
(bad)
call
adc
add
paddw
call
pop
add
push
and
mov
or
leave
imul
cmp
push
adc
out
cld
(bad)
call
dec
add
push
sbb
xor
sub
add
or
jg
(bad)
call
movlps
sar
(bad)
call
push
adc
add
or
add
scas
add
push
fsubr
pop
or
add
push
add
add
add
add
add
add
add
add
add
add
dec
add
push
es
dec
add
push
sub
add
add
add
add
add
add
add
cdq
add
add
add
add
add
add
xor
add
add
adc
cmp
push
pop
xor
rcr
add
add
sbb
add
sub
add
or
add
add
(bad)
inc
add
add
add
add
add
add
add
bound
add
mov
add
rol
add
push
add
add
add
add
add
jbe
add
pop
add
iret
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
cdq
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
fwait
add
add
fadd
add
push
push
add
push
push
add
in
add
cli
push
add
xor
add
push
pop
add
jae
add
clc
or
add
add
sub
add
pop
or
add
add
mov
add
mov
or
add
or
add
add
test
or
add
or
add
or
add
or
add
add
mov
add
or
add
or
add
or
add
or
add
inc
or
add
mov
add
aad
add
sbb
add
xor
add
fs
add
xchg
add
mov
push
add
cld
push
add
and
add
pop
sldt
ja
add
xchg
sldt
mov
sldt
or
add
sub
add
inc
adc
add
add
add
adc
add
adc
add
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
add
mov
adc
add
adc
add
adc
add
adc
add
add
jne
add
popf
adc
add
adc
add
adc
add
adc
add
add
dec
adc
add
adc
add
adc
add
adc
add
add
inc
adc
add
jl
add
mov
adc
add
push
push
add
jnp
add
cwde
push
add
fcom
add
hlt
push
add
push
pop
add
arpl
add
xchg
add
mov
pop
add
loopne
add
out
pop
add
and
add
cmp
add
outs
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
lea
add
fstp
add
lock
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
xchg
sbb
add
sbb
add
sbb
add
add
sbb
sbb
add
add
mov
add
sbb
add
sbb
add
sbb
add
outs
sbb
add
iret
sbb
add
or
push
add
xor
push
add
xchg
add
aad
add
call
pop
add
sub
pop
add
test
add
mov
pop
add
jmp
add
or
add
cmp
add
push
and
add
add
mov
add
shl
add
jmp
and
add
add
dec
and
add
and
add
and
add
and
add
and
add
add
jno
add
xchg
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
pusha
and
add
and
add
and
add
and
add
and
add
xchg
add
hlt
and
add
ds
jl
add
(bad)
add
stos
add
ret
add
add
jmp
add
sbb
add
push
daa
add
xchg
add
mov
daa
add
cmp
add
pop
sub
add
add
mov
add
shr
add
out
add
sbb
add
cmp
add
push
sub
add
add
test
add
mov
sub
add
sub
add
add
xchg
sub
add
sub
add
add
push
add
fwait
sub
add
sub
add
sub
add
sub
add
jne
add
xchg
sub
add
(bad)
sub
add
sbb
add
cmp
add
popa
add
jnp
add
xchg
add
mov
add
adc
das
add
data16
add
jne
add
mov
add
(bad)
das
add
(bad)
add
add
add
pop
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
jo
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
(bad)
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
xor
add
xor
add
add
outs
xor
add
xor
add
xor
add
xor
add
js
add
mov
add
in
add
add
add
sub
add
dec
add
jno
add
pop
push
cmp
sub
add
adc
adc
add
and
or
ja
(bad)
call
push
add
push
adc
sub
push
pop
xor
cli
(bad)
call
jae
add
push
adc
es
xor
cli
(bad)
call
sbb
add
sbb
add
sub
add
xor
cli
(bad)
call
sbb
add
adc
add
xchg
add
and
add
add
hlt
add
push
add
add
push
sub
pop
sbb
outs
sub
add
push
add
add
push
sub
dec
add
add
or
repz
(bad)
call
jno
add
and
fdiv
and
dec
fbstp
pop
adc
es
sub
push
pop
adc
cmp
stc
(bad)
call
sbb
add
mov
cmp
and
adc
es
adc
cmp
outs
imul
push
pop
and
add
add
test
add
sub
add
push
and
or
xchg
stc
(bad)
call
sbb
add
pop
xor
stc
(bad)
call
pop
add
push
cmp
add
pop
aas
adc
and
add
add
or
arpl
(bad)
call
jae
add
and
add
mov
adc
es
xor
stc
(bad)
call
push
add
push
sbb
sub
add
mov
add
adc
pop
or
or
sub
(bad)
call
push
add
push
sbb
xor
sub
add
cmp
push
add
add
or
or
(bad)
call
data16
push
add
add
push
adc
pop
and
or
or
and
add
add
sub
add
sub
leave
add
add
or
aad
(bad)
call
sbb
add
stos
sbb
outs
and
mov
es
inc
adc
pop
xor
or
mov
(bad)
call
jae
add
and
cmp
inc
add
pop
adc
es
and
sub
add
pop
push
adc
cmp
push
add
sbb
add
add
xor
clc
(bad)
call
jns
add
sbb
xor
sub
add
lea
add
cmp
add
and
cmp
(bad)
call
ja
add
sbb
add
add
sub
push
and
add
add
or
cmp
(bad)
call
sbb
add
pushf
div
and
test
es
and
scas
add
and
add
add
or
adc
(bad)
call
sbb
add
repnz
jmp
outs
pop
adc
es
sub
push
pop
xor
idiv
call
add
push
push
adc
es
adc
cmp
idiv
call
sbb
add
cmp
xor
add
sbb
or
ret
idiv
call
push
add
push
pop
adc
and
aas
add
pop
jg
cmp
add
and
add
add
or
popf
idiv
call
bound
add
push
push
xor
sub
add
sub
push
pop
xor
idiv
call
ins
add
push
sbb
add
add
or
ins
idiv
call
sbb
add
pop
xor
push
cmp
add
pop
and
add
add
or
dec
idiv
call
push
add
push
sbb
add
add
xor
idiv
call
outs
add
push
es
push
adc
add
or
and
(bad)
call
pop
add
push
es
sub
push
and
add
add
or
or
(bad)
call
arpl
add
and
loop
jae
pop
adc
es
dec
adc
pop
sub
or
out
(bad)
call
pop
add
push
and
adc
sbb
or
pop
sub
push
cmp
outs
imul
push
and
int3
adc
push
and
add
add
outs
add
add
sldt
push
pop
sbb
add
pop
dec
adc
cmp
sbb
add
adc
cmps
xor
dec
pop
adc
add
add
push
and
vmovups
sub
add
and
add
add
rol
add
sub
add
push
pop
push
adc
cmp
(bad)
call
sbb
add
add
add
push
adc
and
add
add
xor
add
sub
add
or
pop
jnp
adc
inc
add
push
and
or
sub
(bad)
call
jne
add
and
xchg
fwait
sub
jnp
push
cmp
add
add
dec
adc
add
or
push
(bad)
call
sbb
add
sbb
add
sub
add
dec
adc
pop
xor
cmc
(bad)
call
pop
add
push
push
sbb
add
add
sub
add
and
add
add
or
ret
call
sbb
add
pop
xor
cmc
(bad)
call
dec
add
push
sbb
ss
add
xor
add
adc
cmp
sbb
add
cmp
add
add
jl
add
add
push
add
add
pop
add
push
outs
push
add
add
dec
add
push
outs
ins
add
push
sbb
add
add
or
pusha
cmc
(bad)
call
sbb
add
pop
sub
push
cmp
add
add
sub
outs
push
add
push
sub
sub
outs
push
add
push
sub
push
adc
pop
xor
cmc
(bad)
call
sbb
add
in
dec
ins
and
addr16
adc
or
pop
jno
push
and
or
push
(bad)
call
jno
add
push
adc
es
pop
adc
and
add
add
or
out
(bad)
call
outs
add
push
sbb
or
pop
push
adc
cmp
cmp
add
cmp
hlt
(bad)
call
add
push
sbb
add
sub
add
xchg
add
add
outs
pop
add
push
adc
pop
and
or
or
and
add
and
add
add
cdq
add
push
and
add
add
or
xchg
(bad)
call
sbb
add
cmps
adc
dec
add
pop
adc
add
add
push
pop
and
add
and
add
sub
push
adc
and
or
dec
hlt
(bad)
call
sbb
add
pop
add
sub
add
xor
hlt
(bad)
call
arpl
add
pop
sbb
add
sub
add
add
add
scas
and
add
sub
push
adc
sbb
add
add
push
add
add
or
sbb
dec
add
add
or
dec
add
push
or
and
or
call
sbb
add
rcr
and
and
cmp
sbb
add
add
or
shl
call
pop
add
push
and
dec
push
and
inc
cs
adc
es
sub
push
and
add
add
or
popf
repz
call
imul
push
sub
outs
add
push
adc
pop
and
add
add
sub
add
or
and
in
add
sub
add
pop
and
or
push
arpl
add
sbb
or
pop
sub
push
and
add
add
or
dec
repz
call
sbb
add
sub
jp
cmp
or
pop
jne
les
add
pop
movlps
cmp
(bad)
call
sbb
add
sbb
add
sub
add
push
inc
cwde
add
add
add
push
or
add
and
add
sub
add
add
out
add
mov
add
xchg
adc
add
add
stos
pop
add
push
pop
add
add
add
add
add
sti
(bad)
(bad)
jmp
jmp
add
add
nop
sbb
add
add
mov
add
sbb
add
fwait
and
add
lods
sbb
add
(bad)
jmp
and
add
cld
(bad)
dec
sbb
add
or
(bad)
jmp
sub
add
or
add
add
inc
sbb
add
add
fist
add
adc
add
fstp
add
sbb
add
ds
add
pop
stc
(bad)
dec
adc
add
mov
sbb
add
add
or
add
add
add
add
(bad)
inc
add
popf
add
add
inc
add
push
add
(bad)
jmp
sbb
add
or
add
pop
add
and
idiv
(bad)
jns
add
xchg
add
inc
or
add
mov
add
stos
adc
add
scas
or
add
add
and
add
add
xchg
push
add
mov
sub
add
sti
(bad)
call
push
add
cmp
(bad)
dec
clc
(bad)
push
adc
add
sub
add
add
add
add
mov
add
and
add
mov
add
jo
add
xchg
sub
add
and
add
pop
add
jo
add
out
sbb
add
add
add
pop
add
mov
and
add
js
add
in
(bad)
inc
and
add
sbb
add
or
(bad)
call
sub
add
add
test
(bad)
dec
add
mov
adc
add
add
dec
sbb
add
and
add
and
add
(bad)
call
add
xchg
and
add
sub
add
add
mov
sub
add
(bad)
push
and
add
add
add
sub
add
add
sbb
add
sbb
add
sbb
add
adc
add
add
adc
add
or
cmps
lock
call
pop
add
push
sbb
xor
sub
add
xor
lock
call
sbb
add
ja
hlt
jbe
out
cmp
pop
adc
es
pop
adc
add
or
ins
lock
call
pop
add
push
es
sub
push
cmp
(bad)
inc
outs
pop
add
push
pop
and
add
add
jmp
mov
add
and
add
add
or
cmp
(bad)
call
add
push
es
cmp
add
add
or
es
call
sbb
add
pop
imul
push
add
and
add
add
or
or
sbb
add
pop
sub
push
pop
adc
cmp
out
(bad)
call
sbb
add
adc
add
add
push
adc
pop
xor
adc
loop
add
or
jle
add
and
add
sub
add
push
pop
ins
adc
cmp
cmp
add
add
or
mov
(bad)
call
pop
add
push
push
push
xor
sub
add
sub
push
outs
bound
add
sbb
add
cmp
pop
add
push
es
cmp
add
and
add
add
or
js
(bad)
call
sbb
add
outs
cmp
sbb
cmp
sbb
add
add
or
push
out
(bad)
call
sbb
add
jle
or
and
pop
or
add
add
push
and
(bad)
int3
adc
sub
add
and
add
add
mov
add
sub
add
push
add
add
push
adc
pop
and
adc
loop
add
or
and
add
and
add
add
jmp
add
adc
and
add
add
or
out
out
(bad)
call
dec
add
push
and
ins
sbb
adc
cmp
out
(bad)
call
sbb
add
sbb
add
sub
add
xchg
add
cmp
add
pop
adc
cmp
add
add
xchg
inc
and
and
mov
pop
adc
es
sub
push
and
or
xchg
out
(bad)
call
add
push
sbb
or
pop
sbb
adc
and
add
adc
cmp
call
sbb
add
adc
cmp
(bad)
inc
outs
push
add
push
sbb
aam
add
and
add
push
and
add
add
or
inc
out
(bad)
call
push
add
push
cmp
sti
(bad)
inc
outs
push
add
push
push
and
add
and
add
add
call
add
adc
cmp
out
(bad)
call
push
add
push
sbb
sub
add
sub
push
outs
add
push
and
add
add
or
repnz
(bad)
call
sbb
add
adc
es
xor
in
(bad)
call
sbb
add
pop
adc
bound
add
pop
sbb
add
rol
add
adc
cmp
in
(bad)
call
pop
add
push
push
sbb
add
sub
add
sub
add
add
or
mov
sbb
add
pop
sub
push
and
add
add
or
(bad)
in
(bad)
call
jl
add
es
sbb
nop
add
lea
add
adc
cmp
call
sbb
add
mov
rol
inc
pop
adc
es
inc
adc
pop
xor
in
(bad)
call
dec
add
push
sbb
or
pop
sbb
add
pop
and
in
(bad)
call
jno
add
es
popa
adc
cmp
or
adc
pop
xor
in
(bad)
call
add
push
and
sbb
mov
adc
add
aaa
add
add
inc
add
add
hlt
add
push
add
add
push
sub
pop
adc
cmp
in
(bad)
call
sbb
add
and
push
and
cmp
in
(bad)
call
sbb
add
pop
xor
sub
add
cdq
stc
(bad)
call
push
adc
cmp
add
mov
add
and
add
sub
add
or
and
add
add
xlat
add
add
push
add
push
and
or
jl
(bad)
call
dec
add
push
es
xor
in
(bad)
call
outs
add
push
sbb
add
sub
add
sbb
out
add
and
fstp
add
pop
bound
(bad)
sbb
add
fild
add
adc
cmp
in
(bad)
call
sbb
add
push
xor
sub
add
adc
push
adc
cmp
in
(bad)
call
sbb
add
inc
addr16
and
jg
inc
pop
adc
es
daa
cmp
nop
add
add
mov
add
pop
aas
cmp
jp
jnp
add
pop
(bad)
sbb
add
adc
or
fsubr
(bad)
call
jne
add
sbb
or
pop
sub
push
pop
xor
jmp
call
sbb
add
adc
add
add
push
pop
and
add
jo
add
sub
cmp
or
fwait
jmp
call
sbb
add
add
add
push
pop
pop
inc
pop
push
sub
add
push
and
or
jns
(bad)
call
sbb
add
adc
es
sub
push
cmp
(bad)
inc
outs
push
add
push
and
or
add
and
add
add
mov
add
sub
add
push
and
add
add
or
cmp
(bad)
call
jno
add
es
dec
adc
pop
xor
jmp
call
jno
add
sbb
xor
sub
add
push
adc
and
add
add
or
push
jmp
call
push
adc
es
xor
add
and
add
add
or
jmp
sbb
add
and
jno
push
pop
adc
and
push
cmp
adc
cmp
sbb
add
push
xor
sub
add
and
add
add
inc
add
add
hlt
add
push
add
add
push
sub
dec
adc
cmp
imul
push
es
sub
push
and
add
add
or
jne
(bad)
call
sbb
add
sbb
add
sub
add
dec
adc
pop
xor
jmp
add
sbb
add
add
xor
jmp
add
pop
es
sbb
add
cmp
add
adc
cmp
jmp
push
push
adc
es
sub
push
and
add
add
or
or
sbb
add
sbb
add
sub
add
outs
push
add
push
sbb
outs
add
add
aas
add
add
call
add
push
and
vmovups
or
add
and
add
add
adc
add
sub
add
push
pop
sbb
or
shr
call
push
add
push
and
dec
inc
and
xchg
add
or
cmp
outs
pop
add
push
adc
pop
fs
adc
loop
add
or
imul
add
inc
add
add
cdq
add
push
pop
adc
push
and
add
adc
cmp
(bad)
call
push
add
push
sbb
add
sub
add
sub
push
and
add
add
or
pop
jmp
add
push
and
cli
push
and
adc
add
add
push
sbb
add
mov
call
add
push
and
or
add
and
add
add
in
add
add
adc
add
and
add
add
or
add
(bad)
call
sbb
add
xor
jae
and
xchg
pop
adc
es
xor
call
add
push
sbb
add
sub
add
or
push
pop
jg
or
int
(bad)
call
sbb
add
pop
xor
add
add
or
mov
(bad)
call
pop
add
push
sbb
or
pop
inc
adc
and
add
add
or
call
add
dec
ds
imul
xor
push
pop
adc
es
sub
push
sbb
or
jnp
(bad)
call
sbb
add
ins
cmp
push
add
pop
gs
push
add
pop
and
in
push
add
pop
addr16
push
add
pop
arpl
ficom
add
pop
pop
cmp
push
add
pop
inc
adc
cmp
call
add
push
sbb
or
pop
xor
adc
cmp
cmc
(bad)
inc
outs
pop
add
push
and
vmovups
sub
add
and
add
add
mov
add
sub
add
push
pop
adc
add
cmp
out
call
ins
add
push
sbb
xor
sub
add
sub
push
and
add
adc
cmp
out
call
sbb
add
pop
pop
adc
and
or
enter
rcr
add
add
add
push
and
sub
add
and
add
add
les
add
sub
add
push
and
push
pop
sbb
or
xchg
out
call
sbb
add
adc
es
adc
adc
add
pop
dec
cmp
push
add
pop
xor
add
add
pop
jnp
or
imul
call
popa
add
push
sbb
or
cmp
hlt
(bad)
call
push
adc
add
or
dec
out
call
sbb
add
xchg
adc
add
mov
inc
push
pop
adc
cmp
hlt
(bad)
inc
push
sub
add
push
and
add
adc
cmp
out
call
js
add
es
repz
call
or
lahf
adc
cmp
in
add
adc
cmp
out
call
push
add
push
sbb
or
pop
sub
push
pop
jne
or
out
(bad)
call
popa
add
push
sbb
or
pop
xor
out
call
sbb
add
adc
sbb
push
pop
xor
out
call
sbb
add
mov
fisttp
pusha
dec
les
pop
adc
es
push
add
adc
cmp
pop
add
push
es
jo
and
adc
cmp
dec
add
push
and
ror
daa
add
add
pop
add
push
outs
push
push
adc
add
or
pop
out
call
sbb
add
fnsave
push
pop
and
adc
add
add
push
and
int3
adc
sub
add
and
add
add
mov
sldt
push
and
or
sbb
(bad)
call
sbb
add
and
and
es
inc
adc
cmp
in
call
sbb
add
sbb
add
sub
add
xor
in
call
pusha
add
push
and
aas
dec
jge
loopne
ja
pop
adc
add
add
push
and
vmovups
sub
add
and
add
and
sldt
push
and
add
add
or
movs
in
call
push
add
push
push
sbb
add
sub
add
xor
in
call
ins
add
push
sbb
or
pop
sub
push
and
add
add
or
jne
(bad)
call
sbb
add
pop
xor
sub
add
or
add
add
or
push
in
call
sbb
add
add
pusha
add
push
outs
jb
add
pop
aaa
adc
cmp
in
call
bound
add
es
jae
push
and
add
add
or
and
(bad)
call
pop
add
push
push
sbb
add
sub
add
outs
jno
add
and
(bad)
int3
adc
or
add
and
leave
add
add
icebp
add
push
push
adc
and
add
add
or
out
(bad)
call
push
add
push
and
cmp
pop
and
or
push
pop
adc
es
xor
in
call
sbb
add
sub
add
and
add
cmp
cmp
adc
or
movs
in
call
jns
add
sbb
xor
sub
add
je
(bad)
inc
outs
add
push
pop
or
ret
add
add
xchg
add
add
call
add
push
and
int3
adc
sub
add
and
add
add
sti
add
add
adc
add
pop
pop
adc
cmp
(bad)
call
sbb
add
pop
or
jmp
bound
or
add
add
push
pop
and
add
add
mov
add
sub
add
push
pop
cmp
push
pop
xor
in
call
sbb
add
add
push
add
push
outs
pop
add
push
pop
aaa
adc
cmp
in
call
sbb
add
adc
add
add
push
and
vmovups
push
and
add
and
add
sub
push
pop
sub
push
pop
xor
jecxz
call
sbb
add
inc
and
ror
and
or
pop
or
add
dec
add
add
or
cmps
jecxz
call
jae
add
adc
sub
add
outs
outs
add
push
and
add
add
or
xchg
(bad)
call
pop
add
push
and
stc
lock
or
add
movs
add
add
rol
add
sub
add
push
add
add
push
sub
and
add
add
hlt
add
push
add
add
push
sub
push
or
xor
(bad)
call
pop
add
push
es
inc
adc
and
add
adc
cmp
jecxz
call
js
add
and
sbb
es
xor
jecxz
call
arpl
add
and
sbb
inc
or
or
pop
dec
adc
cmp
loop
call
sbb
add
adc
es
cmp
add
pop
cmp
add
and
or
mov
sbb
add
sbb
add
add
xor
loop
call
add
push
es
adc
add
jl
and
add
pop
sub
sbb
add
pop
outs
adc
cmp
add
add
(bad)
and
push
and
fiadd
adc
es
outs
cmp
adc
add
mov
add
adc
cmp
(bad)
call
dec
add
push
sbb
or
add
push
add
push
outs
push
add
push
pop
and
add
and
add
add
or
ss
call
sbb
add
out
clc
mov
ret
xchg
jle
popa
adc
es
sub
add
add
or
adc
(bad)
call
dec
add
push
sbb
or
pop
xor
loop
call
add
push
and
aaa
pop
dec
and
repnz
popa
adc
es
sub
push
pop
xor
loope
call
sbb
add
scas
pop
and
push
cmp
pop
adc
cmp
outs
push
add
push
adc
pop
or
sbb
jecxz
add
pop
and
add
add
xchg
add
add
inc
add
push
and
pop
xor
loope
call
sbb
add
pop
and
adc
pop
xor
loope
call
arpl
add
and
mov
and
or
pop
adc
add
add
push
adc
pop
fs
adc
loop
add
or
lods
add
add
xchg
add
sub
dec
adc
cmp
call
push
add
push
and
inc
pop
and
pop
mov
adc
add
add
push
pop
and
mov
add
call
or
adc
(bad)
call
sbb
add
sub
add
outs
imul
push
pop
or
and
add
and
add
sub
outs
imul
push
and
int3
adc
sub
add
and
add
add
sub
add
sub
push
and
or
shl
call
sbb
add
adc
es
xor
loopne
call
sbb
add
sbb
add
add
outs
arpl
add
adc
pop
fs
adc
loop
add
or
jl
push
sub
sub
or
jge
(bad)
call
sbb
add
sbb
add
sub
add
dec
adc
cmp
(bad)
call
pusha
add
push
es
sub
push
pop
bound
or
dec
loopne
call
pop
add
push
and
jae
pop
and
cli
xlat
cs
adc
es
inc
adc
cmp
in
(bad)
inc
outs
arpl
add
and
sub
add
and
add
add
jno
add
sub
add
push
and
add
add
or
add
(bad)
call
dec
add
push
adc
sub
push
and
add
add
or
jmp
add
adc
sub
push
pop
daa
adc
cmp
(bad)
call
pop
add
push
sbb
xor
sub
add
outs
add
push
pop
or
(bad)
add
add
xchg
add
sub
outs
imul
push
adc
and
add
pop
data16
add
or
and
add
add
pusha
add
add
inc
add
push
pop
pop
adc
cmp
sbb
add
sbb
add
add
add
rol
add
or
(bad)
(bad)
call
push
add
push
pop
push
xor
sub
add
xor
(bad)
call
sbb
add
push
xor
sub
add
adc
add
add
or
sub
sbb
add
adc
es
jle
push
cmp
jmp
call
adc
adc
and
add
adc
cmp
(bad)
call
data16
push
sbb
fucomi
(bad)
call
inc
adc
and
or
in
(bad)
call
jl
add
and
sub
mov
js
pop
adc
es
xor
fdivrp
call
pop
add
push
push
adc
es
xor
add
add
or
mov
(bad)
call
sbb
add
adc
es
adc
pop
xor
fdivrp
call
ins
add
push
sbb
add
sub
add
sub
push
and
or
jge
(bad)
call
sbb
add
adc
es
and
cld
or
add
inc
cmp
or
add
or
out
or
add
js
out
add
and
add
add
or
dec
fdivrp
call
sbb
add
sbb
add
sub
add
sub
add
pop
xor
fdivrp
call
dec
add
push
push
adc
es
xor
add
and
add
add
or
adc
(bad)
call
ja
add
sbb
or
pop
and
(bad)
or
add
push
cmp
jp
or
lock
call
jp
add
push
pop
xor
sub
add
sub
outs
pop
add
push
sub
sub
outs
pop
add
push
sub
jge
push
and
cmp
jb
add
sbb
or
pop
xor
(bad)
call
sbb
add
sub
push
and
or
test
(bad)
call
sbb
add
sbb
add
sub
add
sub
add
outs
push
add
push
and
or
pusha
(bad)
call
dec
add
push
push
adc
add
add
push
and
(bad)
int3
adc
sub
add
and
add
add
dec
add
add
icebp
add
push
and
or
sub
(bad)
call
sbb
add
adc
es
jmp
push
add
push
adc
pop
xor
add
or
and
mov
cdq
add
push
and
or
lock
call
sbb
add
xchg
imul
das
popa
adc
es
sub
push
pop
or
or
rcr
(bad)
call
sbb
add
sbb
add
add
xor
fdivr
call
sbb
add
outs
jno
add
pop
and
add
and
add
add
push
add
push
pop
jb
push
pop
push
adc
cmp
sbb
add
adc
es
sub
push
and
add
adc
cmp
call
sbb
add
adc
es
xor
fdivr
call
sbb
add
pop
pop
cmp
or
add
xchg
add
cmp
or
add
push
cmp
or
add
dec
cmp
or
add
cmp
or
xor
(bad)
call
push
add
sbb
add
sub
add
xor
fdivr
call
sbb
add
mov
cmp
es
call
in
add
add
call
add
add
add
push
adc
and
add
add
or
add
sub
add
or
and
add
add
inc
add
add
inc
add
push
pop
jno
or
(bad)
call
js
add
sbb
or
pop
sub
push
pop
xor
(bad)
call
sbb
add
cmp
outs
pop
add
push
sbb
sbb
add
and
add
sub
jb
or
test
(bad)
call
sbb
add
sbb
add
sub
add
sub
push
pop
inc
adc
cmp
(bad)
call
sbb
add
add
add
push
adc
pop
and
or
or
and
add
add
fld
add
sub
mov
add
adc
pop
xor
(bad)
call
sbb
add
adc
es
sub
push
and
or
sbb
(bad)
call
sbb
add
push
xor
sub
add
outs
popa
add
push
push
and
fiadd
add
sub
sbb
add
adc
cmp
(bad)
call
push
add
push
and
lds
ja
pop
adc
es
ja
push
and
add
add
or
(bad)
(bad)
call
sbb
add
sub
add
sub
push
pop
inc
adc
cmp
add
push
cmp
push
adc
cmp
add
add
sbb
add
sub
add
outs
push
add
push
pop
and
add
add
sbb
add
sub
cmp
adc
cmp
(bad)
call
sbb
add
sbb
add
add
sub
push
and
or
inc
(bad)
call
jbe
add
es
and
add
cmp
(bad)
call
jl
add
sbb
or
add
pop
add
add
sub
add
sub
add
push
add
add
push
sub
and
jmp
add
sub
add
push
add
add
push
sub
jns
or
jmp
add
pop
xor
sub
add
sub
add
add
or
int3
fcos
call
bound
add
sbb
sub
add
inc
adc
and
cmp
push
pop
push
cmp
or
add
push
adc
cmp
pop
add
push
and
cmp
add
pop
adc
add
pusha
add
push
outs
jo
add
and
cmp
(bad)
call
sbb
add
adc
es
adc
add
or
push
fcos
call
jl
add
sbb
xor
sub
add
outs
ins
add
push
adc
pop
xor
adc
loop
add
or
inc
add
and
add
add
cdq
add
push
and
add
add
or
sbb
(bad)
call
data16
push
pop
push
add
sub
add
outs
pop
add
push
and
vmovups
sub
add
and
add
add
mov
sldt
push
pop
movlps
add
or
(bad)
(bad)
call
push
add
pop
adc
es
sub
push
pop
xor
fdivr
call
arpl
add
and
into
push
dec
and
dec
pop
je
adc
and
push
and
add
adc
cmp
sbb
add
adc
es
sub
push
and
add
adc
cmp
je
add
sbb
sub
add
push
in
call
adc
cmp
(bad)
inc
outs
popa
add
push
and
sub
add
and
fild
add
sub
add
push
pop
push
adc
cmp
fdivr
call
push
adc
es
pop
cmp
das
adc
cmp
fdivr
call
sbb
add
add
mov
add
add
add
push
sub
dec
add
add
or
add
(bad)
call
sbb
add
adc
es
cmp
add
add
inc
cmp
add
and
add
add
or
loopne
(bad)
call
sbb
add
add
add
push
and
(bad)
int3
adc
sub
add
pop
inc
pop
push
sub
add
push
pop
and
add
and
or
lods
xlat
(bad)
call
pop
add
push
and
add
xor
dec
pop
adc
es
pusha
cmp
push
add
pop
dec
adc
cmp
outs
add
push
and
pop
icebp
add
sbb
or
pop
sub
push
and
add
add
or
data16
(bad)
call
sbb
add
cmp
outs
ins
add
push
pop
and
stc
add
add
adc
add
add
add
push
pop
and
iret
add
add
adc
add
pop
adc
pop
xor
xlat
(bad)
call
sbb
add
sbb
add
sub
add
dec
adc
cmp
xlat
(bad)
call
push
add
push
sbb
or
add
add
push
and
int3
adc
sub
add
and
add
add
inc
add
add
sldt
push
pop
sbb
or
(bad)
(bad)
(bad)
call
pop
add
push
sbb
xor
sub
add
sub
push
cmp
sub
push
outs
push
add
push
and
or
test
(bad)
call
pusha
add
push
pop
adc
and
and
add
pop
xor
or
mov
(bad)
call
dec
add
push
es
sub
push
pop
xor
or
jns
(bad)
call
ins
add
push
add
aaa
add
add
inc
add
add
hlt
add
push
add
add
push
sub
push
add
add
or
dec
(bad)
(bad)
call
outs
add
push
sbb
or
pop
xor
(bad)
(bad)
call
sbb
add
adc
es
dec
cmp
xor
or
push
(bad)
(bad)
call
sbb
add
addr16
dec
popa
adc
es
add
and
add
adc
cmp
aad
call
push
add
push
sbb
xor
aad
call
sbb
add
sbb
add
sub
add
push
pusha
add
add
inc
adc
cmp
aad
call
ins
add
push
sbb
xor
sub
add
pop
adc
cmp
adc
add
pop
xor
aad
call
data16
push
es
sub
add
and
or
xchg
(bad)
call
pop
add
push
sbb
xor
sub
add
sub
add
outs
data16
push
pop
jl
or
fs
call
jns
add
sbb
xor
sub
add
xor
(bad)
inc
outs
push
add
push
adc
pop
pop
pop
dec
sub
add
or
and
add
and
inc
add
push
pop
adc
push
cmp
loop
call
push
adc
and
or
adc
(bad)
call
je
add
adc
cmp
add
cmp
loope
inc
outs
push
add
push
and
vmovups
sub
add
and
add
and
add
add
sldt
push
and
cmp
aam
call
ins
add
push
sbb
or
add
add
push
sbb
or
add
and
add
sub
cmc
add
add
or
cmps
aam
call
sbb
add
adc
es
daa
adc
cmp
sbb
add
scas
cmps
pop
mov
mov
ja
adc
es
sbb
add
sbb
inc
add
pop
push
cmp
add
add
fild
add
adc
cmp
call
js
add
sbb
or
add
add
push
adc
pop
or
xchg
add
add
jecxz
add
pop
and
int
add
sub
add
and
add
add
or
and
(bad)
call
ins
add
push
sbb
add
sub
add
sbb
add
cmp
aam
call
sbb
add
pop
xor
sar
call
push
add
and
mov
xchg
cld
push
adc
es
xor
sar
call
sbb
add
sbb
add
add
sub
push
pop
xor
sar
call
sbb
add
adc
es
sub
push
pop
adc
or
lods
sar
call
push
add
push
cmp
sub
add
outs
pop
add
push
add
push
add
push
outs
pop
add
push
and
or
jg
(bad)
call
bound
add
add
add
push
and
or
add
and
add
add
pop
add
add
sldt
push
and
add
adc
cmp
(bad)
call
sbb
add
cli
sub
and
sub
pop
adc
add
add
push
pop
and
lock
add
push
add
push
and
add
add
or
sbb
(bad)
call
sbb
add
sbb
add
add
pop
adc
and
add
add
or
cli
sar
call
sbb
add
adc
es
xor
sar
call
sbb
add
adc
cmp
inc
pop
add
add
jmp
(bad)
call
cli
(bad)
push
fdivrp
call
fdivr
jmp
(bad)
jmp
(bad)
(bad)
jns
(bad)
inc
in
dec
(bad)
(bad)
jns
(bad)
inc
sti
(bad)
push
pop
add
call
call
out
(bad)
(bad)
fsubr
(bad)
(bad)
fucomip
(bad)
inc
jmp
(bad)
dec
jmp
(bad)
call
jmp
(bad)
push
out
(bad)
cmp
(bad)
dec
cld
(bad)
(bad)
std
cld
(bad)
inc
(bad)
(bad)
in
jecxz
(bad)
mov
or
add
or
add
or
add
add
or
mov
add
in
(bad)
inc
fcos
jmp
push
(bad)
inc
jmp
jmp
icebp
(bad)
call
cmc
(bad)
call
cmc
(bad)
jmp
cmc
(bad)
jmp
cmc
(bad)
call
(bad)
call
loop
(bad)
mov
fcos
jmp
add
add
(bad)
jmp
or
add
add
add
add
(bad)
dec
loop
inc
out
(bad)
(bad)
push
(bad)
inc
repz
dec
repz
call
add
jmp
(bad)
clc
jmp
(bad)
call
jecxz
dec
idiv
call
(bad)
jmp
stc
(bad)
dec
(bad)
call
js
push
pop
jbe
or
sar
call
push
add
push
sbb
add
sub
add
sbb
add
dec
sar
call
js
add
and
push
mov
and
xor
pop
adc
cmp
fdivrp
call
adc
add
cmp
sar
call
sbb
add
sbb
add
sub
add
xor
sar
call
sbb
add
adc
es
xor
add
cmp
(bad)
inc
outs
ins
add
push
and
int3
adc
sub
add
and
add
add
nop
add
add
sldt
push
pop
adc
cmp
sar
call
add
push
and
jb
cmp
das
mov
ins
pop
adc
es
cmp
push
pop
xor
sar
call
sbb
add
add
add
push
adc
pop
sub
test
add
sub
add
or
pop
xor
pop
sub
add
and
add
add
or
adc
add
push
adc
inc
adc
ins
sar
call
push
add
push
and
mov
and
mov
jns
adc
es
xor
sar
call
sbb
add
add
mov
lods
daa
pop
adc
cmp
(bad)
call
inc
adc
add
or
sub
(bad)
call
jl
add
and
push
pop
adc
cmp
sar
call
sbb
add
cmp
fdivr
inc
outs
pop
add
push
and
sub
add
and
repz
add
sldt
push
pop
push
adc
cmp
iret
(bad)
call
sbb
add
adc
add
rol
add
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
push
add
push
es
push
add
push
sub
cdq
or
add
outs
jno
add
pop
mov
add
add
mov
iret
add
push
and
or
jp
(bad)
call
push
add
push
add
push
add
add
and
hlt
add
push
add
add
push
sub
dec
add
add
or
dec
iret
(bad)
call
outs
add
push
and
fldenv
pop
das
jmp
xor
iret
(bad)
call
sbb
add
adc
add
add
push
pop
and
add
add
arpl
add
sub
add
push
pop
sub
iret
(bad)
call
data16
push
sbb
or
pop
das
adc
and
add
add
or
in
into
(bad)
call
sbb
add
sbb
add
sub
add
xor
into
(bad)
call
push
add
push
sbb
sub
add
outs
pop
add
push
adc
pop
push
pop
or
or
and
add
add
jmp
cdq
add
push
pop
jns
push
and
add
add
or
xchg
into
(bad)
call
sbb
add
adc
cmp
(bad)
inc
pop
and
add
add
lahf
add
add
mov
push
add
and
(bad)
int3
adc
sub
add
and
add
add
fild
add
sub
add
push
je
add
add
mov
add
and
add
add
mov
adc
pop
push
adc
cmp
into
(bad)
call
sbb
add
hlt
dec
jb
(bad)
add
adc
cmp
(bad)
inc
outs
outs
add
push
pop
push
and
add
and
add
sub
add
push
and
or
dec
(bad)
call
pop
add
push
pop
adc
es
(bad)
inc
outs
ins
add
push
adc
and
add
add
cmp
jecxz
add
pop
pop
sub
inc
sub
add
pop
imul
add
adc
cmp
int
call
sbb
add
adc
cmp
adc
cmp
sbb
add
adc
add
add
push
adc
and
add
add
data16
add
or
and
add
add
cmps
add
add
xlat
add
push
pop
push
adc
cmp
(bad)
call
bound
add
and
sub
pop
adc
add
add
push
adc
pop
or
adc
add
sub
add
or
pop
pusha
pop
or
inc
add
push
pop
push
adc
pop
imul
(bad)
call
jno
add
es
xor
int
call
jbe
add
sbb
or
pop
sbb
call
jae
or
or
(bad)
call
sbb
add
sbb
add
add
xor
int3
(bad)
call
imul
push
and
dec
push
or
pop
xor
int3
(bad)
call
pop
add
push
sbb
xor
sub
add
adc
and
add
inc
and
add
sub
add
or
and
add
add
sbb
add
sub
add
pop
pop
adc
pop
push
adc
cmp
add
add
push
xor
sub
add
push
cmp
sti
(bad)
call
or
or
jle
(bad)
call
push
adc
es
xor
int3
(bad)
call
sbb
add
cmps
ds
add
pop
adc
es
xor
loope
(bad)
call
cmp
cli
(bad)
call
aas
adc
cmp
(bad)
call
sbb
add
sahf
add
xor
sub
pop
inc
adc
pop
js
or
pop
int3
(bad)
call
sbb
add
adc
add
cmp
int3
(bad)
call
jae
add
push
adc
es
adc
cmp
retf
(bad)
call
sbb
add
pop
sub
push
cmp
fdivr
inc
sub
add
outs
pop
add
push
and
add
adc
cmp
retf
(bad)
call
outs
add
push
push
adc
cmp
outs
push
add
push
adc
pop
sub
or
jecxz
add
pop
and
add
add
mov
add
sub
add
pop
sbb
push
and
add
add
or
(bad)
retf
(bad)
call
sbb
add
aaa
daa
inc
imul
pop
adc
add
add
push
adc
pop
pop
pop
and
loop
add
or
push
add
add
js
add
sub
push
add
add
or
dec
retf
(bad)
call
sbb
add
sbb
add
add
sub
push
pop
xor
retf
(bad)
call
sbb
add
adc
es
xor
retf
(bad)
call
sbb
add
add
add
push
adc
pop
or
int
add
sub
add
or
and
add
add
fwait
add
add
inc
add
push
pop
adc
and
add
add
or
call
sbb
add
push
add
sub
add
xor
retf
rcr
add
add
pop
xor
retf
rcl
push
sbb
xor
sub
add
or
add
add
or
movs
retf
rcr
add
add
popw
shr
iret
and
pop
adc
es
xor
retf
rcr
add
add
sbb
add
add
push
xlat
(bad)
inc
outs
pop
add
push
adc
pop
fs
adc
loop
add
or
inc
add
and
add
add
cdq
add
push
pop
sub
or
dec
retf
rcr
add
add
add
push
pop
or
add
sub
add
sub
outs
ins
add
push
and
(bad)
int3
adc
sub
add
and
add
and
add
sub
push
pop
or
or
add
outs
add
push
es
inc
adc
cmp
leave
(bad)
call
pop
add
push
sbb
or
pop
jbe
jno
(bad)
jmp
hlt
add
add
or
(bad)
leave
(bad)
call
sbb
add
adc
add
add
push
adc
pop
fs
pop
sub
add
or
and
add
and
add
sub
test
add
adc
cmp
sbb
add
pop
pop
adc
pop
xor
leave
(bad)
call
push
add
push
es
xor
or
(bad)
jmp
xchg
add
add
or
jo
(bad)
call
data16
push
sbb
or
add
add
push
adc
pop
fs
inc
sub
add
or
pop
sub
sub
sub
add
add
or
cmp
sbb
add
pop
dec
adc
and
add
add
or
daa
leave
(bad)
call
sbb
add
pop
xor
leave
(bad)
call
jo
add
adc
outs
arpl
add
pop
or
stc
add
add
test
call
or
out
enter
jp
add
and
sbb
sbb
pop
adc
es
xor
enter
push
add
push
push
sbb
add
add
sub
push
and
or
mov
(bad)
call
push
add
push
push
adc
es
sub
push
cmp
outs
pop
add
push
adc
pop
or
pop
sub
add
or
and
add
and
add
sub
add
pop
popa
adc
cmp
(bad)
call
dec
add
push
es
dec
adc
pop
je
or
enterw
sbb
add
pop
xor
enter
je
add
add
add
push
adc
pop
adc
add
jecxz
add
pop
and
les
add
sub
add
pop
adc
cmp
aad
call
adc
add
or
adc
sbb
add
or
inc
adc
sub
adc
es
xor
(bad)
(bad)
call
data16
push
sbb
or
pop
sub
push
pop
xor
(bad)
(bad)
call
sbb
add
dec
(bad)
adc
scas
cmp
cmp
outs
push
add
push
and
vmovups
sub
add
and
in
add
add
sldt
push
pop
and
or
mov
jb
add
sbb
or
pop
dec
adc
add
or
mov
(bad)
call
push
add
push
and
pop
pop
push
and
dec
add
or
pop
sub
push
cmp
(bad)
inc
push
and
(bad)
int3
adc
sub
add
sub
cmp
mov
dec
adc
cmp
(bad)
call
push
pop
xor
sub
add
xor
(bad)
(bad)
call
push
add
push
es
or
add
add
or
sbb
(bad)
call
pop
add
push
es
push
adc
add
or
add
sbb
add
adc
and
xor
cmp
(bad)
call
aaa
cmp
(bad)
jmp
mov
add
cmp
(bad)
jmp
push
add
add
or
into
(bad)
(bad)
call
sbb
add
add
mov
add
add
add
push
sub
sub
or
scas
(bad)
(bad)
call
bound
add
and
mov
xchg
pop
inc
outs
pop
adc
cmp
(bad)
inc
outs
outs
add
push
adc
and
add
add
dec
sub
add
or
and
int
add
sub
add
and
add
add
or
data16
(bad)
call
bound
add
push
adc
add
add
push
adc
pop
fs
adc
loop
add
or
scas
add
add
test
add
sub
rol
add
adc
cmp
(bad)
(bad)
call
sbb
add
sbb
add
sub
add
outs
pop
add
push
sbb
inc
pop
adc
call
add
push
pop
and
add
add
fld
add
sub
in
add
add
or
lock
rcr
add
add
push
xor
sub
add
je
push
and
add
add
or
rol
(bad)
call
sbb
add
adc
sbb
push
cmp
and
add
add
or
mov
(bad)
call
pop
add
push
and
xor
and
adc
es
adc
add
or
mov
(bad)
call
sbb
add
add
or
pop
pop
adc
es
xor
(bad)
shr
add
and
out
leave
pop
pop
adc
es
sub
push
cmp
sar
inc
and
(bad)
int3
adc
push
sub
add
push
add
sti
(bad)
int3
adc
sub
add
sub
add
push
pop
sub
push
pop
xor
(bad)
rcr
add
add
push
xor
sub
add
xor
(bad)
shr
add
sbb
add
repz
jmp
test
add
cmp
mov
add
cmp
(bad)
call
inc
cmp
(bad)
jmp
mov
add
adc
cmp
(bad)
(bad)
call
jnp
add
push
sbb
add
sub
add
sub
push
pop
xor
(bad)
(bad)
call
sbb
add
sbb
add
add
pop
adc
cmp
push
adc
add
or
xchg
(bad)
(bad)
call
jb
add
and
adc
(bad)
jmp
and
add
adc
cmp
(bad)
call
sbb
add
cwde
mov
jnp
jne
adc
add
push
add
push
outs
pusha
add
push
pop
cmp
(bad)
(bad)
call
popa
add
push
sbb
sub
add
sub
push
and
add
add
or
xor
(bad)
call
sbb
add
push
inc
mov
cs
pop
adc
es
xor
(bad)
(bad)
call
sbb
add
imul
ins
mov
popa
adc
add
add
adc
adc
jp
add
sub
add
sub
or
add
add
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
jl
add
popf
add
add
add
add
add
add
add
add
aas
push
or
or
add
add
repnz
sub
int3
ins
inc
push
or
or
or
add
add
push
cmp
add
add
push
add
push
sbb
add
push
sbb
or
add
push
add
adc
add
add
(bad)
(bad)
call
(bad)
(bad)
call
or
call
sbb
add
sbb
add
sub
es
push
add
push
sbb
or
call
sbb
add
xlat
into
fld
sub
sub
pop
or
sub
(bad)
call
push
add
push
push
sbb
add
add
sub
sub
or
call
push
add
push
and
mov
arpl
add
add
pop
add
add
pop
or
call
sbb
add
push
add
sub
add
dec
(bad)
(bad)
inc
inc
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
or
sub
(bad)
call
sub
sbb
hlt
sbb
(bad)
call
sbb
add
or
add
adc
add
add
sub
add
xor
xchg
push
add
sub
add
pop
movlps
add
add
add
add
add
add
add
add
mov
add
sbb
add
add
cdq
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
cdq
add
add
adc
pop
sub
rcl
add
pop
adc
adc
inc
sub
add
jecxz
(bad)
inc
add
add
add
add
add
add
add
outs
add
add
add
add
add
sub
add
add
add
jae
add
mov
add
stos
add
add
add
add
add
add
add
das
add
add
add
jns
add
pop
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
cmp
add
adc
cmp
(bad)
call
sbb
add
mov
jo
and
and
adc
es
or
pop
cmp
(bad)
(bad)
call
pop
add
push
es
adc
jmp
add
pop
daa
adc
cmp
(bad)
(bad)
call
outs
add
push
sbb
pop
add
add
pop
add
add
inc
push
inc
or
adc
cmp
(bad)
(bad)
call
sbb
add
adc
cmp
call
sbb
pop
cmp
(bad)
(bad)
call
jl
add
sbb
pop
cmp
(bad)
call
adc
cmp
sbb
add
sbb
add
sub
add
inc
(bad)
(bad)
call
push
adc
cmp
sbb
add
sbb
add
cmp
jne
add
push
push
xor
sub
add
or
add
call
add
or
add
imul
add
add
add
add
add
add
inc
add
add
add
jge
add
popf
add
add
add
add
add
add
add
push
adc
cmp
(bad)
(bad)
call
sbb
add
xchg
(bad)
sub
and
adc
cmp
adc
(bad)
(bad)
call
sbb
add
push
sub
pop
or
pop
cmp
(bad)
(bad)
call
data16
push
and
mov
pop
in
pop
pop
adc
es
or
stos
pop
sbb
std
(bad)
call
push
add
push
es
adc
cmp
std
(bad)
call
sbb
add
adc
sbb
add
or
add
cmp
sbb
add
mov
dec
push
and
adc
es
pop
(bad)
(bad)
call
sub
pop
cmp
jbe
add
sbb
xor
sub
add
jl
add
add
pop
add
add
and
add
and
add
add
mov
add
sbb
add
and
std
(bad)
call
je
add
sbb
pop
es
cld
(bad)
call
push
adc
cmp
(bad)
call
outs
add
push
sbb
xor
sub
add
or
add
or
pop
cmp
add
add
sbb
add
sub
add
pop
push
adc
cmp
pop
cmp
add
add
pop
push
cmp
(bad)
(bad)
call
adc
mov
cmp
cmp
and
pop
cmp
cld
(bad)
call
pop
add
push
push
sbb
add
sub
add
or
(bad)
(bad)
(bad)
call
sbb
pop
cmp
cld
(bad)
call
bound
add
cmp
(bad)
call
adc
cmp
push
add
push
pop
sbb
add
sub
add
adc
pop
(bad)
(bad)
call
movlps
cmp
sbb
add
pop
or
add
cmp
(bad)
call
sbb
add
cmp
cld
(bad)
call
adc
pop
cmp
(bad)
call
sbb
add
cmc
and
sar
popa
adc
es
or
or
add
pop
sbb
pop
cmp
(bad)
call
jne
add
sbb
jl
add
add
pop
add
add
and
in
add
sub
adc
or
add
call
and
pop
cmp
cld
(bad)
call
sbb
add
sbb
(bad)
call
adc
pop
cmp
sti
(bad)
call
sbb
add
adc
add
add
jae
add
or
pop
sub
pop
cmp
sti
(bad)
call
sbb
add
sbb
add
sub
add
cmp
std
(bad)
call
or
add
and
pop
cmp
sbb
add
sbb
add
sub
add
inc
sti
(bad)
jmp
pop
adc
adc
inc
add
add
add
push
add
push
es
push
add
push
sub
popf
add
add
or
add
cmp
(bad)
call
pusha
add
push
and
cmp
adc
popa
adc
es
cli
(bad)
call
adc
or
add
inc
jl
add
add
pop
add
add
inc
push
inc
or
cmp
cld
(bad)
call
adc
add
pop
sti
(bad)
call
sbb
add
sbb
add
add
add
add
jge
add
add
adc
cmp
cli
(bad)
call
sbb
add
adc
add
add
pop
add
add
and
add
and
add
add
mov
add
pop
or
add
adc
cmp
cli
(bad)
call
sbb
add
adc
sbb
jle
(bad)
call
pop
adc
cmp
sbb
add
dec
push
dec
jg
cmc
push
sub
popa
adc
es
or
add
inc
jl
add
add
pop
add
add
and
fiadd
add
sub
add
push
sbb
add
sbb
pop
cmp
(bad)
call
sbb
add
pop
add
sub
add
cmp
adc
pop
cmp
(bad)
call
push
add
push
sbb
pop
sbb
add
or
add
cmp
(bad)
call
sbb
add
add
add
jae
add
or
pop
or
cli
(bad)
call
pusha
add
push
pop
sbb
add
sub
add
cmp
sti
(bad)
call
or
pop
cmp
cli
(bad)
call
ins
add
push
and
jnp
mov
xchg
cs
adc
cmp
and
pop
cmp
stc
(bad)
call
push
add
push
sbb
pop
add
add
add
xor
add
add
add
add
adc
or
jno
add
or
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
pop
or
push
or
add
push
sbb
rcl
add
sbb
or
add
add
mov
pop
dec
xlat
inc
pop
or
add
add
and
add
push
or
mov
sub
das
add
add
or
or
call
outs
add
push
and
or
cwde
leave
pop
push
popa
or
or
call
sbb
add
scas
dec
mov
sbb
pop
or
(bad)
(bad)
call
or
cmp
(bad)
(bad)
call
jp
add
sub
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
or
call
sbb
add
or
(bad)
(bad)
call
or
call
dec
add
push
es
cmp
(bad)
(bad)
call
push
add
push
sbb
call
sbb
add
pop
cmp
(bad)
(bad)
call
call
pop
add
push
or
add
add
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
(bad)
call
or
call
sbb
add
sbb
(bad)
(bad)
(bad)
call
or
call
sbb
add
sbb
add
sub
add
or
or
call
sbb
add
sub
add
or
call
pop
add
push
sbb
movs
or
adc
adc
push
add
add
add
adc
add
jl
add
add
jge
add
add
or
or
sbb
add
or
or
add
add
(bad)
(bad)
inc
add
add
pop
or
inc
add
add
add
add
add
add
add
add
add
push
add
push
es
push
add
push
sub
add
sub
adc
adc
rol
add
sub
add
pop
or
add
push
or
add
add
add
add
add
add
add
pop
add
add
add
mov
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
or
or
add
add
or
sub
sbb
call
popa
add
push
pop
sbb
add
sub
es
push
add
push
sbb
push
or
call
popa
add
push
sbb
rcr
mov
or
call
jnp
add
rcl
add
es
prefetch
ss
(bad)
call
sbb
add
or
add
add
add
xchg
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
dec
call
add
pop
add
add
add
add
or
call
pop
add
push
sbb
sbb
add
and
add
pop
or
(bad)
call
push
add
push
push
sbb
add
add
call
jbe
add
and
loope
inc
and
cmps
aas
jne
or
or
call
sbb
add
or
gs
cmp
(bad)
(bad)
call
or
call
outs
add
push
sbb
xor
sub
add
call
sbb
add
or
or
cmp
(bad)
call
je
add
es
cmp
(bad)
call
sbb
add
ins
mov
mov
pop
or
or
call
sbb
add
or
add
add
sub
xor
add
add
sub
add
jl
add
add
jge
add
add
pop
or
inc
add
add
add
add
add
push
add
push
es
push
add
push
sub
or
inc
add
add
mov
sub
adc
adc
add
add
add
adc
add
inc
or
add
mov
add
in
add
add
add
sub
add
mov
add
fild
add
daa
add
add
add
add
add
add
or
add
add
test
mov
push
test
aaa
pop
or
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
jecxz
add
sbb
xor
sbb
sub
or
add
push
cmp
(bad)
call
sub
sbb
add
push
es
or
or
add
add
sbb
or
add
add
cmp
(bad)
inc
inc
add
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
jmp
or
call
sbb
add
jg
sbb
and
xor
pop
or
adc
(bad)
call
(bad)
call
sbb
add
pop
xor
sub
add
or
or
call
sbb
add
add
push
es
cmp
jns
add
and
and
or
or
ret
inc
jl
add
add
and
add
sbb
cmp
sub
and
push
add
push
es
or
call
jo
add
and
out
and
or
or
add
adc
adc
mov
add
add
adc
adc
add
adc
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
lods
add
add
add
add
add
add
add
add
add
add
or
ror
add
adc
inc
pop
add
add
(bad)
(bad)
inc
add
add
add
add
add
bound
add
xchg
add
add
add
add
add
add
add
add
add
xor
add
dec
add
add
add
mov
add
rol
add
jmp
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
ja
add
mov
add
cmps
add
add
or
cmp
add
pop
sbb
push
cmp
(bad)
call
sbb
add
sbb
add
sub
add
or
cmp
(bad)
(bad)
call
pop
adc
cmp
(bad)
call
push
add
sbb
sub
add
(bad)
(bad)
inc
sub
push
adc
adc
push
cmp
(bad)
(bad)
call
sbb
add
sbb
add
sub
add
sub
add
add
and
add
and
add
add
mov
mov
add
push
or
cmp
(bad)
(bad)
call
pop
add
push
es
or
mov
or
cmp
(bad)
(bad)
call
ja
add
adc
or
pop
movlps
cmp
(bad)
(bad)
call
jno
add
push
adc
cmp
(bad)
call
movntps
adc
cmp
sbb
add
inc
(bad)
(bad)
call
or
push
cmp
sbb
add
sbb
add
inc
add
add
and
add
jae
add
or
pop
adc
push
cmp
(bad)
call
outs
add
push
push
adc
es
sub
pop
or
add
adc
cmp
(bad)
call
sbb
add
adc
es
adc
or
add
push
cmp
add
add
adc
cmp
(bad)
call
jne
add
es
or
cmp
(bad)
(bad)
call
sbb
add
sbb
add
sub
add
or
cmp
inc
or
add
xchg
(bad)
(bad)
call
(bad)
(bad)
call
add
popa
add
add
add
add
add
add
add
add
(bad)
call
(bad)
call
sbb
push
cmp
std
(bad)
call
push
add
push
pop
adc
es
push
adc
data16
(bad)
call
adc
cmp
sbb
add
sbb
add
sub
add
dec
std
(bad)
call
adc
push
cmp
bound
add
push
adc
es
push
adc
xor
(bad)
call
push
adc
cmp
sbb
add
push
xor
sub
add
cmp
adc
cmp
(bad)
call
jb
add
add
add
and
add
and
add
and
add
add
mov
add
sbb
push
cmp
add
push
and
cmp
call
add
add
and
add
inc
push
inc
or
adc
add
mov
(bad)
call
push
adc
cmp
sbb
add
cmp
adc
cmp
cld
(bad)
call
sbb
add
adc
sbb
test
adc
mov
cmp
adc
cmp
cld
(bad)
call
sbb
add
sbb
sbb
push
cmp
jo
add
push
adc
sub
adc
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
push
es
pop
add
push
sub
rol
add
sbb
inc
pop
or
adc
cmp
(bad)
call
sbb
add
add
add
and
add
inc
push
inc
or
adc
sbb
cld
(bad)
call
jns
add
sbb
xor
sub
add
adc
add
adc
cmp
cld
(bad)
call
sbb
add
das
xchg
and
and
or
push
cmp
or
push
cmp
cld
(bad)
call
sbb
add
adc
es
push
adc
sbb
push
cmp
sti
(bad)
call
push
add
push
cmp
or
push
cmp
sti
(bad)
call
sbb
add
pop
xor
sub
add
add
sbb
add
jge
add
add
sbb
push
cmp
sti
(bad)
call
popa
add
push
and
lock
and
sub
es
adc
add
add
xor
add
add
add
cmp
inc
or
add
fild
add
pusha
add
add
add
add
add
out
add
add
add
add
add
add
or
add
push
and
jmp
or
add
add
add
add
add
add
add
xor
add
dec
add
add
add
fwait
add
add
add
add
or
or
add
add
or
or
add
push
sbb
sbb
or
add
add
xchg
or
cmp
(bad)
call
sub
sub
sub
or
add
add
sbb
ss
or
call
add
push
sbb
add
sub
add
sub
(bad)
inc
inc
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
(bad)
(bad)
dec
add
push
or
or
call
jp
add
sbb
sub
es
pop
add
push
sbb
sbb
cmp
(bad)
(bad)
inc
jl
add
add
and
add
push
sub
and
pop
add
push
es
or
call
sbb
add
sbb
mov
or
call
je
add
add
sub
xor
add
add
sub
add
jl
add
add
jge
add
add
pop
or
inc
add
add
add
add
add
pop
add
push
es
pop
add
push
sub
or
inc
add
add
mov
sub
adc
adc
mov
add
sub
add
sbb
sub
rcr
add
push
or
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
and
add
pop
or
add
push
sbb
rcr
add
es
or
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
or
cmp
(bad)
call
sbb
add
sbb
out
pop
sub
sbb
call
(bad)
(bad)
call
sbb
add
sbb
add
sub
add
sub
sbb
int
or
call
sbb
add
sub
add
or
or
call
sbb
add
sbb
add
sub
add
or
call
sbb
add
push
xor
sub
add
or
or
call
pop
add
push
push
or
cmp
(bad)
(bad)
call
push
add
push
push
or
add
add
add
add
(bad)
jmp
(bad)
(bad)
(bad)
sti
(bad)
(bad)
call
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
pop
add
push
es
cmp
add
push
and
out
je
mov
or
adc
or
call
pop
add
push
push
or
add
add
sub
add
adc
adc
inc
add
add
add
jl
add
add
jge
add
add
sbb
pop
inc
add
add
add
add
add
add
add
add
add
pop
add
push
es
pop
add
push
sub
or
inc
add
add
mov
sub
adc
adc
in
add
sub
add
sbb
add
push
sbb
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
rcr
add
es
or
add
push
es
push
or
add
add
sbb
add
sub
add
or
add
add
sar
pop
push
and
and
or
add
add
add
add
add
fwait
(bad)
(bad)
jmp
(bad)
call
add
add
add
add
add
push
sbb
or
cmp
(bad)
call
sbb
add
add
add
and
pop
or
(bad)
call
pop
add
push
es
inc
add
add
add
add
add
add
stos
add
add
or
or
call
push
add
push
and
mov
adc
popf
jmp
pop
pop
or
or
call
sbb
add
or
sar
(bad)
call
sbb
add
sbb
les
sub
sbb
mov
prefetch
mov
jne
add
sbb
sbb
(bad)
call
sbb
add
sbb
call
push
add
push
and
or
adc
scas
fwait
lea
pop
or
test
(bad)
call
jb
add
sbb
adc
call
push
add
push
and
(bad)
adc
pop
or
sub
cmp
(bad)
call
or
call
push
add
push
and
jbe
and
or
ss
(bad)
call
sbb
add
add
sub
xor
inc
add
add
pop
or
add
adc
sub
rcr
add
add
adc
inc
and
(bad)
(bad)
inc
add
add
add
xor
add
push
add
add
add
mov
add
movs
add
add
add
add
add
add
add
mov
add
iret
add
add
add
add
add
sbb
add
inc
add
add
add
jns
add
pop
add
stos
add
add
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
sbb
pop
sbb
push
cmp
(bad)
call
sbb
add
adc
es
or
dec
add
add
or
inc
add
add
or
push
cmp
(bad)
(bad)
call
sbb
add
adc
es
cmp
add
add
and
push
cmp
(bad)
(bad)
call
jae
add
sbb
xor
sub
add
(bad)
add
add
cmp
add
add
adc
cmp
(bad)
(bad)
call
sbb
add
xchg
add
and
adc
es
push
cmp
(bad)
(bad)
call
pop
add
push
es
or
adc
cmp
(bad)
(bad)
call
sbb
add
sbb
add
sub
add
xor
sbb
add
add
add
add
add
add
add
add
add
add
add
pop
add
push
es
pop
add
push
sub
mov
add
adc
add
iret
add
add
add
add
add
adc
add
mov
add
jno
add
fdivr
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
dec
add
add
add
test
add
mov
add
aad
add
sbb
push
cmp
pop
add
push
sbb
pop
adc
push
cmp
(bad)
(bad)
call
sbb
add
scas
mov
aas
enter
push
add
add
and
and
add
add
push
add
add
mov
add
sbb
pop
push
adc
cmp
std
(bad)
call
sbb
add
adc
add
add
jae
add
or
add
add
and
inc
push
inc
or
adc
es
(bad)
call
or
push
adc
cmp
add
push
pop
push
xor
sub
add
cmp
push
cmp
outs
add
push
add
add
and
inc
push
inc
or
adc
push
cmp
(bad)
call
add
push
es
adc
cmp
(bad)
call
sbb
add
pop
xor
sub
add
mov
cmp
std
(bad)
call
or
push
cmp
std
(bad)
call
sbb
add
(bad)
fcomi
xor
pusha
xchg
es
adc
cmp
std
(bad)
call
ja
add
sbb
add
sub
add
or
pop
add
add
or
push
cmp
cld
(bad)
call
sbb
add
sbb
add
sub
add
adc
cmp
cld
(bad)
call
jns
add
sbb
xor
sub
add
or
adc
cmp
cld
(bad)
call
push
add
push
sbb
xor
sub
add
or
add
pop
adc
cmp
sbb
add
pop
cmp
adc
push
cmp
add
push
sbb
xor
sub
add
add
sbb
add
jge
add
add
or
cld
(bad)
call
sbb
add
pop
cmp
add
add
jl
add
add
and
and
hlt
add
add
mov
add
pop
and
push
cmp
call
sbb
add
pop
or
adc
cmp
cld
(bad)
call
sbb
add
adc
es
adc
add
adc
cmp
(bad)
call
sbb
add
sbb
add
sub
add
adc
cmp
cld
(bad)
call
pusha
add
push
adc
adc
adc
cmp
sti
(bad)
call
sbb
add
sbb
fs
out
add
popa
adc
es
adc
cmp
sti
(bad)
call
pop
add
push
sbb
push
or
add
add
(bad)
jmp
add
add
add
(bad)
(bad)
dec
(bad)
dec
(bad)
call
(bad)
call
sbb
push
cmp
outs
add
push
es
cmp
(bad)
call
or
cmp
add
push
sbb
push
es
adc
cmp
(bad)
call
sbb
add
or
sbb
sti
(bad)
call
pop
add
push
es
or
push
(bad)
(bad)
call
adc
dec
(bad)
(bad)
call
adc
push
cmp
(bad)
call
pop
add
push
and
xchg
and
and
sar
adc
es
pop
push
adc
cmp
sti
(bad)
call
sbb
push
cmp
sti
(bad)
call
sbb
add
cmp
(bad)
call
push
cmp
std
(bad)
call
adc
cmp
cli
(bad)
call
popa
add
push
sbb
push
es
or
lock
(bad)
call
and
push
cmp
cli
(bad)
call
sbb
add
out
jmp
and
xor
add
add
add
xor
add
add
cmp
add
or
add
add
add
pop
add
add
add
add
add
pop
add
add
add
lods
add
add
or
add
push
sbb
xor
sub
add
inc
or
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
jge
add
popf
add
add
add
fild
add
in
add
add
mov
or
sub
push
and
lds
es
or
or
add
push
add
add
add
add
sbb
sbb
add
or
add
add
pop
add
push
es
or
call
push
add
push
sbb
xor
sub
es
pop
add
push
es
pop
or
call
sbb
add
sub
add
cmp
or
call
jne
add
and
mov
xor
lods
sub
push
sub
xchg
add
add
in
(bad)
call
cmp
add
sbb
jb
add
sbb
cmp
(bad)
(bad)
call
dec
add
push
sbb
or
call
sbb
add
sbb
add
sub
add
scas
(bad)
(bad)
call
or
call
sbb
add
sbb
aaa
sbb
call
ja
add
push
sbb
add
add
or
cmp
inc
inc
add
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
call
or
or
call
sbb
add
add
sub
xor
in
add
add
add
adc
or
inc
adc
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
push
or
push
adc
sub
rcl
add
adc
inc
sbb
add
and
(bad)
inc
add
add
add
add
add
mov
add
movs
add
add
add
add
add
add
add
add
add
test
add
mov
add
aam
add
jmp
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
lahf
add
add
add
or
xchg
add
add
push
cmp
or
test
add
pop
sbb
push
cmp
(bad)
call
ja
add
and
stc
jnp
and
adc
es
push
adc
adc
(bad)
(bad)
call
push
add
push
and
adc
and
adc
es
adc
mov
add
sbb
add
jge
add
add
or
push
cmp
(bad)
call
sbb
add
sbb
add
sub
add
adc
xchg
(bad)
(bad)
call
sbb
push
cmp
(bad)
(bad)
call
sbb
add
adc
es
adc
js
(bad)
call
sub
pop
adc
cmp
(bad)
(bad)
call
pop
add
push
and
cmp
jg
push
pop
adc
cmp
(bad)
call
movlps
cmp
sbb
add
sbb
add
add
or
mov
adc
push
cmp
jb
add
and
pop
jae
and
cmp
add
add
add
add
and
add
add
je
add
sub
sbb
push
cmp
(bad)
call
add
push
and
cmp
and
dec
pop
adc
or
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
add
adc
add
js
(bad)
(bad)
jl
(bad)
call
adc
cmp
(bad)
(bad)
call
sbb
add
sbb
add
sub
add
jl
add
add
add
add
inc
push
inc
or
or
std
(bad)
call
dec
add
push
and
shr
push
pop
adc
cmp
(bad)
call
sbb
push
cmp
std
(bad)
call
pop
add
push
and
lea
pop
adc
cmp
call
adc
push
cmp
sbb
add
adc
sbb
add
or
push
cmp
ja
add
pop
adc
cmp
std
(bad)
call
or
push
cmp
(bad)
call
sbb
add
shl
fidiv
test
int
pop
adc
es
pusha
pop
or
idiv
(bad)
call
sub
push
adc
cmp
(bad)
call
data16
push
and
mov
pop
and
out
stc
push
popa
adc
add
add
jae
add
or
sbb
push
cmp
std
(bad)
call
sbb
add
sub
add
adc
or
push
cmp
pop
add
push
es
adc
add
adc
cmp
cld
(bad)
call
push
add
push
and
xlat
test
jae
pop
adc
add
add
add
add
and
add
and
add
add
mov
add
sbb
ret
cld
(bad)
call
jbe
add
and
cld
dec
pop
and
xchg
push
pop
pop
adc
sbb
mov
add
pop
adc
push
cmp
push
add
push
and
ficom
and
sbb
adc
cmp
pop
adc
cmp
sbb
add
pop
xor
sub
add
or
(bad)
inc
pop
movlps
cmp
(bad)
call
adc
push
cmp
(bad)
call
sbb
add
sbb
add
sub
add
jl
add
add
add
add
inc
push
inc
or
or
retf
sti
(bad)
inc
sub
sbb
add
sar
call
(bad)
cmc
sbb
cmp
sbb
add
pop
adc
and
push
cmp
std
(bad)
call
sti
(bad)
call
push
add
and
xchg
jbe
neg
xor
es
or
fdivr
(bad)
call
data16
push
push
sbb
add
sub
add
sbb
add
add
add
add
add
pusha
add
push
es
pusha
add
push
sub
and
push
adc
cmp
sbb
add
jmp
add
ja
pop
adc
add
adc
adc
lea
add
sub
add
sbb
jns
add
or
add
add
(bad)
(bad)
inc
add
add
add
sub
add
outs
add
add
add
xchg
add
add
add
add
add
add
add
add
add
sbb
add
push
sbb
add
add
daa
add
add
sbb
add
add
push
xor
sub
add
inc
or
add
mov
add
add
add
add
add
add
add
add
add
add
add
shl
add
es
cmp
(bad)
call
pop
add
push
push
push
xor
sub
add
sub
rol
add
sbb
mov
add
sbb
scas
add
add
call
push
add
push
sbb
add
sub
add
cmp
or
call
sbb
add
sbb
add
sub
add
or
or
call
sbb
add
sub
add
fs
sub
popa
add
push
es
or
call
sbb
add
(bad)
ds
and
aam
pop
or
or
or
call
imul
or
call
pop
add
push
sbb
xor
sub
add
inc
add
(bad)
(bad)
dec
(bad)
jmp
(bad)
call
(bad)
(bad)
call
sbb
call
sbb
add
sbb
add
sub
add
adc
add
add
sub
add
adc
adc
inc
add
add
add
jl
add
add
jge
add
add
push
or
inc
add
add
add
add
add
add
add
add
add
bound
add
es
bound
add
sub
or
inc
add
add
mov
sub
adc
adc
mov
add
sub
add
pop
or
add
push
or
add
add
add
add
add
sub
add
cmp
add
jbe
add
mov
add
lods
add
add
add
add
add
add
add
add
add
add
cmp
add
sbb
add
add
stos
in
std
data16
and
pop
or
or
add
push
push
or
add
add
sbb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
call
sbb
add
or
add
add
or
call
push
add
push
shl
add
sbb
sbb
or
call
sbb
add
push
cmp
pop
and
push
and
es
cmp
mov
add
sbb
cmp
(bad)
(bad)
call
sbb
add
jge
adc
in
test
sbb
call
jb
add
sbb
sub
es
arpl
add
sbb
call
outs
add
push
push
pop
add
sub
add
xor
jl
add
add
sub
add
pop
or
or
cmp
sbb
add
or
adc
(bad)
inc
inc
add
(bad)
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
jmp
(bad)
call
ja
(bad)
call
push
add
push
sbb
add
sub
add
(bad)
(bad)
inc
sub
add
adc
add
add
sub
adc
adc
push
add
add
add
jl
add
add
jge
add
add
or
push
rcl
add
or
add
add
(bad)
(bad)
inc
add
add
sbb
pop
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
es
add
push
sub
add
sub
add
adc
adc
stos
add
add
add
adc
or
add
add
retf
push
sbb
or
add
add
add
add
add
sbb
add
pusha
add
add
add
xchg
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
sbb
or
add
push
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sbb
call
push
add
push
sbb
xor
sub
add
jl
add
add
sub
add
pop
or
call
sbb
add
shl
add
es
or
or
or
call
sbb
add
pop
inc
add
add
add
add
pop
add
add
add
inc
add
add
or
or
call
sbb
add
or
sbb
jmp
cmp
(bad)
(bad)
call
js
add
and
fs
and
in
mov
sbb
call
sbb
add
or
sbb
call
jae
add
push
or
mov
(bad)
call
sbb
add
or
push
or
call
add
push
adc
mov
or
call
sbb
add
push
xor
sub
add
sub
or
(bad)
(bad)
call
je
add
add
sub
adc
adc
inc
add
add
add
adc
add
jl
add
add
jge
add
add
push
or
inc
add
add
add
add
add
add
add
add
add
add
add
data16
push
es
data16
push
sub
or
inc
add
add
mov
sub
adc
adc
loopne
add
das
add
adc
or
add
add
xor
inc
sub
push
or
add
add
add
add
add
jbe
add
test
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
or
add
cmp
add
ret
add
add
add
cmp
add
push
add
pop
add
add
add
ret
add
add
add
add
push
or
add
add
popa
aam
jo
dec
loope
xor
es
inc
add
add
add
add
add
add
out
add
xor
add
sbb
or
call
jno
add
pop
push
xor
sub
add
or
or
call
sbb
add
cmp
(bad)
inc
sub
out
add
add
add
push
es
or
call
sbb
add
push
or
or
call
sbb
add
or
pop
or
(bad)
call
imul
call
popa
pop
or
or
call
sbb
add
or
(bad)
inc
jl
add
add
sub
add
sbb
call
jo
add
sbb
sbb
cmp
sbb
add
sbb
inc
(bad)
(bad)
call
or
cmp
sbb
add
or
(bad)
(bad)
call
(bad)
call
sbb
add
pop
xor
sub
add
cmp
(bad)
call
or
call
sbb
add
xchg
inc
stos
jb
in
push
jge
or
add
es
or
call
pop
add
push
pop
push
xor
sub
add
adc
sbb
add
sub
xor
add
add
xor
add
add
or
add
jge
add
add
pop
or
inc
add
add
add
add
add
add
add
add
add
add
add
push
sub
push
sub
or
inc
add
add
mov
sub
adc
adc
mov
add
adc
lds
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
sbb
add
sub
add
inc
or
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
nop
pop
inc
add
add
add
add
add
add
add
add
or
add
push
es
sub
cli
add
add
pop
(bad)
(bad)
call
cmp
add
add
cmp
add
add
or
add
add
shr
add
sbb
cmp
(bad)
call
or
or
call
jl
add
push
sbb
add
sub
add
cmp
or
call
jp
add
sbb
xchg
add
shr
add
es
(bad)
call
pop
add
push
and
out
dec
and
xchg
or
or
or
or
call
sbb
add
cmp
(bad)
(bad)
call
or
call
jae
add
and
sub
pop
or
add
add
sub
add
sbb
call
push
add
sbb
sbb
call
sbb
add
adc
jb
jle
or
or
call
sbb
add
stos
pusha
inc
ss
jmp
movs
sbb
add
sub
adc
adc
jmp
adc
add
add
adc
add
mov
add
in
add
and
add
add
add
add
movs
add
add
add
add
add
mov
add
jmp
add
add
add
add
add
inc
add
add
add
pop
adc
push
sub
rcr
add
add
adc
adc
inc
pop
add
add
(bad)
inc
add
add
add
add
add
add
add
jbe
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
retf
add
add
add
add
add
add
add
add
add
jo
add
pop
add
cmps
add
add
add
add
add
add
adc
inc
add
add
or
add
push
cmp
(bad)
call
sbb
add
adc
es
or
cmp
(bad)
call
push
add
push
sbb
push
es
cmp
add
pop
adc
or
or
push
cmp
(bad)
call
sbb
add
adc
es
sbb
push
cmp
(bad)
(bad)
call
adc
cmp
(bad)
(bad)
call
ja
add
and
pop
add
pop
adc
es
adc
popw
sbb
push
cmp
(bad)
(bad)
call
sbb
add
pop
or
mov
adc
push
cmp
(bad)
(bad)
call
imul
push
adc
add
sbb
add
jge
add
add
jl
add
add
sub
add
inc
push
inc
or
adc
push
(bad)
(bad)
call
or
cmp
outs
add
push
adc
adc
cmp
(bad)
call
adc
cmp
sbb
add
adc
sbb
dec
add
add
or
push
cmp
(bad)
call
add
push
sbb
sub
add
add
cmp
add
add
add
sub
add
and
add
add
add
add
sub
movlps
cmp
(bad)
(bad)
call
sbb
add
adc
dec
and
adc
add
add
jae
add
or
pop
or
push
cmp
(bad)
(bad)
call
sbb
add
stos
ins
xchg
hlt
sahf
stc
jno
adc
add
add
sub
add
inc
push
inc
or
push
adc
cmp
std
(bad)
call
pop
add
push
sbb
add
add
jo
(bad)
call
add
jl
add
add
sub
add
and
add
add
in
add
add
test
add
pop
sbb
push
cmp
add
push
es
or
push
adc
cmp
sbb
add
adc
sbb
cmp
(bad)
call
push
add
push
and
(bad)
daa
jg
mov
adc
es
or
cmp
std
(bad)
dec
inc
or
add
xchg
(bad)
(bad)
push
std
(bad)
(bad)
ds
(bad)
jmp
add
add
add
add
call
std
(bad)
jmp
or
add
retf
cld
(bad)
call
push
adc
cmp
std
(bad)
call
ja
add
sbb
xor
sub
add
adc
ficomp
adc
push
cmp
sbb
add
adc
cmp
adc
cmp
cld
(bad)
call
sbb
add
adc
es
or
add
sbb
cld
(bad)
call
sbb
add
sbb
lds
pop
pop
adc
es
sub
adc
cmp
jnp
add
cmp
(bad)
call
sbb
push
cmp
add
push
es
or
add
aaa
cld
(bad)
call
adc
cmp
sbb
add
sbb
add
add
or
add
adc
push
cmp
(bad)
call
sbb
add
or
sti
xor
cmp
sub
adc
add
add
add
add
add
add
add
add
add
add
push
add
es
push
add
sub
mov
add
pop
or
add
adc
cld
(bad)
call
pop
add
push
and
fisubr
and
mov
push
es
or
add
cmps
sti
(bad)
call
adc
cmp
sti
(bad)
call
sbb
add
sbb
add
sub
add
or
pop
or
push
cmp
sti
(bad)
call
je
add
sbb
push
es
push
cmp
sti
(bad)
call
sbb
add
add
fs
jp
adc
cmp
(bad)
inc
sub
pop
push
adc
dec
sti
(bad)
call
(bad)
cmc
pop
push
adc
cmp
sbb
add
adc
es
pop
or
add
or
sti
(bad)
call
ins
add
push
push
adc
add
add
adc
adc
fiadd
add
sub
add
pop
or
add
push
and
add
outs
and
or
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
shr
add
es
or
sbb
add
or
add
add
sub
add
push
sub
xor
add
sbb
or
call
sbb
add
leave
mov
pop
loope
pop
or
inc
add
add
add
add
add
add
add
add
add
or
call
pop
add
push
sbb
sbb
cmp
(bad)
(bad)
call
sbb
add
sbb
test
or
call
jb
add
and
mov
or
add
sbb
sbb
repz
(bad)
call
sbb
add
push
xor
sub
add
or
call
sbb
add
push
xor
and
sbb
es
or
call
ins
add
push
push
or
(bad)
(bad)
call
or
call
jb
add
push
pop
xor
sub
add
or
or
call
jnp
add
and
jmp
or
(bad)
(bad)
call
cmp
(bad)
(bad)
call
or
call
push
add
push
and
adc
sbb
or
call
sbb
add
push
(bad)
stc
adc
inc
xchg
mov
add
sub
add
xor
xor
add
add
adc
adc
add
movlps
sub
rcr
add
add
adc
adc
inc
sbb
add
jle
(bad)
inc
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
jno
add
stos
add
add
add
add
add
add
add
add
add
add
add
mov
add
rol
add
fild
add
hlt
add
add
add
cmp
add
push
add
add
add
xchg
add
add
sub
adc
sub
push
sbb
xor
sub
add
inc
or
add
arpl
add
imul
add
call
add
add
mov
(bad)
(bad)
push
add
add
add
adc
push
cmp
sbb
add
cmp
cmp
add
add
jl
add
add
sub
add
and
add
add
mov
add
push
or
nop
add
add
add
sbb
add
jge
add
add
jl
add
add
sub
add
inc
push
inc
or
or
adc
cmp
(bad)
(bad)
call
jae
add
push
adc
sbb
adc
cmp
(bad)
(bad)
call
jno
add
sbb
xor
sub
add
push
cmp
(bad)
call
cmp
(bad)
call
adc
push
cmp
push
add
push
add
add
sub
add
inc
push
inc
or
or
add
or
(bad)
(bad)
call
arpl
add
sbb
push
es
movlps
cmp
(bad)
call
sbb
add
(bad)
push
and
sub
pop
adc
es
phsubsw
(bad)
call
adc
push
cmp
(bad)
call
sbb
add
pop
cmp
add
add
adc
movlps
cmp
(bad)
(bad)
call
sbb
add
sub
add
adc
mov
push
adc
add
add
add
add
add
add
add
add
add
add
ins
add
push
es
ins
add
push
sub
add
add
sbb
call
or
xchg
(bad)
(bad)
call
adc
cmp
std
(bad)
call
sbb
add
adc
sbb
add
movlps
cmp
add
push
push
push
xor
sub
add
xor
or
push
cmp
sbb
add
sub
sbb
pop
sbb
push
cmp
jno
add
and
pop
and
push
adc
jmp
push
std
(bad)
dec
add
add
add
add
std
(bad)
call
add
add
add
js
(bad)
jmp
add
add
(bad)
dec
(bad)
dec
(bad)
call
(bad)
jmp
(bad)
(bad)
dec
add
add
adc
cmp
add
add
adc
add
add
sub
add
and
add
add
lahf
add
add
mov
add
push
or
cmp
cld
(bad)
call
sbb
add
sbb
add
sub
add
adc
nop
std
(bad)
call
cmp
adc
cmp
cld
(bad)
call
sbb
add
adc
es
movlps
cmp
push
add
push
sbb
add
movlps
cmp
push
adc
es
adc
dec
std
(bad)
inc
and
add
jae
add
or
sbb
push
cmp
sbb
add
fbld
sub
and
push
es
or
mov
cmp
(bad)
call
push
add
push
pop
adc
sbb
movlps
cmp
(bad)
call
sbb
add
adc
sbb
add
(bad)
call
or
adc
cmp
jo
add
sbb
add
add
mov
pop
adc
cld
(bad)
call
adc
push
cmp
cld
(bad)
call
js
add
sbb
sub
cmp
sti
(bad)
call
pop
add
push
sbb
xor
sub
add
sub
add
adc
adc
in
add
xor
add
pop
or
add
push
sbb
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
adc
add
das
add
add
add
pop
add
add
add
sbb
sbb
prefetch
lods
shl
add
sbb
xor
sub
add
sub
push
or
or
add
push
sbb
xchg
jae
add
sbb
out
sub
pop
or
call
ja
add
and
inc
pop
pop
and
or
add
add
(bad)
(bad)
dec
(bad)
(bad)
push
add
mov
add
add
or
call
sbb
add
icebp
mov
inc
and
mov
pop
or
pop
push
or
call
sbb
add
sbb
add
sub
add
inc
or
add
cmp
add
jle
add
add
add
sahf
add
add
(bad)
dec
add
add
add
add
add
shr
add
es
or
or
call
push
add
push
sbb
cmp
(bad)
call
or
(bad)
call
sbb
add
or
mov
dec
add
push
sbb
or
call
arpl
add
sbb
or
call
push
add
push
and
cs
bound
add
jno
pop
or
(bad)
(bad)
call
(bad)
call
jae
add
sbb
xor
sub
es
ins
add
push
es
or
call
sbb
add
push
or
call
sbb
add
add
add
sub
pop
or
cmp
(bad)
(bad)
call
sbb
add
or
add
add
sub
add
adc
adc
adc
add
push
adc
add
adc
add
sahf
add
add
add
adc
add
jge
add
xchg
add
add
add
int3
add
add
add
add
add
out
add
add
add
add
add
jbe
add
in
add
add
loopne
add
jecxz
add
jecxz
add
sbb
or
sub
rcr
add
add
adc
inc
and
add
adc
(bad)
inc
add
add
add
add
add
add
add
add
jg
add
cdq
add
add
add
add
add
add
add
add
add
add
add
jns
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
repz
add
add
xor
add
dec
add
add
add
add
ud0
inc
pop
adc
(bad)
(bad)
call
adc
push
cmp
(bad)
call
add
push
sbb
push
es
or
add
or
push
cmp
call
push
add
push
es
(bad)
add
add
adc
cmp
(bad)
(bad)
call
push
sbb
cmp
(bad)
(bad)
call
sbb
add
sub
add
adc
add
adc
cmp
(bad)
call
sbb
add
push
xor
sub
add
nop
(bad)
(bad)
call
or
cmp
(bad)
(bad)
call
sbb
add
adc
sbb
add
add
and
push
cmp
(bad)
(bad)
call
imul
push
add
add
jae
add
or
add
add
sub
inc
push
inc
or
pop
adc
cmp
push
add
sbb
push
es
or
add
sbb
push
cmp
sbb
add
cmp
(bad)
(bad)
call
(bad)
(bad)
call
imul
cmp
add
pop
or
push
cmp
(bad)
call
sbb
add
pop
(bad)
add
add
push
cmp
add
pop
or
push
add
add
cmp
add
adc
cmp
(bad)
call
sbb
add
sub
adc
add
add
add
add
add
add
add
add
add
add
outs
add
push
es
outs
add
push
sub
cmps
add
add
jl
add
add
sub
and
xchg
add
sub
add
push
sbb
push
cmp
std
(bad)
call
sbb
add
sbb
add
sub
add
or
add
popa
std
(bad)
call
pop
adc
cmp
outs
add
push
es
or
add
dec
std
(bad)
call
or
std
(bad)
call
push
add
push
pop
adc
es
or
add
adc
cmp
add
push
sbb
sub
add
adc
add
adc
(bad)
call
adc
std
(bad)
call
jae
add
sbb
xor
sub
add
clc
cld
(bad)
call
sbb
push
cmp
(bad)
call
push
add
push
sbb
sub
add
or
cmp
std
(bad)
call
sbb
add
adc
sbb
scas
sbb
cmp
std
(bad)
call
sbb
add
adc
es
add
sbb
push
cmp
std
(bad)
call
pop
add
push
and
xchg
jp
pop
adc
es
add
sbb
cld
(bad)
call
sbb
add
sub
add
cmp
add
add
push
adc
cmp
cld
(bad)
call
jne
add
and
push
sbb
add
(bad)
push
popa
adc
sbb
mov
push
adc
cmp
sbb
add
mov
xchg
xor
push
retf
pushf
pop
popa
adc
es
push
cmp
adc
cmp
sbb
add
adc
es
or
add
sbb
(bad)
inc
cmp
adc
or
push
cmp
(bad)
call
sbb
add
sbb
add
sub
add
repz
(bad)
call
sbb
push
cmp
(bad)
call
sbb
add
cmp
sti
(bad)
call
adc
push
cmp
cld
(bad)
call
sbb
add
pop
xor
sub
add
or
add
mov
inc
or
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
push
(bad)
inc
std
(bad)
jmp
std
(bad)
push
or
add
adc
push
cmp
sti
(bad)
call
jb
add
and
inc
add
and
adc
add
or
sbb
add
jge
add
add
jl
add
add
sub
inc
push
inc
or
adc
cmp
js
add
sbb
xor
sub
add
add
xor
(bad)
call
sub
add
add
sub
and
scas
add
add
adc
add
pop
or
cmp
(bad)
call
push
add
and
cdq
mov
cmps
adc
push
add
add
add
xor
add
add
add
cmp
inc
or
add
add
add
jbe
add
aad
add
add
add
add
movs
add
add
add
add
add
add
outs
add
push
es
or
add
push
and
daa
nop
clc
push
pop
or
add
add
add
add
add
add
add
add
add
jb
add
mov
add
add
add
add
add
add
mov
add
push
sbb
fiadd
add
sbb
or
add
push
push
or
(bad)
inc
inc
add
add
add
add
add
add
add
add
add
add
sbb
pop
or
add
add
sbb
add
sub
add
or
or
call
jae
add
and
arpl
sbb
into
sbb
retf
sbb
enter
sbb
ret
add
push
sbb
sbb
call
outs
add
push
and
add
jne
sbb
pop
or
(bad)
call
or
call
js
add
sbb
(bad)
call
push
add
push
es
(bad)
(bad)
call
or
call
sbb
add
or
add
add
add
add
sbb
call
outs
add
push
sbb
add
add
sub
xor
push
add
add
sbb
add
add
adc
add
js
add
nop
add
add
add
add
add
add
add
add
add
jnp
add
jp
add
jmp
add
pop
add
add
add
add
add
rol
add
rol
add
add
add
add
push
or
sub
sar
add
adc
inc
and
add
add
add
add
add
add
add
add
add
add
lea
add
mov
add
add
add
add
add
add
add
bound
add
jp
add
xchg
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
ja
add
mov
add
test
add
add
add
add
add
add
add
add
or
add
sbb
push
cmp
call
sbb
add
sbb
add
sub
add
sbb
add
add
add
add
add
add
add
add
add
jo
add
es
jo
add
sub
or
add
cmp
add
add
adc
push
cmp
sbb
add
adc
cmp
and
push
cmp
(bad)
(bad)
call
add
push
sbb
cmp
(bad)
(bad)
call
sbb
add
adc
add
add
add
add
inc
push
inc
or
sbb
push
cmp
(bad)
(bad)
call
sbb
add
sub
pusha
and
adc
es
cmp
push
cmp
add
adc
cmp
outs
add
push
sbb
pop
adc
push
cmp
add
add
add
add
add
add
and
add
add
cli
add
add
adc
add
pop
and
push
cmp
(bad)
call
sbb
add
push
sbb
and
mov
push
es
or
add
adc
cmp
(bad)
(bad)
call
sbb
add
das
imul
sub
popa
mov
jnp
adc
es
std
(bad)
inc
pop
sbb
push
cmp
(bad)
(bad)
call
or
push
cmp
(bad)
(bad)
call
sbb
add
adc
es
adc
add
popf
std
(bad)
call
sbb
push
cmp
std
(bad)
call
sbb
add
pop
or
add
and
push
cmp
std
(bad)
call
jae
add
push
sbb
add
sub
add
adc
push
adc
cmp
std
(bad)
call
push
sti
out
jmp
es
add
add
jae
add
or
sbb
push
cmp
jae
add
sbb
push
add
or
sbb
add
jge
add
add
jl
add
add
add
add
inc
push
inc
or
push
adc
cmp
(bad)
call
jne
add
adc
or
pop
or
push
cmp
(bad)
call
sbb
add
pop
jae
and
add
adc
es
cld
(bad)
inc
sub
pop
adc
std
(bad)
call
jne
add
sbb
push
es
(bad)
add
add
cmp
add
add
adc
push
cmp
std
(bad)
call
sbb
add
adc
es
adc
fld
add
pop
or
add
add
movlps
cmp
cld
(bad)
call
sbb
add
sbb
add
jge
(bad)
call
or
cmc
pop
and
push
cmp
cld
(bad)
call
sbb
add
add
add
add
add
and
add
add
rol
add
sub
add
push
sbb
cmps
cld
(bad)
call
imul
push
sbb
push
es
or
add
xor
(bad)
call
cmp
add
pop
or
push
cmp
sbb
add
mov
xchg
push
mov
popa
adc
sbb
add
pop
adc
cmp
(bad)
call
je
add
push
sbb
add
sub
add
or
sub
add
pop
adc
and
adc
cmp
(bad)
call
arpl
add
adc
or
add
iret
sti
(bad)
call
adc
cmp
cld
(bad)
call
arpl
add
cmp
adc
cmp
(bad)
call
jo
add
sbb
xor
sub
add
cmp
std
(bad)
call
adc
cmp
sti
(bad)
call
imul
push
cmp
adc
cmp
sti
(bad)
call
sbb
add
jne
(bad)
call
adc
cmp
sti
(bad)
call
pop
add
push
sbb
sub
add
pop
sti
(bad)
call
adc
push
cmp
arpl
add
sbb
add
sub
add
or
cmp
sbb
add
push
add
sub
add
cmp
push
adc
cmp
call
sbb
add
adc
es
pop
pop
adc
cmp
(bad)
call
sbb
add
push
xor
sub
add
hlt
cli
(bad)
dec
inc
or
add
iret
(bad)
(bad)
call
(bad)
(bad)
(bad)
jns
(bad)
(bad)
jg
(bad)
dec
cld
(bad)
(bad)
(bad)
std
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
call
or
adc
cmp
sti
(bad)
call
ins
add
push
sbb
push
add
add
add
xor
add
add
xor
add
sub
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
add
es
or
rcr
or
or
add
push
and
pop
and
or
add
add
add
adc
add
xor
add
aas
add
add
add
add
xchg
add
add
add
add
add
add
or
or
add
push
sbb
add
add
ins
(bad)
(bad)
call
sub
pop
or
add
push
and
lods
cmp
ror
es
or
or
add
add
sbb
mov
rcr
add
add
sbb
add
sub
add
sub
or
call
push
add
push
push
or
(bad)
inc
inc
add
(bad)
(bad)
call
add
mov
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
call
or
call
add
push
sbb
(bad)
call
or
call
push
in
sti
adc
fadd
cmps
push
popa
or
add
sbb
sbb
call
bound
add
push
pop
xor
sub
add
jl
add
add
das
add
add
push
sub
adc
cmp
(bad)
(bad)
call
or
call
sbb
add
add
sub
add
xor
add
add
add
adc
add
jl
add
add
jge
add
add
sbb
pop
inc
add
add
add
add
add
add
add
add
add
jb
add
es
jb
add
sub
or
inc
add
add
mov
sub
adc
adc
dec
add
add
add
adc
or
inc
adc
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
or
adc
add
push
rcr
add
add
sbb
add
add
add
pop
add
add
(bad)
(bad)
inc
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
push
add
add
add
test
add
mov
add
add
add
add
add
add
cmp
add
add
add
push
push
and
mov
add
sub
outs
imul
add
add
mov
add
sub
or
push
adc
popa
(bad)
(bad)
call
pusha
add
push
and
xchg
imul
je
or
es
(bad)
(bad)
call
cmp
adc
add
cmp
(bad)
call
jp
add
sbb
add
cmp
(bad)
(bad)
inc
outs
add
push
and
add
add
add
add
sub
add
add
add
push
and
add
add
std
add
add
adc
add
inc
or
(bad)
cmp
or
adc
in
(bad)
(bad)
call
push
add
push
es
or
aas
add
add
adc
cmp
add
pop
or
xor
add
pop
adc
(bad)
(bad)
call
sbb
add
sub
add
adc
dec
(bad)
(bad)
inc
cmp
add
add
or
ds
(bad)
call
or
add
popf
(bad)
(bad)
call
jp
add
sbb
add
sub
add
adc
adc
add
cmp
call
jno
add
sbb
xor
sub
add
or
(bad)
call
adc
add
addr16
(bad)
call
sbb
add
sbb
add
sub
add
adc
jmp
adc
dec
(bad)
(bad)
call
pop
add
push
and
pop
enter
xchg
pusha
pop
adc
sub
or
add
add
add
or
add
add
add
add
add
add
jae
add
es
jae
add
sub
jecxz
add
add
add
push
pop
and
add
add
mov
cmc
add
push
sbb
pop
adc
std
(bad)
call
jp
add
sbb
add
sub
add
push
inc
or
add
pop
(bad)
(bad)
(bad)
out
add
add
add
add
add
ja
add
add
add
add
mov
(bad)
(bad)
dec
(bad)
(bad)
call
or
adc
cwde
std
(bad)
call
dec
add
push
sbb
loopne
(bad)
call
or
adc
cmp
call
sbb
add
sbb
fcomp
push
adc
jo
(bad)
call
dec
add
push
and
enter
push
inc
cmp
add
pop
or
add
push
std
(bad)
call
sbb
add
adc
adc
cmp
sbb
add
push
xor
sub
add
adc
mov
push
sub
cmp
std
(bad)
call
dec
add
push
cmp
or
add
or
(bad)
call
sbb
add
sub
add
adc
or
add
lock
(bad)
call
data16
push
sbb
add
add
add
push
pop
and
add
add
push
add
add
cmc
add
push
sbb
sbb
add
(bad)
cld
(bad)
call
sbb
add
cdq
mov
dec
and
dec
dec
popa
adc
sbb
call
or
push
(bad)
(bad)
call
adc
add
sahf
cld
(bad)
call
push
add
push
push
sbb
add
sub
add
outs
add
push
add
add
push
pop
sbb
sub
add
pop
(bad)
and
add
add
jmp
add
sbb
cmp
sti
(bad)
call
or
movlps
pop
cld
(bad)
call
sbb
add
sbb
add
sub
add
adc
(bad)
(bad)
inc
outs
imul
cmp
adc
in
add
pop
or
add
sub
(bad)
call
pop
add
push
add
add
sbb
push
add
or
add
add
adc
or
pop
adc
inc
adc
add
rol
add
add
add
add
add
add
add
rol
add
add
add
add
hlt
add
add
add
add
add
fild
add
add
add
add
add
or
shl
add
sbb
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
popa
add
add
add
mov
add
mov
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
int
add
repz
add
add
add
add
add
add
jl
add
xchg
add
add
add
add
add
add
add
add
or
or
ins
(bad)
(bad)
call
push
add
push
es
or
adc
cmp
(bad)
call
sbb
add
lea
push
daa
and
mov
inc
pop
adc
sbb
add
adc
pop
sbb
(bad)
(bad)
call
sbb
add
adc
sbb
pop
cmp
(bad)
(bad)
call
sbb
or
push
(bad)
(bad)
call
jb
add
es
mov
adc
(bad)
(bad)
call
sbb
add
cmp
adc
adc
cmp
(bad)
(bad)
call
sbb
add
cmp
adc
or
loop
(bad)
call
pusha
add
push
push
adc
sbb
pop
sbb
(bad)
(bad)
call
ja
add
and
fstp
cs
adc
sbb
pop
cmp
(bad)
inc
and
sub
add
and
(bad)
int3
adc
push
sub
add
and
add
and
add
sub
sbb
or
jg
(bad)
call
sbb
add
jp
mov
and
cmc
and
adc
cmp
pop
adc
cmp
(bad)
call
sbb
add
icebp
dec
dec
dec
and
jbe
adc
or
sbb
pop
pop
or
or
aas
(bad)
(bad)
call
push
adc
es
std
(bad)
call
or
call
adc
or
and
(bad)
call
je
add
es
or
add
adc
pop
push
adc
cmp
(bad)
(bad)
call
sbb
add
and
xchg
and
and
cmp
add
or
add
xchg
(bad)
(bad)
push
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
adc
cmp
add
add
adc
sbb
add
or
or
cmps
std
(bad)
call
outs
add
push
and
bound
outs
popa
adc
cmp
adc
adc
cmp
add
add
sbb
add
sub
add
adc
cmp
or
data16
(bad)
call
sbb
add
jns
or
cmp
sub
pop
adc
es
cld
(bad)
inc
and
add
add
mov
push
add
push
and
sub
add
and
add
add
inc
add
push
pop
or
pop
pop
adc
or
pop
std
(bad)
call
outs
add
push
sbb
or
sbb
call
adc
cmp
std
(bad)
call
sbb
add
clc
add
and
sahf
adc
or
pop
and
int3
adc
sub
add
and
loope
add
sub
add
push
and
add
add
in
add
sub
adc
or
mov
ja
add
push
sbb
add
sub
add
cmp
(bad)
call
or
cmp
(bad)
call
or
call
sbb
or
(bad)
cld
(bad)
call
sbb
add
adc
es
and
sub
add
sub
push
and
add
add
and
add
sub
or
pop
cmp
cld
(bad)
call
sbb
or
push
cld
(bad)
call
sbb
add
push
pop
or
or
(bad)
int3
adc
sub
add
mov
push
add
push
and
iret
add
add
mov
or
and
int3
adc
push
mov
pop
add
push
and
add
and
add
add
mov
or
and
int3
adc
sub
add
mov
pop
add
push
and
add
and
add
sub
or
jnp
int3
adc
sub
add
mov
popa
add
push
and
sti
add
add
mov
or
and
int3
adc
sub
add
mov
outs
arpl
add
and
fadd
add
sub
or
and
sub
add
push
and
add
add
lea
add
sub
sbb
or
gs
(bad)
call
sbb
add
shl
js
mov
and
adc
sbb
pop
sbb
or
inc
sti
(bad)
call
add
push
and
or
or
push
and
sub
add
and
add
add
mov
movlps
cmp
sti
(bad)
call
jne
add
and
outs
retf
pop
and
in
pop
adc
es
adc
cmp
adc
cmp
cli
(bad)
call
push
add
push
es
push
cmp
(bad)
call
pop
adc
cmp
cli
(bad)
call
outs
add
push
push
adc
es
adc
adc
pop
adc
or
mov
data16
push
cmp
(bad)
inc
pop
and
add
add
xchg
add
add
xchg
add
sub
or
jmp
add
push
or
cwde
(bad)
int3
adc
sub
add
sub
add
or
push
adc
cmp
(bad)
call
ins
add
push
and
xchg
cmc
popa
and
call
pop
adc
es
adc
sti
cli
(bad)
call
or
call
push
adc
cmp
(bad)
call
sbb
add
add
adc
sbb
or
or
sbb
add
adc
adc
inc
pop
add
add
(bad)
(bad)
inc
add
add
add
add
add
pusha
add
add
add
push
and
in
add
add
leave
add
push
fst
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
adc
sub
push
sub
sub
sbb
sbb
sub
sub
pop
adc
sub
add
adc
sbb
or
adc
cmp
(bad)
call
push
add
push
adc
adc
pop
(bad)
(bad)
call
jno
add
sbb
add
sub
add
or
add
add
(bad)
jmp
(bad)
inc
(bad)
(bad)
call
(bad)
jmp
(bad)
inc
(bad)
(bad)
jmp
(bad)
call
adc
cmp
push
add
push
sbb
xor
sub
add
fisub
and
add
aam
add
sub
add
push
or
push
add
and
add
add
jecxz
add
fiadd
pop
adc
pop
or
shl
add
sbb
add
sub
add
or
add
add
add
add
add
add
add
test
add
into
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
pop
or
or
adc
or
stos
rcr
add
add
jnp
into
and
cld
or
inc
pop
adc
es
or
jp
add
push
cmp
add
or
xchg
sbb
add
pop
or
or
cmps
add
add
sbb
or
or
add
add
add
add
add
add
add
add
add
add
add
add
je
add
es
je
add
sub
sbb
add
pop
or
daa
add
add
cmp
add
add
outs
imul
inc
pop
push
push
sbb
or
and
(bad)
call
jb
add
and
in
adc
je
adc
add
add
push
and
mov
add
add
push
adc
cmp
(bad)
(bad)
call
sbb
add
adc
es
retf
add
adc
cmp
(bad)
(bad)
call
popa
add
push
sbb
xor
sub
add
test
add
or
test
add
sbb
mov
cmp
or
stos
(bad)
(bad)
call
sbb
add
sbb
add
sub
add
adc
pop
push
adc
cmp
sbb
add
sbb
add
sub
add
scas
add
add
outs
imul
add
add
pusha
add
add
cmp
add
sub
add
push
add
add
push
push
and
add
add
jne
add
sub
add
push
pop
or
or
inc
(bad)
(bad)
call
sbb
add
adc
inc
or
add
push
(bad)
(bad)
call
(bad)
call
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
sbb
(bad)
(bad)
call
sbb
add
and
mov
adc
sbb
push
sbb
or
out
std
(bad)
call
jno
add
es
push
pop
or
or
or
std
(bad)
call
push
add
push
adc
adc
inc
or
add
mov
(bad)
jmp
(bad)
jmp
(bad)
jmp
add
mov
(bad)
call
(bad)
jmp
(bad)
(bad)
call
(bad)
jmp
add
sbb
(bad)
call
or
mov
(bad)
call
sbb
add
pop
or
or
or
or
jnp
(bad)
call
sbb
add
sbb
add
sub
add
outs
pop
add
push
push
sub
add
push
add
add
push
push
sub
add
push
pop
or
or
dec
std
(bad)
call
sbb
add
sbb
add
sub
add
or
std
(bad)
call
add
push
sbb
or
add
add
add
adc
add
add
and
add
add
xor
add
add
push
add
adc
sbb
push
inc
add
add
add
add
add
add
add
add
add
jne
add
es
jne
add
sub
adc
adc
sub
add
push
add
adc
sbb
push
inc
add
add
add
add
add
add
add
add
add
jbe
add
es
jbe
add
sub
adc
adc
sub
add
push
add
adc
push
or
inc
add
add
add
add
add
add
add
add
add
add
add
ja
add
es
ja
add
sub
adc
adc
sub
add
push
add
adc
pop
or
inc
add
add
add
add
add
add
add
add
add
add
add
js
add
es
js
add
sub
adc
adc
sub
add
push
add
adc
sbb
push
inc
add
add
add
add
add
add
add
add
add
add
add
jns
add
es
jns
add
sub
adc
adc
add
add
adc
or
inc
or
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
jb
add
add
add
mov
add
lock
add
add
add
add
sbb
adc
add
sbb
or
add
sbb
sub
add
clc
or
and
sbb
pop
or
int3
adc
sub
add
push
adc
sub
add
and
add
add
mov
sbb
add
add
sbb
add
sub
add
or
inc
(bad)
(bad)
call
or
call
pop
add
push
and
clc
and
add
daa
jb
or
or
call
add
push
sbb
cmp
(bad)
(bad)
call
(bad)
call
sbb
add
out
fidivr
and
xor
sbb
je
sub
or
call
sbb
add
and
(bad)
int3
adc
push
push
adc
inc
add
add
popa
add
add
mov
push
or
mov
or
or
call
sbb
add
sbb
add
add
or
or
lahf
(bad)
(bad)
inc
inc
push
add
add
(bad)
(bad)
(bad)
out
(bad)
(bad)
dec
(bad)
(bad)
jmp
add
add
add
add
or
jp
(bad)
call
or
call
sbb
add
jmp
loop
pop
or
push
sub
sbb
call
jno
add
pop
push
xor
sub
add
sbb
inc
add
add
add
add
add
add
add
add
add
jp
add
es
jp
add
sub
add
sub
adc
adc
sub
add
push
add
adc
push
or
inc
add
add
add
add
add
add
add
add
add
add
add
jnp
add
es
jnp
add
sub
adc
adc
sub
add
push
add
adc
sbb
push
inc
add
add
add
add
add
jl
add
es
jl
add
sub
adc
adc
xor
add
add
adc
mov
add
sldt
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
aaa
add
add
add
add
adc
add
push
sbb
add
sub
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
jae
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
pop
or
add
add
add
adc
cmp
(bad)
call
adc
add
call
test
add
pop
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
add
(bad)
(bad)
call
adc
call
sbb
add
adc
add
sbb
add
call
sbb
add
adc
cmp
pop
adc
call
sbb
sbb
add
sub
add
adc
call
sbb
add
adc
cmp
(bad)
(bad)
jle
add
add
pop
or
add
push
sub
test
add
sbb
cmp
add
push
and
inc
cmp
or
add
pop
push
adc
call
sbb
adc
add
and
stos
add
add
inc
add
push
or
or
add
call
sbb
sbb
add
sub
add
cmp
(bad)
(bad)
call
adc
add
call
test
add
sbb
add
adc
call
adc
call
sbb
xor
and
add
add
adc
call
sbb
and
pop
push
add
(bad)
call
or
add
call
mov
add
and
int
pop
and
adc
popf
push
and
pop
jns
sbb
add
ror
add
add
add
add
and
add
sub
test
add
add
add
push
sub
push
or
push
adc
adc
add
call
add
lahf
dec
and
dec
loop
or
add
(bad)
inc
sbb
add
push
adc
call
jg
add
and
popa
(bad)
adc
inc
popa
adc
sbb
(bad)
call
cmp
(bad)
call
or
or
adc
add
call
sbb
mov
cld
sub
pop
adc
jmp
add
call
sbb
add
sbb
add
sub
add
cmp
add
call
mov
add
and
jp
sub
pop
lods
push
pop
adc
(bad)
call
or
cld
(bad)
call
sbb
adc
std
(bad)
call
jge
add
es
pop
or
add
call
jg
add
push
sbb
add
sub
add
or
movs
cld
(bad)
call
sbb
sbb
add
inc
cld
(bad)
call
adc
call
add
adc
sub
(bad)
call
sbb
add
call
sbb
sbb
xor
(bad)
call
adc
cld
(bad)
call
mov
add
sbb
sub
add
cmp
movlps
call
mov
add
and
std
and
fld
add
or
add
sub
add
adc
adc
ins
add
add
add
adc
push
add
add
inc
or
add
stos
add
add
add
add
add
stos
add
add
add
hlt
add
add
add
add
add
add
or
add
push
and
iret
add
pop
or
add
add
add
add
add
add
add
add
add
add
jne
add
xchg
add
add
add
ret
add
jle
add
es
mov
add
sbb
sar
add
es
or
or
add
push
es
cmp
(bad)
call
or
add
push
and
xor
add
fcomp
inc
pop
or
push
sub
sub
pop
or
call
add
or
sub
(bad)
(bad)
jle
add
add
sbb
call
sbb
add
sbb
adc
(bad)
call
or
call
mov
add
and
popf
aaa
ja
or
pop
popa
or
repnz
(bad)
call
or
or
call
sbb
add
push
sub
ds
sub
sbb
call
sbb
or
(bad)
inc
inc
add
(bad)
(bad)
jmp
(bad)
jmp
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
call
call
mov
add
add
sub
add
adc
adc
dec
add
add
add
adc
sbb
sub
rcr
pop
inc
add
add
loop
(bad)
inc
add
add
sbb
push
inc
add
add
add
add
add
add
add
add
add
add
add
jg
add
es
jg
add
sub
add
sub
add
adc
adc
add
add
add
adc
sbb
add
sub
or
inc
add
add
add
add
add
add
push
es
add
push
sub
or
inc
add
add
(bad)
(bad)
(bad)
inc
sub
add
xor
add
add
adc
or
inc
or
add
jp
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
adc
add
inc
add
add
adc
push
sar
add
push
push
xor
sub
add
add
adc
add
jb
(bad)
inc
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
rol
push
add
sub
add
sub
sbb
add
pushf
ror
int
inc
sub
popa
popa
adc
pop
or
adc
jg
(bad)
call
xchg
add
sbb
add
push
sub
pop
or
out
or
add
data16
(bad)
call
sbb
add
adc
add
imul
add
add
rol
push
pop
or
add
inc
(bad)
(bad)
call
jg
add
and
movs
cmp
es
(bad)
(bad)
call
or
add
and
(bad)
call
jge
add
sbb
or
int
(bad)
call
movlps
or
(bad)
call
mov
add
es
popa
pop
cmp
add
add
pop
add
add
or
test
(bad)
call
neg
or
add
loope
(bad)
call
sbb
pop
xor
sub
add
cmp
(bad)
call
push
adc
(bad)
(bad)
(bad)
call
mov
add
sbb
add
pop
or
sub
(bad)
call
adc
lods
(bad)
(bad)
call
sbb
sbb
and
(bad)
adc
sub
or
add
add
add
add
add
add
inc
add
add
add
add
add
pop
add
add
add
add
add
sbb
pop
inc
add
add
add
add
add
add
add
add
add
sub
sbb
neg
icebp
sbb
out
rol
sbb
adc
daa
(bad)
(bad)
call
jle
add
sbb
add
sbb
pop
or
(bad)
(bad)
call
sbb
adc
pop
or
mov
sub
push
or
or
mov
(bad)
call
adc
in
std
(bad)
call
sbb
add
adc
sbb
push
(bad)
(bad)
call
adc
(bad)
std
(bad)
call
test
add
es
inc
push
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
aas
(bad)
(bad)
push
(bad)
(bad)
call
adc
stos
std
(bad)
call
sbb
add
sbb
add
sub
add
sub
add
adc
adc
ret
add
add
add
cmp
adc
or
mov
add
sbb
or
add
add
add
and
add
cmp
add
add
add
add
mov
add
test
add
rol
add
add
add
add
add
add
add
add
add
add
xchg
add
lahf
add
add
add
add
add
add
or
inc
add
add
or
inc
add
add
or
cmp
add
sbb
(bad)
rcr
add
inc
add
pop
or
ja
(bad)
call
sbb
add
pop
add
sub
add
adc
popa
(bad)
(bad)
call
sbb
sbb
add
add
push
sbb
dec
(bad)
(bad)
call
jle
add
sbb
pop
or
adc
ss
(bad)
call
sbb
add
sbb
add
add
or
adc
cmp
(bad)
(bad)
call
sbb
add
pop
adc
adc
(bad)
call
test
add
and
dec
mov
es
cmp
cmp
or
jmp
(bad)
call
jle
add
es
adc
(bad)
(bad)
call
jge
add
sbb
sub
or
retf
call
sbb
sbb
pop
or
(bad)
call
jle
add
cmp
or
push
pop
or
mov
sbb
inc
out
cmp
pop
or
pop
or
cmp
or
cmp
inc
or
add
lods
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
push
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
or
pop
or
cmp
(bad)
call
sbb
or
sub
mov
test
add
sub
add
push
sub
cmp
jg
add
sbb
add
add
cmp
(bad)
call
or
adc
paddd
call
sbb
or
pop
adc
(bad)
std
(bad)
call
mov
add
push
sbb
add
sub
add
inc
or
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
(bad)
(bad)
push
(bad)
dec
add
add
(bad)
jmp
add
add
(bad)
(bad)
call
add
push
es
or
(bad)
call
mov
add
es
or
push
or
cdq
std
(bad)
call
sbb
or
add
popa
pop
dec
pop
inc
add
add
std
std
(bad)
call
or
or
jns
(bad)
call
sbb
add
pop
or
or
imul
add
push
and
push
xchg
adc
add
sub
adc
adc
sti
add
add
add
cmp
add
add
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
or
adc
sbb
add
std
popa
push
jne
pop
aaa
mov
or
add
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
or
xor
or
sahf
rol
or
push
inc
or
add
cli
add
add
add
aas
add
add
(bad)
(bad)
inc
add
push
add
add
add
add
or
cmp
(bad)
(bad)
call
adc
cmp
(bad)
call
add
push
push
sbb
add
sub
add
sub
pop
or
fstp
add
push
sbb
pop
or
cmp
(bad)
call
add
xor
sub
add
sub
(bad)
(bad)
call
sbb
add
sbb
addr16
jnp
or
sbb
or
add
(bad)
call
xchg
add
and
aam
(bad)
cmp
or
rol
sbb
(bad)
call
add
push
sbb
push
or
adc
sar
(bad)
call
sbb
add
or
cmp
(bad)
call
adc
mov
add
push
sbb
xor
sub
add
pop
(bad)
(bad)
inc
add
pop
add
add
and
add
add
sub
or
or
or
mov
(bad)
call
sbb
mov
dec
test
(bad)
cmp
add
add
or
or
addr16
(bad)
call
xchg
add
sbb
pop
adc
push
(bad)
(bad)
call
mov
add
sbb
xor
sub
add
or
adc
aas
(bad)
(bad)
call
jle
add
push
pop
xor
sub
add
or
mov
or
and
(bad)
call
sbb
add
sbb
add
sub
add
or
mov
sub
or
or
or
(bad)
std
(bad)
call
xchg
add
and
dec
test
pop
or
cmp
or
loope
(bad)
call
xchg
add
and
cmp
fsubr
cmp
(bad)
call
cmp
call
or
(bad)
cmp
sbb
add
or
cmp
(bad)
call
or
(bad)
call
mov
add
and
addr16
and
sbb
jl
or
add
pop
inc
add
add
mov
or
cmp
call
jg
add
es
or
add
(bad)
call
or
push
jle
add
add
sub
adc
adc
je
add
or
add
sbb
inc
or
add
xor
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
rcr
push
xor
sub
add
add
push
add
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
add
add
add
jnp
(bad)
inc
inc
push
add
add
add
call
add
add
add
add
add
adc
cdq
rcr
sbb
adc
mov
sbb
and
jbe
and
ret
dec
pop
adc
sbb
xor
(bad)
call
sub
pop
or
add
data16
(bad)
call
sbb
add
adc
pop
or
inc
add
add
or
or
or
(bad)
call
(bad)
(bad)
call
test
add
sbb
xor
sub
add
or
adc
sub
sbb
sbb
add
add
sub
adc
adc
(bad)
call
xchg
add
push
adc
push
sub
cmp
(bad)
(bad)
call
mov
add
and
and
es
imul
sbb
mov
and
add
add
stc
add
add
ret
push
pop
or
add
enter
rcr
(bad)
fist
xor
sub
add
pop
add
add
add
add
add
add
add
pop
add
add
add
rol
sbb
pop
inc
add
add
add
add
add
add
add
add
add
or
cli
sbb
neg
icebp
sbb
add
push
sbb
adc
inc
(bad)
(bad)
call
sbb
adc
pop
or
adc
xor
(bad)
call
mov
add
sbb
lods
(bad)
(bad)
inc
popa
pop
ds
inc
add
add
mov
or
or
(bad)
(bad)
call
sbb
add
sbb
xchg
(bad)
call
cmp
adc
lock
(bad)
call
sbb
adc
cmp
adc
(bad)
(bad)
call
xchg
add
adc
sub
xor
data16
add
add
adc
or
adc
adc
add
into
js
and
adc
adc
stos
(bad)
(bad)
inc
add
add
add
add
add
jge
add
fwait
add
add
add
add
add
add
add
inc
add
add
add
ins
add
add
inc
push
add
add
add
add
add
add
add
add
add
add
or
adc
mov
push
pop
sbb
add
sub
add
sub
push
adc
mov
sbb
add
or
add
add
add
add
add
jle
add
xchg
(bad)
(bad)
push
add
add
add
add
add
inc
add
add
add
dec
(bad)
(bad)
call
sbb
sub
sbb
mov
or
or
or
add
xor
(bad)
call
sbb
adc
sub
adc
and
(bad)
call
test
add
sbb
add
add
or
or
adc
pop
(bad)
(bad)
call
sbb
cmp
(bad)
call
cmp
(bad)
call
or
add
in
(bad)
(bad)
call
sbb
adc
push
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
inc
pop
inc
add
add
jg
(bad)
(bad)
cli
add
add
or
add
mov
sbb
add
mov
sub
int3
arpl
add
cmp
(bad)
(bad)
call
cmp
(bad)
call
or
or
add
xchg
(bad)
(bad)
call
xchg
add
sbb
sub
add
cmp
(bad)
call
sbb
pop
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
call
adc
popa
(bad)
(bad)
call
jle
add
sbb
add
sbb
int
(bad)
inc
add
fiadd
add
and
add
add
ret
add
push
sub
or
add
cmp
add
add
add
add
add
inc
add
add
add
add
add
jmp
add
sub
or
inc
push
add
add
add
pop
add
add
add
add
add
add
add
add
or
cli
sbb
neg
sub
sbb
icebp
sbb
out
sbb
jmp
test
add
sbb
add
aad
add
sbb
add
mov
sbb
add
add
adc
adc
and
add
or
add
push
or
adc
adc
add
push
and
adc
push
pop
jno
adc
adc
(bad)
(bad)
(bad)
inc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
xchg
add
mov
add
rol
add
push
add
add
add
sahf
add
add
inc
or
add
scas
add
add
add
add
add
add
add
add
add
add
add
sti
add
add
add
add
add
add
adc
outs
(bad)
(bad)
call
jle
add
sbb
add
pop
or
rol
add
or
movlps
push
(bad)
(bad)
call
sbb
adc
sub
add
and
add
add
pop
adc
add
xor
(bad)
call
jg
add
pop
sbb
add
sub
add
cmp
add
add
adc
add
adc
(bad)
call
sbb
sub
jle
and
and
popa
adc
pop
adc
clc
(bad)
(bad)
call
mov
add
and
fs
outs
and
or
adc
push
cmp
or
add
(bad)
(bad)
(bad)
call
test
add
push
pop
xor
sub
add
or
adc
add
mov
sbb
add
sbb
adc
lods
(bad)
(bad)
call
xchg
add
sbb
sub
add
or
adc
xchg
(bad)
(bad)
call
jle
add
and
sub
ds
adc
sbb
push
(bad)
(bad)
call
or
adc
jb
(bad)
call
sbb
fstp
adc
es
sbb
push
(bad)
(bad)
call
mov
add
es
adc
inc
(bad)
(bad)
call
sbb
add
sbb
pop
adc
ss
(bad)
call
sbb
cmp
pusha
and
repnz
adc
push
inc
push
add
add
add
mov
(bad)
(bad)
jmp
(bad)
(bad)
call
or
std
(bad)
call
jle
add
sbb
adc
in
std
(bad)
call
xchg
add
and
retf
ja
ret
outs
pop
adc
sub
or
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
xchg
add
sub
or
inc
add
add
add
add
add
add
add
add
add
cli
sbb
neg
sub
sbb
icebp
sbb
out
rol
sbb
adc
addr16
(bad)
call
add
push
push
sbb
add
add
adc
(bad)
call
cmp
(bad)
(bad)
call
call
add
aas
std
(bad)
call
sbb
add
sbb
add
sub
add
popa
pop
cmp
add
add
mov
or
add
sbb
(bad)
call
jge
add
push
pop
xor
sub
add
or
or
add
add
(bad)
call
xchg
add
add
add
adc
adc
or
add
adc
or
or
rcr
sbb
and
loope
outs
pop
adc
adc
mov
(bad)
inc
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
enter
fild
add
out
add
add
add
add
or
adc
sahf
rcr
sbb
add
sub
add
or
xchg
add
add
or
add
adc
add
push
sbb
add
sbb
lods
add
add
or
or
adc
add
addr16
(bad)
call
mov
add
sbb
add
sbb
adc
push
(bad)
(bad)
call
sbb
add
sub
add
or
in
add
push
inc
push
add
add
add
sbb
add
adc
add
(bad)
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
call
sbb
adc
sbb
sbb
adc
add
(bad)
call
sbb
add
sbb
add
sub
add
or
adc
add
jmp
sbb
add
sbb
add
sub
add
or
(bad)
(bad)
call
add
push
push
adc
push
or
adc
mov
mov
add
push
push
xor
sub
add
cmp
(bad)
(bad)
call
adc
add
mov
sbb
add
or
mov
(bad)
(bad)
(bad)
call
jg
add
sbb
xor
sub
add
pop
inc
add
add
idiv
(bad)
call
or
add
addr16
(bad)
call
mov
add
push
sbb
add
add
inc
or
add
mov
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
jmp
dec
add
add
(bad)
(bad)
call
add
pop
(bad)
(bad)
call
jge
add
sbb
adc
add
push
(bad)
(bad)
call
sbb
add
cmp
(bad)
call
add
idiv
(bad)
call
xchg
add
sbb
pop
push
adc
out
(bad)
call
sbb
add
or
std
(bad)
call
add
xor
sub
add
or
std
(bad)
call
sbb
cmp
(bad)
call
or
mov
movlps
mov
sbb
add
add
and
add
add
aam
add
sub
or
add
pop
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
xchg
add
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
pop
sub
sbb
hlt
sbb
icebp
pop
sub
rol
pop
or
adc
sbb
(bad)
call
sbb
add
adc
add
add
add
xor
pop
add
add
add
adc
test
add
push
inc
or
add
pop
add
add
add
pop
add
pop
add
add
add
add
add
xor
add
sbb
sub
rcr
add
pop
add
sub
add
inc
pop
add
add
add
add
add
and
add
push
add
add
add
add
sbb
sub
rcr
push
xor
sub
add
sub
push
or
or
rcl
add
push
es
or
jl
(bad)
inc
pop
inc
add
add
(bad)
(bad)
call
cmp
(bad)
call
or
call
lods
jle
dec
and
or
cmp
(bad)
inc
add
jno
add
and
add
add
test
push
sub
or
push
(bad)
call
sbb
cmp
(bad)
(bad)
jmp
pop
ror
sbb
cmp
(bad)
call
sbb
and
pop
jns
sbb
add
sub
adc
adc
repz
add
add
sbb
push
inc
push
add
add
add
add
add
add
add
add
add
add
add
pop
inc
add
add
xor
add
sbb
sbb
adc
sbb
sub
dec
sbb
mov
or
or
add
add
add
add
add
add
sub
sbb
(bad)
test
add
sbb
xor
sub
add
mov
or
retf
rol
sbb
add
sub
add
or
or
mov
xchg
add
sbb
add
sub
add
pop
(bad)
(bad)
inc
add
cmps
add
add
mov
add
sub
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
mov
add
sub
or
push
sbb
add
adc
and
scas
cmp
sub
adc
push
add
add
add
add
adc
jnp
add
sbb
sub
ror
pop
inc
or
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
imul
add
lea
add
mov
add
enter
sbb
push
sbb
sbb
sub
sar
add
sbb
es
inc
or
add
int3
(bad)
(bad)
inc
add
pop
add
add
add
add
add
jle
add
pop
add
add
add
sbb
mov
add
sbb
sbb
sub
push
add
and
add
add
test
(bad)
call
or
or
jne
(bad)
call
sbb
or
sbb
cmp
(bad)
call
sbb
pop
xor
sub
add
or
or
dec
(bad)
(bad)
call
jg
add
cmp
(bad)
inc
add
add
hlt
add
add
add
sbb
cmp
(bad)
(bad)
call
sbb
add
or
ror
sbb
cmp
(bad)
call
add
push
sbb
cmp
(bad)
(bad)
call
add
push
sbb
xor
sub
add
adc
data16
add
add
adc
adc
sub
add
push
add
adc
inc
sbb
sub
rcr
pop
inc
or
add
retf
inc
add
add
add
add
add
add
add
add
mov
add
add
add
add
or
or
rcl
mov
add
pop
or
push
or
popa
add
popa
pop
xor
add
add
mov
add
pop
or
mov
sbb
ret
in
shr
inc
clc
push
addps
sub
add
in
add
and
add
add
les
add
sub
sub
add
sbb
add
sub
add
or
or
jno
(bad)
call
sbb
sbb
add
sub
add
inc
or
add
jns
(bad)
call
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
mov
add
sbb
cmp
(bad)
(bad)
call
sbb
add
cmp
and
pop
or
push
or
(bad)
call
sbb
sbb
cmp
(bad)
(bad)
call
add
sbb
and
or
repz
(bad)
call
sbb
or
add
sub
add
adc
adc
out
add
push
add
adc
imul
add
add
add
add
bound
add
add
add
inc
add
add
add
add
add
ror
or
or
push
rol
pop
inc
pop
add
add
add
or
add
add
add
imul
add
add
pop
sub
or
xlat
rcr
sub
sub
add
add
loop
(bad)
call
or
test
or
mov
push
pop
or
sbb
sbb
sub
add
pop
cmp
fcompp
lods
pop
popa
or
cmp
(bad)
inc
and
sbb
add
sub
add
push
sub
cmp
(bad)
call
xchg
add
push
or
cmp
(bad)
(bad)
jmp
adc
or
or
arpl
(bad)
call
add
add
sub
adc
adc
fadd
add
push
add
adc
push
or
add
add
or
add
add
add
adc
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
or
add
add
sbb
add
sub
add
or
or
add
push
es
add
add
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
lea
add
es
lea
add
sub
cmp
cdq
add
add
inc
add
add
add
add
add
add
pop
add
add
add
add
or
or
call
xor
add
or
sbb
jmp
pop
or
call
xor
add
push
mov
add
fwait
dec
outs
xor
sub
add
push
sbb
pop
or
call
xor
add
sub
add
sub
js
add
and
add
or
add
sub
xor
add
or
or
call
xor
add
or
add
add
(bad)
push
add
add
(bad)
dec
(bad)
inc
(bad)
call
(bad)
(bad)
call
call
xor
add
or
or
call
xor
add
sbb
add
sub
add
cmp
(bad)
(bad)
call
or
call
xor
add
sbb
add
sub
add
add
push
and
add
add
push
xchg
add
push
je
add
add
pop
or
call
xor
add
sbb
ins
leave
adc
add
adc
adc
cmp
add
adc
sub
add
or
or
adc
nop
add
push
and
lock
inc
xchg
jg
or
push
inc
add
add
(bad)
(bad)
(bad)
inc
add
add
ror
sub
mov
add
sub
add
sub
add
adc
adc
jo
add
add
adc
or
adc
push
shl
add
add
push
add
sub
add
add
adc
add
movs
(bad)
(bad)
inc
add
add
add
cmp
add
pop
add
add
add
add
add
add
add
add
add
add
add
lea
add
mov
add
add
add
add
cmp
add
add
cmp
add
add
adc
test
pop
add
and
out
or
enter
pop
adc
pop
cmp
or
add
mov
xor
add
adc
cmp
cmp
or
add
ins
(bad)
(bad)
call
mov
add
pop
push
xor
sub
add
pop
or
add
or
add
add
add
add
pop
add
es
pop
add
sub
xchg
add
push
cmp
add
sub
add
push
and
add
add
cwde
add
add
stos
add
push
or
or
adc
or
(bad)
call
pop
add
sbb
adc
clc
(bad)
(bad)
call
xor
add
adc
sub
add
pop
push
adc
fdivrp
(bad)
call
pop
add
sbb
sub
add
inc
or
add
inc
add
add
(bad)
(bad)
push
(bad)
call
add
add
(bad)
(bad)
mov
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
or
add
xchg
(bad)
(bad)
call
nop
add
push
sbb
add
sbb
pop
or
adc
cmp
call
lea
add
push
sbb
add
sub
add
or
(bad)
(bad)
call
mov
add
sbb
add
sub
adc
add
and
add
add
lods
add
push
pop
or
or
add
aas
(bad)
(bad)
call
xor
add
and
mov
adc
pop
or
adc
and
(bad)
call
xor
add
adc
sbb
dec
push
sub
add
or
(bad)
call
nop
add
push
sbb
pop
or
adc
stc
std
(bad)
call
xor
add
push
add
and
add
pop
inc
push
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
or
icebp
(bad)
(bad)
call
sub
pop
or
std
(bad)
call
mov
add
push
push
xor
sub
add
sub
xor
outs
push
add
cmp
add
cmp
pop
inc
or
add
xchg
add
loopne
add
jo
add
or
add
das
add
add
add
ins
add
add
add
add
add
outs
add
add
adc
sub
ror
adc
adc
inc
adc
add
jae
(bad)
inc
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
push
sbb
or
scas
ror
pop
xor
sub
add
or
push
(bad)
(bad)
(bad)
jle
add
add
push
adc
cmp
(bad)
inc
and
add
add
mov
add
sub
and
add
add
test
or
cmp
(bad)
call
xor
add
push
xor
sub
add
or
(bad)
call
push
adc
cmp
(bad)
call
xor
add
inc
int3
fidiv
stc
call
or
rcl
sbb
pop
pop
or
or
sbb
(bad)
call
mov
add
es
or
or
(bad)
call
xor
add
sbb
or
sti
(bad)
(bad)
call
xor
add
sbb
add
sub
add
cmp
or
xchg
add
add
cmp
cmp
cmp
or
(bad)
(bad)
(bad)
call
nop
add
push
sbb
or
cmp
(bad)
call
(bad)
(bad)
call
xor
add
popa
(bad)
(bad)
call
adc
pop
or
or
xchg
(bad)
(bad)
call
pop
add
or
arpl
add
pop
or
or
cmp
add
push
pop
push
xor
sub
add
sub
inc
pop
add
add
(bad)
jmp
(bad)
jmp
push
(bad)
(bad)
js
add
js
(bad)
(bad)
js
add
pop
or
pop
push
adc
cmp
(bad)
call
xor
add
adc
es
or
pop
pop
or
(bad)
(bad)
call
lea
add
es
std
(bad)
call
adc
cmp
(bad)
(bad)
call
xor
add
pusha
js
cmp
stos
loope
jnp
adc
es
add
add
inc
or
or
or
repnz
(bad)
call
xor
add
test
jp
and
lds
pop
adc
es
std
(bad)
jmp
add
pop
or
or
or
add
add
add
aad
add
adc
add
fld
add
dec
add
add
add
add
add
add
add
add
adc
or
or
adc
xor
add
shl
mov
jb
adc
adc
inc
sldt
add
(bad)
inc
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
ja
add
xchg
add
add
cmp
add
or
mov
mov
add
and
daa
fadd
and
scas
xor
adc
cmp
(bad)
call
or
or
xchg
shl
add
add
sbb
add
add
xor
add
adc
adc
cmp
(bad)
call
xor
add
cmp
(bad)
(bad)
call
adc
cmp
(bad)
call
mov
add
and
daa
jg
add
imul
(bad)
(bad)
call
sub
sbb
add
adc
pop
or
or
cmp
(bad)
call
mov
add
sbb
or
sbb
mov
cmp
or
or
sbb
(bad)
call
xor
add
sbb
add
sub
add
sub
pop
adc
sbb
or
(bad)
(bad)
(bad)
call
lea
add
and
xchg
ret
call
sbb
or
adc
cmp
(bad)
(bad)
call
xor
add
adc
cmp
sub
push
adc
push
pop
add
jae
add
or
jp
add
and
add
sub
adc
cmp
mov
add
es
add
add
lea
add
sbb
or
inc
(bad)
(bad)
call
add
pop
add
add
(bad)
(bad)
inc
(bad)
call
add
inc
add
add
add
add
add
adc
sbb
or
popa
(bad)
(bad)
call
xor
add
adc
sbb
jmp
(bad)
(bad)
call
nop
add
push
sbb
fdivr
add
add
inc
or
adc
cmp
(bad)
(bad)
call
mov
add
es
sub
or
(bad)
(bad)
call
xor
add
arpl
sub
sub
or
add
gs
adc
adc
inc
push
add
add
add
add
add
add
add
xor
add
inc
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
sub
sub
sbb
repz
lock
in
pop
and
add
and
add
sub
add
push
fcomp
adc
pop
adc
sub
shl
add
add
jb
in
adc
rcl
push
adc
inc
or
add
mov
(bad)
inc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
dec
add
add
add
mov
add
add
add
push
adc
adc
inc
add
add
add
add
add
add
add
add
adc
sub
push
adc
adc
sub
push
and
cmp
cmp
adc
es
cmp
add
jle
add
add
sbb
(bad)
(bad)
call
xor
add
sub
adc
cmp
(bad)
call
lea
add
push
sbb
add
add
sub
pop
or
or
xor
(bad)
call
xor
add
mov
and
adc
es
sub
sbb
or
adc
(bad)
call
xor
add
lea
movs
add
push
std
frstor
adc
es
sub
sub
adc
sbb
or
lock
(bad)
call
pop
add
adc
sub
sbb
or
fdivr
(bad)
call
xor
add
adc
add
sub
inc
sbb
add
add
add
add
dec
add
add
add
add
add
add
xor
add
add
add
add
adc
pop
add
add
inc
or
add
outs
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
or
sub
rcl
add
add
cmp
test
popa
or
add
add
add
add
add
add
add
add
add
pusha
add
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
or
fwait
add
push
push
or
imul
call
add
add
xchg
jno
add
or
cmp
(bad)
call
or
add
push
sbb
(bad)
(bad)
call
(bad)
call
mov
int3
adc
(bad)
arpl
sbb
push
(bad)
(bad)
call
or
call
fwait
add
push
sbb
sub
add
nop
add
push
or
or
call
adc
add
sbb
xor
sub
add
inc
add
add
add
add
add
add
dec
(bad)
(bad)
jmp
add
or
call
cwde
add
push
es
sub
jae
add
push
or
or
call
adc
add
sbb
sub
add
or
or
call
mov
push
sub
sbb
aad
sub
pop
or
call
adc
add
rcl
sbb
call
xchg
add
push
es
sub
push
es
or
or
call
fwait
add
push
and
push
xor
and
or
adc
add
sub
add
xor
add
add
add
add
adc
sbb
add
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
xchg
add
push
es
xchg
add
push
sub
or
inc
add
add
(bad)
(bad)
(bad)
inc
sub
add
xor
test
add
or
add
sbb
pop
adc
push
rcr
adc
test
(bad)
inc
add
add
add
pop
add
add
add
into
add
add
add
add
add
and
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
inc
or
add
test
add
mov
add
add
add
rol
add
add
add
add
add
add
add
add
add
adc
jg
(bad)
call
mov
sbb
adc
outs
(bad)
(bad)
call
xchg
add
push
and
icebp
das
das
ds
adc
sbb
sbb
mov
add
add
add
add
add
add
add
add
add
or
add
das
(bad)
(bad)
call
cwde
add
push
es
pop
inc
add
add
xor
add
pop
adc
add
adc
(bad)
call
adc
add
and
cmp
jp
inc
and
add
sbb
jmp
adc
lock
(bad)
call
adc
add
pop
adc
push
cmp
add
pop
or
adc
xlat
(bad)
(bad)
call
adc
add
cmp
(bad)
(bad)
inc
add
test
add
and
add
add
mov
or
add
mov
(bad)
call
adc
add
sbb
add
pop
adc
mov
mov
sbb
add
sub
add
or
adc
mov
(bad)
call
mov
adc
sub
or
add
add
add
cmp
add
add
add
add
add
add
add
add
xchg
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
pop
sub
pop
sub
pop
sub
sbb
out
rcl
sub
adc
push
(bad)
(bad)
call
adc
add
sbb
adc
push
(bad)
(bad)
call
adc
add
and
aam
dec
and
or
outs
popa
adc
pop
sub
sbb
add
call
mov
adc
push
cmp
(bad)
(bad)
call
push
adc
sar
(bad)
call
adc
add
sbb
add
sbb
pop
or
add
mov
adc
add
es
sub
sahf
sbb
fwait
pop
or
add
mov
xchg
add
push
es
or
adc
xchg
std
(bad)
call
adc
add
add
adc
adc
mov
add
or
add
sbb
inc
or
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
adc
push
rcl
adc
test
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
test
add
mov
add
sbb
pop
sbb
adc
adc
mov
adc
add
sbb
xor
sub
add
sub
push
adc
push
or
add
add
add
add
add
add
add
add
or
add
inc
add
add
add
pop
add
add
xchg
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
sbb
neg
hlt
pop
sub
pop
sub
rcl
or
adc
es
(bad)
call
adc
add
sbb
xor
sub
add
inc
inc
add
add
push
add
add
(bad)
(bad)
call
adc
add
and
cli
mov
cmp
add
sbb
cmp
(bad)
call
or
add
(bad)
(bad)
call
adc
add
cmp
add
(bad)
(bad)
(bad)
call
call
test
sbb
es
or
jb
(bad)
call
or
neg
or
or
(bad)
(bad)
call
adc
add
and
or
adc
sbb
or
add
cmp
call
call
sbb
sbb
xor
(bad)
call
or
add
gs
(bad)
call
adc
add
sbb
xor
sub
add
pop
(bad)
(bad)
inc
inc
push
add
add
(bad)
(bad)
cmp
add
inc
add
add
(bad)
push
(bad)
call
(bad)
call
adc
sub
(bad)
call
pushf
add
push
and
mov
mov
pop
adc
add
and
add
add
inc
add
add
mov
adc
add
(bad)
call
mov
sbb
call
cmp
(bad)
call
adc
out
(bad)
call
xchg
add
push
and
test
pop
and
inc
mov
sbb
xchg
std
(bad)
call
cmp
(bad)
(bad)
call
or
add
mov
adc
add
sbb
add
add
add
xor
add
add
add
add
cmp
add
add
inc
or
add
add
add
sgdtd
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
xor
or
sub
rcl
add
add
or
or
add
add
(bad)
inc
add
add
add
add
add
add
add
jo
add
xchg
add
add
add
xlat
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
and
add
xor
add
pop
cmp
or
xchg
rcr
sbb
add
add
cmp
add
pop
or
jl
(bad)
call
adc
add
sbb
sbb
push
add
add
(bad)
cmp
(bad)
call
cdq
add
push
and
out
inc
and
inc
sbb
sbb
sbb
cmp
(bad)
call
(bad)
call
adc
add
and
ret
cmps
and
pushf
pop
popa
or
pop
cmp
add
add
or
or
add
push
or
push
(bad)
(bad)
call
adc
add
and
jbe
cdq
std
adc
or
sbb
sbb
cmp
add
add
popa
pop
dec
pop
inc
add
add
adc
add
pop
adc
out
(bad)
call
adc
add
es
or
mov
or
sar
(bad)
call
adc
add
adc
add
push
sbb
mov
adc
add
push
sbb
add
sub
add
or
mov
add
pop
or
mov
adc
add
sbb
cmp
(bad)
call
push
or
mov
(bad)
call
pushf
add
push
and
iret
int3
cmp
or
rcl
pop
adc
cmp
call
popf
add
push
sbb
cmp
(bad)
(bad)
call
cmp
adc
push
(bad)
(bad)
call
xchg
add
push
sbb
xor
sub
add
inc
or
add
jmp
(bad)
push
(bad)
(bad)
(bad)
cmp
(bad)
jmp
add
add
(bad)
jmp
(bad)
call
or
pop
adc
adc
(bad)
call
sahf
add
push
es
sub
sbb
add
(bad)
call
xchg
add
push
sbb
sbb
sbb
cmp
adc
jmp
call
or
xchg
std
(bad)
call
sub
pop
or
or
(bad)
call
adc
add
and
scas
call
cmp
(bad)
call
or
mov
(bad)
call
adc
add
and
add
adc
add
jnp
add
and
add
add
fld
add
sub
cmp
adc
add
sbb
pop
adc
(bad)
call
cdq
add
push
cmp
pop
or
popa
std
(bad)
call
adc
add
push
or
add
sub
adc
adc
mov
add
or
add
pop
or
push
rcr
or
add
add
add
add
add
add
add
add
add
arpl
add
lods
add
add
add
add
add
add
add
add
add
add
add
push
add
xchg
add
test
add
rol
add
add
add
add
add
add
add
or
das
add
add
or
mov
add
pop
cmp
add
add
cmp
add
add
push
or
mov
adc
add
sbb
rcl
sbb
sbb
(bad)
call
cdq
add
push
sbb
sbb
scas
add
add
or
(bad)
cmp
(bad)
call
xchg
add
push
and
imul
and
or
pop
inc
or
add
add
add
add
add
sti
add
add
add
add
add
push
add
jo
add
add
add
add
add
add
add
(bad)
(bad)
call
or
or
(bad)
call
xchg
add
push
sbb
pop
cmp
or
hlt
(bad)
(bad)
call
adc
add
pop
or
sbb
in
(bad)
call
adc
add
sbb
sbb
sbb
sub
pop
inc
add
add
pop
(bad)
(bad)
call
or
sar
call
adc
add
es
or
sbb
mov
(bad)
call
xchg
add
push
pop
or
pop
or
cmp
(bad)
inc
inc
or
add
push
add
add
(bad)
push
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
push
add
or
pop
or
outs
(bad)
(bad)
call
adc
add
sbb
sub
add
adc
(bad)
call
cmp
(bad)
call
adc
add
push
push
xor
sub
add
or
enter
pop
or
ss
(bad)
call
xchg
add
push
sbb
xor
sub
add
add
fiadd
add
and
jmp
sbb
pop
adc
or
(bad)
call
mov
sbb
add
push
es
or
idiv
(bad)
call
xchg
add
push
adc
pop
adc
in
(bad)
call
adc
add
sbb
sub
add
or
or
int
(bad)
call
adc
add
sbb
sbb
mov
cwde
add
push
and
inc
add
inc
mov
cmp
call
cmp
(bad)
(bad)
call
or
adc
xchg
std
(bad)
call
adc
add
and
or
sti
push
pop
or
add
sub
add
xor
ins
add
add
add
adc
or
push
adc
or
mov
adc
adc
lods
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
jne
add
xchg
add
add
add
sbb
add
or
add
mov
adc
add
es
or
push
adc
mov
push
and
sti
and
add
sub
add
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
rcl
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
sbb
neg
sub
sbb
icebp
sbb
out
rcl
sbb
adc
push
(bad)
(bad)
call
adc
add
sbb
dec
push
or
add
or
(bad)
call
adc
add
sbb
add
add
sub
or
add
icebp
(bad)
(bad)
call
adc
add
sbb
push
adc
loopne
(bad)
call
pushf
add
push
pop
pop
xor
sub
add
cmp
(bad)
(bad)
call
or
or
push
adc
mov
adc
add
es
inc
push
add
add
add
add
(bad)
(bad)
call
add
add
add
add
or
or
add
nop
(bad)
(bad)
call
call
sbb
and
and
dec
popa
adc
sbb
loopne
adc
jb
(bad)
call
adc
add
pop
sbb
add
sub
add
push
adc
pop
(bad)
(bad)
call
sahf
add
push
and
call
push
imul
sub
cmp
add
fs
(bad)
call
adc
cs
(bad)
call
adc
add
add
and
lods
add
add
inc
add
sbb
add
paddd
call
adc
add
sbb
imul
cmp
(bad)
call
adc
hlt
std
(bad)
call
adc
add
sbb
add
or
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
push
inc
add
add
(bad)
(bad)
jmp
(bad)
call
or
or
push
adc
lods
std
(bad)
call
adc
add
add
add
add
xor
add
add
or
add
cmp
add
add
inc
or
add
add
add
add
add
nop
add
add
add
in
add
add
add
mov
add
mov
add
add
add
add
or
sub
rcl
add
add
shl
ficomp
repz
pop
or
or
add
add
(bad)
inc
add
add
add
add
add
add
add
jae
add
call
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
pop
or
pop
sbb
mov
xchg
add
push
es
or
pop
or
jns
(bad)
call
adc
add
and
xchg
int3
jno
fist
cmp
(bad)
(bad)
inc
and
add
add
ret
add
add
into
add
push
sub
or
dec
(bad)
(bad)
call
adc
add
sbb
xor
sub
add
cmp
add
add
sbb
sub
cwde
add
push
sbb
sub
add
leave
(bad)
(bad)
call
add
or
adc
or
(bad)
call
movs
add
push
and
cmps
and
or
cmp
adc
jmp
(bad)
call
adc
add
es
sub
adc
cmp
(bad)
(bad)
call
adc
add
push
push
xor
sub
add
cmp
or
jg
add
sbb
mov
movs
add
push
push
sbb
add
add
popa
pop
push
pop
inc
add
add
mov
(bad)
call
or
inc
(bad)
(bad)
call
(bad)
call
mov
sbb
pop
or
jle
(bad)
call
adc
add
push
or
cmp
(bad)
(bad)
call
or
imul
add
add
sbb
add
add
cwde
add
push
es
or
cmp
std
(bad)
call
or
(bad)
call
movs
add
push
sbb
pop
push
or
xor
mov
or
pop
cmp
add
add
or
and
(bad)
call
adc
add
es
cmp
add
add
cmp
add
add
adc
push
(bad)
(bad)
call
adc
add
and
xor
repz
ins
pop
or
pop
or
sbb
jmp
add
sbb
add
sub
add
cmp
push
or
into
std
(bad)
call
adc
add
sbb
sbb
sbb
mov
fwait
add
push
es
or
jae
(bad)
cmp
fwait
add
push
sbb
add
sub
add
or
adc
(bad)
call
cdq
add
push
es
or
sbb
cmp
call
adc
add
cmp
std
(bad)
call
pop
or
jo
(bad)
call
xchg
add
push
sbb
push
inc
or
add
mov
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
(bad)
jl
(bad)
inc
(bad)
(bad)
call
or
sbb
cmp
std
(bad)
call
adc
add
sbb
add
sub
es
cwde
add
push
es
adc
sbb
(bad)
call
adc
add
es
cld
(bad)
jmp
add
adc
push
add
add
add
xor
inc
add
add
add
adc
or
or
add
push
rcl
add
add
sbb
add
sub
add
add
or
add
mov
(bad)
inc
add
add
add
add
add
jae
add
cwde
add
add
add
add
add
add
add
das
add
add
mov
inc
push
add
add
add
push
add
add
add
pop
add
add
add
add
add
or
or
add
sahf
rcr
push
or
adc
xchg
rcl
add
add
and
xchg
pop
and
(bad)
xor
add
cmp
add
sbb
dec
pop
or
or
or
add
imul
add
add
inc
or
and
jno
inc
jo
adc
sbb
scas
sbb
stos
sbb
test
sub
adc
aas
(bad)
(bad)
call
xchg
add
push
push
sbb
add
sub
add
sub
sbb
add
and
(bad)
call
adc
add
sbb
xor
sub
add
or
adc
or
(bad)
call
adc
add
sbb
add
add
and
add
and
add
sub
add
push
pop
or
add
jmp
movs
add
push
push
adc
sbb
xor
add
pop
sub
add
add
call
or
add
sar
call
mov
adc
or
add
pop
or
adc
mov
adc
add
sbb
add
sub
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
rcr
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
sbb
neg
sub
sbb
out
rcr
sbb
push
adc
sub
(bad)
call
adc
add
or
add
add
(bad)
(bad)
(bad)
jnp
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
call
(bad)
inc
(bad)
(bad)
inc
(bad)
call
or
add
jmp
(bad)
call
sahf
add
push
and
fsub
xchg
dec
pop
adc
add
add
add
xor
arpl
add
or
add
pop
or
inc
or
add
aas
add
add
add
add
add
add
add
aas
add
add
add
add
add
inc
add
add
adc
push
rcl
sbb
add
sub
add
add
or
add
xchg
(bad)
inc
add
add
add
cdq
add
add
add
add
add
add
add
add
add
add
add
jle
add
call
add
sbb
or
add
add
add
add
add
or
add
inc
add
add
add
pop
add
add
add
add
add
add
call
or
inc
add
add
add
add
add
add
add
add
add
sub
sbb
neg
sub
sbb
icebp
sbb
out
rcr
sbb
adc
push
(bad)
(bad)
call
adc
add
sbb
add
cmp
(bad)
(bad)
call
sub
adc
ds
(bad)
call
cdq
add
push
pop
sbb
add
sub
add
or
mov
add
sbb
add
add
cmp
add
pop
or
jbe
add
sbb
jae
add
pop
push
pop
inc
add
add
mov
or
adc
cli
(bad)
(bad)
call
mov
sbb
add
sub
add
(bad)
call
adc
(bad)
(bad)
call
adc
add
pop
adc
sbb
and
or
add
(bad)
(bad)
(bad)
call
fwait
add
push
and
fbstp
and
jecxz
pop
popa
adc
pop
or
adc
cmps
(bad)
(bad)
call
cwde
add
push
sbb
or
add
xchg
(bad)
(bad)
call
adc
add
push
sbb
add
sub
add
or
(bad)
inc
inc
push
add
add
add
xor
(bad)
(bad)
cmp
(bad)
(bad)
ds
(bad)
inc
dec
(bad)
call
(bad)
(bad)
call
adc
add
sbb
sub
add
add
or
add
cmp
adc
add
push
pop
xor
sub
add
add
daa
add
add
push
iret
add
push
pop
adc
push
(bad)
(bad)
call
movs
add
push
and
hlt
xor
inc
loopne
xor
add
cmp
cmp
(bad)
call
adc
lock
(bad)
call
adc
add
sbb
sub
add
sub
adc
adc
add
add
adc
or
inc
or
add
jnp
add
jno
add
add
add
xor
add
mov
add
add
add
push
add
add
add
add
adc
push
rcr
sbb
add
sub
add
add
sldt
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
lods
add
add
add
add
add
add
or
or
rcr
cli
daa
or
and
adc
sbb
pop
or
push
(bad)
(bad)
inc
add
push
add
and
add
add
rol
add
sub
or
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
fwait
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
push
sub
sbb
hlt
sbb
icebp
sbb
out
rcr
sbb
adc
adc
(bad)
call
adc
add
sbb
add
sub
add
cmp
or
add
idiv
(bad)
call
adc
add
and
adc
pop
pop
adc
pop
sub
add
popa
pop
push
pop
inc
add
add
jp
add
pop
or
add
enter
rcl
add
add
sbb
add
sub
add
je
(bad)
call
add
lods
(bad)
(bad)
call
xchg
add
push
adc
sub
pop
push
adc
cwde
(bad)
(bad)
call
movs
add
push
sbb
cmp
adc
xchg
(bad)
call
fwait
add
push
sbb
add
sub
add
or
adc
outs
(bad)
(bad)
call
adc
add
sbb
out
pop
or
add
pop
(bad)
(bad)
call
adc
add
sbb
sbb
pop
or
or
(bad)
call
(bad)
(bad)
call
cmps
add
push
and
mov
inc
and
in
cs
adc
sbb
out
(bad)
call
or
add
pop
(bad)
(bad)
call
adc
add
sbb
xor
sub
add
sub
push
(bad)
(bad)
call
adc
add
push
sbb
add
sub
add
or
scas
std
(bad)
inc
inc
push
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
(bad)
out
(bad)
(bad)
call
adc
retf
call
cmps
add
push
sbb
xor
sub
add
cmp
(bad)
(bad)
call
adc
scas
std
(bad)
call
xchg
add
push
adc
sub
xor
jbe
add
or
add
sbb
inc
or
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
cmp
add
mov
add
sbb
push
or
or
add
push
shl
adc
cmp
add
sub
add
add
add
add
pushf
add
add
add
add
add
nop
add
add
add
add
cmp
add
add
pop
inc
add
add
data16
add
adc
stos
rcl
adc
and
loop
push
pop
adc
sbb
sub
add
push
or
inc
(bad)
(bad)
call
sub
or
add
ja
(bad)
call
adc
add
es
cmp
add
pop
or
add
(bad)
(bad)
(bad)
call
adc
add
and
rcl
xchg
adc
adc
add
cmp
(bad)
(bad)
call
or
scas
sbb
sbb
add
cmp
(bad)
call
xchg
add
push
and
push
retf
adc
pop
sub
pop
adc
push
or
loopne
(bad)
call
or
add
sbb
(bad)
call
adc
add
sbb
xor
sub
add
inc
push
add
add
add
add
(bad)
inc
add
add
(bad)
(bad)
call
or
or
add
loop
(bad)
call
adc
add
sbb
xor
sub
add
sbb
or
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
rcr
sbb
pop
inc
add
add
add
add
add
add
add
add
add
or
cli
sbb
not
sub
push
sub
sbb
add
push
es
push
adc
(bad)
(bad)
(bad)
call
cdq
add
push
push
sbb
add
sub
add
or
cmp
(bad)
call
cmp
(bad)
call
adc
cmp
(bad)
call
adc
add
add
and
add
add
lock
add
add
add
push
adc
sbb
(bad)
call
adc
add
sbb
add
add
(bad)
std
(bad)
call
(bad)
(bad)
call
adc
add
and
mov
repz
popa
adc
sbb
cld
(bad)
(bad)
call
or
cmc
(bad)
(bad)
call
adc
fscale
(bad)
call
adc
add
adc
sub
add
xor
add
add
add
sub
or
adc
cdq
add
push
and
cmp
inc
and
or
or
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
sbb
sub
add
sub
add
addr16
or
adc
add
pop
push
or
mov
adc
add
sbb
sbb
or
pop
pop
adc
jae
(bad)
call
cmps
add
push
sbb
xor
sub
add
or
(bad)
call
adc
add
adc
pop
or
dec
(bad)
(bad)
call
adc
add
sbb
fst
sub
push
or
aaa
(bad)
(bad)
call
cdq
add
push
push
or
pop
inc
or
add
add
add
add
add
sti
add
add
add
add
add
dec
(bad)
(bad)
jmp
add
inc
add
add
(bad)
dec
add
add
add
add
popf
add
push
es
pop
or
out
(bad)
call
adc
add
sbb
pop
cmp
call
cmp
(bad)
call
or
retf
call
mov
sbb
bound
and
ror
pop
or
sbb
call
popf
add
push
sbb
movs
(bad)
(bad)
call
adc
add
es
or
sbb
(bad)
call
adc
add
sbb
add
popa
pop
pop
inc
add
add
call
or
or
jne
(bad)
call
adc
add
push
sbb
add
sub
add
inc
or
add
mov
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
jmp
(bad)
dec
or
cmp
(bad)
call
mov
sar
or
scas
test
es
(bad)
call
adc
add
sbb
pop
or
or
sbb
(bad)
call
movs
add
push
pop
sbb
add
add
sub
sbb
pop
adc
out
std
(bad)
call
adc
add
cmp
pop
bound
dec
sub
add
push
sub
sbb
(bad)
call
xchg
add
push
push
sbb
add
sub
add
cmp
(bad)
call
cmp
movs
add
push
add
sub
xor
add
add
add
add
sbb
sub
rcl
add
add
sub
add
inc
adc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
jnp
add
lahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
sbb
lahf
rcl
add
add
or
push
cmp
add
add
or
(bad)
rcl
pop
(bad)
cmp
(bad)
call
call
add
sub
add
cmp
add
add
or
arpl
(bad)
call
adc
add
sbb
sbb
pop
(bad)
cmp
(bad)
call
cmps
add
push
push
sbb
add
add
cmp
(bad)
(bad)
call
xchg
add
push
push
sbb
add
add
or
rol
add
sbb
pop
or
cmp
add
add
sub
pop
or
ud0
call
xchg
add
push
sbb
es
sub
sub
add
push
es
cmp
(bad)
(bad)
call
adc
add
sbb
xor
sub
add
pop
(bad)
cmp
(bad)
(bad)
call
cdq
add
push
and
test
xlat
popa
das
popa
or
push
inc
or
add
pop
(bad)
(bad)
jmp
add
add
add
add
add
(bad)
(bad)
call
or
adc
xchg
(bad)
(bad)
call
adc
add
sbb
sbb
in
pop
sub
push
sub
pop
or
(bad)
call
xchg
add
push
sbb
pop
or
pop
adc
cmp
(bad)
call
adc
add
push
sbb
add
add
cmp
(bad)
call
adc
add
push
or
add
jne
add
and
add
sub
add
push
sub
cs
(bad)
call
adc
add
pop
or
pop
inc
or
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
jmp
(bad)
(bad)
jmp
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
(bad)
(bad)
dec
(bad)
(bad)
call
adc
in
(bad)
call
adc
add
and
add
and
jno
or
or
pop
(bad)
cmp
std
(bad)
call
xchg
add
push
pop
sbb
add
sub
add
(bad)
cmp
add
add
std
sub
or
pop
(bad)
cmp
mov
mov
pop
ja
mov
pop
push
pop
or
rcr
sbb
jnp
(bad)
call
movs
add
push
and
(bad)
push
and
jne
pop
or
cmp
(bad)
(bad)
inc
popa
pop
fs
inc
add
add
sub
(bad)
call
or
pop
adc
dec
std
(bad)
call
adc
add
and
jle
jo
dec
shl
adc
push
add
add
add
adc
adc
cmps
add
add
add
adc
or
inc
or
add
pop
add
add
add
push
add
add
add
movs
add
add
add
mov
add
cmp
add
pop
add
add
or
shl
adc
adc
jb
(bad)
inc
add
add
add
add
add
add
add
add
add
add
lea
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
test
push
cmp
(bad)
call
adc
add
cwde
rcr
adc
sbb
sub
add
sbb
and
add
pop
or
add
jae
(bad)
call
xchg
add
push
cmp
(bad)
(bad)
call
adc
pusha
(bad)
(bad)
call
adc
add
es
inc
push
add
add
add
add
add
add
add
add
add
das
add
add
add
sbb
clc
(bad)
(bad)
call
sub
sbb
(bad)
(bad)
call
mov
sbb
out
adc
sbb
(bad)
call
adc
add
sbb
aad
sub
pop
or
into
pop
or
add
add
(bad)
call
adc
add
push
sbb
add
sub
add
or
mov
push
adc
in
(bad)
call
mov
pop
add
sub
add
or
adc
int
(bad)
call
adc
add
push
sbb
add
sub
add
add
jmp
add
sub
add
push
pop
adc
add
movs
(bad)
(bad)
call
mov
sbb
add
sub
add
push
(bad)
(bad)
call
or
add
mov
(bad)
call
adc
add
sbb
pop
movlps
js
(bad)
call
mov
sbb
add
sub
add
pop
inc
add
add
fsin
(bad)
call
or
adc
push
(bad)
(bad)
call
xchg
add
push
es
(bad)
call
add
cmp
(bad)
call
xchg
add
push
sub
or
add
add
add
add
add
add
add
add
add
add
add
add
add
lahf
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
sbb
not
sub
sbb
icebp
pop
sub
rcr
sub
adc
int3
std
(bad)
call
adc
add
and
out
test
add
push
cmp
(bad)
(bad)
call
or
adc
test
pushf
add
push
sbb
xor
sub
add
sub
add
xor
fwait
add
add
add
adc
or
adc
or
xchg
add
push
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
es
add
sbb
neg
sub
sbb
add
pushf
rcr
sbb
add
sub
add
sahf
add
add
cmp
add
add
or
push
adc
js
(bad)
call
adc
add
es
or
or
add
data16
(bad)
call
adc
add
sbb
xor
sub
add
inc
push
add
add
(bad)
(bad)
dec
add
add
add
sbb
add
jge
(bad)
call
adc
xor
(bad)
call
adc
add
sbb
jns
(bad)
call
cmp
(bad)
call
call
adc
adc
(bad)
call
xchg
add
push
sbb
add
add
sub
add
push
pop
or
(bad)
(bad)
call
adc
add
sbb
sub
add
inc
or
add
ss
(bad)
inc
add
add
(bad)
push
(bad)
(bad)
(bad)
jle
add
pop
add
add
add
add
push
add
add
add
add
(bad)
(bad)
call
or
or
adc
lods
(bad)
(bad)
call
xchg
add
push
and
mov
inc
out
aaa
pop
adc
sub
(bad)
(bad)
call
or
or
adc
test
(bad)
call
xchg
add
push
es
adc
ja
(bad)
call
adc
add
pop
sbb
add
sub
add
pop
inc
add
add
mov
(bad)
(bad)
call
adc
dec
(bad)
(bad)
call
adc
add
and
mov
and
adc
add
and
add
add
mov
add
sub
add
push
sub
add
add
add
add
add
add
add
add
or
add
cmp
add
add
(bad)
(bad)
call
mov
sub
or
inc
push
add
add
add
pop
add
add
add
add
add
add
add
add
or
cli
push
sub
sbb
hlt
push
sub
push
sub
sbb
jmp
mov
sbb
adc
lods
std
(bad)
call
xchg
add
push
and
cmc
push
and
dec
cdq
and
add
sub
adc
xchg
std
(bad)
call
adc
add
sbb
or
add
cmp
call
adc
add
sbb
add
add
add
xor
add
add
add
add
cmp
or
adc
adc
add
and
mov
cdq
xchg
add
or
add
add
add
add
add
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
popf
add
add
add
add
add
add
add
add
add
inc
add
add
or
pop
or
sub
add
push
add
sub
add
inc
or
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
or
dec
(bad)
(bad)
call
movs
add
push
and
loopne
and
dec
stos
inc
dec
pop
or
push
inc
or
add
or
add
add
add
add
add
dec
add
add
add
ins
add
add
or
ud0
call
adc
add
pop
sbb
add
sub
add
sub
sbb
cmp
(bad)
(bad)
call
adc
add
sbb
xor
sub
add
or
or
loopne
(bad)
call
cwde
add
push
sbb
xor
sub
add
in
sub
pop
sub
pop
adc
mov
adc
add
sbb
pop
or
scas
(bad)
(bad)
call
cdq
add
push
pop
or
sbb
sbb
or
or
(bad)
call
xchg
add
push
push
pop
xor
sub
add
or
pop
adc
cmp
add
add
or
sbb
jb
(bad)
call
lahf
add
push
shl
pop
adc
pop
(bad)
(bad)
call
xchg
add
push
es
(bad)
(bad)
inc
and
add
and
add
add
jmp
add
sub
(bad)
cmp
(bad)
(bad)
call
adc
add
sbb
xor
sub
add
or
cmp
jnp
(bad)
call
(bad)
call
adc
add
sbb
xor
sub
add
cmp
(bad)
(bad)
call
cmp
or
idiv
(bad)
call
adc
add
sbb
sbb
pop
or
pop
or
loope
(bad)
call
mov
pop
add
sub
add
popa
pop
pop
inc
add
add
sbb
or
mov
xchg
add
push
and
int3
jb
and
out
xchg
pop
or
sbb
mov
mov
sbb
pop
or
sbb
xchg
std
(bad)
call
xchg
add
push
sbb
add
sub
add
or
adc
cmp
(bad)
call
mov
or
sbb
imul
call
xchg
add
push
es
std
(bad)
call
sbb
push
std
(bad)
call
mov
or
add
sub
xor
sbb
add
or
add
sbb
adc
push
rcl
xor
sub
add
add
adc
add
xchg
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
sub
add
inc
add
add
add
jns
add
call
add
add
add
add
add
add
add
add
or
movlps
mov
push
push
push
xor
sub
add
inc
add
add
pop
add
add
add
jp
(bad)
call
xchg
add
push
pop
sbb
add
add
sub
pop
or
add
pusha
(bad)
(bad)
call
lahf
add
push
and
or
pop
pop
adc
or
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
repnz
add
add
add
adc
add
adc
(bad)
call
adc
add
sbb
add
push
inc
push
add
add
add
add
add
jg
(bad)
jmp
add
add
adc
jecxz
(bad)
call
cwde
add
push
sbb
xor
sub
add
or
adc
retf
(bad)
(bad)
call
adc
add
pop
adc
cmp
(bad)
inc
add
retf
add
rol
add
sub
add
push
pop
adc
add
mov
sahf
add
push
pop
sbb
add
sub
add
cmp
(bad)
(bad)
call
adc
xchg
(bad)
call
fwait
add
push
sbb
add
push
cmp
(bad)
(bad)
call
adc
add
outs
(bad)
(bad)
call
adc
add
sbb
or
(bad)
(bad)
call
push
adc
push
(bad)
(bad)
call
sahf
add
push
push
sbb
add
sub
add
cmp
or
add
cmp
(bad)
call
adc
add
adc
or
fdivr
(bad)
call
sub
pop
adc
add
sbb
call
add
sub
add
adc
pop
(bad)
(bad)
call
mov
or
arpl
(bad)
jp
adc
sbb
pop
or
add
jmp
xchg
add
push
and
fucompp
add
mov
pop
adc
add
cmp
and
(bad)
call
adc
ret
std
(bad)
call
xchg
add
push
sub
or
add
push
add
add
add
add
add
add
add
inc
add
add
add
add
add
pop
add
add
mov
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
sbb
neg
sub
sbb
icebp
sbb
out
shl
sbb
sub
cmp
(bad)
call
movs
add
push
es
cmp
adc
aaa
std
(bad)
call
adc
add
push
pop
xor
sub
add
or
or
adc
sbb
mov
sbb
sbb
add
or
adc
add
sbb
xor
sub
add
sub
xor
add
add
cmp
add
pop
adc
push
shl
sbb
add
sub
add
inc
adc
add
xchg
(bad)
(bad)
inc
add
add
add
inc
add
add
add
add
test
add
mov
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
xchg
add
add
add
add
add
add
add
cmp
add
add
or
mov
push
and
hlt
jmp
dec
jne
or
cmp
add
add
add
pop
add
and
in
add
push
sub
or
(bad)
call
sahf
add
push
es
inc
shl
sbb
sbb
push
(bad)
(bad)
call
adc
add
pop
or
pop
or
pop
adc
inc
(bad)
(bad)
call
mov
or
pop
adc
xor
(bad)
call
adc
add
sbb
xor
sub
add
or
or
sbb
(bad)
call
adc
add
and
xchg
mov
cmp
or
pop
or
sbb
(bad)
(bad)
(bad)
call
xchg
add
push
sbb
pop
or
pop
(bad)
cmp
(bad)
(bad)
call
adc
add
sbb
xor
sub
add
or
mov
sub
or
int
(bad)
call
adc
add
sbb
cmp
add
add
or
adc
mov
(bad)
call
adc
add
sbb
xor
sub
add
repz
add
or
js
(bad)
call
adc
xchg
(bad)
(bad)
call
adc
add
sbb
shl
pop
or
pop
or
jnp
(bad)
call
cwde
add
push
and
mov
push
aaa
popa
or
sbb
pop
or
pop
adc
pop
(bad)
(bad)
call
mov
dec
and
movs
jg
pop
or
push
cmp
(bad)
(bad)
call
or
cmp
(bad)
call
adc
add
pop
or
cmp
add
sbb
call
sbb
(bad)
call
adc
add
sbb
push
inc
or
add
dec
(bad)
(bad)
dec
add
test
(bad)
call
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
or
jmp
(bad)
call
movs
add
push
push
sbb
add
sub
add
sub
add
popa
pop
and
add
add
and
(bad)
call
or
or
ret
call
mov
lds
push
and
fcom
inc
or
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
jge
(bad)
call
(bad)
(bad)
(bad)
in
std
(bad)
(bad)
jge
(bad)
call
(bad)
(bad)
(bad)
jmp
call
(bad)
call
or
cmp
(bad)
call
sahf
add
push
sbb
sbb
cmp
(bad)
call
cmp
(bad)
(bad)
call
push
or
push
std
(bad)
call
adc
add
sbb
add
sub
add
xor
add
add
add
add
adc
mov
or
adc
adc
add
and
int
addr16
add
pop
inc
push
add
add
(bad)
(bad)
inc
add
add
add
add
add
outs
add
add
add
push
inc
or
add
add
add
pop
add
add
add
adc
add
dec
add
add
add
add
add
add
add
add
movs
add
push
sbb
sub
add
sbb
pop
sbb
sub
and
add
add
push
add
sub
add
push
sub
or
xchg
rcl
add
add
sbb
pop
or
test
adc
add
and
pop
adc
dec
icebp
mov
pop
or
sbb
pop
or
push
(bad)
call
popf
add
push
sbb
cmp
(bad)
inc
add
sub
add
add
mov
or
inc
(bad)
(bad)
call
xchg
add
push
sbb
add
sub
xor
add
add
sbb
push
inc
push
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
popa
pop
outs
pop
inc
add
add
ja
add
bound
add
push
or
or
push
rcl
add
add
push
add
sub
add
inc
add
add
mov
add
add
add
bound
add
sbb
sub
sub
pop
sub
add
push
sub
or
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
push
sub
add
fild
add
sub
or
movs
rcr
or
sbb
xchg
or
xchg
shl
sbb
add
sub
add
cmp
or
jl
(bad)
call
adc
add
add
adc
adc
add
add
adc
fs
inc
or
add
mov
add
mov
add
mov
add
popa
add
add
add
add
add
add
add
xor
add
pop
or
push
rcl
add
add
add
add
inc
pop
add
add
add
and
add
add
add
add
add
cmps
add
push
sbb
sub
pop
inc
add
add
adc
add
sbb
sub
rcl
add
add
(bad)
(bad)
call
sub
sbb
sbb
sub
push
and
mov
inc
and
or
sbb
sbb
sub
add
or
cmp
(bad)
inc
add
adc
add
and
add
add
rol
push
sub
or
ins
(bad)
(bad)
call
adc
add
sbb
xor
sub
add
or
cmp
(bad)
call
mov
cmp
(bad)
(bad)
jmp
add
adc
or
add
sub
add
xor
add
add
adc
ds
inc
add
add
add
add
and
add
shl
pop
or
fcom
or
or
mov
add
pop
or
pop
inc
add
add
sar
inc
add
add
shl
add
add
and
or
and
cmp
sub
scas
add
add
test
add
sub
add
adc
or
add
sub
sbb
push
add
add
cmp
add
pop
daa
adc
sub
shl
add
add
adc
inc
xor
add
and
(bad)
inc
add
add
add
add
add
add
add
mov
add
stos
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jp
add
xchg
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
test
add
xor
add
add
add
add
jnp
add
xchg
add
add
add
add
add
imul
add
mov
add
add
pop
push
add
cmp
add
add
adc
pop
sbb
push
cmp
(bad)
call
xor
add
sbb
add
sub
add
movlps
pop
and
push
cmp
(bad)
(bad)
call
mov
adc
es
movlps
pop
sub
push
cmp
(bad)
(bad)
call
xor
add
pop
pop
cmp
adc
cmp
(bad)
(bad)
call
xor
add
pop
xor
sub
add
cmp
add
push
cmp
add
cmp
add
pop
adc
cmp
xor
add
adc
es
add
add
scas
add
add
sbb
add
or
adc
push
cmp
xor
add
adc
es
adc
and
add
pop
and
(bad)
(bad)
call
xor
add
adc
es
add
add
add
or
lods
add
add
ret
add
add
movs
add
push
pop
sub
(bad)
(bad)
call
stos
add
push
es
sub
push
cmp
(bad)
call
stos
add
push
es
push
cmp
add
add
adc
enter
pop
push
cmp
add
add
(bad)
(bad)
call
test
pop
sub
push
cmp
(bad)
(bad)
call
xor
add
adc
cmp
adc
pop
movlps
push
adc
cmp
std
(bad)
call
test
add
sbb
push
es
sub
push
cmp
std
(bad)
call
mov
add
es
push
sub
adc
cmp
std
(bad)
call
xor
add
sbb
add
add
push
add
sub
push
aas
cmps
std
(bad)
call
sub
push
cmp
xor
add
adc
inc
push
add
add
add
add
(bad)
call
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
(bad)
call
(bad)
(bad)
jmp
add
in
add
push
adc
cmp
add
add
or
cmc
pop
push
adc
cmp
call
xor
add
shl
push
and
jbe
adc
sbb
push
sbb
push
cmp
std
(bad)
call
cmps
add
push
adc
push
adc
pop
sub
push
cmp
std
(bad)
call
mov
and
add
add
aad
add
sub
push
adc
cmp
cld
(bad)
call
mov
or
add
jecxz
add
sub
adc
add
or
cmp
cld
(bad)
call
mov
add
or
in
add
pop
pop
adc
cmp
mov
add
sbb
or
push
pop
xor
push
cmp
cmps
add
push
sbb
add
sub
add
adc
cmp
test
add
sbb
push
adc
pop
pop
adc
pop
xor
push
cmp
(bad)
call
scas
add
push
and
add
pop
and
rcr
popa
adc
es
adc
cld
(bad)
(bad)
call
or
push
cmp
(bad)
call
xor
add
adc
es
movlps
pop
sub
push
cmp
lods
add
push
sbb
adc
pop
movlps
pop
sub
push
cmp
(bad)
call
mov
add
push
adc
es
push
sbb
push
cmp
cld
(bad)
call
mov
add
push
adc
es
sub
push
cmp
sti
(bad)
call
xor
add
int3
mov
and
(bad)
and
push
es
adc
sub
add
and
add
add
cwde
add
add
mov
pop
adc
adc
sub
push
cmp
xor
add
pop
add
sub
add
sbb
add
pop
adc
pop
adc
cmp
lods
add
push
es
sub
push
cmp
mov
add
and
or
and
cmp
pop
adc
adc
add
add
add
push
push
add
and
add
add
popa
rol
pop
sbb
adc
and
push
cmp
(bad)
call
scas
add
push
and
aam
and
test
pop
adc
sbb
adc
and
push
cmp
sti
(bad)
call
xor
add
sbb
add
sub
add
mov
add
pop
or
adc
pop
or
push
cmp
sti
(bad)
call
mov
adc
es
sub
push
cmp
cli
(bad)
call
xor
add
pop
or
(bad)
std
(bad)
call
das
adc
cmp
cli
(bad)
call
xor
add
pop
xor
sub
add
adc
jno
(bad)
call
sbb
push
cmp
cli
(bad)
call
xor
add
sbb
add
sub
add
adc
pop
sub
push
cmp
xor
add
push
xor
sub
add
sub
push
cmp
xor
add
adc
sub
sbb
add
jl
add
adc
pop
xor
push
cmp
(bad)
call
mov
adc
adc
inc
sbb
add
mov
add
sar
(bad)
call
cli
(bad)
(bad)
jge
(bad)
dec
(bad)
dec
(bad)
inc
cld
(bad)
dec
(bad)
push
(bad)
inc
(bad)
(bad)
fld
add
ret
add
add
add
add
(bad)
cld
(bad)
call
(bad)
(bad)
inc
sti
(bad)
(bad)
jl
(bad)
jmp
std
(bad)
inc
add
add
cld
(bad)
push
(bad)
(bad)
call
test
add
es
adc
or
push
cmp
stc
(bad)
call
cmps
add
push
sbb
push
es
or
sbb
or
push
pop
movlps
pop
sub
push
cmp
stc
(bad)
call
mov
add
es
or
adc
cmp
xor
add
push
xor
sub
add
adc
cmp
xor
add
sbb
add
sub
add
adc
pop
movlps
pop
sbb
stc
(bad)
call
mov
add
sbb
push
cld
(bad)
call
test
add
es
adc
push
cmp
(bad)
call
xor
add
sbb
add
sub
add
adc
pop
movlps
pop
or
stc
(bad)
call
xor
add
adc
adc
push
push
pop
sub
sub
pop
movlps
cmp
add
add
and
add
add
mov
add
push
adc
pop
sbb
push
cmp
clc
(bad)
call
xor
add
adc
add
adc
pop
or
push
sub
shl
add
add
adc
inc
adc
add
stos
(bad)
(bad)
inc
add
add
add
push
add
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
adc
mov
jmp
leave
add
add
mov
add
and
add
add
or
adc
or
push
sub
add
adc
es
or
mov
add
sbb
push
cmp
(bad)
call
test
add
sbb
sub
add
cmp
add
sbb
push
add
sbb
add
add
add
add
adc
pop
movlps
cmp
(bad)
call
xor
add
sbb
inc
add
add
cmp
adc
cmp
(bad)
(bad)
call
xor
add
adc
sbb
and
xchg
shr
adc
sbb
nop
push
cmp
(bad)
(bad)
call
xor
add
adc
sbb
or
add
sbb
add
add
sbb
push
cmp
(bad)
(bad)
call
lods
add
push
sbb
push
es
or
push
cmp
(bad)
(bad)
call
lods
add
push
and
cmp
and
pop
xor
sbb
adc
adc
adc
push
adc
and
add
add
mov
adc
cmp
add
add
pop
or
push
cmp
scas
add
push
push
adc
adc
inc
or
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
(bad)
(bad)
push
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
nop
adc
or
push
cmp
(bad)
call
mov
add
sbb
add
add
cmp
adc
sbb
adc
(bad)
(bad)
call
stos
add
push
adc
inc
or
add
outs
(bad)
(bad)
push
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
(bad)
(bad)
call
adc
pop
or
std
(bad)
call
xor
add
adc
es
or
push
cmp
std
(bad)
call
xor
add
sbb
lahf
ffree
add
add
adc
or
push
cmp
xor
add
adc
es
cmps
add
add
adc
adc
or
add
outs
add
add
add
or
add
push
add
add
add
dec
add
add
add
add
add
adc
sbb
adc
lds
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
adc
pushf
pop
or
clc
pop
or
hlt
push
sub
pop
or
in
sbb
jmp
jecxz
or
sbb
adc
ja
(bad)
call
or
cmc
sbb
adc
adc
push
sub
adc
outs
mov
sbb
adc
sub
shl
add
add
pop
xor
sub
add
push
inc
sub
add
ds
(bad)
inc
add
add
add
inc
add
add
add
jo
add
xchg
add
add
add
add
add
add
add
jae
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
call
add
add
add
add
add
add
jp
add
mov
add
add
add
add
add
je
add
mov
add
add
add
add
add
add
add
add
add
add
add
pop
adc
add
cmp
add
pop
adc
cmp
(bad)
(bad)
call
mov
add
sbb
xor
sub
add
adc
pop
adc
push
cmp
xor
add
repnz
and
mov
pop
adc
es
push
cmp
add
add
daa
adc
cmp
(bad)
(bad)
call
xor
add
pop
sbb
push
cmp
(bad)
(bad)
call
xor
add
push
xor
sub
add
adc
add
adc
adc
push
cmp
(bad)
(bad)
call
xor
add
sbb
add
sub
add
adc
cmp
add
add
push
xor
sub
add
cmp
add
add
adc
add
sbb
push
cmp
xor
add
sbb
movs
add
add
cmp
pop
and
js
add
sub
add
push
adc
and
mov
mov
add
and
add
add
cmp
add
sub
add
or
push
cmp
(bad)
call
xor
add
cmp
add
add
pop
adc
arpl
add
and
add
add
movs
add
push
adc
lock
add
fld
add
sub
push
adc
push
(bad)
(bad)
call
xor
add
lea
add
pop
or
iret
add
add
adc
std
(bad)
call
xor
add
pop
push
adc
add
adc
sbb
adc
cmp
std
(bad)
call
mov
add
push
sbb
add
add
or
or
adc
adc
outs
jmp
sbb
push
cmp
xor
add
dec
scas
inc
sub
mov
dec
pop
popa
adc
es
or
test
add
sbb
std
(bad)
call
mov
add
adc
aas
aam
add
pop
or
adc
cmp
(bad)
call
xor
add
sbb
adc
cmp
(bad)
call
mov
add
and
sub
push
cld
aas
pop
adc
es
adc
sbb
push
cmp
std
(bad)
call
xor
add
sbb
add
sub
add
or
adc
adc
cmp
add
push
and
icebp
call
pop
adc
es
sbb
push
cmp
cld
(bad)
call
xor
add
scas
cmp
pusha
and
sub
push
pop
adc
sbb
adc
cmp
cld
(bad)
call
mov
add
sbb
adc
cmp
cld
(bad)
call
xor
add
adc
adc
adc
cmp
adc
sbb
adc
cmp
xor
add
pop
sbb
push
cmp
test
adc
sbb
adc
cmp
(bad)
call
mov
gs
pop
and
mov
pop
adc
adc
add
(bad)
(bad)
dec
add
add
add
add
add
add
(bad)
jmp
add
add
std
(bad)
call
(bad)
jmp
(bad)
(bad)
push
add
(bad)
(bad)
fld
add
dec
std
(bad)
push
(bad)
(bad)
jmp
std
(bad)
jmp
add
mov
(bad)
call
(bad)
(bad)
dec
jmp
(bad)
(bad)
call
push
cmp
cld
(bad)
call
xor
add
cmp
add
add
adc
cmp
sti
(bad)
call
mov
add
push
push
add
sub
add
add
pop
add
add
push
add
add
test
add
or
pop
or
adc
call
adc
cmc
pop
adc
push
cmp
xor
add
push
test
and
js
jo
adc
adc
sbb
push
cmp
add
add
adc
inc
push
add
add
add
add
add
add
cld
(bad)
jmp
(bad)
(bad)
push
add
add
sti
(bad)
(bad)
stc
sti
(bad)
(bad)
out
add
add
add
mov
cld
(bad)
call
and
push
cmp
sti
(bad)
call
cmps
add
push
and
and
mov
xor
sbb
xchg
add
add
adc
sbb
adc
cmp
sti
(bad)
call
mov
add
sbb
push
cmp
pop
and
sti
add
add
test
push
je
add
add
add
push
adc
cmp
cli
(bad)
call
cmps
add
push
es
adc
cmp
cli
(bad)
call
mov
add
pop
adc
es
or
push
cmp
cli
(bad)
call
xor
add
adc
es
sbb
push
cmp
xor
add
sbb
add
sub
add
xor
(bad)
call
push
cmp
std
(bad)
call
or
adc
sbb
push
cmp
xor
add
sbb
push
cmp
(bad)
call
mov
sbb
add
sub
add
sbb
push
cmp
(bad)
call
xor
add
pop
or
jno
(bad)
call
and
push
cmp
(bad)
call
cmps
add
push
sbb
push
es
cmp
(bad)
call
adc
cmp
cli
(bad)
call
lods
add
push
and
add
or
sub
push
es
cmp
(bad)
(bad)
call
adc
xor
(bad)
call
or
cli
(bad)
call
xor
add
adc
add
sub
add
add
add
add
pop
pop
add
add
add
add
add
add
xor
add
add
add
add
adc
or
adc
or
xor
add
adc
adc
lods
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
inc
push
add
add
add
add
add
jge
add
test
add
cmps
add
add
or
adc
xchg
shr
sub
or
add
add
add
pop
add
add
add
add
add
add
add
add
add
fild
add
fild
add
int3
add
add
add
add
test
sub
pop
inc
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
pop
add
add
or
cli
sbb
neg
or
repz
lock
in
sbb
jmp
add
sub
or
(bad)
(bad)
call
xor
add
jmp
jnp
push
jbe
adc
sbb
call
or
add
in
(bad)
call
mov
add
and
hlt
pop
mov
es
popa
pop
outs
pop
inc
add
add
add
add
sub
add
xor
add
sbb
inc
pop
sub
pop
or
add
stos
(bad)
(bad)
call
xor
add
sbb
add
sub
add
or
or
add
xchg
(bad)
(bad)
call
xor
add
adc
sub
sub
add
push
sub
adc
jns
(bad)
call
xor
add
adc
or
add
add
add
add
add
add
push
add
add
add
add
(bad)
(bad)
(bad)
fild
add
sbb
add
ss
(bad)
call
xor
add
mov
add
(bad)
(bad)
pop
adc
sbb
test
(bad)
call
or
jge
(bad)
call
cmp
(bad)
call
adc
or
(bad)
call
mov
add
sbb
add
pop
or
pop
(bad)
(bad)
call
adc
lock
(bad)
call
xor
add
sbb
sbb
cmp
(bad)
call
sub
pop
or
push
adc
sar
(bad)
call
xor
add
sbb
add
sub
add
pop
adc
mov
xor
add
adc
pop
or
adc
(bad)
call
adc
mov
xor
add
ss
bound
jno
fisubr
add
or
add
and
add
add
retf
add
push
sbb
add
js
(bad)
call
xor
add
pop
xor
sub
add
cmp
(bad)
(bad)
inc
and
add
add
cmp
retf
add
push
sbb
add
dec
std
(bad)
call
mov
dec
xor
xor
add
add
add
adc
adc
mov
add
or
add
sub
or
add
add
add
add
add
add
add
add
add
add
add
lahf
add
add
add
add
add
add
add
add
add
add
stos
add
push
es
or
mov
or
or
xor
add
or
or
add
add
(bad)
inc
add
add
add
add
add
push
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
test
add
mov
add
add
or
mov
xor
add
or
cmp
(bad)
inc
popa
pop
push
add
jbe
add
pop
or
pop
push
or
mov
mov
add
and
adc
xchg
sbb
shr
sbb
(bad)
call
xor
add
or
sbb
ins
add
add
or
push
(bad)
(bad)
call
xor
add
sbb
add
sub
add
cmp
add
sbb
dec
add
add
inc
add
add
or
xor
(bad)
call
mov
add
and
std
test
and
push
dec
popa
or
pop
or
mov
or
or
mov
sub
sbb
pop
or
add
(bad)
call
xor
add
push
push
dec
inc
and
dec
std
push
pop
or
sbb
pop
or
or
out
(bad)
call
mov
add
push
pop
xor
sub
add
cmp
add
add
or
int3
(bad)
(bad)
call
cmps
add
push
push
or
pop
or
or
(bad)
call
xor
add
cmps
jg
add
sbb
test
or
sbb
scas
add
add
or
fwait
(bad)
(bad)
call
xor
add
or
push
cmp
or
xchg
(bad)
call
mov
add
and
ja
and
pop
jl
or
cmp
(bad)
inc
inc
or
add
mov
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
call
(bad)
cmp
(bad)
call
mov
sbb
add
sub
add
(bad)
(bad)
inc
and
add
and
add
sub
add
push
sub
pop
or
sar
jmp
aas
cmp
or
push
(bad)
(bad)
call
xor
add
and
or
pop
or
sbb
(bad)
call
or
in
(bad)
call
xor
add
adc
push
and
xor
pop
or
add
sub
add
xor
add
add
add
add
cmp
inc
or
add
add
add
add
add
outs
add
add
add
add
add
outs
add
add
add
inc
add
add
add
push
add
add
add
add
stos
add
push
es
or
xor
add
or
or
add
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
cmp
(bad)
call
sub
or
sahf
shl
add
add
sbb
add
sub
es
stos
add
push
sbb
xchg
xor
add
pop
or
pop
or
jbe
(bad)
call
mov
add
es
pop
or
data16
(bad)
call
mov
add
sbb
add
add
or
pop
push
or
dec
(bad)
(bad)
call
xor
add
pop
or
les
adc
cmp
(bad)
call
cmps
add
push
and
sub
or
cmp
(bad)
(bad)
call
adc
sbb
(bad)
call
mov
add
and
or
cdq
sbb
or
xchg
or
sbb
pop
or
repz
(bad)
call
xor
add
sbb
add
sub
add
call
cmp
(bad)
(bad)
call
xor
add
pop
cmp
add
add
pop
or
(bad)
call
xor
add
pushf
inc
mov
enter
cmp
(bad)
(bad)
cmp
add
add
inc
or
add
(bad)
(bad)
push
(bad)
(bad)
jnp
(bad)
(bad)
jg
(bad)
call
(bad)
(bad)
call
add
pop
add
add
or
jns
(bad)
call
mov
add
and
push
loopne
and
cwde
pop
inc
popa
or
sbb
pop
adc
pop
(bad)
(bad)
call
xor
add
cmp
(bad)
call
adc
dec
(bad)
(bad)
call
cmps
add
push
es
std
(bad)
call
or
aaa
(bad)
(bad)
call
xor
add
push
xor
sub
add
or
movs
(bad)
(bad)
call
or
popf
(bad)
(bad)
call
or
adc
(bad)
call
mov
add
es
popa
pop
inc
pop
inc
add
add
sub
or
pop
(bad)
cmp
std
(bad)
call
xor
add
sbb
add
sub
add
xchg
std
(bad)
call
cmp
(bad)
(bad)
call
or
cmp
aam
add
and
out
add
sub
or
or
mov
xor
add
jbe
jb
and
jg
push
pop
or
pop
or
cmp
(bad)
call
or
cmp
xor
add
sub
add
adc
outs
add
add
add
xor
add
add
add
add
adc
or
inc
or
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
jecxz
add
pop
or
add
or
mov
add
sbb
add
adc
add
gs
(bad)
inc
add
add
add
add
add
add
add
jge
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
pop
cmp
add
add
movlps
popf
shl
sbb
cmp
add
push
adc
mov
lods
add
push
sbb
xor
sub
add
inc
push
add
add
add
sbb
add
mov
(bad)
inc
add
add
add
stc
add
add
or
(bad)
(bad)
call
xor
add
aam
pop
ins
and
adc
pop
or
outs
add
add
adc
xor
mov
adc
add
popa
pop
adc
inc
add
add
sbb
or
aad
(bad)
call
add
push
(bad)
(bad)
call
test
pop
xor
sub
add
loope
adc
add
hlt
(bad)
(bad)
call
xor
add
or
hlt
popa
push
pop
adc
sbb
add
adc
add
sar
(bad)
call
cmps
add
push
push
sbb
add
sub
add
or
adc
add
mov
scas
add
push
sbb
add
cmp
(bad)
call
adc
mov
xor
add
adc
pop
or
or
or
add
(bad)
(bad)
(bad)
call
xor
add
pop
xor
sub
add
and
add
add
int3
add
add
clc
add
push
sub
add
add
add
pop
add
add
add
add
add
add
add
add
inc
add
add
add
add
lods
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
sbb
neg
sub
sbb
icebp
push
sub
shr
or
adc
std
std
(bad)
call
xor
add
adc
cmp
sub
in
(bad)
call
xor
add
jnp
xor
and
adc
pop
or
or
add
(bad)
call
xor
add
cmp
(bad)
call
or
add
mov
(bad)
call
xor
add
dec
push
stos
sub
jmp
adc
pop
sub
sbb
std
(bad)
call
mov
push
or
push
adc
cmp
call
lods
add
push
es
or
xor
(bad)
call
adc
ins
std
(bad)
call
xor
add
sbb
xchg
sbb
add
pop
std
(bad)
call
mov
add
es
or
adc
add
dec
std
(bad)
call
mov
add
add
add
add
xor
add
add
adc
or
inc
or
add
test
add
lds
add
cmp
add
add
add
add
add
test
add
icebp
add
add
add
add
add
add
or
add
push
shl
add
add
adc
test
(bad)
inc
add
add
add
add
add
pop
add
add
add
cmps
add
add
add
add
add
add
lahf
add
add
add
add
add
add
test
cmp
or
or
shl
add
add
sbb
add
sub
add
sub
adc
fwait
shl
sbb
add
sub
add
or
dec
(bad)
(bad)
call
or
neg
sub
push
adc
ja
(bad)
call
xor
add
cdq
enter
bound
es
popa
adc
sbb
add
pop
(bad)
(bad)
call
xor
add
sub
add
or
mov
pop
sub
inc
add
add
js
(bad)
call
or
add
cs
(bad)
call
mov
add
and
retf
stc
sbb
pop
adc
push
inc
push
add
add
(bad)
(bad)
jnp
(bad)
call
add
add
(bad)
push
adc
cmc
(bad)
(bad)
call
xor
add
adc
and
adc
sub
or
add
add
add
add
add
add
add
add
add
add
add
lods
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
sbb
neg
hlt
sbb
icebp
sbb
out
shr
sub
adc
js
(bad)
call
mov
add
and
sub
jle
adc
pop
or
sar
(bad)
call
cmp
(bad)
(bad)
call
adc
push
(bad)
(bad)
call
stos
add
push
cmp
(bad)
(bad)
inc
add
push
add
add
outs
add
add
out
add
sbb
(bad)
(bad)
call
mov
add
pop
adc
sbb
sbb
add
sbb
(bad)
call
xor
add
sbb
add
sub
add
or
adc
add
(bad)
call
test
add
sbb
sbb
(bad)
call
add
jmp
test
add
and
int3
sar
and
in
adc
adc
sbb
(bad)
call
cmp
(bad)
(bad)
call
or
add
sar
call
xor
add
jns
clc
pop
and
icebp
and
adc
add
add
add
xor
mov
add
adc
or
adc
or
mov
add
sbb
add
adc
popf
(bad)
(bad)
inc
add
add
add
add
add
add
add
adc
add
add
add
add
add
mov
add
mov
add
out
add
cmc
add
add
add
xor
add
inc
add
add
sub
pop
sub
sahf
shl
add
add
pop
or
push
adc
(bad)
shr
adc
sub
or
add
pop
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
scas
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
sbb
neg
sub
sbb
icebp
sbb
out
shr
sbb
adc
adc
(bad)
call
mov
add
es
cmp
(bad)
call
adc
add
(bad)
(bad)
(bad)
call
mov
add
pop
sbb
add
sub
add
inc
or
add
lds
add
movs
add
add
add
add
add
movs
add
add
add
daa
add
add
(bad)
(bad)
inc
add
cmp
add
lds
add
sbb
push
or
or
add
mov
(bad)
call
xor
add
sub
adc
sahf
(bad)
(bad)
call
lods
add
push
sbb
pop
or
add
(bad)
(bad)
(bad)
call
mov
add
es
pop
inc
add
add
iret
(bad)
(bad)
call
or
add
outs
(bad)
(bad)
call
cmps
add
push
sbb
xor
sub
add
sbb
add
push
(bad)
(bad)
call
lods
add
push
es
or
movlps
inc
(bad)
(bad)
call
xor
add
xor
jmp
add
sbb
add
sub
(bad)
call
xor
add
or
sub
(bad)
inc
add
dec
pop
outs
sub
add
push
sbb
add
or
(bad)
call
xor
add
sbb
add
add
inc
push
add
add
add
das
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
dec
add
sbb
add
aam
(bad)
call
xor
add
sbb
add
sub
add
adc
mov
xor
add
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
call
adc
add
movs
std
(bad)
call
scas
add
push
and
das
sbb
inc
jne
inc
pop
adc
pop
cmp
std
(bad)
call
adc
cmp
call
xor
add
sbb
pop
or
add
jb
(bad)
call
mov
add
es
cmp
std
(bad)
call
adc
pop
std
(bad)
call
mov
add
add
add
adc
adc
mov
add
adc
push
add
add
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
adc
adc
mov
add
and
lds
or
add
add
inc
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
mov
add
pushf
add
add
add
add
or
adc
stos
shl
add
add
sbb
add
cmp
add
add
push
or
xchg
shl
add
add
sbb
add
sub
add
xor
(bad)
inc
popa
pop
xor
add
or
add
pop
or
cmp
(bad)
(bad)
call
sub
pop
(bad)
cmp
(bad)
call
mov
add
push
sbb
add
sub
add
and
add
and
add
cli
add
push
sub
or
or
cmp
(bad)
(bad)
(bad)
cmp
or
or
sbb
and
mov
add
and
outs
inc
int
pop
or
pop
or
cmp
add
pop
or
(bad)
call
xor
add
jnp
mov
xchg
es
or
cmp
or
jecxz
(bad)
call
xor
add
and
cmp
xor
or
sbb
sbb
(bad)
call
lods
add
push
and
shl
and
jne
add
es
add
or
test
mov
add
sbb
add
add
or
ret
add
add
scas
add
push
sbb
xchg
(bad)
call
lods
add
push
and
push
loop
and
or
or
cmp
(bad)
(bad)
call
or
push
mov
add
and
mov
xchg
cmp
pop
or
pop
or
dec
(bad)
(bad)
call
xor
add
sbb
add
add
or
push
(bad)
(bad)
call
cmps
add
push
push
or
sbb
push
sbb
push
pop
or
sbb
(bad)
call
test
pop
or
or
cmp
(bad)
call
mov
add
push
or
cmp
or
cmps
std
(bad)
inc
inc
or
add
pop
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
call
or
jp
(bad)
call
sub
sbb
cmp
std
(bad)
call
xor
add
shr
pop
or
scas
std
(bad)
call
xor
add
push
xor
sub
add
adc
push
add
add
add
adc
adc
cmps
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
shr
adc
cmp
add
pop
add
add
add
add
add
jae
add
pop
add
mov
add
mov
add
ins
add
add
add
add
add
add
add
add
or
mov
add
adc
mov
scas
add
push
and
retf
inc
pop
adc
pop
cmp
or
add
xchg
shl
add
add
push
xor
sub
add
or
inc
(bad)
(bad)
call
or
add
je
(bad)
call
mov
push
or
or
sub
(bad)
call
(bad)
(bad)
call
xor
add
push
lods
xor
and
and
or
adc
add
pop
dec
pop
jl
sti
add
push
push
adc
aaa
(bad)
(bad)
call
mov
add
sbb
add
push
cmp
add
add
cmp
add
add
or
sub
add
pop
adc
adc
(bad)
call
xor
add
sub
adc
cld
(bad)
(bad)
call
test
add
sub
or
add
add
add
add
add
add
pop
add
add
add
add
add
inc
add
add
add
shl
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
sbb
neg
sub
sbb
icebp
sbb
out
shl
sbb
adc
test
(bad)
call
xor
add
adc
add
pop
inc
add
add
pop
add
add
adc
fs
(bad)
call
xor
add
loope
inc
jns
mov
adc
sbb
sbb
push
(bad)
(bad)
inc
inc
push
add
add
add
cld
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
dec
adc
and
(bad)
call
xor
add
pop
xor
sub
add
cmp
adc
add
xor
add
mov
gs
pop
pop
adc
pop
or
or
std
(bad)
call
stos
add
push
sbb
add
sub
add
cdq
std
(bad)
call
sub
sbb
add
enter
shl
add
add
dec
imul
into
push
adc
sbb
je
(bad)
call
adc
cmps
std
(bad)
call
xor
add
sbb
add
sub
add
sub
add
xor
add
add
add
add
adc
or
or
add
push
shl
add
add
adc
cmps
(bad)
(bad)
inc
add
add
add
add
add
pop
add
add
add
xchg
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
pop
jbe
inc
add
add
xchg
add
add
or
shl
add
add
adc
pop
or
jl
add
push
cmp
add
pop
or
outs
add
add
adc
jnp
(bad)
call
mov
sbb
add
sub
add
or
add
fs
(bad)
call
mov
adc
pop
or
add
push
(bad)
(bad)
call
stos
add
push
and
mov
pop
cmp
pop
or
adc
xor
xor
add
sbb
pop
or
adc
and
(bad)
call
xor
add
pop
imul
ds
adc
sbb
cmp
add
sbb
add
add
(bad)
call
xor
add
jle
lds
and
out
pop
adc
sbb
sbb
add
in
(bad)
call
mov
adc
sub
or
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
mov
add
sub
or
inc
add
add
add
add
add
add
add
add
add
sub
pop
sub
sbb
icebp
pop
sub
shl
sbb
adc
push
(bad)
call
xor
add
inc
or
add
jle
(bad)
jmp
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
inc
add
add
call
or
or
add
sub
(bad)
call
mov
sbb
lea
and
push
push
es
or
mov
or
stc
sbb
neg
or
repnz
add
(bad)
std
(bad)
call
cmps
add
push
and
mov
ret
adc
pop
or
movlps
loopne
(bad)
call
xor
add
sbb
add
sub
add
add
(bad)
std
(bad)
call
mov
add
sbb
add
sub
add
and
add
add
repnz
add
call
or
add
mov
mov
sbb
add
sub
add
sub
(bad)
inc
inc
push
add
add
(bad)
jmp
(bad)
jmp
(bad)
(bad)
fdivr
(bad)
(bad)
(bad)
(bad)
jmp
std
(bad)
call
or
add
data16
(bad)
call
xor
add
pop
cmp
(bad)
call
adc
push
std
(bad)
call
xor
add
inc
or
js
popf
or
add
add
add
xor
xchg
add
add
add
adc
or
or
add
adc
xor
add
inc
push
scas
dec
and
hlt
(bad)
gs
adc
adc
sahf
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
mov
xor
add
sbb
fld
add
pop
or
add
mov
push
sub
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
sbb
neg
sub
sbb
icebp
sbb
out
shl
sub
adc
xor
(bad)
call
xor
add
sbb
pop
or
add
and
(bad)
call
mov
add
sbb
ja
add
sbb
(bad)
(bad)
call
lods
add
push
es
sub
adc
cli
(bad)
(bad)
call
xor
add
sbb
add
sub
add
or
add
add
and
add
add
dec
add
add
cld
add
push
sbb
add
retf
call
xor
add
push
xchg
mov
adc
pop
adc
add
pop
inc
add
add
mov
or
adc
sahf
(bad)
(bad)
call
xor
add
pushf
loop
jne
in
ins
jo
popa
adc
sbb
inc
push
add
add
(bad)
(bad)
call
add
and
add
add
add
or
(bad)
(bad)
call
xor
add
mov
cmp
mov
adc
sbb
jns
add
sbb
jae
add
pop
or
add
cmp
(bad)
call
lods
add
push
sbb
xor
sub
add
inc
or
add
pop
add
add
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
call
adc
hlt
std
(bad)
call
xor
add
sbb
add
add
adc
adc
fdivr
(bad)
call
lods
add
push
push
adc
pop
or
push
adc
(bad)
std
(bad)
call
mov
add
sub
adc
mov
(bad)
call
test
out
pop
movs
jl
adc
add
pop
or
add
xchg
std
(bad)
call
xor
add
adc
add
add
add
xor
add
add
or
add
cmp
add
add
inc
or
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
fld
add
dec
add
add
add
add
add
add
adc
or
test
add
adc
sbb
add
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
js
add
mov
add
add
add
add
add
add
add
add
add
add
add
bound
add
jge
add
xchg
add
add
or
clc
add
add
pop
or
xchg
lods
add
push
and
mov
push
and
and
pop
or
cmp
(bad)
(bad)
call
or
aad
add
pop
or
popa
(bad)
(bad)
call
scas
add
push
sbb
sbb
push
(bad)
(bad)
call
xor
add
push
or
(bad)
(bad)
(bad)
call
or
cmp
mov
add
push
or
cmp
(bad)
(bad)
inc
popa
pop
jnp
inc
add
add
mov
or
sbb
(bad)
call
mov
add
pop
sbb
add
sub
add
sar
call
or
add
(bad)
call
mov
sbb
cmp
sbb
pop
pop
or
(bad)
call
mov
add
sbb
xor
sub
add
add
push
or
(bad)
(bad)
(bad)
call
xor
add
or
add
jecxz
add
and
add
add
std
add
push
sub
adc
cmps
(bad)
(bad)
call
xor
add
dec
cmp
push
es
mov
(bad)
call
mov
add
push
or
pop
or
sbb
jns
(bad)
call
test
sub
js
inc
ins
out
ds
or
sbb
push
(bad)
(bad)
call
adc
pop
(bad)
(bad)
call
xor
add
xor
scas
jb
ror
fs
or
shl
sbb
sbb
cmp
(bad)
call
xor
add
or
pop
or
cmp
std
(bad)
call
(bad)
cmp
(bad)
(bad)
call
xor
add
push
inc
or
add
test
(bad)
jmp
(bad)
inc
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
or
in
std
(bad)
call
xor
add
cmp
fcom
lods
je
ds
or
pop
or
inc
(bad)
(bad)
call
call
(bad)
call
xor
add
sbb
sbb
pop
adc
cmp
add
push
and
lods
mov
cs
or
shl
pop
or
xchg
std
(bad)
call
xor
add
rcr
jns
and
test
sbb
sbb
sbb
cmp
(bad)
call
xor
add
push
xor
sub
add
sbb
jl
add
cmp
std
(bad)
call
or
push
std
(bad)
call
mov
add
sbb
sbb
sbb
pop
adc
(bad)
call
mov
add
sbb
xor
sub
add
cmp
or
nop
(bad)
(bad)
call
sbb
sbb
(bad)
call
xor
add
cmp
cld
(bad)
call
push
or
or
(bad)
call
xor
add
or
pop
or
data16
(bad)
call
adc
icebp
cld
(bad)
call
mov
push
xor
sub
add
adc
push
add
add
add
add
xor
add
add
add
add
sbb
push
shl
or
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
jge
add
sbb
xchg
shr
sbb
pop
push
or
test
xor
add
sbb
pop
or
cmp
(bad)
call
scas
add
push
and
jnp
and
int
push
pop
or
inc
add
add
adc
cmp
call
xor
add
fsub
loope
popa
or
pop
inc
or
add
add
add
jl
(bad)
push
add
rol
add
add
add
add
add
dec
add
add
add
add
add
add
cmp
(bad)
(bad)
call
scas
add
push
sbb
shl
or
or
jmp
add
push
cmp
add
add
cmp
cmp
cmp
or
lods
add
add
or
movs
add
add
or
mov
(bad)
call
mov
add
sbb
pop
or
cmps
(bad)
(bad)
call
xor
add
or
or
sbb
mov
(bad)
call
mov
add
push
or
shl
sbb
js
(bad)
call
xor
add
dec
out
mov
and
xchg
pop
popa
or
sbb
pop
(bad)
(bad)
call
xor
add
(bad)
(bad)
inc
inc
or
add
inc
(bad)
(bad)
dec
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
inc
(bad)
(bad)
dec
add
add
or
(bad)
call
xor
add
or
push
or
adc
adc
(bad)
call
xor
add
cmps
push
mov
test
popa
or
sbb
cmc
std
(bad)
call
mov
add
sbb
add
dec
add
add
inc
add
add
mov
pop
adc
(bad)
call
mov
add
sbb
sbb
(bad)
call
xor
add
xchg
mov
and
les
pop
or
sbb
std
(bad)
(bad)
call
or
cmps
std
(bad)
call
mov
push
add
sub
add
popa
pop
pusha
pop
inc
add
add
push
add
add
pop
pop
or
jg
(bad)
call
mov
add
sbb
cmp
(bad)
call
mov
add
and
loop
das
and
rol
push
cmp
(bad)
(bad)
call
or
push
std
(bad)
call
xor
add
or
sbb
sbb
cmp
add
add
pop
sub
std
(bad)
call
xor
add
sbb
pop
std
(bad)
call
xor
add
sbb
sbb
cmp
xor
add
sar
adc
mov
add
sub
adc
adc
xchg
add
or
add
cmp
inc
or
add
add
add
add
add
add
add
add
add
adc
add
mov
add
sbb
add
jecxz
add
sbb
add
jo
add
adc
add
fld
add
shl
pop
or
push
shl
add
add
or
add
add
(bad)
inc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
ja
add
fwait
add
add
add
add
or
(bad)
sub
add
pop
or
pop
sbb
push
pop
or
cdq
shl
add
add
gs
loopne
and
bound
or
push
or
xor
stos
add
add
or
sbb
sub
or
daa
sbb
imul
add
push
es
or
push
shl
pop
or
push
(bad)
(bad)
call
xor
add
or
sbb
pop
or
(bad)
call
mov
add
and
lahf
add
push
inc
or
add
xchg
add
add
(bad)
jmp
(bad)
inc
add
(bad)
(bad)
(bad)
call
(bad)
(bad)
jmp
or
add
(bad)
call
xor
add
or
sbb
push
push
or
adc
in
(bad)
(bad)
call
xor
add
or
cmp
add
add
or
or
adc
int
(bad)
call
xor
add
sbb
js
(bad)
call
or
mov
mov
add
and
jae
sub
mov
sbb
cmp
(bad)
call
or
pop
or
cmp
xor
add
cmp
(bad)
call
(bad)
call
test
or
cmp
(bad)
call
or
daa
(bad)
(bad)
call
or
imul
add
add
shl
xchg
pop
push
pop
or
sbb
pop
or
dec
(bad)
(bad)
call
xor
add
lods
inc
sub
push
jecxz
jns
or
push
or
jmp
add
pop
dec
pop
inc
add
add
inc
(bad)
(bad)
call
push
or
sbb
mov
add
es
or
(bad)
inc
add
lea
add
and
inc
add
sub
or
or
cmc
std
(bad)
call
stos
add
push
cmp
or
jecxz
(bad)
call
mov
add
and
fdivr
and
dec
dec
and
or
add
sub
adc
adc
push
add
add
add
adc
or
inc
or
add
rol
add
into
add
add
add
add
add
add
add
add
add
add
add
outs
add
add
add
add
adc
add
or
mov
add
sbb
add
adc
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
add
xchg
add
add
add
add
add
add
xchg
add
add
pop
(bad)
(bad)
call
cmp
add
add
or
or
add
xchg
shr
xor
sub
add
cmp
add
add
adc
jbe
(bad)
call
xor
add
adc
sub
adc
fs
(bad)
call
mov
sbb
add
add
cmp
add
add
adc
add
inc
(bad)
(bad)
call
xor
add
add
pop
inc
add
add
xchg
add
add
or
push
adc
and
(bad)
call
xor
add
jmp
and
and
adc
pop
or
add
add
add
(bad)
call
test
push
data16
sub
pop
pop
adc
push
inc
push
add
add
add
mov
(bad)
(bad)
(bad)
jle
add
sar
dec
(bad)
call
or
add
(bad)
(bad)
(bad)
call
test
add
sbb
xor
sub
add
jb
(bad)
call
(bad)
(bad)
call
xor
add
sbb
add
sub
add
cmp
(bad)
call
or
add
mov
(bad)
call
xor
add
pop
or
inc
(bad)
(bad)
call
sub
pop
movlps
jne
(bad)
call
lods
add
push
and
mov
dec
and
out
dec
pop
adc
sbb
pop
adc
add
push
(bad)
(bad)
call
test
add
es
pop
or
(bad)
(bad)
call
test
add
es
std
(bad)
call
adc
add
xor
(bad)
call
lods
add
push
es
std
(bad)
call
or
add
push
(bad)
(bad)
call
xor
add
sbb
add
sub
add
sub
add
xor
add
sbb
add
add
push
or
add
add
add
cmp
add
add
add
add
(bad)
inc
add
add
(bad)
dec
add
dec
add
add
add
add
mov
add
sub
or
inc
push
add
add
add
pop
add
add
add
add
add
add
add
add
or
cli
pop
sub
pop
sub
push
sub
sbb
out
sbb
jmp
mov
add
sbb
add
jmp
adc
outs
std
(bad)
call
xor
add
sbb
pop
adc
pop
std
(bad)
call
test
add
push
sbb
add
sub
add
call
add
inc
std
(bad)
call
xor
add
add
and
inc
add
sub
add
push
pop
adc
add
and
(bad)
call
mov
les
rol
adc
sbb
sbb
push
adc
add
(bad)
call
xor
add
shl
dec
and
or
add
adc
adc
ret
add
add
adc
or
inc
or
add
add
add
inc
add
add
add
popa
add
add
add
add
add
add
add
iret
add
add
or
adc
adc
lods
add
push
and
nop
pusha
and
das
imul
inc
adc
add
outs
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
sub
adc
mov
xor
add
adc
sbb
jmp
cmp
add
add
cmp
add
add
shr
sbb
add
sub
add
or
or
add
js
(bad)
call
stos
add
push
and
push
sti
stos
push
pop
adc
sbb
pop
or
adc
(bad)
inc
add
add
add
and
add
add
int
add
sub
or
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
mov
add
sub
or
inc
add
add
add
add
add
add
add
add
add
or
cli
sbb
not
sub
pop
sub
sbb
out
shl
sub
adc
loope
(bad)
call
test
add
pop
adc
push
inc
push
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
cmp
add
movs
add
add
add
add
add
scas
(bad)
(bad)
call
mov
add
and
adc
jns
jmp
dec
(bad)
(bad)
call
adc
(bad)
(bad)
(bad)
call
mov
add
pop
push
xor
sub
add
sub
pop
or
add
jne
(bad)
call
xor
add
adc
pop
or
or
(bad)
(bad)
call
xor
add
stos
mov
xchg
sub
popa
adc
cmp
(bad)
(bad)
call
adc
inc
(bad)
(bad)
call
xor
add
fnsave
xlat
jno
popa
adc
sbb
pop
movlps
and
(bad)
call
xor
add
sbb
add
sub
add
call
push
adc
push
(bad)
(bad)
call
xor
add
pop
or
adc
idiv
(bad)
call
mov
add
push
adc
cmp
adc
loopne
(bad)
call
xor
add
adc
sbb
inc
pop
inc
add
add
pop
add
add
or
add
mov
xor
add
arpl
(bad)
call
cmp
(bad)
call
adc
popf
std
(bad)
call
xor
add
hlt
ja
sbb
inc
loopne
pop
pop
adc
add
add
adc
adc
sbb
add
push
add
adc
add
or
add
jbe
add
mov
add
jbe
add
xchg
add
add
add
add
add
add
add
sar
sbb
sub
shr
cdq
xchg
fld
push
inc
xchg
inc
pop
or
pop
inc
pop
add
add
add
add
add
add
add
add
add
jae
add
nop
add
add
or
or
fcom
scas
add
push
and
jg
imul
mov
jo
or
cmp
(bad)
inc
pop
inc
add
add
dec
add
add
or
scas
shl
add
add
or
add
and
add
add
pop
add
add
mov
sbb
cmp
(bad)
jmp
push
sbb
cmp
(bad)
call
or
jge
(bad)
call
xor
add
jno
push
add
add
cmp
(bad)
call
sub
(bad)
(bad)
call
xor
add
sbb
add
add
sbb
cmp
(bad)
call
test
add
sbb
sub
add
adc
push
add
add
adc
push
add
add
or
add
push
or
or
or
test
or
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
push
or
inc
add
add
add
add
add
add
add
add
add
add
add
mov
sub
or
mov
xor
add
push
add
and
add
add
mov
add
sbb
sbb
cdq
shl
add
add
ja
je
and
dec
popa
or
push
inc
push
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
or
(bad)
(bad)
(bad)
call
xor
add
sub
add
add
and
add
add
jo
add
sub
add
push
pop
or
inc
(bad)
(bad)
call
stos
add
push
and
test
and
and
and
sbb
daa
(bad)
(bad)
call
mov
add
and
stos
rcl
in
ja
popa
or
sbb
jno
(bad)
call
or
or
push
(bad)
(bad)
call
xor
add
jl
jmp
pop
or
add
adc
adc
mov
add
adc
pop
or
or
add
add
or
or
add
add
add
dec
add
add
add
jne
add
ret
add
add
add
add
add
add
add
add
add
push
add
add
add
pop
inc
pop
add
add
add
dec
add
add
add
cmp
add
jb
add
push
add
add
add
add
daa
lea
add
and
add
out
add
push
xor
sub
push
sbb
sub
add
or
or
jbe
(bad)
call
aaa
add
add
aas
push
fdivr
and
(bad)
adc
pop
or
pop
or
pop
(bad)
(bad)
call
xor
or
push
sbb
fwait
push
add
popf
push
push
and
push
sbb
pop
xor
add
(bad)
(bad)
inc
sbb
mov
add
popf
pop
lea
add
add
push
xor
add
or
adc
mov
sbb
add
sub
add
pop
and
add
popf
push
or
clc
(bad)
(bad)
call
add
add
sbb
add
add
sbb
ror
add
popf
pop
or
(bad)
(bad)
call
rol
push
and
dec
loop
and
std
inc
sbb
es
lea
add
or
cmp
enter
and
or
jae
push
stos
push
aaa
pop
or
push
sbb
add
(bad)
(bad)
call
les
add
and
cmp
jmp
sbb
pop
or
jge
(bad)
call
mov
cmp
sbb
jae
add
popf
sbb
popa
(bad)
(bad)
call
aaa
add
add
sub
mov
sub
add
sub
adc
push
add
add
and
add
cmp
add
add
or
shl
adc
inc
sldt
add
add
sldt
add
add
add
add
add
add
xchg
add
scas
add
add
add
add
add
add
add
add
add
add
xchg
add
clc
add
add
or
or
adc
sub
cmp
add
sbb
jmp
or
or
mov
add
pop
xor
sub
add
or
shl
sbb
add
add
adc
cmp
add
pop
adc
pop
adc
sbb
(bad)
(bad)
call
mov
or
adc
add
push
adc
mov
pop
push
sbb
pop
or
or
or
or
cmp
(bad)
call
mov
push
or
pop
pop
xchg
or
push
sbb
pop
adc
pop
or
push
adc
cmp
(bad)
call
mov
sbb
add
sub
add
or
add
add
or
inc
push
(bad)
(bad)
call
adc
cmp
(bad)
(bad)
call
aaa
add
add
adc
cmp
add
adc
pop
xchg
adc
adc
pop
pop
adc
pop
xchg
popa
rcr
(bad)
(bad)
(bad)
call
aaa
add
add
cmp
adc
pop
or
or
lods
(bad)
(bad)
call
ret
push
push
push
xor
sub
add
add
add
or
xchg
or
or
pop
jle
add
add
call
or
or
jp
(bad)
call
xor
adc
adc
push
adc
add
add
adc
adc
cmp
adc
sub
sub
adc
sbb
or
inc
(bad)
(bad)
call
enter
sbb
xor
sub
add
or
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
dec
add
repnz
(bad)
call
mov
pop
or
or
mov
and
out
push
popa
add
pop
or
or
fdivr
(bad)
call
aaa
add
add
dec
retf
add
and
and
popa
adc
sbb
or
adc
cmp
xor
add
sub
add
adc
adc
jmp
add
adc
js
add
pop
or
adc
xor
add
in
add
and
or
pop
inc
push
add
add
(bad)
(bad)
inc
add
add
add
pop
add
add
add
cdq
add
add
inc
or
add
push
add
add
add
pop
add
add
add
push
add
add
add
add
add
add
add
sar
or
mov
add
add
xor
enter
or
sub
pop
inc
add
add
and
add
sbb
sub
push
sbb
sbb
cmp
(bad)
call
ret
push
pop
or
push
or
mov
sub
add
sub
or
or
push
(bad)
(bad)
call
aaa
add
add
sbb
add
add
or
inc
(bad)
(bad)
call
enter
sbb
add
sub
add
adc
adc
dec
add
add
add
adc
or
sub
rol
add
push
sbb
xor
sub
add
inc
or
add
mov
add
add
add
sub
add
inc
add
add
add
pop
add
add
add
mov
add
movs
add
add
add
add
or
rol
push
sbb
add
sub
add
or
or
mov
lds
add
push
sbb
add
add
ja
add
add
sub
add
push
sub
or
xchg
rol
add
push
sbb
sbb
pop
or
sub
push
adc
or
jbe
(bad)
call
mov
sbb
sbb
cmp
(bad)
call
mov
es
or
cmp
(bad)
call
xor
add
cmp
je
and
or
sbb
jb
(bad)
call
cmp
(bad)
(bad)
call
mov
sbb
add
add
inc
or
add
add
add
arpl
(bad)
jmp
(bad)
call
(bad)
call
add
add
add
add
(bad)
call
mov
sbb
cmp
(bad)
(bad)
call
add
add
add
pop
inc
add
add
popf
(bad)
(bad)
call
or
(bad)
(bad)
call
enter
push
pop
xor
sub
add
adc
push
add
add
add
adc
adc
fld
add
or
add
sbb
sbb
or
add
add
or
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
pop
add
add
add
sub
or
inc
add
add
add
add
add
add
add
mov
sub
or
mov
add
sbb
sbb
scas
shl
add
add
sbb
add
sub
add
pop
inc
add
add
or
add
sbb
(bad)
sar
sbb
rcr
or
push
add
sub
add
push
pop
or
jb
(bad)
call
mov
es
inc
push
add
add
(bad)
(bad)
jmp
(bad)
dec
(bad)
(bad)
jmp
(bad)
dec
(bad)
(bad)
call
or
inc
(bad)
(bad)
call
aaa
add
add
sbb
add
add
sub
add
adc
adc
xor
add
adc
or
sub
shl
add
pop
imul
ins
pop
or
or
add
add
add
add
add
add
add
pusha
add
add
add
jl
add
mov
add
add
pop
or
inc
add
add
add
add
add
add
add
mov
sub
or
scas
sar
sbb
add
sub
add
cmp
or
xchg
sar
sbb
add
sub
add
sub
sbb
xor
sub
add
cmp
(bad)
call
mov
push
es
or
or
pusha
(bad)
(bad)
call
xor
push
inc
push
add
add
add
add
add
and
add
sar
(bad)
call
(bad)
(bad)
jmp
(bad)
inc
pop
inc
add
add
(bad)
(bad)
(bad)
call
or
es
(bad)
call
mov
push
add
sub
add
add
mov
add
pop
or
or
(bad)
call
xor
add
pop
add
sub
add
or
or
repz
(bad)
call
aaa
add
add
sbb
add
sub
add
sub
add
adc
adc
push
add
add
add
adc
cmps
add
add
inc
or
add
aas
add
add
add
add
add
add
add
add
add
add
or
sub
shl
add
add
or
pop
inc
or
add
xchg
(bad)
(bad)
inc
add
add
add
add
add
data16
add
add
pop
add
xchg
add
add
add
add
add
inc
add
sub
or
rcl
add
add
or
sub
mov
mov
jmp
popa
or
sbb
fwait
shl
add
add
sbb
add
add
add
popa
pop
adc
add
add
daa
add
add
or
jbe
(bad)
call
aaa
add
add
sbb
add
sub
add
xor
(bad)
call
or
pop
(bad)
(bad)
call
add
add
sbb
sbb
or
sbb
(bad)
call
or
inc
(bad)
(bad)
call
add
add
cmp
(bad)
(bad)
jmp
dec
pop
or
or
das
(bad)
(bad)
call
add
add
push
xor
sub
add
sbb
(bad)
call
mov
push
xor
sub
es
rol
push
es
or
cmp
(bad)
(bad)
call
xor
mov
rcr
pop
push
cmp
add
sub
add
xor
add
add
add
add
sbb
push
inc
push
add
add
add
pop
add
popf
add
add
add
add
add
and
add
add
jge
add
sbb
push
rol
add
push
sbb
add
sub
add
inc
add
(bad)
(bad)
inc
add
add
add
dec
add
add
add
sub
shl
add
add
sbb
add
sub
add
push
or
inc
add
add
add
add
add
add
add
add
add
add
add
rol
push
sub
or
stos
shl
add
add
sbb
add
sub
add
or
push
(bad)
(bad)
call
sub
sbb
pop
or
mov
xor
add
add
add
sbb
ja
(bad)
call
xor
add
sbb
add
sub
add
sub
add
xor
add
add
add
add
pop
or
inc
push
add
add
add
add
add
add
add
add
sub
rol
add
push
push
push
xor
sub
add
inc
push
add
add
add
add
add
add
add
add
add
sub
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
ret
push
sub
or
mov
add
add
or
cmp
(bad)
call
or
mov
push
push
sbb
add
sub
add
sub
or
or
mov
mov
pop
xor
sub
add
popa
pop
push
pop
inc
add
add
(bad)
(bad)
call
or
or
data16
(bad)
call
xor
add
gs
in
jns
sbb
cmp
(bad)
(bad)
call
or
dec
(bad)
(bad)
call
rol
push
sbb
adc
adc
enter
or
add
sbb
sbb
push
ror
add
push
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
pop
add
add
pop
inc
add
add
dec
add
add
or
or
rcl
retf
push
and
out
sub
xchg
pop
popa
or
push
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
or
popf
rol
add
push
sbb
xchg
sar
pop
sub
add
(bad)
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
ret
add
push
sub
or
push
(bad)
(bad)
call
xor
sbb
add
sub
add
sub
xor
add
add
push
add
adc
mov
pop
inc
or
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
add
inc
add
add
add
jne
add
mov
add
scas
add
add
add
add
mov
sub
sbb
sub
ror
add
push
sbb
sbb
sbb
sub
sbb
xor
sub
add
or
or
mov
add
pushf
in
(bad)
pop
and
jecxz
add
es
add
push
es
or
sub
add
mov
push
and
or
sub
sub
add
push
sub
or
popa
(bad)
(bad)
call
mov
es
or
cmp
(bad)
call
rol
push
sbb
xor
sub
add
popa
pop
sub
add
add
imul
call
or
sub
xor
add
sbb
add
sub
add
or
or
cmp
add
add
push
inc
or
add
cmps
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
call
or
loop
(bad)
call
xor
add
or
sbb
sbb
cmp
(bad)
(bad)
call
mov
fwait
retf
ds
out
mov
pop
or
add
sub
adc
adc
clc
add
add
add
adc
push
or
push
rol
add
push
es
inc
pop
add
add
(bad)
(bad)
inc
add
add
add
pusha
add
add
add
xchg
add
add
inc
or
add
dec
add
add
add
imul
add
add
add
add
add
add
add
add
add
or
mov
les
add
and
mov
jge
pop
pop
or
sub
add
popa
sbb
add
add
pop
add
add
pop
or
mov
mov
sbb
add
sub
add
or
ja
(bad)
call
ret
push
sbb
add
push
add
push
sub
or
or
pop
(bad)
(bad)
call
mov
push
and
jmp
rol
add
push
sbb
sbb
cmp
(bad)
(bad)
call
xor
add
or
pop
sub
cmp
(bad)
(bad)
call
xor
sbb
add
sub
add
adc
adc
add
sub
xor
add
add
add
add
push
or
or
or
add
add
or
or
add
add
(bad)
(bad)
inc
add
add
add
daa
add
add
add
jae
add
push
or
or
(bad)
mov
xor
sub
add
or
xor
sub
pop
or
ret
rol
add
push
sbb
add
pop
inc
add
add
loop
(bad)
call
or
test
add
add
push
xor
sub
add
inc
push
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
add
or
(bad)
(bad)
call
or
jne
(bad)
call
xor
add
add
sub
add
push
sub
or
inc
add
add
add
add
add
add
add
mov
push
sub
or
cmp
xor
add
sbb
add
sub
add
sub
add
adc
adc
add
add
or
add
sbb
push
inc
push
add
add
add
add
add
mov
add
cmp
add
mov
add
xor
add
sbb
adc
xor
add
xchg
stos
xor
mov
or
or
add
add
add
aaa
add
add
add
imul
add
add
push
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
mov
push
or
mov
retf
push
sbb
(bad)
(bad)
call
sub
shl
add
add
gs
mov
retf
jns
or
sbb
cmp
(bad)
call
or
jg
(bad)
call
xor
add
or
sbb
sbb
outs
(bad)
(bad)
call
xor
sbb
add
add
pop
inc
add
add
stos
(bad)
(bad)
call
or
dec
(bad)
(bad)
call
add
add
xor
je
and
or
add
adc
adc
push
add
add
add
pop
or
sub
shl
add
or
add
add
(bad)
(bad)
inc
add
add
add
pop
add
add
add
mov
add
mov
add
cmp
add
sbb
add
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
enter
sub
or
stos
shl
add
add
xlat
or
loopne
pop
or
sbb
sbb
xchg
rol
add
push
and
mov
mov
pop
or
sbb
out
or
or
je
(bad)
call
mov
or
sbb
cmp
(bad)
call
xor
rcr
push
and
or
add
pop
inc
add
add
(bad)
(bad)
(bad)
call
or
cmp
xor
pop
mov
push
and
or
push
inc
push
add
add
(bad)
(bad)
push
(bad)
push
(bad)
call
(bad)
(bad)
call
or
push
(bad)
(bad)
call
aaa
add
add
add
add
adc
adc
in
add
or
add
pop
or
inc
push
add
add
add
inc
add
add
add
add
add
add
add
add
or
push
ror
add
push
sbb
sub
add
inc
push
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
add
push
sbb
xlat
sar
or
add
pop
inc
add
add
sbb
add
push
or
or
mov
push
sbb
xor
sub
add
ja
(bad)
call
sub
sbb
mov
add
pop
or
arpl
(bad)
call
or
(bad)
shl
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
leave
add
push
sub
or
pop
(bad)
(bad)
call
aaa
add
add
sbb
add
sub
add
sub
xor
add
add
add
add
adc
add
add
inc
or
add
add
add
jbe
add
pop
add
add
add
add
add
push
add
add
add
pop
add
add
retf
push
sbb
sub
shl
add
add
sbb
add
sub
add
inc
add
(bad)
(bad)
inc
add
add
add
and
add
sub
add
sub
ror
add
push
sbb
add
add
pop
or
int3
sar
es
cmp
(bad)
jmp
cmp
pop
inc
add
add
pop
add
add
or
addr16
(bad)
call
sub
sbb
cmp
(bad)
inc
add
and
add
sub
or
(bad)
rol
add
push
sbb
xor
sub
add
adc
outs
add
add
add
adc
adc
pop
add
add
add
sbb
sbb
push
rcl
add
add
sbb
add
sub
add
inc
pop
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
leave
add
add
xchg
add
add
sub
or
or
rcl
iret
add
push
and
(bad)
cmp
xchg
pop
mov
pop
or
cmp
add
add
in
add
sub
or
inc
push
add
add
add
add
add
add
add
jle
add
xor
retf
add
push
sub
or
xchg
push
add
add
add
popa
pop
pop
pop
inc
add
add
xchg
(bad)
(bad)
call
add
add
or
or
gs
(bad)
call
push
add
add
in
add
sbb
cmp
(bad)
call
push
add
add
sbb
add
sub
add
inc
push
add
add
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
call
or
sbb
fiadd
add
sbb
sub
or
or
push
add
add
sbb
add
sub
add
sub
adc
adc
sub
add
or
add
sbb
sbb
push
ror
add
push
or
add
add
(bad)
(bad)
inc
add
add
add
and
add
dec
add
add
add
add
add
add
or
rcl
push
add
add
or
sbb
pop
or
(bad)
rcl
add
add
sub
add
inc
push
add
add
add
or
add
bound
add
adc
add
or
add
xchg
add
push
or
xchg
rcl
add
add
sub
add
sub
add
push
sub
or
inc
push
add
add
add
add
add
adc
add
adc
add
inc
add
add
add
ror
add
push
sub
or
push
(bad)
(bad)
call
fild
add
add
sub
add
push
sbb
(bad)
call
push
add
add
pop
cmp
(bad)
call
or
or
sub
rol
add
sbb
xor
sub
add
push
or
pop
(bad)
(bad)
call
push
add
add
add
pop
inc
add
add
ret
jmp
or
idiv
(bad)
call
push
add
add
daa
imul
dec
and
lock
pop
or
add
add
add
xor
add
add
add
add
push
or
or
push
rcl
add
push
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
pop
push
pop
inc
add
add
cmps
add
add
or
retf
rcl
add
push
sbb
sub
add
add
push
sub
or
inc
add
add
add
add
add
add
add
int
add
sub
or
xchg
rcl
add
add
or
sbb
sbb
test
rol
add
sbb
add
sub
add
or
or
ins
(bad)
(bad)
call
rol
add
and
or
and
push
inc
xor
es
inc
push
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
(bad)
jl
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
call
or
ss
(bad)
call
push
add
add
sbb
add
add
sub
(bad)
call
rol
add
sbb
adc
adc
fld
add
push
add
adc
cmps
add
add
inc
or
add
cmp
add
add
add
add
add
add
cmp
add
add
or
adc
push
add
add
jae
mov
and
or
pop
inc
push
add
add
add
add
add
xor
add
inc
add
add
add
movs
sbb
sub
add
sub
or
or
int3
ror
add
push
sbb
xor
sub
es
into
add
push
sbb
sub
sbb
cmp
(bad)
call
or
mov
push
cmp
jmp
sub
popa
pop
adc
add
add
cmps
(bad)
(bad)
call
or
or
jle
(bad)
call
push
add
add
push
inc
fidiv
dec
pop
or
add
sub
add
adc
adc
repnz
add
add
sbb
push
inc
push
add
add
add
ja
add
ja
add
jle
add
add
add
arpl
add
add
pop
inc
add
add
lods
add
add
or
push
rcl
add
add
sub
add
inc
push
add
add
add
add
add
add
add
cmp
add
jl
add
sbb
sub
rcl
add
push
pop
or
sub
rcr
add
push
pop
sbb
add
sub
add
or
or
mov
push
push
sbb
add
sub
add
add
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
iret
add
push
sub
or
js
(bad)
call
push
add
add
pop
mov
push
and
or
pop
cmp
(bad)
call
or
pop
(bad)
(bad)
call
push
add
add
or
add
add
adc
adc
lods
add
add
add
sbb
pop
or
or
rol
add
pop
or
or
add
add
(bad)
(bad)
inc
add
add
add
push
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
pop
pop
pop
inc
add
add
add
add
sbb
sub
push
sub
sbb
mov
push
add
add
or
sbb
sub
xor
add
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
rol
add
sub
or
jbe
(bad)
call
int3
add
push
and
loope
shl
or
add
adc
adc
repz
add
add
adc
xchg
add
push
inc
or
add
cmp
add
popa
add
add
add
add
add
stos
add
add
add
add
add
add
rol
add
sbb
sub
rcl
add
add
or
pop
inc
or
add
popf
(bad)
(bad)
inc
add
add
add
add
add
add
add
push
add
add
add
jb
add
sbb
sub
rcl
add
add
sbb
add
sub
add
or
or
mov
add
sbb
cmp
(bad)
inc
popa
pop
sbb
add
add
and
add
sbb
sub
add
push
xor
sub
add
or
sub
add
cmp
(bad)
call
sub
(bad)
(bad)
call
push
add
add
cmp
(bad)
(bad)
jmp
push
add
add
push
sub
or
pop
(bad)
(bad)
call
push
add
add
or
add
sub
adc
adc
add
add
push
add
adc
mov
add
push
inc
or
add
imul
add
dec
add
add
add
add
add
jb
add
xchg
add
add
or
push
rcl
add
add
pop
inc
or
add
movs
(bad)
(bad)
inc
add
add
add
add
add
add
add
pop
add
add
add
sub
or
rcl
push
add
add
pop
or
ret
rcl
add
add
rcl
add
push
es
sub
push
and
inc
dec
jae
xor
sbb
sbb
cmp
(bad)
jmp
pop
sub
add
push
sub
or
mov
push
add
add
sbb
add
sub
add
or
dec
(bad)
(bad)
inc
add
dec
pop
inc
add
add
xchg
(bad)
(bad)
call
or
arpl
(bad)
call
push
add
add
sbb
cmp
(bad)
(bad)
call
or
dec
(bad)
(bad)
call
rol
add
and
(bad)
adc
fnstenv
popa
or
add
sub
xor
add
add
add
add
adc
or
push
rcl
add
add
push
add
sub
add
inc
or
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
mov
add
rcl
add
push
es
or
or
retf
add
push
es
or
or
mov
push
adc
jle
add
sbb
sub
sbb
sub
add
or
call
mov
inc
and
or
push
inc
or
add
add
add
add
or
add
add
(bad)
(bad)
dec
(bad)
call
or
pop
(bad)
(bad)
call
aam
add
add
add
push
sub
or
or
inc
(bad)
(bad)
call
push
add
add
push
mov
or
sbb
sbb
cmp
(bad)
(bad)
call
iret
add
push
es
popa
pop
es
inc
add
add
pop
(bad)
(bad)
call
(bad)
call
push
add
add
sbb
add
sub
add
adc
or
add
sub
add
xor
add
add
adc
or
or
push
rcl
add
add
or
add
add
(bad)
(bad)
inc
add
add
add
add
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
inc
add
add
or
add
sbb
pop
or
mov
add
sbb
repnz
sub
add
sub
add
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
aam
add
sub
or
jl
(bad)
call
push
add
add
add
adc
adc
mov
add
add
sbb
push
inc
push
add
add
add
dec
add
add
add
mov
add
inc
add
add
or
or
iret
add
push
sbb
or
add
add
add
add
add
add
add
bound
add
sub
or
fst
push
add
add
push
jae
dec
and
or
sbb
sub
add
push
sub
or
inc
add
add
add
add
add
add
add
aad
add
sub
or
cwde
rcr
add
push
pop
or
sbb
pop
or
mov
aad
add
es
pop
inc
add
add
xchg
(bad)
(bad)
call
or
outs
(bad)
(bad)
call
rol
add
add
add
adc
adc
sti
add
add
add
adc
fs
inc
or
add
jbe
add
push
add
add
add
push
add
add
add
cmp
add
mov
add
rcl
add
push
es
or
push
rcl
add
add
pop
inc
or
add
call
add
add
add
add
add
add
pop
add
add
add
jl
add
add
popa
pop
xor
add
push
add
add
add
push
or
test
or
mov
push
sbb
lock
sub
push
add
inc
add
push
sub
sub
add
sub
cwde
rcl
add
push
sbb
(bad)
(bad)
call
or
xchg
rol
add
cmp
(bad)
(bad)
jmp
sub
or
jo
(bad)
call
iret
add
push
and
popf
sbb
and
or
or
push
(bad)
(bad)
call
int3
add
push
sbb
add
sub
adc
adc
pop
add
add
add
sbb
push
inc
push
add
add
add
aam
add
xchg
add
add
add
cmp
add
jne
add
sbb
or
iret
add
push
push
or
or
add
add
add
add
add
inc
add
add
add
add
sub
rcl
add
add
sub
or
inc
add
add
add
add
add
add
add
xlat
add
push
sub
or
stos
rcl
add
add
push
xor
sub
add
ins
(bad)
(bad)
inc
add
dec
add
push
sbb
mov
int3
add
push
and
test
je
popa
or
add
pop
inc
add
add
xor
add
sbb
fs
(bad)
call
push
add
add
mov
fst
es
or
or
dec
(bad)
(bad)
call
push
add
add
sbb
add
sub
add
sub
sbb
sbb
das
(bad)
(bad)
call
retf
add
push
sbb
add
add
xor
add
add
push
add
adc
mov
add
push
inc
or
add
ja
add
cld
add
add
add
add
add
add
add
add
add
add
or
push
rcl
add
push
es
inc
or
add
popf
(bad)
(bad)
inc
add
add
add
add
add
add
add
jbe
add
xchg
add
add
add
add
cmp
or
or
(bad)
rcl
add
add
mov
mov
loopne
pop
or
cmp
(bad)
call
sub
push
sbb
xor
sub
add
push
pushf
add
add
fadd
add
es
sbb
sub
push
sbb
cmp
(bad)
inc
popa
pop
adc
add
add
cdq
(bad)
(bad)
call
or
fs
(bad)
call
aam
add
sbb
add
dec
add
push
sub
or
cmp
(bad)
call
retf
add
push
and
lods
mov
imul
or
cmp
(bad)
(bad)
call
or
das
(bad)
(bad)
call
push
add
add
xchg
cmp
aas
and
jecxz
pop
or
sbb
sbb
(bad)
call
into
add
push
es
sbb
cmp
xlat
add
push
pop
sbb
add
add
adc
data16
add
add
adc
adc
inc
add
add
add
adc
or
push
rcl
add
add
pop
inc
or
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
enter
add
sbb
es
pop
inc
add
add
je
add
pop
or
push
add
add
jle
pusha
dec
and
pop
push
popa
or
push
inc
or
add
mov
(bad)
call
add
add
add
add
add
add
add
add
fld
add
es
or
data16
(bad)
call
fadd
add
and
jmp
or
push
or
cmp
(bad)
call
fiadd
add
sbb
xor
sub
add
sub
(bad)
(bad)
call
push
add
add
or
sbb
cmp
(bad)
call
push
add
add
or
sbb
cmp
push
add
add
or
push
or
or
cmp
(bad)
(bad)
call
aam
add
sbb
cmp
(bad)
(bad)
call
push
add
add
or
add
sub
add
sub
or
(bad)
(bad)
call
aad
add
pop
sbb
add
sub
add
adc
outs
add
add
add
add
xor
add
add
push
add
adc
push
add
mov
add
jp
add
mov
add
add
add
add
add
mov
add
add
fiadd
add
es
int3
add
push
and
mov
and
dec
and
pop
or
pop
inc
or
add
xchg
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
outs
add
add
add
sub
add
add
add
add
or
(bad)
rcr
add
push
sbb
add
add
jb
(bad)
call
or
mov
push
add
add
cmp
(bad)
call
sub
or
sub
sbb
xor
sub
add
inc
(bad)
(bad)
jmp
dec
pop
or
or
jle
(bad)
call
push
add
add
jb
xor
adc
shl
cmp
sub
add
sub
or
or
push
(bad)
(bad)
call
push
add
add
sbb
add
sub
add
or
or
inc
(bad)
(bad)
call
rol
add
sbb
add
sub
xor
add
add
add
add
sbb
push
inc
push
add
add
add
add
add
add
add
fwait
add
add
add
add
or
push
rcl
add
add
or
add
add
add
aas
add
add
add
ja
add
sub
add
sub
or
inc
add
add
add
add
add
add
add
fild
add
sub
or
mov
xlat
add
push
push
push
xor
sub
add
pop
inc
add
add
adc
add
sbb
sbb
xchg
rcl
add
push
cmp
(bad)
call
sub
sbb
jge
(bad)
call
push
add
add
sbb
add
sub
add
or
or
data16
(bad)
call
aad
add
push
sbb
add
sub
add
sub
xor
fld
add
or
add
sbb
push
inc
push
add
add
add
xor
add
xor
add
inc
add
add
add
add
or
adc
fiadd
add
and
mov
push
and
or
or
add
add
add
add
add
add
add
add
add
add
add
sub
add
sbb
fnop
fiadd
add
sbb
sub
rcl
add
add
sbb
add
sub
add
sbb
pop
inc
add
add
add
add
add
add
add
add
add
add
add
fadd
add
sub
or
xchg
shl
add
push
and
nop
js
and
cmps
dec
pop
or
push
add
arpl
add
add
pop
add
add
or
aaa
(bad)
(bad)
call
sub
sbb
popa
(bad)
(bad)
call
fild
add
add
add
add
xor
add
add
add
add
adc
or
or
loope
add
sbb
es
inc
or
add
retf
inc
add
add
add
add
add
add
add
add
add
add
jle
add
xchg
add
add
or
or
rcl
pop
add
add
or
sbb
sbb
sub
shl
add
push
adc
sub
add
sub
sbb
sub
add
sbb
sub
push
es
inc
or
add
sbb
add
movs
(bad)
(bad)
call
add
add
add
add
add
adc
fld
add
sbb
cmp
(bad)
call
fadd
add
sbb
add
arpl
add
sub
or
or
dec
(bad)
(bad)
call
fadd
add
es
popa
pop
inc
pop
inc
add
add
test
(bad)
call
or
sub
(bad)
call
loopne
add
push
push
add
sub
add
adc
cmp
add
sub
add
xor
add
add
add
add
adc
fadd
add
push
inc
or
add
mov
add
mov
add
push
add
add
add
add
add
add
fwait
add
add
fiadd
add
es
or
push
rcl
add
add
pop
inc
or
add
fwait
(bad)
(bad)
inc
add
add
add
sbb
add
aaa
add
add
add
dec
add
add
add
js
add
push
or
or
rcl
fld
add
sub
rcl
add
add
sub
add
sub
or
mov
loope
add
and
out
fidivr
pop
or
push
or
or
cdq
rcl
add
add
cmp
(bad)
jmp
dec
sbb
(bad)
call
sub
sbb
(bad)
call
pop
add
add
push
or
or
ins
(bad)
(bad)
call
fadd
add
push
sbb
add
add
popa
pop
sub
add
add
retf
call
cmp
(bad)
call
pop
add
add
add
sub
add
adc
adc
clc
add
add
add
sbb
push
inc
push
add
add
add
pop
add
add
add
add
pop
inc
add
add
xor
add
sbb
adc
loope
add
and
mov
movs
call
push
add
add
add
add
add
add
add
add
add
pop
add
add
sub
or
fcmovnbe
pop
add
add
fs
sub
and
or
add
sub
add
push
sbb
mov
push
sbb
cmp
(bad)
call
or
lods
rcr
add
push
and
pop
mov
mov
push
or
push
(bad)
(bad)
call
or
nop
rcl
add
add
or
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
fild
add
sub
or
pop
(bad)
(bad)
call
fiadd
add
sbb
add
sub
add
sub
xor
add
add
add
add
sbb
push
inc
push
add
add
add
add
add
xor
add
add
add
add
pop
inc
add
add
xchg
add
add
or
or
pop
add
add
or
or
add
add
add
add
add
add
add
add
out
add
push
sbb
fcmovnbe
loope
add
and
and
or
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
loopne
add
sub
or
mov
push
sbb
cmp
(bad)
call
or
nop
shl
add
push
sbb
xor
sub
add
or
inc
(bad)
(bad)
call
sub
sbb
jno
(bad)
call
fld
add
sbb
add
adc
adc
popf
add
add
add
adc
sub
or
adc
pop
add
add
je
cmps
jnp
mov
in
pop
or
pop
inc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
or
das
add
popa
pop
jl
inc
add
add
add
add
sbb
sub
sub
add
sub
or
or
ret
rcl
add
add
or
push
inc
or
add
(bad)
inc
add
add
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
call
loope
add
es
or
mov
loope
add
push
or
add
sub
add
adc
adc
jecxz
add
or
add
sbb
push
inc
push
add
add
add
add
add
add
add
add
add
add
add
bound
add
pop
or
or
pop
add
add
push
add
add
add
add
add
cmp
add
dec
add
add
add
add
pop
inc
add
add
add
add
sbb
sub
or
enter
add
and
js
and
test
push
pop
or
sbb
sbb
mov
pop
add
add
add
sub
add
sbb
lahf
rcl
add
add
(bad)
(bad)
call
or
mov
in
add
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
loop
add
sub
or
pop
(bad)
(bad)
call
loopne
add
and
dec
mov
cs
or
add
add
xor
add
add
adc
or
pop
add
add
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
dec
add
add
add
jl
add
call
(bad)
rcr
add
push
sbb
add
add
pop
or
inc
add
add
add
add
add
add
add
add
add
add
add
jecxz
add
sub
or
mov
push
sbb
pop
or
xchg
shl
add
push
adc
popa
pop
dec
pop
inc
add
add
pop
add
add
or
jbe
(bad)
call
fiadd
add
sub
add
sbb
fs
(bad)
call
fadd
add
es
sub
pop
or
(bad)
call
in
add
and
imul
pop
or
push
inc
push
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
call
or
sbb
(bad)
call
loopne
add
and
sbb
add
stos
mov
add
add
add
xor
add
add
add
add
sbb
push
inc
push
add
add
add
add
add
add
add
add
add
add
pop
inc
add
add
popf
add
add
or
or
adc
fiadd
add
and
call
pop
or
or
add
add
add
add
add
add
add
add
xchg
add
sbb
sub
rcl
add
add
sbb
inc
xchg
or
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
in
add
sub
or
mov
add
inc
addr16
and
or
add
sub
add
sbb
adc
add
add
pop
(bad)
(bad)
call
or
outs
(bad)
(bad)
call
pop
add
add
mov
retf
sub
aas
addr16
and
cmp
(bad)
(bad)
call
or
push
(bad)
(bad)
call
pop
add
add
sbb
add
sub
add
sub
adc
adc
inc
add
add
add
adc
arpl
sub
shr
add
push
es
inc
or
add
ret
inc
add
add
add
and
add
add
add
jp
add
lods
add
add
add
add
add
add
enter
add
es
sub
push
and
sub
or
or
sub
add
das
pop
inc
add
add
mov
or
xchg
shl
add
push
and
and
das
(bad)
pop
and
es
add
push
es
or
jne
(bad)
call
cmc
add
push
adc
cmp
(bad)
call
sbb
add
and
ins
(bad)
aam
pop
or
push
inc
or
add
lods
(bad)
(bad)
jmp
(bad)
jmp
add
add
add
add
add
add
(bad)
call
or
daa
(bad)
(bad)
call
call
sbb
pop
or
cmp
(bad)
(bad)
call
in
add
push
sbb
jnp
add
sub
(bad)
(bad)
(bad)
call
sbb
add
push
or
sbb
cmp
(bad)
(bad)
call
sbb
add
sbb
add
add
mov
sub
(bad)
(bad)
call
sbb
add
add
sub
xor
add
add
push
add
adc
or
adc
sbb
add
and
mov
and
or
pop
inc
or
add
mov
add
add
add
xor
add
inc
add
add
add
add
add
add
add
mov
sub
sbb
(bad)
rcr
add
add
pop
add
sub
add
mov
sbb
add
sbb
add
sub
add
or
or
pushf
rcr
add
add
sub
add
popa
pop
jno
inc
add
add
mov
(bad)
call
or
js
(bad)
call
sbb
add
and
out
and
es
add
push
sbb
cmp
(bad)
call
jmp
sbb
add
sub
add
or
inc
(bad)
(bad)
call
sbb
add
es
xor
repnz
push
sbb
es
inc
or
add
leave
(bad)
(bad)
(bad)
jns
(bad)
dec
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
cmp
add
add
(bad)
call
or
add
(bad)
call
out
add
sbb
add
sub
add
sub
add
sub
(bad)
call
icebp
add
push
push
sbb
add
sub
add
adc
outs
add
add
adc
adc
ret
add
add
sbb
push
inc
push
add
add
add
dec
add
add
add
dec
add
add
add
and
add
pop
or
push
rcr
add
add
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
popa
pop
pusha
pop
inc
add
add
sbb
add
pop
or
scas
sbb
rcl
sbb
add
and
cmp
or
sbb
in
or
xchg
sbb
mov
sbb
add
add
add
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
out
add
sub
or
jl
(bad)
call
sbb
add
and
je
push
and
inc
sbb
add
add
adc
adc
call
add
adc
or
or
push
shr
add
push
sbb
xor
sub
add
inc
push
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
sub
add
sbb
aam
out
add
push
and
dec
inc
fist
or
sbb
sub
or
mov
out
add
push
pop
sbb
add
sub
add
inc
push
add
add
add
add
add
or
add
lods
(bad)
(bad)
jmp
(bad)
(bad)
call
or
xchg
sbb
add
sbb
popa
pop
xor
add
add
mov
(bad)
call
or
imul
add
push
sbb
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
call
sub
or
ss
(bad)
call
icebp
add
push
sbb
add
adc
adc
sub
add
push
add
adc
mov
add
push
or
adc
jmp
add
and
dec
and
or
pop
inc
or
add
mov
add
add
add
push
add
add
add
add
add
add
mov
add
cmps
add
add
or
or
rcl
call
shr
add
push
es
sub
rcr
add
add
add
sub
pop
or
cmc
add
push
pop
sbb
add
sub
add
or
cwde
rcr
add
add
pop
xor
sub
add
pop
add
pop
inc
add
add
add
add
sbb
sub
sub
pop
or
imul
call
repnz
push
sbb
es
or
or
pop
(bad)
(bad)
call
jmp
add
and
imul
ror
es
or
inc
(bad)
(bad)
call
out
add
and
dec
and
or
push
inc
or
add
push
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
(bad)
aas
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
inc
or
add
(bad)
call
sbb
add
sbb
add
sub
add
adc
adc
jmp
add
adc
or
or
or
sbb
add
sbb
push
add
add
(bad)
(bad)
inc
add
add
add
add
add
jo
add
mov
add
add
pop
inc
add
add
sbb
add
pop
or
or
int
in
add
push
and
pop
push
sub
sbb
out
or
mov
sbb
add
sbb
add
add
inc
push
add
add
add
add
add
add
add
add
add
add
or
test
sbb
add
and
add
aaa
pop
or
sbb
sub
add
sub
or
pusha
(bad)
(bad)
call
hlt
add
push
sbb
sub
or
inc
add
add
add
add
add
jmp
or
sub
sbb
add
add
add
add
xor
add
add
add
add
adc
mov
or
push
shl
add
push
es
inc
or
add
retf
(bad)
(bad)
inc
add
add
add
sbb
add
add
add
add
add
pop
add
add
aam
sbb
add
sub
lock
sub
shl
add
push
adc
pop
add
sub
or
mov
out
add
sbb
sbb
out
add
push
sbb
sbb
sub
push
sbb
xor
sub
add
in
add
push
sbb
es
inc
or
add
scas
(bad)
(bad)
dec
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
call
jmp
add
sbb
sub
add
popa
pop
dec
pop
inc
add
add
jne
(bad)
call
or
cmp
(bad)
call
in
add
sbb
add
sub
add
adc
adc
or
add
or
add
pop
or
inc
push
add
add
add
add
add
inc
add
add
add
add
add
or
push
shl
add
push
or
add
add
add
adc
add
cmp
add
ins
add
add
add
add
or
or
fcom
hlt
add
push
sbb
xor
sub
add
pop
inc
add
add
dec
add
add
or
mov
sbb
add
and
mov
and
add
sub
or
inc
add
add
add
add
add
in
add
push
sub
or
jp
(bad)
call
sbb
add
sbb
cmp
(bad)
call
sub
(bad)
(bad)
call
sbb
add
and
bound
and
xor
pop
or
pop
or
cmp
(bad)
call
sbb
add
cmp
add
xchg
add
push
sbb
das
(bad)
(bad)
call
sbb
add
push
sbb
add
add
sub
adc
adc
add
add
add
adc
fld
add
sbb
sub
shr
add
push
push
or
pop
inc
or
add
leave
(bad)
(bad)
inc
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
add
xchg
add
push
sub
or
enter
add
sbb
xor
sub
add
or
sub
sbb
xor
sub
add
sbb
xchg
add
add
or
or
cwde
rcr
add
add
pop
xor
sub
add
or
or
test
repnz
push
push
push
xor
sub
add
inc
or
add
sbb
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
in
add
push
sbb
cmp
(bad)
call
jmp
add
sub
add
mov
pop
sbb
add
add
jg
(bad)
call
(bad)
call
out
add
and
xor
and
iret
cmp
popa
or
sbb
sbb
cmp
(bad)
(bad)
call
jmp
add
sub
add
adc
cmp
add
sub
add
xor
add
add
add
add
sbb
sbb
push
rcr
add
add
sbb
add
sub
add
inc
pop
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
mov
add
ret
add
sbb
pop
inc
add
add
add
add
add
out
add
push
sub
or
mov
repnz
push
sbb
xor
sub
add
push
add
add
fild
add
pop
or
call
or
push
add
popa
pop
ss
inc
add
add
adc
add
sbb
sbb
cmp
(bad)
call
call
or
push
sub
sbb
sbb
gs
(bad)
call
sbb
add
and
enter
or
push
inc
push
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
or
cs
(bad)
call
sbb
add
and
xchg
push
adc
jmp
dec
and
sbb
adc
sbb
add
sbb
xor
sub
add
sub
adc
adc
inc
add
add
add
adc
or
adc
in
add
push
and
xor
pop
inc
popa
or
pop
inc
or
add
mov
add
add
add
add
add
add
add
add
add
test
add
call
add
or
sub
shl
add
push
pop
or
sbb
sbb
or
mov
push
sbb
popa
pop
aaa
pop
inc
add
add
loop
(bad)
call
or
or
popf
rcr
add
add
sbb
add
sub
add
pop
or
sub
push
sbb
add
sub
add
or
cmp
(bad)
call
sbb
add
sbb
es
sbb
cmp
(bad)
call
cmc
add
push
sbb
es
pop
or
push
(bad)
(bad)
call
in
add
push
es
or
cmp
(bad)
call
sbb
add
pop
sbb
add
add
inc
or
add
add
add
adc
add
movs
(bad)
(bad)
call
add
add
add
add
jmp
add
push
sbb
cmp
(bad)
(bad)
call
in
add
push
add
fwait
add
push
sub
cmp
(bad)
(bad)
call
in
add
push
and
stos
and
add
sub
adc
adc
adc
add
push
add
adc
loopne
add
sbb
sub
shr
add
push
and
lock
inc
and
mov
jnp
or
pop
inc
or
add
mov
add
add
add
add
add
add
add
add
add
mov
add
mov
or
(bad)
rcr
add
add
push
xor
sub
add
or
or
ret
add
push
add
lahf
add
push
sub
sub
add
pop
xor
sub
add
inc
or
add
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
inc
add
add
(bad)
(bad)
call
or
jbe
(bad)
call
in
add
push
es
add
push
es
(bad)
call
sbb
add
and
adc
fadd
pop
or
push
or
or
dec
(bad)
(bad)
call
sbb
add
sbb
xor
sub
add
or
xchg
add
popa
pop
inc
pop
inc
add
add
pop
add
add
or
jge
(bad)
call
cmp
(bad)
(bad)
call
out
add
push
add
sub
adc
adc
out
add
or
add
sbb
sbb
or
sbb
add
push
or
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
push
add
add
sub
or
or
fnop
cmc
add
push
pop
or
push
inc
push
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
or
scas
rcr
add
add
xchg
stc
xchg
js
or
add
pop
inc
add
add
lods
(bad)
(bad)
call
or
or
mov
cmc
add
push
sbb
xor
sub
add
cmps
add
sub
or
push
(bad)
call
in
add
push
or
sub
or
inc
add
add
add
icebp
add
push
sub
or
aaa
(bad)
(bad)
call
sbb
add
sbb
add
add
sub
adc
adc
add
add
push
add
adc
aaa
sbb
sub
rcr
add
add
pop
inc
or
add
into
(bad)
(bad)
inc
add
add
add
add
add
pop
add
add
add
je
add
mov
add
sbb
cmp
add
add
popa
pop
cs
inc
add
add
add
add
sbb
sub
sub
sbb
sub
add
push
xor
sub
add
or
or
movs
rcr
add
add
inc
ins
shr
lods
pop
push
xor
add
cmps
add
push
sub
or
mov
sbb
add
es
cmp
(bad)
call
sbb
add
sbb
sbb
(bad)
call
sbb
add
es
inc
or
add
retf
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
dec
(bad)
(bad)
jmp
add
add
add
add
repnz
push
es
or
xor
(bad)
call
sbb
add
sbb
xor
sub
add
cmp
(bad)
(bad)
call
repz
push
pop
pop
add
sub
add
adc
add
add
adc
adc
cmp
add
push
add
adc
or
push
shr
add
push
es
inc
or
add
enter
add
add
sbb
add
aas
add
add
add
imul
add
add
add
add
add
inc
add
add
pop
add
add
sub
shl
add
push
sbb
cmp
add
mov
sbb
sbb
icebp
add
push
and
push
fs
and
loope
add
es
add
push
sbb
pop
or
sub
push
es
or
jns
(bad)
call
sbb
add
and
cwde
scas
push
jo
or
sbb
sbb
or
or
pop
(bad)
(bad)
call
out
add
push
and
adc
add
(bad)
imul
pop
or
sbb
sbb
cmp
(bad)
call
jmp
add
sbb
add
sub
add
or
sub
(bad)
call
repnz
push
pop
or
push
inc
or
add
push
(bad)
dec
(bad)
jmp
(bad)
jmp
(bad)
(bad)
dec
(bad)
call
(bad)
call
(bad)
(bad)
call
or
idiv
(bad)
call
jmp
cmp
(bad)
(bad)
call
call
push
push
mov
and
or
add
sub
adc
adc
pop
add
add
add
adc
or
push
rcr
add
add
pop
inc
or
add
enter
add
add
adc
add
sub
add
xor
add
inc
add
add
add
xchg
add
add
add
add
or
or
int3
shr
add
push
sbb
add
sub
add
or
or
mov
push
sbb
xor
sub
add
or
cmps
rcr
add
add
shl
add
push
es
sbb
add
sbb
es
inc
or
add
adc
add
push
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
or
popa
(bad)
(bad)
call
sbb
add
pop
or
sbb
test
or
les
sub
sbb
cmp
call
hlt
add
push
pop
or
sbb
pop
or
cmp
(bad)
(bad)
call
sbb
add
push
or
add
popa
pop
jbe
inc
add
add
ret
call
or
adc
(bad)
call
repz
push
and
xlat
fwait
ins
and
xchg
pop
pop
or
sbb
cmp
(bad)
(bad)
call
sbb
add
sbb
add
sub
adc
adc
test
add
pop
or
inc
push
add
add
add
scas
add
add
add
add
add
add
add
add
or
adc
jmp
fistp
outs
add
inc
pop
or
or
add
add
add
xor
add
inc
add
add
add
jnp
add
sub
or
inc
add
add
add
add
add
add
add
cmc
add
push
sub
or
mov
push
sbb
pop
or
ja
(bad)
call
or
cmps
rcr
add
add
add
sub
add
push
pop
or
xchg
rcr
add
add
sbb
add
add
dec
(bad)
(bad)
call
sub
sbb
jns
(bad)
call
out
add
push
and
mov
and
or
add
pop
inc
add
add
aad
(bad)
call
or
or
dec
(bad)
(bad)
call
lock
push
pop
push
xor
sub
add
sub
adc
adc
in
add
add
add
adc
or
or
sbb
add
sbb
or
add
into
(bad)
(bad)
inc
add
add
add
add
add
add
add
bound
add
xchg
add
popf
add
add
and
sub
or
or
iret
rcr
add
add
sbb
add
add
or
mov
push
es
inc
or
add
inc
add
add
add
add
inc
add
add
(bad)
(bad)
(bad)
mov
or
(bad)
rcr
add
add
sbb
pop
or
jle
(bad)
call
sbb
add
es
pop
inc
add
add
xchg
(bad)
(bad)
call
or
(bad)
(bad)
(bad)
call
sbb
add
push
sbb
add
sub
add
add
stos
add
push
sub
or
or
inc
(bad)
(bad)
call
sbb
add
es
add
push
sbb
sbb
cmp
(bad)
(bad)
call
sbb
add
add
sub
xor
add
add
add
add
adc
mov
or
push
rol
add
push
es
inc
or
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
ins
add
add
add
add
add
add
inc
or
add
mov
add
bound
add
pop
add
mov
add
mov
add
stos
add
add
add
inc
add
add
or
lods
rcr
add
add
or
pop
or
mov
add
xor
sub
add
or
mov
push
add
push
sbb
sbb
inc
push
or
jl
(bad)
call
or
add
and
lds
pop
popa
or
shl
add
push
es
or
cmp
(bad)
call
test
push
sbb
cmp
(bad)
inc
popa
pop
or
add
mov
or
or
ss
(bad)
call
sbb
add
sbb
xor
sub
add
sub
pop
or
or
sbb
(bad)
call
inc
add
and
sar
ins
dec
pop
or
pop
or
or
std
(bad)
(bad)
call
or
add
sbb
xor
sub
add
adc
push
add
add
adc
adc
add
add
or
add
sbb
sbb
adc
or
add
and
xor
or
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
dec
add
add
add
and
inc
add
add
sbb
add
pop
or
or
int
sbb
add
and
adc
mov
sbb
out
or
or
mov
or
xor
dec
add
push
pop
xchg
jp
or
sbb
pushf
ror
add
push
sbb
add
mov
add
sub
or
inc
add
add
add
add
add
add
add
clc
add
push
sub
or
arpl
(bad)
call
sbb
add
and
outs
gs
sbb
or
push
inc
push
add
add
(bad)
(bad)
jnp
(bad)
jmp
(bad)
(bad)
call
(bad)
call
or
sub
(bad)
call
sbb
add
and
sbb
and
or
add
adc
adc
ret
add
add
add
pop
or
inc
push
add
add
add
add
add
add
add
add
or
adc
add
add
and
jnp
pusha
and
or
or
add
add
add
xor
add
dec
add
add
push
or
inc
add
add
add
add
add
add
add
add
add
add
add
stc
add
push
sub
or
ret
add
add
or
add
pop
inc
add
add
adc
add
sbb
sbb
movs
ror
add
push
sbb
(bad)
(bad)
call
sub
pop
or
pop
(bad)
(bad)
inc
add
mov
add
pop
or
adc
add
add
sbb
add
sub
add
sub
adc
adc
mov
add
adc
ja
add
push
inc
or
add
inc
add
add
add
add
add
jl
add
inc
add
add
add
add
push
add
add
cli
add
push
sbb
sub
rcr
add
add
or
pop
inc
add
(bad)
(bad)
inc
add
add
add
and
add
push
add
add
lods
sbb
sub
rcr
add
add
sbb
add
sub
add
sub
pop
or
(bad)
sub
pop
or
mov
popa
pop
dec
pop
inc
add
add
pop
add
add
or
jae
(bad)
call
sub
sbb
sub
sbb
xor
sub
add
or
or
nop
rcr
add
add
add
sub
adc
adc
mov
add
or
add
sbb
pop
or
push
rcr
add
add
add
sub
add
inc
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
push
inc
push
add
add
add
sub
add
add
add
and
add
and
add
sub
add
add
pop
inc
add
add
push
add
add
or
or
mov
sbb
add
sbb
lock
pop
or
cmps
rcr
add
add
add
sub
pop
or
inc
add
add
add
add
add
add
add
add
add
add
add
sti
add
push
sub
or
outs
(bad)
(bad)
call
std
add
push
sbb
xor
sub
add
sub
add
xor
add
add
add
add
sbb
sbb
push
ror
add
push
sbb
add
sub
add
inc
push
add
add
(bad)
(bad)
inc
add
add
add
add
add
pop
add
add
pop
add
sub
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
cld
add
push
sub
or
mov
add
add
sbb
pop
or
movs
ror
add
push
sbb
es
pop
inc
add
add
inc
add
add
or
mov
sbb
add
es
inc
push
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
call
or
pop
(bad)
(bad)
call
cli
add
push
and
movs
cvtdq2ps
es
or
lds
sub
sbb
aas
(bad)
(bad)
call
add
add
add
add
add
xor
add
add
add
add
adc
add
add
inc
or
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
sar
add
push
sbb
sub
rcr
add
add
sbb
add
sub
add
inc
push
add
add
add
add
add
add
add
add
add
add
add
sbb
sub
rcr
add
add
out
pop
or
or
leave
ror
add
sbb
cmp
(bad)
inc
popa
sbb
add
add
fdivr
(bad)
call
or
stos
rcr
add
add
cmp
(bad)
inc
sub
add
push
sub
or
push
(bad)
(bad)
jmp
adc
or
or
mov
push
add
push
push
pop
xor
sub
add
adc
push
add
add
adc
adc
inc
add
push
add
adc
xchg
add
add
inc
or
add
cmp
add
outs
add
add
add
mov
add
test
add
add
add
test
inc
add
es
sbb
sub
rol
add
push
sbb
xor
sub
add
inc
pop
add
add
add
add
add
add
add
add
add
jle
add
sbb
sbb
sub
rcr
add
add
test
aaa
and
or
sbb
sub
push
sbb
xor
sub
add
ins
(bad)
(bad)
inc
pop
inc
add
add
xlat
(bad)
(bad)
call
or
or
xchg
rol
add
push
and
hlt
mov
cmp
(bad)
call
or
jns
(bad)
call
adc
add
sbb
add
sub
add
push
sub
cmp
(bad)
(bad)
jmp
adc
sbb
(bad)
call
or
push
(bad)
(bad)
call
sbb
add
add
sub
adc
adc
jmp
add
or
add
sbb
sbb
push
shl
add
push
sbb
add
sub
add
inc
push
add
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
jge
add
add
sub
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
sub
or
mov
add
add
and
std
inc
and
fisttp
das
pop
or
sub
sbb
and
or
or
xchg
rcr
add
add
or
sbb
mov
sbb
add
sbb
sub
add
or
or
jae
(bad)
call
sbb
add
sbb
xor
sub
add
inc
push
add
add
jmp
(bad)
jmp
(bad)
(bad)
inc
add
add
inc
pop
inc
add
add
cdq
(bad)
(bad)
call
or
xor
(bad)
call
sbb
add
add
add
xor
add
add
add
add
sbb
push
inc
push
add
add
add
mov
add
add
add
mov
add
add
add
inc
add
add
inc
add
add
imul
sub
ror
add
push
and
leave
mov
popa
or
or
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
(bad)
add
or
sub
rol
add
push
push
sbb
add
sub
add
or
or
mov
push
pop
or
cmp
(bad)
call
sub
pop
or
cmps
rol
add
push
pop
sbb
add
sub
add
add
rol
add
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
data16
(bad)
call
sbb
add
add
add
adc
adc
rol
add
add
sbb
push
inc
push
add
add
add
add
add
add
add
add
add
add
add
sbb
push
ror
add
push
push
sbb
add
sub
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
sub
sbb
(bad)
sbb
add
sbb
sbb
rcl
add
add
es
pop
inc
add
add
fdivr
(bad)
call
or
mov
or
mov
sbb
add
cmp
(bad)
inc
add
xlat
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
jns
(bad)
call
add
add
add
add
add
xor
add
add
add
add
adc
mov
inc
or
add
sub
add
jp
add
sub
add
mov
add
add
add
dec
add
add
or
push
sar
add
push
es
inc
pop
add
add
add
add
add
sub
add
inc
add
add
add
add
fild
add
sub
or
sub
rol
add
push
push
sbb
add
sub
es
add
add
sbb
sub
push
cmp
(bad)
call
or
test
push
and
or
sub
or
pusha
(bad)
(bad)
inc
pop
inc
add
add
adc
add
sbb
js
(bad)
call
sbb
add
cmp
sub
pop
or
or
popa
(bad)
(bad)
call
add
add
sbb
xor
sub
add
push
(bad)
(bad)
jmp
add
adc
push
add
add
add
add
xor
add
add
adc
or
or
push
sar
add
push
push
sbb
add
sub
add
inc
or
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
add
mov
add
add
add
add
inc
push
add
add
add
add
add
pop
add
add
add
pop
add
add
add
sub
add
add
xchg
add
add
add
add
sbb
add
pop
push
xor
sub
add
or
sub
add
push
add
sub
add
sub
add
push
sub
or
jne
(bad)
call
clc
add
push
and
push
cdq
and
bnd
pop
or
add
fild
add
sub
or
inc
push
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
sub
or
cs
(bad)
call
push
add
push
and
sub
sub
cmp
sub
(bad)
(bad)
call
sbb
add
pop
or
pop
or
(bad)
(bad)
(bad)
call
sbb
add
sbb
sbb
out
(bad)
(bad)
call
pop
add
push
add
add
add
xor
add
add
add
add
sbb
sbb
push
rcr
add
add
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
data16
add
add
add
or
(bad)
rcr
add
add
add
popa
pop
das
pop
inc
add
add
push
add
add
or
mov
add
push
inc
push
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
inc
add
inc
add
add
add
sbb
xchg
rol
add
push
and
xchg
inc
and
test
popa
or
sbb
pop
or
jp
(bad)
call
or
add
es
or
mov
or
data16
(bad)
call
sbb
add
and
mov
sub
pop
or
add
in
add
sbb
(bad)
call
sti
add
push
sbb
xor
sub
add
sbb
pop
inc
add
add
add
add
add
add
add
add
add
sub
or
push
(bad)
(bad)
call
stc
add
push
adc
adc
adc
in
add
push
add
adc
pusha
push
inc
or
add
sub
add
cmp
add
cmp
add
lods
add
add
add
add
add
add
add
or
push
sar
add
push
es
inc
push
add
add
add
add
add
add
add
add
add
jne
add
rol
pop
or
or
(bad)
rcr
add
add
push
add
bound
add
add
sbb
add
sbb
sbb
sub
push
sbb
add
sub
add
jbe
(bad)
call
sub
pop
or
or
popf
rcr
add
add
movs
fld
and
sbb
cmp
(bad)
call
or
jg
(bad)
call
inc
add
and
or
and
inc
pop
or
cmp
(bad)
(bad)
inc
add
push
sub
or
daa
(bad)
(bad)
jmp
add
adc
data16
add
add
add
xor
add
add
add
add
sbb
push
inc
push
add
add
add
add
add
mov
add
cmc
add
add
add
or
push
ror
add
push
sbb
sub
add
inc
or
add
test
(bad)
inc
add
add
add
add
add
js
add
movs
add
add
add
call
iret
rcr
add
add
call
push
es
pop
or
sub
rol
add
push
sub
or
lods
rcr
add
add
sbb
add
sub
add
add
in
add
push
sub
or
inc
push
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
call
push
add
push
sub
or
push
sbb
add
es
pop
inc
add
add
das
add
add
(bad)
call
cmp
(bad)
call
stc
add
push
and
retf
shl
sbb
sbb
(bad)
call
sbb
add
pop
or
cmp
(bad)
(bad)
call
sub
sbb
sbb
adc
(bad)
call
sbb
add
add
add
adc
adc
in
add
or
add
push
or
or
push
rcl
add
push
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
xchg
add
add
inc
push
add
add
add
add
add
js
add
mov
add
js
add
js
add
add
pop
inc
add
add
dec
add
add
or
mov
pop
add
push
sub
or
inc
add
add
add
add
add
pop
add
push
sub
or
adc
add
push
and
gs
and
inc
push
pop
or
sbb
sub
or
arpl
(bad)
call
sti
add
push
and
loopne
and
cmp
push
(bad)
inc
add
lock
push
sbb
ds
(bad)
call
cld
add
push
es
or
or
das
(bad)
(bad)
call
sbb
add
add
add
add
xor
add
add
or
add
push
or
or
push
rcr
add
add
push
xor
sub
add
inc
pop
add
add
(bad)
(bad)
inc
add
add
add
and
add
add
add
mov
add
sbb
sbb
sub
sar
add
push
sbb
repnz
retf
shl
add
push
and
xor
fist
pop
or
push
or
or
mov
sbb
add
and
push
and
pushf
fwait
and
es
inc
push
add
add
add
add
add
retf
call
add
sbb
add
retf
inc
pop
inc
add
add
mov
or
ins
(bad)
(bad)
call
sbb
add
add
sub
push
or
inc
add
add
add
add
add
add
add
add
add
add
add
or
add
sub
or
xor
sbb
add
push
sbb
add
add
or
and
(bad)
call
or
pop
xor
sub
add
sub
xor
add
add
add
add
sbb
pop
or
push
rcr
add
add
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
jo
add
add
add
inc
push
add
add
add
add
add
add
add
add
add
add
pop
inc
add
add
inc
add
add
or
or
scas
rcr
add
add
pop
or
movs
rcr
add
add
dec
push
jmp
sbb
sub
add
push
sbb
test
test
add
and
inc
call
es
sub
(bad)
(bad)
call
add
add
sbb
or
inc
add
add
add
add
add
add
add
add
add
add
add
or
add
sub
or
xor
sbb
add
and
push
popf
mov
sub
adc
adc
push
add
add
add
adc
or
push
sar
add
push
es
inc
or
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
aas
add
add
add
add
pop
add
stos
add
add
add
add
add
add
or
sub
rcl
add
push
sbb
xor
sub
add
popa
pop
mulps
add
add
add
sbb
sub
add
sbb
add
sub
add
or
sub
add
sbb
add
add
clc
add
push
sub
js
(bad)
call
sbb
add
sbb
pop
or
imul
add
add
sbb
add
sub
add
out
or
push
(bad)
(bad)
call
sbb
add
and
mov
mov
ror
add
push
es
or
cmp
(bad)
(bad)
call
sbb
add
push
sbb
add
sub
add
or
cmp
(bad)
(bad)
call
push
add
push
and
repnz
lods
pusha
pop
or
sbb
add
(bad)
call
sbb
add
es
inc
or
add
dec
(bad)
(bad)
call
(bad)
inc
(bad)
dec
dec
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
call
sbb
add
push
sbb
add
sub
add
adc
push
add
add
add
xor
add
add
add
add
adc
or
or
sbb
add
push
or
pop
inc
pop
add
add
(bad)
(bad)
inc
add
add
add
add
add
jb
add
add
add
sbb
fcom
sbb
add
sbb
or
add
jne
add
int3
(bad)
(bad)
dec
add
jne
add
jne
add
add
add
add
add
add
ror
add
push
es
sahf
rcr
add
add
add
jp
fldenv
sub
or
pop
or
mov
or
jle
(bad)
call
sbb
add
and
jnp
and
or
sbb
arpl
(bad)
call
sbb
add
add
popa
pop
or
add
(bad)
(bad)
(bad)
call
or
inc
(bad)
(bad)
call
add
add
and
cmc
popa
shl
pop
or
sub
add
push
sub
or
sub
(bad)
call
sbb
add
sbb
xor
sub
add
adc
and
add
sub
add
xor
add
add
add
add
push
or
inc
push
add
add
add
add
add
add
add
push
add
add
pop
inc
add
add
sub
add
sbb
push
rcr
add
add
or
add
add
add
add
add
add
add
add
sbb
sbb
or
movs
sbb
xlat
rol
add
push
and
pop
push
and
pop
mov
pop
or
pop
or
or
mov
add
sbb
add
sub
add
add
add
add
sbb
cmps
rcl
add
push
sbb
(bad)
(bad)
call
or
xchg
rcr
add
add
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
or
add
sub
or
(bad)
(bad)
(bad)
call
sbb
add
and
arpl
and
mov
add
add
xor
add
add
add
add
adc
fs
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
sbb
pop
or
push
rcr
add
add
sbb
add
add
inc
pop
add
add
add
add
add
add
add
popa
add
add
add
sub
inc
add
add
inc
add
add
or
mov
or
(bad)
rcr
add
add
sbb
add
sub
add
jae
(bad)
inc
sub
add
sub
or
test
std
add
push
sbb
sub
add
sbb
sub
sbb
sbb
mov
sar
add
push
sbb
es
sbb
cmp
call
test
sub
(bad)
jmp
add
adc
add
add
sub
adc
adc
fiadd
add
or
add
sbb
push
inc
push
add
add
add
add
add
add
add
add
add
add
or
push
rol
add
push
sbb
sub
add
inc
add
(bad)
(bad)
inc
add
add
add
add
add
jno
add
sbb
outs
sbb
sub
add
push
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
push
sub
or
mov
add
add
adc
(bad)
(bad)
call
or
lahf
ror
pop
xor
sub
add
pop
inc
add
add
pushf
(bad)
(bad)
call
or
jnp
(bad)
call
or
add
es
or
or
ins
(bad)
(bad)
call
sbb
add
and
mov
les
or
add
add
adc
adc
dec
add
add
add
adc
out
add
pop
or
sub
rcr
add
add
sar
cmp
cmp
pop
inc
or
add
mov
(bad)
inc
add
add
add
add
add
cmp
add
add
add
add
add
add
add
or
sub
rcr
add
add
cmp
add
or
add
sub
or
mov
sbb
add
adc
pop
or
sub
add
sub
mov
and
or
inc
pop
or
sbb
sub
or
mov
sbb
add
adc
sbb
cmp
(bad)
call
sbb
add
and
lods
das
and
mov
push
or
or
(bad)
(bad)
(bad)
call
add
add
and
stos
stc
je
arpl
and
ror
add
push
sbb
push
or
inc
(bad)
(bad)
call
sbb
add
sbb
add
sub
add
sub
pop
inc
add
add
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
call
sbb
add
and
mov
dec
and
xchg
xchg
inc
or
add
pop
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
or
fdivr
(bad)
call
sbb
add
add
sub
add
xor
add
add
add
add
adc
jns
add
sbb
sub
sar
add
push
sbb
sub
add
inc
or
add
mov
add
add
add
add
add
add
add
add
add
jo
add
movs
add
add
add
push
sbb
sub
rcr
add
add
or
add
adc
add
sub
sbb
add
es
sub
add
mov
test
dec
or
or
xor
popa
sbb
add
add
jae
add
sbb
sub
push
and
mul
sbb
push
or
ins
(bad)
(bad)
call
sbb
add
es
inc
or
add
push
(bad)
(bad)
jl
(bad)
jmp
add
add
jmp
add
add
add
add
or
cmp
(bad)
call
add
add
push
or
sbb
sbb
cmp
(bad)
(bad)
call
test
push
sbb
add
sub
add
mov
sub
cmp
(bad)
call
sbb
add
add
sub
add
adc
adc
and
add
or
add
sbb
sbb
adc
add
add
and
xchg
pop
or
or
add
add
(bad)
(bad)
inc
add
add
add
add
add
call
add
add
add
push
pop
cmp
add
add
or
rcl
add
sub
xor
repnz
inc
dec
pop
or
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
sub
or
cwde
rcr
add
add
outs
out
pop
and
or
push
inc
push
add
add
add
add
add
add
add
add
add
add
pop
inc
add
add
jge
(bad)
call
cmp
(bad)
call
test
push
pop
sbb
add
sub
add
or
or
cmp
(bad)
call
sbb
add
sbb
xor
sub
add
movs
add
sub
add
sbb
sbb
sbb
add
sbb
xor
sub
add
or
or
push
(bad)
(bad)
call
sbb
add
push
sbb
add
sub
add
sub
add
xor
add
add
adc
sbb
add
sub
add
outs
xchg
add
push
outs
pop
ins
adc
pop
push
adc
sub
rcr
add
add
push
xor
sub
add
cmovne
add
add
add
add
add
add
add
jp
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
lds
add
push
adc
sub
push
sbb
add
sub
add
mov
add
adc
outs
nop
add
or
or
adc
sub
add
sbb
add
sub
add
or
pop
adc
or
or
jnp
add
ror
add
sbb
inc
add
or
push
add
add
inc
add
or
or
cmovo
(bad)
call
adc
cmp
(bad)
call
adc
add
sbb
sub
add
push
or
or
(bad)
(bad)
(bad)
call
adc
add
sbb
add
add
and
popf
sbb
outs
pop
or
and
pop
or
(bad)
(bad)
(bad)
call
sbb
add
sbb
xor
sub
add
js
(bad)
call
or
or
dec
add
add
add
or
add
adc
pop
sbb
aam
popa
rol
sbb
(bad)
(bad)
(bad)
call
sbb
add
sbb
(bad)
or
pop
or
adc
(bad)
(bad)
(bad)
call
sbb
add
es
add
add
add
or
add
or
or
sub
aam
add
pop
lea
add
sbb
pop
adc
push
adc
push
adc
add
adc
sbb
in
add
or
mov
pop
push
mov
mov
add
sbb
or
adc
cmp
(bad)
call
adc
add
and
pushf
repnz
adc
pop
adc
(bad)
(bad)
(bad)
call
sbb
add
es
push
pop
or
or
pabsw
(bad)
call
sbb
add
sbb
(bad)
push
push
push
sub
add
adc
add
pop
pop
and
add
adc
(bad)
std
(bad)
call
adc
mov
rcl
pop
adc
adc
push
popa
or
popa
and
retf
stos
push
outs
pop
pop
adc
sbb
sha256rnds2
(bad)
call
sbb
add
and
inc
pop
jnp
ret
mov
(bad)
(bad)
call
push
ror
and
or
(bad)
(bad)
(bad)
call
adc
outs
pop
or
call
daa
xchg
or
outs
fst
or
jge
(bad)
call
sbb
add
pop
adc
sub
push
adc
outs
xchg
add
and
loop
cmp
pop
add
adc
push
adc
adc
cmp
(bad)
call
sbb
add
adc
push
pop
or
cmp
std
(bad)
call
sbb
add
pop
adc
es
ins
adc
add
add
or
add
or
cmp
call
or
add
adc
jle
add
add
add
adc
push
push
or
add
pop
movlps
cmp
cld
(bad)
call
adc
add
sbb
(bad)
cmp
(bad)
(bad)
call
push
and
add
add
sub
xor
add
add
adc
pop
or
cld
(bad)
call
sbb
add
sbb
xor
sub
add
adc
or
add
sub
add
xor
add
add
adc
sbb
add
sub
add
outs
xchg
add
push
outs
pop
ins
adc
xlat
shl
ret
and
dec
dec
pop
pop
add
add
popa
adc
and
mov
cmp
and
add
add
and
add
mov
xor
adc
add
add
pop
adc
or
pop
pop
or
or
movntps
rcr
add
add
inc
jbe
adc
lods
cmp
pop
adc
adc
inc
adc
add
cmp
(bad)
inc
add
add
add
add
add
add
add
jns
add
call
add
add
add
add
dec
add
add
add
add
add
inc
add
add
add
jp
add
call
push
mov
add
or
pop
adc
movntps
add
cmp
or
movntps
adc
and
xchg
xchg
and
cmp
pop
fs
or
or
add
add
adc
in
add
or
push
add
add
(bad)
(bad)
(bad)
call
adc
add
sbb
xor
sub
add
adc
pop
adc
cmp
(bad)
(bad)
call
sbb
add
and
pushf
repnz
adc
adc
cmp
adc
add
sbb
sub
add
or
lea
add
adc
push
adc
cmp
sbb
add
sbb
lea
add
sbb
add
cmp
(bad)
(bad)
call
adc
add
sbb
add
sub
add
add
add
push
push
push
push
or
out
add
or
mov
add
or
adc
(bad)
(bad)
(bad)
call
sbb
add
push
pop
add
sub
add
push
push
adc
adc
adc
mov
add
sbb
in
add
or
mov
add
add
mov
add
sbb
or
movlps
cmp
(bad)
call
adc
add
and
xor
and
adc
adc
inc
push
jbe
add
add
and
mov
(bad)
(bad)
(bad)
jmp
rcl
call
and
(bad)
mov
add
or
jbe
(bad)
(bad)
(bad)
call
adc
add
pop
popa
or
push
popa
and
sbb
add
and
popf
sbb
outs
pop
or
push
adc
cmp
(bad)
(bad)
call
sbb
add
and
pop
mov
pop
pop
adc
adc
push
adc
adc
push
push
xchg
add
popa
adc
sbb
(bad)
std
(bad)
call
adc
add
push
sbb
add
add
push
adc
pop
adc
adc
adc
pop
adc
sbb
(bad)
std
(bad)
call
adc
adc
adc
adc
(bad)
add
add
or
or
sbb
aam
popa
rol
adc
pop
pop
adc
pop
adc
cmp
(bad)
call
adc
add
and
add
adc
adc
and
pop
adc
pop
or
(bad)
std
(bad)
call
sbb
add
pop
adc
es
add
add
adc
jmp
add
adc
sub
pop
pop
outs
xchg
add
and
loop
cmp
pop
add
or
adc
cmp
sbb
add
ror
add
sbb
inc
add
or
push
add
add
inc
add
or
(bad)
(bad)
jmp
mov
add
adc
outs
nop
add
or
or
movlps
cmp
cld
(bad)
call
adc
add
sbb
add
sub
add
adc
or
add
sub
add
adc
adc
add
add
rcr
add
add
inc
add
or
add
or
outs
pop
ins
adc
pop
adc
movntps
rcl
add
adc
inc
adc
add
xchg
(bad)
inc
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
jle
add
mov
add
loopne
add
add
add
adc
add
pop
add
add
add
xchg
add
add
add
add
push
and
popf
sbb
outs
pop
adc
pop
adc
movntps
add
or
inc
add
sub
add
rcl
add
add
inc
add
or
add
add
mov
add
adc
outs
nop
add
or
or
and
or
(bad)
(bad)
(bad)
call
sbb
add
push
adc
adc
push
mov
mov
add
sbb
or
add
add
adc
outs
jmp
add
pop
or
(bad)
(bad)
call
adc
sbb
add
sub
add
pop
adc
add
add
add
outs
adc
pop
aam
popa
rol
sbb
(bad)
(bad)
(bad)
call
adc
add
push
sbb
add
sub
add
or
adc
pop
movlps
cmp
(bad)
(bad)
call
sbb
add
and
test
cmc
mov
adc
sbb
(bad)
(bad)
(bad)
call
sbb
add
or
push
mov
(bad)
(bad)
(bad)
jmp
fld
mov
(bad)
(bad)
(bad)
jmp
or
adc
popa
adc
adc
and
xlat
push
and
xchg
loope
jns
add
pop
pop
or
adc
cmp
(bad)
call
adc
add
push
adc
sbb
(bad)
(bad)
(bad)
call
adc
add
sbb
(bad)
and
pushf
repnz
or
movlps
cmp
(bad)
(bad)
call
adc
add
sbb
add
sub
add
push
outs
xchg
add
and
loop
cmp
pop
add
adc
adc
or
(bad)
call
sbb
add
and
repnz
and
js
pop
adc
adc
push
adc
push
adc
add
adc
sbb
in
add
or
mov
adc
cmp
std
(bad)
call
sbb
add
adc
lea
add
sbb
or
or
(bad)
std
(bad)
call
adc
inc
add
push
and
jae
cmp
(bad)
adc
movs
or
add
sub
cmp
add
or
popa
or
pop
and
pop
ins
or
add
adc
outs
in
add
or
dec
add
add
pop
jle
add
add
push
pop
push
push
outs
sub
add
or
adc
(bad)
std
(bad)
call
adc
add
sbb
xor
sub
add
or
push
adc
inc
ds
(bad)
call
push
adc
cmp
adc
add
sbb
(bad)
sub
push
pop
or
pabsb
(bad)
call
adc
adc
or
or
or
or
or
or
(bad)
cld
(bad)
call
adc
add
push
adc
adc
mov
into
mov
sbb
(bad)
cld
(bad)
call
adc
add
and
pop
dec
and
adc
es
fmul
fsub
std
sbb
(bad)
jmp
or
adc
and
jge
push
mul
or
and
add
add
loopne
test
add
call
nop
hlt
(bad)
(bad)
(bad)
jmp
xor
mov
jmp
pop
adc
and
aam
add
or
push
adc
pop
adc
pop
adc
(bad)
cld
(bad)
call
adc
add
push
adc
add
sub
add
xor
add
add
rcr
add
add
inc
add
or
add
or
outs
pop
ins
adc
lods
inc
lds
and
mov
(bad)
(bad)
(bad)
jmp
push
lahf
fdivr
(bad)
(bad)
(bad)
call
and
iret
jb
add
add
mov
add
add
mov
fs
add
add
fsub
lock
add
add
pop
adc
or
fisubr
mov
xchg
(bad)
(bad)
(bad)
call
pop
add
mov
(bad)
(bad)
call
or
adc
sub
rcl
add
push
adc
inc
push
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
add
add
add
add
push
xor
stos
dec
mov
mov
jmp
push
sbb
rcl
add
push
sbb
add
sub
add
push
adc
(bad)
add
add
pop
pop
outs
adc
push
sbb
aam
popa
rol
adc
pop
pop
adc
adc
adc
mov
add
int
or
add
sub
add
rcl
add
add
inc
add
or
adc
mov
add
adc
outs
nop
add
or
or
mov
add
pop
lea
add
sbb
or
push
push
adc
push
adc
(bad)
adc
push
mov
add
sbb
in
add
or
mov
or
mov
mov
add
sbb
or
pshufb
(bad)
call
sbb
add
adc
mov
add
add
add
pop
adc
adc
cmp
(bad)
(bad)
call
sbb
add
sbb
mov
add
or
or
sha256msg1
(bad)
call
sbb
add
adc
or
(bad)
(bad)
(bad)
call
sbb
add
es
add
add
adc
outs
jmp
add
pop
or
(bad)
(bad)
(bad)
call
sbb
add
sbb
xor
sub
add
or
pop
adc
adc
or
push
or
pop
or
test
pushf
repnz
adc
stc
add
add
adc
cmp
(bad)
call
sbb
add
sbb
sub
add
or
popa
adc
adc
popa
and
and
mov
popa
outs
pop
pop
adc
or
lds
adc
pop
or
(bad)
(bad)
call
adc
add
pop
sbb
add
sub
add
adc
cmp
adc
cmp
sbb
add
push
push
add
sub
add
outs
xchg
add
and
loop
cmp
pop
add
adc
pop
or
(bad)
std
(bad)
call
adc
rol
test
cmp
(bad)
jle
add
add
adc
outs
in
add
or
lea
add
adc
jle
add
add
push
push
push
push
add
sub
add
or
adc
cmp
add
push
push
sbb
add
sub
add
or
sub
cmp
push
and
pop
adc
or
fs
jae
(bad)
call
or
popa
adc
fs
or
adc
cmp
(bad)
call
adc
add
sbb
xor
sub
add
adc
or
add
sub
xor
add
add
rcr
add
add
inc
add
or
add
or
outs
pop
ins
adc
pop
adc
movntps
rcl
add
push
sbb
sub
add
cmovne
add
add
(bad)
inc
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
js
add
test
add
lods
add
add
add
add
add
add
add
add
add
bound
add
and
cmp
inc
adc
gs
and
add
add
xor
icebp
push
add
add
popa
popa
adc
jp
(bad)
call
pop
add
push
adc
or
pop
adc
and
pushf
repnz
adc
pop
or
(bad)
(bad)
call
sbb
add
and
cmp
outs
popa
adc
adc
add
dec
add
add
or
add
sub
add
rcl
add
add
inc
add
or
adc
cmovo
(bad)
(bad)
call
adc
(bad)
(bad)
call
sbb
add
adc
sbb
(bad)
(bad)
(bad)
call
sbb
add
sbb
xor
sub
add
adc
pop
or
adc
cmp
(bad)
(bad)
call
push
add
push
and
xor
(bad)
adc
adc
popa
or
or
int3
popf
and
outs
pop
pop
adc
or
lds
or
or
mov
adc
push
adc
sbb
(bad)
(bad)
call
push
add
push
and
mov
jmp
(bad)
adc
push
push
push
add
add
or
popa
adc
add
cwde
iret
mov
and
fs
or
or
(bad)
(bad)
(bad)
call
push
add
push
and
dec
sub
pop
adc
es
add
add
push
push
push
or
out
add
or
adc
(bad)
(bad)
(bad)
call
pop
add
push
adc
add
add
adc
outs
in
add
or
push
adc
cmp
(bad)
(bad)
call
or
(bad)
std
(bad)
call
sbb
add
push
sbb
add
sub
add
stos
(bad)
(bad)
inc
adc
add
add
pop
push
outs
adc
pop
aam
popa
rol
sbb
(bad)
std
(bad)
call
sbb
add
push
sbb
add
add
push
adc
push
adc
(bad)
adc
adc
mov
add
sbb
in
add
or
mov
push
push
mov
mov
add
sbb
add
or
add
or
push
adc
cmp
(bad)
call
sbb
add
sbb
or
lea
add
or
adc
cmp
(bad)
call
sbb
add
and
(bad)
dec
enter
(bad)
sbb
std
(bad)
call
sbb
add
and
mov
jnp
popa
adc
or
sub
or
add
adc
and
test
(bad)
(bad)
jmp
out
xor
jmp
adc
sbb
(bad)
cld
(bad)
call
sbb
add
sbb
(bad)
sub
or
adc
(bad)
cld
(bad)
call
pop
add
push
es
and
and
and
arpl
add
add
pop
adc
cmp
cld
(bad)
call
pop
add
push
sbb
add
sub
add
push
jl
xor
xor
in
(bad)
(bad)
(bad)
call
or
adc
pop
adc
(bad)
cld
(bad)
call
pop
add
push
and
push
and
rol
(bad)
adc
xchg
add
and
loop
cmp
pop
add
adc
push
adc
cmp
(bad)
call
sbb
add
sbb
(bad)
pop
lea
add
sbb
push
pop
or
(bad)
cld
(bad)
call
sbb
add
sub
outs
nop
add
or
call
adc
(bad)
cld
(bad)
call
sbb
add
and
les
add
sub
xor
add
add
inc
add
adc
sbb
add
sub
add
outs
xchg
add
push
outs
pop
ins
adc
adc
sbb
add
and
sbb
xchg
push
pop
adc
adc
inc
sbb
add
arpl
(bad)
inc
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
scas
add
add
add
add
adc
(bad)
add
add
or
push
outs
adc
push
sbb
aam
popa
rol
adc
pop
pop
adc
pop
push
adc
cmp
(bad)
call
sbb
add
pop
adc
ror
add
sbb
inc
add
or
push
add
add
inc
add
or
adc
cmovo
(bad)
(bad)
call
(bad)
(bad)
call
sbb
add
and
mov
push
and
jecxz
pop
adc
es
loopne
dec
add
add
pop
or
(bad)
(bad)
(bad)
call
sbb
add
and
je
jo
xchg
(bad)
pop
push
adc
cmp
(bad)
(bad)
call
sbb
add
and
pushf
repnz
adc
pop
or
(bad)
(bad)
(bad)
call
sbb
add
adc
add
adc
adc
cmp
(bad)
(bad)
call
sbb
add
and
movntps
les
(bad)
sub
outs
nop
add
or
or
cli
add
add
adc
(bad)
(bad)
(bad)
call
sbb
add
sbb
(bad)
and
jne
repnz
lock
(bad)
(bad)
(bad)
jmp
or
pop
adc
(bad)
(bad)
call
sbb
add
and
push
mov
cmps
test
cmp
(bad)
and
repz
mov
popa
add
add
pop
or
sbb
(bad)
(bad)
(bad)
call
sbb
add
push
pop
xor
sub
add
add
add
push
push
push
push
outs
sub
add
or
mov
add
or
add
and
loop
cmp
pop
add
adc
pop
sbb
(bad)
std
(bad)
call
sbb
add
and
adc
and
add
(bad)
adc
push
adc
cmovo
std
(bad)
call
movlps
cmp
std
(bad)
call
pop
add
push
adc
movs
or
add
sub
add
add
adc
lds
adc
adc
(bad)
std
(bad)
call
sbb
add
sbb
xor
sub
add
pop
push
mov
add
adc
cmp
adc
cmp
sbb
add
sbb
xor
sub
add
or
popa
adc
pop
push
adc
cmp
(bad)
call
sbb
add
and
jmp
pop
adc
adc
ins
or
pop
adc
cmp
(bad)
call
sbb
add
or
add
or
adc
cmp
std
(bad)
call
sbb
add
sbb
(bad)
adc
and
add
add
or
or
add
adc
popa
and
out
and
adc
and
add
or
and
(bad)
xor
popa
pop
outs
pop
pop
adc
pop
or
cld
(bad)
call
sbb
add
sbb
(bad)
pop
lea
add
sbb
or
push
adc
push
adc
add
adc
sbb
in
add
or
mov
or
mov
mov
add
sbb
or
add
add
push
adc
outs
jmp
add
pop
or
(bad)
cld
(bad)
call
sbb
add
or
mov
into
mov
add
adc
or
(bad)
cld
(bad)
call
sbb
add
sbb
(bad)
and
sub
add
or
or
(bad)
cld
(bad)
call
sbb
add
sbb
(bad)
adc
and
add
push
bound
sahf
cmp
popa
fs
adc
pop
adc
(bad)
cld
(bad)
call
sbb
add
sbb
xor
sub
add
add
add
push
adc
outs
in
add
or
or
(bad)
sti
(bad)
call
adc
cmp
sti
(bad)
call
pop
add
push
and
mov
and
shl
or
add
adc
adc
(bad)
sti
(bad)
call
sbb
add
es
adc
sbb
(bad)
sti
(bad)
call
sbb
add
sbb
(bad)
add
sub
add
xor
add
add
inc
add
adc
sbb
add
sub
add
outs
xchg
add
push
outs
pop
ins
or
push
push
rcr
add
pop
or
cmp
(bad)
call
outs
pop
or
adc
sub
rcr
add
push
sbb
add
sub
add
cmovne
add
add
(bad)
inc
add
add
add
push
add
add
add
mov
add
add
add
bound
add
test
add
mov
add
add
add
add
add
add
add
add
add
bound
add
jle
add
cmps
add
add
add
add
add
add
add
jno
add
and
mov
mov
and
mov
jmp
and
js
adc
or
cmp
(bad)
(bad)
(bad)
call
or
or
(bad)
(bad)
(bad)
call
sbb
add
pop
sbb
add
sub
add
pop
pop
or
movlps
cmp
(bad)
call
sbb
add
sbb
(bad)
cmp
add
pop
or
(bad)
(bad)
(bad)
call
push
add
push
and
inc
js
and
jl
xor
(bad)
sub
or
or
add
adc
cmp
(bad)
(bad)
call
push
add
push
and
jmp
cmp
and
pushf
repnz
adc
cmp
add
add
or
adc
mov
and
(bad)
(bad)
jmp
adc
adc
pop
popa
push
adc
popa
and
ror
and
movs
loope
xor
cmp
loop
cmp
pop
and
ret
pop
and
imul
pop
and
cld
stc
outs
and
in
pop
pop
pop
outs
pop
pop
adc
pop
adc
(bad)
(bad)
call
pop
add
push
sbb
xor
sub
add
or
mov
into
mov
pop
adc
(bad)
(bad)
(bad)
call
pop
add
push
and
cmc
ja
lahf
loope
and
(bad)
pop
pop
pop
or
adc
cmp
(bad)
call
sbb
add
pop
sbb
add
sub
add
push
and
movs
jle
and
fs
adc
pop
push
adc
cmp
(bad)
(bad)
call
sbb
add
sbb
(bad)
adc
add
and
add
or
pop
outs
or
sbb
aam
popa
rol
sbb
(bad)
std
(bad)
call
sbb
add
push
adc
es
lea
add
sbb
or
adc
(bad)
std
(bad)
call
sbb
add
sbb
(bad)
push
pop
pop
or
push
adc
cmp
sbb
add
adc
loopne
dec
add
add
or
cmp
sbb
add
sbb
xor
sub
add
or
popa
adc
push
adc
cmp
push
add
push
and
jp
sbb
popa
adc
adc
pop
pop
adc
sbb
std
(bad)
call
push
add
push
sbb
add
sub
add
adc
pop
or
(bad)
std
(bad)
call
adc
(bad)
std
(bad)
call
sbb
add
es
movlps
cmp
std
(bad)
call
sbb
add
and
rcr
(bad)
pop
push
or
push
push
es
(bad)
call
or
std
(bad)
call
sbb
add
and
inc
(bad)
dec
and
xchg
sbb
popa
adc
adc
adc
add
adc
sbb
in
add
or
mov
or
mov
mov
add
sbb
add
add
add
pop
adc
jmp
add
adc
sub
lods
add
add
add
add
pop
push
or
outs
sub
add
or
mov
add
adc
adc
outs
xchg
add
and
loop
cmp
pop
add
adc
push
or
adc
(bad)
cld
(bad)
call
sbb
add
ror
add
sbb
inc
add
or
push
add
add
inc
add
or
or
cmovo
(bad)
call
adc
cmp
(bad)
call
sbb
add
es
and
popf
sbb
outs
pop
or
(bad)
cld
(bad)
call
sbb
add
adc
ins
adc
jle
add
add
pop
adc
in
add
or
pop
(bad)
(bad)
call
or
pmulhrsw
(bad)
call
sbb
add
adc
adc
or
add
sub
add
adc
adc
add
add
rcr
add
add
inc
add
or
add
or
outs
pop
ins
adc
sbb
movntps
rcr
add
add
adc
adc
inc
push
add
add
(bad)
inc
add
add
add
add
add
stos
add
add
add
add
add
add
add
jo
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
adc
push
mov
mov
add
sbb
push
jle
add
add
adc
outs
jmp
add
adc
movs
or
add
sub
push
add
add
add
movs
inc
add
and
add
pop
and
sbb
(bad)
(bad)
(bad)
call
adc
adc
add
and
scas
pop
and
pop
pop
adc
cmp
sbb
add
and
xchg
movs
daa
pop
adc
adc
loopne
dec
add
add
add
add
add
push
add
push
or
out
add
or
(bad)
(bad)
call
sbb
add
es
adc
icebp
and
adc
popa
adc
outs
pop
or
mov
js
sahf
or
and
adc
popa
adc
push
aad
sbb
pop
or
(bad)
(bad)
(bad)
call
pop
add
push
sbb
add
add
add
add
adc
outs
in
add
or
adc
(bad)
call
adc
cmp
sbb
add
sbb
add
sub
add
or
add
or
jmp
mov
popa
sub
or
adc
or
(bad)
(bad)
(bad)
call
sbb
add
sbb
xor
sub
add
mov
add
adc
sbb
(bad)
(bad)
(bad)
call
sbb
add
and
movs
repnz
and
xchg
(bad)
pop
adc
sub
add
nop
add
or
push
cmp
adc
cmp
sbb
add
cmp
add
or
dec
add
add
add
or
outs
adc
pop
sbb
aam
popa
rol
pop
or
std
(bad)
call
sbb
add
sbb
(bad)
pop
lea
add
sbb
or
adc
std
(bad)
call
push
add
push
pop
sbb
add
sub
add
in
add
sbb
(bad)
std
(bad)
call
sbb
add
adc
pop
adc
(bad)
std
(bad)
call
sbb
add
adc
or
pop
adc
or
add
imul
(bad)
call
movlps
cmp
(bad)
call
sbb
add
push
sbb
add
sub
add
and
pushf
repnz
adc
cmp
(bad)
call
sbb
add
and
sub
and
sbb
adc
ror
add
sbb
inc
add
or
push
add
add
inc
add
or
or
cmovo
adc
cmp
sbb
add
adc
sub
mov
into
mov
adc
(bad)
cld
(bad)
call
push
add
push
pop
sbb
add
sub
add
push
pop
or
adc
(bad)
cld
(bad)
call
sbb
add
es
push
or
push
push
dec
std
(bad)
call
add
adc
and
cdq
retf
lods
pop
and
popa
and
jmp
pop
fs
or
adc
(bad)
cld
(bad)
call
sbb
add
and
imul
ins
and
(bad)
adc
ins
adc
sbb
(bad)
cld
(bad)
call
sbb
add
sbb
add
add
push
pop
or
push
adc
cmp
(bad)
call
sbb
add
adc
adc
push
adc
(bad)
adc
or
in
add
or
mov
adc
cmp
cld
(bad)
call
sbb
add
and
rcl
and
int
pop
adc
add
sub
add
xor
add
add
rcr
add
sub
add
outs
xchg
add
push
outs
pop
ins
adc
pop
push
adc
sub
rcr
add
push
adc
inc
push
add
add
(bad)
inc
add
add
add
dec
add
add
add
xchg
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
or
test
daa
enter
add
cmc
ss
add
add
pop
and
or
repnz
(bad)
(bad)
jmp
fldenv
jmp
pop
or
adc
(bad)
(bad)
(bad)
call
sbb
add
sbb
(bad)
adc
movs
or
add
sub
inc
add
add
movlps
cmp
(bad)
call
sbb
add
sbb
(bad)
adc
push
push
lahf
or
popa
adc
adc
and
mov
add
add
push
pop
adc
(bad)
(bad)
(bad)
call
sbb
add
and
pushf
repnz
or
adc
cmp
(bad)
(bad)
call
sbb
add
push
adc
es
lea
add
adc
cmp
(bad)
(bad)
call
sbb
add
es
add
add
push
adc
outs
in
add
or
adc
cmp
(bad)
(bad)
call
sha1msg2
(bad)
call
sbb
add
sbb
(bad)
(bad)
(bad)
call
sbb
add
and
adc
movs
push
pop
adc
adc
push
adc
sbb
(bad)
(bad)
(bad)
call
sbb
add
and
inc
or
outs
and
adc
add
add
add
add
push
outs
adc
pop
aam
popa
rol
adc
pop
movlps
cmp
(bad)
call
sbb
add
pop
sbb
add
sub
add
adc
pop
or
push
adc
pop
adc
pop
adc
(bad)
(bad)
(bad)
call
sbb
add
and
cmp
out
pop
adc
es
add
add
push
push
add
sub
add
or
mov
add
adc
pop
or
std
(bad)
call
sbb
add
pop
adc
adc
outs
xchg
add
and
loop
cmp
pop
add
adc
adc
aam
(bad)
call
sbb
add
sbb
sub
add
shl
mov
and
push
ret
(bad)
jmp
or
adc
and
xor
add
shl
(bad)
(bad)
(bad)
call
and
mov
dec
add
mov
mov
(bad)
(bad)
(bad)
jmp
jmp
jmp
and
mov
sub
and
sub
(bad)
call
and
or
(bad)
(bad)
(bad)
call
push
pop
or
(bad)
std
(bad)
call
sbb
add
sbb
or
inc
mov
(bad)
call
or
add
sub
add
rcl
add
add
inc
add
or
add
add
mov
add
adc
or
or
adc
(bad)
std
(bad)
call
sbb
add
pop
push
xor
sub
add
adc
popa
pop
adc
popa
and
pop
pop
or
and
popf
sbb
outs
pop
or
push
and
pop
adc
pop
or
(bad)
cld
(bad)
call
sbb
add
and
xor
and
cmp
(bad)
adc
ins
or
mov
(bad)
call
sbb
add
and
pop
and
xchg
jo
adc
sub
pop
adc
cld
(bad)
call
sbb
add
sbb
or
or
or
adc
cmp
call
sbb
add
adc
mov
mov
add
sbb
or
add
add
push
adc
outs
jmp
add
sbb
(bad)
cld
(bad)
call
sbb
add
sbb
(bad)
pop
lea
add
sbb
or
add
adc
(bad)
adc
push
mov
add
sbb
in
add
or
mov
adc
(bad)
cld
(bad)
call
sbb
add
add
sub
adc
adc
add
add
rcr
add
sub
add
outs
xchg
add
push
outs
pop
ins
adc
pop
or
movntps
rcr
add
push
adc
inc
push
add
add
(bad)
inc
add
add
add
add
add
leave
add
add
add
add
add
add
add
pop
add
add
add
test
add
mov
add
call
add
add
add
add
add
pop
add
add
add
mov
add
adc
add
pop
add
add
add
and
popf
sbb
outs
pop
or
or
mov
into
mov
adc
push
adc
adc
push
push
adc
cmovo
(bad)
call
adc
(bad)
(bad)
call
sbb
add
push
adc
cmp
pop
or
and
add
adc
outs
or
sbb
aam
popa
rol
pop
push
adc
cmp
(bad)
(bad)
call
sbb
add
and
inc
sub
(bad)
jle
add
add
or
push
outs
in
add
or
mov
add
add
adc
jle
add
add
or
pop
push
push
add
add
sub
or
adc
cmp
(bad)
(bad)
call
sbb
add
push
sbb
add
sub
add
adc
mov
add
imul
add
sbb
inc
add
or
push
add
add
inc
add
or
add
add
adc
(bad)
(bad)
(bad)
call
sbb
add
and
pop
jbe
in
pop
sub
(bad)
adc
outs
xchg
add
and
loop
cmp
pop
add
or
or
(bad)
(bad)
(bad)
call
sbb
add
sbb
(bad)
adc
or
or
or
(bad)
(bad)
(bad)
call
sbb
add
sbb
xor
sub
add
push
movs
or
add
sub
cmp
add
adc
adc
cmp
(bad)
(bad)
call
sbb
add
sbb
add
sub
add
or
and
(bad)
call
sbb
add
and
sub
and
(bad)
(bad)
(bad)
jmp
or
adc
pop
movlps
cmp
std
(bad)
call
sbb
add
sbb
(bad)
adc
mov
mov
add
sbb
push
jle
add
add
or
push
outs
jmp
add
sbb
std
(bad)
call
sbb
add
and
call
adc
adc
adc
pop
adc
pop
or
std
(bad)
call
sbb
add
sbb
and
pushf
repnz
adc
cmp
(bad)
(bad)
call
adc
(bad)
std
(bad)
call
sbb
add
push
adc
or
pop
or
jb
(bad)
call
sbb
add
and
call
pop
adc
es
outs
mov
call
pop
or
adc
(bad)
std
(bad)
call
sbb
add
sub
pop
outs
nop
add
or
push
pop
adc
(bad)
std
(bad)
call
sbb
add
adc
aas
(bad)
(bad)
call
lea
add
sbb
add
pop
push
adc
adc
(bad)
adc
pop
mov
add
sbb
in
add
or
mov
or
(bad)
cld
(bad)
call
sbb
add
adc
and
ss
add
add
and
dec
add
add
add
ret
cld
icebp
and
and
cli
rcl
add
add
pop
adc
adc
adc
popa
or
or
and
add
and
pop
outs
pop
pop
adc
pop
adc
cmp
sbb
add
sbb
xor
sub
add
xor
push
stc
inc
pop
ss
cmp
call
add
call
and
(bad)
(bad)
(bad)
(bad)
call
or
adc
pop
or
adc
cmp
(bad)
call
sbb
add
and
dec
or
mov
adc
adc
adc
push
adc
cmp
cld
(bad)
call
sbb
add
and
popa
call
cmp
adc
adc
add
or
cmp
cld
(bad)
call
sbb
add
sbb
(bad)
add
sub
add
adc
adc
add
add
rcr
inc
add
or
add
or
outs
pop
ins
or
push
rcr
sbb
add
sub
add
cmovne
(bad)
(bad)
inc
add
add
add
add
add
imul
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
sahf
add
add
add
add
add
add
add
add
add
pop
movlps
sub
add
bound
ja
and
jl
adc
adc
add
adc
adc
(bad)
(bad)
(bad)
call
push
add
push
and
loop
or
neg
mov
popa
adc
adc
and
pop
adc
adc
adc
movlps
cmp
(bad)
call
push
add
push
and
dec
push
and
adc
cmp
add
lea
add
sbb
pop
adc
(bad)
(bad)
(bad)
call
push
add
push
adc
and
add
add
or
or
psignd
(bad)
call
pop
add
push
sbb
(bad)
and
(bad)
or
or
adc
push
test
mov
ins
pushf
(bad)
(bad)
(bad)
jmp
or
or
(bad)
(bad)
(bad)
call
push
add
push
and
adc
adc
cmp
or
or
and
add
or
push
outs
adc
push
sbb
aam
popa
rol
pop
or
(bad)
(bad)
call
sbb
cmp
sub
pop
cmps
push
imul
adc
adc
sbb
(bad)
(bad)
(bad)
call
sbb
ror
add
sbb
inc
add
or
push
add
add
inc
add
or
(bad)
(bad)
call
adc
(bad)
(bad)
(bad)
call
sbb
adc
adc
adc
adc
popa
and
sub
push
adc
pop
pop
adc
adc
and
popf
sbb
outs
pop
adc
sbb
(bad)
(bad)
(bad)
call
sbb
add
push
sbb
add
add
pop
add
fcom
call
mov
popa
and
(bad)
(bad)
call
push
adc
adc
adc
push
adc
cmp
std
(bad)
call
sbb
or
pop
jle
add
add
push
adc
or
out
add
adc
loopne
dec
add
add
or
adc
(bad)
std
(bad)
call
sbb
xchg
int3
dec
and
inc
repnz
adc
pop
pop
adc
adc
adc
imul
(bad)
call
or
(bad)
std
(bad)
call
push
add
push
sbb
(bad)
or
pushf
jns
bound
fdiv
and
push
and
call
pop
fs
adc
pop
or
(bad)
std
(bad)
call
pop
add
push
and
add
add
stc
mov
js
adc
adc
push
pop
(bad)
(bad)
call
or
popa
or
push
adc
cmp
std
(bad)
call
sbb
repz
or
add
adc
adc
pop
push
adc
add
adc
sbb
in
add
or
mov
push
mov
mov
add
sbb
add
add
push
adc
or
add
sbb
cmp
add
add
push
push
or
push
pop
outs
sub
add
or
mov
add
or
adc
(bad)
cld
(bad)
call
sbb
and
pushf
repnz
adc
pop
adc
cmp
add
add
push
xor
sub
add
mov
add
adc
nop
add
or
add
pusha
cld
(bad)
call
pop
add
push
pop
sbb
add
sub
add
outs
xchg
add
and
loop
cmp
pop
add
adc
push
adc
sbb
cld
(bad)
call
sbb
adc
add
sub
add
adc
adc
add
add
rcr
inc
add
or
add
or
outs
pop
ins
adc
pop
or
movntps
rcr
sbb
add
sub
add
cmovne
add
add
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
or
pop
adc
pop
adc
movntps
add
sbb
add
add
or
stc
fadd
or
mul
sub
pop
mov
(bad)
(bad)
jmp
or
adc
cmp
(bad)
call
sbb
add
sbb
(bad)
adc
mov
add
add
add
pop
adc
adc
cmp
(bad)
call
sbb
adc
adc
and
pop
adc
or
fs
push
push
int
add
popa
or
or
jmp
adc
pop
fs
adc
or
sbb
(bad)
(bad)
call
sbb
(bad)
(bad)
out
jae
push
jp
popaw
adc
adc
or
push
pop
adc
cmp
(bad)
(bad)
call
pop
add
push
push
adc
adc
popa
adc
adc
popa
and
mov
add
mov
ret
outs
pop
pop
adc
push
and
popf
sbb
outs
pop
adc
sbb
(bad)
(bad)
(bad)
call
sbb
push
cld
repnz
pop
adc
es
add
add
or
pop
outs
in
add
or
loope
add
pop
loopne
dec
add
add
jle
add
add
or
push
push
outs
sub
add
or
mov
add
adc
adc
outs
xchg
add
and
loop
cmp
pop
add
adc
cmp
(bad)
call
sbb
adc
and
pushf
repnz
adc
or
(bad)
(bad)
call
sbb
cmp
lea
add
sbb
or
or
(bad)
(bad)
(bad)
call
sbb
adc
es
push
adc
adc
add
adc
sbb
in
add
or
mov
push
adc
cmp
std
(bad)
call
sbb
and
mov
mov
aas
test
(bad)
jmp
loopne
xor
pop
pop
adc
outs
pop
or
movlps
cmp
std
(bad)
call
sbb
add
sbb
(bad)
adc
movs
or
add
sub
or
add
cmp
(bad)
call
adc
cmp
pop
add
push
adc
mov
mov
add
sbb
pop
jle
add
add
or
pop
outs
jmp
add
pop
or
(bad)
std
(bad)
call
push
add
push
pop
adc
and
jmp
push
sbb
(bad)
std
(bad)
call
sbb
sbb
add
add
adc
pop
adc
(bad)
std
(bad)
call
sbb
add
and
push
mov
xor
sub
push
adc
(bad)
add
add
or
or
sbb
aam
popa
rol
adc
pop
pop
adc
adc
push
mov
add
into
ror
add
sbb
inc
add
or
push
add
add
inc
add
or
(bad)
(bad)
jmp
mov
add
push
outs
nop
add
or
pop
pop
or
(bad)
cld
(bad)
call
pop
add
push
and
xchg
lods
pop
and
adc
pop
adc
or
pop
or
adc
cmp
sbb
add
sub
add
xor
add
add
rcr
inc
add
or
add
or
outs
pop
ins
adc
pop
or
movntps
rcr
sub
xchg
fst
adc
adc
inc
push
add
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
int3
add
add
add
add
add
add
add
call
add
add
add
add
inc
add
add
add
xchg
add
add
or
mov
mov
add
sbb
or
rcr
sbb
add
sub
add
pop
add
add
lea
add
sbb
or
adc
cmp
(bad)
call
sbb
mov
gs
cmp
or
adc
push
adc
(bad)
adc
push
mov
add
sbb
in
add
or
mov
adc
cmp
(bad)
(bad)
call
push
add
push
and
xchg
test
aas
jno
adc
or
or
and
add
adc
outs
adc
push
sbb
aam
popa
rol
adc
pop
pop
adc
adc
or
adc
cmp
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
push
add
push
push
adc
adc
or
clc
loop
cmp
pop
add
or
adc
pop
adc
(bad)
(bad)
call
sbb
adc
ror
add
sbb
inc
add
or
push
add
add
inc
add
or
(bad)
(bad)
jmp
mov
add
or
add
or
adc
cmp
sbb
rol
cmp
jbe
dec
jbe
adc
sub
or
pusha
(bad)
(bad)
call
pop
add
push
adc
add
add
push
adc
outs
in
add
or
adc
(bad)
(bad)
(bad)
call
adc
(bad)
(bad)
(bad)
call
sbb
add
and
xor
or
pop
or
(bad)
and
or
inc
sti
sbb
add
add
pop
adc
outs
pop
adc
and
pop
dec
psrlq
sahf
mov
add
add
pop
and
in
out
(bad)
(bad)
call
or
movlps
cmp
std
(bad)
call
push
add
push
sbb
xor
sub
add
sbb
add
add
add
add
or
or
(bad)
std
(bad)
call
push
add
push
adc
push
push
fstp
adc
(bad)
std
(bad)
call
sbb
int
pop
jno
jnp
mov
pop
adc
adc
pop
popa
adc
adc
popa
and
pop
pop
adc
or
lds
adc
adc
and
pop
adc
pop
adc
(bad)
std
(bad)
call
push
add
push
es
add
add
push
or
add
or
adc
(bad)
std
(bad)
call
sbb
sbb
add
sub
add
or
pop
pop
adc
adc
adc
pop
adc
and
pushf
repnz
adc
or
(bad)
std
(bad)
call
sbb
sbb
add
sub
add
sbb
fs
jmp
mov
popa
and
les
add
add
and
imul
popa
pop
adc
adc
adc
pop
adc
pop
push
adc
cmp
cld
(bad)
call
sbb
fwait
cmp
push
and
(bad)
adc
add
or
add
push
push
push
push
add
add
sbb
cld
(bad)
call
sbb
add
sbb
xor
sub
add
movs
or
add
sub
test
add
adc
push
adc
pop
or
(bad)
cld
(bad)
call
pop
add
push
push
sbb
add
sub
add
add
jo
mov
pop
pop
and
jg
aas
and
movs
mov
popa
pop
fs
adc
adc
(bad)
cld
(bad)
call
push
add
push
pop
sbb
add
sub
add
or
popa
adc
adc
(bad)
cld
(bad)
call
sbb
sbb
add
sub
add
paddw
call
adc
cmp
sti
(bad)
call
pop
add
push
add
sub
adc
adc
add
add
rcr
inc
add
or
add
or
outs
pop
ins
adc
sbb
movntps
rcr
add
push
and
jnp
and
fs
and
adc
adc
inc
adc
add
jg
(bad)
inc
add
add
add
ins
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
push
add
add
add
add
add
add
or
push
adc
and
pop
pop
or
popf
sbb
outs
pop
adc
adc
mov
into
mov
pop
or
(bad)
(bad)
(bad)
call
sbb
and
es
inc
mov
and
mov
xlat
cs
(bad)
(bad)
(bad)
(bad)
call
or
or
adc
(bad)
(bad)
(bad)
call
sbb
add
sbb
(bad)
adc
pop
pop
adc
adc
adc
mov
add
adc
cmp
(bad)
(bad)
call
adc
cmp
(bad)
(bad)
call
push
add
push
push
sbb
add
sub
add
mov
add
adc
outs
nop
add
or
pop
or
(bad)
(bad)
call
sbb
adc
ror
add
sbb
inc
add
or
push
add
add
inc
add
or
or
cmovo
(bad)
(bad)
call
adc
cmp
(bad)
(bad)
call
sbb
adc
es
adc
pop
push
adc
cmp
pop
add
push
and
sar
pop
fdivr
popa
adc
adc
adc
(bad)
add
add
or
add
pop
sbb
aam
popa
rol
sbb
(bad)
(bad)
(bad)
call
sbb
pop
xor
sub
add
loopne
dec
add
add
pop
jle
add
add
add
push
outs
sub
add
or
adc
(bad)
(bad)
(bad)
call
sbb
adc
or
fs
push
push
jno
add
or
or
add
mov
and
pop
test
cdq
jbe
pop
repnz
inc
popa
pop
and
mov
pop
pop
fs
adc
pop
or
phaddd
(bad)
call
pop
add
push
push
sbb
add
sub
add
add
add
add
add
or
cmp
std
(bad)
call
sbb
or
pop
or
and
pushf
repnz
or
mov
add
add
add
pop
or
mov
(bad)
call
push
add
push
sbb
add
add
lea
add
sbb
or
cmp
sbb
sbb
add
sub
add
add
add
add
add
push
movs
or
add
sub
pop
add
add
sub
adc
cmp
(bad)
call
sbb
adc
adc
outs
xchg
add
and
loop
cmp
pop
add
adc
sbb
(bad)
std
(bad)
call
sbb
out
jmp
adc
ror
push
adc
and
dec
aaa
add
push
mov
add
and
add
add
fdivrp
push
xchg
(bad)
(bad)
(bad)
call
pop
adc
and
inc
inc
and
in
jmp
(bad)
(bad)
(bad)
jmp
neg
(bad)
jmp
mov
push
cmps
(bad)
(bad)
(bad)
jmp
popa
adc
push
or
push
adc
pop
adc
or
(bad)
cld
(bad)
call
push
add
push
sbb
xor
sub
add
mov
add
adc
pop
movlps
cmp
sbb
push
xor
sub
add
pop
push
adc
adc
adc
mov
add
sbb
in
add
or
mov
or
add
mov
add
sbb
pop
or
cld
(bad)
call
sbb
add
push
adc
add
sub
add
adc
adc
add
adc
push
add
add
inc
add
or
add
or
outs
pop
ins
adc
push
adc
sub
shl
add
push
sbb
(bad)
adc
inc
pop
add
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
stos
add
add
add
add
add
add
add
add
add
je
add
adc
ins
adc
pop
adc
movntps
push
and
out
add
cmp
add
rcl
xchg
(bad)
(bad)
(bad)
call
fcomp
ret
add
add
or
push
adc
cmp
call
push
add
add
pop
xor
sub
add
push
add
or
or
(bad)
(bad)
(bad)
call
push
add
add
push
xor
sub
add
push
pop
popa
adc
adc
popa
and
and
pop
outs
pop
pop
adc
pop
adc
pabsw
(bad)
call
push
add
add
adc
and
pop
adc
pop
push
or
push
push
movlps
inc
cld
(bad)
(bad)
call
adc
cmp
(bad)
(bad)
call
and
add
and
push
outs
iret
je
adc
adc
pop
pop
adc
adc
or
pop
ror
add
sbb
inc
add
or
push
add
add
inc
add
or
add
add
mov
add
or
add
or
or
or
(bad)
(bad)
call
and
add
pop
sbb
add
sub
add
or
pop
adc
pop
adc
(bad)
(bad)
(bad)
call
and
add
sbb
xor
sub
add
fwait
or
push
(bad)
add
add
or
add
pop
sbb
aam
popa
rol
sbb
(bad)
(bad)
(bad)
call
and
add
and
sub
aaa
cmp
(bad)
jle
add
add
add
add
or
or
or
add
sub
or
add
and
std
lea
stos
test
or
or
add
add
pop
sbb
pshufb
(bad)
call
and
add
adc
and
dec
push
retf
and
mov
xor
fs
adc
loope
(bad)
call
push
add
add
adc
sub
push
outs
xchg
add
and
loop
cmp
pop
add
adc
push
adc
push
adc
cmp
add
push
sbb
(bad)
cmp
(bad)
call
lea
add
sbb
push
or
adc
add
adc
sbb
in
add
or
mov
adc
(bad)
std
(bad)
call
push
add
add
je
enter
sub
imul
and
out
lea
ins
inc
hlt
and
mov
jmp
add
pop
or
or
(bad)
std
(bad)
call
push
add
add
sbb
add
sub
add
push
and
add
add
push
sbb
(bad)
std
(bad)
call
push
add
add
pop
xor
sub
add
pop
pop
or
adc
phsubd
(bad)
call
and
add
and
and
cmp
adc
es
add
add
add
add
or
mov
(bad)
call
or
lea
add
or
add
add
adc
outs
sub
add
or
or
(bad)
cld
(bad)
call
push
add
add
sti
aam
pop
and
inc
jae
adc
and
pushf
repnz
adc
pop
adc
cld
(bad)
call
and
add
push
adc
adc
and
popf
sbb
outs
pop
adc
sbb
(bad)
cld
(bad)
call
push
add
add
push
add
and
aam
das
popa
adc
or
mov
mov
add
sbb
or
or
(bad)
cld
(bad)
call
push
add
add
sbb
add
sub
add
xor
(bad)
call
movlps
cmp
cld
(bad)
call
push
add
add
(bad)
adc
pop
pop
adc
sbb
cld
(bad)
call
push
add
add
(bad)
add
sub
adc
adc
add
add
rcr
add
add
inc
add
or
add
or
outs
pop
ins
or
mov
push
push
add
sub
(bad)
call
outs
pop
adc
and
jp
mov
and
out
adc
and
add
add
inc
cmp
xor
add
add
and
fwait
mov
add
add
pop
adc
push
shl
add
push
push
xor
sub
add
cmovne
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
movs
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
outs
sub
add
or
mov
add
adc
adc
outs
xchg
add
and
loop
cmp
pop
add
adc
sbb
(bad)
(bad)
(bad)
call
pop
add
add
pop
cmp
dec
inc
cmp
(bad)
adc
popa
adc
adc
(bad)
(bad)
(bad)
call
and
add
sbb
sub
add
or
pop
adc
pop
movlps
cmp
pop
add
add
or
fld
adc
(bad)
jle
add
add
push
adc
outs
jmp
add
pop
adc
phaddsw
(bad)
call
and
add
and
cdq
xchg
or
add
cmp
(bad)
(bad)
call
pop
add
add
pop
xor
sub
add
adc
pop
or
sha1msg1
(bad)
call
and
add
and
popf
or
jae
adc
adc
add
push
adc
outs
in
add
or
lock
add
loopne
dec
add
add
(bad)
(bad)
(bad)
call
and
add
sbb
(bad)
or
adc
push
adc
add
adc
sbb
in
add
or
mov
push
push
mov
mov
add
sbb
or
adc
cmp
(bad)
call
and
add
adc
push
push
or
(bad)
(bad)
call
adc
cmp
(bad)
(bad)
call
and
add
sbb
(bad)
or
or
and
add
pop
adc
outs
adc
push
sbb
aam
popa
rol
sbb
phaddd
(bad)
call
and
add
es
movlps
cmp
std
(bad)
call
pop
add
add
adc
adc
pop
adc
pop
adc
(bad)
std
(bad)
call
pop
add
add
adc
push
fld
outs
add
add
and
fadd
outs
add
add
popa
pop
adc
adc
(bad)
std
(bad)
call
and
add
sbb
(bad)
push
adc
pop
or
or
(bad)
std
(bad)
call
pop
add
add
adc
or
(bad)
mov
(bad)
call
adc
std
(bad)
call
pop
add
add
sub
outs
nop
add
or
or
push
(bad)
(bad)
call
lea
add
sbb
push
push
adc
cmp
(bad)
call
and
add
pop
sbb
add
add
or
or
add
jg
mov
and
jno
pop
and
mov
int
stc
call
outs
pop
pop
adc
add
sub
mov
into
mov
or
adc
pop
or
pmaddubsw
(bad)
call
and
add
push
adc
and
pushf
repnz
adc
or
(bad)
cld
(bad)
call
and
add
and
push
jge
cmp
(bad)
adc
pushf
push
cmps
and
dec
mov
(bad)
and
les
popa
fs
adc
sbb
cld
(bad)
call
and
add
adc
movs
or
add
sub
sub
or
add
sub
add
rcl
add
add
inc
add
or
(bad)
(bad)
call
adc
(bad)
cld
(bad)
call
and
add
add
sub
add
xor
add
add
rcr
add
add
inc
add
or
add
or
outs
pop
ins
adc
adc
and
add
and
adc
pop
jg
pop
adc
adc
inc
push
add
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
add
stos
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
or
add
or
(bad)
popa
sub
or
adc
sub
add
adc
and
les
and
idiv
(bad)
(bad)
(bad)
jmp
push
sbb
add
add
pop
popa
and
add
pop
adc
and
test
and
cs
int3
(bad)
(bad)
(bad)
jmp
sub
add
pop
and
retf
(bad)
(bad)
(bad)
call
pop
push
adc
cmp
(bad)
(bad)
call
and
add
and
mov
adc
es
adc
popa
push
adc
popa
and
xor
pop
pop
or
movlps
cmp
(bad)
(bad)
call
pop
add
add
cmp
and
hlt
in
xchg
inc
add
and
in
xchg
(bad)
(bad)
(bad)
call
or
adc
cmp
(bad)
(bad)
call
pop
add
add
adc
adc
pop
pop
adc
adc
adc
imul
add
sub
add
rcl
add
add
inc
add
or
add
add
mov
add
adc
nop
add
or
cmp
and
add
es
adc
pop
adc
(bad)
(bad)
(bad)
call
and
add
adc
push
(bad)
add
add
or
or
pop
sbb
aam
popa
rol
sbb
(bad)
(bad)
(bad)
call
pop
add
add
sbb
add
sub
add
or
push
inc
(bad)
(bad)
call
or
(bad)
(bad)
(bad)
call
and
add
sbb
xor
sub
add
or
or
or
or
or
or
adc
(bad)
std
(bad)
call
and
add
es
add
or
or
and
or
push
pop
or
(bad)
std
(bad)
call
pop
add
add
adc
push
mov
mov
add
sbb
cmp
and
add
and
mov
xchg
pop
adc
es
add
add
or
add
or
lea
add
adc
adc
(bad)
std
(bad)
call
and
add
push
adc
es
add
add
or
add
or
sub
and
loopne
xchg
and
(bad)
(bad)
call
or
adc
pop
or
or
(bad)
std
(bad)
call
pop
add
add
adc
es
and
popf
sbb
outs
pop
or
adc
(bad)
std
(bad)
call
and
add
and
es
cmp
(bad)
and
pushf
repnz
or
adc
cmp
add
add
adc
and
pop
adc
pop
adc
(bad)
cld
(bad)
call
pop
add
add
cmp
(bad)
(bad)
call
cld
(bad)
call
pop
add
add
adc
lods
xor
je
adc
adc
push
adc
push
adc
cmp
pop
add
add
jle
add
add
or
push
push
outs
sub
add
or
mov
add
or
adc
cmp
pop
add
add
add
(bad)
call
lea
add
sbb
pop
adc
adc
push
adc
(bad)
adc
adc
mov
add
sbb
in
add
or
mov
or
(bad)
cld
(bad)
call
pop
add
add
pop
xor
sub
add
adc
or
add
sub
xor
add
add
rcr
add
add
inc
add
or
add
or
outs
pop
ins
or
movs
pop
int3
icebp
push
cmp
or
xchg
(bad)
(bad)
(bad)
call
outs
pop
or
or
movntps
rcr
add
add
adc
adc
inc
adc
add
jle
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
jne
add
movs
add
add
add
add
add
add
movs
add
add
add
add
add
add
or
adc
(bad)
adc
or
in
add
or
mov
adc
sub
push
es
add
add
add
push
push
outs
sub
add
or
mov
add
adc
adc
outs
xchg
add
and
loop
cmp
pop
add
adc
adc
cmp
add
add
or
add
add
add
or
add
pop
sbb
aam
popa
rol
pop
or
(bad)
(bad)
(bad)
call
pop
add
add
pop
std
jecxz
and
test
pop
adc
adc
popa
or
and
cli
cmp
inc
and
pop
fs
adc
pop
push
adc
cmp
(bad)
(bad)
call
pop
add
add
pop
push
or
push
push
adc
inc
fdivr
(bad)
call
adc
cmp
(bad)
(bad)
call
pop
add
add
adc
adc
popa
adc
adc
popa
and
pop
pop
adc
or
(bad)
(bad)
(bad)
call
pop
add
add
sbb
add
sub
add
or
mov
mov
add
sbb
or
add
add
add
add
or
or
sub
fiadd
add
adc
pop
js
jno
add
add
lods
jns
jno
add
add
adc
adc
cmp
(bad)
call
pop
add
add
xchg
repz
pushf
adc
pop
pop
pop
or
and
pushf
repnz
adc
dec
(bad)
(bad)
call
(bad)
(bad)
call
pop
add
add
idiv
sub
add
adc
adc
and
popf
sbb
outs
pop
adc
pop
or
(bad)
(bad)
call
and
add
and
test
lock
(bad)
and
xchg
xor
and
pop
lods
or
add
add
ss
pop
pop
add
add
pop
and
add
add
les
push
add
add
pop
adc
and
(bad)
fld
mov
and
add
add
jno
fwait
retf
(bad)
call
or
or
pop
adc
adc
pop
pop
adc
push
adc
cmp
pop
add
add
pop
inc
push
jmp
mov
add
adc
or
or
sar
(bad)
call
lea
add
sbb
or
adc
cmp
(bad)
call
and
add
pop
push
xor
sub
add
push
pop
pop
adc
adc
adc
cmp
std
(bad)
call
movlps
cmp
std
(bad)
call
pop
add
add
je
addr16
retf
push
and
adc
adc
and
pop
adc
sbb
phaddd
(bad)
call
and
add
sbb
(bad)
jle
add
add
add
add
or
(bad)
(bad)
(bad)
call
push
loopne
dec
add
add
or
aam
(bad)
call
pop
add
add
arpl
scas
lock
ror
add
sbb
inc
add
or
push
add
add
inc
add
or
(bad)
(bad)
call
or
(bad)
cld
(bad)
call
pop
add
add
add
sub
add
xor
add
add
rcr
add
add
inc
add
or
add
or
outs
pop
ins
or
sub
rcr
add
add
adc
adc
inc
adc
add
test
(bad)
inc
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
pop
adc
sbb
movntps
push
and
jmp
es
leave
test
pop
dec
push
(bad)
and
(bad)
(bad)
jmp
push
and
or
and
std
inc
add
add
pop
adc
pop
(bad)
(bad)
call
pop
add
add
push
add
sub
add
pop
pop
or
adc
cmp
add
add
or
add
sub
add
rcl
add
add
inc
add
or
add
add
movlps
cmp
(bad)
(bad)
call
pop
add
add
(bad)
adc
or
pop
adc
and
pushf
repnz
adc
pop
or
(bad)
(bad)
(bad)
call
pop
add
add
or
pop
and
adc
adc
push
adc
adc
push
push
push
add
add
or
(bad)
(bad)
(bad)
call
pop
add
add
xchg
inc
or
test
pop
dec
pop
adc
adc
ins
adc
or
(bad)
(bad)
(bad)
call
pop
add
add
adc
es
add
add
push
add
outs
sub
add
or
adc
(bad)
(bad)
(bad)
call
pop
add
add
or
inc
mov
lea
xchg
fstp
and
out
pop
and
pop
and
pop
and
adc
fs
or
(bad)
(bad)
(bad)
call
and
add
sbb
(bad)
adc
add
or
adc
cmp
(bad)
call
and
add
es
add
add
adc
outs
in
add
or
rol
add
adc
pmulhrsw
(bad)
call
pop
add
add
adc
adc
adc
popa
adc
adc
mov
outs
pop
pop
adc
adc
and
popf
sbb
outs
pop
adc
adc
mov
sbb
(bad)
std
(bad)
call
and
add
es
(bad)
(bad)
call
or
(bad)
xchg
popf
pushf
inc
add
and
add
add
movs
cmps
mov
add
add
pop
pop
pop
adc
pop
or
(bad)
std
(bad)
call
pop
add
add
push
xor
sub
add
cld
add
int
loope
and
(bad)
(bad)
jmp
outs
pop
adc
sbb
(bad)
std
(bad)
call
pop
add
add
adc
adc
xchg
add
and
loop
cmp
pop
add
or
or
add
(bad)
call
add
add
and
add
pop
outs
or
sbb
aam
popa
rol
sbb
(bad)
std
(bad)
call
pop
add
add
dec
mov
sbb
ficom
push
pop
adc
sub
add
or
pop
pop
adc
(bad)
cld
(bad)
call
pop
add
add
sbb
add
sub
add
add
add
lea
add
sbb
push
pop
adc
(bad)
cld
(bad)
call
pop
add
add
adc
lea
add
adc
mov
pop
add
add
sbb
add
sub
add
mov
add
adc
push
adc
cmp
and
add
pop
sbb
add
sub
add
add
adc
(bad)
adc
adc
mov
add
sbb
in
add
or
mov
push
push
mov
mov
add
sbb
pop
jle
add
add
adc
outs
jmp
add
adc
movs
or
add
sub
add
adc
or
add
sub
add
xor
add
add
shl
add
add
inc
add
or
add
or
outs
pop
ins
or
movs
push
test
sti
mov
ins
xor
add
add
pop
or
adc
push
adc
sub
shl
add
add
adc
xchg
or
sbb
(bad)
adc
inc
adc
add
push
add
add
add
push
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
lahf
add
add
add
add
add
add
add
add
or
shl
add
add
xor
sub
add
or
mov
add
add
add
pop
adc
adc
adc
popa
adc
adc
popa
and
ret
les
pop
pop
adc
pop
movlps
cmp
(bad)
call
and
ss
cmp
cmp
sub
or
pop
or
dec
(bad)
(bad)
call
daa
add
push
ror
add
sbb
inc
add
or
push
add
add
inc
add
or
add
add
push
adc
cmp
(bad)
(bad)
call
sub
add
sbb
sub
add
or
or
or
or
psignw
(bad)
call
and
adc
or
mov
add
adc
add
sbb
(bad)
(bad)
(bad)
call
and
add
sbb
(bad)
adc
and
pop
adc
adc
push
adc
pop
or
(bad)
(bad)
call
and
sbb
add
sub
add
mov
add
add
sub
in
add
add
and
push
data16
add
pop
pop
adc
and
(bad)
sub
and
shl
and
inc
leave
xor
add
add
rol
inc
lock
(bad)
(bad)
call
popa
and
fcomp
sahf
(bad)
(bad)
(bad)
call
inc
sub
add
add
and
pop
(bad)
(bad)
(bad)
(bad)
call
add
xor
(bad)
(bad)
(bad)
jmp
nop
mov
hlt
(bad)
(bad)
(bad)
call
popa
adc
pop
adc
(bad)
(bad)
(bad)
call
and
add
and
lock
cdq
add
(bad)
sub
or
cmp
(bad)
(bad)
call
daa
add
push
adc
or
ret
loop
cmp
pop
add
adc
pop
or
(bad)
std
(bad)
call
and
adc
es
or
inc
or
and
add
push
adc
outs
or
sbb
aam
popa
rol
sbb
(bad)
std
(bad)
call
and
add
sbb
(bad)
and
pushf
repnz
adc
pop
adc
cmp
daa
add
push
push
adc
adc
push
push
repz
(bad)
call
or
popa
adc
sbb
sbb
sbb
or
add
add
add
or
or
in
add
or
into
add
add
add
lea
add
or
add
add
or
push
push
add
sub
add
or
or
(bad)
std
(bad)
call
and
add
sub
outs
nop
add
or
or
adc
pabsb
(bad)
call
and
add
pop
sbb
add
sub
add
or
lds
adc
sbb
cld
(bad)
call
and
add
and
mov
inc
lahf
ins
pop
adc
sub
lea
add
sbb
pop
adc
(bad)
cld
(bad)
call
add
push
sbb
xor
sub
add
push
pop
push
adc
(bad)
adc
adc
mov
add
sbb
in
add
or
mov
push
mov
mov
add
sbb
or
add
add
or
or
jmp
add
adc
sub
and
or
or
or
push
adc
pop
adc
sbb
(bad)
cld
(bad)
call
add
push
sbb
xor
sub
add
adc
or
add
sub
xor
add
add
shl
add
add
inc
add
or
add
or
outs
pop
ins
or
movlps
sub
shl
add
push
sbb
xor
sub
add
cmovne
(bad)
(bad)
inc
add
add
add
jae
add
xchg
add
add
add
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
add
cdq
add
add
add
add
add
add
add
add
add
and
(bad)
mov
add
jp
sbb
add
add
pop
adc
and
adc
or
mov
(bad)
(bad)
jmp
pop
adc
(bad)
(bad)
(bad)
call
and
add
and
ret
sub
push
cmp
add
adc
adc
or
shl
cmp
pop
add
adc
adc
adc
(bad)
(bad)
(bad)
call
and
push
add
sub
add
lea
add
sbb
or
or
(bad)
(bad)
(bad)
call
sub
add
and
mov
mov
or
(bad)
jle
add
add
push
adc
outs
in
add
or
inc
add
add
pop
loopne
dec
add
add
jle
add
add
push
push
push
push
pop
outs
sub
add
or
(bad)
(bad)
call
sub
add
and
js
and
stc
mov
adc
push
mov
mov
add
sbb
or
(bad)
(bad)
(bad)
call
add
push
sbb
xor
sub
add
or
lds
adc
or
mov
into
mov
or
(bad)
(bad)
(bad)
call
sub
add
and
mov
adc
sub
add
pusha
(bad)
(bad)
call
sub
add
es
or
(bad)
(bad)
(bad)
call
and
add
adc
push
adc
pop
or
(bad)
(bad)
(bad)
call
and
add
sbb
sub
add
or
push
stos
add
add
or
adc
and
pushf
mov
(bad)
in
aaa
cmp
ins
adc
adc
ins
adc
sbb
(bad)
std
(bad)
call
daa
add
push
sbb
sub
add
push
adc
push
adc
(bad)
adc
adc
mov
add
sbb
in
add
or
mov
adc
cmp
std
(bad)
call
daa
add
push
es
add
add
push
or
add
or
movs
or
add
sub
pop
add
add
adc
pop
or
pop
adc
and
pushf
repnz
adc
mov
(bad)
call
and
add
sbb
add
add
or
add
add
and
(bad)
fwait
(bad)
(bad)
(bad)
jmp
ret
lods
(bad)
(bad)
(bad)
jmp
pop
adc
popa
adc
or
inc
jle
adc
pop
adc
ds
(bad)
call
sub
add
sbb
xor
sub
add
nop
dec
lea
cmp
cmp
outs
pop
adc
pop
adc
cmp
std
(bad)
call
daa
add
push
sbb
xor
sub
es
or
add
sub
add
rcl
add
add
inc
add
or
std
(bad)
jmp
mov
add
push
outs
nop
add
or
adc
(bad)
cld
(bad)
call
and
add
and
sbb
and
cmp
sub
push
adc
dec
add
add
add
add
push
outs
adc
pop
sbb
aam
popa
rol
adc
pop
adc
adc
(bad)
cld
(bad)
call
and
adc
adc
mov
add
mov
cmp
call
and
add
es
or
(bad)
cld
(bad)
call
and
add
push
adc
adc
adc
pop
adc
pop
or
cld
(bad)
call
and
add
add
sub
adc
adc
add
add
shl
add
add
inc
add
or
add
or
outs
pop
ins
adc
adc
sub
shl
add
add
pop
add
sub
add
cmovne
add
add
(bad)
inc
add
add
add
add
add
ins
add
add
add
add
add
add
add
add
add
jg
add
stos
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
shl
add
add
add
sub
add
or
mov
into
mov
adc
push
adc
pop
adc
(bad)
(bad)
(bad)
call
sub
add
and
mov
pop
aas
popa
adc
adc
sub
(bad)
(bad)
(bad)
call
and
add
and
pop
adc
pop
adc
es
add
add
or
add
or
pop
movs
or
add
sub
inc
add
add
or
or
or
pop
adc
cmp
(bad)
(bad)
call
and
add
and
clc
iret
sub
mov
aaa
pop
popa
adc
es
adc
(bad)
(bad)
(bad)
call
and
add
push
adc
ror
add
sbb
inc
add
or
push
add
add
inc
add
or
add
add
mov
add
adc
outs
nop
add
or
pop
pop
adc
(bad)
(bad)
(bad)
call
and
add
sbb
add
sub
add
mov
sbb
and
(bad)
(bad)
call
or
pop
adc
pop
push
adc
cmp
call
and
add
sbb
push
adc
(bad)
add
add
push
adc
pop
sbb
aam
popa
rol
pop
adc
(bad)
(bad)
call
add
push
es
pop
and
or
adc
(bad)
(bad)
(bad)
call
and
add
and
xor
adc
adc
adc
mov
add
or
(bad)
(bad)
(bad)
call
(bad)
(bad)
call
and
add
and
pop
push
xchg
ss
adc
adc
outs
xchg
add
and
loop
cmp
pop
add
adc
pop
adc
(bad)
std
(bad)
call
and
add
sbb
sub
add
push
push
adc
adc
(bad)
adc
or
in
add
or
mov
add
mov
mov
add
sbb
pop
sbb
(bad)
std
(bad)
call
sub
add
and
jbe
xor
or
popa
or
or
(bad)
std
(bad)
call
and
add
and
aam
js
out
out
popa
adc
es
lea
add
sbb
add
or
std
(bad)
call
and
add
sbb
sub
add
add
add
or
add
or
or
(bad)
inc
loopne
dec
add
add
push
jle
add
add
or
push
outs
sub
add
or
mov
add
adc
pop
or
(bad)
cld
(bad)
call
and
add
pop
sbb
add
sub
add
or
push
adc
cmovo
cld
(bad)
call
push
adc
cmp
cld
(bad)
call
and
add
push
sbb
add
add
adc
cmp
cld
(bad)
call
and
add
and
and
dec
xchg
pop
das
pop
adc
es
adc
pop
or
(bad)
cld
(bad)
call
and
add
sbb
add
sub
add
and
add
add
or
or
add
mov
and
sbb
and
and
test
test
inc
pop
popa
outs
pop
pop
or
adc
cmp
(bad)
call
and
add
push
sbb
add
sub
add
or
pop
adc
pop
or
(bad)
cld
(bad)
call
daa
add
push
sbb
(bad)
and
push
jg
adc
je
scas
test
add
add
and
mov
add
adc
pop
adc
cmp
cld
(bad)
call
and
sbb
add
add
or
or
or
and
pushf
repnz
or
adc
cmp
sti
(bad)
call
and
add
sbb
add
sub
add
adc
or
add
sub
add
xor
add
adc
and
add
sub
add
outs
xchg
add
push
outs
pop
ins
or
adc
shl
add
push
and
xor
loope
pop
adc
adc
inc
push
add
add
(bad)
inc
add
add
add
add
add
movs
add
add
add
add
add
add
add
jne
add
pop
add
iret
add
add
add
add
add
add
add
dec
add
add
add
outs
add
add
add
add
add
add
add
add
push
loopne
dec
add
add
pop
or
shl
add
add
xor
sub
add
push
or
adc
adc
adc
or
add
sub
add
or
mov
push
mov
mov
add
sbb
or
push
adc
cmp
(bad)
call
and
add
sbb
(bad)
pop
lea
add
sbb
cmp
(bad)
call
and
add
adc
adc
pop
popa
and
xor
push
jp
outs
pop
pop
adc
pop
or
(bad)
(bad)
(bad)
call
and
add
and
jne
and
adc
aas
pop
adc
sub
or
or
(bad)
(bad)
(bad)
call
and
add
and
pushf
repnz
adc
cmp
or
cmp
xor
add
add
and
push
mov
call
dec
in
js
add
add
and
std
jmp
(bad)
(bad)
call
pop
adc
sbb
(bad)
(bad)
(bad)
call
and
add
and
mov
and
cmp
adc
adc
adc
adc
(bad)
(bad)
(bad)
call
and
add
push
push
xor
sub
add
push
adc
cmp
(bad)
call
and
add
sbb
(bad)
adc
outs
xchg
add
and
loop
cmp
pop
add
adc
push
adc
pop
or
(bad)
(bad)
(bad)
call
add
push
and
mov
pop
adc
adc
sub
adc
cmp
(bad)
(bad)
call
daa
add
push
sub
or
and
add
push
or
or
sbb
aam
popa
rol
pop
or
(bad)
std
(bad)
call
and
add
and
shl
and
adc
adc
pop
pop
adc
adc
pop
mov
add
mov
adc
(bad)
std
(bad)
call
and
add
es
add
add
push
push
push
push
outs
sub
add
or
adc
cmp
sub
add
sbb
(bad)
jle
add
add
adc
outs
jmp
add
pop
adc
(bad)
std
(bad)
call
sub
add
adc
and
pop
adc
pop
adc
(bad)
std
(bad)
call
daa
add
push
adc
add
add
dec
std
(bad)
call
and
add
sbb
(bad)
adc
movs
or
add
sub
and
add
adc
adc
(bad)
(bad)
call
or
popa
adc
or
and
adc
add
add
adc
outs
in
add
or
adc
(bad)
cld
(bad)
call
adc
cmp
cld
(bad)
call
and
add
and
aam
and
(bad)
outs
inc
pop
adc
adc
or
sar
(bad)
call
sub
add
and
xchg
and
popa
adc
ror
add
sbb
inc
add
or
push
add
add
inc
add
or
std
(bad)
jmp
mov
add
pop
outs
nop
add
or
or
adc
cmp
and
add
sbb
xor
sub
add
push
jnp
jp
popf
lods
jmp
nop
push
(bad)
mov
popa
push
outs
pop
adc
arpl
xchg
cs
(bad)
(bad)
(bad)
call
add
pop
rol
xor
pop
push
add
add
pop
and
aas
jl
add
add
and
pop
xor
add
add
popa
and
retf
add
add
popa
pop
adc
pop
adc
(bad)
cld
(bad)
call
and
adc
add
sub
add
sar
add
add
add
add
sub
jle
add
add
sub
add
push
sub
add
sar
add
add
add
add
sub
jle
add
add
sub
add
push
sub
add
sar
add
add
add
add
sub
jle
add
add
sub
add
push
sub
add
sar
add
add
add
add
sub
jle
add
add
aaa
add
push
sub
sar
add
add
add
sub
jle
add
add
add
cmp
add
sub
add
sar
add
add
sub
jle
add
add
add
aas
add
push
sub
add
sar
add
add
add
add
sub
jle
add
add
inc
add
push
sub
sar
add
add
add
add
sub
jle
add
add
sub
add
sub
add
rol
add
add
add
sub
jle
add
add
dec
add
push
sub
rol
add
add
add
sub
jle
add
add
dec
add
push
sub
rol
add
add
add
sub
jle
add
add
push
add
push
sub
rol
add
add
add
sub
jle
add
add
push
add
push
sub
rol
add
add
add
sub
jle
add
add
sub
add
sub
add
rol
add
add
add
sub
jle
add
add
pop
add
push
sub
rol
add
add
add
sub
jle
add
add
arpl
add
sub
rol
add
add
add
sub
jle
add
add
sub
add
sub
add
ror
add
add
add
sub
jle
add
add
sub
add
sub
add
ror
add
add
add
sub
jle
add
add
add
outs
add
push
sub
add
ror
add
add
add
sub
jle
add
add
add
jae
add
sub
add
ror
add
add
add
sub
jle
add
add
ja
add
sub
ror
add
add
add
sub
jle
add
add
jnp
add
sub
ror
add
add
add
sub
jle
add
add
sub
add
sub
add
ror
add
add
add
sub
jle
add
add
add
add
push
sub
ror
add
add
add
sub
jle
add
add
xchg
add
sub
push
add
add
add
add
rcl
add
add
add
rcl
add
add
add
sub
jle
add
add
add
mov
add
sub
add
jle
add
add
add
mov
add
sub
add
jle
add
add
add
mov
add
sub
add
rcl
add
add
add
sub
jle
add
add
add
xchg
add
push
sub
add
rcl
add
add
add
sub
jle
add
add
add
xchg
add
push
sub
add
rcl
add
add
add
sub
jle
add
add
add
cdq
add
push
sub
add
push
add
add
add
add
rcl
add
add
add
sub
add
jle
add
add
add
popf
add
push
sub
add
jle
add
add
add
popf
add
push
sub
add
rcr
add
add
add
sub
jle
add
add
add
mov
add
rcr
add
add
add
sub
jle
add
add
sub
add
add
rcr
add
add
add
sub
jle
add
add
sub
add
add
rcr
add
add
add
sub
jle
add
add
add
scas
add
push
sub
add
rcr
add
add
add
sub
jle
add
add
add
mov
add
sub
add
rcr
add
add
add
sub
jle
add
add
sub
add
add
rcr
add
add
add
sub
jle
add
add
add
mov
add
rcr
add
add
add
sub
jle
add
add
add
mov
add
shl
add
add
add
sub
jle
add
add
add
ret
push
sub
add
shl
add
add
add
sub
jle
add
add
add
mov
push
sub
add
bound
add
add
add
shl
add
add
add
sub
add
jle
add
add
add
retf
push
sub
add
jle
add
add
add
retf
push
sub
add
add
add
add
add
shl
add
add
add
sub
add
jle
add
add
sub
add
push
sub
add
xor
add
add
sub
add
push
sub
add
push
shl
add
add
add
shl
add
add
add
sub
add
jle
add
add
add
aam
add
sub
add
jle
add
add
add
aam
add
sub
add
push
add
add
shr
add
add
add
sub
add
jle
add
add
add
fld
add
sub
add
jle
add
add
add
fld
add
sub
add
shr
add
add
add
sub
jle
add
add
add
fiadd
add
sub
jle
imul
add
add
add
shr
add
add
add
shr
add
add
add
sub
jle
add
add
sub
add
push
sub
add
xor
add
add
sub
add
push
sub
add
xor
add
add
sub
add
push
sub
add
push
shr
add
add
add
shr
add
add
add
sub
add
jle
add
add
add
call
add
ss
add
add
add
call
add
shl
add
add
add
sub
jle
add
add
add
in
add
push
sub
add
shl
add
add
add
sub
jle
add
add
sub
add
push
sub
add
shl
add
add
add
sub
jle
add
add
add
cmc
add
push
sub
add
shl
add
add
add
sub
jle
add
add
add
stc
add
push
sub
add
shl
add
add
add
sub
jle
add
add
add
std
add
push
sub
shl
add
add
add
sub
jle
add
add
sub
add
push
sub
add
shl
add
add
add
sub
jle
add
add
sub
add
add
shl
add
add
add
sub
jle
add
add
sub
add
push
sub
add
sar
add
add
add
sub
jle
add
add
sub
add
add
sar
add
add
add
sub
jle
add
add
add
adc
add
sub
add
sar
add
add
add
sub
jle
add
add
add
adc
add
sar
add
add
add
sub
jle
add
add
add
sbb
add
sub
add
sar
add
add
add
sub
jle
add
add
add
sbb
add
sar
add
add
add
sub
jle
add
add
add
and
add
sub
add
sar
add
add
add
sub
jle
add
add
add
and
add
sar
add
add
add
sub
jle
add
add
sub
add
push
sub
add
rol
add
add
sub
jle
add
add
add
sub
add
rol
add
add
sub
jle
add
add
add
xor
add
sub
rol
add
add
sub
jle
add
add
sub
add
add
rol
add
add
sub
jle
add
add
cmp
add
sub
rol
add
push
sub
jle
add
add
sub
add
add
rol
add
add
sub
jle
add
add
add
inc
add
push
sub
add
xchg
add
add
add
rol
add
add
sub
add
jle
add
add
sub
add
sub
add
xor
add
add
sub
add
sub
add
ror
add
add
sub
jle
add
add
add
dec
add
push
sub
add
ror
add
add
sub
jle
add
add
sub
add
sub
add
ror
add
add
sub
jle
add
add
add
push
add
push
sub
add
ror
add
add
sub
jle
add
add
sub
add
sub
add
ror
add
push
sub
jle
add
add
add
pop
add
push
sub
add
ror
add
add
sub
jle
add
add
add
push
sub
ror
add
add
sub
jle
add
add
sub
add
sub
add
ror
add
add
sub
jle
add
add
sub
add
sub
add
rcl
add
add
sub
jle
add
add
sub
add
sub
add
rcl
add
add
sub
jle
add
add
add
outs
add
push
sub
add
rcl
add
add
sub
jle
add
add
jb
add
sub
rcl
add
add
sub
jle
add
add
add
jbe
add
sub
add
rcl
add
push
sub
jle
add
add
sub
add
sub
add
rcl
add
add
sub
jle
add
add
sub
add
sub
add
rcl
add
add
sub
jle
add
add
add
add
push
sub
rcl
add
add
sub
jle
add
add
add
xchg
add
sub
add
rcr
add
add
sub
jle
add
add
add
mov
add
sub
add
rcr
add
add
sub
jle
add
add
sub
add
add
rcr
add
add
sub
jle
add
add
add
xchg
add
push
sub
add
rcr
add
add
sub
jle
add
add
add
xchg
add
push
sub
rcr
add
push
sub
jle
add
add
sub
add
add
rcr
add
add
sub
jle
add
add
sub
add
add
rcr
add
add
sub
jle
add
add
add
mov
add
rcr
add
add
sub
jle
add
add
sub
add
add
shl
add
add
sub
jle
add
add
add
stos
add
push
sub
add
shl
add
add
sub
jle
add
add
sub
add
add
shl
add
add
sub
jle
add
add
sub
add
add
shl
add
add
sub
jle
add
add
add
mov
add
sub
add
shl
add
push
sub
jle
add
add
sub
add
add
shl
add
add
sub
jle
add
add
add
mov
add
shl
add
add
sub
jle
add
add
add
ret
push
sub
add
shl
add
add
sub
jle
add
add
sub
add
push
sub
add
shr
add
add
sub
jle
add
add
add
retf
push
sub
add
shr
add
add
sub
jle
add
add
add
into
add
push
sub
add
shr
add
add
sub
jle
add
add
add
rol
add
sub
add
shr
add
add
sub
jle
add
add
add
(bad)
add
push
sub
add
shr
add
push
sub
jle
add
add
add
fiadd
add
sub
add
lods
add
add
add
add
shr
add
add
sub
add
jle
add
add
sub
add
push
sub
add
xor
add
add
sub
add
push
sub
add
shr
add
add
sub
jle
add
add
sub
add
push
sub
add
shl
add
add
sub
jle
add
add
add
push
sub
shl
add
add
sub
jle
add
add
add
jmp
add
sub
add
shl
add
add
sub
jle
add
add
add
out
add
push
sub
add
shl
add
add
sub
jle
add
add
add
repz
push
sub
add
shl
add
push
sub
jle
add
add
sub
add
push
sub
add
shl
add
add
sub
jle
add
add
sti
add
push
sub
shl
add
add
sub
jle
add
add
add
inc
add
sub
add
shl
add
add
sub
jle
add
add
sub
add
push
sub
add
sar
add
add
sub
jle
add
add
add
pop
add
push
sub
add
sar
add
add
sub
jle
add
add
add
or
add
sub
add
sar
add
add
sub
jle
add
add
sub
add
push
sub
add
sar
add
add
sub
jle
add
add
add
adc
add
sub
add
xor
add
add
push
add
adc
add
jo
out
add
or
push
rcr
add
push
push
sbb
add
sub
add
inc
add
add
sar
(bad)
inc
add
add
add
add
add
jo
out
add
or
jb
add
jo
lock
or
push
sbb
add
jae
add
or
add
or
push
pop
outs
repz
or
or
mov
add
push
adc
hlt
add
or
sub
add
add
add
xor
add
add
push
add
adc
jne
add
add
push
sbb
sub
adc
sbb
add
and
adc
and
outs
xchg
sbb
or
pop
inc
or
add
mov
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
pop
outs
repz
or
or
retf
rcr
sbb
add
sub
add
add
jo
lock
or
or
scas
rcl
add
push
es
outs
cmc
add
or
call
add
lock
or
cdq
add
add
or
push
sub
add
or
add
or
hlt
add
add
test
cmp
call
adc
out
mov
and
push
jno
pop
or
adc
push
sbb
add
jae
add
or
add
or
pop
or
inc
(bad)
(bad)
call
sbb
add
and
push
and
xchg
in
outs
popa
or
sub
add
or
push
stc
add
or
or
sbb
(bad)
call
or
adc
(bad)
call
cdq
add
add
pop
xor
sub
add
call
test
cmp
(bad)
(bad)
call
cdq
add
add
sbb
cmp
(bad)
(bad)
call
pop
add
push
and
jae
cmp
xchg
add
dec
pop
or
add
sbb
adc
add
add
rcr
inc
add
or
add
or
and
adc
sub
rcr
adc
inc
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
adc
add
or
sub
test
add
jb
add
jo
lock
or
and
add
or
add
jo
cld
add
or
or
adc
sub
push
pop
adc
adc
sub
add
or
or
or
or
inc
add
sub
sbb
sub
(bad)
rcr
adc
sub
add
or
(bad)
(bad)
dec
push
push
push
push
push
and
push
jae
add
or
adc
adc
cmp
(bad)
call
call
add
sub
add
adc
and
daa
pop
jne
fsub
pop
jne
push
outs
add
add
es
adc
sub
rcr
adc
adc
inc
push
add
add
(bad)
inc
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
jg
add
mov
add
add
add
add
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
sub
add
or
sub
movlps
sub
push
and
pushf
hlt
jns
fld
sub
adc
outs
add
add
adc
adc
pop
or
pop
outs
add
add
adc
outs
add
add
adc
or
sub
pop
(bad)
(bad)
call
call
add
sub
add
sub
add
or
pop
pop
push
adc
cmp
(bad)
(bad)
call
call
outs
add
adc
outs
add
add
and
jns
popa
or
and
jns
pop
adc
sub
(bad)
(bad)
call
or
sub
add
(bad)
call
call
add
sub
add
or
adc
sub
jmp
(bad)
call
(bad)
(bad)
call
call
adc
push
push
outs
xor
adc
outs
push
outs
add
add
es
add
or
pop
cmp
add
or
pop
inc
mov
adc
adc
pop
pop
adc
sub
(bad)
(bad)
call
or
sub
fwait
(bad)
(bad)
call
call
es
adc
push
or
sbb
sub
add
or
and
adc
adc
pop
pop
or
push
xor
pop
adc
sub
data16
(bad)
call
call
pop
cmp
jecxz
mov
pop
adc
adc
adc
pop
sbb
adc
outs
push
outs
add
add
adc
outs
add
add
es
adc
sub
xor
(bad)
call
sbb
push
xor
sub
add
add
jo
lock
or
adc
sub
paddd
call
sbb
push
add
sub
add
adc
pop
adc
pop
or
adc
sub
lock
(bad)
call
push
add
push
sbb
sub
adc
outs
add
add
adc
adc
and
fdivr
(bad)
call
or
add
add
adc
std
(bad)
call
sbb
or
pushf
pop
and
test
popa
adc
es
adc
pop
adc
sub
mov
call
add
sub
add
sub
add
or
pop
or
sub
test
(bad)
call
call
push
pop
and
loop
adc
sub
adc
adc
outs
push
outs
add
add
adc
sbb
pop
outs
add
add
sbb
sub
push
std
(bad)
call
sbb
add
sbb
sub
adc
adc
adc
and
outs
add
add
es
adc
pop
or
std
(bad)
call
sbb
add
and
fsubr
jns
fs
iret
jne
adc
adc
pop
ds
outs
add
add
sbb
sub
add
(bad)
call
sbb
sbb
add
sub
add
adc
adc
outs
add
add
adc
pop
pop
adc
sbb
sub
fdivr
(bad)
call
sbb
add
sbb
add
sub
add
sub
add
or
adc
adc
cmp
push
add
push
and
jle
mov
adc
es
sub
mov
push
add
push
push
adc
adc
sub
adc
adc
sbb
sub
mov
(bad)
call
call
pop
jle
(bad)
pop
ds
adc
add
adc
or
or
pop
outs
pop
add
or
adc
or
sub
add
or
pop
outs
pop
outs
pop
add
or
sub
or
sbb
add
sbb
sub
add
add
add
add
add
test
add
mov
add
mov
add
out
add
adc
and
or
and
pop
sbb
cld
pop
adc
pop
pop
pop
push
and
add
or
and
adc
adc
outs
outs
pop
add
or
pop
adc
adc
outs
mov
add
push
adc
outs
xor
adc
sub
push
and
(bad)
cmps
in
add
adc
sub
adc
pop
pop
adc
adc
outs
push
add
or
cmp
call
sbb
add
and
fimul
and
dec
xlat
jge
adc
adc
push
outs
pop
add
or
or
pop
adc
adc
adc
inc
push
add
or
bndldx
sub
xor
(bad)
call
call
sub
adc
sub
adc
outs
add
add
or
and
sub
add
or
adc
adc
sbb
sub
add
(bad)
call
sbb
sbb
add
sub
add
adc
or
push
outs
pop
add
or
sub
add
or
sub
adc
cmp
(bad)
(bad)
call
sbb
add
es
or
pop
sub
adc
outs
mov
adc
adc
outs
push
outs
add
add
es
adc
sub
rcr
adc
inc
add
add
sar
(bad)
inc
add
add
add
add
add
sub
add
or
xchg
dec
retf
ret
inc
call
sub
add
or
sbb
sub
leave
rcr
(bad)
imul
sub
adc
adc
outs
mov
add
and
or
add
or
adc
outs
mov
add
adc
adc
outs
mov
add
and
push
adc
add
or
sbb
adc
cmp
(bad)
call
sbb
add
sbb
sub
add
fimul
sub
adc
outs
mov
sub
movq
sbb
sub
push
rcr
sbb
add
sub
add
sub
add
add
add
and
add
add
add
add
test
add
mov
add
adc
add
add
push
adc
sbb
sub
(bad)
sbb
sub
ret
add
add
jb
add
jo
lock
or
adc
sub
push
sbb
add
sub
add
sbb
lea
add
adc
adc
adc
mov
mov
pop
jae
add
or
add
or
adc
test
add
jb
add
jo
lock
or
sub
pop
(bad)
(bad)
call
sbb
add
adc
sub
add
or
or
sub
add
or
push
adc
adc
add
sub
aaa
(bad)
(bad)
call
adc
cmp
(bad)
(bad)
call
call
adc
or
push
add
push
adc
lea
add
push
adc
push
adc
mov
mov
adc
cmp
(bad)
(bad)
call
push
add
push
and
mov
push
daa
or
sub
add
adc
add
add
adc
sbb
sub
adc
call
xor
and
cmp
pop
adc
adc
inc
or
add
mov
(bad)
inc
add
add
add
add
add
jb
add
mov
add
xchg
add
add
add
add
add
add
adc
add
add
and
adc
add
push
add
add
adc
add
add
and
hlt
arpl
xor
cmp
popa
popa
adc
mov
add
adc
inc
sub
add
adc
lea
add
adc
add
add
sbb
adc
cmp
(bad)
call
call
add
pop
(bad)
(bad)
call
sbb
add
sbb
add
sub
es
(bad)
add
add
ret
add
adc
adc
mov
add
outs
mov
add
adc
adc
sub
add
or
or
add
or
add
or
push
adc
adc
mov
adc
sub
add
adc
push
adc
adc
mov
or
add
sbb
(bad)
(bad)
call
call
add
sub
add
push
adc
mov
sbb
sbb
sbb
add
adc
mov
push
adc
cmp
(bad)
(bad)
call
call
inc
dec
and
pop
and
adc
adc
adc
add
push
add
add
xchg
(bad)
(bad)
call
sbb
add
and
xor
outs
and
das
sub
pop
adc
es
or
adc
pop
adc
mov
sub
add
add
add
add
jns
add
imul
add
add
add
add
add
add
add
retf
add
add
add
add
or
add
add
add
add
add
jecxz
add
cmps
add
add
add
add
add
add
xor
add
add
adc
add
or
adc
sub
rcr
add
push
sbb
xor
sub
add
or
add
add
(bad)
(bad)
inc
add
add
mov
dec
add
add
or
pop
add
or
add
adc
sub
rcr
adc
sub
outs
xchg
add
or
outs
xchg
add
or
jae
add
or
push
sub
add
push
adc
push
add
imul
pop
adc
sub
rcr
inc
add
sbb
push
cmps
fisub
adc
adc
inc
add
add
retf
(bad)
(bad)
inc
add
add
adc
add
fimul
push
sub
adc
outs
mov
sub
add
or
pop
sbb
or
push
rcr
push
xor
sub
add
or
add
add
add
add
add
add
add
bound
add
jns
add
lea
add
sgdtd
add
add
add
add
adc
adc
add
add
adc
popa
shl
or
or
lods
rcr
add
push
push
push
xor
sub
add
or
cwde
rcr
add
push
sbb
xor
sub
add
sbb
add
sbb
or
jge
(bad)
call
sbb
add
sbb
xor
sub
add
pop
add
add
or
sbb
or
pop
(bad)
(bad)
call
sbb
add
adc
sbb
(bad)
(bad)
call
sbb
adc
mov
and
cli
xchg
sub
xor
jbe
and
cmp
popa
and
inc
mov
mov
inc
pop
pop
and
imul
pop
pop
pop
xor
pop
add
push
call
push
sbb
and
inc
push
and
pop
and
rcr
sub
push
sub
or
add
sar
(bad)
call
sbb
add
sbb
xor
sub
add
add
adc
cmp
or
or
lods
(bad)
(bad)
call
call
cdq
jb
mov
adc
or
push
repnz
fisttp
int3
and
push
pop
pop
and
add
and
pop
popa
pop
popa
pop
or
imul
(bad)
call
or
sub
adc
adc
or
or
sgdtd
or
push
adc
cmp
(bad)
call
call
add
sub
add
add
add
add
push
or
add
add
xor
rcl
add
pop
add
adc
fwait
add
add
inc
add
or
add
or
std
add
or
adc
add
or
jge
sub
push
rcr
adc
inc
add
add
std
(bad)
inc
add
add
add
cmp
add
outs
add
add
add
add
add
add
add
add
add
add
xchg
add
pushf
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
repz
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
push
add
add
ja
add
cdq
add
add
mov
add
push
add
inc
push
add
pushw
add
mov
add
lods
push
add
aam
add
add
add
sbb
add
xor
add
dec
pop
add
imul
add
mov
pop
add
cmc
pop
add
push
or
add
add
inc
or
add
add
jne
add
(bad)
lds
add
loop
add
cli
or
add
or
add
add
imul
add
or
add
or
add
or
add
or
add
add
outs
or
add
or
add
or
add
or
add
or
add
add
je
add
xchg
or
add
or
add
or
add
or
add
or
add
add
jge
add
scas
or
add
or
add
or
add
outs
or
add
int
add
cli
or
add
inc
push
add
pop
push
add
xchg
add
test
push
add
call
sldt
cmp
sldt
jb
add
xchg
sldt
mov
sldt
in
sldt
push
adc
add
adc
add
add
pusha
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
or
or
push
rcr
or
add
cmp
sub
xlat
std
(bad)
call
and
add
es
adc
push
rcr
pop
adc
pop
and
sub
mov
and
add
adc
and
or
pop
push
push
pop
adc
daa
sbb
inc
adc
sub
add
push
es
push
adc
cmp
fwait
add
add
data16
data16
jle
push
pop
adc
adc
sbb
pop
push
push
pop
ins
adc
cmp
(bad)
call
and
add
push
sbb
add
sub
add
lea
add
push
or
adc
add
push
sub
add
pop
cmp
std
(bad)
call
fwait
add
add
cli
jg
inc
and
adc
cmp
and
pop
adc
adc
or
xor
add
pop
sbb
sub
adc
fwait
add
add
sbb
add
sub
add
push
pop
or
pop
push
push
adc
sbb
inc
adc
sub
add
push
es
push
sub
jmp
fwait
add
add
adc
cmp
sldt
adc
pop
pop
adc
pop
jp
sub
int3
cld
(bad)
call
fwait
add
add
adc
es
push
add
adc
pop
pop
adc
pop
adc
sub
scas
cld
(bad)
call
and
add
es
adc
pop
dec
adc
cmp
pop
add
push
sbb
sub
adc
or
push
adc
add
adc
cmp
(bad)
call
and
add
and
popf
jp
mov
sub
adc
sbb
pop
adc
pop
adc
cld
(bad)
call
fwait
add
add
adc
push
push
pop
push
cld
(bad)
call
and
add
and
sbb
loop
pop
adc
adc
or
cmp
sub
and
(bad)
call
cmp
sub
sbb
(bad)
call
and
add
and
pop
sub
push
popa
adc
adc
pop
or
dec
add
pop
adc
cmp
sti
(bad)
call
fwait
add
add
adc
dec
pop
inc
adc
sub
add
push
es
adc
cmp
sti
(bad)
call
fwait
add
add
push
or
adc
aas
sar
call
aas
adc
cmp
and
add
and
push
jge
jmp
jo
pop
adc
adc
pop
pop
adc
adc
push
aas
jl
add
pop
imul
cmp
fwait
add
add
adc
cmp
add
adc
cmp
(bad)
call
pop
add
push
es
adc
cmp
or
add
adc
es
adc
add
and
xchg
adc
inc
add
pop
adc
cmp
(bad)
call
and
add
sbb
sub
adc
push
push
pop
jae
sub
sub
(bad)
call
fwait
add
add
sbb
add
sub
add
daa
pop
or
pop
adc
pop
xor
sti
(bad)
call
fwait
add
add
cdq
add
jge
xchg
(bad)
add
sub
adc
pop
pop
adc
pop
sbb
sub
jmp
(bad)
call
pop
add
push
sbb
sub
adc
pop
or
pop
adc
pop
adc
cmp
cli
(bad)
call
pop
add
push
push
adc
adc
rcr
push
pop
js
sub
mov
fwait
add
add
adc
adc
sbb
pop
adc
adc
inc
adc
adc
sbb
pop
adc
push
adc
pop
adc
cmp
fwait
add
add
sbb
add
add
adc
inc
adc
sub
add
push
and
sub
data16
(bad)
call
fwait
add
add
pop
or
jo
sub
push
cli
(bad)
call
and
sub
dec
cli
(bad)
call
and
add
sbb
xor
sub
add
or
pop
adc
or
sub
sub
(bad)
call
fwait
add
add
retf
test
push
and
dec
mov
adc
cmp
add
adc
pop
pop
adc
pop
push
adc
cmp
(bad)
call
fwait
add
add
mov
cld
xor
popa
adc
adc
or
dec
push
add
pop
inc
adc
cmp
stc
(bad)
call
and
add
adc
push
push
sbb
sub
into
stc
(bad)
call
fwait
add
add
xchg
(bad)
retf
fs
mov
pop
pop
adc
adc
pop
rcr
push
adc
inc
pop
xor
sub
test
(bad)
call
inc
adc
cmp
and
add
push
pop
xor
sub
add
pop
sub
pop
or
pop
adc
cmp
pop
add
push
pop
sbb
add
sub
add
adc
inc
adc
cmp
(bad)
call
jne
sub
pusha
stc
(bad)
call
pop
add
push
adc
sbb
pop
adc
pop
jns
sub
dec
stc
(bad)
call
pop
add
push
sbb
xor
sub
add
daa
push
pop
inc
adc
sub
add
push
adc
push
push
pop
popa
adc
cmp
stc
(bad)
call
fwait
add
add
adc
rcr
adc
cmp
stc
(bad)
call
and
add
sbb
add
sub
add
pop
adc
pop
dec
adc
or
js
pop
dec
adc
pop
xor
sub
in
(bad)
call
fwait
add
add
cmp
and
adc
adc
sbb
pop
adc
pop
pop
adc
cmp
clc
(bad)
call
fwait
add
add
adc
adc
push
push
pop
or
sub
stos
clc
(bad)
call
and
add
and
jg
and
addr16
adc
sub
daa
adc
cmp
pop
add
push
es
sbb
sub
jg
(bad)
call
fwait
add
add
adc
adc
adc
sbb
sbb
push
adc
cmp
(bad)
call
pop
add
push
adc
add
push
push
pop
outs
adc
cmp
(bad)
call
fwait
add
add
adc
or
pop
or
adc
cmp
and
add
es
adc
pop
adc
cmp
clc
(bad)
call
fwait
add
add
adc
adc
adc
and
xchg
pop
inc
aam
(bad)
call
pop
adc
and
and
adc
cmp
idiv
call
fwait
add
add
push
loope
sbb
sbb
sub
or
adc
add
adc
push
adc
pop
sub
sub
mov
and
add
sbb
xor
sub
add
lea
adc
xor
sub
call
add
and
sub
leave
mov
adc
pop
or
pop
dec
adc
cmp
(bad)
call
fwait
add
add
arpl
pop
int
pop
adc
adc
push
push
adc
pop
rcr
push
pop
adc
sub
dec
idiv
call
and
add
sbb
xor
sub
add
daa
adc
dec
pop
adc
adc
ins
sbb
push
loopne
daa
pop
sbb
sub
and
(bad)
call
and
add
sbb
sub
adc
push
xchg
adc
call
sbb
xchg
adc
inc
cmp
jl
sub
repnz
call
fwait
add
add
adc
adc
pop
pop
adc
pop
pop
adc
cmp
idiv
call
fwait
add
add
adc
es
adc
pop
adc
pop
pop
adc
cmp
idiv
call
fwait
add
add
or
rcr
add
or
or
dec
adc
cmp
add
push
adc
ins
push
pop
sub
idiv
call
pop
add
push
adc
sub
pop
adc
adc
push
pop
push
adc
aas
jb
(bad)
call
bound
sub
imul
add
push
and
push
lods
neg
adc
adc
sbb
cld
(bad)
jmp
add
add
sub
ds
call
pop
add
push
sbb
sub
adc
pop
or
or
pop
dec
sahf
pop
dec
adc
cmp
idiv
call
and
add
sbb
xor
sub
add
push
pop
inc
adc
sub
add
push
es
dec
adc
cmp
cmc
(bad)
call
pop
add
push
adc
sbb
pop
pop
pop
adc
cmp
cmc
(bad)
call
and
add
push
adc
adc
pop
rcr
push
pop
imul
cmp
cmc
(bad)
call
fwait
add
add
push
adc
pop
arpl
sub
mov
and
add
and
cdq
test
bound
sub
pop
adc
pop
adc
xor
sub
fwait
cmc
(bad)
call
pop
add
push
sbb
adc
pop
push
adc
cmp
pop
add
push
sbb
xor
sub
add
add
outs
push
pop
push
adc
cmp
(bad)
call
pop
add
push
pop
adc
adc
inc
sub
rcr
daa
cmp
daa
push
push
adc
pop
rcr
daa
adc
inc
cmp
sub
sub
xor
(bad)
call
fwait
add
add
adc
adc
pop
or
inc
adc
sub
add
push
es
inc
adc
cmp
cmc
(bad)
call
pop
add
push
es
add
add
daa
push
push
pop
je
sub
stc
hlt
(bad)
call
fwait
add
add
sub
xchg
or
add
lea
add
push
or
adc
add
push
sub
add
or
sub
pop
or
or
adc
sub
ret
call
push
adc
cmp
pop
add
push
and
das
mov
and
adc
adc
pop
or
imul
(bad)
call
inc
adc
cmp
fwait
add
add
sbb
add
sub
es
fwait
add
add
inc
add
or
add
or
add
or
add
jo
cld
add
or
(bad)
sti
(bad)
inc
or
adc
pop
dec
pop
adc
or
js
pop
dec
cmp
or
js
pop
dec
pop
adc
pop
adc
dec
pop
adc
pop
adc
cmp
hlt
(bad)
call
and
add
sbb
add
add
daa
pop
rcr
daa
pop
inc
adc
cmp
hlt
(bad)
call
fwait
add
add
adc
adc
push
pop
inc
adc
sub
add
push
es
sub
sub
repz
call
and
add
pop
push
xor
sub
add
adc
rcr
sahf
pop
pop
adc
cmp
repz
call
fwait
add
add
push
xor
sub
add
push
pop
rcr
push
adc
inc
sub
rcr
push
pop
imul
cmp
pop
add
push
cmp
adc
xchg
adc
pop
aaa
adc
inc
(bad)
repz
call
pop
adc
cmp
add
add
adc
pop
dec
pop
inc
adc
sub
add
push
sbb
sub
push
fwait
add
add
sbb
add
sub
add
push
push
push
adc
pop
rcr
push
pop
outs
adc
cmp
(bad)
call
pop
add
push
adc
add
outs
je
outs
push
pop
pusha
adc
cmp
repz
call
pop
add
push
adc
adc
adc
push
pop
sbb
repz
call
fwait
add
add
sub
add
and
pop
adc
pop
ins
adc
cmp
repnz
call
fwait
add
add
sub
adc
push
push
pop
push
adc
cmp
repnz
call
fwait
add
add
jae
xchg
or
add
sub
adc
sbb
inc
adc
sub
add
push
adc
push
push
pop
dec
adc
cmp
pop
add
push
sbb
sub
pop
adc
pop
pop
or
inc
adc
sub
add
push
es
jle
sub
mov
(bad)
call
pop
add
push
and
bound
adc
adc
dec
adc
pop
inc
adc
cmp
(bad)
call
and
add
and
mov
fimul
pop
adc
adc
xchg
pop
adc
adc
xchg
pop
adc
pop
pop
adc
adc
or
iret
idiv
call
and
push
pop
sbb
sub
sub
(bad)
call
fwait
add
add
push
adc
pop
adc
sub
sbb
(bad)
call
fwait
add
add
adc
adc
adc
or
adc
pop
dec
sahf
pop
and
sub
cld
icebp
(bad)
call
and
add
es
adc
cmp
hlt
(bad)
call
adc
and
hlt
(bad)
call
xor
sub
fyl2x
(bad)
call
pop
add
push
sbb
add
sub
add
sbb
adc
sbb
xchg
pop
inc
sar
(bad)
call
sbb
adc
sbb
sbb
inc
adc
cmp
and
add
cmp
daa
push
push
adc
pop
rcr
daa
adc
inc
cmp
call
jb
sub
jns
(bad)
call
fwait
add
add
adc
adc
jne
add
push
adc
push
push
push
adc
or
sub
push
icebp
(bad)
call
fwait
add
add
cmp
mov
sub
adc
sbb
pop
adc
adc
push
push
adc
sbb
pop
adc
pop
pop
adc
cmp
icebp
(bad)
call
fwait
add
add
int
fcom
mov
popa
adc
adc
pop
pop
adc
adc
adc
pop
and
lock
call
dec
adc
cmp
lock
call
and
add
push
adc
cmp
add
add
adc
and
repz
call
adc
adc
and
xchg
pop
inc
in
repz
jmp
add
cmp
add
push
adc
adc
dec
pop
adc
adc
ins
sbb
push
loopne
push
adc
sbb
pop
adc
pop
jno
sub
xchg
lock
call
pop
add
push
and
les
jb
imul
pop
pop
or
pop
dec
pop
adc
pop
adc
dec
pop
sbb
pop
adc
adc
pop
or
inc
adc
sub
add
push
adc
ins
push
pop
jnp
sub
dec
lock
call
fwait
add
add
adc
cmp
(bad)
(bad)
call
and
lock
call
and
add
and
dec
mov
add
pop
adc
cmp
call
push
sbb
inc
adc
sub
add
push
adc
push
push
pop
dec
adc
cmp
lock
call
and
add
sbb
xor
sub
add
adc
pop
jg
sub
out
(bad)
call
fwait
add
add
sbb
add
add
or
or
add
push
adc
pop
pop
adc
pop
dec
adc
cmp
pop
add
push
and
push
movs
xor
pop
bound
pop
adc
adc
push
push
pop
sbb
sub
sahf
out
(bad)
call
pop
add
push
sbb
add
sub
add
adc
pop
adc
adc
adc
pop
dec
adc
aas
jge
(bad)
call
sub
sub
je
(bad)
call
pop
add
push
sbb
xor
sub
add
push
push
rcr
push
sbb
out
(bad)
call
fwait
add
add
mov
sti
push
and
adc
adc
pop
or
push
add
add
inc
adc
cmp
out
(bad)
call
fwait
add
add
adc
adc
inc
sub
rcr
push
sub
pop
and
sub
push
out
(bad)
call
pop
add
push
push
adc
es
adc
cmp
repnz
inc
adc
adc
push
adc
pop
pop
adc
pop
movlps
cmp
out
(bad)
call
fwait
add
add
push
pop
inc
adc
sub
add
push
sbb
sub
ret
out
(bad)
call
and
add
and
retf
jbe
and
int
pop
adc
adc
inc
adc
pop
and
sub
mov
fwait
add
add
adc
adc
pop
rcr
daa
pop
inc
adc
cmp
fwait
add
add
sub
add
push
sbb
pop
adc
pop
das
adc
cmp
(bad)
call
fwait
add
add
cmc
sahf
in
and
jl
pop
adc
adc
pop
rcr
daa
pop
cmp
sub
dec
out
(bad)
call
pop
add
push
and
xchg
push
push
inc
pop
adc
es
adc
pop
push
adc
cmp
out
(bad)
call
and
add
push
adc
es
adc
pop
adc
sub
adc
(bad)
call
and
add
and
es
push
and
adc
adc
jne
add
push
pop
or
in
(bad)
call
fwait
add
add
sbb
add
sub
add
and
rcr
push
sbb
sub
shr
(bad)
call
fwait
add
add
adc
es
adc
cmp
dec
adc
cmp
fwait
add
add
sub
adc
or
mov
adc
pop
adc
adc
sub
xchg
in
(bad)
call
pop
add
push
sbb
sub
adc
ins
cs
push
adc
ins
push
adc
push
push
pop
or
sub
imul
add
push
adc
sbb
xchg
pop
adc
adc
xchg
pop
adc
cmp
(bad)
call
and
add
es
pop
cmp
pop
or
or
or
adc
cmp
pop
add
push
and
inc
fisttp
dec
pop
adc
adc
outs
push
adc
outs
je
outs
push
pop
ja
sub
(bad)
in
(bad)
call
pop
add
push
sbb
add
sub
add
cmps
std
(bad)
inc
adc
pop
adc
pop
adc
push
pop
push
adc
cmp
in
(bad)
call
pop
add
push
sbb
add
ins
push
adc
ins
cs
push
pop
cmp
sub
scas
in
(bad)
call
pop
add
push
sbb
xor
sub
add
adc
adc
and
and
adc
cmp
and
add
push
sbb
add
sub
add
adc
adc
sbb
xchg
pop
inc
push
repnz
call
sub
sub
pusha
in
(bad)
call
fwait
add
add
adc
add
add
add
add
adc
add
sub
add
ret
jne
loopne
dec
xchg
and
jnp
dec
cmc
dec
xlat
loopne
mov
and
nop
inc
adc
ror
imul
retf
gs
pushw
inc
int3
in
popf
mov
mov
mov
dec
daa
neg
(bad)
aas
pop
add
dec
fcmove
sahf
and
jle
pop
aas
and
fnstsw
xlat
clc
xor
jmp
lea
xlat
clc
jne
(bad)
push
(bad)
std
imul
jg
scas
and
out
test
adc
push
stc
pop
(bad)
sahf
(bad)
xlat
clc
fstp
lahf
call
scas
pop
repz
aas
(bad)
mov
mov
pop
movs
shr
fidiv
cmc
jp
push
retf
hlt
jmp
xor
outs
pushf
cld
outs
or
in
scas
icebp
imul
jg
pop
jecxz
stc
repnz
cli
jge
fdivr
call
xlat
fcomip
xlat
cld
or
ds
mov
dec
dec
mov
push
jle
mov
or
repz
clc
add
cmp
(bad)
loope
(bad)
scas
icebp
fwait
icebp
(bad)
fmul
sbb
jle
xlat
(bad)
mov
jle
fild
test
idiv
or
jg
(bad)
pop
dec
aas
lahf
add
into
pop
stos
jns
jecxz
pusha
pop
out
xor
ins
repz
in
call
mov
ror
or
lea
and
(bad)
scas
icebp
imul
das
jmp
loop
repz
sar
inc
push
jg
mov
jp
scas
(bad)
mov
cld
cmp
into
aas
std
scas
cld
clc
fcomip
(bad)
push
scas
jg
(bad)
aad
stc
pop
(bad)
sahf
mov
jle
(bad)
out
(bad)
data16
icebp
jmp
jmp
(bad)
xchg
mov
mov
jg
(bad)
cmp
(bad)
xchg
mov
(bad)
sar
scas
sti
adc
in
fucomip
js
pop
call
(bad)
jg
in
dec
(bad)
clc
mov
loop
outs
(bad)
popf
jg
cld
outs
(bad)
mov
mov
xchg
mov
(bad)
(bad)
adc
push
cmp
iret
jle
jg
mov
imul
(bad)
mov
in
add
xlat
fistp
imul
inc
mov
clc
dec
cmp
xor
inc
(bad)
push
pop
cli
imul
jg
std
jl
fistp
jne
mov
push
clc
in
aas
(bad)
jmp
and
inc
adc
jnp
(bad)
outs
and
repnz
lea
popa
out
xchg
(bad)
sti
inc
hlt
adc
mov
(bad)
lahf
push
sar
(bad)
cld
and
push
std
daa
jg
(bad)
lahf
jmp
aaa
cld
and
rcr
xlat
std
sbb
fstp
jg
pop
call
jg
xchg
dec
ja
(bad)
jg
pop
repnz
(bad)
imul
loop
fucomip
rcr
push
(bad)
gs
and
fnstsw
(bad)
jmp
aas
repnz
sti
daa
pop
std
cdq
idiv
aas
jmp
std
int
sahf
icebp
mov
pop
or
ret
pmaxsw
std
dec
stos
cli
imul
arpl
dec
stos
cmp
(bad)
mov
in
(bad)
out
(bad)
xlat
dec
jg
out
or
jp
mov
mov
sahf
lahf
pop
iret
inc
add
add
add
add
data16
cmp
cmp
cli
add
push
push
add
or
jl
scas
cmp
loopne
adc
dec
add
or
ja
scas
cmp
jmp
or
push
add
or
cmp
cmp
cli
add
push
pop
add
or
add
add
inc
or
jl
enter
cld
add
or
ja
in
cmp
add
push
pop
add
or
push
cmp
cmp
jecxz
cmp
inc
add
or
data16
cmp
add
add
add
cmp
cmp
loope
or
pop
add
or
cmp
cmp
add
push
pop
add
or
push
cmp
cmp
jmp
or
inc
add
or
cmp
add
add
add
sti
cmp
cli
add
push
pop
add
or
adc
add
leave
cmp
add
or
push
cmp
add
pop
add
or
cmp
out
push
xor
add
add
add
out
add
push
push
add
or
or
add
add
push
push
add
or
pop
add
add
add
push
add
or
push
cmp
cmp
mov
add
add
jne
imul
xor
add
add
add
or
cmp
cmp
loope
or
push
add
add
add
add
ja
idiv
dec
xor
add
push
dec
add
or
add
add
add
jmp
inc
xor
add
push
pop
add
or
or
add
add
add
cmp
in
add
or
add
add
push
pop
add
or
add
add
add
add
push
push
add
or
cmp
add
add
add
or
jle
scas
cmp
out
add
push
inc
add
or
cmp
cmp
add
add
add
jno
jae
data16
cmp
test
push
adc
or
add
inc
or
push
cli
cmp
loope
add
add
add
add
add
jae
in
cmp
add
adc
add
cmp
cmp
jmp
adc
adc
or
add
fidivr
dec
xor
add
push
inc
add
or
popa
cmp
cmp
cld
add
adc
add
sti
add
inc
add
or
and
push
add
add
add
add
pop
add
or
xor
jecxz
pop
xor
add
push
pop
add
or
data16
add
add
add
push
pop
add
or
jns
int3
cmp
test
push
sbb
add
add
pop
add
or
or
cmp
add
add
add
arpl
cmp
cmp
int3
add
push
dec
add
or
add
add
cmp
cmp
add
add
add
out
pop
xor
add
push
je
jnp
jae
and
sbb
add
add
mov
add
add
push
pop
add
or
cmp
in
pop
push
inc
add
or
jl
jmp
push
push
add
or
add
add
add
add
or
cmp
(bad)
cmp
loope
push
push
pop
add
push
pop
add
or
and
and
sbb
add
jp
jnp
inc
or
cmp
cmp
out
push
push
inc
add
or
or
cmp
cmp
xor
add
push
add
or
addr16
cmp
jmp
sbb
sbb
add
add
add
data16
cmp
cmp
xor
add
or
cmp
in
cmp
jecxz
and
sbb
add
jnp
jle
out
cmp
std
add
or
jg
jmp
or
add
jbe
jae
data16
cmp
cmp
mov
add
or
add
add
add
loope
push
xor
add
push
inc
add
or
jge
sti
cmp
out
add
push
add
or
or
add
ret
xor
add
push
pop
add
or
or
cmp
add
add
jmp
push
push
pop
add
or
or
cmp
add
add
add
add
or
jle
mov
sbb
add
daa
add
add
add
push
push
add
or
jae
scas
cmp
add
push
pop
add
or
or
cmp
add
add
add
jno
jge
ja
loop
add
add
push
add
add
add
add
or
or
cmp
add
add
add
addr16
cmp
jmp
adc
or
or
cmp
add
add
in
cmp
jmp
or
inc
add
or
addr16
cmp
jmp
sbb
sbb
cmp
cmp
cld
add
pop
add
or
ja
scas
cmp
loopne
push
push
pop
add
or
jae
cli
cmp
loope
push
push
sbb
or
pusha
cmp
cmp
in
pop
push
pop
add
or
dec
add
add
cmp
out
add
push
pop
add
or
cmp
add
push
add
or
or
cmp
cmp
cli
add
inc
add
or
jl
cli
cmp
scas
add
push
jge
cmp
sub
cmp
add
inc
add
or
cmp
add
push
pop
add
or
xor
call
add
push
add
or
or
cmp
add
push
add
or
jge
cli
cmp
xor
add
push
pop
add
or
popa
cmp
add
add
add
xchg
push
xor
sbb
xchg
ins
bts
cmp
fld
dec
mov
cmc
retf
push
xchg
mov
int
fisttp
std
cmp
in
sahf
test
aam
push
nop
inc
push
dec
test
lahf
sbb
ins
lock
jg
icebp
xor
or
jecxz
repz
loopne
push
movs
adc
push
jno
adc
cmp
push
inc
cmp
js
dec
sbb
mov
xor
pushf
xchg
inc
test
ret
mov
inc
or
inc
pop
dec
ret
cmp
xchg
push
gs
(bad)
pop
sbb
xchg
fldenv
test
pop
xchg
or
push
adc
add
in
repnz
fs
dec
inc
ins
sbb
je
call
loop
rcr
pop
push
das
pop
adc
xor
inc
pop
or
jg
mov
adc
xor
retf
cmp
xor
cmp
into
pop
sub
sub
rcr
in
scas
out
cmp
mov
cmps
xor
or
push
or
int3
or
pusha
stc
push
cdq
mov
mov
imul
jmp
sbb
bound
and
mov
mov
add
int3
or
ret
mul
or
aad
loope
push
cli
fdivrp
(bad)
iret
clc
sbb
xchg
ja
jb
xor
mov
xchg
out
in
push
call
mov
(bad)
ins
mov
mov
inc
push
clc
fnstcw
hlt
xor
push
sti
jns
shl
cld
pop
jo
push
ins
test
in
xchg
sti
sbb
gs
mov
sub
add
fimul
push
ds
inc
(bad)
test
les
mov
cld
inc
(bad)
call
sub
cs
mov
rol
aad
push
lds
fnstcw
(bad)
sub
loop
in
cmp
dec
jge
mov
pop
mov
adc
or
and
mov
shl
xchg
retf
(bad)
clc
sub
fcomp
out
push
xchg
mov
repz
pushf
loop
dec
lea
repz
pop
cmp
jb
enter
ins
xor
ja
jo
mov
int
test
sbb
push
dec
mov
push
or
jge
sub
test
cld
mov
sbb
loope
out
in
jmp
mov
mov
clc
(bad)
or
jne
inc
fst
ja
ja
dec
jle
(bad)
mov
cmp
mov
ficom
sbb
push
imul
inc
pop
js
mov
leave
mov
push
mov
mov
(bad)
lds
leave
leave
call
loope
mov
int3
sti
or
nop
and
push
xchg
inc
cmp
mov
in
mov
push
test
push
movs
fstenv
lods
icebp
jmp
sub
sahf
or
mov
and
ins
mov
jb
adc
adc
sbb
retf
lods
xor
fcomp
mov
sub
sbb
je
in
xchg
mov
adc
adc
jecxz
out
xor
cmc
add
dec
bound
xchg
sub
mov
mov
add
cdq
sub
fwait
pushf
lahf
cwde
dec
ins
cdq
sbb
arpl
ja
jbe
sbb
push
cmps
add
or
mov
call
rep
(bad)
cmp
repz
scas
cs
pop
iret
(bad)
rcl
pop
jbe
push
or
add
rcl
and
fsubr
into
aam
repz
fdiv
cmp
inc
mov
inc
sahf
movs
jmp
pop
mov
loop
jnp
sbb
rcl
mov
cs
frstor
std
adc
mov
sbb
xchg
shl
cmp
xor
sub
add
retf
mov
xchg
xchg
dec
push
sub
fild
scas
sub
inc
repnz
push
push
aaa
fninit
mov
(bad)
inc
ficomp
in
pop
push
sar
cdq
fs
sar
jecxz
adc
lds
bound
push
xchg
xchg
fist
jno
cs
cmp
outs
cmp
dec
nop
or
into
outs
int
repnz
jp
in
add
repz
(bad)
xor
inc
cmp
fsin
pop
xchg
shl
cmc
cmp
cmp
jg
push
pop
es
js
sar
or
jno
aas
pop
retf
fdivr
xor
bound
and
or
fdivp
ds
jmp
jge
pop
je
call
sub
push
dec
icebp
lods
lock
in
cwde
imul
pop
sub
movs
push
jmp
aaa
inc
sbb
adc
retf
pop
cmp
mov
or
push
hlt
js
pop
and
mov
addr16
stos
mov
mov
ins
hlt
pop
jle
xor
aas
inc
cmps
mov
lods
sbb
mov
cmps
fsubr
adc
xchg
jg
out
or
dec
jbe
sub
push
cmp
sbb
xor
arpl
lods
mov
dec
sti
sbb
test
dec
rcr
rcl
add
ins
pop
addr16
les
arpl
mov
icebp
stos
sub
scas
mov
mov
cmp
and
and
push
rol
jmp
fld
bound
and
or
and
sub
xor
es
cmps
mov
aam
xor
mov
jo
jge
and
add
mov
or
mov
outs
push
mov
mov
test
and
ja
mov
test
jge
scas
dec
mov
les
loope
mov
lea
nop
fwait
mov
fcomp
das
inc
sub
mov
in
and
cmps
adc
or
jb
lods
js
xchg
lahf
xlat
mov
xor
lahf
mov
and
call
push
inc
leave
daa
lock
dec
addr16
inc
lods
popa
push
fcomp
push
sub
mov
or
add
inc
dec
sub
(bad)
push
arpl
je
cmps
stc
push
mov
(bad)
(bad)
jg
mov
inc
aas
call
mul
test
int3
push
cmc
ror
xor
xchg
sbb
stc
xor
ss
sbb
nop
ins
mov
push
ins
out
mov
in
mov
fdivr
adc
sub
mov
int
inc
cmc
mov
pop
std
or
add
scas
dec
push
bound
test
xchg
dec
mov
or
mov
sbb
imul
dec
bound
scas
jecxz
fbstp
rcl
out
scas
cmp
cmp
popf
mov
ins
inc
test
int
mov
lods
movs
sbb
das
sbb
adc
fisttp
jle
and
dec
ret
push
sub
mov
lahf
add
xchg
jae
pop
adc
ins
rcr
push
(bad)
nop
sbb
scas
mov
in
xchg
data16
(bad)
enter
das
test
mov
inc
scas
mov
mov
pop
enter
(bad)
lods
mov
jmp
pusha
es
and
xchg
ja
call
fldenv
xchg
mov
ficom
dec
or
popa
shl
retfw
dec
out
inc
inc
and
int
cmp
pop
mov
mov
mov
(bad)
jl
dec
loopne
cmp
xchg
sbb
in
in
mov
sbb
jnp
scas
or
cs
push
xchg
cmp
dec
aam
push
ds
cmps
or
cmps
or
inc
jecxz
xchg
adc
leave
jl
and
xchg
lds
pop
mov
cwde
les
out
sub
mov
loopne
movs
out
xor
mov
ja
in
cmp
iret
(bad)
dec
cs
mov
xchg
dec
retf
retf
popf
or
jle
push
add
fs
pop
stc
and
out
mov
inc
cld
jp
jo
jns
mov
std
jns
ins
loopne
out
hlt
ret
sub
mov
stos
fnstcw
dec
in
dec
out
adc
lds
jge
(bad)
mov
xchg
hlt
jl
ds
iret
imul
into
adc
cdq
lds
sahf
dec
test
xchg
xchg
loope
cmp
fsub
mov
out
shl
xor
cmp
push
dec
xor
or
mov
and
(bad)
mov
fcomip
add
xor
rcl
push
outs
out
les
shl
jp
dec
add
pop
aad
loop
sub
vmovdqu
rol
outs
nop
dec
and
mov
sahf
jle
sub
push
outs
push
dec
pop
mov
or
xchg
jb
push
shr
sub
jmp
(bad)
cmps
loope
dec
test
dec
mov
xchg
push
mov
mov
adc
and
jle
mov
fcom
mov
ss
cmp
sbb
fmul
xchg
jne
std
lfs
movs
push
(bad)
data16
or
ror
(bad)
cmp
xchg
jmp
xlat
mov
cmp
adc
ret
sub
xor
ds
mov
add
xchg
sub
int3
je
xor
sub
push
mov
sbb
pop
lods
jg
lahf
xchg
xlat
fisubr
sub
rol
mov
clc
adc
sahf
xor
and
call
stos
pusha
es
cmps
cmp
loop
dec
loope
jmp
add
fdiv
push
sar
pop
ins
mov
test
test
lods
and
out
jo
cmp
push
xchg
jbe
mov
fmul
mov
adc
shr
(bad)
loopne
dec
sbb
sbb
mov
pop
sub
xor
cmp
pop
popa
inc
mov
daa
(bad)
hlt
xor
std
push
std
and
pop
es
fcmovne
inc
sbb
or
xchg
and
call
icebp
loop
mov
and
int
call
cmp
jne
frndint
int
pop
sub
inc
pop
iret
pop
xchg
rcl
outs
adc
imul
mov
mov
jmp
dec
add
cli
es
mov
and
xor
stos
pop
arpl
aas
idiv
add
shr
cmps
push
jle
sbb
jge
or
inc
dec
out
mov
pop
add
test
adc
imul
pop
mov
pop
jae
pop
xor
loop
mov
aad
cmp
mov
retf
fimul
pop
xchg
push
mov
dec
fstp
mov
adc
push
cmp
push
outs
xor
xor
mov
loopne
rol
inc
cld
dec
jle
inc
mov
repnz
adc
int
ss
or
repnz
stc
retf
(bad)
sbb
retf
test
outs
xchg
cmp
xchg
jge
adc
into
das
adc
pop
sbb
mov
mov
push
pop
and
call
mov
(bad)
mov
pop
mov
ret
mov
or
xchg
sar
stos
imul
xchg
rcr
mov
add
(bad)
cmp
cli
or
sub
inc
dec
mov
xchg
es
in
add
push
cmp
xor
mov
dec
in
pop
push
dec
cmp
sahf
lahf
sub
sub
jmp
int3
add
bnd
in
repnz
imul
pop
call
test
jmp
cmp
push
push
pop
dec
movs
inc
scas
movs
jae
popf
cdq
psadbw
dec
aam
icebp
or
pusha
push
jne
gs
mov
data16
outs
inc
mov
sahf
push
xchg
ret
mov
call
mov
jmp
out
xchg
and
test
jo
jno
mov
aad
fisttp
int
cmps
test
jl
arpl
jns
fld
lds
or
pushf
mov
pop
cs
sub
push
mov
mov
shl
or
in
mov
pop
inc
test
loopne
mov
mov
inc
ss
jmp
sub
dec
je
bound
gs
rcr
mov
loopne
rcl
int
in
adc
xor
xchg
mov
inc
xchg
or
add
mov
adc
rcl
inc
sti
cmp
cmp
push
stos
pop
aas
les
mov
cwde
ins
cmp
inc
arpl
add
leave
or
and
adc
jp
mov
dec
nop
loop
jnp
lea
loopne
and
push
dec
mov
and
cmc
dec
jmp
sub
xchg
pop
(bad)
sub
fistp
das
call
push
cmp
or
mov
sbb
clc
mov
and
addr16
scas
(bad)
add
popa
or
or
or
inc
push
adc
cs
sub
shl
hlt
add
dec
in
sbb
addr16
or
or
jns
(bad)
pop
adc
fdivr
xor
add
aas
js
xor
add
mov
cmp
test
xchg
daa
mov
dec
mov
popf
sub
mov
mov
or
inc
mov
jb
dec
leave
cs
push
ins
inc
sub
in
(bad)
test
imul
adc
push
das
je
dec
dec
or
stos
enter
ss
sahf
jmp
xchg
repnz
ds
pop
hlt
rcl
ins
jns
and
(bad)
out
(bad)
je
or
stos
dec
ins
adc
ret
(bad)
imul
sub
or
ins
cmc
or
jo
mov
jp
imul
dec
js
mov
imul
inc
ret
imul
mov
xor
loopne
scas
movntps
das
mov
test
cmps
jno
jno
out
adc
test
adc
cmps
(bad)
xor
imul
mov
imul
popa
stos
jge
pop
movs
xor
xor
adc
cmp
mov
sbb
sbb
cmp
xlat
(bad)
ss
push
jne
mov
sub
outs
dec
pop
ins
sahf
dec
test
push
arpl
jne
sahf
call
pandn
movs
fsubr
ret
aaa
into
pop
or
aam
scas
mov
movs
lahf
call
sbb
mov
enter
ficom
pushf
sub
int
das
rcl
dec
pushf
loope
int
sub
mov
pusha
xchg
adc
pop
sahf
sub
sub
imul
adc
xchg
fsubr
sar
sbb
out
out
xchg
stc
cmc
and
in
aam
test
pop
rcr
cmps
setl
sar
out
shl
ss
mov
mov
je
dec
sbb
push
aaa
into
ret
pop
cmp
fadd
cmp
adc
add
adc
pop
std
add
or
fst
popf
hlt
vaddsubpd
stos
mov
mov
nop
popa
aaa
cs
addr16
or
imul
das
mov
cwde
and
sub
inc
stos
mov
jl
repnz
dec
test
in
or
xor
sbb
and
(bad)
adc
ret
stos
mov
mov
fucomip
leave
cmp
xor
iret
add
call
xchg
sbb
xchg
xchg
lahf
cmovnp
es
lods
adc
xchg
lea
ret
adc
ins
sbb
push
jmp
repz
mov
sub
push
lock
xchg
ficomp
bound
mov
cmc
and
adc
and
mov
les
pop
adc
cdq
imul
mov
pop
repz
xor
mov
js
into
and
sbb
ror
rcr
ins
add
push
cmp
call
rcl
jg
add
aas
movs
adc
adc
xchg
sbb
iret
mov
enter
into
sub
fnstcw
loopne
repz
les
cdq
std
arpl
and
dec
sbb
ds
sar
jge
ficom
mov
xor
in
cmc
xchg
mov
mov
cmp
and
inc
js
xchg
rol
jo
dec
jle
fld
pop
es
arpl
sbb
sbb
xchg
add
cmp
movs
cmp
lahf
lahf
ss
push
sub
cmp
xchg
xor
push
outs
adc
out
cmc
pushf
xchg
shl
mov
mov
repnz
and
dec
hlt
pop
sbb
jmp
hlt
out
dec
sti
stos
jge
add
push
xchg
mov
mov
pop
bound
mov
call
in
stos
adc
dec
out
adc
sbb
sbb
cmc
cmp
fdiv
xor
pop
cmc
idiv
cmp
mov
dec
adc
jne
aad
inc
test
int3
jnp
scas
adc
int3
xchg
pop
cmp
aad
pushf
popf
dec
adc
mov
mov
sar
push
ffree
icebp
pop
aam
dec
cmps
(bad)
scas
fs
pop
adc
inc
push
push
cmps
mov
add
xchg
loopne
xchg
not
xor
xchg
gs
add
outs
cdq
movs
out
jb
adc
mov
jno
movs
fucomp
jmp
dec
je
jp
mul
mov
aaa
int3
xor
inc
pop
and
sbb
inc
lds
push
sahf
out
xor
aas
push
fstp
pop
nop
push
sbb
adc
jp
cmps
repz
sbb
mov
mov
mov
sbb
xor
fs
test
inc
xor
dec
fisub
addr16
mov
sbb
jnp
inc
inc
jbe
adc
adc
ret
in
ret
js
jo
mov
aas
mov
cmp
jp
daa
cmp
jp
sbb
dec
dec
dec
and
dec
mov
dec
aam
fisubr
outs
jnp
mov
push
arpl
das
inc
fnstcw
std
ds
mov
cmps
(bad)
cwde
lea
inc
pop
mov
clc
int
daa
or
lea
sub
sbb
in
out
loopne
cmp
pop
mov
in
in
cmp
and
loopne
xchg
sub
sti
mov
js
xor
xchg
add
sub
pop
cli
call
push
test
push
mov
mov
jb
cdq
cli
(bad)
and
jbe
jp
loop
iret
mov
das
add
(bad)
mov
sbb
cmp
push
std
mov
dec
sti
or
test
xchg
call
lods
jle
and
dec
(bad)
and
out
test
stos
lahf
out
rcr
retf
mov
jo
shr
(bad)
pop
fs
pusha
xor
lea
jo
or
mov
cmp
ja
outs
out
mov
inc
adc
sbb
sub
rcl
rsqrtps
gs
clc
mov
xor
jbe
not
jp
xor
sub
jnp
mul
mov
les
imul
jbe
mul
xchg
inc
scas
cs
cs
ins
pop
add
fmul
mov
(bad)
adc
les
adc
pop
punpckldq
mov
sbb
cmp
add
jge
lods
ss
lods
ins
lods
pusha
hlt
mov
jge
jo
sub
(bad)
push
jmp
mov
pop
xor
mov
inc
hlt
push
sar
mov
mov
scas
xchg
test
adc
icebp
fs
test
int
push
mov
jl
cmp
and
sub
dec
add
cmc
inc
push
pop
dec
adc
mov
rcl
cmps
fcom
ret
push
xchg
xlat
into
adc
movs
sub
mov
imul
lock
repz
movs
push
dec
mov
mov
sub
retf
push
hlt
daa
sub
dec
fisubr
aam
outs
mov
cli
pop
movs
jb
xchg
xchg
push
lock
or
sub
(bad)
in
xchg
je
sbb
sub
xor
das
stos
aam
ss
bound
lahf
sub
sub
in
push
movs
leave
sbb
retf
dec
push
pop
xchg
sar
sahf
mov
mov
sub
inc
inc
sbb
mov
std
push
icebp
jl
cdq
ins
sub
or
dec
lods
push
adc
mov
add
adc
mov
test
shl
sbb
cmps
fimul
cld
movs
jae
mov
cs
clc
(bad)
mov
pop
fist
jbe
gs
(bad)
leave
mov
or
inc
mov
xor
movs
mov
lods
mov
mov
shl
adc
shl
movs
das
test
ja
test
pop
dec
inc
push
jle
sbb
and
xchg
test
aam
mov
mov
(bad)
dec
inc
jge
mov
dec
outs
out
adc
mov
mov
sahf
sbb
mov
sbb
xchg
mov
cmp
sahf
jecxz
clc
hlt
sbb
mov
mov
bound
mov
das
xchg
icebp
test
nop
mov
sub
mov
loopne
push
pop
push
mov
test
mov
mov
(bad)
cwde
jae
fndisi(8087
and
mov
mov
jmp
dec
stos
mov
push
(bad)
enter
xor
aam
fsubr
inc
mov
sti
xchg
mov
and
mov
push
and
sbb
mov
and
fwait
mov
outs
js
test
gs
inc
mov
cmps
or
sub
sub
in
outs
pusha
out
test
mov
in
retf
xor
fmul
jmp
out
int3
mov
xchg
js
inc
sbb
test
mov
fcom
mov
scas
inc
add
xor
aam
dec
popf
pop
es
dec
mov
lods
inc
mov
loop
into
jb
pop
push
arpl
stc
fs
sbb
out
or
out
retf
mov
(bad)
cmps
mov
push
sub
cwde
jmp
push
inc
xor
lock
outs
retf
add
call
xor
loop
add
inc
xlat
fxch
leave
or
pop
mov
fmul
int3
outs
or
sub
xor
call
push
sub
mov
mov
aam
cli
jp
pop
gs
mov
xchg
inc
adc
cmp
pop
stc
cdq
xor
movs
les
setp
xchg
and
rol
cmp
repz
sbb
dec
jl
add
mov
nop
xor
xchg
in
or
(bad)
mov
icebp
movs
and
cmp
outs
inc
(bad)
push
cmps
jl
pop
push
imul
pop
sbb
push
xor
xchg
mov
inc
mov
adc
xor
rcl
cwde
and
push
mov
jp
das
xchg
xor
xchg
jnp
mov
rol
repnz
pop
or
dec
jb
pop
mov
scas
loopne
jo
xor
inc
dec
and
stos
gs
imul
xchg
jge
xor
jle
js
xor
ja
jbe
xor
mov
jl
mov
push
mov
mov
daa
jg
sbb
jae
mov
sbb
xor
sub
and
fiadd
(bad)
rcl
and
inc
xor
mov
push
outs
sbb
daa
jbe
pop
(bad)
fistp
and
cmp
fbstp
mov
jg
stos
add
sub
xlat
sbb
cdq
lods
xor
adc
lock
cmp
imul
imul
fsub
dec
rcl
xchg
sub
dec
xor
int
lahf
push
je
repz
jle
test
es
sbb
fdivr
xchg
or
add
and
and
arpl
mul
ror
cmp
xchg
cmp
push
aaa
cmp
repnz
jmp
sub
jp
inc
mov
add
ret
mov
xor
cld
movs
push
mov
ja
loopne
dec
add
pop
pop
std
sub
retf
sbb
xchg
retf
push
jge
fdiv
rcl
ror
ja
add
xchg
hlt
pop
aaa
loopne
pop
leave
aam
mov
les
xor
jp
mov
xor
nop
mov
scas
mov
xor
or
frstor
push
mov
js
aas
cmp
jmp
(bad)
adc
and
add
mov
push
mov
sub
cwde
push
mov
imul
jae
hlt
and
imul
inc
pop
stc
push
iret
out
sub
jmp
pop
clc
sub
lea
jecxz
xchg
adc
jmp
xor
push
clc
mov
adc
dec
ret
pop
imul
or
xlat
ins
push
add
push
push
dec
sbb
daa
adc
das
cmps
stos
adc
push
cmc
jo
pushf
jle
loope
dec
mov
push
test
pop
pop
mov
in
repnz
push
out
cmp
popa
popa
pop
and
sub
jns
push
cmps
mov
pop
aaa
xor
fadd
jae
aaa
sub
adc
sub
sub
outs
arpl
pop
bound
xor
lods
fs
push
aas
sub
jecxz
mov
movd
push
cdq
cmp
addr16
sbb
fcmovnbe
rcl
jae
outs
push
ja
push
sub
xor
or
add
in
daa
test
push
leave
sub
js
mov
mov
pop
aas
jae
jns
pop
test
dec
push
pop
out
out
add
pop
stos
or
and
ds
es
outs
pop
mov
shl
pop
pop
dec
cmps
loop
cli
test
(bad)
stos
sbb
and
dec
pop
imul
jae
std
out
sbb
jge
cmp
xor
xor
push
ins
call
adc
data16
xor
(bad)
in
or
retf
mov
cdq
jl
sub
jns
hlt
pop
adc
pop
inc
stos
inc
jnp
xor
jge
ins
sub
lea
das
dec
aam
shr
lahf
mov
imul
ins
ins
pop
(bad)
xor
or
clc
inc
mov
shl
push
test
dec
inc
pop
pop
and
jns
ins
es
shl
inc
sub
sbb
cmps
mov
pcmpgtb
addr16
lock
outs
mov
ror
push
inc
cmp
push
movs
mov
cmp
dec
cli
stos
addr16
dec
dec
mov
maxps
(bad)
lods
xchg
xchg
arpl
jmp
or
js
test
dec
inc
dec
jb
iret
add
fist
jo
fbld
mov
sbb
popa
stos
push
inc
ins
add
xchg
je
push
mov
add
pop
cmc
ret
out
out
fdivr
push
inc
repz
mov
(bad)
lods
ds
push
pop
and
mov
pop
(bad)
loope
push
cmp
mov
and
mov
pop
jae
sbb
aaa
pop
mov
jne
shl
sub
pop
and
xor
sub
ins
add
push
sti
push
jge
adc
call
fnstenv
jp
xlat
mov
push
cmp
or
and
test
cli
repz
sbb
inc
fild
lds
mov
mov
adc
in
jnp
dec
mov
gs
mov
xor
mov
ror
(bad)
ds
shl
xor
int
shr
into
or
mov
out
sub
shl
sub
scas
jae
mov
xchg
jo
pop
jbe
cmps
ret
fcomp
adc
jne
stos
js
adc
mov
fidivr
pop
pop
ins
test
test
test
into
retf
lahf
sub
fmul
paddw
sub
mov
popf
mov
stos
and
cld
pop
dec
ss
add
clc
and
adc
mov
fs
add
cmp
cmp
push
ret
push
(bad)
mov
dec
dec
push
out
cwde
jns
jge
push
push
mov
jnp
retf
sbb
push
cwde
xchg
mov
scas
mov
cmp
das
mov
sbb
ins
push
mov
and
pop
mov
cmps
fcomp
js
mov
hlt
mov
add
adc
cmp
fild
inc
fisubr
leave
addr16
jle
mov
jmp
test
hlt
inc
icebp
pop
xchg
lods
cld
sub
mov
xor
or
lock
cmpps
sti
jmp
(bad)
fimul
(bad)
mov
nop
inc
test
push
add
gs
cmp
outs
inc
xchg
adc
aad
mov
fiadd
int3
cwde
xchg
xchg
fsub
and
and
test
aad
pop
lock
jle
dec
dec
jp
out
test
ror
pop
push
fs
pop
push
add
shl
aas
in
mov
push
cmc
jmp
mov
mov
mov
pop
ficomp
in
ins
bound
je
out
jmp
ror
stc
hlt
outs
xor
mov
daa
and
data16
pop
mov
imul
jecxz
mov
(bad)
adc
scas
test
mov
in
int
and
inc
jg
jge
mov
push
imul
xchg
or
ss
or
lds
or
mov
mov
and
pusha
cmc
(bad)
imul
(bad)
and
cmps
cmp
lea
stos
and
scas
jg
pushf
jg
in
fsubr
push
xchg
rcl
stos
xor
out
arpl
shl
push
xchg
push
in
call
jl
jp
pop
fdivr
jmp
jp
je
mov
adc
out
fwait
loop
mov
aaa
sub
lahf
call
push
pop
inc
xchg
mov
fdiv
mov
mov
pop
dec
dec
and
enter
popa
pop
fiadd
int3
xor
mov
mov
cmp
xchg
data16
loope
xchg
inc
adc
pushf
dec
and
scas
cmp
sbb
pop
(bad)
out
ss
sub
mov
mov
fcom
fisubr
xchg
mov
fbld
(bad)
retf
pop
out
jg
add
sub
pushf
inc
jecxz
jge
cdq
sbb
pop
inc
mov
pop
add
cwde
scas
xchg
retf
sub
enter
call
movs
movs
out
imul
fdivr
lods
retf
jbe
sbb
cli
stos
add
std
fild
in
xchg
inc
pusha
stos
repnz
jl
popf
dec
xor
mov
inc
pop
stos
xchg
fsubr
ret
repnz
jne
push
pop
test
mov
and
pop
xchg
add
call
add
loopne
out
sub
dec
scas
jp
add
pop
lock
das
punpckhwd
xor
shr
popf
ret
xchg
push
xchg
push
mov
jb
dec
xor
and
addr16
push
ins
loopne
hlt
mov
shl
mov
fwait
mov
cmps
jne
ret
mov
pusha
push
sti
mov
cmc
jae
aaa
sub
mov
sub
ret
jg
dec
xchg
mov
lds
push
pop
xchg
sbb
dec
shl
or
push
and
jmp
hlt
(bad)
mov
inc
sbb
and
pushf
pop
ja
leave
sbb
int
scas
dec
jmp
repz
es
mov
xchg
pop
out
cli
stos
dec
xlat
out
adc
call
sbb
mov
xor
(bad)
neg
icebp
add
jb
pop
ret
sub
sbb
mov
dec
(bad)
(bad)
xchg
test
or
add
(bad)
sti
push
cld
test
std
scas
pushf
pop
sub
daa
mov
jg
jae
lea
add
test
add
dec
push
xor
(bad)
push
add
call
mov
sbb
cmps
(bad)
mov
xchg
push
jae
mov
dec
xor
mov
imul
jg
push
push
fcomp
int3
aas
and
(bad)
enter
xor
out
inc
(bad)
es
mov
push
and
push
xchg
or
and
rcr
fimul
xor
sub
int
jmp
or
cmps
sub
pop
cmp
int3
fimul
daa
pop
gs
push
mov
push
jne
cmc
(bad)
push
ret
call
pop
cli
fstp
push
aaa
scas
push
loopne
and
mov
inc
sbb
cs
les
xchg
sub
inc
dec
pop
popf
push
adc
push
enter
dec
xor
mov
xchg
retf
ret
mov
icebp
push
sub
xor
(bad)
push
pop
out
frstor
mov
jmp
pop
mov
bound
sti
mov
es
xor
xor
mov
popf
jecxz
pop
imul
into
daa
loopne
jl
xor
and
mov
mov
mov
xchg
pop
xchg
pop
xor
hlt
mov
sbb
test
rol
push
cmp
sbb
add
outs
retf
pop
daa
mov
sbb
sbb
jecxz
stos
sub
push
pop
sub
or
mov
call
fmul
cmp
stos
pop
xchg
fmul
repnz
pop
into
test
mov
cmp
mov
repnz
xor
sbb
cli
scas
mov
cwde
sbb
cmp
mov
lods
fwait
jp
or
mov
(bad)
into
pop
sbb
ss
adc
inc
cs
outs
nop
mov
cmp
(bad)
retf
dec
adc
add
leave
iret
or
hlt
das
cmp
(bad)
test
pop
jmp
xlat
mov
mov
mov
std
arpl
loop
daa
cmp
mov
sbb
adc
sbb
leave
jae
fidivr
jmp
retf
adc
(bad)
test
enter
imul
pop
pop
xor
into
cmp
mov
popf
mov
and
mov
inc
or
pop
pushf
iret
push
lods
(bad)
retf
mov
mov
push
mov
ds
dec
mov
jle
inc
add
xlat
pop
push
inc
xchg
sbb
loop
cld
fadd
in
add
icebp
jnp
jo
adc
jmp
mov
cli
mov
ficom
mov
dec
fcomp
add
mov
adc
xchg
mov
sbb
jge
popf
xor
in
sub
mov
and
add
cmps
lods
cmp
in
inc
rcl
cmp
mov
push
mov
gs
mov
ds
xchg
test
mov
xchg
dec
lods
ret
lds
push
cmps
fs
jae
add
mov
jne
pop
add
jp
aad
or
fmul
xor
sbb
jae
jmp
mov
ror
sahf
loopne
sub
jae
push
ret
push
retf
or
xor
inc
cmp
and
enter
mov
jge
and
jmp
cmc
lahf
push
jo
fsub
test
lock
dec
sbb
mov
(bad)
sti
adc
fs
dec
push
hlt
inc
(bad)
lock
cwde
fisub
sub
cli
aaa
pop
stc
push
xor
iret
jo
mov
dec
sbb
(bad)
ficom
or
sub
pop
fsubr
pop
leave
xor
fs
test
adc
lods
pop
fs
sti
fs
add
daa
fldcw
mov
or
cmp
jl
push
setl
gs
retf
pop
jb
pop
mov
test
mov
clc
mov
add
gs
sub
xchg
push
out
push
xchg
fwait
mov
jnp
mov
mov
jmp
push
iret
add
fcmovnbe
stos
mov
test
ins
jns
pusha
retf
out
es
bound
jg
rol
repnz
outs
es
adc
retf
pop
dec
aaa
adc
aam
jae
cmp
sbb
das
cmp
in
xchg
mov
fwait
imul
daa
and
or
pop
add
jne
test
dec
sbb
lods
push
mov
pop
(bad)
ror
(bad)
leave
cs
push
cld
ins
retf
ds
sbb
(bad)
sub
pop
cs
scas
aaa
mov
sbb
adc
mov
and
imul
mov
mov
pusha
cmc
inc
pop
jle
mov
inc
dec
adc
cmp
aaa
fs
lock
call
gs
add
dec
jmp
repz
pop
pop
mov
pushf
and
and
mov
call
add
sub
iret
push
jle
jb
jbe
mov
lods
push
(bad)
jecxz
mov
outs
js
jb
ret
(bad)
lock
inc
or
xor
loopne
ins
iret
jg
and
cmp
mov
and
arpl
xchg
cmp
inc
mov
xchg
add
gs
xchg
ror
mov
xor
push
movs
ficomp
jg
push
das
push
out
lock
fwait
int3
sub
jae
cmp
pop
push
nop
sbb
stos
in
hlt
js
icebp
pop
mov
aas
and
jnp
cwde
popf
mov
test
mov
ret
xchg
push
jp
jge
mov
stc
xor
jno
jmp
js
out
leave
mov
jl
shl
aaa
mov
repnz
(bad)
mov
mov
mov
jns
test
(bad)
int
pop
mov
inc
jmp
jmp
sub
loopne
daa
and
xor
lods
in
movs
imul
int
push
loope
leave
push
fsubr
sti
shr
push
loopne
dec
sbb
or
xor
ss
gs
sub
not
inc
pop
xchg
inc
sbb
jae
call
enter
push
imul
cmp
(bad)
ins
cmp
sbb
push
fisub
outs
out
jp
mov
or
push
inc
in
cmp
inc
repz
add
rcl
xchg
and
cmp
int3
xchg
sbb
int
test
or
jbe
aas
lea
out
jmp
mov
mov
and
movs
popf
adc
imul
push
add
xchg
pop
out
sub
mov
mov
ja
fcmovbe
outs
test
out
sar
sbb
(bad)
and
cmp
jmp
pop
in
mov
rol
rcl
xchg
push
pushf
stos
sub
aam
jmp
mov
pushf
push
inc
ds
inc
add
or
out
or
fild
mov
out
int3
sbb
cwde
xor
push
mov
ins
mov
cli
inc
lds
ja
sbb
movs
dec
mov
mov
cmp
push
lds
mov
jg
xchg
ret
sub
(bad)
outs
mov
imul
inc
dec
mov
mov
mov
or
mov
dec
cmps
cs
popf
jmp
popf
sub
add
fcmovnb
sub
fidivr
fs
cwde
jg
xchg
adc
xchg
jae
xchg
mov
push
and
inc
loop
ss
popa
and
ins
clc
nop
push
imul
cmp
sbb
jp
lock
mov
xchg
aas
loop
or
sbb
loop
fbld
cmp
mov
sahf
das
outs
stc
adc
neg
out
adc
ficomp
ret
cwde
and
int
adc
push
repz
or
add
ret
sbb
fisttp
scas
push
xor
push
mov
push
jns
ins
icebp
mov
jbe
push
add
mov
cdq
scas
clc
(bad)
out
arpl
and
jmp
test
stos
push
and
ret
(bad)
pusha
fcmovne
leave
mov
aam
hlt
repnz
js
and
sbb
push
scas
rcl
lea
repnz
rcr
retf
dec
xchg
rcr
sti
pop
and
jg
addr16
retf
adc
xchg
cmc
loopne
rcr
mov
packuswb
test
out
fild
jg
jge
in
dec
cli
jae
(bad)
xor
(bad)
xlat
pusha
add
dec
mov
xor
(bad)
adc
inc
jnp
xchg
sbb
in
mov
test
jb
popa
jmp
jns
mov
ret
shl
push
sub
gs
and
xchg
arpl
out
(bad)
mov
inc
fcmovnb
nop
inc
js
loopne
inc
jle
mov
sbb
pushf
push
(bad)
dec
mov
pop
xchg
xchg
retf
add
pop
xor
xor
mov
stos
cli
imul
sub
inc
in
mov
pusha
mov
jbe
sub
sbb
int
or
xor
dec
gs
loopne
test
fimul
add
aad
push
dec
ja
test
mov
call
call
fild
or
popa
leave
daa
test
mov
cmp
and
imul
xlat
push
fs
xor
imul
xor
cli
inc
dec
movsx
and
sbb
mov
push
lock
inc
cmp
lea
js
xchg
xor
movs
int3
lock
ja
cmp
push
pop
and
fdiv
adc
xor
nop
lds
(bad)
stc
sti
dec
xor
mov
or
sub
jb
call
adc
mov
repnz
ret
dec
stos
sbb
mov
adc
sub
cmp
dec
jmp
stc
jl
ds
adc
sti
push
pop
aam
cdq
popf
inc
repz
sti
cmp
fbld
sti
and
add
adc
out
pop
sbb
mov
movs
gs
outs
mov
cdq
or
arpl
imul
ja
stos
pusha
cmp
xor
mov
mov
add
or
adc
or
fisubr
push
jmp
push
and
idiv
movs
adc
js
stos
xchg
out
cdq
pop
and
pop
adc
sub
xor
fstp
in
(bad)
int
popa
xor
add
retf
movs
lods
push
mov
repz
(bad)
ins
int
test
ficomp
retf
inc
iret
imul
arpl
cmps
push
jp
(bad)
fist
cwde
fwait
stc
outs
ja
outs
mov
call
mov
dec
cmp
int
mov
in
mov
aam
mov
push
mov
mov
mov
pop
ret
fs
add
dec
push
fcom
(bad)
int
scas
lods
retf
xchg
cmp
jns
pushf
sbb
xor
push
mov
lods
out
fist
pushf
dec
(bad)
ins
dec
jns
cli
mov
mov
imul
fistp
pusha
lods
cli
js
push
mov
enter
fadd
bound
dec
push
pop
mov
loop
mov
es
mov
push
add
add
fsub
fwait
jl
sti
pop
movs
xchg
jbe
cmc
shl
jge
sub
mul
imul
mov
inc
mov
xor
aas
sar
out
sub
inc
lds
mov
and
cmp
neg
rcr
pop
mov
pop
test
dec
mov
xor
cmp
or
out
adc
gs
jle
sbb
mov
cmp
pop
ret
dec
cmp
mov
lea
adc
in
fcomp
adc
cld
std
ret
outs
retf
xchg
jmp
mov
fisub
mov
in
push
call
jle
mov
mov
inc
cwde
and
mov
sbb
push
inc
neg
push
mov
or
pop
and
mov
cmp
sar
pop
(bad)
popa
xchg
repnz
test
mov
lods
adc
mov
mov
in
xchg
test
pop
sbb
xchg
popa
cld
sbb
fiadd
sbb
inc
inc
and
fwait
rcl
and
loope
add
and
push
and
enter
aad
xor
add
push
call
fadd
iret
push
xchg
pop
cmp
mov
cs
mov
in
fnsave
inc
into
sbb
jne
cmp
sbb
ss
nop
mov
fdivr
jns
and
push
mov
push
push
add
retf
xchg
push
mov
adc
out
outs
fisttp
and
mov
ins
std
cwde
jl
bound
xchg
es
mov
les
aaa
ss
retf
js
idiv
sub
pop
add
loope
fwait
pop
mov
pop
mov
xor
xor
inc
xchg
test
cmps
mov
cwde
call
retf
and
call
inc
pop
aas
fwait
pop
and
imul
pop
mov
mov
fs
clc
mov
les
mov
stos
cmp
xchg
jne
dec
push
ins
mov
inc
unpckhps
outs
mov
jg
sub
lahf
enter
sar
jnp
adc
call
enter
mov
ins
jne
sub
mov
or
pop
xor
inc
fstp
pop
imul
sahf
jae
pop
push
sbb
add
ins
mov
jle
jnp
in
hlt
mov
stc
jp
sbb
imul
in
cdq
clc
adc
fstp
inc
call
popa
adc
jp
inc
ss
in
out
mov
cwde
scas
ins
mov
out
add
xchg
sbb
scas
ficom
jb
adc
sti
cs
fwait
repnz
cmps
sbb
test
pop
sti
push
cmp
sbb
jb
mov
mov
bound
retf
lahf
inc
retf
arpl
dec
cmc
icebp
ud0
aam
jmp
mov
jle
sbb
pop
pusha
lea
cmc
and
movs
xchg
pop
nop
jmp
call
inc
adc
sub
cli
sub
jns
(bad)
dec
mov
push
mov
in
xor
mov
push
pop
sahf
and
(bad)
mov
shl
dec
retf
inc
ror
clc
fcom
out
int3
stos
(bad)
rcr
mov
pop
cmps
or
sbb
cmps
dec
mov
sar
inc
add
mov
sbb
dec
dec
or
(bad)
mov
and
dec
push
fwait
mov
xchg
pop
push
or
sbb
or
mov
push
enter
push
push
(bad)
(bad)
and
dec
cmp
pop
inc
test
add
psubsw
js
lds
add
pushf
and
aam
inc
fnstenv
inc
mov
cmp
jp
xor
cmp
pop
movs
sahf
nop
xchg
enter
gs
out
(bad)
mov
mov
sbb
je
mov
pop
js
lods
je
xchg
xlat
or
loopne
mov
retf
cld
pusha
stos
mov
lods
retf
(bad)
sar
call
clc
xor
out
add
sub
xchg
jecxz
and
ret
das
inc
cmc
xor
pop
jp
fwait
jg
sbb
pop
popf
add
cli
jp
imul
cmp
mov
mov
imul
pop
pop
ss
mov
jne
cmps
inc
mov
cld
mov
jl
sub
xchg
push
pop
sbb
sahf
or
pop
les
push
add
cmp
cs
cmps
push
inc
call
jl
not
fs
sub
rcr
xor
jmp
fsub
scas
cmp
push
cmp
scas
xchg
data16
dec
adc
imul
mov
leave
pop
mov
sub
das
mov
in
jecxz
and
setne
add
popf
loopne
jne
adc
leave
bound
ds
mov
cwde
adc
adc
shr
test
add
out
push
int
clc
ret
scas
bound
add
lods
push
and
mov
adc
inc
lahf
push
fbstp
fadd
add
pop
adc
gs
adc
shr
xor
dec
adc
ret
out
dec
mov
jne
loop
(bad)
cmps
mov
ret
inc
dec
fisttp
ja
jbe
mov
call
jb
or
sub
dec
ret
aad
cmp
dec
jo
inc
sti
pop
jle
std
test
sub
add
ret
push
xchg
imul
ret
shr
les
pop
enter
sar
dec
inc
adc
cmp
repnz
(bad)
mov
dec
jmp
shl
pop
xchg
pop
lahf
jecxz
addr16
add
xchg
out
xor
mov
shr
mov
push
mov
inc
or
popf
lock
mov
push
jp
inc
mov
xor
loop
dec
test
movs
addr16
inc
dec
push
and
jle
pushf
sbb
sub
ret
pusha
test
jp
mov
fs
jne
pop
bound
push
loope
in
xor
je
retf
cmp
in
dec
into
or
test
iret
aas
mov
and
adc
xchg
and
shr
push
movs
jmp
jecxz
pusha
int3
and
pushf
scas
jg
cs
push
inc
add
mov
sub
mov
xchg
and
cli
xchg
cdq
fsub
mov
mov
arpl
pop
outs
(bad)
shl
jbe
cdq
pop
push
stos
jbe
mov
pop
dec
sbb
repnz
and
lods
push
fstp
inc
lods
push
inc
ins
mov
ds
cmp
jp
push
stos
jge
call
test
out
stos
cmc
jns
cmps
add
dec
xor
ja
cmps
mov
call
int3
cmp
sub
xchg
xchg
repnz
retf
mov
stos
fs
and
bound
mov
xchg
in
lock
jbe
mov
or
sbb
and
and
das
push
mov
sar
into
out
retf
test
test
je
dec
mov
lock
repnz
cmp
pop
adc
inc
les
add
sbb
and
pop
or
je
jae
aaa
jmp
lods
les
inc
int
jge
pop
call
clc
icebp
fimul
out
call
not
jp
jecxz
add
adc
mov
xchg
mov
add
retf
jo
or
or
scas
pushf
adc
mov
scas
mov
push
jecxz
aas
push
cld
sar
sbb
fs
pop
push
mov
fsubr
in
mov
lock
ds
test
cmc
cwde
add
movs
mov
hlt
iret
mov
test
xchg
and
call
sub
ret
cmps
fiadd
outs
mov
fwait
movzx
cmp
push
out
loope
scas
cmp
mul
mov
mov
inc
push
dec
cmp
sbb
mov
(bad)
xlat
mov
jge
sub
inc
adc
(bad)
mov
test
out
mov
push
xchg
jo
cdq
outs
icebp
clc
cmp
xor
mov
mov
cmps
stos
fld
out
lods
xor
out
jns
and
div
fdiv
popf
sbb
js
inc
mov
popf
(bad)
in
mov
mov
or
pop
or
pop
mov
enter
cmps
dec
jbe
test
fisttp
(bad)
adc
push
mov
pushf
(bad)
lds
dec
aad
lahf
dec
xchg
adc
imul
or
mov
fdiv
jge
mov
neg
xchg
jae
adc
xor
neg
and
fsubp
stc
xchg
(bad)
retf
les
test
cs
daa
xor
push
inc
add
leave
ss
and
mov
aad
sbb
jns
das
cmp
or
mov
sbb
adc
ss
lock
adc
sbb
jle
mov
pop
sub
ficom
jmp
cmc
cld
mov
pushf
mul
loope
nop
mov
loopne
leave
xlat
jle
sbb
aam
xor
cmp
daa
xchg
and
and
scas
jecxz
mov
int
push
pusha
out
jo
and
repz
mov
cmp
xor
jg
xor
vpsrld
cdq
sbb
mov
sbb
out
sbb
push
mov
sub
mov
jb
das
jno
ret
hlt
add
sub
push
cdq
ret
push
xor
xor
xchg
or
retf
imul
push
mov
call
add
cvtdq2ps
addr16
sbb
mov
sbb
shl
in
sub
adc
xchg
mov
cli
xor
adc
jecxz
sbb
xor
dec
ins
data16
mov
xor
(bad)
(bad)
pop
dec
outs
push
leave
ja
xor
call
pop
int3
lahf
scas
xchg
sub
test
adc
pop
dec
sub
xchg
sub
test
mov
int3
outs
cli
cld
adc
fsub
das
push
stos
mov
fcmovnb
mov
jae
test
pop
push
stos
jle
retf
or
aas
mov
addr16
stos
ss
scas
and
js
sub
mov
aad
div
ins
ja
ss
push
sub
idiv
std
and
retf
std
cmc
mov
sbb
call
int
pop
jge
test
clc
xchg
imul
pop
jno
inc
adc
sub
xchg
addr16
scas
div
pop
sub
push
icebp
fsub
fadd
or
enter
inc
and
jl
test
sbb
sub
aam
mov
std
mov
mov
fcomp
out
js
or
call
mov
int3
fisubr
rcl
mov
sbb
mov
cmp
loop
jb
sbb
and
ret
out
aad
outs
fist
mov
retf
je
jns
push
add
ins
push
comiss
idiv
xchg
or
cwde
inc
nop
mov
inc
mov
push
hlt
les
int3
dec
xchg
cmp
cmc
add
cmp
loope
jg
dec
pop
fdiv
retf
adc
cmp
xchg
call
xchg
sbb
adc
jecxz
add
xchg
loope
add
adc
punpckhbw
lahf
xchg
mov
fs
in
jl
mov
or
dec
mov
stc
int
test
inc
sub
outs
in
jmp
js
mov
clc
jp
cdq
mov
mov
dec
adc
or
adc
xor
sub
inc
xchg
jp
jnp
mov
outs
jge
(bad)
neg
sub
xchg
cli
movs
sbb
mov
sub
(bad)
mov
mov
cmova
aad
push
aam
push
jmp
mov
pop
sbb
jae
inc
adc
cmp
loop
rcl
ja
push
mov
ins
pop
cdq
jecxz
xor
adc
fdivr
sub
mov
sahf
repnz
pop
loopne
iret
(bad)
aaa
cli
dec
push
cmps
mov
jmp
xchg
(bad)
daa
out
(bad)
fsubrp
pop
push
outs
aad
jns
push
jno
pop
dec
stc
repnz
sub
aam
cmp
xor
cmps
or
or
sbb
add
fcom
mov
sub
cmp
cs
cmp
or
jne
fdiv
in
add
movs
xor
jbe
xor
enter
ins
add
or
push
and
push
ins
push
inc
mov
inc
lea
and
and
push
pop
pop
xchg
add
aad
jae
loopne
adc
setle
retf
adc
pop
sbb
sub
std
cdq
sbb
fnstsw
adc
test
fcmovnbe
inc
sbb
mov
xchg
inc
inc
add
fwait
(bad)
std
xchg
push
movs
mov
fucom
(bad)
jne
in
test
cli
jbe
add
lock
ror
(bad)
sbb
aad
cmp
sub
or
xor
mov
sub
lds
cmp
sub
test
cwde
test
push
ins
adc
fcmovne
(bad)
adc
daa
adc
push
push
lods
add
dec
sub
push
ficomp
stos
jg
fisttp
xor
add
push
push
fwait
(bad)
xor
jecxz
stc
and
clc
jg
pop
mov
lea
stos
cdq
enter
lahf
xor
inc
loope
aam
add
dec
and
sbb
lods
add
and
and
mov
xor
ds
adc
push
add
inc
enter
lock
adc
adc
mov
and
arpl
ja
test
hlt
cmp
ja
call
mov
cmp
cs
into
test
jb
addr16
adc
xor
and
mov
add
enter
lea
xchg
movs
sti
outs
rep
push
sbb
cmc
and
or
and
sub
sbb
bound
(bad)
shr
and
fwait
xchg
(bad)
xlat
jl
fwait
lea
sbb
int
add
dec
fdivr
and
sbb
aas
fucomip
loopne
pop
inc
sub
bound
out
ins
mov
aad
pop
push
push
xchg
xchg
mov
cs
lahf
mov
stc
sbb
adc
pop
push
test
xchg
sbb
daa
or
jl
rcl
add
clc
push
movs
adc
adc
data16
xlat
(bad)
xchg
push
arpl
push
cmp
dec
jge
mov
xchg
mov
cmps
add
jae
daa
out
hlt
and
push
fucom
int3
or
push
jo
mov
push
popf
dec
pop
jns
fstp
inc
test
push
stc
lds
jg
call
outs
xor
mov
xlat
or
mov
(bad)
mov
inc
loop
pextrw
push
fucomi
aad
sub
or
ins
mov
gs
add
adc
or
xchg
push
add
xchg
mov
lahf
and
retf
xchg
sub
add
ret
fidivr
in
rcr
jae
and
adc
dec
xchg
cli
gs
adc
cmps
fmul
or
sub
or
faddp
inc
jle
aaa
add
(bad)
ret
add
inc
xchg
push
aam
dec
int3
(bad)
inc
jbe
in
mov
mov
dec
cmp
and
(bad)
and
push
pop
mov
dec
outs
mov
sbb
and
gs
sbb
push
jne
mov
cmp
addr16
push
and
jns
popa
xchg
push
inc
pop
bound
jp
std
mov
push
xchg
call
iret
jge
daa
cli
(bad)
test
pop
dec
aad
push
cmp
dec
jmp
jmp
test
mov
ss
jo
dec
jmp
(bad)
ins
out
jp
sub
mov
stc
ins
jle
lock
mov
or
cmp
les
shr
mov
out
adc
mov
test
cwde
sbb
(bad)
(bad)
mov
in
fwait
xor
pop
dec
add
or
sub
push
ret
inc
sbb
iret
inc
xchg
addr16
jl
jo
scas
push
sbb
je
into
rol
(bad)
fstp
pusha
and
ins
dec
cmc
aas
xor
add
dec
adc
imul
mov
bound
cmp
cli
adc
into
mov
xor
add
icebp
iret
cwde
shl
out
jmp
cs
mov
cmps
ret
add
in
jo
or
push
fcmovnu
adc
cmps
jae
push
push
test
xor
sub
cli
fmul
push
mov
or
inc
mov
mov
sub
jg
push
cmp
mov
shr
mov
lock
sahf
mov
jne
rcr
and
dec
(bad)
mov
movs
pop
push
jbe
cmp
add
push
(bad)
bound
popf
pop
or
stos
xor
aaa
xor
mov
sbb
aaa
pop
push
lods
(bad)
mov
pop
leave
jnp
lds
cmp
test
gs
inc
(bad)
(bad)
fdivrp
push
sub
in
daa
out
in
aam
inc
ret
leave
clc
hlt
pushf
jo
div
push
popf
jnp
and
jg
mov
xchg
cdq
(bad)
jl
sbb
shl
xchg
sub
mov
pushf
repz
xchg
sub
jb
jle
mov
push
xchg
push
fimul
sahf
sub
pop
ror
inc
jp
xor
sbb
pop
in
pusha
jo
inc
cmp
fisttp
cmp
not
test
fcomp
retf
push
mov
pop
mov
mov
sub
jecxz
push
jno
addr16
loopne
lock
lods
gs
outs
test
dec
add
mov
sub
test
xor
or
dec
or
pop
shl
sbb
push
addr16
ficomp
sub
fsubrp
aas
jb
inc
sub
or
daa
sbb
test
adc
jbe
add
inc
outs
ret
mov
lock
jo
push
arpl
dec
(bad)
adc
in
inc
and
mov
pop
push
sub
shr
aam
jo
into
mov
fdecstp
push
xor
inc
(bad)
push
sar
retf
cmps
mov
pusha
inc
mov
pop
rol
dec
das
ss
(bad)
test
loop
sub
in
sbb
fcmove
dec
aad
scas
jns
lahf
es
xchg
mov
push
in
dec
js
call
xlat
les
retf
dec
inc
retf
cdq
neg
lods
test
call
and
aaa
js
add
cli
pop
push
push
outs
in
es
fist
in
add
ss
int3
pusha
or
adc
rcr
sub
outs
jo
rcr
rcr
inc
lods
lock
add
mov
cs
add
dec
inc
and
addr16
mov
add
inc
and
std
cmp
xchg
or
movs
mov
call
jecxz
bound
int3
daa
and
jmp
cmc
pop
imul
daa
inc
out
fwait
call
mov
and
in
fsubp
leave
lock
jp
(bad)
leave
xchg
jns
dec
arpl
ret
mov
adc
iret
leave
mov
xor
cmps
sbb
scas
(bad)
or
xor
or
sahf
dec
cdq
fcmovnbe
rol
mov
pop
mov
mov
ss
ret
inc
jbe
xor
mov
push
dec
call
sub
repnz
xchg
inc
xchg
sub
retf
pop
out
or
adc
mov
mov
fnstenv
sar
adc
lahf
(bad)
std
rcr
cmp
test
push
aad
fisub
retf
mov
fwait
sub
cld
rcr
adc
bound
add
and
out
sub
movs
mov
or
lods
mov
pop
aad
pop
sbb
fwait
sub
mov
jp
ins
inc
je
dec
xor
push
sub
ret
fdiv
les
dec
arpl
xchg
bound
rcr
xchg
shufps
ret
push
xor
daa
sbb
mov
push
xor
test
rcr
inc
push
cmps
pop
dec
jl
addr16
jge
xor
cmp
test
(bad)
int3
fwait
add
(bad)
imul
sub
shl
in
dec
push
mov
fmul
mov
shr
sub
jae
push
and
sub
jle
imul
cdq
xor
sti
xor
adc
cmp
cmp
jmp
les
fsubr
arpl
leave
mov
push
scas
dec
gs
jns
inc
sbb
mov
jns
mov
adc
cmp
jmp
xchg
push
pushf
mov
clc
stos
mov
js
call
sub
cmc
es
rcr
sti
sar
pop
dec
mov
mov
cld
xchg
jmp
jl
xchg
push
sbb
in
xor
push
(bad)
stos
pop
dec
xor
repz
sub
jo
dec
out
add
mul
adc
dec
cld
fnstsw
fimul
inc
cld
or
in
popa
xchg
idiv
es
icebp
jp
xchg
jne
ss
icebp
gs
sbb
pop
outs
stc
mov
sbb
push
xchg
mov
sub
mov
ja
push
push
data16
dec
adc
shl
mov
out
adc
and
sub
sbb
add
cs
aad
div
add
pushf
jb
mov
mov
or
pop
ds
(bad)
loope
les
and
fisubr
xchg
or
jb
fcomp
mov
cmp
imul
ins
inc
sti
leave
dec
shl
lds
dec
and
jl
imul
xchg
aad
dec
push
jo
imul
daa
ret
dec
push
outs
and
je
xor
cmp
cmp
out
cmp
rol
loopne
sbb
in
pop
(bad)
test
inc
inc
ds
xor
cmp
push
cwde
(bad)
in
dec
test
jmp
mov
fidiv
ins
adc
aaa
out
stc
cmps
sub
jge
call
jo
int
xchg
dec
or
mov
outs
xor
xor
and
mov
xor
xor
mov
movs
sar
and
je
mov
jnp
clc
adc
aaa
push
pop
ins
xor
or
xor
pop
dec
jo
mov
adc
iret
pop
repz
mov
and
mov
add
dec
dec
ret
sub
js
es
fldcw
mov
repnz
mov
cmp
ins
push
repnz
aad
mov
push
movs
inc
xchg
adc
pop
pop
mov
rcr
f2xm1
or
ret
movs
pop
xchg
cwde
out
sbb
leave
dec
pop
dec
in
sbb
jbe
stos
mov
push
sbb
pop
pop
push
inc
or
idiv
cmp
pop
sub
mov
add
dec
fdivr
sub
in
pop
inc
in
inc
add
imul
in
(bad)
mov
nop
mov
mov
xor
jge
into
push
and
pop
and
scas
int
imul
enter
push
movs
cmps
xlat
lahf
call
inc
cwde
ja
lods
jp
jle
in
pop
and
cmps
ja
je
fwait
jbe
pop
enter
addr16
in
lods
fnstcw
xchg
pop
push
xchg
repnz
mov
mov
in
push
adc
scas
ret
shr
jmp
cmps
fwait
sub
arpl
cmp
dec
movs
mov
cmp
std
scas
add
pop
push
xor
xchg
jne
aad
(bad)
mov
or
pop
mov
sti
xchg
das
popa
out
stos
lea
lea
fidiv
push
jb
add
and
stos
mov
xor
push
inc
jmp
xor
mov
mov
and
add
pop
jb
mov
leave
sub
les
xchg
push
repz
xchg
mov
adc
rol
push
and
adc
mov
pop
xor
fs
aad
mov
mov
ins
call
mov
and
mov
mov
xor
test
jle
jnp
and
add
mov
scas
cmc
mov
pop
xor
fimul
xchg
adc
das
push
out
fnstcw
add
dec
lock
clc
jp
fucom
xor
call
pop
mov
popa
mov
imul
push
jmp
movs
dec
ds
sbb
fisubr
cs
inc
enter
add
dec
mov
and
out
nop
fsubr
ret
mov
sub
adc
or
mov
ss
sub
sahf
sub
fchs
retf
popf
imul
ret
lahf
push
test
mov
jecxz
inc
xor
cli
dec
jl
xchg
dec
setb
popf
(bad)
fcmovne
jns
jae
sbb
push
and
test
jl
out
xor
test
dec
sub
sbb
pop
mov
mov
mov
(bad)
mov
inc
retf
inc
test
push
arpl
popf
fild
dec
sti
push
pop
gs
test
jl
xchg
or
xchg
mov
dec
lahf
xlat
pop
sub
jno
fdivrp
cmp
fcomp
data16
lds
and
iret
mov
inc
push
movs
out
sbb
dec
mov
jnp
addr16
cmp
packsswb
mul
out
pop
add
pop
into
push
call
test
mov
aas
fidivr
pop
mov
loop
push
jns
mov
pusha
cmp
retf
arpl
jbe
jmp
mov
sub
fidivr
enter
inc
cmp
pushf
push
pop
inc
mov
sbb
adc
xor
sub
add
ja
sahf
push
xor
cld
push
loopne
sbb
cdq
mov
dec
and
mov
test
mov
jb
xor
bound
or
dec
cwde
push
jmp
dec
cmp
(bad)
pop
adc
cmp
fsub
pop
push
cmp
out
cmps
(bad)
push
pop
mov
das
je
adc
jmp
xchg
sub
push
test
mov
adc
jno
lea
stc
(bad)
pop
das
sbb
sub
dec
(bad)
dec
call
xor
jmp
nop
test
jl
mov
xchg
jnp
aad
mov
and
xor
ret
jb
push
rcl
inc
xchg
sub
aas
mov
fsubr
ins
fld
test
pop
aam
sub
mov
pusha
mov
push
sbb
pop
fisttp
adc
jbe
inc
dec
out
jo
popa
pop
ret
sbb
inc
nop
xchg
popa
cmps
iret
push
(bad)
in
mov
xor
and
loope
cmp
push
test
pop
repz
jns
cmp
dec
push
(bad)
push
sbb
lock
push
xchg
push
jmp
icebp
out
les
add
or
mov
pop
mov
jbe
xchg
std
xor
pusha
cdq
jecxz
pop
add
xchg
out
or
push
pop
lea
lock
lahf
loop
repnz
and
fmul
int3
iret
repz
cdq
or
aas
mov
in
inc
mov
push
xor
cmc
xchg
dec
mov
add
cld
cmps
sub
aam
push
test
jmp
jno
xor
aad
sbb
cmp
cdq
in
dec
dec
inc
scas
lea
repnz
imul
pusha
cmps
inc
stc
es
jb
sub
xchg
cmc
mov
inc
jecxz
mov
scas
sbb
inc
daa
sbb
scas
jne
cmp
test
in
ss
aaa
mov
aas
das
push
lods
push
xchg
mov
ins
or
in
add
lock
inc
jns
or
mov
cli
adc
aas
sbb
aam
outs
sbb
add
enter
push
scas
jmp
xlat
retf
ret
in
retf
pop
and
loopne
and
or
push
and
jnp
lock
int
pop
iret
(bad)
lods
cwde
iret
dec
add
adc
push
repz
xchg
fdiv
xchg
test
mov
aas
jecxz
ret
mov
nop
jnp
imul
sbb
sti
sub
pop
mov
in
pop
aam
addr16
and
push
pop
push
rol
jne
add
dec
or
push
inc
mov
pop
sar
sbb
or
pop
out
inc
and
sbb
(bad)
fstp
push
pop
or
test
and
repnz
stos
jnp
sub
retf
in
mov
(bad)
int
das
leave
fs
adc
fst
jl
lods
test
fcmovnu
dec
(bad)
mov
in
sub
movs
xchg
pop
mov
xchg
xchg
cmp
(bad)
(bad)
cmp
popa
xchg
push
jnp
stos
sub
xchg
cmp
adc
ret
mov
sahf
mov
xor
out
das
and
iret
push
outs
scas
fucom
xor
test
push
xor
out
scas
add
fwait
xchg
test
mov
dec
inc
inc
dec
jge
push
add
rcr
add
cmp
cmp
fdiv
mov
cmp
inc
push
popa
add
jne
mov
(bad)
sbb
jne
inc
jb
imul
retf
push
inc
push
xor
jnp
cdq
push
add
popf
and
jbe
mov
xor
pop
sub
pop
mov
dec
sub
push
into
dec
inc
cmc
jno
test
cdq
and
sbb
stos
rol
stos
imul
mov
add
cmp
adc
out
lea
xor
int
fiadd
add
scas
and
cmps
inc
and
leave
or
rcr
push
lea
test
push
and
xlat
popa
addr16
xchg
and
xor
dec
mov
inc
shr
mov
jg
cmp
and
ds
lods
xchg
loop
sub
dec
push
push
loope
xchg
xchg
push
imul
adc
adc
sbb
sbb
pop
pusha
gs
xchg
fldcw
ja
in
mov
adc
stos
pop
loope
mov
dec
xchg
jge
(bad)
lea
adc
jbe
xor
xor
cmps
addr16
iret
ret
pop
aad
out
adc
mov
mov
outs
fcom
(bad)
movs
hlt
sar
out
or
mov
icebp
pop
jae
mov
pop
(bad)
mov
pop
mov
inc
push
loop
imul
lds
inc
push
push
jge
clc
jae
jno
daa
and
aam
mov
jnp
cs
imul
pop
inc
or
add
mov
or
clc
pushf
mov
mov
dec
les
xchg
sbb
jns
ret
pop
mov
adc
fstp
sub
int3
out
jo
jb
jno
adc
shr
dec
jecxz
loope
dec
sub
jg
fsub
test
pop
add
push
and
test
push
inc
jle
enter
sbb
rcr
mov
(bad)
and
adc
sbb
dec
or
or
push
adc
daa
pop
jecxz
imul
pop
cmp
scas
xchg
sub
jns
fs
out
ror
cli
in
pop
rcr
cmp
aad
test
sbb
fisttp
retf
and
or
or
inc
cmps
adc
sahf
inc
mov
imul
retf
(bad)
cmp
iret
or
sub
push
paddusw
cmp
cli
ds
dec
adc
jmp
adc
sar
mov
jb
inc
xchg
aad
pop
sti
ror
add
test
aaa
jl
mov
mov
sbb
fcmovu
adc
(bad)
mov
xchg
(bad)
in
out
adc
vprotq
popf
mov
mov
in
aaa
mov
fs
or
push
mov
je
mov
addr16
xor
shl
je
popf
loop
and
mov
mov
mov
cmp
sbb
mov
xchg
jecxz
stos
cmp
sbb
outs
fisub
push
jl
cmp
dec
push
push
bound
movups
push
outs
sbb
ror
(bad)
xchg
iret
cmp
xchg
dec
sbb
loope
int
es
and
aam
xor
ret
mov
cld
jmp
ins
sub
xlat
outs
or
add
movs
jne
retf
xor
dec
std
jae
fild
in
xor
stos
jno
sub
repz
(bad)
and
test
mov
lods
adc
in
loop
cwde
sub
imul
retf
jbe
call
pushf
pop
mov
xor
idiv
mov
pop
inc
mov
pmulhw
jno
nop
mov
hlt
fstp
push
pop
fstp
(bad)
aas
(bad)
scas
or
mov
mov
test
cmp
and
jns
aaa
or
sbb
outs
sub
xor
out
jno
daa
inc
pop
adc
xor
xchg
scas
push
call
sub
ja
mov
gs
loope
pop
(bad)
out
fwait
leave
push
jnp
sub
push
push
in
or
cmc
cli
adc
jp
in
stc
rol
test
bound
mov
outs
xor
push
xor
fs
aaa
sbb
push
push
sub
popf
lea
mov
add
sbb
sti
push
mov
adc
and
mov
inc
mov
sbb
and
inc
mov
or
inc
cmp
repnz
movs
mov
sbb
inc
lock
fistp
mul
inc
mov
rcr
movs
into
lods
xlat
lods
inc
pop
fcmovne
(bad)
pop
mov
movs
inc
sbb
test
aam
xor
sub
ins
mov
sahf
cmp
sub
mov
sub
xor
jp
dec
push
ins
aas
in
arpl
(bad)
sbb
dec
rol
dec
clc
mov
pushf
xor
cmp
xor
mov
mov
cmp
dec
mov
div
sbb
add
neg
add
in
aad
push
cmp
cmp
cs
sahf
jecxz
adc
xchg
faddp
lods
fcmovnu
xchg
push
cmp
mov
out
sub
lock
add
and
fidivr
aas
cli
lock
fimul
call
leave
mov
js
dec
in
add
mov
je
mov
adc
cwde
lods
push
test
leave
sbb
lock
xlat
stos
push
add
jne
(bad)
test
das
mov
cli
sbb
stos
jbe
adc
push
cwde
add
lods
cwde
outs
add
jle
dec
xchg
sub
push
out
pop
sbb
aam
aas
push
inc
sub
mov
dec
out
scas
addr16
adc
add
imul
retf
push
jbe
mov
lods
test
repz
xchg
cmp
jmp
cmp
mov
test
pop
sbb
mov
cld
fisttp
imul
add
cld
mov
mov
std
pusha
and
movs
aaa
ja
cmp
push
fsub
jg
loope
icebp
daa
test
ror
jge
stos
repnz
scas
fadd
inc
jbe
sbb
aam
std
cmp
push
popf
fnstenv
mov
push
push
arpl
dec
xor
jns
cmps
pop
mov
scas
(bad)
js
inc
(bad)
inc
not
jbe
in
in
jp
push
frstor
rol
leave
mov
imul
push
push
enter
push
mov
loope
pop
fldcw
and
inc
lds
fs
icebp
ins
mov
xor
add
and
mov
in
cmps
(bad)
div
pop
movs
pop
aas
sub
(bad)
jp
cmps
or
sbb
inc
cmps
jecxz
jne
sub
dec
dec
adc
leave
out
and
mov
xchg
push
push
les
fnstsw
xor
inc
dec
imul
bswap
mov
in
das
ret
inc
std
push
add
add
xchg
rcr
cmp
movs
ja
leave
mov
push
mov
jg
add
call
test
scas
loope
jecxz
popf
sbb
(bad)
movs
cwde
dec
gs
lock
push
int3
inc
fbstp
jmp
add
inc
add
out
cmp
mov
jmp
inc
inc
mov
and
adc
call
pop
mov
pop
push
jl
pop
push
movs
mov
lahf
pop
inc
call
ficomp
pop
and
das
pop
pusha
fmul
mov
sub
not
adc
loope
imul
pop
sub
jno
xor
sbb
retf
loope
jle
jbe
pop
mov
push
cmc
add
mov
mov
shr
cmp
shl
stc
data16
mov
adc
push
push
sub
cld
sbb
aaa
test
fsubr
test
ffree
cli
outs
inc
pop
push
sub
arpl
jg
adc
les
std
cmp
fnstsw
test
repz
and
jecxz
mov
jle
adc
xchg
mov
(bad)
sbb
imul
mov
or
push
or
dec
add
sbb
ja
and
in
add
scas
cmp
out
mov
cdq
mov
adc
loop
test
sbb
adc
lods
loopne
jg
cmps
dec
adc
fsubrp
and
enter
inc
retf
clc
arpl
and
inc
lods
dec
cmps
inc
cli
idiv
sbb
jo
dec
inc
loope
dec
mov
aam
sbb
jmp
jge
and
inc
call
repz
jno
sub
loope
popa
popf
dec
push
sar
outs
pop
jno
and
sbb
push
bound
int3
mov
jmp
mov
jne
push
mov
pusha
scas
xor
inc
out
(bad)
ins
cld
ins
mov
pcmpgtw
xor
jge
(bad)
sahf
in
fdiv
or
mov
std
mov
sahf
mov
or
cmp
test
retf
pop
sahf
repnz
in
aam
xchg
cmp
sub
mov
rol
loop
jmp
push
fdiv
sti
jge
shl
fld
outs
pop
cmp
adc
add
icebp
sub
(bad)
jo
jb
cmp
clc
dec
fst
lds
inc
repnz
cmp
mov
test
jg
cld
cld
lahf
sbb
jle
out
shl
(bad)
fs
mov
outs
xchg
adc
mov
(bad)
pop
xor
push
popf
dec
das
test
not
inc
in
jae
lea
fidiv
pop
sbb
cmc
dec
(bad)
mov
jno
cmp
sbb
or
cmp
cli
je
idiv
jmp
jge
ror
cmps
adc
add
jae
mov
pop
adc
adc
iret
je
inc
call
call
xchg
repz
add
mov
mov
div
xchg
inc
xchg
jbe
cwde
xchg
cmp
mov
dec
fistp
push
popf
cs
fsub
dec
inc
retf
out
loope
fxam
mov
in
xor
add
jge
add
mov
add
sub
inc
add
cwde
pop
mov
adc
mov
cdq
sub
jbe
ss
test
xor
cli
js
sub
mov
arpl
jno
out
ret
int3
push
cmps
adc
pop
add
es
xor
enter
adc
aaa
mov
retf
pop
mov
mov
imul
pop
aas
ja
ja
rcl
xchg
call
jp
sub
cmp
pop
(bad)
loop
mov
idiv
add
xor
xor
dec
lock
arpl
les
cmp
inc
pop
outs
push
popf
xchg
pop
(bad)
xchg
lahf
in
jno
inc
aad
pop
vpmadcswd
push
adc
mov
jecxz
call
mov
imul
ret
pop
cs
repz
fisub
lea
dec
dec
push
aad
popa
jmp
fcmovb
and
cmp
out
inc
inc
ret
popf
arpl
mov
xchg
mov
es
xchg
stos
leave
ins
mov
adc
in
stc
shl
cwde
dec
ror
aam
sbb
lahf
out
xor
std
or
int3
imul
pop
inc
aad
dec
in
outs
mov
mov
rcr
hlt
and
lock
jmp
xor
js
pop
push
mov
stc
in
in
add
push
in
out
pop
mov
adc
xor
iret
test
sar
ins
push
test
shl
hlt
mov
(bad)
cmp
lods
push
call
fs
mov
outs
mov
in
aad
sbb
adc
pushf
mov
adc
push
mov
test
push
sbb
hlt
xchg
pop
addr16
xchg
push
jb
pushf
or
inc
jl
hlt
and
cwde
lea
test
test
jp
or
push
mov
iret
push
cdq
(bad)
sub
sub
nop
sub
in
xchg
scas
out
cmp
es
adc
dec
xor
mov
popf
mov
jle
pop
jmp
mov
sbb
loope
xor
push
inc
lea
cmp
cwde
jo
push
repnz
addr16
fwait
test
stos
push
xchg
cdq
icebp
xchg
jbe
inc
retf
jmp
xchg
inc
sbb
pop
adc
mov
mov
sbb
jno
out
adc
add
xchg
jae
mov
add
jg
pop
xor
leave
and
xlat
cmp
dec
loopne
addr16
sbb
sbb
inc
adc
cld
sti
xchg
sbb
lds
xchg
lahf
jmp
push
scas
ss
mov
sbb
cmp
jmp
and
jecxz
sub
es
push
push
mov
loop
or
or
adc
mov
push
sahf
cmp
mov
jnp
fsubr
jmp
out
adc
jbe
ds
pop
call
mov
les
aad
jl
mov
iret
iret
mov
jne
pusha
cmp
addr16
fbld
daa
(bad)
mov
xchg
fild
cwde
pop
xchg
mov
(bad)
(bad)
arpl
cmc
pop
es
dec
cmp
inc
lds
fldenv
add
xlat
pop
(bad)
sbb
xchg
repnz
(bad)
(bad)
aaa
aas
das
iret
sub
pop
add
mov
cdq
pop
in
(bad)
sbb
mov
test
sbb
mov
xchg
and
test
lds
add
or
sbb
cmp
mov
(bad)
adc
lock
(bad)
cmp
retf
xchg
inc
xchg
(bad)
sti
les
ins
mov
adc
or
das
arpl
sti
shr
icebp
xchg
mov
daa
dec
push
cmp
lods
scas
lods
push
rcr
mov
jnp
in
mov
xor
pusha
lea
enter
and
xor
fisttp
(bad)
cwde
icebp
dec
inc
aam
inc
mov
mov
leave
jnp
into
cmp
cmp
mov
mov
(bad)
loope
mov
test
bound
aad
cmc
push
mov
dec
cmps
icebp
daa
cmc
imul
sbb
cmp
inc
mov
retf
ret
es
push
(bad)
scas
xrelease
popa
mov
xchg
inc
rcl
(bad)
xchg
fsqrt
xor
in
xchg
aas
xchg
aaa
mov
mov
adc
loope
dec
imul
pop
mov
cmp
xchg
daa
xchg
rcl
cdq
scas
daa
mov
push
adc
and
test
imul
std
push
adc
in
or
jb
hlt
sbb
pop
push
ds
sub
cli
daa
ret
movs
sbb
(bad)
stc
seta
lods
sar
sub
xchg
mov
cmp
inc
call
mov
aas
ja
leave
dec
mov
(bad)
pusha
mov
out
mov
mov
and
ldmxcsr
mov
jl
ja
(bad)
push
dec
int3
and
nop
loopne
and
lods
and
lea
add
sbb
xor
jle
xchg
scas
retf
pop
jnp
pushf
jb
fldcw
enter
fisubr
aas
sbb
ds
cmp
mov
inc
mov
or
sub
jo
stos
sahf
mov
mov
jmp
loop
pop
mov
mov
mov
sub
mov
std
stc
ficomp
cmps
jmp
scas
adc
test
ins
push
sbb
pushf
ins
out
sub
xchg
xchg
imul
lods
push
and
outs
dec
inc
ss
(bad)
sbb
jbe
push
push
es
fstp
pop
xchg
cmp
loopne
fsubr
pop
mov
fbld
cmp
loope
shr
(bad)
(bad)
repz
push
inc
xchg
adc
rcr
es
fwait
push
push
jp
imul
(bad)
pop
and
cmp
rcr
push
outs
mov
ss
mov
stc
sub
mov
rol
cmp
loope
pop
repz
push
shl
sub
jecxz
call
push
fadd
jnp
lock
aaa
mov
inc
(bad)
fcom
inc
cwde
inc
ret
and
cmps
add
xchg
fnstsw
sbb
cdq
mov
jmp
icebp
add
push
movs
bound
outs
mov
xor
pop
fs
mov
out
sbb
cwde
add
cmp
cmp
retf
hlt
xchg
or
icebp
and
mov
icebp
jl
or
mov
jnp
data16
and
push
jp
stos
push
push
push
and
in
test
or
jp
jmp
imul
mov
pop
xor
mov
in
xor
test
lahf
in
inc
cmps
pop
fidivr
dec
add
ins
out
out
jle
stos
inc
and
lods
mov
mov
cld
inc
adc
inc
xchg
mov
bound
stos
lock
lea
(bad)
(bad)
sbb
ror
mov
pushf
inc
dec
mov
fiadd
mov
inc
pushf
inc
les
dec
jl
in
in
adc
xchg
lods
mov
sbb
repnz
pop
xchg
cli
xchg
mov
xchg
loopne
clc
test
aaa
retf
sbb
pop
scas
add
int
adc
stos
xor
jns
or
pop
pop
iret
(bad)
ja
aam
jp
jl
retf
pushf
mov
xor
jg
sbb
mov
push
loopne
imul
mov
scas
fild
div
cmps
pop
sub
cdq
cmc
in
les
mov
in
mov
call
std
mov
lods
cs
test
ss
outs
push
sbb
aaa
jae
dec
jbe
scas
mov
dec
mov
shl
dec
popf
cmps
mov
bnd
dec
jb
jbe
push
in
mov
cmp
sbb
xlat
xchg
stos
or
jo
adc
fstp
imul
sbb
out
fstp
js
fidivr
arpl
dec
cmps
outs
popf
sub
movs
inc
xchg
inc
icebp
mov
js
sub
mov
lock
dec
push
dec
sbb
repnz
xchg
(bad)
pop
dec
add
int
jge
sub
adc
sbb
in
sbb
sub
cmp
ins
jmp
xchg
push
into
retf
xchg
pop
jb
ret
mov
outs
and
stos
sub
cli
ret
test
mov
iret
or
iret
mov
fs
xchg
arpl
js
mov
stos
outs
in
call
adc
ins
xchg
lods
jge
inc
and
add
or
xor
mov
push
cdq
outs
fld
int
inc
(bad)
fcom
pop
xor
mov
push
sub
or
pusha
add
(bad)
jle
push
pushf
fistp
pop
pop
mov
lods
inc
dec
xchg
(bad)
xlat
dec
(bad)
inc
and
mov
retf
(bad)
fsub
and
dec
add
xchg
cld
push
inc
jmp
out
jns
add
bound
push
fcmovnbe
inc
mov
fisubr
hlt
or
int
mov
ins
in
call
shl
push
cmp
mov
js
push
inc
xor
popf
or
mov
ror
repnz
inc
jb
mov
es
cwde
pop
in
cmp
xor
cmp
test
and
loopne
xor
and
sbb
idiv
cs
test
mov
push
les
jo
add
xchg
aad
add
adc
jp
ins
add
mov
aaa
shl
fdiv
dec
jne
push
mov
dec
pop
mov
fwait
xchg
or
dec
mov
not
nop
sbb
adc
mov
mov
sahf
sahf
sub
push
mov
adc
pop
stc
icebp
xor
push
loopne
sbb
sub
lahf
cmps
(bad)
push
jo
and
out
movs
(bad)
dec
sbb
mov
dec
cmp
fiadd
push
in
inc
lods
mov
(bad)
cmps
dec
push
cmps
or
xchg
iret
mov
jno
icebp
or
data16
add
cmps
mov
inc
ds
or
bound
aaa
(bad)
mov
cld
or
mov
mov
cld
in
shl
out
dec
mov
sub
fdivr
pop
or
and
jecxz
cdq
cmp
lea
jg
inc
data16
out
stos
xlat
pop
movs
dec
(bad)
lods
adc
mov
inc
test
rcr
(bad)
pop
xchg
and
or
push
ret
stc
cmp
clc
retf
cmp
add
jl
mov
lods
shl
sti
mov
iret
idiv
or
movs
cmp
sub
test
mov
mov
imul
loop
call
push
push
mov
mov
rcr
mov
dec
fadd
jg
jecxz
cmps
outs
push
mov
xor
adc
aad
in
nop
in
add
dec
call
xor
sub
fld
daa
cmp
pushf
mov
stc
jnp
inc
mov
push
sti
in
scas
fistp
sbb
sub
ins
push
sbb
sbb
add
ror
enter
jo
cli
addr16
sar
cmc
daa
jmp
sar
inc
test
stos
mov
inc
sbb
out
push
nop
aas
cmps
jmp
stos
scas
pop
jge
xchg
xchg
mov
or
and
mov
dec
sbb
mov
or
int
adc
arpl
in
jo
jb
jle
xchg
or
outs
or
div
arpl
adc
pop
call
repnz
aad
sub
add
sahf
dec
push
iret
sbb
mov
loopne
dec
mov
xchg
call
jge
xor
pusha
shl
repnz
xchg
div
outs
mov
sahf
outs
cwde
sbb
xor
addr16
xor
shl
mov
jae
push
(bad)
ds
push
mov
pop
jp
add
or
mov
inc
(bad)
(bad)
(bad)
lock
loopne
mov
xor
(bad)
push
test
lahf
or
cmps
jae
xchg
(bad)
push
das
movs
idiv
shl
jl
call
fist
mov
fsub
pushf
push
fwait
mov
push
fist
loop
movs
jp
scas
sub
pop
stos
mov
test
lea
xor
sub
lods
out
push
cmp
add
pop
mov
cld
aaa
test
jae
ss
add
call
enter
call
repnz
jge
jbe
pusha
xchg
xor
cmps
push
repz
and
add
es
dec
sub
in
pop
(bad)
outs
nop
sahf
mov
popf
cmp
movs
adc
ss
mov
jp
repnz
loop
xor
enter
nop
jl
ins
test
cmp
sub
xchg
cmp
or
mov
fdiv
fisubr
in
push
or
es
je
add
cmp
lahf
(bad)
in
repz
mov
std
pop
mov
pop
je
dec
scas
popf
push
dec
xor
ficom
scas
mov
push
out
ins
push
jno
push
xchg
outs
mov
loope
pusha
sahf
in
(bad)
outs
repnz
sub
aam
ficomp
jecxz
cmp
fiadd
xor
mov
das
cwde
(bad)
psrad
popf
inc
imul
cdq
mov
int
xor
out
mov
xchg
push
je
scas
adc
std
ja
enter
mov
bound
cmc
xchg
pop
stos
or
xchg
or
loop
movs
jo
add
pusha
enter
ret
pop
out
inc
loope
xchg
std
test
xor
xchg
xor
sbb
enter
push
mov
mov
or
jg
xor
sbb
xor
mov
xchg
gs
dec
inc
sar
test
mov
daa
call
jmp
data16
retw
mov
(bad)
cli
adc
xchg
sti
lahf
and
pusha
clc
js
sbb
call
push
dec
jg
mov
add
mov
and
test
clc
xor
jnp
loopne
and
and
lock
add
lea
jecxz
dec
and
xor
xor
pop
mov
or
mov
pop
mov
jb
push
jmp
cmps
xor
fimul
fwait
sub
add
sbb
inc
mov
mov
idiv
fwait
cmp
and
mov
aaa
in
cmp
jp
repz
js
ret
ja
sti
(bad)
and
mov
and
idiv
outs
int
mov
add
call
aas
jb
adc
adc
retf
mov
jecxz
mov
or
mov
stos
cmp
cmp
adc
adc
pop
cwde
(bad)
add
fwait
push
sub
inc
dec
xor
out
(bad)
outs
pop
out
push
cwde
popf
cwde
adc
cli
sub
retf
jbe
adc
repz
fiadd
mov
cmps
enter
addr16
mov
inc
xchg
and
dec
aam
mov
out
lahf
xchg
xor
pop
popa
mov
lods
loopne
jl
lods
scas
aaa
test
not
or
cmc
in
call
call
std
shr
push
movs
mov
js
dec
xchg
sahf
addr16
hlt
daa
fwait
dec
mov
jae
inc
add
inc
imul
pop
add
or
stos
jno
lods
and
mov
inc
xchg
sbb
pop
retf
mov
call
scas
fld
iret
mov
fidiv
jmp
es
(bad)
mov
mov
pop
int3
ss
addr16
nop
mov
data16
in
jg
iret
loope
cmps
ror
cmp
mov
cmp
ja
push
(bad)
loop
add
scas
sub
push
pop
push
mov
xchg
mov
inc
dec
dec
push
addr16
in
push
iret
ror
fistp
neg
adc
ja
xchg
mov
pop
call
inc
fmul
xor
pop
inc
push
aas
ins
mov
push
lock
push
mov
push
mov
jno
(bad)
jbe
cmc
hlt
outs
mov
jbe
dec
jo
es
inc
fimul
int3
xor
mov
jo
sti
push
or
jg
push
inc
loope
xchg
inc
add
js
cmp
push
xchg
std
pop
and
sbb
push
ins
aaa
jae
fidivr
xchg
stc
(bad)
ins
mov
jo
jmp
or
and
int3
or
cs
dec
loop
out
jp
xchg
movs
pushf
rol
and
mov
test
aas
cmp
sub
mov
iret
pop
mov
and
jl
adc
mov
out
sbb
dec
jge
sbb
push
aas
stos
inc
jo
dec
mov
test
jp
jb
jo
cmp
hlt
cdq
stos
fstp
dec
mov
sub
pusha
sahf
add
inc
mov
je
xor
mov
cmp
xor
stc
mov
lds
push
push
mov
push
mov
pop
xor
lea
jp
xchg
xchg
imul
rol
adc
dec
repz
jp
mov
jp
cmp
and
xchg
fcom
pop
push
fisubr
adc
lahf
sar
fst
push
jmp
es
in
xlat
cmp
mov
in
loope
mov
adc
stos
inc
cli
jecxz
pushf
adc
or
xlat
sub
pop
push
adc
push
push
sbb
rcl
aaa
iret
mov
xor
jbe
mov
ficom
push
mov
sbb
call
test
gs
mov
mov
fmul
ror
popf
pop
ret
mov
mov
or
jg
sbb
and
fst
jecxz
aam
pop
pop
ins
aad
adc
ds
dec
popa
mov
gs
dec
fisubr
pop
pop
out
jle
sub
xchg
mov
dec
mov
mov
mov
pusha
fbld
outs
jle
lds
push
inc
add
inc
inc
push
mov
sti
dec
push
xchg
dec
inc
mov
out
jl
cmps
movs
jge
adc
inc
or
pop
push
repnz
psrad
sbb
aad
jno
cs
add
push
aas
out
adc
adc
mov
xchg
xor
aas
inc
push
sbb
xor
into
into
and
popf
inc
push
clc
scas
dec
jbe
push
mov
xchg
mov
sar
inc
leave
add
jmp
pop
sub
sbb
jbe
(bad)
jle
mov
fcmovb
add
mov
ds
call
lea
fistp
popf
mov
les
xchg
pusha
test
aaa
cmp
je
xchg
xchg
xchg
scas
daa
fldenv
outs
push
xor
hlt
mov
push
aam
in
pop
scas
push
xor
or
xchg
aaa
in
pop
sahf
adc
out
sub
js
jo
adc
jecxz
mov
ror
leave
pop
adc
xor
sub
loope
cdq
shufps
xchg
inc
inc
lea
mov
ror
jnp
(bad)
rcr
repnz
adc
lods
(bad)
cli
dec
mov
repnz
aad
nop
ins
xor
add
imul
cdq
gs
mov
enter
sbb
dec
jle
jae
pop
dec
xchg
(bad)
or
and
enter
stos
mov
loop
cmp
aad
inc
jl
or
daa
push
out
stc
or
cli
xchg
ss
enter
and
mov
loop
xchg
mov
push
fld
into
test
test
imul
sti
dec
retf
sbb
push
mov
push
cwde
stos
sbb
pop
add
add
jp
mov
leave
mov
dec
hlt
sbb
leave
fs
cmps
xchg
jne
mov
pop
dec
and
ret
mov
icebp
mov
(bad)
mov
lea
mov
cmp
push
movs
stc
sub
and
jns
stos
in
xor
sub
in
dec
dec
aas
push
jno
xchg
jle
sub
fwait
xor
xor
xchg
jp
inc
or
dec
or
cwde
cmp
je
shl
pop
xor
not
and
aam
retf
xlat
dec
in
pop
imul
dec
sub
idiv
pop
pop
neg
pop
(bad)
fld
sub
mov
dec
rcl
inc
mov
out
fldpi
jecxz
in
scas
jg
adc
fist
ins
cmp
mov
mov
or
test
icebp
push
sar
in
out
or
pop
adc
mov
clc
aas
hlt
push
(bad)
rcl
adc
jbe
sbb
inc
push
pop
into
daa
mov
jecxz
fldenv
sahf
sbb
sbb
or
jg
push
xchg
loope
cmps
mov
mov
push
pop
bound
jmp
(bad)
or
jo
dec
movs
xor
imul
lods
int
push
sar
jne
call
xchg
das
add
repz
imul
(bad)
jecxz
repnz
dec
pop
sub
pop
dec
les
inc
mov
pop
ins
icebp
xor
clc
inc
cmps
mov
lock
fisub
scas
fidivr
fiadd
mov
loop
(bad)
hlt
xor
xor
adc
sub
hlt
mov
sub
add
mov
pop
outs
push
sbb
xor
sbb
packuswb
popaw
out
mov
or
fmul
mov
adc
mov
shl
es
out
rcr
mov
cmc
retf
into
cld
imul
retf
sbb
or
lea
hlt
fnstcw
(bad)
jo
mov
mov
cmp
and
mov
in
cwde
ja
in
mov
inc
out
iret
xlat
stos
loopne
movs
sbb
cs
test
mov
xchg
mov
adc
div
cwde
and
mov
push
mov
in
enter
sbb
cmp
out
mov
xchg
outs
arpl
repnz
sbb
pop
pop
xor
pop
cmc
stos
cdq
clc
push
ins
pop
inc
lea
sbb
mov
cmp
stos
aad
cmp
out
das
cli
xchg
add
and
data16
repnz
aaa
xchg
fs
neg
mov
push
ja
or
sbb
xor
xor
or
lock
or
rcl
push
mov
fs
cmp
mov
push
leave
lods
sbb
imul
jp
in
movs
cs
cmp
pop
sub
jae
int
mov
jecxz
and
pop
cwde
and
pop
ficom
repnz
sbb
xchg
imul
xchg
loop
cli
dec
jge
adc
jle
test
fstp
lock
movs
push
addr16
add
mov
add
ss
test
mov
xchg
imul
ret
and
push
xchg
push
(bad)
rcr
dec
aaa
fild
and
inc
xchg
ficomp
stc
outs
xchg
in
cmps
shr
jnp
xor
mov
or
in
push
push
mov
jle
or
imul
dec
ret
mov
jge
outs
(bad)
push
loope
gs
sub
adc
and
loope
hlt
push
in
jmp
mov
jmp
or
retf
jnp
ret
out
daa
fs
cdq
adc
mov
rcr
lock
test
xchg
es
gs
inc
fcomp
mov
xchg
ja
jae
mov
pop
jns
mov
xchg
in
(bad)
repnz
shr
push
cmp
inc
jl
mov
xchg
xchg
adc
xor
adc
stc
mov
cli
into
les
and
xor
mov
mov
add
mov
fadd
cmp
mov
push
add
xchg
clc
fstp
cs
cmp
mov
sbb
add
dec
jo
push
seto
fsub
sub
push
jmp
test
fwait
mov
mov
inc
dec
sub
retf
xor
mov
test
jmp
mov
imul
sbb
sbb
mov
ja
aaa
xor
xchg
xor
call
daa
fimul
ror
fwait
jge
xchg
or
outs
into
sbb
inc
dec
(bad)
mov
or
adc
cmp
add
xchg
xchg
mov
fsubr
mov
fsubr
mov
scas
pop
adc
js
cli
add
outs
pop
je
and
movs
cdq
or
mov
arpl
and
ds
loop
dec
inc
jne
mov
(bad)
and
xor
jg
mov
int3
int3
inc
addr16
inc
stos
and
or
xor
add
xchg
pushf
add
aaa
adc
stos
jl
jae
loopne
daa
jmp
jmp
(bad)
cmc
and
(bad)
imul
add
or
je
and
xchg
leave
idiv
mov
and
call
cmp
mov
mov
mov
(bad)
dec
hlt
stos
pushf
jle
rcr
loopne
div
in
jo
faddp
dec
jmp
in
jne
int
or
or
add
cmp
popa
push
imul
push
enter
cmp
leave
sub
dec
cmp
addr16
dec
jo
and
mov
jo
jbe
in
js
lock
icebp
push
pushf
int3
or
out
loope
pop
das
cmps
pop
mov
int3
icebp
icebp
scas
dec
int3
inc
mov
loop
push
mov
(bad)
xchg
mov
in
ins
push
popf
(bad)
push
jne
sbb
and
mov
or
xor
pop
dec
push
call
sar
cmp
pop
fidivr
fnstsw
cmp
into
ret
aam
pushf
(bad)
retf
inc
stos
repz
outs
pushf
repnz
mov
cmp
jne
rol
push
popf
fadd
mov
jmp
push
imul
loop
mov
nop
popf
mov
mov
data16
jb
dec
pop
cmps
fisubr
add
iret
test
ins
or
xchg
jl
inc
rcl
cmp
aad
imul
adc
repnz
adc
aad
jo
mov
xor
arpl
jb
or
xor
xor
popf
inc
mov
ret
lahf
xchg
movs
adc
hlt
(bad)
sub
jl
inc
push
jmp
scas
sbb
push
mov
sbb
inc
mov
int
mov
stos
cmp
xor
aas
adc
scas
cmc
adc
push
xchg
fwait
not
sub
and
cmp
xchg
cmc
loop
loope
es
lahf
dec
cmp
xor
jecxz
sbb
bnd
pop
add
cmp
sub
jge
mov
addr16
mov
cli
mov
addr16
and
inc
and
push
mov
dec
xchg
mov
mov
aas
jl
and
enter
sbb
xchg
jmp
les
xchg
cmp
mov
mov
dec
xor
mul
pop
in
call
cs
xchg
jno
data16
(bad)
out
push
jmp
imul
sub
pop
repnz
aam
repnz
mov
rol
leave
mov
cmc
cli
daa
mul
jge
adc
stc
ins
neg
push
gs
fsubrp
outs
(bad)
fmul
test
and
fistp
sub
mov
inc
cmp
sbb
and
mov
jno
dec
pusha
aaa
push
adc
xor
add
dec
icebp
repnz
push
ds
xchg
rcr
lods
xchg
mov
ja
or
(bad)
lock
jg
pop
mov
xor
mov
inc
sbb
call
or
xchg
and
pop
mov
push
fstp
retf
aad
cmp
xlat
dec
cmp
sti
xor
les
out
shl
and
dec
pop
inc
jg
jmp
mov
(bad)
loope
and
sahf
push
ins
add
jmp
dec
outs
stc
mov
bnd
repnz
in
pop
xor
cmp
std
sub
mov
mov
push
rcr
mov
cmps
lds
mov
dec
stos
cmp
imul
fidivr
pop
push
jp
icebp
int3
inc
pop
lds
jns
sub
sub
arpl
icebp
cmps
ja
push
pop
and
in
xor
mov
xchg
inc
iret
add
es
call
movs
or
or
mov
sub
push
ds
adc
add
aam
sti
adc
sbb
in
push
sub
pop
sbb
out
hlt
clc
mov
movs
mov
ror
loope
mov
xor
jl
dec
adc
outs
mov
call
dec
addps
cdq
test
mov
adc
sbb
js
jge
(bad)
sti
mov
jnp
cmp
or
or
inc
push
sbb
push
hlt
dec
cwde
mov
push
js
fild
ret
inc
pop
popa
cmp
ror
(bad)
inc
sti
xor
pop
push
es
enter
xor
and
sar
rcr
jle
popa
scas
and
jg
outs
(bad)
lahf
ss
xor
and
push
jl
ret
jg
jl
mov
inc
cs
(bad)
mov
dec
(bad)
xchg
jle
cmps
rcl
out
dec
(bad)
pushf
pushf
movs
(bad)
jge
and
adc
mov
xor
adc
inc
repnz
test
and
sbb
cmp
out
shl
aas
movs
jle
pop
inc
adc
clc
or
push
enter
cmps
pop
pushf
sub
int3
dec
push
sbb
mov
arpl
stos
and
sbb
popf
shr
and
pop
sar
xchg
xchg
jnp
out
mov
shrd
mov
sti
lock
in
push
stos
mov
jge
push
stc
imul
in
dec
leave
jae
jne
xchg
xchg
jns
popf
sbb
xor
mov
pushf
gs
sub
repz
jbe
out
idiv
push
les
popa
ret
adc
xor
xchg
stos
fnstenv
adc
jle
popf
fimul
and
out
add
call
es
xchg
jbe
push
clc
sbb
add
push
js
mov
and
aaa
mov
mov
in
dec
(bad)
cmc
jp
mov
mov
mov
test
mov
rcr
pop
and
cli
mov
jp
mov
aad
sbb
mov
xor
loopne
arpl
loopne
cmp
or
cld
aaa
push
fwait
sar
pause
sbb
pop
sub
pop
add
jmp
cdq
xchg
je
pop
dec
jnp
dec
mov
pop
fisubr
push
mov
xor
test
popa
nop
inc
in
adc
jle
pop
mov
inc
push
mov
cmps
jo
xor
and
dec
add
push
rep
movs
xor
push
jmp
fld
iret
stos
sbb
sahf
adc
xchg
cmps
cmp
push
jno
push
nop
(bad)
outs
cmp
pushf
xchg
jne
sbb
iret
int3
jb
mov
lds
cmp
not
idiv
test
rol
mov
mov
cmp
push
(bad)
jno
push
push
jbe
daa
push
and
mov
mov
out
(bad)
sub
std
hlt
xchg
les
mov
mov
arpl
push
outs
sub
out
add
and
repnz
in
imul
aaa
jne
jmp
adc
mov
sbb
push
jo
mov
not
rcl
inc
add
push
test
repz
sub
xchg
push
cmp
inc
nop
jae
push
mov
fdivr
push
mov
movs
pop
push
sub
leave
daa
outs
xchg
mov
mov
mov
mov
xchg
pusha
out
adc
scas
stos
sbb
mov
sub
cmp
sbb
push
movs
and
adc
jmp
jne
loopne
test
adc
inc
ins
repnz
adc
or
jg
cmps
or
jnp
jle
jo
out
inc
mov
mov
rcr
stc
pop
jecxz
ds
ficomp
les
cmc
lahf
lods
mov
rol
outs
rcl
data16
into
cli
xchg
ins
arpl
xchg
push
call
lock
aad
mov
push
add
dec
in
ror
cmp
retf
dec
std
mov
pop
aad
clc
cmp
in
sbb
sahf
mov
mov
nop
push
ss
mov
lock
xchg
push
pop
ret
pop
inc
push
add
lahf
bound
add
inc
ss
push
or
push
mov
mov
mov
jg
sub
cli
shl
es
das
call
push
pop
repz
cmp
jnp
xchg
bound
pop
mov
movs
jp
mov
fldz
and
lahf
and
mov
jae
cmps
cmps
mov
nop
stos
ins
add
out
(bad)
fisubr
adc
scas
fld
scas
in
ret
mov
fwait
or
sbb
mov
and
jbe
fldcw
data16
xor
rcr
loope
repz
dec
or
in
in
sbb
dec
push
dec
sub
or
xor
ds
and
in
cld
inc
popf
adc
repnz
mov
pushf
sub
cmp
cld
sbb
jl
loopne
test
mov
push
push
repz
inc
fidiv
loope
xchg
xchg
aam
movs
out
fidiv
lock
dec
jnp
arpl
sub
cmp
sbb
mov
int
aad
adc
push
xchg
gs
outs
jnp
data16
add
ror
cdq
ret
xchg
bswap
pop
test
add
bound
dec
js
sbb
adc
jge
ds
cmp
xor
loopne
mov
push
mov
stos
cmp
loope
lock
add
mov
mov
inc
ds
adc
adc
push
xor
mov
in
je
jno
iret
pop
or
xor
shl
mov
aaa
test
xchg
call
test
pop
lds
add
in
or
cmp
or
adc
fldenv
cdq
xchg
xchg
in
aaa
pop
pop
nop
adc
inc
pop
sbb
scas
xchg
jmp
xchg
cmp
movs
pop
sahf
loopne
rcl
mov
pop
push
and
daa
retf
test
push
xor
or
sar
jg
jns
push
pushf
fsub
shr
aam
sahf
scas
mov
daa
or
push
(bad)
jne
adc
out
pop
pushf
test
xor
pop
scas
outs
in
retf
mov
mov
jmp
rcl
mov
clc
mov
test
mov
ror
test
adc
sbb
mov
int3
sub
mov
scas
or
sub
pop
mov
or
int
pop
fdiv
hlt
push
jge
ja
xor
into
xor
lock
mov
mov
sub
adc
dec
hlt
mov
aaa
repnz
aas
xchg
inc
xchg
push
jecxz
fld
cmps
cmp
outs
icebp
js
das
ja
mov
cmp
push
test
sti
cmp
jecxz
pop
push
xor
icebp
js
arpl
dec
xchg
push
fwait
xor
hlt
call
mov
leave
das
and
cmp
test
loop
adc
bswap
ins
xlat
sub
xchg
sbb
popa
inc
pop
and
cmps
stc
sbb
pop
repnz
and
int3
js
jmp
xchg
mov
retf
sbb
inc
jg
dec
cli
(bad)
mov
adc
mov
jmp
adc
imul
push
hlt
std
pop
mov
sar
jge
pop
pop
pop
cwde
cld
repz
mov
daa
mov
inc
and
icebp
jno
ret
ds
pop
mov
cmp
je
adc
retf
xchg
popa
fcomp
inc
lahf
loope
mov
loope
retf
add
push
scas
aad
sub
sbb
cli
push
mov
nop
mov
cld
and
nop
popf
jl
stos
mov
scas
xchg
scas
mov
and
movs
ss
xor
(bad)
popw
loopne
out
sar
ss
pop
fcomp
mov
mov
in
loop
inc
jle
add
cwde
imul
lds
dec
pop
ret
pop
loop
test
and
(bad)
into
push
jns
mov
or
push
and
dec
loope
push
or
push
mul
repz
mov
push
xor
cmp
loope
jmp
ret
imul
repz
mov
push
rcl
sub
outs
cmc
pop
sbb
xor
push
iret
int
daa
mov
mov
loope
ret
neg
adc
cmp
mov
in
jle
or
aad
(bad)
sub
inc
leave
add
cmp
add
xchg
out
ror
ins
(bad)
stos
mov
nop
inc
push
jns
clc
sbb
fs
adc
push
in
adc
and
aaa
mov
xor
mov
cdq
call
or
mov
dec
pusha
inc
pcmpeqb
push
dec
ret
pop
mov
addr16
adc
xchg
out
xor
xor
xlat
sahf
dec
movs
inc
push
movs
ss
arpl
and
cmp
jp
add
fwait
push
ficomp
adc
xor
stos
or
(bad)
push
pushf
mov
arpl
fnsave
jb
aas
pop
dec
popf
out
jmp
pop
les
jne
xchg
dec
pop
repz
pop
dec
cmp
adc
or
mov
clc
imul
leave
mov
mov
dec
pop
aaa
xor
jno
xchg
xor
xor
add
push
push
repz
lods
cmp
hlt
mov
mov
pop
jbe
mov
xchg
aas
cmp
movs
or
mov
mul
mov
mov
stos
jno
imul
sahf
xor
cmps
mov
or
xor
jge
push
adc
mov
js
clc
mov
(bad)
retf
or
mov
mov
mov
inc
inc
movs
pop
inc
and
in
mov
cdq
cmp
jmp
fwait
push
cmp
imul
pushf
mov
xlat
xor
add
aaa
data16
icebp
cmps
adc
xchg
xor
stos
rol
sbb
add
ja
ficom
mov
xchg
mov
test
not
xor
cmp
xchg
pop
daa
pop
in
sub
xchg
loope
adc
mov
in
cmp
pop
inc
enter
int3
cmp
popa
stos
scas
cmp
lea
push
mov
(bad)
sbb
pop
jg
pushf
add
sahf
mov
test
push
sti
outs
popf
(bad)
ret
pop
mov
sbb
jae
mov
in
inc
fcmovbe
mov
jae
iret
adc
dec
jne
adc
jg
mov
push
(bad)
mov
js
dec
sub
(bad)
sub
add
dec
mov
rcl
(bad)
mov
shl
outs
mov
sub
movs
mov
or
call
xchg
xchg
xlat
outs
lods
(bad)
out
leave
xchg
lods
push
and
jmp
outs
cwde
dec
(bad)
xlat
and
sub
ret
out
inc
dec
rol
sbb
add
dec
push
stos
push
into
loopne
loop
sbb
clc
retf
ins
and
jbe
loop
lahf
jmp
dec
mov
pop
outs
cld
retf
pusha
dec
imul
pop
rol
test
lock
dec
rol
es
lahf
outs
lods
sub
mov
sub
cmps
rcr
jmp
pop
jg
leave
je
hlt
inc
mov
jbe
jns
lock
pop
retf
cmp
test
repz
cmp
pop
xor
dec
or
stc
daa
pop
mov
std
xchg
arpl
ss
mov
jbe
(bad)
out
(bad)
mov
push
sub
and
pop
mov
or
sub
jnp
sbb
sbb
repz
jge
mov
shr
jmp
push
sbb
jmp
push
push
and
push
fsubr
hlt
aad
scas
fcomip
cmp
int3
dec
(bad)
ins
jns
push
inc
pop
pop
stc
cmps
ds
adc
cwde
(bad)
jbe
pop
dec
inc
and
int
jg
int
push
(bad)
cmp
pop
push
add
push
jp
loop
jecxz
jb
jge
(bad)
test
int3
(bad)
ficom
rcr
rcl
add
mov
loope
ins
and
in
or
aam
aas
mov
popf
imul
aaa
jmp
fist
ins
adc
dec
mov
mov
fs
stos
arpl
cmp
jg
sbb
ret
jbe
fst
dec
push
xchg
repz
lock
outs
inc
into
ficom
jbe
outs
add
jb
stos
jle
stos
jne
add
mov
ins
push
sub
or
jg
loopne
test
add
xor
ins
jl
inc
cs
inc
clc
and
add
fbld
jb
cmp
(bad)
leave
mov
ror
ret
imul
and
add
xor
out
je
xchg
mov
lds
or
sbb
cmp
xlat
loopne
ror
sbb
inc
stc
or
inc
add
out
arpl
popf
mov
fdivrp
lea
xor
or
mov
jmp
sbb
pop
ds
inc
out
(bad)
fsub
jp
outs
and
dec
pop
push
rol
cld
out
fiadd
pop
addr16
fdiv
push
imul
int
test
rcr
(bad)
push
xchg
clc
(bad)
mov
push
mov
retf
xor
mov
test
jg
xchg
push
push
cmp
add
rcr
mov
jl
dec
adc
inc
xor
xor
aad
imul
std
and
imul
xlat
mov
outs
push
bnd
call
inc
sbb
and
mov
push
je
or
imul
test
cmp
cmps
daa
gs
test
sbb
mov
jne
sbb
repz
or
test
or
push
xchg
mov
xchg
or
scas
fstp
cmp
and
xchg
bound
mov
(bad)
lods
jmp
pop
xor
pop
push
xchg
cmps
inc
int
xchg
sbb
xchg
retf
mov
hlt
xlat
cld
movs
ret
jmp
push
retf
xchg
mov
loopne
push
pop
jae
sbb
pop
(bad)
cmps
sbb
mov
das
jmp
add
test
add
loope
mov
or
adc
fwait
or
mov
pop
push
cmps
sbb
out
pop
xchg
sbb
push
mov
nop
jp
loope
out
xchg
imul
jecxz
stos
ret
out
lock
pop
push
icebp
(bad)
push
or
add
in
sbb
hlt
cmp
and
pop
(bad)
push
leave
fimul
in
dec
ins
and
mov
rep
add
push
push
lods
call
dec
add
cwde
mov
fs
xor
and
in
in
and
idiv
add
jecxz
adc
push
dec
jno
add
out
shr
dec
(bad)
jge
cs
movs
stos
cmps
dec
xlat
fldcw
(bad)
mov
jp
std
dec
lods
push
(bad)
pusha
ror
sub
sbb
stos
leave
inc
xchg
inc
aas
in
adc
push
inc
cs
add
jp
ins
ret
push
shr
into
mov
mov
gs
pusha
iret
adc
sti
mov
iret
pop
loope
push
jns
push
mov
loop
jae
add
xor
jl
call
test
imul
pop
iret
push
repz
call
loop
jg
inc
xchg
rol
fucomp
push
js
jle
addr16
push
or
icebp
pop
lea
mov
dec
mov
aam
sub
jp
sub
fstp
push
inc
or
bound
ds
xor
fs
psubw
cmc
pop
adc
and
les
inc
lock
cmp
mov
push
xchg
xchg
or
lock
mov
mov
call
push
test
jae
loopne
fdivr
jo
call
(bad)
ret
fwait
rol
or
mov
inc
mov
clc
cld
jmp
imul
ret
cmp
jp
inc
lea
sahf
popf
jae
sub
mov
mov
jmp
xchg
test
mov
lea
aad
xor
cwde
and
sbb
sbb
das
pop
popf
(bad)
jno
mov
mov
jp
retf
mov
xchg
adc
lahf
neg
xchg
mov
pop
icebp
adc
cmps
sub
outs
sub
or
stos
jg
stc
cdq
hlt
imul
retf
lods
test
shl
add
inc
add
rol
jg
neg
xchg
mov
push
mov
jnp
int3
in
adc
icebp
inc
(bad)
in
inc
das
add
frstor
push
mov
pop
inc
sbb
jp
and
cmp
push
call
cmps
icebp
retf
out
cmp
or
data16
dec
mov
dec
push
cwde
fwait
push
nop
pop
sbb
mov
jge
inc
vmovdqa
fild
mov
pop
sbb
into
jmp
imul
pop
es
xor
mov
fmul
in
jmp
(bad)
pop
lods
xchg
mov
loop
icebp
sub
mov
or
das
gs
pop
nop
das
int3
sub
pop
shr
mov
or
sti
dec
aad
adc
sub
push
test
dec
pop
xlat
neg
cmp
shr
ret
lods
jmp
repz
jno
xchg
js
lea
ret
hlt
pop
sbb
pop
jbe
mov
sub
and
movs
je
popa
mov
and
xchg
stos
lods
pop
inc
add
gs
mov
outs
test
push
dec
lods
push
mov
lahf
movs
add
sbb
adc
cmp
xchg
xchg
jno
sbb
test
out
or
out
or
cmp
sbb
inc
xor
and
inc
jp
push
push
stos
in
int3
(bad)
loope
cmp
in
mov
add
and
(bad)
sbb
adc
push
sbb
and
repnz
add
sbb
scas
lods
lods
mov
jae
xchg
repz
pop
mov
inc
mov
(bad)
jle
ss
jg
fs
into
neg
cs
clc
ret
fistp
jmp
out
dec
inc
push
cmps
sbb
(bad)
movs
dec
ror
leave
repnz
sub
dec
es
repz
jb
aam
xlat
xchg
std
xlat
push
push
data16
shr
mov
dec
and
push
scas
(bad)
sbb
aad
(bad)
outs
stos
adc
dec
enter
mov
cwde
and
gs
pop
leave
scas
adc
xchg
pop
ins
fadd
mov
mov
jge
dec
leave
jl
mov
gs
mov
pop
cld
fist
movs
test
pop
or
lds
inc
repz
or
jns
mov
rol
mov
call
ja
pop
jnp
xchg
in
pop
sbb
out
lock
icebp
jmp
(bad)
out
mov
in
jo
gs
push
js
jbe
push
mov
mov
and
mov
cmp
or
xlat
aam
ds
push
leave
jne
test
aam
(bad)
sti
pop
out
jg
push
jb
cli
mov
popa
jmp
mov
fs
sbb
xor
(bad)
aas
scas
shl
call
fistp
movs
push
push
addr16
icebp
dec
je
and
stc
aaa
push
mov
or
clc
mov
lahf
hlt
or
nop
sbb
or
inc
or
mov
test
scas
jo
mov
pop
(bad)
cmps
cmp
out
out
xlat
lods
int3
mov
rcl
mov
add
int3
jnp
xchg
scas
mov
mov
dec
adc
out
retf
dec
ret
and
ins
(bad)
lahf
inc
rep
std
shr
mov
add
and
shl
or
and
out
das
push
popf
xor
loopne
and
mov
add
fcom
sti
xchg
jmp
cs
jae
sbb
xchg
bound
or
sbb
test
push
dec
sbb
xlat
sub
adc
cs
mov
in
mov
jb
jbe
inc
retf
jecxz
jbe
inc
stos
paddusb
lock
dec
push
mov
xchg
xchg
(bad)
ret
gs
add
lods
ficom
leave
jle
mov
cli
xchg
cmps
xchg
mov
js
cs
icebp
scas
pop
or
and
call
ror
add
jo
mov
imul
cmc
inc
jns
push
and
sbb
(bad)
into
jle
mov
cmp
sub
in
scas
mov
sbb
cmp
cmp
ret
mov
iret
pop
mov
(bad)
fst
arpl
sub
lods
inc
in
mov
push
pop
(bad)
ja
test
pop
ret
into
sub
hlt
fldcw
and
sbb
mov
bound
mov
xchg
sbb
jmp
shl
movs
popf
stos
fldenv
shl
(bad)
cmp
in
mov
xlat
mov
aas
ins
shr
or
xor
pop
cmp
cmp
sbb
jnp
jp
sub
out
lods
lahf
sub
jl
push
fidivr
aad
and
cmp
dec
adc
mov
xchg
mov
std
xor
mov
pushf
in
movs
iret
xor
daa
inc
mov
cmp
fimul
jp
stc
sub
cs
repnz
stos
ins
and
inc
mov
or
push
ds
fcomp
push
cs
cmps
test
push
sub
xchg
nop
lods
push
add
mov
mov
ja
lods
pop
jnp
or
xchg
add
rcr
repnz
iret
xchg
ds
mov
scas
ret
lahf
fisub
mov
movs
adc
jle
das
jp
fwait
pop
out
jbe
mov
push
les
ss
jmp
mov
mov
inc
fstp
inc
adc
(bad)
xchg
pop
cli
and
sub
push
or
(bad)
ja
fcom
popf
mov
xchg
xor
test
mov
fiadd
int3
push
(bad)
pop
cli
ins
fnsave
js
inc
or
in
std
inc
pop
cmp
repnz
mov
sar
mov
dec
pop
push
or
sbb
cmp
daa
inc
pop
jae
ret
or
add
je
mov
inc
xchg
sbb
push
arpl
int3
adc
imul
inc
or
mov
(bad)
dec
xchg
dec
into
popa
mov
ret
iret
popa
sbb
loopne
pop
fcom
movs
push
in
push
ds
xchg
dec
or
cld
retf
(bad)
jmp
sbb
add
mov
xor
sbb
cmp
adc
aad
ss
setl
dec
das
(bad)
(bad)
imul
add
xchg
inc
add
aas
dec
mov
fidivr
xchg
cmp
push
and
cmc
mov
lock
dec
push
xchg
test
int3
icebp
fistp
or
mov
jmp
adc
and
xor
fs
cmp
js
xchg
push
and
ins
and
(bad)
cmp
into
xor
or
pavgb
jno
(bad)
xor
mov
lea
scas
clc
scas
adc
push
xchg
jle
xor
icebp
pop
push
xchg
js
adc
xchg
stos
xchg
dec
push
mov
pop
loop
jno
rcl
push
stc
sub
fsubr
adc
push
dec
loope
mov
fild
ins
sti
inc
fisub
jne
pop
and
stc
mov
jns
push
fadd
xor
mov
mov
mov
sbb
movs
inc
mov
iret
dec
xchg
lahf
mov
mov
add
pop
movs
in
or
fwait
push
jnp
std
jae
rcr
(bad)
cs
pushf
pop
es
hlt
scas
inc
(bad)
sbb
xor
mov
pop
(bad)
push
aam
mov
int3
xchg
mov
pop
push
dec
adc
loop
repnz
repz
test
aam
iretw
leave
ret
cmp
adc
rol
mov
out
push
fs
sbb
js
xor
dec
cmp
ret
inc
jb
aam
xchg
inc
jnp
or
test
or
push
retf
ds
fdivr
sbb
inc
xchg
aad
and
ins
push
push
jbe
lods
or
sbb
sbb
scas
pop
mov
xor
repz
sbb
push
loopne
fisubr
jmp
call
add
push
jb
pop
lods
xor
imul
mov
movs
jmp
or
mov
std
mov
add
fadd
pushf
xchg
imul
inc
es
loop
pop
(bad)
cmp
int3
and
cli
retf
stos
hlt
in
push
repnz
rol
pop
cmp
push
or
fisub
fwait
fs
in
mov
cs
or
test
out
movs
adc
test
pushf
popa
xor
cmp
xchg
mov
push
aam
cld
test
xchg
mov
mov
hlt
pop
pop
add
or
xor
mov
inc
xor
test
jae
mov
enter
adc
adc
or
out
pushf
test
dec
mov
fimul
xchg
mov
rol
pushf
xor
push
int3
cs
sbb
push
adc
pusha
pop
daa
sub
jle
gs
frstpm(287
pop
out
outs
sbb
sub
les
fdiv
inc
loopne
cmp
xchg
jl
dec
jmp
jg
mov
adc
mov
inc
por
sbb
inc
inc
xchg
stc
sbb
mov
xchg
dec
adc
inc
sar
or
int3
aam
outs
test
inc
ins
cld
adc
xchg
in
hlt
or
push
add
pop
xchg
xchg
adc
retf
imul
mov
(bad)
sar
repnz
dec
push
sub
mov
dec
ins
xor
mov
(bad)
rol
and
jne
retf
inc
mov
out
ss
movs
fdivr
rcl
iret
and
xchg
test
test
jns
ret
add
js
fistp
popf
inc
ds
sti
fist
mov
fwait
jg
cmp
push
jae
pop
mov
xchg
add
scas
out
dec
sar
sbb
adc
imul
jno
lea
xchg
(bad)
in
repnz
jp
cmps
div
xchg
out
ja
ins
inc
sub
mov
movs
push
dec
ss
xor
add
add
jp
mov
adc
into
mov
jl
or
fdiv
cmps
iret
xor
(bad)
pop
in
mov
lahf
push
cs
ss
or
hlt
test
(bad)
xlat
cmp
das
dec
xor
cmp
retf
cli
aad
sub
shl
xchg
je
mov
mov
add
inc
or
sbb
shr
clc
adc
add
pop
lock
mov
mov
pop
dec
inc
(bad)
test
pop
retf
outs
push
mov
push
sahf
in
add
mov
jb
xchg
jae
lods
jmp
out
mov
bound
pop
sbb
mov
out
pushf
addr16
mov
xor
int3
add
mov
mov
sub
dec
xchg
sbb
jl
xchg
adc
sbb
movs
dec
ror
xchg
bound
adc
popa
mov
sbb
mov
lock
(bad)
push
inc
push
xchg
jp
xlat
out
push
mov
jno
scas
lods
inc
dec
leave
xor
push
ror
mov
les
movs
arpl
inc
jb
jmp
dec
call
ret
cmp
mov
mov
sbb
jb
mov
test
inc
clc
mov
in
popf
jle
and
hlt
sbb
pop
push
pop
mov
dec
mov
jecxz
repz
xor
js
(bad)
fwait
push
stc
fs
pop
ss
mov
inc
and
xor
into
out
push
(bad)
pushf
jo
call
pop
cli
mov
cmp
in
iret
jnp
cmps
shl
retf
inc
and
xor
fld
leave
cmp
cli
and
jno
es
push
mov
in
cs
lods
jl
std
push
(bad)
(bad)
xlat
cmp
bound
lods
stos
in
sbb
lods
loopne
cmc
fs
dec
mov
enter
aad
sbb
mov
or
test
add
ds
(bad)
mov
jns
pop
lock
push
push
retf
addr16
cmp
aas
loopne
stos
cmp
fwait
inc
cmp
mov
in
inc
movs
ins
dec
stos
pop
fst
sub
cmp
mov
scas
jns
jno
jle
loope
push
cmps
jecxz
lahf
mov
pop
sti
test
cmc
lea
int
rcl
loope
push
sbb
and
jmp
jb
cmp
jl
push
jno
call
call
adc
mov
mov
cmp
and
imul
mov
loope
adc
out
xchg
scas
lea
inc
pop
jb
xchg
rcl
dec
jns
cli
movs
mov
push
cmp
sub
mov
push
leave
addr16
fs
jae
pop
jecxz
movs
push
int3
adc
sar
out
dec
push
pusha
xchg
cmp
or
lock
mov
ja
call
ja
mov
cmp
ret
or
sahf
pop
adc
mov
mov
dec
stos
in
repz
fs
fbstp
lea
ret
lock
pop
mov
or
or
sub
add
cs
repz
rcl
inc
sub
dec
test
out
mov
or
js
inc
xor
add
inc
xor
jae
(bad)
sbb
out
pop
daa
push
and
inc
jno
mov
movs
repz
dec
sti
pushf
cmp
cmp
pushf
xchg
push
retf
cli
sar
add
div
sbb
mov
scas
add
movs
pop
outs
xor
xor
inc
inc
addr16
xor
popf
aam
cmp
or
test
dec
mov
mov
and
fidiv
adc
fs
push
xchg
and
cwde
pop
jecxz
dec
shl
retf
das
and
popf
sbb
jl
add
or
fnsave
mov
cmp
add
mov
mov
movs
cwde
mov
sub
int
dec
rcr
or
shl
adc
cmp
mov
lahf
pusha
sub
pop
mov
je
push
fwait
call
push
nop
sti
xchg
lock
sbb
scas
mov
call
loopne
sub
sbb
(bad)
aad
in
xchg
push
pop
cmp
dec
jp
cli
jg
ins
mov
cmps
stc
icebp
popf
addr16
lods
loop
stos
mov
lea
cwde
sti
inc
imul
dec
addr16
or
ret
adc
mov
jbe
stos
call
mov
leave
rol
ret
dec
icebp
cmps
test
shr
add
movs
test
call
popf
mov
adc
int
inc
pusha
xchg
inc
sub
push
icebp
or
addr16
xchg
and
adc
enter
push
mov
cmp
lahf
xchg
movs
test
inc
jmp
in
loop
mov
cmp
daa
pslld
inc
imul
int
xchg
cmp
dec
xchg
mov
movs
call
clc
dec
add
loope
ror
loope
push
retf
adc
nop
imul
imul
inc
pop
ret
xlat
out
sbb
xor
popa
pop
adc
verw
movs
sbb
jo
adc
arpl
dec
pop
outs
cs
xchg
retf
dec
mov
or
lahf
in
sub
ja
push
adc
ficom
mov
inc
and
jmp
dec
cmp
imul
mov
test
sbb
xchg
retf
shl
in
lea
mov
ret
enter
sbb
mov
push
sbb
test
fldcw
rol
stos
hlt
mov
fiadd
nop
adc
call
out
xchg
fistp
pushf
fdiv
fidivr
mov
and
fnstcw
ficom
jecxz
jno
inc
movs
(bad)
daa
inc
xor
push
sub
adc
test
or
dec
pop
ins
add
mov
out
cmp
cmc
test
push
cmp
push
xor
sbb
jnp
std
in
cld
out
add
out
mov
pop
jns
mov
test
in
js
adc
clc
cmp
pop
mov
cli
mov
ins
cmp
cmp
mov
or
sbb
push
pusha
ins
outs
(bad)
call
into
shl
and
and
out
pop
pop
jns
push
push
ja
mov
leave
ds
movs
add
mov
mov
mov
mov
and
leavew
ror
(bad)
test
sbb
arpl
rol
out
les
div
(bad)
sub
xor
dec
aaa
daa
(bad)
scas
loopne
inc
mov
xor
pop
dec
arpl
adc
test
clc
repnz
pushf
lea
sbb
aad
jno
pop
cdq
je
sbb
xchg
cmc
cmp
dec
jbe
sub
mov
ja
pop
inc
dec
pop
sbb
ror
pop
add
dec
ja
mov
sbb
mov
xor
shl
mov
aaa
add
or
jb
jmp
je
js
push
mov
jo
cmp
pop
inc
xchg
sub
pop
hlt
mov
mov
mov
ret
cli
mov
inc
pop
push
mov
stos
xchg
pop
add
cwde
jg
cmp
lds
enter
add
and
push
sar
mov
stos
sub
into
(bad)
pop
xor
cmps
jge
in
nop
test
push
dec
add
loopne
push
fldenv
cmp
push
icebp
jl
ins
imul
mov
jo
fmul
fild
pop
pop
inc
loope
rcr
and
jnp
lock
ret
cli
ficom
imul
sbb
mov
mov
in
or
and
mov
(bad)
aam
les
int3
ror
adc
push
(bad)
xor
sbb
loop
mov
(bad)
jb
and
loop
test
sbb
push
call
shr
xchg
out
cmp
es
and
pop
retf
shl
or
out
test
xchg
jo
lea
xor
cmp
or
test
lods
jmp
sti
xor
aad
adc
jnp
out
mov
push
inc
mov
xor
clc
aas
mov
rol
or
(bad)
push
mov
fwait
stos
mov
clc
xchg
ins
fwait
cs
jb
ds
test
sbb
and
mov
stos
aam
call
sahf
ret
add
out
enter
xchg
pop
call
jmp
mov
or
repnz
dec
retf
shr
cmp
dec
pop
pop
mov
mov
pusha
in
or
pop
jecxz
push
repz
xchg
mov
push
ds
xor
sub
mov
pushf
dec
pop
enter
shl
sbb
sub
mov
cmp
sub
sub
dec
loope
jb
ds
jecxz
and
cmp
in
outs
int3
ds
jp
jnp
push
test
out
xor
push
repnz
pop
push
inc
loop
cmps
cld
add
fldenv
and
aad
pop
xchg
or
retf
add
mov
jp
stos
push
add
mov
xor
ins
xchg
dec
das
nop
jo
mov
mov
out
push
cmps
aaa
out
mov
fistp
xchg
mov
pop
mov
js
cld
mov
pop
mov
inc
out
inc
inc
repz
add
ror
pop
add
(bad)
aam
lahf
fs
cmp
or
dec
fmul
mov
(bad)
jmp
test
pop
fnstcw
movs
cmps
mov
cmp
mov
sub
cmp
lea
ret
sub
xchg
in
push
mov
jae
sbb
cmp
adc
sub
mov
out
addr16
dec
rcl
push
push
or
and
sub
pop
imul
add
pop
dec
pop
jo
ss
sub
and
xchg
nop
into
xchg
sub
repz
lock
mov
fdivr
dec
pop
add
or
fwait
cmp
test
test
xor
fbld
push
jmp
push
adc
push
nop
ret
jecxz
fs
xlat
pushfw
inc
mov
das
scas
cmp
jp
fist
lods
mov
dec
ss
stc
fsub
and
(bad)
jmp
sub
xor
daa
mov
and
lods
sub
pop
and
mov
xchg
int3
jle
inc
out
cmps
test
inc
sbb
sbb
mov
pop
(bad)
aas
push
neg
ss
lods
imul
out
shrd
dec
aas
fcmovne
cmp
fnsave
iret
loope
(bad)
adc
xchg
lea
jmp
(bad)
enter
scas
pop
xor
or
adc
mov
pop
and
fisttp
addr16
lods
in
outs
xor
jbe
fnsave
add
mov
and
cmp
fwait
stos
out
fdiv
stos
push
inc
push
daa
loopne
sbb
fdiv
pop
mov
out
xor
mov
xchg
scas
cdq
add
fwait
repz
inc
jns
push
mov
push
scas
test
iret
sbb
ret
mov
or
jl
jge
or
rol
dec
sbb
(bad)
in
mov
cmps
cmc
xor
pop
jne
or
inc
add
xor
add
and
scas
ss
xchg
(bad)
fimul
aam
push
mov
lock
mov
(bad)
mov
xor
mov
mov
ss
loop
xchg
popa
cmp
jp
shl
pop
mov
test
sar
mov
inc
mov
je
leave
ss
sub
sbb
dec
xor
jne
shl
sub
xor
push
sahf
jg
xchg
std
fld
inc
jmp
mov
pop
in
jecxz
xlat
pop
mov
out
shl
pop
mov
test
push
hlt
mov
fwait
outs
sbb
push
jo
cmp
ins
shl
or
inc
mov
aad
dec
in
das
shr
shl
push
int
and
jg
mov
fsub
retf
add
xor
push
push
mov
aad
in
jne
nop
fbstp
or
pop
sbb
cmp
loopne
pusha
outs
adc
push
or
retf
and
stc
adc
inc
push
mov
adc
popf
sbb
push
pop
jnp
lock
je
add
aaa
mov
pop
add
or
sbb
sub
rcr
daa
std
push
stos
add
mov
movs
sub
movs
test
inc
rcr
mov
adc
dec
xlat
test
hlt
mov
xchg
retf
dec
ins
cmp
scas
push
iret
xor
ins
fnstsw
and
jns
mov
arpl
or
popf
repz
dec
or
inc
jl
jl
cmps
push
js
js
test
mov
jne
stos
lock
xor
push
outs
mov
adc
stos
mov
ins
ret
shl
dec
mov
iret
mov
std
jle
test
lahf
retf
push
in
jp
rol
pop
dec
mov
in
add
add
into
les
mov
enter
inc
ret
int
xchg
sub
push
push
add
out
pop
or
adc
mov
cmp
div
mov
loop
or
dec
dec
scas
add
push
sahf
rol
mov
dec
mov
enter
inc
inc
outs
outs
imul
xor
sar
xor
dec
in
in
jnp
dec
mov
adc
repz
pop
jbe
or
pop
xor
popa
test
fs
dec
inc
jb
or
adc
or
outs
cs
jl
push
mov
mov
std
adc
sub
pop
rcr
mov
out
xchg
mov
adc
mov
jmp
rcr
imul
test
pop
es
sub
jne
stos
pop
and
push
and
lahf
adc
cld
cdq
aam
jle
ror
add
ss
inc
inc
fidiv
ds
jne
jg
dec
shl
loope
xchg
ja
and
sbb
test
aaa
ret
js
mov
call
mov
dec
push
pop
jb
sub
xchg
arpl
xchg
jbe
dec
xchg
enter
push
mov
mov
(bad)
cmc
stos
jecxz
and
jmp
les
dec
mov
or
push
cdq
xor
stos
pusha
ja
mov
pop
mov
inc
or
data16
lock
rcr
jl
adc
aam
xor
popf
je
and
aas
jg
loop
cld
sub
test
cld
fnsave
stos
loop
cmc
xor
mov
addr16
push
in
lods
shl
rol
and
int
mov
inc
shl
cwde
fsub
or
clc
les
push
xor
xor
cli
adc
xchg
jbe
aaa
sub
daa
clc
dec
mov
lods
jne
test
dec
sbb
shr
lock
inc
mov
dec
inc
mov
dec
adc
mov
mov
es
fidiv
xchg
loopne
pop
pop
ja
sbb
adc
repz
xor
cmp
sub
mov
scas
bnd
hlt
sbb
xor
adc
push
sub
push
gs
jbe
cmp
fiadd
lds
mov
psubd
stos
xor
sub
jns
adc
sti
ins
xor
addr16
sbb
mov
mov
cwde
movs
push
fmul
arpl
sub
(bad)
stos
xchg
out
sbb
scas
les
and
fadd
fisubr
jl
pop
retf
jecxz
enter
lea
sub
retf
pop
fidiv
add
cmp
mov
push
arpl
mov
jne
shl
cmp
out
sbb
fldcw
and
cld
cli
rcl
pop
cld
sub
(bad)
xchg
sub
and
int3
aaa
dec
stos
call
jo
or
adc
jae
ficom
int3
lahf
sub
test
aad
pop
lahf
inc
cmp
std
inc
xchg
sub
es
cs
sahf
pop
inc
jo
retf
and
leave
out
iret
mov
cli
movs
pop
sub
add
outs
clc
out
pop
mov
icebp
test
and
push
cmc
push
inc
pop
xchg
int
push
scas
mov
ss
push
stc
inc
and
dec
pop
jno
cmc
push
jmp
dec
aam
adc
xchg
jecxz
push
rcr
jo
neg
or
test
into
sub
shr
pushf
or
and
fisub
and
jge
jns
sub
stos
jl
xchg
mov
out
mov
mov
ins
shl
inc
aad
xlat
scas
jge
bound
test
xchg
inc
aas
pushf
test
pop
test
mov
mov
retf
aas
push
cmp
js
adc
fldpi
cmps
std
out
push
jg
out
jle
jg
push
loop
sub
sar
pop
sub
repnz
popf
sbb
mov
movs
pusha
test
loope
nop
add
popa
clc
ficom
push
cld
addr16
dec
sub
test
push
add
mov
loop
shl
push
and
and
sbb
ret
mov
les
fisub
fiadd
stos
dec
xor
leave
xlat
mov
push
sbb
hlt
sub
pop
add
xchg
loope
cmps
sti
cmp
or
lods
jmp
sub
add
sti
push
inc
dec
jg
xor
hlt
cmc
xchg
mov
bound
pop
add
(bad)
mov
into
gs
shl
sub
dec
push
adc
(bad)
nop
jp
mov
je
push
stos
pop
pop
outs
inc
inc
sbb
adc
pop
mov
pushf
mov
mov
and
test
pop
addr16
adc
push
pop
loope
stc
push
push
ins
test
ret
jmp
(bad)
out
popf
push
pop
sar
jae
or
inc
pushf
sar
pop
div
into
sbb
jg
mov
call
xor
test
add
mov
add
push
sbb
test
adc
cs
stc
mov
stos
dec
xchg
push
inc
stc
hlt
xchg
rol
scas
psraw
xchg
stc
sbb
test
mov
and
out
sub
ja
ror
pop
push
sbb
es
push
jbe
enter
jne
mov
in
ins
imul
mov
fimul
adc
outs
enter
cmps
xor
daa
aaa
popf
sbb
xchg
add
inc
sbb
sub
sbb
pop
jbe
xchg
jb
mov
pop
cmp
retf
and
dec
jb
xchg
or
cmp
aas
std
dec
mov
mov
push
fdivp
loopne
jo
loop
pop
mov
xchg
or
lods
add
inc
push
aas
sub
gs
mov
mov
adc
les
or
imul
pop
call
sub
call
sbb
pop
or
mov
sahf
mov
adc
or
cmp
xor
mov
and
jmp
outs
sub
pushf
push
mov
inc
xor
outs
test
add
ret
test
bound
mov
(bad)
ret
mov
sub
ret
pop
loopne
cmps
bnd
adc
aad
push
mov
stos
pop
push
dec
xor
ins
pushf
and
xor
mov
xchg
mov
(bad)
aas
mov
call
(bad)
sub
inc
mov
and
cmps
daa
jo
adc
es
jae
cmps
mov
ret
inc
jg
pop
out
bound
push
lds
jbe
push
mov
jge
jp
out
sti
jae
ret
mov
scas
sub
gs
xchg
and
sub
mov
cmps
ror
jbe
mov
pushf
or
ret
mov
cld
push
test
lods
loopne
out
push
seta
or
addr16
mov
pushf
cmp
adc
jnp
mov
add
cdq
inc
push
xchg
clc
loopne
cld
cmp
dec
push
inc
mov
cmps
pop
lds
inc
mov
mov
xchg
lea
enter
jecxz
icebp
(bad)
and
std
adc
mov
push
pop
push
push
cmp
inc
mov
aas
cmp
sbb
inc
or
xchg
or
dec
adc
ret
mov
add
pop
add
jp
cmp
or
dec
mov
jmp
cmc
adc
sti
jl
idiv
ins
scas
arpl
mov
xor
ins
sbb
mov
xchg
daa
dec
in
or
stos
out
xor
mov
inc
jmp
xor
test
retf
sub
inc
or
fcomp
pop
xor
daa
sar
xor
call
push
out
out
xchg
xor
call
js
pushf
cdq
xchg
sti
mov
mov
fs
ss
(bad)
stos
shl
(bad)
mov
aas
mov
and
pusha
mov
adc
lds
jp
jae
dec
sub
dec
jle
jge
push
mov
retf
add
mov
pop
fdiv
into
mov
call
shl
push
adc
mov
test
jbe
jno
ret
repnz
xor
adc
jmp
cmps
add
push
loopne
pop
jo
mov
lods
adc
pop
pop
mov
pop
outs
rcr
out
loop
inc
pop
(bad)
mov
mov
pop
stos
mov
adc
cmp
cmp
ret
xchg
mov
outs
les
push
stos
push
jns
dec
ds
icebp
fsubr
sbb
pop
es
add
add
leave
push
pop
movs
fwait
les
out
or
test
arpl
lea
sub
adc
xchg
xchg
stos
outs
cmp
mov
(bad)
mov
pop
lea
addr16
fmul
jg
mov
cmp
daa
fld
adc
mov
(bad)
sti
dec
mov
mov
add
jl
jmp
out
pop
in
sbb
jns
sbb
pop
(bad)
fld
inc
iret
mov
cmp
pop
aas
stc
jge
or
jo
hlt
leave
xor
js
out
and
fimul
fistp
xlat
inc
pop
hlt
movs
fnstcw
push
dec
pop
iret
jne
ficom
neg
add
int3
mov
pop
mov
mov
and
or
fwait
in
inc
loope
movs
lock
stos
ficom
scas
fcomp
sub
lahf
pop
cdq
js
jmp
shl
inc
ins
movs
xor
jno
sub
add
shr
inc
scas
xor
nop
mov
mov
popa
mov
cmc
(bad)
leave
xor
ret
outs
push
cmps
xchg
push
jb
push
mov
gs
imul
test
out
xchg
jg
movs
test
jne
call
xlat
pop
in
jg
fcomp
and
jno
sub
inc
sub
mov
mov
icebp
fiadd
mov
lds
jge
jo
out
mov
inc
mov
dec
pop
and
mov
xor
dec
push
out
sbb
imul
mov
(bad)
mov
mov
xchg
or
cmp
push
(bad)
cwde
mov
fisub
shl
jb
ret
or
mov
(bad)
dec
sbb
fidiv
rol
cmp
push
out
xor
test
sti
push
jne
dec
jle
xchg
dec
ins
sbb
jae
pop
and
jge
sub
add
xor
sbb
int3
cmp
int
loop
xor
jl
stos
gs
int
xor
and
mov
mov
or
inc
jle
out
sub
mov
jne
jge
cmp
mov
movs
pop
jl
ins
(bad)
mul
xchg
das
in
jns
mov
popf
pop
mov
mov
push
push
inc
inc
sbb
fadd
dec
push
pop
fwait
out
call
in
out
lahf
test
out
sbb
add
dec
pop
pop
lea
ja
addr16
jg
mov
cld
sub
and
gs
stos
pop
sbb
call
cdq
mov
(bad)
sub
test
pop
push
sbb
dec
stos
fcomp
add
mov
jl
jne
idiv
fs
mov
sti
mov
out
mov
call
xchg
push
not
stc
ret
rdtsc
push
fs
out
(bad)
fisttp
push
(bad)
or
sahf
add
jns
pop
(bad)
cmp
(bad)
aad
jmp
and
jo
(bad)
pop
mov
sbb
or
or
add
mov
dec
xchg
mov
add
lods
mov
clc
inc
push
leave
cdq
sbb
mov
imul
push
mov
cwde
pop
fs
inc
cmp
mov
dec
sti
ins
les
adc
dec
sbb
aas
loop
addr16
sti
loope
jl
clc
dec
pop
movs
repz
push
fsubrp
stos
into
mov
or
popf
es
cmps
mov
add
outs
arpl
push
in
or
ss
das
inc
(bad)
dec
sub
mov
shl
in
xor
sar
es
rcr
pop
xlat
mov
adc
mov
cmp
pop
push
loopne
cli
leave
rol
repz
cmp
outs
inc
ret
xchg
mov
(bad)
lods
inc
cmps
shr
adc
scas
gs
jb
loop
sub
mov
mov
or
mov
cli
retf
xchg
cmp
aaa
bound
ins
aad
mov
je
sub
and
test
movsx
loope
call
or
sbb
mov
mov
push
(bad)
hlt
ds
dec
pop
or
stc
imul
daa
mov
leave
dec
sbb
mov
sbb
mov
mov
sub
pop
pop
cmp
fisttp
jmp
mov
sub
lds
outs
stos
cmps
test
xor
adc
xchg
pop
push
jne
or
mov
mov
shl
sub
stos
in
add
jb
adc
xchg
adc
fcomp
loopne
shl
in
inc
retf
(bad)
sbb
call
and
(bad)
in
popf
sub
sbb
and
push
mov
sub
ret
mov
mov
jl
jge
xlat
jne
inc
int3
arpl
mov
cs
pop
adc
adc
nop
fwait
or
pop
fist
mov
rol
pop
push
or
pop
xchg
inc
cmp
sti
xor
imul
jl
push
movs
(bad)
and
mov
sar
jle
sbb
add
fnsave
sahf
sub
xor
inc
retf
pusha
adc
pop
jmp
outs
xor
adc
repz
push
(bad)
icebp
ss
inc
fxch
mov
call
ins
imul
ror
jmp
mov
loope
mov
mov
ja
jp
or
push
(bad)
jmp
mov
inc
add
imul
scas
dec
xor
mov
enter
adc
arpl
xchg
ror
xchg
mov
inc
(bad)
loop
ins
xor
jmp
popa
jp
movs
xchg
mov
pop
or
ins
push
or
adc
mov
push
cdq
jmp
cs
in
cmps
test
inc
ret
jbe
pop
push
jb
dec
into
ins
rcr
dec
adc
and
movs
push
stc
pop
inc
mov
fist
aaa
xor
in
daa
sbb
test
xchg
iret
xor
lock
call
stos
aad
ss
inc
or
sub
lahf
jl
sbb
lds
jmp
scas
aam
xchg
cmc
movs
pop
push
sbb
mov
into
in
in
scas
loop
rcl
pop
inc
dec
jecxz
push
inc
jno
fdivr
cmc
imul
retf
or
inc
jo
inc
retf
cmps
lock
mov
push
mov
jmp
xor
mov
pop
xor
(bad)
fmul
movs
sub
punpckhwd
in
and
xor
jne
daa
js
or
mov
inc
inc
das
arpl
cmc
and
scas
ss
stos
imul
sbb
mov
push
int
jge
mov
jle
fisttp
sub
sub
push
xor
xor
stos
mov
outs
ret
jmp
cli
fs
push
xchg
lds
xchg
xchg
and
pop
loope
addr16
or
jns
(bad)
sbb
loopne
dec
scas
pextrw
inc
inc
mov
sbb
xchg
mov
fsubr
jmp
repnz
inc
(bad)
mov
cli
movs
xchg
(bad)
hlt
jnp
jae
lods
push
hlt
and
ins
pop
(bad)
out
mov
dec
dec
ja
out
dec
dec
push
daa
scas
add
ret
add
gs
test
dec
addr16
mov
or
sub
sbb
dec
mov
sbb
fisubr
dec
pusha
bound
imul
clc
outs
pop
add
arpl
dec
sbb
jl
nop
fnsave
dec
xor
xor
pop
movs
add
sti
leave
mov
repnz
and
mov
add
xchg
pop
icebp
xor
mov
and
mov
and
mov
or
imul
and
push
add
sub
mov
mov
ins
in
lds
inc
stos
adc
scas
push
adc
inc
mov
je
and
sbb
mov
into
and
div
in
bnd
jle
push
sti
pop
es
or
xor
xor
dec
jecxz
mov
hlt
out
outs
inc
dec
cmp
fdivp
xchg
xor
add
dec
cmovo
mov
adc
jmp
lock
pop
inc
adc
inc
bound
xchg
fisub
dec
bound
cmp
test
xchg
xchg
and
xchg
xchg
jb
pop
or
lods
movs
add
add
xchg
std
mov
ss
jns
popa
xor
rcr
cmp
popa
xor
or
fistp
mov
pop
ds
retf
mov
add
inc
mov
pop
mov
sbb
mov
stc
loope
cmps
mov
arpl
and
mov
pop
pop
xchg
pop
aaa
std
adc
add
mov
mov
pop
clc
ins
outs
xlat
call
sub
cmp
fwait
cmp
add
ret
ss
int
addr16
test
xchg
fisubr
movs
mov
pop
inc
(bad)
mov
neg
ret
add
xchg
mov
int
push
shr
inc
js
cmp
pop
adc
pop
add
sub
cmp
pushf
loopne
inc
jo
fs
jno
xor
je
push
je
mov
or
inc
mov
enter
pop
mov
jbe
hlt
into
xor
mov
loopne
dec
scas
arpl
xchg
sub
aam
bound
imul
xchg
xor
adc
dec
mov
jns
push
pop
xor
ins
sbb
fdivr
mov
sbb
jbe
mov
cmp
inc
addr16
sub
lods
into
fs
ins
test
xchg
push
adc
pop
jnp
push
adc
add
xchg
aas
test
pop
icebp
inc
into
push
out
ret
data16
popf
(bad)
ret
lock
push
ss
and
xor
xlat
into
sar
mov
out
lahf
int
cmp
sar
loopne
cmp
clc
stc
(bad)
not
adc
and
sub
rsm
jmp
ficom
add
jnp
push
jmp
xor
ret
and
jae
xchg
das
jmp
mov
mov
push
cmc
daa
push
loope
iret
lahf
enter
xchg
(bad)
in
sub
outs
mov
mov
push
inc
mov
lock
call
mov
pop
push
inc
add
(bad)
das
int
gs
push
xchg
cmps
mov
mov
repnz
pop
adc
sub
mov
fstp
xor
cmp
mov
cmp
rcl
ret
cli
sbb
or
enter
in
inc
loopne
fld
adc
push
arpl
cmp
mov
js
xchg
jno
push
rcl
adc
test
daa
jp
rcl
xchg
into
mov
push
add
ret
rcr
loopne
(bad)
xor
pop
(bad)
push
cmps
sti
inc
fldcw
std
ins
dec
push
mov
scas
mov
push
lds
in
sub
mov
pop
push
xor
push
xchg
outs
push
add
mov
ss
std
and
xchg
push
pop
cmp
dec
test
aas
jmp
fwait
dec
ror
jecxz
loopne
mov
mov
sub
aad
into
mov
ret
xor
ret
aad
push
jno
imul
sbb
fimul
jecxz
or
inc
(bad)
fadd
jo
push
xchg
in
mov
pop
popf
jg
sub
outs
addr16
cmp
xchg
mov
cs
cmp
daa
ss
mov
inc
sar
scas
add
inc
mov
aas
cld
aaa
into
adc
ss
mov
sub
shl
cmp
outs
xchg
inc
pop
in
adc
frstor
inc
sbb
sti
cs
or
aam
and
and
and
mov
jo
das
add
mov
mov
mov
jecxz
pop
hlt
pop
push
imul
pop
shl
lods
sbb
int
(bad)
xor
mov
gs
into
sub
pop
gs
leave
popf
push
push
sub
xchg
(bad)
and
(bad)
(bad)
rcr
sbb
out
and
test
lds
adc
mov
mov
pop
das
add
jbe
imul
in
adc
jnp
adc
fstp
loop
xchg
dec
dec
and
popf
call
inc
pusha
gs
jnp
mov
adc
stc
and
add
jmp
xor
cmps
xchg
mov
stos
dec
hlt
mov
mov
push
lds
cmps
xchg
lock
cli
and
push
mov
or
jnp
inc
sub
mov
(bad)
cld
cmc
sbb
(bad)
ret
shl
or
mov
jle
xchg
xchg
movs
sbb
mov
mov
jmp
test
xchg
ds
(bad)
xor
dec
dec
(bad)
pop
jle
outs
xchg
jmp
mov
lahf
pop
add
sub
xor
push
scas
(bad)
push
cmp
jb
dec
(bad)
test
xchg
or
mov
xchg
push
outs
cli
jecxz
xor
sbb
inc
xchg
outs
bound
adc
dec
mov
(bad)
hlt
pusha
inc
iret
pop
xchg
(bad)
out
mov
repnz
cld
(bad)
jecxz
add
rol
adc
and
cs
dec
imul
mov
in
mov
lods
rcr
add
and
pop
lods
into
and
leave
cmp
cmp
inc
xor
retf
dec
mov
int3
sbb
cmc
js
dec
in
cmps
push
sub
mov
std
jno
cmp
jmp
ja
or
inc
in
pop
ficom
xor
inc
xchg
mul
cmp
jp
retf
cmp
cmp
lahf
nop
outs
loop
inc
jmp
in
fistp
jge
ja
loopne
imul
mov
pusha
shl
or
add
popf
fimul
inc
inc
jecxz
pop
imul
jecxz
jmp
outs
ins
xchg
jae
xchg
(bad)
pop
and
inc
xor
xor
jmp
ds
cmp
test
rol
pushf
sub
sahf
frstor
mov
data16
call
aaa
and
ja
rcl
repz
and
aas
lods
shl
jae
ja
add
cmp
ret
test
stc
jmp
aas
aam
pushf
jno
push
push
rcl
dec
jg
mov
pop
pushf
inc
ins
fmul
arpl
rcr
(bad)
aam
scas
clc
jmp
sbb
mov
outs
sub
inc
int3
les
xor
xor
das
arpl
call
cdq
leave
mov
out
xchg
enter
fstp
movs
sbb
popf
jmp
mov
cdq
fwait
pushf
cmc
or
cmp
push
push
into
mov
jmp
cmp
pop
in
test
jg
(bad)
int3
and
xor
add
sbb
popa
fcom
ret
jmp
aaa
lock
mov
shr
rcr
int3
pop
in
or
retf
jbe
call
ror
sub
in
or
pop
xchg
imul
or
adc
cmp
mov
ss
outs
fdiv
xchg
mov
pop
mov
cmp
pop
add
xchg
pop
hlt
pop
test
cmc
shl
aaa
mov
push
mov
outs
test
rol
add
test
sub
dec
test
ret
int3
in
aad
xor
or
jle
les
push
into
add
(bad)
loope
mov
in
add
aad
cmp
fld
and
inc
lods
xchg
jg
mov
xor
in
int
pop
data16
sub
repz
iret
data16
lods
repnz
push
mov
xor
add
inc
pop
push
inc
retf
ins
jae
jbe
ins
call
jl
and
loopne
and
sbb
xchg
add
mov
or
push
lea
push
fcmove
pop
fidivr
add
inc
jg
or
lahf
xchg
dec
outs
xor
sub
das
sub
mov
es
fst
sub
jnp
and
sbb
mov
scas
mov
outs
inc
cli
xchg
dec
lds
mov
and
and
sub
ret
loopne
mov
out
jl
out
sbb
pop
ss
in
imul
icebp
scas
scas
fmul
in
jmp
sub
xor
into
fiadd
xor
mov
xchg
mov
fidiv
(bad)
cmp
outs
push
push
pusha
pop
push
xchg
xor
mov
dec
or
nop
pop
mov
lods
int3
inc
push
sar
(bad)
test
mov
gs
xchg
test
sub
call
lods
mov
iret
fisttp
mov
movs
iret
sbb
or
out
xor
sbb
jae
nop
push
pop
rol
dec
pop
neg
das
jmp
and
or
and
pop
in
cmp
outs
push
fbld
shl
mov
cmp
lock
pop
push
or
mov
push
(bad)
push
(bad)
adc
jecxz
and
repnz
fwait
push
pop
movs
loopne
jnp
fisttp
hlt
or
mov
cmp
in
jecxz
jmp
loop
leave
adc
loope
ins
jnp
pusha
dec
pop
aas
jle
jge
inc
nop
bound
mov
dec
xor
scas
push
test
jl
jnp
push
into
stc
sub
xor
sti
jle
pop
ror
or
fstp
icebp
dec
inc
hlt
cmp
mov
icebp
jle
and
adc
icebp
adc
xor
outs
or
jo
inc
call
daa
shld
jp
mov
int
jno
int
loopne
jge
cmp
and
inc
jp
add
inc
cmp
mov
dec
push
xchg
mov
adc
and
mov
scas
xchg
cld
mov
(bad)
(bad)
stos
cmp
(bad)
aad
or
aas
pop
xor
call
push
lods
test
scas
ret
or
cli
fucomip
mov
lahf
sti
mov
adc
call
in
push
adc
clc
jmp
pop
retf
mov
pop
fwait
push
pop
cmps
bnd
adc
mov
lea
enter
loopne
scas
push
add
push
es
mov
jae
adc
popa
push
adc
(bad)
cdq
fldlg2
mov
popf
adc
dec
inc
mov
je
mov
and
hlt
es
jne
xchg
stos
cli
cmc
pop
clc
push
loope
and
lods
mov
(bad)
jp
sub
or
sbb
sbb
aas
mov
ret
into
retf
sub
shl
fld
das
xchg
(bad)
fnstsw
pop
ins
call
leave
int
sbb
mov
fs
cmps
fstp
lock
rol
sbb
mov
in
or
sub
sbb
jb
mov
jne
dec
jno
(bad)
adc
xchg
jle
xor
pusha
xchg
imul
imul
and
mov
xchg
(bad)
adc
loopne
inc
scas
mov
shl
lahf
push
push
popf
int3
aas
das
test
pop
sub
ja
cdq
nop
out
cwde
ja
pop
jmp
lahf
lock
mov
addr16
inc
mov
sbb
push
mov
retf
sub
inc
arpl
sbb
and
inc
inc
int
lahf
mov
ror
addr16
(bad)
call
rcr
jbe
lods
jmp
adc
(bad)
xchg
cmps
xchg
sbb
adc
sbb
cdq
call
fwait
jecxz
or
mov
push
js
aad
mov
push
push
data16
lock
ins
pop
aad
mov
sti
and
rol
cmp
arpl
inc
in
sbb
lea
(bad)
sub
lock
and
push
mov
xlat
cmp
fdivr
bound
lock
ret
or
mov
or
rcr
je
dec
push
out
stc
jecxz
jns
push
jecxz
sub
adc
(bad)
pushf
add
xchg
add
sbb
cwde
daa
jl
pop
pushf
ins
adc
adc
aas
mov
mov
sbb
inc
aad
cmp
and
push
test
mov
sub
int3
cmc
sbb
outs
mov
repz
cdq
nop
push
pop
dec
test
and
jo
enter
iret
pop
out
xor
and
std
inc
cmps
pop
popf
pusha
jp
jecxz
sub
test
and
aad
mov
hlt
pop
js
sub
sub
pop
shl
icebp
or
outs
mov
aaa
into
js
hlt
fdiv
sub
or
inc
mov
or
scas
sub
call
shl
loope
js
daa
call
icebp
mov
lods
stc
gs
and
int3
mov
out
fisub
or
sub
push
xlat
sub
xor
scas
inc
fsubr
(bad)
adc
ins
call
lods
out
sbb
dec
leave
push
fwait
jne
xlat
movs
push
jns
movhps
adc
xchg
xor
fs
push
xchg
rcr
pop
xchg
aaa
ins
cmp
mov
stos
inc
movs
fmul
in
mov
push
shr
jno
ins
lea
push
push
in
push
ret
ficom
cmp
loopne
nop
rol
or
adc
mov
jb
jno
xor
and
fiadd
or
push
mov
push
icebp
pop
inc
mov
lods
aad
cmps
mov
mov
sub
int
jmp
adc
call
pop
xor
and
xchg
fsubrp
or
mov
pushf
popa
lahf
cmps
das
pop
and
lock
push
inc
lea
out
cmp
mov
xchg
aam
mov
xchg
imul
aad
dec
dec
mov
ret
inc
mov
push
push
xlat
mov
ret
and
and
jp
push
jo
das
adc
or
daa
mov
ret
ins
in
lahf
ds
mov
fdivr
fistp
clc
sar
dec
shl
cdq
lahf
sbb
jmp
cmc
cmc
add
add
and
or
push
mov
jnp
cmc
dec
ficomp
mov
push
and
adc
sub
jp
cmps
shl
sub
sub
and
sbb
sbb
dec
rcl
in
mov
jmp
in
xchg
lods
mov
mov
jb
arpl
xor
(bad)
int3
adc
or
retf
cmp
inc
xchg
push
jne
sub
push
lds
jae
es
clc
mov
call
ds
sub
shl
movs
add
test
inc
jmp
lahf
pop
cwde
inc
movs
cmovbe
push
pop
inc
add
bound
or
jnp
push
push
test
mov
add
jmp
imul
lea
dec
xchg
ret
pop
sub
jle
stos
xor
lods
inc
lods
fadd
cmp
mov
jle
in
xchg
mov
jmp
cdq
mov
test
xchg
xchg
(bad)
jmp
jge
imul
adc
or
jo
int3
jne
xor
(bad)
call
sub
shr
ret
push
fisttp
test
es
lods
cmp
dec
sub
leave
lea
pusha
in
aas
test
data16
push
xchg
and
rcl
add
aaa
adc
(bad)
or
push
clc
and
mov
cli
aam
sbb
add
mov
xor
xchg
test
and
(bad)
in
jne
int
aaa
in
(bad)
dec
mov
cld
sbb
adc
stos
sbb
loopne
push
movs
ins
fld
ds
fmulp
jle
jge
es
out
xchg
test
imul
pop
mov
push
call
push
and
repnz
clc
shl
out
pop
ja
stc
jmp
pop
add
lock
lock
popf
test
je
or
gs
pop
or
mov
sbb
xchg
mov
(bad)
fcmovb
pop
repnz
sub
mov
add
mov
mov
add
xor
mov
xor
bound
sti
xchg
ds
add
retf
daa
xor
dec
mov
inc
mov
dec
and
xor
loopne
test
dec
sbb
xchg
int3
add
inc
arpl
pusha
add
sti
jp
push
shl
(bad)
jmp
xchg
xor
loop
sub
jmp
xchg
xchg
inc
jle
pop
xor
or
mov
aad
or
iret
fild
add
shl
inc
add
pop
xchg
bound
sub
cmps
dec
or
push
call
ja
nop
into
sbb
cmp
cs
cwde
sbb
dec
mov
adc
pop
outs
and
pause
scas
and
test
(bad)
fdivp
sub
test
and
mov
and
mov
out
ret
dec
stos
jmp
retf
cs
push
sahf
(bad)
cmc
lods
dec
pinsrw
sbb
outs
retf
lods
out
out
iret
push
data16
dec
jne
lea
je
mov
sub
jmp
bound
jle
int
popa
jns
xor
sub
add
cmp
or
js
pop
sub
sbb
out
add
push
ss
push
cdq
and
lea
push
stc
out
xor
xor
push
pop
mov
sub
fisubr
fstp
pop
aaa
jmp
inc
(bad)
pop
fs
and
shl
add
ja
mov
dec
mov
cmp
mov
jle
popa
jge
sti
cmp
cmc
pop
and
fwait
popa
sub
dec
xor
mov
and
pushf
fnstcw
leave
xchg
dec
cmp
out
gs
jb
out
fstp
add
icebp
ins
jnp
inc
loop
sbb
ficom
cmp
push
in
scas
inc
mov
data16
or
push
sub
fsubr
nop
pop
in
das
xor
mov
cld
push
inc
cmp
lock
mov
sbb
add
mov
cmp
mov
addr16
dec
fist
scas
ins
and
rol
test
mov
dec
sub
sub
imul
fisttp
jbe
stos
mov
test
jbe
mov
adc
(bad)
xchg
(bad)
xlat
cmps
mov
mov
pop
pop
(bad)
hlt
xor
sub
add
push
pop
push
cmp
pushf
xor
enter
adc
pop
in
mov
jb
aam
dec
mov
pop
mov
or
cmp
std
xchg
inc
fst
lods
add
repnz
(bad)
mov
xchg
retf
cld
and
test
stos
sub
push
xchg
sbb
add
sub
jns
lock
fisubr
movs
push
push
jecxz
push
pushf
test
sahf
jae
lock
icebp
lods
pop
push
mov
pop
cmp
add
cmp
(bad)
aas
push
scas
jg
arpl
lea
inc
xlat
xor
mov
int
mov
je
movs
pop
out
fisub
fsubr
adc
loope
push
mov
stos
arpl
in
cmc
shr
mov
dec
dec
mov
and
arpl
cmc
ldmxcsr
add
add
ret
push
rcr
xor
adc
pop
imul
fisttp
jge
fld
xor
repz
xor
mov
mov
or
xchg
test
inc
enter
sahf
adc
pop
aas
(bad)
xchg
fist
pop
mov
mov
call
xor
iret
es
add
jae
xor
ds
mov
or
mov
fidiv
push
std
and
aas
fs
test
mov
fwait
pop
mov
out
movs
adc
pop
dec
jge
xchg
aaa
or
loop
jne
dec
cli
neg
scas
jb
xchg
pop
cmp
jae
and
ins
add
(bad)
neg
pop
bound
sbb
lods
mov
jle
mov
or
add
out
cmps
int3
add
daa
mov
aam
push
rcr
popf
sbb
das
cmc
jne
inc
dec
cmp
mov
imul
push
mov
adc
cmp
enter
xor
mov
gs
div
sti
add
rcl
jg
sub
mov
nop
rcl
mov
call
sub
push
(bad)
sti
in
inc
push
push
cmp
jb
push
fild
adc
jae
xchg
push
lods
inc
test
sub
mov
mov
add
(bad)
out
fbstp
cmps
aam
jae
xor
mov
jle
push
loopne
ror
mov
jne
ins
adc
xor
pop
out
scas
and
mov
aam
push
or
test
scas
adc
mov
cmp
jb
push
add
cmp
sbb
in
mov
dec
es
cmp
call
adc
inc
lock
movs
pop
cmps
sbb
call
dec
addr16
bnd
and
out
pop
xchg
in
push
jnp
push
into
mov
push
mov
dec
push
push
jecxz
mov
sub
int
push
in
movs
jns
rol
fistp
xor
pop
cmps
out
xor
jge
xor
xchg
stc
enter
(bad)
push
es
stc
add
(bad)
das
mov
inc
add
mov
and
daa
mov
aas
push
adc
out
pushf
enter
cli
and
cs
imul
repz
pop
xor
dec
mov
je
cld
aad
push
test
mov
mov
ror
sub
fnstsw
mov
mov
rol
mov
dec
shl
xchg
jmp
(bad)
mov
mov
mov
add
sbb
pop
or
aas
and
fisttp
popf
fst
sub
add
test
adc
movs
cmp
out
jb
leave
jg
fadd
stos
in
or
imul
dec
push
cs
out
ins
fadd
adc
lock
retf
cmc
repnz
push
ret
fistp
rol
cmp
cmc
and
push
(bad)
fist
pop
mov
jmp
push
stos
sbb
(bad)
xlat
cs
mov
dec
dec
daa
and
les
jle
(bad)
cmc
adc
std
fcomi
jp
fsubr
mov
outs
sahf
arpl
loopne
ja
xor
jle
adc
(bad)
aam
clc
out
mov
push
cmc
mov
push
retf
ret
mov
imul
adc
jg
adc
lds
sbb
or
jb
sti
aam
pop
sub
stos
cmp
test
jae
pop
(bad)
pushw
push
jle
in
adc
sbb
cmp
mov
inc
sub
out
add
(bad)
loop
push
(bad)
xor
gs
ins
inc
(bad)
mov
lods
mov
or
push
rcr
push
cwde
push
jmp
add
add
out
pop
xchg
add
sub
or
cli
ds
popa
mov
mov
sahf
pop
mov
in
mov
or
test
mov
fwait
dec
stc
xchg
les
mov
dec
jg
jbe
mov
cli
lods
pop
dec
mov
xor
sbb
mov
shl
imul
mov
xchg
push
gs
icebp
punpcklwd
fsub
jno
or
mov
mov
and
test
pop
outs
jnp
cmp
test
cmp
popf
stos
ins
leave
nop
pop
xchg
lea
jge
movs
jmp
loope
fst
jb
xor
push
fwait
dec
and
lahf
div
dec
bound
movs
and
and
popa
outs
mov
lds
add
or
and
aaa
push
lea
mov
and
or
cwde
stos
jle
mov
pop
jae
lea
mov
xchg
addr16
nop
sbb
xchg
or
xlat
xor
adc
leave
pop
mov
xchg
retf
adc
(bad)
pop
enter
out
mov
stos
fnsave
test
adc
call
addr16
aam
adc
push
ret
mov
adc
pushf
call
loopne
jecxz
(bad)
mov
add
clc
push
jno
int3
je
jmp
mov
(bad)
(bad)
adc
fwait
ja
inc
std
sti
pop
icebp
test
int
(bad)
pushf
std
call
xchg
xor
cld
jae
xchg
out
dec
sbb
xor
pop
aaa
lds
push
ins
into
and
jmp
or
cs
test
adc
fild
ins
ins
jmp
(bad)
test
(bad)
sub
stos
aam
lods
cmp
cwde
jns
test
jmp
(bad)
push
sub
jmp
xor
push
lods
push
stc
into
(bad)
repnz
ret
sub
test
aaa
fs
xor
add
cmp
dec
imul
dec
(bad)
sbb
call
out
jae
je
imul
and
test
(bad)
mov
push
add
in
mov
push
jno
mov
pop
nop
or
aas
in
mov
mov
jne
das
aam
push
sbb
arpl
pop
fwait
mov
into
shl
shl
out
addr16
push
push
xchg
int
inc
js
ret
sbb
aam
sahf
cmp
inc
cmp
mov
sti
imul
stos
ds
stos
xchg
dec
xor
lods
mov
int
ins
sub
sub
xor
xor
iret
xlat
xchg
loope
shr
(bad)
xor
sbb
inc
in
push
dec
sahf
jg
(bad)
call
and
sbb
scas
pop
cmp
in
xchg
add
adc
cdq
cmp
inc
mov
out
mov
mov
cwde
pop
loope
sar
cwde
mov
mov
dec
dec
(bad)
xlat
push
sbb
dec
iret
mov
mov
and
mov
in
mov
and
sub
xchg
test
out
sub
and
out
xor
js
mov
jecxz
or
pop
pop
mov
repz
dec
stos
and
out
xor
out
adc
add
sbb
dec
pop
sbb
ret
add
or
nop
call
fwait
add
ins
mov
adc
pop
(bad)
and
or
test
aad
loop
pop
adc
in
cwde
(bad)
sub
push
pop
int3
cmps
mov
jp
movs
int
or
or
cld
or
push
jbe
ins
(bad)
jl
mov
test
in
pop
pop
gs
fisttp
xor
bound
outs
mov
push
sbb
test
out
ins
cwde
cmp
pop
test
sahf
ds
cdq
cmc
mov
popa
sbb
or
movs
sub
gs
sub
dec
call
arpl
fimul
mov
lods
mov
lahf
pop
jb
push
cwde
inc
call
sbb
inc
add
or
sub
push
mov
scas
dec
cmp
push
ret
cwde
push
dec
leave
int3
sub
loopne
inc
push
pop
enter
sub
xchg
lahf
fcmovnbe
ficom
lar
inc
sub
das
inc
pop
cmp
mov
mov
push
adc
aad
(bad)
in
cmp
movs
inc
data16
fld
cmp
dec
or
add
or
pop
xchg
not
mov
jne
sbb
cmp
shr
repnz
mul
aaa
pop
shr
fidiv
mov
stc
in
and
inc
fcmovne
rcr
and
movs
ret
push
dec
add
lods
xchg
pop
xor
pop
idiv
cld
not
add
rcr
test
mov
lods
or
scas
adc
sbb
cmps
mov
scas
out
jne
in
dec
sub
mov
call
add
adc
and
jp
movs
or
mov
jb
cmp
hlt
dec
mov
mov
into
push
pushf
sub
dec
pusha
and
std
pushf
arpl
repnz
pop
cmc
add
xor
int3
dec
(bad)
cmp
cmc
dec
and
mov
adc
test
add
sub
ja
jno
push
bound
cmps
leave
loop
inc
jecxz
cli
lods
movs
mov
enter
nop
inc
cli
cmp
and
sti
mov
out
inc
dec
push
dec
mov
cld
lds
mov
jmp
xor
sub
cmp
add
and
mov
out
mov
fidivr
aad
les
and
pop
xchg
jl
out
dec
jle
mov
inc
xchg
test
or
sbb
and
mov
test
dec
pop
or
test
dec
jmp
push
cmps
cwde
imul
sahf
clc
add
retf
mov
xchg
cdq
dec
xchg
mov
in
in
jge
cmps
out
push
jmp
or
cmc
xchg
inc
mov
xchg
push
retf
fs
sti
pop
inc
in
push
jle
ret
int
in
cmp
push
adc
mov
mov
cdq
cmp
repnz
add
adc
daa
cmps
xchg
stos
jl
adc
dec
call
fisub
jno
jnp
sub
jge
ja
push
mov
add
cmp
mov
cmp
pop
cmps
out
ins
and
mov
push
inc
cmp
xor
out
mov
div
xchg
movs
iret
(bad)
into
xchg
mov
xlat
add
dec
jmp
inc
adc
imul
test
(bad)
dec
xchg
cmc
mov
cld
push
test
sub
jecxz
cwde
add
push
push
les
xchg
fild
mov
dec
xor
and
cdq
push
lahf
sti
jno
in
jno
mov
ds
ret
lea
fsubr
lods
mov
xor
pushf
retf
shl
mov
xor
(bad)
call
shl
in
retf
push
dec
test
mov
in
xor
aam
mov
inc
cmp
sbb
loope
add
xchg
cdq
add
test
ins
mov
loop
pop
push
xor
gs
mov
retf
syscall
pop
jecxz
mov
and
jp
into
pop
addr16
loop
push
arpl
enter
scas
jns
push
push
jmp
data16
mov
aas
push
jno
jb
jo
mov
inc
cld
cmps
and
pop
bound
fist
ss
ret
inc
out
mov
bound
pusha
mov
daa
mov
cmp
sub
xor
pop
pop
inc
add
sub
inc
jne
inc
mov
xor
or
push
push
dec
mov
cmp
int
test
enter
stos
mov
pop
dec
call
(bad)
sbb
rcr
scas
inc
fist
scas
aas
cmp
adc
push
loope
(bad)
int
add
scas
dec
inc
mov
cmp
xchg
jg
add
dec
mov
xor
(bad)
pop
inc
mov
mov
fwait
push
loop
inc
xchg
pop
enterw
out
lock
mov
int3
lock
psrlq
inc
mov
out
mov
or
ins
or
jo
ins
xchg
jl
inc
stc
and
mov
in
fwait
out
ffreep
push
sub
jge
push
jo
adc
push
add
and
std
sbb
int
dec
mov
xchg
retf
and
int
dec
mov
push
das
shr
mov
mov
mov
cs
cmp
inc
iret
cmp
je
aam
cmp
(bad)
cmp
test
mov
sub
imul
bound
mov
fistp
lods
pop
pop
shr
push
ds
scas
push
jmp
adc
call
mov
mov
pop
retf
sti
test
mov
jle
hlt
push
sti
jb
arpl
or
adc
sti
or
pop
lods
cmp
adc
xor
mul
jecxz
cs
loope
jbe
dec
out
and
divps
aas
mov
mov
(bad)
(bad)
sahf
jmp
rcr
test
mov
cs
(bad)
inc
data16
cmp
mov
sar
fbstp
ins
cmovp
out
test
xor
sub
jge
pop
add
dec
mov
dec
stos
jb
add
ins
scas
and
out
and
add
sbb
add
fnop
xchg
inc
mov
and
xor
lock
sbb
mov
xchg
cwde
inc
scas
pop
test
cmps
xchg
mov
enter
pop
cmp
mov
into
daa
xor
ja
jne
adc
adc
outs
retf
and
fwait
or
mov
sbb
daa
add
cld
ds
push
pop
mov
jmp
mov
movs
(bad)
leave
push
and
and
jmp
xchg
adc
lock
dec
cmps
(bad)
retf
pop
xchg
mov
(bad)
gs
(bad)
dec
lock
dec
nop
push
stos
xchg
inc
xchg
xor
mov
loope
mov
in
mov
or
rcr
jbe
or
cwde
mov
sbb
outs
jmp
leave
jmp
adc
inc
popf
jbe
neg
sbb
pop
pop
mov
inc
sub
rcl
mov
push
xchg
(bad)
loopne
mov
xor
mov
fadd
std
fnstenv
dec
cmp
jne
adc
in
mov
add
retf
out
inc
(bad)
fisttp
jmp
xor
ret
lahf
sub
jae
xor
out
in
out
int
or
fstp
test
add
xchg
xchg
jg
pop
imul
cmp
inc
cli
add
pop
movs
adc
pop
retf
sbb
sbb
out
in
sub
cmps
push
adc
sub
in
outs
push
xor
in
das
sbb
sbb
out
push
xchg
repnz
add
out
out
xor
popa
xor
pop
imul
test
scas
lahf
jl
mov
cmp
pop
xchg
rcr
pop
ins
out
jp
add
cmp
mov
inc
sbb
mov
cmp
mov
stos
xor
xor
add
dec
in
xor
sbb
je
das
sub
mov
adc
add
popf
out
repz
add
mov
pop
and
adc
cwde
push
cmp
dec
mov
pop
lods
enter
mov
jno
and
sub
icebp
fisubr
loop
jae
sbb
stos
lods
push
loope
xlat
(bad)
xchg
add
sar
iret
jno
shl
dec
fsubp
aad
xchg
add
cli
out
bound
(bad)
in
sub
ror
ja
or
les
mov
or
adc
jo
popa
xlat
pop
movs
sti
jmp
leave
mov
jmp
cmp
xchg
movs
xchg
inc
jb
xchg
scas
push
pop
imul
jnp
jne
test
cmps
das
test
iret
retf
mov
mov
cdq
jns
sbb
cli
sub
add
retf
mov
in
mov
mov
movs
std
jmp
iret
push
cs
jg
cmp
stos
mov
add
and
jmp
repnz
popf
add
and
test
pop
sub
mov
xor
hlt
(bad)
cwde
mov
int
outs
ror
jmp
xchg
test
sub
js
push
dec
push
dec
jne
xlat
int3
scas
lock
call
xor
test
xchg
mov
xor
js
mov
ficom
lds
xchg
cmp
mov
xchg
cmp
push
mov
cwde
mov
lds
xchg
gs
xchg
retf
mov
jns
mov
mov
jmp
adc
das
ret
fcom
jle
push
mov
sub
(bad)
enter
repz
fdiv
rol
mov
adc
test
(bad)
mov
addr16
push
mov
mov
sub
xchg
(bad)
int
fisubr
mov
jp
data16
imul
mov
sub
pop
push
scas
xor
jne
dec
or
pop
(bad)
mov
shl
and
sbb
mov
loopne
sbb
inc
retf
dec
cdq
cdq
int3
ror
mov
dec
outs
sbb
(bad)
jp
xchg
into
pop
or
sbb
imul
pop
rcl
ror
sbb
mov
fsubp
ret
mov
xchg
pop
and
pop
mov
sbb
xor
mov
hlt
pop
repz
aad
imul
fist
mov
cs
call
sbb
inc
(bad)
lea
mov
hlt
fdivr
mov
mov
sahf
icebp
sbb
sbb
in
adc
lahf
shl
mov
neg
ret
jle
inc
icebp
retf
pop
fidivr
add
fld
daa
(bad)
push
js
add
out
push
cmp
sub
retf
out
aaa
sub
jecxz
sbb
sub
push
loop
inc
pop
mov
sbb
dec
dec
shl
mov
jno
(bad)
or
jmp
and
stos
xor
ret
test
gs
sub
rol
jmp
std
push
outs
jl
and
dec
lea
es
movs
cmp
ins
lea
int3
push
xlat
xor
push
shl
lock
sub
jbe
fs
or
or
push
or
pop
fstp
dec
cmps
jl
pop
push
lea
and
mul
cli
and
push
add
xchg
pop
mov
push
(bad)
cmp
mov
adc
pop
pop
push
dec
(bad)
sti
mov
inc
and
mov
inc
sub
in
rol
sbb
pop
jl
pushf
xchg
pop
jg
retf
data16
arpl
adc
mov
mov
aaa
mov
add
jne
xor
sub
or
inc
fnstcw
retf
aaa
test
mov
push
sub
retf
inc
and
(bad)
sbb
int
outs
popf
mov
cmp
fiadd
mov
add
mov
mov
fist
mov
jle
ret
jae
mov
imul
clc
stos
das
mov
shr
aad
sub
mov
cmovo
lea
les
sbb
dec
push
jmp
lds
(bad)
push
jne
adc
fisttp
sbb
jmp
outs
jmp
sub
pop
(bad)
cmp
call
cmp
test
stos
out
(bad)
rol
add
add
dec
pushf
sbb
xor
xor
push
pop
xor
sub
xchg
pop
scas
loop
daa
jo
dec
xor
inc
(bad)
and
ja
test
das
fidivr
ja
cld
mov
adc
ss
leave
push
inc
dec
clc
ds
fdiv
addr16
pop
xchg
sbb
test
and
pop
mov
lods
inc
pop
cmp
shl
mov
shl
loope
repz
icebp
dec
addr16
or
cmps
pusha
xchg
rcr
hlt
xchg
out
ds
xor
cmp
sbb
inc
adc
sahf
retf
cs
rdtsc
jg
xchg
les
lods
cmp
sbb
xchg
jno
ficom
dec
cmps
sahf
xor
mov
cmps
call
jae
pop
dec
xchg
inc
pop
cwde
pop
sub
imul
dec
pop
hlt
test
fwait
cmp
dec
add
jno
clc
add
stos
push
adc
lock
inc
add
xchg
xchg
popa
gs
lock
ret
cmp
cmp
cmp
jbe
enter
add
jl
inc
ss
fsub
sar
add
fmul
adc
xor
clc
and
or
pop
repnz
cmps
dec
lahf
xchg
out
jmp
test
mov
or
in
repnz
les
aad
aaa
xor
in
popa
std
or
jnp
ja
pop
sub
fstp
push
cmc
ins
aam
mov
add
cmps
sub
(bad)
push
cmps
int3
push
or
xchg
mov
add
out
adc
les
mov
dec
or
cmp
add
imul
pop
test
sbb
daa
add
in
popa
mov
pop
or
test
pop
cmp
leave
sbb
dec
in
inc
movs
aam
loope
ss
retf
inc
mov
scas
jns
push
cli
xchg
mov
inc
pop
retf
sub
test
or
pop
inc
dec
cmp
add
or
push
sbb
mov
test
(bad)
fsubrp
call
cli
aas
retf
leave
and
in
and
bound
std
ds
aad
cmp
stos
fadd
mov
xlat
and
or
pop
add
xchg
pop
mov
and
loope
mov
(bad)
and
jns
sbb
push
jge
retf
adc
cmp
jecxz
add
aam
cmps
mov
xor
mov
dec
inc
mov
mov
call
(bad)
rol
mov
sub
jge
dec
xchg
aaa
inc
mov
leave
jae
data16
jmp
shl
cmp
or
and
push
sub
shl
sub
ror
sahf
loop
ja
in
mov
pop
pop
dec
sbb
out
(bad)
(bad)
sub
popf
je
mov
add
or
xchg
pop
push
(bad)
icebp
dec
pop
fimul
mov
fs
popa
stos
push
fisubr
push
lods
fmul
xchg
jmp
sub
stos
cwde
dec
das
sbb
ret
mov
call
add
sbb
aad
sti
test
std
out
sbb
adc
mov
pop
sub
call
cmovae
loope
and
push
pop
ror
sbb
cmp
and
cwde
push
mov
fs
repnz
jno
adc
fistp
out
xchg
stos
pop
push
fstp
call
xchg
mov
psrlq
bound
xor
ret
shr
cwde
sub
lds
or
ror
ror
xchg
dec
ret
xchg
push
ret
sub
es
mov
stos
movs
xor
outs
pop
or
jno
in
mov
mov
mov
pop
sub
and
inc
sub
push
daa
mov
push
dec
add
mov
xor
pop
mov
pop
dec
js
leave
pop
fist
out
jle
sub
pop
push
push
lods
enter
and
xor
(bad)
sar
sbb
add
sub
shl
and
(bad)
and
fild
inc
lds
aad
pop
outs
repnz
mov
xlat
add
add
retf
and
shl
adc
in
ret
adc
adc
pop
mov
ss
scas
call
test
fmul
aam
adc
fwait
mov
cmp
aas
inc
jmp
mov
popf
nop
lods
imul
enter
mov
xchg
loopne
sbb
cmc
add
lea
jns
int3
jnp
shl
jg
outs
jg
stos
sbb
adc
sar
jns
nop
fwait
out
shl
cmp
adc
mov
sub
icebp
and
mov
jl
mov
inc
xchg
dec
pop
push
add
push
cli
retf
data16
mov
rcl
xchg
cmp
mov
add
loope
test
xlat
repnz
xchg
push
add
sbb
and
and
push
hlt
aam
addr16
call
push
add
into
enter
je
lea
retf
adc
push
fsubr
or
push
mov
mov
js
push
mov
mov
hlt
push
pusha
loopne
movs
jmp
push
call
inc
inc
mov
pop
cli
rol
out
cmp
cs
pop
mov
jle
and
stos
daa
mov
push
adc
out
cs
xor
pop
or
mov
inc
or
aad
or
push
test
add
adc
fs
rcl
cmp
pop
push
mov
and
ins
cmp
or
jmp
fadd
cs
call
test
out
pop
in
push
fld
mov
jl
pusha
add
ss
fnsave
popf
retf
pop
jae
cmc
clc
test
nop
inc
rcl
rcr
(bad)
in
les
imul
dec
imul
jno
out
sbb
push
pop
cmp
retf
add
xlat
fbld
cmp
in
and
adc
pop
pop
gs
imul
cwde
(bad)
or
pop
arpl
mov
imul
outs
xor
xchg
aas
xchg
ds
cmps
jmp
cmp
lds
pop
not
sbb
add
in
adc
dec
sbb
and
adc
mov
mov
pop
and
sbb
sub
adc
cmps
loope
mov
mov
call
outs
sub
jnp
lea
xor
and
push
(bad)
lds
lods
inc
mov
loop
or
adc
inc
aas
int
xor
jbe
mov
sbb
mov
dec
rcl
movs
call
rcr
inc
dec
push
shl
inc
das
or
movs
jg
pop
int3
imul
stos
iret
push
aaa
jne
cwde
dec
rol
mov
sub
les
leave
int3
call
xor
pop
push
pop
and
ror
xchg
test
xchg
mov
daa
ins
inc
xchg
cmps
loop
push
stos
pop
xchg
ficom
iret
std
imul
xchg
mov
rcr
fidivr
pop
mov
push
adc
mov
hlt
and
(bad)
pusha
xchg
fldenv
stos
mov
xor
push
mov
inc
cmps
cs
mov
jb
adc
and
ja
mov
dec
xor
pop
mov
xor
sbb
dec
and
test
jmp
pop
mov
adc
or
xchg
icebp
loopne
mov
in
jae
pop
dec
jo
mov
lock
xor
jmp
xor
js
addr16
add
xchg
sub
jg
sti
and
lods
jb
inc
dec
daa
mov
jne
ror
and
cdq
jae
jp
push
lock
js
mov
pop
sahf
sub
retf
mov
push
mov
sub
mov
enter
loope
shl
add
sub
inc
mov
pop
out
xor
imul
push
jmp
push
mov
jmp
test
xor
retf
or
mov
xor
ds
xchg
test
setnp
cmp
add
fdivp
and
into
xor
stc
push
fmul
and
jp
jecxz
fcomp
iret
mov
xchg
fwait
push
out
cmp
popf
mov
aaa
sti
jg
sub
leave
and
gs
sub
iret
sbb
mov
ja
in
fwait
lods
jmp
repz
jbe
call
stos
pushw
cmc
inc
bound
push
or
sbb
mov
dec
mov
add
adc
mov
xchg
cmc
pop
loop
dec
jp
pusha
jbe
or
sub
lds
and
rcr
nop
data16
fsub
jg
jnp
pop
mov
or
cmps
enter
inc
pop
in
ins
shl
rcr
mov
cmp
mov
int3
xor
cwde
test
mov
push
into
add
jae
pop
adc
mov
call
aam
imul
lds
repnz
jnp
cli
cld
mov
imul
int3
std
sbb
fbstp
and
out
fdiv
add
leave
xchg
(bad)
(bad)
mov
movs
(bad)
cmp
or
rol
add
out
lahf
out
sbb
push
ja
mov
loope
push
cmc
pop
dec
mov
xchg
call
push
addr16
btc
adc
xchg
int
cmps
sbb
dec
jmp
sbb
out
pop
aam
(bad)
push
and
ins
outs
mov
dec
cmp
xchg
push
pusha
sti
or
mov
ds
int
shr
stc
stc
push
mov
xchg
xlat
xor
sahf
mov
iret
ret
xor
dec
inc
jp
(bad)
mov
rol
aaa
sub
adc
mov
push
and
mov
bound
retf
pop
pop
ss
mov
call
dec
jg
push
or
in
jo
push
mov
mov
xlat
outs
in
bound
adc
call
(bad)
iret
repz
pop
jg
addr16
sti
mov
sub
bndldx
cld
cli
xor
inc
cwde
mov
mov
ret
dec
pop
int
add
fs
pop
icebp
daa
xchg
mov
xchg
jbe
pop
xor
jecxz
push
push
push
jl
add
(bad)
xor
inc
mov
jp
inc
adc
pop
in
(bad)
int
mov
test
shr
cs
pop
scas
push
pushf
push
sbb
inc
cli
mov
and
xor
je
iret
cdq
ror
mov
lock
push
sbb
in
sar
dec
mov
jmp
imul
sub
adc
outs
test
lock
icebp
ror
push
and
pop
cwde
(bad)
mov
aas
lds
lods
add
aam
ror
add
pop
(bad)
ja
push
mov
jnp
scas
adc
call
sub
ins
jmp
jle
ror
lods
mov
repz
cmp
sub
inc
jmp
lock
aas
sbb
adc
std
idiv
cmp
pop
movs
jl
jae
fist
mov
aam
pusha
cmp
cmp
sbb
lods
movs
cmps
int3
pop
mov
adc
(bad)
out
rcr
addr16
gs
repz
mov
pop
cmp
mov
lds
sbb
and
and
fsub
adc
outs
xor
aas
xchg
add
mov
outs
mov
and
cmp
push
xlat
push
xor
test
sub
pop
xor
cmp
add
mov
jnp
nop
dec
into
cmp
imul
fnsave
mov
(bad)
or
inc
add
pop
jmp
pop
test
or
neg
sbb
shl
mov
ins
dec
retf
(bad)
mov
push
pop
sbb
test
push
sysret
stc
cmp
jecxz
into
jae
sbb
xchg
scas
pop
fnsave
inc
ss
jp
ret
scas
xchg
into
mov
push
mov
xor
sub
ror
ss
lahf
push
push
sar
or
or
jmp
xor
(bad)
mov
cdq
mov
out
cmc
icebp
or
add
wrmsr
mov
scas
jnp
fadd
or
(bad)
push
movs
pop
cmp
sbb
mov
sbb
push
lds
inc
and
pop
jbe
lea
cmp
in
cmp
(bad)
sbb
dec
ret
mov
cmp
aas
push
or
rol
inc
lds
sbb
pop
loopne
pop
imul
xchg
xchg
daa
xlat
test
xor
push
cmc
and
loopne
sbb
and
adc
mov
mov
ffree
and
cmp
push
out
dec
jb
cmps
call
and
in
jmp
jb
gs
clc
loopne
dec
adc
test
mov
mov
fbstp
retf
pop
sti
cmc
inc
cmp
addr16
adc
sbb
mov
mov
cwde
test
cld
(bad)
jmp
mov
stos
aaa
jg
add
js
retf
je
mov
jecxz
icebp
add
mov
add
mov
dec
pop
pusha
add
pushf
mov
ficom
xchg
jp
push
imul
add
sub
pop
cmp
pop
or
push
cmp
push
xor
mov
pop
push
stos
test
inc
(bad)
sti
(bad)
cmc
in
mov
and
rcr
mov
mov
std
sbb
adc
movs
popf
adc
in
add
cdq
call
inc
gs
inc
adc
movs
ret
or
test
add
repz
jne
sub
(bad)
jne
movs
cmp
inc
popf
push
sub
push
ds
sub
xchg
mov
cld
sbb
call
scas
rol
cmp
(bad)
mov
or
std
(bad)
in
xchg
jg
hlt
and
pop
jns
sbb
pop
or
xor
addr16
scas
inc
cmps
cmp
pop
repz
fwait
cmp
push
aad
pop
mov
out
jnp
fwait
inc
cmps
add
call
or
mov
jmp
jns
inc
cdq
mov
mov
retf
jb
add
lahf
add
cs
(bad)
dec
cmps
inc
add
jne
dec
cli
gs
xchg
mov
in
ins
add
iret
cmps
gs
mov
mov
push
rcr
inc
pop
popa
outs
jmp
inc
and
add
out
dec
jbe
xchg
in
shl
je
xchg
push
lds
scas
mov
pop
push
not
pop
add
pop
mov
mov
jne
fisub
pop
les
call
scas
push
push
fwait
inc
jno
push
into
shl
dec
fwait
pop
push
or
mov
jns
and
pop
ja
push
mov
mov
iret
cld
in
xchg
jmp
enter
outs
int3
mov
inc
pop
call
aam
and
lahf
loopne
pop
push
or
sub
mov
call
pop
cmp
cld
test
cmp
jbe
mov
adc
add
test
xchg
das
fistp
jns
pop
mov
and
sub
inc
mov
xchg
add
scas
lds
mov
xchg
test
outs
fisttp
ja
outs
and
repz
sbb
out
xchg
pop
xor
(bad)
retf
push
outs
sub
push
test
mov
rol
lds
fwait
repnz
rol
sbb
mov
dec
mov
outs
push
mov
sahf
push
imul
inc
je
or
ins
retf
shl
mov
inc
pmaxub
lods
dec
ja
jo
and
pop
jne
mov
mov
lods
push
in
int3
sbb
inc
mov
mov
arpl
call
aaa
jmp
out
test
rol
dec
jo
cli
and
jns
arpl
cmps
adc
pop
sub
xor
mov
xor
(bad)
mov
movs
jne
jb
ret
cmc
call
gs
cli
and
mov
lahf
mov
jno
daa
mov
inc
addr16
mov
mov
fsubr
sbb
mov
cli
xchg
and
mov
add
lock
inc
clc
bound
mov
test
push
and
inc
mov
loope
mov
mov
ds
fsubr
repnz
shl
inc
aam
rcr
mov
adc
pusha
push
outs
or
call
lock
push
add
sbb
add
test
xchg
hlt
inc
dec
lods
shl
push
bound
pushf
jmp
mov
xor
retf
test
add
in
mov
aaa
push
push
sub
jo
jb
in
ins
xchg
adc
mov
in
ret
inc
fisub
lods
dec
add
mov
cmc
sahf
out
(bad)
cdq
int
adc
sbb
jle
in
add
sbb
and
nop
push
leave
sti
jae
mov
(bad)
inc
cli
out
sub
mov
jbe
and
fdiv
xchg
dec
ficom
sbb
(bad)
imul
jae
pusha
out
jle
add
out
imul
adc
movs
ss
mov
mov
in
xor
inc
xchg
out
push
jno
cmps
cmp
push
(bad)
sbb
lahf
cdq
aad
pop
enter
cmc
cmps
gs
inc
jmp
repz
loopne
or
fwait
(bad)
xchg
into
jl
xchg
clc
add
mov
test
jg
inc
cdq
leave
xor
dec
neg
in
cmp
(bad)
xor
cmp
cwde
fld
aam
mov
aam
or
mov
inc
fld1
dec
xor
sbb
adc
push
adc
sti
push
mov
and
sbb
cdq
ins
lods
pop
(bad)
cmp
and
xchg
push
cmc
sbb
repnz
jmp
jge
mov
mov
inc
push
fisubr
xchg
pop
jns
in
mov
(bad)
nop
xlat
pop
retf
jo
outs
jmp
jne
ins
jmp
inc
or
jno
or
or
pop
jl
lea
xchg
hlt
call
mov
jmp
jmp
push
(bad)
pusha
mov
xor
push
add
xchg
not
in
push
push
adc
(bad)
jno
ror
fsub
mov
mov
push
xor
mov
adc
pop
into
add
fdivr
pushf
imul
aas
test
mov
loope
jp
fcmovnu
mov
add
and
fs
out
xor
sub
popf
inc
sbb
(bad)
fild
retf
jl
imul
ret
lock
(bad)
movs
sub
fstp
out
and
dec
sahf
cli
mov
(bad)
jmp
cmp
adc
mov
adc
lahf
movs
and
dec
dec
xchg
idiv
cmps
ror
fcomip
dec
xchg
push
sub
lds
and
inc
adc
add
xchg
je
rcl
or
arpl
sub
sbb
sub
pusha
cmps
test
inc
inc
sbb
test
xchg
cli
test
pushf
repnz
and
sbb
nop
dec
push
jnp
test
ret
dec
mov
in
ins
dec
cld
push
cmp
aaa
xor
mov
clc
mov
and
cdq
adc
inc
popf
iret
cs
ins
xor
(bad)
push
jp
mov
jae
stos
fisub
outs
mov
cs
sbb
or
or
push
mov
and
add
mov
jge
rcr
shr
aas
call
test
and
sub
es
movs
ins
cs
push
pop
mov
movs
mov
jecxz
lahf
in
sbb
sbb
or
imul
inc
lods
mov
mov
int
cs
xchg
shl
and
mov
jl
ret
popa
add
jle
sub
popf
dec
loopne
dec
mov
fdiv
scas
xchg
inc
push
sub
leave
xor
mov
enter
jmp
sub
jne
(bad)
mov
or
cdq
push
push
or
xor
mov
adc
ret
scas
fisub
movs
inc
and
cmp
dec
dec
cwde
adc
clc
mov
rcl
push
cmp
mov
xchg
int
dec
outs
sub
mov
xchg
loopne
sub
xor
sub
inc
sub
or
jnp
fsubr
and
pusha
mov
push
jl
div
adc
in
or
not
xchg
scas
sub
push
dec
xchg
addr16
sti
mov
sbb
cmp
and
jnp
mov
(bad)
call
sub
bound
jae
popf
dec
inc
adc
or
repnz
stos
push
enter
stos
ds
(bad)
dec
adc
repnz
iret
xchg
xchg
ret
fnstsw
je
imul
hlt
jne
pop
jge
(bad)
(bad)
retf
js
out
or
ret
inc
xor
aad
add
jmp
or
(bad)
sub
xor
adc
add
mov
cld
or
js
add
ins
ror
adc
cmp
rcl
mov
inc
out
lock
or
out
dec
dec
in
push
ret
sbb
cld
scas
popa
cs
pushf
repz
xor
add
hlt
pop
pop
mov
test
scas
mov
int
push
xor
mov
add
sbb
stc
jnp
ja
fs
cwde
(bad)
xchg
in
sbb
jnp
push
(bad)
mov
jbe
xor
loopne
not
cmp
and
sbb
cs
sub
mov
cdq
shufps
pop
fsub
nop
cmp
(bad)
fistp
mov
jbe
addr16
stc
mov
adc
inc
cmp
into
xor
dec
outs
jge
sahf
add
daa
cmc
idiv
xchg
pop
fild
pop
into
movs
pop
jb
dec
in
fisub
xlat
inc
fidiv
enter
cmps
(bad)
or
jno
fcom
mov
ds
push
push
stc
cs
inc
lods
cmps
inc
adc
bound
jle
xchg
dec
cmps
repnz
xlat
mov
xchg
inc
mov
mov
dec
mov
mul
shr
fnstcw
inc
inc
imul
inc
sbb
call
imul
into
movs
movs
jle
fistp
aas
mov
lods
inc
or
pop
jl
lock
scas
sbb
push
shl
pop
cmps
cmp
adc
mov
fild
push
(bad)
and
stos
ins
int3
or
push
mov
jno
mov
sub
or
stos
or
add
arpl
retf
rcr
push
mov
mov
sti
adc
or
push
mov
or
cdq
jns
lahf
lods
scas
xchg
into
ret
out
jecxz
inc
xor
cmps
sbb
outs
(bad)
xlat
cmps
adc
loop
das
and
arpl
dec
cmps
xchg
test
jl
call
cmp
fadd
push
cmp
and
outs
mov
push
nop
jns
mov
mov
clc
push
aaa
add
xor
jbe
ret
add
push
fwait
xor
jno
pop
es
xchg
mov
pop
xor
(bad)
pop
mov
jge
sub
jmp
imul
dec
neg
ja
mov
cmps
dec
jecxz
(bad)
ja
cmp
cdq
hlt
lock
or
add
mov
js
addr16
data16
adc
aad
cmp
mov
xchg
fisubr
mov
push
xor
ds
paddb
fsub
mov
xor
jns
outs
loopne
xchg
push
mov
xor
jle
adc
inc
ds
inc
(bad)
cmp
inc
sub
jbe
daa
dec
in
jae
adc
pushf
cmp
adc
mov
mov
jnp
sbb
lods
xor
pop
enter
mov
ins
aam
mov
js
and
enter
out
jge
in
inc
imul
inc
mov
in
mov
ins
rcl
add
jmp
aaa
mov
mov
dec
retf
lock
movs
not
out
jb
pop
inc
rcr
nop
scas
jmp
xlat
lock
js
inc
jmp
repnz
cmp
in
test
aad
push
pop
stos
xor
dec
pop
scas
sub
dec
mov
and
pop
je
add
and
mov
cdq
mov
mov
pop
or
and
xchg
(bad)
neg
ss
inc
es
loop
dec
pop
xchg
int3
fwait
or
mov
adc
push
pop
les
iretw
jb
adc
jg
jmp
sub
arpl
jae
loopne
call
xor
out
pop
xlat
push
(bad)
cmp
push
dec
(bad)
fadd
pop
add
sbb
add
inc
jp
dec
mov
mov
pop
sar
or
mov
sar
adc
ror
fs
or
cwde
retf
xchg
mov
dec
sub
push
outs
cdq
retf
leave
jp
adc
(bad)
pusha
jae
rcl
xchg
mov
or
daa
pop
sub
sub
rcl
sbb
test
sub
loope
jno
pop
or
enter
nop
arpl
imul
push
scas
fdiv
fisttp
repz
ret
das
jne
out
cld
mov
ins
push
(bad)
(bad)
mov
mov
stos
or
pop
push
or
enter
add
cmp
ror
(bad)
call
add
mov
pusha
test
xlat
cmps
dec
retf
pop
xor
aas
aad
pusha
cs
sbb
jp
out
shl
and
loop
mov
pop
das
jb
sbb
xchg
inc
xor
xchg
scas
mov
(bad)
jb
popa
icebp
nop
cmps
mov
mov
cmp
outs
mov
xchg
xchg
mov
lods
daa
and
sub
fist
sar
jns
icebp
pop
push
cld
stos
or
sahf
in
aad
mov
or
push
je
hlt
into
push
cld
xchg
in
jne
lahf
sar
jmp
and
mov
cmp
in
call
retf
cmp
push
sbb
ds
(bad)
pop
xor
ins
repz
inc
jns
test
out
cwde
call
push
xor
push
cmps
mov
cmp
sub
push
mov
mov
in
out
movs
je
repnz
xor
dec
pop
cmp
pop
sar
rol
mov
sbb
push
mov
fcom
sub
test
mov
cmps
(bad)
xlat
mov
ror
mov
xor
pop
or
stos
and
and
fst
fs
xor
dec
pushf
or
jno
sub
lods
xor
addr16
fucomp
ret
add
lods
and
mov
mov
ja
push
xor
call
xchg
sahf
and
push
ins
mov
or
inc
push
jecxz
rcl
ficomp
dec
lods
aad
lods
out
push
and
add
push
ret
pop
inc
shr
sar
out
in
mov
mov
pop
stc
je
sub
xchg
mov
stc
fucom
lahf
pop
pop
adc
push
jne
sbb
sahf
int
ss
or
in
ficom
cs
and
into
in
jnp
sbb
rcl
test
scas
imul
(bad)
sbb
mov
sub
ror
jmp
lds
jge
push
es
jl
fmul
repz
js
aas
mov
bound
out
push
ins
repz
xchg
jecxz
loope
mov
cmp
int3
repnz
rdpmc
mov
push
popa
add
(bad)
pop
(bad)
das
mov
pop
mov
outs
cdq
das
(bad)
mov
dec
jmp
das
adc
push
xchg
sub
xchg
popa
push
pop
mov
(bad)
in
inc
dec
nop
dec
jg
xor
mov
mov
push
hlt
pop
sbb
add
ss
ret
es
leave
push
in
(bad)
cmc
shl
rsqrtps
xlat
cmp
xchg
inc
in
enter
imul
cmp
jmp
imul
and
repnz
add
adc
xor
into
sahf
rol
adc
sbb
jge
sar
pop
mov
mov
pop
cmps
fstp
mov
icebp
lahf
lea
stos
push
xor
mov
ret
and
jecxz
imul
scas
aas
cmc
out
mov
inc
mov
rol
xlat
push
mov
add
xor
mov
xlat
xor
data16
cmps
mov
pusha
pop
test
mov
jle
pushf
std
jno
adc
clc
xchg
mov
push
loopne
cmp
pushf
ja
imul
mov
lahf
icebp
mov
mov
rcr
mov
and
inc
mov
ret
dec
stc
bnd
inc
xchg
mov
mov
jno
cld
push
or
xor
aas
lock
stos
push
fwait
jmp
lahf
sub
sbb
std
loop
mov
dec
sbb
cld
sub
push
jle
mov
loop
iret
pop
imul
dec
xchg
out
test
jo
jge
jp
xchg
push
push
loope
adc
jno
shr
fisub
sbb
sbb
pop
sub
add
loop
(bad)
in
adc
mov
pop
loope
in
dec
fild
xchg
aam
mov
ror
dec
mov
mov
push
mov
mov
dec
inc
xchg
scas
jb
ja
rcl
mov
pop
jne
push
dec
mov
mov
xchg
fstp
mov
popa
sbb
nop
call
mov
xor
fisubr
into
push
nop
mov
shl
rcl
jo
jne
lock
shl
outs
xchg
mov
ret
and
rcr
aad
jge
pop
ror
pop
inc
adc
cmp
in
pop
jnp
mov
jp
jnp
pop
inc
adc
jns
mov
or
retf
das
add
mov
movs
inc
cmps
push
cmp
aam
xchg
mov
scas
pop
mov
jne
sbb
pop
cmp
mov
mov
mov
pusha
icebp
ror
and
(bad)
mov
mov
nop
xor
xchg
inc
in
int
retf
cmp
xor
or
add
xor
pop
jl
mov
fidiv
aam
mov
or
mov
mov
mov
mov
sbb
jp
sbb
sahf
frstor
xchg
and
push
addr16
pop
fwait
xchg
into
and
xchg
sahf
xor
and
inc
aas
in
imul
call
or
sbb
les
pushf
call
(bad)
data16
(bad)
sub
test
sahf
push
dec
retf
push
pop
icebp
xchg
imul
rol
movs
xor
neg
cld
stos
dec
outs
adc
loopne
jle
xchg
rcl
es
or
fsubr
sbb
in
cwde
add
adc
test
pusha
sub
dec
jmp
jg
leave
leave
mov
and
js
movsx
mov
repz
dec
retf
cwde
mov
mov
test
sbb
in
mov
aas
jno
dec
jl
cdq
lods
aaa
pushf
and
popa
or
out
mov
pop
sub
jle
jo
retf
xlat
xchg
mov
dec
mov
pop
fsubr
je
(bad)
sahf
clc
into
leave
sbb
xchg
pop
cwde
fiadd
adc
rol
ins
pop
mov
imul
in
ror
xchg
xchg
enter
rcr
push
push
and
sbb
xor
into
inc
sub
adc
hlt
(bad)
fbstp
jge
inc
add
sub
add
xor
fmul
popf
popf
ds
or
js
inc
pop
rcl
mov
sub
xchg
or
pop
cmp
pop
iret
pusha
jle
sub
or
jge
and
and
fnstcw
in
int3
jg
shl
xor
cmp
jl
imul
test
xor
mov
mov
push
sbb
and
cmp
adc
sar
sti
dec
cdq
scas
and
adc
test
push
js
ins
call
push
mov
dec
(bad)
popf
stos
popf
mov
cmp
push
fwait
jbe
mov
inc
fwait
push
sbb
pop
(bad)
mov
bound
mov
xor
iret
mov
cmp
pop
rol
sbb
or
in
or
(bad)
rcl
push
pop
jmp
push
add
enter
sbb
pushf
mov
ret
jmp
jne
shl
jmp
pushf
or
test
cmp
aaa
ror
repz
es
jmp
hlt
adc
hlt
jne
xor
pop
pusha
jo
fdiv
shl
and
test
jmp
js
push
dec
dec
push
enter
and
ror
add
pushw
jecxz
daa
(bad)
xchg
mov
pop
push
pop
sub
adc
in
(bad)
xlat
imul
pop
pop
cmc
cdq
xchg
out
xchg
cmp
out
push
dec
inc
mov
test
outs
fidivr
adc
(bad)
loope
cmps
dec
scas
xor
rcl
jno
and
dec
(bad)
cld
call
movs
xlat
mov
add
mov
pop
iret
xchg
mov
jg
pop
stos
jbe
xor
mov
call
lea
bound
out
loop
les
add
lock
sbb
inc
loop
fild
aaa
pop
in
cmp
and
in
sub
(bad)
pop
push
or
mov
out
and
push
in
in
pop
mov
aas
mov
ds
pop
jbe
mov
push
pop
cmp
fdiv
sbb
and
lods
xchg
in
sbb
pop
xchg
out
aam
popf
xor
pop
push
push
inc
jne
or
dec
pop
or
dec
(bad)
aas
mov
fisttp
call
xor
int3
mov
mov
push
push
pop
add
pop
or
pop
shl
inc
xor
mov
xor
add
ja
ss
add
sub
pop
jmp
jns
sub
cmps
inc
out
push
das
push
aas
call
stos
push
iret
sub
repnz
and
or
ret
sub
test
xchg
aaa
outs
inc
repz
sti
call
fiadd
xchg
js
or
cmps
pop
xchg
jne
mov
mov
rol
lahf
jecxz
push
test
scas
push
imul
adc
repz
add
repz
cwde
xlat
(bad)
lds
clc
mov
ds
xchg
cs
mov
inc
cwde
or
jg
and
repz
std
jbe
xchg
jns
mov
add
xor
or
test
clc
out
push
pop
in
fwait
dec
lods
cdq
daa
cmp
jmp
shr
pop
pop
sub
ds
loop
movs
cmp
imul
jns
cmp
mov
pop
jmp
test
add
add
(bad)
stos
mov
push
div
mov
fmul
sbb
pop
(bad)
pop
in
push
inc
mov
cli
jl
(bad)
out
jae
into
lock
test
bound
into
repz
movs
mov
ficomp
sbb
add
inc
jnp
in
retf
push
mov
sbb
sub
adc
call
popa
jle
mov
cmp
sub
hlt
aas
mov
call
data16
xchg
test
sub
adc
cmp
cmps
pop
xchg
test
out
jecxz
pop
call
or
inc
ja
int
(bad)
mov
mov
je
sahf
add
xchg
inc
stos
hlt
sub
stos
dec
mov
sahf
bound
bound
test
cmp
inc
xchg
inc
das
cmp
mov
inc
pop
inc
mov
mov
test
imul
or
push
mov
lods
pop
ror
cmp
cmps
pop
push
push
push
arpl
loope
cmovo
int3
jmp
test
cs
xchg
add
arpl
push
mov
fwait
scas
inc
adc
mov
jnp
test
inc
outs
xlat
mov
enter
jnp
inc
pop
push
sub
xchg
jmp
out
bound
lahf
mov
call
test
test
popf
jno
push
xor
cmp
mov
mov
mov
lock
or
inc
pushf
test
lods
xchg
jne
test
(bad)
shl
sbb
cs
adc
push
fild
data16
lahf
test
jp
adc
mov
xor
test
arpl
and
int3
xor
mov
repnz
mov
mov
fdivr
adc
xlat
xor
sub
test
or
xchg
test
ins
lods
adc
in
fsub
gs
cmp
cmp
repnz
in
xchg
outs
fld
cmp
dec
and
jmp
les
mov
lea
mov
jl
ins
in
mov
mov
(bad)
daa
pusha
cmp
mov
sub
into
xor
mov
jnp
push
mov
cmp
rol
dec
jne
in
cmp
push
and
dec
xchg
scas
nop
sbb
repz
jmp
push
inc
mov
dec
mov
adc
cmp
add
xchg
jmp
fs
xchg
mov
lods
ds
adc
call
inc
and
ffree
ror
adc
jmp
mov
lds
push
mov
aam
mov
ret
xor
cmps
(bad)
retf
fstp
repnz
lahf
push
jae
push
lods
pushf
xor
or
cmp
cld
lods
cmc
clc
es
and
rcr
shl
aam
and
mov
push
push
jge
icebp
dec
cmp
hlt
xchg
cmc
jnp
push
adc
cwde
mov
cmp
cdq
xchg
push
xor
xor
not
daa
mov
jae
or
xchg
fisubr
popf
repz
push
or
or
ds
and
repz
xlat
push
bound
mov
push
stc
pop
mov
stos
movs
arpl
push
(bad)
sti
(bad)
jbe
sub
arpl
inc
aad
jne
stos
(bad)
push
pop
push
lods
call
fst
jp
xor
sub
pop
enter
scas
or
push
cwde
(bad)
mov
test
xchg
push
outs
mov
pop
inc
enter
sti
stos
mov
in
retf
arpl
mov
or
mov
mov
adc
jge
inc
cmp
jge
jg
xchg
(bad)
fisub
in
imul
retf
scas
dec
pusha
inc
rcl
mov
mov
xchg
cmp
es
mov
or
sub
imul
inc
add
enter
jp
pop
mov
push
scas
mov
ret
and
test
imul
sub
cmp
mov
and
mov
sbb
addr16
pop
icebp
popa
call
cmp
xchg
out
xchg
retf
push
sbb
fisubr
outs
fs
jmp
out
add
pusha
jnp
pop
test
(bad)
dec
adc
add
pop
sar
cmps
xor
jno
fild
lods
stos
shl
adc
add
jge
mov
xchg
mov
int
push
sub
and
pushf
mov
push
es
pop
cld
stc
jbe
popa
sub
dec
je
int3
(bad)
fcmovbe
or
add
jne
cmc
and
inc
cmp
daa
mov
mov
sbb
loopne
(bad)
pusha
(bad)
repnz
jg
int
inc
push
in
ret
mov
ds
and
add
add
mov
mov
cmp
mov
fld
jns
pop
std
rcl
mov
xor
in
inc
push
test
and
mov
mov
mov
push
mov
or
aad
hlt
sbb
pop
fs
dec
sub
jmp
stos
ror
sbb
fldcw
adc
(bad)
mov
jg
sahf
push
jecxz
mov
mov
cmp
add
inc
push
scas
jg
rcr
popf
push
and
fadd
not
cld
add
xchg
inc
mov
out
or
stos
test
fstp
fprem
js
dec
aad
retf
push
xchg
lds
mov
mov
leave
shr
movs
rcr
call
sar
adc
adc
pop
shl
sti
jle
inc
cmp
cmp
jmp
push
pop
(bad)
cmps
or
jo
dec
and
xchg
sub
ins
pop
mov
data16
iret
inc
push
cmp
xchg
(bad)
pop
xchg
jae
test
dec
or
mov
repz
sub
sub
shl
jns
cmp
(bad)
mov
sub
ret
call
dec
and
int
imul
dec
fwait
movs
ret
lock
stos
repnz
ficom
push
and
in
jp
scas
retf
sub
jno
fwait
jecxz
ins
ja
push
pop
in
out
mov
sbb
imul
jmp
js
sti
jmp
rcr
cdq
sbb
inc
jge
stos
mov
push
shl
aad
aaa
in
xchg
and
cmps
dec
mov
ins
push
adc
pop
jae
mov
stc
std
lahf
(bad)
push
cli
es
repnz
dec
xor
ret
pop
movs
neg
ins
inc
push
fdivr
(bad)
out
hlt
mul
or
jp
pop
stc
sbb
add
movs
in
push
loop
inc
(bad)
cmp
pop
cmp
mov
add
jge
and
mov
sub
sub
push
scas
(bad)
cmc
ja
scas
cmps
jg
or
ds
imul
jbe
sub
(bad)
(bad)
cmova
fcom
(bad)
mov
enter
lock
out
inc
inc
mov
loop
scas
into
movs
dec
pop
and
call
and
movs
out
lods
fst
mov
(bad)
pop
jno
add
add
fistp
pop
div
pop
(bad)
ss
mov
adc
cmc
enter
movs
(bad)
out
lahf
in
aaa
fcomp
pop
dec
(bad)
xor
xor
addr16
fwait
push
xchg
stos
int3
in
test
in
popf
je
jmp
cmp
adc
adc
pushf
stos
pop
clc
into
outs
rol
rcr
sub
or
aam
jmp
ficomp
pop
inc
icebp
aad
dec
in
out
jb
aam
mov
xchg
inc
stos
sbb
fdiv
xor
ss
pop
out
icebp
mov
push
adc
aam
lea
rol
and
in
loop
test
daa
aas
sub
pushf
adc
jmp
dec
inc
lea
mov
int3
xor
inc
enter
mov
and
cmovl
jmp
push
imul
mov
push
int3
ja
sbb
pop
daa
jo
adc
fistp
dec
lahf
dec
and
pop
imul
jae
mov
cmps
hlt
stos
adc
shl
push
sti
fimul
shl
out
cmc
or
sbb
daa
mov
add
mov
int3
in
ds
pop
hlt
adc
leave
dec
(bad)
repz
cmp
imul
loope
sub
in
outs
inc
movs
pop
data16
lock
mov
push
xchg
mov
enter
rcl
mov
cmc
mov
adc
jns
loop
mov
xchg
ficomp
out
or
xchg
jg
lods
scas
test
mov
push
loop
inc
dec
inc
(bad)
and
(bad)
loopne
sbb
add
out
into
mov
gs
dec
(bad)
jo
lahf
mov
mov
inc
ret
sub
and
aas
pop
lds
sahf
mov
shr
push
cld
xor
in
jo
mov
mov
sub
mov
mov
(bad)
ds
outs
loope
cdq
push
add
cli
out
clc
aaa
mov
ret
or
cli
and
adc
pop
fiadd
(bad)
adc
outs
test
adc
das
push
and
lods
pop
mov
or
xor
es
dec
call
cmp
in
shl
retf
push
lahf
je
jb
daa
std
fdiv
pop
inc
cmp
mov
jnp
sub
sti
mov
test
jp
cmp
ja
pop
pop
retf
jae
adc
loopne
(bad)
in
(bad)
mov
aam
jle
fcom
je
push
inc
sbb
mov
leave
inc
pop
sahf
ror
out
mov
or
clc
loop
jle
cmp
jg
mov
jo
ja
xlat
(bad)
das
rcl
mov
fiadd
leave
lock
mov
aas
cmc
rcl
lds
or
lahf
sbb
jmp
aaa
(bad)
cs
mov
aaa
sbb
shl
into
push
push
mov
mul
ds
fsub
loope
jae
or
xchg
adc
inc
pop
add
or
xchg
mov
js
loope
or
fiadd
xchg
push
(bad)
ror
(bad)
sbb
mov
xor
inc
or
out
mov
call
xor
(bad)
leave
ss
loope
stc
and
xchg
das
movs
jmp
std
inc
pop
ja
sahf
xlat
out
jmp
and
inc
inc
mov
ja
fcomp
jnp
rcr
sti
push
shl
jns
loopne
in
inc
adc
in
push
push
or
es
jl
mov
shl
inc
sbb
mov
and
(bad)
mov
retf
cdq
clc
push
test
cld
push
shl
ret
sahf
dec
and
fld
dec
cdq
into
call
jne
add
int3
fcom
cwde
out
and
call
push
push
scas
mov
(bad)
pop
icebp
cmp
jne
ret
inc
inc
fild
and
mov
dec
pop
stos
jns
inc
jo
xchg
dec
pop
add
dec
(bad)
jbe
aas
daa
in
lods
xor
xchg
push
xchg
mov
arpl
popa
sbb
push
aas
add
mov
arpl
add
aam
lea
xchg
in
xchg
push
or
ja
sbb
push
pop
bts
pop
cmps
xchg
xchg
into
adc
push
pop
cli
out
inc
ret
sbb
setno
(bad)
or
mov
out
dec
(bad)
jnp
push
cmps
jp
push
adc
cdq
ss
fld
aas
rcr
sti
aam
(bad)
popf
mov
inc
out
sub
mov
dec
(bad)
popa
call
inc
adc
sbb
ins
aad
les
mov
call
push
xor
pop
adc
(bad)
add
jbe
addr16
mov
enter
into
les
xor
(bad)
pop
dec
retf
pop
jle
pop
jle
mov
inc
cld
out
dec
daa
mov
xchg
xchg
ja
cdq
mov
cmps
dec
dec
cmp
in
xchg
cmp
clc
sub
dec
sbb
sbb
pop
and
fadd
adc
mov
les
les
dec
aam
hlt
sahf
loop
mov
outs
mov
retf
xor
adc
aas
leave
jge
test
mov
loope
jo
inc
fst
stos
daa
push
ret
iret
adc
xchg
add
cmp
jnp
sahf
and
xlat
enter
enter
or
fidiv
mov
or
xchg
into
pop
pop
dec
inc
ret
mov
mov
aaa
mov
sbb
or
xor
enter
or
push
in
gs
scas
jb
ins
outs
adc
out
adc
push
mov
dec
xchg
je
cmp
(bad)
inc
int
push
jbe
mov
xchg
jno
xor
ret
in
ins
and
push
and
cmp
mov
mov
or
push
mov
iret
fnstsw
mov
jge
jbe
mov
leave
imul
mov
pop
pop
inc
ds
out
mov
mov
pop
mov
test
(bad)
out
in
ficom
imul
arpl
pop
and
dec
mov
in
mov
int
adc
ror
mov
push
adc
movs
repnz
mov
in
lds
mov
mov
dec
stc
jbe
retf
popf
stos
mov
cmp
lods
aas
sbb
push
add
cmp
jecxz
and
xor
popf
outs
call
stos
push
add
fld
add
stos
shl
sbb
jp
imul
in
jo
jecxz
fwait
adc
and
leave
mov
out
out
adc
jb
mov
push
in
gs
inc
fmul
xor
mov
imul
cli
clc
cld
xchg
push
push
mov
idiv
sbb
add
ror
cmc
push
push
data16
(bad)
mov
(bad)
jl
ins
ins
sbb
loope
gs
dec
or
ret
sub
std
pop
lods
cmp
mov
movs
cmpxchg
cmc
call
inc
adc
push
inc
jns
xchg
outs
imul
(bad)
jmp
xor
into
sbb
jg
cld
cmc
outs
or
sub
stos
jle
jno
bound
adc
sahf
out
pop
push
int
in
dec
stos
mov
in
mov
mov
cwde
sub
sub
and
xchg
pop
mov
add
fcom
scas
inc
and
scas
fwait
pop
loope
jecxz
mov
inc
mov
xchg
xchg
mov
loope
enter
sahf
hlt
dec
mov
xor
daa
sar
lea
adc
(bad)
imul
hlt
add
mov
mov
push
cmp
sub
jne
ret
adc
dec
cli
scas
shl
test
in
push
mov
add
jp
pushf
nop
xchg
adc
es
jbe
push
dec
inc
fwait
into
adc
lds
pop
ds
dec
xchg
iret
pop
dec
jmp
outs
adc
mov
and
push
mov
adc
xchg
cmps
pop
das
fistp
xlat
jne
stc
add
cmp
inc
jl
and
sub
ins
mov
clc
fnsave
ins
add
pop
popa
mov
adc
jb
addr16
push
mov
xchg
call
rcr
ret
test
scas
xor
repz
xor
and
in
loop
sub
je
mov
cmp
mov
aam
mov
sbb
pop
xor
int
adc
pop
jb
add
ss
ins
repnz
xchg
test
push
aad
xor
xor
loop
lock
int3
(bad)
into
mov
inc
xchg
jge
add
enter
sbb
fimul
loopne
leave
out
mov
add
pop
not
popf
mov
mov
sbb
sub
call
jg
push
cdq
imul
xor
or
aas
lds
test
jge
jmpw
dec
or
in
dec
ror
or
out
fsub
jge
loopne
(bad)
(bad)
jmp
inc
and
sub
clc
in
mov
out
or
xor
pop
lods
das
or
sub
call
push
lea
and
rcr
ds
call
cmp
cmp
enter
test
enter
lea
ss
push
sub
shl
lahf
pop
mov
and
inc
xor
jnp
jnp
test
mov
retf
cmp
mov
jo
mov
push
or
sub
mov
xor
(bad)
jle
add
add
popf
xchg
jge
inc
hlt
mov
inc
xor
iret
fwait
mov
pop
mov
cmp
jns
add
out
mov
out
dec
xor
sbb
pushf
jae
in
mov
jne
dec
sub
mov
in
jecxz
mov
sti
ret
cmp
faddp
int
int3
pushf
in
or
clc
sub
add
xchg
add
and
gs
in
js
lock
inc
je
sub
or
rdrand
iret
lds
push
int3
in
xor
imul
sub
test
xor
mov
mov
lds
mov
hlt
dec
or
retf
jle
fs
cmps
pop
les
mov
xchg
xchg
xchg
push
pop
repnz
mov
fidiv
mov
xor
test
popa
push
sbb
mov
cmp
cdq
ja
mov
adc
dec
fcmovbe
add
cld
lods
pop
jnp
sti
pop
neg
jbe
je
je
stc
jmp
fbld
mov
aad
bnd
(bad)
(bad)
icebp
xchg
rcr
in
push
sbb
mov
bound
push
sbb
scas
dec
xor
cmp
sbb
jmp
aaa
imul
xlat
dec
mov
repz
scas
inc
sbb
jl
mov
add
leave
jmp
int3
inc
inc
sbb
pop
ins
imul
or
shr
lea
jle
dec
scas
sub
aam
in
cmp
popf
sahf
scas
loope
add
daa
sub
mov
add
pushf
dec
leave
mov
pop
gs
mov
scas
rcl
test
js
jo
imul
mov
aad
in
(bad)
cmp
mov
cmp
or
std
xchg
call
add
fidiv
mov
div
call
mov
cmp
es
pop
cmp
sahf
mov
xor
clc
popa
mov
cld
fsubrp
jae
jp
push
ret
xor
fild
mov
cmp
ret
hlt
neg
dec
pop
aas
sbb
cmps
pop
xor
cmps
arpl
fwait
pusha
mov
inc
pop
ins
ds
je
js
push
out
imul
test
out
adc
loopne
xchg
in
hlt
sub
xor
fnstsw
mov
pop
enter
sub
lds
gs
mov
xor
loop
push
mov
xchg
ins
lss
mov
push
mov
cdq
dec
imul
mov
iret
cmps
cli
jns
jne
sub
xchg
jnp
adc
fcom
sar
retf
cld
outs
test
fadd
pop
data16
ret
fstp
aad
inc
fwait
test
pop
inc
xchg
cmp
movs
cmps
mov
and
sub
push
jmp
addr16
pop
loopne
pop
scas
(bad)
cmp
fild
inc
movs
mov
mov
aas
xchg
adc
retf
stos
sar
fucom
and
retf
fs
sub
arpl
std
xor
mov
pop
mov
fidivr
dec
adc
cmp
mov
or
xor
into
fistp
mov
fnop
cld
mov
sbb
push
jae
jno
or
repz
cmp
nop
xchg
cmp
ja
les
sbb
push
dec
jle
ja
jg
ret
mov
(bad)
jecxz
retf
push
sub
mov
xchg
adc
mov
repnz
jnp
test
and
xor
mov
fs
fadd
ins
in
ins
and
mov
inc
mov
cmp
and
jmp
fiadd
aad
pop
in
pop
pop
push
mov
cmc
pop
add
jbe
stc
loop
sbb
push
pop
ret
and
push
int3
or
mov
sbb
call
adc
cli
push
stc
ins
push
out
push
loop
in
cmp
sbb
or
scas
pop
mov
in
mov
dec
xor
xchg
jmp
outs
sub
ins
sbb
and
xor
xchg
xchg
arpl
out
or
and
sbb
push
not
xchg
cmp
inc
add
shl
xor
mov
retf
mov
add
mov
out
imul
nop
mov
jp
into
sbb
shl
pop
sbb
jne
xlat
rcl
dec
lock
and
stc
cmp
cmp
add
mov
xor
ud0
inc
mov
ret
sub
push
aaa
jnp
sub
ja
in
dec
lds
cmps
pop
jmp
and
pop
aad
and
pop
sbb
loope
mov
int
pop
sahf
mov
(bad)
shl
cmp
inc
adc
jo
sub
stc
xor
xor
mov
xchg
add
xchg
fsub
and
das
mov
adc
aas
pop
add
fs
xor
xor
cdq
stos
xchg
mov
cmp
add
inc
cld
jecxz
mov
cwde
xchg
loop
mov
sbb
in
arpl
dec
sub
push
pop
push
mov
mov
xchg
or
in
test
(bad)
pop
dec
ret
dec
aaa
xchg
retf
sub
cmp
adc
(bad)
xlat
jmp
or
pop
pop
or
inc
in
xchg
and
jae
test
inc
sub
jp
push
(bad)
sbb
jle
mov
push
outs
xor
adc
adc
inc
dec
sbb
cmp
mov
jns
pop
in
bound
add
call
adc
gs
je
mov
jmp
dec
mov
cmovns
dec
sbb
(bad)
or
cld
out
cmp
pop
stos
add
sub
das
ja
lds
fisttp
in
xchg
pop
fisub
mov
pusha
addr16
push
lds
jle
mov
cmp
lahf
sti
and
fs
adc
daa
cmc
(bad)
rol
push
test
es
scas
jmp
jne
pushf
gs
push
or
xchg
movs
dec
fisub
outs
xor
push
mov
sahf
xchg
stc
sti
jae
and
xchg
mov
addr16
popf
pop
in
out
out
call
stc
push
adc
or
fst
out
push
adc
dec
mov
add
mov
popf
mov
mov
inc
mov
mul
xor
stos
retf
jae
sbb
das
inc
(bad)
sub
jae
fistp
cwde
scas
aaa
pop
cmp
ret
lock
std
sti
mov
mov
ds
pop
push
jae
ds
popa
push
mov
xor
cmp
mov
out
div
xchg
pop
cli
pop
and
adc
retf
and
dec
adc
mov
or
fmul
popf
movs
ds
loope
mov
mov
xor
mov
xlat
(bad)
push
fsub
cs
and
mov
and
mov
dec
test
ror
pop
mov
dec
in
ins
(bad)
adc
or
add
adc
mov
dec
shl
lock
xchg
stos
push
mov
adc
mov
(bad)
fcomp
sbb
gs
out
movs
sbb
(bad)
mov
pop
ss
into
adc
out
bound
mov
ss
inc
movs
dec
ins
bswap
int
inc
bound
sub
xchg
jle
sub
in
or
cmp
xor
add
sub
ins
scas
sbb
push
(bad)
dec
fild
lea
jmp
add
sbb
ja
add
push
imul
iret
add
out
fsubr
arpl
mov
out
retf
lods
sahf
fcomp
test
pop
ror
mov
inc
push
dec
or
(bad)
mov
loope
mov
push
les
iret
in
(bad)
or
outs
mov
out
push
pop
pop
adc
adc
xor
jle
hlt
daa
or
and
or
call
bnd
inc
fidivr
fisubr
test
mov
xchg
nop
rcl
imul
in
or
das
jo
xchg
adc
imul
push
xadd
loop
push
xor
cmp
mov
xor
sar
add
imul
push
add
das
mov
fstp
hlt
sbb
xor
int
jecxz
mov
xchg
das
outs
ffreep
sub
in
inc
mov
mov
dec
mov
cmp
prefetch
movs
push
cli
xor
sub
add
aas
imul
inc
fsub
pop
in
js
adc
pop
enter
ret
and
pop
gs
push
adc
push
out
out
mov
(bad)
mov
sub
add
jnp
popa
clc
jnp
out
add
sub
lock
(bad)
mov
lods
xor
xor
adc
add
adc
jle
sbb
inc
pop
xchg
xchg
out
inc
adc
cmp
xchg
add
inc
pop
sub
or
ss
sub
cdq
fcom
sahf
xchg
cmp
pusha
dec
(bad)
and
sahf
mov
adc
inc
(bad)
cli
pop
cmp
sbb
repz
push
idiv
fcomp
lahf
pop
cmp
jecxz
loope
aad
mov
mov
retf
jbe
ret
imul
cmps
pushf
es
and
xchg
xchg
cmps
and
xchg
inc
jae
inc
xor
adc
lock
jmp
les
sahf
leave
std
dec
clc
push
into
cmp
push
bound
nop
rcr
xor
push
ja
mov
pop
clc
add
fcmovbe
lea
push
cmp
and
fist
movs
inc
mov
in
dec
push
mov
loope
in
pop
in
movs
inc
in
add
mul
das
pop
push
xor
repz
mov
pop
sahf
xor
mov
aaa
sub
inc
xchg
jp
push
fiadd
nop
mov
jnp
gs
shl
repnz
jl
adc
mov
fisttp
jns
xchg
repz
mov
imul
je
pop
mov
daa
fidiv
or
cmp
rcr
jecxz
or
cmp
sahf
stos
mov
int3
cld
mov
div
loope
loop
jmp
imul
scas
xchg
mov
or
fstp
outs
mov
shl
bound
(bad)
(bad)
mov
loop
inc
and
mov
outs
inc
out
iret
aad
push
pop
jbe
xchg
outs
(bad)
jle
out
pop
dec
bound
push
lods
jl
stos
fs
fldenv
mov
into
pop
fmul
test
stos
fadd
rol
leave
mov
fdivr
in
(bad)
jl
stc
pushf
mov
je
dec
cmp
pop
jbe
repz
sar
popf
out
dec
sbb
inc
lds
fdivr
mov
xchg
add
lea
add
xchg
out
(bad)
xchg
mov
dec
mov
sti
add
jmp
idiv
dec
imul
rol
pop
jnp
ss
add
inc
dec
xchg
pop
mov
pop
adc
leave
int3
jbe
sub
fild
cmp
mov
xor
retf
mov
sub
sbb
daa
pop
fsub
mov
adc
pop
jnp
xor
sbb
shl
push
push
or
jnp
mov
add
jp
sbb
sbb
inc
out
cmp
iret
xor
arpl
cmp
das
adc
push
mov
ss
fsubr
sahf
sahf
in
outs
sahf
and
sbb
(bad)
mov
rcr
sti
shl
out
dec
mov
pop
test
and
aaa
push
(bad)
shl
sbb
enter
or
pop
sbb
pop
cs
jle
add
ss
xlat
popa
test
inc
inc
rcl
add
fsub
sub
ss
sub
sbb
inc
xor
pop
push
(bad)
dec
sub
sub
jbe
jg
jbe
imul
push
push
fcomp
f2xm1
cmp
std
lods
inc
push
adc
into
test
mov
lahf
shr
push
mov
cwde
cmp
pop
and
cs
sar
lds
sub
xchg
mov
jb
fimul
cdq
mov
ins
push
test
push
int3
cdq
xlat
jo
dec
push
xchg
call
in
and
mov
test
(bad)
jecxz
push
ret
div
mov
in
xlat
into
jmp
mov
loopne
dec
dec
hlt
retf
xor
jecxz
daa
dec
iret
ror
cmps
mov
lock
div
rol
cmp
js
mov
mov
mov
cmc
mov
xchg
hlt
cmc
xor
push
adc
fisub
xchg
pushf
push
inc
sbb
sbb
addr16
mov
cs
xchg
fld
cvtsd2si
pop
outs
cwde
sbb
xor
ret
retf
ins
xor
mov
adc
or
adc
lods
leave
sbb
out
fucomip
cmps
out
xor
pop
nop
sub
lds
mov
in
cmp
fiadd
out
add
ret
mov
inc
jno
nop
xchg
and
nop
ret
sub
inc
data16
mov
sub
sar
cvttps2pi
or
stc
jnp
adc
mov
ins
stos
pop
test
cdq
and
and
jp
xor
inc
gs
jnp
jl
pusha
ret
sub
out
mov
jg
and
ficom
pop
and
lahf
cdq
adc
mov
add
retf
xchg
shl
lods
xchg
mov
jl
pop
outs
dec
daa
mov
xor
rol
lods
bound
fild
xchg
pop
lahf
push
and
das
dec
inc
push
jbe
ret
cmc
mov
inc
stos
or
jp
and
out
lods
push
or
dec
fidivr
and
mov
movs
pop
repnz
aas
cmc
daa
(bad)
nop
dec
mov
shr
rol
jecxz
dec
pop
or
lods
xchg
mov
xor
mov
leave
push
loopne
inc
pop
mov
or
add
out
jno
push
gs
xchg
push
inc
cmp
pop
xor
stos
sub
xchg
jg
movs
inc
stc
shl
inc
sbb
fnsave
or
push
fwait
call
aaa
mov
pop
sbb
cmp
inc
push
mov
sahf
adc
out
pop
adc
cmp
mov
adc
ins
sar
movs
outs
fisttp
imul
loope
cs
mov
add
pop
mov
inc
xor
loopne
cmc
int3
rol
pop
std
(bad)
sub
lahf
push
jmp
pop
dec
xchg
mov
arpl
xchg
push
jns
cld
xchg
out
xchg
mov
mov
jno
and
dec
dec
out
movs
cld
jne
xor
jge
mov
xchg
cld
cvttps2pi
daa
mov
cld
cmp
dec
gs
mov
mov
scas
mov
or
pop
leave
dec
pusha
add
cmp
add
mov
sub
cli
jge
movs
rcl
pop
cmp
sub
or
xlat
std
push
(bad)
icebp
scas
jmp
inc
adc
pop
gs
or
push
mov
aas
push
lahf
mov
imul
faddp
mov
xor
stc
mov
mov
ds
add
or
jb
popa
mov
das
daa
test
mov
test
mov
xchg
xchg
xor
aas
ror
ror
jmp
add
add
in
pop
dec
mov
cdq
dec
jbe
add
cmp
aad
(bad)
shl
lds
dec
(bad)
push
mov
sub
leave
jecxz
imul
aad
jmp
mov
outs
jecxz
ficomp
dec
xor
mov
sub
cmp
mov
xor
outs
call
addr16
mov
in
inc
jnp
sbb
and
push
mov
pop
fwait
cmp
or
pop
sub
(bad)
ins
xlat
fucom
xchg
sar
fcom
pop
sub
test
cmc
arpl
or
out
dec
jg
(bad)
aad
fs
and
imul
ret
adc
sub
rol
fisttp
add
add
cli
iret
adc
and
popf
fisub
jg
fmulp
mov
xchg
pop
dec
int
or
ss
loopne
xor
jns
xor
out
mov
xchg
adc
fist
ins
sub
xor
jb
test
or
hlt
cmp
fbstp
push
mov
add
(bad)
iret
fsubr
aad
adc
pushf
ins
mov
dec
aad
sub
ret
cmp
les
push
cmps
sbb
sbb
sub
lods
popf
cs
in
test
ror
test
mov
fld
cli
mov
pop
add
pop
shr
loop
add
jns
push
or
frstor
adc
sbb
or
test
addr16
test
dec
fnstenv
push
dec
sbb
in
mov
scas
pop
dec
movs
jg
cmc
mov
mov
clc
stos
inc
outs
push
pop
scas
xchg
sbb
push
out
push
mov
xchg
or
adc
push
test
and
push
fwait
add
push
mov
mov
in
dec
imul
shl
pop
and
test
pop
test
fimul
call
xchg
adc
cwde
pusha
inc
push
dec
ror
retf
sbb
adc
and
imul
div
cmp
fild
rcl
(bad)
push
sbb
add
outs
addr16
push
inc
gs
inc
dec
xlat
mov
push
push
in
mov
sub
push
aas
shl
js
sbb
inc
sub
fs
push
repnz
int3
pop
cmps
adc
jb
add
ror
mov
pop
sar
gs
gs
mov
mov
inc
sbb
xchg
or
fist
(bad)
ret
data16
mov
loopne
mov
jmp
imul
stos
xchg
mov
xor
pop
lea
(bad)
ds
shl
ror
fimul
fcomp
pop
sti
xor
jbe
lea
push
xchg
(bad)
xor
out
into
int3
shr
sub
icebp
sahf
pushf
ins
sar
mov
sbb
loope
cdq
mov
pop
add
cmp
lock
pop
mov
fdivr
adc
mov
xchg
adc
sub
(bad)
aad
jb
sbb
jns
repz
push
ss
cmp
test
mov
xchg
jae
jo
scas
mov
pop
pop
cmp
mov
ins
xchg
cmp
mov
fisubr
jecxz
inc
in
lock
xor
xlat
cmp
sub
fadd
lods
xchg
add
add
int
dec
push
inc
ret
retf
inc
int3
ret
aam
or
ret
scas
ror
fsub
pop
js
push
dec
test
stc
ja
xchg
jmp
shl
mov
dec
pop
idiv
xchg
test
xchg
sbb
repnz
loop
jecxz
mov
cmp
call
js
mov
data16
ins
push
jmp
xchg
sbb
pop
mov
dec
inc
add
jl
not
mov
test
fbstp
fdivr
mov
jl
cmp
add
stos
arpl
mov
fdecstp
les
scas
jbe
sub
in
dec
call
mov
adc
ret
xlat
pop
mov
rcr
call
inc
pop
xchg
shl
sub
pop
addr16
xchg
js
mov
dec
mov
nop
imul
and
dec
sub
lods
pop
mov
pop
nop
adc
mov
push
push
mov
push
lock
dec
in
and
lods
pop
jno
mov
push
mov
out
addr16
pop
and
add
inc
into
cmps
cdq
adc
adc
or
add
es
push
jnp
sbb
cwde
pop
repz
rcr
bound
inc
out
test
add
xchg
dec
in
and
rol
push
movs
xchg
ret
sbb
xor
(bad)
leave
rol
jg
dec
ja
xchg
ror
(bad)
and
(bad)
add
outs
cwde
xchg
adc
jns
mov
sub
adc
into
test
lock
int3
sti
jns
mov
(bad)
std
inc
pop
mov
prefetcht0
lock
jo
or
inc
pop
(bad)
sbb
pop
pop
mov
jmp
sti
or
daa
les
xor
retf
adc
and
ret
in
or
outs
pop
pop
add
std
call
and
sub
jmp
pop
sbb
aaa
jmp
jg
sub
imul
shr
(bad)
leave
call
jmp
mov
inc
jo
add
inc
sub
push
inc
in
jp
nop
adc
mov
imul
and
add
inc
mov
mov
imul
push
adc
adc
pusha
jge
jns
test
or
aas
mov
bound
fldenv
push
inc
cdq
push
pop
jo
fdivr
stos
push
inc
sahf
add
push
xchg
or
dec
neg
sub
sub
stos
out
enter
clc
pusha
pop
(bad)
and
push
addr16
nop
iret
mov
rcr
idiv
xchg
mov
fsubr
lahf
add
repnz
xchg
loope
pop
mov
fs
xlat
fs
cmps
lods
xlat
outs
test
popa
ror
repz
pop
xchg
ins
jne
add
rol
sbb
sar
test
xor
mov
inc
and
jmp
mov
mov
mov
push
add
rcl
push
cmps
xchg
dec
js
in
sub
rol
leave
ret
ss
push
fwait
pop
or
int
add
adc
arpl
sbb
xlat
int
inc
inc
in
xlat
(bad)
sbb
sub
inc
outs
pop
sub
xchg
pushf
mov
xchg
ja
repnz
adc
jl
dec
mov
jmp
and
push
xor
jno
jcxz
push
addr16
stos
sbb
adc
loop
jg
or
shl
add
or
or
xor
test
or
ret
jge
repz
xor
outs
inc
push
rcl
fwait
xor
jnp
aaa
je
dec
xlat
out
inc
scas
ds
sub
xchg
xlat
lods
and
sysexit
ja
inc
jmp
in
das
rcl
and
(bad)
into
fstp
add
push
mov
adc
retf
sub
popa
adc
bound
jge
stc
sub
dec
test
push
cli
loop
es
mov
fsub
stos
dec
in
xchg
mov
cs
cld
inc
fdiv
pop
int
pop
scas
add
dec
ret
data16
fistp
shl
adc
cmp
xchg
inc
push
std
pop
iret
in
jae
lds
stc
sti
xchg
mov
mov
mov
or
ins
xchg
mov
or
add
call
mov
fdiv
test
xchg
sahf
repz
dec
cmp
scas
stos
pop
hlt
xchg
imul
and
lea
lods
out
aas
ss
jl
jae
fs
inc
sub
push
dec
push
push
mov
in
and
add
inc
push
xor
retf
jp
shl
and
or
shl
icebp
in
dec
adc
push
mov
inc
cmp
fidivr
cmp
cli
in
icebp
jmp
mov
loop
hlt
int
push
add
and
push
int
ja
shr
pop
pusha
pop
mov
pop
ret
iret
mov
dec
pop
outs
(bad)
lahf
cwde
sbb
or
jl
je
ficom
cmps
xlat
call
lods
push
mov
test
mov
das
sbb
sbb
mov
jb
sbb
sti
pusha
movs
and
fnstsw
ret
outs
xchg
ss
xor
adc
ret
mov
adc
outs
mov
sahf
dec
mov
fninit
loope
add
or
movs
pop
pusha
sub
aaa
sbb
dec
xor
inc
dec
dec
enter
adc
or
out
int3
test
(bad)
sub
lds
leave
xor
dec
ds
sub
pop
sub
mov
fild
dec
(bad)
outs
jmp
hlt
push
pop
adc
or
jns
pop
push
mov
cmps
cmp
aaa
aas
inc
mov
sti
fld
push
ins
xchg
std
scas
icebp
cmp
and
dec
pusha
lock
das
mov
test
hlt
mov
inc
cmp
push
rep
xor
ret
fcmovne
inc
ds
or
ds
adc
dec
jp
retf
sbb
hlt
and
jo
(bad)
jbe
aam
pop
push
cmp
mov
inc
jg
idiv
imul
cwde
aad
lds
or
push
pushf
(bad)
inc
mov
cwde
pop
xchg
stos
loope
in
jle
xlat
jecxz
push
(bad)
ins
sub
(bad)
pop
outs
loopne
std
in
add
daa
popf
jmp
cmp
cmp
jne
ror
xchg
mov
arpl
in
cld
sub
jmp
and
sub
leave
daa
adc
call
mov
ret
mov
inc
daa
repz
jnp
repz
pop
push
push
lds
or
test
movs
outs
mov
sahf
fidivr
mov
les
add
push
ss
ficomp
into
es
jp
inc
xchg
xchg
bound
push
pop
aaa
ins
mov
jecxz
push
and
mov
xchg
xchg
iret
popa
cli
or
mov
test
sub
add
push
mov
mov
and
pop
scas
not
cmps
xchg
sub
cmp
cmp
aam
frstor
push
xchg
ror
xor
dec
mov
js
mov
rcr
jo
sub
jge
jl
das
xchg
cmps
adc
repnz
adc
adc
adc
int
adc
std
scas
aaa
mov
inc
or
add
imul
punpckhwd
ret
or
inc
pushf
pop
lea
mov
inc
jmp
movs
or
add
push
or
lods
inc
not
mov
xlat
cld
loope
or
mov
jbe
jo
in
add
jne
dec
push
mov
pop
xchg
push
add
push
mov
pop
data16
jge
sub
mov
or
dec
xlat
mov
outs
movs
sbb
icebp
add
loope
dec
mov
lods
jmp
and
adc
sbb
(bad)
in
jne
xchg
mov
sar
jmp
dec
(bad)
or
imul
pop
scas
lods
movs
(bad)
outs
jae
mov
sahf
fwait
gs
aad
pop
push
jge
sub
and
lds
mov
sub
std
adc
xchg
stos
aaa
xchg
movq
cmps
adc
add
sub
repz
aad
or
sti
imul
or
cmps
(bad)
(bad)
test
call
sub
sbb
mov
(bad)
adc
aam
cmp
dec
xor
push
jb
adc
xchg
or
fdivr
jp
pop
outs
mov
push
int3
repz
inc
jecxz
stos
jmp
push
shr
hlt
pusha
mov
pop
std
jmp
push
shl
pop
mov
and
mov
scas
pop
pop
in
push
mov
xlat
pop
fst
sub
mov
mov
and
jecxz
lds
mov
aad
pop
adc
and
xchg
add
sbb
add
jnp
fwait
xlat
mov
sub
xchg
ror
pop
(bad)
fmul
out
add
dec
pop
cmp
daa
inc
mov
out
jp
add
adc
shl
mov
and
sbb
dec
rcr
jne
and
loopne
jns
xor
adc
sbb
scas
je
rdmsr
jne
lods
dec
mov
xchg
inc
test
sbb
dec
std
dec
mov
xchg
ins
iret
sbb
bound
mov
shr
dec
push
xchg
dec
(bad)
inc
data16
aaa
gs
mov
dec
out
mov
mov
adc
or
push
std
fcos
rcl
xor
int
iret
rcr
adc
das
inc
(bad)
push
loopne
scas
cmc
clc
test
cmc
mov
les
lahf
cmp
imul
pop
outs
loope
(bad)
dec
stos
mov
adc
cmp
sti
fcomp
(bad)
aaa
int
mov
dec
inc
add
inc
push
fild
test
aas
stc
or
mov
xor
dec
adc
retf
sub
std
push
cmc
pop
lds
mov
lea
cmps
adc
mov
push
or
xor
pop
aaa
mov
cld
or
in
ss
dec
sub
sub
xchg
int3
out
(bad)
fnstenv
push
cmp
ja
shl
out
push
sbb
dec
call
xchg
fs
shr
push
fsubr
jno
imul
adc
enter
jl
and
pop
pushf
and
sbb
(bad)
xchg
sub
sahf
cmp
into
dec
xchg
fisttp
test
mov
cmp
icebp
(bad)
arpl
js
test
mov
jle
lea
mov
das
std
call
add
xchg
jb
inc
or
mov
mov
shl
loopne
int
xchg
test
cmp
dec
test
jb
inc
test
xor
mov
pop
sub
mov
and
sub
out
ss
sbb
movs
and
sub
repnz
jl
add
es
xor
push
scas
repz
add
mov
jae
in
and
inc
and
pop
xchg
mov
mov
loope
adc
mov
xchg
jns
icebp
xor
push
lods
inc
in
outs
xchg
jmp
xchg
sub
xor
aad
pop
cmp
sbb
dec
int3
sbb
pushf
xchg
pusha
dec
mov
xchg
push
test
ret
jmp
seta
dec
jl
cld
adc
push
sbb
retf
out
jge
out
jne
(bad)
call
cld
lahf
mov
(bad)
fcomip
(bad)
mov
pop
xchg
inc
ins
scas
idiv
lahf
loopne
pop
(bad)
inc
adc
hlt
fsub
add
mov
jge
cmp
dec
not
jno
mov
(bad)
into
aam
scas
push
icebp
adc
push
mul
jmp
push
pusha
rol
add
jns
rcr
fs
enter
jg
lea
pop
faddp
push
lea
mov
jns
in
in
push
sbb
pushf
test
arpl
(bad)
cld
mov
mov
sbb
cmc
pop
ret
mov
or
mov
pop
add
fist
repz
ins
ja
xchg
pop
mov
pop
scas
movs
jnp
push
xchg
xlat
sbb
mov
(bad)
pop
pop
and
cdq
xchg
jg
sub
dec
iret
push
sbb
sub
mov
push
pop
inc
aam
xor
mov
aad
cmp
stc
popf
das
xchg
add
push
out
in
push
aas
ja
and
or
mov
xor
adc
or
xchg
mov
adc
xchg
out
push
retf
adc
adc
ds
scas
fwait
or
(bad)
icebp
enter
and
div
mov
mov
push
scas
add
outs
xor
dec
xchg
adc
std
inc
xchg
test
clc
sar
cmp
adc
jns
xor
ins
mov
sbb
retf
lods
lds
push
retf
(bad)
lock
xchg
icebp
cmps
push
sub
pop
cmp
add
xor
mov
fld
push
sub
or
and
js
daa
popf
ins
int3
xchg
mov
xchg
cmp
sub
xor
xor
leave
xlat
mov
(bad)
out
dec
mov
popf
test
push
stos
dec
jnp
pop
jmp
out
inc
je
add
ja
or
or
xor
psadbw
retf
add
cmp
pusha
sub
mov
push
pop
fbld
in
jle
lods
inc
mov
push
fsubr
std
mov
inc
test
jp
or
bound
push
lock
mov
xor
int
adc
fcmovbe
sub
cld
cmc
clc
mov
xor
lds
jo
sub
mov
jo
in
pop
inc
mov
mov
rcl
sbb
shl
sub
sti
out
jp
in
mov
pop
fwait
xchg
dec
(bad)
mov
ins
fisttp
xor
mov
ror
pand
jbe
adc
mov
scas
dec
int3
pop
push
outs
sbb
jp
int3
shl
shr
ss
adc
ret
push
test
and
gs
ins
popa
into
cmp
repnz
ins
mov
pop
fcomp
es
push
mov
mov
(bad)
in
adc
sub
xchg
sbb
pop
mov
test
fsubr
jno
test
mov
arpl
jo
cmp
ds
sbb
mov
ret
push
(bad)
push
loopne
pop
stos
(bad)
cmp
jecxz
jb
xchg
sbb
add
jle
pop
inc
jnp
lods
or
mov
clc
inc
and
mov
inc
inc
pop
xchg
fmul
push
mov
jb
push
lea
inc
(bad)
mov
std
mov
ds
sub
ret
inc
push
pop
rcr
xor
retf
and
hlt
jg
sbb
stc
sbb
inc
pop
into
add
ret
inc
jnp
jns
jmp
cmp
scas
inc
in
inc
push
xchg
inc
mov
mov
pop
dec
sub
leave
pop
loope
gs
cmps
(bad)
dec
dec
std
daa
int3
mov
cmp
adc
jmp
scas
int3
adc
(bad)
popa
jnp
sti
idiv
pop
rol
jb
aam
add
xor
dec
fbld
fimul
cmps
pop
(bad)
ins
jg
inc
repz
sahf
into
idiv
fldenv
mov
jmp
sub
jbe
fwait
mov
fmul
inc
hlt
push
mov
shl
push
xchg
cmps
or
mov
rcr
popf
jo
and
sbb
jbe
scas
push
fwait
or
in
mov
xchg
mov
ins
cs
jne
cs
repz
sub
push
cmps
(bad)
(bad)
outs
rol
push
fsub
jle
cmp
test
test
repnz
dec
movs
mov
mov
test
mov
daa
ret
push
(bad)
jmp
push
fsub
popa
cld
jae
cbw
data16
and
pop
xchg
sbb
in
mov
(bad)
and
xor
fldcw
test
add
sub
push
pop
movs
dec
and
mov
in
cs
shr
(bad)
(bad)
and
or
push
mov
jmp
repnz
(bad)
aad
js
stos
movs
mov
jecxz
int3
and
pop
sti
dec
lods
pop
scas
cmp
jno
repz
jg
dec
fwait
xor
(bad)
pop
lods
bound
cmps
ins
(bad)
sbb
add
ins
jbe
fcmovnbe
xchg
mov
cmp
mov
lods
add
jnp
sub
dec
pop
cwde
retf
repnz
jb
popa
out
sub
fs
mov
bound
arpl
or
je
sbb
mov
pop
adc
sar
pop
call
loopne
xchg
mov
and
mov
inc
in
mov
lahf
mov
stos
add
adc
addr16
xor
je
dec
rcr
and
jns
add
xor
pop
js
call
xchg
inc
sub
lods
ds
add
dec
pop
pop
out
xchg
sub
xchg
repz
iret
nop
dec
aas
pop
outs
push
(bad)
iret
mov
sbb
inc
pop
sub
push
mov
out
bound
add
sbb
out
mov
lods
pop
mov
or
imul
je
es
xchg
cs
arpl
(bad)
dec
xchg
xchg
push
push
ins
dec
rcl
fwait
jns
adc
and
add
mov
pop
inc
popf
sbb
cmp
push
inc
push
outs
push
dec
mov
mov
div
movs
outs
sub
pop
push
xor
call
xchg
add
dec
xchg
popf
test
imul
test
push
inc
jge
adc
aad
cmp
inc
(bad)
mov
fwait
pop
loope
or
repz
cmp
sub
ins
and
sub
add
mov
pop
mov
loope
xchg
xchg
lods
inc
iret
call
adc
aaa
adc
and
mov
jl
gs
aas
cmp
in
and
xor
mov
int3
jp
mov
aaa
test
rcr
pop
out
jae
(bad)
pop
xchg
dec
test
test
xchg
mov
jge
fisubr
cmp
pop
mov
mov
add
push
pop
sar
mov
push
repz
or
fidivr
inc
test
jo
xchg
retf
dec
mov
adc
enter
sub
adc
int
or
call
mov
sub
inc
xor
pop
test
xchg
outs
test
mov
xlat
cmp
adc
jnp
shl
dec
test
jnp
dec
sbb
sbb
dec
scas
(bad)
out
mov
mov
jl
cmp
(bad)
cmc
movs
mov
loope
gs
adc
adc
std
jle
les
inc
mov
aad
fidivr
rcl
xchg
call
cld
in
and
cmps
lahf
ficom
loop
aas
push
leave
fnstcw
int
fisttp
push
pop
add
push
mov
sub
dec
sar
and
jae
cmp
in
jmp
into
pop
rol
pop
fbld
mov
icebp
jae
lods
push
and
ja
bound
ror
out
shl
pop
jbe
sub
cmp
push
mov
movs
adc
out
mov
mov
fwait
adc
mov
shl
pop
fiadd
pop
shr
push
repz
pop
sub
hlt
sub
(bad)
xlat
or
sbb
cli
mov
push
pop
mov
or
sub
movs
jbe
mov
out
fsubp
push
and
cli
jae
ins
lods
enter
mov
push
je
xchg
sub
jmp
cmp
jb
jbe
js
adc
inc
sub
jg
mov
jno
in
xabort
retf
cs
aad
jae
aas
add
(bad)
push
mov
in
pop
mov
popf
xchg
ins
or
adc
cli
test
push
xor
pop
pop
cs
nop
pop
push
jb
fstp
(bad)
sub
(bad)
cmp
xor
movs
and
sub
or
add
seta
fcomp
inc
xchg
je
imul
jae
inc
sar
sbb
fwait
ret
push
hlt
jae
das
add
mov
pop
pop
or
test
rcl
mov
add
(bad)
and
pop
mov
or
je
es
push
jmp
mov
push
sub
fnsave
test
call
sub
test
popf
or
cwde
inc
es
mov
aad
and
push
in
aad
push
push
repz
imul
cmp
push
loope
fist
mov
pop
adc
sbb
mov
in
pop
xchg
adc
paddb
or
and
bswap
mov
movs
jmp
popf
pop
cmp
daa
cmp
sub
stc
mov
cld
dec
repz
inc
fist
fwait
popf
call
cmps
inc
jb
xor
fwait
xchg
mov
or
jmp
adc
mov
inc
pop
test
sub
inc
ds
xchg
jge
xchg
cmp
or
je
dec
mov
ret
sar
mov
pop
or
mov
loopne
lods
ins
and
retf
add
and
xor
mov
mov
mov
aad
or
jne
dec
mov
ffreep
mov
pop
dec
sbb
fs
dec
ins
fs
fsubr
cmps
repz
mov
imul
jmp
mov
div
js
fisub
push
add
add
imul
xor
rcr
cmp
mov
scas
push
mov
jbe
jae
jmp
bound
push
inc
add
cmps
(bad)
addr16
sbb
mov
adc
mov
mov
mov
iret
leave
call
jo
and
rol
std
in
dec
add
fwait
imul
ins
adc
aam
hlt
in
sub
jmp
outs
int3
jg
in
pushf
jns
xchg
push
add
cmps
sbb
mov
pop
cmps
or
pusha
cwde
cdq
fbld
add
call
pop
jb
adc
aad
std
mov
mov
mov
xchg
dec
inc
sti
cmp
and
shr
stc
outs
jns
enter
mov
jmp
mov
jecxz
sahf
pop
das
cmp
mov
adc
les
inc
fsub
vunpckhps
icebp
icebp
cmp
or
stc
mov
(bad)
clc
sub
mov
dec
or
imul
jne
cld
imul
nop
or
lahf
arpl
fidivr
pop
jns
xor
xchg
jae
jnp
inc
xor
push
test
cwde
into
jb
loop
push
fld
aad
in
ror
lds
adc
pop
push
dec
mov
or
je
mov
jmp
sub
out
sub
add
push
pusha
fs
push
jecxz
fcmovu
mov
ins
(bad)
sub
daa
aaa
or
daa
addr16
dec
cwde
cmc
out
adc
mov
mov
repnz
retf
adc
push
or
and
jnp
test
aam
cmps
lock
add
mov
pop
dec
imul
inc
sub
pop
popa
int
mov
scas
nop
jp
cmp
push
sbb
dec
jmp
hlt
imul
cs
pusha
mov
or
mov
out
into
or
pushf
adc
jne
fdiv
add
xchg
popf
fdivrp
sub
jb
add
and
out
pop
das
push
mov
arpl
in
sbb
jmp
mov
ss
test
jb
dec
adc
jl
jmp
mov
lds
retf
mov
pop
(bad)
mov
bound
(bad)
mov
cmp
mov
pop
into
push
retf
loop
or
cmps
sbb
call
stos
cmps
mov
push
stos
adc
fadd
leave
sub
rcl
cmp
iret
lock
retf
pusha
jmp
sar
push
imul
rol
fs
(bad)
mov
mov
ficomp
(bad)
sub
scas
in
add
cmp
dec
mov
(bad)
fiadd
jae
or
mov
jb
scas
test
add
sti
ror
add
in
or
or
and
sahf
loopne
pop
loop
shl
push
or
push
imul
pusha
lods
dec
(bad)
xchg
xchg
pop
and
sub
sub
mov
leave
dec
pop
pop
bound
addr16
sub
(bad)
push
cmp
sub
pushf
cmp
imul
mov
nop
retf
add
mov
and
inc
xor
(bad)
outs
outs
sub
inc
repz
ins
pusha
sbb
lea
sub
xlat
dec
lock
cmc
inc
mov
hlt
aad
(bad)
jbe
mov
cmc
xlat
stc
xchg
retf
clc
inc
cdq
aad
pop
lods
(bad)
inc
sbb
lds
sahf
jp
(bad)
out
sub
ficomp
mov
sbb
pop
jne
outs
pop
cld
test
inc
inc
mov
test
add
cmp
xor
lods
cli
dec
fiadd
rcl
adc
out
add
sti
test
ins
fist
arpl
dec
scas
les
pusha
pop
sub
sub
jmp
xor
xlat
in
mov
jle
(bad)
fnstenv
sub
adc
lods
cmp
dec
add
cs
add
loopne
xor
add
sub
jmp
xchg
mov
dec
push
jg
in
ror
dec
ins
int
mov
or
movs
mov
out
ror
adc
test
adc
fisub
loop
inc
xor
xor
fcomp
push
das
dec
sub
pop
sbb
xchg
push
(bad)
inc
add
jge
jg
cmps
ret
ret
mov
add
inc
movs
mov
inc
mov
jle
xchg
imul
ins
adc
cdq
(bad)
cmp
fstp
xchg
pusha
mov
clc
push
jp
mov
add
push
lods
shr
and
retf
jne
dec
cmp
leave
or
push
out
pop
lds
inc
sbb
cmp
fwait
bound
jae
jmp
dec
jmp
inc
and
out
bound
jmp
test
dec
cmp
sbb
ror
rol
or
inc
jno
add
lods
dec
das
stos
jno
addr16
mov
dec
(bad)
jb
push
sti
sti
nop
cmp
sbb
mov
(bad)
bound
ret
or
sub
dec
add
into
or
jae
into
repz
xor
call
add
pop
push
sub
add
aam
jmp
in
or
pop
push
data16
jl
or
adc
jmp
sti
mov
(bad)
mov
outs
pop
pop
and
aaa
jo
sbb
dec
(bad)
push
ja
pop
add
push
mov
mov
sub
lock
adc
push
mov
xchg
(bad)
pop
jmp
push
sbb
xchg
and
mov
push
dec
enter
fdivr
shl
sub
movs
sbb
scas
aad
dec
(bad)
(bad)
or
jl
adc
in
jae
mov
and
inc
cmp
ja
jbe
xchg
mov
call
js
icebp
jb
in
frstor
and
xor
sbb
call
mov
pop
int3
jno
(bad)
mov
rcr
and
fldenv
push
sub
pop
add
imul
sahf
pop
adc
(bad)
(bad)
mov
fnstcw
cs
pop
les
inc
jmp
scas
xlat
inc
cli
pop
dec
mov
sub
jge
fs
inc
cmp
mov
mov
jno
push
cmp
out
jnp
xchg
sub
push
add
mov
and
fcomp
shl
cmp
xchg
loope
hlt
inc
push
sbb
or
mov
pop
push
add
xchg
cmp
mov
mov
repnz
push
fucomp
pop
scas
call
rcr
movs
jno
cmc
arpl
lods
fwait
outs
je
xchg
inc
std
mov
ror
addr16
inc
(bad)
cmp
cmp
(bad)
mov
out
scas
ins
(bad)
lock
adc
add
or
mov
or
sahf
retf
jbe
(bad)
fidiv
sbb
aas
mov
lock
xor
fcomp
pop
cmc
ja
dec
sbb
leave
jnp
cmp
mov
aam
inc
daa
int3
push
repnz
xchg
jmp
mov
add
jl
jg
mov
fistp
out
mov
scas
mov
pop
sub
mov
and
pusha
loopne
pop
cmp
call
mov
mov
xchg
sbb
sub
out
inc
dec
dec
xchg
cli
mov
imul
xor
cld
out
aaa
pop
pusha
sar
pop
push
data16
and
jb
(bad)
std
sub
and
scas
test
pop
fist
es
xor
mov
sub
cmp
add
xchg
rcl
ins
and
sbb
and
repnz
push
outs
dec
and
cmp
aaa
cs
xor
jge
jne
inc
(bad)
ss
xlat
iret
sub
mov
inc
jg
jo
push
arpl
fwait
mov
inc
shl
mov
mov
arpl
jae
mov
push
ins
fs
xchg
push
xor
pop
call
xchg
xchg
int3
lea
sbb
sub
or
xlat
gs
repnz
mov
je
inc
jmp
jnp
sub
outs
das
addr16
jg
mov
outs
xor
jne
xchg
pop
mov
ins
adc
frstor
mov
fiadd
and
aam
iret
into
outs
test
ins
and
arpl
cmp
je
add
aaa
mov
popf
loope
jmp
mov
test
(bad)
xor
pavgw
aas
xlat
dec
dec
sub
or
push
cmp
sahf
sahf
lock
sbb
addr16
retf
hlt
(bad)
xor
push
and
cmps
loope
mov
adc
pop
add
enter
push
fadd
push
ficomp
sub
pop
movs
mov
cld
and
sbb
es
jge
arpl
or
pop
pop
and
arpl
fcmovbe
cwde
inc
xchg
ins
or
sub
dec
loope
jmp
jmp
dec
xor
jbe
jne
mov
fld
add
cmps
xor
jns
cmp
mov
int
in
aaa
std
push
adc
inc
add
cli
or
repnz
leave
jnp
dec
ds
mov
imul
mov
mov
sub
mov
daa
int3
or
arpl
in
in
mov
and
std
jno
out
rcr
push
loop
mov
cwde
push
jbe
cmc
enter
add
dec
test
mov
mov
test
enter
add
out
mov
das
inc
inc
push
mov
jl
push
loope
hlt
dec
pop
arpl
cmp
pusha
lods
adc
movs
xchg
inc
jle
fisttp
out
jl
fdiv
inc
dec
fstp
mov
les
adc
cld
mov
xlat
imul
ret
loop
jae
call
out
loopne
out
call
xor
sub
rcl
in
(bad)
in
ret
int3
icebp
dec
gs
fdiv
pop
adc
idiv
hlt
gs
cld
cmc
mov
jl
and
mov
mov
pushf
xchg
and
or
mov
and
scas
imul
outs
xor
jge
js
or
cmp
pop
push
cmp
cmp
cmc
push
mov
cli
and
out
xor
shl
cmps
popf
jae
jo
(bad)
cmp
retf
gs
pop
push
fs
dec
jle
jns
pop
jo
pop
ret
pop
push
dec
les
pushf
jmp
adc
loop
push
mov
push
adc
xor
retf
mov
(bad)
and
dec
(bad)
call
int
push
sbb
ss
shl
(bad)
mov
push
inc
dec
pushf
out
and
scas
xchg
jns
inc
sbb
mov
cmc
xchg
clc
push
and
shl
fs
xchg
mov
xor
rol
sub
push
bound
xor
ss
call
out
gs
js
out
es
fldz
(bad)
retf
pop
adc
or
frstor
mov
nop
aas
cmc
jo
sub
inc
loopne
addr16
or
int
jnp
xor
call
xchg
or
mov
jge
(bad)
imul
ret
jg
cmp
and
dec
push
mov
jmp
call
(bad)
sub
int
lods
pop
xchg
add
jmp
retf
push
mov
mov
sub
pusha
mov
clc
leave
dec
sahf
adc
and
jmp
jmp
add
xor
call
ins
xchg
push
sub
movs
or
dec
add
adc
test
sub
loop
call
sbb
scas
xor
mov
dec
aad
pop
(bad)
jnp
and
das
adc
adc
leave
aas
dec
fwait
jg
(bad)
push
add
adc
and
mov
dec
sahf
call
leave
inc
push
ins
inc
jmp
jno
mov
cs
jno
repz
loop
loope
sar
pop
nop
jbe
xor
add
push
cmp
pop
enter
inc
outs
xchg
leave
adc
les
pop
addr16
jae
jo
rcr
add
hlt
retf
cmp
bound
lds
inc
mov
pop
mov
inc
cmp
loope
sbb
adc
xor
jb
adc
popf
hlt
out
push
mov
mov
mov
and
pop
lahf
and
mov
push
mov
in
cld
in
out
pop
test
jg
in
push
jo
jbe
or
or
call
and
call
dec
push
mov
push
sub
in
clc
jmp
mov
lods
and
push
jb
jbe
push
adc
(bad)
call
ins
lods
movs
mov
fimul
lods
xor
push
sbb
loop
mov
xor
inc
or
stos
gs
sub
or
adc
nop
mov
ret
fimul
sbb
lock
repz
sbb
and
cmp
(bad)
push
xor
movs
mov
adc
push
(bad)
pop
test
lods
dec
(bad)
add
sub
jae
stos
xchg
mov
adc
pushf
pop
xor
stos
or
loope
movs
push
mov
cmc
cmp
adc
add
in
inc
pop
and
xor
movlps
inc
sub
mov
mov
call
mov
daa
movs
neg
inc
rol
sub
retf
adc
xor
jp
cwde
cmp
pop
addr16
cmps
push
div
(bad)
rep
in
xor
in
retf
dec
shl
retf
cmp
push
jno
mov
repnz
mov
push
mov
mov
inc
xor
cmp
cmps
fstp
stos
mov
xchg
sbb
outs
and
leave
push
lea
int
mov
xor
retf
sbb
mov
and
add
jne
add
jp
fcom
movs
pop
jmp
sbb
icebp
je
(bad)
aaa
and
xor
(bad)
loopne
je
ret
inc
push
mov
mov
xchg
push
sar
cmp
pop
mov
xchg
test
lds
movs
outs
push
push
sub
push
or
mov
aaa
cmp
in
mov
jecxz
mov
pop
xchg
jns
xchg
movs
xlat
fstp
sti
jne
xrelease
add
mov
mov
mov
push
add
in
cmps
nop
add
adc
sbb
jmp
sbb
fnstenv
fild
test
outs
punpcklwd
imul
dec
xor
and
imul
jle
(bad)
lds
test
lahf
adc
into
(bad)
dec
outs
movs
je
ss
sub
xlat
and
ud2
out
into
adc
add
retf
scas
cpuid
test
cmp
or
imul
in
mov
lds
mov
xchg
sbb
cmps
and
jnp
xor
cmp
xor
vmovdqa
stos
push
outs
and
bound
cld
pop
mov
sub
cmps
ja
push
push
(bad)
cwde
mov
out
aaa
leave
inc
adc
dec
add
dec
fcmovnbe
jle
daa
mov
std
cmps
inc
fcmovu
add
push
mov
xchg
test
or
rcr
jmp
push
pop
(bad)
sti
add
shl
out
and
pop
ins
xchg
dec
pusha
xchg
stc
pop
sub
and
data16
rcr
shr
data16
push
loope
and
jp
int3
out
jbe
and
popf
(bad)
cli
(bad)
and
push
mov
pushf
popf
pushf
mov
dec
mov
dec
push
shl
imul
imul
sbb
imul
and
imul
sbb
sub
pop
shl
dec
das
in
std
loop
inc
std
pop
scas
jne
push
sub
aaa
loope
or
retf
add
enter
cwde
out
js
push
push
jmp
nop
or
sub
cli
inc
cmova
int3
lds
cmps
mov
dec
int
dec
dec
mov
call
mov
movs
jg
push
cli
fnsave
test
jp
mov
or
or
test
dec
add
loopne
ss
mov
shl
pusha
jmp
and
loop
(bad)
in
push
hlt
push
xor
sub
arpl
pop
cmc
stos
fldenv
test
cld
xor
in
in
xchg
test
(bad)
call
jbe
push
leave
inc
stc
inc
pop
jb
cmp
aas
imul
cmps
mov
mov
fistp
(bad)
int
nop
adc
inc
push
or
ins
or
mov
cmp
jne
fcom
sbb
sub
ss
repnz
xor
not
sub
sbb
mov
xchg
pop
loop
add
push
cld
pop
sbb
repz
mov
out
jmp
cmps
push
jp
aas
retf
add
add
dec
jnp
cmps
sbb
popf
and
or
(bad)
retf
xchg
xchg
outs
fwait
sbb
jne
adc
mov
dec
pop
jb
jg
cmp
lods
add
repz
test
inc
push
push
bound
sahf
or
test
ins
sahf
inc
les
mov
push
mov
inc
and
ins
sub
test
and
ret
push
xor
sbb
movs
dec
repz
cld
inc
cmp
out
sub
inc
jne
into
sbb
inc
icebp
mov
(bad)
mov
into
mov
or
mov
mov
xchg
movs
loop
ficom
out
adc
mov
rcr
push
push
sub
sub
sahf
cdq
movs
mov
imul
jmp
in
xor
scas
dec
xchg
test
cmp
aaa
or
inc
inc
sub
in
fstp
sub
enter
mov
push
out
push
(bad)
xor
test
mov
mov
hlt
xor
movs
stos
push
pop
jle
add
inc
push
jge
jno
dec
cld
fldenv
inc
pop
inc
ret
in
sub
jmp
pusha
loop
lahf
jmp
loop
shr
mov
into
dec
lds
xchg
fsub
mov
push
jecxz
scas
inc
mov
out
aaa
loopne
or
std
or
adc
mov
pop
out
stc
pop
nop
xchg
push
cmp
das
add
call
xor
push
scas
sub
fldenv
lods
aaa
loop
add
pop
(bad)
out
loope
imul
jmp
lock
inc
lods
push
popa
mov
inc
push
mov
out
shl
mov
mov
outs
js
fdivr
dec
popf
mov
fst
jle
inc
pop
pop
fnop
retf
(bad)
ds
or
shr
sbb
or
lods
dec
xlat
or
nop
in
jp
iret
and
sub
jne
fisttp
dec
add
int
(bad)
pop
leave
sbb
pop
out
pop
add
pop
fucomip
in
cmp
push
xlat
fist
adc
stos
lds
mov
fdivr
xchg
cli
ss
cmp
ror
cld
fcom
jg
aad
cmp
cmp
fmul
mov
xchg
jbe
ins
jo
jo
cdq
push
adc
pop
sub
and
mov
xor
jmp
and
lods
inc
(bad)
add
pop
cmp
ret
lds
in
cmps
(bad)
sbb
in
sub
push
mov
inc
das
dec
dec
sub
sti
jp
sbb
jae
repnz
(bad)
fidivr
fmul
stos
push
dec
mov
xchg
imul
xchg
fcmovne
adc
les
and
dec
retf
sar
mov
push
pop
ins
lea
je
outs
mov
mov
stos
outs
(bad)
ss
aad
xchg
xchg
outs
inc
jnp
es
idiv
iret
mov
(bad)
gs
or
mov
xchg
out
cwde
cmc
and
ret
jge
in
add
lea
or
jge
mov
pop
psubw
retf
mov
jp
les
push
dec
sbb
std
mov
pop
stos
pop
lock
add
sbb
les
std
and
push
sub
cmp
sub
(bad)
pop
retf
push
cmp
pop
xchg
aam
stc
in
adc
enter
sub
xor
adc
sub
repz
aaa
push
jbe
fstp
outs
pop
jnp
mov
in
mov
mov
dec
fbstp
cmp
lea
imul
jmp
movs
movs
popf
xor
pop
ror
pushf
ror
dec
and
repz
jmp
mov
cmp
test
sbb
xchg
jbe
add
pop
in
mov
add
in
sub
cmc
sahf
xor
movs
xor
cmp
in
clc
sub
cmp
or
in
push
mov
pop
pop
add
add
sbb
in
sub
adc
push
dec
dec
push
and
sbb
inc
mov
int
bt
retf
jno
jmp
loopne
or
mov
sbb
es
scas
bound
test
ds
test
sahf
leave
imul
call
jnp
and
inc
jge
pop
cmp
cmp
xchg
jne
ffree
jl
aad
gs
add
mov
cld
jno
std
fist
sub
mov
loope
xchg
push
scas
mov
fidivr
rol
inc
mov
icebp
aas
mov
daa
sbb
shl
popf
xor
(bad)
jmp
test
js
mov
cmps
and
clc
push
or
jmp
mov
out
pop
ror
xor
pop
ret
xchg
aas
std
mov
pop
adc
js
lock
clc
inc
test
jmp
mov
movs
dec
push
jae
cmovge
movs
dec
stos
(bad)
in
call
inc
int3
mov
cmp
push
gs
loop
gs
pop
sar
mov
xlat
sbb
xlat
cmp
popf
sbb
mov
rcl
cwde
push
pop
out
fstp
inc
mov
ret
loopne
jne
add
stc
push
sbb
repnz
mov
enter
mov
shr
jp
vmread
xor
xor
shl
dec
aaa
push
test
pop
arpl
aad
pop
or
sbb
add
outs
in
(bad)
(bad)
push
or
cmps
clc
(bad)
(bad)
inc
mov
pop
icebp
out
sar
add
dec
pcmpeqd
test
movs
cmc
jne
mov
xchg
leave
in
(bad)
pushf
sub
jg
aad
mov
cmp
imul
out
push
cmp
out
sub
mov
ffree
outs
fs
cs
xchg
mov
mov
fidivr
int3
das
add
xchg
cli
sbb
add
xor
(bad)
xchg
sahf
aas
shl
or
sub
add
leave
xchg
jge
inc
cdq
mov
cmp
fs
mov
enter
cs
cmps
(bad)
sub
or
repnz
call
jmp
ret
mov
pushf
inc
daa
xor
js
mov
sbb
push
mov
test
mov
imul
add
mov
in
xor
pusha
retf
aas
lea
push
mov
xor
fbstp
cmc
ja
mov
dec
ficomp
popa
pop
sub
enter
xor
test
retf
xchg
shl
push
sub
ret
aam
sub
pop
cmp
(bad)
xlat
clc
jnp
jne
loop
mov
pop
in
out
push
inc
sbb
bswap
xchg
pop
fisubr
cmps
sub
add
push
xchg
push
jnp
pop
retf
movs
mov
push
sbb
leave
adc
icebp
xor
not
outs
adc
call
dec
jae
test
sbb
jmp
mov
mov
leave
imul
dec
js
and
pop
jne
push
mov
aad
ins
adc
adc
push
sub
into
loope
aad
jnp
lock
sbb
test
add
xor
pusha
ret
mov
and
imul
ins
(bad)
or
mov
inc
iret
jmp
jae
retf
mov
add
inc
add
xchg
push
and
ins
out
test
push
sub
dec
mov
cld
cdq
mov
lock
jbe
mov
int3
or
mov
cmp
ror
stc
xlat
cmps
ja
xor
scas
and
or
mov
ins
sub
fsubrp
jg
sbb
loop
add
cmps
cdq
jnp
hlt
popa
and
pusha
lock
pop
push
mov
xchg
out
adc
aas
dec
outs
jae
jae
dec
push
xchg
jae
imul
out
stos
cmp
in
(bad)
pop
sub
rcr
adc
adc
mov
xchg
dec
es
cmps
and
(bad)
test
adc
jmp
mov
out
outs
pop
xor
lods
dec
inc
mov
fcos
ret
dec
mov
shr
pop
bnd
sbb
mov
push
mov
into
out
adc
pop
xchg
mov
adc
popa
mov
ja
or
or
jmp
or
fstp
ds
mov
mov
and
jne
adc
pushf
retf
mov
mov
and
xor
pushf
loope
jb
ins
stos
sbb
xchg
call
fcomp
mov
inc
lods
pusha
sar
in
loope
lods
mov
ins
mov
add
hlt
and
inc
adc
cmps
je
div
rcr
jno
fmul
adc
mov
sub
aas
cmp
(bad)
retf
icebp
leavew
pop
inc
inc
inc
pop
div
ja
jl
inc
mov
or
adc
imul
sbb
fnstcw
inc
icebp
stc
pushf
pop
push
ret
adc
idiv
and
jae
cli
push
inc
push
cmp
popa
mov
fistp
add
mov
pop
inc
jb
sub
xor
sbb
sti
inc
lea
mov
mov
mov
test
jmp
out
add
ins
aam
ret
sbb
and
repnz
in
jge
mov
imul
pop
mov
(bad)
and
fldenv
lea
xor
ret
ret
std
push
imul
fstp
or
pop
fmul
pop
or
dec
in
push
pusha
sbb
or
push
adc
cmp
push
lea
jae
sbb
js
cmp
sbb
adc
add
(bad)
enter
sti
cmps
addr16
cwde
xchg
rol
lea
dec
(bad)
sbb
jne
or
pop
xlat
add
movs
push
pop
push
arpl
bound
enter
test
mov
stos
mov
mov
pop
pop
iret
push
iret
in
adc
mov
add
add
xor
and
xor
xchg
push
aad
movzx
rol
mov
lods
shl
inc
sbb
ret
fst
jbe
ret
hlt
loope
rcl
xor
jno
add
jo
sti
sti
scas
mov
add
cmp
sub
inc
imul
arpl
int3
hlt
inc
int
pop
ret
mov
cld
add
mul
xor
repz
(bad)
inc
in
sbb
movs
stc
push
mov
mov
aaa
ss
test
push
sahf
ja
cmps
repnz
int
push
inc
imul
mov
aaa
(bad)
push
xor
cmps
sbb
cmp
pop
xor
loopne
fist
dec
aad
pop
or
fnstcw
fcomp
fs
dec
lahf
mov
ds
loopne
in
fistp
mov
inc
in
adc
cld
and
ja
repnz
clc
cmc
adc
add
(bad)
pop
aaa
jge
leave
xchg
push
pop
into
mov
cmp
mov
data16
out
mov
mov
lahf
push
test
fld
pop
mov
sub
mov
scas
pop
xchg
push
outs
repz
pusha
add
xchg
loop
or
mov
mov
push
mov
sbb
push
inc
pop
cmp
int
gs
sar
loop
jmp
xor
cli
pop
mov
mov
cmp
jne
test
inc
add
fsub
sub
pop
rcr
add
loope
fsub
dec
call
push
or
xchg
adc
(bad)
cdq
jg
xlat
popf
stos
loope
push
xor
popa
jmp
loope
outs
and
adc
scas
jno
and
add
inc
inc
inc
and
xchg
shl
lock
popa
xchg
jno
mov
arpl
out
ror
pop
push
dec
int3
outs
stos
je
sbb
dec
jmp
adc
and
pushf
cmp
pop
jbe
push
cli
sbb
daa
cmp
ret
loop
or
jmp
xchg
mov
sahf
add
loope
sbb
imul
mov
sbb
pop
dec
mov
cmps
xchg
scas
inc
xor
out
dec
sub
or
loopne
add
inc
add
inc
fdivr
xchg
jmp
pushf
inc
dec
push
icebp
push
scas
repnz
add
pushf
mov
sar
dec
ror
push
nop
dec
enter
loopne
mov
mov
lahf
xchg
inc
dec
jle
pop
mov
cmc
stos
popa
or
scas
adc
fistp
mov
jne
inc
test
cld
(bad)
out
sbb
sbb
adc
imul
inc
(bad)
and
jecxz
pusha
lods
pop
sub
pop
shl
int
out
inc
adc
test
in
stc
fidiv
lahf
jnp
out
push
or
add
shl
inc
addr16
cld
(bad)
sub
arpl
mov
jmp
inc
adc
pusha
cmp
sbb
(bad)
and
loope
sub
and
sbb
ret
in
dec
pop
js
mov
out
dec
mov
test
int
dec
idiv
jae
aad
aam
inc
cs
fimul
loope
call
(bad)
mov
jo
retf
jecxz
push
mov
jmp
lahf
ret
ja
xor
pushf
(bad)
and
lock
ffree
mov
add
push
mov
shr
pop
and
jmp
and
mov
(bad)
imul
(bad)
(bad)
jnp
mov
add
mov
pushf
mov
mov
xor
cs
test
jecxz
jmp
ss
mov
frstor
jns
sub
call
or
call
(bad)
std
sahf
leave
movs
xor
icebp
lock
repz
lods
dec
test
out
or
in
fistp
mov
fstp
or
(bad)
fisub
xchg
loope
push
dec
add
cmp
inc
(bad)
sbb
add
cmp
sti
(bad)
mov
adc
out
aaa
fst
push
pop
mov
sbb
jmp
cmc
adc
mov
test
out
rcl
add
cs
mov
cmp
jmp
mov
xor
imul
out
xor
mov
in
pop
mov
fidiv
call
xchg
push
fidiv
pop
mov
dec
test
push
lock
aam
push
in
or
jbe
movs
jno
and
dec
icebp
div
mov
scas
(bad)
dec
out
lods
xor
sub
pop
test
test
adc
add
jo
ret
imul
cld
stos
mul
cmp
stos
or
rol
fcom
dec
hlt
push
push
mov
xchg
loope
out
xchg
cld
inc
xor
fstp
outs
mov
xchg
(bad)
stc
cwde
cmp
fadd
repnz
adc
mov
jns
xor
pop
add
sub
xor
push
rcr
outs
cdq
push
cmp
das
push
mov
push
scas
shr
inc
inc
fs
imul
adc
scas
push
xor
int
dec
clc
jns
pop
push
(bad)
out
mov
or
pop
sub
sub
jb
sub
pop
xchg
and
mov
repz
xlat
dec
cmp
add
adc
xlat
lahf
dec
lds
pushf
sahf
into
cmp
es
into
adc
push
push
imul
repnz
dec
push
add
jno
push
inc
cmp
fcom
test
push
sub
inc
or
mov
enter
mov
jae
iret
loop
mov
jmp
and
sbb
aad
call
xlat
push
rol
xor
xchg
rcr
xor
or
lahf
clc
cmp
adc
adc
loopne
(bad)
cli
pop
enter
add
mov
cmc
xlat
sbb
dec
push
push
xchg
pop
ficomp
xchg
shl
pop
jo
push
imul
inc
aad
outs
push
inc
bound
push
adc
or
push
loope
jmp
(bad)
lods
rol
jae
pop
(bad)
pop
cmps
push
pusha
aad
jno
xor
test
enter
out
push
(bad)
gs
pushf
add
inc
jbe
and
movs
mov
repnz
movs
(bad)
into
daa
push
jae
arpl
mov
mov
xchg
stos
fstp
stos
mov
cmps
mov
leave
cmp
jns
cdq
sub
jns
scas
jo
iret
push
bound
pop
xchg
lds
jmp
jp
sub
mov
addr16
outs
es
mov
in
lds
lock
or
jge
imul
test
into
retf
push
pop
xchg
call
add
bound
dec
imul
(bad)
xchg
in
jb
fcomp
fisub
push
push
cmp
iret
jmp
out
push
iret
cmp
mul
sar
jne
xchg
adc
xchg
jns
cmp
ins
popa
hlt
retf
jno
aam
in
lahf
test
jns
xor
xchg
xchg
mov
xor
pushf
mov
inc
nop
in
inc
rcl
mov
mov
cs
adc
cmp
ds
cmc
pushf
call
or
popa
mov
sbb
xchg
jb
xchg
push
inc
rcl
xor
xchg
ds
out
out
fnsave
inc
loopne
jmp
xchg
repnz
mov
mov
add
push
push
(bad)
dec
cmp
(bad)
mov
outs
retf
sbb
pop
out
xor
sub
cld
mov
mov
and
jns
jae
jecxz
xchg
loopne
in
call
adc
inc
pop
aaa
jns
xchg
pushf
adc
jmp
xor
adc
aas
outs
mov
addr16
cli
add
gs
sar
or
add
push
xchg
cmp
mov
bound
mov
push
cmps
mov
add
enter
sub
test
xlat
or
mov
cmps
out
movs
dec
mov
jl
jp
hlt
ja
idiv
ret
adc
inc
inc
(bad)
outs
bound
in
call
into
(bad)
retf
adc
(bad)
loope
cli
add
and
(bad)
and
ret
mov
or
addr16
test
pop
sbb
adc
mov
pop
and
pop
cli
fistp
xchg
and
es
fisttp
sti
or
pusha
cmp
push
inc
ret
es
jae
add
ds
sbb
lock
in
cmp
jo
imul
xor
push
movs
dec
dec
cdq
push
xchg
mov
jge
lods
movs
cs
or
shr
cwde
inc
stc
sub
cmps
mov
cld
ret
repz
cmp
adc
pop
mov
test
leave
xchg
inc
fisubr
in
int3
add
add
arpl
pushf
push
jge
in
stos
or
hlt
aam
push
dec
rcr
add
iret
repz
mov
xchg
sub
mov
mov
loopne
in
aam
cmps
mov
ins
popa
mul
add
inc
lea
inc
xchg
mov
mov
pop
mov
iret
cmp
sub
dec
add
repnz
hlt
push
sub
div
test
push
xchg
adc
xchg
sbb
mov
adc
pusha
scas
gs
cld
and
adc
adc
out
in
mov
nop
ret
adc
jmp
fadd
xchg
sub
rol
push
add
dec
inc
push
cmc
push
ret
scas
and
fstp
mov
mov
addr16
xor
icebp
sub
outs
lahf
rcr
mov
sbb
push
imul
in
sbb
push
jmp
mov
test
test
mul
pop
sub
popf
outs
jmp
loope
into
sahf
inc
or
mov
and
gs
out
adc
pusha
bound
xor
cmp
les
mov
push
inc
outs
cmp
jmp
push
int
push
stos
pop
dec
mov
pop
dec
and
push
mov
clts
stc
je
push
in
and
adc
test
mov
enter
cmp
push
and
or
loop
mov
bound
jae
adc
jne
pop
jno
xchg
movs
iret
loopne
xchg
or
xchg
out
mov
(bad)
dec
and
int3
and
and
into
dec
(bad)
into
ins
retf
dec
in
dec
test
add
inc
xor
jno
and
stos
dec
fsub
rcl
ja
jnp
aad
mov
loopne
jmp
dec
scas
in
inc
xchg
adc
xor
lock
fs
(bad)
stos
mov
cmp
dec
jo
or
xchg
pop
xchg
outs
xchg
and
pop
pop
xchg
in
adc
call
mov
das
(bad)
pop
sbb
mov
in
push
push
xchg
mov
push
or
call
mov
and
jno
lods
cmp
lea
sbb
popf
push
and
pop
sub
sub
cmp
ret
and
pop
add
cmp
sbb
popf
repz
push
fucomip
push
push
push
fwait
stos
or
adc
int
push
push
cmc
addr16
pop
or
ins
mov
in
pop
cmp
jg
inc
lods
mov
test
sbb
jbe
int
add
jp
dec
add
fcom
mov
cdq
cmp
or
inc
mov
pop
scas
(bad)
icebp
sub
inc
or
add
adc
sar
inc
retf
xchg
add
mul
mov
xor
out
aad
jmp
jl
pop
xor
jmp
add
inc
ds
imul
mov
mov
push
mov
out
sub
inc
mov
cmp
enter
daa
ret
jp
ret
mov
mov
retf
shl
addr16
pop
rcr
and
cmp
ret
out
add
cli
and
enter
dec
xchg
push
pop
ret
into
xchg
add
test
add
data16
or
test
dec
pushf
ins
into
push
daa
das
(bad)
push
ins
mov
jb
cli
inc
pop
jge
cmc
inc
jbe
cmps
and
dec
fadd
(bad)
stc
xor
test
cmps
push
cmp
sub
les
mov
inc
stc
mov
add
mov
outs
adc
repnz
inc
pop
cmps
or
jle
and
scas
aad
mov
sub
jecxz
push
leave
sub
loope
xchg
in
cld
mov
xlat
loop
outs
aam
sub
push
mov
xor
xor
dec
stos
js
pop
adc
das
mov
push
or
sbb
sar
sub
jmp
pop
mov
jb
push
daa
add
retf
rcr
(bad)
cmp
and
mov
ja
sub
or
mov
shl
dec
xor
pop
repz
xor
sahf
inc
adc
xchg
lea
out
inc
in
pop
fldln2
pop
das
int3
push
out
test
int3
sbb
lock
pop
add
das
fsubr
cli
dec
lea
das
pop
jge
push
cmc
in
leave
sbb
test
and
cmp
add
es
inc
mov
xchg
hlt
scas
xchg
jg
push
ins
jmp
lods
push
jmp
cli
add
xchg
jp
std
in
xor
mov
clc
push
mov
pop
arpl
jmp
clc
icebp
cmps
push
retf
fcomp
add
add
lea
dec
pop
cld
lds
lock
xchg
mov
lods
mov
imul
jmp
fimul
xor
push
cmp
mov
add
cwde
(bad)
sub
fs
and
cmp
add
xchg
add
js
fninit
mov
inc
ror
pop
mov
adc
adc
push
cs
jbe
mov
sbb
lahf
arpl
adc
hlt
sub
imul
xchg
sbb
retf
rol
lods
add
aas
ds
xchg
lahf
arpl
sub
repnz
or
jp
movs
shl
repz
inc
jp
pop
cwde
dec
pop
mov
push
jmp
inc
loopne
mov
out
lds
jbe
push
sbb
and
adc
and
out
mul
jo
sub
pop
pop
ret
sbb
xor
in
sub
adc
add
pop
mov
adc
ficomp
push
data16
test
mov
cld
xor
jno
xchg
in
stos
stos
push
hlt
sti
jle
sti
add
jo
or
and
cwde
pop
inc
and
pop
data16
mov
jg
cld
adc
jge
inc
in
inc
cld
shl
mov
aam
mov
shl
fcom
bound
adc
sub
dec
push
hlt
xor
hlt
sbb
(bad)
adc
ins
adc
push
retf
push
pop
iret
in
dec
xchg
pop
sti
fnstcw
sub
dec
jp
add
popf
shl
dec
es
sbb
cmc
adc
ret
xor
fsubr
xor
fld
dec
mov
daa
movs
push
in
js
mov
cmps
mov
cmovno
rcr
mov
shl
ret
jb
sbb
add
int3
pop
cmc
pop
lods
arpl
test
sub
xor
sar
rcr
fcomp
outs
push
sub
popa
scas
loope
(bad)
adc
clc
pop
rol
scas
mov
in
mov
js
push
and
aam
fucomi
ins
sub
sbb
mov
addr16
sub
pushf
mov
repnz
dec
int
cdq
(bad)
imul
xor
push
sub
xchg
aam
xlat
and
cmp
sbb
mov
into
enter
adc
mov
mov
loopne
(bad)
call
xor
cmc
inc
stos
in
dec
lods
in
sub
test
mov
movs
aad
dec
xchg
fisub
inc
aaa
mov
mov
jmp
aas
ss
aam
mov
add
sub
cdq
or
push
adc
cld
mov
jbe
xchg
jo
mov
repnz
fistp
jge
push
aas
int
adc
lods
in
lods
cwde
clc
jmp
aaa
lea
xor
movs
fisubr
dec
popa
outs
ja
fs
outs
mov
lahf
xchg
outs
sub
inc
xor
les
aaa
dec
cwde
mov
add
mov
je
sbb
fidiv
dec
xchg
clc
movs
sub
mov
outs
mov
retf
mov
sti
das
pop
jmp
fist
sti
or
les
loop
mov
pusha
xchg
mov
mov
cmp
inc
mov
scas
adc
rcl
jbe
xchg
fild
push
mov
movs
lods
fnstsw
pop
(bad)
mov
adc
xchg
arpl
fwait
jno
retf
loop
mov
dec
mov
sbb
ror
stos
imul
data16
xor
sbb
mov
xchg
jns
add
sub
cmp
inc
or
repnz
jmp
cmc
mov
cmps
xchg
cmps
gs
dec
inc
push
mov
sbb
add
dec
sbb
or
jae
add
xlat
out
dec
lods
popa
test
dec
push
imul
mov
outs
out
add
mov
and
dec
mov
popa
pop
pop
jp
push
jg
test
push
adc
pop
inc
sub
jb
imul
mov
mov
cmp
out
jno
pop
mov
adc
aam
test
lahf
adc
adc
and
je
add
outs
dec
loopne
mov
movs
jmp
leave
add
pop
cld
pop
jnp
cmp
imul
or
leave
(bad)
js
cs
outs
jge
shl
(bad)
or
repz
mov
mov
(bad)
(bad)
es
mov
sbb
mov
popa
data16
xchg
sub
pshufw
pusha
cmp
pop
in
popf
and
sbb
fnstenv
jl
pop
out
xor
sbb
and
nop
push
fld
dec
fwait
mov
jmp
jmp
(bad)
aaa
addr16
mov
xchg
aad
pop
daa
jnp
ret
lds
dec
xchg
xlat
xchg
dec
jae
test
mov
pop
stos
mov
gs
test
leave
test
and
ds
leave
in
sahf
retf
repnz
or
loope
fistp
call
ins
xor
in
xor
cdq
in
jmp
leave
rcr
fcomp
mov
cs
aaa
jecxz
stos
in
popf
xchg
bound
inc
sub
ds
retf
pop
jb
out
or
sub
ret
jmp
clc
mov
pop
adc
xor
(bad)
addr16
int
xlat
fcmovbe
iret
mov
(bad)
jno
mov
repnz
into
pop
sub
aas
mov
inc
mov
or
loop
jae
int3
icebp
movs
aad
adc
cdq
and
xchg
mov
mov
cmps
push
xor
stos
pushf
cwde
dec
and
imul
mov
ja
cld
(bad)
pop
fidivr
(bad)
jnp
push
fidiv
jmp
mov
sbb
dec
jb
dec
scas
mov
int3
into
and
clc
ss
jae
dec
int3
and
adc
sub
outs
ret
mov
popa
mov
(bad)
jl
in
nop
adc
adc
mov
add
mov
test
call
out
dec
cld
or
mov
rcl
mov
dec
jmp
aam
jo
(bad)
sub
cmp
in
aas
pop
or
cmps
lods
xor
sbb
jnp
mov
into
fadd
or
cld
shr
dec
push
mov
inc
sbb
fisubr
lea
cld
sar
push
(bad)
loopne
rcl
mov
jb
ret
cmp
sar
movs
in
adc
mov
fst
adc
pop
sbb
adc
pop
stc
imul
setnp
repnz
lock
add
ret
es
xchg
imul
mov
dec
retf
pop
inc
sar
xchg
push
mov
inc
iret
jge
mul
xchg
fmulp
fidivr
xor
dec
mov
adc
adc
pop
sbb
leave
mov
movs
lods
mov
push
test
lea
cwde
mul
push
adc
cli
or
jecxz
add
sbb
dec
mov
pop
pop
test
and
dec
lds
mov
neg
ret
cmc
(bad)
pop
or
mov
push
mov
jp
push
js
cmps
mov
retf
push
rcr
pop
cmps
lea
shl
popa
jns
aad
mov
mov
jns
bound
pushf
xor
push
jb
mov
aaa
mov
pop
dec
fmulp
test
popf
push
stc
rcr
adc
xchg
fimul
shl
mov
push
je
fwait
mov
pop
or
loope
stc
pop
inc
cwde
or
cs
mov
mov
popa
adc
dec
mov
test
add
add
pusha
add
addr16
adc
pop
xor
cmp
out
lods
pop
out
jo
xchg
xor
sub
or
and
pop
dec
cmp
sbb
cld
lock
sub
and
imul
xchg
call
std
je
pop
out
push
inc
hlt
ins
rol
xlat
mov
out
scas
ficom
outs
mov
sub
jmp
and
test
daa
gs
test
dec
idiv
neg
sub
inc
lahf
hlt
in
popa
int3
sbb
xchg
pop
ins
add
dec
pop
mov
stos
adc
push
(bad)
adc
adc
pushw
jbe
(bad)
sub
std
mov
ja
jbe
pop
inc
gs
sbb
or
dec
(bad)
enter
sbb
fisttp
scas
inc
pushf
sahf
mov
jae
sub
and
cmp
pushf
push
sub
ja
inc
inc
push
imul
inc
aam
lods
xchg
mov
daa
loop
stos
shr
movs
call
dec
mov
enter
sbb
nop
mov
jle
cmps
sbb
es
cmp
mov
mov
out
js
jae
iret
lea
push
bound
dec
pop
lock
push
icebp
mov
pop
jg
jl
inc
int
adc
loop
xor
inc
mov
mov
fcom
scas
(bad)
xchg
jmp
or
and
test
mov
ret
and
jns
fdiv
mov
bound
cmps
loope
int
cmp
arpl
xor
pusha
jmp
inc
xchg
and
jmp
dec
cmps
adc
pop
xchg
dec
push
pop
xchg
inc
sub
cmp
es
mov
repz
inc
lods
dec
inc
imul
mov
out
(bad)
sti
lock
scas
mov
iret
adc
sti
scas
aas
jo
dec
mov
gs
mov
mov
mov
xor
ss
push
rol
add
sar
mov
shr
cmp
pop
std
xlat
jno
in
sub
fisub
pop
outs
adc
sub
push
aaa
adc
js
mov
add
aaa
mov
sub
fsubr
mov
pop
add
ss
adc
fimul
pop
ror
movs
cmp
test
sub
mov
adc
shr
push
pop
fsub
mov
sub
mov
and
scas
cmps
je
aam
xchg
in
bndstx
adc
ret
add
xor
pop
gs
sti
test
jb
(bad)
imul
push
cwde
outs
shl
leave
and
cld
jmp
ds
outs
sub
push
out
test
mov
dec
mov
stos
sahf
jns
cmp
(bad)
jnp
shr
loopne
cmc
mov
adc
into
mov
or
aad
push
aad
or
and
inc
ins
test
jo
or
mov
push
fcomi
data16
jl
pop
(bad)
cld
mov
cmp
sbb
pop
repz
mov
inc
cmps
aam
or
fsubr
imul
movs
stc
fs
jmp
mov
sub
push
xlat
or
sbb
xor
pusha
cmp
add
mov
das
out
pop
pop
or
add
push
(bad)
xor
mov
pop
adc
cmp
pop
xor
xchg
jo
ret
mov
dec
cmp
sub
lods
pop
les
mov
ss
push
cmp
jb
fisttp
in
pop
out
cmp
jmp
movs
data16
das
(bad)
mov
(bad)
adc
cld
aam
popf
inc
jae
adc
hlt
outs
inc
xchg
jge
add
ins
pop
arpl
mov
fmul
lds
pop
daa
jno
mov
adc
adc
mov
xchg
movs
push
dec
sbb
mov
ja
rol
out
lods
retf
xchg
mov
dec
es
lea
rcl
popf
add
nop
rol
lea
(bad)
adc
test
or
inc
(bad)
fidivr
scas
push
shl
and
sub
mov
das
inc
(bad)
xchg
jno
xor
sub
pop
rep
dec
call
call
(bad)
in
add
cmp
lods
pop
dec
push
cs
mov
mov
retf
add
dec
jne
das
je
ret
(bad)
cmps
sbb
iret
aad
cmp
nop
or
in
add
sar
xchg
outs
xchg
pop
in
pop
adc
add
je
ret
dec
sub
mov
in
xchg
push
lds
push
fcmove
rcl
mov
pop
clc
push
jo
jmp
icebp
mov
es
mov
jmp
jge
mov
fbstp
bound
loopne
xor
mov
leave
aad
jmp
shl
inc
jp
mov
lods
xchg
pop
dec
push
(bad)
dec
stc
dec
sub
je
jnp
popf
xchg
jbe
pop
inc
imul
bound
stos
jg
ss
movs
adc
xchg
sub
(bad)
sbb
fidivr
je
lahf
sbb
xchg
xor
pop
fldl2t
pop
cmps
mov
scas
mov
sbb
(bad)
ja
jne
gs
rcl
jb
sbb
or
dec
(bad)
jl
mov
mov
inc
mov
add
push
fild
fistp
cmp
fst
cmc
ins
mov
or
sub
xchg
cmp
pop
lods
push
(bad)
lods
jmp
stos
int3
call
scas
nop
in
push
dec
mov
ds
loop
imul
push
cdq
sbb
ins
aaa
push
or
daa
mov
sbb
(bad)
xor
inc
aaa
rol
retf
repnz
js
add
popa
sub
inc
sub
sbb
adc
shl
stc
dec
mov
sbb
xchg
xor
mov
or
rol
test
js
cmp
mov
or
(bad)
push
xchg
mov
push
fisub
outs
scas
jge
enter
pop
retf
pusha
iret
inc
fnstsw
int3
sub
sub
cmp
mov
and
mov
jp
outs
test
les
jbe
arpl
(bad)
mov
dec
sti
inc
push
repnz
mov
shl
dec
test
inc
mov
rcr
fwait
loope
xor
sbb
aad
cmps
adc
(bad)
pop
xor
imul
ins
popa
in
push
xchg
call
aaa
mov
pop
xor
rcl
fs
iret
icebp
pop
add
(bad)
jp
call
in
xor
mov
adc
jle
ror
sbb
popf
outs
inc
dec
gs
dec
cdq
jb
outs
jne
aaa
adc
or
(bad)
jmp
push
out
sub
mov
inc
retf
movs
enter
jae
nop
dec
imul
retf
and
mov
mov
fidivr
xor
add
xchg
out
adc
aad
mov
adc
sbb
xchg
mov
out
nop
xor
xchg
push
jmp
popa
scas
pop
pop
jno
mov
in
or
lods
sahf
fcmovu
(bad)
mov
(bad)
jg
lock
and
inc
inc
and
add
jl
retf
dec
mov
mov
mov
push
bound
int
or
test
retf
xchg
push
out
jns
inc
scas
lock
ins
lds
je
cs
add
xchg
scas
retf
sub
xchg
outs
enter
aas
test
push
mov
cmp
mov
push
cmp
or
jb
jo
jnp
sub
scas
push
push
das
xchg
loope
xor
mov
jmp
mov
(bad)
test
ss
ret
stos
pop
(bad)
sub
(bad)
dec
addr16
xor
ds
test
ins
sub
xor
mov
jno
and
sbb
dec
ffree
xchg
jne
fistp
loopne
sbb
add
pop
popf
cwde
xchg
dec
sahf
jb
stos
enter
and
js
xchg
test
mov
aaa
cmp
dec
and
sbb
rcl
es
in
sbb
mov
add
pop
clc
inc
sbb
ds
xor
test
pop
pop
push
xor
xor
pusha
pop
pop
jp
mov
movs
shl
jo
pop
popf
das
cmc
outs
mov
adc
or
test
ret
xor
fnstcw
std
pop
pop
or
nop
nop
pushw
outs
pop
sub
mov
ror
mov
fnsave
std
mov
mov
test
jl
add
clc
data16
dec
sbb
mov
test
daa
inc
pop
mov
jns
mov
push
jb
mov
inc
push
and
aaa
or
jge
cmp
rol
out
xchg
test
pop
ds
sar
fcmovb
imul
xchg
dec
dec
cmps
fisubr
repnz
jp
push
mov
jmp
sub
sub
daa
ja
pop
leave
xor
inc
int3
inc
and
cmps
or
jl
mov
and
imul
xlat
push
sbb
inc
stc
imul
inc
fist
mov
inc
add
sbb
out
retf
(bad)
cmps
sub
sbb
sub
sbb
mov
add
dec
jg
addr16
retf
inc
jmp
mov
mov
movs
push
gs
adc
call
cmp
cmc
retf
movs
mov
(bad)
rcr
sbb
dec
adc
aas
push
sbb
push
mov
sti
or
cwde
bound
push
cmp
lds
punpcklwd
sub
test
mov
jmp
cmp
mov
jb
mov
xchg
pop
adc
enter
jo
pop
(bad)
pop
mov
cmp
pop
mov
and
jl
xchg
jne
bound
xor
aas
stos
sub
mov
pushf
(bad)
cmp
movs
rol
mov
movs
add
dec
xchg
fistp
or
dec
test
fwait
pop
mov
mov
call
repz
cld
mov
gs
add
out
adc
add
jp
and
shl
(bad)
neg
(bad)
dec
add
sbb
mov
arpl
and
pop
scas
push
xchg
dec
fucompp
js
xchg
arpl
xor
or
mov
pop
call
arpl
mov
xchg
leave
fxch
sub
cwde
add
int
lds
arpl
xor
cmc
mov
ins
push
in
push
cmps
and
cs
add
sbb
and
mov
sbb
xchg
push
shr
mov
add
sbb
outs
inc
pop
daa
adc
out
mov
gs
addr16
sbb
(bad)
out
mov
push
xor
lds
xchg
dec
pop
xor
xchg
lds
dec
mov
scas
xor
out
pushf
mov
dec
push
push
pop
aam
xchg
(bad)
fnstcw
pop
pop
xchg
adc
adc
add
mov
jecxz
jo
xlat
pop
(bad)
fbld
in
pop
pusha
jno
clc
mov
xchg
lods
pop
dec
dec
cmovp
lods
hlt
test
xlat
push
cmp
sub
inc
mov
mov
ins
or
outs
pop
lods
and
inc
test
dec
enter
stos
dec
movs
(bad)
sub
xlat
mov
shl
mov
ja
jno
lahf
jb
xchg
jmp
or
fst
fwait
outs
outs
dec
xor
lods
stos
fstp
jecxz
repz
xchg
push
fwait
ins
sbb
pop
pop
xor
xchg
sahf
or
sub
inc
fs
pop
cmps
lock
jnp
mov
in
jmp
test
imul
sbb
mov
adc
aam
ror
push
aas
pop
cmp
mov
adc
out
loop
jle
rcl
xor
in
gs
loope
repz
retf
push
stos
jle
icebp
out
fiadd
stc
mov
push
push
or
int3
xor
loope
gs
xchg
push
sub
mov
cwde
inc
(bad)
pop
ins
je
jle
dec
sub
out
sbb
(bad)
dec
pop
bound
add
dec
gs
(bad)
dec
out
sar
aad
jns
sub
adc
in
mov
jno
test
dec
or
xor
aad
ja
retf
enter
mov
icebp
repnz
(bad)
imul
or
xlat
cs
adc
pop
outs
je
jmp
push
cmp
fadd
vpunpckldq
bound
outs
fnsave
mov
ja
add
mov
jmp
push
and
push
out
and
dec
sub
shl
(bad)
adc
in
in
mov
mov
jnp
mov
sbb
adc
pop
inc
outs
sbb
pushf
mov
dec
inc
cmps
jg
fwait
jo
pop
mov
xor
dec
scas
dec
ret
sbb
into
stos
xor
inc
push
mov
mov
pop
push
jno
jb
push
xlat
cmp
int3
xchg
xor
ins
mov
lods
sub
dec
ror
(bad)
cmp
dec
ins
(bad)
inc
xchg
xchg
das
stc
int3
mov
xchg
fnstsw
fwait
xlat
lock
or
or
nop
test
push
cdq
cmp
or
mov
ret
test
xchg
push
js
leave
mov
mov
fisubr
pop
ins
sahf
std
imul
sbb
icebp
xor
popf
(bad)
loopne
xchg
jg
dec
push
pop
mov
cmp
lea
popf
or
les
(bad)
jge
ret
xor
sub
push
mov
sub
aas
cmp
dec
push
pop
and
pop
shl
add
out
nop
dec
popa
pop
das
stos
pop
aaa
shl
popa
test
sub
cmps
data16
sub
add
add
ja
lock
mov
xchg
out
push
mov
mov
stos
push
retf
adc
out
in
pop
lock
lock
les
out
arpl
xor
leave
and
fs
arpl
xchg
xchg
sti
adc
retf
add
test
lods
clc
xor
test
call
xor
int3
or
xlat
xor
mov
jl
scas
cmps
gs
xor
scas
(bad)
mov
cmc
dec
pop
mov
cmp
fist
cmc
cmp
(bad)
push
jbe
xlat
xchg
sbb
bound
outs
jecxz
sub
rol
lods
rcr
sbb
fdiv
(bad)
push
cmp
in
pop
push
cmp
lods
xchg
mov
pop
gs
and
popf
push
movs
mov
jg
outs
push
outs
push
add
inc
pop
shr
(bad)
retf
mov
retf
test
call
jbe
mov
cmps
inc
mov
sti
jno
jle
mov
cmps
inc
leave
add
loope
pop
cmp
mov
jo
sbb
sbb
adc
cmps
test
loop
lods
and
push
out
shl
packuswb
out
jo
pop
or
jns
loope
and
cmps
retf
dec
sub
bound
loop
psrad
in
sar
inc
and
cmp
repnz
enter
jno
cmps
and
inc
(bad)
cld
mov
jmp
mov
adc
mov
push
and
dec
ss
dec
test
dec
fwait
mov
fimul
xor
out
push
outs
sub
jnp
fild
push
sbb
xor
pop
scas
loope
loope
sti
imul
sub
inc
loopne
mov
popa
or
loope
sti
in
nop
and
jecxz
mov
shl
gs
hlt
lock
pop
(bad)
adc
cmp
dec
cdq
dec
push
push
popa
mov
loop
mov
imul
enter
imul
(bad)
out
outs
push
dec
inc
sbb
sbb
imul
push
repnz
push
and
jmp
mov
cmp
jae
(bad)
xchg
div
inc
out
jge
aad
(bad)
out
add
pop
mov
gs
add
ds
cld
inc
lock
xchg
movs
inc
mov
xor
mov
mov
rol
inc
iret
push
sar
and
mov
pop
and
sub
fcmovb
sub
ret
pop
fxch
shr
mov
rol
sar
call
shl
xchg
out
sub
push
movs
(bad)
add
xchg
leave
test
mov
pop
stos
push
inc
jge
retf
repz
call
mov
push
mov
jae
inc
call
cmp
sti
inc
push
and
mov
fistp
int3
cmps
push
dec
push
push
pop
movs
xchg
mov
loopne
stos
(bad)
dec
mov
dec
(bad)
pop
jne
inc
movs
xchg
push
repnz
add
dec
mov
dec
and
and
sbb
push
sti
jne
inc
sub
(bad)
and
lahf
mov
push
sub
call
adc
jecxz
jg
adc
pushf
or
iret
mov
shr
das
fld
xchg
mov
cmps
inc
rol
mov
cmps
ret
jnp
imul
mov
xor
ret
inc
(bad)
imul
pop
loopne
jnp
jne
jo
pop
frstor
push
or
add
call
mov
xor
stos
ins
xlat
scas
mov
jge
jns
cli
inc
fstp
jae
iret
sub
pushf
mov
add
jmp
jle
add
cs
cmps
mov
in
mov
xor
nop
lahf
(bad)
jo
pop
add
repnz
add
ret
pushf
into
cs
inc
pop
fs
push
pop
jae
cmp
cmp
or
ja
adc
cmp
mov
mov
in
les
js
call
fstp
daa
aad
mov
je
out
popa
cld
popf
jno
push
and
mov
jl
addr16
push
(bad)
cmp
icebp
mov
das
pop
adc
xor
out
stos
or
stc
(bad)
fisttp
pop
cli
aad
and
shr
xor
adc
mov
stos
jp
add
xor
in
push
jl
jne
xor
or
cmc
fwait
xchg
test
call
fild
stc
xchg
sub
jb
test
xor
add
cmp
or
ret
mov
pop
(bad)
stos
adc
xchg
pop
aaa
jecxz
mov
icebp
test
lahf
ja
fimul
push
daa
ret
sbb
(bad)
cli
xchg
cmc
xchg
cmc
loope
and
popa
inc
dec
mov
outs
bound
fsubr
into
mov
adc
int3
sahf
addr16
or
xor
mov
or
leave
and
mov
js
sti
mov
jecxz
imul
xchg
aam
mov
xor
aam
push
sbb
xchg
xor
outs
aaa
inc
mov
(bad)
lods
mov
dec
lods
pop
dec
xchg
pop
jle
pop
and
ret
xlat
clc
sbb
sbb
movs
jg
pop
dec
jp
sub
cwde
jmp
fwait
mov
(bad)
push
aad
sbb
xor
fabs
jno
dec
shr
pop
pop
sbb
in
test
ss
ja
bound
dec
inc
mov
jb
push
lea
xchg
pop
aam
mov
cld
xchg
outs
loop
xchg
cdq
push
sbb
mov
fcom
push
fisttp
jbe
mov
ret
dec
test
jmp
sub
retf
mov
sub
ins
xor
push
out
cwde
add
xchg
xchg
cmp
dec
icebp
sti
aaa
add
ins
cmp
xchg
xchg
xor
imul
sti
jno
(bad)
jle
jg
sbb
les
mov
cs
test
mov
stc
int
and
jno
xor
mov
mov
mov
or
sbb
repz
jecxz
mov
add
mov
cmp
in
inc
mov
in
sbb
cmp
mov
mov
mov
adc
sub
or
push
sar
pop
test
data16
bnd
mov
(bad)
popa
mov
jmp
test
cwde
ret
popf
test
inc
ja
or
mov
pop
fisttp
addr16
and
dec
repz
(bad)
jmp
imul
fisttp
push
pop
stc
sub
pop
jns
push
nop
push
mov
mov
dec
in
push
(bad)
lods
xor
dec
push
outs
mov
jo
mov
xor
mov
fsubr
push
in
out
les
push
jnp
or
add
mov
ins
cli
xor
xchg
stc
in
popa
(bad)
inc
mov
rol
call
or
jmp
pusha
mov
dec
add
mov
leave
add
(bad)
movs
fucom
test
adc
popa
jno
sbb
rol
xor
fwait
movs
cmp
in
aam
int3
pop
pop
mov
sbb
loope
mov
mov
jae
cmp
add
imul
jg
in
sub
test
or
lods
aaa
xor
ins
sbb
mov
retf
mov
mov
or
and
add
pop
and
sti
dec
in
jb
aad
adc
clc
cli
xchg
pop
mov
test
test
push
stos
les
xchg
adc
xor
adc
jo
sbb
imul
dec
lds
xchg
pop
jg
les
mov
sbb
pop
lods
mov
in
ins
repz
cmp
je
(bad)
jle
xchg
cmps
out
lods
dec
mov
push
lock
movs
neg
mov
and
cmp
dec
adc
test
mov
ins
sbb
add
sbb
sbb
inc
stc
xchg
mov
cmp
mov
cmp
jg
arpl
clc
out
scas
cmp
mov
mov
data16
movs
xor
addr16
popa
sahf
mov
pop
xor
repnz
mov
repnz
addr16
xor
add
cmp
mov
je
fdivr
pop
je
lods
dec
fmul
jl
in
mov
test
sti
xor
sub
pop
lea
sbb
mov
adc
daa
or
js
xor
mov
retf
and
clc
outs
iret
shl
std
out
sub
test
js
push
popa
jae
arpl
mov
imul
(bad)
lods
sbb
xchg
mov
mov
test
aad
ficomp
mov
mov
mov
push
pop
jmp
jmp
dec
bswap
mov
and
mov
into
jg
mov
push
pop
xor
or
clc
sbb
xchg
pop
push
mov
pusha
mov
hlt
dec
or
aad
jle
lods
inc
mov
inc
(bad)
mov
lock
xor
aad
icebp
mov
shl
mov
lds
jmp
or
retf
sub
mov
ins
test
(bad)
pop
mov
jl
stos
pop
in
data16
jae
push
fist
sbb
cmps
iret
inc
add
lods
jmp
sub
sar
xor
and
mov
mov
fadd
cdq
push
mov
std
xor
rol
add
xchg
xchg
add
shl
retf
adc
mov
or
adc
sbb
neg
and
pop
cmp
sub
in
jo
addr16
cmps
and
aaa
int
ret
bound
movs
stos
mov
aaa
dec
mov
mov
dec
scas
sub
sbb
ret
repz
and
iret
add
or
loop
pusha
cmp
fnsave
call
shl
scas
stos
stos
pop
iret
add
sub
xor
adc
call
pop
pop
add
cld
stos
and
cmp
xor
or
inc
leave
ss
cmp
push
dec
je
mov
fwait
xor
lods
add
(bad)
mov
xor
dec
jb
pop
and
icebp
sar
pop
jl
mov
dec
sub
ret
sbb
fst
popa
pop
mov
and
pop
movs
jmp
sar
pusha
adc
push
jp
adc
or
(bad)
ds
and
cmp
jl
mov
bound
pop
loop
out
icebp
add
leave
push
int3
pop
cmps
dec
and
aaa
test
fcmovnu
xchg
mov
mov
mov
sub
sub
test
test
mov
ret
add
adc
sbb
mov
xchg
xor
ret
or
xor
repnz
pushf
out
push
xor
pop
jae
ja
es
(bad)
pushf
call
sub
sbb
outs
inc
fnstcw
int
adc
jl
ds
mov
sbb
push
cmp
addr16
jbe
mov
push
(bad)
sbb
sub
cmp
push
lock
or
call
push
lds
in
xchg
mov
xchg
ret
mov
add
and
dec
fcmovne
and
cs
test
pop
lods
xchg
inc
and
push
adc
shr
pop
test
rcr
mov
ror
or
mov
arpl
loopne
stc
ret
jmp
les
out
add
sub
jbe
ja
out
push
or
rep
addr16
test
loopne
popa
scas
xchg
xchg
aaa
lods
stc
jmp
jo
add
in
test
aad
push
or
pop
shld
add
xlat
mov
(bad)
iret
pop
mov
bswap
add
ins
cmps
jp
sub
call
sub
pushf
inc
mov
mov
xchg
mov
inc
es
lods
aam
jne
mov
mov
sbb
dec
bnd
pop
inc
xor
jl
scas
mov
ror
dec
arpl
jno
fwait
(bad)
jnp
xchg
in
fcom
test
cld
add
clc
or
or
stos
out
hlt
push
pop
retf
dec
cmps
add
loope
xchg
push
xor
jbe
cmp
lahf
or
push
and
mov
and
xor
sub
sti
add
ret
cmp
mov
data16
push
cmp
stos
push
add
xchg
xchg
aaa
xchg
mov
aaa
and
sti
or
sub
mul
adc
mov
call
push
push
ins
xchg
cmc
jb
add
cdq
bound
mov
inc
adc
js
dec
xchg
mul
jbe
or
repnz
xchg
adc
push
cmps
lahf
inc
into
dec
fld
imul
fadd
mov
jo
out
call
shl
fmul
jae
fwait
aad
mov
mov
mov
cmps
iret
push
mov
xchg
arpl
int
push
adc
sbb
das
jg
jl
xchg
outs
es
xor
cld
gs
cmps
pop
lahf
jnp
jmp
jl
add
out
inc
stos
lock
dec
adc
or
push
jno
lods
lds
add
pop
mov
push
pop
add
test
add
or
sbb
lds
gs
add
xor
or
dec
xchg
pop
mov
retf
cmp
pop
outs
adc
mul
mov
and
lds
addr16
push
js
add
jae
sbb
mov
mov
cmp
add
clc
mov
pop
add
sbb
xchg
outs
mov
push
test
pop
loope
sub
xchg
outs
jg
cmps
and
fbld
add
sti
cmp
dec
sub
punpckhbw
retf
mov
ror
jg
sbb
(bad)
sub
rcr
mov
dec
lea
rdpmc
sub
push
add
out
inc
mov
loope
les
add
cs
call
mov
sbb
int
int3
into
sub
cmp
pop
and
sbb
mov
in
push
jne
mov
adc
dec
pop
xchg
xor
retf
or
adc
xor
das
and
stos
cli
cmp
or
stc
test
bound
cmp
daa
in
cmc
sbb
add
push
jns
adc
dec
cmp
retf
inc
cld
ja
pop
in
inc
or
inc
mov
leave
dec
inc
lahf
jge
addr16
es
xor
xchg
sub
shl
dec
xchg
pop
xchg
xchg
les
mov
cmp
ret
pop
push
int
inc
inc
xchg
cmp
(bad)
test
add
lods
jo
into
loope
jmp
inc
loop
mov
cmp
cmps
shr
addr16
fist
imul
dec
xlat
pop
adc
ror
add
enter
adc
or
ins
(bad)
and
clc
js
push
inc
sub
mov
shl
fs
sub
mov
pop
jnp
scas
in
push
aad
loopne
outs
inc
lods
jne
imul
add
mov
mov
mov
lods
ds
xchg
lock
(bad)
dec
cmps
push
test
scas
out
leave
addr16
repz
mov
repz
pop
jp
adc
in
je
ror
movs
shl
stc
pop
lds
int3
jecxz
push
inc
adc
push
mov
fs
sti
mov
mov
lods
shl
jb
adc
aaa
out
sar
mov
repnz
and
sti
or
add
inc
lea
pop
push
xchg
fnsave
add
test
push
inc
xchg
mov
jae
les
add
xor
(bad)
adc
add
loope
into
inc
repz
mov
ret
popa
not
push
cmps
aas
mov
jle
dec
sub
ds
pop
in
sahf
cmp
adc
or
mov
ffree
mov
xchg
inc
movs
fild
pop
sub
push
jae
pop
loopne
jne
xchg
mov
outs
adc
or
repz
sub
sub
inc
mov
aaa
je
in
push
scas
dec
add
fwait
pusha
mov
jo
cmc
mov
push
aaa
fwait
aad
xor
jns
data16
inc
add
push
outs
inc
mov
into
and
inc
(bad)
xor
cmp
push
in
mov
call
(bad)
mov
push
adc
cmp
sub
gs
enter
pop
xor
repz
push
pop
rcr
or
mov
mov
mov
icebp
and
fs
outs
mov
(bad)
gs
mov
sub
adc
and
cmp
das
mov
leave
out
xchg
call
jne
popa
aaa
mov
aad
mov
xchg
out
xor
add
mov
push
call
adc
cmp
jmp
(bad)
adc
sbb
outs
jle
xchg
loop
mov
gs
cmp
lods
imul
xchg
fcmove
lahf
dec
lds
push
(bad)
and
sub
jp
sar
lds
xchg
(bad)
aam
dec
dec
dec
addr16
aam
js
jge
mov
jb
enter
pushf
nop
test
out
cmp
cmp
xchg
adc
movs
pop
fild
loope
repz
adc
data16
cmp
add
popf
push
push
cdq
mov
mov
sbb
out
jmp
jle
jmp
sbb
or
shr
call
into
or
loope
jno
cmps
inc
mov
les
sub
add
fild
push
daa
loope
sub
or
push
inc
xchg
js
scas
cmps
xchg
push
jns
popf
loop
jmp
pop
mov
lock
xchg
and
inc
clc
xchg
inc
pop
cmp
fidiv
sub
stos
(bad)
mov
adc
cmps
enter
stc
(bad)
xchg
stos
xor
sbb
jmp
(bad)
jnp
hlt
rcl
jno
and
test
cmc
addr16
inc
jns
(bad)
loope
enter
sub
in
ret
mov
adc
mov
jl
stc
imul
mov
mov
lods
cmp
inc
mov
mov
add
mov
js
or
js
aaa
xor
aam
pusha
pop
stos
in
scas
shr
das
in
lods
fiadd
xor
jns
int
xchg
cmp
xor
test
icebp
dec
inc
dec
xlat
push
ss
jo
std
dec
repnz
jne
shl
(bad)
gs
mov
bound
jns
xor
add
pusha
repz
cmp
jmp
mov
pop
mov
cmp
cmps
dec
add
iret
add
mov
mov
push
xchg
mov
sbb
inc
into
ret
xor
sub
std
add
mov
repnz
mov
sbb
cmp
dec
push
pop
sbb
jg
xchg
hlt
dec
and
bnd
and
lods
dec
sbb
adc
xchg
push
and
sbb
fisub
xchg
inc
mov
pop
sub
jg
imul
cmp
rcl
in
stos
jp
mul
push
mov
scas
shl
icebp
aad
popf
int
pop
test
sbb
inc
sub
cmp
push
add
cld
jmp
xchg
scas
pop
mov
cmp
inc
gs
shr
xor
outs
das
or
je
aad
aaa
push
and
jle
dec
test
jae
xor
jp
dec
jns
jae
dec
dec
pop
xchg
sar
cli
pop
pop
xchg
add
pop
inc
xchg
or
lea
cmps
push
cli
push
sahf
mov
rcr
sti
not
aam
(bad)
fdiv
cmps
sti
mov
jae
or
add
mov
dec
mov
ds
dec
pop
ds
ins
cmp
das
cwde
call
fild
data16
call
cs
xchg
jnp
push
mov
pop
cmps
imul
inc
mov
imul
mov
sub
lahf
leave
sub
loop
push
push
int
retf
sub
jp
ins
add
or
adc
lds
or
inc
js
js
inc
sbb
call
fs
popa
adc
xlat
mov
and
or
sub
push
mov
sbb
mov
stos
push
cmp
push
out
mov
dec
cmp
or
sbb
sbb
out
adc
lahf
clc
test
outs
cmp
pop
addr16
adc
(bad)
sub
mov
outs
xchg
js
lods
js
xor
das
mov
popa
pop
mov
neg
xor
call
mov
sub
pop
jg
pop
jge
mov
inc
adc
mov
popa
cli
xor
outs
sbb
fldcw
pop
pop
inc
mov
adc
sub
adc
mov
adc
popf
cmp
jp
fldenv
das
push
mov
pop
inc
push
sbb
mov
cdq
call
and
bound
push
dec
jns
cmc
cdq
loop
outs
mov
xlat
xor
fcomp
rcr
cmp
sti
sub
xchg
out
push
cmp
cmp
js
ficom
(bad)
idiv
or
stos
jbe
mov
pushf
ror
retf
inc
movs
pop
dec
jmp
stc
aaa
call
xchg
push
xchg
movs
ss
push
cs
vcvttpd2dq
lds
push
add
call
adc
mov
dec
jmp
jnp
cmc
arpl
ja
inc
dec
popa
and
push
shr
or
xor
xchg
pop
jmp
fld
cli
xor
mov
dec
in
das
into
cmps
pop
loopne
push
inc
cmc
movs
mov
add
mov
fcomp
add
out
jae
es
cli
push
sub
pop
dec
inc
aad
ins
aaa
ror
mov
cmp
call
mov
arpl
push
adc
aad
ret
cdq
fs
pop
push
lahf
pop
in
arpl
pop
test
nop
cwde
stc
outs
dec
mov
(bad)
loopne
cmp
aam
xchg
cmc
inc
fdiv
lahf
mov
fs
sbb
retf
push
repnz
cmp
(bad)
cmps
cmp
mov
dec
mov
jne
in
or
or
ret
out
xchg
jmp
fldenv
das
loop
mov
scas
icebp
repz
pop
mov
ret
inc
fmul
push
aas
add
pop
adc
mov
inc
or
jp
sbb
cdq
retf
xor
out
cmp
cmp
call
es
ret
cmp
outs
cmp
inc
fcomp
aad
sbb
inc
pop
stos
lods
add
xchg
mov
push
adc
xchg
sbb
int3
sbb
pop
mov
cs
cwde
rol
sub
xchg
push
and
push
xor
les
enter
sbb
or
dec
jge
xchg
cmp
cdq
inc
setnp
sti
bswap
jae
mov
retf
dec
aad
ja
xchg
xchg
(bad)
jle
jne
stos
movs
outs
aaa
xor
jmp
jb
shl
lahf
and
push
add
push
cmp
pop
or
aas
jmp
in
inc
clc
mov
in
pop
scas
loopne
xchg
mov
fadd
mov
sar
cld
mov
or
xchg
mov
dec
mov
loop
int
sub
push
and
jne
repnz
xor
mov
out
aaa
popf
(bad)
cld
pop
jecxz
out
xor
dec
inc
sub
pushf
mov
add
nop
mov
adc
adc
cmp
dec
out
dec
mov
xchg
adc
loopne
dec
jmp
cmp
sbb
into
mov
pusha
add
test
dec
hlt
cmp
mov
fsubp
pop
dec
lock
sub
fimul
sub
leave
test
leave
(bad)
sbb
in
jns
ins
adc
in
xchg
mov
sbb
push
hlt
or
fwait
adc
mov
sub
(bad)
or
ja
mov
inc
in
push
repnz
jno
jae
ret
xchg
ss
jge
mov
mov
call
je
pop
ds
cmps
pop
sar
data16
scas
test
and
iret
jp
pop
mov
mov
jo
add
pop
movs
mov
lds
lea
and
dec
add
lahf
test
xchg
stos
test
rcl
adc
gs
cmp
or
movs
popf
xchg
(bad)
sub
dec
push
xor
pop
cmps
retf
in
(bad)
pushf
loop
dec
inc
mov
and
and
mov
call
fs
dec
cmp
bsf
xor
pop
xchg
xor
es
sub
mov
out
adc
fnstsw
add
mov
cs
test
not
push
xchg
or
jbe
pushf
fs
retf
and
adc
xor
sbb
cli
inc
cmp
ficomp
mov
ins
lahf
rcr
cmp
and
adc
aad
xor
dec
or
jb
adc
mov
call
sub
icebp
sbb
test
retf
icebp
push
push
fbstp
xchg
loop
(bad)
or
cmc
cmp
mov
mov
call
dec
mov
imul
or
sbb
or
out
sbb
jge
into
pop
imul
sar
repz
lods
sti
push
or
movs
repz
push
ins
jge
sti
adc
vmovupd
mov
enter
popa
inc
xor
out
mov
xchg
test
add
aam
mov
mov
push
inc
nop
stos
cdq
pushf
pop
mov
fisttp
sub
ficom
mov
jb
pop
push
in
les
add
pop
add
test
jmp
jbe
sbb
mov
xchg
cld
mov
add
ret
das
outs
fmul
dec
out
iret
vmovaps
stos
sbb
js
jnp
loop
mov
mov
sbb
mov
mov
dec
mov
fstp
(bad)
cmp
mov
pop
inc
jne
test
mov
sbb
jmp
adc
pop
xor
xchg
aad
mov
mov
ficomp
adc
(bad)
lahf
inc
sub
or
ror
mov
xchg
fiadd
cli
cwde
inc
cmp
inc
loopne
mov
ret
inc
mov
hlt
xor
icebp
test
cmp
jl
mov
inc
sbb
dec
jmp
mov
fsubr
lea
push
dec
inc
mov
bound
push
adc
push
jmp
scas
add
ja
stc
call
neg
xlat
xor
or
xchg
cmp
hlt
rcl
sahf
das
jnp
repz
cmp
shr
lahf
adc
leave
out
mov
mov
push
push
dec
jecxz
popf
pop
mov
xor
mov
cmc
xchg
test
pop
push
scas
adc
call
ins
mov
push
dec
jne
xchg
mov
fsub
sub
dec
add
sbb
xchg
add
lahf
cmp
in
jmp
xchg
xor
pop
int3
jnp
jne
adc
push
addr16
loop
leave
stc
fsubp
loope
add
push
pop
ja
aad
and
sti
xor
js
bound
(bad)
xchg
int3
jo
pop
dec
fist
xchg
mov
jnp
jmp
popf
add
pushaw
test
imul
or
push
pop
mov
lock
loopne
enter
inc
popf
jo
sbb
pop
adc
imul
shr
mov
popa
jmp
xor
cmp
pop
jle
loopne
int3
and
imul
xchg
movs
or
sub
jge
mov
adc
sti
or
cld
cmp
pop
dec
cmp
es
sub
cmp
cdq
pop
cmps
sub
enter
clc
iret
ret
dec
mov
push
repnz
pop
shl
test
aaa
xchg
push
and
mov
jmp
and
push
xor
je
mov
in
add
std
push
out
push
addr16
mov
shl
mov
mov
mov
cmp
rcl
movs
push
fs
(bad)
push
mov
fwait
loopne
sbb
ins
and
leave
mov
scas
lock
aas
lea
mov
es
inc
mov
lods
in
mov
outs
or
ds
(bad)
frstor
xchg
lods
loop
xor
sub
(bad)
xchg
add
push
out
test
jmp
or
test
das
xchg
pop
out
jl
add
fs
jae
movs
rol
sbb
pop
lods
jmp
mov
sbb
sar
es
push
jns
pop
sub
imul
sbb
(bad)
into
push
repnz
push
popf
cmc
dec
fsubp
hlt
int3
test
pop
mov
add
xchg
fcom
push
xor
in
jg
push
jbe
jb
loop
sbb
cmp
xor
pop
inc
in
dec
in
mov
aaa
ret
mov
shl
jg
pop
jo
jne
or
fcmovb
mov
push
sub
sbb
mov
dec
mov
out
pop
hlt
das
mov
pop
hlt
fadd
pop
call
call
cmc
mov
pushf
sar
mov
cld
inc
pop
je
inc
jl
sub
fst
or
cmc
rcl
dec
fstp
daa
add
inc
movs
pop
push
popa
cmp
loope
ret
movs
sub
xchg
in
mov
jae
lea
je
mov
leave
loop
sbb
outs
mov
scas
(bad)
xlat
ins
push
xor
inc
push
ss
mov
retf
mov
sub
push
pop
out
es
cmp
pop
sub
pop
int
pop
mov
mov
push
jae
inc
pop
(bad)
adc
in
out
cwde
mov
out
sub
push
or
dec
pcmpeqd
pop
std
mov
je
(bad)
mov
adc
iret
cmps
push
xor
jl
mov
mov
sub
jecxz
add
scas
das
outs
fistp
adc
pop
fist
mov
in
adc
pop
stc
(bad)
cmps
fs
or
lahf
mov
test
repz
mov
mul
test
sub
inc
or
cs
mov
xchg
xchg
push
inc
and
cli
stos
mov
add
dec
add
push
dec
adc
(bad)
mov
pop
movs
stos
xor
mov
pop
dec
mul
add
stc
push
sar
xchg
push
test
das
add
sbb
int
inc
(bad)
mov
fwait
cmp
loop
cli
movs
(bad)
loope
xlat
xchg
je
ret
xchg
sub
cmps
or
add
or
cmp
mov
sbb
xor
icebp
xor
(bad)
fidivr
jbe
mov
add
sub
fmul
addr16
repz
(bad)
leave
clc
mov
sbb
xor
daa
out
pop
add
in
xchg
out
cwde
sub
mov
jmp
ret
and
inc
into
sahf
mov
cli
adc
cmps
and
cmp
pop
dec
imul
xchg
test
cmp
imul
fisub
jne
jl
jae
repnz
sub
or
push
or
cs
loope
ds
icebp
iret
and
(bad)
fabs
add
jp
(bad)
test
jle
icebp
xor
sbb
out
xchg
outs
imul
pop
mov
hlt
xor
ret
and
xor
xchg
mov
sbb
mov
cmp
or
mov
mov
(bad)
inc
inc
in
nop
inc
push
fistp
cmp
jecxz
(bad)
fwait
std
shl
xchg
aad
ret
and
pop
ins
jp
ins
shr
adc
(bad)
in
xchg
mov
(bad)
and
xchg
repnz
pop
inc
ret
xchg
cmp
mov
mov
repz
fild
jp
adc
push
xor
ror
dec
sbb
std
repnz
pop
jbe
shl
divps
adc
jmp
pop
xchg
call
into
das
or
pusha
and
ja
or
mov
pop
xor
or
out
ficomp
cmp
neg
jnp
jne
jno
fdiv
jge
cmps
and
call
xchg
lods
mov
pop
movs
xchg
sbb
popa
mov
std
pop
xchg
inc
add
mov
inc
mov
xor
into
jne
retf
mov
cs
scas
test
ins
xchg
mov
or
xchg
repz
cli
jmp
mov
ret
add
test
push
pop
pop
jl
sbb
cld
mov
fs
lock
mov
lods
call
mov
pop
mov
xchg
cmp
fiadd
push
lock
fdivr
mov
or
xchg
loop
mov
gs
jg
sahf
aaa
xchg
sbb
cmp
jae
iret
pop
mov
pop
iret
(bad)
adc
pop
push
adc
ja
lock
adc
push
enter
xchg
out
mov
aaa
test
out
jge
lahf
add
std
cmps
inc
push
sar
sub
mov
sub
push
xchg
mov
loop
xchg
cmp
xor
pop
sahf
jnp
in
push
in
or
in
push
adc
and
bound
xchg
jb
sbb
call
pushw
imul
xchg
(bad)
lea
sub
jmp
xchg
iret
movs
cwde
idiv
mov
add
push
xor
arpl
inc
in
cwde
leave
aam
mov
and
lock
xor
movs
xor
movs
in
jno
ja
test
inc
das
pop
add
mov
push
retf
fnstsw
sub
cmps
sub
sar
xlat
cmp
cs
scas
out
pushf
outs
add
loopne
gs
xchg
cmp
jl
cmp
sub
out
jge
daa
movs
sbb
xchg
aas
and
fcmovu
dec
jns
jae
xchg
xchg
mov
adc
out
xchg
das
mov
dec
mov
bound
push
push
mov
adc
mov
stc
adc
stos
outs
push
cmps
aam
mov
lods
push
push
jecxz
xchg
jne
mov
mov
repz
dec
add
or
int3
push
and
and
inc
in
or
cmp
push
mov
pop
cmps
call
loopne
repz
and
or
popa
and
ds
and
clc
imul
mov
cmp
sub
fild
sti
dec
mov
ja
add
cld
dec
mov
inc
jmp
lock
in
pop
or
ds
jbe
sub
or
sar
jne
aas
and
adc
(bad)
push
cmc
pop
jb
sbb
repz
dec
mov
add
fdivr
shl
sub
in
push
leave
xlat
cmc
std
addr16
rol
aas
int3
loopne
rcl
add
and
xor
nop
les
retf
out
or
jp
outs
call
fwait
inc
pop
sub
mov
std
aad
inc
dec
ss
mov
lods
pop
jno
ins
inc
fst
adc
sub
adc
movs
sbb
inc
cmp
sub
and
fbstp
sar
xor
push
std
ret
inc
sub
loopne
or
dec
pop
or
push
clc
add
push
test
sub
enter
xor
clc
or
cs
push
in
lods
sti
icebp
inc
xor
sbb
pop
lahf
lahf
jmp
popa
loop
lods
cmp
adc
xchg
enter
xchg
dec
retf
in
aad
les
ret
inc
xor
(bad)
js
cmps
push
call
cmp
ror
jg
and
rol
pop
out
inc
mov
adc
dec
loope
mov
pop
rcr
inc
nop
cmp
daa
inc
add
dec
mov
mov
xlat
pop
ja
dec
mov
inc
cmp
sbb
add
int
mov
sbb
push
sbb
xor
mov
cmps
or
leave
xor
(bad)
nop
mov
pop
enter
in
(bad)
pop
fwait
cwde
dec
add
test
aas
mov
mov
dec
or
mov
outs
push
add
xchg
sti
cmp
addr16
rcl
out
paddq
jno
mov
inc
test
hlt
xlat
ror
push
adc
out
sbb
mov
movs
(bad)
cmp
pusha
mov
aas
ds
fs
sub
cmp
or
push
aad
mov
ficom
add
xor
call
pop
inc
xor
arpl
sub
in
cmp
mov
or
pop
and
xchg
mov
bound
push
cld
cmp
stc
fmul
mov
fmulp
mov
mov
mov
jo
popa
add
mov
cld
fs
or
mov
repnz
xchg
jmp
dec
ins
sbb
sub
adc
sub
lahf
mov
pop
jg
out
cmp
push
jb
inc
or
sbb
mov
repz
pop
out
dec
fs
jmp
cmps
pop
cmc
call
sbb
sbb
and
inc
les
jl
dec
sbb
mov
add
leave
fs
add
push
push
or
and
push
into
pop
mov
mov
and
mov
cmp
cmp
and
repz
pop
sub
add
sub
and
movs
data16
pop
loope
retf
cwde
add
inc
inc
jo
mov
mov
mov
je
or
ror
fiadd
dec
(bad)
and
cld
enter
out
pop
pushw
inc
fisubr
jmp
cmp
push
dec
test
mov
movs
pop
mov
into
xchg
icebp
mov
out
cmp
sub
cmp
and
sub
jo
std
pop
mov
jle
add
test
bnd
and
adc
xor
std
adc
mov
jno
push
out
je
out
sahf
sub
fisttp
js
mov
loopne
mov
push
scas
pop
push
cmc
sub
jmp
data16
cmp
mov
jmp
mov
pop
loopne
adc
imul
pop
iret
les
cmp
mov
ror
jno
jo
cmp
or
sbb
out
stos
lods
loop
das
adc
xchg
and
cmp
inc
add
pop
cdq
dec
je
popf
aam
push
fcomp
xchg
xor
sub
jge
xchg
pop
or
sbb
out
pop
stc
fwait
mov
mov
xor
rcr
mov
push
push
inc
fiadd
sub
imul
fsub
adc
adc
cmps
pop
stos
jae
xor
jmp
pop
arpl
cmp
ror
dec
dec
mov
inc
cmps
pop
in
ss
add
cmps
xlat
pop
pop
fstp
xor
mov
stos
jno
sub
sub
push
cmp
mov
push
sub
cmc
adc
lahf
push
push
inc
xor
and
(bad)
cdq
ret
std
(bad)
out
sub
jle
pushf
vucomisd
sub
mov
mov
sbb
jmp
aas
test
or
aam
ins
mov
xlat
pop
jmp
sub
fucom
mov
bound
push
sub
out
pop
pop
dec
out
shl
clc
mov
ret
cld
cmps
sub
mov
adc
push
mov
lds
mov
or
into
data16
mov
push
and
mov
test
inc
aaa
bound
or
or
pop
ror
arpl
ds
jl
xchg
dec
sbb
imul
xchg
jmp
fs
add
fisub
popa
frstor
std
cmp
dec
stc
inc
ror
adc
sahf
push
mov
cmc
ins
pop
cmp
sbb
rol
sti
and
mov
shl
cs
loope
(bad)
fstp
cmp
add
ss
dec
dec
jns
jmp
xchg
cmp
xor
fsubp
ins
jmp
mov
xchg
mov
dec
jbe
bound
xchg
jo
imul
mov
mov
lods
sub
pop
push
pusha
fisubr
lea
inc
mov
cmps
xchg
loope
dec
mov
lods
test
adc
xchg
imul
js
pop
cmp
xor
sub
cmp
ins
xor
jmp
mov
retf
push
rcl
mov
cmp
sbb
aad
mov
sbb
das
icebp
dec
jmp
jmp
push
push
xor
or
or
mov
mov
mov
adc
out
mov
mov
rcl
mov
ffree
xchg
mov
pop
cmp
es
dec
scas
xor
xchg
test
loop
jae
pop
inc
loop
outs
call
call
xchg
inc
mov
add
gs
stos
call
sti
mov
add
(bad)
stc
push
mov
jno
sbb
xchg
mov
in
add
aaa
aas
push
ds
mov
ins
lock
loopne
xor
xchg
aaa
mov
test
mov
pop
jbe
xchg
xchg
repnz
retf
and
mov
mov
cli
std
loope
push
inc
outs
idiv
lahf
dec
or
pop
dec
fild
ds
cmp
pop
cwde
sar
retf
xchg
mov
repnz
add
fisubr
aad
pcmpgtb
fs
test
cmp
push
ins
cdq
retf
inc
test
mov
or
(bad)
jmp
pop
out
jge
shl
shl
push
sar
inc
idiv
rol
jb
and
pop
sti
push
sub
enter
cmp
pusha
xchg
repz
push
retf
push
jmp
(bad)
cmp
mov
fidiv
sbb
nop
call
mov
cmps
and
add
mov
push
xchg
clc
ja
cmp
and
(bad)
imul
cdq
std
(bad)
fnstsw
stc
(bad)
dec
inc
ins
mov
mul
pop
jle
sub
pop
adc
nop
jecxz
adc
cmps
sub
je
jae
jmp
xor
enter
fwait
xor
pushf
inc
xchg
xor
cld
fnstsw
sbb
lea
ror
push
push
adc
cdq
mov
add
add
xlat
in
sbb
call
je
cmps
ds
or
jle
push
test
dec
xor
dec
sbb
pop
stos
and
lods
pusha
dec
icebp
stos
cmps
test
xchg
out
fmulp
sub
fwait
and
sub
mov
mov
mov
push
outs
in
je
mov
mov
and
inc
push
jg
or
pop
stc
jecxz
jno
ja
hlt
jns
jne
cmp
or
inc
popf
mov
(bad)
gs
dec
adc
lock
sahf
fscale
shl
or
inc
mov
jnp
movs
inc
cmps
xchg
sbb
test
mov
cwde
mov
movs
fcomp
cmp
fwait
cli
add
ds
dec
add
push
sbb
or
sub
into
sub
xor
mov
fst
mov
lahf
and
adc
xchg
inc
mov
adc
xor
or
test
and
add
aad
add
in
push
sbb
(bad)
mov
add
repz
sbb
mov
aam
dec
popa
fdiv
clc
push
sub
jnp
test
push
push
jb
cmp
out
cmps
test
mov
ja
xchg
pop
cli
popa
stos
cmp
ret
xlat
vaddsd
or
add
xchg
xchg
and
xchg
fcom
dec
push
push
xchg
sub
in
ret
xchg
push
add
in
add
pop
adc
xor
mov
xchg
inc
repz
and
pop
push
jge
fistp
push
inc
clc
jo
pop
data16
rcr
xor
push
and
cmp
xor
inc
xchg
ja
xchg
xor
pusha
push
xor
dec
xor
or
pop
addr16
sbb
out
pop
adc
je
movs
psraw
cmp
daa
out
cmp
mov
out
push
ds
scas
mov
inc
mov
dec
popf
(bad)
fnstenv
sbb
and
stc
xchg
(bad)
clc
mov
push
fnstsw
adc
mov
or
pop
jp
es
pop
pusha
mov
mov
and
test
ins
out
push
jge
and
movs
sahf
xor
pop
push
ins
mov
out
in
adc
addr16
test
adc
aas
out
mov
call
pop
cmc
pop
mov
popf
movs
inc
or
or
outs
test
sbb
outs
mov
pushf
jb
retf
imul
aad
cmc
cmp
(bad)
mov
call
hlt
sbb
rcl
adc
push
sti
add
mov
fmul
retf
mov
je
test
xchg
dec
pusha
sbb
mov
jb
add
cmp
pusha
jmp
lds
add
scas
in
inc
mul
jae
aad
dec
mov
jbe
cmp
cmps
lock
sub
movs
jl
push
lods
xchg
je
adc
sub
stc
retf
xor
cmp
test
xchg
dec
mov
movs
xor
mov
jbe
push
repnz
sbb
inc
jmp
call
inc
dec
rol
xchg
jae
pop
sub
ja
ror
xchg
jge
popf
shl
pop
xor
enter
xchg
cmp
popa
icebp
(bad)
(bad)
fisub
jmp
stos
mov
xor
inc
pop
stc
mov
call
jg
jp
(bad)
dec
(bad)
shr
cmp
add
adc
xchg
add
repz
mov
sbb
clc
add
out
js
bound
xor
cld
sub
adc
dec
mov
cmp
fimul
xlat
lock
call
dec
adc
loope
call
or
clc
fstp
lods
adc
inc
and
mov
mov
and
sub
and
add
or
and
push
mov
fisubr
in
sbb
xor
adc
call
mov
clc
stos
push
push
mov
sbb
mov
dec
(bad)
jae
(bad)
iret
xchg
imul
sub
test
scas
movs
fwait
mov
fist
dec
pop
lods
sub
mov
xor
test
(bad)
cwde
sub
dec
aam
mov
add
sub
fld
xchg
jo
leave
icebp
cld
movs
pop
sbb
pushf
(bad)
mov
fnstsw
mov
(bad)
loope
jl
ret
inc
clc
push
cs
hlt
stc
int
or
int
or
hlt
leave
ins
loope
adc
rcl
scas
xor
loope
mov
adc
inc
imul
ins
addr16
loop
or
xchg
fsincos
sbb
cmp
outs
cld
pop
int3
stos
fwait
iret
pop
sub
cmps
std
xor
clc
fwait
and
pop
mov
in
out
cld
js
test
jne
and
lods
push
addr16
mov
aaa
jmp
(bad)
jle
shl
popf
adc
aaa
adc
int
pushf
dec
push
mov
imul
cmp
mov
dec
cmps
in
add
icebp
mov
call
retf
leave
stc
scas
stos
mov
add
cli
pop
loopne
call
call
lods
imul
add
xchg
nop
xchg
aam
nop
cmp
in
xchg
jns
cs
mov
icebp
mov
idiv
and
add
cwde
jo
loop
xchg
imul
mov
fs
inc
pop
lods
or
dec
inc
pop
shr
and
cs
and
cs
bound
mov
xor
es
ret
bound
xchg
xchg
sub
scas
jns
pushf
shl
xor
mov
push
add
xchg
pop
cmp
mov
push
test
push
xor
test
jbe
imul
sub
dec
xchg
sub
xchg
sub
leave
imul
icebp
leave
sub
sub
(bad)
outs
mov
retf
sub
retf
enter
mov
lea
cdq
ja
sbb
or
jecxz
fistp
xlat
adc
sbb
leave
movs
and
das
inc
sub
sbb
je
xlat
and
mov
mov
push
push
pop
push
or
sbb
(bad)
adc
push
(bad)
mov
mov
fcmovnu
out
inc
adc
and
pop
cmp
loope
getsec
out
repnz
xor
dec
dec
sbb
cli
sbb
cmp
dec
or
or
jg
push
aas
cmp
or
mov
repz
or
addr16
js
movs
pop
sub
add
mov
cmps
fucomi
mov
adc
mov
or
cld
in
dec
mov
jmp
test
hlt
int
push
loopne
dec
pushf
pop
stos
jge
ss
aam
mov
stos
inc
retf
(bad)
call
cmp
retf
dec
xchg
jp
daa
cmps
and
pop
fisubr
sbb
cmc
imul
std
int
shl
rcr
lea
sub
jge
jmp
push
jae
call
jmp
jecxz
fidiv
xchg
pop
lock
mov
sbb
xchg
add
call
mov
mov
fild
dec
cwde
into
add
aam
shl
sub
leave
pop
gs
mov
add
jl
jecxz
mov
jae
pop
mov
jne
mov
mov
cld
adc
ret
jbe
movs
sbb
cmp
out
stos
(bad)
jmp
and
lods
or
test
cmp
mov
retf
dec
push
dec
leave
add
inc
xor
imul
sbb
add
ds
lods
aad
mov
sahf
ins
pop
fbld
adc
movs
retf
pop
mov
and
mov
xlat
aam
cmp
sar
ds
sub
mov
aaa
data16
int3
js
push
mov
push
add
shl
cs
(bad)
cwde
and
mov
push
jle
inc
sub
(bad)
ja
and
bound
das
jg
aas
mov
imul
hlt
mov
push
push
daa
test
mov
jge
mov
mov
push
scas
and
pusha
push
je
jmp
xor
pusha
jbe
or
add
inc
pop
adc
jmp
push
(bad)
ins
jp
hlt
jmp
push
ja
ret
sub
shr
bound
call
les
mov
cli
xchg
pusha
repz
mov
xchg
jle
sbb
or
cmps
xlat
aam
jmp
pop
xchg
xor
aaa
cli
shl
icebp
adc
fldenv
dec
cmp
jmp
mov
lea
jb
jae
ins
sbb
push
cmps
push
add
push
dec
jno
cs
jg
pop
(bad)
xor
and
or
mov
adc
clc
sub
retf
clc
arpl
idiv
push
mov
ja
fstp
pusha
iret
in
clc
inc
scas
push
ret
jg
mov
icebp
cmp
fiadd
xor
test
lods
aas
push
and
jl
mov
lock
aas
jp
movs
dec
xchg
mov
cli
dec
and
mov
fsubr
xchg
xor
repz
dec
cmp
xor
es
loop
fstp
das
jecxz
pop
loope
mov
mov
mov
ficomp
jg
imul
aad
cli
add
jp
(bad)
fwait
fs
mov
icebp
or
aaa
sub
aas
adc
aaa
pop
pusha
shr
inc
ins
mov
out
inc
loop
fld
push
pop
xchg
cmp
add
jp
test
fwait
xchg
add
xor
call
mov
jp
pop
push
mov
mov
in
jmp
cmps
popa
hlt
mov
cwde
sahf
lods
sbb
cwde
loope
and
fiadd
jno
or
push
and
mov
mov
mov
push
(bad)
xor
jo
pusha
sub
xchg
mov
inc
or
mov
fisttp
and
add
jns
retf
nop
mov
test
rol
xchg
movs
pusha
fwait
push
inc
dec
mov
lock
out
sbb
movs
add
out
(bad)
fdivrp
ds
xor
cli
and
sbb
jne
fwait
cmp
dec
inc
loop
nop
lods
fild
int
mov
inc
mov
mov
aas
add
and
repnz
in
xchg
stos
imul
inc
mov
mov
sar
xchg
xchg
neg
dec
dec
daa
test
or
mov
call
xor
add
repz
pop
movs
lods
cmps
cmp
jp
xchg
fdiv
pop
mov
jge
pusha
pop
mov
call
mov
jmp
mov
cmp
xchg
into
icebp
dec
mov
movs
aad
push
dec
jmp
fs
xor
and
adc
jbe
popf
sbb
push
daa
inc
pushf
xchg
adc
ret
stos
inc
adc
jmp
jl
push
xor
xor
mov
cmps
int
retf
push
pop
cmp
outs
jmp
mov
inc
dec
lea
fidivr
cdq
leave
(bad)
sbb
jae
pop
cmc
mov
xchg
shr
mov
icebp
scas
cs
pushf
push
push
push
cmp
stos
cmp
fs
fs
inc
imul
mov
out
jg
popa
xchg
loop
xchg
jae
and
mov
cli
pop
test
or
mov
frstor
sti
push
mov
dec
xchg
cmp
mov
cmp
fistp
mov
sub
cli
ins
jmp
int3
xchg
add
cmc
xor
pop
xor
push
sub
mov
cmp
in
test
or
and
jmp
outs
ret
inc
push
in
inc
mov
adc
or
mov
cmp
mov
mov
ret
pop
cmp
sub
fs
adc
mov
inc
in
sub
mov
jnp
in
add
test
push
xor
mov
xchg
inc
push
pop
outs
push
aaa
mov
clc
inc
scas
xchg
loope
mov
jbe
mov
outs
and
jae
rcr
cmp
sbb
jo
jbe
jp
adc
mov
push
cs
lea
xchg
dec
out
mov
add
xchg
mov
inc
imul
cdq
dec
ret
mov
jo
mov
jb
ja
xchg
retf
gs
sbb
aas
fistp
je
cld
out
test
push
jo
sbb
imul
sbb
add
mov
loop
mov
pop
or
adc
dec
sbb
aas
movs
test
outs
mov
test
xor
jg
push
(bad)
repz
cli
bound
xchg
cmp
or
push
lock
xchg
and
mov
inc
shl
sub
jecxz
enter
dec
xor
push
scas
sbb
cmps
inc
mov
pop
aaa
fsubr
fdiv
call
sub
(bad)
mov
hlt
inc
icebp
loope
add
and
std
je
test
sbb
cli
jmp
add
sbb
movs
popa
sbb
push
lea
std
cs
fsub
sub
es
mov
xchg
fidiv
fcomp
aam
mov
into
jge
leave
aaa
push
aam
fsub
out
or
xchg
shl
push
dec
push
jae
dec
and
sub
stos
rcr
fwait
movs
nop
mov
or
out
push
jmp
inc
or
fsubr
push
pop
data16
or
test
pop
loop
sub
sbb
into
pushf
in
push
imul
xor
adc
dec
push
lods
mov
(bad)
sbb
jge
fild
mov
cmp
add
repnz
int3
fistp
cmp
clc
loope
xlat
loop
add
push
rep
pop
fs
sahf
mov
dec
setns
lds
xor
mov
imul
addr16
leave
movs
sbb
pop
iret
aaa
sar
mov
pop
mov
call
adc
jg
scas
xor
enter
aaa
mov
outs
popf
scas
add
cmp
pusha
das
sub
loopne
rol
sar
jns
repnz
aaa
xor
adc
outs
not
xor
push
xchg
aad
xor
or
xchg
mov
pop
rcl
xor
add
jbe
cmp
test
cmps
popf
and
sub
xor
loop
neg
mov
ret
mul
(bad)
adc
push
push
push
dec
js
xchg
nop
mov
push
pop
out
and
jno
dec
xchg
fs
pop
pop
mov
pop
push
test
es
push
scas
adc
sti
movs
fbstp
xor
pop
pop
sbb
test
push
adc
lahf
cli
mov
test
(bad)
fstp
adc
push
repz
inc
fnstcw
mov
fwait
xor
aas
popa
dec
cmc
push
xchg
push
in
and
mov
shl
ret
push
xor
cmp
mov
adc
inc
repnz
sbb
mov
shl
mov
xchg
enter
loop
(bad)
xlat
sbb
fdivr
lock
cmp
ffreep
push
sbb
outs
mov
push
xchg
dec
stos
ja
fsub
cmps
loop
cmp
mov
test
adc
jne
pop
xlat
adc
mov
icebp
jns
inc
or
mov
in
mov
psrad
movs
fmul
xor
pop
or
imul
and
mov
iret
pop
mov
cdq
sbb
iret
adc
fs
icebp
push
mul
inc
jnp
mov
jecxz
int3
or
(bad)
mov
inc
in
jle
lods
ss
fstp
cs
or
pop
movs
mov
pop
xchg
cld
sbb
jge
mov
dec
arpl
repz
leave
aaa
loope
cmp
jns
fcomp
cmps
sbb
enter
mov
mov
adc
jg
stc
ins
arpl
into
or
xlat
cmp
into
mov
cli
dec
shl
ficomp
loop
aam
or
jle
jmp
adc
adc
add
movs
add
xchg
pop
data16
mov
sub
pop
jmp
xor
push
or
in
test
push
mov
sahf
stos
out
xchg
ror
sbb
adc
loop
xchg
(bad)
pop
es
and
addr16
or
gs
inc
aas
(bad)
outs
test
stos
sbb
in
cwde
into
popa
loope
xchg
pop
push
jle
mov
jno
xor
push
pop
or
aad
ret
repnz
aam
inc
clc
inc
bound
scas
je
loop
call
scas
outs
mov
add
pop
in
cdq
mov
or
mov
mov
iret
jne
push
add
cmp
mov
adc
push
retf
addr16
sbb
pop
popa
mov
dec
push
stos
push
push
cmps
sbb
jbe
aam
mov
and
jl
xchg
cmp
add
mov
push
dec
adc
pop
add
fwait
sbb
mov
mov
ret
and
gs
push
clc
in
push
pop
lods
cmp
ror
sar
add
fist
aam
ss
dec
leave
aad
jg
int3
jmp
(bad)
cld
or
xchg
scas
sbb
pop
aam
aad
add
test
cmps
sbb
push
jmp
test
mov
dec
fs
adc
inc
loope
sbb
cmp
or
data16
scas
aaa
add
jle
xchg
or
test
arpl
xchg
cmps
add
adc
push
popf
call
push
lds
dec
test
lods
test
stos
(bad)
jle
test
sbb
cmp
mul
mov
dec
(bad)
hlt
movs
cs
test
inc
push
lods
fcomp
add
in
aaa
xlat
adc
ins
ins
mov
aad
and
xchg
push
test
cmp
mov
icebp
pop
fsubrp
jg
sbb
(bad)
adc
inc
ret
test
mov
xchg
in
jge
cmp
pop
jge
ins
sub
xlat
fidivr
push
mov
fcomi
stos
int
and
or
or
sbb
dec
mov
out
sub
addr16
pop
pusha
and
stos
xor
jle
(bad)
out
cmp
(bad)
popf
xor
push
loop
ja
dec
mov
stos
in
ins
sub
pusha
or
xchg
pushf
addr16
cmp
inc
fisubr
cmp
inc
icebp
xchg
pop
pushf
and
cmp
shl
mov
xor
adc
(bad)
lea
repz
jae
test
cwde
xor
(bad)
and
sbb
cmps
xor
out
call
add
push
adc
add
(bad)
into
sbb
xchg
inc
mov
mov
sub
std
cs
les
xchg
ins
jmp
adc
cmps
jne
adc
sahf
popa
ja
cmps
(bad)
jb
mov
fs
jbe
stc
repz
sbb
repz
lea
push
sti
dec
popf
sbb
fwait
xor
les
rcr
cli
in
push
fs
push
outs
mov
and
cmp
and
es
cmp
(bad)
adc
add
test
(bad)
and
mov
pop
add
dec
fbld
int3
std
xor
or
ss
push
stos
pushf
mov
dec
mov
add
adc
mov
xlat
mov
fwait
imul
loop
or
mov
inc
dec
and
arpl
movs
fwait
mov
inc
cli
in
je
add
inc
retf
test
and
inc
jbe
pop
popf
shld
add
add
cs
fcomp
popa
and
inc
cmp
out
xchg
cmc
mov
dec
mov
xchg
jl
outs
sbb
div
in
pop
xor
mov
icebp
sub
add
adc
and
and
dec
movs
sub
dec
cmp
ja
cs
pop
adc
call
inc
inc
rcr
(bad)
fst
push
(bad)
iret
xchg
adc
sar
sub
clc
cs
or
bound
mov
int
movs
pop
inc
push
inc
movs
loope
mov
push
movs
mov
out
jbe
popf
and
popf
push
push
mov
cmp
cmp
jecxz
sbb
cmc
cmp
stos
retf
aad
(bad)
adc
xchg
sbb
pusha
mov
inc
fisub
(bad)
mov
jne
dec
add
pop
in
mov
rcr
jp
sub
call
cmc
xor
cwde
jmp
aaa
lods
or
adc
push
jns
or
adc
sub
rcr
or
rcl
xor
aas
adc
or
dec
adc
pop
mov
clc
jecxz
fwait
xor
or
daa
sahf
imul
inc
arpl
imul
sub
add
aas
pop
mov
mov
test
mov
outs
xchg
jg
ja
retf
inc
xlat
leave
sub
mov
in
jae
imul
pop
sub
iret
add
jle
mov
cmps
cmp
ins
xor
or
ror
pop
paddsw
test
adc
int
in
inc
push
or
push
or
push
sti
xchg
jge
push
jns
pop
mov
aaa
cs
xchg
push
sbb
cld
pop
jge
jns
std
mov
mov
add
cmp
rol
inc
jmp
push
mov
cs
push
retf
ror
sub
inc
cmps
jmp
fmul
mul
stc
cdq
xor
shl
sbb
inc
retf
adc
aad
jmp
(bad)
push
cdq
pop
jae
cs
push
pop
add
sub
test
ss
adc
popf
fstp
jo
ror
jmp
lods
pop
xchg
sbb
sbb
mov
push
repnz
inc
xchg
jmp
retf
cmps
mov
fwait
xchg
mul
in
ja
cmp
mov
mov
and
cmps
inc
cmps
jbe
cmp
aam
pop
or
sti
jmp
add
pushf
pop
inc
xchg
mov
jno
sti
add
jmp
mov
lock
in
xor
dec
fs
clc
lds
outs
sar
int3
in
mov
fisttp
into
xchg
aaa
retf
int3
and
jnp
pop
mov
push
add
push
push
push
xchg
jecxz
cli
cmp
mov
aam
fadd
repnz
fs
movs
gs
mov
ret
sub
add
int3
add
jg
shl
mov
shr
xlat
add
and
ins
cld
xchg
jns
add
add
xor
push
cmp
outs
mov
or
jne
cli
mov
fadd
dec
inc
jne
stos
imul
sub
pop
fadd
dec
mov
outs
and
into
sub
fsubp
sbb
loope
sub
ror
add
dec
test
sbb
inc
push
xor
add
in
xor
popa
cmps
std
mov
mov
and
int
sbb
xor
mov
jne
fwait
jmp
sub
(bad)
mov
sbb
inc
nop
dec
in
mov
mov
popa
fidivr
add
sub
loopne
sar
sbb
xchg
jl
mov
int3
(bad)
hlt
movs
push
cli
mov
xor
scas
mov
dec
ror
and
jp
or
jo
xchg
xor
call
cmps
nop
mov
and
clc
inc
push
mov
std
sar
mov
sar
pop
outs
xchg
mov
jne
inc
jns
push
aaa
fwait
mov
jno
(bad)
test
inc
icebp
push
push
xchg
pop
clc
or
dec
sbb
mov
iret
fiadd
xor
int
stc
xor
(bad)
ret
push
dec
popa
in
add
sti
fisubr
call
jae
jp
fmulp
lds
(bad)
popa
(bad)
dec
int3
ins
fnstsw
mov
lock
(bad)
aaa
jg
sbb
sbb
push
fimul
mov
push
inc
outs
cdq
push
lods
push
(bad)
jb
retf
repnz
sbb
adc
inc
adc
hlt
or
movs
sub
mov
xchg
stos
sub
inc
pop
mov
push
bound
sbb
repnz
(bad)
repz
sti
xor
pop
stos
call
inc
clc
or
ins
fcomp
and
xor
dec
test
cmc
xor
pop
mov
sahf
xchg
push
shl
rcr
mov
push
add
shr
test
mov
dec
cli
std
aas
and
sbb
(bad)
int3
retf
fcomp
mov
jno
out
dec
add
cld
int
cwde
rcr
movs
xchg
or
mov
div
out
popa
test
ja
sbb
or
or
adc
into
xchg
dec
cli
and
movups
xchg
loopne
(bad)
call
call
sub
sub
ins
jecxz
mov
arpl
dec
adc
or
mov
mov
and
aad
sbb
gs
push
test
das
addr16
inc
nop
icebp
imul
icebp
or
push
fnstcw
adc
cli
lock
inc
and
add
jp
cdq
xor
or
inc
mov
fwait
and
sti
jp
sti
jle
aam
sar
iret
loop
(bad)
fbstp
adc
ds
inc
inc
add
jae
cmp
aad
(bad)
push
or
xor
repnz
jp
call
jg
and
js
and
shl
outs
(bad)
adc
xchg
cmp
cmp
enter
pop
(bad)
xchg
lock
fsubp
or
scas
dec
lods
jle
lds
out
push
mov
sbb
push
mov
sbb
retf
push
cmp
je
mov
xchg
ins
add
pop
cmp
fsub
pushf
push
cmp
xchg
fsubr
xchg
mov
xchg
leave
adc
adc
in
mov
fist
push
in
jmp
push
and
adc
shl
stos
cmps
pop
repnz
add
sahf
push
idiv
movs
stos
dec
fiadd
repz
xor
mov
retf
in
mov
mov
mov
push
jnp
jne
adc
shl
add
sbb
dec
imul
in
icebp
addr16
pushf
scas
or
sahf
outs
addr16
jbe
stc
test
(bad)
and
mov
inc
loop
pop
jp
outs
mov
push
inc
call
ds
repz
mov
inc
popa
les
arpl
jecxz
cmp
xchg
dec
lea
inc
sub
pop
add
ds
and
in
mov
add
ds
not
js
push
pop
test
cwde
outs
(bad)
enter
jbe
ins
xor
or
clc
adc
daa
leave
push
inc
pop
shr
jbe
fist
idiv
mov
js
arpl
jb
adc
mul
sub
pop
mov
(bad)
mov
fidivr
imul
xchg
arpl
imul
add
repz
xrelease
mov
shl
pop
mov
sub
(bad)
xor
or
out
xchg
sar
sbb
xor
out
jle
ja
cmp
mov
or
into
cmp
mov
inc
mov
icebp
dec
sar
(bad)
adc
or
inc
movs
stos
clc
stos
scas
(bad)
pushf
iret
shl
in
iret
xor
ret
add
jne
mov
aam
pushf
in
or
adc
add
adc
(bad)
icebp
outs
loopne
sar
sti
mov
ret
push
inc
call
cmp
or
inc
in
mov
out
cli
setp
mov
popf
fs
in
out
movs
mov
pop
retf
or
inc
pop
mov
mov
ja
pop
add
sub
aas
int3
sub
xchg
mov
mov
pop
scas
mov
stos
mov
add
or
in
ret
ret
lahf
xor
sub
inc
jns
cmp
xchg
bound
adc
(bad)
sub
push
sub
dec
ds
inc
mov
pop
loope
aad
pop
mov
fimul
and
cmp
(bad)
in
and
js
dec
popf
jl
rcl
into
mov
push
retf
dec
pop
mov
jg
inc
aad
cmps
inc
or
in
cmp
es
push
adc
mov
(bad)
fwait
cmc
frstor
push
je
(bad)
shl
or
dec
in
mov
jne
xor
in
cmp
or
ror
xor
pop
cmps
mov
daa
and
inc
sub
cld
jle
push
mov
cwde
mov
popf
mov
cvttps2pi
js
arpl
adc
mov
jmp
inc
mov
pop
mov
dec
mov
sub
lods
add
and
out
sub
imul
mov
or
mov
bound
mov
repz
scas
xor
jmp
or
cdq
mov
jg
sbb
scas
aaa
xchg
jle
xor
call
push
call
pop
aaa
mov
or
jg
cmp
pop
test
push
cmp
xor
into
inc
or
mov
into
inc
in
ds
ja
(bad)
jg
and
cwde
cli
jmp
xor
sti
bound
shl
sbb
add
mov
bound
xchg
cmps
inc
cmc
stos
sti
outs
jne
(bad)
and
ror
xchg
sub
add
adc
iret
dec
mov
adc
sub
dec
retf
in
sub
push
cbw
or
or
in
jbe
rol
cmp
xchg
jbe
rcr
test
mov
mov
inc
std
cwde
out
jne
jmp
hlt
cmp
xor
stc
inc
test
unpcklps
xchg
mov
inc
push
push
pop
rcl
les
mov
dec
mov
push
mov
push
pop
dec
mov
clc
push
mov
lods
mov
sbb
push
sbb
lea
pop
(bad)
sub
mov
add
sbb
cmp
jno
push
int3
clc
mov
dec
xor
in
repnz
xchg
div
sahf
dec
ss
ja
jbe
(bad)
nop
push
shr
jns
cmps
(bad)
jmp
scas
sahf
jae
cmp
fiadd
and
sub
xchg
adc
lsl
and
test
mov
test
push
xchg
ss
mov
fcmovb
cmc
cdq
push
mov
imul
pop
mov
xchg
cdq
arpl
out
clc
pop
dec
in
add
xchg
call
pop
mov
xchg
mov
mov
push
nop
cld
enter
adc
xchg
cmps
mov
pop
ret
xchg
psubusw
pop
(bad)
loop
xor
push
aam
retf
jmp
fild
rcl
adc
cmp
xchg
sar
or
fcomp
clc
pop
std
sahf
in
ret
out
adc
fisttp
or
cmp
dec
mov
adc
xor
shl
sub
adc
out
push
or
out
repnz
add
fmul
int
sti
cmps
and
in
pop
or
ret
pushf
sub
xor
push
xchg
cmp
lahf
cmp
retf
jle
(bad)
repz
fbstp
scas
popa
and
mov
out
and
lods
call
sub
in
mov
or
sbb
mov
sahf
aas
sub
or
outs
clc
neg
jne
cmp
mov
inc
dec
fstp
cmp
out
test
and
or
mov
imul
ret
cmp
je
cld
shl
retf
push
rcr
dec
xchg
adc
ss
inc
add
mov
push
stc
mov
sbb
arpl
mov
stc
push
cmps
inc
fwait
pop
pop
mov
imul
mov
inc
stos
scas
les
enter
rcl
or
sahf
pop
loopne
sbb
fisubr
cmp
dec
mov
(bad)
cmp
out
aam
jmp
jp
fidivr
or
repnz
jl
popa
loop
ror
jl
dec
adc
cwde
push
cdq
dec
into
les
imul
out
sub
call
aas
mov
lock
jg
aad
sahf
cwde
ins
and
cmp
gs
hlt
(bad)
out
mov
pop
rcl
xchg
std
cmp
mov
pop
jbe
jl
int3
mov
cdq
mov
xchg
push
(bad)
pop
mov
fs
cmp
adc
dec
push
xor
push
mov
pushf
outs
push
push
adc
int
je
inc
dec
das
sub
je
jne
dec
outs
icebp
test
fst
daa
pushf
test
je
adc
sti
dec
jb
cli
(bad)
fpatan
out
ficom
pushf
rol
ret
adc
and
mov
sti
les
sbb
hlt
and
jmp
push
cmp
fisubr
lods
pop
and
or
data16
sar
jg
fistp
(bad)
add
mov
test
fistp
stos
dec
cmps
jg
jecxz
adc
sub
or
push
jecxz
push
jae
loope
cmc
jnp
imul
sbb
aas
sahf
arpl
adc
rcl
test
int
jmp
test
jb
lods
shr
std
jae
cmp
mov
and
test
push
pop
pop
and
int
pop
movs
mov
mov
xchg
movs
dec
movs
inc
dec
call
outs
sbb
xor
lock
mov
fcompp
adc
mov
add
jo
(bad)
loope
add
push
inc
jbe
js
sub
addr16
jne
push
sub
(bad)
out
adc
pop
call
push
(bad)
clc
push
jle
and
cmp
pop
mov
and
in
loopne
xchg
jl
cmp
ret
or
pop
add
hlt
mov
popa
fnstenv
add
es
ins
ds
pop
mov
iret
sub
inc
mov
mov
adc
mov
daa
aad
cld
xchg
jae
sbb
(bad)
mov
jmp
jge
sbb
std
movs
jns
daa
out
rcl
adc
cmp
rol
mov
adc
mul
aas
aaa
or
enter
(bad)
pop
aad
xor
push
xchg
add
cmp
js
fnstcw
adc
cmp
add
popf
call
cs
mov
cmp
adc
jl
push
add
mov
sti
fstp
inc
sub
test
jo
lahf
aas
test
in
call
adc
stos
pusha
pusha
mov
aad
aad
mov
mov
pop
adc
sub
cli
push
sbb
es
nop
loop
repnz
stc
fist
pop
call
xchg
mul
sahf
lods
scas
lock
jmp
fdiv
push
inc
jb
test
test
call
add
ja
ret
or
pop
in
shr
lahf
lods
push
sbb
cmps
test
ficomp
xchg
and
mov
sahf
inc
pusha
bound
mov
out
lea
(bad)
cmc
add
ror
push
sbb
sbb
cld
push
in
sbb
jl
sub
arpl
ss
add
dec
mov
inc
imul
mov
cmp
and
movs
xchg
inc
mov
dec
aam
adc
mov
dec
push
mov
js
sbb
adc
aad
inc
ja
cmp
jmp
sub
js
int3
stos
repz
cmp
xchg
div
pop
push
(bad)
test
retf
mov
inc
xor
fsub
repz
dec
(bad)
cmp
jge
sub
imul
nop
mov
xchg
dec
add
pop
mov
add
inc
dec
dec
mov
jns
adc
mov
or
adc
add
lea
and
push
test
sub
jp
arpl
jo
scas
mov
mov
in
test
pop
or
movs
retf
cmp
in
push
addr16
add
ds
inc
dec
stos
inc
scas
scas
add
cmp
mov
jecxz
out
add
push
push
adc
cmp
outs
xchg
jmp
pop
stc
dec
(bad)
push
(bad)
retf
jb
shr
pop
cmps
dec
loop
sub
xchg
mov
shr
push
scas
xchg
mov
ja
mov
sbb
or
push
mov
ss
in
pop
sub
jne
imul
inc
jo
fdiv
stos
cmp
dec
xor
fild
enter
and
cwde
mov
inc
and
scas
inc
jmp
lea
loop
xchg
idiv
push
xchg
lahf
fsub
into
pushf
jb
push
xchg
in
mov
dec
sub
nop
in
scas
sahf
or
mov
fsqrt
test
push
(bad)
fcomp
xchg
les
and
iret
push
out
xor
sbb
stos
mov
pop
retf
xor
out
test
jmp
movs
xchg
(bad)
outs
jge
and
retf
mov
out
adc
cwde
xchg
les
lods
cld
lods
push
xchg
out
mov
mov
(bad)
into
and
jmp
sub
repnz
push
push
xor
minps
and
in
cmp
repnz
sub
cmps
mov
sar
sahf
pop
leave
iret
jo
mov
out
pop
into
mov
lods
dec
vminpd
outs
in
dec
adc
xor
adc
int
out
mov
(bad)
cmc
cld
dec
movs
push
lds
mov
stos
ret
rcl
ins
inc
js
add
mov
jne
pop
scas
jb
ja
adc
jp
adc
(bad)
mov
push
out
dec
imul
iret
jne
hlt
adc
pop
xchg
mov
mov
xor
aad
inc
icebp
pusha
cmc
out
fadd
arpl
mov
mov
and
add
xchg
xchg
mov
mov
inc
cmc
mov
pop
adc
dec
rcr
jb
adc
scas
into
sar
jae
pop
imul
sbb
stos
cmp
in
mov
cmp
frstor
push
cs
pop
sub
push
rol
mov
(bad)
div
or
mov
js
ins
lock
add
cmp
(bad)
cmp
pushf
jne
test
loopne
scas
mov
ds
inc
push
mov
in
mov
adc
adc
scas
inc
mov
loopne
fisubr
jns
repnz
or
jnp
ds
jecxz
xor
mov
sub
push
pusha
add
sbb
pusha
shr
scas
in
jg
test
pop
scas
jbe
adc
(bad)
mov
jne
push
fcmovnb
retf
data16
cmc
xlat
sub
xor
mov
scas
stos
mov
xor
inc
sub
adc
call
xlat
push
retf
add
gs
adc
xor
fiadd
mov
mov
cmovb
adc
lea
sub
mov
sbb
fnsave
hlt
mov
sbb
xor
jb
mov
xchg
ss
sub
in
or
add
sti
sub
and
inc
div
int3
cmp
push
add
aad
cmc
push
test
rcl
out
pop
repnz
in
int
mov
ret
pop
(bad)
mov
mov
pushf
retf
and
sub
(bad)
stc
repz
(bad)
push
pop
ds
jmp
test
mov
jl
pushf
aam
xchg
add
bound
xchg
add
mov
sub
bound
xor
fidiv
adc
xchg
adc
xor
fisttp
fsub
xchg
push
test
bound
(bad)
loopne
cli
int
fs
push
sub
mov
jns
imul
xchg
dec
lods
xchg
mov
adc
fwait
push
sbb
aad
pop
call
adc
push
push
imul
jo
inc
inc
icebp
(bad)
std
into
add
in
pushf
clc
lock
mov
sub
pop
cwde
fimul
push
and
sub
test
and
jnp
in
pop
movs
xor
push
(bad)
adc
fld
hlt
mov
sub
cmps
bound
and
sbb
or
push
pop
lea
into
push
pop
ins
xchg
in
mov
adc
or
sub
nop
push
dec
icebp
jp
lea
jb
mov
loope
and
sahf
dec
jge
shl
dec
shr
daa
push
sub
ss
mov
or
test
pop
push
js
xor
lods
cmp
sbb
lahf
and
xrelease
(bad)
mov
outs
jmp
shl
inc
jb
outs
ja
nop
pop
push
fsub
add
mov
bound
mov
call
dec
bound
cmp
inc
adc
mov
jno
(bad)
mov
loope
repz
push
mov
xchg
add
adc
inc
xor
xchg
loope
mov
add
(bad)
cmp
xchg
dec
scas
sahf
out
lock
jbe
pusha
mov
enter
dec
aad
aam
cmp
mov
xor
fist
nop
es
xchg
pop
mov
xchg
xchg
and
mov
mov
in
out
mov
dec
inc
push
aas
mov
and
xor
cwde
(bad)
(bad)
(bad)
hlt
jge
int
adc
test
ds
shl
and
jmp
cmp
fwait
es
cwde
std
or
pop
jge
sbb
cmps
or
mov
adc
jg
retf
out
(bad)
rol
push
push
add
add
sbb
xlat
cwde
mov
mov
into
dec
pop
ds
fcom
dec
inc
aaa
mov
cli
push
pop
scas
pop
pop
mov
(bad)
jecxz
add
ror
jb
xor
push
ins
(bad)
outs
mul
xlat
push
pusha
aas
iret
xor
xchg
dec
adc
cmc
rcr
cs
pop
fnsave
mov
outs
push
mul
out
lods
jb
das
mov
cmp
mov
jb
push
dec
movs
or
and
xor
xor
xchg
fst
call
cmp
in
mov
daa
sub
dec
scas
sahf
imul
cmps
sub
repnz
loope
push
xchg
loope
sbb
xor
shr
fdivr
and
aas
in
jbe
mov
xchg
jo
stos
ins
(bad)
hlt
or
xchg
sar
shr
jno
mov
mov
pushf
push
add
cmps
xchg
out
xchg
or
call
push
gs
(bad)
xor
movs
mov
or
sbb
into
stos
enter
mov
test
mov
dec
sbb
retf
jp
jnp
add
test
and
inc
jp
(bad)
mov
dec
add
xor
push
cs
ja
loop
xor
icebp
retf
xchg
add
and
mov
push
jbe
call
xchg
mov
jbe
test
fst
mov
push
xchg
or
ficom
mov
(bad)
mov
pop
shr
(bad)
push
mov
adc
std
movsx
push
sub
cmps
push
cmp
push
xor
lahf
cmp
in
scas
cwde
sti
cmps
jge
out
fwait
test
lock
arpl
xchg
mov
sbb
lods
cmp
add
mov
jge
mov
(bad)
mov
mov
shl
cmc
dec
shl
rol
loopne
push
add
ja
adc
xor
or
add
and
sub
and
das
popf
repnz
scas
aas
mov
mov
mov
mov
cmc
pop
and
or
rol
call
aad
or
add
mov
test
dec
retf
in
jg
jg
cmp
sbb
inc
in
xchg
or
sub
movs
dec
cmc
cs
data16
scas
aad
test
cmp
aad
outs
shl
cmovae
movs
adc
lea
mov
xchg
cmps
sub
inc
dec
sbb
mov
out
sbb
sbb
dec
gs
fistp
push
jae
sub
ds
jne
jmp
and
jle
leave
loope
dec
daa
les
dec
ficom
and
retf
call
adc
dec
mov
xchg
int
call
into
imul
scas
xchg
scas
ret
aas
hlt
les
sti
in
(bad)
mov
adc
fldl2t
adc
mov
xchg
in
out
pop
stos
or
pop
sbb
inc
jmp
jno
push
pop
stos
popf
xor
mov
ss
pop
cmp
ins
push
cld
inc
fldcw
adc
fisttp
out
test
sub
lock
xchg
data16
push
sbb
dec
pop
cwde
std
jo
js
xor
(bad)
lock
adc
add
add
sub
jo
jnp
push
dec
cwde
jae
xchg
and
les
push
mov
add
jno
jge
xchg
lea
mov
(bad)
jle
(bad)
(bad)
(bad)
std
pop
in
clc
xlat
dec
push
enter
cmps
sbb
adc
nop
pop
dec
push
dec
dec
or
or
ds
(bad)
mov
adc
and
or
xchg
or
cdq
sbb
enter
aad
rcl
sub
test
icebp
rcl
pop
mov
mov
mov
fmul
cmps
in
in
fs
fwait
imul
cwde
cs
call
ror
inc
or
dec
lds
and
outs
pop
leave
cmp
adc
sar
jecxz
jnp
(bad)
mov
loopne
sbb
mov
pop
mov
sub
clc
adc
bound
jbe
fldcw
cmp
es
or
outs
mov
sub
inc
mov
jmp
arpl
mov
xor
movs
xchg
dec
sbb
std
cmp
scas
out
push
test
cmps
add
mov
in
xor
inc
mov
push
dec
jmp
sbb
add
or
pushf
daa
and
xchg
and
fcmovnbe
pushf
popa
sbb
cli
xchg
jb
pop
mov
mov
push
xchg
dec
and
daa
mov
mov
sbb
dec
repnz
add
sbb
mov
xchg
in
repnz
mov
cmp
and
movs
pop
int3
lock
jecxz
enter
push
pop
dec
fidiv
sub
dec
cmps
push
xchg
xor
mov
jle
and
rcl
sub
and
ja
cmp
repnz
sub
out
in
jp
ret
push
ja
bound
or
repnz
imul
int3
xor
retf
jno
xor
fild
(bad)
pop
sub
fadd
js
(bad)
mov
jo
jmp
scas
ds
sbb
pop
xlat
ins
mov
outs
fiadd
sub
ins
std
push
cmp
cmps
xor
fcmovnbe
dec
or
inc
xchg
test
push
push
in
add
inc
cmp
gs
shl
lock
and
adc
imul
push
rcl
fs
xchg
jmp
sub
dec
mov
(bad)
(bad)
sub
outs
sahf
sub
cmc
push
aaa
ret
pop
in
push
test
in
mov
dec
mov
inc
std
dec
inc
gs
cdq
jp
mov
shl
jge
push
cmps
mov
ja
fidiv
nop
jne
pop
into
push
pop
sti
dec
sbb
cmp
arpl
push
fsubr
adc
gs
add
movs
bound
and
pop
inc
mov
push
std
sbb
add
gs
xor
sbb
ja
cmc
jnp
stos
aad
mov
cmc
xlat
fiadd
out
or
adc
arpl
adc
mov
(bad)
xlat
dec
imul
retf
push
stc
cmps
inc
into
cmp
cmp
push
push
mov
imul
addr16
pop
sti
pop
sub
sti
aad
xchg
ss
jae
pop
loopne
pop
sub
fxam
cmp
xchg
and
nop
ins
gs
sub
sub
cmp
adc
(bad)
adc
call
mov
fcmove
mov
retf
cmps
ficomp
das
aaa
mov
lahf
xchg
push
mov
ror
and
jl
jecxz
sbb
sbb
ffree
jge
fdivr
adc
and
add
retf
mov
cmc
and
sub
and
xchg
rcr
sub
push
xor
xchg
jl
call
mov
addr16
mov
sub
cld
xchg
lahf
pop
into
or
adc
repz
out
push
mov
icebp
outs
sbb
or
(bad)
xchg
pushf
out
push
xor
dec
sub
mov
xchg
out
or
addr16
inc
inc
idiv
imul
icebp
jecxz
add
repnz
mov
test
xchg
jge
xchg
push
mov
in
sbb
in
xlat
mov
mov
mov
je
retf
add
inc
sti
int3
data16
test
fstp
mov
icebp
(bad)
jg
cmps
cwde
mov
mov
aad
in
adc
pop
mov
pusha
ret
aaa
xchg
aas
mov
mov
sub
sahf
mov
mov
movs
add
loop
jb
inc
or
loop
mov
xchg
cmp
je
je
test
dec
test
pop
js
(bad)
cdq
rcl
rol
(bad)
popf
stos
pop
push
lahf
mov
call
add
inc
mov
jg
(bad)
xchg
loope
mov
popa
fwait
retf
pop
add
jmp
sub
mov
ret
cs
iret
add
ja
cmp
lahf
xor
test
imul
sbb
xchg
fsub
ins
add
xchg
or
sub
inc
cmp
sub
xor
fstp
xchg
jnp
add
fisubr
movs
lahf
jno
jne
and
shr
mov
int
(bad)
and
push
push
inc
ins
movs
inc
mov
adc
adc
or
mov
dec
push
nop
add
ret
test
push
jmp
popa
loop
ins
ds
sub
xchg
loope
mov
mov
adc
jmp
xchg
jmp
mov
ins
xchg
or
mov
repz
in
and
jmp
leave
call
adc
in
sbb
push
pop
xor
ins
and
push
jg
xchg
pop
outs
xchg
aad
les
dec
repnz
ds
add
test
fwait
lock
repnz
xchg
in
mov
jl
fcomp
prefetch
lock
adc
pop
sub
xor
or
ja
sar
dec
repnz
jnp
sbb
cs
pushf
cmc
repz
inc
pop
cmp
mov
pop
xor
out
or
fld
inc
imul
add
nop
in
xchg
jne
sahf
ds
retf
in
or
test
(bad)
xchg
mov
adc
and
in
fistp
cmps
push
in
push
xor
lds
not
jnp
mov
xor
jno
xchg
ss
imul
leave
test
fs
call
(bad)
gs
cmp
popa
retf
aam
sub
pop
and
test
std
mov
inc
lods
iret
xchg
ret
mov
outs
mov
xor
es
cs
mov
xor
or
mov
add
xchg
adc
or
adc
inc
test
(bad)
pusha
or
cs
cwde
into
dec
nop
jne
mov
push
xor
pop
inc
fs
cmp
mov
test
push
cmp
inc
mov
xchg
jae
arpl
movs
arpl
fnstcw
sub
pusha
int3
or
pop
adc
addr16
mov
hlt
int
sahf
push
(bad)
gs
xchg
ins
getsec
fist
push
lock
push
sbb
sub
outs
pop
in
pop
stos
xor
frstor
lahf
scas
sub
xor
xor
sbb
dec
push
sbb
(bad)
push
aas
fistp
cmp
in
cmp
outs
and
or
xchg
sbb
mov
push
adc
mov
popf
mov
cwde
jp
xor
dec
mov
pushf
mov
jne
sahf
jae
in
push
aaa
dec
fcmovbe
mov
clc
int3
jnp
(bad)
sbb
les
dec
imul
ja
pop
ret
sub
clc
(bad)
mov
push
jmp
in
jmp
xchg
xchg
mov
mov
push
imul
in
outs
inc
arpl
ror
inc
sbb
shl
cmp
pop
pop
jae
add
das
icebp
out
pop
jns
fst
cmp
xchg
adc
ins
xor
add
add
add
arpl
aas
inc
sbb
mov
mov
call
nop
mov
jle
add
neg
cmp
int3
in
cmp
movs
ss
in
jp
inc
int
in
pop
sub
jmp
out
sar
mov
cmp
fldcw
fild
cs
and
push
cli
add
push
and
in
enter
xor
mov
mov
sub
repnz
mov
push
push
loop
imul
movs
nop
es
arpl
or
jp
shr
js
cli
sti
mov
adc
xlat
jg
out
call
sub
mov
in
movs
jmp
call
mov
adc
enter
sar
xor
sub
loopne
not
std
inc
xchg
or
pop
xchg
mov
adc
lock
adc
push
ret
sub
push
mov
(bad)
mov
hlt
into
mov
sub
sub
stos
stc
pushf
jbe
mov
mov
shr
mov
daa
pop
pop
and
jnp
fisttp
aam
jo
pusha
inc
mov
mov
fidiv
xor
adc
out
push
push
in
mov
ss
push
repnz
out
jp
add
pop
repnz
addr16
or
icebp
sub
inc
in
cdq
push
adc
sahf
les
movs
mov
push
out
out
xor
mov
cmp
dec
inc
arpl
xchg
sbb
add
stos
enter
fs
or
mov
loopne
adc
adc
jge
call
fidivr
addr16
mov
test
push
xchg
sbb
push
pop
pop
pop
mov
hlt
mov
in
sub
test
xor
(bad)
cmc
daa
mul
dec
xchg
dec
jecxz
lahf
retf
repnz
cmc
push
bound
in
xor
jle
and
push
mov
arpl
int
adc
mov
sub
sbb
push
aas
mov
adc
outs
int3
(bad)
(bad)
hlt
xchg
pop
push
lods
or
adc
mov
repz
jns
adc
add
mov
mov
adc
add
lahf
cmc
aad
imul
not
mov
xchg
in
sub
(bad)
fwait
xlat
aas
mov
mov
push
iret
movs
lods
cmps
mov
stos
call
jle
stos
jl
sub
xchg
cmp
in
xchg
or
dec
sub
(bad)
scas
daa
adc
adc
in
fxch
adc
mov
lahf
sub
in
mov
in
xchg
inc
xchg
push
cld
xchg
scas
xchg
daa
xor
bound
jg
fsubr
test
call
fiadd
cmc
loop
adc
pop
aas
call
lahf
mov
(bad)
mov
fadd
and
sbb
rcr
pushf
dec
je
push
repnz
test
(bad)
cmps
iret
inc
cmc
das
push
cmps
cmp
sar
leave
jecxz
ins
jl
mov
mov
dec
jo
dec
mov
or
pusha
hlt
data16
mov
movs
mov
pop
(bad)
add
mov
dec
je
add
sbb
push
cmp
push
xor
xchg
add
ins
arpl
cmp
fisubr
les
push
mov
sbb
(bad)
stc
in
pop
clc
les
cmp
jmp
jae
push
mov
or
cwde
ja
nop
push
push
nop
idiv
inc
cmp
push
lods
in
and
xchg
pusha
scas
int
mov
jo
mov
dec
jle
mov
xor
cmp
rol
ror
mov
mov
xchg
test
(bad)
clc
cwde
jl
pop
sahf
out
into
stc
mov
mov
pop
pop
lods
inc
rol
cmp
pop
imul
out
fst
stos
and
loope
mov
aaa
fwait
ss
lock
jmp
js
push
arpl
cmps
mov
test
jne
cmps
mov
out
sub
push
and
scas
out
jle
fs
and
jae
stc
(bad)
xor
push
xchg
xor
ss
out
aaa
xchg
sub
(bad)
cs
cmp
or
inc
fst
ja
aas
xchg
in
test
cmp
jg
in
in
adc
mov
mov
mov
cmp
retf
mov
or
call
and
mov
cmp
imul
dec
dec
mov
inc
test
stc
xchg
mov
cmp
outs
dec
outs
cmp
dec
add
jae
and
and
movs
xor
sub
pop
imul
adc
sar
pop
mov
pop
cmp
fimul
test
cmp
cmp
je
sbb
iret
rcr
ins
aas
push
ss
fsub
push
jb
fwait
adc
jmp
inc
mov
addr16
jmp
(bad)
scas
inc
popa
test
jg
rcl
add
fnstcw
test
loop
mov
das
cmp
arpl
push
xor
lods
ret
mov
ss
xor
in
or
mov
jge
mov
lds
mov
int3
mov
xchg
xchg
das
mov
sub
mov
sbb
in
or
and
(bad)
std
mov
imul
and
cmp
sbb
fstsw
add
fadd
cmp
cmp
mov
pop
rcl
mov
lahf
in
push
push
in
push
mov
outs
mov
mov
xor
cmps
cmc
gs
ret
stc
(bad)
mov
sar
xchg
ins
ja
es
das
sub
lods
cli
jno
lock
mov
push
cwde
sub
inc
scas
in
lds
shl
xchg
ror
xor
cdq
adc
aaa
(bad)
fwait
mul
int3
sub
sub
and
or
or
mov
loope
mov
mov
fisttp
xchg
out
cmp
cmp
add
xchg
push
retf
mov
xchg
enter
loope
loopne
aam
push
sahf
mov
cmps
or
sub
or
sar
push
out
xor
dec
cmp
cmps
bound
ds
xor
push
call
cmps
nop
inc
dec
outs
mov
or
dec
movs
imul
aaa
shl
retf
jp
fld
xor
mov
aad
rcr
(bad)
mov
aad
pop
dec
ss
mov
mov
lea
(bad)
lds
mov
lds
out
jmp
adc
or
inc
mov
punpcklwd
push
mov
mov
test
es
and
cs
dec
sbb
out
add
push
adc
push
ret
clc
push
and
jl
jg
dec
xchg
shl
mov
adc
rcl
sub
ror
inc
mov
xlat
and
std
cmp
pop
add
sbb
sbb
mov
xchg
jo
mov
jmp
enter
repnz
addr16
xchg
mov
sub
or
pop
push
scas
test
cmp
pop
(bad)
div
pop
and
sub
cdq
movs
or
(bad)
cmc
jbe
mov
scas
push
xchg
xchg
movs
imul
or
xchg
rcl
push
shr
push
test
test
dec
dec
jmp
cmp
movs
and
jge
mov
pushf
pop
ficomp
push
rol
enter
or
pushf
sub
mov
add
xor
pop
jecxz
loop
jae
iret
or
jecxz
mov
push
adc
(bad)
in
and
pop
pusha
add
pop
nop
outs
jae
mov
lea
fcomp
aaa
retf
or
jge
lods
sahf
loope
push
xor
call
ret
cmp
popa
cmps
aaa
inc
mov
clc
aaa
out
js
or
mov
les
pop
push
xchg
sbb
out
mov
fcmovb
into
inc
add
es
pop
test
or
and
rol
jg
pop
dec
shl
jmp
mov
jno
call
lds
(bad)
pop
repnz
dec
mov
loope
fwait
in
adc
mov
mov
sti
mov
loope
shr
pop
mov
jl
jmp
pop
xchg
jmp
es
sbb
pop
in
fnstcw
inc
lods
jo
fwait
dec
mov
cmc
js
dec
repz
ss
mov
aaa
sbb
cli
ficom
fimul
mov
xor
and
sub
or
loop
or
mov
idiv
fisttp
or
jge
dec
shr
test
mov
add
push
cmp
movs
dec
xchg
fwait
sbb
mov
popa
sbb
xor
sbb
sbb
mov
adc
in
cmps
mov
adc
inc
fwait
and
test
ins
xor
icebp
cwde
inc
ret
call
add
sub
jg
dec
and
aas
and
cwde
add
or
mov
bnd
sti
jp
outs
mov
addr16
aam
aaa
mov
and
(bad)
or
push
mov
cmc
dec
xchg
call
in
aad
test
sub
(bad)
nop
mov
xor
lahf
add
and
fistp
xor
cmc
inc
xchg
mov
pop
mov
test
aaa
test
int
xchg
pop
jg
shr
aam
mov
or
push
stos
pop
pop
fcmove
hlt
idiv
mov
addr16
ja
mov
pop
push
clc
and
pop
pop
push
std
dec
pop
push
movs
scas
lods
into
xor
call
shr
pop
adc
jmp
dec
leave
push
mov
pop
mov
ins
fsubp
add
pop
push
jmp
pop
movs
inc
mov
aad
xlat
or
loop
call
sub
loopne
or
mov
mov
xlat
jmp
out
mov
into
sbb
iret
cwde
push
push
stos
inc
fbld
push
jb
xchg
jo
push
test
es
push
sub
add
sub
int
pusha
ins
shl
jo
test
ja
xor
push
fwait
add
pop
or
sbb
ret
stos
mov
js
xor
lahf
xchg
mov
in
mov
jmp
mov
jb
pop
test
and
clc
dec
cmp
shl
mov
out
loope
(bad)
push
inc
push
hlt
in
je
inc
dec
aaa
std
xchg
or
leave
pushf
daa
(bad)
jnp
push
gs
movs
jecxz
stc
add
leave
aas
stc
push
dec
xor
inc
fild
fmul
cmps
int3
ja
push
cmc
pop
push
sbb
data16
add
mov
mov
jg
sbb
les
pop
out
push
ret
jge
sub
mov
lahf
xchg
and
pop
aad
arpl
or
or
pop
fisub
into
icebp
fst
and
cmp
sub
test
or
mov
mov
scas
test
repnz
push
mov
loopne
cmp
jns
dec
sub
adc
icebp
pop
pop
jb
int3
jb
push
outs
jp
cdq
in
stos
mov
dec
or
cmp
leave
ror
aaa
mov
repz
hlt
popa
aam
jo
fidivr
retf
nop
sub
in
cwde
mov
mov
retf
or
(bad)
gs
sti
scas
xchg
imul
or
jns
push
clc
inc
mov
dec
mov
loope
in
(bad)
icebp
xor
idiv
jmp
out
push
and
jecxz
mov
and
ret
out
shl
cs
lea
push
ror
sbb
(bad)
xor
fiadd
adc
jge
mov
movs
ja
fnstsw
test
fcomp
dec
xor
jnp
adc
enter
aaa
mov
pop
nop
dec
mov
aad
xlat
enter
xchg
jecxz
xchg
push
xchg
in
imul
xchg
sbb
xor
push
or
cmp
sub
pop
(bad)
sbb
mov
jge
xchg
mov
pop
cmc
adc
mov
add
lds
cs
and
dec
lds
int
(bad)
shr
fst
and
mov
mov
inc
mov
call
clc
pop
mov
mov
jnp
mov
xor
rcr
idiv
mov
(bad)
mov
jg
cmp
push
inc
lods
or
inc
dec
aas
repnz
(bad)
sar
sub
adc
xor
xchg
cmp
into
pop
inc
into
and
add
inc
dec
jbe
or
or
cdq
mov
inc
cmp
cli
jnp
aad
jno
shl
sub
xchg
(bad)
nop
rcl
mov
addr16
jbe
pop
idiv
jmp
das
xor
xor
jae
call
clc
out
mov
das
adc
cmp
add
sbb
sub
mov
mov
jecxz
cld
mov
xchg
push
fwait
add
xchg
xchg
pop
mov
or
frstor
icebp
gs
stos
dec
sub
shl
and
push
pop
push
loopne
add
fld
push
jmp
dec
loop
cmp
jne
mov
mov
mov
test
fcomp
add
aas
mov
rcr
lahf
hlt
sub
or
jne
fscale
mov
xor
in
push
in
adc
out
pop
sub
sbb
call
jg
shl
jbe
push
mov
mov
cmps
pusha
inc
pop
or
std
jns
push
xchg
sar
popf
out
jo
adc
sub
lds
mov
push
loopne
fist
call
add
adc
lods
and
(bad)
(bad)
and
dec
jmp
mov
jnp
and
popf
ins
fs
adc
xlat
push
push
mov
adc
(bad)
mov
fsub
cld
or
leave
aas
or
ja
icebp
add
test
cli
cmp
push
xor
ficomp
mov
dec
xchg
pop
add
dec
lods
mov
(bad)
jmp
sub
xchg
sub
(bad)
imul
aaa
sub
cmps
dec
outs
bswap
push
das
test
sbb
mov
add
add
xor
jo
or
out
mov
mov
(bad)
xlat
sbb
data16
(bad)
pop
lock
mov
jae
pop
int3
rcl
std
jb
ss
ror
movs
lea
jo
dec
rcr
addr16
das
mov
or
sub
lds
add
cs
mov
bound
in
sub
pop
stos
imul
add
adc
ret
test
mov
std
xchg
out
call
adc
fwait
xor
loop
fldenv
sbb
or
data16
fistp
out
popf
push
outs
mov
pop
mov
loopne
cwde
push
dec
std
into
inc
lods
in
xor
(bad)
hlt
pop
aam
adc
jae
call
jge
lods
mov
out
aaa
jle
mov
push
cmp
jnp
ins
adc
mov
movs
cs
int3
mov
lahf
aas
fimul
call
stos
loope
enter
fnstcw
jmp
xor
dec
or
add
mov
imul
dec
rcl
test
jmp
test
or
jns
pop
cmp
add
and
gs
mov
movs
push
(bad)
xor
ins
cmp
(bad)
inc
mov
cdq
inc
xor
and
mov
dec
sbb
fs
leave
idiv
dec
cmp
arpl
in
or
shl
clc
jle
inc
test
sbb
lahf
mov
mov
sar
cmps
cwde
xchg
pushf
fs
sub
dec
mov
hlt
jo
push
fst
jge
mov
cmps
(bad)
pop
pop
push
inc
mov
das
mov
fist
xchg
lds
mov
jle
cmp
inc
lods
cwde
push
cmp
cmp
mov
movs
jmp
or
repz
dec
jmp
add
jne
je
xor
and
mov
int3
out
push
adc
adc
ret
push
pusha
mov
xor
in
xchg
call
pushf
dec
cmp
pop
iret
test
ins
push
xor
lods
ss
xor
xchg
movs
sub
scas
push
shl
fisubr
outs
std
add
xor
mov
ins
cdq
fmul
pop
sti
pop
xor
fmul
xor
adc
dec
(bad)
fmul
adc
mov
sbb
sbb
add
pusha
mov
jbe
cld
add
mov
fld
movs
mul
aam
dec
nop
aas
push
cmp
mov
add
ss
or
fild
jmp
das
out
xchg
fld
dec
shl
mov
xchg
fadd
retf
jle
jmp
fmulp
out
je
push
add
dec
adc
leave
xchg
adc
and
into
out
mov
adc
fdivr
mov
cld
fdiv
loope
xchg
ret
aaa
clc
(bad)
les
shl
fidivr
xor
push
icebp
dec
push
int
call
pop
loope
int3
into
bound
and
mov
xlat
add
cdq
mov
mov
or
dec
aas
es
stc
push
lods
cmps
nop
popf
push
or
xor
loop
xchg
inc
lods
repz
pop
fsub
loop
stos
lock
mov
repz
enter
jl
call
xchg
mov
nop
ja
cmp
(bad)
ficomp
bound
sti
inc
ss
cmp
and
in
pop
fidivr
lahf
add
fstp
retf
mov
add
in
xchg
jo
jecxz
(bad)
lods
out
loope
test
sub
fldln2
test
and
mov
sub
xor
xor
or
xchg
xchg
in
shr
fsub
cmp
shl
scas
test
and
inc
in
sbb
mov
test
int3
push
add
jo
dec
std
pop
in
cmp
lea
cmps
cmp
in
clc
cmps
adc
push
mul
sar
fstp
cld
xor
sbb
mov
clc
xor
add
mov
push
imul
(bad)
jmp
sbb
hlt
scas
inc
mov
retf
ror
and
add
xchg
push
xor
push
pop
xor
mov
xlat
sub
pop
leave
fstp
pop
scas
lea
pop
ins
xchg
adc
sub
in
nop
push
mov
call
test
js
leave
cmps
iret
push
mov
dec
xor
or
stc
popf
and
icebp
or
jg
imul
cmps
adc
xor
pushf
loop
pop
not
xchg
ret
popa
fcmovne
xor
pop
jl
cld
inc
std
xchg
jb
inc
jl
add
cmpps
jg
fistp
in
pop
inc
ins
adc
and
push
mov
dec
and
loopne
sahf
ins
cmp
in
xor
dec
call
jo
xchg
push
cdq
jb
mov
fdiv
mov
int3
xchg
mov
arpl
nop
or
mov
ret
jle
out
or
loope
add
or
xor
dec
dec
jbe
mov
dec
cwde
int
mov
adc
jl
cwde
ret
sbb
fadd
ss
add
gs
mov
mov
cmp
mov
sub
frstor
stc
push
or
or
loopne
jae
lea
add
ins
jbe
xor
sub
mov
mov
xor
adc
fsub
(bad)
cdq
pop
scas
aam
scas
in
sub
inc
shl
xchg
inc
dec
lahf
cvtpi2ps
rcl
repnz
mov
sub
xor
dec
addr16
adc
xchg
inc
inc
lods
sbb
bound
xchg
pop
ror
fwait
mov
lahf
sbb
aaa
push
cdq
adc
xchg
mov
sahf
lods
adc
in
lahf
out
dec
mov
push
emms
inc
iret
fistp
bound
jbe
fdiv
js
clc
pushf
aaa
rdpmc
ins
inc
cmp
push
cdq
mov
cli
call
cwde
pop
jmp
lea
push
mov
icebp
call
out
pop
jae
add
mov
mov
(bad)
and
mov
xchg
push
js
adc
xor
xchg
int3
mov
push
call
pop
and
fcom
pusha
mov
outs
mov
ds
dec
jge
xchg
pop
sub
mov
jl
and
cmp
dec
jo
(bad)
cmc
push
add
xchg
dec
push
mov
imul
call
fild
xchg
fsub
dec
dec
iret
push
in
push
or
scas
mov
and
test
movs
or
fisubr
in
aam
push
mov
loopne
push
ins
nop
pop
jb
jmp
(bad)
lods
xor
(bad)
and
aam
jne
cld
fldenv
dec
sti
sbb
(bad)
push
push
js
icebp
lock
inc
push
in
adc
sbb
icebp
pushf
test
xlat
jmp
fcmovnbe
xor
(bad)
cli
pop
stc
aam
(bad)
push
mov
outs
pop
scas
(bad)
fist
push
fld
mov
scas
sub
mov
pop
and
aas
push
retf
mov
sbb
fcmovu
mov
test
sub
sahf
xchg
push
mov
adc
xlat
inc
sbb
push
xchg
bound
out
out
cmp
jge
fscale
sub
fs
aam
xor
rcr
sub
adc
lock
and
retf
je
bt
inc
loop
retf
push
leave
pop
dec
dec
loope
loope
movs
imul
sbb
sar
xchg
es
call
pusha
jo
or
push
dec
push
xor
or
sub
pop
ja
mov
rcl
xchg
ins
lods
ret
and
cli
dec
cmp
or
in
pop
sahf
movs
and
inc
scas
push
out
sbb
test
dec
sub
aad
sbb
mov
fld
scas
xchg
(bad)
xor
pusha
loopne
mov
scas
xchg
outs
cmp
add
mov
adc
pop
fucomp
pushf
hlt
mov
sbb
jmp
stc
push
dec
stos
pusha
fst
jl
or
pop
add
jle
int
xchg
mov
xor
idiv
sub
mov
sbb
inc
jle
test
stos
mov
xor
push
scas
xchg
adc
xor
ret
or
inc
or
into
pushf
inc
(bad)
push
mov
in
jo
loopne
test
mov
mov
mov
mov
loope
jae
inc
cmp
jge
div
or
fcmovu
(bad)
ja
arpl
hlt
and
sub
test
ror
xchg
stc
or
adc
mov
pop
cmp
rep
call
inc
and
dec
fwait
ror
sub
add
dec
lahf
mov
out
and
repnz
cmp
mov
cdq
pushf
sar
rcr
loop
pop
inc
dec
and
call
jecxz
rcl
inc
and
push
jmp
das
retf
ret
mov
repz
adc
dec
or
and
movs
jnp
fnstcw
sbb
retf
cmc
cmps
loop
jbe
pop
lods
(bad)
data16
sti
pusha
inc
mov
sbb
div
jg
push
cmp
dec
scas
xor
mov
test
push
mov
lock
adc
sbb
sub
out
xchg
scas
dec
pminub
and
cmp
bnd
test
and
sub
jae
(bad)
pop
add
stos
cmp
call
jecxz
and
adc
jle
in
pop
push
pop
ss
pushf
es
lahf
xchg
dec
xchg
sar
mov
inc
sub
dec
jl
mul
outs
in
rcr
sar
add
mov
jp
cmp
mov
jecxz
out
sti
lods
addr16
loope
test
ret
ret
test
mov
adc
retf
or
loopne
jmp
pop
sbb
dec
inc
xor
inc
test
fisubr
cdq
inc
add
ret
dec
xchg
inc
mov
enter
in
xchg
jb
jecxz
and
mov
push
xor
xor
cmps
lds
(bad)
in
push
test
jp
out
push
loopne
jg
repnz
adc
std
push
inc
sub
mov
in
in
push
or
jae
out
inc
mov
or
fisub
sbb
mov
sub
pop
stos
inc
mov
(bad)
dec
out
push
pop
pushf
cdq
fsub
mov
push
dec
out
ds
sbb
adc
je
gs
dec
and
daa
jp
int
out
test
cmp
not
outs
lods
cmp
pop
data16
arpl
push
dec
push
scas
push
jg
or
pop
aam
mov
push
(bad)
pop
ret
push
add
sub
add
adc
xchg
cmp
(bad)
xor
dec
sub
xor
pusha
popa
jns
arpl
aam
push
mov
mov
adc
inc
or
jno
ret
adc
fldcw
xor
enter
stos
cs
jg
jmp
xor
xor
xor
push
xor
mov
sub
popf
mov
lods
test
or
cmp
mov
daa
mov
mov
dec
fst
and
jg
add
div
das
popf
jns
jnp
jno
sub
push
cli
sbb
out
lahf
out
rcr
sub
mov
lock
inc
sbb
pop
xor
mov
stc
fld
scas
xlat
mov
addr16
dec
pop
movs
cmps
mov
jmp
fcom
sti
pop
inc
and
sbb
xchg
sub
retf
cmp
add
cmp
push
fsub
ret
cmps
jmp
ss
cmp
xor
retf
sub
call
mov
in
dec
iret
mov
adc
xbegin
sbb
iret
loopne
out
dec
das
mov
rcl
mov
or
repz
popa
sbb
test
je
nop
jecxz
push
test
lea
jmp
inc
pop
and
jno
jmp
mov
cs
imul
cwde
jo
shr
jae
and
or
and
sbb
pusha
jmp
jne
movs
outs
cmp
pop
and
pop
stc
loop
and
lahf
sub
out
inc
stc
cmps
add
(bad)
mov
sbb
call
push
mov
add
ret
ss
rcl
pop
or
mov
test
mov
popf
add
aas
add
push
shr
ret
outs
hlt
adc
jae
jae
push
sub
jmp
add
aas
sbb
hlt
icebp
xor
pusha
ja
mov
or
cdq
aad
adc
push
jg
outs
lds
xor
in
sub
mov
retfw
or
and
sub
in
pop
sti
add
sub
cmp
inc
inc
inc
add
pop
dec
(bad)
fist
add
retf
nop
shl
icebp
(bad)
jbe
sub
shl
je
add
jle
add
push
mov
mov
push
mov
outs
mov
push
movs
test
(bad)
add
jge
test
mov
loope
(bad)
xchg
in
adc
push
mov
(bad)
out
movs
xchg
cmp
shl
jb
retfw
adc
jp
call
push
add
in
cwde
sub
shr
sub
cdq
in
sbb
test
xchg
xchg
cmp
xor
adc
mov
sti
fldz
repz
cmp
adc
mov
mov
mov
aam
pusha
pop
daa
jo
iret
loop
out
leave
in
dec
out
mov
outs
xchg
movs
stc
xchg
hlt
(bad)
sbb
cmps
push
shl
out
adc
addr16
jmp
in
test
cmp
mov
retf
xor
(bad)
and
jp
test
xor
sar
lods
ins
inc
pop
addr16
adc
cmp
xchg
push
out
xor
add
sbb
mov
pop
pop
or
outs
xchg
repz
xor
fsubr
jmp
sub
fimul
gs
or
pop
es
out
aam
int3
in
sbb
xor
das
fdivp
jecxz
add
pop
outs
jmp
push
mov
js
div
cmp
cli
cmp
aam
add
jmp
or
mov
out
jge
push
clc
push
push
xchg
sar
mov
push
cmps
adc
mov
jb
movs
in
pop
mov
xor
jge
sbb
sub
mov
adc
(bad)
sbb
pop
jns
gs
push
jmp
data16
sub
add
ds
jmp
xor
jecxz
jb
repz
pop
pop
sub
xor
pusha
mov
add
xchg
and
cli
pop
dec
xchg
mov
fsub
mov
mov
xor
pusha
or
(bad)
std
xlat
jnp
cmp
ffreep
pop
loop
shl
retf
push
(bad)
out
sbb
test
(bad)
cs
push
arpl
push
aad
lahf
mov
rcl
jmp
int
neg
push
out
icebp
push
sub
xchg
jno
out
mov
mov
add
xchg
int3
inc
pop
mov
dec
ret
xchg
fadd
addr16
scas
lds
inc
mov
push
mov
fcomip
movs
mov
stos
sub
rcl
pop
(bad)
cmc
push
push
pop
push
adc
inc
into
push
pop
adc
int
push
rcr
inc
rcr
mov
lods
dec
test
(bad)
out
lock
not
inc
mov
and
es
in
imul
mov
fwait
cmp
hlt
sbb
inc
icebp
inc
cmp
add
movs
pushaw
sbb
fnstcw
sub
or
out
cmp
sbb
cmps
outs
jmp
dec
xor
in
add
inc
xor
pop
dec
sbb
mov
or
mov
xchg
in
xchg
inc
out
dec
fldcw
hlt
cmp
mov
repnz
aas
or
enter
xchg
ss
and
stos
hlt
lock
out
call
fadd
sbb
call
stc
out
scas
add
adc
enter
cmp
daa
cwde
es
(bad)
aaa
cmp
sbb
push
sbb
jmp
test
jne
in
jle
cmps
jno
cmp
sti
push
adc
sub
pop
ins
push
cmp
sbb
mov
and
lahf
dec
das
out
xor
sbb
std
and
mov
and
jecxz
leave
or
addr16
jbe
push
mov
push
(bad)
or
div
lods
jg
mov
lods
cmp
es
jno
stos
test
mov
xlat
adc
jne
and
push
in
pop
cld
das
scas
xchg
sti
mov
in
push
sub
mov
sub
icebp
scas
fimul
and
(bad)
cmp
cmp
imul
fcomi
sbb
pusha
iret
test
loope
and
mov
shl
fdiv
shl
push
sti
dec
mov
push
mov
loop
loope
mov
imul
dec
je
jbe
scas
ror
loop
pop
neg
ficomp
idiv
xchg
adc
mov
(bad)
pop
dec
sub
mov
jb
mov
add
pop
mov
cmp
daa
push
movs
repz
sbb
adc
int
dec
jecxz
xchg
dec
add
pop
mov
imul
pop
call
mov
and
in
and
cmps
dec
test
and
lahf
ja
add
out
pop
(bad)
rcl
cwde
pop
push
int
or
sub
test
aaa
imul
push
iret
sbb
add
cmp
int3
imul
mov
call
pop
stos
dec
cli
sbb
popa
sbb
cmps
sub
inc
add
clc
adc
mov
lea
fbstp
push
in
cmp
cdq
in
loop
lock
mov
in
gs
cmp
and
or
in
out
jp
add
sti
std
imul
test
outs
mov
shr
pop
(bad)
sbb
clc
daa
sbb
cmc
pop
mov
jne
dec
in
mov
dec
xor
leave
nop
(bad)
daa
test
(bad)
ds
cwde
mov
sub
cmp
push
hlt
dec
test
cmp
push
call
xchg
shr
loope
jecxz
out
lea
mov
retf
sub
leave
stos
inc
(bad)
dec
sbb
test
ror
push
js
leave
dec
add
int
sar
test
pop
mov
retf
xchg
and
inc
fwait
pop
sub
int
sbb
and
pop
xor
cmp
jae
movs
imul
shl
inc
aaa
sub
int3
inc
pop
xor
sub
add
(bad)
pop
add
or
inc
mov
pushf
ss
mov
retf
sbb
cmps
std
mov
push
jnp
les
jg
xchg
mov
sub
xchg
(bad)
cmp
fnsave
and
push
push
repnz
push
pop
push
push
call
push
pop
adc
popf
call
fwait
cmps
lds
xor
popf
inc
mov
xchg
cmp
loop
push
cmp
jo
ins
mov
add
retf
retf
pop
in
inc
ins
mov
cmp
inc
and
js
scas
jmp
clc
stos
xchg
mov
jp
dec
jp
aaa
push
leave
stos
int
fisubr
jmp
mov
(bad)
inc
rcl
push
adc
jmp
sub
and
add
into
inc
or
fnstenv
rcr
repnz
enter
add
cmp
mov
or
adc
cmp
movs
push
mov
neg
xor
pop
and
popf
retf
test
ins
dec
cmps
sbb
cdq
in
adc
mov
mov
ja
popf
repnz
add
fmul
sti
fwait
mov
jbe
cdq
add
push
push
cli
xlat
sbb
inc
sub
lahf
cmp
repnz
pop
icebp
xchg
(bad)
xchg
jb
icebp
setbe
pop
xor
sbb
sbb
push
in
bound
imul
sbb
sahf
push
or
lds
add
fsub
daa
add
jmp
lahf
aaa
jmp
jmp
xchg
sub
cli
and
push
cmp
jmp
rol
vpextrw
and
(bad)
mov
sbb
cs
popf
hlt
movs
cmps
lods
inc
dec
jno
push
cmp
or
push
sub
retf
ret
cs
sub
jns
xchg
cmp
cmp
cmp
cmp
push
test
adc
adc
into
sbb
jb
xor
push
xchg
xchg
inc
ja
hlt
cmps
loop
call
mov
outs
iret
mov
test
and
and
pop
aaa
mov
add
sub
inc
or
repz
fs
jne
cmp
xchg
scas
and
ret
push
xchg
pop
lods
inc
inc
adc
fcomp
aaa
in
xor
enter
adc
sbb
rcr
test
inc
mov
mov
pop
or
je
ret
mov
cmc
push
in
xchg
sbb
push
fdivr
cmp
dec
mov
pop
rcl
outs
and
and
jmp
xlat
repz
aaa
cwde
cld
jmp
pop
sub
push
sti
pop
mov
inc
xchg
xchg
sub
cwde
xchg
mov
test
or
repz
data16
inc
mov
dec
sub
push
data16
out
hlt
pusha
adc
retf
in
add
iret
(bad)
or
jns
jnp
inc
pushf
imul
sbb
loope
push
pop
mov
cmps
out
aad
pop
test
int3
jne
inc
jmp
retf
adc
cmp
retf
inc
lods
sbb
pop
fmul
xor
add
adc
push
cmp
sbb
jl
les
je
cmps
data16
push
mov
jns
imul
inc
in
inc
ja
int3
mov
jns
mov
cmp
pop
lock
push
inc
rcl
frstor
movs
jmp
loopne
dec
jmp
ret
inc
and
jecxz
jb
mov
stc
popa
aaa
cmps
cmc
test
inc
xchg
mov
xor
pop
cs
gs
xchg
lds
inc
pop
mov
pop
gs
mov
xor
cmc
mov
dec
popf
lods
jns
push
and
or
inc
lods
js
adc
cmc
add
pop
push
idiv
xor
sub
xchg
xadd
shl
dec
fldenv
iret
aaa
je
inc
iret
mov
adc
ins
dec
inc
int3
dec
push
in
gs
imul
(bad)
js
out
data16
mov
call
das
cmps
mov
loop
sub
dec
xlat
(bad)
sbb
call
push
inc
pop
push
jns
mov
and
xor
cmp
push
aam
sub
inc
lods
mov
mov
inc
mov
xchg
mov
inc
(bad)
jg
bound
mov
in
push
mov
mov
push
cs
mov
arpl
add
jge
jae
xchg
or
ror
mov
bound
js
xor
pop
mov
xor
cli
xor
cmp
xchg
add
pusha
outs
jo
pop
jae
dec
sti
or
bound
jp
loope
sub
shr
and
mov
xor
(bad)
enter
jns
or
(bad)
fs
mov
mov
jmp
dec
inc
or
mov
mov
push
and
repnz
test
cmps
test
add
dec
fs
sub
icebp
imul
int
cmp
iret
fidiv
in
sbb
push
mov
mov
hlt
fwait
rcr
jp
ins
loopne
mov
sahf
stos
push
daa
das
mov
sbb
adc
loope
xchg
xchg
lock
mov
int3
cli
mov
pushf
leave
loop
std
ss
xor
add
pop
popa
jns
adc
mov
out
sub
mov
push
push
rcl
mov
jge
mov
push
test
aaa
jae
jmp
fs
aad
mov
dec
into
and
iret
jne
xchg
or
call
sbb
ror
push
pop
and
add
arpl
lods
xor
adc
mov
movs
mov
stos
hlt
int
pop
adc
icebp
aaa
sbb
jl
movs
imul
or
adc
into
gs
mov
sub
lea
pop
xor
pop
fld
dec
test
jb
(bad)
mov
inc
repz
mov
jmp
in
mov
cmp
push
xor
dec
sub
inc
sbb
out
push
mov
add
imul
cmp
loop
pop
jbe
mov
ja
scas
sar
cmp
gs
rol
sub
inc
or
repz
push
xor
mul
xor
mov
cmp
sub
or
daa
and
lods
(bad)
add
mov
(bad)
pop
inc
xrelease
idiv
xor
into
xchg
cmc
icebp
lods
(bad)
loope
mov
mov
icebp
stos
repz
and
ins
push
mov
sbb
mov
(bad)
popf
cmp
jne
dec
cmp
sar
or
fs
xchg
test
and
cmp
cdq
popa
or
das
call
inc
or
jne
or
sub
adc
in
mov
mov
fstp
leave
adc
mov
dec
jmp
arpl
push
mov
aam
in
jge
xchg
aaa
or
imul
test
jno
fwait
test
or
cmp
addr16
push
push
sti
in
ins
xchg
pop
sbb
in
arpl
stc
jb
fld
inc
sahf
xchg
cmp
adc
xchg
int3
mov
mov
or
add
mov
mov
and
ja
pop
jg
xor
add
xchg
mov
inc
pslld
or
in
push
shr
frstor
ja
jns
popa
addr16
rol
push
es
aas
sub
addr16
leave
xchg
mov
mov
jb
test
push
adc
or
and
test
xlat
outs
or
es
xor
dec
addr16
fs
loope
rcr
fisubr
mov
mov
inc
rol
xchg
and
jnp
mov
xchg
pusha
call
mov
outs
cdq
or
mov
cmp
xlat
inc
cmps
mov
sub
jmp
push
(bad)
aam
jle
sub
adc
sub
sub
inc
sbb
mov
repnz
ds
out
ins
(bad)
loopne
nop
int
pop
movs
popa
stc
sbb
lahf
sbb
jmp
cmp
jmp
ja
repnz
shl
mov
popf
xchg
out
jle
pop
xor
in
cmp
pop
mov
push
dec
sahf
outs
xchg
movs
xchg
sbb
inc
ins
xor
stc
xchg
outs
jne
popa
jge
pop
cmc
fwait
aaa
jne
mov
cld
loope
idiv
push
inc
ins
mov
cmp
into
je
mov
test
hlt
cld
and
lahf
fwait
std
mov
(bad)
xor
sbb
sti
into
jg
nop
mov
sti
mov
cmp
in
dec
mov
push
pop
shl
mov
mov
jo
dec
xor
adc
push
fld
mov
push
in
(bad)
in
bound
cwde
jg
push
adc
pop
clc
add
cmp
dec
sbb
aas
push
stos
movs
adc
aam
jnp
std
sub
sub
jb
mov
sub
test
xor
popf
or
jno
xchg
cmp
(bad)
lods
push
fs
retf
xchg
jmp
inc
cmps
out
mov
lea
and
mov
push
xchg
mov
nop
pushf
jl
cmp
mov
xor
mov
mov
enter
lock
in
ss
mov
dec
xor
int
je
call
popf
adc
out
and
jecxz
add
jb
mov
adc
xor
xor
aas
stos
popf
movs
je
xlat
fild
jp
add
rcl
stos
push
xchg
lock
outs
test
test
jle
mov
or
out
jae
cli
and
stos
cmc
lds
mov
push
push
bound
shl
sti
ja
cmps
jmp
jmp
jb
daa
out
jge
lds
inc
mov
iret
push
call
sub
or
push
mov
xchg
ud1
jne
int
push
inc
std
jb
xchg
xor
outs
ds
leave
pop
retf
pop
fstp
inc
mov
cs
(bad)
pop
xchg
cmp
or
out
das
adc
mov
sar
pop
loope
icebp
shl
jns
(bad)
dec
jg
lock
fcomp
les
stos
mov
(bad)
test
sub
and
dec
sar
push
popa
ins
mov
inc
sahf
iret
mov
xchg
(bad)
mov
xor
mov
xor
(bad)
cmp
and
dec
(bad)
adc
inc
jl
and
(bad)
cld
pop
mov
test
mov
lea
aam
ds
fmul
mov
mov
or
aad
pusha
popa
sub
push
(bad)
mov
add
leave
push
fs
inc
pop
call
inc
daa
sub
push
jp
movs
push
xchg
out
out
ja
ja
and
ret
enter
fcmove
inc
ins
sub
daa
aad
outs
(bad)
xchg
and
jmp
lods
rcr
adc
inc
nop
sbb
ret
sbb
(bad)
stc
sub
pop
push
push
cmp
mov
shr
test
cmps
ins
dec
mov
clc
test
mov
adc
jae
mov
cmovle
cmp
and
xor
pop
pushf
mov
test
sub
cli
jl
rcr
icebp
mov
fistp
test
icebp
gs
stc
pop
mov
inc
(bad)
jno
mov
bound
sub
mov
imul
jecxz
cmp
ja
pop
shl
xchg
pop
enter
stc
fist
cdq
xor
jg
jno
test
nop
jecxz
retf
mov
sub
and
push
movs
mov
rcl
test
cmp
pop
enter
push
xchg
out
xchg
ret
xlat
mov
mov
sahf
adc
test
pushf
fbld
mov
dec
imul
jne
cli
adc
test
(bad)
mov
add
push
movs
pushf
jne
jmp
in
inc
in
adc
xor
pop
pop
or
mov
mov
xchg
mov
cmp
aam
and
out
test
mov
aam
sti
add
loopne
jmp
or
int3
sti
fstp
fs
add
scas
in
mov
shr
push
pop
sbb
(bad)
pop
mov
sbb
bound
inc
or
sub
xor
inc
xchg
pop
mov
(bad)
push
fisttp
addr16
and
into
cld
je
out
pop
lods
jge
sbb
mov
(bad)
jmp
cmps
addr16
cmps
leave
nop
test
std
adc
xor
jae
mov
ret
cs
sbb
inc
mov
push
popa
cwde
jmp
in
mov
out
(bad)
movs
mov
aaa
(bad)
mov
push
cmp
(bad)
fldenv
fisubr
sub
mov
cmp
or
stos
dec
xlat
add
xor
sbb
mov
sahf
xchg
mov
ja
movs
(bad)
fcomi
shl
mov
(bad)
push
in
outs
mov
jmp
in
test
lea
add
aad
sub
pop
in
pop
jno
cli
repz
shl
lods
repnz
push
cli
xchg
ss
iret
sar
gs
sbb
xor
cmps
leave
ret
sbb
fstp
jne
adc
lods
fiadd
jne
mov
pushf
mov
add
loope
pop
push
or
dec
lock
mov
dec
inc
fnstenv
mov
or
add
and
sub
and
and
pop
stos
jle
jp
mov
mov
ret
dec
push
das
add
sti
mov
cmp
lods
imul
shr
push
and
rcr
push
gs
sbb
sti
sub
sub
and
dec
xchg
adc
les
(bad)
jle
test
stc
and
addr16
leave
cmc
pusha
adc
ins
adc
sub
das
push
std
adc
stos
lahf
adc
xor
mov
cwde
push
int3
jno
or
sub
pop
aad
add
call
push
sbb
add
inc
and
inc
sbb
sub
sbb
inc
dec
fwait
mov
ja
lds
iret
or
ja
mov
xchg
pop
pusha
or
xlat
jge
int
sbb
imul
rol
xchg
imul
ficomp
loop
test
icebp
ja
cmp
jg
pop
ins
popf
sbb
test
push
stos
fs
inc
clc
and
cmp
sti
and
dec
aas
push
add
loope
xchg
loop
add
pusha
scas
shl
jmp
jne
sti
rcl
xchg
pop
mov
dec
pop
jmp
mov
ret
xor
popf
xor
into
andps
pop
or
dec
mov
dec
sub
mov
aam
mov
lock
mov
sbb
mov
sub
test
ficomp
int
mov
ja
mov
enter
and
jno
and
xchg
outs
xchg
mov
sub
clc
push
outs
cli
fstp
jae
add
pop
ins
jge
je
adc
mov
pop
adc
fwait
push
mov
fcom
push
add
arpl
(bad)
aam
dec
lea
mov
in
jl
push
in
xchg
sub
xchg
push
mov
ins
adc
cmp
xor
add
mov
imul
clc
adc
imul
scas
fs
sbb
sbb
xor
les
adc
pop
leave
daa
jns
mov
cmp
xchg
pushf
les
push
loope
push
inc
pop
push
pop
ja
mov
(bad)
sbb
out
stos
sbb
sbb
std
sub
test
inc
add
hlt
dec
adc
cs
or
ins
push
push
sbb
cmp
imul
dec
jle
movs
pushf
adc
or
jl
mov
mov
movs
loop
push
mov
or
(bad)
jnp
jge
jge
pop
sbb
cdq
mov
les
lock
imul
cmps
sub
pop
xor
imul
outs
and
out
(bad)
mov
imul
fnstenv
sbb
pushf
xchg
imul
ds
shl
gs
jb
sbb
add
push
jnp
jno
adc
cs
faddp
push
fnstcw
arpl
ins
pop
push
mov
push
dec
aaa
iret
xchg
mov
in
adc
lods
sti
mov
cmp
call
xor
mov
fs
data16
or
test
mov
mov
add
stos
dec
scas
outs
pop
leave
stos
xor
(bad)
mov
or
je
sbb
lahf
(bad)
mov
out
in
in
ret
add
add
mov
mov
xor
lods
std
enter
retf
fwait
mov
xor
retf
repnz
xchg
ja
jae
inc
and
stos
mov
imul
in
lock
cli
cmps
aaa
xor
pushf
loop
jg
test
mov
push
xchg
mov
stc
push
fsubp
and
sti
movs
inc
sbb
out
repnz
repz
arpl
add
pusha
xchg
fcom
pop
xchg
sbb
jp
dec
fld
jge
xchg
js
xor
or
ss
pop
or
lods
jo
push
inc
cmp
push
cld
pop
ins
imul
into
mov
dec
test
lds
daa
loopne
jp
cmp
jl
adc
loopne
push
das
daa
hlt
cmps
adc
mov
pushf
in
adc
mov
push
stos
or
push
leave
push
nop
push
sbb
mov
mov
sar
call
cwde
cdq
movs
test
add
cmp
and
leave
ins
popa
cmps
adc
js
cld
and
adc
pushf
mov
cmp
or
push
push
cmp
enter
or
dec
call
adc
mov
dec
leave
adc
cmp
jmp
jmp
dec
adc
dec
or
push
xor
hlt
xor
pop
mov
sub
push
(bad)
sub
jb
mov
push
xor
sahf
cdq
pushf
or
add
cmps
cli
push
ret
loope
sbb
test
out
jecxz
cmp
push
test
movs
imul
jne
(bad)
shr
sub
push
push
cmp
fidivr
mov
outs
out
jp
jae
xor
aam
jno
dec
pop
push
adc
out
mov
addr16
sub
push
mov
in
inc
jns
cmps
lahf
or
(bad)
sahf
into
dec
or
shl
mov
push
adc
aam
aad
popa
pop
mov
xor
mov
mov
scas
sbb
leave
test
push
sbb
int3
es
fmulp
jo
dec
pop
xchg
sbb
sbb
(bad)
leave
mov
jo
clc
std
fisttp
sbb
retf
xchg
jnp
arpl
repz
push
mov
jns
sbb
inc
xor
and
sbb
adc
or
dec
fdiv
out
nop
test
add
shr
scas
gs
ins
(bad)
push
cmp
sahf
sti
adc
inc
test
push
(bad)
(bad)
push
pop
and
mov
dec
or
inc
add
jno
inc
retf
jg
bound
gs
or
jge
mov
ja
jge
hlt
cmovge
(bad)
sub
push
jns
cdq
(bad)
lock
inc
pop
jmp
xchg
outs
int3
cld
lods
repnz
sbb
xchg
ins
data16
dec
xchg
clc
xor
jp
test
xchg
inc
pop
inc
xor
push
lahf
sbb
cmps
or
ss
cmp
mov
ins
mov
test
int
aaa
sbb
stos
nop
jb
mov
cmp
adc
sbb
push
jns
ror
clc
hlt
ret
mov
movs
(bad)
or
repz
scas
xchg
jl
into
mov
push
(bad)
dec
aad
pop
jl
mov
aas
scas
dec
xor
pop
aaa
cli
inc
xor
mov
add
sub
mov
js
pop
fbstp
rol
mov
loop
icebp
mov
push
jmp
or
push
fdiv
out
sub
adc
lock
bound
ror
xchg
ss
fdecstp
icebp
out
xor
and
cmc
and
ds
fidivr
xchg
xchg
ret
pop
frstor
or
inc
xor
repz
cmps
mov
xchg
stos
jne
call
jl
and
call
mov
ja
dec
mov
xlat
sbb
int
ror
lahf
jae
mov
cmp
retf
das
outs
shr
std
pop
pop
outs
push
call
movs
mov
(bad)
xor
mov
add
push
ins
pop
xchg
push
push
data16
dec
jo
xchg
mov
bound
cwd
unpckhps
pop
or
jl
mov
(bad)
and
jnp
aaa
es
xchg
pop
inc
sub
jns
hlt
sti
fiadd
sbb
pop
not
fild
not
and
stos
rcr
ror
sbb
jl
loop
das
rcl
or
jmp
daa
push
shl
lods
adc
out
mov
scas
out
add
push
jg
and
jo
sbb
popf
in
push
mov
aad
and
lock
loop
mov
pop
mov
scas
(bad)
xor
outs
or
aad
jecxz
sbb
stos
aas
mov
sti
and
sbb
in
popa
popf
and
mov
fidivr
pop
sbb
mov
dec
mov
or
mov
and
sub
inc
aad
jns
in
xor
shl
outs
in
push
mov
lahf
xor
or
fistp
loop
xchg
popa
and
outs
outs
push
inc
sbb
imul
cmp
les
and
in
addr16
out
or
in
xchg
lea
sub
dec
(bad)
jne
push
retf
and
stos
xchg
or
pop
push
scas
out
xchg
xor
xchg
(bad)
(bad)
push
mov
dec
lods
fldcw
adc
scas
xchg
test
popa
push
mov
dec
pop
xor
jnp
mov
inc
call
and
add
fiadd
js
xor
mov
mov
mov
or
jmp
sub
lock
dec
out
out
clc
sub
jo
pop
shr
fsub
sub
and
sbb
popf
jmp
push
adc
dec
and
xor
shl
inc
pushf
and
fwait
in
push
jnp
jb
xor
outs
out
imul
xchg
push
mov
fldcw
jmp
mov
fidivr
sub
and
mov
mov
stos
push
int
out
sbb
and
(bad)
push
out
jnp
aad
outs
bound
and
vaddsd
ds
pop
loop
dec
adc
mov
fucomp
jmp
arpl
xor
aad
sti
push
push
mov
xchg
mov
fcomp
cmps
inc
aas
mov
iret
enter
push
or
pushf
in
mov
push
fnstcw
inc
fadd
xor
lods
sbb
pop
in
adc
test
fadd
ds
xchg
or
or
lahf
int
into
mov
repnz
movs
mov
pop
call
cmp
es
fs
ret
push
jae
pop
mov
or
jnp
xchg
cs
sub
xchg
adc
leave
pop
xor
lods
into
out
mov
fisubr
scas
scas
push
mov
mul
xor
out
pop
call
enter
and
inc
push
das
sbb
imul
pusha
es
mov
pop
and
xor
push
xchg
sahf
pop
inc
fisttp
dec
mov
bound
gs
loop
into
popa
jb
ror
(bad)
or
stos
(bad)
jo
neg
std
add
test
gs
pop
pop
or
ja
push
retf
dec
push
and
mov
inc
mov
rol
or
jmp
inc
jg
fs
in
adc
mov
rcl
imul
cmp
add
and
cli
cwde
repnz
fst
or
in
(bad)
pop
enter
push
dec
inc
jnp
sub
push
mov
ja
lods
daa
jge
jbe
mov
or
ret
ret
(bad)
icebp
jge
xor
(bad)
call
jae
int3
movs
call
ror
mov
inc
mov
xor
mov
scas
xor
test
sbb
pop
ds
sbb
data16
loop
fdivr
xor
outs
not
pop
jno
out
fistp
stos
shr
(bad)
es
cwde
mov
xor
jmp
mov
xor
jb
lods
mov
add
enter
jp
cmp
mov
jp
or
sub
sar
idiv
dec
push
fmul
or
iret
cmps
fnstenv
dec
leave
nop
sub
xor
jl
js
outs
jmp
inc
or
cmp
inc
(bad)
stos
xchg
jp
fs
jne
lods
and
sbb
test
mov
or
rol
push
stos
inc
pop
and
jno
xchg
mov
sub
xchg
or
das
jb
push
cld
rol
daa
imul
sbb
fistp
in
lods
push
cmp
sbb
(bad)
hlt
add
and
cs
je
hlt
push
addr16
push
bound
mov
icebp
fild
mov
inc
push
jmp
scas
lock
inc
es
push
mov
adc
es
cmp
dec
mov
fwait
push
repz
addr16
cmp
mov
sbb
jnp
shr
push
js
dec
mov
nop
pop
cmp
jo
outs
xchg
and
aaa
and
mov
lahf
push
sub
stc
sti
pop
jbe
sar
add
mov
ins
xor
dec
mul
xchg
out
repz
and
and
adc
(bad)
xchg
add
ja
ret
test
xchg
pushf
add
enter
or
(bad)
dec
popf
out
mov
jmp
mov
outs
dec
jns
pop
addr16
popa
dec
fnstsw
ror
in
gs
jg
cld
adc
popf
pushf
and
adc
dec
mov
push
scas
push
jo
mov
push
mov
test
inc
arpl
aam
sbb
xchg
sbb
mov
push
xchg
mov
leave
pop
add
imul
pop
sar
mov
cmps
ror
popf
arpl
cli
mov
dec
scas
outs
lods
or
jp
jp
mov
call
sub
adc
jb
and
call
sub
test
mov
jb
(bad)
ja
xor
test
and
test
stos
repnz
shl
xchg
add
inc
cmc
jecxz
ds
mov
mov
call
lds
rcr
repz
(bad)
sub
aam
mov
mov
or
mov
xlat
add
pushf
xchg
popa
jle
fwait
jg
lds
int
mov
(bad)
xchg
mov
xchg
test
dec
inc
adc
or
adc
jg
(bad)
jns
adc
pop
sahf
ja
dec
xchg
inc
mov
inc
cmp
xchg
leave
and
call
mul
je
(bad)
or
inc
push
mov
inc
(bad)
jle
stc
pop
call
fcmovb
sbb
xchg
ret
call
mov
ror
and
outs
mov
inc
call
pop
lahf
icebp
mov
jp
sub
jae
fsub
sub
add
mov
movs
daa
mov
aad
in
jb
sub
dec
sub
mov
pop
outs
je
adc
test
loope
fistp
xor
mov
or
push
add
test
test
or
lock
add
ins
jg
push
loope
nop
pop
ins
adc
xor
aam
mov
pop
jge
xlat
or
sub
sub
cmp
loopne
mov
mov
test
push
outs
movs
and
retf
xchg
rol
jbe
xchg
xchg
mov
mov
lods
mov
mov
cmp
inc
pop
sbb
sub
ja
call
(bad)
push
jb
fidivr
rcr
add
das
sti
stc
ret
popa
into
push
pop
adc
sub
xchg
xchg
mov
jmp
sub
pop
inc
jmp
call
ins
mov
mov
jmp
hlt
add
adc
pop
jmp
xchg
cmp
lock
mov
dec
test
mov
dec
je
jp
inc
cmp
dec
movs
dec
xor
sbb
and
add
shl
lds
jecxz
sti
jo
push
push
fcmovbe
sbb
pop
push
dec
mov
sbb
xchg
mov
into
and
div
fnstcw
pop
mov
dec
xlat
repnz
push
(bad)
sar
out
(bad)
dec
jbe
jg
mov
xchg
and
in
mov
pop
(bad)
jae
imul
cmp
fst
xchg
inc
(bad)
int3
jle
ss
add
clc
ret
fcom
out
xchg
jns
adc
cwde
mov
fcmovnu
cmp
pushf
test
or
jp
mov
sbb
mov
test
aad
addr16
out
jmp
ror
jmp
popf
and
adc
test
dec
mov
or
fnstsw
dec
cwde
jp
sub
sbb
(bad)
mov
jg
mov
es
(bad)
xor
test
sbb
scas
sub
pop
aaa
mov
jbe
shl
or
popf
ret
jne
stos
sbb
pusha
adc
call
dec
(bad)
cwde
jle
test
push
(bad)
lock
dec
mov
lock
and
cmps
mov
stc
jo
jno
xor
repz
movs
fbld
test
or
jecxz
or
and
(bad)
in
out
add
ret
jb
inc
shr
out
and
add
mov
pop
xchg
dec
dec
aad
mov
int3
pop
scas
mov
sub
ja
int
pop
jecxz
cmps
add
mov
(bad)
jecxz
push
outs
push
addr16
test
addr16
out
jnp
jge
imul
xchg
fldenv
jg
adc
arpl
das
inc
mov
fs
popf
mov
jp
sbb
cmp
mov
and
adc
sub
retf
push
sub
scas
dec
mov
lods
pop
jmp
lds
dec
cmp
int
ret
xchg
int
lea
inc
gs
dec
std
mov
push
popf
mov
push
jge
(bad)
adc
sub
dec
inc
retf
bound
inc
stos
xchg
xchg
mov
cmc
xor
mov
push
xor
icebp
loop
in
sahf
dec
or
mov
ins
mov
es
neg
sub
jne
(bad)
xor
aad
sub
sub
mov
sub
fstp
cmp
xchg
cs
pop
adc
push
jge
out
rol
mov
stc
xor
jg
stos
stos
(bad)
out
ss
pusha
adc
stc
je
pop
or
mov
mov
into
add
mov
xchg
push
std
jecxz
movs
jge
pop
out
clc
xchg
addr16
push
test
pusha
popf
mov
add
jae
inc
das
(bad)
iret
sbb
or
sub
or
adc
inc
aam
imul
mov
push
outs
mov
ret
mov
and
xor
imul
inc
pop
test
daa
mov
inc
mov
pop
arpl
aaa
jmp
fcomp
fwait
lahf
mov
stc
jge
mov
imul
pop
adc
inc
fimul
sub
(bad)
repnz
inc
sahf
mov
push
lock
jl
sub
push
gs
iret
sub
sbb
leave
or
or
dec
sahf
adc
push
ret
dec
fisub
aam
test
sti
fist
je
js
and
repz
adc
jno
es
gs
mov
lea
sbb
xor
sub
into
int3
and
and
and
mov
jmp
add
jo
jg
sti
and
mov
jecxz
inc
xchg
call
xchg
add
stos
ins
rcl
repnz
mov
ins
xchg
loop
cwde
xor
xchg
mov
(bad)
pop
jnp
enter
mov
mov
cld
sbb
shl
idiv
js
data16
push
cmps
fdiv
inc
repz
adc
pop
inc
sbb
push
push
dec
push
ss
psllw
dec
dec
movs
pop
inc
movs
and
imul
dec
out
mov
xor
sbb
icebp
xor
leave
mov
cmp
push
pop
and
xor
dec
or
lods
fld
mov
ins
mov
push
lods
dec
xor
add
je
cmp
retf
jg
movs
push
stc
mov
jb
unpcklps
jecxz
test
call
cld
icebp
mov
push
inc
cdq
adc
adc
cli
push
call
jge
dec
aas
lock
clc
xor
stc
adc
out
mov
lds
repz
repz
jo
and
test
int
je
ins
in
test
and
fwait
cld
add
dec
fidivr
cs
mov
shl
je
or
(bad)
push
dec
clc
jecxz
push
movs
jbe
cdq
dec
dec
jmp
mov
cdq
ins
in
push
add
mov
xchg
or
les
push
xchg
repz
leave
push
add
in
stos
xchg
mov
sub
jne
stc
jne
or
cmps
xor
aas
(bad)
(bad)
and
lock
std
mov
add
add
test
pushf
sub
std
ins
daa
pop
in
push
push
jmp
adc
jb
jo
jge
mov
cmp
adc
cs
xchg
fldcw
enter
jmp
imul
pop
mov
jle
ret
out
mov
mov
jno
sub
cmc
pop
xchg
sbb
shr
adc
gs
mov
scas
rol
mov
add
add
mov
or
ret
xlat
sub
mov
lods
adc
popf
push
jecxz
mov
xchg
fcomp
xlat
push
in
xchg
inc
pusha
inc
mov
add
add
push
ds
mov
fwait
(bad)
stos
xor
nop
movs
and
stos
xchg
js
push
sbb
inc
sub
retf
inc
(bad)
cmp
imul
pop
add
cmp
leave
add
scas
scas
outs
int3
(bad)
enter
cmp
neg
cwde
xbegin
or
shr
xchg
(bad)
cs
(bad)
int
pop
xchg
scas
jecxz
xor
xchg
or
mov
push
test
stc
xor
inc
mov
sbb
pop
retf
mov
cmp
jle
cmp
pop
retf
dec
in
xchg
lods
into
cmp
(bad)
les
fld
fxtract
inc
iret
pop
fs
mov
mov
push
icebp
retf
sbb
addr16
das
fs
lds
ss
sbb
jmp
(bad)
aam
xor
dec
cmp
xchg
mov
xchg
push
add
xchg
add
retf
xchg
and
mov
ror
push
and
rcl
rol
out
out
jno
lahf
xchg
mov
(bad)
rol
push
mov
stc
and
sbb
xor
aad
ror
mov
jle
sahf
aam
icebp
cmps
mov
push
sub
hlt
retf
pop
jecxz
push
icebp
int3
and
push
mov
mov
xchg
(bad)
gs
or
je
pop
ja
repz
and
xor
sub
sbb
jp
push
sbb
dec
mov
sbb
dec
fcmovb
xchg
lods
(bad)
jnp
sub
add
js
inc
jo
cmps
inc
adc
cmp
fs
or
out
(bad)
out
pop
push
dec
test
jae
imul
dec
dec
adc
xor
ds
leave
int
pop
movs
cld
and
addr16
fwait
(bad)
iret
int3
clc
push
push
sti
add
imul
popf
pop
pop
int
cmps
dec
test
mov
sbb
mov
out
cmp
pusha
cmc
push
mov
jns
mov
inc
cwde
mov
lods
rcl
mov
mov
jl
pop
mov
xor
arpl
icebp
jmp
pop
or
arpl
or
jg
mov
outs
pop
pop
ins
pop
and
mov
fidiv
dec
mov
pop
in
pop
sbb
sub
hlt
shl
xchg
(bad)
xchg
jbe
out
and
mov
jmp
aas
mov
icebp
cdq
push
jp
mov
xchg
test
fwait
inc
adc
sbb
and
fcom
lock
outs
pop
mov
mov
out
fcom
pop
or
adc
lock
adc
pop
dec
jecxz
popa
fucomi
lahf
inc
outs
movs
dec
jge
adc
add
and
scas
push
mov
xor
sub
push
scas
in
stos
xadd
repnz
cmc
ror
push
mov
popa
xchg
jecxz
in
sbb
lea
(bad)
mov
mov
mov
stos
mov
xor
in
jg
adc
shl
in
mov
sbb
xor
imul
xor
sbb
dec
test
mov
fsub
mov
mov
add
(bad)
and
mov
test
adc
lods
mov
das
mov
ja
lods
fidivr
and
fld
dec
lods
mov
cs
mov
mov
and
cdq
inc
and
cmps
mov
mov
mov
cmp
jb
js
mov
retf
fidiv
retf
shr
dec
bound
add
ja
(bad)
mov
push
sbb
mov
push
fs
std
add
imul
enter
jno
in
xchg
jne
daa
dec
mov
or
pop
adc
hlt
lock
mov
push
add
cmc
add
push
or
call
mov
ds
loop
adc
mov
aam
fild
cmc
add
jg
in
mov
stc
push
mov
std
xor
retf
mov
iret
or
ror
hlt
xor
fdivr
or
sbb
jno
int
or
cmp
fdiv
xor
push
lods
inc
imul
(bad)
or
dec
inc
mov
int3
mov
repnz
inc
dec
mov
cmp
jmp
lock
mov
mov
popa
shl
cmp
sub
fadd
jmp
inc
and
aad
bound
mov
add
cmp
test
add
scas
les
lea
and
push
sbb
or
mov
pop
sbb
enter
add
jns
mov
sub
icebp
mov
repnz
add
into
mov
(bad)
pop
mov
aas
jge
test
jae
pusha
adc
and
ret
push
lods
arpl
jb
push
push
xchg
sub
and
push
cli
bound
inc
ss
aam
mov
pop
aam
mov
push
outs
and
and
sahf
jo
xchg
jge
call
lock
or
xchg
push
mov
xchg
scas
push
xchg
rol
xor
sar
pop
mov
in
lods
call
ins
add
dec
sub
jge
mov
lahf
rcl
ret
cdq
call
mov
pushf
push
arpl
pop
les
push
cs
sti
pop
outs
call
ret
xlat
xlat
imul
or
cmp
pop
lahf
icebp
cmps
xor
in
xchg
mov
jl
mov
mov
sub
in
sbb
aaa
sbb
inc
mov
lods
push
push
pop
aaa
loope
pusha
adc
xor
or
inc
or
pop
pop
jae
mov
dec
rcr
sbb
into
loope
xor
(bad)
(bad)
cmp
pop
daa
dec
cmp
aad
adc
in
out
sub
or
pop
les
test
jno
jnp
and
cdq
inc
bound
je
jbe
pop
mov
sub
add
ins
add
call
cmc
mov
inc
into
or
push
repnz
sub
in
(bad)
in
(bad)
push
int
arpl
adc
das
sbb
ja
mov
push
adc
fbld
adc
jnp
sub
inc
addr16
neg
pushf
test
xor
pop
ret
xchg
pop
daa
(bad)
popa
sbb
jo
sub
push
xor
push
movs
add
pusha
mov
lds
sub
dec
mov
pop
and
js
ja
mov
or
fidiv
aas
in
loop
ror
push
ss
inc
in
rol
mov
cmp
push
pop
jns
mov
mov
cmp
xor
xor
jb
inc
out
mov
aam
call
mov
cmps
fwait
mov
or
mov
scas
pop
loop
scas
mov
test
mov
fadd
(bad)
sbb
sbb
pop
adc
add
cdq
and
or
aam
pop
xor
mov
(bad)
test
mov
dec
fisttp
mov
xchg
int
clc
push
mov
(bad)
(bad)
jmp
mov
add
push
inc
in
jle
retf
out
xor
jne
xchg
or
fisubr
push
push
ret
mov
push
add
push
xor
lock
sbb
in
xchg
or
and
mov
and
inc
push
imul
xchg
(bad)
rol
outs
push
mov
or
lods
add
add
mov
leave
push
mov
mov
leave
mov
sahf
dec
xor
sbb
ficomp
aad
xchg
aaa
fs
push
push
(bad)
mov
test
adc
jne
mov
mov
mov
aas
jmp
cmc
mov
cmc
xchg
and
or
cmp
jg
leave
loop
mov
fcom
imul
mov
aaa
iret
int3
imul
sub
mov
and
xchg
(bad)
div
push
sar
mov
fs
jmp
xor
xor
dec
out
in
js
sub
dec
push
ja
cli
fsub
pop
dec
inc
mov
mov
rcl
add
jae
xlat
stos
mov
push
inc
ins
inc
adc
shl
cmc
or
hlt
push
test
or
std
fdiv
sar
stos
enter
and
push
imul
call
xor
das
call
xor
aad
add
bound
ins
or
mov
neg
mov
arpl
xor
push
or
add
inc
mov
cmps
imul
loope
mov
mov
xchg
mov
test
sti
jbe
lock
or
mov
mov
(bad)
fadd
mov
push
mov
in
dec
mov
test
fxch
shl
fadd
cmp
call
xor
push
pop
imul
mov
cmp
jb
loopne
and
(bad)
jmp
(bad)
retf
push
ficom
je
xor
sub
xor
outs
lahf
jo
int
movs
inc
(bad)
in
push
sahf
retf
add
mov
or
retf
test
jb
in
and
sbb
push
sub
sbb
mov
dec
fs
pop
movs
dec
dec
inc
mov
retf
(bad)
xchg
sbb
leave
cwde
mov
dec
jp
pop
jbe
cld
push
push
xchg
adc
sbb
das
aaa
push
arpl
pop
dec
jle
xchg
or
loop
adc
inc
loopne
jp
scas
cmp
and
mov
push
out
cmps
ret
or
outs
mov
pop
sub
mov
sbb
mov
cli
daa
add
or
sbb
scas
push
sub
retf
push
dec
dec
pop
add
es
mov
xchg
fistp
fwait
scas
push
loop
xchg
mov
dec
sbb
lahf
adc
repnz
stc
jg
leave
mov
ins
push
dec
mov
mov
jne
mov
mov
and
es
lea
sub
into
mov
cmps
cmp
shr
mov
xor
loop
adc
repz
lea
adc
mov
mov
adc
hlt
mov
or
fcmove
std
push
push
pop
adc
inc
jmp
cmp
and
xchg
dec
aam
inc
test
fwait
pusha
and
inc
lds
call
dec
mov
(bad)
mov
retf
dec
movs
sub
clc
xchg
retf
mov
into
xor
or
lahf
sub
sbb
lds
out
hlt
pshufw
ja
sti
or
xor
sbb
cmp
push
mov
push
sub
stc
sti
jo
enter
outs
fist
inc
rcl
pop
push
pop
lods
nop
arpl
aam
sbb
push
addr16
loop
sti
jne
sbb
mov
fcmovb
sbb
cmp
mov
int
addr16
sti
arpl
int
hlt
fnsave
sbb
jmp
jne
sub
repz
hlt
stc
inc
xor
fmul
push
adc
xor
pop
jno
or
cld
loopne
xlat
leave
mov
push
push
addr16
jecxz
out
lods
das
adc
stc
inc
sub
and
sub
dec
mov
dec
retf
fsqrt
add
cmps
push
call
xchg
xor
imul
mov
mov
dec
cmp
mov
mov
mov
daa
stos
inc
sub
popf
in
xchg
rcl
pop
xor
rcr
dec
das
jmp
sub
fwait
clc
dec
inc
and
xchg
add
cmp
iret
jg
dec
test
stos
mov
dec
or
sbb
push
mov
push
test
icebp
sbb
imul
int
lods
and
adc
mov
dec
popa
jbe
push
dec
xchg
loop
mov
or
cmp
lahf
jl
push
test
aas
mov
shl
mov
in
xor
imul
es
push
push
pop
xchg
sbb
enter
out
(bad)
les
inc
cld
cmp
iret
movs
dec
lock
loop
mov
jbe
push
jb
ficom
pop
jg
loopne
ret
adc
enter
test
fdiv
mov
mov
mov
jle
pop
fwait
mov
test
jmp
jge
(bad)
aas
or
dec
shr
out
cmp
ret
rcl
movs
pop
sbb
es
test
push
push
iret
xor
or
repz
jo
hlt
int3
repz
rcr
fisttp
dec
jmp
add
(bad)
sti
call
stos
ret
xor
cmp
or
out
mov
jns
inc
pop
mov
shr
or
in
pop
inc
jp
adc
call
sub
xor
jge
div
not
(bad)
aad
pop
or
pushf
fnstcw
jne
xchg
fstp
xlat
enter
xchg
xchg
clc
push
mov
test
inc
imul
loop
dec
inc
js
mov
dec
or
aad
cmc
scas
xchg
xchg
mov
cmp
(bad)
pusha
data16
mov
out
add
xchg
(bad)
pop
fmul
clc
int3
cmp
xchg
imul
jbe
daa
sbb
or
push
jl
jmp
das
xor
mov
je
xor
and
out
pop
imul
(bad)
cmp
arpl
int3
mov
movs
pushf
ins
inc
lods
inc
sahf
push
ins
not
mul
cmp
out
jecxz
xlat
icebp
lods
push
iret
mov
mov
int3
pushf
shl
inc
push
and
push
outs
jmp
pushf
sbb
adc
or
rol
cld
jp
add
loop
pop
adc
pop
sub
mov
push
(bad)
popa
pop
stc
fadd
jne
int
pop
jle
ss
inc
repz
repz
dec
cwde
add
retf
sub
cwde
data16
and
xchg
xchg
cmp
in
mov
push
les
push
push
and
mov
test
mov
and
fs
sub
mov
mov
mov
out
xchg
mov
jbe
popa
mov
sbb
jl
in
lods
enter
stos
ss
push
scas
movs
xchg
out
mov
or
aas
bound
push
jne
int
lock
sub
or
neg
ror
rcl
imul
or
retf
repz
jb
cmps
fbstp
xchg
out
ret
popf
es
pop
out
out
into
hlt
pushf
cmps
addr16
sbb
mov
repz
cmp
pusha
dec
out
stos
and
mov
jge
adc
loopne
hlt
sub
xchg
or
clc
pop
and
jmp
movs
sbb
imul
sub
sbb
xor
mov
mov
das
xchg
ins
(bad)
cmp
dec
ret
scas
pop
test
push
jmp
in
add
jle
pushf
xor
(bad)
and
inc
pusha
sub
stos
out
mov
mov
mov
in
inc
mov
xchg
and
jg
cld
jle
fisttp
or
push
call
or
gs
mov
ret
sub
inc
retf
adc
(bad)
stc
jae
xlat
aas
scas
inc
cmps
adc
test
hlt
add
cmp
dec
inc
pop
cmp
das
sub
test
fdiv
push
imul
pop
mov
xor
jle
out
mov
lea
jno
sub
sbb
in
or
push
es
lock
daa
dec
out
int
fs
jmp
shl
inc
push
mov
mov
xor
ins
scas
cli
jge
dec
mov
les
aam
and
dec
int3
sub
xchg
rcl
rcr
sub
pop
mov
test
xchg
cmps
pop
out
addr16
retf
mov
test
shr
in
mov
sub
mov
scas
in
xor
cld
jg
jle
pop
test
ret
imul
fadd
mul
ins
shl
add
cmc
test
nop
aas
not
mov
adc
rcl
rcr
xchg
mov
and
pop
out
inc
fcom
daa
pop
or
xor
mov
loop
and
add
jp
sbb
sbb
in
pop
ins
and
sahf
xchg
and
ss
sar
outs
fwait
ds
mov
dec
mov
xlat
(bad)
mov
fdiv
xchg
and
sbb
pop
scas
adc
dec
(bad)
jl
mov
push
dec
pop
fiadd
aas
sar
out
sbb
out
test
gs
pop
mov
and
jno
inc
(bad)
xor
fcomip
and
fisttp
mov
or
mov
ss
adc
jb
mov
jp
icebp
cmp
mov
mov
jge
fstp
cwde
xchg
pusha
aaa
add
cmps
cmp
inc
mov
dec
int
leave
mov
imul
nop
push
jb
xchg
addr16
popf
lahf
mov
adc
or
mov
sub
repz
dec
sbb
cmp
mov
mov
movs
jmp
sub
aam
push
leave
inc
xchg
retf
sbb
(bad)
mov
and
(bad)
imul
daa
hlt
fcomp
daa
jmp
pop
cmp
add
dec
jmp
mov
in
repz
aam
into
and
sar
imul
jb
mov
fadd
cmp
ret
mov
enter
dec
xchg
ret
add
ds
push
aam
xor
push
fidiv
xchg
jl
and
inc
fucomip
add
cld
add
fs
inc
dec
arpl
inc
adc
rol
in
mov
nop
add
adc
mov
imul
popa
add
adc
stos
mov
scas
iret
inc
xchg
aam
sbb
fwait
shl
aas
aaa
sar
xchg
fstp
in
leave
xor
in
inc
or
push
pop
out
push
and
sub
inc
pop
(bad)
pusha
pushf
push
mov
xchg
out
xlat
outs
outs
int3
icebp
mov
inc
(bad)
mov
mul
es
js
movs
movs
enter
das
sbb
fs
popf
mov
cmp
imul
sbb
xor
push
sub
xchg
mov
adc
push
lods
jecxz
fisttp
retf
add
xchg
cmps
imul
fsubp
lods
aaa
dec
xor
pop
nop
call
arpl
fldenv
test
dec
mov
inc
push
sbb
(bad)
pop
mov
push
out
cmps
inc
cmc
xor
push
pushf
shl
(bad)
cmp
mov
add
test
push
mov
in
xor
xor
jne
jne
imul
fstp
pop
(bad)
inc
add
shl
test
inc
adc
pop
aad
xchg
sahf
(bad)
pop
adc
movs
cdq
xchg
fwait
xchg
xchg
fisttp
enter
lea
retf
iret
add
inc
mov
pop
(bad)
mov
popf
cmp
call
mov
repz
pop
mov
movs
sti
fld
aas
fidivr
mov
adc
push
mov
int
fst
loopne
inc
cld
dec
shl
or
adc
in
xchg
sar
enter
pop
xchg
repnz
in
adc
(bad)
stos
iret
cmp
popa
int
sub
loope
mov
ss
inc
movs
lea
add
sbb
test
push
ror
xchg
adc
xlat
jg
push
mov
pop
rcr
loopne
lods
outs
pusha
and
dec
in
jmp
or
or
cmc
xor
int
adc
cdq
fmul
imul
repz
jno
mov
xchg
and
inc
loope
ficom
cld
sbb
mov
stos
and
(bad)
(bad)
cmp
add
cld
lods
mov
shl
iret
add
push
movs
ror
fldenv
mov
mov
inc
jl
fcom
push
pop
jns
hlt
push
push
jmp
call
loope
neg
mov
mov
ret
test
add
jmp
retf
repnz
rcr
xchg
sub
mov
push
in
mov
inc
push
lods
adc
aaa
cld
pusha
out
mov
paddusw
(bad)
fisubr
das
cdq
shl
fidiv
sub
sbb
sbb
or
pusha
sub
sbb
rol
jg
bound
push
cmps
cmp
loop
out
inc
xchg
clc
mov
mov
push
xor
add
movs
and
fnstenv
dec
cmp
jmp
nop
in
jo
cmp
or
mov
mov
mov
shl
dec
out
aas
fidiv
pop
rcl
add
lods
dec
daa
adc
sub
pusha
mov
rcr
cmps
arpl
sar
push
jle
sub
nop
mov
loop
retf
jmp
inc
cmc
fst
pop
adc
dec
xchg
iret
lsl
xchg
mov
cmp
sbb
xchg
push
sbb
jmp
and
mov
mov
cmp
fsubp
or
mov
ror
push
(bad)
fstp
bound
cli
cwde
jo
sbb
or
add
call
xor
sub
sub
mov
dec
add
xchg
mov
jo
fsub
mov
in
jmp
xor
movs
gs
push
pusha
jne
out
(bad)
mov
sbb
icebp
ins
popf
ss
mov
xchg
stos
scas
les
mov
xchg
jnp
adc
rcr
or
and
sti
mov
cli
jbe
jl
adc
call
fucomp
add
push
add
cmp
lock
sbb
xor
inc
aam
lea
dec
inc
(bad)
fmul
dec
pushf
mov
lods
xor
lahf
stc
movs
shl
addr16
pop
sbb
les
cmps
push
or
pop
popa
mov
push
in
enter
pop
push
clc
xor
out
fld
fcom
repnz
push
stc
xlat
sbb
shr
sti
jnp
or
sahf
push
mov
fidivr
fwait
je
push
mov
out
or
(bad)
icebp
or
mov
or
loop
mov
sub
and
int3
mov
cmp
aas
and
fcomp
mov
lock
and
mov
lea
cld
into
mov
xchg
sub
int
pop
loopne
in
cs
imul
add
das
in
pavgw
mov
cmp
mov
(bad)
sbb
sub
ss
add
popf
ret
add
cmc
jae
xchg
(bad)
dec
pop
cmps
mov
pop
pop
mov
and
(bad)
cmp
pop
(bad)
enter
not
cmc
hlt
dec
ror
in
repz
dec
(bad)
pop
ret
outs
stos
add
imul
cmpxchg
fwait
mov
lods
popf
lods
loopne
fild
mov
imul
push
mov
out
dec
xchg
fnsave
inc
jle
mov
inc
inc
xchg
push
mov
data16
sub
xchg
cs
out
test
fidivr
inc
(bad)
mov
mov
ret
fcmovu
jecxz
add
or
(bad)
rol
mov
in
std
xchg
sub
add
stc
ins
pop
add
cmp
pop
pop
push
cli
es
add
popf
xor
lahf
jmp
ins
out
rcl
icebp
xor
push
shl
inc
adc
mov
das
bound
push
dec
test
mov
xor
aas
pusha
and
jecxz
sub
jl
xchg
and
stc
push
dec
xchg
movs
inc
test
aaa
sahf
jge
sbb
aas
iret
(bad)
pop
cmc
sbb
retf
les
lahf
jl
push
pop
pop
pushf
sbb
cmp
into
xchg
daa
mov
pop
mov
pop
(bad)
(bad)
in
fisttp
(bad)
ja
dec
xor
pop
add
adc
cmp
sub
or
adc
mov
fcom
xchg
add
stos
xor
aad
repz
or
clc
push
retf
jae
inc
xchg
sti
jp
mov
out
jne
and
pop
sbb
jl
dec
jbe
sub
mov
mul
adc
cmp
inc
loopne
or
js
mov
or
add
cmp
das
jecxz
mov
adc
inc
lods
and
add
fistp
dec
push
bound
add
xor
je
es
and
or
add
mov
shr
aas
arpl
xor
arpl
inc
pop
nop
dec
daa
mov
ins
shr
imul
mov
(bad)
fldenv
pop
dec
sar
jno
sbb
xor
dec
mov
dec
push
adc
push
xlat
fld
pop
lock
jo
add
or
lds
lods
leave
pop
bound
add
mov
xchg
cmps
push
mov
data16
in
mov
retf
dec
add
aam
cdq
mov
daa
pop
pop
ret
mov
(bad)
rcl
lds
imul
xor
ror
inc
int3
xor
fcomp
addr16
sbb
jmp
cmp
mov
or
std
push
daa
ror
adc
(bad)
sub
iret
repz
aam
mov
jle
xchg
fwait
xchg
jne
pop
or
dec
test
cmps
sub
mulps
push
imul
xor
push
dec
mov
mov
and
test
fidiv
push
imul
mov
inc
mov
push
mov
mov
dec
addr16
push
test
test
out
jo
dec
jo
and
xor
popa
push
imul
shr
sbb
or
pop
test
and
fiadd
es
lea
jnp
sub
or
jns
and
fnsetpm(287
rol
dec
mov
jns
(bad)
dec
push
shr
jle
xor
xchg
arpl
xchg
sub
dec
add
aam
or
pop
retf
inc
sar
pushf
dec
mov
(bad)
mov
mov
scas
or
mov
(bad)
mov
xchg
inc
or
clc
scas
xchg
mov
enter
into
les
pop
dec
xor
sbb
dec
(bad)
stos
jl
out
(bad)
xor
jb
shr
inc
cmp
(bad)
jae
dec
scas
popa
cdq
pusha
sar
jmp
inc
pop
lea
mov
cmp
push
mov
pop
movdq2q
(bad)
and
in
clc
std
scas
pop
movs
retf
pop
retf
pop
and
jb
mov
aaa
xchg
push
fst
sbb
xor
push
adc
mov
pop
dec
mov
cmp
add
sub
mov
stos
icebp
pop
mov
dec
mov
cwde
xchg
fs
or
pop
movs
mov
push
iret
sbb
aam
adc
ret
inc
fnsave
test
mov
dec
sbb
sbb
stc
cdq
dec
xchg
xchg
test
jmp
pop
rol
jo
and
pop
daa
in
mov
stc
ret
rcl
mov
imul
mov
or
mov
js
ds
pusha
xchg
(bad)
mov
sbb
jns
clc
dec
scas
pop
inc
dec
or
shr
mov
xchg
loop
jp
lods
push
and
fcomp
jmp
dec
add
out
mov
mov
inc
pushf
loop
xlat
les
push
dec
ja
adc
or
rol
ss
or
idiv
adc
push
sti
inc
and
aad
icebp
(bad)
imul
mov
pop
or
loopne
test
or
mov
shl
into
jp
mov
out
mov
pushf
xchg
adc
cs
aam
in
push
mov
popf
mov
call
mov
jmp
lods
xor
cmp
dec
shl
out
in
jl
loope
xor
and
js
cmp
movs
jb
retf
pop
cmp
fwait
outs
cmp
push
sub
aas
test
or
jg
push
ret
cmp
mov
xchg
in
jns
jbe
pop
int3
xor
pop
xor
call
add
and
mov
into
mov
and
or
mov
cdq
inc
sar
daa
aad
loopne
aas
sub
jne
stos
icebp
shl
mov
leave
jbe
xor
enter
scas
pop
mov
arpl
xchg
sbb
ror
fimul
add
iret
not
stc
jmp
push
pop
pusha
popf
loop
dec
jp
inc
pop
jbe
fmulp
inc
lods
sti
test
sbb
outs
jae
and
scas
aam
or
push
mov
mov
mov
push
call
xchg
adc
repz
push
xlat
rcl
mov
and
out
dec
push
cmp
mov
mov
xor
repz
ja
sar
lods
shl
enter
cmp
and
jmp
push
mov
mov
mov
stos
mov
jp
gs
out
repz
repz
in
mov
in
mov
cmp
dec
pop
daa
xchg
cli
out
jg
sbb
add
xchg
cmp
adc
pop
out
enter
xchg
mov
sbb
in
push
mov
push
fs
cmps
add
int3
aas
adc
cmp
sub
jmp
std
js
out
push
xor
call
clc
mov
and
dec
mov
sar
mov
inc
test
adc
push
sub
push
nop
xor
mov
or
jnp
leave
pop
in
push
xor
dec
mov
dec
mov
xor
adc
inc
rcr
cmp
out
(bad)
xchg
icebp
imul
cmc
xchg
push
mov
ret
test
sbb
or
mov
gs
cs
inc
out
repnz
jecxz
and
call
sbb
imul
(bad)
xor
call
cld
test
xchg
jl
leave
sub
in
rcl
sub
mov
mov
aam
jbe
stos
or
gs
inc
push
cld
sub
fisub
nop
ss
rol
movs
fimul
rcl
push
retf
fmul
xor
xor
jbe
push
jl
int
hlt
xor
lahf
and
mov
sar
js
pop
xchg
xlat
pop
imul
lods
in
cld
rol
sti
mov
idiv
push
in
and
add
or
repz
mov
call
outs
sahf
into
adc
out
push
add
cmps
mov
adc
cmp
fwait
jg
les
pop
dec
mov
repnz
movs
test
retf
js
out
js
dec
cmp
loopne
pop
add
mov
fisttp
rcl
xor
(bad)
gs
loope
es
leave
jne
repz
(bad)
mov
ins
push
pop
das
inc
pop
ins
fldcw
repnz
iret
xor
push
xor
enter
repz
xor
les
inc
add
shr
sub
or
adc
push
mov
cmp
sahf
shl
jmp
iret
(bad)
lock
dec
shl
les
fisub
lods
sub
xor
inc
(bad)
mov
int3
scas
retf
mov
xor
push
inc
int3
clc
jno
fsubr
xchg
lock
xor
loop
add
stos
shr
push
sub
leave
jno
andps
cmp
adc
call
repnz
out
xchg
lock
inc
je
cdq
jl
inc
dec
inc
test
cli
jle
pop
or
mov
mov
nop
or
sub
fistp
jmp
jbe
jp
mov
es
sbb
mov
pop
jno
ret
adc
mov
retf
add
call
push
out
fidiv
push
jg
repnz
rol
cmp
and
rcr
xor
or
(bad)
adc
(bad)
frstpm(287
test
pop
sub
or
sub
ror
add
pop
and
(bad)
mov
push
lahf
push
mov
iret
or
test
xlat
inc
push
mul
jecxz
pop
xchg
fidiv
js
push
xor
pop
mov
cmp
rcr
dec
ja
add
mov
movs
adc
repnz
jb
mov
rcl
adc
inc
into
loop
inc
cmp
test
mov
out
jne
mov
in
pop
mov
pop
jl
in
or
xor
pop
imul
out
ds
cmc
lods
adc
lds
dec
mov
test
xchg
aaa
mov
pop
inc
mov
retf
pop
neg
xor
pop
pop
and
add
rcr
push
pop
addr16
iret
daa
outs
mov
xor
bound
jecxz
loope
sbb
retf
imul
ds
cmp
fucom
and
jo
inc
xchg
push
cmp
xchg
aam
push
push
cmps
or
out
mov
loopne
sti
cdq
inc
retf
cld
div
xor
mov
mov
jl
sbb
cmps
jge
lods
loopne
cmps
and
mov
jb
aaa
test
ror
cmps
xor
jo
cmc
dec
or
ins
mov
jo
xor
sbb
xchg
ins
adc
sub
test
mov
icebp
repnz
dec
int3
jb
lods
push
mov
(bad)
xor
sbb
shl
and
dec
movs
addr16
jmp
cmp
jp
movs
pushf
dec
and
mov
adc
jne
ficomp
or
dec
aad
fdivr
stc
aaa
mov
dec
mov
pop
xchg
mov
push
shl
mov
repz
pop
dec
gs
cmp
in
dec
(bad)
fucomi
push
mov
mov
hlt
and
jbe
das
inc
mov
push
js
jne
pushf
add
cli
add
(bad)
loop
nop
lods
pop
addr16
add
jno
loopne
mov
hlt
push
mov
mov
mov
int3
outs
pop
mov
xlat
xor
outs
(bad)
js
out
mov
mov
and
imul
sub
(bad)
sub
inc
call
js
shl
nop
test
leave
sub
pop
jae
push
popa
adc
(bad)
clc
loop
jmp
xor
dec
les
mov
mov
jle
mov
dec
push
and
and
push
mov
jb
xchg
mov
ss
push
data16
fld
(bad)
lock
pop
movs
stos
loope
add
lods
inc
daa
mov
(bad)
in
fwait
pushf
mov
imul
sub
daa
push
xchg
test
xor
call
out
cld
ror
aaa
imul
rcr
inc
dec
out
or
pop
xor
and
movs
jno
mov
jbe
repz
adc
les
lods
mov
xchg
inc
pop
sbb
inc
ss
jge
(bad)
(bad)
enter
xor
mov
adc
mov
hlt
push
jnp
sub
jns
jmp
jns
inc
lahf
sub
arpl
cmp
imul
push
mov
sbb
xchg
mov
mov
dec
scas
cli
inc
adc
xchg
jl
cli
xor
pop
cld
cld
sbb
add
push
pop
lock
dec
addr16
cli
cmps
sbb
(bad)
rcl
mov
test
(bad)
enter
pop
scas
hlt
xor
xor
inc
lahf
shr
(bad)
pop
mov
add
ret
popf
test
jecxz
out
in
mov
shr
cmps
or
ins
xor
mov
retf
pmulhw
cs
lods
dec
sub
add
inc
retf
test
jns
(bad)
mov
out
pop
lock
pushf
loop
loop
fst
jmp
sbb
jge
add
inc
imul
sbb
mov
retf
jle
hlt
jmp
add
cmp
frstor
or
mov
push
ss
loope
add
mov
repnz
adc
push
jle
dec
jns
lods
mov
cdq
sbb
popa
imul
sub
pop
cdq
loop
adc
mov
mov
or
repz
bound
jne
adc
int3
fisttp
loopne
push
retf
dec
cs
fwait
imul
aas
sti
mov
fwait
adc
cli
dec
xchg
daa
daa
sar
push
not
fld
push
mov
cwde
inc
dec
sbb
scas
and
shl
inc
jnp
and
and
mov
and
xchg
xor
adc
enter
jp
cmps
mov
fnstsw
cmps
adc
mov
movs
push
enter
mov
add
clc
or
out
popf
inc
pop
lock
std
xor
(bad)
and
inc
repnz
aaa
(bad)
jmp
mov
jne
push
cli
data16
icebp
jae
mov
adc
xor
test
sbb
cs
and
sahf
rcr
xchg
mov
add
faddp
cmp
fst
cli
xchg
xchg
iret
cmc
mov
sbb
leave
aaa
xchg
mov
cmps
add
fs
(bad)
int
(bad)
adc
push
dec
retf
ins
and
or
mov
inc
sub
jo
and
daa
out
test
test
cwde
push
fdiv
int
bt
std
outs
adc
jp
push
stos
mov
fbld
(bad)
scas
aaa
pushf
inc
sub
pop
call
pop
pop
dec
sub
es
aaa
inc
aad
or
(bad)
and
xchg
fnsave
push
cwde
sub
xor
xchg
cmps
std
leave
dec
mov
add
in
mov
pop
stos
dec
loopne
adc
push
scas
jbe
adc
adc
movs
sub
in
stos
mov
inc
or
call
imul
stc
push
les
fimul
jne
mov
les
cs
mov
xor
jnp
mov
push
shl
mov
fwait
mov
sbb
mov
iret
dec
cdq
(bad)
cmc
and
in
mov
sbb
add
mov
xlat
into
nop
loop
mov
ins
mov
bound
inc
pop
addr16
sbb
rcr
or
dec
xchg
or
mov
add
mov
pop
dec
add
daa
cld
sbb
outs
and
adc
lock
pop
mov
adc
inc
ss
call
add
or
iret
cmc
imul
lods
and
adc
push
lods
out
aad
(bad)
sbb
les
jo
jbe
xchg
or
and
pop
add
or
outs
stc
xchg
data16
rcl
sti
xchg
out
cmp
(bad)
out
mov
mov
or
in
ins
in
lock
bound
push
jo
pop
imul
jbe
popf
fwait
daa
call
adc
(bad)
xlat
inc
inc
jmp
xor
test
xchg
adc
add
mov
mov
push
mov
retf
ds
retf
popa
cmp
dec
sbb
arpl
xor
pop
lahf
jge
(bad)
ss
push
jno
mov
(bad)
pop
lods
and
int
sbb
cmps
loop
add
cmp
push
and
sbb
mov
daa
mov
inc
and
or
cmp
call
mov
add
cmp
ja
jne
xor
aaa
xchg
mov
or
pop
fcom
data16
fsub
or
test
mov
xchg
or
and
fdiv
adc
jp
pop
sub
jecxz
push
pusha
lds
or
pop
not
in
push
outs
push
adc
ror
jns
fsubr
adc
fiadd
pop
jbe
mov
sub
movs
pop
pop
sahf
and
dec
(bad)
cmp
ret
mov
push
ja
test
or
fdiv
dec
and
enter
fnsetpm(287
cmp
ror
into
mov
fs
mov
jle
fstp
sub
gs
jne
xchg
hlt
jo
scas
or
in
loop
pusha
push
mov
sti
mov
cmp
mov
(bad)
xchg
dec
adc
pop
movs
fild
ret
mov
div
(bad)
mov
test
mov
cmps
push
jnp
push
fsub
cwde
cmp
xor
pop
sahf
push
cs
ja
xchg
icebp
(bad)
fnstsw
sbb
js
pop
mov
cmp
jle
mov
add
lods
out
pop
sbb
jbe
stos
test
xor
icebp
jmp
or
cld
lea
cmp
cmp
xor
loop
adc
xchg
(bad)
bound
add
jae
inc
and
push
mov
fld
lea
arpl
jp
pop
mov
imul
mov
rol
out
xor
cmp
movs
cmp
inc
fild
push
pop
xchg
imul
sbb
popf
int3
add
dec
jle
mov
sbb
daa
cmp
jo
xchg
mov
je
js
shr
rol
mov
xchg
add
mov
movs
out
dec
imul
xor
push
clc
xchg
mov
adc
lahf
inc
mov
xor
icebp
cmp
ret
call
push
xchg
in
imul
mov
jne
add
call
fcomp
ins
imul
mov
je
xlat
push
xor
jl
add
xor
aas
hlt
xor
call
cmp
in
mov
test
sar
xor
sub
das
popf
fwait
pop
xchg
xlat
xor
loop
push
pop
add
(bad)
lds
jbe
enter
inc
dec
and
lea
lods
push
mov
jo
lods
je
(bad)
std
iret
sbb
lahf
fwait
adc
(bad)
sub
out
jbe
sbb
push
stc
retf
icebp
pop
mov
out
sub
and
mov
(bad)
test
add
sbb
imul
loop
sub
fs
add
jns
jg
xchg
pushf
and
cmp
test
mov
clc
and
pop
out
test
mov
aad
fwait
push
mov
shr
cld
xchg
rcl
add
fcmovu
pop
icebp
add
add
js
sbb
test
lods
adc
push
lods
nop
inc
imul
and
mov
loop
enter
mov
mov
rcr
jge
mov
add
hlt
pop
leave
inc
loopne
mov
xchg
and
call
out
and
cmps
jecxz
jg
lods
or
sub
aad
sbb
push
add
sub
cmp
into
(bad)
sahf
xor
cmp
xchg
adc
adc
ror
jle
add
and
mov
mov
and
inc
adc
add
ss
mov
inc
imul
pop
shl
ins
xchg
cmp
stos
je
(bad)
or
aaa
xchg
shr
mov
xor
sti
mov
push
xor
sub
mov
cmp
xchg
mov
adc
aad
outs
cwde
push
xchg
inc
mov
retf
jns
sbb
dec
test
call
pop
mov
cmc
outs
sub
mov
xor
or
bnd
call
test
or
retf
xchg
jbe
mov
adc
cli
addr16
sbb
pop
sub
and
inc
ss
out
bound
ins
inc
cdq
sbb
adc
adc
add
pop
test
out
dec
dec
loopne
das
jo
xchg
cmp
ror
loopne
in
addr16
fs
xchg
ins
outs
or
inc
inc
cmps
push
fs
pop
gs
push
xchg
mov
mov
cmps
movs
dec
retf
lds
scas
xor
gs
jp
dec
push
outs
int
inc
clc
scas
inc
fnstsw
pop
mov
(bad)
out
add
mov
mov
push
lahf
mov
jbe
fs
into
xchg
addr16
and
pusha
(bad)
out
les
dec
test
retf
cli
and
push
mov
jno
int
call
pop
sbb
push
ja
cs
mov
aaa
test
jns
vmovntps
movs
test
push
mov
dec
cwde
stos
mov
add
xor
mov
cs
mov
test
fiadd
sahf
ret
sbb
fdivr
or
into
xchg
xchg
shl
movs
inc
std
ja
jl
and
sbb
push
inc
mov
int3
xor
rcl
loop
imul
movs
hlt
and
out
or
inc
in
or
jne
test
mov
movs
and
sub
add
sahf
inc
and
xchg
jnp
cmc
dec
push
and
std
sub
fild
les
mov
stc
add
fimul
out
sbb
inc
and
pop
sub
cld
ss
adc
cmp
inc
mov
mov
cmp
jbe
mov
(bad)
int
sbb
jl
adc
adc
add
inc
into
(bad)
js
fs
push
aad
mov
mov
inc
ds
mov
mov
xor
add
mov
sub
or
aas
jp
mov
dec
stos
ror
jl
(bad)
xchg
jmp
int3
mov
(bad)
cmc
adc
not
mov
inc
push
cmp
cmp
clc
and
mov
in
mov
(bad)
jno
into
pushf
aaa
popa
pop
cmp
mov
push
xlat
test
lahf
shr
lods
mov
stc
(bad)
xor
loopne
mov
mov
aaa
mov
dec
repnz
jo
jl
aaa
jl
out
hlt
sub
int
pushf
jl
clc
es
sbb
push
jl
fistp
sbb
aam
int
nop
xchg
add
(bad)
cmps
push
imul
les
push
iret
xor
and
xchg
mov
sub
rcl
mov
(bad)
sub
repz
adc
jmp
pop
js
shr
sahf
or
cdq
push
neg
fsubr
cmp
(bad)
sub
xchg
mov
cwde
lea
enter
mul
ja
cmp
inc
aad
imul
mov
add
aam
mov
xchg
push
(bad)
mov
int
sbb
test
sub
cmp
fadd
icebp
cmp
test
into
js
adc
lds
addr16
mov
ds
and
push
xchg
xor
dec
pop
mov
adc
mov
mov
ret
std
dec
fucomp
fnstsw
(bad)
xlat
dec
test
xchg
enter
mov
cmp
mov
fidiv
retf
dec
std
ins
add
pop
mov
or
(bad)
push
mov
sbb
push
or
aam
out
inc
mov
sbb
les
jb
ss
mov
dec
xor
data16
fld
(bad)
xor
test
sbb
in
xchg
lods
bnd
cmp
xchg
mov
retf
das
sbb
fs
push
ins
adc
adc
mov
std
test
sbb
outs
lods
out
aad
dec
sar
in
mov
ds
movs
les
mov
push
mov
jnp
ds
call
push
mov
push
rcl
clc
sbb
data16
adc
(bad)
outs
cmp
stos
inc
movs
ja
ret
pushf
rcl
sahf
ins
jecxz
fidivr
or
dec
sbb
daa
call
in
imul
xor
sbb
ret
cmp
cmp
leave
or
cmp
mov
hlt
cld
int
or
das
lds
xchg
mov
or
aam
mov
add
imul
jbe
loop
add
sub
or
les
pushf
(bad)
aas
jae
xchg
push
sbb
cmp
lock
fldcw
test
repnz
inc
mov
sub
sbb
test
in
sbb
jnp
stos
sub
clc
mov
dec
pop
jmp
out
(bad)
push
dec
pop
or
fmulp
btr
push
fs
sub
add
lahf
and
jnp
adc
mov
in
mov
adc
dec
adc
mov
pop
nop
mov
lds
mov
push
js
pop
(bad)
add
mov
call
imul
dec
push
stc
push
scas
retf
idiv
inc
loope
int
mov
dec
jo
xchg
cli
add
(bad)
mov
rcr
xchg
mov
loopne
push
shl
sub
mov
es
add
push
or
and
sub
test
ins
xchg
leave
daa
and
xor
js
cmp
or
and
xor
ret
pop
inc
ds
push
scas
pop
add
and
jmp
call
call
in
in
popa
push
jmp
xchg
cli
popf
push
mov
scas
into
(bad)
lods
dec
mov
scas
inc
push
sti
mov
dec
pop
aaa
fsubr
pop
push
push
jnp
movs
nop
cwde
outs
xor
mov
pop
push
jp
pop
add
in
fcomp
push
sub
shl
add
clc
adc
or
inc
retf
daa
jmp
sub
sbb
xchg
pop
ja
cdq
mov
inc
add
mov
xchg
cmps
rcl
inc
push
dec
lds
inc
xchg
gs
iret
aaa
sub
movs
je
and
repnz
mov
jae
wrmsr
icebp
xchg
mov
loop
es
cld
and
mov
test
xchg
cmp
push
pavgw
out
test
test
add
out
xchg
aad
sahf
scas
test
jns
xor
and
push
test
aas
sbb
push
sub
jnp
pop
les
cld
sbb
hlt
mov
mov
push
js
mov
dec
out
jle
pop
into
mov
in
mov
push
mov
sti
ins
outs
mov
pusha
cmp
ret
and
ret
inc
sbb
jne
fcomp
add
xchg
clc
add
cmp
and
aad
mov
add
sti
gs
scas
ds
xor
adc
or
mov
mov
mov
hlt
pop
add
fnstcw
lods
jns
hlt
or
mov
add
ret
or
es
fstp
shr
dec
loopne
push
jge
lock
call
push
cs
cdq
sahf
cmp
mov
push
pushf
mov
std
arpl
mov
fisub
or
addr16
enter
sbb
je
cmps
daa
sbb
pop
out
je
mov
xchg
push
xor
xchg
add
fs
mov
mov
mov
mov
jecxz
xchg
pusha
lds
in
rol
add
push
mov
adc
and
jle
adc
mov
pop
pop
xchg
and
(bad)
lock
in
xchg
test
int
out
outs
sahf
pop
js
push
dec
jg
(bad)
inc
addr16
in
pop
add
test
test
inc
xchg
jnp
out
js
sbb
test
xchg
ror
and
sub
and
mov
mov
aas
hlt
imul
xor
(bad)
cmc
(bad)
inc
mov
ficomp
(bad)
jne
jp
js
xchg
lahf
clc
push
call
aad
mov
jo
mov
pop
push
pop
xchg
repnz
and
sub
in
aad
hlt
das
sahf
pop
mov
enter
out
add
addr16
sbb
xchg
(bad)
sbb
enter
aas
jmp
jmp
sahf
mov
sbb
ins
mul
fnstenv
addr16
push
addr16
inc
(bad)
cwde
sbb
test
ins
mul
pop
(bad)
movs
in
jno
je
pop
bound
stos
aam
xlat
iret
pop
lock
cwde
mov
mov
ds
outs
retf
inc
add
sti
sub
fwait
pop
sahf
or
std
sub
xchg
stos
cdq
inc
push
inc
and
popf
jno
jl
push
push
call
push
inc
pop
pushf
pop
ins
bound
mov
jle
sbb
push
test
inc
(bad)
sub
outs
cs
inc
rol
test
sub
jno
cmp
jge
jmp
imul
test
hlt
hlt
push
leave
inc
cmp
pop
sub
das
xlat
movzx
mov
nop
adc
add
pushf
mov
cmp
inc
repnz
adc
mov
sub
sbb
jecxz
cmc
repz
fcom
mov
ficom
xchg
push
xor
or
ror
lea
jl
or
repz
retf
dec
in
cmp
(bad)
popa
sbb
jno
pop
in
dec
jmp
aam
mov
ins
mov
enter
sbb
stos
fs
retf
and
mov
call
cmp
ds
add
push
adc
movs
(bad)
lahf
xor
xor
xor
or
sar
int3
stos
add
xchg
pop
sahf
call
pop
jecxz
ins
popf
and
stc
or
aad
or
jo
(bad)
jmp
fld
xor
mov
je
pop
and
je
mov
inc
fs
movs
shl
mov
xchg
ret
stos
jmp
div
pop
arpl
nop
jnp
ins
scas
ret
sbb
enter
or
fwait
in
into
add
mov
dec
add
cmp
and
aam
ds
shl
push
das
adc
mov
mov
push
cpuid
pop
inc
xchg
aam
(bad)
push
out
lds
mov
jns
and
sub
js
sub
pop
cwde
sbb
xchg
mov
lahf
clc
jmp
test
inc
stos
xchg
dec
mov
jle
or
sub
xchg
movs
or
stos
jno
sub
retf
or
sub
je
sub
fs
jge
daa
and
dec
sbb
les
mul
push
aad
retf
xor
(bad)
push
retf
mov
or
popa
out
call
inc
push
cdq
mov
jp
xchg
aas
lea
ror
inc
not
(bad)
iret
mov
and
mov
in
sub
call
fdivrp
sub
lds
jo
sub
not
test
mov
push
add
retf
scas
mov
push
mov
jb
fdiv
add
mov
xchg
cmp
cld
add
shr
xor
adc
hlt
mov
shl
enter
mov
loop
fsub
jbe
and
cmc
cwde
into
push
pusha
arpl
mov
sbb
movs
pop
in
fs
hlt
push
adc
gs
jg
dec
jmp
cmp
cmp
out
stc
cmp
jmp
inc
lea
xor
mov
cmp
xor
repnz
xchg
cmp
imul
add
test
sub
add
cmp
(bad)
fdivr
fmul
dec
loope
ficom
ss
lods
inc
das
inc
sbb
inc
iret
and
mov
retf
adc
or
fs
lods
call
push
bound
sub
pop
lock
cmp
push
ret
sub
mov
add
and
inc
shl
push
call
mov
dec
pop
cmp
fwait
sbb
inc
rcr
mov
fsub
cmp
adc
push
stos
pop
mov
and
test
inc
xlat
in
test
pop
pop
dec
fs
sar
jecxz
mov
je
arpl
xchg
add
jnp
and
dec
xor
stc
pop
pop
(bad)
rcr
jns
and
xor
enter
(bad)
cmp
loopne
aam
outs
jns
xchg
jno
inc
sbb
lods
mov
psubusb
push
(bad)
cmp
je
rcr
pop
enter
pop
gs
push
jbe
cmc
cmp
sti
add
push
mov
fisttp
add
shr
sbb
cs
test
sub
and
loop
retf
in
jo
mov
ss
addr16
mov
fwait
ret
sub
test
div
ret
dec
sbb
inc
cmp
push
lods
ins
fist
repz
outs
into
scas
fcomi
xchg
cmp
dec
mov
fucomip
gs
dec
fiadd
in
push
adc
cmp
retf
push
mov
daa
ja
cmp
test
mov
retf
call
pop
test
repz
mov
ret
es
sub
xor
push
dec
fs
das
jb
mov
pop
mov
in
push
in
loopne
ret
cmp
cmp
fstp
sub
pop
adc
xor
or
call
and
cmp
jmp
shl
xlat
cwde
sub
sub
xor
pop
clc
mov
mov
imul
xor
jns
scas
sahf
mov
scas
jne
inc
sub
or
push
int3
into
rcl
mov
cmp
pop
loope
enter
mov
add
(bad)
xlat
add
pop
shr
stos
retf
retf
mov
inc
add
shl
mov
push
lods
ins
add
xor
mov
es
jmp
lods
and
lahf
movs
out
jae
les
xor
and
pop
add
mov
retf
test
and
xor
jno
push
ret
mov
lods
add
push
cmps
out
push
daa
rcr
sbb
out
je
xor
aas
inc
jnp
add
mov
mov
inc
add
pop
stos
outs
or
fcmovnbe
dec
sub
mov
int3
sti
(bad)
push
imul
cmp
imul
cdq
mov
jecxz
or
add
push
fmulp
pop
test
shl
dec
and
stos
or
fistp
cmc
jae
stos
js
mov
pop
cdq
jl
test
test
mov
jae
jl
dec
mov
mov
push
mov
xor
adc
test
jb
jnp
sub
mov
jno
test
aad
outs
je
rcl
addr16
jecxz
xor
mov
sub
je
jge
sub
cmp
dec
outs
ja
(bad)
adc
stos
in
scas
stos
and
push
das
mov
popa
daa
pop
call
cmp
push
shr
jl
je
push
jnp
add
pushf
and
mov
clc
mov
clc
or
popf
popf
mov
imul
lds
adc
mov
rol
mov
pop
mov
cmp
das
cmc
data16
js
cs
xchg
jb
les
repz
adc
test
jno
add
xor
push
imul
idiv
fisub
scas
(bad)
fs
inc
int3
shl
dec
sub
mov
mov
call
add
add
ins
lds
jns
or
lods
test
add
sahf
int
xchg
scas
inc
sub
pusha
jnp
jo
add
hlt
iret
lahf
adc
sub
int
xchg
sub
dec
xor
scas
in
(bad)
jne
cmps
jb
fstp
sub
inc
pushf
push
sbb
push
std
pop
ins
mov
sub
lock
or
jae
in
cmp
hlt
inc
std
test
test
add
inc
push
xor
cdq
cmp
jns
fisttp
xor
and
add
outs
ret
out
cs
aas
(bad)
cmp
icebp
sbb
retf
push
addr16
mov
nop
push
mov
ret
jno
pop
in
mov
icebp
mov
sbb
and
popa
stc
push
cli
dec
call
push
out
dec
add
push
cli
cmp
add
stos
popf
aam
jnp
dec
mov
(bad)
mov
mov
sub
call
pop
xlat
sbb
and
cmp
adc
sbb
outs
icebp
push
sub
jmp
mov
pop
jmp
repnz
xor
inc
xor
rcl
jns
in
or
shl
xchg
fldz
push
aas
xchg
adc
push
add
jnp
dec
add
popf
sub
dec
push
mov
push
loope
add
(bad)
xchg
push
xchg
aaa
fidiv
cmps
mov
int3
mov
enter
cld
mov
add
xchg
hlt
loope
pop
mov
shr
rcl
fld
xchg
in
dec
dec
inc
mov
es
pop
int
movs
push
push
scas
sbb
ror
mov
inc
in
jnp
mov
and
add
mov
mov
mov
xor
iret
pop
scas
cld
mov
scas
inc
js
cmp
ja
rcr
daa
xchg
inc
sub
leave
arpl
sti
dec
push
idiv
or
xor
adc
add
cmp
fwait
repnz
add
sub
dec
mov
mov
out
dec
add
pop
adc
mov
push
mov
dec
or
fwait
sbb
hlt
vmovapd
add
je
xor
retf
adc
sub
dec
in
cmc
ror
mov
add
cmp
in
stc
add
mov
push
jecxz
jns
mov
retf
aad
bound
and
cmp
xchg
xchg
push
leave
xchg
jb
push
test
and
mov
(bad)
pushf
xor
into
xchg
cmp
push
inc
in
aas
lea
xor
sub
sbb
fwait
adc
pop
ret
(bad)
dec
imul
cmps
into
jb
retf
fsub
sub
sub
mov
jp
or
mov
frstpm(287
pop
xchg
jl
je
cmp
mov
mov
les
jle
pop
rcr
aad
not
xor
mov
mov
js
lahf
setns
push
pop
pop
xchg
inc
das
je
loope
sub
inc
or
pop
sbb
or
popf
sub
scas
cmps
aas
pop
loop
repnz
pop
adc
sbb
loopne
jne
popa
fld
sahf
pop
ret
out
inc
sti
das
js
or
rol
(bad)
arpl
mov
push
icebp
push
xchg
or
into
pushf
loopne
xchg
mov
dec
movs
mov
jge
bswap
xchg
psrad
mov
sar
mov
xchg
(bad)
aam
(bad)
inc
je
xchg
imul
sub
jp
sbb
mov
mov
inc
sbb
lods
and
push
imul
dec
pop
mov
cmps
sbb
mov
jmp
xor
and
stos
ret
cs
mov
aas
sbb
shl
push
add
sahf
outs
cld
(bad)
mov
rcl
xchg
push
mov
mul
xor
popa
arpl
inc
dec
jmp
xor
shr
xor
in
ds
jne
sub
pop
dec
pop
jns
ins
int
daa
arpl
add
and
sub
inc
add
idiv
jnp
pop
or
cmp
call
sub
out
xchg
nop
mov
mov
xlat
jns
repz
pop
mov
mov
fidivr
cmp
inc
mov
push
push
jmp
mov
push
ret
jae
mov
sbb
repz
push
in
cs
aad
fadd
sub
add
dec
test
std
out
in
cmps
sahf
jge
test
xor
xchg
jb
cdq
push
das
and
fwait
out
push
adc
cmc
scas
sub
push
inc
add
mov
pop
jnp
stos
js
shl
or
std
adc
dec
call
add
iret
call
stos
mov
scas
push
std
(bad)
push
mov
xlat
cmps
imul
or
add
fxtract
jmp
xchg
or
sub
scas
retf
sub
cwde
add
mov
rcl
jecxz
pop
gs
movs
shl
outs
out
mov
mov
mov
inc
imul
push
mov
or
xchg
cld
hlt
pop
data16
jmp
jno
mov
push
mov
sbb
daa
shl
jp
fisub
jae
dec
pop
push
aam
mul
push
or
lea
inc
shl
mov
jmp
jae
inc
or
and
mov
ins
js
add
xchg
add
inc
shr
ins
jmp
popf
out
inc
add
pop
or
add
scas
fsub
xchg
or
lods
sub
(bad)
jl
mov
sbb
je
cli
les
pushf
sbb
nop
sub
mov
cmc
clc
mov
out
sti
call
dec
fst
cwde
mov
pop
push
dec
and
das
mov
xor
enter
hlt
pop
call
rcr
cmp
mov
sub
cmps
(bad)
mov
and
push
push
enter
mov
mov
pop
jl
add
mov
loop
ror
and
lahf
loopne
aas
mov
inc
xlat
jle
sbb
pop
or
js
cmp
jbe
pop
mov
jg
int3
sub
pop
inc
jle
xor
xchg
fcomp
jmp
repz
lds
and
adc
sbb
stos
dec
mov
xchg
mov
mov
fidiv
jno
push
pop
mov
imul
rol
xor
xor
aas
or
dec
adc
fwait
inc
inc
loop
pop
or
mov
pop
jl
or
cmc
cmp
cmp
repnz
stos
dec
js
dec
adc
dec
xchg
inc
shl
or
sbb
jge
inc
stc
arpl
jbe
in
pop
outs
or
cmp
movs
je
and
xor
xor
sbb
pop
outs
and
cmps
repnz
cmp
shr
les
mov
mov
xchg
inc
push
lods
inc
les
cmc
fwait
cwde
push
inc
ins
cmc
mov
loope
xor
mov
clc
xor
mov
add
aas
adc
sbb
mov
add
or
add
or
pop
cmp
or
inc
imul
fdivr
in
shl
sbb
stc
adc
dec
in
and
sbb
jmp
mov
stc
aaa
retf
aas
test
cmp
in
daa
and
dec
(bad)
test
and
mov
jl
mov
push
jbe
fsubp
aad
fisttp
dec
xchg
mov
xchg
or
push
mov
(bad)
jmp
movs
out
(bad)
nop
pushf
cmp
in
jl
mov
and
sbb
sbb
sbb
add
cmp
push
jo
js
push
imul
mov
imul
cld
(bad)
in
fs
pop
mov
jb
fwait
lds
xchg
jge
mov
xor
xor
dec
aad
cmp
and
std
push
pop
cmp
clc
adc
lods
add
add
pop
mov
mov
push
and
test
sbb
ins
scas
fistp
jno
loop
xchg
es
add
aaa
xchg
adc
adc
xor
xor
add
mov
and
sbb
call
call
jg
xchg
cmp
pushf
xlat
adc
cmp
ret
call
call
jns
loop
mov
stos
(bad)
fidiv
hlt
and
mov
jb
sahf
mov
push
mov
push
sub
push
dec
loop
push
inc
push
cmp
icebp
lea
fbld
dec
dec
fidivr
popf
xchg
push
inc
cwde
fst
scas
cmps
(bad)
into
mov
aad
xor
xchg
xchg
fild
jl
jb
pushf
pop
imul
and
sub
push
push
mov
sub
and
cmp
inc
mov
push
test
cmps
or
sub
pop
mov
lock
pop
cli
lock
pop
leave
call
jl
sbb
and
sbb
xor
or
pop
fxam
int
lahf
aad
xchg
stc
dec
paddq
clc
repz
inc
fst
enter
gs
pusha
out
pushf
cmps
dec
retf
inc
jg
jmp
jl
xchg
sub
mov
and
jmp
popf
test
xchg
(bad)
retf
cdq
pop
and
jecxz
push
dec
xor
out
dec
out
sahf
dec
out
popa
jecxz
inc
(bad)
fwait
pop
imul
sti
nop
lods
test
push
push
sub
xchg
pop
mov
mov
jae
test
push
stos
dec
lods
out
pop
daa
xlat
adc
sbb
cmp
cdq
inc
xor
pop
lock
jmp
(bad)
lock
dec
fcmove
sbb
cmps
adc
adc
xchg
mov
mov
fisttp
(bad)
aad
daa
call
mov
and
sbb
mov
and
inc
or
je
out
sub
enter
dec
test
jl
sbb
rol
lock
arpl
or
sti
jne
push
jl
cmps
imul
test
in
and
bound
xchg
or
test
xchg
imul
mov
dec
out
push
fsub
jne
cmps
adc
xor
sbb
imul
adc
mov
mov
cmp
xchg
sar
mov
sbb
jmp
xchg
enter
push
mov
mov
ret
repnz
out
retf
pop
and
dec
inc
lea
or
shr
fistp
aas
test
xchg
dec
mov
outs
mov
jbe
lock
cmc
loope
jg
push
pop
xchg
bound
or
aam
fcom
xor
xor
mov
jae
add
div
xlat
mov
and
push
popf
fcom
test
xor
jmp
dec
push
rcr
xchg
je
les
or
in
mov
inc
push
push
loopne
mov
nop
sbb
add
lock
mov
xchg
mov
(bad)
(bad)
xchg
or
js
add
addr16
in
xchg
mov
jb
inc
pop
xchg
mov
enter
rol
aaa
jl
pop
push
sbb
cld
pop
fadd
jp
cdq
ret
xlat
inc
(bad)
mov
mov
jnp
cmp
out
scas
and
int
mov
dec
pop
rcr
pop
mov
ja
(bad)
repz
je
call
pop
bound
pop
inc
gs
shl
sub
fucom
jns
jl
ds
sub
inc
add
jmp
ror
mov
push
out
retf
jp
loopne
xchg
cmc
pushf
dec
xor
jno
ins
cmp
jge
add
pop
pop
(bad)
ins
pop
adc
cwde
ret
inc
cmp
call
retf
sub
(bad)
es
gs
pop
cdq
int3
retf
sar
cmp
pop
push
scas
cmp
out
lods
cli
mov
aaa
data16
(bad)
cmp
jmp
out
lock
pop
pop
sahf
mov
fs
xchg
mov
mul
jmp
xor
cmps
in
and
shl
xor
jb
jno
xlat
mov
shl
test
push
icebp
mov
and
in
mov
loope
mov
mov
sbb
daa
inc
data16
mov
in
out
inc
sti
mov
lahf
out
ins
sbb
sub
ja
in
and
repnz
sti
sahf
jne
int
lock
shl
sbb
mov
sbb
lds
movs
shl
std
iret
outs
mov
movs
dec
jle
aam
mov
dec
mov
push
clc
ret
shl
inc
test
repz
push
xchg
loop
push
or
and
icebp
icebp
xchg
sbb
out
aam
pop
inc
cmp
fstp
aam
xchg
das
sbb
sbb
mov
loop
fld
outs
jbe
push
jmp
xor
adc
sbb
mov
pop
fnstsw
jb
sahf
inc
pushf
stos
shl
mov
adc
push
cli
xchg
mov
xchg
sbb
inc
inc
jbe
(bad)
mov
rcl
and
jae
xchg
mov
stos
mov
cmp
fstp
jmp
stc
adc
std
int3
nop
mov
in
xor
stos
push
adc
xor
test
fisub
xor
test
jmp
inc
pop
ja
add
push
lods
in
adc
int3
icebp
repnz
push
mov
imul
imul
add
fs
int
jmp
fimul
pop
dec
xor
adc
jge
fmul
cmp
xchg
adc
mov
pop
sbb
in
outs
jl
nop
dec
push
arpl
sbb
add
bswap
pop
and
jmp
sahf
test
test
pop
hlt
shl
mov
fwait
push
out
lea
mov
inc
cmp
add
das
ins
sub
pop
push
mov
sub
out
rcl
popa
inc
mov
stos
inc
sti
leavew
inc
mov
mov
adc
inc
jg
sti
inc
mov
mov
dec
cs
sbb
fdivr
add
inc
mov
add
ret
jg
jne
sbb
jl
loop
fdivr
fst
bound
aam
adc
jb
and
movs
movs
jle
or
add
adc
cdq
xchg
or
fimul
jle
cdq
add
pop
pop
iret
and
sahf
rcl
push
ss
movs
jge
(bad)
(bad)
adc
add
inc
mov
out
xor
lds
lods
es
inc
sbb
pop
dec
mov
out
fild
cdq
sbb
mov
imul
cdq
mov
in
and
inc
jnp
cmc
leave
into
ins
push
or
test
xchg
es
xor
pop
xchg
dec
add
or
sbb
rol
adc
push
sub
loopne
sbb
(bad)
or
cdq
sbb
inc
push
dec
xchg
mov
xor
imul
aam
mov
mov
push
into
sub
mov
iret
jecxz
jmp
cdq
test
dec
adc
ins
pop
je
push
xchg
xlat
lods
pop
(bad)
loope
cmp
mov
repnz
fxch
mov
sti
mov
cmc
lods
jnp
cmp
setns
push
xchg
stos
in
imul
out
loopne
push
push
mov
pop
inc
ss
jnp
inc
ror
int3
dec
jl
xchg
sub
leave
sbb
jp
mov
into
movs
icebp
or
pop
cmp
outs
jmp
in
and
out
pop
das
(bad)
xchg
nop
dec
xchg
xchg
adc
mov
loope
jae
clc
pop
loope
pop
lea
jae
cli
xchg
inc
push
sbb
sub
inc
imul
dec
pop
sahf
mov
adc
rol
mov
push
jg
jne
jns
push
dec
push
xor
mov
jg
mov
nop
fs
sbb
je
jl
xchg
xchg
ficom
mov
sbb
adc
loopne
jno
push
add
adc
das
jl
add
push
scas
cmps
xchg
cmp
sub
sbb
xlat
push
xchg
rcr
pop
mov
pop
add
aas
lds
pop
mov
adc
hlt
lods
sub
push
mov
cmp
mov
loop
xchg
enter
in
int
lock
push
inc
mov
bound
je
adc
sub
sbb
xlat
or
test
and
adc
mov
fs
je
push
es
mov
add
ret
cld
sbb
je
inc
neg
xlat
je
ja
aas
jge
stos
aaa
stos
shr
in
xor
xchg
popf
add
iret
sti
cmp
add
ins
int3
inc
jg
enter
repnz
fdivp
sub
mul
mov
mov
rol
jno
sub
sub
pop
dec
(bad)
or
xchg
add
add
neg
sbb
sti
fnstsw
mov
in
int
or
xor
mov
push
repz
push
iret
adc
lea
cmc
cvtps2pd
push
and
outs
repnz
add
sub
mul
loopne
clc
cmp
call
push
fdiv
jl
push
push
(bad)
shl
pop
mov
enter
and
mov
mov
cdq
and
sub
and
mov
iret
push
mov
ja
and
cmps
adc
mov
sar
in
hlt
cs
lahf
jbe
pop
mov
fcom
out
mov
pop
inc
pop
(bad)
lea
mov
cwde
xlat
and
xchg
inc
sar
xchg
pop
sub
xchg
jg
ins
mov
int
xchg
jb
idiv
dec
inc
cli
sbb
loop
mov
shr
scas
call
push
mov
adc
push
and
and
jne
dec
and
and
mov
dec
jecxz
pop
aad
loop
icebp
pop
in
test
out
outs
movs
sub
and
sbb
or
mov
(bad)
and
inc
inc
push
and
sbb
mov
push
sub
sar
daa
je
das
repz
xor
push
bound
(bad)
(bad)
push
pop
fisub
lea
push
call
cmovns
in
xchg
jle
stos
ss
in
shl
or
rcl
call
or
cmp
aaa
lds
das
shr
xor
mov
cmp
loope
shl
out
xor
lds
or
in
sub
(bad)
push
dec
dec
xchg
mov
mov
xor
fld
pop
cmp
cli
retf
ins
and
retf
sub
cdq
jmp
mov
inc
lock
in
mov
popf
ja
adc
fidiv
xor
mov
call
and
mov
or
arpl
lea
push
call
sbb
xlat
outs
inc
test
in
sbb
jne
in
out
push
std
cld
mov
aaa
xchg
dec
test
xchg
or
mov
pop
lahf
(bad)
inc
call
mov
or
pop
mov
or
add
xlat
stos
pop
or
inc
(bad)
and
push
(bad)
jo
inc
or
iret
cmp
aas
bound
mov
adc
out
mov
std
pushf
add
cld
loope
lock
pop
xlat
or
mov
mov
jl
mov
(bad)
dec
dec
dec
test
sar
adc
lods
out
repnz
test
pusha
mov
shl
repnz
xchg
stos
jmp
or
dec
neg
mov
popf
cli
sub
inc
push
lods
ret
enter
jmp
ja
sbb
push
add
jb
sub
xor
stos
push
and
fldl2t
sub
or
xor
dec
and
lods
push
gs
imul
xor
cmp
in
and
xor
jecxz
popa
xchg
pop
popa
sbb
shr
pop
cmp
xor
add
(bad)
test
mov
inc
fldenv
pop
inc
mov
jmp
(bad)
in
in
shr
movs
sub
dec
std
pop
and
(bad)
cmp
mov
dec
jbe
add
shr
adc
repz
jl
adc
mov
test
cmp
and
(bad)
sub
dec
add
aaa
jmp
push
(bad)
cmp
sbb
fsub
stos
repz
ss
mov
dec
lock
pop
ss
ins
inc
mov
aaa
xchg
adc
ins
jbe
jb
dec
dec
dec
mov
mov
pop
(bad)
cmp
cmp
lds
jle
push
ds
das
and
mov
loope
adc
test
sar
mov
sub
cs
and
loop
jg
inc
inc
adc
into
mov
(bad)
sub
stos
stc
mov
jecxz
les
pop
lods
push
lahf
xchg
fist
retf
or
std
outs
loop
mov
xchg
sbb
cmp
repz
ror
add
stos
fwait
mov
inc
sub
std
sbb
lods
das
out
daa
inc
iret
cmc
rol
sub
gs
mov
and
adc
outs
sub
je
test
fist
cmps
jb
ret
cmp
cli
jl
pop
mov
jmp
rcl
ret
inc
leave
dec
in
fwait
cmps
jge
cmp
fs
jp
ja
dec
ja
imul
pop
push
out
fstp
hlt
jmp
sub
shr
out
xlat
mov
and
mov
jecxz
sub
jnp
xor
push
mov
lds
adc
pop
in
xchg
inc
idiv
push
cdq
in
and
imul
mov
mov
data16
push
push
sub
in
lahf
jmp
cmps
and
int
push
aaa
inc
loope
test
or
push
hlt
jmp
add
call
push
hlt
mov
inc
sti
sar
out
add
cwde
mov
les
sbb
scas
push
mov
cmps
mov
test
lahf
add
pop
(bad)
daa
fimul
push
(bad)
fmulp
fiadd
cmp
xchg
mov
push
or
repz
mov
dec
inc
sti
cmp
push
sbb
inc
gs
std
rcl
sbb
mov
leave
or
out
aam
idiv
pop
mov
xchg
xor
ds
int
mov
mov
das
outs
xor
call
xor
mov
or
push
inc
movs
add
nop
jb
sub
jno
jge
mov
or
dec
dec
imul
adc
pop
inc
sbb
inc
mov
ja
icebp
pop
loopne
jne
push
mov
add
adc
sbb
fwait
aad
add
cmp
leave
bound
loope
dec
jb
scas
pop
ds
mov
das
pop
mov
xor
xchg
sahf
inc
icebp
or
lods
lods
imul
dec
mov
shr
inc
hlt
push
nop
out
sbb
jb
cmps
test
into
or
sub
vpmacsdql
push
loope
in
out
mov
bound
loope
mov
iret
sbb
sbb
lahf
jp
and
popa
mov
push
es
add
test
je
out
iret
lea
cmp
dec
outs
fistp
xor
add
aaa
mov
ins
gs
lahf
out
xchg
cs
(bad)
mov
stos
push
test
and
mov
cli
mov
lods
jae
shr
stos
fstp
pop
pop
pushf
or
cmps
imul
shl
push
lods
push
setbe
push
pop
mov
pop
inc
xchg
dec
cld
pop
(bad)
sub
sub
(bad)
in
cmp
add
loope
dec
(bad)
test
pop
dec
pushf
ror
sbb
push
sbb
mov
pusha
popf
mov
cli
push
add
push
mov
aam
mov
inc
push
pop
ins
js
(bad)
lock
mov
or
push
ins
adc
pop
iret
xor
sbb
cld
dec
mov
push
cmps
test
jno
pop
xchg
mov
mov
jge
dec
adc
xchg
sub
out
cli
or
ficomp
movs
xlat
daa
retf
adc
mov
outs
test
mov
or
add
faddp
jl
mov
dec
adc
jb
xchg
mov
mov
add
mov
dec
inc
mov
jmp
setae
add
adc
jle
xor
fidivr
xchg
cld
pushf
push
sbb
and
std
and
das
xlat
sub
add
jae
mov
stos
push
add
hlt
mov
cmc
in
in
adc
lahf
jbe
rol
fwait
cmps
push
sahf
push
adc
jge
repz
mov
movs
ja
imul
push
mov
mov
movs
jo
and
fld
loopne
sub
nop
sub
repnz
mov
pop
dec
fsub
mov
xchg
jg
push
mov
aam
inc
out
cwde
push
mov
loop
cmp
or
fmul
and
dec
arpl
mov
or
or
leave
out
pop
jbe
fst
mul
xor
add
mov
jb
loopne
mov
rol
jl
inc
adc
ds
(bad)
test
stos
mov
iret
int3
int
imul
in
fidivr
jmp
jecxz
inc
mov
gs
mov
loopne
sahf
into
dec
lds
inc
ss
fisttp
dec
faddp
iret
jle
in
dec
push
es
in
nop
in
pop
sti
sub
fbstp
mov
push
sahf
fld
fstp
sbb
cmp
and
mov
jbe
cli
push
pop
sahf
cmc
js
call
icebp
cwde
mov
into
xor
mov
out
and
leave
leave
inc
jge
jp
fiadd
xchg
push
xchg
or
xchg
fs
fsub
in
or
adc
dec
xor
mov
mov
popa
out
js
inc
sub
mov
bnd
mov
pusha
aam
xchg
push
imul
xchg
sbb
dec
push
cld
add
adc
push
mov
mov
xchg
pusha
jg
pop
cli
mov
movs
jno
sub
arpl
jecxz
mov
mov
jo
cmp
(bad)
aam
iret
loop
sub
rol
imul
xchg
dec
std
dec
xchg
shl
mov
mov
fwait
stos
xor
test
lahf
jmp
mov
sahf
dec
sub
lds
push
cmp
jo
pop
mov
push
mov
cmc
inc
shr
mov
mov
hlt
cmp
jae
add
jae
sbb
leave
test
xchg
adc
out
out
sub
and
or
mov
xor
adc
fst
xchg
scas
mov
test
mov
fwait
or
fsubr
cmc
into
test
jbe
leave
fadd
sahf
fiadd
adc
adc
dec
jmp
jmp
imul
inc
in
cmp
pusha
lds
jge
daa
mov
repz
(bad)
call
mov
(bad)
inc
and
pop
cmp
jmp
into
xor
add
in
pop
ror
shl
(bad)
fsub
dec
aaa
stos
jo
ret
cld
add
xlat
fisub
bts
dec
sahf
mov
jecxz
jp
mov
call
mov
dec
push
in
fstp
and
sbb
popa
jmp
mov
sub
dec
ins
jnp
pop
addr16
jmp
dec
and
mov
and
data16
mov
test
add
inc
stos
and
sbb
xor
sar
mov
outs
jo
or
xor
xchg
push
inc
xor
dec
sbb
push
ja
jb
xchg
jo
lds
hlt
cld
inc
xchg
out
xchg
lds
lds
mov
fiadd
and
lods
pop
adc
in
(bad)
stos
pop
out
addr16
leave
add
imul
and
rcl
cmp
(bad)
lea
fwait
lods
jae
mov
in
lods
mov
pop
imul
xlat
mov
gs
dec
push
ja
loop
cmp
stos
movs
adc
in
and
(bad)
adc
retf
jecxz
movs
add
push
ds
pop
push
adc
popa
rcl
rol
jb
imul
push
jmp
(bad)
aam
or
scas
je
shr
or
mov
lods
dec
popf
mov
cmp
fdiv
(bad)
out
inc
mov
push
out
movs
ins
dec
out
test
mov
push
mov
mov
dec
fwait
xchg
jp
sub
loop
jge
dec
mov
adc
cmp
aas
shl
push
inc
mov
(bad)
mov
pop
test
push
dec
mov
popa
or
push
(bad)
xchg
xchg
xchg
jg
jno
xchg
pop
push
add
mov
jge
arpl
and
sub
sub
cmc
data16
xchg
aad
ins
test
inc
jmp
cli
sahf
jg
fwait
add
int3
loop
inc
or
fscale
inc
loopne
adc
pop
je
cwde
or
cmp
xchg
cmp
(bad)
sub
add
cmps
stos
xlat
ins
jp
jns
jg
or
adc
shr
out
fistp
fsubr
sub
lods
jecxz
es
sbb
in
jge
imul
mov
xor
ret
cmps
push
or
ret
lahf
and
in
xchg
dec
mov
shr
test
stos
shl
cmp
outs
das
pushf
xchg
push
add
ins
int
mov
scas
push
pop
test
xchg
push
aaa
pop
adc
mov
xor
sbb
mov
stc
stc
mul
nop
icebp
dec
test
jmp
mov
(bad)
sbb
movs
ficomp
mov
mov
in
xchg
sbb
or
ja
dec
int3
popa
(bad)
sar
arpl
inc
lock
pushf
xor
jnp
test
scas
dec
bound
inc
inc
arpl
cld
mov
mov
sbb
sub
or
cmp
add
inc
rcl
stos
sar
mov
jecxz
jmp
arpl
sbb
test
cmc
push
mov
pop
mov
jae
pop
icebp
mov
ins
xchg
lock
pusha
lea
ror
sbb
idiv
push
fild
and
pop
es
or
jno
add
(bad)
mov
je
add
cwde
fwait
jmp
fist
xchg
inc
pop
sbb
mov
push
pop
adc
add
jnp
sub
ins
cmc
add
mov
inc
test
ja
fsub
lock
mov
inc
data16
sbb
xor
push
ss
jmp
pop
cmps
inc
test
push
xor
lods
(bad)
cmp
pushf
ss
inc
adc
out
rcr
aad
out
clc
add
int
(bad)
mov
cmc
xchg
dec
push
jns
fild
mov
data16
mov
data16
js
bnd
jo
ret
pop
add
xor
es
stos
int
jle
dec
pusha
sbb
lahf
arpl
pop
aam
outs
movs
imul
ins
scas
push
clc
stc
dec
or
jle
adc
mov
mov
pop
test
(bad)
mov
cli
xor
in
mov
mov
xchg
cmp
aaa
fwait
mov
dec
mov
mov
repnz
push
xor
push
push
add
xchg
call
or
xlat
push
stc
jmp
mov
arpl
mov
xchg
test
sub
aad
aad
push
in
xor
out
pop
mov
je
stc
hlt
sti
cmp
int3
in
shl
aaa
in
out
gs
xchg
sbb
retf
test
js
stos
sub
jo
xchg
cdq
pop
(bad)
push
lock
add
push
sbb
imul
xchg
cmps
jns
into
or
loopne
movs
or
cld
mov
pushf
call
jnp
inc
add
sahf
imul
scas
sub
jae
mov
test
pop
or
jne
into
fdivp
mov
sbb
(bad)
les
cs
scas
lds
jbe
and
pop
mov
sub
xor
and
xchg
sahf
fsubp
jae
xchg
push
xor
and
add
ret
adc
and
scas
mov
inc
and
enter
addr16
jae
sub
mov
ins
and
cmp
jp
adc
push
fdiv
jae
aaa
lods
adc
xchg
ret
pop
mov
pop
mov
addr16
dec
sub
push
mov
adc
dec
ins
into
pop
mov
inc
ins
and
pop
push
jl
hlt
add
push
jns
(bad)
pop
inc
jns
jno
call
shl
sub
cmp
cmp
out
jle
jmp
sbb
jne
sbb
pop
inc
sub
cmc
mov
jbe
pop
pusha
popa
ins
dec
shl
jl
and
push
lods
xchg
shr
out
add
mov
(bad)
enter
mov
dec
lock
mov
jno
ds
mov
or
pmaddwd
daa
dec
push
leave
cs
mov
arpl
push
into
out
mov
or
add
adc
pushf
leave
mov
sbb
outs
sub
arpl
out
es
cmp
jge
into
(bad)
gs
xchg
clc
mov
sbb
inc
scas
repnz
and
pop
jle
aas
mov
rcr
pop
sub
mov
lea
pushf
leave
mov
add
mov
add
inc
lea
sub
fild
cmp
mov
jne
fild
lock
sub
push
pop
mov
sbb
popf
cmp
loope
jne
jo
into
iret
mov
lock
into
xchg
add
inc
jnp
aaa
test
sbb
or
mov
psrlw
cld
(bad)
ficomp
and
adc
cs
mov
cmp
pop
or
in
cmp
push
aaa
xor
sub
mov
xchg
xor
std
in
push
cmps
pop
and
and
sbb
add
push
clc
mov
jns
pop
push
pop
or
mov
inc
loop
fisub
movs
xchg
xor
mov
test
int
(bad)
pop
fst
push
ins
sub
cmp
pusha
repnz
movs
sbb
jne
sbb
scas
daa
xor
cmp
cmp
and
and
add
shl
jns
gs
jae
mov
into
pop
fld
jb
add
add
emms
jne
mov
cmp
cmps
pop
in
bound
adc
nop
mov
not
mov
jge
jns
lods
pop
jb
iret
cmp
arpl
iret
call
lock
sahf
push
mov
mov
lods
in
lahf
inc
(bad)
or
jns
int
mov
test
mov
add
or
outs
inc
into
out
std
mov
frndint
mov
xchg
pushf
sbb
in
jg
add
cdq
mov
xchg
ds
push
mov
jb
pusha
(bad)
(bad)
sub
sti
adc
lock
push
(bad)
repnz
aaa
push
inc
xor
scas
outs
pop
mov
retf
icebp
popf
retf
ja
or
jmp
cmp
sar
dec
sub
das
retf
fld
push
fistp
cmp
dec
icebp
xchg
push
or
fbld
xchg
sahf
jmp
je
sub
push
leave
fdivr
mov
sub
std
clc
jmp
pop
and
icebp
xchg
add
(bad)
xchg
cmp
ficomp
fcomp
jp
idiv
retf
sahf
pop
ror
add
or
lds
repz
jg
cmp
and
sbb
xor
dec
push
ins
add
adc
push
add
nop
xchg
leave
in
pop
neg
dec
stos
frstor
call
mov
enter
cli
pushf
pop
jnp
add
add
data16
jo
ds
xor
scas
or
xor
mov
cmps
pop
mov
inc
jecxz
mov
addr16
daa
lods
push
inc
mov
test
inc
(bad)
ins
sbb
inc
movs
inc
cmp
mov
mul
call
loop
leave
cmp
add
dec
xor
mov
in
call
rcl
push
jnp
cmp
popa
arpl
(bad)
cli
ss
in
dec
call
int
scas
es
push
mov
(bad)
sub
leave
pushf
fwait
movs
loop
out
sahf
mov
test
stos
xchg
(bad)
repnz
popa
mov
bound
xor
shr
xor
or
mov
and
add
mov
repz
inc
arpl
fbld
mov
jbe
or
adc
sti
pop
retf
xlat
ror
pushf
in
loope
scas
push
or
popf
xor
pushf
rol
sub
dec
lods
jb
push
and
jg
sub
in
ror
lds
fs
pushf
and
bound
fnstsw
retf
sbb
call
jge
sbb
daa
lahf
xchg
add
mov
(bad)
cmp
inc
mov
push
pop
cmc
leave
sbb
dec
mov
pop
scas
(bad)
mov
add
add
(bad)
mov
adc
in
jbe
jge
rcr
movs
pop
sbb
(bad)
dec
dec
xor
pop
cdq
(bad)
lds
retf
dec
jmp
lahf
pusha
jl
xlat
pop
outs
ror
push
add
int3
or
test
fimul
(bad)
push
xor
push
jmp
or
jns
jns
or
xor
(bad)
and
cmps
pop
jbe
clc
rcr
xchg
inc
cmp
aad
rol
xor
cwde
mov
inc
cmp
mov
cmp
adc
fadd
adc
push
sbb
fidivr
ret
xchg
ffree
push
ss
cs
ins
cld
call
lods
push
adc
call
fnstenv
lds
mov
adc
outs
mov
cwde
dec
data16
mov
in
mov
adc
xchg
cmp
mov
or
mov
call
retf
jnp
daa
fldenv
dec
in
rol
push
aam
push
stc
or
xchg
test
cmp
add
repnz
sub
mov
dec
cmps
ret
pop
push
add
fdiv
xor
sub
gs
js
mov
cs
jbe
aaa
mov
test
mov
and
inc
ret
pop
int3
push
imul
clc
idiv
pop
movs
arpl
arpl
push
aaa
addr16
(bad)
mov
and
lock
(bad)
cmp
in
jg
mov
into
xor
in
out
fnstsw
lds
in
idiv
cmp
and
push
push
sbb
cdq
or
sbb
and
movs
pushf
xchg
gs
ret
in
movs
outs
aad
in
mov
push
cmc
(bad)
push
mov
dec
(bad)
loopne
stos
out
test
push
push
outs
sub
mov
in
fwait
cdq
jb
push
push
pop
mov
xor
dec
nop
xchg
call
lods
(bad)
xor
(bad)
sahf
mov
div
mov
mov
ins
mov
cmp
mov
fbld
sti
pop
(bad)
push
sbb
dec
jbe
daa
pop
jbe
inc
aaa
js
xchg
into
push
inc
sbb
out
adc
add
jge
scas
fsub
call
lods
adc
or
xor
xor
mov
xrelease
mov
sbb
stos
push
push
or
shr
push
mov
movs
bound
mov
shl
cmp
call
imul
jmp
ins
mov
rcr
in
clc
ja
mov
mov
dec
mov
out
mov
in
dec
imul
dec
retf
add
xlat
fcomp
ins
xor
xchg
dec
push
and
sbb
iret
test
rol
xchg
pop
inc
cmc
pop
push
mov
dec
mov
inc
push
repnz
cs
mov
jg
aas
test
cmp
aas
aaa
push
dec
repz
or
push
xchg
mov
pop
cmp
stos
dec
xlat
test
test
ficom
idiv
rol
push
mov
inc
sub
jnp
mov
addr16
movs
jecxz
movs
xchg
rcl
xlat
sbb
in
sbb
cmp
shl
jg
in
sub
inc
and
push
bound
cmps
cmp
or
(bad)
xchg
jecxz
ja
pop
popa
mov
fisttp
dec
inc
add
add
mov
sahf
in
push
push
ds
xchg
push
jmp
retf
test
ss
scas
jl
pop
fld
or
add
sub
ins
jmp
pop
pop
ficomp
stos
push
inc
and
pop
stos
pop
xchg
push
adc
jecxz
test
je
xchg
adc
mov
out
mov
cmps
aad
outs
fmul
mov
mov
push
nop
lods
jno
jl
dec
lahf
sbb
gs
sbb
adc
pop
push
or
mov
sub
cmp
jo
jecxz
mov
sub
fistp
push
and
mov
inc
std
in
stc
enter
xor
in
lock
inc
add
jmp
rol
inc
into
inc
jecxz
mov
es
inc
les
iret
xor
adc
rcr
int
neg
sub
repz
jg
dec
(bad)
cmp
test
mov
sub
test
(bad)
js
xchg
jnp
and
dec
jae
mov
lods
fs
and
in
sahf
cmp
sbb
xchg
add
sar
mov
fnstcw
push
mov
out
(bad)
mov
mov
cwde
push
test
out
in
push
call
loopne
aaa
and
or
push
adc
xor
inc
leave
mov
sbb
cwde
ja
jmp
xor
cmps
jp
movs
cli
and
jnp
or
test
pop
not
sbb
push
jne
sbb
daa
xchg
(bad)
dec
gs
scas
cmp
mov
jle
daa
int3
jmp
lea
xor
jg
test
pop
mov
dec
stos
repnz
popf
out
imul
ror
xchg
pop
clc
ss
in
in
lds
(bad)
in
(bad)
sti
xchg
mov
add
fwait
xchg
inc
(bad)
in
jmp
jb
sub
or
or
arpl
lahf
mov
call
std
ds
mov
enter
push
add
inc
jl
and
lock
inc
push
loopne
xchg
cmc
imul
shl
fild
fidiv
hlt
out
mov
inc
jmp
pop
inc
(bad)
in
or
or
pop
mov
dec
pop
ficom
out
push
pop
icebp
sub
sbb
fidiv
sbb
adc
pop
cmp
fsubr
jp
enter
daa
xor
sbb
ins
jae
lea
retf
cmp
push
(bad)
push
push
sub
adc
mov
je
lds
shr
ret
jnp
pop
call
push
je
cmp
push
mov
aas
pushf
repnz
xchg
xlat
addr16
pop
jo
xchg
add
sahf
jo
ret
cs
or
mov
psubsw
jmp
adc
hlt
leave
sub
cwde
pop
fwait
cmp
fwait
je
xchg
daa
aam
sub
inc
or
(bad)
aam
pushf
xchg
dec
mov
xchg
icebp
out
in
sbb
(bad)
cwde
add
mov
stos
or
fnstsw
loopne
(bad)
push
cmp
imul
xor
scas
test
xchg
bound
sar
frstor
jle
mov
nop
xchg
mov
out
pusha
outs
cwde
aam
fdivr
outs
inc
in
lods
jl
arpl
push
xor
jmp
inc
mov
push
sub
sub
jae
test
fdivr
adc
mov
adc
mov
stc
(bad)
das
xor
sub
fs
xchg
loopne
push
pop
les
push
mov
imul
lods
(bad)
sbb
sbb
std
test
das
xor
(bad)
loopne
ins
bound
xor
vpmulhuw
sub
das
pop
(bad)
fbld
sbb
out
xor
loope
and
or
div
and
mul
cmp
mov
test
push
jb
into
loope
inc
mov
sub
or
enter
sub
sub
mov
xchg
dec
jbe
sbb
pop
sti
loope
jmp
inc
inc
inc
(bad)
mov
fmul
xchg
aad
inc
push
aad
(bad)
jnp
xor
adc
mov
loopne
lods
inc
in
xor
pop
pop
ds
mov
inc
cmc
sub
ja
xchg
js
rcr
add
adc
adc
inc
test
sbb
int
or
in
ss
mov
repz
mov
shr
pop
lods
lahf
stos
adc
mov
test
and
stos
jmp
popf
outs
mov
leave
mov
pop
fidiv
cmp
jecxz
jae
out
sbb
adc
pop
les
cmp
inc
stos
jmp
cmp
push
push
jb
pop
mov
jne
imul
jb
in
outs
push
push
sub
bt
fldenv
sbb
or
js
fwait
or
mov
fadd
scas
sbb
cmp
in
mov
loope
dec
or
or
cmps
sub
arpl
xchg
xchg
xor
mov
fldenv
adc
rol
pop
inc
cmp
ds
ss
cmp
jp
xchg
pop
mov
or
imul
or
cmps
or
pop
stos
cmc
sbb
les
mov
jmp
neg
sub
sar
cmc
mov
stc
loope
push
lods
push
push
es
mov
dec
fs
fnstcw
call
cmc
ins
inc
imul
(bad)
cmp
jne
sbb
cmp
xor
push
retf
lahf
sub
cs
xor
push
leave
jns
test
movs
out
add
xchg
lods
jecxz
xchg
ret
nop
data16
daa
iret
jae
lea
mov
dec
in
sbb
out
mov
inc
popf
mov
nop
add
dec
inc
xchg
jo
push
cmc
add
pop
test
jnp
jl
sbb
jmp
pusha
push
and
clc
shl
or
pop
loop
int3
xor
jo
fild
icebp
aad
fadd
mov
dec
add
or
mov
jae
retf
mov
iret
test
ins
lods
ja
push
test
sub
jg
out
push
adc
jecxz
mov
daa
ins
pop
mov
clc
(bad)
jl
xor
jge
push
inc
or
shr
stos
or
clc
cmp
in
xchg
jo
cli
mov
mov
cdq
(bad)
push
add
dec
push
dec
loopne
jns
push
xchg
(bad)
xchg
outs
sbb
(bad)
dec
inc
and
(bad)
jmp
pop
mov
and
lea
ins
jns
adc
jle
inc
test
mov
movs
mov
xchg
push
add
popa
fisttp
sbb
push
ret
pop
cmp
pop
gs
pop
(bad)
jne
push
adc
rcr
inc
shl
in
nop
rcr
lds
retf
stc
imul
clc
mov
cdq
adc
pop
pop
inc
lods
sub
ror
les
fcmovbe
stos
dec
stos
dec
icebp
pop
sub
add
sbb
neg
mov
xor
enter
movs
mov
(bad)
aam
sbb
push
das
mov
pop
test
movs
dec
test
cmp
aaa
fwait
sub
adc
mov
push
js
test
sbb
pop
sub
fs
and
mov
(bad)
xchg
add
or
popf
cmp
stos
dec
cmp
mov
push
mov
mov
shr
and
in
or
sbb
sbb
add
sti
js
sahf
retw
ss
(bad)
es
popa
std
dec
(bad)
outs
adc
clc
or
sub
push
dec
or
sbb
lds
inc
inc
popa
out
jg
jl
add
sbb
(bad)
or
xchg
adc
mov
pop
(bad)
cdq
xlat
(bad)
pop
js
xchg
jge
mov
pop
cmp
mov
rol
test
sbb
mov
call
mov
mov
clc
dec
shl
dec
xchg
add
aaa
xchg
cmp
pop
push
nop
ins
inc
pop
dec
sbb
xor
jo
sbb
push
mov
or
mov
dec
mov
(bad)
mov
dec
pop
fwait
sub
sbb
push
jne
dec
imul
shl
adc
mov
call
leave
pop
test
imul
(bad)
jge
dec
dec
jns
xor
dec
imul
enter
and
cli
mov
cmps
shl
and
add
mov
inc
test
out
xor
add
sbb
(bad)
sbb
std
xchg
fistp
shl
outs
inc
dec
xchg
test
mov
cmp
arpl
xor
xor
test
xchg
or
cmovl
pop
cdq
shl
inc
rcpps
mov
xchg
cmps
pop
xchg
xor
ds
scas
into
cmps
cmp
std
test
clc
leave
push
push
dec
xchg
jecxz
bound
add
inc
movs
loopne
imul
sbb
pop
xchg
push
fadd
add
test
sahf
inc
nop
nop
xchg
mov
fcom
shl
shl
pop
jnp
jb
iret
sub
xchg
out
js
add
mov
cs
movs
mov
adc
test
mov
je
xchg
cmps
out
mov
out
fmul
adc
or
call
test
add
out
(bad)
push
jmp
inc
sub
cmp
inc
push
lds
cmps
add
fnsave
(bad)
in
xor
(bad)
mov
add
pop
dec
add
add
enter
or
push
pop
jns
mov
(bad)
lahf
clc
or
out
out
retf
call
pop
pop
pop
inc
jmp
dec
test
sbb
bound
pop
data16
xor
(bad)
or
(bad)
jb
adc
in
daa
adc
ror
mov
and
(bad)
pop
jo
jns
mov
mov
js
xchg
addr16
xor
or
or
add
push
sbb
pushf
push
cs
rcl
sar
in
retf
pop
jle
lds
xor
imul
faddp
int3
or
js
mov
out
sub
fnstsw
sub
push
hlt
inc
jecxz
jmp
push
dec
ss
shr
cmc
dec
test
adc
mov
jmp
xor
test
cmp
mov
call
or
ret
sbb
dec
and
sbb
stos
add
inc
mov
xchg
mov
imul
add
test
loop
out
pop
inc
mov
or
xchg
int3
test
scas
or
out
inc
inc
sti
sub
(bad)
lea
sbb
jae
outs
adc
push
push
scas
jmp
push
xor
jge
sbb
inc
cmp
jp
xchg
pop
adc
icebp
call
jp
sub
xchg
in
push
mov
push
lahf
push
mov
loopne
mov
or
mov
addr16
fbstp
lds
xchg
arpl
mov
inc
sbb
js
jne
fwait
jmp
mov
push
and
push
mov
cmps
ja
pop
jns
push
push
and
mov
popa
xor
bound
jl
mov
cmps
jb
retf
dec
cli
mov
ins
xor
jecxz
push
ror
sub
and
repnz
in
std
jmp
inc
stos
fidiv
xor
sbb
cmp
mov
cmp
fisubr
enter
loope
stos
mov
push
inc
movs
push
mov
push
or
or
push
imul
hlt
dec
add
xchg
push
xchg
push
mov
or
add
repnz
sub
arpl
jl
(bad)
ds
movs
mov
sub
in
fcom
inc
mov
mov
mov
hlt
in
and
lods
in
sbb
mov
aam
add
mov
cmp
cdq
(bad)
add
mov
cmp
adc
sbb
push
sub
mov
adc
xchg
repz
movs
loope
mov
and
icebp
out
das
push
and
shl
or
shl
add
and
lods
push
dec
jg
pop
arpl
repz
jns
adc
enter
fwait
sysexit
push
into
fcmovnbe
adc
jb
addr16
neg
add
and
mov
aam
loope
push
pushf
shl
jo
ds
mov
add
pop
loopne
mov
mov
mov
mov
pushf
add
into
rol
mov
fucomi
fcmove
scas
into
pop
push
ss
sbb
or
in
ss
pop
popa
add
xchg
or
add
fsubr
xchg
gs
cmp
xchg
outs
hlt
call
jnp
xor
(bad)
or
jp
leave
mov
pop
aad
inc
and
xchg
hlt
push
scas
jbe
in
mov
adc
out
icebp
test
cmp
push
cmp
sub
fisttp
imul
mov
aad
rcr
or
scas
jg
mul
arpl
push
pop
cdq
push
call
cli
enter
sahf
sbb
dec
push
or
stos
mov
aas
dec
(bad)
fisub
sub
out
fistp
xor
or
lock
mov
push
call
(bad)
jbe
out
add
mov
mov
ret
and
and
inc
xor
(bad)
ror
movs
or
jl
xor
test
test
add
push
pop
shr
lods
sbb
popf
std
adc
and
mov
scas
xchg
add
movs
ja
lods
push
sahf
dec
es
sub
add
in
xor
jo
dec
aad
div
adc
std
aas
xlat
sub
lds
mov
mov
mov
mov
mov
cdq
mov
cmp
sub
mov
stos
sbb
sub
push
and
xchg
push
cmp
cli
inc
pop
loope
add
and
lods
mov
je
sub
sbb
(bad)
sbb
cmp
and
mov
xor
(bad)
push
cmp
out
dec
xchg
jg
lock
add
jle
out
es
push
pop
cmp
mov
fwait
jno
mov
jb
mov
or
lock
cwde
jno
inc
mov
mov
shr
adc
mov
call
jnp
jno
xlat
test
sahf
lock
jecxz
cmp
mov
mov
adc
jl
cli
adc
in
push
imul
repz
mov
loop
mov
xchg
push
lods
jge
or
jbe
jge
xor
dec
jb
or
ffree
inc
inc
pop
mov
addr16
sbb
sahf
stos
lods
and
ins
fdivr
lea
popf
out
scas
retf
fild
jno
repz
sbb
aas
dec
hlt
sar
xor
xor
mov
daa
fdivr
outs
mov
cmps
aaa
js
inc
inc
dec
cmps
lea
ja
xchg
xlat
add
mov
test
pop
dec
(bad)
imul
lea
ficomp
lock
and
fld
add
aaa
push
push
out
aam
out
in
adc
int
out
push
iret
pop
shl
fs
add
test
imul
int3
fadd
(bad)
push
dec
push
cmc
cmps
shl
inc
sub
xor
cmps
loopne
movs
add
ret
push
outs
push
outs
cmp
xchg
mov
call
int
inc
mov
cdq
cdq
push
fsubr
inc
dec
imul
push
and
adc
mov
sbb
inc
xchg
xchg
iret
fistp
or
and
cmp
push
into
jbe
je
or
nop
mov
arpl
out
cwde
adc
cmp
adc
fcom
(bad)
rcl
dec
out
xor
mov
mov
or
or
(bad)
jo
push
xchg
cli
cmp
jns
fsub
adc
jecxz
jno
pop
push
mov
or
fnstsw
jne
fst
fnstenv
xchg
ret
mov
mov
pushf
adc
add
aam
inc
call
call
cmps
xchg
cmc
dec
sbb
and
dec
mov
jle
out
stos
movs
(bad)
loope
daa
xor
retf
and
inc
lods
mov
cmp
fcomi
push
fsub
cwde
jge
ficom
repnz
add
ret
jb
cmp
out
push
sub
xchg
cmp
outs
mov
in
push
sbb
aam
bound
inc
out
mov
pop
test
and
xor
jmp
add
fiadd
adc
push
retf
sbb
sahf
stc
cwde
loope
movs
cmp
repnz
mov
dec
fist
int
addr16
outs
arpl
mov
mov
jns
sbb
std
mov
add
inc
cmp
aas
push
movs
mov
xor
push
(bad)
stos
xchg
imul
mov
loopne
mov
mov
inc
call
call
scas
sub
sub
ror
fld
add
ss
pop
call
fcomp
mov
and
add
push
fnstenv
popa
adc
pop
sub
push
cdq
push
and
imul
push
jns
or
loop
xchg
cdq
addr16
or
es
and
mov
mov
add
gs
data16
and
jl
aad
enter
cmp
mov
imul
mov
push
mov
add
adc
push
sub
outs
in
ret
nop
sbb
fbld
push
jmp
adc
jbe
arpl
xor
cdq
fs
xchg
mov
pop
cmc
dec
dec
shl
sti
into
mov
mov
stc
clc
leave
ins
rcl
or
repz
lahf
dec
xor
mov
jae
jns
and
fmul
sahf
pop
inc
std
ja
push
test
movs
mov
dec
xchg
mov
inc
sar
nop
xchg
add
mov
mov
push
and
cmps
dec
sbb
jne
sbb
mov
lea
xor
fadd
jns
sahf
pop
std
jnp
jg
jno
es
clc
dec
xchg
mov
fcomp
sbb
xor
inc
movs
mov
div
cmps
push
and
loop
idiv
test
dec
cmps
xchg
js
ins
mov
mov
movs
mov
mov
iret
sub
mov
mov
fisubr
out
loop
adc
pop
pop
fs
add
mov
test
mov
inc
mov
jae
push
adc
popf
cmp
mov
xchg
and
(bad)
xor
jmp
data16
(bad)
test
inc
and
ins
shl
adc
xor
retf
inc
jb
dec
xchg
and
xor
mov
das
stc
addr16
adc
sub
mov
cmp
and
movs
(bad)
test
sar
add
iret
jno
mov
or
push
push
repnz
or
mov
je
clc
in
mov
shr
adc
xlat
nop
push
mov
es
sbb
pop
test
int3
jmp
jmp
xor
repz
push
jmp
mov
cld
sbb
cmp
js
push
xchg
imul
sub
sar
fsub
loop
xchg
add
sub
add
sub
mov
jle
je
adc
(bad)
sbb
jae
idiv
adc
or
jle
push
cli
mov
ret
neg
add
adc
mov
mov
repz
arpl
fs
pop
test
sub
mov
mov
jmp
sub
cwde
lock
fistp
ror
pop
ins
xor
cmp
mov
mov
cmp
xchg
or
jae
das
in
popa
sbb
xor
xchg
sub
pop
enter
bound
push
je
pop
call
or
sub
loopne
cmp
pop
nop
adc
in
outs
rcl
push
mov
leave
mov
and
xchg
push
add
call
rcl
adc
int3
and
mov
mov
jns
std
sub
sub
mov
ror
lods
adc
jmp
pop
test
in
mov
dec
pop
xor
mov
xor
pop
int3
fucomp
(bad)
sub
cmp
rcr
clc
es
mov
push
cld
jo
and
les
sahf
cmp
fldcw
pushf
fnstsw
add
pop
repz
inc
push
fisttp
jl
add
jmp
pusha
cmp
imul
mov
ins
fcomp
push
(bad)
into
and
xlat
mov
call
imul
xor
push
iret
repnz
rcr
xchg
(bad)
push
data16
adc
retf
aas
or
bound
jl
mov
jne
int
cdq
adc
shl
push
stos
ret
cdq
push
and
imul
add
pop
and
dec
jge
cli
loop
into
mov
mov
xchg
aaa
cmp
xor
std
dec
xlat
sbb
(bad)
jo
dec
loope
or
or
cli
test
je
outs
bound
push
xor
pop
ins
sbb
test
movs
pop
idiv
(bad)
(bad)
cmc
add
in
mov
into
and
sbb
out
in
cmp
in
fbld
cmp
cmp
inc
push
jo
sub
pop
repnz
inc
adc
mov
cdq
sbb
lahf
xchg
adc
fdivr
aam
inc
push
std
and
data16
sbb
jae
pushw
jp
xchg
jp
es
xor
out
and
je
push
pop
mov
and
jne
test
and
jo
test
pop
and
inc
gs
push
adc
xchg
push
stos
daa
inc
movs
jbe
pop
jg
in
(bad)
das
(bad)
mov
aas
sar
adc
cmp
jg
aaa
hlt
adc
iret
push
inc
sub
cmp
dec
inc
inc
call
sbb
jmp
xchg
out
mov
pop
jb
pop
sub
cwde
mov
scas
pop
xlat
inc
xchg
mov
inc
xchg
(bad)
and
xchg
lea
dec
movs
cmc
iret
lahf
pushf
fisubr
loope
or
stos
(bad)
mov
adc
sub
bound
push
jo
(bad)
in
xor
shl
pop
(bad)
xchg
push
retf
fisttp
adc
sbb
push
daa
fld
rcr
push
cmp
adc
xor
push
bound
sar
hlt
jg
call
lods
add
stos
cdq
retf
mov
rcl
mov
xor
push
clc
retf
xchg
out
fsub
mov
mov
out
mov
outs
(bad)
pop
repnz
mov
sub
sete
and
je
je
(bad)
retf
lds
adc
sub
pop
mov
adc
sbb
mov
das
mov
xchg
in
pushf
sub
imul
xchg
adc
sub
vmwrite
and
pop
sub
pop
add
dec
mov
mov
clc
enter
fdivr
or
push
xchg
dec
push
repnz
or
lods
mov
jns
mov
pop
lds
pop
adc
xchg
test
lds
adc
(bad)
and
repz
adc
test
jge
outs
mov
add
inc
mov
or
and
xchg
sub
jmp
enter
ins
retf
xchg
push
fistp
sub
xchg
or
dec
cli
sbb
mov
cmp
mov
xchg
push
div
dec
(bad)
mov
mov
lods
push
push
mov
fcomp
aaa
fsub
jp
dec
nop
push
mov
sub
pop
adc
mov
sbb
mov
ror
jbe
mov
stc
les
fsub
cmp
add
pop
sar
inc
and
mov
cmp
cli
sub
cs
jo
adc
xchg
fwait
jmp
std
sbb
xchg
int3
jmp
fs
adc
imul
mov
dec
jno
xor
xchg
fwait
in
(bad)
in
out
leave
add
and
cmps
stos
test
sub
stc
xor
mov
mov
mov
xchg
lods
sar
cdq
lds
xchg
outs
inc
mov
test
hlt
test
pop
push
xchg
adc
mov
hlt
les
les
arpl
jnp
mov
sub
cmp
fiadd
ficomp
mov
outs
cmc
movntps
sub
inc
add
and
(bad)
pop
mov
pop
test
out
fld
fwait
add
icebp
push
(bad)
xchg
hlt
daa
pop
dec
sbb
jbe
inc
mov
(bad)
fsubp
(bad)
push
test
mov
rcl
xchg
aam
les
lods
jae
xor
xchg
dec
push
je
xchg
out
pop
outs
arpl
repz
mov
xchg
rcr
in
loope
loop
stos
adc
mov
inc
pop
imul
std
xchg
push
or
retf
mov
add
aas
xor
xor
js
jl
sbb
test
xor
cli
ja
and
inc
aad
paddw
stos
inc
dec
jne
(bad)
test
pop
imul
xchg
call
pop
jl
inc
sti
pop
sbb
lods
and
pop
fsubr
shl
fiadd
adc
(bad)
mov
jle
mov
ds
movs
loop
hlt
loopne
and
mov
or
iret
aam
aas
icebp
jae
ret
dec
mov
mov
hlt
clc
aam
xor
inc
inc
pop
xor
sub
aaa
sbb
adc
pop
jae
push
mov
xchg
lock
sbb
or
cmp
mov
test
sub
std
cmp
ja
pop
in
push
test
test
cli
imul
mov
jo
xchg
xchg
mov
inc
daa
(bad)
push
add
stos
xor
ins
mov
jmp
mov
fadd
dec
scas
mov
dec
call
out
into
mov
rol
icebp
ins
das
jae
mov
outs
addr16
jp
or
mov
sbb
ret
loop
stos
pop
xor
mov
xchg
inc
ja
jge
lock
jbe
addr16
adc
cmc
inc
sbb
add
xchg
test
clc
lock
inc
cmp
sub
hlt
and
xchg
inc
dec
into
push
push
fstp
lods
scas
vcmpss
xchg
test
cwde
(bad)
shl
mov
adc
fsub
jle
xchg
push
into
push
mov
inc
add
push
pop
fwait
push
xor
jbe
push
xor
jno
jbe
add
out
xor
repnz
pop
lods
test
les
push
jp
push
mov
jp
cmc
loopne
cmp
fnstsw
ror
jg
jl
sar
cmp
stos
pushf
adc
pop
dec
mov
das
cvtps2pi
dec
fisttp
fistp
inc
mov
xchg
pop
or
mov
ins
push
shr
adc
in
jge
and
jmp
mov
inc
movs
cmp
inc
jnp
mov
cmps
xchg
sbb
jmp
lods
or
cs
in
jns
jle
xchg
in
sub
xchg
(bad)
fsubr
and
jecxz
jb
mov
push
cmc
test
mov
inc
cld
adc
frstor
sub
sbb
mov
es
jne
js
int3
jmp
jecxz
das
jmp
cld
push
dec
cdq
sub
pushf
ins
add
lock
and
imul
test
scas
dec
pop
xor
dec
stos
push
mov
push
ins
cmps
or
mov
sbb
add
and
or
popf
les
sahf
loope
and
xchg
cs
xchg
add
or
sub
xchg
addr16
outs
daa
movs
push
dec
lahf
repz
fdivp
push
loope
test
outs
dec
cmp
and
and
xor
push
xor
mov
fimul
mov
in
test
lods
enter
(bad)
movs
cmps
in
jno
adc
test
and
out
push
push
call
and
jbe
imul
test
std
push
repz
add
mov
cs
test
cdq
xchg
xchg
ficom
xchg
sbb
or
sbb
cmps
neg
and
jg
(bad)
outs
stc
jb
les
jl
jmp
inc
call
(bad)
push
ret
adc
inc
xchg
cmps
repnz
inc
stos
jmp
jg
and
aaa
sub
retf
pop
test
add
pop
loope
aam
push
inc
data16
mov
mov
rcl
ficomp
div
jbe
cdq
loope
rcl
addr16
jle
or
sbb
shl
add
retf
clc
ret
std
(bad)
sbb
mov
dec
nop
lods
(bad)
popf
out
jno
mov
arpl
ret
and
in
cmps
into
push
adc
add
repz
pop
push
mov
iret
sbb
xchg
ficomp
movs
and
out
test
lock
jmp
push
data16
sub
inc
cmp
xor
xchg
inc
sbb
cmp
aaa
xor
stos
pop
fisub
out
mov
nop
push
push
mov
call
sub
rdmsr
js
adc
or
std
rol
mov
jecxz
js
xchg
push
pop
(bad)
imul
xchg
xor
push
xchg
ror
sub
cmps
pop
cmp
sar
nop
rcr
inc
pop
popa
retf
into
jle
cli
sub
inc
cmps
rol
movs
fwait
sar
jns
shr
in
and
inc
cmp
push
nop
sub
aaa
aaa
dec
mov
jno
pop
xchg
cmp
mov
xor
out
in
sbb
push
ins
and
add
fs
test
repnz
fwait
int
loopne
jecxz
mov
test
fs
add
or
(bad)
dec
jge
and
sub
xor
stc
call
or
pop
sar
(bad)
lahf
xchg
pop
fwait
sub
sub
pop
enter
dec
ret
xchg
xlat
fcom
dec
es
xor
add
jno
or
mov
lds
ds
fmul
mov
and
sub
ss
mov
sar
jae
add
jo
push
add
lods
bound
jecxz
test
fs
dec
mov
jl
test
cmc
enter
test
adc
xchg
cwde
stc
outs
mov
mov
das
test
adc
popf
and
pop
fld
pop
dec
adc
add
div
mov
adc
and
jns
mov
xchg
mov
int
xchg
aas
cmp
aaa
inc
dec
push
imul
test
lds
cmp
sub
jge
mov
push
shl
fisttp
and
popf
mov
or
push
mov
jno
jae
jecxz
jns
shr
lahf
or
jb
mov
push
and
retf
pusha
addr16
cmp
adc
pop
mov
pop
ja
inc
and
push
inc
mov
ss
mov
das
shr
pop
mov
jae
pop
lea
add
cmp
mov
imul
cmp
call
loopne
mov
and
sbb
mov
(bad)
lock
xor
fnsave
push
ret
xchg
inc
mov
cmp
ss
sbb
cwde
or
(bad)
mov
aas
scas
and
popa
in
ins
mov
pushf
fwait
inc
mov
call
mov
icebp
xchg
and
stc
ret
push
movs
mov
int
clc
push
pop
ret
das
mov
xor
cmps
stos
mov
scas
push
fdiv
jl
aas
iret
psubusw
cli
pushf
pop
and
pop
xor
jnp
gs
cmp
xchg
or
scas
adc
(bad)
loopne
push
xchg
jp
in
add
mov
sbb
arpl
and
xor
adc
jecxz
xchg
dec
shl
push
ror
das
cmp
test
inc
dec
add
call
jnp
aas
in
mov
mov
or
mov
dec
push
cmp
iret
jmp
loop
add
or
cdq
pop
adc
leave
arpl
inc
xor
or
cmp
adc
retf
and
cld
push
sub
mov
mov
or
iret
gs
add
loopne
xlat
loopne
mov
dec
jns
and
shl
add
mov
dec
dec
out
xchg
mov
pop
pop
jl
cmps
or
in
inc
test
mov
pop
cmp
adc
ins
(bad)
mov
daa
and
cli
push
pop
daa
mov
xchg
cld
imul
loope
mov
add
inc
xlat
mov
rcr
or
fs
xor
aaa
mov
rep
in
test
into
xchg
pop
fnclex
adc
leave
out
jl
xchg
jno
std
leave
sub
in
test
jb
and
mov
cmovnp
ins
xor
out
add
sbb
sub
sub
inc
lods
push
out
mov
loopne
jb
push
icebp
mov
and
stos
cwde
add
push
retf
pop
cmp
pop
mov
inc
in
push
sbb
jg
cmp
mov
mov
mov
add
jb
movs
pop
test
add
sbb
sub
dec
imul
pop
fwait
repnz
mov
add
shl
xor
movs
iret
into
mov
cmp
xchg
scas
add
add
add
cmp
mov
nop
inc
das
pop
pop
in
pop
pop
(bad)
add
cmp
push
xchg
aas
xchg
jl
fucomp
(bad)
lea
ins
xor
rcr
jb
jle
popa
scas
mov
jg
cmc
ds
add
sub
jb
popa
push
enter
jb
icebp
lods
mov
pop
aas
inc
xchg
xor
out
push
in
movs
movs
enter
inc
pop
cwde
imul
fiadd
cmp
xchg
aad
adc
les
test
imul
pslld
pop
ds
aad
push
inc
daa
push
push
daa
jp
out
outs
mov
sahf
push
bound
dec
pop
inc
add
repz
xchg
xchg
fild
xor
inc
popf
pop
mov
scas
xor
loop
jmp
inc
jo
adc
int
sbb
bnd
test
push
dec
or
mov
repnz
ror
inc
pop
push
in
clc
jae
fisub
mov
or
imul
dec
mov
jno
jge
lods
mov
sbb
mov
mov
sahf
and
cs
adc
popa
icebp
loop
out
xchg
es
push
ret
xchg
outs
mov
mov
test
or
xchg
ror
xchg
(bad)
idiv
mov
fiadd
push
aas
mov
(bad)
cmp
sbb
je
xor
or
pop
mov
sbb
dec
or
sub
jo
stc
mov
es
enter
jno
(bad)
jae
dec
pop
clc
dec
sub
dec
iret
sub
push
pop
mov
dec
push
repnz
bound
add
push
cmp
hlt
xchg
sub
push
sub
jbe
jecxz
dec
in
dec
das
xor
and
push
mov
push
(bad)
add
fsubr
mov
push
pushf
ja
cmps
jnp
cdq
xchg
dec
faddp
or
in
add
and
pop
leave
ficomp
mov
cmp
clc
arpl
xchg
movzx
or
or
xor
popa
lock
aas
data16
popa
and
add
dec
pop
inc
dec
xchg
xchg
mov
and
out
or
loopne
aam
mov
xchg
les
icebp
fdivr
lock
xchg
aas
pop
mov
shr
or
mov
sbb
inc
outs
and
cmps
push
mov
jns
mov
mov
jl
mov
xchg
stos
mov
mov
inc
mov
pop
push
xchg
mov
arpl
fs
(bad)
shl
fistp
in
test
out
movs
inc
fwait
sahf
les
gs
pop
sar
or
sti
into
daa
leave
mov
sub
ins
push
out
jecxz
and
ds
daa
stc
rcr
daa
aam
imul
add
push
mov
loope
jmp
pop
inc
xor
in
icebp
popf
in
push
xchg
sub
cmp
sahf
sub
out
xchg
xlat
ins
cmps
sub
nop
push
sub
cmc
xchg
mov
jmp
inc
inc
fs
mov
lods
and
and
adc
loop
test
mov
lds
loope
bound
popf
call
or
repz
xor
neg
repz
ret
in
mov
pusha
lock
test
cmps
mov
in
adc
repz
push
outs
int3
mov
fs
imul
mov
outs
sbb
dec
and
mov
xor
test
js
pop
ins
lea
test
fdivr
or
lea
mov
and
sub
aas
xchg
maskmovq
inc
rol
retf
cmp
hlt
mov
dec
je
mov
pop
(bad)
add
inc
jns
mov
shr
iret
add
in
sub
lock
sub
mov
(bad)
jno
mov
sbb
sbb
imul
inc
pop
cdq
and
add
aad
jae
mov
xchg
aad
pop
scas
add
out
mov
popa
sub
scas
lahf
mov
sub
shl
and
xchg
(bad)
iret
mov
in
pop
imul
in
call
jge
leave
std
les
mov
addr16
add
pop
or
ins
dec
data16
data16
dec
mov
adc
sub
ficom
test
or
sub
jmp
cwde
mov
in
cmp
or
in
mov
and
sbb
popf
and
retf
(bad)
adc
leave
outs
sub
dec
int3
cs
mov
and
fnstenv
sbb
out
fsub
int
jmp
into
(bad)
push
push
mov
cwde
xlat
jno
adc
or
adc
in
jae
mov
sbb
mov
movs
dec
mov
jg
icebp
mov
dec
ret
dec
pusha
popa
(bad)
scas
fst
and
cdq
xchg
xchg
dec
mov
stos
sub
and
or
retf
popf
add
movs
adc
push
and
enter
pop
xor
mov
pop
stos
xchg
dec
mov
sahf
cdq
(bad)
js
sbb
jbe
rcr
fdivrp
int3
jno
scas
aad
les
and
mov
das
mov
rol
mov
inc
icebp
inc
sub
mov
add
(bad)
push
into
dec
retf
or
aas
cld
push
out
jns
sahf
dec
pop
fdivr
imul
ja
in
pop
xchg
mov
push
cmps
cmps
mov
push
retf
stos
xor
stos
inc
hlt
hlt
and
jne
lods
sbb
jbe
xlat
jbe
cmps
pop
mov
fsubr
dec
iret
xchg
js
pop
iret
(bad)
push
cmps
push
mov
out
add
(bad)
mov
add
or
hlt
jecxz
sbb
mov
xor
neg
arpl
sahf
push
js
push
ins
sti
xchg
jno
jle
dec
mov
dec
fs
outs
fmul
add
push
scas
push
xlat
test
adc
dec
fucomip
sbb
(bad)
jecxz
pop
cmp
and
paddusw
dec
das
add
adc
out
pop
(bad)
imul
jl
mov
ret
and
pop
out
(bad)
pop
jae
xlat
jl
cmps
movs
pop
test
idiv
cmp
xor
sbb
sub
xchg
in
gs
sar
push
and
xchg
mov
sbb
cmp
das
or
or
adc
mov
jmp
neg
fdivr
adc
frndint
popa
xchg
mov
jbe
call
daa
cmps
jg
cmp
test
scas
popf
in
gs
jmp
xor
hlt
or
add
mov
ficom
dec
or
movs
leave
or
or
xlat
sub
mov
add
inc
fisubr
dec
cmps
daa
xor
int
imul
ja
xor
xchg
test
cmp
std
dec
xchg
cwde
shl
movs
sbb
scas
pop
and
je
xchg
push
xchg
push
cdq
push
push
adc
cmp
lahf
cmps
mov
mov
xchg
push
add
or
inc
inc
int3
sti
jne
mov
mov
arpl
in
ds
fadd
pusha
cmps
pop
add
add
test
mov
jl
sahf
in
test
repnz
movs
or
add
jae
popf
mov
in
sbb
iret
dec
(bad)
dec
mov
and
imul
ret
arpl
adc
(bad)
stc
cmp
pop
mov
sbb
hlt
mov
cmp
imul
pop
pop
movs
inc
cwde
push
arpl
emms
xor
add
and
cmp
xchg
sub
xchg
mov
inc
sub
mov
sub
mov
or
mov
cwde
out
stos
dec
dec
retf
(bad)
and
leave
cwde
in
xor
inc
stc
add
shr
les
mov
std
movs
jmp
mov
adc
sub
rol
ja
adc
sub
jp
aad
int
lea
sbb
aad
ret
add
pop
and
mov
js
mov
ds
or
test
out
xchg
daa
sub
lds
(bad)
jno
adc
xchg
push
mov
cmp
fld
xor
mov
mov
out
mov
data16
push
cmp
mov
test
imul
mov
lock
ss
scas
mov
inc
pop
adc
outs
int
or
sub
(bad)
adc
xchg
adc
out
jbe
loopne
inc
xchg
cwde
mov
fwait
in
add
or
cmp
adc
enter
push
sbb
clc
jp
dec
rcr
push
popf
(bad)
int3
sub
mov
xor
movs
push
add
cmp
retf
jns
push
xchg
mov
les
cmp
mov
sub
jmp
gs
data16
jp
lea
fcomp
inc
pop
clc
test
inc
mov
loope
imul
xchg
sub
fiadd
xchg
cli
inc
enter
jle
neg
push
enter
in
aas
idiv
cmps
and
repnz
arpl
mov
mov
dec
and
daa
jmp
test
mov
jns
or
das
adc
sub
mov
cmp
fadd
and
add
push
clc
sbb
lahf
or
sub
mov
inc
cmc
or
repnz
or
xchg
ins
sub
mov
cmp
ins
stos
repz
adc
push
or
aas
cmp
jg
dec
pop
push
adc
in
pushf
(bad)
repz
not
mov
push
inc
xchg
outs
lea
cmp
inc
loop
das
(bad)
(bad)
imul
outs
ja
pop
imul
inc
dec
cmps
jns
or
test
scas
mov
call
and
loop
or
mov
push
or
shl
lea
cmp
fisttp
aad
fld
cmps
and
dec
add
fild
fmul
cmps
push
sbb
adc
mov
lea
cmps
retf
xchg
mov
or
sub
cld
mov
call
mov
adc
and
push
jae
in
add
ins
cmp
mov
cli
ins
out
dec
and
test
ret
inc
(bad)
popa
pop
jns
add
push
dec
mov
jo
mov
mov
movs
aaa
xlat
inc
pop
add
pop
push
or
out
adc
mov
pop
adc
push
bound
mov
arpl
sub
adc
or
sahf
(bad)
pop
push
mov
fidivr
(bad)
sbb
sti
out
xchg
sti
nop
call
sub
outs
and
xlat
cwde
sbb
pushf
cs
movs
and
mov
and
and
sbb
and
push
dec
arpl
ins
les
sub
jb
cmps
fiadd
dec
mov
adc
dec
push
sbb
cmp
xchg
push
iret
mov
aaa
pushf
mov
or
or
fcomp
cmp
lahf
imul
jecxz
jne
ja
mov
mov
add
pop
enter
inc
iret
stos
ds
sub
mov
xor
fsub
retf
jmp
jmp
cmp
cs
xor
add
mov
cmc
adc
mov
sub
fld
lods
fdivr
js
clc
dec
test
inc
hlt
inc
pop
xor
xchg
pop
aam
dec
dec
xlat
fcomp
push
maskmovq
test
push
leave
push
(bad)
clc
movs
xor
arpl
mov
loopne
and
sbb
loopne
lea
test
xlat
dec
(bad)
cli
test
aad
scas
pop
and
call
ds
adc
mov
in
ds
adc
in
push
mov
sub
in
add
sub
cmp
jle
ror
mov
movs
xor
lock
jb
cmp
retf
xchg
icebp
mov
add
adc
sub
mov
cdq
ins
es
xor
add
or
inc
mov
mov
stc
sub
dec
add
movs
jle
mov
aas
enter
push
mov
dec
push
mov
pop
out
ja
scas
sub
jmp
imul
dec
mov
sbb
fstp
cmp
cmp
mov
jp
les
add
sbb
jle
ins
test
or
xchg
rcl
mov
mov
pushf
cmp
adc
xlat
cmp
ins
out
jp
inc
xor
(bad)
not
dec
cmc
and
inc
fld
hlt
push
shl
mov
push
sub
jns
loop
mul
rol
(bad)
xor
xchg
fs
mov
neg
xchg
movs
mov
fdivrp
cld
loop
cmc
popa
push
inc
aad
enter
mov
push
cmp
mov
xchg
push
jno
jecxz
(bad)
popa
push
pop
pusha
in
mov
icebp
mov
jnp
inc
ja
cmp
and
(bad)
aaa
mov
out
xchg
sub
les
cmp
clc
push
sbb
fwait
ins
cs
add
mov
mov
cmps
and
test
inc
into
dec
ss
test
fwait
mov
ret
push
cmp
sbb
and
aas
ja
icebp
jb
ror
dec
pop
inc
push
test
adc
rcl
and
in
imul
aas
dec
and
aad
icebp
test
aaa
xor
dec
cmps
or
aam
dec
jmp
dec
xor
das
push
jb
retf
jmp
pop
aam
jbe
dec
pop
pop
(bad)
fxch
or
and
sub
(bad)
cmp
mov
je
out
pop
mov
jmp
inc
data16
dec
stc
sbb
jp
xor
cwde
xor
aas
push
repnz
sbb
cmp
adc
lahf
jb
dec
(bad)
test
(bad)
enter
out
sar
out
xor
cmp
inc
pop
std
dec
push
call
add
jno
ror
mov
mov
push
inc
inc
test
xor
jecxz
mov
and
xchg
sbb
call
jmp
arpl
jnp
(bad)
dec
or
mov
cdq
jge
xor
mov
sub
and
xor
pushf
add
mov
scas
pop
dec
int3
add
pop
(bad)
jecxz
push
hlt
sbb
mov
pusha
jo
cmp
push
cmp
imul
mov
add
jae
dec
inc
pop
jecxz
out
inc
mov
mov
leave
xor
push
inc
add
rsm
arpl
ins
push
daa
add
mov
loop
xchg
das
mov
dec
fsubr
(bad)
or
inc
and
movs
push
aas
push
les
fwait
ror
add
mov
xchg
enter
add
test
leave
or
test
(bad)
jnp
inc
sbb
xchg
and
and
addr16
call
lods
cmc
imul
lock
jmp
sbb
pop
rol
mov
ss
sub
sbb
into
mov
into
aad
cmps
xchg
dec
aam
jecxz
sbb
lahf
push
cmps
sbb
dec
fwait
pop
push
loope
xlat
scas
ja
scas
int3
pushf
sub
test
mov
adc
pop
and
xchg
jns
mov
pop
int3
jl
and
inc
inc
sub
arpl
jns
xor
cmp
pusha
not
dec
mov
out
push
es
ficom
xor
add
cmp
arpl
pushf
push
sub
loope
inc
or
cmp
cmp
xchg
(bad)
popa
aaa
xchg
mov
push
sub
mov
and
icebp
imul
loope
push
fiadd
jecxz
repz
pop
ret
leave
inc
pop
and
sub
popa
push
aaa
int
movs
je
xor
idiv
(bad)
xchg
xchg
popf
(bad)
adc
loope
jp
(bad)
or
cli
into
movs
push
scas
icebp
xor
xchg
push
in
inc
sub
add
sbb
or
lea
pop
cmp
xchg
enter
sub
dec
mov
sbb
mov
add
fcmovb
out
jmp
mov
add
je
mov
jb
outs
pop
enter
cwde
add
jne
dec
or
xor
jmp
pusha
mov
xchg
mov
pop
aaa
sbb
es
div
jo
xchg
(bad)
jo
movs
les
push
pop
xchg
sub
sub
pop
std
out
sar
popf
neg
mov
jne
adc
stos
int3
mov
add
mov
adc
arpl
in
dec
call
or
sahf
xor
or
je
mov
pop
dec
push
cs
cmp
fbstp
push
jp
or
jb
jbe
in
emms
mov
cwde
xchg
cmps
or
(bad)
cmp
xor
int3
xchg
pop
(bad)
out
jle
inc
test
jmp
fs
jmp
or
mov
mov
loope
jmp
pop
imul
pushf
pop
out
jle
adc
and
jmp
cmp
mov
push
test
jmp
repz
mov
push
or
fsub
add
test
jne
sub
cld
jmp
xchg
jge
xor
retf
arpl
fidivr
mov
cmp
jmp
pop
loope
sub
pusha
out
pop
adc
in
fsubr
cwde
aad
pop
shr
cs
in
add
mov
je
out
sbb
enter
inc
and
sbb
in
ret
arpl
cmp
(bad)
mov
repnz
imul
sbb
rcl
fbstp
push
jb
xor
inc
loop
cdq
pushf
fs
jmp
stos
push
repz
out
fisubr
in
pop
pop
lahf
or
and
(bad)
out
mov
pop
mov
xor
fisub
mov
rcl
and
sbb
mov
js
sbb
enter
repnz
push
adc
dec
mov
and
(bad)
mov
inc
push
mov
ins
scas
test
add
loope
mov
jg
cmp
popf
bound
sub
cmp
stos
daa
out
(bad)
stos
bound
xchg
xchg
xor
arpl
xchg
loope
add
sbb
sub
psubb
loop
popf
mov
sub
aam
test
js
clc
movs
xor
sbb
or
jno
pop
dec
cmps
fistp
lahf
jg
js
popf
outs
ja
sub
or
int3
jmp
movs
cmovnp
mov
mov
cld
cmc
not
in
ret
aam
cmp
ins
hlt
sub
(bad)
inc
adc
cs
(bad)
loope
add
out
iret
jae
aam
cld
adc
add
xor
or
inc
daa
aad
repz
out
das
cmc
adc
ret
push
pop
pop
mov
in
rol
sahf
cld
in
push
jmp
jno
fiadd
sub
jg
adc
cmp
xor
sbb
test
stos
inc
cvtps2pi
leave
pop
imul
sbb
xchg
mov
pop
sbb
cmp
push
movs
popa
jl
xchg
fimul
sbb
pop
aaa
nop
into
cmps
jmp
mov
mov
fistp
jle
ret
outs
icebp
addr16
jns
cmp
out
mov
or
iret
push
push
mov
std
and
mov
add
lods
jne
push
call
dec
addr16
xor
xchg
ds
lods
push
adc
fist
inc
jmp
or
pop
mov
daa
and
dec
cmp
xor
push
mov
pusha
adc
jg
or
inc
enter
jmp
cmp
xchg
cmp
out
pushf
adc
inc
ret
dec
je
int3
or
dec
int
lods
add
movs
es
stc
push
scas
les
jmp
cmp
(bad)
int3
idiv
lds
fcom
test
imul
mov
mov
mov
adc
inc
push
in
dec
push
sar
pop
mov
or
mov
or
cwde
loope
aad
sub
xlat
sbb
aas
dec
es
push
add
jne
(bad)
arpl
inc
cmc
mov
xchg
adc
mov
in
push
imul
push
inc
xor
sub
push
mov
iret
rol
pop
mov
mov
push
cmp
das
add
mov
pop
sub
sbb
call
push
into
adc
xchg
adc
push
scas
push
xor
hlt
test
mov
test
and
(bad)
pcmpgtd
add
and
cpuid
cmps
push
or
dec
fcom
cmp
movs
cmp
jnp
sub
(bad)
or
daa
rol
out
inc
sub
adc
add
add
xchg
push
jnp
dec
xor
or
jmp
xlat
cmps
dec
jle
dec
lock
jmp
push
test
lds
jg
ret
sti
mov
vmread
mov
rcr
stc
fidiv
and
fiadd
dec
sbb
and
call
call
push
adc
test
dec
rcl
les
loop
sbb
cmp
inc
jno
bound
into
jl
shl
and
(bad)
adc
cmc
push
push
or
xchg
pop
sar
jp
stc
sub
pop
shr
loope
stc
lahf
pusha
or
push
sbb
mov
dec
add
in
mov
sub
mov
mov
data16
inc
cmp
and
jecxz
mov
rcr
sbb
outs
leave
retf
nop
lahf
xchg
xchg
xchg
add
mov
sub
inc
add
inc
and
outs
aas
sbb
jl
out
add
sbb
mov
(bad)
imul
shr
fs
jbe
(bad)
out
jmp
push
retf
add
test
repnz
adc
sub
jne
push
add
and
into
pop
dec
xor
mov
inc
out
pop
mov
pop
fcmovnu
sbb
adc
push
cmp
or
pop
jmp
mov
cld
cmp
lods
stc
sbb
or
xor
jp
scas
ds
icebp
xlat
pop
test
es
daa
mov
pop
add
ret
ficomp
jg
mov
xchg
cmps
loopne
or
inc
push
push
repz
mov
test
fsub
out
lods
mov
cmp
push
sub
push
sbb
pop
mov
out
sar
or
inc
mov
data16
shl
ja
jle
cmp
dec
mov
pop
mov
dec
mov
cmp
dec
mov
inc
mov
cmp
push
adc
fild
jb
sahf
sub
push
jo
mov
jb
push
mov
mov
mov
ret
int3
jl
push
jmp
and
push
neg
in
pop
inc
mov
in
xchg
cmp
sbb
dec
mov
cmps
pop
mov
(bad)
mov
std
(bad)
ffree
push
and
xor
dec
mov
mov
jmp
clc
mov
pop
lock
mov
adc
sub
push
scas
adc
ja
xor
pop
sbb
jmp
mov
dec
jnp
xchg
xchg
imul
ret
pop
cmp
sub
xchg
push
es
inc
add
mov
fimul
jbe
movs
and
or
aaa
sub
fdivr
cmp
jno
push
jg
cmp
in
movs
jle
sub
out
cmp
(bad)
leave
add
xchg
jp
ins
or
jo
fisubr
psrlq
push
retf
jae
jns
mov
sti
xor
adc
jl
cmp
add
mov
call
push
pop
hlt
pop
sti
pop
or
xor
enter
popa
cmps
sub
repz
mov
fwait
pop
xor
sub
mov
shl
xor
xor
leave
jbe
(bad)
jle
mov
outs
ins
push
push
sahf
ret
inc
out
adc
(bad)
push
in
push
jno
push
sti
iret
mov
jo
retf
cmp
jp
je
aas
xor
daa
movs
dec
into
fdiv
and
ss
lahf
cmp
popf
xchg
imul
push
jp
ds
jnp
mov
xor
xchg
xacquire
div
cmp
inc
mov
lea
aaa
and
hlt
(bad)
cmps
ret
(bad)
es
and
stos
mov
je
aad
jg
loop
test
xlat
fscale
jle
push
xchg
leave
or
loop
in
je
es
mov
mov
lock
loop
mov
pop
mov
into
stc
mov
cdq
dec
fwait
sbb
shl
arpl
push
leave
sub
iret
jge
ldmxcsr
xor
mov
mov
iret
loop
loop
mov
sbb
jno
into
mov
push
(bad)
push
inc
jp
push
lods
sub
shl
(bad)
fisub
sar
mov
in
fldcw
ds
adc
(bad)
cwde
mov
xchg
cld
dec
jo
rol
xor
jb
icebp
lods
(bad)
inc
mov
call
iret
mov
jecxz
div
cmp
ja
loop
and
and
repz
adc
push
mul
pop
jb
add
adc
xchg
popa
pop
bswap
out
or
adc
pop
dec
push
int
and
cmps
mov
adc
pop
push
mov
in
ins
arpl
inc
rcr
jecxz
pop
test
(bad)
or
pop
jne
mov
fwait
jno
ins
sub
mov
mov
and
xchg
(bad)
into
fisttp
cmps
or
jno
movs
mov
test
bound
cmps
leave
sbb
fnstcw
and
aad
dec
sbb
out
pop
mov
cmp
sbb
jne
lock
dec
adc
cwde
mov
cmp
in
popf
cmp
shl
div
cmps
xchg
push
mov
loope
fwait
inc
scas
(bad)
pop
jnp
xchg
mov
gs
aas
push
shl
repnz
ret
popa
out
pop
mov
ins
adc
cmp
stos
in
aad
in
test
enter
cmp
and
sub
sub
ret
rol
scas
jge
sub
push
add
jb
jno
push
mov
pop
xor
dec
pop
pop
push
ja
fsubrp
jns
dec
mov
lds
pop
add
sub
pop
dec
movs
add
mov
dec
aad
icebp
adc
imul
repz
ficomp
jecxz
inc
xchg
stos
into
mov
fs
adc
push
repz
pop
or
loopne
inc
ins
or
sbb
test
or
movs
test
inc
jb
dec
jb
cmp
dec
cdq
dec
in
clc
test
js
add
xchg
outs
cmp
inc
push
sar
iret
in
lock
xor
movs
neg
xchg
mov
idiv
int3
add
adc
cmps
push
mov
inc
into
xchg
xor
cmps
jge
leave
dec
xchg
outs
rcl
push
push
(bad)
sbb
push
jecxz
(bad)
gs
lahf
pop
popa
ins
jp
adc
loopne
pop
retf
fwait
xchg
mov
hlt
dec
jmp
data16
inc
leave
pushf
in
mov
mov
jb
push
mov
push
xor
pushf
rcr
sub
dec
jp
jbe
xchg
sub
push
adc
frstor
cmp
lock
xchg
cmp
call
inc
push
xchg
movs
aam
retf
aad
jp
dec
inc
cmps
push
pop
ficomp
jge
(bad)
mov
inc
sub
mov
cmp
xlat
adc
loope
gs
ficom
inc
add
mov
xchg
or
nop
lods
inc
cmp
sbb
mov
mov
scas
call
rep
js
and
cli
icebp
xchg
xor
mov
cmps
xchg
int3
movs
cmp
sbb
lahf
fisttp
rcl
lock
int3
sub
jmp
cmp
and
xchg
and
out
and
jmp
out
inc
inc
stc
xlat
bound
jge
clc
xor
bswap
pop
(bad)
adc
xchg
fimul
(bad)
loopne
xchg
cmp
retf
cmp
stos
pop
xlat
inc
repnz
jl
fmul
stos
lds
mov
add
mov
mov
test
mov
pop
jns
push
in
cmp
cmc
fcom
pop
sub
cld
push
xchg
es
cmps
pop
push
pop
inc
fimul
pop
sbb
daa
mov
leave
stos
mov
xchg
jl
mov
push
pop
mov
(bad)
out
push
pop
sbb
pop
mov
fwait
jne
out
loopne
imul
mov
rol
mov
ficomp
js
cwde
xchg
imul
mov
and
int
mov
aam
fiadd
add
je
ror
pop
data16
out
scas
imul
mov
rcr
push
loope
(bad)
or
fs
mov
dec
add
cmp
inc
adc
dec
cmps
sub
std
add
jno
add
retf
into
cmps
or
inc
(bad)
pop
add
sbb
inc
dec
sub
call
(bad)
cli
idiv
lahf
push
sbb
inc
in
pop
mov
test
ss
mov
int
iret
int3
mov
inc
rcr
fstp
(bad)
dec
and
adc
xor
xor
xlat
pop
cdq
inc
fcom
or
scas
pop
inc
mov
pop
mov
cmp
push
ud2
jg
popf
dec
jle
adc
mov
ins
cmp
cdq
shl
cwde
mov
jecxz
scas
(bad)
inc
ja
cdq
or
or
ss
mov
ret
leave
in
mov
jo
(bad)
ds
pop
lock
dec
call
push
pusha
push
and
ret
mov
sbb
xor
test
pop
scas
push
stos
dec
iret
bound
rcr
shr
pop
jns
xor
les
daa
aad
xchg
pop
inc
lea
fistp
sub
mov
jb
js
loope
ins
movs
dec
sbb
xchg
mov
fistp
daa
ficom
fcom
pop
dec
es
je
loopne
sti
test
add
icebp
sub
pop
jb
outs
sub
jmp
nop
retf
data16
push
push
and
test
inc
ret
cmc
mov
xor
mov
jnp
int3
(bad)
fld
movs
xchg
cmp
es
jle
dec
jns
pop
mov
adc
jbe
icebp
jb
loop
hlt
add
adc
mov
jno
xor
mov
enter
sti
test
xor
inc
fadd
mov
nop
pop
push
xlat
out
repz
adc
inc
push
mov
xchg
(bad)
pop
jge
leave
push
inc
inc
sahf
mov
inc
mov
retf
sub
xor
imul
pop
or
clc
fld
and
xchg
cmps
cmp
cmps
jecxz
cmps
jae
fs
jae
cli
in
dec
add
or
(bad)
jmp
mov
sub
add
push
xor
xchg
mov
cmp
ret
pop
inc
loopne
fs
inc
outs
sar
in
popf
gs
dec
aad
mov
push
cmp
xor
fidivr
jg
imul
in
dec
ror
sahf
jle
pop
test
mov
pop
xchg
xchg
xor
cmp
ins
xor
mov
xor
and
push
jo
add
lea
add
in
cmps
mov
dec
fsubrp
leave
push
gs
in
sub
lods
xchg
(bad)
ss
imul
dec
add
push
xchg
pop
push
dec
inc
push
(bad)
cmps
mov
(bad)
pusha
or
pop
and
xor
pop
cwde
clc
sbb
push
sbb
pop
fdiv
push
enter
fs
cmp
gs
popa
pusha
and
mov
xchg
pop
mov
test
pusha
test
dec
mov
in
adc
aaa
or
push
or
outs
fsubr
jge
inc
adc
lods
inc
ds
imul
arpl
jl
jns
(bad)
ffreep
add
sub
lods
sbb
push
pop
push
cli
fbstp
sub
das
jno
clc
mov
sahf
xchg
mov
in
xor
mov
shl
rep
fld
inc
es
fwait
cmps
mov
loopne
sub
bound
push
adc
sub
sbb
mov
push
pop
fistp
push
movs
and
or
mov
out
mov
inc
xor
sub
js
idiv
popa
(bad)
retf
push
(bad)
pop
and
mov
and
out
ins
pop
ficomp
out
xchg
jns
sub
pop
mov
xchg
mov
aaa
add
dec
jbe
xchg
out
mov
fsubrp
fsub
push
es
dec
adc
add
jne
inc
xor
lock
maskmovq
not
push
pop
mov
jno
pop
mov
dec
pusha
outs
and
in
pop
add
(bad)
dec
cmp
xor
inc
sbb
sub
sub
int
fs
cmc
sahf
gs
bound
cdq
mov
in
mov
std
xchg
cmps
or
call
in
pop
aad
call
aas
not
dec
int3
xor
retf
popf
imul
aam
cdq
sub
lods
retf
or
in
clc
adc
cld
mov
mov
inc
pusha
out
inc
mov
mov
mov
xchg
jp
sahf
or
addr16
adc
xchg
and
jg
dec
push
(bad)
ds
sbb
cmp
data16
mul
aaa
test
add
adc
xchg
and
dec
and
(bad)
loope
(bad)
gs
add
mov
or
das
(bad)
jg
or
and
pop
aas
jo
arpl
ja
iret
fs
xor
and
add
cmp
into
ins
out
sbb
mov
pop
scas
push
dec
cmp
pop
fild
sysexit
mov
xor
in
paddusb
xchg
mov
sbb
inc
mov
arpl
test
adc
xor
inc
les
xchg
popf
push
pop
xor
or
cmp
lods
and
inc
lea
mov
bound
add
dec
push
jmp
(bad)
call
sbb
add
cwde
mov
adc
cmp
(bad)
jl
rcl
ret
inc
into
lods
adc
add
ja
jno
aas
add
in
pop
test
cmps
test
inc
jl
xchg
aaa
jecxz
xor
(bad)
out
daa
es
pop
popf
or
pop
ret
(bad)
rcr
push
test
fdivrp
gs
fldenv
adc
or
and
leave
mov
xchg
xchg
es
adc
fnstcw
test
xor
and
std
xchg
mov
stc
popf
aas
jne
aaa
xchg
arpl
call
(bad)
imul
dec
out
push
imul
cmc
or
adc
xchg
push
pop
sbb
mov
inc
imul
inc
pop
mov
movs
mov
sbb
push
arpl
sub
fcos
cs
fisttp
call
xchg
loop
push
lea
xor
mov
jae
aas
or
shl
(bad)
and
pop
fwait
in
imul
cmps
pop
fbstp
add
mov
adc
cmp
pop
mov
sar
inc
adc
jmp
repnz
and
and
push
lods
stos
addr16
jo
les
dec
cmp
outs
cwde
mov
dec
and
push
call
int
sbb
dec
bound
jmp
fild
mov
cli
jmp
bound
sbb
inc
cli
push
loopne
popa
mov
sbb
enter
imul
lods
jecxz
or
sbb
sbb
imul
out
mov
add
mov
loopne
sub
aam
jecxz
push
cvtps2pi
pop
test
gs
popf
mov
and
mov
mov
inc
push
jl
test
xchg
ret
inc
rep
lea
(bad)
stos
mov
mov
fidiv
(bad)
dec
jns
cmc
xchg
popa
xor
cmps
jecxz
sbb
aas
es
add
inc
mov
sub
into
sbb
ss
jg
imul
cmc
xor
add
cdq
push
aad
push
jae
test
ret
hlt
xlat
aas
xor
or
add
lods
sub
mov
retf
aam
movs
data16
lea
ds
sub
adc
adc
lea
mov
inc
xchg
test
inc
inc
cmp
test
in
sbb
and
sub
xor
mov
lock
mov
out
adc
movs
in
jecxz
or
jle
ficomp
stos
and
push
mov
and
fsubr
bound
push
sub
cmp
and
fwait
push
or
movs
and
sub
push
scas
and
outs
adc
add
aaa
bound
inc
daa
ins
or
(bad)
fidiv
push
sbb
add
xchg
rol
add
sbb
dec
mov
(bad)
and
jno
xchg
bnd
cmp
jnp
mov
add
push
call
(bad)
inc
popw
repnz
ja
test
jbe
ins
jno
dec
and
retf
mov
adc
scas
dec
int3
stos
data16
(bad)
in
test
xor
xor
pushf
and
dec
xchg
push
sbb
les
data16
add
pop
mov
push
push
lahf
inc
(bad)
mov
mov
jns
clc
(bad)
dec
mov
push
add
mov
daa
sahf
iret
adc
push
gs
push
jbe
mov
adc
ins
xlat
inc
fidiv
push
inc
xchg
xchg
push
mov
jne
push
hlt
les
movs
repz
retf
mov
mov
ja
xchg
mov
aaa
push
hlt
test
pop
in
jl
lods
int
js
lahf
retf
mov
aam
mov
popf
sbb
jb
retf
cli
and
inc
jge
push
imul
cmps
lock
jbe
stc
pop
xor
stos
test
sub
mov
shl
mov
add
pushf
push
sbb
jbe
sub
jb
sbb
mov
jbe
xor
cld
mov
push
inc
jp
xor
in
ds
(bad)
sub
pop
leave
in
icebp
push
retf
imul
fidivr
jp
cmp
cmc
xor
inc
pop
test
frstor
icebp
(bad)
cmp
mov
int3
fcomp
aaa
jns
cld
test
enter
or
jnp
les
add
es
jae
repnz
mov
test
add
xor
cld
(bad)
(bad)
fnstsw
dec
jns
(bad)
ins
cmp
dec
push
nop
fs
mov
push
add
inc
aam
lahf
test
mov
inc
pop
enter
mov
mov
hlt
dec
jbe
pop
push
jmp
enter
scas
popa
push
popf
out
retf
outs
pop
int
arpl
adc
dec
dec
xchg
out
fld
nop
icebp
sub
leave
or
hlt
sub
cmps
call
push
and
and
and
sub
inc
jl
mov
lahf
dec
pop
out
dec
adc
jl
rcr
jle
jo
(bad)
jmp
repnz
inc
or
shl
and
adc
popa
xchg
inc
into
push
out
test
inc
dec
mov
(bad)
out
inc
mov
xlat
jb
stc
mov
jle
mov
or
fistp
dec
xor
loope
push
mov
cmp
mov
fcom
aas
push
pop
mov
xor
and
(bad)
retf
inc
add
mov
(bad)
xor
cmp
cmc
mov
xchg
data16
or
sub
xchg
out
sbb
es
or
pop
and
das
(bad)
(bad)
sub
xlat
xor
sbb
adc
lods
fmul
inc
retfw
dec
cmps
add
inc
ins
mov
sbb
xor
mov
xchg
ja
jmp
sub
cmp
xchg
ss
imul
push
add
icebp
and
jb
in
jl
mov
pop
call
fld
(bad)
mov
sub
xchg
inc
stos
adc
lds
les
ret
jle
ss
hlt
aam
and
xlat
cmp
mov
fisub
sbb
ins
or
out
fwait
std
xchg
gs
mov
pop
neg
mov
xor
jnp
das
pop
fstp
pop
push
mov
test
movs
push
pusha
inc
xchg
hlt
fcmovu
cmps
pop
int3
sbb
fs
lds
lea
call
fs
scas
popf
sbb
shr
out
mov
adc
fwait
xor
pop
sbb
fdiv
xchg
push
pop
lods
xor
cmp
cs
jbe
or
cmp
pop
shr
ds
(bad)
clc
mul
adc
mov
or
cmp
push
int
in
movs
push
fnstcw
sbb
and
xchg
std
int3
fdiv
in
xchg
mov
addr16
xchg
dec
mov
mov
jo
xor
sbb
xchg
shr
pop
iret
fcomp
je
jb
add
mov
js
jge
call
mov
jne
push
mov
aaa
out
lahf
retf
jg
mov
xchg
data16
mov
mov
mov
mov
stc
push
dec
sbb
xor
call
mov
mov
lds
add
xchg
or
(bad)
sub
test
pop
hlt
or
xchg
adc
pop
dec
fnstenv
pop
jp
cwde
jns
pop
(bad)
jno
cmps
add
retf
mov
sub
out
sar
push
call
mov
inc
lods
fimul
ins
push
js
push
sub
stc
int3
pop
clc
inc
shr
and
mov
mov
ret
ficomp
xor
adc
aam
out
inc
xlat
cs
push
pop
mov
sub
jl
aas
mov
pop
cmp
push
mov
jg
clc
adc
iret
xchg
adc
push
retf
call
cmps
xor
stc
outs
out
and
aam
pop
mov
add
pop
ins
or
xlat
xchg
dec
cmp
add
push
mov
sahf
lds
fldl2t
xchg
in
add
repz
cmp
xor
aam
adc
imul
fild
push
jne
jmp
jp
fimul
pop
xor
pop
push
and
or
push
loop
cli
push
inc
je
mov
xchg
inc
pop
je
enter
stos
mov
iret
dec
(bad)
sub
push
cs
push
cld
call
int
push
(bad)
lds
jmp
inc
or
popa
xchg
lea
mov
inc
xchg
call
dec
pop
mov
rcl
call
jl
lahf
add
add
test
push
fbstp
js
mov
call
jg
pop
aaa
cdq
sbb
mov
ins
sub
ins
aam
xor
push
inc
bound
jle
retf
addr16
cmp
jne
mov
mov
hlt
jae
sub
mov
xchg
mov
adc
mov
out
(bad)
lock
push
mov
add
leave
fist
ret
or
xchg
pop
cwde
xor
and
stos
push
stos
retf
push
iret
xlat
mov
sbb
mov
shr
xor
(bad)
cmp
aad
mov
xchg
ins
inc
mov
int
fistp
daa
push
mov
fistp
cmp
loope
lea
js
test
aam
icebp
icebp
jmp
xor
mov
std
lds
xor
mov
xor
mov
retf
jge
push
dec
je
int
fbstp
xor
call
shl
js
popf
loope
cmc
mov
add
stc
mov
xchg
aam
sahf
push
or
sub
push
(bad)
mul
je
mov
mov
int3
sub
jbe
addr16
cmc
arpl
dec
sar
scas
jns
not
or
neg
mov
sub
and
adc
dec
cmc
xor
dec
sbb
fst
les
jecxz
sub
add
mov
das
loopne
mov
dec
pop
xor
das
nop
jl
ret
sahf
int
pop
push
sahf
pusha
cmp
sub
mov
pop
mov
(bad)
aas
(bad)
pop
fdivrp
stc
ins
xchg
loope
xchg
test
and
adc
or
push
dec
xchg
mul
std
xchg
arpl
test
int3
sbb
rcl
mov
pop
lock
fidiv
cmp
cli
cmps
es
xor
je
push
push
iret
add
lods
out
cdq
pop
sahf
mov
mov
pop
adc
mov
or
repz
test
sbb
adc
movs
jl
pop
sub
daa
dec
sbb
enter
sahf
sub
gs
sub
fsub
jmp
adc
icebp
call
lds
cmp
mov
pusha
mov
aas
push
movs
push
das
add
dec
mov
cmp
inc
cmp
in
test
push
sbb
push
xchg
push
mov
add
or
out
jle
ds
pop
xchg
loop
fisttp
(bad)
mov
and
jne
or
dec
jmp
ret
pop
push
xchg
jb
inc
ins
pop
push
sbb
or
mov
and
inc
jno
adc
mov
test
loope
pop
xchg
cs
shr
int
aad
leave
mov
dec
jg
int3
test
call
ficom
dec
xchg
pop
test
xchg
loop
leave
lahf
inc
aaa
xor
das
mov
pop
cmp
jge
push
push
xchg
jecxz
push
sub
or
jmp
imul
(bad)
sub
loope
popa
aas
pop
mov
or
enter
pop
div
xchg
shl
outs
mov
fistp
cmp
add
cmp
faddp
sub
add
int3
dec
sbb
shr
mov
sbb
or
jecxz
pop
fldz
test
out
scas
std
test
dec
outs
ret
push
scas
addr16
jb
mov
mov
div
cmps
cmp
clc
inc
es
adc
inc
rol
sub
popf
inc
jl
(bad)
retf
adc
test
and
push
mov
outs
sbb
imul
sub
xchg
loopne
test
call
ret
push
push
sbb
push
sbb
add
aaa
lods
inc
jmp
rcl
adc
mov
pop
test
xor
(bad)
retf
mov
sbb
sub
xor
sub
jmp
mov
xchg
push
pusha
dec
gs
out
ror
call
jecxz
fwait
pop
dec
mov
dec
fisttp
mov
push
xor
sar
rcr
test
cmp
adc
movs
mov
icebp
bound
idiv
fld
adc
lock
push
addr16
adc
adc
mov
or
mov
xchg
(bad)
out
nop
push
jle
sbb
sub
retf
push
sbb
ins
adc
sub
out
xor
dec
dec
ins
scas
push
pusha
jbe
pushf
pop
sub
in
nop
gs
and
ret
dec
mov
xchg
loop
inc
mov
jmp
inc
xor
add
aad
arpl
xchg
js
cmp
scas
loop
fcomp
(bad)
or
jne
push
das
(bad)
in
or
loope
in
maskmovq
div
xchg
or
push
push
dec
sbb
pop
fild
mov
cmp
inc
sbb
lods
out
cmc
lods
cwde
iret
cld
cmp
loopne
xchg
push
jecxz
sub
imul
mov
inc
add
js
retf
jo
ret
ins
mov
push
push
sub
or
xchg
xchg
popf
inc
sbb
pop
fs
cmp
xchg
jmp
jmp
jmp
repz
cmps
pop
jnp
dec
outs
push
call
or
dec
ror
sub
js
clc
inc
scas
test
cmp
mov
push
cs
mov
in
xchg
retf
xchg
mov
push
aam
into
push
cmc
test
enter
pop
(bad)
sub
test
jg
call
lahf
push
mov
inc
mov
repz
scas
mov
mov
lds
cli
add
ss
sub
push
jecxz
mov
aad
ror
adc
aad
cmp
mov
mov
lods
mov
and
push
inc
mov
push
test
pop
cmp
vpmaxub
rcl
mov
aad
inc
push
in
pop
sbb
lea
add
call
int3
mov
outs
cld
outs
pushf
in
mov
arpl
push
xchg
sahf
leave
xchg
mov
ds
mov
dec
or
scas
jl
les
test
inc
cmp
cli
xchg
imul
mov
push
out
bound
or
xor
neg
sbb
leave
xchg
jp
cmp
pushf
inc
sbb
xor
sbb
mov
inc
jp
push
and
ja
inc
ror
xor
aam
(bad)
and
jmp
call
jmp
fimul
xor
rol
mov
push
jmp
and
scas
xor
adc
xchg
fidivr
cmps
add
mov
adc
pop
popf
out
sbb
sbb
(bad)
dec
rol
dec
mov
xchg
inc
faddp
dec
xor
add
push
daa
sbb
outs
mov
mov
sahf
adc
push
or
xor
imul
int
xor
pop
pop
sbb
addr16
mov
std
test
inc
xor
ret
jmp
test
popf
shl
mov
mov
push
pop
jecxz
sbb
aas
jle
mov
in
hlt
sub
add
push
leave
xadd
mov
cmp
cmp
mov
pusha
xchg
jecxz
jb
push
stos
push
in
int
call
mov
mov
std
cmovo
inc
dec
sub
dec
dec
outs
clc
mov
int
jbe
cmp
imul
dec
adc
jp
mov
mov
cmp
fbstp
out
add
cli
aas
and
fwait
adc
jecxz
jmp
jne
adc
jo
push
outs
(bad)
lods
jb
push
mov
dec
mov
outs
xchg
test
lods
and
or
imul
test
pusha
jg
mov
cmp
lds
ret
fisubr
mov
call
psrlw
stos
(bad)
sub
ret
sbb
pop
(bad)
jge
xor
xor
retf
(bad)
loopne
gs
jmp
push
out
pushf
mov
xor
mov
mov
push
inc
pop
push
clc
push
mov
repz
inc
push
push
aam
or
ret
sub
sub
pop
mov
idiv
in
mov
dec
sub
add
xor
and
pusha
lahf
sbb
xchg
jl
jge
rol
lds
jle
div
loopne
sbb
retf
ret
shl
push
push
(bad)
(bad)
jecxz
pusha
test
retf
out
sbb
(bad)
dec
mov
inc
enter
ss
jb
mov
cmp
jl
clc
xchg
mov
fld
fucom
rol
(bad)
sub
cmc
xchg
les
ss
push
lods
push
inc
pop
and
icebp
addr16
xchg
push
int3
mov
sbb
ret
mov
push
and
and
sbb
je
cmp
dec
jae
sbb
mov
sbb
mov
bound
pushf
sub
clc
mov
mov
xchg
mov
push
add
(bad)
outs
mov
jmp
or
sbb
arpl
frstor
mov
pop
mov
mov
mov
hlt
jecxz
mov
adc
mov
jnp
or
repnz
or
sub
dec
pop
sub
xchg
mov
mov
movs
dec
push
mov
jno
cld
sti
jnp
out
add
rol
mov
outs
xor
je
push
dec
fcomp
jmp
jp
push
outs
mov
or
pop
mov
or
sub
sub
push
dec
pop
icebp
stos
cmp
iret
mov
mov
pop
jmp
push
icebp
imul
push
dec
scas
push
cmp
push
pop
jae
bound
(bad)
imul
enter
or
mov
out
out
jnp
int3
movs
jl
or
dec
mov
mov
pop
jl
mov
push
sub
ss
addr16
icebp
mov
xor
rcl
and
jae
sti
sub
fild
lock
repz
xor
or
sbb
sti
ss
xchg
hlt
cmp
jg
ror
mov
sub
xor
pop
xchg
mov
mov
lea
(bad)
push
push
fimul
jle
sbb
mov
outs
rcr
daa
dec
xor
mov
push
hlt
in
xlat
out
test
or
xchg
(bad)
xor
outs
and
fdivp
loopne
(bad)
sbb
dec
cli
shl
outs
(bad)
(bad)
add
add
icebp
repz
fcom
pop
pop
pop
ins
cwde
aam
std
jmp
sub
inc
fwait
js
out
ss
jecxz
or
sbb
push
or
inc
or
sbb
mov
cmp
mov
shr
out
pop
push
adc
add
xchg
mov
sbb
sbb
mov
lods
in
scas
loope
inc
adc
inc
pop
inc
pop
cmp
(bad)
(bad)
adc
sbb
push
nop
dec
push
xor
sbb
popf
sub
and
out
mov
jg
std
mov
les
test
mov
mov
jo
mov
cs
int
jmp
inc
stos
dec
mov
imul
push
out
jecxz
cdq
inc
mov
adc
aas
lods
movs
ja
inc
outs
jo
xor
cmp
xchg
btr
repnz
or
push
call
sub
inc
gs
add
dec
push
jp
cmps
mov
dec
mov
into
icebp
test
js
clc
daa
cli
idiv
sub
jne
push
jns
dec
rol
mov
adc
xchg
mov
sub
ss
(bad)
sub
adc
cmp
aas
aad
lods
(bad)
mov
adc
pop
gs
sbb
push
jnp
mov
push
or
jl
sub
aas
mov
inc
std
inc
fidivr
xor
lahf
add
mov
pop
fadd
xchg
(bad)
xor
cwde
scas
cmp
and
fstp
mov
cld
jle
stc
xor
(bad)
pop
mov
call
xor
sahf
mov
mov
mov
aas
ret
loopne
push
out
iret
adc
sbb
mov
retf
sub
xor
fisttp
call
mov
neg
adc
loope
push
imul
movs
or
xchg
sbb
fst
xchg
cmps
pop
std
jnp
xor
les
icebp
popf
or
call
xchg
sub
pop
aas
dec
xlat
int3
test
pop
data16
leave
lods
mov
pop
add
ds
dec
mov
les
imul
in
adc
div
mov
scas
dec
icebp
pop
pop
pop
dec
cmps
sbb
jno
nop
fwait
pop
outs
data16
sbb
adc
jae
cmps
movs
lahf
rcl
retf
mov
in
clc
dec
push
inc
imul
pop
dec
xchg
mov
adc
int3
sbb
xchg
(bad)
lods
retf
and
into
into
xchg
xor
push
popf
int
mov
inc
and
scas
jge
bound
js
push
push
mov
test
and
push
xchg
cli
(bad)
loop
jne
loop
jg
pop
and
nop
cmp
pop
push
or
rol
xchg
or
mov
or
adc
stc
and
push
sub
mov
scas
pop
mov
(bad)
jmp
int
mov
sub
enter
sbb
imul
jno
mov
inc
dec
jo
daa
pop
and
dec
pushf
ins
repnz
outs
xchg
mov
movs
jne
mov
jnp
mov
pusha
xor
push
dec
lods
jl
xor
in
cdq
mov
pushf
xchg
arpl
sub
scas
lahf
push
add
mov
(bad)
(bad)
fcomp
adc
sti
dec
mov
pop
sar
or
inc
ss
mov
test
jne
and
clc
pushf
sahf
pop
ins
fiadd
sub
pop
and
mov
stos
sbb
xchg
or
jmp
aam
ins
ss
fstp
lahf
int3
sub
xchg
mov
daa
fbld
jnp
mov
mov
jbe
jb
les
pop
adc
je
xor
mov
retf
push
push
jmp
in
adc
add
cmp
rcl
sub
add
push
shl
inc
dec
add
mov
fs
std
(bad)
mov
add
push
or
aaa
add
inc
loop
shl
cmp
inc
hlt
rol
inc
rcr
fistp
ins
mov
mov
dec
int
mov
hlt
mov
fcom
scas
mov
cli
or
aaa
sub
test
push
arpl
imul
ror
push
mov
xchg
je
cmp
ins
xchg
addr16
dec
mov
mov
jmp
push
inc
jecxz
cmps
in
mov
popf
outs
push
sbb
cmp
adc
je
(bad)
clc
frstor
mov
jge
(bad)
mov
in
rcr
and
inc
div
mov
mov
dec
inc
retf
leave
mov
pushf
add
dec
xchg
nop
jmp
and
push
mov
mov
call
mov
push
loopne
data16
fnsave
cmp
cmc
mul
jae
fs
ds
stos
cli
mov
out
ror
ret
mov
lods
das
loopne
jno
mov
cmp
push
sub
es
fst
mov
pop
repnz
or
mov
or
pop
adc
mov
pop
adc
xchg
pop
int3
out
and
add
jl
enter
xchg
in
push
in
dec
pop
stc
jno
fmul
xor
mov
outs
retf
add
mov
cmp
frstor
inc
push
xor
mov
xor
mov
xchg
inc
(bad)
js
push
(bad)
movs
rcl
in
push
cdq
jbe
test
xchg
add
push
lods
cmps
lods
js
loope
or
ds
mov
shl
out
adc
sti
retf
xchg
xor
fldenv
push
rcr
sub
jecxz
pop
mov
into
sub
loop
dec
inc
cmps
sub
loope
out
and
outs
xor
mov
pop
(bad)
fdiv
push
dec
imul
in
jmp
inc
fwait
add
cmp
inc
dec
push
clc
call
cmp
jmp
mov
add
pop
mov
repnz
xchg
cmp
mov
add
xadd
push
pusha
inc
mov
cmps
cmp
adc
push
push
jmp
push
push
lea
xchg
or
mov
sbb
pop
dec
ins
jne
imul
push
shl
imul
xor
cmps
adc
dec
or
add
push
jae
mul
(bad)
fcomip
pop
push
por
bound
(bad)
stc
fucomi
jnp
test
fimul
stos
repz
sub
inc
xchg
add
inc
dec
sti
jmp
bound
addr16
xor
pop
xor
add
sub
div
sbb
dec
ds
cmp
movs
js
inc
int3
or
push
lods
out
pop
cwde
and
movs
add
scas
jecxz
or
imul
xchg
clc
cli
je
xor
and
adc
mov
sbb
sub
sub
adc
push
sub
push
clc
sub
push
sahf
push
icebp
fisttp
mov
aaa
mov
mov
and
inc
jae
pop
fidivr
adc
pop
bswap
out
sahf
push
mov
sub
cmp
mov
popa
sub
sub
aad
popa
adc
cmp
fld
in
sbb
aas
push
cld
dec
push
lods
lea
mov
and
xor
shl
mov
sub
(bad)
mov
push
in
or
and
xchg
outs
fidiv
adc
jecxz
adc
fcmovne
dec
test
dec
cdq
sbb
rcl
push
xor
jl
scas
xor
push
ins
test
inc
shl
rcl
jae
fidiv
call
test
sti
jmp
push
(bad)
call
push
pop
sahf
mov
es
jmp
outs
gs
fwait
dec
gs
adc
mov
int3
(bad)
push
scas
push
push
xlat
fstp
shl
ins
fwait
cmp
ins
adc
or
aas
xchg
fs
mov
dec
sbb
pop
dec
sbb
movs
adc
mov
xchg
dec
and
mov
xchg
dec
sub
(bad)
xlat
xor
pop
pop
jmp
and
xchg
outs
jg
scas
cmp
xchg
push
pop
loop
icebp
mov
sub
mov
mul
setne
dec
imul
dec
push
jne
cmp
test
cli
loop
aas
pop
jmp
dec
(bad)
mov
mov
sub
rol
shr
clc
push
mov
enter
and
loope
push
xchg
sub
fwait
loop
cmp
xor
mov
jmp
retf
add
push
retf
rol
and
(bad)
icebp
xlat
imul
imul
pop
call
lods
mov
je
xchg
fistp
shl
push
sub
dec
jl
cmp
mov
adc
out
push
mov
scas
sub
xchg
lahf
jnp
xchg
dec
ss
arpl
push
or
jbe
pusha
pop
mov
dec
push
setnp
mov
inc
mov
add
(bad)
lock
mov
cmp
push
and
sbb
std
jno
jecxz
sub
adc
mov
inc
(bad)
or
push
pushf
(bad)
xchg
ins
out
or
sub
fwait
push
test
pop
(bad)
lock
cmp
nop
add
adc
add
adc
in
push
test
pusha
fidivr
mov
pop
rol
xchg
mov
xor
inc
mov
fabs
sub
inc
push
loopne
push
mov
sub
das
bswap
repz
aam
imul
fistp
dec
sub
mov
test
leave
idiv
stos
cli
and
retf
push
mov
ins
in
xor
ins
mov
push
sub
push
xchg
nop
mov
adc
xchg
mov
push
(bad)
jmp
jmp
push
pop
(bad)
sub
sub
aas
xchg
sub
or
stc
mov
ret
cmps
jae
mov
mov
ret
xlat
inc
int3
(bad)
data16
jbe
shr
rcr
pop
xchg
scas
ret
int
jl
push
imul
int
sub
inc
jne
fnstcw
rcr
mov
(bad)
js
jo
jbe
inc
data16
rol
jg
cdq
pop
loop
jmp
dec
sub
stos
clc
loopne
xchg
movs
xor
add
dec
fwait
retf
xchg
pop
imul
imul
dec
xlat
dec
xchg
repnz
sbb
sbb
pusha
push
ficom
stos
dec
leave
xchg
adc
fisttp
fs
clc
xchg
clc
aaa
dec
or
mov
call
push
sub
mov
xchg
inc
mov
movs
popa
dec
inc
lds
mov
fbstp
jmp
imul
fadd
clc
dec
add
push
inc
test
cmps
clc
in
daa
(bad)
inc
xor
jnp
push
push
lods
add
push
call
and
push
out
jmp
adc
mov
jae
loopne
mov
and
shr
cmc
out
nop
push
inc
ret
pop
sub
sti
call
jne
jno
sbb
int3
adc
(bad)
sbb
fstp
xchg
jl
(bad)
mov
or
ja
jno
dec
shr
ins
not
xlat
cmp
jb
sub
mov
jecxz
xor
add
push
lea
fs
gs
jns
retf
mov
push
inc
adc
cmp
aaa
jmp
and
sub
stos
inc
add
lods
rol
ja
int
sti
in
xchg
imul
ss
fisubr
mov
mov
push
cmp
ror
xchg
in
push
loop
push
scas
cmps
ins
mov
int3
dec
jns
into
xor
xchg
push
icebp
xchg
out
lods
test
and
mov
rcl
pop
jmp
pop
lods
xchg
mov
test
xor
int3
xor
cld
jbe
and
std
xor
(bad)
adc
push
xor
add
adc
std
gs
mov
inc
pusha
push
rcl
push
dec
pushf
pop
lds
or
xor
je
ins
xchg
adc
and
out
call
(bad)
(bad)
out
push
stos
cli
cmp
pop
inc
mov
mov
fwait
adc
adc
fdivr
popa
sbb
dec
mov
dec
pop
mov
dec
push
xor
push
mov
jg
push
mov
sbb
jne
or
cwde
fstp
ror
int3
cmp
xchg
(bad)
and
mov
jbe
mov
ror
imul
mov
(bad)
scas
outs
jb
fwait
sahf
jb
sub
fistp
xlat
add
dec
hlt
push
movs
push
mov
and
dec
mov
mov
sub
js
fild
mov
pop
fisubr
test
int
(bad)
jg
push
jne
push
sub
sbb
popa
sub
push
dec
arpl
sbb
shr
adc
loop
and
pop
xlat
dec
enter
loope
ds
mov
cmps
adc
xchg
add
sbb
jecxz
movs
cs
pushf
loope
int3
fiadd
or
cmp
aad
pop
call
scas
sbb
sbb
dec
xchg
stos
nop
shl
cli
stc
loopne
loope
mov
xchg
xlat
push
cmp
pop
add
(bad)
sbb
add
mov
mov
stos
and
fnstcw
repz
jp
das
int3
sahf
ins
loope
mov
shl
rcr
ins
xor
pop
loop
mov
jecxz
nop
add
inc
dec
mov
xor
cmc
pusha
bnd
pcmpeqd
lods
pop
in
add
loope
xchg
inc
inc
cmp
sub
pop
mov
cdq
jl
aas
ja
xchg
mov
cs
ja
in
or
je
inc
mov
mov
ss
ret
out
sbb
mov
xchg
test
lock
push
aaa
loop
jae
inc
cmp
outs
jns
enter
bound
test
ss
bound
inc
(bad)
cmp
cmp
ja
pushf
movs
ret
push
sbb
clc
dec
and
cld
pop
push
dec
scas
test
aaa
push
jmp
ror
ret
sbb
cmp
out
adc
adc
mov
cli
add
xor
mov
mov
mov
(bad)
or
mov
(bad)
pop
popf
push
retf
rcr
jl
xchg
out
push
jmp
ret
push
sub
xchg
jle
mov
out
pop
call
mov
ret
hlt
cdq
ror
adc
sar
sub
daa
pop
ret
sub
push
jp
adc
add
cmp
fdivp
out
mov
movs
retf
ins
mov
in
lahf
sbb
mov
mov
and
sub
lds
xchg
imul
inc
icebp
pop
jmp
loopne
out
push
lds
adc
in
dec
sub
xchg
xor
sub
out
lods
dec
mov
retf
jns
push
sti
jno
xchg
sub
dec
push
outs
stc
pop
mov
fs
and
pop
inc
fstp
loopne
in
(bad)
movs
(bad)
out
xchg
sub
ret
and
sub
mov
in
cdq
add
and
fisttp
inc
xchg
push
sub
bswap
dec
xchg
aam
jg
xchg
(bad)
scas
and
mov
inc
fimul
push
por
mov
rol
or
out
cli
test
mov
sub
call
ss
mov
mov
in
pop
mov
sub
xor
jae
add
pop
jmp
xor
retf
mov
cld
outs
xlat
mov
retf
push
cmc
push
fiadd
mov
inc
dec
cmp
pop
pusha
sbb
push
mov
test
mov
jmp
shl
mov
pushf
mov
sbb
adc
ror
mov
outs
(bad)
repz
lea
xchg
and
(bad)
adc
std
and
jmp
fwait
ins
mov
and
scas
xchg
fidivr
jmp
add
aaa
push
int3
(bad)
xchg
mov
nop
mov
add
adc
test
lahf
sbb
jno
add
es
test
xchg
jno
imul
movs
dec
inc
push
inc
mov
scas
sub
ret
pop
(bad)
and
mov
(bad)
jno
jnp
dec
pop
test
cmp
cmps
pop
(bad)
inc
icebp
dec
inc
push
mov
or
test
pop
bound
fsubr
add
out
push
inc
sbb
cmps
repz
sahf
dec
pop
sbb
push
mov
and
cld
mov
sbb
pop
or
mov
push
sub
jo
std
pop
shl
les
sbb
pop
stos
sbb
add
inc
outs
ds
inc
xor
daa
cli
in
movs
inc
cmp
pop
and
and
adc
xor
inc
cmp
ret
pop
cmps
and
sar
jmp
jb
addr16
sahf
fdiv
jle
scas
inc
data16
in
mov
sbb
and
lea
mov
fld
sub
js
pop
or
cmp
(bad)
int3
mov
cmp
gs
call
and
and
sbb
jmp
xchg
ss
into
pop
mov
xchg
sub
lock
js
je
xchg
jmp
adc
paddusw
xor
jne
rol
sub
jo
sti
xor
(bad)
gs
xor
rcr
push
add
cmp
xchg
push
stos
sbb
cmps
mov
jg
jmp
adc
mov
jb
or
pop
test
pop
dec
fst
outs
enter
jmp
loop
enter
inc
pop
push
loopne
out
ficom
gs
or
retf
in
add
pop
dec
mov
sbb
xor
xchg
xchg
jge
fimul
shl
cmp
fmul
or
or
jb
mov
inc
or
lahf
mov
mov
mov
adc
xchg
add
mov
sbb
xchg
scas
retf
or
or
add
jl
arpl
sbb
jo
cld
add
in
jecxz
inc
inc
mov
push
cdq
dec
push
jl
in
cld
mov
sahf
push
or
into
cmp
movs
jl
leave
lahf
jmp
dec
push
sub
pop
xor
or
mov
imul
mov
xor
cwde
mov
repnz
mov
icebp
in
jecxz
or
lahf
dec
arpl
inc
lds
push
inc
pop
call
test
pop
jge
retf
jbe
sub
hlt
idiv
ret
stos
sub
or
mov
dec
imul
add
and
push
and
jae
mov
mov
pop
push
add
pop
mov
stos
dec
inc
imul
jnp
pop
adc
movs
mov
fcom
add
push
cmp
js
adc
jmp
pop
ins
add
mov
test
add
jp
ss
xchg
std
imul
jl
das
sub
enter
mov
aas
cld
sub
sbb
jbe
scas
mov
ror
jmp
aam
push
and
and
push
push
scas
mov
jmp
add
push
outs
je
mov
cs
add
lock
dec
sub
pusha
sub
mov
iret
scas
ja
hlt
dec
adc
into
xor
xor
add
cmps
sbb
repnz
push
pop
dec
xchg
cdq
mov
out
sub
pop
cmp
fwait
sbb
(bad)
retf
mov
into
mov
clc
and
popf
or
retf
int
jmp
mov
dec
(bad)
mov
jbe
es
loopne
stos
aam
add
add
jae
mov
retf
jg
push
inc
dec
adc
loope
or
pop
sub
loope
fsubr
sbb
mov
inc
imul
fadd
pop
add
add
xchg
test
ss
push
(bad)
xchg
std
adc
lea
ror
je
popa
movs
mov
pop
pop
dec
sbb
out
or
into
movs
inc
dec
rcl
cmp
or
mov
jle
hlt
push
ins
fistp
ja
push
push
fs
aas
(bad)
mov
call
je
call
mov
arpl
fistp
jl
mov
xchg
xchg
push
pushf
das
imul
inc
xchg
bound
sbb
das
mov
mov
mov
xor
data16
mov
or
mov
ret
das
retf
mov
sbb
loope
imul
adc
dec
loop
(bad)
jp
test
cld
es
xchg
mov
data16
sti
sbb
adc
sar
cmovl
into
arpl
enter
cmp
fadd
mov
(bad)
iret
mov
xchg
add
xchg
mov
in
repz
pop
ds
in
and
mov
into
inc
jnp
xchg
pop
pop
stos
adc
cmp
sub
cld
push
pop
xor
out
pop
scas
adc
ins
(bad)
xor
outs
xor
pop
aam
shl
cmp
sbb
gs
outs
mov
aad
(bad)
sub
iret
(bad)
and
fmul
sbb
loope
pop
pop
scas
push
data16
jne
enter
xlat
mov
xor
out
mov
ret
pushf
loop
sbb
pop
adc
es
ret
hlt
stos
scas
jl
jmp
ds
push
lea
adc
sub
cmp
ret
mov
leave
ja
pop
add
sbb
xor
popa
in
ret
scas
xor
pushf
jl
arpl
or
xor
mov
(bad)
sbb
sahf
inc
mov
and
add
lds
xchg
xchg
xlat
pop
xchg
(bad)
test
push
dec
cmp
loopne
cmps
dec
outs
retf
pop
sbb
add
adc
hlt
mov
jnp
sbb
inc
dec
mov
rol
test
scas
das
mov
pop
jp
jmp
jle
xchg
cdq
rol
std
(bad)
sub
xor
call
xor
mov
mov
jp
popa
jmp
adc
out
data16
mov
jae
idiv
or
jp
out
test
inc
jmp
or
stos
iret
call
inc
cdq
xchg
adc
fwait
inc
pop
jmp
es
mov
fcomp
push
mov
sbb
mov
add
js
add
mov
cdq
stos
push
ins
sti
cmc
mov
sub
mov
leave
je
jp
ds
dec
cmc
pop
cdq
mov
cmp
push
sbb
push
mov
movs
fcmovnb
cmp
cmp
mov
xchg
sub
arpl
in
sub
sbb
add
jnp
xor
mov
iret
gs
jmp
jge
imul
add
xchg
jle
and
jo
xlat
int3
cmp
cmp
dec
nop
in
repnz
rol
jge
fs
xor
shr
cmp
lea
fwait
mov
mov
mov
xor
mov
or
or
jmp
icebp
mov
(bad)
mov
xlat
or
sar
and
xor
jl
in
xor
sbb
nop
pop
bound
fxch
mov
add
or
push
jp
inc
or
cdq
and
push
gs
push
imul
push
mov
es
mov
sub
mov
xchg
shr
push
fcomp
sub
cmp
xor
adc
out
xchg
aas
jp
imul
lea
add
dec
mov
push
cmp
push
sub
mov
add
mov
clc
xchg
int
xchg
ret
xor
fwait
jnp
pushf
lods
push
or
sbb
shl
jp
sti
and
jle
and
enter
jno
xor
push
iret
mov
mov
cmp
mov
xchg
loope
dec
pop
cli
jge
sahf
lods
scas
jnp
sbb
sub
ja
not
adc
idiv
xor
inc
scas
inc
out
and
xor
and
aaa
call
cmp
test
loopne
or
hlt
imul
repnz
cmp
iret
ds
xor
cmp
mov
nop
pop
rcl
dec
jns
xchg
mov
std
in
mov
jns
and
xchg
adc
cwde
mov
loopne
(bad)
mov
popf
aad
pop
xor
imul
in
into
out
and
in
jmp
inc
in
jb
jp
add
xchg
sbb
inc
aad
sar
mov
mov
xchg
push
(bad)
pop
pushf
imul
sub
enter
out
push
mov
sbb
int
ret
arpl
std
repz
iret
test
adc
jg
mov
push
icebp
xchg
sub
call
jo
and
push
or
push
jbe
dec
add
jnp
mov
(bad)
out
jp
mov
xchg
mov
pop
push
lods
dec
clc
pop
jmp
sub
cmp
add
dec
jae
icebp
fdiv
enter
inc
jmp
or
jmp
add
xor
fsubr
out
inc
dec
jbe
xchg
mov
mov
cmp
jae
lods
or
scas
out
xor
mov
arpl
and
xor
int
mov
push
pushf
mov
mov
jno
retf
ins
xor
mov
repz
(bad)
fst
popa
xor
data16
xor
jae
mov
fidiv
add
pop
sub
jno
shr
hlt
adc
push
dec
jo
sar
add
mov
push
or
xchg
neg
lds
sar
adc
out
mov
pop
not
aad
ja
lahf
fist
push
push
and
lahf
inc
xor
cdq
add
movs
pushf
jae
and
scas
ja
pop
xchg
enter
dec
mov
mov
mov
loop
xchg
mov
mov
jae
or
inc
xor
mov
popf
lahf
and
ret
mov
dec
mov
enter
dec
pop
cmc
(bad)
mov
int
gs
es
mov
cmp
pcmpeqd
mov
xchg
cmp
dec
mov
addr16
sbb
in
jmp
adc
nop
dec
js
inc
popa
mov
pop
adc
lock
jns
repnz
nop
sub
jmp
mov
push
xor
push
cli
jle
and
je
xchg
jp
arpl
(bad)
sbb
test
xchg
int3
mov
mov
aas
stos
jge
jecxz
fisubr
leave
mov
xchg
lods
movs
pop
aam
test
shl
push
mov
xchg
inc
mov
mov
adc
in
ds
ds
pop
mov
out
jne
pop
cmp
mov
ret
add
adc
les
movs
sahf
cld
ins
sub
xchg
mov
fcmovnb
and
cli
mov
xchg
lods
fwait
cmps
pop
xor
pop
scas
in
xchg
stos
mov
imul
shr
sub
fistp
mov
adc
ror
frstor
mov
mov
int
dec
xchg
aam
fsub
pop
mov
add
push
ins
leave
push
dec
jp
mov
xchg
jecxz
lds
or
jbe
(bad)
mov
or
cli
cmc
push
repz
mov
jp
push
pop
loope
push
push
int
pop
push
sti
ja
mov
push
mov
das
inc
mov
sbb
fwait
icebp
popa
xlat
mov
pop
jmp
push
sar
lds
pop
mov
sub
jnp
(bad)
ins
out
jnp
mov
pop
imul
add
lods
or
stos
cmp
or
xchg
adc
out
in
popa
call
xchg
cmp
and
ficomp
cmp
push
cmp
mov
mov
inc
loopne
hlt
mov
sbb
xchg
pop
mov
inc
dec
xchg
loopne
or
or
xor
mov
xor
sbb
add
add
movs
call
gs
lea
call
push
fcom
jbe
shl
cld
xor
aad
(bad)
les
xlat
cmp
jl
inc
test
sub
shl
add
fdiv
in
pop
in
cmp
adc
test
mov
frstor
ds
or
mov
mov
aam
xchg
cmp
aas
pop
inc
add
lods
push
adc
pop
aaa
pop
mov
fld
xchg
cmps
pop
imul
pop
adc
std
adc
mov
pop
mov
ins
push
retf
jmp
into
sub
mov
repz
sar
std
xor
ds
outs
adc
jnp
sbb
rol
fild
and
mov
scas
aas
jl
cld
imul
add
clc
loop
xor
and
fwait
repz
movs
call
xchg
lahf
push
and
or
pop
push
sub
outs
loopne
fadd
mov
push
or
lahf
shl
bound
loope
mov
push
fimul
(bad)
int
icebp
mov
mov
or
clc
inc
in
(bad)
cmp
ins
push
xor
adc
mov
or
push
popf
pop
test
popa
nop
int
cmc
pop
call
dec
inc
jno
(bad)
mov
jno
loopne
test
inc
xchg
retf
imul
(bad)
repnz
lods
mov
mov
daa
fdivr
ds
jle
inc
adc
mov
push
jle
adc
xchg
imul
cmp
fstp
mov
jg
dec
inc
jle
xor
push
je
jbe
outs
jns
fnsave
pop
mov
cld
aad
cmp
repz
in
lds
xchg
sub
xchg
in
xchg
(bad)
xor
sahf
pop
inc
add
sahf
pop
cmp
jns
sbb
mov
shrd
aad
push
jnp
mov
cmp
add
sub
(bad)
xchg
jnp
mov
xchg
test
or
xchg
sbb
sbb
call
pop
lods
jp
pop
and
sbb
push
pop
push
mov
inc
dec
pop
loopne
inc
adc
sbb
sub
cmc
jl
ret
and
out
(bad)
dec
inc
adc
mov
mov
pcmpgtd
xor
enter
inc
imul
mov
(bad)
sbb
mov
push
push
and
xor
jnp
or
mul
scas
iret
cmc
rcl
sbb
pop
leave
mov
test
inc
cld
arpl
pop
add
mov
xor
mov
xor
mov
xchg
rcl
out
sbb
mov
xor
add
test
mov
inc
loope
dec
es
mov
div
cmp
add
(bad)
xor
movs
add
jae
pop
adc
push
cdq
push
mov
push
jmp
cmp
push
and
mov
jne
jmp
sub
cwde
das
loope
push
mov
adc
or
ror
mov
icebp
hlt
jbe
or
cwde
std
mov
in
std
lods
pop
add
out
or
scas
stc
je
or
fisttp
jecxz
inc
fs
jg
inc
movs
jmp
adc
ror
adc
in
movs
das
push
jge
adc
and
jecxz
or
in
xchg
jno
xlat
scas
enter
pop
and
or
push
jp
fst
mov
push
cdq
pop
or
stc
sbb
and
jo
mov
mov
nop
adc
add
sub
adc
inc
jns
repnz
mov
ret
or
es
cld
aas
mov
fst
push
fwait
imul
fmul
test
rcr
sub
mov
mov
xchg
jo
mov
jne
(bad)
in
mov
ja
xor
lods
inc
mov
and
xchg
jmp
cdq
sub
(bad)
jmp
jno
sbb
jge
xor
mov
adc
pop
test
(bad)
outs
add
ins
aad
sub
jg
mov
mov
pop
fisubr
repnz
je
les
and
fsubr
leave
fcmovne
clc
pop
aam
aam
add
pusha
stos
(bad)
aad
scas
(bad)
(bad)
movs
xor
das
imul
ret
fadd
mov
mov
aad
xor
jne
inc
push
out
mov
ret
data16
vmovlpd
sub
dec
cmp
xor
inc
jb
xor
jnp
int
xchg
mov
lods
xchg
clc
in
xchg
dec
xchg
das
xor
jno
aam
mov
and
xchg
sti
dec
test
pop
bound
lds
xchg
cmps
dec
xlat
pop
daa
dec
mov
mov
push
xchg
pop
js
(bad)
pop
es
mov
jb
sar
fdivr
dec
(bad)
imul
sub
(bad)
lock
mov
push
sbb
xchg
outs
jp
sbb
sti
sar
or
cli
mov
dec
lea
cdq
inc
sbb
and
sub
mov
loope
imul
and
xor
xor
push
or
pop
aaa
into
scas
push
cs
iret
jne
jl
out
and
adc
(bad)
idiv
sbb
bound
sbb
and
arpl
sub
add
adc
add
in
push
pop
loope
dec
scas
in
jecxz
adc
loope
pop
dec
(bad)
and
mov
push
pop
xor
int3
loope
aam
adc
cwde
and
icebp
cmp
imul
pop
in
jo
adc
jae
sbb
sub
shl
jae
and
imul
(bad)
leave
pop
sub
push
add
sub
sub
fadd
psllq
jno
adc
sub
data16
mov
mov
or
arpl
call
aas
pop
dec
mov
retf
lahf
aas
sbb
aas
dec
loop
stc
pusha
sti
fs
mov
push
sbb
jmp
out
mov
rcl
fistp
xchg
inc
(bad)
jnp
fs
jecxz
outs
jns
nop
inc
cwde
mov
js
shl
sub
xor
lahf
ret
xor
or
xor
stos
in
mov
aaa
repz
addr16
pop
test
popf
cmc
adc
movs
hlt
push
adc
adc
and
ret
cwde
mov
popa
loop
push
repz
fisubr
outs
imul
in
ins
(bad)
shr
mov
mov
scas
ror
add
dec
xchg
mov
int3
iret
xlat
mov
rcr
mov
fwait
xchg
xor
cli
or
push
popf
inc
sar
pop
cmps
(bad)
push
sub
sub
and
xlat
mov
test
daa
jb
sbb
mov
les
in
rol
loop
arpl
test
cmps
dec
dec
dec
into
jmp
adc
and
pop
cdq
lods
adc
or
(bad)
loopne
lahf
out
loopne
inc
push
aam
mov
lock
mov
test
or
pusha
enter
div
enter
add
dec
jnp
xchg
fistp
fsub
lods
cmp
xor
div
daa
or
mov
sub
mov
clc
xchg
or
icebp
jecxz
daa
outs
inc
inc
xchg
hlt
mov
inc
movs
(bad)
(bad)
rcl
shl
je
xchg
rcr
cmp
cli
scas
dec
inc
nop
dec
lods
mov
jmp
loope
test
push
mov
cmp
push
mov
cmp
mov
xor
jns
mov
jnp
imul
pop
xor
sahf
pop
jmp
ret
push
(bad)
call
add
dec
loop
sub
leave
cmc
sbb
test
fstp
(bad)
inc
test
pop
mov
lock
push
push
push
(bad)
loope
mov
add
jo
xchg
enter
cld
stos
ds
call
pop
dec
jmp
pop
and
retf
rcr
sub
clc
dec
sbb
cli
outs
jbe
mov
sar
jne
inc
popf
cs
push
mov
sub
ins
sub
rol
(bad)
push
xor
sbb
in
mov
jae
sub
lock
pushf
xor
test
xor
pop
xchg
shr
inc
sub
bound
pushf
ins
sub
aas
jmp
mov
in
push
and
call
mov
outs
aad
shl
ds
scas
loop
das
mov
jne
push
xor
cld
xor
sbb
push
xchg
pop
rdseed
ret
add
inc
inc
jg
(bad)
mov
sub
jmp
push
xor
push
out
fist
imul
aaa
mov
mov
ficom
or
pop
scas
push
scas
jp
push
(bad)
xor
pop
cmp
sbb
cmps
sub
ret
or
inc
pop
jo
js
xchg
dec
(bad)
call
enter
cwde
sbb
push
popf
xor
movs
fs
sbb
mov
(bad)
nop
push
test
gs
sub
mov
pop
push
and
mov
push
ins
mul
push
sub
xchg
pop
movntq
ret
push
cli
int
mov
mov
jle
repnz
and
cld
mov
(bad)
cli
clc
bnd
xchg
ja
aad
mov
jp
jne
outs
push
sub
pop
inc
stos
xchg
jo
dec
mov
mov
inc
dec
xchg
push
int3
push
push
mov
ins
push
fist
aad
jle
sub
mov
xchg
push
push
jmp
adc
lods
ds
push
out
(bad)
mov
ror
push
jmp
out
test
adc
inc
pop
mov
add
add
in
dec
jg
ret
adc
cmp
(bad)
pop
in
mov
out
daa
xor
mov
jl
ja
ret
(bad)
retf
pop
and
mov
arpl
sub
push
lahf
ret
sub
outs
pop
push
mov
int3
mov
sbb
dec
mov
jns
bound
mov
mov
sbb
push
enter
push
aaa
les
dec
fistp
cmp
xchg
xchg
nop
cmc
stos
adc
popa
retf
push
enter
or
lods
cmc
cmp
dec
xor
test
xor
dec
out
xor
inc
stc
xchg
add
gs
dec
lds
pmuludq
pop
cmp
adc
aam
jle
mov
xor
mov
sub
jne
addr16
xlat
xor
aam
das
lea
inc
scas
mov
(bad)
mov
mov
mov
push
pop
dec
sahf
fdivrp
neg
jnp
mov
xchg
fld
mov
(bad)
fdiv
cmc
aas
loope
cmps
inc
lea
imul
xchg
lds
mov
scas
les
cmp
jb
inc
ficom
add
pop
sbb
or
and
enter
ss
outs
and
imul
add
ss
add
data16
mov
or
sar
add
mov
push
aad
fwait
imul
mov
jecxz
or
movs
xor
inc
call
lock
adc
dec
mov
and
loop
mov
sbb
cmc
xrelease
and
sahf
sbb
out
sub
adc
or
or
sar
sub
das
inc
daa
loop
cmc
out
cmp
repz
neg
adc
xchg
stos
(bad)
sar
push
sbb
pop
push
mov
mov
(bad)
mov
xchg
xlat
push
cmp
sbb
clc
xchg
in
xor
ret
and
ins
sar
add
pop
inc
sub
jmp
and
rol
(bad)
cwde
sub
div
cmp
sbb
mov
cmp
jle
je
mov
test
(bad)
jne
sbb
xor
jmp
repz
mov
dec
nop
pop
xchg
and
xchg
lahf
pop
popa
ret
in
outs
(bad)
cmp
jmp
inc
outs
inc
cdq
jge
sbb
adc
or
call
rep
clc
(bad)
push
or
sub
rcl
inc
fs
cmp
sbb
mov
push
cmp
inc
and
xor
lds
cmp
jae
(bad)
lods
and
mov
push
aam
call
div
xchg
fisttp
(bad)
out
shl
out
ss
inc
fadd
jg
jge
cmp
sbb
fdivr
add
mov
cmp
and
jne
pop
shl
cmp
nop
in
lds
dec
lahf
pop
dec
add
add
out
shr
int
dec
movs
jo
dec
fistp
inc
test
or
xor
enter
jo
mov
clc
addr16
cmp
ret
xchg
lods
rcl
lds
add
cmp
push
ret
cs
push
inc
sbb
add
hlt
inc
xor
mov
cld
xor
jmp
sub
retf
push
(bad)
cld
inc
mov
and
sub
(bad)
inc
lahf
sti
test
std
out
xor
leave
mov
daa
or
in
loope
mov
gs
aad
mov
nop
sti
jmp
mov
(bad)
ins
hlt
fdivr
sbb
int3
retf
or
xchg
popf
push
dec
mov
clc
cmp
stc
and
test
into
or
test
push
or
or
sub
push
scas
cmp
fimul
add
stc
sbb
pcmpgtb
popa
push
push
fsub
es
mov
inc
aaa
test
pop
call
xchg
stos
call
aad
sub
mov
lock
mov
jle
popf
xchg
pusha
push
mov
mov
ins
mov
sbb
aam
mov
jo
inc
inc
movs
inc
inc
add
dec
push
out
retf
std
leave
scas
inc
inc
aas
imul
and
inc
sub
adc
int
mov
or
cmp
adc
sbb
lods
add
fstp
xlat
xchg
fcomp
xchg
dec
stos
jmp
sub
and
mov
lods
xlat
(bad)
in
and
dec
push
adc
sub
test
pop
mov
mov
fs
push
in
and
sbb
mov
mov
push
int3
fdivr
mov
xchg
out
xchg
add
mov
(bad)
and
sub
inc
enter
mov
out
out
xlat
aas
test
sahf
stos
outs
loop
daa
test
ror
hlt
or
pop
xchg
call
xor
xor
pop
add
rol
sbb
mov
and
mov
loope
pop
(bad)
xor
retf
xor
aas
or
xlat
shl
hlt
xchg
pop
and
adc
cmp
mov
ja
das
rcr
test
mov
jge
sub
xchg
pop
(bad)
fcomp
in
call
adc
and
push
dec
mov
mov
push
test
jmp
popf
pop
sbb
retf
inc
xchg
pop
and
xlat
jae
lods
scas
int3
psraw
shl
shr
adc
test
dec
test
dec
mov
ja
and
xor
in
clc
popa
in
mov
fnstenv
retf
mov
jae
xor
jmp
mov
jl
icebp
adc
imul
xor
jmp
fld
adc
and
test
test
shl
push
clc
shr
in
cld
jp
sbb
and
pop
inc
mov
scas
loope
xchg
outs
mov
sbb
xor
icebp
stos
inc
clc
sub
cli
fwait
rcl
jg
stos
or
xchg
jg
in
data16
inc
pop
or
pusha
test
outs
xchg
addr16
jecxz
add
add
xchg
xor
sbb
adc
imul
xor
and
cmp
test
neg
bound
in
jnp
inc
fnstsw
pop
sub
pop
std
cmp
out
xor
lea
jo
mov
mov
add
jae
ins
pop
xor
inc
pop
lock
add
bound
repz
int3
or
mov
xchg
jmp
mov
mov
pop
and
jb
outs
dec
clc
pop
jbe
frstor
sbb
add
jge
movs
mov
frstor
lds
jae
mov
stos
mov
data16
mov
and
push
int3
or
ret
cld
outs
fisub
pop
and
sar
vmovdqa
cwde
lds
adc
sub
addr16
cmps
out
int3
repnz
fist
in
outs
sbb
das
adc
jle
clc
fs
push
and
jmp
adc
adc
pop
sub
rcl
inc
add
adc
dec
jb
inc
add
and
mov
lods
add
jp
js
xlat
jb
jecxz
pop
xchg
add
cmp
pop
sbb
push
push
mov
dec
fwait
push
or
or
push
arpl
data16
mov
test
and
mov
leave
jno
call
lods
(bad)
int
shr
xchg
call
or
adc
add
pop
mov
xchg
xor
enter
push
std
push
ror
cs
and
icebp
jo
push
rcr
call
jge
adc
cmc
dec
lock
popa
sub
ja
cmp
sbb
mov
movs
std
mov
(bad)
(bad)
pusha
dec
popa
loope
xchg
sti
mov
cmp
push
mov
adc
addr16
pop
ja
retf
xchg
(bad)
dec
bound
or
mov
sti
sub
and
xlat
adc
pushf
adc
dec
pusha
inc
loop
mov
cmp
sbb
or
daa
and
rcr
lods
mov
test
mov
cmp
psrlq
int3
outs
(bad)
mov
in
leave
cmc
jno
xchg
dec
mov
adc
mov
and
dec
outs
mov
cmps
mov
jb
mov
or
fwait
xchg
sub
(bad)
push
push
addr16
and
gs
inc
push
lods
cmps
sbb
sub
push
xor
out
lods
in
jae
and
or
mov
imul
push
pusha
popa
push
pop
sbb
loop
sub
sub
pop
and
out
mov
jmp
clc
mov
sbb
inc
xlat
(bad)
clc
and
popa
xchg
mov
xchg
in
jb
ss
fst
inc
fcomp
and
jns
adc
mov
enter
mov
movs
mov
jge
hlt
mov
imul
pusha
bound
stos
pop
nop
test
lock
pop
ins
add
jle
mov
inc
xchg
sbb
cmps
cmp
cmps
pop
lods
addr16
mov
outs
cwde
xchg
imul
mov
(bad)
into
ja
retf
daa
pop
mov
icebp
and
push
shr
adc
shr
bound
jae
pop
cmp
sub
dec
mov
dec
shl
shr
mov
mov
mov
das
dec
lods
mov
sbb
ror
(bad)
push
cli
ror
test
ret
cli
out
lea
ret
aad
jg
dec
push
xor
pop
mov
ss
add
test
pop
jns
into
hlt
out
loopne
adc
ins
push
pop
xor
xchg
pop
shr
push
lahf
daa
mov
dec
lods
daa
shl
shr
mov
pop
jmp
fcmovu
(bad)
cmps
pop
adc
mov
fidivr
into
stos
lods
gs
enter
pop
call
or
sub
pusha
adc
loope
das
icebp
(bad)
jge
test
and
lods
sbb
mov
jge
jge
bound
dec
xor
ins
inc
repz
pop
push
(bad)
into
sbb
jmp
movs
add
dec
jns
jp
mov
lods
mov
xchg
jmp
imul
cmp
mov
retf
fs
cmp
xchg
icebp
xlat
daa
cmc
repnz
and
addr16
mov
daa
cmp
mov
jp
push
mul
mov
inc
neg
mov
xor
adc
sti
xchg
jp
xlat
imul
sbb
imul
xchg
push
ror
dec
add
mov
sbb
xchg
pop
mov
push
data16
cmps
mov
aas
int
pop
xor
dec
loope
(bad)
std
sub
mov
scas
pop
std
jae
jle
fadd
scas
sub
in
mov
stos
stos
pop
leave
clc
out
jmp
mov
mov
mov
fidivr
push
outs
xor
sub
xor
cli
xchg
mov
push
mov
pusha
(bad)
mov
fmul
mov
mov
enter
aas
aas
xor
bound
push
mov
popf
sub
and
add
retf
out
int3
sbb
inc
fimul
rcl
jp
xchg
fs
xchg
mov
sub
push
stos
sub
add
dec
and
inc
js
(bad)
dec
sti
push
pop
dec
dec
cwde
inc
xlat
in
popa
mov
adc
jb
gs
into
not
stc
sub
xchg
mov
(bad)
fcomp
sbb
aad
pop
ins
in
cmp
or
mov
adc
sub
sahf
mov
jns
shr
shr
mov
cmp
sub
pop
movs
aaa
int
xchg
mov
add
in
and
aam
pop
call
cmp
ss
mov
ins
mov
fwait
stos
cmp
gs
imul
ror
fxam
or
imul
or
sbb
lea
sub
adc
jae
add
scas
push
push
xor
fcom
jnp
fidivr
xchg
retf
sub
outs
cdq
xchg
dec
and
or
or
mov
xor
pop
mov
iret
cmp
cmps
iret
dec
mov
popa
popf
repnz
push
mov
cmp
cmp
cmp
push
jl
inc
hlt
mov
mov
jns
xchg
ret
stos
mov
cmps
into
inc
js
in
movs
or
or
and
cdq
xchg
cmp
mov
aad
and
dec
aas
add
loopne
pop
xchg
sahf
mov
sbb
cmc
test
pop
retf
mov
push
inc
mov
jne
cmp
mov
out
or
test
cmps
shl
rol
xchg
je
push
adc
sub
aad
cmp
(bad)
retf
inc
pop
imul
fbstp
jae
repz
loop
ds
mov
inc
inc
xchg
jmp
mov
mov
dec
repnz
aam
cmp
sub
(bad)
mov
dec
cmp
mov
sub
mov
movs
dec
(bad)
jo
in
repz
les
pusha
mov
ret
push
rol
add
pop
jmp
adc
and
test
push
push
lods
jo
inc
push
scas
jmp
test
lea
push
lahf
inc
js
(bad)
xchg
repnz
fcmovu
stos
(bad)
inc
and
add
sbb
xor
dec
xchg
fcom
pop
sub
call
aam
aaa
jnp
cs
arpl
inc
int3
(bad)
stc
push
out
sub
cmp
mov
adc
dec
std
repnz
int
cmp
or
pop
bound
mov
pop
fsub
and
loope
inc
js
sahf
and
push
ror
xor
not
mov
dec
loop
push
pushf
aas
enter
sbb
xor
push
dec
stos
sti
sbb
ficom
pop
cs
jmp
sti
xchg
ins
fsub
std
pop
std
imul
test
enter
cmp
mov
pop
icebp
jae
sub
push
icebp
dec
adc
pop
inc
rcl
cmp
jno
jmp
ja
lods
mov
jecxz
jle
jmp
pop
rol
pop
stos
push
scas
fwait
xchg
jmp
fcom
jmp
(bad)
mov
not
mov
movs
test
push
aas
pop
sub
nop
mov
ret
jnp
pop
dec
sbb
push
(bad)
repnz
xchg
out
mov
(bad)
mov
mov
mov
cs
jl
rcr
bnd
into
les
cmp
pusha
mov
aad
cmp
cdq
cmc
jle
jae
sti
add
es
xchg
(bad)
sti
sar
dec
jp
or
imul
push
and
rol
(bad)
fisttp
addr16
mov
es
xchg
pop
xchg
dec
mov
ror
out
jmp
mov
test
sbb
cmps
in
lock
sahf
jne
add
and
dec
jge
cmp
fild
pop
pop
inc
jo
bound
lahf
add
into
sbb
mov
ins
aam
dec
mov
aad
test
pop
pushf
or
int
into
fwait
addr16
dec
rcl
fldcw
mov
and
push
mov
jns
pop
idiv
add
ja
mov
out
push
rol
xor
push
fwait
inc
adc
xchg
pop
rol
lahf
lock
fwait
mov
loopne
nop
leave
dec
cwde
sti
rol
jmp
cld
mov
mov
gs
jae
jbe
push
mov
in
inc
push
mov
add
lea
adc
adc
loop
cmp
push
jno
or
shl
(bad)
nop
push
popa
inc
or
mov
add
adc
fwait
sub
int3
in
xor
jo
xor
xchg
mov
cmp
pop
push
or
xchg
call
jecxz
mov
fld
jne
add
test
out
mov
mov
cwde
push
xor
sub
sti
inc
jne
push
dec
jbe
loope
iret
sub
cmp
push
test
loope
call
mov
inc
in
gs
in
and
and
sbb
jb
repnz
xchg
add
jle
xor
or
rcr
push
mov
clc
in
cdq
and
jmp
sub
outs
cvttps2pi
jmp
cmp
fwait
cmp
sbb
mov
and
mov
jmp
scas
inc
add
in
sti
int3
aaa
mov
and
inc
adc
icebp
sub
or
sbb
movs
mov
sub
imul
and
jno
dec
push
mov
aad
adc
adc
rcl
mov
nop
(bad)
into
fist
jnp
in
push
cmps
jg
sub
out
scas
jle
push
mov
inc
(bad)
leave
adc
std
repnz
push
cmp
sub
(bad)
cmp
aaa
stc
loope
fsubr
int
sti
add
nop
imul
inc
inc
cmps
xor
loopne
daa
nop
repnz
xor
fdivr
xor
ja
sub
xchg
pop
xchg
fld
neg
(bad)
pop
adc
xchg
(bad)
fcom
repz
paddsw
cwde
fbld
inc
rol
cmc
pushf
call
ret
into
and
call
xchg
jge
sbb
lock
pop
dec
inc
lods
loop
movs
xor
loope
xchg
fild
out
or
cmp
pushf
mov
test
out
pop
sub
pop
cmp
lahf
into
xchg
add
inc
xchg
and
push
and
dec
leave
push
sub
mov
push
mov
push
mov
arpl
xchg
popa
push
les
pop
push
xchg
outs
imul
pushf
adc
sbb
mov
fwait
jl
stos
aas
sbb
or
push
cmp
lods
es
int
jns
ds
xor
add
int
int3
sbb
test
imul
aas
aaa
pushf
pushf
cwde
and
aam
jmp
int
repz
loopne
outs
loopne
jle
xchg
in
cmp
jb
mov
push
shl
retf
push
neg
loop
rcr
test
aaa
push
inc
stc
ret
cmp
mov
jge
cwde
pop
jmp
ret
fdiv
push
xchg
aam
mov
out
in
push
dec
std
shl
out
mov
call
inc
adc
jbe
test
fld
aaa
mov
or
or
and
sub
fdivr
sbb
adc
xor
outs
cdq
adc
mov
sar
mov
call
shl
mov
popa
pop
out
xor
ret
jle
dec
xor
mov
sub
xchg
jmp
in
aad
(bad)
jnp
shl
aaa
mov
movs
addr16
mov
push
jne
inc
mov
cs
cdq
test
clc
lods
push
test
fnstcw
stc
cs
into
add
les
lahf
pushf
call
shr
and
scas
sbb
in
mov
pop
ffreep
cdq
mov
sub
imul
cld
js
fs
(bad)
(bad)
stos
push
pop
add
rcr
xor
sbb
rcl
or
xchg
jmp
sbb
sub
push
adc
sub
or
div
enter
mov
jge
std
cmps
fist
clc
test
int3
cmp
jp
mov
(bad)
stos
mov
sbb
add
dec
loopne
inc
and
out
retf
enter
sbb
add
ret
sub
mov
fsub
imul
daa
call
test
nop
sub
cli
sbb
xchg
(bad)
enter
popf
je
jl
bound
and
mov
stos
neg
ret
call
gs
add
mov
cmp
push
sub
mul
fisttp
(bad)
call
scas
add
jb
cmp
push
int
dec
arpl
cmp
inc
fstp
clc
pop
push
mov
leave
pop
xor
mov
ret
pop
xchg
lds
rol
cmp
inc
rcr
sbb
inc
lods
fimul
movs
fild
xor
inc
sti
popa
aad
loope
shr
sbb
xchg
xchg
add
push
or
inc
jnp
xchg
ins
cmc
cmp
in
inc
jns
cmp
ja
loop
test
hlt
xchg
mov
push
ret
xchg
dec
push
shr
cmp
xchg
pop
sbb
jle
iret
adc
dec
inc
stos
cmp
mov
push
movs
pusha
lea
hlt
js
mov
push
mov
sar
adc
movs
sub
xchg
js
repz
popa
movs
outs
mov
mov
mov
cmp
fcom
sti
ss
xor
gs
adc
gs
frstor
cwde
mov
shl
inc
mov
xchg
(bad)
outs
cld
popa
(bad)
imul
add
cmp
sar
div
push
js
call
dec
dec
push
cli
inc
jg
mov
push
xor
ins
dec
test
xchg
cmp
xor
inc
push
mov
outs
push
or
pop
cmp
push
test
jmp
jno
push
dec
inc
and
dec
mov
(bad)
fdiv
mov
arpl
and
mov
lods
jg
sbb
in
out
ret
xlat
sub
lock
xor
enter
or
ret
scas
call
adc
push
add
shr
or
std
jmp
inc
cmp
pop
dec
mov
inc
ins
add
gs
xor
stc
ja
fisttp
mov
stos
mov
mov
shr
jbe
das
pushf
lock
mov
cdq
lods
je
stos
jbe
pop
pop
cmps
inc
sbb
in
in
sub
add
xchg
outs
jecxz
xor
xor
mov
lahf
xchg
jno
add
(bad)
jp
pushf
cmp
mov
mov
mov
or
adc
adc
mov
sbb
into
mov
and
xor
lds
popf
inc
or
and
mov
mov
add
stos
push
mov
stc
cdq
dec
dec
jb
add
(bad)
retf
add
add
pop
mov
fxam
fnstenv
mov
dec
pop
cmp
leave
push
js
jb
shr
ret
xchg
mov
movs
mov
cmp
xchg
fst
stc
sahf
inc
les
and
xchg
jl
loop
fwait
movs
mov
test
mov
sub
dec
jb
xchg
loop
add
mov
fmul
ins
bound
scas
sbb
sbb
lods
add
push
in
ins
out
and
(bad)
shr
cmp
fisttp
imul
cwde
call
dec
or
pop
pop
jle
mov
cmp
mov
fst
sbb
dec
(bad)
jbe
xor
enter
popa
inc
adc
wbinvd
call
cld
jb
inc
imul
push
sbb
xchg
push
inc
ins
dec
cli
adc
xchg
cmps
sbb
scas
xchg
fistp
repz
clc
out
loopne
sbb
inc
(bad)
jp
sbb
in
jp
push
sahf
loope
and
adc
jbe
dec
retf
repz
sti
push
dec
into
and
cmps
scas
dec
sti
inc
mov
shl
mov
test
push
fadd
jmp
lods
jno
leave
jns
ins
jnp
jae
outs
push
mov
outs
sub
out
sbb
imul
sahf
aam
cmp
lea
(bad)
addr16
aam
popf
mov
push
xchg
std
fild
mov
mov
in
mul
test
loope
cmp
adc
daa
jae
or
xchg
xor
in
xchg
pop
jae
movs
sub
push
out
add
mov
xor
xor
test
in
aad
dec
push
adc
lea
loope
imul
jecxz
adc
and
ja
in
icebp
and
push
aaa
data16
test
pop
push
pop
inc
lods
outs
pop
js
imul
cmps
pop
dec
cmp
mov
push
and
add
fsubr
out
xor
loope
mov
stos
inc
jno
imul
mov
add
(bad)
pop
test
cdq
stos
dec
mov
xchg
lds
jge
ret
mov
jecxz
push
dec
pop
sbb
inc
mov
add
mov
adc
mov
pusha
rcr
sahf
or
pop
rcl
frstor
movs
mov
jge
lods
shl
popa
sbb
dec
jge
arpl
dec
push
outs
mov
call
loope
jecxz
fild
repnz
xchg
in
aam
and
mov
pop
iret
test
jg
and
lahf
sti
push
lahf
call
xchg
push
xlat
xor
add
sub
loopne
ror
or
push
in
shl
push
imul
call
mov
pop
cld
ficom
bound
arpl
test
mov
repnz
pop
out
adc
cmc
fist
pushf
mov
or
rcr
test
pop
test
sub
inc
mov
(bad)
jmp
pop
or
je
ret
pop
jnp
mov
popf
je
cmp
ret
xor
imul
pop
ins
cdq
loopne
mov
push
(bad)
hlt
fcmovu
fwait
js
pop
mov
les
jp
and
cmp
cs
sbb
cmp
inc
and
mov
xchg
mov
sbb
xchg
ret
push
and
outs
in
mov
dec
fwait
jle
arpl
or
push
xor
int3
mov
jns
sbb
mov
xor
sbb
inc
lock
stc
ss
popf
cmp
xchg
mov
mov
and
rcr
outs
jnp
in
mov
stos
fs
lock
or
into
loope
(bad)
pop
inc
mov
lock
scas
xchg
jne
xchg
scas
pop
fiadd
pop
repz
mov
pop
popf
jmp
addr16
ins
xor
or
mov
sub
dec
fsubrp
cli
cmp
inc
sbb
inc
sbb
jecxz
xor
and
dec
lds
retf
add
imul
out
push
jge
push
add
sbb
sti
cmp
cmp
(bad)
std
push
cmps
xchg
or
mov
imul
popf
xor
call
sbb
push
xor
les
test
xor
push
xchg
inc
scas
mov
cmp
and
xor
(bad)
data16
inc
xchg
dec
fs
movs
ret
fldenv
(bad)
xlat
jnp
(bad)
in
ss
wrmsr
movs
push
test
ficom
inc
addr16
mov
dec
adc
in
mov
push
std
sub
(bad)
pop
mov
mov
pop
rol
mov
cmp
adc
test
into
std
stos
stos
push
xchg
ins
jo
mov
and
push
aad
scas
jnp
rcl
inc
rcr
add
mov
mov
dec
aam
mov
in
and
push
fnstsw
sub
int
gs
jp
dec
sbb
out
and
push
stos
bound
push
(bad)
push
mov
adc
dec
sub
and
mov
bound
push
jo
shl
addr16
inc
leave
pop
jp
dec
sahf
arpl
xchg
mov
or
aaa
shl
in
pop
push
mov
xor
adc
je
jns
ds
movs
push
hlt
mov
in
add
mov
arpl
sub
lock
push
mov
mov
in
pop
jbe
fsub
adc
mov
movs
jno
cmp
mov
push
sub
dec
loopne
(bad)
(bad)
push
cli
push
call
(bad)
aas
div
xor
cmps
cs
cs
out
mov
pusha
push
repnz
xchg
fistp
(bad)
xchg
sub
and
and
dec
inc
push
xchg
cmc
lods
(bad)
ss
imul
jecxz
out
fdiv
jne
jne
and
lods
js
mov
ror
and
out
pop
cmp
jl
inc
xchg
jle
push
repnz
aaa
retf
mov
xchg
jmp
sar
push
mov
fadd
dec
cdq
mov
fcom
xchg
nop
jno
jecxz
loope
pop
sub
adc
idiv
stc
sar
mov
mov
pop
and
sbb
dec
or
cdq
dec
loopne
fs
fwait
mov
scas
les
mov
jmp
int3
dec
jle
inc
sbb
xchg
mov
ins
push
(bad)
lods
fsub
js
test
popa
cmc
adc
js
(bad)
stos
ss
mov
lea
dec
cmp
shl
xor
pop
test
jno
xchg
add
jae
fnstenv
sbb
out
jo
sbb
mov
sub
push
push
popf
sub
popf
push
inc
mov
cwde
sub
in
cmp
push
pop
xlat
push
sti
hlt
ret
pop
loopne
fcmovnb
leave
push
mov
mov
pop
sbb
or
shl
mov
call
inc
ret
sub
xor
jg
and
in
jecxz
adc
(bad)
push
pop
xchg
xor
fmul
jmp
outs
cmps
and
ret
cmp
sub
lds
retf
adc
push
mov
sub
div
add
jne
add
mov
xlat
out
ss
out
and
loopne
test
jge
jnp
sahf
(bad)
pop
stos
xlat
(bad)
jb
push
jmp
sub
arpl
(bad)
mov
or
clc
or
aaa
adc
es
mov
mov
cmps
xchg
push
jns
inc
(bad)
xlat
or
adc
xchg
dec
lods
cmp
mov
sub
aaa
sti
fidiv
movs
rcl
mov
cld
stc
aas
scas
clc
ret
(bad)
loope
std
adc
ja
mov
std
dec
xor
loopne
mov
ja
clc
cmps
and
push
jge
pop
cmp
cmc
shl
or
imul
mov
fs
sbb
fdivr
mov
inc
cmp
test
mov
daa
aad
out
je
ror
retf
mov
dec
fdiv
fstp
sbb
(bad)
fdiv
inc
fstp
popf
call
pop
push
inc
add
xchg
xor
mov
pop
sub
mov
pop
clc
add
cmc
out
jg
push
lahf
or
jp
jae
cld
jo
adc
sbb
fidiv
inc
or
imul
repz
ss
shl
add
mov
inc
enter
adc
mov
xor
outs
lods
add
push
outs
mov
out
stos
imul
xor
dec
or
cwde
add
fmul
mov
cdq
aaa
xchg
mov
cwde
and
ret
add
repnz
push
jecxz
or
xor
xor
test
push
addr16
aad
mul
loop
nop
shl
dec
test
lock
add
dec
mov
jl
inc
mov
(bad)
dec
movs
call
inc
(bad)
clc
push
stos
sbb
push
mov
push
add
js
mov
retf
mov
xchg
jne
fwait
xchg
push
and
xor
inc
aas
gs
push
mov
pop
int3
iret
pop
pop
sar
cmp
pop
dec
jo
ja
add
clc
xlat
and
imul
jecxz
clc
inc
jne
cmp
cli
jne
jno
fdivr
or
mov
int3
mov
inc
mov
cmp
data16
and
leave
inc
loope
dec
je
loopne
fsub
(bad)
scas
mov
push
or
adc
aam
add
push
sbb
inc
pop
cmps
fs
add
fld
and
cmp
jp
std
icebp
ret
push
push
iret
cmp
sbb
xor
mov
mov
sbb
jno
cs
out
call
lods
dec
push
add
lock
adc
mov
idiv
lods
xor
test
adc
clc
call
imul
in
popf
aad
pop
call
jo
ror
fbstp
push
outs
mov
adc
aad
xor
retf
jnp
stc
xchg
mov
add
xchg
push
hlt
clc
pop
ror
mov
cwde
jle
sbb
mov
mov
iret
pushf
retf
xor
sbb
dec
jo
psubq
std
and
loop
and
pop
pop
scas
and
ror
and
dec
add
ss
mov
lahf
inc
jns
mov
lds
jge
mov
int
cmp
lods
rcr
outs
and
in
dec
xor
and
mov
add
outs
mov
int
add
xchg
ins
mov
and
pop
jecxz
fdivr
push
hlt
jbe
xlat
js
push
inc
inc
aam
scas
and
in
mov
popa
jl
and
sbb
loop
popf
fdiv
addr16
or
fs
xchg
jns
adc
xchg
inc
(bad)
sub
not
mov
push
sbb
mov
cmp
out
fsub
pop
mov
jns
(bad)
cmc
loopne
sahf
hlt
adc
mov
push
xchg
push
jmp
mov
xchg
sub
out
push
or
cmp
mov
xchg
push
inc
sub
cmc
adc
adc
mov
in
xor
or
leave
adc
(bad)
div
xchg
outs
shr
fdivr
ins
pop
sub
and
jne
test
mov
fwait
cs
dec
call
add
add
mov
cwde
add
mov
shl
sub
dec
movs
push
mov
xchg
push
cmps
popf
xchg
or
repnz
call
mov
rcl
fs
mov
xchg
rcl
stos
dec
ror
inc
jo
or
push
cli
fwait
inc
cli
(bad)
jmp
stc
test
fstp
cmps
js
mov
xchg
(bad)
cdq
and
(bad)
loop
ret
sub
sar
fwait
pusha
das
int
sbb
cs
jae
imul
adc
or
inc
(bad)
or
mov
xchg
mov
popa
popf
mov
push
pusha
mov
fcmove
xchg
push
dec
xchg
adc
rcr
push
sbb
hlt
cmps
or
jg
sub
(bad)
mov
adc
sub
add
repz
popf
loop
idiv
xor
lods
adc
addr16
xor
push
loop
xchg
pop
imul
test
inc
(bad)
mov
mov
push
push
and
test
xlat
mov
dec
dec
outs
mov
fcom
xchg
dec
mov
(bad)
gs
pop
or
mov
xchg
xchg
popa
xor
adc
stos
repnz
fstp
jo
mov
out
push
sbb
fs
pop
and
sbb
neg
sbb
sbb
arpl
dec
jns
inc
xchg
not
neg
fadd
nop
dec
clc
mov
add
lods
rcr
push
and
lahf
retf
push
fucomip
jl
lods
ja
push
push
or
icebp
xchg
inc
jbe
xor
jne
clc
add
jnp
sti
or
retf
call
gs
xor
loopne
cmp
cmp
frstor
lea
push
mov
push
inc
push
jecxz
dec
push
mov
xor
inc
or
push
test
mov
cdq
push
push
dec
xchg
ja
inc
test
pop
pop
ds
sub
lock
shl
and
inc
cwde
jl
mov
in
test
push
push
or
rol
xchg
sbb
jp
lods
mov
fcomp
fild
xlat
xor
jmp
mov
xor
push
scas
fidivr
mov
sub
xchg
push
push
lds
out
iret
push
dec
mov
dec
iret
fidivr
jecxz
shl
add
cmp
jg
mov
lahf
mov
push
fisttp
adc
pusha
pcmpeqd
jne
aaa
mov
pop
int
sbb
pop
xchg
sbb
aam
add
and
mov
mov
mov
xchg
out
dec
dec
arpl
dec
add
mov
stos
pushf
lods
pushf
(bad)
cmp
out
cs
jae
jecxz
and
xchg
scas
cld
sub
mov
stos
int
imul
lds
mov
push
dec
cld
sub
retf
dec
retf
dec
lea
mov
sub
retf
mov
pop
pop
or
push
push
aaa
sub
cmp
into
and
outs
aas
stos
ja
push
nop
push
rol
xchg
add
mov
shr
fsubr
lods
push
shr
cmovnp
mov
jb
xlat
and
test
pop
lock
test
mov
add
and
mov
(bad)
sub
xor
sub
cmc
mov
inc
jo
ret
fimul
out
cmp
mov
ss
call
aad
and
jle
jl
movs
pusha
retf
aam
jmp
cmp
sub
dec
add
jo
lock
xchg
dec
shr
arpl
adc
loopne
out
xchg
bnd
cli
xor
nop
cmp
(bad)
aas
test
js
(bad)
pop
jo
ret
pop
mov
push
cmp
pop
movs
xor
mov
andps
(bad)
xor
sbb
cwde
test
mov
nop
out
repnz
punpckhdq
fmul
out
jnp
idiv
push
or
inc
fisubr
rcr
in
pop
fisttp
pop
xor
sbb
xchg
mov
call
mov
into
dec
cld
mov
std
daa
lock
clc
imul
or
xchg
dec
(bad)
or
xchg
popf
and
lock
mov
xor
pop
xor
xor
mov
cwde
cmc
bound
cld
test
mov
data16
hlt
rcl
out
sar
mov
sbb
push
loop
inc
fucom
cmps
and
jp
cmp
repz
xchg
out
shl
out
inc
sub
or
dec
leave
call
jecxz
add
dec
inc
push
pop
out
add
sahf
jle
push
and
pop
pop
push
xchg
adc
inc
or
mov
inc
imul
dec
dec
and
ja
xor
xchg
or
cmp
and
inc
xor
pop
outs
test
rcr
dec
in
push
pop
push
add
dec
jae
loop
push
cwde
mov
mov
std
in
(bad)
sub
fnsave
push
daa
add
adc
movs
(bad)
push
mov
jge
mov
std
call
je
ffree
or
popf
retf
jmp
stos
sahf
in
test
arpl
jae
fs
push
lds
clc
push
dec
loope
sbb
inc
and
sub
push
cmp
ins
and
enter
rcl
(bad)
and
je
fwait
dec
cld
pop
xor
ror
mov
movs
xchg
inc
sbb
repz
lds
out
ficomp
xchg
dec
sub
xchg
fadd
xlat
mov
cli
or
ffree
jne
inc
je
mov
enter
xchg
cmps
push
jne
xchg
dec
and
retf
xor
mov
pop
fisub
(bad)
fcomp
jge
inc
(bad)
repz
lods
shr
daa
jno
call
jl
in
mov
out
loope
jle
xor
mov
iret
jnp
lahf
or
stc
add
lahf
cmp
pop
mov
add
int3
jge
push
mov
pushf
or
in
and
mov
adc
mov
cli
mov
cdq
ja
outs
lahf
dec
xchg
push
in
xor
clc
cmps
aam
aam
lods
aam
rcr
and
mov
push
pusha
mov
push
neg
test
xlat
push
pop
xor
pop
push
cmps
pop
xor
jmp
xchg
adc
or
jne
push
mov
retf
inc
movs
add
dec
xchg
push
push
lock
aas
popa
stos
fist
aad
ret
jmp
std
dec
xchg
clc
sbb
push
mov
test
xor
jl
jnp
retf
push
cmps
sub
pop
cmp
jg
repz
mov
mov
leave
and
repnz
inc
(bad)
sar
daa
sbb
jns
pop
jns
iret
neg
add
in
jnp
add
repnz
fs
cmps
jle
inc
push
ds
or
out
mov
lds
(bad)
mov
leave
clc
inc
retf
jge
inc
iret
adc
in
push
shl
cmp
dec
xchg
movs
pop
test
jbe
xchg
xchg
xchg
aam
sbb
and
mov
pusha
mov
push
cld
pop
add
das
lods
retf
ja
out
pop
ret
bound
push
jb
mov
or
fst
pop
int
out
push
xchg
into
jmp
dec
push
fistp
hlt
and
pop
mov
cmp
jge
sub
push
(bad)
pop
push
jmp
fucomi
sub
jl
pushf
add
mov
cdq
inc
sub
mov
jl
loop
cs
(bad)
repnz
dec
push
or
(bad)
nop
ss
mov
mov
retf
shl
pop
or
push
cld
test
sbb
imul
imul
shl
jg
and
xchg
pop
or
sti
call
push
out
lock
ret
push
loop
ror
nop
mov
cmp
sbb
int3
sbb
lods
mov
out
add
xchg
xor
dec
jno
mov
lods
adc
rcr
arpl
mov
fwait
xchg
mov
jp
fwait
outs
pop
mov
pop
mov
jecxz
mov
ja
icebp
and
mov
pop
(bad)
xchg
stos
adc
mov
aaa
and
mov
stc
ret
add
jnp
ss
mov
mov
mov
pop
mov
adc
les
cmp
jnp
or
jne
lods
xchg
popa
call
stos
add
jle
fidiv
fstp
xor
int3
inc
add
jecxz
fs
pop
rcl
out
xchg
movs
pop
hlt
cmps
mov
sbb
jnp
repnz
add
sahf
mov
sbb
stos
stos
mov
jnp
cmp
fnstenv
adc
mov
movs
hlt
ins
(bad)
fadd
mov
adc
mov
push
sub
xor
repnz
jns
and
push
sub
in
es
and
push
push
sar
call
fwait
cld
mov
data16
jl
dec
ins
fimul
push
xchg
mov
aam
adc
loop
popa
pop
xor
int
fmul
sbb
aam
sbb
fsubr
pop
cmp
in
mov
xor
jno
fistp
cmp
xchg
xchg
enter
xor
nop
sbb
ds
xchg
xor
add
xor
add
pop
mov
repz
shr
sahf
data16
or
add
xor
loopne
mov
mov
xchg
dec
out
pop
test
xchg
xor
push
outs
sub
in
cmps
cmp
cmps
mov
dec
inc
inc
push
ins
loop
push
aam
add
push
fwait
jae
jnp
test
xchg
ror
xor
dec
movs
xchg
leave
(bad)
mov
(bad)
jmp
cmp
xor
lea
lods
imul
ja
jl
mov
push
mov
es
inc
push
dec
ja
xchg
(bad)
out
xchg
mov
jno
je
out
outs
mov
into
shr
pop
push
test
jne
mov
pusha
inc
lahf
in
and
mov
pop
mov
sub
xchg
cmovbe
outs
jae
jno
std
dec
aam
add
mov
sub
div
dec
sub
jnp
mov
adc
sub
jp
stc
fisttp
(bad)
sar
imul
pop
dec
addr16
popa
pop
sub
add
mov
in
ret
bound
fbstp
movsx
xlat
dec
jl
out
idiv
fs
in
cwde
aad
repz
out
in
jl
or
xor
aad
shl
sti
jmp
or
popf
dec
jbe
sbb
pop
inc
jo
add
mov
pop
int3
popa
xchg
mov
cmp
xor
lock
mov
xchg
jmp
movs
add
mov
jne
add
aas
inc
push
add
js
fcmovb
adc
add
cmp
adc
add
push
lea
adc
outs
pop
jmp
sbb
and
pushf
nop
cmp
inc
mov
jp
jb
dec
add
pop
add
dec
and
dec
js
inc
(bad)
repnz
jmp
pop
mov
lods
adc
jbe
push
inc
mov
inc
dec
pop
fnstenv
dec
cli
jb
(bad)
(bad)
xor
add
inc
cmp
push
jmp
xor
or
leave
add
push
inc
cmp
push
mov
iret
inc
mov
out
xor
push
iret
loopne
fmul
gs
mov
shl
jmp
(bad)
and
or
arpl
rcr
jae
mov
pop
retf
je
inc
out
jg
xor
loop
aas
rcr
mov
movs
imul
sub
(bad)
pop
mov
loopne
bound
pushf
sub
pop
jp
mov
sub
xchg
ror
movs
mov
mov
call
leave
lahf
icebp
lods
aaa
rcl
push
inc
scas
push
mov
cmp
xlat
adc
xor
int
outs
in
je
pop
loopne
ds
stos
lea
inc
pusha
mov
lods
arpl
inc
neg
out
rcr
jecxz
arpl
mov
fwait
mov
cwde
pop
xchg
pop
and
mov
rcr
mov
(bad)
mov
or
push
cmp
aad
cmp
mov
mov
popa
jmp
sbb
pop
js
(bad)
push
pop
sub
xor
pop
(bad)
fmul
inc
inc
jno
xchg
and
xor
fiadd
sbb
sbb
dec
jno
in
cld
ret
fisttp
leave
movs
clc
loop
ins
retf
sub
inc
pop
repnz
pop
cmp
cmps
pop
fsubr
dec
add
mov
mov
gs
dec
mov
jnp
inc
add
or
cmp
xchg
xchg
mov
mov
sbb
fdiv
pushf
cmps
dec
cdq
cwde
mov
mov
jl
or
xor
mov
jbe
jmp
mov
mov
xchg
and
fisubr
jnp
sbb
imul
dec
jno
mov
and
jp
add
js
aaa
ins
arpl
cmps
sbb
and
enter
dec
into
enter
loop
aaa
outs
lea
lods
push
ret
call
dec
xchg
jo
or
jle
sub
in
sbb
adc
clc
int3
out
mov
sub
call
std
mov
popf
fisttp
push
test
test
dec
inc
dec
into
cmps
fwait
ret
jg
mov
inc
jg
dec
icebp
xlat
sub
call
mov
clc
mov
cmp
addr16
arpl
xsavec
push
adc
popf
inc
imul
adc
mov
cli
xor
and
sub
stc
xchg
or
sbb
lea
jmp
sbb
add
jge
aad
jp
mov
push
enter
loopne
sub
jo
mov
popf
pop
jne
mov
mov
or
inc
adc
repz
lea
push
cmp
lods
nop
cdq
pop
(bad)
int
inc
loop
hlt
stos
mov
sbb
inc
(bad)
cmp
xchg
sbb
int
and
aad
jno
lods
dec
and
mov
or
faddp
push
lods
jge
push
sub
lods
scas
bound
push
push
dec
xchg
pusha
ds
sti
pusha
mov
call
mul
pop
cmc
mov
stos
leave
(bad)
pop
adc
add
mov
jnp
jg
xor
pop
sub
push
(bad)
cmp
sar
jns
mov
sub
inc
adc
inc
stos
imul
lods
or
fld
inc
stos
pop
pop
retf
mov
mov
push
jo
gs
pop
mov
aas
fs
popf
scas
inc
mov
cmp
enter
retf
stos
fcom
inc
and
repnz
ins
push
adc
loopne
and
pop
sbb
out
jne
ins
xlat
mov
mov
scas
out
pop
ret
clc
(bad)
push
add
lock
lods
lea
das
repz
stos
repnz
adc
and
cld
sub
cmps
cmp
dec
test
xchg
pusha
pushf
rcl
push
and
fs
mov
mov
dec
pop
icebp
push
pop
jl
(bad)
ds
jl
pusha
mov
mov
push
adc
add
(bad)
jl
mov
icebp
lock
int3
mov
shl
pop
iret
loop
xchg
pop
add
ins
lods
and
push
inc
or
or
mov
jmp
out
clc
mov
sbb
imul
xor
mov
push
ror
cmps
es
shr
mov
jmp
pop
or
and
pusha
mov
cwde
xor
jo
data16
or
sbb
inc
sub
out
out
and
jp
xchg
ins
mov
ret
rcr
inc
sbb
cmps
cwde
(bad)
pop
pop
inc
or
ret
add
(bad)
pop
sbb
popf
mov
xchg
scas
jb
jae
push
adc
xor
dec
mov
jecxz
(bad)
pop
xchg
and
pop
inc
cmps
retf
mov
and
inc
jmp
or
iret
iret
mov
and
cmp
mov
and
adc
aad
adc
inc
add
outs
nop
pop
out
retf
ficom
pop
ds
sbb
movs
cmp
pop
gs
jmp
sbb
ins
xchg
add
push
mov
push
cmp
xor
add
retf
add
int
and
dec
sub
test
push
imul
rol
sub
pop
add
call
mov
pop
adc
adc
div
nop
or
cmp
mov
mov
xchg
inc
cmps
call
movs
repz
adc
jle
cmp
push
loope
iret
lods
js
int3
push
jl
push
or
mov
mov
or
sub
jmp
cmps
sbb
sub
xor
dec
mov
lods
movs
and
and
cmp
pop
sbb
daa
aad
loope
in
jne
mov
mov
jne
sbb
fcom
ret
mov
push
jmp
xor
mov
addr16
sbb
mov
add
mov
addr16
je
mov
jp
push
(bad)
in
xor
cmps
cld
push
jo
(bad)
jg
jecxz
clc
repz
pop
arpl
jle
xchg
cmp
pop
fisub
aam
mov
add
rep
jo
lods
not
stc
and
sub
inc
pop
sub
ins
adc
ror
xchg
lock
push
js
inc
push
push
div
in
sti
mov
or
push
jmp
cmps
sbb
pop
mov
(bad)
mov
pop
add
or
std
sbb
push
jecxz
add
lfs
in
jo
movs
shl
loopne
mov
xlat
push
call
dec
je
inc
imul
pushf
jp
(bad)
jo
sahf
test
push
scas
lds
adc
and
or
push
mov
scas
stos
xchg
lods
sbb
stos
cs
push
mov
repnz
jmp
adc
dec
sub
ror
icebp
mov
add
adc
call
imul
push
xor
xor
lock
mov
pop
cmp
vcvtpd2ps
mov
fwait
mov
inc
std
and
mov
dec
pop
jl
es
aad
dec
push
mov
sub
cmp
clc
ins
push
ins
pop
cwde
sbb
dec
arpl
mov
cs
aas
sbb
into
imul
in
xor
loop
ret
xchg
xlat
nop
mov
mov
push
andnps
sub
xchg
jg
sub
push
loopne
push
mov
mov
scas
cmp
mov
adc
adc
shl
stos
mov
or
into
push
mov
mov
inc
push
push
mov
popa
mov
jnp
inc
iret
pop
xchg
inc
rcr
into
push
cmp
not
cmp
mov
in
das
xor
sahf
call
fwait
xchg
push
pop
in
js
shl
sub
mov
ss
enter
iret
aam
sub
pushf
dec
aas
fmul
repz
sbb
jmp
sub
pop
aaa
aaa
icebp
enter
inc
in
aaa
ins
mov
in
push
push
gs
popa
cs
xor
xchg
scas
daa
int
ds
lods
or
loopne
pusha
xchg
sub
lahf
push
push
es
push
xor
sbb
xor
cmps
xchg
and
inc
xor
test
sub
pop
mov
sub
outs
mov
xchg
or
or
sti
rol
sar
pop
mov
mov
xchg
fs
mov
in
int3
int
dec
push
iret
push
cmp
xchg
test
lea
in
sub
xchg
mov
jbe
fwait
inc
xor
sahf
pop
(bad)
sti
sahf
aam
bound
sbb
gs
(bad)
clc
inc
sub
call
ins
jne
bound
fwait
mov
(bad)
out
xchg
mov
cmps
mov
sbb
and
mov
dec
adc
cli
cmc
adc
cmp
int
lea
xchg
pushf
stos
es
pop
fldenv
cmp
xor
mov
mov
jle
aad
jmp
jge
xlat
jp
pop
out
int
jno
push
add
bound
pop
and
lds
dec
mov
xchg
cmp
add
and
xchg
mov
xchg
iret
test
std
(bad)
push
sbb
jp
mov
push
cdq
inc
sub
leave
mov
cwde
loopne
js
adc
sub
sub
push
pop
and
and
mov
xchg
das
inc
fs
jmp
adc
outs
dec
movs
sbb
mov
ret
pop
inc
mov
cmps
call
gs
inc
add
out
pop
mov
xlat
adc
mov
push
jb
bound
pop
mov
sahf
mov
fnstenv
sar
and
pop
jnp
and
adc
and
adc
mov
leave
and
lds
stc
jbe
test
cmps
mov
outs
or
mov
out
std
and
pusha
mov
and
or
pop
out
dec
jge
and
cs
xor
mov
out
pop
push
push
adc
into
(bad)
std
retf
test
fucomi
int3
scas
adc
push
fst
rcl
sahf
clc
pusha
xchg
sbb
mov
fldcw
adc
jmp
repz
addr16
stos
xchg
cmp
push
jno
daa
repnz
cmps
cmp
xchg
push
pop
xchg
les
arpl
mov
test
jnp
mov
xchg
push
iret
push
imul
xlat
push
je
scas
bound
mov
dec
xor
loop
jne
mov
test
into
xchg
jl
pop
mov
jae
icebp
push
add
in
pop
xchg
out
sub
imul
adc
and
xchg
clc
mov
mov
mov
fstp
or
call
xchg
les
or
iret
mov
pop
repnz
sbb
mov
dec
aas
dec
mov
adc
jb
mov
mov
addr16
cvtsi2sd
mov
cmps
std
sti
out
adc
mov
jns
ret
out
cmp
addr16
cld
sub
push
std
dec
dec
out
jmp
psubw
fwait
retf
inc
jae
data16
push
inc
mov
shl
mov
(bad)
imul
jno
xor
retf
call
(bad)
fisub
jmp
xchg
dec
mov
scas
jne
adc
repz
arpl
(bad)
(bad)
fsubp
xchg
and
lods
test
test
or
(bad)
das
das
ds
retf
shr
fnsave
in
inc
aam
(bad)
jnp
les
mov
mov
out
in
mov
das
ret
nop
add
(bad)
in
jo
icebp
mov
(bad)
cmp
pop
jmp
mov
pop
xchg
sub
cld
push
das
enter
(bad)
ins
data16
cld
aad
jmp
test
cmp
pop
mov
sbb
ds
repnz
daa
or
jge
sbb
lods
in
scas
clc
cwde
dec
add
dec
js
fld
and
xchg
cmc
addr16
sub
fsub
mov
sub
cmp
int3
call
xlat
push
or
and
hlt
xlat
sbb
add
shl
loop
adc
mov
and
xor
ret
stos
mov
mov
push
mov
sub
inc
inc
or
int3
inc
repz
ins
push
xchg
outs
mov
mov
fwait
jmp
lahf
add
pop
(bad)
or
sub
jp
xor
mov
cmp
mov
in
xchg
inc
enter
pop
sbb
adc
push
pushf
dec
jb
mov
pop
test
jge
add
push
dec
push
pusha
mov
aaa
(bad)
scas
pop
sub
jg
out
or
fcmovnbe
adc
loopne
clc
out
ins
and
jp
retf
pop
cmp
cmp
shl
pop
inc
mov
popa
imul
(bad)
adc
mov
movs
dec
and
fmul
add
fstp
dec
inc
push
jns
(bad)
jae
xor
or
scas
call
daa
in
pop
cmp
retf
test
cld
mov
psubusb
aam
mov
pop
mov
mov
sbb
cmp
xchg
aam
iret
mov
sbb
or
lods
addr16
dec
mov
pusha
pop
mov
nop
outs
push
out
mov
ret
arpl
cmp
clc
in
push
leave
out
sbb
out
ret
in
cmp
adc
jnp
xchg
and
push
mov
out
in
or
in
mov
popf
lods
into
mov
or
mov
(bad)
or
in
xchg
dec
inc
test
mov
jae
push
std
aaa
mov
adc
dec
dec
scas
or
mov
push
ror
xor
bound
mov
inc
mov
dec
pop
das
rcl
aad
(bad)
jg
int
jnp
sub
or
sbb
mov
xor
arpl
imul
sbb
je
jbe
dec
push
aas
stos
push
out
lods
pop
pop
and
add
mov
int
(bad)
gs
cmp
aam
or
sar
xor
ret
and
cmp
mov
dec
data16
cdq
sbb
mov
sbb
retf
js
xor
pop
xor
and
xor
ret
shr
jecxz
in
or
add
pop
in
jmp
cmps
mov
(bad)
mov
pop
cmc
leave
bswap
not
dec
push
adc
or
adc
loope
pop
mov
sbb
xlat
cwde
mov
out
and
dec
repnz
popf
test
jle
cmp
adc
and
rcr
daa
popf
and
cmc
sbb
out
cmp
jnp
cmp
mov
scas
jns
cmps
lahf
dec
mov
imul
mov
xchg
popf
adc
(bad)
fimul
mov
mul
mov
lock
das
(bad)
sti
loope
cmp
adc
cmp
inc
test
push
sub
aad
mov
xor
xchg
sar
pop
and
mov
pop
sbb
ret
push
test
or
cwde
inc
fidiv
jb
test
mov
add
sbb
ss
nop
mov
xchg
ret
adc
movs
xchg
pop
sbb
loop
cld
fstp
mov
rcl
sti
xor
hlt
mov
pusha
test
cli
lock
dec
cmp
adc
pop
or
push
pop
cs
maxps
int3
retf
test
fmul
push
and
mov
jns
cmc
inc
movs
pop
ret
ins
xchg
push
bnd
jmp
retf
cmp
pop
sub
ja
enter
mov
(bad)
(bad)
loopne
sub
pop
jns
scas
fldenv
jo
xor
mov
popa
mov
scas
lods
clc
test
daa
mov
pop
mov
ins
lock
aam
or
inc
out
shr
push
(bad)
in
fs
jmp
inc
mov
cmps
cdq
enter
xchg
frstor
aaa
(bad)
push
xchg
dec
cmp
and
inc
jno
aaa
iret
daa
mov
mov
test
sub
dec
push
not
xor
inc
ret
push
(bad)
mov
sbb
les
and
cld
add
mov
mov
cmp
mov
jmp
out
jecxz
mov
mov
(bad)
jbe
mov
sbb
retf
inc
jb
push
clc
xchg
rol
ins
or
mov
leave
popf
push
ficom
xor
jecxz
nop
jle
jno
loopne
and
sub
add
in
arpl
xor
xor
std
xchg
push
add
(bad)
int3
sub
xchg
sahf
ror
loop
mov
jmp
mov
jo
xchg
xchg
dec
lock
sub
fucom
and
sbb
xor
push
addr16
pop
cwde
dec
lea
fadd
sub
leave
dec
fild
push
sub
(bad)
gs
adc
or
and
push
push
out
inc
add
int3
mov
inc
ror
fst
push
shr
pop
pop
lahf
pop
fdiv
dec
ins
add
loope
out
add
shr
push
int3
pop
cmp
mov
in
sub
or
mov
ds
push
into
mov
sahf
xchg
mov
ins
xor
push
sub
mov
pushf
xor
xor
jbe
vmptrst
test
cli
iret
outs
fs
and
rcl
push
sar
stc
xchg
push
mov
inc
or
rcr
in
mov
shl
xor
cmp
pop
jg
imul
xor
add
push
xor
xchg
dec
sahf
fwait
sahf
mov
push
pop
cmps
out
push
mov
xor
sbb
enter
mov
lods
clc
pop
das
sub
test
ret
push
dec
or
xchg
aaa
es
aaa
and
xchg
adc
push
push
cmp
cmp
sbb
retf
push
cld
in
pop
stos
cmps
stc
push
xchg
push
ror
sbb
fcomp
xchg
dec
sbb
(bad)
cli
daa
jmp
jle
popf
jb
mov
sar
in
dec
cmp
movs
mov
jnp
pusha
loope
pop
in
shl
and
(bad)
push
fisttp
or
(bad)
sub
and
aad
sti
out
mov
sub
push
xchg
lods
test
jnp
adc
pop
add
pop
pop
dec
addr16
jne
and
cmp
int
leave
stc
js
xchg
xchg
pop
(bad)
bound
outs
fild
or
inc
and
xor
aad
sub
mov
mov
adc
inc
mov
fs
leave
in
mov
adc
(bad)
cwde
in
push
cmpxchg
jbe
mov
dec
sbb
mov
fmul
and
mov
scas
xchg
dec
sbb
dec
in
mov
int3
cwde
mov
mul
(bad)
out
(bad)
xchg
sub
call
test
xchg
(bad)
(bad)
mov
lods
and
les
pop
test
nop
gs
mov
pop
jmp
jl
jmp
stos
cmp
push
dec
cmc
mov
scas
add
cmps
or
xchg
jne
or
dec
inc
sbb
pop
inc
adc
(bad)
xchg
test
pop
adc
ret
jle
mov
repnz
mov
fcomp
hlt
lods
cmp
retf
mov
jecxz
loopne
mov
push
cmp
mov
dec
test
iret
xor
inc
xor
and
out
or
retf
pop
jae
and
dec
xchg
jnp
or
fsub
je
(bad)
out
ds
xchg
dec
ret
cmp
or
adc
inc
les
int3
pop
pop
inc
sub
mov
daa
gs
dec
adc
ficomp
je
jmp
jp
xor
aaa
or
jp
mov
cmp
or
mov
mov
xor
add
into
daa
or
xchg
jmp
or
pop
aam
pop
or
lods
mov
xchg
dec
fs
(bad)
pop
fs
mov
inc
in
or
inc
out
and
mov
add
push
ret
mov
in
mov
aaa
pusha
push
and
add
sbb
test
fbld
push
loop
dec
imul
out
adc
shr
xor
or
stos
mov
xor
shr
push
clc
cmp
xor
adc
adc
(bad)
(bad)
ror
bound
add
mov
in
test
pop
fbstp
fild
pop
fs
mov
fdivr
pop
or
es
call
bound
pop
pop
adc
jmp
or
dec
and
nop
lock
in
cmp
icebp
or
nop
or
or
loope
adc
repnz
addr16
sahf
les
xor
and
ins
ret
mov
pop
push
in
fild
xchg
push
inc
das
sbb
sub
mov
xor
(bad)
pop
xor
cwde
xchg
dec
cmp
(bad)
repnz
arpl
or
imul
adc
jno
xor
(bad)
lahf
or
cwde
in
mov
pop
jns
dec
aas
xchg
int3
and
push
mov
scas
leave
add
repz
fucomi
fcomp
jno
outs
gs
nop
push
test
lahf
sub
dec
xor
mov
call
jle
add
mov
das
sahf
pop
repz
inc
mov
xor
dec
add
jbe
(bad)
movups
test
addr16
test
dec
add
and
stos
out
mov
in
add
mov
call
out
cmp
mov
and
inc
stc
lahf
and
sbb
clc
div
and
adc
push
and
inc
ins
int3
xchg
ins
nop
mov
pop
nop
and
jne
pop
retf
daa
jae
sub
or
idiv
ins
(bad)
(bad)
xchg
les
mov
mov
ret
movs
inc
imul
fcmovnu
and
vmovlps
xor
enter
add
push
xchg
inc
push
stc
xchg
aad
dec
xchg
push
push
sub
mov
sbb
add
cmp
cmc
cld
xchg
cmps
fcomp
and
and
outs
inc
pop
lds
(bad)
stos
add
shr
mov
dec
nop
(bad)
xor
(bad)
dec
jb
popa
aad
imul
cmps
jmp
(bad)
sbb
cmp
lea
push
into
cmp
push
and
mov
sbb
dec
push
cdq
jb
inc
cmp
push
dec
retf
ret
jmp
push
add
in
mov
icebp
cli
inc
fucom
add
inc
test
into
dec
inc
mov
jmp
fidivr
push
jle
repz
mov
mov
mov
int
in
aad
xor
fsubr
icebp
or
jl
jbe
nop
sub
jae
in
dec
jp
jmp
mov
mul
pop
mov
sub
test
jns
jle
cld
or
shr
ja
xor
sub
mov
jb
dec
mov
repnz
pop
outs
inc
movs
lahf
add
stos
in
imul
div
inc
inc
dec
mov
(bad)
dec
pop
jns
mov
mov
div
neg
out
xlat
dec
(bad)
push
mov
out
add
sahf
dec
enter
pop
iret
repnz
mov
xor
push
cmp
cli
lods
jae
push
outs
jae
div
out
outs
hlt
xchg
jns
push
jno
xlat
movs
cmp
test
pop
cwde
loopne
mov
lods
mov
pop
or
idiv
push
loop
aad
bound
pushf
scas
pop
outs
mov
(bad)
sub
xchg
dec
push
push
gs
or
mov
into
mov
arpl
ins
in
push
and
cmp
pop
pop
sbb
bound
mov
sahf
xchg
push
js
push
sbb
(bad)
sbb
sbb
pmaddwd
or
scas
stc
bound
fnsave
lock
pop
test
movs
in
inc
fldenv
pop
das
fisttp
or
adc
pop
sub
ret
and
icebp
out
jmp
test
ss
mov
movs
pop
jne
(bad)
sub
shl
inc
jns
inc
fdivr
popa
repnz
bound
add
push
sbb
xchg
(bad)
call
push
xchg
xor
out
adc
fdivr
out
dec
(bad)
aas
imul
shl
outs
pusha
dec
mov
push
daa
xlat
mov
adc
sbb
pop
pusha
xor
mov
adc
call
pxor
mov
xchg
cmps
push
jmp
movs
adc
shl
mov
fsub
(bad)
retf
or
mov
xor
sub
(bad)
fdiv
stos
movs
push
lea
cld
arpl
inc
lahf
aaa
shr
dec
xchg
stos
push
pushf
out
jge
test
jmp
mov
std
mov
stos
fwait
jmp
push
iret
sar
mov
xchg
or
jne
aad
adc
shl
aam
repz
mov
mov
(bad)
cli
stos
mov
dec
add
xchg
add
sbb
aas
add
or
and
outs
push
(bad)
test
mov
inc
movs
mov
(bad)
sbb
pop
jecxz
push
cmp
arpl
call
inc
outs
lods
xor
ret
sbb
sub
cmp
icebp
add
pop
sahf
xchg
adc
cmps
fstp
outs
imul
outs
cmp
add
(bad)
fyl2x
pop
jno
mov
jmp
mov
jae
test
fwait
cli
jecxz
or
xchg
adc
dec
cmp
call
push
adc
mov
out
int
mov
dec
sbb
rol
sub
push
enter
sbb
outs
add
or
pushf
mov
pop
add
xor
cdq
(bad)
mov
mov
push
dec
neg
sti
daa
mov
leave
call
arpl
jae
fiadd
push
in
adc
mov
mov
adc
in
popf
dec
mov
jp
test
pop
aad
push
shl
das
jge
inc
in
mov
cdq
(bad)
sti
enter
inc
(bad)
retf
mov
fdivr
fidivr
push
pop
push
pop
xor
add
inc
(bad)
in
ret
nop
jbe
push
ss
(bad)
or
jnp
repz
test
jne
ja
add
or
jle
jp
scas
pop
adc
mov
mul
jmp
(bad)
sbb
aam
inc
cmp
sbb
gs
jl
jge
xor
fcom
cld
cmps
lahf
sbb
dec
jmp
aad
cmp
xchg
les
int
jne
ins
xchg
xchg
sub
outs
cmps
xlat
imul
out
out
jne
jnp
cmc
push
neg
sbb
leave
sti
add
mov
and
push
into
xor
mov
pop
add
sar
hlt
or
sub
cmp
data16
xchg
jne
xor
test
adc
mov
or
dec
and
dec
and
(bad)
sub
jns
pop
aam
adc
shl
les
mov
mov
xor
xor
and
cld
adc
jp
jno
push
fadd
adc
pop
mov
and
sub
jmp
addr16
or
jb
test
mov
and
aas
enter
in
and
pop
cmps
and
fist
xchg
dec
jns
xchg
data16
jmp
addr16
or
test
rcl
leave
pop
(bad)
and
shr
mov
push
lds
xor
in
dec
mov
cmp
das
add
push
sbb
jb
(bad)
xor
popa
std
movs
xor
dec
inc
or
int
mov
add
sahf
xor
jne
lods
mov
ret
cmp
cmps
push
repnz
mov
push
shl
fldcw
mov
xlat
sbb
mov
ret
mov
pushf
sar
or
gs
out
fwait
cmp
jmp
push
imul
je
or
and
mov
imul
dec
(bad)
jnp
js
or
mov
cdq
cmps
xchg
and
adc
rol
push
mov
mov
mov
ror
jge
nop
or
cmp
inc
jmp
mov
or
(bad)
pusha
sbb
mov
mov
stos
lock
repnz
mov
push
shl
ficom
(bad)
hlt
std
jbe
jge
cmps
mov
cmc
xchg
repz
sub
mov
xor
je
adc
fs
adc
test
adc
inc
mov
jnp
dec
add
sahf
inc
mov
and
shl
push
pop
stc
scas
mov
dec
jmp
ins
mov
mov
inc
loopne
sbb
mov
nop
mov
xchg
xchg
xchg
addr16
sub
data16
pop
scas
jl
xor
lahf
mov
mov
ret
dec
mov
mov
jo
ret
push
ins
mov
and
push
ja
in
xchg
jae
dec
clc
fs
retf
pop
and
and
in
dec
aas
(bad)
call
xchg
cmp
aad
adc
adc
out
loopne
cmps
data16
sbb
jnp
out
mov
sub
pop
sub
adc
outs
jbe
cs
push
lea
retf
xchg
outs
dec
out
je
call
dec
dec
jbe
scas
adc
fnstcw
mov
cdq
nop
(bad)
push
test
mov
shr
setnp
cmp
ret
shr
sub
inc
popf
retf
jp
dec
fisub
std
in
mov
retf
mov
popf
dec
pop
test
mov
push
out
fsub
stc
in
popf
test
or
xor
and
inc
and
into
jmp
inc
sbb
mov
popa
arpl
push
xchg
aas
push
aas
imul
mov
leave
sub
jmp
shr
mov
(bad)
outs
mov
call
cmps
es
inc
mov
je
jns
stos
scas
xor
mov
dec
jo
mov
pop
sahf
push
add
shl
jmp
adc
mov
data16
test
xchg
arpl
sub
jo
pop
mov
push
and
pushf
mov
sbb
pusha
ins
jno
mov
push
fld
inc
push
sub
cwde
adc
movs
sbb
popa
cmp
mov
or
push
not
and
in
pop
adc
cmps
loopne
sti
push
adc
lods
pop
dec
mov
mov
or
mov
mov
mov
push
xor
clc
ficom
adc
jmp
cli
scas
(bad)
mov
aas
test
sub
test
fisttp
push
stc
push
dec
add
cmp
ins
call
retf
jg
fisttp
movs
sub
mov
ret
add
sub
or
mov
add
jns
leave
dec
push
cwde
xchg
cmps
rol
out
cmps
pop
dec
mov
inc
and
lds
inc
das
in
or
push
cmp
sbb
pop
test
push
xchg
pop
adc
push
ror
pop
ins
aam
xchg
(bad)
xlat
inc
stos
es
out
xor
jmp
leave
hlt
push
and
add
aad
ja
cmp
and
(bad)
ins
mov
iret
fmul
sbb
and
or
pushf
pop
test
add
dec
int3
pop
sbb
mov
ret
icebp
inc
std
adc
movs
push
xlat
or
outs
xchg
sbb
push
std
inc
inc
sahf
mov
div
and
xchg
xlat
cmc
xor
mov
(bad)
cmp
cmp
push
in
mov
std
fstp
imul
outs
sbb
scas
xor
mov
or
call
pop
out
scas
mov
movs
test
dec
adc
std
into
mov
fimul
push
pop
add
stos
mov
mov
int3
movs
xchg
pop
test
lods
bound
(bad)
xor
inc
js
pushf
jae
xchg
jmp
test
sbb
and
lods
lods
(bad)
jmp
sbb
imul
mov
cdq
daa
test
pop
mov
jmp
or
bound
push
dec
cld
or
lds
xor
add
lock
mov
dec
push
or
mov
sbb
mov
sub
cdq
mov
test
sbb
push
push
pusha
fnstenv
xor
push
adc
(bad)
clc
add
mov
jnp
push
jg
push
clc
inc
dec
cmp
push
jge
sahf
inc
cmp
sbb
cmps
sbb
mov
mov
and
inc
xchg
in
loope
jne
pop
div
scas
fcom
lea
inc
stos
test
dec
dec
mov
add
adc
or
push
rcl
push
idiv
clc
and
and
jne
pop
fsubr
shl
mov
leave
lods
pop
jb
inc
mov
jbe
int3
pop
xchg
mov
neg
xor
mov
adc
inc
icebp
outs
rcr
push
pop
xor
popa
movzx
mov
dec
xchg
mov
(bad)
mov
mov
bound
out
scas
push
add
push
div
dec
or
fsub
in
fs
adc
mov
dec
mov
inc
fxtract
aaa
push
sti
pop
mov
test
(bad)
mov
int
(bad)
mov
adc
rol
push
jno
mov
or
mov
mov
inc
inc
neg
jns
call
das
cmp
out
in
jnp
and
imul
mov
int
add
mov
push
and
std
sbb
call
(bad)
cli
mov
mov
fstp
scas
mov
mov
ss
or
inc
cmp
and
loope
push
(bad)
pop
loope
shl
test
pop
pop
sbb
sub
add
iret
mov
push
mov
mov
mov
and
xor
sti
sbb
dec
rcl
sahf
xchg
nop
test
xor
push
mov
add
mov
into
je
mov
jl
adc
lahf
aad
movs
mov
enter
in
call
fisub
outs
sub
ror
fmul
ja
add
add
arpl
mov
or
xchg
adc
mov
cmp
pop
icebp
and
jmp
lea
imul
iret
enter
cmc
push
pop
sbb
or
retf
pushf
scas
inc
test
mov
push
dec
jae
push
dec
test
inc
js
int
xor
sbb
or
out
mov
jnp
cmp
lods
scas
push
in
test
pop
mov
add
sub
sub
xlat
xchg
push
adc
sbb
mov
push
dec
mov
sub
popa
and
push
adc
xchg
and
pop
lods
or
mov
pop
lahf
gs
mov
bound
movs
push
(bad)
mov
xchg
cmp
add
dec
add
cmps
sub
mov
mov
je
mov
jmp
mov
ins
mov
adc
repz
jge
jbe
es
cli
sahf
mov
shl
pop
inc
or
test
ficom
and
jge
and
test
test
inc
sti
js
pop
jb
rcl
pop
das
pushf
add
add
enter
scas
ins
frstor
pusha
ins
mov
inc
xchg
stc
mov
xchg
sbb
and
or
sub
pop
maxps
mov
arpl
inc
inc
and
pop
outs
sbb
jle
sub
hlt
sbb
mov
lods
sub
or
hlt
js
movs
mov
iret
or
dec
xchg
ror
mov
adc
xchg
ins
cmp
cs
sub
call
mov
daa
cli
test
outs
jmp
jo
shrd
cmc
lahf
sbb
lahf
jecxz
cmp
cwde
mov
inc
xchg
ror
fsub
stc
jle
pushf
arpl
mov
repnz
call
jge
ja
cmp
lods
loop
mov
mov
jl
sbb
adc
push
outs
adc
cli
pop
aad
lahf
adc
xor
std
jbe
adc
pop
cmp
fnstenv
daa
dec
movs
sahf
cli
pop
push
test
test
movs
movs
mov
int
push
sbb
fwait
pop
les
inc
jbe
cmp
lods
mov
mov
jns
hlt
sub
stc
popa
addr16
call
fld
cli
jo
rol
fimul
movs
retf
pop
sbb
aas
jb
xchg
pop
jecxz
fidivr
dec
push
xchg
loopne
arpl
cmp
scas
push
mov
cmc
inc
mov
mov
sbb
mov
xchg
clc
inc
push
retf
ret
sub
sub
mov
pusha
mov
sti
jp
out
jmp
repnz
xchg
test
fbld
ins
sti
push
test
mov
mov
call
lods
rcl
inc
addr16
stc
out
test
jno
mov
sbb
sub
test
add
adc
xlat
hlt
push
mov
and
sbb
imul
add
pop
mov
fwait
outs
xor
adc
xor
cwde
sbb
jg
gs
fisub
test
bound
adc
cmc
dec
std
cmp
push
rol
mov
mov
mov
mov
sahf
(bad)
mov
mov
pop
int
out
fnsave
cmp
sub
div
and
cmp
xchg
dec
or
ret
shr
jns
inc
shr
mov
addr16
std
adc
outs
movs
sbb
mov
out
push
dec
popa
jmp
mov
scas
fs
cmp
jge
xchg
shl
call
cmp
xchg
xor
ret
in
or
popf
adc
inc
pop
out
arpl
push
ror
and
xchg
in
push
in
fld
dec
jo
sti
loop
outs
adc
mov
js
in
ret
cmp
push
cmp
sub
jns
cmp
call
mov
xchg
inc
lahf
mov
repnz
mov
pop
cmp
fidiv
rol
add
in
fisubr
lock
lds
cmps
daa
retf
cmp
add
xchg
daa
jns
mov
(bad)
bound
movs
cs
xchg
add
mov
adc
dec
jo
jge
adc
mov
push
test
inc
pop
cdq
cli
cmps
sub
jge
mov
out
sub
aam
hlt
pop
push
arpl
or
pop
(bad)
clc
inc
loopne
gs
aaa
sbb
xor
loope
adc
adc
dec
cmc
pusha
or
pop
retf
jmp
adc
pushf
mov
(bad)
dec
sbb
and
adc
xlat
mov
ror
inc
adc
pop
adc
sbb
inc
daa
aam
inc
lds
and
jo
adc
inc
call
mov
and
adc
ret
sbb
mov
or
adc
sub
out
push
mov
dec
ins
aad
imul
xlat
mov
cwde
add
cmp
fisttp
sti
pop
rcl
mov
xchg
mov
(bad)
rcr
jbe
pusha
ror
ss
addr16
(bad)
pop
bound
xor
adc
std
cmps
lahf
dec
xchg
add
aad
jb
test
sbb
(bad)
pop
es
out
mov
mov
in
inc
movs
sbb
dec
mov
jnp
xor
adc
int
sar
iret
test
(bad)
xor
add
sbb
xchg
ss
lea
test
call
fstp
sbb
jmp
add
push
pop
inc
out
(bad)
aaa
jmp
push
mov
cmp
mov
shr
fisub
adc
ror
aam
mov
xlat
dec
inc
jmp
fisub
ret
dec
ja
jbe
out
xor
xchg
jo
loop
sar
nop
xlat
add
sbb
pusha
cmp
pushf
mov
jae
ja
xor
mov
pop
push
outs
pop
cmp
mov
(bad)
xor
push
and
aad
fdivr
loop
mov
pop
arpl
hlt
in
iret
cmp
das
aam
cmp
or
jle
pop
xchg
add
push
mov
(bad)
mov
std
mul
push
pushf
mov
add
cld
or
cdq
mov
ss
mov
mov
push
outs
xchg
xchg
aas
fsub
inc
cmp
pop
xchg
pop
call
push
(bad)
imul
mov
fild
inc
push
push
jle
xchg
push
iret
push
jle
cmp
retf
fisubr
mov
mov
mov
xor
push
sbb
sti
dec
in
xor
out
sbb
cwde
lds
loopne
jne
enter
and
faddp
jge
ja
push
daa
call
js
stos
aas
shl
aas
popf
push
push
aam
ret
call
ds
je
jp
cmp
push
pop
sar
in
sti
xchg
data16
xchg
push
xor
lea
xchg
jl
xor
test
and
psubw
jbe
pop
jno
into
cdq
mov
sub
cmps
pop
xchg
sahf
add
sub
pop
mov
js
xchg
sub
fstp
mov
loope
ds
xchg
dec
xchg
rcr
push
leave
daa
movs
and
sbb
ins
xchg
adc
pop
add
push
aaa
add
cmp
std
sti
and
in
call
mov
call
icebp
ja
rol
adc
adc
xchg
push
xchg
cmp
retf
(bad)
js
loop
xchg
push
pop
test
mov
add
(bad)
rcr
xor
das
loop
cmps
pop
jl
sbb
sbb
cmp
sbb
cmp
(bad)
jo
loope
sbb
xchg
xor
shl
or
sub
into
push
fdiv
pop
mov
sbb
movaps
push
mov
arpl
sbb
push
pop
loope
ret
and
push
out
fst
fidivr
ret
xor
cli
xchg
inc
(bad)
test
in
jns
imul
lods
into
xor
pop
ins
adc
stc
arpl
ss
scas
add
ficomp
inc
xor
ret
cmc
arpl
das
dec
xchg
outs
dec
cwde
into
and
lds
jle
cli
jg
in
xchg
pop
sub
sahf
pop
dec
pop
xchg
sbb
jle
mov
pop
loopne
inc
rcl
mov
or
jne
mov
outs
fistp
or
mov
bswap
pop
and
dec
lods
xchg
pop
(bad)
push
scas
cmp
push
xchg
adc
lods
shl
inc
mov
and
push
aam
cmp
mov
aam
fs
jo
push
pusha
mov
fistp
test
jecxz
ficomp
mov
sar
xchg
outs
imul
dec
pop
shl
call
lahf
repz
movs
pushf
mov
aam
xchg
xchg
fs
loope
sbb
pop
in
sub
in
in
call
mov
lea
movs
jbe
dec
(bad)
adc
xchg
xchg
test
shl
pop
and
adc
and
pop
cmp
rcl
ds
ss
jmp
mov
fldcw
push
sub
fcom
popa
jbe
mov
ss
les
dec
xlat
push
mov
out
pop
mov
pop
push
pop
and
xchg
sbb
imul
sub
cmp
test
pushf
xor
je
loope
cmp
(bad)
test
ror
adc
fist
fs
add
sti
loopne
mov
cmp
mov
adc
nop
push
inc
xor
enter
out
dec
sub
(bad)
idiv
and
inc
pushf
stc
adc
fild
push
fisttp
mov
xor
gs
inc
loopne
xor
jg
mov
shl
inc
sbb
push
or
pop
or
scas
push
jmp
dec
test
dec
mov
shl
jae
inc
sbb
repnz
ret
push
dec
std
xchg
std
push
pop
xchg
dec
pusha
mov
movs
xchg
cs
leave
add
mov
mov
inc
lods
jnp
js
fdiv
jbe
push
push
dec
sahf
and
sbb
mov
jg
popf
lahf
test
lock
stos
jbe
xor
call
and
inc
call
sub
sub
and
mov
sbb
(bad)
fbstp
js
fs
mov
sti
stos
jne
push
lds
jb
adc
pop
xchg
xchg
mov
out
pop
retf
and
gs
in
loopne
xchg
jle
mov
or
ret
xchg
not
mov
push
cmp
aam
mov
push
and
mov
inc
push
js
push
(bad)
add
call
add
fisub
jg
sub
sbb
adc
pop
ins
inc
mov
mov
dec
add
ja
and
das
add
and
jmp
mov
push
mov
int3
dec
adc
das
jl
mov
push
push
xchg
or
cmp
and
sahf
and
jbe
push
stos
scas
ja
mov
cmp
sbb
mov
adc
aas
push
cmp
mov
cli
je
adc
pop
pop
(bad)
jno
repz
test
inc
loopne
imul
aaa
test
xor
test
loope
xlat
ins
mov
push
add
mov
xlat
sbb
pop
jno
pop
add
jge
jmp
mov
(bad)
sahf
xchg
jno
ret
push
pop
fmul
dec
repz
sbb
or
sti
(bad)
call
sub
pushf
inc
mov
stos
jb
cli
leave
xchg
std
xchg
jge
adc
xchg
and
mov
mov
aaa
stc
fstp
into
les
call
out
gs
or
or
call
mov
cdq
jg
mov
out
cli
(bad)
xor
lahf
aas
test
js
enter
mov
add
push
jb
xchg
fiadd
fs
pop
int3
outs
dec
push
mov
test
inc
pop
xchg
inc
mov
mov
mov
cs
ins
xor
push
or
js
pusha
int3
push
mov
mov
leave
dec
hlt
mov
ds
in
out
jbe
or
dec
mov
int3
aaa
popa
lahf
bound
xor
sbb
aaa
jno
daa
and
jle
xchg
outs
xor
jno
div
inc
and
inc
rcl
adc
ret
movs
pop
in
or
into
add
test
pusha
mov
pop
push
data16
loope
mov
gs
repnz
test
adc
mov
(bad)
jbe
cs
cwde
push
xchg
xchg
cmp
and
jmp
jo
loop
or
jb
jmp
int
ficom
mov
push
push
retfw
adc
jae
outs
push
inc
inc
test
stos
mov
push
and
or
mov
daa
ret
inc
(bad)
jb
ds
inc
inc
fadd
add
adc
vpmacssdd
cld
cmp
inc
inc
rep
add
aad
pusha
pop
push
das
xor
rcr
in
into
arpl
sbb
aad
bound
cmp
inc
lock
xchg
jmp
test
fist
inc
mov
add
fisttp
ror
or
test
rep
dec
add
mov
iret
test
jle
cmps
scas
jb
jne
ret
int
adc
cwde
sub
call
sub
push
int
inc
xor
div
add
rcl
jp
outs
cwde
and
mov
push
stc
lods
inc
test
xchg
cmp
dec
shl
in
mov
imul
cmp
push
out
(bad)
std
mov
sub
lods
or
arpl
ds
pop
in
xor
pop
shl
and
jo
pop
xor
je
pop
and
sbb
cmp
cli
in
aad
(bad)
xchg
push
and
xchg
push
ss
add
fiadd
movs
jo
cmc
ror
repz
pop
(bad)
(bad)
adc
add
lock
sub
addr16
dec
add
adc
jns
and
mov
jp
fmul
lahf
mov
jecxz
sti
imul
(bad)
aam
push
and
call
xor
das
xchg
or
aas
dec
jecxz
inc
adc
into
(bad)
jne
adc
lds
add
call
test
cwde
imul
test
ins
push
aad
stc
dec
or
push
nop
and
mov
dec
add
and
mov
sbb
sbb
sub
cmps
shr
mov
int
enter
sbb
cs
fwait
adc
cmp
xchg
mov
or
jmp
daa
pusha
xchg
jg
sub
iret
test
push
push
loop
push
movs
and
sbb
xor
popf
mov
add
mov
daa
or
inc
add
enter
mov
or
dec
cmp
adc
movs
fnstsw
test
lods
mov
inc
push
push
in
mov
jnp
cmp
push
enter
and
mov
sub
test
push
xlat
(bad)
mov
add
xor
gs
mov
xchg
lds
ror
xchg
pop
dec
add
cmp
xchg
lock
ja
and
sbb
sbb
test
(bad)
sub
in
jge
cwde
imul
cwde
bswap
pop
or
repz
mov
jb
ret
pusha
or
(bad)
fidiv
cli
or
cmps
cmp
and
jo
pop
sub
pusha
xor
mov
aas
into
mov
or
(bad)
jne
or
cmp
push
(bad)
pop
xor
gs
ret
inc
sti
mov
data16
fdiv
fcomp
push
psllw
call
clc
pop
shld
leave
enter
inc
mov
cmp
xor
cmp
retf
cdq
push
hlt
cmc
into
nop
mov
cld
pand
or
and
mov
lds
das
adc
dec
(bad)
and
xchg
(bad)
sub
add
adc
shr
push
int3
mov
or
inc
xchg
pop
test
test
add
in
push
sbb
aaa
pop
stos
cmps
fwait
sbb
jbe
xor
dec
aam
push
mov
sub
jae
jns
jl
xor
enter
or
mov
data16
push
pop
jg
mov
bnd
dec
pop
out
mov
imul
cmp
cdq
inc
inc
in
ins
hlt
inc
std
je
push
retf
adc
push
dec
pop
add
sbb
fbld
fist
cmps
pop
sti
adc
xchg
pop
popf
inc
sbb
sub
(bad)
cld
mov
or
jmp
shl
repnz
pop
xor
call
or
xor
xor
shl
shl
retf
inc
sub
cmp
lock
mov
iret
sti
xchg
push
test
or
and
mov
daa
std
std
aaa
test
adc
mov
clc
hlt
je
push
mov
mov
mov
sub
or
cmp
rcl
not
arpl
lahf
cmp
add
imul
retf
dec
arpl
int3
dec
sub
das
mov
mov
adc
popa
mov
les
lods
jp
xor
out
jmp
add
xchg
aam
ret
in
mov
jno
jno
mov
sub
add
xchg
xor
dec
jmp
sbb
cmp
movs
dec
call
inc
ret
jge
xchg
scas
jmp
mov
or
jbe
cmp
(bad)
daa
sbb
in
push
xor
pop
sub
inc
mov
test
ficom
fwait
cmc
loope
repz
dec
sbb
sbb
add
fs
push
dec
jns
imul
sub
push
jb
jae
loopne
jo
outs
mov
in
adc
lahf
loop
cld
sti
jae
inc
es
sub
mov
ficom
jl
mov
sub
push
jp
in
mov
dec
mov
xchg
call
cs
adc
stc
jmp
push
(bad)
xchg
fisubr
and
jmp
xchg
lods
inc
push
cmp
mov
pop
and
pushf
dec
lahf
or
inc
popa
pop
enter
dec
push
xchg
sbb
popa
or
les
sahf
stos
movs
mov
xchg
mov
add
(bad)
mov
pop
enter
sub
sbb
imul
frstor
mov
mov
out
mov
dec
push
shr
push
push
xchg
jmp
push
adc
mov
and
js
pop
push
stc
repz
loopne
push
dec
fcom
dec
xchg
sbb
cmp
je
mov
push
cwde
xor
test
mov
outs
jb
fild
fwait
and
stc
fwait
js
das
bound
ja
or
adc
mov
push
stos
cmp
and
mov
retf
stos
mov
call
adc
xchg
fldcw
mov
dec
adc
sub
lods
mov
mov
arpl
leave
and
mov
aas
jge
adc
mov
repz
cli
dec
iret
adc
test
fcom
add
mov
and
dec
dec
jo
push
xor
jge
inc
out
pop
dec
mov
pushf
push
jmp
fisubr
call
loop
(bad)
int3
iret
xchg
or
leave
and
or
sbb
out
loope
aad
ret
mov
push
add
idiv
add
push
rcl
daa
mov
and
das
cmp
sbb
and
jge
stc
ret
fistp
pop
scas
xor
scas
jmp
pop
mov
or
pusha
fdivr
mov
retf
out
push
xor
push
test
dec
test
das
shl
fild
pop
mov
add
pop
fdiv
in
and
les
sbb
add
add
call
adc
enter
adc
scas
add
mov
xor
not
jbe
ficom
mov
ror
inc
xchg
test
mov
xor
std
outs
fisubr
enter
iret
scas
adc
cmp
sbb
jno
mov
adc
cli
loope
cmp
repz
pop
bound
cmp
or
in
xor
retf
and
and
xlat
jecxz
imul
fcmovnu
dec
stos
out
push
rcl
out
mov
inc
cdq
aam
push
iret
pop
xor
or
sahf
fcom
fwait
lock
retf
cmp
xchg
pop
sbb
add
xor
xor
and
clts
fbld
stos
jae
shl
in
outs
dec
dec
and
dec
pop
mov
aaa
mov
ficom
mov
xchg
out
or
adc
xor
ret
aas
rep
inc
gs
fldcw
imul
popa
fmul
fld
and
pop
cdq
imul
xor
xchg
stos
xor
mov
lock
pop
js
out
dec
push
iret
and
sbb
and
or
inc
add
fcomi
xor
jecxz
mov
mov
ja
or
adc
xor
mov
inc
call
repz
pushf
mov
jl
lods
sub
arpl
out
jp
out
jg
jno
add
lahf
jo
or
cld
sbb
lods
in
cmps
out
mov
(bad)
jle
sbb
mov
retf
jbe
fcmovnu
push
cmp
and
lock
sahf
cmc
sbb
popf
idiv
test
pop
jg
dec
mov
aad
cmp
push
dec
movs
xor
enter
ret
dec
movs
xchg
lods
ins
arpl
mov
jno
lods
lods
adc
(bad)
dec
inc
mov
retf
jge
mov
add
mov
repz
daa
jmp
shl
mov
mov
sti
pop
sbb
movq
adc
dec
add
sub
(bad)
jbe
ds
mov
inc
mov
pop
xor
pop
movs
add
addr16
push
rol
repz
xchg
shl
(bad)
sbb
fld
scas
imul
mov
iret
pusha
cld
cmp
mov
jmp
rol
nop
push
pop
or
pop
ret
sbb
mov
jmp
cmp
pop
add
imul
jno
gs
jl
mov
xor
fist
dec
mov
(bad)
jb
jg
cmps
and
icebp
jbe
movs
lock
xchg
jae
mov
adc
cmp
fldcw
pop
ins
and
push
imul
jbe
scas
dec
repz
int3
xchg
pop
sbb
jne
cmc
mov
dec
adc
stos
pusha
or
cmp
dec
mov
adc
aad
ins
mov
add
test
pop
dec
inc
rcl
nop
nop
push
je
jae
imul
out
dec
ret
sub
scas
cwde
inc
mov
adc
int3
mov
add
hlt
sbb
fisubr
test
mov
imul
mov
dec
sbb
sub
ins
push
pop
and
xor
jb
mov
mov
xchg
cmp
adc
bnd
inc
inc
push
or
ins
mov
inc
mov
add
mov
shl
pop
cmps
sbb
cmp
pop
fiadd
push
push
fisttp
or
(bad)
scas
push
inc
ins
iret
pop
add
or
push
out
lock
pushf
ja
xchg
and
push
clc
xor
sub
jg
pop
dec
xchg
(bad)
and
or
cmp
fild
adc
mov
pop
out
add
test
cmp
arpl
jns
jb
(bad)
cmp
mov
icebp
pop
or
jno
jmp
retf
sbb
addr16
pushf
mov
call
fcom
in
push
mov
adc
add
pushf
icebp
push
mov
dec
ds
call
hlt
xchg
bound
jns
push
push
or
outs
adc
out
fcmovu
push
movs
sub
sbb
and
cmps
xchg
xor
js
add
push
mov
mov
fcmovnb
outs
mov
jbe
push
fwait
mov
ins
lods
sbb
add
jg
cli
sahf
(bad)
fwait
mov
mov
pop
push
pop
pop
out
sbb
mov
add
pop
popa
mov
sub
jns
lds
push
push
inc
mov
lea
out
mov
movs
inc
sahf
leave
sbb
mov
adc
fwait
add
ins
test
mov
shl
imul
jmp
jbe
stos
push
sub
repz
shl
xchg
adc
inc
lea
cmp
sub
xchg
out
stos
xor
push
call
adc
xchg
fsub
mov
fimul
lea
xor
mov
or
mov
(bad)
(bad)
push
pop
ins
xchg
xchg
out
test
cdq
jnp
sahf
jp
cmp
add
push
bound
mov
scas
sbb
popa
dec
(bad)
jecxz
aas
outs
aam
xor
pop
repnz
addr16
ins
push
mov
sbb
call
or
dec
push
je
jle
push
jl
xchg
sub
call
push
shr
shr
push
fucomp
dec
xor
fidivr
or
xchg
rcl
jne
out
and
lods
js
jb
dec
xor
adc
idiv
rcr
push
xor
cwde
out
call
sar
push
add
jae
test
ins
mov
ror
jmp
movs
clc
inc
pop
mov
ret
aad
mov
mov
mov
adc
sahf
cmps
shl
sub
or
xchg
aad
push
fmul
mov
hlt
(bad)
retf
es
cli
call
jb
cmp
inc
xor
aam
adc
xor
sbb
xchg
int
mov
and
xor
cmps
push
mov
cli
or
les
rol
xchg
jbe
or
mov
mov
and
aam
pop
div
push
and
adc
sbb
dec
in
push
ret
mov
(bad)
int
sbb
pop
pusha
mov
movs
fstp
inc
jmp
pop
push
clc
aaa
into
test
or
(bad)
jnp
or
xlat
adc
jno
push
in
lock
push
cld
rcl
mov
pop
lahf
in
xchg
int3
repz
dec
lods
int3
ror
or
pushf
push
in
mov
xchg
adc
shl
or
inc
sub
inc
call
mov
xor
out
call
cmps
clc
xchg
push
sbb
ds
push
inc
or
(bad)
mov
call
push
js
pop
jl
mov
pop
push
push
inc
rcr
popa
jbe
fs
cmp
(bad)
(bad)
cmp
bound
jl
cs
push
push
and
sub
ins
leave
stos
mov
cmp
iret
pop
xchg
mov
in
fucom
addr16
fdivr
lds
xlat
mov
sub
(bad)
and
cmps
push
outs
or
cmc
xor
lods
(bad)
adc
aas
pop
xor
clc
sub
jns
push
and
adc
mov
fist
int
outs
imul
jmp
push
xor
fsubr
idiv
cmp
lock
and
xor
jb
inc
daa
pusha
pop
adc
inc
adc
test
inc
test
cmp
cmp
adc
pop
xchg
mov
inc
jg
lock
adc
and
repz
popf
adc
lods
and
add
(bad)
sub
jmp
sub
int3
cmp
inc
jp
fsub
fsub
xchg
cmp
shr
sbb
mov
shr
mov
loop
sahf
gs
add
xor
pop
xchg
sbb
movs
pop
jo
inc
inc
or
jp
ret
xchg
scas
push
or
shl
dec
sbb
push
div
xchg
jmp
mov
cli
ror
xlat
dec
xor
(bad)
call
jns
fcmovnb
or
dec
mov
mul
into
aam
sbb
mov
add
movs
and
mov
out
jmp
f2xm1
jmp
aas
dec
rol
add
xchg
pushf
jle
inc
test
xor
inc
cmc
jmp
cmc
inc
lea
dec
add
iret
add
scas
push
push
xchg
popf
into
les
sbb
in
mov
fbld
sbb
xor
or
push
pop
or
add
stos
inc
pop
out
(bad)
je
and
outs
cmps
cs
std
cmps
call
call
repz
ret
stos
(bad)
(bad)
fwait
push
add
and
push
pop
pop
mov
xchg
outs
inc
sbb
retf
mov
cli
repnz
dec
pop
cmp
gs
inc
jmp
xor
xchg
ss
push
mov
xor
out
cld
shl
push
add
mov
(bad)
pop
nop
push
ror
inc
mov
push
push
sti
and
adc
sbb
cmp
les
or
loop
cmp
mov
mov
ins
fxch
sti
xchg
add
loope
aad
dec
add
inc
into
retf
dec
pop
pop
mov
jno
daa
(bad)
sar
arpl
cmp
xor
jp
neg
cmp
or
lods
out
fstp
(bad)
ror
sub
aas
dec
cmp
nop
call
arpl
xchg
jo
int
retf
in
dec
and
in
sub
imul
ds
and
imul
cwde
lds
js
inc
es
clc
xor
cli
push
push
sub
loop
jp
push
in
aam
in
(bad)
addr16
sub
pop
les
scas
jno
outs
retf
mov
xchg
mov
pushf
add
into
pusha
cs
push
fidivr
in
ja
bnd
call
sbb
fild
pop
mov
leave
jns
push
hlt
and
pop
retf
int
loop
jp
aaa
lock
(bad)
jge
inc
jmp
pop
sub
mov
ror
sub
mov
addr16
sub
mov
stos
std
imul
fisub
mov
stos
inc
lea
in
repnz
fscale
jnp
cld
fsubr
pop
call
jne
retf
mov
arpl
popf
out
loope
xor
mov
pop
daa
(bad)
or
add
(bad)
mov
inc
das
jecxz
push
sbb
(bad)
dec
mov
and
int3
scas
or
or
pop
push
fisub
xlat
dec
inc
mov
retf
xchg
jo
daa
inc
cmp
fwait
inc
outs
xchg
sbb
inc
das
iret
fadd
jmp
xchg
scas
cmp
xor
add
push
(bad)
cli
jmp
fstp
mov
loop
xchg
cld
mov
sub
push
sub
repz
push
call
das
add
push
sahf
fild
jns
xchg
push
mov
jle
cwde
add
lock
adc
mov
push
xchg
jmp
jbe
fidiv
mov
sub
push
sub
mov
xchg
outs
nop
push
lods
add
je
movs
and
push
mov
leave
je
push
mov
pop
jg
loopne
jno
aad
arpl
repnz
ja
jb
ret
jae
or
xchg
repnz
outs
or
or
imul
add
pcmpgtw
fucomi
loopne
(bad)
jl
or
cmp
push
adc
cwde
rcr
int3
cld
mov
in
cld
sub
xchg
xor
xor
sbb
icebp
pop
out
mov
push
rcr
and
lock
pop
jmp
mov
and
push
and
add
inc
xor
aad
loop
pop
push
pop
retf
adc
jae
and
stos
push
test
push
lea
add
(bad)
jle
xor
out
sub
repz
fistp
sub
xchg
out
pop
mul
jl
scas
push
inc
pusha
nop
mov
dec
mov
xor
hlt
mov
xor
push
mov
loope
dec
xchg
cmps
shl
push
inc
pop
test
add
mov
imul
aas
(bad)
fwait
in
pop
enter
out
adc
mov
jbe
rcr
jecxz
fnsave
or
pushf
call
out
inc
mov
xor
and
out
int
xchg
ficomp
dec
cmps
push
and
cmp
push
shl
add
sub
dec
sbb
and
mov
sub
icebp
in
cmp
js
add
mov
lock
mov
xchg
loopne
adc
pop
inc
adc
ficom
jo
sub
out
aad
xchg
lahf
pusha
jne
gs
fisub
(bad)
jp
ret
xchg
(bad)
clc
xchg
jne
fnstsw
mov
push
fild
lock
push
push
test
lock
inc
dec
in
push
mov
dec
jb
mov
xchg
mov
cmps
adc
jg
enter
ss
mov
mov
jl
mov
retf
sbb
not
push
sbb
mov
cmp
mov
mov
shl
dec
push
fs
push
lock
in
jecxz
pusha
xor
cmc
stos
lods
in
sbb
nop
pop
icebp
xadd
icebp
mov
shr
fs
outs
push
call
lods
xor
(bad)
lea
loopne
sub
(bad)
repz
ins
fcomp
xor
rcl
cli
movs
aam
mov
inc
mov
paddd
sub
mov
xor
test
lea
sub
dec
das
cmp
test
ror
add
into
push
push
test
dec
ret
and
xor
ret
ret
pop
inc
shl
ficomp
hlt
or
imul
sbb
push
push
cmp
adc
adc
ret
jns
xchg
fs
or
adc
mov
std
pop
out
enter
adc
enter
call
dec
mov
sbb
push
aaa
std
add
jecxz
mov
cmps
pop
shl
jmp
xchg
and
and
out
xor
dec
cli
jmp
mov
push
retf
jmp
and
jne
(bad)
call
dec
outs
sbb
sub
int3
inc
jmp
mov
bound
add
movs
cmp
div
inc
pushf
mov
jnp
push
fsincos
test
pop
mov
adc
shr
mov
adc
xor
fistp
outs
js
rcr
jne
fidivr
dec
mov
sbb
pop
rcr
cli
push
cs
call
dec
xor
sbb
ins
dec
mov
mov
dec
xchg
mov
jns
loopne
xor
cmps
cmp
pop
add
sub
push
jb
xor
fwait
push
push
ret
pop
push
push
mov
and
sub
pop
inc
test
rcr
(bad)
xor
ret
jae
mov
rcl
lea
xchg
sub
mov
(bad)
pusha
mov
(bad)
je
shl
addr16
fs
and
sqrtps
icebp
push
inc
or
xchg
cmp
ss
xchg
xchg
pop
jmp
loopne
ret
add
xchg
and
popf
cmp
cld
jae
push
mov
dec
(bad)
stos
mov
mov
pusha
cwde
push
mov
loopne
(bad)
mov
jno
imul
and
scas
jns
mov
push
jmp
inc
jge
cmps
cmp
mov
mov
sub
repnz
sub
dec
xchg
push
xchg
cld
inc
inc
and
push
jl
or
sub
lods
pusha
mov
add
shr
cmp
mov
mov
add
idiv
jl
mov
pop
mov
mov
int3
mov
lea
sub
dec
sub
jnp
cmps
cli
push
sar
ss
xor
inc
mov
mov
repz
sti
mov
scas
push
xor
sub
hlt
mov
add
test
cmps
push
push
fstp
shl
out
popf
xor
fmul
cmp
push
nop
mov
mov
iret
and
xchg
scas
dec
pop
or
test
xchg
or
sahf
lds
cmp
mov
sar
mov
cld
sbb
imul
jne
ja
sub
cmc
fild
ficomp
outs
(bad)
not
jbe
cmp
mov
outs
outs
cmp
es
fldenv
fild
inc
in
lea
popf
popa
test
ror
pop
mov
and
rcr
js
mov
fst
push
dec
jbe
icebp
jns
repz
pop
scas
into
sar
(bad)
(bad)
aam
fcom
adc
jle
xchg
cdq
cdq
sub
icebp
mov
jb
ret
xor
and
shl
fld
fdivp
stc
add
pop
and
outs
jg
ins
fs
push
leave
dec
mov
and
push
adc
int
bound
popf
mov
ss
les
sub
retf
pusha
pusha
dec
mov
dec
xchg
push
test
fwait
call
idiv
in
enter
xchg
or
add
aaa
add
arpl
cmp
pusha
(bad)
stc
mov
sbb
repnz
stos
in
cmp
icebp
push
stos
dec
in
inc
mov
inc
ror
mov
push
cmp
fisubr
imul
repz
cmc
aad
mov
cwde
cmp
adc
mov
push
nop
stc
xlat
fcomp
pusha
clc
xor
add
enter
ins
lahf
retf
daa
mov
in
lods
jb
and
push
or
jge
test
or
ja
adc
in
(bad)
aam
jne
movs
inc
sbb
inc
jno
fst
sbb
data16
xor
add
lods
jecxz
stc
jle
add
fwait
ror
and
in
push
aas
shl
pop
shr
adc
push
sbb
popa
int3
inc
inc
cwde
adc
inc
push
gs
icebp
or
(bad)
xor
(bad)
iret
mov
ret
fidiv
xor
sub
into
sbb
xor
imul
cdq
adc
cmp
sbb
or
inc
or
out
fild
shl
and
imul
jbe
pop
(bad)
pop
repnz
xchg
mov
sbb
ret
sub
(bad)
cld
or
sbb
test
and
mov
jnp
out
rol
(bad)
push
xor
push
int
cmps
and
xchg
xor
xor
jl
jae
mov
and
mov
and
cmp
call
(bad)
pop
in
or
fcmovne
mov
test
or
inc
inc
push
push
stos
fnsave
cmc
rcl
mov
(bad)
xchg
add
popa
pop
add
xchg
loop
xor
iret
iret
out
cmps
movs
(bad)
mov
data16
cmp
das
cdq
cmp
(bad)
leave
sbb
or
test
jmp
mov
mov
fstp
inc
mov
daa
xor
adc
fidivr
and
pop
add
(bad)
ror
jmp
out
pop
nop
cmp
push
cmp
nop
stos
icebp
mov
(bad)
les
out
xchg
ja
jp
aam
adc
je
xor
mov
xor
pushf
inc
mov
movs
lahf
sbb
push
and
add
clc
in
mov
dec
sub
mov
cmp
cmp
dec
mov
in
mov
add
js
push
ds
cs
es
movs
or
mov
jnp
in
shr
call
push
jo
repz
push
les
outs
and
jb
add
into
in
js
sub
jp
in
jae
call
std
adc
push
cmp
pop
pop
fisub
xchg
cmps
repnz
or
dec
jnp
cmp
pop
fwait
sub
loop
fdivr
cmps
scas
and
inc
mov
rcl
fisttp
sbb
mov
sar
ds
xchg
les
call
push
push
pop
sbb
sbb
(bad)
ins
cmp
adc
and
lds
or
sar
push
dec
and
sub
(bad)
sti
sti
jle
imul
adc
cmp
cmp
pop
out
mov
sub
rol
into
ret
rcl
es
ficom
pshufw
or
movs
fs
jg
cmp
jmp
sub
jle
in
sbb
sti
jmp
aad
gs
inc
pop
add
mov
mov
jmp
fisttp
fdivp
adc
popf
mov
lock
jns
cmc
add
mov
push
ret
and
cmp
push
jae
jb
nop
sub
xchg
cli
push
lods
cmp
push
popf
pop
xor
mov
pop
es
out
jno
repz
add
fstp
scas
aad
and
inc
or
test
sbb
outs
movs
add
sub
add
and
fbld
adc
aad
sahf
mov
repnz
xchg
mov
sbb
inc
pop
mov
gs
sub
push
add
addr16
dec
cwde
push
out
leave
fcmovnb
loopne
loopne
push
push
jb
inc
mov
mov
(bad)
test
shl
(bad)
(bad)
inc
or
and
pusha
xchg
mov
aad
setb
xchg
sbb
jge
in
inc
int
in
sub
mov
dec
imul
es
test
lock
(bad)
jge
xor
test
xchg
cmc
and
in
pop
xchg
out
repz
inc
xchg
xchg
stos
mov
(bad)
clc
imul
cmp
fst
call
push
or
rcl
out
push
sbb
loopne
aaa
cmp
xchg
scas
dec
push
jmp
into
fisubr
rol
sbb
jg
mov
or
iret
push
or
adc
push
cmps
jge
or
sbb
dec
imul
into
clc
add
adc
push
arpl
shl
out
dec
jg
or
popf
ror
adc
and
sub
arpl
inc
cld
das
repz
and
xor
addr16
push
rcl
cmp
push
and
jle
enter
retf
sbb
cdq
enter
pop
call
cmp
das
lods
and
(bad)
mov
or
add
repnz
mov
je
enter
mov
ja
push
add
stos
and
mov
cli
cmp
int3
enter
mov
inc
fwait
sahf
xchg
pop
ds
aaa
mov
(bad)
(bad)
push
pop
inc
pop
popf
mov
daa
(bad)
das
push
or
mov
or
clc
in
aaa
sbb
fiadd
outs
sbb
jns
rcl
pop
jmp
(bad)
cmc
pop
cmp
aaa
std
rol
push
stos
icebp
cmc
(bad)
jmp
in
je
les
arpl
cld
mov
mov
stos
cwde
fidiv
adc
out
mov
pop
sbb
sbb
jne
jne
adc
cmps
and
xor
push
cli
adc
lock
inc
jbe
dec
ds
mov
push
stos
sub
mov
adc
cmp
sbb
ds
(bad)
cld
(bad)
lods
cmp
fwait
and
or
mov
jl
sahf
sub
int
fs
pop
jno
mov
sbb
fst
add
mov
xor
jp
pop
xor
mov
outs
dec
cmp
popf
in
add
frstpm(287
imul
icebp
jge
data16
inc
and
test
(bad)
and
jle
xor
xchg
xor
lods
push
push
or
add
inc
add
cmps
xchg
cmp
push
sbb
pop
pop
mov
cmc
pop
and
cmp
in
sbb
mov
test
test
mov
or
inc
push
gs
fs
pop
leave
mov
xor
lahf
fcom
enter
fwait
stos
lea
sbb
into
mov
or
cli
or
lds
mov
pusha
sub
mov
repnz
xor
inc
dec
cmp
call
mov
and
push
iret
or
jbe
pop
and
hlt
adc
shl
jne
in
or
adc
jg
dec
das
sar
inc
dec
lea
add
lods
fisub
imul
cli
movs
push
cmp
xchg
pop
mov
adc
stos
jge
repz
lods
cwde
sub
mov
fstp
ret
xor
push
push
push
(bad)
std
das
cmp
int3
sub
pop
inc
test
or
pop
ss
iret
pop
and
xor
mov
mov
adc
xchg
fidiv
xchg
push
inc
lods
adc
gs
xchg
stc
jp
out
es
fidivr
push
dec
es
(bad)
fnstcw
adc
dec
cmp
jmp
push
cdq
xchg
push
dec
sub
aas
adc
dec
push
movs
unpckhps
cmp
mov
mov
loope
pushf
movs
movs
xchg
(bad)
not
outs
jl
xchg
push
pop
cmp
jnp
xlat
pop
retf
cmp
sbb
call
xor
shr
xchg
out
xor
ins
xchg
xor
jnp
pop
scas
fwait
cmp
add
jp
pop
mov
mov
sbb
dec
cmp
loope
push
fs
push
pop
std
push
fs
mov
sbb
scas
mov
bound
mov
cdq
adc
nop
sahf
xchg
xchg
(bad)
jmp
sti
pusha
add
add
pop
retf
fsub
or
sbb
iret
imul
sbb
fcmove
cdq
cmp
jl
sub
jp
popa
adc
addr16
mov
mov
sar
xor
mov
popa
sbb
movs
data16
mov
pmullw
mov
int
pop
test
jne
mul
jecxz
cdq
jecxz
not
aad
adc
pop
dec
jb
push
cwde
push
sub
test
push
jo
test
and
je
test
loope
dec
jnp
in
cmps
dec
mov
fimul
iret
mov
into
cmps
sti
push
ret
jbe
ss
pop
inc
push
test
inc
cmp
(bad)
outs
sbb
(bad)
stc
inc
mov
mov
adc
adc
std
loope
mov
icebp
sbb
jmp
sub
ss
fild
cli
inc
pop
data16
dec
pop
shl
pop
das
jmp
ins
push
imul
(bad)
fild
dec
into
(bad)
(bad)
mov
push
movs
cmp
add
jge
adc
cld
retf
in
rcr
lea
pop
sub
hlt
pop
mov
outs
xor
retf
jbe
in
retf
xor
lods
scas
xor
dec
repnz
jg
adc
arpl
loope
or
jmp
pop
add
adc
mov
push
push
xchg
xor
push
aas
pop
inc
js
lods
fnstcw
in
adc
fstp
fs
fsub
sbb
retf
sbb
call
and
gs
add
cld
jns
adc
or
std
add
add
pop
xor
inc
add
add
jecxz
add
xchg
add
nop
and
inc
retf
stc
loope
ret
jl
push
mov
xor
(bad)
in
icebp
jge
test
jp
cmp
mov
ins
mov
cdq
sub
arpl
mov
inc
mov
pusha
pushf
push
add
mov
movs
mov
push
jbe
mov
or
mov
(bad)
xor
loope
mov
xor
call
and
xchg
aaa
jbe
out
aam
jno
and
sbb
movs
test
fnstsw
pusha
sbb
sahf
in
cmp
aad
enter
in
jno
push
inc
iret
not
cld
jmp
lock
jns
cmp
jb
mov
push
movs
call
pusha
cmp
push
in
pop
nop
retf
jp
ins
mov
loop
mov
stos
mov
inc
enter
je
fs
inc
dec
cld
jo
inc
dec
shr
and
(bad)
ins
out
add
jmp
stos
fisubr
pop
in
jnp
in
mov
mov
push
push
mov
push
ret
clc
mov
mov
mov
rcr
cmc
ins
std
(bad)
repnz
cmps
mov
xor
and
mov
xchg
rol
adc
stc
fild
rcr
es
lods
mov
call
(bad)
jl
aad
pop
add
pushf
int
xlat
or
sti
test
pusha
je
mov
jmp
out
sbb
xor
lods
mov
dec
or
and
mul
dec
xchg
test
xor
in
mov
and
imul
mov
and
sub
pop
or
push
aas
test
leave
or
shl
movs
pop
arpl
push
xchg
fwait
mov
(bad)
in
pop
sbb
jmp
pop
cmp
pop
inc
adc
add
jno
add
imul
fmul
popa
retf
lods
xor
xor
mov
inc
dec
pop
mov
cmc
jge
mov
sbb
mov
rol
pop
in
(bad)
out
inc
cmps
cli
and
push
loope
(bad)
dec
pop
aaa
iret
adc
dec
sbb
xor
lds
xchg
mov
movs
jmp
push
xchg
mov
int
mov
jmp
and
cmp
movs
ror
sbb
sbb
mov
lea
ins
call
ss
test
adc
pop
dec
pusha
daa
retf
pop
inc
std
scas
push
inc
jne
dec
or
lds
cmp
pushf
pop
dec
lock
mov
in
pop
sub
(bad)
lods
jb
sub
cmp
xchg
add
outs
mov
dec
outs
cmp
dec
test
mov
out
inc
(bad)
pop
jno
test
clc
dec
mov
push
movs
rcl
cmps
mov
pop
add
mov
pop
dec
pop
cmc
and
cmp
cmps
bound
inc
cs
dec
ret
pusha
movs
ror
stc
mov
inc
lock
add
fisub
dec
(bad)
cmc
out
inc
rcl
push
push
rcl
push
mov
popf
pushf
shr
movs
dec
jle
xor
mov
pop
sar
leave
xor
fcmovu
mov
test
nop
xlat
jb
enter
push
sti
dec
ds
mov
jmp
dec
outs
adc
jmp
cli
aas
fwait
nop
arpl
xor
mov
mov
jmp
cli
cmp
or
pop
call
mov
mov
sub
lods
mov
sub
sar
les
pop
jmp
rcl
pop
push
mov
lds
pop
call
mov
fbld
or
inc
adc
xlat
imul
pop
out
and
lods
and
adc
sub
jb
add
xor
push
jle
inc
lods
and
int3
sub
fiadd
jmp
mov
jb
cmc
or
mov
lea
inc
pop
or
int
add
xor
add
rol
popf
or
jnp
repnz
push
mov
mov
call
inc
mov
pop
mov
fcom
mov
mov
sbb
mov
mov
fld
mov
addr16
cmp
fistp
sub
sub
pusha
pushf
rcr
out
pop
mov
imul
loop
pop
jns
adc
sbb
ror
push
jmp
sbb
sub
sub
push
jno
cwde
adc
add
into
sub
mov
mov
outs
jno
out
je
mov
sbb
outs
pop
jecxz
sbb
mov
int3
pop
ffreep
pop
mov
and
xchg
icebp
jg
fwait
add
push
and
ret
fcom
cwde
lods
popa
or
dec
mov
cld
xchg
cli
sub
inc
pop
mov
out
mov
ins
xchg
xchg
xchg
push
movs
pop
mov
push
nop
jge
and
mov
sbb
test
sub
jbe
mov
sar
imul
icebp
mov
rcr
push
xchg
mul
add
es
cmp
jno
jae
stc
gs
aaa
jo
rep
(bad)
jmp
pushf
mov
fwait
mov
pop
pop
or
dec
push
pushf
outs
mov
mov
mov
push
imul
dec
sub
lds
jmp
leave
or
cmps
movs
add
or
loope
pushf
scas
jmp
mov
int
out
jbe
std
sbb
xchg
stc
xchg
mov
pop
sbb
shl
mov
or
cli
pop
mov
push
push
pop
mov
rcr
push
or
cmp
gs
mov
cmp
mov
pop
test
or
rcl
mov
dec
and
mov
adc
inc
pop
add
and
in
pop
push
xlat
xchg
into
xor
inc
mov
jmp
xlat
add
ret
les
cld
or
or
sbb
test
mov
inc
cmp
test
inc
movs
out
(bad)
jnp
call
sbb
ins
and
adc
jecxz
cmps
push
jg
cmp
dec
pop
mov
(bad)
push
loop
inc
cmp
xchg
inc
sub
xchg
int
dec
int3
xchg
and
(bad)
mov
ins
xchg
popf
mov
fdiv
aaa
fst
stc
jmp
mov
cmp
ins
dec
arpl
add
pusha
repz
jp
aaa
mov
pushf
stos
cmp
xchg
push
push
cmp
(bad)
xchg
outs
add
ds
push
scas
pop
push
sbb
mov
clc
stos
in
xchg
or
rcr
sar
popf
out
and
fisub
sbb
add
ins
pop
jnp
aaa
(bad)
outs
pop
mov
clc
and
test
adc
push
jnp
ror
cld
add
xlat
mov
rol
or
imul
enter
cmp
fs
fsub
dec
imul
xor
cmp
xchg
sub
fs
popf
mov
jmp
xor
inc
test
dec
mov
inc
cmp
mov
mov
or
inc
cmp
cmp
mov
cs
jns
scas
mov
cmps
jp
cmps
sbb
jae
or
jle
fsubp
loop
ror
std
loop
jnp
dec
std
ins
push
in
(bad)
into
xchg
icebp
sub
adc
stos
loopne
cmp
inc
mov
imul
add
rcl
mov
pusha
popf
js
inc
pop
lods
or
or
out
shr
xor
(bad)
int3
cmp
mov
imul
std
aas
push
xor
es
mov
mov
data16
je
lods
sbb
mov
mov
push
loopne
or
adc
jns
inc
pop
xor
xchg
imul
mov
and
shr
stos
mul
xchg
push
call
jb
outs
gs
dec
sahf
sub
out
ins
push
sbb
mov
das
jbe
or
mov
(bad)
sbb
adc
jp
retf
popf
and
xlat
pop
jmp
ret
out
shl
rcr
sti
clc
mov
js
push
fiadd
mov
in
cmp
lods
and
dec
into
pusha
ud0
loope
sbb
fsub
aas
sub
(bad)
pop
loopne
cmps
and
jb
mov
cs
ss
icebp
call
mov
in
adc
out
out
cmp
dec
sub
clc
add
mov
mov
jmp
iret
in
inc
cmp
ins
pushf
mov
adc
and
enter
jnp
retf
jnp
dec
cdq
mov
stos
lods
push
mov
mov
mov
call
repz
push
repnz
neg
xchg
or
rcl
cs
push
adc
cdq
cdq
fs
ss
shr
push
or
call
or
lea
es
cmps
dec
cmp
sbb
fsubr
stos
inc
mov
call
in
clc
leave
pop
xchg
ret
and
out
fstp
inc
lods
jb
jmp
adc
mov
jge
fcmovb
cmp
jo
add
inc
cmp
mov
sahf
aaa
test
int3
cmp
push
pop
lea
and
jo
and
pushf
fild
retf
push
sub
add
cwde
ror
out
cmp
in
mov
and
jl
or
stos
inc
inc
jmp
fld
lahf
jae
inc
call
pop
sbb
xchg
jmp
fwait
lahf
es
xlat
and
test
hlt
retf
mov
push
stc
xchg
retf
sub
push
sub
fdivp
jnp
loope
jo
or
or
and
aad
mov
jb
sbb
push
rol
call
test
mov
popa
in
pop
or
sbb
leave
ins
jne
clc
into
xchg
pop
cdq
mov
xchg
loop
cli
data16
pop
adc
cmp
lock
sub
or
neg
lea
mov
mov
mov
mov
out
aas
loop
mov
adc
fimul
sbb
cdq
fild
sbb
lock
call
pop
imul
xor
out
and
mov
xor
xor
mov
pop
pusha
push
into
pushf
fwait
mov
or
out
and
pushf
mov
inc
test
push
push
mov
pop
mov
(bad)
adc
movs
daa
mov
xchg
push
repz
repnz
lods
fdivr
cmc
jge
and
sbb
es
mov
mov
sub
pop
jbe
pop
(bad)
cmc
lods
in
outs
mov
sti
int3
lea
pop
add
mov
pop
imul
out
cmp
inc
mov
push
and
pop
cmp
imul
mov
dec
retf
ror
mov
test
sub
mov
cwde
es
aas
xchg
and
fisub
fld
push
xchg
pop
pop
add
popf
test
jnp
add
sahf
dec
cwde
cmp
retf
iret
add
mov
add
or
shr
daa
dec
rcl
pop
jno
fsubp
add
jmp
xor
aam
add
sbb
jmp
adc
mov
dec
mov
cdq
jg
cmps
jo
mov
repz
inc
jp
xchg
mov
xor
push
scas
adc
adc
and
dec
(bad)
(bad)
or
or
pop
test
neg
movs
sbb
out
call
mov
jbe
jge
sbb
ficomp
(bad)
sub
lods
dec
sub
ins
mov
int3
pop
sbb
dec
inc
pop
add
retf
pop
inc
sbb
xchg
dec
xchg
or
mov
sbb
push
pop
enter
ds
(bad)
dec
jp
inc
fwait
shl
(bad)
xchg
lahf
clc
mov
mov
inc
pop
xchg
aad
or
push
call
cmp
es
push
mov
mov
arpl
and
and
mov
xor
ins
aas
pop
inc
int3
xlat
mov
shr
pop
adc
loopne
imul
or
mov
push
cmp
sub
dec
test
jecxz
test
or
retf
mov
cmp
sub
out
inc
push
(bad)
push
sub
add
sub
dec
sub
mov
push
mov
dec
(bad)
cld
repz
pop
cs
adc
pop
call
adc
cdq
loope
iret
jne
clc
ins
clc
pop
arpl
fadd
js
fcom
and
loop
adc
mov
fimul
mov
sub
mov
and
and
outs
pop
and
mov
pushf
js
dec
mov
pop
mov
jl
cwde
loope
hlt
jnp
inc
xchg
jmp
sahf
push
xchg
xlat
inc
and
aaa
mov
popf
or
cmc
push
cmc
xchg
mov
ror
and
jl
jge
sub
mov
ror
sbb
jns
xchg
daa
addr16
mov
mov
xchg
idiv
ss
imul
push
int
leave
jb
mov
rcl
mov
jnp
xchg
sub
lods
and
ins
push
jne
dec
cmp
(bad)
cmp
jp
icebp
in
pop
cwde
inc
ret
or
mov
adc
mov
jl
add
inc
and
ins
je
or
mov
daa
movs
adc
cli
jge
push
push
in
cmp
(bad)
adc
int
and
or
in
xchg
popa
jmp
outs
jnp
jnp
data16
push
mov
out
aaa
movs
sub
jl
xchg
add
in
test
and
pop
add
imul
cmp
test
cli
aam
xor
test
xor
cmp
jmp
jb
icebp
mov
mov
push
push
repnz
xor
ss
mov
jmp
jb
std
add
mov
sti
fadd
sahf
push
inc
inc
sahf
outs
dec
hlt
icebp
pop
ficom
inc
outs
mov
sub
shl
push
sub
cmp
push
mov
imul
lahf
cmp
dec
addr16
fwait
push
xor
xlat
fldz
retf
jne
jl
stos
test
scas
mov
push
(bad)
push
xchg
cmp
mov
and
sub
push
xchg
jae
iret
jl
sbb
sub
xchg
test
xchg
add
push
fcmovnb
int3
or
pop
pop
xor
xor
lods
cmps
sbb
in
aad
dec
(bad)
adc
(bad)
mov
aaa
outs
mov
sub
mov
mov
jmp
es
pop
je
mov
hlt
daa
rol
mov
xchg
inc
dec
inc
pop
jmp
not
mov
dec
push
and
hlt
imul
mov
outs
jno
or
xor
arpl
bound
mov
ins
imul
cvttps2pi
sbb
add
dec
xchg
rol
push
or
in
dec
mov
movs
sbb
add
fbstp
popa
jns
add
mov
mov
inc
aam
mov
fwait
js
xor
jbe
cli
adc
cmp
int
call
inc
pop
mov
push
pop
ficom
mov
xor
(bad)
cmps
cmp
in
jbe
data16
mov
cld
add
les
mov
fs
fimul
xchg
jns
dec
jp
mov
jle
mov
and
xchg
push
mov
jp
jne
arpl
popa
mov
hlt
loop
loop
into
cmp
std
arpl
cwde
daa
push
sahf
sbb
dec
aad
nop
ret
mov
cmp
mov
out
mov
loopne
iret
(bad)
mov
push
or
adc
sub
ja
bound
push
leave
aas
adc
fwait
std
jmp
or
sbb
cmp
iret
pop
xchg
es
mov
lods
imul
lods
mov
and
ds
rol
mov
inc
dec
fadd
js
fiadd
lods
mov
cmp
cmc
xlat
movs
leave
and
xor
xlat
loop
inc
xchg
push
sub
cmc
pop
outs
mov
inc
and
jp
cld
ss
xor
(bad)
jae
shr
cli
fbld
pop
(bad)
adc
mov
jns
or
data16
icebp
mov
ret
retf
test
or
loopne
outs
xor
mov
pop
daa
mov
inc
inc
fneni(8087
xchg
pop
push
xchg
push
pop
push
cmp
lahf
mov
aaa
mov
dec
sahf
mov
call
retf
loope
and
mov
dec
xchg
cmp
cmc
mov
add
jle
iret
mov
sbb
jno
xchg
adc
nop
int3
add
cmc
lock
fldenv
or
cmp
adc
pop
inc
in
enter
into
mov
adc
adc
sbb
lea
push
into
je
enter
sbb
data16
sub
in
sbb
enter
aaa
add
add
push
add
lods
cwde
cmp
mov
mov
stos
je
out
sub
add
cld
lahf
aam
(bad)
xchg
pop
popa
ret
stos
stos
mov
sbb
ins
loop
mov
add
call
and
mov
popa
pusha
add
jne
test
inc
sub
and
mov
push
fdivr
inc
add
cmp
sub
fdivr
pop
imul
mov
popf
sbb
lock
push
pop
jmp
push
sar
xchg
mov
adc
push
pop
fidivr
mov
ja
dec
loope
pop
fcomp
sbb
xchg
add
sbb
cld
loop
mov
ret
repz
sbb
mov
movs
or
mov
jns
and
xchg
imul
enter
xor
mov
and
stos
ret
jbe
cmp
lds
sub
push
push
jno
push
jno
mov
adc
cmp
push
sahf
pop
mov
push
sub
dec
mov
rol
hlt
dec
movs
xchg
sub
cmp
push
in
sbb
pop
(bad)
ror
(bad)
leave
adc
ror
inc
cmps
mov
repnz
push
mov
push
xchg
or
pop
cdq
jge
mov
pop
cmp
xchg
adc
movs
idiv
shl
and
les
mov
bt
mov
stos
or
int
sub
jo
pop
jbe
outs
fs
pop
cmps
cmp
ins
(bad)
leave
mov
mov
jg
lahf
dec
jno
xchg
mov
push
movs
mov
add
mov
stos
push
or
xor
out
mov
pop
stc
pop
movs
mov
std
mov
xor
xchg
rcl
cmp
or
jo
sahf
(bad)
inc
aaa
test
rcl
out
pop
movs
xchg
(bad)
adc
cdq
outs
cs
mov
shl
int3
mov
mov
ins
lock
push
jg
pushf
xor
jae
movs
and
vsqrtsd
cs
inc
mov
das
adc
mov
imul
xchg
fmul
rcr
lock
test
dec
in
xor
lods
add
xchg
lods
call
imul
jecxz
lods
dec
adc
imul
sub
dec
dec
cdq
xchg
fwait
jmp
mov
add
into
ins
inc
dec
call
fdiv
stc
dec
jnp
(bad)
pop
(bad)
mov
pop
sub
scas
mov
jmp
icebp
sbb
dec
(bad)
xchg
or
jo
iret
int
clc
lock
pop
or
dec
xor
and
xchg
inc
jecxz
in
dec
jmp
mov
jmp
scas
ins
cmps
icebp
mov
scas
dec
mov
and
cmc
enter
xchg
mov
cmc
je
sbb
cld
loop
es
jnp
cli
in
(bad)
icebp
mov
out
ja
or
ins
rcl
pop
gs
push
mov
pop
mov
dec
xchg
cmp
(bad)
iret
outs
add
xor
cmp
sbb
pop
or
sub
jb
or
aad
aad
jg
push
addr16
jmp
xor
out
pop
dec
bnd
ins
fnsave
stc
mov
xchg
into
pop
mov
aaa
mov
out
movs
fwait
movs
or
js
cdq
jo
mov
ins
push
fwait
popa
sub
ja
test
pop
out
outs
imul
(bad)
cld
pop
daa
test
in
adc
mov
ror
inc
outs
call
cmp
loope
jecxz
cmc
mov
cdq
inc
sub
sbb
xor
repz
lods
sbb
shl
and
icebp
enter
adc
jnp
mov
test
fcomip
push
ffree
je
mov
jb
jg
adc
sbb
and
or
loop
je
outs
push
notrack
mov
jl
sbb
outs
mov
call
dec
xchg
mov
ret
jge
pop
push
inc
ret
mov
cmp
enter
jge
jne
jne
fwait
popf
xchg
loop
jl
xor
bound
hlt
pusha
cmps
je
and
sahf
and
xchg
or
push
out
rcr
jbe
test
push
leave
push
in
(bad)
out
pop
je
adc
dec
les
jnp
mov
sbb
out
sbb
jbe
adc
hlt
dec
popf
dec
test
rcl
and
pop
mov
mov
(bad)
(bad)
scas
jnp
fldcw
aaa
mov
pop
nop
sub
adc
jmp
outs
(bad)
adc
dec
push
cmps
test
imul
mov
das
push
sar
jg
mov
mov
xor
daa
pop
lods
js
jle
or
or
pop
add
mov
in
out
bound
nop
adc
or
jo
das
adc
cmps
push
addr16
cs
aas
rcr
mov
jbe
or
int3
fcomi
in
adc
arpl
(bad)
push
mov
mov
cmps
fisttp
out
scas
xchg
stc
lods
cmp
sub
das
or
sar
aaa
jmp
xor
shl
push
xchg
gs
adc
out
ss
cmp
es
or
test
dec
xor
mov
mov
cmp
xor
cmp
xor
(bad)
movs
cmp
push
aas
xor
xlat
push
xchg
xchg
int
jo
mov
je
imul
js
adc
aas
ins
sbb
test
gs
sbb
stos
push
repz
dec
mov
dec
popa
retf
movs
adc
or
inc
icebp
je
add
mov
pop
push
ficom
push
sbb
and
clc
js
mov
xchg
cmp
je
push
jmp
retf
or
or
mov
xor
(bad)
int
jle
add
sahf
loope
fadd
mov
adc
cli
out
in
add
out
or
je
scas
test
(bad)
and
sbb
sbb
mov
pop
cmp
jecxz
aaa
pop
or
push
pushf
in
in
popa
pusha
mov
arpl
pop
loopne
cmp
push
push
pminub
xor
arpl
and
(bad)
js
xchg
(bad)
fdivr
stos
sub
sub
jmp
push
lock
adc
sbb
subps
enter
push
mov
jno
mov
lahf
dec
mov
push
dec
(bad)
dec
inc
xlat
or
and
mov
mov
cmp
jecxz
push
and
aad
inc
jnp
push
pop
stos
and
fwait
mov
cmp
xchg
(bad)
je
je
dec
popf
ret
xor
sub
pop
mov
pop
sub
jns
pop
or
call
push
and
dec
dec
and
imul
push
mov
repz
or
or
push
(bad)
hlt
xchg
jecxz
jle
cli
(bad)
xchg
add
xchg
sub
jg
adc
das
mov
mov
mov
xchg
enter
fwait
sbb
das
mov
(bad)
repz
push
arpl
and
and
mov
push
out
or
inc
jb
add
cwde
ja
dec
xlat
or
xchg
shr
test
jae
jmp
pop
push
inc
push
jl
sub
jmp
sub
pop
xchg
popa
lahf
cmp
jecxz
fcom
loopne
call
pop
sub
adc
stos
(bad)
test
xchg
inc
jecxz
aad
jge
adc
adc
add
loopne
and
mov
jne
jg
jmp
jbe
mov
call
xchg
push
or
test
fldcw
and
fdiv
add
push
bound
stc
cs
les
sbb
inc
hlt
into
cmc
jno
repz
pop
mov
mov
mov
push
inc
in
stos
out
mov
mov
not
test
cwde
or
mov
ds
loope
fdivr
sbb
pop
cdq
xor
and
iret
adc
dec
jmp
ss
cmp
into
push
sbb
movs
aad
pop
ins
xor
adc
loop
js
inc
push
int
loope
push
or
fwait
add
mov
ins
xchg
not
fadd
pop
mov
dec
jmp
xchg
call
cmp
jno
dec
sub
pop
pusha
leave
cli
(bad)
mov
mov
add
call
inc
ret
into
xchg
add
cmp
sbb
dec
xor
xchg
sbb
stos
pop
lods
cli
hlt
scas
push
test
dec
xor
stos
dec
loop
mov
rcr
mov
fnsave
xchg
mov
mov
push
dec
jno
sbb
cmp
pop
das
hlt
xor
mov
push
mov
fst
out
mov
cld
or
cmp
out
iret
loop
mov
adc
jl
add
movs
sbb
ret
dec
sbb
sbb
or
jmp
mov
dec
push
pop
in
push
ins
test
retf
pop
sub
adc
push
in
dec
adc
xchg
pop
cs
push
(bad)
ins
shr
cli
daa
rol
cmp
outs
mov
test
in
xchg
fldenv
mov
add
dec
stos
xchg
and
test
(bad)
push
fsub
pop
jnp
aad
xchg
shr
stos
not
out
lock
pop
mov
shl
jbe
cmp
rol
jns
add
jecxz
push
mov
mov
out
imul
mov
sbb
mov
push
lea
ins
push
ins
and
cli
int
pop
xchg
dec
(bad)
mov
mov
jmp
pop
repnz
xchg
int3
movs
idiv
retf
xchg
(bad)
clc
mov
sub
sub
ss
and
ins
mov
or
adc
push
imul
pcmpeqw
xchg
out
shl
push
or
and
sar
fnstenv
fisub
hlt
push
jge
xchg
fstp
jae
lds
fiadd
jp
ss
int3
mov
les
dec
ins
out
and
or
cmp
xor
xabort
jo
fdiv
dec
fs
fsubr
arpl
inc
adc
in
jns
gs
aas
push
mov
add
push
imul
xchg
dec
xor
fistp
cmp
jle
inc
ret
iret
push
and
mov
jge
fdivr
and
leave
nop
(bad)
(bad)
imul
ret
dec
mov
cmps
test
stos
movs
xlat
mov
retf
pop
or
mov
std
mov
out
idiv
xor
push
repnz
mov
addr16
loop
test
xor
mov
icebp
mov
add
dec
outs
mov
dec
inc
xchg
add
call
arpl
sub
and
push
fiadd
sbb
(bad)
jge
push
and
pop
test
cmp
xchg
out
sbb
ja
xor
push
or
or
xchg
or
les
dec
stc
in
int3
int
daa
sahf
mov
jle
outs
jb
imul
mov
and
(bad)
fnstsw
call
jo
jle
jmp
lock
push
enter
jns
and
lahf
es
xchg
inc
test
aas
popa
pop
es
jge
pop
lods
jne
push
mov
aam
mov
test
movs
cmps
push
push
mov
jmp
pusha
outs
ins
popa
lea
cdq
xchg
in
push
pop
sbb
sbb
clc
daa
or
pop
xchg
nop
mov
fwait
and
sbb
jge
fdecstp
and
out
mov
ins
fcom
int3
popf
xlat
jbe
dec
test
mov
rcl
ss
jge
fst
mov
adc
iret
sbb
pop
outs
push
loopne
call
repnz
sbb
ficomp
outs
inc
cmps
(bad)
jmp
iret
push
jmp
mov
into
mov
jmp
outs
aam
hlt
je
jg
hlt
and
jne
in
sub
icebp
mov
repnz
mov
pop
lahf
(bad)
js
ret
adc
cs
jnp
test
mov
icebp
clc
pop
js
cmp
loopne
push
mov
jecxz
mov
shl
mov
cld
aas
push
jmp
nop
inc
mov
jg
popf
mov
inc
cmp
add
aaa
dec
fiadd
inc
ins
in
lahf
cs
mov
add
jl
mov
jecxz
dec
cmp
repnz
mov
rcr
or
stc
xchg
cmp
mov
dec
mov
xchg
out
repnz
dec
movs
mov
jne
notrack
mov
movs
and
adc
or
pop
xor
out
pop
xor
scas
retf
jbe
cwde
inc
xchg
mov
mov
lahf
ret
sbb
pop
xor
test
and
jmp
stos
cmp
movs
sub
fnsave
dec
dec
imul
imul
jmp
sbb
mov
std
mov
and
dec
inc
xor
jg
out
or
cli
dec
mov
pop
push
jle
jecxz
mov
(bad)
push
push
fbstp
mov
fsub
int3
mov
mov
mov
ret
rcr
aad
jno
pop
sbb
mov
sbb
popf
sub
push
les
hlt
mov
aas
push
adc
mov
jmp
inc
mov
imul
and
and
sub
and
leave
add
mov
adc
xchg
xor
inc
movhps
adc
hlt
xchg
adc
jmp
fs
test
int3
sub
adc
fstp
out
add
mov
and
sbb
adc
(bad)
fs
jae
mov
xchg
jmp
lods
adc
xchg
ds
sbb
mov
in
adc
sbb
icebp
pop
xor
dec
sbb
cmc
fnstcw
inc
and
ss
sub
jg
push
shl
jnp
call
xchg
jne
fisubr
jns
addr16
sbb
inc
popf
sahf
add
lds
pop
push
je
xchg
push
push
push
add
pushf
mov
fxam
inc
sbb
fild
fsubr
push
sub
jbe
jmp
push
xchg
int3
popf
(bad)
push
loope
iret
arpl
sub
jge
paddsw
xor
push
js
and
pushf
dec
cli
mov
shl
mov
lods
icebp
push
dec
nop
call
pop
cmps
or
fs
push
xchg
ret
dec
push
scas
ins
(bad)
xor
rcr
cdq
scas
(bad)
jge
cmp
xlat
ss
gs
mov
sar
inc
dec
fidiv
adc
jecxz
enter
dec
loopne
sti
mov
(bad)
scas
sub
repnz
inc
fst
test
adc
jge
sbb
or
fild
sub
ins
jno
mov
sbb
mov
sub
jb
pop
mov
mov
shl
push
xchg
scas
cmps
int3
(bad)
mov
pushf
loop
pop
push
pop
jae
push
xchg
jb
test
cmovl
adc
sbb
(bad)
cmps
jo
ss
jecxz
xor
xchg
cdq
mov
ins
push
out
(bad)
mov
mov
jecxz
mov
pop
out
cmp
hlt
sar
cld
add
retf
xchg
cwde
bound
sbb
data16
pop
jnp
popa
mov
and
int
sbb
rcr
add
daa
adc
(bad)
cs
add
inc
fldcw
push
cmps
xor
js
mov
xchg
jne
sbb
fcmovnu
mov
push
mov
loop
mov
aas
fidiv
adc
mov
cs
or
test
cmp
jae
sahf
jb
leave
jne
jae
(bad)
repz
push
adc
push
add
cmps
js
ret
add
adc
jl
xlat
ss
xchg
movs
jnp
dec
test
mov
fucomp
shl
loope
inc
out
sbb
cmp
lahf
cmp
jecxz
pusha
call
ss
mov
jo
push
enter
or
aas
push
(bad)
(bad)
xor
add
sbb
mov
fs
jne
and
out
test
pop
pop
in
adc
cld
je
add
sbb
jmp
std
adc
push
or
jg
shl
fcomp
adc
xchg
daa
xor
retf
xor
inc
sub
mov
arpl
add
mov
cmp
xor
popa
fwait
sbb
into
fisub
gs
js
and
and
xchg
xor
jne
adc
push
in
fdiv
loopne
repz
jo
pop
jnp
cmps
jnp
xchg
push
adc
leave
cmp
addr16
xchg
dec
xchg
adc
adc
shl
lock
daa
leave
mov
fwait
das
push
pop
sub
xor
ret
bound
fwait
cli
loope
arpl
sbb
or
retf
pop
retf
xchg
adc
mov
mov
mov
mov
daa
fidiv
xor
sbb
rcr
and
in
scas
popa
pop
jg
cmps
dec
out
jge
stos
adc
into
jno
xchg
jbe
jecxz
xor
mov
ins
std
sbb
jae
mov
push
ds
cwde
out
dec
stos
(bad)
movs
in
add
pop
sbb
(bad)
movs
xor
and
daa
imul
jns
xchg
fdivr
pushf
gs
pop
movs
retf
inc
xor
sbb
cmc
test
sub
pop
test
and
or
sbb
pop
cmp
(bad)
xor
push
loope
mov
add
xchg
push
int
xchg
bound
cmp
mov
out
inc
cmp
cmps
push
jb
in
add
adc
mov
js
adc
or
adc
mov
pop
fisttp
fistp
xor
pop
xor
(bad)
cld
xchg
es
add
and
mov
mov
inc
int
pop
popa
test
dec
js
push
mov
shl
push
shl
out
das
adc
add
mov
sub
mov
mov
cmp
div
fsubr
cmp
dec
outs
jge
cmp
mov
mov
or
iret
dec
ja
jle
or
xchg
std
arpl
shl
mov
sbb
mov
hlt
mov
shl
aaa
push
push
sub
fistp
cmp
jecxz
fadd
pop
mul
ins
mov
test
or
aad
sbb
xchg
aad
jl
aas
hlt
xor
call
popa
jnp
test
and
or
mov
cmp
popa
mov
jle
mov
and
out
add
mov
shr
pop
adc
mov
stos
add
sub
sub
xor
inc
xchg
xchg
jb
sub
jl
cld
rol
test
and
and
jbe
out
fldcw
mov
or
pop
in
dec
arpl
pushf
jo
stc
add
mov
fs
mov
inc
jl
jo
test
fsub
and
imul
xchg
jo
je
in
jmp
idiv
imul
cs
and
sub
call
sub
mov
xor
push
out
cwde
fstp
mov
aad
xor
out
inc
out
mov
aas
xchg
outs
jbe
jno
shl
popf
repz
sbb
mov
push
or
shr
fcmovu
int3
jge
repnz
les
dec
mov
pop
fscale
cmc
in
sti
jmp
mov
fadd
imul
pusha
sbb
repz
clc
and
setno
(bad)
jp
sub
jns
shr
test
add
outs
dec
ret
and
pop
mov
xor
jb
ja
ss
stos
cmps
iret
dec
push
addr16
(bad)
cmp
cmps
cmp
xor
xchg
cdq
bswap
test
addr16
sub
push
pop
adc
imul
shl
xchg
pop
nop
push
inc
lock
mov
sbb
mov
retf
ret
jnp
rcl
adc
test
inc
inc
sbb
inc
jecxz
mov
sub
dec
dec
mov
push
fst
ja
mov
mov
stos
arpl
xor
out
mov
inc
push
fld
inc
(bad)
and
fst
xchg
enter
fisttp
xor
ror
sbb
arpl
sbb
js
mov
mov
js
in
pop
icebp
inc
repnz
in
loopne
ror
cli
nop
push
or
xchg
arpl
inc
test
aad
sub
sar
jp
add
jle
pop
jl
setge
pop
ror
test
cdq
xchg
imul
std
sbb
mov
cmp
fwait
shl
jno
in
adc
mov
xor
dec
push
stos
data16
leave
dec
ds
jne
jge
sbb
pop
sub
adc
cmp
rol
mov
repz
pop
arpl
hlt
pop
ror
ret
mov
jg
pop
mov
addr16
ror
dec
mov
cmps
pusha
jmp
jmp
aad
jmp
xlat
sbb
push
sti
push
outs
ins
cdq
pop
mov
inc
cli
fldlg2
idiv
adc
ret
psubb
dec
jb
int3
retf
mov
in
pop
sub
mov
pop
addr16
fadd
fwait
jbe
sbb
sub
mov
jae
and
inc
push
push
xchg
xor
xchg
cmp
cmp
daa
ds
adc
dec
adc
push
repz
rcl
jl
push
sub
jecxz
push
push
into
dec
xor
(bad)
fsub
add
out
out
sti
jmp
xchg
cdq
pop
xor
stc
fisub
mov
aas
call
and
sbb
pop
pop
loopne
xor
ds
inc
call
(bad)
fiadd
lock
sbb
or
pop
sahf
xor
jo
xchg
inc
cmc
cmp
(bad)
retf
mov
or
(bad)
adc
or
in
std
and
dec
push
cmps
repz
cmps
sbb
(bad)
cmp
mov
fsubr
into
aad
or
sbb
test
std
xor
inc
in
ret
mov
and
adc
sub
int3
xor
and
mov
scas
and
pop
push
mov
dec
test
dec
dec
fldenv
mov
mov
test
jle
pop
mov
cmps
pop
pop
sahf
jg
adc
push
sar
cmp
inc
fistp
cmp
sub
mov
int3
dec
or
call
push
data16
push
sub
mov
cmc
sbb
aad
ror
xchg
stos
sbb
mov
leave
dec
mov
repz
test
mov
sbb
outs
pop
sbb
fwait
fs
sbb
push
xor
add
(bad)
and
lods
mov
into
loope
sbb
cmp
imul
mov
inc
xchg
gs
fdiv
in
push
adc
cmp
fs
jmp
sbb
addr16
out
out
clc
pop
xchg
jns
mov
nop
or
outs
cld
jb
add
mov
mov
fptan
adc
cli
sbb
arpl
cld
xchg
add
xchg
lods
jb
mov
cmp
xchg
stos
movs
adc
dec
mov
dec
cmp
pop
test
ds
inc
stos
sbb
inc
adc
sbb
jo
xor
ror
imul
aad
(bad)
xchg
dec
mov
scas
js
xor
dec
in
pop
mov
mov
lea
dec
xchg
mov
lods
mov
mov
bound
mov
xchg
scas
jo
push
ret
add
stos
dec
or
jmp
pop
stos
std
dec
ja
mov
push
xor
lods
pop
stc
and
hlt
lods
inc
mov
pop
addr16
fld
call
mov
jnp
cmp
iret
fild
test
cmp
pushaw
inc
ss
dec
sub
outs
push
cmp
sbb
cli
shl
cdq
xchg
cli
pop
mov
mov
outs
mov
je
mov
in
push
xchg
mov
xchg
jp
or
movs
push
daa
pop
jle
(bad)
pop
xor
aas
jbe
aaa
xor
pop
sbb
sbb
cld
sbb
pop
hlt
outs
ret
pusha
dec
adc
jne
mov
ret
adc
add
xchg
clc
jb
int3
jge
cdq
dec
addr16
and
icebp
xchg
dec
popf
mov
pusha
mov
cdq
push
dec
xor
or
out
scas
lods
in
pop
and
fdivrp
inc
mov
push
pusha
pop
mov
pusha
add
stos
mov
mov
push
data16
mov
ds
daa
jg
jge
jl
xor
pop
mov
push
lods
ficomp
stos
loop
jae
adc
test
or
and
shr
les
push
sub
imul
pop
shl
push
jmp
aam
dec
sbb
lods
mov
lds
push
pop
mov
cmp
mov
sub
test
lods
push
test
mov
ja
jge
xor
xor
push
add
cwde
test
cmc
stos
dec
and
cmp
test
es
xor
adc
xchg
shr
lahf
cmc
jmp
mov
test
pop
sub
(bad)
xor
jne
cwde
xchg
jge
(bad)
sahf
lods
ja
mov
rcl
fst
mov
daa
mov
je
dec
repnz
ins
jo
out
inc
mov
push
stos
xchg
mov
leave
lea
arpl
inc
test
or
inc
mov
mov
jmp
inc
jg
lods
jmp
les
pop
add
(bad)
push
and
data16
jo
inc
(bad)
cmc
pop
jbe
and
ficomp
sbb
xor
pop
mov
mov
je
and
cmp
sub
test
mov
fist
aad
scas
mov
sti
lock
mov
xor
pusha
je
bound
mov
add
xchg
push
xchg
pushf
jo
cmps
ja
push
stos
daa
xor
mov
aas
lods
xor
jecxz
cmps
cmp
fcmovnb
nop
lock
leave
mov
or
scas
jp
cli
popa
inc
mov
pop
pop
test
fidivr
push
push
or
out
int
rcl
imul
dec
or
xor
inc
jg
icebp
les
pop
push
xor
and
les
cs
mov
fstp
add
jp
or
fld
(bad)
bnd
dec
test
mov
jl
xor
push
push
jns
rcl
mov
dec
sbb
aas
or
jecxz
adc
sub
add
or
cmp
das
neg
sbb
push
mov
or
push
and
inc
cmp
movs
cmp
pop
test
movs
fwait
mov
xor
adc
gs
pop
jp
fs
cwde
jno
jp
push
cld
int3
stos
sbb
arpl
or
cmc
pop
jae
xor
sub
mov
pusha
aaa
push
cmp
adc
push
out
fscale
xor
pop
std
cdq
push
fimul
retf
cwde
rol
or
cwde
popa
call
cmp
pop
sbb
test
dec
test
imul
aas
repz
adc
or
jnp
pop
fisubr
sub
cmp
mov
fwait
dec
push
ds
jle
rol
daa
and
test
jno
das
iret
xor
dec
pop
adc
sbb
mov
fsub
ret
push
add
nop
jl
lea
fisub
in
xor
sub
cwde
pop
cwde
push
fcom
out
mov
imul
stos
push
adc
outs
push
(bad)
xor
mov
jle
mov
xor
dec
pushf
sbb
mov
xor
push
sub
cmps
cld
dec
loop
mov
imul
jae
inc
les
dec
nop
xlat
xchg
jnp
aaa
test
sti
xchg
push
rcl
(bad)
(bad)
adc
mov
outs
mov
jmp
movs
daa
test
add
jns
mov
pop
jl
ret
popf
retf
ror
movs
cmp
add
imul
cdq
or
ret
pop
daa
add
mov
loop
jb
sar
dec
test
adc
push
xor
sbb
pop
sub
xor
shl
mov
data16
mov
xchg
pusha
push
lods
jmp
jmp
je
aas
lds
sar
int3
std
jge
sub
pop
cmp
bnd
xor
mov
add
pop
xchg
sub
inc
jo
jb
cmp
xchg
dec
dec
inc
xchg
cmps
aaa
pop
xchg
inc
xchg
cs
cmp
sub
shr
jno
cmps
test
fcom
xor
mov
xlat
leave
mov
cmps
movs
xchg
or
ja
xor
in
outs
fistp
stos
dec
jle
mov
adc
xor
stc
pushf
(bad)
push
out
jmp
or
jns
cmp
out
arpl
dec
wbinvd
cmp
add
mov
inc
movs
daa
int
sbb
adc
mov
nop
aam
aam
adc
mov
dec
repnz
jecxz
push
mov
cli
xchg
icebp
adc
cmp
clc
xchg
dec
pusha
xor
xor
sbb
xor
xchg
pop
mov
cmp
sub
lods
mov
inc
pop
jnp
add
cmc
pop
push
jl
push
lods
int3
mov
sub
ja
aad
call
jmp
jmp
add
cmp
cmp
lock
push
rcl
loopne
aad
jb
lea
clc
pop
cmp
hlt
fstp
retf
jecxz
xor
pusha
int
pop
sti
push
mov
and
fmul
retf
jnp
sahf
lock
sbb
cmps
in
xchg
push
mov
jns
jg
sbb
pop
cmp
sub
pop
dec
pop
cli
aad
cli
and
or
xor
pusha
pop
(bad)
rcr
mov
sbb
sbb
jmp
(bad)
out
shl
inc
mov
cmp
fdivr
jno
lods
pop
cwde
jne
or
je
addr16
mov
dec
jle
mov
mov
enter
out
pushf
jp
popf
mov
inc
lods
imul
xlat
fist
std
inc
inc
pop
dec
jle
xor
(bad)
sub
pop
pushf
arpl
sbb
push
mov
aaa
sti
mov
push
xor
add
ins
lea
pop
xchg
out
jnp
mov
xor
xor
cdq
bound
fiadd
pop
out
add
call
aam
fdivr
add
je
stos
adc
cmp
or
pop
push
lods
jl
or
dec
xor
xchg
cwde
and
(bad)
cwde
mov
sub
add
(bad)
push
int3
(bad)
cmps
and
pop
imul
repz
xor
add
cmp
jle
sub
cmps
into
xchg
and
mov
add
xchg
loop
pop
inc
pop
dec
retf
pop
xchg
xlat
js
or
and
mov
adc
mov
xchg
out
movs
test
and
inc
jae
sub
(bad)
xor
fiadd
sub
sub
xor
in
in
or
cmp
inc
loopne
mov
out
les
mov
xchg
and
mov
xchg
fdivr
xor
mov
neg
pusha
or
ins
pop
inc
jge
imul
loop
mov
lock
stos
cdq
inc
or
fisubr
retf
add
ja
xlat
je
in
leave
jb
push
mov
loop
pop
sahf
xchg
ret
movs
mov
xor
stos
stc
test
adc
call
jo
xchg
lds
add
xor
inc
clc
dec
add
test
mov
jo
xchg
dec
out
je
pop
pop
jg
test
adc
ror
inc
les
fcom
or
sub
add
jl
add
and
movs
mov
lds
shl
clc
mov
push
push
cmc
jno
cmp
push
and
cmp
gs
lock
push
xor
or
inc
jo
jl
dec
popf
or
cmps
inc
movs
test
push
dec
mov
push
jmp
pop
add
das
pusha
xor
mov
call
imul
int3
xchg
lods
inc
mov
imul
(bad)
pushf
xchg
call
xor
(bad)
out
ins
nop
mov
xchg
cli
jno
xchg
jo
les
(bad)
cmp
das
in
ss
and
xchg
push
addr16
inc
mov
xor
gs
neg
fwait
xchg
or
fcmove
dec
cmp
fiadd
sahf
sbb
out
popf
aas
scas
or
(bad)
sub
or
movs
mov
jne
(bad)
and
addr16
jge
mov
in
jp
mov
sub
and
(bad)
stc
or
push
std
and
outs
xor
dec
js
in
jecxz
clc
push
xchg
neg
xor
jmp
xchg
adc
push
dec
push
xchg
inc
aas
aas
lock
xchg
push
cli
push
cmp
cli
lods
jae
jecxz
dec
in
push
jns
dec
or
or
lods
cmps
loopne
or
daa
pop
(bad)
bound
xchg
popf
sbb
in
sar
js
icebp
hlt
and
cmp
xchg
pop
cmp
mov
nop
fldcw
iret
fwait
sub
lds
iret
imul
sbb
cmp
jle
cmp
pop
scas
fisub
(bad)
sbb
inc
shl
lods
fs
ret
inc
add
and
arpl
jecxz
mov
pop
popa
or
test
test
loopne
mov
cmp
push
pop
outs
hlt
xor
mov
fwait
dec
loop
mov
sar
pop
or
mov
ds
stc
unpckhps
nop
cmps
cmp
push
inc
das
cwde
cmp
xor
mov
movs
jmp
dec
mov
cwde
mov
cli
dec
inc
outs
mov
ficom
sub
jecxz
jl
adc
icebp
mov
icebp
enter
ret
jecxz
ds
ins
xor
fld
test
mov
jnp
xchg
mov
aas
mov
dec
inc
mov
jmp
gs
(bad)
lock
retf
retf
adc
cmps
addr16
out
xchg
jmp
add
mov
jp
sbb
enter
into
add
nop
dec
or
inc
cmps
xor
push
std
cmc
mov
fidivr
xlat
les
cmp
mov
sub
pop
pusha
mov
mov
stc
int
jbe
pop
add
pop
les
push
push
loopne
pop
add
lock
ins
push
pop
and
xchg
and
shr
mov
pop
test
mov
mov
fs
xchg
mov
mov
ret
or
call
add
mov
movs
push
test
mov
jno
jbe
push
xchg
mov
mov
jecxz
jae
jo
jle
cdq
push
(bad)
cli
pop
ins
iret
test
pop
push
or
pusha
mov
mov
ja
pop
in
push
and
int
xchg
pop
cdq
pop
div
and
pop
nop
jb
fcomp
mov
cmp
xchg
cmp
sbb
shr
add
push
cmc
xor
mov
out
test
xchg
inc
std
data16
icebp
xchg
adc
loop
dec
sbb
mov
(bad)
into
aaa
(bad)
inc
std
xchg
test
in
lods
sbb
dec
jae
sub
sub
cmp
dec
jp
xchg
aas
aad
push
iret
and
outs
mov
dec
mov
clc
inc
xchg
(bad)
(bad)
push
inc
pop
and
test
fmul
lds
test
add
adc
cmp
or
scas
xor
or
or
(bad)
stos
add
fadd
or
mov
pop
cmc
push
repz
fadd
jle
sub
jg
cs
imul
in
loopne
add
pop
mov
shr
lods
pusha
inc
inc
pop
push
inc
in
pop
in
imul
and
in
pop
leave
mov
or
cmc
pop
pop
test
dec
lea
loope
clc
or
shl
pop
inc
pop
and
(bad)
rcl
pop
push
sub
cld
shl
mov
pop
mov
in
outs
shr
popa
popf
lds
and
pusha
inc
sub
fdivr
(bad)
dec
cmps
push
pop
scas
push
xlat
dec
iret
sbb
xor
retf
shl
push
test
call
addr16
xchg
daa
mov
out
icebp
in
mov
(bad)
cli
jno
stc
pop
pop
dec
pop
xchg
mov
daa
add
mov
or
je
jbe
dec
call
fistp
ss
jns
repz
or
cs
mov
inc
pop
or
dec
popa
int
xchg
lds
dec
adc
adc
add
shr
imul
jb
pop
push
pushf
mov
scas
mov
cmp
mov
enter
or
jle
mov
add
sbb
pop
int
test
jno
cdq
or
xchg
ins
mov
(bad)
bound
push
es
xchg
push
pop
call
pop
loope
cmps
sub
out
ins
jmp
dec
popa
push
cmps
mul
mov
mov
call
outs
push
in
clc
add
dec
dec
cmp
fnstsw
mov
jge
dec
lock
xchg
repz
cmps
jmp
jnp
xor
cmc
mov
cld
push
fs
add
fwait
daa
test
xchg
adc
test
aas
jp
pop
test
adc
add
lds
dec
push
aam
xor
jb
adc
mov
cmps
mov
stc
jne
enter
mov
mov
mov
vpmuludq
pop
dec
call
or
dec
push
jmp
out
jno
inc
iret
fld
or
xlat
adc
outs
sub
sar
jb
sahf
mov
int
adc
lds
pop
xor
jne
push
shl
mov
mov
xor
cmp
(bad)
xchg
jnp
(bad)
das
push
xor
mov
mov
jmp
xor
stos
pop
in
sub
mov
jne
push
sahf
jae
or
test
out
sbb
test
shl
enter
imul
sub
pop
ds
jg
xchg
leave
jecxz
repnz
jne
clc
pop
jmp
pop
xor
call
mov
sahf
loope
mov
sti
sbb
sub
pop
aam
out
mov
mov
fisubr
rol
stc
adc
sub
cmp
inc
lods
mov
mov
xchg
xchg
push
or
test
sbb
ret
(bad)
xlat
(bad)
jle
iret
and
xchg
(bad)
mov
add
repz
sbb
mov
data16
sar
cmps
cmpxchg
mov
retf
fiadd
stc
stc
add
jns
rol
test
or
pop
pop
xor
dec
inc
dec
shl
in
(bad)
push
inc
cmp
mov
mov
mov
adc
sahf
in
(bad)
or
(bad)
pop
sbb
cmp
out
les
fwait
mov
fisttp
aas
(bad)
js
cmps
push
inc
cmp
push
pop
jge
mov
hlt
pop
retf
pop
mov
clc
push
push
das
and
push
mov
shl
or
xor
loopne
mov
mov
xchg
pop
xchg
sti
sti
lahf
popa
cmp
in
lods
pushf
or
sahf
adc
pop
add
push
xor
sub
and
and
mov
add
sar
push
popa
ja
js
mov
mov
sub
aas
pop
iret
repz
jne
add
jmp
inc
jbe
push
adc
jecxz
(bad)
cld
nop
xchg
mov
out
jmp
mov
mov
pushf
pop
jmp
adc
inc
inc
test
ja
sar
test
xchg
mov
xor
fnstenv
xor
mov
adc
shr
dec
sbb
mov
inc
rol
push
jbe
mov
add
jns
aaa
mov
jo
cmp
repnz
rcl
ffree
mov
ins
loopne
arpl
add
pop
jae
dec
frstor
or
cmp
clc
adc
add
bound
dec
test
stos
cdq
xchg
lods
or
out
dec
pop
sti
(bad)
icebp
jp
repnz
xor
or
dec
outs
mov
test
add
ja
sub
and
cdq
jnp
loope
clc
dec
es
mov
mov
les
leave
or
push
movs
addr16
xor
xlat
out
test
adc
scas
push
scas
ja
cmc
aam
and
xchg
mov
xor
or
mov
mov
test
inc
jbe
stc
aad
nop
mov
xchg
sbb
cmc
scas
mov
or
ins
dec
inc
aam
mov
ss
das
bound
fdiv
fisttp
sub
sub
dec
in
xchg
test
inc
xor
sbb
or
jns
(bad)
or
sti
enter
repz
xchg
mov
ss
nop
jae
sbb
(bad)
test
add
sbb
mov
daa
jg
mov
add
add
jb
idiv
inc
ss
mov
push
mov
loopne
iret
aam
and
xchg
xor
and
jbe
inc
aad
retf
jmp
mov
mov
out
sbb
mov
jo
push
imul
std
aad
in
push
add
fidiv
dec
retf
mov
retf
sbb
out
cwde
rol
retf
arpl
pop
sub
test
dec
xchg
add
push
jno
scas
add
lahf
leave
(bad)
rcl
rcl
add
(bad)
sti
pop
xor
xlat
mov
mov
add
scas
ror
pop
stos
cmp
stos
pushf
jl
cmps
mov
push
jae
outs
jge
sub
mov
stos
fild
imul
(bad)
lods
inc
xchg
adc
aas
imul
sbb
mov
jb
or
leave
hlt
dec
je
xchg
push
jb
xchg
jnp
pop
ins
jnp
inc
mov
dec
adc
or
hlt
push
lods
sar
aad
xchg
mov
pop
dec
cmp
out
mov
cmps
adc
sbb
das
into
pop
retf
inc
dec
ror
mov
das
push
push
iret
clc
and
mov
mov
cmp
scas
xchg
outs
das
sbb
mov
pop
repz
sbb
ja
arpl
call
inc
add
retf
lahf
test
push
sbb
cmp
push
push
test
push
fs
push
adc
ret
movs
and
ror
inc
adc
aad
dec
or
maxps
mov
repnz
rol
push
outs
jbe
std
mov
or
mov
pop
jbe
and
pandn
addr16
push
or
mov
ficom
mov
and
(bad)
cmp
movs
dec
inc
test
inc
mov
adc
es
in
(bad)
outs
cmp
cld
shl
loope
jecxz
gs
jmp
rcr
sbb
loopne
mov
push
mov
scas
scas
cmp
adc
popf
and
push
and
and
and
sbb
push
stos
je
test
or
or
mov
jmp
sub
xchg
dec
test
sahf
jle
mov
mov
int
push
dec
and
gs
xchg
and
dec
arpl
je
(bad)
out
ja
push
call
cmp
mov
push
test
or
popa
sbb
cmp
shl
inc
pop
fwait
or
push
clc
dec
inc
jg
rcr
aam
xchg
sub
outs
je
fisub
outs
fwait
cmps
clc
call
sbb
pop
xor
fnstsw
add
mov
mov
cmps
repz
xor
scas
mov
push
dec
xchg
pop
jo
add
mov
xchg
icebp
cmps
test
dec
fiadd
arpl
js
adc
mov
std
mov
adc
sbb
pextrw
add
sbb
std
dec
jge
and
stos
cmp
and
sub
sbb
icebp
jb
jmp
out
and
adc
ret
lods
add
iret
xor
test
inc
mov
fsubr
sbb
dec
shr
retf
out
adc
or
gs
dec
sbb
addr16
lods
das
sub
pop
mov
mov
lds
dec
cmp
push
jno
mov
xor
inc
popa
into
and
in
pusha
mov
mov
push
adc
loop
shr
lds
jb
data16
cs
ror
int
fwait
jmp
add
xchg
in
imul
push
ja
xlat
in
dec
hlt
je
shr
dec
xor
std
cmp
out
imul
aas
cmp
push
jge
mov
and
jae
cli
scas
ins
pop
dec
iret
mov
and
rol
add
into
retf
cs
(bad)
loopne
mov
mov
into
arpl
mov
cmp
repz
leave
jge
mov
xchg
sub
sbb
test
mov
pop
sbb
adc
sbb
enter
jae
push
imul
rcr
pop
pop
fcmovu
fst
scas
dec
fist
int
push
adc
adc
push
cli
push
xor
xchg
xchg
enter
inc
lea
sub
sbb
xor
mov
jbe
mov
fwait
sbb
les
push
arpl
or
jg
pop
push
and
dec
pop
sub
adc
loopne
adc
ins
mov
xchg
sbb
icebp
ins
dec
out
push
das
adc
jmp
loop
paddusw
sub
stc
pop
aam
addr16
(bad)
mov
xchg
cdq
jmp
rcr
pop
fnstcw
(bad)
stos
and
mov
mov
adc
fisubr
ror
(bad)
out
push
sub
cwde
loopne
or
sbb
adc
and
aaa
in
or
stc
outs
int3
adc
scas
jge
push
test
(bad)
stos
mov
or
scas
ins
cs
push
sub
int
or
pop
(bad)
retf
pop
sub
mov
sbb
pop
sbb
jb
push
test
jns
iret
out
in
into
mov
sbb
adc
fwait
jg
jno
mov
dec
xchg
das
inc
cmc
retf
rcr
cmc
call
pop
mov
jmp
sti
jae
xchg
mov
cmp
or
or
pop
clc
lods
aad
stos
push
repz
mov
sub
mov
dec
pop
gs
outs
loope
aam
pop
scas
adc
jmp
inc
out
cmc
ret
sbb
cmp
xor
dec
mov
xchg
or
xor
mov
(bad)
stos
jp
popa
ja
mov
jle
das
ja
arpl
xchg
jns
aas
jb
pop
nop
xor
popf
arpl
sbb
sub
sahf
pusha
dec
gs
dec
push
out
std
fldenv
gs
xor
sbb
inc
cwde
mov
pop
test
(bad)
lods
pop
into
outs
adc
pop
sar
jp
cmp
ret
pop
fucomi
loope
fwait
mov
push
sub
nop
adc
push
pusha
neg
das
test
pushf
(bad)
adc
xchg
pop
inc
cdq
call
fidivr
icebp
or
lahf
(bad)
xchg
add
add
cld
jo
mov
add
dec
mov
fcomp
xor
pop
lock
or
in
test
sar
cdq
sbb
mov
dec
mov
int3
jae
xchg
call
add
imul
pop
shl
add
cmp
int
or
cmc
sub
cmc
inc
inc
inc
fcomp
ins
pop
loopne
loope
mov
cwde
pushf
and
xor
int3
std
loope
mov
cmp
push
aam
inc
sahf
ficomp
fwait
into
and
fstp
push
loopne
cmp
jl
mov
lea
jle
retf
cmp
clc
push
sbb
je
nop
(bad)
add
lods
(bad)
in
popf
add
stos
pop
mov
inc
ins
scas
jne
aaa
call
fsub
push
loopne
adc
loope
jl
cmp
in
data16
sub
sub
ins
cdq
fs
sbb
xchg
push
adc
out
aad
outs
xlat
int3
push
jno
push
mov
ss
or
cdq
sub
data16
push
cmp
sub
mov
repnz
call
les
and
gs
in
sbb
cmp
nop
aaa
imul
jo
(bad)
push
sbb
(bad)
jg
retf
jmp
and
mov
mov
sahf
jns
push
(bad)
add
fdivr
mov
or
dec
mov
mov
push
sbb
and
jb
sar
loope
adc
cmp
add
rcr
mov
xchg
sub
in
push
idiv
stc
jne
aaa
sbb
test
movs
or
mov
sbb
cmc
jne
das
dec
(bad)
movs
out
xor
and
mov
jb
lods
(bad)
outs
scas
jb
pop
adc
mov
lods
out
cmc
xchg
int
dec
fidiv
pop
std
pusha
adc
cdq
jl
add
test
in
mov
push
add
test
cmps
popa
push
scas
pop
(bad)
or
add
push
test
sub
out
adc
ja
inc
jg
arpl
loop
xor
dec
xchg
scas
inc
stos
nop
cmp
loope
les
inc
dec
loopne
mov
out
and
adc
je
or
in
pop
lds
cmp
iret
in
movs
push
adc
xchg
clc
adc
sahf
retf
sti
jle
mov
mov
xor
inc
adc
jbe
pop
inc
push
shl
push
xlat
scas
push
jmp
shr
cli
xchg
ds
pop
and
shr
cmps
add
dec
inc
retf
retf
sub
sbb
jo
jae
out
dec
mov
cmps
popf
mov
pop
xchg
or
icebp
scas
xor
and
outs
sub
jmp
push
mov
stos
pusha
fadd
inc
xchg
and
jo
push
sbb
push
fsub
cli
fisub
into
rcl
or
pop
adc
mov
(bad)
mov
push
shl
push
sub
aaa
cmp
fimul
mov
xor
call
push
rcr
loopne
dec
popf
push
ret
loop
mov
test
addr16
or
mov
push
std
push
sbb
or
sahf
jb
in
jne
aaa
sar
ficomp
add
mov
mov
dec
mov
jp
mov
dec
(bad)
js
test
stos
std
add
jns
push
push
out
xor
sahf
xor
sub
rcl
xlat
nop
das
dec
xlat
lods
lds
aaa
ja
add
cmp
stos
imul
cmc
mov
sbb
sbb
mov
xor
mov
cs
mov
xchg
adc
add
xor
out
es
not
inc
cmp
mov
xchg
dec
jne
xchg
push
mov
fisubr
add
pop
cdq
sbb
inc
imul
xchg
push
retf
and
jmp
and
nop
fwait
cdq
jbe
div
lahf
jp
dec
mov
adc
lods
pop
ins
lods
stos
fcmovb
mov
data16
push
outs
in
or
sbb
movs
xchg
cmps
sub
pop
stc
scas
cmp
mov
scas
jg
sbb
mov
xchg
add
sbb
maxps
sti
push
lahf
fs
pusha
push
aam
cmp
sbb
mov
and
cmp
xchg
std
int3
loop
lods
pop
les
fisub
in
mov
mov
sbb
cmp
push
fxam
sub
lea
int3
jne
jb
jne
cmp
cdq
daa
out
in
jmp
lods
outs
dec
lods
(bad)
pop
repnz
out
lods
fldcw
mov
cmp
loopne
cld
test
inc
cdq
adc
in
cdq
adc
fistp
ret
cwde
scas
xor
mov
jmp
mov
scas
dec
sub
mov
jmp
imul
aaa
push
inc
push
sub
ja
int
ds
jg
test
mov
call
sub
ror
mov
cmps
bound
fucomi
outs
loope
pop
and
sbb
je
pop
mov
out
repnz
cwde
je
fild
mov
dec
shl
adc
nop
push
jb
pop
js
cli
into
stos
loop
daa
ins
xor
aad
push
and
lahf
enter
inc
jge
mov
scas
outs
push
scas
fs
jno
adc
mov
ficom
add
aad
sbb
mov
xor
and
adc
cmp
gs
cli
add
add
xchg
icebp
jb
call
sub
mov
dec
inc
sbb
(bad)
mov
icebp
retf
daa
mov
mov
in
in
sub
xor
mov
(bad)
jns
dec
movs
jge
(bad)
mov
dec
dec
push
push
jb
pop
inc
lahf
in
xlat
fs
lds
jp
fsubr
aaa
jg
loope
xchg
add
xor
in
mov
outs
mov
pop
test
cmp
lock
repz
xchg
jp
leave
ret
int
or
xor
int
ins
mov
cmp
add
bound
jo
jle
sub
iret
gs
push
add
mov
sub
imul
pop
adc
inc
mov
push
mov
jmp
mul
dec
push
dec
adc
in
arpl
jge
fld
dec
into
mov
add
jnp
stos
(bad)
pusha
sub
cmp
pop
xchg
or
or
jmp
mov
mov
mov
lahf
retf
mov
mov
movs
aas
mov
lock
jmp
push
(bad)
adc
cmps
push
push
or
inc
xchg
outs
mov
jecxz
out
pop
jge
mov
(bad)
xchg
sub
pop
pop
cmp
add
push
cmp
xchg
js
jge
in
pop
sub
(bad)
xchg
scas
cmp
pop
stos
ins
sub
imul
cmps
lock
leave
rcl
mov
ins
pop
int3
mov
mov
cmp
xchg
sbb
icebp
aam
push
pop
jno
jecxz
push
jno
loope
jne
mov
mov
xor
fisubr
repz
test
outs
mov
sahf
adc
mov
push
sar
in
retf
int3
add
cmp
inc
pop
and
outs
popa
mov
je
jmp
xchg
(bad)
fwait
js
cmp
dec
stos
sbb
or
sub
and
jge
pop
sbb
or
ins
in
dec
(bad)
and
mov
ds
cmp
or
movs
cld
into
xlat
iret
rol
jmp
cmps
pushf
icebp
sbb
pusha
imul
push
lahf
jge
test
pop
sub
test
and
push
data16
pop
ret
test
fild
(bad)
(bad)
enter
cmp
fbld
fisubr
cmps
add
sbb
call
sbb
jb
popa
sbb
sub
out
icebp
lahf
repnz
shl
std
xor
and
sbb
(bad)
cdq
or
pop
fimul
pusha
call
push
std
stos
cmp
jg
mov
or
mov
not
mov
inc
test
cmps
daa
push
and
(bad)
jp
cmp
popf
popa
ss
dec
pop
mov
sub
shl
jmp
xchg
sub
int3
mov
mov
add
jbe
dec
inc
gs
mov
cld
std
xor
fwait
add
or
or
and
inc
rcl
xchg
test
cmps
inc
popf
xchg
js
dec
(bad)
out
ja
push
(bad)
in
mov
aad
jo
xor
nop
mov
lock
inc
pop
push
pop
fiadd
fs
mov
adc
je
(bad)
mov
mov
mov
ins
mov
test
cdq
js
inc
jecxz
fldenv
pop
fwait
cld
ss
sbb
repz
mov
jg
sti
jmp
sbb
jmp
pop
pop
pushf
aas
in
js
in
or
push
xchg
add
inc
fiadd
das
ss
xchg
into
(bad)
ins
xor
and
mov
or
mov
test
cmp
inc
jl
dec
adc
mov
ret
repz
mov
cmp
push
jne
adc
rcr
dec
or
jns
fld
cmovs
sar
pavgw
mov
in
xchg
aas
ficomp
jne
imul
push
adc
lds
imul
cmps
xchg
stc
dec
or
arpl
xor
pop
add
add
xor
movs
ins
mov
rcr
shl
cmp
mov
call
inc
push
jge
fsub
icebp
xlat
retf
push
jmp
(bad)
mov
mov
into
ins
test
cmp
xor
ret
imul
adc
fs
mov
shl
jo
adc
mov
mov
xor
int
pop
ss
popf
and
inc
les
pop
dec
neg
scas
mov
daa
dec
mov
mov
mov
push
jae
out
sub
jl
xchg
rol
mov
cli
adc
cdq
mov
out
movs
lahf
aam
pop
sub
add
cs
ins
pop
jae
sub
out
adc
cmps
cmp
mov
mov
or
popa
fidiv
fisubr
cs
adc
test
mov
fs
inc
adc
call
cmp
aam
push
cmp
mov
push
pop
in
xor
rol
repnz
inc
add
movs
jo
sub
add
or
mov
hlt
movs
mov
xchg
icebp
ret
pop
dec
(bad)
aaa
gs
popf
ret
sub
fwait
push
jg
test
mov
test
jmp
int3
jle
or
nop
jp
jl
inc
mov
fcomp
push
xchg
and
lock
xchg
mov
ja
pushf
mov
aam
dec
btc
daa
pop
push
ja
inc
enter
lods
scas
adc
dec
or
loope
out
movs
push
inc
lahf
cmc
mov
sub
add
sahf
in
data16
pop
mov
ror
test
cmp
fistp
mov
and
inc
or
pop
in
mov
invd
mov
mov
xor
or
jo
leave
push
daa
ja
jns
jo
cmp
call
fbld
add
push
inc
pop
fcom
(bad)
xlat
div
jnp
xchg
in
or
sbb
mov
psrad
sti
pop
retf
adc
xchg
mov
fbld
cld
shr
leave
and
push
in
cmp
jne
je
mov
or
aas
lds
mov
cmc
mov
shl
sub
shl
ins
icebp
push
fcomip
fwait
dec
shl
dec
sub
cli
daa
xchg
out
ins
sub
daa
push
int
(bad)
mov
xor
pop
rol
lds
ficom
fnclex
les
jmp
jge
pop
xchg
sub
xor
jge
jmp
inc
mov
push
imul
pop
mov
mov
push
pop
sbb
daa
(bad)
pop
pop
movs
mov
add
cmps
icebp
test
xchg
mov
cmp
loopne
cmp
arpl
cmp
push
movs
pop
push
jmp
xchg
push
shl
push
jb
mov
call
mov
mov
jns
test
pusha
jle
pop
jo
mov
gs
pop
jnp
mov
cmp
in
fisttp
sub
push
cli
push
lahf
(bad)
inc
aas
or
adc
push
retf
mov
aam
mov
(bad)
out
add
in
ret
or
ja
mov
xchg
imul
cld
test
sbb
es
psllq
enter
jle
pop
dec
push
cmp
jp
rcl
imul
loope
int
sbb
jno
xor
addr16
adc
push
loopne
in
pusha
push
lods
fidivr
ins
jo
test
lahf
mov
jno
leave
lods
jb
add
pushf
add
xchg
push
xchg
addr16
jns
jg
leave
mov
pushf
fild
dec
mov
adc
sbb
pop
mov
pop
add
add
xor
or
sub
fiadd
mov
pop
cmp
les
inc
add
xchg
sub
test
in
data16
sbb
push
xchg
inc
lods
push
mov
(bad)
xchg
adc
cld
mov
inc
adc
mov
loope
adc
adc
popa
xchg
retf
push
fimul
loopne
inc
hlt
push
mov
popf
cld
icebp
xor
push
xor
cs
hlt
outs
adc
pusha
add
pop
jnp
es
popf
cmp
jle
sbb
mov
adc
mov
jae
sbb
das
lea
xchg
(bad)
in
add
ret
jno
cmp
dec
shl
sbb
lahf
xor
sub
pusha
add
fsubr
dec
pop
jp
xor
(bad)
mov
repnz
pop
xchg
fs
jecxz
ret
pushf
outs
test
adc
xchg
(bad)
cmp
sub
ffreep
enter
rcl
ins
mov
sub
adc
(bad)
mov
inc
mov
add
dec
adc
aaa
dec
iret
mov
inc
dec
repz
arpl
jo
je
or
out
outs
xchg
sub
push
ins
jmp
leave
sub
sub
xchg
repnz
in
call
retf
shr
or
adc
int3
push
cmp
iret
int3
(bad)
into
mov
ds
repz
xchg
das
push
pop
mov
cmp
(bad)
mov
aad
(bad)
pop
mov
lods
inc
nop
push
(bad)
cmc
push
mov
call
mov
cmp
retf
out
iret
pop
pop
outs
ds
pusha
dec
sub
pop
cmps
test
pop
xchg
add
out
and
pop
pop
dec
mov
sbb
or
shl
jae
push
cld
(bad)
sub
add
(bad)
jbe
data16
test
push
mov
test
push
mov
pop
xchg
fist
in
pop
arpl
add
aaa
push
push
cli
xor
loopne
ret
xchg
pop
lahf
into
lods
mov
(bad)
xchg
movs
inc
jmp
nop
sub
sti
adc
(bad)
pop
xor
in
lea
push
es
enter
cmp
in
adc
pop
mov
ins
call
js
loop
xor
xchg
out
js
mov
sbb
or
stc
dec
imul
push
mov
inc
dec
in
imul
loop
xchg
cmp
mov
rcr
xchg
aam
(bad)
aas
dec
cmps
pop
cwde
aam
sti
xor
jle
add
add
xchg
mov
push
cmps
xchg
push
sbb
sub
ja
addr16
js
rcl
xchg
adc
mov
fnstcw
cwde
xchg
cmp
clc
(bad)
jmp
retf
pusha
dec
adc
ret
mov
ror
movs
xor
fisttp
and
imul
mov
xor
dec
bound
xor
ss
mov
push
inc
push
dec
mov
imul
push
xchg
lea
jl
lahf
xor
xchg
jns
out
push
(bad)
pop
lods
in
call
(bad)
aam
cmp
add
sub
mov
sbb
neg
hlt
fistp
cmp
pushf
retf
js
mov
outs
enter
push
ret
sub
cmps
sub
fwait
in
ret
cmp
pop
das
xchg
arpl
mov
push
jmp
dec
xchg
js
push
imul
test
jns
ins
adc
push
jl
mov
xchg
fld
loop
sub
xor
enter
pop
retf
inc
xchg
sbb
(bad)
in
jne
movs
xor
xchg
(bad)
ss
or
aas
adc
sar
sub
int3
loop
jns
inc
shl
bnd
mov
movs
repnz
scas
or
enter
pop
ja
or
push
cmp
in
out
fdivrp
inc
es
lgs
imul
cmps
sti
repnz
lock
mov
mov
ss
nop
or
add
cmp
mov
push
daa
cmp
adc
adc
sub
and
into
jge
cld
cdq
fnstsw
xor
into
ret
imul
push
dec
ds
inc
push
ja
or
out
sbb
out
jmp
pop
ja
arpl
adc
or
outs
jae
cs
ss
imul
cmp
and
sbb
push
xor
mov
jmp
aaa
mov
mov
cli
pop
push
(bad)
jmp
shl
dec
out
packssdw
movs
or
das
in
jge
adc
retf
jmp
mov
push
lahf
sbb
jge
push
sub
adc
dec
pcmpgtd
jnp
jbe
jbe
sahf
mov
pop
in
xchg
push
cmc
test
cdq
mov
fisttp
jge
mov
xchg
ss
iret
stos
and
adc
imul
lds
fcomp
loope
inc
aas
xchg
push
jp
mov
dec
es
xlat
xor
jns
hlt
and
mov
cmp
fdiv
fld
push
push
(bad)
cmp
rcl
and
iret
cmp
repnz
je
inc
xor
mov
lock
in
je
ret
sbb
push
arpl
cmp
mov
xchg
mov
jmp
mov
xchg
mov
pop
mov
fcmovnu
push
adc
sub
add
jmp
gs
pop
daa
mov
sub
xchg
or
add
out
mov
cmc
adc
call
inc
addr16
clc
add
mov
xchg
arpl
bound
in
dec
outs
in
push
jl
pop
sub
addr16
mov
sahf
mov
pop
leave
xor
sub
das
test
cmps
or
cmp
xor
sbb
mov
aaa
cmc
sbb
or
or
dec
addr16
adc
ret
mov
inc
rcl
jne
jae
cld
inc
movs
inc
adc
shr
push
dec
mov
cmp
mov
jmp
lods
inc
imul
test
das
jle
ins
div
(bad)
ficom
bound
dec
fisttp
xlat
cld
les
repz
rcl
shl
fisubr
js
jns
out
adc
mov
lods
push
xchg
xchg
stos
xor
mov
pop
cmp
pop
pop
sbb
push
xchg
(bad)
mov
sbb
xchg
jae
push
nop
dec
cli
mov
mov
jns
or
sub
push
inc
cmp
dec
ficom
add
mov
jbe
bound
adc
dec
jbe
cmp
loopne
xchg
lods
push
sub
pop
jecxz
je
mov
push
or
push
sahf
icebp
fwait
scas
shl
(bad)
push
repz
pusha
nop
test
repz
or
in
sbb
rcl
repz
push
xchg
inc
push
jl
bound
cmp
icebp
add
mov
dec
outs
inc
or
mov
aas
lock
mov
xchg
arpl
sbb
(bad)
pop
xor
test
test
sbb
inc
cwde
mov
sbb
shl
jo
push
fsub
loope
adc
stc
add
mov
out
ds
or
xchg
loopne
dec
pop
mov
mov
call
enter
mov
adc
adc
jb
adc
je
clc
mov
xchg
and
jmp
scas
adc
retf
sbb
jl
pop
bound
scas
cmp
push
shl
imul
dec
and
hlt
enter
ss
push
out
icebp
xchg
cli
dec
mov
shl
in
mov
jb
adc
pop
cmc
fidiv
xor
or
sub
pop
lods
adc
cmp
dec
mov
arpl
push
popf
jnp
mov
cmp
jae
jge
pop
iret
xor
repz
retf
pop
jmp
shl
push
mov
cdq
sbb
inc
lods
xchg
popa
call
mov
and
jb
imul
out
jns
in
mov
shl
inc
cmp
lods
scas
mov
push
mov
shl
pop
xor
arpl
pop
imul
mov
jo
pop
xor
mov
xchg
push
sub
push
adc
xchg
or
scas
addr16
add
mov
lods
js
inc
out
inc
add
inc
and
cmp
sbb
loope
add
fadd
call
lea
es
imul
std
inc
mov
std
xchg
rcr
ret
add
cmp
mov
arpl
sahf
sbb
into
shl
adc
pop
ret
dec
add
mov
add
movs
addr16
xchg
pop
(bad)
fild
stc
inc
cmp
in
push
scas
push
int
cmps
inc
add
cld
(bad)
jge
(bad)
mov
pusha
fstp
pop
cmp
pusha
xchg
les
cs
jmp
jmp
fnstcw
cmp
and
sbb
fadd
lods
popf
imul
sbb
jge
add
enter
arpl
in
or
push
pop
ret
pop
mov
(bad)
mov
dec
ret
fistp
push
rcl
test
adc
mov
in
nop
stos
mov
pop
xor
mov
arpl
cli
out
fbld
fnstcw
mov
cs
fcomp
or
fucomi
cmp
imul
lods
in
retf
jle
push
pop
mov
add
jp
out
and
push
or
mov
cdq
movs
loope
sbb
mov
inc
mov
and
int3
mov
ja
cld
aaa
shl
imul
int
push
mov
dec
jecxz
or
ret
mov
jecxz
(bad)
xor
cmp
add
pop
mov
jbe
pushf
cmp
add
bound
adc
pop
and
dec
sub
daa
mov
cmp
mov
mov
mov
sbb
stos
call
xor
in
test
xor
jmp
push
xchg
xor
loopne
push
(bad)
enter
mov
out
mov
jae
imul
aam
and
dec
or
pop
int
call
out
test
cmps
lock
jbe
sub
mov
fs
inc
lahf
outs
outs
retf
xor
push
jmp
(bad)
(bad)
jp
cmp
rcr
jle
inc
icebp
and
add
xchg
dec
imul
daa
imul
mov
jno
mov
shl
dec
push
mov
mov
push
pusha
pusha
dec
in
sbb
inc
fistp
mov
enter
sbb
and
rcl
daa
lods
push
xchg
pusha
xor
sbb
push
addr16
pusha
mov
push
mov
inc
out
xor
aaa
jmp
adc
adc
and
inc
into
ss
mov
arpl
mov
dec
xchg
xchg
gs
xor
push
pop
gs
inc
jnp
ins
mov
lock
push
sub
or
mov
sub
jge
jns
rcr
cmp
jns
xchg
xchg
mov
fs
add
into
sub
cmps
lock
iret
(bad)
cli
cs
or
dec
daa
mov
aas
cmc
add
cmp
sub
pusha
xlat
jae
and
push
jnp
stos
std
push
sar
gs
das
cmp
es
movs
add
lds
out
outs
and
mov
add
fcom
fistp
enter
push
mov
sbb
cmp
adc
enter
cld
(bad)
jno
cmp
arpl
sub
xor
dec
or
pop
cwde
xlat
xchg
inc
xchg
or
adc
sbb
int
sub
mov
lods
pushf
stos
jl
lods
jg
sbb
push
pop
sbb
adc
adc
stc
mov
adc
mov
push
xchg
inc
sbb
imul
fsub
(bad)
(bad)
adc
xchg
inc
std
shl
(bad)
or
xchg
pop
mov
sub
push
sub
ret
push
call
nop
test
push
in
inc
or
mov
cmc
push
ja
out
mov
sub
sbb
outs
jmp
imul
outs
shl
adc
icebp
(bad)
sti
out
cmp
or
mov
pop
scas
jno
adc
adc
dec
call
mov
movs
es
call
js
pop
jo
jmp
ret
jnp
or
shl
xchg
test
mov
bound
call
cmp
xor
or
movs
les
test
push
lods
call
jle
inc
outs
xchg
cs
xor
cmp
into
adc
dec
push
imul
sti
cmps
clc
test
or
popf
mov
fcomp
sbb
pop
adc
aas
lods
out
and
push
iret
cmp
sub
mov
push
hlt
mov
push
das
scas
clc
mov
mov
icebp
mov
fadd
adc
repz
mov
lea
test
retf
jns
and
mov
repnz
dec
or
(bad)
push
sar
mov
adc
aaa
xchg
fstp
(bad)
lahf
mov
add
adc
push
dec
push
xchg
into
sub
sub
mov
cs
sub
adc
(bad)
inc
cmps
add
lock
sub
repz
int
movs
test
cld
adc
aam
push
int3
push
cmp
call
pop
lods
jns
mov
add
imul
inc
push
sub
rcl
mov
sub
test
cld
pop
or
inc
dec
(bad)
or
call
test
loopne
imul
je
hlt
pop
xor
aas
mov
adc
imul
sbb
movs
shl
shl
ins
mov
je
mov
sbb
adc
test
hlt
arpl
jbe
mov
dec
or
pop
inc
push
out
popa
ficomp
mov
pop
addr16
sti
out
adc
jl
jae
ret
xchg
jg
push
sbb
or
jmp
add
sub
ins
repnz
xor
or
retf
adc
in
imul
pop
xor
pop
fwait
add
fidiv
xchg
dec
cmps
js
cmp
enter
stos
mov
js
je
ja
mov
imul
test
xor
adc
dec
xor
push
mov
loope
fcom
sub
addr16
inc
cmp
pop
jg
xor
mov
adc
je
retf
cld
outs
das
inc
mov
sub
pop
scas
pop
adc
xor
mov
add
std
pop
adc
cmps
adc
ret
fsub
das
sbb
(bad)
nop
jg
jo
xchg
loop
or
pop
ins
cmps
mov
add
daa
ins
xor
ins
mov
mov
jb
xchg
ret
sbb
test
and
in
les
push
rcr
call
or
jecxz
dec
xchg
repz
mov
js
inc
adc
repnz
inc
popf
out
in
pop
xchg
sbb
sahf
sbb
push
ins
jne
or
mov
push
mov
pop
xchg
push
inc
dec
leave
aaa
mov
in
xor
mov
fisubr
and
cmp
adc
mov
pop
fisubr
imul
mov
sbb
cmc
mov
stos
xchg
jb
xor
stos
scas
retf
fs
add
jecxz
mov
jnp
aas
repz
mov
mov
jecxz
dec
or
inc
out
arpl
fst
xor
data16
adc
mov
jno
add
or
retf
fs
rcl
ror
shl
sbb
jmp
jb
out
loope
inc
movs
mov
mov
cmps
jnp
sub
sti
fadd
add
movs
retf
xchg
cs
daa
rcr
jbe
mov
(bad)
jg
(bad)
mov
push
daa
(bad)
pushw
sbb
outs
push
outs
mov
repz
enter
push
sar
jge
mov
mov
sbb
or
not
add
xchg
jno
call
fcmovb
xchg
pop
scas
push
ins
jb
rcl
mov
lock
neg
hlt
aam
push
mov
data16
push
mov
adc
push
inc
mov
and
aam
jb
mov
enter
xchg
adc
mov
loopne
jo
adc
(bad)
pop
fs
adc
mov
and
jne
shr
xor
jae
mov
mov
out
mov
das
mov
jg
inc
in
mov
loop
lods
and
les
push
stos
sbb
ins
(bad)
mov
xchg
aam
nop
xchg
xchg
cmp
shl
mov
push
lods
ret
xchg
outs
dec
lea
jno
jle
fild
es
iret
loope
pop
jecxz
jp
jl
imul
loope
test
xchg
dec
fadd
icebp
repz
mov
les
inc
mov
xchg
inc
jg
lods
pop
in
lods
icebp
rcr
mov
dec
lea
ret
inc
ins
lods
inc
mov
jnp
xchg
dec
(bad)
mov
jbe
push
mov
(bad)
pop
jp
xchg
push
pop
and
je
jno
push
push
test
or
push
ja
push
or
out
mov
add
jb
add
cs
mov
mov
pop
(bad)
sub
mov
xor
mov
test
in
pop
ds
push
leave
ds
jno
ret
xlat
sub
cld
and
cmp
hlt
in
xchg
xchg
repnz
push
pop
sbb
cmp
push
dec
mov
test
clc
scas
pop
fdivr
scas
arpl
or
push
and
add
add
pop
out
xor
enter
ja
cmp
rol
xor
adc
bound
mov
inc
shr
push
jge
mov
adc
adc
call
lds
stos
mov
movs
test
ret
jns
push
mov
das
mov
jo
push
push
outs
scas
mov
dec
add
shr
adc
bnd
sahf
aad
push
jle
or
cmp
dec
ffree
mov
clc
(bad)
cdq
daa
push
or
adc
iret
loop
shl
or
xchg
daa
jmp
iret
ficomp
adc
in
dec
rol
call
in
xchg
outs
test
(bad)
push
jno
sub
lods
(bad)
std
ss
aaa
xchg
push
mov
lea
std
(bad)
ja
cmps
scas
mov
es
fwait
or
pop
gs
sub
sar
aaa
ror
pop
mov
std
aas
shr
mov
cmp
pop
and
cld
out
mov
pop
xchg
push
pop
sahf
push
jmp
ret
mov
pop
lea
cdq
cmps
dec
xor
cld
fdiv
(bad)
mov
repnz
mov
sub
addr16
ret
jmp
sub
int3
shl
pop
jge
repz
push
fnstsw
movs
imul
dec
or
and
test
call
dec
push
mov
out
sub
fidivr
aas
rcr
jns
or
sbb
shl
out
pop
adc
outs
pop
mov
fadd
out
xor
cdq
scas
movs
cmp
adc
stos
jns
sub
hlt
enter
and
mov
ror
bound
fscale
and
pushf
(bad)
mov
add
mov
mov
dec
mov
add
(bad)
call
leave
sub
lea
dec
mov
retf
xchg
inc
je
add
push
xchg
pushf
mov
stos
dec
into
add
cdq
sub
inc
mov
faddp
and
sahf
xchg
adc
or
push
call
cmp
mov
push
inc
addr16
stos
into
xor
pop
sbb
xchg
nop
pop
ret
loop
jb
stos
leave
dec
clc
pop
stos
xchg
sbb
enter
jno
dec
add
loopne
lahf
xchg
cmp
mov
add
cmp
mov
mov
push
pop
push
inc
pushf
mov
jns
cwde
xchg
add
inc
sar
xchg
jge
sbb
mov
lods
push
fcomi
dec
pop
mov
cld
inc
inc
xlat
cmp
fild
lock
stos
fstp
cmp
mov
retf
ja
out
daa
jo
dec
mov
cmp
mov
or
jbe
ror
push
xor
cmp
bound
(bad)
aaa
int
std
inc
daa
ret
mov
jl
push
mov
es
sub
lods
iret
sub
cmp
jbe
mov
shl
dec
mov
sti
sbb
aad
jmp
pop
push
scas
xor
lods
dec
lahf
push
xlat
or
ret
sbb
sub
mov
rcr
mov
push
pop
jle
(bad)
(bad)
fld
in
out
jae
movs
emms
mov
or
lock
lds
or
fst
push
into
outs
fucomip
adc
add
mov
cmp
outs
jmp
inc
sbb
mov
dec
sti
js
adc
into
stc
movs
rcr
mov
dec
pop
retf
mov
fnstcw
sub
push
retf
add
retf
ds
and
(bad)
out
cmps
lods
mov
mov
(bad)
sbb
lds
xchg
loop
xchg
cmp
add
lods
add
nop
int
(bad)
icebp
ds
sbb
int
mov
jl
cld
popf
fs
movs
test
mov
movs
call
ficom
(bad)
out
and
adc
out
shr
(bad)
(bad)
cli
ret
lods
xchg
cmp
jbe
sbb
push
shl
mov
xchg
or
mov
fisttp
loop
ds
cmp
dec
lea
mov
jl
pushf
inc
xchg
fs
jb
mov
cmp
rol
adc
mov
xchg
or
push
sub
mov
cmp
sub
scas
scas
shl
cmp
fidiv
mov
retf
and
mov
fbstp
(bad)
stc
mov
dec
jmp
adc
imul
dec
(bad)
xlat
lock
movs
fbld
cmps
loope
aas
addr16
fdivr
adc
pusha
push
mov
sub
pop
lods
sub
adc
ret
arpl
sbb
xchg
arpl
cmp
or
lahf
(bad)
mov
sub
add
push
jmp
js
sahf
adc
frstor
xor
xor
(bad)
nop
and
mov
mov
shl
sbb
mov
sbb
pop
pop
pop
es
stos
pushf
test
pop
bound
jmp
cmp
dec
adc
cwde
js
(bad)
sub
or
not
inc
inc
dec
sbb
push
shl
jmp
shl
pop
add
xor
xor
and
dec
ret
dec
push
adc
(bad)
inc
add
add
(bad)
sbb
or
jno
test
push
loop
xlat
mov
test
repnz
push
stos
pop
rol
xchg
sar
addr16
jmp
test
shl
jne
call
scas
cmp
lea
mov
jne
jg
mov
mov
mov
mov
xchg
adc
jp
cwde
imul
jmp
inc
ss
leave
add
es
add
pop
push
gs
fiadd
in
lds
fsub
lods
xchg
test
pop
outs
pop
mov
repz
mov
inc
cmp
aaa
mov
xor
dec
cmc
mov
cdq
inc
push
jb
std
das
xor
cmp
aas
xor
inc
xchg
out
jo
jge
movs
jnp
pop
popa
jo
mov
retf
jne
arpl
add
xor
dec
shl
lahf
dec
fadd
(bad)
(bad)
out
mov
mov
arpl
xor
int
and
jmp
push
outs
mov
mov
outs
movs
add
fwait
adc
loopne
xor
cwde
cmc
(bad)
and
dec
call
(bad)
or
jb
and
pop
inc
int3
sbb
pop
rol
xlat
dec
mov
inc
popa
out
rcr
and
push
call
mov
lds
add
push
mov
aas
mov
fild
jmp
cmp
pop
push
jns
push
lods
rol
and
leave
jb
std
push
xchg
mov
loop
jmp
mul
mov
cdq
arpl
mov
xor
cs
popa
adc
pop
add
imul
inc
jbe
je
pop
jb
fild
in
adc
pop
mov
push
call
xchg
ret
cmp
sub
mov
sub
and
or
add
iret
cwde
ret
cmp
mov
sbb
les
push
push
into
jmp
xchg
jbe
cmp
add
in
and
movs
shl
ss
into
jnp
jnp
dec
mov
fadd
sbb
cmp
pop
adc
mov
mov
pop
and
ja
xchg
stos
jns
mov
and
mov
dec
pusha
sahf
repz
fisttp
pop
sbb
and
imul
or
pop
and
mov
icebp
mov
(bad)
in
mov
movs
push
pop
ret
popf
fstp
sbb
or
bound
mov
push
stos
ror
xor
mov
bound
mov
int3
add
mov
in
mov
and
cwde
and
and
sbb
inc
daa
(bad)
cld
and
js
in
push
arpl
dec
lock
lock
inc
les
out
inc
retf
loop
in
pop
and
out
xlat
mov
inc
fisttp
mov
jbe
xor
jbe
jp
les
in
call
in
xchg
mov
pop
popf
out
popa
push
das
(bad)
push
jl
fild
push
std
mov
in
cwde
jmp
leave
sub
sub
inc
inc
xlat
fild
popf
mov
loopne
and
retf
pop
mov
sbb
or
sub
adc
sbb
imul
pusha
jb
xor
mov
xchg
inc
cmp
ss
stos
lahf
pop
mov
cmp
xor
pop
push
pop
stc
mov
out
outs
repz
ins
sti
or
sbb
add
inc
mov
ins
push
cmp
gs
outs
jno
jbe
ror
or
sbb
cli
fidiv
xchg
(bad)
xchg
push
adc
imul
lahf
cmp
sub
mov
jge
call
loop
scas
sbb
xchg
or
cwde
sub
and
popa
xor
push
mov
out
mov
je
mov
jo
inc
xchg
cmp
cmp
pop
cmps
(bad)
loop
stos
add
adc
sub
int3
(bad)
jle
mov
or
imul
mov
(bad)
jo
test
mov
mov
cld
xor
add
adc
add
mov
mov
test
xor
jecxz
idiv
popf
clc
mov
mov
add
(bad)
call
inc
xor
movs
xor
mov
cmp
jle
cwde
pop
outs
mov
jns
sbb
push
and
dec
push
ss
cmps
xor
sub
in
jb
test
fimul
inc
shl
mov
and
scas
mov
test
fcmovnu
add
stc
sti
outs
push
arpl
cli
aaa
into
inc
sub
and
mov
test
(bad)
jp
and
ja
inc
out
xor
call
and
adc
cmps
mov
add
dec
mov
and
rol
adc
mov
adc
stos
jmp
xor
dec
jbe
rcr
or
out
cld
mov
pop
sub
out
or
jns
out
pop
imul
aam
xchg
jle
jns
mov
clc
les
jo
jnp
jae
xchg
jge
jb
jne
sub
ror
mov
iret
inc
je
and
sub
jbe
aaa
xchg
cs
mov
push
(bad)
sbb
shr
in
cwde
arpl
loop
sub
shl
std
push
inc
push
cs
xchg
scas
es
mov
mov
shr
push
xchg
addr16
add
enter
movs
inc
mov
and
xchg
jbe
ror
jo
xor
mov
lds
call
adc
in
pop
(bad)
pop
jmp
pushf
fld
ret
xor
pop
ret
(bad)
and
dec
out
in
xchg
ins
movs
pop
fisub
js
leave
xchg
icebp
iret
add
call
xchg
into
sub
inc
and
lods
sahf
test
mov
add
das
arpl
(bad)
fstp
out
nop
add
xchg
sub
add
lahf
sahf
in
emms
pushf
popf
jno
dec
ror
fcomp
out
sti
mov
or
data16
cmps
or
(bad)
fstp
mov
sbb
cmc
test
xor
mov
adc
adc
mov
fistp
mov
scas
pop
inc
je
loopne
je
push
cwde
shr
sbb
addr16
dec
les
ins
je
sahf
call
arpl
xor
loopne
icebp
xor
inc
retf
call
test
cmp
push
sbb
xchg
jmp
clc
cmp
sub
(bad)
xor
adc
loopne
mov
and
jmp
xchg
and
fcomp
pop
dec
xchg
lds
in
pop
imul
pop
out
adc
sbb
and
sub
pop
test
cmp
gs
or
cld
dec
mov
mov
and
add
lock
cs
jmp
ss
cmp
ins
ins
add
push
cmp
lods
call
outs
bound
in
ficomp
jae
out
push
and
xchg
out
test
add
sar
mov
add
dec
out
in
call
push
jg
mov
outs
inc
xchg
xlat
(bad)
or
mov
mov
in
or
xor
jl
adc
cmp
arpl
adc
pop
mov
sbb
dec
xchg
fcom
ds
push
mov
fwait
xchg
xchg
cmp
and
sub
sahf
mov
xor
sub
lods
xchg
out
nop
jmp
xchg
mov
pusha
les
pop
shr
adc
imul
mov
bound
test
mov
adc
jp
pushf
test
and
inc
add
or
xchg
dec
mov
js
pop
sbb
sub
das
inc
or
add
and
xchg
aam
mov
inc
xchg
or
lea
sbb
aas
nop
pushf
mov
test
or
push
xchg
movs
(bad)
mov
ja
repnz
ss
nop
retf
shl
(bad)
cwde
sub
dec
into
cdq
popf
pop
xchg
hlt
int3
jb
cdq
sbb
icebp
cld
sub
(bad)
inc
imul
jp
inc
repnz
xlat
dec
adc
fld
push
xor
add
mov
sbb
mov
rol
adc
dec
pop
fistp
jl
jb
mov
fsubr
mov
dec
sub
push
mov
nop
add
fcmovb
inc
out
jbe
mov
cmp
and
fist
int
mov
push
xlat
icebp
inc
js
jnp
mov
scas
sbb
xor
inc
aad
aad
ror
xchg
scas
shr
bound
idiv
push
and
or
loopne
call
out
in
ja
call
adc
xchg
add
sub
gs
pop
pop
aas
sub
mov
test
add
cwde
(bad)
cdq
bound
adc
js
cmc
jmp
popf
or
movs
aaa
div
les
adc
xchg
xchg
mov
lds
(bad)
ficom
adc
jmp
inc
sub
mov
aam
out
jnp
(bad)
jmp
popa
enter
stc
add
pop
test
xor
push
sbb
je
popf
add
mov
out
xchg
xchg
xchg
fld
jecxz
shr
icebp
jne
jmp
dec
in
es
xor
stc
and
or
out
sbb
in
or
jmp
shl
scas
and
out
xchg
es
in
in
dec
sahf
outs
sti
(bad)
test
cmp
cmp
clc
popa
xchg
into
and
inc
inc
movs
push
dec
jmp
inc
cmp
add
mov
and
mov
movs
popa
leave
lods
stos
mov
cmp
sub
add
jnp
ss
add
mov
push
jecxz
push
add
or
xchg
add
mov
jp
xor
jp
hlt
mov
push
jbe
leave
add
shl
iret
ffree
cwde
sub
push
leave
dec
(bad)
idiv
adc
scas
cmp
outs
dec
mov
stc
mov
push
dec
mov
rol
enter
dec
stos
(bad)
mov
xchg
push
mov
test
sar
dec
rcl
jno
jnp
call
mov
sahf
push
xchg
mov
sbb
aaa
or
dec
(bad)
bound
dec
pop
jmp
push
push
scas
(bad)
ins
test
iret
movs
xchg
cld
movs
adc
sub
lods
inc
sbb
adc
ja
jbe
pusha
sbb
es
jge
cmc
enter
loop
int3
sbb
shr
cmp
or
mov
jae
loop
add
outs
adc
mov
mov
jno
(bad)
pop
mov
dec
mov
jne
pop
fist
inc
mov
cmp
inc
push
(bad)
mov
cmp
xor
mov
fisub
sub
xor
adc
cs
test
scas
push
mov
mov
aas
in
cwde
lea
xchg
xchg
sbb
call
dec
push
push
xchg
iret
leave
out
jge
loop
or
mul
aad
fmul
push
loop
hlt
idiv
adc
mov
push
rcr
sub
iret
retf
lea
sahf
cli
or
stos
mov
scas
stos
pop
fiadd
adc
aad
loope
jbe
pop
mov
fnstenv
mov
in
repnz
add
mov
idiv
retf
out
lock
ss
stc
jae
ret
pushf
push
push
jmp
in
(bad)
icebp
sub
retf
dec
test
mov
jnp
adc
(bad)
pop
jl
sbb
jle
lock
xor
xor
fdivr
pop
cmp
xor
jnp
xor
or
fnstcw
in
or
and
xchg
push
mov
ror
pop
aad
xor
arpl
jmp
sub
outs
mov
mov
ja
inc
dec
popf
push
pop
retf
mov
dec
dec
ficomp
les
out
(bad)
jbe
test
icebp
jo
mov
mov
not
out
scas
mov
adc
cmc
mov
mov
mov
jge
aam
pop
and
mov
jmp
or
arpl
ret
(bad)
or
scas
inc
enter
cli
dec
jmp
xchg
imul
call
jns
fistp
in
jp
div
push
xor
(bad)
aam
xchg
xchg
retf
ss
push
pop
fidiv
xchg
inc
inc
fidivr
lahf
sahf
out
shl
fnclex
inc
icebp
fild
clc
jno
repnz
lods
or
inc
or
daa
aam
mov
and
xor
push
sbb
call
push
dec
icebp
xchg
cmp
or
imul
rcl
aas
ror
orps
fdiv
retf
inc
pop
mov
inc
xor
mov
xor
sbb
push
sub
jne
add
push
bound
pop
jns
in
cmps
mov
lods
xchg
jno
pushf
or
cmps
xor
adc
inc
stos
push
push
dec
or
sub
push
adc
jbe
pop
jo
push
push
pop
ret
inc
sub
push
adc
inc
das
stos
fcomi
push
or
imul
fs
dec
repz
mov
jb
ja
test
sub
mov
in
sbb
movs
popf
xchg
jo
fild
sti
cdq
fadd
push
enter
jl
stc
pop
jl
add
(bad)
pusha
push
jmp
cmc
std
adc
fdiv
mov
dec
das
add
push
jecxz
xor
mov
in
cdq
sub
adc
(bad)
cwde
cmp
xchg
mov
(bad)
hlt
jo
ja
lea
sub
mov
out
out
xchg
call
cwde
into
cmps
or
out
cs
das
push
les
pop
mov
add
fwait
inc
icebp
add
leave
(bad)
(bad)
sti
sub
pop
cmc
dec
xchg
ins
stos
(bad)
push
push
fldenv
inc
inc
iret
mov
ret
bound
js
pop
push
rcr
push
sub
sbb
xlat
arpl
sbb
or
dec
push
cmps
fild
jae
not
ror
out
test
jle
mov
lods
addr16
mov
and
sbb
lea
xor
loop
jecxz
sub
push
div
hlt
push
outs
push
sbb
sbb
into
daa
ja
fcom
sahf
sbb
add
retf
aas
mov
fsub
loop
int
add
xor
sub
mov
aaa
inc
adc
ds
and
push
retf
jmp
sti
xor
mov
xor
mov
xchg
cld
mov
loopne
imul
addr16
(bad)
sbb
aam
pop
jne
imul
shl
sub
test
ja
mov
mov
enter
xchg
push
call
push
movs
dec
jp
mov
in
push
cli
pop
inc
dec
mov
rol
loope
xor
add
int3
je
pop
add
cwde
pushaw
ja
cmps
imul
je
xchg
inc
mov
ins
mov
cmps
lock
push
aam
ret
rol
arpl
cmp
sbb
aas
fst
loop
cmp
test
cmp
fisttp
adc
pop
fdiv
inc
leave
mov
fwait
repnz
int3
push
movs
xchg
xor
frstor
enter
jmp
inc
push
imul
loopne
fs
ins
mov
pop
ror
(bad)
arpl
sbb
pop
arpl
xchg
popf
int3
dec
pop
or
inc
rol
sbb
dec
sar
adc
and
or
jae
xchg
(bad)
pop
(bad)
rol
pop
test
out
ret
(bad)
lods
scas
push
sbb
jmp
xor
sbb
inc
fadd
pop
jne
test
(bad)
push
test
pop
sub
data16
push
jmp
pop
sti
push
sbb
cmp
loope
outs
cmp
iret
jl
xor
jno
and
scas
mov
sbb
mov
jo
mov
adc
loopne
jns
push
sbb
shl
dec
(bad)
sti
shl
cdq
arpl
push
je
add
xchg
sub
inc
nop
adc
mov
aas
hlt
ret
sub
jne
loop
xchg
mov
or
jmp
dec
dec
push
out
mov
test
shr
fiadd
std
push
xchg
cmp
ss
popf
call
cwde
in
push
sbb
jp
inc
mov
xor
mov
and
lods
jmp
clc
std
push
add
out
or
add
xchg
ins
push
pop
sbb
movs
je
outs
push
pop
movs
dec
lods
aas
ret
jne
clc
jnp
dec
ja
pop
pop
out
push
dec
inc
sbb
dec
jecxz
nop
xchg
mov
push
push
push
jmp
(bad)
dec
jnp
mov
daa
xchg
stos
retf
(bad)
ror
mov
cmp
cld
dec
bound
and
mul
push
cmp
jne
les
(bad)
mov
idiv
int
dec
or
dec
arpl
jge
cwde
hlt
test
popa
or
mov
int3
aas
or
aas
xchg
fcmovb
mov
test
xchg
hlt
loope
clc
sub
adc
pop
sbb
sub
inc
jne
popf
pop
loop
cmps
adc
add
fwait
lahf
or
inc
es
(bad)
push
popa
push
push
iret
fcomp
clc
(bad)
xchg
add
sbb
jo
dec
sub
scas
xchg
mov
add
push
cmp
neg
push
or
xchg
lock
mov
daa
fld
cmp
call
loope
stos
xor
jge
shl
arpl
call
retf
inc
imul
cmps
test
sbb
pop
dec
mov
fld
jecxz
outs
add
das
adc
fst
mov
inc
jecxz
rcr
enter
add
aam
jo
imul
imul
outs
js
enter
push
ret
movs
lea
in
sub
dec
cmp
pop
les
push
cs
loope
cmps
loopne
fsub
clc
loopne
test
jae
and
sbb
ins
std
iret
inc
ins
in
and
jg
mov
cs
inc
sbb
mov
adc
cmp
in
mov
jnp
ss
popf
pcmpgtb
call
sub
mov
mov
jbe
adc
daa
mov
(bad)
stc
xor
pop
mov
xor
adc
adc
mov
push
fisttp
mov
jmp
push
fistp
xor
clc
(bad)
inc
cmps
loop
mov
push
adc
aam
icebp
and
mov
je
aam
fist
stos
repz
add
or
mov
cmp
sahf
daa
ins
in
aad
stc
push
pop
ficom
sub
or
pusha
bound
jbe
stc
iret
adc
dec
mov
pop
dec
imul
jb
cmp
push
mov
daa
mov
mov
inc
loopne
pop
repz
ja
ds
and
aas
sub
jle
arpl
mov
mov
pop
push
call
inc
adc
fidiv
sbb
sub
nop
push
sbb
inc
push
push
mov
push
and
push
xor
sub
pop
xor
cwde
mov
out
fcom
mov
hlt
cdq
mov
pop
mov
cmp
scas
mov
icebp
or
retf
mov
jl
pop
xor
sbb
or
xchg
out
mov
ret
jbe
ds
call
xlat
je
leave
aaa
rcl
enter
clc
out
xchg
(bad)
adc
cdq
shl
cmps
nop
dec
mov
xor
ret
scas
sti
jmp
or
jle
xchg
ficom
push
cmp
xchg
leave
in
push
xor
add
es
and
aam
jmp
outs
mov
jnp
add
ret
int3
fs
mov
pop
dec
xor
mov
dec
and
xchg
cmp
test
dec
adc
xchg
or
lock
sar
aad
jno
cmp
dec
(bad)
aam
push
xchg
sbb
xchg
addr16
cmp
jno
fnstcw
sbb
sbb
jbe
and
stos
cmp
hlt
xor
jp
mov
inc
adc
cwde
test
addr16
sbb
jns
es
mov
out
xchg
and
lock
pop
dec
cmp
scas
or
add
js
or
jmp
and
push
int
leave
push
sub
das
(bad)
sub
iret
xchg
or
arpl
ins
jp
fucomp
retf
jge
add
cwde
cmp
mov
xchg
xchg
pop
test
push
loop
add
inc
(bad)
jle
(bad)
in
jae
ret
aad
cmps
xor
leave
popa
imul
ins
mov
je
rcl
stos
sbb
movs
and
out
outs
test
xor
or
retf
push
popf
call
push
xor
test
arpl
daa
ret
sub
jge
into
add
cs
cmps
movs
push
in
sar
cmp
sbb
ins
fbstp
arpl
retf
or
cmp
aad
lods
dec
outs
mov
adc
popa
daa
push
js
loopne
lods
and
ins
push
xor
jmp
jae
pop
pop
jmp
rcl
daa
mov
scas
mov
mov
cdq
mov
inc
jl
add
sbb
mov
ss
xchg
out
nop
and
enter
push
ret
add
(bad)
sbb
and
or
repz
das
mov
add
sahf
lods
jbe
cld
or
call
cmp
and
inc
pop
stc
dec
pushf
inc
mov
mov
das
arpl
gs
fnstenv
push
sub
out
out
push
es
mov
inc
jmp
arpl
outs
fisub
xor
out
pop
push
mov
stos
out
aam
mov
repnz
out
pop
out
lock
mov
(bad)
cmc
std
jl
mov
movs
push
ins
sbb
xchg
mov
mov
mov
je
repnz
cli
out
jmp
jae
out
push
jl
jle
push
jne
loope
div
adc
(bad)
pusha
stc
ret
or
fnclex
sbb
inc
outs
sbb
pop
inc
stc
add
hlt
scas
in
mov
xor
sbb
sub
enter
test
xchg
sub
mov
aam
(bad)
xchg
and
mov
add
mov
push
or
test
xchg
cmovne
jne
out
pushw
xchg
xor
push
scas
rcl
and
scas
dec
or
mov
sbb
push
mov
shl
lods
call
fdiv
pop
jns
jnp
dec
sbb
xor
por
retf
(bad)
stc
inc
sbb
mov
cmp
mov
cld
mov
push
arpl
push
sbb
add
mov
setno
dec
and
cs
lea
test
mov
or
cld
rol
(bad)
daa
pop
test
outs
stos
fidiv
sbb
push
fld
mov
iret
add
mov
test
mov
ss
data16
mov
cmc
aaa
dec
mov
jae
int
cmps
mov
loop
push
push
fcom
add
call
sub
ds
cmp
and
push
push
xor
cmp
add
add
fwait
jb
(bad)
push
or
arpl
push
iret
dec
outs
add
iret
fld
mov
inc
pop
mov
cmp
(bad)
jmp
xor
cmps
jge
mov
popa
or
xchg
mov
push
jno
(bad)
dec
hlt
inc
xor
and
rcr
adc
test
sbb
popf
jb
int3
mov
aas
dec
xor
sub
leave
dec
sub
inc
xchg
dec
in
fidivr
push
cmp
pop
mov
(bad)
sbb
aad
and
mov
xlat
rcl
mov
jne
mov
les
mov
popf
xchg
sbb
sub
mov
xor
pop
xor
jge
sbb
mov
add
push
aam
sub
out
jae
hlt
mov
sbb
push
sub
mov
xlat
xor
daa
pop
xor
xor
out
pop
mov
inc
or
je
mov
jl
sbb
xor
mov
out
mov
jmp
fst
cmp
(bad)
(bad)
imul
push
fcmove
popf
(bad)
sub
xor
fwait
loopne
enter
ss
xor
adc
dec
pop
push
pop
push
jmp
dec
fstp
push
sub
cmp
sbb
dec
aad
adc
(bad)
retf
pushf
mov
(bad)
dec
call
(bad)
in
out
xor
pushf
push
hlt
xor
mov
push
retf
jl
ins
cmp
scas
imul
mov
sbb
lea
xchg
cld
or
xor
loope
ret
mov
and
sbb
sbb
or
xchg
out
pushf
push
dec
daa
lahf
cmc
jl
xor
and
mov
sub
mov
fst
xchg
push
inc
jne
pop
push
mov
inc
hlt
retf
ss
lea
lock
mov
xor
or
neg
pushf
mov
stos
loope
or
push
push
fld
push
scas
dec
push
out
idiv
sub
cmp
xor
jo
jno
outs
mov
clc
int
adc
inc
sub
or
mov
(bad)
mov
ins
(bad)
mov
or
ret
jmp
cmps
jae
loop
xchg
addr16
jbe
shl
sbb
sub
movs
adc
jge
pop
dec
(bad)
cmp
add
jns
jns
out
jg
add
movs
push
push
dec
jmp
add
fild
ds
inc
xor
sub
fild
cld
mov
add
add
cmp
pop
push
jno
sahf
inc
or
sbb
inc
mov
cmp
sahf
pop
scas
in
dec
mov
sub
lock
out
jnp
neg
sbb
cmp
sbb
stc
mov
adc
(bad)
jmp
retfw
pop
in
jo
pusha
(bad)
js
mov
and
pop
xchg
pop
lahf
xchg
mov
add
dec
cs
jp
jle
mov
pop
cli
jns
xor
mov
lods
xchg
enter
into
mov
fnsave
fidivr
push
pop
cli
aad
jg
imul
mov
imul
xor
adc
and
cmp
and
sub
test
fld
sub
sub
pop
mov
test
dec
scas
pushf
cdq
dec
mov
pushf
xor
sub
es
and
hlt
pop
cmp
push
mov
das
mov
retf
xor
mov
out
ret
push
loop
xchg
push
lods
sbb
js
adc
ret
push
mov
gs
(bad)
int
mov
jno
call
xchg
jg
jmp
call
inc
push
adc
push
leave
iret
(bad)
ins
pop
push
add
xchg
push
push
lock
imul
jecxz
jns
aaa
add
test
and
cdq
jnp
pop
or
or
out
dec
jmp
cmp
pop
dec
push
movs
pop
cmp
ret
sti
popa
adc
mov
les
arpl
push
leave
ins
or
push
dec
cmp
pusha
jecxz
pushf
ret
push
xchg
mov
xor
pop
stos
jmp
mov
ret
popa
movs
cdq
cmps
jmp
test
mov
in
add
test
rcr
out
adc
pop
ds
cmps
in
test
(bad)
xchg
cs
jnp
lods
int
fs
nop
cs
ins
daa
mov
push
mov
scas
push
push
and
or
cdq
data16
movs
aad
xchg
retf
xchg
dec
leave
mov
mov
dec
push
jle
sbb
fwait
cmp
clc
imul
adc
and
lods
push
xchg
push
inc
enter
xchg
mov
dec
sbb
jl
scas
(bad)
imul
dec
imul
jns
push
lods
xchg
je
ins
(bad)
aas
xchg
xchg
jp
xor
shr
lahf
adc
inc
repnz
pushf
or
add
fwait
sbb
adc
movs
rdtsc
call
loope
xor
(bad)
bound
call
or
xor
add
inc
(bad)
or
rcl
push
shr
(bad)
fbld
les
xor
pop
dec
xor
lock
scas
xchg
push
clc
fdiv
jmp
clc
push
mov
inc
push
das
push
dec
movs
test
rcr
aas
arpl
test
fs
dec
mov
fst
xchg
(bad)
je
push
or
inc
xchg
mov
xchg
jne
sbb
test
mov
stos
fldcw
into
dec
stc
mov
das
fxch
jge
(bad)
scas
adc
push
xchg
push
mov
pop
popa
pop
je
cmp
dec
rcl
jnp
push
retf
fcomi
fnstenv
or
add
sub
add
pop
int
lea
inc
test
enter
test
mov
loopne
inc
imul
cwde
jo
jl
mov
and
inc
push
test
imul
icebp
movs
mov
mov
xchg
call
mov
iret
or
or
or
mov
jg
cmc
sti
je
xor
cmc
inc
cwde
xchg
ss
sbb
out
adc
dec
push
cmp
stos
lods
pop
add
xchg
nop
push
fistp
pop
sbb
movs
outs
cld
cmp
mov
sub
adc
daa
cmp
mov
int
xor
test
mov
lock
sti
add
xor
push
mov
je
or
imul
loop
jae
(bad)
add
aam
lds
jno
xchg
nop
nop
push
push
cmps
sub
pop
adc
or
sub
add
lds
dec
ss
push
notrack
fmul
cmp
out
or
mov
xchg
in
aaa
ins
movs
dec
imul
test
mov
fdivr
scas
das
fisub
out
jns
xor
cmp
inc
inc
shl
cwde
lods
jg
pusha
dec
xor
mov
add
fstp
xchg
enter
push
pushf
and
pop
push
xchg
(bad)
mov
xor
jnp
bnd
in
dec
outs
movs
add
xchg
push
repz
cld
je
xlat
call
test
mov
nop
push
lods
push
push
test
xor
jnp
movs
(bad)
lock
xchg
push
and
test
xor
nop
imul
mov
clc
xchg
or
ins
outs
(bad)
bound
add
icebp
movs
(bad)
fadd
xchg
nop
call
xchg
add
push
adc
dec
and
(bad)
push
mov
dec
mov
pop
out
in
dec
sbb
mov
cmc
scas
mov
int3
cld
popa
mov
mov
jns
jecxz
loop
icebp
mov
sbb
sbb
adc
lods
(bad)
xchg
inc
mov
cli
jbe
cmp
hlt
lds
mov
lock
cwde
(bad)
(bad)
mov
movs
adc
cmp
enter
mov
jle
add
out
fst
jmp
and
(bad)
stc
and
aam
add
(bad)
xlat
into
stos
gs
ror
int3
and
inc
jbe
test
lods
pop
adc
daa
jge
popa
shr
push
add
bound
fistp
sub
mov
jns
push
into
xchg
sbb
mov
adc
push
push
in
adc
aad
(bad)
cdq
imul
dec
push
retf
sbb
cmps
xchg
mov
push
xor
dec
lods
sahf
mov
xchg
sbb
mov
scas
inc
sub
out
sbb
pop
xchg
(bad)
cwde
jmp
xor
outs
jmp
sub
lock
loop
sahf
bound
gs
cld
lahf
jmp
sbb
(bad)
fstp
xor
or
and
aad
mov
out
push
arpl
adc
adc
aas
mov
sti
mov
sbb
inc
jp
ds
iret
add
(bad)
shr
pushf
adc
sub
nop
sti
shl
mov
xor
adc
scas
mov
cs
aaa
leave
enter
pushf
rcl
add
sub
cmps
aaa
xchg
cwde
int3
outs
(bad)
std
jmp
call
mov
test
jge
movs
ins
xchg
sub
and
mov
jbe
repnz
xchg
xor
cmps
lea
and
or
jg
mov
dec
clc
sub
arpl
mov
popa
loopne
sbb
adc
sbb
mov
fs
xchg
jae
cmp
test
in
and
pop
(bad)
pop
sbb
iret
cmp
cmc
adc
pushf
in
jge
sub
push
inc
leave
jg
jmp
jb
mov
hlt
pop
xor
mov
push
lahf
push
stos
pop
mov
sbb
sub
mov
fidiv
lea
(bad)
(bad)
cmp
push
movs
int3
jp
js
jmp
push
mov
xor
and
push
ins
inc
sbb
rol
mov
pushf
dec
hlt
sub
push
push
xchg
mov
xchg
xor
inc
in
xchg
popf
mov
sub
test
inc
pop
sbb
shr
setg
enter
inc
iret
mov
dec
adc
dec
push
inc
cmp
xor
sub
xor
pop
jl
mov
mov
fwait
inc
cmp
loope
sbb
xchg
mov
enter
xor
dec
test
mov
pop
or
xchg
mov
cmps
shl
ins
or
push
sub
stos
mov
inc
stos
xchg
sub
out
xchg
or
hlt
push
movs
mov
add
mov
or
xlat
adc
mov
pop
push
test
out
push
ficom
test
mov
sub
arpl
mov
sbb
in
lods
jle
xor
mov
mov
inc
(bad)
jle
or
push
aam
imul
xchg
dec
movs
push
inc
inc
test
stos
dec
mov
sar
pop
cwde
cmp
in
test
mov
in
mov
push
xchg
xor
fidivr
jmp
mov
or
ja
mov
fidivr
xlat
sbb
dec
enter
and
mov
in
adc
sub
jnp
sub
jns
jmp
jbe
outs
dec
cdq
shr
and
dec
mov
icebp
pop
loopne
mov
mov
movs
(bad)
cld
cwde
lods
fcomi
sub
(bad)
cmc
call
mov
jecxz
jbe
sub
cmp
cmp
enter
rcr
mov
mov
cmp
(bad)
aas
cmp
jmp
(bad)
outs
mov
scas
imul
inc
sbb
jb
cdq
movs
push
repz
(bad)
(bad)
imul
pusha
mov
jnp
data16
mov
pop
imul
xor
repz
cmps
mov
cmc
or
call
les
mov
lock
or
das
paddd
add
pop
fcomi
dec
dec
cmps
imul
bound
pop
add
loope
cmps
xchg
cmp
(bad)
shr
cwde
jmp
pop
adc
push
cld
ds
dec
mov
inc
mov
or
and
(bad)
jne
movs
inc
dec
jbe
jmp
and
fist
xor
cmp
cmp
imul
repz
and
inc
add
div
pusha
jg
stos
push
sub
lods
and
mov
pop
cmp
lahf
hlt
mov
cmc
xor
dec
repnz
movs
int3
rol
cmp
or
xchg
into
mov
xchg
xor
mov
stos
call
dec
cmc
test
mov
jne
js
cli
cmc
leave
or
jecxz
pop
scas
push
cmp
sub
mov
mov
jg
push
xchg
fidiv
and
int
mov
les
mov
push
pop
mov
dec
je
in
jns
ret
inc
xor
xchg
lahf
mov
adc
sub
enter
or
cld
xchg
cli
adc
xchg
mov
cmp
sbb
arpl
xchg
arpl
ds
sbb
cwde
sbb
in
test
jmp
in
out
inc
jno
and
add
mov
mov
sub
add
adc
jecxz
or
xor
sub
pusha
inc
push
mov
lds
cmp
cld
jmp
int3
push
daa
xor
test
aad
pop
jne
(bad)
mov
js
push
(bad)
(bad)
iret
xlat
and
cmp
dec
xchg
jmp
lods
inc
out
push
lock
and
test
lahf
dec
xchg
leave
adc
and
cdq
ds
add
mov
adc
inc
js
(bad)
outs
imul
stos
inc
xchg
sar
xor
xchg
push
dec
loop
inc
and
jno
sub
and
and
jbe
sbb
mov
sar
push
pop
dec
dec
ins
jl
xor
push
jne
sahf
jl
jmp
scas
sub
dec
gs
fsin
dec
data16
movs
shl
jge
fidivr
mov
mov
fucom
aam
pop
xor
scas
hlt
in
call
movs
std
(bad)
in
mov
out
ret
mov
dec
out
and
div
adc
xor
dec
inc
cwde
jo
loop
sbb
or
xor
xor
mov
repnz
xchg
pushf
push
push
leave
cmp
daa
sub
xchg
mov
into
out
lods
jmp
call
adc
pop
std
imul
ins
arpl
loope
das
pushf
dec
icebp
test
(bad)
mov
pop
mov
and
fstp
add
stos
call
out
adc
dec
inc
sub
callw
mov
leave
adc
or
cmps
xchg
adc
dec
fs
and
inc
sbb
fiadd
rol
cmp
inc
pop
cmp
(bad)
daa
pop
or
xchg
inc
adc
lods
jp
mov
pop
mov
je
cmc
inc
inc
dec
xor
movs
es
jbe
imul
sbb
mov
mov
sti
aaa
jno
jmp
xchg
(bad)
cld
nop
ror
push
fcom
pop
mov
mov
mov
repz
loop
push
test
sub
pop
out
mov
mov
mov
mov
loopne
mov
dec
aad
sub
in
xchg
pop
shr
aam
lock
xchg
jbe
dec
adc
sub
aam
nop
inc
or
call
sub
xor
mov
sub
push
sub
mov
xchg
not
or
gs
xchg
and
std
aas
dec
push
hlt
inc
mov
mov
pushf
cdq
fdivr
shl
jl
test
push
sub
iret
xchg
xchg
int3
cmps
add
push
call
mov
mov
enter
mov
pusha
enter
ins
outs
sahf
inc
and
popa
movs
mov
adc
pop
ds
mov
mov
pusha
inc
jne
or
xor
jmp
out
imul
and
je
call
sbb
cmp
sti
xor
les
xchg
sbb
push
aas
sti
mov
sbb
push
cs
or
adc
pop
push
xchg
jno
stos
xchg
pop
cmp
jle
fst
in
jne
add
dec
rcl
out
in
leave
jmp
cs
pop
les
or
ja
xchg
les
movs
mov
push
mov
xor
aas
fs
outs
test
sbb
fisubr
lds
outs
sub
jg
mov
retf
dec
loope
or
mov
cli
and
dec
repnz
mov
mov
add
and
(bad)
in
mov
out
gs
dec
repz
jae
xchg
pop
imul
dec
das
xchg
fbld
enter
and
fldenv
ret
lea
add
scas
gs
dec
or
mov
cmps
pop
add
jae
mov
fmul
int3
mov
push
outs
push
test
(bad)
es
cmp
jno
dec
inc
ins
xchg
test
imul
or
retf
dec
jb
add
add
jmp
jnp
push
jae
cmps
iret
fs
and
and
pop
leave
mov
sbb
(bad)
add
out
rcr
iret
mov
lds
(bad)
(bad)
inc
je
scas
fwait
mov
and
jo
cdq
cmp
mov
fmul
mov
cmp
adc
jecxz
push
lock
xlat
cmps
and
(bad)
fwait
int3
inc
out
cmp
iret
sub
xchg
pop
add
inc
sub
mov
(bad)
sub
sbb
cld
imul
jbe
adc
xor
out
or
ja
fs
jg
mov
(bad)
cmp
pop
mov
dec
jo
jbe
mov
sub
mov
xor
push
sub
test
cwde
(bad)
mov
imul
std
dec
xor
sub
cmc
pop
shr
int
dec
xor
cmp
outs
movs
push
popa
loope
ins
adc
lods
xchg
loop
mov
cmp
jne
fdivr
xor
cmp
cmp
addr16
mov
push
(bad)
cdq
aam
cmp
imul
xchg
sbb
cld
dec
int3
push
lds
fldcw
test
arpl
sbb
or
ret
movs
ds
sub
lock
or
sub
pop
cmp
push
(bad)
ds
xlat
loopne
mov
mov
fsub
and
sahf
je
xchg
in
popa
ret
sub
mov
push
lods
sub
cdq
aas
int
cmp
sbb
mov
mov
cmp
mov
adc
inc
shl
(bad)
into
push
in
stos
sub
inc
nop
or
jge
mov
clc
test
test
je
sub
mov
test
clc
jo
push
and
jge
imul
dec
or
nop
sub
imul
loope
dec
mov
mov
ins
jmp
pop
retf
mov
jne
push
adc
mov
mov
movs
sub
aaa
cmp
sub
iret
xor
dec
push
sbb
inc
fs
xor
in
push
aad
push
mov
push
sahf
lods
es
mov
sti
cmps
jl
pop
xor
popa
xor
xor
movs
mov
fstp
fild
int3
retf
xchg
xor
push
rcr
jbe
int
popf
adc
int3
shr
mov
pusha
jp
aad
mov
fsub
cli
add
(bad)
xor
les
xlat
mov
lock
popa
mov
pop
popa
dec
rol
fisttp
xchg
packssdw
pop
sbb
das
cmp
adc
sub
enter
inc
aaa
dec
cmc
jmp
or
mov
push
push
popa
adc
push
dec
jecxz
shl
sbb
pop
dec
push
test
hlt
fld
sbb
fst
push
mov
sbb
mov
movs
xlat
and
scas
lea
and
ror
xchg
mov
add
ja
mov
xor
imul
mov
leave
ja
jns
jle
scas
and
mov
ret
adc
dec
adc
sbb
jnp
dec
daa
clc
or
test
inc
and
add
(bad)
jne
loope
scas
cmp
outs
xchg
push
cmp
push
pushf
shl
or
ss
fwait
mov
(bad)
lods
jle
pop
shl
xlat
(bad)
xchg
ficomp
aam
scas
(bad)
mov
fbld
push
pop
mov
jg
or
es
mov
pop
mov
(bad)
xchg
test
mov
movs
sub
push
mov
inc
mov
cmps
or
jns
mov
hlt
(bad)
clc
sahf
dec
popa
push
clc
out
clc
mov
mov
mov
mov
jmp
push
inc
sub
outs
out
xchg
popf
retf
or
cmps
(bad)
cmp
movlps
je
stc
sub
mov
mov
xor
and
shl
test
push
in
adc
jo
inc
ss
(bad)
gs
pop
push
lds
cmp
xor
and
xor
in
aas
shl
leave
fistp
movs
daa
dec
adc
out
rcr
les
fcmovnu
mov
nop
mov
fs
jmp
dec
js
shl
pop
dec
dec
repz
push
pop
fnsave
test
mov
int3
nop
mov
lea
or
jo
jecxz
into
jle
add
or
mov
js
and
mov
fmul
pop
jecxz
popa
xchg
mul
jl
hlt
bound
pop
inc
out
neg
push
int
cmp
movs
or
pop
sbb
out
dec
pop
test
push
(bad)
cmp
jg
xor
js
test
jecxz
adc
mov
out
push
js
mov
pop
adc
shl
mov
(bad)
add
mov
jbe
xor
pop
and
frstor
push
jmp
pusha
dec
shl
std
in
push
fsub
push
(bad)
adc
and
sti
sub
call
enter
cmps
retf
bound
cmps
or
out
movs
ret
adc
inc
and
loop
fild
adc
push
lds
jno
push
sub
data16
aaa
test
jae
call
fisubr
or
ja
cmp
sub
push
jp
xor
sti
push
retf
call
dec
stos
inc
inc
xor
cdq
push
jge
push
clc
cmp
pop
addr16
add
cmc
inc
dec
push
adc
dec
jno
push
adc
ds
sub
in
sar
xchg
or
pop
push
cwde
retf
sbb
mov
add
sbb
cmp
aam
aad
outs
sti
(bad)
push
hlt
pop
add
call
dec
mov
(bad)
stos
repnz
lahf
adc
push
movs
in
retf
clc
arpl
sbb
repz
mov
xor
cmp
xor
in
pavgb
cmp
test
int
add
bound
mov
nop
pop
inc
mov
xor
pop
cs
or
cmp
stos
ins
xor
dec
xchg
das
and
sahf
es
sub
xor
test
sbb
fdivp
cmp
pop
aam
aas
mov
cmp
in
rcr
jb
jmp
aad
pushf
shl
js
pop
pop
imul
js
loope
dec
and
push
arpl
aas
aam
retf
mov
ja
popa
in
dec
retf
xor
pop
cmp
xor
std
neg
mov
dec
(bad)
jge
(bad)
xor
dec
dec
adc
hlt
push
mov
dec
ins
push
and
ror
je
scas
or
es
loopne
add
dec
div
dec
dec
bound
mov
fdiv
test
test
out
add
in
imul
fst
push
and
cmp
pop
mov
aam
xchg
pusha
jo
imul
cdq
jmp
push
fistp
les
mov
mov
lods
jecxz
push
sbb
sbb
xchg
out
(bad)
aam
sbb
lock
and
jb
mov
add
mov
xchg
bound
ins
cmps
addr16
sbb
xor
inc
xchg
xchg
dec
add
js
add
outs
not
mov
cmp
mov
stc
hlt
cmc
mov
or
aad
(bad)
fincstp
add
sahf
sti
movs
mov
in
cmc
jle
fcmovbe
inc
mov
jns
test
mov
jno
lds
jb
xor
pop
xor
pop
ss
cmc
loopne
aam
ret
out
fidivr
sbb
inc
mov
and
push
inc
or
inc
cmc
pop
jne
loopne
and
rol
add
out
and
es
rcl
mov
mov
je
fwait
sbb
jl
imul
das
ret
mov
retf
aaa
js
out
mov
ficom
xchg
add
xchg
mov
retf
sbb
xor
adc
ins
adc
pop
or
clc
shl
or
jmp
out
in
sub
mov
and
mov
sub
aas
mov
mov
push
sti
scas
dec
pushf
rcl
fs
sub
sub
fisub
sbb
popa
pushf
(bad)
add
mov
adc
inc
(bad)
xor
jg
push
movs
dec
xchg
retf
xor
cmp
push
pop
mov
pusha
push
push
jno
ror
stc
sbb
or
jne
mov
cmp
lods
sub
or
aaa
sti
inc
movs
jmp
aam
cmps
cmp
pop
jmp
scas
push
ret
jge
dec
iret
ja
pop
popf
ret
fsubr
fist
mov
mov
ret
and
mov
fucomi
xchg
add
pop
stos
aas
jge
xchg
test
arpl
xor
retf
(bad)
mov
cmp
(bad)
fwait
popa
xchg
aas
pusha
test
repnz
popf
jno
sub
cdq
inc
adc
xchg
cmp
xchg
inc
shr
push
in
test
or
mov
or
es
xchg
pop
adc
or
and
sub
cmps
ds
dec
shl
shl
(bad)
shl
(bad)
mov
mov
adc
mov
xchg
std
fdiv
out
cmp
mov
pusha
jns
das
add
and
outs
cmp
fisttp
cld
xor
in
out
xor
mov
mov
popa
mov
add
cdq
das
dec
push
test
out
fadd
(bad)
cmps
adc
pop
repnz
mov
lods
into
mov
adc
cli
mov
les
ficom
cmc
sbb
icebp
push
ret
cmp
sti
and
inc
jb
xor
sub
out
rcl
and
xchg
repnz
push
adc
mov
pushf
xchg
(bad)
out
retf
repnz
int3
fsub
xchg
xchg
adc
pop
repz
dec
pop
into
aam
lahf
in
lea
aas
pop
(bad)
bnd
(bad)
popa
ret
les
jnp
dec
div
(bad)
lock
jl
enter
cmp
sub
xor
mov
pop
movs
mov
mov
jmp
(bad)
test
adc
loop
or
xor
cdq
pop
stos
bound
inc
pmullw
or
ins
mov
mov
and
not
adc
std
(bad)
mov
xor
js
mov
popf
push
enter
inc
sbb
shl
imul
and
aas
js
repnz
repz
fucom
mov
(bad)
sbb
stos
inc
stos
inc
mov
xor
cmp
or
cld
adc
out
sbb
pop
sbb
stos
jo
push
sbb
mov
and
and
push
mov
shl
aaa
mov
inc
cmp
mov
dec
in
shl
sar
ficomp
or
mov
or
xchg
pushf
movs
cmps
and
jge
jge
mov
nop
stos
jmp
jl
dec
dec
sti
mov
adc
pop
cdq
fld
or
xchg
jno
lock
test
mov
cwde
enter
mov
jbe
rcl
shl
xchg
and
or
or
int
pop
popf
xor
mov
(bad)
xor
stos
std
out
sub
fs
cli
aam
repnz
push
jecxz
jno
sti
xchg
xchg
add
sar
paddw
shl
arpl
cld
add
dec
xor
inc
adc
pop
fdivr
mov
mov
inc
(bad)
fsub
hlt
in
dec
icebp
fwait
inc
push
mov
jno
inc
pop
adc
mov
jbe
ret
adc
push
mov
nop
lods
cdq
inc
push
std
push
or
popf
xor
pop
xchg
dec
js
pop
int3
fst
movs
inc
aaa
push
leave
jmp
fwait
jns
pop
sub
ins
xor
fnstenv
inc
xchg
add
mov
mov
mov
sbb
lods
sar
ds
aas
jp
aas
pop
mov
inc
jo
fsubr
aad
bts
mov
jae
sbb
adc
gs
retf
lock
jp
mov
cmp
ficom
out
pop
(bad)
sbb
mov
out
or
dec
jmp
stc
push
rcl
cli
retf
xor
jle
adc
adc
scas
jmp
or
or
les
pusha
add
loope
cld
ror
ins
stos
sub
ror
xchg
mov
fs
mov
cmps
aad
xchg
fdivr
jge
loopne
and
xor
xor
sub
add
jbe
mov
(bad)
sbb
mov
mov
out
xchg
lods
mov
mov
sbb
add
test
dec
mov
(bad)
movs
cmc
aaa
repz
sub
mov
push
(bad)
mov
add
xor
mov
mov
add
daa
jnp
enter
les
dec
rol
cmp
(bad)
scas
xor
shl
test
adc
iret
rcr
bound
not
aas
scas
push
xor
push
mov
mov
idiv
lds
call
ss
mov
(bad)
xor
retf
inc
popa
cs
xchg
jmp
jbe
jmp
arpl
gs
pop
ds
sbb
bound
mov
fstp
test
pavgb
std
add
mov
pop
lds
mov
cmp
xchg
in
lds
call
cld
jns
cld
dec
std
jmp
(bad)
jmp
(bad)
cmc
and
pop
jecxz
pop
fdivr
scas
or
push
lods
ficomp
mov
arpl
ss
je
stos
daa
push
popa
int
out
stos
mov
adc
adc
fistp
mov
dec
cld
stos
mov
or
mov
inc
xor
mov
push
pop
aam
jecxz
in
sub
or
push
add
lea
sub
pusha
or
(bad)
pusha
pop
out
sub
lahf
repz
pop
test
dec
and
pop
out
loope
sub
daa
aas
mov
pop
mov
add
cwde
jo
adc
jecxz
out
add
cmp
push
leave
imul
out
adc
test
mov
scas
in
pop
aad
mov
loop
mov
and
pusha
repnz
xor
shl
into
jb
lock
mov
(bad)
adc
xchg
pop
sub
imul
mov
(bad)
js
and
in
cmps
dec
adc
je
xor
sbb
repnz
pop
mov
jno
fwait
sahf
mov
dec
mov
mov
shl
sbb
into
ror
shl
xchg
mov
stos
ret
cli
adc
js
into
ss
jb
pop
mov
cmps
leave
adc
xchg
stos
push
out
std
inc
retf
pop
or
cmp
ds
cmp
pushf
push
pop
push
xor
add
pop
pop
inc
or
cmp
adc
pop
mov
cmp
add
adc
es
adc
mov
dec
mov
inc
daa
(bad)
and
or
and
cld
lods
pusha
out
push
mov
loope
xchg
sti
adc
(bad)
cmp
(bad)
push
test
jecxz
lock
mov
aad
xor
sbb
mov
fisub
test
enter
ins
in
shr
mov
sub
xchg
mov
or
rcr
mov
sbb
mov
push
cdq
dec
repz
and
(bad)
xor
sbb
dec
retf
sbb
arpl
in
dec
xchg
(bad)
mov
aam
xor
adc
cwde
inc
inc
dec
inc
fsub
aas
sbb
push
jge
icebp
mov
push
mov
push
mov
xchg
dec
stos
inc
jo
push
jbe
mov
jmp
jns
mov
lods
push
and
scas
push
test
leave
out
outs
(bad)
nop
lods
push
push
cmp
out
pop
scas
(bad)
xor
adc
pop
cmp
sbb
dec
pop
and
sahf
adc
(bad)
aas
stc
adc
in
ins
push
xor
and
cdq
xchg
inc
mov
jecxz
adc
jns
imul
aad
das
imul
aaa
das
mov
ss
inc
adc
call
jl
iret
imul
pop
popf
mov
ret
int3
xor
cld
rol
inc
jp
ficomp
inc
lods
cwde
mov
add
and
adc
out
jmp
ret
xlat
xchg
js
pop
push
cmps
add
sub
jmp
mov
movs
out
in
sahf
push
in
or
fisubr
das
stos
std
push
sbb
sub
fnsave
adc
inc
call
push
push
mov
jno
pop
push
xchg
sbb
pushf
fild
lods
test
fs
xor
into
(bad)
and
cld
jle
mov
dec
iret
cmp
fsubr
cmp
sub
push
adc
inc
pusha
ror
popa
mov
scas
inc
cs
mov
add
loop
xchg
cli
sbb
shr
std
sbb
loope
out
in
and
or
aad
sub
stc
movs
ja
jmp
mov
mov
cmp
movs
sbb
dec
xor
imul
mov
mov
outs
sti
adc
int3
arpl
add
jae
sbb
pop
mov
loop
xor
cmp
mov
js
add
hlt
sub
cmp
push
cmc
es
xchg
sub
repz
test
pop
jno
jle
call
add
cmp
imul
push
add
sbb
or
dec
add
adc
das
(bad)
in
popf
jge
sub
jl
loopne
addr16
repnz
int
loop
ja
nop
ins
jno
inc
jo
and
cmps
mov
sbb
mov
enter
das
retf
(bad)
popf
and
mov
pusha
bound
xchg
fsubr
xor
outs
js
aas
jb
aam
inc
inc
shl
icebp
xor
mov
scas
aad
push
pop
fisttp
push
lea
out
push
and
imul
in
and
and
popf
lock
cmc
cmc
pop
mov
push
xor
clc
jae
lods
repz
add
es
or
enter
in
lahf
inc
push
addr16
mov
(bad)
div
and
xor
popf
shl
cwde
std
dec
dec
(bad)
addr16
dec
add
int3
stos
pop
les
pop
or
and
push
mov
xchg
mov
cld
rcr
push
and
inc
js
arpl
inc
das
inc
test
xchg
imul
xor
mov
call
pop
xlat
aam
repnz
cmc
call
inc
sub
hlt
test
rol
int
push
xor
ins
adc
pop
mov
mov
push
xchg
jge
lods
in
sub
lea
dec
aas
dec
and
xchg
jnp
inc
jg
ret
pop
cld
or
int3
adc
mov
jne
push
sub
(bad)
cli
sbb
in
mov
cmc
mov
ror
push
jns
mov
addr16
xlat
in
fistp
push
cli
loopne
out
leave
jmp
pop
mov
or
pusha
add
push
shl
xchg
gs
cmps
call
out
pop
cmp
inc
out
mov
ins
jo
stos
shl
popf
or
push
push
cmp
sbb
inc
outs
inc
sahf
rcr
lods
outs
xchg
or
xor
int
pop
rol
out
or
xor
arpl
jl
sbb
pop
shr
mov
or
std
cld
push
xchg
ja
xchg
ins
(bad)
pop
pop
sbb
int
xchg
push
mov
mov
out
stos
xor
das
bound
mov
in
push
retf
retf
arpl
jmp
mov
jno
leave
pop
into
push
xchg
clc
sub
add
mov
mov
inc
pop
xchg
push
addr16
add
jno
inc
fistp
and
dec
cli
fcomp
fimul
outs
adc
xchg
add
xor
adc
gs
jecxz
stos
pushw
and
fsubr
fwait
xor
lods
mov
sub
adc
or
cwde
jmp
pop
cmps
mov
fstp
rol
loope
(bad)
retf
push
pop
or
(bad)
sti
adc
dec
inc
mov
in
enter
not
mov
dec
imul
cmp
lock
out
push
pop
push
mov
or
pop
jo
push
or
sub
ror
jns
hlt
dec
jmp
jmp
(bad)
jo
sub
push
sbb
repnz
fdivr
push
inc
sub
mov
or
iret
dec
mov
shl
(bad)
mov
push
push
mov
xchg
pop
jno
jle
pop
lea
in
xor
mov
mov
mov
mov
jae
clc
fidiv
fwait
sub
dec
popa
mov
dec
out
and
jbe
mov
mov
enter
pop
(bad)
lea
xchg
xchg
inc
jl
repnz
test
mov
mov
adc
ins
cmps
inc
mov
mov
bound
mov
out
cdq
test
hlt
mov
sub
pop
push
aam
shl
xor
stos
lea
call
xchg
retf
push
(bad)
pushf
idiv
stc
mov
lock
cmp
iret
and
xchg
in
sti
cld
inc
pop
or
adc
push
push
sub
mov
mov
push
add
inc
jns
and
retf
out
test
shl
js
pop
daa
test
push
aad
xchg
jecxz
cwde
fs
sahf
jbe
push
dec
repnz
pop
pushf
pop
xchg
in
xchg
inc
scas
js
retf
rol
push
mov
les
xor
adc
jbe
cmp
ins
dec
pop
pop
ds
mov
jl
mov
jo
imul
push
cmp
mov
in
jg
mov
jnp
xchg
push
sti
mov
movs
das
pop
pop
ins
das
out
aaa
sub
jp
cld
or
cmp
dec
shr
fst
xor
or
lods
stos
paddd
cld
mov
f2xm1
stos
jns
aaa
clc
pop
cmp
out
add
push
add
or
call
jo
add
jmp
ins
dec
mov
cwde
mov
js
(bad)
mov
pop
loopne
cmps
mov
(bad)
or
sub
mov
pop
idiv
(bad)
repnz
jmp
imul
outs
and
mov
fimul
or
xchg
outs
lods
ss
add
ss
aad
ret
xor
stos
jge
ins
xchg
add
popa
push
clc
ror
sbb
sbb
leave
das
scas
sbb
jns
aaa
mov
xor
loop
fisub
fidivr
mov
mov
or
and
ret
fidiv
leave
stos
shr
mov
or
cmp
icebp
repnz
pop
aad
leave
dec
iret
fwait
mov
outs
ds
call
jno
jmp
lods
mov
pop
gs
mov
gs
cdq
out
icebp
jns
popf
fcomp
imul
lock
sar
cwde
add
lock
xor
jmp
cmp
mov
and
dec
mov
bound
mov
inc
pop
pop
mov
std
sbb
jae
adc
lods
dec
in
or
pop
xor
xchg
mov
seto
nop
xchg
xchg
mov
in
jmp
xor
mov
inc
mov
outs
movs
mov
jno
push
mov
adc
loope
(bad)
lock
(bad)
xor
push
pop
push
das
daa
inc
pop
ins
mov
add
sti
lds
or
cs
cdq
daa
jb
adc
add
lahf
push
add
sbb
xor
mov
cmc
xchg
pop
(bad)
mov
call
fdiv
or
add
not
dec
in
imul
xor
leave
xlat
les
test
xor
shr
xor
jnp
dec
mov
xchg
add
daa
adc
push
mov
mov
std
add
jo
pop
push
push
xor
pop
sar
shr
push
mov
mov
repz
adc
mov
pop
adc
test
mov
push
inc
daa
xchg
sub
jb
xchg
ins
fcom
xlat
call
cmp
adc
je
les
popf
inc
arpl
mov
xor
dec
adc
das
js
popa
cmp
test
pushf
adc
mul
and
jbe
les
ja
push
dec
ss
pop
sub
scas
sbb
fbld
and
dec
das
and
pop
rcr
fsubr
xor
jmp
sbb
xor
xlat
retf
or
gs
inc
cwde
ret
cs
cmps
std
enter
lods
sub
dec
mov
fmul
xlat
xor
cs
out
test
fmul
lea
(bad)
and
fldcw
jle
daa
mov
fisubr
mov
movs
cmp
mov
vmovd
pop
aam
and
inc
outs
fwait
and
mov
mov
lock
xchg
fcom
(bad)
icebp
data16
adc
and
fcomi
mov
jle
pop
pop
jmp
(bad)
cmp
sbb
push
fwait
dec
adc
int
pusha
sub
adc
add
dec
movs
xchg
je
jmp
pop
jp
cmp
jp
adc
daa
call
int
xor
pop
xchg
jns
stc
aas
mov
mov
int
inc
inc
ja
movs
and
in
and
inc
pop
lock
cmps
cmp
shr
push
pop
gs
mov
je
retf
pop
sbb
mov
xchg
psubsb
fstp
mov
push
es
dec
push
cmps
mov
mov
shl
call
mov
cmps
jmp
or
sub
mov
call
scas
scas
lods
cmps
outs
cmp
rcr
mov
dec
inc
cli
and
sub
hlt
dec
imul
data16
stos
int3
jle
xchg
pop
or
or
popf
sti
or
js
xchg
mov
mul
ins
push
popa
mov
std
sub
icebp
xchg
push
sbb
std
aad
sub
sar
cmp
nop
fdivr
out
xor
add
sbb
xchg
and
mov
xor
call
xchg
in
and
movs
and
dec
and
or
lea
jno
fldcw
xchg
xor
xchg
xor
dec
jb
retf
mov
xor
(bad)
dec
aad
add
mov
jbe
mov
or
sbb
nop
fiadd
push
out
fsubr
sbb
das
mov
cwde
ins
add
push
mov
call
push
enter
es
fild
dec
jl
inc
mov
fwait
add
dec
mov
mov
cmp
mov
xchg
mov
pop
xor
shl
shl
addr16
cld
retf
or
and
xor
ror
sub
cmps
hlt
xor
push
inc
push
sbb
xchg
xlat
popa
jecxz
bound
pushf
push
adc
jbe
add
aam
scas
loope
icebp
jae
data16
pop
push
and
dec
mov
push
mov
out
add
xchg
sbb
sbb
mov
psrad
inc
pop
push
and
or
ror
loope
les
clc
lods
data16
inc
mov
jne
not
push
lods
and
sbb
pop
sbb
loope
mov
lahf
repnz
ret
in
(bad)
push
bound
cmp
sar
xchg
mov
sbb
jmp
outs
daa
sub
inc
sahf
scas
pushf
cli
hlt
jae
fs
dec
sbb
xchg
cs
adc
and
pop
mov
mov
and
mov
xchg
jnp
dec
dec
mov
sbb
imul
mov
nop
add
dec
in
out
ror
inc
sbb
adc
dec
jbe
cwde
adc
mov
dec
pop
and
and
jnp
leave
jecxz
scas
and
mov
jl
or
cmp
addr16
xor
arpl
jne
adc
jbe
cmp
jecxz
cmp
pop
shl
stos
mov
jecxz
movs
fsub
fdivp
or
retf
std
aaa
mov
ficomp
cmp
ss
pop
jne
test
fsubr
mov
push
dec
push
or
push
xchg
cmp
pop
or
pop
xchg
ds
mov
jnp
js
int3
shl
or
repz
jb
pop
mov
mov
les
ja
pop
hlt
push
push
push
push
adc
xchg
imul
sahf
mov
jl
mov
and
daa
lea
push
mov
into
mov
inc
mov
mov
ds
bound
pop
jns
and
outs
mov
fdivr
mov
jecxz
int
pusha
adc
inc
dec
loop
arpl
sbb
pusha
sub
into
xor
cwde
or
in
fxch
sub
inc
sbb
mov
cmc
mov
mov
clc
ins
fmul
popa
mov
push
std
mov
xlat
pop
nop
push
and
jmp
mov
test
mov
cmp
adc
out
cmp
pop
in
leave
mov
rcr
ins
sub
xor
jge
out
lock
jb
out
mov
in
sub
dec
jl
jmp
daa
push
bound
addr16
je
bnd
call
arpl
aad
mov
loopne
int3
loop
push
gs
in
mov
fs
cmp
add
imul
aad
in
sbb
test
fdivr
or
or
sbb
aad
sbb
mov
xchg
mov
test
call
shr
loope
mov
mov
mov
xchg
jg
pop
test
sbb
not
pop
pop
push
fst
mov
mov
inc
jge
(bad)
test
fs
popa
sub
movs
cmc
adc
jae
dec
pop
pop
mov
jmp
inc
push
push
pop
mov
enter
(bad)
jns
out
dec
cmp
out
test
fisttp
xchg
in
mov
push
fs
inc
jae
inc
jl
scas
mov
cmp
inc
inc
and
push
aam
mov
stos
xchg
jmp
sub
test
xchg
add
xchg
dec
mov
xor
fcom
sbb
jecxz
sub
and
mov
daa
stos
mov
fcmovu
loopne
in
push
aad
out
push
fld
sub
push
add
out
pop
loop
mov
pusha
and
out
jp
dec
(bad)
aam
movs
fild
or
daa
push
js
xchg
js
test
jno
jbe
or
push
lea
es
outs
fidivr
(bad)
lahf
outs
js
mov
add
cld
ins
aas
call
jmp
sub
jecxz
cdq
in
out
(bad)
cmps
in
xchg
ins
adc
lea
frstor
in
dec
cli
cmps
push
and
pop
push
jae
dec
out
ds
repz
repnz
call
push
jb
loopne
push
out
pop
xchg
inc
lea
(bad)
out
repz
sbb
fsubr
loope
dec
sub
mov
push
add
xor
test
inc
push
cmps
mov
sub
or
sti
bound
into
mov
movs
jno
pop
mov
ret
xor
xor
mov
xor
jge
pop
push
push
sbb
std
rcr
ds
or
mov
sub
nop
mov
sub
out
adc
pop
add
fisttp
dec
(bad)
inc
sbb
imul
imul
adc
shl
scas
inc
pop
pop
xchg
dec
clc
fs
loop
lock
fdivr
and
jp
mov
in
imul
aaa
sub
test
mov
les
leave
movs
enter
loop
movs
jge
movs
adc
adc
ins
and
daa
lahf
push
mov
lea
mov
lahf
mov
mov
std
xor
mov
aad
add
dec
in
add
lock
inc
add
pop
xor
adc
neg
rcl
push
fsub
leave
cmp
into
out
mov
lods
push
adc
dec
push
and
sbb
loopne
mov
movs
or
movs
lods
xor
add
xchg
retf
push
loope
pop
sbb
cmp
cwde
inc
test
sbb
push
fdiv
dec
push
adc
mov
arpl
mul
ret
into
mov
fiadd
dec
sbb
int3
mov
xor
and
dec
lock
jnp
jns
add
cld
mov
inc
icebp
xchg
xor
fild
push
push
outs
xor
pop
lods
enter
pop
iret
test
and
pop
outs
jle
pop
sbb
push
dec
cmps
mov
fisub
cwde
clc
xor
fsub
cmp
cmp
movs
pop
cld
inc
int
push
xor
push
sub
(bad)
jo
sub
lea
or
fldenv
outs
xor
xchg
adc
mov
pusha
xlat
(bad)
xor
xchg
and
icebp
hlt
fisub
push
add
mov
mov
lods
xchg
retf
push
loopne
repnz
add
(bad)
stc
push
cld
mov
jl
jo
and
out
and
dec
repnz
dec
push
retf
mov
pop
adc
add
sub
adc
sbb
movs
push
pop
hlt
push
(bad)
xor
adc
cmps
pop
lock
mov
dec
push
stos
xchg
xchg
mov
cld
outs
daa
push
push
mov
div
xor
inc
imul
push
mov
xchg
jns
fcomp
leave
gs
lods
mov
fisttp
mov
or
dec
inc
pop
push
ret
push
jno
int
popa
jl
jp
adc
and
mov
imul
inc
and
(bad)
push
sar
jno
inc
push
xor
mov
or
jnp
cmc
div
xor
jne
leave
mov
add
inc
adc
jmp
mov
lahf
sbb
(bad)
jmp
cdq
jecxz
adc
pop
aaa
dec
bswap
jp
ins
mov
or
shl
shr
test
(bad)
daa
cmp
pop
pop
sub
in
int3
stos
jae
pushf
sar
ja
mov
inc
mov
pop
clc
ins
mov
pop
dec
popa
cmp
or
xchg
aas
stc
fdivr
stc
adc
das
nop
cmp
pop
loopne
nop
icebp
mov
sbb
scas
in
dec
jno
loope
cmp
fcom
movs
(bad)
cdq
and
aas
xor
mov
cmp
ret
and
xchg
fistp
aad
stos
not
sub
mov
inc
xor
mov
ficomp
pop
pop
mov
jno
mov
test
std
push
test
sbb
retf
mov
adc
xor
cmp
push
push
(bad)
xchg
das
inc
jno
test
sti
(bad)
inc
daa
mov
cs
cmp
test
dec
aaa
push
(bad)
and
jo
int
jg
repnz
xlat
mov
mov
addr16
push
shl
pand
push
mov
aad
fcom
sub
inc
xchg
pop
cdq
mov
jne
mov
mov
(bad)
test
mov
jle
outs
das
jnp
mov
push
in
cli
mov
mov
jb
add
outs
call
popf
dec
cmps
pop
mov
cmps
gs
mov
xchg
adc
(bad)
lods
xchg
pop
dec
adc
push
pop
lea
xor
mov
or
imul
(bad)
fdiv
xor
in
ret
data16
jne
(bad)
sub
add
into
out
retf
ds
xchg
mov
shl
rcl
clc
bound
mov
jnp
xor
sbb
out
test
fdiv
jo
mov
cwde
inc
imul
popf
sub
inc
into
and
ja
cmp
popa
adc
cmc
xchg
movs
xor
shr
dec
cmps
sbb
fst
sub
jmp
icebp
pop
adc
mov
jbe
idiv
rol
test
add
fnstcw
ret
and
xchg
cs
mov
cmc
pushf
shl
gs
inc
mov
adc
mov
mov
les
xchg
shl
data16
loope
xor
in
sub
loop
cli
mov
cmp
mov
sub
clc
pop
push
fidiv
cmps
scas
add
repnz
push
jnp
sub
in
jecxz
push
xor
mov
or
xor
aad
scas
jg
dec
inc
pop
mov
jbe
in
jl
lahf
and
ror
test
xchg
mov
arpl
dec
fs
lahf
cld
push
push
ja
dec
lock
retf
stos
inc
mov
aaa
cs
mov
mov
dec
jmp
repnz
jl
into
or
in
fs
jl
dec
mov
sbb
movs
ds
inc
add
sub
ss
lods
mov
xor
jl
retf
ss
stc
sahf
and
xor
iret
inc
and
mov
cmp
xchg
clc
and
push
fisubr
ficom
addr16
mov
xchg
xchg
jmp
sub
mov
push
in
adc
fwait
xor
sbb
xor
popf
int3
inc
mov
pop
and
ins
les
cmps
push
out
adc
cld
lods
popa
mov
inc
push
in
push
and
sbb
cli
sbb
bound
mov
in
cmp
movs
xchg
das
push
adc
ret
xchg
adc
ins
or
jl
sub
adc
add
mov
nop
mov
std
cmp
shl
sbb
int
jbe
push
leave
cld
leave
adc
mov
cld
iret
adc
nop
sbb
mov
out
test
sub
dec
push
loope
movs
jg
or
mov
gs
or
(bad)
std
inc
shl
pop
out
sub
push
and
aas
inc
mov
cmp
lgs
test
stos
out
nop
test
lds
lods
xchg
cmp
js
nop
push
lods
arpl
cmp
fs
shr
mov
push
rcl
inc
jp
mov
out
ret
inc
jle
mov
pusha
fcom
addr16
push
sbb
cmp
lods
inc
movs
sub
add
ficom
in
adc
jne
adc
mov
mov
enter
fld
add
sub
sub
xchg
fstp
ror
cmp
cmp
mov
into
push
inc
sub
jle
mul
mov
mov
clc
sbb
call
jbe
aas
xor
inc
or
add
sbb
add
pop
jae
add
push
pop
aam
ins
pusha
call
dec
ret
mov
repz
mov
pop
fcmovu
pop
test
(bad)
out
cld
and
(bad)
call
adc
ja
ret
nop
cmc
fstp
in
sbb
or
popf
xchg
and
aad
pop
cmps
push
xchg
cld
mov
je
mov
pop
or
lods
nop
xor
das
jns
dec
enter
push
jl
enter
jbe
dec
jae
in
push
outs
mov
aad
lahf
add
stc
and
fsubr
push
lods
push
push
icebp
ret
mov
mov
movs
sbb
jmp
cmp
sub
mov
or
enter
sbb
inc
and
fld
in
movs
call
mov
pop
dec
inc
call
ss
push
mov
(bad)
cmp
test
scas
aaa
rcl
cmp
cmp
test
ror
rol
inc
(bad)
sar
add
and
pusha
inc
add
daa
pop
cmps
dec
scas
mov
sbb
mov
mov
fs
push
cmp
outs
xchg
lahf
mov
xor
or
adc
push
popf
fstp
enter
or
push
xchg
sti
cmps
xchg
repz
add
out
jne
add
push
jo
cmp
pop
xlat
or
mov
call
xchg
and
addr16
fild
mov
sub
push
mov
mov
push
ret
inc
mov
jmp
sbb
aam
adc
shl
scas
pushf
sbb
mov
loop
mov
pop
xchg
or
(bad)
aad
fisttp
sub
push
call
pop
mov
or
int
cmp
icebp
rcl
retf
repz
jo
mov
sub
das
xor
xchg
js
mov
ds
mov
mov
in
call
(bad)
xlat
repnz
mov
mov
arpl
or
lods
in
cmc
inc
loopne
fs
sub
and
push
das
ss
push
aaa
push
add
and
movs
push
shl
sub
mov
push
stc
or
mov
mov
frstor
pop
inc
or
xor
or
or
(bad)
cmp
iret
or
imul
call
aaa
adc
fcmovnu
pop
and
call
int3
xor
mov
sub
add
loop
sub
outs
mov
out
pop
xor
fldcw
sub
(bad)
pop
out
rcr
lods
or
nop
pop
adc
push
aad
ja
mov
push
lock
push
cmps
and
jmp
cmc
or
lea
sbb
xor
jp
sti
or
out
or
out
adc
fcomp
fwait
daa
or
push
addr16
leave
hlt
ret
cs
push
repz
add
fisubr
lea
test
jns
pop
mov
lea
loopne
mov
cdq
inc
jmp
imul
or
fimul
mov
sbb
xor
and
jnp
sbb
inc
sub
mov
cdq
cdq
pop
sub
pop
scas
dec
lods
out
mov
cmp
push
aad
xchg
call
jl
push
sub
or
inc
xchg
das
lods
xchg
stc
dec
leave
mov
sbb
xchg
data16
jmp
pusha
mov
jg
sub
xor
repnz
push
jns
xor
sub
adc
jge
sbb
sbb
out
push
mov
mov
aas
ret
enter
jl
fs
xor
add
push
cwde
push
mov
ss
mov
es
test
stc
outs
sub
movs
fsubr
test
popa
or
popf
hlt
sub
jnp
test
mov
jecxz
or
movs
pop
jp
dec
aas
js
lock
push
fnstsw
movs
ss
aaa
je
xchg
into
dec
mov
lods
adc
arpl
inc
das
inc
stos
dec
add
mov
jno
out
xchg
repz
mov
xchg
gs
jmp
test
jbe
mov
dec
mov
and
pop
aam
fisub
addr16
jl
mov
cmps
imul
inc
xor
rcl
mov
aaa
rcl
lds
jb
dec
push
fs
cmp
(bad)
mov
fs
cld
cli
movs
xchg
icebp
dec
mov
call
cld
and
test
push
hlt
je
iret
retf
retf
push
or
mov
inc
xchg
push
stc
and
ins
(bad)
fild
fsub
push
push
sbb
repnz
clc
loope
sub
imul
pop
cmp
sbb
test
ret
adc
xchg
rol
mov
shl
lock
push
jp
add
mov
popf
sbb
loop
and
mov
inc
jae
sbb
sub
xchg
ins
push
js
loope
cmp
shl
gs
loopne
lds
out
div
(bad)
cwde
ins
div
dec
xor
dec
fnstcw
daa
std
cmp
pop
sbb
push
rol
hlt
fiadd
xor
lods
and
mov
cmp
push
cmp
pop
bound
mov
bnd
mov
xor
push
clc
(bad)
mov
mov
fisttp
arpl
ja
ins
and
add
dec
popf
pop
pusha
mov
add
iret
in
inc
jo
das
(bad)
aas
ret
cmps
(bad)
pop
fst
(bad)
jmp
mov
mul
pop
push
xor
lds
ins
add
jl
ins
enter
lock
cmps
imul
arpl
mov
cwde
inc
jno
fdiv
xchg
cs
into
aaa
adc
je
jmp
dec
and
imul
fsub
pop
or
pop
cmp
test
dec
(bad)
in
es
jae
std
loop
imul
leave
cmp
jge
dec
inc
retf
mov
enter
add
pop
xchg
mov
push
inc
jmp
fldenv
push
pop
out
scas
repz
loop
jae
mov
mov
call
xor
dec
push
dec
adc
push
arpl
ret
call
jae
retf
popf
push
(bad)
adc
adc
out
cmp
adc
stos
mov
push
out
pop
into
mov
(bad)
xchg
sbb
cmp
shl
dec
ss
pop
mov
or
push
in
mov
cwde
mov
cmp
std
sub
pop
(bad)
out
dec
xor
sbb
ss
aaa
pop
xchg
sub
cwde
sbb
call
mov
xchg
rol
add
jb
cli
jg
pusha
jns
sub
pop
sub
push
mov
jae
popa
test
push
movs
loop
push
cmp
adc
cmp
mov
mov
and
xchg
push
ins
and
nop
dec
mov
jp
inc
sbb
loop
xor
push
(bad)
test
push
pop
cmp
xor
inc
aad
mov
frstor
push
or
in
ret
scas
sub
fdivr
xchg
mov
mov
xor
pop
lods
call
jmp
(bad)
pop
cmp
cli
mov
jno
je
or
and
aaa
jg
repz
cs
pop
fcom
xchg
mov
push
test
pushf
sbb
ins
or
jle
sub
cmps
xchg
data16
mov
xchg
cmc
push
leave
add
ficomp
dec
xor
or
and
pop
push
rol
sar
out
enter
push
xor
xchg
push
popa
out
mov
fcmovb
push
sub
stos
dec
push
mov
es
push
mov
cmp
fs
loope
or
hlt
xor
ret
pop
add
in
(bad)
pop
retf
in
retf
xor
mov
mov
fs
dec
inc
in
das
gs
rcl
rcr
jmp
cmc
mov
ss
lea
test
les
fwait
out
push
call
shl
pop
ins
mul
test
rcr
test
push
jg
out
das
cdq
jg
int
cmp
cmps
xlat
cli
sti
gs
sbb
aad
sbb
les
scas
cmp
neg
pusha
inc
out
pop
jns
inc
sub
jmp
cwde
repz
mov
mov
daa
and
scas
sub
leave
jp
and
mov
push
inc
js
jmp
pop
iret
xlat
mov
push
push
mov
jnp
and
int
ror
adc
mov
test
add
lds
add
retf
xor
aam
js
jbe
and
repnz
jg
aas
je
dec
mov
inc
adc
xchg
hlt
outs
call
push
jne
inc
mov
cmp
lds
xchg
sub
lods
inc
xchg
sbb
ret
or
add
ins
push
dec
jmp
fadd
icebp
mov
jg
xchg
sbb
jb
cmp
movs
xor
mov
xchg
(bad)
and
ds
pop
fisttp
loope
cmp
movs
push
in
or
rcl
sahf
add
fwait
into
mov
ins
or
push
or
movs
add
jae
in
loope
or
sub
sub
sbb
and
inc
jne
loopne
clc
mov
mov
rol
mov
sub
fst
mov
xchg
jbe
push
retf
loopne
mov
loop
pop
inc
push
dec
xchg
adc
aaa
leave
mov
mov
add
jne
inc
mov
or
cwde
mov
dec
das
jne
std
adc
jno
add
jl
(bad)
(bad)
outs
test
in
data16
pushf
cmps
xchg
jb
jnp
ret
mov
and
mov
xchg
retf
mov
lods
jnp
sub
xor
mov
(bad)
(bad)
push
adc
out
push
or
sar
sbb
in
xchg
push
repz
scas
mov
or
and
cmp
inc
data16
pop
stos
mov
shl
jmp
or
jmp
and
enter
cmp
imul
fs
test
ins
xor
(bad)
out
fucomp
movs
js
sahf
ror
mov
daa
neg
cwde
sbb
jne
(bad)
leave
aas
add
xchg
ins
cmp
inc
fiadd
xor
stc
inc
mul
xor
lock
jnp
fidivr
lds
aas
mov
lahf
clc
mov
inc
scas
push
push
jmp
movs
dec
sbb
nop
sbb
sub
mov
pop
xchg
jne
dec
xchg
jl
xchg
shl
mov
xor
pop
repz
add
scas
iret
jmp
sbb
dec
out
in
jne
(bad)
daa
or
mov
xchg
sbb
and
mov
in
hlt
cmp
sti
push
adc
pop
sbb
mov
pop
stc
outs
adc
push
jg
arpl
fistp
fs
pushf
loope
ror
in
adc
xlat
popf
cmp
push
imul
add
xchg
shl
out
push
and
inc
outs
xor
ret
xor
push
sub
outs
jmp
das
inc
neg
aam
inc
pop
shl
bound
push
jg
or
xchg
or
sub
xchg
inc
das
sbb
xchg
cmp
fisub
ds
mov
cmps
pushf
mov
adc
cmp
pop
and
cdq
push
in
add
cmp
or
adc
aad
mov
adc
int3
cmps
pop
mov
add
fs
xchg
jge
add
stos
sbb
int3
pop
mov
jmp
xor
xchg
and
ret
xchg
cmp
aam
cdq
and
inc
jl
jb
xchg
dec
sbb
add
mov
and
sbb
cmp
xchg
pop
fwait
adc
mov
dec
mov
jp
push
fldcw
mov
mov
cs
push
inc
jns
arpl
push
test
fst
popf
sbb
xchg
sbb
mov
push
fld1
cmp
mov
(bad)
(bad)
cmp
dec
cmp
int
mov
int
pusha
dec
cmps
jae
cdq
mov
out
sub
out
cmp
retf
(bad)
fisttp
lods
je
sub
cli
dec
mov
push
iret
call
inc
pop
ins
pushf
xchg
sub
cmc
inc
in
mov
sub
int3
gs
pop
inc
js
inc
mov
xor
jns
mov
out
add
adc
or
and
lds
sub
aad
sub
aam
call
in
push
out
mov
push
sub
rol
and
adc
mov
btc
and
(bad)
shr
adc
aas
pop
pop
cmp
sbb
aas
mov
or
nop
mov
pop
sub
mov
call
lahf
pop
inc
fld
and
jno
cmp
outs
stc
clc
out
xor
jno
xor
inc
add
push
loop
jg
sar
xchg
mov
and
les
xchg
jns
xchg
sbb
loop
mov
sbb
adc
mov
adc
stc
nop
arpl
mov
xlat
fsubp
(bad)
jbe
shld
mov
adc
loop
jecxz
or
imul
or
fstp
ds
add
cmp
mov
xor
or
push
push
and
pop
mov
(bad)
xlat
or
enter
xchg
data16
xchg
mov
mov
push
cli
push
jbe
mov
in
shrd
fnstsw
push
ret
rol
add
in
inc
pushf
push
xchg
add
push
pop
pop
mov
or
push
cld
push
js
and
push
or
mov
dec
lock
cmp
jmp
push
sbb
pop
cmp
and
mov
or
and
jb
push
pop
mov
mov
ss
jg
xor
adc
and
retf
and
mov
test
xor
xchg
(bad)
jecxz
(bad)
aam
or
adc
retf
sbb
mov
push
int
call
cs
retf
pop
xor
aas
test
sbb
push
loope
rcr
adc
(bad)
mov
jle
cdq
stos
jo
hlt
jg
cld
xchg
fld
arpl
shr
sti
inc
je
scas
sti
pop
xor
ret
test
pop
pushf
mov
lahf
mov
(bad)
fcom
mov
fdivr
xchg
data16
lods
xor
leave
and
add
ds
xchg
jmp
and
int
cld
push
(bad)
cmps
sub
sub
mov
inc
(bad)
mov
in
aas
sahf
xchg
xchg
cmps
scas
(bad)
aaa
call
pop
popf
jns
repz
mov
gs
ret
addr16
in
pop
adc
sub
mov
pop
fisubr
mov
fs
pop
add
or
mov
leave
aam
cwde
or
and
and
fisub
xchg
pop
add
data16
add
jb
add
adc
pop
aaa
xlat
xor
jo
jb
sbb
outs
shl
sar
adc
arpl
popa
xchg
dec
add
push
jle
ss
adc
aas
xchg
adc
into
inc
add
xor
xor
xchg
xor
enter
movups
adc
retf
cmp
sbb
adc
fs
sbb
shr
mov
loop
cs
imul
(bad)
adc
outs
out
cld
adc
leave
push
iret
pop
ret
jbe
call
mov
test
xchg
push
fmul
sahf
(bad)
sbb
mov
into
mov
cmp
daa
(bad)
aam
fild
jb
mov
cmp
(bad)
xor
dec
cmp
cmps
shl
repnz
mov
ds
fisub
adc
std
mov
hlt
jns
mov
ss
lods
daa
jnp
add
push
cmp
cs
in
pop
movzx
pop
xor
add
sbb
fnstenv
je
jle
jl
pop
ret
mov
inc
outs
out
jno
lods
mov
xchg
lods
repz
xlat
and
out
mov
fld
fwait
cmc
add
or
aam
xor
(bad)
loopne
loopne
sbb
movs
adc
call
mov
jb
jmp
pop
or
jae
mov
add
mov
push
std
xchg
mov
cdq
mov
stc
dec
dec
xor
or
shr
call
inc
xchg
xchg
jae
lods
jg
inc
clc
test
popf
push
xor
popf
push
lods
mov
sbb
inc
push
push
fs
pushf
out
push
js
scas
(bad)
in
add
sbb
inc
lods
xor
pop
mov
sbb
test
jne
mov
scas
sbb
mov
ja
inc
pop
repnz
bound
xchg
push
jb
xor
int3
mov
jle
sar
lds
and
in
jle
mov
cmp
dec
and
inc
add
or
jge
cmps
je
mov
xor
div
(bad)
scas
jp
repnz
aaa
ins
test
pop
or
imul
cmp
inc
outs
add
sbb
sbb
jle
test
and
sbb
(bad)
cmp
jle
shl
lahf
and
cwde
add
imul
(bad)
bound
movs
ret
sahf
add
inc
sbb
dec
je
stc
jb
dec
mov
mov
inc
mov
movs
sub
add
in
jae
shl
pop
cs
dec
cmp
out
icebp
xchg
cmps
push
or
stos
lock
adc
pop
cmp
aas
mov
inc
mov
dec
push
adc
ins
outs
movs
push
inc
or
fisub
test
adc
cdq
cmp
imul
pop
test
add
adc
setbe
loope
pop
sub
fucomi
ja
push
sbb
cmps
push
cdq
aaa
iret
fiadd
sub
push
xchg
jae
mov
shl
xor
clc
cmps
inc
lea
iret
and
add
adc
scas
and
mov
cmc
cli
sahf
adc
adc
push
push
sbb
lahf
jne
dec
aas
sub
fs
pop
outs
sbb
add
sti
aas
mov
push
xchg
or
jne
xchg
sub
lods
fnsave
daa
int3
and
es
xchg
test
push
xor
sub
adc
test
xor
stc
xchg
dec
dec
bound
outs
xchg
adc
push
retf
cld
mov
stos
cmp
jnp
add
out
test
pop
inc
sahf
fwait
or
add
mov
mov
mov
cmps
inc
mov
mov
jle
xchg
mov
cmp
jbe
sub
addr16
imul
scas
lods
mov
ss
push
js
into
cmp
pop
push
push
or
and
dec
or
mov
mov
loope
ss
repnz
adc
das
int
jge
sbb
out
or
pop
(bad)
loopne
stc
jp
fmul
pop
jnp
int3
push
lds
push
fwait
cli
test
sbb
lock
jae
xchg
xchg
inc
xlat
pusha
sbb
adc
test
jo
adc
pop
bound
stos
stos
or
repz
sub
jmp
mov
scas
mul
fistp
mov
push
(bad)
getsec
cwde
fdiv
cwde
add
mov
ret
sahf
mov
cwde
outs
add
dec
bound
scas
jp
xchg
inc
in
lock
xor
in
push
push
jp
push
push
data16
loop
mov
mov
mov
in
and
sahf
(bad)
push
inc
nop
out
in
int
dec
or
mov
adc
xchg
in
push
push
movs
jmp
pop
mov
stos
add
adc
push
adc
jne
jbe
add
pusha
fnstsw
cmp
push
out
lahf
mov
xrelease
sub
dec
pop
pop
ret
mov
out
addr16
xlat
adc
icebp
push
jmp
je
pop
popa
ds
data16
sahf
je
dec
sub
rcl
cmp
mov
(bad)
enter
aaa
loop
mov
movs
je
jmp
outs
add
sbb
les
stos
stc
mov
dec
movs
lds
es
and
adc
jl
movs
out
(bad)
es
cmp
dec
gs
sub
cmp
pop
jp
inc
xchg
in
mov
ins
pop
(bad)
mov
inc
sbb
shr
cmp
test
push
add
nop
out
pop
rcl
lahf
(bad)
out
aad
pop
pop
jecxz
pop
push
mov
loopne
sti
push
jns
xchg
adc
fld
xchg
loop
stos
sub
das
nop
mov
mov
or
fcmove
add
lahf
sub
or
cli
mov
int3
es
pop
lahf
lock
mov
outs
test
cmps
fnstsw
imul
add
sbb
imul
jecxz
cwde
movs
mov
jae
sbb
mov
and
out
pop
rcr
test
rol
loope
enter
or
retf
jns
xchg
mov
mov
movs
jg
clc
cmp
pop
leave
repz
cld
mov
repz
sar
and
(bad)
loopne
sub
xchg
and
push
inc
jns
stc
pusha
or
int3
cmp
aaa
and
mov
fs
repnz
iret
shr
pop
push
dec
(bad)
xchg
fldenv
mov
pop
test
xor
mov
(bad)
jmp
je
int
xchg
and
rcl
mov
and
outs
dec
push
dec
nop
dec
or
das
mov
mov
stos
bound
xchg
out
ret
retf
in
cdq
retf
push
jg
push
ror
js
sub
(bad)
xchg
xor
popf
cwde
pop
add
mov
stos
jae
push
inc
sti
sub
mov
ds
and
sbb
pop
outs
push
fistp
push
jns
mov
aam
jp
push
retf
addr16
push
rol
and
and
mov
mov
mov
xor
xor
dec
adc
pop
cmp
adc
popa
cmp
jl
fistp
mov
mov
sbb
push
lods
(bad)
(bad)
iret
cmp
cmps
push
mov
loopne
arpl
stos
push
lods
test
pusha
jle
xor
imul
pop
ret
and
fisub
scas
pushf
cdq
rcl
pop
daa
and
cld
das
fadd
pop
rol
and
mov
ss
int
fsub
shr
dec
xor
pop
ficomp
(bad)
stos
and
xor
push
adc
mov
mov
das
in
mov
in
or
mov
jae
mov
out
dec
jge
push
sbb
mov
adc
sti
mov
add
pop
mov
ins
xor
cli
fdivr
or
int3
adc
inc
loopne
xor
xchg
rcr
push
push
mov
mov
mov
or
test
sub
or
jecxz
(bad)
mov
push
mov
push
daa
cmp
or
rol
fadd
jns
pop
stos
inc
cmp
adc
pop
push
lods
push
lds
xor
xor
and
push
push
sbb
mov
leave
out
jne
inc
mov
fnstsw
test
rcl
push
bound
adc
scas
or
push
fisttp
sbb
jns
push
je
xchg
pop
adc
lods
sbb
stos
aad
adc
xor
push
(bad)
gs
fs
jecxz
inc
push
mov
stos
cmps
out
je
inc
retf
adc
cmps
lods
dec
pop
fadd
loopne
mov
dec
push
pusha
pop
or
mov
jne
icebp
outs
loop
jp
push
sahf
cmp
jl
ds
ins
sub
mov
pop
fcom
add
repz
test
or
ror
mov
xchg
inc
adc
bound
fnstenv
es
out
fsubr
push
jmp
jl
inc
cmp
mov
xor
lds
push
sbb
out
loopne
aam
stos
mov
sbb
xor
ins
fadd
loope
mov
and
adc
cdq
ins
repz
stos
cmp
mov
mov
aaa
retf
add
jg
sub
sbb
inc
jns
jg
call
nop
rcl
(bad)
jmp
(bad)
hlt
mov
int3
mov
push
and
mov
sub
scas
pop
lock
scas
adc
out
and
jecxz
les
jnp
ins
retf
aaa
sbb
pusha
shl
lods
pop
loope
(bad)
ds
inc
or
mov
iret
pop
shr
mov
into
scas
loop
pop
loopne
neg
or
adc
ret
cmp
ja
and
sbb
pop
lds
test
retf
les
dec
imul
fld
out
pop
mov
out
iret
leave
sbb
mov
xor
cmps
pop
add
cdq
dec
sbb
sub
cmp
aas
pop
sub
dec
cmp
pop
cmp
cwde
inc
sub
push
jle
sbb
cmp
je
ins
mov
movs
inc
sbb
cmp
hlt
(bad)
sub
xlat
sub
inc
mov
sub
mov
ret
es
xchg
pushf
push
xor
push
fisttp
mov
les
cmp
outs
addr16
retf
sbb
neg
pop
call
pop
mov
push
pop
xor
imul
mov
lods
loop
ja
ror
inc
retf
mov
push
test
in
dec
stc
add
bound
int3
lock
ins
add
fdiv
outs
loope
stos
sbb
retf
sbb
jno
fs
test
leave
ficomp
or
xchg
push
lds
repz
push
shl
dec
mov
inc
aad
inc
xlat
test
mov
push
mov
adc
push
dec
loopne
xchg
mov
icebp
cmc
add
cmp
mov
jns
fst
fs
stos
adc
cmps
in
pop
stc
dec
lods
push
test
or
stos
ins
fwait
xchg
aaa
lahf
pop
ror
xlat
adc
jg
fwait
mov
js
jnp
fnstcw
pop
adc
iret
imul
jp
cmc
add
call
inc
outs
mov
sub
inc
and
pop
push
mov
jns
xchg
cmp
inc
pop
shr
adc
cmp
dec
mov
ins
inc
xchg
jns
push
(bad)
(bad)
daa
xor
pop
pop
out
mov
(bad)
jle
mov
fsin
mov
push
lea
sbb
sub
pop
push
xor
sub
dec
in
dec
dec
in
in
adc
sbb
push
dec
add
xchg
xchg
pop
es
aaa
out
xor
xchg
addr16
push
rep
movs
adc
xor
pushf
mov
shl
inc
xlat
xlat
ss
in
sub
outs
(bad)
pop
xor
or
and
xlat
add
adc
call
adc
mov
int
push
scas
add
or
sub
call
cmp
ss
pop
lods
and
mul
dec
ret
push
cmp
jmp
dec
xor
repnz
js
inc
sub
cwde
iret
jne
pop
test
sbb
mov
jp
xchg
gs
retf
jg
mov
retf
ret
and
sbb
mov
push
outs
ficom
xchg
push
leave
jne
(bad)
jecxz
xchg
in
adc
fimul
xchg
pop
pop
outs
mov
aaa
add
(bad)
mov
cwde
pop
repz
or
out
ret
dec
fs
(bad)
pop
pop
popa
stc
outs
clc
mov
inc
lods
push
fisttp
mov
retf
jge
adc
jbe
popa
cld
rcr
fdiv
dec
push
pop
mov
sbb
cmp
nop
in
lea
jge
xchg
inc
xchg
sbb
rol
push
pop
sbb
sti
jge
rcr
push
jb
cdq
cmps
(bad)
mov
push
xchg
scas
jge
popa
mov
fs
into
mov
fwait
inc
dec
mov
in
or
gs
ror
inc
cmp
push
pop
or
pop
addr16
mov
or
aam
mov
push
xor
xor
fsub
sub
add
xor
add
and
sub
or
hlt
xchg
sub
(bad)
inc
sbb
sub
adc
mov
int3
and
sbb
into
and
sbb
inc
inc
add
dec
sbb
add
les
mov
inc
pop
jmp
das
neg
mov
rol
and
sti
jmp
pop
movs
add
sbb
gs
pop
xchg
add
adc
mov
(bad)
mov
jge
mov
mov
shl
xchg
sub
pop
cmc
aas
adc
(bad)
bound
outs
stc
mov
jp
fcmovnbe
sub
jmp
jecxz
rol
hlt
iret
enter
cmp
imul
popf
add
sbb
popf
adc
dec
add
shl
out
sbb
fwait
pop
and
fucomp
cdq
adc
add
inc
adc
add
int
dec
adc
rol
cmp
aam
add
push
xchg
push
cwde
push
xchg
add
fdiv
rcl
and
dec
mov
test
jnp
fcmovnb
in
outs
aad
xchg
inc
nop
stos
cmp
push
sub
adc
jl
fldcw
and
faddp
fdivr
call
add
adc
jle
mov
mov
std
call
jge
mov
mov
in
ins
int3
dec
icebp
mov
mov
mov
pop
ficom
fadd
std
pop
jno
cmp
aaa
cwde
(bad)
and
xchg
loop
mov
addr16
add
dec
push
and
cmp
sbb
push
call
popf
cmps
enter
xchg
add
or
cmc
pop
push
in
les
aam
xchg
cmp
in
int3
fisttp
mov
pop
cmp
test
xchg
jne
add
mov
jo
adc
inc
pop
fadd
mov
mov
in
std
int3
xchg
out
jmp
jo
aad
pop
push
pop
adc
cmp
clc
test
jp
(bad)
jne
mov
repnz
aad
sahf
ret
out
cmp
out
cld
fidivr
inc
test
jmp
(bad)
and
into
fisub
call
fdivr
fwait
jnp
dec
imul
xor
and
push
pop
push
dec
fldcw
xor
sbb
test
cmp
test
aaa
pop
inc
xor
pop
test
sbb
das
in
mov
enter
ds
xchg
mov
stos
ds
cmp
jp
jns
sub
mov
mov
mov
push
add
cmp
or
ins
test
inc
mov
fisttp
sub
(bad)
hlt
in
cmp
xor
scas
test
pop
push
ds
into
call
jae
inc
in
add
mov
call
add
std
adc
(bad)
or
cdq
xchg
pusha
and
push
ins
jmp
test
jmp
push
mov
cwde
xor
das
arpl
sub
fcmovnu
xchg
jg
inc
je
push
in
xor
sub
dec
xor
inc
cmp
cs
mov
fdiv
xchg
mov
pop
jns
sbb
fs
adc
pop
xor
xchg
gs
(bad)
or
rcr
adc
xchg
jo
je
xchg
push
fsub
mov
rcr
mov
out
jb
test
xor
push
popf
jp
loop
jl
or
sbb
jae
retf
idiv
pop
iret
idiv
inc
push
sub
pop
pop
xchg
pop
jne
or
test
fild
scas
(bad)
movs
leave
xchg
aas
sbb
iret
pushf
stos
xor
ss
test
call
sub
cwde
add
out
jne
ficom
rcr
cmps
pop
dec
lods
sbb
out
adc
or
xchg
jmp
nop
mov
rcl
(bad)
cmp
jno
dec
cmp
cmps
cwde
in
ret
jmp
loop
jp
in
jecxz
cld
fldcw
repnz
inc
mov
sbb
ja
retf
rcr
shl
jge
scas
outs
xchg
push
(bad)
mov
sub
xor
jle
cmp
mov
ins
and
es
sub
sub
push
push
mov
or
inc
and
push
adc
mov
hlt
inc
mov
rol
inc
(bad)
jge
cdq
cld
imul
mov
push
add
cmps
dec
and
xor
int3
(bad)
xor
inc
or
cmp
js
daa
fidiv
or
sub
jmp
stos
repz
jne
or
cwde
fisubr
enter
cmp
lods
sub
pop
pop
les
shr
call
cld
sub
pop
jb
fcom
inc
fdivr
pop
mov
into
mov
in
aaa
sub
sbb
gs
pop
mov
outs
push
cld
mov
cmp
shl
push
add
pop
shl
cdq
xchg
mov
loope
and
adc
(bad)
repz
outs
stc
pop
inc
and
jae
shl
pop
ret
rcr
in
sti
xor
dec
jnp
addr16
inc
jbe
in
and
stos
nop
adc
ss
test
rol
loop
cmp
(bad)
lock
xchg
cwde
(bad)
sbb
lea
push
sub
call
into
pop
push
cld
(bad)
jmp
jo
retf
jmp
call
pop
adc
(bad)
stos
xchg
nop
lea
xlat
inc
hlt
jno
retf
pop
xchg
mov
aam
jg
fnsave
(bad)
aam
or
mov
retf
std
std
(bad)
movs
mov
adc
mov
xlat
mov
enter
inc
sbb
stc
jns
in
lds
jno
bound
jle
mov
aaa
jne
mov
scas
data16
js
hlt
dec
dec
ins
mov
jge
loopne
shr
test
jmp
cdq
and
add
lods
adc
mov
dec
push
pop
icebp
sbb
mov
daa
ret
adc
or
inc
inc
or
sub
dec
xor
pop
ds
aad
mov
mov
stc
sar
mov
jle
retf
mov
add
ins
jecxz
pop
mov
cmps
mov
ins
ror
adc
pop
push
aad
bnd
frstor
ficomp
mov
sbb
dec
pop
cmp
ins
repnz
cdq
add
dec
js
fdivr
stos
aaa
call
mov
fist
int3
sbb
push
push
mov
xchg
pop
push
add
mov
mov
cs
mov
xor
repnz
test
mov
xchg
mov
mov
ret
push
push
ret
outs
sbb
leave
cmc
jmp
mov
xchg
add
dec
dec
mov
xchg
mov
loope
jo
pop
pop
add
lods
cmps
cmp
push
inc
xor
neg
cmp
mov
aam
sbb
jno
(bad)
int
push
imul
(bad)
lock
mov
loop
test
adc
lock
jne
stos
ja
arpl
add
shl
clc
fst
imul
sbb
pusha
adc
dec
imul
retw
adc
push
sub
push
jbe
xchg
stos
and
adc
dec
es
repz
mov
dec
rcr
movs
push
jbe
mov
jp
ss
xrelease
add
pop
inc
aas
and
mov
imul
aam
cwde
bound
pushf
mov
rol
push
push
stos
sahf
mov
popf
adc
pop
push
jg
mov
ins
or
cld
xchg
out
ret
sub
lock
inc
test
pop
sti
sbb
or
jge
mov
mov
mov
ds
pop
mov
aaa
fwait
in
pop
xor
xor
outs
cmps
cdq
push
ret
mov
inc
jmp
test
push
mov
scas
mov
jne
cmp
mov
lods
fisttp
mov
mov
cli
and
pop
scas
add
outs
out
or
(bad)
push
push
lods
mov
mov
sar
fisubr
mov
and
int3
push
fs
popf
and
xor
repnz
outs
scas
pop
pop
jp
call
pusha
retf
shl
ja
(bad)
mov
cs
dec
lock
mov
mov
mov
addr16
retf
and
dec
pop
mov
in
xchg
or
mov
loope
shl
dec
jns
fwait
xchg
jb
test
ret
test
dec
xor
dec
js
cmps
jbe
mov
lock
aad
ins
dec
or
rcl
into
mov
pop
idiv
cmp
or
jmp
xor
push
fmul
not
and
aad
out
mov
sar
push
rcr
(bad)
push
call
mov
add
mov
push
lahf
jb
xchg
inc
in
(bad)
xor
xchg
in
sti
fisubr
sub
sbb
inc
sbb
fnstcw
or
shl
div
jge
dec
mov
sub
gs
int3
sub
movs
jp
cmps
out
push
seto
mov
jmp
repz
sbb
push
(bad)
fcomip
pop
inc
add
mov
cmp
or
jecxz
in
call
pop
sahf
daa
sub
jae
sbb
imul
jmp
jl
xor
shl
out
repz
mov
jb
ja
stos
mov
inc
iret
popa
cmp
add
imul
inc
adc
fmul
les
in
sbb
push
pop
jno
repnz
jge
test
pop
cwde
xchg
xchg
daa
fsub
inc
adc
(bad)
clc
ds
lods
or
neg
cmp
push
loope
ret
mov
(bad)
repnz
adc
ror
pop
addr16
scas
(bad)
adc
jnp
(bad)
fadd
sub
jge
sti
ins
std
dec
inc
jl
mov
jns
jo
adc
push
sar
retf
xor
shl
push
push
shr
cmp
aaa
mov
mov
cmp
(bad)
or
or
mov
stos
pop
repz
cmps
jge
mov
mov
std
movs
mov
pop
adc
(bad)
adc
sub
loope
push
ret
inc
cmp
mov
and
or
aad
call
data16
(bad)
jl
in
movs
int3
jecxz
adc
retf
repnz
xchg
cmp
push
ret
pushf
sbb
jmp
inc
popa
mov
out
mov
sub
or
in
jg
mov
dec
fidivr
pop
inc
mov
imul
inc
fadd
mov
adc
mov
inc
add
and
cwde
mov
cmp
push
pop
dec
or
je
jmp
aas
imul
(bad)
jmp
aad
xor
rol
cmp
xchg
out
pop
aaa
add
sbb
cld
bound
adc
sub
xor
or
ficom
jmp
stos
int3
cmps
xchg
rcl
cs
sub
adc
dec
mov
mov
ficom
in
or
xchg
pop
ins
and
pop
add
push
mov
les
mov
stos
addr16
lds
mov
daa
mov
sub
add
adc
stos
adc
xchg
rcr
and
mov
or
pop
mov
out
xor
scas
fwait
inc
xchg
es
fst
adc
in
ins
out
adc
outs
aad
xor
jmp
cli
and
cmp
je
sbb
adc
inc
mov
call
adc
sub
and
add
or
push
add
jmp
lahf
push
lods
imul
fistp
js
inc
mov
adc
add
mov
jae
push
mov
sbb
pop
into
mov
push
jge
shr
int
pushf
data16
cmp
sbb
in
pop
fld
pop
add
sahf
jns
xchg
mov
retf
push
mov
or
lea
mov
cmps
(bad)
out
stos
stc
push
sub
jmp
addr16
imul
pop
push
dec
mov
es
adc
pop
and
enter
mov
repz
pop
in
adc
popa
or
mov
cmp
push
pop
and
pop
ins
adc
cmp
cmps
mov
adc
in
scas
aam
jle
imul
jb
xor
xor
into
lea
push
xchg
and
cdq
pop
mov
mov
or
mov
inc
xchg
stos
shr
lea
inc
ds
call
mov
sbb
mov
push
outs
cdq
sti
adc
inc
loopne
pop
into
je
cmp
inc
and
mov
add
push
jg
jns
ret
call
enter
ds
add
xchg
and
(bad)
ds
jns
xor
ret
in
adc
mov
mov
(bad)
aam
call
movs
inc
sbb
in
test
xchg
stos
lds
loope
or
and
cmp
sbb
sbb
scas
addr16
pop
xlat
nop
sub
shl
dec
sub
adc
sti
fs
xchg
push
lods
xchg
iret
sbb
repz
and
jbe
mov
fstp
mov
pop
in
push
stos
sbb
cs
adc
cs
test
xchg
xchg
cdq
enter
pop
sbb
or
add
icebp
adc
jmp
movs
push
jb
repnz
es
xor
lahf
addr16
sub
dec
inc
out
icebp
sub
jle
jl
inc
push
lea
sbb
mov
inc
dec
pop
xchg
repz
jl
mov
mov
jl
push
into
lds
add
jb
sbb
loope
cmc
add
pop
jns
jne
ss
jg
pop
pop
mov
int3
nop
jnp
fidivr
inc
jecxz
jae
add
test
mov
dec
dec
inc
jg
ror
call
ficomp
jl
jae
enter
mov
out
cmp
mov
retf
mov
push
test
neg
cwde
stos
xor
movs
mov
lods
and
sbb
cmc
jne
push
div
and
and
cmp
mov
or
inc
inc
mov
in
and
das
out
sub
ret
repz
xchg
push
in
pop
push
dec
cmp
jno
pop
push
(bad)
std
mov
popf
mov
out
test
icebp
add
mov
popf
(bad)
dec
xor
les
pusha
inc
add
add
popa
fldcw
xchg
out
or
push
int
jp
xchg
repz
mov
jp
and
arpl
aad
mov
shl
(bad)
rcl
sub
xchg
jne
push
movs
xchg
adc
(bad)
jne
fcom
outs
pop
rcl
mov
mov
xchg
cmp
clc
adc
sbb
aaa
jnp
xor
ds
ds
cmp
push
xor
adc
and
push
xor
xlat
inc
outs
push
pusha
adc
stc
add
mov
xchg
add
in
retf
imul
push
sub
pop
dec
(bad)
and
clc
stos
mov
and
pop
jb
das
jo
jno
push
imul
out
dec
pushf
(bad)
(bad)
arpl
mov
xchg
repz
mov
pop
push
xlat
shl
out
out
mov
jmp
outs
ins
stos
imul
dec
push
or
mov
call
cmp
scas
mov
inc
add
mov
xchg
lods
das
sbb
push
stos
push
xchg
mov
jb
pop
pop
jbe
or
lds
jo
jns
addr16
xchg
or
lods
je
cmp
pop
popf
sub
cmp
outs
jne
movs
jae
jno
dec
pop
dec
or
and
pop
and
or
mov
push
in
cmp
xor
popf
stos
pop
sbb
add
jg
imul
popf
pop
dec
bound
push
mov
lock
and
push
shr
test
xor
outs
adc
push
mov
sub
aaa
xor
inc
sbb
or
ret
scas
sbb
pop
out
add
mov
mov
popf
dec
xchg
ss
(bad)
push
adc
scas
add
xor
ffreep
pop
mov
div
cs
bound
repz
leave
add
mov
test
sbb
mov
hlt
test
repz
fnstcw
jnp
pusha
jnp
add
xchg
hlt
(bad)
jp
add
rcl
inc
sub
mov
xchg
dec
pop
pop
imul
mov
pusha
imul
int3
pop
fxch
jmp
mov
or
pop
stc
and
rol
sbb
in
mov
dec
in
pop
adc
add
adc
clc
pushf
scas
mov
jl
dec
pop
mov
aas
in
lock
hlt
xor
mov
jb
xor
inc
and
not
in
inc
mov
pop
xchg
push
push
jle
ja
call
test
add
into
mov
and
(bad)
adc
lds
call
lock
pop
sub
push
jle
cmp
and
aam
inc
push
xor
cmp
sar
sbb
xchg
sub
fcomp
xor
rcl
test
sbb
mov
ret
mov
arpl
cmp
enter
sbb
scas
sbb
mov
cmc
cmp
leave
aad
cmc
add
inc
mov
iret
in
add
mov
std
pushf
mov
clc
je
and
mov
cmp
cs
jns
dec
sub
stc
mov
or
dec
sub
outs
adc
mov
pop
loopne
les
xor
xchg
pop
into
fcom
jle
push
xchg
mov
adc
dec
ins
shl
out
pop
icebp
ret
cmp
push
rcr
jno
inc
lea
test
cmp
test
jle
sbb
daa
fwait
(bad)
and
push
shl
(bad)
mov
inc
pop
xor
cmp
cmp
jnp
push
or
popa
rcr
test
xchg
cmp
push
sbb
xor
mov
std
xchg
mov
cmps
std
bound
ficom
cld
jp
mov
sbb
xlat
or
aas
cmp
out
ja
cmp
xchg
add
adc
push
call
add
xchg
inc
call
ss
mov
fdivrp
adc
push
adc
aad
cs
daa
cmps
enter
fsub
ficomp
fsubp
gs
add
adc
inc
lea
jp
jg
and
mov
sub
(bad)
mov
cli
into
or
xchg
sahf
popf
sub
loop
sub
jnp
mov
xor
neg
rcr
mov
jno
mov
fsubr
mov
sbb
in
imul
add
adc
xchg
xchg
das
push
into
ins
mov
jb
sub
pop
daa
pop
shl
div
(bad)
pop
dec
cmps
mov
out
fs
dec
js
lea
jecxz
jmp
mov
lahf
aas
jbe
ja
loopne
mov
jnp
fadd
xor
jb
push
loope
mov
pop
movs
and
cmc
or
mov
repz
addr16
scas
pop
fadd
loop
scas
jae
stos
adc
xor
and
cmp
aas
iret
jecxz
pop
cwde
or
out
(bad)
das
mov
stc
push
mov
xor
ja
mov
fisub
leave
xor
pcmpgtd
push
test
or
repz
lds
icebp
ins
ftst
aas
jae
dec
in
mov
and
lods
daa
shl
repnz
cmp
inc
(bad)
lods
dec
xor
dec
and
xor
fldcw
or
out
aad
mov
js
ins
dec
mov
mov
enter
jns
mov
lea
xchg
push
ja
pop
push
je
bound
add
(bad)
scas
shl
xchg
jp
push
stos
mov
les
cld
sahf
sbb
and
add
pushf
movs
ficom
pop
fnsave
mov
sbb
rcr
jae
gs
pop
xor
mov
sbb
push
movs
xchg
repz
call
xchg
adc
and
iret
dec
daa
push
inc
shl
mov
dec
minps
sub
add
mov
aaa
xor
leave
mov
gs
and
and
mov
adc
loopne
dec
sbb
push
xchg
pop
and
add
push
lds
or
cs
sbb
jl
icebp
pop
mov
cs
ins
push
pop
and
xor
sbb
(bad)
sub
inc
add
aaa
adc
mov
sub
inc
pushf
pop
mov
cmp
inc
in
inc
int
repz
shl
fs
retf
and
fistp
jbe
pop
ja
(bad)
(bad)
fincstp
ins
add
sbb
push
scas
leave
xchg
movs
pusha
inc
mov
xchg
cli
jne
fwait
call
sbb
adc
adc
fmul
inc
mov
out
loop
test
pop
aaa
dec
in
test
popf
adc
and
xchg
retf
sub
retf
cmp
pop
jmp
pusha
call
push
pop
and
push
mov
add
pop
mov
jg
retf
inc
add
sub
jne
ins
push
clc
jl
mov
jb
push
aad
pop
fs
in
xchg
and
mov
int3
push
iret
unpckhps
lds
scas
test
sbb
(bad)
inc
retf
mov
dec
push
scas
dec
dec
jnp
xor
inc
ja
inc
fistp
jb
in
lea
jmp
inc
xor
loop
mov
lock
jne
mul
pop
pop
xchg
popf
mov
lds
test
cdq
mov
jo
call
jae
sbb
pop
fcom
in
or
mov
push
repnz
add
push
iret
lock
ds
fwait
(bad)
outs
dec
mov
push
in
loop
lods
and
nop
fldpi
lds
push
adc
pop
xchg
pop
test
(bad)
js
mov
inc
inc
test
jb
loop
dec
je
fistp
adc
or
mov
sbb
sti
xor
fist
ins
push
lahf
adc
test
mov
pop
(bad)
adc
or
pop
push
sbb
push
les
or
pop
jge
push
popf
xor
dec
data16
es
sbb
cmp
fcmovb
jmp
pop
test
lahf
pusha
mov
ret
push
xchg
mov
xor
adc
xchg
(bad)
mov
mov
xor
sti
in
xchg
js
push
push
pop
sub
dec
les
aaa
shl
cli
inc
or
fimul
sbb
xchg
out
cmp
xor
and
cmp
and
repz
ins
jp
sbb
sub
mov
shl
pop
out
adc
push
sub
int
mov
jmp
cmp
out
ins
push
push
aas
cmp
mov
pop
enter
or
cmc
jle
(bad)
out
cmp
adc
int3
add
js
adc
mov
out
and
ins
pop
mov
cdq
and
inc
sbb
js
sub
clc
sub
mov
adc
sbb
repz
push
add
ss
xchg
cmp
scas
ins
daa
div
xchg
int3
jb
shr
(bad)
fst
sub
jecxz
nop
add
(bad)
fbld
call
add
jecxz
jl
pop
push
inc
push
clc
fsubr
cmp
sub
and
adc
or
stos
jb
jmp
adc
adc
pop
js
out
inc
xor
scas
inc
jae
cmc
ins
int3
stos
dec
inc
loop
sub
es
fs
stc
shr
mov
inc
inc
mul
es
out
jb
ret
xor
mov
(bad)
pushf
leave
psraw
adc
mov
fdivr
clc
fdiv
outs
aas
xor
dec
cwde
(bad)
out
jg
dec
pop
in
push
sub
xor
rep
(bad)
sub
mov
scas
or
cmp
inc
push
outs
jne
cwde
xor
xchg
xor
cmps
popa
shr
cld
mov
cmps
loopne
sub
xchg
cmp
and
loop
sar
int
rcl
dec
in
cdq
fcom
sti
lea
cmp
push
shl
mov
imul
or
or
cmps
pop
or
aaa
xlat
mov
(bad)
in
sbb
cli
into
lods
out
mul
(bad)
jo
dec
mov
or
in
sub
fisttp
mov
out
jmp
dec
mov
jo
stc
jg
push
in
call
cmp
jmp
add
jecxz
dec
fidivr
mov
fcom
sahf
loopne
out
popa
pushf
std
push
xor
lds
pop
test
sbb
pop
(bad)
mov
xchg
mov
xor
shr
and
stc
mov
into
pop
sahf
sbb
jne
stc
mov
shl
test
stc
pushf
adc
ja
dec
(bad)
jnp
mov
sub
jp
ror
js
jp
or
mov
jno
mov
test
pop
mov
mov
test
frstor
loope
jge
ss
int3
mov
pop
stos
repnz
jns
push
dec
jge
mov
push
outs
fidivr
mov
es
in
call
cmp
cmc
(bad)
push
adc
pop
cmp
mov
fs
fxch
out
push
inc
pop
imul
mov
mov
sahf
xchg
retf
shr
cmp
nop
popf
jns
sbb
fwait
jp
and
push
cdq
mov
int3
adc
mov
sbb
mov
mov
mov
rol
out
bound
jge
mov
dec
out
pop
inc
cld
sub
mov
stc
xchg
and
add
dec
adc
mov
pop
fst
adc
and
jmp
mov
lea
neg
pop
dec
mov
dec
shr
sbb
out
mov
je
mov
aad
es
push
xchg
or
out
mov
in
dec
inc
inc
out
fisttp
xlat
mov
movs
(bad)
jg
clc
pusha
pop
jecxz
cmp
jns
cmp
push
and
fld
movs
mov
das
inc
jl
mov
push
icebp
sbb
loopne
push
fstp
movs
into
stos
shl
int
(bad)
fadd
aam
out
sahf
jmp
or
test
cmp
push
mov
sub
inc
and
jg
adc
inc
cmp
inc
cmp
inc
cli
sbb
mov
lds
in
clc
xchg
jne
popf
mov
(bad)
iret
or
pop
ficom
movs
xor
adc
push
push
sbb
shl
dec
ret
pushf
xchg
out
pop
cs
ins
cmp
add
loop
and
aas
fld
cmp
(bad)
adc
dec
fist
push
jg
retf
jge
mov
mov
sbb
test
(bad)
aaa
mov
mov
xchg
das
(bad)
mov
sbb
icebp
and
dec
xchg
icebp
scas
jmp
push
pop
mov
and
inc
ins
retf
shl
and
sub
adc
mov
xor
adc
scas
adc
jecxz
test
das
push
sbb
mov
dec
(bad)
not
sti
mov
dec
scas
pop
jle
mov
adc
mov
and
cmc
retf
push
aam
cdq
mov
popa
push
in
inc
cmc
push
jmp
out
cmp
push
rol
or
(bad)
ret
cli
or
mov
js
and
push
push
cmps
inc
push
push
mov
bound
movs
imul
dec
mov
add
adc
xchg
sub
repz
outs
pop
arpl
pushf
inc
ss
mov
shr
pop
gs
sub
cli
cmp
cdq
cmp
fwait
add
movs
sub
add
push
ret
aad
stos
daa
jmp
dec
daa
in
sub
in
or
mov
ds
(bad)
nop
add
ins
lock
mov
je
push
jg
pop
jl
jno
mov
and
fisubr
sbb
fsubr
pop
(bad)
xchg
pop
push
adc
cmp
pusha
xor
pushf
push
js
sub
repnz
fadd
pop
das
inc
mov
jg
mov
popf
popa
movs
adc
inc
cmp
cmp
add
mov
psllw
test
jns
mov
shr
adc
inc
xchg
push
adc
add
xor
sub
(bad)
lock
or
mov
add
sub
dec
xchg
jo
mov
arpl
mov
mov
sub
mov
add
inc
fsubr
icebp
or
cmp
push
lahf
ins
imul
in
aaa
jo
or
test
pop
jnp
fcom
adc
mov
fs
and
jl
(bad)
movs
adc
fst
retf
jbe
jae
push
rcl
test
push
mov
jl
cdq
sbb
push
jmp
lea
inc
cmp
into
sbb
ja
mov
in
dec
jbe
or
mov
and
int
push
push
add
mov
push
add
movs
mov
pushf
jecxz
fbld
(bad)
mov
cwde
xchg
push
cmp
push
inc
xchg
xor
sti
rcl
icebp
mov
sbb
outs
push
and
dec
mov
out
scas
rol
cmp
jecxz
aas
outs
dec
pop
fisttp
ins
mov
into
xchg
jns
push
ja
fucomip
push
(bad)
(bad)
mov
and
in
es
push
jge
cmp
jbe
dec
sbb
push
fnstenv
sbb
xchg
push
cmps
xchg
dec
mov
es
inc
nop
daa
or
add
cld
inc
popf
xchg
(bad)
cli
idiv
(bad)
rcr
lods
cmp
cmp
mov
repnz
mov
pop
pop
jns
repz
inc
and
pop
jp
push
outs
out
fiadd
mov
pop
jne
jl
leave
inc
aam
inc
mov
pop
idiv
mov
into
xlat
fwait
mov
jge
pushf
shl
stos
jnp
in
push
add
inc
pop
mov
data16
add
or
mov
xor
sbb
mov
pop
sub
xlat
pusha
adc
popf
push
jo
rcr
lock
(bad)
(bad)
jg
pop
add
or
jp
dec
and
and
and
sub
cmp
mov
stos
mov
int3
jb
lods
(bad)
mov
out
cli
push
pushf
not
or
xchg
pusha
xchg
outs
cmpps
jnp
inc
and
cmps
sbb
lea
mov
adc
sbb
(bad)
cld
adc
and
lea
loopne
sub
loop
enter
inc
(bad)
cmp
imul
or
hlt
mov
pop
mov
cdq
cmp
into
retf
cmp
in
ins
pusha
sub
pop
push
sub
arpl
in
into
jbe
and
ins
iret
sbb
push
jbe
jle
and
cmp
test
lock
sub
movs
repnz
sbb
sub
pusha
push
push
or
xchg
aad
test
(bad)
(bad)
jp
mov
push
outs
je
jge
push
and
sar
sub
ins
sbb
loopne
stos
pushf
test
in
lea
push
cmp
mov
stc
sbb
xor
addr16
or
lahf
pop
push
push
dec
jo
sahf
cwde
xlat
popf
jmp
scas
lahf
popa
sar
(bad)
shl
pusha
jge
cmp
pop
sub
loopne
dec
pop
out
mov
sbb
pusha
dec
cs
mov
xchg
das
ins
jge
and
mov
or
xlat
jmp
pop
cmp
sub
sbb
arpl
inc
ret
sbb
mov
scas
nop
lods
vshufps
mov
cmp
or
mov
sub
sar
retf
sub
stos
mov
cmc
xchg
cli
pop
cmp
add
(bad)
xor
retf
push
xor
mov
in
xchg
mov
cmp
es
inc
add
ins
pushf
or
add
xchg
call
ins
dec
test
push
sub
ins
pushf
(bad)
icebp
lahf
xchg
aad
in
fnstcw
sbb
mov
dec
mov
ins
ins
sti
dec
adc
ret
sub
add
mov
cmp
sub
cdq
int
(bad)
fimul
adc
xchg
mov
pop
sbb
test
retf
pop
xchg
dec
jmp
push
jno
sub
pop
call
cmps
and
add
adc
xchg
mov
inc
imul
sar
jne
ror
xchg
adc
lahf
mov
mov
sub
(bad)
mov
mov
je
int
je
add
pop
push
test
adc
fs
jo
jbe
imul
or
int3
inc
and
gs
(bad)
leave
sbb
dec
mov
outs
test
xchg
fisubr
jb
xchg
push
ret
push
mov
scas
mov
retf
sub
pop
ret
icebp
or
jno
jb
mov
test
jb
mov
xchg
xor
xor
mov
xor
adc
sbb
and
dec
cmp
jb
mov
std
sub
sbb
repz
pop
mov
adc
(bad)
fs
mov
jnp
shr
jecxz
jmp
or
les
mov
push
je
sahf
arpl
sub
pop
push
pop
jo
test
push
ins
mov
ins
icebp
xor
les
(bad)
aam
inc
fstp
or
pop
data16
repnz
out
pop
push
adc
(bad)
(bad)
ins
inc
ret
add
inc
jb
mov
fs
push
and
push
mov
shl
shr
pusha
je
iret
mov
daa
push
or
inc
fst
push
dec
iret
or
ins
cmp
mov
or
retf
cwde
xor
or
push
cmp
inc
cwde
xor
fs
jnp
ss
test
test
shl
jbe
fisubr
fwait
ins
cs
or
and
arpl
mov
out
mov
jg
aam
popf
js
scas
cwde
xor
add
sub
test
dec
mov
jecxz
cmp
xor
fldcw
jnp
push
push
fcomp
movs
lods
mov
push
mov
add
lods
jbe
leave
sub
or
das
mov
mov
clc
mov
iret
pop
jne
pop
cmp
outs
sbb
jmp
movs
push
test
fisubr
push
xor
mov
sbb
dec
or
imul
outs
mov
dec
xchg
add
mov
xchg
push
or
add
repz
add
mov
pop
js
fist
dec
and
mul
adc
pop
xor
loope
jp
js
pop
jge
scas
sub
data16
dec
shl
(bad)
int3
cli
ins
in
gs
mov
repnz
in
xlat
cmp
adc
jmp
shl
or
jp
cld
mov
js
mov
push
cmps
inc
cmp
aas
shl
xor
and
out
adc
mov
(bad)
mov
jo
pop
dec
ja
movs
adc
push
(bad)
jg
adc
inc
xchg
push
adc
inc
ins
push
mov
dec
jl
sub
push
inc
fwait
sub
loopne
cmc
or
shl
xchg
add
pop
jmp
mov
jg
in
push
pop
scas
fnsave
test
xchg
(bad)
test
test
dec
jge
rol
sbb
outs
inc
jno
pop
mov
jno
pop
in
sub
sub
out
mov
cmps
gs
js
xor
gs
sub
rcr
sub
mul
pop
in
cli
repnz
mov
inc
cmp
xchg
test
daa
push
call
adc
mov
cdq
into
sub
sub
cmp
pop
(bad)
(bad)
repz
call
xlat
dec
sbb
imul
sahf
push
jg
push
push
cmp
pop
in
inc
fmul
out
and
fcomp
cmp
mov
push
fisubr
out
xchg
aad
xor
sbb
daa
mov
call
xor
dec
xchg
mov
and
std
ss
jecxz
mov
adc
push
xor
call
pop
xchg
cmps
arpl
inc
pop
or
ret
mov
dec
dec
ds
or
sbb
dec
add
xchg
aas
into
sbb
clc
xchg
cmc
pusha
js
bound
cdq
fwait
inc
ja
add
jbe
xchg
(bad)
call
pusha
mov
mov
xchg
mov
(bad)
out
mov
xchg
cmp
inc
jecxz
(bad)
mov
ds
inc
mov
loop
test
pop
pusha
ss
sbb
fisubr
(bad)
shl
inc
in
ret
daa
xchg
adc
pusha
les
(bad)
mov
mov
fstp
fs
add
pop
inc
not
mov
jae
movs
mov
in
out
sti
lahf
fwait
pop
ror
sbb
imul
fst
xor
dec
mov
adc
xchg
popf
std
mov
enter
pusha
push
adc
retf
in
pop
inc
push
aad
jp
clc
movs
stc
test
aad
pop
ins
push
add
xor
dec
inc
ja
(bad)
mov
inc
int3
dec
pop
lfence
test
test
jl
jbe
inc
movs
neg
xchg
fucomi
scas
test
pop
lods
aaa
(bad)
xor
and
inc
mov
ss
xor
sub
dec
jmp
sub
stc
jmp
jns
sbb
mov
mov
pop
pop
sub
sub
pop
mov
lock
movs
fisub
xchg
push
and
sti
lahf
and
cmps
arpl
out
push
mov
stos
int3
mov
cmps
dec
adc
ja
jle
pop
test
xor
shl
adc
add
cs
fwait
test
mov
pusha
std
mov
add
in
sbb
adc
or
push
mov
popf
push
outs
pop
push
dec
pop
mov
(bad)
stos
ret
sub
mov
(bad)
pop
inc
add
push
int
and
scas
xor
mov
dec
and
xor
and
fwait
loop
xor
jne
adc
ja
push
jns
xor
adc
sahf
retf
retf
cmp
(bad)
cs
aas
inc
sbb
into
mov
inc
and
imul
(bad)
popa
pop
and
cmps
icebp
bnd
jb
fadd
fidiv
out
adc
ja
ja
bound
cmps
sub
pusha
cmps
cmp
xor
pop
dec
add
mov
dec
or
dec
cmp
or
adc
mov
mov
xchg
imul
mov
shl
jmp
leave
push
(bad)
jmp
ficom
jecxz
shl
retf
les
cmp
out
cwde
pop
cmc
mov
mov
jge
pushf
test
cmps
pop
cld
jo
push
and
xchg
xor
mov
cmp
stos
jg
lods
jl
mov
ins
ror
adc
mov
xor
int
xor
add
hlt
xlat
jb
dec
sbb
call
hlt
outs
adc
inc
test
fmul
mov
pop
pop
loop
jne
out
call
retf
out
test
ins
push
sub
stos
push
push
(bad)
adc
jge
dec
test
mov
jae
movs
mov
jne
cmp
aaa
cmp
aad
mov
gs
cmp
(bad)
mov
iret
jae
adc
xchg
aaa
adc
neg
aas
xor
xor
fbstp
push
jnp
push
pop
cmp
ins
ja
daa
and
in
add
mov
sbb
jmp
les
xchg
xchg
imul
outs
bound
sbb
aad
adc
adc
mov
pop
mov
in
push
mov
cwde
mov
cmp
movs
popa
inc
sbb
add
aas
adc
inc
fsubrp
movs
inc
mov
xlat
or
dec
rcr
mov
jno
xor
inc
outs
out
push
or
xor
je
dec
push
or
sbb
fimul
(bad)
fild
cwde
xor
or
cmp
push
sbb
lea
(bad)
or
cmp
inc
popf
lock
fsubr
mov
add
or
in
pop
mov
imul
adc
push
rol
add
shl
add
pop
pop
repz
ret
(bad)
sbb
mov
xchg
sbb
inc
mov
or
inc
xchg
sub
cmc
lds
sub
mov
or
loop
and
fadd
jle
jecxz
jle
icebp
and
jle
(bad)
(bad)
out
sahf
hlt
jnp
js
mov
fsub
mov
imul
mov
sbb
pop
imul
pop
mov
jg
inc
inc
jl
push
dec
and
jge
mov
rcr
out
out
and
std
pop
ins
je
jmp
mov
ret
fs
jge
data16
xchg
fistp
sub
into
movs
test
int3
sahf
test
in
push
cdq
(bad)
xchg
mov
lahf
sub
mov
in
cmp
test
push
and
cld
sbb
mov
sub
mov
aad
mov
popf
das
sub
add
mov
dec
(bad)
mov
ret
and
mov
sub
xor
add
arpl
cmp
out
jbe
jecxz
aaa
imul
jp
aas
or
repnz
mov
jmp
xchg
or
and
push
fwait
sbb
cmc
cli
jo
or
addr16
add
outs
fs
lea
fimul
or
in
ja
mov
das
add
jb
inc
xchg
test
(bad)
jmp
fst
cwde
aaa
inc
or
popa
pop
add
and
jmp
xor
pop
int
repz
cwde
mov
data16
fsubp
outs
adc
pop
stos
gs
aad
sbb
sbb
adc
jg
test
jne
(bad)
sub
cmps
xor
retf
mov
pop
jle
inc
jnp
dec
adc
xchg
xchg
xchg
xor
mov
mov
aam
aas
call
fstp
add
add
push
ror
popf
sub
jnp
and
call
pop
les
mov
pop
ret
jmp
test
mov
cdq
or
xchg
jb
add
adc
inc
ret
scas
pop
sub
mov
loopne
mov
ins
mov
jl
mov
movs
rol
and
jge
retf
adc
push
loopne
lea
xchg
jnp
xchg
cs
adc
xor
mov
xchg
jno
ret
fist
rcr
shl
repz
call
jp
iret
aad
cmps
out
xlat
movs
fimul
mov
xchg
add
dec
jbe
addr16
lock
cld
sbb
repnz
or
ror
shr
lods
stos
sti
push
or
adc
leave
sbb
inc
int
in
jmp
icebp
cmp
lahf
(bad)
mov
icebp
jmp
ret
sub
call
repnz
xchg
inc
mov
push
xor
enter
aad
pop
sbb
out
sar
dec
dec
mov
imul
or
mov
dec
addr16
leave
or
dec
das
mov
movs
jno
jae
rol
sbb
popf
or
jns
cli
test
hlt
cmp
jmp
push
dec
cli
ror
das
xor
(bad)
ret
jl
pop
lods
inc
inc
(bad)
mov
iret
mov
fwait
sbb
add
call
test
mov
stos
or
add
test
out
lods
lea
or
imul
inc
jb
cmp
xchg
mov
inc
dec
push
add
movs
jmp
push
push
jge
mov
cmps
div
fwait
jle
outs
repnz
(bad)
cmp
ffree
or
clc
in
sbb
inc
jae
(bad)
loope
sub
sar
in
adc
and
mov
jg
xchg
arpl
fbld
inc
dec
outs
xchg
inc
pop
dec
mov
fsubrp
xor
add
push
sti
adc
pop
jne
cmp
pop
sub
mov
shr
(bad)
xor
jl
sbb
jge
xchg
cmp
push
sub
cmps
cmps
jo
fnsave
cmps
mov
out
test
push
in
hlt
sub
jae
xor
popf
mov
(bad)
sbb
adc
ret
push
mov
rcl
mov
inc
call
fidiv
cmp
pop
cs
cwde
mov
add
mov
es
cld
hlt
mov
jmp
rcl
in
dec
sbb
mov
cli
add
mov
pusha
cli
push
ja
mov
fiadd
sbb
pusha
push
mov
aad
mov
out
not
pop
push
pop
retf
movs
push
pop
inc
push
shr
sub
lahf
ret
mov
shr
pop
xor
pop
lea
xor
imul
sbb
push
aas
push
pop
inc
xchg
push
mov
je
or
jne
and
sub
out
cmp
mov
dec
dec
mov
loop
jmp
pop
add
xchg
and
gs
(bad)
push
icebp
hlt
inc
dec
lods
ret
rol
ret
xor
movs
jle
mov
sub
pcmpeqw
cmps
push
add
mov
push
push
push
inc
sbb
cli
inc
xchg
cmp
xchg
push
xchg
inc
push
push
mov
aaa
in
outs
aaa
jle
xchg
data16
pop
dec
xchg
in
push
in
push
adc
mov
jecxz
into
lahf
test
repnz
bound
pop
movs
out
xchg
dec
xchg
rcr
lock
xlat
cld
lock
stos
push
mov
mov
sub
or
dec
loop
and
mov
nop
lahf
sub
xor
icebp
add
arpl
mov
repz
test
mov
(bad)
pusha
inc
jmp
inc
xor
(bad)
data16
pop
fdiv
dec
mov
pop
or
sub
(bad)
(bad)
jo
inc
(bad)
cmps
stc
popa
clc
mov
or
pop
jo
sub
xchg
sub
rcl
mov
dec
sbb
mov
or
icebp
outs
or
sbb
mov
stos
or
pop
mov
cmp
mov
cmp
xor
(bad)
jo
xlat
int
fisttp
mov
pop
(bad)
push
outs
aas
daa
adc
mov
int3
je
dec
inc
js
adc
inc
fsub
pop
in
aam
mov
lea
ret
mov
sbb
fimul
lods
ficomp
mov
sbb
pop
hlt
xor
xlat
ins
jecxz
mov
mov
inc
cwde
add
pop
int
inc
mov
out
movs
dec
ds
dec
fild
push
rcl
xor
push
arpl
test
lea
ds
out
mov
out
mov
lods
dec
in
dec
sub
mov
xchg
xor
adc
mov
mov
cwde
pop
in
scas
jae
mov
jmp
loop
outs
enter
pop
cmovg
mov
jae
aad
cmp
sti
lds
imul
sub
inc
lock
pop
test
lods
jns
cs
xchg
adc
neg
in
push
je
mov
mov
cmc
fstp
scas
jl
cmps
stos
cwde
fwait
sbb
add
xlat
mov
adc
xor
sbb
mov
dec
neg
(bad)
jb
out
adc
sbb
stc
jb
ja
arpl
mov
repz
and
loopne
ins
push
mov
pop
xchg
js
inc
mov
sub
xchg
aaa
out
aad
addr16
dec
stos
popf
adc
inc
mov
loope
movs
mov
add
xor
loope
xor
xor
sbb
ds
push
aaa
dec
and
mov
outs
mov
jg
xchg
fwait
pusha
lods
fnclex
movs
cwde
pop
dec
stos
mov
inc
into
aas
rcr
cli
mov
add
xchg
jmp
lods
imul
mov
(bad)
cmp
outs
in
fst
fidiv
dec
bound
and
lds
pop
pop
xchg
push
inc
xor
mov
cwde
repz
push
xor
jg
dec
js
rol
push
dec
mov
adc
xchg
mov
mov
frstor
je
xor
cmp
stc
mov
sar
in
add
inc
and
push
and
retf
jle
test
cmp
dec
popf
dec
mov
test
xor
shl
jbe
inc
fwait
test
sub
or
cmc
enter
sbb
inc
cdq
xchg
mov
mov
add
arpl
retf
pop
lods
shl
lea
arpl
cwde
daa
xchg
nop
inc
sbb
loop
fadd
lods
mov
jne
pop
sub
adc
jmp
ins
iret
dec
inc
repnz
dec
retf
sub
xchg
lods
es
add
fdivr
int
mov
out
adc
loop
xchg
and
push
aam
jp
outs
and
add
mov
fisub
mov
jbe
add
fisttp
jecxz
cmp
enter
xor
or
mov
dec
add
rol
ret
cmps
lods
mov
jns
out
mov
icebp
xor
sbb
(bad)
in
in
aad
ret
es
pop
jmp
or
and
mov
out
pop
xor
fcomp
arpl
mov
stc
lods
leave
pop
lods
cmp
xchg
in
xchg
lock
lea
sub
cmc
pop
cmp
dec
je
sub
jg
sti
sar
mov
pop
shl
dec
ins
mov
loopne
test
jmp
adc
mov
pop
rol
scas
mov
lds
div
stos
loop
not
xchg
aas
sti
sub
xor
mov
mov
test
mov
mov
pop
ret
loope
(bad)
loop
adc
push
cmp
sub
out
mov
adc
in
inc
dec
sub
sub
dec
mov
divps
test
les
outs
push
xor
(bad)
out
push
aam
(bad)
mov
mov
iret
adc
xchg
inc
into
jl
js
shl
push
retf
inc
or
xchg
in
test
dec
test
push
mov
adc
stos
das
out
or
mov
pop
int
clc
or
addr16
enter
cs
push
loope
inc
inc
or
mov
or
push
vpmacsswd
jmp
adc
out
and
add
leave
mov
mov
call
test
pop
rcr
sub
jl
dec
stc
and
xor
out
jmp
(bad)
cmps
ret
popf
dec
clts
mov
inc
(bad)
push
mov
push
pop
fcmovnu
jge
das
sub
mov
jmp
out
aaa
cli
cmp
xchg
pop
mov
das
xor
out
clc
loopne
cmp
push
js
ins
mov
sahf
mov
lock
iret
test
ficom
xchg
cmp
aam
ins
shl
in
in
add
cmc
xchg
jae
add
jmp
test
push
(bad)
and
push
sub
outs
jmp
shl
add
rol
dec
and
fisubr
cmp
xor
mov
outs
xor
or
sub
mov
stc
sub
add
out
dec
int
jmp
xchg
cmp
xchg
jo
dec
jae
out
inc
daa
inc
mov
xchg
sub
xor
pop
retf
in
inc
in
les
out
lods
xchg
dec
dec
hlt
mov
leave
xchg
out
popf
mov
retf
push
jg
ss
mov
sub
sahf
xor
sahf
adc
sbb
mov
(bad)
xlat
ror
test
sub
or
mov
and
xor
inc
mov
(bad)
or
aam
pop
push
xchg
xchg
jo
add
(bad)
cmp
mov
or
cmc
adc
aaa
xor
pop
ja
rep
adc
mov
idiv
mov
or
push
push
cmp
sbb
fcmove
jb
scas
in
test
aas
or
mov
(bad)
or
mov
mov
fadd
ins
mov
xor
mov
cmps
scas
sahf
jmp
jne
bound
mov
iret
push
add
ret
dec
mov
jo
setge
loopne
sub
int3
ins
adc
add
dec
mov
push
cmps
fdivr
pushf
ja
jmp
jmp
mov
pop
aad
imul
popa
push
nop
(bad)
cmps
mov
fdivr
sbb
mov
lahf
loope
test
jne
sbb
int
cli
test
fild
jnp
mov
mov
(bad)
mov
sti
stc
scas
neg
(bad)
jmp
in
mov
mov
jge
adc
aaa
xchg
test
xchg
mov
rcl
lahf
inc
(bad)
mov
or
sub
repnz
retf
int3
iret
loop
ret
mov
cmc
movs
adc
jae
pushf
or
cmps
push
jns
jbe
jb
dec
cmp
add
aad
fadd
sub
dec
mov
lods
jmp
jb
ins
outs
or
sbb
shl
dec
les
js
cmps
test
adc
loopne
imul
ins
addr16
and
aas
(bad)
jp
les
jne
(bad)
mov
int3
adc
cmps
mov
pusha
jle
movs
push
sub
repz
test
imul
hlt
and
xchg
jmp
jmp
xchg
test
fld
jp
sbb
adc
in
cmovbe
adc
mov
xor
ret
sub
xchg
std
or
pop
ret
xor
add
inc
out
outs
(bad)
jg
cmp
sbb
outs
stc
lahf
(bad)
int
clc
sub
dec
shl
inc
sbb
shr
sbb
inc
lods
je
sbb
out
shl
paddsb
jb
bound
rcr
xchg
rol
sahf
cs
nop
push
test
fstp
js
sub
mov
adc
xchg
or
mov
cs
push
retf
(bad)
pop
dec
mov
neg
pop
sub
or
inc
pop
mov
mov
or
push
stc
sbb
pop
xchg
xor
rcr
dec
cmp
mov
mov
movs
pusha
cmps
call
fist
aas
inc
stos
push
sahf
(bad)
mov
mov
xchg
iret
and
loopne
mul
loope
push
push
push
mov
inc
inc
stos
mov
cmps
sbb
pop
mov
in
dec
and
cmp
jmp
pop
(bad)
push
es
ret
and
rol
out
xor
scas
push
sbb
or
fpatan
inc
(bad)
fstp
inc
xchg
loop
test
push
pusha
iret
adc
call
push
sbb
pop
xchg
mov
xchg
jns
ror
ret
test
xchg
mov
in
or
aam
xchg
pusha
sbb
cmps
test
ror
clc
xchg
push
dec
dec
dec
stos
sbb
xor
scas
in
jge
mov
jae
ss
mov
and
lods
xlat
int
pop
sbb
cmps
push
sahf
out
ret
adc
cmp
stos
dec
ror
add
pop
pop
jl
xor
sbb
std
sti
aam
(bad)
sub
repz
cmp
xor
cmp
(bad)
(bad)
sar
xchg
jg
pop
not
pusha
cwde
scas
add
xor
xchg
jne
add
fwait
sbb
cmps
push
mov
(bad)
push
add
jns
clc
jae
retf
sbb
repz
sbb
sub
loope
lods
or
cmp
jmp
pop
int
sbb
pop
lods
loopne
add
loope
jnp
imul
mov
mov
mov
or
shl
shr
fimul
fmul
mov
gs
aaa
aam
pushf
sub
test
push
push
mov
jmp
fistp
jl
int3
addr16
dec
sbb
and
scas
jmp
jns
pop
jmp
std
xchg
dec
mov
test
test
mov
out
mov
test
ins
std
jo
std
xchg
xor
sbb
mov
(bad)
loop
xlat
das
and
mov
daa
sbb
call
push
sahf
nop
cmp
scas
xchg
fcmovnb
aam
add
aad
xor
mov
cmp
add
(bad)
fnstcw
mov
stos
mov
mov
shl
cmps
outs
in
out
push
sub
in
dec
cmp
cmps
jecxz
in
addr16
xchg
pop
test
shl
(bad)
and
pop
push
fs
pop
push
dec
dec
stos
fisubr
leave
push
adc
push
outs
inc
retf
fsubr
lds
mov
ins
pushf
dec
aas
pop
sub
in
dec
push
jp
sahf
nop
retf
and
mov
pop
pop
mov
aam
(bad)
popa
sbb
sub
jno
popa
clc
arpl
(bad)
scas
add
arpl
push
xor
pop
arpl
jne
pop
int
fistp
les
cmp
outs
cmps
xor
xlat
and
fcom
retf
and
mov
sbb
or
cmps
data16
clc
or
enter
(bad)
repz
cmp
stos
(bad)
outs
jl
sbb
test
jmp
aas
sub
mov
mov
or
fdivr
fisttp
jmp
pop
sub
xchg
adc
mov
arpl
jl
js
test
retf
sub
shl
ror
mov
dec
and
shl
add
in
cld
adc
stos
sub
mov
xchg
call
xchg
ss
(bad)
push
scas
fisttp
mov
push
pop
fs
lahf
icebp
xor
(bad)
out
das
jge
cdq
das
pop
jo
push
inc
lahf
cmp
mov
dec
and
cmp
push
jmp
(bad)
test
fcmovb
pop
aaa
shl
sar
jns
jnp
stos
test
adc
pop
mov
jmp
fnsave
js
mov
inc
jo
xor
adc
xchg
jns
stos
retf
stos
arpl
movs
lea
mov
mov
loop
jmp
scas
int3
in
sar
cwde
sar
push
jae
mov
lahf
in
or
or
lds
mov
es
mov
add
and
call
push
mul
sub
pop
repnz
js
cmp
inc
add
fwait
push
sub
icebp
adc
add
dec
pop
add
xchg
mov
xlat
daa
in
test
retf
aas
or
mov
out
dec
inc
mov
ret
outs
aaa
loop
cli
dec
test
je
cli
pop
adc
fimul
mov
mov
inc
and
and
sub
mov
(bad)
sbb
data16
xchg
outs
std
xchg
mov
mov
loop
cwde
or
addr16
popf
scas
cdq
sbb
cmp
loop
or
push
ss
adc
mov
cld
std
imul
in
div
test
bound
ss
xchg
(bad)
adc
mov
push
inc
push
jo
push
gs
jmp
push
and
inc
xlat
and
or
jae
out
sbb
push
fst
pop
add
jnp
pop
cdq
adc
jg
mov
ss
fcomp
xor
not
addr16
or
sub
mov
mov
dec
mov
loop
push
cli
popf
mov
or
push
stos
popf
pushf
out
stc
dec
lods
ret
cs
push
jbe
movs
imul
shr
sbb
add
mov
mov
outs
(bad)
clc
pop
dec
xor
jmp
jl
aaa
inc
cmp
imul
add
lds
mov
iret
fisub
jl
stc
addr16
jne
mov
movs
test
and
mov
ja
call
ja
sahf
mov
xor
out
mov
lahf
and
jo
push
addr16
xchg
mov
dec
movnti
cmp
in
aaa
call
nop
mov
imul
inc
push
sub
xchg
cld
bound
dec
adc
test
mov
out
inc
in
and
arpl
jg
ret
pusha
pop
scas
pop
push
mov
mov
lahf
out
xchg
jne
call
gs
push
aam
or
push
cmp
mov
and
sub
fnstcw
pop
repz
pop
or
add
lods
adc
cmp
aad
fwait
xor
outs
jmp
adc
pop
sbb
ror
pop
adc
push
and
int3
push
call
push
fild
and
fsubr
sbb
jmp
fisubr
jge
daa
or
in
jecxz
cmc
inc
test
xchg
push
sbb
aam
dec
xor
dec
aaa
sahf
jmp
sahf
ret
dec
pop
arpl
mov
es
lea
icebp
(bad)
bound
xor
push
fcomp
mov
dec
jp
outs
jno
sub
(bad)
cmp
xor
addr16
cld
mov
or
xchg
inc
fld
inc
dec
retf
je
push
sub
or
out
pop
jne
(bad)
fstp
pop
sbb
test
scas
push
mov
adc
mov
test
lds
push
out
leave
shl
inc
ss
pop
adc
inc
jb
stos
push
cwde
fs
in
cmps
sub
ss
int
pop
xchg
shl
inc
dec
sti
cmp
push
mov
or
mov
adc
adc
mov
cmp
rol
movups
push
or
cmps
push
lock
push
mov
dec
adc
leave
loop
in
fistp
cmovle
fld
xor
(bad)
cmp
push
mov
mov
mov
cs
adc
cdq
in
aaa
cmps
fsub
in
shr
add
int3
or
int
dec
sub
cs
push
arpl
int
(bad)
fs
sub
dec
ret
fucomp
lods
repnz
aaa
call
jecxz
ja
sub
dec
call
repz
xchg
imul
dec
call
xchg
popa
div
jae
mov
imul
fwait
sbb
sub
push
pop
data16
aam
xchg
pushf
xchg
js
mov
jmp
add
xor
push
pop
adc
frstor
mov
test
sub
add
aam
test
xor
xchg
mov
and
cld
pop
sub
ins
(bad)
mov
loop
fadd
test
and
xadd
push
ret
push
loop
mov
add
stos
lds
out
cmp
add
stos
mov
dec
xchg
repz
and
popf
pop
sub
sub
mov
imul
dec
mov
adc
mov
mov
test
sbb
push
push
movs
test
sti
inc
cdq
fprem
mov
adc
mov
repz
int3
dec
jmp
daa
int
jne
push
sub
leave
dec
packsswb
push
push
dec
leave
ds
mov
cmp
pushf
repnz
mov
sub
cmp
push
ss
dec
gs
aas
dec
push
or
jno
ret
retf
xor
pop
(bad)
mov
adc
cmps
out
sbb
in
dec
lock
xlat
dec
pop
xor
(bad)
and
mov
or
(bad)
jecxz
mov
pop
cmp
imul
test
jecxz
outs
jge
ficom
(bad)
mov
jo
cli
mov
pop
inc
cmp
inc
adc
sub
mov
xor
jmp
scas
retf
sahf
repnz
mov
call
mov
cmp
cwde
inc
xlat
imul
dec
mov
push
jae
push
ret
sbb
inc
sub
mov
movs
mov
ret
cwde
pop
sub
out
mov
add
push
(bad)
xor
adc
(bad)
pop
imul
cmp
jbe
std
fild
push
pop
add
cs
pop
push
and
neg
scas
js
cmp
mov
(bad)
mov
cdq
xchg
mov
sub
loope
call
je
test
stos
push
adc
ds
hlt
fist
mov
add
jb
push
inc
and
jle
fwait
out
dec
movs
lea
iret
ficomp
mov
xchg
jno
mov
push
arpl
cwde
cmps
inc
outs
push
ret
test
jg
popf
icebp
hlt
je
mov
jecxz
sbb
push
clc
jl
loop
cdq
jmp
jbe
aaa
and
dec
dec
xchg
cdq
rcl
gs
mov
dec
loope
int
test
scas
out
pop
xchg
inc
and
dec
mov
jnp
push
and
jp
mov
mov
ins
or
inc
push
repnz
lock
pop
inc
add
out
fidivr
adc
dec
mov
dec
mov
sub
int3
adc
divps
das
stos
enter
push
popa
out
pop
inc
adc
popf
mov
(bad)
enter
(bad)
fild
cmp
jae
pop
or
add
repz
in
xchg
fcmove
xchg
or
jno
int3
mov
pop
repz
xchg
or
in
int3
popf
ja
lock
repnz
cmc
or
jp
mov
movs
fist
loop
mov
sbb
jecxz
push
ja
sbb
push
psubsw
or
xchg
das
not
movs
ret
jno
mov
pusha
sub
arpl
sbb
jb
sub
fwait
xchg
add
repnz
loop
(bad)
fisttp
adc
jp
cmp
push
jae
dec
(bad)
xchg
sub
popf
xchg
jnp
mov
fisttp
push
or
dec
add
mov
stos
sub
jg
(bad)
in
loop
sub
(bad)
cmp
nop
fisub
ret
or
mov
xor
addr16
nop
fwait
out
iret
movs
fld
adc
mov
lock
nop
add
inc
inc
xchg
repz
(bad)
jmp
movs
dec
aad
retf
outs
pop
or
adc
sub
shl
sbb
mov
rol
das
pop
jge
xchg
shl
ins
adc
(bad)
retf
add
pop
cmps
cmp
xchg
sub
pop
loopne
cmps
mov
dec
icebp
dec
jno
xchg
test
xor
add
cwde
shl
fmul
jae
mov
ss
loopne
sbb
gs
push
mov
mov
lods
push
sub
mov
and
mov
hlt
cmps
sti
push
fistp
push
add
inc
cdq
or
hlt
in
outs
mov
inc
mov
jb
imul
out
dec
add
or
fisubr
neg
jmp
mov
loop
inc
icebp
stos
xor
xor
adc
xor
mov
xchg
mov
aaa
push
pop
adc
test
adc
push
fisttp
xchg
push
xchg
mov
retf
shr
lahf
pop
bound
push
mov
stos
aad
cdq
inc
loop
inc
sub
fadd
cmp
cs
lds
adc
and
shl
dec
mov
std
test
mov
xchg
popf
xchg
push
ret
inc
popf
xchg
lsl
pop
add
fwait
mov
test
pop
fld
fdivr
cmp
dec
(bad)
push
mov
mov
rol
leave
and
jbe
(bad)
xchg
jne
aam
loop
loopne
test
inc
daa
lock
jmp
addr16
xor
hlt
scas
ret
mov
stos
sahf
push
pusha
sub
jl
stc
stos
inc
mov
cs
inc
push
fucomi
in
mov
nop
cmp
add
lods
ins
shl
ins
mov
xor
xchg
jle
add
cmp
jecxz
pop
jecxz
inc
mov
push
push
inc
push
mov
adc
shl
sub
fs
stos
inc
icebp
pop
cld
lock
(bad)
in
sub
(bad)
vextractf64x4
mov
jne
sub
lahf
push
pop
test
call
jmp
xchg
mov
jp
shl
mov
jle
outs
test
lahf
cld
mov
xchg
clc
lods
in
cs
loop
mov
jb
xor
sahf
xlat
stos
jecxz
repz
mov
outs
gs
dec
pop
out
daa
adc
pop
dec
adc
ins
in
(bad)
aad
and
addr16
mov
in
xor
mov
aas
aas
cmps
sbb
xor
iret
pusha
ret
test
dec
xchg
jne
mov
add
in
(bad)
cmp
inc
cmp
mov
pop
sub
sub
cmp
xor
cmc
sub
or
fild
shl
rol
jno
in
adc
xor
lods
xor
xlat
xchg
(bad)
mov
pop
fidivr
jmp
sbb
mov
add
inc
ja
jae
pop
or
xor
sbb
lahf
mov
add
adc
call
jl
loop
jns
push
sub
retf
dec
imul
stos
fstp
xor
fmul
push
xchg
sbb
test
arpl
inc
cmp
fild
cmp
adc
imul
mov
(bad)
popf
js
add
fsubr
mov
std
sub
add
aam
pop
jne
inc
mov
mov
xchg
inc
repz
or
lock
sub
out
scas
popa
and
xchg
call
mov
cmps
and
dec
push
aad
or
push
cmp
and
push
jl
push
xchg
fild
int3
out
mov
sahf
sub
xor
xor
jecxz
adc
jb
adc
mov
xor
xor
mov
inc
neg
inc
dec
sahf
add
(bad)
sbb
add
fiadd
js
adc
pop
pop
sub
xchg
inc
or
pop
cmp
xchg
mov
xchg
nop
pop
xor
outs
push
add
mov
cmp
popf
je
xor
dec
jno
int
cs
movs
and
xor
jl
sub
hlt
pusha
test
shr
sub
dec
ret
and
xor
sahf
inc
ss
(bad)
pop
add
dec
sub
pop
and
loope
aad
cdq
push
mov
int3
xchg
sbb
inc
mov
dec
adc
ja
ret
in
fwait
leave
std
jns
push
jmp
sahf
dec
fst
fld
ins
das
push
aaa
lods
rol
dec
mov
addr16
add
fsubr
aas
jb
data16
(bad)
fimul
mov
inc
cmp
je
jmp
jle
jmp
aaa
rcr
cmp
(bad)
ror
mov
cwde
jmp
sbb
pop
mov
mov
ficom
(bad)
jb
paddusw
pop
adc
(bad)
xchg
cs
movs
sbb
sub
fnstsw
rcl
test
cmp
stos
jl
adc
ret
jo
leave
lahf
in
int
jp
xchg
sbb
icebp
and
sbb
jge
out
cmps
pop
adc
imul
or
xchg
jns
jnp
pop
xor
call
push
adc
adc
add
and
fst
(bad)
xor
push
mov
cmp
leave
add
hlt
mov
fisubr
ror
mov
aas
out
mov
test
cmp
sub
adc
push
cmp
ror
inc
das
imul
inc
out
mov
out
repnz
jns
movs
cmp
add
adc
mov
jmp
dec
adc
push
test
add
xchg
jmp
adc
mov
cmps
test
hlt
push
jp
pop
imul
pop
scas
mov
xor
mov
in
in
jae
sub
pop
stc
cmc
shl
pushf
or
shl
stos
push
mov
add
sar
fbld
enter
jp
pop
pop
icebp
cmp
mov
jle
out
shl
cmp
cmps
add
add
ret
icebp
std
mov
dec
inc
test
rcr
mov
cmps
mov
mov
xchg
sub
fcom
cmp
int3
xor
outs
nop
cmp
xor
inc
mov
leave
add
cmp
fsubr
add
jle
adc
jbe
mov
push
jmp
xor
sub
xchg
enter
stos
hlt
jbe
xchg
shr
test
inc
add
cmp
jl
adc
shl
hlt
xchg
fisubr
jno
sbb
push
shr
repnz
mov
xor
jno
jge
test
js
or
sbb
aas
sub
xchg
mov
push
loope
push
rcl
in
call
jge
cli
and
cwde
imul
mov
shl
ja
enter
mov
adc
outs
or
imul
mov
jl
xor
xor
xchg
cwd
imul
ss
inc
xchg
add
add
ins
mov
push
xor
mov
jb
mov
icebp
out
adc
mov
hlt
adc
sti
iret
in
dec
cli
add
das
xor
xor
sub
jae
sub
pop
daa
inc
fidiv
jmp
adc
push
jnp
cmp
lock
jb
sub
mov
jo
dec
pop
mov
dec
pusha
inc
sbb
lds
xchg
sbb
push
aad
push
ds
pop
(bad)
jbe
daa
out
mov
push
mov
sub
jbe
push
mov
mov
push
mov
jmp
enter
sbb
or
retf
push
rcr
jnp
jb
mov
and
outs
and
cmp
sub
int
call
sbb
fisubr
mov
add
xor
cmp
das
sbb
loop
leave
inc
add
mov
or
and
mov
mov
xchg
cmps
push
das
xchg
(bad)
addr16
mov
fwait
xor
dec
xor
mov
pop
mov
lods
adc
ret
cld
js
cs
or
mov
or
test
mov
jo
xchg
mov
add
out
shr
or
xor
jnp
sbb
cs
cmp
cmc
jle
sbb
shr
inc
pop
jge
(bad)
loop
mov
cli
(bad)
jg
mov
jge
sub
ror
lods
sub
add
retf
jbe
aas
mov
sbb
mov
mov
xor
cmp
xchg
push
scas
mov
das
inc
stc
invd
xchg
stc
and
sbb
cmp
adc
ins
push
pop
outs
das
push
push
sub
pop
push
pop
retf
xor
nop
or
sub
mov
cld
add
int
nop
dec
dec
add
test
imul
push
aad
mov
xor
sbb
test
mov
not
jecxz
add
cmps
sbb
shl
retf
and
test
out
mov
dec
mov
push
inc
in
jge
sti
mov
ss
fimul
(bad)
ror
shr
inc
dec
mov
push
lds
lock
mov
jnp
jbe
jb
and
and
out
jne
inc
aaa
jmp
lods
xor
ror
ins
jmp
sbb
push
jl
repz
xchg
xchg
sub
or
enter
in
or
sti
or
daa
pop
int
mov
mov
lock
inc
adc
(bad)
and
dec
out
sub
mov
cmp
rcl
fstp
div
jmp
je
push
lods
push
or
add
cmc
fdiv
js
sar
xchg
sti
push
or
jns
in
mov
icebp
ins
push
out
cmp
dec
push
sbb
aad
xchg
rol
movzx
xchg
add
xchg
xchg
cdq
mov
jg
aaa
shl
stc
or
pop
not
inc
inc
dec
stos
inc
dec
into
fist
lock
pusha
je
std
mov
mov
cdq
inc
js
push
out
dec
cmp
push
xchg
pop
pop
inc
or
push
ud0
xor
cmp
xchg
sbb
out
sub
(bad)
retf
aad
cmp
and
pop
push
adc
add
pop
or
cmp
aam
call
sub
jo
je
mov
outs
popa
jge
adc
xchg
cmp
cmp
stos
push
push
jmp
dec
and
arpl
and
in
push
mov
push
jmp
xchg
xor
pop
dec
mov
imul
out
int
mov
jle
cmp
inc
adc
mov
mov
test
sub
push
xchg
pop
stos
adc
lock
cwde
and
out
cmp
call
pop
mov
aaa
stos
data16
ss
mov
adc
fwait
and
es
test
stos
fucomi
push
ds
pop
repnz
mov
int3
sti
add
js
mov
retf
clc
call
mov
or
test
mov
int3
fsubr
cld
retf
loop
mov
mov
jmp
jmp
pop
mov
dec
xchg
fs
stc
gs
aam
and
mov
les
push
pop
jp
mov
test
fistp
jge
call
inc
(bad)
(bad)
jbe
cwde
xor
(bad)
in
mov
dec
mov
fs
sbb
jne
cmp
popf
arpl
int
out
jge
das
mov
or
js
sub
mov
lar
mov
ror
xor
xor
jmp
adc
inc
ret
xor
mov
dec
aad
push
iret
in
loope
out
(bad)
arpl
sub
pop
cmp
mov
push
ja
lahf
mov
(bad)
sbb
cs
pop
mov
mov
mov
(bad)
fcomp
pop
es
jnp
out
das
fisub
(bad)
push
push
test
mov
and
adc
adc
jmp
repz
fadd
jle
mov
pop
stc
pop
loope
hlt
sub
sub
push
adc
pop
xlat
jns
int3
hlt
rol
inc
cs
cmp
jmp
shr
test
ror
sbb
stc
dec
dec
nop
push
fnclex
sub
xor
push
push
aas
push
jg
(bad)
inc
inc
pop
loop
mov
cld
jp
xor
cmp
mov
xchg
js
dec
mov
fild
mov
fidivr
gs
dec
pop
out
push
pop
inc
xor
pop
aam
jnp
(bad)
ds
ja
add
out
aas
push
cwde
clc
ret
mov
cmp
gs
je
push
aad
add
mov
adc
mov
cmp
je
mov
clc
xor
ror
cmp
push
cmp
mov
mov
cdq
in
jge
add
push
mov
pop
adc
inc
movs
ja
pop
and
lods
mov
in
mov
gs
rcr
iret
sbb
daa
ds
mov
outs
cmp
cmp
cld
push
xchg
push
stos
loop
push
cmp
dec
xlat
xchg
xor
dec
mov
cbw
mov
jmp
call
test
mov
and
inc
mov
push
fldenv
push
push
mov
cmp
dec
adc
sbb
mov
xchg
inc
mov
xchg
popf
xchg
popf
out
mov
add
in
dec
sub
daa
sbb
mov
cwde
jmp
div
(bad)
xchg
jmp
idiv
pop
cdq
push
lods
or
cld
repnz
dec
stc
mov
enter
aaa
aad
imul
sub
cmp
cmp
cmps
inc
out
or
std
movs
fs
jnp
movs
xchg
ret
mov
xor
mov
mov
jecxz
xor
lock
test
mov
cli
ret
xor
(bad)
cmp
sub
sub
out
and
scas
cs
lock
xchg
xor
scas
pushf
fs
xchg
stos
jb
mov
xchg
pop
mov
out
mov
or
movs
push
hlt
out
push
mov
cld
ret
rcr
cmps
ja
xor
mov
push
(bad)
leave
xlat
inc
jmp
mov
push
xor
adc
inc
pop
int3
jae
mov
test
(bad)
mov
jnp
es
pop
adc
pop
stc
imul
(bad)
mov
sub
stos
cmp
pushf
pop
mov
jg
pop
rol
repnz
pop
adc
push
xor
stos
mov
mov
push
ins
ja
sub
jmp
mov
sub
cmp
cmc
mov
lods
call
cmp
pushf
aaa
and
imul
mov
mov
movs
sbb
jne
outs
icebp
mov
int
test
pop
sbb
xlat
mov
adc
shl
mov
cmp
xchg
fld
or
je
pop
xchg
popa
iret
(bad)
pop
mov
sbb
adc
clc
and
cmp
sub
sbb
dec
adc
in
imul
and
mov
out
adc
ja
aas
std
(bad)
adc
adc
push
sub
sahf
sub
inc
cmp
jmp
fcomp
repnz
add
out
pop
call
les
dec
(bad)
in
and
int3
addr16
push
jl
(bad)
or
xor
cmps
je
mov
repnz
mov
mov
in
sbb
sub
sub
sar
shr
push
inc
sub
mov
mov
or
icebp
mov
out
ffree
xor
repnz
adc
nop
xor
gs
loopne
sahf
aad
xlat
stos
scas
mov
adc
pop
loopne
pusha
push
repnz
sbb
cmp
push
loopne
lods
or
mov
mov
not
pop
std
lds
jmp
sub
in
push
cmps
add
jno
adc
fcmovb
mov
cmp
shl
popa
dec
retf
mov
jmp
pop
mov
out
push
push
in
add
enter
in
das
or
xchg
scas
test
add
aaa
out
test
inc
jae
sub
dec
jb
int3
out
into
mov
or
push
mov
(bad)
in
pushf
sub
cmp
or
sbb
dec
call
and
inc
xchg
dec
adc
int3
cld
fdivr
mov
ins
imul
adc
xchg
and
push
es
cld
xor
sbb
inc
add
pop
lods
mov
add
adc
inc
imul
or
push
js
mov
push
pushf
add
add
ror
cwde
jne
test
cmp
stos
mov
es
nop
sub
inc
adc
cmc
cmp
clc
add
outs
icebp
push
or
push
out
dec
jl
(bad)
cmp
sbb
or
mov
mov
out
stc
out
call
mov
dec
pusha
out
inc
stos
jge
adc
inc
in
dec
adc
jnp
ins
sti
or
jbe
and
mov
or
loopne
inc
jns
inc
pop
pusha
out
lock
pop
stos
jle
loope
sbb
mov
mov
push
mov
add
ret
add
enter
(bad)
into
rcl
mov
retf
push
stc
enter
cld
mov
xchg
jge
xchg
es
ret
dec
sub
dec
mov
cmp
add
lods
repz
ds
mov
mov
lea
stc
out
xchg
idiv
mov
xchg
push
hlt
popa
nop
cmp
push
loope
into
sbb
cmp
adc
lds
fcomip
ficomp
mov
out
(bad)
fldcw
or
nop
and
add
pop
outs
out
or
pop
in
cli
or
outs
imul
add
aam
lea
or
adc
adc
add
sbb
(bad)
(bad)
xor
sbb
test
mov
repnz
in
sti
push
loop
adc
inc
pop
sub
and
clc
lahf
je
ja
call
add
push
inc
stc
mov
dec
xchg
xchg
ret
pop
movs
retf
in
movs
push
mov
lds
rol
ror
mov
mov
or
lods
push
stos
sar
ins
and
rcl
lea
or
sbb
test
pop
scas
dec
les
loop
adc
dec
and
movs
pop
mov
sub
dec
xlat
xor
call
stos
or
scas
bound
or
mov
inc
push
clc
shl
and
jbe
sbb
mov
xor
push
add
stos
in
xchg
(bad)
cmc
cmp
call
mov
repnz
sub
or
mov
pop
leave
data16
loope
jno
jno
cmp
inc
imul
inc
push
into
test
stos
mov
xor
retf
and
push
std
mov
imul
les
stos
scas
or
or
adc
test
rol
test
in
fistp
pop
shl
leave
dec
mov
push
xchg
adc
imul
mov
in
mov
loop
or
out
hlt
scas
imul
push
nop
fbld
push
les
fs
shr
jb
outs
pop
fdivr
jb
cwde
lds
sti
and
iret
dec
stc
imul
and
inc
sbb
jne
arpl
mov
jmp
lds
adc
cmp
fdivr
shr
mov
lds
mov
mov
pushf
dec
mov
int
cmps
dec
dec
and
cmp
xchg
out
aaa
dec
mov
xor
cs
xor
fisubr
std
sbb
loop
cmp
push
xchg
test
cmp
shr
inc
ins
call
mov
lahf
jg
sub
movs
sub
sub
cmp
arpl
pop
adc
loop
xchg
adc
sub
jne
xor
fwait
test
test
cmps
cmps
cmp
xor
loop
sbb
mov
fld
xchg
mov
jo
mov
add
outs
push
xchg
push
mov
jns
cld
mov
iret
in
daa
aaa
int3
cwde
or
cmp
data16
or
push
dec
and
mov
sbb
lods
in
adc
pusha
fnsave
(bad)
(bad)
aas
mov
mov
stos
imul
rcl
jb
(bad)
cmp
sbb
sub
adc
xchg
mov
sub
dec
add
out
mov
pop
ja
retf
mov
pop
inc
cmp
test
out
pop
(bad)
daa
ror
and
(bad)
push
enter
sti
dec
cmp
aas
shr
push
or
das
mov
mul
push
inc
lods
fisubr
add
inc
imul
cmp
sub
pop
sbb
sbb
test
dec
adc
stos
jg
jbe
scas
(bad)
in
js
mov
nop
shl
cmp
loop
adc
test
inc
cmp
and
fcom
into
adc
cmp
pop
repz
dec
mov
scas
jb
hlt
rcl
fiadd
popa
icebp
gs
fimul
jmp
stos
mov
ret
dec
sbb
imul
int3
fcomi
mov
retf
stos
fst
xchg
dec
hlt
(bad)
in
xchg
ret
scas
push
mov
stc
ins
in
mov
jo
addr16
mov
pop
leave
scas
test
adc
mov
dec
ja
mov
das
(bad)
cwde
pushf
imul
push
mov
mov
scas
mov
lock
xchg
cmp
and
(bad)
out
mov
pop
adc
aad
cmp
arpl
(bad)
cmp
(bad)
adc
in
or
test
loopne
sahf
sub
inc
and
and
ds
scas
mov
dec
xor
loope
fst
inc
push
mov
cmc
ss
sub
push
xchg
test
sti
add
rol
dec
aaa
pop
rol
aam
and
or
(bad)
mov
out
add
jl
mov
or
shl
pop
mov
cmp
clc
and
xor
fist
cld
retf
adc
cmp
sub
dec
sub
shl
cmp
sub
dec
and
sub
in
icebp
and
xchg
pop
and
(bad)
aam
lods
les
jnp
in
mov
pop
sbb
out
sar
xor
and
mov
das
dec
sub
sahf
lods
and
or
and
mov
cwde
xlat
cmps
or
std
hlt
iret
jb
std
inc
fdiv
sub
sub
inc
push
xlat
jae
sub
aaa
jb
and
sbb
sbb
lods
fwait
mov
xchg
xchg
popf
fcom
out
ins
dec
daa
ret
mov
add
in
mov
cmps
mov
adc
push
pop
inc
inc
sub
cmp
xor
xor
jns
clc
out
jmp
repnz
adc
mov
jmp
xor
jmp
addr16
shl
sub
push
mov
mov
push
in
xchg
xor
ins
xchg
addr16
add
add
fnstenv
cmps
cwde
cs
imul
xor
(bad)
jbe
lods
adc
rcr
jns
sub
mov
push
shl
pop
jbe
imul
inc
test
test
imul
cmp
pop
mov
pushf
mov
scas
pop
push
repz
lahf
cmp
sbb
rol
or
push
fld
sbb
sbb
(bad)
cmc
cs
fwait
jo
mov
(bad)
sub
or
or
mov
loope
pop
inc
xor
dec
cmp
out
adc
(bad)
sub
scas
repz
sub
ds
retf
or
add
pop
mov
loope
sbb
push
sub
push
pop
jnp
dec
dec
arpl
pop
out
xchg
cmp
mov
mov
or
int3
mov
icebp
mov
cmp
fsubr
sti
mov
cmps
lahf
and
or
add
add
mov
dec
xchg
adc
and
hlt
out
retf
dec
xchg
js
sub
popa
(bad)
adc
jb
das
inc
ror
cmp
xchg
jne
add
popf
mov
nop
jnp
pop
dec
dec
stos
into
pop
adc
jl
inc
rol
adc
jmp
std
lea
shl
pop
cmp
push
pop
jl
adc
mov
push
pop
rol
dec
leave
aad
mov
sahf
push
xchg
ins
test
push
fnstenv
xchg
loop
ret
pop
add
in
ins
push
xor
inc
fsub
xor
test
loopne
(bad)
clc
(bad)
jecxz
xlat
test
xchg
xchg
pop
ja
pusha
movs
sahf
(bad)
pushf
add
jg
nop
out
push
jae
push
outs
pop
cli
push
into
cwde
xlat
pop
das
cmps
push
in
mov
jns
jne
icebp
add
jno
xchg
dec
jmp
xor
data16
push
popa
xchg
pop
ds
add
adc
xchg
shl
in
imul
cmp
adc
pop
cwde
addr16
jne
jno
hlt
xchg
add
and
int3
jb
enter
mov
outs
daa
outs
pop
adc
mov
retf
sub
or
outs
mov
in
sub
bound
sub
cli
cmp
add
fnstcw
mov
ins
mov
lea
cmps
mov
pop
outs
not
adc
fadd
scas
lds
or
add
jae
test
xor
add
pop
add
(bad)
mov
pop
int3
in
clc
out
mov
add
in
xchg
ds
repnz
add
mov
pop
sub
gs
sbb
and
rol
push
xchg
mov
jmp
or
test
inc
sub
mov
mov
and
stc
push
adc
sub
pop
sbb
pop
jo
mov
adc
stos
and
fsub
imul
xchg
movs
into
outs
xchg
cmp
shl
push
aad
jo
jbe
pop
icebp
leave
push
adc
rcl
mov
fiadd
in
stos
retf
std
loope
push
into
sbb
mov
sahf
jnp
pop
mov
test
push
mov
movs
lds
out
adc
dec
xchg
sar
pop
mov
adc
add
push
lods
inc
sbb
sub
and
lods
xor
xor
push
pop
cmp
loopne
fisttp
jb
in
cmp
xlat
test
dec
and
popa
jmp
loope
xchg
dec
add
int3
loop
xchg
sahf
in
in
and
scas
loopne
pop
push
jmp
lods
stos
pop
and
loope
jno
inc
call
and
int
sbb
mov
clc
cmp
cmp
and
mov
sub
out
out
jle
jle
js
xor
lds
push
add
or
add
lods
iret
xchg
dec
into
push
ds
popa
cli
adc
loope
mov
inc
xor
rep
xchg
dec
arpl
fdivr
and
in
mov
std
xor
jns
stos
pop
pop
sbb
sbb
cmps
popf
cmps
mov
xlat
ins
test
out
add
lock
xlat
pushf
mov
iret
push
cmp
rcl
aam
mov
add
pop
inc
imul
adc
xchg
cmp
pop
add
adc
adc
push
lock
je
test
cwde
sub
retf
or
dec
test
inc
add
or
outs
or
cwde
add
retf
push
loop
xor
mov
jno
jg
xchg
adc
xchg
cmp
dec
mov
or
inc
sbb
cmp
cmp
in
jl
(bad)
(bad)
or
mov
mov
ds
and
and
mov
inc
bound
mov
xchg
push
and
sar
jnp
jnp
in
(bad)
jmp
push
dec
xchg
adc
nop
or
icebp
push
movs
enter
mov
xor
xchg
int3
add
xlat
mov
shr
adc
mov
mov
push
adc
xchg
dec
sub
cmp
mov
mov
loope
mov
jns
outs
shl
ret
cmps
aaa
add
stc
(bad)
lods
xchg
(bad)
icebp
popa
sbb
and
mov
das
outs
int3
mov
data16
sbb
mov
jg
gs
sub
inc
aas
fisub
fdivr
mov
jae
mov
fdiv
pop
xchg
push
shl
and
data16
fs
test
call
xlat
push
add
sbb
std
pop
mov
mov
fsub
dec
mov
lods
sbb
mov
in
ror
inc
cmp
sahf
xor
xor
cwde
out
and
and
or
adc
outs
(bad)
enter
sahf
jbe
(bad)
div
repz
xor
lock
add
and
inc
daa
and
inc
shl
loopne
(bad)
xchg
pushf
jp
lds
sub
dec
lock
cmp
std
and
outs
xlat
mov
sahf
mov
pop
dec
stos
add
and
retf
(bad)
into
sub
dec
rol
or
aam
in
lods
mov
pusha
shl
mov
cmp
xchg
cdq
push
pop
sub
sahf
outs
jo
jl
pop
das
repnz
mov
add
mov
rcl
push
or
mov
push
out
and
and
sbb
sbb
das
and
jecxz
pop
dec
fs
int
inc
data16
push
mov
jo
repz
cli
dec
jmp
sahf
pop
mov
pop
popf
push
cs
fstp
cs
push
sbb
lds
pop
push
jl
test
adc
xchg
les
mov
sahf
sub
bound
lds
(bad)
stc
hlt
and
mov
shl
jo
pop
mov
add
mov
xor
in
test
test
gs
jecxz
mov
push
popf
inc
aad
movs
ins
inc
test
inc
and
cdq
cmp
lds
mov
push
mov
loop
mov
dec
pop
rol
inc
mov
movs
push
inc
mov
sahf
mov
imul
bound
xchg
jb
fisttp
sub
aas
fcomp
lods
sbb
dec
jp
mov
pushf
xor
rol
jne
jno
test
and
fs
and
ror
pop
adc
push
mov
mov
jne
sub
or
lea
xor
cmp
mov
or
jg
in
jmp
lahf
scas
mov
pop
push
sub
dec
cmp
pop
sbb
daa
or
push
mov
retf
or
jb
jmp
enter
cmp
movs
hlt
lds
jnp
test
jmp
jg
ror
xor
cwde
jecxz
and
rcr
mov
lahf
jmp
mov
inc
mov
dec
ins
sbb
or
xchg
cmp
mov
(bad)
sub
jne
test
or
jae
jl
rol
mov
test
push
and
sahf
pushf
fnstsw
xchg
jl
cmps
leave
leave
bound
sti
cdq
sbb
cli
hlt
mov
imul
test
xchg
ja
sbb
mov
popf
outs
sbb
xchg
loope
call
lods
fcomi
das
jge
ret
pop
xor
iret
sub
ins
xchg
(bad)
push
cmp
push
das
lahf
add
xchg
and
cmp
imul
cmp
push
jbe
sbb
jg
stc
aad
mov
clc
mov
pop
mov
cdq
jp
aaa
aam
and
into
je
inc
into
aam
call
jg
test
cdq
pop
lods
add
cmp
sar
mov
mov
cmps
or
xchg
lock
stc
test
sub
aam
push
mov
mov
(bad)
fcmovu
fidivr
sbb
inc
push
cli
cmps
scas
ret
or
out
aaa
mov
in
and
jle
test
stc
mov
mov
cwde
jo
adc
or
into
mov
outs
fwait
adc
xor
jns
dec
rcr
lds
or
jle
pop
or
clc
in
loop
fnstcw
lods
test
xor
add
sub
xor
inc
adc
mov
je
clc
leave
int
aaa
cmp
push
ret
push
addr16
pop
xchg
inc
pusha
movs
inc
pop
enter
inc
aas
movs
fwait
inc
inc
sti
cli
jo
sbb
mov
idiv
addr16
ror
ins
jle
daa
bound
ret
in
lahf
test
fucom
cmp
xor
fdivr
cmp
lea
inc
popa
ret
jp
outs
popf
imul
dec
mov
and
jmp
add
push
popf
nop
int
and
jae
push
loop
mov
jo
ins
sub
fimul
sub
and
jg
mov
push
movs
stos
pop
jmp
mov
xchg
mov
push
rcr
inc
pusha
hlt
ss
push
mov
jp
cdq
cmps
sub
fidiv
mov
iret
or
lds
push
pop
int
sub
cmc
pop
movlps
ret
or
lds
stos
int3
pusha
mov
cmp
inc
shr
cli
arpl
lds
push
mov
or
xlat
test
sbb
retf
jo
call
cwde
scas
into
or
mov
push
out
iret
dec
sub
das
out
cmp
(bad)
test
sub
mov
(bad)
call
jmp
scas
mov
dec
xchg
aad
add
mov
inc
ds
cmp
xchg
aam
imul
and
xor
aas
mov
rcr
jbe
ins
xor
pop
mov
bound
cld
cmp
fcmovnu
bound
fs
pop
fwait
bound
jmp
repnz
popa
dec
fistp
push
(bad)
repnz
pop
inc
pusha
push
add
aad
(bad)
mov
and
xor
jmp
repnz
xchg
sbb
push
shl
sbb
mov
jo
(bad)
outs
fwait
push
in
imul
jmp
ja
call
in
(bad)
pop
or
mov
retf
push
fsubr
mul
leave
push
sbb
adc
jp
and
dec
pop
pop
fistp
xlat
or
jmp
dec
jo
push
aaa
add
jg
push
jp
stc
xor
sbb
fnstcw
int3
lahf
fdivr
mov
xor
stc
jae
pop
mov
pop
(bad)
scas
pop
add
mov
es
or
jmp
iret
cmp
push
sti
repz
mov
and
mov
test
dec
in
ins
sbb
sub
or
cmp
fst
pop
pop
movs
xor
retf
xchg
push
jmp
fadd
retf
ds
jo
mov
jmp
mov
test
add
jl
mov
xchg
adc
xchg
mov
ins
lock
cmp
into
jl
inc
mov
fdivr
cli
adc
xor
jmp
xchg
sbb
shl
lock
lods
inc
add
call
jecxz
jnp
out
push
pushf
push
add
imul
int
xor
hlt
outs
and
dec
stc
adc
inc
into
retf
mov
aam
out
push
ret
jae
push
(bad)
lds
cs
js
jmp
sbb
(bad)
jae
cmp
push
bound
push
pop
mov
adc
repz
push
dec
out
inc
add
jmp
(bad)
pop
push
sub
dec
pop
in
loope
addr16
pop
xchg
out
mov
cmp
ficom
imul
and
(bad)
mov
dec
pop
jae
cwde
in
js
pop
and
fdivr
xchg
(bad)
out
out
test
out
dec
adc
ret
sbb
icebp
pop
sub
cs
shl
add
mov
std
cmp
and
out
cmp
jmp
mov
jecxz
cmp
adc
in
mov
ret
pop
and
imul
int3
ins
(bad)
aas
xor
sbb
and
xchg
dec
ja
mov
jno
enter
pop
mov
pop
cmc
pop
rol
iret
jne
and
add
xchg
dec
adc
daa
or
arpl
jo
dec
pop
jmp
mov
mov
repz
fs
cmps
mov
mov
xor
dec
daa
notrack
test
dec
(bad)
rol
jns
test
fwait
cmp
fidiv
mov
mov
scas
(bad)
out
mov
and
xchg
pop
or
test
inc
sbb
jnp
call
(bad)
cdq
fsubr
dec
cmp
js
mov
(bad)
rcl
shl
jns
stc
cwde
fwait
sub
xor
jne
stos
shl
jle
or
ja
imul
jnp
movs
jmp
sub
cli
mov
cmovno
ss
adc
mov
add
sahf
in
bound
das
movs
stc
outs
je
xor
dec
or
cld
imul
push
scas
inc
cmp
mov
fimul
aam
ins
add
imul
in
test
inc
in
ins
push
lods
mov
jmp
mov
fist
sar
xchg
pusha
push
dec
push
adc
cmp
call
mov
pop
mov
mov
(bad)
fldl2t
cwde
push
adc
mov
inc
(bad)
stos
sti
inc
inc
popf
or
xor
mov
pop
std
mov
push
test
cmc
mov
sti
and
js
rcr
inc
mov
ins
cmp
(bad)
das
sub
xor
(bad)
xchg
gs
xchg
outs
push
jge
leave
sub
adc
mov
adc
push
lods
push
(bad)
rcr
cmp
test
mov
dec
not
jne
out
pop
jge
mov
inc
shl
psllq
push
pop
mov
or
loopne
sub
cmp
pusha
outs
add
ror
mov
fstp
jmp
pop
pop
dec
scas
in
jp
jmp
xchg
fimul
jns
dec
mov
sub
ror
dec
inc
pushf
addr16
dec
das
popf
ret
ror
icebp
mov
push
xchg
scas
retf
je
pop
pop
or
push
mov
or
cmp
xchg
xor
aad
out
(bad)
sub
js
sar
jl
pop
or
jb
ret
sub
je
push
je
inc
adc
mov
vshufps
mov
pop
add
jmp
shr
and
xchg
idiv
lea
shl
xchg
and
dec
jle
imul
repz
adc
mov
ret
inc
mov
xchg
add
xor
icebp
dec
jle
cld
mov
int3
dec
loop
shl
aas
and
repz
or
hlt
xlat
movs
pop
push
pushf
ficomp
jecxz
inc
fisubr
scas
(bad)
jmp
dec
adc
int3
mov
sub
popa
cli
inc
and
add
int
push
stos
mov
mov
setns
les
push
outs
sar
mov
push
mov
sub
(bad)
(bad)
ror
mov
rol
loopne
fsubrp
adc
pop
cld
add
jb
cmp
sub
push
jmp
and
pop
sbb
int3
jle
test
jmp
sub
lea
mov
sub
adc
inc
xor
push
xchg
xchg
dec
xor
mov
dec
aad
fist
lods
scas
and
in
call
popa
or
imul
aaa
push
inc
icebp
fwait
sar
xchg
lds
sar
retf
inc
cs
repz
outs
(bad)
fist
popf
dec
pop
push
add
(bad)
iret
mov
mov
into
retf
(bad)
push
and
in
pop
xchg
xor
ins
xor
mov
jmp
or
or
movs
push
ins
imul
and
jg
sbb
iret
dec
mov
or
ror
outs
(bad)
pop
mov
imul
pop
pop
adc
jnp
iret
loope
fisttp
rol
mov
mov
cmp
and
outs
dec
jb
enter
sbb
pushf
jnp
jbe
call
test
sbb
cmp
mov
adc
mov
and
ror
and
mov
test
sbb
ins
dec
jmp
mov
xchg
lock
or
add
call
lea
push
out
repz
test
pop
shr
add
out
retf
and
test
xchg
shr
hlt
dec
jbe
int3
mov
retf
push
sbb
in
sbb
ss
dec
fsubr
in
add
jl
xchg
das
mov
ins
pop
add
sub
fmul
mov
arpl
enter
jle
out
mov
dec
fscale
xchg
push
retf
mov
fld
popf
(bad)
call
sbb
cmps
repnz
loop
outs
nop
pop
and
icebp
push
xor
call
adc
repnz
inc
test
pushf
adc
sub
stos
push
mov
jbe
cmp
in
and
rcl
adc
mov
(bad)
lahf
popf
pop
(bad)
mov
cs
sub
icebp
dec
and
pop
push
jle
dec
adc
cmp
pushf
(bad)
ss
mov
loope
das
je
(bad)
mov
(bad)
fwait
pop
push
loopne
push
jmp
repnz
rcl
xor
pushf
pop
mov
imul
ins
add
cmc
sub
or
dec
jmp
mov
sub
fisub
xor
fs
imul
push
add
lods
sti
aam
mov
push
jo
push
push
mov
add
loope
mov
mov
out
inc
mov
cmp
mov
(bad)
out
mov
in
push
leave
xor
inc
rol
(bad)
or
push
lahf
dec
sub
lock
fst
add
(bad)
push
loop
pushf
retf
test
jne
pop
pop
rol
jg
dec
pop
retf
popf
sub
jl
adc
test
dec
cld
cmp
addr16
lods
dec
movs
dec
or
jno
add
mov
dec
aam
xlat
mov
jbe
fsubr
dec
mov
scas
outs
xchg
xor
sub
push
dec
rcr
dec
dec
mov
out
imul
popa
aam
aad
adc
loopne
push
jne
ja
push
push
cdq
add
inc
out
cmp
shl
mov
mov
jge
add
lahf
cli
and
add
sub
addr16
into
mov
stos
fmul
fndisi(8087
mov
fisttp
or
ins
jg
retf
jecxz
fwait
sub
xchg
xor
xor
sub
dec
add
inc
loopne
cdq
dec
mov
push
xchg
cld
xor
pop
push
idiv
mov
pop
(bad)
jg
pusha
push
and
mov
out
jp
mov
xchg
popf
addr16
dec
or
repnz
sbb
push
not
push
cmp
mov
sbb
pushf
inc
and
sub
movs
push
push
out
add
shl
jo
mov
shr
popf
and
pusha
inc
jnp
aam
es
scas
imul
rcl
pushf
dec
or
test
retf
mov
ds
jmp
into
inc
enter
movs
add
out
shr
test
pushf
mov
add
aad
leave
jbe
imul
lea
movs
jmp
test
popa
cmp
jae
jb
fidivr
pop
out
cmp
inc
sub
outs
sub
cmp
mov
bound
add
dec
xchg
xor
fdiv
xchg
push
xlat
sbb
sbb
adc
ds
cmp
pop
cmp
jne
mov
in
mov
stc
cli
pop
sbb
inc
stc
ret
movs
stc
cmp
retf
mov
bound
inc
outs
je
xchg
int
cld
es
cmp
sub
pop
and
xor
nop
push
pop
out
sub
fld
jl
(bad)
dec
arpl
xor
pop
xor
fadd
in
mov
enter
rcr
or
in
mov
out
add
sub
dec
push
clc
sbb
mov
hlt
dec
clc
sbb
loope
sbb
mov
mov
sahf
movs
dec
cmp
jecxz
fs
add
xor
cmp
cwde
cmp
out
jo
iret
and
outs
push
aam
dec
inc
ss
and
fistp
sub
(bad)
xchg
jnp
cli
pop
xor
stos
mov
mov
ss
xchg
movs
gs
sbb
pop
mov
outs
lahf
jns
mov
fiadd
out
or
pop
(bad)
ficom
into
xor
mov
sbb
iret
fnstenv
cld
jns
or
jge
arpl
lock
mov
(bad)
out
xor
mov
adc
push
rcr
or
dec
mov
mov
sub
sti
stc
push
pop
out
aad
cmp
cmps
mov
adc
daa
sub
scas
xor
not
or
mov
mov
adc
shr
jmp
inc
fimul
gs
jge
mov
cs
and
jnp
mov
mov
xchg
out
(bad)
push
mov
sahf
test
mov
cld
xchg
(bad)
mov
mov
fst
jmp
movs
and
inc
js
push
ins
mov
mov
stos
(bad)
jmp
call
iret
mov
pop
ins
sub
push
pop
cmp
pop
push
and
add
scas
mov
xlat
mov
xchg
shl
adc
scas
xor
fnstsw
aas
loopne
out
sbb
out
fnsave
or
fs
test
pop
jnp
mov
or
pop
mov
fldcw
and
rol
adc
xchg
pop
data16
fstp
cmps
in
ficomp
or
ficom
mov
pusha
push
mov
push
xor
xchg
enter
cmps
mov
mov
mov
loope
outs
packsswb
cmp
test
mov
sbb
sub
jl
push
adc
mov
xchg
xchg
shl
or
jecxz
adc
sar
pushf
or
outs
xor
lods
sub
jmp
xchg
into
(bad)
mov
adc
mov
add
clc
popa
(bad)
imul
test
push
stc
icebp
enter
inc
xlat
mov
inc
nop
dec
inc
test
push
retf
xchg
mov
int3
stos
jo
pusha
adc
and
mov
cmp
cmp
in
fbld
enter
shr
iret
(bad)
(bad)
xor
adc
(bad)
mov
imul
push
jne
jns
and
call
gs
test
sub
sub
cwd
(bad)
in
mov
outs
lahf
push
call
push
scas
jecxz
xor
outs
cli
imul
and
cmp
push
push
add
pop
out
mov
out
arpl
inc
and
dec
jl
ror
in
sbb
cmp
inc
pop
sahf
imul
cmp
in
pop
out
cmp
or
pop
fnstenvw
mov
ins
xchg
jnp
clc
lock
push
dec
sub
cwde
and
xchg
push
cmp
cmp
xor
dec
inc
and
jl
xor
push
xlat
sbb
test
sbb
mov
cmp
int
(bad)
in
and
inc
pusha
daa
mov
dec
push
xchg
scas
pop
mov
sub
inc
fst
cli
sbb
gs
add
fucomi
cli
lods
cli
jle
jmp
jb
into
cwde
fistp
sbb
cmc
cmps
add
ror
push
or
gs
or
sbb
sub
bound
mov
cli
enter
jbe
adc
dec
dec
test
push
pop
push
cmp
pop
aaa
rol
dec
aam
test
in
xor
xchg
sub
jae
add
stos
test
out
jne
jae
push
aam
popa
jbe
ja
sbb
in
or
cmp
les
shl
das
lock
xchg
or
inc
gs
sti
mov
dec
mov
rol
test
jns
sbb
das
daa
arpl
call
xor
xchg
scas
mov
lock
mov
std
cmc
dec
xor
popa
inc
cdq
cmp
jne
loopne
ins
mov
pop
loopne
adc
(bad)
jno
into
popa
inc
imul
(bad)
inc
hlt
dec
sub
push
dec
mov
repnz
(bad)
pop
cmp
in
pop
ret
and
inc
mov
dec
neg
and
cwde
fild
mov
xchg
stos
call
dec
add
movs
test
inc
pop
aaa
test
emms
sub
sahf
sub
jb
xchg
push
add
scas
lock
and
ins
pop
movs
jmp
adc
jge
mov
xor
add
mov
test
imul
movs
in
sbb
sbb
clc
movs
push
jo
outs
aam
or
hlt
inc
mov
mov
dec
sti
jne
push
inc
jecxz
out
lods
jns
popf
(bad)
cwde
jle
and
(bad)
cmp
cmp
mov
add
push
pop
or
lods
mov
mov
pop
imul
les
sahf
dec
cmp
bound
hlt
fs
stos
jmp
into
jno
retf
aam
sbb
into
sub
jne
pop
xor
(bad)
fistp
ja
inc
add
in
cdq
push
scas
push
xchg
hlt
or
sub
push
xchg
mov
pop
ja
jg
ss
fwait
out
fiadd
loop
dec
jno
(bad)
shl
push
add
(bad)
push
or
xchg
outs
out
pop
ret
push
or
pop
lea
adc
aaa
in
mov
mov
movs
and
mov
stos
mov
mov
fld
leave
mov
(bad)
int
outs
(bad)
jecxz
pop
inc
aam
mov
push
push
push
push
pushf
fsubr
xlat
(bad)
aaa
(bad)
ficomp
jns
push
mov
pop
jg
icebp
sbb
dec
int
mov
imul
icebp
inc
jo
mov
pusha
ret
fild
in
pop
add
ja
pop
dec
mov
push
cmp
dec
enter
loop
sbb
mov
sbb
adc
jbe
pop
pop
jl
fsubr
fld
mov
inc
jl
mov
out
xchg
loop
jns
jbe
sub
ja
mov
jmp
push
cmp
mov
ja
or
(bad)
call
adc
mov
rol
inc
cmps
lock
jl
out
xchg
fwait
shr
jbe
daa
test
sbb
jle
pop
pop
push
lods
and
stos
xchg
pop
pop
jl
pop
xchg
test
mov
cmp
xor
stos
retf
in
adc
call
ins
out
bound
inc
xchg
adc
scas
sub
mov
retf
or
or
push
xlat
in
inc
popa
push
push
lock
ins
mov
jno
imul
cdq
in
mov
pop
(bad)
add
ss
or
xchg
lods
mov
sub
jns
fs
fnstenv
fucom
bnd
add
cmp
daa
pop
sbb
sbb
mov
scas
lock
iret
loopne
in
and
imul
xor
cmp
cmps
xchg
cmp
cmp
into
xchg
outs
cmp
sti
push
outs
jb
pop
das
xchg
push
aam
pop
mov
fbld
dec
cdq
push
xchg
push
(bad)
pop
mov
into
imul
push
lock
outs
adc
ins
mov
sub
stc
in
nop
and
inc
(bad)
jmp
mov
bound
mov
pushf
adc
xchg
push
xor
jbe
imul
gs
out
xchg
je
test
bound
push
fild
(bad)
xor
pop
dec
popf
rcl
dec
mov
push
(bad)
sbb
out
fsub
xchg
mov
outs
stos
int
popa
sbb
(bad)
icebp
test
std
jmp
cmps
aam
cld
dec
test
and
cmc
sbb
aam
sub
pusha
loope
xor
(bad)
daa
pop
mov
jbe
mov
stos
mov
push
push
jno
fwait
jmp
or
call
enter
hlt
fst
add
xchg
cmps
mov
lock
gs
dec
dec
lods
xor
icebp
icebp
neg
add
push
call
cdq
jmp
and
std
fcom
in
jnp
int3
jne
scas
addr16
and
pop
cmp
fwait
add
sbb
inc
pop
sbb
repz
test
stos
push
pop
pushf
pop
push
call
stos
dec
cmc
(bad)
adc
pop
or
push
sub
or
imul
popa
std
(bad)
test
mov
jmp
aam
add
xlat
pop
imul
or
adc
sub
push
or
jmp
pop
jmp
mov
inc
test
sbb
loope
jle
xor
sbb
or
cmps
test
xor
jp
mov
(bad)
in
sbb
or
ret
cmp
rcl
std
shl
pop
std
mov
pop
(bad)
xor
loope
in
ret
and
(bad)
mov
fcomip
pop
ss
inc
jmp
loop
into
je
in
(bad)
xchg
dec
cmp
popf
test
xchg
repz
jbe
lds
xchg
stos
jbe
sub
ins
push
push
or
xchg
adc
jmp
xlat
dec
or
mov
ins
out
and
(bad)
xchg
dec
cli
adc
rol
jge
mov
mov
out
ja
ret
imul
and
outs
mov
test
push
test
out
fadd
(bad)
popf
repz
mul
not
ins
inc
ins
push
cld
mov
xchg
and
and
in
(bad)
push
hlt
(bad)
mov
into
pusha
retf
mov
jmp
retf
sbb
add
jp
adc
xor
jecxz
sbb
(bad)
daa
jp
mov
pop
sbb
daa
sub
adc
sar
in
mov
pshufw
fnstsw
pushf
into
ffreep
and
push
mov
jnp
adc
iret
repz
dec
in
out
aas
loopne
test
ret
leave
daa
and
or
add
cmp
fistp
into
xchg
inc
jge
aaa
ret
out
test
and
mov
daa
or
sub
push
sbb
pop
or
addr16
jo
xor
cmp
xchg
ins
das
adc
fcmovb
inc
icebp
xchg
aad
ror
or
and
(bad)
int3
fs
mov
gs
pop
in
sub
bound
jbe
stc
xchg
bound
add
sbb
lock
loopne
mov
add
shr
or
inc
or
popa
pop
sub
mov
aaa
mov
popa
and
jb
mov
int3
adc
cli
sbb
mov
ficomp
jg
adc
mov
std
fsubr
dec
fwait
lahf
jge
sub
and
lds
jmp
je
inc
stos
and
jg
adc
xchg
in
sub
retf
fiadd
out
xchg
imul
or
push
jg
hlt
hlt
leave
in
or
aas
pop
movs
adc
fbld
sub
test
repnz
and
xor
adc
or
xchg
adc
rcr
ins
pop
popa
and
and
and
cmc
test
outs
bound
push
xor
mov
push
cmp
icebp
int3
cmps
std
push
(bad)
pop
jno
das
scas
xlat
aam
outs
(bad)
pop
mov
fsubr
jp
imul
sbb
add
mov
xor
int3
xchg
ins
mov
imul
inc
popa
mov
sahf
sub
or
mov
add
imul
xchg
mov
fldenv
sub
bound
push
inc
inc
gs
scas
mov
sahf
retf
push
mov
in
adc
sbb
mov
inc
jge
push
xor
mul
and
jle
ja
ret
push
shl
inc
xchg
pop
in
cli
fnstcw
mov
mov
(bad)
cwde
adc
aaa
push
pushf
repnz
add
fldenv
dec
add
fwait
jbe
idiv
push
mov
cdq
dec
sbb
icebp
test
and
pop
jmp
push
cmps
or
cmp
cmp
inc
or
retf
and
outs
test
and
mov
or
lahf
rol
or
out
dec
push
mov
jnp
in
mov
pop
repnz
in
mov
enter
cmp
aas
mov
dec
push
shl
inc
mov
xchg
push
in
pop
jae
pop
icebp
movs
dec
xor
gs
adc
push
lock
out
mov
add
(bad)
loope
ds
ror
lock
int3
mov
cmp
dec
inc
dec
jns
add
adc
xor
pop
cmp
jns
rol
dec
pop
mov
dec
in
sub
popa
adc
cmp
aam
cmc
aaa
cli
dec
mov
int
inc
sahf
sub
xchg
mov
movs
mov
sbb
and
mov
sub
dec
div
ins
xchg
sub
into
pop
in
cmc
sub
scas
and
xor
fdiv
cli
adc
mov
cmp
jg
inc
pop
outs
pusha
out
sub
add
jle
repnz
js
mov
cmp
int3
mov
int
or
pop
mov
stos
or
push
lods
jmp
fs
cmps
pusha
jg
data16
mov
arpl
sub
mov
ss
inc
jnp
stos
dec
mov
sbb
outs
jo
mov
dec
adc
push
inc
retf
push
clc
xchg
mov
cmps
div
repnz
dec
sub
outs
daa
mov
xor
je
mov
ds
imul
and
std
mov
dec
mov
sub
clc
fwait
sbb
add
lahf
jnp
jmp
hlt
push
pop
fisub
cmp
dec
push
popa
lods
xchg
hlt
and
mov
xor
icebp
stos
iret
retf
adc
gs
mov
ror
add
outs
dec
ins
idiv
mov
adc
js
xor
into
xor
fsubp
cld
xor
dec
jge
cmp
cmp
dec
jmp
xchg
xor
imul
arpl
stos
jns
inc
lds
ret
fld
pop
imul
outs
loopne
add
pusha
daa
push
lahf
arpl
mov
lods
xchg
mov
mov
push
xor
hlt
dec
mov
mov
sub
inc
cmp
repz
fwait
fwait
push
dec
adc
inc
gs
mov
sar
adc
stos
fstp
push
or
mov
fisubr
daa
aad
cmp
or
add
daa
xchg
xor
dec
pop
shr
pop
jo
inc
or
js
shl
aam
pop
lock
sbb
cmp
fild
mov
pop
xchg
das
sti
inc
lock
popf
adc
cmc
aas
cmp
and
add
xchg
add
retf
pop
stos
mov
aas
punpcklbw
aad
imul
cdq
call
mov
pop
aad
or
cwde
pop
xchg
pop
mov
mov
dec
and
jmp
cmp
sbb
mov
sub
aad
mov
lods
stos
fsubr
call
mov
pop
cmp
arpl
jb
repnz
pop
inc
xor
mov
and
cmps
retf
jns
stc
mov
add
adc
fbld
push
aas
js
pop
cmp
mov
mul
(bad)
nop
les
add
push
push
push
jge
xchg
outs
and
pop
outs
fwait
jo
ret
popf
xchg
and
adc
inc
add
or
pop
and
ror
sub
adc
bound
push
cli
fnsave
push
test
inc
cs
or
ja
ja
test
rcl
lock
sbb
pusha
leave
shl
lods
dec
scas
ret
push
push
ins
stos
inc
bound
cs
jmp
mov
jp
dec
xchg
mov
sbb
xor
pop
(bad)
aaa
xchg
and
add
not
out
ja
out
jne
or
sete
cmp
mov
int3
push
ins
adc
test
or
nop
pop
pop
sbb
sar
popf
or
cmc
pop
sar
sti
sbb
js
neg
xchg
scas
inc
outs
add
jg
or
cmp
dec
addr16
jle
push
addr16
push
and
xchg
push
lock
cmp
dec
(bad)
sti
prefetch
or
jle
mov
scas
push
dec
mov
jmp
cmp
ret
rol
fstp
lods
jbe
add
inc
sti
dec
pop
inc
arpl
or
push
mov
out
ret
and
mov
jmp
add
mov
xor
fild
dec
mov
xor
inc
cmp
into
sbb
push
sub
shr
call
jae
scas
not
cmp
mov
out
push
adc
mov
jmp
aas
mov
and
shl
inc
mov
icebp
mov
cmc
lea
fisttp
ja
pop
inc
repnz
mov
mov
mov
jmp
mov
mov
inc
adc
mov
enter
ds
in
cmp
or
imul
mov
outs
add
jns
xor
mov
pusha
mov
mov
push
xchg
fcom
or
inc
int
xor
inc
push
jmp
clc
xlat
add
adc
inc
pop
psubd
cs
xchg
jg
scas
mov
adc
push
push
rcl
xchg
mov
xchg
pop
(bad)
into
ss
cld
enter
xor
es
cmp
sub
mov
stos
retf
imul
jmp
out
cmps
inc
sbb
gs
inc
movs
mov
xchg
bound
xor
js
jecxz
add
mov
test
mov
inc
(bad)
icebp
dec
push
(bad)
jge
lds
call
dec
adc
and
mov
out
inc
mov
mov
sbb
mov
test
cmps
sub
push
jno
movs
inc
repz
outs
dec
jnp
out
mov
jb
mov
mov
jp
or
xor
arpl
xor
fsubr
cmps
xor
push
sub
xlat
setge
jmp
aam
push
inc
je
push
ror
pop
bound
lods
and
cmp
stc
and
in
xor
mov
fucomi
imul
sub
xchg
mov
(bad)
not
rcl
dec
xchg
mov
or
repz
call
(bad)
fadd
or
adc
push
gs
outs
xlat
xchg
or
mov
jg
bnd
aas
and
movs
dec
cs
xor
mov
aad
mov
dec
bound
int
pop
dec
jo
mov
dec
dec
test
sub
call
test
call
ins
aad
shr
les
ret
xchg
(bad)
xchg
inc
mov
call
fwait
sbb
mov
push
(bad)
(bad)
xor
push
aaa
pop
pushf
xchg
sbb
cld
mov
mov
or
and
xchg
push
or
fst
lock
dec
in
sbb
xor
ror
std
jg
mov
aaa
jbe
dec
dec
inc
cmps
jae
jmp
out
dec
rol
pop
pop
push
xchg
push
xor
jns
jmp
xchg
sub
mov
or
jnp
push
mov
bound
adc
push
ret
xchg
push
lds
inc
adc
push
jno
dec
inc
retf
fst
icebp
xchg
mov
cmp
xchg
or
pop
popa
mov
xor
jnp
nop
(bad)
cs
fstp
xchg
jne
(bad)
push
mov
or
std
rol
dec
push
sahf
int
lahf
movs
sub
int3
ds
xchg
cmp
mov
fsubr
lods
pop
sub
mov
scas
les
out
push
mov
ja
aaa
icebp
inc
mov
cmc
leave
add
aam
mov
out
dec
stos
stos
adc
shl
sub
fld
push
jle
xor
iret
enter
pop
jne
xchg
test
call
jmp
neg
in
push
mov
cmp
and
jbe
test
aam
lods
sbb
out
add
mov
rcl
inc
push
add
cli
and
mov
jle
cmp
(bad)
and
popa
add
push
sbb
arpl
pop
dec
jle
xor
push
mov
fs
js
dec
or
lods
or
push
(bad)
(bad)
jb
(bad)
inc
sub
jl
stc
mov
xchg
outs
jmp
shl
lods
mov
sahf
js
inc
ds
and
loope
test
jp
in
or
xlat
(bad)
int
(bad)
cmps
sar
(bad)
(bad)
movs
outs
or
jo
push
out
jno
ss
inc
aam
push
jg
push
mov
gs
call
fwait
ss
adc
in
add
imul
cmp
fs
dec
js
fistp
out
push
loopne
jmp
ret
mov
jecxz
int3
sub
jle
jl
mov
mov
mov
pop
mov
sar
cmp
jns
loope
or
cmp
mov
inc
scas
mov
mov
aam
add
fadd
jmp
(bad)
aaa
test
xchg
xor
mov
ja
xchg
inc
aas
cmp
lea
ins
jo
pop
xchg
call
call
adc
sbb
movs
rcr
pop
mov
movs
xchg
xchg
dec
or
push
jecxz
xor
add
inc
push
sti
mov
loopne
cs
cmp
jno
mov
push
xor
fcomip
cli
mov
cld
add
(bad)
sti
shl
daa
mov
jp
jmp
cmps
dec
hlt
inc
cli
jb
mov
sbb
iret
push
lods
fcmovne
cld
into
sub
shr
getsec
movs
sbb
aad
xchg
lahf
cmps
cmps
inc
int
rcr
cmp
push
ret
sub
leave
jge
les
popf
pop
out
dec
icebp
mov
nop
call
sbb
lea
adc
inc
sbb
stc
fisubr
imul
xchg
xchg
dec
pop
rol
sub
mov
push
retf
mov
jl
inc
out
mov
mov
dec
pop
push
(bad)
and
sub
shl
dec
retf
xchg
lock
push
inc
(bad)
push
adc
jmp
mov
jbe
(bad)
mov
cli
adc
xor
dec
pop
mov
mov
dec
push
retf
mov
sbb
addr16
or
xor
(bad)
fdiv
in
cmp
out
(bad)
sbb
int3
mov
outs
ficomp
xchg
push
cli
mov
jge
ins
cld
aaa
or
jmp
inc
rcl
xchg
hlt
scas
das
ja
sbb
lahf
mov
(bad)
out
loope
ret
and
in
or
cmps
xchg
sar
pop
lahf
or
jecxz
das
fisub
dec
clc
dec
adc
imul
sbb
mov
xchg
jle
mov
test
sub
xor
cld
cdq
std
adc
stos
push
or
pop
lods
xchg
imul
inc
ret
adc
mov
inc
jp
mov
popf
loop
sbb
lds
fnstenv
cmp
arpl
inc
xchg
loope
gs
jno
arpl
push
mov
sub
lea
mov
mov
(bad)
pop
fwait
and
in
lds
stos
add
mov
or
das
inc
add
or
loopne
jne
xor
daa
mov
lahf
xchg
fs
retf
fwait
cmp
rcl
jnp
mov
jns
sub
into
xor
outs
pop
adc
clc
retf
loop
bound
mov
int
lods
mov
jo
rcr
jns
mov
in
cmp
loop
pop
loope
test
aaa
sub
cmp
add
adc
push
(bad)
test
cs
push
test
add
adc
in
movs
data16
retf
mov
cmc
sub
or
or
mov
pop
xor
lahf
or
mov
sub
mov
and
push
ss
add
movs
xor
cs
call
popf
arpl
pushf
or
sbb
dec
cmps
repnz
lea
retf
jo
cmc
rol
push
xchg
jecxz
jp
sub
fcmovnb
xor
or
xchg
lds
push
scas
adc
mov
xor
jecxz
rol
push
in
jg
mov
inc
pop
sub
mov
xchg
inc
cmp
pusha
fadd
pop
cmp
pop
scas
push
pop
imul
push
inc
out
jle
rcr
lods
sub
pushf
cmp
sbb
test
xor
vmovntps
sbb
mov
rol
sbb
loop
es
repnz
push
mov
jmp
out
(bad)
(bad)
dec
test
cmp
and
or
scas
lods
leave
in
add
sub
rol
jae
jbe
jne
out
sar
dec
mov
test
xchg
inc
mov
hlt
in
loope
fistp
jg
jmp
test
psadbw
es
sub
dec
in
adc
cmp
sub
mov
adc
xor
lahf
and
and
inc
hlt
ins
sbb
pusha
and
xchg
sbb
sbb
sub
ds
jno
cmp
mov
cli
and
xor
and
xchg
stos
mov
mov
xchg
sar
inc
mov
push
fs
mov
mov
jo
dec
jl
fistp
jmp
mov
in
add
(bad)
(bad)
xlat
jmp
mov
test
(bad)
fadd
push
sbb
mov
or
xchg
xor
add
imul
pop
(bad)
xor
mov
inc
push
jmp
push
push
xchg
or
mov
cli
ret
mov
pop
mov
lock
nop
int3
lea
mov
mov
cmp
test
xchg
hlt
and
cs
bswap
cmp
fidiv
inc
bound
xor
or
add
je
xor
mov
jbe
mov
pop
enter
jl
pop
jg
mov
leave
dec
xor
jl
jmp
mov
and
mov
scas
mov
adc
xor
(bad)
and
add
mov
or
sub
mov
pop
or
addr16
add
inc
scas
jmp
inc
sbb
xlat
sahf
xor
loope
dec
mov
mov
rcl
push
sub
dec
mov
xor
pop
iret
ins
inc
xchg
hlt
add
cmps
sub
xchg
pusha
pop
je
ds
pop
pop
inc
rol
push
mov
popf
cmp
add
icebp
dec
jge
cmp
sbb
sub
cmps
xor
or
mov
mov
xchg
mov
in
cmp
cli
lea
push
ins
xchg
sti
fs
loop
test
out
sub
pop
ins
inc
dec
inc
mov
pop
add
fsub
xor
xchg
mov
mov
push
xor
adc
lods
daa
aad
mov
jge
fisubr
jno
es
jl
jmp
inc
rcr
mov
imul
mov
mov
jl
sub
or
pop
aas
aad
xlat
adc
shl
pop
pop
(bad)
in
mov
cld
mov
scas
stos
adc
iret
mov
into
leave
je
in
and
xor
jne
into
cmp
in
outs
call
iret
in
add
ror
push
int3
jmp
sti
cdq
lods
shl
mov
in
sar
rol
sub
ja
in
push
shl
int
xchg
mov
test
cwde
inc
jno
pop
ror
push
scas
mov
fcmovnb
fidiv
inc
imul
es
sub
(bad)
and
hlt
and
push
dec
cmp
aas
std
add
pusha
xchg
sbb
std
dec
pushf
loope
fwait
and
loop
xchg
packuswb
sar
fiadd
push
adc
data16
fiadd
out
or
fimul
cmps
(bad)
jge
pop
jae
retf
push
pop
add
dec
mov
mov
add
lock
movs
lahf
sar
ins
pop
sbb
push
dec
dec
repnz
mov
add
sbb
icebp
inc
mov
sub
cmp
mov
in
add
jge
jl
cmps
es
outs
sti
jns
cmp
cld
jp
push
pop
and
pushf
or
push
out
cmps
int3
mov
enter
add
out
stc
add
aad
pop
cmp
inc
sub
pop
jle
xchg
(bad)
retf
fdivr
push
push
(bad)
scas
stc
and
dec
sbb
retf
(bad)
ror
or
int
or
mov
jmp
sbb
sar
dec
mov
fld
dec
xchg
and
test
test
or
(bad)
neg
push
vshufpd
jecxz
xchg
pop
xchg
pop
mov
xchg
pop
push
push
jo
pop
inc
inc
rcr
dec
(bad)
pop
jp
add
inc
loop
outs
cmps
jle
repz
jne
and
push
cmp
inc
pop
sbb
xchg
test
push
mov
jnp
pop
stc
mov
aaa
inc
cmps
adc
add
in
les
cmp
cmp
outs
mov
adc
pop
pop
aas
pop
pop
sbb
stos
adc
push
js
pop
push
xor
rcl
cld
lea
loope
mov
imul
push
jecxz
jb
mov
pop
in
in
jo
jnp
dec
pop
fld
in
lds
sub
cmp
ss
clc
test
or
mov
pushf
iret
inc
sub
mov
xor
fs
add
ja
sbb
sub
and
sub
xor
xchg
enter
jae
in
stos
fwait
bound
outs
dec
xor
aad
mov
js
push
test
or
aas
xor
fimul
or
mov
scas
or
mov
outs
mov
scas
scas
push
adc
xor
adc
ret
adc
mov
call
sub
mov
cmp
das
ret
push
test
add
mov
mov
mov
adc
les
stos
cli
push
pop
stc
jne
mov
dec
sub
mov
retf
into
ret
fadd
je
shr
int
loop
ret
cmp
rol
call
ds
xor
inc
cdq
jo
inc
add
jp
and
and
call
test
sub
adc
icebp
js
in
pop
(bad)
cli
scas
cmp
sti
or
add
cmps
and
pop
iret
(bad)
in
into
push
int3
push
enter
inc
cwde
pop
mov
and
fcmove
sbb
int3
sbb
loope
adc
mov
add
xor
mov
int3
inc
jg
popa
fst
or
aas
fcom
adc
movs
add
cld
pop
(bad)
xor
daa
xor
push
sahf
push
ins
add
push
sbb
(bad)
stos
mov
add
pop
xchg
imul
adc
jae
inc
(bad)
xchg
mov
dec
dec
adc
jne
jb
es
sbb
sub
out
xor
out
mov
jnp
daa
das
leave
lods
mov
imul
fiadd
cmp
dec
leave
aaa
imul
lds
cmp
or
mul
push
mov
or
aam
sbb
add
jno
push
in
sub
not
mov
(bad)
shl
ins
sbb
repnz
inc
addr16
ins
and
fsubr
cmp
rcr
fs
mov
je
pop
mov
ja
cs
jmp
sub
imul
in
mov
cmp
and
mov
ins
mov
sub
dec
mov
ins
retf
xor
or
call
cmps
rol
mov
cmp
mov
(bad)
push
ror
cmp
jl
fadd
data16
imul
xlat
pop
loop
dec
mov
jmp
lods
enter
mov
cmps
jmp
mov
jns
ror
and
dec
(bad)
stc
push
dec
imul
mov
mov
or
loopne
fisubr
cmp
xchg
mov
xchg
cli
lods
mov
js
adc
sbb
push
sub
outs
rcr
(bad)
push
test
pop
test
mov
sbb
adc
sar
das
test
int3
sbb
or
push
aad
test
xor
jecxz
mov
xchg
dec
push
sbb
adc
or
mov
shr
pop
mov
pushf
xor
cmps
dec
xchg
sti
sahf
pop
inc
int3
mov
retf
mov
aam
clc
outs
sub
call
xchg
std
cmp
in
mov
xchg
adc
xchg
mov
mov
das
xchg
sbb
mov
mov
test
xchg
movs
lea
push
dec
push
ds
jmp
mov
aam
mov
in
scas
imul
je
pusha
popf
adc
int
inc
inc
sub
mov
out
(bad)
test
mov
lock
push
mov
inc
call
fisubr
stc
pop
inc
push
sub
inc
test
adc
push
rcr
dec
ds
arpl
pop
rol
cmp
sub
fisttp
scas
sub
and
shr
movzx
aam
sbb
jne
call
shl
mov
stos
ins
test
jb
xlat
in
stos
and
mov
adc
sbb
inc
and
(bad)
stc
sub
jl
push
es
into
xchg
mov
(bad)
inc
sbb
mov
cmp
icebp
jmp
dec
loopne
(bad)
cmp
mov
call
stc
clc
sub
cli
sbb
adc
sub
pushf
int
shl
(bad)
xchg
mov
mov
jns
inc
rcr
mov
jnp
sub
dec
jle
and
mov
mov
jge
in
jne
dec
xchg
les
enter
inc
mov
and
fidivr
mov
xchg
pop
adc
pop
push
int3
push
jmp
mov
retf
fld
test
xchg
push
cdq
test
cs
xchg
xor
mov
xor
or
add
movs
sbb
test
pop
scas
jecxz
jmp
or
jl
and
sub
movs
dec
pop
and
sub
pop
mov
inc
(bad)
pop
jge
sub
mov
std
scas
push
(bad)
ds
cmp
int
outs
sub
jbe
retf
add
push
pop
dec
pop
xchg
repnz
add
jmp
movs
(bad)
pusha
adc
scas
and
stos
lahf
test
mov
je
xchg
fsub
jnp
mov
push
das
rcl
sbb
push
pop
jge
cmc
jmp
popf
mov
das
push
je
cmp
mul
sbb
push
fbstp
adc
daa
neg
test
lahf
and
shl
mov
pop
pop
mov
loopne
cmp
add
inc
cmp
push
nop
adc
(bad)
movs
(bad)
pop
outs
push
out
lods
(bad)
sbb
dec
bound
mov
add
mov
add
push
xchg
fnsave
add
and
mov
lahf
shl
push
or
retf
sbb
fidivr
mov
or
mov
in
(bad)
stc
sbb
ins
pusha
icebp
js
bound
mov
test
je
push
pop
sub
inc
jnp
inc
in
sub
sbb
sar
dec
je
(bad)
ds
and
adc
dec
push
mov
js
aam
jmp
and
pop
pusha
ss
push
sbb
dec
pop
fwait
jnp
jo
push
pop
pcmpeqd
sub
push
sbb
clc
push
or
xor
or
ins
sbb
out
aad
xor
loope
xchg
das
out
push
fild
push
shr
xchg
cmps
dec
imul
data16
retf
jecxz
and
jns
push
movs
or
arpl
loopne
mov
sbb
outs
mov
jae
inc
fs
stc
pop
shr
mov
inc
mov
xchg
addr16
cwde
xor
addr16
das
sbb
pop
add
jecxz
jge
jge
sbb
xchg
fbstp
ror
add
iret
daa
mov
fidiv
xor
je
jne
stc
push
repnz
push
pop
ins
add
pop
pop
cmp
cmps
test
mov
pop
mov
mov
ins
mov
push
jne
(bad)
sub
sbb
xlat
xor
pusha
retf
out
sbb
pop
int3
cld
pop
leave
icebp
retf
out
call
ret
imul
fwait
push
ja
adc
pop
data16
outs
popa
sub
(bad)
jg
jo
out
mov
mov
aad
(bad)
ficomp
jg
pop
sub
popa
dec
or
in
xchg
fwait
push
sub
popa
sbb
jne
xchg
add
add
mov
rsqrtps
jns
ins
mov
sbb
sbb
inc
mov
adc
xchg
popf
push
pop
das
mov
pop
pmaxsw
or
sbb
mov
es
fisubr
dec
xor
sub
xchg
and
out
push
push
lea
fs
mov
xchg
xchg
loop
jmp
jmp
cmp
jbe
mov
dec
not
inc
adc
sbb
repz
repnz
mov
xchg
or
xchg
mov
xchg
in
into
mov
jg
mov
fsubr
int3
cmp
cmp
enter
aaa
mov
ins
cli
dec
inc
and
(bad)
or
cmp
out
inc
mov
xor
cmp
xor
and
call
xor
dec
push
shl
cmp
xchg
jl
jmp
sub
push
ja
out
retf
(bad)
mov
jge
mov
push
mov
jns
repz
int
aam
mov
jne
xchg
cmc
stos
out
inc
cmp
fild
mov
(bad)
pop
and
mov
test
xor
inc
into
rcr
je
aas
in
into
rcl
mov
sbb
js
shl
jmp
aas
test
mov
add
dec
js
push
inc
sub
push
enter
and
dec
sbb
cwde
xchg
pop
add
sbb
loopne
xchg
and
jle
fst
loop
mov
test
and
shl
cwde
je
scas
adc
fisttp
enter
retf
pop
adc
inc
pop
add
jl
scas
sar
call
ret
fsubrp
bound
sar
cmp
mov
add
xlat
(bad)
aam
push
outs
ds
xor
and
push
(bad)
sub
mov
icebp
faddp
out
rcr
add
fsubr
mov
xchg
call
arpl
and
test
jl
sahf
sbb
sar
outs
test
cli
xchg
out
xchg
fist
mov
scas
call
push
or
fisubr
iret
sbb
sbb
sbb
xor
pushf
test
fidiv
leave
ins
and
ror
fsubr
cmp
fldcw
mov
sbb
cmps
push
mov
dec
mov
test
out
das
or
fcom
pop
sahf
or
push
xor
test
dec
and
clc
js
inc
pop
cmc
ja
mov
jmp
stc
test
(bad)
mov
mov
pop
aad
sbb
push
cli
ins
lods
mov
inc
adc
cmp
cmp
mov
scas
(bad)
xchg
push
pop
dec
test
adc
sub
cdq
sub
inc
mov
mov
xor
or
jg
or
das
push
div
retf
outs
ja
cmp
jg
out
push
popf
jge
(bad)
cmp
shr
push
mov
dec
call
mov
jp
jnp
mov
cs
pop
mov
push
xor
pusha
pop
cmp
gs
xchg
or
stc
pop
sbb
in
cmp
sub
jmp
loope
imul
push
cmp
or
fcom
lahf
or
adc
lods
push
cmps
xor
daa
mov
btc
js
adc
out
loopne
fwait
push
out
fs
or
mov
cmp
ror
pop
iret
push
popf
mov
add
(bad)
fwait
stc
xchg
pop
fmulp
fnstsw
cmps
or
cmp
mov
repnz
cmp
arpl
pop
gs
sub
pushf
es
jp
push
popf
ss
call
jecxz
lods
xchg
mov
(bad)
bound
adc
aad
adc
daa
mov
aaa
test
(bad)
mov
xor
fmul
push
mov
ja
out
aad
cmp
adc
call
dec
mov
clc
push
int3
sub
fstp
lods
mov
xor
pop
lahf
in
or
cdq
sub
bound
cld
aas
xchg
daa
retf
loope
aam
cmp
or
int
arpl
mov
test
and
dec
add
dec
fstp
imul
mov
inc
add
outs
mov
cmc
xor
pop
pop
cmp
mov
jmp
add
push
mov
adc
(bad)
gs
sbb
fiadd
xor
jl
cmp
mov
or
lds
push
into
and
mov
sbb
cmp
(bad)
cmp
loope
cmp
not
adc
cmp
aam
les
aaa
push
dec
adc
jle
cmps
and
popa
mov
dec
aad
sbb
mov
popa
das
inc
cdq
adc
popa
sub
adc
call
popa
(bad)
jp
adc
sub
in
sub
pop
inc
(bad)
jne
jns
rcr
and
adc
or
cmp
mov
and
scas
scas
jno
add
sahf
xor
add
stc
adc
xchg
cmp
sbb
jmp
jb
xchg
jg
dec
cmp
imul
ficom
aad
push
and
test
(bad)
pop
sbb
mov
sub
scas
retf
and
outs
inc
mov
(bad)
jo
gs
fidiv
jns
sub
dec
(bad)
cwde
mov
fadd
popa
jmp
ss
jne
xchg
in
lds
sub
stos
mov
in
mov
dec
test
in
mov
das
pop
test
les
sbb
sbb
movs
inc
sbb
xor
test
aam
dec
in
dec
push
mov
mov
inc
dec
push
and
cmp
rol
int
outs
xlat
add
pop
pop
fcomp
dec
mov
rol
out
int3
push
mov
sbb
push
mov
aam
mov
push
cmc
xlat
icebp
mov
sub
mov
cld
mov
adc
cmp
int
push
inc
jg
xor
xchg
lods
fs
dec
retf
fidivr
jle
fs
popf
mov
mov
int
xor
jne
cmp
mov
ffreep
add
stc
mov
xchg
leave
mov
(bad)
aas
dec
push
arpl
xor
push
mov
call
scas
(bad)
sbb
pop
or
cmp
jae
mov
repnz
xchg
daa
cdq
mov
pop
lahf
adc
ins
in
cdq
out
das
pop
pop
in
out
xchg
pop
fwait
adc
loopne
cmp
jmp
mov
ret
out
test
dec
cmp
xchg
cmp
pop
xlat
jo
ds
(bad)
in
dec
cmps
and
cdq
rcr
xchg
ja
push
mov
sahf
push
and
(bad)
movs
popf
pop
int3
xor
jge
push
pusha
jne
repnz
cmc
or
pushf
add
popa
loope
pop
test
xchg
out
retf
ja
fdiv
push
out
icebp
jae
sub
mov
fsub
lods
sub
cmp
ins
scas
jecxz
leave
jmp
inc
xchg
loope
imul
in
mov
push
sbb
daa
add
lock
dec
and
xchg
mov
cmp
mov
and
sbb
pop
dec
add
cwde
idiv
imul
xlat
sub
scas
fadd
cmp
cmp
and
mov
(bad)
imul
int
pop
adc
aas
call
mov
push
cdq
mov
adc
cmps
(bad)
cmc
xchg
arpl
es
pushaw
mov
xor
addr16
retf
xchg
dec
mov
sar
sbb
dec
cs
add
inc
cs
in
lods
jo
jae
mov
xchg
pop
adc
(bad)
jae
jmp
push
idiv
cmp
cmps
sahf
lea
cmp
push
jbe
jg
xor
icebp
xor
mov
dec
lods
shr
bound
mov
dec
pop
inc
icebp
jb
stc
jnp
test
pop
retf
lods
dec
repnz
and
xchg
and
xor
mov
aas
or
pop
fs
popf
shl
or
inc
lods
clc
fdiv
repz
fsub
sub
add
push
movs
xlat
repnz
cwde
mov
fld
sbb
js
xchg
vshufps
pop
stos
jne
jae
mov
test
push
jne
xchg
mov
jne
xchg
dec
lahf
sub
in
daa
xchg
push
push
xor
mov
(bad)
cmp
imul
not
test
jl
test
add
inc
outs
sbb
stos
push
rcr
xlat
stos
jo
pop
(bad)
mov
loop
dec
pop
add
les
add
push
jb
xchg
cmc
and
mov
cs
sub
dec
jmp
mov
icebp
loop
dec
(bad)
test
rcr
mov
pop
jb
retf
enter
loop
dec
icebp
(bad)
repz
mov
add
xor
pop
(bad)
dec
lods
cmc
ja
mov
ud0
sti
daa
pop
mov
lea
mov
ss
xchg
mul
js
cmps
nop
loopne
lea
rol
cmp
out
test
or
pop
inc
and
data16
xor
or
mov
cmps
sbb
or
fidivr
push
xchg
popa
add
lea
cmps
sub
call
jmp
hlt
rol
mov
xchg
inc
shr
bound
and
cdq
xor
test
pusha
inc
ins
mov
mov
nop
jge
add
xor
fwait
pop
mov
cmp
xchg
in
stos
jge
dec
sub
fldln2
stos
mov
adc
aas
xor
inc
nop
cmp
sub
loop
scas
mov
loop
les
add
jmp
adc
pop
jae
xchg
es
fsub
fstp
(bad)
sbb
xor
js
sub
ds
retf
fsubr
pop
mov
and
inc
or
mov
mov
lds
mov
push
pop
test
pop
or
pop
sahf
jg
lock
or
lods
and
mov
xchg
jmp
jns
lods
out
cs
cmps
fldenv
xchg
pushf
(bad)
jo
js
jp
jecxz
repz
popa
jae
push
fsub
mov
test
sub
clc
fs
and
mov
inc
cmps
js
mov
int
leave
scas
popa
test
popf
adc
enter
imul
out
retf
fcmovnbe
sbb
shl
sbb
push
xor
es
(bad)
cmc
rol
gs
mov
repnz
inc
repnz
inc
popa
(bad)
mov
ret
stos
fmul
add
(bad)
ins
or
jnp
add
pop
mov
push
add
sub
add
push
or
jle
cmp
ins
pop
push
stos
xchg
mov
push
xchg
bnd
stc
fadd
jno
cmc
lahf
pop
jae
xor
mov
(bad)
test
in
loop
adc
adc
jo
in
push
mov
jb
in
mov
fsub
int3
jg
inc
adc
push
xchg
bound
xchg
fadd
test
(bad)
xor
push
push
mov
fisub
push
or
adc
or
sar
lock
popfw
mov
(bad)
cmp
mul
rep
out
add
and
mov
fwait
add
pop
cmp
hlt
cmp
or
dec
in
int
sahf
stc
repz
mov
stos
xchg
jmp
sub
and
sti
sbb
adc
shr
mov
mov
dec
mov
xor
ins
xchg
rol
lea
push
jne
and
test
or
(bad)
ficom
call
icebp
in
ds
lahf
outs
pop
or
fcomp
imul
repnz
cwde
cmp
adc
outs
adc
or
adc
jbe
test
icebp
sbb
(bad)
stos
adc
sbb
scas
jbe
xor
dec
stos
lock
gs
jl
xlat
sub
call
and
xor
call
daa
xchg
xchg
cmp
pop
fwait
cwde
mov
mov
sub
or
push
cld
into
test
inc
js
cmps
es
cli
inc
fidivr
stc
mov
jne
in
stc
sub
add
xchg
dec
movs
in
daa
sahf
xchg
xor
cmp
mov
adc
out
scas
loop
mov
fist
mov
mov
mov
sti
and
clc
mov
test
retf
paddq
dec
dec
cli
fld
ret
rcl
xchg
mov
mov
mov
sbb
scas
jge
sahf
push
mov
add
bound
adc
int
mov
stos
xchg
jae
int3
outs
aaa
les
xchg
mov
mov
repnz
cmps
sti
or
inc
sbb
lahf
int
inc
inc
jnp
dec
cwde
push
push
sbb
and
adc
mov
cmps
push
lods
mov
mov
or
das
rcl
aaa
icebp
shl
adc
lods
inc
and
aad
and
inc
jge
and
shl
adc
and
jnp
mov
leave
sub
int3
loopne
test
fmulp
(bad)
sbb
leave
pushf
pop
out
les
xchg
inc
xchg
clc
enter
dec
sbb
push
push
sub
ins
pop
inc
push
test
pushf
iret
jge
es
out
jbe
int
int3
jb
inc
mov
pop
lds
or
repnz
in
pop
in
inc
sbb
jmp
xchg
dec
cld
jge
cli
repz
adc
adc
shr
push
jae
(bad)
dec
enter
scas
cmps
xor
mov
fistp
test
or
jle
loope
sbb
fnstsw
push
push
push
inc
add
popf
sub
push
mov
adc
xor
or
or
mov
out
cmp
cmps
(bad)
fdiv
mov
mov
xchg
or
in
push
mov
sbb
sbb
loopne
es
xor
repnz
jmp
jmp
sahf
out
mov
mov
adc
jne
dec
or
cmp
into
cmp
hlt
inc
lods
dec
in
out
sub
and
xchg
ret
adc
dec
lahf
fiadd
mov
out
sbb
and
das
or
cld
popa
push
jno
stos
or
leave
cmps
sti
dec
ficomp
dec
fbstp
loop
inc
mov
stos
or
in
aad
and
sbb
mov
stos
and
hlt
scas
pop
cmp
js
push
jmp
xchg
pushf
std
call
out
ss
lds
dec
retf
into
sbb
xchg
ds
pop
retf
fimul
fist
sub
sqrtps
out
mov
mov
pop
or
ror
ret
das
(bad)
mov
stc
jns
push
cmp
mov
mov
sub
and
imul
add
xchg
stc
pop
xor
cmp
jne
push
mov
or
scas
ret
repz
dec
sbb
jae
mov
imul
out
shr
sub
stc
jecxz
in
inc
mov
fild
lods
push
pop
inc
scas
sbb
inc
dec
pop
stos
push
adc
pop
(bad)
cld
mov
mov
jo
test
add
out
dec
es
leave
xchg
sbb
adc
sub
nop
out
sahf
loopne
lock
mov
mov
add
pop
sbb
je
scas
mov
div
arpl
push
jnp
mov
push
out
fisttp
jge
mov
in
sub
push
adc
neg
and
(bad)
arpl
sbb
rcl
mov
rcr
inc
ja
lahf
jbe
addr16
fwait
pop
test
outs
adc
retf
add
jmp
jmp
xchg
push
push
sub
gs
js
mov
ret
pop
dec
enter
jmp
sti
das
xchg
pop
mov
cmp
mov
loope
fld
xor
sbb
or
inc
shl
xor
test
xchg
mov
es
sub
ror
repz
scas
cmp
mov
out
stos
xchg
xchg
mov
mov
inc
mov
popf
sub
add
cmp
xor
add
inc
xor
mov
or
inc
outs
push
cli
xlat
add
gs
pop
xor
(bad)
ja
xchg
iret
fsubr
cli
pop
xchg
add
leave
add
movs
and
jne
sahf
(bad)
neg
jmp
cmp
fstp
test
xchg
mov
pop
iret
cmp
add
add
call
lea
push
cmp
xor
xor
pop
(bad)
jmp
push
sar
jl
push
ret
inc
dec
lock
pcmpgtd
js
dec
mov
pop
push
movs
stc
dec
sar
push
jmp
stc
sub
leave
int3
ds
fwait
rcr
pop
loop
mov
iret
or
shl
xchg
repnz
push
data16
or
adc
rcr
mov
cmp
gs
jo
and
out
cld
test
fiadd
pop
cdq
out
aad
out
cs
add
lds
jp
mov
add
aam
push
loop
or
xor
mov
stos
test
cdq
(bad)
cdq
in
mov
ficomp
mov
movs
out
add
xor
mov
(bad)
test
xchg
into
cmp
push
adc
outs
je
aad
call
ins
xchg
ja
iret
push
retf
xor
cmp
pop
push
test
sbb
lods
lods
(bad)
jl
mov
sbb
loop
cli
popf
sbb
cmc
js
call
cmp
or
jnp
mov
call
lahf
sub
retf
lahf
mov
rcl
jecxz
lds
(bad)
adc
or
in
leave
test
xor
sti
xlat
jle
push
aam
and
push
fwait
add
xchg
pop
aaa
repz
add
mov
mov
into
shr
mov
lods
mov
add
pushf
mov
aad
jle
jecxz
sbb
xor
mov
jo
stos
sbb
mov
shr
call
push
or
sbb
sub
gs
test
dec
add
dec
lods
mov
sbb
inc
add
std
repz
lods
leave
xor
(bad)
push
das
ret
(bad)
dec
dec
or
stc
push
push
jno
pop
mov
xchg
add
sar
les
popa
jp
push
cli
jae
mov
xchg
adc
shr
call
sbb
ja
imul
dec
push
test
ins
cmc
int
pushf
push
popf
aad
mov
pop
pop
xor
or
sbb
les
cdq
push
test
mov
std
stos
add
mov
inc
aam
push
rol
pop
mov
xor
loope
js
imul
in
lds
push
mov
fs
dec
cmp
daa
sbb
movs
ins
imul
pop
je
je
cmp
or
xchg
xor
push
add
lods
pop
fisub
push
(bad)
fbstp
mov
jb
jne
cmp
mov
daa
stc
sahf
in
jmp
mov
aam
fcmovnu
cmp
ins
(bad)
aas
cmps
iret
push
out
xchg
dec
fcom
jno
mov
outs
sar
inc
les
inc
cmp
rcr
mov
loope
dec
inc
cmc
fisub
shr
fisttp
jl
cld
dec
sbb
js
push
shr
inc
add
int
mov
popf
jne
xchg
lea
div
xchg
mov
lds
aam
cmp
out
dec
scas
scas
jecxz
jo
sbb
pop
and
dec
sub
mov
scas
inc
shl
xor
xor
mov
or
xchg
push
retf
and
add
mov
cmps
scas
xchg
sbb
popa
sahf
xchg
mov
ficom
sub
push
rcr
pop
or
cwde
jbe
ins
add
test
mov
stos
es
and
popa
push
imul
cmp
fidivr
int3
cld
mov
call
mov
clc
clc
adc
jbe
ror
out
shl
inc
(bad)
xor
shl
mov
ret
outs
shufps
imul
pop
mov
cld
loope
addr16
mov
mov
pop
dec
mov
fs
sbb
inc
push
cwde
cdq
mov
ds
mov
(bad)
lock
mov
je
and
leave
jne
in
je
ror
stos
ret
inc
je
fninit
test
sub
iret
(bad)
inc
sbb
sub
aam
ins
and
push
je
pop
add
adc
jnp
add
jo
fsub
cmc
stos
sbb
in
cmps
cmp
pop
push
hlt
mov
and
xor
jmp
pop
(bad)
push
sar
add
out
push
dec
imul
(bad)
sbb
pop
lahf
scas
mov
push
cmc
mov
inc
popa
jo
jno
arpl
int3
fmul
xor
(bad)
in
cmp
fs
push
cli
in
imul
call
out
les
ss
icebp
xor
mov
inc
in
cmp
push
mov
sbb
pop
mov
pop
push
icebp
xor
in
dec
dec
js
xor
or
jns
pushf
(bad)
hlt
or
xchg
sbb
add
lahf
daa
out
shl
lahf
lods
mov
fiadd
jg
or
push
loopne
jae
mov
icebp
push
mov
inc
mov
jbe
and
cmc
out
iret
add
test
or
mov
push
rcl
adc
call
xor
mov
loop
test
inc
fsubr
sbb
idiv
fisttp
xlat
fnstsw
sti
xchg
jns
hlt
sub
pop
(bad)
and
jle
mov
cmc
lahf
stc
jg
cs
ret
aas
xor
xor
(bad)
jbe
pop
loopne
xchg
cmp
cmc
std
icebp
out
cmps
loope
iret
(bad)
cmp
push
push
aad
jbe
test
fstp
cs
jmp
das
pop
gs
ins
shr
inc
(bad)
clc
push
arpl
shl
and
shr
pop
lock
jmp
fild
clc
add
pop
mov
xor
pop
add
jle
jle
fwait
mov
or
push
jg
or
mov
jo
addr16
sbb
fwait
loopne
pop
push
test
ds
scas
lock
fs
push
imul
inc
es
xchg
and
aad
rcl
xor
(bad)
pusha
test
push
outs
push
std
xor
das
cmp
add
in
popf
in
jb
jnp
out
cld
stos
clc
or
and
fdiv
push
sbb
jmp
add
sub
fwait
mov
and
add
or
int3
repnz
hlt
add
pop
cli
push
sbb
jmp
add
adc
push
mov
jnp
pop
jp
sbb
and
sbb
jmp
pop
mov
bound
xor
pusha
mov
bswap
sub
call
xlat
jb
xchg
dec
lock
push
cmovne
outs
rcr
jno
fwait
mov
cld
jp
stos
into
xor
add
paddsb
adc
pop
outs
mov
lahf
shr
cld
push
xchg
xor
int
push
stc
retf
xchg
push
xchg
push
cmc
xlat
jge
cmps
jg
pop
test
mov
cld
sbb
jg
stos
xchg
xor
cmp
add
jecxz
xor
fadd
nop
xchg
mov
stc
cwde
call
ret
inc
jle
jbe
mov
in
cs
jne
loop
or
dec
(bad)
xlat
loope
lock
outs
sub
clc
aaa
mov
in
ja
xlat
jmp
sahf
add
in
mov
(bad)
call
mov
sub
scas
sub
pop
ret
sbb
(bad)
pusha
std
xor
lods
daa
mov
(bad)
sub
mov
push
dec
arpl
pop
fld
jbe
cmp
mov
aas
xchg
fs
inc
mov
ja
xor
push
or
rol
sub
xor
xchg
lods
mov
imul
sbb
(bad)
aas
sub
lahf
int
jb
stc
popf
inc
and
test
cmp
push
mov
ficomp
jnp
fisubr
aaa
xchg
adc
scas
ror
lea
or
out
jmp
pop
addr16
int
inc
mov
ret
nop
inc
cdq
xor
call
adc
jns
sub
xchg
imul
imul
fisttp
xor
mov
mov
out
ins
adc
gs
mov
aaa
shl
jmp
jg
dec
jl
(bad)
mov
in
cmovnp
std
cmp
leave
xor
clc
fld
push
mov
cwde
popa
loop
pop
mov
fs
xchg
fwait
pop
xchg
pop
cwde
jg
cmp
pop
lea
sbb
add
es
popf
ja
push
mov
and
push
lods
cmp
mov
inc
mov
and
pop
aaa
adc
retf
mov
enter
sub
cmp
cli
push
push
test
mov
mov
add
jmp
inc
dec
lea
data16
or
push
neg
shl
es
out
je
ror
inc
bound
mov
stos
cmp
pop
imul
sub
out
scas
scas
jmp
hlt
or
inc
pop
enter
addr16
push
xchg
(bad)
sub
test
fdivr
mov
add
mov
mov
popf
call
movs
fsubr
mov
mov
lods
xor
add
mov
push
in
lds
scas
ds
push
sbb
neg
ins
xchg
iret
inc
push
outs
clc
call
lea
shl
mov
ret
mov
(bad)
adc
cvtps2pi
pop
pushf
xchg
add
push
sub
push
adc
push
jmp
adc
push
mov
popa
shr
stos
dec
int
outs
push
xchg
mov
adc
xor
int
aad
pop
pushf
mov
ror
push
or
retf
lds
mov
mov
mov
cli
mov
sar
sub
xchg
mov
retf
jae
push
adc
(bad)
pop
fdivr
iret
and
mov
lahf
daa
cmp
adc
fdivp
pop
or
xor
(bad)
sti
xchg
sbb
arpl
fmul
pop
and
dec
cmc
repz
ins
jns
or
and
es
sub
out
out
sbb
imul
push
repz
jb
mov
push
add
test
mov
xchg
movs
mov
sbb
sti
xchg
sub
and
fstp
loope
adc
xor
jns
aas
bound
or
jno
mul
in
aam
arpl
cmp
(bad)
(bad)
ins
mov
xor
pushf
leave
xchg
inc
lods
sbb
xchg
retf
or
not
pop
clc
xor
dec
and
popf
sar
push
jg
mov
fadd
not
cmp
rol
and
outs
out
das
(bad)
fbstp
rcr
call
mov
pop
jge
adc
out
iret
fnstsw
rol
(bad)
push
loopne
jmp
jg
pop
xor
mov
push
mov
mov
inc
pop
xchg
mov
out
sahf
repnz
inc
out
stos
push
out
les
push
xrelease
jle
jbe
movs
mov
pop
arpl
ror
pushf
cmp
lea
adc
outs
fbstp
lods
or
imul
retf
push
mov
int3
outs
pop
add
shl
mov
xchg
and
addr16
jne
aam
pop
sub
lahf
adc
add
mov
or
mov
outs
sbb
dec
xchg
inc
cli
sub
push
(bad)
dec
test
popa
out
loopne
repz
icebp
not
xor
shr
stc
xor
cmps
fs
inc
into
mov
je
push
std
rol
rcr
mov
loope
test
in
mov
cmp
outs
stos
ret
and
sub
jle
mov
pushf
push
mov
and
adc
dec
sub
ret
cdq
(bad)
inc
inc
mov
mov
sahf
loopne
or
jge
jle
fisubr
xchg
jno
pop
push
jne
dec
jge
fist
ss
into
repz
fbld
ror
std
int3
stos
retf
outs
adc
cmps
push
add
mov
cdq
dec
pop
jne
jecxz
sbb
push
sub
pop
or
sbb
arpl
push
xor
rol
pop
push
xchg
adc
cmp
pop
cwde
ficom
leave
xchg
cli
gs
ret
stc
cmp
or
stc
jmp
mov
nop
dec
in
(bad)
push
sbb
ins
mov
cmp
cmp
dec
mov
xchg
sub
(bad)
xor
(bad)
cmp
(bad)
sub
aaa
daa
in
mov
cmp
xchg
call
sub
and
rol
mov
jl
pop
and
dec
mov
mov
or
inc
cli
(bad)
cli
mov
ja
mov
retf
loope
lahf
lock
repz
rol
adc
shr
icebp
outs
fsubr
adc
add
jo
jo
cmp
sub
mov
and
js
jae
mov
jmp
add
mov
sahf
sub
sub
cwde
in
pop
mov
mov
inc
(bad)
out
(bad)
jge
cli
pop
mov
and
fcomp
or
repz
sub
xlat
pop
dec
adc
ins
xchg
div
mov
movs
repz
adc
adc
stos
push
enter
cld
mov
jmp
and
imul
push
pop
pop
sbb
rcl
lods
popa
sbb
mov
ds
pop
or
and
xchg
jl
in
call
sub
into
xchg
xor
xchg
sbb
jae
pop
mov
std
mov
ror
mov
inc
push
xor
mov
jl
dec
push
pop
cwde
sbb
je
jle
mov
in
inc
cmps
cwde
ficom
sbb
dec
cmp
in
mov
bound
mov
xchg
or
mov
ror
sbb
mov
mov
into
mov
or
cmps
sbb
sub
pop
es
out
ds
push
xchg
inc
lahf
pop
mov
xchg
xor
cmc
push
fisubr
mov
(bad)
cmps
and
fwait
(bad)
push
add
call
adc
sub
shl
sahf
jp
jecxz
mov
xchg
fist
jmp
test
vpsllq
push
xchg
sub
mov
xor
fs
or
sbb
xor
inc
xlat
scas
or
jo
or
or
sub
jno
inc
push
into
pop
or
mov
mov
add
pop
ins
gs
icebp
ss
push
clc
pop
stos
leave
or
mov
scas
xlat
xchg
mov
xchg
xchg
imul
and
push
jle
shl
repz
cmps
scas
leave
push
jbe
into
enter
(bad)
leave
sbb
or
clc
aad
sub
lds
ret
ins
and
adc
out
div
sub
push
sbb
xchg
(bad)
stc
or
adc
mov
xchg
arpl
pop
ins
idiv
dec
out
stos
int3
rcr
mov
mov
push
inc
mov
or
xor
(bad)
mul
hlt
push
xlat
and
stos
movs
mov
sub
ds
and
mov
jg
sar
add
or
addr16
add
dec
add
or
pop
inc
mov
sub
mov
xchg
pop
test
dec
xor
ja
ret
imul
mov
movs
stos
dec
mov
clc
ins
pop
and
inc
inc
or
icebp
adc
shl
(bad)
pop
stos
mov
les
jmp
in
xchg
aaa
sub
sbb
mov
and
mov
jns
fwait
pop
jmp
cmp
lea
dec
jne
add
cli
pushf
pop
out
movs
cmp
aam
repz
xchg
das
rol
add
mov
(bad)
cwde
jb
loop
and
scas
test
xchg
jno
scas
(bad)
int
in
lods
es
inc
mov
cmp
xchg
cmp
sahf
inc
or
push
jno
loopne
movs
jle
ficom
sbb
adc
xor
jecxz
call
inc
(bad)
mov
retf
fs
jae
arpl
mov
jle
lock
fwait
lods
mov
rcl
jl
adc
loope
dec
mov
into
nop
or
adc
xchg
jns
xchg
pop
lods
and
and
mov
mov
(bad)
sti
addr16
and
mov
retf
dec
sub
jle
pop
jmp
inc
dec
push
mov
aam
mov
test
xchg
sbb
loopne
xor
fsubr
in
mov
test
mov
xchg
jmp
jo
sar
mov
dec
(bad)
xor
jle
(bad)
not
jmp
inc
sub
sub
dec
dec
and
stos
pop
xchg
stc
iret
les
jmp
inc
cmp
or
ret
jbe
mov
mov
scas
jp
out
fsubp
mov
pop
push
mov
mov
(bad)
mov
stc
mov
stos
rcl
(bad)
push
popf
pop
push
pop
call
outs
add
add
mov
push
or
jne
push
arpl
xor
cdq
adc
loopne
jbe
sbb
mov
sar
lods
push
in
adc
jl
into
addr16
push
int
add
xor
pop
xor
push
or
idiv
mov
ret
push
test
mov
call
not
fs
push
mov
pop
add
push
popa
xor
and
xchg
ja
cli
push
jge
retf
(bad)
retf
aas
aad
xor
test
sub
fnstcw
nop
pop
sub
ja
popa
test
push
les
(bad)
sbb
cmp
xchg
div
cmp
das
and
stos
lods
sti
gs
mov
out
inc
xor
imul
fnstenv
test
push
js
sub
mov
adc
push
lahf
lahf
mov
push
cld
cdq
adc
aad
vmptrst
push
ss
sbb
xor
das
cmps
ins
sub
movs
jae
jl
ins
lock
outs
loop
xchg
mov
adc
inc
jb
or
mov
mov
mov
pop
push
imul
es
loopne
fcom
movs
add
add
xchg
dec
xchg
and
in
adc
imul
add
lods
cmp
adc
push
xor
fs
jbe
inc
mov
cmps
imul
ins
dec
mov
cmps
xchg
jb
stos
mov
add
mov
or
mov
pop
pop
sub
mov
int
cld
push
fld
inc
leave
iret
mov
mov
fstp
rol
scas
sar
ins
call
in
imul
ds
call
jo
mov
cwde
es
cmp
and
out
mov
push
push
stos
mov
repnz
les
mov
sbb
cmp
es
push
cwde
or
or
out
push
jae
or
pop
in
fcom
sub
add
retf
add
inc
sub
pushf
xchg
nop
pusha
ds
mov
dec
dec
(bad)
jns
mov
jge
add
cmp
xchg
jp
mov
cmps
pop
and
lahf
jl
jnp
cmp
sub
ds
lods
sub
mov
rol
ss
cmp
in
push
mov
(bad)
das
mov
les
dec
jne
and
mov
jle
fnsave
sbb
and
inc
inc
in
int3
daa
adc
pusha
mov
test
and
pop
pushaw
test
test
lods
dec
outs
out
shl
pop
lods
sub
jns
push
sbb
inc
shr
(bad)
lods
dec
rcr
mov
dec
mov
test
retf
push
loopne
add
jbe
cli
push
inc
jl
scas
dec
repz
test
cs
push
and
mov
hlt
sbb
sbb
(bad)
test
push
nop
lods
sbb
mov
adc
xchg
xchg
xchg
stos
mov
(bad)
jle
push
icebp
cmc
or
xor
jmp
inc
cli
fmulp
cmp
inc
mov
or
jb
push
div
dec
fstp
pop
xor
mov
jo
mov
cmp
jno
and
mov
jb
cmp
or
int
add
adc
add
fdivr
lods
xchg
xor
jbe
adc
push
mov
sar
test
lahf
scas
xchg
mov
ins
cmp
cwde
jbe
or
(bad)
cmp
imul
cmp
fst
cmp
add
ins
retf
and
retf
inc
cld
icebp
push
cmps
out
jmp
stos
xor
scas
inc
xor
mov
xchg
out
jns
mov
adc
shufps
neg
ss
mov
sbb
dec
inc
jge
ja
cdq
pop
fs
dec
ret
(bad)
fmul
add
sti
es
ins
(bad)
aam
sbb
add
push
dec
mov
sub
push
out
call
mov
adc
outs
out
xchg
lods
(bad)
adc
cmp
mov
stos
xchg
xor
lahf
iret
mov
dec
in
stc
fld
addr16
cmp
aaa
dec
mul
mov
adc
jg
xor
movs
cmp
arpl
mov
cmps
dec
sbb
cmp
sti
adc
jno
mov
xchg
jns
popf
sub
xchg
jne
test
leave
add
outs
mov
or
inc
out
out
ret
sti
mov
icebp
addr16
sub
push
xor
es
and
jg
push
push
xchg
or
pop
ja
mov
lods
and
(bad)
dec
pop
xor
inc
add
test
mov
add
sbb
dec
pop
xor
dec
jl
cmp
std
hlt
cmp
add
ins
enter
(bad)
xchg
push
dec
jmp
xor
inc
sbb
jle
cmp
pushf
mov
je
push
loopne
xor
out
es
sub
repnz
imul
add
hlt
icebp
dec
add
mov
pop
sbb
adc
mov
add
pop
xchg
adc
sbb
dec
push
movs
imul
jne
loope
fist
(bad)
aad
pop
bound
xlat
mov
retf
cmp
fwait
es
repnz
jg
bound
ins
(bad)
cmp
(bad)
iret
sti
inc
dec
jno
leave
(bad)
xchg
dec
aaa
mov
and
push
repnz
fisub
inc
cmc
mov
jns
push
shl
je
dec
pop
mov
push
push
cdq
nop
mov
sub
into
and
mov
xlat
jae
test
lock
cdq
xchg
push
mov
xchg
cmps
pop
aas
push
push
inc
xchg
mov
aad
dec
pop
add
(bad)
mov
nop
xlat
fwait
push
xchg
sbb
or
or
sbb
je
cmp
inc
loop
mov
mov
or
xor
add
int3
rcl
ins
pop
mov
mov
mov
fs
test
movs
pop
enter
pop
pusha
sub
jb
(bad)
jmp
(bad)
iret
jle
imul
sub
sti
sahf
rcl
or
xor
sbb
sub
aad
mov
popf
ss
fbld
or
xor
in
xchg
js
pusha
sbb
pop
xor
cdq
mov
out
jle
xchg
sbb
test
sahf
jp
push
cmps
stc
xchg
sbb
or
push
popa
lahf
xor
xor
outs
push
inc
popf
stos
inc
and
cmp
mov
dec
push
test
pop
or
clc
retf
jb
inc
(bad)
int
out
mov
adc
(bad)
retf
outs
cmp
data16
pop
cli
lahf
arpl
sbb
(bad)
dec
pop
test
inc
xchg
fsubr
mov
in
lock
leave
daa
mov
add
adc
mov
inc
add
inc
cmp
lods
xor
jno
cmp
cdq
jbe
inc
mov
mov
mov
push
data16
push
gs
(bad)
aad
mov
add
mov
ds
jle
call
ja
sbb
xor
fisttp
cdq
dec
mul
pop
xchg
shl
or
retf
mov
jecxz
xchg
repnz
mov
pop
mov
xor
dec
cmp
xchg
data16
lds
and
jno
fisub
or
push
xchg
mov
add
stos
adc
mov
xchg
call
cmp
ret
mov
aas
repz
add
pop
addr16
push
adc
imul
shr
xlat
mov
jmp
pop
xchg
mov
or
pmuludq
movs
cmp
xchg
test
xor
xlat
sub
push
rol
in
sar
ret
mov
cmp
enter
imul
test
dec
retf
push
mov
inc
popa
in
test
mov
push
aad
mov
mov
or
sbb
dec
(bad)
push
mov
add
or
stos
add
aaa
or
mov
ret
sub
pop
sbb
(bad)
arpl
cdq
cmp
repnz
dec
outs
xor
jbe
add
stos
add
inc
jecxz
mov
mov
cwde
jo
sahf
outs
add
add
out
ins
cmp
(bad)
sub
sub
push
sbb
and
jne
xchg
fwait
mov
imul
jnp
xchg
xchg
loop
jmp
add
inc
sub
sub
dec
outs
sar
cmp
sub
mov
push
or
and
call
fisubr
ret
jno
(bad)
std
int
xor
sahf
or
lds
push
call
lea
sub
mov
mov
pop
lds
jecxz
push
aam
inc
repnz
or
std
icebp
add
fwait
sub
jbe
stc
leave
stos
das
push
into
stos
mov
aam
sub
xor
sbb
fiadd
and
test
popf
out
fwait
jp
imul
push
xchg
lods
push
xchg
xor
xchg
dec
or
movs
push
pop
fcomp
inc
adc
pop
xchg
cmc
call
data16
add
bound
ret
les
cmp
sar
xchg
(bad)
mov
(bad)
loope
js
jnp
pop
pop
dec
mov
add
out
sub
lahf
xor
lods
movs
repnz
add
or
ja
adc
(bad)
out
or
xchg
mov
adc
cmps
mov
xor
pop
mov
xor
loopne
mov
arpl
and
sbb
xchg
xchg
repnz
outs
cmp
xchg
add
or
fcomip
inc
test
fbstp
xor
cmps
inc
out
cmp
sti
push
mov
pop
xor
fnsave
adc
shl
bound
div
ins
or
dec
jbe
lds
pop
les
daa
mov
add
jmp
inc
fcmovnb
push
ins
push
(bad)
(bad)
int
fist
(bad)
sub
xchg
push
data16
cmp
or
in
mov
fisttp
in
mov
mov
inc
inc
lds
test
xchg
stc
pop
not
pop
jnp
xor
(bad)
int
sub
mov
mov
aad
ficomp
inc
or
int3
dec
aam
int3
inc
xchg
xchg
adc
les
push
leave
push
mov
or
lea
pop
xchg
mov
lea
mov
mov
push
arpl
mov
sbb
add
sahf
ja
jecxz
test
pop
dec
dec
jg
mov
mov
or
jns
loop
pop
js
(bad)
in
xchg
mov
push
(bad)
cmp
jae
xor
cmps
rcl
add
inc
xor
xchg
out
pop
rcl
icebp
icebp
outs
test
pop
jg
xor
xchg
loop
test
stos
jmp
dec
mov
mov
cmp
sbb
sub
movs
push
and
repz
stos
sub
dec
xchg
and
cmp
xchg
bound
ret
adc
cli
cmp
mov
mov
or
cdq
pop
test
stos
sbb
sbb
fld
push
(bad)
mov
xchg
cmp
add
mov
sub
dec
aam
nop/reserved
jb
jl
jno
leave
mov
(bad)
mov
push
pop
lods
push
jbe
lds
xchg
lds
xchg
scas
jl
jae
mov
mov
or
pop
sbb
push
cmp
popf
adc
jo
aad
inc
into
inc
cmp
into
(bad)
xor
(bad)
cmp
stc
pop
push
retf
or
test
aad
fild
outs
(bad)
retf
test
mov
int
arpl
xor
mov
test
daa
jnp
aas
push
and
jmp
imul
sbb
cmp
lahf
mov
or
repz
lods
lock
push
fnsave
sbb
repz
icebp
rcl
retf
or
fnop
repnz
cdq
fldcw
inc
data16
sbb
es
or
mov
bound
push
js
xor
lea
adc
dec
xor
test
(bad)
jp
jp
shl
js
and
pusha
js
outs
push
and
pop
fmul
out
add
pop
iret
pop
call
dec
movs
popa
pop
dec
in
jmp
xchg
jl
cmp
outs
or
cmps
aaa
adc
(bad)
mov
xor
add
adc
pop
gs
or
cwde
js
dec
ror
ins
in
mov
rol
sub
clc
mov
adc
daa
mov
mov
popa
aas
pop
mov
mov
loop
push
retf
iret
or
mov
pop
fs
xlat
adc
mov
outs
outs
add
jle
dec
sbb
sub
adc
es
or
mov
mov
shl
lods
push
movs
loope
imul
dec
mov
jo
outs
mov
fisub
neg
lds
mov
and
out
add
jp
das
jp
add
lock
movs
xor
lods
bound
adc
lahf
cdq
call
xchg
mov
add
cmp
in
bound
movs
xchg
cmc
gs
add
ret
push
cmp
out
rcl
mov
add
cmp
dec
sbb
mul
fdiv
cmps
inc
das
in
cmc
mov
push
and
ds
add
push
pop
mov
jl
lods
ins
push
add
lods
push
inc
jns
fiadd
jb
popa
ss
cmps
or
lea
push
lock
test
or
add
inc
sbb
sbb
aaa
xlat
push
out
sbb
adc
icebp
push
div
xor
imul
fcomp
sub
es
inc
and
or
fdivrp
jo
imul
ret
int3
push
mov
cwde
cmps
sbb
xchg
test
xchg
adc
jmp
push
fcom
out
ins
ins
mov
and
add
cld
cmp
mov
mov
movups
popa
dec
xchg
xor
sub
add
pop
loope
icebp
dec
(bad)
retf
test
or
popf
in
fsubr
mov
sub
add
sbb
sbb
xor
nop
cli
push
enter
pop
adc
adc
or
sbb
popa
sbb
xchg
or
aaa
dec
lods
movs
add
in
jp
in
dec
pop
inc
(bad)
pop
hlt
mov
aam
cld
ds
imul
rol
or
mov
ror
adc
mov
aas
mov
cmc
in
aaa
push
push
jg
ins
out
pop
mov
jbe
lods
sbb
cmps
inc
push
cmp
mov
cld
cdq
mov
mov
int3
imul
ret
das
push
stos
test
int3
adc
dec
bound
mov
in
fimul
sub
(bad)
das
test
lahf
xchg
xchg
stos
xchg
jnp
fwait
test
enter
push
pushf
add
cli
call
ret
lods
jle
xor
push
mov
dec
sub
je
lahf
cmp
sub
sbb
xchg
cmp
out
mov
push
outs
jnp
sub
push
sub
aas
icebp
js
cwde
enter
jmp
sub
mov
shr
xchg
dec
repz
and
nop
cmps
in
call
and
retf
jg
call
cdq
imul
push
jle
mov
xlat
(bad)
lock
cmp
cmp
mov
iret
pop
scas
(bad)
jg
mov
hlt
lea
repz
mov
ins
jno
fdiv
imul
xor
das
scas
dec
nop
clc
cmps
dec
mov
call
loope
cmp
stos
mov
or
cmp
stos
push
out
icebp
pop
cmps
gs
xchg
stc
fld
rol
dec
test
dec
xchg
mov
in
test
iret
rcl
xor
push
ins
mov
and
cmc
imul
fadd
and
shr
jae
je
and
or
ds
stc
das
dec
and
stos
ror
(bad)
jmp
cld
cmc
in
shl
loope
pop
xchg
ret
xor
xchg
enter
sub
ret
add
jns
icebp
or
outs
ja
sbb
xor
cmp
dec
cmp
sbb
xchg
push
mov
sub
adc
stos
daa
cmp
test
inc
out
jb
shr
(bad)
sub
stc
xor
or
sti
mov
lock
sbb
mov
mov
add
mov
movs
mov
aad
or
add
sbb
add
mov
jmp
adc
mov
clc
in
(bad)
fild
pushf
sbb
jno
jb
push
jne
mov
xchg
and
xchg
mov
sub
sub
xor
mov
fcomp
loopne
inc
movs
cmp
movs
lahf
jle
and
js
out
fwait
mov
xor
fs
push
jno
pop
stc
add
xchg
dec
lock
popa
and
cmp
mov
xchg
call
jne
adc
push
dec
test
inc
movs
pushf
pop
sti
test
test
or
repz
jmp
(bad)
push
xchg
add
fbld
in
and
imul
or
ret
pop
lods
hlt
mov
pop
dec
loope
cwde
pop
pop
pop
scas
popa
daa
addr16
je
mov
pop
inc
xchg
and
lds
xchg
rcr
mov
ds
add
cmc
pop
scas
das
adc
cmps
xor
out
cmp
retf
(bad)
aas
leave
ja
mov
pop
pop
add
stos
pop
jmp
adc
or
rcl
jo
and
out
add
or
jae
jnp
jo
pop
hlt
call
pushf
dec
cmp
lods
js
call
mov
xor
sbb
xchg
sbb
inc
fsubp
imul
pop
fisttp
ins
(bad)
and
mov
push
pop
sbb
dec
add
imul
les
xor
mov
sahf
jmp
dec
out
lds
mov
push
sub
xor
js
shl
pop
adc
add
cwde
cmp
bound
adc
ins
imul
jmp
in
retf
test
lds
dec
cld
jb
add
lods
(bad)
fsub
pushf
pop
das
cmp
je
dec
cmc
pop
add
fprem1
add
xor
test
out
add
and
or
pop
fmulp
adc
aas
test
stos
or
lock
shl
or
addr16
pop
mov
popf
sahf
xor
jno
inc
dec
dec
fild
or
mov
sub
dec
scas
repz
movs
je
cmc
cmc
hlt
push
mov
fucompp
pop
cmp
out
es
iret
mov
and
xchg
lahf
mov
pop
xor
cmp
daa
or
dec
dec
movs
jmp
jnp
xchg
mov
lock
fiadd
es
or
pop
sub
jbe
retf
jecxz
iret
repz
int
lock
arpl
call
sar
repnz
mov
pop
call
je
and
jmp
mov
mov
adc
mov
mov
imul
fsubr
jb
(bad)
ds
push
loope
pop
(bad)
icebp
xor
fwait
in
push
mov
cmp
aam
add
xchg
pusha
mov
imul
inc
or
imul
fdiv
lahf
cmp
mov
xor
push
stos
mov
in
and
cmp
out
xchg
test
scas
xchg
jbe
xchg
jp
fdiv
inc
inc
push
fcomip
inc
leave
enter
cmp
hlt
xchg
clc
pushf
loop
jno
mov
adc
adc
sub
inc
fiadd
test
out
sub
(bad)
fucom
mov
(bad)
shl
and
dec
push
dec
mov
xchg
xchg
push
adc
(bad)
out
retf
and
daa
mov
add
mov
sar
pushf
jnp
dec
sbb
or
dec
fadd
loop
xchg
icebp
aaa
jmp
outs
lods
aam
aaa
push
cmc
mov
retf
fistp
dec
xchg
push
sub
lods
mov
cli
adc
or
adc
mov
push
test
inc
jo
rol
movs
push
fwait
and
mov
xchg
lods
mov
mov
add
xchg
cmc
loopne
test
ret
mov
aam
xchg
xchg
sbb
ficomp
xor
ins
sbb
inc
or
inc
pop
ins
hlt
dec
push
loop
out
shr
repnz
push
mov
and
sbb
push
sub
(bad)
mov
(bad)
and
idiv
xchg
loope
mov
test
mov
into
pop
test
xor
test
sahf
mov
fs
sub
dec
add
aas
and
gs
leave
add
xor
adc
mov
shl
lock
pop
cmp
jmp
xchg
test
sar
and
cdq
dec
inc
sub
sub
jmp
out
es
mov
jl
mov
outs
imul
mov
or
xchg
imul
push
dec
mov
lea
adc
xchg
add
adc
mov
nop
jmp
inc
adc
xor
mov
rcr
push
lds
cmc
add
(bad)
push
mov
jmp
pop
pop
and
repz
in
retf
jmp
xchg
mov
movs
iret
in
inc
out
lahf
imul
inc
icebp
ret
retf
mov
shl
xchg
or
mov
xchg
xor
fisub
daa
mov
loop
dec
pop
push
xchg
mov
aam
pop
iret
jmp
or
cmp
in
xchg
or
js
aad
pop
mov
push
add
stc
in
aam
jmp
shl
repnz
xchg
pop
cmp
adc
cli
lods
cmp
shl
ja
fidivr
lahf
and
and
cmp
jne
xchg
push
mov
or
psllq
cmps
pop
ins
dec
inc
and
inc
into
cli
or
push
test
push
and
cmp
add
jp
jmp
pmaddwd
or
jo
mov
inc
adc
fwait
dec
mov
pop
mov
jmp
xor
fisttp
imul
jecxz
sbb
gs
inc
jno
(bad)
mov
mov
xchg
mov
inc
icebp
(bad)
adc
mov
ds
jae
ss
or
aaa
fwait
adc
dec
lds
push
scas
mov
inc
jo
movs
clc
loope
stos
jo
gs
in
jb
out
add
push
pop
call
int
or
xchg
(bad)
or
push
jns
fst
pop
mov
inc
sbb
mov
mov
add
pop
ret
jmp
fistp
sti
push
jg
les
xchg
xchg
popf
clc
loopne
retf
xor
jae
xor
dec
xchg
out
cwde
adc
in
push
or
ds
fwait
dec
je
iret
inc
dec
in
fstp
nop
inc
enter
push
sub
mov
mov
stos
mov
cmp
push
inc
sub
xor
push
nop
jle
cli
add
jl
mov
xor
enter
push
scas
xor
sub
pop
adc
es
push
adc
pop
int
rol
mov
call
fidiv
lea
les
jmp
inc
popa
jg
retf
ja
xor
mov
inc
add
and
cmp
imul
(bad)
push
jnp
bound
jge
and
daa
jns
inc
cmp
test
call
cli
repz
or
imul
jne
push
scas
cmc
scas
pop
inc
xor
in
dec
mov
icebp
scas
popa
push
dec
push
pusha
ret
mov
pop
and
aam
push
dec
push
ins
jle
inc
cmp
call
pop
sbb
jbe
imul
xor
mov
xchg
mov
popa
dec
mov
jmp
(bad)
in
aaa
jmp
sub
aam
ins
adc
push
repnz
retf
sti
push
xchg
out
add
movs
xor
xor
dec
pop
xchg
adc
(bad)
mov
stos
call
test
jl
sub
mov
add
cmovge
fldcw
or
sar
sub
mov
fs
and
or
xchg
pop
pop
mov
test
xchg
mov
shl
loop
sahf
xchg
dec
inc
jno
stc
mov
inc
lods
test
repnz
mov
repnz
mov
push
fld
fsubr
sub
bound
imul
mov
std
mov
mov
jl
jmp
mov
mov
in
loop
push
inc
xor
out
call
es
inc
xchg
mov
js
out
cmps
ficom
mov
xor
jo
pushf
test
jnp
mov
movd
cmps
sub
jne
imul
jno
(bad)
test
loope
inc
fldcw
inc
imul
inc
outs
mov
push
loop
sbb
dec
into
inc
mov
movs
and
(bad)
in
loop
push
mov
inc
rcr
mov
in
mov
inc
xchg
imul
push
loope
sub
and
fwait
push
inc
inc
inc
mov
push
push
dec
scas
ja
xor
push
test
out
sbb
mov
pushf
jge
pop
call
scas
inc
mov
hlt
jnp
loopne
std
sub
test
rol
jg
in
jnp
dec
jo
ins
mov
into
pop
in
call
pop
mov
inc
cmp
lods
cvtps2pd
pop
repz
mov
sti
and
test
outs
ins
mov
jne
cmp
jge
aam
mov
out
xchg
xchg
call
mov
push
inc
sub
xchg
test
retf
movs
and
jb
popf
das
(bad)
call
jno
pop
gs
cwde
mov
idiv
fs
inc
aam
jle
mov
push
xchg
addr16
fld
xchg
sub
adc
fs
int
ret
mov
add
fsubr
bound
repnz
aam
sbb
jg
mov
sbb
push
fcom
(bad)
sbb
dec
gs
imul
cmp
dec
test
mov
into
inc
mov
dec
add
sub
and
iret
and
add
xor
out
adc
xor
movs
mov
out
adc
pop
popa
inc
mov
mov
fild
push
jno
sbb
pop
fstp
test
retf
and
cwde
pushf
shl
paddd
outs
sbb
and
lods
mov
add
out
in
fsub
std
aad
lods
out
loope
push
adc
out
pop
loopne
mov
cdq
mov
in
jmp
push
shl
jl
inc
sbb
mov
mov
or
imul
daa
rcr
mov
sbb
cmp
shr
push
sub
and
ror
xor
mov
mov
push
div
jno
sbb
mov
xor
fadd
aas
jo
scas
and
xor
mov
clc
lahf
lahf
movs
jo
ins
hlt
xchg
jnp
mov
cmp
dec
jle
and
in
xchg
into
fsubr
test
inc
addr16
aaa
out
adc
retf
adc
cmp
add
or
popf
cmp
hlt
dec
cld
and
in
mov
sbb
dec
sbb
adc
jmp
imul
stos
jno
pop
test
js
xor
call
mov
xchg
inc
icebp
push
cmp
adc
repz
mov
adc
sbb
stc
sub
repz
inc
pop
cmp
sub
xor
jo
mov
adc
scas
xor
fcomp
jle
ret
leave
(bad)
xchg
fidiv
cmp
scas
cs
mov
push
pop
xchg
(bad)
or
fwait
sbb
lods
xor
mov
cdq
into
fcmovb
(bad)
sub
mov
aam
scas
and
xor
or
or
and
jle
popf
mov
cmp
push
jbe
push
and
call
or
xlat
xchg
mov
jmp
mov
aas
shl
inc
pop
lods
inc
sbb
sbb
fwait
gs
into
mov
ins
adc
hlt
daa
jbe
jg
sub
cmc
push
in
lods
and
inc
pop
icebp
mov
enter
jp
mov
jle
pop
jmp
js
mov
or
sbb
inc
xor
out
inc
inc
mov
and
stos
pop
xchg
sahf
adc
add
rcl
call
cmps
xchg
dec
xor
test
dec
push
dec
call
lahf
into
push
mov
test
jmp
hlt
lods
retf
add
gs
cmp
lods
lods
or
sub
jae
out
sbb
mov
stc
loop
lods
xor
add
mov
lods
mov
mov
popa
inc
(bad)
pop
mov
push
push
inc
pop
shl
movs
mov
cmp
dec
jle
fisubr
xchg
xor
(bad)
cmp
jmp
jl
jbe
xor
in
imul
gs
push
dec
leave
add
or
popf
mov
sbb
push
cmp
mov
fdivr
jp
movs
mov
test
call
xor
pop
mov
push
mov
xchg
push
inc
push
ret
movs
mov
cmp
das
(bad)
sub
xor
push
sti
sbb
cmp
push
mov
int3
ds
daa
ss
mov
push
jae
pop
mov
jle
jecxz
sub
cmpps
fwait
jmp
push
enter
addr16
repnz
xlat
ror
out
jno
fistp
(bad)
or
mov
hlt
sub
test
mov
push
mov
sbb
cwde
sub
adc
jbe
call
int3
test
and
fstp
adc
test
stos
cmp
cmp
mov
out
inc
pop
outs
pop
movs
sub
sub
fistp
movs
push
sti
fwait
xchg
jno
jl
dec
push
bound
icebp
adc
pop
loope
call
add
and
mov
mov
and
jns
add
dec
dec
lahf
mov
inc
iret
cmp
pop
jl
lock
sbb
stos
dec
arpl
jo
push
(bad)
sbb
push
xchg
mov
xor
daa
dec
neg
scas
mov
xor
mov
(bad)
inc
not
imul
dec
inc
jae
fs
ins
add
(bad)
xchg
arpl
ins
pop
sub
mov
and
push
mov
ret
std
cmp
movs
pop
xchg
dec
int3
mov
jbe
pop
in
std
les
sub
rcr
xor
mov
sti
outs
mov
sub
pop
jecxz
pusha
or
or
inc
nop
sbb
adc
iret
adc
xor
adc
bound
test
int
xor
add
fcmovbe
loopne
xchg
dec
aam
ret
cmps
inc
jg
mov
pop
bound
test
and
jo
cmp
ins
cmp
mul
push
out
jmp
call
jl
sbb
mov
add
test
fs
div
scas
cmp
sbb
hlt
pushf
pusha
mov
jmp
aad
jp
pop
ret
mov
std
imul
push
sbb
cwde
xchg
add
repz
aad
out
and
inc
add
(bad)
xlat
pop
cmp
pop
mov
sub
jmp
push
popa
jle
xlat
sub
in
imul
and
mov
frstor
fwait
jns
retf
or
adc
add
push
cmp
aad
shr
mov
push
popa
xor
xchg
cmp
sbb
xchg
rep
mov
es
lock
inc
and
inc
xor
ror
xchg
pop
push
pusha
and
push
fmul
or
mov
sub
jmp
pop
pop
lds
jge
stos
call
jbe
mov
adc
(bad)
rcr
mov
xchg
(bad)
(bad)
xrelease
icebp
or
jmp
in
dec
push
adc
lds
xor
dec
push
loopne
shr
jb
movs
push
or
cmc
mov
mov
mov
mov
sub
and
xchg
aaa
sub
cwde
pop
mov
jo
or
xchg
push
and
sti
pop
movs
loop
cmp
ins
mov
fdivr
das
data16
leave
jne
xor
push
out
jo
test
in
or
dec
dec
mov
lods
mov
adc
lods
mov
pop
pop
das
shl
jle
fs
xchg
sbb
int
mov
mov
daa
mov
mov
pop
sbb
rcl
(bad)
dec
fimul
dec
(bad)
(bad)
fwait
jmp
aad
out
(bad)
stos
cmps
arpl
or
lea
das
sar
shl
bound
loopne
jle
mov
xor
fwait
loope
pop
mov
dec
sbb
clc
clc
jmp
pop
mov
push
out
mov
mov
mov
sub
inc
push
mov
loope
out
jb
cmp
mov
add
loopne
xor
cmp
sub
retf
xor
push
pusha
je
ret
into
aaa
and
repnz
sbb
enter
pop
pop
or
cmps
jbe
gs
add
xor
loope
shl
and
mov
inc
fwait
ret
(bad)
hlt
mov
clc
jo
std
cmc
or
int
clc
cmps
scas
je
jo
clc
test
inc
mov
cdq
sahf
mov
and
and
mov
aas
test
sub
pop
scas
mov
lock
sub
mov
aad
aad
or
mov
sti
mov
mov
push
jno
movs
push
test
sbb
and
pop
nop
fwait
fwait
dec
fcom
js
imul
imul
ficomp
lahf
popa
push
mov
(bad)
daa
out
or
ffree
je
push
movs
jecxz
into
test
(bad)
mov
xchg
pushf
mov
mov
push
add
cmp
push
push
cmp
fdiv
fdivr
push
into
inc
sbb
xor
or
cmp
push
call
movs
cdq
popf
mov
push
xchg
imul
and
mov
cmc
cmp
mov
and
mov
mov
mov
jle
push
sbb
jmp
fwait
dec
stos
add
mov
add
mov
sbb
fist
or
fbld
cmp
loope
mov
retf
and
loop
cmp
cmp
not
cwde
test
ins
cmps
add
jge
pop
jp
mov
push
or
enter
jmp
inc
ja
xor
fisttp
call
adc
cdq
cmps
mov
jmp
adc
jb
retf
pop
xor
mov
cld
add
add
mov
inc
outs
inc
jmp
adc
xor
rcl
addr16
cli
adc
and
push
cmps
lds
data16
arpl
leave
inc
pop
call
inc
add
call
neg
in
and
dec
ins
stos
push
push
jno
jns
lock
cmps
dec
dec
cmps
mov
stos
call
jg
sbb
xchg
xor
push
cmps
daa
cmps
test
mov
clc
int
test
mov
jmp
imul
popf
or
ds
pusha
ins
js
sbb
(bad)
fcomp
imul
inc
add
and
sub
push
das
pop
add
int3
push
xor
fmul
sub
lea
xchg
outs
pop
ret
movs
push
mov
imul
cmp
push
mov
(bad)
ds
test
mov
xchg
mov
mov
cs
and
add
stos
sub
lods
fistp
jo
fistp
add
dec
mov
cmc
mov
(bad)
adc
jnp
xor
nop
pcmpeqd
add
push
stos
out
fadd
movs
cs
fsub
xchg
push
xor
call
aad
rcl
xor
adc
push
push
adc
adc
int3
test
xchg
ret
aaa
xchg
mov
repz
lods
(bad)
cmps
ret
ds
test
xchg
jno
cli
jle
sub
imul
enter
dec
push
adc
dec
or
jbe
or
push
ret
popf
mov
int
sar
pop
in
dec
aam
mov
push
xor
mov
leave
data16
repnz
repnz
inc
adc
aas
dec
aas
xor
sub
inc
in
test
add
inc
aaa
idiv
lods
inc
fld
pop
sub
fdiv
pop
and
ror
pushf
loopne
inc
add
lea
sbb
xchg
xor
add
ss
inc
xor
xor
enter
pop
sti
inc
stos
and
call
sbb
retf
retf
cmp
or
(bad)
pop
or
sbb
sbb
pop
push
jo
in
jns
js
or
sub
or
push
les
mov
xor
adc
cdq
shr
scas
xor
jne
sbb
sub
rcr
sbb
pop
mov
cdq
push
daa
int3
mov
jmp
imul
stos
loopne
dec
sub
push
sub
and
cmc
cmp
popa
aaa
mul
into
ret
ins
daa
push
(bad)
mov
pop
dec
inc
popf
dec
cs
imul
xchg
cmp
xchg
sbb
out
addr16
imul
xchg
sti
xor
inc
mov
sti
add
mov
(bad)
xor
xchg
outs
push
xlat
xchg
rcr
jnp
sub
mov
jbe
mov
push
popf
(bad)
repnz
jne
and
cmp
cdq
cmp
mov
movs
je
call
cdq
movs
(bad)
test
call
mov
jl
and
and
jns
lods
lahf
jmp
pop
add
pop
loopne
scas
sbb
push
jns
jle
jno
jnp
add
test
xor
cmps
add
popa
sbb
scas
jg
stos
mov
imul
fsub
stos
xor
movs
jmp
mov
dec
lea
(bad)
stc
pusha
xchg
into
mov
push
mov
inc
sbb
sub
into
jg
in
xor
or
adc
aas
and
and
inc
int3
adc
xor
sbb
sbb
pop
ss
stos
dec
cmc
lahf
push
out
mov
and
daa
sbb
mov
rcl
sub
ja
ss
jmp
stos
ret
rcl
mov
adc
ficomp
adc
cli
data16
pop
or
sub
popf
xor
cdq
mov
dec
outs
loope
mov
lods
or
in
sub
repz
pop
xor
bound
je
mov
dec
add
push
mov
cmps
jp
js
push
(bad)
repz
mov
mov
sbb
retf
in
sbb
xlat
pop
jb
mov
retf
add
xchg
pop
and
icebp
movs
xchg
leave
ins
mov
sahf
in
mov
jb
ins
xor
mov
mov
dec
test
push
bound
mov
movs
push
int3
sub
jo
nop
dec
push
pop
scas
(bad)
jg
pop
arpl
mov
in
push
xor
call
ret
shr
(bad)
outs
pop
mov
cpuid
push
retf
push
cmp
dec
add
add
sub
add
into
push
ds
xor
mov
daa
ins
push
cdq
shl
adc
jnp
mov
jl
xor
jns
stc
xchg
(bad)
jne
stos
pop
jecxz
hlt
arpl
dec
int
push
pcmpeqw
pop
cmps
jnp
lea
mov
mov
out
(bad)
cmp
jmp
push
enter
js
clc
sub
lahf
pop
js
mov
test
test
cld
cmp
mov
add
mov
lahf
push
and
cmp
ja
lds
dec
frstor
inc
fldl2t
test
add
add
jmp
ss
scas
imul
push
pushf
pop
shl
(bad)
jmp
xchg
cmps
and
jle
jmp
shl
add
dec
lods
add
ins
adc
cdq
sbb
lea
dec
(bad)
cmp
jmp
addr16
push
imul
adc
int
jns
stos
mov
pop
rcl
push
out
std
add
ins
jnp
lods
movd
mov
lods
retf
fild
mov
jle
jmp
push
cmp
loop
mov
ret
es
ins
pop
fwait
call
out
(bad)
movs
pusha
xor
push
dec
outs
mov
mov
cmps
xlat
cmc
or
arpl
sbb
int
aad
in
xor
push
mov
in
pop
or
into
imul
rol
jmp
lock
iret
hlt
test
xor
fcmovnbe
aaa
test
jmp
sbb
adc
fisubr
ret
sub
push
and
stos
jnp
ror
xchg
add
jo
push
cs
das
cmps
loope
addr16
dec
aas
in
div
add
jo
pop
movs
jns
out
sbb
xchg
imul
stos
sub
jecxz
push
ss
xchg
mov
fstp
push
xchg
and
dec
jge
jne
sbb
vpshld
pop
test
pop
(bad)
aam
les
mov
mov
push
jl
xor
jnp
or
xor
test
jb
and
jmp
adc
jns
cli
into
sbb
sub
or
(bad)
test
sahf
xchg
inc
out
jp
popf
stc
add
lea
jmp
ret
cmp
sti
sbb
jmp
jne
adc
mov
mov
std
stc
(bad)
int3
iret
rcl
(bad)
aam
mov
sahf
fcomp
jmp
inc
outs
in
add
cmp
fisubr
psubsb
adc
movs
add
jge
mov
imul
and
add
sbb
pop
pop
arpl
push
ffreep
neg
pop
call
enter
mov
hlt
mov
out
(bad)
inc
add
scas
mov
inc
add
in
xlat
xchg
lea
sti
nop
sub
inc
fsubr
push
cdq
mov
mov
shr
inc
sbb
dec
or
pop
sbb
add
and
mov
aas
js
test
xchg
aad
jmp
sbb
xchg
cmps
sbb
fistp
sbb
out
nop
sbb
dec
inc
jmp
jae
ror
sub
retf
mov
fcom
xchg
jmp
add
jmp
div
and
dec
sub
or
retf
sbb
aaa
pop
mov
mov
dec
rcr
xor
sar
(bad)
(bad)
xchg
sub
lods
add
arpl
scas
call
outs
into
lods
aaa
rcr
and
xchg
shl
js
pop
js
pop
out
cdq
sbb
cwde
or
pop
or
call
jns
ins
cmc
retf
or
or
cmps
dec
loopne
dec
loopne
cmp
mov
sub
into
xor
fidivr
push
test
rol
pop
sub
dec
shr
movs
sub
cmp
fiadd
test
jle
mov
fsub
outs
and
xchg
sti
mov
fwait
in
mov
popw
push
mov
and
cmc
fistp
push
test
pop
inc
jle
cmps
imul
sub
xor
rcl
fs
adc
or
mov
fistp
push
mov
inc
fisub
ins
adc
jno
jbe
cmp
cli
and
fincstp
jb
hlt
cmp
scas
into
not
pushf
stos
sub
jmp
leave
(bad)
ret
sbb
cdq
scas
(bad)
stc
push
test
cwde
and
xchg
mul
push
fwait
mov
dec
xor
outs
retf
enter
and
mov
sub
adc
dec
adc
jmp
(bad)
jge
and
rol
ja
es
push
sbb
mov
inc
loope
jp
mov
retf
dec
call
cli
sbb
mov
mov
jb
cli
repz
scas
push
rcl
loope
in
cdq
pavgb
fisubr
pop
xchg
inc
ror
aaa
mov
mov
loop
icebp
push
test
dec
rcl
cmp
call
cmp
cli
ror
nop
xchg
cmps
inc
cmc
mov
adc
ss
sub
sub
mov
ins
mov
ret
scas
mov
cmp
shl
dec
push
lea
ins
fdivr
jno
test
fcomi
cdq
mov
lahf
movs
stc
jmp
cli
test
xor
(bad)
xchg
movs
dec
mov
int3
pop
ret
sbb
shl
sbb
sub
pop
fdivp
sbb
dec
aam
repz
sti
(bad)
popf
or
retf
in
mov
push
xor
push
or
js
data16
pop
pop
sbb
dec
pop
cwde
ja
lea
xchg
jmp
addr16
cmc
outs
cvtpi2ps
pop
xor
cmps
dec
mov
push
push
mov
out
arpl
cmp
sahf
std
dec
xor
or
sub
fmul
in
iret
rol
in
jne
xlat
mov
out
shl
mov
cli
adc
ret
mov
fidiv
not
mov
int3
into
loope
ja
push
dec
xlat
add
shl
rcl
fmul
call
aas
cmp
pusha
cli
(bad)
ds
push
adc
out
pop
lock
jbe
ss
sub
jg
les
loop
sub
nop
xor
add
test
stc
mov
sub
inc
adc
ja
mov
retf
mov
jne
sub
repnz
push
dec
arpl
push
add
outs
mov
adc
sub
scas
cmp
loopne
es
or
pop
xlat
imul
adc
lea
shr
inc
ss
jb
adc
cmp
pop
fdivr
retf
addr16
test
icebp
loop
jne
stos
mov
dec
mov
or
fadd
xor
push
stos
push
stc
popa
out
mov
in
ret
popf
ins
sahf
xor
retf
mov
ins
ss
cmp
xchg
(bad)
xlat
loop
addr16
inc
pop
dec
mov
dec
push
pop
sub
mov
out
arpl
test
push
bound
jae
out
sub
sub
pop
fldenv
push
mov
fwait
mov
rcl
(bad)
test
sbb
sub
pop
xlat
mov
fisttp
into
inc
jecxz
sahf
push
dec
repnz
jnp
jecxz
arpl
mov
call
cmps
pop
cmps
pusha
jmp
imul
icebp
xor
push
mov
bound
and
mov
or
cmp
fdivr
out
in
es
sbb
dec
jmp
adc
adc
shl
xchg
add
push
add
lds
sbb
arpl
or
adc
xchg
test
adc
dec
pushf
shl
xchg
or
test
clc
rcl
push
lods
je
mov
fsubr
loopne
mov
jae
std
icebp
pushf
jmp
sbb
ret
inc
add
cld
test
aam
ror
pushf
rcr
push
jae
cmp
stos
imul
xchg
dec
and
ret
mov
sbb
mov
ins
mov
pop
das
or
add
(bad)
mov
ja
mov
xor
inc
int
push
mov
retf
aaa
and
add
daa
idiv
and
inc
std
sbb
enter
push
sbb
icebp
rol
xchg
push
cmp
inc
mov
call
mov
jge
pop
or
inc
lahf
add
xor
test
(bad)
jg
in
xor
push
jb
and
ins
je
test
loop
outs
ins
and
xchg
mov
outs
mov
sub
adc
xchg
push
inc
or
xor
cmp
outs
sbb
jge
push
jbe
sub
inc
cmp
test
jg
frstor
sbb
div
dec
pop
jle
dec
mov
jb
or
lods
lods
ja
add
cdq
pop
test
dec
mov
cwde
lods
lahf
and
push
int
pop
popf
in
test
les
and
mov
dec
or
mov
mov
ja
bound
mov
iret
mov
xor
shl
add
push
jge
adc
dec
bound
mov
outs
dec
mov
or
popf
mov
sub
call
inc
cdq
dec
enter
cmp
jle
mov
pop
movs
sar
xchg
(bad)
je
push
and
out
add
jmp
pop
fldenv
fisub
mov
dec
int
mov
cmp
push
xor
imul
ret
cwde
enter
and
mov
dec
ret
sub
sub
mov
sub
inc
imul
iret
mov
popf
into
ret
push
add
mov
hlt
pop
sti
add
mov
mov
add
iretw
test
(bad)
sbb
aad
and
inc
pop
xor
shl
pop
ja
in
icebp
xor
rcl
std
fsubr
push
gs
inc
xor
mov
not
int
repnz
mov
mov
dec
mov
cs
fs
inc
add
or
xchg
(bad)
stos
ins
sub
sahf
inc
cmp
icebp
dec
mov
int
(bad)
jno
dec
(bad)
(bad)
lea
or
call
mov
lds
adc
xchg
adc
sahf
fnstenv
sbb
sbb
out
and
cmp
cmps
sbb
mov
in
je
fucomi
aaa
xlat
(bad)
or
push
addr16
and
cmps
xchg
sub
fcomi
jg
xchg
not
pop
xlat
push
add
fisubr
xor
aam
cmps
adc
push
pop
in
gs
scas
xchg
dec
push
xor
add
sub
or
xchg
repnz
lds
jo
jle
in
dec
cmovle
in
ins
mov
dec
or
add
inc
aad
aaa
rol
fidiv
adc
int
loope
in
popa
inc
mov
cdq
mov
aas
or
rol
mov
and
dec
sbb
pusha
cmp
jmp
adc
sbb
inc
fwait
push
dec
or
xor
aad
inc
fadd
mov
sbb
pop
jg
mov
inc
mov
adc
mov
(bad)
fwait
cmp
adc
(bad)
fld
inc
call
sub
cmps
mov
aaa
cmp
ss
dec
lea
test
daa
jg
inc
adc
test
mov
sub
shr
fwait
mov
shr
push
in
pop
test
out
test
retfw
je
ror
jle
cmp
ss
cmp
dec
jmp
pop
mov
(bad)
mov
shr
adc
cmp
clc
retf
cmp
pop
popa
jno
lods
mov
cmp
inc
pop
test
xchg
sbb
psubq
jl
call
cwde
test
lds
aas
mov
or
dec
call
cli
stos
in
fisub
pop
fs
dec
jnp
mov
sub
sub
inc
push
fwait
pop
xor
mov
aaa
test
xchg
adc
fnstcw
pop
retf
movs
push
adc
pop
js
clc
popf
push
jecxz
push
mov
imul
out
jns
add
lods
pop
mov
sub
xor
fstp
sbb
mov
xchg
retf
stc
pop
adc
in
pop
cdq
push
push
into
jb
dec
dec
cmp
mov
stos
es
jmp
loopne
out
xchg
mov
inc
or
dec
mov
push
lds
(bad)
scas
std
das
dec
out
mov
push
je
push
mov
sbb
xor
sbb
not
out
or
out
xchg
mov
dec
xchg
neg
cmp
fadd
int3
adc
mov
sbb
or
mov
sbb
push
push
std
test
shl
aaa
mov
jge
mov
pop
adc
or
les
lods
pop
lods
sbb
add
stc
pop
adc
xor
out
leave
loopne
dec
jp
jp
pop
add
ja
imul
mov
mov
mov
stos
out
add
scas
jmp
pop
mov
cmc
mov
cmp
push
fwait
push
(bad)
jne
pop
mov
rol
mov
xor
push
jmp
mov
and
dec
cmps
stos
and
ins
fcmovnbe
test
xor
bound
ss
sub
and
ret
clc
icebp
xchg
push
pop
(bad)
loop
movs
jle
out
test
inc
ret
xchg
retf
dec
xor
daa
(bad)
jae
ins
add
mov
fs
aad
jp
xchg
and
fs
lds
sti
(bad)
sub
sub
push
adc
cs
sbb
push
bound
sbb
pop
scas
stos
add
dec
mov
push
jb
pop
or
data16
xchg
cmps
mov
mov
(bad)
mov
cli
inc
mov
or
pop
cmps
pop
(bad)
or
rol
jle
dec
mov
mov
out
lds
movs
out
cmp
test
push
(bad)
sbb
test
pop
movs
pushf
into
retf
lods
dec
dec
jp
mov
mov
adc
mov
push
int3
fist
jmp
das
jp
(bad)
and
sub
mov
push
rcl
imul
mov
push
jbe
jno
dec
mov
fnstcw
mov
mov
or
mov
inc
sbb
mov
mov
pushf
mov
or
mov
xor
mov
lods
int3
mov
js
xchg
inc
aaa
pop
push
pushf
add
stc
pop
(bad)
aaa
mov
dec
imul
test
stc
nop
dec
add
inc
push
stos
or
cs
les
int3
dec
mov
pop
mov
call
mov
rcr
lods
mov
xor
add
cmps
es
and
add
xchg
mov
aas
sub
out
jle
pushf
(bad)
jp
pop
fstp
mov
fsubr
adc
ror
popf
xor
jae
or
icebp
mov
sbb
xchg
jecxz
call
and
inc
push
push
neg
rcr
ror
loope
cdq
sub
jl
rcl
cwde
in
aad
icebp
push
push
call
xor
shl
and
jno
and
pushf
pop
outs
sbb
cmps
lock
xor
mov
push
push
push
call
scas
xchg
mov
pop
inc
inc
cmp
and
adc
cmp
mov
cmp
push
pop
mov
mov
clc
jmp
push
lods
pop
add
inc
shl
jl
shl
add
adc
xchg
das
clc
ss
nop
or
test
jle
inc
jne
mov
or
dec
fiadd
out
scas
xchg
xchg
xor
dec
or
xor
ja
dec
mov
pop
in
mov
xor
cli
sahf
cmc
inc
popa
aaa
mov
mov
daa
les
or
ja
adc
fsub
add
xchg
lods
sar
jecxz
leave
movs
xor
push
dec
imul
xor
rol
les
retf
int3
das
cmp
les
iret
dec
scas
rol
cli
mov
repnz
loop
pop
xchg
ss
and
not
dec
jmp
add
jnp
hlt
inc
xor
and
xchg
jg
sbb
mov
(bad)
xor
xchg
pop
cmp
push
(bad)
fnstsw
test
in
add
jmp
fwait
xchg
es
out
xor
call
(bad)
gs
movs
xchg
adc
pop
pusha
outs
jmp
pop
sub
inc
add
inc
loop
lock
call
mov
stc
test
movs
pop
fisttp
iret
ret
or
push
dec
jno
adc
push
xor
fdivr
fidiv
xor
inc
mov
mov
xor
inc
and
push
jb
fisub
scas
movs
mov
sub
clc
lds
iret
data16
pop
cdq
push
or
or
mov
(bad)
xor
dec
push
repnz
icebp
outs
and
fisubr
pop
jle
push
outs
jge
add
xlat
jmp
leave
inc
push
jp
retf
arpl
sub
jne
mov
dec
fist
sahf
mov
aad
(bad)
(bad)
aad
xor
out
ss
mov
push
cmp
or
adc
or
test
cmp
inc
or
adc
das
push
mov
cmp
xchg
test
or
cmps
add
push
push
fwait
enter
adc
iret
in
jnp
pop
add
adc
lods
push
pop
sub
cmp
xor
push
fdivr
sbb
pop
mov
inc
imul
mov
icebp
lods
mov
dec
hlt
setle
popa
scas
cwde
pop
outs
jp
jns
popa
inc
xor
ds
push
aas
xchg
pop
(bad)
rol
(bad)
push
xchg
jno
aas
ins
stc
(bad)
popf
imul
popf
dec
and
imul
(bad)
cwde
repz
cmp
into
pop
mov
xor
xor
shr
shr
js
(bad)
pop
sbb
fimul
jne
xchg
pop
mov
xor
sub
or
or
jno
sbb
fcomp
cmp
test
je
mov
lock
mov
xor
cmp
(bad)
addr16
jge
enter
(bad)
stc
pop
popa
xchg
push
ret
(bad)
fnsave
bnd
xchg
ja
retf
(bad)
xlat
push
dec
adc
add
or
aad
ret
mov
enter
push
inc
mov
fisttp
jne
jp
push
xor
test
sbb
mov
loopne
xchg
xchg
xchg
sbb
dec
fwait
ins
sti
adc
repz
xor
inc
pop
in
mov
or
loope
add
jae
pop
stc
and
adc
cs
dec
sar
and
dec
cmc
push
pop
fldenv
mov
inc
xchg
push
(bad)
sbb
pop
out
mov
stc
push
hlt
lock
and
fldenv
jle
pop
sahf
shl
adc
sub
adc
inc
pop
cld
ds
cmps
sbb
imul
aas
fbstp
mov
pop
das
sbb
imul
hlt
adc
ss
test
dec
xchg
mov
enter
fiadd
arpl
cmc
cli
adc
fild
arpl
pop
loope
push
nop
add
inc
jecxz
mov
adc
or
pusha
mov
into
add
rol
mov
fistp
xor
push
xchg
inc
jb
sbb
xchg
aaa
movs
ret
out
sub
pop
push
add
push
xchg
dec
xchg
(bad)
adc
pushf
imul
push
loope
jecxz
inc
xor
xchg
push
movs
enter
lods
jg
dec
push
cmps
cdq
xchg
xchg
sub
sub
fs
cmp
xor
push
mov
dec
stc
popa
jne
jge
pop
xchg
scas
movs
xchg
cs
mov
push
repnz
add
mov
popf
ins
sbb
(bad)
push
mov
lahf
call
inc
fsub
dec
out
sbb
cmps
fsub
push
stos
fucomi
sbb
das
xchg
(bad)
loop
mov
movs
and
ret
loop
dec
push
loope
icebp
daa
ror
ja
imul
stos
into
mov
inc
repz
cmp
outs
adc
xchg
mov
jns
cmc
inc
ins
test
lahf
int
mov
mov
xor
push
sar
js
mov
test
sub
rcr
cld
(bad)
fistp
push
ins
sub
sub
movs
sub
xor
sub
xlat
ds
cmp
pop
push
std
out
fcomp
jnp
adc
or
shl
sbb
das
or
imul
pop
mov
ja
aam
cld
xchg
addr16
jle
pop
repnz
arpl
or
in
jb
mov
jp
mov
iret
(bad)
pop
add
pop
xchg
push
adc
fwait
mov
lock
push
xchg
retf
mov
loop
ins
jmp
xor
into
js
push
mov
push
pop
outs
push
test
adc
xlat
cmp
xchg
pop
imul
test
inc
xor
pop
push
lods
inc
arpl
cmp
cli
(bad)
sbb
or
pop
movs
or
rcr
pop
push
mov
xchg
xor
es
cs
cmp
xor
daa
dec
(bad)
dec
sub
(bad)
in
fs
pop
xchg
mov
aaa
rcr
sbb
aam
es
and
mov
mov
xor
adc
mov
and
jbe
es
and
ds
ret
xor
cmp
mov
cmp
push
push
stc
aaa
pop
jbe
sbb
addr16
pop
jns
ds
add
add
daa
push
stos
add
pop
ins
data16
xor
jmp
push
je
shl
xchg
xchg
jp
jnp
fldcw
jge
jmp
push
sar
mov
test
fst
push
push
xor
adc
mov
in
mov
cs
adc
fild
inc
mov
xor
outs
cmps
pop
and
aam
mov
add
xor
adc
jno
inc
jo
jo
js
fucom
add
and
sahf
popa
add
enter
repnz
mov
call
jo
aad
repz
int3
lods
dec
and
dec
int
ins
(bad)
div
test
xor
mov
test
std
retf
rol
fst
in
xor
cmps
aas
jge
stos
lahf
fs
js
or
sbb
cld
sub
in
imul
push
stos
repz
jns
sub
adc
inc
test
xor
in
mov
cdq
sub
sahf
lds
cmp
(bad)
loop
jo
jb
or
bswap
dec
xlat
push
ds
out
adc
aad
mov
cs
rcl
or
xchg
mov
push
cmp
mov
push
(bad)
and
movs
sti
push
imul
(bad)
(bad)
push
xchg
and
jae
std
mov
inc
mov
mov
(bad)
test
pop
jbe
cmp
xchg
sub
ror
stos
add
rcr
pop
add
fcmovnbe
pop
add
fdivr
popf
push
pop
inc
dec
sbb
(bad)
jge
shl
adc
shr
jle
jmp
das
xchg
jecxz
retf
ret
add
cmp
sbb
(bad)
(bad)
cs
and
push
fistp
mov
aad
xchg
(bad)
jmp
sahf
push
sbb
pop
into
jmp
lds
cmp
adc
dec
mov
jae
pop
mov
mov
jae
mov
jo
in
pusha
xor
jmp
mov
(bad)
inc
sbb
push
(bad)
or
into
movs
xor
rcl
push
popa
cmp
fstp
bound
adc
mov
fisubr
inc
mov
sub
or
push
push
xchg
mov
push
das
lahf
cmp
inc
stos
(bad)
(bad)
fcomp
mov
push
ins
sbb
sti
add
pop
in
sbb
add
rol
adc
pop
in
xchg
and
dec
push
and
sub
add
loop
mov
stos
(bad)
jne
mov
xor
jns
ret
mov
call
or
pop
pop
jp
in
out
(bad)
mul
imul
out
and
les
pop
daa
cli
pusha
mov
fdiv
adc
(bad)
bound
stos
std
sub
push
repnz
arpl
mov
out
pop
scas
xor
inc
xor
out
ret
mov
mov
cmps
icebp
out
or
cmp
and
push
aam
push
xor
repnz
ret
imul
push
je
push
test
std
fwait
(bad)
fsub
push
sbb
sbb
xchg
sti
or
xchg
push
rol
pop
push
pop
sub
movs
push
mov
(bad)
mov
jae
add
cs
adc
mov
rol
push
outs
ins
pop
fcomp
cmc
jecxz
call
mov
aad
mov
pop
neg
ret
pushf
dec
or
push
scas
rol
lock
lods
test
sbb
mov
and
ror
pop
mov
ss
fs
sahf
mov
aam
xor
xchg
inc
inc
push
mov
adc
loopne
fnstsw
fisub
add
dec
and
xchg
xchg
in
push
and
cld
lahf
in
mov
mov
sub
pushf
jnp
lahf
test
lahf
xor
mov
mov
call
(bad)
retf
pop
adc
inc
mov
leave
je
pop
jmp
mov
mov
(bad)
jp
dec
push
pop
and
std
lods
push
addr16
sbb
clc
pop
scas
ins
xchg
xchg
sbb
aaa
adc
pusha
movs
jp
xchg
xlat
xchg
and
shl
ins
jmp
(bad)
aam
mov
sbb
push
pop
pop
xor
stos
dec
imul
jne
rcl
retf
mov
jp
fsubr
std
sbb
sbb
mov
push
test
cmp
outs
push
and
nop
into
xor
add
shl
cmc
inc
xor
pop
fldenv
sub
pushf
cmps
mov
mov
cmps
jecxz
call
sbb
lods
push
push
adc
inc
sub
dec
and
icebp
(bad)
dec
jne
retf
jle
xor
out
dec
or
dec
jge
mov
xor
retf
lahf
sub
sbb
popf
jge
cmp
dec
lods
bound
xchg
mov
xor
popa
cmp
mov
push
ret
movs
mov
stos
cmp
jbe
out
pop
imul
xor
ds
jbe
ins
cmp
mov
das
push
pop
iret
cmc
call
pop
cdq
fldcw
mov
add
ffreep
adc
shl
cmp
pop
add
jne
jo
outs
out
cs
pmuludq
setns
or
inc
enter
inc
out
adc
ret
mov
add
jmp
ins
inc
sub
cmp
pop
scas
cmps
cmc
jo
adc
add
mov
sbb
fimul
push
cli
fldl2t
sar
xchg
aas
in
int
aas
ds
aaa
pop
imul
dec
mov
frstor
push
and
nop
in
sub
or
jbe
jnp
push
inc
pop
rcr
push
push
movs
loopne
jne
cmps
stos
scas
sti
bound
sub
sub
psrld
cli
mov
cwde
mov
outs
mov
or
sub
mov
cmp
jbe
out
or
pop
mov
dec
mov
pop
add
push
xchg
push
test
or
push
or
fild
daa
std
mov
out
(bad)
sbb
cmc
mov
stos
sub
std
mov
in
jb
fsubr
jg
sbb
and
imul
push
push
xchg
push
push
mov
sub
push
scas
aaa
sub
bound
retf
mov
ret
pop
imul
jmp
(bad)
sub
jb
sub
xchg
in
aam
jmp
jae
aaa
xchg
mov
movs
(bad)
sbb
sbb
jns
in
ret
cmp
sub
clc
mov
(bad)
int
or
jmp
mov
dec
rcr
daa
pop
(bad)
int3
call
xchg
cwde
jne
out
ins
push
aam
or
lock
cwde
int3
lods
and
add
sub
loop
sar
lock
mov
movs
data16
sti
out
sub
add
sar
mov
jl
daa
mov
push
jecxz
sub
push
pop
out
xchg
cmp
push
mov
mov
push
lods
iret
cwde
les
adc
xor
fstp
mov
loope
js
leave
add
jno
xchg
jg
cdq
or
inc
xor
enter
xchg
leave
add
add
push
inc
mov
xor
jo
data16
outs
out
jo
dec
mov
dec
xchg
xchg
pop
(bad)
sahf
mov
sub
sub
push
test
mov
leave
leave
push
rcr
push
mov
fisub
mov
cmps
ret
pop
iret
adc
(bad)
push
jnp
xlat
sbb
faddp
jns
pop
sti
sbb
xchg
je
js
push
push
(bad)
(bad)
sbb
out
imul
call
jecxz
push
adc
mov
(bad)
outs
pusha
lods
xchg
sbb
inc
in
cld
in
fiadd
push
cs
or
movs
mov
arpl
push
jmp
adc
(bad)
(bad)
cmps
mov
outs
xor
sub
cmc
jmp
cmps
loopne
dec
in
xchg
mov
mov
(bad)
call
out
jmp
push
or
jb
jno
movs
add
inc
inc
inc
and
enter
and
js
test
or
in
mov
in
sub
mov
repnz
dec
sub
dec
daa
push
(bad)
jp
xchg
jns
leave
xor
mov
sbb
adc
lock
and
pop
test
(bad)
and
aaa
cwde
cdq
or
shl
sub
(bad)
sti
push
adc
adc
adc
mov
jg
rcr
(bad)
pop
sbb
cdq
out
push
enter
and
add
hlt
movs
jmp
lea
cli
inc
jnp
stos
dec
adc
mov
jae
xor
repnz
xor
call
aas
and
pop
push
dec
jle
sbb
ret
repz
(bad)
or
in
cmp
shr
jle
shl
lds
imul
ds
mov
jne
pop
sub
lea
js
stos
shl
mov
adc
fistp
cli
outs
add
inc
sub
mov
shl
repz
and
test
mov
inc
stos
pop
hlt
mov
cmps
ja
daa
sti
clc
or
pop
jmp
fiadd
push
rol
inc
sbb
dec
inc
dec
dec
cmp
scas
jl
xchg
ret
mov
in
xor
xor
sub
jnp
push
fcomp
adc
ret
sub
cld
and
push
xchg
jg
fnstsw
jne
mov
dec
ins
mov
xor
cmp
(bad)
out
cmps
push
imul
(bad)
cmp
test
adc
and
cwde
out
xor
aaa
mov
ja
push
xchg
pusha
push
jle
jns
push
in
add
pop
sbb
sbb
inc
inc
push
and
cdq
stos
adc
cmps
xchg
pop
and
or
pop
outs
sub
jge
cmp
push
inc
inc
std
and
loope
xchg
push
popf
jo
adc
cmp
and
lods
sub
lds
cmp
inc
cmp
clc
ss
sar
jne
mov
and
test
add
or
in
or
push
jbe
cmp
sahf
clc
popa
push
call
jmp
into
push
ret
call
mov
int
jae
aaa
(bad)
jmp
cs
jle
imul
shl
not
in
pushf
into
sub
adc
add
cmp
imul
out
mov
loop
mov
dec
out
pop
mov
xor
stos
xchg
lods
imul
inc
lds
sbb
jge
scas
add
mov
jnp
cld
adc
jno
jl
pop
jb
scas
inc
aam
aad
jbe
jp
mov
mov
jmp
int
mov
stos
sub
dec
call
xor
dec
mov
or
dec
enter
mov
add
xor
loopne
push
movs
gs
lock
add
(bad)
cmp
add
xchg
rol
je
inc
adc
aam
fisub
outs
enter
mov
loopne
jg
pop
ins
and
leave
jmp
std
lods
neg
jnp
outs
rcr
(bad)
mov
loopne
shl
test
es
pop
mov
pusha
mov
dec
(bad)
aas
aam
push
not
adc
rcl
or
mov
ret
cmp
pushf
pop
jmp
std
in
call
xor
clc
rcr
push
int3
inc
nop
push
pop
inc
add
dec
rcl
scas
pop
jle
inc
xchg
mov
imul
sti
out
xchg
xchg
cmp
lahf
arpl
add
add
out
xchg
dec
cmp
shl
mov
stc
xchg
fcomp
rol
mov
jge
into
aaa
call
call
and
dec
push
push
(bad)
rol
mov
div
fld
das
xchg
fimul
push
cmp
mov
popf
in
adc
or
xchg
ins
test
call
sbb
mov
add
mov
jb
mov
and
dec
pop
mov
in
mov
mov
(bad)
retf
outs
(bad)
in
ins
jge
push
fsubp
cmp
mov
jmp
aaa
mov
hlt
xchg
mov
out
pop
sbb
dec
jno
fist
xchg
inc
cmp
jmp
adc
and
rcl
or
arpl
xor
sub
mov
adc
fdiv
aas
dec
jae
fsubr
pop
cmps
mov
and
pop
inc
adc
xchg
or
pusha
mov
fimul
pop
jo
pop
and
dec
cs
hlt
std
jnp
pusha
cli
loopne
push
lods
data16
(bad)
fs
jle
sahf
and
jno
push
sub
cmp
sub
gs
jp
ret
mov
cwde
push
ret
sbb
xchg
or
jmp
push
and
xchg
test
xor
mov
imul
jmp
ds
push
fcomp
mov
mov
push
push
(bad)
(bad)
jmp
sar
cmp
stc
add
mov
or
shr
fcmovbe
mul
in
test
fild
mov
mov
xor
adc
aad
push
inc
or
xchg
cmp
hlt
les
xchg
out
cmp
cmps
push
loopne
cmp
ret
xchg
cs
jne
rcl
push
fisubr
loop
inc
mov
add
push
out
mov
in
xor
ret
mov
or
cmps
or
and
(bad)
jns
iret
sub
ins
test
xchg
and
xchg
out
push
rol
push
cmps
test
cmps
pop
lods
arpl
sub
test
shl
fldenv
sbb
cmps
xor
cwde
cmp
inc
push
cmp
lods
mov
push
add
xchg
jmp
mov
sub
jecxz
ror
sahf
gs
xor
pop
xchg
sub
push
push
fs
in
jne
fld
sbb
mov
xchg
inc
mov
arpl
fsubr
add
out
test
cwde
ins
test
ins
pop
cmc
push
mov
mov
cmp
cwde
ins
repnz
call
push
test
jp
gs
xchg
dec
ja
jl
lock
in
fstp
lea
xchg
sub
rcr
stos
mov
mov
mov
fwait
pop
mov
jg
cmps
loope
cmp
fisubr
out
mul
mov
dec
jo
pop
out
mov
adc
bound
mov
xchg
mov
fst
jl
arpl
cmc
je
rol
test
(bad)
mov
xchg
mov
and
lahf
mov
sub
push
stos
jmp
jno
(bad)
xor
ret
and
sbb
dec
inc
sar
jmp
or
sub
add
jmp
sub
sti
or
add
shr
call
scas
retf
mov
sub
adc
jge
nop
(bad)
mov
cs
adc
arpl
hlt
sbb
cmps
lods
icebp
shr
(bad)
push
daa
add
les
clc
shl
mov
into
pop
adc
inc
pop
test
lea
inc
pusha
jb
push
jecxz
xlat
outs
pop
fild
in
mov
inc
or
dec
xchg
push
repz
sub
sub
or
mov
hlt
movs
cmp
dec
adc
fldpi
mov
mov
lds
or
(bad)
mov
xor
dec
popa
xchg
xor
(bad)
shr
mov
aaa
ins
aad
fidiv
mov
fcomp
jl
pop
stos
call
dec
pop
mov
stos
cmp
dec
jo
cmp
fwait
sbb
dec
xchg
xchg
jnp
inc
mov
inc
fimul
jnp
xor
adc
and
mov
shr
fcom
in
sbb
mov
into
xor
sahf
cmp
dec
je
adc
mov
int
sbb
pusha
push
add
xor
xchg
mov
pop
xor
adc
repnz
jge
mov
sbb
data16
push
mov
lock
cmp
inc
ss
cwde
pop
pop
pop
xchg
mov
ror
cmc
dec
ret
retf
scas
dec
ins
or
add
in
push
mov
and
adc
mov
jmp
hlt
movs
mov
adc
inc
cmp
push
jb
outs
inc
into
shl
movs
mov
retf
repz
jmp
aam
(bad)
push
ins
arpl
(bad)
dec
retf
sub
xchg
add
adc
mov
or
leave
int3
mov
shrd
mov
leave
cmp
add
push
stos
xor
sti
dec
mov
push
fdivr
add
and
mov
and
sahf
mov
test
in
dec
aad
dec
sti
test
xor
sbb
(bad)
jmp
mov
jmp
or
mov
fisubr
or
mov
jb
lea
repz
xor
sbb
adc
dec
leave
push
inc
xor
xchg
xchg
jae
mov
mul
out
cwde
mov
dec
push
(bad)
clc
cmps
pusha
mov
mov
fstp
mov
call
(bad)
sahf
sbb
aad
scas
sub
or
xchg
sbb
mov
cwde
es
add
imul
cmp
mov
in
sbb
fld
add
fdivr
scas
das
or
btr
mov
sub
das
inc
jb
add
push
and
and
xchg
xchg
scas
mov
jno
cmp
jl
in
daa
xor
jmp
ficomp
icebp
test
mov
or
pop
xchg
mov
(bad)
lea
xor
jmp
ret
mov
pop
push
movs
sar
mov
mov
sub
mov
xchg
add
inc
test
test
cmp
dec
mov
hlt
jmp
push
jae
cmc
mov
bound
push
out
aaa
(bad)
repnz
pop
enter
cwde
les
push
mov
sub
mov
fwait
bswap
jg
sbb
(bad)
fcomp
call
addr16
mov
add
sbb
sbb
or
mov
adc
cmp
stos
std
jne
mov
(bad)
je
xlat
in
add
loop
add
les
gs
jp
add
sub
retf
mov
dec
in
fimul
test
mov
adc
or
enter
push
sub
rol
mov
div
xor
pop
js
ficom
cdq
mov
or
dec
popf
scas
mov
xchg
sub
mov
inc
ret
movs
mov
bound
enter
inc
js
sbb
cmp
es
test
ficomp
sub
cmps
xor
and
mov
xchg
push
es
sub
sar
dec
xor
out
or
pop
cmp
mov
into
loop
sbb
push
jae
jnp
out
inc
cmp
sbb
ror
xchg
sar
clc
mov
lea
xor
leave
dec
test
cmp
inc
mov
aad
pop
idiv
xor
inc
push
in
fstp
hlt
in
lods
pushf
dec
repz
daa
js
mov
adc
sti
pusha
xor
cmps
pop
leave
cmp
ret
fsubr
push
int3
div
cmps
mov
or
ss
cmp
fild
push
in
inc
pop
jle
jg
pop
test
int
adc
push
scas
mov
test
mov
and
pop
mov
call
imul
call
out
adc
ss
pop
mov
imul
call
and
les
cdq
cs
adc
ins
add
ret
sbb
inc
push
mov
jecxz
jmp
scas
pop
push
(bad)
sub
popf
mov
loope
ret
leave
iret
mov
movs
rol
xchg
jnp
nop
jns
inc
jge
and
ret
lds
jb
das
rol
pop
pop
adc
xlat
fild
jno
sbb
int3
pop
mov
push
les
test
pop
push
cmc
fcmovb
jl
repnz
or
xor
out
xlat
jp
jmp
jb
out
xchg
jg
cbw
xchg
jle
mul
addr16
movs
imul
loope
mov
out
xor
dec
ss
and
loop
sub
sub
ret
dec
sub
mov
les
and
ret
xchg
arpl
jae
outs
call
lds
cli
rcl
cmp
fcomp
mov
add
add
push
and
iret
mov
dec
aad
pushf
gs
dec
and
das
and
jo
aas
adc
clc
mov
xchg
enter
into
adc
add
cmp
adc
punpckhdq
inc
jg
outs
push
push
adc
es
(bad)
xor
cmp
int3
jg
inc
rcl
fwait
xor
inc
inc
data16
mov
das
mov
pop
(bad)
and
cmp
clc
fimul
jb
aad
mov
adc
mov
hlt
pminsw
and
mov
push
sub
arpl
jmp
fnstcw
hlt
mov
call
iret
or
pop
mov
fs
fist
enter
xor
sub
fild
lods
sbb
mov
repnz
(bad)
mov
xor
jge
push
xor
and
and
adc
cmc
cmp
inc
cs
mov
cmps
lds
mov
cmp
add
push
sbb
fcomp
sub
aad
dec
jl
inc
ds
mov
mov
retf
es
mov
loope
in
arpl
pop
hlt
div
into
push
scas
xor
xchg
mov
push
mov
mov
push
jb
cmp
dec
jle
jne
pop
adc
dec
mov
add
inc
out
pop
cmp
mov
rep
push
mov
fidiv
pop
cmc
test
sub
call
or
ror
dec
mov
sub
inc
pop
inc
xor
adc
loopne
mov
scas
mov
imul
mov
dec
cmps
mov
cmp
scas
clc
(bad)
(bad)
movs
and
aaa
mov
mov
aam
or
icebp
dec
push
pop
and
ret
jo
test
xchg
push
arpl
loopne
daa
sar
pusha
data16
repz
dec
imul
sub
xchg
icebp
int3
sbb
pop
jbe
ins
adc
jl
add
mov
les
test
test
icebp
xchg
jns
ret
and
xor
adc
cmp
cmp
mov
stos
in
or
cli
mov
out
in
jecxz
add
mov
sub
adc
sbb
mov
sub
jo
push
cwde
cmp
das
out
clc
dec
push
mov
push
jle
sahf
pop
push
jnp
(bad)
in
loope
dec
mov
loop
and
xor
jp
out
ss
adc
nop
add
add
jg
rol
mov
add
mov
nop
lods
addr16
push
mov
adc
pop
xor
or
cmp
push
cli
pop
inc
les
call
push
arpl
pop
(bad)
and
push
sub
jns
(bad)
sti
repz
mov
and
xor
out
mov
sub
mov
inc
fsub
pushf
out
add
ds
jl
jne
xor
lods
mov
push
sbb
enter
retf
lahf
enter
push
ins
push
and
aad
inc
lds
shr
arpl
dec
call
bound
pop
mov
inc
adc
or
lods
shl
jmp
jge
mov
inc
push
pusha
lock
movups
jb
xchg
or
cmp
pop
cmc
out
pop
cmps
(bad)
add
popf
sbb
inc
fild
aam
jecxz
push
jg
jp
push
sub
hlt
imul
fld
push
int3
stos
aaa
cmps
test
dec
sub
stc
pop
(bad)
jmp
out
pop
ffree
leave
aad
mov
push
xchg
arpl
inc
mov
push
pop
sub
mov
pop
test
push
sbb
or
jp
sub
push
push
jae
sar
lock
ja
cmp
dec
ins
not
inc
and
retf
push
test
push
pop
sbb
mov
xlat
push
retf
retf
dec
push
mov
jo
xchg
sar
mov
dec
sub
sbb
jno
xor
test
jne
mov
cdq
ins
das
jl
jno
and
xor
sub
push
pop
stc
sub
addr16
jl
xor
lea
add
lea
or
inc
nop
aad
lods
adc
repz
push
nop
pusha
(bad)
jmp
out
cmps
nop
lods
jno
and
inc
mov
test
call
(bad)
jbe
add
dec
dec
cmc
imul
mov
ins
lahf
sti
test
popf
lea
and
aad
push
(bad)
rcr
arpl
mov
ss
sbb
push
jmp
mov
icebp
and
sub
out
iret
fs
fldenv
mov
std
push
test
xchg
mov
pusha
addr16
rol
inc
add
or
aas
adc
push
adc
aaa
std
jnp
push
fcomp
(bad)
mov
xchg
mov
xchg
or
(bad)
and
es
mov
jg
test
adc
test
inc
mov
and
cdq
xchg
out
or
fisubr
ins
jp
or
je
loope
stc
movs
sub
popf
jbe
in
mov
add
sub
xor
cli
jae
lock
inc
fst
jo
pop
ins
mov
and
das
ror
aaa
mov
sub
mov
out
in
mov
cmp
xchg
adc
imul
idiv
out
dec
xchg
sbb
add
sub
jo
mov
leave
cmp
shr
sub
and
icebp
adc
ret
cdq
xlat
push
adc
test
sub
lock
daa
add
jb
jb
sbb
pop
adc
cmp
dec
push
pop
movs
mov
int
bound
stos
xchg
inc
jecxz
mov
daa
int3
aam
cmp
lock
cld
retf
lds
mov
cs
jns
push
das
and
dec
lea
movs
mov
test
hlt
xor
cmp
lahf
inc
lea
rcl
cdq
adc
aas
std
or
jmp
mov
lea
mov
outs
shl
scas
mov
dec
inc
pop
or
and
mov
test
and
fwait
loope
xchg
aaa
test
hlt
dec
sbb
jnp
loopne
or
push
(bad)
cmps
ficomp
inc
fmul
mov
rol
or
nop
mov
cld
test
sbb
stos
xchg
push
fs
xchg
jae
mov
scas
xchg
inc
jmp
push
(bad)
cmp
jp
popf
and
call
inc
int3
call
fcmove
mov
out
sti
aas
(bad)
in
mov
clc
pop
fmul
jns
mov
ja
inc
push
out
lds
(bad)
push
mov
test
mov
out
mov
inc
mov
sbb
jecxz
xchg
sti
(bad)
loopne
fdivr
push
dec
ror
cmp
repz
xchg
inc
(bad)
jno
fmul
lahf
std
cmp
aam
and
push
aad
addr16
and
fs
rcr
in
stc
aaa
shl
push
rcl
and
cmp
jno
cmp
cmps
cmp
outs
mov
pusha
test
ss
stos
nop
cs
or
adc
inc
icebp
push
mov
sub
push
xchg
out
add
xor
xchg
sub
and
leave
retf
in
sbb
test
int
cs
pop
ds
mov
jg
sub
clc
sar
and
jno
xor
push
fidivr
das
daa
cmp
sbb
(bad)
mov
mov
(bad)
mov
cmp
or
mov
out
loope
sbb
stc
lods
mov
pop
mul
mov
fisub
mov
loopne
mov
repnz
push
or
sub
ds
repz
(bad)
mov
xchg
mov
adc
mov
mov
pop
inc
leave
mov
xlat
fisubr
mov
ficom
div
jae
ins
stos
and
pop
pop
frstor
dec
lds
xor
jns
into
mov
in
pop
call
scas
sahf
pop
inc
adc
sbb
push
mov
mov
xchg
sbb
adc
data16
and
sar
sub
imul
pushf
jo
fimul
dec
out
jae
stos
test
pop
mov
iret
(bad)
or
out
bound
xchg
pushf
repz
jg
ins
outs
div
cdq
xchg
aaa
and
mov
jl
jmp
push
cmc
(bad)
fadd
jb
pop
test
test
(bad)
icebp
inc
ret
xor
ret
mov
das
mul
adc
aas
mov
mov
les
cmps
scas
sbb
add
enter
adc
mov
push
dec
or
sub
mov
outs
shl
adc
jmp
pop
dec
data16
sub
add
aam
mov
into
xlat
cmps
jmp
shl
jae
retf
xor
adc
mov
jg
int
push
lods
lods
stos
mov
rcr
fnstenv
push
mov
iret
sbb
fdivr
ret
repz
cdq
retf
sar
rcr
or
adc
xor
xchg
cmps
mov
adc
ret
pop
pop
aam
inc
out
gs
adc
jle
cmps
sbb
cmp
mov
push
or
lock
xchg
loope
jbe
dec
lahf
mov
jmp
out
push
mov
jmp
pusha
pusha
out
jmp
xchg
jp
mov
ror
mov
enter
test
mov
jns
xchg
xor
(bad)
pop
inc
jnp
mov
fsub
mov
and
cmc
sbb
imul
or
inc
pop
jg
add
ins
std
push
loopne
mov
je
xchg
adc
sbb
sub
cmps
and
jbe
jbe
in
and
inc
ss
(bad)
int3
mov
in
sar
push
sub
pop
shl
sub
mul
sub
or
loopne
arpl
xchg
pop
push
in
std
popf
repz
lods
(bad)
imul
inc
sbb
sub
cmps
out
sahf
repz
lock
mov
daa
sbb
pop
icebp
out
(bad)
pop
dec
arpl
lea
into
repz
xor
cmp
jmp
ds
or
ds
inc
jne
call
mov
sub
cmc
push
jnp
fld
xor
mov
push
sub
outs
push
arpl
ins
gs
aas
stos
fs
fwait
push
int
aam
or
sbb
mov
in
push
lds
ret
jne
iret
fdivr
ret
adc
stos
out
pop
cmp
stc
retf
movs
or
adc
mov
and
lea
inc
cdq
add
cdq
movq
cld
cmp
jbe
or
(bad)
adc
sub
dec
outs
js
adc
out
out
ja
push
aad
mov
mov
popf
sbb
sub
aaa
pusha
aaa
mov
ret
mov
adc
cs
jo
lods
out
cmp
(bad)
mov
test
jge
or
xchg
jl
mov
call
push
fistp
enter
lock
xlat
jb
lods
dec
cmc
pop
ins
std
xchg
xchg
mov
mov
inc
jo
push
mov
(bad)
out
mov
int
add
dec
cmps
push
ins
xor
fs
mov
mov
mov
inc
stos
cld
pop
je
xchg
fisttp
sub
xchg
clc
adc
sub
retf
out
inc
or
mov
fcomp
ins
add
xchg
sbb
test
stos
dec
fimul
mov
leave
hlt
(bad)
call
or
push
xchg
push
xchg
or
cmp
arpl
ret
jno
cmp
fist
xchg
adc
ja
pusha
outs
jns
mov
inc
and
jne
add
dec
sub
adc
data16
mov
rcl
sub
cmc
test
or
(bad)
scas
sbb
cmp
jle
jge
push
cmc
repnz
mov
xor
pusha
and
add
xchg
push
movs
cmp
lock
and
and
aaa
pop
mov
pop
push
cwde
push
and
mov
push
push
sub
leave
retf
mov
jle
dec
(bad)
and
xor
lds
jl
pop
push
cmps
adc
xchg
fadd
sahf
and
mov
xor
mov
pop
test
loop
arpl
out
fwait
ins
call
mov
sub
retf
pusha
push
xor
fs
xor
call
cmp
jns
mov
pop
shl
sbb
hlt
mov
jecxz
xor
push
rcr
jbe
inc
push
and
xchg
pop
xor
(bad)
mov
loop
mov
retf
rep
out
or
pushf
sub
mov
out
dec
data16
addr16
pop
cli
sub
inc
add
push
popa
push
and
popf
push
(bad)
imul
fiadd
and
dec
pop
std
aas
xor
adc
test
idiv
adc
sbb
fndisi(8087
inc
or
vmovapd
cmp
adc
xchg
outs
inc
push
dec
lds
out
and
lods
jnp
mov
repz
sar
std
lods
dec
ret
popa
pusha
add
push
and
mov
out
sub
ja
sub
aas
sbb
sub
xchg
jmp
jo
adc
pop
test
call
adc
sti
sahf
data16
sbb
dec
pop
test
scas
mov
cmp
fadd
repnz
jbe
std
jmp
clc
imul
push
int3
shl
jne
lods
sbb
ja
push
fidivr
mov
jp
ret
movs
les
mov
dec
mov
xlat
push
ret
mov
xchg
test
cmps
ror
mov
mov
mov
retf
das
mov
in
test
ror
or
repz
mov
stc
cmovns
mov
stos
or
outs
ret
jp
cvttps2pi
and
jg
push
push
nop
clc
aad
xor
addr16
or
clc
jle
or
xchg
jb
loope
out
jg
sbb
aad
sub
mov
xchg
mov
xor
dec
cmp
cmp
fiadd
pop
mov
jno
and
std
in
jge
stc
test
(bad)
ja
jae
inc
mul
xchg
jnp
pop
(bad)
popa
les
inc
add
sahf
pusha
sub
mov
mov
push
ins
test
iret
ret
xor
gs
addr16
and
or
gs
imul
dec
inc
fwait
call
mov
shl
scas
add
test
and
shr
loopne
add
jle
data16
fdiv
outs
cmc
or
cdq
jp
inc
pop
fnsave
or
test
popa
loope
xor
inc
mov
jne
sti
mov
pop
cmps
xor
jmp
jmp
push
stos
data16
imul
cmps
imul
pop
cld
sub
test
and
mov
mov
jmp
xchg
adc
shr
sbb
ins
xchg
dec
mov
xlat
mov
xor
xor
fsubr
push
cmp
adc
shr
mov
outs
xchg
neg
mov
pop
out
mov
ins
mov
loopne
aad
and
repz
inc
mov
and
and
sahf
xor
ss
jp
out
push
mov
push
std
call
push
and
fadd
nop
arpl
popa
loope
sbb
xor
mov
pop
ret
lods
cmp
mov
xchg
cwde
add
daa
pop
inc
sub
pop
jno
call
dec
cmp
inc
push
push
icebp
xchg
mov
pop
js
out
ins
jne
and
adc
or
loopne
xchg
aam
dec
mov
repz
mov
sbb
jnp
ja
mov
in
pop
retf
inc
loope
adc
sub
mov
sbb
cli
mov
and
mov
mov
and
add
pop
rcl
push
jmp
sub
mov
mov
dec
stos
dec
sub
sub
adc
popf
sub
push
mov
jmp
mov
stc
mov
xor
dec
rol
inc
inc
call
or
shr
int
mov
in
cmps
xor
jmp
pop
lahf
outs
imul
not
jmp
(bad)
scas
lds
stos
int
mov
lods
inc
movs
xor
rcr
mov
mov
fiadd
push
and
sahf
xchg
mov
outs
dec
jmp
xchg
mov
add
adc
xchg
pusha
sbb
cli
adc
mov
inc
adc
dec
mov
pop
sub
mov
test
push
sub
mov
mov
outs
inc
sub
push
push
or
cmp
pop
or
rep
sub
lea
scas
gs
daa
pop
lods
addr16
or
dec
inc
jae
adc
call
jnp
cmp
mov
js
imul
add
pushf
(bad)
sub
ds
std
jecxz
movs
fistp
xor
mov
js
inc
nop
arpl
xor
data16
mov
cmp
inc
adc
imul
inc
daa
imul
je
adc
in
aaa
cs
enter
(bad)
in
rcr
add
sbb
shr
inc
jmp
jmp
push
xchg
adc
ret
cmp
dec
mov
outs
cld
dec
data16
scas
adc
mov
jns
repnz
arpl
xchg
arpl
test
cmp
ss
outs
clc
jno
mov
mov
(bad)
je
adc
jl
dec
pusha
imul
leave
inc
je
mov
(bad)
icebp
cs
mov
jmp
in
ja
scas
mov
and
xchg
sbb
loope
into
(bad)
in
and
daa
stos
out
and
xlat
ss
ss
and
mov
add
inc
cmp
fild
ret
jmp
jecxz
push
lods
out
movs
ss
adc
xor
rcr
mov
mov
rol
test
xor
pushf
call
mov
dec
inc
hlt
adc
stos
into
lods
cs
movs
push
and
imul
inc
std
rcr
in
pop
mov
inc
inc
pop
mov
mov
popf
sub
dec
inc
sar
lahf
pmulhw
jnp
sbb
sbb
or
dec
xor
sub
je
xchg
add
imul
mov
pushf
outs
nop
icebp
pop
xchg
imul
fstp
ror
lds
aam
fs
cmp
inc
sub
or
pop
and
sub
fild
or
scas
data16
paddd
fstp
loopne
jp
mov
or
(bad)
or
into
push
out
mov
and
stc
ror
xor
xor
outs
iret
popa
dec
leave
xchg
add
pop
les
nop
push
leave
clc
fstp
call
sub
cmp
test
xor
dec
call
mov
jno
fs
dec
xor
cmc
(bad)
mov
in
or
xchg
imul
cmp
cmc
dec
out
pusha
fwait
retf
add
dec
ins
mov
mov
xor
inc
sub
jo
out
pop
mov
sub
inc
or
pop
push
jle
loope
mov
add
ins
adc
xchg
mov
push
adc
cmp
test
ins
outs
xchg
into
cvtpi2ps
out
xlat
scas
lahf
push
adc
sub
sbb
mov
test
hlt
test
add
inc
or
(bad)
shl
or
idiv
cwde
add
cmps
clc
fst
push
cmp
outs
dec
sar
shl
clc
call
lock
popa
test
fild
add
lock
imul
cli
mov
mov
mov
test
xlat
inc
repnz
mov
push
je
jl
scas
mov
iret
xor
clc
ins
cmps
pop
adc
das
fwait
jb
dec
push
mov
jle
lods
jle
sbb
sbb
es
dec
(bad)
sbb
cld
and
popf
xor
xchg
and
jecxz
mov
pop
in
shr
mov
adc
push
out
arpl
cmp
je
shl
xchg
cs
out
jge
pop
cld
(bad)
mov
cld
adc
mov
adc
ror
or
scas
loope
push
push
pop
xor
xchg
and
add
aam
sub
pop
daa
xor
jl
pop
and
out
out
and
push
sbb
xor
and
pop
xchg
mov
jp
mov
jmp
jg
cmp
mov
nop
(bad)
les
(bad)
and
pop
pop
jmp
in
adc
pop
sub
cwde
fidivr
popa
sti
sub
dec
xchg
pusha
and
enter
sbb
enter
adc
mov
inc
jns
pop
out
pop
enter
xchg
test
xchg
sub
jp
ja
or
add
stos
adc
xlat
jnp
push
adc
or
mov
jo
inc
imul
repnz
js
movs
mov
pop
fld
add
int3
jno
lahf
leave
cmp
or
rcl
sbb
fistp
aam
add
or
sti
add
aaa
push
jnp
jno
and
mov
(bad)
cmp
xlat
cmp
out
jl
xlat
pop
sbb
jno
push
lods
test
fs
int
aas
inc
loopne
add
jae
lahf
push
sets
dec
ins
xor
pushf
adc
fimul
inc
outs
sub
jae
rol
and
ja
inc
pop
es
leave
leave
or
sbb
add
push
sub
imul
or
sub
push
push
js
in
or
dec
addr16
call
cmps
or
(bad)
icebp
pop
int
inc
add
mov
add
enter
or
ret
jne
adc
enter
cmp
cmps
inc
sbb
cmps
pop
inc
sar
outs
xchg
inc
mov
inc
into
in
in
retf
mov
jae
ja
ret
add
cmp
cli
inc
push
dec
mov
test
mov
jb
or
in
adc
push
lods
push
push
push
mov
and
daa
arpl
shl
imul
jmp
mov
clc
movs
push
pop
repz
push
fwait
dec
fld
inc
(bad)
cmp
fucom
and
jo
fild
jns
in
xlat
mov
in
inc
adc
sub
mov
data16
(bad)
dec
popf
push
and
lds
cmp
mov
sbb
cmc
ja
sar
jne
xchg
mov
jno
inc
lods
retf
push
mov
lds
push
aaa
sub
fiadd
add
sub
add
cmp
jno
fiadd
mov
push
mov
xor
ror
bound
inc
jle
jno
xchg
cdq
std
pop
les
(bad)
pop
sbb
mov
cld
mov
sub
push
sub
fsubr
loope
dec
sub
pop
shl
in
rcl
(bad)
jmp
xchg
jnp
mov
cmp
scas
imul
adc
xor
div
adc
int
jmp
fild
push
in
jge
imul
xchg
retf
adc
add
pop
jmp
adc
popa
sbb
test
pop
jecxz
aad
or
(bad)
in
aaa
imul
push
mov
sbb
xchg
shl
sbb
iret
lock
dec
dec
jb
mov
stos
dec
out
aas
ins
bound
ret
mov
pop
or
rcr
lea
add
mov
retf
sahf
sbb
dec
out
(bad)
hlt
cwde
sbb
or
push
out
popa
inc
es
pop
sar
test
sub
lods
aam
lea
jne
sbb
push
fldenv
lea
sub
jnp
adc
(bad)
int3
or
mov
mov
repnz
call
sbb
cdq
pop
retf
jnp
inc
ja
pop
jp
xchg
sti
jns
aad
rcl
jae
rol
test
pop
cmp
jmp
leave
cmp
div
hlt
(bad)
push
cmc
pop
cli
push
xchg
add
sbb
(bad)
jmp
mov
add
fsub
ret
sbb
int
jne
ds
cmc
bound
(bad)
xchg
jae
(bad)
dec
pop
mov
or
out
js
addr16
test
gs
adc
add
dec
xchg
cmp
pop
(bad)
js
sahf
in
cmp
or
adc
adc
mov
(bad)
and
outs
cdq
int
pop
jmp
(bad)
adc
jns
hlt
retf
rol
mov
sahf
pop
xor
pop
fcmovne
fstp
fnstsw
jnp
mov
sub
sub
xchg
(bad)
push
aaa
xor
out
xchg
inc
cmp
(bad)
jle
cs
in
mov
clc
jo
leave
xchg
mov
enter
rol
push
loopne
out
jmp
(bad)
retf
lods
lods
xor
pusha
sti
cmp
sbb
sub
lahf
push
pop
xor
stc
and
push
into
jge
les
cli
jno
mov
ret
ret
imul
inc
test
and
bound
gs
movs
xchg
jp
icebp
cli
mov
sub
mov
icebp
xchg
xchg
push
mov
cmp
dec
loopne
jmp
setno
sub
aas
fldcw
cmp
push
mov
fistp
xor
mov
daa
jns
mov
in
stos
mov
or
cld
jp
test
or
es
sub
popa
mov
loopne
jl
out
xlat
push
test
add
sub
dec
pop
xor
jnp
nop
mov
test
dec
aas
popf
outs
xor
fs
arpl
lds
lahf
and
in
inc
aaa
xor
mov
xchg
xor
es
(bad)
jp
movs
fs
dec
nop
sbb
mov
cmp
inc
jo
fwait
push
arpl
sbb
aam
cmc
(bad)
adc
or
and
idiv
gs
jecxz
cmc
pop
dec
test
rol
loop
fdiv
movs
xor
jbe
xor
cmps
fcmovnb
in
call
fnstenv
cmp
popf
lods
nop
test
adc
loopne
out
jbe
pop
mov
xor
sbb
arpl
cwde
dec
inc
pop
fiadd
jecxz
inc
dec
out
jl
out
sbb
lds
loop
pusha
sbb
icebp
sub
sbb
or
leave
mov
out
test
and
xchg
push
cli
push
cmp
push
sbb
das
popf
aas
lods
push
sbb
add
stos
adc
pop
xchg
shl
cld
cwde
call
sub
(bad)
data16
fsubr
dec
or
add
pop
mov
das
loope
cmp
nop
sbb
mov
call
push
fs
cmp
sub
cmp
in
xlat
or
xchg
bound
and
mov
xor
inc
fstp
add
push
dec
adc
xor
mov
xchg
pop
popf
jns
mov
jl
lods
popf
or
mov
scas
dec
cmc
fs
repnz
not
mov
mov
jne
out
pusha
pop
inc
lea
fwait
jle
ins
cmp
pop
sub
fstp
sbb
test
dec
adc
add
rol
dec
and
pop
pusha
mov
mov
mov
fcom
and
test
jl
adc
mov
test
dec
(bad)
or
push
ds
dec
je
hlt
mov
jg
add
or
lods
imul
inc
jo
inc
sbb
in
fdiv
mov
maxps
pop
movs
mov
sbb
pop
leave
pusha
shr
adc
aam
cmp
sub
sub
dec
movs
aad
neg
les
mov
add
movs
xor
sbb
fimul
jno
cmp
xchg
sub
mov
jp
es
js
and
mov
in
sub
jno
(bad)
retf
hlt
cwde
fcomp
cs
xor
jno
mov
retf
dec
retf
mov
in
inc
leave
jo
push
test
neg
dec
mov
push
adc
jge
adc
jg
cmc
push
add
iret
mov
(bad)
or
fcom
jmp
xchg
dec
shr
test
jne
add
mov
inc
and
or
adc
jecxz
sbb
imul
sti
loope
fimul
and
pop
cmps
repz
cmp
lahf
out
movs
add
popa
sar
rcr
js
mov
jbe
leave
cmp
cli
or
mov
jl
imul
push
xor
push
push
jge
xchg
mov
outs
cmps
xchg
adc
pop
add
sub
lods
push
(bad)
inc
sti
ret
xchg
and
scas
rol
cdq
cmc
fld
not
call
and
or
stos
popf
scas
lahf
pop
xchg
arpl
mov
fbld
jnp
adc
add
out
mov
js
xchg
repz
dec
test
(bad)
icebp
arpl
sub
inc
cmp
sbb
imul
sub
aam
scas
loopne
loopne
xchg
jne
sub
cli
mov
bound
mov
mov
or
cmc
mov
mov
in
in
adc
inc
cmp
cmp
inc
or
call
pop
sub
outs
es
rol
in
adc
out
lock
pop
pop
int3
ins
pusha
pusha
xchg
push
int3
adc
sbb
cmc
mov
lods
cmc
or
pop
cli
push
movs
iret
cwde
fadd
adc
push
nop
or
add
xchg
popa
sbb
data16
jo
sti
jecxz
jmp
aad
inc
pop
xchg
pop
rcr
inc
xchg
push
cs
popf
xor
cmc
cs
jmp
pop
and
jae
xchg
aam
cli
cmps
test
cmp
fidivr
xchg
or
fld
mov
sbb
arpl
out
outs
(bad)
push
sub
pop
adc
cld
int
adc
lock
jmp
mov
or
fld
jne
sub
add
adc
loop
fdiv
add
loop
inc
push
(bad)
mov
xor
dec
jecxz
mov
mov
mov
push
push
mov
push
scas
(bad)
nop
retf
fwait
cmp
cwde
push
call
lea
sbb
int3
sub
(bad)
shl
xor
in
push
cmp
jne
sbb
jl
cs
pusha
and
retf
aam
inc
in
into
pop
mov
mov
mov
fidivr
stos
inc
sar
pop
sub
call
(bad)
sti
test
mov
mov
mov
or
adc
sti
push
mov
jg
outs
pop
dec
stc
xchg
mov
add
push
or
jp
pop
cmp
fcomp
jmp
inc
pop
dec
push
jb
stc
cmp
push
add
push
push
pop
mov
xchg
jno
or
test
test
inc
dec
dec
xor
cmps
hlt
pop
or
mov
in
push
adc
ret
ret
mov
cmp
pop
leave
sbb
(bad)
sub
or
and
mov
mov
pop
mov
mov
sub
sbb
dec
mov
mov
pop
das
rol
aad
inc
push
ror
movs
sub
cmp
in
movs
out
xor
cmp
mov
call
cli
js
icebp
pop
push
int3
mov
bound
adc
repz
lds
or
inc
and
dec
and
test
dec
lock
mov
mov
dec
mov
adc
xchg
push
leave
fisubr
mov
test
jmp
adc
xchg
(bad)
cmp
bound
cmps
fisubr
bound
and
std
rcr
or
outs
mov
mov
pop
scas
jnp
daa
push
test
push
mov
push
push
call
cmps
push
push
push
add
xor
or
pop
nop
iret
sar
adc
mov
sbb
or
sub
jbe
stc
xlat
movs
pop
or
lock
ror
xchg
jge
rcr
fistp
repnz
sub
das
inc
push
mov
test
mov
adc
rcr
(bad)
mov
lods
sbb
and
inc
mov
in
sbb
outs
pop
push
out
jecxz
fstp
jge
stos
mov
fwait
movs
push
je
xor
imul
add
das
jne
in
movs
mov
enter
adc
jbe
add
jae
mov
push
xchg
mov
fbld
or
xchg
add
sbb
xchg
cmp
movs
cmp
push
mov
mov
dec
pop
das
adc
xchg
les
cmc
sahf
clc
cmp
daa
push
sbb
mov
xchg
and
sub
jne
mov
shl
mov
dec
test
inc
test
push
ret
aam
sbb
pop
sub
test
xchg
stc
out
push
loopne
xacquire
retf
cmpxchg
jae
stc
ja
mov
mov
cli
ss
aad
adc
sbb
and
movs
fbstp
pop
xor
jno
ror
scas
push
push
pop
aad
sbb
and
pop
out
mov
mov
and
jae
aas
adc
cdq
jmp
mov
mov
dec
ja
pop
jbe
popf
bnd
ins
stos
cdq
lods
fistp
lods
or
push
xchg
and
mov
jl
mov
xchg
js
fxch
xchg
inc
push
cwde
cmp
div
push
dec
dec
adc
ins
cmp
adc
mov
dec
push
ja
push
je
add
inc
sbb
adc
repnz
cli
cmp
mov
or
pop
fsub
inc
inc
adc
push
cmp
cmp
push
cmc
and
sbb
pause
movs
pushf
pop
sbb
fs
jb
outs
gs
push
into
out
push
dec
int3
sub
lock
movs
add
jmp
retf
or
mov
je
jecxz
pop
adc
cmp
xor
sti
loope
pop
test
mov
inc
lods
xchg
inc
ret
sbb
(bad)
adc
push
pop
addr16
iret
dec
jle
fisubr
pushf
in
out
mov
in
push
int
pop
hlt
or
sbb
lods
or
or
inc
pop
rol
pusha
fisttp
cdq
add
int
sub
fiadd
mov
xchg
ret
jecxz
mov
jnp
sbb
test
pop
xchg
mov
adc
mov
xchg
pop
js
fcomip
retf
aaa
sub
sub
jb
mov
inc
mov
(bad)
xor
add
cwde
aad
dec
lods
test
popf
jbe
mov
loop
lahf
mov
scas
das
inc
int3
fs
dec
mov
jecxz
push
test
jae
or
aaa
cli
aam
cmp
lock
jne
(bad)
in
push
(bad)
push
mov
ja
jmp
sbb
in
mov
and
fisubr
mov
jb
pop
shl
sub
mov
lock
or
retf
jb
mov
xor
mov
idiv
int
cmp
add
push
les
push
dec
std
add
push
push
and
sbb
sub
es
mov
shl
outs
push
adc
mov
lods
sub
pop
mov
or
add
pop
cmp
sti
dec
popf
xchg
fdiv
sub
jo
adc
lods
and
and
and
dec
jl
enter
adc
and
repz
shl
add
and
mov
adc
in
push
shl
fstp
adc
sub
clc
or
sti
es
jo
adc
dec
push
mov
xchg
pop
xor
int
push
cmp
inc
call
mov
sub
mov
popa
pop
jo
or
inc
sbb
ins
or
fs
fist
push
push
cmp
mov
cmp
mov
pop
pop
scas
cli
mov
in
fld
mov
dec
sti
sbb
scas
ds
stc
mov
dec
add
cwde
ss
jno
(bad)
pop
mov
fisttp
aas
popf
stos
ror
inc
xchg
in
out
mov
add
shl
xor
push
xchg
pop
or
dec
mov
imul
add
ret
jmp
rol
add
adc
in
movzx
dec
pop
pop
jl
cmp
retf
dec
les
loop
mov
pop
cwde
call
stc
shl
pop
icebp
enter
and
mov
fnclex
cs
xchg
mul
retf
mov
add
mov
cmp
sub
mov
lds
test
jp
ins
mov
mov
and
loope
(bad)
shl
fdiv
adc
push
aaa
dec
pop
xlat
mov
test
(bad)
clc
pop
nop
push
pusha
pop
xchg
pop
cwde
movs
popf
cmp
sbb
cmp
pop
repz
mov
pop
stc
push
in
adc
mov
enter
mov
mov
jne
mov
ret
fs
cmp
mov
lock
jecxz
(bad)
aad
pop
aaa
inc
es
(bad)
jmp
push
dec
push
sub
mov
bound
mov
xor
lahf
outs
mov
jmp
cmp
pop
xchg
and
xor
lahf
(bad)
div
sbb
and
retf
xor
adc
or
sbb
(bad)
imul
loope
pop
lea
fild
cmp
sub
es
push
pop
stos
stos
push
outs
push
scas
xchg
adc
sub
test
sahf
int3
push
mov
retf
sar
mov
sub
sbb
jo
in
xchg
mov
and
pusha
mov
mov
(bad)
jl
jg
jl
cli
mov
cmc
or
jae
stos
gs
and
leave
xor
mov
and
sbb
shr
pop
jmp
jmp
dec
jecxz
enter
sbb
pop
inc
data16
out
mov
imul
or
add
add
out
cli
mov
cmp
sbb
ins
pop
int3
pop
gs
scas
mov
aad
adc
ss
repz
mov
leave
aaa
in
dec
pop
or
les
push
mov
and
enter
cli
adc
xchg
(bad)
fimul
push
popa
mov
dec
aam
and
pop
pop
repnz
shl
scas
pop
mov
push
and
dec
in
fstp
and
adc
frstor
pop
outs
and
jns
or
push
mov
jnp
mov
xchg
jle
cmp
cdq
add
hlt
stc
iret
lods
sub
or
retf
push
mov
push
rcr
and
call
push
jo
xchg
and
pop
xchg
aas
jae
cmp
push
dec
mov
(bad)
dec
js
hlt
jl
(bad)
jbe
push
pop
mov
mov
ja
cdq
mov
sbb
fwait
stos
mov
push
ja
mov
stos
idiv
xor
adc
dec
cmp
nop
jl
sti
(bad)
sahf
sti
and
jb
mov
mov
mov
in
inc
cmp
fldcw
inc
xchg
dec
xlat
rcr
rcr
outs
cmp
pop
ror
cmp
ret
adc
icebp
pop
xchg
scas
in
out
loopne
cmps
mov
out
push
add
hlt
mov
sub
mov
jecxz
in
retf
mul
cli
fadd
aas
aaa
jo
cmp
sub
pushf
pop
add
pusha
mov
sar
jae
adc
jno
dec
gs
mov
fisttp
sub
sub
push
cmp
mov
fadd
icebp
xor
fxam
push
fstp
jle
out
pop
ficom
push
mov
mov
enter
add
push
sbb
lea
mov
out
pmulhuw
nop
xchg
fs
sbb
mov
push
bound
xchg
cmps
cmp
and
movs
sbb
inc
retf
je
jnp
cmc
mov
add
push
lods
pop
inc
push
dec
js
call
arpl
mov
xchg
add
mov
repnz
fisub
scas
jmp
xchg
mov
fild
inc
fs
call
push
push
in
xor
pop
shl
inc
cmp
lahf
mov
pusha
sbb
push
xor
cmc
pop
(bad)
xor
push
das
or
jae
mov
dec
mov
mov
mov
lea
mov
pushf
sahf
push
or
and
mov
sub
cld
sbb
int
cmps
dec
daa
into
adc
mov
mov
add
dec
add
nop
mov
jbe
outs
ins
call
mov
dec
popa
int3
xchg
lea
pop
lds
call
xor
test
daa
(bad)
sti
push
jo
xor
sub
sbb
scas
sub
jns
ss
and
adc
pop
je
xchg
outs
imul
mov
(bad)
pop
push
out
in
jo
mov
in
pop
shl
mul
mov
mov
sub
scas
stos
push
sbb
adc
jecxz
lods
jae
lock
cmp
add
std
pop
and
xor
std
mov
fs
sbb
cmp
mov
sub
stc
or
xor
or
push
es
mov
stos
aad
dec
ror
pop
inc
mov
cmp
mov
sbb
mov
mov
dec
test
dec
loopne
test
dec
jg
mov
dec
xor
and
gs
mov
xchg
(bad)
aam
push
inc
mov
add
sbb
pop
outs
popf
xor
lods
push
in
jle
sbb
int3
jmp
jge
dec
sbb
imul
shr
adc
sbb
jmp
pop
jle
fs
std
clc
xchg
mov
inc
imul
dec
and
inc
test
retf
mov
pop
or
jmp
imul
out
mov
cmp
cwde
test
int3
mov
sahf
mov
or
std
pop
fidivr
jg
ja
cs
xchg
and
imul
mov
pushf
icebp
scas
aas
sahf
dec
pop
inc
mov
mov
jae
repnz
adc
cli
push
sti
jno
cmp
push
pop
jecxz
pop
inc
xlat
inc
retf
clc
ins
mov
xor
add
mov
cmps
stos
add
and
test
jo
mov
xor
daa
cvttps2pi
cld
inc
int3
stc
dec
dec
pop
and
call
mov
into
sbb
repnz
ja
and
jbe
pop
pop
inc
out
adc
test
gs
outs
and
mov
leave
pop
sbb
lods
mov
fldpi
or
sar
int3
out
dec
jnp
sbb
jo
adc
test
(bad)
jg
jg
pop
rcr
and
cwde
dec
sbb
iret
ret
test
sbb
add
jb
test
mov
xchg
adc
(bad)
mov
pop
leave
jbe
or
or
xor
repz
js
xlat
inc
enter
icebp
not
lock
mov
dec
or
(bad)
sub
ins
xlat
fst
and
fiadd
mov
test
cmp
dec
xor
lods
jmp
fsub
cmp
rcr
jae
cwde
fdiv
rol
xor
clc
retf
call
jle
in
xor
pop
pop
mov
ja
ss
std
cdq
cmp
lds
cmps
dec
aam
jnp
or
popf
lds
push
out
shl
rcr
xor
pop
(bad)
retf
fwait
push
push
leave
test
fwait
bound
pop
jnp
jmp
sbb
and
sub
popa
loop
jl
xchg
not
push
js
mov
(bad)
jp
dec
add
enter
daa
int
fs
xchg
in
idiv
rcl
push
popa
and
ja
adc
out
ins
sar
(bad)
add
stc
pop
arpl
iret
and
cmp
xor
adc
sar
retf
jns
icebp
pop
test
and
add
jmp
aam
mul
add
mov
dec
test
cmp
pop
xor
mov
cmp
lock
jl
shr
in
xlat
sub
mov
cmps
leave
mov
retf
movs
retf
popf
xor
int
cmp
in
pop
and
dec
aas
fdivr
ror
fucomp
retf
out
add
lock
ja
sbb
and
icebp
leave
dec
and
fadd
outs
xchg
repz
dec
test
test
js
sbb
sbb
leave
movs
and
adc
sti
dec
in
push
je
(bad)
int3
pop
pop
std
sahf
sar
jmp
cmp
sahf
xor
data16
or
sub
sti
jb
mov
mov
inc
mov
fs
pop
mov
lock
rcl
dec
fmul
sbb
xor
sub
jmp
cli
and
in
mov
push
mov
add
xor
es
jae
and
mov
arpl
or
bound
mov
cmps
cmps
push
fmul
cwde
icebp
jae
jae
sub
mov
aaa
lods
shl
(bad)
jl
add
xor
adc
pop
inc
test
movs
adc
cmp
mov
fst
jae
fs
aam
cmp
test
(bad)
loopne
inc
hlt
jb
popa
pop
or
rol
mov
test
arpl
cmp
jno
mov
cmp
leave
cwde
(bad)
inc
sahf
cmp
cmp
scas
add
dec
fisubr
les
int
popa
pop
add
in
jmp
adc
js
jns
es
pop
inc
xchg
cli
adc
popf
mov
mov
mov
pop
ds
loop
mov
data16
nop
xor
shl
scas
loopne
test
mov
jno
mov
push
jo
add
ins
fld
sbb
xchg
fs
sub
lods
popa
repz
fld
jle
cmp
pop
mov
in
adc
lods
fsubr
pop
outs
shl
fisttp
xor
stos
push
int
imul
cmp
cmp
jmp
adc
dec
loop
xor
mov
leave
jmp
stos
jbe
xchg
stos
jle
mov
dec
mov
imul
mov
arpl
sbb
icebp
adc
jge
add
xchg
mov
inc
add
cmc
xor
jp
movs
lahf
mov
mov
adc
cmp
pop
shr
mov
sbb
xchg
(bad)
jecxz
pusha
adc
ds
add
pop
je
mov
neg
jle
rcl
sub
mov
xchg
scas
out
mov
jo
mov
sub
sbb
scas
out
mov
fdivr
sbb
sbb
xchg
lods
into
outs
or
fs
mov
ret
iret
inc
jnp
dec
scas
jp
std
adc
popa
rcr
or
add
fbstp
pop
lea
ds
add
(bad)
cmps
inc
and
mov
push
(bad)
dec
fsubrp
mov
arpl
sub
popa
adc
mov
cmp
js
mov
push
mov
sbb
push
jmp
loop
lods
pop
push
push
adc
out
leave
fwait
lock
and
imul
jecxz
push
in
int
mov
ror
fidiv
mov
cwde
outs
jmp
mov
or
retf
inc
add
aaa
pop
xchg
jp
pop
fistp
das
jp
xchg
inc
jnp
push
cmps
add
mov
or
enter
mov
jbe
sbb
push
jns
push
push
mov
jg
std
inc
dec
and
dec
imul
dec
mov
inc
sbb
retf
or
scas
jb
adc
(bad)
mov
xor
cmp
cwde
and
stos
retf
mov
imul
in
fdivp
movs
movs
aad
stos
les
add
or
jecxz
jmp
push
push
int
bnd
mul
outs
test
fidiv
lahf
jle
push
and
mov
es
aad
ins
cmps
stos
mul
mov
and
lock
movs
and
adc
lods
arpl
pop
or
ret
scas
ror
xchg
mul
lock
xchg
mov
dec
sbb
or
and
das
or
in
add
test
clc
jnp
fs
jge
movs
mov
cmps
mov
mov
push
mov
xchg
and
loop
fidivr
loop
or
mov
add
cdq
jnp
ss
xchg
mov
inc
xor
popf
fwait
jmp
push
outs
dec
ret
mov
jge
ss
mov
sub
outs
scas
stos
imul
addr16
sub
sbb
stos
cmp
(bad)
not
rcr
mov
imul
je
mov
out
push
jno
adc
xlat
out
xchg
add
stos
ss
push
fdiv
int
pop
sub
xchg
jns
xchg
adc
test
in
mov
mov
inc
jl
adc
stc
stos
lods
mov
jl
icebp
stos
and
and
add
cmps
cmp
outs
sub
je
cmp
and
mov
mov
lahf
dec
ret
sub
dec
jns
dec
push
add
rep
jno
ror
push
into
shld
inc
or
cmps
fadd
cmp
dec
mov
aaa
stos
mov
retf
sbb
lea
or
cmp
inc
pop
add
and
add
pop
inc
enter
lea
cmp
pop
ss
mul
das
mov
ins
or
and
jl
fmul
mov
xchg
adc
mov
sub
dec
lods
pop
sbb
inc
pop
stos
pop
pop
add
mov
stos
xchg
popa
jae
dec
jl
lods
int3
into
xor
inc
inc
out
pop
add
inc
outs
jecxz
push
mov
dec
push
iret
jmp
stos
jmp
out
icebp
test
rcl
sbb
pop
jns
ds
xor
clc
in
cmp
stos
popa
jno
jns
mov
(bad)
or
adc
cmp
inc
mov
fistp
es
das
adc
pusha
jae
jne
jl
push
loop
call
mov
retf
mov
in
jmp
adc
test
cmps
cli
mov
push
add
inc
loop
shl
jno
inc
jmp
cmp
shl
and
in
adc
ret
push
(bad)
cld
imul
retf
xchg
fimul
fimul
js
lods
imul
mov
stc
cmc
pop
mov
inc
idiv
scas
ss
arpl
loopne
mov
xchg
jmp
lds
mov
mov
call
scas
iret
es
pop
cmp
sub
or
pop
imul
ror
mov
out
icebp
add
xchg
retf
adc
sbb
mov
xchg
adc
imul
or
and
add
jns
stc
push
mov
shl
dec
jl
lahf
arpl
sub
(bad)
push
cmp
std
fcom
cmp
repnz
ja
movs
cs
pop
sar
cld
pop
jno
pop
cmc
jl
push
push
sub
cmp
arpl
rcr
or
stos
inc
or
push
cmp
pop
jge
out
idiv
in
stc
xor
xchg
push
sbb
retf
test
pop
fldcw
xchg
lods
push
movs
div
jecxz
sbb
loope
mov
jecxz
inc
pop
push
adc
xchg
push
xchg
mov
sbb
outs
mov
add
movs
sub
cmp
aam
jne
xor
idiv
mov
sti
adc
shr
gs
bound
aad
sub
mov
push
jae
aaa
lock
ss
je
mov
js
mov
mov
or
test
pop
sbb
sub
sub
(bad)
jp
call
mov
je
push
xchg
adc
xlat
mov
dec
or
pop
add
xor
rcr
out
add
push
into
shl
(bad)
test
push
js
xor
cmp
add
imul
cmc
(bad)
push
and
sub
test
imul
pop
xchg
jbe
repnz
inc
add
popf
test
repz
mov
push
jle
xor
sar
inc
mov
mov
add
push
mov
and
les
pop
cmp
push
or
stos
mov
pop
xlat
fst
jns
push
dec
mov
xor
ins
push
inc
jmp
lods
xor
push
ret
not
popf
outs
test
dec
inc
push
mov
adc
jmp
sbb
push
sbb
js
fcom
xor
adc
pop
or
out
pop
pushf
ficom
out
imul
movq
int
jnp
outs
mov
je
jne
adc
movs
aad
jle
call
es
dec
push
rcr
nop
xchg
mov
xchg
fnstcw
add
popa
cmp
mov
int3
lock
cmp
popa
jae
push
jmp
mov
add
and
adc
cmps
dec
lock
mov
push
sub
pop
push
in
xor
jbe
mov
pop
je
xor
mov
lods
inc
and
jo
imul
mov
pop
push
xor
mov
push
mov
push
xor
cld
add
cmp
aaa
cmp
dec
dec
sbb
add
div
outs
jmp
and
mov
cmp
jle
push
mov
fwait
shr
sub
jnp
sbb
mov
jnp
into
adc
and
mov
sub
jge
dec
sbb
or
mov
or
cmp
or
out
jge
and
sub
mov
mov
push
push
cdq
mov
pop
sar
ret
and
in
pushf
dec
adc
add
aaa
xchg
or
out
xor
sub
pop
sub
into
push
xor
ins
adc
mov
(bad)
mov
sbb
test
dec
mov
push
vmovupd
loopne
jnp
out
fdiv
cmp
jmp
jo
dec
hlt
xor
fst
pop
mov
ret
jne
mov
bnd
aas
add
pushf
mov
test
cwde
mov
mov
jecxz
xchg
movs
scas
fiadd
cmp
cdq
gs
rcl
sub
sahf
movs
push
add
pusha
dec
push
jns
xor
repnz
dec
rol
sub
xor
push
aaa
ret
(bad)
in
pop
push
jae
jmp
inc
imul
(bad)
cmp
jnp
jp
shr
mov
stos
jge
mov
dec
pop
(bad)
mov
pusha
add
inc
dec
inc
call
int
jnp
dec
rcr
aas
cli
mov
ins
movs
int3
push
loope
xor
loop
jnp
ins
mov
xchg
je
sub
sbb
popf
das
cdq
add
les
popf
rol
push
inc
mov
out
rcl
data16
push
dec
mov
sbb
dec
and
ficom
addr16
sti
add
and
test
push
sbb
cmp
int
pop
adc
fxch
out
sbb
shl
sub
rcl
loope
repz
jmp
fadd
retf
shl
push
pop
dec
or
or
pop
cmp
aaa
lock
movs
test
mov
sbb
mov
fiadd
sub
cmp
stos
push
cmp
pop
xlat
mov
cmp
repnz
loopne
mov
jp
data16
loopne
xor
or
cmps
ds
pusha
mov
ja
push
cmc
int3
mov
mov
mov
sti
out
inc
mov
push
sub
ins
dec
lods
in
or
inc
add
pop
add
xchg
jno
imul
inc
inc
loopne
bound
lock
push
mov
lock
or
or
push
jmp
mov
(bad)
sbb
push
stc
out
scas
and
push
loop
fwait
outs
daa
and
stc
sub
jo
setge
mov
jb
pop
sahf
push
fdivr
test
xchg
jecxz
ja
(bad)
cdq
jbe
add
jmp
mov
gs
rcr
ficom
or
lock
retf
and
inc
cld
iret
push
cmp
cdq
pop
(bad)
imul
adc
or
add
aaa
(bad)
imul
cmp
clc
stos
mov
add
cwde
fsub
mov
mov
add
add
jnp
fs
movs
cmp
and
and
mov
ins
pop
mov
jns
dec
mov
scas
not
cld
popa
aad
push
mov
push
retf
add
(bad)
(bad)
call
push
loop
mov
shr
popf
sub
iret
stos
es
cld
ja
test
mov
mov
sub
out
in
push
cmp
sbb
push
xlat
ins
pop
push
mov
sbb
and
jecxz
jp
jge
icebp
xchg
dec
std
inc
or
enter
sbb
shl
fs
loop
xchg
scas
xchg
jmp
aam
out
mov
sbb
fcomp
jmp
sar
pop
lods
rol
cdq
mov
repz
ficom
jle
lods
es
(bad)
mov
sbb
out
and
and
(bad)
hlt
mov
jg
pop
sbb
cmp
lods
out
cmp
cmps
aad
inc
aaa
xchg
push
pop
lods
jl
sbb
cwde
data16
mov
mov
imul
les
sete
(bad)
jle
push
and
pushf
stos
fwait
rcl
pop
movs
stc
mov
lock
sub
scas
aaa
icebp
or
xchg
mov
inc
jmp
not
outs
mov
cmp
lock
add
js
mov
and
fstp
or
hlt
int
xchg
xor
push
jl
ret
push
call
sti
test
mov
fmul
(bad)
push
push
add
sbb
inc
movs
bound
jl
dec
pop
lahf
push
jae
call
mov
(bad)
ja
xor
lods
fbstp
bnd
leave
xchg
dec
jle
dec
or
adc
add
aam
jno
and
rcr
and
aas
mov
in
into
pop
xor
jno
inc
aad
mov
stc
mov
xor
stc
jl
fidivr
dec
adc
in
adc
mov
cli
pop
fxam
mov
adc
xchg
adc
jle
test
pop
aad
stos
or
hlt
dec
sub
cmc
outs
sbb
clc
or
fistp
pushf
mov
cmps
stos
and
and
pop
adc
sbb
pushf
jmp
inc
jo
sub
mov
scas
ins
lds
pop
sub
pop
inc
sub
leave
in
shl
and
push
cmc
rcr
(bad)
cs
cli
ffree
and
popa
inc
imul
and
ins
mov
lods
push
int3
aas
push
shl
ins
xchg
repz
hlt
subps
daa
add
pop
aad
pusha
pop
not
mov
dec
(bad)
cld
fimul
hlt
pop
sti
push
jo
mov
test
dec
xor
cdq
leave
sar
lahf
and
stos
dec
ss
rol
pop
stc
or
pop
std
(bad)
push
cmp
dec
jmp
and
jae
push
sbb
adc
add
call
(bad)
in
sub
das
call
aad
dec
pop
sub
into
ds
push
cmp
imul
dec
aaa
xor
add
lahf
int
lock
xchg
rcr
dec
pop
inc
sbb
mov
imul
ins
mov
xor
(bad)
clc
(bad)
sbb
xor
jecxz
retf
sbb
inc
cwde
inc
clc
mov
xchg
inc
jge
mov
inc
sahf
sbb
and
xchg
push
and
mov
sub
inc
movs
cwde
adc
jl
repz
leave
sti
mov
nop
rcl
xchg
adc
es
mov
cmp
jmp
pop
xchg
iretw
mov
pop
jns
adc
cwde
add
inc
sbb
adc
mov
fisttp
mov
pop
ret
fsub
mov
push
mov
sub
(bad)
in
bound
adc
enter
int3
ret
call
fisub
push
pop
ss
scas
icebp
or
sbb
enter
ins
sub
out
push
xor
jecxz
aad
out
or
les
pop
mov
mov
ds
in
shufps
mov
inc
inc
loopne
mov
adc
sbb
sbb
dec
gs
into
das
sti
arpl
xor
cmc
mov
push
cmp
and
arpl
imul
pop
rcr
iret
fcomip
add
cdq
gs
and
or
cld
cmc
inc
sub
call
popa
adc
stc
inc
jmp
sbb
add
aad
adc
pop
mov
lods
fs
lahf
xor
out
repz
add
das
jae
jge
push
mov
cmp
or
ja
mov
imul
add
xor
arpl
push
sbb
inc
out
aas
mov
je
ja
cmp
stc
add
enter
jb
jnp
push
cmp
sub
fist
imul
add
in
frstor
inc
jmp
cmp
test
mov
dec
inc
sub
sar
cdq
outs
push
out
test
call
mov
push
lods
data16
sbb
into
sub
push
sub
push
popf
das
std
adc
mov
lods
xor
daa
stos
add
ss
imul
fnstenv
sbb
xchg
dec
pop
ds
jbe
jge
in
mov
inc
cmp
xor
sub
cdq
and
aad
repz
retf
cdq
or
add
xor
mov
loope
ficomp
adc
bound
push
and
lahf
movs
js
arpl
jns
jno
popa
jne
ror
mov
mov
pop
and
sub
pop
lock
jmp
outs
comiss
addr16
ret
rcr
dec
mov
add
xchg
mov
mov
cld
inc
inc
into
xor
pop
gs
fwait
arpl
movs
push
(bad)
outs
dec
retf
ret
ss
xor
pop
ret
icebp
jle
(bad)
sub
jb
cwde
outs
mov
pop
test
sub
mov
stc
ins
xchg
(bad)
icebp
ins
jbe
adc
push
(bad)
imul
or
lods
mov
js
call
repnz
iret
xchg
push
icebp
nop
(bad)
push
inc
mov
bound
and
lods
out
mov
test
push
ret
dec
mov
je
push
into
aam
xlat
fistp
lods
stos
out
cmp
dec
lds
cmp
push
push
sub
push
arpl
mov
std
mov
enter
sti
jae
mov
push
adc
shr
cmp
jne
inc
and
pop
gs
jne
pop
push
icebp
pop
push
push
sbb
inc
pop
loop
pop
add
cmps
int
test
jnp
pop
xor
cmc
inc
cmp
jne
pop
(bad)
mov
mov
cmp
cmp
xor
jecxz
inc
push
sbb
mov
daa
dec
jecxz
adc
dec
sbb
push
xor
or
push
fidivr
sbb
pop
mov
add
cmp
dec
cmc
xor
inc
das
xor
and
(bad)
fimul
dec
gs
fnstcw
imul
mov
into
pop
mov
ret
add
hlt
dec
stos
jle
or
loope
or
sti
fadd
mov
add
and
das
push
cmc
cmps
shl
inc
pop
ins
test
js
jge
(bad)
pop
call
mov
test
arpl
sbb
fisub
xor
and
retf
sar
mov
mov
and
fistp
push
rcl
leave
or
inc
cmps
movs
adc
inc
sar
mov
xchg
cs
push
iret
ret
adc
shl
jno
cmp
xchg
std
sbb
scas
xor
push
jl
push
imul
mov
and
int3
mov
adc
sub
adc
fcomp
push
outs
xor
push
scas
or
push
mov
push
xchg
retf
scas
jge
inc
inc
sub
bndmk
ja
push
add
out
sub
mov
mov
test
mov
lock
sub
iret
repnz
jecxz
jmp
pop
movs
and
jne
outs
call
das
aas
int
mov
mov
and
pop
sbb
fcmovnu
popa
pushf
stos
xchg
inc
jb
or
repz
or
xor
jno
into
repnz
xor
mov
xlat
pop
xor
pop
and
or
cmps
fldenv
int
es
jmp
push
packuswb
cld
sbb
cs
mov
out
fs
dec
cld
call
jp
pop
test
fwait
or
pop
xor
jmp
aad
cmps
xor
loopne
vmread
jmp
je
xor
(bad)
fs
cmp
rcr
sub
hlt
sbb
inc
movs
jg
lods
test
jge
cld
mov
repz
cmp
les
rcr
xchg
bound
xor
inc
into
sub
sbb
out
lods
xchg
pop
repz
push
xor
outs
pop
retf
push
cld
push
fimul
ds
cwde
test
and
jnp
sbb
cmp
ficom
mov
loopne
mov
lods
mov
dec
xchg
pop
add
les
pop
mov
out
xchg
xor
xchg
stos
mov
add
add
cld
ret
ins
dec
aaa
loope
lods
mov
dec
sbb
lds
adc
sub
push
ret
mov
mov
xchg
mov
jo
fdivp
data16
gs
in
xor
lods
iret
int3
ret
cmc
push
sbb
push
jb
push
retf
xlat
pushf
sub
adc
adc
and
les
add
jge
mov
inc
or
bnd
mov
jmp
cmp
jb
inc
js
pop
shl
test
adc
cmps
in
dec
jmp
mov
call
push
xor
jmp
int
or
int3
lods
in
and
ja
xor
push
jb
lods
push
push
dec
retf
xor
nop
lds
dec
fwait
add
ror
clc
ficom
xchg
idiv
ins
fnstcw
cwde
mov
sub
call
dec
sbb
cli
mov
js
pop
das
lds
cwde
stos
xor
add
xchg
cmp
sub
(bad)
ds
fsubp
nop
call
jle
inc
(bad)
test
cmp
ds
cmps
mov
mov
add
hlt
(bad)
sbb
enter
ds
sub
popf
imul
adc
sub
out
ror
jns
daa
cmp
adc
cmp
daa
xchg
dec
pop
inc
lea
cwde
rcr
add
jns
pop
inc
and
fwait
bound
cmp
loopne
jg
pop
pop
mov
loope
mov
out
dec
retf
enter
std
xor
sti
and
retf
retf
enter
gs
jne
arpl
cmc
je
jl
in
xchg
movs
sahf
cmp
sbb
pop
dec
pop
in
rol
imul
ror
lahf
fs
xchg
or
adc
fsubr
das
jo
cdq
mov
fsubr
int3
lods
mov
adc
inc
test
dec
adc
inc
push
cld
jmp
(bad)
pop
or
je
sub
dec
aaa
mov
mov
push
or
push
pop
sahf
popa
jecxz
dec
adc
xor
test
pop
std
xchg
or
loope
or
cmp
rcl
push
push
shr
arpl
cmps
jns
shr
fnstcw
shl
pop
cmp
ins
jns
imul
mov
verr
movd
shr
ret
in
jge
out
fcom
dec
jecxz
add
jmp
aam
sar
mov
mov
out
ja
xchg
jb
xor
sar
add
jae
les
mov
pop
int
sub
jmp
or
xor
and
xchg
mov
mov
lahf
fisttp
leave
inc
mov
xor
dec
and
sbb
sti
outs
test
sub
fwait
lods
loope
mov
fld
mov
stos
add
neg
cld
add
sbb
add
fisttp
sbb
xchg
call
out
mov
push
addr16
mov
daa
and
inc
pop
and
mov
ret
mov
sbb
pop
push
retf
dec
push
or
test
inc
gs
lahf
loopne
outs
mov
xchg
dec
xor
idiv
icebp
push
test
xchg
and
dec
pop
mov
pop
jb
cld
daa
cmp
out
pop
mov
jecxz
or
sti
xchg
hlt
imul
pop
jo
mov
fiadd
das
pop
mov
pop
test
xchg
push
pop
cmp
sbb
jbe
xor
out
mov
and
mov
inc
nop
or
pushf
lods
pushf
dec
inc
and
stos
cmp
adc
movsx
dec
inc
adc
inc
je
xor
in
icebp
jl
movs
rcl
js
inc
bound
scas
out
inc
cwde
ja
shl
loopne
adc
call
jp
xchg
loop
scas
(bad)
ds
stc
inc
mov
pusha
lods
and
lock
in
push
mov
cmp
dec
leave
cmp
add
inc
adc
out
inc
shl
push
mov
movs
loope
or
std
jb
sub
lea
sbb
in
cli
jmp
push
or
repz
clc
mov
in
sbb
sbb
jecxz
jmp
mov
inc
sbb
lahf
cmp
mov
pop
(bad)
adc
jmp
fstp
or
ins
mov
inc
shl
mov
mov
and
jmp
arpl
shl
ret
movs
cmp
test
xor
jl
imul
dec
hlt
fstp
shl
push
movs
sbb
lods
sbb
add
adc
pushf
movs
mov
ins
pop
mov
sbb
mov
mov
inc
vshufpd
dec
push
mov
out
ficomp
add
das
xor
enter
dec
jnp
adc
xchg
int
xchg
cwde
jle
stos
add
loope
mov
test
(bad)
fcom
or
inc
and
mov
mov
xchg
je
stos
out
jle
jmp
push
mov
sub
rol
dec
mov
test
lods
cmp
movs
cdq
jl
or
xchg
pop
jo
push
mov
xor
mov
loope
ret
and
repz
inc
cmps
lods
arpl
es
bnd
xchg
adc
jmp
aaa
(bad)
aad
adc
xchg
dec
or
imul
adc
into
xchg
repz
psubsb
movs
fcom
daa
stos
mov
adc
and
and
cmps
or
xchg
add
cli
test
enter
js
push
aam
ds
jg
inc
and
jbe
int3
jecxz
in
inc
lods
call
aad
mov
xor
dec
add
xor
cmp
out
out
inc
test
or
loopne
pop
xlat
test
pop
cmps
adc
mov
push
cmp
or
jbe
cmp
xor
scas
test
pop
xor
rol
add
mov
xchg
imul
dec
or
xchg
xlat
pop
lock
test
pop
cld
cmp
stc
repz
test
test
and
int
dec
adc
cmps
scas
mov
int
shr
or
pop
aam
and
sub
push
pop
rol
retw
imul
pusha
lahf
jmp
mov
sbb
out
push
xor
fnstenv
loope
push
shufps
adc
and
xor
cmc
mov
nop
jno
mov
std
push
jnp
push
mov
pushf
cmp
out
jmp
fsubr
in
rcr
adc
je
stos
in
in
call
bound
int3
fwait
test
ror
test
(bad)
int
xchg
into
inc
jmp
inc
and
icebp
test
sub
(bad)
xor
push
fs
mov
popf
sub
out
mov
cdq
sbb
xlat
xchg
lock
inc
rcr
cli
xchg
test
push
pop
xchg
(bad)
fst
sar
bound
mov
mov
(bad)
push
mov
in
adc
lods
and
jo
iret
pop
(bad)
xchg
xor
or
fild
push
sti
lahf
dec
retf
iret
clc
retf
jmp
lea
out
dec
xchg
test
mov
or
add
sahf
mov
mov
test
mov
std
push
movs
dec
lock
cli
pop
lods
ja
scas
mov
scas
pusha
jl
pop
xchg
pop
mov
xchg
sahf
test
mov
mov
inc
mov
push
xor
outs
pop
clc
jmp
mov
dec
jl
inc
sbb
lahf
push
clc
mov
pop
inc
mov
(bad)
loope
repnz
pop
mov
in
cmp
jmp
cs
cmp
xchg
mov
or
pop
pop
out
jae
cli
inc
jp
jecxz
js
lahf
mov
iret
mov
retf
lahf
loope
out
test
cmp
add
push
jmp
or
xor
pop
add
xchg
fdivr
aam
outs
mov
loop
movs
int3
into
xor
mov
jb
test
mov
ror
hlt
icebp
cmps
add
aas
pop
pop
push
push
ds
sbb
cmps
nop
jnp
push
int3
add
cmp
lahf
popa
jp
pop
mul
push
fsub
or
jge
arpl
push
inc
jb
lock
clc
jmp
test
movs
adc
dec
test
or
xchg
mov
in
ss
add
mov
repnz
cdq
jle
(bad)
push
pop
popf
les
(bad)
movs
add
and
jmp
xchg
shl
inc
pop
pop
jge
mov
fsub
call
leave
or
and
jb
fwait
xor
movs
imul
inc
adc
pop
daa
fsubr
xchg
ja
sbb
pop
push
repz
jo
xchg
sub
mov
adc
push
jns
jmp
mov
mov
call
jo
jl
ret
cli
fstp
dec
cmps
hlt
xlat
in
aaa
and
sar
pop
cmc
mov
jmp
xchg
out
pusha
in
lds
xor
jg
add
(bad)
jge
int3
popa
sub
test
shl
sti
pop
pop
jmp
xor
and
popf
xchg
jg
out
(bad)
xor
retf
sub
mov
(bad)
aam
pop
jae
(bad)
xchg
cmp
sbb
iret
pop
ja
push
pop
mov
sbb
cs
xchg
pop
out
push
rcl
or
or
and
addr16
loopne
push
dec
push
pop
cdq
jp
inc
in
jecxz
xlat
out
mov
retf
rcl
fcomp
(bad)
in
retf
mov
les
test
(bad)
mov
mov
jae
mov
popa
fucom
pop
pop
push
imul
sub
dec
pop
data16
xchg
popa
xlat
jp
daa
jp
or
dec
cdq
push
repnz
pop
add
push
or
loopne
loope
repnz
into
push
xor
clc
in
ficom
imul
inc
xchg
and
js
call
push
lods
mov
stos
in
mov
arpl
popf
push
out
or
out
pushf
mov
daa
div
add
jmp
mov
out
push
or
mov
or
sti
dec
adc
mov
out
test
or
stos
mov
(bad)
mov
ret
xchg
push
imul
sub
sar
xor
pop
test
repz
pop
les
scas
into
repnz
lods
cwde
(bad)
(bad)
cli
adc
in
sbb
es
mov
add
dec
mov
mov
xor
and
fst
pop
mov
jl
pop
ret
test
push
stos
sbb
pop
and
(bad)
sbb
jge
cmp
push
aad
dec
ret
push
clc
and
cmp
in
bound
pop
imul
cmp
sar
out
in
mov
(bad)
pop
cmp
push
retf
out
icebp
and
sub
inc
sti
xlat
or
pop
pop
stc
aaa
stc
push
mov
loop
and
inc
retf
test
retf
xor
push
xlat
ficom
xchg
or
into
movs
loope
mov
xchg
pop
pop
shl
rol
pop
mov
fwait
test
xor
je
sbb
push
cli
int
cmc
jo
inc
cmps
push
les
mov
in
mov
xor
cmp
inc
and
leave
retf
jl
pop
arpl
div
jns
sbb
fmul
jg
mov
pop
leave
in
and
cmps
xchg
fisubr
mov
inc
fadd
inc
std
dec
xor
(bad)
sbb
pusha
das
push
dec
add
mov
jae
cmp
mov
call
lahf
pop
cmps
gs
add
add
pop
aam
xor
inc
mov
push
ret
or
inc
dec
sbb
retf
les
aad
aad
push
in
push
xor
fdivr
or
es
dec
mov
imul
pop
push
xchg
or
and
stos
jecxz
jg
push
addr16
jecxz
inc
mov
aam
(bad)
sbb
mov
clc
push
lods
push
sub
ds
jno
jmp
inc
push
in
mov
jns
cmp
mov
popf
and
jge
add
xchg
mov
aam
shl
movs
jae
fwait
mov
push
std
add
push
out
pop
cs
imul
test
scas
dec
xor
push
movs
dec
mov
div
mov
inc
xor
ja
stos
outs
lods
push
dec
sbb
or
cs
mov
jb
mov
fist
mov
fldcw
lock
xchg
stos
arpl
ss
out
call
rcr
add
shl
ror
lods
int3
movs
pop
xchg
imul
mov
pop
aam
div
xor
(bad)
dec
add
shr
inc
or
mov
mov
adc
loope
cwde
jo
xchg
mov
cwde
mov
inc
minps
add
pop
xchg
and
xchg
daa
ins
fwait
mov
fisub
dec
pop
push
leave
jo
mov
cmp
add
test
cmps
scas
push
mov
(bad)
and
sbb
loopne
lahf
daa
sub
sub
outs
imul
add
mov
xor
sub
sbb
jecxz
mov
data16
mov
shr
int3
sbb
or
push
mov
gs
imul
ret
pop
clc
in
std
aas
cmp
leave
imul
adc
push
les
cmps
inc
inc
rol
mov
add
test
aas
leave
add
xchg
mov
cwde
inc
jno
int3
(bad)
mov
add
imul
mov
ficom
cmp
in
aas
in
cmc
(bad)
and
pop
icebp
push
pop
rol
inc
xor
push
sub
jge
out
xchg
fxam
inc
and
pop
push
ret
adc
std
mov
das
and
js
neg
fimul
movs
jae
dec
adc
out
out
dec
mov
or
popf
cs
push
xchg
fsub
fidivr
mov
push
pop
mov
add
ins
cmp
daa
ret
es
inc
js
push
inc
ja
daa
inc
xchg
lahf
mov
test
push
push
cdq
repnz
aad
and
push
lahf
cmp
loope
pusha
repnz
sbb
ret
sub
xor
das
jle
mov
sub
(bad)
sub
bound
popa
add
ret
test
pop
mov
int
movs
sub
fstp
xchg
cld
stos
aad
stos
xchg
(bad)
sub
mov
inc
cmp
retf
test
minps
mov
jne
and
arpl
jbe
lods
xchg
xchg
(bad)
bnd
dec
pushf
mov
sti
xchg
xchg
or
mov
cmps
push
or
jno
rcr
and
sbb
scas
fcomp
sbb
adc
fisubr
push
shl
mov
jl
stos
lahf
jge
cmc
push
mov
cmps
shl
(bad)
or
inc
pop
jmp
xchg
movs
push
xchg
pop
fwait
sbb
add
je
pop
enter
mov
les
cwde
leave
clc
mov
and
stos
(bad)
mov
jp
or
mov
test
(bad)
mov
push
rcl
test
and
or
outs
push
lahf
dec
mov
fistp
(bad)
rol
fdivr
lock
arpl
sub
loopne
lea
in
mov
inc
cmp
add
mov
sbb
repz
icebp
cmp
cli
gs
cmps
add
out
push
sub
popa
loopne
mov
jno
dec
mov
cmp
xor
ins
push
pop
fild
sub
lock
sbb
call
rcr
bound
outs
mov
lods
mov
sub
add
dec
and
pusha
mov
aas
pop
jno
mov
adc
fnsave
cld
mov
push
or
fwait
addr16
enter
or
sbb
dec
jne
and
xchg
or
int
xchg
loop
xchg
and
sar
ins
sti
mov
addr16
bound
xchg
sub
fcom
retf
or
test
xlat
int3
and
movs
xor
sub
xchg
fdiv
mov
dec
mov
push
aad
(bad)
call
mov
mov
lahf
jno
(bad)
mov
enter
mov
out
sbb
addr16
adc
addr16
mov
int3
popf
pop
mov
bnd
adc
xchg
mov
(bad)
pop
and
adc
(bad)
cmc
inc
mov
cmc
(bad)
push
push
in
xchg
xchg
ret
mov
sahf
mov
inc
scas
sub
push
add
sub
add
fdivr
mov
inc
mov
out
mov
dec
cmps
xor
inc
lods
fcomip
sub
ja
rcl
hlt
sbb
movs
sahf
jo
pop
xchg
xchg
pop
lods
aam
push
leave
push
sub
ds
xor
scas
lods
mov
cmp
aaa
push
fs
shl
in
jmp
cld
jmp
or
(bad)
and
pusha
push
ins
(bad)
or
sbb
mov
jl
inc
rcl
aas
xor
jo
cmps
push
mov
xchg
adc
fnop
in
cdq
mov
fisubr
pop
inc
in
xor
adc
cmps
add
cld
lea
into
push
sbb
jle
pop
sbb
out
push
mov
aad
addr16
imul
dec
adc
add
ins
repnz
jo
push
jl
call
out
adc
mov
jns
mov
jns
mov
aam
add
clc
test
pushf
scas
sbb
cmp
xchg
scas
nop
repnz
out
sbb
ud1
dec
daa
loopne
les
add
daa
loope
hlt
in
clc
sbb
lea
ds
cs
outs
mov
scas
test
push
scas
lds
imul
xor
fdivr
test
jmp
dec
push
jmp
enter
dec
stos
(bad)
frstor
aaa
retf
mov
std
je
or
imul
adc
ins
add
sbb
and
dec
sub
xchg
pop
sbb
test
pop
pushf
inc
nop
push
fbstp
inc
pop
outs
lods
mov
xor
or
xchg
mov
jp
cmps
movs
cdq
cld
cmp
movs
call
icebp
jecxz
add
aas
inc
sbb
fbstp
loop
jp
and
mov
clc
je
pop
cdq
stos
dec
popa
shl
pop
push
out
lock
(bad)
cmp
imul
lock
fcomp
cmp
in
ret
fldcw
pop
jp
aad
add
ret
xchg
les
mov
data16
bound
jnp
fnstcw
push
int3
icebp
mov
mov
aad
js
pop
pusha
xor
jecxz
sub
lods
fwait
xor
aas
jg
stc
scas
sbb
dec
sub
and
mov
cmps
inc
ret
leave
xor
jg
imul
adc
or
mov
push
loopne
push
xchg
not
xor
mov
leave
sub
rcr
sub
and
xlat
push
out
in
pop
arpl
cmps
cmp
rol
pop
sub
(bad)
enter
push
mov
mov
xchg
in
das
xor
hlt
retf
xchg
sub
mov
out
nop
mov
lods
xchg
or
ds
rcr
idiv
inc
int3
mov
icebp
add
movq
cmp
or
js
add
call
xchg
jg
adc
jne
retf
call
push
lods
and
movs
daa
push
push
test
mov
jns
xchg
jmp
gs
cmp
test
push
or
and
(bad)
pop
stos
scas
mov
movs
and
and
outs
ins
add
and
pushf
sbb
fidivr
outs
out
call
jmp
xchg
clc
imul
xor
push
(bad)
mov
cli
xchg
mov
out
int3
mov
inc
inc
data16
push
xchg
dec
and
das
pop
pusha
pop
popf
jnp
sub
lods
push
es
add
jl
pop
cmp
loop
sbb
test
jae
retf
pop
mov
aaa
aas
sbb
das
pusha
and
popf
lea
sahf
cdq
mov
add
fist
sub
pop
or
mov
sbb
pop
xor
cmp
and
sub
or
dec
into
fs
imul
or
outs
dec
xchg
fstp
loopne
inc
pop
cs
add
xor
fisubr
xchg
jo
aam
shr
mov
jmp
pop
shl
xchg
mov
sub
ds
es
push
xchg
fcom
scas
loope
dec
test
int
sbb
and
cld
xor
es
sbb
pusha
mov
cmp
dec
mov
addr16
and
xchg
push
stos
add
stos
aaa
ret
jo
stc
scas
mov
addr16
loope
jne
fs
lods
clc
nop
mov
sbb
test
and
and
jb
repnz
pop
rcl
pop
test
xchg
out
sub
cs
ret
jp
and
adc
fdiv
cmps
cmp
(bad)
push
aad
cld
in
or
xchg
retf
or
iret
or
pop
movs
aam
sub
pop
cwde
fld
mov
push
jl
mul
std
pop
adc
aaa
jge
push
mov
xor
and
cmp
cmp
mov
aam
jmp
fnstsw
fisubr
lock
in
movs
pop
clc
pop
sbb
cmp
mov
rcl
retf
xchg
addr16
mov
inc
mov
xchg
into
mov
out
and
and
adc
repz
xchg
cmp
cmp
inc
xor
ret
push
mov
cmp
add
adc
fdiv
stos
and
inc
daa
into
add
pusha
cmp
pop
movs
aam
dec
and
jns
push
int
dec
stos
mov
xor
add
daa
cld
enter
movs
ja
add
xchg
mov
popf
and
jae
test
(bad)
loope
mov
sub
call
hlt
loop
xor
(bad)
addr16
out
(bad)
aas
and
sub
mov
(bad)
jb
adc
and
retf
and
rol
ins
xlat
jbe
xor
ins
pop
mov
ins
fst
imul
fsubr
mov
leave
xor
inc
stos
retf
mov
or
jno
pop
or
sub
fwait
mov
rol
jl
push
pop
out
mov
loopne
mov
jl
and
movs
xchg
enter
scas
test
lahf
adc
adc
cs
sbb
dec
and
shl
pop
out
retf
idiv
aas
sbb
shl
jmp
call
mov
popa
sub
push
push
mov
xchg
mov
repz
jbe
scas
call
adc
daa
jno
retf
mov
(bad)
nop
stos
inc
xor
imul
adc
test
lods
mov
or
inc
xor
jns
and
call
fwait
(bad)
and
cdq
sub
inc
cmp
test
test
jle
loop
xchg
xor
ins
aas
stos
xchg
sub
push
int3
les
jnp
aad
push
push
into
dec
pop
xchg
sub
inc
and
inc
cmps
jge
lods
je
mov
cmps
dec
inc
aas
les
sbb
sbb
aad
pop
fwait
sbb
popa
push
stc
jb
inc
retf
fistp
mov
cmps
jae
pop
mov
cmp
push
xor
push
aas
push
retf
fsub
push
out
icebp
idiv
xchg
call
scas
mov
mov
sahf
inc
frstor
mov
and
adc
pop
fisttp
mov
ret
(bad)
or
or
add
sbb
or
pop
movs
in
xlat
jae
out
and
add
mov
inc
mov
mov
test
mov
cmp
test
mov
adc
addr16
xchg
fst
jo
lods
mov
cwde
stos
cmc
lds
xchg
jnp
jmp
in
mov
xor
push
cmp
pop
add
cmp
dec
popf
aad
fldcw
bound
jmp
push
test
out
xchg
ret
mov
xlat
out
mov
lods
scas
fs
test
cmp
inc
adc
loope
lds
xchg
outs
jle
sbb
and
mov
xor
out
dec
xor
out
sahf
daa
jne
xor
dec
dec
push
dec
jmp
cmps
aam
push
ret
in
sbb
fs
icebp
(bad)
scas
push
inc
call
out
repnz
and
dec
xchg
daa
not
mov
in
cwde
xor
or
mov
and
mov
xor
push
xchg
es
repnz
cmp
cmp
imul
pop
add
cs
pop
imul
jno
enter
iret
or
fstp
jns
xchg
daa
cs
ins
je
mov
fcmovb
cmp
xchg
rcr
sar
xchg
pop
pop
jge
dec
(bad)
and
(bad)
mov
sahf
shl
movs
mov
mov
ds
call
int3
int
enter
xor
lods
and
sub
fcmovbe
mov
inc
stos
jno
adc
ins
inc
imul
mov
bsr
movs
sar
loopne
and
addr16
rcr
ins
es
cmp
push
sbb
jmp
std
aad
sbb
mov
push
loop
repz
test
ins
jecxz
adc
shr
xchg
fistp
sub
leave
enter
cdq
dec
add
stos
fdiv
xlat
cmc
clc
jb
push
xor
dec
lea
pop
inc
add
and
mov
add
adc
jns
test
popf
dec
jnp
xor
pop
xchg
xor
sahf
mov
mov
mov
int3
fild
mov
pushf
adc
pop
sub
push
loope
std
mov
sub
(bad)
cmovnp
ss
(bad)
out
jbe
rcr
and
sar
dec
ins
cmp
loopne
add
stc
mov
push
xchg
sbb
jno
xchg
fisttp
call
sbb
or
jle
cmp
jmp
test
jle
inc
jo
xchg
sbb
test
jb
test
mov
jle
xor
xchg
xchg
jne
and
outs
jae
pop
or
pop
sbb
xor
push
dec
test
jnp
push
fdivr
inc
imul
movs
imul
push
mov
xor
adc
xor
(bad)
pop
aas
jne
in
mov
enter
cmps
cmps
scas
call
xchg
push
mov
and
bound
mov
add
das
jns
adc
aas
jmp
jo
jnp
mov
dec
fisttp
retf
inc
hlt
aaa
fld
cld
dec
mov
or
in
ja
stos
and
(bad)
leave
xlat
shr
test
das
rol
or
mov
aas
pop
pop
add
pop
pop
mov
retf
or
lods
es
xor
int
cs
repz
test
arpl
lea
inc
xor
mov
jno
das
dec
xchg
jb
push
push
pushf
or
xchg
test
pop
sub
or
pop
loope
push
cwde
jnp
push
mov
mov
call
and
adc
ins
and
ds
in
test
scas
cld
les
hlt
xchg
pop
(bad)
call
test
in
gs
in
jb
clc
or
or
xchg
ret
daa
sbb
popa
mov
daa
loop
adc
fimul
stos
xchg
inc
push
push
addr16
or
nop
add
and
out
ret
popa
and
fnstenv
cmp
movd
lea
pop
test
sbb
inc
cmp
or
mov
in
xor
(bad)
sbb
sti
jno
cld
aas
sub
int
cmp
jecxz
xor
jne
mov
lock
hlt
mov
(bad)
add
scas
push
in
xor
cmp
sbb
and
jp
ret
mov
push
add
pop
push
mov
int
mov
mov
mov
scas
loope
ror
or
or
dec
mov
cwde
push
mov
repnz
fld
cmp
out
jae
and
mov
pop
(bad)
push
or
imul
lods
aas
sub
sub
or
cmp
int3
push
cmc
fadd
inc
mov
adc
sbb
stos
sbb
push
ret
pop
pusha
mov
push
cli
adc
or
sbb
jl
jb
outs
aas
(bad)
popf
mov
xor
pop
cmps
gs
dec
jmp
xchg
(bad)
push
dec
mov
dec
ins
ins
add
loopne
push
sub
cmp
push
mov
pop
push
xchg
sbb
jbe
cmc
cdq
out
and
loop
test
jae
sub
loopne
mov
es
and
adc
or
sar
adc
jge
xchg
push
call
call
sti
xchg
mov
mov
mov
and
xor
imul
(bad)
sbb
lds
or
xor
jae
iret
in
je
cli
pop
ja
stos
call
inc
shl
sub
inc
shl
sub
in
loopne
lea
add
cdq
sub
imul
out
(bad)
and
popa
inc
shl
pop
pop
les
pop
imul
lds
retf
mov
push
pop
mov
inc
cmp
js
cdq
sar
jge
sbb
and
aas
push
xor
lahf
push
adc
xor
lock
push
push
jno
jnp
mov
mov
adc
xchg
outs
repz
pop
or
ret
stos
ficomp
jns
xchg
or
(bad)
cld
xor
test
in
mov
std
mov
mov
loop
leave
adc
push
cli
outs
push
in
xor
adc
int
cmp
jns
pop
and
sahf
retf
push
ror
ror
mov
adc
and
xchg
fld
lea
mov
stos
retf
repnz
addr16
(bad)
daa
cs
jo
dec
lds
outs
enter
jmp
test
fbstp
push
mov
repnz
or
xor
push
les
jg
pop
ficom
jae
fstp
cmp
into
mov
(bad)
xchg
outs
icebp
test
inc
mov
test
in
dec
shl
xor
mov
sub
fmul
nop
into
cmp
cmc
mov
adc
dec
es
jmp
dec
push
fild
mov
setge
xchg
aam
movs
or
cmps
sbb
(bad)
stc
jl
dec
movs
inc
sbb
xor
cli
cmp
sbb
xor
jae
test
mov
iret
movs
pop
mov
add
(bad)
sbb
dec
mov
sub
pop
sub
mov
mov
stos
add
aas
push
sub
sar
popf
sbb
xor
add
or
ins
add
sbb
bound
pop
push
fwait
jle
pop
xchg
dec
or
cwde
leave
jb
ins
push
out
mov
jmp
sbb
and
cmp
inc
adc
mov
mov
fistp
pop
jo
cmp
pop
jmp
popf
ss
sbb
push
xor
std
or
iret
div
aad
(bad)
lahf
push
stos
repnz
push
rol
outs
das
mov
(bad)
inc
js
test
jb
int3
ja
mov
popa
popa
xor
xor
js
inc
mov
jb
pop
add
xchg
mov
or
dec
movs
sbb
imul
pop
ds
xchg
push
push
jae
jge
mov
xchg
xchg
cmp
aam
jnp
mov
or
test
and
popf
cmp
sahf
ret
hlt
or
dec
test
sbb
or
mov
mov
(bad)
or
sbb
and
stc
push
xchg
xchg
enter
adc
push
retf
xchg
push
and
int
dec
mov
jmp
(bad)
out
mov
adc
cld
push
xchg
jge
outs
mov
sub
dec
(bad)
sbb
movs
bound
sbb
shl
sub
mov
(bad)
mov
aas
and
enter
in
xor
call
mov
push
dec
pop
mov
push
in
sub
lods
ficomp
bound
bound
xlat
or
xor
push
hlt
pop
pushf
sbb
movs
jns
jno
enter
mov
ja
sub
adc
xor
aam
push
sbb
jge
push
shr
xchg
mov
mov
pop
or
mov
inc
stc
mov
popf
xor
scas
outs
adc
dec
lahf
in
push
jle
repnz
jecxz
xchg
jge
lock
in
leave
repnz
push
sub
cs
stc
xchg
das
mov
in
call
scas
and
fwait
stc
clc
int3
mov
frstor
dec
test
inc
in
repnz
cmp
pop
jbe
out
arpl
(bad)
data16
fdiv
adc
and
cmp
leave
(bad)
xor
fs
push
imul
or
mov
xor
pop
fld
lods
push
or
inc
add
pushf
mov
sahf
neg
lea
aad
fld
sbb
inc
inc
sahf
mov
sti
into
or
sub
out
movs
pop
mov
clc
xor
dec
mov
inc
xor
stos
retf
leave
gs
jmp
popa
pop
push
inc
add
inc
cmp
jo
enter
cmp
in
mov
mov
mov
mov
and
xor
adc
push
xor
cmc
dec
sti
shl
inc
movs
(bad)
lock
cdq
jmp
mov
adc
test
imul
push
(bad)
stc
xchg
adc
ja
push
dec
popf
rcr
ss
movs
or
xor
fwait
aam
daa
and
mov
inc
add
push
mov
jmp
in
cli
jnp
xchg
and
jp
add
(bad)
cmp
cmps
or
jb
lock
outs
ja
mov
imul
call
leave
out
push
xor
pop
loopne
push
retf
or
mov
jno
inc
xchg
data16
mov
xchg
ror
lds
mov
dec
pop
call
sar
pop
clc
and
dec
xchg
fmul
xor
jge
cmp
(bad)
adc
jg
add
cwde
mov
ror
dec
dec
mov
in
pop
sbb
shl
push
cmps
jae
pushfw
jnp
xor
add
jle
inc
dec
mov
loopne
xchg
push
xor
scas
push
mov
inc
and
mov
pop
outs
es
add
lds
pop
jne
lds
lods
or
adc
jg
in
mov
adc
out
push
push
nop
das
push
mov
std
scas
add
(bad)
xor
lods
push
aad
mov
pushf
fsubr
mov
adc
and
loope
pushf
in
sbb
daa
fbstp
mov
scas
jo
cdq
mov
adc
scas
repnz
add
pop
scas
imul
cmp
jbe
mov
xchg
ins
jmp
sub
cld
fisubr
mov
push
push
lods
cs
stos
pop
rcr
lds
fmul
dec
mov
and
data16
xor
dec
pop
mov
int
pop
ds
mov
pop
dec
test
xchg
dec
sbb
sbb
call
ror
inc
cs
in
jnp
imul
fstp
and
addr16
(bad)
add
sbb
jp
mov
mov
pop
lock
cmc
dec
inc
rcl
(bad)
out
lock
sub
outs
jbe
push
sahf
imul
dec
jno
xor
xor
pop
mov
jb
mov
sbb
sbb
lock
push
cmp
fstp
inc
sub
and
cmp
mov
out
jmp
mov
mov
xchg
mov
hlt
add
bound
movs
push
out
or
in
mov
fdiv
adc
cmp
adc
add
xor
jae
xchg
mov
sub
jmp
stc
push
adc
test
mov
js
push
call
inc
xor
xor
dec
into
cmp
fiadd
sbb
test
xor
xor
jp
dec
ror
sbb
rcr
ret
ret
xchg
lock
(bad)
adc
dec
inc
fisubr
mov
mov
push
xchg
ret
cmp
gs
jl
hlt
mov
jnp
rcr
(bad)
pop
or
(bad)
frstor
mov
popf
push
out
jg
xorps
inc
scas
pusha
cmp
cli
xchg
dec
leave
push
mov
add
stos
or
and
mov
cmps
mov
jbe
fisttp
adc
repz
sbb
push
in
jmp
sub
push
push
outs
push
adc
inc
retf
cmc
mov
js
or
pop
aad
xor
inc
or
mov
mov
or
fist
mov
cmp
inc
jno
ins
xchg
push
pop
dec
inc
retf
cmp
xchg
addr16
or
not
push
retf
jae
push
(bad)
es
inc
cmp
sub
scas
rcr
and
retf
out
ror
mov
dec
in
out
fs
cdq
pop
add
test
xor
clc
xchg
cmps
pop
mov
sbb
jns
jge
sahf
jno
adc
sub
sub
aad
mov
jno
outs
mov
mov
push
arpl
ret
das
pop
xchg
cmp
daa
jno
ror
pop
shl
aas
rcr
lods
lock
lea
bound
cmc
sbb
jp
call
mov
mov
fwait
add
push
les
lods
dec
mov
jb
dec
ror
push
in
mov
nop
out
jmp
dec
adc
dec
sub
push
jmp
das
fneni(8087
inc
cmp
jno
js
ja
or
ins
mov
mov
shr
xchg
cmps
les
into
and
fs
adc
addr16
sbb
push
dec
push
daa
mov
ds
std
mov
and
mov
cmps
xor
adc
sub
sub
(bad)
adc
cld
in
xor
pop
add
mov
idiv
adc
xor
aas
pusha
retf
inc
cmp
stos
and
scas
mov
outs
push
push
inc
and
hlt
lods
jnp
and
inc
imul
in
out
add
in
mov
xor
push
push
mov
fdivr
xchg
enter
neg
call
pop
cmc
seto
jb
mov
add
xor
std
outs
inc
aas
fstp
aaa
mov
xor
cmp
jo
inc
addr16
xchg
cli
sbb
cli
fsubrp
mov
inc
int
iret
sub
ds
fimul
ficom
das
dec
jno
test
xchg
das
push
jecxz
xchg
or
add
call
mov
(bad)
loopne
hlt
dec
(bad)
clc
mov
ins
jno
dec
shl
repz
das
lds
clts
fwait
mov
inc
xchg
inc
lods
push
popf
push
mov
test
push
sub
ins
jg
data16
mov
inc
popf
popa
pop
mov
xchg
rcl
mov
call
pop
ja
adc
test
xor
fmul
cmp
mov
or
not
or
pop
mov
sar
adc
cmp
jg
and
repnz
fldcw
pop
add
push
lahf
dec
(bad)
test
loop
mov
push
mov
push
cmp
pop
push
aaa
loopne
cmp
mov
fiadd
das
inc
push
sub
xlat
in
push
jbe
enter
shl
(bad)
fld
fst
push
fninit
repnz
mov
sar
jmp
lahf
push
xor
std
ds
fldenv
iret
mov
sti
mov
inc
lds
cld
mov
gs
adc
xchg
sbb
or
add
cmp
push
xchg
pop
jl
(bad)
jmp
mov
je
in
shl
std
cmp
icebp
pop
fistp
pop
clc
movs
shl
mov
sbb
lods
adc
sti
pop
adc
(bad)
test
aam
lea
cmp
and
push
(bad)
mov
int
xor
(bad)
mov
xchg
inc
push
sahf
adc
xchg
and
pop
jmp
mov
lahf
lods
mov
cld
cmp
dec
lds
fild
push
fs
enter
cli
xor
push
enter
sbb
fs
jle
inc
jmp
xchg
aaa
mov
in
aaa
movs
pop
dec
xchg
pop
xlat
fcom
add
mov
and
adc
data16
jnp
out
xchg
cwde
jbe
fbstp
push
(bad)
mov
jnp
and
inc
xlat
out
add
data16
cmps
scas
mov
xchg
jge
(bad)
xchg
xlat
ja
ror
pop
jb
inc
test
(bad)
cmc
in
(bad)
fdivp
loope
jle
scas
in
adc
sbb
es
push
outs
mov
mov
mov
dec
push
mov
xchg
mov
and
xor
xchg
aam
out
std
mov
sbb
loop
pop
push
mov
cwde
add
push
call
cwde
add
sub
mov
add
call
lock
and
jle
or
inc
mov
pushf
lods
cdq
mov
mov
or
fcmovne
in
fdiv
and
popa
pop
mov
xchg
cwde
inc
outs
imul
pop
in
popf
xchg
jg
adc
dec
or
clc
ins
add
push
inc
or
stos
test
inc
retf
lds
xchg
add
jns
iret
and
ret
inc
mov
mov
ja
cdq
cmp
and
popf
cmp
fcomi
fsubr
xlat
ret
jge
mov
jle
jl
mov
popa
xor
add
fistp
jns
out
jae
enter
mov
xchg
aaa
mov
pop
and
retf
test
push
or
inc
jbe
je
(bad)
sub
cwde
movs
adc
cmp
call
push
or
push
pushf
mov
(bad)
cmp
push
mov
jmp
lods
jb
jg
xchg
pop
cmovne
mov
add
jo
(bad)
addr16
pop
fwait
xlat
xor
push
jl
aam
out
pushf
leave
bound
ja
pop
mov
ror
hlt
sub
mov
push
pusha
movs
jbe
pcmpgtd
scas
xor
or
rcr
movs
lock
cmp
cli
aaa
or
or
cli
out
stos
lods
cwde
std
cmp
rcr
push
mov
ret
jne
sbb
mov
fidiv
fld
cwde
jl
dec
loopne
stc
aam
mov
push
xor
bound
xor
test
clc
push
(bad)
xchg
loopne
loop
daa
inc
mov
mov
cmp
add
xor
call
(bad)
xlat
pop
repz
cmp
inc
inc
mov
jns
ds
dec
push
xchg
jecxz
jg
test
dec
lea
mov
push
mov
push
cmp
jmp
sahf
cwde
cmp
fcmovu
push
dec
movs
pop
xchg
and
mov
test
mov
aad
jae
icebp
add
ror
inc
test
call
ins
mov
dec
push
xchg
in
xchg
cdq
pop
push
(bad)
stos
and
ss
dec
or
sub
daa
into
sbb
cmp
xchg
or
xchg
or
ret
outs
lahf
xchg
jmp
and
sbb
bound
sbb
sar
std
lods
ds
cli
xchg
and
mov
pop
aad
scas
pop
mov
addr16
addr16
leave
scas
in
icebp
ins
mov
in
jb
mov
test
int
and
test
outs
push
push
mov
and
mov
dec
cmp
lahf
hlt
mov
add
sbb
and
or
lea
or
shl
dec
out
mov
mov
dec
add
sbb
push
jecxz
leave
jnp
cdq
out
retf
xchg
and
pop
xchg
mov
ins
xchg
cmp
adc
retf
outs
sub
int
ficom
jg
push
aas
fisttp
outs
lea
cmp
or
inc
jbe
scas
std
jmp
popf
ret
test
cmps
sub
sub
sub
pop
out
int
shl
sbb
adc
cmp
outs
adc
jmp
in
jmp
or
arpl
pop
inc
clc
(bad)
mov
inc
jne
pushf
dec
cmp
fistp
add
pop
ins
imul
ins
push
jmp
ror
fmul
xor
adc
adc
cmc
xchg
fbld
mov
xchg
mov
jmp
xchg
sub
mov
inc
sub
(bad)
jg
rcl
mov
push
pop
loop
ins
hlt
ror
div
xor
daa
mov
div
mov
mov
sbb
dec
xor
aas
scas
and
out
and
popf
jmp
xchg
dec
gs
cld
mov
push
sub
ss
sub
cmp
push
mov
and
dec
pusha
sbb
leave
xor
push
xchg
pusha
test
jecxz
sahf
(bad)
stc
xor
jmp
xchg
push
ins
scas
mov
gs
retf
pop
ins
xchg
xchg
mov
outs
dec
mov
cmps
mov
retf
or
mov
(bad)
sti
mov
lods
mov
cld
xchg
vmovdqu
mov
aaa
popa
lods
sub
and
adc
adc
fwait
adc
adc
les
xchg
call
sub
repz
je
xchg
add
jnp
retf
dec
pop
in
sub
cmp
stc
(bad)
jp
jl
mov
jg
imul
sub
shl
push
or
jbe
mov
rol
cli
cmps
add
or
inc
xor
fldcw
adc
adc
mov
fstp
pop
sub
int
adc
and
retf
movs
pop
ins
push
out
inc
sub
arpl
ja
sti
(bad)
adc
adc
pop
cmp
out
inc
sub
mov
ret
inc
inc
dec
sbb
(bad)
pop
inc
mov
sbb
adc
lods
es
mul
xor
xchg
(bad)
xchg
xchg
stos
test
in
scas
(bad)
xchg
mov
adc
pushf
add
(bad)
pop
fcomp
cmp
push
outs
push
test
test
pop
jmp
cmp
je
icebp
(bad)
sbb
sub
ds
xchg
pop
and
cli
icebp
vmread
je
inc
or
sbb
adc
icebp
dec
cmp
aas
mov
dec
leave
hlt
adc
dec
pusha
int3
xor
loope
sub
push
ins
jns
ins
inc
jnp
cli
add
and
arpl
popa
sub
icebp
cwde
mov
pop
aas
fidiv
lods
xchg
or
add
sub
ss
jo
pushf
sub
loope
(bad)
psllq
pop
(bad)
mov
test
push
mov
inc
or
xchg
out
aaa
ds
dec
scas
ficom
fistp
lock
div
push
scas
jne
scas
retf
cld
out
cmp
add
rcr
nop
xlat
jmp
jl
mov
mov
jnp
fwait
jge
js
je
inc
lods
(bad)
push
sbb
mov
jno
jnp
fcomp
icebp
lock
retf
mov
or
dec
sti
fwait
inc
loop
in
dec
adc
pusha
out
lods
xchg
jno
ret
cli
adc
mov
push
(bad)
and
(bad)
jecxz
xor
push
ds
mov
pop
fwait
mov
test
mov
inc
inc
mov
xor
or
sar
adc
sti
adc
cmc
mov
stc
xor
lea
mov
(bad)
lods
cmp
jb
sub
jne
aad
pop
sbb
sar
mov
fwait
mov
rcl
jno
jne
int
dec
outs
pop
mov
cmp
pop
or
(bad)
pop
movs
outs
int3
cwde
(bad)
jnp
pop
dec
std
bound
addr16
int3
sub
inc
aas
pop
xlat
hlt
adc
loope
lock
jbe
loop
data16
out
les
xor
sub
adc
dec
push
int
pop
mov
jg
cmp
jge
push
add
ror
adc
cmp
xchg
std
shr
push
pop
inc
setbe
adc
imul
out
into
cdq
sahf
and
stos
mov
sbb
jle
jno
cmp
adc
aad
xchg
xchg
cmp
hlt
pop
cli
pop
mov
arpl
enter
popf
xchg
jle
sub
xor
inc
neg
mov
jnp
cmp
push
retf
jnp
dec
push
sbb
mov
ds
aam
jp
retf
call
ds
and
mov
mov
fdivr
and
pushf
ds
xor
cmps
loop
sub
xor
outs
xchg
sub
mov
aaa
pushf
in
repz
(bad)
jb
adc
into
dec
sub
push
mov
push
mov
mov
lahf
in
imul
popa
xor
jge
sahf
xor
ret
mov
mov
out
jmp
dec
(bad)
jns
sahf
hlt
inc
out
sub
dec
les
mov
test
sti
push
push
cmp
enter
test
pop
mov
and
sub
popa
adc
ja
bound
scas
sahf
jl
js
cmp
push
sbb
lods
and
pop
aas
int3
mov
sbb
sub
cld
int
call
xlat
jmp
and
mov
push
ucomiss
fld
jecxz
ret
imul
gs
scas
sub
repnz
pop
hlt
stc
stc
mov
xchg
cmp
lods
btr
popa
and
sub
js
adc
and
cmps
fwait
scas
fiadd
(bad)
js
js
aad
or
mov
stos
jb
popf
les
imul
out
js
mov
js
push
mov
in
dec
lahf
ret
sub
clc
adc
(bad)
pop
sbb
test
mov
and
sub
jge
cmp
ret
xor
add
int3
sub
inc
stos
iret
out
stos
cld
js
jecxz
dec
jle
fmul
setp
sub
nop
jns
jne
sti
ds
push
loop
das
(bad)
(bad)
add
out
popf
addr16
icebp
fcom
cmp
dec
sub
(bad)
push
fidiv
adc
dec
aam
push
xchg
sub
sbb
inc
add
cmp
nop
mov
test
aaa
in
sar
loope
and
and
sub
(bad)
repz
icebp
mov
movs
repz
in
call
rcr
nop
xor
sub
rcl
mov
movs
or
nop
or
into
cmp
xchg
dec
inc
(bad)
mov
hlt
sub
sbb
mov
mov
pop
fstp
xchg
loope
sbb
scas
mov
leave
pop
sub
cld
mov
mov
int
push
test
clc
xor
dec
fs
ins
sbb
int
or
jo
int
fimul
push
ror
repz
xchg
inc
sti
inc
adc
fmul
jae
and
icebp
mov
cmp
lock
xor
push
push
sub
repnz
out
in
imul
jecxz
mov
outs
loope
stos
out
test
sbb
xor
aaa
mov
icebp
lods
fisttp
lds
xor
push
sub
out
cmp
mov
retf
dec
cmp
in
aas
mov
bound
or
imul
adc
ins
jecxz
xchg
jo
lea
in
out
bound
xor
dec
stc
imul
xor
test
and
mov
inc
rol
mov
mov
sahf
jge
(bad)
repz
ret
dec
jle
xor
sbb
cmps
or
xor
xor
(bad)
call
lahf
push
jb
stos
pop
ret
mov
and
jmp
xchg
jno
cmp
mov
or
xchg
mov
popa
inc
push
push
mov
jg
inc
lahf
pop
cmp
xchg
mov
icebp
or
mov
add
mov
inc
dec
dec
loop
push
loopne
bnd
test
mov
mov
jmp
sub
sahf
(bad)
es
mov
ret
in
jl
test
or
jmp
(bad)
dec
popf
jno
xor
mov
sub
idiv
in
iret
xor
jl
aam
sbb
cli
mov
(bad)
mov
pop
test
fcom
cmp
imul
cmp
repz
stc
pop
pop
in
(bad)
and
imul
xor
aaa
mov
fnstsw
inc
push
lahf
adc
repnz
adc
push
sti
sub
(bad)
in
cmps
sub
jle
dec
jle
or
pushf
mov
add
xchg
cdq
ret
push
sub
nop
rcr
loope
adc
dec
(bad)
push
in
and
sti
push
into
repz
loopne
lahf
inc
inc
test
test
xchg
and
xor
sbb
retf
push
add
in
jnp
sbb
or
mov
mov
mov
jne
daa
push
xor
mov
(bad)
icebp
mov
dec
cmp
dec
pop
test
and
jnp
and
jg
mov
xchg
and
push
scas
(bad)
arpl
mov
sub
lods
not
jno
ins
mov
mov
shl
pop
addr16
icebp
mov
gs
pushf
push
mov
cs
cmp
sbb
in
xchg
sub
popa
mov
push
fucomip
leave
xor
push
test
sbb
or
(bad)
pop
mov
sbb
outs
ss
out
(bad)
loope
push
mov
and
push
sub
push
xor
arpl
or
or
jnp
xlat
retf
mov
fwait
addr16
lods
adc
jp
xchg
inc
(bad)
jae
pusha
push
ret
fucomip
push
inc
out
loop
aad
movs
or
pop
xchg
jmp
sti
pop
lahf
out
sahf
xchg
(bad)
fnstcw
loopne
dec
sbb
or
jae
gs
inc
test
mov
mov
or
jl
shl
xor
movs
or
sbb
ffreep
mov
add
imul
(bad)
push
sub
adc
es
les
inc
sbb
pop
xchg
sub
shr
add
loope
mov
ret
das
aad
dec
xlat
add
push
pop
cmp
jmp
lods
ret
mov
fwait
dec
stos
loope
(bad)
jle
pop
inc
xchg
imul
mov
mov
imul
xor
pusha
out
das
mov
cmp
xchg
imul
rcr
pavgb
jp
cmp
fstp
pop
inc
pop
aam
mov
fmul
mov
xchg
jno
sub
stc
jb
out
in
mov
cdq
ret
lea
mov
add
dec
jg
add
mov
aas
mov
lahf
push
jle
xchg
ss
in
mov
mov
or
and
mov
fdiv
jno
xchg
jae
out
add
pop
or
add
cmp
xor
push
mov
inc
mov
ret
iret
cld
inc
fs
clc
pop
sti
sub
xor
mov
retf
pop
std
aad
and
ins
lods
cmp
mov
pop
imul
pop
inc
xchg
jnp
pop
add
retf
ret
call
cli
push
and
adc
mov
and
mov
aaa
loopne
adc
pop
sub
inc
lahf
xchg
mov
in
cwde
xlat
inc
(bad)
bound
sbb
cli
cwde
fdivr
icebp
pop
push
jmp
and
shl
les
and
push
and
shl
mov
aas
pop
mov
jns
ja
out
adc
xchg
xchg
icebp
paddb
inc
or
mov
dec
arpl
out
call
dec
fidivr
sub
xchg
jne
push
pop
shr
in
nop
aas
in
push
das
adc
adc
es
pop
shr
imul
jp
or
out
inc
inc
jns
in
enter
and
aaa
pop
mov
sub
pop
inc
cmp
or
lods
xor
cmps
sub
cwde
mov
cmp
push
and
cmp
xchg
xchg
(bad)
aaa
cmp
iret
mov
pusha
pop
mov
out
rcr
sbb
sub
daa
pushf
mov
mov
loope
pop
aas
mov
stc
lds
jnp
out
inc
test
mov
idiv
cmp
stos
pop
fs
shl
mov
ret
inc
ja
xchg
xchg
xchg
mov
pop
out
lock
(bad)
addr16
imul
inc
cmp
push
sub
movs
movs
clc
jle
test
and
stos
fld
xchg
add
loop
mov
sub
xlat
leave
xchg
lods
jmp
bound
mov
push
mov
mov
add
mov
pop
shl
fldcw
fst
jmp
stos
(bad)
and
pop
sahf
mov
test
add
fs
ins
ds
mov
push
movs
ins
pop
ins
ins
or
sub
adc
outs
or
xor
cli
nop
lods
inc
sbb
repnz
lods
dec
cld
inc
adc
mov
enter
pop
cmc
push
sbb
inc
push
pop
arpl
aam
push
cs
xor
mov
outs
or
push
jbe
mov
fld
out
sub
and
add
pop
jmp
or
rol
sar
adc
adc
xor
jnp
inc
stos
sbb
mov
cld
xchg
fcmovb
sbb
scas
cwde
inc
stos
in
imul
je
out
jmp
repz
aad
mov
mov
xlat
lea
jp
pop
jmp
mov
dec
pop
xchg
add
mov
fwait
fs
push
or
mov
sbb
jp
push
sbb
and
mov
in
mov
mov
int
out
cmp
scas
iret
pop
bound
sar
push
scas
bound
lods
mov
inc
(bad)
xchg
mov
out
scas
dec
arpl
repnz
pop
int3
cdq
jecxz
jo
sub
mov
pop
cmp
cld
hlt
pop
sub
rcl
(bad)
in
dec
(bad)
xor
xchg
ret
std
outs
sub
sbb
cmc
add
mov
and
icebp
repz
cmp
jae
(bad)
ins
das
sbb
mov
je
inc
mov
jecxz
or
add
adc
pop
loope
test
in
push
push
mov
addr16
mov
jp
dec
aas
push
adc
daa
xlat
lods
jno
mov
mov
sub
loop
jae
pop
sub
jnp
hlt
call
(bad)
adc
xor
lock
pop
mov
fs
pop
call
rcr
repz
jle
mov
pop
ret
pop
je
dec
jb
imul
mov
lahf
jg
add
xchg
jo
ja
rcl
dec
into
xor
adc
xchg
cmp
fst
adc
sbb
sbb
aad
cdq
sub
or
pop
jno
lock
mov
inc
jg
rol
sub
imul
push
fnstsw
inc
enter
dec
ret
add
scas
dec
adc
cli
add
sbb
aaa
inc
fsubr
add
and
js
enter
mov
mov
jle
pop
rol
dec
or
not
or
jmp
scas
jno
imul
dec
jns
scas
sbb
mov
popf
mov
ja
mov
push
and
int3
pop
inc
pop
sub
int
pusha
jmp
cmp
lock
mov
ss
ret
test
or
je
lds
mov
shr
fmul
and
xor
ret
js
xchg
sbb
cmps
cld
popf
mov
into
call
mov
data16
xor
jns
inc
pop
mov
push
test
mov
dec
retf
cmp
pop
pushf
lea
pop
pop
cmp
sti
clc
daa
mov
mov
mov
jmp
cmp
pop
push
push
fsubr
sub
cmp
cdq
aaa
pop
loopne
in
sub
inc
mov
pop
inc
adc
mov
in
sub
test
or
loop
les
adc
mov
push
loop
sub
imul
mov
in
adc
outs
sysexit
inc
push
shl
dec
xchg
xor
iret
mov
mov
push
inc
sub
pop
movs
or
jo
mov
jecxz
inc
xchg
stc
mov
adc
(bad)
call
fbstp
and
pop
cwde
jns
into
adc
mov
mov
das
cmp
pusha
cmps
sub
xchg
or
hlt
outs
std
adc
(bad)
sbb
sbb
clc
pop
xor
inc
cs
jecxz
push
test
ror
call
and
mov
sbb
(bad)
pusha
mov
test
xchg
cmp
pushf
hlt
xchg
std
int
adc
test
cmp
int3
leave
xor
jge
icebp
mov
jle
gs
mov
or
xchg
jle
mov
gs
mov
fcmovnbe
lahf
sbb
(bad)
call
add
inc
into
push
mov
loope
gs
or
retf
mov
stc
push
dec
add
fidiv
jbe
dec
aad
add
clc
(bad)
mov
outs
inc
pop
popf
popa
sar
outs
ins
jno
lds
xor
ret
dec
xor
jg
or
sub
outs
loop
jno
mov
push
es
dec
jp
inc
mov
mov
into
jle
mov
(bad)
push
cdq
cmp
xchg
jbe
push
jg
push
cmp
sar
iret
sub
mov
push
repz
out
aas
idiv
fs
movs
push
imul
mov
cmps
pop
pop
gs
xlat
inc
or
scas
push
cs
clc
mov
cmp
nop
cmps
in
add
je
cmp
xor
xchg
test
push
movs
jmp
out
sti
xchg
sub
xlat
cmp
push
push
clc
mov
in
aas
xor
test
xor
mov
mov
iret
and
jns
rcr
sub
pop
ret
retf
or
and
or
pop
dec
pop
push
repz
jmp
sahf
push
scas
xchg
test
push
mov
packuswb
xchg
mov
leave
or
jbe
clc
inc
call
mov
cmp
test
nop
(bad)
imul
jmp
push
lods
adc
js
xchg
mov
dec
into
in
or
add
scas
inc
xor
pop
jecxz
sar
lds
xlat
repz
cmp
adc
clc
xchg
daa
stc
fimul
or
hlt
inc
mov
or
sub
daa
pop
mov
xor
mov
sbb
adc
and
xchg
cmp
mov
adc
jbe
or
popa
adc
(bad)
jl
lea
jbe
fcomi
bound
je
add
mov
repnz
and
ret
jecxz
xchg
scas
and
daa
push
paddsw
cli
mov
add
(bad)
mov
sbb
jne
(bad)
imul
add
mov
mov
enter
inc
pop
mov
xor
pushf
imul
mov
ss
and
push
add
je
cmp
adc
hlt
sub
int
sahf
xchg
iret
jne
jno
add
sti
mov
fdivp
clc
xor
inc
xchg
xchg
mov
or
aas
mov
jbe
sahf
xchg
iret
mov
cmps
idiv
jge
cs
push
jns
sub
sub
fdivrp
imul
xchg
pop
xchg
mov
cmp
loopne
jae
jns
or
test
mov
mov
(bad)
or
cdq
jo
loop
xchg
pushf
scas
mov
shl
lock
je
dec
mov
pop
adc
push
je
fiadd
movs
dec
int3
cmp
push
xchg
mov
stc
pop
inc
mov
dec
mov
cld
mov
jo
xor
ins
aad
shl
mov
cmps
aam
daa
sbb
idiv
push
push
xor
jmp
sbb
push
sub
or
mov
ja
sbb
in
not
into
push
loopne
sub
mul
das
(bad)
cmps
and
ficom
push
jnp
dec
ret
pop
cs
les
scas
inc
pushf
shr
nop
dec
pop
push
xor
adc
push
test
sbb
jle
push
in
int
arpl
icebp
mov
lods
sahf
cmps
inc
mov
cmc
jle
and
sub
loopne
cmp
and
mov
mov
test
xor
fdivrp
es
jbe
push
scas
enter
mov
lds
and
pop
repnz
(bad)
ja
inc
mov
pushf
(bad)
mov
ja
aad
les
loope
cmp
or
adc
jno
or
push
inc
sub
in
pop
out
in
lods
dec
movs
inc
in
int3
fistp
outs
push
jecxz
or
arpl
cs
jne
aad
pop
ins
jmp
daa
xor
and
sbb
push
loop
adc
cmps
pop
mov
jns
ficom
js
xor
sbb
adc
add
mov
sub
mov
es
sub
std
repnz
xor
and
mov
sub
add
add
jp
ins
mov
adc
int3
pop
shl
push
pop
(bad)
inc
lods
and
ins
out
inc
loopne
(bad)
dec
scas
sbb
cmc
dec
pop
jb
cmps
mov
aas
ja
or
jo
jbe
inc
sub
jb
je
and
dec
ins
sub
imul
mov
xchg
shr
jno
or
enter
or
fidiv
push
jecxz
xchg
push
sbb
pop
and
sbb
daa
movs
stos
addr16
or
cmps
dec
sub
shl
push
pop
xchg
pop
movs
fistp
fnstcw
gs
mov
jg
mov
jnp
hlt
sub
push
mov
xor
ds
lock
xchg
out
(bad)
shl
dec
pop
(bad)
mov
xor
cli
(bad)
xchg
mov
sub
cmp
jp
and
ins
aas
jecxz
jo
xchg
add
call
idiv
dec
adc
aam
fcom
les
in
int
mov
jmp
sbb
retf
push
loopne
fisttp
push
pop
addr16
add
inc
jno
sub
inc
movs
dec
push
mov
push
push
sbb
fild
cmp
ja
pop
fwait
inc
loopne
(bad)
std
sub
mov
jp
mov
pop
mov
mov
out
cmp
mov
xor
mov
adc
jmp
nop
sub
cmp
in
or
mov
popa
xor
pop
stos
xchg
loopne
aam
nop
pop
fcom
sti
mov
popa
xchg
fidivr
sub
inc
inc
mov
sub
mov
loop
add
fstp
cmp
jmp
push
or
movs
clc
lock
ds
adc
add
add
cmp
ins
push
nop
outs
jae
popa
xchg
mov
inc
icebp
push
test
outs
shl
stos
pop
jmp
(bad)
xor
sub
les
mov
sub
mov
xchg
xor
mov
and
add
xor
sub
add
stos
push
mov
inc
pop
pop
(bad)
clc
cmp
in
and
cmps
dec
test
sar
repz
mov
ins
imul
aas
movs
ins
push
mov
or
bsr
push
aam
jno
push
or
xchg
jnp
shr
rcl
icebp
repnz
(bad)
outs
ror
jl
out
jmp
scas
fbld
xchg
jl
pop
out
mov
pop
pop
add
loopne
fcom
pop
inc
inc
dec
xor
rcr
(bad)
push
mov
xchg
xchg
dec
(bad)
and
aaa
ror
sub
retf
mov
dec
call
pop
or
outs
xchg
(bad)
js
add
movs
cmp
aam
push
pop
jo
scas
repz
sbb
lahf
mov
inc
shl
push
fisttp
adc
sub
and
(bad)
jg
ja
mov
(bad)
mov
or
jmp
bound
std
or
mov
jmp
aad
test
jnp
fcomip
iret
jmp
leave
jp
popa
jmp
mov
fwait
lock
and
cmp
aas
in
and
loop
in
lock
cs
imul
jb
push
mov
shl
paddb
mov
lahf
cmove
lds
mov
or
stc
ret
jg
inc
sub
es
mov
inc
jno
cs
cmp
lods
xchg
data16
mov
add
fsub
jmp
cwde
movsx
push
or
adc
bound
fbld
(bad)
jle
std
movsx
cwde
and
jg
fstp
cmp
adc
push
mov
jbe
mov
loope
fdiv
jns
stos
cli
dec
mov
(bad)
jmp
and
xchg
fldcw
sub
inc
and
or
or
arpl
sbb
adc
movs
aam
sbb
cmps
xchg
cdq
icebp
ins
cdq
repnz
fwait
adc
rol
movs
test
nop
ja
cmp
or
push
jb
adc
(bad)
mov
lods
adc
pop
neg
loop
push
mov
sub
push
(bad)
or
and
and
mov
jmp
bound
pop
mov
cld
sub
cli
ins
mov
xlat
push
aas
test
int3
pusha
mov
bnd
adc
push
(bad)
mov
cmp
cmps
push
xor
xchg
fistp
sub
fcomp
int3
(bad)
shl
cmp
sbb
add
jbe
ret
outs
jle
mov
xchg
fdiv
shr
loope
and
cmps
les
dec
pop
scas
shl
in
pop
jmp
shl
jp
div
gs
int3
add
push
jo
jne
sub
pop
test
loop
ins
push
cld
sub
cmp
dec
jmp
or
sar
rol
jae
mov
pop
icebp
ret
xchg
pop
ins
push
adc
dec
mov
pop
test
and
jae
adc
mov
cmp
add
rcl
add
js
int
push
and
mov
rcl
push
and
mov
mov
xor
or
outs
data16
cmp
xchg
jbe
rcl
out
sub
retf
xchg
and
fbld
dec
dec
cmp
retf
pop
jmp
shr
sahf
icebp
pop
int3
jo
rcl
es
icebp
sub
retf
cmp
outs
xlat
lods
aas
xchg
addr16
jp
mov
out
inc
mov
jo
rcl
pop
loop
fcomp
sar
pop
pop
mov
push
scas
stos
mov
neg
(bad)
jo
or
push
neg
enter
out
pop
int
sub
lock
xchg
in
and
or
mov
jmp
stc
test
dec
inc
test
shl
cmp
int3
xchg
sbb
call
inc
jle
pop
or
jnp
and
mov
std
sti
mov
or
(bad)
mov
sahf
addr16
cmp
xchg
mov
mov
test
dec
pop
jno
cs
mov
mov
call
inc
ror
mov
xchg
daa
and
jle
or
lods
cmps
ins
mov
data16
js
mov
or
mov
jnp
cmp
daa
cmp
xlat
mov
das
inc
loop
cmc
adc
jmp
in
dec
mov
mov
push
cmps
ins
les
mov
add
cmp
or
add
inc
out
movs
or
dec
pop
add
popa
ror
jbe
push
dec
add
cmc
adc
retf
adc
and
loope
mov
jle
add
sbb
sbb
cwde
loopne
pop
or
mov
sar
xchg
sti
push
mov
jg
xchg
jmp
sbb
sar
lods
retf
sub
xor
sbb
int3
mov
cmps
dec
xor
push
cmp
mov
push
jge
sar
fwait
daa
push
mov
or
cmp
or
ins
shl
pop
mov
in
push
adc
xchg
adc
pop
ins
cdq
sti
mov
pushf
movs
jae
mov
call
xchg
call
push
stc
mov
ret
(bad)
idiv
push
das
inc
mov
xor
cld
jmp
add
inc
ret
sbb
je
jg
ret
icebp
cmp
ret
scas
push
lods
sub
sti
js
xor
repnz
fisubr
dec
inc
pop
inc
jmp
jge
cpuid
es
call
push
jge
sub
dec
int3
scas
ins
xchg
or
sbb
dec
jbe
jmp
call
lds
lahf
scas
or
shr
dec
in
mov
icebp
mov
pop
aad
jae
fwait
cmp
sbb
loope
clc
shl
push
jno
jecxz
ret
outs
sbb
xchg
push
mov
push
mov
imul
push
imul
push
sub
repnz
or
out
push
cmps
mov
hlt
sbb
cmp
and
aaa
sbb
push
xlat
(bad)
sbb
jecxz
js
(bad)
jns
mov
jp
mov
sub
cmp
add
jns
cmp
lea
mov
(bad)
jnp
jo
mov
jae
pop
clc
xlat
ss
cmp
xchg
(bad)
xor
outs
sub
int
sub
pop
xor
jns
in
xor
sbb
rcl
fnsetpm(287
mov
jp
cmc
mov
shl
cmp
cdq
jmp
shl
and
sub
call
pushf
xchg
arpl
push
(bad)
push
and
aaa
sub
xchg
sbb
xchg
div
and
test
xchg
js
or
(bad)
fst
jmp
arpl
sar
les
pop
std
jno
push
aam
in
cmp
push
jmp
xchg
sbb
mov
loope
addr16
sub
test
mov
scas
ror
popf
cdq
and
imul
push
jmp
pop
leave
fwait
addr16
adc
pusha
mov
dec
pop
test
jmp
xor
js
fs
mov
scas
mov
add
mov
lds
and
pop
imul
(bad)
call
push
inc
mov
cmc
inc
or
ret
gs
push
mov
push
xchg
mov
daa
lahf
push
stc
jle
sar
je
push
repnz
adc
push
mov
loope
dec
fiadd
cmp
imul
pop
push
lds
call
fucomp
into
dec
jl
pop
dec
adc
int3
int
scas
cs
pop
mov
arpl
lods
sbb
push
inc
inc
in
in
mov
inc
cmp
and
sti
xchg
adc
repz
mov
dec
fist
sbb
and
addr16
repnz
mov
mov
imul
mov
retf
mov
in
scas
loopne
xchg
(bad)
mov
fist
movs
outs
push
test
sar
mov
mov
daa
out
xchg
cmps
sbb
pop
cmp
icebp
fistp
add
dec
push
xor
sbb
stc
jne
rcl
cmp
pop
cmp
cld
add
mov
push
xor
outs
adc
retf
loope
fstp
adc
xor
pop
xchg
js
aas
dec
or
sub
or
mov
mov
dec
xchg
mov
add
mov
loopne
xchg
test
cs
push
jp
mov
mov
and
pushf
sar
push
movs
and
or
fcom
add
sar
test
dec
mov
sub
jno
scas
pop
push
icebp
(bad)
(bad)
or
leave
movs
mov
(bad)
fnsave
cmc
out
fistp
int3
jnp
data16
loop
inc
fist
dec
mov
xchg
stos
icebp
out
(bad)
(bad)
inc
dec
and
mov
and
call
push
jge
addr16
mov
or
jmp
sub
out
or
daa
jmp
sar
jg
jnp
dec
lock
dec
and
and
fistp
push
push
outs
adc
data16
sub
mov
(bad)
iret
idiv
mov
fidiv
dec
sub
idiv
lods
push
mov
es
mov
xchg
test
lods
movs
out
mov
push
xchg
pop
push
pop
ds
push
sbb
scas
ss
xor
dec
mov
and
hlt
(bad)
adc
push
mov
jmp
add
inc
out
icebp
mov
pop
inc
pusha
mov
adc
mov
enter
xchg
sbb
dec
call
ins
sbb
ds
push
ret
fmul
fcom
mov
jbe
pop
fwait
sbb
enter
stc
cwde
xchg
mov
pop
fwait
ins
fst
mov
ins
xchg
inc
fcmovnbe
pop
data16
(bad)
ficomp
inc
ret
(bad)
or
adc
jns
dec
fs
lods
(bad)
sub
or
mov
cmp
xchg
lea
ja
call
lods
int
mov
mov
push
in
add
push
adc
retf
mov
stc
lods
push
call
jp
jbe
popa
pop
mov
out
cld
fadd
add
and
mov
push
mov
xchg
movs
out
and
ret
sbb
pop
(bad)
ret
(bad)
rcl
lods
mov
add
std
loop
daa
pushf
or
shl
xchg
pop
ret
and
jecxz
stc
mov
gs
gs
sbb
and
aad
mov
pop
lods
add
mov
fstp
mov
out
fsubr
push
dec
cmp
adc
je
repz
outs
jl
daa
inc
gs
call
adc
add
inc
sahf
inc
pusha
push
mov
fisub
xchg
pop
mov
or
jg
dec
mov
mov
sar
cmp
(bad)
pop
mov
cli
jnp
sbb
les
cmc
inc
repz
pop
adc
(bad)
rol
mov
fisttp
stos
pop
(bad)
fcom
push
inc
js
inc
mov
sub
repnz
xchg
sub
dec
mov
pushf
xchg
jo
pushf
push
jmp
mov
push
clc
out
mov
data16
hlt
test
retf
pmullw
js
(bad)
mov
pop
jnp
scas
push
or
ret
daa
and
dec
mov
cmps
call
shl
add
xor
jae
in
sahf
mov
mov
jmp
das
push
lahf
loopne
sub
scas
aam
pop
jmp
lea
push
dec
and
adc
mov
jbe
fsub
sar
sub
push
movs
into
add
sub
fwait
mov
or
idiv
mov
mov
xchg
cmp
sti
(bad)
fcom
cmovge
inc
push
pop
cmp
mov
pop
punpckldq
pop
cmp
cmp
mov
add
xor
das
out
xor
mov
mov
sub
xchg
cmp
inc
neg
and
and
mov
cmp
cwde
imul
add
test
sbb
sbb
rcr
clc
sbb
xchg
xor
jmp
ret
pop
add
mov
int
popa
(bad)
push
xor
in
movs
mov
push
add
mov
or
push
jp
mov
cmp
lods
iret
mov
and
and
mov
mov
inc
outs
std
adc
dec
or
pop
add
push
pop
fwait
and
jbe
sbb
ins
sbb
and
(bad)
(bad)
cmc
iret
test
mov
dec
cmp
cmp
cmc
fld
cdq
xchg
xchg
jecxz
popf
push
scas
xchg
div
inc
sbb
dec
not
scas
ins
xchg
(bad)
mov
ror
push
xor
test
hlt
and
das
or
jle
call
(bad)
shl
dec
pop
dec
cmc
add
imul
repnz
or
shl
add
lahf
inc
loop
dec
loop
test
scas
leave
dec
xchg
test
pop
lock
xor
cmp
fnsave
mov
mov
fdivr
jbe
dec
pop
test
jmp
imul
xchg
jmp
pushf
in
dec
ss
dec
xchg
and
icebp
add
mov
push
leave
mov
shl
(bad)
cmps
dec
xor
adc
mov
xchg
pop
and
clc
popf
cmps
ins
aad
popf
mov
push
imul
aaa
mov
rcr
or
pop
mov
fld
and
dec
push
push
cwde
ret
popa
mov
sub
sub
xchg
mov
std
int3
mov
(bad)
icebp
pop
ret
sbb
bound
pop
addr16
mov
inc
shl
pop
mov
and
(bad)
shl
jnp
repz
les
div
inc
jmp
(bad)
push
or
xor
jmpw
mov
jmp
dec
addr16
pop
dec
movs
out
pop
sbb
int
stc
xlat
scas
int3
or
int
stos
lods
je
rcl
xchg
gs
mov
js
es
icebp
sti
mov
fdiv
shrd
pop
sub
or
mov
stos
aas
and
or
and
test
or
sbb
es
stc
jl
scas
addr16
jnp
or
push
bound
icebp
cmps
mov
ja
xlat
jp
test
add
dec
fldenv
pop
jl
int
sar
add
ds
cmp
nop
sbb
ss
hlt
dec
outs
(bad)
mov
cmp
retf
inc
or
pop
or
imul
and
test
cmc
sub
jns
inc
dec
scas
movs
cwde
mov
aas
iret
add
repz
and
and
es
fwait
pop
cmps
adc
cwde
pop
enter
sar
inc
out
add
add
mov
or
jnp
fisub
bswap
mov
neg
jnp
cwde
mov
enter
ret
add
mov
sub
bound
dec
cmp
pop
jo
or
mov
(bad)
stc
jle
adc
adc
sub
sub
retf
mov
fstp
inc
enter
idiv
icebp
or
das
add
push
call
cmp
mov
pop
mov
jbe
js
sti
jo
mov
call
jbe
push
lock
repnz
jg
or
sub
ret
cmp
imul
in
iret
hlt
cld
mov
push
mov
pop
sbb
inc
ret
mov
cdq
lahf
inc
sub
mov
out
jl
pop
(bad)
mov
sbb
sub
xor
mov
movs
jno
int
ins
ds
push
xlat
in
outs
fs
mov
jecxz
ret
in
pop
jae
retf
adc
cwde
das
inc
(bad)
out
or
(bad)
in
jmp
cld
fs
std
xrelease
mov
xchg
adc
(bad)
push
mov
idiv
xor
cmp
aas
xor
test
xchg
pop
mov
cs
sbb
or
inc
lods
and
aam
inc
mov
icebp
div
mov
cmps
pop
push
movs
xchg
lahf
sar
pop
test
data16
inc
sbb
mov
inc
out
adc
xchg
or
jbe
adc
mov
fnstsw
imul
adc
fadd
jg
outs
cmp
cmps
ins
or
sbb
jle
cdq
mov
push
xor
icebp
jge
lods
xchg
xor
cs
or
jo
data16
xchg
inc
mov
sahf
shr
push
retf
mul
jns
xor
push
jno
adc
mov
call
pop
jne
cmc
pop
stc
jecxz
rol
(bad)
mov
inc
ins
sbb
pop
sub
inc
stos
js
neg
mov
mov
mov
dec
sbb
pop
out
dec
xor
cmp
inc
daa
push
adc
js
mov
(bad)
pop
lds
jo
xor
aaa
fst
or
ja
rep
and
sbb
(bad)
mov
pop
in
xor
dec
mov
test
cmp
nop
mov
xor
shr
fsubr
and
add
mov
dec
sbb
ds
mov
iret
pop
gs
jle
push
test
xchg
mov
inc
imul
rcr
ret
jo
aaa
aaa
cmp
push
les
xor
mov
add
xchg
call
daa
aas
xchg
push
nop
xchg
fsubr
(bad)
jmp
mov
mov
sub
loop
lods
add
ret
mov
ja
lds
dec
pop
aam
mov
pop
xlat
jl
inc
mov
sbb
sahf
shl
pop
or
mov
(bad)
(bad)
jmp
ins
popf
clc
pop
sub
lds
and
test
test
and
lock
shr
add
and
dec
dec
jg
mov
adc
popf
push
imul
imul
dec
int
inc
sahf
sar
xchg
mov
jae
dec
div
or
inc
cmp
inc
and
js
or
sbb
hlt
scas
dec
pop
mov
fistp
mov
data16
mov
jns
fidiv
pop
and
sbb
cmps
adc
mov
packssdw
pop
pop
test
cli
into
(bad)
ds
sbb
iret
ret
sti
outs
or
jg
(bad)
dec
xor
loop
shl
adc
push
lods
daa
mov
inc
fbld
iret
add
inc
mov
data16
dec
shl
fwait
sbb
ror
mov
ret
iret
or
fs
pop
cwde
jle
repz
push
fs
cmp
loopne
xchg
gs
inc
mov
xor
out
push
adc
sbb
sub
fwait
test
sbb
clc
xchg
cmp
lea
out
outs
dec
(bad)
fistp
pop
shl
jp
adc
push
or
mov
(bad)
push
cmc
int3
cmp
pop
mov
fs
adc
jns
mov
(bad)
push
outs
mov
int3
jl
jb
add
mov
fisubr
xor
data16
sub
xchg
inc
push
xchg
sbb
loopne
imul
xor
sbb
sbb
add
pusha
sbb
sbb
sbb
or
call
push
inc
inc
in
lock
dec
adc
mov
loope
test
bswap
fsubr
retf
fdiv
ret
lods
stos
neg
xor
and
lods
push
test
cmp
call
ret
inc
jnp
out
mov
jb
push
lods
fcom
add
test
mov
cdq
jnp
cmp
xor
bound
test
in
inc
jb
in
inc
(bad)
ds
adc
sbb
imul
add
out
push
repnz
mov
and
ins
jmp
mov
jl
adc
push
adc
mov
cdq
leave
les
xchg
mov
mov
or
xchg
pop
jne
or
stos
xor
push
xchg
lds
outs
cwde
inc
pop
dec
xchg
cmp
add
push
mov
jmp
push
push
hlt
sub
jne
dec
sbb
jb
(bad)
push
xor
mov
inc
mov
sub
int
jmp
and
push
xor
pop
int3
and
mov
push
sbb
and
inc
xchg
inc
mov
daa
inc
pop
pop
leave
push
clc
cmp
faddp
push
and
mov
add
jg
sbb
dec
mov
adc
dec
push
mov
mov
(bad)
adc
and
sahf
adc
xor
mov
movs
mov
and
dec
sahf
inc
add
sub
add
and
mov
(bad)
cmp
or
pop
pop
sub
into
adc
or
inc
lds
out
(bad)
(bad)
sbb
idiv
ins
ds
dec
mov
enter
sbb
cs
adc
cmp
imul
icebp
mov
daa
xchg
cmc
mov
xor
ja
jns
out
in
push
inc
cmp
sub
add
jns
jg
pusha
iret
jge
aas
mov
cmps
adc
mov
retf
out
mov
fcomp
add
int3
into
dec
xlat
cwde
pop
mov
sbb
dec
stos
xchg
in
or
pop
push
cmp
or
mul
repz
jle
cwde
jge
mov
mov
xor
pusha
cmp
dec
inc
mov
add
loop
(bad)
cmc
frstor
lods
inc
push
xchg
jmp
imul
repz
into
js
neg
jnp
push
xchg
mov
popf
daa
pop
mov
mov
stos
sbb
adc
push
in
adc
popf
mul
ins
xchg
pop
jmp
xchg
jo
imul
mov
sub
mov
(bad)
xlat
adc
out
int
push
mov
test
push
test
data16
fistp
in
out
pop
sti
scas
sbb
ins
pusha
inc
ds
inc
retf
sbb
mov
leave
dec
push
mov
jecxz
mov
xlat
mov
dec
cdq
sbb
mov
push
jmp
push
cwde
cs
push
push
mov
jle
push
sbb
(bad)
pop
sub
fsub
or
jbe
std
add
fwait
sbb
jo
out
sub
lahf
pop
mov
imul
cs
mov
fwait
push
jo
loopne
les
fistp
hlt
sti
into
lea
test
jo
and
xchg
out
repz
ja
test
lods
xlat
aad
std
ja
test
inc
addr16
test
aaa
popa
pop
and
mov
add
loopne
inc
ror
or
cli
(bad)
adc
push
loopne
inc
mov
in
jmp
add
xor
cld
jge
sahf
jb
mul
in
mov
sub
into
jl
shr
retf
or
fisubr
cmc
out
xor
mov
sub
iret
xchg
jnp
cmps
jmp
(bad)
lock
pop
enter
pop
repnz
jg
in
mov
sub
mov
and
sbb
add
loop
cmp
xor
sbb
stos
add
mov
popa
mov
call
add
sbb
sub
xor
push
retf
mov
fld
test
out
in
ror
xchg
ja
push
adc
addr16
leave
fnstcw
sub
add
outs
inc
adc
or
dec
(bad)
xor
(bad)
pop
(bad)
pop
stos
mov
xchg
int3
imul
daa
repnz
aam
js
lds
mov
(bad)
in
jge
sbb
pop
ins
shl
ret
daa
cli
int3
mov
xor
pop
pop
sub
lods
push
cmc
ficomp
push
fs
call
data16
in
cmp
fbstp
mov
(bad)
pop
jbe
inc
mov
mov
aam
sbb
and
cmc
sub
sbb
inc
mov
test
fbstp
movd
bound
xor
mov
push
mov
in
sahf
aad
test
gs
sbb
sub
adc
call
ja
arpl
add
call
push
and
jb
ret
dec
out
retf
pusha
dec
ret
mov
outs
push
cmps
dec
and
lock
mov
mov
lea
cld
pop
pop
addr16
and
and
lea
sbb
movq
(bad)
cld
in
cmp
xchg
or
mov
ret
dec
add
pusha
test
pop
cmp
jno
cli
movs
xchg
adc
js
inc
adc
lods
mov
jl
iret
jae
ins
xchg
xor
hlt
inc
lea
push
rcr
sbb
rol
sbb
jmp
push
xor
mov
xor
adc
addr16
jae
test
popf
mov
jmp
mov
jg
mov
push
fisttp
dec
lar
clc
jmp
push
lods
test
add
sbb
pop
sbb
sar
sbb
cmp
out
or
in
inc
mov
ror
sub
or
sub
ss
sub
mov
ficom
push
add
enter
ss
cmps
les
cmp
or
adc
push
hlt
call
(bad)
rcr
add
(bad)
jo
mov
pop
movs
pop
imul
xor
sar
adc
into
stc
fwait
jmp
aam
dec
mov
mov
les
push
add
mov
loope
sub
lock
icebp
bswap
and
pushf
mov
pop
fisubr
push
jge
das
imul
xchg
fwait
mov
lds
mov
stos
je
sbb
push
mov
in
jmp
jb
icebp
(bad)
retf
ret
ja
out
pop
add
sub
cmp
rcl
js
jle
out
mov
dec
push
or
lods
aad
int3
mov
inc
ss
shr
(bad)
(bad)
rcl
xor
mov
jb
sbb
jl
or
rcl
add
dec
mov
mov
mov
inc
mov
or
std
add
mov
dec
add
cvtdq2ps
cs
mov
mov
cs
cmps
sbb
in
mov
addr16
cmovl
pop
fdivr
add
scas
inc
dec
nop
out
or
sahf
add
xchg
pop
loopne
add
in
xchg
loopne
retf
xlat
sub
mov
icebp
add
add
push
stos
xchg
cs
outs
jns
loope
in
and
mov
mov
mov
test
sahf
add
sub
ret
rcl
push
int
cld
push
jp
dec
cs
jne
xchg
adc
mov
popf
pop
and
pop
cli
outs
adc
and
sbb
pop
retf
push
(bad)
pop
sbb
leave
fwait
cmp
mov
mov
iret
retf
push
sub
mov
ds
jbe
push
sahf
shl
sub
jmp
cs
div
lds
xchg
jns
clc
std
sub
sbb
mov
push
push
mov
fisttp
leave
push
cdq
sub
mov
inc
inc
pop
das
xchg
enter
jle
(bad)
mov
fsub
out
xchg
hlt
and
sar
leave
cmp
fild
jb
sahf
xlat
xlat
cmp
cs
lahf
gs
inc
cmp
sbb
stc
aam
or
into
repnz
lock
sub
ret
fwait
inc
sub
pop
add
sub
push
jo
test
out
enter
sbb
bndldx
aad
cmc
fsubr
cdq
and
add
inc
shr
into
popa
rcl
mov
repz
mov
pop
mov
mov
jl
push
or
call
shr
jbe
push
out
cmp
hlt
in
pop
mov
push
out
or
sub
adc
fmul
mov
shl
mov
lods
outs
dec
jo
cmps
std
mov
xor
sbb
retf
xchg
jmp
ror
mov
rcr
hlt
into
push
cmp
arpl
fsubr
icebp
mov
out
imul
jge
cmps
sub
xchg
fs
jg
sub
mov
inc
dec
push
mov
imul
jns
jne
mov
mov
repnz
pushf
inc
dec
pusha
pop
xor
retf
push
fnstsw
(bad)
iret
mov
dec
cs
pop
xor
and
add
shr
outs
push
xchg
push
imul
test
dec
and
cmp
je
mov
cmps
inc
mov
cmc
hlt
mov
movs
mov
(bad)
jmp
aam
xchg
adc
scas
imul
call
test
push
xor
ins
xor
pop
xor
push
sub
or
sub
mov
fisubr
fsub
and
dec
mov
fsub
push
mov
xchg
retf
les
aam
int
jg
sbb
movs
inc
mov
jne
jmp
lahf
sar
add
mov
and
imul
shl
sbb
dec
push
jmp
sahf
and
xor
inc
push
(bad)
lahf
aaa
js
cli
sbb
cwde
movs
mov
jns
xchg
xchg
scas
lods
adc
cmp
pop
or
cs
stos
add
or
aaa
sbb
fstp
call
in
retf
adc
arpl
mov
pop
pushf
cmc
out
pushf
sti
mov
hlt
dec
dec
stos
jne
or
xchg
or
mov
pop
out
sbb
xchg
mov
das
loopne
lea
add
add
pop
minps
rcl
or
outs
add
fiadd
push
es
into
cmps
xchg
cwde
sbb
add
test
add
adc
adc
jo
xor
xor
arpl
fstp
in
cmp
out
shr
shl
lds
nop
dec
lahf
das
frstor
test
mov
sbb
test
inc
mov
mov
imul
std
mov
cmp
ds
mov
sub
test
jmp
cmp
(bad)
jge
push
stos
push
jmp
lods
inc
mov
sahf
pop
add
cdq
inc
mov
loope
sbb
fs
or
out
push
add
mov
gs
sbb
aad
sub
sub
xchg
xchg
xchg
pop
xchg
xchg
jae
scas
xchg
ins
mov
cmp
imul
fidiv
add
data16
xchg
dec
ret
push
aad
fnsave
popa
xchg
adc
fsub
or
lods
push
adc
sar
sub
mov
repz
mov
cmp
cmp
jmp
pusha
mov
jge
sbb
nop
scas
xchg
mov
(bad)
mov
sar
jmp
sbb
inc
pushf
or
mov
adc
mov
cs
cld
and
xor
fmul
fadd
call
xchg
div
mov
xor
add
push
and
mov
sub
(bad)
adc
push
inc
jo
imul
fisubr
or
iret
dec
adc
mov
je
and
iret
neg
jne
aas
(bad)
mov
hlt
jns
cdq
retf
(bad)
and
stos
cmp
jns
scas
ins
clc
dec
enter
mov
fadd
mov
es
xchg
dec
sub
lods
fsub
mov
or
mov
lss
xor
test
not
stos
in
ds
mov
retf
xor
cmp
jns
sub
test
mov
aas
ret
fiadd
jmp
lods
mov
cld
test
sbb
jmp
popa
mov
and
lods
push
fucompp
inc
pop
lahf
mov
jne
adc
inc
loop
mov
push
xchg
jae
mov
cmp
mov
push
retf
pusha
sbb
mov
pop
mov
dec
pusha
mul
push
push
and
and
mov
and
call
jp
add
scas
lahf
addr16
fidiv
push
mov
sub
mov
mov
arpl
out
lock
dec
dec
test
sar
xor
retf
loope
cmp
repz
dec
scas
sub
lock
hlt
test
imul
pop
add
clc
inc
call
sub
cdq
jl
bound
adc
or
cmps
jb
push
cwde
scas
fbld
sbb
xor
adc
cli
test
jmp
movs
xlat
hlt
xor
pop
gs
sub
mov
imul
adc
sub
mov
jecxz
jmp
cmp
in
(bad)
adc
cmp
push
iret
icebp
mov
dec
mov
rcl
push
ds
xor
cdq
shl
in
adc
mov
sub
jo
xchg
movs
pop
inc
popa
jmp
mov
sbb
(bad)
xchg
push
lahf
push
movs
dec
lods
inc
setb
dec
cmp
jno
js
or
adc
mov
shr
int3
cld
lods
xchg
sub
adc
cmc
fist
jae
jecxz
mov
mov
xor
lds
pusha
sub
push
fbstp
in
in
pop
outs
ins
mov
xchg
test
scas
iret
jae
dec
dec
adc
ss
push
push
ficomp
mov
jge
sub
xor
cmp
jmp
add
dec
pop
cmc
sub
sbb
test
les
fs
pop
pop
into
(bad)
mov
aas
ja
retf
xchg
pop
or
inc
mov
addr16
xlat
and
xchg
cs
mov
xor
push
jmp
test
dec
bound
pop
xor
xor
push
mov
in
pop
add
jns
lods
es
cmp
xlat
dec
idiv
aam
pop
jb
cmp
fnstcw
xchg
jl
int3
inc
(bad)
sub
js
idiv
(bad)
jmp
and
jl
ror
lahf
daa
mov
mov
sub
imul
add
dec
retf
or
movs
aaa
xor
push
adc
hlt
mov
sub
and
sub
neg
sub
clc
test
dec
sub
inc
xchg
adc
iret
test
sar
cmp
xchg
cmc
mov
in
out
pop
jmp
out
cwde
pop
pop
xlat
adc
cld
mov
(bad)
xchg
iret
pop
cmps
mov
jae
jg
shr
adc
inc
popf
test
mov
mov
inc
push
in
push
mov
into
jmp
push
outs
or
sub
(bad)
shr
pusha
pop
retf
push
gs
aad
(bad)
mov
xlat
(bad)
cmp
iret
sbb
test
(bad)
mov
mov
aad
pop
mov
stc
xor
xchg
addr16
mov
mov
mov
call
dec
cmp
cmps
fcomp
aas
jp
aad
(bad)
div
test
push
call
cmp
out
ds
imul
jg
and
or
jge
or
int3
sbb
daa
out
ins
xchg
mov
loope
jg
push
lock
fst
outs
(bad)
in
scas
in
cwde
test
lea
ror
outs
fsubr
(bad)
shr
and
mov
aam
push
dec
lock
cmp
sub
cmp
or
jl
retf
push
inc
inc
inc
inc
mov
push
cs
movs
nop
add
and
inc
jecxz
dec
push
sbb
dec
pop
(bad)
mov
jp
mov
mov
test
xchg
pop
gs
push
push
add
int3
mov
mov
dec
movs
inc
mov
push
mov
rcr
pop
clc
mov
push
mov
xchg
lock
inc
or
push
mov
pop
stos
(bad)
cwde
adc
shr
and
add
test
or
push
and
xor
fwait
dec
push
or
ins
jl
popf
popw
and
mov
loope
adc
test
fadd
dec
inc
(bad)
imul
test
push
push
and
and
imul
xor
mov
cmp
in
dec
es
outs
sub
mov
fstp
and
xor
and
mov
sub
xchg
mov
and
dec
call
daa
jnp
cdq
sbb
xchg
push
xchg
outs
adc
adc
lods
pop
mov
mov
mov
add
cdq
push
mov
xor
mov
lods
mov
or
in
jnp
dec
int3
push
xchg
or
push
ja
mov
into
stos
xor
sbb
icebp
lods
aas
ret
xor
push
inc
daa
outs
cmp
cmc
outs
lock
imul
cmps
lahf
inc
mov
push
jg
ins
xchg
pusha
ins
push
pop
cs
test
popa
pop
and
push
mov
call
imul
cmps
aad
aad
sbb
cmps
fwait
leave
out
push
xchg
or
inc
es
es
aaa
add
lods
aam
(bad)
fs
das
(bad)
cmp
enter
and
inc
cmc
and
inc
in
inc
(bad)
pop
scas
mov
(bad)
fidiv
jno
xlat
outs
push
xor
sbb
jo
mov
sbb
lods
into
push
stc
add
push
push
in
dec
mov
push
jae
cmp
outs
repz
jmp
(bad)
lods
cli
cmps
ret
(bad)
mov
mov
push
fistp
mov
test
push
jno
ret
(bad)
push
(bad)
mov
ins
sub
sub
mov
xor
cmp
aas
pop
push
xchg
pushf
fiadd
xchg
je
loopne
and
sar
mov
sbb
sahf
fsubr
xor
xor
xchg
mov
add
sar
add
push
les
sbb
pop
pop
loopne
std
std
jb
std
push
or
pop
inc
test
cmps
inc
xchg
imul
mov
std
sbb
icebp
daa
xchg
and
add
mov
mov
push
cmp
sbb
mov
in
xchg
mov
or
scas
dec
xor
mov
xchg
icebp
cmp
push
sahf
aas
imul
pop
adc
rol
xchg
fsub
mov
inc
sub
data16
in
sub
stos
cmp
and
inc
imul
mov
mov
push
pop
retf
lods
mov
and
pop
out
dec
cmp
push
js
jmp
and
inc
ins
fsubr
outs
cdq
cmp
ins
adc
cmc
ficomp
inc
repnz
aaa
add
in
repnz
xor
and
sar
mov
inc
int3
jb
push
push
jnp
aas
cs
int
int
add
and
cli
inc
fwait
xor
push
adc
rcr
in
and
addr16
xchg
cmp
out
addr16
in
mov
iret
fisttp
lods
push
into
dec
sbb
adc
sbb
imul
ret
ret
cdq
out
lahf
mov
retf
jmp
cmp
jbe
dec
mov
sbb
in
jbe
xchg
push
cmp
pop
aad
cdq
(bad)
dec
out
dec
arpl
mov
xchg
(bad)
cld
arpl
cdq
dec
push
call
cs
daa
or
call
pop
aam
sbb
mov
or
sub
out
add
fadd
pop
xchg
cmps
je
mov
mov
cmps
or
fisub
imul
cmp
adc
inc
cld
jnp
cmp
jmp
ret
bnd
adc
push
iret
push
ret
xchg
sbb
pmaxub
pusha
daa
js
adc
fmul
mov
xchg
jb
call
xchg
add
aad
mov
inc
xrelease
div
push
data16
movs
push
sbb
test
sbb
rcl
jae
cmp
loop
outs
ja
pusha
mov
jo
iret
enter
test
pop
pop
push
shr
jge
xor
imul
neg
or
pop
pushf
test
(bad)
dec
pop
test
shl
fisub
mov
or
cs
dec
mov
mov
push
and
out
leave
scas
data16
in
adc
(bad)
ret
(bad)
daa
fistp
cmps
std
mov
and
clc
xor
and
or
inc
mov
das
sbb
inc
(bad)
lock
jle
mov
add
lods
lods
mov
sub
adc
fsub
fs
mov
movs
or
(bad)
push
adc
sbb
cmp
cdq
dec
add
jnp
push
sbb
pop
or
rol
in
jecxz
inc
js
inc
mov
stos
cs
daa
dec
stos
test
add
into
movs
cmc
adc
popa
add
pop
bound
pop
jne
push
sub
es
dec
add
dec
mov
out
sbb
pop
dec
clc
xor
out
and
sub
call
xor
or
inc
inc
sbb
cmp
jmp
mov
xchg
or
dec
add
cmp
(bad)
sbb
jno
jno
ror
ja
scas
shr
ret
mov
rol
jmp
nop
xchg
test
sbb
mov
pop
jae
jle
mov
push
ret
dec
sub
sub
sbb
test
mov
movs
add
and
pop
jae
inc
fsub
fdiv
mov
push
sbb
mov
and
jmp
push
add
ds
jno
ins
and
xchg
or
out
adc
rcl
xchg
push
loopne
mov
aad
sub
sbb
push
scas
rol
mov
push
loope
int3
out
call
cmps
sti
ret
(bad)
cmp
mov
je
mov
fisttp
out
(bad)
dec
adc
ret
jnp
arpl
cmp
fwait
aas
mov
outs
pop
jo
popf
xchg
pop
cdq
sar
rol
pop
pop
loope
add
adc
arpl
xchg
scas
jecxz
mov
shr
and
dec
adc
aaa
cmp
jns
xchg
add
(bad)
jmp
xor
cmc
stc
mov
inc
jecxz
loope
xchg
(bad)
mov
das
pop
int
xchg
sbb
(bad)
not
inc
(bad)
mov
push
lahf
sbb
imul
ret
fwait
cmc
pushf
dec
addr16
sub
loope
neg
xor
in
jae
ret
mov
dec
fdivr
call
sub
push
retf
out
in
dec
cwde
inc
lahf
xchg
push
outs
iret
sub
(bad)
retf
dec
jo
push
or
fcomi
and
xchg
inc
sub
and
add
in
cs
pop
mov
jae
mov
repnz
gs
cdq
popf
and
xor
dec
mov
std
fidivr
xchg
cdq
imul
aas
xchg
sbb
adc
push
mov
dec
adc
xchg
adc
cs
fnstsw
mov
out
xor
popa
xrelease
pop
cmp
jmp
enter
pop
push
pop
outs
and
pop
rcr
ja
jecxz
jl
inc
outs
push
sahf
in
stos
dec
in
mov
jg
sub
in
mov
ins
push
push
dec
ins
add
mov
push
add
fld
aaa
mov
jmp
std
xlat
ja
and
dec
mov
xchg
imul
cmps
pop
fmul
retf
xlat
sub
jne
cs
ds
adc
loope
daa
ret
aas
ret
in
leave
jae
pushf
push
pop
ins
loopne
or
jae
ret
cmc
pop
inc
cmp
jg
or
lds
cmc
sbb
dec
popa
movs
pop
ret
icebp
enter
sbb
scas
sahf
and
inc
and
cmp
retf
shl
sub
rol
outs
outs
ss
mov
daa
sub
inc
inc
xchg
movs
cwde
arpl
xor
push
sbb
ins
test
dec
sub
mov
push
pop
stos
shl
cmps
cmp
fnstsw
xchg
fstp
stos
ss
scas
iret
lea
iret
loop
(bad)
test
mov
stos
leave
scas
sub
add
outs
scas
xor
add
cmps
or
adc
movs
mov
test
lea
mov
lock
js
popf
and
jmp
cmps
or
ror
cld
int
daa
push
lds
sbb
(bad)
or
xchg
dec
xor
inc
fisub
mov
jge
sbb
inc
dec
dec
mov
add
push
movups
aam
pusha
stos
shl
jne
mov
ins
or
mov
inc
call
enter
jbe
push
push
inc
add
push
jnp
ss
pop
mov
lock
mov
jbe
adc
dec
xchg
jg
push
in
xor
shl
mov
jb
add
inc
int
neg
add
jb
sub
mov
out
sar
jg
mov
loopne
(bad)
jno
movs
xchg
outs
mov
sub
pop
and
iret
in
out
or
jge
leave
sbb
(bad)
cmp
xchg
aaa
data16
sub
xchg
in
adc
and
push
sbb
jae
mov
fwait
push
inc
jge
push
lods
inc
das
sbb
nop
stos
in
sub
jns
aaa
add
mov
push
pusha
test
outs
aaa
xchg
cmp
adc
push
xchg
pop
sbb
cmp
ja
or
jmp
xchg
dec
fidivr
and
xchg
in
lock
add
jb
sti
and
scas
push
sbb
das
dec
and
inc
lods
test
inc
xor
pop
mov
xchg
fwait
sbb
inc
xchg
lods
inc
fistp
int
ins
imul
or
in
shr
outs
push
out
imul
(bad)
ret
mov
or
add
push
std
xchg
push
iret
push
(bad)
out
sahf
les
and
cs
dec
pop
dec
cmp
call
sub
test
outs
ss
xor
mov
lods
shr
cdq
lods
and
push
mov
xchg
jg
or
fimul
mov
mov
pop
repz
cmp
fs
aaa
std
std
push
sbb
mov
sub
jns
dec
jns
push
icebp
nop
jmp
aad
xor
cmp
maxps
pushf
pop
add
dec
aas
test
or
(bad)
leave
mov
add
popa
jg
popa
push
outs
loop
arpl
pop
enter
xor
call
or
push
inc
bnd
out
jb
sub
jno
in
adc
ins
mov
jnp
into
cmp
mov
or
xchg
or
arpl
popa
add
cmps
popa
cmp
push
pusha
xchg
pop
inc
add
sbb
out
inc
pop
js
dec
mov
adc
dec
test
xchg
fild
push
ins
cmp
push
pop
inc
(bad)
ins
cwde
das
cmps
dec
clc
daa
push
cmp
mov
lods
ss
mov
mov
repz
adc
push
and
pop
gs
sub
retf
scas
push
int3
jae
or
out
dec
icebp
in
ret
test
mov
lods
mov
(bad)
mov
add
ret
add
(bad)
or
mov
mov
jecxz
inc
add
stos
in
(bad)
mov
aas
aad
mov
add
pop
loope
imul
xchg
js
gs
out
sti
jnp
xchg
sub
dec
leave
in
pop
enter
dec
mov
or
out
dec
ins
scas
data16
ret
out
xlat
jl
xchg
pop
xchg
cmp
pop
dec
xchg
retf
pop
stos
jne
inc
push
jne
xchg
mov
test
and
aaa
call
mov
mov
test
ror
mov
dec
pushf
(bad)
fsubr
jae
inc
jl
call
xchg
repnz
sbb
in
mov
jmp
aas
sub
cwd
pop
retf
js
mov
aad
cmp
in
sub
test
imul
sbb
push
rol
xchg
es
pop
mov
test
ins
(bad)
std
mov
retf
inc
test
push
(bad)
mov
ins
pop
call
mov
pushf
dec
in
pop
pop
mov
mov
xor
test
mov
mov
push
push
cmps
push
stos
mov
push
xor
popf
fs
inc
jge
adc
stc
cdq
rcr
test
mov
pop
push
xor
movs
pop
cmp
ss
mov
in
pusha
add
loop
mov
neg
bts
loopne
push
cmp
les
or
icebp
jle
test
test
xor
push
adc
lahf
pop
dec
xchg
adc
sub
xchg
dec
add
cld
ins
cs
push
loope
inc
fldcw
stos
cmp
mov
les
sbb
push
dec
jecxz
into
fimul
or
jg
ins
pop
mov
xchg
jb
test
mov
mov
ins
push
aaa
push
sub
dec
and
gs
enter
mov
xchg
test
movs
int3
mov
add
icebp
movs
fist
jae
xchg
outs
mov
stc
inc
adc
xchg
jno
push
mov
pop
sbb
retf
mov
inc
(bad)
call
xchg
mov
add
dec
daa
jecxz
pop
xchg
aad
mov
test
xchg
in
sbb
jmp
and
push
xchg
clc
xor
jle
xor
popa
(bad)
retf
xchg
sbb
cmp
lock
push
test
ss
out
xchg
(bad)
mov
mov
test
out
out
cmps
gs
adc
fsub
pop
ins
inc
dec
fld
inc
mov
xor
push
dec
xchg
push
imul
sahf
ins
int
stos
pushf
(bad)
sub
inc
xchg
ss
add
sub
push
mov
cmp
mov
call
sub
gs
add
aas
pop
pop
mov
dec
sbb
adc
cmc
push
je
xor
enter
mov
in
jmp
(bad)
retf
push
fucomi
cs
jge
dec
jmp
push
std
cld
dec
int
loop
out
dec
out
lahf
fsub
dec
popf
and
ret
dec
sub
push
xor
jae
jl
xor
aad
xchg
popf
jge
cmp
pop
scas
std
leave
pop
jae
mov
aad
jmp
xor
test
push
iret
mov
and
add
dec
inc
fs
repz
ret
repz
push
xor
push
icebp
push
jae
jnp
fisttp
adc
out
jae
(bad)
pop
lea
int
jns
cmp
sbb
test
jmp
rcl
hlt
(bad)
sar
inc
test
rcr
dec
movs
fwait
or
lds
xchg
bound
pop
push
push
call
push
sbb
sbb
shl
pop
push
jmp
mov
xchg
jmp
push
jmp
mov
and
push
call
icebp
mov
xchg
adc
fdivr
jmp
mov
lock
xor
pop
mov
adc
push
pop
outs
mov
dec
pop
jo
mov
sahf
or
add
loop
dec
jae
jo
not
inc
addr16
nop
xchg
mov
(bad)
stc
sti
(bad)
fisttp
sbb
out
xchg
xor
jmp
shr
sbb
mov
inc
fiadd
cmp
or
cmp
xor
add
lods
scas
add
int3
and
jp
hlt
movs
or
out
sub
mov
scas
ja
daa
xchg
lods
test
jbe
mov
lods
dec
dec
sbb
push
data16
xchg
dec
div
mov
inc
lock
and
xor
out
sub
mov
(bad)
fidivr
retf
fcomp
inc
sub
popf
test
(bad)
adc
test
dec
nop
loope
stc
rol
xchg
jnp
mov
stos
(bad)
loopne
or
push
mov
inc
or
xchg
inc
mov
cld
movs
push
mov
nop
mov
add
gs
xchg
add
xchg
cmps
pop
xor
stc
adc
clc
dec
int3
ins
clc
pop
add
pop
cmp
mov
gs
adc
sbb
jo
pusha
(bad)
cs
dec
test
in
pop
arpl
mov
sbb
xchg
pusha
xchg
add
xor
or
mov
js
lods
arpl
loop
popa
xor
shl
jnp
ds
jae
ret
mov
aam
or
adc
sahf
out
lahf
push
dec
mov
cmp
mov
aaa
mov
jecxz
jns
xchg
cmp
or
xor
daa
in
mov
adc
rcr
dec
aas
cmp
jns
ja
pop
(bad)
dec
jl
push
imul
push
xchg
mov
cli
ins
fistp
jge
lods
and
ror
sbb
cld
daa
in
in
imul
and
lods
loop
fist
enter
sub
push
ret
addr16
repnz
ret
jbe
jle
push
jnp
aaa
inc
sub
dec
xor
loop
fs
test
test
add
and
cmp
jne
das
lea
inc
cmp
shr
lods
and
das
imul
loope
dec
xor
cmp
mov
mov
ds
ins
jg
fwait
inc
(bad)
add
inc
outs
sbb
iret
jae
push
ins
xchg
xchg
nop
ins
pop
call
push
scas
push
pop
jb
sub
pop
scas
and
inc
or
retf
jmp
scas
fwait
icebp
fstp
add
cmps
cmp
mov
imul
test
(bad)
pop
ja
adc
pop
mov
repz
sub
das
push
cmp
or
pop
(bad)
sub
loope
add
loopne
xor
mov
pop
lock
dec
and
pop
push
sbb
mov
push
call
and
das
pop
adc
aaa
fisub
mov
aaa
pop
loop
xchg
dec
push
pop
push
shl
add
pop
pusha
xor
dec
xchg
popf
mov
cmp
xchg
gs
imul
adc
inc
test
jb
push
pusha
mov
pop
test
add
movs
jg
mov
pop
push
lods
retf
repz
lock
clc
idiv
push
retf
shl
adc
mov
mov
lock
jns
mov
dec
cmps
jns
lock
push
and
xchg
shl
sbb
call
lods
popa
fisttp
pop
or
imul
lea
int3
in
rcr
ins
jae
fmul
xor
push
push
ficomp
(bad)
or
call
cmp
pop
sub
sub
sbb
pop
xchg
iret
mov
aaa
or
cmc
pop
cmc
call
fisttp
sbb
sub
cmp
aam
xchg
sbb
push
jnp
into
mov
xor
fdivr
hlt
stos
mov
add
and
mov
xchg
das
dec
add
mov
outs
movs
jns
push
and
outs
pusha
nop
push
ins
inc
lahf
out
outs
pop
call
or
loope
pusha
push
dec
sub
cmps
fwait
and
inc
add
jecxz
xor
mov
cmps
xchg
pusha
inc
in
movs
mov
xor
clc
mov
ins
push
pop
add
fisttp
pop
ss
mov
out
dec
out
mov
mov
(bad)
fisubr
mov
xor
jle
mov
jbe
call
inc
mov
adc
(bad)
iret
lods
and
sbb
test
scas
das
sub
xchg
popf
sti
pop
sbb
jmpw
sbb
arpl
mov
sub
in
daa
and
std
out
xchg
ins
add
mov
inc
fst
int3
or
cwde
and
ret
sbb
jne
inc
arpl
mov
xchg
cmp
cmp
outs
adc
or
int3
ret
(bad)
xchg
out
cli
push
inc
retf
cmp
movs
fbld
js
or
lds
into
push
mov
pop
cmp
stc
inc
bound
inc
push
loopne
inc
in
cwde
fwait
mov
jmp
mov
sub
dec
pop
mov
daa
js
adc
mov
fst
stos
fmul
(bad)
adc
(bad)
mov
xchg
lock
push
call
lods
ja
pusha
pushf
sbb
jle
cmps
(bad)
push
cdq
dec
retf
test
adc
push
push
inc
push
test
js
addr16
sar
pop
xchg
into
stc
pop
bound
cmp
test
inc
fimul
bound
and
cdq
jle
xchg
adc
mov
adc
pusha
call
and
dec
fwait
sar
repz
xchg
pop
mov
cwde
aas
cwde
loope
ds
xor
aas
pop
das
movs
fwait
pop
mov
bound
stos
adc
in
lods
icebp
jge
push
adc
mov
xlat
lds
test
lock
loope
das
xchg
mov
push
mov
fsubr
(bad)
pop
dec
mov
mov
shl
mov
mov
(bad)
fcom
dec
fiadd
addr16
mov
or
sbb
mov
push
jnp
sub
movs
scas
not
test
mov
mov
daa
and
push
retf
and
sub
cmc
push
outs
mov
leave
adc
push
pop
add
mov
xor
std
gs
std
leave
ja
push
mov
push
mov
inc
push
jge
mov
mov
sub
pop
and
fldcw
lea
movs
xchg
mov
inc
mov
cmp
or
ja
jl
jno
mov
jl
cmps
in
mov
pop
push
jbe
enter
xor
jmp
neg
jmp
aas
out
xor
jmp
mov
jge
or
pop
pop
sub
movs
push
adc
stos
cmp
xchg
mov
lock
or
ins
push
out
std
aam
clc
retf
movs
mov
call
xor
ss
or
nop
popf
or
push
and
inc
ret
adc
and
out
cmp
outs
stos
(bad)
jmp
dec
dec
add
loopne
push
cld
inc
popf
pusha
pushf
aam
pop
lahf
fnstsw
je
or
pop
push
stc
ret
xor
(bad)
into
xchg
dec
iret
iret
adc
test
imul
xor
and
addr16
out
sub
pop
lahf
stos
jge
adc
add
sbb
fsubp
outs
aaa
popf
nop
fs
aas
inc
call
jno
dec
adc
or
(bad)
dec
ror
jmp
jne
mov
push
test
lds
fs
rol
shl
ja
in
arpl
int
xchg
pop
repz
call
pop
dec
mov
jb
aaa
aam
jno
iret
mov
cmp
popa
scas
push
mov
mov
hlt
push
sub
in
mov
or
jg
adc
stos
push
rcl
mov
xchg
mov
call
xchg
cmp
ficomp
xlat
jmp
jae
add
dec
popa
jge
rol
(bad)
and
repz
inc
shl
imul
and
sub
jb
xor
and
push
gs
mov
jge
shl
xor
sbb
ffree
xor
push
loop
int
test
lock
adc
adc
add
popf
stos
bound
hlt
and
mov
arpl
inc
(bad)
pop
mov
jb
pop
mov
idiv
mov
rol
push
xchg
enter
cmp
push
out
xor
sub
iret
mov
adc
fwait
sub
jge
aad
push
push
dec
int3
dec
sub
bound
add
das
bound
mov
test
push
and
test
add
popa
jg
cmp
fisttp
jmp
pop
hlt
inc
mov
mov
push
daa
push
push
js
mov
jns
mov
mov
inc
repz
fs
push
scas
adc
jle
adc
jecxz
cld
cmc
sbb
cli
out
sub
push
cli
aad
aad
loope
mov
mov
in
jbe
repnz
inc
mov
add
std
paddd
and
inc
test
xchg
in
movs
dec
aas
jmp
lock
lahf
xor
cmps
lahf
push
lock
(bad)
and
stc
das
std
in
scas
jae
or
push
push
pusha
sbb
inc
aaa
loopne
test
ror
push
outs
inc
aas
lods
ror
pop
mov
loop
jecxz
stos
addr16
add
in
sub
stos
mov
shr
push
cdq
cld
fmul
push
xchg
cmp
add
xor
rcl
mov
xor
das
iret
pop
add
or
xor
(bad)
cmp
test
inc
in
sbb
push
ins
jnp
sub
sub
(bad)
cmovle
ss
mov
pop
dec
ins
mov
js
push
rcr
or
dec
lods
lods
xor
mov
push
jae
sbb
adc
mov
add
fistp
inc
mov
retw
sbb
dec
jmp
fwait
sub
mov
push
cwde
(bad)
fadd
sub
dec
ror
outs
inc
sub
sbb
pop
dec
imul
mov
cmps
inc
adc
ss
jo
xchg
inc
xlat
shr
ja
xlat
pop
push
in
dec
inc
test
std
dec
shr
jmp
sbb
aas
jmp
pop
outs
add
(bad)
outs
jo
mov
inc
or
aas
xor
jecxz
mov
fsubr
cmps
retf
out
cmp
shl
jne
stos
enter
ds
push
dec
loopne
pop
popf
mov
sub
or
ins
lea
cld
inc
imul
mov
in
sub
and
mov
mov
lods
and
add
pop
lock
out
pop
data16
push
pushf
sbb
sub
push
xchg
mov
lods
data16
or
cmp
push
dec
mov
mov
mov
inc
mov
sub
or
jno
jmp
fwait
mov
mov
or
push
sub
inc
ss
dec
hlt
in
pop
adc
nop
mov
add
mov
icebp
lea
test
int3
mov
cmp
sub
push
fnstcw
lock
test
add
push
or
pop
xchg
pop
cmp
pmulhw
dec
int
push
jbe
fisttp
pop
retf
sti
fdiv
sti
ins
repnz
and
pop
add
xchg
cmps
inc
cwde
out
jl
xchg
cdq
mov
sub
add
ds
test
(bad)
add
in
std
cwde
in
adc
lock
mov
xchg
lock
pop
lods
push
retf
cmps
fs
mov
lea
mov
xor
loopne
adc
push
sub
pop
dec
sbb
scas
iretw
push
inc
je
or
shr
or
jge
in
mov
je
add
loopne
cmp
iret
inc
call
mov
lds
std
stos
inc
adc
in
push
push
scas
enter
push
test
xchg
ins
and
shl
outs
cmp
aaa
into
(bad)
mov
pop
mov
shr
dec
jnp
xchg
jno
add
mov
fstp
test
lea
adc
cs
xor
sti
adc
clc
out
xor
add
cmps
mov
adc
outs
jmp
jnp
push
fisub
sbb
rcr
add
sbb
push
imul
in
and
nop
dec
mov
aam
pop
imul
push
(bad)
(bad)
cmp
xchg
or
stc
daa
or
shl
inc
xlat
cmp
fstp
test
pop
mov
repnz
xor
or
iret
inc
mov
aaa
xor
out
popa
sub
xchg
ja
or
cld
je
dec
and
dec
pop
cmp
lock
cld
fldenv
or
rcl
xchg
dec
stos
shr
paddb
rol
lods
mov
xchg
mov
cmp
leave
(bad)
(bad)
mov
popf
push
pusha
mov
ds
in
imul
stc
ficomp
pop
aaa
nop
inc
and
into
stos
mov
into
js
enter
jmp
jecxz
or
xchg
lea
pop
es
(bad)
xor
mov
pop
mov
out
dec
lahf
mov
pop
pop
inc
inc
mov
sub
jbe
jne
fs
clc
sub
retf
xlat
jmp
pop
push
ds
push
add
mov
(bad)
mov
shl
pop
js
or
jo
push
mov
loope
call
dec
inc
xor
icebp
in
jmp
mov
and
loop
rcr
push
std
xor
(bad)
sti
jne
cli
dec
test
(bad)
in
je
push
add
out
push
out
pop
in
inc
and
cmp
jae
sbb
cmps
inc
je
rcl
dec
sbb
and
pop
in
into
xlat
(bad)
pop
lods
mov
daa
xchg
popf
out
jb
jmp
sbb
sar
gs
mov
fsubr
loope
ficomp
not
imul
mov
sub
sub
fcomp
or
ret
iret
lahf
ss
icebp
jl
and
jmp
mov
mov
xchg
push
pusha
ss
inc
call
jo
pop
pop
bound
mov
jo
xchg
pop
sub
pop
and
inc
repnz
cdq
in
loope
and
aam
xchg
in
js
and
stc
pop
pop
cmc
mov
sbb
loop
(bad)
sti
loope
(bad)
repnz
push
imul
pop
fsubr
mov
mov
and
push
mov
stc
inc
movs
test
mov
sub
sub
sub
inc
sbb
mov
and
ror
jo
jo
(bad)
mov
add
jo
aam
push
push
jl
rol
call
pusha
in
mov
inc
out
fisttp
stc
fnclex
and
or
(bad)
dec
cdq
adc
js
add
add
in
iret
int
call
dec
and
xchg
sbb
jno
sar
mov
mov
ret
add
pop
stos
sub
cli
std
inc
stc
fmul
je
xchg
fistp
xchg
lahf
movd
cmp
xchg
imul
or
push
sbb
in
xchg
mov
sub
adc
cdq
mov
out
xchg
pop
xor
cmc
clc
add
or
cmp
pop
xchg
(bad)
ss
scas
and
sbb
adc
mov
add
out
and
out
dec
cmc
lahf
ds
sub
add
pusha
mov
bound
mov
sbb
dec
and
daa
cmc
push
popf
or
and
jmp
xor
dec
fld
cmps
xor
int
adc
mov
out
lds
fxch
xor
ins
mov
aaa
mul
sbb
shl
push
hlt
movs
and
dec
push
(bad)
fsub
sub
push
aad
add
inc
adc
xor
add
call
out
and
pop
mov
push
test
fs
xor
aas
jecxz
mov
scas
mov
xchg
add
nop
xor
cmp
mov
adc
inc
inc
popf
inc
xchg
and
mov
mov
jbe
call
mov
pop
rcr
rcr
fstp
add
cmp
xor
fidiv
dec
sar
mov
aas
mov
loop
jbe
stos
iret
aam
push
pop
in
ins
add
xchg
xchg
pop
pop
jmp
inc
sbb
mov
or
out
inc
adc
inc
out
fucomip
es
pop
in
adc
rol
loopne
cmp
inc
sbb
sti
ja
push
mov
(bad)
pushf
pop
mov
xchg
(bad)
(bad)
xor
push
sbb
dec
es
(bad)
call
sbb
cld
dec
pop
rcl
sub
pop
aaa
adc
xchg
imul
add
pop
xchg
and
jge
sub
xchg
adc
pushf
jnp
mov
jmp
dec
mov
push
int
mov
icebp
mov
dec
ins
mov
int3
out
jnp
push
mov
mov
faddp
call
into
mov
jnp
dec
push
cdq
jmp
pminsw
and
sbb
(bad)
jg
xor
xor
js
cmp
xor
jecxz
xchg
and
mov
cmp
popf
ins
dec
popf
pop
sbb
pop
ds
sbb
into
cmps
lea
mov
sub
xchg
or
movs
mov
cmp
imul
je
or
(bad)
jns
les
dec
loope
cmps
pop
cmps
cmps
pop
out
xor
sbb
les
sub
dec
clc
cld
outs
xchg
cwde
mov
push
movs
dec
jb
ror
add
jnp
in
jmp
hlt
jo
dec
push
xchg
test
or
stos
nop
and
xchg
xchg
popa
cmp
ins
cmps
imul
in
and
leave
mov
rol
jle
xchg
jno
repnz
mov
cmp
outs
pop
add
push
bound
retf
push
dec
mov
clc
xchg
fnstcw
mov
sahf
push
sub
dec
dec
pop
and
push
es
(bad)
sub
or
retf
int3
sbb
imul
cmc
sbb
cmp
in
pushf
cdq
lods
pop
mov
arpl
xor
mov
sbb
jbe
icebp
pop
mov
mov
lahf
and
mov
add
mov
adc
cmps
push
inc
push
mov
or
mov
xor
jecxz
repz
call
push
test
(bad)
clc
mov
sbb
sahf
fs
cmc
int
(bad)
aaa
ret
or
xor
call
nop
or
icebp
inc
pop
pop
jo
mov
ret
xchg
sub
mul
mov
mov
popf
pop
push
lea
cld
call
adc
inc
outs
hlt
dec
fdiv
pop
push
dec
sbb
xchg
inc
inc
mov
cmp
out
xchg
fist
push
jbe
test
test
fisttp
repz
inc
out
jmp
out
(bad)
ficom
push
shr
pusha
mov
xchg
jge
lea
cmps
cdq
sbb
call
mov
dec
outs
sbb
out
stc
repz
and
fist
jns
mov
adc
push
xchg
and
es
ds
push
dec
jmp
xchg
dec
loop
inc
add
fcomp
cmps
xchg
enter
lds
fadd
push
pop
rcr
cmp
jno
adc
push
pop
outs
fadd
pop
movs
push
aaa
addr16
stos
xor
in
in
pop
scas
pusha
cmp
xchg
mov
sbb
lea
inc
inc
and
inc
cmp
mov
add
mov
fist
retf
add
cmp
push
adc
mov
data16
pop
sahf
cs
fwait
mov
adc
sbb
xchg
sar
or
adc
(bad)
and
ja
and
mov
cmp
out
jecxz
or
jecxz
inc
repnz
xchg
and
push
inc
xchg
pop
adc
dec
sbb
pop
fcomip
dec
ja
aad
xchg
call
cli
ret
outs
mov
mov
test
int3
cmp
popa
pop
sub
out
hlt
aam
ins
dec
cs
fsubr
mov
dec
mov
sbb
or
mov
cli
(bad)
mov
lods
pop
jge
cmp
or
jo
sub
pop
les
into
aam
and
jae
sbb
jne
adc
jmp
popa
das
inc
(bad)
jg
and
mov
jne
xchg
enter
pop
jmp
mov
inc
mov
lea
mov
daa
cmp
call
iret
xlat
push
les
(bad)
sar
pop
(bad)
xor
push
dec
frstor
dec
mov
pop
xor
or
dec
xor
xor
or
inc
cs
outs
and
pop
mov
adc
sbb
sub
aam
loope
inc
push
and
mov
xchg
mov
push
jb
je
stc
or
idiv
xchg
inc
inc
fld
push
fsub
cmp
(bad)
in
jo
xchg
sub
retf
nop
imul
loopne
aam
imul
inc
ror
sar
les
sub
cmp
lds
imul
stc
cmp
push
icebp
jnp
mov
push
arpl
and
dec
mov
cmpxchg
sub
(bad)
loop
fld
fild
push
cmp
sbb
shl
sub
dec
jbe
test
mov
mov
icebp
and
outs
clc
push
stos
(bad)
js
adc
jmp
jmp
(bad)
icebp
jmp
dec
out
nop
dec
adc
pop
test
mov
dec
pop
in
push
cmps
pop
iret
fs
fisub
(bad)
repz
fwait
mov
mov
imul
cwde
add
sbb
rol
in
or
add
aad
and
ds
pop
repz
sti
mov
jb
xor
or
pop
xchg
jae
sbb
leave
cmp
push
or
in
jge
test
inc
add
pop
icebp
mov
cmovns
stc
mov
fstp
les
(bad)
push
cli
inc
mov
fcmovu
mov
(bad)
lahf
out
jl
clc
lock
cmp
adc
cs
push
call
clc
repnz
inc
in
or
lahf
outs
push
xchg
sahf
push
jns
inc
sub
ror
xchg
and
fst
pop
mov
xchg
pop
mov
repnz
xor
mov
aam
mov
mov
jo
rcl
mov
jmp
sbb
jl
add
mov
cmps
test
adc
xchg
inc
inc
aad
scas
dec
xchg
aaa
push
(bad)
jae
xor
stc
cmp
(bad)
(bad)
xlat
add
cmps
xchg
aad
aad
sub
clc
push
mov
test
or
jno
sub
cs
ret
and
mov
aad
loopne
inc
mov
call
(bad)
outs
ret
leave
imul
jno
inc
imul
retf
sbb
sbb
push
out
mov
mov
int3
add
movs
xchg
adc
push
aaa
add
cmp
push
xor
jg
cwde
push
gs
pushf
pop
mov
mov
gs
xor
in
loop
maskmovq
test
xchg
loop
mov
int3
scas
jnp
idiv
pop
jle
hlt
(bad)
lea
mov
push
mov
xor
add
push
jge
(bad)
cmp
popa
(bad)
adc
sub
mov
mov
stc
or
loopne
int
adc
pop
mov
mov
mov
scas
dec
push
fnsave
inc
mov
dec
nop
call
dec
cmp
ja
mov
or
ss
outs
inc
sti
jne
sbb
fwait
sbb
rol
movs
les
dec
sbb
movs
mov
enter
and
push
xchg
cmp
lock
fld
fcmovnu
ds
push
ds
mov
push
jae
mov
mov
fiadd
cs
loop
loop
rcl
adc
xor
out
cmp
jl
adc
pop
cmps
xor
add
fs
(bad)
cli
repnz
leave
jl
stc
and
cmp
mov
shl
test
icebp
imul
jge
cli
xchg
push
add
sbb
inc
dec
cdq
pop
out
rol
lock
jecxz
jnp
inc
sub
je
mov
inc
or
out
push
outs
sbb
sti
in
lahf
sub
psrad
(bad)
adc
dec
pop
aas
cmps
lea
fdivr
pop
xchg
cmc
in
cdq
js
gs
push
stos
push
jg
push
push
inc
push
push
sti
inc
iret
and
xchg
jbe
shl
fisttp
pusha
mov
mov
push
jne
cmps
addr16
inc
add
xchg
adc
ins
pop
(bad)
jmp
xchg
jne
jle
pushf
mov
retf
and
add
aas
mov
dec
adc
clc
push
jo
add
and
mov
xor
sub
sbb
inc
jmp
pop
mov
out
test
daa
data16
inc
pop
shl
enter
mov
pop
push
arpl
movs
mov
inc
or
mov
je
(bad)
std
ins
sar
dec
hlt
(bad)
pushf
std
(bad)
enter
retf
pop
mov
arpl
mov
xchg
clc
pop
mov
push
xlat
dec
jecxz
pop
arpl
icebp
cmps
fcmove
pop
or
ror
mov
cli
pushf
ins
cdq
je
aas
rcr
sbb
movs
sub
push
pop
bound
xchg
sub
dec
movs
jb
(bad)
std
mov
popa
retf
aad
stos
cmp
cwde
push
adc
mov
ins
ins
inc
(bad)
in
adc
cld
stos
pop
loop
jl
push
inc
mov
retw
xchg
(bad)
cmp
mov
pop
mov
jne
lods
jmp
jmp
in
push
mov
push
pop
leave
lock
frstor
xchg
or
add
xlat
pop
shl
pop
xor
jne
pop
imul
fs
sbb
idiv
sub
cdq
push
mov
rcl
inc
ss
mov
mov
retf
cmp
fild
pop
or
aam
scas
ins
mov
lds
or
hlt
xchg
push
sub
mov
pop
aas
retf
movs
lods
pushf
(bad)
jnp
sub
aam
mov
sbb
retf
fst
mov
sbb
mov
push
jmp
(bad)
fisubr
adc
jns
sbb
xchg
push
jo
adc
popf
in
(bad)
imul
jb
pushf
aas
inc
in
shl
cmps
jg
and
sub
cmps
add
mov
mov
sar
das
sti
stos
xchg
mov
dec
mov
int3
mov
hlt
clc
shl
pop
mov
repnz
and
xlat
cmp
and
xchg
aas
and
adc
mov
mov
jae
dec
jle
jno
movs
pop
test
(bad)
sar
bound
shl
dec
frstor
sub
inc
aaa
xchg
movs
scas
das
and
mov
add
mov
jbe
repz
sub
out
popf
loop
xchg
out
jge
and
je
adc
jle
mov
sbb
aaa
push
out
sbb
push
jae
sub
and
enter
adc
sbb
outs
ret
hlt
aaa
out
(bad)
(bad)
mov
lea
mov
or
mov
adc
pop
sbb
sti
inc
iret
jge
mov
dec
jb
inc
adc
hlt
sub
cdq
jmp
(bad)
pop
mov
bound
sbb
sbb
jnp
cmp
push
fild
cs
sbb
mov
push
jo
movs
and
jecxz
jge
add
or
mov
imul
(bad)
pop
add
ins
(bad)
fucompp
loopne
jo
mov
jnp
pushf
sub
wrmsr
sub
xchg
fsubr
lods
mov
ss
add
cmp
pop
in
push
lahf
mov
(bad)
jns
test
adc
inc
and
xchg
idiv
mov
movs
movs
push
fld
into
shl
mov
pusha
xor
ret
mov
(bad)
pop
mov
out
adc
pusha
mov
xchg
in
sbb
fwait
btc
push
mov
ret
fcmovne
int
(bad)
out
dec
imul
aas
mov
cwde
or
test
mov
aas
xor
sbb
mov
enter
iret
ds
jb
mov
push
or
sbb
pusha
arpl
add
orps
sub
lock
sbb
shl
stos
push
(bad)
into
dec
retf
shr
mov
mov
fisubr
into
add
aam
or
xchg
test
lds
push
pop
ret
push
push
push
outs
retf
jae
or
sub
(bad)
les
adc
mov
inc
sbb
dec
push
cmp
xchg
clc
stos
mov
jmp
lea
jmp
xor
cmp
gs
popa
pop
and
mov
cmp
mov
(bad)
jmp
repnz
jl
cmp
jge
mov
push
sti
imul
xor
xor
cmc
and
pop
sbb
daa
sbb
dec
or
inc
xchg
adc
or
push
ins
lea
xchg
fdivr
out
push
xor
fisub
fist
repz
in
add
fwait
out
cmp
push
dec
mov
add
and
jl
es
mov
inc
xchg
adc
and
fcomp
in
add
addr16
push
mov
or
adc
mov
push
cmp
cld
pop
mov
dec
stos
sahf
jo
xchg
pop
cld
sbb
es
repz
outs
xor
addr16
(bad)
shl
sbb
ss
xchg
pop
enter
ss
ds
clc
pusha
(bad)
inc
mov
and
mov
pop
cmps
sub
pop
adc
cwde
sub
adc
or
and
adc
mov
cs
rcr
xor
mov
pop
mov
fnsetpm(287
xchg
push
test
enter
and
les
add
sub
cmc
xor
(bad)
inc
or
div
mov
cld
ins
xchg
xchg
js
call
fild
push
(bad)
sbb
loope
jp
aam
call
(bad)
hlt
dec
push
lds
test
clc
and
jmp
jmp
and
test
cmc
jns
test
cmp
out
add
dec
movd
mov
mov
mov
mov
dec
jle
rol
dec
fdivr
jbe
stos
jns
call
gs
outs
sbb
lock
mov
(bad)
sub
cdq
je
jp
xor
push
mov
in
out
(bad)
fnstcw
addr16
push
add
(bad)
in
dec
cwde
leave
or
push
jecxz
dec
clc
pop
xchg
push
scas
add
imul
jl
or
or
int
fwait
cmp
int3
dec
jne
fidivr
dec
xchg
stos
and
push
xchg
test
fidiv
shl
mov
cs
mov
and
ror
inc
int
shl
int
adc
into
jnp
mov
push
sbb
mov
mov
int3
jno
xor
into
xor
stos
xor
pop
push
push
push
sbb
and
(bad)
jmp
sub
stc
cmp
xor
add
mov
or
add
ffreep
mov
inc
sub
sbb
ret
mov
out
pushf
adc
loope
es
adc
jbe
cmc
ret
add
pop
pop
repnz
neg
adc
cmps
or
jl
in
into
shr
mov
jmp
(bad)
cmc
mov
mov
loopne
enter
imul
xchg
stos
jle
dec
(bad)
mov
cmp
cmp
iret
ret
retf
mov
or
jne
clc
and
xchg
in
sbb
lahf
cmps
stos
cdq
movs
aaa
mov
ret
sbb
cmp
sahf
scas
pop
mov
enter
pminsw
pop
scas
(bad)
push
shl
cmps
mov
in
jae
frstor
mov
leave
pop
fdivrp
(bad)
aam
rcl
xor
sub
loope
es
sbb
or
pop
pop
fstp
sti
pop
call
shl
fsub
cmp
mov
dec
leave
mov
mov
jb
dec
out
adc
pop
retf
pop
sub
pop
ins
enter
inc
out
sbb
dec
pop
out
add
mov
test
ja
lods
push
pop
inc
(bad)
xchg
xor
dec
lods
(bad)
pop
mov
cs
ss
into
inc
push
les
lock
out
in
sbb
mov
aam
fcomp
sbb
data16
xchg
cmp
loop
sub
arpl
jecxz
mov
fild
xor
jmp
int
call
(bad)
sub
sbb
inc
repz
mov
call
and
sub
neg
sbb
add
mov
dec
sbb
inc
cli
pop
cmp
rcl
add
and
pop
jmp
shl
pop
jnp
adc
adc
outs
sbb
lahf
fsubr
xchg
mul
xor
bound
(bad)
pushf
rol
ficomp
data16
ror
fist
ret
pop
cmp
jl
mov
(bad)
(bad)
or
mov
loopne
mov
(bad)
hlt
popa
jg
mov
xchg
sar
out
(bad)
out
pop
inc
or
inc
sti
mov
test
into
push
clc
mov
popa
fldcw
mov
aas
aad
retf
mov
push
out
cdq
fnstcw
sbb
out
cmp
(bad)
cdq
dec
jae
pushf
es
ins
mov
rcr
push
push
repz
cmp
clc
repz
add
shl
scas
(bad)
xor
add
jl
test
mov
popa
ret
push
lods
or
imul
loope
aam
xlat
cli
sub
pop
pop
rol
pop
cmps
sub
inc
pop
xor
loope
jns
lea
scas
stos
or
out
daa
pop
adc
mov
call
sub
or
push
(bad)
out
sar
addr16
cmps
aad
and
gs
rcl
ss
push
dec
mov
call
fstp
repz
dec
mov
mov
cmp
mov
dec
mov
inc
xor
push
and
mov
inc
rcl
mov
add
ficomp
aas
xchg
push
pushf
mov
cmp
lods
cmps
ja
pop
rcr
les
ja
dec
push
aad
mov
icebp
and
pop
pop
xchg
fcmovnb
mov
cmp
ins
pop
repz
inc
cmp
or
cmps
lahf
out
fldenv
and
psrlw
les
dec
cmp
xor
pop
call
cdq
push
sbb
lock
jb
and
cmp
and
jno
ror
mov
mov
in
mov
adc
add
add
and
aas
retf
jmp
xchg
dec
movs
imul
jle
int3
jno
cld
ss
enter
ins
pop
jb
fcomp
retf
enter
sub
out
in
inc
sub
movs
mov
mov
mov
int
iret
ret
mov
das
(bad)
xchg
scas
mov
jg
xchg
xchg
cmp
aaa
sbb
xchg
fimul
cmp
add
xlat
in
lahf
jg
cmp
mov
loopne
cs
jo
lods
mov
out
jne
(bad)
xlat
scas
fiadd
out
repz
retf
pop
push
mov
jno
adc
dec
int3
dec
dec
mov
lods
je
stc
rol
daa
dec
movs
icebp
mov
dec
sbb
lock
or
mov
int3
xchg
mov
add
mov
mov
aad
xor
ror
test
cld
or
mov
jp
in
sub
cdq
sbb
push
jmp
adc
push
loopne
add
gs
sub
leave
and
jo
clc
je
xor
scas
push
ret
mov
pop
fmul
(bad)
fistp
shl
adc
adc
adc
dec
in
mov
xor
inc
aaa
and
fs
stos
dec
scas
adc
cmc
sub
mov
jmp
sub
mov
in
mov
(bad)
jns
in
lods
leave
nop
iret
repz
mov
xor
mov
ins
aaa
pop
mov
jl
shl
inc
and
rol
mov
jno
ret
test
dec
inc
iret
xchg
inc
jmp
test
push
and
repnz
sbb
inc
push
pop
bound
fmul
mov
xor
xchg
lods
or
in
sbb
mov
shl
lds
fs
outs
fbstp
mov
jmp
mov
pop
or
(bad)
(bad)
outs
es
cli
outs
mov
dec
sbb
daa
jo
clc
imul
add
bnd
repnz
das
or
mov
and
jge
imul
test
xchg
dec
ror
sar
pop
sub
push
dec
hlt
cmps
mov
xlat
scas
inc
sbb
mov
or
nop
adc
inc
mov
xor
jge
jnp
add
xor
mov
cld
icebp
xor
mov
(bad)
neg
pop
sti
push
dec
inc
inc
dec
pop
int3
or
cmp
test
or
sbb
mov
out
lahf
sub
aaa
mov
lods
xchg
push
stos
xor
and
push
add
dec
or
mov
sbb
xlat
mov
dec
push
fisttp
sub
xor
cwde
or
dec
(bad)
mov
mov
push
test
sbb
jmp
adc
mov
popf
inc
(bad)
push
or
call
icebp
pop
mov
mov
fsub
xor
mov
push
jmp
out
cmc
shr
mov
jge
and
pushf
jmp
js
es
in
dec
xor
xor
(bad)
fst
cmp
clc
push
cmp
fs
je
xchg
in
fst
xchg
mov
push
dec
mov
push
cmp
pop
push
jl
pop
or
push
aam
loopne
sub
in
idiv
mov
or
call
lahf
leave
add
fcom
pop
cmp
or
sbb
outs
bound
(bad)
movs
push
cmps
popa
and
sub
add
jb
test
pop
(bad)
jmp
cmp
lock
out
xchg
mov
rol
sub
sti
mov
dec
jo
and
sbb
jbe
add
retf
movs
jbe
mov
inc
pop
or
mov
mov
sbb
cwde
or
out
and
test
push
sub
push
xor
cmp
loop
cmp
xor
sub
mov
js
mov
daa
mov
xchg
mov
xchg
inc
jae
mov
lods
bound
loope
fsubr
es
jg
jno
cs
addr16
lds
push
jmp
add
into
mov
cwde
dec
cdq
enter
jae
jmp
jns
test
jb
push
int3
inc
push
and
arpl
fwait
shr
cmp
stos
adc
sbb
xor
cmp
arpl
xchg
retf
push
fstp
cmp
int
push
out
sahf
mov
outs
out
rcr
idiv
jae
sub
xor
dec
xchg
mov
xchg
(bad)
xchg
fadd
mov
sub
loop
loope
gs
das
bound
aam
sbb
adc
jne
fld
call
or
cdq
adc
out
jbe
cwde
xor
cmp
mov
mov
cmc
cli
dec
ins
mov
dec
mov
pusha
cmc
outs
mov
call
mov
aad
push
into
push
add
mov
pop
add
xchg
in
jae
jle
xor
mov
mov
ficomp
sbb
pop
adc
rol
pop
call
es
stc
movs
dec
pusha
sbb
ja
xchg
(bad)
(bad)
cli
aas
in
push
xor
push
ins
std
cwde
sub
jno
lods
iret
ror
(bad)
in
add
push
icebp
jmp
fsubr
hlt
inc
pop
test
shr
and
push
test
outs
dec
es
fs
cmp
aam
call
dec
fldenv
add
ds
mov
data16
mov
scas
pop
repnz
mov
ret
xchg
inc
vminss
adc
mov
xchg
fcmovbe
aaa
xor
prefetch
or
ret
jae
test
adc
xchg
dec
(bad)
dec
cmp
pop
shl
std
dec
jmp
fs
push
jns
pop
mov
and
push
fidiv
scas
mov
cmp
adc
jno
inc
(bad)
mov
cdq
repz
sbb
add
or
adc
cmp
jbe
jmp
call
imul
pop
(bad)
dec
cmp
sbb
cmp
test
xchg
dec
ins
mov
test
out
data16
in
mov
inc
ja
in
inc
ror
out
sbb
dec
fidiv
stos
inc
movs
pushf
push
daa
out
lahf
ins
outs
popf
mov
pop
xor
pop
or
ds
sub
xor
icebp
pusha
xor
arpl
in
adc
retf
dec
in
in
retf
enter
jp
mov
fdivp
fbstp
repnz
push
sti
daa
push
add
popa
mov
push
jge
inc
inc
aam
push
imul
ins
aas
or
and
aam
cld
dec
lods
(bad)
nop
stos
jo
xor
aaa
lods
pop
cmps
pop
scas
mov
xchg
mov
push
fidiv
int
out
in
dec
push
jecxz
in
jbe
aaa
(bad)
sub
mov
sbb
pop
test
cmp
fstp
fcomp
loope
add
out
call
clc
mov
jnp
sbb
sbb
icebp
or
sbb
shl
jg
jl
rep
xchg
xchg
adc
pop
(bad)
scas
inc
cmps
fistp
enter
fsubr
mov
movs
jnp
dec
fwait
or
adc
xor
push
loopne
es
popf
push
mov
imul
dec
add
rcl
mov
adc
pop
mov
rcr
call
imul
repnz
call
stc
or
arpl
and
movs
adc
sub
iret
push
add
pop
in
pop
stos
rcr
sbb
das
sub
cdq
push
in
cmc
mov
push
fcomp
push
scas
dec
mov
mov
push
aas
fwait
ds
fld
add
cmc
mov
xchg
in
mov
jmp
cli
int
xchg
ss
xor
xor
lea
(bad)
leave
dec
retf
out
add
cmp
mov
sahf
add
xchg
out
imul
lods
out
jle
imul
daa
add
cmps
mul
in
xor
clc
out
mov
jg
jmp
leave
xor
xlat
push
scas
js
xor
rol
out
mov
or
pop
xor
sub
jb
jae
mov
hlt
call
jo
popf
and
inc
ds
imul
lock
mov
dec
sub
mov
in
dec
push
mov
lods
jb
bsr
inc
inc
cmp
mov
cdq
shl
test
in
arpl
mov
loop
push
cmps
imul
xchg
push
mov
fstp
loopne
or
fld
inc
std
and
jecxz
jle
and
sti
scas
les
and
pop
in
mov
lods
int
adc
jmp
call
mov
adc
and
imul
cmp
dec
cmp
xchg
ins
popf
lahf
leave
add
imul
ins
in
test
(bad)
gs
push
push
adc
push
cs
or
popa
xchg
xor
push
mov
adc
mov
jns
je
inc
les
fidiv
jns
aas
movs
pop
shr
mov
adc
mov
xchg
fbstp
retf
jl
iret
out
fcmovne
mov
into
(bad)
(bad)
imul
iret
clc
fwait
adc
mov
inc
sub
leave
mov
nop
push
cmp
mov
mov
ret
in
mov
(bad)
mov
dec
dec
add
aaa
lea
sub
cli
inc
sub
jne
aam
retf
xchg
fild
leave
mov
ret
pusha
lea
mov
inc
stos
out
out
clc
xchg
cmc
shl
mov
fwait
or
push
xchg
fsubr
addr16
sbb
retf
sub
add
dec
sub
loope
xchg
scas
mov
sub
mov
movs
xchg
bsf
ss
xor
or
imul
loopne
jb
sub
mov
ins
jne
repnz
popa
sbb
adc
cmp
sti
add
mov
js
pusha
cdq
xchg
jno
out
sub
push
fidivr
leave
xor
movs
popa
dec
sbb
push
call
inc
bound
das
cmp
and
ds
lds
jecxz
aaa
fcomp
xchg
xor
add
ins
add
dec
cmp
jb
add
xchg
iret
adc
cwde
inc
mov
lds
and
jp
xor
cdq
lock
pop
mov
xor
retf
fiadd
test
mov
jmp
pop
retf
dec
mov
in
jne
aas
fldcw
mov
add
jmp
cmp
pop
sub
lea
inc
mov
and
loope
call
(bad)
dec
call
sahf
inc
push
repnz
and
out
sub
test
pop
pop
mov
fld
fisub
jp
(bad)
cmp
pop
loop
sar
dec
icebp
mov
and
in
int
fxch
dec
mov
gs
inc
ret
movs
std
push
push
lods
add
shl
pushf
fcmove
push
push
push
pop
xor
xor
push
xor
into
xchg
and
retf
cmp
push
jmp
cmp
mov
in
repnz
mov
cmp
ficomp
loopne
add
mov
iret
vcvtss2sd
mov
pushf
fld
xor
test
outs
(bad)
mov
fistp
loopne
xor
push
add
daa
in
fiadd
fs
mov
cmp
stos
mov
out
dec
or
cmp
xchg
leave
cmp
cmp
pop
addr16
stc
add
repnz
call
test
add
jmp
jb
mov
sbb
jg
mov
mov
or
jmp
lds
pushf
ret
mov
(bad)
push
push
jb
sbb
adc
das
pop
xchg
jbe
mov
dec
cmp
mov
pushf
cwde
push
adc
imul
adc
popf
xchg
or
stc
fcmove
mov
sbb
scas
rcl
test
add
xchg
imul
sub
das
ficom
xor
mov
pop
movs
sbb
and
sti
inc
clc
or
fcom
not
ret
dec
mov
push
sub
scas
xor
(bad)
jmp
(bad)
jns
cmp
dec
mov
or
and
push
pusha
push
pop
push
outs
ds
inc
xchg
xchg
pop
mov
(bad)
enter
mov
lods
mov
sub
xchg
sub
cld
es
cmp
dec
cdq
addr16
pop
adc
repnz
iret
pop
pop
push
adc
fild
adc
ds
mov
leave
dec
sbb
sahf
outs
inc
div
pop
push
jle
daa
mov
mov
sbb
and
sar
ja
add
and
scas
ror
fmul
dec
aaa
push
add
dec
psllq
inc
sub
mov
frndint
data16
aam
pushf
popf
jecxz
pushf
adc
jb
push
sti
or
push
cmp
xchg
dec
and
xchg
push
cdq
sbb
fprem
dec
pop
int
dec
jbe
fcom
test
cmp
or
mov
xor
push
xchg
ror
mov
sbb
xor
jns
stc
jle
pop
dec
mov
sub
mov
inc
mov
pop
xchg
adc
jb
push
test
pop
test
xchg
popf
adc
add
(bad)
xor
sbb
mov
mov
mov
cmp
sub
lahf
loop
jmp
sbb
add
mov
je
repnz
test
sub
pop
pop
mov
fild
movs
scas
mov
mov
cmp
xchg
sbb
dec
test
ja
retf
ret
in
out
call
loope
stc
push
ins
cmps
in
sahf
ins
out
dec
inc
test
in
fs
ror
fstp
xchg
jecxz
inc
mov
or
mov
out
rcr
mov
xor
push
sbb
sti
out
mov
out
mov
ja
(bad)
fsubr
sti
pusha
push
fisttp
jmp
and
popa
mov
cmp
les
xchg
rol
and
repnz
and
imul
nop
push
sti
aad
push
xchg
add
das
mov
jmp
ins
mov
xor
pop
mov
cld
and
mov
mov
dec
test
test
jmp
sub
and
and
fs
and
mov
pop
dec
addr16
mov
(bad)
arpl
inc
mov
push
mov
jno
sbb
loop
adc
mov
lea
retf
push
mov
pop
out
xor
shl
shl
dec
adc
sub
lods
in
mov
outs
imul
lahf
sub
sbb
hlt
cmp
ret
aaa
adc
sub
jecxz
mov
sub
fist
jle
add
ret
push
mov
movs
jl
mov
jo
xchg
neg
cmp
xchg
popf
not
mov
in
sbb
in
out
cdq
and
inc
push
jg
push
nop
retf
or
adc
sbb
jge
popa
je
jl
jmp
scas
into
in
xchg
fstp
imul
sub
mov
sbb
sbb
test
push
inc
mov
sbb
pop
sbb
cmp
jbe
push
shr
outs
std
xchg
cmp
cmp
rcr
out
pushf
inc
sub
loopne
fxch
and
add
sub
in
ins
fucomip
xlat
hlt
adc
mov
and
rol
scas
repnz
out
scas
call
stos
jecxz
dec
out
(bad)
mov
mov
jle
push
sub
add
mov
inc
sti
jne
jge
popa
jae
daa
sar
out
inc
cmc
mov
cmp
mov
int3
aam
(bad)
in
inc
ja
push
mov
inc
xor
mov
(bad)
imul
fwait
xor
push
dec
cmps
test
nop
add
jmp
jmp
sbb
shl
jb
adc
pop
inc
or
pusha
cmp
ror
lods
push
out
cwde
inc
(bad)
aam
jbe
inc
pop
or
mov
mov
call
rol
mov
outs
pop
cmp
push
mov
pop
jno
mov
push
mov
inc
mov
inc
imul
xor
cmps
in
jno
pop
mov
scas
popf
mov
ins
push
xchg
adc
jns
enter
mov
stos
(bad)
out
not
jle
loopne
add
test
scas
or
int
ret
sbb
mov
repz
das
lahf
ja
cmp
ret
retf
in
mov
dec
pop
pop
in
fs
test
xor
outs
mov
mov
lods
(bad)
into
xchg
mov
jle
sbb
mov
cmps
pop
sub
pop
cld
mov
(bad)
out
lahf
test
int
lahf
js
out
sahf
add
add
(bad)
outs
arpl
jne
dec
mov
cmp
lahf
mov
add
retf
add
ins
pop
aaa
dec
pop
cmp
ds
ds
fcomp
ret
add
dec
fmul
pop
adc
aas
test
xchg
iret
mov
xor
int3
or
lds
jecxz
or
push
std
add
mov
aas
xchg
mov
pop
xchg
in
jl
xor
xor
fiadd
shl
inc
popf
and
mov
add
sub
lahf
ds
jmp
pop
sbb
xorps
shr
(bad)
movs
fnstsw
lahf
cld
outs
popf
xor
dec
imul
test
mov
sbb
into
je
outs
and
push
cmps
jl
fs
xchg
pusha
fsub
sar
int3
xchg
mov
jmp
dec
iret
ss
cmp
push
cmp
dec
ins
sbb
lahf
pop
fucompp
fcom
xor
jl
and
lds
xchg
pusha
ret
or
mov
(bad)
add
add
mov
ret
enter
mov
movs
xchg
push
jl
jno
jb
sbb
add
std
movs
bound
push
mov
je
jmp
adc
lods
rcr
arpl
das
xor
cdq
mov
inc
jb
inc
jae
mov
scas
test
dec
fcmovnbe
inc
and
sbb
push
call
outs
ret
ins
shr
test
xchg
and
xchg
xor
cld
mov
mov
mov
shl
sub
add
push
xchg
xchg
int
int
cwde
add
xchg
int
inc
rcl
test
mov
inc
sbb
mov
xor
nop
jnp
push
push
or
pusha
pop
inc
jecxz
add
xchg
sbb
aad
pop
pop
jge
ret
push
jne
push
cwde
jmp
out
mov
sub
aas
fbld
mov
sub
pop
mov
shr
xor
ds
inc
mov
mov
frstor
int
xchg
sub
or
jp
mov
pop
pop
xor
loop
push
lods
mov
push
fdivp
aad
(bad)
jge
xor
nop
xor
in
push
mov
js
pusha
mov
repnz
repnz
sub
jns
and
jecxz
scas
je
sbb
pop
pusha
mov
in
popf
imul
xchg
sbb
fdivr
xor
xrelease
push
inc
mov
cmp
fsub
sub
out
retf
mov
aaa
test
pop
(bad)
out
jp
not
or
jae
and
dec
add
add
jg
aad
xor
dec
arpl
test
jbe
jns
add
mov
inc
jge
mov
test
adc
push
retf
mov
(bad)
sbb
jbe
mov
inc
xlat
(bad)
hlt
xor
jne
add
sub
cmp
xchg
out
or
push
mov
sbb
movs
out
pushf
sbb
xchg
adc
mov
hlt
imul
out
or
mov
pop
mov
inc
clc
test
test
inc
or
loop
mov
cmp
lock
mov
dec
(bad)
call
call
jmp
mov
mov
or
out
push
xor
gs
xor
lock
xchg
in
aas
mov
push
dec
fadd
pop
das
push
mov
mov
mov
adc
mov
out
fisubr
lds
xor
loopne
out
mov
sbb
jo
add
add
mov
mov
movs
iret
cmp
pop
mov
icebp
iret
cld
adc
xor
pop
outs
xor
cmp
sub
sbb
sub
pop
mov
add
push
sahf
xchg
into
neg
leave
fs
hlt
sbb
sahf
inc
stc
sub
fidivr
scas
pop
fwait
(bad)
adc
inc
inc
lea
into
repz
jnp
cmp
jle
xchg
inc
pop
dec
inc
adc
mov
mov
adc
jmp
mov
pop
xlat
popf
mov
xor
cmps
nop
in
mov
dec
push
push
mov
aaa
ds
call
stc
push
popf
aaa
adc
mov
or
cmp
or
test
stc
fsub
(bad)
sbb
ss
cmp
push
adc
inc
jle
push
mov
sub
dec
xor
jg
adc
aaa
xchg
(bad)
jp
dec
mov
pusha
into
push
push
xlat
sbb
(bad)
dec
into
add
pop
add
xchg
out
mov
mov
or
adc
push
(bad)
out
mov
adc
push
and
jmp
out
loop
fs
sub
dec
fadd
and
pop
pop
mov
push
dec
sti
shl
popf
sbb
repnz
add
sahf
jae
jmp
cs
xchg
add
movs
cmp
mov
push
cmc
pop
loopne
dec
aas
and
les
sub
mov
adc
retf
or
push
loope
data16
sbb
sbb
or
call
fucomp
daa
sub
fld
hlt
(bad)
aas
jae
test
jnp
inc
mul
push
jl
mov
vcvtss2si
pop
jl
fdiv
in
int
push
jg
nop
inc
arpl
mov
hlt
ret
rol
shl
ds
mov
inc
dec
jge
sbb
ret
ins
xchg
lods
pop
popa
ins
cmp
cmps
mov
sub
and
imul
inc
mov
test
xchg
mov
add
ins
xor
addr16
jmp
shl
xor
xchg
mov
pop
shl
arpl
mov
lods
add
frstor
cmp
test
xchg
(bad)
in
fdivp
sbb
std
cmp
pop
pop
out
jmp
sub
test
leave
mov
shl
or
cld
mov
movs
lock
xchg
sbb
sbb
inc
jo
repnz
push
pushf
mov
mov
sti
inc
or
mov
cmp
rcl
cld
sar
cmp
jnp
adc
call
mov
mov
jge
dec
mov
in
pushf
retf
sbb
out
dec
adc
sub
int
(bad)
test
fstp
hlt
movs
out
pop
jmp
xchg
stc
mov
cmp
add
mov
js
je
adc
movs
gs
aaa
shl
rol
add
sbb
dec
sub
or
sub
add
fnsave
push
push
gs
mov
call
cs
lods
push
jmp
mov
mov
js
stc
test
out
push
pop
test
mov
idiv
push
add
test
mov
sbb
rcl
add
jmp
aaa
mov
movs
xchg
mov
jae
xor
lock
mov
aas
mov
sahf
dec
in
cmp
pop
add
sbb
hlt
sar
cld
xor
push
push
repz
test
mov
push
or
(bad)
mov
pop
xor
xlat
call
adc
add
xchg
stos
ret
push
(bad)
mov
xor
jmp
rcl
aaa
addr16
fimul
in
push
mov
in
stc
and
sbb
lahf
into
and
into
clc
in
cs
call
fs
cmp
call
std
sub
push
mov
nop
push
bnd
enter
fs
cmp
xchg
ins
sub
aaa
(bad)
push
mov
fpatan
movs
pop
arpl
cmps
fadd
mov
dec
das
adc
inc
or
rcl
adc
and
or
cmp
aas
and
jge
push
sub
sar
scas
dec
inc
retf
adc
dec
sub
and
in
out
repnz
pop
xor
ret
shl
stc
mov
push
out
les
push
fisttp
test
gs
fdivrp
(bad)
sub
leave
push
inc
iret
scas
fmul
or
out
out
jp
pop
xor
xchg
sub
dec
fsubr
mov
xor
das
loope
add
sub
iret
in
fisubr
test
das
lahf
mov
push
mov
js
inc
bnd
jb
leave
stos
adc
push
nop
cld
cwde
inc
sbb
and
xchg
ins
push
icebp
jle
jl
sbb
xor
or
jnp
gs
sub
inc
cmp
rcl
inc
(bad)
xchg
cdq
xor
mov
out
adc
xchg
add
xchg
or
in
cs
sub
jns
outs
fidiv
or
jge
shl
adc
(bad)
(bad)
mov
push
adc
out
jp
js
mov
adc
fwait
inc
fdivr
test
in
dec
add
jnp
cwde
pop
shr
adc
in
cmps
mov
xchg
inc
in
dec
mov
shl
out
sbb
xchg
add
out
mov
push
and
std
loop
cmp
or
enter
nop
xchg
out
imul
js
pop
inc
mov
out
ins
and
stc
scas
push
xchg
mov
or
cmp
push
aad
pusha
push
inc
jno
pop
fisubr
repz
inc
xchg
push
lods
mov
jecxz
mov
xchg
xor
fisubr
xchg
inc
cmp
adc
rcr
xlat
ret
data16
adc
and
xor
aam
mov
ins
sar
or
test
call
pop
push
inc
and
jns
jns
add
cld
rcl
inc
lods
arpl
mov
fiadd
(bad)
aaa
sbb
sbb
cmp
and
mov
stos
xor
nop
dec
mov
into
cmp
sbb
ja
jmp
ret
mov
fldlg2
jmp
(bad)
cmp
sti
jl
jmp
ffreep
push
in
cmps
fsub
push
adc
or
sbb
add
add
xchg
out
out
jmp
cmp
mov
and
sub
or
ret
cmp
neg
inc
mov
pop
xor
lock
or
in
icebp
bswap
cwde
pop
dec
mov
mov
xor
popf
dec
sbb
mov
ret
push
retf
sti
jno
data16
sahf
pop
fbstp
aam
push
pop
test
or
mov
xchg
add
sbb
outs
pop
ret
outs
jae
mov
push
dec
mov
cdq
pop
sbb
pop
aam
inc
adc
mov
shl
mov
fs
in
jge
(bad)
sbb
inc
cmps
out
lods
xchg
add
cmp
xchg
shl
shl
ror
shl
cmp
pop
lahf
jb
iret
rcl
mov
jecxz
pop
xor
cmp
push
jne
movs
pop
rol
jecxz
(bad)
leave
dec
fnstenv
pusha
pop
stos
pop
in
push
pop
in
ud1
ret
les
ds
retf
outs
pop
sub
pop
mov
mov
in
ins
fidiv
sub
sub
pushf
jmp
and
xor
ins
or
cmps
lods
push
in
outs
and
out
mov
int
lea
jg
sbb
cwde
repz
stc
out
addr16
pop
mov
(bad)
clc
or
imul
cwde
and
arpl
add
movs
cdq
(bad)
sbb
sbb
pop
xchg
adc
cmc
xor
idiv
mov
and
dec
cmps
fdivr
aad
jge
adc
xchg
nop
fdivp
aad
dec
jmp
out
pop
add
mov
dec
mov
add
adc
xchg
movs
(bad)
jecxz
in
dec
jecxz
movs
inc
sbb
lods
gs
dec
xor
push
mov
fsub
mov
add
in
call
adc
sbb
xor
mov
pop
push
add
pop
imul
ins
ds
stos
mov
call
mov
icebp
sbb
jmp
pop
das
shl
inc
inc
imul
ret
dec
xor
and
stos
dec
pop
mov
fnstcw
cmp
stos
inc
and
mov
lock
dec
retf
arpl
lds
jnp
push
into
mov
out
hlt
sbb
test
inc
push
lods
mov
sub
test
xor
cmp
jb
sbb
add
jae
(bad)
xchg
adc
pop
jb
rcl
mov
push
xor
inc
xlat
sbb
test
into
jb
and
pop
rcr
push
into
xor
arpl
aas
lods
inc
fisub
loop
scas
push
(bad)
dec
scas
mov
jp
shl
adc
jl
jns
idiv
ret
sub
push
(bad)
hlt
sub
imul
push
sub
jge
inc
cli
pop
mov
inc
bound
fadd
mov
loopne
movs
inc
sbb
pop
jb
leave
or
mov
aaa
inc
cli
out
sub
shl
jb
sti
inc
mov
fxch
stc
stos
mov
in
lock
jo
pop
xchg
or
and
mov
or
fdivr
xor
loop
lods
dec
retf
pop
stos
popa
add
mov
lea
pop
in
sti
lods
mov
mov
into
jbe
scas
pop
jmp
ss
pop
push
mov
imul
mov
add
sbb
adc
cmp
and
in
dec
xchg
add
cmp
mov
loop
stos
arpl
jb
or
add
inc
xor
ret
add
in
jbe
jb
or
push
mov
push
call
test
mov
adc
or
leave
hlt
(bad)
lock
clc
cdq
cdq
loopne
fisub
mov
int
push
adc
dec
outs
add
pop
add
cmp
sbb
mov
cmpxchg
mov
xor
mov
sub
xlat
sbb
shl
ret
out
inc
inc
icebp
inc
int
lods
xor
stc
das
mov
add
sub
loopne
cld
enter
cwde
(bad)
dec
fadd
adc
repnz
jmp
out
adc
pop
lock
add
push
add
jmp
test
into
retf
test
pandn
je
in
jbe
(bad)
add
call
dec
pop
ss
xchg
pushf
loope
rcl
dec
rcr
in
shl
cmps
adc
pushf
lds
pop
ds
fsubr
lahf
cmp
xchg
inc
in
icebp
icebp
pop
sbb
iret
dec
jp
icebp
retf
lds
test
or
addr16
(bad)
jg
fwait
jnp
sub
out
cwde
mov
aaa
inc
jle
loop
mov
cmp
lahf
or
jbe
rcl
pop
ins
sbb
aad
xchg
cs
in
sbb
ror
in
or
movs
fidiv
rcl
and
push
fmul
repnz
push
(bad)
(bad)
hlt
pop
enter
inc
stos
or
das
ds
sub
push
cmp
imul
das
push
call
and
push
retf
aas
pushf
cmps
pop
pop
add
mov
outs
adc
ud0
dec
jo
stos
stos
cmp
call
ror
pop
xchg
arpl
jmp
int3
retf
stos
jae
mov
cmpxchg
inc
and
jo
push
rol
dec
pop
lahf
retf
or
jecxz
fnsave
lds
popf
out
xchg
lock
add
clc
ret
or
lahf
cmps
pushf
push
hlt
cli
aam
jbe
test
sub
mov
and
mov
push
fstp
and
mov
cmp
xchg
add
rcr
leave
repnz
popf
out
stc
mov
mov
out
or
mov
bound
sahf
adc
ins
retf
cs
inc
cmp
rcr
leave
fwait
shrd
sbb
push
or
mov
popa
(bad)
mov
nop
xchg
push
inc
jmp
inc
adc
sub
inc
outs
sbb
sti
cld
jp
lods
dec
jbe
mov
and
pop
dec
in
bound
push
inc
xchg
cs
shl
lock
cmp
xor
fstp
div
mov
retf
retf
movs
push
(bad)
imul
(bad)
pop
mov
or
sub
cmp
sub
pop
mov
push
mov
adc
sti
cmp
out
ror
bound
mov
clc
icebp
cmp
int3
sar
ins
in
jns
clc
xchg
out
ins
pop
cmps
and
sub
rol
nop
mov
lds
cmc
in
pop
cmc
xchg
adc
mov
or
retf
ret
sub
inc
in
mul
jge
dec
hlt
lahf
stos
pop
inc
ds
inc
push
push
add
sub
shl
cmp
popf
xor
pop
or
jg
xchg
sub
push
cld
sub
add
mov
cmps
test
jne
cwde
out
cmps
fisubr
retf
add
daa
int3
out
pop
add
lods
xchg
mov
js
rol
clc
push
cli
mul
and
mov
and
movs
mov
jmp
adc
pop
mov
cmp
pop
xor
push
retf
sahf
les
mov
xor
push
shl
out
sbb
mov
mov
fild
stc
inc
xchg
jle
idiv
fwait
push
imul
jl
je
repz
adc
scas
outs
jle
pop
mov
xor
clc
clc
loopne
jbe
ins
cmp
out
int3
add
cld
in
inc
xor
lock
mov
add
std
jge
(bad)
test
out
aaa
into
test
and
inc
int3
ret
xchg
enter
dec
push
jo
and
dec
bound
adc
(bad)
mov
lock
xchg
movs
in
push
daa
and
inc
not
mov
add
ins
add
mov
ss
cmps
movs
xlat
inc
imul
out
and
adc
push
shl
mov
or
push
jb
adc
xor
add
mov
fisub
mov
ud2
test
jecxz
daa
and
dec
enter
(bad)
jp
and
pop
cdq
lahf
test
sub
jnp
outs
ret
mov
xlat
jg
popa
xchg
daa
mov
mov
mov
movs
add
inc
or
pop
loope
pop
xchg
pop
je
push
jns
mov
stos
arpl
pop
popf
arpl
push
mov
xor
sbb
adc
pop
aas
(bad)
lock
sbb
xlat
scas
xchg
idiv
xchg
in
jo
mov
mov
sub
js
mov
xor
ja
mov
sub
dec
sar
loope
fidivr
and
mov
imul
fisubr
repz
into
xor
data16
dec
dec
rcl
ror
xor
and
xlat
xchg
fs
push
int3
and
aas
push
sbb
add
inc
popf
or
out
cmc
mov
ret
in
inc
pop
sti
add
mov
cmp
std
sbb
push
int3
fisttp
mov
lahf
pop
leave
inc
das
cmp
pusha
loopne
dec
adc
daa
mov
jmp
or
pop
push
shr
iret
stos
inc
and
jo
fbld
test
sub
test
es
scas
leave
push
pop
adc
outs
pop
add
cmp
pop
inc
push
xchg
mov
adc
cmps
das
in
push
adc
dec
or
pop
add
ss
xchg
call
push
stc
retf
cmp
push
lock
xlat
jmp
cmp
jns
add
xlat
xchg
or
fucomp
scas
cmp
repz
push
sbb
jle
sar
loope
out
aad
push
xor
sub
inc
jmp
xor
fstp
loope
mov
daa
leave
in
mov
sti
aas
aam
jno
enter
add
push
lods
push
lods
cmp
ss
not
test
mov
cmps
and
pop
cmps
sar
xchg
(bad)
xchg
data16
mov
retf
dec
jecxz
sbb
fisub
or
ja
mov
dec
fld
out
mov
sbb
stc
xlat
dec
mov
mov
cli
push
imul
fstp
mov
push
cmp
in
std
adc
js
ins
mov
(bad)
xor
inc
sbb
(bad)
mov
(bad)
loop
lods
fst
outs
push
pop
icebp
fnstcw
pusha
clc
pop
in
adc
and
or
aad
pop
dec
sub
dec
out
jg
leavew
xchg
mov
jne
push
imul
retf
push
into
dec
fstp
scas
shr
or
pop
movs
push
dec
arpl
jmp
mov
int3
or
imul
mov
ja
dec
jp
pop
mov
mov
pop
push
shl
dec
cld
lods
push
nop
push
and
pop
xchg
mov
shr
aaa
adc
push
out
pop
mov
dec
push
push
jp
hlt
adc
in
push
iret
jne
int3
test
out
cmc
cmp
pop
mov
xor
fs
inc
cmps
mov
or
push
inc
push
adc
jne
adc
scas
call
sar
inc
pusha
or
inc
sar
add
mov
rcr
test
mov
jno
fcomp
push
mov
xchg
mov
movs
sub
retf
gs
(bad)
sbb
pop
pop
sub
ja
or
push
jmp
xor
push
cld
gs
push
icebp
iret
out
in
out
cmp
xchg
fist
out
std
rol
cli
ret
or
sub
mov
(bad)
fistp
das
mov
pop
xor
lahf
pop
popa
jbe
xchg
test
(bad)
mov
jecxz
sahf
popf
or
jne
sbb
sub
in
aaa
xchg
push
mov
sbb
mov
stos
or
lock
jecxz
nop
cmp
(bad)
jp
scas
xchg
in
or
retf
icebp
lods
bound
pusha
mov
and
xor
pop
sub
jl
test
mov
sub
mov
xor
push
mov
push
mov
fbld
fistp
pop
mov
dec
adc
in
jle
out
rol
lds
daa
mov
sub
outs
sub
jo
leave
dec
jb
mov
movs
inc
cmp
lock
cld
repz
les
xlat
aas
int
mov
xchg
adc
fdiv
mov
inc
ds
sub
je
in
rcl
cmps
push
mov
mov
aad
mov
sbb
inc
cmp
retf
jl
mov
pop
mov
add
add
and
inc
jecxz
xchg
test
cmp
ins
(bad)
mov
push
mov
dec
xor
mov
pop
mov
inc
jns
movs
fs
inc
and
hlt
mov
mov
mov
jae
movs
push
iret
(bad)
leave
xor
xchg
ret
and
ins
in
popf
pusha
cmp
xchg
dec
push
fld
push
mov
out
iret
or
dec
test
test
not
mov
ja
(bad)
sbb
xchg
pop
jnp
jne
or
jbe
fmul
mov
call
clc
mov
cmps
dec
lods
mul
cmps
test
sbb
fwait
(bad)
jne
add
dec
mov
stos
mov
push
mov
(bad)
ins
imul
mov
pop
or
repz
push
out
gs
adc
xor
mov
aas
int3
ss
add
xor
push
mov
jge
nop
les
add
sbb
in
ds
inc
(bad)
or
lea
or
dec
inc
fmulp
cmp
sub
or
iret
adc
sbb
cmp
dec
fbstp
enter
mov
cmp
dec
shl
jne
daa
shl
add
sub
adc
es
mov
dec
retf
dec
mov
lds
mov
xor
fdivr
push
pushf
jbe
(bad)
loopne
jl
jl
cmp
icebp
pop
push
nop
call
cli
pusha
in
mov
(bad)
pusha
cs
xchg
cli
pminsw
cdq
pop
sbb
ror
push
int
sbb
or
mov
push
and
push
in
xor
xchg
loope
add
sub
fsub
inc
jg
fsubrp
jnp
inc
out
mov
stc
dec
mov
sar
inc
push
int
test
or
lock
cli
les
jle
jecxz
cmps
rol
push
sub
mov
xchg
addr16
shl
das
mov
adc
xor
xor
test
push
fld
jecxz
in
into
test
jg
mov
or
mov
push
rol
jl
pushf
and
mov
repnz
out
xchg
cmp
or
(bad)
jmp
mov
dec
aaa
xchg
xchg
mov
jbe
mov
(bad)
cmp
neg
dec
push
jg
fsubr
and
ret
jne
or
inc
sti
out
xor
fdiv
pop
(bad)
pop
sti
out
xlat
push
mov
fdiv
cs
ret
lahf
mov
cmc
stc
in
add
sub
fstp
cmc
jl
sbb
cmp
push
fwait
xchg
daa
mov
cli
div
loop
jae
int
pop
sbb
ret
jnp
popa
loope
push
scas
daa
dec
sub
loope
sti
ds
xchg
ds
push
div
fadd
jmp
mov
lahf
dec
mov
(bad)
retf
lods
mov
and
test
jno
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
in
add
pop
jge
hlt
mov
add
sub
push
out
addr16
jmp
data16
push
push
push
stos
mov
gs
syscall
sbb
or
push
mov
leave
mov
pshufw
shl
pop
jmp
dec
and
inc
inc
xchg
sub
arpl
data16
out
icebp
outs
pop
fld
push
(bad)
fld
pop
clc
fld
fistp
test
sti
call
adc
dec
adc
ret
scas
push
adc
or
dec
jbe
cmps
or
mov
in
mov
inc
sbb
int3
xchg
mul
push
ins
mov
sub
jae
dec
mov
shl
neg
test
and
and
sbb
mov
pushf
rcr
mov
mov
add
(bad)
mov
out
push
xchg
and
jbe
les
push
jle
mov
mov
sbb
push
cs
movs
push
je
sbb
(bad)
daa
jne
mov
inc
jg
xchg
sbb
sbb
inc
add
int3
ret
es
pushf
or
mov
xor
add
adc
cli
cmps
cmp
sti
jbe
and
std
scas
dec
popf
adc
(bad)
in
jl
cmp
inc
enter
(bad)
push
vfixupimmps
dec
fs
es
scas
cmp
pusha
and
data16
cmp
repnz
out
mov
out
test
cmc
retf
sub
push
cmp
add
clc
clc
es
xchg
add
shl
push
and
fsubr
(bad)
add
mov
repz
fisubr
arpl
cs
add
cmp
fnstcw
js
inc
jle
jge
sbb
push
sub
inc
fwait
fs
mov
(bad)
shr
leave
add
cmp
lods
sub
jmp
fwait
leave
ja
jle
shl
sbb
stos
lds
push
mov
mov
jmp
xor
sub
outs
mov
pop
(bad)
mov
aaa
loope
jge
pop
and
icebp
pop
ds
das
aaa
outs
aam
lahf
pop
stos
cmp
ins
jae
dec
inc
in
or
cmc
add
int3
adc
cmps
iret
call
jae
mov
dec
rcl
aas
addr16
leave
pop
inc
pop
(bad)
(bad)
in
add
push
sub
data16
int
call
and
add
popf
mov
repz
mov
push
pushf
int3
stos
mov
sbb
push
ins
mov
inc
add
sub
sub
pop
aam
and
es
and
jno
or
dec
repz
in
xchg
and
stos
pop
dec
and
popf
ret
mov
dec
dec
inc
inc
jns
jnp
rol
pop
ja
cmp
mov
in
fs
mov
push
shl
loope
(bad)
dec
inc
loop
mov
das
inc
ret
pushf
into
stc
mov
mov
movs
retf
mov
inc
mov
pop
jge
repnz
inc
mov
js
ror
cmp
rcr
or
in
out
ja
xor
sti
add
jecxz
jns
xor
pop
lea
arpl
enter
ret
sbb
or
loop
mov
imul
jne
fadd
and
xchg
sub
ins
xor
arpl
int3
and
cmp
(bad)
or
repnz
jmp
pop
test
scas
ret
pop
inc
or
scas
jecxz
and
mov
lock
ret
inc
lds
pop
xchg
fnstsw
sub
add
adc
jbe
(bad)
mov
(bad)
xor
jp
mov
mov
pushf
das
pop
cmps
add
and
jl
and
add
outs
lahf
loope
or
xchg
or
push
adc
add
sub
cs
cmp
fistp
int
push
xor
out
xor
(bad)
retf
inc
adc
xor
xchg
sbb
or
mov
and
in
(bad)
stc
cmps
or
sbb
imul
dec
jp
je
sbb
jae
inc
mov
jae
iret
sub
mov
scas
cli
(bad)
and
and
dec
xchg
stos
jmp
inc
mov
int
mov
add
stos
aam
sub
xchg
cdq
mov
sub
mov
cdq
das
inc
mov
jge
cmps
aad
icebp
mov
xor
mov
out
cdq
(bad)
jle
sti
sbb
add
cmp
jb
lea
sbb
cld
ror
mov
stc
sbb
loope
dec
mov
hlt
rcr
movs
xchg
dec
inc
es
or
mov
std
add
mov
je
inc
sar
mov
aas
xor
outs
scas
mov
jno
sub
or
in
mov
daa
cmps
inc
xchg
out
or
mov
xchg
push
xor
pusha
mov
sbb
out
xchg
sub
fisttp
cmp
enter
in
push
push
cmp
add
movs
cmp
rcr
scas
add
clc
shl
or
sbb
hlt
cmps
adc
pushf
jl
fisttp
push
sub
out
addr16
mov
call
loopne
mov
xchg
pop
std
(bad)
shl
lods
sahf
xchg
xchg
js
int
sbb
push
sub
xchg
cmp
ins
arpl
sbb
imul
fsubr
ss
rep
aad
nop
push
imul
lods
test
mov
dec
xor
sub
frstpm(287
sub
cmp
dec
and
pop
mov
lahf
cli
or
xabort
je
dec
sar
sbb
xchg
shl
dec
cmp
fistp
outs
xor
retf
das
(bad)
xlat
add
mov
add
push
push
cli
addr16
sbb
ins
cmps
gs
sub
cmp
xor
imul
jmp
test
icebp
push
mov
test
or
out
(bad)
aaa
ret
jnp
outs
xchg
lock
fild
push
cmp
pop
mov
fdivr
clc
outs
mov
sub
stos
xor
sub
xor
ret
sub
loopne
xor
and
jns
inc
mov
push
(bad)
xchg
add
call
add
sahf
mov
pop
fdiv
dec
outs
xor
scas
adc
das
loopne
mov
jge
xchg
adc
adc
sub
pop
outs
adc
adc
fild
mov
mov
pop
lahf
xor
(bad)
xchg
or
rcr
repz
fs
aas
adc
adc
scas
dec
icebp
sub
push
push
dec
stos
movs
rcr
stc
cmp
cld
adc
clc
add
dec
lods
mov
cld
sub
inc
and
mov
lds
jo
jg
test
inc
push
cld
call
cmps
xchg
xor
fsub
jae
dec
movs
or
(bad)
adc
sub
shl
mov
and
test
aas
adc
cmp
in
jp
mov
inc
out
dec
(bad)
mov
mov
cld
xchg
mov
movs
pop
mov
sub
jmp
pop
xchg
sar
mov
cmc
jl
sbb
ins
(bad)
pop
sbb
stos
loopne
bound
fisub
sub
cmc
cwde
leave
repnz
test
mov
in
mov
inc
cwde
call
js
std
sbb
icebp
mov
aaa
cmp
xchg
mov
mov
aas
scas
push
pop
inc
and
aas
xchg
cmps
js
xchg
xor
mov
mov
fbstp
mov
sar
xchg
xchg
stc
jmp
dec
jns
scas
out
aad
add
pop
pushf
cs
test
cmp
push
pop
xor
cmp
adc
clc
(bad)
lods
iret
(bad)
mov
stc
lods
dec
inc
cmp
dec
and
mov
sbb
mov
inc
or
cdq
in
rol
push
test
sub
or
sbb
(bad)
pop
jge
test
mov
aas
ins
jnp
aam
int
addr16
sbb
cs
movs
mov
das
out
lahf
cwde
sub
ror
ret
pusha
movs
out
fsub
or
adc
cmp
pusha
ins
xlat
or
rcr
inc
popf
imul
adc
add
rol
(bad)
call
out
iret
adc
pop
dec
popf
mov
xor
inc
xor
inc
mov
arpl
and
rcl
cwde
es
int
aas
pop
inc
xchg
add
push
dec
fcom
sbb
add
aad
xchg
jns
idiv
dec
mov
mov
mov
pop
movs
popf
int
mov
(bad)
out
jnp
je
fidiv
fsubr
mov
data16
sub
jnp
ror
adc
rcl
dec
add
xchg
imul
and
jmp
mov
adc
push
imul
jb
sub
xchg
iret
xor
cmp
(bad)
jg
push
inc
and
cmps
shl
push
out
and
cli
cld
push
(bad)
stc
push
scas
in
test
cwde
movs
xor
pusha
fwait
in
push
ins
dec
frstor
lods
fnsave
mov
fdivr
or
adc
mov
jge
xchg
sbb
inc
lods
ins
cmp
ins
jb
mov
test
add
push
jo
mov
xchg
add
das
jg
push
and
rcl
xor
adc
sbb
cmp
mov
fs
mov
mov
jno
aam
cmp
mov
aas
sub
cwde
lock
sbb
sbb
aad
mov
cmp
in
enter
pop
xchg
inc
(bad)
js
adc
mov
jmp
(bad)
das
loope
inc
sti
gs
sbb
cdq
mov
adc
inc
popf
int
pop
cmps
bound
jmp
popf
add
adc
loop
push
pushf
int3
inc
clc
pop
jnp
test
sahf
xor
int
ja
outs
js
pop
jmp
xchg
cmps
ja
dec
cli
and
push
fmul
inc
imul
sete
(bad)
call
cwde
and
pop
cmp
xchg
aas
xchg
aad
cmp
add
inc
fild
mov
and
inc
ds
loope
sub
xor
std
cmps
jae
scas
pushf
(bad)
pushf
outs
(bad)
mov
cmp
fimul
mov
mov
jne
xchg
adc
mov
inc
pop
mov
in
div
aam
add
add
les
mov
mov
mov
clc
das
adc
in
or
or
dec
pop
inc
mov
push
mov
sub
movs
adc
mov
out
xor
aad
test
xchg
call
into
sar
pop
dec
pusha
mov
cld
inc
jbe
sbb
pop
cmps
test
push
mov
sahf
lods
adc
mov
mov
stos
das
push
lods
push
(bad)
jns
sub
outs
jne
cmc
imul
adc
pop
leave
loopne
lea
push
fmul
push
call
or
daa
popa
daa
scas
int
(bad)
ror
clc
mov
enter
das
movs
inc
(bad)
dec
rcl
sbb
mov
imul
cmps
add
jae
mov
scas
mov
bound
and
dec
sar
add
pop
add
hlt
mov
add
mov
ins
mov
mov
mov
je
xor
rol
and
jle
mov
jle
cld
jbe
or
sar
jnp
addr16
aas
fsubr
mov
inc
adc
and
sahf
pop
mov
push
loop
not
fcmovu
sub
into
mov
iret
loopne
int
sub
ret
push
call
jmp
addr16
ja
xor
mov
xchg
and
adc
lahf
jno
mov
mov
lds
icebp
stos
out
mov
into
in
inc
jns
xchg
mov
rcr
add
inc
push
out
push
cmp
push
jbe
arpl
mov
jl
dec
xchg
hlt
fbld
(bad)
mov
lods
leave
xor
pop
cdq
retf
jle
fisubr
ins
inc
int3
daa
dec
aad
out
add
nop
pop
int3
aas
pushf
into
cmps
and
(bad)
shr
ins
sbb
loopne
xor
jmp
cli
cmp
loopne
and
inc
cs
(bad)
xor
aaa
popf
movs
mov
push
mov
jb
add
mov
stc
call
add
mov
or
xor
int3
jnp
in
repz
scas
push
in
inc
jno
xchg
mov
cli
xor
sahf
das
outs
scas
pop
aad
jae
pushf
pop
sub
loope
xor
data16
loopne
adc
test
sub
sub
bound
sbb
shr
(bad)
and
rcr
xchg
stos
stc
mov
mov
fstp
adc
or
push
cmp
ds
xchg
push
and
je
movlps
mov
(bad)
cld
int
jne
cli
sti
sub
rcr
movs
or
and
outs
mov
adc
arpl
movs
xchg
xlat
sub
cdq
movs
stc
mov
outs
in
pop
cmp
pop
pop
mov
imul
out
add
xchg
xor
push
repz
sub
mov
push
arpl
inc
mov
dec
adc
int3
div
dec
nop
imul
sub
scas
push
adc
outs
pmovmskb
pop
pop
dec
lods
ds
or
leave
xlat
jg
jne
sbb
cmp
hlt
rcl
cmp
mov
fiadd
sbb
add
ss
mov
xchg
cmp
es
imul
cmps
inc
inc
stc
cmps
pop
inc
mov
pushf
ss
dec
add
pop
pop
inc
cmps
ja
test
pop
imul
out
sbb
or
mov
pop
mov
mov
popf
sub
cmp
arpl
(bad)
call
dec
outs
jge
push
rcr
cdq
push
cs
cmc
sub
pop
pop
nop
pop
sahf
stos
dec
cmps
fscale
mov
push
outs
xor
outs
into
mov
pop
test
(bad)
sti
iret
jno
sbb
js
ins
xchg
mov
mov
lds
and
leave
(bad)
shl
jmp
or
mov
push
sub
mov
mov
jns
or
loope
rcl
out
cmps
sti
inc
sbb
js
mov
fsub
adc
pusha
jo
daa
dec
sti
and
adc
adc
push
mov
nop
jno
das
sub
push
dec
cmp
pusha
das
aaa
repz
dec
test
or
pop
xchg
cs
mov
sub
pop
fisttp
data16
jo
push
sub
mov
int
and
movs
int3
shr
cmp
dec
cli
iret
jl
ret
repnz
cmp
sbb
outs
push
div
stc
xor
pop
lods
add
or
aad
and
pop
fld
adc
mov
ins
mov
jecxz
push
ins
add
fcom
es
scas
je
imul
pushf
inc
xlat
xor
movs
popa
fcmovnu
outs
mov
ret
lahf
repnz
shl
jns
mov
ror
test
(bad)
and
cwde
in
ins
inc
enter
adc
dec
add
add
push
scas
inc
cmp
adc
mov
inc
push
mov
or
rol
push
dec
sbb
aad
adc
clc
push
clc
fstp
lock
pushf
or
pop
jb
pop
adc
js
sahf
mov
xchg
jle
mov
inc
and
shl
mov
in
mov
int3
mov
movs
ret
stos
mov
(bad)
in
and
call
adc
xor
cmp
mov
ins
aas
sbb
movs
mov
sbb
in
push
rcl
and
enter
dec
dec
mov
rcr
or
dec
fs
and
test
call
sub
lds
push
cwde
sbb
outs
or
mov
rol
push
das
loop
dec
lods
push
adc
xchg
pop
xchg
mov
iret
scas
loope
xchg
outs
cld
mov
adc
loopne
xchg
movs
inc
xor
sar
mov
rcr
or
xor
pusha
inc
inc
outs
iret
push
cmps
pop
gs
pop
test
sbb
(bad)
in
mov
xor
xor
mov
sbb
fwait
push
out
and
jecxz
out
sub
(bad)
ins
push
pop
sbb
retf
ffreep
xchg
push
data16
inc
ss
mov
shr
aas
xchg
pusha
mov
loop
(bad)
imul
jbe
neg
add
je
sbb
sub
sar
mov
cmps
lock
mov
cmps
xor
mov
mov
lods
and
jbe
xchg
sbb
inc
outs
push
jns
div
or
je
test
dec
sub
enter
call
iret
loop
mov
and
push
pop
test
pop
in
imul
add
push
out
lahf
adc
sbb
cmp
inc
fld
cs
fst
cmc
or
vcvttpd2dq
mov
loop
loop
ficomp
push
cmps
fadd
cmp
xchg
push
jle
call
jae
xchg
(bad)
hlt
mov
mov
mov
and
inc
mov
das
pushf
sub
test
jmp
adc
or
lods
pop
aas
lea
mov
ins
inc
in
js
aam
sbb
mov
push
sbb
stos
sbb
mov
test
repnz
inc
cli
pop
xchg
and
icebp
mov
pushf
dec
and
xchg
dec
daa
inc
shr
ins
push
enter
leave
inc
in
push
xchg
mov
cdq
dec
add
cmp
test
add
and
aam
push
lea
mov
addr16
pop
out
sub
or
loope
xor
lods
cli
sar
or
aad
sub
sub
ret
add
stc
adc
push
popf
test
xchg
cmc
out
test
sahf
mov
mov
js
out
pop
aas
jae
jnp
retf
adc
xor
xlat
icebp
icebp
cmp
addr16
mov
add
cmp
mov
in
jae
call
mov
adc
aad
pop
cmps
clc
xor
jl
scas
add
inc
or
add
test
outs
in
stos
stc
xchg
mov
ins
popa
sbb
adc
cmps
into
shl
sar
mov
dec
mov
dec
mov
cs
or
retf
nop
sub
(bad)
fcomp
sub
repnz
js
inc
movs
xor
pop
jne
fnstsw
paddsw
xchg
mov
shr
xchg
loopne
mov
test
imul
cmps
aas
popf
test
rol
jg
jno
mov
cmps
nop
mov
and
xchg
push
inc
dec
fs
inc
into
ins
pop
sar
pop
hlt
pop
pushf
jmp
pop
sbb
icebp
dec
pop
mov
ja
cmp
in
pusha
shl
adc
xor
mov
(bad)
jns
and
hlt
push
mov
ins
aas
fnstsw
test
pop
repz
or
cs
popa
ret
data16
push
scas
and
mov
sub
fstp
sar
or
or
dec
mov
add
add
jl
xchg
shl
loop
imul
stos
mov
enter
mov
loopne
not
call
xchg
mov
sti
push
sub
or
jmp
lds
jb
push
call
xlat
jmp
mov
push
pop
cld
xchg
xchg
repz
jmp
push
jno
ins
pop
int3
enter
cmp
push
jle
scas
push
mov
add
jmp
cmp
inc
cdq
lds
mov
xor
outs
ret
lock
lahf
ins
push
xchg
rcl
sti
jmp
loope
inc
daa
je
lea
mov
in
adc
aas
outs
lea
xchg
cmp
lahf
movs
add
retf
adc
cmps
cmp
scas
in
icebp
das
dec
pop
sub
repz
rcr
popa
xchg
popa
mov
out
jne
jmp
ja
xchg
mov
(bad)
aad
lahf
fdivr
push
jb
inc
sbb
ins
mov
js
and
mov
mov
je
int3
dec
mov
cmp
add
sub
mov
cmp
imul
dec
adc
and
mov
xchg
inc
push
and
shl
pop
sbb
nop
leave
ins
mov
mov
(bad)
xor
cs
mov
cmps
xlat
xchg
gs
inc
sar
dec
mov
xchg
fs
ds
inc
jno
sbb
(bad)
outs
mov
test
movs
push
push
mov
cdq
cmp
xchg
push
ret
push
icebp
or
jg
jmp
xor
sub
(bad)
sbb
sub
ret
iret
pop
movs
jae
mov
mov
fild
ds
mov
pop
xchg
out
pop
inc
sub
lods
cmps
sub
add
(bad)
icebp
push
fadd
xchg
dec
jmp
mov
jle
xor
mov
nop
push
push
jns
js
(bad)
add
adc
xchg
mov
xor
push
ins
mov
js
xor
cmp
(bad)
xlat
cmp
push
lahf
loopne
test
mov
clc
mov
das
(bad)
mov
out
aad
xchg
cli
jno
int3
mov
movs
lock
fs
add
dec
repnz
jl
iret
add
jge
mov
popa
in
jb
and
xor
sbb
dec
js
jne
push
mov
or
cmp
nop
movs
mov
adc
pop
and
push
mov
and
mov
cmc
dec
inc
lahf
lods
mov
inc
stos
jnp
or
movs
ret
add
push
pop
mov
cmp
gs
xchg
cmc
sub
ret
(bad)
(bad)
sbb
pop
or
pusha
cmc
inc
test
test
or
adc
sbb
shl
mov
dec
lock
lea
(bad)
pop
cwde
mov
nop
xchg
push
pusha
dec
xchg
pop
mov
pop
cmp
mov
scas
add
pushf
outs
bound
scas
(bad)
loopne
inc
(bad)
repnz
inc
pusha
cmps
xchg
mov
pop
mov
xor
outs
xchg
outs
(bad)
cmp
cmp
not
leave
inc
addr16
adc
(bad)
daa
jmp
lods
xor
lds
cwde
jl
pop
ret
push
addr16
dec
sbb
dec
pop
adc
or
sbb
mov
(bad)
adc
xor
popf
cwde
imul
push
and
sub
mov
inc
iret
(bad)
jmp
xchg
leave
fld
dec
es
aad
and
push
scas
bound
arpl
lahf
pop
jae
and
fdivr
ja
mov
inc
ret
jno
stos
dec
xchg
or
add
or
pop
(bad)
mov
call
mov
imul
pop
jmp
out
and
ret
mov
jp
jne
push
call
dec
add
mov
ss
(bad)
xchg
pop
inc
vunpcklpd
fist
fcom
pop
shr
adc
sbb
xor
fisttp
xchg
pushf
mov
test
inc
pop
mov
sbb
rcr
enter
xchg
or
dec
mov
or
xor
aaa
loopne
nop
cld
mov
les
push
dec
lods
cmc
cmp
mov
in
and
and
jb
jae
jns
sar
rcr
movs
push
xchg
or
movs
ins
xor
mov
push
add
daa
in
mov
test
xchg
fld
ror
outs
or
shrd
(bad)
out
ss
clc
inc
jae
out
push
dec
in
(bad)
rcl
arpl
cmc
enter
push
adc
mov
(bad)
into
aam
adc
mov
add
mov
dec
mov
mov
jne
xor
and
or
cmps
and
pusha
hlt
fiadd
scas
rcr
out
cmp
push
xchg
in
dec
ror
inc
loope
lods
jne
jmp
(bad)
loopne
mov
inc
ins
imul
pop
dec
sar
loope
jecxz
not
push
cld
mov
sti
mov
imul
je
jmp
outs
je
sar
(bad)
sub
jo
mov
mov
mov
bound
scas
test
lods
imul
or
xor
call
dec
mov
(bad)
cmp
addr16
xchg
pop
ja
and
cmp
xchg
cld
(bad)
pop
in
mov
movs
mov
push
dec
inc
sbb
or
scas
sbb
out
or
add
cmp
iret
cmp
push
idiv
ins
dec
in
fs
dec
mov
and
and
cli
add
cmp
and
jbe
jae
stc
push
adc
inc
push
mov
push
push
repnz
push
lods
xor
pop
mov
adc
mov
mov
movs
movs
inc
xchg
ins
adc
dec
inc
(bad)
(bad)
jb
mov
out
punpckldq
test
jb
(bad)
push
mov
scas
jmp
push
lahf
in
jmp
pop
cwde
fldenv
neg
arpl
xor
in
sub
sub
push
jmp
pop
jae
xor
push
not
add
adc
mov
push
mov
cmps
fidiv
dec
xor
call
cmc
daa
das
mov
cmp
sbb
rcl
xchg
pop
and
movs
not
and
bound
(bad)
xchg
es
mov
sbb
icebp
push
ins
cmp
dec
icebp
gs
call
adc
je
test
ror
clc
inc
dec
popa
push
lock
pop
pushf
push
aas
pop
sub
jecxz
shl
adc
jle
fsubr
and
imul
pop
inc
stc
xor
inc
idiv
shl
dec
into
adc
test
cmps
cmp
or
dec
cmp
xchg
jmp
xor
sub
jp
jo
and
retf
outs
adc
adc
leave
sbb
out
scas
mov
jae
mov
dec
js
mov
jae
inc
add
mov
sub
(bad)
xchg
push
xor
jno
pop
dec
retf
int
xor
add
mov
push
les
cmp
enter
outs
(bad)
idiv
mov
das
mov
imul
cmp
stos
aad
mov
in
push
lods
(bad)
cmp
test
out
popf
cmps
repz
arpl
stos
fucom
or
ret
movs
jbe
ret
dec
mov
adc
mov
test
mov
inc
mov
pop
mov
scas
iret
jge
xchg
pop
(bad)
stc
movs
ror
mov
push
inc
arpl
cld
sbb
cli
js
mov
hlt
jb
adc
or
pushf
int
movs
xchg
aaa
ss
daa
or
or
test
xor
sbb
bswap
fimul
mov
dec
jmp
aam
mov
mov
js
or
movs
sub
jge
jmp
popa
in
popf
jmp
cmps
(bad)
xchg
pslld
loop
mov
sar
ret
mov
loop
js
add
adc
or
fcomip
sbb
stc
psubw
cwde
sbb
es
rcl
repz
das
test
push
out
inc
jle
mov
add
loopne
clc
test
or
sbb
popa
cli
mov
test
jb
cmp
mov
mov
pop
or
call
push
mov
jnp
mov
ins
mov
fmul
lods
enter
mov
push
sahf
mov
adc
cwde
lock
xchg
aad
cwde
xor
push
lock
cmp
fwait
xchg
sbb
outs
pop
or
cs
cmps
mov
arpl
ror
imul
jge
inc
mov
lea
jb
jge
cdq
pop
cli
movs
jmp
mov
inc
cmp
adc
adc
bound
mov
test
pop
ss
or
inc
xchg
scas
push
(bad)
addr16
xor
retf
(bad)
addr16
cmp
jle
lods
lds
ins
pushf
pop
jnp
cmps
mov
ret
fisttp
mov
sub
xchg
jl
mov
fst
push
icebp
add
pop
retf
pop
pop
jns
sub
xor
pop
cli
inc
fist
fs
pop
jno
pop
mov
push
mov
dec
(bad)
sar
mov
or
cmp
(bad)
and
shl
test
or
jae
(bad)
out
inc
dec
daa
inc
fild
imul
dec
mov
ins
push
sub
or
inc
ins
pusha
lds
lea
pop
sub
and
xchg
jb
lods
sub
bound
adc
stc
in
and
loope
adc
push
xchg
das
xchg
js
clc
scas
adc
mov
mov
fsubp
or
(bad)
xor
retf
call
mov
mov
mov
inc
lds
movs
jl
test
sbb
mov
mov
in
dec
leave
and
loop
mov
xor
or
pop
jg
push
cmp
jmp
or
pop
sbb
cdq
xchg
in
retf
or
popf
push
or
pop
pusha
or
mov
fldcw
fild
xchg
inc
into
jb
sti
movs
pop
mov
and
outs
jne
add
sti
das
(bad)
push
xchg
cmp
xor
popa
(bad)
jecxz
push
inc
retf
pusha
test
inc
popf
shl
pop
push
ficomp
je
add
jbe
xor
lock
mov
cmp
adc
sbb
bound
ret
jge
lods
popa
cwde
popa
adc
inc
call
fld
sbb
retf
mov
mov
mov
xor
ds
test
sbb
xchg
in
imul
and
jno
sbb
mov
int3
mov
ret
jl
cwde
push
retf
hlt
fild
fsubr
jbe
mov
xchg
add
jnp
rcl
ins
jcxz
sub
sbb
sub
jge
mov
ffree
push
or
int
xchg
test
into
push
jnp
dec
mov
jg
in
sbb
out
cli
in
aas
rcl
jne
or
(bad)
stos
fsubr
and
adc
ret
ds
cmp
push
pusha
repnz
xchg
pusha
mov
lods
cmp
cmp
in
mov
cmp
add
call
out
cmp
ins
aam
fild
retf
fs
or
fbstp
aas
pop
adc
ja
sbb
movs
popf
shl
ins
or
aas
sbb
dec
sti
adc
push
cmps
mov
in
sbb
ds
rcr
push
scas
xchg
mov
or
rcl
retf
cli
xchg
pop
stos
imul
fwait
movs
out
int
or
scas
dec
addr16
sub
pop
mov
pop
pop
mov
pop
fisub
adc
daa
jge
lahf
jl
lods
or
aad
pop
pop
pushf
ror
icebp
psubd
ss
cmp
pop
in
fld
das
mul
cmp
fstp
out
loope
sbb
repnz
cmp
mov
inc
sbb
imul
jmp
int3
adc
pusha
cmc
cmp
int3
jns
imul
jno
cmp
fdivrp
jmp
in
xchg
push
pop
sbb
mov
mov
xchg
sub
fdivr
aas
js
add
adc
ins
arpl
and
ja
js
cwde
push
enter
aas
in
cwde
hlt
adc
and
lea
pop
add
mov
(bad)
dec
jo
movs
mov
dec
pushf
imul
test
ret
mov
lahf
cmp
jp
(bad)
fild
adc
push
movs
stc
test
mov
xchg
inc
iret
mov
jmp
add
sbb
repnz
aas
mov
pop
imul
adc
(bad)
test
leave
daa
maxps
loop
je
mov
jp
sti
inc
sub
cmp
add
adc
fst
(bad)
clc
loope
aad
ret
jb
fs
add
mov
outs
mov
jbe
es
je
test
jg
pop
lods
aam
dec
aad
out
jecxz
(bad)
and
gs
aam
sub
push
sbb
pop
imul
in
mov
jns
jb
adc
and
dec
add
stos
xor
xor
push
inc
stos
dec
jns
mov
cs
mov
shr
out
scas
push
iret
jbe
or
in
mov
dec
mov
push
dec
mov
xchg
imul
(bad)
jae
add
int
dec
xchg
and
fidiv
cli
cmp
or
out
pop
pop
xor
daa
mul
cmc
mov
add
stos
inc
pop
pop
mov
pop
movs
or
jg
xchg
sbb
mov
aad
add
into
xchg
push
loop
popf
lods
mov
xchg
xor
neg
xor
sbb
lods
scas
and
ret
lods
push
cmps
dec
cmp
popa
imul
xchg
xor
push
mov
dec
mov
js
jbe
test
sbb
push
retf
iret
sub
sbb
mov
cmp
xlat
sahf
(bad)
daa
cld
and
adc
cmps
(bad)
fs
xchg
mov
je
icebp
outs
ret
gs
adc
sbb
mov
gs
jb
out
xchg
nop
scas
(bad)
loop
or
push
movs
imul
jne
idiv
mov
mov
ins
lods
lods
mov
cmps
retf
adc
pusha
dec
ins
int3
mov
(bad)
stc
xlat
xor
dec
push
jl
ret
fwait
sub
pop
jge
rcr
and
mov
test
enter
pop
(bad)
stos
int
or
retf
lods
cmps
jns
adc
call
pop
sahf
pop
cmp
aad
dec
retf
push
imul
pusha
mov
mov
pop
xchg
sysret
jb
loopne
ins
neg
mov
adc
xor
mov
mov
fdivr
stc
fwait
ret
out
icebp
inc
inc
push
adc
adc
jbe
xlat
leave
sub
mov
pop
scas
xchg
cmp
popa
mov
cmp
add
mov
xchg
push
or
bound
(bad)
xchg
test
and
push
test
test
fnsave
pop
popa
pop
clc
test
stc
dec
xchg
idiv
int
and
and
stos
add
jmp
jg
push
cmp
pusha
jns
push
retf
ins
jp
push
jnp
adc
pop
or
inc
adc
or
call
cmp
test
push
mov
in
(bad)
loopne
fld
jg
scas
cmp
xchg
push
push
in
add
adc
(bad)
cmp
test
sub
mov
jb
xchg
mov
outs
lahf
ror
rcl
or
mov
pop
sbb
jl
rol
int
push
je
mov
xor
jg
rcl
push
xchg
stos
mov
aas
out
xchg
mov
psadbw
sub
jnp
or
push
call
lods
mov
ja
xchg
push
int
out
rol
and
addr16
pop
dec
sub
adc
sbb
xor
push
push
test
jo
pop
dec
adc
xchg
ds
pop
cmps
pop
mov
jnp
dec
dec
dec
jns
pop
rol
pop
movs
movs
mov
(bad)
dec
icebp
clc
sbb
rol
inc
mov
xchg
dec
xor
sbb
data16
add
xor
ds
nop
bound
push
jnp
ins
push
push
clc
pop
or
add
(bad)
push
in
or
les
loop
adc
(bad)
out
(bad)
inc
mov
xor
mov
icebp
adc
sub
sub
xor
adc
xor
or
push
jp
addr16
nop
lahf
shl
cmps
sub
mov
pop
ss
dec
mov
rcl
xor
mov
push
push
jp
stos
inc
loopne
lods
sub
js
or
xchg
call
(bad)
sbb
retf
sub
stc
cmp
enter
push
out
(bad)
ds
pop
sti
jmp
stos
cmp
mov
into
es
dec
sar
push
ret
dec
jmp
fnstenv
and
add
ins
popf
outs
add
sub
inc
sub
dec
jo
xchg
cvtdq2ps
mov
nop
mov
inc
pop
cmp
scas
xchg
jo
lock
in
mov
inc
xchg
cmp
cmp
push
in
cmp
mov
jmp
loope
push
mov
mov
mov
xor
cmp
(bad)
jmp
adc
sbb
ret
and
xchg
push
mov
jle
adc
lds
mov
pop
cmp
icebp
push
mov
jecxz
loop
movs
fsubp
jecxz
call
repz
ss
jns
adc
push
in
pushf
push
mov
push
cmp
shr
mov
xchg
or
sti
daa
cmc
in
cmp
popf
dec
or
xchg
call
je
push
push
dec
jmp
jp
rcl
jb
ds
cli
xchg
push
sbb
jb
adc
push
xchg
loop
pusha
fcmovnu
jl
cmc
adc
mov
jae
mov
push
js
mov
push
push
nop
mov
mov
pop
push
push
push
push
jmp
inc
je
push
test
fnstsw
adc
neg
xor
push
jg
cmp
push
pmaxub
mov
repnz
(bad)
int3
fadd
mov
or
ja
hlt
out
mov
jg
pop
gs
mov
repnz
and
(bad)
mov
mov
jae
stc
test
add
cmps
ins
lahf
mov
cwde
scas
ret
daa
repz
shl
jmp
shl
inc
stos
jns
jge
loopne
jno
cmps
ror
dec
jbe
ret
sbb
ja
inc
cmp
call
shl
mov
daa
xchg
loopne
(bad)
pop
mov
jb
popa
not
je
repnz
dec
mov
add
fwait
test
mov
jmp
xchg
xor
fwait
xchg
xchg
out
dec
pop
inc
dec
mov
sub
mov
add
in
js
bound
or
jno
sar
dec
sahf
repnz
adc
or
inc
pop
mov
dec
mov
cmp
dec
lea
push
ds
push
xlat
sub
push
outs
cmps
add
push
mov
(bad)
arpl
rol
or
sahf
adc
mov
in
inc
imul
and
or
jmp
daa
or
in
cmp
mov
cmps
jns
call
jmp
push
push
or
int
cwde
fs
rol
(bad)
inc
lahf
xlat
dec
pop
mov
ja
lea
retf
mov
mov
add
mov
and
inc
jno
jmp
sbb
xchg
cld
push
pop
and
cmp
sub
or
push
jp
in
and
pop
cmp
sahf
ret
cmp
cdq
leave
xchg
push
mov
int3
mov
leave
shl
adc
adc
mov
sub
fld
pop
sti
test
jl
cmc
les
mov
sub
movs
add
out
aam
jmp
mov
retf
cmps
dec
xchg
and
popw
shr
jne
cdq
aam
das
and
jo
cmp
xchg
push
scas
test
dec
test
dec
mov
test
dec
clc
imul
jmp
mov
imul
adc
jmp
ret
test
mov
pop
jg
jbe
shl
push
mov
test
daa
or
jno
fs
sbb
or
repnz
ins
jbe
ret
test
sbb
sbb
js
push
mov
xchg
fs
jp
loope
dec
sub
test
cmps
inc
push
sub
and
es
test
or
(bad)
dec
or
adc
js
push
addr16
pop
mov
and
cmp
push
jmp
int3
push
mov
pusha
mov
add
dec
fstp
and
adc
cmc
dec
pop
pop
call
ret
stc
out
sub
in
inc
add
popf
jnp
xchg
imul
jmp
out
iret
jmp
loopne
xor
sbb
sub
jecxz
repz
xor
aaa
mov
das
cmp
mov
or
inc
shl
bound
push
mov
ret
imul
repnz
(bad)
int
cmp
mov
xchg
xchg
mov
cmp
or
mov
jmp
mov
sbb
scas
push
add
test
adc
sub
pop
fsub
pop
clc
and
jg
push
icebp
push
jb
scas
sub
or
std
and
std
test
popf
loop
into
xchg
test
js
pop
mov
push
daa
mov
shl
mov
jnp
cld
add
cwde
mov
sbb
stos
ja
test
push
adc
xchg
inc
mov
movs
xchg
dec
js
sub
(bad)
lock
arpl
jp
and
jne
in
push
push
dec
jo
sti
nop
bound
scas
and
mov
fsub
stos
fimul
outs
(bad)
out
shr
sub
sbb
sub
(bad)
popa
dec
cwde
xchg
jbe
pop
inc
(bad)
int
inc
add
push
outs
outs
outs
adc
dec
push
in
pop
dec
jle
ss
adc
ret
out
pop
adc
sti
mov
dec
sbb
popa
mov
enter
xchg
jge
scas
dec
push
sbb
shl
imul
jl
and
jg
std
mov
jae
cmp
mov
test
add
cmp
and
call
mov
fwait
sbb
je
ja
xor
xor
inc
mov
(bad)
adc
jmp
mov
pop
loop
mov
mov
or
sub
mov
inc
inc
repz
inc
(bad)
pop
jle
pop
cwde
(bad)
(bad)
sub
mov
mov
mov
fwait
cmps
sub
ins
jbe
cmp
sbb
xchg
retf
pusha
cld
push
cli
push
cmp
ja
movs
lds
(bad)
das
imul
jns
xchg
adc
stc
xor
stos
pop
aas
add
and
lods
cs
inc
xlat
nop
and
pop
mov
mov
adc
(bad)
xchg
inc
pusha
mov
cdq
fst
icebp
mov
es
dec
mov
sti
xchg
lock
push
or
loop
jo
in
mov
pop
jns
sub
ret
pop
ins
pushf
ja
and
jl
jno
je
mov
add
inc
loopne
xor
cs
jl
push
jno
cmps
in
and
data16
mov
test
fisub
jmp
aas
cwde
retf
jl
fwait
repz
std
test
call
fs
aam
mov
sbb
xor
add
iret
es
js
call
xor
push
ins
mov
aaa
inc
inc
scas
fs
je
inc
clc
mov
sub
stos
int
fist
sub
in
je
test
or
xor
and
mov
and
popf
inc
dec
jge
and
(bad)
mov
ja
(bad)
stc
sbb
imul
xor
pop
movs
cwde
jns
lods
icebp
mov
dec
outs
pop
out
mov
(bad)
jmp
jecxz
mul
ins
xor
xor
xchg
xchg
mov
fild
jp
push
in
hlt
mov
dec
jp
cmps
and
fld
xor
sub
inc
fldenv
scas
movs
ins
adc
outs
nop
mov
mov
adc
jo
xor
mov
test
mov
stos
and
mov
shl
xchg
aam
and
stos
popf
and
nop
mov
stos
sub
xor
dec
pop
cmp
test
dec
push
jbe
mov
lahf
arpl
int3
sbb
cli
sbb
and
out
dec
bound
test
test
sub
pop
add
dec
adc
mov
fs
fild
call
lea
cmps
mov
retf
int3
ds
lock
(bad)
rcr
stos
sub
mov
lds
sub
stos
push
or
loop
or
lock
xchg
ror
mov
xor
imul
inc
mov
mov
movs
push
ins
xchg
out
dec
fistp
mov
loope
fwait
adc
cmp
aaa
sbb
dec
pop
add
pop
dec
in
mov
or
lock
push
sub
cwde
mov
fmul
xor
aad
fistp
adc
mov
out
dec
sub
dec
jno
xor
outs
addr16
fld
dec
dec
repz
jge
test
cdq
jp
out
or
je
push
pop
dec
xor
frstpm(287
arpl
mov
fnstcw
mov
mov
inc
xlat
int3
cli
jl
pushf
stos
movs
test
jle
add
aam
mov
ret
mov
and
icebp
loop
push
clc
mov
jb
test
ss
or
call
jne
lea
lods
fwait
cmp
pop
mov
arpl
push
stos
dec
test
(bad)
stc
pop
icebp
je
lock
xlat
outs
out
inc
fucom
stos
retf
cmp
add
sbb
xor
add
or
ret
or
fwait
and
mov
xor
ins
nop
scas
in
fdiv
(bad)
xor
jmp
sub
push
stos
and
shl
daa
(bad)
pop
(bad)
xchg
es
sub
or
bound
stos
fcmovne
mov
and
js
sbb
and
int
sbb
(bad)
mov
cmp
mov
cs
std
cmps
pop
dec
nop
sbb
test
int3
mov
std
xchg
repz
mov
scas
test
or
adc
outs
mov
add
jge
mov
pop
scas
sbb
fsub
xchg
lods
pop
adc
scas
jp
cmp
mov
fadd
or
stos
pop
and
outs
mov
mov
rcl
ror
mov
aas
cmp
mov
ins
fadd
stc
dec
ins
adc
push
dec
xchg
addr16
lds
int3
pop
repz
cmp
mov
sub
xchg
aas
inc
das
cdq
ret
sub
test
(bad)
loope
sbb
push
repz
(bad)
leave
fcmovu
arpl
fdiv
and
rol
fstp
cmp
push
int3
ret
fwait
ss
in
loope
in
xchg
cmp
out
lock
(bad)
pop
xor
jp
inc
pop
jae
mov
cmc
or
mov
mov
or
popa
jns
enter
cmc
sub
mov
mov
lds
dec
daa
lds
js
(bad)
mov
sub
pop
push
xor
test
xchg
in
cmc
fmul
lods
mov
test
je
mov
das
mov
push
jle
push
or
cmp
fs
mov
add
jg
inc
mov
jo
dec
sar
sar
les
cmp
cli
pop
and
lds
(bad)
rcl
jo
iret
lea
je
out
push
mov
dec
(bad)
fiadd
inc
cmps
pop
in
sbb
cmc
or
inc
dec
imul
cmc
out
pop
cmps
mov
fnstsw
xor
shl
jo
sbb
das
adc
shl
test
and
(bad)
cmp
mov
adc
cmp
rcl
sub
in
outs
inc
aad
leave
out
in
(bad)
rol
js
inc
sub
out
xchg
mov
adc
ret
aad
inc
dec
jge
push
push
repz
adc
cld
cmp
adc
call
adc
das
or
int
shr
pop
lods
gs
mov
daa
and
cmp
dec
hlt
imul
inc
mov
dec
add
aad
retf
in
mov
(bad)
cmp
dec
xchg
adc
repnz
cmp
fldenv
xor
fsin
inc
pop
lods
cmp
pushf
push
mov
jmp
jmp
pop
cmp
test
cmp
xlat
add
jns
out
aas
mov
jmp
out
mov
cmp
ins
punpckhwd
mov
test
(bad)
int
mov
test
stos
xchg
sahf
pop
sub
lods
mov
push
aam
repnz
mov
sub
sub
scas
popa
and
pop
sub
mov
clc
or
cwde
ds
sub
mov
je
je
xchg
sar
add
shr
adc
jmp
aad
pop
xchg
add
adc
jno
fadd
add
lods
or
push
sub
sbb
inc
xchg
test
and
popf
(bad)
in
xor
mov
jge
iret
jle
add
mov
(bad)
outs
pop
cmp
pop
retf
and
fstp
mov
adc
and
xlat
and
inc
shr
cwde
sub
sahf
and
ret
hlt
mul
xchg
jg
enter
popf
mov
jo
ins
cld
mov
pushf
xchg
jb
xchg
(bad)
repnz
gs
push
mov
ffree
mov
sahf
inc
cdq
or
mov
push
mov
outs
das
std
sbb
clc
jmp
push
dec
sub
(bad)
test
sub
test
arpl
sbb
mov
jmp
xchg
or
mov
retf
sbb
test
sbb
xor
inc
adc
sub
add
mov
lods
adc
cmp
fsubr
fcomip
pop
sbb
or
(bad)
jle
xor
mov
sbb
add
mov
and
aad
dec
js
ret
vunpckhpd
push
add
repnz
sbb
ins
cld
movs
or
cmps
ror
jg
sbb
and
sti
sub
xchg
xchg
mov
les
mov
xor
data16
into
not
jbe
push
rcr
addr16
cmc
xchg
pop
sahf
repz
icebp
adc
xchg
sub
jmp
cli
retf
mov
pop
jnp
fstp
sub
pop
nop
shr
je
and
fcmovnbe
out
or
mov
call
inc
and
loopne
mov
ins
outs
pushaw
in
shl
add
gs
push
and
xchg
test
and
cmps
mov
and
inc
(bad)
retf
mov
sbb
not
loope
lock
shl
add
or
pop
adc
push
push
push
and
sbb
div
push
push
pop
cmc
adc
pop
inc
dec
mov
adc
imul
js
jecxz
or
daa
rol
cmp
push
sub
mov
aas
out
and
jnp
dec
outs
xchg
int
mov
ds
vandnps
dec
adc
sbb
stc
pop
push
lds
cmp
dec
mov
jge
mov
aad
xchg
imul
mov
sub
stc
and
leave
loop
or
cmp
mov
int
and
mov
pop
sbb
jecxz
push
ror
and
mov
push
sub
or
aaa
jmp
xor
lock
inc
xchg
or
mov
cwde
xchg
mov
inc
jl
add
mov
in
and
test
dec
push
xchg
fidivr
es
adc
add
cmp
out
jge
outs
sbb
mov
cmc
sbb
mov
lods
imul
mov
pop
jnp
ror
push
or
cmp
(bad)
jmp
(bad)
shr
dec
dec
xchg
jmp
lods
adc
and
mov
pop
lahf
push
pop
repnz
enter
call
mov
mov
push
nop
sub
adc
xchg
bound
fist
mov
xor
inc
cmc
lods
sti
aad
cmps
push
popa
push
in
sbb
jns
aaa
xchg
push
mov
shl
ds
jb
mov
cmp
mov
jo
mov
mov
daa
aaa
sti
hlt
sbb
mov
dec
add
add
aam
ja
cmp
arpl
push
xchg
das
je
jge
popa
aad
or
dec
fild
bound
int3
fadd
jno
jns
mul
inc
bound
inc
jno
jp
movs
out
xor
xor
leave
push
and
std
repz
and
xchg
dec
mov
es
das
cmp
push
adc
pop
les
cmp
je
out
movs
dec
shl
mov
out
in
mov
int
call
inc
jecxz
aad
sub
or
mov
sbb
add
push
das
ins
dec
sub
adc
mov
xor
retf
xor
ret
test
cdq
dec
(bad)
jns
inc
jecxz
mov
sub
mov
jl
mov
test
dec
(bad)
mov
xor
cs
fnstenv
xor
xor
jg
mov
data16
add
add
(bad)
fldenv
mov
mov
push
sub
mov
ins
xchg
or
or
push
lahf
call
sub
shl
lock
mov
gs
ss
inc
mov
and
mov
sub
(bad)
fiadd
fldenv
dec
pop
jecxz
rcr
pop
ror
in
inc
xchg
mov
rol
in
xchg
jl
pop
lds
or
dec
mov
cdq
pop
add
ret
sub
jge
xchg
call
imul
jmp
jbe
jge
out
out
fwait
dec
inc
push
xlat
xor
jge
sbb
sahf
cmps
neg
sbb
xor
je
mov
out
inc
(bad)
mov
lock
add
aaa
mov
fdiv
inc
loope
push
(bad)
es
jbe
sub
(bad)
fs
mov
addr16
dec
pop
or
xlat
outs
mov
enter
leave
xchg
jae
test
mov
(bad)
sub
test
inc
lods
js
daa
iret
imul
pushf
ins
pop
cmps
movs
in
sub
movs
inc
push
push
sbb
test
mov
push
add
jno
sub
test
inc
xchg
call
push
test
cmc
imul
test
ds
enter
jae
xor
pop
dec
loopne
lock
push
clc
mov
mov
cld
cmp
mov
pop
adc
sbb
js
inc
sub
add
jb
inc
fwait
adc
sbb
or
(bad)
mov
sub
fs
mov
add
xor
fstp
ss
push
cmp
(bad)
mov
add
xor
retf
adc
xchg
lods
lahf
ret
fcomp
bound
aaa
int
mov
popa
je
ss
cli
retf
mov
or
dec
push
jecxz
jne
mov
loopne
mov
mov
mov
sbb
adc
imul
fs
inc
in
adc
cmp
xor
int3
repz
int3
adc
sahf
das
mov
mov
sbb
sti
test
inc
push
clc
xchg
dec
cmp
jns
imul
in
ins
mov
push
jmp
jmp
stc
mov
popf
mov
cdq
fmul
sbb
les
adc
mov
shr
add
fsubrp
xchg
push
sbb
xchg
in
jg
pop
jns
dec
nop
sub
xchg
(bad)
inc
push
or
sub
fwait
push
test
es
fstp
test
sub
jbe
cmp
push
xchg
xchg
pop
(bad)
daa
(bad)
bnd
jmp
xlat
and
jmp
pop
sub
jp
xor
dec
dec
imul
push
adc
mov
popa
fcomp
js
and
in
cmc
fs
sbb
sar
dec
sub
jmp
into
and
jg
test
xchg
clc
movs
add
adc
pop
push
test
mov
icebp
enter
xor
cmp
icebp
sbb
clc
cmp
jg
push
aad
rcr
popf
pop
pop
inc
jb
test
mov
mul
mov
stos
jmp
xchg
jecxz
rcr
sbb
lea
iret
ret
rcl
lahf
test
xchg
inc
test
std
int
mov
add
out
xchg
pop
add
fstp
(bad)
and
or
call
cmp
test
fistp
(bad)
jns
cmc
scas
add
sbb
mov
loopne
push
call
neg
mov
mov
mov
xchg
push
mov
dec
jbe
adc
jmp
add
dec
jb
test
enter
push
mov
jg
sbb
cdq
cmp
mov
sbb
in
pop
jmp
into
adc
add
push
scas
inc
rcl
sahf
adc
in
pop
clc
popf
retf
dec
push
ja
movs
movs
ds
mov
lods
jmp
scas
jmp
push
cld
ror
sbb
loop
in
xchg
xlat
outs
jmp
cld
dec
jbe
test
in
aam
push
sahf
lahf
and
xor
xchg
cdq
mov
dec
rcl
sub
inc
inc
jp
ins
add
cmp
sbb
hlt
mov
and
or
idiv
(bad)
mov
xchg
add
pop
jae
xlat
cmps
test
fisub
sbb
sbb
mov
cmps
rcl
dec
sahf
loop
fisub
stc
xor
or
inc
jno
inc
xchg
cmps
stos
and
push
movlps
pop
mov
add
arpl
pop
nop
inc
fmul
ja
outs
pop
cs
adc
jg
pop
rcr
jmp
popa
loopne
out
inc
(bad)
pop
push
mov
rcr
psubusw
dec
mov
inc
pop
adc
and
pop
mov
fiadd
sub
mov
inc
(bad)
(bad)
(bad)
sub
in
xor
jne
cli
scas
fst
les
inc
mov
pop
or
cdq
ja
pop
sar
jp
(bad)
jmp
repz
jge
xor
fcomp
push
inc
mov
push
test
cmp
div
inc
cld
sbb
mov
(bad)
and
enter
fidivr
or
fcom
jl
imul
enter
popa
nop
push
cmp
mov
inc
jnp
pop
dec
push
push
(bad)
test
adc
fadd
inc
stc
mov
xor
(bad)
fdivp
jae
adc
or
push
pop
loopne
push
mov
push
sti
jae
and
pusha
and
push
sbb
ins
dec
fwait
mov
inc
push
adc
call
movs
inc
dec
arpl
scas
sbb
mov
mov
shr
jl
loop
inc
fsub
pop
lods
out
or
push
fadd
test
gs
rcl
xor
daa
mov
les
fxtract
pop
bound
movs
and
adc
adc
pop
mov
cmp
push
dec
stos
xchg
es
xchg
(bad)
retf
pushf
inc
daa
neg
out
cmps
cmps
fiadd
lods
inc
cwde
mov
mov
dec
and
loop
js
lea
jmp
cmp
jo
jecxz
mov
xchg
add
(bad)
out
or
inc
arpl
cld
pushf
mov
js
cld
adc
cdq
inc
lds
jg
jno
pop
xchg
mov
xchg
or
(bad)
hlt
jmp
sub
jo
or
retf
add
pop
and
cmps
push
add
cmps
inc
cmp
sti
push
shl
les
jl
movs
jo
inc
cmp
pusha
or
cmp
cmp
mov
pop
daa
scas
pop
xlat
or
imul
stc
adc
lahf
sub
imul
mov
iret
pop
adc
xchg
das
inc
jno
cmp
mov
push
mov
test
imul
popa
repnz
push
xlat
sub
dec
sub
(bad)
adc
push
or
jg
jge
jmp
or
test
out
out
aas
dec
mov
adc
lea
pusha
inc
das
jl
fld
outs
and
into
xchg
xor
call
stc
inc
int
dec
sub
aam
jbe
sbb
jecxz
or
cld
(bad)
push
ins
fcomp
and
gs
das
cmp
je
jb
mov
and
xchg
call
out
add
jmp
inc
jp
xor
jb
xchg
dec
nop
inc
sub
sar
lock
mov
mov
pop
stos
mov
xor
xor
enter
popa
stos
xor
iret
dec
or
push
mov
aam
inc
sub
cmps
mov
push
or
and
sbb
xchg
add
mov
cdq
lea
mov
dec
lods
pop
mov
push
mov
xlat
out
mov
xchg
ror
es
in
jno
xchg
add
adc
jne
jae
mov
jg
clc
rsm
cmp
sbb
jle
jl
jg
gs
mul
jmp
dec
xchg
add
sub
into
in
pushf
push
or
jmp
mov
jns
ds
ins
adc
xchg
push
cdq
mov
arpl
jnp
out
fwait
test
outs
xlat
in
cmp
and
pop
cmp
and
xchg
xor
adc
push
imul
xor
enter
add
add
cld
push
les
aad
not
ffreep
cmp
pop
jmp
or
pop
sti
add
in
dec
add
add
inc
sub
cmp
aam
movs
add
mov
dec
icebp
fcomp
xor
adc
mov
push
pop
add
shr
or
xchg
inc
dec
shl
pusha
cmps
dec
mov
ror
imul
push
fwait
test
dec
std
test
movs
ja
dec
(bad)
mov
stos
pusha
mov
inc
aam
adc
loop
(bad)
or
rol
(bad)
jg
jle
add
dec
pop
lea
pop
fwait
movs
gs
xor
and
and
push
(bad)
popa
scas
das
push
lahf
pop
or
cmp
and
(bad)
call
jmp
pop
sbb
repz
mov
mov
xor
sub
add
das
mul
xor
(bad)
mov
stos
dec
mov
mov
cmc
pop
imul
cmp
leave
add
int3
std
cmp
jo
loopne
sbb
xor
inc
data16
cmp
dec
pop
shl
jmp
in
addr16
jmp
pop
std
loope
inc
mov
push
cmp
movs
xchg
das
test
push
fs
inc
loopne
cmp
xchg
lds
and
mov
pop
sbb
(bad)
mov
sbb
les
pushf
adc
mov
imul
or
xor
push
rol
push
jbe
cmps
clc
aaa
dec
push
ror
add
sbb
test
scas
xchg
jl
cmp
and
in
push
jno
add
jg
mov
es
shr
imul
push
stos
adc
sub
xor
gs
out
and
add
aad
inc
adc
xchg
call
push
fwait
mov
sar
int
pop
dec
call
ja
xchg
push
adc
js
pop
mov
xlat
xchg
loop
test
movs
call
push
popa
test
aaa
(bad)
adc
cwde
push
clc
adc
xchg
jmp
iret
mov
mov
jae
mov
jl
jns
dec
sbb
sub
aaa
hlt
xchg
xchg
add
jbe
dec
in
not
div
cdq
lods
and
mov
xor
jns
loopne
mov
mov
adc
ss
inc
movs
mov
popa
fs
jmp
mov
mul
bound
jp
in
add
cmp
repnz
cli
mov
pop
mul
std
dec
sbb
sub
pop
lods
sub
in
rol
cmp
adc
add
rcl
push
fldcw
xor
adc
ja
cmovge
pop
mov
mov
mov
cld
(bad)
fcom
push
adc
and
sub
jmp
outs
cmp
xchg
adc
adc
pop
push
xchg
shr
cmp
in
popa
inc
xchg
out
jg
repnz
jno
mov
mov
imul
cmc
mov
pusha
imul
shl
and
into
xor
mov
xor
loopne
loopne
ficomp
sub
mov
lahf
inc
jge
shl
xchg
call
xchg
popf
add
out
mov
mov
sbb
rcr
das
and
lahf
add
outs
into
pop
mov
outs
add
cmp
and
mov
jg
push
fimul
jge
dec
mov
push
ret
fisubr
inc
xor
adc
mov
cmc
std
inc
ins
aad
cmps
mov
call
movs
mov
imul
or
sub
jl
push
stc
sub
add
out
addr16
iret
or
jl
mov
ja
outs
dec
pop
pushf
lahf
add
movs
or
stc
inc
pushf
cmp
out
xor
lea
sub
mov
xchg
or
in
jecxz
in
add
mov
sbb
div
dec
arpl
div
inc
jae
xchg
xor
ins
adc
out
jp
dec
xor
or
mov
mov
(bad)
and
call
pop
sub
sub
cmp
lds
cmp
retf
cmps
sahf
cmp
sub
std
test
pop
aas
xchg
xchg
call
leave
lods
mov
xchg
inc
dec
and
fwait
scas
dec
mov
rcr
sahf
es
sub
in
sub
mov
and
mov
je
lock
rol
push
dec
jge
inc
xchg
jns
retf
add
and
stos
js
xchg
pop
hlt
inc
ret
enter
test
popf
dec
aad
dec
jo
(bad)
push
xor
inc
mov
aad
and
cmp
(bad)
push
iret
fidivr
adc
fcomip
mov
std
nop
mov
(bad)
loop
mov
aam
sti
das
dec
pop
scas
push
sahf
inc
in
movs
je
and
es
xchg
int3
sbb
cmp
cmp
dec
jae
nop
out
(bad)
iret
pop
dec
xchg
cmpps
inc
mov
or
xchg
mov
ins
jmp
out
call
pop
adc
adc
ret
scas
popa
call
in
fsub
scas
lods
mov
inc
jae
add
jae
add
retf
stos
and
jmp
ret
push
ins
adc
js
and
cmp
sub
pusha
loope
outs
stos
aas
scas
inc
out
push
xor
fild
imul
stos
popf
aaa
dec
xor
add
or
cld
push
cs
outs
lahf
pop
cmps
pop
jne
sub
xchg
jns
xor
xchg
je
retf
cli
mov
mov
inc
or
je
mov
daa
and
popf
div
test
mov
cld
movs
aad
aad
jecxz
xor
je
and
stc
movs
cwde
xchg
mov
inc
dec
hlt
mov
test
dec
imul
pop
mov
leave
jle
adc
jae
es
(bad)
inc
pop
add
xchg
les
pusha
and
nop
dec
cmp
dec
pop
mov
inc
mov
aad
rcr
push
sub
dec
inc
jp
sahf
pop
sbb
aaa
pop
stos
mov
pop
mov
shr
rcl
test
push
mov
call
fimul
mov
hlt
and
pop
dec
add
mov
hlt
pop
bound
push
or
add
jmp
not
fcomp
pop
sbb
jnp
and
dec
and
repz
mov
jp
jecxz
mov
jmp
push
je
das
imul
jg
shl
xchg
xchg
jo
int3
icebp
test
inc
int3
sbb
shr
jecxz
shl
mov
cdq
xchg
ret
loop
in
scas
(bad)
and
out
jg
jle
stos
rcl
or
sub
jne
(bad)
sbb
les
and
jnp
lds
mov
(bad)
daa
sub
dec
cs
in
xchg
mov
mov
push
cs
loope
xchg
lahf
test
movs
mov
lods
ret
pop
loope
pop
enter
div
cmp
mov
sbb
enter
cli
jnp
sub
and
inc
xchg
movs
jmp
repnz
ins
and
mov
fld
dec
add
lods
in
hlt
sbb
cdq
aas
stc
mov
cs
add
xchg
call
(bad)
fistp
in
mov
sbb
(bad)
push
inc
push
dec
mov
and
inc
clc
mov
sbb
xchg
into
loope
inc
inc
mov
mov
pop
outs
dec
pop
jns
sbb
adc
cmp
sub
sub
mov
popa
xlat
pop
pusha
in
push
pusha
sub
(bad)
cs
cmp
popa
cmp
jg
cmp
lea
mov
ins
xchg
mov
mov
or
inc
mov
xor
mov
jo
or
push
xor
arpl
cmps
and
(bad)
push
das
jne
push
ret
out
ret
fstp
out
ficom
icebp
addr16
ret
mov
and
xchg
(bad)
in
mov
sbb
sbb
popf
jmp
inc
mov
mov
mov
popa
clc
in
jnp
dec
and
adc
mov
stc
stos
stos
ror
test
jno
ret
scas
and
inc
or
pop
js
scas
fnstcw
fwait
movs
scas
pop
adc
jb
push
sahf
clc
push
out
push
rcl
mov
mov
jle
test
push
inc
xlat
sahf
adc
mov
je
test
dec
mov
sub
sbb
push
jno
dec
cmp
xchg
jecxz
aaa
push
jne
nop
in
add
inc
fdiv
nop
push
inc
jo
inc
push
xor
lock
xchg
lds
and
sbb
mov
cmp
push
cdq
mov
es
fld
lock
push
jmp
test
pop
fwait
cmp
out
adc
mov
not
cmps
dec
mov
ds
push
sub
clc
es
hlt
out
jbe
jno
sub
cwde
xor
sti
mov
fist
inc
push
push
mov
adc
outs
dec
sbb
pop
pop
mov
xor
add
jnp
fisub
push
cmp
add
arpl
xchg
sar
xchg
or
(bad)
push
mov
push
ss
addr16
cmps
test
mov
xchg
cmp
scas
or
(bad)
cmc
sbb
es
popf
int
in
xor
mov
mov
jae
popf
ins
in
ret
daa
cli
(bad)
or
data16
int3
push
adc
mov
adc
inc
imul
jb
pushf
jmp
out
cmp
xor
ins
and
jecxz
pop
fwait
(bad)
pop
retf
data16
add
movs
ret
sub
cs
pop
inc
inc
lock
rcl
add
jnp
jnp
cmps
xor
pop
inc
aas
adc
add
das
je
push
call
pop
ror
inc
mov
cmps
(bad)
push
hlt
lahf
das
popf
pop
or
pop
out
jmp
int3
aad
int
sub
repz
mov
pop
and
pop
into
mov
xor
ss
les
inc
mov
das
rcl
rol
(bad)
pop
cmps
inc
pushf
push
jmp
js
pop
xor
pop
add
cmps
fwait
stos
loopne
adc
in
js
dec
mov
cmp
int
test
mov
imul
sub
je
movs
pop
sub
daa
fldcw
inc
cmp
pop
outs
outs
mov
les
pop
cld
and
push
add
out
and
rcr
and
pop
into
fs
pop
pop
xlat
cmp
test
out
adc
(bad)
popa
cmp
sbb
mov
enter
sub
mov
out
or
inc
aaa
in
fsincos
push
xchg
jg
or
adc
(bad)
data16
xchg
iret
pop
cs
(bad)
into
adc
clc
jmp
rol
mov
sbb
fnstsw
pop
imul
mov
mov
test
pop
pop
sub
sti
sbb
sub
loopne
mov
loop
jbe
xchg
lds
mov
push
add
cmp
xchg
xchg
inc
out
cs
cmp
push
mov
mov
ret
or
cmp
push
out
jmp
rcl
pop
popa
repnz
xchg
cmc
das
dec
fcmovnbe
std
add
xchg
sbb
jl
dec
xor
and
push
add
data16
call
neg
xor
lods
int3
cli
dec
shl
in
ret
cmp
mov
les
retf
es
(bad)
mov
mov
loop
ficom
sub
in
xchg
hlt
mov
xchg
cli
enter
ficomp
jno
leave
fst
daa
(bad)
xchg
lahf
(bad)
in
inc
dec
ss
fs
add
test
adc
inc
add
in
cs
cs
les
(bad)
jne
pusha
ins
ins
adc
out
in
push
div
sub
xchg
out
sub
cmc
fdivp
loopne
mov
gs
ror
outs
mov
(bad)
scas
dec
in
loop
sub
xchg
jnp
pushf
mov
cmp
or
stos
ret
cld
sahf
sub
(bad)
mov
pushf
mov
fldenv
int
or
jns
ss
into
jle
and
aad
aaa
mov
sub
ficomp
mov
es
loopne
mov
sti
pop
in
es
call
inc
and
pop
jle
lock
inc
loopne
xchg
(bad)
in
(bad)
in
cmp
pop
icebp
cmp
jp
pop
sbb
add
add
or
sub
fs
fistp
in
cwde
test
jecxz
sar
jae
and
xchg
out
nop
xchg
hlt
xlat
shr
jbe
push
retf
mov
jle
inc
or
loope
mov
mov
enter
pop
push
pushf
or
dec
aad
test
or
movs
int
sub
icebp
xor
pop
aas
shl
cmp
in
cld
push
jo
into
and
test
mov
inc
sar
inc
pop
add
add
pop
test
daa
fisttp
sub
cmp
xor
sbb
ret
int
jmp
int3
loopne
inc
cvtdq2ps
mov
arpl
pop
push
cmp
add
cld
bound
sub
sub
push
xchg
mov
mov
lea
add
jmp
repnz
test
xor
ins
pop
stos
pop
sub
sti
push
or
jbe
cdq
push
xor
in
pop
nop
fsin
(bad)
fcom
mov
fsubr
or
(bad)
ds
por
push
rcl
jae
mov
cmc
mov
jmp
inc
pop
push
jmp
leave
icebp
add
retf
(bad)
sbb
sub
scas
push
mov
cwde
dec
pop
jg
sub
sbb
mov
ss
sub
sar
rcr
xchg
adc
int
dec
adc
mov
repz
jae
add
mov
adc
inc
lds
adc
sbb
(bad)
fiadd
aas
dec
and
xor
rcl
pop
mov
cmp
sub
xchg
sbb
add
ins
sub
popf
fnstsw
daa
dec
mov
add
fnstsw
fmul
jecxz
sub
popa
mov
stos
mov
jmp
add
outs
mov
mov
ins
pop
std
in
aad
div
dec
fadd
lods
clc
(bad)
call
dec
inc
pushf
jmp
sbb
(bad)
lock
movs
push
pop
dec
scas
cmp
imul
or
scas
cwde
pop
adc
test
jae
jns
repnz
retf
not
and
adc
mov
into
mov
lods
(bad)
sbb
addr16
ret
lea
jl
fdiv
mov
mov
ror
push
dec
fstp
clc
(bad)
into
hlt
or
fdivr
mov
cdq
popa
jne
sbb
test
add
in
test
je
jle
into
sbb
mov
dec
cmp
dec
sbb
jmp
loopne
outs
and
sbb
cmp
out
xchg
mov
mov
dec
pusha
jmp
push
xchg
adc
add
sbb
nop
pushf
cmps
sub
imul
dec
repnz
add
pop
addr16
(bad)
xlat
dec
ss
cmp
mov
ins
lahf
dec
lock
dec
nop
pop
inc
stos
lods
push
sub
pusha
lods
pop
cmp
jne
mov
cmps
sahf
sbb
or
pusha
stos
(bad)
fcmovnbe
sub
(bad)
mov
nop
pop
iret
mov
jmp
hlt
or
xor
cmp
inc
std
aaa
sti
sbb
call
jp
lea
scas
sbb
jmp
fsubr
sbb
loope
test
popa
dec
arpl
jecxz
xchg
add
push
lea
sbb
dec
and
push
fld
cmp
call
mov
(bad)
cmp
cmp
mov
xchg
call
fbld
leave
jo
mov
sub
mov
dec
ins
mov
loope
lock
imul
xor
stos
fwait
lahf
iret
jge
add
rcr
test
fldcw
inc
mov
mov
mov
data16
(bad)
aad
ins
pop
and
cmps
scas
shr
in
and
fstp
ror
lahf
pop
js
mov
retf
cmp
adc
sbb
addr16
repz
cdq
dec
or
test
mov
mov
gs
adc
cmp
call
data16
nop
inc
pop
out
and
xchg
mov
xor
jmp
cli
or
xor
inc
dec
jecxz
mov
mov
test
jns
loopne
inc
lods
(bad)
sub
dec
xchg
xor
dec
push
adc
push
jbe
popf
sub
cmc
in
movs
out
loope
mov
jmp
lock
or
cdq
xchg
jmp
(bad)
adc
and
fld
lea
inc
sub
sub
movs
ds
aas
into
mov
enter
cdq
out
push
ss
mov
xor
rol
pop
mov
scas
xchg
pop
mov
hlt
pusha
pop
xchg
(bad)
leave
adc
push
cmps
add
cmps
adc
ins
jp
or
xchg
lahf
pop
out
inc
jmp
adc
mov
dec
lea
pop
das
js
jg
add
and
call
dec
clc
pusha
dec
out
dec
adc
xor
test
inc
gs
sbb
dec
(bad)
shl
mul
sub
lods
or
jg
pop
stc
fistp
xchg
mov
or
inc
add
adc
mov
push
xor
ret
inc
mov
sub
es
cmc
pushf
sub
cwde
inc
mov
sub
lods
mov
das
nop
js
sar
add
nop
and
cs
fbstp
mov
adc
ss
sub
loope
loop
mov
push
(bad)
loope
movs
pop
xor
inc
in
dec
out
pop
xchg
push
ins
nop
lea
pusha
dec
pop
lock
sar
cmp
nop
sbb
jns
fwait
mov
xor
mov
fwait
dec
mov
(bad)
xlat
xchg
sub
and
ins
imul
jae
xor
scas
adc
imul
enter
cmp
out
sbb
push
push
loop
push
loop
or
push
int3
(bad)
xchg
retf
or
pop
sbb
pop
(bad)
cmp
lea
jp
sub
inc
sub
jecxz
adc
loopne
popa
xchg
adc
loopne
push
mov
rcr
(bad)
test
stos
xlat
mov
mov
stos
int3
xchg
inc
mov
mul
push
xor
pop
imul
inc
dec
fmul
hlt
outs
jmp
adc
sub
out
test
aas
dec
or
rcl
mov
rol
retf
inc
cmp
outs
loopne
sbb
rcl
popf
aas
bswap
jns
jmp
cwde
xchg
out
(bad)
popf
test
adc
scas
mov
(bad)
cwde
mov
pop
stos
(bad)
(bad)
retf
adc
sbb
scas
imul
mov
(bad)
sti
cmp
cmps
mov
test
fsubr
cmp
cmp
and
mov
ins
dec
mov
or
sub
and
fbstp
push
adc
(bad)
icebp
jmp
dec
lds
xchg
jecxz
xchg
xchg
outs
and
je
xor
imul
jne
cs
xlat
add
pop
inc
movs
pop
neg
rcr
int
push
sbb
sahf
std
push
push
in
adc
stos
cs
in
pop
imul
shl
or
mov
jmp
push
sbb
mov
xor
cmp
pop
fwait
xor
and
and
pop
push
out
(bad)
aam
or
jne
in
daa
sbb
movs
push
cmp
dec
xor
sbb
movs
lds
jne
and
cmps
pop
lea
pop
(bad)
jmp
scas
repnz
sub
popa
in
(bad)
js
jb
jp
xchg
and
xchg
ja
adc
jae
inc
js
ret
xchg
adc
ja
jb
cmc
imul
ret
add
fdiv
pop
loopne
bound
mov
loope
inc
adc
shl
cmps
aam
mov
add
mov
fs
test
in
mov
push
sbb
movs
out
push
adc
adc
sbb
mov
stos
sti
cmp
ror
inc
xchg
mov
cmps
mov
mov
pop
or
jbe
dec
jo
fsubr
push
and
enter
and
push
cmps
mov
adc
mov
hlt
sbb
xchg
adc
add
shl
imul
call
adc
dec
dec
dec
hlt
xchg
ins
(bad)
arpl
cmp
les
mov
mov
mov
push
test
ss
(bad)
jbe
clc
call
inc
jns
fsub
xor
xor
adc
ss
push
div
xor
pavgw
call
std
vpmullw
jl
ja
lods
cmc
cmp
mov
cdq
hlt
push
cmp
lahf
in
cmp
fld
stc
push
iret
mov
nop
cs
or
xchg
inc
jle
lock
sar
inc
pop
ror
inc
sub
mov
enter
xchg
dec
nop
ror
jp
cmc
add
fadd
push
repnz
loopne
cld
std
adc
scas
popf
sbb
sahf
(bad)
fisub
sti
pop
out
cmp
push
inc
loop
fucomp
lahf
dec
push
mov
or
inc
outs
cmp
inc
inc
push
inc
xor
ror
dec
add
dec
xor
mov
int
out
mov
push
adc
test
xchg
(bad)
jo
fisubr
movs
mov
mov
test
sub
sbb
xchg
sub
shl
repz
ror
(bad)
pop
enter
add
xor
(bad)
ins
mov
cmp
jp
add
push
ss
loope
pop
sub
ss
xchg
add
or
push
ja
jbe
ret
mov
xchg
lods
mov
test
test
js
js
jmp
mov
push
aad
mov
aam
mov
cwde
push
(bad)
iret
mov
mov
ins
sub
dec
movs
pop
iret
add
push
daa
inc
jmp
fstp
call
inc
(bad)
cmp
cmp
jecxz
ss
jnp
test
(bad)
daa
jg
push
jmp
cmp
enter
in
ret
lods
mov
in
sbb
or
aaa
sub
loope
out
out
dec
push
xchg
add
shl
xor
pop
jl
cmp
cdq
xchg
jecxz
neg
adc
jecxz
jns
sub
ret
inc
and
pop
jae
shl
add
push
cld
sub
add
std
cmp
arpl
inc
or
mov
shl
sbb
jno
mov
repz
sbb
frstor
seta
(bad)
scas
(bad)
mov
movs
push
test
pop
shr
cmps
push
les
in
jg
lahf
pop
xlat
jg
sub
(bad)
push
imul
mov
aas
outs
inc
pop
jo
pop
push
in
addr16
shl
or
into
call
mov
pusha
rol
retf
adc
hlt
push
jmp
push
inc
dec
lods
in
mov
fsub
stc
sbb
or
retf
cmp
fs
xlat
jnp
cli
xor
xor
lods
and
xchg
stc
(bad)
cmp
int
mov
pop
push
rcr
or
sbb
retf
cmp
out
cmp
xor
je
cmp
sbb
sbb
aam
test
fild
push
mov
clc
mov
pop
or
shl
mov
das
and
les
cli
rol
xchg
jmp
jnp
lahf
lea
add
cld
(bad)
call
or
pop
cmp
jno
rcr
stc
stc
dec
cli
adc
mov
lock
dec
cmp
and
mov
add
xchg
or
cs
dec
push
cmp
cmps
dec
and
js
inc
cmp
add
mov
or
and
or
sub
jb
hlt
inc
mov
dec
data16
pop
push
sub
stos
mov
xchg
fidivr
mov
jg
lea
jae
jnp
mov
cmps
inc
add
vmread
add
sbb
(bad)
sbb
stos
push
cmp
retf
daa
xchg
out
cmp
cmp
cmova
pop
or
std
cmps
sub
sbb
out
fmul
xchg
inc
repnz
movs
inc
sbb
xchg
mov
ss
jns
test
pop
jb
add
mov
iret
mov
mov
(bad)
icebp
lea
aaa
jge
mov
mov
out
loopne
cmc
icebp
cmp
test
cdq
inc
ret
lds
cdq
pop
in
jb
stos
outs
js
xchg
sbb
and
ja
adc
mov
xor
or
cmp
sub
icebp
pop
fnstsw
leave
inc
xchg
test
cmp
call
int3
dec
icebp
cdq
retf
rdtsc
mov
push
mov
fisttp
lds
or
adc
in
pop
aad
pop
add
add
fistp
jb
out
call
jb
or
jp
loopne
dec
retf
push
fstp
clc
sbb
ds
lods
test
adc
aad
ror
pop
movs
hlt
mov
stc
jge
adc
mov
add
imul
mov
imul
mov
add
push
xchg
pop
dec
cs
cmp
xor
ret
mov
test
inc
push
pusha
es
pop
(bad)
mov
js
lods
lods
mov
hlt
push
(bad)
mov
aaa
jne
cmps
pop
pop
adc
jne
sub
nop
test
clc
push
jmp
mov
inc
mov
cld
aas
out
shl
push
cmps
mov
pop
cmps
(bad)
scas
pop
push
adc
out
dec
adc
ret
adc
loop
add
daa
pop
arpl
and
ror
or
push
mov
cmps
cmp
nop
cmp
cwde
jg
adc
push
xchg
sub
mov
fucomp
aas
retf
cmp
inc
pop
loop
jno
cmc
inc
fstp
and
aas
mov
sub
xchg
pop
(bad)
test
test
iret
dec
or
ret
pop
neg
pop
dec
ja
jnp
movs
add
enter
mov
ins
mov
xchg
xlat
xchg
cld
xor
in
adc
jecxz
mov
in
(bad)
(bad)
je
int3
rcl
arpl
call
inc
mov
ss
push
outs
bound
popa
pop
std
mov
xchg
mov
sub
cmp
stc
xchg
add
xchg
dec
pop
fistp
inc
in
pushf
pop
mov
push
push
add
cmp
jnp
pop
cli
fwait
xchg
(bad)
inc
js
hlt
pop
mov
pop
adc
mov
dec
pop
sbb
stos
pushf
pop
xchg
dec
leave
cmp
pushf
outs
sub
mov
adc
sbb
out
sub
icebp
cmp
shl
ror
lods
xor
gs
imul
mov
not
pop
bound
dec
scas
push
and
xchg
mov
cmp
fstp
test
ret
dec
into
movs
push
mov
or
fnstenv
cwde
enter
dec
ss
pop
add
dec
xor
jnp
jnp
mov
icebp
sub
mov
div
stos
outs
mov
fst
test
retf
cmps
pushf
test
adc
fcomi
dec
js
sub
outs
or
mov
lods
mov
push
cwde
outs
dec
dec
test
cmp
cmp
in
sub
push
pop
jge
xor
inc
rol
fist
aam
and
out
call
shr
mov
sub
into
xor
sub
mov
aam
sbb
addr16
out
and
inc
ret
bound
enter
xor
ss
xchg
mov
aad
je
jo
xor
fwait
mov
cs
lea
sbb
push
scas
jo
je
push
mov
add
pop
or
push
ds
cmps
xchg
cs
shr
ins
jmp
cs
or
push
and
and
mov
adc
fild
v4fnmaddps
loop
jb
fstp
mul
xor
mov
jp
aaa
mov
mov
sar
push
jbe
fs
fisub
cmps
mov
mov
and
jl
dec
cmp
cmp
scas
xor
mov
push
xchg
outs
mov
lock
jnp
sub
xchg
mov
bound
sub
cmps
hlt
xor
mov
nop
adc
cli
dec
xlat
cmc
callw
aaa
scas
or
data16
das
je
xchg
jno
mov
faddp
fld
int3
hlt
sar
pop
stos
arpl
adc
jnp
adc
out
adc
lods
sub
dec
mov
dec
test
and
lea
ror
add
xchg
aad
pushf
mov
adc
mov
in
jo
cmp
mov
repz
sbb
inc
xchg
int
sub
mov
aad
push
call
lds
mov
mov
fdiv
dec
cmp
das
and
sbb
call
pop
call
cmp
jle
data16
mov
es
adc
jg
mov
push
mov
xor
add
add
stos
mov
push
int
xchg
cmp
add
xchg
pop
fidivr
ret
adc
ins
mov
cmp
pop
xchg
jo
push
ds
fucomi
pop
add
inc
jbe
(bad)
jo
jno
xor
popa
or
and
daa
and
inc
cdq
sbb
adc
imul
fsub
shr
sbb
cmp
fld
xor
fiadd
sub
nop
daa
add
fwait
ds
in
and
mov
aad
pop
into
stos
xchg
add
sbb
iret
inc
movs
nop
push
mov
ds
shr
retf
jmp
leave
leave
push
add
cmps
lahf
add
movs
push
push
add
mov
inc
fdivr
push
pop
mov
dec
sub
xchg
add
mov
push
cmp
aaa
movs
cmc
xchg
inc
xor
test
xchg
add
sub
pusha
xor
sub
push
pop
xchg
push
mov
xchg
cmp
int3
lock
adc
std
inc
push
pusha
mov
lods
addr16
clc
ss
adc
sub
stos
pop
loop
dec
mov
adc
cld
jae
rcr
sbb
cmps
inc
movs
loope
inc
sbb
(bad)
arpl
sbb
repz
jno
sub
adc
mul
xchg
add
pop
mov
or
push
arpl
or
pcmpeqd
mov
mov
add
dec
mov
test
mov
adc
push
lods
movs
jg
test
pop
lods
ror
inc
enter
je
pop
sub
shr
or
push
outs
mov
into
push
sub
mov
xlat
mov
ds
inc
fldcw
dec
or
jnp
push
ins
adc
mov
loopne
bound
cmp
jbe
in
sub
clc
pop
clc
arpl
aad
pop
sahf
inc
xlat
jbe
addr16
scas
(bad)
sub
push
fild
fcomp
jle
xchg
dec
call
sub
rol
mov
adc
jo
aam
push
fiadd
mov
and
adc
inc
test
cwde
xor
dec
(bad)
popf
mov
sbb
sub
inc
pop
js
mov
mov
rol
in
and
addr16
jnp
jecxz
add
test
mov
stos
sub
dec
ja
cmp
or
pop
and
pop
sti
sub
or
std
xor
std
jae
repz
popa
xchg
mov
icebp
mov
inc
xor
(bad)
push
push
fbstp
retf
mov
nop
dec
lods
inc
mov
xor
mov
xchg
pop
mov
or
push
xor
mov
shl
fcomp
and
pop
pop
sysenter
call
inc
sbb
sub
aam
xor
cmp
pop
mov
xchg
sbb
arpl
xchg
xor
adc
dec
test
mov
mov
leave
mov
adc
sub
add
pop
or
jo
jl
jbe
fst
fwait
adc
xchg
jl
mov
or
mov
ins
fwait
push
sub
sbb
mov
das
das
push
jne
pop
cs
movs
mov
fldenv
and
jnp
cld
pop
pop
stc
in
xchg
mov
pop
cmps
pop
fisub
jb
sub
jno
mov
sbb
push
rcr
jl
ins
inc
das
pop
add
nop
pop
pop
dec
outs
sub
mov
test
cmp
movs
ret
jo
sub
jno
cmps
mov
fild
dec
dec
cmp
or
in
mov
bnd
push
div
clc
loope
xor
mov
dec
sub
jmp
ja
push
and
cmp
and
outs
add
ins
xchg
test
lods
outs
imul
ds
lock
pop
fsub
mov
scas
xchg
jno
push
xor
push
push
and
xor
in
mov
mov
das
xchg
in
inc
jne
mov
mov
outs
jbe
cdq
stos
adc
or
pop
sahf
test
jl
mov
aaa
push
and
mov
scas
cmp
stos
sub
movs
dec
xor
xor
mov
leave
pushf
aas
sbb
movs
cmps
test
fidivr
sub
pop
push
jmp
dec
shl
dec
push
cmps
imul
sbb
or
popf
popf
pop
test
fst
stos
jge
mov
rol
jmp
jnp
fs
mov
inc
xchg
jnp
cmp
xor
fld
je
push
pop
sbb
push
push
jb
ficom
inc
fs
cmp
dec
jge
std
mov
mov
pop
ins
scas
cs
cmps
cmp
lods
push
sbb
ret
mov
dec
mov
rcl
add
mov
mov
sti
scas
nop
mov
adc
cmc
ins
cdq
jae
(bad)
shr
cmp
les
mov
cmp
cmp
dec
cmps
nop
xchg
(bad)
xor
push
sti
shl
pop
ss
popa
mov
int
mov
jmp
xchg
retf
cmc
mul
call
cwde
movs
(bad)
cmc
sub
daa
repnz
stos
sbb
scas
sbb
cmps
rcr
shr
add
scas
cld
pop
sbb
xchg
pusha
mov
push
adc
lea
loop
push
pop
cmp
ins
add
dec
test
pop
push
xor
jecxz
inc
jl
inc
jae
(bad)
adc
mov
cmc
add
movs
mov
xor
retf
pop
aas
cmc
jmp
push
push
cmps
sbb
sahf
sbb
scas
mov
push
dec
sub
adc
or
cmc
es
lods
retf
mov
mov
inc
loopne
sbb
and
movs
rcr
sub
in
(bad)
test
xchg
(bad)
fild
in
int3
dec
xchg
ins
aaa
into
cwde
add
(bad)
jne
push
jns
pop
mov
int
rol
sbb
fwait
out
(bad)
jnp
adc
mov
out
sbb
data16
push
aam
xchg
idiv
inc
pop
xlat
(bad)
repnz
imul
mov
sbb
sub
neg
cdq
jbe
loope
retf
or
pusha
inc
pop
retf
out
sub
pop
push
pop
int3
or
sub
mov
mov
jl
adc
in
int
stc
out
dec
popa
nop
pop
jg
xchg
lock
push
in
xchg
adc
lds
vminss
cmps
les
stc
cmp
loope
(bad)
fwait
mov
add
mov
cmps
inc
mov
or
aaa
mov
sbb
rcr
retf
mov
popa
xor
or
loop
pusha
imul
add
movs
pop
cmps
fdiv
xlat
cdq
adc
or
cwde
cmc
bound
xor
outs
ins
int
xor
cli
mov
mov
hlt
ds
ficomp
push
pop
inc
aas
push
aam
mov
scas
icebp
cmp
adc
cmp
test
push
ss
cmp
aad
push
jmp
mov
adc
(bad)
test
push
xchg
(bad)
jmp
iret
dec
gs
rcr
aam
hlt
ins
xor
lds
jb
xor
clc
pushf
inc
out
div
xor
jno
push
pop
push
outs
dec
pop
xchg
(bad)
out
jo
imul
fistp
cmc
pop
pop
pop
ret
gs
cld
in
mov
cmp
mov
inc
cmp
and
add
ins
loop
jo
push
fidivr
jmp
and
add
sbb
inc
and
pop
mov
cmp
cld
jno
pop
jmp
mov
push
repz
push
popf
repnz
fst
out
leave
adc
hlt
xor
jbe
fbstp
repnz
inc
dec
scas
pop
and
and
cmp
test
xchg
ins
jmp
push
sub
scas
jp
xlat
sbb
fisttp
adc
adc
adc
add
nop
push
imul
out
dec
loopne
shl
es
mov
aaa
and
ja
test
in
or
push
adc
inc
mov
pushf
ins
das
icebp
fbld
sbb
in
push
and
xor
dec
scas
jo
outs
xchg
test
cmp
mov
inc
dec
pop
and
icebp
jmp
sub
mov
scas
push
les
and
add
out
or
jae
sbb
mov
or
stc
add
pop
cmp
lds
xor
stc
mov
jb
test
jg
mov
and
and
mov
fsub
ret
push
cmp
push
ins
xchg
xor
test
loopne
add
or
pop
and
aas
outs
les
rcr
mov
jns
lods
lahf
jmp
jmp
or
out
push
inc
push
(bad)
cmps
(bad)
push
scas
test
daa
jno
mov
icebp
cmps
mov
or
xlat
jmp
mov
(bad)
(bad)
cmp
clc
dec
push
mov
mov
scas
jmp
ins
jg
mov
mov
sub
jb
push
sbb
xor
pop
arpl
jmp
inc
mov
mul
imul
adc
cmova
jle
out
(bad)
jmp
dec
sub
lea
not
stos
fisubr
(bad)
test
adc
or
dec
popf
addr16
mov
out
iret
pop
or
icebp
dec
cmp
jecxz
jmp
jnp
mov
cs
fmul
hlt
mov
aaa
xchg
imul
push
cmp
or
cmps
pop
adc
mov
js
add
sbb
mov
arpl
jp
data16
lods
or
in
xor
das
gs
mov
outs
add
(bad)
push
fidivr
cmc
dec
cmps
test
cdq
or
sbb
aam
loopne
mov
jge
icebp
movs
jp
xor
push
mov
icebp
in
pop
ins
xor
dec
xor
adc
sub
arpl
cli
or
inc
ins
je
ret
in
mov
push
inc
mov
xchg
call
xchg
std
lds
and
ins
xchg
imul
or
xchg
repnz
xchg
fs
cwde
(bad)
pop
mov
add
mov
aam
mov
xor
icebp
repnz
dec
cli
ret
inc
mov
push
lea
cmps
sub
mov
out
nop
sbb
(bad)
ss
sbb
dec
int3
xor
xchg
je
or
mov
gs
ret
shr
push
call
repz
mov
mov
push
jp
push
pusha
or
push
(bad)
sbb
sbb
mov
pop
(bad)
dec
sub
dec
gs
and
imul
cmps
sbb
xor
rol
sub
mov
sbb
jge
cmps
mov
inc
xchg
cli
pop
adc
hlt
fs
inc
stos
inc
sub
xchg
add
repz
xchg
xchg
add
(bad)
or
or
jge
gs
inc
loope
cmps
lds
ficom
fisub
retf
fadd
inc
adc
leave
das
fs
imul
xchg
icebp
out
jp
iret
mov
xchg
cmp
ret
lock
mov
push
cdq
jb
jl
mov
mov
aaa
pop
lea
push
dec
pop
jo
add
lds
dec
out
pop
cmp
sub
fcom
sub
pop
pop
loopne
pop
daa
cmp
arpl
je
cmp
in
jb
adc
movs
out
imul
mov
fiadd
push
inc
fs
sbb
add
imul
outs
add
push
stos
push
and
retf
pusha
jns
mov
pop
das
scas
add
inc
aaa
retf
loope
push
sbb
push
gs
mov
pop
mov
sub
mov
adc
or
push
loope
cmp
cmp
push
xchg
(bad)
sti
mov
sbb
push
mov
mov
scas
mov
xor
mov
xchg
mov
mov
(bad)
push
in
out
xchg
lds
pushf
test
mov
sbb
in
jbe
(bad)
adc
mov
popa
fdiv
aad
xchg
cmps
(bad)
mov
adc
pop
sub
sub
xor
(bad)
retf
leave
dec
mov
mov
jo
shl
icebp
add
into
shr
push
push
cmp
std
in
adc
and
sub
mov
fs
adc
xchg
sbb
or
or
mov
or
xchg
addr16
mov
adc
push
(bad)
mov
(bad)
dec
pusha
xor
sub
and
fild
pusha
push
fcom
mov
jecxz
or
mov
mov
dec
mov
lds
mov
mov
pusha
cmps
mov
daa
or
pop
dec
jo
nop
xchg
mov
cli
in
push
(bad)
cmp
nop
mov
cmc
ret
xor
scas
cdq
adc
adc
inc
pop
sbb
into
loop
sbb
in
mov
imul
inc
dec
adc
mov
cmp
in
neg
jmp
fstp
jge
iret
mov
fstp
repnz
dec
inc
(bad)
jnp
cmp
fst
xor
adc
push
mov
cli
test
sbb
iret
sti
rcl
mov
fist
add
fstp
dec
cwde
adc
add
mov
inc
push
sub
sub
cmc
ror
xor
and
adc
adc
jmp
mov
stos
stos
jbe
push
xor
test
jmp
mov
stos
inc
movs
dec
jge
adc
push
mov
addr16
inc
or
xchg
adc
cmps
mov
xchg
pop
pop
hlt
imul
int
fadd
jp
pop
push
xor
test
sahf
loopne
test
mov
psllw
fmul
mov
cmp
inc
push
cmp
repz
ret
scas
into
frstor
mov
fsub
pop
xchg
js
call
rcr
push
mov
scas
cmp
out
test
mov
dec
scas
adc
jl
pop
pushw
frstor
cs
dec
mov
outs
lods
fcomp
(bad)
sub
jg
mov
pop
lds
fnstsw
test
mov
fdivr
jge
shl
xor
dec
clc
pop
int3
clc
(bad)
jl
(bad)
push
mov
aas
xor
adc
mov
iret
mov
(bad)
xor
mov
mov
sbb
in
mov
dec
pop
or
push
push
daa
sahf
lods
sub
sti
mov
push
adc
inc
rol
outs
sar
fstp
out
xor
aaa
cmps
sbb
jle
and
cld
and
fcmovb
(bad)
mov
out
mov
(bad)
fcmovnu
adc
fimul
push
sbb
fwait
(bad)
mov
xor
mov
loop
pusha
ins
inc
push
cmc
dec
and
push
clc
cmps
adc
xchg
mov
in
into
and
loope
addr16
iret
mov
imul
inc
in
mov
cs
mov
out
pop
aad
sbb
adc
arpl
add
lock
retf
aas
jae
adc
cmp
scas
adc
test
loope
jle
pop
or
imul
fldcw
movs
adc
dec
mov
stos
jmp
clc
jl
adc
cmps
ret
aam
clc
dec
es
in
fsubr
mov
ror
push
mov
scas
mov
pop
xchg
inc
scas
hlt
adc
hlt
das
je
and
fst
in
pslld
lds
pushf
call
loope
push
pop
pop
(bad)
in
sbb
jno
iret
(bad)
scas
cmc
mov
inc
add
retf
fisub
iret
pop
rcr
call
fwait
mov
adc
pop
or
fld
mov
xor
in
out
and
cmp
(bad)
dec
push
pop
inc
and
cmp
fdivr
cli
sub
scas
dec
and
jne
adc
sbb
mov
xchg
cdq
gs
inc
mov
lea
sahf
movs
loope
(bad)
mov
push
icebp
push
push
mov
dec
jmp
hlt
inc
ins
lods
dec
dec
scas
int3
repnz
addr16
cli
jle
loop
mov
mov
and
and
(bad)
adc
fisttp
outs
add
pop
pop
cmp
sti
jo
mov
mov
pop
mov
push
sbb
daa
xchg
mov
sbb
cmps
dec
mov
ins
sahf
cmp
add
je
jmp
cmps
int3
add
sub
out
xor
lea
ins
or
mov
fdiv
movs
ror
push
js
scas
jle
(bad)
jmp
das
or
sub
fistp
jmp
or
mov
invd
push
push
jne
call
and
out
push
xchg
mov
ins
cmp
sub
or
pop
pushf
jecxz
test
enter
fwait
push
repnz
repz
iret
push
adc
xchg
jmp
sti
and
mov
scas
das
lods
xchg
aaa
and
jmp
clc
mov
call
fbld
xor
push
popa
stos
int
sub
enter
push
je
jp
loop
in
scas
cmps
int3
aam
(bad)
outs
lods
jg
jmp
cmp
bound
out
lods
dec
ds
ror
push
enter
pop
std
jbe
inc
sbb
out
pop
test
push
push
mov
aam
fsub
adc
mov
and
and
leave
cmps
adc
push
rol
pushf
dec
pop
dec
out
inc
in
jecxz
cmp
inc
into
and
and
lea
or
repnz
mov
push
call
imul
xchg
mov
out
popa
pop
jl
and
cmp
jl
inc
ins
add
aad
push
out
(bad)
jns
jb
loopne
cli
dec
daa
(bad)
leave
in
das
pop
(bad)
sbb
dec
sub
aad
call
out
sub
ins
jecxz
in
xor
inc
aaa
ins
jns
adc
mov
rol
cmp
cmc
xlat
cwde
call
sahf
add
inc
mov
repz
retf
mov
int
add
cs
and
nop
mov
retf
inc
shl
and
imul
xor
outs
in
popf
pop
xchg
loopne
test
and
inc
mov
push
(bad)
lods
add
or
sub
test
mov
pop
(bad)
nop
mov
retf
cdq
fild
and
loope
push
push
das
lods
mov
mov
(bad)
push
mov
outs
push
cmp
mov
call
xlat
sub
xor
cmp
cmp
or
ja
jne
int3
jmp
push
int
lock
mov
xchg
push
aam
xchg
jno
xchg
addr16
ret
and
sbb
jmp
or
arpl
popf
ror
repnz
sub
sub
sbb
pop
mov
xor
std
jp
es
mov
or
xor
push
push
adc
addr16
xchg
sbb
stos
lods
xor
or
mov
jp
gs
aam
xor
inc
cdq
jg
imul
clc
or
inc
fwait
stc
(bad)
and
lea
cs
cmps
mov
mov
fwait
cdq
icebp
dec
xor
xor
cmp
cmp
mov
inc
cmp
add
or
sti
add
leave
jae
sbb
fsubr
fdivp
mov
aas
in
outs
sub
movs
sub
mov
xchg
enter
pop
(bad)
fistp
cmps
nop
cli
push
pop
inc
mov
jbe
loop
xchg
cmp
out
sysenter
scas
and
push
mov
add
mov
and
inc
push
push
loope
or
mov
aas
xor
xor
pop
sub
mov
out
int
in
sub
adc
fs
pop
fs
sar
ret
pop
idiv
idiv
std
test
cmp
sbb
mov
dec
mov
(bad)
nop
adc
test
jp
jp
xor
loop
jbe
sbb
sbb
fstp
dec
cmp
(bad)
and
loopne
mov
or
xchg
adc
mov
ror
cmps
xchg
inc
cmps
xor
pop
ss
std
push
lock
push
lea
sahf
jno
xchg
pop
add
jbe
outs
dec
movs
mov
cdq
xor
ds
test
dec
(bad)
outs
add
lods
js
jns
jns
stos
xchg
and
xlat
dec
add
push
mov
inc
dec
xchg
(bad)
pop
addr16
hlt
std
jb
sub
test
bound
shl
push
mov
dec
aaa
lock
xchg
ret
imul
dec
jecxz
mov
retf
rcl
adc
dec
mov
jmp
mov
ins
or
adc
push
fwait
imul
ja
push
xor
cmps
add
dec
mov
inc
sbb
stc
stos
xchg
pop
retf
dec
xchg
jg
add
xchg
in
jne
mov
cmp
or
cmp
xor
pop
jmp
xchg
push
push
sbb
sub
out
mov
mov
xchg
dec
adc
xchg
pop
loop
sbb
jmp
xor
stc
dec
outs
loope
adc
xchg
mov
(bad)
fadd
daa
jle
push
or
and
nop
leave
and
in
sbb
and
pop
cld
and
shl
cmps
cmp
jmp
or
inc
(bad)
push
in
cmps
je
movs
inc
pop
push
mov
ss
jno
movs
jp
cmp
movs
fcomp
sahf
cmps
mov
shl
jle
xor
push
ret
or
iret
dec
cmp
ins
jg
sahf
repnz
inc
cmp
jmp
inc
cmc
pop
retf
int3
aam
inc
int
xor
xor
or
stc
dec
mov
or
xor
push
ins
addr16
xchg
cwde
adc
pop
push
pop
adc
sub
(bad)
stos
lods
out
pop
popa
jne
cmp
xlat
xchg
and
jno
jnp
inc
cmps
inc
in
in
mov
pop
pop
jg
(bad)
fst
mov
sub
adc
(bad)
and
add
retf
addr16
es
sub
push
adc
xor
and
or
mov
movs
sub
xlat
inc
jmp
sbb
or
adc
pushf
inc
shl
xchg
and
push
das
push
jb
cwde
mov
scas
sar
fisub
in
sbb
in
mov
sub
rol
push
les
jbe
adc
adc
jecxz
lods
cmp
push
in
or
jno
fistp
(bad)
in
arpl
cmps
cmp
test
pop
in
sub
inc
pushf
test
dec
ja
gs
ss
jnp
int3
pusha
mov
mov
imul
pop
sbb
push
and
aad
enter
sbb
or
aas
xor
shl
jge
cmp
nop
or
movs
outs
sbb
mov
push
push
fcom
pop
inc
out
or
mov
outs
fisttp
push
hlt
adc
cmps
pop
xor
or
mov
dec
mov
int3
mov
and
inc
addr16
dec
mov
cmp
not
pop
jg
imul
or
lods
xchg
sti
mov
add
daa
xor
dec
adc
add
enter
xchg
jno
mov
popa
fistp
scas
add
push
cmps
fsubr
mov
pop
and
adc
in
sub
fstp
xlat
mov
int
cmp
test
xor
cmp
outs
je
mov
mov
add
cmp
fwait
ds
cmp
adc
int
sbb
or
cld
fldenv
test
cmps
jl
shr
inc
inc
cmps
clc
xchg
lods
sbb
or
jbe
lock
or
repz
addr16
jp
int
nop
or
cmp
jb
mov
sub
in
inc
int3
xlat
mov
pop
fcom
test
icebp
shr
mov
(bad)
cmps
sbb
jecxz
fmul
push
cmc
mov
cmp
mov
inc
arpl
mov
movs
iret
push
scas
inc
rcl
rcl
xor
int
std
push
repz
cmp
pop
mov
lahf
sub
pop
div
xchg
punpcklwd
xchg
cmp
cmp
dec
xchg
and
inc
mov
enter
mov
mov
mov
fiadd
jmp
call
xor
movs
stc
push
jl
dec
enter
xchg
ss
sahf
sbb
(bad)
dec
or
das
fwait
nop
rcl
mov
stos
mov
inc
sub
jae
clc
pushf
aam
aam
rcr
cmp
stos
js
pop
rcl
adc
sbb
sti
inc
push
xor
shr
mov
mov
js
out
push
jno
xchg
fadd
stos
pop
push
sub
pop
ficomp
cmp
iret
xchg
inc
push
jo
cwde
popf
dec
sahf
lock
js
inc
setb
enter
mov
int
lods
popa
adc
imul
pop
add
inc
in
popf
xor
or
sbb
in
sbb
cmps
and
daa
(bad)
cmp
push
cwde
xchg
stc
in
leave
hlt
fstp
loope
add
in
shl
or
js
or
out
jno
inc
push
test
mov
pop
out
das
or
mov
in
je
das
push
scas
mov
lods
jmp
or
daa
stc
je
cmp
or
jae
mov
or
lea
add
jl
in
test
das
test
dec
push
pop
add
sub
mov
sahf
adc
test
jmp
outs
in
mov
or
jge
or
or
mov
into
xor
xor
cdq
fs
popf
retf
loop
sub
push
aam
jl
imul
sbb
add
sbb
xchg
bound
popa
mov
mov
jecxz
cmp
(bad)
jmp
test
sub
dec
sub
ins
daa
sub
lods
bound
fdivr
out
cmps
pusha
ror
push
mov
adc
adc
push
mov
daa
(bad)
and
xor
xor
pop
push
aam
movs
dec
or
xchg
fwait
cmp
dec
push
int
lods
fiadd
stos
or
sub
addr16
cli
lahf
fwait
inc
pop
xor
stos
cmp
add
ror
lahf
retf
clc
iret
gs
sbb
push
pop
add
push
pushf
adc
mov
inc
xchg
(bad)
les
cwde
inc
and
xor
xchg
and
je
out
xor
stos
inc
ins
lea
push
loopne
clc
out
mov
jl
xrelease
les
loop
sbb
repnz
push
or
clc
(bad)
or
mov
gs
pop
ds
rsqrtps
xchg
adc
cli
cmp
adc
fdivr
clc
repz
dec
inc
mov
ret
cdq
call
aad
cmp
and
and
xor
jp
addr16
mov
sbb
rcl
out
pop
aaa
pop
in
and
js
sbb
clc
inc
sub
adc
xchg
int
cmp
cmps
adc
xor
inc
(bad)
xor
push
push
or
pop
imul
cli
shl
aam
xchg
mov
push
xchg
and
cmc
inc
outs
test
cs
dec
dec
sbb
sbb
enter
mov
jmp
cwde
inc
add
shl
call
popa
pop
xor
vmovsd
adc
scas
bnd
cmp
data16
rcr
or
scas
or
xor
ins
int
sar
and
push
sub
sbb
inc
sbb
out
add
sbb
and
mov
fimul
dec
xchg
cmp
inc
punpckhbw
or
stos
cmps
loopne
xchg
pop
sahf
ret
pop
mov
xchg
sbb
cmp
aam
mov
or
outs
cmp
fdivr
cs
data16
sbb
stos
sahf
fstp
cmps
or
and
clc
neg
fld
xchg
jne
push
fild
mov
aad
jmp
lock
mul
fsubrp
js
add
loopne
adc
rcr
gs
popa
repz
sbb
repnz
cs
call
lds
shl
lods
(bad)
ins
sub
sub
push
xor
jae
cmps
push
enter
sbb
aam
ror
pop
in
clc
jecxz
cdq
lahf
cli
push
xchg
sub
mov
adc
dec
sahf
mov
out
push
cmp
sub
mov
push
adc
push
lods
iret
xor
inc
into
xor
mov
aaa
(bad)
(bad)
mov
fistp
jg
je
push
mov
xchg
(bad)
dec
leave
mov
shl
pop
and
int
xchg
retf
push
jmp
xchg
lds
pop
sub
dec
and
pop
(bad)
xchg
out
jecxz
push
scas
es
ins
data16
mov
mov
enter
out
jp
pop
jp
and
jl
imul
cmps
outs
cmp
jg
jb
sbb
lds
test
sub
in
repnz
adc
xor
add
pop
and
movs
sti
xor
into
in
add
loope
sub
dec
xor
rcr
dec
push
mov
push
add
in
enter
xchg
inc
adc
pop
lahf
cmpxchg
push
fld
push
sbb
iret
dec
and
call
mov
in
scas
dec
xchg
cwde
add
add
jnp
mov
daa
and
loopne
add
jmp
ja
cli
test
je
jle
jp
aam
data16
mov
mov
jge
mov
psubd
mov
lods
xor
mov
jmp
outs
stc
sbb
push
in
and
shl
repnz
xchg
shr
mov
inc
dec
mov
(bad)
js
mov
jecxz
jmp
imul
adc
lods
adc
adc
mov
adc
test
pop
push
cmp
cmps
test
add
repz
xchg
loope
fmul
ds
popf
or
sub
xchg
jns
repz
fidiv
stos
rcr
cmp
cdq
pop
mov
addr16
cmp
inc
inc
test
or
mov
dec
mov
rcr
xchg
stc
xchg
sub
push
je
daa
(bad)
pusha
repnz
lods
aaa
xchg
jnp
mov
add
mov
movs
mov
or
cmp
inc
mov
push
test
hlt
cli
xchg
retf
adc
cmp
ins
(bad)
mov
jle
fmul
test
jle
mov
(bad)
fs
cs
stos
push
xor
and
(bad)
xor
pop
ror
mov
dec
push
aam
mov
clc
and
jne
xlat
iret
xor
arpl
sbb
shl
in
(bad)
ror
popa
add
xchg
lock
dec
push
ins
push
jge
gs
push
pop
ja
jno
mov
pop
(bad)
int
mov
scas
add
cli
pop
in
pop
stc
rcl
clc
xchg
and
call
mov
mov
dec
call
cli
fild
in
adc
mov
pop
and
fiadd
push
add
mov
fwait
mov
call
dec
jmp
sbb
mov
mov
mov
pop
mov
push
or
push
adc
jnp
mov
jb
shl
shl
sahf
mov
jo
imul
jl
mov
adc
fsubr
cmp
scas
add
mov
xor
les
xchg
cmc
jns
inc
cmp
loop
inc
(bad)
dec
mov
ret
stos
sbb
dec
xchg
push
xlat
add
mov
nop
xor
retf
ret
adc
sub
scas
add
add
add
jecxz
sti
sar
push
jne
lahf
jmp
xchg
imul
mov
in
shl
aad
cdq
cmps
repnz
push
gs
lods
and
(bad)
lods
nop
hlt
cdq
std
xchg
mov
enter
sbb
or
popa
jno
inc
mov
or
in
add
hlt
cmp
and
sub
push
cmp
scas
(bad)
xchg
push
ret
repz
pop
imul
dec
jmp
cmc
cmp
out
cmp
pop
retf
lods
xchg
inc
xlat
mov
les
sub
xchg
movs
mov
mov
xchg
scas
mov
cmp
push
sbb
mov
out
xchg
bswap
inc
sbb
aas
shl
iret
movs
mov
mov
mov
cmps
loopne
int
ins
xchg
cmp
xchg
test
xor
xchg
adc
mov
xchg
push
xchg
push
popf
cmp
mov
in
test
xchg
stos
adc
push
pop
(bad)
mov
out
stos
inc
std
push
dec
xchg
add
xor
sub
pusha
xchg
push
rcl
sahf
mov
dec
mov
icebp
test
retf
push
repz
cmps
stc
(bad)
mov
dec
jl
imul
hlt
pop
(bad)
jl
sbb
bound
je
and
into
inc
das
adc
cmp
sar
xchg
push
and
in
mov
xchg
in
sbb
xor
adc
add
es
lea
xchg
fs
gs
nop
sbb
mov
push
push
stos
or
cdq
inc
int
pusha
pop
stos
fwait
stos
ret
mov
scas
je
jecxz
scas
or
call
push
ret
rol
stos
(bad)
in
mov
daa
scas
repz
call
mov
sti
arpl
mov
pushf
or
cmp
call
inc
inc
mov
jl
xor
cmp
stos
inc
cdq
fwait
shl
or
sub
mov
icebp
or
pop
shld
inc
xchg
xchg
sbb
fist
or
popa
cld
fisub
add
popf
imul
adc
cmp
cmp
cmp
sbb
pop
(bad)
ds
fnstsw
int
xor
and
mov
mov
xchg
mov
fstp
addr16
xor
xor
cs
xor
jmp
xchg
or
stos
rsqrtps
and
inc
or
ss
ss
call
adc
aad
out
stos
dec
loopne
(bad)
pop
gs
ins
jns
fnstcw
(bad)
stc
or
clc
mov
pop
ins
jae
ficomp
sub
repnz
adc
mov
mov
pusha
test
ins
jg
idiv
or
out
cdq
dec
push
dec
sbb
ja
(bad)
or
jns
xchg
in
or
sbb
sbb
mov
and
mov
add
mov
sub
test
and
xor
xchg
mov
push
je
test
sub
xor
inc
and
add
mov
dec
jmp
dec
mov
cli
add
jg
push
push
out
test
pop
sahf
jns
and
push
arpl
hlt
xchg
inc
sbb
outs
inc
rcr
cmp
jb
xor
add
push
or
mov
out
push
int3
dec
rcr
outs
mov
pop
or
push
push
das
sub
inc
add
xchg
cmp
sub
stc
mov
cmp
lods
jmp
shr
dec
mov
pusha
mov
movs
add
outs
(bad)
pop
sbb
scas
sub
ret
(bad)
je
inc
dec
ins
jl
inc
sti
dec
cdq
in
pop
js
cmp
movs
jg
pushf
xlat
xchg
lods
adc
sbb
(bad)
mov
cmps
jmp
out
dec
pushf
movs
inc
pusha
fnsave
ss
dec
sbb
mov
adc
add
sub
or
push
dec
movs
cli
ja
int
gs
repnz
into
sbb
aas
int3
pushf
push
nop
push
pop
xlat
mov
or
inc
add
shl
sbb
jmp
mov
fxch
and
shl
mov
mov
jmp
out
enter
adc
out
out
mov
push
imul
pop
in
jg
cmp
out
dec
add
push
push
or
hlt
sti
or
adc
or
jecxz
push
fistp
pop
cmp
sub
jl
jl
loopne
push
xchg
sub
or
loop
mul
dec
xor
int
rcl
gs
cmp
jg
repnz
movs
push
cmp
jge
ds
sub
jecxz
out
adc
test
hlt
loop
mov
cmps
mov
mov
out
adc
cmp
mov
pop
mov
or
shl
lahf
mov
xor
ins
out
mov
jb
xor
adc
out
jne
mov
push
pop
sbb
int3
das
(bad)
out
push
or
push
mov
scas
fld
(bad)
mov
and
popaw
or
sti
call
jle
div
lock
mov
mov
popf
data16
clc
xor
in
nop
push
ins
pop
fs
push
pop
dec
adc
popa
nop
pop
cmp
jle
cmp
out
cmp
sub
cmp
or
addr16
or
sbb
sbb
add
push
add
(bad)
jle
out
or
test
test
xchg
ja
mov
inc
push
aaa
call
dec
outs
sub
push
pop
mov
dec
mov
les
jecxz
mov
mov
daa
add
hlt
xchg
push
pop
pop
mov
sbb
xchg
repz
adc
sbb
mov
retf
add
push
(bad)
jmp
in
idiv
lods
xor
mov
jg
xor
jns
mov
cmps
push
arpl
ss
popf
neg
mov
mov
xchg
icebp
(bad)
fsubr
retf
jge
cdq
xor
sbb
sub
xor
or
mov
ret
xchg
mov
jo
mov
jp
fstp
sub
mov
inc
add
xchg
pop
xchg
dec
(bad)
lds
adc
mov
sbb
icebp
and
lahf
jge
ror
sbb
push
stc
cli
loopne
das
dec
ret
sahf
call
adc
xor
in
fadd
pop
gs
mov
and
and
stc
jmp
inc
int3
lahf
jae
neg
cs
icebp
mov
out
ss
pusha
xchg
(bad)
loope
fisub
mov
cwde
adc
xlat
stos
adc
or
inc
movs
ret
adc
cmp
jl
inc
stos
mov
pop
popf
push
bound
sti
xor
imul
out
pop
out
mov
popf
mov
xchg
pop
pop
shl
add
enter
(bad)
in
aad
add
cmps
mov
shl
iret
dec
mov
daa
or
mov
mov
inc
and
mov
pop
sbb
sub
and
cmp
movs
xchg
leave
(bad)
cmp
xchg
aaa
imul
cli
pop
mov
inc
retf
push
loop
push
push
test
and
push
sbb
bnd
js
fs
adc
jle
xor
div
adc
out
cli
inc
cdq
mov
pop
or
mov
data16
adc
sbb
push
mov
in
scas
sbb
add
fmul
(bad)
sbb
xchg
not
in
std
mov
mov
push
mov
test
cmps
lods
mov
push
pop
add
sti
mov
pop
cdq
in
push
ret
pop
jmp
mov
fnstenv
cdq
xchg
test
or
aad
sbb
sbb
dec
jl
mov
data16
sbb
adc
mov
fcom
jl
mov
sub
(bad)
and
loope
mov
ins
imul
std
xor
jae
fisubr
and
lea
loopne
ins
out
aam
out
or
mov
dec
stc
jl
icebp
or
sbb
mov
out
mov
sar
and
sub
out
pop
(bad)
pop
pop
mov
cmp
shl
and
xor
and
stos
lock
inc
and
mov
jge
ror
jmp
mov
(bad)
push
sar
sahf
es
out
out
cmc
btr
xchg
xchg
jae
inc
adc
cmp
adc
rol
add
lock
test
cwde
ror
inc
cmps
ins
fadd
sub
push
frstor
and
jo
int
ja
pop
dec
shl
sti
pop
sahf
test
iret
pop
push
aaa
test
xor
cmp
xor
mov
xor
pop
add
out
test
pop
sub
jp
jno
add
scas
and
pushf
xchg
fst
dec
xchg
enter
dec
int3
push
sbb
jmp
pop
push
xor
mov
xor
push
xchg
cmc
and
jl
stc
(bad)
repnz
add
data16
dec
sub
jae
clc
cwde
xor
arpl
xor
jns
adc
pop
pop
ins
leave
mov
sub
stos
adc
xchg
or
scas
xor
jmp
popa
(bad)
cld
push
jne
adc
dec
pop
jb
dec
shl
mov
test
sub
js
rcl
mov
in
jl
jbe
out
sub
dec
and
fnstcw
adc
(bad)
leave
push
mov
cmp
pop
jmp
test
xor
stos
add
mov
pop
imul
daa
dec
lock
mov
nop
mov
lods
es
scas
fwait
or
lahf
or
cmp
jmp
inc
test
leave
test
push
data16
in
retf
jg
cmps
xor
outs
test
dec
jo
cmp
sub
mov
mov
sub
pop
ins
daa
gs
adc
ja
stos
retf
ss
sar
push
adc
mov
jmp
cmp
loopne
add
mov
add
mov
mov
sub
fbstp
or
cmp
mul
add
stos
xor
fidivr
popf
js
jno
adc
repnz
pop
pop
mov
loop
jmp
xchg
pop
xchg
outs
das
(bad)
add
cmp
dec
inc
dec
sahf
into
xchg
ret
xor
arpl
mov
es
je
add
iret
outs
jmp
jae
popa
imul
imul
adc
push
aam
dec
in
imul
xchg
push
in
or
fimul
push
xor
ret
out
cmp
call
push
pop
fs
inc
sub
fcmovnu
jl
adc
and
push
adc
push
mov
imul
pop
jae
dec
fdiv
lahf
push
pop
stos
(bad)
mov
pop
pop
mov
ins
sub
in
addr16
stos
adc
cli
sub
pop
stos
sahf
mov
fucomi
sub
leave
nop
stc
sbb
and
mov
mov
mov
imul
loopne
inc
mov
jo
mov
mov
scas
mov
int3
pop
cmps
add
call
mov
jno
dec
pop
retf
pop
pop
dec
fidiv
(bad)
or
jno
(bad)
sbb
nop
xor
sbb
inc
and
repnz
xchg
mov
or
jge
in
cwde
and
repz
pop
or
bound
sbb
mov
aad
pop
adc
xchg
imul
lea
pop
and
mov
jae
jge
push
dec
stos
or
repz
aam
or
ins
inc
cdq
add
lea
sbb
mov
addr16
fld
add
xchg
sbb
push
retf
movs
mov
movs
test
std
pop
outs
in
addr16
pop
les
cmp
push
into
push
sbb
je
xor
jmp
pop
pushf
mov
inc
dec
pop
psllw
jge
xchg
jle
bound
push
mov
cmc
es
imul
cmp
mov
daa
sub
jmp
mov
idiv
mov
out
dec
cs
xchg
sbb
dec
icebp
es
jl
mov
sub
add
aad
inc
ins
or
xchg
xor
sar
xchg
jno
sbb
pusha
stos
out
xlat
ja
push
retf
mov
call
in
cs
aaa
adc
inc
inc
shl
dec
addr16
lds
shl
mov
push
pop
add
cmc
sbb
call
jge
sbb
xlat
mov
add
sub
aam
call
cmp
ret
lahf
outs
cs
retf
cwde
sti
xchg
cmp
xor
mov
dec
cli
pop
sbb
mov
mov
ret
or
cdq
xchg
shl
push
or
xchg
(bad)
outs
gs
push
aad
pop
ss
(bad)
sbb
fsubr
fnstsw
in
push
aad
or
dec
in
cmps
outs
pop
std
cmps
scas
and
test
inc
sub
int3
adc
cld
cmp
push
add
les
sbb
int
pop
or
mov
adc
inc
cli
and
sar
pusha
shr
sbb
sub
push
cmp
loop
xchg
fs
mov
aad
jbe
mov
dec
out
sahf
xchg
and
fistp
ds
sub
icebp
mov
imul
xor
push
mov
inc
fild
js
cdq
out
jl
cmps
push
movs
int3
mov
mov
pop
nop
retf
mov
jae
sub
add
mov
push
push
fdiv
mov
imul
repnz
retf
out
add
rcl
dec
xor
mov
popa
lahf
ja
inc
jbe
lds
pop
stc
inc
add
push
fbstp
outs
ficomp
ror
hlt
fldlg2
mov
ja
inc
dec
cmp
mov
imul
pop
sbb
stos
mov
or
test
je
movs
cmp
dec
jmp
mov
int3
nop
(bad)
fiadd
push
sub
ja
inc
(bad)
das
fwait
mov
std
and
dec
or
add
icebp
movs
cmp
lahf
mov
inc
adc
mov
lods
ja
dec
sti
mov
push
mov
and
xor
pop
mov
xchg
aam
xor
std
daa
xchg
mov
mov
es
mov
fmul
loope
dec
nop
mov
mov
shl
cld
mov
add
adc
ficom
imul
cmovle
test
inc
or
ror
arpl
mov
jno
mov
mov
cdq
call
cld
dec
adc
sub
mov
mov
in
adc
addr16
retf
mov
inc
cmp
shl
ror
cmp
out
lea
out
stos
adc
in
outs
in
fldenv
cli
loop
sbb
cmp
jns
inc
lods
dec
push
(bad)
push
loope
arpl
and
mov
push
dec
xor
mov
jmp
pop
rcl
das
(bad)
jmp
in
push
scas
cld
inc
mov
ins
test
in
or
mov
in
stos
outs
fnstsw
mov
cmp
out
in
loopne
mov
xor
and
movs
sbb
in
dec
js
xlat
neg
repnz
pop
push
leave
fwait
inc
call
fwait
push
imul
dec
imul
xchg
pushf
bnd
dec
lock
fistp
in
mov
outs
imul
enter
xor
cmps
stc
daa
adc
pop
js
mov
ins
sub
mov
xchg
cmc
(bad)
sbb
out
jecxz
mov
pop
xor
mov
sub
xchg
cmp
out
cmp
pop
dec
push
pop
sbb
sbb
in
push
imul
pushf
mov
(bad)
shl
inc
add
ja
inc
inc
stos
fdiv
pop
jecxz
and
add
repnz
dec
idiv
pop
in
push
cmps
sbb
mov
add
and
aad
in
push
mov
adc
inc
add
clc
cdq
mov
mov
xchg
sbb
xor
in
mov
adc
cld
in
mov
aas
push
jg
leave
adc
pop
not
or
xchg
mov
arpl
out
jne
fld
iret
sub
cmp
or
loope
sub
ret
push
inc
jo
rol
repz
pusha
pop
nop
enter
or
pop
add
jae
jp
xor
scas
xor
dec
sbb
std
popa
ret
std
ja
dec
push
call
hlt
xor
inc
sbb
jbe
push
jle
stos
add
dec
movs
fnstsw
loope
imul
fwait
sbb
xchg
add
mov
add
pop
mov
neg
call
xchg
push
xchg
ins
retf
sub
cmp
dec
mov
cmp
xlat
sbb
push
je
dec
or
inc
pusha
xor
and
mov
fsubr
(bad)
dec
adc
sbb
nop
jne
ror
mov
jne
and
push
in
sbb
dec
(bad)
fist
fisubr
sub
fidiv
nop
ffreep
in
sti
and
jmp
fwait
push
ins
test
cmp
iret
call
xchg
addr16
fldenv
dec
cli
in
cmp
inc
xlat
jb
neg
repz
dec
cmp
push
dec
shr
pusha
rcl
test
sub
hlt
mov
jne
push
jno
dec
pop
aam
sbb
cmps
inc
in
cmp
(bad)
fbstp
in
(bad)
push
push
call
test
xor
and
and
pop
clc
xchg
aas
or
dec
movs
fsubr
clc
jo
cmp
ret
sbb
lea
xchg
call
cld
ret
sahf
lods
xor
cmpps
and
es
xchg
repz
sbb
push
xchg
or
mov
add
loop
movs
mov
int
gs
cdq
lods
in
push
push
jmp
call
jg
idiv
arpl
scas
aaa
call
and
jne
lea
sub
cld
shr
(bad)
mov
(bad)
mov
fild
xor
xchg
and
movs
lods
mov
jns
push
xlat
leave
xor
clc
push
lahf
xlat
scas
js
in
movs
and
pop
(bad)
cmc
repnz
addr16
dec
data16
sub
loopne
aad
rcl
jo
clc
and
xchg
mov
ret
mov
pop
cmp
fmul
std
cmp
and
push
mov
cs
jmp
in
dec
cmp
cmps
and
inc
movs
sub
cmc
xor
ja
in
les
cmp
jmp
aas
mov
cmc
pop
xchg
les
dec
loope
aad
out
xchg
push
lahf
pop
dec
xor
out
out
xchg
les
ror
push
inc
adc
mov
dec
sub
jb
sub
mov
lds
stos
cli
mov
ret
xchg
movs
jo
cld
sbb
(bad)
push
aam
(bad)
stos
pop
push
xor
hlt
or
ror
mov
mov
jns
mov
les
sbb
pop
mov
ss
in
push
cmps
inc
pshufw
fistp
fisubr
imul
rcr
push
pop
nop
push
push
sbb
loop
fdiv
push
jmp
mov
push
sub
movs
fisub
into
arpl
retf
add
mov
movs
add
shl
and
or
inc
test
lock
or
xor
out
leave
and
test
lds
(bad)
loop
test
or
xchg
pusha
add
pop
cmp
jmp
leave
imul
pop
xor
cdq
cmps
leave
dec
and
ret
ror
in
mov
pusha
repnz
push
mov
iret
xor
ja
loopne
mov
dec
stos
fwait
xlat
lds
jl
cmps
jle
dec
pop
mov
fisubr
lods
xchg
fwait
mov
mov
inc
sub
mov
jb
lods
sbb
in
call
iret
mov
shl
add
inc
fwait
outs
test
pop
fcmovnb
pop
out
inc
xchg
mov
pop
push
cs
and
ror
adc
push
(bad)
(bad)
jg
push
aaa
jb
ret
and
sbb
aas
or
stos
test
push
mov
mov
push
push
jnp
jmp
adc
mov
daa
das
test
jne
fdivr
push
pop
push
pop
stos
xchg
lods
sbb
dec
adc
int
push
jb
add
inc
pop
and
xor
lds
sbb
imul
ss
sbb
aas
lea
add
inc
js
jp
cli
sbb
lahf
dec
add
int3
aas
pop
sub
cdq
pop
retf
mov
dec
sti
mov
xchg
sub
out
nop
imul
inc
and
dec
in
cmp
mov
stos
push
sub
lock
dec
jl
mov
inc
cmp
push
push
data16
out
pop
and
or
pop
test
push
xor
sti
push
pop
push
clc
ret
pop
jbe
popf
ss
xchg
imul
xchg
daa
movs
js
xchg
loope
icebp
xchg
(bad)
frstpm(287
xor
xor
(bad)
lock
and
cwde
mov
or
or
push
daa
pop
push
jmp
inc
fsubr
shl
fld
jmp
cld
and
jne
or
mov
shr
mov
cmp
sub
out
int3
push
cmp
clc
sub
and
test
rcl
lods
xchg
pop
push
push
fiadd
mov
fcomip
pop
daa
jmp
lock
mov
das
and
ja
or
and
inc
xor
add
mov
jne
shr
pop
mov
stos
push
minps
jmp
and
imul
test
mov
push
inc
and
adc
dec
inc
mov
mov
jnp
sub
popf
push
fwait
or
push
fmulp
cmps
mov
loope
sbb
adc
popf
imul
jmp
in
xlat
(bad)
ror
adc
jge
out
lods
adc
push
pop
scas
adc
lds
aaa
xchg
sbb
adc
or
les
das
nop
or
sub
inc
xor
scas
(bad)
int3
or
xchg
pop
in
add
mov
in
stos
xchg
test
sar
pushf
xor
sahf
mov
int3
mov
mov
jb
inc
mov
iret
int3
dec
add
mov
(bad)
dec
ficomp
xor
push
popf
and
and
sub
sti
call
fldcw
int
enter
aaa
mov
and
retf
lods
arpl
mov
mov
add
jns
je
pop
jns
daa
mov
and
cmp
dec
mov
adc
fsubr
(bad)
mov
and
jle
fnstsw
mov
inc
mov
jmp
jmp
sbb
lahf
sub
inc
jbe
shl
test
(bad)
mov
cmc
cmp
adc
fcom
mov
xor
daa
out
mov
test
call
pop
les
inc
cmp
sbb
pop
addr16
mov
sub
push
test
push
cmps
sbb
fidivr
or
aam
ret
or
test
aad
or
jmp
inc
mov
stc
punpckhdq
mov
ret
mov
jo
(bad)
jmp
mov
rdpmc
jl
mov
call
mov
adc
int
js
icebp
dec
mov
xor
sbb
cmp
(bad)
scas
leave
cld
push
xchg
aam
js
shl
xor
pop
cmp
xchg
xchg
icebp
adc
sbb
cmp
adc
inc
pop
sti
rol
jg
pop
push
sub
pop
xchg
sbb
cwde
icebp
fild
add
inc
lods
adc
std
cmp
cmp
xchg
movs
loope
xchg
out
cs
stc
daa
fcmovbe
sbb
mov
and
fwait
jle
repnz
push
repz
dec
mov
inc
jbe
es
iret
ja
add
fld
dec
add
and
enter
pusha
mov
xchg
stos
mov
sub
jmp
cmps
adc
bound
or
fucom
outs
jle
xor
inc
inc
into
les
lds
push
or
cld
mov
inc
loope
cs
test
test
adc
fld
in
cmp
and
mov
jge
inc
mov
jbe
mov
cmp
aad
xor
and
xchg
mov
jb
mov
test
loop
push
or
dec
jno
dec
in
inc
mov
or
call
or
or
data16
and
fnstcw
xor
daa
minps
inc
or
rcr
std
test
dec
lods
add
jle
ss
aas
lea
push
sahf
or
lds
movs
push
stos
push
int3
fmul
jbe
add
imul
sub
loopne
ret
(bad)
jl
jbe
xchg
pusha
(bad)
pop
jge
adc
nop
imul
movs
imul
out
fucomip
xor
xor
outs
into
or
sub
mov
and
dec
pop
loopne
fist
stos
sbb
mov
test
je
mov
outs
cmp
es
dec
ds
or
scas
jecxz
rcr
cdq
iret
mov
dec
jl
mov
iret
jge
mov
jle
fld
sub
outs
push
imul
in
jl
es
sub
pavgb
dec
mov
xchg
add
outs
xchg
dec
mov
sub
scas
jmp
jns
push
aaa
daa
cmp
es
add
mov
sar
fidivr
pop
bnd
fidiv
jl
scas
sbb
cmc
or
or
addr16
loop
lods
mov
pop
outs
shl
inc
jae
fadd
push
aad
lods
aam
inc
jmp
jmp
ins
mov
rol
xchg
cmp
loope
jmp
sbb
push
cld
ret
pop
das
sub
pop
rcr
xchg
out
adc
das
add
aam
loopne
mov
jno
fsub
mov
pushf
adc
fisttp
test
cmp
jno
jne
loope
mov
mov
cmp
shl
fwait
jmp
pusha
outs
in
and
cdq
not
fs
fs
adc
fisubr
arpl
int3
retf
and
fnstcw
sub
fwait
scas
cmc
repnz
pop
adc
and
mov
fsub
shl
sti
(bad)
fwait
arpl
mov
xlat
mov
sub
shl
test
ins
inc
adc
loopne
mov
sub
nop
lods
out
fs
aad
pushf
mov
sbb
sub
sbb
jb
sahf
in
hlt
cmp
mov
scas
inc
pop
mov
xchg
inc
repnz
cdq
or
dec
xchg
mov
xor
(bad)
in
jmp
xor
add
fisttp
popa
mov
icebp
jo
fisttp
mov
call
xchg
cmps
cld
out
push
lods
dec
pop
stc
xor
call
pop
fidivr
push
rcl
and
push
xor
aaa
push
jp
call
push
cmps
jns
data16
out
add
xchg
fdivr
mov
rep
xchg
adc
dec
hlt
cmps
out
fcmovnu
inc
sub
mov
jbe
int
(bad)
ja
and
icebp
or
add
out
movs
adc
aam
cmp
adc
jno
and
in
daa
rol
sub
into
xchg
out
inc
leave
mov
(bad)
aaa
dec
in
retf
scas
or
xchg
cs
push
neg
pop
jle
js
rcr
mov
and
inc
pop
(bad)
shl
jmp
mov
mov
ins
pop
mov
or
mov
jg
sar
sti
movs
jmp
dec
xlat
movs
and
call
jecxz
mov
movs
test
daa
fld
and
out
les
bound
mov
jecxz
leave
jne
push
loope
mov
test
shr
dec
push
sub
inc
test
sub
into
add
or
es
xor
mov
iret
pusha
or
adc
sbb
push
pop
pop
mov
mov
mov
or
cmp
xchg
cmp
rol
xor
adc
cmp
shr
neg
cmp
cmp
std
push
sub
retf
mov
imul
add
fcom
mov
mov
std
mov
outs
in
add
cld
jge
imul
out
mov
jns
sbb
stos
jno
retf
stos
mov
(bad)
cmp
test
mov
outs
cs
adc
popf
mov
js
xchg
out
stos
dec
push
mov
push
mov
push
dec
xor
pop
dec
xor
lods
mov
out
xor
pushf
repz
xor
aaa
lds
iret
ins
pop
xor
xchg
sbb
mov
push
jl
out
in
lea
push
mov
dec
out
pop
js
sahf
sub
xchg
ss
es
loope
pop
ret
enter
dec
mov
jb
jecxz
int3
add
ror
and
rcr
mov
ins
repnz
add
fmul
aaa
xchg
dec
(bad)
dec
xchg
mov
cwde
mov
jge
add
and
dec
sbb
fimul
test
jo
out
lods
imul
cwde
inc
leave
xor
pop
push
inc
call
repnz
lock
xchg
(bad)
push
(bad)
sbb
push
lock
popf
addr16
in
fs
pop
push
addr16
push
outs
push
sbb
xor
push
mov
sbb
loopne
jne
mov
test
dec
or
aam
test
inc
call
fist
xchg
fwait
fwait
enter
xor
push
push
sbb
mov
loopne
sbb
push
adc
sub
pop
pop
mov
icebp
mov
pop
fld
adc
mov
xor
push
add
iret
cwde
movs
cmp
repnz
mov
sub
cmps
add
pusha
add
add
cmp
sub
cmps
pmaddwd
push
inc
push
(bad)
stc
stc
push
rol
pop
jb
push
or
sub
xchg
jb
(bad)
fstp
les
or
mov
ret
mov
and
dec
sar
lock
mov
mov
jno
mov
or
ror
sar
sub
sub
retf
imul
sub
sbb
scas
ss
mov
or
out
bound
sbb
ret
xor
call
js
cmp
je
in
mov
jns
mov
inc
add
call
and
add
aas
mov
imul
shl
sahf
mov
rcl
mov
fist
hlt
xlat
mov
adc
sbb
push
ror
lds
mov
dec
cwde
jmp
add
ds
aaa
out
mov
lods
stc
test
jg
jmp
or
ss
stos
push
scas
movs
dec
repnz
stos
ins
adc
rol
nop
adc
call
addr16
jne
sub
xchg
call
inc
out
fmul
dec
push
mov
add
inc
leave
mov
mov
cmp
mov
push
cmps
stc
or
(bad)
sar
lahf
ficomp
or
push
(bad)
xchg
xor
dec
in
xor
jae
fs
jnp
lea
test
ins
push
dec
add
into
out
(bad)
call
sbb
adc
cs
test
jno
cmc
jge
add
clc
out
dec
cmp
imul
or
mov
jecxz
fwait
mov
mov
dec
or
mov
mov
into
or
mov
int3
sub
sub
cmp
xlat
mov
fs
mov
xor
xchg
call
and
fisttp
jbe
mov
push
push
cmc
out
int
(bad)
mov
inc
test
cwde
mov
jae
adc
rcr
mov
int
mov
mov
stos
mov
mov
xor
mov
pop
cmps
add
xchg
dec
xor
cld
call
imul
add
sub
popf
aas
mov
inc
xchg
std
jns
add
ficomp
pop
or
push
aas
aad
in
stos
pop
ins
mov
mov
pusha
add
cmp
ror
add
or
movs
cli
js
pop
les
xor
dec
lods
inc
mov
shl
and
inc
sar
test
(bad)
into
ja
mov
add
xchg
test
mov
fidiv
add
in
iret
bound
loop
aad
push
push
sub
mov
call
rcr
(bad)
cs
shl
mov
xchg
xchg
shl
push
sub
lods
mov
adc
mov
fadd
dec
jge
push
cmp
sub
dec
fimul
xchg
sbb
jae
or
inc
imul
or
ja
clc
(bad)
mov
(bad)
add
lahf
stc
pop
jle
pop
popf
loopne
and
pop
lahf
les
es
fnstsw
mov
stc
repz
outs
mov
push
retf
daa
inc
jb
dec
loopne
mov
push
cdq
lods
xor
retf
add
cmp
mov
push
das
call
xchg
jecxz
jnp
retf
jp
loop
test
lea
and
(bad)
mov
retf
je
mov
and
or
adc
out
cmc
cmp
push
inc
icebp
fcom
aad
fs
rep
iret
inc
outs
and
repnz
or
iret
and
pop
(bad)
cmp
fiadd
mov
adc
sbb
push
pop
inc
lods
xor
jno
fsub
ret
pop
gs
cmp
stos
gs
ficom
cmpps
xor
repz
inc
add
xor
cmps
stos
dec
mov
lds
leave
sbb
fadd
in
les
call
cmp
cmp
gs
sbb
jo
(bad)
mov
adc
je
push
out
and
ss
or
adc
inc
out
jle
xor
mov
push
sub
(bad)
or
rol
push
xchg
js
adc
fstp
aaa
ja
loopne
les
lods
xchg
xor
fbld
cmp
cmc
fdiv
mov
test
retf
jno
sbb
ficomp
jno
test
dec
test
push
mov
inc
mov
outs
dec
enter
(bad)
cmp
aad
mov
lea
repnz
fsub
cwde
shl
(bad)
inc
pop
out
repnz
push
dec
xchg
mov
mov
cdq
les
xor
and
add
leave
aad
sub
pop
ret
icebp
dec
sbb
mov
xchg
push
into
jl
stos
clc
sub
or
push
dec
mov
scas
add
addr16
int3
cmp
jecxz
mov
sbb
stc
adc
xor
popa
sub
jnp
pop
aaa
mov
retf
aad
or
push
xor
movs
xchg
push
jae
sub
cwd
clc
push
movs
dec
bound
push
ret
adc
jb
arpl
sub
xor
sar
call
aaa
sub
(bad)
jbe
call
pop
pop
lahf
jecxz
repnz
in
mov
mov
fild
xchg
fcom
enter
mov
sub
mov
scas
pop
lods
mov
xor
shl
pop
pop
jmp
lods
jmp
sub
push
mov
mov
jecxz
pop
dec
cdq
cmp
or
sar
adc
fcmovu
and
dec
mov
push
shl
mov
xor
mov
nop
pop
adc
ror
jge
scas
loop
mov
lahf
jnp
xchg
xor
jmp
lea
xchg
add
pop
push
scas
add
scas
clc
ss
xchg
test
push
inc
lock
loopne
cmp
sbb
push
mov
test
mov
xor
inc
xchg
cdq
pop
cmp
into
test
jmp
dec
dec
mov
and
inc
cli
sbb
push
and
push
xchg
xchg
pop
aad
pusha
xchg
cmc
in
clc
mov
xor
je
sbb
mov
or
mov
mov
sub
out
pusha
outs
push
jnp
mov
lahf
test
cmp
sbb
shr
mov
in
jecxz
cmps
push
and
add
dec
xlat
aaa
arpl
cmp
cmp
adc
cmps
stos
inc
addr16
or
push
jbe
js
sub
test
push
xor
aad
dec
(bad)
mov
jg
adc
ins
push
cmc
fstp
sbb
fimul
jnp
iret
cmp
ins
adc
cmp
sti
xor
(bad)
cs
ret
stos
frstor
ficomp
sbb
cmp
cmp
cwde
cmc
xchg
(bad)
push
sbb
xchg
pusha
lock
pop
adc
popf
push
fsubrp
and
in
inc
mov
out
push
test
add
xchg
test
push
push
push
out
or
rcr
in
rcl
mov
movs
fsub
or
lahf
stc
add
gs
and
sub
loop
inc
imul
or
push
pop
aad
sbb
ss
push
jmp
cli
push
dec
ret
call
push
add
mov
and
mov
mov
cmp
(bad)
sub
nop
imul
mov
shl
jo
gs
push
sbb
test
and
outs
mov
repnz
in
push
sbb
inc
jnp
pop
sub
xor
stos
sahf
sbb
mov
push
sti
inc
mov
pop
leave
mov
call
add
js
nop
mov
in
test
mov
mov
push
enter
xchg
fidiv
xor
js
js
push
outs
push
mov
iret
xchg
clc
fidiv
ins
ss
fcmovbe
mov
mov
(bad)
out
jns
lods
or
rcl
xchg
sub
test
pop
or
inc
dec
sub
pop
js
std
popa
mov
xchg
mov
inc
int3
inc
inc
fcom
ds
loopne
and
retf
(bad)
stc
arpl
ins
scas
cld
add
pop
pop
jae
pop
enter
in
iret
inc
popa
mov
and
js
cmp
cwde
sbb
push
push
lea
(bad)
xchg
sub
retf
ret
in
(bad)
sti
dec
jne
xor
das
sub
xor
fpatan
and
adc
xchg
aam
pop
cmp
sbb
cmp
(bad)
lahf
and
into
mov
addr16
push
pushf
xchg
icebp
xchg
into
mov
push
int3
push
sub
push
sub
inc
xor
sysexit
cmc
lock
push
nop
mov
lahf
cmp
rol
rcr
xchg
(bad)
fcomp
cmc
mov
jmp
aas
retf
mov
inc
movs
sbb
aad
scas
cmc
add
out
in
or
mov
ins
dec
jg
je
les
call
test
mov
sub
sbb
or
repnz
mov
cmp
aaa
cmps
jb
not
jge
popa
sahf
push
push
js
into
and
pop
pop
in
xchg
push
jno
shl
scas
xchg
push
pop
xor
xchg
(bad)
repnz
cli
lods
cli
stos
fsubr
add
pop
repnz
xchg
repz
retf
mov
jecxz
test
movd
and
mov
fsubr
pop
push
aad
or
loope
lds
or
inc
scas
cmc
sbb
and
push
movs
sbb
or
mov
data16
sbb
movs
je
cmp
add
mov
(bad)
shr
arpl
dec
repz
pop
mov
repnz
ret
mov
mov
outs
xchg
add
jmp
xor
mov
adc
or
out
cmp
jp
sub
ins
mov
scas
dec
cmps
sub
mov
mov
xsha256
cmps
adc
aam
fild
and
or
scas
das
ja
push
loop
ret
cmp
add
in
test
cmovno
bound
mov
mov
jg
dec
jg
adc
dec
int3
outs
and
call
xchg
sbb
shr
(bad)
or
fdivr
rcl
adc
ins
sub
jg
xchg
in
xor
cmp
xor
jne
and
push
xor
sub
cwde
cmc
mov
inc
lea
jl
(bad)
add
shl
mov
or
mov
or
imul
xchg
test
jecxz
fs
and
jmp
in
dec
push
sti
mov
dec
es
test
shr
mov
rcl
lds
cmps
or
jmp
test
push
fist
cmp
push
mov
xchg
aad
add
retf
iret
inc
mov
retf
xor
sub
dec
ds
std
push
mov
ror
mov
mov
mov
sub
xchg
dec
aad
add
fisub
inc
sbb
and
imul
xchg
(bad)
test
jle
mov
xchg
sub
and
cmp
fidivr
xor
sbb
cmp
or
sub
adc
jbe
push
test
shl
jg
daa
pop
icebp
add
add
retf
fcom
bound
jo
sub
jl
mov
loop
mov
(bad)
dec
ja
xchg
out
mov
xchg
pushf
(bad)
in
inc
gs
jne
fistp
je
jecxz
dec
idiv
adc
fsubr
sub
fwait
dec
pop
jno
lods
call
push
adc
leave
test
nop
fs
int3
mov
shr
pop
sahf
leave
sti
cmp
mov
in
inc
mov
xor
popf
sti
arpl
and
add
inc
repz
mov
aas
or
jo
jmp
or
push
pushf
mov
ror
push
pop
nop
mov
aad
aam
in
fnstcw
push
mov
or
xor
pop
iret
scas
fimul
lods
dec
repnz
fimul
ret
cdq
inc
pop
jae
lea
test
loope
nop
int
icebp
adc
push
iret
stos
and
mov
stos
stos
ror
mov
jb
es
cdq
(bad)
jl
popa
fwait
lods
pop
std
not
ins
adc
jl
push
cld
hlt
mov
mov
adc
push
ins
ds
mov
arpl
sbb
jb
pop
mov
je
mov
mov
popf
xchg
dec
mov
mov
jbe
into
push
call
das
mov
sbb
jmp
pop
jp
push
popf
pop
das
lods
repnz
fidiv
popf
sbb
mov
call
inc
cmp
jmp
and
jns
sub
cli
mov
mov
dec
jnp
sub
sbb
lock
ss
add
push
hlt
push
mov
(bad)
fsub
jbe
sbb
jecxz
mov
and
pop
and
mov
pop
sti
lock
test
jp
(bad)
inc
jp
or
pop
adc
shl
stc
cmc
popf
jge
or
sti
adc
out
cli
cmp
in
pop
popa
mov
retf
aaa
les
call
ds
mov
jno
movs
daa
jno
fiadd
and
cmp
push
jb
jp
mov
mov
scas
pop
push
fiadd
pushf
setg
inc
icebp
push
xchg
movs
inc
adc
mov
push
mov
fistp
not
jo
test
mov
inc
inc
xchg
lds
sub
xchg
rol
lahf
test
mov
xchg
mov
in
stc
pop
fild
push
imul
shl
sbb
pop
lahf
outs
movs
sar
sbb
aad
or
mov
std
(bad)
in
cmc
xchg
ins
push
dec
es
xor
inc
leave
cwde
cs
loopne
lea
in
inc
pop
dec
and
iret
js
mov
mov
jp
in
iret
out
gs
jg
mov
scas
clc
pop
aam
push
sub
or
cmp
or
popf
out
xchg
mov
push
xchg
mov
mov
retf
out
(bad)
(bad)
jae
push
sub
dec
leave
dec
mov
mov
call
jmp
ret
cld
cmp
(bad)
or
cmp
je
push
add
sbb
jns
movs
loop
mov
into
mov
(bad)
add
es
xor
outs
arpl
jecxz
mov
or
into
pop
ret
cmps
sub
mov
add
push
sbb
dec
cmp
lock
xor
(bad)
popa
lods
pop
pop
push
xchg
loope
jmp
add
(bad)
mov
sub
hlt
(bad)
imul
add
cmp
aas
fisubr
movntq
in
out
rcr
jno
retf
shr
or
cmps
inc
sub
leave
dec
into
aam
inc
xor
ins
pop
loop
mov
or
loope
int
neg
(bad)
dec
mov
xchg
xchg
jns
ins
mov
or
jecxz
sbb
cmp
xor
sbb
call
mov
sbb
lds
jbe
xchg
lea
jae
sbb
std
dec
inc
clc
dec
cmc
repz
aas
es
cdq
dec
outs
enter
iret
xchg
lods
xchg
mov
(bad)
mov
cmps
ja
inc
pop
xor
pop
pop
test
in
repz
jne
out
xchg
cmp
and
lods
mov
popa
out
jge
call
dec
and
jg
(bad)
out
and
pop
xchg
and
sbb
retf
out
clc
xchg
add
loop
push
out
out
mov
cld
mov
fistp
or
inc
and
or
or
inc
(bad)
dec
es
push
mov
stos
cmp
or
dec
pusha
popf
movs
lods
inc
xchg
mov
or
jbe
cmps
add
fst
ja
dec
rol
pushf
shr
stos
push
jmp
push
out
mov
mov
jge
pop
ficomp
in
std
xchg
(bad)
cli
out
dec
sbb
sbb
mov
xchg
stos
push
inc
enter
inc
popa
push
inc
ins
mov
dec
lock
pushf
cmps
int3
adc
jp
ret
jl
add
(bad)
lds
mov
ror
pop
imul
lea
ins
lahf
(bad)
addr16
sbb
jne
jp
add
add
fidivr
push
push
pop
adc
retf
jmp
pop
cdq
xchg
pop
aas
div
retf
inc
stos
fistp
into
ins
leave
test
push
cmp
outs
pop
mov
mov
(bad)
push
cli
dec
ins
mov
enter
(bad)
out
stos
call
les
stos
jmp
or
mov
jle
sub
xor
mov
les
adc
sar
sahf
enter
jno
sub
jno
stc
mov
int
daa
in
in
es
or
sub
jg
adc
les
popa
ja
dec
dec
test
sti
xchg
jb
jle
mov
in
call
aad
mov
mov
fld
mov
fnstsw
inc
ins
and
pop
sbb
das
sub
xchg
add
mov
jge
add
jbe
hlt
fidivr
sub
icebp
mov
jnp
data16
jge
push
mov
mov
push
mov
pop
jae
popa
imul
pop
pushf
leave
rcr
pushf
jmp
pop
lods
dec
jns
fld
mov
mov
add
dec
test
mov
fnstcw
mov
mov
lods
cdq
scas
adc
dec
adc
mov
ins
sbb
sub
add
je
imul
sub
jecxz
xchg
adc
jmp
and
cli
cmps
sub
or
call
xchg
sti
mov
cmp
xor
pop
das
sbb
cmps
dec
adc
lds
out
jb
push
jp
(bad)
adc
enter
inc
test
lods
push
dec
daa
mov
mov
mov
and
push
mov
movs
pmullw
adc
push
int3
push
movs
xor
and
ret
jno
cmp
dec
adc
xchg
adc
mov
cmp
fiadd
mov
out
adc
fs
jg
(bad)
inc
adc
xlat
test
ins
mov
and
mov
xor
inc
movs
or
cmp
fistp
clc
jae
push
inc
xchg
stos
cmps
sub
sub
pop
sbb
fbstp
pop
in
in
dec
jmp
aas
in
clc
dec
cmp
aaa
cmp
loope
movs
and
cld
inc
ds
xlat
leave
pop
aaa
sub
hlt
je
pop
ror
addr16
adc
mov
pushf
and
push
pop
dec
mov
mov
les
add
sub
pop
int3
inc
(bad)
jp
cli
cs
jle
dec
adc
(bad)
shl
(bad)
mov
bound
jo
sti
call
inc
ret
pop
int
pop
mov
push
in
or
inc
js
ja
js
push
jb
outs
cs
pusha
mov
adc
les
push
jae
es
jo
fsubr
xchg
lods
push
addr16
popa
js
pop
mov
cmp
inc
call
repnz
add
int3
sub
cmp
push
xor
jmp
stos
dec
ds
cld
call
adc
enter
adc
dec
mov
sbb
call
sub
lea
jg
fsubr
push
aaa
test
pop
add
adc
push
cmc
aas
sub
mov
sti
inc
nop
xchg
mov
jmp
iret
mov
pop
data16
loope
loope
xchg
pop
into
or
stos
mov
out
pusha
or
dec
cmp
sti
gs
cmps
es
add
inc
test
push
or
jo
pop
push
inc
or
inc
and
adc
xor
cld
or
cmp
mov
push
and
jmp
inc
int
dec
outs
mov
push
mov
adc
mov
add
pop
iret
or
mov
loopne
data16
shr
test
shr
test
stos
jp
cmp
adc
and
icebp
cmp
dec
push
ins
aad
jnp
retf
and
or
dec
fmul
mov
mov
retf
pop
lods
ja
mov
mov
mov
xor
retf
inc
mov
(bad)
xor
pop
shl
call
mov
pusha
fdiv
pop
push
xchg
fmul
xchg
mov
dec
adc
pop
in
dec
xchg
cmp
arpl
jmp
xchg
arpl
retf
int3
pop
mov
lock
and
test
ins
xchg
lahf
test
inc
cs
mov
xchg
jge
aad
mov
push
rol
sbb
push
stc
jl
cmp
jge
xchg
or
add
or
mov
call
pop
fnstsw
dec
ficomp
std
push
bound
cmps
push
ds
xor
cdq
into
popa
retf
scas
stos
jae
add
add
lods
out
int3
inc
(bad)
leave
mov
sub
inc
inc
jl
(bad)
shl
div
and
enter
clc
pop
frstor
fild
retf
fmul
fld
shl
inc
cli
shl
pop
out
das
xchg
sbb
xor
mov
popa
inc
pop
outs
xor
movs
pop
push
pop
rcr
das
cmps
bound
retf
mov
jno
cmp
ins
jg
mov
add
fimul
push
sub
popf
adc
pop
sbb
add
xchg
xchg
add
arpl
or
pop
imul
xchg
repnz
rol
sub
ret
aad
sbb
add
ds
mov
cwde
mov
stos
int
and
jb
push
or
pushf
jnp
and
cwde
sbb
popf
mov
sub
dec
jae
jecxz
int
mov
xchg
push
in
xor
addr16
sub
mov
out
xor
ret
inc
mov
pop
pop
sub
cld
or
push
or
sub
cmp
adc
sbb
fidivr
and
les
fidivr
out
imul
jmp
or
std
xchg
adc
pushf
aam
mov
ins
adc
xchg
vsqrtss
mov
daa
mov
mov
les
cld
cmps
stos
mov
in
ins
mov
icebp
cmp
adc
pop
mov
xchg
mov
pop
dec
cmp
jno
retf
ja
dec
inc
xchg
lods
shr
loopne
cmp
pop
xchg
xchg
xor
pop
pop
inc
ds
movs
mov
loop
mov
lea
and
add
js
push
rcr
jmp
add
mov
call
add
pop
(bad)
icebp
enter
adc
sub
stc
mov
cmp
dec
add
mov
mov
pop
fmul
ds
xchg
pusha
mov
pop
jmp
loopne
pop
mov
aad
shl
mov
iret
push
sub
or
stos
outs
in
xchg
nop
out
inc
into
arpl
push
outs
imul
nop
jnp
je
sub
xor
lods
(bad)
mov
repnz
(bad)
push
aad
pop
lock
pop
mov
inc
inc
dec
into
and
cmps
rol
mov
inc
call
mov
pop
add
in
xchg
lods
popa
dec
mov
scas
xor
fstp
fidiv
xor
dec
inc
mov
call
adc
mov
data16
int
mov
adc
jp
cs
dec
cmp
pusha
jno
mov
repnz
cmc
jge
push
int3
mov
adc
mov
cmps
mov
push
pop
outs
xchg
fistp
fstp
push
idiv
cmps
fcmovnu
jno
cli
fsub
les
xchg
push
sysret
or
sbb
dec
pop
cmps
mov
mov
xchg
repz
es
or
jge
mov
mov
das
aad
push
or
in
adc
loope
popaw
popa
lea
loope
in
sbb
inc
pop
jno
test
inc
sbb
pop
or
imul
popf
sbb
mov
(bad)
lock
mov
loope
add
scas
cmp
xor
adc
xor
mov
nop
scas
outs
mov
mov
push
ds
ja
jge
icebp
pop
retf
jne
cli
or
fisttp
sub
sti
push
sbb
xor
inc
xor
dec
sbb
sub
sub
mov
pop
sbb
xchg
sub
xor
jg
leave
inc
repnz
inc
lods
dec
daa
adc
push
jmp
aaa
movs
adc
test
dec
daa
mov
out
scas
into
inc
jno
dec
add
je
adc
add
cmp
mov
mov
int
jmp
push
mov
inc
out
xchg
fcom
sbb
pop
pop
imul
dec
cwde
mov
pop
shr
imul
sahf
dec
movs
pop
and
call
add
push
push
je
mov
mov
push
mov
xchg
mov
or
cmps
sub
xchg
jnp
and
aam
pop
int3
inc
movs
rol
pop
mov
(bad)
mov
ffreep
adc
ss
pop
xchg
mov
xor
mov
aam
adc
xor
inc
ja
(bad)
int
mov
xchg
and
aaa
pop
jmp
popf
xor
pop
ja
das
iret
aam
sti
and
sub
loop
and
pop
(bad)
jmp
mov
lahf
out
inc
jl
pop
xchg
sahf
xor
mov
ret
or
xor
loop
pop
push
or
dec
and
pop
mov
inc
(bad)
mov
test
movs
push
or
mov
or
adc
loop
xchg
pop
retf
call
jae
cli
jmp
movs
push
(bad)
dec
lea
fsub
jo
int3
lds
lahf
jne
jmp
xlat
(bad)
test
sar
aaa
or
and
xchg
sub
retf
lods
nop
sub
jle
dec
leave
es
push
mov
or
fwait
pop
mov
pop
cli
adc
rol
pop
pop
push
in
jmp
fs
ja
mov
call
xor
leave
dec
ret
dec
add
cdq
sub
add
lds
add
fadd
xchg
sbb
jmp
scas
popf
test
and
jecxz
repz
gs
retf
call
call
(bad)
repnz
mov
push
xchg
add
push
mov
xor
mov
cmps
and
jne
add
mov
int
xor
cmps
cmc
sub
jb
imul
mov
std
lods
movs
jae
dec
jbe
cdq
xchg
adc
popa
mov
(bad)
or
xchg
movs
lods
cmp
pushf
and
jmp
les
repz
push
mov
sbb
adc
sbb
leave
add
xchg
adc
cli
pop
mov
outs
ins
ds
mov
mov
adc
ins
adc
xchg
fcomp
sub
mov
xor
mov
test
dec
les
dec
pop
pop
cs
add
cmp
or
popa
rcl
mov
scas
gs
ins
jae
retf
sbb
aas
and
repz
adc
mov
push
cmp
jo
or
add
outs
cs
bnd
pusha
xchg
or
lock
cmp
jl
mov
call
scas
add
or
das
adc
sub
and
loop
lahf
mov
fcom
xchg
sbb
cmp
dec
cwde
int
and
xor
dec
add
test
(bad)
jle
shl
in
mov
xchg
push
xchg
jg
test
ins
dec
mov
fwait
mov
add
mul
sti
enter
dec
movs
cmps
fisubr
leave
aaa
fisubr
sbb
mov
xor
mov
inc
fild
adc
or
mov
inc
mov
cmp
cmp
loope
jg
and
out
push
mov
pushf
push
(bad)
in
ret
cwde
pop
imul
jmp
mov
aaa
fisttp
sti
xchg
movs
and
or
xor
sub
mov
(bad)
data16
cmp
scas
push
and
dec
sahf
imul
jp
enter
dec
xor
lahf
stos
sub
xor
stc
jae
rcr
mov
pop
jg
loopne
jb
push
push
inc
push
dec
adc
enter
int
jl
js
enter
out
cmp
dec
pop
std
out
or
imul
push
repnz
fidiv
jmp
aaa
stos
mov
adc
mov
cld
mov
mov
aaa
out
mov
ficomp
sbb
outs
retf
sti
gs
or
std
rcr
mov
add
add
jmp
shl
clc
call
daa
adc
mov
dec
cmp
daa
(bad)
fcom
push
sub
sbb
inc
call
jmp
addr16
jmp
lods
push
ds
call
or
std
mov
mov
inc
or
sbb
ss
push
jae
cmps
inc
jecxz
pop
pop
out
cld
or
jnp
jno
sub
sahf
ficom
mov
mov
adc
mov
outs
ds
fldcw
int
xor
and
xchg
fsubrp
jmp
lea
aad
dec
popf
pushf
call
pop
mov
leave
add
pusha
jle
jb
jecxz
xchg
lock
test
lea
cmc
and
int
add
jns
ret
movs
jl
imul
les
scas
hlt
push
stos
test
mov
mov
pop
adc
cwde
push
add
fild
push
cmp
hlt
pop
cmp
pop
add
jp
xor
int3
xor
sar
lahf
inc
push
rol
retf
adc
sub
mov
add
(bad)
retf
xchg
add
cmp
bound
sbb
sub
pop
inc
xchg
and
or
jecxz
fisubr
hlt
retf
push
push
cld
push
fmul
push
jg
add
imul
xor
inc
pop
adc
ror
test
jne
sar
pop
mov
cdq
popf
mov
sub
sub
fsubr
and
jmp
jae
xchg
call
xor
out
rcr
dec
not
or
dec
fisub
sub
aaa
or
in
outs
pop
aaa
sbb
test
loop
ds
aas
xor
pop
test
(bad)
cmp
(bad)
cmps
xchg
adc
push
stc
retf
nop
cmp
xchg
push
jecxz
idiv
cmp
pop
aas
jbe
or
cmps
xchg
std
lahf
adc
test
jp
imul
icebp
add
jge
inc
sti
loopne
mov
adc
ins
rcr
push
xor
ins
jmp
xchg
test
ret
fdiv
pushf
inc
add
pop
fistp
pop
pop
pop
xchg
xchg
dec
lock
adc
test
arpl
fisttp
int3
std
and
and
add
inc
push
jb
jns
fmul
test
adc
dec
xor
mov
cmp
and
and
mov
mov
in
adc
push
stos
scas
mov
sub
cmp
xor
or
cmp
mov
push
push
je
pop
test
push
in
pushf
in
leave
(bad)
mov
loop
fadd
jg
ret
and
ret
mov
xor
ret
pusha
sbb
or
lock
lea
jnp
xchg
and
(bad)
sbb
xchg
mov
xor
mov
(bad)
icebp
or
dec
or
outs
ins
mov
xchg
push
inc
jg
pop
(bad)
repnz
cld
mov
pop
sub
push
inc
jecxz
mov
call
push
(bad)
adc
stos
lock
outs
xchg
adc
mov
pop
mov
ja
xor
dec
xchg
cdq
rol
dec
lods
sbb
inc
push
xchg
push
lahf
enter
aaa
hlt
(bad)
test
test
ins
xor
mov
inc
cmp
push
sub
push
add
jmp
shl
in
xlat
fistp
(bad)
adc
dec
and
dec
or
(bad)
inc
hlt
fs
out
push
mov
add
sub
in
shr
mov
and
stos
movs
inc
sub
movs
pusha
lods
xor
not
push
aaa
cdq
sbb
jp
push
in
inc
pop
arpl
add
and
cmps
mov
mov
xor
je
sbb
retf
xor
dec
out
inc
mov
sub
or
imul
mov
pop
xchg
cld
test
inc
xor
fadd
ins
dec
mov
das
xor
mov
mov
pop
into
rol
dec
out
xchg
sbb
sti
(bad)
int
ins
push
xlat
rol
popa
add
xor
jle
jo
hlt
mov
in
inc
mov
mov
cmovbe
in
fs
jnp
push
addr16
sbb
(bad)
hlt
sub
into
add
jo
xchg
sub
ret
das
sar
jnp
lahf
adc
out
push
sub
mov
jmp
retf
add
xor
fsub
adc
push
iret
sbb
lods
popa
jp
jp
sar
xor
popa
inc
xor
cmp
arpl
sahf
mov
ss
out
fld
xchg
pop
fwait
imul
aas
fisttp
jno
dec
and
push
mov
xchg
rol
imul
mov
push
bound
cmps
test
push
outs
cwde
xlat
mov
push
test
in
popa
push
fistp
inc
cmp
das
enter
retf
dec
pushf
movs
(bad)
sbb
mov
fisttp
lahf
ja
sub
movs
dec
push
add
aad
and
ret
cmp
and
sahf
mov
and
jle
push
(bad)
jecxz
aam
ror
pop
adc
jno
mov
xor
push
xor
jmp
mov
and
inc
movs
pusha
push
sbb
jnp
movs
pop
out
push
jg
dec
mov
call
jmp
xor
push
xchg
mov
in
outs
int3
(bad)
loopne
jae
cmps
bound
or
sub
sub
xchg
loopne
mov
sub
clc
fwait
repnz
mov
popf
mov
dec
out
pop
sahf
in
dec
jbe
loop
std
sti
fs
pop
fs
sub
xor
push
outs
stos
fistp
fs
mov
outs
push
jne
push
and
(bad)
test
mov
add
cmp
cmp
mov
push
dec
add
push
dec
xchg
adc
add
fdiv
push
pop
bound
pop
jecxz
inc
mov
xor
inc
mov
pop
mov
pop
jle
les
or
scas
sub
cmp
pop
inc
sub
inc
add
pop
lea
mov
test
xor
push
pop
or
dec
xchg
and
shr
pop
xchg
(bad)
test
and
sahf
aad
call
or
daa
dec
inc
out
fwait
scas
dec
cdq
sub
fbstp
js
mov
out
xor
sbb
add
std
push
test
scas
jmp
push
aam
adc
shr
mov
jbe
or
cmp
(bad)
bnd
out
sub
inc
push
fwait
add
(bad)
jbe
dec
inc
mov
jb
mov
jg
les
inc
add
jns
movs
sbb
aam
js
aas
mov
ror
mov
xchg
push
sbb
mov
xor
lods
das
pop
cmp
imul
mov
popf
inc
popf
imul
jg
sbb
inc
in
pushf
fcomp
jmp
fs
jne
movs
push
xlat
push
pop
and
jb
adc
sub
ds
in
inc
add
jge
dec
add
inc
xor
call
sbb
ss
jl
cmps
(bad)
es
cmp
enter
sahf
push
or
jbe
ret
sbb
fdivp
stc
mov
xchg
or
stos
add
pop
mov
gs
stc
ret
pusha
add
mov
ds
jl
dec
loope
push
test
stos
stos
push
stc
stc
fld
or
or
jnp
je
mov
pop
inc
add
push
dec
cwde
mov
or
sub
cmc
pop
ins
out
or
adc
mov
mov
into
sub
xchg
stc
aad
cmp
fwait
push
cmp
lods
or
inc
dec
push
inc
xchg
xchg
pop
mov
jae
rcl
sbb
test
jns
adc
mov
xlat
or
or
mov
hlt
std
pop
or
mov
test
test
int3
add
lods
mov
mov
xor
mov
shl
jp
xor
mov
lahf
mov
fild
mov
and
scas
or
cwde
push
dec
or
jmp
cli
out
mov
pop
cmp
mov
aaa
sub
loopne
sbb
and
cmps
cli
jo
lahf
xchg
data16
nop
push
push
push
pop
mov
pusha
(bad)
std
sahf
cmp
xor
xchg
or
sbb
ret
and
into
dec
(bad)
int
fadd
mov
mov
xchg
aam
push
mov
adc
push
jp
test
aaa
ror
int3
mov
fcom
cmps
(bad)
cmc
cmp
fdiv
jge
fadd
lahf
xlat
ins
icebp
leave
dec
dec
adc
dec
mov
cmp
jge
loopne
(bad)
mov
jb
adc
(bad)
cmps
out
ret
inc
int
xchg
fnsave
(bad)
pusha
cdq
movs
popf
inc
jo
(bad)
neg
(bad)
rcr
ss
add
clc
and
aam
ja
push
inc
ret
mov
pushf
dec
enter
jne
add
call
xor
or
cmp
repz
jp
neg
dec
mov
jmp
jmp
adc
je
mov
stos
mov
xor
sub
jmp
movs
call
sub
bt
jae
mov
int3
aaa
push
bound
jmp
or
mov
jae
jbe
and
std
mov
rol
dec
outs
xor
clc
jo
std
dec
test
inc
call
lds
ds
pop
xor
enter
xor
jns
shr
jne
js
daa
das
leave
dec
js
cmp
xchg
or
inc
xchg
fsub
xchg
pusha
jae
les
and
pop
mov
leave
adc
jmp
out
(bad)
jp
pop
inc
lahf
ret
inc
or
jge
jmp
int
pop
dec
cmp
mov
pop
ror
cwde
mov
jne
adc
retf
in
xor
ja
rcr
adc
fdiv
mov
sbb
adc
sbb
xchg
int3
mov
out
test
ret
adc
push
rcl
in
jae
add
pusha
sbb
pop
xchg
ror
ins
add
test
jbe
pop
test
int3
and
dec
sub
jno
inc
(bad)
cwde
push
jns
test
mov
lahf
ret
xchg
mov
sbb
inc
ret
mov
retf
mov
sub
jmp
daa
iret
mov
xchg
das
movs
mov
cmp
push
push
gs
add
push
jns
cwde
popf
pusha
lahf
f2xm1
stos
es
jns
cmc
out
and
je
xchg
xchg
xchg
ret
inc
xchg
clc
movs
xor
repnz
enter
jnp
cmp
mov
mov
dec
daa
mov
cmps
push
sub
mov
mov
jmp
scas
repz
fwait
(bad)
lock
jne
sbb
out
sar
test
fisub
shl
lock
push
cs
inc
push
hlt
pop
xor
and
ret
xchg
lds
inc
inc
dec
and
mov
push
mov
bound
push
(bad)
adc
mov
dec
inc
in
sar
sar
inc
(bad)
cmp
sub
mov
dec
int3
cdq
xlat
xchg
(bad)
sbb
cmp
aam
mov
retf
cmp
movs
arpl
add
fcomp
cmps
jne
imul
mov
push
jnp
jge
sbb
and
and
and
or
fsubp
call
inc
dec
dec
jne
sbb
mov
pop
mov
retf
add
bound
scas
and
pusha
dec
inc
dec
lock
push
arpl
ror
int3
loope
jmp
popa
mov
pusha
in
js
cmp
cmps
scas
aas
ja
and
data16
mov
nop
sbb
pop
push
cli
and
push
push
cmp
pop
push
(bad)
add
dec
xchg
xchg
hlt
scas
scas
(bad)
mov
adc
test
xor
mov
jmp
mov
jnp
pop
add
lods
adc
mov
and
lock
outs
repnz
xlat
(bad)
outs
xlat
stc
push
js
mov
cwde
int3
sti
stos
and
dec
mov
fisubr
mov
push
out
cld
and
dec
fwait
mov
and
dec
arpl
mov
sbb
jae
push
cmps
ss
int
push
mov
cmp
and
sbb
cmp
lea
neg
test
pop
in
xor
int
fidiv
sbb
mov
rcr
rcr
fnstsw
cmp
pusha
adc
adc
sar
ret
sub
je
add
sub
cmp
add
bound
or
xor
and
in
mov
sbb
mov
iret
add
jl
adc
push
cmps
(bad)
push
call
xchg
nop
add
test
mov
cmovg
outs
(bad)
pop
cmp
sahf
cmp
push
jnp
ins
scas
sbb
inc
out
xchg
xchg
sub
add
mov
or
int3
jg
cmp
inc
mov
xchg
or
adc
mov
lea
dec
or
inc
call
lods
sub
lds
sbb
pop
cmp
inc
sub
add
and
xor
push
test
adc
in
cmc
rol
xor
fdivr
push
cmp
inc
sbb
mov
out
adc
add
xor
push
mov
add
xchg
add
and
call
xor
ror
and
cmps
int3
sub
das
pop
dec
jp
push
xchg
div
pop
ds
and
ins
jns
in
jmp
or
inc
mov
out
jnp
xchg
adc
pop
inc
ins
leave
sbb
pop
jl
pushf
xchg
mov
in
ins
mov
xor
mov
sbb
stc
adc
stos
lds
jb
cdq
ror
xchg
dec
adc
sub
out
jne
xchg
mov
sbb
push
clc
inc
mov
or
jmp
mov
add
jmp
lods
(bad)
rcr
pop
dec
jne
adc
and
push
test
and
pop
les
add
stc
xchg
out
inc
cwde
lods
mov
std
cmp
(bad)
pop
jle
(bad)
loopne
js
jg
mov
test
rol
add
pop
shl
jle
sbb
cmps
ret
cmp
aam
jle
dec
in
mov
xor
cmp
mov
leave
and
adc
aas
mov
mov
or
es
xor
pop
jo
pop
in
inc
inc
inc
lar
push
jmp
aaa
xchg
push
add
hlt
push
nop
dec
shrd
and
push
popf
test
test
jmp
dec
mov
dec
movs
test
or
(bad)
xor
cmc
mov
leave
sti
inc
dec
and
add
add
mov
xchg
(bad)
lods
sbb
call
cmps
inc
movs
pop
gs
push
aas
outs
mov
rol
cli
(bad)
jne
jb
dec
push
repz
call
inc
je
in
mov
sub
dec
dec
aaa
jecxz
(bad)
retf
imul
data16
mov
inc
mov
cmps
mov
loope
vpmullw
cmp
pop
bound
mov
scas
and
(bad)
sti
ja
and
cmp
imul
idiv
out
imul
sbb
test
fistp
aaa
mov
add
jb
add
outs
scas
rol
pop
mov
jp
mov
cs
adc
idiv
popf
xchg
aas
dec
xor
dec
dec
loope
jnp
cdq
pop
cld
pop
adc
xchg
mov
sbb
xchg
stos
in
cdq
cwde
cmps
mov
jno
icebp
add
lods
ins
jl
or
nop
fimul
jmp
(bad)
fdivr
mov
sub
aad
fisub
lea
fldenv
imul
div
addr16
push
shl
cwde
push
xchg
jmp
cmp
jmp
pop
mov
add
xor
fnstsw
sbb
leave
ins
jmp
or
mov
imul
ret
rcr
cmp
repz
retf
test
test
pushf
dec
mov
shl
mov
push
ror
sub
call
cmps
mov
pushf
js
inc
mul
mov
jmp
ss
retf
adc
aad
fsubp
loope
jo
mov
jecxz
sub
cli
inc
jmp
pop
mov
repz
adc
jnp
and
adc
out
and
ss
sbb
test
xor
ret
jmp
pop
cli
loopne
fincstp
fs
out
mov
push
push
loopne
pop
(bad)
sub
xchg
adc
jle
dec
add
(bad)
fst
fwait
lods
inc
jmp
pushf
fadd
sub
jge
bswap
sub
repz
xchg
(bad)
xor
mov
(bad)
out
arpl
lea
ins
stos
fucomip
add
fist
mov
or
inc
dec
fdivr
mov
mov
test
xchg
mov
sub
add
inc
jle
das
repz
jg
in
mov
mov
dec
xchg
mov
inc
pop
out
jbe
(bad)
fwait
leave
inc
add
push
mov
xchg
xlat
arpl
cmp
add
sub
and
mov
push
imul
pop
push
pop
lods
cmp
and
icebp
mov
jge
loopne
shl
fdivr
pop
addr16
enter
sub
js
sub
pop
cmp
fidiv
hlt
cwde
dec
push
xlat
lahf
(bad)
ins
add
mov
gs
rcl
mov
push
std
scas
mov
in
jge
sub
repz
and
(bad)
js
xor
mov
xchg
cdq
ins
iret
fist
arpl
mov
mov
fxch
je
mov
pop
inc
retf
ds
inc
mov
loopne
jnp
cmps
inc
lahf
movs
adc
in
dec
jmp
shl
pop
enter
(bad)
rcr
and
xchg
or
ins
pusha
cmp
or
pop
repnz
and
mov
test
pop
mov
pop
mov
fsub
dec
outs
jecxz
dec
je
and
mov
adc
xchg
dec
out
sub
(bad)
mov
and
xor
lods
push
xchg
inc
fstp
pop
loopne
loope
add
mov
jmp
out
xchg
pop
movs
cmc
pop
movs
imul
xlat
inc
push
mov
cmps
js
mov
scas
aaa
jbe
imul
bound
xchg
sub
adc
loopne
add
cmp
push
xchg
xchg
adc
addr16
sbb
jge
mov
sbb
pop
sub
aad
div
mov
(bad)
stc
outs
jo
jge
scas
clc
mov
fstp
int
cdq
cmp
mov
pusha
pop
or
mov
mov
les
out
mov
xchg
test
inc
push
pop
inc
arpl
pushf
sub
inc
mov
lds
and
popa
ins
and
mov
fldcw
ret
cmp
xchg
fstp
pop
or
mov
out
xchg
aam
xchg
outs
sub
daa
mov
cmps
sbb
rol
push
jle
jl
je
pop
push
stc
pop
loopne
mov
retf
es
cmp
stos
loop
nop
push
mov
fwait
cwde
jno
dec
data16
push
loop
or
mov
inc
stc
fst
hlt
adc
(bad)
mov
das
adc
add
(bad)
fmul
cwde
pop
rcr
int3
xor
enter
pop
dec
fs
push
and
imul
add
hlt
pop
pop
or
in
pop
dec
push
cmp
stc
jne
mov
ja
dec
out
out
jmp
jecxz
out
push
push
test
sti
out
(bad)
icebp
adc
stos
loop
push
int
jo
sar
jecxz
push
scas
jae
mov
ins
xchg
cmp
mov
shl
pop
js
cdq
xchg
pop
sub
adc
mov
and
mov
mov
push
jno
mov
imul
or
sbb
rcl
in
hlt
adc
retf
rcr
mov
dec
pop
std
push
dec
mov
test
push
mov
and
lds
inc
rdtsc
lods
or
xor
enter
lods
push
or
out
das
or
xchg
mul
std
std
outs
je
loopne
pop
jns
lea
loopne
push
dec
push
jnp
stos
ja
or
mov
out
sbb
push
cmps
call
retf
popf
aad
sub
mov
(bad)
inc
push
stos
mov
outs
jmp
cmp
movs
ds
sub
and
xlat
mov
or
jnp
movs
sbb
pop
shl
pop
mov
pushf
add
shl
jecxz
sar
add
lods
cmp
pop
fadd
jnp
bound
xchg
mov
les
mov
je
sub
icebp
or
push
adc
sbb
test
cwde
(bad)
sbb
loope
jb
add
jecxz
inc
cmp
aas
sub
(bad)
mov
aam
gs
mov
push
ret
or
dec
xchg
mov
or
lea
inc
stos
cmp
xchg
ins
mov
mov
xchg
mov
pop
ins
cdq
call
stc
test
aas
movs
xor
ja
xchg
in
push
mov
xchg
sbb
adc
or
xor
push
imul
pop
ds
sbb
or
mov
or
jne
shr
out
les
jmp
adc
push
leave
(bad)
dec
adc
es
test
xchg
jmp
call
gs
test
sbb
mov
xor
in
mov
push
pop
mov
faddp
push
and
lods
push
and
nop
sbb
cmp
in
outs
jecxz
sbb
pop
inc
mov
fisttp
xchg
adc
arpl
shr
pushf
in
enter
sbb
jo
or
icebp
js
push
xchg
js
into
and
in
test
loopne
cmc
stos
sbb
cmps
out
mov
add
movs
lahf
arpl
inc
fidiv
movs
xlat
jle
and
ja
or
jecxz
and
inc
and
(bad)
retf
jno
mov
pop
xchg
out
add
fistp
inc
mov
dec
addr16
enter
popf
arpl
neg
sbb
or
mov
loopne
movlps
mov
loop
gs
sub
push
in
fsubrp
rcr
cli
and
or
sbb
mov
push
mov
add
lods
and
in
or
xor
and
lock
xchg
jecxz
xchg
in
cli
and
pop
popa
xlat
adc
inc
repz
pop
mov
jl
jns
lahf
and
in
out
dec
lods
push
cs
dec
mov
or
mov
dec
mov
xor
nop
cdq
into
aas
adc
and
mov
mov
pop
dec
sbb
sub
into
call
fyl2xp1
(bad)
adc
setne
loopne
inc
loope
cld
mov
rol
mov
icebp
xchg
daa
test
mov
fsubp
mov
cli
mov
cld
add
leave
inc
imul
or
mov
(bad)
sbb
jge
jle
jbe
sub
inc
xor
push
push
les
sub
nop
mov
hlt
test
aad
std
jecxz
adc
int3
mov
mov
shl
ret
push
adc
cmp
mov
stos
outs
out
std
ins
fiadd
shr
lods
adc
scas
in
jle
xor
(bad)
fcom
lea
into
pop
lahf
inc
mov
xchg
pop
add
jmp
pop
jo
mov
ror
imul
mov
push
fisttp
fdivr
jae
xor
int
lods
ins
repz
les
in
movs
rcr
xor
xchg
xor
popf
cmc
push
leave
jecxz
loopne
dec
pop
jecxz
inc
ror
pop
test
sub
or
fiadd
int3
call
xchg
(bad)
dec
bound
add
adc
cmp
adc
sbb
pop
clc
arpl
push
and
cmps
out
mov
div
aaa
(bad)
out
xchg
mov
dec
test
out
std
xchg
or
xchg
(bad)
cmp
lods
pushf
cmps
(bad)
in
cwde
call
mov
pop
hlt
lods
push
jns
lea
jle
repnz
or
jmp
pusha
pop
inc
sbb
jmp
enter
cmp
or
sub
hlt
mov
aad
out
fmul
int
sbb
mov
shl
in
jmp
addr16
dec
dec
dec
retf
repnz
pop
ins
movs
call
mov
cli
(bad)
repz
je
mov
outs
jmp
add
adc
outs
push
sub
frstor
in
cmps
pop
pop
sar
sar
bound
jmp
shl
cld
mov
sbb
xchg
inc
mov
xchg
dec
or
push
mov
xor
cmps
call
cmp
jb
push
out
inc
xor
xor
jle
sub
mov
sub
add
fndisi(8087
popa
icebp
and
in
and
add
iret
(bad)
sub
mov
sbb
inc
cli
xchg
or
gs
pop
inc
mov
push
xadd
fidiv
push
ins
test
movs
push
pop
imul
ret
xor
add
jae
ins
push
aam
in
stc
cmp
cmp
(bad)
push
or
ins
out
pop
dec
dec
dec
movs
loope
ins
push
xchg
stos
fsubr
js
mov
pop
sub
mov
das
jmp
cmc
or
mov
call
mov
sbb
sub
mov
mov
mov
sbb
mov
rol
xchg
inc
pushf
outs
call
nop
jne
mov
fsubr
mov
cs
cmp
into
and
stos
xchg
inc
sti
mov
inc
jno
cli
push
xor
cli
mov
into
push
loopne
xlat
out
xchg
push
test
retf
cs
jp
sub
stc
xchg
nop
aam
lods
mov
lahf
popa
mov
mov
js
sbb
stos
push
or
(bad)
sub
inc
js
push
mov
mov
arpl
jp
jle
inc
xchg
mov
sub
mov
add
mov
movs
pop
and
mov
cmp
jg
es
es
pushf
cmp
dec
adc
xlat
add
sub
fwait
ins
movs
lods
mov
dec
test
(bad)
lds
add
and
xlat
sub
inc
(bad)
ret
ror
outs
mov
arpl
dec
and
xchg
sub
je
sbb
call
outs
inc
sbb
add
jns
test
cmp
cmp
jmp
pop
sbb
add
mov
ret
xor
sbb
add
sub
(bad)
mov
sbb
inc
(bad)
and
and
dec
scas
cmp
mov
(bad)
(bad)
neg
(bad)
xchg
add
sub
fist
and
clc
jecxz
and
inc
mov
push
aaa
pop
pop
punpckldq
jp
pop
cli
cmc
jle
retf
mov
cld
lock
xor
xchg
xchg
mov
mov
outs
pinsrw
es
fstp
xchg
repz
dec
inc
dec
outs
mov
or
loopne
call
sbb
fwait
mov
mov
xor
inc
std
lods
jo
ins
mov
repnz
jb
mov
loop
cmp
sub
jbe
xor
shl
pop
xchg
mov
mov
popf
pushf
movs
cwde
inc
into
addr16
daa
rol
push
movs
mov
inc
int3
test
repnz
outs
mov
in
int
push
rol
mov
out
add
aaa
pop
stc
cld
push
rol
xchg
adc
jne
ss
push
ficomp
pop
std
scas
icebp
jp
leave
lds
fmul
ins
mov
cmovge
pop
push
mov
jge
pushf
scas
xchg
iret
sbb
and
in
sbb
xor
in
jecxz
(bad)
rcl
pushf
dec
push
adc
add
push
xchg
sub
add
fidiv
xor
xchg
xlat
pop
jl
sub
adc
add
inc
push
cmp
in
lods
add
ror
pop
cmps
and
inc
and
xor
push
gs
push
cmp
push
adc
cwde
ss
fstp
sahf
scas
dec
leave
lea
pop
cmp
pusha
add
clc
dec
daa
scas
mov
or
hlt
mov
xor
jmp
xchg
mov
xchg
pop
and
(bad)
mov
pop
adc
inc
mov
cli
cmp
aad
push
ja
add
inc
shr
mov
(bad)
sti
inc
sub
inc
imul
adc
dec
sbb
jmp
cmp
stc
loopne
adc
xor
test
jae
pop
jne
test
cmp
and
call
jns
lods
sbb
jae
adc
dec
imul
fst
mov
mov
ret
fwait
xchg
jl
inc
pop
or
mov
pop
movs
pop
pop
fisubr
(bad)
lahf
cld
mov
cld
into
mov
cmp
je
jecxz
ret
loopne
jmp
mov
and
xchg
fwait
push
add
inc
fwait
inc
xor
test
adc
in
retf
movs
mov
mov
lea
xor
push
dec
loopne
inc
or
pop
int3
cmps
movs
mov
jle
xor
movs
cmp
push
shl
inc
mov
test
sub
xchg
(bad)
iret
aad
jmp
cmp
xchg
xchg
lahf
push
xchg
and
aam
jnp
mov
push
xor
adc
inc
jae
test
jno
(bad)
push
movs
jae
iret
hlt
nop
lahf
push
adc
aad
xor
jnp
sti
sti
rol
push
pushf
(bad)
jns
retf
das
(bad)
mov
scas
mov
inc
shl
adc
or
pop
pop
inc
daa
add
test
lods
out
add
xchg
fidivr
stos
push
dec
sub
cld
retf
xchg
jne
icebp
jl
jbe
add
into
xchg
test
or
inc
add
addr16
rol
xor
daa
adc
sbb
inc
pop
nop
sbb
fisttp
cmp
xchg
sub
push
inc
inc
mov
ins
inc
sub
mov
ror
push
rol
ss
jbe
aam
das
mov
and
mov
or
ins
aam
sar
in
add
pop
jge
or
out
test
jp
push
mov
xor
scas
or
call
(bad)
aas
lods
mov
and
and
add
fadd
xor
fsub
mov
adc
rcl
mov
mov
mov
jmp
aaa
popa
bound
jb
xchg
jb
sub
sub
dec
inc
xor
cli
pop
in
pop
mov
ins
adc
add
sub
fwait
lock
xor
jns
push
cs
mov
in
fadd
repnz
xor
jno
adc
push
sub
retf
add
mov
inc
out
push
(bad)
jmp
push
shr
inc
adc
stos
les
scas
adc
jb
or
xor
jecxz
test
gs
(bad)
(bad)
mov
cld
dec
add
pop
push
ret
cmp
adc
or
sbb
cs
call
jmp
mov
test
xchg
mov
lods
jns
mov
rep
and
mov
lods
mov
xchg
xchg
iret
sub
push
aam
or
ret
movs
jmp
and
mov
mov
fcomp
hlt
sub
push
iret
dec
or
ret
push
mov
cmp
jmp
inc
push
or
aaa
ja
mov
retf
dec
mov
pop
push
int3
push
add
sbb
aas
inc
es
cdq
jmp
jg
cmp
cmp
inc
sub
push
scas
cmp
sbb
arpl
adc
test
fs
xchg
ret
sahf
out
mov
ror
cmp
add
mov
and
popa
inc
xor
adc
ret
pop
dec
out
mov
mov
popa
pop
and
and
jp
shr
popf
pop
out
mov
dec
mov
mov
(bad)
xchg
jne
push
jns
xchg
push
mov
ins
ins
jmp
in
xor
shl
fidivr
das
cdq
scas
mov
mov
sub
add
adc
pushf
mov
inc
daa
sub
and
(bad)
gs
lock
pop
and
fwait
into
mov
adc
xchg
mov
pop
and
cmps
int3
out
pop
ret
sub
mov
lds
clc
dec
add
aas
popa
js
xlat
jns
sbb
cmp
sbb
nop
and
jp
mov
push
test
fsubr
or
iret
add
cld
data16
and
(bad)
stos
inc
out
cmps
dec
(bad)
adc
jle
loope
mov
ja
cmp
jae
sbb
stos
test
dec
xchg
or
hlt
cld
popf
add
scas
cmp
arpl
xor
test
jbe
std
adc
lods
repz
gs
push
mov
int
popf
or
enter
fidivr
repnz
xchg
push
jns
cmp
add
sub
and
mov
dec
dec
mov
inc
mov
ror
cmp
inc
adc
xchg
adc
inc
sub
int3
jle
jnp
in
jle
repnz
cmp
int
retf
shl
add
cmps
mov
sbb
aad
adc
dec
cmp
xchg
dec
xchg
(bad)
stc
sar
dec
dec
in
pop
cmc
add
cdq
dec
pop
mov
mov
les
and
jno
out
adc
fxch
dec
(bad)
mov
call
and
fcomp
cmp
popa
or
pop
imul
or
fld
cmc
leave
sub
inc
std
pop
adc
push
dec
xor
mov
and
cli
push
pop
movs
movs
(bad)
xor
jecxz
imul
push
je
imul
out
jno
inc
cwde
in
jmp
jo
push
xor
inc
nop
mov
push
mov
test
sub
or
mov
add
pop
mov
sbb
mov
bound
jbe
inc
push
in
sbb
rcr
dec
mov
jmp
mov
mov
add
into
(bad)
lock
outs
lahf
lock
and
ret
dec
sbb
retf
sbb
test
fimul
loopne
jmp
jne
sbb
out
adc
adc
ds
dec
movs
stos
out
adc
test
mov
aad
xchg
loopne
mov
or
xor
xchg
or
in
das
sub
cwde
test
and
inc
sbb
(bad)
mov
jno
in
fsub
push
inc
add
ins
sub
leave
fwait
add
xchg
rcr
in
int
call
mov
iret
xor
sub
out
cmps
dec
or
mov
mov
pushf
movntq
rol
rcr
test
sub
mov
cli
xor
push
in
sbb
dec
lods
jmp
ins
je
(bad)
inc
cdq
cwde
pop
ss
push
out
out
mov
sbb
mov
xor
inc
ins
adc
iret
(bad)
int
lods
inc
inc
xor
adc
push
mov
loop
rcl
pop
dec
movs
call
enter
xchg
sbb
jge
rep
jge
xchg
leave
and
rcl
adc
sub
addr16
xchg
ds
jp
mov
call
stc
fcmovu
pop
sar
ins
loope
and
jne
sar
add
call
push
jg
pop
mov
mov
xor
pop
retf
out
jmp
mov
(bad)
aam
inc
imul
sub
pop
in
aad
xor
xchg
jmp
in
dec
(bad)
jmp
xchg
int3
popf
mov
sbb
(bad)
sbb
add
jne
push
adc
ror
or
femms
mov
out
push
mov
cs
jecxz
movs
(bad)
inc
push
add
or
aam
mov
mov
js
loop
je
das
imul
mov
in
imul
adc
lods
repnz
rcl
clc
sbb
sub
sbb
sbb
push
imul
mov
std
mov
mov
ror
and
das
lods
bound
mov
les
adc
add
and
outs
add
lahf
jmp
xchg
dec
scas
push
sahf
test
xchg
lea
imul
cli
imul
mov
clc
pop
loope
stc
push
mov
aam
movs
scas
add
add
mul
sbb
xchg
and
pop
int3
jp
or
add
fs
sbb
enter
push
int3
pusha
(bad)
adc
mov
idiv
fs
daa
mov
xchg
imul
and
(bad)
sub
jne
inc
cwde
call
icebp
xor
mov
cdq
mov
add
jecxz
in
das
mov
and
call
in
dec
int3
movs
xchg
fistp
cs
sti
xlat
or
fldcw
mov
dec
ins
dec
dec
add
mov
retf
mov
add
idiv
arpl
xchg
mul
or
test
in
mov
dec
mov
cmps
call
or
inc
push
and
cld
push
mov
jbe
cmp
int
add
retf
mov
pop
hlt
ins
pop
js
mov
arpl
or
pop
cmc
adc
cmps
dec
adc
into
xor
cli
pop
dec
pushf
jnp
iret
xor
pop
das
jnp
jmp
and
pop
mov
and
bound
dec
call
adc
adc
mov
(bad)
leave
sbb
mov
and
mov
pusha
add
jns
jg
inc
int
jnp
pop
xor
lock
fdivr
cmps
imul
push
stos
lods
into
sbb
sub
test
add
sbb
sbb
mov
mov
ds
das
mov
rcl
adc
mov
test
hlt
push
stc
les
stc
test
sbb
and
jl
pop
cmps
cdq
jno
retfw
retf
or
(bad)
mov
mov
(bad)
pop
jecxz
cmp
jmp
ds
call
inc
mov
cmps
or
mov
repnz
lea
sbb
or
mov
call
dec
jo
ror
jl
jno
into
or
fistp
aam
xor
cwde
xchg
dec
jo
std
fs
jb
push
je
pop
mov
xchg
aas
pop
ret
test
push
mov
std
int
xor
push
scas
call
jmp
ja
and
int
mov
pushf
(bad)
jg
mov
push
jnp
add
aad
out
cmp
fild
test
adc
inc
and
dec
int3
retf
mov
rcl
mov
sub
xchg
jmp
and
xchg
xchg
adc
push
or
and
sbb
push
int3
sub
lods
xchg
xor
mov
adc
fmulp
leave
push
cmp
xchg
add
push
xor
(bad)
sub
ja
dec
lods
nop
test
pop
pusha
inc
inc
popf
loope
sbb
and
dec
loope
call
xor
int
hlt
inc
push
jne
lods
mov
mov
lds
mov
and
bound
dec
adc
jo
push
repnz
inc
and
test
std
mov
stos
fmul
outs
mov
mov
and
jecxz
jle
pop
fidiv
adc
push
cwde
ja
add
mov
movs
cmp
mov
sub
xor
popf
movs
lds
xor
jge
addr16
in
outs
fcomp
sbb
addr16
aam
and
add
div
test
leave
in
aad
or
adc
test
scas
pop
or
adc
test
mov
lea
inc
int
pop
inc
jp
mov
sub
aaa
and
bound
push
push
sti
pop
(bad)
xchg
push
ret
(bad)
pop
jbe
adc
inc
xchg
sbb
cmp
push
adc
push
and
and
cs
mov
xchg
daa
and
retf
aam
fwait
enter
and
pop
ror
hlt
dec
pop
frstor
(bad)
xor
pop
out
inc
aaa
(bad)
fdiv
push
daa
dec
xor
into
sar
int
dec
rcr
mov
push
pusha
out
xchg
mov
inc
xor
(bad)
push
ret
ret
mov
lock
push
inc
and
cmp
cmp
xlat
stc
cmp
lods
repz
das
sub
and
out
popf
mov
gs
jl
imul
fwait
scas
fwait
sbb
jo
enter
aaa
mov
outs
hlt
push
jne
popa
cmps
jle
cmp
push
outs
push
popa
mov
(bad)
sub
stos
lods
mov
push
loop
leave
repnz
mov
ins
xchg
or
nop
enter
pop
inc
add
xor
aaa
inc
mul
stos
imul
iret
inc
je
xchg
sbb
sti
mov
imul
pusha
in
xor
or
fistp
cli
dec
repnz
inc
and
in
mov
(bad)
dec
jae
xor
mov
mov
sbb
in
scas
mov
fwait
arpl
neg
and
cdq
adc
ja
cmps
imul
ret
xor
mov
into
arpl
xchg
movs
push
jmp
and
or
fcmovne
(bad)
and
outs
sub
cs
(bad)
pop
mov
loopne
push
fwait
sahf
xor
cmps
int3
stc
mov
pop
push
cmp
dec
scas
ficom
fcmovne
fs
xchg
repnz
ss
(bad)
sbb
xor
cli
push
test
mov
mov
pop
mov
icebp
shr
nop
aad
add
fld
ins
add
movs
sbb
imul
mov
xor
push
lods
dec
sbb
mov
pop
fcom
lock
sub
fimul
scas
imul
lds
es
fs
jmp
cmp
or
mov
mov
out
ins
adc
fild
or
mov
sbb
fld
jne
cmp
fiadd
pushf
push
jns
jbe
xchg
xchg
or
loope
nop
out
jmp
ins
aas
pusha
fucomip
add
mov
rcl
xor
xchg
jmp
fbld
popf
xchg
sub
fcomp
cs
lock
or
test
add
xlat
or
imul
loopne
cmp
imul
dec
push
fstp
pop
(bad)
push
pushf
rcl
mov
mov
and
mov
mov
push
cs
adc
mov
xor
sbb
or
xchg
cmp
cli
outs
xor
outs
call
cmps
arpl
aaa
lods
xchg
fwait
(bad)
retf
repz
sbb
push
iret
add
int3
push
lods
arpl
jmp
or
mov
bound
sbb
sub
xchg
mov
sbb
push
(bad)
cmc
jae
aam
and
inc
movs
cli
cli
popf
sub
dec
sub
sti
call
test
xor
inc
aas
bound
adc
pop
nop
les
lahf
add
mov
je
push
dec
mov
addr16
mov
sbb
xor
retf
into
push
push
loope
mov
jmp
jo
mov
push
inc
push
or
mov
pop
(bad)
inc
sahf
pop
push
aam
(bad)
mov
xor
inc
mov
into
xor
mov
lds
xor
mov
cmp
pop
mov
aaa
movs
inc
xchg
loop
mov
cmp
rcr
xlat
inc
pop
jb
jns
adc
jo
sub
push
push
xchg
pop
into
outs
push
push
pop
or
cmp
and
xor
xor
inc
rcr
pop
mov
adc
pop
cmp
jecxz
movs
push
test
lahf
pop
stc
mov
cwde
add
pop
mov
cli
(bad)
das
inc
xchg
or
and
xchg
pop
repnz
and
pop
jl
sti
cmps
(bad)
pop
mov
enter
sub
push
stos
add
jne
sbb
sbb
jp
scas
sbb
js
jge
repnz
or
jbe
pop
repz
cmp
lahf
pop
cmp
xor
lahf
mov
pusha
imul
inc
daa
jo
adc
pop
mov
cmp
xor
jo
inc
add
xchg
(bad)
xor
jae
rcr
sahf
(bad)
sti
loop
fld
imul
jno
imul
bound
mov
xchg
idiv
jns
cdq
inc
jl
pop
pop
idiv
sub
mov
sti
inc
lahf
jl
into
pop
mov
and
pusha
ja
ins
outs
pop
or
add
test
rcr
inc
sar
and
aas
jb
add
cmp
cmp
jne
jl
xor
pop
push
sub
bound
rol
xchg
sub
lods
mov
jne
test
fdiv
pop
adc
inc
in
bound
or
addr16
fwait
push
ret
neg
lahf
les
stos
scas
inc
mov
(bad)
shl
pop
cmp
test
cs
and
sbb
test
pusha
dec
pop
aas
push
int3
cmp
add
inc
daa
mov
xchg
shl
popf
xor
jmp
mov
fbstp
scas
xchg
adc
mov
repz
dec
mov
dec
jns
mov
xor
or
enter
stos
hlt
arpl
xchg
adc
div
xor
ins
movs
xchg
dec
and
mov
cmp
fisub
js
push
and
shr
dec
ret
in
push
(bad)
enter
movs
ss
int3
fdivrp
ficomp
clc
push
xor
(bad)
sar
(bad)
(bad)
and
cmp
jmp
daa
aas
push
dec
mov
mov
xor
aas
fcomp
mov
ins
lahf
fsubr
scas
adc
jno
push
inc
jae
es
pop
adc
clc
daa
ret
leave
jae
jg
retf
and
mov
mov
push
out
dec
or
fiadd
jmp
ja
ret
inc
ss
fsub
sbb
mov
pop
call
cmp
xor
cmp
mov
pop
std
inc
sbb
pop
pop
cwde
je
cmp
mov
test
lea
ror
jg
rcl
adc
sub
push
inc
adc
and
cdq
pop
(bad)
fimul
ins
mov
inc
pop
jno
sub
add
and
addr16
cmp
mov
cmp
xor
outs
lds
fs
scas
das
xor
lods
imul
jecxz
inc
jmp
cmp
je
adc
dec
(bad)
cmp
enter
test
mov
in
jp
dec
add
jb
gs
hlt
jmp
movs
movs
jecxz
pop
std
inc
shl
icebp
jg
cmps
or
mov
mov
fmul
mov
sti
ins
xchg
push
jp
and
mov
pop
cmp
lds
sbb
lods
or
mov
xor
std
xlat
sub
in
mov
imul
addr16
mov
add
test
ss
jne
out
adc
pushf
mov
inc
jmp
out
sbb
jmp
call
rcl
sbb
dec
jmp
push
sbb
aas
mov
in
loop
mov
jge
mov
retf
out
sahf
jb
enter
clc
or
das
sbb
adc
mov
test
jo
cmp
xchg
mov
mov
mov
cdq
loope
fst
stos
fstp
sub
lds
jp
pusha
xchg
cmp
ss
mov
xchg
adc
test
inc
or
push
and
jecxz
jmp
push
sti
fcom
jmp
cmps
mov
jmp
scas
cmp
rol
fcom
adc
(bad)
cwde
xor
pop
arpl
mov
loopne
gs
scas
or
sub
imul
(bad)
clc
mov
xchg
mov
xchg
or
enter
fsubrp
push
ror
outs
in
fs
and
out
outs
cmc
sub
div
out
add
xlat
adc
(bad)
xor
test
(bad)
or
sub
mov
fimul
dec
ficom
mov
aaa
inc
push
sbb
xor
fild
sub
rcr
daa
out
push
fisub
jo
sbb
loopne
xor
mov
daa
test
push
mov
fnstsw
je
outs
sahf
or
inc
cli
and
jno
dec
lods
out
ret
ins
lods
add
push
bound
jle
add
js
fist
ret
rcr
or
cmp
mov
xor
outs
test
(bad)
xor
es
aaa
mov
data16
jle
cld
int
mov
inc
loope
fcomp
inc
cs
mov
sbb
out
jge
mov
adc
loop
pushf
iret
pushf
jp
mov
sub
daa
icebp
shl
fidiv
mov
daa
(bad)
adc
mul
xchg
aad
lss
(bad)
jns
push
xchg
jno
pop
lods
jo
sar
ins
stos
icebp
mov
inc
mov
pusha
out
jmp
dec
mov
dec
ret
mov
dec
xor
out
and
std
cmps
scas
jb
sub
lock
xchg
add
fdiv
xor
mov
imul
(bad)
mov
push
icebp
scas
push
sub
popa
mov
adc
inc
sub
sub
push
daa
fsubr
scas
push
fiadd
rcr
test
stos
add
pop
xchg
push
test
fwait
sub
pop
adc
popa
mov
xchg
lock
lods
pop
sbb
sub
mov
enter
and
adc
push
fs
xor
jmp
push
jge
push
add
push
retf
xor
mov
dec
inc
movs
ja
call
lahf
fs
mov
or
inc
push
sahf
cli
aad
mov
shl
add
adc
mov
lahf
sub
dec
std
jge
adc
cld
jmp
xchg
add
push
pop
nop
in
call
test
pop
push
dec
aaa
mov
mov
jg
dec
ror
xchg
retf
scas
imul
neg
rol
popf
cmpxchg
push
aad
mov
inc
or
push
and
dec
ss
mov
mov
pop
jmp
sbb
sbb
add
adc
int3
sbb
jns
adc
or
xor
mov
sub
mov
ss
cli
push
popf
or
fadd
mov
pop
fstp
pop
jl
or
lds
xor
daa
mov
jl
retf
jmp
stos
xor
mov
jmp
add
inc
sub
cmp
add
fld
and
cmp
sbb
icebp
add
xor
jmp
push
inc
inc
js
fldcw
mov
or
mov
mov
fdiv
icebp
xchg
mov
fchs
inc
(bad)
imul
xchg
outs
leave
sub
jmp
pop
jg
mov
ffreep
jnp
add
movs
xor
cli
push
inc
or
add
je
jae
xchg
push
loope
es
scas
dec
(bad)
fwait
ja
mov
ja
hlt
loop
aad
in
or
(bad)
dec
lods
jl
out
jle
push
cmp
movs
pop
and
inc
pushf
dec
and
lock
jg
les
sub
push
(bad)
les
cmps
mov
stos
lods
jmp
repz
test
dec
cmp
lds
mov
push
xchg
or
add
lods
push
jo
ret
add
pop
ds
fucomip
or
aam
ret
add
or
sub
arpl
jnp
mov
pop
adc
hlt
repnz
out
cli
or
jno
and
dec
movs
imul
cmps
outs
jge
jae
leave
fwait
rcl
idiv
xchg
xchg
fst
mov
mov
ss
lock
enter
test
inc
lea
jecxz
xor
sub
sub
push
adc
sbb
mov
mov
icebp
scas
add
adc
pop
xchg
out
sub
mov
jl
push
dec
sbb
loop
pop
jecxz
pushf
pop
mov
stc
add
inc
loop
dec
inc
lock
adc
pushf
jo
in
mov
add
sub
leave
and
int3
mov
fdiv
xor
xor
or
cmp
pop
std
out
imul
daa
xchg
loope
in
mov
lods
push
jne
shl
retf
sbb
retf
mov
sbb
(bad)
fld
repz
cmps
mov
mov
or
bound
bnd
clc
stc
xchg
cmp
aas
mov
stos
rep
dec
movs
fdecstp
(bad)
call
cwde
xchg
lods
lds
shr
mov
fdivr
js
in
lods
data16
sub
inc
aam
push
int3
pop
ins
xchg
das
sbb
push
rcl
sub
lods
shl
loop
(bad)
les
loopne
cmp
cdq
mov
fild
inc
in
xchg
in
sti
xchg
outs
nop
or
mov
imul
inc
add
and
stc
stos
pop
mov
pop
out
xchg
jb
cmc
mov
neg
add
dec
mov
jge
lock
pop
or
cmp
jge
xchg
je
ret
lock
jge
xlat
ins
xchg
mov
out
xchg
sbb
mov
(bad)
mov
popf
and
in
pop
stos
cmp
add
es
mov
sbb
fisub
jne
out
cli
pop
mov
xor
cli
ror
jns
into
mov
loop
mov
cmp
xchg
jecxz
mov
inc
or
shr
(bad)
(bad)
shl
sbb
cmps
or
das
xor
addps
mov
push
cmp
and
ds
ficom
sbb
or
jp
in
cmp
ret
inc
xor
repnz
dec
mov
add
push
push
mov
and
outs
mov
sub
aam
pop
xor
sbb
cli
pop
xchg
push
adc
imul
mov
jge
xchg
pop
rcr
(bad)
mov
clc
push
mov
in
adc
retf
test
rcl
xor
arpl
xchg
add
mov
sbb
adc
lods
lds
mov
or
enter
mov
or
push
mov
sbb
adc
xor
adc
mov
into
rcl
xchg
xchg
and
jmp
ins
mov
(bad)
(bad)
dec
and
push
cmp
cwde
xchg
inc
(bad)
lock
imul
(bad)
frstor
mov
stos
push
fnstsw
mov
jmp
sbb
out
(bad)
fs
scas
dec
imul
or
inc
cdq
or
or
retf
sahf
loopne
dec
sbb
adc
bound
xor
push
mov
leave
call
fstp
mov
and
mov
lahf
add
sub
fmul
mov
xor
out
test
xchg
aad
out
or
call
mov
lahf
pop
stos
rcl
lahf
popa
adc
xchg
jge
and
pmaddwd
adc
outs
icebp
test
loopne
cmp
and
movs
seto
sbb
sti
mov
sbb
stos
cmp
(bad)
pop
dec
nop
push
int
push
and
out
inc
pop
mov
jmp
and
shl
jl
pop
fist
ffreep
repz
cmp
lahf
adc
mov
mov
outs
dec
sub
push
sub
add
xor
adc
pop
add
daa
popf
sbb
push
add
ror
fild
jno
sbb
movs
jge
cs
sti
movs
push
in
lods
cmp
bound
dec
idiv
mov
nop
jg
xlat
mov
and
outs
push
retf
xchg
cld
mov
fadd
ret
pop
push
(bad)
dec
imul
xchg
rcr
(bad)
into
push
jno
aaa
outs
test
fnsave
push
iret
(bad)
int
fdiv
mov
shl
push
xchg
mov
(bad)
int
inc
inc
into
mov
or
jl
pop
cmp
fcomp
mov
or
iret
xchg
mov
les
and
test
data16
xor
ins
dec
mov
sub
in
in
pop
pop
xlat
movs
scas
mov
(bad)
(bad)
jl
push
pop
gs
fwait
dec
push
sar
inc
sti
mov
and
enter
ss
push
push
add
hlt
mov
dec
push
rcl
cwde
scas
out
xchg
fild
jb
dec
iret
rcr
mov
dec
dec
iret
sbb
xchg
bound
mov
jmp
push
xchg
push
sub
inc
pop
ss
mov
dec
les
mov
lahf
outs
sub
ror
and
cmps
add
aaa
cwde
jl
jno
arpl
hlt
jmp
int
scas
mov
out
xor
ret
dec
cwde
push
hlt
cli
fwait
lahf
outs
sar
xlat
xor
and
sti
imul
out
mov
stos
and
dec
adc
fnstsw
mov
shl
cmp
test
ds
dec
or
mov
aam
out
clc
cli
add
jmp
addr16
outs
fs
dec
add
adc
arpl
cmp
cmc
push
mov
aas
pop
mov
int
rol
retf
(bad)
mov
in
xchg
test
xor
mov
sub
jge
clc
enter
shl
xor
aad
pusha
add
mov
in
lea
dec
push
mov
sahf
pusha
xor
or
out
aam
xchg
popf
aas
es
push
and
cli
shl
das
cmp
jnp
adc
movs
sbb
push
arpl
fwait
pop
es
and
ins
pop
call
test
inc
lock
imul
jae
mov
in
mov
inc
dec
xchg
bound
push
cmp
jecxz
xchg
cwde
into
mov
in
pop
jb
dec
dec
pop
jmp
mov
std
adc
outs
inc
mov
ss
xchg
jge
adc
add
ficom
repz
mov
aad
jno
xlat
inc
sub
mov
fs
mov
rcr
add
adc
cs
or
sub
sub
sbb
pushf
cmp
leave
push
or
xor
cmp
pusha
imul
(bad)
pop
jmp
inc
sub
dec
adc
sbb
xor
adc
js
push
jo
icebp
jge
scas
push
pop
add
call
mov
or
pop
mov
pop
loope
mov
out
call
sub
sbb
lea
pop
rcr
dec
xlat
jbe
or
and
inc
fadd
(bad)
cli
iret
(bad)
sbb
pusha
xchg
ins
mov
repnz
mov
push
mov
xchg
(bad)
repz
jbe
scas
cmp
cmp
cmps
fnstsw
and
cld
loope
mov
cli
shl
jbe
(bad)
jg
out
and
cmc
jecxz
aaa
popa
mov
in
inc
mov
pop
inc
sti
test
bound
push
pop
push
(bad)
call
push
shr
xor
and
or
(bad)
pop
cmp
mov
aam
sbb
sub
repnz
cmps
out
movs
(bad)
sbb
xor
sub
xchg
add
aam
pop
pop
inc
pop
sbb
imul
and
cwde
sub
aam
mov
ja
ficomp
lahf
rcl
inc
es
mov
xor
outs
icebp
ror
cmp
sub
(bad)
out
cmc
aam
jmp
jmp
lods
repz
mov
dec
cmp
das
sub
push
dec
retf
jecxz
dec
lds
out
into
xlat
cld
xchg
je
inc
mov
cld
iret
pop
mov
lods
inc
xchg
push
frstor
inc
pop
sbb
xchg
inc
ror
movs
or
jo
adc
mov
add
and
cmp
mov
cdq
jb
repnz
xor
sub
fld
xor
cmps
push
adc
jge
into
push
jle
(bad)
shl
fwait
adc
dec
int3
mov
(bad)
shr
fidiv
jl
inc
push
mov
and
iret
mov
cwde
or
sub
mov
sahf
sar
mov
mov
pop
xchg
inc
(bad)
jge
stos
jl
mov
repnz
jbe
shl
dec
loop
fdiv
ins
sub
shrd
bound
fld
mov
sub
xchg
mov
cmp
bound
ss
jbe
xchg
adc
dec
popf
add
mov
jns
test
popa
jno
dec
sub
stc
ja
loop
sti
les
mov
dec
add
call
cmp
(bad)
cmp
or
ja
mov
das
pushf
push
and
lahf
ror
dec
cmc
sahf
in
lds
je
je
je
inc
aaa
mov
enter
rcl
dec
or
and
xchg
test
daa
mov
add
dec
stos
ret
outs
ret
xchg
sbb
and
cmps
mov
mov
ins
lods
mov
iret
add
lock
mov
sub
pop
in
or
bound
adc
xchg
mov
test
sti
xchg
rol
repnz
xor
adc
mov
inc
dec
jle
pusha
scas
js
mov
cmps
scas
retf
cld
and
outs
push
leave
lahf
push
out
stos
inc
adc
ja
lds
test
and
ret
pop
mov
ins
xchg
icebp
in
xchg
pop
cmp
cmp
test
push
fldz
loopne
(bad)
cmp
cs
ins
out
iret
sbb
jmp
das
push
cdq
add
pop
xchg
pop
sbb
or
xchg
inc
and
jb
arpl
jnp
add
shl
int
daa
ins
push
sbb
stos
sub
mov
les
pop
jae
in
mov
imul
cmps
or
xchg
jp
jno
fidiv
mov
pop
mov
jp
cs
outs
imul
or
stos
stc
lods
inc
lahf
inc
xor
adc
mov
(bad)
fisttp
pop
cmp
add
shl
stc
cmc
fnsave
mov
aam
sub
dec
xchg
retf
stos
mov
push
dec
mov
and
cmps
jp
(bad)
jmp
(bad)
push
adc
aam
ins
ins
xchg
daa
and
inc
sbb
mov
aam
iret
int3
lds
mov
pusha
push
out
std
mov
jecxz
lds
ins
pop
mov
jmp
inc
das
push
mov
lahf
ja
outs
push
mov
popf
pop
addr16
neg
adc
cmps
pop
mov
inc
xor
lock
or
pop
jbe
push
loop
jnp
es
in
inc
xor
lahf
mov
mov
sbb
or
(bad)
mov
out
and
popf
(bad)
test
(bad)
sbb
add
test
loope
or
mov
xchg
bound
(bad)
std
imul
lods
nop
call
lds
data16
into
jns
push
xchg
cmp
loopne
dec
mov
mov
xchg
inc
push
int3
enter
(bad)
cmp
test
and
add
or
popa
push
inc
jnp
push
sbb
jp
rcl
out
push
fwait
into
icebp
movhps
pop
ret
jnp
cs
inc
dec
add
fst
test
out
or
ds
lods
fnstenv
mov
jnp
dec
out
movs
xchg
xor
push
and
mov
cmp
lahf
adc
or
sbb
outs
adc
ins
lea
cmp
cdq
or
pusha
(bad)
aam
test
sub
inc
adc
movs
push
or
pop
pushf
or
fistp
test
xor
push
not
jmp
out
xchg
mov
call
push
cmps
(bad)
in
out
pushf
jbe
cwde
imul
adc
int
pop
push
mov
inc
inc
inc
daa
jno
call
inc
mov
aas
fs
lea
aam
jmp
push
popa
shl
call
inc
cld
js
sti
jo
xor
ins
sub
cwde
ins
vsqrtsd
add
cmp
mov
test
shr
out
mov
icebp
dec
xor
clc
xor
mov
sub
lods
mov
fsub
aas
mov
sub
test
in
fild
imul
movs
ret
xchg
mov
or
dec
push
pop
jge
cmp
out
into
xor
or
outs
aas
fwait
popf
pop
sbb
outs
enter
xor
inc
sub
test
jle
mov
fwait
jle
inc
and
inc
fwait
and
sbb
mov
adc
mov
mov
cmp
out
outs
mov
fdivrp
inc
cdq
adc
jb
push
xlat
xchg
imul
push
jle
neg
mov
loopne
addr16
jae
gs
gs
dec
mov
mov
and
iret
int
fs
test
jmp
push
test
mov
test
out
ja
cmp
out
nop
dec
dec
sbb
das
mov
scas
pop
shl
arpl
out
add
movs
xlat
cmp
pusha
push
scas
sub
adc
jbe
or
popa
mov
ret
pop
xchg
fld
push
mov
jno
arpl
inc
out
jb
sbb
cs
and
fs
daa
inc
ret
(bad)
cmps
fcom
push
out
fimul
sub
popa
dec
lods
das
ja
jne
movs
sub
call
xlat
jne
out
cmp
mov
sbb
lods
xor
(bad)
jg
mov
retf
cs
and
call
outs
fld
pop
aaa
xchg
test
mov
sbb
loope
popf
add
push
sub
call
inc
push
pop
retf
(bad)
into
arpl
push
dec
nop
shl
ins
adc
add
ficom
pushw
nop
scas
lds
mov
jns
or
lds
daa
(bad)
sbb
push
jge
(bad)
inc
outs
pop
or
out
stos
or
jecxz
jno
pop
test
sbb
cwde
out
(bad)
pop
jo
mov
sbb
bnd
fild
mov
dec
daa
mov
jbe
push
jns
mov
mov
aas
mov
loope
(bad)
fstp
push
sub
cs
xchg
push
addr16
test
bound
mov
and
inc
mov
and
sahf
inc
pop
fs
or
ret
pop
loopne
loop
push
movs
sbb
sub
push
push
ja
repz
inc
jg
into
inc
movs
and
dec
clc
xor
jo
rcl
lahf
(bad)
data16
adc
xchg
push
fisubr
gs
ret
data16
bound
cmp
jg
fisub
stos
idiv
cmp
popf
and
dec
aaa
cmc
and
mov
mov
rol
mov
fwait
mov
pusha
sbb
cmc
xor
(bad)
pop
fistp
push
cmc
inc
ss
ret
mov
adc
jle
cmc
mov
fnstenv
retf
mov
jecxz
jae
sub
push
push
pop
sub
loop
adc
movs
mov
jbe
rcl
rol
fst
adc
stos
mov
in
(bad)
mov
ds
mov
neg
clc
push
(bad)
out
push
out
invd
or
push
mov
cli
fs
push
(bad)
rep
std
jge
shl
push
mov
jecxz
or
ret
mov
imul
mov
hlt
lea
fucom
dec
dec
stc
inc
push
imul
das
and
sub
ds
(bad)
in
mov
lods
enter
mov
ja
and
cmps
adc
int3
nop
mov
mov
icebp
mov
mov
aad
push
jae
mov
adc
xchg
adc
dec
wrmsr
sbb
jbe
je
sbb
xchg
mov
jmp
fsubr
add
inc
and
mov
push
cld
std
pop
lods
movs
xor
test
fidiv
and
(bad)
out
iret
sbb
out
fwait
lods
int3
jle
adc
jno
push
mov
or
enter
or
xchg
dec
and
mov
jl
sbb
ret
pop
adc
inc
xchg
loopne
retf
js
mov
loopne
xchg
xchg
add
maxps
aas
sahf
or
imul
stos
fsubr
imul
sbb
xor
xchg
mov
mov
outs
sub
mov
div
shl
cmp
(bad)
mov
mov
mov
nop
xchg
push
js
fiadd
inc
cmp
cmps
or
pop
ins
or
loopne
aaa
outs
imul
sub
adc
or
and
jle
mov
cmp
mov
pop
cmp
dec
jns
(bad)
cmp
xchg
(bad)
inc
adc
aaa
sbb
adc
jns
mov
jno
rcl
jns
div
(bad)
xchg
and
add
js
lods
xchg
mov
popf
dec
leave
inc
mov
ins
ror
ja
push
test
sbb
xchg
or
test
sbb
cmp
(bad)
jle
adc
retf
pop
inc
enter
add
sub
int
mov
jno
test
in
fiadd
mov
(bad)
jns
and
outs
leave
inc
(bad)
fidivr
jle
out
enter
(bad)
dec
in
loopne
jl
xchg
into
and
xchg
pop
push
sbb
cmp
(bad)
or
mov
scas
ds
xchg
mov
stc
loope
mov
cmc
scas
pop
xor
xchg
xchg
fcmove
std
xor
pop
xchg
je
pop
and
fld
mov
ins
inc
mov
mov
call
push
xor
stc
clc
retf
dec
shr
mov
retf
xor
cwde
xchg
int3
fs
dec
and
sub
mov
imul
mov
pushf
push
push
and
xor
cmp
and
and
pushf
test
dec
in
mov
pop
adc
dec
mov
les
mov
xchg
repnz
cs
dec
sbb
mov
scas
jmp
shl
in
add
mov
dec
outs
push
sbb
pop
or
add
scas
adc
and
out
push
out
pop
xchg
mov
idiv
xchg
mov
mov
inc
aaa
ins
ins
and
test
ins
mov
into
and
cdq
call
or
push
jo
neg
push
xchg
sbb
xlat
test
(bad)
jmp
push
pop
sbb
xor
movs
je
sbb
jbe
ins
xor
cmc
cmp
int3
mov
cmc
push
push
outs
add
imul
lods
mov
mov
jl
test
pop
adc
es
push
sahf
cld
arpl
out
sahf
xlat
add
ds
mov
cmp
cs
jp
mov
inc
pop
mov
repnz
rcr
lock
xchg
mov
dec
xchg
or
loop
xor
jne
jno
cmp
mov
das
pop
and
xchg
and
inc
mov
dec
mov
cvtpi2ps
frstor
std
das
or
lods
loop
call
mov
cmps
xchg
(bad)
cmp
call
jl
repz
hlt
enter
addr16
jo
movs
pop
rol
fwait
icebp
aad
fucomi
xor
add
jmp
dec
dec
push
sub
mov
call
es
fisttp
out
or
cdq
adc
and
jns
mov
in
cmp
loopne
in
pop
movs
pinsrw
add
sbb
inc
jnp
lods
shl
imul
sub
sub
call
(bad)
pop
sub
mov
adc
jb
sub
(bad)
xchg
sub
xlat
xor
cmp
mov
inc
adc
enter
outs
cmp
adc
shl
mov
imul
pop
push
cmp
in
arpl
vmulsd
hlt
add
mov
mov
cmps
inc
scas
sub
jns
adc
test
lock
vcmpps
ins
xor
or
dec
in
push
fcomp
(bad)
in
and
dec
sbb
push
mov
sub
lahf
adc
mov
pusha
add
mov
loop
pop
xor
test
in
mov
mov
(bad)
mov
(bad)
retf
cmp
sbb
push
ss
or
push
cmp
shr
cwde
sbb
pop
es
out
xor
ror
mov
movs
push
outs
int
gs
sbb
add
enter
cmc
xchg
retf
lods
retf
dec
jmp
ds
adc
lock
aas
add
sbb
sub
xchg
sbb
aaa
inc
dec
fadd
jnp
out
pusha
inc
jo
into
adc
jle
lods
jbe
ret
mov
popa
xchg
dec
jl
test
add
mov
xchg
sub
xlat
aas
pop
mov
sub
dec
lock
sbb
jo
es
or
xor
inc
pusha
pop
ficomp
jb
and
fwait
dec
dec
push
leave
popf
sbb
add
(bad)
pop
in
enter
ins
fdivr
jbe
jmp
sbb
xor
dec
pop
pop
or
sbb
mov
xchg
and
dec
adc
sbb
dec
or
stos
aaa
icebp
adc
dec
movs
mov
push
add
mov
mov
pop
xchg
and
adc
movs
lahf
ja
dec
xor
adc
push
adc
and
repz
(bad)
sti
outs
shr
test
dec
sub
mov
fld
jle
dec
(bad)
dec
into
je
(bad)
shl
in
icebp
pushf
mov
jno
leave
sbb
cli
lock
sbb
lock
xchg
pushf
mov
inc
mov
and
in
outs
das
push
and
pop
out
shld
mov
cmc
cmp
sub
clc
cmc
adc
push
push
arpl
(bad)
out
inc
arpl
je
dec
leave
ss
arpl
test
xor
std
scas
dec
xor
inc
shl
jnp
adc
cmp
fld
retf
cmp
addr16
and
clc
mov
pusha
xchg
pop
ss
xchg
(bad)
jae
nop
jne
cmp
test
mov
inc
jae
movs
cmps
adc
out
xor
pop
das
xchg
pop
xchg
and
mov
out
cdq
mov
inc
push
aaa
cmp
cmp
out
xchg
mov
rcr
dec
jle
push
mov
je
mov
and
mov
dec
pushf
or
ins
(bad)
mov
sub
jb
out
out
stos
dec
test
jecxz
into
xchg
test
xchg
adc
push
push
ret
sbb
mov
aas
xchg
nop
sbb
jl
sbb
pop
(bad)
hlt
imul
jge
or
sti
mov
jne
mov
jmp
outs
adc
push
ins
lods
mov
xor
mov
cmp
inc
sub
cmp
cmc
out
mov
je
push
(bad)
test
pop
ins
movs
pop
mov
out
or
add
add
call
jno
fdiv
pop
mov
in
xor
cmc
scas
and
sbb
test
jns
mov
leave
pop
test
mov
push
inc
lock
jno
dec
lods
pusha
and
fcmovnu
cmp
push
sub
or
ins
mov
add
cmp
sar
int
dec
pusha
fnstenv
push
and
or
add
sub
pop
jnp
fidiv
and
in
jle
push
and
mov
mov
out
mov
rol
xchg
out
mov
jo
xor
lahf
call
push
add
xchg
adc
push
mov
call
js
je
lods
jno
out
sub
rsqrtps
mov
sahf
rcr
xor
jae
sbb
(bad)
cli
ins
cld
mov
out
retf
jo
jmp
dec
scas
fisttp
mov
xor
psllw
rcr
scas
leave
daa
dec
lods
inc
inc
cld
xchg
jmp
jb
sbb
or
(bad)
fdiv
loope
out
sub
sbb
sbb
push
sbb
retf
mov
(bad)
gs
cmp
push
sar
sub
or
test
sub
xchg
push
rcl
retf
je
cmp
jmp
test
pusha
xor
mov
mov
mov
push
(bad)
pop
xchg
pushf
push
imul
jnp
and
iret
mov
jbe
mov
xchg
mov
adc
retf
xor
sub
mov
cmp
mov
xor
and
inc
and
test
stos
sub
(bad)
loopne
addr16
daa
out
jns
cmp
test
fnstsw
pop
jo
and
lea
scas
leave
fcomp
fist
lds
les
ins
test
stc
inc
fild
mov
mov
xchg
stos
and
call
mov
retf
hlt
dec
pop
mov
lock
lods
(bad)
je
inc
(bad)
lahf
cmp
adc
jbe
test
pop
rcr
imul
icebp
sub
ret
pop
rol
dec
enter
int
fsub
rcl
push
or
xchg
test
ss
jmp
pop
push
push
(bad)
pop
dec
in
xor
mov
in
dec
mov
push
sub
rol
into
jae
pop
(bad)
mov
jl
fcomp
jbe
cwde
and
add
retf
loopne
mov
mov
adc
rol
pop
pushw
nop
test
jp
div
test
push
fs
xchg
gs
test
lea
sub
inc
dec
data16
cmps
jmp
in
cmp
jb
and
push
ss
inc
or
or
mov
imul
out
test
mov
std
in
in
fisttp
dec
inc
aas
mov
sbb
loope
and
mov
out
icebp
(bad)
mov
outs
(bad)
add
call
or
xor
inc
call
jbe
fucom
cmp
cdq
hlt
jp
pushf
adc
jno
sbb
xchg
mov
add
std
add
call
xor
(bad)
or
push
or
cmp
inc
mov
mov
aas
adc
jno
pop
lods
stos
call
adc
inc
push
jmp
dec
cwde
cdq
push
jmp
repnz
call
mov
into
or
push
jp
test
or
inc
sbb
pop
xlat
sub
xchg
(bad)
push
sub
jno
pop
ficom
mov
sbb
fistp
mov
pop
jp
dec
sbb
push
sbb
ret
xchg
or
xor
call
pushf
fcomp
add
in
add
stc
pop
inc
movs
fsub
cmp
xchg
shl
mov
cmp
leave
xchg
or
add
pop
push
cmp
fs
ss
arpl
jne
or
cs
int
jl
xchg
mov
pop
movs
jl
sub
mov
dec
push
(bad)
cwde
mov
mov
aas
sub
pusha
mov
je
clts
and
mov
add
push
or
pop
add
sbb
xchg
(bad)
call
or
dec
pop
cmp
fsubr
jmp
xor
aaa
scas
xor
mov
adc
sbb
stos
and
push
push
xor
adc
sub
out
imul
jne
lds
gs
arpl
cmps
ja
mov
or
add
(bad)
mov
and
pop
test
je
aam
pop
out
fistp
and
stos
test
call
mov
jae
dec
inc
iret
mov
mov
ror
and
adc
faddp
shl
test
mov
sbb
jle
and
div
das
lahf
mov
pop
mov
int3
add
mov
fsub
mov
or
lods
mov
aaa
jne
in
mov
push
daa
out
shr
into
dec
jle
inc
(bad)
das
ins
sbb
cwde
jnp
sub
arpl
data16
test
jns
and
jo
mov
sbb
gs
mov
and
je
jmp
iret
or
push
push
jl
cmps
push
test
push
xor
adc
cmp
sub
sbb
fimul
js
(bad)
std
mov
push
inc
cdq
lods
jle
cmp
pop
jae
cmp
sti
jl
mov
add
xor
inc
push
pop
aaa
call
or
add
push
cs
fisttp
scas
or
push
push
fnsave
pop
xor
jge
or
jmp
or
rcl
pop
retf
push
test
push
icebp
sub
push
(bad)
sbb
mov
inc
mov
scas
inc
push
push
cmps
jge
jnp
and
add
cmp
mul
inc
es
gs
nop
inc
in
(bad)
dec
mov
sub
sub
cmp
dec
xor
push
scas
out
xchg
or
inc
ds
sub
outs
inc
sbb
mov
push
mov
ret
or
or
inc
push
xor
cmps
rol
imul
and
mov
xor
adc
test
or
fsubr
mov
in
push
(bad)
sub
push
stos
xchg
imul
icebp
call
sub
sbb
pop
push
leave
inc
rcl
test
pop
data16
mov
bound
add
xor
icebp
ret
shl
and
mov
mov
pushf
es
enter
sub
or
add
sub
cmp
sbb
test
pop
push
jae
je
das
jbe
sub
xor
dec
mov
pop
jns
jecxz
sub
sahf
mov
scas
inc
inc
push
pop
sbb
scas
inc
lods
in
rcr
pop
daa
xor
cli
out
cdq
mov
mov
int3
add
add
js
jl
pushf
call
push
leave
clc
ret
cmp
xchg
xchg
mov
int3
mov
lods
mov
sbb
pop
les
adc
int3
call
sysexit
(bad)
mov
sbb
xor
loope
cmp
dec
rcl
sar
jns
pop
psadbw
mov
mov
and
cwde
cdq
dec
(bad)
lea
sar
sub
and
jbe
or
fadd
xchg
or
in
add
mov
data16
into
xor
loop
cmps
cmps
ror
popa
mov
cmp
pop
enter
imul
lahf
(bad)
mov
fisub
fwait
push
data16
mov
icebp
push
dec
pop
pop
pop
push
mov
inc
test
loopne
lahf
mov
rol
inc
lds
push
mov
push
pop
test
movs
ret
mov
and
movs
fild
shr
aad
lods
xor
lods
test
push
lock
sub
rcr
or
(bad)
and
out
push
xor
int
inc
adc
nop
sub
in
test
sbb
inc
jmp
inc
xchg
push
or
fbld
je
call
push
xor
push
arpl
push
hlt
xchg
call
fidiv
test
dec
or
loope
add
sbb
mov
mov
pushf
in
lock
mov
inc
cdq
cli
call
dec
lds
nop
out
mov
xchg
lahf
mov
xor
pop
push
or
fs
(bad)
stos
outs
bound
hlt
add
(bad)
repnz
lock
xor
(bad)
data16
push
xor
mov
jmp
fcmovnu
jle
popf
xchg
push
inc
xor
jnp
mov
or
test
loopne
(bad)
lahf
cmps
push
mov
ds
cmps
mov
pop
or
mov
pop
fsub
sbb
faddp
mov
into
inc
push
inc
inc
cmp
add
test
jl
push
push
and
dec
mov
jbe
adc
pop
push
xor
mov
retf
or
mov
fucom
sti
push
or
sbb
jecxz
aad
js
mov
push
loope
dec
nop
cmp
clc
shr
mov
loope
mov
sub
xchg
sti
test
sbb
mov
cli
icebp
adc
lea
jo
ja
retf
pop
mov
cmc
idiv
imul
pop
sbb
xchg
xchg
stc
or
xlat
popa
xchg
pushf
setae
in
arpl
test
pop
push
inc
dec
xchg
out
jg
mov
cmc
jns
jmp
cwde
jno
sbb
mov
inc
or
pop
(bad)
jnp
and
dec
arpl
jg
mov
repnz
sbb
mov
shr
sbb
jmp
xchg
aad
sub
outs
xor
adc
int
test
ins
das
in
jne
icebp
mov
(bad)
addr16
lea
or
pop
(bad)
sbb
enter
scas
pop
out
int3
dec
mov
repnz
fprem1
add
aad
sahf
pop
fmul
mov
jns
xchg
test
(bad)
add
test
mov
gs
mov
mov
mov
dec
rcl
adc
scas
jb
(bad)
pop
jns
jno
out
mov
mov
shl
lea
xchg
into
mov
mov
cmp
(bad)
out
push
or
call
sbb
jmp
rcl
ins
rcr
mov
adc
mov
loope
loope
icebp
xchg
sub
dec
iret
push
out
jb
or
adc
aas
cdq
push
jle
inc
inc
dec
arpl
aas
lods
sub
pop
jmp
push
(bad)
pop
and
popf
push
or
mov
add
pusha
std
lods
dec
cmp
sbb
push
mov
and
call
retf
mov
ror
adc
or
rol
ficom
sbb
(bad)
push
mov
mov
movs
mov
pop
pop
call
cmp
jne
sub
xor
in
and
ins
mov
xchg
push
xor
mov
leave
mul
add
test
adc
pop
cmp
or
(bad)
mov
out
popf
inc
pop
sub
lds
or
(bad)
push
or
xchg
jne
adc
or
sar
xor
mov
xchg
sbb
inc
popf
jae
adc
xor
mov
mov
lahf
dec
inc
mov
jnp
sbb
inc
(bad)
dec
jno
add
xor
and
dec
mov
push
and
or
icebp
repz
xor
sbb
mov
iret
movs
and
and
mov
gs
push
loopne
ds
xchg
adc
sub
push
addr16
mov
mov
nop
ret
mov
dec
add
and
pop
outs
sub
jmp
mov
repnz
out
dec
popa
xchg
loop
jg
test
or
jp
data16
push
ret
pop
add
jge
popf
fiadd
jo
mov
rcr
(bad)
popa
jo
ins
pop
or
add
dec
dec
and
mov
clc
out
adc
retf
aam
push
and
push
jl
cmps
idiv
std
imul
cmp
mov
(bad)
aad
data16
dec
dec
test
dec
mov
add
xchg
daa
mov
mov
out
(bad)
pop
cmp
retf
pusha
push
dec
jge
adc
hlt
ss
cmc
dec
(bad)
fild
xchg
adc
push
push
sbb
add
xor
(bad)
out
aam
sti
int
pop
xor
dec
push
and
sub
mov
adc
ins
(bad)
push
jle
lahf
pop
jge
xchg
mov
push
dec
add
mov
in
pop
movs
or
lods
fidiv
push
xchg
leave
sub
rol
rol
std
mov
ins
leave
push
cld
jae
enter
mov
outs
hlt
jge
enter
mov
jnp
neg
in
cmp
or
cwde
pop
cli
jns
lods
mov
inc
adc
ins
gs
bound
retf
shl
add
in
sahf
inc
and
inc
or
xchg
mov
nop
mov
rcl
mov
fidivr
mov
outs
and
outs
mov
jae
push
vpavgw
sbb
add
push
ins
jmp
mov
xchg
cli
shl
popf
mov
pop
(bad)
fdiv
call
sub
or
(bad)
iret
sub
hlt
adc
inc
sbb
pop
mov
fld
mov
pop
fbstp
fbstp
push
jecxz
dec
pop
ret
int
adc
sbb
adc
shr
jae
sub
push
push
sub
push
int
mov
pop
popa
push
sbb
popa
data16
pop
fxch
adc
xor
push
stos
inc
sub
iret
mov
ror
or
inc
pop
jb
sub
jo
or
js
jns
je
jae
adc
mov
mov
out
dec
leave
call
out
dec
mov
xor
aaa
neg
mov
movs
sub
stc
adc
rol
cld
jg
cli
push
sahf
push
push
sub
(bad)
shl
scas
sbb
jp
(bad)
mov
rol
pusha
(bad)
pushf
xlat
outs
fld
sub
sbb
push
ins
fbld
jge
call
mov
mov
xor
mov
xchg
je
jno
jmp
addr16
movs
(bad)
mov
fidiv
xor
dec
jmp
jo
test
adc
lods
fwait
clc
adc
out
xchg
jns
stos
mov
(bad)
loope
mov
(bad)
pop
push
cmp
xchg
or
adc
mov
dec
pushf
repnz
jnp
add
xchg
mov
mov
out
mov
inc
push
mov
and
push
retf
and
aad
scas
out
mov
dec
adc
in
add
mov
and
pop
aas
loop
dec
push
iret
inc
jno
xchg
push
icebp
and
lds
pushf
mov
int
ins
outs
popf
es
pop
fstp
div
cmp
xor
sahf
xchg
repnz
and
cmp
cmps
(bad)
sbb
cdq
xchg
test
pop
lods
and
sbb
or
imul
lock
mov
dec
mov
push
xor
ins
stc
add
inc
adc
cld
pop
pusha
das
int
mov
test
lods
shr
jnp
cmp
outs
lods
out
lock
outs
sar
cmp
dec
call
lahf
ins
jge
int3
dec
movs
out
stos
cli
(bad)
mov
mov
cmp
push
and
or
pop
and
ins
xor
dec
xlat
(bad)
in
mov
and
and
gs
pop
or
jae
push
add
(bad)
jb
pop
xlat
fdivp
cld
ret
fsub
add
mov
dec
push
push
pusha
adc
xchg
mov
pusha
push
addr16
jno
adc
imul
aas
imul
je
sub
jl
sub
dec
mov
pop
retf
loopne
je
aad
dec
(bad)
fiadd
adc
mov
adc
js
stc
aad
mov
mov
test
in
sbb
push
repnz
and
scas
cs
out
fnstcw
and
add
xchg
inc
(bad)
ds
rcl
popf
clc
jb
popa
jbe
sbb
mov
loopne
add
popa
push
fmul
jle
pop
hlt
shl
lahf
sub
ja
sub
aad
inc
ins
(bad)
idiv
mov
test
mov
inc
push
jne
lea
jecxz
push
je
or
cmp
push
xchg
outs
lahf
jl
pushf
jge
push
fnstenv
lea
mov
ds
enter
lea
fist
ror
lock
mov
sbb
ds
add
out
outs
popf
es
push
out
sub
xchg
add
mov
add
inc
inc
xchg
(bad)
in
inc
dec
mov
push
es
cli
adc
out
xor
push
xchg
(bad)
fisttp
dec
out
in
outs
xor
(bad)
jecxz
mov
adc
pop
loopne
cmp
cli
mov
or
mov
adc
ror
cmp
xor
xor
mov
nop
mov
scas
pop
mov
loope
inc
push
popa
or
inc
sbb
aad
imul
loop
mov
dec
jo
xor
cmp
and
lahf
fist
mov
fs
sbb
das
mov
call
lods
aas
popa
pop
mov
dec
lods
or
clc
push
xchg
push
jb
je
in
mov
jl
test
push
push
stos
test
inc
adc
cmp
mov
mov
fcomp
mov
sar
outs
mov
in
sar
xor
in
(bad)
out
out
cmp
add
repz
mov
jmp
mov
adc
and
and
inc
cmp
xchg
jecxz
and
fisub
(bad)
mov
ins
add
movs
dec
mov
enter
retf
movs
or
(bad)
mov
fsubr
cs
test
adc
call
mov
adc
out
out
push
mov
mov
push
pop
movs
idiv
int3
pop
inc
add
int3
jns
icebp
iret
cmp
push
pop
leave
je
push
xor
adc
sbb
push
outs
imul
cmps
ja
cmp
ins
adc
nop
scas
push
movs
pop
neg
mov
jbe
aas
or
ss
or
mov
pop
push
cmp
xor
xchg
mov
jns
in
push
jg
imul
(bad)
loop
int
add
icebp
mov
mov
cmps
ins
mov
(bad)
add
imul
mov
call
lods
test
pop
pop
sub
or
adc
xor
cli
mov
jno
mov
or
pop
aam
push
cmp
jo
jmp
mov
mov
cwde
out
adc
pushf
dec
cmps
jo
and
aaa
cmp
mov
xor
pop
nop
xchg
and
sbb
ror
xchg
dec
pop
ins
gs
jl
jne
pop
jmp
mov
dec
hlt
cmp
je
jbe
cmps
sbb
mov
xchg
lea
fisub
adc
sub
dec
push
jle
adc
pop
cmps
xlat
xor
(bad)
or
push
sbb
xor
hlt
test
mov
sbb
xlat
dec
jne
sti
es
inc
mov
push
or
in
les
mov
mov
mov
fist
xor
and
ins
xor
(bad)
test
xchg
mov
sahf
and
andps
xlat
pop
stos
popf
and
movs
ror
popa
inc
cmp
xor
ret
(bad)
mov
xor
sub
js
int
mov
sbb
and
sahf
repnz
je
add
std
push
popf
jo
hlt
sub
jle
xlat
div
add
cmp
ja
ror
repz
push
inc
mov
push
inc
enter
into
xchg
retf
aad
mov
in
dec
inc
pop
jg
mov
jne
add
dec
xor
xchg
popa
loope
shl
dec
add
rcr
sbb
cmp
xor
inc
cdq
dec
cmp
gs
mov
call
gs
fmul
pop
pop
jg
add
and
movs
inc
xchg
imul
jnp
or
pushaw
jno
in
outs
stos
mov
sub
inc
imul
push
push
xchg
push
aad
cmp
in
sbb
loope
das
ins
sub
push
scas
sub
scas
mov
aaa
out
or
cdq
jecxz
out
add
xchg
mov
adc
stos
int
adc
and
scas
push
les
cmps
xor
and
or
add
retf
dec
push
dec
aam
add
push
into
std
adc
jl
cmp
mov
das
je
xchg
adc
leave
xchg
pop
cs
cmp
push
cmps
aam
addr16
popf
les
mov
mov
sti
pop
xlat
fisttp
jo
jg
stc
xchg
int3
retw
jns
push
dec
jns
dec
mov
bound
mov
pusha
add
imul
pop
adc
jae
ret
dec
das
mov
lahf
clc
retf
enter
pop
xor
mov
inc
fstp
cmp
mov
jle
or
xlat
mov
jbe
aad
stc
xor
xchg
push
jnp
pop
fcmovnbe
dec
popf
bound
daa
test
xchg
inc
inc
inc
mov
mov
out
push
xchg
add
sahf
stos
or
cs
fist
ins
mov
cmp
mov
xchg
and
mov
mov
mov
mov
loop
sub
outs
mov
shr
outs
in
pop
mov
sbb
(bad)
out
push
iret
push
mov
xor
and
dec
es
and
in
cs
fild
push
or
cmp
fmul
fdivr
cdq
lock
enter
xlat
ret
mov
leave
sets
in
jae
fs
in
push
mov
sar
test
and
mov
loopne
stos
mov
jp
sbb
in
mov
jecxz
into
lods
out
jmp
add
push
pop
loopne
or
jae
addr16
fcomp
push
sbb
ins
mov
hlt
or
pop
or
mov
rcr
mov
adc
xor
loopne
adc
sar
add
push
das
aaa
sete
cdq
jmp
inc
pop
in
jae
leave
dec
aaa
xor
sub
cdq
out
pop
sti
std
push
mov
mov
scas
popa
or
inc
daa
inc
jns
xor
aam
cmps
ds
out
push
out
test
push
je
sub
sbb
das
cs
lods
cld
cld
stos
inc
lods
or
(bad)
push
sub
hlt
xor
in
arpl
xor
dec
pop
das
xor
popf
or
sbb
or
xchg
mov
xor
fist
ins
push
repz
out
popf
imul
jmp
test
push
popa
xor
and
jmp
pop
daa
popf
inc
out
imul
scas
add
loopne
leave
pop
out
jge
sbb
or
inc
fsubr
cld
repnz
xor
or
neg
fmul
pop
fwait
in
jae
mov
mov
jg
(bad)
scas
ins
(bad)
sbb
jl
cmp
fcom
or
push
daa
das
call
xchg
mov
inc
pop
pop
pop
mov
mov
adc
cmc
test
ss
jb
jns
aad
dec
sub
ret
dec
add
dec
ret
mov
jns
in
outs
(bad)
mov
inc
and
sbb
cmc
dec
xchg
cs
les
mov
inc
xor
xor
and
push
jo
sbb
add
bound
ins
mov
sub
xor
cs
nop
add
inc
adc
hlt
(bad)
sar
daa
adc
fwait
xchg
cmp
leave
gs
addr16
cmps
jne
dec
outs
mov
sub
(bad)
or
mov
pop
sahf
ins
je
aas
enter
ja
dec
mov
jmp
dec
cmp
xchg
scas
lods
hlt
iret
loope
push
sar
add
out
jns
xor
pop
(bad)
pop
xchg
retf
(bad)
test
push
adc
xchg
push
test
jbe
push
test
mov
fstp
cmps
add
out
stc
mov
nop
fs
mov
and
sbb
test
dec
in
in
clc
and
xchg
mov
gs
hlt
cmp
outs
inc
outs
sbb
mov
push
sub
sub
push
sub
jo
and
iret
in
jmp
mov
mov
nop
xor
inc
rcl
cmc
sub
std
jnp
(bad)
ficomp
lea
xor
inc
je
pop
js
enter
in
pop
dec
stc
call
out
jl
push
xor
pop
xchg
scas
cmc
clc
(bad)
push
pop
pop
mov
ret
fidiv
ror
inc
ficomp
push
pop
cmp
mov
std
loop
(bad)
jmp
out
jbe
mov
adc
es
sbb
aad
not
sbb
or
aas
(bad)
fcomip
pop
cmp
imul
out
jmp
leave
int
ja
popa
pop
xchg
jge
pop
bound
mov
in
dec
mov
jae
jo
pop
pop
repz
lock
test
lods
dec
pop
pop
jnp
jmp
pop
int
xor
sti
aam
dec
in
std
xchg
pop
mov
jns
inc
sub
pop
mov
pop
mov
push
and
cdq
sbb
jmp
hlt
cmc
cdq
gs
inc
(bad)
call
add
pop
inc
cmc
sbb
clc
jns
jae
data16
scas
jg
rcl
sub
and
addr16
jge
cld
aad
call
mov
mov
in
sbb
mov
or
fst
mov
mov
mov
xchg
dec
call
iret
out
sbb
aaa
mov
xor
mov
cmc
popa
call
out
pop
add
push
std
mov
adc
icebp
(bad)
xchg
fisttp
stos
xchg
and
add
popf
mov
shr
(bad)
repnz
push
inc
out
pop
les
pop
daa
ficomp
nop
out
pushf
xchg
pop
outs
ja
inc
jne
jle
out
jle
cld
imul
cmp
push
inc
repz
les
mov
movs
pop
xor
addr16
retf
cmp
adc
and
and
mov
stos
ret
push
sbb
ret
shr
popf
imul
adc
dec
test
push
and
cs
mov
fwait
sub
sbb
cwde
cmp
and
mov
lahf
adc
pop
xchg
adc
dec
je
xor
(bad)
mov
aaa
lock
ins
push
mov
call
nop
loop
mov
popa
(bad)
movs
stc
call
push
dec
jo
lahf
aad
int
inc
dec
call
lds
(bad)
jecxz
aam
in
and
icebp
pop
retf
sbb
nop
pop
mov
imul
mov
in
mov
cld
sbb
jne
je
fstp
pop
mov
xor
fimul
test
pop
mov
call
sbb
test
add
pop
jmp
cli
repnz
or
mov
sub
xor
idiv
xor
inc
add
stos
movs
mov
cmp
inc
mov
xor
call
shr
loopne
stos
inc
movs
jmp
push
push
(bad)
mov
cld
aad
push
fisttp
inc
and
(bad)
push
inc
daa
xchg
mov
scas
pop
and
stos
mov
xor
int
lods
cwde
shr
fidiv
xchg
out
arpl
mov
sbb
push
test
mov
test
inc
lahf
data16
inc
je
adc
pop
test
sub
dec
inc
mov
jmp
out
stos
sahf
je
inc
(bad)
cmp
cmp
push
fucomi
inc
sub
xor
or
cmp
cmp
and
pop
jle
loope
push
(bad)
(bad)
ret
fisttp
or
push
pop
icebp
cmp
xchg
dec
mov
es
cs
shr
pusha
or
push
adc
sbb
je
or
fldcw
jg
sub
push
inc
outs
(bad)
sub
fidiv
shr
inc
cmps
xor
mov
xchg
mov
repnz
or
test
ret
push
jle
add
mov
loop
xor
fdivr
sbb
loop
mov
jno
and
fsubr
or
sub
sbb
retf
nop
int3
mov
mov
xchg
xchg
aaa
dec
jb
xor
loop
ficomp
xchg
lods
iret
jno
jo
imul
push
and
fs
fmul
fidivr
fst
bound
cmps
and
dec
(bad)
jo
inc
(bad)
or
out
or
shl
rcl
inc
int
adc
mov
cdq
mov
push
jecxz
xchg
jo
icebp
push
mov
mov
dec
adc
inc
fwait
mov
cmp
jle
push
outs
stc
fsubp
nop
cwde
data16
push
push
dec
aas
cmp
call
mov
ja
mov
shr
gs
ds
aad
cdq
mov
mov
ret
xchg
adc
jle
add
sbb
add
ficomp
enter
pop
stc
inc
test
xor
dec
mov
in
rcr
mov
rcr
push
xlat
xlat
test
xor
repz
out
icebp
ja
inc
sbb
ss
add
sbb
adc
daa
jno
mov
shl
lods
push
dec
inc
xchg
sahf
movs
dec
into
adc
jae
xchg
mov
sub
dec
xchg
es
jl
mov
popa
cld
xchg
sahf
mov
retf
sbb
cmp
mov
idiv
xchg
inc
jmp
jnp
aad
sub
mov
je
dec
sub
and
mov
push
imul
jle
adc
cmp
or
(bad)
gs
dec
xlat
into
out
sbb
(bad)
call
pop
lds
mov
add
pusha
adc
fnsave
leave
ins
pop
jecxz
xor
push
push
push
mov
in
or
adc
or
jno
int3
(bad)
idiv
mov
sub
jle
lods
jno
dec
out
sbb
pop
int
xchg
bnd
hlt
fisttp
test
or
mov
cdq
or
mov
loopne
mov
jnp
out
inc
(bad)
cwde
sub
mov
jmp
iret
jp
add
xchg
mov
push
cmp
pop
jbe
pop
add
in
push
mov
push
pop
cli
mov
hlt
test
or
jns
mov
push
dec
arpl
sti
sub
pop
push
ds
push
push
pop
ja
ss
nop
popf
jae
aas
cmp
sbb
pop
cmp
dec
mov
jmp
adc
cmc
sub
pop
jne
(bad)
out
push
scas
hlt
push
pusha
loopne
mov
adc
pop
jl
mov
mov
aas
xor
ret
lock
out
sub
or
in
dec
adc
push
cmp
mov
out
ja
fdiv
loopne
loope
stc
pop
mov
or
ja
jns
pop
je
xchg
push
leave
push
out
pop
dec
ror
and
jp
xchg
imul
mov
popa
jge
jbe
jnp
(bad)
xchg
mov
push
push
push
push
test
inc
int
call
mov
dec
sahf
add
stos
jns
mov
int
adc
daa
mov
movs
enter
adc
sahf
sub
mov
aaa
loope
lods
stos
pop
mov
ins
imul
nop
dec
test
cwde
push
dec
aas
xor
mov
in
pusha
loop
call
neg
and
inc
pusha
ins
xchg
je
jp
mov
cmp
inc
bound
lock
mov
arpl
fs
rol
imul
adc
stos
sub
fld
add
lahf
xor
sub
gs
sar
es
inc
fs
mov
mov
mov
adc
mov
(bad)
mov
push
pop
mov
cmc
stc
movs
adc
dec
push
lods
xlat
jmp
push
repz
xor
outs
lea
sbb
mov
jle
nop
inc
fstp
push
out
ror
cli
adc
and
adc
mov
jmp
sub
xor
jg
mov
pop
mov
sub
cmps
xor
add
(bad)
or
cdq
mov
(bad)
sub
rcl
dec
jl
test
int
cmp
aaa
add
js
pop
push
sar
scas
mov
outs
test
mov
int
loop
mov
scas
dec
(bad)
out
xor
mov
ret
sub
adc
inc
inc
ins
push
das
mov
fbld
(bad)
fwait
inc
cmp
or
jp
jae
ror
lods
test
or
push
sbb
stos
ret
push
xor
mov
mov
rol
dec
or
(bad)
jge
and
pop
idiv
jne
dec
mov
fild
mov
dec
pop
pop
leave
jnp
and
icebp
call
dec
call
call
stos
jae
dec
mov
pop
push
cli
inc
dec
mov
cli
mov
jg
aam
mov
jno
push
mov
mov
mov
(bad)
mov
mov
adc
pop
cmp
imul
sbb
imul
jmp
js
push
fwait
out
cmps
push
fcmovnu
sbb
cld
fcom
int
dec
pop
hlt
out
aas
push
dec
(bad)
and
mov
in
mov
scas
(bad)
mov
repnz
pop
je
or
inc
daa
jns
jmp
lods
mov
(bad)
inc
scas
adc
imul
pop
ins
and
lds
sub
mov
and
and
xchg
fwait
cdq
cmp
cs
xor
stos
adc
out
loope
mov
out
mov
daa
iret
adc
aas
jg
cwde
inc
add
xchg
or
sar
add
fnstcw
mov
test
sti
lds
inc
cld
push
into
mov
mov
add
mov
mov
pop
ret
data16
or
addr16
in
dec
mov
mov
dec
dec
test
or
push
and
xor
xchg
stc
ss
xor
mov
ds
in
and
xlat
mov
push
xchg
pop
mov
add
adc
push
loop
sti
imul
rol
imul
or
sahf
fsubrp
cs
repz
jns
stos
call
xor
cdq
sub
rcl
or
rol
pushf
sub
mov
push
push
jbe
loope
rcl
es
aam
add
mov
fdiv
xchg
add
icebp
xchg
xor
out
pusha
sbb
arpl
cwde
push
retf
add
loopne
mov
push
or
pop
sbb
adc
xchg
sahf
pop
test
(bad)
jg
imul
ret
cs
pop
repnz
pop
loop
aad
retf
loope
jmp
ret
js
mov
mov
adc
sub
or
dec
jb
lock
ret
pop
jbe
mov
xor
dec
jg
fucomp
retf
shl
push
movs
or
popf
sbb
js
jmp
nop
add
xlat
push
rcl
push
loop
sub
rcr
jmp
jne
jge
jo
out
in
push
sahf
add
add
mov
inc
rcr
aam
push
pop
sahf
repnz
or
rol
das
dec
mov
push
add
or
shr
dec
call
(bad)
mov
xchg
arpl
int3
jnp
and
push
test
add
das
ret
add
jns
int3
xchg
dec
xor
jp
cmovo
pop
lea
xor
stc
inc
ss
outs
inc
push
shl
fst
es
bsf
mov
into
ins
add
arpl
cwde
adc
outs
cmp
mov
mov
jp
jbe
pop
data16
or
cli
scas
dec
push
fstp
xor
xchg
cmp
fidivr
pop
mov
dec
lods
sahf
popf
mov
and
dec
pop
add
mov
and
dec
jmp
add
repz
push
(bad)
and
ins
jl
ret
test
lods
cmp
mov
adc
add
mov
sub
retf
adc
xlat
dec
lods
std
mov
out
lahf
push
mov
jne
add
ror
and
sub
jle
int
fs
fiadd
xor
sbb
in
gs
sbb
or
mov
les
xor
jmp
xchg
stos
mov
cmc
jmp
pop
ss
sbb
movs
cmp
rol
xor
push
dec
push
push
xor
clc
inc
sub
cwde
les
lahf
repz
mov
out
fwait
ret
pop
cmp
jnp
sbb
mov
outs
frstor
movs
fcompp
retf
enter
mov
scas
adc
pop
dec
(bad)
movs
push
(bad)
xchg
pushf
out
pop
pop
xchg
add
adc
scas
scas
daa
xchg
dec
cmc
pop
data16
xchg
cmp
fld
pop
jbe
adc
pop
retf
repz
rcr
jbe
lea
mov
or
cmp
sub
xor
lds
cli
daa
jnp
sbb
or
push
lds
test
mov
ss
stc
fst
cmp
pop
pop
into
cmp
pop
(bad)
popa
lds
jg
push
gs
cwde
jp
cs
jnp
and
mov
jo
xor
fisttp
ror
imul
mov
adc
call
lahf
std
pop
retf
retf
push
shr
test
sbb
jg
or
fwait
jle
add
adc
idiv
movs
sar
jp
jle
aaa
fwait
push
jae
push
sbb
sbb
jno
inc
enter
fld
(bad)
sbb
aam
dec
das
(bad)
out
das
push
(bad)
mov
es
push
fsubr
mov
call
mov
stos
xor
aas
jnp
or
push
ret
mov
ss
and
aas
cwde
test
lods
and
iret
push
shr
sbb
(bad)
stc
call
call
mov
inc
push
les
push
imul
xchg
jnp
jno
(bad)
jb
sub
mov
loopne
xor
ins
bound
sub
retf
cwde
add
or
cmp
sub
jbe
pop
fild
in
sbb
dec
(bad)
std
loopne
adc
mov
add
push
sbb
jp
scas
jp
sbb
inc
mov
jp
stos
clc
fcomp
nop
mov
sti
fidivr
ficom
inc
ficom
or
mov
inc
out
and
ins
adc
adc
movs
fisubr
adc
aaa
xor
mov
xchg
ret
dec
or
pop
fisub
push
add
cmovo
shr
outs
sbb
ds
and
mov
(bad)
cmc
lock
rcr
jbe
fisttp
mov
xor
mov
xlat
in
ret
mov
dec
mov
dec
fidiv
inc
or
repnz
or
sub
fcmovb
repz
and
mov
sub
rol
sar
(bad)
or
xchg
pushf
retf
xor
inc
ret
adc
push
ret
pop
ja
sahf
icebp
pop
rol
jp
push
dec
movs
and
add
pop
clc
lea
idiv
leave
mov
or
or
cmps
mov
in
xor
xor
lea
test
mov
adc
xor
jg
or
enter
test
pop
into
shl
sbb
fs
cmp
or
sbb
inc
adc
repnz
imul
ret
mov
sbb
cmp
add
pop
dec
or
pop
cwde
mov
sbb
fld
and
outs
dec
xchg
retf
sub
xor
pop
scas
es
retf
popf
jns
mov
mov
xchg
leave
in
pop
inc
jge
mov
cmp
out
xchg
(bad)
(bad)
in
push
call
mov
fwait
ss
mov
in
push
inc
mov
adc
mov
mov
push
sub
jge
dec
imul
xchg
inc
int
add
inc
cli
aam
dec
dec
xor
in
ins
out
mov
xor
aaa
cmp
dec
pop
mov
in
jmp
rcl
push
xor
stos
xor
les
and
jb
sti
inc
and
mov
call
pop
add
retf
mov
or
add
retf
pop
xor
fwait
inc
jb
jo
jge
mov
mov
cmp
add
pop
xor
idiv
cdq
stos
xchg
sbb
leave
pop
push
sub
call
pop
and
shl
push
xchg
cwde
jl
or
xor
in
(bad)
int3
dec
xchg
aas
nop
inc
aad
xchg
xchg
in
(bad)
mov
fwait
xchg
(bad)
sti
imul
mov
adc
pop
sahf
lods
fiadd
pop
sbb
mov
dec
jle
inc
cmp
mov
adc
add
jmpw
xchg
xchg
and
push
cmp
fstp
inc
mov
add
aaa
xor
sub
sub
xor
xor
jbe
in
cmp
pop
test
hlt
sub
jecxz
loope
push
ror
dec
js
das
or
dec
jecxz
lock
jbe
xchg
push
popa
jmp
dec
mov
xor
fs
shr
add
sbb
outs
mov
inc
jge
xor
sub
mov
retf
dec
sar
jl
dec
div
mov
dec
loopne
jnp
pushf
inc
sub
out
fadd
not
gs
dec
jmp
fidiv
mov
jmp
syscall
sahf
(bad)
pop
adc
add
fdiv
in
sbb
adc
pop
movs
retf
dec
mov
adc
or
push
xchg
xchg
push
cmp
jg
xor
repz
sbb
sub
stos
in
stc
pop
scas
data16
addr16
dec
push
stc
add
ins
or
ins
add
adc
xor
jmp
cdq
jg
cli
cmps
add
xchg
jmp
and
aad
(bad)
pop
mov
js
sbb
and
jbe
movs
inc
pop
cmp
(bad)
sbb
adc
jmp
mov
xor
pop
psubusb
in
jbe
sahf
cdq
dec
(bad)
clc
pop
in
mov
lock
addr16
test
inc
sbb
mov
sub
jne
dec
sbb
sbb
out
push
loop
jb
xchg
dec
cmp
stos
cld
pop
push
inc
push
fstp
rcl
mov
mov
popf
jno
ret
and
dec
sub
add
mov
push
adc
cvttps2pi
jns
stos
popf
jne
or
inc
push
popf
jns
fdiv
jne
cmp
xchg
inc
int
adc
dec
mov
push
xchg
loopne
push
ror
lahf
inc
push
es
ret
cmp
mov
in
frstor
dec
jge
mov
pusha
xchg
inc
popf
int
jl
jp
leave
push
out
(bad)
into
stos
aaa
jbe
cdq
aaa
mov
scas
add
or
add
mov
dec
and
xlat
and
jnp
das
push
fimul
idiv
push
loope
in
xor
pop
jg
jb
ins
rcr
xchg
and
ins
mov
jmp
icebp
jle
mov
dec
out
jns
repz
loop
icebp
xor
mov
jns
xchg
movs
lods
mov
inc
rcl
(bad)
mov
mov
pop
adc
call
cmp
aaa
dec
sar
arpl
dec
scas
mov
cmc
jns
push
fdiv
jl
(bad)
add
ds
fucomip
jns
(bad)
xor
ins
pop
cmp
add
repnz
cmp
loop
loope
mov
fld
push
loope
ror
jo
lods
fstp
mov
sub
cmc
mov
outs
call
sbb
adc
xor
ja
stos
jo
and
dec
sbb
loopne
xor
xor
sub
retf
jmp
std
jno
pop
pushf
pop
mov
fidiv
add
inc
inc
sti
jne
mov
jg
fmul
les
loop
cmp
ss
jl
xchg
rcl
xchg
aad
(bad)
dec
inc
mov
lock
jl
scas
(bad)
out
ret
mov
mov
test
push
and
std
inc
icebp
sti
pop
out
cmp
xchg
push
add
jns
mov
add
jl
ins
movs
pop
arpl
jbe
sahf
rol
xchg
(bad)
or
cmp
pop
scas
cwde
jp
icebp
popa
adc
popf
mov
jnp
jecxz
jp
imul
int3
mov
sub
inc
mov
(bad)
or
ja
neg
dec
fld
sub
loop
dec
add
jmp
out
cld
xchg
mov
mov
in
cwde
push
xchg
add
(bad)
fs
(bad)
cmp
das
jnp
(bad)
xchg
jns
mov
xor
and
pop
sub
sbb
pop
jnp
jo
in
lea
lock
shl
cmp
pop
lock
sahf
sbb
arpl
loop
xchg
or
fdivr
int
into
jae
jbe
mov
inc
xchg
pop
push
shl
stos
outs
inc
mov
lahf
retf
aas
mov
test
icebp
fst
pop
jecxz
call
xchg
sbb
jb
addr16
sbb
ret
call
std
mov
cmp
ret
and
jmp
mov
add
ins
push
test
sbb
ins
and
imul
sub
jp
jae
js
stos
pop
(bad)
lock
jo
sbb
xor
rcr
inc
xchg
(bad)
mov
jmp
into
fisubr
sbb
and
push
or
inc
dec
out
icebp
mov
pop
call
mov
aam
jl
jne
shl
outs
shr
push
retf
lds
push
fadd
retf
pop
arpl
jbe
inc
jle
shl
stos
in
repz
sbb
(bad)
xor
das
repnz
fisttp
jnp
jno
mov
pop
xchg
fisub
ins
mov
clc
cld
ins
push
ror
bound
mov
daa
cld
and
cmp
retf
shl
sbb
pop
mov
ficom
fcomp
cli
test
loope
jmp
inc
xchg
add
xor
inc
inc
push
bnd
fcmovnu
mov
cmps
aam
aaa
das
gs
and
cmps
fisub
xchg
sub
mov
and
push
sub
cli
(bad)
fsub
es
ins
in
(bad)
clc
repz
test
jmp
or
int3
xchg
jmp
inc
xor
out
fstp
dec
dec
gs
clc
sbb
dec
inc
push
or
(bad)
out
sbb
or
mov
sbb
cli
bound
mov
les
cmp
imul
rcr
push
test
popf
je
jbe
cs
and
leave
add
je
mov
das
out
je
into
push
mov
push
lea
cmps
je
jns
dec
pop
out
or
jmp
inc
repnz
pop
mov
in
sar
dec
xchg
cmp
std
in
add
jbe
mul
and
add
ds
cli
out
(bad)
enter
jae
inc
lods
jo
jl
cmp
rol
pop
cmp
fwait
dec
das
jnp
les
(bad)
sahf
sbb
and
and
xlat
lea
enter
aaa
in
dec
inc
sbb
cmp
out
scas
xchg
cld
xor
movs
dec
mov
lds
(bad)
ror
out
pop
lods
jmp
retf
test
and
and
sub
fs
mov
xchg
add
and
popf
outs
mov
cwde
push
les
mov
addr16
cmps
jp
add
shr
jne
loop
gs
data16
xor
ss
outs
jmp
pusha
shl
sub
lock
xor
jae
xchg
scas
ins
adc
dec
ret
mov
lahf
mov
push
fmul
cmps
aam
rcr
(bad)
jns
iret
dec
mov
or
adc
mov
lods
push
sub
(bad)
mov
and
dec
(bad)
pop
jmp
mov
ins
shr
sbb
fiadd
mov
sub
mov
cmps
xchg
loope
test
mov
scas
cld
xchg
mov
add
xchg
bound
sahf
fldl2t
stos
xor
nop
fcom
arpl
ins
int
or
fwait
inc
repz
inc
or
and
ret
mov
xchg
pop
mov
push
mov
dec
cmps
dec
pop
mul
fsub
and
retf
aam
out
imul
fs
mov
dec
adc
and
lods
add
or
mov
add
mov
inc
stos
and
mov
push
adc
adc
mov
add
push
jno
cmp
xor
add
imul
jge
scas
outs
fldcw
fs
push
std
int3
loop
pop
jl
adc
sub
clc
push
nop
test
or
movs
cmp
xchg
sbb
in
fadd
pop
pop
adc
add
jecxz
outs
lea
js
mov
xchg
nop
sbb
dec
pop
pop
not
repnz
jae
fwait
adc
popf
in
stos
push
hlt
mov
es
fbstp
daa
hlt
dec
jo
pushf
cmp
xchg
sbb
mov
add
sbb
lds
popa
movs
loop
dec
icebp
sub
ror
ret
add
push
jl
sub
cmc
cmp
lock
js
retf
mov
dec
retf
call
adc
xchg
ss
loope
cs
sbb
test
nop
adc
jp
jb
in
pop
je
fiadd
sbb
(bad)
sub
push
jo
jp
xor
or
movs
push
mov
rcr
fs
fcompp
retf
stos
aam
add
into
mov
clc
cmp
xor
mov
add
scas
cmps
sub
ret
vpmacswd
loopne
mov
cmp
ror
jnp
ss
cmp
or
dec
fsub
jnp
out
adc
les
push
(bad)
lock
inc
adc
test
loope
fdiv
test
leave
fiadd
xchg
adc
mov
fdivr
into
ret
imul
inc
jns
sbb
jmp
inc
sub
out
(bad)
ins
repnz
xchg
push
or
dec
repnz
mov
and
mov
xchg
pop
cmp
call
or
jb
push
in
rcr
jp
inc
mov
pushf
jae
mov
cmps
jb
adc
xchg
add
dec
cmp
icebp
in
lods
fcomp
mov
movs
cld
fidivr
dec
pop
xchg
std
fdivrp
jno
adc
mov
jno
loop
adc
test
in
and
dec
dec
imul
les
mov
fnstsw
retf
enter
lea
mov
scas
out
adc
(bad)
or
popf
test
test
int
xchg
cmc
push
cld
and
and
mov
ss
jp
adc
mov
ss
push
inc
mov
outs
or
jbe
(bad)
sahf
pushf
(bad)
js
int3
xchg
or
(bad)
in
cli
xchg
mov
scas
pop
inc
lahf
adc
out
adc
cwde
cmp
ss
pop
stos
inc
mul
push
or
mov
dec
mov
mov
int3
xchg
push
add
ss
mov
cmp
test
jns
rcr
mov
aaa
jl
movs
inc
in
aas
rol
xchg
push
adc
adc
shr
jp
scas
icebp
test
loopne
jle
push
sbb
pop
mov
jmp
push
pop
shl
sbb
pop
popf
das
mov
lods
loop
iret
xor
mov
xor
push
mov
or
lods
and
cli
jmp
jle
retf
jg
inc
call
fwait
mov
jo
sbb
int
call
push
and
sub
dec
xchg
xor
ror
cdq
mov
test
jns
cmp
fdivr
call
lea
scas
fld
pop
push
add
sbb
sbb
pop
imul
jecxz
hlt
je
inc
jbe
cld
cmps
push
jnp
push
gs
ds
mov
stc
add
jecxz
int
xchg
mov
inc
inc
and
repz
and
loope
inc
clc
sbb
mov
push
data16
int
imul
(bad)
jbe
mov
imul
cli
sbb
mov
jae
mov
rcl
cmp
shl
adc
or
push
sub
ja
mov
jnp
mov
ds
bound
sbb
fcom
pop
pusha
xchg
mov
cs
jg
fs
push
jmp
jg
(bad)
scas
xchg
sub
mov
pop
fdivr
sub
jl
test
arpl
push
jge
outs
dec
fsubr
xchg
jo
pop
jbe
mov
pop
jge
cmp
out
sar
loope
mov
leave
push
inc
scas
lods
dec
cmp
mov
clc
push
pop
pop
call
jb
add
outs
add
das
dec
mov
sahf
retf
and
push
fbstp
cdq
pop
xchg
push
js
inc
data16
xchg
push
gs
xchg
pop
jmp
adc
pop
xor
inc
sub
jbe
lahf
aas
fist
lods
pushf
jge
nop
sbb
cmp
fdivr
lods
jne
ins
cwde
cmp
xchg
loopne
lahf
pop
pop
sub
dec
aam
mov
adc
rol
cmp
lahf
test
hlt
inc
add
sub
xor
(bad)
mov
dec
(bad)
out
es
pop
push
cdq
fdivr
ror
pop
gs
retf
pop
stc
rol
push
outs
arpl
dec
add
addr16
ret
ins
std
jno
jecxz
jno
das
enter
mov
push
add
pop
inc
cdq
inc
ret
retf
pop
or
aaa
bound
or
data16
xchg
mov
jbe
push
ins
loopne
shl
lods
mov
jne
rol
icebp
adc
out
popf
jmp
sub
sub
mov
pop
popa
pop
adc
fs
loop
or
mov
xor
ds
rol
jns
sbb
idiv
std
add
neg
ds
push
cmp
ins
cld
sbb
cmp
sub
fisub
mov
add
jbe
enter
xor
ret
ins
pop
mov
sti
cmp
mov
inc
and
and
sar
jmp
hlt
ja
in
(bad)
cmps
or
push
xor
and
xchg
mov
test
cli
dec
ret
mov
aaa
pxor
stc
adc
push
lods
ja
bound
aas
out
cld
(bad)
push
jmp
sub
mov
iret
jecxz
mov
push
movs
adc
inc
pop
or
add
lock
and
dec
sbb
sub
fisttp
test
pop
or
xchg
in
xchg
sbb
xchg
dec
stos
sbb
xor
sahf
xchg
push
std
jb
loope
hlt
fs
(bad)
push
sub
and
add
sbb
retf
ror
(bad)
push
pushf
jp
shr
pop
or
outs
dec
pavgb
sub
aas
add
lahf
inc
popf
mov
xchg
and
inc
ja
cmp
mov
mov
clc
xor
xchg
pop
cmps
in
mov
jg
enter
mov
jbe
into
inc
pop
inc
mov
sub
stos
dec
es
jbe
ja
sub
pop
inc
add
shl
(bad)
sbb
sbb
mov
push
enter
ja
jns
stos
fld
xchg
xchg
in
jno
mov
jne
fistp
ds
adc
shl
xlat
ret
xor
adc
cmp
jmp
stos
push
pushf
adc
aad
fadd
movs
fnop
loop
popf
mov
dec
fdivr
pop
hlt
push
stos
jno
inc
sbb
xor
inc
out
jg
inc
or
(bad)
imul
jmp
cmp
push
xchg
xchg
pushf
or
or
xchg
and
arpl
lods
iret
jmp
sub
inc
nop
xchg
or
cli
lods
arpl
lds
adc
mov
enter
jge
sahf
pushf
inc
push
in
aaa
call
mov
jae
loope
mov
mov
xchg
jmp
out
jg
mov
sti
mov
aam
(bad)
jae
cmp
pop
inc
test
lock
xchg
frstor
inc
movs
push
retf
ret
sub
mov
xchg
and
dec
jecxz
in
mov
jno
xor
clc
pop
mov
or
xlat
inc
lods
jnp
jmp
idiv
jmp
jecxz
jl
sub
mov
push
inc
jo
movs
imul
push
popa
scas
inc
cmp
adc
mov
cmp
mov
adc
scas
dec
sub
out
icebp
inc
push
sub
jae
sti
inc
cmpps
pop
mov
mov
dec
mov
cdq
sub
inc
scas
ins
pop
stos
pop
dec
ins
jbe
(bad)
cmp
xchg
push
movs
xchg
xor
popa
jae
(bad)
adc
pop
js
fmul
dec
in
adc
fst
xchg
in
pop
popa
push
inc
lahf
mov
xor
add
leave
test
inc
int
iret
fldenv
xchg
mov
push
clc
pop
(bad)
fld
dec
cmp
jae
arpl
xchg
add
dec
push
dec
add
(bad)
inc
xor
adc
test
aas
mov
xchg
mov
sub
jp
xor
mov
jp
jo
test
ds
inc
adc
cdq
aaa
push
push
sbb
xor
ss
mov
repz
push
jg
sub
js
mov
enter
dec
push
jb
test
stc
shr
mov
lds
(bad)
repnz
ins
inc
adc
rcl
mov
out
jl
jb
es
jp
jmp
dec
ficomp
mov
lods
js
aad
rcl
jae
test
inc
mov
mov
push
and
pop
and
xchg
mov
loope
cmc
rol
sub
jmp
scas
xchg
xor
mov
add
movs
cwde
pop
ins
pop
pop
in
out
adc
inc
not
aas
xchg
or
imul
test
mov
push
xchg
ja
sbb
int3
or
jle
sti
push
sub
and
mov
xchg
add
hlt
mov
mov
cwde
xor
push
ja
sbb
js
outs
jg
add
sbb
mov
xchg
repz
imul
xchg
cld
push
fist
sahf
pop
pop
(bad)
lahf
dec
and
pushf
jno
sub
cs
inc
lods
repnz
add
imul
aaa
mov
fcom
ret
es
mov
stos
(bad)
cwde
jp
(bad)
adc
cwde
xor
fs
popf
xor
xor
xor
and
out
lock
or
mov
add
arpl
jp
or
and
outs
aam
fwait
jle
test
div
xchg
sti
aas
adc
ret
mov
mov
movs
push
stc
test
ret
cmp
dec
enter
push
or
sbb
imul
int
mov
jo
add
xor
test
and
xor
mov
pop
jecxz
mov
jne
shr
add
or
xchg
push
ds
aas
shr
test
je
out
je
sub
out
jb
sbb
cdq
xor
or
inc
dec
pop
pop
cmps
pop
cmp
dec
shr
pop
fucomi
inc
retf
xor
movs
cmp
daa
scas
fld1
ins
pusha
in
adc
jnp
inc
xchg
cmp
and
jne
add
inc
jnp
stos
rol
retf
ins
add
repz
adc
iret
jne
int3
cli
fbld
aas
icebp
out
rcl
icebp
xor
inc
nop
daa
cmp
adc
clc
fldenv
and
mov
clc
pusha
fist
inc
inc
pop
(bad)
jmp
popa
dec
sub
sbb
xor
out
and
js
adc
adc
popa
xchg
movs
xchg
in
xchg
and
sub
addr16
dec
repz
cmp
fcom
mov
(bad)
imul
jnp
inc
add
cmp
pop
in
or
das
sub
mov
jmp
jl
mov
or
xlat
adc
adc
dec
mov
cs
sub
ds
jne
pop
mov
sub
rcr
jo
mov
mov
and
cmps
sub
test
sar
test
enter
push
test
(bad)
jae
dec
in
pusha
loop
dec
test
movs
stos
pop
out
xor
lods
(bad)
mov
cmp
stos
out
gs
sar
pusha
xor
push
pusha
adc
ror
sub
ret
int
mov
pusha
pop
dec
cmc
push
and
(bad)
jnp
mov
dec
adc
jae
lds
into
in
xchg
jg
or
aad
frndint
into
ret
shr
ds
sbb
pop
mov
mov
pop
add
ds
mov
dec
or
adc
sub
cmp
out
in
add
push
or
cmp
sbb
sbb
outs
inc
loope
jmp
mov
(bad)
sub
faddp
sbb
push
jno
xchg
jns
ins
ins
jno
daa
mov
ret
push
sbb
push
arpl
and
pop
aas
leave
daa
jp
mov
pop
scas
mov
daa
loope
daa
jmp
dec
mov
lahf
icebp
push
loopne
pop
xor
mov
mov
mov
mov
xchg
push
sbb
fwait
(bad)
rol
jnp
and
inc
sbb
leave
dec
sub
mov
dec
sahf
out
loope
sub
ficom
mov
adc
cmc
leave
mov
mov
in
fwait
call
dec
push
jge
call
arpl
in
xchg
leave
add
daa
(bad)
pushf
imul
or
xchg
stc
aad
cmp
or
cmps
popa
xchg
aaa
inc
dec
mul
mov
lods
int3
push
aaa
add
hlt
push
jbe
xchg
rcl
retf
mov
pop
mov
je
(bad)
out
xchg
inc
cmp
dec
push
jmp
into
rcr
push
mov
mov
(bad)
inc
jae
pop
jge
xchg
fistp
stos
dec
cmps
cdq
movs
out
or
add
rol
mov
(bad)
fmul
sbb
xchg
jge
push
sbb
out
cmp
add
mov
mov
sbb
push
pusha
cmp
push
xchg
ret
(bad)
push
fnstsw
enter
add
mov
adc
(bad)
in
cwde
(bad)
fmul
xchg
or
xlat
es
jmp
int
add
out
into
popa
fbld
xchg
xchg
cmc
inc
jae
pop
push
pop
add
and
xchg
pop
sub
int3
mov
in
sub
je
pop
mov
retf
std
add
mov
adc
jmp
mov
cli
or
in
dec
mov
or
pop
ss
test
fisub
mov
xchg
sahf
out
mov
rol
dec
or
push
aas
dec
sub
or
fisttp
jle
mov
mov
loopne
repz
or
mov
loop
sub
sbb
in
xor
fsubr
inc
pop
mov
mov
cmps
into
(bad)
cmp
inc
(bad)
aas
(bad)
movsx
stos
xor
mov
pushf
add
dec
hlt
mov
adc
ins
out
mov
in
test
and
movs
lahf
lea
(bad)
aaa
jne
inc
in
dec
rcl
jns
mov
js
push
lds
pop
inc
and
mov
pop
imul
jmp
xor
pop
call
call
xor
inc
push
lds
pusha
call
and
add
cmp
cmps
inc
bound
pminub
in
mov
(bad)
ins
pop
out
push
dec
(bad)
and
jg
cmp
pop
dec
pop
pop
fadd
jl
mov
and
imul
or
fmul
cmp
inc
sub
inc
pop
out
rol
jo
mov
pop
pushf
(bad)
jle
and
pushf
fmul
mov
stos
outs
pop
add
sti
fsub
test
add
daa
pop
addr16
jne
test
jle
add
mov
pop
scas
cmp
pop
shr
std
out
inc
ficom
jge
mov
pop
das
adc
xchg
js
lahf
shl
jbe
(bad)
pushf
imul
(bad)
sbb
retf
ror
cwde
sub
sbb
add
adc
rcr
inc
outs
sbb
sti
outs
push
sbb
jne
pop
cmps
inc
mov
push
mov
jg
outs
xchg
stos
outs
mov
jmp
or
pop
sbb
jl
push
ret
addr16
adc
sbb
mov
push
push
or
sbb
push
mov
mov
int3
movs
cmps
jge
add
mov
(bad)
xor
arpl
jle
sbb
cmp
stos
lds
jecxz
dec
stos
aad
adc
xor
sti
int
call
iret
test
out
cmp
inc
aas
cmp
xchg
and
add
sub
movs
add
call
xchg
and
out
lods
mov
(bad)
ror
mov
hlt
cwde
pop
int3
jbe
shl
mov
dec
ja
je
sub
fisubr
retf
inc
popa
rol
sbb
ror
jecxz
ror
cdq
push
mov
ja
jmp
call
and
retf
sub
fldenv
push
jo
fnstenv
adc
in
outs
pop
inc
mov
dec
mov
pop
inc
push
stc
test
sub
pushf
icebp
sti
out
jmp
mov
out
loopne
stc
fisub
mov
dec
ret
hlt
stos
nop
test
inc
sub
mul
loop
mov
aad
(bad)
push
lock
push
or
pusha
mov
fild
ja
cdq
dec
ret
std
call
mov
daa
arpl
jle
sub
mov
out
cmp
push
dec
enter
and
jb
outs
push
leave
out
stc
dec
loope
icebp
sbb
ins
jecxz
mov
call
and
mov
dec
push
sbb
out
dec
and
dec
push
retf
and
popf
inc
pop
adc
lods
hlt
fsubr
sar
in
push
ret
arpl
adc
call
sbb
js
fisttp
push
loope
(bad)
shl
mov
pop
scas
cmp
mov
gs
ss
pusha
jmp
out
push
adc
push
add
call
in
ror
(bad)
fisub
and
jae
fcom
movs
ins
adc
xchg
mov
adc
es
test
outs
or
mov
mov
cmp
imul
sti
cmp
(bad)
cmp
jo
imul
ss
mov
xchg
rcl
aam
xlat
sbb
out
les
inc
sbb
pop
lods
jne
xchg
into
xchg
dec
test
(bad)
cli
push
ss
sbb
stos
mov
dec
adc
gs
mov
mov
lea
dec
ss
dec
mov
mov
fwait
xchg
push
and
jns
cwde
cmps
xchg
push
jp
sub
cdq
adc
jno
dec
in
or
popa
movs
int3
cli
int3
inc
mov
in
xchg
(bad)
call
push
retf
test
ror
adc
inc
jmp
add
add
mov
je
mov
int
clc
add
aas
jno
repz
nop
adc
pop
cmp
mov
and
mov
call
cdq
pop
adc
sti
inc
ret
bound
jp
sbb
stc
call
push
ins
cdq
cmp
std
stos
inc
mov
xchg
mov
fld
pop
out
(bad)
into
fwait
and
iret
xchg
xchg
jp
cmp
push
push
pushw
sub
test
jae
xchg
mov
mov
ins
idiv
loope
lahf
pop
mov
pop
rcl
xchg
or
test
je
pop
push
das
jno
cmp
gs
and
xchg
call
mov
sbb
ret
into
and
add
stos
outs
dec
int
sub
enter
dec
jbe
(bad)
in
pop
push
pop
rcr
jo
pushf
jne
ret
(bad)
in
dec
mov
repz
and
and
cmps
imul
jne
cli
inc
push
lahf
jne
mov
and
sbb
cs
ins
cdq
cmp
out
lock
mov
loopne
aas
ja
push
test
fstp
jo
imul
cwde
mov
nop
cwde
cmp
mov
dec
outs
cwde
xchg
cmp
sbb
mov
pusha
push
lods
in
mov
mov
into
mov
ss
hlt
cmp
call
inc
std
ror
in
cli
push
xor
or
jo
popa
fs
push
je
cwde
cmps
cmp
or
or
jl
xchg
cmp
cmps
pop
dec
inc
outs
fadd
xchg
jp
mov
mov
ss
ret
fldenv
out
ret
lds
ret
mov
jge
pop
xlat
and
mov
ss
mov
push
fimul
out
lock
push
(bad)
xor
pop
(bad)
sbb
(bad)
sete
mov
stc
(bad)
lahf
retf
retf
popa
mov
into
das
push
jmp
xor
mov
ret
int
(bad)
mov
(bad)
loopne
aad
adc
popf
neg
rcr
call
mul
add
xor
jb
mov
or
fmul
fadd
or
sbb
js
push
nop
adc
cmc
sti
out
sub
jmp
cmp
frstpm(287
fs
mov
push
dec
ins
adc
shr
cmc
jmp
aad
inc
mov
jge
ret
out
jo
test
and
sahf
(bad)
pop
das
stos
sub
inc
imul
cmps
loopne
cmc
adc
push
push
push
inc
je
popa
div
dec
xchg
out
imul
xlat
test
sti
fnstsw
inc
sbb
fst
cld
adc
pop
ret
or
push
mov
push
shl
imul
or
cmp
pop
or
xor
adc
fist
cdq
sub
in
aas
hlt
jo
mov
cmps
sbb
add
jp
cmp
test
xchg
push
out
add
aam
xor
pop
xchg
(bad)
addr16
mov
lods
pop
mov
adc
lds
mov
icebp
ss
push
mov
push
fsub
adc
pop
mov
icebp
pop
dec
pop
movs
inc
call
retf
je
jmp
xchg
and
push
jle
cmp
jo
and
cli
push
jo
and
mov
push
pop
cdq
mov
mov
push
and
movs
(bad)
sar
adc
pop
pusha
out
in
mov
hlt
xor
cwde
scas
fistp
pop
add
mov
daa
nop
in
pusha
sbb
loope
xor
sub
xor
pop
jbe
pop
rol
test
in
test
int
sti
cmp
fimul
add
sahf
adc
inc
or
dec
repz
push
stos
das
push
sbb
cmp
movs
aas
aaa
test
movs
jbe
fucomi
test
mov
push
or
jmp
inc
mov
sahf
add
sub
dec
cld
xor
jne
adc
(bad)
out
repz
push
jle
fs
mov
mov
(bad)
stos
enter
ret
dec
scas
xchg
pop
pop
aam
jo
mov
dec
pop
loop
scas
imul
mov
pop
push
fisubr
test
stos
arpl
dec
pop
js
fmul
pop
pop
cmps
retf
inc
retf
jns
rcl
(bad)
jl
in
aas
call
fmul
sbb
add
lds
mov
ror
sub
sub
and
loop
xor
fisttp
or
cdq
gs
pop
xchg
pop
rcl
outs
fist
mov
sbb
movs
mov
xchg
pop
(bad)
xchg
mov
pop
push
jl
pop
lds
jns
xor
add
(bad)
jecxz
ins
mov
adc
mov
dec
xchg
stc
(bad)
adc
pushf
and
stos
loopne
xchg
sbb
jo
fiadd
sar
xchg
and
mov
or
or
lahf
jp
cmp
loopne
les
xor
jle
and
dec
and
lods
mov
cmp
nop
cmp
mov
adc
mov
cmp
and
iret
add
add
out
xchg
in
jae
loop
int
cld
lods
pop
clc
push
(bad)
das
add
retf
dec
xchg
jmp
push
cs
sbb
sub
add
loop
xor
(bad)
ja
pop
sub
imul
cmp
mov
scas
and
xchg
mov
outs
aam
(bad)
out
dec
mov
pop
fsub
js
pop
mov
call
fisub
cdq
in
gs
fsub
pop
fmul
psubsw
xchg
int3
les
mov
inc
iret
and
push
fidivr
mov
sahf
addr16
pop
adc
outs
adc
cmps
inc
je
rcl
out
pop
gs
mov
mov
stos
sti
xor
sbb
pusha
or
and
test
cmp
shl
daa
mov
dec
and
push
push
sar
dec
lods
cmp
fsubp
xor
inc
cmp
jnp
add
scas
push
retf
adc
sub
push
xlat
je
mov
je
pusha
(bad)
in
aam
loope
pmulhuw
js
clc
add
xchg
stos
sbb
xchg
jg
mov
add
cli
and
xor
xor
daa
pop
imul
cmc
sub
in
fs
repz
xlat
xchg
dec
outs
test
jg
test
push
jg
mov
das
clc
jbe
xor
xchg
push
out
fidivr
push
fistp
pop
call
and
ins
pushf
not
scas
repnz
mov
call
movs
pop
leave
pushf
sub
cmp
xor
xlat
ficomp
or
dec
and
xchg
mov
or
stos
leave
out
sbb
dec
cmc
cmp
lds
test
stos
cmps
mov
pop
int
repnz
int3
mov
mov
xchg
jno
sub
cmp
push
ror
cwde
dec
cld
adc
mov
adc
out
sub
ss
xchg
inc
adc
or
push
cs
dec
mov
mov
shl
xor
ror
cwde
pop
xor
mov
sub
mov
push
xor
scas
cmps
jp
addr16
push
out
or
jg
or
cmps
xlat
ret
mov
sub
in
mov
aaa
setp
lods
lds
pop
push
inc
in
fwait
dec
dec
cmp
sar
aad
sti
push
lock
mov
into
pusha
sbb
int
mov
int
jne
jl
addr16
add
xlat
fisttp
push
cmp
mov
neg
repnz
xchg
mov
jae
nop
push
mov
les
dec
rol
pop
mov
sub
pop
int3
sbb
push
(bad)
mov
outs
popf
fwait
mov
inc
loopne
cmp
cmp
into
sbb
arpl
in
in
cmc
aas
xchg
adc
retf
cmp
test
outs
pop
fiadd
lea
pop
mov
lds
retf
popf
repz
xor
lods
test
xor
dec
dec
or
les
lock
push
mov
mov
add
or
(bad)
inc
movs
pop
js
fninit
jns
mov
in
movs
fisttp
(bad)
rol
jle
ins
mov
fwait
xchg
(bad)
daa
mov
dec
push
nop
mov
jmp
and
lahf
xchg
mov
loope
add
div
mov
mov
sar
loop
dec
xor
test
outs
movs
retf
xchg
ins
lods
dec
repz
adc
lahf
adc
add
xchg
pop
popf
cmp
mov
xor
fcom
push
push
fldcw
ds
jae
add
fwait
mov
cdq
adc
or
adc
dec
(bad)
or
mov
arpl
fcom
jge
icebp
popa
repnz
pop
push
(bad)
aas
mov
push
push
add
dec
loopne
leave
cmp
bound
add
and
xchg
retf
call
(bad)
int
or
cs
repnz
fldenv
sbb
mov
cs
nop
retf
shl
ins
xchg
int
mov
cmc
repnz
mov
lods
push
fs
sub
add
mov
cdq
(bad)
dec
inc
leave
xor
and
inc
fstp
mov
adc
cmp
push
es
adc
clc
mov
icebp
inc
sbb
lea
mov
movs
or
loopne
xor
or
xchg
mov
cs
icebp
gs
in
loopne
ficomp
inc
in
mov
pop
ret
jecxz
iret
icebp
mov
cmps
add
mov
punpcklwd
retf
mov
cdq
sbb
loop
fmulp
daa
div
sbb
inc
pop
rcr
out
sub
daa
into
xlat
mov
inc
jmp
daa
fcomp
daa
inc
shl
jnp
mov
scas
add
push
push
sbb
inc
js
dec
repz
inc
add
sbb
sbb
(bad)
cmp
and
push
and
out
aam
jge
push
mov
push
rol
jmp
leave
cld
mov
and
popa
mov
test
push
mov
movs
(bad)
cmps
retf
mov
mov
icebp
fwait
(bad)
jl
pop
scas
push
add
jb
aaa
mov
adc
sub
mov
pop
cmp
(bad)
jbe
or
stc
push
mov
aad
mov
test
pop
adc
jne
loope
test
call
xor
add
lds
xchg
aam
adc
cs
(bad)
mov
jnp
add
aaa
ret
sbb
push
fistp
pusha
enter
add
xchg
push
leave
cmp
lea
mov
inc
sar
dec
push
sub
imul
sub
sbb
loopne
cld
int
xchg
(bad)
fsub
pop
sub
mov
or
test
mov
loope
pop
dec
jg
push
dec
mov
inc
stc
aam
outs
adc
cmp
pop
sub
adc
fnstcw
mov
(bad)
ss
dec
js
out
push
xchg
or
xor
loope
mov
push
pop
fisttp
cdq
adc
push
jecxz
dec
jae
xor
rol
mov
xchg
das
sub
dec
add
and
push
or
push
pop
sbb
or
addr16
data16
aas
sbb
stos
pop
arpl
push
outs
dec
sub
inc
packssdw
mov
add
es
(bad)
aaa
retf
mov
fcomp
or
std
cs
add
js
mov
sbb
inc
inc
loopne
sub
cdq
iret
fiadd
jmp
mov
fnstenv
add
(bad)
fld
cmp
jns
outs
rol
push
mov
mov
xchg
int
cwde
(bad)
mov
scas
xor
add
enter
push
fisub
sbb
stos
adc
adc
or
sti
test
pusha
mov
test
inc
mov
cs
pop
imul
mov
push
jl
add
pop
xlat
add
sbb
xchg
mov
xchg
hlt
inc
in
ins
jle
mov
ret
and
aam
push
xchg
arpl
(bad)
retf
in
out
stos
and
mov
into
les
cld
pop
dec
leave
inc
retf
int
jae
je
cwde
sbb
stc
jbe
xchg
and
leave
mov
xchg
inc
dec
cmp
sub
ja
cli
jmp
stc
jmp
out
ins
sub
stos
or
scas
fs
cmp
aad
(bad)
mov
xchg
push
and
daa
push
push
push
push
popf
gs
inc
mov
mov
out
jbe
test
test
in
movs
dec
mov
das
arpl
sub
xchg
xor
pop
cmp
retf
add
cdq
sub
and
mov
lahf
mov
dec
(bad)
push
stc
dec
inc
js
adc
push
xor
push
inc
out
(bad)
lahf
xchg
dec
loop
outs
lfs
push
or
cmp
addr16
mov
aad
push
stc
aaa
mov
mov
fcmovnb
mov
xchg
xor
push
xchg
pop
(bad)
xor
or
mov
fcmovne
test
inc
push
sbb
xchg
gs
fcomp
aaa
push
xor
inc
sbb
movlps
ror
repnz
and
test
pusha
push
gs
pop
push
pop
lods
imul
test
dec
sbb
into
mov
test
push
mov
rcr
shl
call
aas
js
pushw
xor
pusha
jo
jp
inc
and
movs
sar
loopne
or
repnz
or
mov
popa
xlat
or
shl
mov
xor
inc
nop
dec
adc
in
jne
mov
fisubr
mov
mov
int
inc
ds
and
push
add
scas
into
adc
je
sub
jnp
adc
push
xor
pop
xor
movs
or
sbb
daa
pop
cmps
scas
mov
xor
int3
jno
add
push
addr16
std
lea
cmps
pop
inc
(bad)
lods
mov
shl
ror
jmp
cbw
into
add
jg
retf
clc
lock
adc
enter
test
push
ins
fimul
inc
cdq
imul
dec
or
imul
inc
jecxz
sub
mov
repz
jmp
gs
iret
xchg
mov
adc
cmc
xor
fisub
(bad)
cmp
int
jge
(bad)
test
xchg
pop
mov
lss
lods
cmp
pushf
sahf
fsubr
push
push
(bad)
fist
cmp
or
jo
adc
lds
push
sar
mov
paddq
cli
cmp
mov
adc
ins
sbb
add
xchg
retf
ja
(bad)
and
mov
lds
lods
xchg
fistp
mov
and
push
repz
ficom
jle
mov
mov
retf
and
cmps
sbb
icebp
sbb
ja
adc
xchg
adc
dec
loope
pop
in
cmp
ds
sbb
daa
popa
(bad)
xchg
adc
pop
cmp
rcr
push
dec
lods
cvttps2pi
mov
xor
cmp
call
fst
push
clc
add
popfw
pop
mov
sub
and
add
inc
sub
retf
mov
aad
mov
dec
and
out
(bad)
fwait
dec
jns
xchg
and
mov
es
shl
mov
xchg
in
or
retf
repz
call
sub
enter
in
ss
mov
das
pop
dec
iret
mov
fldcw
mov
pop
outs
lock
clc
cmp
pop
loop
xor
imul
cdq
or
pop
dec
dec
in
sub
ret
dec
cmp
cmp
(bad)
fnstsw
mov
lods
inc
or
loopne
pusha
ss
mov
dec
das
mov
fiadd
adc
jmp
sahf
sub
test
jne
xchg
pslld
xchg
or
jge
and
cmp
adc
std
sbb
xor
dec
int3
lods
inc
loope
add
enter
pop
xor
movs
and
ficomp
cld
xchg
ins
repnz
mov
mov
mov
test
add
push
out
test
outs
pop
aas
mov
icebp
mov
mov
data16
aad
loop
in
in
(bad)
loop
adc
mov
jnp
clc
pushf
popf
idiv
into
inc
std
pop
(bad)
fptan
add
out
frstor
repnz
xor
push
outs
aas
cmps
pop
mov
mov
jmp
and
sbb
jns
out
fsubr
stos
mov
and
hlt
dec
int
fs
mov
inc
cmp
lds
sbb
int
pop
cmp
popa
les
clc
daa
stos
iret
ins
test
std
pop
movs
xchg
data16
jb
idiv
je
and
jae
push
mov
or
scas
mov
jecxz
cld
jp
inc
xchg
sub
rol
stos
arpl
jne
jbe
popa
fdiv
test
cmp
xchg
inc
adc
movs
jle
jle
mov
cmc
sbb
gs
outs
(bad)
mov
mov
ja
xor
clc
rol
popf
stc
sbb
test
mov
pushf
test
fild
int
(bad)
jmp
enter
add
js
mov
mov
dec
xor
xchg
in
jnp
add
adc
std
mov
mov
cmovle
fwait
lahf
inc
inc
(bad)
in
push
in
and
or
es
jg
jo
cmp
adc
mov
cmp
inc
push
(bad)
mov
mov
je
mov
add
lods
jns
pop
sti
leave
pop
cmps
mov
inc
and
hlt
arpl
loop
and
popa
push
inc
out
emms
mov
stos
and
xchg
clc
imul
arpl
push
sub
fs
and
xor
xor
push
ja
std
jbe
jl
push
cmps
lock
retf
cli
call
les
fst
test
xor
aam
cmc
loope
jnp
mov
stc
mov
dec
jo
cmp
das
fisttp
pop
jp
jne
xchg
fistp
shl
xor
pop
push
or
addr16
popa
push
add
mov
push
scas
mov
jmp
pop
scas
test
hlt
jmp
pop
push
test
jmp
outs
enter
leave
lods
(bad)
jmp
ret
inc
imul
les
adc
data16
add
(bad)
cmp
sbb
jns
data16
mov
movs
xchg
cwde
xchg
pop
cwde
jl
imul
fninit
in
xor
(bad)
pop
mov
and
or
sub
mov
add
cmp
sub
gs
(bad)
stc
(bad)
shr
push
rcr
pop
sub
adc
aam
mov
dec
dec
aad
nop
cmc
fidiv
ror
lock
adc
int3
mov
adc
lock
daa
adc
fwait
adc
or
mov
bound
pop
es
mov
jo
dec
std
neg
addr16
in
iret
dec
ficom
dec
jbe
sbb
sub
jnp
inc
pusha
enter
arpl
jno
sbb
jo
sub
stc
pop
inc
(bad)
or
cmps
fisttp
lods
in
add
(bad)
cmp
inc
fistp
jecxz
and
test
push
ds
push
xor
mov
imul
mov
jp
inc
mov
ret
ss
push
add
adc
out
push
scas
jbe
pop
pop
jae
(bad)
addr16
push
inc
fld
scas
fist
fild
mov
dec
jo
retf
mov
in
lock
dec
idiv
fld
jp
inc
jno
sbb
xor
sub
fcmovnbe
pop
mov
xor
std
aas
pop
data16
fdiv
in
cmp
jmp
call
cli
jecxz
stos
cld
lods
(bad)
jecxz
cmp
pop
test
scas
sbb
jmp
add
scas
dec
jl
(bad)
dec
fimul
bnd
aaa
cld
dec
imul
dec
push
lock
jge
ins
iret
rcl
loopne
psllw
jl
jg
sub
pop
sbb
adc
cdq
mov
or
popf
push
xor
mov
sub
jge
jmp
or
push
mov
adc
push
fwait
sar
lods
fldcw
retf
jmp
in
icebp
hlt
iret
stc
adc
fnstsw
out
in
aaa
add
imul
imul
hlt
test
clc
(bad)
push
xor
pop
sub
and
inc
push
out
sti
rcl
ror
fisub
(bad)
push
and
mov
sub
push
jmp
cdq
push
sub
in
xchg
push
cmp
(bad)
int3
xor
mov
jne
or
(bad)
and
and
ds
or
jno
mov
xor
into
mov
or
sub
jno
adc
data16
test
mov
jg
push
push
mov
push
leave
cmc
pusha
or
gs
add
or
xchg
xor
push
mov
pop
mov
cmc
pop
push
mov
pop
jl
xchg
outs
sub
push
mov
in
movs
add
xchg
cwde
push
xchg
es
je
inc
adc
int3
shl
inc
jmp
dec
sbb
sbb
push
cmps
(bad)
pop
mov
adc
xchg
(bad)
or
add
call
cmp
fcom
xchg
lahf
dec
mov
pusha
hlt
stos
fcom
mov
and
fsub
popa
pop
repz
cmps
test
call
jp
push
sub
jl
gs
repnz
pop
xchg
bnd
push
mov
(bad)
je
out
xor
mov
fld
sar
pop
outs
push
xchg
pop
js
nop
sub
cld
jp
movs
ja
enter
xor
(bad)
stos
outs
aam
popw
xlat
fdiv
popa
pushf
sub
mov
add
sub
inc
call
push
and
(bad)
sub
fwait
sub
cmp
out
outs
or
stc
sub
rol
popf
div
movs
sub
jl
cmps
pop
das
and
add
xlat
sbb
xlat
pop
pop
fidiv
aam
iret
mov
inc
fldlg2
aam
pop
pop
ja
inc
ja
dec
mov
das
loop
inc
mov
lods
pushf
fistp
jl
or
nop
xchg
xchg
into
and
jecxz
mul
pop
hlt
xchg
inc
adc
in
and
xor
mov
jo
mov
push
push
lods
mov
add
xor
xor
cs
imul
sbb
mov
call
push
pop
cli
push
xchg
sub
push
ins
ja
(bad)
retf
mov
xchg
data16
out
jecxz
or
out
mov
retf
jg
mov
fucomp
mov
sbb
jle
bound
inc
xor
mov
mov
or
sub
inc
(bad)
jne
or
stos
ins
rol
(bad)
aas
ficom
test
sbb
xchg
test
ret
icebp
imul
ins
jmp
fsubp
shl
and
sub
push
ret
xchg
test
outs
sub
fucomi
test
sti
cmps
int
jp
aaa
and
dec
mov
sub
dec
xor
iret
xchg
mov
enter
loop
push
out
std
stos
mov
dec
clc
scas
sahf
imul
sub
mov
lock
lds
xor
(bad)
pop
or
push
add
retf
push
aaa
jp
daa
cmp
int
or
outs
pop
out
xchg
mul
lods
ss
cld
pop
ror
scas
push
xor
or
mov
fwait
icebp
xor
dec
ins
mov
push
mov
jnp
jae
pop
push
test
jmp
lds
pop
std
and
sbb
jge
test
es
sbb
push
or
mov
cs
or
jbe
in
or
dec
or
or
mov
and
sbb
sub
add
mov
push
sub
repnz
fiadd
(bad)
pop
xor
push
repz
(bad)
pop
cdq
sbb
ss
mov
sar
fidivr
jae
xchg
gs
stc
inc
je
push
in
jmp
inc
pop
xchg
(bad)
aaa
call
aad
add
std
es
addr16
adc
aad
inc
daa
xor
cmp
retf
mov
push
jno
push
push
xchg
lea
movs
jne
push
push
pushf
pop
push
push
sbb
(bad)
fnstcw
sbb
sar
lods
pusha
shr
inc
cmc
sub
ret
ret
mov
mov
imul
xchg
and
xchg
inc
fcomp
xor
add
cmp
dec
xor
sub
dec
mov
xchg
gs
or
xchg
mov
icebp
arpl
jns
pop
(bad)
pop
outs
mov
mov
repnz
outs
out
inc
pop
mov
out
or
jmp
dec
nop
fisub
not
into
sbb
lods
jbe
and
adc
xchg
inc
ret
ror
jecxz
mov
xchg
fadd
or
inc
pop
xor
or
test
push
loope
outs
xchg
arpl
test
(bad)
js
ds
sub
jae
jno
cwde
(bad)
and
xlat
inc
fstp
mov
and
jbe
push
shr
mov
xchg
push
gs
push
and
aad
loop
into
rep
dec
pop
dec
imul
shl
or
mov
or
push
cdq
dec
jle
add
pop
daa
rcl
stos
mov
into
or
mov
jne
or
call
cmp
shl
mov
mov
sub
add
test
mov
(bad)
jmp
cld
push
(bad)
pop
ins
ret
std
xor
adc
test
mov
cmp
jl
shl
mov
jg
or
leave
clc
lods
dec
fdivrp
mov
lods
popf
xor
mov
fcmovbe
rol
sub
mov
repz
jne
add
das
int
les
xchg
test
std
mov
pop
pop
mov
aam
lods
mov
pop
mov
pop
mov
pushf
cld
inc
xchg
ja
sub
xchg
pop
fnstcw
das
je
cli
rcr
xor
sub
mov
ret
xchg
mov
gs
out
dec
mov
iret
shl
aad
in
outs
ds
or
jmp
enter
or
jno
dec
and
ficomp
and
mov
jecxz
mov
pop
add
cdq
jl
aas
inc
enter
ret
cmp
scas
imul
stos
cmp
mov
icebp
jmp
imul
test
xor
add
inc
push
mov
xchg
out
mov
cmps
in
and
das
or
cmp
jl
call
mov
hlt
xor
adc
jle
data16
add
out
cmps
inc
sub
out
push
inc
mov
imul
cwde
pop
pop
inc
lahf
jl
and
fisubr
out
mov
jp
int
test
xchg
cmps
dec
and
sub
jmp
cmc
cmps
ja
add
mov
mov
xor
mov
dec
add
cmps
pushf
dec
sbb
mov
jo
(bad)
aad
sahf
mov
test
mov
sub
jb
fidivr
jne
lds
adc
push
jp
repnz
add
retf
xchg
shl
pop
cld
jnp
cld
add
fwait
sub
outs
or
mov
daa
xor
pop
(bad)
mov
adc
sub
mov
or
mov
cmp
fcmovnb
cmp
mov
js
dec
clc
pushf
xlat
in
leave
cmp
add
pushf
loopne
jle
aas
or
xchg
push
push
dec
sbb
add
aam
pop
cmp
inc
stc
pop
shl
add
movs
xchg
fiadd
int3
iret
leave
stc
mov
inc
imul
mov
mov
les
jl
add
das
iret
xchg
mov
sbb
sub
popf
cmps
jle
push
add
gs
mov
or
out
inc
xchg
je
sub
sti
test
or
and
loope
repz
xor
lds
adc
std
pop
jmp
iret
dec
jo
inc
and
aad
sub
jl
lds
stos
rcl
fdivr
xor
sbb
inc
mov
int
dec
or
or
out
cli
add
pop
xchg
sbb
adc
pusha
cmp
sbb
mov
push
push
mov
(bad)
xchg
inc
fldenv
mov
(bad)
inc
pushf
dec
shr
repnz
pop
rol
out
mov
ret
inc
pop
inc
mov
inc
(bad)
xchg
fiadd
rcr
add
jns
sbb
dec
jp
xchg
cmps
inc
inc
scas
test
popf
push
lods
les
mov
mov
sub
pushf
xlat
mov
sti
jb
and
lahf
xlat
mov
or
pop
xchg
push
ficom
push
ins
outs
push
maskmovq
mov
ds
inc
in
sub
xor
jno
test
mov
clc
mov
jp
repz
sub
mov
pop
mov
daa
scas
sbb
xlat
pop
xchg
fimul
movzx
repz
and
push
jne
stos
stos
jmp
cmp
xor
in
dec
dec
adc
adc
shl
int3
inc
jns
lahf
pushf
dec
inc
hlt
push
mov
popf
xchg
adc
sbb
dec
cmp
out
call
(bad)
push
fimul
ret
inc
loop
retf
cmp
mov
cld
cmp
aas
mov
frstor
fnsave
ins
int3
add
xor
pusha
sbb
add
mov
(bad)
retf
xor
inc
clc
inc
jg
movs
sti
icebp
jg
sahf
daa
test
cmps
xor
lea
daa
enter
ss
and
cs
or
and
dec
pop
in
(bad)
je
pop
rol
out
js
out
sbb
pop
sti
sbb
mov
or
jge
(bad)
and
inc
ret
aaa
and
daa
and
test
pop
xor
fsub
repnz
cdq
mov
sbb
push
add
mov
fwait
cmp
stc
mov
lahf
inc
or
sti
inc
movs
fisub
jns
jns
jb
stos
inc
iret
lea
inc
xchg
pusha
ret
or
shl
jns
jg
mov
in
cmp
test
mov
adc
ins
dec
adc
arpl
push
add
xchg
test
pop
mov
scas
push
sbb
pop
push
(bad)
cmc
loop
xor
sar
xor
aas
(bad)
mov
std
push
sbb
jle
aas
mov
mov
mov
sbb
cmp
jbe
jno
dec
dec
xchg
pop
mov
add
outs
rcr
imul
cld
add
xor
lds
push
dec
cmp
js
pop
les
mov
xchg
sbb
fst
cmp
call
aaa
mov
sub
mov
xor
mov
inc
mov
cli
cmp
test
loope
cs
aaa
and
mov
test
mov
mov
push
ins
lock
pop
mov
test
sbb
or
cwde
ja
add
cli
aam
jo
imul
mov
xor
(bad)
xor
sti
call
ins
scas
xchg
xchg
xor
cmp
mov
shr
adc
call
and
adc
int
inc
jmp
leave
dec
mov
xor
inc
stos
adc
stos
neg
lods
jp
ret
loope
dec
sub
out
(bad)
sbb
xchg
pop
cmova
mov
(bad)
and
sub
aas
imul
scas
into
and
ins
mov
cs
stos
add
mov
(bad)
mov
mov
mov
adc
pop
rcr
push
push
dec
lea
push
(bad)
mov
mov
aam
ja
in
mov
xchg
mov
cld
push
jae
fdivr
cmp
xchg
sbb
pop
xchg
scas
add
push
jle
mov
or
mov
jle
ins
fstp
imul
inc
clc
or
retf
sub
cmp
sub
jae
cmp
repnz
scas
leave
inc
pop
(bad)
jne
adc
push
pop
or
movs
xor
push
fidivr
cmps
lock
aas
arpl
lea
add
cdq
sar
sbb
adc
mov
or
cmp
clc
adc
or
pop
jp
dec
adc
stos
stc
jmp
mov
ret
mov
ret
or
mov
or
mov
push
fidivr
sbb
or
lahf
xor
adc
jno
dec
inc
out
jno
or
in
push
inc
push
and
daa
or
sbb
(bad)
xchg
push
lea
mov
fild
push
nop
inc
sbb
or
rcr
dec
inc
xor
jl
into
cli
aaa
test
mov
ds
out
addr16
cmp
jo
aam
js
jecxz
or
pusha
mov
imul
in
jb
sbb
and
ds
push
fs
add
dec
add
dec
int
sub
jl
loopne
sub
adc
movs
push
jbe
push
js
in
loope
and
imul
inc
lods
xor
mov
or
je
dec
or
jae
enter
idiv
cwde
xor
daa
daa
and
jb
inc
and
xlat
cmp
in
sbb
std
pop
mov
scas
sub
and
cmps
pusha
es
jecxz
push
lods
cmp
out
cmp
cmp
(bad)
jo
push
je
jnp
clc
xchg
mov
mov
pop
test
and
sbb
jmp
xchg
rol
xor
ret
loop
cmp
pop
gs
daa
mov
hlt
inc
or
adc
in
popf
pop
xchg
jp
mov
lahf
lahf
shl
std
call
mov
adc
dec
sub
push
pop
inc
test
cmp
(bad)
fist
repnz
push
pop
es
mov
add
add
push
repnz
(bad)
pusha
sbb
(bad)
or
sbb
or
inc
fisub
sar
push
pushf
cmovo
mov
retf
and
arpl
mov
or
mov
call
aad
repnz
adc
dec
adc
jg
fcom
jbe
fcmove
dec
movs
pop
adc
xchg
push
arpl
outs
jle
pop
movs
add
out
repnz
in
cwde
in
mov
nop
pop
and
cmp
push
popa
int3
inc
dec
stc
adc
or
fcomp
xchg
inc
cwde
rcl
add
xchg
sbb
sar
repz
pop
stc
push
jno
inc
je
jp
cmps
icebp
fcmovb
fst
jmp
pushf
xlat
(bad)
add
pop
inc
pop
scas
sbb
adc
xchg
ror
jg
ja
loope
jge
mov
pop
call
js
sti
fistp
mov
add
sub
xor
out
push
sar
sub
fwait
xchg
mov
les
dec
imul
fidiv
cld
sbb
cmc
out
sub
mov
fcmovb
push
jecxz
(bad)
popa
push
call
lea
popf
add
sbb
add
enter
aaa
adc
stos
dec
add
pop
rcl
adc
leave
mov
int
xrelease
std
xor
outs
adc
(bad)
push
call
pop
daa
es
outs
call
xchg
mov
add
pop
jg
gs
repz
xor
jne
inc
sub
sub
fwait
jnp
jns
retf
jp
push
push
push
push
sbb
xchg
jl
outs
pop
jnp
mov
xchg
pop
mov
lods
adc
ins
ficom
std
(bad)
xchg
fisubr
mov
inc
cmp
mov
pop
movs
pop
cs
fnsave
jb
xchg
sbb
scas
test
mov
(bad)
push
inc
xor
pop
jl
inc
movs
or
cmp
dec
add
xchg
idiv
ror
rol
and
ss
lods
test
inc
out
dec
out
sub
stos
sub
dec
sub
test
and
ret
jbe
xchg
loopne
enter
lock
or
or
adc
xor
pop
mov
mov
mov
dec
out
mov
in
jmp
pop
pop
mov
(bad)
sub
(bad)
sub
add
jecxz
push
and
sub
pop
mov
xchg
jl
lea
jle
add
cmp
popf
shl
outs
or
or
ds
leave
sub
mov
test
test
or
xor
dec
loope
jle
ficomp
adc
or
push
retf
jbe
stos
pop
xchg
cmps
rcl
and
pop
inc
dec
sub
cld
jns
je
(bad)
aad
xlat
lods
fs
pop
or
outs
hlt
loop
add
dec
and
aad
repz
cmps
retf
inc
inc
imul
mov
push
aad
lock
pop
mov
cli
aas
mov
sbb
popa
cmps
inc
int3
xchg
fdiv
add
aas
adc
inc
and
(bad)
cld
and
adc
div
or
jmp
(bad)
int
xchg
pushf
jne
dec
test
ins
popa
adc
shl
scas
inc
movs
call
pop
add
jl
mov
push
add
or
int
mov
mov
cmps
push
arpl
(bad)
xor
cmps
inc
je
dec
cmp
mov
and
mov
jecxz
ds
mov
cmp
add
fstp
push
out
mov
xor
dec
or
or
inc
shr
call
ds
and
dec
cwde
and
xor
(bad)
xchg
arpl
into
add
imul
in
xchg
push
je
inc
in
pop
dec
ds
bsf
pusha
add
cmc
fsubr
mov
and
sbb
inc
inc
sar
xchg
jae
mov
gs
sub
test
cmovl
pop
rol
or
bound
popf
sahf
out
pop
repz
add
mov
mov
push
xor
sbb
push
(bad)
push
imul
inc
cmps
and
ficomp
(bad)
adc
push
bound
push
rcl
sub
loop
push
add
adc
clc
xor
xchg
iret
inc
inc
or
test
test
aam
inc
mov
shl
je
in
(bad)
retf
and
je
aad
das
mov
inc
mov
retf
shr
nop
inc
cli
in
cmp
cmp
movs
inc
mov
leave
test
cwde
das
scas
adc
cli
(bad)
mov
push
inc
xor
lods
inc
xor
mov
add
shl
jle
mov
jmp
cli
in
lods
dec
nop
fisttp
mov
xchg
or
icebp
ss
repz
pop
call
mov
fcom
int
leave
sub
mov
sbb
jmp
pop
mov
repz
enter
sbb
jne
sbb
icebp
leave
mov
mov
cwde
sub
mov
(bad)
arpl
xor
movs
jb
jbe
stos
jne
mov
fs
fistp
cmp
call
cli
mov
xor
shl
push
cmp
or
jns
inc
and
or
ins
inc
push
loope
cmp
stos
jb
mov
pop
mov
jns
cmps
popf
mov
stc
dec
enter
dec
cmp
and
or
fcmovnu
dec
xchg
mov
js
shr
cmp
retf
call
ins
lahf
out
pop
mov
cmp
push
daa
in
es
adc
cmps
movs
adc
and
pop
xor
or
mov
leave
pusha
jns
or
inc
pop
cmp
mov
cld
in
fild
dec
mov
call
pop
cmp
outs
in
(bad)
outs
mov
push
jne
fucomi
inc
mov
in
fmul
nop
(bad)
fistp
mov
xchg
(bad)
std
and
xchg
inc
cs
mov
dec
(bad)
cmp
xchg
mov
cmp
xor
repnz
mov
retf
mov
push
cmps
loope
mov
mov
xchg
retf
push
or
lds
fs
mov
mov
push
and
pop
stos
adc
add
outs
adc
neg
push
push
inc
push
inc
(bad)
cs
das
cmp
hlt
mov
into
adc
and
or
sub
mov
lods
das
pop
cmp
xor
icebp
mov
imul
shl
(bad)
cmp
cmp
sub
dec
std
add
scas
push
and
popf
push
sbb
add
xchg
add
sbb
sbb
pop
dec
xchg
xor
in
xchg
ret
ror
mov
inc
popf
push
dec
inc
jno
ins
jo
pop
push
test
rol
sbb
mov
int
adc
inc
dec
inc
mov
int
jmp
(bad)
std
jno
retf
or
and
jno
(bad)
cmp
jns
dec
test
iret
sub
fisubr
jle
sub
jno
jne
dec
sub
lahf
fs
xchg
in
ja
push
sbb
mov
sub
cwde
lods
inc
cmp
stc
out
ret
dec
loopne
ins
movzx
push
mov
cmp
pop
jl
jo
or
cs
imul
imul
fisttp
stc
xchg
fdivr
xchg
mov
jge
or
(bad)
iret
cmp
push
inc
xor
cs
or
test
mov
ds
adc
inc
or
stc
cmps
ficomp
jae
xchg
xchg
xchg
test
mov
mov
aam
stc
das
inc
xchg
pop
in
push
push
cwde
(bad)
mov
jmp
sub
adc
or
ror
cs
fisttp
push
(bad)
or
ins
outs
cmp
inc
nop
hlt
jle
das
(bad)
retf
cmp
xchg
add
xor
add
push
mov
cld
sbb
aad
pop
in
jno
push
daa
test
outs
ficom
ret
mov
sub
icebp
inc
stc
or
xor
outs
push
cmc
mov
rcl
call
test
jp
dec
xchg
inc
push
sub
test
and
out
lahf
jmp
jmp
sbb
cwde
and
mov
call
out
mov
les
test
mov
or
aaa
sub
mov
xor
cmp
repnz
(bad)
dec
mov
out
and
gs
adc
add
js
pop
sub
and
sti
sahf
inc
xchg
outs
fnsave
leave
push
mov
std
push
ja
call
retf
xlat
and
jb
cmc
or
mov
mov
addr16
jmp
sbb
and
mov
inc
xchg
es
call
test
mov
lods
pop
je
cmp
es
mov
pop
inc
sar
dec
inc
int
sbb
(bad)
fnsave
fucomip
cmps
in
adc
jge
mov
rcl
aas
loope
pop
and
or
jg
loope
inc
ret
lock
aas
stc
movs
pop
mov
movs
inc
pop
aad
fisub
sub
cmc
test
stos
icebp
or
add
push
test
(bad)
fimul
mov
outs
sbb
lahf
nop
fistp
jmp
push
pop
jg
push
enter
(bad)
aad
call
adc
(bad)
fsubr
iret
shl
pop
pop
jge
mov
sbb
mov
cmp
or
mov
out
push
push
sar
cli
cli
(bad)
inc
mov
adc
add
and
scas
push
and
iret
xor
xchg
das
mov
ins
or
xor
jl
inc
(bad)
popa
call
adc
sbb
mov
adc
popa
push
imul
cli
jno
jg
xor
jo
add
movs
fwait
gs
call
(bad)
dec
dec
pop
fstp
cmp
sti
mov
mov
sub
ret
int3
dec
cs
aas
fs
sub
mov
sbb
sbb
dec
sub
out
je
mov
gs
movs
or
dec
push
fist
mov
stos
in
xor
inc
fistp
mov
je
pop
pop
jge
loope
inc
mov
mov
call
cdq
and
repz
call
out
mov
adc
pop
fcomp
mov
(bad)
dec
pop
and
add
(bad)
scas
xor
sub
fiadd
mov
dec
rcl
mov
mov
xchg
js
mov
inc
fsub
sub
in
lods
out
sar
jg
adc
mov
push
aad
or
out
add
stos
mov
into
xchg
(bad)
fmul
add
retf
sub
stos
lea
pushf
sub
push
fisttp
push
xchg
or
pop
cmc
ins
push
ins
mov
lahf
fidivr
leave
xchg
xor
adc
push
int3
adc
ds
inc
sbb
xchg
cmp
jg
ficomp
test
cmps
or
mov
test
jmp
inc
inc
call
out
add
popf
je
fisttp
xor
ficom
dec
or
xor
push
jne
repnz
ret
xchg
pop
movs
mov
imul
inc
cmp
or
mov
test
or
cwde
push
jbe
or
stc
repz
xor
test
lods
cmp
stc
rol
iret
pop
sti
cmps
ficomp
or
outs
jg
mov
xchg
pop
loopne
xchg
inc
push
xor
in
rol
cmc
sub
xor
lds
jle
or
mov
lds
xchg
shl
mov
cmp
fisubr
add
scas
fcom
daa
xchg
push
cld
cmp
mov
in
push
test
cmp
das
sub
fsub
pop
sti
ins
dec
movs
std
or
ret
mov
sbb
cs
addr16
jmp
push
fstp
push
mov
mov
and
dec
cmp
ret
push
and
test
sar
adc
mov
mov
xchg
pushf
(bad)
ja
jecxz
std
add
shr
xchg
jbe
or
push
xlat
push
fisubr
and
loopne
pop
cmp
aaa
sub
and
and
inc
sbb
jle
fidiv
enter
cdq
cs
pop
adc
int3
(bad)
jge
lods
add
mov
addr16
cmps
or
cmc
jmp
sahf
je
push
push
shl
xchg
fxch
mov
jb
push
int3
or
sub
dec
jmp
jns
das
mov
int
jnp
pop
div
out
mov
or
ror
imul
adc
push
jecxz
std
repz
inc
jl
movs
pusha
sbb
push
push
mov
push
mov
into
sub
push
dec
jae
mov
adc
mov
clc
inc
mov
or
lahf
mov
cmc
out
cmp
ins
movd
call
int
stos
inc
xchg
mov
mov
mov
inc
add
push
(bad)
loop
xchg
push
mov
push
je
xchg
iret
jl
mov
jmp
sbb
adc
nop
stos
dec
dec
enter
cmps
and
loop
sub
fst
xor
in
cmp
xor
sub
retf
sbb
test
dec
inc
cmp
(bad)
xor
or
xor
imul
popa
out
scas
pop
lahf
addr16
retf
rcl
iret
addr16
enter
xchg
pop
push
xor
sub
arpl
or
ret
push
pusha
neg
pop
(bad)
pusha
sub
push
jne
test
arpl
shl
(bad)
ficom
push
scas
popf
test
sub
leave
mov
xor
or
jl
xchg
xor
mov
arpl
repz
xchg
push
inc
cmp
cld
xchg
sub
inc
aaa
frstor
jmp
push
cli
loopne
dec
into
retf
or
cs
scas
mov
cmp
jl
loopne
fstp
adc
or
mov
rcl
or
in
pop
cmc
inc
mov
sbb
sbb
ins
cs
cmp
ds
mov
jnp
push
sbb
jno
hlt
dec
mov
inc
xor
call
mov
xor
pop
push
jl
inc
ds
mov
ret
sbb
out
repz
inc
push
dec
xor
int
pop
pop
inc
xor
aaa
aas
fcmovnbe
ja
inc
es
jb
adc
les
inc
das
aam
jb
pop
pop
push
xchg
(bad)
xchg
mov
lods
out
mov
cmps
int
dec
mov
daa
out
(bad)
cs
add
mov
movs
or
scas
sub
data16
popa
mov
scas
ins
mov
test
scas
jecxz
push
cdq
cmp
pop
lahf
xchg
in
adc
call
pop
jg
out
dec
outs
xchg
outs
dec
repz
ja
xor
inc
push
test
fs
sbb
inc
mov
out
adc
push
xor
cmps
scas
xor
fwait
jne
jp
in
mov
cwde
cld
xchg
sbb
or
(bad)
in
cmps
shl
mov
adc
ins
inc
push
dec
imul
iret
mov
sub
loopne
xchg
cmp
shl
jnp
(bad)
in
(bad)
jae
mov
dec
cdq
xlat
cmc
pop
cmp
dec
add
inc
or
add
shr
adc
test
sbb
aam
retf
daa
adc
(bad)
repnz
inc
into
jae
dec
push
mov
mov
jne
mov
ins
fbld
leave
inc
aas
push
(bad)
pusha
cdq
jmp
mov
test
movs
dec
cli
inc
cs
mov
push
ror
ins
xchg
adc
pop
aam
or
or
js
adc
mov
mov
jnp
mov
shr
iret
gs
add
sub
ret
cmp
gs
fstp
mov
xor
push
cdq
in
fwait
adc
neg
mov
push
aad
hlt
jnp
mov
fdivr
(bad)
sub
and
repz
jo
div
mov
pop
push
cmp
into
push
fstp
arpl
mov
sub
or
fcom
mov
inc
adc
xchg
cwde
int3
nop
xchg
mov
iret
(bad)
mov
jl
mov
push
sbb
or
xchg
rol
cmps
fisub
adc
cmp
inc
test
out
fst
jl
inc
outs
lock
mov
imul
xchg
fild
dec
aad
scas
nop
sbb
and
(bad)
mov
fwait
enter
inc
push
imul
(bad)
out
nop
loop
test
push
xor
fs
push
jmp
es
mov
mov
lods
jle
sahf
(bad)
aad
loop
sub
adc
ficomp
push
stc
pop
fstp
je
fwait
dec
or
out
fmul
cmp
iret
or
add
xchg
push
fstp
ror
cli
cmc
jae
or
nop
add
push
icebp
call
pushf
ret
out
sbb
jae
inc
(bad)
adc
int
xor
pop
in
mov
lock
mov
push
mov
loope
inc
push
pusha
aad
in
outs
mov
out
fs
mov
(bad)
ins
mov
xor
in
sbb
das
fwait
dec
mov
scas
sub
or
call
mov
mov
outs
mov
and
mov
and
pop
jmp
daa
fist
stos
or
and
adc
enter
cmp
mov
sub
sub
out
jo
stos
dec
movs
test
sbb
pop
hlt
pusha
xlat
mov
std
enter
rol
into
(bad)
xlat
mov
sub
fsubrp
aas
dec
out
gs
add
scas
leave
inc
sbb
sbb
lods
cmp
in
push
sbb
sub
(bad)
jnp
lds
dec
pop
inc
adc
test
jmp
and
cmp
dec
test
mov
(bad)
mov
and
add
outs
stos
push
test
popw
fcomp
retf
add
loop
push
adc
test
ss
lods
test
pop
popf
cdq
bound
in
sbb
inc
mov
test
mov
and
xor
mov
ficom
fbld
sub
in
push
je
js
retf
call
dec
ret
jecxz
pop
adc
push
mov
mov
test
imul
pusha
iret
fwait
push
in
fmulp
cmp
in
push
imul
push
ret
mov
mov
or
inc
nop
cld
loop
add
jbe
jp
push
cmps
push
in
cmp
jmp
(bad)
jnp
data16
gs
mov
sar
cmp
loope
mov
adc
jno
jns
retf
in
jne
ss
xchg
das
dec
inc
xchg
fisttp
cmp
xor
enter
cmp
mov
fdivr
retf
mov
mov
add
int
lds
push
les
retf
push
retf
and
xor
adc
inc
sbb
jmp
ss
xchg
daa
(bad)
inc
sbb
mov
pop
jmp
push
cmp
pop
inc
fsubr
(bad)
mov
mov
pop
jno
pop
mov
jns
lahf
cwde
fmul
inc
jae
dec
mov
pop
(bad)
push
ror
jns
sbb
mov
inc
aad
xor
inc
sbb
sbb
cmp
push
jne
xor
xor
or
and
dec
or
shl
or
sti
mov
sbb
add
fadd
or
imul
inc
scas
ficom
push
ror
hlt
test
loope
(bad)
(bad)
mov
add
fsub
hlt
push
adc
jae
or
xchg
or
jmp
mov
xchg
mov
fidivr
push
mov
or
mov
test
dec
scas
pop
add
arpl
mov
dec
jmp
xchg
xor
es
and
int3
xchg
sbb
dec
adc
pop
pop
lds
push
xor
push
push
sub
pop
je
pop
sub
cmp
out
mov
in
jmp
jmp
mov
lahf
jnp
cmps
jge
and
sbb
sub
cmc
sbb
sub
mov
jg
sub
das
push
push
cmps
not
jo
mov
inc
xchg
and
lea
mov
xor
jge
stos
scas
sbb
ins
jnp
fs
add
idiv
popa
add
add
or
xchg
rcr
addr16
pusha
pushf
fwait
xchg
inc
int3
movs
xchg
xchg
and
sub
sbb
leave
jp
cmp
push
pop
xor
cdq
cs
or
mov
ret
daa
cmp
xchg
and
aad
add
pop
push
repz
repz
xchg
mov
cli
jle
in
mov
mov
cmp
fidivr
data16
xchg
mov
movs
movs
pop
call
lods
add
call
xor
adc
mov
outs
pop
loop
data16
pop
add
xchg
dec
sub
mov
xor
xchg
call
stc
fsub
pop
or
push
mov
imul
gs
adc
(bad)
test
push
xchg
fbld
jp
icebp
(bad)
sub
lahf
call
rcl
pop
push
imul
sub
push
aad
ja
dec
repnz
push
lods
out
xor
lock
in
mov
push
xchg
aas
add
mov
fmul
clc
cmp
mov
mov
push
sub
ja
mov
shl
xchg
xor
mov
aaa
mov
test
lds
adc
dec
call
iret
xor
mov
sbb
popf
mov
sub
mov
sahf
(bad)
push
cmp
inc
ins
push
pop
outs
add
sbb
neg
clc
dec
cmp
neg
jb
cmp
sub
jb
sbb
mov
add
jb
pushf
fisubr
xchg
jae
enter
push
dec
cmp
and
jecxz
mov
add
adc
retf
int3
xchg
push
xchg
xor
xor
inc
jge
cld
fidivr
xor
gs
out
fidiv
mov
inc
(bad)
int
lods
and
adc
pop
xor
pop
push
nop
pop
arpl
mov
ffree
fadd
cmc
mov
(bad)
repz
cmps
or
ret
jle
mov
mov
jo
add
aas
aaa
sub
or
or
pusha
rcr
imul
inc
enter
fstp
nop
mov
or
xlat
push
in
pandn
jge
std
and
lds
push
or
and
push
cmp
in
mov
mov
add
xchg
paddq
hlt
rcl
sbb
push
daa
dec
ror
arpl
loopne
push
adc
pop
mov
fwait
dec
adc
mov
xchg
jp
adc
mov
test
push
mov
jle
cmp
(bad)
(bad)
aaa
inc
mov
mov
pop
add
out
scas
adc
or
ficomp
movs
push
and
(bad)
call
xchg
cmp
scas
push
shl
cwde
cwde
fsub
adc
in
ror
lds
xor
retf
cs
xchg
or
das
push
cmp
add
or
mov
repz
fs
mov
adc
outs
jmp
and
movs
inc
pop
pop
out
stos
scas
and
or
call
pop
mov
xchg
outs
xor
xor
add
arpl
call
push
xchg
test
ret
pop
mov
pop
or
sub
sbb
out
cld
std
push
push
xchg
sbb
xlat
and
sbb
cmp
mov
gs
mov
test
in
call
in
mov
dec
inc
popa
jae
jns
psubusb
je
jo
jmp
sahf
repz
adc
mov
iretw
mov
pop
and
loopne
cmp
lock
cmp
lods
iret
jo
jno
xchg
shl
add
push
into
adc
dec
aad
imul
push
(bad)
out
cs
rcr
add
mov
sub
add
pusha
call
hlt
sbb
jmp
or
mov
test
jg
lahf
inc
arpl
aaa
adc
xor
gs
sub
lahf
xchg
pop
and
pop
jmp
inc
pop
stos
int
and
push
sub
mov
cmp
pop
call
pusha
fldenv
inc
pop
hlt
mov
mov
ins
or
fwait
xor
jb
sub
jg
dec
cld
int3
fadd
mov
sbb
ret
xor
jbe
neg
pop
out
clc
jo
jmp
cmps
aaa
adc
lods
jge
sbb
bound
(bad)
jecxz
retf
lock
retf
sbb
call
loop
xlat
std
loop
std
and
pop
dec
ss
in
imul
xchg
and
mov
push
gs
xchg
sbb
leave
div
fs
xchg
inc
jnp
imul
aas
dec
sbb
inc
ret
sub
add
pop
mov
movs
adc
xchg
data16
rol
not
inc
mov
repnz
push
enter
xchg
stos
ss
and
push
ss
inc
(bad)
cmc
ja
mov
aas
out
or
test
jle
xor
sar
xchg
adc
leave
push
jle
fnstcw
push
sub
hlt
inc
mov
fsubr
jl
jbe
(bad)
lock
shl
je
xor
mov
je
aad
push
and
xchg
stc
loop
xchg
rcl
je
adc
sahf
lahf
imul
sbb
das
adc
xchg
dec
shl
aad
pusha
push
push
dec
jnp
cmp
xor
mov
cmps
ret
test
and
push
pop
ret
data16
add
lahf
mul
xchg
scas
pop
je
fistp
lea
push
(bad)
scas
data16
mov
jns
mov
mov
and
repz
inc
aas
cmp
push
gs
es
add
and
or
add
or
mov
jmp
jno
inc
mov
retf
jae
push
dec
pop
lea
cmp
jp
mov
and
xor
(bad)
addr16
push
aaa
aad
loopne
nop
div
xchg
fld
das
add
out
out
mov
aad
jge
(bad)
xchg
lods
push
stos
cs
pop
dec
inc
js
js
and
fsub
pusha
mov
pusha
pop
push
(bad)
cmps
int
pop
(bad)
inc
popa
sbb
in
mov
jo
sbb
lock
sbb
mov
mov
mov
mov
cmp
jg
lea
sub
ret
pop
in
and
push
and
cmp
inc
pushf
add
movs
push
adc
mov
gs
add
fldenv
mov
jne
mov
xor
xor
ins
lahf
mov
push
lods
jg
dec
jno
xchg
and
pop
mov
jg
cmp
loop
xlat
sub
cmp
les
int3
mov
repnz
cmps
mov
das
push
sar
pop
in
outs
push
imul
xchg
outs
mov
sub
push
mov
jecxz
fisub
cmp
xlat
fcomip
xchg
leave
cmc
dec
cmps
sbb
daa
nop
mov
fldcw
push
sub
inc
sti
xlat
xor
jo
push
shr
mov
inc
fimul
sbb
movs
fdiv
int
repz
jns
jnp
sbb
add
mov
and
pop
push
add
call
sbb
or
xor
icebp
nop
jmp
imul
ins
sahf
xor
mov
inc
xor
pause
(bad)
pop
in
push
mov
dec
add
iret
pmulhuw
or
or
js
fld
in
popf
mov
pusha
xchg
into
sub
lahf
pop
cs
cmp
push
mov
cld
(bad)
mov
stc
dec
jb
xor
jl
loop
test
jnp
imul
add
clc
imul
and
daa
fnsave
fstp
outs
sbb
mov
bswap
repz
adc
mov
imul
scas
sbb
repnz
nop
or
leave
xor
shl
push
cmp
inc
cmp
jmp
mov
mov
mov
xchg
dec
dec
and
xor
jae
hlt
sbb
inc
jg
test
cmps
push
sbb
dec
mov
add
add
ss
test
sub
push
mov
sub
jae
out
and
aas
pop
daa
stos
and
pop
sub
cmp
sbb
dec
(bad)
mov
dec
sub
loope
cmp
js
cs
mov
cmp
dec
push
daa
aad
test
outs
add
aam
mov
or
mov
xchg
xchg
movs
sbb
mov
inc
cwde
scas
pop
mov
mov
and
lods
cmp
jo
push
dec
hlt
inc
push
loopne
add
hlt
xchg
in
adc
test
imul
ss
mov
mov
xchg
mov
lahf
pop
lods
(bad)
sbb
cld
mov
pop
mov
lods
mov
and
loope
pop
xlat
call
iret
mov
fisttp
scas
test
fs
(bad)
jmp
push
rcr
adc
mov
(bad)
mov
xchg
sub
or
xchg
dec
sbb
pop
pushf
retf
jmp
pop
jecxz
mov
jle
cmp
pop
int
add
sub
repnz
pop
mov
fs
std
cmps
lock
test
sbb
inc
cld
pusha
push
mov
int
jp
clc
inc
push
imul
pop
(bad)
and
scas
dec
daa
add
and
fcomp
(bad)
(bad)
adc
dec
aad
cmovle
aaa
adc
repz
mov
cmps
xor
popa
bound
test
nop
push
clc
dec
cmc
dec
jecxz
xchg
addr16
pop
leave
mov
dec
mov
inc
inc
js
leave
or
ja
mov
xor
js
(bad)
push
movs
cmp
cmp
in
les
aaa
test
pop
cmc
cwde
pop
mov
cdq
push
inc
push
out
test
mov
rol
inc
xchg
adc
daa
lahf
lock
xor
nop
stos
push
xor
sahf
(bad)
aad
inc
movs
js
sbb
add
cmp
inc
lock
sbb
int
or
cmps
mov
add
pusha
push
inc
jecxz
out
mov
and
arpl
or
mov
arpl
pusha
les
add
or
mov
cdq
je
pop
and
lods
test
lock
repz
dec
int
in
je
dec
jb
xchg
pop
arpl
mov
cli
scas
push
mov
vunpcklps
inc
pop
fcomp
xchg
dec
sbb
out
pop
int
test
shr
adc
outs
dec
pop
movs
xor
(bad)
les
xlat
mov
push
lock
imul
push
inc
mov
repz
ror
sub
fdivr
das
bound
cmp
iret
jl
ret
stos
es
dec
or
rcr
pop
sti
cmp
inc
jp
lods
mov
scas
push
add
dec
sbb
repnz
into
xchg
sub
sahf
pop
jnp
mov
dec
mov
int3
aaa
xlat
mov
sub
cli
lock
jecxz
inc
pop
jne
scas
xlat
jno
test
rcl
rcr
fwait
sbb
pop
retf
jecxz
adc
inc
adc
add
(bad)
adc
adc
inc
cmp
leave
hlt
push
push
pop
popf
adc
sub
aad
mov
xor
in
or
fdivr
push
jne
add
xchg
cld
test
xchg
jmp
dec
dec
jb
loope
cld
jno
cmps
ror
stc
rcr
hlt
jno
mov
or
(bad)
push
loope
shr
cmc
aas
mov
in
or
lahf
pop
lock
dec
ins
dec
mov
xor
int
mov
push
adc
mov
fistp
je
xchg
lock
jae
mov
cmps
jnp
repz
cdq
stc
pop
push
stos
and
arpl
(bad)
nop
xor
cld
retf
dec
xchg
aaa
cmps
or
sub
push
aad
or
dec
(bad)
cmp
sti
(bad)
pop
cmp
inc
cmp
mov
xor
je
scas
sbb
les
and
push
sbb
cmp
call
in
xchg
adc
pushf
cmp
mov
inc
dec
lahf
scas
(bad)
scas
out
mov
jno
dec
(bad)
retf
adc
fdiv
and
xor
jmp
nop
loopne
popf
dec
(bad)
fs
scas
test
cmp
mov
pop
inc
pop
out
cmps
mov
mov
fs
imul
dec
push
mov
addr16
mov
fnstcw
jle
inc
test
shl
add
or
sub
iret
inc
jle
mov
inc
xor
popa
repnz
les
stos
sub
fstp
push
mov
lock
test
test
arpl
imul
popa
outs
fldenv
clc
cld
pusha
or
test
mov
lods
mov
bound
sar
xor
mov
cli
call
cmc
div
sbb
das
retf
sbb
and
push
in
adc
popf
ficom
loopne
inc
push
lock
xchg
or
inc
mov
scas
dec
jo
retf
mov
dec
jmp
cld
in
sub
xchg
shr
xchg
inc
mov
leave
mov
push
cmps
sbb
cdq
pop
add
retf
mov
dec
clc
inc
push
xor
cmp
and
jb
sbb
fyl2xp1
in
inc
jg
pop
sub
sti
jge
retf
mov
lock
nop
sahf
fwait
inc
dec
add
inc
sub
pop
pushf
movs
sub
and
sub
add
push
icebp
inc
pop
add
enter
call
adc
lock
loop
xchg
push
rcr
jl
jbe
push
std
jns
push
jno
cmp
mov
mov
addr16
aaa
push
xchg
shr
enter
cld
lahf
gs
scas
hlt
push
inc
sub
jns
pushf
daa
push
icebp
dec
dec
mov
loope
jns
mov
shl
cld
ins
mov
loop
xlat
dec
dec
fadd
retf
in
mov
and
in
lahf
pusha
inc
repnz
shr
dec
xor
inc
inc
adc
and
sub
data16
test
cdq
xchg
mov
movs
push
add
mov
mov
sbb
ffree
js
or
cld
add
ins
dec
push
scas
push
imul
sub
fcmovnu
pop
xor
mov
popf
jns
aad
pop
retf
or
scas
cmp
push
push
out
cs
adc
test
icebp
fmulp
in
scas
cdq
push
test
mov
or
inc
push
inc
jecxz
sbb
xchg
mov
mov
mov
sub
xchg
je
sub
ins
push
lock
ficomp
cmp
xor
ret
jmp
daa
add
inc
cmps
jle
sbb
(bad)
jb
inc
xchg
jl
jnp
mov
jns
pop
sub
jnp
ss
adc
aad
inc
(bad)
sahf
adc
mov
add
cmp
inc
mov
ret
ss
pop
mov
mov
les
outs
cmp
imul
push
ror
and
xor
jns
push
dec
sar
sub
or
mov
mov
xor
aam
cmp
pop
mov
js
xchg
call
dec
retf
sub
pop
shr
cmps
adc
icebp
icebp
adc
aam
ja
fdivp
fwait
jmp
sbb
cdq
or
retf
add
mov
mov
hlt
or
pop
mov
xchg
pushf
and
xor
mov
add
test
lahf
xor
jp
fsub
or
cmp
push
data16
aam
arpl
call
test
push
or
or
add
sub
xor
push
movs
jl
mov
xchg
popf
jnp
add
fs
inc
cmp
scas
sub
jp
mov
aad
fdivr
sub
retf
dec
movs
push
mov
and
neg
push
inc
lahf
cli
sub
shl
push
push
cli
pop
dec
mov
call
jo
dec
iret
out
test
fdecstp
fsubr
call
xor
jmp
das
xlat
popa
push
retf
push
dec
inc
xor
jmp
test
mov
ret
mov
ins
cs
ins
(bad)
cmps
sbb
or
repnz
jne
pop
arpl
xor
imul
scas
scas
call
ins
mov
lods
popa
mov
pop
push
mov
push
sub
enter
int
mov
and
cld
inc
or
xchg
add
retf
std
jmp
cmc
popa
stos
stc
push
ret
mov
scas
and
(bad)
cmp
adc
push
inc
jb
test
jo
inc
cli
stos
inc
fs
push
sub
popa
shr
and
movs
ds
out
or
dec
push
div
inc
leave
adc
retf
fidivr
mov
jne
xchg
sete
jp
hlt
stc
retf
sub
in
ja
aad
test
mov
shr
adc
sbb
xor
lahf
push
arpl
or
mov
pop
jg
dec
cmp
pop
stc
inc
int3
push
adc
int3
dec
cmps
ret
and
cmp
dec
(bad)
lahf
xchg
and
xor
cmc
mov
cmp
or
enter
js
in
outs
pop
pop
cmp
mov
(bad)
sar
les
call
or
daa
(bad)
jns
cli
inc
jge
(bad)
bound
mov
dec
retf
lahf
lahf
(bad)
xor
xor
sub
mov
mov
gs
enter
inc
iret
jne
jae
popf
sbb
adc
and
jg
jmp
add
outs
sbb
fisub
jnp
daa
in
sbb
adc
outs
aaa
pusha
pop
pop
push
addr16
inc
xchg
jae
(bad)
pop
dec
popf
out
ret
out
mov
or
rol
or
pop
dec
mov
cld
loope
int3
mov
xlat
sahf
ins
in
ins
push
ss
fwait
shufps
hlt
mov
pop
mov
in
daa
add
(bad)
aaa
fcmovu
out
retf
das
mov
mov
jno
movs
xchg
push
mov
sub
leave
mov
sub
push
adc
addr16
out
push
test
sti
push
sbb
jecxz
or
out
out
xor
xor
imul
and
cld
jle
adc
pop
dec
pop
mov
jne
and
xor
adc
fcom
cmp
mov
mov
je
and
scas
ins
mov
dec
xor
shl
shr
jnp
sub
(bad)
xor
xchg
mov
enter
out
mov
or
inc
fwait
xor
or
out
or
pop
out
sbb
mov
call
sbb
push
jle
adc
div
aas
in
sub
ins
imul
push
ins
iret
mov
and
mov
lea
jmp
out
stos
push
or
add
sub
or
fbstp
rcr
scas
inc
aaa
idiv
cdq
lods
adc
xor
lock
and
into
mov
jle
rcl
jg
cmp
mov
test
clc
(bad)
sbb
mov
push
push
jecxz
std
mov
std
out
jecxz
(bad)
jne
daa
jge
(bad)
pop
xor
jne
sahf
cmps
sbb
inc
push
sub
mov
and
adc
pop
pop
sbb
movs
cmp
push
xor
jle
sbb
setb
int3
pop
fdivr
sbb
jne
inc
sub
loopne
sbb
and
popf
icebp
sub
push
jne
in
pop
or
(bad)
pop
or
adc
and
mov
nop
adc
movs
adc
cmps
jl
test
test
cmp
push
add
push
sub
shr
fdiv
inc
and
loop
mov
xor
rcl
xor
push
inc
pop
mov
push
xchg
adc
call
pop
xchg
(bad)
(bad)
lahf
mov
or
pop
sub
ret
fst
cmp
and
mov
mov
ja
std
dec
mov
inc
mov
mov
jmp
sub
jle
imul
add
and
sti
jns
dec
(bad)
in
mov
movs
mov
dec
imul
push
mov
push
mov
or
icebp
jns
out
lahf
nop
sbb
xor
leave
mov
imul
xor
add
lds
jle
stos
jnp
cmp
leave
imul
or
jle
in
rol
retf
std
jp
push
es
popf
dec
fxtract
cmp
sub
adc
dec
or
rcl
mov
xchg
nop
sti
sub
and
retf
cdq
hlt
ss
inc
sub
push
aas
iret
cdq
inc
pop
cmp
xor
rol
not
movs
lods
jbe
dec
jge
mov
jae
sahf
jnp
jp
(bad)
adc
inc
jecxz
lock
hlt
dec
retf
(bad)
sbb
push
sahf
mov
jns
mov
stc
fdivr
push
dec
lea
pushf
movs
mov
and
mov
fwait
scas
cmc
cmp
cmc
push
jmp
add
mov
movs
push
mov
int
cmps
pop
mov
ins
lahf
add
lods
adc
pushf
ret
aaa
mov
ret
xchg
and
add
aaa
pop
jecxz
popa
ror
cmp
pop
dec
shl
dec
push
fdivrp
ficom
dec
inc
pushf
test
xor
mov
arpl
popa
sti
pop
scas
and
les
es
xchg
cmp
push
jnp
icebp
aam
inc
cld
push
jae
xchg
jnp
adc
out
fldenv
push
ins
mov
cmp
repz
or
out
add
stos
sub
fimul
pandn
add
lods
inc
and
add
sbb
push
dec
cmps
pop
mov
push
scas
xchg
cmc
mov
pusha
mov
push
test
hlt
push
leave
int
push
jmp
push
cmp
jb
push
and
mov
jp
cmps
int
movs
fld
lock
push
out
pop
ins
jae
push
cmp
ficom
jno
in
fidivr
push
add
je
cmp
mov
mov
div
movs
scas
push
sub
sub
ret
or
enter
addr16
pop
inc
clc
out
xor
and
ins
jb
pop
push
push
fild
mov
mul
pop
fwait
cmp
out
(bad)
adc
imul
jg
mov
jp
or
jbe
add
sub
out
mov
clc
xchg
add
add
repz
sbb
and
mov
pusha
ds
mov
xchg
(bad)
(bad)
imul
adc
sbb
push
mov
bound
push
add
mov
mov
in
movs
push
xchg
out
enter
push
pop
sbb
fdiv
retf
add
inc
mov
in
inc
jg
sub
in
test
sahf
aam
pop
push
adc
ss
sub
sahf
ret
ins
(bad)
cwde
bound
push
jne
pop
and
mov
das
cmp
rol
cdq
add
pop
sbb
or
sub
inc
jmp
cmps
cmp
shl
lods
les
cdq
pop
mov
pop
shl
add
add
or
int3
cmps
imul
push
ss
push
pop
push
fisubr
and
outs
cld
or
ret
pop
in
sbb
sbb
daa
ror
repz
sub
jmp
inc
scas
mov
sub
push
inc
int
pushf
pop
jne
push
ja
loop
pop
inc
xlat
pop
mov
lock
loope
cmps
push
pop
xor
ins
test
cmp
aaa
lods
rcr
sbb
out
sub
int
pop
adc
sbb
je
in
cmp
mov
pop
(bad)
adc
xor
shl
or
and
dec
mov
xchg
cmps
mov
(bad)
xchg
xchg
leave
mov
jmp
aas
lock
out
push
xchg
xchg
xchg
xchg
ret
mov
mov
jg
stos
rcl
scas
xlat
cmc
cmc
xchg
mov
mov
les
mov
add
sub
sub
das
jge
or
xor
jo
cmc
xor
js
into
xchg
aam
jbe
js
movs
mov
dec
cli
pop
iret
shr
scas
les
jae
scas
sahf
mov
jnp
xchg
cmps
or
call
adc
ins
mov
adc
push
dec
pop
add
mov
pop
cmp
dec
xor
adc
les
loope
out
push
push
push
ds
cwde
pop
jns
push
push
push
lds
xchg
jp
add
jno
(bad)
lahf
pop
push
sbb
push
fcomp
add
cmp
jle
xor
inc
push
mov
imul
and
lds
out
mov
std
les
xchg
and
xchg
ins
or
mov
ret
sub
mov
ffree
lods
jmp
lock
sahf
jle
jmp
dec
jmp
in
sub
push
(bad)
adc
add
inc
aaa
sar
jle
adc
jbe
xlat
call
adc
loopne
mov
sub
mov
les
mov
mov
sti
sub
and
in
pop
adc
inc
sbb
cmp
xor
sub
or
test
xchg
push
jb
push
data16
scas
xor
pop
mov
dec
add
out
pop
lahf
xor
sub
icebp
ja
mov
and
pushf
in
scas
inc
and
sbb
aas
xchg
pavgb
adc
jmp
sbb
shr
stc
push
add
ret
pop
mov
sub
rol
mov
stos
repnz
push
into
sbb
js
and
rol
push
test
bound
mov
cmc
xor
stos
pop
adc
cmc
xor
fs
pop
jge
mov
mov
sub
cld
repnz
add
sar
mov
mov
movs
sbb
add
mov
es
imul
(bad)
ror
add
popa
sar
in
test
pop
push
test
stos
push
sbb
xchg
pop
fistp
or
sar
lock
repnz
dec
mov
in
shl
push
add
jnp
scas
out
aad
mov
loop
fwait
add
ret
pop
push
hlt
push
or
test
and
int3
mov
ret
repz
or
jmp
push
mov
mov
or
sbb
jb
add
mov
sbb
popa
out
out
(bad)
jnp
int
sbb
jmp
dec
adc
xchg
cmp
mov
jge
mov
mov
fdiv
mov
rcl
aad
bnd
pusha
adc
jnp
adc
fidiv
cmps
sar
lds
sbb
cdq
sub
xchg
push
outs
stos
call
and
mov
push
(bad)
xlat
and
jmp
sub
sub
sbb
jnp
loop
jnp
mov
push
les
pop
cdq
or
aam
jne
adc
(bad)
and
xchg
popa
sub
push
and
xchg
dec
push
dec
test
push
dec
mov
cmps
mov
pop
orps
js
mov
push
and
or
pushf
mov
cli
outs
cs
not
test
fadd
aas
retf
and
push
sub
lods
cmps
in
fistp
and
rol
fistp
in
or
(bad)
pop
xor
outs
adc
(bad)
shr
pop
adc
call
pop
push
dec
hlt
fs
fstp
jp
jae
xchg
test
cmp
dec
mov
sub
inc
mov
ins
mov
and
sbb
xlat
dec
pop
ja
or
fisubr
or
cli
popa
out
(bad)
aam
cwde
clc
shl
jl
push
out
xchg
adc
out
out
daa
xchg
test
mov
lds
xor
jns
mov
addr16
mov
or
test
cmp
ss
lods
(bad)
sub
xchg
test
shl
add
scas
adc
cmps
test
std
dec
pusha
mov
in
cmc
fwait
pop
jmp
jmp
and
add
test
dec
pusha
cwde
retf
pop
fdivr
aaa
lods
rcr
mov
rcl
xchg
or
push
mov
repz
test
cmp
je
mov
inc
xor
and
add
arpl
jo
xor
hlt
mov
mov
mov
mov
jmp
in
ss
sub
(bad)
gs
cmp
push
repz
jg
xchg
cld
mov
xchg
jmp
and
xchg
retf
cmp
sbb
push
stos
(bad)
call
fistp
dec
jns
and
mov
cli
dec
lods
shl
ror
xchg
pop
leave
mov
iret
test
cmps
out
test
pop
jb
outs
in
stc
adc
add
push
or
nop
mov
fild
xor
mov
mov
cmp
or
sbb
add
mov
mov
push
mov
sahf
and
fldcw
ins
sub
inc
add
das
jmp
(bad)
out
jl
lock
and
mov
sbb
out
push
sub
retf
or
xchg
pop
xchg
test
dec
sbb
xor
adc
ins
push
sbb
jmp
add
and
mov
dec
mov
xor
mov
mov
jae
adc
mov
inc
xchg
and
jmp
jmp
imul
or
jo
jbe
inc
fstp
pop
xchg
mov
inc
push
push
pusha
ja
sub
jo
mov
fwait
ror
stos
jmp
lock
cmp
imul
push
cmp
mov
sub
add
gs
pop
lods
mov
add
pusha
les
fs
mov
imul
retf
lods
push
sbb
leave
stc
movs
in
mov
jb
jmp
inc
or
or
movs
dec
sar
out
stc
shl
rcr
jecxz
inc
lahf
mov
mov
pop
mov
or
cmp
mov
xchg
add
cli
cmp
sbb
or
ds
out
lea
adc
mov
pop
push
out
mov
push
pushf
mov
xor
popa
ret
lahf
or
jb
mov
or
add
pop
dec
or
xchg
ret
shl
xchg
push
inc
out
mov
inc
inc
lock
fcomp
loop
aam
ret
mov
jno
mov
mov
cmp
int
xchg
push
repnz
adc
test
lock
push
pop
dec
cdq
out
sub
dec
cmp
dec
repz
mov
dec
(bad)
jmp
sbb
inc
lds
jb
push
fild
repnz
fsub
fcmovu
ins
and
aad
cmp
mov
les
icebp
and
je
jns
test
jmp
popf
out
aaa
bound
fs
add
xchg
or
fst
inc
sub
(bad)
jp
xchg
data16
xchg
out
ins
or
into
call
cmp
adc
(bad)
fs
jl
pop
xor
xchg
cmp
(bad)
mov
cmp
pop
mov
xor
jp
enter
test
or
pusha
mov
pop
pop
mov
mov
mov
call
gs
add
aam
popa
pop
mov
hlt
xchg
inc
xor
jb
push
or
sbb
(bad)
mov
jg
push
test
aaa
inc
lahf
test
mov
or
icebp
adc
add
ins
sub
lahf
rol
cmp
xor
lods
push
mov
loope
pop
push
in
int3
and
push
push
adc
test
inc
sub
inc
cmp
in
sub
and
sub
xor
lahf
sbb
mov
(bad)
jb
aas
sbb
cmc
adc
push
hlt
retf
retf
out
cdq
inc
test
outs
std
cmp
fidiv
xor
aas
pop
test
dec
dec
imul
ss
cmps
outs
jp
mov
xchg
test
gs
jmp
out
xchg
xchg
les
pop
(bad)
fadd
xchg
fadd
pop
outs
xor
daa
xor
rol
ja
add
xor
es
pop
call
pop
int
inc
jg
xor
enter
push
inc
jp
sbb
div
jae
mov
int
sub
pop
call
pushf
in
scas
add
jo
add
mov
inc
inc
xor
push
mov
xchg
dec
(bad)
imul
pop
out
push
(bad)
out
sahf
sahf
in
mov
add
outs
retf
push
add
call
imul
jne
test
fcomip
mov
sbb
sub
scas
and
push
sbb
sbb
loopne
add
popf
xchg
cmp
imul
sbb
add
movs
jb
sub
cmps
xchg
sub
daa
shl
daa
aam
hlt
adc
xchg
mov
pop
mov
mov
(bad)
fdivr
idiv
iret
sbb
mul
mov
out
lods
mov
jg
jle
pusha
test
(bad)
add
(bad)
int3
shl
inc
ret
xchg
hlt
sti
lea
das
sub
cmp
jbe
jbe
test
sub
push
dec
add
and
pop
test
ins
pop
ret
test
ror
mov
push
outs
jmp
in
xchg
dec
(bad)
fdivr
pop
fmul
sbb
mov
(bad)
retf
push
xor
dec
sbb
jecxz
mov
jae
jbe
inc
jnp
sbb
jecxz
pop
(bad)
cmps
push
cmps
mov
ret
sub
cmp
test
nop
(bad)
mov
nop
fst
icebp
mov
mov
hlt
mov
cmp
xchg
(bad)
push
adc
jmp
and
mov
(bad)
mov
rcl
ins
sbb
rcl
dec
into
cmp
test
sub
inc
adc
push
mov
test
inc
mov
sbb
inc
mov
sbb
xchg
ins
retf
or
adc
pop
xchg
cwde
cmp
out
fwait
mov
xchg
adc
mov
mov
pop
inc
sub
movs
xchg
jp
adc
adc
aam
lods
mov
sub
div
xchg
frstor
sti
dec
fiadd
mov
xchg
fs
cs
into
mov
cwde
push
push
adc
mov
xor
out
mov
sub
jge
and
sbb
sbb
sbb
or
adc
cdq
dec
add
shl
pop
inc
or
dec
call
mov
daa
rcr
mov
jns
stc
pop
je
mov
in
or
ins
push
(bad)
cmp
cmc
add
call
mov
adc
int3
xchg
shl
mov
cdq
movs
lock
shl
lea
and
dec
out
fcmove
mov
dec
nop
ins
mov
xchg
mov
lods
mov
(bad)
(bad)
push
int3
mov
shr
jmp
sbb
ror
out
sbb
mov
sahf
dec
frstor
sbb
je
add
jecxz
mov
fdiv
call
inc
fnstenv
jbe
xor
ficom
fld
es
sbb
mov
adc
call
repz
cmp
sbb
xor
aad
mov
push
fcomp
adc
popf
xchg
bound
imul
fsub
or
dec
clc
call
xor
push
les
mov
push
jnp
cdq
in
pop
cmps
inc
pushf
mov
cdq
int3
or
cmp
jmp
int3
fcom
xor
(bad)
jle
pusha
cld
dec
dec
mov
in
vpcomuw
lock
fs
cdq
lock
sti
mov
jbe
sub
jne
sti
sbb
xchg
xchg
scas
add
icebp
aam
cmp
or
addr16
jg
jmp
ins
dec
inc
(bad)
fs
lds
push
lea
in
jp
icebp
jnp
xor
mul
jg
outs
outs
ffree
frstor
aam
(bad)
sti
lds
fcmovb
dec
pusha
pop
or
xlat
jecxz
enter
add
jmp
adc
ja
jl
push
dec
jg
psubsb
icebp
cmp
out
and
xor
mov
push
lods
ret
(bad)
and
add
jnp
imul
ja
cs
cmps
int
mov
sub
sbb
std
je
repz
movs
xchg
nop
add
ja
imul
cmp
xchg
cmp
xchg
jb
int3
adc
sbb
ins
bound
cmp
xor
push
int3
fisubr
adc
mov
pop
and
outs
dec
hlt
dec
ins
je
mov
pop
sub
inc
mov
(bad)
inc
ret
cs
(bad)
jg
mov
and
sub
add
scas
cld
movs
(bad)
idiv
mov
movlps
mov
retf
fdiv
pavgb
and
mov
test
mov
movs
jmp
and
jae
fsubr
mov
movs
jge
out
popa
stos
xor
mov
pop
call
scas
fist
leave
add
dec
repz
and
out
or
call
out
and
outs
push
pop
inc
test
sti
push
jne
pop
jns
in
bound
ins
pop
leave
inc
aaa
jae
dec
not
js
in
push
sar
ins
imul
clc
push
movs
call
test
je
add
dec
outs
leave
call
out
xlat
push
mov
addr16
out
mov
addr16
mov
mov
sbb
sub
rol
mov
or
mov
mov
out
pop
retf
or
mov
push
or
or
lock
mov
(bad)
movntq
add
popf
and
mov
in
pop
push
aaa
jae
xlat
push
movs
outs
stos
sbb
sbb
mov
je
in
xor
push
mov
ffreep
adc
mov
push
xchg
xor
sub
sti
pop
mov
fimul
dec
push
out
jb
pop
pop
xchg
adc
mov
retf
pop
sbb
popa
outs
call
(bad)
repz
mov
xor
ja
retf
xchg
dec
inc
test
jle
or
fimul
lea
xchg
inc
xor
call
scas
call
pusha
mov
fmul
leave
and
sub
test
stos
xchg
pop
sub
mov
xchg
push
mov
test
mov
cmp
xchg
pop
(bad)
dec
scas
ins
dec
sub
add
or
mov
mov
fistp
adc
and
sbb
pop
(bad)
mov
mov
xchg
(bad)
pop
fcomp
mov
scas
fiadd
sahf
popa
outs
cmps
stc
dec
test
mov
pop
sbb
cmc
pop
mov
not
jecxz
mov
leave
in
xor
push
(bad)
push
dec
push
add
test
cmc
pop
adc
push
push
leave
std
ds
das
add
aas
cmps
(bad)
xor
test
sub
inc
push
or
mov
out
pop
xor
call
jne
lods
cs
mov
lods
add
gs
sbb
out
push
pop
or
push
pusha
dec
jge
test
and
mov
dec
lahf
pop
pushf
ror
cmps
and
mov
mov
mov
push
out
mov
outs
out
fst
in
nop
jecxz
mov
repnz
jmp
lahf
gs
(bad)
adc
(bad)
sti
inc
leave
gs
loopne
(bad)
call
ret
pusha
add
mov
xchg
iret
pop
push
mov
push
sub
popa
mov
inc
out
sbb
cwde
sbb
mov
mov
sbb
cmp
xchg
fistp
inc
cmp
and
inc
push
ret
sub
mov
jmp
pop
out
jmp
fisub
int3
jb
mov
or
jl
pop
sub
and
test
stos
nop
dec
cwde
xchg
sub
fsubrp
ins
mov
inc
lahf
xchg
out
mov
mov
push
and
mov
cdq
push
mov
dec
and
das
mov
jns
xchg
mov
popa
cmp
in
pop
jecxz
or
pop
mov
pop
mov
out
dec
cld
sbb
das
inc
push
cmp
lods
push
shr
fdiv
movs
outs
xchg
xchg
out
in
ins
rcr
mov
cmp
stos
mov
cmps
inc
retf
mov
jae
xchg
into
cmc
cld
push
jae
xchg
mov
mov
or
fiadd
adc
jae
bnd
xor
mov
mov
add
xchg
mov
repnz
gs
push
rcl
mov
ins
sbb
scas
and
and
es
test
aam
mov
int3
fiadd
jns
xchg
lds
push
sti
bound
dec
movs
aaa
pop
(bad)
and
arpl
gs
and
fmul
sbb
cmp
arpl
bound
sub
and
daa
cmp
ret
js
rol
mov
jnp
jge
ficomp
test
cmp
pop
sbb
aad
sub
cmp
or
mov
push
outs
jnp
call
pop
mov
call
loopne
sbb
call
stos
sbb
data16
ja
mov
mov
xchg
or
mov
pop
sub
push
add
mov
pop
pop
aaa
pop
(bad)
jb
xor
add
mov
push
repz
inc
repnz
mov
out
loope
sub
hlt
cmp
out
xchg
adc
xchg
xchg
mov
(bad)
out
fstp
mov
rcl
dec
xchg
into
rol
into
push
out
inc
pushf
add
and
dec
fs
mov
jecxz
cld
or
xchg
sbb
jns
addr16
xchg
jae
pop
mov
repnz
aas
mov
push
mov
adc
pop
addr16
loopne
sbb
icebp
add
pop
xchg
or
adc
xchg
jae
jecxz
sub
xor
(bad)
mov
in
repnz
mov
or
xchg
mov
es
cwde
sbb
gs
test
pop
mul
jle
sar
jle
aaa
aam
xchg
xor
scas
add
sar
mov
repz
xlat
xchg
repz
in
inc
loop
test
shl
jecxz
push
mov
xchg
not
add
fimul
and
outs
pusha
jo
ret
dec
inc
cmc
in
test
cld
sub
aam
call
jmp
or
inc
sbb
add
rcl
push
xchg
inc
adc
sub
pop
ret
fst
addr16
cmp
dec
lea
sub
jne
lods
inc
push
and
je
(bad)
mov
mov
movs
mov
imul
test
mov
jo
das
shl
out
sub
sahf
fdivr
sbb
push
retf
sbb
out
mov
cmp
das
ret
into
lahf
popa
fldenv
(bad)
movs
jp
mov
sbb
call
cdq
and
nop
mov
fild
or
dec
fild
fs
aad
aas
cld
(bad)
jp
xor
sub
(bad)
daa
into
inc
xor
xor
lods
out
outs
pop
sbb
push
fldcw
ror
js
jno
es
lods
inc
mov
hlt
jge
or
xchg
aas
outs
shl
retf
jae
outs
pop
jno
gs
shl
sub
mov
jbe
fisub
jg
icebp
rol
cmp
mov
dec
and
or
popf
jge
xchg
mov
lds
pop
repnz
outs
mov
hlt
fs
inc
ret
mov
mov
shl
cmp
call
dec
cwde
push
test
add
jne
in
jbe
pop
mov
scas
loop
mov
(bad)
hlt
cmp
adc
jmp
movs
sub
sbb
sbb
lahf
in
test
clc
(bad)
jg
add
adc
xor
add
dec
and
sbb
mov
push
mov
fsubr
mov
mov
jb
dec
add
call
xchg
mov
sub
(bad)
call
or
ins
jg
test
aad
ss
imul
loopne
arpl
jmp
xor
ret
imul
add
add
leave
push
jb
jno
adc
or
loope
dec
pop
push
stos
xchg
fld
pop
scas
in
mov
lods
jp
fcom
sub
sbb
fcomp
ror
adc
jnp
pop
je
nop
int
and
repnz
push
adc
repnz
mov
(bad)
or
or
mov
aad
mov
shl
inc
and
add
xchg
or
mov
or
sbb
xchg
or
outs
arpl
add
lods
mov
and
es
pmullw
add
sub
lods
mov
out
mov
es
mov
ret
lods
xchg
loope
fcomp
push
scas
sub
sbb
dec
in
(bad)
out
icebp
arpl
inc
cmp
out
pop
cmp
add
(bad)
out
aas
aas
in
mov
lahf
shl
lea
mov
nop
in
imul
cmp
mov
aaa
ins
push
and
mov
jne
sub
pop
test
or
pushf
sub
add
popa
jno
jae
inc
data16
test
dec
fld
push
cs
in
out
daa
sbb
inc
jg
sub
in
sbb
or
or
and
fcomp
ds
push
imul
frstor
loop
xor
lea
add
mov
push
fstp
cmps
cmp
push
test
out
test
jmp
mov
mov
call
fcom
cmps
sbb
xor
call
mov
(bad)
cwde
cmovbe
push
sbb
sbb
test
fstp
in
bound
xchg
ret
mov
pop
xchg
mov
dec
bound
scas
mov
into
jns
lods
in
push
cdq
retf
push
or
mov
jne
mov
mov
sbb
jae
sub
cmp
and
push
sub
fcomp
adc
test
ret
mov
and
or
push
or
adc
sbb
xchg
mov
neg
xor
xchg
xor
xchg
test
mov
mov
mov
outs
xor
fisubr
outs
lds
inc
icebp
scas
push
xchg
test
punpcklbw
push
sbb
out
push
aaa
hlt
mov
dec
or
jnp
or
xchg
mov
enter
pop
pop
dec
pop
test
mov
fwait
test
push
fisub
std
xor
sub
repnz
jbe
les
sub
and
dec
ds
retf
mov
out
xchg
and
sahf
jg
or
or
in
fsub
pop
jmp
mov
(bad)
push
mov
adc
and
(bad)
sub
and
xor
or
lea
jp
sub
fcom
mov
pushf
sbb
or
xor
aas
mov
cmp
call
daa
ins
fisubr
xchg
sub
adc
bound
sub
pusha
inc
or
neg
pusha
rcr
push
dec
ja
jns
retf
mov
jnp
mov
push
cld
pop
ja
add
arpl
shl
out
fs
and
inc
arpl
outs
icebp
sbb
push
pop
test
push
(bad)
adc
or
retf
and
sbb
push
sub
out
(bad)
ss
scas
mov
mov
adc
pop
scas
cmp
xchg
xchg
add
(bad)
cmp
fidiv
lea
mov
and
leave
adc
or
retf
push
loop
sbb
pop
xor
enter
mov
cmp
mov
xchg
arpl
mov
add
lea
jnp
jnp
gs
mov
jbe
mov
std
ror
arpl
jmp
mov
and
outs
lods
stc
add
xchg
xchg
hlt
mov
test
inc
or
push
mov
dec
add
movsx
jle
das
call
push
or
push
int
pop
pop
pop
and
adc
xchg
xchg
outs
test
std
int3
aas
xor
je
push
adc
fldenv
xchg
iret
retf
pop
loope
adc
inc
jmp
pop
sti
mov
cmp
aas
fisub
sbb
xor
or
sahf
pop
dec
xor
and
xchg
push
jbe
cmps
fidivr
ret
fcmovbe
movs
(bad)
pop
test
mov
inc
cdq
jmp
out
inc
mov
xlat
lods
jns
push
jmp
or
cmp
inc
mov
xor
xor
xchg
mov
mov
rol
mov
mov
and
push
mov
mov
fimul
push
shr
test
data16
cmp
mov
icebp
cmp
add
out
mov
mov
jge
lds
sub
stos
pop
ret
jnp
in
es
hlt
mov
jge
cmps
push
call
mov
ins
das
lea
hlt
sub
ret
hlt
(bad)
addr16
div
cmp
in
call
shr
jle
pop
mov
pop
xchg
inc
xlat
ret
outs
loope
fild
pop
push
jnp
push
sub
sbb
test
mov
jle
mov
xor
xor
adc
repz
xchg
mov
push
or
mov
xor
sub
mov
xchg
call
cmp
xlat
and
sub
cli
push
scas
ror
sahf
test
(bad)
scas
repz
mov
jle
jno
scas
push
mov
add
add
or
popf
and
loopne
lahf
xor
leave
cmps
mov
jae
arpl
fist
push
sbb
fsubr
aaa
dec
loop
cmc
or
cmc
xor
arpl
or
cld
jbe
xchg
sbb
scas
jns
rol
arpl
cli
mov
sub
shl
enter
sar
jae
ins
out
mov
push
add
(bad)
nop
fdiv
ret
shl
je
dec
mov
cmp
cwde
sbb
stc
mov
sbb
jns
movs
and
push
push
popa
test
aas
and
sbb
or
mov
mov
mov
stos
lods
gs
rcl
fs
scas
sar
ds
jns
cmp
add
fstp
into
jns
mov
cdq
cli
xor
scas
add
mov
mov
mov
mov
inc
pop
addr16
rol
cli
fimul
retf
pop
mov
test
iret
es
ror
adc
push
or
mov
and
ret
push
in
push
mov
or
pop
pop
daa
fwait
mov
jno
inc
jmp
not
fidivr
push
xlat
jbe
cmp
jle
or
xchg
and
clc
repz
and
das
ins
or
pop
movs
push
test
test
scas
push
mov
pop
fiadd
push
or
sbb
rcl
and
cmp
in
test
xchg
js
mov
sti
inc
cs
mov
enter
(bad)
cld
outs
xchg
jle
test
xchg
stc
pop
enter
cmp
push
clc
cld
(bad)
cmps
add
retf
cmp
lods
popa
jno
in
sub
shl
jnp
sahf
fistp
cli
push
or
clc
dec
sub
or
xchg
scas
push
in
jnp
cs
loop
clc
out
pop
outs
imul
sbb
addr16
(bad)
jmp
cs
fninit
pop
es
outs
and
xchg
jp
pop
xor
jo
and
add
xlat
and
inc
popf
mov
push
jle
mov
inc
push
mov
paddq
fsub
xchg
inc
xor
fxch
mov
sbb
es
and
rol
sub
data16
xchg
sbb
rcr
lods
mov
pop
xchg
popf
clc
into
pusha
scas
inc
pop
sub
arpl
or
ss
jno
pop
mov
or
cdq
popf
adc
mov
push
shl
mov
jb
sar
aad
or
cmp
xchg
fmul
push
push
sar
cdq
imul
dec
jl
(bad)
xchg
shl
mov
xchg
into
xor
ds
call
xchg
scas
inc
sub
jnp
ja
out
loopne
ss
rcl
fdivr
cdq
sbb
pop
inc
adc
dec
(bad)
or
loope
jg
pop
pusha
fcmovnb
jmp
std
jbe
cmp
adc
pop
pop
sub
push
adc
adc
or
rol
fidivr
adc
xor
push
cmp
mov
fucom
sub
push
xor
(bad)
aam
adc
mov
cmp
cwde
mov
cdq
jb
outs
and
mov
cs
mov
fs
loop
xchg
add
xor
cli
adc
jns
aad
jnp
mov
adc
jle
xchg
lods
push
fcmovne
outs
add
rcr
xor
push
(bad)
and
and
xchg
daa
mov
dec
mov
sub
ds
loopne
sub
loop
out
and
mov
std
jo
mov
xchg
fwait
add
movs
jbe
push
dec
(bad)
sbb
jmp
das
test
jl
cmp
or
jp
adc
sub
cmp
mov
push
dec
and
pop
xchg
sbb
sbb
push
(bad)
dec
inc
aam
retf
mov
adc
mov
mov
sub
nop
test
xor
pop
jo
xlat
out
mov
loopne
mov
test
lods
clc
inc
xor
mov
dec
test
(bad)
push
push
jg
push
pusha
pop
fst
in
movs
xchg
xlat
mov
fcmovb
vprotq
mov
or
add
adc
cs
sbb
add
dec
test
sub
pop
inc
lods
pop
fisttp
adc
nop
fild
add
jmp
adc
xor
jg
sub
icebp
adc
jg
jbe
stos
pushf
adc
pop
lods
jg
mov
into
pop
ja
gs
or
mov
loopne
mov
add
xchg
jmp
lahf
pop
test
sub
fld
cmp
aas
and
sti
int
mov
adc
adc
pop
lods
mov
fist
in
inc
lahf
dec
ins
jp
or
aad
sub
push
cmp
add
push
jle
jmp
(bad)
aad
sub
jecxz
retf
repz
sbb
add
jns
ror
jnp
pop
add
jecxz
and
leave
jae
sbb
sbb
pop
cmp
rol
xor
xchg
mov
adc
cmp
enter
sbb
inc
add
mov
and
and
jecxz
aaa
add
mov
cmp
mov
(bad)
std
and
call
or
xor
cmp
fs
fwait
shr
clc
das
ds
fbld
iret
adc
mov
pop
add
in
mov
stc
adc
xor
shr
inc
cmp
jne
sbb
xor
rol
loopne
and
inc
les
aam
sub
sbb
(bad)
mov
pop
inc
mov
pop
(bad)
rol
or
popf
mov
call
call
out
sbb
ins
jb
in
outs
cld
lds
or
pop
fadd
mov
fcmovu
mov
aad
iret
test
pushf
out
cld
sbb
sbb
cmc
in
mov
repnz
pop
or
or
mov
out
ja
xor
xor
sbb
shl
popf
retf
out
sub
dec
fwait
dec
push
xor
cmp
in
or
or
push
sub
mov
sub
lods
retf
sbb
test
sub
mov
and
jmp
pop
rcr
int3
je
and
pop
mov
cmp
push
jnp
fist
sbb
mov
(bad)
adc
popa
mov
and
jns
cs
aaa
faddp
aaa
lock
sbb
sti
add
test
and
call
pop
pop
adc
adc
cmp
cmp
imul
ja
cmp
fadd
mov
out
enter
inc
out
mov
rcl
stos
idiv
outs
popf
fld
movs
adc
scas
popa
pop
scas
and
inc
xchg
jp
push
adc
mov
mov
cwde
mov
sub
(bad)
in
mov
dec
xor
lods
cmp
ror
enter
mov
jo
cmp
gs
mov
not
not
ins
enter
inc
adc
push
std
add
push
pop
cmp
aas
cmc
cmp
adc
fadd
scas
daa
pusha
pop
mov
inc
push
dec
mov
add
in
adc
popa
addr16
push
ins
mov
js
ins
xor
neg
jecxz
xor
(bad)
outs
dec
mov
jns
retf
fwait
jbe
ds
or
in
push
dec
shl
add
inc
call
mov
or
xor
mov
or
mov
jmp
push
retf
xchg
or
ror
loopne
add
movs
jno
pop
mov
cmp
jp
das
and
neg
xchg
sbb
int3
fs
xor
cmp
mov
or
pop
sbb
bound
jbe
fs
push
push
(bad)
cs
mov
sbb
sub
xor
cdq
movs
retf
xchg
loopne
das
rol
sbb
jg
fcmovu
fadd
sahf
sub
mov
adc
push
out
imul
lds
xchg
push
test
clc
int
in
xor
cmp
stc
mov
or
mov
rcl
sar
sbb
scas
xchg
in
mov
mov
mov
out
dec
icebp
ins
jge
add
cdq
mov
add
xor
(bad)
pop
loop
dec
stos
iret
lods
test
shr
dec
jns
aad
inc
gs
dec
out
xor
call
add
mov
adc
daa
mov
call
sub
popf
stc
pop
fisub
cmp
js
sub
push
fidivr
ror
xchg
push
mov
xchg
push
pop
and
sar
and
dec
ins
sbb
and
sbb
mov
rcl
xor
outs
ins
jno
jno
fbld
cli
dec
inc
xchg
aam
inc
ins
call
stos
push
cmp
call
inc
pop
enter
mov
jmp
cmp
ins
mov
adc
or
stos
popf
and
jb
mov
fist
jl
sub
fyl2x
sahf
jb
pop
bound
dec
jle
pop
adc
and
jno
or
add
mov
sub
pop
mov
jns
call
mov
in
jle
es
push
paddq
sub
call
in
cmp
pop
in
ficomp
inc
sub
test
les
xchg
push
xchg
xchg
xchg
test
mov
test
rcr
fisttp
push
jmp
jb
lock
out
(bad)
dec
cmps
xor
aad
jnp
and
icebp
jo
dec
idiv
or
out
add
mov
xlat
stos
push
fwait
xor
mov
pop
dec
es
pop
ret
inc
xlat
jmp
arpl
push
popf
lahf
retf
push
pop
cmp
(bad)
adc
jns
xlat
push
in
add
cmp
mov
pop
dec
push
jb
inc
adc
jg
movs
js
out
add
cmp
xlat
xchg
in
mov
fsub
jmp
jns
mov
cld
sub
shl
pop
into
sahf
mov
mov
fcomp
fsubr
out
loopne
rcl
mov
jecxz
push
test
mov
test
cmps
push
cmp
enter
xchg
xchg
in
fcom
push
dec
adc
or
stos
push
cwde
int
sub
sub
cmp
adc
in
and
or
mov
shl
cmp
test
xchg
push
ins
push
fild
push
test
cs
int
mov
inc
sbb
repnz
outs
xchg
jle
add
(bad)
fisttp
dec
xor
dec
pop
sub
fwait
mov
ror
outs
ret
push
(bad)
movs
add
jge
xchg
pushf
in
daa
clc
(bad)
and
pushf
movs
mov
cmp
(bad)
aam
stos
push
inc
test
push
cli
adc
pop
shl
jns
and
mov
pop
cwde
cs
mov
push
in
(bad)
jb
add
ret
sar
call
ins
call
fadd
addr16
xlat
fdivr
cmp
cmps
pop
(bad)
lds
call
adc
sbb
cmps
repz
rcr
pop
loope
cmc
add
sahf
push
neg
call
xor
test
leave
and
out
in
mov
movs
enter
jns
cmp
les
sub
stos
sub
psraw
cld
lods
es
aas
add
sti
daa
js
mov
gs
jns
xor
imul
and
rcl
sbb
sbb
arpl
pop
retf
loopne
add
outs
out
mov
jno
cmps
out
jecxz
fcomp
inc
ret
jg
(bad)
sub
sti
frstor
mov
aaa
add
cmp
pop
xchg
ins
add
jns
stc
shl
ja
sbb
or
pop
stos
loope
ds
jmp
rcr
and
fistp
jbe
xchg
sub
sbb
adc
aad
cmp
pop
pop
js
and
repz
jb
push
cli
mov
leave
das
pop
mov
mov
add
push
mov
cmp
outs
scas
aad
mov
pop
mov
mov
xchg
and
push
outs
(bad)
mov
add
dec
in
lock
xor
cld
push
pandn
sub
cwde
push
or
icebp
dec
fmul
test
mov
sti
push
aad
call
cmps
mov
pop
repnz
ret
cmp
inc
in
inc
adc
movs
sbb
inc
in
pop
xchg
xor
mov
dec
mov
dec
jmp
push
jo
or
cmps
xchg
clc
fwait
xchg
(bad)
cmc
and
shr
movs
push
daa
dec
mov
daa
and
push
sub
sar
jle
cld
ret
mov
inc
ret
push
lea
add
fisub
les
cwde
js
pop
shr
pmullw
or
mov
ja
mov
mov
mov
xor
or
js
sbb
pop
into
int3
lahf
(bad)
in
adc
mov
test
adc
cli
push
sub
jo
mov
call
cs
dec
cmp
idiv
push
mov
xor
pop
jo
mov
in
(bad)
out
ret
xor
inc
pop
inc
das
outs
fcomp
pop
jmp
mov
loopne
lock
ret
xor
fild
in
pop
xor
pop
push
mov
xor
fbld
movs
outs
and
push
outs
pop
xor
mov
push
pop
or
hlt
bound
adc
push
mov
or
popw
mov
pop
jno
xchg
out
or
sbb
(bad)
icebp
pop
cdq
xor
push
fild
hlt
xchg
ins
mov
jb
xchg
sbb
in
sub
dec
adc
cdq
sbb
jne
and
xchg
sub
jp
mov
movs
pop
mov
dec
mov
test
lahf
(bad)
inc
inc
mov
int3
inc
dec
dec
inc
xchg
dec
sbb
stos
test
xor
gs
cmp
jge
hlt
lods
movs
fs
pop
call
pop
sbb
sub
into
pop
pop
cmp
stos
sub
(bad)
jp
ret
mov
mov
fdivp
imul
xchg
or
xor
jno
sbb
mov
out
shl
mov
call
movs
int
in
adc
jo
push
adc
(bad)
fld
enter
leave
push
cmp
inc
repz
inc
push
pop
sar
inc
ins
mov
iret
inc
inc
stc
pop
mov
scas
xchg
or
movs
inc
mov
cwde
dec
adc
mov
call
xchg
jmp
pop
dec
and
test
jle
cli
mov
into
clc
xchg
fstp
stos
rcr
or
into
popa
ins
mov
and
jp
in
xor
mov
xchg
mov
fs
in
xor
pop
movs
sbb
inc
mov
aam
std
div
ret
mov
cmp
in
add
mov
test
test
retf
push
add
mov
mov
outs
and
sub
out
xchg
dec
in
cld
sbb
ins
xor
(bad)
mov
mov
dec
push
aaa
mov
popf
mov
xor
cs
xchg
jb
inc
mov
push
pop
std
dec
fisubr
mov
inc
bound
cli
sar
idiv
repz
test
jbe
imul
inc
jns
adc
int
daa
or
retf
js
and
cmc
fimul
sub
test
push
invd
inc
sbb
std
mov
pop
test
(bad)
fiadd
je
mov
and
xchg
pop
nop
fs
push
ins
inc
in
mov
push
push
mov
into
push
sub
mov
repz
(bad)
cmp
sar
dec
frstor
dec
ja
pop
fsub
cs
jbe
inc
and
jmp
lods
leave
xor
add
fisttp
rol
mov
fdiv
pop
xchg
stc
and
fs
sbb
or
xor
xchg
xchg
mov
call
in
and
outs
(bad)
jl
inc
jne
xchg
pop
xlat
jmp
(bad)
xchg
(bad)
cli
jp
inc
loope
inc
mov
rcl
add
add
shl
xor
inc
adc
xchg
inc
jmp
data16
adc
jp
xor
aas
xor
xlat
outs
ins
mov
or
and
dec
cmp
sbb
xlat
jb
mov
jne
jmp
inc
sbb
dec
lods
mov
xor
add
sahf
hlt
push
ror
outs
xor
fsubr
stos
ficom
dec
test
adc
lods
mov
pop
sub
cs
(bad)
ror
shl
lock
rol
mov
jnp
push
call
outs
xor
inc
jmp
dec
xchg
movs
ror
mov
sub
sbb
adc
ins
jg
sub
jns
pop
test
and
daa
sub
sub
imul
jne
int
fnclex
adc
lods
cmp
bswap
mul
fcomip
lock
jg
data16
fwait
les
mov
cmc
mov
into
cmc
mov
adc
test
mov
dec
jo
sbb
inc
fimul
or
fstp
cmp
and
repz
adc
dec
or
cmp
jecxz
loope
bound
imul
aam
(bad)
in
xchg
pop
daa
and
retf
shr
in
xchg
rol
loopne
jbe
cmp
mov
or
lock
xchg
pop
ins
mov
nop
in
aas
jecxz
ins
cmp
or
sbb
jb
data16
mov
jle
shr
xor
int
test
add
nop
push
adc
jae
nop
adc
daa
dec
jg
mov
(bad)
sahf
das
mov
sub
fcmovnbe
invlpg
das
fsubr
jbe
sbb
in
inc
sahf
pop
lods
test
les
(bad)
inc
or
lahf
jp
xchg
dec
lods
mov
pop
and
cli
mov
dec
jecxz
int3
and
push
retf
and
ins
push
arpl
and
in
or
push
inc
(bad)
mov
in
jmp
(bad)
aam
inc
mov
mov
and
int
rcr
fisub
mov
repz
cmps
jge
in
retf
ror
push
push
rcl
iret
sbb
dec
xchg
sub
push
popa
das
stos
iret
mov
dec
jno
loope
movs
stc
movs
mov
cs
call
fcmovne
in
enter
xchg
push
imul
(bad)
xor
sub
lahf
loop
in
and
adc
loopne
(bad)
mov
daa
mov
push
jmp
pop
rep
jns
das
cwde
aas
jl
inc
iret
fs
mov
push
ret
repnz
mov
mov
adc
nop
xchg
jb
popf
pushw
dec
repz
test
bound
aad
ret
and
pusha
fdiv
xchg
pop
out
cwde
(bad)
mov
jle
or
popa
xchg
aaa
fdivp
and
cld
call
xchg
ss
imul
int3
jnp
xor
add
mov
test
call
repz
ins
in
ins
pop
retf
ret
xchg
jne
jno
jp
pop
idiv
cdq
mov
xor
(bad)
lock
fst
(bad)
pop
iret
sub
jg
jp
popa
sbb
(bad)
sti
push
scas
in
mov
cmp
adc
popf
push
das
xchg
jb
(bad)
sahf
mov
loope
ret
xchg
dec
cmp
int3
sbb
loop
in
jae
mov
sti
mov
fbld
les
add
xor
ret
ret
adc
call
jl
jmp
or
(bad)
pop
mov
push
push
out
push
or
lods
pop
out
sub
test
add
fwait
xchg
test
ja
fs
or
mov
fucomi
jbe
cli
mov
jbe
sbb
repz
jecxz
or
test
shl
test
out
jecxz
sbb
sub
lahf
jecxz
mov
gs
ins
movs
addr16
push
mov
retf
gs
xchg
dec
jge
jecxz
dec
cwde
jl
fadd
(bad)
and
outs
aad
aaa
cmp
out
cmp
cmp
xor
cli
daa
cld
imul
outs
adc
mov
sbb
stos
or
fsub
mov
jo
fnsave
loope
je
lock
das
cmp
push
jb
enter
popa
ss
jecxz
mov
jns
inc
lods
xchg
pusha
fbstp
nop
and
mov
bound
cmps
loop
daa
int
fwait
mov
repnz
sti
mov
pop
adc
mov
push
ret
pop
cmp
push
and
sub
push
and
jo
(bad)
std
fisub
mov
or
aaa
jb
movs
or
pop
mov
sbb
and
pop
cmp
repnz
pop
pop
mov
bound
mov
jmp
inc
fisttp
icebp
je
cmps
data16
xchg
cld
cmp
add
or
std
repnz
jns
into
pop
jae
bound
add
retf
cmc
cwde
push
or
add
push
cwde
(bad)
cmc
es
shl
bound
mov
rcl
inc
rcl
pusha
and
div
cmc
imul
inc
xor
icebp
clc
add
jmp
call
sbb
clc
test
mov
adc
sub
ds
popf
hlt
bound
inc
and
pop
enter
cmps
pop
out
movs
add
sahf
push
dec
adc
mov
call
xchg
mov
out
sbb
dec
scas
(bad)
xchg
push
arpl
xchg
enter
cmp
cli
xchg
or
int3
and
and
ret
out
std
fsubrp
xor
or
or
stos
push
dec
adc
mov
adc
jae
cmp
adc
pop
loopne
das
test
mov
cmps
fmul
fwait
mov
enter
dec
cwde
and
and
in
xor
inc
stos
fcom
das
push
out
cmp
pop
stc
xchg
scas
xor
test
outs
lods
popf
test
pop
mov
push
addr16
ret
retf
mov
or
mov
cli
push
push
aad
mov
add
jns
dec
ficom
sbb
lea
sub
imul
cwde
call
and
push
and
addr16
outs
jne
data16
push
icebp
retf
jno
lock
fstp
stc
and
pop
cmps
xchg
outs
ds
cmps
aad
mov
inc
aam
bnd
lds
inc
adc
lahf
stos
rcr
clc
nop
xchg
sti
enter
sar
jl
or
test
cli
iret
xor
xchg
into
sub
jb
hlt
push
push
(bad)
and
stos
lock
or
jmp
cmp
push
(bad)
pop
sbb
sti
push
call
pop
and
repz
cmp
add
(bad)
mov
aas
lods
jmp
sub
mov
sbb
jns
sbb
fwait
and
add
sbb
inc
int
shl
ffreep
and
sub
test
adc
add
mov
ds
ins
push
or
push
(bad)
cs
inc
in
fisub
sbb
mov
movs
call
adc
inc
mov
jno
jno
xchg
(bad)
ja
push
cmp
shl
cmps
retf
xor
or
scas
sub
imul
js
rcl
fnstcw
cmp
pop
bound
and
xchg
dec
(bad)
adc
idiv
jnp
mov
icebp
stc
xchg
or
data16
out
add
(bad)
jl
jno
stos
or
jbe
pop
sub
sti
jo
sbb
std
xchg
mov
add
sbb
and
mov
leave
pop
dec
mov
dec
mov
ins
fsub
cmp
mov
lods
jmp
movsx
jge
inc
and
cmp
div
jae
jl
rcpps
add
pop
aad
ds
or
in
xchg
ins
je
sti
addr16
stos
and
mov
ss
in
stos
sbb
ror
jb
int3
pop
or
push
cwde
sbb
mov
xor
(bad)
mov
scas
xchg
mov
ret
lahf
mov
or
out
lock
xchg
sub
hlt
jg
call
inc
stos
mov
ins
jno
popa
arpl
cmp
xor
or
mov
xchg
movs
cld
cmp
xor
mov
xchg
mov
cmp
xor
je
and
xor
adc
out
add
call
xchg
pop
popf
push
xchg
sub
or
test
shl
popa
cmp
mov
gs
add
add
mov
nop
movs
add
mov
ror
pop
jmp
push
add
imul
cmc
daa
movs
fwait
cmps
mov
pusha
sub
pop
iret
(bad)
lock
pop
loop
fidivr
or
xchg
arpl
movs
imul
mov
mov
call
mov
js
shr
adc
xchg
lea
cdq
jo
push
or
mov
rol
loope
push
mov
mov
push
dec
(bad)
mov
jmp
push
(bad)
out
loopne
sbb
pop
pop
fsub
bound
(bad)
cmp
mov
xor
jbe
ins
jae
int
xchg
movs
adc
movs
pusha
inc
out
pop
mov
fadd
inc
aam
inc
or
xchg
pop
xchg
inc
push
dec
int3
sbb
in
sub
sub
sbb
sub
mov
push
inc
pop
inc
es
push
popa
rdpmc
jmp
outs
sub
not
loop
into
test
mov
push
push
retf
xchg
into
sbb
retf
xor
push
pop
imul
mov
add
sub
fsub
jmp
jg
dec
cwde
adc
dec
add
leave
or
jbe
pop
retf
dec
iret
sti
outs
xor
leave
test
stos
cmp
push
mov
pop
mov
out
lea
je
int3
cwde
into
lods
adc
jb
and
pop
jl
outs
push
(bad)
jno
jo
(bad)
aas
cmps
jg
into
ror
int
xchg
sub
mov
stos
xor
aad
mov
in
jg
stos
(bad)
mov
inc
hlt
and
push
test
cmp
sbb
cmc
push
mov
ficomp
test
xor
lahf
sub
stc
lds
int
aam
mov
mov
movs
fnstenv
xchg
outs
xchg
ja
and
popa
aam
jne
jl
dec
mov
push
cs
jbe
inc
scas
cmp
mov
or
mov
jecxz
and
or
test
or
xchg
imul
and
arpl
(bad)
xchg
aas
sbb
xlat
and
mov
sar
outs
inc
scas
clc
or
fdiv
mov
icebp
out
inc
mov
cmc
pop
(bad)
jmp
mov
pop
repz
mov
jno
cmps
popf
fidivr
xor
lea
lods
fcmovnbe
add
mov
leave
rol
xlat
pop
mov
test
pop
retf
mov
fs
sti
dec
jecxz
dec
mov
cdq
cmps
pop
jge
pushf
adc
fwait
std
scas
mov
rcr
icebp
sub
lahf
mov
jae
adc
xchg
mov
je
out
fdiv
mov
or
rcl
xor
pop
mov
fs
in
into
pop
fld
fiadd
jle
call
pop
cli
pushf
hlt
push
aad
mov
mov
or
xchg
aaa
mov
adc
pop
mov
inc
ja
inc
sahf
stos
jmp
cmps
mov
add
call
test
mov
push
rcr
je
mov
xchg
inc
push
(bad)
jecxz
jae
shl
arpl
inc
jb
jmp
mov
jmp
cmp
loop
mov
xchg
mov
dec
popf
pop
push
xchg
nop
pop
aas
out
in
sbb
mov
cmp
push
pop
add
mulps
sub
adc
addr16
or
aad
scas
cmp
pop
xchg
xchg
ins
mov
or
out
xchg
inc
pop
sub
sar
xor
add
rol
inc
xor
ror
sub
sbb
inc
push
int3
(bad)
mov
push
add
mov
(bad)
shl
sahf
stos
xchg
and
int
pop
push
clc
dec
imul
mov
popf
sahf
mov
rol
or
mov
ret
jmp
outs
sbb
pop
scas
(bad)
mov
in
js
cdq
jnp
fwait
clc
js
adc
fild
(bad)
and
cli
scas
xor
(bad)
mov
and
mov
pop
lds
imul
int3
outs
fbstp
adc
xor
xor
imul
(bad)
cld
or
lahf
push
mov
es
push
addr16
and
push
pop
and
jmp
scas
pop
jne
js
test
push
adc
aad
mov
jno
mov
mov
imul
les
shl
(bad)
jmp
cli
mov
mov
test
fmulp
push
repz
push
and
out
call
dec
xor
ds
push
mov
push
aam
cmp
mov
push
pop
mov
push
push
inc
jno
fnop
inc
mov
sub
cli
lea
jmp
cmps
test
pop
and
(bad)
retf
js
mov
int3
push
inc
xchg
das
sub
fsubr
push
les
fs
(bad)
cwde
mov
jmp
cmp
fisttp
lods
int
push
pop
jo
or
retf
sbb
call
mov
outs
jae
cmps
xchg
ss
xor
ror
mov
test
and
imul
in
(bad)
adc
sbb
cmp
xor
pop
jno
mov
inc
inc
out
pop
jp
mov
inc
push
cmps
(bad)
push
lds
pop
call
sub
mov
mov
xor
les
jno
fsub
sbb
loop
jnp
icebp
das
test
test
dec
imul
daa
xchg
aaa
ficom
daa
out
nop
inc
mov
(bad)
popf
movs
(bad)
cmc
lea
ret
xor
xlat
test
dec
loop
aam
adc
imul
hlt
jl
retf
(bad)
aad
dec
jecxz
and
push
xchg
adc
and
idiv
lahf
pop
push
mov
ins
aad
js
pop
mov
dec
pop
or
xlat
sub
push
je
or
das
dec
aam
mov
int
push
retf
outs
push
cmp
shr
mov
nop
xchg
(bad)
mov
les
pop
shl
push
cli
push
hlt
int
sub
sahf
xchg
iret
push
xchg
mov
mov
imul
imul
cli
inc
push
dec
int
scas
push
add
jo
pop
ja
aas
pop
pop
inc
adc
xlat
int
shr
xchg
adc
call
loop
lock
inc
jmp
xor
xor
push
jne
push
and
(bad)
adc
arpl
lahf
or
stos
shr
cdq
mov
push
ss
dec
popa
inc
xor
daa
push
dec
(bad)
xlat
sub
lods
sbb
out
sbb
push
hlt
push
retf
mov
mov
and
inc
lea
loopne
xchg
dec
pusha
bound
in
es
sub
cld
unpckhps
xor
pop
scas
movs
stos
push
in
jmp
ss
dec
mov
jnp
lock
fidivr
pop
cmc
data16
pushf
xlat
xor
mov
or
dec
inc
rcr
mov
into
scas
push
std
cli
fcom
retf
push
pop
xor
nop
mov
xchg
pop
iret
xor
das
lahf
push
pop
cmp
inc
inc
arpl
daa
aad
inc
jp
push
or
sub
ud0
pop
adc
xor
mov
fbld
out
mov
jl
stos
xchg
inc
ss
jb
arpl
xor
scas
lods
add
aad
sub
lods
repnz
frstor
stos
cwde
xchg
test
hlt
sub
mov
add
jl
icebp
lea
rcl
pusha
sbb
nop
mov
mov
sar
mov
push
xchg
lods
cs
mov
add
xchg
mov
mov
mov
(bad)
test
mov
stc
mov
sub
jae
mov
adc
xchg
icebp
aam
jno
sub
test
mov
add
sbb
xor
dec
out
call
dec
mov
add
cmp
sbb
adc
int
mov
jne
es
push
mov
in
cld
fnstenv
or
movs
js
std
loop
(bad)
movs
jge
xor
mov
jo
sbb
cmp
out
push
and
sbb
jmp
and
fimul
mov
vcvtdq2pd
inc
jae
shl
loope
and
xchg
fsubr
fwait
dec
hlt
jp
loop
add
iret
retf
test
dec
jo
fs
mov
mov
pop
lds
mov
add
imul
es
movs
daa
sub
jecxz
mov
aas
adc
xor
add
mov
fisttp
pop
mov
sub
(bad)
pop
push
pop
int
push
cmp
inc
sbb
xchg
push
inc
loope
pop
aas
(bad)
ffree
xchg
sub
(bad)
(bad)
ss
aas
ins
jnp
or
cwde
and
cmp
push
std
mov
pusha
cmps
inc
jl
je
push
mov
div
loop
addr16
lock
scas
pop
ret
test
ss
pop
fst
mov
loop
call
das
jbe
xor
sti
xchg
int
mov
cmp
mov
je
mov
(bad)
fcomip
sub
imul
jb
jmp
dec
lea
inc
xchg
push
in
in
or
inc
shl
mov
addr16
rol
repz
jo
add
xchg
inc
(bad)
cwde
and
(bad)
(bad)
idiv
icebp
xlat
xchg
ds
cli
ret
pop
addr16
leave
jbe
hlt
or
inc
addr16
hlt
int3
pusha
jge
inc
sub
enter
(bad)
std
xor
mov
cli
add
and
ja
je
aaa
dec
scas
(bad)
cmps
into
dec
cmc
ret
and
pushf
das
mov
call
jl
repz
mov
stc
ret
sub
adc
or
nop
sub
add
stos
sub
ins
jns
or
pusha
in
pop
in
in
or
adc
repz
push
ja
fwait
cmps
stos
push
das
mov
dec
xchg
mov
inc
scas
test
or
ins
lods
add
dec
or
cmps
jmp
cdq
div
mov
dec
inc
daa
in
xchg
add
ins
test
sub
out
or
xor
ficomp
cmc
int
xor
bound
cmc
(bad)
stos
jle
xor
push
mov
ins
je
int3
sbb
add
not
or
lods
idiv
test
dec
shr
lods
add
ss
mov
mov
pop
gs
jmp
rcr
retf
xchg
jno
and
in
xchg
repz
shl
retf
lods
push
fisubr
inc
(bad)
cmp
mov
dec
jp
int
mov
leave
xor
movs
jp
lock
push
add
cli
sub
into
into
inc
sbb
in
ds
(bad)
xchg
mov
add
pushf
mov
outs
dec
fcom
fcomip
and
mov
sbb
xchg
test
sbb
lahf
in
out
jnp
out
lahf
xor
push
std
icebp
jge
jae
sbb
lds
add
sbb
xchg
push
(bad)
dec
dec
mov
push
pushf
cld
je
lods
cld
mov
push
shl
imul
cmc
outs
hlt
das
inc
movs
sbb
push
add
add
pop
and
retf
out
xor
xchg
mov
push
fcom
je
sbb
in
out
retf
pop
pop
mov
add
arpl
cli
shr
mov
mov
test
sbb
inc
repz
mov
sbb
pop
push
cmps
pop
ret
mov
enter
xchg
add
inc
cli
inc
push
pop
ds
lods
stc
(bad)
outs
pusha
gs
or
adc
call
sbb
icebp
out
and
mov
aam
inc
paddd
xor
mov
nop
dec
dec
nop
mov
cmp
push
xchg
mov
lods
mov
cmp
pop
pop
push
add
into
sub
inc
outs
retf
xchg
dec
icebp
cmps
pop
jns
dec
sbb
jmp
cmps
in
fwait
popa
mov
rcl
pop
jecxz
lock
sti
in
cmp
clc
xchg
sbb
sti
add
jae
out
call
dec
and
jle
jmp
into
add
push
adc
mov
xchg
and
arpl
or
add
mov
mov
test
lods
in
sub
lods
push
jmp
dec
hlt
xchg
movs
sbb
pop
sub
addr16
cvttps2pi
xchg
inc
sub
sbb
inc
sub
shr
sbb
out
sub
imul
fidiv
mov
retw
stos
xor
aam
cmp
adc
clc
xchg
cmp
fmul
mov
pop
test
mov
jno
add
das
cwde
pop
pop
sub
dec
push
mov
int
ja
(bad)
xchg
repnz
cwde
sub
fwait
add
mov
xlat
push
loope
jl
cmp
jp
hlt
and
callw
sbb
mov
jg
(bad)
fabs
lds
popa
imul
retf
and
leave
es
jmp
mov
mov
out
(bad)
je
sub
jne
pusha
ror
mov
retf
fdivr
ret
aaa
outs
xchg
cmp
cmp
xor
push
fild
(bad)
mov
sbb
pop
arpl
push
mov
int
(bad)
(bad)
mov
dec
imul
daa
cs
jb
push
inc
fsubp
jbe
stos
loop
inc
into
jns
add
test
(bad)
mov
pop
aam
mov
fsubr
fwait
loopne
into
je
push
mov
mov
fdivr
data16
hlt
aad
test
inc
pop
adc
std
jae
call
stos
aas
xchg
pushf
push
pop
nop
ret
push
enter
jecxz
pop
jns
pop
ins
outs
inc
adc
mov
add
pop
jecxz
scas
xor
xchg
imul
outs
mov
ds
sub
jns
scas
fiadd
push
nop
sub
mov
fisubr
test
cmp
mov
(bad)
cmp
addr16
mov
sbb
or
lock
xlat
aad
push
inc
rcr
mov
xchg
loope
fwait
or
and
xchg
push
cmp
cmp
js
out
sbb
sub
pop
and
mov
pop
icebp
cmps
(bad)
pop
cmp
aaa
movs
and
xor
fnstcw
sub
jne
les
jle
adc
inc
mov
mov
rol
fmul
loop
cmc
mov
in
fiadd
aam
cmp
push
jbe
cwde
pop
add
xchg
lea
xchg
add
jae
adc
pusha
scas
ror
sti
cs
ror
dec
mov
dec
jo
hlt
ror
clc
xor
cmp
dec
ficomp
neg
repnz
cmp
cdq
xchg
dec
sub
jns
aaa
or
and
xor
mov
aam
cmc
out
add
cmp
mov
sub
dec
mov
scas
mov
test
xchg
inc
popa
xchg
xchg
pop
mov
int
push
iret
dec
sub
mov
inc
jno
arpl
std
sahf
sub
pushf
jp
jle
fimul
inc
sbb
ja
push
int
ss
pop
test
rcl
xchg
push
aaa
loope
sbb
sub
loope
(bad)
jmp
pop
imul
(bad)
jmp
cli
les
ds
fwait
(bad)
sbb
fisub
in
lds
not
pop
out
xor
mov
(bad)
clc
mov
or
dec
stc
daa
pop
mov
pushf
lahf
(bad)
repz
xchg
xchg
xchg
mov
jb
jae
jmp
fidivr
jns
add
jbe
xchg
jmp
and
lds
pop
or
sbb
jge
and
sahf
cli
shl
in
(bad)
mov
mov
test
pop
and
add
mov
jg
cli
xlat
int
adc
push
dec
mov
call
and
popf
or
inc
cmp
retf
and
and
and
push
out
fld
cmp
retf
ret
rol
pop
icebp
mov
sbb
pop
cmps
add
pushf
push
jmp
xchg
addr16
stos
into
mov
ror
mov
jbe
mov
in
sbb
cmp
and
ficom
mov
out
jecxz
xchg
fisttp
jae
adc
mov
jb
add
xchg
fistp
dec
icebp
sub
int3
add
xlat
and
dec
int
popa
add
es
stos
and
shr
test
and
mov
cmp
xchg
xor
cmps
push
in
fisub
fsubr
loope
mov
mov
aad
adc
adc
dec
xor
inc
adc
push
lea
mov
aaa
ret
inc
jb
(bad)
fwait
jp
cmp
sbb
xchg
dec
push
mov
dec
nop
outs
and
and
jl
sti
pop
xchg
dec
into
mov
and
and
and
push
das
je
cld
push
lods
xor
adc
pop
inc
fmulp
ror
cmp
repnz
mov
(bad)
aas
call
aas
push
mov
jl
mov
xchg
ins
int3
(bad)
mov
and
iret
xor
in
adc
gs
jmp
jo
das
or
loopne
(bad)
(bad)
cmp
pop
mov
repnz
mov
fiadd
or
aad
popf
xchg
xchg
mov
dec
push
ror
fldenv
mov
push
aaa
add
push
or
jmp
arpl
fist
pop
pop
inc
cli
and
or
cmp
add
gs
lods
mov
xchg
fnstenv
and
push
add
neg
and
scas
inc
imul
aam
outs
bound
jnp
and
sbb
int3
or
(bad)
in
fdiv
xchg
(bad)
jle
jmp
and
icebp
lds
xor
pop
pop
pop
aaa
fcomp
add
push
push
xchg
sub
retf
test
mov
icebp
sahf
ret
add
mov
or
add
out
aas
in
cdq
xchg
xor
mov
loopne
test
jnp
push
in
clc
outs
jno
sub
mov
mov
call
cld
ja
xchg
mov
pop
jecxz
push
(bad)
push
retf
mov
xor
dec
mov
sub
test
in
test
dec
mov
je
add
mov
pop
lods
pop
in
push
pop
and
dec
push
cli
sub
lods
or
repnz
lahf
cmp
mov
mov
pop
sub
int
aad
inc
sub
dec
dec
into
jnp
(bad)
cld
js
cwde
cwde
jl
xor
adc
test
jo
arpl
and
adc
idiv
add
ss
out
push
ins
xchg
test
xor
jae
push
nop
test
sbb
(bad)
arpl
rcr
aas
arpl
(bad)
cwde
xchg
sub
das
rcr
hlt
mov
add
ds
mov
fcomp
sbb
out
enter
into
cmp
mov
jmp
dec
xchg
shl
xchg
nop
ds
dec
out
mov
scas
in
cmp
sub
pop
cmp
sub
adc
inc
popa
retf
lds
cmp
inc
cmp
or
dec
mov
pop
inc
mov
adc
mov
add
inc
sub
adc
ret
dec
imul
movs
xchg
dec
cld
gs
stos
pop
lds
movs
fisttp
push
outs
or
inc
sub
mov
and
fstp
adc
sbb
xor
enter
nop
push
lahf
clc
movs
inc
jmp
loopne
(bad)
adc
cmp
add
jg
xor
pop
sub
push
lea
and
or
push
ins
sti
cmps
push
mov
rcr
popf
jo
loopne
repz
into
imul
iret
sti
leave
icebp
imul
std
mov
xchg
xor
dec
popf
sahf
popa
and
clc
sbb
popf
aam
cmp
mov
dec
mov
mov
bound
inc
jmp
sar
xor
(bad)
xlat
pop
outs
leave
push
sub
inc
xor
mov
mov
dec
jno
gs
sar
fwait
scas
imul
mov
xchg
or
adc
fidivr
cmp
jmp
sbb
sbb
std
(bad)
jmp
add
push
push
or
push
pop
push
sub
jge
jg
test
adc
xchg
pop
sub
lock
push
sbb
repz
loop
mov
cmps
or
mov
xchg
mov
xchg
leave
jge
in
ins
shl
es
sub
mov
iret
in
and
push
imul
int
loop
push
fbld
xchg
adc
psraw
or
fidiv
ins
arpl
clc
xchg
sub
int3
mov
fdiv
in
dec
xor
jae
mov
xchg
sahf
shl
mov
and
xchg
dec
(bad)
call
mov
jae
mov
lods
and
or
inc
out
std
outs
out
into
sub
ss
add
mov
add
(bad)
inc
loop
stc
dec
add
loop
(bad)
fdiv
pop
xor
retf
dec
fisub
xor
nop
fdivr
imul
aam
pop
push
bound
in
in
std
in
mov
repz
js
pop
jb
fidiv
xchg
xor
fs
ficomp
stos
mov
jmp
(bad)
movs
dec
push
repnz
pop
sbb
xchg
inc
inc
mov
scas
sbb
leave
js
add
jmp
pop
ds
arpl
push
sahf
pop
inc
xchg
cmp
mov
ss
retf
pusha
mov
gs
inc
cs
inc
dec
sbb
push
sub
xchg
fld
mov
adc
cmp
xchg
cwde
push
and
cmp
sub
cdq
mov
adc
imul
inc
outs
adc
mov
call
push
jmp
gs
(bad)
mov
ins
out
or
xchg
sbb
adc
test
test
and
cmp
cld
rol
stc
aam
and
xor
jge
cmps
dec
ret
push
add
(bad)
popf
mov
in
cmp
sbb
aaa
je
in
fnstsw
retf
cmp
lea
and
mov
int
test
add
mov
cmp
dec
inc
sbb
sub
and
jle
mov
xor
jno
xchg
adc
or
inc
jle
js
cld
mov
sbb
fcmovnu
movs
mov
xchg
popa
xchg
jns
jl
inc
jo
loopne
pcmpeqd
cmp
push
jle
repnz
sub
adc
or
mov
fisub
or
sbb
inc
es
push
das
mov
add
sub
dec
jmp
pop
adc
in
lods
dec
jmp
sbb
int
xor
or
std
repnz
sub
sub
inc
pop
mov
push
sub
lds
in
sub
sub
dec
dec
lahf
sbb
div
sub
adc
mov
(bad)
imul
adc
xor
inc
cld
xor
mov
retf
cld
retf
arpl
jl
adc
test
sbb
(bad)
fiadd
clc
sub
push
add
pop
ds
sti
cwde
mov
push
loop
(bad)
imul
daa
pop
shr
std
rcl
pop
sbb
cmps
dec
(bad)
dec
fistp
fist
(bad)
les
(bad)
mov
xor
(bad)
xor
repz
push
icebp
and
(bad)
xchg
jnp
lods
out
outs
xlat
push
mov
push
xchg
repnz
jmp
jl
ret
adc
or
mov
adc
push
rcr
push
pop
bound
ror
loop
pop
cld
add
jae
out
mov
fs
mov
imul
arpl
jo
push
mov
je
cs
es
mov
or
jmp
lods
imul
hlt
pop
sub
push
pushf
jge
das
add
stos
fnstenv
mov
shr
loop
xchg
ins
loopne
js
test
hlt
sar
fwait
sub
into
mov
cli
push
xor
mov
push
sbb
iret
jp
sub
call
and
ret
or
ret
cmp
sahf
jl
mov
jno
xor
inc
scas
movs
sbb
cmc
call
fadd
cmp
scas
xchg
jl
or
push
pop
mov
sbb
push
sbb
sahf
icebp
sbb
in
in
daa
push
add
push
push
jle
mov
sbb
add
(bad)
fld
sahf
std
stc
fisubr
push
int3
xchg
mov
push
xchg
push
cld
fild
sar
int3
adc
pop
add
gs
inc
hlt
stc
xchg
rcr
imul
bound
ja
gs
retf
ins
mov
mov
jecxz
(bad)
icebp
icebp
mov
int3
jo
cwde
lods
call
pop
lods
(bad)
jl
dec
cmp
lods
xor
mov
jne
mov
mov
add
pop
add
outs
xchg
push
inc
cmp
outs
sar
mov
popa
jecxz
or
mov
jl
jnp
mov
cmp
sbb
sbb
or
add
inc
dec
push
imul
pop
xor
mov
pop
xor
inc
out
and
cmp
push
repz
mov
inc
lds
movs
xchg
push
push
inc
aam
cmp
shr
ror
mov
stos
fwait
pop
mov
dec
bswap
and
xor
(bad)
int3
or
call
cmp
mov
movs
add
add
in
dec
mov
cmp
jo
cmp
or
pop
fistp
mov
cs
jmp
adc
frstor
push
shl
cmp
cmp
push
xor
sti
mov
sbb
pusha
cmp
fidiv
push
into
cmc
inc
bound
fwait
pushf
cmp
add
mov
xor
dec
dec
inc
adc
pop
out
and
mov
ds
pop
jno
dec
hlt
enter
je
push
dec
pop
mov
es
sub
ret
repz
adc
call
arpl
ret
ins
stos
xor
pop
out
and
fdiv
clc
ror
push
dec
xchg
and
out
sub
adc
push
xadd
inc
dec
dec
and
jbe
sub
xor
xchg
stos
xchg
icebp
mov
in
jne
pop
in
fcomp
and
rcr
mov
mov
popf
and
mov
aad
mov
hlt
test
push
int3
mov
sbb
push
mov
jmp
into
xchg
push
dec
pushf
aam
mov
push
(bad)
cld
stos
jo
fbld
ret
js
inc
loope
jp
sub
sti
shl
lahf
pop
jo
icebp
ror
cld
data16
mov
sub
adc
dec
lds
push
les
add
pop
inc
adc
inc
mov
(bad)
lods
push
inc
loop
jno
mov
dec
loop
fdivr
pusha
xchg
mov
dec
out
shl
mov
add
test
sbb
sbb
pop
stc
jp
clc
jns
jge
cmp
jno
lds
mov
jno
pop
pusha
shl
push
pop
je
repz
test
jb
aas
push
scas
or
mov
cwde
fwait
xchg
(bad)
xchg
cmp
fadd
xchg
rol
call
daa
or
mov
inc
repnz
stos
js
cdq
ret
stos
add
gs
ficomp
xor
outs
jae
retf
mov
adc
jge
cmp
mov
push
xor
pop
and
ficomp
iret
pop
xor
pop
inc
retf
js
mov
aad
fisubr
fstp
not
pop
cmp
icebp
dec
test
xchg
jl
add
cmp
jne
fldcw
clc
push
cs
arpl
ror
and
pushf
pushf
cmp
outs
inc
jns
xlat
pop
sub
gs
add
fwait
pop
xlat
sbb
adc
ret
hlt
push
das
inc
fcmovbe
sub
jae
sbb
mov
cmp
or
sbb
in
and
fucom
dec
pop
fild
add
lahf
clc
sar
into
mov
mov
and
push
dec
mov
out
call
(bad)
push
sbb
and
pop
(bad)
jp
push
sbb
inc
mov
sbb
lahf
jns
push
fild
pop
aaa
stos
add
or
xchg
push
out
jae
out
pop
cmp
enter
sub
int3
std
inc
iret
mov
inc
mov
xlat
push
dec
jmp
out
xor
sub
(bad)
repnz
cmp
push
and
adc
adc
jnp
mov
sbb
(bad)
lods
add
jne
push
xor
sub
test
fndisi(8087
js
sub
jl
les
sar
jne
push
mov
shr
mov
sub
(bad)
out
jns
dec
xor
lods
push
xchg
js
lahf
(bad)
int
fwait
in
cmp
idiv
into
and
retf
jmp
fist
pop
lods
mov
test
jns
push
mov
cld
daa
sub
repnz
aaa
xchg
xchg
cmp
lahf
in
mov
inc
inc
push
adc
mov
cmc
pop
movs
pop
pusha
dec
shl
or
sbb
(bad)
rcr
outs
int3
and
int3
sahf
push
cmp
mov
mov
jmp
and
daa
add
cmp
mov
fdiv
xchg
ficomp
sub
dec
xor
jns
(bad)
or
jmp
aaa
std
jmp
pop
shr
jl
cmp
aad
mov
leave
xor
jge
test
jmp
or
push
cli
fwait
ss
cs
sbb
rcr
(bad)
iret
push
sub
push
cmp
pop
xor
sbb
mov
push
jmp
mov
mov
xchg
push
out
movs
ror
call
out
push
xor
add
lea
cmp
pop
xor
cmps
push
jbe
sar
mov
lahf
dec
mov
call
cs
aaa
lahf
add
cdq
and
sub
js
ins
out
and
adc
nop
stc
push
arpl
call
jbe
add
movs
and
bound
sti
dec
and
enter
xchg
xor
cmp
aaa
nop
dec
adc
mov
lock
cwde
les
pop
(bad)
pop
or
ins
add
adc
out
stos
jmp
aam
push
sbb
mov
push
call
inc
loopne
sub
sub
ins
pusha
pop
pop
loope
pop
je
inc
jp
xlat
sbb
(bad)
loope
lock
lods
mov
jne
push
push
stos
inc
lock
cmps
(bad)
shr
jb
daa
rcl
call
mov
xchg
sub
pop
fdiv
xor
mov
js
aad
je
cmp
sub
pusha
fisubr
call
cdq
mov
and
mov
lahf
scas
xchg
call
(bad)
sti
cmp
jmp
hlt
ror
not
and
mov
inc
sub
rcr
and
test
mov
leave
rcl
cmc
push
rol
push
or
test
aad
jnp
xchg
xchg
adc
mov
sub
pushf
gs
icebp
and
sbb
jp
xor
mov
bound
leave
mov
shl
push
xchg
aam
iret
(bad)
das
pop
jno
inc
jmp
jb
sbb
adc
mov
add
imul
and
ffree
test
js
aam
int
pop
cs
jmp
push
xor
retf
inc
int
je
icebp
inc
mov
fstp
cmp
cmp
lock
lods
dec
in
in
mov
jmp
cdq
inc
cmps
xor
jg
cmp
mov
cwde
dec
inc
pop
pushf
xchg
mov
scas
rcr
movs
lods
enter
mov
jg
nop
bnd
jo
inc
adc
push
jae
aas
(bad)
mov
pop
sbb
jne
ins
les
jmp
ss
mov
push
lea
push
clc
movs
dec
int3
mov
sbb
lock
adc
dec
(bad)
pop
sbb
js
das
jp
xor
sub
adc
inc
sub
in
iret
add
jge
in
div
or
mov
(bad)
mov
sar
xchg
in
clc
sub
pop
cmp
das
mov
dec
xor
aad
loop
int
outs
inc
call
mov
and
sahf
ficom
cld
add
es
in
pop
sub
daa
cdq
int
rcl
fcomp
pop
sahf
mov
mov
test
mov
aaa
jbe
mov
movs
movs
fwait
add
aad
and
ss
arpl
gs
mov
mov
mov
lods
outs
mov
test
clc
ja
jp
push
mov
jnp
scas
retf
jnp
imul
jmp
fldenv
lods
mov
inc
jns
mov
dec
dec
sar
cmp
jmp
stos
int3
xchg
inc
pop
lods
arpl
and
mov
sub
xlat
jmp
mov
and
pop
enter
lock
aad
cmp
or
jp
sub
pop
and
repnz
nop
imul
(bad)
shl
inc
repz
add
jp
js
scas
sub
push
push
jne
xchg
mov
push
sub
sahf
(bad)
and
mov
repnz
lods
add
cld
mov
fs
rcl
test
repnz
fcmovb
push
sub
xor
sbb
pop
not
pop
and
jecxz
lock
jno
dec
leave
shr
pop
or
dec
and
fdivr
push
cmp
pop
mov
sub
and
arpl
cld
ret
mov
gs
enter
les
test
push
sbb
push
cmps
repnz
push
mov
cwde
jp
ds
retf
add
cld
inc
daa
dec
and
loop
lds
jmp
pop
data16
dec
fadd
pop
pop
jg
ins
rcr
xor
xchg
mov
stos
cmp
pushf
add
bound
pop
or
and
loopne
ret
(bad)
rcl
hlt
mov
inc
sub
mov
pop
jnp
jbe
aad
loopne
add
dec
xchg
push
inc
mov
test
inc
iret
sub
mov
cmp
jne
jnp
and
xchg
lds
cmp
add
or
sbb
lods
jmp
mov
(bad)
stos
add
pop
test
jbe
das
adc
push
inc
mov
out
outs
lods
push
(bad)
cmp
jno
rcr
push
cmps
jle
rcl
(bad)
es
add
xlat
call
mov
imul
sbb
into
push
dec
pop
dec
imul
int3
cs
jmp
pop
test
add
pop
jno
and
je
test
or
adc
push
je
call
cmp
clc
add
jnp
sbb
add
push
dec
fucomp
outs
mov
into
fiadd
cli
std
fdivr
icebp
xchg
inc
pop
jne
jle
dec
inc
in
popf
fld
push
test
jmp
pop
scas
test
sub
cld
das
test
out
jno
mov
scas
lods
outs
ror
out
ss
mov
rcr
xor
add
imul
test
jg
je
int3
call
arpl
xlat
cmp
xchg
(bad)
stos
std
and
gs
pop
jmp
xchg
int
scas
inc
out
lock
pop
sub
shl
xchg
fsub
enter
or
sub
inc
sub
dec
pushf
jmp
lds
(bad)
adc
loop
sahf
jp
mov
push
sub
mov
pop
xor
cmps
cmp
hlt
mov
out
sbb
repz
cs
sbb
mov
pusha
rol
jb
das
addr16
neg
jmp
fisubr
ins
xchg
sub
pop
and
ins
jl
cld
stos
xchg
add
mov
fdiv
cmp
add
sahf
adc
mov
out
sbb
leave
add
sub
shr
jb
push
push
mov
pop
mov
fidivr
sub
mov
or
stos
cmp
mov
call
sub
cmps
fidivr
push
(bad)
mov
repnz
mov
fwait
mov
jne
push
inc
cmp
(bad)
jmp
cmps
inc
inc
push
lahf
sbb
jnp
jns
jg
retf
dec
test
and
push
call
jnp
popa
mov
clc
lahf
adc
push
push
pop
(bad)
retf
add
(bad)
fcom
fisubr
or
jmp
dec
pop
or
mov
sbb
or
out
out
pop
dec
adc
fisttp
sub
pop
popf
ficom
sub
movs
scas
pop
sub
aaa
retf
sti
(bad)
or
jnp
mov
mov
punpcklwd
pusha
push
into
mov
repnz
or
ja
rcl
in
cmps
mov
pop
adc
test
mov
sbb
mov
add
les
aam
sub
mov
ficom
(bad)
jnp
mov
xor
sbb
les
and
jmp
add
ror
cmps
add
aam
mov
mov
imul
jl
or
pop
sub
bound
and
xchg
stos
mov
movs
in
adc
test
imul
fmul
push
in
jns
(bad)
lea
mov
movs
mov
int
sub
ret
cld
and
in
add
std
pop
popf
xor
push
pop
cmps
xor
fbld
in
mov
sbb
sbb
pop
idiv
test
xchg
test
imul
add
sti
jne
adc
xchg
outs
xchg
repz
dec
mov
movs
inc
pop
pop
addr16
out
inc
mov
pop
fs
fs
movs
push
push
inc
jne
js
mov
cmp
lods
mov
iret
shl
pop
mov
push
imul
das
sub
sub
sbb
pop
outs
xchg
mov
lds
mov
xchg
add
hlt
hlt
cmp
es
push
cmp
ds
inc
pcmpeqd
das
xchg
pop
std
(bad)
scas
mov
sub
mov
call
outs
test
pop
add
scas
les
jge
or
push
sub
sub
scas
cmps
es
or
push
lea
jae
jbe
fcmovbe
stc
pop
cs
mov
pop
test
push
je
or
icebp
push
xchg
mov
and
(bad)
pop
fs
jae
xchg
aaa
test
(bad)
in
add
inc
jmp
and
sbb
loop
and
mov
cs
add
and
push
sbb
mov
sbb
outs
lahf
add
addr16
push
pop
inc
sbb
pop
and
or
pushf
ss
xor
fwait
adc
mov
adc
cmp
clc
jecxz
push
xor
rol
pop
and
into
and
pop
movs
ss
xor
mov
inc
call
out
lods
and
cli
fxch
bound
cmc
cmp
jmp
inc
xchg
mov
push
jae
or
fistp
pusha
and
xor
rol
std
cmp
imul
sub
sti
aaa
pop
retf
mov
hlt
lock
(bad)
es
adc
inc
jbe
clc
repz
sbb
cmp
mov
aaa
or
mov
xor
push
and
adc
in
and
(bad)
fisub
jge
xchg
or
shl
int
(bad)
mov
mov
call
inc
sub
retf
sbb
or
bound
mov
sub
dec
outs
das
(bad)
xor
jecxz
popa
adc
xlat
stos
adc
rcr
scas
jmp
lds
ror
cli
sbb
mov
sbb
adc
push
adc
int
fmul
add
loope
jns
push
xchg
push
stc
mov
(bad)
adc
xor
mov
or
retf
push
or
cmp
sub
adc
ins
inc
adc
imul
pop
jmp
xchg
adc
int3
outs
jb
xchg
cld
cmp
iret
xchg
jb
pop
dec
fyl2xp1
jecxz
and
push
jo
xchg
aas
jns
xor
(bad)
int3
pop
sub
(bad)
jl
and
dec
push
or
xlat
adc
rcr
sbb
(bad)
mov
mov
retf
adc
into
cs
cmps
sbb
jl
mov
add
adc
bound
fisubr
dec
or
add
popa
pusha
aas
fdiv
mov
sbb
clc
pushf
outs
sbb
sub
mov
outs
sub
jl
jae
or
add
mov
and
push
jae
clc
(bad)
dec
out
jge
push
dec
mov
popf
mov
fild
jg
out
dec
and
fidiv
outs
pushf
push
jo
sbb
fild
loope
add
inc
and
adc
push
and
out
push
push
cmp
daa
cld
adc
(bad)
lods
push
sar
es
sub
(bad)
pop
cmp
fnstenv
mov
retf
jb
rcr
aad
ret
jmp
test
in
push
fbld
mov
and
jne
out
movs
adc
lods
cli
sub
mov
sti
fwait
cmps
ins
and
mov
jno
jmp
mov
sbb
fcmove
mov
sub
mov
out
lods
movs
in
mov
into
sbb
adc
test
xchg
retf
and
push
call
mov
pop
popa
shr
fstp
xor
loop
mov
inc
push
jae
test
sub
scas
sbb
and
pop
and
scas
mov
adc
das
adc
push
stos
inc
iret
jle
sbb
out
int
cmp
bnd
shl
aas
jl
nop
xor
fs
xchg
or
jne
ds
out
lea
pushf
int
xchg
int3
sub
scas
mov
cli
pop
sbb
cmp
lods
(bad)
call
fwait
iret
and
cvtpi2ps
pop
sbb
add
cmc
pop
stc
in
sbb
jne
(bad)
fild
jnp
js
xchg
or
ds
outs
pop
adc
cmps
jecxz
mov
test
mov
out
lds
fwait
out
xchg
xchg
test
lods
cmp
jmp
or
pusha
xchg
test
sub
aam
jmp
movs
(bad)
mov
pop
mov
and
data16
push
lea
neg
out
fist
dec
xchg
push
in
fcmovbe
xchg
sub
fist
sahf
cmp
fs
sub
and
lods
shl
add
jo
ins
iret
outs
inc
dec
jbe
sub
push
jmp
(bad)
add
enter
push
pop
popa
push
dec
or
cs
ret
pop
adc
cmp
pop
adc
ja
jns
xor
mov
out
les
cwde
movs
imul
push
addr16
jmp
dec
and
test
mov
test
add
jp
mov
bound
xchg
out
cmp
pop
fcom
xchg
pop
ficomp
loopne
adc
aam
mov
or
push
mov
ins
retf
jg
aas
dec
xchg
sub
pop
sti
cmp
push
or
jge
movs
test
sub
pop
sbb
data16
call
cmp
in
dec
lea
and
dec
jle
jmp
jp
dec
sar
dec
cs
jns
jle
mov
mov
in
pop
loope
bound
push
sbb
loope
std
cmp
arpl
mov
cli
inc
cli
mov
aad
inc
aam
mov
pop
es
loopne
ficom
adc
daa
(bad)
pop
jle
call
fsubr
data16
jl
and
cmps
adc
mov
mov
ret
xor
mov
pusha
addr16
loope
movs
xor
xor
outs
aam
jnp
daa
xlat
sbb
loopne
mov
in
mov
not
adc
out
jns
add
mov
and
push
(bad)
in
imul
bound
aad
rcr
or
cwde
(bad)
mov
xor
enter
mov
pop
pop
in
pop
sub
(bad)
in
xchg
loopne
fcmovne
ret
fmul
cld
ss
jno
mov
xor
xchg
fs
sti
or
js
or
xchg
sub
jg
add
mov
stos
frstor
repnz
dec
into
adc
int
mov
mov
dec
xor
fcmovu
cmp
daa
ret
mov
xor
sbb
xor
cmp
aam
cmps
jns
push
jb
and
mov
lock
out
inc
add
outs
adc
mov
lock
or
(bad)
data16
adc
mov
add
cli
mov
add
outs
cmova
(bad)
out
scas
jb
call
xlat
std
jl
adc
push
hlt
jb
lahf
jnp
retf
inc
sahf
lods
sbb
xor
push
jae
xchg
repz
jns
stos
imul
mov
or
mov
xchg
leave
fcomip
test
retf
int3
xchg
push
jbe
xlat
push
ficom
imul
aas
inc
fistp
dec
jne
push
stos
mov
les
xchg
mov
mov
sbb
and
(bad)
cmp
push
jmp
push
jmp
shr
cmps
pop
jno
jl
jbe
and
xor
aam
outs
jns
ja
sub
mov
push
call
xor
push
push
adc
mov
mov
call
cmps
ins
or
push
ret
fs
movs
cmp
cmp
xchg
dec
jp
outs
into
mov
movs
sahf
out
sbb
push
cmp
fucomip
gs
dec
cli
sbb
lods
pop
push
push
scas
test
data16
pop
repnz
shr
pand
push
pop
pop
sahf
scas
(bad)
ret
fwait
xor
movs
xchg
dec
jmp
out
sbb
call
mov
jb
fstp
aaa
imul
cmp
js
dec
bound
mov
xchg
push
aaa
mov
stos
je
xor
test
mov
push
loopne
cmc
loopne
dec
add
push
add
push
test
xchg
push
and
mov
mov
jo
xchg
cmps
fs
sbb
or
scas
cmc
inc
pop
nop
ja
push
pop
push
or
dec
movs
test
mov
jbe
fnsave
inc
sbb
sbb
lea
xchg
leave
inc
sbb
mov
jb
hlt
jnp
fst
in
sbb
mov
les
xchg
push
sbb
pop
scas
in
cmp
xlat
mov
aad
push
mov
xor
loope
int3
or
cs
leave
rcl
push
xchg
pop
rcl
fiadd
js
retf
sub
pop
je
test
pop
push
jmp
xchg
pusha
(bad)
xchg
mov
out
aad
sbb
sbb
in
(bad)
jb
pop
push
movs
(bad)
fwait
push
retf
aad
cmps
(bad)
sbb
movs
xchg
dec
retf
data16
loope
inc
(bad)
popa
cmp
in
cmp
mov
cmps
pop
adc
mov
mov
or
xor
xchg
mov
clc
fisttp
mov
pop
push
scas
mov
lods
sbb
push
int3
xor
or
or
lahf
and
movs
xor
js
shr
ficom
ins
stos
imul
inc
inc
push
inc
jecxz
stos
shr
cmp
loope
movs
in
fnstenv
xchg
std
mov
or
pop
int
sub
push
mov
and
pushf
jl
sti
dec
std
sbb
(bad)
test
jl
pop
loop
cmp
adc
mov
add
pusha
dec
dec
nop
stc
dec
cmps
outs
cwde
lea
lods
push
mov
mov
(bad)
in
mov
mov
retf
sbb
cwde
bound
jbe
fiadd
add
inc
inc
imul
pop
mov
shl
or
out
xor
adc
(bad)
cdq
mov
cmp
fnstcw
icebp
pop
dec
jecxz
jmp
scas
mov
lea
sub
ficom
sar
loopne
xchg
push
mov
push
ins
gs
loope
or
outs
dec
pop
cmp
cmps
(bad)
and
or
mov
and
dec
movs
sbb
or
inc
sbb
sar
cmp
into
add
or
mov
or
and
out
sar
jno
scas
sub
sub
pusha
les
mov
pop
nop
pop
pop
clc
call
cmp
fstenv
adc
nop
imul
fwait
shl
int
xchg
xor
fstp
shl
int
retf
add
iret
cs
and
dec
out
imul
fidivr
inc
mov
aad
dec
pop
and
or
cdq
sahf
xchg
aad
lock
out
mov
jge
hlt
retf
jp
scas
xor
xchg
cmc
add
(bad)
xor
cmp
ds
inc
fadd
imul
jmp
mov
cli
jp
push
icebp
mov
pop
loope
nop
cmp
es
not
icebp
mov
lds
sub
out
dec
and
rcl
pop
xor
sbb
push
sub
cdq
mov
push
and
cwde
movs
mov
sbb
sar
enter
out
div
cmp
loop
imul
mov
mov
call
adc
js
push
out
jnp
mul
fsub
sub
ret
out
add
and
out
rcl
call
jmp
(bad)
shl
clc
cmp
cmp
pusha
les
sub
ins
push
push
les
and
test
aaa
dec
cmc
or
outs
movs
aaa
fcom
and
test
xor
xchg
mov
mov
adc
aad
sbb
pop
and
xlat
popf
mov
lods
pop
lods
loop
not
adc
push
aam
jp
clc
ret
popa
icebp
stos
nop
(bad)
enter
adc
out
sub
int
sub
out
mov
(bad)
cmp
mov
mov
mov
sbb
fcom
leave
add
mov
fstp
das
or
fist
dec
adc
mov
clc
dec
sti
ret
push
out
sbb
cmp
in
mov
jb
xlat
adc
pop
(bad)
mov
jge
imul
scas
cmp
int
push
cmp
dec
xchg
stc
adc
and
in
cmp
push
add
cmp
outs
adc
inc
inc
hlt
push
sbb
movs
jge
pop
cmp
movs
loopne
dec
(bad)
adc
scas
fcmovb
outs
shr
dec
push
and
inc
leave
aas
add
mov
leave
adc
or
push
push
or
dec
and
std
fdivr
xchg
fidiv
jg
jne
loopne
sbb
(bad)
cmp
push
sar
cmp
sub
sub
jnp
sub
aaa
pop
rcr
cli
mov
mov
jg
cmp
adc
pop
retf
lods
(bad)
cli
dec
shr
lds
(bad)
xor
sbb
sti
(bad)
data16
shr
dec
pop
sti
rol
sub
xchg
pusha
outs
mov
je
loopne
sub
(bad)
imul
jmp
dec
test
cmp
push
fdivr
(bad)
mov
add
and
push
addr16
out
cmp
mov
out
xchg
adc
es
dec
int
mov
dec
add
stc
ror
into
les
aam
add
inc
push
enter
adc
stc
(bad)
fst
xor
mov
xor
sbb
mov
inc
loop
mov
dec
push
das
mov
mov
pop
add
cmp
and
or
inc
loop
retf
mov
jae
jnp
out
add
fs
retf
lods
dec
sub
mov
outs
fcomp
fstp
enter
popa
shr
imul
dec
mov
outs
add
mov
add
jle
push
sti
inc
xchg
sub
movs
adc
ret
mov
cs
add
aam
and
adc
lods
mov
out
ss
loopne
fdivr
jns
stc
pop
je
mov
cmps
mov
fs
or
jp
or
jb
dec
xlat
sahf
scas
js
or
data16
add
(bad)
mov
out
cmp
cmps
dec
repz
xchg
retf
jle
add
inc
adc
popf
lock
pusha
mov
fisub
outs
xor
push
loopne
je
das
loope
and
sbb
or
pop
leave
jne
dec
repnz
in
in
adc
cld
add
imul
add
movs
push
test
adc
jmp
adc
loopne
daa
mov
xchg
pop
lock
pop
push
jb
push
in
(bad)
neg
loopne
pop
xchg
xchg
fbld
pop
mov
mov
dec
add
add
clc
sbb
lods
neg
xchg
(bad)
sbb
pop
lock
dec
ret
adc
aam
or
repz
cmp
jge
movs
xor
fcom
xor
lds
mov
add
mov
pop
arpl
ds
add
out
mov
fsub
hlt
dec
cs
aas
jp
das
pop
popa
xor
pusha
xor
aad
inc
xrelease
jecxz
push
test
retf
or
mov
push
cmps
fidivr
push
nop
popf
pop
jmp
mov
mov
int
or
pop
ss
out
cwde
mov
push
inc
repnz
aaa
daa
stc
push
dec
out
add
fld
fnstsw
xchg
and
or
jmp
stos
cwde
std
mov
adc
xor
fbld
mov
mov
pop
push
cmps
xchg
sbb
mov
xor
push
jge
jge
std
cmp
jo
xor
push
cmps
and
fwait
jmp
mov
ret
sbb
push
int
adc
jne
daa
retf
xchg
mov
and
cld
outs
loop
cmps
and
test
call
mov
jno
and
call
or
xchg
mov
(bad)
outs
test
arpl
in
inc
call
xor
js
outs
fwait
in
outs
dec
mov
and
sahf
sub
fdivr
jb
mov
dec
clc
push
mov
hlt
adc
fcom
aad
lods
xchg
jno
out
mov
ret
cmps
push
jecxz
jmp
push
cdq
les
xchg
(bad)
mov
add
mov
adc
xor
lahf
xchg
dec
cmps
pop
jnp
xchg
(bad)
in
cmp
inc
xchg
imul
add
(bad)
and
xchg
lods
add
test
adc
out
test
bound
inc
nop
add
jp
js
pop
loopne
pop
jmp
xchg
xor
sbb
jnp
mov
sub
or
fcom
or
add
sub
xchg
mov
clc
adc
cld
and
sub
cli
push
jns
test
je
cmc
cmp
inc
push
add
or
ss
not
push
stos
mov
sbb
cli
mov
and
jge
pop
mov
cmps
adc
jb
jg
add
and
es
enter
jo
jo
xchg
stos
jne
sub
cmp
dec
or
in
mov
int3
(bad)
jae
repnz
push
leave
test
das
repnz
cmc
cli
xchg
out
ss
push
mov
loop
adc
cdq
dec
daa
mov
mov
lea
ins
aas
or
out
cmp
fsubr
jecxz
pop
mov
movs
push
ins
push
sbb
xchg
jl
xchg
mov
rcl
arpl
(bad)
mov
repz
scas
sar
retf
clc
aam
ret
dec
(bad)
cvttps2pi
xchg
add
aas
test
pusha
arpl
in
pusha
pop
iret
neg
das
mov
loope
dec
dec
mov
xor
sub
xchg
cmp
jnp
xor
pop
icebp
add
cmp
out
sbb
pushf
mov
add
mov
adc
lea
jnp
in
mov
lods
fcmove
fs
repnz
and
popa
mov
test
mov
push
in
cmps
cdq
fbstp
out
and
push
jnp
aam
fisttp
pop
mov
imul
add
adc
or
inc
xor
clc
rcr
outs
jp
js
add
push
mov
cdq
push
ss
popf
fisttp
and
(bad)
neg
rcr
and
jbe
ins
cmp
xchg
test
pop
retf
and
cmps
mov
into
xchg
movs
adc
call
inc
dec
stos
iret
cmp
adc
shl
imul
adc
xchg
lds
ins
dec
shl
sbb
popf
popf
fs
add
inc
out
test
push
daa
rcl
adc
add
fwait
int
xchg
repz
jo
sub
xchg
popa
jae
rcr
imul
icebp
cli
jmp
or
inc
and
xor
mov
scas
(bad)
aas
dec
icebp
push
xchg
sahf
pop
mov
jecxz
add
jnp
popf
out
mov
movs
lods
(bad)
mov
pop
lock
add
cs
and
or
fsubr
into
or
sub
lea
mov
inc
arpl
push
jae
lahf
mov
sbb
inc
mov
jne
jecxz
pop
mov
xor
scas
cmp
pop
ja
jg
stos
xchg
inc
jo
fwait
inc
lods
jp
(bad)
pusha
jb
mov
je
inc
test
add
fdivr
xchg
(bad)
push
push
mul
fs
and
aad
mov
leave
push
test
sbb
int
dec
jmp
jp
pop
jge
xor
dec
or
and
pop
mov
pop
jmp
fimul
adc
push
xor
mov
ret
xor
sub
push
xchg
(bad)
es
jnp
fucomi
push
add
mov
inc
sbb
in
js
or
dec
jmp
add
cs
jmp
sbb
push
or
and
push
pusha
pushf
ins
add
mov
call
adc
movs
cmc
repz
ficomp
xlat
jnp
jns
and
jns
inc
call
sbb
ja
xor
iret
jne
addr16
inc
ds
inc
in
adc
jp
xchg
or
test
jno
in
inc
and
mov
push
xlat
das
arpl
jmp
sub
pop
in
push
or
jle
pop
out
cmps
pusha
pusha
and
(bad)
fs
mov
sbb
sqrtps
test
ja
pop
ret
inc
jmp
push
ret
sub
icebp
inc
in
sbb
rcr
sub
int3
cs
out
mov
mov
std
aas
fist
jne
fwait
cld
dec
mov
adc
mov
fbstp
test
xchg
bound
and
mov
adc
inc
pusha
pop
out
scas
jae
add
mov
call
pusha
jae
dec
sahf
or
js
jae
or
out
dec
inc
xchg
mov
mov
pop
jb
push
das
dec
out
push
jge
pop
sub
mov
(bad)
in
xor
xor
(bad)
movs
fisub
loope
adc
outs
and
jmp
jne
adc
stos
xchg
les
mov
cmp
fcomp
inc
jbe
test
je
jl
adc
inc
xor
pop
push
mov
xlat
scas
jno
sub
mov
add
pushf
jo
cmps
out
sahf
pop
lahf
sti
pop
fimul
int3
stos
pop
mov
movs
sub
adc
xchg
add
push
jb
dec
data16
jae
arpl
jp
pop
div
jg
ja
mul
xchg
adc
outs
test
sbb
jmp
adc
inc
cmp
loope
loopne
push
push
xchg
jl
sbb
and
add
les
popf
call
test
mov
cli
and
xor
xchg
cmp
loope
lods
fild
in
imul
pop
or
xchg
cs
fwait
pop
(bad)
cmps
fmul
jno
fcom
(bad)
inc
xor
inc
fisttp
or
out
les
jmp
cmp
into
lock
inc
dec
jge
in
int3
xor
rcl
call
xchg
mov
sbb
aaa
push
inc
xchg
jae
mov
jl
rcr
retf
push
iret
push
cmp
retf
push
cdq
xchg
push
adc
cmp
std
test
mov
popa
dec
sub
mov
iret
in
(bad)
jmp
hlt
jnp
xor
popa
add
push
sbb
out
addr16
inc
fld
je
xor
aad
push
ret
or
mov
cmp
fwait
mov
mov
add
sti
adc
or
ins
xchg
fwait
iret
ret
inc
stos
mov
fmul
je
aad
mov
push
ds
sbb
mov
sub
sahf
mov
popf
xchg
sbb
mov
cdq
shl
nop
mov
inc
in
cli
and
mov
daa
ret
imul
jns
mov
jns
loop
cmp
retf
pop
mov
mov
sahf
aaa
clc
and
jle
ficomp
cmps
ret
dec
rol
mov
cmp
ss
in
loopne
xchg
pop
sbb
sub
push
adc
jmp
or
pop
mov
in
mov
(bad)
ficom
inc
fst
jne
fsubr
and
and
pop
pop
jmp
test
mov
aaa
test
push
imul
ins
pmulhw
pop
int3
mov
hlt
addr16
sub
add
js
adc
int3
mov
or
cmp
out
and
cdq
cmp
mov
into
cmp
les
lock
mov
mov
(bad)
adc
lock
inc
adc
in
sbb
mov
mov
loopne
retf
add
(bad)
mov
xor
std
loope
dec
push
test
test
fdiv
lock
xor
ret
rol
xor
ss
xchg
dec
push
ret
mov
pop
into
or
bound
mov
stos
repz
test
fstp
and
loop
cmp
cdq
inc
lods
js
jo
or
addr16
fsub
test
cmp
clc
popa
mov
lods
and
test
inc
into
mov
inc
mov
xchg
(bad)
and
push
push
or
mov
inc
mov
(bad)
iret
jo
scas
and
dec
sbb
jl
mov
adc
add
push
clc
(bad)
aas
shr
call
(bad)
and
leave
or
fild
ds
dec
js
lahf
ja
cwde
sbb
leave
dec
pushf
add
and
xor
and
addr16
pop
sub
int
mov
dec
push
loope
mov
push
cmps
icebp
xor
test
(bad)
push
or
xchg
push
jmp
xchg
(bad)
out
adc
pop
dec
ret
sar
xchg
repz
loopne
hlt
or
sbb
push
rcl
nop
pop
pop
or
shl
imul
sub
addr16
jno
dec
push
pop
adc
sti
scas
pusha
clc
xchg
cdq
push
push
mov
add
sub
stc
mov
jge
jmp
retf
test
push
mov
scas
and
sar
mov
jecxz
(bad)
shl
repz
or
(bad)
hlt
and
fisttp
cmc
lahf
pop
add
dec
push
jno
push
in
mov
dec
aaa
sbb
fisttp
xchg
call
xchg
inc
js
push
pusha
pop
hlt
xor
iret
ins
stos
retf
pop
test
stos
mov
jbe
aaa
push
data16
sar
mov
sub
pop
and
fucomi
es
pushfw
ret
push
mov
adc
loop
mov
xor
cmp
cmp
test
sub
jle
adc
jmp
lds
loopne
mov
sti
fcomp
mov
inc
jmp
das
and
xchg
push
jns
jns
mov
fistp
lea
movs
push
dec
cmp
cmps
xchg
shl
and
ja
add
outs
mov
sbb
push
lea
jmp
mov
adc
or
dec
pop
jmp
out
push
fsub
loope
nop
mov
and
adc
(bad)
lods
add
sahf
mov
pusha
xor
adc
pop
bound
sbb
cwde
addr16
sub
adc
xor
mov
lods
into
stos
frstor
or
sti
mov
xchg
xor
jne
scas
lods
fst
rcr
mov
loop
xchg
mov
fwait
mov
cs
leave
cmp
cmp
(bad)
xor
add
dec
sub
je
add
adc
dec
nop
dec
adc
fimul
adc
outs
movs
mov
mov
pop
inc
imul
sub
xor
ret
js
jle
cmp
in
vmread
sub
dec
xor
icebp
in
jmp
sbb
retf
cld
pop
mov
add
lahf
jae
sub
jl
jp
jle
mov
clc
jae
je
push
(bad)
(bad)
dec
inc
dec
dec
inc
lea
imul
call
push
pop
aam
pop
rcl
pop
fst
imul
sub
sub
adc
repnz
adc
adc
push
adc
lahf
popa
sbb
jmp
adc
adc
inc
pop
inc
or
jae
call
pop
stc
mov
lods
pusha
add
adc
out
aaa
xchg
lock
jle
std
cdq
idiv
jne
call
dec
and
pop
in
jp
xlat
jns
jb
(bad)
loopne
sub
div
push
cmp
add
fadd
jp
mov
cmp
ins
pop
dec
and
cld
std
mov
out
ins
dec
push
add
xlat
push
jo
cmps
push
push
mov
dec
xor
inc
ins
push
xchg
enter
jo
bound
pop
jns
adc
pop
jae
jne
(bad)
shr
aam
xor
adc
adc
push
pop
fld
std
sub
call
scas
in
int
cmp
repnz
adc
mov
sbb
movs
leave
xor
and
sub
mov
push
add
push
aad
add
jmp
in
inc
cdq
call
mov
jmp
sbb
add
inc
cld
mov
pushf
or
mov
pop
outs
dec
call
es
pusha
mov
sar
inc
pop
retf
push
call
or
in
retf
in
fcomp
fsub
pop
test
inc
jge
test
jp
out
repz
cs
gs
std
pop
ins
loopne
mov
push
and
in
jno
sbb
cmp
iret
adc
(bad)
add
adc
fmul
or
cwde
retf
repz
xchg
(bad)
rol
sbb
pop
movs
dec
ret
test
aam
out
mov
mov
lahf
nop
push
inc
and
mov
sahf
pop
xchg
cmc
iret
hlt
movs
pop
retf
and
sub
pop
sbb
sbb
jns
dec
stc
popf
or
ret
dec
ret
fld
add
repz
aam
arpl
sub
clc
leave
lods
or
fwait
loope
add
mov
cwde
test
add
icebp
sub
lds
dec
retf
(bad)
out
jp
retf
jge
mov
or
loop
dec
sub
xor
loop
ins
inc
push
push
pop
ror
or
in
pop
or
sub
js
aad
adc
fst
cmps
stos
xor
cmps
clc
inc
into
pop
bound
out
mov
adc
es
dec
(bad)
in
aas
cmp
or
jmp
aas
mov
inc
sub
hlt
out
cmp
push
jecxz
lahf
ret
test
movs
push
dec
adc
sub
add
addr16
loope
inc
dec
add
repz
addr16
jl
scas
daa
test
bound
std
jne
mov
mov
add
mov
int3
fwait
pop
push
movs
dec
mov
and
mov
adc
pusha
mov
adc
lds
adc
cld
(bad)
fld
(bad)
mov
mov
mov
or
data16
dec
pop
xor
neg
sub
sub
pushf
scas
out
lea
sbb
hlt
or
ins
mov
psubb
xchg
mov
mov
loopne
rol
fdiv
stos
stos
cdq
cli
lock
call
or
ins
mov
call
xor
push
shr
(bad)
mov
xor
hlt
xchg
cmp
push
fnsave
ss
dec
sar
xor
adc
xor
and
dec
mov
sbb
or
cmc
repnz
pop
call
mov
sub
in
push
aaa
add
inc
fisttp
sbb
hlt
fcmovnbe
sbb
xor
jg
and
js
scas
or
mov
into
aas
push
js
mov
and
or
pop
mov
add
mov
add
mov
jge
addr16
adc
ja
mov
dec
fs
dec
jbe
jb
ret
inc
xor
dec
inc
jns
div
ja
sahf
inc
jnp
dec
ds
or
sar
jno
cld
add
jmp
lods
out
sbb
pop
jecxz
dec
or
xor
shl
sbb
mov
jmp
pusha
inc
add
pop
imul
or
push
test
fidivr
or
iret
retf
dec
xchg
mov
leave
and
dec
push
dec
ins
mov
stc
add
jb
in
aas
loope
sub
add
pop
ror
fwait
lods
xchg
lea
rol
pop
jp
add
imul
into
add
test
xchg
dec
dec
xchg
scas
scas
mov
jno
and
shrd
out
mov
mov
sub
dec
push
fild
or
aad
add
fidiv
jo
test
jmp
lahf
in
cmps
or
shl
cmp
dec
jne
mov
pop
bound
cmc
push
cmp
pusha
push
shl
setle
mov
xchg
sbb
test
mov
push
shufps
sbb
sbb
out
pop
js
imul
mov
jl
mov
sub
mov
push
fsubr
inc
xchg
ret
shl
inc
cmp
sub
sar
push
sti
inc
pop
pushf
sbb
xchg
ret
xchg
fcomp
enter
mov
ss
adc
lods
mov
xor
adc
stos
imul
pop
in
pop
inc
pop
sub
push
push
retf
std
jge
retf
or
mov
gs
pop
test
shl
aas
adc
dec
inc
sbb
rol
pop
jmp
push
leave
(bad)
cmp
cmp
mov
fstenv
inc
(bad)
nop
cmp
dec
jbe
inc
shl
sbb
loopne
xor
aad
ret
sbb
mov
stos
mov
mov
jnp
mov
sti
bound
jmp
xchg
push
push
ss
jge
retf
mov
xchg
popf
xchg
sar
std
arpl
pop
adc
icebp
(bad)
dec
cmp
aas
dec
xchg
push
jmp
and
jb
rcl
push
pushf
iret
mov
iret
icebp
mov
mul
repz
jp
aaa
rep
xlat
outs
add
and
gs
in
jnp
rol
xor
cmp
mov
push
addr16
fild
push
int
shl
and
and
push
cmp
pop
push
ds
xor
fldenv
leave
push
loop
movs
push
rcr
sub
xor
stos
cs
or
lea
retf
int
mov
push
fmul
sub
cmp
out
xchg
rcl
sub
pop
inc
or
push
and
dec
aas
pop
adc
repz
into
mov
xchg
ret
lahf
scas
mov
dec
lods
xchg
std
pop
stos
mov
test
(bad)
ficomp
sub
pop
xchg
sti
add
mov
push
pushf
fadd
jae
mov
nop
pop
push
dec
xchg
dec
outs
mov
cmp
mov
sti
pushf
cmp
jb
xor
retfw
in
xchg
inc
into
int
call
(bad)
scas
les
ret
std
icebp
bound
retf
cld
mov
scas
daa
sbb
mov
inc
or
out
jne
fld
cmps
sub
loopne
cmp
int3
cmp
(bad)
jne
pop
push
or
dec
dec
adc
mov
or
rcl
jo
and
scas
cmp
dec
dec
add
push
or
ret
sub
push
test
aam
(bad)
dec
add
js
cmp
or
retf
pop
xor
jmp
pushf
or
jo
ror
sub
xchg
out
jecxz
mov
jle
inc
test
and
xor
and
mul
push
cmp
dec
mov
add
or
push
sub
call
sbb
fcom
arpl
loope
adc
rol
stos
imul
jmp
mov
sbb
gs
jp
shl
ficomp
xchg
mov
xchg
fisubr
mov
sub
test
imul
add
mov
jb
shr
xchg
add
mov
hlt
dec
stc
div
push
jae
pop
scas
repz
inc
fmul
add
sub
ss
push
movs
int3
shl
data16
es
xor
popa
stos
in
add
pop
xor
scas
fmul
xor
aam
fwait
popf
push
jp
test
mov
push
xor
inc
dec
ret
and
add
mov
jle
fwait
lods
inc
call
adc
inc
movs
in
add
push
xor
std
fs
cdq
sahf
sahf
popa
pop
bound
add
adc
cmp
repz
idiv
arpl
pop
call
or
inc
mov
mov
push
cs
jne
int
mov
(bad)
aas
jg
mov
in
fucomi
pop
rcl
cwde
add
cmc
loop
repnz
xchg
fwait
sbb
mov
push
(bad)
ret
adc
pushf
fdivr
shl
stc
add
jmp
div
or
addr16
mov
cmps
sbb
or
fidivr
mov
aam
dec
aad
dec
cli
jl
das
retf
mov
stc
ja
mov
dec
jno
mov
daa
dec
cli
push
in
out
sbb
loope
(bad)
pop
inc
into
leave
xchg
xchg
ret
stc
pop
pop
imul
fisub
in
mov
addr16
std
sbb
xchg
pop
push
jg
adc
ins
mov
int
loope
mov
or
cmps
sahf
scas
clc
jmp
mov
outs
xchg
movs
xor
psubsb
push
fwait
pop
or
sbb
dec
std
push
inc
or
out
xchg
out
mov
cmc
or
xchg
iret
jmp
xor
ss
inc
jae
xor
lahf
and
push
mov
pusha
adc
jp
mov
retf
jg
add
cwde
push
sbb
mov
repz
(bad)
movs
mov
cmps
adc
jge
jmp
loope
mov
inc
cmps
sbb
clc
mov
(bad)
jl
data16
pop
lods
pop
and
mov
adc
fadd
int3
mov
push
mov
jg
out
bnd
in
mov
fstp
jno
sub
mov
out
mov
(bad)
mov
push
adc
cmc
mov
push
jnp
sub
lock
jl
mov
retf
sbb
imul
mov
sbb
pop
dec
adc
xor
cmp
ins
fnstcw
pop
mov
arpl
fdivrp
inc
cmp
and
mov
dec
popa
cmp
xchg
lds
xor
mov
sbb
push
cmp
pop
pop
sbb
call
test
jg
mov
adc
mov
xlat
xlat
cmps
sub
jb
(bad)
jne
pop
cmp
mov
loop
mov
cmps
mov
pop
outs
in
mov
mov
movs
in
push
lods
test
loopne
push
add
and
je
or
adc
pop
(bad)
sub
sub
dec
ficom
jnp
adc
(bad)
pop
je
lock
jb
inc
test
aad
xchg
cld
mov
fcmove
test
inc
movs
jne
mov
xor
fucomi
aad
push
xchg
jae
pop
je
jnp
dec
rol
movs
test
sub
movs
adc
sar
sbb
pop
cmc
push
push
inc
data16
das
jo
and
scas
cwde
aas
ins
rcr
xor
rcl
jne
or
ins
mov
pop
sbb
add
inc
jb
data16
cdq
outs
mov
or
cmovo
inc
dec
mov
inc
mov
fstp
push
shl
scas
cmps
mov
movs
shl
clc
or
fucomi
vsubps
daa
inc
mov
iret
or
or
and
nop
outs
loop
or
sub
leave
outs
mov
push
in
push
dec
stos
adc
cmp
sub
fs
xchg
jge
shl
inc
enter
int
jg
xchg
jmp
push
aaa
in
push
mov
push
adc
mov
mov
in
ret
xor
push
pop
adc
fimul
sub
inc
pop
bound
push
pop
or
xor
stc
mov
xchg
mov
nop
jl
jcxz
pushf
inc
adc
or
add
or
push
out
pop
or
jp
mov
es
inc
fmul
cmp
rol
inc
push
mov
not
and
or
and
mov
mov
aas
cmp
cwde
fimul
data16
cwde
call
push
stos
imul
or
or
arpl
jne
or
push
cmp
lahf
push
sub
or
dec
pop
rcr
adc
xor
neg
outs
cmp
lea
xor
imul
(bad)
arpl
jge
dec
sub
inc
outs
push
inc
mov
lock
fdivrp
fwait
jecxz
push
xlat
mov
popf
les
cwde
test
rcl
cmp
rcr
iret
jnp
nop
or
and
das
pushf
(bad)
pop
in
push
fisttp
enter
(bad)
ret
and
fwait
enter
cmps
daa
mov
daa
sbb
and
(bad)
cmp
sbb
mov
pop
ins
outs
out
add
cmp
xor
leave
cmp
adc
movs
jl
or
in
loopne
mov
mov
out
sub
xchg
icebp
jb
or
xor
arpl
add
leave
sub
xor
jmp
add
hlt
lods
mov
sti
adc
movs
movs
xlat
mov
int
outs
mov
icebp
cmc
lods
(bad)
cmc
sub
shl
mov
rcl
hlt
jb
inc
adc
xlat
fmul
mov
mov
xlat
test
cmps
shr
lds
mul
ja
(bad)
dec
out
sbb
inc
cmp
push
stos
aas
and
pop
sub
test
lahf
jmp
jnp
jle
(bad)
std
ret
mov
cmp
cmp
stos
add
add
in
mov
and
push
jmp
and
fwait
mov
dec
dec
iret
ins
fistp
leave
iret
mov
in
sbb
mov
fs
inc
jl
out
push
aam
ss
inc
cmp
out
scas
xor
push
or
cdq
jp
push
and
mov
iret
lock
push
out
xlat
and
xchg
adc
dec
loop
xchg
loop
nop
or
cmp
scas
(bad)
cmp
retf
imul
mov
mov
jmp
push
or
add
push
and
les
pop
(bad)
cmc
push
clc
pop
aaa
adc
pop
shl
neg
aad
fwait
rcl
mov
lahf
and
stos
mov
div
stc
dec
fiadd
call
test
popa
and
dec
inc
xchg
stos
dec
movs
std
mov
popf
fidiv
mov
jecxz
rcr
je
shr
xor
sub
hlt
mov
add
mov
jb
ret
enter
jge
xchg
inc
dec
mov
mov
add
jge
mov
(bad)
fwait
xor
xchg
sbb
mov
sbb
mov
pop
cli
rcr
bnd
mov
mov
out
je
jb
sbb
clc
inc
movs
movs
test
into
ffree
aad
jle
sub
sbb
mov
xlat
jmp
or
xor
pop
and
mov
fwait
xor
pop
and
jg
shl
push
test
out
push
not
add
std
add
in
sar
mov
jg
rcl
fdiv
xchg
dec
js
test
shr
sub
jmp
cmp
(bad)
mov
cmp
xchg
inc
(bad)
mov
popf
cdq
cmp
pop
and
and
mov
sbb
xor
or
cmp
addr16
outs
jbe
repz
sbb
arpl
jne
and
add
push
fistp
in
shr
sub
gs
lea
in
imul
scas
push
push
pop
psubsw
adc
xchg
cmps
iret
pop
(bad)
xor
retf
cmp
test
mov
jbe
mov
inc
loope
cli
stos
jo
fisubr
or
pop
sbb
in
cli
or
cmp
shl
into
adc
jg
arpl
mov
mov
lds
adc
aad
jmp
sbb
lods
mov
cmc
xor
cdq
retf
push
pop
mov
mov
xchg
sti
(bad)
lea
std
retf
adc
aam
rcl
shl
test
lock
push
or
mul
pop
jne
je
lods
and
xchg
imul
push
pusha
jp
je
cmp
xchg
fisubr
data16
test
pop
sbb
pop
xor
inc
lods
nop
dec
push
or
call
cmp
mov
cdq
pusha
push
ins
mov
sub
dec
push
xchg
cmp
hlt
cmp
stc
scas
sbb
(bad)
(bad)
fisubr
mov
inc
test
inc
pop
mov
sbb
call
pop
xor
push
mov
cmps
stc
dec
mov
inc
mov
iret
movs
push
xchg
mov
fsubr
(bad)
mov
iret
cmp
add
fldenv
fild
cmp
xchg
jg
cmp
push
push
inc
sti
out
ror
fs
movs
aam
int
ret
sbb
adc
or
aam
in
xchg
sub
pop
mov
jno
enter
xlat
or
mov
sub
and
sub
sbb
xor
cmp
sbb
fist
retf
inc
jne
inc
daa
xor
(bad)
add
fidiv
jbe
add
jmp
xchg
jns
xchg
mov
nop
call
lahf
iret
popa
inc
inc
pop
cwde
loopne
jnp
add
push
rcl
jmp
das
inc
inc
mov
gs
sub
adc
jbe
dec
int
jmp
shl
jmp
retf
push
pop
(bad)
in
mov
retf
add
push
mov
aas
fstp
fmul
mov
pop
popa
es
shl
stos
lock
pop
ds
adc
ins
xchg
push
cmp
and
ja
bound
mov
mov
jae
jb
hlt
jl
repnz
adc
jae
mov
nop
mov
out
mov
pop
cmp
jge
cwde
mov
mov
mov
in
jne
popf
mov
movs
xchg
add
ss
mov
fdivr
push
rol
daa
enter
cmp
fst
push
pushf
add
pop
inc
adc
mov
cmp
lds
out
call
retf
fadd
cmp
push
loop
pop
lods
or
hlt
fmul
fiadd
inc
adc
int
shr
repnz
and
push
mov
mov
inc
lock
cmp
emms
push
cmps
push
cmp
je
outs
pop
shl
push
sbb
inc
in
rcl
cmp
imul
push
xchg
test
lods
lahf
iret
ds
mov
retf
xchg
call
dec
leave
outs
inc
inc
xchg
hlt
jns
xchg
test
js
mov
pop
ins
aam
imul
in
pop
jl
jecxz
js
cmp
sub
(bad)
nop
or
scas
jmp
inc
and
add
lds
aas
addr16
lahf
(bad)
mov
or
xor
addps
dec
adc
inc
dec
sbb
movs
xchg
cmc
es
push
in
or
outs
inc
mov
call
xchg
or
fxtract
mov
ret
mov
shr
adc
ret
pop
pushf
ret
mov
sar
xor
cli
jns
loopne
retf
in
dec
and
ret
nop
sahf
xchg
pop
into
inc
jo
xchg
adc
cmps
jns
xchg
outs
cmp
push
jecxz
sub
and
mov
leave
jnp
sub
dec
cli
not
(bad)
mov
inc
push
fsubp
mov
xchg
xor
jmp
arpl
cmp
imul
popf
and
mov
add
xchg
jl
cli
pop
mov
jne
xor
test
inc
outs
ror
hlt
jae
inc
daa
fdivr
xchg
adc
dec
jno
outs
mov
xor
dec
data16
mov
(bad)
jp
in
ins
sub
repz
push
push
push
inc
ss
loopne
out
mov
shr
(bad)
mov
adc
sbb
push
pop
ret
ret
sub
cmp
iret
mov
ret
cwde
push
popa
in
test
nop
mov
(bad)
inc
lock
scas
adc
mov
cwde
imul
scas
inc
or
cs
call
fld
add
xor
in
sub
sbb
lock
ret
out
ss
sub
hlt
fxch
mov
and
push
cmp
jmp
xor
xor
cmp
das
or
test
pop
jb
sub
xchg
cmp
out
fstp
add
aam
jp
call
push
dec
ds
fisub
(bad)
cld
mov
xchg
cwde
sti
in
fidiv
call
fs
aaa
fwait
dec
nop
test
les
shl
idiv
int
ss
push
aam
adc
mov
xchg
mov
pop
push
adc
inc
call
shl
retf
fcomp
(bad)
scas
and
xor
xchg
or
xor
dec
(bad)
jns
lods
fstp
dec
cmps
xor
daa
pop
nop
pop
ror
fsub
lahf
sbb
xlat
add
xchg
scas
ins
cmp
jbe
sub
sub
lock
mov
inc
movs
test
mov
stos
test
inc
mov
stos
inc
xchg
dec
movs
mov
push
mov
sbb
ja
imul
or
nop
sub
add
inc
out
mov
pop
add
and
push
test
(bad)
call
out
ds
in
mov
mov
and
(bad)
shl
int3
xor
aam
cli
cmp
mov
cmp
jo
repnz
push
mov
pusha
in
inc
or
inc
enter
div
shr
(bad)
scas
and
jl
mov
test
rcl
lds
ficom
and
loopne
out
pusha
retf
idiv
(bad)
xor
jmp
mov
cmps
fs
lock
test
outs
cmp
mul
imul
outs
jmp
pop
neg
mov
das
cmp
add
lahf
push
push
jnp
inc
(bad)
arpl
xchg
jge
cmc
fs
adc
je
stos
fld
add
jle
push
or
jle
jp
add
jae
sbb
pop
enter
xlat
test
mov
dec
cmp
adc
aam
outs
pop
rcl
lock
jecxz
xchg
mov
test
call
or
mov
push
or
sub
call
push
ret
xchg
ins
test
(bad)
pop
lods
and
stos
inc
xchg
or
cs
xor
ins
sub
in
lods
std
lahf
push
mov
test
(bad)
test
mov
dec
mov
in
call
ins
jle
(bad)
sub
cwde
xchg
sub
cld
shl
cwde
push
sbb
(bad)
adc
shl
cmc
xchg
movs
inc
sub
mov
push
inc
jg
xor
lds
adc
inc
stos
xor
and
sbb
imul
clc
push
inc
js
mov
xchg
cmp
or
out
icebp
ins
fst
mov
ins
pop
fidivr
dec
outs
sub
inc
mov
cmp
dec
inc
rcr
cmps
shr
jp
xchg
test
mov
sbb
int
mov
add
xchg
(bad)
jecxz
dec
jg
cmps
cmp
sbb
sbb
call
jns
js
and
ret
add
(bad)
push
cmp
sahf
(bad)
and
or
mov
inc
push
lock
jmp
lea
inc
inc
jo
mov
(bad)
retf
rcr
in
movs
loope
sub
adc
dec
mov
cmp
mov
loope
(bad)
fisubr
arpl
aam
es
loopne
(bad)
mov
enter
sub
ins
cmps
pushf
enter
popf
jb
loop
pushf
push
imul
add
shr
jnp
jae
js
(bad)
xchg
push
mov
mov
and
add
cmp
mov
xor
xchg
stos
inc
mov
jo
cs
mov
adc
fs
movups
push
fsub
mov
imul
imul
jmp
or
out
pop
lods
cmp
imul
xor
std
test
push
or
dec
mov
scas
lahf
pop
aas
pusha
test
dec
jae
add
pop
mov
push
xor
mov
cli
stos
dec
add
sti
in
(bad)
test
xor
jl
aad
or
cwde
(bad)
mov
or
scas
xchg
cmp
mov
aaa
jae
fcomp
cmps
shl
shl
jmp
test
jge
hlt
sub
add
int
push
jg
ins
dec
dec
add
push
ss
dec
cs
sub
pop
adc
xlat
inc
leave
dec
xor
or
test
data16
dec
add
dec
call
xor
outs
adc
shl
pop
repz
sub
je
xor
adc
shl
xor
rcl
hlt
(bad)
stos
cwde
pop
mov
sbb
pop
movs
lds
je
and
xchg
aas
lds
mov
daa
pop
xchg
std
pop
out
sub
inc
lods
pusha
mov
data16
inc
shl
dec
cdq
mov
das
sbb
outs
mov
pop
or
push
call
repnz
push
aam
imul
icebp
and
xchg
inc
fidiv
fstp
arpl
xor
leave
xchg
pop
rcl
or
add
dec
ss
in
push
sbb
(bad)
push
jmp
add
mov
jge
in
repz
sub
add
test
shl
push
fcomip
and
push
inc
scas
sub
scas
jno
cld
lods
jo
jbe
cmp
jns
sub
and
jo
outs
fs
jmp
cs
cmp
xlat
ffreep
and
fsubr
inc
mov
sti
jne
pusha
fmul
xor
fdivp
mov
rol
mov
push
clc
rcr
mov
jmp
push
fsub
push
std
cs
pop
pop
inc
iret
pop
inc
xchg
fldenv
fptan
or
push
fimul
mov
xchg
jg
cmps
fldcw
fsubr
clc
cmp
cs
stos
xchg
fs
dec
aam
lds
icebp
movs
xor
push
adc
sti
enter
ret
nop
sbb
sti
mov
movs
add
pop
sub
xchg
ror
sub
sub
jo
div
xchg
fist
andnps
mov
xchg
test
mov
outs
jo
and
shl
jns
jnp
out
push
cpuid
cmps
adc
test
ret
rcl
cmp
sbb
js
fst
adc
dec
mov
mov
mov
xchg
iret
cmp
sbb
out
jge
aam
or
xor
pushf
mov
shl
jae
jb
clc
or
push
loope
or
adc
xor
xchg
xchg
in
ds
addr16
loope
jae
out
cld
je
out
dec
imul
fadd
lods
movs
mov
lahf
test
or
rol
ret
jnp
pop
enter
inc
push
sbb
sbb
mov
cmps
cdq
test
mul
mov
loope
push
leave
test
mov
lds
xor
sub
xchg
lds
das
gs
fcmovu
pop
pop
or
test
push
je
sub
cmp
jns
retf
lea
out
mov
outs
pop
jle
leave
jl
sbb
(bad)
xchg
scas
xor
push
lahf
scas
xor
iret
inc
cmp
mov
loope
ss
arpl
out
dec
shl
and
dec
test
(bad)
and
clc
cmp
sar
fnstenv
xchg
scas
in
mov
push
sbb
cli
(bad)
mov
shr
pop
inc
es
test
inc
cmp
jbe
sbb
jl
jg
scas
add
push
xor
adc
loop
mov
mov
dec
xlat
bound
pop
push
jne
test
dec
adc
js
mov
or
jae
jle
dec
pinsrw
(bad)
jae
push
add
pop
inc
mov
sbb
xor
outs
in
push
or
or
xchg
add
cmp
aas
cli
xchg
inc
fist
retf
jg
in
out
pushf
je
cmp
aad
mov
fcomi
push
and
cmp
rcl
add
ja
out
retf
test
ja
les
mov
je
mov
(bad)
and
movs
jne
mov
pop
cmc
jne
jle
out
bound
(bad)
adc
jmp
push
scas
xchg
lahf
jns
jne
aas
scas
pop
pusha
pop
pop
shl
jl
cmp
in
pop
fmul
adc
pop
call
inc
xchg
sbb
cmp
add
outs
push
in
mov
hlt
cli
iret
aaa
(bad)
mov
mov
popa
push
std
movs
xchg
sub
jecxz
dec
ss
inc
mov
into
push
pop
fild
xor
add
xchg
pushf
idiv
mov
test
add
mov
push
iret
imul
in
cs
outs
inc
les
xor
dec
pop
sbb
inc
pop
imul
int
sub
js
jge
xchg
cmp
cmp
movs
es
push
add
xchg
xor
push
push
and
mov
xlat
xor
xchg
std
xchg
mov
je
iret
pop
jge
icebp
xchg
sub
and
cmp
adc
inc
xor
(bad)
sahf
and
cmp
dec
cmp
push
push
imul
xor
mov
jb
push
xchg
inc
xlat
mov
push
data16
add
test
test
and
xor
aam
jnp
push
xor
pop
lock
retf
add
cmp
push
xchg
fstp
aaa
aam
mov
mov
mov
ja
inc
lods
loop
cmp
pop
sbb
dec
pop
adc
xchg
in
push
sub
(bad)
int3
shr
mov
add
and
jb
sub
sbb
frstor
push
push
sar
sti
xchg
or
xchg
mov
push
dec
jl
jl
les
imul
outs
push
xor
mov
pop
jo
and
and
pushf
std
es
cdq
arpl
push
call
mov
xor
jl
mov
fist
test
mov
pop
cmp
aam
fmul
cmp
xor
adc
mov
and
inc
(bad)
enter
cld
lods
in
xchg
loope
cmc
shr
fimul
sbb
cwde
int3
push
push
xchg
xchg
clc
shl
je
jo
cmc
stc
cdq
and
mov
mov
mov
ins
test
sub
xchg
(bad)
sbb
mov
pop
ret
cmp
dec
add
cmc
jp
aad
rcr
jns
shr
pop
add
lahf
jg
xchg
scas
repz
add
jbe
cmp
pop
xchg
dec
in
jno
fidiv
mov
cwde
mov
mov
xchg
jo
sbb
push
sub
dec
(bad)
mov
sbb
int
jle
pushf
ds
stos
adc
xor
sub
cmp
sbb
inc
or
mov
repz
shl
call
icebp
(bad)
pushf
dec
outs
pop
xor
es
pop
and
xor
jp
and
leave
retf
and
and
mul
popf
inc
imul
pop
(bad)
je
lods
push
js
cmps
add
sub
stc
lock
ret
test
loopne
stos
leave
stc
sbb
rol
retf
xchg
and
sub
cld
repz
adc
call
ds
shl
dec
sbb
das
neg
jb
add
js
and
xchg
fild
xchg
js
ins
aam
outs
imul
adc
mov
les
and
fnsave
enter
aas
cmp
aaa
out
or
loopne
jno
bound
in
push
add
cwde
or
ja
adc
sahf
out
ss
xchg
out
push
push
dec
fsub
xor
js
mov
scas
cmp
sbb
inc
cmp
fst
mov
pop
or
jge
sub
dec
test
(bad)
cld
push
mov
adc
xor
out
jl
call
jge
ja
jo
scas
movs
movs
lock
icebp
adc
ficomp
mov
mov
pop
stos
ins
mov
je
pop
cmp
mov
and
sub
push
call
dec
ds
mov
and
stc
cmp
cli
fbld
or
mov
jmp
std
punpckhwd
daa
sub
imul
mov
mov
and
or
jge
push
mov
jl
out
sbb
popf
das
loope
push
add
mov
jl
(bad)
mov
aaa
jecxz
dec
cmps
xor
xor
xchg
or
ret
popf
int3
mov
and
mov
mov
and
mov
fwait
and
adc
inc
pop
out
int3
cmc
cdq
ins
je
clc
add
or
and
jne
in
mov
push
mov
xor
rcr
xchg
mov
xor
mov
cmp
jp
nop
aas
pop
mov
das
cld
mov
iret
jecxz
or
push
inc
outs
mov
enter
or
mov
mov
xchg
movs
loopne
popf
pop
mov
jecxz
movs
or
mov
push
mov
gs
(bad)
sub
(bad)
cwde
xlat
add
jnp
rol
lock
sbb
(bad)
repz
jmp
test
fdiv
loopne
jmp
in
call
fadd
inc
adc
inc
inc
jo
jno
imul
ficomp
and
lock
lahf
rcl
inc
imul
jp
arpl
push
pop
pop
mov
adc
into
sub
in
inc
xchg
(bad)
inc
xchg
mov
or
mov
sbb
out
add
(bad)
sahf
sub
mov
and
pop
push
arpl
and
aaa
rol
fstp
sahf
sub
movs
dec
pushf
icebp
movs
adc
stc
pop
xchg
(bad)
adc
dec
test
add
retf
push
jb
icebp
cld
out
mov
imul
fisttp
repz
cmp
xlat
xchg
dec
sbb
inc
sub
iret
nop
push
add
cmp
into
scas
add
push
in
je
(bad)
cmp
(bad)
sti
adc
add
and
pop
pop
pop
icebp
lea
dec
push
movs
fldenv
adc
movs
add
addr16
popa
popa
xor
dec
inc
imul
jae
es
pusha
test
mov
loop
mov
push
dec
pop
fwait
call
cmp
outs
or
mov
adc
outs
cmp
gs
inc
cmps
or
or
sbb
popf
js
xlat
fcomp
sahf
xchg
fstp
pop
scas
cmp
(bad)
mov
jo
jnp
fld
mov
das
bound
ret
mov
out
mov
sar
aaa
movs
jl
push
mov
mul
in
sub
fdivr
fisub
ficomp
cli
cmp
sbb
mov
lock
daa
xchg
add
icebp
nop
cmps
hlt
mov
or
fist
test
js
pop
call
jp
and
into
inc
push
fisttp
sbb
jmp
inc
push
ror
push
pop
pop
in
stos
cli
into
in
lea
mov
sbb
pop
mul
jle
pop
cdq
hlt
or
jmp
movs
cmp
data16
out
push
or
or
sbb
das
xor
inc
dec
pusha
mov
fwait
pop
mov
sub
(bad)
outs
jno
fistp
adc
lods
mov
not
fs
pop
fadd
daa
lds
cwde
jmp
inc
aas
cdq
imul
lods
push
ds
mov
movs
cld
sub
adc
(bad)
jge
push
mov
cmp
inc
dec
xor
idiv
mov
bound
aad
test
xchg
mov
mov
mov
pop
dec
mov
or
scas
inc
inc
mov
popa
mov
arpl
sub
pushf
jb
repnz
push
dec
dec
mov
shl
movs
push
(bad)
test
xor
and
cli
jbe
jecxz
inc
push
adc
fldcw
and
fld
stos
sahf
inc
sub
aas
lea
xchg
and
mov
sbb
jns
jne
xchg
into
inc
gs
sub
fbld
lds
mov
movs
push
into
(bad)
imul
inc
sub
push
push
sbb
out
mov
popf
sbb
stc
xchg
hlt
test
outs
inc
mov
gs
imul
cmp
xchg
(bad)
fucom
into
test
dec
sbb
sbb
loope
lds
cdq
push
pusha
aam
popa
test
icebp
sti
sub
pop
xor
sar
nop
xor
(bad)
jge
mov
ja
sub
vunpcklps
pop
sbb
mov
or
sahf
cmp
or
gs
idiv
repnz
or
aam
stc
daa
shr
in
jo
(bad)
mov
add
movs
shr
ficomp
sub
pusha
jp
cmp
xor
add
xor
xchg
add
jle
jae
das
pop
stos
(bad)
dec
mov
push
sub
lods
lods
mov
push
inc
jmp
test
test
xchg
stos
faddp
in
or
xchg
or
push
pop
in
adc
mov
imul
inc
cmps
psubsw
cli
popf
test
mov
xchg
mov
inc
inc
dec
lods
pop
mov
adc
jo
pop
xor
sub
mov
adc
mul
cld
mov
dec
in
sub
(bad)
and
js
sbb
cmps
sub
pop
add
pop
sub
cmps
xchg
and
mov
pusha
cmps
pushf
lea
(bad)
cmp
adc
inc
outs
test
call
sbb
xor
fild
mov
jle
arpl
dec
cs
data16
jnp
pop
mov
sti
hlt
arpl
pop
pusha
call
sub
mov
dec
in
pop
add
pop
mov
test
scas
pop
ds
(bad)
xlat
xchg
cmp
sub
rcl
movs
out
test
sub
out
xchg
sti
test
dec
stos
retf
dec
mov
cmp
pop
cmc
pop
xchg
cdq
std
pop
cmps
xlat
mov
sub
add
push
jp
daa
shr
pop
push
stc
xchg
(bad)
sbb
int3
push
es
adc
dec
sahf
lds
xor
leave
ror
(bad)
xor
imul
ss
gs
push
les
test
call
cmps
test
sub
mov
test
sub
cwde
add
pop
stos
lods
sub
fdiv
test
push
xlat
adc
ror
sbb
es
or
mov
mov
mov
mov
sub
in
add
lea
in
data16
movs
dec
out
dec
pop
dec
out
adc
mov
sbb
out
(bad)
retf
ds
jo
dec
out
cmp
inc
imul
xlat
inc
enter
scas
cmp
mov
std
lock
pop
mov
jl
sbb
call
jle
imul
xchg
movs
push
xor
jne
je
div
aad
mov
lock
imul
pop
test
bound
in
mov
push
imul
jmp
mov
repz
sub
shr
pavgw
mov
adc
sub
loope
mov
sbb
sbb
ret
rcr
cs
lods
jmp
loop
or
lahf
push
test
or
in
sub
pop
ja
sub
(bad)
aad
retf
and
lea
outs
sub
mov
or
inc
fld
xchg
jno
pop
mov
mov
cmp
sbb
xor
mov
bound
jae
dec
sub
jae
push
retf
sub
inc
aad
or
push
xchg
cmps
and
mov
adc
scas
pop
add
push
mov
sbb
je
xchg
sub
retf
mov
hlt
cmp
inc
mov
adc
lock
jg
cwde
mov
inc
ss
cmp
lods
dec
push
fs
loop
std
mov
xchg
enter
(bad)
add
repz
mov
xchg
cmc
sahf
mov
loop
sahf
aam
cmp
scas
jg
adc
adc
push
popf
mov
sub
add
sub
dec
ds
sti
inc
or
add
mov
adc
arpl
xor
mov
aas
add
test
sti
rcr
ret
inc
(bad)
mov
addr16
mov
fstp
imul
mov
xor
cmp
repnz
mov
xchg
xor
call
xchg
loopne
aaa
call
xchg
pop
sub
cmc
cmps
icebp
xchg
or
icebp
sahf
repnz
enter
out
mov
jl
fs
cmp
lods
mov
and
xlat
xlat
popa
dec
ret
fsubp
dec
mov
cmc
std
loopne
out
cmp
mov
and
or
nop
bound
iret
mov
sbb
movs
mov
cmp
xlat
add
push
xchg
xor
mov
sub
sub
fdiv
adc
(bad)
mov
outs
out
int3
out
xor
cmp
adc
inc
or
(bad)
jmp
ret
add
mov
cmp
lock
out
jp
imul
pop
fs
inc
mov
out
fld
out
mov
dec
scas
xchg
sti
loopne
xor
jecxz
and
xchg
xchg
pop
(bad)
fs
es
out
outs
(bad)
jle
and
mov
add
cmp
and
mov
fsub
pusha
lahf
cmp
cmp
aam
cmp
test
fld
lea
(bad)
out
mov
mov
jge
hlt
push
loope
ja
addr16
ret
out
fxch
(bad)
dec
sub
mov
fs
mov
mov
jne
daa
adc
je
jne
popf
ss
jl
adc
retf
xchg
jl
in
push
nop
outs
pop
xor
xor
xor
jns
mov
pop
mov
xchg
jbe
mov
pop
mov
push
add
jecxz
sbb
mov
sbb
mov
fistp
into
mov
pushf
jle
mov
in
outs
shl
dec
nop
addr16
push
movs
nop
jge
outs
cli
out
shl
(bad)
xlat
test
retf
ret
(bad)
jmp
(bad)
jne
cmp
outs
mov
xchg
sbb
sub
aas
ret
int
mov
in
int3
dec
mov
dec
(bad)
push
leave
jmp
fistp
fbld
mov
push
push
pop
add
sub
call
add
sahf
cmp
and
xchg
repz
in
xor
jmp
out
js
push
pop
fs
scas
mov
add
sbb
add
dec
add
dec
sbb
jmp
lds
mov
into
sbb
or
scas
adc
cwde
cmp
dec
mov
les
movs
retf
cmp
pop
out
adc
push
pop
xchg
xchg
mov
enter
int
mov
xchg
xor
xor
add
stc
inc
jbe
lds
push
ffreep
fistp
inc
cmp
pop
sub
push
fmul
sub
jmp
retf
inc
mov
push
push
mov
push
pop
fidivr
sub
dec
xor
dec
dec
push
call
adc
arpl
loop
and
sub
cmp
xchg
lods
(bad)
jmp
iret
sbb
outs
sbb
jp
mov
pop
xchg
movs
or
scas
repnz
push
dec
sbb
test
bound
push
pop
and
inc
repnz
xlat
mov
adc
fnsave
mov
(bad)
xlat
cmp
sub
mov
cmc
inc
fcomip
or
in
dec
mov
std
inc
sbb
mov
les
inc
scas
imul
fcmovnb
cld
out
xlat
mov
out
add
pop
and
nop
xor
or
repnz
div
xor
scas
aam
lock
jmp
out
sbb
fs
ficom
jne
xchg
call
(bad)
and
retf
idiv
mov
fwait
or
(bad)
push
jo
fstp
and
push
dec
ja
repnz
mov
dec
idiv
inc
aaa
stos
fnsave
pop
pop
adc
inc
enter
out
mov
jne
fnsave
push
mov
mov
pop
dec
retf
jmp
das
jbe
mov
leave
pop
test
push
push
daa
or
mov
(bad)
mov
out
jl
cmc
dec
lahf
xor
lock
and
loopne
sbb
mov
clc
gs
mov
xchg
sub
out
push
fs
lock
rol
(bad)
enter
lods
cdq
repz
fsubr
test
jne
pop
in
test
inc
mov
mov
cmp
or
cmp
jle
xor
fisttp
jmp
mov
mov
dec
dec
shl
pop
inc
pushf
fidiv
ins
push
aam
cmps
push
push
(bad)
xor
dec
mov
xor
sbb
jo
int3
jne
lods
gs
arpl
aad
mov
lea
push
gs
daa
test
push
pop
add
mov
dec
leave
inc
inc
pushw
imul
sahf
and
scas
inc
dec
int
push
jmp
inc
int
xchg
add
fsub
dec
jns
push
in
add
push
jae
jecxz
stos
adc
dec
dec
ret
cli
sbb
mov
or
dec
shl
mov
arpl
jp
sub
js
pusha
jl
mov
out
outs
sahf
push
and
or
jmp
outs
xchg
mov
add
adc
out
or
in
lahf
and
push
mov
dec
(bad)
push
out
pop
mov
mov
add
dec
sub
mov
loop
sub
sub
(bad)
xor
out
add
push
jno
jmp
rcl
or
stos
push
enter
retfw
rcr
loop
fdivr
fidiv
or
add
sbb
lock
jecxz
je
in
cli
inc
imul
jge
mov
mov
dec
mov
xor
mov
mov
cmp
push
mov
outs
js
push
mov
int
addr16
hlt
or
cmp
lahf
lods
cmps
in
pop
(bad)
jae
cmc
push
test
aas
fwait
add
adc
cmps
(bad)
pushf
and
cmp
dec
mov
outs
lahf
add
fst
mov
mov
bound
pop
mov
test
ins
retf
div
ss
dec
js
and
iret
jne
and
xchg
popw
mov
ds
arpl
mov
xchg
test
pop
lock
jns
jno
idiv
sbb
scas
lahf
daa
sbb
mov
int3
inc
jbe
inc
shr
nop
pop
inc
retf
lahf
cmp
shr
lock
xor
or
ret
or
sub
inc
movs
xchg
ror
mov
(bad)
or
test
mov
enter
mov
pop
push
sub
fild
xlat
jbe
mov
in
adc
or
outs
xchg
shl
inc
dec
jecxz
push
aas
dec
push
pop
pop
test
test
(bad)
dec
aam
(bad)
rcr
fbstp
addr16
sub
add
jo
sub
add
inc
out
dec
outs
mov
sub
dec
dec
jp
mov
jmp
test
and
mov
fist
ja
rcl
ins
and
and
pushf
fs
cdq
test
cwde
pop
mov
lds
stc
enter
adc
cmp
push
test
aam
or
int3
repnz
cmp
jmp
dec
adc
ret
and
in
clc
cwde
jb
cdq
out
add
pusha
mov
push
push
add
inc
push
pop
clc
nop
jmp
and
push
push
mov
call
lock
push
dec
jmp
mov
cli
mov
aas
cmp
add
out
sar
jno
mov
adc
or
adc
loopne
sbb
inc
mov
xchg
mov
or
cmps
mul
pop
ror
fwait
and
cdq
sub
add
dec
shl
add
xchg
lods
hlt
jmp
lahf
sti
xchg
cli
sti
fcomip
mov
add
mov
loop
inc
nop
and
and
ficomp
mov
mov
ror
repnz
out
data16
stos
enter
clc
xchg
imul
mov
in
dec
out
adc
repz
imul
ds
xor
shr
jno
sbb
jmp
dec
or
and
es
cli
sub
inc
js
mov
arpl
stc
sahf
push
push
push
scas
out
or
sub
out
jge
(bad)
fist
repz
mov
cli
sbb
ror
adc
ss
dec
sub
push
pop
outs
mov
stos
inc
hlt
xchg
cmp
(bad)
mov
scas
js
data16
mov
fisubr
or
inc
mov
inc
pop
add
or
jns
xchg
(bad)
call
in
jno
leave
pop
mov
xchg
and
dec
shr
dec
aas
jle
or
mov
jno
push
mov
sub
sub
and
inc
fnsave
dec
daa
xchg
test
adc
in
loop
mov
aad
(bad)
mov
in
xor
call
icebp
ficomp
sub
jno
mul
psubd
xor
mov
mov
jae
int
adc
test
outs
pop
xor
inc
jns
out
jo
jle
cmps
cwde
pop
daa
push
dec
mov
xchg
pop
push
add
pop
test
mov
adc
pop
mul
iret
fwait
iret
sbb
mov
or
fidiv
sar
es
(bad)
jl
push
dec
(bad)
stc
ficom
sahf
lods
in
aam
add
pop
test
xchg
jne
test
push
xchg
movs
adc
in
mov
xor
xchg
mov
mov
sbb
inc
jl
aas
out
fisubr
leave
push
repz
and
(bad)
cmps
int
push
popf
fstp
lahf
ret
(bad)
xchg
xchg
fwait
jl
inc
ja
mov
add
ins
lahf
aas
ins
mov
pushf
ja
mov
xchg
mov
or
jo
push
dec
mov
ss
mov
xor
or
stos
xlat
or
jne
add
or
bound
sbb
mov
xor
mov
mov
mov
stos
adc
sti
add
mov
sbb
jnp
jge
jne
xor
dec
jns
jg
and
retf
jbe
lock
cmp
in
ret
aas
and
and
stos
popa
lfs
lahf
sbb
xor
pop
xor
push
jp
jmp
sub
mov
mov
sbb
dec
or
fild
jecxz
xchg
inc
xchg
adc
sar
inc
out
push
mov
lods
xor
sub
sub
push
je
div
xor
lidtd
data16
sbb
sub
or
mov
adc
sub
mov
mov
dec
or
cli
inc
cmp
mov
ret
ret
mov
jno
and
loopne
xchg
jmp
mov
push
sbb
mov
push
jb
adc
shr
sub
cmp
je
outs
or
cmp
daa
pop
cld
sub
mov
cli
xchg
xlat
jo
pop
sub
int3
sub
jo
les
loopne
push
cwde
sbb
xor
sbb
repz
out
dec
es
ret
test
fs
test
cmps
iret
call
lahf
push
dec
ret
test
jo
sbb
jmp
sub
int3
add
mov
xchg
test
enter
(bad)
popf
popf
and
es
jmp
adc
clc
and
jo
lods
jl
pusha
jge
mov
cmp
idiv
out
push
xchg
cmp
dec
and
jmp
fiadd
xor
leave
pop
and
jno
mov
jmp
in
and
rcl
fdivp
aas
lds
scas
xor
test
dec
dec
xor
clc
addr16
or
sub
adc
stos
scas
sbb
scas
inc
das
sahf
(bad)
lods
out
mov
fild
jne
pop
scas
shl
and
jns
pop
lea
mov
xchg
and
jp
push
fstp
mov
inc
adc
jne
lods
jb
sahf
xor
test
daa
inc
int
repz
ins
sub
and
aam
ins
sub
in
adc
dec
mov
in
adc
fs
out
scas
mov
shl
aam
ret
cmp
jne
push
cmp
shl
sbb
or
mov
fiadd
mov
adc
pop
pop
jbe
jno
pop
mov
mov
dec
ins
xchg
hlt
rcl
pop
adc
pop
pop
cmp
lods
js
push
pop
jle
bound
jne
pop
pop
mov
and
ja
jbe
or
stc
jp
ret
sbb
dec
xchg
push
xchg
sub
ins
mov
or
aaa
adc
jae
xor
mov
xor
dec
pusha
movs
jp
push
mov
sub
retf
adc
test
imul
sbb
fst
pop
imul
pop
sub
(bad)
dec
shr
test
xchg
mov
mov
mov
mov
imul
test
pop
and
push
fld
out
pop
data16
adc
stos
retf
sub
idiv
or
fs
fcmovb
adc
cmp
mov
ds
jmp
mov
adc
mov
js
add
sub
div
ins
in
enter
sahf
dec
pusha
mov
jns
adc
dec
lods
(bad)
hlt
jno
add
xor
enter
jle
sub
mov
push
xor
ret
test
sbb
lock
hlt
ret
mov
outs
(bad)
in
mov
jge
cmp
in
movs
cld
xor
pop
pop
cld
(bad)
and
xor
clc
fld
call
add
(bad)
arpl
ins
pop
jns
das
jne
push
leave
xor
(bad)
xor
pop
neg
mov
rcl
dec
adc
and
dec
xchg
pop
xchg
sub
(bad)
push
xchg
and
jno
and
lahf
int3
out
outs
xchg
jg
cmp
test
out
mov
data16
cmp
cs
sar
sbb
inc
popf
lods
ja
jb
out
leave
dec
sahf
retf
je
xor
ror
mov
fiadd
cdq
(bad)
mov
loope
div
shl
mov
das
lea
pop
jmp
and
mov
ins
retf
imul
xchg
fcmovbe
aas
dec
or
adc
dec
loopne
xchg
sbb
das
xchg
pop
push
fcmove
into
mov
xor
aaa
jne
and
sbb
xor
dec
das
xchg
adc
sub
(bad)
cwde
push
jmp
pop
add
xchg
(bad)
jmp
inc
data16
add
outs
rol
push
inc
popf
pop
(bad)
clc
out
xor
xchg
push
ja
leave
scas
loop
call
iret
cmp
inc
xchg
ret
push
sub
lods
test
jp
in
adc
jle
inc
mov
adc
lock
and
cmp
aas
in
cmp
xchg
fnstcw
ins
push
fiadd
push
out
shl
fs
sti
lahf
add
add
pop
mov
mov
stos
fwait
add
mov
mov
pop
std
retf
call
iret
loop
inc
and
and
ins
(bad)
call
into
sub
jne
das
shl
dec
fdivr
repnz
fidivr
jmp
mov
test
xchg
xchg
(bad)
cmc
aad
or
mov
leave
sbb
into
cdq
xor
push
mov
out
popf
push
imul
push
int3
jmp
lea
jbe
cmc
pop
sbb
in
stc
cmp
cmp
rcl
cdq
int3
jp
cs
out
push
cmp
lea
mov
dec
add
lahf
lds
xor
cmp
in
aaa
inc
dec
(bad)
dec
(bad)
cmc
mov
loop
mov
cs
jnp
je
jno
test
out
icebp
aad
neg
nop
sahf
call
push
gs
xchg
out
in
stos
movs
ret
inc
push
scas
and
iret
add
aas
mov
ja
pop
mov
fild
cmps
mov
retf
push
jle
aad
js
mov
repz
leave
cmp
ss
test
ja
add
jg
add
imul
jmp
mul
sbb
push
call
fnsave
dec
mov
stc
loop
js
repnz
ror
scas
inc
push
fstp
cli
das
test
fist
xor
scas
mov
lea
ja
clc
in
sub
aam
xor
int3
stc
sbb
int
or
cld
or
frndint
dec
pop
stos
stos
sub
inc
(bad)
fiadd
pop
mov
ds
lds
inc
sub
sbb
fs
pop
xchg
imul
dec
clc
jl
mov
jo
or
sbb
fs
pop
sub
and
(bad)
mov
into
mov
stos
fsub
(bad)
mov
adc
or
fadd
jge
xlat
iret
lods
in
and
adc
test
rcr
cmp
push
or
mov
stc
fnstcw
retf
retf
fcomp
jnp
sub
(bad)
in
xor
sti
and
mov
in
stos
ret
push
jno
push
mov
mov
loop
fld
ret
pop
or
test
out
jo
loop
cmp
xor
icebp
push
jae
sahf
jno
inc
loop
in
pop
and
aas
add
or
mov
and
test
out
mov
sbb
sub
or
dec
(bad)
pop
int3
dec
(bad)
(bad)
ins
push
shl
jnp
mov
mov
fidiv
aaa
inc
mov
mov
mov
jecxz
call
addr16
test
mov
outs
test
fisttp
int
popa
je
add
retf
cwde
sbb
mov
add
shl
mov
and
fild
sbb
std
cmp
or
ficom
fdiv
mov
mov
bound
adc
lds
pop
ror
test
test
sub
fisttp
jmp
fistp
mov
inc
sub
mov
retf
js
mov
test
cmp
movs
jp
(bad)
out
adc
or
inc
adc
fs
pop
inc
dec
jle
cmp
push
and
mov
mov
xor
mov
cwde
mov
mov
push
test
mov
outs
mov
into
jle
jbe
int3
xor
sar
das
xor
stos
bound
xchg
push
sub
pop
mov
outs
outs
and
jb
inc
movs
or
mov
leave
neg
push
sub
inc
retf
(bad)
dec
pop
mul
mov
mov
pop
js
jmp
xor
pusha
or
test
jge
fisttp
clc
sub
sbb
leave
and
inc
push
stos
jl
test
scas
mov
lods
cmp
xor
adc
adc
sti
or
cmps
inc
aad
add
sub
es
jg
adc
or
not
adc
fld
xor
data16
(bad)
je
mov
sbb
inc
outs
mov
cmp
push
clc
adc
pop
sub
mov
les
mov
sbb
jmp
xor
in
rol
or
test
pop
bnd
pop
jp
out
pushf
pop
push
das
lock
popf
sub
shl
cs
lock
dec
scas
sbb
fisttp
aam
shl
jo
adc
sub
xlat
push
movs
dec
mov
aaa
push
ss
fisttp
mov
je
out
test
(bad)
fcmovnb
cmps
mov
xor
cmp
(bad)
mov
sbb
pop
and
xchg
jle
mov
in
ret
inc
cmp
aad
dec
or
mov
dec
inc
mov
(bad)
sub
cmp
retf
push
jno
or
cmp
idiv
mov
push
mov
jbe
mov
xchg
jo
pop
xlat
aam
lods
or
sbb
sbb
sub
clc
mov
sar
and
lock
xor
and
dec
xor
jg
ins
cmp
je
sbb
jl
add
mov
ins
xchg
inc
pop
xlat
jmp
adc
out
stc
xchg
bnd
lock
inc
ret
xor
dec
dec
stos
mov
ret
ret
xor
mov
mov
add
pop
dec
add
sbb
les
cmp
out
cwde
clc
mov
retf
addr16
les
aas
jae
test
inc
dec
rcr
mov
xchg
inc
pop
outs
dec
pop
mov
jg
neg
(bad)
cld
mov
cmps
or
mov
cs
loopne
or
data16
test
inc
inc
xchg
xor
sahf
mov
sbb
gs
xor
rcl
pop
sti
aaa
out
or
cmc
jns
xor
fld
popa
shr
mov
mov
loope
cwde
jno
mov
repnz
fbld
push
ret
mov
addr16
icebp
mov
inc
rcr
mov
push
or
loopne
mov
cmc
push
outs
jmp
stos
std
mov
fdivr
and
jo
lods
or
popf
mov
mov
xchg
enter
adc
cmps
and
mov
push
sub
aaa
fs
daa
mov
stos
pushf
test
jge
mov
lods
call
movs
inc
stc
scas
movs
xchg
xor
push
lock
mov
jecxz
xchg
add
mov
jmp
mov
je
or
add
clc
mov
jbe
mov
sbb
nop
aam
mov
or
cmp
ds
mov
inc
mov
test
xor
hlt
and
mov
ret
daa
out
cld
inc
adc
mov
loopne
xor
imul
pandn
mul
pusha
adc
add
mov
repnz
jmp
out
fldenv
dec
out
xor
sahf
stos
test
xor
cdq
or
and
cmp
mov
retf
cmp
inc
cdq
repz
loopne
xchg
mov
mov
fidivr
mov
data16
sbb
out
imul
ret
pop
xor
xchg
arpl
rcl
adc
xchg
mov
mov
dec
add
retf
pushf
test
scas
in
adc
sub
es
cld
daa
js
pop
mov
lock
loope
inc
fcom
cmc
in
cmc
popf
pop
pusha
push
sub
pop
es
rol
std
mov
enter
fucomp
out
shr
push
sti
xchg
repz
push
loope
stos
jno
and
(bad)
pop
push
dec
mov
jo
fwait
pusha
push
fs
xchg
out
stos
(bad)
and
popa
adc
repz
data16
jnp
and
mov
int3
cdq
cdq
pop
sub
mov
jmp
sbb
push
adc
sbb
shl
das
adc
(bad)
xlat
popa
xchg
xchg
stos
pop
cmps
push
xor
ja
inc
push
fadd
adc
popf
xchg
retf
cmc
mov
stos
lahf
ja
pop
test
pop
les
mov
push
xor
movs
hlt
in
js
rol
mov
imul
inc
cmp
jl
ins
mov
pop
jecxz
je
pop
sahf
arpl
stos
shl
and
leave
inc
inc
rcl
popa
xor
mov
(bad)
aas
arpl
jbe
scas
jno
cmp
push
xchg
or
lock
and
cmps
test
mov
daa
mov
out
cmps
jmp
pop
xor
add
cmps
sub
inc
pop
test
lahf
cmp
jae
or
lock
push
mov
cli
mov
xchg
push
in
sbb
int
(bad)
mov
(bad)
push
out
pop
dec
sahf
aaa
mov
jmp
mov
and
mov
fist
jnp
sti
shr
pop
popf
int
dec
mov
mov
cs
aad
xor
sub
sbb
xlat
(bad)
not
sub
fldcw
fs
adc
adc
add
lods
rol
call
icebp
call
mov
aaa
xchg
lods
in
xor
pushf
mov
(bad)
aam
les
xor
ret
pusha
movs
xchg
adc
xor
out
loopne
ror
xchg
mov
aad
xlat
pop
mov
mov
(bad)
push
int
jmp
xchg
sub
js
and
inc
in
(bad)
(bad)
cmp
jmp
inc
jp
xchg
scas
inc
inc
mov
inc
enter
cmp
mov
(bad)
mov
aam
retf
mov
pop
repz
mov
int
push
in
mov
xchg
outs
jns
mov
sub
fs
or
mov
jae
jne
push
aad
scas
aas
loop
mov
inc
xor
fistp
nop
arpl
xchg
mov
mov
cmp
adc
mov
loopne
je
hlt
loopne
cli
fdivr
adc
in
xlat
out
movs
iret
and
dec
inc
mov
aaa
pop
push
add
std
ficomp
call
pop
inc
lods
gs
mov
cs
pop
fld
fs
loopne
adc
leave
fbstp
cmps
lods
ja
sbb
and
or
cs
aad
xor
cmp
add
rcl
test
clc
sti
pop
std
mov
push
sar
cmps
js
addr16
or
enter
mov
int
(bad)
stos
mov
or
xchg
bound
in
jecxz
sub
pop
pop
loop
loopne
jae
xchg
aaa
movs
daa
dec
fild
fst
pop
ret
push
sbb
mov
cmp
int
bound
daa
sahf
or
sub
jg
cmps
jb
and
xor
mov
out
sbb
pop
and
dec
aaa
popf
cs
lea
mov
dec
in
rcl
add
sbb
fsubrp
push
es
inc
scas
lds
push
icebp
test
loope
fsub
ret
out
add
ins
jge
loope
shl
jno
adc
popa
clc
push
(bad)
fadd
add
xchg
call
mov
xchg
dec
bound
mov
cmc
sub
mov
outs
scas
dec
or
je
mov
pop
frstor
jb
dec
je
sub
adc
xor
jge
dec
enter
lds
pop
ror
fwait
ror
lods
shl
xchg
mov
xchg
adc
inc
mov
jle
ret
adc
mov
in
shr
mov
not
add
lods
lds
fstp
or
adc
sbb
sar
jns
ss
pop
mov
adc
ja
call
xchg
ds
imul
adc
inc
jnp
clc
xchg
xlat
stos
pop
addr16
out
aad
scas
cmp
mov
lods
dec
nop
hlt
out
mov
popa
sbb
sbb
movs
mov
imul
jecxz
cli
nop
sbb
fst
jmp
jno
adc
in
add
push
fistp
sub
add
push
or
inc
inc
add
jb
push
lods
stos
mov
inc
adc
in
push
std
out
mov
leave
test
xor
jecxz
jbe
je
es
add
and
inc
cmp
dec
mov
ss
jmp
push
push
retf
mov
pop
dec
pop
test
xor
movs
popf
scas
push
cdq
inc
leave
sub
add
and
xlat
cli
dec
dec
es
pop
out
cli
rol
sar
int3
sub
movs
pop
xor
repz
and
add
shl
iret
mov
aaa
in
out
neg
push
(bad)
cld
push
int3
cmp
out
outs
push
and
sbb
(bad)
mov
pop
icebp
push
xchg
pop
cmps
out
mov
inc
lea
bound
adc
xchg
xchg
loopne
in
data16
sbb
jo
or
rcr
mov
jmp
jmp
push
push
mov
xchg
clc
ja
fistp
ja
push
ficomp
dec
mov
push
add
mov
inc
and
(bad)
daa
into
adc
add
loopne
call
ss
and
retf
push
(bad)
mov
outs
jbe
xchg
call
mov
jge
or
sub
and
loopne
mov
ins
loopne
in
xor
addr16
scas
fsubr
aaa
aam
in
les
or
jns
adc
arpl
lea
in
fldenv
push
mov
xor
pushf
jb
jmp
cmp
fwait
push
sbb
or
inc
(bad)
out
pusha
add
and
pushf
data16
lods
sbb
adc
push
inc
push
cmc
pop
xor
ret
dec
fist
rol
icebp
inc
sub
mov
aas
(bad)
out
pusha
out
mov
das
test
sub
mov
in
cmp
or
xor
add
push
loope
test
(bad)
cmp
dec
jl
loop
mov
rol
int3
stc
sbb
push
push
(bad)
(bad)
pop
(bad)
and
dec
mov
scas
xchg
ins
inc
jae
pop
arpl
stos
push
dec
call
xor
aad
out
and
loopne
sub
mov
push
hlt
mov
fldcw
dec
test
dec
adc
in
xor
xor
xchg
movs
jae
cdq
loope
cmp
(bad)
xchg
loop
in
cdq
test
add
xchg
cli
retf
mov
jnp
xor
(bad)
jno
lea
out
sbb
and
cmp
pop
push
ins
lahf
mov
cmp
mov
fs
imul
add
(bad)
shl
xor
icebp
and
dec
lods
int3
pop
inc
mov
xor
mov
aas
and
push
push
mov
pop
push
call
int
loopne
jp
jne
int
and
fadd
mov
xor
int3
cmc
stos
jnp
sbb
jns
cld
xor
int
push
out
mov
add
adc
dec
arpl
iret
inc
jmp
mov
and
push
cmp
cwde
adc
sbb
xchg
inc
int3
xchg
mov
cmp
fisttp
adc
pop
jb
inc
pushf
bound
aad
dec
(bad)
or
jns
jae
cs
push
rol
lds
adc
push
cmps
xchg
add
and
(bad)
imul
mov
pop
mov
(bad)
clc
cmps
movs
adc
lds
into
mov
inc
(bad)
pop
mov
push
sub
inc
in
cli
or
clc
cmc
outs
push
stos
jle
retf
cmp
in
mul
mov
aad
cmp
mov
xchg
movs
retf
fwait
ds
xor
xchg
lfs
rcr
in
pop
sbb
fcomp
mov
test
nop
push
jb
and
jmp
mov
and
fmul
into
cmp
bound
pop
xor
push
push
cmp
jl
pop
jne
xor
out
(bad)
cmp
xor
xchg
xor
mov
prefetchnta
bound
pop
in
fsub
imul
(bad)
cld
mov
mov
sbb
or
jmp
in
adc
pop
push
push
dec
imul
test
mov
je
jecxz
jns
mov
loop
(bad)
xor
or
sbb
scas
in
pop
jae
mov
xor
add
or
mov
sbb
and
(bad)
jmp
xchg
jo
sahf
leave
dec
in
rcl
pop
hlt
jmp
dec
stc
clc
imul
call
out
f2xm1
sub
sub
push
inc
mov
or
arpl
out
jb
adc
adc
mov
fiadd
lds
fs
in
lock
mov
push
sub
xchg
add
pop
sub
adc
cwde
cmp
call
cmc
dec
mov
outs
loopne
stc
adc
and
push
jb
clc
ins
or
pop
inc
xchg
test
ins
inc
adc
(bad)
mov
arpl
sbb
push
daa
add
lea
pop
call
pop
lods
ds
sub
xor
iret
(bad)
mov
pusha
test
retf
lahf
and
xchg
and
lods
add
or
inc
add
bound
out
dec
repnz
imul
mov
sub
jle
movs
or
push
cdq
mov
(bad)
sbb
in
je
dec
or
in
pop
pop
in
push
jmp
sbb
and
xchg
mov
xchg
enter
jb
ss
push
mov
add
xor
fcmove
dec
xor
lahf
and
fld
popa
mov
in
call
ss
out
out
cmp
push
jnp
jo
mov
or
cld
lds
lods
dec
idiv
xchg
or
mov
jno
call
test
or
jmp
daa
push
jge
iret
stc
cmp
pop
outs
push
or
call
jno
mov
mov
pop
aas
inc
pop
aaa
sbb
lods
pop
popa
mov
vshufps
(bad)
out
inc
mov
lahf
xor
xchg
out
cmc
loope
jae
cmp
push
in
hlt
xor
xchg
mov
jle
jns
xchg
mov
idiv
fsubrp
test
cld
pusha
or
xchg
add
(bad)
movs
movs
cli
fisttp
mov
mov
pop
mov
out
cli
lock
mov
add
into
out
in
push
out
scas
std
adc
cmp
es
fist
imul
xchg
jbe
retf
jno
movs
or
mov
mov
or
mov
pop
cmp
or
addr16
sti
lock
fidiv
mov
add
fstp
(bad)
int3
mov
push
sahf
jmp
mov
pop
push
jmp
fistp
push
jecxz
mov
mov
sbb
add
addr16
mov
mov
xchg
adc
inc
retf
mov
pop
xor
add
push
jmp
js
mov
jl
frstor
inc
scas
(bad)
pop
aaa
wrmsr
xor
loop
loopne
out
adc
cs
mov
mov
jns
or
xchg
sub
gs
add
sub
push
scas
push
outs
cmp
or
fs
cmps
jnp
pop
inc
xchg
inc
test
cs
ja
or
xlat
dec
(bad)
das
inc
fmul
pop
shr
xor
outs
div
push
and
movs
mov
sbb
pop
sbb
sub
xor
cmp
or
leave
and
mov
push
je
adc
dec
sbb
int3
dec
test
outs
pop
out
xchg
sub
dec
daa
in
(bad)
pop
add
in
inc
mov
aad
lods
data16
dec
ds
dec
jae
or
adc
in
lahf
pushf
int
and
call
cmp
inc
dec
sbb
cmp
(bad)
xlat
push
sub
mov
iret
repz
test
dec
xchg
into
adc
push
cmp
arpl
nop
mov
bound
add
dec
push
mov
xor
cdq
pop
xchg
in
into
sbb
fld
arpl
add
clc
in
pop
xor
cwde
dec
movs
push
mov
pop
mov
ins
xor
adc
jns
mov
jmp
repnz
das
(bad)
cmp
in
jle
ror
adc
mov
lahf
adc
push
fbstp
cmp
inc
pop
xor
(bad)
xchg
(bad)
je
retf
(bad)
or
pop
outs
mov
xlat
int3
repnz
mov
sub
jb
xor
xchg
out
nop
leave
push
ficomp
aad
jg
std
push
pop
fdivr
outs
mov
aaa
dec
std
scas
jle
mov
popa
pop
cmp
scas
push
xchg
(bad)
daa
and
mov
call
push
mov
jmp
pop
xor
sub
jl
sbb
or
ss
ja
dec
or
addr16
jge
pop
pop
pop
and
cli
xchg
inc
jnp
mov
sbb
adc
ja
cwde
rol
mov
xor
and
(bad)
std
dec
push
xor
dec
cmp
mov
call
mov
cmp
shr
and
mov
inc
push
adc
in
lea
jmp
xchg
out
ins
inc
cwde
adc
cmp
imul
fbld
fisub
pop
clc
ror
mov
(bad)
inc
and
inc
xchg
ins
popf
push
imul
add
xlat
test
cmps
pop
xchg
call
and
jbe
sbb
movs
and
xor
adc
push
cmc
lock
mov
pop
pushf
xchg
mov
test
inc
aaa
call
inc
jb
rdseed
mov
out
lock
pop
jmp
adc
push
(bad)
cwde
jmp
push
retf
or
daa
bound
or
mov
fsub
push
cmp
nop
xchg
and
inc
bts
in
outs
(bad)
sub
inc
mov
les
rcl
ins
push
fdivr
retf
lea
popa
ss
sbb
mov
pop
call
int
mov
add
xchg
imul
and
movs
jmp
pop
sbb
call
sbb
repz
(bad)
mov
test
push
mov
mov
cmp
mov
lea
(bad)
rcr
sub
lods
int
mov
xor
std
and
clc
aas
stos
sbb
jl
retf
frstor
not
dec
mov
inc
and
jmp
movs
jp
cmp
retf
mov
adc
mov
lods
ins
out
xor
(bad)
js
xor
test
out
cmp
fs
and
add
xor
test
adc
mov
inc
arpl
sti
xor
lock
dec
test
outs
cmp
inc
mov
aad
pusha
push
sbb
cld
call
gs
icebp
out
out
ds
jmp
pop
call
icebp
cmps
dec
push
aas
pop
das
or
mov
shl
sub
jmp
adc
xchg
mov
jne
repz
aam
es
adc
enter
aas
les
lock
sub
jns
xchg
push
(bad)
aaa
outs
pop
dec
sbb
mov
cdq
iret
pop
es
imul
int3
sub
inc
sar
jmp
mov
add
shl
mov
lock
scas
loope
cmp
add
jae
rol
popf
cmc
xor
xchg
cwde
cmp
sub
dec
(bad)
loopne
lods
fwait
pusha
mov
push
outs
push
retf
iret
mov
pop
pop
pop
loope
pop
fldenv
inc
pop
dec
jae
adc
in
imul
call
aam
xlat
xchg
mov
sti
retf
ret
mov
mov
pop
jmp
jo
gs
and
adc
pop
cmp
dec
or
out
ret
hlt
or
in
adc
or
neg
stos
inc
fwait
pop
mov
dec
mov
pop
movs
in
fidivr
iret
(bad)
sub
fild
(bad)
mov
adc
ror
arpl
pop
daa
test
addr16
adc
dec
mov
into
inc
in
pop
cmp
xchg
ins
fs
mov
(bad)
in
lahf
ins
mov
or
jmp
shr
lods
push
sub
and
jg
cdq
fadd
or
cld
jae
dec
pop
jns
push
inc
mov
rcl
ins
add
inc
mov
mov
inc
mov
jp
mov
or
push
or
ins
int3
and
fst
mov
pushf
xchg
sub
stos
jecxz
xchg
mov
js
mov
cmc
dec
aad
cdq
shl
add
test
stc
jns
sub
fiadd
out
cmp
adc
cmp
adc
jns
cmp
enter
(bad)
pop
adc
test
sub
addr16
out
xor
punpckldq
inc
ficomp
pop
mov
xchg
into
fucompp
sbb
mov
mov
les
inc
xchg
push
mov
lock
rcl
pusha
push
popa
cmp
(bad)
jns
movs
mov
clc
movs
sar
rol
dec
fnsave
xor
xchg
mov
xchg
inc
mov
hlt
in
dec
cmps
push
inc
jb
pop
movs
movs
mov
add
mov
je
mov
pop
add
(bad)
call
sti
ficom
(bad)
idiv
int
pop
test
cmp
mov
inc
mov
scas
shl
fimul
inc
pop
pop
adc
mov
ja
int3
jp
xchg
mov
aam
std
jl
not
push
mov
push
sbb
push
shl
retf
push
scas
in
push
leave
adc
xchg
mov
hlt
add
push
inc
addr16
add
jmp
cmps
cmp
sub
pop
shl
xor
and
repnz
mov
add
inc
or
iret
cmp
shr
mov
ja
test
dec
and
push
sbb
popa
arpl
and
push
push
aad
pop
push
jp
cdq
jno
sbb
in
(bad)
mov
and
push
sub
std
pop
jne
out
(bad)
sbb
pop
rcr
cmps
retf
pop
xchg
cmp
sbb
adc
push
jb
jns
sbb
cmps
sbb
imul
fcom
aad
aam
xor
call
lock
out
dec
push
daa
stos
aaa
std
test
hlt
sahf
jecxz
or
in
imul
and
je
adc
outs
bound
in
inc
shufps
sub
ret
mov
dec
mov
(bad)
jmp
out
arpl
sbb
bound
gs
daa
fdiv
inc
mov
push
ins
movs
jbe
jnp
shl
inc
adc
inc
push
and
out
add
jl
gs
ja
jne
cdq
xchg
push
dec
inc
xchg
push
push
mov
add
cli
adc
das
inc
stc
fst
popa
xor
repz
mov
xor
mov
loope
dec
add
in
inc
mov
call
aad
cmp
lock
inc
bnd
adc
jnp
push
movs
neg
cld
jle
mov
sti
or
imul
add
std
mov
cdq
dec
push
add
dec
jl
cmp
xchg
mov
fcmovnu
imul
fwait
cmps
jb
cmp
xlat
fstp
jnp
in
dec
add
or
movs
mov
fcmovu
data16
mov
int3
pop
je
dec
inc
repnz
lods
popa
retf
add
pop
(bad)
sbb
popa
add
sar
push
int
xchg
adc
fsub
daa
call
stos
aam
xor
or
adc
clc
or
in
lods
and
mov
test
stos
mov
aas
fld
in
hlt
and
adc
xchg
xor
cmp
mov
dec
cs
fsubr
fwait
cmc
or
xchg
dec
sub
cmps
cmp
adc
sbb
jo
pop
jp
ss
xor
pop
dec
mov
xchg
addr16
or
int3
xchg
xor
pop
retf
in
mov
nop
bound
hlt
sbb
aam
mov
retf
out
xchg
arpl
rol
add
retf
cmp
add
xor
lods
pushf
retf
cli
pop
loope
mov
imul
test
mov
jb
popf
mov
idiv
adc
jmp
loope
psubusb
sub
add
cld
push
xor
(bad)
or
sbb
push
and
pusha
les
sub
cmp
pop
xor
cmp
mov
mov
mov
mov
lahf
sub
xchg
or
sbb
ins
sti
dec
movs
dec
sahf
cmp
mov
addr16
fist
or
dec
add
loope
les
jbe
test
in
ror
or
cmp
mov
sub
ror
push
in
mov
or
mov
jmp
movs
arpl
repz
or
scas
shl
loop
jmp
mov
mov
inc
sub
jae
icebp
cmc
xor
(bad)
and
int
fist
jmp
mov
sbb
jnp
cmp
adc
(bad)
pop
div
mov
mov
cmp
adc
imul
retf
retf
out
mov
sub
adc
cli
or
pop
mov
and
aaa
mov
in
jo
shl
rol
sub
mov
dec
cmc
test
mov
jno
or
outs
std
pop
fs
jns
pop
hlt
cmp
jnp
cld
or
out
jmp
loope
cmps
lds
pushf
js
sub
loope
dec
xchg
pop
sbb
and
mov
pop
sub
stos
dec
div
or
push
sbb
stos
mov
out
rcr
shr
pop
add
sub
xchg
out
hlt
sub
sbb
shl
rcr
(bad)
cmp
shr
inc
ret
jns
xor
lods
fcomp
mov
outs
loop
sub
call
xchg
mov
adc
xchg
xchg
lea
mov
nop
sbb
push
stos
pop
aam
push
call
lods
adc
jb
rol
ret
cmp
mov
jbe
cs
pop
jg
fs
sahf
mov
sbb
jne
sub
xchg
ja
xchg
(bad)
mov
dec
dec
loopne
mov
cmp
in
mov
cmp
neg
inc
outs
ins
xchg
and
sub
xchg
jb
jno
ins
pop
mov
int
lds
jle
mov
push
xor
retf
jne
push
pop
cli
jle
fmul
add
xchg
aaa
shl
stos
popa
call
popa
xchg
ds
ret
out
add
cmp
jae
imul
jmp
leave
or
cmp
jmp
stos
fisub
popa
or
rcl
mov
jg
sub
(bad)
cmp
pop
lods
and
push
(bad)
leave
dec
push
xchg
test
stos
inc
mov
add
int
ds
pop
test
int3
(bad)
ja
xchg
sub
(bad)
sbb
adc
stc
pop
xor
test
jae
hlt
push
mov
retf
rcl
js
mov
std
fnstenv
clc
and
imul
jne
add
out
push
cmp
xchg
sub
ja
adc
mov
das
loop
jmp
mov
pushf
mov
(bad)
cdq
pop
stc
test
inc
and
lods
xor
nop
jnp
xor
jp
push
pop
nop
or
sub
mov
xchg
icebp
hlt
sbb
je
cmp
xchg
xchg
push
imul
cwde
pop
ret
mov
sti
xchg
cdq
pop
mov
frndint
xchg
clc
shl
call
call
ficom
movs
sar
mov
stos
mov
pushf
sbb
jbe
pop
push
sub
pushf
and
ror
or
xchg
xchg
mov
fdiv
int3
fwait
(bad)
(bad)
sti
xchg
shl
shl
dec
jmp
popf
ret
leave
lods
gs
les
sti
xor
xor
rcl
jp
cmps
imul
jae
mov
popf
fisubr
stos
iret
inc
jns
add
mov
mov
xor
repnz
xor
adc
test
test
bound
push
push
(bad)
sub
(bad)
dec
pop
sub
pop
popa
mov
mov
mov
leave
adc
inc
and
xchg
sbb
gs
mov
pop
fdiv
mov
xor
gs
xlat
sar
loopne
pop
gs
jg
ins
adc
jle
aas
sbb
ffree
mov
lea
ret
ror
in
mov
cmp
jp
dec
cmp
shl
dec
into
sbb
inc
push
popf
fcomp
lods
push
bound
pop
pop
repz
xor
fnsave
xor
xor
les
sub
or
ror
mov
inc
add
mov
out
sbb
sbb
and
sub
jmp
xor
pop
mov
addr16
push
jne
(bad)
jmp
repz
push
jne
pushf
mov
stc
outs
cli
imul
dec
shl
(bad)
pushf
mov
out
stc
mov
xchg
jae
cs
jge
inc
loopne
add
sahf
enter
cmc
cmc
sub
vmwrite
outs
adc
fldenv
dec
shr
or
xchg
scas
inc
xor
jne
xchg
xchg
mov
fist
xor
sub
mov
mov
jb
push
mov
out
int
inc
dec
xchg
sub
cmp
mov
in
dec
dec
hlt
cld
inc
popa
sbb
jg
repnz
pop
pop
pushf
lods
icebp
test
test
mov
es
je
test
fwait
inc
or
add
sahf
dec
and
out
add
jne
mov
sub
cdq
in
dec
shl
xor
inc
arpl
push
test
movs
mov
jb
push
add
shl
pop
mov
push
or
jp
push
push
hlt
sbb
jno
push
sub
mov
mov
ja
inc
xlat
push
xchg
sub
xchg
popf
xor
imul
jge
cmp
or
push
stos
push
mov
sub
fdiv
jb
push
dec
rcl
dec
and
movs
xchg
dec
movs
xchg
std
sahf
inc
sbb
leave
inc
in
dec
jge
int
aad
cmps
mov
jne
push
jmp
jecxz
mov
jbe
stos
push
dec
adc
call
xchg
dec
cmps
aam
int3
sub
jae
faddp
add
div
adc
pushf
or
cmps
jb
out
movs
jge
jecxz
popa
pushf
sbb
xchg
scas
mov
inc
std
leave
xchg
xchg
nop
xlat
dec
mov
add
adc
ins
loop
je
pusha
repnz
add
or
pop
fadd
daa
push
imul
call
mov
mov
retf
fnstcw
mov
fcom
rcl
add
leave
jns
loope
imul
add
push
pop
in
or
adc
retf
jle
pop
movs
les
xor
mov
jecxz
aad
inc
and
pop
out
adc
xor
daa
test
xchg
jb
retf
jle
cwde
lods
or
sahf
cmp
ret
push
out
inc
mov
xor
adc
add
inc
xor
xchg
sbb
sbb
pop
dec
icebp
jno
mov
cmp
test
push
fwait
xchg
mov
call
repnz
jge
das
push
sub
xor
lock
inc
ds
enter
mul
mov
cmp
cmp
add
dec
push
stos
dec
(bad)
aas
ins
sub
xchg
jbe
in
mov
xchg
pop
(bad)
adc
mov
xchg
movs
xor
test
mov
adc
mov
cli
pop
ret
push
shr
and
mov
and
lods
pop
and
sbb
js
pop
push
pop
adc
in
and
jle
cmp
daa
sbb
ja
mov
or
mov
xor
inc
cs
or
ror
pusha
jl
std
jae
add
fstp
(bad)
or
sti
mov
cmp
arpl
iret
dec
dec
neg
call
in
icebp
imul
and
mov
enter
aas
aaa
lods
es
mov
(bad)
std
cmp
out
or
cmp
out
cmp
fptan
xchg
or
mov
push
jae
or
jg
std
mov
xor
push
popf
ffreep
dec
and
add
cli
xchg
jecxz
push
jns
cld
ins
sub
adc
sbb
sub
sub
dec
pop
daa
sbb
ret
xchg
not
clc
adc
mov
and
ror
mov
fldenv
iret
dec
pop
call
and
or
add
pop
js
jb
ins
lock
add
adc
lds
cmp
scas
nop
hlt
inc
cmp
inc
fbld
aas
pop
cmp
cmp
cmp
data16
pusha
dec
scas
jge
cwde
sub
mov
fidivr
jmp
outs
xor
addr16
push
cld
xlat
outs
sub
daa
push
cmps
test
in
es
fs
and
pop
mov
cmp
out
sbb
add
lahf
popa
hlt
cwde
cdq
mov
out
push
xor
lods
adc
dec
hlt
js
popf
adc
jo
sbb
xor
mov
xchg
in
hlt
xor
mov
outs
sbb
inc
(bad)
xor
sub
jb
not
and
xchg
xchg
mov
add
jo
nop
ds
sub
imul
xor
adc
hlt
mov
shl
and
loopne
pop
cmp
cmovs
movs
cmps
fwait
pop
push
lods
pop
gs
sub
or
call
aam
aad
mov
push
ins
ins
dec
pusha
out
sbb
mul
outs
and
cmp
add
xchg
jb
enter
aaa
mov
test
cmp
ins
or
retf
sbb
loop
(bad)
or
shr
daa
mov
cmp
cmps
mov
or
dec
inc
scas
dec
mov
jno
mov
cwde
out
iret
dec
add
je
add
loop
pop
mov
icebp
das
add
das
(bad)
push
and
dec
cdq
std
mov
inc
pop
jo
(bad)
cmp
js
ret
jmp
pop
fdivr
xor
mov
and
daa
nop
jg
outs
ja
push
mov
sub
je
loop
lock
test
mov
mov
scas
clc
fsubr
mov
mov
sub
xchg
pop
or
test
push
xor
mov
fcomp
sbb
jp
enter
mov
aaa
in
inc
imul
jmp
mov
mov
movs
es
out
mov
sti
jmp
inc
sub
stc
repnz
jne
add
test
cmp
xchg
call
or
not
sbb
rcl
pop
inc
dec
(bad)
jg
push
pusha
fstp
cmp
mov
push
call
lds
push
mov
mov
push
and
pop
xchg
and
xor
sbb
cwde
test
sub
retf
push
pushf
mov
cmps
xchg
shld
push
sbb
div
sub
xchg
xchg
jmp
or
xor
cmps
xlat
sar
fchs
and
dec
lahf
add
cmp
push
xchg
imul
add
pop
mov
sahf
push
jbe
jb
test
inc
pusha
add
dec
(bad)
or
shrd
sbb
test
loope
enter
sbb
xor
jp
mov
pop
mov
mov
ffreep
arpl
jae
adc
mov
fsubr
test
xor
paddb
jbe
jns
jg
xchg
or
rcl
inc
std
daa
dec
pop
xlat
adc
fdivrp
lock
fstp
stos
loop
cmp
add
rol
pop
ret
push
mov
sbb
(bad)
sub
mov
cmp
inc
pop
rol
jp
jo
sti
xchg
add
leave
les
ins
jmp
or
ss
xchg
mov
cmp
push
idiv
inc
pushf
adc
pop
jmp
lds
lods
retf
adc
lea
fldenv
bound
adc
push
loop
or
ins
mov
or
mov
outs
xchg
add
jg
les
fnstenv
jmp
fsubp
sar
jb
rol
jle
inc
test
lds
and
dec
xchg
jmp
gs
xor
fldl2e
test
lea
sub
pop
loop
push
(bad)
jp
dec
mov
movs
ds
popa
push
adc
leave
int3
sti
push
(bad)
push
push
ror
ja
dec
cmps
call
(bad)
repz
lahf
pushf
pop
xchg
jl
pop
ja
adc
fisubr
test
lock
shr
aam
jbe
and
cmp
dec
test
jae
push
hlt
les
jne
pop
imul
jg
mov
test
movs
mov
inc
aas
sar
xor
icebp
in
rcl
dec
mov
push
sbb
js
xor
test
xlat
scas
mov
icebp
or
lahf
cdq
sbb
sbb
rcr
xchg
pop
lods
mov
aam
loopne
mov
xor
jo
dec
imul
in
dec
or
call
push
repz
in
outs
mov
pop
pop
add
movs
mov
cwde
dec
mov
mov
dec
cld
pop
lods
fwait
shl
sbb
aaa
push
pop
cmp
repnz
int
jno
push
pop
fldcw
xchg
ins
xchg
jmp
mov
dec
outs
fs
iret
aad
mov
imul
les
leave
ins
adc
and
mov
cmc
push
gs
push
add
add
gs
xchg
xchg
adc
push
jnp
jg
sub
sbb
lock
lods
mov
push
lahf
bound
sbb
popf
add
mov
ss
ja
mov
cmp
(bad)
(bad)
inc
or
pop
(bad)
ffree
mov
popf
xchg
sub
adc
mov
pop
int3
inc
fcom
dec
(bad)
pop
adc
shl
std
and
in
(bad)
mov
push
mov
jecxz
dec
inc
inc
sub
sub
adc
jl
rol
fst
push
popa
dec
imul
dec
loopne
shl
test
pop
aam
dec
js
(bad)
xchg
dec
jno
inc
ins
mov
call
mov
sar
cmp
mov
push
xlat
cmc
int
xchg
jmp
sahf
test
in
fnstenv
fisub
in
not
or
(bad)
into
leave
adc
lods
fs
fidivr
push
cmp
imul
inc
sub
(bad)
retf
call
pop
xchg
xchg
xor
dec
cmp
jbe
(bad)
jmp
lock
outs
jbe
retf
shr
push
out
xchg
in
mov
fxam
ret
mov
mov
cmp
mov
push
mov
mov
data16
inc
add
aaa
pop
lds
cld
sbb
int
dec
add
fidivr
jb
fdivr
lds
outs
push
dec
mov
or
les
cmps
cmc
popa
fs
popa
jno
lahf
adc
bound
ret
or
retf
stos
push
popa
aam
jmp
adc
xchg
fdivr
imul
(bad)
mov
sub
div
sbb
sbb
jbe
sti
(bad)
fs
aaa
dec
repz
mov
pop
xor
jb
push
ins
jb
push
push
imul
mov
ror
cmp
mov
mov
(bad)
or
and
sbb
inc
outs
std
adc
cmp
pop
cli
sahf
fiadd
push
inc
mov
sub
ja
xor
into
stc
mov
mov
mul
add
jb
call
fscale
inc
clc
dec
movs
cmp
cmp
dec
jne
jmp
push
lods
mov
sub
test
js
ja
push
aam
push
je
dec
mov
jl
pop
shl
(bad)
pop
into
dec
or
mov
adc
and
arpl
jmp
scas
jne
add
jge
leave
iret
sbb
cmp
add
or
sub
sub
sub
test
fst
(bad)
fisub
push
pop
push
jbe
pop
mov
aaa
cli
repz
push
cli
arpl
test
mov
lahf
pop
pop
sahf
call
mov
dec
and
sub
cs
rcr
xor
adc
ja
mov
sub
mov
sbb
push
dec
dec
push
cmp
cmp
add
sub
jno
or
int
xor
(bad)
ftst
clc
or
xor
fucomip
dec
jecxz
mov
mov
movs
retf
fiadd
aaa
cmp
mov
mov
sbb
in
fistp
mov
xchg
push
dec
leave
mov
jmp
mov
mov
sub
adc
xchg
ret
push
in
hlt
fiadd
cmc
sub
push
pushfw
cld
fst
cwde
pop
fist
sbb
mov
jle
push
add
push
(bad)
and
or
(bad)
pop
fild
sub
iret
mulps
push
jg
les
ja
loope
dec
fcomp
out
adc
call
xchg
out
or
out
jbe
stc
sbb
movs
cmps
cs
call
add
mov
xchg
divps
jl
add
add
dec
cwde
out
loop
(bad)
or
std
loope
ret
push
mov
fbld
(bad)
out
push
enter
test
outs
mov
and
mov
lods
add
call
add
or
adc
das
pushf
mov
mov
shl
jno
enter
stc
(bad)
popf
push
cdq
adc
push
pushf
add
jns
loop
(bad)
jns
ss
enter
addr16
push
push
cmp
arpl
into
push
(bad)
in
jp
jno
into
dec
(bad)
cmp
jno
repz
cmps
pusha
shr
shl
xchg
dec
gs
mov
adc
lock
pushf
add
push
ins
test
scas
mov
inc
mov
jmp
mov
sbb
or
xchg
xor
out
loopne
jmp
add
aas
outs
aaa
rcr
mov
or
adc
test
icebp
stos
int3
dec
xchg
out
sbb
and
mov
mov
sub
cld
and
or
loop
pop
loopne
jo
out
test
xchg
sbb
add
push
push
add
repz
aad
mov
pop
mov
and
push
int
fisubr
lods
pushf
xor
sahf
cs
dec
fdiv
out
je
dec
sbb
sbb
inc
pop
add
cld
icebp
das
adc
je
push
sti
add
push
fadd
mov
(bad)
fcmovnu
inc
mov
retf
(bad)
xlat
test
or
sbb
mov
cmps
pusha
test
jb
pusha
pushf
cwde
push
repz
and
in
loop
and
mov
push
push
test
shl
or
pop
icebp
gs
jecxz
rcr
cs
mov
call
push
pusha
sbb
lds
mov
jns
sbb
mov
daa
jp
pop
or
or
pop
jnp
xchg
mov
sar
adc
in
int3
xor
mov
in
test
sbb
popa
in
xor
jae
lds
sbb
push
jecxz
test
call
lods
or
jae
adc
mov
jecxz
pop
sub
dec
inc
aam
jb
in
call
adc
pop
fcmovb
fild
arpl
test
inc
mov
aam
dec
popa
in
jg
sub
hlt
push
repz
stos
cmps
inc
rcr
or
or
push
inc
popw
leave
mov
sbb
and
cli
pop
pop
icebp
mov
fisttp
inc
fnsave
jmp
sub
(bad)
test
jmp
das
(bad)
dec
clc
bnd
sub
stos
call
sbb
mov
mov
inc
dec
aam
cli
scas
pop
vpaddsb
dec
push
or
push
mov
gs
retf
push
pop
mov
arpl
in
mov
cs
push
pop
mov
out
jne
push
dec
cmp
fld
sub
pop
xchg
add
bound
sbb
dec
cmp
xchg
out
out
inc
ja
sbb
call
cs
jnp
fsub
rcl
lods
sbb
push
mov
or
inc
push
mov
rcl
(bad)
cmc
push
loopne
push
add
cld
inc
push
sub
int
cwde
sbb
jmp
mov
(bad)
bound
xchg
call
sahf
push
mov
xor
or
out
jmp
aas
pop
cs
fbld
cli
push
stc
gs
mov
jp
jp
jp
aad
arpl
cmp
(bad)
mov
push
scas
inc
cdq
nop
xor
mov
outs
and
mov
mov
jbe
cmp
jb
cmp
addr16
int
mov
cmp
mov
pop
in
add
cdq
push
dec
xor
mov
mov
pusha
aas
loopne
inc
rcr
clc
mov
pop
sbb
mov
dec
rol
or
ficom
dec
xor
xchg
lea
arpl
add
in
sbb
imul
out
dec
fdivr
arpl
(bad)
fmulp
and
mov
inc
sub
jb
pop
rcr
xchg
mov
out
cmp
sbb
test
(bad)
xchg
pop
das
imul
adc
dec
adc
xchg
arpl
cmp
push
fwait
fs
int
enter
xchg
sbb
mov
mov
addr16
in
loope
add
fidivr
stos
mov
popf
scas
mov
or
mov
xor
dec
jbe
pop
ficomp
push
es
leave
fwait
xor
sahf
ds
or
xchg
inc
int
mov
out
and
sbb
or
sbb
mov
not
jecxz
call
scas
xor
imul
(bad)
mov
and
ins
adc
loop
test
aad
mov
in
adc
cmp
pop
stos
pop
pop
call
cld
inc
fidivr
out
sub
inc
pop
rcr
test
stc
ins
loop
mov
sbb
add
retf
ja
xor
(bad)
mov
ret
(bad)
jnp
stos
in
cmp
int3
fdiv
bound
xchg
jne
jmp
sbb
scas
xchg
leave
mov
ret
out
lods
mov
mov
adc
sub
push
outs
(bad)
push
inc
lahf
lahf
cwde
xchg
test
and
(bad)
(bad)
jecxz
pop
xchg
enter
sti
inc
or
repz
add
pop
pusha
sub
jg
sbb
test
mov
rcr
mov
xchg
call
mov
cmp
add
mov
cmc
repnz
scas
or
sub
out
setg
loopne
and
sub
mov
inc
jp
(bad)
add
pop
mov
sahf
fist
ss
jnp
dec
jb
jmp
call
pushf
(bad)
(bad)
shr
daa
xor
mov
in
sbb
pop
mov
shl
(bad)
jle
sbb
inc
jns
sti
sub
icebp
std
sbb
push
popf
sti
test
cmps
test
xchg
adc
test
into
cmc
dec
xchg
xchg
imul
or
neg
and
cmc
mov
stc
push
(bad)
stc
enter
mov
jmp
or
pop
(bad)
imul
push
xor
xchg
push
mov
mov
or
fidiv
xchg
call
push
jp
aaa
outs
pop
jge
mov
imul
ret
sahf
jmp
inc
and
jae
cli
push
sti
int
or
aad
enter
pop
test
aas
jl
retf
push
pop
mov
imul
cli
daa
xor
and
rcl
dec
pop
add
ss
sub
shr
inc
jo
fs
jmp
bound
test
daa
fdivr
pop
and
xor
ret
repz
rol
pop
mov
out
cmp
xchg
jno
dec
sub
add
mov
(bad)
stc
push
(bad)
jb
(bad)
stos
test
or
addr16
call
lds
cmps
arpl
mov
dec
cs
mov
mov
lea
imul
fiadd
cdq
call
cmp
fs
inc
pop
mov
cmps
imul
outs
scas
mov
ins
adc
(bad)
call
arpl
mov
nop
call
or
call
jne
push
call
outs
movs
repz
lds
cmp
push
into
mov
mov
call
mov
loope
loop
jecxz
or
test
dec
xchg
jmp
mov
nop
call
mov
xlat
jnp
cmp
xchg
sub
enter
out
mov
leave
shl
jl
cli
adc
pop
xchg
xorps
and
push
aas
pop
mov
fst
fsubr
rol
shr
cmps
ins
frstor
addr16
jmp
(bad)
add
wbinvd
lock
dec
mov
mov
and
jmp
jo
mov
sub
push
pop
(bad)
(bad)
mov
stos
shl
jbe
mov
das
cli
pop
inc
and
jmp
pushf
nop
fwait
add
dec
jl
popa
out
sub
dec
call
rcl
sbb
or
push
mov
cmp
inc
loopne
repz
pushfw
adc
xchg
xor
into
lods
pop
dec
and
mov
jae
push
aad
mov
pop
inc
xor
ror
add
test
(bad)
ss
stc
jno
mov
out
out
inc
xchg
jbe
push
rol
test
push
xchg
add
jmp
loope
xchg
and
jno
(bad)
aas
sub
call
xchg
and
sahf
add
popa
push
xchg
push
push
push
mov
lods
or
xchg
xor
mov
cmc
(bad)
loopne
pop
dec
xchg
loop
dec
fcomp
xchg
fs
jo
pop
(bad)
in
ja
cmp
(bad)
repz
aaa
sub
enter
xchg
in
(bad)
out
loopne
dec
mov
ins
(bad)
jmp
jb
xor
sub
les
popa
adc
mov
mov
sub
inc
pop
and
cmps
fadd
cwde
mov
imul
dec
push
clc
dec
repnz
inc
mov
ror
add
movs
bound
mov
adc
inc
imul
sti
rsqrtps
fld
dec
pusha
push
jnp
jge
mov
inc
mov
outs
icebp
loope
out
bound
ins
pushf
(bad)
int3
loope
hlt
add
lods
or
fmul
retf
loop
test
push
test
pop
imul
mov
sahf
sub
or
ret
inc
xor
mov
sbb
shl
sar
stos
(bad)
in
push
mov
popf
or
adc
retf
or
mov
xchg
jo
adc
movs
mov
outs
test
mov
lods
push
add
(bad)
imul
outs
iret
enter
stc
fs
int
mov
jl
jns
imul
ins
mov
push
and
ja
or
pop
into
add
pop
rcl
(bad)
jecxz
outs
rol
xor
sbb
(bad)
and
shl
pop
lahf
out
mov
mov
ins
arpl
ss
and
push
(bad)
cmc
push
and
fild
xor
dec
pop
cdq
xor
pushf
js
aam
(bad)
cld
sub
nop
and
jmp
sahf
mov
xchg
fs
daa
sub
xchg
cmp
neg
out
mov
mov
fs
scas
cwde
fs
inc
cmps
scas
fucomi
add
iret
sahf
push
adc
inc
cdq
(bad)
cli
pop
movs
ja
(bad)
push
scas
loopne
nop
inc
mov
ins
dec
in
xor
add
jo
cs
shl
(bad)
pop
and
cmp
push
outs
dec
dec
sub
xchg
pusha
popa
inc
xor
in
outs
cdq
in
lea
(bad)
cmp
push
sbb
push
(bad)
jge
xor
cld
or
jnp
jno
(bad)
lock
fstp
sub
mov
dec
shl
ds
mov
mov
cmc
fwait
test
fs
nop
in
mov
cdq
xor
popa
aaa
dec
cmp
dec
sahf
xor
out
pop
push
jp
cmp
dec
loop
mov
cmp
mov
leave
xlat
jnp
xor
ret
xchg
adc
rcr
outs
adc
lea
call
sub
loop
jp
inc
inc
pop
add
inc
mov
and
mov
adc
xchg
out
and
sbb
movs
cdq
xchg
shl
cmp
xor
push
aam
shl
movs
mov
pop
cmc
iret
dec
jg
rcl
mov
aas
(bad)
stc
sbb
sub
mov
pop
loop
xor
dec
retf
in
and
lock
xchg
jle
outs
adc
aad
mov
sbb
or
jmp
rcl
inc
cmps
pop
xor
dec
cmps
xor
in
add
xor
cmp
xor
cmp
gs
repnz
test
mov
jne
xor
mov
ins
xor
es
inc
fidiv
idiv
pop
hlt
push
std
call
push
pop
or
or
fistp
mov
retf
or
repnz
mov
pushf
(bad)
jmp
xchg
in
in
mov
out
add
mov
jno
rcr
mov
outs
adc
ret
pushf
aam
imul
mov
nop
in
sub
cmps
das
mov
movs
mov
stos
xor
push
mov
pop
ret
inc
repz
push
jmp
push
push
pusha
scas
mov
call
dec
ins
neg
call
jge
arpl
daa
xchg
pushf
cwde
les
ds
pop
jg
ror
inc
shr
and
stos
loope
jno
test
icebp
lock
mov
ja
cmp
push
mov
jae
dec
pop
cmp
cmp
stos
(bad)
icebp
pop
or
push
pop
lds
outs
add
jmp
and
add
push
push
mov
add
dec
enter
out
aam
jae
or
or
es
mov
and
inc
dec
addr16
mov
mov
daa
mov
test
xchg
ins
data16
in
fld
mov
push
mov
call
mov
scas
sbb
fs
out
mov
mov
sub
fs
test
cmp
ret
and
and
daa
sbb
push
sub
jnp
push
sbb
sub
out
sbb
or
jb
test
push
sbb
out
pusha
rol
das
lods
jnp
pop
scas
jb
add
jbe
es
enter
jecxz
mov
inc
(bad)
mov
mov
cld
push
mov
mov
mov
cmc
or
fmul
sti
enter
xchg
call
imul
push
cli
imul
call
lds
pop
loop
fldcw
dec
inc
jle
(bad)
fidiv
loopne
leave
rcl
inc
lea
sub
jge
add
fiadd
sahf
cmc
mov
and
dec
repnz
and
inc
imul
fsubr
push
cli
out
xchg
sub
sahf
dec
enter
xchg
mov
popf
stos
ret
push
dec
jb
hlt
or
push
pop
ins
push
push
mov
jae
mov
mov
and
push
inc
dec
pusha
jnp
out
ret
ins
jb
(bad)
cmp
std
imul
mov
mov
and
rcr
cmp
adc
out
mov
sahf
in
fwait
ret
fisub
inc
sar
xor
retf
pop
xor
mov
popa
stos
int3
mov
push
test
adc
and
xchg
jg
xor
arpl
arpl
in
outs
adc
cmps
lea
retf
and
and
xchg
mov
aad
fisubr
add
sahf
loope
gs
mov
push
jecxz
popf
adc
ret
sub
les
dec
repz
jmp
je
pop
dec
iret
retf
fimul
test
jns
sbb
dec
shl
movs
shl
push
fbld
retf
call
fwait
pop
in
popf
inc
adc
rcl
jp
cli
push
popa
(bad)
jle
(bad)
xchg
or
sbb
add
or
push
mov
scas
(bad)
jl
call
adc
jb
call
add
and
test
int3
push
lock
push
dec
retf
and
cs
call
dec
sub
jecxz
das
sbb
jnp
mov
cdq
and
add
mov
outs
cmp
cmp
into
test
push
or
aam
xor
inc
repnz
push
add
aad
outs
mov
scas
push
sbb
mov
push
iret
ret
aas
xchg
cmp
xchg
cld
adc
ins
lods
or
cmp
mov
fbld
pop
popa
aaa
mov
ficomp
pusha
push
sub
mov
jp
call
add
es
mov
xchg
xchg
push
xor
iret
push
inc
push
pop
xchg
fs
dec
pop
xchg
pop
add
loope
inc
sub
xor
jb
fsubr
clc
in
mov
les
ja
frstor
adc
test
xor
mov
test
mov
mov
jmp
cmp
jo
aad
xchg
shl
mov
mov
outs
scas
mul
mov
jo
imul
inc
stos
js
add
daa
cmp
pop
dec
hlt
pop
pop
je
out
xchg
inc
cmp
pop
mov
stos
enter
sti
sbb
loopne
mov
adc
test
adc
xor
dec
mov
jno
fbstp
dec
and
push
lahf
in
aas
test
out
icebp
inc
push
sbb
icebp
cmps
jge
pop
movs
push
mov
pop
call
sbb
rol
aam
clc
retf
mov
xchg
xor
pop
sbb
cs
xchg
mov
sub
sub
adc
adc
sahf
xchg
inc
out
sbb
pop
arpl
mov
add
or
adc
mov
ret
xor
test
sbb
je
fnstsw
enter
push
lock
and
jp
gs
int
fnsave
xchg
pop
test
(bad)
and
pop
stos
sti
mov
scas
lahf
out
int
in
or
and
cmp
add
xchg
pusha
push
cmp
aad
push
inc
retf
loopne
shr
stc
in
xchg
mov
mov
inc
jb
sub
mov
(bad)
mov
(bad)
ins
rol
jbe
loop
jge
cdq
pop
dec
mov
or
aas
push
add
rol
jle
sub
jae
leave
in
loope
(bad)
fsubr
xchg
jno
cmp
jmp
mov
push
ins
out
aaa
inc
push
mov
int3
popf
adc
xchg
daa
gs
(bad)
(bad)
jbe
ja
pushf
ja
mov
xchg
pop
fisub
loop
xor
out
bound
pop
mov
cs
fbstp
ds
pop
sbb
push
xchg
in
icebp
es
ja
test
or
sbb
pop
test
neg
jmp
hlt
int
(bad)
pop
in
mov
add
jo
inc
dec
push
pop
stos
mov
mov
stc
cmps
inc
jno
push
stos
lods
mov
shl
push
inc
out
(bad)
(bad)
fidivr
ins
pop
fwait
sub
icebp
sub
mov
movs
add
sbb
imul
gs
and
dec
in
sbb
jae
push
into
cld
arpl
imul
sub
push
sbb
div
inc
loope
xor
cmp
ins
dec
int3
cs
push
dec
mov
adc
inc
test
xor
daa
in
or
stos
stos
sbb
inc
push
lea
sub
leave
pusha
jl
jo
movs
sbb
std
sbb
dec
test
jae
xor
rcl
cmc
jae
test
adc
xor
cmps
push
cmps
adc
mov
enter
cmps
or
cmp
pop
push
mov
mov
xor
xor
in
or
in
out
and
xchg
fucom
sbb
inc
xlat
int3
cs
lods
adc
out
pop
arpl
retf
and
ficomp
aas
dec
inc
cld
jo
movs
imul
pop
inc
fwait
bound
xor
or
cmp
mov
out
xor
mov
in
(bad)
jle
cmc
test
scas
mov
rcr
jecxz
pop
sub
add
hlt
mov
movs
lds
daa
push
in
(bad)
xor
popf
daa
mov
sbb
fidivr
ins
psubd
sub
jmp
out
sti
inc
pop
jbe
(bad)
das
repz
sti
pusha
shl
add
xchg
cmp
xor
pop
ins
imul
xor
push
xchg
lea
mov
shr
or
stc
test
sub
pop
pusha
or
lods
mov
fnstsw
and
xor
shl
push
adc
enter
sbb
loop
mov
sahf
sti
in
(bad)
call
xor
add
(bad)
popa
popf
pop
aas
and
mov
dec
mov
or
stc
js
mov
ror
movs
cmps
iret
jns
and
(bad)
cld
inc
inc
push
out
out
pop
stos
mov
mov
pop
(bad)
mov
pop
stos
nop
cmove
sbb
daa
mov
mov
mov
pop
int3
dec
pop
fstp
and
xchg
or
jmp
inc
dec
mov
aad
or
shr
mov
pop
jmp
jns
pop
and
les
jmp
jne
push
sbb
mov
mov
repnz
push
pushf
js
cmps
inc
loope
lds
xchg
in
out
(bad)
fstp
iret
push
jno
shl
mov
cmp
inc
out
and
jmp
jo
or
lock
rcl
sbb
int
sub
mov
pop
(bad)
adc
lock
inc
fs
dec
(bad)
addr16
inc
add
(bad)
sub
add
mov
adc
push
cdq
adc
sar
sbb
sbb
adc
nop
test
lods
je
sub
mov
jle
mov
sahf
or
and
add
pop
out
out
repz
imul
iret
fdiv
int3
sub
add
sbb
ret
(bad)
jmp
jmp
jmp
or
retf
mov
mov
mov
icebp
stos
pusha
mov
outs
rcr
push
xor
xchg
dec
(bad)
call
into
repnz
out
jo
add
shr
(bad)
scas
push
add
mov
out
pop
into
pop
sti
ror
data16
xchg
test
mov
mov
cmp
sahf
test
les
push
push
add
mov
push
mov
cmc
mov
test
xchg
adc
jns
or
cs
mov
shl
inc
and
mov
loop
add
pop
pop
(bad)
mov
js
leave
movs
outs
mov
sub
pop
arpl
xchg
push
pop
push
inc
aas
retf
test
xor
stos
sbb
daa
stc
push
stc
add
es
mov
mov
fadd
jns
xor
repnz
cmc
mov
or
sub
mov
test
jl
out
jg
arpl
mov
cmp
mov
jbe
mov
das
jecxz
mov
dec
sub
stos
lods
jl
enter
(bad)
retf
in
pop
pop
xlat
or
test
mov
mov
das
inc
inc
les
retf
enter
stos
and
icebp
sub
jo
adc
jge
cwde
mov
rol
pop
mov
addr16
daa
xchg
pop
xchg
mov
in
push
dec
mov
adc
pop
and
jb
fdivr
xor
dec
push
sbb
sub
ja
rcr
or
inc
fistp
or
inc
or
cld
jmp
fwait
push
mov
rcr
jo
inc
jp
lock
int3
xchg
loope
push
test
fsub
jg
ror
adc
imul
xchg
push
pop
adc
mov
mov
stc
jp
and
push
push
adc
pop
retf
(bad)
imul
and
mov
push
or
mov
adc
imul
leave
mov
mov
js
inc
jmp
add
pop
out
pop
xchg
dec
lock
icebp
jecxz
out
mov
adc
int
call
fs
cmp
jmp
dec
sub
add
pop
enter
xlat
mov
inc
or
jl
mov
xchg
add
out
retf
push
jb
mov
xchg
or
icebp
xchg
jge
fnsave
lahf
xor
leave
dec
dec
xchg
ja
sub
add
addr16
popf
and
retf
sahf
sbb
mov
arpl
push
data16
loop
movs
(bad)
or
bound
and
mov
mov
pushf
mov
push
fwait
adc
std
movs
cld
or
mov
dec
jge
popa
call
sbb
push
pushf
inc
add
fsubr
fsubp
ret
xchg
pop
mov
sbb
cmp
mov
mov
cmc
rcl
xor
jmp
aas
fisub
daa
mov
xchg
test
fstp
pop
sub
push
(bad)
retf
movs
outs
lock
mov
icebp
or
push
jg
push
inc
je
xchg
shr
dec
push
jge
cmp
mov
xchg
daa
outs
test
mov
fidiv
add
test
ret
in
jae
mov
call
inc
stc
in
sbb
arpl
(bad)
leave
inc
call
leave
clc
mov
loop
rcl
repnz
sbb
inc
mov
xlat
push
imul
neg
cmp
xor
aas
adc
test
fidivr
daa
test
in
cmp
hlt
pop
xor
fdivr
jnp
jge
imul
inc
inc
loopne
sub
lea
jbe
pop
loopne
imul
loopne
fcomp
jle
outs
mov
movs
sbb
leave
pop
and
pop
aaa
imul
repnz
mov
arpl
dec
xchg
mov
ror
xor
cdq
cmp
jp
mov
ror
scas
test
adc
pop
lods
jecxz
test
ret
dec
(bad)
test
adc
pop
out
gs
pop
stc
fmul
(bad)
ds
inc
loope
fsubr
or
fnstcw
aam
jge
(bad)
lahf
push
lods
and
and
xor
dec
and
repnz
fs
dec
sub
mov
out
inc
push
push
arpl
frstor
cwde
pop
leave
jl
xchg
push
(bad)
xor
stc
mov
inc
pop
push
cmp
mov
mov
xor
xor
in
sar
cmp
outs
out
movs
ins
call
jge
sbb
data16
cmp
hlt
jl
or
pop
mov
push
cdq
mov
xchg
mov
out
in
add
fs
mov
pop
sbb
cmp
sahf
and
ds
mov
outs
pop
int
in
mov
jecxz
and
jmp
dec
test
lds
pop
add
inc
and
and
bound
inc
mov
adc
sub
inc
inc
clc
imul
jmp
mov
int3
or
add
mov
rcl
repnz
(bad)
jb
in
outs
pop
(bad)
rcl
push
test
cmps
dec
push
mov
pusha
jnp
mov
inc
ins
inc
push
retf
jne
pop
fist
pop
jecxz
mov
and
sub
dec
mov
retf
aaa
enter
add
jecxz
and
in
inc
pop
and
shl
jbe
mov
pop
jmp
daa
(bad)
(bad)
sar
jnp
jno
or
cdq
xor
mov
fadd
mov
cmc
mov
jo
push
shl
loope
clc
loopne
ja
aas
cmp
aam
dec
add
jle
pop
loop
fwait
clc
sub
bound
int
popf
inc
push
cmps
dec
push
jmp
xchg
sbb
xchg
jge
pop
adc
iret
mov
ss
mov
sub
in
and
adc
shl
sub
fs
sub
retf
imul
xchg
pop
movs
lods
xchg
sub
mov
push
jnp
jl
mov
pop
fild
dec
sar
dec
jge
pushf
mov
aad
scas
mov
xor
or
retf
iret
fld
out
inc
and
enter
push
hlt
add
aas
ds
loop
repz
aaa
and
lea
cmp
inc
jge
jge
(bad)
sbb
stos
pushf
daa
and
test
sub
popf
jne
dec
sbb
pop
scas
and
xlat
out
je
scas
inc
mov
add
mov
stos
sub
mov
ins
add
scas
push
ret
repnz
push
xchg
movlps
cdq
xchg
in
push
nop
and
test
mov
test
ins
lock
pop
sub
ret
jecxz
ror
retf
pop
cmp
stc
pop
pop
cmc
xlat
mov
add
fs
(bad)
add
push
test
push
dec
aas
mov
(bad)
repnz
and
loope
cmp
test
and
mov
orps
jmp
cmp
adc
mov
aad
cmp
fnstcw
sub
aad
mov
cmp
dec
cwde
inc
mov
test
mov
call
out
and
xor
mov
cli
lods
sti
loope
dec
ins
xchg
or
hlt
push
xchg
stc
mov
mov
mov
ror
xor
xchg
arpl
adc
xor
or
stos
push
(bad)
jmp
sub
ficom
jbe
cmp
mov
adc
and
and
fs
inc
push
(bad)
and
cmp
cdq
xchg
jl
pop
test
aad
daa
push
push
fcmovb
sub
add
mov
daa
pop
sub
adc
jb
dec
and
aas
xchg
and
imul
adc
mov
enter
ins
mov
and
cmps
in
mov
push
loop
iret
mov
mov
push
pop
pop
aas
and
jne
fnstenv
pop
mov
xlat
adc
jmp
call
push
mov
dec
fild
xlat
sub
loop
imul
movs
mov
and
ins
iret
push
sbb
pop
or
mov
(bad)
pushf
dec
pusha
rcr
std
adc
scas
call
cmp
jno
inc
inc
cmps
pop
call
sub
sbb
push
dec
inc
mov
call
aad
xchg
and
scas
(bad)
lods
fstp
mov
test
xor
iret
jne
jb
(bad)
jne
sbb
inc
or
push
xchg
aaa
out
xchg
repz
int
out
pop
push
sbb
std
jecxz
gs
cmps
or
out
ja
and
shl
cmps
mov
cwde
mov
cld
pop
ja
xor
mov
je
scas
mov
mov
dec
(bad)
out
inc
jp
inc
pop
popf
outs
stos
(bad)
rcl
sbb
push
ins
push
outs
sbb
fstp
mov
test
call
xchg
stos
ja
fild
mov
shr
std
leave
ret
js
dec
stos
jmp
das
and
xor
jbe
cmps
xchg
enter
mov
xchg
addr16
pop
xchg
xchg
lahf
mov
push
xchg
adc
sub
call
push
js
jns
mov
xchg
jo
push
jg
mov
mov
lods
pop
in
cmc
sub
add
repnz
jns
mov
dec
sbb
stos
mov
int3
add
xor
pop
repz
mov
daa
pop
mov
push
add
and
enter
push
nop
adc
cwde
xor
outs
sub
push
out
inc
ins
scas
add
xchg
dec
imul
dec
lock
call
mov
jns
add
mov
add
adc
or
or
ss
push
adc
call
xchg
mov
cdq
dec
cmp
js
adc
fbstp
pop
or
jg
cmp
(bad)
gs
jmp
in
out
sbb
sbb
(bad)
repnz
inc
je
sub
test
clc
mov
daa
mov
mov
inc
in
push
and
sbb
cmc
inc
xchg
jmp
inc
sub
(bad)
lea
and
jmp
or
inc
dec
cmp
in
test
xor
pop
xchg
add
test
ret
outs
cli
vphaddubq
rep
(bad)
adc
hlt
adc
mov
mov
or
dec
pop
lahf
pop
hlt
mov
sub
movs
loope
cmps
cmps
and
push
or
addr16
mov
jb
or
and
sbb
into
add
add
jo
popa
int
cmp
cmp
popa
jne
ss
jmp
jge
mov
aad
stos
cdq
lahf
fs
xchg
call
lahf
xchg
popf
lods
sbb
int
jb
push
int3
sahf
add
jecxz
xchg
push
xchg
xor
mov
mov
std
xchg
fisub
pop
scas
mov
in
cwde
mov
int
icebp
daa
aad
cld
cmp
ffreep
enter
or
pusha
outs
and
cmp
push
cmc
cmp
and
(bad)
and
mov
jg
dec
imul
pop
bound
adc
jle
fcomp
mov
mov
std
jmp
adc
dec
iret
sub
stos
or
popa
jmp
pop
pop
aad
sub
mov
or
out
adc
cld
push
push
in
fdiv
push
and
rcr
cmp
call
sbb
cmc
ret
cmp
cmp
js
jo
pushf
adc
or
lods
sbb
xchg
shl
ins
es
inc
fdiv
mov
add
mov
xchg
popf
adc
cdq
fs
xor
mov
shl
out
lds
repnz
aaa
xchg
popf
cld
jns
add
movs
sub
sbb
add
imul
(bad)
cmc
push
adc
mov
add
out
(bad)
pop
jmp
xchg
aaa
cmps
test
pop
xlat
cs
aas
lods
push
xchg
xchg
inc
or
iret
cli
test
pushf
dec
xchg
or
jge
mov
mov
cvtps2pd
sbb
aaa
mov
or
push
xchg
aam
sbb
push
int
mov
cmp
sbb
ror
sub
sbb
adc
data16
lock
cmp
aam
adc
aam
xchg
and
out
jge
fdivr
imul
rcr
fwait
dec
and
bound
add
push
(bad)
xchg
call
lock
mov
mov
xor
mov
sub
repz
adc
xor
mov
push
test
sub
mov
sbb
loop
jno
rcl
popa
xchg
push
xor
jae
sbb
sahf
(bad)
mov
popf
cmc
inc
inc
mov
push
(bad)
movs
add
mov
inc
mov
out
ret
jmp
shr
mov
jge
xlat
fidivr
pop
call
adc
in
lahf
add
cmp
dec
xchg
in
and
test
jbe
je
adc
adc
adc
or
sub
ficomp
mov
push
sub
fstp
and
pop
xchg
mov
mov
inc
idiv
push
clc
imul
fdiv
mov
mov
mov
dec
ror
into
stc
mov
retf
mov
adc
sub
imul
jmp
push
jmp
(bad)
mov
mov
call
lods
cmp
sub
call
cmp
pop
inc
mov
(bad)
mov
xor
pop
mov
scas
or
fidivr
cmps
ds
out
adc
mov
scas
or
repz
pop
stc
loope
imul
jecxz
xchg
push
cmp
movs
idiv
stc
inc
pop
cs
fsub
and
jle
dec
sbb
sub
js
scas
shl
into
inc
lods
repnz
icebp
cmps
inc
pop
int
shr
mov
shl
arpl
lahf
inc
clc
add
ror
push
cli
not
(bad)
push
stc
clc
in
push
mov
mov
movs
ins
fwait
icebp
gs
jmp
cmp
fist
jns
mov
adc
clc
xchg
push
mov
add
loop
aas
jmp
in
sbb
lods
xchg
mov
xor
cli
dec
add
(bad)
adc
pop
xor
pop
xchg
xor
mov
shrd
fadd
ja
xchg
xchg
mov
jmp
jb
outs
pop
mov
mov
lea
cmps
dec
test
retf
cmp
sub
ins
xor
mov
push
mov
xchg
pop
std
sub
add
stc
pop
(bad)
mov
(bad)
xchg
jecxz
jb
aam
out
test
inc
xchg
stos
push
dec
mov
dec
pop
jns
pop
push
mov
or
adc
imul
inc
adc
mov
push
sbb
sti
mov
aad
and
mov
aad
pop
or
xor
and
(bad)
xlat
jb
mov
jns
dec
mov
jp
and
into
pop
adc
imul
xor
jmp
push
mov
ret
sub
loopne
repz
cmps
out
ds
into
lds
shl
(bad)
mov
xchg
les
out
cmps
stc
mov
pop
cmps
jl
aam
add
repnz
(bad)
pop
xchg
ffree
aas
ja
mov
add
loop
popa
scas
(bad)
dec
sahf
push
mov
xor
ffreep
push
sbb
call
scas
shl
pop
pushf
loop
movs
pop
mov
fdivr
(bad)
jecxz
inc
sub
rcl
repnz
cs
mov
and
cmp
cmp
sbb
icebp
pop
into
sahf
cmp
dec
and
mov
lds
out
loop
das
sub
scas
push
mov
test
test
lods
frstor
out
scas
or
xor
call
loopne
shl
cmc
dec
adc
test
fcomi
adc
mov
pusha
or
lahf
out
cmp
scas
pop
ja
dec
jl
sub
and
ficom
mov
or
ficomp
pop
loop
push
xchg
and
cmp
jg
sbb
xor
xchg
out
inc
xchg
cmp
jg
push
iret
ror
or
into
mov
pop
(bad)
xor
(bad)
dec
cmps
in
xchg
mov
cmc
fmul
mov
lds
cmp
adc
dec
repz
pop
xor
add
cmp
jno
pop
in
inc
inc
mov
xor
fild
es
jnp
pushf
mov
or
pop
mov
out
sub
dec
pusha
adc
fs
mov
and
loop
add
cli
jae
js
jo
loop
das
enter
movs
sbb
loope
movs
imul
fcom
push
cmp
retf
(bad)
std
sbb
inc
sub
test
scas
cmp
cs
inc
and
sti
and
cmp
and
cmp
hlt
(bad)
stc
mov
std
nop
scas
mov
outs
jae
inc
cmp
cmp
xor
iret
cmc
aam
xchg
pusha
xchg
out
test
stos
mov
jnp
sub
add
addr16
adc
shr
add
shl
pop
fwait
sub
repnz
rcl
adc
idiv
jl
mov
fs
cmp
mov
in
cmp
retf
out
stos
jnp
xor
adc
scas
test
mov
push
dec
scas
mov
jb
gs
imul
ret
gs
pop
fdiv
sbb
(bad)
jne
push
cwde
sbb
jmp
mov
aam
sti
mov
xchg
leave
call
(bad)
mov
and
xchg
inc
in
cmps
das
das
add
inc
in
lock
leave
cmp
addr16
or
mov
(bad)
mov
movs
test
mov
xlat
sbb
clc
sub
push
cmp
loop
shr
call
pop
daa
stc
sahf
in
js
mov
fisttp
cmc
mov
mov
popf
inc
sbb
pop
shl
mov
out
mov
push
mov
adc
mov
loope
(bad)
fwait
mov
clc
repz
cmp
xor
cli
mov
or
cs
bound
clc
je
push
aam
adc
pop
or
dec
imul
pop
lods
add
pop
ss
adc
pop
fcomp
std
or
imul
lea
adc
fucomp
cdq
push
(bad)
mov
fwait
lahf
repnz
mov
test
loope
movs
jle
les
pop
sbb
or
popa
ins
sbb
xchg
aad
stos
int3
shr
frstor
jecxz
mov
call
sub
sub
pop
cs
shrd
ja
jmp
in
adc
bound
jbe
pop
xchg
ins
jae
popa
nop
push
(bad)
pop
inc
jecxz
add
sbb
nop
mov
push
enter
cwde
data16
pop
add
dec
fsubr
and
in
lods
cmp
inc
and
and
fbld
pushf
clc
inc
add
push
mov
mov
jmp
or
add
push
dec
dec
dec
pop
adc
mov
in
or
idiv
xchg
cmp
lds
push
fisub
jnp
mov
xchg
call
xchg
retf
pop
fidiv
cmp
mov
jo
mov
clc
hlt
rcl
cmp
fst
fsub
add
shl
sub
pop
pop
mov
es
mov
psubusb
dec
xchg
ja
in
rol
aad
pop
lods
int3
cmp
repnz
sar
in
pop
loop
icebp
lea
js
test
movs
sbb
mov
adc
es
cmc
jne
mov
sbb
dec
mov
mov
adc
stc
frstor
fucomp
cli
fcom
inc
or
into
loope
fwait
xchg
sbb
xor
add
icebp
jb
retf
push
loop
(bad)
jg
adc
xor
int
mov
xchg
mov
pop
sbb
pop
jb
dec
cmp
push
sub
arpl
mov
fxch
jbe
aam
and
cli
out
xor
std
wrmsr
mov
stos
push
(bad)
push
ds
sub
je
nop
dec
int3
outs
gs
xor
fisub
loopne
shl
jecxz
or
clc
mov
pop
sub
pop
stc
out
and
inc
fadd
pop
(bad)
jb
add
mov
cmp
psubb
or
mov
cs
mov
out
(bad)
mov
rcl
repz
sbb
scas
xor
test
lods
mov
imul
enter
xchg
pop
bound
in
ja
rcl
stc
shr
leave
in
pop
sbb
sbb
jp
add
ja
jl
jge
int
xchg
inc
arpl
sub
sbb
pop
adc
cld
jb
inc
mov
sub
mov
loope
stc
bound
mov
clc
ins
adc
js
fdivrp
or
push
ror
adc
mov
fucom
nop
enter
jl
sbb
cmp
js
fcomp
cmps
mov
push
pusha
dec
aam
imul
rcl
iret
ja
dec
mov
push
sub
das
les
ss
(bad)
(bad)
push
cs
add
cmp
dec
jne
sbb
inc
hlt
sbb
repz
add
push
mov
dec
cdq
sar
jmp
loop
outs
pop
retf
push
mov
inc
mov
mov
rcl
or
lock
mov
mov
sub
gs
sti
mov
mov
aas
or
pushf
xlat
stos
jb
sub
stc
(bad)
int3
ja
dec
push
xor
xor
rcr
jbe
loopne
xchg
mov
(bad)
ret
sub
mov
icebp
mov
xlat
pop
xor
jge
and
dec
sar
fadd
inc
sbb
xchg
inc
pop
inc
mov
jle
pop
div
push
enter
pop
call
movs
ins
inc
imul
(bad)
(bad)
mov
jnp
dec
add
rcr
fimul
cmps
lds
cmp
test
pop
cwde
pop
xor
aam
aad
cmp
pop
clc
aad
adc
ret
lea
cwde
xchg
jne
and
jmp
pop
sbb
out
cs
sbb
sldt
clc
xor
es
sahf
pushf
bound
dec
movs
sub
jg
cmp
repz
sbb
ds
inc
jecxz
orps
mov
js
or
jge
ja
hlt
call
jmp
scas
cmp
scas
xor
js
xchg
hlt
mov
fidivr
cwde
and
pop
retf
retf
xor
or
mov
xor
sub
fs
xchg
imul
aas
mov
nop
pop
cmp
add
jge
sbb
xor
arpl
es
and
cmps
test
test
inc
mov
cmps
jmp
sub
test
fild
or
neg
mov
mov
and
xor
(bad)
aas
jmp
add
lods
xchg
add
sbb
sub
outs
rcr
xchg
xchg
ja
inc
test
push
mov
adc
xor
icebp
scas
push
add
mov
jns
dec
stos
push
stos
jecxz
push
adc
nop
neg
leave
add
push
mov
dec
(bad)
ss
rcr
dec
dec
mov
sub
xor
ss
push
sub
xor
fistp
repnz
sub
mov
(bad)
and
and
adc
push
pop
in
mov
sbb
mov
loopne
dec
add
xchg
scas
sub
push
xchg
dec
jp
jl
cmps
mov
lods
sar
mov
fmul
ins
xor
sti
lahf
sub
cwde
push
out
mov
push
ret
leave
push
(bad)
push
and
xchg
inc
xlat
setne
ficomp
push
push
mov
add
jge
aad
mov
add
cli
jg
mov
rol
mov
rol
push
jnp
adc
xor
dec
les
sbb
jle
add
stos
loope
inc
rcr
inc
mov
adc
imul
add
mov
xor
(bad)
cdq
cmps
les
add
xor
push
shl
daa
push
retf
loopne
lods
sti
dec
pmulhuw
cld
mov
cmp
cmp
pop
or
rol
inc
push
ds
rol
mov
shl
and
nop
cs
add
push
jno
xchg
mov
sbb
add
pop
mov
enter
xchg
ret
outs
sub
sbb
cmps
ret
adc
mov
clc
adc
inc
daa
jmp
sbb
repz
shl
xchg
dec
loopne
pop
dec
test
mov
mov
xchg
pop
xchg
ffreep
mov
ss
fiadd
push
bound
inc
dec
cmps
jmp
jne
jecxz
lea
sbb
in
mov
mov
cld
lods
jae
or
(bad)
out
clc
imul
push
test
mov
in
in
inc
xchg
and
cmp
sbb
push
mov
ja
mov
retf
scas
mov
loopne
cdq
imul
jae
rol
not
iret
jno
push
lds
js
or
push
push
add
cli
fisttp
and
into
jbe
ret
pop
int
mov
mov
xor
ds
daa
sub
fcomi
mov
jo
scas
imul
into
repz
jmp
adc
std
mov
lock
or
in
mov
popf
sub
shl
pop
cmc
jbe
xor
sti
mov
push
hlt
inc
adc
cmc
js
jmp
je
loope
xor
pop
inc
scas
pop
and
xor
inc
pop
mov
mov
idiv
gs
(bad)
push
cmc
xchg
push
in
test
add
mov
mov
push
mov
mov
dec
and
sbb
jmp
in
jns
ins
sar
test
loope
pop
add
mov
and
mov
clc
adc
(bad)
imul
(bad)
js
xchg
inc
es
mov
sar
add
or
adc
adc
mov
mov
add
das
out
xchg
(bad)
cld
(bad)
test
stos
xor
dec
jae
sbb
xchg
pop
lods
jl
dec
mov
and
inc
ss
cmp
and
dec
daa
in
jnp
cmp
out
jl
icebp
sbb
(bad)
xchg
and
repz
(bad)
in
jns
mov
mov
jge
inc
imul
imul
add
push
mov
lahf
js
sbb
push
jmp
and
push
(bad)
sti
inc
add
inc
mov
test
test
jns
cld
xchg
les
dec
jnp
call
mov
add
scas
imul
inc
rcr
and
cld
xor
pop
leave
push
jmp
or
mov
sub
sbb
scas
and
sti
adc
aaa
inc
xor
and
xor
mov
xchg
cmp
push
out
push
jecxz
int3
js
stos
imul
sbb
shr
xchg
sub
fsub
ret
pop
ds
pusha
jg
aam
jmp
and
(bad)
ror
dec
push
mov
mov
pop
jbe
cmp
jno
and
mov
push
push
jge
dec
jnp
xchg
aam
adc
loope
mov
pop
ds
or
xchg
or
fld
sub
test
sbb
out
sbb
pop
push
sub
or
cmovns
inc
shl
fst
sbb
and
and
jle
test
jns
mov
or
push
push
cmps
add
shr
cmp
ss
push
cmp
leave
pop
fwait
in
ins
cmp
test
push
in
outs
jmp
ja
mov
jmp
call
fsub
jns
imul
out
xchg
cmp
fnstenv
js
push
mov
add
mov
mov
dec
arpl
add
movs
and
das
ret
adc
ins
sti
icebp
test
mov
jecxz
mov
out
inc
cmps
fwait
mov
out
mov
in
jge
jo
and
sahf
sbb
mov
xchg
rcl
sbb
dec
mov
ins
jmp
shl
inc
dec
cs
mov
in
pushf
icebp
loopne
sbb
push
dec
gs
add
mov
loope
fld
cmp
lods
mov
mov
rol
ins
call
sub
dec
test
fnsave
pop
pop
mov
aas
lods
test
inc
jne
loop
inc
sub
jno
xchg
in
in
dec
scas
push
fld
xor
ss
fimul
das
xor
and
es
movs
(bad)
add
pop
ins
push
loop
pop
mov
ds
xchg
fwait
jo
dec
mov
push
adc
das
and
or
out
stc
adc
into
fsubr
scas
es
sbb
popf
xchg
sub
jge
sti
out
sar
pop
ss
jne
dec
and
cmps
out
scas
add
pop
sub
mov
and
sub
aam
fimul
jno
add
dec
sub
pop
xchg
fdiv
or
cdq
inc
stos
mov
inc
ret
push
push
sar
inc
inc
xor
sub
pop
adc
and
mov
sbb
in
inc
sbb
sbb
adc
sub
cmp
(bad)
pop
mov
add
data16
lea
in
xor
sub
dec
mov
mov
xlat
sbb
cmps
pushf
mov
cmps
adc
retf
iret
cmp
std
data16
shl
dec
mov
int3
pop
adc
cmp
cmc
test
add
pop
mov
fadd
adc
sbb
pop
call
mov
mov
push
xchg
xchg
dec
sbb
(bad)
imul
ins
repz
sbb
sbb
pop
sar
jmp
mov
and
pop
sub
retf
inc
pop
dec
dec
pop
les
push
push
das
mov
ret
inc
pop
push
xor
mov
push
ds
mov
adc
or
dec
or
sbb
sbb
fs
pop
sub
mov
(bad)
dec
(bad)
fdiv
in
call
push
aad
jl
ds
cmp
dec
mov
cmp
xchg
dec
and
es
mov
pop
enter
inc
stos
push
xor
jno
stos
enter
out
adc
jno
test
stc
mov
cmc
int
stc
cmp
inc
mov
sub
pop
fimul
sub
int3
popf
xchg
addr16
inc
fxch
retf
mov
jbe
or
ds
cld
fcomip
sbb
push
int
push
shl
bound
rdtsc
adc
cmp
call
pop
lds
rol
data16
sbb
repz
pushf
inc
movs
nop
xor
ins
ins
outs
int
sub
adc
retf
pusha
cmp
lahf
test
bound
shl
xchg
add
cmps
mov
inc
ret
fcomp
jge
mov
fnstenv
iret
call
dec
aaa
or
mov
or
loope
add
fcomp
fimul
sub
std
mov
les
cmp
popa
in
cmps
mov
xchg
or
xchg
jae
jl
inc
jp
and
je
arpl
mov
xor
gs
sub
xor
ds
jg
mov
sub
data16
cli
ss
rcl
gs
(bad)
aas
clc
pop
cmp
or
int3
pop
(bad)
mov
push
adc
mov
xchg
mov
mov
mov
cmp
add
adc
jb
(bad)
lock
ins
mov
scas
addr16
pop
mov
aaa
movs
mov
adc
cdq
shl
jbe
popa
dec
pop
sbb
rcr
and
shr
push
pop
push
repz
dec
fistp
std
mov
pop
aaa
push
movs
(bad)
mov
loopne
les
inc
aaa
sub
(bad)
xlat
es
ins
sub
leave
addr16
dec
pusha
sahf
and
lods
jle
imul
mov
js
std
mov
push
adc
arpl
and
in
daa
mov
mov
push
cmp
lock
or
sub
popw
dec
push
add
ds
rcl
out
mov
sbb
xchg
inc
ret
gs
dec
lock
cli
bound
das
ret
popa
xor
dec
lds
shl
push
in
sbb
fnstcw
call
loope
add
test
(bad)
pop
xchg
and
(bad)
mov
repz
retf
pop
cdq
mov
ret
imul
cli
cli
call
int3
ins
cmc
sbb
outs
fisttp
adc
imul
daa
and
fist
bnd
push
fstp
cmp
push
sti
adc
xchg
fcom
ds
into
push
jge
retf
enter
adc
aam
pop
dec
mov
xor
or
dec
lea
bound
jecxz
add
push
das
jns
xor
mov
xor
jae
xchg
arpl
mov
dec
jmp
mov
movs
dec
pushf
inc
mov
mov
loope
js
(bad)
mov
gs
outs
mov
mov
jmp
lods
ja
cmc
push
lea
test
add
or
mov
cmps
rol
xchg
div
stc
xor
aaa
or
aad
dec
jb
xor
xchg
push
xchg
data16
out
xchg
in
out
mov
jnp
push
cli
xor
je
mov
pop
lock
mov
or
int
lds
pop
mov
xchg
cli
add
mov
shl
lods
aad
nop
data16
out
sub
dec
icebp
int
mov
dec
jb
add
or
dec
adc
ds
fiadd
jne
into
mov
loop
fs
sub
int
pusha
mov
ret
movs
fdiv
xlat
or
mov
or
sbb
fld
dec
jo
retf
aas
fnstenv
sub
mov
movs
outs
mov
cmp
push
pop
and
(bad)
popa
jmp
xor
sbb
pusha
dec
gs
mov
push
mov
in
jbe
shl
stc
push
push
dec
data16
pop
out
xor
ds
(bad)
adc
sahf
adc
aad
addr16
mov
mov
inc
arpl
lods
adc
xor
cld
arpl
jge
jmp
dec
mov
inc
repz
lea
and
cld
push
push
pop
sub
cli
das
sub
mov
test
shl
or
inc
rcr
mov
jmp
sbb
jle
add
mov
cli
std
clc
daa
cld
mov
mov
and
mov
push
pop
sbb
jl
add
cmp
pop
xor
cs
sti
sbb
arpl
lods
mov
jo
sub
dec
mov
mov
jno
mov
mov
inc
sub
pop
xchg
leave
shl
rcl
fmul
movs
jbe
rcr
mov
mov
inc
jne
xchg
fist
sub
sbb
mov
mov
movs
pop
rcl
dec
scas
pop
add
enter
push
ds
jmp
cld
cmp
in
pop
add
add
mov
sub
sub
mov
dec
nop
shr
mov
adc
out
jb
(bad)
fwait
pusha
add
push
push
fldl2t
mov
not
mov
dec
dec
out
dec
pop
retf
sub
dec
mov
jne
xor
inc
sbb
rol
push
cmps
sbb
movs
cld
data16
cmp
fbstp
mov
mov
sbb
leave
or
xchg
jmp
call
sti
fisttp
rcl
mov
test
mov
sub
sbb
out
xor
sub
jmp
mov
std
push
ror
sub
inc
add
sub
dec
dec
pop
mov
push
mov
cmp
aas
(bad)
cmp
into
out
add
out
out
inc
inc
jb
inc
and
mov
add
push
cmp
add
sub
in
repnz
stos
loope
push
jmp
or
sub
sti
pop
sti
js
fistp
shr
ret
loope
test
aaa
and
call
neg
sti
mov
cwde
inc
imul
cmp
adc
paddusw
mov
stc
mov
push
mov
into
mov
stos
sar
pop
stc
aaa
dec
cmp
dec
inc
jb
cmp
and
jp
jg
xchg
lods
das
dec
das
pop
lods
into
mov
cmp
scas
lods
pop
shr
inc
mov
or
or
cmc
(bad)
pop
mov
not
outs
pop
jle
(bad)
std
push
pop
sbb
cmp
cs
pop
xchg
xor
pop
test
pop
cmps
jl
ds
mov
mov
sub
lock
sbb
mov
cmps
loopne
outs
pop
ret
inc
fdiv
inc
fadd
adc
dec
mov
add
dec
fisttp
aaa
sub
movlps
mov
(bad)
std
sbb
pop
scas
add
mov
sub
fisttp
or
out
and
out
xchg
adc
inc
inc
out
or
shr
rcr
cwde
scas
adc
frstor
movs
xor
inc
movs
jmp
sub
leave
inc
mov
daa
mov
mov
mov
sub
sub
mov
cmp
sub
mov
adc
jmp
clc
rcr
push
inc
in
aaa
pop
popa
ror
mov
pop
mov
add
dec
int
in
aaa
xor
push
mov
sbb
outs
inc
cmp
sbb
aam
inc
loopne
push
xchg
mov
arpl
adc
gs
push
in
mov
xor
stos
fs
rol
pop
test
out
adc
iret
xlat
mov
mov
pushf
ins
movs
mov
stos
int
push
and
(bad)
std
jno
cld
mov
clc
add
neg
call
push
push
mov
out
mov
cmps
xlat
lock
xchg
mov
xor
icebp
pop
jnp
and
sbb
cmp
sbb
adc
cdq
jp
enter
test
jnp
movs
push
adc
pop
and
dec
push
pop
fs
push
mov
dec
push
or
mov
popa
(bad)
shl
ja
dec
rol
sub
test
and
mov
or
test
sbb
out
fucomip
sahf
push
xor
adc
mov
(bad)
xchg
stos
xor
loope
arpl
cwde
scas
cmp
inc
mov
stos
mov
inc
lods
rol
or
ret
stc
pop
ja
out
push
lds
(bad)
or
cmp
xor
gs
jmp
pop
lds
inc
sbb
lahf
gs
ficom
add
xor
push
and
fnstenv
inc
fild
nop
push
adc
push
sub
into
push
data16
pop
mov
or
outs
(bad)
xor
stc
cwde
cmp
xor
out
lahf
in
out
dec
mov
mov
mov
ins
xor
dec
shr
idiv
(bad)
into
fisttp
inc
cs
call
outs
loope
data16
push
stc
and
mov
gs
out
popa
inc
inc
mov
inc
sbb
or
jp
add
js
add
mov
(bad)
lock
ror
daa
fcom
sbb
cmp
pop
push
out
outs
push
int
iret
xor
mov
mov
sub
fbld
enter
inc
aaa
mov
or
xchg
outs
pusha
or
stos
clc
sub
call
dec
stos
mov
jge
push
cmp
pshufw
push
push
mov
push
pop
arpl
fidivr
shr
push
pusha
jbe
(bad)
xchg
jnp
cmp
fcmovne
imul
mov
push
icebp
clc
sar
xchg
fild
jb
inc
(bad)
lea
sbb
cmp
xchg
xchg
repz
sub
scas
dec
ret
daa
in
adc
jns
xor
mov
sub
sub
adc
movs
pop
leave
adc
jmp
inc
pop
sub
xor
jno
jb
shl
sbb
int
mov
retf
ffreep
sub
stos
lock
pop
outs
outs
sub
adc
dec
push
outs
test
retf
jg
iret
push
and
dec
jge
(bad)
pop
or
inc
jbe
ret
add
clc
push
leave
(bad)
std
xor
pop
shl
or
leave
dec
pushf
jge
jge
in
pop
mov
shr
(bad)
mov
out
sbb
repnz
mov
xchg
push
pushf
aas
xor
(bad)
pop
sbb
adc
sub
inc
pop
inc
call
call
adc
scas
mov
mov
mov
xor
jmp
scas
add
jo
jmp
jnp
inc
adc
jmp
or
push
push
pop
dec
sbb
test
inc
jmp
das
neg
shl
frstor
out
xchg
aad
and
iret
icebp
add
mov
lea
bound
mov
(bad)
in
hlt
or
jne
out
adc
fild
mov
idiv
mov
mov
arpl
pop
hlt
inc
inc
fist
ficom
in
div
mov
leave
xchg
push
lds
mov
adc
push
xor
fs
inc
push
lods
cmc
cmp
outs
clc
mov
xor
cmp
pop
ds
pusha
sbb
aaa
jns
into
cmc
cwde
cmc
mov
pop
jle
in
push
adc
ficom
cmc
mov
and
(bad)
call
pop
mov
mov
rol
jg
shr
mov
sti
int
sub
hlt
inc
sbb
push
outs
adc
mov
out
lds
xchg
psrld
pushfw
sbb
or
mov
ror
dec
mov
add
mov
es
les
nop
inc
rcl
ins
and
push
mov
or
push
fldcw
or
or
call
mov
aaa
daa
clc
icebp
pminsw
push
and
sbb
push
dec
test
popa
jl
cmp
test
jecxz
pop
adc
int
xor
dec
xchg
sub
call
jecxz
ss
clc
mov
jne
lds
and
aam
cli
(bad)
shr
(bad)
ins
fimul
mov
push
mov
jnp
es
std
push
push
push
mov
add
cmp
imul
push
call
xor
lods
cmp
add
ja
jl
(bad)
rcr
inc
in
(bad)
out
daa
mov
push
les
mov
lock
dec
mov
out
pop
dec
(bad)
aam
in
push
call
test
cdq
add
in
ret
dec
dec
pop
jb
inc
inc
imul
mov
cmp
test
fcmove
int3
pop
sub
(bad)
imul
mov
cld
mov
push
leave
sub
adc
jbe
nop
sldt
lds
mov
jge
and
test
ret
mov
jge
test
mov
jle
cmps
data16
repz
add
sub
ins
dec
sub
out
or
add
adc
mov
xchg
nop
hlt
push
xchg
mov
je
lea
cli
sti
jecxz
xchg
mov
fdivr
fld
push
push
aad
push
icebp
cwde
dec
mov
adc
les
(bad)
sbb
mov
inc
push
add
scas
xor
sub
mov
mov
sbb
cld
mov
ret
aad
les
adc
out
das
retf
mov
fimul
cmp
ja
or
mov
ds
and
inc
std
push
add
mov
dec
mov
in
cmp
call
pop
add
bsf
cmps
into
sbb
(bad)
jb
pusha
sbb
pusha
data16
push
leave
arpl
and
fisttp
loopne
mov
lea
rol
dec
push
inc
add
test
clc
retf
shl
inc
push
pop
std
scas
push
mov
and
dec
stos
fisubr
popa
call
clc
jecxz
xor
sub
or
neg
mov
mov
xchg
pop
shl
sub
rcl
mov
xor
jne
push
mov
inc
inc
shl
dec
jb
sub
pop
jns
mov
sbb
or
inc
ins
or
or
jbe
sbb
or
mov
call
fnstenv
sub
pop
xlat
test
into
xor
cmp
cdq
mov
outs
push
sub
cmps
ficom
or
xchg
(bad)
loope
sub
in
sub
repnz
lods
adc
popf
aad
or
in
sub
inc
jg
(bad)
mov
and
pop
jge
mov
les
push
push
enter
add
fsub
out
xchg
jbe
fwait
xchg
and
in
pushf
mov
ficom
adc
stc
outs
xchg
xchg
dec
in
pusha
repnz
pop
aad
retf
ret
push
xor
adc
aam
add
push
ds
cli
nop
in
scas
je
call
sti
sbb
xor
xchg
push
xchg
mov
add
cmps
(bad)
push
cmp
js
cmp
mov
popf
sbb
pop
push
bound
out
test
jnp
jle
jno
ss
fs
adc
scas
cmp
sahf
mov
pop
xchg
inc
sub
out
lock
fbld
push
mov
test
ins
dec
xor
mov
sbb
jecxz
xor
lea
stos
test
xor
aas
gs
int
mov
pop
jmp
pop
stos
ins
or
fcomp
nop
xor
dec
iret
stc
or
sub
hlt
xchg
push
mov
adc
push
mov
sbb
jge
inc
sbb
(bad)
das
test
pop
mov
mov
scas
push
dec
mov
xchg
xchg
xor
push
bound
adc
mov
fld
lock
int
jno
xchg
adc
jg
and
leave
aad
cmp
hlt
inc
push
mov
cdq
retf
mov
imul
mov
out
lea
inc
cmp
inc
push
ja
dec
mov
out
jns
imul
in
ins
rcl
pop
fucom
jne
push
outs
mov
mov
leave
xchg
jl
(bad)
xchg
xlat
lods
adc
cmp
push
sbb
jne
ficomp
fdivr
pop
pop
dec
push
xchg
inc
frstor
lea
(bad)
jl
repz
in
lods
mov
xchg
pusha
xor
ins
mov
pop
jle
or
mov
sti
sbb
fild
aad
push
arpl
lahf
pusha
popw
loope
inc
das
call
enter
ss
ins
out
jno
aad
jbe
lahf
leave
call
sub
and
movups
adc
push
inc
pusha
sub
fwait
sti
inc
addr16
(bad)
sahf
rcl
fcmovnbe
test
mov
mov
test
das
and
adc
retf
xor
test
jle
xor
dec
inc
rdmsr
add
cli
jns
mov
nop
or
mov
dec
inc
ins
sbb
xor
repz
mov
xchg
cmp
movs
out
xchg
pop
fwait
jo
cwde
push
in
sbb
cmp
test
cmp
jecxz
cmp
scas
ins
jb
push
(bad)
jbe
dec
push
xor
push
xchg
pop
iret
inc
into
inc
in
push
add
cld
jge
ret
jno
sbb
sar
mov
pop
xlat
xor
jns
mov
mov
mov
pop
sbb
in
xor
popf
cmp
ins
mov
add
test
out
test
mov
shl
idiv
outs
movzx
cmps
and
popa
popa
inc
ret
addr16
sub
cmc
imul
inc
push
sub
mov
das
mov
push
nop
mov
repz
xchg
movs
pop
jb
repnz
push
adc
mov
out
aaa
dec
cdq
mov
mov
das
mov
out
mov
in
in
out
push
loop
test
cld
daa
xchg
pop
int
sahf
mov
add
retf
add
fcomip
call
icebp
fld
adc
inc
cwde
jns
test
ret
popa
loope
sbb
sub
fld
ins
stc
xor
adc
fwait
mov
cmp
pop
jne
pop
(bad)
cmp
pop
xor
loopne
or
xchg
inc
lds
rcl
sbb
outs
adc
imul
push
test
enter
pop
loopne
or
pop
scas
mov
out
jmp
lds
sub
pop
mov
aas
push
bound
call
cld
pop
cs
aam
ficom
xchg
iret
mov
cld
(bad)
retf
(bad)
cmp
test
add
out
rcl
push
shl
and
fidiv
adc
aad
sar
out
dec
jecxz
rep
sbb
pop
jecxz
adc
sub
inc
outs
lods
imul
and
daa
fwait
jge
hlt
push
push
cmp
out
inc
imul
mov
stos
sub
jmp
mov
lea
mov
pop
mov
ror
lea
push
cmp
or
xlat
adc
pusha
das
das
xor
pop
cmp
and
sub
cs
jns
das
sub
je
pusha
aas
xchg
add
inc
pop
xchg
mov
or
in
add
js
mov
test
fist
ins
div
add
xchg
or
mov
movs
aad
adc
xchg
daa
(bad)
retf
xor
lods
push
test
adc
cwde
mov
xor
mov
icebp
or
lahf
(bad)
outs
push
pop
in
mov
adc
xor
jge
push
fsub
adc
cmp
xlat
scas
ds
stos
sbb
jae
loop
es
pop
ins
div
push
or
dec
enter
add
out
push
jl
dec
dec
test
cld
pop
adc
retf
mov
adc
adc
aad
xor
pop
push
mov
fisttp
jno
pop
loope
pop
jne
jge
mov
popf
lahf
(bad)
fdiv
jne
add
je
dec
in
lea
nop
push
test
ds
dec
(bad)
xchg
sbb
sbb
outs
sbb
addr16
cmc
adc
cmp
ret
lods
repnz
lds
mov
push
enter
cdq
stos
ins
jg
lea
call
or
pop
pminub
push
mov
fistp
add
imul
addr16
adc
dec
ja
addr16
iret
mov
sti
mov
xchg
jge
adc
fcom
loop
or
xlat
cmp
xchg
xchg
jg
mov
jne
pushf
sbb
cdq
lahf
pop
lods
int
icebp
out
dec
fiadd
mov
or
dec
loop
nop
mov
aaa
and
fst
in
push
sub
rol
fisttp
mov
rcl
and
inc
(bad)
dec
mov
jmp
iret
cs
mov
je
add
xchg
into
ins
sbb
cmp
pop
sub
in
aam
sbb
jmp
loope
mov
jecxz
popa
jmp
mov
sub
lds
mov
fild
outs
dec
fsub
dec
jno
push
push
inc
mov
jg
xchg
jecxz
sbb
aam
or
pop
mov
mov
ins
or
shl
inc
or
sub
daa
outs
pop
sbb
adc
lahf
sahf
inc
dec
in
int3
arpl
add
retf
dec
adc
fbstp
ret
or
shl
bound
(bad)
sbb
sub
add
jge
push
adc
cmp
outs
repz
lods
push
loopne
adc
aaa
mov
fisubr
retf
clc
sub
ja
push
int
jnp
cmp
jns
pop
(bad)
aam
repnz
lea
mov
sbb
cmp
pop
(bad)
add
dec
rcl
mov
inc
(bad)
rol
test
jae
ds
loop
pop
cmp
js
push
call
pop
ficomp
dec
mov
aas
popf
dec
cmp
cli
iret
int3
jne
enter
or
dec
pop
ins
inc
mov
ja
sub
sbb
mov
mov
push
mov
and
and
pop
inc
repnz
inc
sar
xchg
xlat
push
sub
loope
sub
(bad)
xchg
lods
lds
xchg
sbb
test
mov
add
mov
add
cmp
addr16
stos
lods
inc
or
jo
sti
dec
je
jnp
repz
outs
bound
or
cwde
stc
les
es
call
hlt
(bad)
jg
lock
jne
in
repz
and
dec
add
daa
dec
test
retf
rol
inc
push
and
lock
stos
out
fnstcw
sbb
lds
leave
mov
jge
add
nop
pop
pop
rol
in
repz
lods
jp
movs
(bad)
out
stos
cmps
adc
and
sti
jnp
dec
push
pop
outs
scas
or
cmc
and
mov
adc
mov
into
sub
dec
sub
(bad)
push
add
mov
scas
jg
jl
int3
mov
and
jmp
movs
dec
and
inc
sbb
dec
sub
inc
add
fwait
lock
rcr
dec
(bad)
mov
cmps
imul
push
cmps
and
test
push
xor
sahf
sbb
jmp
push
add
push
lahf
cld
popa
dec
lock
mov
loope
jbe
and
lods
add
cmp
fisubr
aaa
push
stc
cmc
push
mov
jge
out
push
test
data16
push
cs
mov
adc
jb
cli
xchg
sub
push
add
int3
mov
adc
add
jne
add
pop
xor
in
pop
ds
mov
xchg
sub
push
dec
mov
push
jmp
(bad)
call
mov
stos
jo
or
and
das
mov
cmp
icebp
sub
xchg
imul
lahf
out
mov
xor
test
loope
fst
dec
dec
fwait
xor
(bad)
iret
add
mov
or
cmp
scas
cmps
mov
mov
mov
into
sub
out
hlt
call
push
fidivr
xchg
sub
ins
push
sub
fadd
imul
popa
dec
lahf
inc
xchg
popf
push
pop
adc
adc
mov
dec
scas
(bad)
dec
test
jecxz
xor
xor
pushf
push
cmp
or
(bad)
adc
call
sti
sub
fisubr
(bad)
pmulhw
push
fwait
jecxz
jecxz
std
cmp
popf
pop
or
xlat
jno
xor
adc
fisttp
jmp
test
xor
sub
xchg
mov
mov
mov
shr
pusha
mov
xchg
dec
pop
xor
sbb
jb
out
dec
mov
call
pop
mov
mov
rol
std
addr16
jmp
(bad)
repz
lahf
jae
mov
add
xchg
jno
push
fist
cwde
lahf
addr16
push
mov
push
jmp
and
and
push
fdiv
and
stc
jb
loopne
add
inc
mov
mov
fnsave
or
ror
pop
jp
push
jns
add
popf
fisttp
loopne
and
movs
jp
push
sub
dec
fwait
daa
push
iret
gs
jmp
dec
imul
mov
in
aad
fist
gs
mov
call
imul
push
push
out
push
add
add
outs
pop
xchg
cmp
mov
in
mov
push
and
jge
mov
sti
clc
call
cdq
bound
out
mov
ja
ror
ret
mov
mov
sub
or
scas
push
jmp
sub
pop
popa
retf
cli
fist
xor
repz
enter
xor
dec
pop
sub
push
cmp
loope
data16
and
in
push
imul
icebp
cmps
pop
jbe
(bad)
ficom
cvtdq2ps
push
mov
inc
xor
jbe
push
or
cmc
aaa
adc
std
mul
mov
pop
scas
pop
push
aaa
(bad)
jecxz
scas
adc
int
jp
nop
lods
jp
inc
push
hlt
xor
sub
mov
add
add
cmc
xchg
leave
push
xor
adc
shr
shr
push
ss
aam
push
mov
rcr
lahf
push
xchg
jmp
fnsave
sbb
sbb
mov
push
retf
dec
rcl
fwait
mov
jle
arpl
add
repnz
xor
imul
lods
fs
cdq
mul
sahf
sbb
popa
jb
mov
test
adc
dec
sbb
retf
in
jp
loop
std
int3
sti
loopne
inc
sbb
cmc
mov
push
or
mov
jl
jne
add
and
jmp
add
pop
in
push
gs
sub
aas
mov
jmp
inc
leave
in
mov
xor
xor
mov
adc
mov
xchg
rcl
jnp
movs
lds
jno
fiadd
aam
push
mov
mov
jmp
cmp
mov
adc
mul
clc
mov
test
mov
pop
popa
aas
jecxz
pop
ret
adc
mov
js
mov
mov
mov
cli
into
scas
mov
push
add
jb
push
scas
hlt
push
dec
outs
jmp
movs
cli
jmp
mov
mov
rcr
mov
sub
sub
retf
sub
cs
sub
imul
cmp
jle
jge
loop
cmp
les
xor
ins
cmp
adc
xor
jo
inc
imul
inc
pop
lea
dec
setne
mov
pop
bound
adc
inc
(bad)
mov
stos
(bad)
xor
shr
push
mov
pop
xchg
sbb
scas
aad
jns
data16
xor
mov
mov
sbb
jne
inc
adc
les
mov
sbb
mov
in
push
xchg
push
pop
push
push
push
sub
push
sti
push
jecxz
mov
push
aad
jo
dec
sub
inc
test
retf
xor
stos
mov
push
loop
aas
(bad)
mov
(bad)
mov
and
daa
mov
(bad)
and
rcr
pandn
or
scas
scas
iret
out
pop
loopne
adc
int3
xlat
xchg
mov
mov
cmp
lds
lods
mov
inc
cmps
mov
ins
jge
pop
push
pushf
(bad)
adc
push
fimul
mov
and
inc
adc
jl
xor
mov
(bad)
cwde
test
imul
adc
dec
psubb
sbb
out
and
imul
ja
(bad)
iret
sbb
(bad)
call
or
out
or
xor
les
mov
xor
or
(bad)
push
data16
inc
pop
push
inc
arpl
inc
mov
dec
mov
outs
cmp
sub
cwde
sub
cdq
jl
mov
mov
ss
imul
sbb
aaa
arpl
dec
ds
popf
(bad)
nop
inc
mov
jmp
xchg
push
push
fbstp
mov
lods
sahf
aam
sub
xchg
lods
jbe
ret
xchg
out
dec
out
xchg
pop
int
sbb
daa
or
pop
push
pop
sub
dec
jg
jmp
sbb
or
(bad)
pushf
cmp
pop
js
(bad)
sbb
arpl
mov
sbb
cmps
push
sahf
cmp
movs
sti
rcr
out
jmp
jns
cdq
push
(bad)
mov
cmp
mov
addr16
fld
imul
jne
xlat
mov
push
add
jae
addr16
(bad)
jb
sub
imul
mov
jo
mov
scas
dec
aam
mov
dec
xor
push
pop
imul
popf
sbb
retf
jne
sar
inc
cli
dec
fmul
dec
pop
pop
xor
or
sub
imul
adc
dec
mov
(bad)
dec
int3
mov
sub
std
mov
xor
das
cld
ins
aaa
xchg
xor
inc
xor
xchg
scas
mov
pop
cmp
fidiv
jmp
dec
jcxz
es
pusha
push
and
lods
mov
(bad)
jecxz
pop
add
ss
add
ja
adc
lods
pop
gs
sub
pop
int
adc
sub
shl
pop
mov
int3
add
enter
and
mov
cmps
adc
cmp
scas
xor
mov
lods
dec
dec
xchg
jmp
sbb
cmp
sub
xchg
ret
add
sub
and
je
sub
cmp
ins
sub
sbb
mov
jmp
pusha
scas
pop
jg
fdiv
nop
adc
inc
dec
xchg
jnp
loopne
rol
int3
es
(bad)
repz
and
sbb
xchg
stos
movs
repnz
daa
add
popa
sti
xchg
mul
and
or
dec
or
or
xchg
stos
loopne
jecxz
mov
xchg
in
push
jl
lods
out
lds
cmp
fsubr
push
pop
sbb
aas
push
int3
aam
dec
xor
out
jne
jg
sub
jne
aaa
and
sub
es
in
xchg
test
dec
cdq
pop
ficomp
xlat
adc
mov
xor
add
sub
(bad)
int
or
jle
movs
xchg
adc
pusha
iret
cmp
add
(bad)
fmul
stos
mov
mov
and
push
and
add
loopne
push
xchg
jmp
mov
dec
loope
mov
pop
test
movs
xor
mov
push
scas
inc
iret
outs
fs
int3
daa
out
mov
mov
mov
mov
ins
fs
jns
mov
mov
stos
push
rcl
add
pop
ins
call
and
jae
fstp
not
lds
push
pop
jge
leave
adc
mov
mov
loope
aas
adc
adc
hlt
sub
and
leave
data16
sbb
fisubr
xchg
sub
stc
test
mov
cdq
add
or
mov
in
cmp
sub
fst
std
les
dec
or
cwde
test
(bad)
mov
jge
push
jb
xor
scas
fcmovne
call
fdivp
(bad)
scas
add
loopne
jecxz
mul
popa
jno
retf
loop
mov
fmul
out
call
scas
mov
add
cwde
xor
das
cmp
daa
pop
xor
mov
cmp
pop
push
jp
sub
dec
and
shufps
add
mov
imul
cdq
xor
mov
cmc
mov
mov
or
int
nop
cmp
push
jmp
and
jge
std
outs
sbb
cmps
call
and
sbb
adc
inc
pop
mov
mov
loop
mov
in
mov
jns
xchg
xchg
pop
mov
ins
xchg
push
(bad)
xor
test
outs
cmp
nop
pusha
sub
mov
adc
and
mov
xchg
aad
ja
push
xor
mov
xchg
mov
lock
sub
not
ins
mov
push
adc
xchg
jge
xor
enter
inc
ret
scas
sahf
pop
push
xlat
out
(bad)
stc
int3
ins
xchg
call
adc
aaa
inc
fsubr
inc
lods
xor
popa
out
es
jae
mov
cmp
xor
fsubr
jmp
arpl
or
loope
les
std
fnsave
xchg
adc
repnz
in
mov
loop
fs
aaa
popa
adc
xchg
jl
retf
hlt
jb
mov
sub
inc
pop
pop
jne
jg
inc
add
mov
in
sbb
and
out
retf
mov
cmps
jl
int
fist
test
push
repnz
shl
shr
sbb
pop
jmp
imul
jns
rol
xchg
(bad)
add
sub
mov
sbb
fst
addr16
mov
fst
xchg
pusha
pop
or
loop
int
jmp
popa
into
mov
jp
jg
pop
test
call
jae
xchg
mov
sar
add
test
push
fdivr
in
retf
cs
pop
rol
add
push
arpl
dec
sub
xchg
repz
stos
dec
cmps
stos
fcom
movs
nop
mov
cdq
mov
retf
ja
pushf
sar
test
shr
xchg
push
dec
and
(bad)
fwait
push
push
outs
js
mov
push
push
sbb
cmp
cwde
aad
xor
int
cmp
xor
sahf
jno
push
push
jge
sar
inc
sub
call
jnp
rcl
pusha
xchg
add
nop
sbb
daa
pop
xor
shl
push
sub
adc
(bad)
cs
(bad)
mov
dec
adc
cmp
cs
jge
mov
nop
or
jl
jmp
enter
rcr
mul
scas
mov
repnz
stos
out
mov
inc
repnz
sbb
ds
pop
addr16
jns
int
fucom
(bad)
mov
imul
cmp
iret
mov
test
and
push
adc
setae
cmp
mov
js
bound
inc
ret
les
xor
cmp
mov
movs
cmp
xor
jg
mov
fild
ja
push
mov
cmp
xchg
and
popf
and
inc
sbb
(bad)
pop
push
hlt
ds
add
fbld
mov
je
bound
mov
push
dec
mov
stc
mov
fdivr
int
and
cmp
in
cmp
sbb
ja
out
xchg
stc
out
adc
cmps
jge
inc
pop
mov
push
ficomp
imul
pop
sar
xchg
stc
stos
mov
je
je
and
sub
ins
fistp
jmp
lods
hlt
imul
xchg
mov
gs
jecxz
pop
and
jle
jg
pop
xchg
sbb
jmp
fstp
retf
xchg
stc
inc
aas
popa
movs
(bad)
fimul
mov
rcr
jle
pop
hlt
dec
xchg
cmc
aam
push
dec
outs
add
or
adc
out
fsubp
(bad)
fiadd
mov
jecxz
fdiv
aam
(bad)
cli
add
or
dec
jp
or
stos
adc
pop
int3
fisubr
std
mov
mov
movs
shl
xlat
inc
push
cmp
outs
jge
imul
shl
jp
ficom
add
and
mov
dec
add
jmp
cmp
dec
stos
push
fild
cmc
or
mov
add
lods
dec
xchg
dec
mov
ffree
sbb
cli
mov
rol
shl
dec
mov
cld
add
mov
call
aas
(bad)
out
test
test
and
pop
shl
addr16
stos
and
pop
add
push
xchg
mov
mov
push
imul
jmp
pop
jmp
adc
inc
push
add
call
(bad)
xor
test
inc
jno
add
inc
jmp
mov
cmp
in
adc
mov
aam
xchg
jns
and
jp
mov
add
fld
cmp
xor
(bad)
jo
mov
leave
sbb
das
dec
pop
lods
dec
pop
rcr
jb
xor
sbb
adc
sar
(bad)
jp
cmp
push
xchg
scas
test
jb
mov
or
push
jb
mov
sbb
retf
mov
loope
clc
mov
movs
mov
jmp
into
cmps
push
jecxz
pop
shl
add
mov
sub
int
cs
push
inc
cdq
dec
cmp
add
jne
xchg
movs
jge
or
outs
push
sub
ins
dec
das
sbb
inc
cmp
push
pop
in
(bad)
mov
stos
cmc
into
mov
mov
ds
rcr
and
mov
pop
aaa
pusha
sub
hlt
ds
sbb
ss
dec
addr16
fnstenv
mov
(bad)
push
shl
mov
lahf
mov
and
sub
xor
sub
cmps
and
inc
xchg
cli
cmps
aaa
jl
call
and
pop
clc
ins
dec
push
mov
jg
jne
xchg
inc
adc
outs
lock
ins
in
lds
stos
xchg
cmp
adc
lds
and
stc
fld
test
(bad)
rcl
daa
jnp
push
sbb
dec
test
icebp
mov
inc
add
clc
into
aad
xchg
or
mov
outs
js
lahf
fwait
jg
inc
jge
push
xchg
mov
loope
mov
call
lahf
or
lock
cmp
xchg
movs
jnp
jle
pop
loope
mov
xor
imul
loopne
in
fs
mov
jmp
mov
out
dec
inc
adc
pop
test
pop
jo
adc
sub
repz
mov
call
adc
imul
pop
jge
push
xchg
and
out
scas
inc
jmp
dec
(bad)
aad
sub
pop
dec
jae
and
daa
rcl
xchg
popa
mov
cmp
in
fmul
add
inc
mov
stos
cmp
es
mov
mov
sub
je
rcr
je
cld
push
test
rcl
add
or
xlat
push
in
xchg
inc
in
xchg
hlt
lock
add
jp
sahf
push
int3
inc
jp
push
dec
inc
add
not
fnstcw
xchg
popf
pop
mov
jo
add
retfw
add
jl
inc
xor
loopne
test
xchg
jge
scas
pushf
out
adc
cmc
push
hlt
jmp
lea
(bad)
mov
fdivrp
xchg
mov
cmp
add
inc
jbe
mov
dec
dec
push
cwde
lds
mov
xor
push
retf
shl
ja
xchg
bnd
pop
std
jnp
xor
adc
out
jae
popf
daa
adc
jp
jno
into
jg
cmp
jge
into
xor
jl
mov
icebp
jno
mov
jbe
jecxz
std
dec
sub
(bad)
xchg
jbe
inc
leave
cdq
in
aaa
pop
dec
sahf
outs
add
mov
cmp
icebp
xor
(bad)
out
mov
(bad)
sbb
inc
enter
mov
(bad)
loopne
mov
sahf
adc
test
jbe
imul
cdq
mov
mov
fcomp
push
sbb
push
mov
xchg
xchg
mov
pop
adc
test
pop
pop
mov
inc
aad
sbb
pop
push
mov
cs
mov
out
sub
repz
loop
mov
rcr
xor
xor
test
and
(bad)
std
mov
(bad)
ins
xchg
(bad)
cmps
mov
movs
xlat
mov
dec
mov
dec
test
scas
outs
jbe
mul
and
rcl
imul
aad
mov
inc
mov
outs
cmp
out
mov
or
lods
xor
(bad)
test
sbb
push
retf
cmp
or
scas
test
aas
movs
cmps
inc
pop
add
enter
gs
dec
out
push
aaa
scas
push
xchg
adc
sbb
in
and
ins
cmp
in
inc
sub
mov
sub
ret
jmp
and
adc
(bad)
push
pop
sbb
in
xor
xor
and
int3
inc
xchg
push
adc
mov
scas
and
lds
fidivr
loop
lods
or
lahf
adc
push
arpl
aam
fimul
mov
pop
imul
xor
and
test
adc
pushf
popf
add
cld
retf
mov
push
mov
mov
mov
sub
xchg
inc
out
into
lock
movs
loope
(bad)
icebp
aaa
imul
jo
push
popa
or
pop
adc
cli
gs
xchg
inc
or
pop
sub
pop
sub
sub
lock
mov
in
or
jne
loop
cmps
idiv
sbb
lods
test
js
mov
xchg
lock
ds
movs
sub
pushf
mov
ret
test
or
xchg
mov
add
jmp
(bad)
mov
pop
pop
lea
push
lods
inc
arpl
stos
ins
sub
les
inc
mov
sbb
and
mov
cwde
mov
or
cmc
(bad)
cmps
gs
sbb
hlt
bound
sub
push
or
xchg
in
mov
sbb
pop
xor
fldenv
and
pushf
das
in
pop
popa
push
pop
push
cmp
sbb
sub
xchg
pop
gs
xchg
mov
hlt
nop
inc
mov
push
push
lahf
repz
std
push
inc
fwait
scas
fistp
mov
stc
daa
add
mov
sub
repz
push
js
in
or
push
add
push
sub
mov
pop
ror
mov
nop
xchg
pusha
cwde
out
shr
ror
mov
in
rcr
cwde
fdiv
test
xchg
push
and
call
jp
mov
jnp
jge
test
scas
cmp
shr
shr
in
and
les
sub
sti
cdq
jnp
imul
stc
dec
fild
cmp
add
sahf
scas
scas
ins
jae
mov
mov
loope
fstp
xchg
sbb
xchg
sub
(bad)
ds
inc
cmp
push
jecxz
adc
cli
dec
adc
jge
cmp
add
sub
mov
xor
sub
sub
lea
mov
and
jo
cmps
popa
adc
neg
out
outs
push
jmp
inc
mov
cmp
xchg
mov
cmps
mov
pushf
mov
push
into
cs
call
jg
pop
push
ins
xchg
test
pop
mov
bsr
add
push
push
mov
push
mov
sbb
mov
out
mov
je
leave
sub
mov
retf
adc
fsub
fadd
and
jno
mov
cmp
cmp
shl
dec
pop
into
repz
jb
sub
xchg
dec
retf
pop
je
fwait
sub
xchg
mov
push
ror
ret
add
lock
jbe
imul
mov
mov
xchg
jbe
(bad)
(bad)
sbb
xor
sub
ins
fild
cwde
or
adc
popa
adc
jae
or
sbb
sahf
cmp
cmc
jbe
in
int3
sbb
(bad)
jge
popa
inc
cmp
pop
mov
iret
or
and
cmp
sub
jmp
add
dec
in
push
jle
dec
vcomiss
iret
leave
sar
mov
das
daa
push
stc
call
jg
pushf
mov
(bad)
jle
sbb
or
push
repz
jo
gs
jne
mov
push
call
mov
add
cld
inc
mul
xchg
sbb
adc
es
sbb
sub
frstor
jne
loop
stc
jo
call
js
test
xor
aam
push
retf
inc
mov
cmc
mov
xor
add
ins
popa
addr16
mov
lods
mov
cmps
inc
ins
in
adc
and
out
push
xchg
lahf
mov
mov
mov
mov
ja
sub
pop
inc
loop
and
nop
mov
loop
inc
ret
fcmovnbe
repz
div
add
xor
inc
stos
out
push
ja
sub
adc
push
daa
dec
cmp
dec
icebp
stos
(bad)
cmp
or
bound
test
cli
fidivr
daa
push
arpl
cmp
test
aaa
xor
rcl
iret
add
xchg
jo
pop
lods
fst
mov
mov
pop
mov
pushf
adc
aas
sub
pusha
leave
mov
adc
push
ficom
sub
xchg
ret
jmp
out
loope
xor
int
repnz
test
aad
cmp
cmp
adc
js
adc
sbb
push
test
outs
push
jp
xchg
fiadd
pop
ja
ret
mov
sbb
rcl
int
lds
and
gs
dec
push
sub
and
cli
push
lds
push
dec
hlt
sbb
sbb
xchg
loop
loope
adc
mov
adc
dec
leave
inc
adc
mov
int
sbb
test
push
outs
xlat
iret
or
mov
lahf
mov
lahf
ja
jae
mov
jmp
dec
imul
ds
adc
out
jecxz
mov
mov
jmp
mov
gs
in
rcl
cwde
fwait
out
out
jnp
leave
lock
fwait
inc
test
repnz
outs
xchg
sar
in
out
aam
jne
nop
cmp
push
dec
mov
cwde
cld
js
fcomp
cmp
mov
es
push
mov
popa
jge
cmp
inc
arpl
cmp
out
dec
mov
aas
xor
push
push
retf
push
call
dec
test
jne
int3
or
lahf
popf
push
sub
aad
outs
adc
add
sahf
mov
ja
xlat
adc
int3
sbb
or
lea
fwait
outs
push
mov
pop
(bad)
pop
retf
mov
sahf
cmps
test
lods
jnp
fnop
(bad)
jl
cmp
cmp
dec
inc
fld
adc
push
call
inc
sub
call
call
imul
add
ins
lods
xor
mov
or
cwde
mov
popf
ror
xor
xchg
arpl
jl
cwde
mov
fnstenv
adc
stos
rep
pop
mov
or
shl
int3
pop
test
shl
(bad)
or
les
xchg
inc
mov
scas
int
outs
cld
cmp
jmp
pushf
jmp
fldenv
pop
xlat
popf
daa
popf
dec
ja
jnp
imul
or
sbb
int3
or
dec
sti
repz
xor
ret
(bad)
aaa
ret
(bad)
xor
cmp
cdq
int3
daa
add
push
mov
fbstp
jbe
loope
mov
dec
fistp
cmps
mov
inc
cmp
pusha
pop
cdq
xlat
arpl
(bad)
add
int
fimul
add
or
out
jb
and
add
cdq
jl
jns
xchg
ror
leave
inc
ss
add
out
push
jno
pop
mov
pop
outs
mov
inc
fidiv
cmp
test
bound
mov
sub
scas
fdiv
fidiv
outs
adc
aad
jp
dec
push
mov
add
xlat
mov
jns
out
dec
mov
xlat
int
jge
pusha
outs
fstp
sub
scas
and
scas
pop
mov
xor
push
cmp
xchg
rcr
daa
or
pusha
xor
cmps
jl
cmps
fxch
jl
in
jmp
fldenv
pop
call
push
dec
inc
lods
shl
mov
push
xor
repz
scas
adc
add
mov
aaa
outs
xor
js
push
dec
dec
mov
daa
pop
jecxz
jbe
jo
and
outs
mul
(bad)
stos
xchg
sbb
add
rcl
mov
push
gs
daa
adc
push
fwait
sar
fwait
push
loopne
cwde
fild
cmp
push
cmc
lds
sub
ficomp
mov
mov
cld
adc
sub
imul
sbb
mov
icebp
inc
in
cmp
jno
add
cld
(bad)
xchg
sub
sub
sbb
inc
addr16
pop
call
lock
addr16
sbb
xchg
mov
cmp
sub
stc
inc
pusha
popw
xlat
and
sti
add
rol
imul
out
dec
or
(bad)
fxch
cld
nop
cmps
sbb
sbb
pop
hlt
mov
repz
stos
outs
ins
cdq
div
sbb
add
mov
mov
mov
lea
into
repz
and
outs
iret
and
mov
adc
int
mov
cmc
mov
(bad)
fcomp
xor
dec
inc
out
lods
cmp
inc
sti
xchg
add
scas
mov
fidiv
mov
aaa
cwde
in
sub
test
dec
jo
lods
outs
js
mov
cmp
mov
(bad)
add
shl
sbb
shr
rcl
pop
and
mov
xlat
inc
(bad)
ficomp
(bad)
into
ins
sub
pop
popf
pop
sbb
mov
call
add
repnz
mov
inc
loopne
rol
pop
pushf
or
sahf
sahf
je
add
or
test
repnz
mov
cmc
fucomip
mov
push
fwait
in
fiadd
bound
imul
jge
enter
push
cmc
jecxz
gs
jns
add
std
stc
sub
pop
out
in
mov
mov
pop
je
jo
mov
in
out
adc
sbb
adc
lds
push
and
in
in
pop
loopne
push
pop
adc
enter
fisubr
or
xlat
or
cld
leave
imul
jnp
pop
test
jmp
cmp
jb
test
add
test
sbb
pusha
pop
cmps
pop
dec
jmp
dec
test
add
xor
or
jg
jp
fwait
cmp
jne
pop
fwait
push
cmc
cmps
jno
ret
xchg
sahf
loopne
sub
pushw
stos
push
and
inc
jle
and
mov
jb
frstor
sbb
dec
jg
and
xor
out
imul
xchg
ins
movs
popa
xchg
(bad)
jo
push
cmps
push
ror
adc
retf
inc
icebp
mov
jo
pushf
jecxz
jnp
fdiv
nop
pop
xchg
ds
arpl
sbb
pop
retf
sub
jne
jns
mov
iret
dec
stos
stos
or
xor
dec
repz
fcomp
enter
lea
outs
add
clc
fcmovbe
dec
mov
dec
call
push
mov
(bad)
mov
push
mov
xchg
int3
idiv
das
xor
cmc
xor
sub
jg
retf
test
inc
mov
cmp
cmp
xor
jp
jno
bnd
lahf
clc
cmp
jb
xor
out
jno
shl
jle
pop
loop
pop
out
out
mov
cmps
in
bound
jbe
ret
xchg
shl
push
adc
xchg
aad
or
retf
(bad)
loopne
shl
mov
sbb
jo
imul
ja
ja
and
ins
pop
sahf
pop
jle
sub
scas
dec
jmp
adc
xlat
outs
sub
mov
cmp
sbb
mov
and
nop
sub
push
pop
jbe
popf
rol
push
ret
pop
and
test
call
sbb
mov
cmp
(bad)
push
cdq
sbb
into
push
mov
push
jns
js
jo
push
aas
addr16
sbb
adc
adc
lods
xor
mov
sti
mov
or
mov
xor
movs
cmp
jg
adc
leave
xor
add
cdq
and
or
out
fsub
sub
xor
sbb
mov
jmp
lahf
xor
sub
in
enter
rcl
jle
add
fxtract
xchg
ror
inc
scas
pop
xor
stc
pop
jmp
adc
scas
jmp
fs
idiv
(bad)
cmps
dec
sub
and
out
jle
adc
xlat
dec
ins
sub
mov
mov
inc
mov
daa
dec
inc
sub
dec
jo
daa
or
clc
cmp
sub
jecxz
inc
ds
fisubr
loope
and
mov
or
mov
cwde
pop
test
leave
sub
pushf
cmp
es
bound
ja
and
or
mov
mov
cmp
and
adc
(bad)
xchg
aas
mov
and
add
mov
xchg
jb
shl
fs
cdq
inc
retf
jecxz
adc
xor
adc
add
xlat
inc
sbb
cmc
retf
loop
movs
inc
test
push
mov
std
add
int3
add
jp
in
mov
inc
cmp
imul
out
repnz
dec
jno
inc
jns
adc
push
jg
cwde
or
je
sub
mov
scas
jmp
in
jge
dec
xchg
shl
fisubr
lds
fs
je
inc
push
sahf
sub
xor
ds
xor
jmp
cs
add
jp
aad
std
add
test
sbb
xchg
mov
xchg
lods
xchg
fcom
jo
jb
into
add
jmp
jp
call
sub
(bad)
dec
jne
adc
xlat
xor
inc
jae
mov
in
inc
jno
dec
or
xor
add
rcl
cmp
popf
sbb
clc
push
sbb
mov
das
data16
mov
in
ret
mov
cmp
adc
addr16
pop
jb
xor
jae
stc
ret
mov
(bad)
jl
xchg
and
pop
dec
lock
xchg
xor
inc
lahf
leave
fsubr
xchg
loop
out
mov
mov
loopne
fbstp
ficom
sbb
call
push
add
mov
out
mov
fistp
ins
push
outs
ret
js
scas
call
out
inc
test
mov
jb
mov
xchg
loopne
jecxz
and
sub
lgs
inc
dec
arpl
add
ins
add
push
ret
xchg
sub
out
enter
dec
adc
mov
adc
leave
mov
inc
stos
push
(bad)
jo
out
sub
push
scas
shl
imul
mov
and
loopne
or
fnsave
fistp
sti
dec
xor
cs
adc
pop
and
mov
jg
mov
inc
sahf
jae
shl
jbe
inc
cmp
add
mov
adc
pushf
pop
jmp
and
loop
inc
fistp
mov
ror
inc
or
outs
out
add
push
mov
add
mov
retf
add
cld
vmwrite
sbb
pop
sbb
call
sbb
adc
push
xchg
in
sbb
mov
cmp
call
pop
sahf
and
sub
sub
sub
add
jnp
sbb
sub
or
lea
ss
sar
out
mov
inc
nop
push
inc
or
mov
dec
push
out
lahf
test
retf
push
push
(bad)
push
xor
push
xor
sbb
push
adc
push
pushf
inc
inc
mov
mov
sahf
cmp
mov
jge
outs
int
dec
inc
sub
jecxz
test
lods
mov
sbb
mov
test
jbe
fwait
popf
out
test
ja
or
test
shl
mov
scas
sub
pop
dec
iret
inc
fwait
ret
rol
mov
repz
add
jns
push
jge
adc
in
add
push
xchg
lods
cmp
cs
js
jno
jbe
mov
in
stos
jbe
xchg
cmp
fldcw
cmp
pop
xchg
es
mov
jecxz
jnp
div
test
not
mov
leave
sbb
mov
cmps
cmp
jo
add
pop
adc
mov
ss
scas
mov
nop
icebp
xor
das
mov
dec
cmp
cmp
push
les
mul
inc
ret
xlat
in
jns
xlat
inc
jns
pop
mul
and
es
jge
ins
xchg
aam
(bad)
es
jmp
cmc
retf
call
imul
inc
data16
inc
cmp
lods
mov
call
dec
js
xchg
iret
adc
ins
pop
cli
cmp
xlat
xchg
inc
adc
stos
js
out
mov
daa
repz
sub
into
cmp
and
fs
adc
and
adc
xor
das
lds
inc
jp
jecxz
cmp
jae
dec
xor
mov
and
and
push
sbb
gs
call
outs
dec
les
aaa
adc
push
jmp
in
sbb
sub
mov
hlt
mov
data16
jmp
das
push
lock
mov
mov
sub
comiss
inc
jae
xchg
mov
int
jae
and
(bad)
jp
sbb
mov
les
pop
ss
inc
add
jb
mov
inc
inc
loop
das
jbe
or
xor
and
and
mov
cli
pop
add
fisttp
lods
test
push
push
mov
and
jns
jmp
repnz
test
nop
pop
inc
dec
loopne
mov
mov
cs
popa
inc
retf
ins
enter
jnp
jae
cmc
push
pop
sub
(bad)
dec
cli
retw
mov
cwde
cdq
je
jne
push
sbb
jl
or
in
data16
repnz
repz
or
in
xchg
mov
sub
(bad)
scas
jnp
sub
add
adc
mov
addr16
mov
aaa
imul
fs
xor
jecxz
adc
mov
movs
mov
push
fstp
jno
loopne
sbb
mov
xor
push
shr
(bad)
jmp
jmp
out
ss
clc
outs
xchg
lds
mov
call
les
out
idiv
mov
out
xor
movs
adc
into
or
fcmovu
mov
cmp
cmps
mov
addr16
stc
pop
sti
inc
ret
aam
int3
(bad)
or
mov
adc
pop
push
or
pusha
sub
(bad)
pop
shr
dec
xor
mov
fld
pop
sub
rcr
lods
and
sbb
xor
nop
aad
lods
lds
mov
or
sub
jb
pop
or
pusha
jp
shl
in
stos
push
push
add
das
mov
push
or
jns
rol
dec
pop
rol
sbb
xlat
dec
das
mov
dec
add
jnp
out
dec
aas
loope
sub
jge
(bad)
(bad)
jmp
pop
ror
mov
mov
dec
jl
ret
shl
test
sbb
mov
(bad)
addr16
shl
add
std
call
pop
lea
sti
dec
lds
pop
mov
mov
mov
inc
inc
sub
xor
sub
push
xchg
nop
adc
pop
cmp
adc
jno
stc
js
fistp
fisttp
imul
dec
xor
inc
mov
retf
mov
and
sahf
xor
dec
pop
fidiv
add
dec
pushf
push
push
and
out
pop
div
lahf
popa
or
jnp
nop
out
in
jl
mov
add
mov
inc
jo
pop
ja
xor
sub
stos
(bad)
cmp
stos
aad
mov
mov
xchg
pop
retf
add
pushf
adc
jmp
cmp
aam
lods
jecxz
sti
ds
inc
pop
xchg
sub
das
scas
mov
mov
jae
add
pop
sub
mov
sub
jg
data16
inc
inc
(bad)
out
xor
movs
nop
lock
stc
enter
and
loopne
or
(bad)
aaa
aam
mov
adc
mov
fsub
dec
sbb
dec
mov
add
addr16
and
icebp
dec
sub
retf
cmp
inc
xor
inc
dec
mov
mov
fmul
icebp
sahf
push
icebp
xor
and
sub
fwait
es
clc
mov
loop
push
inc
test
pop
out
dec
les
mov
jge
pushf
clc
imul
aam
jp
sub
mov
(bad)
cmp
dec
lea
in
std
call
cmp
bound
pushf
cmp
dec
outs
push
lea
pop
or
xchg
jae
les
xchg
pushf
pop
leave
push
fcom
rol
adc
outs
iret
or
jns
aas
xor
rcr
sbb
xor
adc
mov
cdq
cmp
in
fwait
and
xor
aaa
push
mov
pop
lds
shl
aad
jne
mov
sub
outs
dec
mov
cdq
inc
jle
test
cmp
enter
jle
pop
mov
(bad)
adc
stos
xchg
(bad)
xor
jne
pop
ss
das
scas
imul
es
mov
mov
inc
xchg
pop
inc
sbb
int
pop
stc
(bad)
mov
mov
push
xchg
sbb
jmp
jbe
sbb
lea
cmp
mov
ret
xchg
dec
xor
rcr
outs
arpl
fidiv
push
sub
push
(bad)
sbb
movs
mov
inc
stos
jo
int3
std
(bad)
cld
adc
cmp
inc
push
in
add
cmp
mov
ins
push
mov
sub
stos
dec
jl
repnz
jae
jmp
lahf
push
bound
pushf
pop
sbb
in
cld
(bad)
jmp
mov
sbb
clc
push
push
(bad)
push
scas
fisubr
cwde
cmp
arpl
adc
adc
scas
push
movs
ret
pop
stos
sub
popf
into
add
xchg
out
popf
mov
sar
push
lahf
icebp
fucomi
lock
mov
push
mov
xor
cs
push
sbb
iret
cmps
in
pop
ret
jecxz
jae
fbld
retf
or
pop
dec
enter
enter
xchg
adc
cwde
(bad)
int3
sub
faddp
arpl
dec
cmps
jae
jmp
mov
pop
repz
mov
shr
retf
fisttp
aam
pusha
out
dec
or
sub
nop
dec
push
movs
sub
mov
ss
(bad)
cmps
xor
push
out
ins
out
in
cmc
mov
pcmpeqb
int
push
mov
cmc
xchg
jbe
out
add
fwait
mov
hlt
scas
or
cs
or
jno
cmc
repz
pop
repz
out
nop
and
add
hlt
xchg
data16
dec
adc
bndldx
mov
fist
lods
fnstcw
push
adc
(bad)
and
sub
rcr
out
mov
(bad)
cs
add
mov
aaa
pop
cmp
rol
adc
push
sbb
sub
mov
scas
sbb
and
in
or
dec
xor
dec
and
sub
pmulhuw
leave
add
xlat
jl
popf
repnz
sbb
jp
or
ss
fs
mov
mov
jo
pop
test
dec
mov
mov
or
pop
xor
cmp
mov
fwait
jb
xchg
out
shr
mov
movs
aas
dec
inc
aam
inc
mov
jle
mul
pop
repnz
fwait
dec
fstp
push
jbe
lods
imul
jb
outs
push
cwde
mov
push
sbb
imul
pmuludq
push
scas
cmps
adc
call
and
adc
add
fldcw
dec
sbb
push
push
aaa
test
xchg
aas
icebp
lods
mov
sbb
mov
lock
mov
ss
cs
outs
cmc
add
push
sti
and
sbb
in
pop
fcomi
cmp
xchg
xor
adc
inc
adc
or
dec
and
mov
js
je
mov
sub
bound
xchg
(bad)
push
sbb
xor
mov
xlat
call
xor
push
cs
fstp
pop
sbb
sbb
adc
cmp
inc
or
xchg
fwait
push
imul
imul
hlt
cs
and
dec
sbb
adc
retf
adc
fmul
cld
pop
jmp
popa
mov
pop
shl
inc
sbb
lods
sub
daa
test
loopne
out
out
inc
(bad)
aaa
mov
mov
jg
mov
call
mov
fcom
hlt
adc
(bad)
push
xchg
or
inc
dec
cmp
sar
or
sbb
adc
popf
sar
lock
xchg
mov
push
push
cmp
enter
gs
lds
xlat
jp
test
enter
cld
popf
cmps
adc
adc
adc
and
jns
adc
sub
(bad)
jle
std
ins
out
jecxz
(bad)
jno
les
mov
add
mov
movs
xor
jg
out
xchg
jbe
dec
mov
out
dec
xor
or
outs
push
pop
inc
sbb
je
dec
in
call
cmp
fld
sub
mov
stos
out
jmp
ret
cmp
addr16
sub
mov
repnz
or
sbb
ret
jb
enter
or
(bad)
icebp
std
mov
pop
in
fdivr
jno
mov
dec
fdivr
jno
dec
jb
fs
add
daa
inc
cmp
mov
movs
mov
xchg
(bad)
pushf
push
add
in
push
shl
sub
fcomip
scas
les
pop
jne
push
mov
xchg
fisttp
int3
ss
adc
cdq
add
and
loope
pusha
jmp
jnp
stos
addr16
(bad)
movs
(bad)
pop
sbb
aam
fwait
adc
mov
stos
movs
out
popf
adc
and
adc
cmp
enter
test
lods
test
sbb
arpl
cmp
imul
jno
mov
xchg
shl
or
arpl
pop
push
sbb
repnz
jmp
rcl
inc
add
aad
in
mov
loope
push
in
int3
add
shr
rcl
shl
sbb
pop
pop
nop
sbb
and
jne
mov
mov
push
jmp
loope
add
lahf
shl
mov
cmovae
mov
sar
adc
inc
fstp
push
adc
push
jnp
add
jecxz
mov
add
test
cld
or
call
call
jge
push
das
test
cmp
cmp
pop
add
xchg
mov
cld
fcmove
push
mov
mov
dec
pop
push
or
xor
loop
ror
fs
push
add
add
sub
stc
retf
push
cmps
push
mov
push
cmp
pop
xor
dec
mov
movs
inc
call
imul
xchg
inc
aam
cwde
mov
cmps
popa
mov
(bad)
sub
sbb
aam
ins
mov
retf
adc
stos
jae
push
sub
and
fidivr
cwde
mov
sbb
adc
(bad)
call
or
icebp
ret
push
aaa
inc
xlat
aaa
or
pop
ror
mov
sbb
sbb
add
popf
aas
jg
pop
ret
lock
and
sti
pop
jmp
mov
leave
xchg
jnp
xor
aas
add
data16
pop
mov
xchg
clc
sub
(bad)
xor
sub
push
sahf
pop
outs
ds
out
fsubr
cmp
pop
or
cmp
jl
movs
aam
(bad)
shl
inc
and
xlat
add
popf
test
jno
ins
adc
adc
loop
pop
xor
sub
pushf
dec
lds
or
inc
inc
shl
ja
xchg
shr
ins
mov
test
scas
cld
xchg
xor
(bad)
jp
std
out
in
mov
inc
shr
pusha
push
sahf
(bad)
imul
mov
loopne
xor
adc
jne
shl
out
jne
dec
loope
ret
scas
mov
jecxz
stos
movs
pop
sbb
cmp
inc
retf
call
inc
push
sbb
cmp
(bad)
mov
xlat
test
xchg
xor
(bad)
jecxz
pop
add
pusha
push
pop
add
fcomp
fisttp
gs
xchg
inc
nop
imul
push
iret
or
xchg
retf
jecxz
mov
mov
push
dec
dec
mov
pop
imul
in
sbb
adc
push
(bad)
out
in
xchg
push
cmp
push
inc
xor
adc
push
mov
xadd
divps
and
leave
jmp
push
and
xchg
sar
es
ds
adc
jmp
rcr
lea
scas
sar
movs
xor
adc
lea
adc
mov
in
pop
push
test
inc
out
fidiv
xor
xchg
rol
push
fldcw
(bad)
or
pop
daa
call
arpl
(bad)
clc
mov
adc
sbb
or
test
jle
or
fdivp
xchg
dec
cld
cli
clc
xchg
aas
(bad)
jo
loope
mov
cmp
(bad)
jmp
cmp
add
(bad)
xchg
mov
aam
mov
add
mov
mov
push
aam
pop
dec
fucomip
add
mov
hlt
test
adc
fbstp
out
popf
sbb
movs
dec
mov
loop
shl
jle
sbb
add
jne
mov
sub
hlt
ins
mov
xor
out
in
js
je
mov
sbb
xor
mov
dec
ds
pop
jl
(bad)
inc
adc
inc
rcl
sub
xchg
fimul
(bad)
popf
mov
cmps
mov
push
push
(bad)
(bad)
int3
adc
xchg
mov
repnz
xor
shr
pop
adc
jge
punpcklwd
adc
sub
dec
pop
ffreep
jbe
add
bound
mov
adc
shr
jl
cli
push
lahf
or
pop
push
test
xor
mov
add
mov
add
pushf
push
imul
test
jl
dec
push
mov
adc
dec
push
pusha
ds
xchg
mov
addr16
inc
sar
or
nop
sysexit
mov
or
sbb
pop
jno
pop
or
xchg
or
int
sahf
jbe
push
adc
dec
sti
inc
stos
pop
xor
ss
fidivr
ret
enter
sbb
(bad)
xor
mov
dec
hlt
sar
cmp
pop
clc
mov
cmp
cmp
or
xlat
xchg
test
pop
icebp
mov
shl
add
or
popa
adc
adc
mov
and
mov
scas
dec
mov
push
push
fldenv
inc
fiadd
les
sub
inc
xchg
sub
fidiv
dec
jmp
inc
gs
push
fadd
call
mov
xor
fcomp
jo
sar
and
pop
icebp
pop
test
mov
cmps
push
push
retf
sbb
add
jbe
lock
sub
aaa
pop
in
call
adc
push
aas
sub
sub
inc
movs
xchg
inc
mov
mov
pop
inc
nop
or
add
je
cmp
(bad)
adc
dec
mov
sbb
cwde
bound
mov
cmp
imul
loop
cs
(bad)
mov
ficomp
pusha
and
inc
mov
cmp
leave
mov
jecxz
mov
(bad)
jb
les
xchg
xor
lahf
jo
push
sub
icebp
imul
pusha
xor
arpl
add
aaa
pop
stos
int
ret
aas
mov
repnz
out
add
push
xchg
mov
mov
inc
js
mov
mov
sub
jae
or
repz
in
(bad)
lea
sub
icebp
mov
lea
mov
repz
mov
jmp
mov
stc
jmp
push
xor
adc
adc
jae
loop
movs
push
push
dec
(bad)
add
jbe
sti
jge
fst
rcr
or
jbe
jl
inc
dec
retf
xor
xor
sbb
lods
into
mov
retf
test
mov
int3
(bad)
repnz
add
repz
loop
call
push
movs
adc
jecxz
jno
pusha
push
cmp
daa
std
lds
inc
dec
lds
sub
loop
imul
dec
dec
(bad)
retf
(bad)
pop
mov
mov
mov
fcomp
or
and
mov
lea
loopne
cmp
int
pop
jg
popa
iret
in
xchg
das
pop
scas
pop
inc
inc
add
cmp
(bad)
mov
mov
sar
add
ins
out
pop
dec
repnz
xchg
mov
movq
push
cdq
mov
jne
sub
(bad)
shl
pop
or
pop
and
mov
hlt
aam
xor
nop
shl
mov
scas
pop
mov
aad
pop
adc
and
lods
out
push
jge
lahf
leave
mov
fdiv
jnp
add
pop
fidiv
(bad)
adc
mov
mov
inc
adc
aas
sbb
push
inc
mov
xor
cmp
sub
fadd
mov
fnsave
dec
nop
ss
loop
xchg
cdq
push
mov
xchg
dec
and
stc
mov
cmp
inc
add
test
jmp
jge
mov
xor
inc
and
ficomp
mov
sbb
cld
jns
inc
(bad)
xchg
ret
push
mov
dec
inc
out
stos
fwait
push
(bad)
mov
inc
pop
std
mov
and
xchg
ins
add
xlat
cmps
ficomp
aaa
pop
not
add
mov
mov
add
leave
enter
mov
es
and
xor
pusha
inc
xchg
rcr
xchg
movs
and
rcl
inc
std
pop
inc
mov
sbb
test
cmps
lds
mov
add
pop
and
(bad)
push
cs
dec
rcl
inc
mov
rol
das
mov
fld
cli
lods
lahf
or
fmul
ds
ret
push
ror
mov
and
shr
inc
dec
dec
out
add
in
push
mov
daa
fisubr
mov
sti
add
fs
cmp
sbb
inc
sbb
push
push
loop
mov
mov
sbb
cmp
pop
xor
nop
sbb
xor
loope
or
pop
sub
fmul
sbb
shr
push
dec
call
in
adc
add
cmc
cmps
jge
mov
push
out
adc
jecxz
adc
retf
clc
dec
and
xor
mov
ds
(bad)
mov
and
xor
mov
fwait
mov
xchg
ret
add
xor
imul
dec
rcr
xchg
call
inc
add
xor
inc
xchg
lahf
mov
sbb
or
xor
xchg
lea
jne
mov
aaa
repz
out
jecxz
add
das
addr16
and
or
xor
dec
or
jmp
enter
and
mov
push
out
call
(bad)
cmps
les
cwde
fldenv
cmp
pop
sub
pop
pop
pop
pop
mov
in
ror
mov
cli
(bad)
sbb
sti
xchg
fwait
enter
fs
fld
les
sbb
push
faddp
mov
movs
lahf
pop
ret
call
cmc
mov
or
add
popa
xor
push
fwait
jmp
cmp
outs
inc
sbb
movs
adc
and
cli
pmovmskb
iret
xchg
cmp
inc
jno
out
mov
iret
dec
push
pop
pop
ss
leave
iret
dec
jl
div
add
jmp
jg
int
lea
mov
ds
mov
cmp
fdivr
cmp
(bad)
repz
jmp
adc
push
xor
push
into
rol
xor
(bad)
std
jne
in
fisttp
mov
push
pusha
adc
and
aad
in
cmps
aas
or
retf
stos
xor
dec
add
push
dec
xor
scas
aaa
or
adc
push
or
js
daa
std
ja
ss
fnsave
les
jnp
pop
(bad)
jmp
stos
or
xlat
out
pushf
add
popf
xchg
scas
mov
jmp
push
sbb
and
mov
sub
push
mov
rcr
gs
jno
pop
sbb
aaa
or
fisub
lods
dec
xchg
jne
dec
adc
out
or
std
xchg
mov
jmp
mov
adc
fisttp
sbb
xor
jne
xchg
es
mov
sti
jbe
cmp
jb
loope
pop
imul
les
jge
shr
mov
inc
lea
xchg
into
and
retf
push
mov
test
addr16
dec
sbb
fistp
js
cli
xor
sahf
jae
stos
push
jp
and
or
fcmove
push
lds
push
mov
dec
or
inc
adc
push
movs
jp
jne
xchg
push
inc
adc
mov
loopne
inc
call
fisubr
add
fld
jg
adc
lds
(bad)
stc
shl
pop
dec
into
(bad)
out
cmp
das
mov
ret
and
mov
or
in
mov
sub
cwde
sbb
neg
xor
or
cmp
fistp
xchg
sub
cmp
aam
scas
rol
lea
jmp
in
push
std
and
mov
pop
and
mov
imul
ja
pop
sub
push
push
dec
out
xor
and
xchg
mov
and
pop
jmp
shr
rol
mov
push
fstp
mov
in
xchg
or
push
out
sub
repz
shr
leave
ja
retf
mov
cmps
sub
sub
jb
push
fdivr
push
adc
iret
push
cli
mov
dec
mov
pop
inc
lock
dec
mov
loopne
popa
lods
xor
fsub
lods
icebp
xor
cmps
adc
adc
pop
sbb
stos
clc
add
pop
xor
and
push
xchg
pop
inc
mov
in
mov
sub
icebp
xchg
push
dec
mov
loop
ret
or
dec
add
or
mov
add
adc
and
push
adc
mov
mov
dec
(bad)
and
push
xor
mov
scas
sbb
mov
mov
xchg
bound
in
fstp
cmp
and
xchg
sbb
and
jnp
mov
or
sahf
xchg
cwde
and
mov
inc
push
jne
sub
retf
jnp
icebp
fwait
lods
xchg
push
cmps
push
cmc
sti
xchg
add
js
jnp
xchg
sbb
pop
aam
cmp
cmp
sub
push
mov
aam
inc
pop
add
scas
int
push
add
aam
mov
inc
lds
je
xor
mov
mov
inc
rcr
add
push
lods
push
mov
sub
(bad)
stos
pop
(bad)
in
adc
jge
enter
ss
leave
pop
inc
jbe
(bad)
shl
(bad)
in
nop
add
mov
stc
cmps
xor
lahf
push
xchg
sub
cli
in
outs
loop
addr16
inc
or
data16
pop
sub
pop
pop
sub
dec
xchg
pop
nop
push
mov
cdq
xchg
dec
sub
push
xchg
pop
fwait
mov
xor
sub
push
fadd
jne
and
pop
jmp
dec
inc
mov
call
fnstcw
es
push
lods
jecxz
dec
mov
pusha
inc
xchg
push
push
adc
sbb
inc
jno
inc
dec
jne
add
sbb
jns
fisub
ss
call
retf
sub
add
test
fmul
pop
fmul
stos
dec
out
inc
or
addr16
xor
sbb
xchg
mov
retf
sub
lods
adc
rcl
(bad)
xor
imul
imul
lods
add
or
xor
sub
fbld
push
mov
mov
xchg
pop
jnp
xchg
adc
cmp
mov
fmul
pop
lods
ins
imul
stc
or
js
mov
ret
arpl
pop
and
xchg
aam
sub
call
and
call
scas
ret
cmc
sti
leave
fcom
(bad)
pusha
repz
rcl
add
pop
inc
in
xor
and
ss
iret
dec
lods
dec
repz
pop
mov
jl
adc
push
sbb
arpl
pop
dec
call
lods
test
or
ret
add
or
mov
es
sbb
jg
jne
popa
dec
xchg
gs
inc
add
movs
mov
sbb
out
jp
std
aaa
xlat
shl
sbb
xchg
jne
iret
data16
xchg
adc
test
mov
adc
ja
pop
lods
xor
xchg
xor
cdq
sbb
push
fdiv
in
call
jb
(bad)
or
xchg
adc
imul
out
jl
jne
stos
inc
ret
push
ffree
les
(bad)
cmp
leave
jae
dec
in
push
push
and
inc
xor
es
cmc
lds
ss
jbe
xor
arpl
pop
xchg
add
and
xchg
sbb
call
in
dec
ins
shl
add
mov
movs
cmp
inc
xchg
mov
jb
ds
push
xor
les
ins
cmps
push
xchg
mov
iret
jle
pusha
lahf
xchg
stos
adc
jl
adc
rcl
cmp
adc
call
test
xchg
xchg
sbb
sbb
push
xchg
jo
test
pop
nop
jne
shl
ins
add
and
fmul
cwde
jle
xchg
pop
mov
mov
shr
pop
push
fcom
fcom
fbld
mov
mov
mov
mov
ret
add
pop
nop
cld
aas
push
pop
dec
sbb
neg
add
pop
ins
xor
xchg
lahf
call
sbb
ret
pop
hlt
leave
push
jle
pop
cs
sbb
xchg
mov
sbb
sbb
pxor
je
popa
or
cmps
push
jns
test
sti
inc
jnp
xchg
mov
test
(bad)
push
push
stos
jbe
fs
cmovo
aaa
dec
fwait
cmps
ss
scas
movs
jl
pop
mov
jae
jle
mov
jbe
das
push
sahf
das
inc
mov
(bad)
fstp
popa
jecxz
inc
mov
xor
dec
lods
jbe
inc
fs
and
repz
repnz
lea
fild
enter
nop
pusha
loopne
arpl
std
mov
or
stc
pop
in
sti
popf
ret
iret
inc
retf
jne
and
(bad)
je
push
std
xlat
pusha
push
rcl
lea
sbb
aad
and
mov
mov
rcl
das
push
sub
inc
jg
push
ret
fwait
jle
dec
push
inc
fst
cmps
cmp
inc
adc
addr16
(bad)
dec
push
and
jg
mov
pop
icebp
adc
scas
adc
push
push
lods
das
xor
mov
jno
cdq
add
jae
add
pop
adc
cmp
inc
or
gs
rol
icebp
in
aaa
js
or
loope
idiv
mov
stos
arpl
xor
push
rcr
pop
jmp
xchg
cmp
sbb
cld
mov
ins
daa
imul
cmc
xchg
push
lds
imul
or
xchg
mov
das
jb
add
arpl
stos
test
enter
(bad)
jb
cmp
sbb
pop
pop
sbb
cmp
push
idiv
and
add
scas
jmp
fwait
stos
fs
ret
dec
mov
test
(bad)
pop
fs
sub
cwde
out
out
add
popf
popa
arpl
pop
out
xlat
xor
xchg
(bad)
sbb
data16
adc
cld
out
inc
mov
or
and
pop
xor
sbb
sbb
xrelease
adc
sbb
js
and
mov
(bad)
outs
mov
cmp
popf
push
and
stos
les
mov
jg
(bad)
mov
shl
mov
sub
mov
adc
adc
cwde
mov
inc
(bad)
or
movs
(bad)
lods
inc
xor
mov
test
sbb
bound
je
aam
cmc
xor
les
mov
dec
nop
rol
nop
xor
dec
ds
mov
mov
in
std
daa
cld
addr16
pop
xor
push
mov
add
xor
scas
inc
pop
loop
add
sbb
mov
das
daa
ficomp
aas
in
pushf
cli
iret
dec
movs
mov
pop
xlat
repnz
rep
aam
movs
div
inc
mov
jg
ins
dec
mov
add
cmps
fsubr
mov
xor
push
cmp
sub
adc
sub
sahf
adc
mov
mov
ss
call
mov
mov
test
outs
jg
jo
pop
mov
out
lds
lods
popa
inc
adc
sbb
pop
dec
loopne
rol
stos
repnz
inc
cwde
stc
jl
jno
mov
pusha
(bad)
shr
xor
out
in
fdivr
je
xor
out
test
mov
dec
cmp
xor
push
xchg
or
stos
mov
and
(bad)
jmp
mov
mov
out
and
fcompp
scas
adc
cmc
adc
push
dec
xchg
(bad)
jg
or
push
add
into
or
dec
aas
outs
sar
popf
lea
and
sahf
xchg
fist
jge
inc
out
out
cmp
into
jb
push
and
pop
xor
sahf
sub
(bad)
and
sahf
pop
cmc
dec
jg
xchg
rcl
les
push
test
pop
pop
sub
(bad)
aaa
int3
lods
xchg
dec
sub
lahf
add
dec
add
fwait
add
out
fild
retf
ret
pop
out
in
ret
inc
mov
loope
stos
xchg
leave
mov
adc
nop
(bad)
arpl
into
jmp
add
pop
mov
stc
push
jo
xor
enter
cmp
and
data16
jnp
stos
fld
lods
add
stos
xchg
mov
jne
mov
repz
call
test
cmp
push
mov
sahf
or
cwde
hlt
or
push
jns
mov
fisttp
mov
fdivr
mov
cmp
mov
pop
xchg
shl
jmp
push
in
xchg
(bad)
add
mov
jge
xchg
imul
loopne
lods
cmps
mov
add
cmc
fild
pop
mov
ss
rol
fld
out
jmp
fnstsw
sbb
cvttps2pi
add
push
loopne
imul
je
and
cmp
dec
outs
lds
and
cmp
inc
in
js
idiv
out
rol
(bad)
inc
je
retf
or
mov
icebp
sub
call
sbb
imul
bound
xchg
xor
xchg
jmp
jb
adc
in
cmps
sbb
cmp
sbb
loopne
bound
repnz
je
or
jmp
and
imul
out
adc
movs
cli
es
pusha
xchg
lds
pusha
xchg
stos
repnz
mov
mov
daa
sub
dec
enter
dec
in
cmps
jmp
mov
daa
enter
push
sub
jmp
scas
inc
cmp
inc
rol
outs
lods
push
dec
dec
jbe
out
cmp
mov
sar
and
adc
sbb
cmp
or
int
push
inc
neg
cwde
cmp
(bad)
scas
mov
test
add
add
mov
fwait
rcr
fnstenv
sbb
cmp
scas
mov
daa
add
ss
mov
(bad)
or
pop
pop
cmp
jo
push
adc
hlt
imul
loopne
ins
sbb
movs
rcl
sub
adc
(bad)
xchg
jmp
adc
push
cmp
or
xor
push
int
je
cwde
das
and
(bad)
out
xor
mov
stos
aaa
cmps
add
sub
out
mov
dec
add
dec
jbe
fmul
xchg
or
sahf
sti
jae
or
daa
xor
sahf
mov
(bad)
mov
push
pop
ins
ret
(bad)
in
xchg
sbb
adc
out
adc
shr
jmp
in
xor
sub
mov
shl
mov
mov
in
adc
fmul
jmp
push
add
mov
bound
xchg
mov
xchg
mov
js
mov
mov
and
sub
arpl
fimul
xchg
fstp
dec
add
dec
pop
xchg
addr16
mov
xchg
(bad)
push
aam
xchg
mov
cdq
(bad)
arpl
sbb
ror
imul
movs
and
xor
aas
mov
movd
jge
push
(bad)
dec
mov
sub
jnp
dec
test
inc
(bad)
icebp
jl
xchg
(bad)
enter
sbb
lods
repnz
data16
xor
lods
pushf
jle
xchg
imul
pop
sub
pop
cld
jns
ins
or
jmp
outs
or
fidivr
cdq
cwde
push
fabs
imul
pop
outs
or
jbe
push
outs
pop
adc
ret
sub
jmp
push
cmp
inc
sahf
daa
fistp
repz
add
xor
retf
xlat
rol
test
jae
in
push
or
pop
repz
inc
xlat
les
cli
int
(bad)
call
aam
lock
stos
mov
add
mov
or
sbb
sbb
inc
dec
popf
std
sbb
iret
mov
sbb
imul
mov
xchg
fnstcw
ret
mov
add
gs
add
xor
mov
test
in
fst
pushf
(bad)
push
aad
mov
daa
hlt
retf
jb
lock
xchg
rol
fwait
cmp
rcr
push
dec
cmp
push
lock
dec
loopne
(bad)
mov
mov
clc
mov
vpcmpeqw
push
imul
outs
inc
xchg
int3
jmp
fwait
loopne
fisub
dec
enter
lods
into
cmc
sub
imul
mov
mov
cmp
push
cmps
fwait
pop
inc
lock
mov
jle
jge
mov
clc
fimul
xchg
not
call
aad
jo
dec
inc
lahf
in
add
cmc
mov
and
pop
ins
sub
sbb
cmps
scas
clc
(bad)
adc
icebp
mov
in
xlat
add
sub
pop
mov
rcr
xor
add
mov
cwde
sbb
pop
cmp
loopne
sub
paddsb
jmp
pop
jmp
inc
cmc
pushf
in
pop
loopne
mov
lods
push
imul
inc
xor
loopne
shl
es
jns
sar
sbb
adc
sti
xchg
fidiv
les
adc
(bad)
mov
test
xchg
jmp
hlt
loopne
in
mov
sti
sti
add
mov
test
add
push
or
sbb
std
jb
jns
mov
sbb
daa
gs
xor
jmp
push
aas
jp
add
cmp
mov
scas
xchg
pusha
sbb
addr16
ins
hlt
ror
jl
push
add
mov
push
mov
shl
dec
xchg
sbb
or
push
xor
shr
cmp
ds
hlt
sbb
ins
sub
scas
jmp
cmp
inc
loop
(bad)
clc
loope
xchg
popf
nop
into
push
cmp
dec
mov
int3
jmp
jbe
lds
xor
inc
je
dec
xchg
fstp
push
dec
pop
inc
dec
mov
xchg
in
and
gs
pop
lea
cmps
and
rol
pusha
mov
push
lods
cmc
inc
aad
adc
sar
push
push
cs
pop
push
mov
adc
mov
or
fistp
pushf
dec
in
test
rcl
push
in
mov
dec
jecxz
scas
movs
fisub
fwait
and
xlat
mov
iret
mov
cdq
lock
mov
mov
cmps
test
repnz
inc
xor
jge
push
dec
cmp
movs
fistp
ret
cmp
cld
cmps
stc
std
mov
outs
in
mov
in
loop
(bad)
out
popf
add
enter
movs
jg
dec
cmps
and
(bad)
out
mov
lock
pop
sbb
pop
mov
js
stos
movs
inc
xor
daa
xor
dec
adc
pop
mov
stos
fs
cmp
jle
ins
stos
jbe
sub
xor
int3
clc
(bad)
rol
jmp
mov
and
pop
bnd
or
xchg
les
jmp
mov
sub
mov
(bad)
dec
jmp
test
int3
pop
fisttp
push
mov
test
add
aas
jae
iret
hlt
xchg
shl
pop
jl
jo
and
xchg
push
test
sar
mov
js
shl
push
fsubr
inc
cmps
sbb
mov
ins
sbb
push
mov
xor
test
sub
ret
fwait
std
push
into
neg
inc
mov
mov
fisubr
fidiv
ret
les
jmp
retf
mov
xchg
ja
lods
jmp
cmp
xor
fwait
outs
or
push
ins
repnz
js
jb
mov
mov
shl
adc
sbb
push
push
test
mov
jecxz
cwde
mov
jecxz
mov
dec
enter
aad
out
mov
xchg
jmp
mov
cmp
pop
push
adc
pushf
jne
add
out
cmp
imul
(bad)
jo
or
(bad)
test
pop
and
adc
xor
idiv
push
repnz
int3
std
dec
pop
int
movs
lahf
xchg
test
gs
imul
(bad)
adc
scas
or
(bad)
or
add
mov
sub
rcr
lods
xchg
retf
sti
(bad)
and
outs
cmc
retf
(bad)
aam
cmc
xrelease
frstor
lds
setb
mov
bound
mov
pop
pop
sbb
stos
or
lods
mov
lds
test
jno
push
idiv
jge
push
mov
inc
iret
adc
in
out
sub
mov
sub
cmp
or
mov
xor
add
std
xor
cmovnp
(bad)
es
jne
adc
out
dec
or
xchg
and
add
popa
arpl
push
lahf
inc
shld
stos
dec
nop
and
inc
fistp
imul
stos
adc
inc
push
in
fiadd
xchg
xchg
dec
add
aad
cmp
xor
or
sbb
iret
lea
lods
cmp
pop
push
lds
loopne
fdiv
xor
in
cmp
adc
loopne
fwait
(bad)
cmc
out
and
mov
jle
jp
jno
adc
pop
imul
xchg
mov
js
fimul
add
or
aad
mov
xchg
je
mov
inc
ss
mov
push
test
and
dec
iret
call
dec
cmp
xor
adc
and
mov
outs
out
loopne
xor
stc
fadd
cmp
fisttp
sub
pop
pop
dec
inc
push
(bad)
jbe
push
pushf
pusha
aaa
rcl
push
jmp
dec
rcr
add
aam
inc
inc
inc
ds
out
mov
jbe
fisubr
push
movs
test
popf
shl
push
push
jmp
(bad)
xlat
mov
xor
imul
popa
mov
test
aas
xchg
fadd
ja
cmps
jne
push
adc
not
pop
aam
cmp
nop
xchg
push
in
mov
iret
in
cs
or
rcl
lahf
push
mov
pop
ror
call
mov
ins
fcom
jno
out
dec
and
jmp
jb
xchg
mov
jnp
mov
aaa
sbb
iret
mov
test
adc
cmp
fdiv
xor
push
pop
scas
clc
stc
out
stos
dec
lods
pushf
cmc
int3
(bad)
sub
add
arpl
xchg
jp
and
or
nop
hlt
xchg
out
fwait
gs
fst
adc
dec
jecxz
popa
mov
cli
inc
jmp
scas
inc
outs
lds
mov
xchg
test
and
out
rcr
mov
push
test
aad
mov
cwde
or
jmp
sbb
neg
xlat
imul
retfw
or
dec
adc
ins
ins
pop
test
loope
pop
push
mov
xchg
dec
cmp
pop
mov
scas
pop
addr16
fucom
lock
cmp
mov
fcomp
cdq
adc
pop
inc
push
cmp
cmovl
xor
cdq
push
adc
loop
mov
mov
mov
sub
and
loop
jbe
(bad)
(bad)
mov
fistp
mov
mov
pop
fdivp
test
cdq
xchg
shr
mov
sbb
test
popf
fsub
push
xchg
sbb
icebp
repnz
test
enter
retf
data16
mov
xchg
pop
cmp
push
push
sbb
call
outs
jne
push
retf
stc
sbb
in
add
push
cs
sub
push
call
push
or
inc
cli
pop
pop
mov
stos
pop
inc
cld
fcom
add
xor
addr16
aad
jae
(bad)
jae
push
mov
aaa
mov
pop
cmps
push
loope
fbld
xchg
sahf
call
sbb
push
fcom
xchg
xlat
daa
sbb
jge
lds
ja
jmp
les
out
pop
mov
cmp
adc
les
ins
inc
dec
loope
and
and
pop
cmp
xor
and
jno
cmp
sub
or
dec
fs
sahf
mov
mov
hlt
lods
push
adc
adc
xchg
loopne
add
pop
pop
jl
mov
pop
daa
fwait
idiv
out
push
(bad)
pop
pop
aad
outs
jnp
mov
ficom
std
sbb
out
in
enter
inc
add
and
add
repnz
jno
pusha
xchg
mov
outs
rcr
and
push
cmp
sub
adc
add
and
add
inc
pop
sar
sti
fstp
cmps
cmps
jp
mov
cmps
jb
push
popf
add
jae
sbb
mov
dec
shl
adc
aas
lahf
scas
test
sahf
pop
in
ror
out
cmp
inc
inc
mov
sahf
mov
xchg
jno
inc
xchg
lock
popa
sub
adc
in
call
mov
pushf
xor
aam
adc
xchg
xchg
test
mov
push
mov
mov
mov
cmp
out
xor
test
and
int
xor
enter
shl
sub
shl
xchg
sahf
retf
in
mov
fsubr
outs
and
in
jae
jmp
bound
dec
(bad)
enter
nop
bswap
adc
push
repnz
or
(bad)
xchg
sub
retf
aad
push
pop
mov
push
xchg
pusha
pop
hlt
icebp
push
icebp
push
push
sub
fwait
popf
cmp
pop
jbe
xchg
out
push
cmp
aad
push
das
cmp
(bad)
clc
adc
jb
or
in
shr
aas
test
sbb
in
in
add
mov
in
stos
add
lahf
push
stos
std
push
dec
jl
inc
sub
jne
ret
repz
mov
push
sub
(bad)
loope
add
std
add
add
popf
dec
fimul
mov
push
test
scas
icebp
lods
jns
(bad)
daa
lods
add
call
jp
enter
lea
inc
aam
mov
push
add
or
icebp
movs
imul
iret
jl
shr
daa
clc
jmp
das
stos
in
shr
inc
call
sbb
xchg
dec
push
and
jmp
pushf
test
lods
pop
cmps
cmps
and
and
xlat
rol
jp
cmp
packssdw
sub
ficom
add
aaa
push
sbb
or
outs
out
shl
mov
jns
int
loope
je
iret
sub
inc
loopne
scas
arpl
cld
or
push
out
sub
ds
or
xor
push
adc
push
xchg
hlt
jle
push
push
xchg
xor
mov
dec
mov
inc
push
pop
rcr
outs
outs
mov
sbb
sub
dec
lods
enter
and
push
adc
sbb
lds
jmp
inc
dec
dec
push
aad
imul
ds
sbb
je
push
xchg
add
xor
test
call
xor
mov
je
ds
fucomi
adc
mov
pop
fwait
repnz
fldcw
push
and
sub
in
sub
xor
cmp
out
add
mov
mov
fidivr
mov
sub
or
scas
sti
cmps
fcomip
imul
cs
mov
push
push
xchg
jbe
out
lahf
imul
or
xlat
popf
inc
xor
outs
fsub
inc
ror
in
push
mov
(bad)
adc
mov
imul
je
aaa
(bad)
sbb
sbb
adc
xor
js
mov
pop
scas
sub
stos
test
out
xor
call
int3
jmp
rol
sbb
fwait
int
xor
sub
push
mov
popa
aaa
push
mov
mov
pop
test
jmp
inc
fs
push
sar
dec
fidiv
fsin
sbb
jbe
inc
cmps
jmp
xor
dec
mov
or
push
div
ss
clc
push
inc
mov
into
jno
adc
mov
xchg
xor
int3
xchg
lods
in
mov
(bad)
loopne
sub
dec
inc
push
aas
out
rcl
add
repz
sub
sbb
or
leave
or
xor
and
pop
mov
loope
mov
sbb
jmp
xchg
and
(bad)
mov
push
push
cwde
sahf
outs
ss
pushf
bound
aad
or
dec
pop
push
jnp
or
mov
loop
pmullw
sti
pop
dec
sub
sub
push
loope
je
adc
scas
mov
call
push
mov
xor
fs
push
lea
add
div
push
cli
pop
or
xchg
ins
mov
cmp
popa
test
shl
sbb
pop
mov
fs
aam
ins
or
dec
adc
jl
or
imul
call
outs
inc
mov
scas
xchg
jmp
in
pop
mov
add
mov
dec
push
sub
inc
outs
mov
sti
sbb
pop
cmp
cmp
sbb
rcr
ftst
es
cmp
leave
lock
sub
into
sbb
push
test
mov
inc
sub
sahf
dec
dec
sub
add
scas
add
sub
jp
xchg
adc
mov
fs
aad
std
inc
and
rol
mov
outs
or
hlt
push
aaa
xchg
jb
test
shl
es
addr16
mov
cmc
pushf
jne
retf
scas
push
int3
or
add
in
inc
das
stc
arpl
test
xchg
pop
daa
mov
out
in
or
cld
shl
fstp
inc
xor
rol
mov
std
inc
test
imul
or
jge
or
(bad)
daa
mov
mov
shr
inc
mov
out
ins
mov
jo
dec
jmp
sti
adc
mov
or
lock
jl
out
in
dec
hlt
ffree
enter
mov
pusha
jg
add
(bad)
jmp
repz
inc
aad
imul
pop
(bad)
in
or
std
(bad)
ficomp
(bad)
test
jp
jmp
imul
push
das
mov
xchg
(bad)
les
in
adc
pop
inc
shl
out
cdq
xor
push
sub
cmps
cmps
adc
add
jno
shl
mov
jb
or
xchg
popa
inc
fist
repz
xor
popa
sahf
push
ret
pop
xchg
jp
dec
dec
xchg
shr
cmp
out
and
rcr
push
rol
jo
mov
dec
mov
push
pop
std
xlat
dec
nop
or
cs
push
dec
sub
sub
xchg
adc
clc
je
mov
in
outs
fsubrp
mov
jecxz
xchg
cmp
mov
aas
and
cmp
jmp
div
and
dec
stos
fld
test
gs
sbb
jns
mov
movs
sub
add
sahf
ins
dec
sahf
hlt
mov
mov
push
das
or
fstp
xchg
jl
cmp
jle
stos
xchg
dec
stos
mov
loopne
outs
push
adc
cmp
push
xchg
daa
popf
jbe
pop
aaa
add
xor
and
dec
push
xchg
and
call
sub
nop
jl
pop
xor
adc
pop
sub
call
pop
adc
outs
pop
dec
sub
out
cmps
sub
test
inc
call
add
in
mov
xor
movs
xchg
(bad)
repz
jns
scas
or
shr
sbb
je
(bad)
stos
outs
nop
inc
call
stos
and
xchg
adc
ret
mov
mov
sbb
fidiv
mov
inc
push
push
jmp
shl
cs
(bad)
repnz
jno
and
sub
sbb
push
gs
test
sbb
in
faddp
lock
adc
cmp
jmp
pop
add
cdq
mov
xchg
imul
(bad)
call
inc
scas
(bad)
xor
mov
mov
xchg
lahf
push
loop
addr16
mov
mov
mov
fwait
pop
rcl
mov
ret
loope
jo
jns
dec
inc
adc
xchg
add
(bad)
addr16
enter
add
cmp
clc
pop
mov
and
enter
icebp
lods
mov
sub
push
inc
fs
dec
mov
xchg
lock
xor
cmp
stos
cwde
push
lods
cdq
test
(bad)
mov
mov
xlat
mov
(bad)
sar
dec
call
stos
mov
neg
aad
xlat
sub
js
jl
loop
adc
mov
fst
jbe
psrlq
scas
xor
fsub
dec
mov
imul
jne
add
jno
call
scas
jnp
or
sbb
mov
dec
push
imul
imul
popf
pop
and
mov
mov
imul
mov
ficomp
scas
jmp
jg
mov
fwait
cmps
jmp
xor
les
retf
xor
aas
ret
fstp
aam
(bad)
jno
cs
int3
daa
sahf
es
mov
jg
not
or
enter
fst
sbb
mov
lahf
or
adc
jnp
mov
into
push
inc
pusha
aad
ret
push
fldenv
es
sub
xor
xor
mov
call
enter
mov
test
mov
pop
mov
sti
pop
push
cld
pushf
dec
or
sbb
jge
mov
mov
xchg
lods
mov
inc
or
and
aas
ficom
mov
mov
fs
mov
ja
mov
adc
ds
jle
and
jno
(bad)
mov
scas
xchg
hlt
push
and
jp
ins
xchg
xchg
sub
jle
je
mov
jne
sbb
sub
push
es
sub
mov
imul
dec
(bad)
sahf
stc
sbb
(bad)
pop
jg
mov
xor
and
pop
add
addr16
add
ss
add
sbb
cmp
aaa
dec
add
adc
in
js
(bad)
popf
adc
(bad)
nop
xor
loop
(bad)
dec
jae
or
pusha
jmp
ins
add
sahf
mov
stos
cli
fwait
je
adc
iret
ror
fsubr
jae
in
cmp
dec
call
mov
push
inc
pop
daa
icebp
cmp
push
cmp
xor
xor
test
rol
sub
int3
clc
fimul
out
jno
dec
lock
ins
jge
in
push
pop
fnstenv
xchg
sub
jno
popa
sar
sub
les
les
dec
test
jmp
bnd
jo
xchg
dec
push
add
mov
scas
xchg
cmps
addr16
test
test
push
lock
jo
(bad)
jae
stos
mov
jle
jmp
sbb
push
fist
and
and
adc
xchg
push
ret
mov
and
ret
mov
jmp
or
jnp
mov
sti
loop
and
mov
ficom
xlat
loop
in
std
jbe
je
das
jge
cmps
xchg
cld
stc
cli
bound
in
jnp
sbb
sbb
and
and
test
push
push
push
imul
mov
rcr
popa
add
jmp
int3
cwde
cmps
mov
fsubp
pop
ror
cmp
stos
sbb
neg
enter
rep
hlt
push
jb
pushf
popf
mov
aam
popf
daa
cmp
sub
nop
mov
push
sar
lods
pop
(bad)
pop
adc
xchg
sbb
out
add
xor
or
out
dec
lods
mov
or
jmp
imul
mov
cmc
jg
daa
xor
dec
jbe
push
out
add
jl
push
into
push
sub
sub
lods
mov
push
into
cmp
bound
pop
inc
rol
cmp
(bad)
jge
ins
inc
mov
adc
mov
jb
mov
sbb
ror
xchg
stos
and
cs
jno
fdivr
mov
add
dec
les
sti
sub
sub
(bad)
cwde
mov
cmp
into
retf
repz
sub
jp
fcom
cmp
xlat
mov
pop
popf
push
enter
mov
test
cmp
xor
cmp
sub
fisubr
or
popa
sbb
mov
inc
cmp
xor
jbe
ins
mov
movs
les
push
xchg
in
sbb
xor
test
jns
mov
std
in
cld
mov
inc
or
and
in
adc
xchg
fild
mov
jecxz
add
push
sbb
inc
fs
and
push
mov
lods
mov
out
mov
xor
test
lahf
or
pushf
push
push
aad
mov
add
popf
adc
adc
and
jne
xor
mov
inc
in
rcr
shl
sub
push
jg
rol
jnp
in
push
enter
sub
les
mov
dec
jo
popf
mov
pop
push
jmp
dec
inc
jbe
ds
test
(bad)
mov
cmc
iret
xchg
or
addr16
pop
xchg
mov
mov
arpl
xchg
add
or
and
mov
cld
mov
cld
xchg
jge
mov
aaa
(bad)
rcl
mov
jne
(bad)
xchg
jno
jp
outs
scas
and
pop
push
mov
or
fimul
stos
inc
outs
cmp
cs
(bad)
dec
push
scas
jb
bound
and
scas
(bad)
dec
ds
inc
repnz
mov
jmp
ins
mov
pop
(bad)
jns
int3
aam
retf
or
xchg
and
jl
fst
cmc
and
mov
mov
cmp
test
pop
sub
mov
fcom
and
ret
mov
dec
loopne
leave
add
push
(bad)
push
out
inc
out
nop
hlt
jl
cmps
push
test
mov
cdq
pop
daa
add
mov
mov
jmp
jl
scas
(bad)
push
inc
(bad)
jp
lea
push
hlt
push
arpl
jae
lods
or
rol
jno
lods
clc
sbb
push
loopne
test
or
push
mov
(bad)
(bad)
xchg
cmp
out
cmp
cwde
push
push
xchg
adc
mov
mov
dec
popf
pop
or
int
fwait
pop
mov
xchg
cld
mov
sahf
jno
lahf
adc
movs
jb
cdq
mov
jp
pop
pop
jne
dec
imul
dec
cmp
ja
sbb
(bad)
cmp
adc
jge
aaa
pop
enter
test
push
pop
sbb
div
in
call
adc
icebp
or
bound
adc
(bad)
sbb
jecxz
pop
sub
enter
clc
push
sbb
mov
add
es
sbb
xchg
push
imul
add
dec
nop
xlat
dec
loope
mov
cmps
lea
hlt
mov
jnp
and
out
pop
sub
ss
sti
and
(bad)
out
xor
cmp
es
bound
mov
rol
dec
mov
in
push
adc
mov
mov
adc
call
lods
leave
rep
or
push
setno
jecxz
movs
cmp
popa
imul
pop
les
sbb
mov
jl
dec
push
or
bound
pop
outs
add
jmp
shr
imul
clc
jns
or
mov
les
or
das
ins
daa
cld
sub
push
mov
add
pop
stos
nop
jg
adc
(bad)
fist
cmp
mov
mov
cmp
adc
mov
mov
mov
mov
cmps
sbb
(bad)
popa
imul
or
fstp
mov
ror
lahf
push
jmp
(bad)
add
gs
xchg
jmp
and
sub
or
iret
scas
lds
add
icebp
mov
les
inc
lahf
jmp
mov
inc
addr16
addr16
dec
mov
cmp
fadd
mov
mov
mov
aaa
out
pop
data16
arpl
mov
xchg
loop
pop
xchg
mov
mov
add
ret
cmp
(bad)
std
mov
pusha
sahf
mov
icebp
pop
arpl
pop
add
imul
mov
cs
and
inc
mov
push
sbb
xor
out
sub
xchg
sbb
not
or
out
mov
mov
cmp
adc
ss
test
inc
add
push
je
xor
loopne
movs
mov
and
in
xor
xchg
fadd
lea
outs
sbb
mov
sub
mov
popa
dec
adc
adc
lahf
ss
icebp
add
fwait
sbb
adc
xor
or
and
or
hlt
scas
cdq
sub
sub
xchg
xchg
xchg
in
es
jg
jno
pop
leave
aas
pop
sub
pop
mov
jmp
push
(bad)
scas
sub
fcom
iret
cmp
sbb
out
or
addr16
loope
add
in
or
pop
pop
mov
sahf
push
in
inc
adc
mov
hlt
rcl
clc
push
cld
rcr
ficomp
jbe
mov
into
mov
mov
mov
shr
fcomp
or
sub
ja
ja
sbb
cmp
fst
cwde
sbb
jmp
aas
rcr
std
sub
sbb
or
add
ds
push
in
mov
add
enter
xor
push
shl
out
pop
pop
push
lea
ins
inc
push
sub
nop
push
mov
push
mov
bound
cmp
mov
iret
cmps
movs
iret
out
aaa
into
test
lea
inc
push
inc
ins
dec
sar
loop
push
cmps
push
iret
mov
or
xchg
aas
dec
jmp
je
(bad)
imul
inc
jb
push
mov
mov
push
sbb
lds
adc
inc
push
sbb
popf
cmp
clc
or
xor
xchg
xchg
into
xor
test
mov
or
data16
fs
lods
xor
(bad)
dec
mov
add
jb
int
daa
outs
mov
push
inc
je
xchg
jns
mov
dec
into
and
icebp
xor
sbb
or
cwde
add
xchg
xor
sub
xchg
push
xor
cld
inc
ins
cdq
xchg
out
cwde
xchg
scas
xor
in
sub
xchg
sub
clc
aad
jge
and
pop
push
in
pop
sti
(bad)
mov
inc
xchg
inc
push
iret
fisubr
pop
in
xchg
imul
xor
push
mov
fldcw
cs
repnz
aas
repnz
inc
into
jbe
mov
mov
pop
popf
les
call
sub
add
push
js
arpl
dec
add
push
mov
jae
cmp
push
mov
pop
je
cli
inc
dec
fisttp
imul
jns
sbb
iret
retf
xchg
or
xor
in
add
sub
jmp
mov
mov
push
push
xchg
add
mov
das
push
(bad)
add
hlt
retf
ja
mov
and
push
popf
pop
lods
retf
add
cmp
pop
sbb
sar
lods
nop
mov
mov
add
and
jbe
js
scas
sbb
cmp
ret
xchg
lea
cmp
xchg
add
xor
cdq
and
call
cdq
out
xor
inc
adc
js
mov
cld
pop
ja
cmp
repnz
mov
pop
inc
jno
addr16
adc
ds
fs
or
std
lods
(bad)
(bad)
xor
loope
aaa
daa
xor
mov
ror
mov
inc
test
outs
or
jbe
add
mov
inc
mov
(bad)
jno
add
dec
int3
call
inc
test
mov
ds
adc
or
sub
pop
xchg
into
add
sbb
enter
add
scas
adc
mov
xchg
(bad)
hlt
sub
imul
xchg
loop
(bad)
pop
shl
push
mov
scas
popa
inc
jecxz
adc
adc
sbb
sbb
dec
push
cmps
pop
xchg
inc
and
movs
jo
xchg
stos
sbb
retf
dec
jg
mov
sar
iret
aad
pop
xchg
and
inc
test
mov
add
out
call
sub
xor
push
and
les
aad
xor
call
mov
inc
lock
icebp
add
sub
sbb
push
sahf
call
xchg
xor
in
mov
in
mov
jmp
bound
test
inc
je
int3
sbb
mov
out
xchg
js
or
aam
mov
hlt
or
arpl
push
into
lds
(bad)
leave
pushf
jb
add
inc
mov
mov
xchg
inc
jo
push
sub
or
xchg
js
dec
xchg
lock
repnz
fmul
and
inc
xor
or
mov
pop
ss
out
xchg
out
inc
scas
xchg
xlat
mov
out
adc
mov
and
retf
push
jmp
xchg
cmp
sub
unpcklps
cmp
test
into
push
jl
pop
out
push
xchg
mov
push
movd
add
inc
add
cli
inc
pop
sub
jb
mov
push
mov
jae
push
les
out
mov
arpl
scas
and
xchg
jecxz
mov
mov
push
sbb
adc
push
movs
xor
imul
cmp
fistp
push
cmp
mov
(bad)
adc
addr16
ins
nop
cmps
arpl
dec
inc
repz
pushf
imul
sub
rol
push
aad
push
cmp
nop
and
dec
cmc
cmp
popf
data16
mov
ins
pop
fist
mov
je
dec
je
xor
or
xlat
jb
dec
cmps
add
mov
data16
xlat
dec
mov
(bad)
fstp
leave
cmp
mov
inc
dec
cmp
xor
or
and
add
mov
xchg
xchg
not
ins
into
mov
aad
pop
mov
mov
mov
adc
mov
jmp
mov
shl
jmp
mul
add
jp
jbe
xchg
push
add
fwait
stc
sbb
jmp
pop
xor
dec
sbb
and
add
movs
data16
fisubr
lock
inc
or
sbb
pop
addr16
mov
cmc
xor
sbb
xor
es
inc
sbb
dec
mov
das
call
js
cmp
mov
shr
xor
sbb
xor
dec
cmp
push
sub
mov
mov
jmp
cdq
jo
out
jecxz
lds
aaa
sub
int3
sbb
sahf
adc
jns
mov
gs
test
pop
fcmovnb
adc
test
aaa
retf
cmp
cmp
push
outs
or
shr
cmp
repnz
jg
cmp
fs
stos
fxch
pushf
jns
jge
mul
fld
fcomp
scas
nop
fucom
in
not
mov
mov
cmp
sbb
cli
cmp
aad
repz
ficom
cwde
ins
mov
pushf
jmp
push
or
jnp
xchg
xlat
loop
out
adc
in
fadd
push
fimul
int3
int3
sub
cmp
jmp
imul
and
mov
and
clc
cmp
test
sbb
mov
sbb
(bad)
lods
movs
movs
sahf
mov
pop
(bad)
dec
jno
cmps
xchg
sub
pop
retf
cmps
mov
cmc
test
fadd
xchg
addr16
add
stos
imul
add
push
xchg
cs
loopne
inc
fbstp
scas
lods
cmp
mov
movs
das
cmp
in
add
das
in
mov
cmp
ror
pushf
dec
adc
pop
leave
cmp
movs
mov
sbb
or
arpl
mov
cld
sub
inc
idiv
cli
dec
aad
repnz
mov
daa
push
repnz
xor
mov
add
jne
ins
out
into
sub
inc
imul
cli
imul
les
cld
lods
pop
mov
popf
popa
adc
jp
xor
and
inc
(bad)
div
adc
cmp
lahf
out
mov
jae
cmps
lods
mov
mov
es
inc
xchg
lock
cwde
stos
in
ja
shl
aad
mov
loopne
mov
add
imul
arpl
xor
cmp
repnz
jmp
dec
inc
std
mov
out
adc
(bad)
cli
cmp
rol
ror
inc
rcr
scas
movs
movs
inc
jl
std
xlat
(bad)
ss
cmps
leave
ret
(bad)
sub
pop
lods
shl
push
daa
and
out
pusha
shl
xor
pop
in
inc
dec
js
mov
push
mov
in
retf
adc
dec
retf
pop
cmp
hlt
rol
icebp
aad
mov
cmp
lds
aas
xor
inc
dec
xchg
fnstenv
sbb
xchg
mov
adc
arpl
add
scas
shl
mov
adc
fwait
push
inc
xchg
je
xchg
and
pop
jbe
imul
retf
enter
leave
cli
push
mov
loopne
dec
add
mov
adc
das
mov
dec
in
jb
call
mov
inc
push
or
xchg
mov
in
stc
sbb
sbb
sub
or
call
sbb
rcr
fst
cmp
xlat
and
inc
stos
retf
dec
push
lds
mov
mov
dec
xchg
in
ror
add
push
adc
nop
mov
arpl
push
push
mov
es
aaa
xor
lock
int3
out
xchg
adc
stc
push
xor
jge
inc
dec
mov
xor
mov
sbb
jge
or
mov
(bad)
push
cs
pop
pop
stc
jo
jnp
fisub
int
mov
jnp
mov
aaa
inc
dec
mov
(bad)
mov
aam
xchg
adc
js
push
push
mov
js
or
out
mov
js
cli
lahf
lea
loope
pop
test
pop
push
add
and
cld
test
ret
pop
mov
in
dec
mov
int
call
inc
add
jg
(bad)
pop
pusha
repz
retf
dec
and
js
inc
into
movs
ficom
cmp
push
jg
jno
in
push
leave
int3
call
das
leave
movs
sub
push
push
add
jae
sti
imul
dec
mov
int3
xor
xchg
jb
loop
jle
std
and
push
cmps
xchg
push
sbb
pop
movs
in
cmp
loope
(bad)
dec
sbb
add
pushf
mov
dec
adc
pop
scas
push
jg
sub
jo
in
retf
mov
(bad)
mov
cwde
out
div
into
cmp
shl
push
dec
xor
mov
test
mov
add
pop
pop
aaa
sbb
shl
outs
clc
jns
aad
or
sbb
dec
inc
ss
mov
outs
sbb
mov
aaa
fcmovnu
push
push
daa
ss
(bad)
bound
mov
cs
mov
xchg
lods
and
in
(bad)
fidivr
mov
inc
hlt
scas
arpl
add
in
mov
int
pop
jb
sbb
cmp
push
sub
add
jo
(bad)
stos
stos
data16
push
ins
outs
mov
retf
cli
stos
loopne
inc
inc
xor
and
sub
sbb
xchg
mov
pushf
push
iret
cmp
jge
mov
jnp
jb
mov
(bad)
loop
popf
test
fst
aam
jnp
mov
mov
inc
sbb
arpl
test
jg
gs
push
cmp
mov
cmps
addr16
(bad)
arpl
cmovb
fwait
jbe
jecxz
repz
jns
cmovb
gs
(bad)
pop
retf
in
popf
jbe
cmps
aaa
mov
jae
jns
pushf
mov
xor
repz
pop
mov
retf
imul
push
jp
or
inc
fisubr
jmp
sbb
sti
push
ss
(bad)
mov
add
into
bound
jge
repnz
cld
lahf
fstp
pusha
fiadd
push
fwait
shr
sbb
lea
je
push
mov
sbb
xchg
and
adc
mov
jne
and
in
fdiv
inc
jmp
lds
clc
xor
sub
pop
sar
cmps
sahf
jnp
test
dec
push
add
pop
je
enter
out
imul
mov
hlt
pop
out
shl
mov
sti
mov
cmp
cmp
mov
push
cmc
pop
mov
lahf
jecxz
aad
loope
mov
or
cmp
push
sub
pop
jmp
call
pop
mov
jbe
mov
(bad)
enter
popa
retf
push
out
pushf
mov
push
cli
pop
fucompp
pop
adc
dec
data16
mov
jbe
gs
and
push
pop
pop
push
pop
neg
stos
stos
iret
js
push
pop
inc
ror
add
cmps
popf
movs
jg
inc
pop
xor
mov
movs
cmps
mov
retf
or
movs
adc
(bad)
enter
sub
xor
jmp
shl
inc
retf
jle
xlat
mov
xchg
retf
in
mov
and
gs
pusha
jmp
sub
nop
and
in
ror
sbb
mov
and
ins
imul
adc
pop
mov
call
fs
fidivr
dec
dec
imul
add
mov
push
std
fcomp
sbb
and
xchg
mov
add
aaa
stos
lds
push
cmp
and
fwait
retf
mov
mov
scas
jmp
pop
test
js
hlt
lock
pop
leave
cmc
sub
cwde
les
inc
arpl
jmp
dec
xchg
in
jbe
icebp
and
cwde
mov
inc
mov
dec
mov
cmp
sbb
inc
loop
jp
dec
xor
str
xor
jne
shl
push
mov
call
fnsave
sti
cs
inc
sti
div
xor
adc
out
loope
add
call
adc
adc
and
push
jne
jns
mov
pop
out
out
adc
cmp
loopne
fsubr
neg
jmp
jmp
inc
movs
mov
adc
scas
mov
mov
pop
rol
hlt
cwde
ja
or
aam
mov
stos
mov
mov
push
cmps
enter
mov
sbb
fdivr
xchg
retf
retf
mov
sti
inc
outs
adc
mov
aaa
gs
call
inc
cmp
shl
sbb
test
push
jp
xchg
cmp
dec
sbb
(bad)
hlt
dec
push
jp
daa
ins
adc
mov
xor
adc
mov
dec
shl
outs
scas
xchg
repz
jmp
add
mov
je
nop
in
sub
mov
retf
xor
repnz
pusha
lock
adc
aad
fisubr
clc
fwait
mov
ins
pushf
(bad)
sub
ret
icebp
adc
inc
ret
inc
pop
fsub
inc
jmp
ins
adc
cdq
pop
sbb
inc
add
xchg
imul
and
add
inc
lds
xor
imul
jmp
mov
stc
fidivr
xor
int
or
jnp
lahf
leave
and
xchg
xchg
jle
inc
sub
pop
sub
scas
inc
das
fdivr
jne
xor
(bad)
ins
push
or
push
sub
jecxz
xlat
jne
pop
fist
out
ret
call
add
mov
inc
sub
xchg
ret
repnz
(bad)
daa
ins
or
fisttp
ror
jmp
and
fisubr
lods
adc
pusha
pop
pop
mov
ins
cli
xchg
out
cli
adc
jecxz
inc
enter
sub
imul
cmp
push
retf
inc
leave
pop
(bad)
mov
aaa
xor
add
je
inc
stos
clc
jbe
fwait
les
and
jbe
cdq
inc
rcr
daa
pop
sti
in
push
jmp
leave
mov
cs
xor
ss
lods
push
stc
adc
out
(bad)
lds
stos
push
xor
push
push
cmp
mov
fwait
loop
adc
fistp
sahf
imul
sub
and
mov
out
and
daa
cmc
jno
push
adc
mov
xor
adc
jge
jo
les
sub
xor
mov
jnp
pmaxsw
pop
mov
mov
cwde
je
pop
cmc
cmc
cmps
or
in
icebp
mov
dec
cwde
jb
dec
xor
clc
push
mov
(bad)
fnstenv
aam
mov
pop
mov
adc
push
cmps
fsubr
mov
scas
retf
addr16
fwait
daa
out
loop
inc
adc
mov
loopne
fwait
dec
lods
ja
bound
and
imul
mov
aas
cmp
xchg
jb
push
pop
xchg
jmp
push
retf
(bad)
add
cmp
add
bswap
mov
push
daa
pop
adc
adc
aas
xor
mov
leave
dec
popa
sub
sub
test
jecxz
sti
in
int
retf
and
adc
mov
int
bound
fadd
rdmsr
icebp
mov
mov
mov
dec
sbb
into
cmp
jae
dec
cmp
fadd
jbe
fsubr
xor
mov
ja
outs
(bad)
leave
(bad)
jmp
jecxz
push
icebp
in
out
jne
lods
jecxz
stos
and
and
mov
xchg
jno
aas
pop
stos
and
pop
or
add
sub
push
inc
add
test
dec
ficomp
imul
test
or
xchg
clc
lea
lea
cdq
sbb
movs
xchg
jl
mov
ins
or
aaa
enter
jg
add
jl
jecxz
mov
int3
xchg
adc
stc
imul
shl
cmc
in
data16
loopne
jl
inc
pop
adc
je
or
ficom
pushf
push
repz
push
add
ret
mov
dec
mov
xchg
in
sbb
sub
pushf
mov
lods
pop
es
mov
and
sbb
inc
fistp
adc
cmp
mov
xor
mov
shl
sahf
or
in
mov
add
and
cmp
and
rcr
daa
cmp
and
jp
fucomi
mov
inc
adc
stos
add
lock
add
push
sub
out
sbb
div
jmp
imul
cmp
(bad)
ins
dec
out
push
xchg
aaa
sub
aad
xchg
mov
adc
js
aaa
push
adc
jp
fimul
bswap
and
sbb
stc
cmps
movs
adc
cmps
cmps
or
addr16
(bad)
push
ins
xor
pop
sbb
sahf
jp
imul
cmp
xor
cli
inc
or
mov
frstor
pop
or
and
jns
mov
inc
sub
mov
and
cmp
pop
sbb
mov
and
(bad)
jmp
addr16
add
inc
mov
add
jmp
xor
mov
and
sbb
movs
mov
aam
and
and
jp
pop
aaa
lds
mov
mov
loopne
out
cmp
push
in
jb
jg
std
in
cmps
jnp
imul
fdivr
mov
cmps
ret
jle
test
inc
pop
ins
xchg
dec
adc
or
jge
push
stos
push
jns
jg
sub
mov
mov
jbe
pop
sbb
xor
(bad)
cmps
data16
test
push
adc
xchg
lds
dec
cmp
test
idiv
fs
cmp
jecxz
icebp
push
shl
mov
add
cmps
(bad)
imul
jge
mov
lock
push
imul
ret
sbb
push
adc
lock
or
aad
add
imul
fisubr
xchg
sub
fs
or
outs
into
xor
mov
mov
jmp
fisttp
gs
addr16
or
dec
lds
jnp
mov
(bad)
dec
clts
dec
sub
cmps
in
clts
es
jle
pop
dec
ss
jg
xchg
sbb
xor
mov
mov
pop
pop
or
scas
fwait
nop
aaa
imul
xor
jae
call
mov
(bad)
stc
add
jmp
jge
addr16
imul
inc
(bad)
int3
hlt
mov
leave
test
(bad)
push
and
add
pop
test
xchg
cmps
outs
mov
cs
loope
xchg
xchg
rcl
pop
jbe
cdq
jg
or
imul
push
jne
push
retf
fwait
push
in
scas
imul
sbb
push
cmps
pop
rol
push
call
dec
inc
push
cmp
(bad)
cmp
pop
mov
dec
dec
movs
into
pop
popa
mov
cmp
xchg
push
in
loopne
js
cmps
xchg
jno
nop
rcr
xchg
je
scas
test
fwait
sub
repnz
in
mov
gs
aaa
add
out
cdq
fld
(bad)
jmp
aas
cmp
repnz
clc
pop
inc
cmps
or
jmp
cdq
les
mov
adc
mov
stos
inc
scas
cmps
mov
out
pop
clc
jge
jnp
or
xchg
icebp
push
movs
int3
hlt
dec
cmp
and
or
xor
sbb
icebp
int3
shl
in
sub
push
dec
cdq
stc
xor
stos
adc
and
cmc
in
loop
outs
dec
icebp
ficomp
loopne
xchg
ficomp
xor
add
xchg
sbb
xchg
xchg
mov
jns
les
inc
jo
cld
dec
mov
int
(bad)
jmp
inc
cmp
sbb
addr16
daa
jp
mov
pop
adc
or
and
push
cmp
cld
mov
in
xor
dec
movntps
fist
cmc
lock
in
mov
mov
(bad)
xchg
cmc
pop
jb
rol
jmp
mov
push
add
inc
push
lahf
jmp
mov
mov
jle
cmp
sub
jmp
xchg
loopne
into
cld
imul
mov
add
and
int
push
xchg
dec
push
fcomp
inc
mov
dec
adc
jmp
cmps
movs
(bad)
cmp
gs
xor
or
jo
mov
jns
les
sbb
scas
gs
jno
iret
scas
(bad)
mul
and
ins
mov
xor
test
cwde
xor
cld
mov
enter
in
int3
ins
(bad)
stc
mov
stos
mov
mov
addr16
imul
push
push
sbb
inc
test
inc
rcl
xchg
cwde
jo
and
in
sub
iret
add
mov
fmul
cdq
das
adc
add
and
pusha
cmps
xor
aad
nop
cld
jo
jbe
outs
jg
push
stc
pop
jne
add
mov
repnz
aaa
sub
ds
pop
pop
pop
push
ret
sub
ins
push
jne
or
jmp
loopne
test
pop
pop
aas
and
xchg
icebp
pop
nop
mov
std
mov
dec
push
mov
xchg
test
push
leave
popf
fwait
jno
(bad)
retf
xchg
jo
iret
jno
hlt
fwait
popf
fs
dec
in
sbb
outs
int3
xor
mov
add
into
shr
out
outs
repnz
add
bound
arpl
(bad)
into
xor
shl
(bad)
ins
retf
(bad)
mov
not
mov
int3
aaa
or
cld
ins
gs
pop
jmp
and
push
mov
jmp
sbb
jae
adc
or
and
and
(bad)
jmp
shl
int
dec
xchg
shr
ins
stos
or
cwde
xor
pop
xor
fnstcw
mov
mov
fs
popf
jp
inc
xor
jecxz
lea
mov
imul
and
movs
add
mov
arpl
mov
shl
push
stc
ret
jb
cmc
xchg
sbb
sbb
xor
icebp
sbb
test
sbb
bound
mov
mov
popf
push
dec
push
test
sub
cmp
cmp
or
and
dec
mov
gs
jmp
out
push
push
mov
xchg
jl
pop
aaa
fdivrp
mov
add
xchg
adc
sbb
sbb
or
nop
inc
xor
xlat
pop
(bad)
ds
(bad)
adc
xchg
mov
in
lahf
adc
test
jmp
mov
out
clc
jb
push
test
inc
test
ja
cmps
std
or
pop
aaa
scas
(bad)
xor
mov
or
in
adc
imul
push
mov
xchg
push
imul
call
mov
cs
pop
test
retf
int3
mov
ficomp
cmps
call
add
cmp
and
rcr
dec
scas
ja
rcr
fimul
iret
and
xor
pushf
adc
movs
pop
mov
mov
(bad)
ins
jmp
xor
test
add
cmps
cmp
stos
push
es
pop
popa
scas
icebp
add
rol
inc
sti
push
shl
cmp
push
pop
xchg
sub
jb
ins
sbb
rol
movs
mov
add
fwait
icebp
xchg
or
mov
mov
inc
pop
xchg
hlt
das
mov
jmp
aad
mov
jb
(bad)
mov
test
fsubr
jl
push
mov
cld
fimul
jbe
dec
or
sub
fcmovnbe
adc
(bad)
(bad)
das
ffree
and
in
outs
daa
lods
push
mov
add
repnz
sahf
movs
jnp
xor
xor
mov
push
clc
(bad)
ficomp
ds
inc
out
rcr
ror
lods
test
add
lock
retf
mov
ret
gs
dec
arpl
xchg
test
hlt
jl
push
mov
mov
sub
in
call
sahf
inc
adc
jb
sub
test
jb
push
push
mov
ins
movs
dec
mov
inc
cs
retf
idiv
and
sub
pop
fstp
jo
nop
daa
mov
sub
outs
push
dec
ins
jmp
test
adc
or
imul
loop
lods
cmp
dec
mov
shl
mov
xlat
sub
cwde
dec
mov
pop
repz
stc
out
xor
adc
inc
div
jmp
jno
inc
mov
mov
mov
and
inc
xchg
mov
test
or
push
and
shl
ror
iret
pop
loopne
lock
fsubr
inc
fprem1
es
mov
xchg
inc
xor
adc
fisttp
adc
or
out
ins
pusha
mov
retf
jbe
int3
int
jg
aam
adc
mov
mov
push
shl
retf
sbb
mov
push
into
cs
or
nop
mov
mul
mul
mov
push
mov
inc
push
into
ss
sbb
(bad)
push
js
(bad)
(bad)
aam
sub
scas
jae
jge
and
ins
xchg
adc
sbb
push
data16
aas
int
sti
cld
push
or
or
push
movs
and
xor
dec
fldcw
mov
(bad)
push
jo
or
je
dec
call
jnp
mov
push
enter
add
sti
pop
lods
enter
push
push
jae
stos
jl
out
jnp
aaa
xlat
mov
ds
mov
fst
mov
test
aam
and
(bad)
out
sahf
es
inc
cdq
(bad)
aad
sbb
dec
sbb
add
xchg
jo
mov
or
(bad)
mov
bound
inc
sub
and
pop
jns
pop
pop
neg
movs
loop
mov
sbb
cmp
sub
in
push
loope
and
xchg
aas
and
mov
iret
jno
aaa
jb
mov
xor
add
pop
mov
nop
push
xchg
pushf
(bad)
call
jno
push
int
sbb
dec
xchg
mov
push
jno
ins
jne
bound
xor
shl
shl
lods
test
idiv
mov
fidiv
add
pop
or
adc
imul
mov
push
mov
push
ror
mov
rcr
icebp
mov
int3
jl
pop
xchg
jecxz
fs
adc
sbb
mov
mov
sbb
scas
rol
push
ins
popa
aam
or
push
pop
addr16
(bad)
xchg
imul
jmp
inc
xchg
repz
fisttp
mov
push
enter
int
dec
leave
mov
jb
mul
add
jne
inc
sbb
sub
or
jo
popf
cdq
fild
cli
xchg
sbb
repnz
(bad)
cmp
pop
inc
dec
(bad)
fisub
mov
mov
sbb
and
ds
adc
pop
retf
sti
or
inc
push
shl
retf
inc
test
mov
add
lahf
(bad)
sti
xchg
ret
or
jmp
add
or
mov
cld
dec
loope
fcmovnu
out
imul
cdq
or
sbb
shr
pop
aad
mov
and
sub
mov
pop
mov
int
std
jno
dec
dec
clc
cdq
dec
push
add
test
pop
aas
fdivrp
jo
mov
mov
pop
ds
(bad)
std
mov
call
fldenv
xor
clc
and
call
inc
sub
ret
popf
fiadd
rcr
pop
dec
mov
mov
or
pop
push
pop
in
retf
cmc
sbb
sbb
cmps
or
sti
adc
ss
fsubr
pop
cld
or
sti
pop
push
mov
xchg
icebp
xchg
mov
pop
shr
call
jne
mov
addr16
shl
cmps
repnz
sbb
ins
xor
cmc
cs
pop
push
bound
pop
fstp
push
jmp
dec
leave
inc
test
xchg
jae
xor
and
adc
fnstsw
xor
test
data16
dec
xor
out
test
jg
(bad)
cmp
mov
les
pushf
stos
ja
and
mov
xchg
mov
aaa
rcl
scas
das
pop
pop
lods
xchg
(bad)
ffree
cli
xchg
popa
(bad)
lods
pop
sbb
mov
inc
fcomp
imul
pushf
lock
mov
mov
in
cmp
jmp
mov
call
int
or
or
imul
mov
xchg
out
cmp
(bad)
imul
fwait
jno
or
xlat
mov
xchg
popa
dec
xchg
jae
adc
(bad)
mov
ret
inc
add
cmp
sub
dec
jl
dec
dec
nop
mov
inc
jo
sahf
enter
add
popa
add
mov
jne
test
leave
cs
es
xchg
mov
pop
xor
adc
sub
out
adc
pmulhuw
cmps
(bad)
leave
pop
dec
(bad)
mov
sub
movs
test
pop
scas
push
and
pop
ror
and
add
fld
push
push
aas
mov
mov
popf
jns
fwait
iret
mov
into
xchg
xchg
mov
cmps
add
cmp
jecxz
sbb
mov
sbb
dec
rol
jmp
scas
fs
sbb
retf
pop
cli
sbb
push
enter
jge
inc
xor
add
popf
xchg
popa
cs
hlt
adc
xor
mov
mov
adc
gs
clc
ins
push
inc
dec
jae
pop
je
(bad)
jno
loope
add
lds
xchg
das
pop
pop
stos
inc
adc
or
in
dec
ret
fstp
sbb
mov
mov
cdq
or
push
jmp
add
les
test
xor
jne
nop
mov
sub
add
xlat
icebp
pop
jmp
movs
mov
test
mov
push
cwde
dec
clc
scas
adc
mov
jl
adc
test
adc
cmp
sar
cmp
dec
mov
test
inc
or
(bad)
and
movs
cs
cmps
(bad)
push
inc
sub
dec
push
popf
js
add
mov
push
xor
inc
cmps
in
or
aad
ret
mov
inc
pop
pop
dec
or
or
enter
dec
arpl
popa
divps
movs
push
pop
inc
aad
es
pop
(bad)
sbb
mov
call
jbe
xor
push
and
ret
in
push
xchg
cmc
scas
push
into
cli
ret
or
out
push
inc
test
lods
or
jecxz
adc
call
jae
add
mov
(bad)
int3
aaa
inc
std
rcl
scas
cmps
les
repz
(bad)
mov
jne
mov
movs
jae
loope
retf
icebp
jmp
xor
or
in
sahf
icebp
adc
xor
pop
scas
xlat
iret
adc
mov
ins
ror
pop
lahf
fmul
fs
pop
stos
jo
out
mov
sub
outs
jne
js
jge
mov
in
or
sbb
mov
retf
mov
push
pop
lods
dec
push
idiv
cmps
(bad)
es
pushf
pop
inc
ror
cld
sbb
pop
push
cmc
shl
dec
pop
pop
pop
sbb
push
sahf
imul
push
mov
in
dec
mov
and
dec
sub
add
scas
int
inc
jg
call
call
pop
imul
and
cld
out
fwait
jo
ret
repnz
aas
cmp
xor
xor
jne
cmp
add
dec
stc
and
adc
rol
pop
adc
test
(bad)
call
mov
cmp
nop
dec
sar
mov
sbb
outs
add
rcr
pushf
push
dec
jo
sbb
fcom
call
mov
in
popf
jnp
test
inc
sbb
enter
jbe
pop
es
sti
push
sar
rol
xchg
jns
sti
clc
ret
int
adc
pop
mov
or
xor
inc
push
or
inc
cmp
mov
ror
sbb
mov
cdq
jmp
daa
arpl
ret
mov
std
mov
and
fdiv
mov
retf
out
cmp
and
repz
dec
sti
mov
xchg
add
jb
mov
loope
pop
xor
ins
mov
push
push
clc
hlt
pop
repnz
stos
gs
mov
mov
mov
call
out
add
nop
(bad)
pop
sbb
outs
jp
adc
add
inc
repz
dec
mov
inc
in
mov
xor
scas
jle
popa
bound
xor
fcom
mov
outs
into
add
arpl
mov
sub
nop
fdiv
(bad)
adc
stos
retf
push
retf
mov
imul
addr16
xchg
jnp
lds
or
addr16
icebp
mov
sbb
gs
adc
adc
cwde
gs
rcl
sbb
outs
faddp
aam
xchg
cmp
idiv
add
add
xchg
sar
idiv
xor
jg
mov
xchg
jno
jl
xchg
(bad)
lock
mov
adc
(bad)
mov
cmps
call
repnz
fdivr
mov
mov
jo
adc
mov
retf
mov
or
ins
aam
lea
jmp
int
dec
dec
je
pop
bound
pop
xchg
xor
add
into
adc
rcl
mov
push
jmp
inc
sbb
rol
cmp
aam
psllw
mov
mov
sub
inc
loop
push
stc
inc
ret
cmp
pop
jecxz
out
sub
pop
or
inc
push
cs
mov
xor
and
jbe
aad
data16
ja
dec
sub
push
dec
jnp
jmp
adc
rol
std
xchg
xchg
outs
in
mov
aad
pop
cmps
or
adc
test
(bad)
xor
mov
sti
jmp
in
test
shl
adc
sub
add
into
jns
adc
out
jmp
lods
pop
out
icebp
push
mov
enter
mov
xchg
pop
lods
pop
daa
mov
push
lahf
jg
pop
dec
sub
and
aad
out
sbb
test
xchg
pop
push
add
dec
ins
cmp
jle
jl
add
xchg
xchg
push
ins
mov
dec
pop
dec
nop
js
arpl
xor
mul
les
push
fimul
push
adc
es
inc
xor
sbb
mov
mov
or
icebp
fcom
mov
stc
pop
sbb
or
cwde
(bad)
cmp
pop
jge
mov
mov
(bad)
pushf
cmp
lea
rcr
(bad)
test
mov
inc
gs
or
mov
sbb
or
ror
add
call
adc
clc
call
leave
loopne
xlat
movs
mov
(bad)
mov
out
imul
or
std
mov
dec
stc
mov
push
test
pop
dec
lods
jge
jg
inc
mov
mov
cmp
cmp
mov
imul
iret
inc
iret
shl
jle
movs
jae
ds
rcl
ds
(bad)
cmp
(bad)
sub
dec
in
cld
jne
loopne
jns
js
or
dec
(bad)
fsub
shl
inc
push
adc
pop
fcomip
xchg
sbb
and
xor
jae
or
in
cmp
adc
or
adc
jns
mov
sbb
stc
mov
push
jne
adc
xchg
or
dec
retf
mov
add
pop
das
jg
xor
jno
aaa
xor
(bad)
std
imul
aad
out
xor
mov
jbe
fld
fst
push
nop
clc
je
aam
int3
leave
pop
cmp
push
dec
(bad)
ss
enter
stos
imul
push
and
jp
sub
dec
mov
jecxz
xor
mov
lods
aas
aam
daa
fcmove
sub
fwait
movs
lods
cs
cli
or
pop
push
inc
sub
sub
int3
cli
lock
jp
adc
fisttp
and
jb
or
das
mov
pop
inc
jae
adc
cld
push
push
dec
lods
outs
push
xor
iret
test
pop
fnstenv
fisttp
sahf
das
loop
push
stc
mov
es
out
push
call
xor
jnp
jnp
fcmovnbe
jno
movs
mov
fiadd
mov
out
dec
ins
push
ror
jo
jo
push
(bad)
movs
cmps
daa
cmps
adc
push
cmp
adc
aaa
dec
jo
int3
ins
inc
ins
xor
cmc
js
imul
shl
sar
call
or
push
inc
fmul
mov
mov
call
cld
(bad)
aad
ds
xor
ja
popf
stc
jo
cwde
cs
les
fsubr
adc
fwait
lds
and
mov
in
test
int
into
add
mov
int3
sbb
in
rol
jg
lock
jb
push
lods
jl
push
(bad)
fcom
rol
pusha
or
ins
mov
inc
sbb
jmp
out
adc
fwait
mov
ss
pusha
pop
icebp
pop
cmp
fmul
popa
xchg
cmp
(bad)
adc
je
popf
cmp
dec
mov
cmps
add
mov
cmp
push
jb
das
lods
sbb
js
sub
mov
das
sub
out
mov
lods
xchg
maxps
sti
fst
push
jae
ins
mov
scas
mov
inc
aam
iret
out
(bad)
bound
dec
inc
jecxz
sbb
xlat
dec
bound
xor
ret
(bad)
mov
icebp
test
mov
add
cwde
push
into
in
cmp
mov
push
pushf
add
xor
add
mov
popf
push
popf
push
and
fild
scas
sar
mov
jmp
pop
or
and
or
lods
jns
mov
adc
into
jg
add
inc
mov
sub
loop
cmp
dec
jp
enter
and
jnp
jl
repz
mov
mov
mul
inc
fs
scas
push
je
mov
push
cmps
popf
es
cmp
pop
les
xor
inc
aam
xlat
inc
cld
scas
ja
mov
repz
rcr
movs
ficom
push
and
ins
in
xchg
and
adc
jecxz
shl
adc
les
xchg
mov
rol
mov
or
sub
movs
mov
lahf
lahf
push
outs
xor
add
movs
test
sbb
ins
int3
iret
dec
push
xchg
fimul
inc
cmp
push
push
test
sahf
cdq
scas
movs
ror
mov
mov
lock
movs
sahf
adc
and
mov
mov
in
or
daa
pop
jmp
pop
pop
ror
push
imul
cld
mov
iret
or
ins
outs
sar
cmp
mov
and
js
test
movs
jne
cwde
push
sbb
fyl2xp1
fmul
lods
inc
inc
adc
cmp
leave
inc
ret
mov
inc
int3
cmp
push
outs
fimul
add
mov
test
ins
fsubr
(bad)
pop
push
out
(bad)
sti
loop
cmps
aad
inc
arpl
cmps
icebp
hlt
fild
pop
add
clc
pop
sbb
fdiv
cmps
inc
test
pop
stc
pop
lock
push
mov
jnp
jg
das
ds
push
mov
mov
int3
in
or
mov
cmp
mov
fwait
add
mov
sbb
xchg
fdiv
dec
test
dec
add
inc
or
fwait
das
jecxz
add
sbb
call
shl
push
bound
cli
imul
scas
and
sahf
jle
sub
shr
(bad)
idiv
sub
push
or
push
jle
jmp
jns
push
push
ss
adc
out
ins
fcmovu
mov
add
dec
mov
xor
stos
lea
mov
push
mov
imul
jns
cli
popa
cmp
mov
jle
repnz
jge
sub
ja
shl
ss
cmp
rcr
pop
mov
fsubrp
outs
(bad)
test
sbb
out
fbstp
sar
cli
test
es
leave
xchg
frstor
shl
pushf
mov
mov
loop
or
adc
xchg
fistp
in
pop
adc
cwde
jg
mov
loop
mov
inc
inc
mov
and
cmp
mov
or
ins
or
mov
mov
mov
pop
dec
out
fld
mov
jp
cmp
push
aad
cmp
jno
shl
mov
add
push
fld
aam
cmp
cmps
xchg
inc
inc
adc
(bad)
popf
pop
adc
out
dec
and
sub
cmc
sbb
add
(bad)
mov
pusha
imul
xchg
push
test
add
dec
push
out
pop
mov
pop
data16
pop
(bad)
cmps
imul
movs
(bad)
out
repnz
fistp
push
push
add
outs
inc
pop
fwait
loop
std
ret
xlat
out
int
push
adc
movs
cli
cmp
inc
loop
push
fbld
cmp
mov
packuswb
mov
or
push
fdiv
out
push
fsubr
or
mov
es
xor
mov
popa
and
and
jl
leave
fist
pop
xor
or
scas
test
ror
sahf
(bad)
sar
lock
push
cmp
xchg
test
sbb
out
jle
test
sbb
imul
in
ss
xchg
call
and
xor
sub
inc
mov
sbb
adc
ds
or
mov
mov
in
mov
repz
hlt
sahf
hlt
in
fiadd
retf
sbb
mov
mov
sub
(bad)
ins
or
push
mov
jbe
js
mov
repnz
sbb
mov
mov
mov
ficom
(bad)
das
sbb
aad
popf
push
adc
dec
dec
mov
jno
fcomp
and
fst
lods
adc
daa
mov
out
xchg
xor
in
and
dec
ja
enter
xlat
cwde
dec
xor
push
dec
js
mov
out
mov
mov
dec
sub
movs
addr16
or
inc
shl
rcl
mov
ds
jle
xor
dec
xor
adc
in
jnp
or
xlat
mov
ins
dec
dec
dec
mov
adc
push
dec
repnz
add
and
in
push
mov
push
cmp
sbb
adc
push
pop
lods
mov
mov
imul
push
imul
retf
inc
stos
mov
repz
and
add
movs
test
aas
and
xchg
push
add
iret
stc
popf
and
ret
js
inc
scas
pop
sub
xor
ret
lea
mov
push
sbb
pop
adc
lods
push
vmread
dec
std
xchg
retf
add
mov
movs
inc
movs
out
out
sbb
ss
xor
push
mov
jmp
and
dec
cmps
inc
std
pusha
lock
cmp
push
jl
fist
adc
popf
push
adc
into
push
test
imul
jecxz
dec
cmp
push
or
xor
xor
pushf
or
sbb
cmp
and
jecxz
in
call
pop
sbb
cwde
or
mov
jo
fldenv
out
cmp
js
in
lods
mov
xor
pop
add
inc
and
adc
and
jecxz
jae
and
fiadd
fsin
dec
adc
(bad)
fldcw
or
shl
or
fiadd
data16
sub
pusha
xchg
data16
jmp
mov
stos
jb
jbe
ja
fcmovne
mov
je
ins
outs
ins
mov
repz
dec
scas
inc
std
mov
jae
dec
cli
jl
mov
inc
test
cmps
jle
hlt
ja
sbb
mov
mov
and
mov
loopne
fist
rol
xchg
dec
sub
ins
test
(bad)
fcom
push
jmp
test
adc
jle
xchg
div
pop
pop
xchg
jge
jg
inc
lods
and
aad
and
sub
push
or
aas
or
or
or
sbb
hlt
enter
mov
push
xchg
(bad)
iret
sbb
inc
jnp
cmp
mov
add
xchg
jmp
shl
dec
push
fisubr
mov
pop
xlat
mov
sbb
inc
shl
mov
mov
stos
clc
pop
push
xchg
aad
retf
call
out
mov
imul
repnz
dec
lods
and
inc
(bad)
test
pop
jl
fsub
ret
xor
push
push
mov
mov
(bad)
pop
cmp
ret
add
out
add
jg
dec
xchg
mov
in
aad
sti
xchg
mov
and
xchg
and
xlat
mov
icebp
bnd
sub
mov
ret
pop
mov
push
dec
push
repz
stos
or
push
int3
nop
sbb
xor
inc
xchg
sbb
ja
shr
xchg
clc
inc
xchg
jmp
ins
mov
sbb
test
enter
dec
mov
in
mov
test
adc
push
retf
mov
mov
ret
jns
inc
jbe
dec
inc
or
push
dec
adc
jb
xor
push
rcl
(bad)
jne
aaa
fimul
dec
mov
xor
push
or
mov
mov
lock
imul
(bad)
lods
jp
retf
inc
test
cmp
mov
and
imul
push
scas
sbb
mov
xchg
je
push
cmp
xlat
fldenv
push
dec
push
(bad)
popf
in
adc
outs
pop
je
sbb
inc
jp
idiv
mov
mov
mov
sbb
xchg
icebp
and
add
ins
mov
sar
sub
(bad)
std
mov
js
or
int
lods
ins
jo
inc
push
movs
xor
xchg
test
mov
push
imul
in
hlt
cmp
loopne
(bad)
cmp
ds
add
push
mov
or
push
scas
adc
mov
cmps
push
cmp
jle
xchg
inc
xchg
push
xchg
imul
std
pop
(bad)
cwde
or
jg
std
sbb
jmp
inc
ins
lock
and
jmp
push
xor
and
sub
call
jns
hlt
ret
sbb
into
shr
mov
push
inc
fld
cdq
pop
adc
sub
scas
stos
add
adc
sbb
mov
inc
mov
pushf
push
pop
test
data16
mov
mov
pop
arpl
mov
test
std
sub
shl
out
clc
mov
les
mov
mov
adc
xor
inc
inc
cmps
mov
or
push
push
jo
cmps
or
sbb
cld
loopne
xchg
add
push
xor
pop
xor
fwait
xchg
sbb
push
jge
scas
add
dec
jae
shr
mov
push
xchg
stos
and
repnz
mov
sub
jne
and
xor
ja
imul
mov
push
jne
stc
test
test
outs
test
xchg
mov
cdq
outs
sub
lds
sbb
lods
or
jns
mov
cs
xor
inc
jbe
sbb
jge
in
push
iret
cwde
vsqrtps
int
imul
xor
es
sbb
push
xlat
aaa
mov
push
mov
fwait
jns
push
xchg
or
shr
jnp
(bad)
xlat
cli
retf
(bad)
ror
lds
or
test
std
mov
jge
and
mov
in
not
or
fs
pop
mov
bound
popa
jmp
lahf
hlt
lds
(bad)
loope
add
cmp
xchg
mov
sbb
cld
repnz
inc
nop
(bad)
sub
bswap
fistp
mov
retf
pop
cmp
nop
jmp
in
push
adc
add
lahf
jb
movs
sbb
addr16
inc
inc
inc
cmp
add
jp
sbb
jae
xchg
mov
arpl
cmps
cld
shl
je
cmp
dec
push
cdq
movs
jg
adc
mov
cld
sub
daa
xlat
rol
dec
cmc
in
popf
lahf
sti
dec
inc
fnstsw
cmp
mov
loopne
into
lea
pop
repz
jmp
push
fldenv
or
push
loop
jae
outs
(bad)
mov
aad
mov
jo
or
pop
push
jmp
jl
cmc
pusha
out
shl
call
(bad)
iret
sbb
int
sbb
movs
and
jnp
cwde
rcl
mov
(bad)
int
call
or
mov
test
out
sub
data16
cmp
adc
lahf
cmp
jg
push
aad
popf
movs
pop
icebp
fisubr
ret
jp
mov
xor
fwait
push
jmp
ret
xchg
sbb
ds
inc
ds
adc
rcl
daa
cmp
xchg
stos
movs
movs
retf
stos
lods
or
xchg
mov
mov
outs
in
cmp
cmp
gs
inc
(bad)
stc
inc
(bad)
ins
xchg
out
jb
mov
adc
fbld
inc
les
pop
mov
aaa
repz
int
mov
sub
and
mov
push
repz
js
out
out
pop
pushf
xchg
(bad)
iret
into
out
repz
rcr
mov
shl
jns
pop
mov
add
stc
inc
push
dec
cmp
fnstsw
rcr
fist
lods
iret
stc
repnz
adc
loope
pop
shr
mov
mov
mov
arpl
lds
fst
mov
popf
inc
xor
sbb
and
adc
pop
cld
xor
sbb
popf
mov
push
and
inc
mov
fisub
sub
pop
jnp
adc
fiadd
cmp
fiadd
xchg
xchg
jle
retf
pop
and
or
scas
test
adc
push
in
imul
cmp
sub
and
cwde
and
inc
fcmovnb
ja
push
pop
pop
push
mov
into
dec
xchg
cmps
ret
mov
sub
jl
mov
dec
or
in
retf
jmp
xchg
cmp
enter
adc
je
jmp
ins
pusha
out
hlt
cli
sti
jmp
jae
shl
lock
push
dec
lahf
cs
sar
sbb
add
inc
inc
inc
jge
pop
cdq
ror
div
jno
rcr
xor
(bad)
dec
ins
sti
push
jp
mov
add
add
mov
bound
ins
scas
js
mov
ds
sbb
mov
jmp
inc
dec
ret
mov
xlat
sub
mov
and
push
je
adc
sbb
pop
jmp
arpl
shl
xchg
in
out
rcr
ror
and
call
mov
sbb
xchg
mov
retf
pop
adc
popa
shl
inc
jl
mov
cmp
mov
sar
sub
add
cmp
sub
lock
xor
aam
push
bnd
scas
addr16
mov
fadd
rcr
inc
in
mov
js
call
fsub
in
xor
and
sbb
lods
gs
dec
mov
xlat
shl
push
jmp
pop
pop
push
jbe
sar
dec
ss
sub
inc
lock
and
jns
cmc
adc
cmp
xchg
dec
sbb
loopne
clc
add
cli
mov
fwait
bound
fdiv
pop
js
xlat
not
xor
ja
sbb
aaa
into
jo
cmp
stos
inc
cmc
call
sahf
inc
daa
das
xor
jo
imul
data16
(bad)
adc
repz
mov
in
lods
ss
sbb
fisttp
adc
test
push
cmps
xchg
stc
adc
sbb
(bad)
cli
or
dec
test
push
push
and
jo
loope
ss
xor
out
cmps
xor
setb
sbb
xchg
dec
imul
(bad)
adc
test
add
cmp
dec
loopne
jne
addr16
fwait
mov
fcom
jmp
dec
xchg
sti
push
rcl
or
sbb
ret
call
push
lods
sub
in
and
xchg
cmp
fcomp
jp
fidiv
jmp
aad
mov
jnp
mov
hlt
stc
jmp
es
push
test
into
inc
mov
adc
call
(bad)
sub
jnp
clc
call
and
xor
leave
out
xchg
or
loopne
xchg
xchg
(bad)
retf
scas
sti
inc
cs
sti
jge
test
mov
int
int3
cmps
xchg
jp
out
xor
adc
out
inc
dec
inc
fwait
div
sbb
push
imul
lea
dec
mov
xchg
push
and
or
mov
cld
and
jno
push
jae
nop
dec
xchg
pop
push
cmc
xchg
mov
inc
cmp
sbb
mov
nop
mov
in
and
jb
ins
jne
aam
mov
fdivr
scas
(bad)
dec
lea
sbb
cmp
sahf
mov
cmp
push
popf
jg
adc
iret
inc
sub
mov
(bad)
push
js
inc
inc
cdq
mov
jmp
adc
imul
inc
inc
pop
mov
cs
cmp
inc
leave
jge
push
xor
mov
pop
popf
fwait
and
jmp
popf
aam
inc
mov
imul
push
xchg
sbb
mov
cmp
jle
push
mov
push
into
adc
xchg
mov
push
fstp
jnp
daa
std
sahf
sbb
dec
into
inc
loope
dec
mov
sbb
cdq
in
sbb
into
xchg
test
mov
shr
fnstsw
shl
jge
out
add
adc
cmps
dec
pop
inc
adc
inc
xchg
out
dec
icebp
mov
into
cwde
sub
mov
jne
mov
aad
mov
lahf
adc
cs
push
push
push
jns
pop
xor
enter
mov
sub
inc
cmp
cmp
sub
jp
dec
mov
push
imul
das
dec
mov
xchg
out
iret
scas
fidivr
xchg
into
jbe
cdq
nop
jns
movs
outs
lods
(bad)
pop
and
dec
scas
jecxz
or
xchg
stc
mov
sub
ficomp
dec
dec
out
scas
daa
mov
lods
add
bswap
lahf
pop
add
ss
fwait
or
fsubrp
das
add
and
mov
xchg
sub
(bad)
mov
daa
and
leave
cmps
pop
add
call
in
out
push
fs
fiadd
adc
jne
fldcw
in
inc
push
dec
add
jge
adc
das
jo
push
in
sub
push
dec
or
dec
sub
and
addr16
mov
out
loope
mov
loopne
out
add
iret
fidivr
push
inc
sbb
scas
shld
push
int3
xchg
push
add
stos
add
out
mov
sub
push
adc
sub
jp
loope
or
sbb
mov
xchg
(bad)
mov
pop
ret
jno
inc
and
mov
xchg
sbb
mov
cmp
xchg
sti
jns
xlat
gs
jbe
nop
xor
xchg
out
scas
sub
dec
retf
jb
cli
cmp
ret
xchg
fwait
cmp
sbb
out
enter
push
pop
fs
jp
call
stos
repz
lods
stos
dec
adc
sbb
pop
fs
jl
cmp
lds
aaa
lock
fs
jp
enter
or
or
into
inc
pop
pop
add
out
pop
jns
xor
xor
test
sbb
in
xor
mov
aaa
(bad)
or
jle
or
mov
daa
loopne
int3
sbb
fidiv
outs
(bad)
loopne
(bad)
adc
mov
mov
and
out
(bad)
arpl
retf
test
out
xor
addr16
cmp
push
mov
loop
loopne
inc
xchg
dec
ret
shl
aad
pushf
aas
adc
mov
dec
push
nop
xchg
sti
leave
and
cli
xor
mov
push
fmul
push
iret
xchg
nop
cdq
cmc
retf
imul
cmps
pop
aam
xor
fiadd
test
dec
dec
or
popf
in
jae
mov
idiv
leave
mov
jp
scas
mov
cmp
jg
jne
sbb
movs
pusha
or
mov
stos
xor
(bad)
rcr
aam
add
cmp
add
xchg
sub
xchg
jno
adc
scas
pop
sbb
rcr
mov
push
push
cwde
mov
sub
js
push
std
mov
cmp
inc
or
(bad)
push
call
mov
sub
mov
jge
in
jge
cmp
xchg
inc
movs
sbb
xor
stc
fldenv
cld
jns
cdq
mul
push
icebp
lds
aad
and
retf
imul
lahf
mov
sub
or
repz
push
or
sbb
add
jne
vandnps
ds
cmp
xchg
rol
fwait
mov
das
adc
(bad)
push
aaa
or
xchg
inc
inc
movs
out
sbb
push
cmp
or
imul
outs
(bad)
pop
inc
cld
and
and
call
cli
and
dec
fcomp
push
in
outs
aaa
fist
enter
dec
mov
lahf
stos
es
in
loop
or
lds
mov
dec
mov
sbb
int3
cmps
mov
cmp
imul
sti
popa
jns
mov
and
adc
es
mov
imul
cs
pop
in
in
add
mov
scas
dec
inc
aaa
or
inc
lds
sbb
hlt
add
in
fnstenv
inc
add
pop
arpl
adc
test
test
pop
push
pusha
or
leave
mov
pop
xor
adc
pop
sub
in
cmp
(bad)
jmp
enter
push
jbe
enter
imul
stos
inc
push
out
dec
xchg
inc
or
in
cmp
adc
cmp
clc
retf
dec
jb
mov
dec
(bad)
push
jmp
cmc
test
iret
shr
cmp
mov
out
mov
fild
stos
dec
xchg
sbb
inc
xchg
shr
add
shr
push
ss
out
int3
dec
ss
mov
test
fcmovbe
push
and
fwait
cld
rcr
sbb
jmp
out
cmp
jecxz
shr
xor
outs
data16
int3
mov
add
ret
adc
xchg
inc
push
scas
and
gs
(bad)
cmc
repz
push
std
xor
push
mov
mov
in
cli
sub
push
xchg
add
jne
xchg
jne
jecxz
mov
fcom
loope
daa
daa
pop
daa
in
cmp
cmps
cmps
movs
mov
add
sub
adc
mov
sahf
out
adc
clc
mov
inc
xor
jno
repz
fidivr
xor
jne
nop
pop
pop
adc
inc
sar
xchg
and
jb
or
dec
(bad)
fadd
test
addr16
jmp
test
shl
scas
fimul
int3
cwde
jp
test
mov
push
fisttp
mov
lods
push
fwait
lods
gs
add
sbb
jmp
scas
or
pop
jecxz
stos
sub
neg
(bad)
push
nop
adc
push
sti
dec
jmp
icebp
gs
sub
int3
mov
push
adc
xor
mov
or
daa
sbb
mov
mov
mov
iret
cmp
push
mov
int3
enter
add
fdivr
jno
cmps
mov
jno
ja
fwait
pop
jmp
cmp
fcom
mov
out
dec
mov
fwait
leave
push
mov
test
jno
sti
cmp
mov
push
adc
pop
xchg
mov
mov
retf
cmp
adc
mov
cld
cmp
mov
sbb
fsubr
cmps
xchg
in
xchg
popa
in
ins
out
jp
lea
and
fadd
jne
sub
push
xchg
mov
pop
outs
xor
xchg
dec
add
mov
repnz
inc
jbe
add
xchg
clc
push
xchg
cmp
rcr
ud2
rol
inc
loope
mov
test
loope
lock
jg
fcmovnu
leave
pop
mov
shl
xor
or
sbb
ds
(bad)
fs
out
push
fist
sbb
xchg
mov
cmps
iret
adc
push
mov
jp
pop
aad
cmp
hlt
jne
sahf
arpl
fcom
mov
inc
xor
and
or
or
js
pop
sbb
popf
fisub
(bad)
xor
ins
aam
repz
jno
fstp
dec
scas
jmp
gs
test
jns
cmp
push
mov
(bad)
stc
stos
push
jmp
push
popa
ds
sbb
sbb
fmul
ss
into
(bad)
lock
xchg
push
gs
mov
test
sbb
pop
and
and
or
pusha
popf
in
sbb
adc
outs
add
inc
retf
call
inc
in
mov
dec
push
inc
xchg
inc
pop
in
cmp
sti
fld
sbb
in
sbb
loopne
stc
retf
jecxz
pop
jb
(bad)
jmp
outs
cmps
and
xchg
pop
xor
sar
xor
add
clc
and
xor
push
rcr
xchg
add
test
jmp
adc
je
retf
xchg
daa
mov
xchg
adc
cmp
mov
ins
cmps
sbb
mov
sub
adc
push
push
lahf
scas
into
sub
fsub
pcmpeqb
sbb
xchg
out
xchg
and
push
mov
mov
jmp
cmps
sbb
imul
mov
repz
push
pop
adc
push
out
jb
hlt
js
popa
mov
cmp
scas
call
jp
jae
or
dec
fiadd
data16
out
sahf
jns
push
xor
in
fsubp
ins
out
dec
loopne
sub
dec
dec
aas
add
push
dec
dec
(bad)
jmp
cmc
jb
das
enter
dec
in
sub
xchg
mov
push
pop
jbe
not
and
adc
mov
scas
xlat
and
adc
or
mov
aad
add
pop
leave
test
pop
mov
push
xchg
jl
mov
imul
dec
cmc
sbb
add
inc
bound
cmp
adc
out
ds
cld
ret
adc
call
add
push
leave
adc
popf
xor
mov
sbb
inc
movs
or
mov
fbstp
mov
mov
jp
jg
ins
mov
or
int3
hlt
bound
or
mov
sbb
adc
imul
ds
jecxz
ins
sar
mov
(bad)
popa
cmps
pop
mov
test
adc
mov
test
outs
xchg
pusha
mov
mov
test
sbb
ins
cmp
mov
jb
ds
sar
pop
or
inc
or
fs
mov
jno
inc
add
fabs
mov
test
inc
and
xchg
and
cld
push
fidivr
call
movs
lahf
cmp
mov
jp
sbb
dec
jo
(bad)
mov
sbb
fsubr
mov
test
in
lahf
mov
aas
mov
shr
repz
stos
jl
into
repz
push
retf
xor
bound
jne
add
pop
ds
xchg
mov
mov
sbb
les
stos
xlat
bound
loope
loop
push
push
pop
dec
push
les
fmul
pop
xor
jno
pop
mov
mov
and
xor
pop
into
cdq
enter
fisub
dec
sbb
(bad)
clc
jbe
loope
mov
loop
sub
push
pop
(bad)
fmul
dec
not
icebp
jae
sahf
fdivr
test
jmp
mov
ds
mov
shr
push
scas
add
inc
jg
dec
xchg
call
sbb
cmps
add
jge
fild
jge
push
fiadd
adc
into
and
cdq
adc
out
clc
and
push
lods
mul
sahf
dec
cld
adc
test
retf
mov
ficom
jp
cdq
fimul
push
xlat
das
cdq
mov
ret
std
jae
ins
and
cmp
jno
std
pop
sahf
test
or
lods
outs
xor
dec
and
sub
mov
movs
rcr
inc
pusha
sub
popa
mov
sub
stc
call
call
mov
pop
sbb
and
xchg
mov
xor
ffreep
jge
jno
pop
dec
adc
sbb
retf
adc
sbb
dec
in
outs
mov
(bad)
jmp
mov
inc
adc
pop
xor
cli
jo
mov
xor
jnp
dec
fld
in
in
or
and
or
adc
int
jl
pop
std
mov
aas
and
fxch
cli
adc
gs
movs
or
retf
fstp
loopne
jg
daa
fst
out
stc
mov
push
cs
rcl
xchg
sub
adc
aam
out
jns
cmps
stc
pop
or
loopne
outs
add
or
add
mov
retf
or
or
adc
pusha
cwde
or
loop
clc
mov
adc
popa
sbb
out
adc
cmp
jp
mov
jnp
outs
mov
or
sub
pop
out
jmp
jbe
push
jle
movs
xchg
jbe
(bad)
iret
bound
mov
inc
in
(bad)
pop
inc
jl
out
je
movs
stos
xor
js
(bad)
cmps
lods
and
fsubr
dec
sbb
mov
shr
pop
les
lahf
jae
dec
mov
pop
xchg
or
pop
imul
pop
pop
movs
sub
js
retf
loope
gs
into
or
mov
mov
enter
inc
icebp
or
cwde
sbb
aaa
fdivp
xor
add
fstp
push
inc
js
repz
lar
frstor
imul
sbb
mov
dec
cmps
xor
pop
cs
dec
pop
imul
mov
cld
push
retf
rcr
and
push
jne
xor
mov
lds
or
test
push
sub
sub
pop
addr16
jp
and
pop
add
inc
mov
mov
sbb
sbb
fcmove
inc
mul
sbb
in
cld
add
and
clc
jmp
mov
sbb
scas
xor
lock
mov
jnp
cmp
adc
iret
fadd
cmp
sbb
jne
neg
in
pop
sub
xchg
test
pop
(bad)
hlt
dec
xchg
jno
call
popa
scas
or
xor
enter
hlt
sub
jl
das
mov
jmp
and
not
add
in
cmp
inc
movs
inc
mov
xchg
sbb
sahf
and
popf
aam
rol
push
mov
pop
fst
pop
mov
adc
cmps
retf
mov
mov
mov
daa
enter
add
mov
aas
xlat
mov
sbb
sub
iret
outs
mov
inc
aas
(bad)
out
aam
pop
push
in
push
(bad)
dec
cmp
ja
push
call
sub
repz
inc
mov
stc
pushf
std
fcom
xor
or
mov
sar
sahf
mul
adc
sahf
movs
sahf
(bad)
push
xchg
inc
adc
jne
test
daa
pop
sub
ds
mov
cwde
pop
xor
and
icebp
retf
jb
and
jmp
push
inc
add
dec
sbb
mov
push
fwait
sti
xchg
cli
pop
jno
mov
outs
das
jp
in
sahf
leave
adc
loop
aas
rcl
cld
pop
xchg
jge
nop
jnp
adc
pop
ret
sub
loopne
sub
inc
(bad)
fs
add
cmp
cmp
dec
ret
lock
or
or
test
lods
fwait
in
xchg
mov
adc
dec
repnz
mov
scas
mov
(bad)
test
ins
lea
repz
xor
sar
inc
test
add
hlt
inc
xchg
jecxz
test
imul
push
pop
fst
pop
inc
ror
(bad)
(bad)
xchg
push
aam
hlt
mov
xchg
es
loopne
and
dec
mov
stos
xchg
cmp
xchg
push
add
dec
or
xchg
jae
xor
js
rcl
jg
jnp
mov
inc
fs
or
out
lds
(bad)
loopne
push
push
(bad)
and
adc
les
mov
leave
mov
aam
stos
ss
and
add
int3
jp
push
rcl
mov
or
add
fcomp
jg
sbb
call
add
push
test
cmp
icebp
xor
and
mov
sub
movs
push
mov
cmps
ret
movs
push
mov
mov
or
test
jmp
es
and
call
and
loop
push
fcomp
mov
mov
gs
jecxz
cmp
add
test
adc
mov
hlt
mov
xchg
arpl
fisub
sbb
cmp
sbb
sbb
clc
js
push
nop
mov
lahf
jmp
fbstp
je
fsubr
add
leave
cmp
mov
loopne
fld
jae
fucomip
push
jmp
mov
inc
xchg
mov
hlt
jb
push
jle
(bad)
xlat
int
lea
cmp
nop
xchg
inc
jnp
mov
in
leave
mov
xor
sub
pop
adc
popf
and
inc
or
sub
jnp
aam
test
pop
ds
jl
(bad)
adc
xor
sbb
xchg
inc
xor
adc
sti
dec
loope
dec
cmp
scas
gs
push
call
das
rcl
and
retf
test
xchg
cmc
xor
cld
retf
mov
adc
mov
lods
ins
mov
lods
sbb
movs
or
test
push
rcl
test
jmp
add
mov
jmp
sub
sbb
addr16
sub
(bad)
call
lods
mov
ins
fst
scas
enter
cdq
out
popa
jns
mov
and
ins
and
mov
jne
sub
out
adc
inc
rol
mov
loope
xor
jb
sub
outs
inc
movs
inc
mov
stos
leave
int3
mov
fxam
loopne
cmps
jmp
or
mov
cmp
movs
in
sti
mov
aaa
test
pop
xchg
pop
daa
fs
stc
cdq
cdq
xor
mov
inc
inc
push
shr
test
pop
arpl
push
mov
jge
cmp
inc
add
mov
sub
ins
sbb
daa
sub
fmul
jmp
sahf
add
jb
aad
and
and
pop
out
ret
fdiv
cs
dec
jge
mov
int
cdq
push
dec
xor
jmp
jo
mov
popf
push
xor
movs
pop
inc
or
cs
mov
or
fsubr
jb
ds
scas
adc
cmp
pop
ss
cmp
rcr
mov
cmp
or
sub
jecxz
in
fmul
cwde
aam
push
retf
xchg
and
or
lods
mov
mov
sub
mov
xor
movs
push
retf
xor
icebp
imul
ret
adc
mov
pop
fwait
push
adc
scas
sbb
(bad)
retf
mov
push
stc
push
push
bound
cmp
dec
pushf
sbb
or
test
into
ret
nop
xchg
mov
add
(bad)
imul
shr
mov
or
mov
scas
lods
scas
mov
or
scas
repz
xchg
mov
xlat
push
clc
retf
(bad)
mov
lods
and
mov
aam
sbb
or
adc
jl
mov
out
lock
inc
or
test
nop
mov
jmp
and
fwait
rol
pop
test
shr
xor
xchg
sub
dec
inc
shl
stos
push
hlt
inc
loop
mov
dec
cmp
push
push
cmp
js
scas
mov
cmc
mov
pop
aaa
dec
mov
sub
jno
lock
mov
adc
or
push
mov
pop
fisttp
xor
dec
jno
cli
ret
push
ror
(bad)
into
push
xor
adc
inc
mov
lods
mov
mov
in
cmps
fadd
(bad)
and
xchg
stos
pop
adc
gs
jecxz
out
cli
fsubr
in
gs
xor
adc
add
out
movs
xchg
inc
sub
jnp
lds
cmp
pinsrw
mov
sub
ins
loopne
hlt
(bad)
jae
cwde
fld
in
dec
pop
push
inc
loopne
jbe
test
jge
xchg
sbb
imul
je
pop
or
cmps
clc
(bad)
std
setl
int
xchg
jecxz
sti
adc
sbb
adc
and
dec
mov
pop
inc
jno
iret
and
sub
ds
aaa
ror
stc
dec
fs
add
sub
shr
inc
fidivr
test
in
dec
shl
ret
push
fdiv
addr16
das
push
xchg
addr16
jo
push
idiv
clc
outs
cwde
hlt
or
popa
cmp
sti
jnp
cmp
xchg
sbb
push
stos
pop
pop
cli
lods
outs
mov
mov
push
cmp
dec
scas
imul
pushf
mov
adc
aam
push
out
xor
stc
sub
pop
push
into
push
inc
pop
imul
push
xor
mov
add
jmp
and
loopne
aad
fiadd
retf
sub
cmova
retf
mov
shr
into
out
pop
pop
mov
jp
mov
adc
push
pop
mov
in
jg
aaa
or
out
fnstsw
or
retf
pop
xchg
push
add
test
sbb
mov
not
(bad)
repz
je
ret
dec
and
cmp
and
jmp
sar
inc
add
and
stc
ins
jg
outs
cmp
or
sub
(bad)
fsubr
sub
inc
jne
and
cmc
cmps
or
jmp
mov
pop
cmps
ss
cmp
sub
or
fsub
xchg
or
enter
jnp
(bad)
mov
scas
fcmovnbe
pop
xchg
add
dec
mov
sahf
fmul
mov
add
mov
inc
test
inc
inc
(bad)
stos
sbb
test
ja
and
xchg
sbb
xor
pushw
jmp
adc
outs
dec
addr16
daa
lods
mov
mov
(bad)
pop
xor
addr16
jge
retf
(bad)
mov
scas
jmp
jl
sub
and
sbb
xchg
sub
xor
mov
xor
jge
mov
pop
add
and
je
pusha
fisttp
mov
mov
mov
push
mov
xor
dec
push
xchg
fimul
das
xor
cmp
xchg
stos
jmp
or
in
add
mov
pop
ja
sub
enter
jnp
fs
test
inc
dec
repnz
adc
xchg
inc
mov
mov
push
and
imul
arpl
pop
enter
subps
jp
stc
icebp
sahf
mov
jge
(bad)
out
les
je
fcom
repz
sub
xchg
mov
jae
je
fcmovnu
push
dec
ss
jnp
adc
mov
mov
jb
lea
neg
xchg
mov
or
sar
push
or
inc
push
lods
adc
jp
adc
xchg
push
xor
nop
push
loope
movs
pop
add
jg
and
jmp
js
icebp
mov
cmp
cmp
ss
mov
not
es
sub
mov
sahf
pop
stos
lods
dec
add
shr
inc
cs
jno
add
push
push
ret
or
out
mov
call
pushf
dec
and
pop
mov
test
adc
pop
pop
aad
les
movs
call
popa
jecxz
(bad)
adc
xor
mov
inc
xor
pop
sub
out
sub
jle
cmp
cmp
(bad)
int
and
adc
jo
mov
je
or
int
(bad)
sub
in
adc
(bad)
shr
loope
push
out
add
xchg
cmp
shl
sbb
nop
inc
sbb
mov
pop
add
ins
push
sbb
sub
pop
mov
dec
push
push
xor
xchg
ret
jae
adc
dec
push
inc
or
pusha
shl
imul
fsub
xchg
mov
not
push
pop
scas
stos
out
clc
mov
fwait
dec
cld
neg
scas
inc
(bad)
jb
cwde
sahf
mov
pop
pop
in
(bad)
imul
add
stc
outs
inc
shl
inc
jmp
cmp
jns
cmp
xor
stos
xor
adc
inc
mov
popf
push
pop
sub
push
and
mov
(bad)
daa
pop
fidivr
repnz
xlat
and
pop
retf
int3
inc
sbb
push
test
mov
mov
iret
das
mov
and
loop
aas
cmps
scas
push
sbb
fcomp
cwde
or
xchg
call
mov
(bad)
fwait
ds
jecxz
push
addr16
push
ins
mov
addr16
add
arpl
mov
and
repnz
pusha
and
ins
into
mov
xchg
and
push
inc
mov
jp
jmp
sbb
or
ror
cli
pop
xchg
mov
imul
repz
leave
daa
jmp
(bad)
inc
xchg
and
addr16
and
ins
xchg
adc
add
jp
mov
or
retf
pop
cmp
aaa
ss
sbb
sbb
aad
adc
fcomp
xchg
jmp
imul
and
sbb
sub
pop
inc
xchg
inc
icebp
push
mov
lahf
adc
sbb
test
sbb
loopne
push
mov
out
cwde
imul
push
(bad)
test
add
stc
push
rcl
int3
and
movs
xor
adc
retf
in
dec
and
(bad)
mov
dec
pop
pop
imul
sbb
xor
mov
dec
mov
xor
pop
in
pushf
shr
fst
sub
popf
cs
or
int
clc
mov
jmp
movs
aam
pop
pusha
test
and
adc
outs
popf
mov
out
je
clc
dec
test
sbb
loop
(bad)
pop
or
pop
jl
sti
(bad)
lock
mov
sbb
ret
jne
clc
pop
adc
jno
inc
les
add
pop
sbb
cmp
pop
cld
mov
scas
loope
mov
mov
stos
add
pusha
and
(bad)
test
cmp
add
das
adc
lods
and
loopne
ror
jge
or
or
bound
sbb
push
xor
gs
mov
nop
xchg
jg
cmp
aam
mov
dec
retf
(bad)
je
into
jns
push
imul
lds
test
retf
bound
sbb
mov
xchg
sub
movs
xchg
bound
loopne
nop
dec
je
call
adc
or
imul
data16
idiv
dec
repz
jge
add
jl
pop
and
int3
lods
dec
pop
xor
imul
inc
jne
rcr
ins
sbb
inc
mov
jmp
jmp
in
je
adc
dec
xchg
xor
sbb
push
push
jmp
(bad)
sub
adc
lahf
and
jns
mov
pop
rcr
xrelease
imul
xor
push
xor
jno
xchg
fidivr
out
push
aaa
cmp
push
or
or
and
adc
idiv
cmp
(bad)
fld
add
inc
and
mov
mov
jno
out
sub
sub
hlt
adc
mov
pushf
jae
push
jb
and
jg
mulps
pushf
jne
out
and
push
xchg
rcr
cmp
inc
inc
fs
mov
lds
test
mov
shr
sbb
jmp
jnp
(bad)
lods
push
push
cmp
pop
ret
sbb
add
shl
cwde
adc
movs
fadd
mov
jl
ficom
adc
xor
add
xchg
push
mov
mov
or
mov
jmp
mov
cld
add
leave
dec
loop
out
shl
loop
adc
or
cmp
adc
(bad)
cdq
xchg
mov
mov
in
push
xor
cmc
jae
jle
lea
sub
push
inc
retf
sub
jg
mov
mov
pop
dec
pop
dec
fild
sbb
test
lods
test
and
jle
je
mov
rol
xchg
mov
imul
aad
sbb
icebp
(bad)
(bad)
mov
sub
fnsetpm(287
or
and
mov
inc
xor
add
(bad)
and
push
loop
and
cmp
sub
repz
and
sbb
dec
cmp
cld
mov
push
mov
cmps
xchg
int
xchg
pop
imul
sub
xchg
or
dec
and
mov
std
std
ss
es
push
inc
jle
inc
or
int3
aaa
and
xor
jecxz
cdq
sub
jmp
test
neg
push
cmp
push
rol
mov
fstp
ss
mov
(bad)
xchg
fsubr
dec
cmp
int
and
sub
fdiv
jne
pusha
lds
dec
out
push
daa
mov
mov
arpl
cmps
inc
int3
jecxz
fnsave
mov
ficomp
xchg
imul
sub
or
or
xchg
rol
or
jns
popf
in
fisubr
xchg
adc
push
mov
imul
inc
cwde
mov
dec
sbb
dec
inc
popf
pop
lds
sub
fsub
and
push
inc
outs
fdivr
cli
pop
ds
call
add
add
sbb
jae
int
mov
(bad)
and
jae
fld
xchg
nop
mov
push
add
pop
jbe
out
loop
pushf
cmc
test
jnp
inc
dec
js
inc
push
enter
pop
push
cmp
inc
or
pop
in
call
cmp
(bad)
dec
xchg
inc
cmp
jns
mov
sub
aad
xor
dec
sahf
mov
inc
jb
cwde
inc
cmc
mov
jns
lods
stos
cld
jmp
ins
aas
lahf
xchg
mov
jne
or
aaa
into
cmp
outs
adc
repnz
xchg
mov
cmp
out
movs
inc
mov
jns
mov
sbb
scas
lea
mov
xchg
sub
xor
and
ret
cmp
xchg
jbe
fsincos
rcr
ss
(bad)
dec
outs
sub
jle
xchg
add
aam
dec
pop
sub
sub
not
add
xchg
enter
nop
cmp
sbb
cmp
sbb
inc
pushf
ret
sar
popa
cs
ret
push
pop
pop
or
push
arpl
loopne
movs
stos
xlat
imul
ror
sahf
fimul
mov
push
push
enter
ss
mov
movs
sub
enter
pop
mov
jmp
jne
xchg
sub
dec
jp
sbb
dec
pusha
repnz
shl
mov
icebp
inc
and
fmul
jb
fild
dec
push
push
inc
pop
call
xchg
js
or
gs
fsubr
addr16
neg
mov
popa
pop
mov
fild
ja
pusha
jo
push
cmps
mov
sar
mov
test
xor
call
push
aaa
ss
dec
inc
push
bound
mov
clc
push
and
lahf
clc
fs
int
push
call
adc
cmp
mov
popa
mov
sahf
mov
pushf
sbb
ins
out
jl
adc
and
cmp
frstor
fsubr
aaa
add
dec
imul
movsx
mov
xchg
vcmpss
shl
rol
cmc
into
es
in
jb
loop
loopne
xchg
sbb
and
call
xchg
(bad)
fld
ins
test
bsf
or
adc
(bad)
push
pushf
sub
fwait
sbb
push
and
loop
push
in
push
or
cli
xlat
ret
and
std
cmp
xchg
nop
lds
push
inc
mov
scas
cmp
adc
(bad)
cmp
xchg
mov
mov
mov
aas
inc
ss
outs
mov
jmp
inc
sbb
repz
call
shr
pop
retf
sub
mov
call
pop
je
imul
cdq
dec
mov
loop
push
call
or
test
or
int
xchg
das
dec
addr16
jno
xor
out
pop
push
pushf
lds
or
adc
mov
push
adc
fsub
das
(bad)
and
sbb
inc
add
and
pusha
mov
sub
and
sar
cld
mov
lahf
sahf
adc
ss
fistp
push
inc
pop
outs
mul
jb
push
cmp
aaa
stos
xor
push
add
push
adc
aam
add
inc
and
repnz
test
mov
hlt
ss
fnstenv
sbb
cmp
jno
movs
cwde
add
mov
js
(bad)
pushf
cwde
mov
jmp
add
(bad)
mov
in
mov
mov
fist
test
mov
mov
nop
mov
in
push
aad
mov
mov
mov
or
add
rcl
sub
bswap
sub
scas
in
aad
adc
xlat
data16
xchg
mov
and
cwde
push
xor
(bad)
sbb
mov
pop
dec
and
out
out
daa
mov
sub
and
push
jmp
jno
pop
fist
mov
cwde
push
ins
(bad)
es
mov
jge
fwait
outs
jns
pop
push
es
inc
rol
or
or
ds
in
sahf
jae
pop
mov
int
adc
test
clc
push
mov
jl
xchg
stos
mov
cwde
out
sahf
hlt
cs
xlat
pop
gs
fisub
mov
mov
popa
loopne
jne
fsubr
mov
es
test
sbb
enter
or
loop
xchg
mov
aaa
out
push
push
inc
mov
jnp
inc
xor
and
push
push
xchg
test
jns
stos
jmp
mov
ror
push
mov
dec
repz
bound
(bad)
mov
or
jmp
clc
mov
pop
cli
sub
jmp
test
push
pop
xchg
sub
scas
xor
jmp
jp
shl
test
in
jge
data16
jns
fidiv
cmc
mul
and
adc
ja
jbe
mov
iret
push
sahf
mov
cmps
cmp
pop
push
pop
xchg
fldenv
jns
jmp
pushf
aas
adc
xlat
out
shl
mov
(bad)
adc
je
add
outs
cmp
or
jl
pop
dec
or
fiadd
loopne
mov
and
sub
adc
stc
cmps
out
dec
daa
mov
scas
jno
test
push
mov
mov
cmc
sbb
in
pop
mov
fimul
les
imul
mov
add
loop
je
jle
cmp
adc
out
hlt
cmp
scas
js
sti
xor
stos
mov
les
stos
mov
inc
iret
dec
push
and
data16
pop
mov
daa
sbb
mov
sar
pop
not
jae
inc
out
pop
inc
pop
mov
adc
cli
aas
xchg
mov
test
adc
adc
push
test
jmp
popf
loop
cmp
xor
stc
in
scas
pop
xchg
ja
out
xor
dec
xor
jo
imul
xrelease
dec
clc
push
out
or
test
adc
jno
push
pop
idiv
(bad)
ret
mov
sbb
xor
or
cmps
mov
fwait
aaa
js
mov
lds
enter
or
sbb
xchg
inc
stos
jle
in
inc
ja
cmp
cli
adc
or
nop
sub
es
imul
sbb
je
or
mov
mov
mov
and
xchg
popa
inc
leave
out
sbb
mov
fucomp
out
dec
rcr
aam
sbb
sbb
pop
ror
jp
call
imul
dec
pop
js
jg
shl
fistp
cmps
sub
in
test
cmp
in
mov
sub
movs
(bad)
adc
or
(bad)
(bad)
mul
cmc
mov
mov
out
ja
fldcw
push
ins
xchg
mov
xor
xor
int
jge
fstp
jne
mov
jle
pop
iret
mov
repz
mov
xor
mov
scas
mov
jns
pushf
inc
adc
hlt
int
push
push
enter
adc
xchg
out
add
ds
cwde
loopne
xchg
mov
lods
ins
lahf
test
lods
imul
sub
iret
sbb
ja
(bad)
call
scas
mov
push
and
fcomip
bound
test
popf
jb
(bad)
mov
cmps
xchg
sti
dec
push
add
and
mov
ret
pop
(bad)
adc
push
(bad)
arpl
aaa
xchg
(bad)
(bad)
xor
xor
mov
aas
into
xor
adc
inc
js
pop
xor
stos
nop
ret
jle
mov
dec
sub
cli
pop
test
jg
inc
or
adc
mov
aas
sti
jb
push
jne
sbb
push
pushf
xor
imul
xchg
outs
jnp
test
jnp
inc
cvtps2pd
or
rep
int
les
or
int3
cmp
mov
push
sub
dec
inc
test
xchg
sbb
pusha
in
outs
loopne
cmp
stos
mov
xchg
int
add
mov
cmps
jp
xor
out
fisubr
cs
ss
in
scas
dec
sti
idiv
scas
mov
imul
sti
pop
jae
xor
int3
lds
and
inc
push
pushf
fldenv
ret
add
push
sbb
mov
in
dec
repnz
or
jbe
lahf
out
dec
add
outs
add
fiadd
ins
ins
cmp
rcr
rcl
push
add
push
out
push
dec
aaa
shl
loop
inc
retf
shl
loope
push
leave
adc
pop
inc
push
and
pop
(bad)
mov
scas
les
cwde
adc
pop
mov
outs
jbe
mov
adc
lea
out
add
push
sub
push
push
mov
lahf
mov
push
pusha
pop
cmp
into
xor
outs
mov
int
and
mov
mov
rol
outs
popa
sub
jg
and
mov
jmp
lahf
je
mov
pop
xor
pop
std
or
pop
and
mov
mov
out
test
xchg
les
fstp
pop
xlat
ins
xchg
ss
push
ins
or
iret
sub
sub
scas
scas
js
mov
mul
jl
mov
gs
hlt
lods
cld
fistp
pop
movs
push
jecxz
xor
popa
sbb
push
inc
adc
and
adc
scas
mov
dec
aaa
pop
ficom
add
popa
xlat
adc
or
in
xchg
div
jb
sbb
and
xor
inc
les
scas
mov
mov
mov
pop
jne
or
push
jge
mov
fxch
aaa
jge
sbb
out
cmps
cdq
imul
hlt
xor
cs
mov
xchg
and
sub
sub
daa
(bad)
js
nop
dec
js
mov
push
ds
in
push
cmc
jmp
or
aad
push
mov
inc
mov
outs
popa
push
stc
dec
push
(bad)
das
push
dec
repz
mov
cmp
lds
jecxz
sar
mov
sub
imul
fidiv
je
test
sbb
arpl
jnp
jp
mov
mov
mov
arpl
and
jg
pop
popa
pusha
into
cmp
cdq
cs
inc
dec
hlt
cmp
retf
sub
aaa
(bad)
std
stos
cmps
lea
jb
aas
lock
and
test
iret
pushf
mov
xor
rol
adc
sbb
lahf
mov
sub
cwde
dec
sbb
sub
in
jmp
cmps
into
mov
cmp
lds
ins
jl
pop
ret
adc
jecxz
and
inc
mov
inc
js
retf
les
or
iret
or
(bad)
iret
popf
mov
scas
bound
dec
ss
cmp
dec
mov
sbb
out
add
imul
stc
cmc
std
aam
(bad)
div
and
cs
or
loop
sub
cdq
adc
mov
loopne
vpmuludq
add
pop
push
and
mov
push
xchg
ficomp
clc
push
pop
inc
jno
es
je
aam
rcr
xor
pop
imul
loopne
call
mov
push
adc
push
push
les
int
xchg
fst
das
or
cwde
popf
test
in
cs
dec
mov
fnstsw
lea
or
sbb
scas
or
or
push
out
ret
loop
dec
xchg
stos
mov
dec
mov
push
jecxz
paddq
je
mov
cmp
lock
bound
dec
test
push
movs
dec
mov
cmps
xchg
mov
mov
lahf
adc
mov
inc
jbe
sub
sub
test
jnp
mov
cmp
mov
shl
mov
es
mov
shr
(bad)
loop
xlat
push
or
pop
push
mov
jnp
cli
fnstsw
cmp
add
sbb
je
mov
dec
dec
fprem1
jmp
mov
(bad)
xchg
mov
loop
ret
mov
jnp
in
mov
xchg
dec
fist
out
add
bound
push
into
xchg
iret
cmp
imul
stos
test
leave
das
cmp
jo
push
adc
stos
xor
popa
iret
cmps
jmp
cld
jns
adc
pop
outs
fdivr
call
sub
sbb
or
xor
add
add
mov
sub
test
add
(bad)
outs
cmc
cmp
(bad)
lock
(bad)
fwait
(bad)
shl
sub
call
(bad)
jecxz
scas
mov
adc
popf
add
(bad)
xchg
scas
aam
or
inc
pop
retf
fild
xor
test
cs
js
mov
(bad)
(bad)
inc
cld
dec
ja
ins
popa
pminub
(bad)
(bad)
sub
push
sbb
test
pop
inc
arpl
add
in
mul
sbb
lock
mov
(bad)
out
mov
icebp
sbb
mov
adc
cmp
jmp
fld
jecxz
call
push
hlt
inc
jb
fdivr
cwde
icebp
test
fwait
aas
dec
mov
shl
mov
jae
enter
add
(bad)
jbe
adc
push
pop
nop
je
data16
or
jnp
iret
or
inc
test
movs
xor
jmp
push
mov
xor
mov
popa
idiv
pop
cmp
sbb
fwait
push
adc
sbb
cmc
xchg
in
out
cmp
fimul
sub
adc
inc
xor
cdq
push
jmp
movs
and
xor
dec
add
inc
enter
aam
push
inc
xchg
mov
inc
dec
push
push
cmp
mov
push
xchg
and
xlat
xor
cdq
addr16
bound
sub
outs
dec
dec
lea
loop
mov
outs
mov
lods
nop
popf
retf
call
mov
into
pop
dec
fisub
retf
jne
jb
and
ret
sbb
and
mov
sbb
and
sbb
(bad)
fdiv
sbb
jns
jmp
bound
jns
fsubr
sbb
dec
dec
sub
imul
loopne
add
push
(bad)
and
in
xlat
pop
iret
push
inc
enter
mov
adc
adc
ss
mov
sub
and
jmp
push
and
loope
fcmovnb
les
xchg
add
lock
add
and
repnz
pop
pop
aad
aas
mov
dec
lods
sbb
daa
sbb
out
pop
sbb
(bad)
mov
xchg
jbe
movs
pop
hlt
aad
sbb
push
repz
or
aad
retf
pop
cmp
push
push
or
or
xor
xor
sbb
pop
cli
dec
sbb
mov
fidiv
les
cli
or
test
inc
out
or
mov
pusha
mov
push
loope
inc
inc
xor
sbb
ret
call
(bad)
(bad)
movs
repz
aas
das
jmp
mov
fld
and
movs
inc
dec
dec
dec
adc
mov
test
test
jae
std
call
push
ss
int
xor
in
sub
dec
inc
mov
jg
mov
mov
xchg
test
sub
and
sbb
adc
push
aad
leave
sbb
aas
mov
jge
rcl
or
dec
jp
popa
test
pop
xchg
mov
sbb
ins
(bad)
push
dec
add
cs
mov
in
xchg
outs
retf
jbe
and
or
push
jmp
sbb
jmp
push
int3
nop
mov
add
lods
fsub
lahf
adc
xchg
mov
ss
mov
add
or
fwait
xchg
pop
data16
dec
xchg
cmp
sahf
mov
paddusw
pushf
add
ss
cmp
std
sbb
out
or
xchg
pop
xor
push
push
das
mov
pusha
jg
int
test
dec
cmp
sbb
repnz
aaa
retf
retf
ins
lock
mov
mov
loope
aas
mov
xor
push
mov
mov
test
push
lods
pop
mov
imul
push
fadd
jg
std
xchg
mov
mov
dec
(bad)
sbb
mov
test
jno
aad
aaa
sbb
sahf
cmp
sub
adc
xchg
or
into
cmp
popf
add
enter
and
aas
sub
fs
int
or
mov
mov
cmp
ret
cmps
mov
xlat
lahf
icebp
adc
or
sub
addr16
mov
out
(bad)
gs
aam
jmp
gs
sub
arpl
test
pop
les
dec
push
scas
push
or
sar
(bad)
jnp
shr
xchg
stos
dec
scas
movs
and
or
sbb
test
push
push
cmp
add
(bad)
repnz
sbb
jp
inc
pop
cld
pop
int
cwde
mov
nop
pop
sar
jle
les
mov
add
dec
hlt
aaa
data16
xlat
(bad)
hlt
pop
inc
jg
rcl
or
mov
jb
std
cmp
xchg
or
call
mov
cmp
add
push
sbb
and
push
pop
or
push
add
div
add
push
sti
mov
ins
jmp
test
sbb
adc
clc
fnstcw
clc
mov
shl
clc
add
push
or
bound
inc
mov
cmp
shl
pop
call
dec
outs
mov
(bad)
xchg
add
rcl
enter
push
xchg
aad
movs
adc
fld
imul
or
mov
fnstcw
or
add
test
fwait
loope
and
xchg
inc
jnp
jmp
out
adc
dec
inc
mov
out
push
xor
(bad)
mov
adc
leave
int
enter
and
sbb
shl
loop
pusha
jle
ins
ja
pusha
fnstenv
pop
cli
out
pusha
xchg
fst
out
shl
add
(bad)
out
loop
and
or
movs
cmc
adc
loope
not
int
xchg
ins
xor
push
and
ret
cmp
repz
sbb
repnz
out
or
inc
das
cmp
addr16
xchg
pop
enter
mov
and
inc
pop
adc
rcl
mov
ror
(bad)
push
fisub
aad
nop
bound
fdiv
xor
mov
mov
xchg
pop
js
adc
in
lods
adc
jne
sbb
scas
mov
mov
rcr
scas
pop
mov
jae
inc
cmp
mov
jnp
aaa
mov
mov
inc
mov
jle
xor
mov
neg
hlt
mov
inc
aad
mov
sahf
loop
stc
cli
or
(bad)
adc
ins
lods
je
shr
adc
jns
mov
sub
xchg
xor
jno
push
fst
or
mov
lods
jns
fdivr
ds
adc
outs
ficomp
out
sti
sbb
cmps
cdq
add
fidiv
cmp
mov
nop
(bad)
sbb
lods
pushf
mov
movs
or
test
push
sub
mov
push
inc
xor
inc
imul
mov
pop
push
lods
fcom
and
push
shl
into
inc
mov
push
and
into
mov
rep
test
cmp
inc
adc
movs
xor
sub
xlat
cli
cmp
stc
neg
aad
dec
das
out
sbb
(bad)
addr16
stos
jmp
lods
mov
pop
in
sti
cmp
ins
pop
fisttp
push
(bad)
dec
(bad)
(bad)
dec
sbb
ds
lods
rol
mov
dec
push
es
outs
push
and
dec
sub
outs
je
mov
add
sub
ins
jl
nop
std
add
int3
and
test
xor
cld
mov
mov
mov
jb
daa
sub
mul
mov
aas
or
loopne
std
pop
xchg
sbb
(bad)
rol
adc
mov
das
clc
push
clc
jae
in
adc
in
int
leave
leave
mov
(bad)
fwait
xchg
sub
mov
push
(bad)
sub
pop
(bad)
daa
pop
and
sti
add
pop
sub
inc
retf
jae
cs
add
and
push
icebp
xchg
mov
fidivr
sbb
fadd
pop
cmps
push
sti
jo
in
lods
xchg
fsubr
push
push
repz
mov
jle
or
sub
arpl
cli
aam
push
xchg
test
out
shl
sub
or
add
test
xor
movs
sub
xor
test
test
mov
leave
mov
mov
and
mov
not
xchg
mov
mulps
add
jmp
xchg
loop
ja
jmp
and
inc
(bad)
imul
inc
push
push
jmp
aaa
fst
xchg
iret
dec
fisttp
jo
jl
and
lock
cld
add
imul
in
fidiv
repz
in
mov
mov
mov
mov
(bad)
repnz
pop
rol
fs
into
adc
sub
mov
add
retf
add
aaa
loope
dec
stc
pushf
mov
lahf
pop
push
ins
push
adc
add
in
jle
clc
adc
lahf
out
mov
inc
in
arpl
jo
fwait
inc
mov
cmp
daa
xor
or
mov
outs
je
sub
jno
js
xor
add
aas
imul
hlt
mov
cmp
rcr
stc
and
cmc
(bad)
ins
int3
adc
mov
icebp
sbb
mov
mov
mov
jmp
fwait
sub
out
xor
cmp
sbb
fmul
pop
addr16
aam
or
js
adc
imul
push
(bad)
mov
je
inc
jnp
outs
and
xor
popa
or
call
(bad)
pop
inc
dec
stos
in
sbb
pop
ret
push
mov
cmps
es
add
add
rol
mov
and
xor
fdivr
test
pop
movs
scas
sbb
mov
xor
int
pop
call
mov
mov
pop
test
dec
loope
mov
jno
push
adc
lock
xor
jne
pop
push
mov
loop
jb
xor
pushf
mov
enter
mov
cwde
call
test
mov
fwait
mov
cld
pop
inc
mov
in
loop
mov
sub
and
ss
add
or
lea
push
jbe
and
test
addr16
ins
pop
mov
push
pop
cmp
inc
enter
xor
push
and
cmp
pop
movs
outs
adc
test
xchg
shl
mul
stc
jae
push
jl
iret
cs
gs
(bad)
in
loopne
ds
fimul
add
dec
xor
adc
les
or
mov
push
mov
inc
fsubp
test
out
inc
cs
mov
outs
cdq
inc
push
outs
into
mov
and
outs
aam
adc
mov
ret
cmps
push
mov
ins
or
jae
leavew
cmp
jae
test
dec
dec
mov
or
(bad)
in
dec
mov
mov
(bad)
popf
push
sub
retf
jnp
sub
inc
pushf
popa
add
push
clc
cld
adc
adc
cmp
or
mov
xor
fs
xchg
xor
maskmovq
not
pop
jb
cmp
repz
adc
and
sub
hlt
cmc
add
je
enter
retf
popa
cmps
aas
out
jge
inc
mov
outs
push
icebp
adc
outs
ss
mov
rcl
xor
cdq
in
ficom
sub
iret
mov
cdq
xlat
or
(bad)
mov
xor
stos
mov
jbe
loopne
ja
push
cmc
fwait
std
and
push
jnp
adc
stos
(bad)
cmps
lods
imul
adc
sub
add
(bad)
jne
aam
adc
push
pop
ins
dec
pop
fs
inc
fcom
fwait
xchg
mov
mov
cmp
mov
jbe
pop
sbb
xchg
cmc
jbe
fst
dec
xlat
jle
outs
push
mov
xchg
lods
lods
cs
or
jmp
inc
mov
jne
sbb
adc
add
aas
icebp
cmp
jae
add
mov
je
test
aas
and
dec
and
and
ja
xor
mov
ret
mov
call
adc
and
mov
lock
in
sbb
ins
jge
fsub
gs
mov
ja
dec
mov
dec
fmul
push
sbb
shl
pop
pop
add
lahf
and
popa
or
push
aam
into
cmp
mov
fistp
ins
or
int3
fcomi
mov
je
cmps
nop
sub
push
rcl
lea
test
shl
icebp
mov
lods
call
fwait
mov
in
in
sbb
stc
clc
push
xchg
icebp
jg
mov
inc
jge
jecxz
outs
pop
jae
jno
mul
ins
into
push
jmp
icebp
mov
fwait
mov
loope
gs
or
pop
sbb
out
retf
call
sbb
xlat
(bad)
pusha
fstp
mov
inc
mov
pusha
push
daa
and
ss
cmp
outs
ror
push
dec
mov
loopne
jnp
fisub
lds
frstor
sar
dec
ror
cmps
ds
sub
std
cmps
data16
int3
jbe
test
enter
rcr
enter
out
mov
jmp
nop
fstp
add
mov
xchg
pop
adc
and
inc
loopne
lock
mov
fsubr
hlt
mov
push
mov
call
jns
pop
dec
aad
movsx
in
sub
mov
mov
add
(bad)
sbb
pop
jmp
out
xchg
dec
mov
cmp
aam
popf
and
jnp
jle
js
push
xor
inc
fisubr
test
sub
add
ret
adc
sub
cmp
pushf
and
inc
jbe
adc
movs
dec
inc
xlat
(bad)
adc
sbb
xlat
and
push
pop
pop
popf
inc
ds
fmul
ret
xchg
push
loope
mov
xchg
test
pop
push
lahf
ins
cmc
retf
or
xor
sbb
xchg
xchg
sbb
outs
jp
sti
pop
neg
push
mov
cmp
int
into
cwde
lods
in
gs
inc
jb
add
jp
pop
(bad)
xchg
addr16
jbe
loopne
mov
mov
mov
push
cmp
(bad)
xor
shl
out
pop
mov
jbe
cmp
pop
repz
mov
jp
push
das
pop
icebp
or
jae
out
out
addr16
mov
pop
(bad)
inc
jecxz
mov
add
add
cli
mov
xchg
and
xchg
sti
mov
dec
(bad)
stc
sub
(bad)
pop
in
aad
mov
ja
mov
pop
jno
mov
push
shl
cmp
out
or
sub
inc
and
xchg
push
shl
mov
ret
stos
mov
scas
test
(bad)
mov
fcomp
aad
out
xor
xor
xchg
or
push
and
jb
push
inc
mov
(bad)
or
add
out
adc
mov
sti
in
ret
and
dec
sbb
add
and
lock
sbb
jge
inc
sbb
test
in
add
sub
jp
push
or
push
rcl
xor
jp
and
xor
cmps
(bad)
repz
pop
out
scas
jns
rcl
cld
in
mov
mov
adc
cwde
rol
jmp
pop
mov
cwde
sub
ret
push
fldenv
sbb
call
fs
inc
adc
das
ret
aam
ins
sub
test
aam
xor
mov
repnz
mov
lea
or
dec
into
adc
stos
mov
push
and
push
mov
sbb
les
(bad)
int3
or
sub
mov
push
ror
push
sub
mov
cmp
cmc
push
clc
mov
adc
mov
lock
test
in
jge
push
adc
and
lea
push
push
ins
mov
(bad)
test
scas
hlt
jge
arpl
sub
and
jne
gs
jecxz
int
nop
or
inc
iret
xchg
mov
mov
add
int
mov
mov
jo
sar
adc
add
mov
lock
mov
sub
shr
cld
rcl
icebp
xchg
and
sbb
pop
(bad)
cmp
daa
fisub
frstor
pop
sti
add
pop
pop
inc
loope
rcl
or
jle
mov
sbb
pop
mov
sbb
daa
out
loopne
pop
repnz
dec
dec
leave
mov
cli
retf
push
repnz
aad
sub
adc
rcr
dec
retf
jne
push
jo
(bad)
adc
xor
sub
mov
inc
hlt
aaa
popa
sub
jno
inc
push
sbb
popa
xchg
fidiv
mov
jmp
stc
into
mov
retf
loopne
daa
adc
or
pushf
pusha
leave
add
daa
pop
push
aam
add
mov
call
xchg
and
call
ret
mov
xchg
add
shl
in
arpl
aaa
add
mov
cmp
xchg
add
dec
mov
(bad)
xchg
jmp
ficomp
push
adc
cmp
pusha
arpl
(bad)
call
adc
adc
add
adc
fs
das
int
push
xchg
pop
aaa
push
pop
xor
fimul
pop
xchg
mov
jo
xor
scas
xchg
add
adc
xchg
mov
test
push
mov
mov
retf
mov
mov
cmc
xchg
mov
xchg
jno
lods
and
mov
or
sub
adc
mov
std
repz
test
(bad)
out
adc
out
ins
movs
lds
mov
leave
scas
in
fimul
call
push
jne
cmp
or
cs
or
mov
add
inc
leave
in
sbb
popf
cs
push
or
sub
test
dec
push
and
ins
adc
(bad)
stos
sub
mov
inc
retf
push
jmp
das
inc
or
mov
lds
add
mov
ror
lods
sbb
xor
aam
push
jecxz
out
fimul
lods
call
xchg
inc
and
jb
inc
shl
bound
pushf
pop
pop
sub
jbe
bound
clc
pusha
xlat
fist
unpcklps
out
cmp
rcl
mov
clc
clc
call
jnp
push
push
in
inc
push
test
sbb
push
daa
fwait
and
fcmove
pmulhw
fild
sub
lahf
les
out
mov
sbb
sbb
ja
sub
out
cmp
aam
pop
addr16
scas
jns
jns
pop
add
push
movs
stos
aam
jl
es
and
jns
or
pop
fistp
mov
jbe
iretw
inc
into
call
add
push
xchg
jns
xor
minps
iret
sar
clc
adc
outs
or
sub
inc
sbb
add
cmc
jmp
loop
inc
(bad)
cmp
fnstenv
(bad)
mov
dec
shl
pop
sbb
inc
inc
dec
lods
mov
adc
out
push
inc
and
imul
pop
fisttp
fbld
and
stos
jp
loope
and
(bad)
jns
test
dec
mov
push
loope
dec
mov
jecxz
inc
cs
ds
cmp
and
lea
jnp
cmp
jg
jecxz
into
(bad)
hlt
mov
push
sub
inc
movs
pop
mov
ss
and
xor
es
lock
and
mov
xor
adc
lds
lea
movs
jge
(bad)
dec
jecxz
xchg
add
mov
imul
pop
adc
pop
xor
ficomp
mov
jo
cmp
(bad)
movs
push
fidivr
lods
mov
xchg
xchg
dec
sahf
in
mov
jmp
jecxz
aas
jns
sbb
test
adc
sbb
fist
jmp
jne
cmp
call
iret
test
rcl
outs
cld
out
rcl
dec
test
scas
data16
fcom
push
loop
repnz
scas
push
in
movs
pop
stos
outs
push
(bad)
shl
fdiv
inc
xchg
shr
cwde
cmp
call
sub
call
repz
xor
and
sti
sbb
and
xchg
adc
test
aam
xor
mov
mov
dec
dec
les
sbb
out
inc
rol
push
call
inc
or
mov
xchg
xlat
and
ret
iret
mov
hlt
loop
mov
cmc
mov
out
xchg
jl
jnp
or
in
or
xlat
pop
fwait
sar
idiv
jg
and
mov
push
adc
xor
jo
call
cs
mov
push
iret
fisttp
sar
fwait
inc
jnp
fmul
aam
sub
xor
nop
in
ret
repz
out
push
in
mov
adc
mov
mov
(bad)
popf
mov
sbb
(bad)
aas
lds
adc
adc
(bad)
push
ins
dec
jmp
add
fimul
pop
out
cmp
imul
mov
ds
(bad)
mov
sbb
or
mov
les
add
pop
dec
add
mov
or
cdq
outs
xor
xor
add
ins
pop
sbb
push
add
stos
fnstcw
sub
fstp
pandn
scas
cmp
leave
pusha
test
or
into
or
test
in
ins
shr
mov
sar
mov
in
jo
xchg
cmp
jns
aad
and
dec
mov
stos
mov
out
lahf
or
nop
fild
mov
loopne
dec
aam
ss
in
ret
std
xor
aam
into
loopne
scas
sbb
lahf
test
movs
stos
sbb
mov
popf
int
fwait
xor
sbb
fbstp
or
push
jne
lds
mov
test
jmp
loopne
mov
test
inc
mov
pop
sub
jb
loope
push
adc
add
inc
imul
rcl
shr
ds
or
push
and
pop
sbb
lds
add
imul
ss
push
jo
rcr
leave
jg
inc
push
and
ins
inc
cmp
jmp
ficom
ss
cli
aam
sbb
push
dec
loope
cmp
cs
lea
mov
mov
inc
push
mov
add
mov
retf
(bad)
mov
cmp
cli
jnp
mov
pop
sahf
and
cld
sbb
jns
pusha
scas
dec
dec
adc
xor
(bad)
rol
inc
jne
fs
adc
inc
scas
scas
cld
aad
mov
mov
repnz
mov
ins
jp
lea
pop
sub
mov
xchg
xlat
mov
pop
jo
data16
and
adc
push
adc
into
sub
jne
pop
in
test
mov
cld
cmp
lea
daa
xchg
mov
stos
cmc
nop
cmp
pop
jnp
movs
add
je
push
push
or
sahf
mov
mov
jl
mov
das
jb
push
fwait
sahf
(bad)
shr
scas
xor
inc
push
cdq
sub
ret
(bad)
sbb
xor
cmp
or
mov
repz
sbb
(bad)
mov
call
inc
jecxz
inc
test
ja
jns
ds
push
jo
jge
push
jae
fsubr
ret
out
(bad)
push
cwde
lea
dec
cmp
not
push
push
adc
jp
int
push
jp
or
mov
dec
and
fs
jns
outs
lods
shr
and
add
xor
mov
pop
dec
add
(bad)
les
lods
add
fistp
clc
rcl
int
in
mov
rcl
pop
jbe
popa
inc
pop
clc
push
(bad)
out
and
(bad)
xchg
mov
repnz
sub
popa
in
pop
ins
pusha
push
stos
mov
sbb
inc
lds
add
aaa
cmp
dec
sub
or
fisub
daa
sbb
enter
push
ror
lock
lods
sub
inc
push
call
or
sub
pop
enter
imul
xchg
or
shl
fs
xor
sub
jnp
dec
adc
lock
psrld
pop
mov
retf
icebp
adc
sbb
mov
mov
jmp
push
push
test
inc
adc
(bad)
add
inc
cli
and
ins
lea
dec
popa
push
loope
ds
in
std
cmps
adc
aas
aaa
push
cmp
fild
mov
or
adc
fistp
popa
inc
cwde
popf
jmp
enter
pushf
out
mov
(bad)
or
adc
jnp
xchg
cmps
mov
sahf
arpl
pop
imul
scas
aas
outs
sti
xchg
mov
call
test
cmps
imul
or
pop
xor
mov
mov
mov
mov
cli
je
push
mov
es
das
pop
(bad)
mov
pop
push
sbb
xchg
add
inc
or
rol
push
dec
scas
les
out
add
mov
out
inc
fwait
out
xor
sub
loop
pop
inc
mov
sti
xchg
jnp
xor
add
ins
xor
stc
inc
mov
fwait
pop
or
jg
jo
cmps
jnp
mov
loop
test
cmp
fiadd
add
pop
pop
rcr
mov
rcr
xchg
mov
ins
sub
imul
in
test
aaa
aam
sbb
inc
rol
arpl
push
movs
add
outs
or
push
mov
cdq
dec
and
sub
nop
inc
sbb
adc
int
jge
loope
fnstcw
add
add
adc
adc
ss
cwde
jno
repnz
imul
cmp
sti
ins
mov
(bad)
adc
inc
cmp
repnz
shl
shl
jb
sub
out
or
lds
adc
xchg
push
pop
add
adc
xor
xchg
mov
jmp
adc
adc
jecxz
das
pop
cmp
mov
mov
inc
cmp
repnz
rcl
icebp
fsub
pop
dec
outs
call
rol
bound
test
cmc
jmp
push
jno
in
cs
push
sub
jno
mov
push
test
sti
pusha
xchg
mov
xor
test
popa
test
pop
jl
(bad)
call
lahf
aam
or
into
inc
xchg
ret
pop
aaa
stc
sub
jl
and
jnp
xchg
and
out
jno
jne
and
fucomip
sub
pop
ss
cwde
add
sub
stos
mov
int3
fmul
loopne
mov
jg
shl
rcl
xor
jbe
mov
fdivr
xchg
(bad)
out
xor
iret
pop
nop
daa
sub
or
mov
jbe
leave
jp
jge
mov
jmp
add
jns
pop
stc
and
call
jl
xchg
sub
sar
mov
dec
test
sbb
lock
ss
push
xchg
cmp
inc
xchg
jecxz
arpl
(bad)
jmp
mov
mov
es
and
cmc
pop
(bad)
fistp
test
pop
fcom
mov
loopne
div
push
or
or
dec
cmp
aam
lods
fcom
jmp
sub
push
xchg
xor
xchg
push
aas
stos
or
sahf
les
inc
xor
(bad)
adc
mov
movzx
lds
retf
push
mov
lods
aam
into
push
es
pop
mov
cmps
xchg
aaa
sbb
fnsave
retf
pushf
(bad)
shl
aaa
das
jmp
pop
imul
xchg
sbb
dec
call
pop
ja
mov
fld
jl
outs
pushf
adc
jmp
shr
shl
xchg
fs
sub
pop
push
inc
mov
mov
fnsave
psubsb
shr
mov
dec
jge
(bad)
out
fisttp
ret
mov
aad
push
mov
push
rcr
ficomp
add
mov
sub
nop
sbb
ins
fimul
mov
in
cld
jnp
dec
scas
es
jo
test
add
push
mov
dec
adc
aad
(bad)
fiadd
cmp
gs
fisttp
xchg
sahf
xchg
in
scas
ror
sbb
pop
in
loope
and
ja
adc
movs
or
sahf
dec
sbb
loope
push
cmp
add
cmc
inc
imul
jno
inc
fisttp
nop
jne
movs
fidiv
jno
cli
adc
cmp
icebp
pusha
loop
pop
and
scas
push
lahf
in
aas
mov
call
push
lock
lea
inc
(bad)
jne
push
cmc
aaa
out
jg
push
add
mov
nop
scas
fstp
add
adc
jns
cld
jb
retf
sub
xchg
jl
sub
dec
test
pop
(bad)
bound
pop
arpl
in
xchg
push
mov
into
pusha
xchg
xchg
inc
jbe
mov
push
pop
pcmpeqb
and
ds
loop
cmps
retf
pop
sub
test
mov
pushf
fucom
popa
lods
jecxz
xor
mov
repnz
jmp
push
pop
jb
gs
or
fild
sub
mul
stos
xchg
loopne
pop
fstp
push
pop
add
retf
sub
mov
ret
dec
iret
adc
xchg
lahf
jne
popf
xchg
(bad)
xchg
lods
test
dec
retf
push
cmps
mov
sbb
push
enter
cmovb
push
test
dec
movs
mov
push
xchg
ror
paddusb
xchg
shl
cmc
idiv
add
inc
xchg
stos
inc
in
fidivr
jg
or
mov
jmp
in
jp
int3
inc
nop
push
mov
dec
mov
test
sub
movs
add
retf
or
ins
push
ja
aam
fist
adc
lahf
aam
pop
lods
bound
jmp
or
cmps
cmp
pop
mov
test
sub
fstp
repz
ja
push
xor
std
dec
push
pop
aaa
mov
ret
push
cmp
das
dec
lea
cmp
lahf
pop
mov
or
shl
and
sbb
jnp
pop
aas
push
add
sub
in
les
icebp
jns
lds
adc
imul
nop
push
je
jg
dec
inc
sbb
or
cmp
add
add
les
jb
adc
mov
lods
mov
popa
jg
outs
repz
adc
push
sbb
or
movs
adc
jge
mov
sub
std
and
lods
arpl
adc
xchg
add
sbb
into
out
enter
cmp
aad
add
retf
pusha
(bad)
sub
inc
mov
sub
jb
outs
or
dec
out
xchg
jp
or
sbb
sbb
dec
mov
(bad)
retf
(bad)
shl
mov
aaa
inc
mov
sbb
xor
jns
pop
test
cwde
adc
rcl
push
and
mov
inc
add
push
push
push
leave
cmp
enter
xor
mov
repz
mov
mov
lock
inc
fs
movs
mov
ds
or
pop
jne
lock
ss
test
cwde
cwde
jl
push
ret
push
mov
pop
push
jns
scas
sahf
in
call
stos
push
inc
push
aam
popa
rcr
stc
fdivp
jno
jmp
push
lds
jno
mov
lods
xor
push
pop
inc
movs
stos
lock
jmp
push
adc
scas
mov
inc
aad
iret
xchg
sub
cdq
lods
pushf
pusha
mov
lods
test
and
pushf
mov
adc
and
lahf
fistp
test
or
pop
push
fldenv
pop
adc
mov
inc
fldcw
out
mov
inc
cmps
mov
dec
jo
cmp
mov
fwait
xor
cmp
xchg
test
cmp
sub
pop
cmp
dec
(bad)
shl
dec
adc
and
mov
or
mov
add
cmp
xor
xchg
imul
test
xchg
jmp
sub
test
loop
retf
test
cdq
fbstp
test
scas
loope
cli
call
repz
(bad)
push
aas
mov
call
xor
push
loopne
pop
push
mov
aas
sbb
stos
repnz
cld
mov
and
xchg
test
pop
lock
dec
add
fcmovne
and
rcl
inc
add
cmps
mov
xchg
jg
xor
or
mov
xchg
call
push
dec
shl
jmp
sbb
jo
loope
sbb
pop
dec
daa
xchg
jge
cmp
xchg
add
icebp
jmp
ret
xor
sbb
or
mov
clc
mov
lahf
push
xchg
mov
bnd
jns
xor
push
scas
mov
pop
sub
jle
and
push
push
or
adc
or
sub
xchg
fmul
pop
sti
test
aam
loope
cs
dec
sar
adc
fild
scas
mov
icebp
mov
test
jp
xor
adc
mov
sub
cmc
out
sar
in
bound
imul
push
fsubr
aad
cmp
js
mov
pop
and
popa
sbb
xchg
fdiv
inc
(bad)
mov
jg
pop
mov
iret
adc
in
jb
and
(bad)
loopne
dec
dec
xor
ins
ss
or
int3
outs
fimul
popf
adc
rcl
test
aaa
in
popa
cmps
dec
jae
sub
out
mov
xlat
or
xor
in
cwde
push
loope
pop
fs
mov
add
jecxz
mov
jg
inc
and
and
aam
sub
push
jg
mov
js
mov
ffreep
mov
cli
jmp
mov
and
xor
neg
gs
pop
pusha
dec
mov
push
mov
cmc
xchg
dec
jae
mov
mov
add
rol
fldcw
or
adc
rcr
aaa
ret
xchg
mov
ins
fild
jle
and
add
rcl
das
xor
les
je
and
sub
in
pusha
mov
dec
test
fsub
aaa
sub
adc
jl
dec
push
and
xchg
sbb
cmps
test
sub
cmc
push
pusha
cmc
outs
add
cmp
mov
div
cld
div
mov
sar
mov
sbb
daa
add
outs
std
out
push
div
dec
and
loope
adc
pop
dec
inc
aad
daa
jp
dec
sbb
xor
icebp
inc
or
loope
sub
ficom
lods
and
mov
outs
xor
ins
mov
imul
jbe
sbb
mov
(bad)
push
mov
ins
pop
mov
idiv
add
xor
push
ror
cmp
sbb
fcmovnu
jg
jb
stos
cmps
pop
shr
pusha
shl
adc
sbb
jg
push
jmp
or
add
jmp
and
inc
cwde
test
mov
sbb
jne
cmp
movs
pop
retf
shl
loope
cmp
sub
and
inc
xchg
repz
test
sbb
dec
dec
dec
dec
and
ins
movs
sub
lods
popa
xchg
push
and
mov
ficom
add
push
fmul
mov
xchg
aas
mov
pop
inc
ins
mov
fiadd
adc
mov
jmp
fstp
mov
test
jg
movs
addr16
push
adc
stc
aas
es
jae
test
pop
imul
inc
mov
cmp
mov
sbb
mov
scas
mov
adc
xchg
leave
xchg
push
cli
or
or
and
adc
out
lahf
jae
jl
aam
lods
adc
mov
addr16
add
push
jb
push
mov
out
add
js
call
call
loopne
xchg
xor
inc
mov
popa
and
test
lahf
or
stos
and
mov
repz
add
in
adc
adc
adc
outs
and
and
stos
sbb
xor
cmps
js
xchg
pushf
jno
das
xor
movs
fisub
cmp
xchg
mov
push
jl
ss
fcom
clc
mov
ret
repnz
dec
jns
dec
loop
sub
loopne
inc
stos
loopne
pop
das
(bad)
js
and
mov
push
xchg
fistp
pop
jnp
dec
xchg
cdq
ret
add
mov
push
mov
mov
mov
int
jbe
cdq
outs
pop
push
mov
sub
and
dec
mov
add
lods
movs
mov
test
hlt
dec
jnp
mov
and
in
movs
jmp
lds
data16
push
mov
pop
ja
std
rcr
in
mov
add
xchg
push
inc
xor
mov
std
rcl
pcmpeqd
add
enter
stc
and
pop
bnd
arpl
jl
add
jmp
jns
and
jge
in
mov
sbb
inc
dec
push
int3
dec
dec
inc
scas
clc
and
pop
push
lahf
and
fisttp
dec
shl
push
jle
loop
popa
das
retf
ds
stos
cmp
mov
sti
mov
rol
lock
cld
jne
movs
pop
fnstsw
popf
ret
retf
sar
hlt
imul
(bad)
cs
xchg
cwde
and
inc
or
mov
out
call
(bad)
push
mov
xchg
push
out
icebp
jb
xor
ds
inc
in
add
mov
sub
adc
stos
jl
inc
sbb
pop
sub
add
ficomp
fnstsw
pop
jne
mov
js
dec
or
add
and
test
xchg
push
mov
es
inc
aas
xor
jmp
imul
aaa
cmps
cmp
in
in
bound
js
test
jge
pop
rcl
xlat
arpl
fcom
xchg
xor
shl
mov
dec
test
ds
ret
jge
loope
mov
test
out
inc
aaa
rol
daa
fstp
pushf
mov
je
mov
dec
mov
mov
cmp
sti
popf
mov
add
fmul
push
ss
sub
ins
and
call
stos
push
push
mov
inc
dec
call
lock
sti
(bad)
jecxz
xor
std
repnz
sahf
icebp
sub
outs
or
leave
outs
xchg
and
mov
retf
fld
xchg
popa
imul
add
iret
xor
aas
add
mov
ret
inc
add
sub
iret
add
iret
lea
inc
shr
xor
push
retf
jge
pop
add
icebp
add
(bad)
cmp
or
dec
in
mul
xchg
lea
rcr
mov
cs
adc
mov
jl
push
dec
cs
xchg
xchg
dec
inc
popa
nop
mov
or
inc
cmc
jmp
xchg
nop
loop
pop
xchg
pminub
and
push
pusha
dec
lods
popf
add
test
pop
ret
dec
lahf
loopne
nop
jbe
push
xchg
mov
movs
sar
daa
loop
imul
jbe
in
(bad)
(bad)
pushf
pop
jnp
cmp
sbb
mov
cmp
jp
adc
das
loop
push
xchg
mov
sub
(bad)
cmc
mov
stc
mov
dec
loop
mov
stos
xchg
mov
adc
lods
adc
in
aad
fwait
jp
ss
mov
and
or
leave
or
mov
fldcw
push
retf
test
ja
int
fsub
push
sub
sub
enter
movs
xor
mov
(bad)
xor
imul
mov
cmp
repz
test
stos
pop
sbb
loope
sti
mov
jge
dec
mov
int3
xchg
ret
aaa
enter
pop
inc
sbb
cli
sti
xchg
test
mov
jl
test
data16
sub
lahf
cmp
(bad)
push
test
inc
stc
cmp
or
retf
add
push
sti
and
addr16
aas
mov
sbb
das
sub
mov
mov
cld
pop
addr16
sahf
jle
test
xchg
loope
jo
ins
xchg
xor
in
fcomp
dec
test
add
inc
adc
push
add
inc
mov
and
daa
pop
jb
sbb
dec
pushf
gs
push
fisttp
sub
das
xor
xchg
add
push
adc
imul
xor
call
mov
adc
inc
repnz
or
and
jne
call
sub
xor
xchg
cdq
jl
std
jmp
rol
les
mov
mov
nop
xchg
mov
cmp
sahf
add
mov
mov
push
dec
iret
js
iret
or
pop
mov
gs
pop
mov
sbb
xchg
and
mov
pop
push
mov
jle
cmp
mov
sahf
imul
fld
les
shl
sub
(bad)
jb
dec
push
je
(bad)
call
push
movs
mov
or
lods
shl
mov
pop
fwait
(bad)
jge
jl
fcmove
mov
add
sbb
dec
sub
in
clc
pop
shr
test
xor
ss
ins
inc
pop
pop
mov
sub
pop
jecxz
nop
dec
imul
cmp
mov
push
call
cmc
sti
mov
jecxz
mov
icebp
ret
xor
pop
add
xchg
fimul
in
retf
mov
shl
jmp
fldl2e
(bad)
cmp
sub
les
xchg
mov
push
daa
retf
gs
hlt
xchg
lods
out
enter
arpl
icebp
in
(bad)
das
dec
cmp
mov
jbe
mov
and
popa
ror
inc
test
cmps
mov
inc
add
enter
push
mov
(bad)
push
jnp
not
pop
pop
xor
or
pop
jmp
jg
and
fcomp
pop
xchg
dec
ficom
repnz
sub
pop
inc
cmc
sti
or
aaa
fwait
or
fsub
pushf
stos
int3
in
test
es
cmp
pop
xor
inc
add
push
sti
cmps
push
xor
stos
repz
pop
popf
jne
ins
in
fwait
sub
and
mov
test
fmul
outs
jmp
or
out
in
sbb
sahf
enter
mov
out
pop
(bad)
or
or
inc
inc
xchg
repz
int
cli
xor
stos
sbb
mov
into
add
out
clc
imul
xor
test
adc
sub
dec
and
adc
ror
ins
adc
mov
jo
std
fnstsw
sub
bound
lods
jmp
jae
jns
rol
xchg
pop
jp
sub
cmps
sbb
mov
dec
sub
mov
xchg
jg
int
mov
or
add
mov
mov
or
and
test
add
fstp
mov
xor
and
stos
lahf
sbb
cli
scas
iret
outs
stos
imul
xor
adc
pushf
adc
xchg
(bad)
jg
mov
js
les
icebp
(bad)
dec
add
fidiv
and
jge
sub
fcomp
into
adc
rcr
pop
sub
test
rcl
cmps
mov
sahf
dec
lock
je
mov
dec
clc
jmp
repz
mov
jmp
cwde
jle
rcl
hlt
mov
retf
imul
xor
or
imul
fwait
into
xchg
mov
jnp
add
loopne
dec
out
es
ins
sbb
add
stos
out
sbb
jg
jne
mov
mov
out
jo
pop
dec
mov
leave
out
pop
shr
(bad)
xlat
ret
mov
push
jmp
cmp
rol
inc
int
fidiv
mov
(bad)
pop
add
movs
stc
fdivr
cs
inc
pop
pushf
jbe
xor
sahf
test
fdivrp
sub
shl
lock
mov
xchg
scas
sbb
jne
or
call
pop
xor
xor
mov
cwde
clc
pop
(bad)
and
aam
scas
mov
cmps
mov
push
adc
sub
int3
fadd
push
sub
adc
dec
xor
add
or
sahf
push
repz
jmp
fisub
test
dec
not
cmp
inc
les
mov
pop
jne
xchg
push
jl
sub
dec
dec
sbb
int3
fbstp
nop
push
adc
popa
ins
mov
ins
mov
pop
cmp
dec
out
mov
imul
test
adc
mov
xchg
xchg
push
jo
and
pusha
xchg
test
loop
cld
cmp
aas
inc
js
push
adc
fwait
sub
pop
ds
xor
scas
cmp
jb
cmps
lds
dec
or
retf
mov
add
jno
xchg
rcl
xchg
push
jb
sbb
xchg
ret
dec
and
and
call
cmp
lahf
(bad)
stos
adc
adc
xchg
xchg
lods
mov
(bad)
xchg
xor
fisubr
pushf
sub
mov
test
cmp
jno
sbb
test
jne
adc
icebp
pop
cmp
mov
sbb
ins
push
(bad)
ficomp
cmps
sub
mov
fs
out
lods
lods
shl
rcl
cmp
inc
das
sti
pop
retf
adc
fs
test
ss
mov
data16
sar
iret
into
xor
add
pop
inc
test
ret
sti
in
jecxz
in
or
div
test
cmp
jecxz
popa
mov
in
jae
popa
jg
sti
je
popf
cmps
stos
mov
mov
std
jno
ja
pusha
sub
jno
xchg
ror
dec
mov
pop
es
bound
pop
or
call
mov
arpl
cdq
cmc
sub
test
xchg
sbb
mov
adc
cdq
cs
xor
lods
test
mov
pop
retf
sub
inc
add
movs
mov
adc
push
fcmovnu
fsub
adc
imul
out
lahf
js
ficomp
mov
cmp
cmc
pusha
sahf
nop
data16
mov
pop
push
fcmovbe
outs
pop
ficom
clc
out
pop
push
pop
rol
jge
dec
jl
jge
sbb
dec
out
mov
mov
iret
mov
push
mov
and
mov
add
or
xor
stos
ffree
(bad)
in
xchg
add
jmp
addr16
and
lea
dec
inc
mov
cs
xchg
scas
(bad)
push
pop
xchg
xchg
rcr
sbb
sbb
out
lds
data16
add
mov
and
aas
xor
stos
xchg
fucomp
test
jno
cmp
rcl
add
inc
std
add
jno
adc
aad
idiv
test
mov
jns
sbb
cmp
ret
fstp
inc
(bad)
pop
dec
xchg
jle
ret
sub
ds
ss
pop
dec
cmp
xor
call
xchg
movs
push
arpl
bnd
aad
push
pop
aad
in
fwait
repz
call
mov
loop
ror
cwde
mov
add
cmp
adc
sti
push
out
xor
call
jl
mov
dec
fidiv
xor
mov
ins
loop
jns
mov
jmp
bound
xchg
push
mov
dec
aad
push
jne
mov
xchg
scas
cmp
bound
aaa
cmp
inc
mov
adc
clc
sub
sub
mov
int
aas
xchg
mov
stos
push
add
jb
mov
scas
push
mov
rcr
add
mov
cwde
and
hlt
loope
fnstsw
cmps
inc
rcr
push
add
rcr
mov
cmp
fsub
push
stc
ds
push
sbb
mov
xor
fs
daa
sub
movs
cli
cli
int
cmp
cli
fwait
sub
fst
sbb
xchg
cld
dec
xor
shl
cs
adc
cwde
and
movs
(bad)
repz
jb
pop
push
inc
call
out
adc
sbb
mov
xor
in
retf
mov
sub
iret
mov
pop
cmp
fwait
jnp
xor
mov
xor
popf
xor
shl
pop
xchg
push
cmp
adc
inc
call
fimul
mov
dec
jmp
add
adc
cld
sbb
lahf
jo
loope
xchg
mov
cwde
mov
iret
movs
jp
ret
mov
aaa
mov
push
xchg
xchg
sbb
adc
in
outs
mov
loop
xor
aaa
outs
fidiv
xor
inc
mov
movs
inc
rcr
das
mov
and
push
xor
loopne
lods
inc
add
movs
or
gs
imul
dec
mov
out
retf
cmp
or
cmp
stos
icebp
inc
fcomp
out
jae
(bad)
fcom
push
or
jmp
pushf
adc
inc
inc
mov
xchg
fcmovb
stos
retf
dec
mov
mov
aas
clc
sbb
ret
lds
out
call
or
imul
fstp
lds
mov
inc
inc
xor
pusha
jp
push
sub
pop
ds
lods
icebp
(bad)
jb
sbb
test
or
cdq
xor
into
adc
outs
adc
mov
inc
sbb
sub
iret
shr
pop
xchg
std
pop
xor
mov
lock
mov
inc
xchg
push
sbb
sub
leave
clc
push
(bad)
push
dec
aad
or
add
add
je
jmp
sub
sub
out
sub
xchg
or
mov
sub
test
jge
cld
mov
call
mov
cwde
leave
rcr
leave
push
add
shr
nop
cmp
fcom
xchg
mov
or
leave
mov
ret
(bad)
cmp
loop
push
loop
(bad)
xor
out
(bad)
or
mov
sti
bnd
xor
pop
scas
mov
shr
pop
xor
jne
cmp
mov
ret
mov
sub
enter
sub
mov
dec
fwait
pop
jns
test
clc
nop
dec
inc
pop
std
iret
scas
sub
push
add
inc
push
xor
jnp
mov
test
mov
mov
es
outs
cmp
sub
ins
aas
rcr
sbb
xchg
aas
xor
lock
fiadd
les
lods
inc
test
repnz
jo
or
xchg
hlt
push
mov
(bad)
mov
inc
push
inc
das
call
pop
add
lods
cmp
daa
jmp
add
jge
test
push
push
push
fimul
cmp
jb
loop
fs
retf
sbb
outs
add
lahf
cdq
jmp
shl
pop
inc
jno
jne
sub
retf
jno
mov
or
repz
loop
mov
into
jg
bound
mov
ret
jns
mov
pop
movs
mov
xchg
adc
call
mov
test
cmp
sbb
(bad)
loopne
rcl
(bad)
lods
lea
or
fisub
shl
push
sub
rcr
leave
lock
mov
dec
jno
rol
and
jnp
push
sahf
ss
imul
fwait
mov
pop
sub
movs
cs
stos
ud2
mov
or
pusha
shr
mov
test
loopne
inc
xchg
(bad)
pop
xlat
jb
adc
movs
sti
ins
add
das
push
push
pop
lods
push
outs
pop
jb
dec
or
call
inc
mov
xor
lods
inc
mov
lds
ror
and
add
movs
cmc
push
cmp
(bad)
scas
jo
pop
pop
call
out
shl
dec
xor
mov
int3
aam
(bad)
xor
pop
jns
mov
or
jmp
mov
or
rcl
pop
pop
outs
jb
jg
lahf
sub
mov
jne
ins
and
jns
shl
and
stos
jns
sbb
popa
xchg
jb
mov
les
mov
mov
test
pop
push
jo
icebp
fidiv
fs
push
cmp
adc
cmps
int3
ret
xchg
or
lods
mov
push
push
xor
xchg
push
jo
or
pop
ins
fidiv
outs
xchg
jmp
pop
dec
sbb
pop
fucomp
repnz
push
adc
jmp
dec
mov
ds
out
int3
cli
sub
cdq
repnz
std
aam
test
pop
and
enter
and
movs
jae
and
ja
pop
and
push
cli
mov
mov
call
pop
push
cmps
push
pusha
fs
lea
(bad)
shr
test
jo
xchg
aad
dec
xchg
(bad)
out
out
cmp
pop
hlt
(bad)
cs
call
das
pop
cmps
pop
fadd
(bad)
sar
mov
aam
xor
int
pushf
mov
mov
mov
das
cmp
fcomp
pop
retf
push
push
push
test
mov
mov
pop
lahf
jnp
aad
bound
add
push
retf
dec
out
popa
jb
xor
(bad)
and
retf
not
pusha
push
inc
dec
sub
mov
mov
pop
aad
push
clc
ret
loopne
ss
or
cmp
xor
cmp
sbb
sub
xor
loop
sbb
cwde
add
push
(bad)
add
(bad)
sbb
xor
data16
out
xchg
mov
lds
(bad)
call
out
lahf
inc
hlt
and
pop
mov
fidivr
push
xchg
int
dec
int3
outs
mov
fnsave
sbb
stos
imul
mov
xor
cmps
out
and
jmp
sbb
rcr
arpl
movs
mov
outs
inc
sbb
hlt
push
les
jge
push
sbb
add
fs
pop
ins
scas
je
jae
bound
fadd
ja
es
pop
leave
push
retf
dec
sbb
pusha
push
stos
xor
scas
das
(bad)
dec
push
push
mov
mov
sbb
pop
xor
inc
fimul
and
mov
sub
add
and
xor
pop
das
push
add
fdiv
mov
jns
rcr
jbe
add
(bad)
jmp
ins
addr16
int
mov
into
ret
jno
xchg
stos
mov
fucomp
lods
repnz
sub
or
mov
push
push
pop
aad
(bad)
movs
dec
jno
les
inc
sbb
push
(bad)
mov
adc
adc
push
mov
fisttp
popf
stos
sbb
movs
pop
jnp
inc
fwait
push
xchg
and
lock
sahf
sbb
sub
adc
retf
mov
data16
adc
fimul
cs
pop
pusha
or
fst
add
movs
jmp
xchg
add
movs
xchg
dec
dec
aad
int
push
pop
xchg
mov
inc
jno
push
sbb
fdiv
and
das
cmp
mov
(bad)
sub
cs
ss
xor
sbb
adc
xchg
sbb
inc
aad
mov
mov
inc
sti
or
mov
aam
xchg
sub
push
and
cmp
out
add
cmps
les
xchg
scas
dec
adc
add
sub
stos
sbb
sub
xor
xor
ja
fdivr
inc
scas
es
(bad)
test
mov
ds
lds
xor
push
jbe
cwde
sbb
std
popa
bound
cmp
xchg
xor
add
arpl
push
in
cmp
stos
dec
rol
jle
xchg
cmps
push
cmps
mov
inc
pop
rol
aad
(bad)
aad
std
xchg
shl
jno
push
jns
and
dec
mov
stc
sti
cmp
and
sub
xchg
inc
outs
mov
aaa
ins
fwait
daa
ds
out
out
sub
pop
ds
inc
into
popa
test
inc
push
cmp
fcom
inc
leave
retf
gs
shl
xor
push
fdivp
jo
pushf
cli
or
or
rol
dec
adc
pop
cwde
adc
add
sbb
sbb
call
cmp
jecxz
hlt
mov
aas
sbb
lods
xor
or
addr16
lods
imul
jnp
jecxz
sti
je
push
jmp
cmc
jl
jmp
xchg
scas
in
sub
(bad)
std
jae
scas
push
pop
xchg
loop
xchg
mov
movs
inc
push
mov
pop
(bad)
and
jg
aam
ret
and
add
test
daa
stos
mov
repz
sub
frstor
and
lea
add
xchg
mov
cld
jae
and
jb
outs
cmp
or
ins
mov
lods
push
leave
scas
cmp
sbb
movnti
mov
in
aaa
cmp
xor
cmp
push
popf
ror
(bad)
cmps
shl
rcl
int
cld
jge
mov
lods
mov
ss
hlt
shl
ja
or
adc
cli
pop
pushf
int3
mov
mov
or
ins
cmp
shl
add
jae
bound
push
mov
in
lock
sar
inc
fbld
mov
xlat
loopne
mov
test
in
xlat
(bad)
div
cmps
in
icebp
mov
mov
lea
and
jae
dec
xchg
xor
movs
rcr
ja
mov
imul
cmp
popa
mov
xlat
aam
inc
popa
and
test
pop
pop
std
jmp
movs
cmp
call
mov
imul
mov
out
sub
(bad)
leave
xchg
sbb
repz
inc
sub
sub
xchg
mov
pop
popa
and
pop
and
test
xor
inc
mov
push
pop
leave
pop
arpl
pop
push
or
xor
mov
in
inc
xchg
and
mov
push
inc
dec
adc
js
out
jmp
pop
xchg
hlt
cdq
mov
dec
jnp
bound
popa
(bad)
pop
mov
mov
call
push
jecxz
lods
add
jp
sti
enter
sahf
ins
and
shl
xlat
(bad)
cmp
into
inc
retf
pop
mov
fisttp
adc
xor
fild
push
scas
cmp
adc
push
mov
out
pop
mov
mov
cmp
sbb
pop
cdq
int
mov
adc
mov
stos
sar
rcr
jnp
(bad)
int3
add
mov
call
mov
adc
sub
inc
(bad)
in
pop
jb
xchg
mov
cmp
out
scas
cwde
bound
cmp
inc
and
pop
shl
scas
mov
push
add
push
ror
stos
movs
imul
push
ret
outs
xchg
mov
mov
pop
mov
mov
jno
inc
jns
je
inc
fsubrp
idiv
xchg
cdq
lods
stos
fwait
jae
jne
jb
clc
cmp
add
lock
dec
cdq
mov
(bad)
xchg
fisttp
test
cld
lods
jp
dec
pop
mov
stc
out
mov
mov
mov
movs
and
or
pop
jb
and
mov
icebp
int
ins
(bad)
fsub
out
in
mov
or
fcom
jae
sbb
sub
and
fadd
pop
xchg
xchg
fsub
add
and
xor
cmp
mov
jge
adc
les
(bad)
push
mov
and
mov
or
xor
or
ins
sbb
xor
push
mov
pop
js
imul
mov
je
push
sbb
cmp
in
stos
iret
and
mov
mov
pop
rcl
fst
jmp
int3
or
sbb
sti
lea
clc
cmp
push
int3
in
in
mov
sbb
jo
mov
or
adc
call
or
(bad)
call
div
inc
pop
daa
loopne
jno
ds
inc
inc
rol
cs
ds
xchg
pop
outs
dec
shr
xor
adc
js
(bad)
call
dec
xor
mov
hlt
or
jecxz
or
cmovae
cli
popf
inc
adc
nop
cwde
pop
jmp
mov
imul
outs
aad
adc
mov
mov
jne
add
retf
jno
stos
movs
inc
push
push
in
sbb
mov
aaa
xor
aam
sbb
cmp
push
loope
mov
outs
loope
(bad)
mov
xlat
daa
loope
scas
cmps
add
jae
out
pop
dec
xor
pop
push
push
mov
jmp
push
add
cmp
push
cmovle
pop
xor
jmp
scas
(bad)
and
dec
std
das
nop
fs
push
or
nop
xor
out
out
pop
mov
xor
sub
xor
inc
(bad)
pop
cwde
and
out
adc
add
sub
sub
inc
sti
dec
les
(bad)
arpl
lea
aas
sahf
test
sbb
add
lock
loopne
jp
adc
pop
jae
xor
je
das
push
ret
sti
cmp
mov
mov
sbb
rol
jo
mov
js
fiadd
or
stc
pop
dec
xchg
mov
shr
int
inc
xor
xor
sbb
popf
arpl
fisttp
cmp
jg
popa
gs
mov
jae
iret
addr16
out
push
adc
sub
jecxz
sbb
pushf
aaa
and
sbb
sub
dec
mov
and
das
in
sub
inc
mov
adc
xor
mov
or
pop
mov
or
pop
mov
(bad)
inc
pop
pop
aaa
sbb
jle
lea
in
ss
in
out
retf
fldenv
in
std
cld
mov
or
and
hlt
(bad)
js
mov
mov
sti
xchg
rol
into
retf
pop
out
jge
not
pop
jbe
mov
or
retf
cwde
xchg
xor
or
and
ficomp
scas
dec
icebp
push
and
test
aaa
in
mov
mov
sti
cmc
push
xlat
pop
mov
push
pop
(bad)
ret
ins
xor
pop
in
aam
inc
scas
mov
mov
push
mov
js
pop
popf
jmp
add
pop
xchg
cmps
push
mov
jmp
loop
ja
ins
pop
fadd
call
psubd
mov
push
and
sbb
test
outs
xchg
jmp
or
dec
leave
mov
sub
sbb
mov
xchg
cmc
add
add
cmp
hlt
lds
pop
movs
cdq
adc
xor
inc
popf
cwde
pusha
shl
sub
xchg
fst
bound
out
movs
aaa
push
cwde
int3
pop
loopne
mov
add
mov
jmp
sbb
aam
and
mov
jbe
adc
adc
ins
(bad)
cli
adc
push
adc
pop
xchg
call
mov
jne
pop
mov
mov
mov
movs
adc
repz
sahf
and
stos
retf
mov
mov
mov
inc
sbb
call
repnz
sub
jnp
push
xchg
jo
scas
mov
sbb
jbe
cmp
mov
stos
jb
pop
ss
xchg
inc
jge
push
adc
gs
clc
test
jbe
aaa
leave
mov
lds
add
and
mov
cmp
jno
mov
sub
mov
mov
fldcw
imul
test
ficomp
popf
sbb
jno
cmp
pop
gs
push
lods
xchg
call
std
mov
arpl
je
xor
cmp
ficom
inc
push
cmp
xor
ffreep
jns
pushf
ins
adc
inc
mov
pop
retf
add
adc
hlt
(bad)
imul
addr16
jne
repnz
scas
inc
ds
mov
xchg
sub
jnp
neg
inc
push
jge
jmp
mov
push
mov
(bad)
mov
not
pop
shl
test
mov
out
sub
and
mov
call
ins
add
jecxz
pop
aam
ja
jmp
mov
pushf
add
ja
call
mov
in
lds
add
cmc
call
sti
cmps
push
ret
dec
pushf
retf
in
pushf
out
mov
mov
call
adc
pop
lahf
stos
shl
mov
push
cmc
stc
gs
retf
sub
jg
xor
outs
cmps
ins
hlt
cld
jnp
movs
test
pusha
dec
call
aam
stc
je
jl
retf
ins
mov
leave
xor
xchg
inc
test
imul
ins
push
cmp
rcl
shl
cmp
push
fsubr
mov
lods
movs
cmp
push
mov
sub
add
lea
clc
ud1
cwde
inc
cmp
fld
movs
xchg
dec
mov
(bad)
in
pop
push
xchg
popa
std
mov
out
scas
mov
push
sbb
or
(bad)
(bad)
jae
mov
(bad)
xchg
int3
hlt
imul
call
pop
jmp
sbb
retf
cmps
add
xor
lods
inc
mov
in
retf
and
push
inc
mov
xor
jns
sbb
mov
push
fsubr
dec
push
and
push
or
jnp
movs
sahf
mov
jnp
nop
mov
lea
or
mov
ins
jns
test
push
aaa
xchg
xchg
dec
in
ds
test
inc
push
cmps
mov
fsub
xchg
xlat
push
fs
pop
xor
cmps
test
jns
add
mov
adc
lods
mov
cli
test
pop
mov
xchg
f2xm1
push
push
(bad)
aaa
outs
xchg
imul
push
ds
jb
out
out
call
jmp
retf
push
inc
cdq
cmp
pop
jno
xchg
mov
push
cld
into
cld
pop
scas
mov
jl
(bad)
sub
inc
pop
rcl
pop
les
jae
inc
cdq
lds
jmp
pushf
aam
icebp
cmp
push
in
sbb
add
outs
aam
jnp
pop
ds
test
dec
dec
(bad)
sub
add
xor
dec
inc
mov
in
mov
cmp
lahf
sti
shrd
pop
dec
fs
or
xchg
jno
or
xchg
push
ret
inc
jne
outs
inc
js
imul
cli
mov
shr
and
sub
ret
jo
pop
test
xor
inc
aad
cmp
test
or
lahf
mov
out
lock
(bad)
sbb
add
mov
adc
mov
shl
mov
(bad)
mov
and
mov
push
xchg
repz
dec
lock
scas
sahf
lods
mov
scas
mov
loope
data16
out
inc
xchg
rcl
mov
xchg
fs
lahf
xchg
mov
and
sbb
sti
iret
fimul
aam
pop
aaa
or
fadd
sub
xchg
stos
shl
mov
jmp
inc
mov
stos
adc
das
mov
adc
cs
or
push
push
pop
adc
aam
std
push
and
add
or
sub
cmp
fdivrp
cmps
ins
adc
pushf
(bad)
and
ja
or
bound
mov
pop
rcr
xchg
movs
add
je
in
stos
shl
mov
cmps
mov
nop
pop
std
js
loopne
(bad)
emms
adc
fdivr
test
fdiv
sbb
call
fbld
sub
aaa
mov
push
dec
mov
fidiv
daa
popf
leave
mov
scas
xchg
cmc
out
sbb
mov
mov
ja
cld
adc
xlat
inc
mov
repnz
push
addr16
or
rcl
adc
ja
mov
inc
pop
cwde
mov
cdq
and
pop
mov
inc
jns
not
lahf
xchg
xor
sar
pop
adc
clc
mov
loope
jge
mov
shr
(bad)
out
bound
and
mov
dec
(bad)
jge
out
xchg
jns
xchg
jns
out
mov
adc
ss
pop
sbb
pop
xchg
cmp
enter
leave
ror
ds
fsub
out
or
cmp
sbb
sub
fdiv
sbb
pop
sbb
aam
mov
fdiv
ret
popf
test
sbb
fwait
ror
sbb
xchg
jo
icebp
push
cs
push
pushf
push
xor
add
leave
sbb
aas
inc
std
inc
in
lahf
arpl
pop
push
mov
inc
fild
lea
out
aad
dec
outs
pop
rcl
inc
nop
sub
and
mov
(bad)
mov
cmp
fwait
test
fld
fsub
mov
scas
jno
sub
int
call
xchg
div
mov
and
adc
in
popf
xchg
sub
aas
call
or
bound
adc
pop
cwde
mov
adc
ror
xlat
cld
or
mov
(bad)
mov
cwde
push
dec
push
dec
lods
mov
sahf
gs
rcl
retf
aad
sbb
or
xor
movs
das
ins
pop
push
aam
push
in
jecxz
test
cmp
outs
(bad)
cwde
(bad)
sti
popa
shl
push
mov
jmp
jne
adc
pop
push
iret
adc
ror
mov
jmp
jge
(bad)
jae
mov
inc
pop
(bad)
retf
retf
sbb
inc
rol
test
fldenv
mov
stc
xchg
(bad)
into
in
js
pusha
bound
push
pop
call
movs
sar
mov
cwde
adc
mov
gs
xor
call
es
adc
push
push
push
xchg
mov
test
push
jmp
mov
cmp
xchg
(bad)
fld
test
adc
loop
ds
call
dec
das
add
int3
sub
mov
adc
inc
adc
ret
lock
mov
sahf
jp
shl
cmp
jns
icebp
adc
adc
sar
std
sub
shr
add
btc
sbb
mov
inc
out
or
sub
shl
imul
aaa
js
mov
fcmovb
cmp
fnstenv
jb
daa
int3
ss
int3
mov
sub
mov
sub
cmp
mov
dec
mov
xor
je
or
jmp
es
push
stos
fbstp
aas
sbb
xor
ret
cmp
mov
sbb
mov
js
jle
retf
loopne
add
jo
add
xor
cmp
push
push
ins
arpl
add
mov
mov
pop
or
mov
or
cmp
mov
fcomp
dec
mov
jmp
bound
or
rep
or
fldenv
inc
fstp
push
mov
cmc
fucompp
int3
push
test
mov
and
rol
cmp
aas
nop
inc
xor
fdivr
push
jp
arpl
xchg
and
or
out
je
loopne
test
rcl
inc
fwait
aaa
jg
(bad)
fsub
in
inc
mov
(bad)
iret
mov
pop
add
dec
mov
dec
xchg
add
scas
push
shl
mov
xor
je
(bad)
push
add
in
jle
es
mov
loop
loopne
rol
push
ins
xor
(bad)
(bad)
scas
addr16
pop
aad
mov
fsub
movs
pop
dec
cwde
add
dec
sbb
push
jl
fst
cmp
sub
mov
jne
retf
add
mov
jg
inc
mov
and
inc
daa
adc
out
sub
sbb
test
nop
inc
les
mov
loopne
pop
and
ja
movs
pop
mov
mov
or
or
ret
aam
enter
pop
and
mov
popa
jbe
sub
adc
in
push
dec
je
inc
pop
push
das
inc
mov
call
jmp
jge
data16
aam
out
mov
xor
push
lds
loopne
mov
adc
push
shr
imul
cdq
fisub
outs
or
lods
mov
inc
lods
les
ins
ins
test
inc
jle
and
jno
shr
and
les
mov
and
aad
scas
sub
adc
cmp
lods
mov
(bad)
in
push
mov
jge
push
call
jp
sub
div
ins
mov
xor
jns
icebp
rcr
xchg
and
cmp
repnz
call
in
cmp
push
push
jae
neg
mov
test
and
frstor
push
js
repnz
cmp
jg
push
or
adc
xchg
cmp
adc
sbb
sahf
cmps
cld
test
adc
je
xchg
pop
mov
lahf
scas
in
inc
mov
fisttp
fwait
push
pop
sub
and
movs
jmp
jne
pusha
inc
inc
jecxz
pop
adc
xchg
dec
pop
das
cmps
lds
(bad)
lods
sti
xchg
push
test
mov
add
jle
cmps
xchg
pop
rcr
gs
dec
mov
(bad)
cmp
pop
fst
iret
data16
jnp
pop
shl
pop
ret
mov
paddsw
in
popf
mov
pop
rcr
arpl
inc
push
add
push
add
add
xor
mov
repnz
repz
js
test
mov
and
scas
(bad)
icebp
ret
xor
sub
mov
inc
scas
dec
add
xchg
adc
jmp
cwde
outs
cmc
jbe
fmul
xchg
lods
or
out
sbb
cmp
or
(bad)
bound
outs
cli
push
or
adc
pushf
adc
inc
mov
cmp
push
or
mov
repnz
and
in
inc
mov
lods
sbb
jnp
lahf
popa
jbe
ret
in
cmp
xchg
xor
push
cwde
adc
pusha
test
call
scas
sub
jmp
ins
popf
push
aam
scas
shl
std
ins
add
iret
inc
mov
js
hlt
add
ja
aad
sahf
push
fs
dec
push
scas
or
add
add
xchg
loop
push
inc
ds
js
jle
nop
sar
fstp
cmp
xor
cmp
outs
jecxz
sbb
jmp
jecxz
fwait
cmc
jne
(bad)
adc
or
dec
xor
mov
pop
sub
push
sub
inc
push
xor
loopne
jmp
mov
mov
mov
jecxz
(bad)
(bad)
cmp
and
test
xchg
(bad)
lea
fcomi
rol
cmps
mov
adc
stc
push
xor
les
xor
scas
xchg
scas
out
(bad)
sub
or
iret
out
shl
xchg
aam
fwait
out
bound
mov
mov
enter
pushf
aad
jne
or
(bad)
xchg
cdq
stos
pop
and
stos
rol
fbld
fisub
mov
ror
in
dec
in
inc
push
dec
mul
sub
or
push
adc
out
out
sub
rcr
cmp
rcl
ret
and
je
mov
fmul
leave
popf
aam
pushf
sbb
(bad)
cli
lock
leave
clc
pop
adc
call
mov
xor
mov
mov
mov
lock
pop
adc
or
gs
jo
into
jae
addr16
inc
inc
stos
movs
mov
xchg
and
push
sbb
les
fsubr
rol
mov
popf
cmp
ror
aaa
cmp
xchg
lods
outs
add
sub
cmps
les
lods
arpl
sub
cld
jo
je
imul
test
cmp
gs
out
sbb
gs
xor
and
pop
div
outs
data16
call
or
in
pop
movs
push
pop
and
ins
(bad)
fbld
lahf
inc
pop
xchg
push
mov
movs
out
mov
out
outs
push
js
mov
xor
sub
sub
jmp
nop
cli
fwait
mov
mov
push
push
ret
mov
fsubr
dec
iret
shl
sub
xor
push
cwde
mov
mov
jo
sar
stos
nop
in
cmc
outs
xchg
icebp
(bad)
cli
dec
cwde
mov
mov
in
add
pop
xor
jno
ret
push
add
mov
mov
in
jae
cmp
mov
test
mov
cs
mov
std
pop
ret
lsl
push
adc
fs
test
jmp
loope
mov
js
inc
sub
bound
xchg
mov
leave
repz
push
cmc
movs
xchg
aas
mov
push
daa
shl
adc
mov
mov
mov
ins
psrld
clc
pop
jnp
mov
gs
test
dec
add
sub
add
cmp
ss
clc
xor
and
dec
imul
push
scas
outs
loopne
gs
fnstcw
(bad)
lahf
mov
push
inc
push
fsubr
adc
movs
add
sahf
aas
sbb
idiv
lods
pop
dec
mov
add
mov
shr
sbb
sahf
xchg
fld
fsub
cdq
out
push
jne
stc
mov
ins
psllw
imul
call
int3
(bad)
cdq
sbb
ret
pop
hlt
xor
or
cmps
fwait
push
mov
jl
adc
mov
les
sbb
cmp
addr16
cmc
out
mov
imul
or
mov
dec
(bad)
addr16
(bad)
pushf
mov
jbe
cmp
jnp
cmp
cwde
push
mov
xchg
xchg
div
inc
pop
push
out
inc
jo
and
pop
push
mov
(bad)
cli
shl
pop
xchg
adc
inc
push
xlat
dec
stos
stos
mov
iret
jmp
loop
dec
dec
in
psraw
popf
adc
push
fbld
call
lock
fs
dec
enter
enter
push
aas
(bad)
retf
repz
cmp
sbb
cli
pop
rcl
adc
dec
repnz
scas
lods
jmp
icebp
sub
xchg
or
add
imul
test
add
rol
retf
ss
fs
inc
adc
idiv
scas
dec
xchg
scas
mov
xor
stc
mov
stos
icebp
cmp
popa
div
sub
ins
test
and
mov
sti
aas
cmps
push
mov
cwde
push
add
jae
and
or
and
jmp
add
sbb
xor
push
jb
call
xchg
pop
dec
dec
pop
js
push
pop
push
fcmove
adc
in
add
pop
xor
push
xchg
lods
mov
inc
cmc
stc
fcmovnb
mov
inc
add
mov
sahf
les
jb
push
mov
shl
jns
push
shr
mov
adc
jl
pop
mov
fdivr
push
retf
cwde
ror
in
test
add
pop
mov
stc
adc
cmp
test
mov
mov
fimul
aam
jecxz
(bad)
sbb
push
dec
adc
int3
popf
add
cmp
ins
ja
inc
es
call
push
jge
call
xor
pop
int3
out
(bad)
lds
xchg
gs
adc
test
pop
adc
jge
mov
push
sub
xchg
jbe
dec
sbb
adc
out
jnp
inc
in
adc
ja
nop
retf
dec
or
mov
cmp
sbb
arpl
inc
loope
mov
cwde
imul
stos
fdiv
je
aad
mul
scas
js
push
cli
or
aaa
jo
xchg
(bad)
out
add
mov
xor
xchg
cdq
imul
out
into
fsub
push
fstp
retf
jbe
test
or
addr16
dec
mov
int3
xchg
imul
push
jge
dec
and
in
ffreep
xor
jl
sub
jnp
sti
in
mov
mov
xlat
int3
sbb
add
or
jne
mov
hlt
jns
(bad)
fcmovb
dec
inc
test
aad
push
icebp
lock
xchg
cmp
hlt
add
mov
cmp
add
add
jb
pop
jns
cs
add
mov
xor
xlat
xchg
jb
fbld
daa
xor
sbb
(bad)
lods
imul
mov
mov
iret
sbb
cmc
es
cmps
movs
lods
out
inc
inc
ds
dec
es
mov
push
test
repz
jp
and
jmp
inc
jecxz
add
push
push
push
cmp
adc
int3
xchg
(bad)
and
jns
mul
add
stc
cli
scas
cmp
push
lahf
iret
scas
loope
div
xor
adc
sub
mov
mov
dec
js
fiadd
fbstp
adc
jo
ret
daa
cmps
mul
cmp
imul
mov
inc
cmps
test
or
pop
or
and
(bad)
mov
mov
ficomp
int3
pop
dec
jnp
xor
xor
mov
aam
fild
aas
(bad)
enter
mov
push
mov
pop
(bad)
adc
cmp
jno
push
dec
sbb
leave
sti
clc
mov
add
adc
sbb
icebp
mov
and
mov
(bad)
jmp
push
dec
jmp
cmps
push
test
sbb
and
push
hlt
imul
xchg
mov
jno
cwde
mov
sbb
dec
out
add
and
icebp
bnd
dec
dec
mov
iret
push
adc
push
mov
repnz
iret
aas
rcr
and
movs
cli
outs
pop
call
cli
shl
mov
data16
cdq
mov
push
or
(bad)
les
pushf
jl
xor
(bad)
or
ror
(bad)
mov
popa
xor
(bad)
jmp
lahf
out
inc
inc
addr16
test
into
enter
pop
mul
add
bound
aaa
inc
pop
(bad)
mov
sbb
sbb
dec
call
cmps
repnz
fidivr
nop
and
jle
and
ja
or
jbe
fcomp
daa
stc
mov
mov
or
sahf
inc
popa
je
pop
(bad)
fadd
fisttp
out
ret
adc
jo
retf
fs
push
mov
pop
shl
adc
mov
cmp
repnz
adc
mov
pop
inc
nop
xchg
jle
or
jmp
addr16
pushf
jns
xchg
out
rol
mov
clc
mov
mov
mov
or
push
nop
pop
cmp
sub
lods
pop
arpl
sbb
mov
mov
into
fisubr
out
repnz
mov
mov
fld
call
cld
cmp
sbb
jne
push
imul
push
pop
cmp
xchg
cmps
cmp
xchg
jnp
mov
rol
xchg
cmps
mov
inc
or
ret
mov
call
push
or
inc
bound
push
test
sbb
jbe
lods
movs
inc
mov
dec
aaa
aas
popa
mov
jg
or
pop
ds
fisttp
jmp
sub
scas
and
ficom
adc
mov
mov
js
in
mov
or
xchg
jmp
cmp
imul
out
push
es
cdq
push
sub
xor
jmp
aas
dec
not
jg
ret
je
or
xor
outs
out
add
das
nop
es
mov
mov
xor
xchg
aad
jl
mov
mov
sub
aam
fstp
cli
jo
popa
aas
dec
add
and
inc
out
mov
mov
mov
retf
shl
mov
inc
mul
lods
daa
jp
(bad)
(bad)
rcr
fisub
push
dec
sub
mov
mov
aad
out
cmps
adc
mov
outs
imul
xchg
jmp
movs
sbb
add
(bad)
xchg
dec
fs
ins
cmp
stc
mov
and
je
mov
fnstcw
or
(bad)
jle
ret
jl
std
mov
and
mov
adc
adc
xchg
xor
cmps
lods
or
lds
cmp
sub
fwait
stc
popa
jp
fidivr
loopne
push
mov
mov
outs
push
test
enter
mov
in
shl
ss
jl
or
mov
and
add
and
adc
mov
(bad)
dec
jno
out
lock
outs
lock
imul
mov
mov
cld
pop
(bad)
cmp
les
add
js
pop
ins
or
xchg
xor
jge
xchg
fiadd
mov
adc
inc
daa
xor
mov
mov
pop
icebp
loop
fcom
fnstcw
popa
adc
ss
cmp
repz
les
pop
mov
push
cmp
add
mov
mov
call
add
pop
mov
stos
mov
add
fistp
add
add
pop
mov
fistp
imul
sbb
imul
mov
fsub
les
jmp
mov
in
vmulps
cld
enter
mov
ds
ror
mov
mov
push
lds
retf
ss
mov
add
dec
inc
mov
adc
ficom
out
in
imul
inc
add
outs
jno
or
jg
push
sar
gs
jl
push
pop
jb
dec
xor
push
in
fidiv
shl
cmp
sub
ds
fsub
mov
cmps
jbe
mov
and
xchg
loopne
scas
mov
scas
into
add
cmp
fisubr
fidiv
xchg
cwde
sub
cs
xchg
sar
and
rcr
adc
out
call
ins
enter
test
fisttp
out
mov
popa
(bad)
arpl
xchg
cmc
and
ss
aam
adc
or
mov
and
rol
mov
loope
mov
mov
mov
(bad)
clc
out
jle
iret
icebp
sbb
sti
jb
test
adc
add
test
push
sub
cdq
sbb
or
dec
and
ret
sbb
jp
xor
out
xor
sbb
and
add
gs
aad
cmp
(bad)
icebp
fidiv
sbb
xchg
mov
ins
inc
gs
mov
test
cmp
sbb
mov
enter
push
in
aas
je
sti
jg
mov
push
dec
nop
scas
xor
ss
sbb
xchg
ret
or
popf
xchg
mov
aas
ret
xchg
xchg
sub
dec
scas
dec
fs
adc
adc
outs
out
gs
mov
pop
nop
int3
mov
out
sub
jns
add
mov
movs
sub
sub
push
sbb
(bad)
sbb
add
inc
and
repnz
jns
cmp
jl
inc
cdq
and
mov
out
dec
dec
mov
push
sar
movs
inc
push
dec
jge
mov
jmp
fucomi
(bad)
lds
sub
push
sbb
cs
xchg
and
pop
cli
inc
pop
lods
retf
rcl
cmps
cli
dec
mov
fsubrp
cmc
mov
neg
adc
mov
mov
cwde
pop
aam
jecxz
pop
ss
push
enter
lahf
adc
adc
mov
enter
or
das
cmp
mov
adc
push
push
ds
xchg
test
jmp
push
mov
add
ds
inc
pop
add
lods
fimul
jne
mov
pop
cwde
pop
std
inc
lods
lahf
test
stos
mov
add
add
mov
sbb
rcr
(bad)
xchg
jno
ss
stos
ret
adc
(bad)
push
sahf
sar
xor
pop
cdq
cli
and
jno
out
cmp
xchg
mov
cmp
mov
aam
leave
cmp
adc
push
movs
sub
sbb
retf
push
mov
stos
lea
dec
jecxz
aad
stos
fistp
adc
repz
pop
inc
push
or
(bad)
ins
(bad)
ds
xor
fdiv
mov
pop
ss
dec
ins
dec
fmul
jb
imul
xor
mov
fs
mov
mov
sub
js
data16
jl
mov
pop
(bad)
sahf
out
mov
test
push
sub
push
pushf
pop
addr16
stos
inc
retf
cmp
push
xor
mov
adc
imul
adc
push
ret
dec
add
(bad)
xchg
out
or
or
pusha
and
add
loopne
loopne
push
mov
scas
inc
mov
inc
cdq
retf
sub
pop
dec
and
loopne
in
cld
xchg
xor
pop
inc
repz
ins
cmps
sub
sbb
add
stos
adc
scas
iret
xor
push
sbb
test
out
fadd
test
addr16
movs
xor
and
and
inc
leave
lods
add
arpl
pusha
xor
outs
shr
mov
repz
mov
in
fisttp
shl
jno
scas
mov
arpl
inc
and
mov
sub
(bad)
pop
retf
loope
mov
scas
(bad)
stos
lea
pop
adc
pop
fs
retf
ins
inc
or
mov
inc
dec
iret
es
xor
xchg
add
dec
fsubr
pop
adc
cwde
sbb
lock
je
clc
xlat
(bad)
push
jmp
mov
les
mov
fdiv
push
iret
dec
fucom
sub
mov
(bad)
ds
out
(bad)
(bad)
addr16
pop
fdivr
pop
mov
sub
xor
push
mov
inc
fst
(bad)
xor
sbb
xor
out
jg
call
movs
push
dec
fldl2t
data16
cs
fild
sbb
jp
or
movs
pop
xor
data16
(bad)
in
add
rcr
inc
pop
cmp
pop
nop
rcl
inc
xor
shl
sub
and
movs
cmp
call
add
(bad)
das
in
pop
jle
dec
cwde
jns
mul
cld
mov
loop
lock
add
jp
lahf
mov
fist
xor
sahf
pop
xchg
repnz
nop
push
xor
push
ss
add
shl
xchg
inc
and
ret
pusha
loope
lods
and
in
pop
push
fisttp
and
fst
mov
sbb
mov
mov
cmp
sub
ret
mov
out
add
sub
and
pusha
shl
mov
rcr
sub
add
fild
(bad)
push
out
xchg
cwde
rol
pop
cwde
js
mov
adc
mov
xchg
inc
leave
sti
push
adc
mov
iret
add
lds
push
cmp
pop
push
or
mov
jle
pop
inc
jae
dec
pop
sub
(bad)
or
push
adc
jle
jmp
repz
lsl
ror
mov
lock
scas
mov
sbb
mov
out
fdivr
sub
sub
xor
xchg
mov
fs
jb
add
inc
aas
inc
inc
mov
mov
mov
hlt
push
and
pusha
jno
adc
add
into
mov
aas
jbe
mov
call
jns
sbb
fisttp
inc
mov
fldcw
in
(bad)
ds
push
pusha
xor
lods
adc
adc
(bad)
fucomi
adc
xchg
xchg
lahf
test
jg
mov
inc
pop
jecxz
pop
ins
clc
pop
in
jg
(bad)
pusha
in
and
imul
rcl
sbb
fadd
(bad)
jne
sub
test
les
movs
mov
pop
inc
adc
stos
inc
sub
push
dec
adc
adc
jmp
xor
cmp
int3
jecxz
jns
jg
jg
loope
cdq
fnstenv
stos
icebp
arpl
in
mov
je
rcr
sbb
inc
sub
lahf
xor
out
in
adc
push
dec
out
lea
mov
in
movs
imul
push
push
call
sbb
inc
cmp
inc
jp
jmp
int3
sbb
add
loop
add
jo
push
outs
inc
mov
cmp
dec
mov
mov
or
mov
movs
cdq
ins
mov
enter
push
xchg
push
lahf
lods
dec
add
inc
and
stc
or
cmp
cmps
mov
mov
call
shl
bound
fs
test
cmp
call
aaa
jl
mov
das
or
sti
pop
mov
push
data16
rcl
inc
arpl
aas
xchg
cmps
xor
mov
sahf
test
sbb
add
add
sahf
cmps
mov
(bad)
mov
sar
sti
xchg
loope
xor
das
or
movs
dec
cdq
mov
daa
fyl2xp1
scas
sub
mov
(bad)
lds
cdq
stos
jnp
mov
or
lods
xor
mov
push
ins
fisubr
arpl
jl
jmp
push
xchg
sbb
xlat
jno
mov
mov
je
jno
imul
jmp
sbb
movs
jp
xor
rol
and
mov
cwde
test
or
ret
jmp
mov
out
pop
mov
sub
adc
push
movs
dec
test
in
mov
add
(bad)
add
addr16
sbb
jecxz
cmp
pop
and
cmp
pxor
mov
nop
mov
mov
repnz
mov
leave
enter
jl
or
retf
xchg
daa
imul
mov
sbb
xor
mov
xchg
rcl
xor
in
popf
lods
in
or
ins
xor
xor
mov
sub
mov
mov
jle
stc
xlat
mov
aam
push
push
sbb
mov
mov
mov
cmp
sbb
fstp
sbb
mov
pop
xchg
push
test
jmp
push
scas
fisttp
dec
adc
movs
(bad)
cli
push
add
cmp
and
push
pop
repnz
imul
mov
push
xor
inc
pop
out
jmp
push
add
pop
pop
aam
xacquire
xor
cdq
xchg
sbb
aas
cs
and
add
(bad)
push
out
repz
dec
adc
mov
xchg
or
ja
cdq
adc
retf
jno
sbb
leave
lods
arpl
fldenv
int3
(bad)
daa
and
mov
mov
xor
jns
push
ja
jle
mov
push
shl
jnp
and
(bad)
mov
push
mov
jg
das
jmp
fistp
xchg
pusha
xchg
push
push
cwde
dec
cmp
dec
inc
enter
xor
or
mov
es
xchg
fadd
push
or
lahf
fistp
jl
jae
vpminsw
push
mov
mov
ds
fisttp
das
enter
pop
and
xchg
xchg
pop
js
inc
or
cmps
in
inc
cdq
jnp
pop
push
icebp
rcr
scas
mov
jge
cli
sub
int3
aas
js
ja
ds
lods
shl
pop
dec
pop
sbb
or
mov
adc
xchg
das
sub
push
pushf
dec
dec
mov
dec
inc
or
and
pop
pop
inc
mov
cmp
sub
push
or
outs
std
icebp
sbb
push
fs
mov
pop
inc
add
sbb
push
loop
mov
push
fldcw
stos
and
daa
sub
mov
pop
imul
xchg
xchg
sub
fcmovnbe
push
inc
fist
cwde
dec
shl
nop
inc
imul
outs
lahf
inc
sub
and
in
sub
daa
cmp
rol
pop
push
daa
push
mov
jno
out
jno
stos
sbb
push
xor
cld
sub
jo
lods
cmp
dec
call
and
mov
mov
push
mov
movs
jp
or
sahf
loop
sbb
xlat
movs
mov
xchg
inc
ror
adc
mov
inc
ds
sub
xchg
jae
ins
pop
push
mov
iret
or
sub
(bad)
push
ins
iret
inc
lods
sbb
or
mov
dec
scas
(bad)
cdq
sub
add
mov
jne
xchg
xchg
push
add
or
and
sbb
push
add
jl
loopne
aad
ja
jno
sbb
xchg
xchg
repz
jle
jecxz
pop
mov
and
dec
push
out
stc
out
fisttp
push
mov
call
stos
adc
push
push
jl
fxtract
cmps
mov
shl
mov
imul
jb
mov
cmps
mov
aas
ds
leave
dec
pop
pop
(bad)
stc
dec
pop
fst
fdivr
mov
(bad)
dec
push
je
sub
mov
int3
dec
jmp
sbb
mov
add
mov
dec
dec
fsubr
in
out
jb
not
out
out
push
stos
ror
clc
out
test
fnsave
push
rol
mov
gs
shr
add
aam
adc
mov
inc
movs
jae
jg
mov
jge
mov
ret
sti
pop
sbb
dec
ss
cmc
mov
repnz
bound
dec
dec
xchg
ja
(bad)
mov
cmps
mov
cmp
cli
mov
aaa
mov
sbb
sub
push
rcr
or
movs
xor
aas
cmc
push
rol
push
push
add
fnstcw
addr16
jg
jns
pop
mov
popf
pushf
popf
inc
push
ds
out
pop
mov
xchg
test
neg
mov
mov
inc
jmp
xchg
push
cmp
mov
cmp
sbb
(bad)
sub
adc
addr16
add
and
sub
movs
xchg
hlt
mov
add
(bad)
push
stos
in
imul
dec
js
aam
(bad)
xchg
adc
jle
mov
or
xor
(bad)
shl
arpl
in
call
arpl
jae
inc
mov
in
mov
repnz
lea
fwait
mov
pop
inc
pop
or
adc
icebp
sahf
xchg
retf
xchg
mov
mov
pushf
jne
cli
add
cmp
enter
in
push
mov
mov
fimul
hlt
mov
jp
sub
das
jp
rcr
imul
xchg
fcmovnb
xor
jg
add
je
(bad)
(bad)
pop
dec
sbb
fucomp
jae
push
pop
adc
mov
inc
jnp
pop
icebp
jle
adc
jp
dec
enter
or
hlt
cmp
pop
add
xchg
push
mov
adc
push
dec
shr
pop
std
add
lock
ja
cs
pop
push
bound
call
push
retf
pop
sbb
icebp
jge
and
movs
outs
pop
out
cmp
lods
mov
js
sbb
sbb
xchg
mov
mov
rol
jge
add
call
fstp
cmp
push
pop
jb
out
mov
ret
pop
lahf
out
fcomp
pop
mov
ficomp
arpl
test
add
hlt
pop
cld
push
mov
mov
retf
icebp
shr
in
fwait
cmc
(bad)
jae
arpl
retf
dec
jo
jle
jle
out
pop
ror
mov
cmp
loopne
xchg
cmp
adc
inc
scas
faddp
ds
pop
push
cmovs
call
pop
neg
(bad)
(bad)
lods
cli
lahf
add
push
jae
and
inc
mov
shl
test
cmps
mov
in
inc
outs
dec
xor
lahf
in
cmps
fistp
hlt
ds
xor
jmp
cmc
cli
popf
add
ins
adc
mov
(bad)
and
mov
das
imul
dec
dec
pop
and
xchg
inc
mov
mov
sub
(bad)
loopne
fbld
jb
and
mov
cs
fiadd
sbb
rol
push
or
dec
xor
mov
stos
adc
dec
mov
jmp
push
in
xchg
das
sbb
cmp
mov
iret
(bad)
bound
test
imul
add
adc
outs
test
test
cmps
movs
movs
sbb
jmp
jg
push
jge
nop
dec
test
out
movs
call
scas
test
inc
stc
mov
cmp
shl
xor
cmps
pusha
xchg
loop
push
aas
fwait
inc
stos
shl
lods
sbb
int3
imul
imul
dec
in
mov
xor
xchg
mov
jmp
ror
push
int
mov
mov
push
idiv
repz
jmp
mov
pop
xor
retf
leave
gs
retf
out
ror
repnz
addr16
sar
or
xchg
adc
mov
cld
dec
push
and
stc
pop
push
mov
pop
div
push
retf
sahf
dec
sar
jmp
add
xlat
mov
mov
xor
std
pop
pushf
(bad)
stc
outs
push
fstp
mov
call
dec
jle
test
xchg
popa
add
xchg
repz
sbb
fdiv
sub
mov
bound
pushf
sub
sbb
jge
pusha
ss
call
or
push
outs
(bad)
aad
test
cmps
aam
xchg
push
lds
leave
into
sbb
mov
adc
push
or
mov
sub
pop
ds
stos
xlat
or
sahf
adc
xor
lahf
test
sbb
(bad)
mov
cmps
fwait
sbb
mov
retf
push
adc
inc
sub
in
xchg
jmp
sbb
push
retf
loopne
jns
je
movs
out
fcomp
adc
jge
pop
xchg
popa
stos
sbb
mov
(bad)
xor
fild
mov
inc
mov
jo
xchg
push
ret
sti
outs
loop
or
lods
inc
jno
loop
les
mov
lds
pop
mov
test
mov
xchg
je
hlt
sub
pop
daa
mov
lea
scas
sub
jae
xchg
mov
and
or
sbb
in
jge
pop
inc
(bad)
ds
je
jnp
sub
push
push
xchg
xor
nop
sub
push
mov
js
(bad)
sub
sbb
lock
xchg
xor
mov
bts
xlat
inc
stos
mov
sub
fistp
stc
push
push
dec
mov
jne
pop
sbb
jmp
or
fstp
(bad)
cmp
icebp
inc
sti
rcl
cdq
retf
cmp
lock
xor
add
xor
pop
js
jp
sub
lods
clc
sbb
dec
xchg
xchg
sub
adc
push
xor
fsub
jns
pushf
pop
rcr
stos
cmp
sahf
xchg
sbb
add
mov
mov
jg
pop
sti
stc
rol
sub
(bad)
(bad)
clc
xchg
out
dec
mov
mov
push
lods
mov
xor
push
dec
loope
pop
ins
test
mov
stos
ds
and
push
pusha
arpl
dec
lea
mov
mov
sbb
lods
sub
out
jae
or
shr
outs
jnp
in
lock
jg
mov
cli
mov
sub
es
add
xchg
mov
mov
dec
cli
call
dec
cmps
push
movs
cmps
inc
mov
pop
je
clc
pop
xor
(bad)
mov
mov
mov
fiadd
mov
les
or
out
hlt
add
out
ja
(bad)
adc
jns
push
pop
jae
cmp
stc
int3
cmps
in
xor
mov
xchg
push
push
or
cli
std
or
push
cdq
push
sbb
add
imul
je
scas
mov
jo
pushf
sub
js
clc
jnp
pop
sti
sub
cmp
pop
inc
dec
in
mov
jp
ja
shr
sbb
dec
ins
je
ds
mov
lock
xchg
ins
inc
leave
xor
mov
in
mov
mov
push
and
sti
daa
enter
cmp
sbb
xchg
pop
jge
sbb
(bad)
pop
dec
cwde
push
pop
mov
jbe
in
pop
les
and
and
shl
js
fcom
movs
(bad)
and
fistp
push
ins
jp
inc
sbb
jo
popa
ja
ss
in
(bad)
mov
jno
cs
adc
sahf
xor
or
sub
std
jl
mov
xor
xchg
stc
cmp
add
sbb
sub
sub
in
popa
xchg
retf
push
mov
loop
pop
adc
aaa
pop
mov
jge
int
in
jge
mov
or
adc
retf
call
(bad)
mov
or
stc
add
jne
js
ins
out
jo
cmps
icebp
jo
pushf
or
inc
add
scas
sahf
xchg
call
movs
xchg
mov
jmp
pop
mov
mov
loop
sub
push
inc
sbb
inc
inc
mov
popf
fidiv
xrelease
cmps
adc
scas
js
mov
int3
sub
(bad)
call
pop
fld
out
movs
fidivr
pushf
dec
cmps
push
mov
mov
aad
mov
ds
jne
mov
xchg
test
mov
pushf
fnsave
jne
adc
mov
inc
rol
ror
jb
mov
rep
std
inc
xchg
and
xor
inc
icebp
and
dec
pop
cmp
pop
cdq
and
fdivp
leave
sahf
pop
js
mov
or
sahf
mov
push
pop
mov
mov
sbb
and
retf
xor
xchg
sbb
in
out
inc
push
test
clc
push
or
push
out
aam
mov
mov
inc
mov
adc
rcr
mov
pusha
jp
test
sbb
xchg
push
dec
inc
cmps
inc
es
jmp
rol
cmp
cmc
mov
sub
push
out
cmp
sbb
jns
dec
push
xchg
rcl
adc
es
sbb
loope
mov
outs
cmp
push
les
es
dec
jecxz
jnp
retf
scas
int
cld
out
test
add
loope
imul
adc
repnz
push
xor
mov
dec
mov
mov
loopne
dec
rcr
(bad)
cmc
xchg
add
jo
cmp
cmp
xchg
imul
add
jae
pop
fsub
mov
loop
xor
shl
pop
out
jb
out
adc
inc
cli
movs
jle
cmp
(bad)
sbb
imul
icebp
mov
jecxz
or
xlat
lock
mov
hlt
push
popf
dec
in
fmul
mov
movs
push
mov
std
neg
jmp
(bad)
mov
fucomp
mov
push
sbb
add
add
fisttp
mov
adc
test
out
inc
fcom
dec
xor
add
cmp
fiadd
rcr
pop
xchg
cmp
xchg
sub
pop
dec
xor
fcom
ret
shr
hlt
adc
hlt
lods
mov
sbb
xchg
sbb
push
je
or
pusha
jecxz
push
dec
xor
call
aad
adc
sub
xor
jmp
call
mov
test
jae
mov
ins
enter
scas
loopne
dec
jecxz
xor
jecxz
retf
sbb
mov
push
and
sub
cmps
cmc
out
sar
push
cli
inc
(bad)
dec
sub
out
push
inc
cmp
lahf
mov
add
movs
jg
int3
jmp
sbb
or
(bad)
cmp
ret
out
leave
jp
dec
dec
ins
adc
inc
mov
inc
and
xchg
xchg
mov
xor
jle
lods
add
test
pop
mov
push
cmp
dec
xor
cmp
loopne
fcomp
inc
pop
sbb
sar
and
mov
and
aad
adc
pusha
fs
imul
or
push
fcom
push
clc
int
rcr
mov
xchg
test
loope
test
fldln2
leave
mov
mov
push
int
mov
dec
adc
stc
cs
xor
mov
mov
jecxz
rcr
fidivr
add
out
or
pop
ret
sbb
test
retf
imul
sbb
lods
test
call
cmp
aam
ds
fld
jmp
jmp
push
lods
cmp
pop
fiadd
addr16
loop
jp
sub
xchg
scas
xor
sbb
xlat
mov
inc
fs
xlat
int3
repnz
inc
mov
or
sub
cli
arpl
iret
mov
mov
lods
daa
mov
jp
aaa
popf
mov
lahf
pushf
dec
leave
dec
pop
mov
sub
adc
aam
adc
out
test
(bad)
imul
fidivr
push
pop
enter
cmc
pop
jle
call
pop
test
or
(bad)
mov
(bad)
xchg
push
aaa
mov
push
aad
sub
mov
test
sti
cdq
inc
mov
lods
(bad)
lahf
hlt
pop
int
dec
movs
mov
xor
mov
push
shl
stos
rcr
sbb
push
mov
ja
push
(bad)
cmp
gs
out
xchg
jmp
jmp
stc
cmp
xchg
mov
ret
(bad)
scas
xor
xor
in
xor
or
jae
mov
cmp
sub
les
bound
out
scas
fs
lods
or
mov
aaa
inc
mov
xchg
cmp
(bad)
push
mov
adc
bound
lods
xor
xor
rcr
fisttp
cmp
xchg
pop
(bad)
retf
(bad)
sub
push
dec
rcr
fild
jmp
pop
imul
test
jle
cs
adc
pop
dec
inc
pop
sub
mov
or
fidiv
js
xor
ins
aaa
or
sub
sub
xchg
dec
scas
sub
(bad)
xor
cld
jno
fbld
(bad)
sti
pop
pop
push
cmps
and
out
mov
dec
es
and
mov
cmp
adc
ins
repnz
sahf
int
or
xchg
pop
in
call
sbb
push
xlat
push
mov
push
test
mov
outs
add
mov
retf
popa
add
imul
add
rcr
push
xor
test
dec
mov
adc
mov
lds
xor
dec
xor
cmp
sub
pusha
adc
int3
pop
inc
and
pop
inc
xor
iret
inc
ja
jne
movs
sub
mov
test
dec
xor
test
sahf
call
adc
les
sub
ret
sub
paddsb
dec
add
ret
imul
pusha
and
(bad)
int
out
inc
popa
test
cmp
jmp
cld
sub
cmp
mov
fdiv
call
test
jnp
and
repz
dec
cmp
popa
mov
xchg
or
push
add
aaa
mov
js
sahf
stc
and
retf
inc
jmp
adc
and
sub
mov
int
imul
(bad)
adc
sub
mov
ret
into
add
cmp
call
addr16
int
imul
push
scas
sahf
or
int3
or
sub
(bad)
jae
cld
fst
stos
dec
arpl
sbb
lahf
sahf
ins
and
push
jbe
js
mov
stc
jne
sbb
xlat
fcmove
mov
dec
add
jp
(bad)
dec
mov
jl
xchg
mov
in
inc
pop
jecxz
ret
cmps
mov
dec
push
xchg
xchg
in
test
lods
sti
mov
or
movs
mov
fnstcw
mov
cs
mov
outs
dec
test
cs
scas
mov
mov
test
pop
call
dec
dec
inc
(bad)
mov
(bad)
sar
int3
xor
daa
shl
(bad)
mov
xor
(bad)
and
inc
adc
enter
or
push
popf
jo
mov
call
fadd
imul
iret
sub
cmps
jmp
test
mov
cmps
fs
inc
mov
mov
mov
adc
loop
pop
xchg
mov
into
lds
cmp
pop
inc
mov
pushf
mov
pop
inc
in
repnz
inc
mov
movs
retf
cmp
rcr
cld
movs
clc
cmp
retf
test
retf
cmp
fwait
call
push
xor
or
mov
pop
xchg
mov
jecxz
push
pop
xor
sub
jno
cld
outs
jg
dec
fst
out
sub
int
pop
cmp
ja
push
popf
stos
lahf
cmp
fsub
xor
jne
sti
fxam
aaa
mov
sbb
lea
and
cmp
arpl
dec
dec
cmp
add
xor
test
xchg
lods
jge
das
mov
scas
loopne
ja
dec
dec
jg
outs
jns
push
test
mov
gs
push
stos
mov
xor
jmp
inc
jae
push
paddusb
rcl
and
mov
test
push
hlt
mov
cmps
fistp
fnstsw
xor
push
sub
stc
lods
sbb
in
sub
pop
retf
adc
fdivr
adc
mov
xor
cld
pop
test
push
dec
push
push
push
mov
popa
out
imul
jle
jbe
movs
push
imul
add
jae
ror
adc
aad
vshufpd
popa
cld
repnz
movs
mov
ror
fcomp
add
and
jmp
lods
popf
cwde
mov
or
call
test
ins
stc
mov
cld
add
lods
pop
pusha
arpl
jb
jp
mov
adc
or
cmp
jmp
in
popf
push
in
les
jo
and
mov
sar
jmp
mov
xlat
sbb
nop
lock
and
mov
mov
jmp
mov
mov
xchg
push
std
leave
scas
test
loop
sbb
xchg
pusha
pop
add
add
enter
jmp
add
scas
xor
pop
repz
(bad)
in
stos
push
test
or
fimul
pop
ds
adc
scas
push
sbb
dec
mov
ret
stos
add
iret
dec
inc
xchg
arpl
(bad)
xchg
nop
mov
mov
outs
mov
int
stc
aaa
int
stc
out
xchg
mov
mov
sbb
mov
or
or
pop
gs
mov
enter
fnstsw
adc
cmp
and
mov
pop
inc
loop
add
lea
test
cmc
rcl
xor
dec
pop
outs
cmp
shl
movs
test
sbb
push
inc
mov
loope
and
xor
inc
test
lods
dec
fdivr
jo
jbe
outs
jns
push
mov
loop
sbb
mov
aam
mov
leave
dec
shl
in
cmp
popf
cmp
xchg
dec
pop
adc
(bad)
jne
mov
jmp
jb
idiv
mov
xor
push
lods
push
push
fistp
lods
fstp
sbb
arpl
add
jb
adc
or
jb
sti
js
das
cli
and
pop
mov
ss
aas
repz
(bad)
les
push
rol
mov
push
dec
test
fs
out
xchg
xchg
adc
or
mov
aam
outs
push
(bad)
and
cmp
jecxz
inc
and
out
clc
test
rol
dec
movs
outs
add
std
rol
mov
dec
cmps
cmp
enter
xchg
fsub
and
js
call
rcl
jmp
test
retf
dec
push
mov
scas
dec
je
loopne
sahf
out
or
fwait
scas
retf
mov
jmp
jns
or
jo
jg
stc
repnz
jl
cmp
adc
sub
jae
pop
xchg
imul
jecxz
dec
mov
xlat
jecxz
lahf
sbb
inc
xor
std
movs
push
aam
add
fild
jae
xchg
xchg
push
mov
addr16
(bad)
jge
push
xor
sub
sub
rcr
jle
and
les
sar
xchg
js
cmc
jp
gs
cld
test
(bad)
mov
pop
sbb
jb
hlt
jno
adc
hlt
or
xor
mov
in
cmp
xchg
rcr
jbe
dec
sub
xchg
adc
jp
add
sbb
push
ss
push
add
inc
loopne
or
xor
outs
jo
pop
dec
fisttp
out
cmc
jne
lahf
shr
xlat
ins
cmc
cmp
aas
(bad)
push
sahf
call
ins
out
sbb
push
in
xchg
xchg
repz
das
(bad)
ffreep
lea
pop
push
or
retf
or
aaa
out
aam
sbb
and
scas
mov
data16
and
xchg
retf
xchg
retf
cmps
jb
fdivrp
pop
or
xchg
dec
test
outs
and
mov
xor
jmp
add
sbb
pop
cmps
add
xor
sub
fisub
leave
sbb
nop
add
fs
(bad)
jle
sub
(bad)
and
add
mov
mov
pushf
xchg
cmp
test
data16
sub
stos
jns
adc
in
adc
jo
dec
stos
inc
adc
cli
xlat
mov
rcl
jg
pop
xchg
inc
adc
jle
mov
and
and
jns
xchg
mov
arpl
cld
(bad)
mov
loop
pop
or
mov
or
mov
fwait
jmp
dec
mov
lods
aad
lods
(bad)
mov
add
loopne
ins
mov
and
sbb
in
and
js
loope
shl
sub
clc
fs
mov
mov
pop
sub
movs
dec
mov
pop
pop
inc
mov
fld
cmp
inc
pop
movs
fs
sti
add
jo
pop
shl
das
fwait
cmp
jle
dec
and
cs
repz
bound
pop
mov
push
xchg
push
xor
fldcw
sbb
sbb
dec
jmp
js
out
xchg
repnz
mov
out
mov
jl
and
mov
pop
mov
sbb
and
ja
loop
cdq
sbb
(bad)
(bad)
sbb
bound
mov
jae
cmp
stos
fldenv
jp
ret
mov
push
in
or
repz
sbb
cmp
int3
iret
mov
cld
or
jo
mov
js
neg
jg
jo
lock
into
data16
lods
sbb
pop
fs
loop
outs
push
inc
jbe
or
cmp
xchg
jge
adc
in
push
daa
lea
jmp
add
add
ins
in
mov
mov
adc
data16
add
or
mov
xor
test
popa
cmp
fidiv
jecxz
cdq
push
xchg
mov
(bad)
lea
xchg
mov
(bad)
fwait
mov
xor
outs
repnz
fninit
outs
lods
fild
mov
lds
(bad)
mov
inc
push
fnstsw
push
jno
fabs
test
aam
cli
xchg
mov
lock
loopne
pop
ss
or
(bad)
repnz
mov
adc
and
mov
or
push
adc
push
sti
fsub
cmp
rcr
pop
shl
sbb
fwait
mov
or
lods
xchg
lahf
mov
mov
aad
dec
arpl
ret
mov
sub
push
inc
fidivr
mov
add
repnz
ins
int3
into
adc
push
(bad)
mov
pop
cli
fisttp
aaa
lock
addr16
leave
push
fist
jle
mov
pop
inc
xchg
mov
or
and
sbb
and
inc
lods
push
cld
scas
out
mov
or
push
inc
ins
lahf
sbb
cmp
or
mov
(bad)
jae
adc
or
jnp
sbb
ja
dec
xor
call
dec
shl
fstp
das
push
dec
jl
nop
sbb
bound
popa
cmps
xor
mov
icebp
sbb
mov
in
movs
push
xchg
inc
outs
pusha
dec
mov
rol
movs
and
test
pop
call
sbb
inc
mov
or
mov
out
rol
daa
mov
ja
jge
retf
neg
add
mov
mov
imul
and
mov
pop
push
cmp
push
loope
push
int
jno
inc
scas
std
push
adc
dec
int
pop
jp
int3
sub
push
ja
jge
mov
fwait
scas
add
ds
sub
pop
scas
mov
xor
xchg
and
dec
or
mov
loopne
rcl
pop
shl
test
scas
inc
mov
ss
mov
mov
pop
and
mov
cdq
hlt
int
cld
vmread
ins
push
mov
adc
mov
enter
dec
or
repz
test
xor
fisttp
inc
mov
push
sbb
cld
das
daa
movs
cmp
push
cdq
cmp
test
push
aaa
inc
bound
into
xor
xchg
dec
(bad)
cmp
add
xor
dec
fdivr
cmp
jmp
mov
sub
sbb
ja
int3
xchg
ja
and
leave
and
push
int3
mov
sbb
test
and
cmp
mov
cli
pop
push
and
and
pop
jns
fistp
xchg
pusha
xor
(bad)
pop
stc
push
test
sub
mov
out
dec
loope
dec
adc
add
dec
sbb
cmp
or
rol
call
dec
aam
mov
cmp
mov
mov
mov
jecxz
mov
mov
mov
ja
jnp
mov
xchg
xor
add
ins
adc
leave
dec
push
fst
ret
inc
push
scas
adc
jg
xlat
aad
push
jmp
sub
stc
bound
iret
xor
dec
mov
pop
and
mov
enter
js
jne
mov
jmp
push
mov
inc
adc
xor
daa
sub
sbb
sar
or
xchg
test
mov
aas
mov
inc
icebp
xor
jnp
jns
test
jg
ins
pop
jmp
push
add
test
mov
sbb
mov
and
cmp
dec
sbb
jae
icebp
fidivr
outs
lds
arpl
movs
cmps
popf
and
mov
iret
js
retf
(bad)
int3
pop
clc
cmps
imul
fdiv
xchg
add
scas
xor
or
imul
mov
outs
leave
cmp
jno
sub
ds
xchg
stos
mov
in
cmc
lock
std
xchg
sub
fldpi
cld
mov
push
pop
loop
(bad)
loopne
lods
shl
out
push
mov
adc
ins
xchg
cmp
ins
ss
imul
cdq
push
ror
cmp
push
cmc
jae
js
add
adc
xchg
push
push
adc
shr
sbb
pop
cmc
cmp
outs
mov
mov
ror
dec
and
adc
or
sahf
or
inc
mov
(bad)
sahf
jns
or
xchg
repnz
cmp
scas
dec
push
mov
jno
push
add
push
push
xor
arpl
aas
mov
mov
mov
test
or
(bad)
aam
mov
or
sbb
in
push
gs
icebp
enter
xor
sub
sbb
and
and
mov
push
jo
outs
jb
dec
jmp
jecxz
xchg
mov
or
sub
push
test
fiadd
pop
and
jne
sub
arpl
std
inc
lds
cs
adc
push
scas
leave
mov
inc
rcr
push
xor
ds
lock
pop
adc
cld
mov
pushf
and
lods
dec
cld
(bad)
and
push
es
mov
cmp
bnd
cmps
into
push
je
mov
inc
xor
pop
call
cs
lods
(bad)
mov
and
jp
mov
retf
test
call
inc
leave
into
xor
push
dec
fcomp
cwde
push
imul
(bad)
ds
ja
stc
aam
adc
add
popa
aaa
add
fisub
sbb
mov
dec
mov
mov
push
xchg
xlat
imul
leave
xchg
adc
xchg
jge
dec
fisttp
imul
cdq
dec
and
sbb
out
lahf
daa
jae
xchg
inc
clc
sub
or
test
push
data16
pop
inc
inc
aam
ds
cmp
addr16
loop
adc
retf
ins
add
adc
mov
or
push
cwde
or
retf
bswap
pop
adc
mov
dec
mov
popf
pop
jmp
jns
dec
ins
and
ror
ins
nop
mov
jecxz
scas
jnp
loopne
das
jmp
inc
shl
xchg
mov
sub
pusha
mov
in
or
imul
in
sbb
fnstcw
sub
add
mov
sbb
ins
and
std
cmp
mov
bound
inc
mov
(bad)
popf
mov
sbb
dec
(bad)
ins
icebp
add
lds
movs
mov
and
or
fucom
pop
mov
or
mov
mov
push
das
jns
adc
popa
adc
xor
fcmovnu
ret
jmp
push
inc
mov
ror
xlat
and
in
jne
je
or
or
or
xchg
enter
add
cmp
mov
(bad)
je
movs
iret
and
bound
jecxz
pusha
dec
int
jbe
mov
mov
sub
mov
inc
stos
or
stc
je
test
lods
idiv
cmp
push
xor
sbb
shl
pushf
loop
test
mov
xor
aad
push
retf
fwait
ret
fs
ret
sti
mov
mov
jbe
ins
jno
aam
jnp
jge
or
sub
ins
dec
mov
mov
(bad)
jp
shl
mov
hlt
xor
lahf
add
daa
adc
test
jbe
icebp
cmps
fmul
hlt
mov
dec
fst
mov
pop
cmp
mov
dec
add
cmc
retf
push
mov
xor
(bad)
stc
pop
sub
out
lods
daa
loop
fs
gs
push
mov
sub
and
mov
repnz
pop
jno
addr16
mov
sbb
pusha
loopne
adc
xor
push
mov
aas
sub
icebp
push
push
hlt
mov
pop
lahf
mov
fs
ins
xchg
inc
out
into
push
ret
dec
pop
mov
sub
cs
jp
cmps
cmps
(bad)
pop
fstp
cld
push
add
imul
or
sub
and
jae
sbb
sbb
ja
out
ja
cmc
in
std
sbb
adc
test
and
test
inc
dec
stos
add
jbe
rcl
imul
scas
inc
stos
sbb
stos
cmp
mov
std
and
xchg
(bad)
fistp
mov
add
inc
mov
aam
dec
inc
aas
cs
arpl
and
jge
jg
mov
and
fs
mov
push
xor
mov
shl
mov
fistp
sbb
stos
fnsave
push
dec
arpl
pop
rol
aad
pop
fcomip
ds
xor
aaa
rol
scas
lds
bound
into
stc
mov
(bad)
push
mov
popa
inc
jo
fs
and
call
out
loopne
xor
mov
setl
jle
and
dec
int3
arpl
push
inc
sub
or
jns
fidiv
loop
loopne
adc
xchg
and
out
inc
jo
xor
mov
retf
aam
and
aad
add
movs
es
jecxz
push
or
and
cld
pop
cs
mov
or
mov
into
bound
stc
addr16
xor
lods
test
int
cdq
sbb
pop
fnstsw
fidiv
iret
push
jns
adc
pop
sbb
iret
mov
push
jne
shl
add
int3
ret
fst
movs
mov
leave
adc
push
mov
cmc
xchg
outs
pop
sub
xchg
rcl
rcr
nop
rcr
jmp
dec
cs
add
xor
push
push
jecxz
pop
dec
fild
out
lahf
sbb
push
dec
dec
sti
pop
(bad)
icebp
mov
pop
add
push
aas
(bad)
loope
sbb
pop
test
cmp
cmp
push
les
mov
or
test
stos
push
adc
xchg
aad
xlat
fwait
ret
dec
cmps
mov
cmps
cdq
mov
or
dec
xor
lahf
pop
sub
xchg
and
push
dec
in
adc
int3
push
fcomp
cdq
push
ja
(bad)
sub
scas
icebp
ss
div
in
push
mov
shl
xlat
cmp
inc
push
inc
add
fldenv
mov
and
pop
pop
vmread
xchg
ror
jb
out
outs
es
ins
jmp
mov
cdq
test
outs
cwde
loope
adc
retf
bound
mov
xchg
push
mov
(bad)
scas
xchg
loopne
sub
mov
inc
xchg
and
sar
mov
jp
or
adc
xchg
or
dec
push
mov
jmp
adc
add
push
and
je
fadd
(bad)
cmp
(bad)
mov
mov
add
sub
mov
dec
imul
repnz
es
sub
shr
pop
(bad)
lods
inc
mov
push
push
imul
xor
movs
jecxz
(bad)
int
into
dec
pop
and
popa
dec
inc
pop
fstp
pop
inc
cmp
add
add
mov
pop
mov
lahf
not
in
or
enter
push
nop
sub
inc
pop
and
inc
aam
js
out
popf
sub
(bad)
xchg
daa
sbb
jbe
mov
stos
mov
popf
movs
mov
xchg
enter
mov
dec
sbb
inc
daa
leave
push
and
loope
push
cmps
sub
adc
js
push
mov
mov
loop
in
mov
mov
jno
or
wrmsr
test
xor
push
jg
mov
cs
or
xchg
adc
sar
adc
adc
cmps
and
sbb
push
sub
icebp
pop
push
xor
leave
xchg
iret
jns
fcom
gs
popa
cmp
mov
sti
pop
xchg
inc
push
add
adc
jae
ins
pop
pop
adc
push
retf
fs
daa
mov
mov
and
adc
ret
daa
les
imul
inc
icebp
xchg
jnp
ins
pop
loope
pop
pushf
jmp
adc
push
aad
jle
rol
in
push
js
imul
jno
arpl
jns
ins
int3
out
outs
mov
ins
dec
xchg
push
jne
fdivp
sbb
scas
adc
ins
or
leave
test
mov
jg
pop
dec
dec
mov
in
lock
jne
or
ins
std
js
fs
out
test
mov
dec
(bad)
or
aaa
add
adc
sub
jbe
adc
sti
jae
or
mov
xor
mov
mov
(bad)
adc
ss
xchg
mov
add
inc
cmp
in
mov
push
push
or
test
cwde
jge
ret
mov
int
fsubr
mov
push
loop
mov
or
xchg
cmp
aam
lea
mov
mov
mov
clc
add
mov
inc
or
pcmpeqb
loop
xor
mov
int3
inc
push
xchg
aam
mov
movs
or
hlt
xchg
sti
push
jno
call
xchg
dec
and
test
or
into
int
stos
and
mov
sbb
(bad)
sbb
push
jbe
push
push
cmps
xor
pop
cvtps2pd
mov
add
sar
cs
(bad)
jns
cmp
bound
xor
sub
cli
sbb
sbb
call
xchg
bound
int3
sub
cli
(bad)
xchg
das
mov
mov
xor
xchg
stos
stc
retf
dec
push
hlt
icebp
dec
jno
loop
lods
fs
mov
std
mov
sbb
mov
pop
cmps
(bad)
add
mov
movq
xor
jp
fldcw
pop
cmp
mov
add
mov
ds
and
adc
dec
in
iret
lahf
loop
fisttp
mov
lahf
sbb
jl
push
mov
outs
int3
push
and
mov
add
aad
out
sbb
mov
jns
xchg
and
call
adc
jecxz
(bad)
xor
call
shl
fistp
jo
xchg
xchg
jmp
push
mov
inc
aaa
pop
and
mov
and
not
xor
fadd
pop
pop
mov
das
sar
push
cdq
loope
xor
in
sub
loopne
sub
loopne
inc
or
mov
add
or
ds
das
jmp
iret
sub
in
xor
sbb
and
or
and
fcomi
out
sar
jg
add
xchg
cs
xchg
lock
inc
fistp
int3
mov
in
outs
mov
jnp
xor
fstp
add
dec
sub
out
jge
adc
call
xor
pop
test
or
test
out
into
lods
scas
mov
jmp
inc
call
(bad)
pusha
xor
in
or
mov
imul
or
(bad)
xchg
repnz
aas
pusha
gs
sti
add
add
sti
sub
dec
mov
dec
adc
shr
rol
pusha
mov
cmps
jl
repnz
rcl
jae
cmp
data16
cdq
adc
xor
(bad)
in
mov
mov
inc
(bad)
mov
leave
jmp
dec
enter
lods
xchg
pop
add
neg
rol
fwait
xlat
in
rcr
xor
or
mov
test
mov
and
dec
in
retf
es
out
and
mov
sub
xchg
mov
sub
mov
xor
(bad)
inc
sbb
sahf
mov
mov
add
mov
fistp
or
sub
adc
pop
pop
aaa
lea
dec
addr16
add
lods
and
les
and
out
add
pop
stc
repnz
xor
add
das
push
outs
call
movs
add
sbb
sahf
ds
punpckldq
fadd
mov
pop
(bad)
retf
lea
cmp
sub
loope
mov
js
test
call
jnp
popa
or
cmps
xor
fmul
xchg
bound
rcpss
leave
pop
fist
jbe
movs
xchg
int
idiv
icebp
jae
fwait
test
and
retf
lods
mov
add
mov
xor
adc
jae
and
inc
call
cmp
fidiv
rol
sbb
adc
test
out
push
mov
add
inc
lds
rcr
(bad)
fstp
xlat
push
xor
retf
dec
dec
data16
lea
into
xor
retf
jae
mov
sbb
jae
or
xlat
outs
movs
sar
xor
loopne
test
push
pop
loope
fiadd
retf
xchg
cld
add
mov
mov
adc
rcl
cmps
sbb
ins
mov
mov
sub
(bad)
imul
lock
fucomip
add
xchg
pop
out
sub
hlt
jno
scas
mov
push
inc
cmp
mov
jmp
sti
(bad)
pushf
lea
cmp
xchg
pop
push
pop
cmp
mov
test
bound
les
adc
xchg
jb
jns
push
and
push
(bad)
sar
jnp
sar
jns
dec
out
loope
sub
(bad)
jp
retf
xchg
jnp
lfs
add
and
xor
push
or
jl
push
in
and
scas
es
js
mov
mov
fcmovbe
sbb
out
aaa
push
or
push
jae
sub
jne
and
inc
jbe
dec
es
sub
out
jmp
bound
mov
cmp
sub
rcl
int
or
inc
sbb
push
xor
push
(bad)
fs
mov
push
jl
mov
pusha
das
js
inc
xchg
cmps
cmp
aas
xchg
rcr
mov
push
mov
sub
mov
xor
mov
mov
adc
clc
(bad)
enter
fist
push
xor
pop
clc
cdq
(bad)
std
das
mov
test
and
sbb
lahf
cmp
mov
mov
retf
imul
retf
dec
bound
inc
mov
push
shl
into
sti
push
dec
rep
int3
out
jae
jae
adc
lock
fst
sub
outs
mov
fild
xor
aas
mov
sub
mov
cvtps2pd
xor
nop
push
xchg
xor
add
shl
movs
sbb
jp
pop
outs
xchg
pop
dec
jb
enter
ins
std
repnz
sti
fst
out
push
icebp
add
mov
ja
sar
(bad)
mov
je
shl
stos
outs
pop
jg
pop
or
mov
int3
dec
stos
rcl
movs
sub
push
adc
pop
inc
bound
das
into
cmp
xor
dec
(bad)
cmp
cmp
jne
pop
rcr
fistp
and
js
push
push
jp
loopne
mov
pop
push
popa
in
in
(bad)
loopne
movs
push
add
pop
jg
pop
loopne
test
xchg
test
mov
ja
push
adc
push
jl
sbb
jmp
imul
sub
mov
add
adc
push
outs
mov
es
mov
mov
ins
cmp
dec
add
xor
push
out
xor
and
sub
xchg
lods
scas
loopne
pop
xor
fnstsw
dec
jmp
push
ficomp
pop
or
test
jecxz
cmp
lahf
mov
sub
add
xchg
push
je
cwde
stos
and
(bad)
in
sbb
jae
adc
fldenv
aas
scas
std
out
mov
and
cmp
sbb
xor
call
push
sbb
push
sbb
jmp
(bad)
shl
jge
out
inc
sub
or
(bad)
cmc
mov
ret
push
in
les
xor
lds
adc
in
mov
and
in
test
mov
xchg
mov
ins
and
xchg
stos
int
pushf
ret
xchg
movs
cmps
dec
adc
xchg
pop
xchg
mov
push
imul
push
mov
cmp
pop
sbb
push
aad
mov
pop
push
inc
cmps
fcomp
dec
sbb
rcr
xchg
dec
jge
mov
pop
dec
repnz
mov
out
pop
inc
and
adc
mov
and
jge
jmp
stos
xor
test
sub
clc
add
daa
push
fwait
clc
and
jne
xlat
mov
add
leave
inc
outs
scas
pop
sub
sbb
cmp
xor
xchg
push
clc
leave
mov
add
push
sub
xor
out
inc
stos
(bad)
jge
fcmovnu
pop
add
pop
adc
pop
mov
jmp
pop
sbb
mov
push
jle
pop
repnz
sbb
stc
sbb
fs
xor
add
ss
std
in
mov
nop
jge
or
jb
pop
iret
cmp
jge
mov
ror
jne
fdiv
data16
rcl
sub
in
and
jl
pop
lahf
out
or
dec
or
mov
push
sub
sbb
adc
addr16
pop
sub
hlt
das
cld
pusha
in
jnp
push
test
pop
fidivr
stc
leave
hlt
imul
mov
vpsadbw
fadd
cs
mov
push
fcomp
cmps
movd
mov
in
stos
cmp
xor
sub
inc
popf
int3
push
repnz
(bad)
xchg
imul
ret
xor
xor
add
enter
pop
ins
pop
inc
sub
stc
inc
jecxz
cmp
addr16
sub
ret
aam
pushf
xchg
lahf
stos
fs
jp
dec
call
mov
pop
ret
mov
inc
xchg
add
pop
scas
int3
push
shr
mov
adc
and
jb
xor
dec
retf
test
ins
loopne
les
cmp
(bad)
jno
mov
inc
lock
out
je
call
adc
push
(bad)
jno
outs
repnz
pop
call
loopne
clc
or
sar
lods
sub
jnp
nop
fisubr
cmps
arpl
repz
scas
xchg
pop
cmp
add
pop
dec
cli
sbb
mov
in
or
call
jo
pushf
fwait
ror
gs
mov
push
adc
hlt
ret
icebp
push
leave
fimul
in
aam
push
aad
inc
inc
sbb
rcl
clc
sar
dec
movntq
push
fimul
mov
mov
lods
push
aas
adc
icebp
and
cmp
sahf
mov
scas
aam
shl
movs
adc
jle
xor
jno
cwde
lock
fsubr
outs
out
pop
and
and
mov
adc
sbb
scas
leave
xor
jge
out
fmul
dec
je
int3
aaa
mov
cmp
ss
std
das
js
call
lods
jne
je
sbb
push
jnp
int3
mov
loope
pop
pop
add
inc
cmp
in
inc
ror
or
fcom
bound
stos
xchg
jb
mov
repz
dec
mov
addr16
cmp
cmp
cmp
icebp
out
sbb
scas
cmp
bound
xchg
xchg
sbb
dec
xor
dec
push
and
jno
xlat
repz
pop
(bad)
popa
push
iret
js
jmp
lahf
movs
mov
fld
jnp
popa
sub
add
jnp
cmp
mov
pop
dec
fsubr
pop
mov
mov
adc
not
test
add
hlt
hlt
std
mov
add
sub
mov
cmp
xor
sbb
scas
sub
dec
fimul
push
push
and
ret
cmp
mov
cld
jecxz
ja
aaa
jno
jb
(bad)
lods
jge
mov
icebp
and
jno
dec
mov
into
(bad)
clc
ffree
jbe
sbb
(bad)
xor
jne
push
lods
sub
add
xor
inc
test
jle
test
das
xor
jne
clc
mov
dec
rcr
pushf
int
add
add
cmp
xchg
mov
jmp
dec
stc
cdq
movs
fyl2x
inc
test
sub
dec
(bad)
dec
cmp
mov
push
pop
imul
jle
scas
push
jle
js
imul
adc
and
sub
adc
or
push
scas
enter
(bad)
mov
inc
fs
or
mov
(bad)
cmps
dec
outs
es
dec
push
jbe
dec
push
adc
sbb
cli
add
push
xlat
cmp
sahf
mov
jnp
adc
adc
jge
ret
shl
jecxz
std
cli
add
fs
cmp
jae
cmp
push
xor
push
or
fnstenv
jg
adc
fimul
rcl
xchg
mov
test
shl
lock
add
out
aaa
pop
dec
loop
jns
cmp
in
cmps
stos
(bad)
mov
ret
sahf
pop
jbe
stc
fwait
repnz
fisubr
sub
pop
pop
adc
add
sbb
dec
jl
cmp
test
xchg
mov
(bad)
into
jmp
sub
mov
add
nop
fnstenv
into
int3
outs
and
cdq
mov
add
ss
cmp
add
xor
js
cmp
push
scas
sbb
mov
mov
xchg
mov
mov
mov
icebp
repz
cli
dec
add
add
cs
ror
lds
iret
add
in
jmp
(bad)
inc
cmp
fwait
sbb
pop
adc
fwait
sbb
add
pushf
stos
in
adc
out
ret
or
ins
jmp
xchg
into
adc
js
je
mul
inc
xchg
mov
gs
mov
sub
(bad)
cmp
icebp
or
mov
mov
xchg
adc
pop
ins
or
cdq
xchg
xchg
sub
jmp
(bad)
data16
aas
jge
aas
popa
xlat
outs
rcl
mov
push
dec
retf
xor
jle
jbe
inc
or
arpl
sub
add
xchg
cs
jg
hlt
jmp
sub
cmps
fisubr
inc
call
add
mov
ss
mov
xor
add
sahf
sti
ficomp
mov
out
pop
sub
adc
add
lahf
jp
xchg
ds
inc
jg
xor
pop
mov
dec
retf
inc
ins
retf
ret
cmp
into
dec
call
mov
cmp
dec
cmp
mov
or
shl
(bad)
test
sub
sbb
and
mov
repnz
lahf
arpl
cwde
cmp
mov
js
shl
fild
push
adc
and
jg
cwde
in
push
xor
mov
popa
rcr
iret
sub
sbb
sbb
mov
and
stc
daa
push
pop
fiadd
pop
pop
and
inc
adc
rol
pushf
mov
retf
rol
out
push
xchg
imul
push
pop
sub
adc
sub
scas
out
std
mov
fbstp
sub
mov
das
rol
cmps
mov
inc
adc
push
jno
sbb
sub
aam
mov
daa
std
jl
xor
test
cmps
cmp
gs
cmp
cmp
sub
lds
push
rol
and
jmp
pop
js
fwait
or
and
iret
jno
data16
sub
pop
(bad)
or
movs
dec
je
out
xor
mov
cdq
das
aaa
pusha
pop
jg
aam
xor
dec
sbb
test
mov
mov
lahf
adc
pop
jle
cs
or
push
xchg
adc
cmp
pusha
ss
repnz
outs
repz
or
call
jg
scas
cdq
mov
xchg
mov
jae
xchg
pop
das
retf
xchg
xchg
add
imul
stos
lods
jb
scas
and
clc
jae
shl
cmc
mov
les
jne
add
mov
jb
movs
lods
test
sub
jae
jmp
je
inc
frstor
iret
je
cmp
sbb
mov
xor
xchg
sub
ins
jbe
rcr
cli
and
pop
scas
fwait
rcl
xchg
test
mov
lahf
sbb
dec
xor
jnp
ds
dec
sub
enter
and
sub
js
pop
cmp
pop
sbb
shl
inc
fs
leave
das
push
push
jae
cmp
or
mov
outs
mov
loop
fmul
fs
mov
or
fcom
in
and
mov
push
outs
test
outs
xchg
pusha
iret
js
fst
push
in
or
stos
sbb
ins
lock
ja
fcomp
xor
xor
dec
(bad)
clc
adc
sbb
imul
adc
xor
sub
push
repz
mov
mov
pop
and
int
cmp
pop
sub
div
jecxz
adc
xor
jbe
frstor
dec
dec
pop
das
loop
xchg
out
repz
or
hlt
addr16
cmp
out
pushf
inc
jg
fcomp
mov
mov
test
dec
repnz
inc
xchg
adc
rcl
out
pop
mov
mov
push
mov
movs
xor
jae
jne
iret
ins
ins
(bad)
xchg
sub
or
loope
(bad)
fsub
pop
sub
fsubr
lds
xlat
out
xor
inc
add
cmps
inc
or
scas
sar
(bad)
pop
arpl
ss
or
inc
scas
push
(bad)
sbb
xchg
sbb
pop
lods
sub
push
scas
dec
and
adc
rcl
add
mov
cdq
and
xchg
inc
(bad)
fdiv
mov
out
lods
and
mov
mov
and
aaa
ins
add
push
mov
add
and
pop
xchg
cdq
cmps
cmp
inc
and
sub
adc
test
mov
and
aaa
outs
lock
pushf
jmpw
mov
xor
xchg
std
jge
mov
int3
je
and
ins
and
scas
xlat
jns
out
jae
cs
or
cwde
or
xor
ins
aaa
out
call
mov
adc
jmp
and
inc
mov
repz
call
inc
pop
jae
pop
cmc
call
repnz
pop
bound
and
sub
xor
jle
push
mov
xchg
pop
and
psrld
ja
and
mov
inc
clc
shl
sbb
push
cmp
pop
sub
push
xchg
pop
outs
mov
sti
sub
rcr
inc
or
xor
add
call
xchg
call
add
mov
sub
pop
inc
pop
xchg
es
and
jle
add
nop
idiv
jge
push
sahf
lods
scas
out
std
repnz
or
call
out
adc
pop
pop
xchg
(bad)
data16
cmp
sub
xor
bound
jecxz
fmul
imul
fmul
jg
enter
mov
xchg
scas
adc
mov
call
sub
nop
mov
inc
iret
xchg
pop
stos
jno
bound
shl
movs
mov
sbb
out
xchg
cdq
into
sti
int3
inc
int
inc
xchg
data16
dec
push
jl
ins
out
movs
dec
fs
cmp
ins
adc
xchg
add
out
lahf
lds
daa
add
inc
xchg
dec
add
out
cmp
(bad)
push
test
mov
hlt
rcl
jae
xchg
dec
adc
mov
mov
(bad)
mov
outs
loop
xor
stos
xchg
test
out
stos
in
into
cli
xlat
jmp
xor
or
mov
mov
aam
aad
lock
jb
dec
and
(bad)
aad
inc
out
ins
dec
cmp
jae
mov
xchg
cmc
mov
ss
pop
stos
push
(bad)
xor
push
je
je
ds
out
loopne
jecxz
fwait
push
(bad)
jecxz
sar
jae
out
arpl
enter
pop
call
scas
push
pop
jmp
mov
pusha
mov
in
push
out
xchg
sahf
repnz
gs
cld
sub
cmps
cwde
test
mov
sub
add
pop
cmp
shr
jecxz
call
mov
das
add
mov
aaa
jg
cmp
add
les
rcr
in
fwait
sar
pop
jecxz
jbe
sbb
jo
push
push
push
popa
adc
popf
pop
fwait
daa
or
shr
(bad)
xchg
push
or
push
add
dec
inc
and
outs
add
test
xchg
aad
xor
lods
stos
sbb
jne
dec
movs
mov
rcl
add
xor
sahf
push
xor
mov
(bad)
lods
cwde
jmp
push
int3
inc
xor
daa
mov
nop
ror
cmp
adc
aad
mov
in
stos
les
pop
add
test
ss
and
jno
xchg
mov
into
icebp
sub
cmps
loop
mov
mov
mov
repz
push
sub
inc
xchg
inc
out
rol
fldcw
dec
push
in
call
push
jne
cmp
daa
into
mov
sub
retf
lock
lods
xor
jnp
push
mov
aas
xor
aaa
in
(bad)
out
jl
lods
loope
(bad)
xchg
fimul
fist
pop
jmp
in
int
or
adc
mov
mov
push
or
scas
add
sbb
int3
cs
sbb
adc
inc
popa
add
pop
cld
push
pop
add
sbb
stc
push
cs
mov
sbb
adc
les
aad
in
xor
adc
pop
or
jmp
loopne
ficomp
icebp
pop
push
xchg
cmc
and
jns
sbb
pop
pop
adc
pop
push
stos
or
mov
jmp
cmp
int
pop
dec
sar
ja
pop
or
outs
fs
fist
or
and
inc
daa
push
int3
fst
push
lock
mov
inc
add
stos
dec
xor
int
aad
push
aam
fldcw
out
imul
pop
inc
push
jle
xor
sbb
ficom
and
adc
popa
and
in
mov
lods
gs
ss
mov
or
mov
mov
movs
push
leave
mov
mov
aad
jg
in
dec
cmps
adc
call
or
inc
ficomp
xor
push
mov
enter
fnsave
out
mov
mov
in
scas
and
daa
jns
pop
or
ror
pop
test
cmc
pop
xchg
pushf
inc
mov
popf
jp
add
(bad)
jns
iret
cmp
sbb
(bad)
cmps
xchg
jge
enter
lea
mov
dec
mov
xor
test
and
mov
pop
cmp
push
std
lahf
jno
jge
ret
mov
mov
call
pop
mov
mov
cmc
add
and
add
add
test
fdiv
xor
and
jle
aam
jp
enter
retf
je
popf
daa
retf
jo
repnz
cmp
imul
jbe
jo
int3
outs
sbb
pushf
not
in
popf
ins
jnp
cmp
cmp
enter
nop
sub
loop
cdq
(bad)
fsubr
inc
ins
push
in
and
add
fimul
cmps
dec
fcom
and
pop
lods
rcl
ss
cmp
call
jno
imul
repnz
jb
fbld
dec
jbe
mov
retf
mov
and
cmps
pop
loopne
loop
or
int
cmovae
inc
scas
daa
rep
jp
int
(bad)
sbb
dec
add
mov
mov
sub
fs
inc
arpl
rcr
lea
mov
popa
mov
adc
push
imul
mov
xchg
neg
pop
xchg
dec
sub
inc
and
xlat
jmp
es
fst
pop
icebp
sub
inc
aam
xor
cmp
sbb
movs
lds
aas
mov
cmp
sub
mov
fdivr
cwde
mov
mov
daa
or
wrmsr
add
mov
and
js
push
repnz
mov
xor
mov
(bad)
jmp
jmp
pop
(bad)
lahf
jl
pushf
mov
xchg
fcomi
clc
out
pop
in
in
fwait
outs
inc
rol
add
(bad)
imul
xchg
movs
pop
rcr
cli
xchg
rcr
cmps
daa
stos
loopne
gs
lds
xor
push
shl
dec
outs
mov
test
sub
push
mov
(bad)
or
fidiv
xor
aas
(bad)
jmp
(bad)
ja
xor
mov
ins
int3
pop
test
xor
popa
cmps
gs
pop
mov
leave
push
push
call
das
pushf
(bad)
mov
ja
sbb
sbb
ja
or
mov
cwde
push
xchg
das
pop
jg
jge
pusha
and
dec
mov
fs
int3
inc
bound
sbb
jnp
adc
into
movs
or
sub
(bad)
mov
lds
call
sbb
in
push
loop
push
test
cmps
mov
in
ins
cmp
xchg
into
ja
div
dec
lock
hlt
dec
inc
ss
fistp
fwait
pop
test
xchg
push
rcl
ror
or
retf
in
loop
jmp
pop
and
bnd
icebp
aaa
out
dec
rcr
imul
(bad)
jg
push
scas
adc
sbb
mov
and
and
sub
xlat
fistp
mov
(bad)
or
sub
int
test
add
stos
xchg
mov
sub
in
pop
mov
or
call
sub
arpl
adc
adc
push
repz
push
call
int
out
fucom
in
cmp
aas
mov
jns
inc
mov
inc
cmp
pop
dec
mov
xor
pop
iret
xchg
jne
dec
and
sub
xor
lahf
test
test
(bad)
xor
leave
test
push
sti
int
cdq
fwait
pop
push
(bad)
mov
fs
mov
ret
ss
or
call
mov
ins
xchg
mov
jecxz
jne
jmp
fimul
xchg
push
outs
lods
scas
es
xor
mov
(bad)
rol
cmovae
ja
ss
add
cmps
cld
pop
mov
adc
ret
test
push
jno
aad
stos
cmp
jno
push
mov
adc
scas
cwde
mov
dec
in
push
mov
loop
neg
cmp
shr
mov
in
daa
add
cmp
jle
sbb
add
mov
rcr
sbb
mov
das
nop
mov
mov
and
shl
in
push
pop
imul
imul
ss
popf
cmp
bound
cmc
sub
cmp
mov
fistp
bound
add
jbe
data16
cmp
test
imul
adc
mov
pop
mov
sbb
add
movs
iret
mov
mov
sub
gs
popa
aaa
jmp
or
mov
iret
pop
rcr
push
div
cmps
pop
sbb
shl
imul
dec
scas
cmps
mov
add
cmp
push
xchg
mov
(bad)
jle
push
loope
scas
inc
out
xor
movs
mov
and
outs
jp
retf
mov
lea
adc
out
gs
mov
pusha
xor
jae
aas
inc
and
mov
mov
mov
jp
dec
outs
pop
sub
mov
cmp
aam
xchg
or
imul
add
es
dec
movs
add
xchg
jno
dec
cmp
xor
jge
ins
jmp
stc
scas
jb
cmps
push
mov
mov
int
adc
lds
inc
mov
sbb
push
sub
mov
(bad)
fnstenv
sub
adc
pushf
dec
xchg
add
push
xchg
cmps
mov
adc
rol
pop
and
hlt
mov
ja
(bad)
in
(bad)
data16
cld
mov
out
add
xchg
dec
nop
ror
(bad)
loop
mov
icebp
ret
sub
mov
test
xchg
cmp
or
mov
inc
gs
xlat
mov
ror
(bad)
mov
mov
cmp
cmp
adc
xor
mov
jns
and
push
outs
and
push
call
stos
js
mov
test
and
stc
lea
xchg
add
les
mov
sbb
(bad)
adc
xor
push
push
push
bound
adc
in
cs
sbb
dec
jbe
in
shl
pushf
inc
sbb
icebp
sar
pop
test
scas
aam
neg
iret
dec
jne
cmp
pop
mov
stos
or
cwde
repz
loopne
ja
mov
add
cmp
xor
mov
clc
xchg
test
cwde
outs
(bad)
mul
iret
mov
xchg
xchg
stos
retf
fsub
inc
mov
xor
xor
or
int
cmp
adc
imul
sbb
cmps
xor
(bad)
call
xor
(bad)
mov
mov
in
jle
out
xchg
int
out
jo
jge
pusha
pop
jmp
sbb
jns
adc
sbb
fs
not
push
inc
fst
pop
mov
ret
(bad)
adc
jo
cmp
adc
push
push
cmps
daa
sti
mov
cmp
xchg
test
repnz
pop
xchg
popa
addr16
mov
cmps
lods
mov
mov
xchg
sbb
clc
or
sbb
push
pusha
movsx
test
cdq
pushf
seto
mov
mov
xchg
cmps
pushf
test
mov
movs
mov
mov
out
sbb
out
cmp
xor
retf
stos
call
mov
dec
scas
or
ja
xchg
mov
jl
aaa
mov
in
push
sbb
imul
fisub
mov
inc
lods
add
out
imul
or
repnz
jns
ds
pop
and
inc
hlt
add
adc
xchg
fcom
int
sbb
rcl
aas
and
cmp
or
out
sbb
mov
aam
popa
sbb
out
cmc
int
jl
jno
sti
ja
test
ss
js
mov
inc
pop
inc
mov
stos
imul
pusha
sbb
cmp
mov
adc
dec
dec
popa
and
je
and
lock
dec
aam
push
pop
jmp
clc
xchg
adc
sub
dec
movs
movs
ds
inc
push
into
rcl
or
adc
pop
pop
push
outs
cmp
push
rcl
push
sahf
ficom
inc
pop
sub
xchg
pop
push
pop
inc
inc
inc
dec
dec
test
mov
inc
int
mul
imul
pop
inc
sar
pop
jno
neg
loope
clc
xor
pushf
sub
stos
xor
stos
sub
into
mov
jmp
add
repz
push
sbb
test
pop
pop
out
adc
das
int
ret
movs
popf
lea
lock
daa
into
into
sub
popf
mov
adc
jne
test
dec
and
mov
inc
jno
dec
push
add
and
push
and
cmp
sbb
loop
sbb
xlat
adc
add
or
xchg
sbb
jbe
out
add
aas
out
test
ret
fst
les
repnz
xchg
outs
pop
jns
and
add
adc
cmp
sahf
je
adc
sti
ficom
ins
loopne
dec
dec
xchg
mov
jb
add
mov
cmp
add
dec
cmp
push
jp
mov
push
in
leave
into
inc
xchg
cmp
pop
sbb
inc
push
mov
fadd
cli
ins
jecxz
jnp
imul
cmp
inc
add
add
and
inc
sbb
push
mov
cmps
les
ja
addr16
add
adc
jne
and
pop
adc
mov
xor
pushf
in
jg
sbb
repz
lods
into
mov
lods
xor
call
cmp
sar
scas
pop
inc
mov
pushfw
sti
cmc
pop
movs
jl
sbb
(bad)
sbb
jae
sbb
ins
xchg
push
xchg
mov
sti
int3
stc
dec
retf
into
gs
cmp
stos
jne
mov
retf
pop
clc
adc
ror
test
loopne
xchg
sub
lds
mov
and
add
loop
outs
lock
sub
sahf
call
cmc
jbe
cwde
ds
(bad)
xlat
out
lods
push
outs
cwde
inc
loope
adc
repnz
ins
js
cmp
test
ror
xor
xlat
rcl
sahf
movs
sub
or
retf
pop
ins
rcl
icebp
and
and
test
add
nop
lods
les
mov
fwait
xor
retf
or
push
arpl
jns
or
or
(bad)
mov
rcl
lahf
mov
pop
push
push
(bad)
inc
sahf
fucom
push
fild
retf
xlat
sahf
lock
adc
aaa
mov
(bad)
call
jg
cmp
pop
dec
mov
fsubr
std
jnp
or
outs
cmovne
movs
mov
maxps
jno
inc
xor
mov
adc
mov
dec
adc
pop
iret
(bad)
mov
mov
inc
rcl
xor
pop
push
sub
pop
cmp
shl
jnp
into
dec
scas
mov
sub
xchg
test
mul
inc
dec
fsub
sbb
leave
data16
pop
popa
outs
stos
cmp
movs
inc
xchg
(bad)
dec
push
xchg
and
cmp
or
mov
ds
xchg
push
ins
jecxz
or
pop
fiadd
pushf
cmp
dec
call
xchg
aad
cmc
and
and
dec
mov
add
in
fs
mov
mov
loop
pop
lea
sbb
push
cs
fist
push
ror
adc
sub
fstcw
dec
cmp
ret
in
dec
in
pop
pop
and
push
shr
ret
or
(bad)
aad
and
std
push
int
pop
arpl
aas
arpl
dec
fs
dec
repz
mov
outs
std
pop
outs
push
sbb
lods
(bad)
jle
ins
out
adc
stos
pushf
or
lds
pop
retf
push
xor
xchg
jp
in
hlt
pop
retf
cli
stc
(bad)
dec
es
pusha
int
cmp
repnz
int3
jmp
repnz
fbstp
adc
loop
adc
(bad)
xor
ins
rcr
add
pop
xchg
jmp
mov
or
mov
add
cmc
es
out
ins
lock
add
out
dec
mov
mov
mov
dec
arpl
movs
jle
sbb
mov
xor
cli
cld
mov
xchg
(bad)
cdq
pop
fptan
jge
xlat
(bad)
test
fdivr
or
les
xor
xor
sub
jae
mov
ja
lods
ss
sub
add
retf
push
pop
xlat
mov
mov
cdq
jb
pop
dec
xor
cld
in
xchg
push
or
(bad)
div
lods
mov
fld
sbb
and
int
into
cmps
adc
(bad)
sahf
jns
popf
or
xor
or
mov
pop
cli
rcr
jl
sub
jl
inc
dec
stc
bts
dec
mov
inc
(bad)
(bad)
add
sbb
xchg
clc
mov
mov
or
outs
push
push
es
sub
push
ds
push
mov
jp
mov
xchg
cmp
(bad)
jnp
loop
clc
xchg
not
xchg
enter
(bad)
hlt
dec
mov
fwait
add
repnz
inc
pop
xchg
inc
sbb
test
pop
(bad)
in
add
xchg
sbb
scas
mov
out
shl
scas
mov
push
fwait
ja
scas
popf
jne
pushf
ja
movs
mov
imul
pop
fisubr
and
pop
push
mov
jmp
jle
std
js
std
cmp
jp
inc
xlat
pop
add
cs
cmp
je
jge
loopne
xchg
mov
pop
inc
inc
inc
(bad)
outs
push
pop
mov
dec
xchg
ror
cs
xchg
or
xchg
es
cmp
fcmovb
in
dec
scas
add
mov
daa
push
mov
xchg
sahf
mov
inc
hlt
repnz
add
(bad)
rcr
icebp
push
jbe
add
add
or
hlt
(bad)
adc
sbb
push
(bad)
cld
mov
idiv
fidiv
cli
lock
mov
adc
pop
mov
mov
mov
xor
sub
dec
adc
adc
cs
mov
addr16
daa
inc
popf
cmp
leave
fcmovu
dec
push
(bad)
fst
adc
push
sub
imul
js
adc
adc
adc
pushw
out
mov
jnp
call
ds
sbb
mov
adc
xchg
dec
push
adc
jnp
aam
(bad)
cmp
dec
ret
(bad)
in
cli
test
outs
xor
stc
push
xchg
ror
pop
faddp
push
arpl
movs
push
mov
mov
inc
fsub
jns
inc
test
jmp
push
or
add
sbb
sahf
ret
jnp
test
leave
and
in
mov
dec
out
out
mov
or
adc
lods
push
dec
hlt
xchg
cli
inc
sub
sbb
jns
es
movs
fild
jmp
push
mov
cmp
jb
xor
lahf
mov
imul
xchg
out
bound
mov
(bad)
fst
ds
add
push
bound
cmp
inc
xor
int3
popf
or
dec
mov
leave
sbb
pop
nop
xor
repz
pop
repnz
jle
pop
pop
adc
sub
aaa
and
in
mov
lahf
pop
loopne
outs
mov
fwait
sbb
(bad)
in
sub
and
enter
adc
lock
imul
mov
or
mov
mov
pushf
bound
xchg
hlt
hlt
ins
cmp
aas
(bad)
lock
mov
aas
scas
push
push
test
or
inc
loope
xchg
pop
mov
jg
scas
(bad)
cmp
jnp
loop
or
add
dec
add
imul
inc
adc
out
sbb
xchg
add
dec
push
int
lods
data16
sbb
stos
jae
mov
(bad)
xchg
or
push
stos
push
std
dec
imul
mov
mov
sub
and
(bad)
mov
repz
pop
xchg
bound
mov
jbe
into
shl
pop
pop
shr
xor
push
mov
push
dec
sub
gs
adc
mov
loope
arpl
fadd
outs
push
mov
stc
outs
repnz
(bad)
sub
jnp
or
push
mov
dec
leave
and
movs
mov
inc
dec
sub
add
icebp
call
xlat
xchg
xchg
cdq
cmp
cmp
inc
fisttp
fistp
push
imul
push
in
movs
fistp
test
push
mov
fadd
mov
mov
and
or
in
out
movs
jmp
dec
push
jb
sub
gs
inc
dec
ret
in
push
add
inc
mov
pop
lahf
fisubr
xor
jne
inc
pop
mov
dec
and
clc
xor
jg
push
dec
cmc
sbb
ja
in
pop
mov
push
add
dec
cdq
outs
fbstp
jns
jns
aam
inc
xor
xchg
mov
imul
cmp
ja
push
push
cmp
retf
push
sub
adc
and
cli
(bad)
(bad)
mov
pop
push
pop
dec
sbb
fwait
add
int3
sar
sahf
dec
mov
clc
das
jne
sbb
or
adc
call
inc
(bad)
sbb
rcl
(bad)
arpl
adc
jge
fiadd
jge
mov
mov
jl
sub
xchg
or
dec
ss
xor
jmp
sub
ss
jp
aam
cmp
cmp
add
jmp
jb
xor
cmp
dec
fisubr
int
mov
std
hlt
stc
jle
das
push
popf
cld
push
inc
loope
mov
aas
mov
xlat
shl
pop
loope
inc
xor
mov
scas
push
loopne
mov
xchg
addr16
cmp
mov
icebp
mov
test
loopne
repz
inc
fldenv
jbe
retf
lods
(bad)
in
dec
das
fst
lods
(bad)
xchg
ret
(bad)
loop
pop
(bad)
adc
sub
and
push
ret
jns
push
mov
cmps
movs
aad
mov
xchg
arpl
stc
xor
out
fxch
cld
pop
hlt
addr16
mov
adc
sbb
fsub
rol
fwait
pop
shr
mov
push
fcomp
fldenv
loopne
xor
sub
mov
lods
adc
xor
jg
cmp
mov
scas
mov
add
aaa
movs
lahf
mov
mov
add
adc
sar
mov
nop
pushf
ds
mov
ins
jmp
xchg
mov
adc
pop
sub
add
mov
cs
dec
dec
or
mov
mov
inc
loope
dec
xor
in
mov
xchg
bnd
push
rol
outs
push
fsub
into
xor
xchg
ror
loop
out
xchg
stos
mov
idiv
pop
int3
inc
xchg
ins
xchg
mov
jle
retf
(bad)
aad
xchg
addr16
in
cmps
daa
sbb
fsub
aas
aaa
movs
fstp
jmp
and
mov
push
cmp
or
push
xor
inc
or
xor
cmp
xchg
push
and
inc
test
clc
in
aam
jge
frstor
dec
mov
js
cld
fcmovnu
jmp
add
int3
das
(bad)
loope
std
repz
mov
stc
add
pop
mov
mov
lods
mov
xchg
lds
cmps
loop
xor
mov
jle
repz
adc
xor
test
mov
jo
retf
shl
loop
ja
aad
ins
pop
ins
pop
jp
mov
gs
cmp
mov
loopne
enter
imul
sub
cmps
shr
push
iret
cwde
jns
xchg
pop
(bad)
push
pop
jge
or
cmps
ds
jle
push
icebp
and
retf
add
das
add
jmp
mov
mov
push
mov
push
dec
in
lahf
hlt
jns
mov
test
loopne
push
push
sub
ds
mov
rcr
xor
mov
pop
fdiv
pop
jns
add
xchg
in
ins
in
outs
jmp
sbb
ds
fmul
push
jns
jns
mov
inc
popf
jmp
pushf
pop
(bad)
lock
jo
xor
xor
bound
scas
stos
inc
test
loopne
fsubr
pop
mov
xchg
cmps
shl
repz
pop
xchg
stos
in
sub
fbld
dec
add
push
jne
xchg
mov
push
cmp
jae
cmp
shl
repnz
and
cmp
mov
push
call
cmp
mov
sbb
in
inc
jecxz
fwait
nop
xchg
test
cmp
mov
sbb
or
sbb
in
mov
rcl
movs
jb
sti
sub
mov
xor
cmp
adc
or
inc
mov
in
(bad)
xor
mov
pop
dec
cwde
leave
mov
test
xchg
cmps
jp
xchg
aad
sub
gs
and
pop
or
movs
or
lea
dec
popf
mov
mov
or
jl
cmp
movs
xchg
push
jae
xchg
xor
fcomp
stos
adc
sbb
xchg
pop
pusha
mov
jg
data16
add
jp
xchg
pop
lahf
movs
test
and
js
in
cmp
lock
test
jo
mov
xor
addr16
mov
(bad)
rcl
pop
cmp
scas
outs
sbb
inc
daa
movs
push
sub
add
mov
daa
inc
sbb
scas
loop
nop
xchg
scas
pop
sbb
into
mov
icebp
aas
jnp
icebp
mov
pop
xchg
call
in
lock
loopne
inc
or
in
movs
mov
fcom
mov
adc
cmp
cmp
dec
cmc
xor
test
call
and
dec
iret
mov
dec
(bad)
mov
movs
jno
(bad)
adc
xlat
and
and
and
imul
mov
popf
mov
dec
cmp
mov
rcl
pop
adc
clc
sbb
jl
rcl
div
inc
cmp
push
pop
cmp
inc
adc
ja
dec
movs
mov
addr16
mov
std
xchg
fdiv
cmp
outs
in
mov
jmp
je
loopne
xor
xor
push
cwde
lock
and
daa
hlt
mov
pshufw
(bad)
pop
adc
stc
mov
adc
ret
shr
fst
jbe
jecxz
scas
loop
dec
dec
jmp
je
fdiv
mov
mov
jno
in
fistp
sbb
pop
mov
clc
ja
jmp
aaa
es
(bad)
idiv
lds
sbb
push
adc
(bad)
dec
push
or
mov
ror
xor
imul
cdq
mov
push
add
ret
mov
aaa
inc
ja
adc
cdq
cmp
inc
xor
cmp
mov
sbb
jnp
mov
xlat
int3
dec
or
out
cld
cmps
cmps
outs
mov
cwde
pop
mov
lea
jmp
je
pop
dec
mov
jp
stc
call
jb
into
pop
mov
mov
dec
popf
mov
xor
push
out
cmp
pop
lods
out
inc
mov
pop
mov
xlat
in
jno
fisubr
sub
das
nop
mov
movs
lahf
add
(bad)
pop
dec
dec
xchg
adc
mov
pop
pop
enter
adc
lahf
dec
xchg
stc
push
add
fstp
dec
test
mov
or
mov
dec
int
fiadd
fild
push
mov
das
mov
das
pop
stos
lahf
add
dec
loope
xchg
adc
aaa
idiv
sbb
aad
jg
add
jmp
cld
mov
adc
pop
lods
in
ret
test
cmps
or
inc
std
vsubss
xlat
or
movs
arpl
js
push
jo
and
or
inc
push
or
movs
sub
mov
dec
out
test
aas
(bad)
jmp
je
inc
inc
add
dec
sub
pushf
or
pop
xchg
inc
or
lods
mov
rcr
(bad)
repz
push
xor
js
mov
sti
ds
out
sub
dec
test
jmp
fld
sti
aaa
loope
push
adc
repnz
stc
adc
jns
push
adc
sub
pop
retf
push
jmp
mov
jns
out
xor
cmc
and
ror
cmp
pusha
fisttp
call
in
sbb
mov
push
arpl
inc
call
cmp
scas
jmp
jg
loop
in
adc
or
push
push
fadd
jecxz
and
lldt
shl
jmp
cld
push
cmp
std
arpl
dec
jbe
int3
xchg
imul
cmp
mov
mov
mov
xchg
fimul
inc
sbb
push
inc
(bad)
push
jl
movs
sub
scas
mov
cmp
mov
not
jns
push
cmps
int3
push
xchg
jne
mov
mov
jo
movs
cmc
push
leave
lds
cli
mov
lock
mov
scas
adc
pop
mov
pop
(bad)
test
scas
clc
icebp
cdq
pop
sbb
jmp
dec
fcom
push
xchg
outs
sub
cmps
ficom
or
xor
shr
push
fnstcw
pop
aad
les
lods
aam
les
js
mov
mov
mov
ins
pop
sub
fcmovnb
sub
sbb
out
clc
dec
pop
push
mov
popf
add
out
cmp
mov
dec
adc
adc
das
jbe
fisubr
xchg
xor
aaa
sar
shl
xchg
cli
add
in
cld
mov
cmp
ror
push
xor
fdivr
pop
les
(bad)
xor
(bad)
mov
movs
(bad)
jns
add
fdiv
call
loope
sbb
xchg
and
call
add
mov
jle
popa
mov
inc
sub
leave
jmp
mov
loope
(bad)
cmp
mov
mov
retf
cmps
out
mov
mov
(bad)
fdivr
xchg
or
hlt
je
stc
dec
rcl
sahf
fadd
sbb
xchg
pop
jecxz
push
das
sbb
sbb
frstor
mul
inc
cmp
cmp
enter
arpl
inc
(bad)
mov
and
jo
inc
inc
add
push
cmp
pop
(bad)
mov
ror
das
loopne
(bad)
sub
loop
hlt
div
jb
mov
adc
mov
sub
leave
neg
jne
repz
ja
ret
repz
(bad)
xor
and
jbe
clc
or
mov
int3
add
adc
sbb
add
out
cld
in
mov
xchg
xlat
mov
scas
aad
test
lods
xchg
in
outs
and
or
xor
shl
push
adc
fldenv
push
retf
xor
mov
repnz
xor
jns
pop
adc
sub
test
aam
xchg
stos
xor
add
sub
popf
sub
cmp
xlat
(bad)
push
jecxz
push
icebp
xchg
xor
aas
hlt
sub
mov
jg
and
cmps
mov
dec
pop
lods
outs
and
inc
lods
lahf
sbb
aas
ficomp
cmp
leave
mov
jmp
jnp
adc
and
sti
cwde
out
fldcw
std
and
sbb
mov
inc
popf
aam
addr16
aas
mov
loopne
in
scas
adc
xor
in
mov
pop
fucompp
add
pop
aas
dec
or
shl
or
pop
xchg
mov
and
push
in
jp
cdq
sub
adc
and
jge
dec
aaa
inc
fimul
(bad)
mov
jno
jmp
adc
test
shr
xchg
inc
mov
jnp
sbb
and
inc
fsubp
push
icebp
cwde
lock
pop
sub
jge
sbb
stos
shr
or
pop
mov
mov
add
dec
jae
or
push
cwde
dec
gs
mov
mov
mov
into
mov
sar
xchg
and
fstp
repnz
adc
and
xchg
and
mov
icebp
sub
mov
inc
imul
sti
mov
sbb
and
hlt
add
scas
or
fcomp
rol
inc
inc
push
jmp
(bad)
lds
dec
sbb
dec
inc
xor
jge
nop
inc
imul
scas
in
push
out
call
fimul
jb
inc
jno
popa
dec
cli
add
xor
xchg
movs
test
mov
cwde
lods
pop
jno
sbb
mov
dec
aaa
aaa
xor
call
ins
mov
mov
cli
out
fdivr
mov
pop
mov
sbb
fld
adc
dec
lods
in
das
push
cmp
cli
nop
jp
lods
xchg
jb
jmp
mov
out
mov
mov
mov
(bad)
xlat
daa
fstp
jo
dec
xor
aam
inc
mov
sbb
fld
aam
aaa
iret
mov
push
push
push
xlat
and
je
outs
sub
shl
xor
mov
mov
mov
cwde
ja
pop
cli
or
xchg
mov
mov
scas
lods
repnz
pop
(bad)
jo
sub
out
pop
call
(bad)
pop
inc
fst
push
push
sbb
shl
cld
outs
(bad)
sbb
(bad)
dec
pop
cwde
(bad)
js
test
cmps
push
push
call
into
mov
jnp
mov
retf
call
push
xor
dec
xchg
inc
jb
aas
mov
iret
push
rcr
dec
push
jae
jns
repnz
mov
cli
and
dec
dec
xchg
in
dec
or
and
ins
jo
inc
sbb
mov
dec
cmc
popa
call
inc
xor
cmc
int
mov
adc
int
jecxz
(bad)
jmp
nop
inc
les
xchg
jmp
ja
xor
mov
sti
popa
(bad)
(bad)
ds
sub
jecxz
push
inc
addr16
mov
js
shr
in
adc
adc
leave
cmp
add
aam
stc
aas
sub
leave
test
arpl
xchg
inc
(bad)
jmp
popa
retf
dec
es
in
test
sbb
push
mov
fst
and
lahf
push
xchg
jecxz
dec
ja
xchg
icebp
inc
mov
cvttps2pi
outs
cmps
xor
ja
push
add
inc
xor
xor
fsubr
adc
adc
test
mov
arpl
mov
add
pop
ins
sub
jle
inc
(bad)
imul
or
add
lds
inc
push
xchg
and
jnp
jecxz
add
push
inc
xor
popa
sub
sub
das
xchg
mov
loope
imul
(bad)
or
movs
cli
jbe
inc
ds
mov
pop
in
arpl
and
mov
ror
add
push
out
sub
mov
mov
int3
clc
jno
sub
jge
mov
ja
aad
mov
dec
mov
dec
xchg
and
aas
cdq
mov
cmps
xor
xchg
daa
les
repnz
leave
xchg
pop
data16
xchg
pop
retf
outs
iret
test
xor
sbb
(bad)
cmp
(bad)
rol
push
xor
jns
mov
mov
lahf
xchg
push
int
and
jae
int3
mov
mov
jbe
xor
cmp
mov
or
movs
in
and
cmp
fsub
mov
fisubr
aam
jmp
mov
call
in
imul
mov
in
push
jl
xchg
add
pop
cmp
inc
jb
pop
inc
dec
jge
std
add
dec
popa
retf
cmp
loopne
fxch
and
fsubr
(bad)
hlt
or
mov
pop
push
pop
jmp
pop
sbb
pusha
ret
xchg
movs
out
jne
retf
jmp
scas
dec
cld
inc
mov
or
popf
int
dec
mov
mov
je
push
add
push
aad
pop
or
add
and
retf
adc
mov
mov
and
xchg
ja
jecxz
pop
cmp
cmps
mov
fs
push
add
mov
rol
stc
cmp
cmp
test
(bad)
aas
lahf
and
cmp
out
add
jmp
cdq
je
fist
cmp
scas
enter
dec
cmp
inc
pop
jle
ss
call
enter
(bad)
or
and
or
ins
dec
pusha
call
sub
add
call
xchg
cmps
sub
push
push
jns
inc
and
aad
ror
adc
cmp
jmp
push
push
dec
cmp
retf
push
aaa
adc
dec
out
movs
hlt
adc
mov
push
popf
jb
inc
jb
dec
retf
mov
sbb
adc
mov
mov
mov
gs
in
mov
icebp
mov
outs
jo
pop
fcmovu
dec
jne
inc
add
pop
imul
sub
leave
fbstp
xchg
ret
shl
(bad)
jl
inc
inc
movs
lahf
push
or
pop
jmp
jge
movs
inc
cmps
imul
push
mov
sti
int
dec
adc
jnp
mov
or
call
or
add
pop
(bad)
repz
(bad)
mov
inc
sbb
outs
and
mov
cli
lds
les
leave
cmc
ret
push
mov
mov
in
pslld
sbb
dec
xchg
push
repz
test
xor
out
push
mov
pop
test
jae
jmp
dec
mov
jo
fsubr
xor
ja
mov
sbb
adc
sub
cmp
xchg
xchg
add
inc
push
int3
mov
inc
aad
cwde
jb
enter
dec
adc
jmp
sbb
lea
or
jmp
int3
sbb
mov
add
jo
int
mov
pop
mov
cmp
imul
sti
xor
jns
xchg
lea
add
test
dec
sar
fdivp
lods
cs
jp
aad
sub
cld
lahf
out
dec
mov
fidiv
inc
mul
shr
ja
aam
(bad)
cld
xor
mov
and
shl
jp
das
cmps
sub
test
movs
dec
(bad)
mov
push
iret
es
dec
mov
clc
sti
sahf
inc
movs
dec
xor
into
lahf
sbb
hlt
push
lds
ss
out
xor
pop
in
mov
aaa
js
stos
ss
mov
cmps
add
scas
sbb
dec
(bad)
fdivr
shl
add
out
fidiv
rol
fsub
adc
adc
fsubr
cs
fisubr
ja
cli
pop
pop
mov
int
dec
cld
adc
jb
jecxz
ja
xor
jno
xchg
bnd
clc
xchg
in
or
dec
out
lahf
jge
push
pop
pusha
cmp
xor
stos
imul
or
es
cwde
cmp
mov
pusha
sub
ret
scas
lods
shl
sbb
push
pop
xor
in
pop
repz
dec
call
in
adc
pushf
adc
jnp
es
pusha
mov
repnz
jl
dec
xchg
cmc
cmp
fmul
push
adc
ret
dec
mov
jge
pop
in
sti
cmp
pop
mov
sub
jnp
retf
bound
dec
sub
cmp
xor
xor
(bad)
leave
or
sub
mov
sbb
call
xor
xchg
push
jnp
sbb
fild
xchg
adc
jp
xor
mov
mov
jo
jmp
inc
(bad)
std
sbb
sbb
or
cmove
and
or
pop
rcr
enter
popf
fdivr
scas
push
sbb
sub
loop
xchg
iret
or
lea
push
popa
jmp
add
jo
and
inc
das
(bad)
pop
aad
std
sub
xchg
test
adc
in
sbb
test
pop
cmps
mov
cmps
sar
sub
push
clc
mov
fcomp
movs
mov
sub
dec
sbb
mov
leave
sahf
sub
and
jle
gs
or
sbb
jg
add
sahf
jo
push
das
scas
add
mov
or
shl
in
pushf
pop
mov
pusha
mov
iret
jle
iret
ret
mov
(bad)
sub
hlt
jb
ins
sahf
rcl
sahf
lea
outs
das
mov
push
dec
les
xor
lea
aas
and
jae
jae
push
fnstsw
(bad)
fnstsw
sub
out
push
adc
cmp
cmp
in
dec
jmp
out
(bad)
loope
mov
sub
outs
pop
rcl
rol
adc
pop
dec
dec
mov
inc
xchg
(bad)
jbe
icebp
(bad)
mov
aaa
jle
pop
ret
xchg
mov
xchg
sub
mov
cmp
out
(bad)
shr
loop
mov
mov
sbb
sbb
or
stc
jmp
mov
and
stos
test
out
nop
je
pop
mov
mov
ja
and
push
mov
fwait
cmps
push
xchg
loopne
shl
jmp
add
sar
sti
mov
adc
imul
in
mov
ret
sub
adc
aad
mov
push
dec
outs
push
loop
fwait
lahf
pop
dec
or
loop
mov
push
inc
dec
clc
mov
xor
push
dec
dec
sbb
jecxz
inc
inc
daa
loop
sar
int3
mov
stos
imul
and
mov
call
cmp
pop
adc
(bad)
outs
addr16
inc
dec
(bad)
test
loope
adc
mov
mov
cmp
scas
push
aaa
inc
mov
jbe
pusha
cmps
mov
int3
int3
or
aad
ds
or
pop
loop
into
or
or
pop
mov
packssdw
stc
rol
(bad)
in
retf
mov
and
ffree
push
ja
xor
mov
cdq
cmp
stc
mov
or
jp
rol
push
cmps
mov
shl
sub
ins
daa
xchg
shl
jl
(bad)
cmc
loopne
xor
mov
lea
out
sbb
popf
mov
mov
out
aaa
imul
or
and
jecxz
push
sub
push
jl
dec
pop
jnp
dec
cld
add
neg
or
xchg
out
ins
into
sub
xchg
and
ret
loop
inc
mov
das
xchg
aaa
add
ret
adc
mov
fcomp
sbb
jae
arpl
pop
inc
jnp
xor
mov
in
les
xchg
xor
mov
xchg
mov
cmp
rcr
jge
and
int
or
dec
int
shl
mov
daa
add
inc
popa
push
aaa
sbb
test
rcl
rcl
outs
jmp
xor
add
push
adc
fcomp
xchg
sbb
adc
xchg
cmps
pop
in
dec
pop
scas
mov
jo
xchg
sti
imul
pop
(bad)
jl
loop
and
ret
mov
cmps
sub
cli
xor
or
xchg
jl
or
stos
inc
sbb
xchg
bound
jmp
adc
xor
je
or
ins
or
ret
in
mov
dec
inc
out
out
fimul
inc
dec
outs
jp
add
mov
(bad)
repz
cmp
jp
pop
or
adc
call
push
pop
mov
retf
ror
ins
and
mov
fmulp
jecxz
in
mov
inc
jns
jmp
hlt
imul
xlat
mov
sbb
xchg
dec
jnp
push
lock
mov
jb
je
dec
inc
and
sub
xchg
xor
cmps
retf
xchg
loop
mov
outs
inc
mov
mov
cmp
mov
pop
xor
ret
and
jnp
jo
(bad)
(bad)
sbb
adc
adc
push
push
inc
aaa
in
push
mov
(bad)
sti
(bad)
inc
(bad)
xchg
xor
pushf
out
fsub
pop
xor
mov
cdq
fadd
push
repz
push
mov
scas
mov
sbb
stos
(bad)
ins
ja
inc
cld
jmp
and
and
dec
js
int
xchg
hlt
or
aam
mov
pop
jo
dec
ret
push
xchg
jns
mov
sbb
sti
mov
push
je
mov
movs
jae
xchg
imul
inc
arpl
(bad)
scas
dec
aas
leave
inc
jge
jle
addr16
rcr
mov
sub
inc
cld
in
(bad)
jge
xchg
cmp
mov
ss
sbb
dec
sbb
and
mov
test
push
lea
xchg
mul
out
ret
iret
(bad)
test
std
push
enter
das
adc
inc
ds
mov
sub
cld
add
pop
ins
mov
loopne
xlat
cmp
ds
aam
xor
les
js
adc
inc
lods
fdivp
inc
rcr
ret
xchg
aad
scas
push
outs
leave
les
mov
aad
outs
jmp
jbe
mov
sbb
mov
sbb
push
xchg
in
cmps
xor
out
sbb
je
dec
pushf
repnz
stc
add
leave
leave
sti
mov
jbe
sbb
jecxz
data16
mov
cmp
out
les
pop
or
(bad)
or
loop
xchg
div
adc
clc
int3
jg
or
pop
aaa
add
fstp
dec
inc
cdq
(bad)
xchg
out
xchg
sub
(bad)
sar
cdq
lea
and
imul
pop
add
in
and
dec
mov
movs
cmp
bndldx
xor
adc
xchg
pushf
fld
mov
inc
dec
pop
xchg
mul
mov
inc
stos
adc
fild
aas
inc
or
push
mov
cmc
xchg
pusha
retf
retf
xchg
pop
inc
das
xor
jne
rcr
adc
push
mov
out
inc
(bad)
aas
ret
sbb
cmp
jge
mov
jecxz
xchg
cld
jne
das
aad
dec
mov
test
ds
lock
inc
(bad)
je
dec
call
out
test
stos
outs
cmps
mov
and
sbb
das
clc
jmp
jg
dec
xchg
call
retf
es
sub
fst
add
and
sbb
leave
dec
dec
test
jnp
add
inc
cmp
pop
xor
rcl
xor
stos
push
cmp
mov
inc
or
jae
mov
enter
(bad)
mov
jns
pusha
jmp
add
lds
stos
or
mov
nop
cmps
hlt
mov
sub
sub
push
shl
mul
pop
adc
mov
sub
pop
jb
rcr
in
adc
movs
sub
fld
xchg
sbb
add
inc
jg
mov
in
mov
int3
pop
cs
int3
inc
cwde
test
and
mov
clc
lds
sbb
and
loope
ss
mov
mov
push
cli
ror
rcl
mov
loop
jnp
pop
rol
pop
bound
icebp
fs
ins
(bad)
shl
add
adc
add
push
and
cmp
jo
leave
mov
icebp
xor
or
cwde
cmp
repz
pop
js
enter
dec
gs
adc
jmp
push
mov
ret
and
pusha
aas
sar
sbb
movs
and
ja
xchg
cld
int3
inc
sbb
pop
mov
and
icebp
mov
fdivrp
sub
xchg
xchg
dec
stos
inc
adc
xchg
inc
add
jge
sbb
jmp
xlat
sti
outs
fidiv
sar
dec
cmp
popa
mov
(bad)
push
mov
shr
mov
(bad)
sbb
mov
cmp
xchg
adc
loop
clc
nop
fbld
dec
jmp
retf
dec
mov
sub
jecxz
and
adc
pop
test
je
ret
sub
imul
sub
jb
and
sbb
xchg
sbb
inc
xor
sahf
jno
into
sbb
xchg
out
mov
push
adc
repnz
adc
jp
jne
adc
pminsw
mov
push
xlat
dec
in
pop
cdq
pop
mov
jb
add
jmp
mov
fidivr
hlt
dec
mov
pop
mov
dec
push
leave
sub
icebp
cs
lock
inc
shr
aam
jno
pop
mov
ss
push
clc
test
movs
loope
push
xchg
jge
aas
inc
rcr
xlat
xchg
mul
mov
ins
test
add
jbe
mov
xor
ror
clc
xchg
imul
pop
mov
dec
push
stos
loopne
popf
dec
jecxz
iret
and
jb
ret
or
or
sti
or
not
fs
xchg
das
lods
js
es
inc
inc
push
push
mov
fs
xchg
(bad)
mov
pop
jnp
stos
push
push
mov
cmp
pop
jno
sub
pop
adc
pop
and
shl
cmc
test
and
cmp
pop
push
xor
js
test
ins
adc
and
mov
push
mov
mov
jg
shl
stos
jne
adc
int3
and
mov
gs
rol
(bad)
fcomp
test
or
sbb
mov
cmp
out
popa
addr16
pop
and
xlat
mov
mov
or
mov
nop
add
nop
mov
test
mov
xchg
cdq
or
mov
mov
inc
test
mov
push
push
adc
xlat
ja
sti
test
lods
push
retf
ins
mov
pop
push
mov
popa
aad
into
dec
jno
mov
stos
ret
jecxz
add
mov
fadd
sub
and
jecxz
mov
lods
sar
inc
cs
stc
sub
xor
and
dec
js
cmp
imul
add
and
test
mov
cmp
sar
sbb
adc
mov
adc
out
jo
sub
sahf
jns
in
and
sar
(bad)
xlat
push
retf
push
and
jns
add
add
popf
pushf
imul
jns
pop
(bad)
(bad)
ffree
xchg
lods
and
das
cmps
xor
pop
pop
in
dec
add
xor
(bad)
xchg
out
mov
pop
test
jmp
and
mov
and
test
xchg
cmps
in
in
dec
jo
pop
mov
out
xchg
or
(bad)
loope
popf
xor
aas
ror
scas
cwde
popf
sbb
mov
ins
xor
ins
xadd
sub
cmp
lock
daa
adc
cmp
lds
fdiv
rcr
js
ins
call
fst
mov
adc
(bad)
sbb
mov
scas
mov
push
stc
out
mov
mov
cmp
sub
inc
push
and
sbb
retf
scas
push
dec
lds
cmp
neg
mov
aad
mov
dec
xchg
in
or
fldenv
add
cs
sbb
lock
cmp
(bad)
call
mov
mov
sbb
cmp
mov
xor
xchg
test
call
in
jmp
pop
adc
push
mov
sbb
lods
cs
dec
mov
mov
popa
push
out
in
and
and
fstp
setle
fstp
inc
lds
cmp
test
mov
rol
cmps
cmp
pop
(bad)
neg
test
fs
ret
or
adc
cli
gs
mov
test
lods
push
iret
stc
and
inc
mov
loope
mov
pop
pop
movs
dec
test
push
jmp
xchg
cmps
not
xor
xchg
and
mov
repnz
mov
and
mov
cmp
push
ret
bndldx
fwait
punpckhbw
push
mov
popf
fldenv
cmp
retf
aam
dec
mov
inc
fs
or
ds
cmp
add
test
fchs
(bad)
inc
push
lods
sub
pop
dec
or
cmps
xchg
push
mov
es
popf
outs
or
adc
cmc
or
cmp
std
add
(bad)
adc
pop
outs
push
xor
not
inc
inc
test
lods
xor
scas
sbb
xchg
ror
and
pop
mov
aad
pushf
pusha
movs
add
fsubr
lahf
dec
hlt
ja
sub
mov
xchg
xchg
sub
sbb
aad
out
add
sti
int
dec
fdivr
lods
ret
mul
test
jns
mov
mov
xor
xchg
mov
add
jno
cmp
cmps
test
mul
xchg
nop
retf
movs
sbb
retf
mov
test
ret
cwde
sub
pop
jle
jns
add
(bad)
fwait
cld
inc
scas
int3
out
call
js
test
cmp
sbb
mov
test
lock
call
mov
daa
ins
add
inc
and
mov
hlt
xchg
mov
stc
jecxz
dec
leave
iret
ficomp
dec
inc
pop
dec
sahf
mov
sub
jns
cmp
sbb
repnz
ss
lods
addr16
push
iret
test
cwde
mov
dec
sar
mov
stos
rcl
adc
cmp
mov
push
aam
mov
inc
or
fwait
cmp
scas
cmp
push
fadd
(bad)
in
mul
scas
mov
push
repz
es
fidiv
pop
xor
pop
and
fnstenv
mov
jl
sbb
into
mov
cmp
int3
daa
lock
jle
cmp
int3
xchg
push
cdq
cmp
xchg
sbb
test
aaa
mov
jp
xrelease
or
rcl
mov
push
xlat
fdivr
test
push
and
int3
icebp
xchg
cmp
(bad)
jg
push
push
mov
inc
inc
xor
adc
push
jge
jmp
add
lds
mov
dec
loopne
(bad)
jno
jecxz
out
ret
push
push
adc
rcr
mov
iret
and
push
pop
pop
(bad)
retf
sub
pop
cld
test
push
dec
inc
ins
lods
mov
and
cmc
mov
repz
adc
dec
into
jg
sbb
data16
popa
in
xchg
ss
bound
sub
xor
fistp
(bad)
xor
add
adc
sti
pushf
cld
adc
and
xchg
mov
cmp
xlat
nop
movs
sti
sub
add
or
or
(bad)
dec
inc
sub
out
retf
call
mov
jecxz
or
imul
mov
push
loope
movs
out
in
ret
pushf
cwde
stos
add
nop
loop
xchg
jno
dec
xlat
daa
fucomp
inc
scas
pushf
(bad)
push
pop
lds
xchg
lea
push
mov
in
inc
lock
rcr
or
imul
mov
mov
retf
cs
addr16
(bad)
out
or
push
inc
test
mov
xor
arpl
scas
outs
lea
inc
arpl
fisub
cmp
pop
sub
js
popa
data16
push
xchg
pop
and
out
enter
xchg
test
lds
push
pop
inc
mov
lods
push
retf
out
cmp
xor
mov
lea
fild
ret
mov
popf
call
mov
push
out
loopne
fcomp
(bad)
outs
movs
mov
dec
pop
faddp
mov
or
clc
loope
cmc
xchg
enter
sbb
movs
stos
xchg
push
stc
shr
clc
jmp
outs
adc
scas
rol
into
shl
mov
lock
imul
dec
sbb
mov
iret
sbb
xchg
push
xchg
cmc
jb
popf
inc
pop
dec
out
xlat
stos
push
mov
add
mov
pop
call
iret
(bad)
call
xor
or
and
popf
call
adc
aas
push
pop
ins
jae
jg
xchg
hlt
mov
fstp
push
popf
lods
lods
ret
jbe
push
jne
xor
and
lock
jecxz
dec
cmp
xchg
sub
cdq
retf
mov
jp
(bad)
in
mov
call
inc
xor
push
fsubr
icebp
xor
(bad)
sti
aas
mov
inc
adc
rcl
in
xlat
dec
movs
ja
dec
or
dec
out
xchg
mov
xor
sbb
sbb
xor
dec
and
enter
lods
neg
cmp
fisubr
icebp
stos
test
inc
test
mov
xchg
nop
mov
add
cmp
pop
inc
jle
out
ret
push
inc
and
sbb
jns
adc
lods
pop
cmp
imul
lods
mov
les
icebp
test
movs
inc
loope
pop
add
and
fs
out
adc
cmp
(bad)
and
mov
sbb
aas
push
and
imul
inc
and
movmskps
jbe
call
push
nop
inc
enter
sbb
std
test
dec
fistp
outs
cli
test
in
mov
jo
push
sti
mov
mov
movs
or
xchg
pushf
or
fist
test
add
(bad)
sti
jl
or
mov
inc
mov
sete
dec
jne
or
mov
das
cmp
push
adc
popf
cwde
push
mov
test
pop
or
and
sub
fild
(bad)
fidivr
retf
cmc
dec
jae
add
mov
or
adc
popf
pop
pop
or
icebp
add
test
adc
into
rcl
adc
lds
fisttp
lock
mov
daa
xchg
mov
and
cmc
sbb
aad
xor
pop
mov
cmp
icebp
push
mov
pop
push
arpl
adc
pusha
ret
mov
stos
test
jb
jmp
in
jp
fs
rcl
imul
push
sbb
push
mov
inc
dec
dec
sbb
dec
in
xor
jb
cmps
cmp
xor
cs
mov
push
call
mov
cs
icebp
or
sub
mov
mov
xlat
movs
mov
jge
adc
clc
ret
pop
or
xor
jge
push
or
mov
pop
mov
ins
mov
adc
(bad)
mov
ins
push
cli
fist
push
std
jle
jp
in
out
fs
pop
dec
sub
loop
xor
in
mov
(bad)
sub
push
fstp
and
arpl
(bad)
mov
imul
fmul
xor
dec
push
out
jno
dec
jecxz
call
xchg
xchg
ret
inc
jbe
push
jmp
mov
fild
pop
icebp
les
mov
and
mov
fisubr
pop
xor
or
(bad)
jle
bound
add
in
sub
out
jp
and
sar
addr16
shl
test
popa
maxps
push
jb
sahf
xchg
stos
sub
xor
(bad)
pop
cmc
cs
pop
push
ret
pop
mov
push
aad
and
ret
mov
mov
xchg
pop
ror
repz
or
adc
(bad)
stos
sbb
jmp
xchg
ret
ret
js
int
mov
aam
adc
clc
mov
mov
sti
push
fcmove
inc
jbe
cmp
adc
add
or
es
adc
add
test
cmp
push
mov
mov
add
xor
int
aaa
fistp
test
icebp
aam
dec
sub
xchg
rol
fimul
jg
xchg
sar
cmps
and
sar
fnstenv
and
xchg
repz
or
loope
pop
mov
pop
mov
das
cmps
mov
bnd
aam
add
aam
mov
icebp
jmp
shl
dec
scas
dec
mov
stc
jmp
jmp
and
dec
stc
xchg
fwait
data16
call
test
cs
das
ffreep
inc
sar
mov
lock
retf
add
sub
out
iret
in
adc
inc
ja
inc
push
rcl
ss
sar
(bad)
mov
add
xchg
popf
mov
mov
fcomp
in
or
pop
sahf
es
push
or
jae
dec
xchg
mov
loop
cmps
shl
mov
rcl
loopne
push
or
push
push
loopne
push
(bad)
push
inc
arpl
xchg
mov
or
clc
das
rcr
sub
std
xchg
movs
stc
add
es
ins
fild
and
mov
dec
xchg
out
popa
inc
mov
xchg
call
xor
fisttp
pop
jne
push
cmp
jo
or
or
cmp
outs
jmp
inc
pop
adc
add
js
cli
xchg
arpl
push
fsubr
aas
out
inc
sub
out
and
cmp
and
div
sub
xor
into
cmps
das
mov
cmp
je
jae
xchg
mov
xor
sub
push
ficom
or
and
adc
mov
call
call
push
call
lock
push
jns
xlat
retf
jp
call
adc
cmp
xchg
scas
lods
retf
pop
aam
out
push
sar
sbb
mov
scas
test
aam
and
les
mov
(bad)
sbb
(bad)
xchg
mov
lock
loope
in
and
mov
fmul
xor
xchg
cmp
mul
loopne
cdq
imul
or
daa
xlat
mov
out
rol
mov
hlt
fs
in
sub
fsub
inc
add
iret
mov
dec
sti
repnz
lea
xlat
jmp
js
fcmovnu
(bad)
pop
out
fld
test
cs
lds
mov
xchg
iret
mov
ret
mov
into
pop
retf
mov
les
in
es
fld
inc
inc
add
je
clc
ret
push
pop
rcr
stc
sbb
and
jnp
mov
sbb
mov
mov
retf
jns
jne
jp
sub
mov
cmps
xor
mov
out
ins
cmp
je
add
add
(bad)
clc
sbb
les
inc
dec
(bad)
sti
pop
xchg
pushf
pop
(bad)
cmp
hlt
pusha
xchg
mov
sub
movs
mov
ficom
fst
dec
sbb
ret
inc
dec
dec
xor
ins
mov
lds
aam
add
in
sub
lods
adc
aad
cld
int3
cs
imul
je
repz
repz
out
jmp
jecxz
js
dec
xchg
mov
sti
ja
cmp
hlt
call
sub
inc
into
pop
scas
sbb
pop
jb
mov
cmp
add
xchg
add
je
das
mov
xor
ins
xor
xlat
jecxz
mov
icebp
jl
adc
sub
fsub
adc
sbb
loop
xor
inc
push
ret
neg
fucomp
sar
cmc
rcr
mov
xchg
rcr
cmp
or
scas
pop
in
pop
fistp
xchg
cmp
mov
push
loopne
(bad)
cld
cmp
dec
pop
push
sub
xor
addr16
das
loopne
mov
add
mov
scas
push
mov
cmps
add
pop
mov
jecxz
ss
movs
and
pop
aad
aaa
loopne
ins
mov
jae
sbb
or
push
adc
pop
ret
adc
movs
push
out
pop
movs
xor
cmp
mov
in
cmp
mov
hlt
cmp
out
ret
sbb
cmp
xor
cmp
cmp
sub
mov
jle
inc
(bad)
scas
mov
shl
adc
push
cmp
ins
jmp
and
pusha
int
jae
ficomp
arpl
cld
add
scas
lahf
shl
pusha
pop
adc
cvtpi2ps
add
xor
or
outs
fisubr
outs
shl
adc
(bad)
mov
pop
jmp
xor
iret
outs
jg
dec
mov
dec
mov
out
jge
call
jge
sbb
add
es
leave
and
or
data16
pop
call
rcr
stos
popf
(bad)
jp
loop
loop
cmp
lods
mov
ret
mov
sbb
in
xchg
aam
pop
fiadd
jg
jno
push
jb
and
mov
lds
cmp
jns
and
lods
jmp
lods
mov
pop
mov
xchg
lods
sub
outs
jne
ficomp
cmp
fwait
dec
pop
mov
and
retf
ror
jecxz
ja
test
mov
(bad)
(bad)
in
mov
cs
jae
xor
jns
sbb
jp
sar
dec
lea
cmp
pop
cdq
call
add
pop
scas
xchg
(bad)
xchg
xor
scas
push
push
pop
jb
cwde
loop
inc
fs
ins
in
int
add
jp
and
xchg
(bad)
fst
push
push
jae
aad
pop
add
out
inc
outs
leave
int3
aaa
push
mov
jnp
(bad)
jmp
adc
xchg
add
ficomp
pop
mov
xchg
push
cmp
xchg
xor
enter
imul
cmc
aas
idiv
or
mov
jge
cmps
repz
sbb
xchg
cmp
test
inc
outs
and
mov
sbb
cmp
sbb
cmps
jnp
(bad)
data16
mov
push
mov
mov
mov
dec
sbb
es
cmp
mov
in
mov
aaa
pusha
sahf
loopne
jmp
mov
cli
adc
in
movs
leave
lahf
sub
mov
ins
jbe
mov
adc
repz
nop
rcl
pusha
in
fidivr
pop
jb
mov
test
mov
xor
jae
retf
loopne
push
jg
or
dec
unpckhps
icebp
dec
or
or
dec
jmp
pop
xor
iret
mov
sbb
cmp
ret
nop
imul
je
jno
call
movs
jnp
mov
pop
fwait
lds
dec
cld
mov
sbb
and
xor
cmps
xor
add
arpl
(bad)
fwait
in
jbe
push
mov
xor
stos
imul
shr
arpl
cwde
movs
mov
xor
js
xchg
shl
call
mov
mov
add
stos
lods
iret
retf
push
aad
iret
add
pop
in
adc
push
cmps
popa
fcmovnbe
mov
popa
mov
test
mov
sbb
int3
(bad)
inc
or
mov
xor
cmp
outs
cmp
adc
add
cmps
mov
clc
cmp
lods
push
inc
fcmovbe
into
xchg
mov
mov
lods
and
cs
fld
mov
dec
dec
sub
cdq
adc
fdiv
ret
sbb
aaa
mov
ret
icebp
dec
retf
inc
xchg
mov
mov
mov
mov
adc
xchg
xor
inc
fmul
ret
and
(bad)
mov
or
clc
sub
ret
je
pop
dec
arpl
lea
jne
ficomp
inc
sub
pop
inc
adc
inc
jl
popa
push
push
push
pop
or
inc
inc
sti
ins
adc
test
jnp
adc
faddp
imul
div
sbb
and
mov
push
fdivrp
shr
add
es
into
pop
push
pusha
add
and
(bad)
mov
jecxz
jecxz
outs
adc
leave
sti
push
dec
cmp
outs
pop
loop
(bad)
gs
mov
addr16
jns
jmp
ins
jmp
adc
mov
sti
mul
inc
sbb
sub
test
nop
xor
rcr
out
in
push
lahf
xchg
sub
jecxz
and
push
scas
xchg
pusha
xor
mov
sub
mov
or
jo
ror
ficom
in
neg
idiv
adc
push
sti
scas
imul
sbb
cld
sub
jl
test
inc
xchg
sti
scas
add
bound
xlat
ficomp
into
cmp
pop
xchg
or
mov
inc
lods
imul
out
cmps
cmp
inc
dec
scas
daa
inc
dec
ja
gs
xor
in
sbb
inc
in
dec
adc
rcl
mov
add
sub
jge
dec
test
test
add
(bad)
mov
and
sar
push
jbe
rcr
push
repz
movs
pusha
or
dec
or
mov
mov
ins
inc
mov
scas
outs
mov
sbb
xchg
repz
stos
jl
movs
dec
call
ret
movs
xchg
lea
call
cmps
cmps
jmp
xchg
in
push
jae
mov
jae
fldcw
push
xchg
cmp
movs
das
idiv
jmp
mov
mov
sbb
inc
or
movs
inc
mov
pushf
js
push
or
jge
push
popa
mov
lock
(bad)
aam
les
push
(bad)
jb
pop
pushw
mov
jg
xor
popa
imul
xchg
inc
jo
arpl
xlat
iret
retf
mov
pop
push
cmp
pop
repz
sahf
jge
bound
(bad)
lods
xchg
hlt
fdiv
in
out
pop
stos
xchg
adc
loop
dec
or
and
pop
adc
push
cmc
sbb
push
mov
jmp
dec
scas
add
aas
push
imul
mov
adc
xor
sbb
mov
lock
ja
clc
add
mov
outs
dec
cmc
sbb
pushf
mov
push
mov
or
adc
jg
mov
push
ja
ja
mov
mov
mov
add
into
add
and
add
mov
jp
stos
push
jmp
xor
sub
scas
sub
pop
jmp
sub
mov
jge
mov
call
xor
sub
stc
push
mov
xor
sub
loopne
jg
scas
push
out
pop
add
inc
push
dec
inc
add
add
add
add
adc
add
jbe
xor
xor
add
add
add
sub
add
inc
enter
push
je
imul
add
xor
add
and
add
aaa
add
adc
add
and
dec
inc
add
add
aaa
add
cmp
ins
outs
bound
add
add
add
add
add
push
aad
cld
or
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
adc
add
sub
add
or
add
or
add
add
lods
mov
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
imul
add
add
add
jge
add
adc
lea
add
jge
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
sub
add
push
add
add
imul
add
add
add
inc
add
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
adc
call
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
add
add
or
dec
add
add
push
add
add
add
push
add
add
add
push
add
push
add
inc
add
add
add
push
add
imul
add
add
add
add
add
push
add
push
add
pop
pop
add
gs
add
or
add
add
add
or
pop
add
gs
add
push
add
pop
add
or
out
add
push
add
inc
add
push
add
xor
add
add
add
or
add
add
add
scas
pop
add
push
add
add
add
add
add
add
add
add
add
add
or
add
add
push
add
mov
add
mov
add
add
add
add
add
add
add
add
add
push
add
mov
add
add
push
add
mov
add
add
push
add
lea
add
add
add
push
add
lea
add
add
lea
add
add
lea
add
add
lea
add
add
push
add
lea
add
add
push
add
lea
add
add
push
add
mov
add
mov
add
add
mov
add
add
add
add
mov
add
add
add
add
add
adc
dec
mov
add
add
add
add
mov
add
mov
add
add
mov
add
mov
add
add
pop
add
add
push
add
add
fld
add
push
add
add
add
add
pop
add
add
push
add
pop
add
add
push
add
add
mov
add
add
add
imul
add
add
add
inc
add
push
add
add
or
cdq
nop
add
push
add
add
add
nop
add
or
or
add
push
add
add
imul
add
add
add
imul
add
add
add
add
add
xchg
add
push
add
add
add
xchg
add
gs
add
or
push
xchg
add
push
add
adc
xchg
xchg
add
fld
add
push
add
xchg
add
imul
add
add
xchg
add
imul
add
add
xchg
add
gs
add
push
add
xchg
add
push
add
add
mov
add
add
add
push
add
mov
add
add
xchg
add
aam
add
sbb
hlt
xchg
add
imul
add
add
xchg
add
push
xchg
add
push
add
add
imul
add
add
add
push
add
xchg
xchg
add
mov
add
cwde
add
sub
cmc
fwait
add
imul
add
add
add
add
add
add
add
add
ret
add
add
add
push
add
les
add
add
push
add
lds
add
add
push
add
lds
add
add
push
add
add
inc
add
add
add
add
inc
add
add
add
lds
add
add
push
add
lds
add
add
push
add
add
imul
add
add
add
add
add
push
add
add
fld
add
push
add
add
fld
add
push
add
add
add
add
add
add
add
mov
lods
add
add
add
mov
fld
add
push
add
mov
add
add
mov
add
add
mov
add
add
add
lods
add
add
add
add
sub
add
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
not
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
xchg
add
add
add
popf
add
add
adc
add
mov
add
add
add
add
add
xchg
add
ficom
add
add
add
push
nop
add
push
xchg
add
add
jge
add
xchg
add
add
add
popf
add
add
add
add
add
add
std
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
popf
add
mov
add
xchg
add
add
add
add
mov
add
cwde
add
add
add
popf
add
add
add
cwde
add
add
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
cwde
add
add
add
add
add
add
cwde
add
add
add
add
add
add
cdq
add
add
add
add
add
add
cdq
add
add
add
add
add
add
call
add
add
add
add
add
add
cmp
and
add
add
call
add
add
add
fwait
add
add
add
add
add
add
fwait
add
add
add
in
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
in
add
add
add
popf
add
add
add
in
add
cmp
add
add
mov
add
in
add
add
add
popf
add
add
add
in
add
add
add
add
and
add
add
add
add
add
add
jo
add
add
add
in
add
dec
add
add
add
add
add
add
dec
add
add
add
lahf
add
add
add
in
add
push
add
add
add
add
add
add
in
add
push
add
add
add
add
add
add
add
add
add
lahf
add
add
add
in
add
pop
add
add
add
add
add
add
in
add
popa
add
add
add
add
add
add
add
add
add
mov
add
in
add
imul
and
add
in
add
ins
add
add
add
add
add
add
in
add
jno
add
add
mov
add
add
add
jne
add
add
pop
mov
add
in
add
add
add
add
add
add
add
in
add
jge
add
add
pushf
mov
add
in
add
add
jmp
add
add
add
test
add
add
xor
add
add
add
mov
add
add
call
add
add
add
pop
add
add
xor
add
add
add
add
add
add
add
add
add
xchg
add
add
add
movs
add
add
add
in
add
fwait
add
add
add
add
add
add
in
add
mov
add
add
in
add
movs
add
add
add
movs
add
add
add
in
add
test
add
add
cmps
add
add
add
in
add
lods
add
add
add
add
add
add
add
add
add
cmps
add
add
add
in
add
mov
add
add
sbb
add
in
add
mov
add
add
add
add
in
add
mov
add
add
add
add
rol
add
add
test
add
add
add
add
les
add
add
dec
test
add
add
add
add
enter
add
retf
test
add
add
add
add
add
add
add
add
add
add
in
add
rol
add
add
retf
test
add
in
add
xlat
add
add
add
add
add
add
in
add
fadd
add
add
xchg
stos
add
add
add
in
add
loopne
add
add
inc
stos
add
add
add
in
add
out
add
add
(bad)
stos
add
add
add
in
add
jmp
add
add
adc
add
add
out
add
add
add
add
add
add
in
add
repz
add
add
add
add
add
test
cmc
lods
add
add
add
in
add
add
add
add
add
add
add
in
add
inc
add
add
mov
add
in
add
add
add
add
fldcw
add
in
add
pop
add
add
add
add
add
add
in
add
or
add
add
outs
scas
add
add
add
in
add
lar
add
add
add
in
add
adc
add
add
pop
scas
add
add
add
in
add
pop
add
add
add
add
add
add
in
add
add
add
add
add
add
add
pop
add
add
add
scas
add
add
add
in
add
and
add
add
ss
add
add
add
add
daa
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
(bad)
mov
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
dec
mov
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
in
add
add
stos
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
mov
add
in
add
add
add
add
add
add
in
add
add
add
mov
add
in
add
add
ud1
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
mov
add
in
add
add
add
mov
add
in
add
add
add
add
add
add
add
add
mov
add
in
add
add
add
mov
add
in
add
add
outs
mov
add
in
add
add
add
add
in
add
add
add
mov
add
in
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
mov
add
in
add
add
add
mov
add
in
add
add
add
add
add
add
add
sar
add
in
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
mov
add
in
add
add
add
mov
add
in
add
add
add
add
add
add
add
add
mov
add
in
add
add
sbb
add
add
add
in
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
rol
add
add
in
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
rol
add
add
in
add
add
add
ret
add
add
add
adc
jg
add
add
add
add
adc
cli
lds
add
add
add
mov
add
add
add
add
add
add
add
add
(bad)
(bad)
jg
add
add
(bad)
mov
add
add
(bad)
(bad)
jg
add
add
(bad)
mov
add
add
(bad)
(bad)
jg
nop
add
std
(bad)
mov
add
add
(bad)
(bad)
jg
xchg
add
std
(bad)
mov
add
add
(bad)
(bad)
jg
xchg
add
std
(bad)
mov
add
add
add
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
mov
add
add
add
jecxz
add
add
add
add
mov
add
add
mov
add
add
sbb
add
add
repnz
add
add
test
add
nop
add
jp
xor
xor
xor
ss
add
in
xor
ss
add
call
xchg
add
in
add
add
nop
add
lock
add
xchg
add
mov
xchg
add
ret
add
add
xchg
add
retf
add
add
xchg
add
aam
xor
sbb
add
fadd
add
add
push
add
add
pop
add
add
ja
xor
ss
add
in
xor
popa
xchg
add
in
xor
ss
add
call
nop
add
cdq
push
add
in
add
test
xchg
add
call
xchg
add
icebp
or
add
xchg
add
test
add
jp
add
jmp
add
xchg
add
sbb
adc
in
add
sbb
xchg
add
add
add
cld
xchg
add
push
or
add
or
add
or
add
xchg
add
or
add
cs
add
push
or
add
add
push
or
add
add
or
add
pusha
xchg
add
or
add
pusha
xchg
add
push
or
add
add
push
or
add
add
or
add
nop
xchg
add
adc
add
test
or
add
xchg
add
push
or
add
xchg
add
sbb
add
ret
add
or
add
xchg
add
sbb
adc
jmp
add
xchg
add
lock
add
add
and
adc
dec
xchg
add
imul
jmp
add
add
in
xor
xor
adc
push
nop
add
pop
or
add
imul
add
adc
add
adc
add
popf
add
mov
adc
push
popf
add
iret
adc
add
adc
icebp
popf
add
add
adc
ds
add
sbb
adc
mov
adc
aad
add
dec
adc
add
lahf
add
pop
adc
add
add
jo
adc
mov
adc
add
mov
adc
push
mov
adc
mov
adc
add
mov
adc
cmp
add
(bad)
adc
add
adc
add
mov
adc
push
mov
adc
push
add
data16
add
adc
add
mov
adc
dec
mov
adc
push
adc
add
adc
add
movs
add
call
movs
add
push
adc
add
adc
add
movs
add
xor
adc
add
adc
push
adc
add
adc
add
cmps
add
test
adc
dec
cmps
add
popf
adc
add
adc
add
cmps
add
(bad)
adc
add
add
loope
adc
and
add
sbb
add
test
add
adc
add
add
inc
adc
add
adc
add
test
add
adc
(bad)
test
add
adc
arpl
adc
jle
add
xchg
add
test
adc
std
test
adc
bound
adc
scas
stos
add
int
adc
leave
stos
add
fist
add
stos
add
jmp
stos
add
not
add
add
add
stos
add
adc
add
sub
add
inc
adc
add
pop
adc
add
jne
adc
pop
lods
add
(bad)
adc
add
mov
lods
add
mov
adc
cmp
adc
add
out
adc
aam
add
add
scas
add
and
adc
imul
add
push
push
adc
add
adc
dec
mov
add
mov
add
mov
add
mov
add
push
adc
jg
add
fst
adc
retf
add
push
adc
pop
mov
add
mov
add
pop
adc
jg
add
and
adc
in
add
das
pop
adc
xor
adc
jle
add
pusha
pop
adc
retf
add
adc
adc
pop
adc
popa
mov
add
mov
add
mov
add
pop
adc
inc
mov
add
pop
adc
xchg
mov
add
pop
adc
fbstp
adc
sub
adc
js
add
sub
adc
les
adc
adc
adc
pop
mov
add
adc
stos
mov
add
adc
div
adc
inc
mov
adc
(bad)
mov
adc
fdivr
adc
sub
adc
jae
add
(bad)
sbb
add
sbb
add
mov
adc
push
mov
adc
movs
mov
adc
out
mov
adc
cmp
add
pusha
sbb
add
sbb
add
mov
adc
and
add
add
mov
adc
add
sbb
add
add
ficomp
adc
sahf
mov
adc
jmp
add
sbb
adc
push
mov
adc
ins
mov
adc
mov
add
inc
sbb
add
mov
adc
dec
mov
adc
fwait
mov
adc
call
sbb
add
sbb
add
sbb
add
rol
rcr
adc
sbb
add
in
sbb
add
add
cli
sbb
add
sbb
add
rol
push
sbb
add
add
xchg
sbb
lea
add
and
add
add
add
add
add
add
add
xchg
add
add
add
sub
add
add
add
add
sbb
add
add
adc
cld
lea
add
sub
adc
push
nop
add
nop
add
add
add
sbb
add
add
add
add
add
add
inc
add
push
add
das
add
add
push
sbb
add
add
add
add
add
add
xchg
sbb
lea
add
xor
add
add
add
add
or
add
adc
push
xchg
add
and
add
cmp
adc
pop
xchg
add
sub
aas
add
add
adc
push
xchg
add
aaa
add
add
add
add
adc
pop
xchg
add
inc
add
add
inc
add
add
adc
addr16
add
dec
add
add
inc
add
add
adc
dec
xchg
add
push
add
add
dec
add
add
adc
arpl
sbb
add
add
add
add
gs
add
push
add
add
adc
addr16
add
jo
and
sub
add
add
adc
arpl
daa
add
push
add
add
adc
jne
add
add
add
add
add
add
pop
add
add
adc
adc
add
pop
add
add
adc
push
xchg
add
mov
add
add
adc
arpl
xor
adc
add
add
adc
mov
add
add
add
adc
cld
lea
add
push
add
add
or
add
sbb
cmp
sub
add
adc
push
xchg
add
sub
add
add
adc
pop
xchg
add
aaa
add
add
add
adc
arpl
cmp
les
add
add
or
add
push
add
add
add
push
or
add
ins
add
add
add
adc
push
xchg
add
xchg
add
add
add
push
sbb
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
test
add
add
aam
add
stos
add
add
add
add
mov
add
add
xor
add
mov
add
add
inc
add
add
xchg
mov
add
add
add
lea
add
add
aam
add
stos
add
fmul
push
sbb
add
add
add
sbb
xchg
sbb
lea
add
pop
add
add
or
add
pop
add
add
add
push
sbb
add
add
add
js
add
add
xchg
sbb
lea
add
xchg
add
add
add
push
add
add
add
or
add
add
push
or
add
rol
cmp
inc
cdq
add
add
push
or
add
cmc
push
cmp
add
add
or
xchg
add
add
aas
add
add
add
push
or
add
adc
inc
add
test
push
or
xchg
add
pop
pop
inc
add
stos
add
add
push
or
xchg
add
sub
inc
add
add
add
push
add
xchg
add
cmp
dec
add
add
add
push
add
xchg
add
dec
pop
dec
add
mov
add
add
add
add
gs
dec
add
add
add
xchg
add
fadd
push
add
rol
add
push
add
add
sub
fiadd
add
add
add
fld
add
add
add
add
dec
or
call
add
add
add
push
or
mov
add
add
adc
pop
xchg
add
pop
or
cmp
add
add
adc
pop
xchg
add
or
push
call
adc
xchg
add
outs
or
adc
add
add
adc
ins
xchg
add
jns
ins
add
adc
je
add
or
add
lock
add
adc
jnp
add
mov
jae
cwde
repz
add
adc
adc
xor
add
add
sbb
add
add
test
add
add
fmul
jl
cmp
add
add
add
push
nop
add
in
or
int3
std
add
add
xchg
sbb
lea
add
inc
add
add
sbb
lea
add
inc
add
add
sbb
add
add
add
sub
add
add
inc
add
pop
add
cdq
add
and
add
add
add
or
add
dec
aas
add
add
inc
or
add
xor
jg
rol
add
add
addr16
add
dec
or
je
add
add
inc
or
add
push
or
add
add
imul
add
add
imul
add
inc
or
add
jge
add
add
inc
or
add
add
dec
add
and
inc
or
add
arpl
add
push
add
add
inc
or
add
jno
add
push
add
and
inc
or
add
jge
add
push
add
add
inc
or
add
jno
test
jl
add
and
inc
or
add
jge
test
rcl
add
add
push
xchg
add
push
or
add
add
pop
xchg
add
arpl
test
adc
add
add
pop
xchg
add
push
or
add
add
arpl
xchg
enter
add
inc
or
add
jno
xchg
fs
and
inc
or
add
xchg
mov
add
adc
add
jno
mov
js
add
and
inc
or
add
jge
mov
fsub
add
add
int3
xchg
add
push
or
add
add
sbb
mov
call
add
and
mov
aam
add
and
inc
or
add
add
add
inc
or
xchg
add
mov
mov
fsubr
add
add
jne
add
les
mov
shl
add
add
ficom
mov
mov
add
sub
mov
clc
js
add
add
xor
lea
in
jp
add
add
mov
lea
or
add
add
inc
or
xchg
add
fisttp
mov
mov
inc
or
xchg
add
icebp
or
add
add
adc
js
add
and
inc
or
or
add
add
add
xchg
add
dec
nop
add
add
pop
xchg
add
dec
xchg
add
add
add
add
add
dec
xchg
add
add
rcl
xchg
add
xchg
add
add
add
push
xchg
add
dec
cwde
add
add
add
add
pop
xchg
add
dec
call
add
add
add
or
add
add
ins
xchg
add
dec
sahf
add
add
add
add
add
dec
mov
add
add
add
add
dec
mov
add
add
or
add
sub
lahf
add
add
adc
imul
add
add
or
add
inc
or
add
xchg
sbb
lea
add
mov
adc
push
xchg
add
dec
or
add
add
add
add
push
or
add
add
add
add
pop
or
add
add
add
add
or
add
add
add
add
ins
or
add
add
add
add
js
mov
add
adc
pop
xchg
add
or
add
adc
arpl
mov
add
add
add
or
add
mov
add
add
add
add
lahf
or
add
add
add
add
retf
add
adc
ret
xchg
add
mov
mov
adc
cld
lea
add
mov
push
sbb
add
add
add
add
add
add
add
and
mov
push
or
or
add
lds
add
add
or
add
cmp
mov
sbb
lea
add
mov
add
add
mov
retf
add
adc
imul
add
int
add
add
add
add
mov
rol
add
add
add
add
ret
or
add
adc
push
xchg
add
int3
or
add
aad
add
add
add
add
fmul
out
mov
add
add
adc
pop
xchg
add
loopne
jmp
add
add
add
add
jmp
in
add
add
add
add
add
hlt
or
add
fild
add
add
add
or
add
add
add
add
xchg
add
or
add
in
add
add
add
xchg
add
adc
add
add
add
add
sbb
add
add
add
add
and
add
dec
in
add
add
adc
adc
sub
add
add
adc
je
add
xor
repz
add
adc
imul
add
test
add
adc
addr16
add
dec
or
add
test
add
add
push
or
add
clc
add
add
adc
inc
xchg
add
pop
or
add
stc
add
add
adc
push
xchg
add
jno
and
cmp
add
add
add
or
add
add
add
add
mov
or
add
add
add
add
ret
or
add
add
add
add
or
add
add
add
add
xor
pop
adc
adc
addr16
add
fmul
add
pop
add
add
adc
addr16
add
out
cmp
les
add
add
adc
stos
xchg
add
repnz
add
add
add
add
sti
or
add
add
add
add
or
add
add
adc
ins
xchg
add
or
and
adc
mov
or
add
add
adc
rcl
add
add
add
add
add
sub
add
add
adc
imul
add
add
add
adc
push
xchg
add
cmp
pop
add
xor
adc
dec
xchg
add
inc
or
add
add
adc
push
xchg
add
dec
or
add
add
xchg
sbb
lea
add
cmp
add
add
add
add
and
add
adc
arpl
add
adc
pop
xchg
add
inc
or
add
add
adc
xor
add
mov
add
add
adc
aaa
xchg
add
scas
or
cmp
add
add
adc
jl
add
pop
or
add
add
add
or
mov
add
add
add
xchg
add
or
mov
add
add
add
add
ins
or
pop
inc
add
add
adc
sub
add
adc
clc
xchg
add
mov
inc
add
add
adc
call
add
add
add
or
add
add
adc
push
cwde
add
jge
add
dec
add
add
adc
or
or
add
add
adc
adc
add
or
add
add
add
add
mov
dec
add
add
adc
push
xchg
add
xor
add
add
adc
push
xchg
add
cmp
add
dec
add
add
adc
addr16
add
fmul
add
dec
add
add
adc
imul
add
push
add
add
adc
push
nop
add
hlt
or
movs
push
add
add
adc
arpl
add
adc
pop
xchg
add
dec
or
add
add
add
add
push
or
fcom
add
adc
dec
cwde
add
or
add
add
add
add
add
inc
add
add
add
add
adc
or
add
add
add
add
adc
pop
cwde
add
pop
or
ins
pop
add
add
adc
pusha
cwde
add
xchg
add
add
pop
add
add
adc
adc
add
dec
or
adc
add
add
add
add
or
xor
add
adc
outs
cwde
add
nop
or
add
add
adc
pop
xchg
add
dec
or
add
add
adc
pop
xchg
add
mov
pop
add
add
adc
arpl
add
pusha
add
add
adc
push
xchg
add
and
add
add
add
adc
dec
xchg
add
xchg
or
hlt
popa
add
add
adc
push
xchg
add
sub
bound
add
add
add
add
arpl
add
add
add
add
movs
or
add
add
adc
addr16
add
stos
or
add
add
adc
pop
xchg
add
ret
or
add
add
add
adc
push
nop
add
retf
add
add
add
add
add
fmul
add
add
add
adc
imul
add
push
add
add
add
add
ret
or
pop
imul
add
adc
addr16
add
loopne
add
add
add
adc
arpl
add
add
add
add
add
xor
outs
add
add
adc
xor
add
ds
add
add
add
xchg
add
push
or
add
adc
inc
xchg
add
aaa
add
add
jno
add
add
add
add
add
add
add
adc
movs
cwde
add
outs
or
adc
add
adc
pop
xchg
add
add
add
add
add
add
mov
add
add
add
adc
push
xchg
add
mov
ja
add
add
add
add
(bad)
or
add
add
adc
push
nop
add
mov
add
add
add
add
iret
or
add
add
adc
pop
xchg
add
ror
add
jnp
add
add
add
add
out
add
add
add
add
repnz
add
add
add
adc
dec
xchg
add
sti
or
add
add
add
adc
arpl
add
jg
add
add
add
add
push
or
add
add
adc
imul
add
add
add
add
int3
or
clc
add
add
add
add
add
add
add
adc
push
cwde
add
sbb
add
adc
lds
add
adc
or
or
clc
test
add
add
add
add
or
add
add
add
adc
dec
cwde
add
lahf
or
add
adc
outs
cwde
add
dec
add
add
add
add
adc
pop
cwde
add
push
add
add
mov
add
add
add
add
gs
add
mov
add
add
add
cwde
add
js
add
mov
add
add
add
add
lea
add
add
add
xchg
add
cmps
add
add
add
add
add
fmul
add
add
adc
push
xchg
add
mov
add
add
add
add
in
add
add
add
adc
rcl
add
xchg
add
add
adc
pop
xchg
add
jns
add
xchg
add
add
adc
imul
add
nop
add
add
and
cwde
add
add
nop
add
cdq
add
and
pushf
add
add
nop
add
add
and
mov
nop
add
add
and
mov
nop
add
push
outs
add
nop
add
push
jo
inc
lods
add
add
nop
add
jb
xchg
mov
add
add
add
mov
add
add
add
mov
nop
add
call
clc
mov
nop
add
add
and
rol
add
nop
add
add
and
les
add
add
add
enter
add
add
int3
add
add
nop
add
call
adc
add
add
nop
add
call
sbb
add
add
nop
add
fwait
add
and
fld
add
add
add
fadd
add
add
add
loopne
add
add
add
in
add
add
add
call
nop
add
push
nop
add
in
add
add
nop
add
fwait
add
and
icebp
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
mov
pushf
add
ja
xchg
add
add
add
adc
inc
pushf
add
jge
xchg
add
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
pushf
add
xchg
adc
add
add
add
xchg
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
pushf
add
stos
adc
add
add
add
pushf
add
mov
cdq
add
add
add
add
add
add
add
add
add
add
add
pushf
add
lds
call
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
pushf
add
fst
call
add
add
add
in
pushf
add
icebp
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
pushf
add
sti
adc
add
add
add
pop
mov
add
add
add
add
add
add
add
add
add
add
add
pushf
add
adc
mov
add
add
add
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
pushf
add
sub
mov
add
add
add
add
xor
mov
add
add
add
add
add
add
add
add
add
mov
pushf
add
xor
movs
add
repnz
add
adc
movs
sahf
add
inc
adc
add
xchg
sbb
lea
add
add
add
add
add
add
add
mov
pushf
add
push
or
add
adc
lock
add
pop
adc
add
xchg
sbb
lea
add
add
add
add
add
add
add
mov
pushf
add
jno
movs
add
add
add
adc
cmp
adc
add
xchg
sbb
lea
add
add
add
add
add
add
add
mov
pushf
add
cwde
or
add
adc
mov
movs
add
xchg
sbb
lea
add
add
add
add
add
add
add
mov
pushf
add
xchg
adc
add
adc
xlat
lahf
add
cwde
adc
add
add
add
add
add
add
add
add
add
add
add
pushf
add
fisttp
cmps
add
adc
and
add
lods
adc
add
add
add
add
add
add
add
add
add
add
add
pushf
add
rcl
add
repnz
add
adc
jo
add
lds
cmps
add
repnz
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
pushf
add
fcom
cmps
add
repnz
add
adc
mov
adc
add
add
add
add
add
add
add
add
add
add
add
pushf
add
repnz
add
add
add
mov
test
add
add
add
add
add
add
add
add
add
add
add
pushf
add
or
stos
add
add
add
adc
push
mov
lods
add
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
pushf
add
sub
scas
add
repz
add
adc
mov
adc
add
add
add
add
add
add
add
add
add
add
add
pushf
add
inc
adc
add
add
add
mov
mov
pusha
repz
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
pushf
add
pop
adc
add
add
add
mov
mov
js
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
pushf
add
je
mov
test
add
add
adc
test
mov
xchg
repz
add
xchg
sbb
lea
add
add
add
add
add
add
add
mov
pushf
add
nop
adc
add
adc
shl
mov
mov
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
pushf
add
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
fcom
mov
add
add
add
adc
add
add
add
adc
add
adc
iret
mov
mov
add
add
add
add
add
add
add
add
add
add
add
pushf
add
not
mov
add
add
add
add
(bad)
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
adc
rol
hlt
add
add
adc
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
fcom
ret
hlt
add
add
adc
mov
add
loop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
dec
adc
add
adc
sbb
adc
add
adc
movs
add
push
adc
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
ins
adc
add
add
add
add
add
hlt
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
adc
add
hlt
add
add
adc
shl
leave
add
hlt
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
xchg
adc
add
hlt
add
add
adc
sbb
adc
add
hlt
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
fcom
leave
add
adc
push
add
loop
retf
cmc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
mov
cmc
add
add
adc
mov
add
rcl
add
cmc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
aad
int
cmp
add
add
adc
add
int
dec
cmc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
out
adc
add
add
add
adc
dec
cmps
add
cmc
adc
add
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
or
add
add
add
add
rol
test
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
daa
adc
add
add
add
cmps
add
sub
cmc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
daa
adc
add
adc
xor
add
sub
cmc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
fcom
aad
aam
add
add
adc
call
add
cmc
add
add
adc
mov
add
loop
xlat
add
cmc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
cs
add
add
add
adc
sbb
fadd
sbb
add
add
adc
xor
fadd
sub
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
dec
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
daa
adc
add
add
add
add
stos
add
sub
test
add
adc
xor
fld
pushf
test
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
mov
test
add
adc
jl
add
(bad)
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
cs
add
test
add
adc
(bad)
stos
add
ins
add
add
test
add
adc
pop
stos
add
ins
add
add
test
add
adc
das
stos
add
ins
add
add
test
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
dec
adc
add
test
add
adc
add
test
add
adc
add
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
and
add
add
adc
cli
stos
add
or
jmp
pop
test
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
cmp
add
add
adc
inc
lods
add
aas
adc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
push
adc
add
add
adc
nop
lods
add
sahf
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
addr16
add
add
adc
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
adc
add
add
add
lods
add
xor
test
test
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
popf
adc
add
add
adc
jne
add
jbe
cli
add
test
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
cs
add
test
add
lods
add
ins
add
add
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
mov
clc
add
add
adc
or
adc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
fist
add
add
adc
push
scas
add
loope
sti
add
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
cmc
adc
add
add
adc
mov
adc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
adc
std
add
add
add
add
scas
add
sbb
inc
je
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
push
add
add
add
add
scas
add
xor
add
nop
clc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
inc
push
add
pushf
clc
add
add
adc
test
add
lods
clc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
popa
push
add
mov
add
add
scas
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
jns
pop
add
clc
add
add
adc
sbb
push
or
in
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
xchg
adc
add
clc
add
add
adc
push
add
cwde
adc
add
stc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
movs
push
or
or
add
add
adc
mov
add
stos
push
or
sbb
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
mov
stc
add
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
xchg
adc
add
add
add
add
add
cwde
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
mov
stc
add
add
adc
cwde
mov
add
stc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
stc
push
lar
add
add
adc
in
add
call
lar
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
fcom
lar
adc
xor
adc
movs
stc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
adc
add
adc
call
add
stc
add
add
adc
mov
add
or
adc
fdivr
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
cmp
stc
add
add
adc
add
adc
clc
stc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
pop
pop
adc
add
add
add
adc
dec
mov
add
add
adc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
pushf
add
ins
adc
add
add
add
add
add
cli
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
jl
pop
add
add
add
adc
in
add
mov
sbb
dec
cli
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
movs
push
sbb
pop
cli
add
add
adc
xor
add
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
sahf
pop
sbb
je
add
add
adc
jl
add
cmps
pop
push
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
mov
cli
add
add
adc
leave
mov
add
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
mov
add
add
adc
adc
pop
and
mov
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
call
cli
add
add
adc
pusha
mov
add
add
fdivr
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
pushf
add
(bad)
pop
and
add
add
add
sbb
add
cli
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
daa
add
sti
add
add
adc
cli
mov
add
sti
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
fcom
daa
add
sti
add
add
adc
inc
mov
add
adc
add
sti
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
in
or
add
add
add
adc
xchg
mov
add
sub
inc
sti
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
mov
add
add
adc
fbstp
sub
pusha
sti
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
push
sbb
add
add
add
add
add
pop
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
jo
das
add
add
add
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
test
xor
movs
sti
add
add
adc
lds
xor
mov
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
pushf
add
xchg
adc
add
add
add
mov
xor
add
add
add
add
add
add
add
add
add
add
add
pushf
add
movs
push
xor
add
add
add
add
stos
push
ss
sti
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
mov
sti
add
add
adc
stos
mov
cmp
or
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
pushf
add
fcomp
cmp
add
add
add
mov
cmp
add
add
add
add
add
add
add
add
add
add
add
pushf
add
repnz
add
add
add
add
clc
sbb
add
add
add
add
add
add
add
add
add
add
add
pushf
add
daa
adc
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
sbb
aas
add
add
add
adc
fidivr
aas
add
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
add
add
pushf
add
out
adc
add
adc
es
inc
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
xchg
adc
mov
add
add
add
cwde
adc
mov
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
add
mov
add
add
add
int3
cld
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
dec
adc
fdivr
add
add
adc
or
inc
add
cld
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
xchg
adc
hlt
cld
add
add
adc
push
mov
inc
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
daa
adc
add
std
add
add
adc
mov
adc
add
std
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
fcom
inc
add
adc
lock
inc
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
xchg
adc
dec
std
add
add
adc
cmp
add
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
cmps
sbb
fs
add
add
adc
xchg
add
add
add
add
add
add
add
add
add
add
add
add
mov
pushf
add
rcr
add
add
add
mov
dec
add
add
add
add
add
add
add
add
add
add
add
mov
pushf
add
push
add
pushf
std
add
add
adc
and
dec
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
in
sbb
mov
add
add
add
repz
enter
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
or
dec
add
std
add
add
adc
mov
sbb
in
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
add
cld
std
add
add
adc
and
push
add
add
add
adc
cmp
push
add
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
cdq
add
sub
add
add
adc
xchg
push
add
inc
add
add
add
add
add
add
add
add
add
add
add
mov
pushf
add
push
sbb
inc
inc
add
add
add
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
mov
pushf
add
fcom
pop
add
add
add
adc
sbb
adc
jo
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
daa
adc
add
add
add
add
add
sub
inc
add
add
add
add
add
add
add
add
add
add
add
mov
pushf
add
movs
push
pop
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
mov
pushf
add
call
add
add
add
rol
retf
add
inc
add
add
add
add
add
add
add
add
add
add
add
mov
pushf
add
scas
sbb
sar
add
add
adc
push
rol
sbb
popa
add
inc
add
add
add
add
add
add
add
add
add
add
add
mov
pushf
add
ret
add
inc
add
add
add
sbb
clc
inc
add
add
add
add
add
add
add
add
add
add
add
mov
pushf
add
loopne
arpl
add
add
add
adc
call
sbb
adc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
test
arpl
and
add
add
adc
xor
add
lea
add
inc
add
add
add
add
add
add
add
add
add
add
add
mov
pushf
add
ins
adc
cmp
add
add
adc
add
add
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
cmp
add
add
adc
into
rol
aas
adc
add
add
xchg
sbb
lea
add
add
add
add
add
add
add
add
add
mov
pushf
add
daa
adc
add
add
add
add
ret
sub
add
add
ret
and
imul
add
add
ret
das
sbb
add
add
add
and
ret
add
cmp
je
add
add
add
and
ret
add
and
add
add
ret
add
and
jne
test
add
add
xchg
add
ret
add
mov
add
add
add
add
add
add
add
les
add
ja
add
add
add
add
or
add
add
add
sbb
add
add
add
mov
ds
add
push
add
add
xchg
add
mov
mov
and
add
add
sbb
add
add
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
add
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
jp
add
ja
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
icebp
add
add
mov
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
js
add
test
add
inc
push
add
add
int
add
or
fld
test
mov
add
and
and
add
add
add
rol
add
add
and
icebp
add
add
add
add
add
add
add
add
add
add
push
add
add
icebp
add
push
add
cmp
push
add
inc
add
inc
push
add
dec
add
add
add
push
add
add
add
add
xor
popa
push
add
pop
add
push
add
adc
jns
jl
add
bound
rol
push
add
jle
mov
add
add
xchg
push
add
push
add
movs
push
add
outs
add
add
push
add
stos
add
add
push
add
in
add
add
push
add
stos
add
add
push
add
stos
add
add
icebp
add
add
add
add
pop
add
mov
pop
add
repz
add
pop
add
add
rol
les
add
mov
xor
rol
add
or
xor
fiadd
add
cdq
add
add
pop
add
xchg
add
aaa
add
fld
in
pop
add
fwait
add
add
or
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
add
test
or
add
add
add
add
add
add
add
or
add
add
(bad)
add
mov
icebp
add
or
add
add
rol
add
or
add
sti
or
add
or
add
pop
add
or
mov
sbb
add
mov
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
or
add
fld
xchg
or
add
add
add
add
push
or
add
push
add
stos
add
add
add
inc
add
add
retf
or
add
add
add
add
add
add
add
add
add
mov
add
add
(bad)
mov
add
add
repz
add
mov
add
jns
fiadd
add
add
or
push
add
add
add
and
dec
add
lea
add
push
add
push
add
lea
add
add
add
add
add
mov
imul
pusha
add
mov
add
add
jno
push
add
add
mov
add
mov
add
mov
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
xchg
add
add
add
add
add
add
add
mov
add
add
add
add
stos
add
add
pop
add
mov
add
add
add
add
stos
add
add
add
add
pop
add
mov
add
add
add
leave
add
mov
add
add
add
add
add
fld
mov
add
add
pop
add
add
fld
loope
fimul
jmp
add
add
lock
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
add
imul
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
push
add
add
add
add
push
add
add
add
add
add
retf
add
add
add
add
ja
add
cdq
add
xchg
add
pop
add
add
repz
xchg
add
enter
push
add
add
add
add
xchg
add
mov
add
add
add
add
or
daa
or
jle
test
xor
add
mov
add
add
add
add
add
add
add
push
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
or
add
xchg
add
mov
cwde
add
or
or
sti
cwde
add
femms
imul
sbb
jmp
add
add
sbb
add
add
add
add
add
add
add
loope
ffree
add
cdq
add
add
loope
pop
les
add
add
add
les
add
loope
and
sbb
add
add
and
les
add
mov
add
les
add
lds
add
lds
add
add
add
add
add
lds
add
sbb
add
add
add
sbb
push
lds
add
sbb
add
add
fstp
fld
ins
lds
add
sbb
ja
add
sub
fld
test
add
loope
jns
(bad)
lds
add
sbb
add
sbb
movs
lds
add
sbb
add
add
add
sbb
add
add
add
sbb
add
cdq
add
call
sub
lea
add
sbb
add
lea
add
imul
sub
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
or
sbb
sbb
xchg
push
cs
or
or
or
sbb
add
add
add
add
add
add
add
or
sbb
add
or
sbb
add
push
int3
add
repz
or
int3
add
repz
or
int3
add
add
add
add
add
repz
xchg
push
mov
add
xchg
push
adc
add
repz
mov
add
add
repz
repz
sub
xchg
add
add
push
ror
add
xchg
add
add
xchg
add
add
xchg
add
add
add
or
inc
or
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
and
or
adc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
movs
add
popf
push
fiadd
xor
inc
pop
push
pop
ja
out
pop
inc
or
or
or
or
sub
cmp
dec
or
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
push
popa
push
jnp
xchg
push
scas
push
leave
push
jecxz
std
push
pop
rdtsc
cmovnp
movq
cdq
btr
int
out
add
sbb
xor
sbb
or
sbb
mov
add
mov
add
add
add
add
add
add
test
mov
mov
mov
pop
pop
or
add
push
rol
add
add
sub
add
add
add
push
sub
add
add
add
xor
push
ret
add
add
add
xor
jg
add
add
add
cmp
faddp
add
add
add
aas
push
faddp
add
add
jo
add
or
and
add
adc
add
add
add
add
mov
movs
std
mov
ds
push
or
inc
test
cld
cmp
push
cmp
mov
pop
into
scas
sbb
push
loop
inc
pop
icebp
cmp
sbb
dec
pop
cld
sti
fs
xchg
and
lods
and
mov
repz
aaa
daa
mov
lods
hlt
inc
adc
sub
outs
es
xchg
jp
pop
inc
je
sahf
inc
dec
rcr
das
cmp
add
xlat
add
mov
add
add
add
add
add
add
add
add
add
xlat
add
add
add
add
add
add
add
add
add
xlat
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
or
add
add
add
add
add
add
mov
add
add
add
push
add
add
add
add
add
add
or
str
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
adc
inc
add
add
add
add
and
add
add
add
add
add
add
add
sub
pusha
mov
add
add
sub
pusha
mov
add
add
sub
add
add
add
add
add
add
add
xor
pusha
mov
add
add
xor
pusha
mov
add
add
xor
add
add
add
add
add
add
add
cmp
pusha
mov
add
add
cmp
pusha
mov
add
add
cmp
add
add
add
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
push
add
add
push
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
sub
add
or
add
inc
add
add
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
sub
add
or
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
or
add
inc
add
add
add
ins
add
addr16
mov
add
pop
mov
rol
mov
add
and
(bad)
call
add
call
add
call
add
inc
add
call
add
call
(bad)
call
add
jmp
add
call
add
inc
push
gs
inc
outs
js
push
jns
je
ins
cs
imul
inc
outs
jb
jae
arpl
add
arpl
outs
js
dec
gs
outs
jb
inc
jb
fs
je
popa
ins
add
jae
gs
cs
gs
inc
jne
je
outs
add
jbe
ins
imul
imul
jo
imul
je
ins
add
je
jb
bound
add
jae
gs
cs
ins
ins
cs
imul
ins
add
imul
jae
push
jns
je
ins
cs
gs
dec
popa
imul
jb
gs
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
arpl
je
outs
outs
add
outs
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
gs
add
ins
popa
je
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
gs
ins
add
jae
gs
cs
dec
add
ins
jo
gs
imul
add
popa
imul
gs
outs
arpl
inc
outs
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
push
jns
add
imul
add
je
inc
ins
imul
jb
outs
add
ins
outs
jb
push
je
gs
ins
add
outs
addr16
jae
inc
popa
jb
dec
bound
arpl
popa
jae
je
bound
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
push
imul
outs
outs
je
imul
outs
imul
je
ins
cs
push
imul
je
inc
outs
outs
je
outs
ins
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
add
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
je
push
push
ja
push
je
ins
add
jne
outs
ja
dec
outs
fs
je
popa
jae
inc
outs
fs
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
arpl
gs
outs
fs
jo
outs
ins
popa
imul
popa
je
add
popa
ins
gs
popa
arpl
outs
jo
inc
jno
popa
ins
imul
inc
outs
popa
bound
add
outs
arpl
add
je
dec
popa
imul
inc
outs
jb
add
je
dec
gs
popa
add
jne
ins
jae
outs
jo
inc
js
ins
imul
outs
jo
popa
fs
inc
ins
imul
outs
je
popa
outs
fs
gs
push
outs
add
je
outs
outs
inc
popa
jae
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
inc
jo
ins
imul
add
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
addr16
inc
outs
outs
je
outs
ins
jae
jae
je
push
popa
jbe
dec
jns
gs
imul
js
je
inc
outs
je
jb
inc
gs
bound
arpl
inc
ins
gs
outs
je
inc
je
jb
bound
add
je
dec
outs
outs
gs
js
gs
imul
dec
popa
outs
imul
jae
jne
arpl
popa
ins
gs
jae
je
inc
ins
imul
add
jp
add
jae
gs
cs
jb
ja
outs
add
je
inc
outs
popa
bound
jae
add
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
jb
je
add
je
dec
outs
je
jb
popa
ins
add
je
inc
imul
jb
bound
add
outs
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
ins
outs
jbe
pop
push
imul
pop
inc
jb
fs
je
popa
ins
jae
dec
inc
jb
fs
je
popa
ins
jae
jns
outs
jae
add
je
inc
jne
jb
outs
je
outs
ins
popa
imul
push
popa
ins
jne
add
je
push
popa
ins
jne
add
outs
jbe
jb
imul
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
dec
outs
je
addr16
jae
je
dec
popa
ins
add
je
push
jae
inc
outs
ins
jo
je
bound
gs
push
outs
fs
outs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
imul
add
imul
jns
je
ins
cs
arpl
imul
arpl
jae
je
inc
popa
arpl
jb
jne
fs
ins
popa
add
popa
add
fs
push
gs
jne
arpl
gs
ins
jbe
add
jae
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
addr16
inc
jbe
fs
arpl
push
gs
outs
arpl
jno
popa
ins
jae
addr16
dec
popa
ins
add
je
je
jb
bound
gs
popa
ins
jne
add
popa
add
je
dec
popa
js
ins
jne
add
je
inc
outs
fs
inc
gs
bound
arpl
ins
jne
add
fs
push
push
ja
add
jne
outs
ja
inc
jbe
outs
je
popa
outs
fs
gs
addr16
push
gs
add
je
push
imul
pop
dec
outs
arpl
dec
popa
ins
add
je
dec
popa
ins
gs
popa
arpl
popa
ins
add
outs
push
arpl
je
add
je
jb
push
arpl
jb
jb
push
gs
outs
jb
dec
popa
jns
jne
add
jb
popa
jns
popa
fs
inc
push
fs
push
add
je
dec
jae
popa
ins
gs
popa
arpl
arpl
popa
je
outs
outs
add
je
jb
arpl
outs
add
arpl
jae
data16
push
imul
jae
arpl
dec
jae
inc
outs
js
dec
jae
inc
outs
js
gs
ins
je
dec
jae
inc
outs
js
je
ins
add
ins
outs
jbe
add
je
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
outs
arpl
outs
outs
imul
je
push
gs
add
jo
jae
add
outs
add
imul
gs
jne
arpl
je
imul
arpl
outs
ja
outs
outs
je
outs
ins
add
arpl
outs
jb
jns
arpl
imul
popa
ins
jne
push
jns
add
je
dec
arpl
add
outs
outs
add
imul
jae
outs
ins
ins
arpl
outs
add
jo
imul
push
gs
imul
add
jbe
add
je
push
jne
push
arpl
gs
inc
jne
outs
push
arpl
gs
imul
outs
jae
push
imul
jae
outs
fs
popa
jns
jne
add
bound
arpl
fs
outs
outs
outs
je
je
outs
outs
add
fs
dec
outs
popa
add
je
inc
jb
ins
add
outs
je
imul
inc
gs
js
arpl
imul
ins
bound
jae
je
push
popa
bound
fs
jae
je
inc
outs
popa
bound
imul
jns
gs
popa
fs
push
imul
popa
jb
jb
push
arpl
jb
jb
jae
je
push
outs
jb
add
je
inc
jae
gs
bound
push
gs
ins
gs
popa
jns
jne
add
je
inc
jne
outs
push
imul
inc
popa
je
add
je
push
outs
add
ins
outs
jbe
pop
inc
push
fs
push
add
je
dec
gs
inc
je
jb
bound
add
popa
jb
add
ins
outs
jbe
pop
inc
ins
imul
outs
ins
jbe
inc
jbe
outs
je
jb
jae
jae
je
dec
outs
arpl
imul
outs
je
jae
je
dec
jae
imul
jae
popa
outs
arpl
pop
pop
sub
or
adc
xchg
ret
mov
ret
test
mov
nop
ret
mov
lahf
push
ret
push
ret
ret
ret
mov
mov
es
mov
stos
xor
ret
mov
ret
movs
dec
pop
and
sub
arpl
cwde
sub
scas
ret
mov
push
ret
ret
ret
ret
stos
ret
mov
mov
ret
pop
mov
mov
pop
ret
mov
cmps
ret
ret
inc
dec
ret
mov
mov
ret
ret
test
lods
ret
mov
sub
lahf
ret
(bad)
ret
ret
test
mov
cmp
mov
mov
xchg
pushf
gs
xchg
ret
ret
ret
movs
and
stos
sbb
ret
mov
imul
push
ret
xchg
ret
ret
adc
jg
movs
bound
cdq
ret
ret
push
ret
call
ret
xchg
xor
ret
mov
ret
xchg
ret
ret
add
ret
adc
inc
ret
jg
ret
ret
stos
ins
and
or
ret
xchg
xor
ret
ret
add
ret
mov
ret
lods
ret
mov
xchg
xchg
ja
xchg
sub
mov
mov
mov
xchg
ret
stos
inc
pop
add
mov
mov
mov
mov
lods
ret
mov
ret
mov
lahf
ret
ret
ret
mov
ret
nop
ret
lods
je
mov
ret
stos
add
movs
inc
pop
jo
ret
mov
ret
movs
jns
mov
ret
xchg
ret
ret
scas
sub
pop
ret
mov
inc
ret
xchg
ret
stos
ret
lahf
ret
cmps
daa
jbe
jbe
call
mov
stos
dec
sub
add
js
ret
xchg
ret
mov
ret
mov
stos
or
mov
mov
ins
adc
mov
pop
ret
mov
mov
dec
ret
lods
pusha
ret
add
sbb
mov
ret
ret
mov
ja
jo
and
ret
cdq
sbb
or
test
mov
ret
mov
mov
pop
push
ret
ret
mov
ret
xchg
dec
ret
mov
ret
mov
xchg
ret
ret
mov
add
add
pop
adc
ret
dec
pop
pop
dec
ret
mov
cmps
push
ja
mov
sub
cmps
pop
ret
ret
mov
aaa
js
dec
and
ret
sahf
jb
push
ret
nop
push
ret
ret
ret
scas
add
je
xchg
ret
mov
xchg
ret
mov
sahf
or
mov
es
nop
dec
jns
xchg
xchg
ret
popf
sbb
xchg
add
mov
mov
push
ret
popf
ret
mov
mov
jno
call
cmps
jp
cdq
ret
xchg
stos
ret
and
mov
stos
sub
inc
ret
sub
arpl
mov
lods
dec
jo
stos
ret
mov
adc
ret
ret
test
ret
mov
inc
ret
mov
ret
cdq
adc
test
test
sbb
call
fwait
ret
xchg
ret
dec
ret
mov
jbe
jg
xchg
ret
ret
mov
mov
ret
xchg
ret
mov
lods
ret
sbb
mov
ret
ret
mov
jbe
ret
xchg
add
mov
stos
ret
xchg
or
sahf
cmp
ret
push
js
mov
mov
ret
ret
push
ret
mov
stos
popa
adc
ret
mov
dec
ret
es
push
pop
ins
imul
outs
cmp
mov
ret
ret
push
ret
sahf
je
mov
mov
ret
scas
adc
ret
ret
and
mov
mov
mov
xchg
and
mov
pop
add
ret
mov
ret
js
lahf
cmp
lods
or
ret
mov
ret
mov
mov
cmps
ret
sahf
addr16
or
lods
ret
lea
mov
inc
ret
test
add
aas
push
ret
stos
sub
lods
xor
ret
lods
ret
mov
jne
das
ret
mov
nop
ret
stos
xor
adc
mov
xchg
ret
mov
cwde
popa
imul
ret
ret
mov
mov
pop
ret
stos
ret
lahf
ret
fwait
ret
mov
cmp
xchg
ret
push
and
mov
stos
sbb
ret
add
ret
ret
dec
cmp
ret
xor
scas
ret
movs
ret
ret
xchg
push
cs
or
nop
ret
ret
sub
(bad)
xor
cmps
ret
ret
sahf
add
lods
push
push
ret
add
push
ret
cmps
sbb
mov
add
mov
ret
jle
ret
mov
cwde
inc
cmp
test
ret
mov
fwait
aaa
jl
outs
pop
push
and
ret
push
outs
sub
popf
xor
lods
ret
mov
ret
pusha
ret
ret
mov
pop
add
mov
mov
ret
xchg
jp
pop
ret
mov
ret
mov
xchg
cmp
cwde
and
add
mov
outs
jl
mov
pop
ret
lahf
ret
ret
mov
pop
addr16
test
cmps
inc
ret
mov
ret
mov
ret
mov
xor
mov
ret
test
cmps
ret
cmps
ret
(bad)
bound
nop
ret
mov
sbb
mov
mov
xchg
ret
xchg
ret
ret
ret
xchg
jl
ret
sbb
mov
ret
mov
mov
sub
mov
ret
sub
ret
xchg
movnti
dec
ret
ret
ret
scas
cmp
ret
pushf
sbb
ret
add
movnti
mov
mov
inc
das
ret
pushf
ret
mov
jl
sub
ret
mov
lods
ret
pop
ja
popf
ret
xchg
pop
ret
xchg
push
xor
ret
dec
ret
lahf
ret
lods
pop
ret
(bad)
ret
lods
cmp
fs
cwde
add
jnp
mov
mov
xchg
fs
movnti
xor
cdq
ret
mov
mov
movs
or
mov
ret
ret
mov
push
and
mov
ret
ret
lahf
cmp
push
xor
mov
mov
or
ret
mov
mov
inc
addr16
cwde
sbb
mov
mov
mov
ret
ret
inc
sub
ret
add
xor
pop
or
lea
cmp
ret
xchg
imul
mov
ret
push
push
mov
movs
ret
mov
ret
test
test
ret
xchg
ret
xchg
ret
mov
adc
ret
and
adc
xchg
ret
xor
xchg
ins
ret
test
mov
ret
and
xchg
ret
movs
jbe
stos
add
xchg
ret
test
mov
popa
aaa
ret
pop
ret
xchg
and
nop
js
xchg
ret
xchg
dec
ret
test
mov
mov
ret
ret
add
mov
ret
lods
je
xchg
ret
mov
jp
xchg
inc
or
mov
ret
mov
mov
mov
mov
adc
mov
jnp
pop
imul
push
ret
xchg
ret
ret
xchg
ret
test
mov
outs
ret
add
ret
xchg
jo
ret
xchg
ret
add
add
sbb
lods
jae
mov
ret
and
mov
and
xchg
inc
ret
call
ret
mov
ret
stos
ret
xchg
xor
mov
ret
and
ret
ret
xchg
jne
(bad)
ret
dec
jb
mov
lea
ret
xchg
daa
sbb
mov
ret
cmps
adc
sub
ret
xchg
ret
mov
or
ret
ret
ret
test
ret
ret
mov
ret
aaa
push
ret
mov
xchg
ret
xchg
cmps
ret
add
push
fs
adc
ret
mov
mov
pop
mov
adc
mov
ret
push
ret
cwde
and
add
ret
ret
scas
daa
ret
mov
mov
ret
add
ret
mov
ret
and
xchg
js
mov
xchg
ret
outs
ds
ret
test
ret
ret
sbb
ret
ret
dec
ret
mov
test
mov
movnti
nop
sbb
cmp
ret
mov
add
ret
nop
ret
pop
push
ret
mov
ins
inc
xor
mov
ret
dec
xor
ret
xchg
ret
mov
ret
pop
ret
mov
ret
xchg
ret
ret
sub
xor
sub
ret
test
ret
mov
jb
mov
mov
ret
mov
jge
xchg
ret
mov
ret
ret
call
ret
xchg
pop
push
push
add
mov
inc
sub
xchg
mov
ret
ret
mov
ins
push
ret
mov
add
cmp
dec
imul
xchg
ret
lods
cmp
ret
aas
ret
add
ret
mov
ret
ret
lods
ret
mov
xchg
ret
ret
lahf
jg
pop
ret
ret
nop
ret
nop
dec
or
lods
cmp
mov
ret
xchg
mov
or
add
mov
ret
popf
js
and
mov
dec
pop
ret
xchg
mov
test
mov
xchg
dec
adc
xchg
add
movs
xor
jne
ret
xchg
ret
mov
xchg
or
cdq
ret
xor
pop
cmps
ret
mov
cmps
jno
jge
mov
cmps
ret
sahf
inc
or
jle
sbb
nop
ret
xor
stos
ret
ret
mov
mov
mov
xchg
ret
cmps
sub
ret
pop
stos
push
movs
pop
ret
mov
ret
mov
xchg
stos
jnp
mov
ret
mov
or
mov
sub
mov
inc
ret
call
ret
test
stos
ret
xchg
scas
dec
ins
ret
call
pop
ret
ret
add
sbb
test
(bad)
sbb
mov
mov
ret
mov
lods
ret
mov
dec
ret
cdq
inc
and
mov
push
pop
jns
or
scas
add
movs
ret
ret
cwde
ret
ret
mov
fs
test
pop
push
ret
mov
xor
ret
mov
ret
mov
fwait
ret
xchg
ret
mov
ret
xchg
ret
push
xchg
xor
mov
ret
add
ret
mov
pop
mov
mov
jno
push
ret
xchg
add
stos
ret
xchg
ret
mov
ret
xchg
ret
ret
mov
sbb
lods
jle
xchg
ret
mov
sbb
mov
cmp
test
ret
xor
ret
cmp
sbb
(bad)
mov
ret
cmps
ret
movs
push
ret
stos
ret
or
ret
cmp
adc
mov
sub
cdq
and
mov
mov
push
xchg
jb
das
sbb
xchg
ret
add
ret
or
mov
ret
mov
lahf
ret
mov
cmps
sub
xchg
push
ret
xchg
mov
cwde
push
ret
ret
jp
stos
jle
sub
ret
mov
push
ret
ret
cmps
ret
ret
ret
mov
adc
xchg
ds
ret
outs
ret
cdq
jbe
jp
ret
xchg
push
jne
mov
mov
ret
nop
ret
nop
ret
mov
pop
ret
mov
inc
ret
ret
scas
sub
test
add
inc
ss
popf
inc
ret
mov
add
ret
mov
ret
mov
lahf
ret
ret
imul
pop
dec
ret
mov
inc
adc
ret
cwde
and
xchg
sub
ret
nop
ret
mov
mov
imul
mov
push
ret
stos
ret
xchg
ret
cdq
ret
ret
ret
call
ret
fwait
adc
mov
scas
cmp
arpl
pushf
ja
xchg
ret
stos
ret
ret
push
sbb
xchg
adc
mov
cwde
ret
dec
push
ret
fwait
ret
mov
pop
sub
popa
ret
mov
lahf
pop
inc
or
mov
cmp
movs
ret
or
lea
ret
mov
mov
xchg
pusha
ret
movs
ret
mov
push
xor
sahf
ret
mov
sbb
fs
ret
xor
stos
ret
pop
sbb
mov
xchg
ret
fwait
pop
ins
bound
jae
xchg
or
mov
ret
xchg
mov
adc
ret
mov
ret
ret
ret
mov
mov
call
inc
ret
mov
pop
ret
push
or
ret
stos
dec
dec
sbb
test
ret
mov
xchg
xor
mov
ins
ret
cdq
ret
ret
ret
and
test
ret
test
mov
ret
ret
and
xchg
jge
pop
ret
pop
mov
ret
mov
cwde
ret
ret
mov
inc
ret
xchg
ret
mov
xor
pushf
sub
mov
xchg
ret
push
ins
cmp
fwait
ret
sahf
push
es
ret
mov
lahf
ret
mov
movs
ret
add
adc
add
ret
xchg
lods
ret
ret
mov
test
ret
test
xor
mov
ret
es
ret
mov
xchg
ret
daa
ret
popf
ret
mov
ret
mov
mov
mov
ret
mov
mov
fwait
ret
fwait
sub
ins
pop
ret
ret
mov
nop
add
movs
ret
cmps
ret
ret
ret
cwde
ret
xchg
ret
pushf
jl
ret
cmps
ret
popf
inc
adc
mov
jg
ret
mov
nop
ret
or
ds
cmps
xor
ret
cwde
sub
add
aas
ret
test
xor
mov
test
test
mov
test
mov
mov
mov
ret
mov
jo
ret
lods
sub
mov
ret
fwait
ret
test
xchg
ret
lea
stos
inc
ret
mov
test
cdq
pop
ret
jp
mov
ret
mov
dec
ret
mov
ret
ret
ret
ret
pushf
ret
xchg
mov
ret
mov
pop
ret
mov
mov
mov
mov
jae
ret
push
ret
mov
fwait
pop
ret
mov
test
ret
pop
ret
cdq
ret
mov
add
inc
sbb
ret
inc
dec
ret
mov
lea
pusha
add
ins
ret
cmp
mov
ret
mov
ret
ret
mov
ret
ret
stos
pop
pop
ret
cwde
ret
xchg
jg
ret
mov
scas
cmp
lods
jns
mov
stos
outs
sbb
stos
ret
add
dec
ret
ret
mov
test
push
je
xchg
ret
cmps
ret
stos
ret
sahf
ret
lahf
jle
ret
cwde
ret
lods
ss
add
ret
cdq
jno
dec
xor
ret
stos
jg
lahf
jb
ret
mov
push
ret
call
or
test
xor
jnp
mov
ret
mov
ret
inc
pop
ret
sahf
imul
js
ret
mov
lea
ret
mov
ret
ss
ret
outs
ret
pop
mov
add
ret
sahf
sub
jnp
test
ret
or
inc
ret
cmps
ret
ret
mov
ret
mov
ret
das
ret
scas
ret
jnp
and
ret
sub
ret
mov
test
ret
nop
ret
xchg
ret
or
ret
mov
ret
fwait
ja
ret
mov
lods
ret
mov
ret
test
ret
mov
fwait
sub
jae
mov
ret
movs
ret
sahf
add
outs
push
jp
cmps
cmp
stos
dec
ret
xchg
imul
mov
fwait
inc
ret
ret
mov
js
push
or
pushf
jnp
scas
dec
ret
add
mov
inc
ret
mov
xchg
ret
mov
ret
ret
ret
add
sub
movs
ret
mov
ret
xchg
ret
xchg
add
inc
ret
mov
mov
ret
xchg
mov
xor
inc
dec
outs
ret
nop
ret
stos
push
cmovb
mov
or
cwde
ret
mov
mov
xchg
ret
lods
ret
add
ret
mov
mov
ret
ret
add
ret
movs
pop
ret
add
test
add
sub
mov
ds
ret
mov
jb
ret
nop
ret
add
inc
jl
xchg
push
popf
ret
mov
mov
ret
test
sub
push
ret
mov
pop
ret
mov
xchg
pop
retw
scas
ret
xchg
xchg
pop
adc
cdq
ret
cmps
inc
ret
xchg
movs
pop
ret
xor
push
or
ret
test
ret
mov
retw
xchg
ret
mov
sub
ret
ins
ret
mov
ret
mov
es
test
push
push
or
and
(bad)
sbb
xor
inc
ret
mov
ret
pushf
ret
mov
mov
cmps
adc
xchg
mov
ret
mov
ret
ret
adc
ret
fwait
aaa
pusha
adc
cmps
ret
xchg
ret
ret
dec
and
test
mov
inc
sbb
mov
mov
ret
scas
inc
or
cmps
pop
ret
mov
test
mov
xchg
or
cdq
sbb
stos
pusha
ret
mov
ret
inc
ret
sahf
ret
cdq
ret
mov
mov
mov
lods
ret
sub
add
ret
stos
ret
push
ret
ret
imul
adc
mov
sbb
mov
ret
mov
mov
sub
adc
ret
mov
sahf
pop
ret
cmps
ret
push
inc
ret
mov
and
mov
call
mov
inc
ret
add
jae
movs
ret
mov
pushf
push
ret
mov
fs
xchg
ret
mov
cmps
jb
push
ret
lods
cmp
nop
ret
ret
mov
ret
ret
xchg
cmp
mov
ret
stos
je
sub
xor
sbb
popf
ret
mov
cwde
inc
ret
mov
cmp
ret
mov
mov
pop
mov
mov
das
ret
xchg
sbb
stos
and
ret
ret
inc
ret
sahf
ret
cmp
sbb
ret
movs
ret
mov
ret
mov
dec
ret
pushf
pop
push
ret
ret
push
pusha
ret
xchg
cs
mov
test
test
test
ret
pushf
adc
add
dec
ret
xchg
ret
xchg
cmp
ret
ret
jb
ret
sbb
mov
stos
ret
test
mov
xchg
ret
call
push
ret
movs
ret
xchg
jb
xchg
ret
mov
ret
mov
fwait
push
ret
cmp
ret
mov
ret
ret
mov
mov
cwde
retw
xchg
stos
ret
mov
ret
(bad)
ret
xchg
ret
mov
add
nop
addr16
test
mov
push
pop
ret
ret
mov
bound
jg
ret
mov
ret
xchg
push
and
mov
xchg
cwde
ret
sub
dec
jno
scas
and
mov
popf
ins
adc
(bad)
xor
jno
fwait
ret
xchg
ret
mov
ret
mov
add
sub
ret
ret
ret
ret
xchg
mov
push
ret
add
ret
stos
add
mov
pop
ret
mov
ret
add
call
ret
lods
ret
sahf
sub
pop
adc
adc
mov
fwait
xor
xchg
ret
mov
ret
mov
lods
ret
mov
ret
xchg
or
ret
xchg
lods
push
ret
ret
popf
ret
mov
ret
mov
ret
stos
cs
mov
test
ret
pop
ret
xchg
ret
mov
pop
jl
pop
inc
dec
ret
mov
xchg
push
ret
mov
xchg
ret
push
ret
lods
ret
mov
ret
dec
ret
add
ret
lods
sbb
test
xchg
ret
cmp
ret
ret
mov
mov
ret
ret
mov
mov
xchg
ret
mov
xchg
cmp
mov
test
fwait
ret
mov
nop
ret
scas
ret
inc
ret
call
cmps
ret
ret
(bad)
pop
ret
lods
ret
ret
ret
mov
cmps
ret
mov
ret
lea
xchg
inc
popa
pop
jge
mov
xchg
aaa
dec
push
ret
mov
cdq
ret
call
mov
ret
mov
ret
sahf
push
adc
mov
xchg
mov
popf
ret
dec
push
mov
sahf
ret
mov
xchg
lods
sbb
mov
ret
ret
mov
ret
xchg
mov
ret
nop
aaa
pop
ret
ret
ds
ret
cmp
lahf
ss
add
push
call
ret
stos
ret
xchg
push
ret
mov
nop
ret
lods
ret
mov
mov
cmp
je
mov
outs
jle
mov
stos
push
push
pop
pop
and
lods
ret
ret
call
ret
xchg
test
mov
ret
mov
add
pushf
push
outs
ret
stos
ret
ret
cwde
cmp
ret
xchg
pop
ret
xchg
and
mov
push
xchg
mov
dec
ret
movs
push
ret
xchg
ret
add
mov
ret
test
ret
jns
ret
mov
mov
test
stos
adc
test
ret
mov
mov
mov
ret
ret
pop
inc
ret
cdq
ret
cdq
cmp
xchg
ret
mov
popf
ret
mov
ret
lahf
ret
sbb
mov
push
sbb
fwait
add
ret
xchg
ret
test
ret
adc
add
stos
ret
mov
mov
mov
push
ret
test
ret
and
ins
ret
xchg
jne
mov
ret
cmp
mov
das
cs
adc
mov
ret
mov
and
mov
ret
mov
ret
mov
xchg
ret
mov
pop
ret
mov
pushf
es
mov
ret
lea
ret
xchg
adc
ret
mov
sbb
pop
movs
xor
xchg
pop
ret
mov
inc
ret
mov
stos
push
je
ret
stos
sub
xchg
dec
je
xchg
ret
mov
ret
cwde
ret
push
ret
xchg
cs
sbb
or
ret
daa
push
ds
or
je
test
ret
mov
ret
test
mov
xchg
ret
mov
ret
mov
ret
stos
ret
mov
mov
mov
cmps
ret
inc
ret
lahf
gs
test
cmps
ret
mov
lahf
ret
mov
ret
cdq
push
ret
ret
or
pop
lea
fs
mov
mov
gs
ret
mov
mov
ret
lahf
jp
ret
xor
mov
ret
ret
xchg
ret
xchg
cmp
ret
ret
mov
adc
cmp
ret
xchg
adc
ret
ret
xchg
pop
ret
cwde
ret
mov
ret
ret
test
sub
ret
cmps
ret
test
ret
mov
popa
dec
ret
mov
xchg
ret
ret
mov
cmps
ret
xchg
ret
sahf
ret
jg
push
or
ret
scas
ret
add
push
ret
popf
ret
xchg
pop
mov
cmp
adc
mov
mov
mov
jno
add
ret
mov
stos
ss
popf
pusha
push
sbb
popa
adc
mov
mov
movs
ja
mov
dec
adc
and
mov
jnp
test
mov
mov
inc
sbb
ret
cwde
ret
fwait
ret
mov
cmps
adc
mov
xchg
pop
ret
jb
mov
retw
xor
sahf
ret
nop
ret
add
ret
xchg
(bad)
mov
cmps
ret
gs
mov
xor
jle
ret
mov
mov
inc
ret
popf
sbb
lahf
pop
ret
ret
mov
or
xchg
add
xchg
ret
mov
ret
ret
test
lods
ret
mov
ds
ret
xchg
ret
lods
ret
pop
sbb
xchg
ret
scas
and
ret
outs
ret
mov
fwait
jl
ret
mov
ret
xchg
ret
test
sbb
ret
and
ret
movs
ret
cmp
scas
adc
jnp
mov
mov
xor
mov
cwde
ret
ret
lahf
ret
mov
mov
ret
and
xchg
ret
cmps
push
push
ret
(bad)
ret
add
ret
mov
sub
sbb
xchg
or
test
mov
mov
or
mov
ret
pop
mov
add
ret
ret
cmps
ret
cmps
ret
mov
pop
jl
xchg
pop
ret
mov
ret
mov
ret
mov
mov
sbb
push
aas
ins
ret
mov
mov
call
and
ret
or
ret
ret
pushf
push
pop
xor
ret
pushf
dec
ret
mov
ret
movs
ret
xchg
ret
movs
je
jle
ret
mov
mov
lahf
ret
mov
mov
ret
sbb
adc
xchg
ret
ret
or
ret
ret
mov
mov
dec
ret
xchg
ret
pushf
ret
cdq
dec
and
mov
mov
cwde
and
xor
mov
xor
aaa
ret
mov
ret
xchg
mov
ret
cdq
sbb
ret
cwde
push
aas
ret
test
scas
or
and
mov
sbb
sub
ret
add
ret
movs
ret
ret
cmps
ret
mov
xchg
ret
xchg
imul
outs
adc
ret
xchg
inc
adc
ret
(bad)
or
inc
ret
sbb
ret
xchg
or
ret
mov
xchg
dec
ret
popf
ret
pop
jbe
mov
cwde
jne
add
ret
xchg
fs
cmp
jge
xchg
pop
ret
xchg
pushf
push
ret
xchg
xchg
ret
ret
xchg
ret
add
push
inc
cmp
mov
ret
test
jb
mov
push
ret
sub
xchg
push
inc
ret
mov
test
lahf
sbb
xchg
ret
or
ret
dec
ret
mov
xchg
pop
push
ret
sbb
ret
mov
ret
mov
xchg
ret
mov
ret
mov
pushf
pop
ret
sahf
ret
mov
mov
mov
ins
ret
stos
ret
xchg
dec
ret
ret
mov
stos
ret
mov
ret
lea
push
xchg
mov
ret
imul
ret
stos
push
ret
ret
xchg
push
ret
sahf
ret
mov
push
ret
ret
mov
ret
mov
xor
xchg
ret
test
ret
mov
push
jnp
pop
and
mov
arpl
xchg
dec
ret
xchg
jo
lods
ret
ret
imul
pushf
push
sub
mov
nop
ins
bound
adc
and
ret
mov
add
mov
cdq
pop
ret
mov
test
mov
test
cmps
ret
test
push
and
stos
ret
test
scas
add
ret
sub
lods
jno
mov
ret
lea
ret
adc
xchg
dec
dec
daa
ret
mov
adc
pushf
ret
call
ds
sahf
ret
scas
ret
ret
mov
mov
call
sub
ret
push
das
popa
ret
mov
xchg
ret
sub
scas
ret
mov
call
ret
(bad)
or
sahf
jg
inc
xor
mov
mov
(bad)
jno
ins
je
sbb
lea
and
pushf
pop
push
ret
mov
mov
xchg
sbb
or
adc
mov
ret
mov
scas
ret
or
mov
mov
ret
pushf
ret
test
mov
ret
xchg
xor
mov
mov
test
ret
ret
mov
mov
mov
ret
scas
jbe
nop
outs
pop
dec
popa
cmp
lods
jle
stos
ret
ret
sahf
ret
xchg
ret
test
scas
es
call
cmps
ret
ret
mov
add
xor
mov
ret
xchg
ds
ret
ret
ret
add
inc
ret
ret
mov
ret
xchg
jb
cwde
ret
mov
xchg
or
test
test
popf
adc
call
xchg
ret
popa
inc
and
cmp
lods
ret
xchg
push
ret
and
ret
mov
ret
mov
ret
popf
ret
mov
cdq
outs
sub
mov
ret
cdq
ret
mov
mov
ret
add
push
pop
dec
ret
lods
xor
xchg
das
jns
mov
ret
cwde
jne
push
ret
mov
scas
das
inc
push
ret
mov
ret
ret
mov
ret
cwde
ret
call
ret
xchg
ret
mov
ret
xchg
js
scas
push
ret
mov
xchg
aas
ret
es
ret
xor
cmps
ret
mov
pop
xchg
sbb
test
popa
das
retw
mov
ret
mov
ret
xchg
ret
lahf
ret
jno
add
xchg
ret
jle
push
mov
or
xor
ret
mov
stos
ret
cdq
sub
mov
ret
xchg
pop
ret
scas
ret
movs
or
ret
movs
ret
xchg
adc
lods
pop
ret
ret
adc
ret
xchg
cs
ret
xchg
sbb
ret
xchg
ret
popf
sbb
ret
xchg
lahf
inc
popa
ret
mov
ret
xchg
inc
ret
lods
ret
ret
mov
ret
mov
ret
mov
lahf
dec
cmp
ret
lahf
ret
ret
push
add
xor
mov
sub
mov
sbb
cmps
ret
movs
ret
ret
ja
sub
ret
xchg
ret
pop
pusha
ret
mov
scas
ret
stos
addr16
ret
mov
ret
sbb
or
xor
mov
sub
lahf
sbb
fwait
ret
lods
or
mov
mov
(bad)
ret
popf
ret
mov
mov
ret
test
ret
mov
cmp
dec
ret
mov
mov
ins
and
xor
cmp
push
pop
ret
mov
outs
inc
ret
mov
xchg
pushf
ret
lods
ret
mov
ret
gs
ret
xchg
jns
xchg
(bad)
adc
mov
ret
test
ret
cdq
pusha
ret
test
sub
ret
ret
mov
ret
scas
or
movs
ret
popf
ret
lods
ret
mov
ret
ret
movs
ss
mov
mov
sbb
ret
cmps
ret
mov
mov
xchg
dec
inc
push
and
ret
cmps
ret
mov
mov
ret
mov
mov
mov
ret
lea
ret
mov
ret
test
ret
mov
test
cmps
jle
pop
daa
arpl
mov
outs
ret
add
aaa
ret
popf
push
adc
mov
sbb
mov
ret
add
add
jge
push
push
retw
mov
xchg
ret
mov
mov
test
push
mov
cmps
ret
xchg
ret
fwait
dec
ret
ret
cmp
mov
inc
ret
xchg
ret
mov
xchg
sub
ret
mov
ja
pushf
ret
lods
ret
xchg
ret
mov
mov
ret
movs
popa
push
dec
inc
ret
add
ret
mov
sbb
lahf
js
cmps
push
gs
inc
cmp
mov
ret
mov
ret
test
sbb
or
call
cmp
mov
xchg
ret
mov
bound
ret
mov
test
ret
lods
ret
adc
push
je
mov
dec
cmp
xchg
ret
stos
push
ret
mov
xchg
ret
xchg
ret
mov
adc
mov
mov
mov
mov
inc
ret
mov
ret
ret
cmps
push
xor
fwait
addr16
ret
xchg
or
and
or
mov
dec
dec
and
xor
mov
ret
ret
mov
scas
ret
ret
xchg
or
sahf
ret
mov
dec
ret
ds
lods
je
pop
ret
mov
mov
pusha
cmp
xchg
ret
add
add
ss
adc
ret
xchg
or
sbb
adc
add
ret
xchg
mov
sub
cmp
ret
ret
lods
dec
(bad)
mov
mov
ret
mov
xchg
and
mov
ret
ret
nop
ret
mov
jb
inc
ret
xchg
ret
mov
inc
jo
xor
add
xor
ja
imul
ret
stos
ret
xchg
ret
add
addr16
mov
scas
jle
mov
ret
ret
ret
mov
sub
ret
mov
xchg
pop
or
dec
or
popa
ret
mov
ret
ret
mov
mov
mov
add
jg
add
ret
pop
outs
ret
cmps
inc
jo
sbb
inc
imul
ret
ret
test
ret
cmps
ret
cdq
ret
add
pushf
pcmpgtd
mov
push
pop
ret
ret
mov
cmp
fwait
ret
ret
mov
cwde
pop
jae
add
and
pop
ret
mov
addr16
mov
pop
pop
popf
ret
xchg
ret
pop
ret
cmps
push
sbb
fwait
ret
or
dec
fs
xchg
xchg
xor
sbb
mov
sub
cdq
dec
ret
xchg
ret
ret
ret
mov
ret
mov
ret
xchg
and
xchg
dec
and
ret
ret
mov
ret
mov
ret
mov
sub
test
test
scas
ret
lods
xor
ret
add
ins
dec
ret
mov
(bad)
mov
ret
xchg
ret
xchg
ret
lods
ret
mov
ret
mov
ret
cs
xchg
and
xchg
mov
ret
scas
adc
cmps
ret
push
ret
and
mov
add
ret
sahf
jge
push
ret
mov
addr16
ret
xchg
adc
ret
cwde
push
ret
add
ret
mov
sub
ret
xchg
ret
ret
xchg
ret
ret
mov
xchg
ret
xchg
ret
mov
mov
mov
cdq
adc
jg
mov
test
ret
and
mov
stos
sub
scas
cmp
xchg
ret
mov
inc
ret
ret
sahf
ret
ret
xchg
xor
mov
lods
aaa
ret
mov
ret
mov
push
ret
mov
outs
ret
ret
ret
test
ret
xchg
inc
movnti
mov
lahf
ret
mov
add
js
ret
mov
mov
ret
cdq
ret
dec
ret
ins
push
ret
lahf
ret
scas
ret
dec
jge
sbb
aas
ret
mov
mov
pop
ret
ret
test
(bad)
ret
mov
ret
call
inc
dec
ret
ret
xchg
mov
sub
mov
ret
mov
or
mov
sub
and
mov
mov
adc
ret
pushf
xor
ret
call
stos
ret
mov
mov
xor
pop
ret
test
mov
jp
ret
(bad)
ret
scas
add
mov
das
ret
mov
xchg
ret
stos
ret
jo
adc
ret
mov
inc
xor
ret
mov
ss
ret
mov
lods
pop
ret
mov
mov
ret
cmps
ret
ret
mov
cdq
ret
mov
inc
ret
(bad)
jb
add
ret
mov
ret
xchg
ret
test
adc
test
daa
ret
(bad)
jo
mov
cmps
dec
ret
mov
ret
popf
ret
mov
ret
ret
mov
sub
fs
mov
cmp
ret
xchg
stos
ret
xchg
push
pushf
pop
ret
scas
ret
xchg
or
ret
ret
ret
mov
test
cs
ret
ret
mov
xor
ins
ds
test
mov
mov
add
ret
mov
xchg
scas
ret
dec
ret
test
pushf
ret
lahf
ret
adc
mov
ret
mov
js
dec
ret
ret
ret
mov
xchg
outs
ret
mov
adc
xor
cmp
xor
movs
add
push
ret
pop
pop
ret
mov
ret
cmps
pop
jg
xchg
ret
ret
and
ret
test
ret
lods
add
(bad)
ret
stos
ret
mov
xchg
or
ins
ret
xchg
ret
jg
mov
ret
pushf
ret
mov
xchg
imul
pop
ret
xchg
ret
mov
pop
sub
xchg
sbb
lods
ret
xchg
mov
mov
xor
mov
ret
mov
sbb
xor
pop
es
ret
xor
ret
inc
ret
ret
ret
ret
mov
mov
ret
popf
or
ret
or
mov
test
lahf
js
scas
sbb
scas
bound
ret
ret
xchg
dec
ret
test
ret
mov
ret
ret
xor
and
ret
ret
mov
ret
das
push
inc
jo
ret
mov
xchg
xchg
cmps
xor
or
and
mov
inc
ret
ret
scas
ret
mov
ret
xchg
inc
ret
dec
ret
mov
ret
mov
ret
mov
lods
ret
xchg
jns
fwait
ret
ret
test
ret
cmps
ret
stos
ret
mov
ins
ret
ret
movs
cmpps
stos
jle
ret
mov
movs
ret
aaa
je
push
jne
mov
add
stos
ret
mov
xchg
ret
ret
xchg
ret
pushf
dec
ret
mov
ret
mov
add
cdq
ret
mov
cmps
ret
mov
jb
ret
mov
mov
xor
fwait
ret
mov
sbb
jno
scas
ret
ret
ret
lahf
pop
ret
mov
sbb
xchg
ret
xor
cdq
ret
fwait
and
xchg
jl
dec
ds
ret
cmps
ret
mov
ret
daa
ret
test
xchg
ret
ret
ret
xchg
ret
(bad)
ret
call
jne
cwde
ret
(bad)
jge
sahf
ret
ret
mov
ret
mov
sahf
ret
cmps
ret
mov
ret
lods
ret
cdq
and
ret
test
scas
jo
cdq
ret
ret
mov
mov
sub
xchg
fwait
ret
xor
ret
mov
ret
lods
ret
xchg
aas
ret
mov
xchg
jo
sub
ret
mov
cs
mov
ret
ret
add
ret
xchg
cmp
ret
ret
cmp
mov
pusha
ret
ret
mov
ret
ret
test
ret
movs
ret
movs
ret
ret
mov
je
lods
dec
ret
test
stos
ret
mov
ret
cdq
ret
mov
ret
mov
sub
sub
xchg
ret
mov
dec
ret
stos
ret
stos
ret
ret
mov
(bad)
ret
mov
jnp
cmp
jno
ret
mov
call
and
or
scas
ret
mov
push
ret
pushf
dec
ss
ret
lods
ret
mov
xchg
ret
call
ret
mov
ret
fwait
aas
dec
ret
scas
adc
ret
mov
adc
or
ret
and
test
ret
popf
ret
lahf
ret
mov
sbb
adc
popf
and
scas
dec
push
ret
mov
ret
ret
mov
sahf
ret
cmps
ret
sbb
jg
ret
fwait
pop
ret
test
ret
mov
ret
or
mov
add
es
lahf
cmp
ret
mov
mov
and
cmps
ret
movs
bound
mov
ret
mov
push
ret
jl
ret
mov
daa
ret
xchg
ret
mov
ret
fwait
inc
inc
ret
sbb
sahf
ret
sahf
ret
sahf
ret
lods
ret
xchg
sub
scas
push
outs
sub
pop
ret
nop
ret
ret
fwait
ret
stos
ret
stos
ret
mov
cdq
ret
lods
popa
ret
ret
jae
test
cdq
xor
mov
sbb
xchg
jle
xchg
ret
mov
ret
stos
or
sub
cmps
ret
sub
cmps
inc
ret
mov
mov
mov
test
ret
add
sub
ret
mov
ret
mov
inc
push
jno
jl
dec
sbb
xchg
ret
cmp
ret
stos
ret
cdq
ret
cdq
push
xor
ret
pop
ret
add
push
cmps
sub
ret
test
fs
ret
and
ret
mov
test
mov
lods
push
ret
scas
ret
mov
ret
xchg
sub
xchg
ret
scas
adc
jl
sub
mov
pop
push
add
jb
lods
ret
ret
test
ret
mov
pop
mov
xchg
ret
ret
lods
adc
jp
ret
cwde
inc
cmp
ret
test
popf
ret
stos
ret
sbb
nop
or
cmps
and
pop
or
das
addr16
ret
mov
mov
push
ret
mov
mov
push
or
xchg
ret
xchg
ret
movs
adc
mov
ret
ret
mov
mov
mov
mov
add
imul
and
and
xor
sbb
mov
xchg
cmp
ret
mov
ret
lods
ret
xchg
mov
xchg
push
push
ret
sub
adc
cmps
ins
push
ret
mov
pushf
dec
pop
ret
push
je
mov
ret
mov
mov
xchg
imul
push
ja
test
xchg
ret
mov
jns
push
push
xor
pop
and
cwde
ret
mov
ret
xchg
mov
js
ret
mov
cmps
ret
xchg
push
ret
fwait
ret
dec
jge
ret
mov
xor
lahf
ss
test
ret
mov
jge
xchg
arpl
mov
mov
mov
cmp
outs
jle
fwait
ret
mov
ret
xchg
pop
arpl
ret
ret
pop
and
xor
pop
adc
sahf
pop
ret
push
and
and
ret
mov
stos
and
ret
movs
jg
ret
xchg
sub
ret
call
jg
mov
mov
sahf
ret
cmps
sub
xchg
xor
ret
xchg
jae
mov
ret
popf
ret
cmps
jl
ret
add
mov
jbe
movs
push
ret
fwait
ret
and
xchg
ret
mov
mov
push
ret
add
pushaw
add
add
ret
mov
pushf
inc
dec
xor
mov
adc
mov
nop
ret
pop
mov
(bad)
ret
pushf
sbb
sahf
ret
call
mov
es
cwde
ret
cmps
pop
jb
mov
call
scas
ret
xor
mov
ret
lods
push
and
nop
ret
test
movs
ret
ret
xchg
ret
mov
xchg
ret
mov
push
pop
ret
stos
ret
mov
ret
mov
ret
scas
and
ret
xchg
dec
or
ret
xchg
ret
scas
inc
popa
add
cmp
sahf
ret
call
sub
xchg
ret
push
xor
ret
fwait
pop
ret
stos
ret
mov
dec
ret
xchg
and
pop
dec
ret
test
test
ret
adc
push
ret
xchg
or
cmps
ret
mov
ret
cdq
ret
mov
ret
jo
ret
sbb
ret
mov
test
test
ret
xchg
inc
ret
ret
mov
adc
mov
ret
ret
mov
mov
ins
ret
mov
cmps
add
xchg
xor
scas
jno
ret
sub
ret
call
and
ret
mov
cmps
or
ret
mov
ret
adc
mov
jno
cmpps
cdq
adc
mov
ret
jns
lea
ret
nop
add
ret
mov
ret
mov
xchg
push
ret
inc
xor
dec
movnti
stos
ret
add
push
dec
ret
xchg
ret
mov
ss
mov
dec
aas
xor
dec
xor
mov
ret
test
xchg
ret
xchg
sub
xchg
ret
movs
ret
popf
popa
dec
ins
dec
or
lahf
pop
pop
ret
mov
ret
stos
imul
test
ret
mov
call
ret
ret
test
ret
ret
xchg
sbb
pushf
ret
ret
cmp
mov
adc
sbb
cmp
lods
jne
add
ret
mov
ret
xchg
and
stos
push
or
mov
mov
ret
lods
(bad)
mov
jae
mov
ret
(bad)
adc
sbb
movs
ret
ret
add
ret
test
mov
pop
ret
scas
pop
inc
jge
lea
ret
popf
ret
scas
ret
mov
ret
mov
mov
aaa
ret
movs
push
ret
movs
push
test
ret
popf
ret
stos
ret
ret
push
ret
ret
ret
mov
cwde
or
ret
xchg
cmp
ret
stos
dec
ret
ret
add
ret
cwde
adc
aaa
jb
sahf
sbb
dec
ret
mov
add
inc
ret
ret
mov
cwde
inc
ret
mov
mov
ret
fwait
ret
mov
ret
mov
mov
mov
sahf
(bad)
mov
ret
mov
inc
ret
mov
es
ret
ret
scas
ret
mov
dec
ret
call
add
inc
ret
mov
mov
cmp
fs
ret
popf
or
ret
lahf
push
ret
ret
xchg
ret
mov
test
mov
cdq
ret
xchg
ret
mov
ret
mov
ret
mov
ja
mov
mov
retw
movs
ret
stos
cmp
mov
xor
ret
xchg
sub
push
ds
xchg
add
xor
fwait
dec
ret
ret
mov
pop
lahf
xor
mov
pop
ret
sub
mov
jb
ret
ret
mov
sahf
dec
cmp
mov
ret
test
mov
ret
pop
ret
bound
ret
mov
ret
ret
mov
ret
retw
pop
ret
test
cmps
ret
test
cmps
ret
xchg
ret
mov
ret
stos
ret
cwde
ret
mov
ret
nop
and
test
jp
mov
ret
cmps
ret
cdq
cs
add
ret
lods
add
xchg
ret
pushf
fs
mov
daa
sub
pushf
ret
mov
jle
ret
ret
ret
movs
sbb
add
or
ret
mov
mov
test
ret
mov
mov
or
lods
ret
xchg
ret
mov
jg
mov
ret
mov
ret
sahf
and
ret
popf
ret
mov
ret
dec
ret
fwait
push
mov
ret
mov
jae
mov
mov
mov
sbb
xchg
pop
ret
mov
ret
ret
cwde
cmp
ret
mov
mov
test
add
push
ret
(bad)
ret
outs
dec
jbe
lods
fs
mov
or
mov
xchg
mov
ret
test
ret
mov
sub
sbb
xchg
cmp
ret
ret
mov
mov
ret
stos
dec
and
ins
ret
xchg
ret
mov
xchg
ret
mov
(bad)
ret
add
test
ret
add
imul
inc
ret
mov
ret
inc
dec
ret
mov
ret
xchg
pusha
ret
mov
movs
and
mov
add
ins
adc
mov
sub
nop
ret
mov
lods
push
ret
scas
sub
dec
je
sahf
adc
ret
mov
sub
mov
mov
mov
ret
(bad)
ret
xchg
mov
adc
sbb
ret
mov
xchg
cmp
ret
ret
pop
ret
lods
jl
mov
mov
mov
mov
ret
pushf
ret
stos
ret
xchg
ret
add
ret
ret
ret
cmps
ret
ret
stos
ret
xchg
ret
ret
xor
cdq
gs
ret
stos
ret
ret
scas
add
cwde
push
ret
test
ret
ret
ret
pop
ret
mov
nop
outs
ret
ret
popf
sub
jns
cmps
sub
xchg
jnp
jne
jge
pushf
ret
mov
nop
jns
movs
jle
stos
adc
cwde
ret
fwait
ret
xchg
imul
sbb
mov
xchg
ret
fwait
ret
jo
ret
test
or
mov
lods
outs
sbb
lahf
pop
ss
jle
push
popf
ret
xchg
ret
or
mov
mov
ret
ret
ret
add
ret
mov
ret
pop
mov
test
imul
pop
dec
ret
xchg
cmp
scas
ret
lahf
jp
ret
ret
lahf
imul
stos
ret
cwde
ret
lahf
push
cmp
movs
ret
ret
mov
popa
jae
mov
ret
add
ret
popf
jno
test
cdq
sbb
mov
mov
ret
mov
and
pushf
adc
(bad)
ret
test
or
addr16
jle
push
ret
mov
push
addr16
jle
ret
movs
ret
test
mov
mov
xchg
dec
ret
jae
mov
stos
ret
nop
inc
push
ret
add
ret
mov
sub
mov
sbb
mov
cmps
ret
push
sub
stos
sub
mov
pusha
or
cmp
mov
push
ret
xchg
ret
cwde
add
sahf
ret
xchg
ret
push
ret
xchg
ret
mov
ret
ret
mov
cmpps
ret
ret
cwde
push
aas
jne
pop
ret
mov
mov
dec
ret
ret
nop
dec
inc
ret
mov
mov
ret
mov
ret
mov
dec
inc
ret
mov
stos
adc
jns
mov
ret
add
adc
xchg
test
inc
push
ret
xchg
ret
imul
ret
ret
cmp
sbb
lea
pop
jp
ret
xchg
ret
cwde
sub
cmp
ret
xchg
ret
mov
ret
cmp
mov
dec
ret
mov
ret
xchg
inc
ret
mov
xor
scas
inc
ret
mov
mov
ret
test
ret
push
ret
lahf
ret
pop
ret
ret
nop
cmp
mov
and
ret
mov
scas
pusha
ret
mov
jne
ret
popf
ret
pushf
ret
mov
ret
stos
push
ret
xchg
ret
and
mov
cwde
arpl
ret
xor
jl
ret
sbb
inc
adc
ret
nop
ret
ret
xchg
ret
xchg
dec
jg
ret
cmp
pushf
aaa
pop
dec
inc
pop
dec
push
ret
mov
mov
ret
ret
xchg
ret
xchg
ret
mov
sub
ret
ret
mov
pop
inc
ret
cmp
xchg
ret
mov
movs
ret
mov
movs
ret
cdq
ret
xchg
ret
mov
mov
pop
mov
ret
ret
mov
cmp
ret
mov
lods
or
ret
xor
mov
call
retw
mov
nop
ret
mov
cmps
ret
call
or
scas
sub
cmp
ret
mov
inc
pop
ret
mov
mov
lahf
add
mov
xchg
ret
mov
mov
mov
ret
cdq
ret
mov
jl
cmps
ret
stos
ret
stos
ret
ret
cmps
ret
mov
ret
mov
ret
popf
add
ret
ret
test
mov
mov
push
push
ret
test
pop
das
ins
inc
jae
nop
ret
mov
mov
pop
ret
ret
mov
pop
ret
inc
ret
xchg
sub
movs
ret
jl
test
fwait
ret
mov
stos
js
mov
arpl
ret
xchg
ret
jne
ret
mov
ret
adc
mov
movs
ret
mov
mov
add
xchg
mov
mov
mov
mov
inc
ret
mov
sub
mov
xchg
ret
mov
xchg
inc
es
mov
mov
ret
mov
scas
ret
test
ret
pop
ret
add
ret
scas
ret
ret
xor
dec
and
scas
sub
mov
mov
ret
test
ret
push
ret
mov
xchg
inc
dec
sbb
mov
pop
ret
xchg
ret
xchg
jle
gs
scas
ret
ret
xchg
popa
ret
(bad)
jle
ja
fwait
ret
cdq
ret
xor
xchg
ret
ret
mov
xchg
je
dec
push
mov
ret
mov
mov
popf
ret
ret
mov
mov
ret
sbb
mov
mov
mov
mov
mov
ret
jbe
sub
ret
stos
ret
add
xchg
xchg
pop
ret
mov
ret
and
dec
sub
mov
mov
mov
xor
mov
mov
add
ret
mov
push
pop
ret
retw
(bad)
ret
mov
mov
ret
mov
cmp
ret
add
ret
mov
ret
scas
ret
mov
ret
xor
sub
mov
inc
and
fs
add
ret
sub
movs
ret
sub
push
ret
cmps
sbb
mov
ret
(bad)
ret
mov
mov
cs
mov
fwait
ret
ret
mov
test
mov
ret
xchg
js
lahf
ret
dec
pop
ret
mov
adc
ret
cmpps
mov
lods
cmp
mov
pop
ret
add
jle
mov
popf
jbe
jnp
add
mov
ret
add
cmp
lods
ret
xchg
test
ret
xchg
mov
ret
cmps
adc
cwde
ret
add
cwde
ret
mov
push
ret
mov
mov
mov
pop
fwait
inc
(bad)
ret
sub
ret
ret
mov
and
imul
ret
mov
ret
mov
ret
xchg
ret
mov
lods
push
ret
cdq
ret
xchg
jns
call
test
popf
dec
ret
call
jnp
or
ds
js
mov
mov
ret
ret
mov
test
or
test
xchg
ret
scas
add
mov
xor
mov
test
mov
ret
mov
ret
bound
push
ret
xchg
push
ret
mov
mov
outs
ret
mov
popf
ins
je
jae
dec
inc
inc
pop
ret
stos
jae
ret
mov
and
ret
stos
jne
sbb
movs
pop
cmp
ret
ret
mov
imul
dec
ret
scas
sbb
cdq
bound
push
ret
cdq
ret
mov
test
add
cmp
add
ret
mov
add
mov
popf
ret
mov
mov
ret
xchg
ret
inc
ret
mov
stos
js
mov
xchg
fs
mov
xchg
ret
mov
ret
inc
pop
ret
stos
sub
ret
test
mov
pop
and
xchg
movs
inc
ret
mov
mov
push
movs
jge
stos
ret
push
add
aaa
ret
ret
ret
inc
pop
sbb
pop
add
pop
ret
lahf
ret
pop
ret
mov
pop
xchg
sbb
mov
dec
ret
ret
cmps
ret
cmp
ret
xchg
ret
cmps
ret
fwait
and
nop
ret
ret
inc
adc
push
ret
mov
cmps
adc
ret
movs
add
ret
xchg
adc
push
inc
ret
or
ret
fwait
jg
test
mov
xor
mov
ret
sub
outs
ret
mov
ret
xchg
jne
mov
mov
mov
ret
mov
mov
mov
ret
xchg
imul
push
ret
test
ret
mov
ret
ret
xchg
ret
xchg
inc
cmp
xor
jae
mov
cmps
ret
xor
nop
ret
mov
ret
cwde
sub
add
inc
outs
sbb
ret
ret
ret
lods
ret
pushf
ret
xchg
adc
mov
mov
popf
ret
cmps
and
ret
ret
xchg
ret
mov
ret
test
xchg
ret
mov
mov
cmps
sbb
lahf
inc
ins
push
ret
ret
add
ret
mov
pop
dec
ret
xchg
ret
test
popf
ret
cmps
ret
mov
mov
ret
movs
or
sahf
ret
fwait
adc
ret
xchg
ret
mov
xor
ret
xchg
ret
add
mov
ret
mov
pop
and
xchg
daa
sub
xor
xchg
ret
mov
lods
imul
adc
ret
stos
ret
mov
pop
call
jg
mov
ret
xchg
ret
call
ret
mov
call
inc
ret
ret
mov
ret
xchg
ret
test
stos
bound
jo
cmp
pop
ret
mov
mov
ret
mov
ret
mov
mov
push
jle
mov
mov
mov
adc
test
ret
mov
ret
xchg
add
mov
scas
ret
mov
ret
mov
test
inc
gs
imul
add
cmpps
ret
xchg
dec
ret
mov
xchg
ret
movs
ret
mov
pop
jl
ret
mov
aas
ret
xchg
push
ret
test
xchg
cmp
mov
xchg
ret
xchg
ret
mov
sahf
jne
ja
mov
mov
or
mov
fwait
ret
test
xchg
test
ret
stos
ret
pop
scas
adc
xchg
xor
mov
jge
mov
lods
xor
mov
ret
mov
mov
ret
mov
mov
ret
mov
ret
or
mov
pop
ds
mov
sahf
adc
ret
lea
mov
ret
xchg
ret
test
(bad)
ret
ret
ret
ret
ret
stos
cs
mov
jge
add
ret
ret
lahf
pusha
ret
adc
sbb
mov
ret
ret
mov
test
scas
ret
ret
sahf
xor
ret
mov
and
add
ret
mov
mov
xchg
dec
ret
mov
ret
add
jnp
movs
pop
add
ret
mov
and
scas
inc
ret
xchg
pop
ret
mov
gs
mov
and
dec
pop
ret
add
aaa
ret
test
ret
mov
cs
mov
cwde
retw
mov
ret
lods
ret
stos
ret
cmps
ret
mov
adc
and
sahf
ss
mov
ret
adc
sahf
sbb
pusha
ret
mov
pop
aaa
ret
scas
ret
mov
mov
mov
xchg
pusha
ret
mov
xchg
pop
add
or
ret
dec
outs
jnp
ins
ret
lahf
ret
mov
ret
mov
inc
dec
ret
mov
lods
ret
ds
test
mov
mov
push
ret
xchg
push
ret
xchg
push
ss
inc
ret
mov
ret
mov
ret
scas
ret
xchg
ret
mov
add
ret
mov
ret
lods
ret
xor
xchg
gs
xchg
ret
stos
ret
ret
test
xchg
ret
add
ret
mov
ret
mov
mov
push
ret
mov
mov
mov
ret
mov
fwait
ret
add
dec
jnp
ret
scas
ret
xchg
pop
adc
nop
cs
mov
cmp
stos
ret
call
ret
ret
sahf
ret
cmps
cmp
movs
clts
ret
popf
ret
stos
ret
fwait
jo
nop
ret
mov
cmp
popf
dec
ret
mov
mov
push
ret
mov
ret
mov
nop
sub
push
ret
xor
stos
xor
xchg
pusha
jnp
mov
daa
ret
add
dec
pop
inc
ret
movs
inc
ret
lods
ret
test
mov
mov
mov
(bad)
ret
push
jle
mov
stos
ret
test
mov
movs
ret
ret
xchg
sub
mov
cdq
ret
ret
test
ret
xchg
ret
cmp
pushf
jg
ret
mov
cmp
ret
lods
popa
pusha
xor
scas
pusha
ret
cwde
ret
xchg
ret
mov
nop
ret
mov
ret
pop
ret
ret
mov
mov
ret
xor
fwait
ret
lods
js
ret
mov
ret
mov
lods
dec
adc
mov
mov
ret
ret
outs
ret
ret
mov
xchg
imul
or
ret
ret
mov
mov
ss
mov
movs
inc
ret
mov
ret
ret
ret
movaps
or
mov
ret
mov
mov
mov
ret
mov
inc
jo
xchg
ret
ret
mov
mov
mov
ret
or
xchg
ret
mov
mov
ret
cmp
ret
xchg
ret
xchg
ret
mov
stos
pop
outs
pop
ret
sahf
or
xchg
ret
(bad)
push
and
mov
xchg
jns
xor
call
ret
aaa
ret
scas
jns
xchg
jbe
cmp
ret
pop
lods
inc
ret
mov
cdq
sub
ret
mov
mov
mov
mov
sub
(bad)
ret
mov
ret
mov
ret
lahf
pop
ret
mov
ret
xchg
ret
popf
ret
pop
test
push
add
inc
inc
cmp
mov
xor
mov
ret
stos
ret
mov
mov
je
ret
ret
cmps
ret
mov
push
and
aaa
and
ret
lods
ret
nop
ret
mov
add
ret
pushf
ret
test
lods
ja
cwde
ret
scas
ret
mov
cdq
ins
inc
ret
mov
ret
inc
cmp
sub
ss
ret
lahf
ret
ret
scas
ret
cmps
ret
ret
scas
ret
ret
mov
ret
xchg
ret
popf
jbe
push
ret
lea
ret
(bad)
sub
gs
jle
jne
fwait
jne
ret
cmps
ret
ret
lods
jne
ret
and
inc
ret
call
ret
mov
mov
ret
ret
call
ret
mov
mov
cwde
cmp
add
ret
sahf
ret
movs
ret
mov
push
ret
mov
scas
ret
ret
ret
ret
ret
or
or
mov
or
ret
mov
test
ret
pop
cmp
(bad)
ret
popf
add
sub
cdq
ret
ret
ret
ret
push
ret
inc
ret
cwde
ds
lahf
ret
mov
pop
ret
mov
xchg
ret
mov
mov
push
jne
pushf
and
lods
ret
xor
or
ret
test
das
ret
mov
xchg
fs
cmp
mov
inc
ret
mov
xchg
pop
push
xor
ret
mov
inc
ret
mov
ret
xchg
ret
ret
xchg
ret
ret
ret
xchg
ret
pop
ret
mov
adc
mov
ret
ret
mov
ret
xchg
dec
and
mov
mov
fwait
pop
ret
mov
ret
mov
call
add
ret
mov
mov
ret
fwait
ret
test
sbb
ret
xchg
ret
add
cmp
gs
stos
ret
movs
ret
xchg
mov
ret
stos
ret
add
dec
and
push
ret
mov
jns
ret
cmp
sub
ret
mov
ret
ret
xchg
ret
mov
cmp
mov
test
xor
add
ret
jl
ret
ret
pop
ret
add
popa
xor
dec
ret
mov
mov
mov
ret
push
ret
mov
movs
jge
mov
ret
xchg
xchg
mov
xchg
pop
sbb
mov
add
inc
pop
inc
push
ret
ret
cmp
ret
mov
mov
ret
mov
mov
sub
dec
ret
mov
scas
ret
sbb
test
or
jg
mov
sahf
ret
mov
ret
cmps
ret
adc
movs
ret
sahf
xor
xchg
ret
movs
ret
test
ret
mov
ret
mov
js
ret
xchg
jae
js
add
jp
and
or
mov
xchg
ret
mov
mov
pushf
js
das
ret
or
ret
stos
ret
ret
ret
ret
ret
ret
call
sub
mov
adc
push
sub
jne
mov
ret
nop
ret
mov
mov
mov
mov
sub
mov
ret
stos
ret
add
ret
mov
ret
mov
ret
push
pop
ret
mov
pushf
ret
gs
jge
cwde
dec
sub
ret
xchg
sub
lahf
ret
movs
ret
inc
ret
push
ret
sbb
sbb
mov
jbe
ret
xchg
ret
xchg
ret
mov
dec
arpl
popf
inc
popa
ret
mov
cwde
ret
ret
sub
mov
ret
fwait
ret
ret
push
ret
mov
test
ret
mov
mov
movs
push
sbb
mov
aas
dec
bound
ret
lahf
pop
ret
mov
pop
cmp
add
(bad)
ret
test
xchg
jno
ret
fwait
pop
jae
ret
mov
imul
sub
ret
nop
ret
xchg
sbb
xchg
dec
outs
ret
ret
mov
adc
scas
outs
sbb
add
mov
test
ret
mov
sub
mov
xchg
cdq
push
sub
mov
ret
mov
mov
mov
lea
ret
mov
cdq
ret
lea
cmp
mov
movs
ret
sbb
aas
jle
mov
mov
ret
xor
mov
ret
mov
xor
mov
lods
ret
mov
ret
ret
fwait
adc
xchg
sub
mov
pop
mov
scas
ret
lahf
ret
movs
push
ret
stos
sub
(bad)
add
test
xchg
ret
xchg
pop
inc
outs
or
mov
mov
push
aaa
ret
cmps
cmp
cmps
ret
scas
push
ret
(bad)
ret
pop
ret
ret
test
ret
xchg
xor
sbb
ret
nop
ret
adc
movs
adc
jns
ret
xchg
adc
jno
xchg
ret
mov
nop
ret
mov
ret
mov
cmp
jbe
push
ret
ret
mov
ret
popf
ret
cmps
ret
test
scas
and
inc
adc
xor
ret
mov
call
mov
ret
pushf
ret
xchg
ret
ret
mov
gs
xchg
xchg
ret
cmps
add
lods
ret
xchg
xchg
ret
test
and
ret
lods
or
ret
ret
lahf
ret
(bad)
pop
adc
and
nop
inc
add
(bad)
dec
ret
mov
movs
ret
mov
lods
push
xchg
ret
scas
jne
xchg
pop
ret
ret
cmps
ret
ret
mov
pop
ret
add
push
sbb
ret
ret
cdq
ret
pop
(bad)
adc
ret
add
call
mov
fs
ret
xchg
ret
cmps
popa
ret
mov
mov
ret
test
add
xchg
gs
pop
adc
push
xor
cdq
ret
ret
lods
ret
outs
ret
lods
ret
mov
sahf
ret
cwde
ret
add
test
xchg
imul
xchg
ret
mov
ret
ret
mov
dec
pusha
cmp
pop
ret
pushf
push
dec
ret
fwait
ret
ret
sbb
lahf
push
ret
scas
ret
movs
ret
cmps
and
ret
dec
ret
mov
scas
ret
movs
data16
ret
inc
inc
ret
nop
ret
imul
ss
xchg
ret
scas
ret
ret
ret
mov
mov
inc
daa
sub
ret
mov
sahf
ret
mov
cmp
cmps
or
pushf
ret
ret
test
xchg
js
(bad)
ins
ret
cdq
ret
adc
nop
ret
scas
ret
xor
inc
or
pop
ret
addr16
(bad)
ret
mov
jo
xchg
sub
ret
mov
ret
call
dec
ret
cdq
push
ret
mov
mov
mov
ret
ret
mov
sub
movs
ret
pop
dec
inc
or
mov
ret
mov
xchg
ret
ret
mov
mov
sub
ret
mov
pushf
pop
ret
cmps
sub
ds
cmp
ret
mov
and
xchg
ret
stos
ret
xchg
ret
pop
(bad)
pcmpgtw
ret
mov
test
mov
push
push
xor
xchg
add
retw
mov
adc
test
mov
push
pop
es
imul
ret
mov
fwait
ss
sahf
imul
cmp
mov
cdq
ret
mov
xchg
outs
push
push
ret
add
ret
mov
ret
sub
test
mov
mov
ret
mov
push
ret
ret
add
ret
sahf
ret
(bad)
ret
mov
mov
ret
cmps
xor
ret
cwde
sbb
ret
xchg
or
mov
ret
mov
ret
xchg
ret
sbb
mov
or
xchg
ret
mov
mov
mov
test
add
test
ret
mov
mov
push
ret
cmps
jb
ret
xchg
ret
ret
jge
cmp
ret
pushf
add
pop
xor
pushf
cs
outs
ret
mov
ret
mov
dec
ret
nop
ret
xchg
and
xor
movs
ret
xchg
sub
mov
nop
ret
movs
pop
sub
ret
add
mov
call
ret
mov
lods
pop
outs
and
ret
mov
add
stos
ret
mov
mov
mov
ret
mov
mov
test
sbb
ret
test
mov
ret
mov
add
ret
test
xchg
push
push
bound
dec
ret
sahf
addr16
movs
dec
push
inc
push
jnp
mov
ret
mov
cmp
add
pusha
or
ret
ret
pushf
ret
ret
xchg
ret
mov
pop
ret
add
ret
stos
ret
mov
mov
test
ret
mov
add
ret
xchg
ret
add
ret
cdq
pop
ret
test
fs
ss
ret
mov
mov
cmp
sahf
outs
ret
test
ret
popf
ret
ret
test
cmps
add
xchg
adc
ret
cmps
push
and
mov
cdq
and
ret
mov
sbb
mov
stos
ret
call
ret
ret
xchg
pop
xor
xchg
ret
push
ret
mov
mov
xchg
and
mov
test
ret
ret
and
mov
ret
scas
ret
mov
mov
popa
cmp
sbb
sub
nop
jae
mov
ret
cmps
ret
jg
and
scas
inc
ret
mov
lods
inc
ret
mov
cmps
ret
mov
jle
sbb
cmps
ret
mov
mov
ret
pop
push
ret
ret
ret
ret
ret
test
add
cmp
mov
ret
sbb
or
stos
ret
xchg
ret
ret
lahf
aaa
ret
test
add
ret
and
sub
(bad)
ret
cmps
ret
pop
ret
mov
and
push
push
ret
mov
mov
mov
xchg
ret
xchg
pop
add
mov
mov
ret
test
ret
mov
xor
push
add
xchg
ret
mov
ret
mov
ret
(bad)
sbb
mov
sbb
dec
adc
aaa
ret
lea
mov
push
ret
cmps
bound
and
xchg
jne
ret
ret
mov
ret
mov
ret
mov
mov
and
mov
push
xor
push
pop
ret
ret
mov
test
mov
movs
dec
ret
mov
dec
and
ds
mov
jb
ret
cwde
ret
and
ret
sub
lods
ret
jp
pop
ret
test
xchg
pop
ret
lea
ret
mov
test
xchg
ret
ret
cmps
ret
vprotq
mov
sub
ret
xchg
test
lods
ret
nop
cmp
stos
ret
mov
add
xor
ret
mov
inc
popa
ret
add
and
ret
or
call
mov
ret
ret
mov
scas
ret
ret
mov
jg
stos
ret
call
ret
stos
ret
(bad)
je
xchg
mov
lahf
ret
mov
pop
ret
ret
pushf
ret
ret
xchg
ret
mov
xchg
add
jb
sbb
ret
xchg
gs
pop
ret
call
and
lods
ret
ret
xchg
ret
lea
jbe
ret
adc
mov
ins
ret
xor
xchg
cmps
push
ret
movs
popa
ret
jae
ds
ret
mov
retw
ret
mov
mov
mov
stos
ret
mov
push
ret
xchg
ret
mov
movs
ret
mov
test
mov
cs
sbb
ret
lods
ret
ret
pushf
ret
inc
ret
pushf
push
ret
movs
ret
movs
ret
mov
ret
ja
ret
xchg
ds
call
ret
test
stos
outs
ret
or
adc
ret
lods
and
mov
ret
scas
push
jle
nop
ret
ret
push
ret
ret
mov
push
dec
ret
mov
xchg
ret
mov
movs
ret
mov
pop
ret
test
ret
ret
(bad)
jg
push
adc
dec
jo
jnp
ret
mov
pop
ret
ret
lods
ret
mov
mov
call
ret
and
ret
stos
pusha
ret
mov
js
ret
cdq
ret
mov
push
ret
xor
xchg
ret
xchg
ret
xchg
jp
cwde
ret
movs
ret
xchg
jp
xchg
ret
ret
mov
pushf
ret
cmps
ret
jno
cmp
ret
lods
cmp
lods
ret
lods
ret
mov
ret
mov
ret
cwde
inc
ret
lods
ret
xchg
or
cwde
addr16
nop
ret
cmps
ret
mov
ret
lahf
dec
ret
xor
mov
mov
adc
push
ret
ret
mov
ja
mov
xor
mov
ret
add
ret
xchg
test
mov
push
ret
xchg
cwde
ret
mov
pop
ret
mov
ret
mov
popa
push
ret
(bad)
jnp
jge
ret
mov
mov
cs
pop
and
or
ret
xchg
test
ret
test
mov
ret
mov
ret
popf
inc
pop
jns
fwait
ret
lods
ret
mov
dec
ret
ret
mov
ret
mov
ret
test
test
cdq
adc
ret
mov
mov
ret
add
ret
test
jns
ret
je
mov
inc
push
ret
scas
ret
ret
xchg
mov
mov
ret
test
mov
jbe
ret
xchg
mov
ret
sub
push
xor
ds
mov
mov
mov
ins
ret
add
popf
ret
ret
mov
xor
mov
or
jl
mov
ret
test
xchg
mov
fwait
pop
ret
fwait
ret
scas
das
sbb
ret
mov
ret
mov
fwait
ret
movs
ret
ret
jae
pushf
adc
ret
xchg
jle
movs
jp
mov
xchg
ret
pop
ret
mov
ret
lods
push
imul
push
ret
test
mov
ret
stos
ret
ret
mov
or
dec
ret
or
ret
nop
ret
test
cwde
ret
dec
sbb
mov
mov
mov
ret
sbb
inc
inc
ret
mov
ret
sub
pop
xchg
ret
ret
test
mov
test
mov
pushf
ret
mov
pop
ret
lahf
sub
xchg
sbb
ret
mov
fwait
push
ja
ret
xchg
ret
mov
jnp
ret
ret
sbb
test
pop
sbb
ret
mov
imul
ret
xchg
ret
ret
mov
ret
cdq
pop
cmp
test
ret
mov
ret
mov
jle
ins
ret
cmps
ret
xchg
ret
mov
test
mov
lods
ret
cmps
ret
mov
ret
nop
adc
mov
cmps
movnti
jns
ret
nop
ret
lods
ret
ret
ret
(bad)
ret
mov
ret
lahf
ret
pushf
aas
or
mov
or
mov
scas
and
mov
ret
sbb
mov
imul
adc
ret
popf
sub
mov
mov
jbe
cdq
imul
ret
mov
ret
mov
fwait
retw
mov
mov
call
mov
ret
xchg
ins
ret
mov
mov
test
inc
adc
scas
cmp
pop
adc
jnp
je
cmp
add
ret
mov
mov
test
cdq
ret
ins
ret
mov
mov
mov
mov
xchg
mov
ins
ret
ret
mov
lea
stos
ret
sub
ret
lods
js
sub
ret
mov
ret
scas
ret
add
ret
mov
push
cs
cmps
ret
mov
mov
mov
ret
add
pushf
ret
sbb
retw
test
mov
lea
xchg
mov
xor
lahf
ret
dec
sbb
pop
dec
jns
jno
arpl
mov
ret
nop
ret
xchg
ret
mov
ret
xchg
ret
mov
inc
ret
add
adc
pop
ret
cmp
ret
scas
ret
lods
pop
adc
ret
xchg
sbb
jle
mov
adc
ret
mov
dec
sbb
pop
ret
test
cmps
ret
or
ret
lods
ret
nop
ret
test
ret
scas
add
fwait
ret
scas
pop
popa
pop
ret
mov
ret
scas
pop
dec
ret
ret
cmps
add
mov
add
jnp
ret
dec
ret
mov
mov
ret
mov
ret
test
xchg
ret
cmps
ret
mov
jg
dec
push
ret
ret
sub
ret
cwde
push
ret
scas
ret
mov
ret
xchg
xor
ret
ret
xchg
ret
xchg
ret
xchg
cmp
dec
ret
lods
adc
pop
ret
mov
ret
scas
xor
scas
pop
dec
ret
mov
mov
mov
jb
movs
adc
scas
ret
call
lods
ret
sahf
sub
ret
popf
jae
ret
mov
mov
ss
mov
stos
ret
data16
mov
mov
ret
mov
das
ret
jno
or
mov
stos
ret
add
scas
addr16
mov
mov
xor
mov
add
ret
ret
call
mov
ret
mov
ret
ret
mov
mov
test
sub
mov
(bad)
ret
ret
xchg
ret
ret
fs
mov
mov
ret
mov
lods
ret
xchg
fs
ret
movs
dec
inc
inc
movnti
ret
movs
ret
or
or
xchg
push
cmp
ret
cdq
ret
xchg
inc
sbb
xchg
ds
test
es
mov
test
mov
jle
jnp
ret
mov
ret
lahf
and
ret
mov
ret
lods
jo
ret
mov
xchg
ret
movs
ret
mov
lahf
ret
ret
cmps
ret
xchg
pusha
ret
xchg
ret
movs
ret
lods
ret
movs
ret
popf
ret
lods
ret
fwait
ret
cmp
or
mov
aaa
push
ret
(bad)
mov
mov
pop
mov
ret
es
pop
ja
or
ret
popf
dec
ins
dec
ret
cmps
ret
mov
fwait
gs
ret
mov
adc
dec
ret
stos
pop
jns
mov
mov
ret
test
stos
jb
xchg
ret
mov
add
jge
mov
ret
es
mov
jge
ret
add
jae
mov
ret
mov
ret
mov
ret
xchg
push
pop
ret
xor
(bad)
ret
mov
xchg
inc
pop
push
push
ret
add
push
ret
movs
inc
ret
cmps
ret
or
mov
test
pop
or
cwde
and
xchg
pop
sub
cmps
ret
xchg
mov
stos
ret
ret
mov
inc
ss
pushf
xor
test
xor
mov
push
ret
sub
mov
ss
mov
test
mov
ret
scas
ret
xchg
ret
ret
ret
xchg
ret
sub
ret
cdq
xor
xchg
daa
pop
add
mov
push
inc
ret
lea
nop
ret
popf
inc
sub
test
ret
cmps
ret
(bad)
ret
mov
daa
or
xchg
cmps
jne
xchg
add
push
stos
ret
xchg
sbb
xchg
ret
pop
ret
mov
push
ret
ret
cmps
inc
pop
das
ret
inc
ret
push
jle
mov
mov
or
push
ret
movs
push
ret
scas
ret
(bad)
sbb
lods
pop
push
ret
mov
ret
ret
mov
ret
popf
ret
mov
add
ret
xchg
cmpps
adc
mov
ret
mov
sbb
cmps
ret
mov
xor
jo
test
ret
popf
ja
ret
xchg
ret
mov
xchg
ret
nop
dec
arpl
ja
mov
adc
xchg
ret
mov
xchg
push
dec
sub
pop
mov
sub
mov
nop
xor
ret
xchg
dec
add
ret
mov
mov
mov
ret
and
mov
ret
xchg
or
and
ret
mov
adc
ret
mov
call
mov
and
mov
ret
nop
xor
mov
jg
mov
ret
test
ret
mov
ret
sbb
ret
xchg
sbb
mov
sbb
xchg
ret
add
pop
ret
mov
xchg
xor
mov
ret
xchg
xchg
arpl
mov
mov
mov
ret
add
ret
je
dec
ret
ret
lods
ret
mov
and
ret
test
ret
mov
ret
jo
ret
add
sub
xor
ret
xchg
jle
ss
ret
ins
ret
ret
ret
mov
ret
mov
ret
cdq
push
ret
mov
pop
aas
ret
xor
push
inc
ret
ins
pop
adc
mov
test
mov
xchg
ss
mov
push
ret
mov
ret
test
test
stos
dec
adc
sahf
adc
ret
adc
pushf
cmovl
mov
xor
ret
mov
ret
ins
ret
and
nop
jne
pop
cmp
or
ret
xchg
mov
ret
cdq
xor
mov
jno
ret
scas
ret
mov
ret
mov
xchg
ret
test
ret
ret
scas
adc
ret
or
ret
xchg
jg
ret
ret
mov
aaa
ret
xchg
push
ss
add
ret
add
ret
xchg
js
ja
mov
mov
xor
dec
ret
cmps
ins
ret
xchg
jp
sahf
ret
dec
dec
ret
xchg
push
outs
ret
xchg
ret
pop
mov
ret
lods
ret
xchg
ret
ret
arpl
imul
aas
ret
stos
ret
xchg
ret
mov
ret
jb
inc
ret
mov
cs
sub
cmp
movs
ret
mov
test
cmps
ret
mov
mov
mov
push
ret
sahf
gs
mov
ret
xchg
push
ret
cwde
ret
popf
adc
lods
ja
sahf
ret
xchg
ret
ret
scas
ret
ret
nop
je
nop
or
lods
js
inc
je
test
ret
cdq
and
xchg
ret
movs
sbb
ret
retw
mov
xchg
outs
push
ret
test
ret
mov
ret
ret
lea
ret
xchg
ret
cdq
push
jg
pushf
adc
ret
ret
mov
ret
mov
ret
xchg
or
mov
ins
ret
mov
mov
mov
mov
stos
(bad)
ret
mov
sbb
ret
add
cmp
pop
ret
xchg
push
jae
add
ret
mov
sahf
ret
mov
adc
mov
mov
lea
dec
push
ret
stos
sbb
popf
pop
ret
sahf
adc
scas
ret
sahf
ret
mov
mov
mov
pop
sub
xchg
lods
ret
pop
or
pop
ret
ret
cmp
cmp
ret
xchg
sub
cmps
sub
pushf
ret
cmps
sub
pushf
push
ret
mov
mov
movs
fs
nop
ret
scas
dec
dec
ret
xchg
xor
or
cdq
ret
cwde
push
outs
ret
add
xchg
ret
push
ret
bound
and
push
mov
aaa
ret
scas
ret
or
ret
ret
xchg
ret
fwait
ret
pop
cwde
sub
mov
mov
test
gs
ret
xchg
sbb
mov
ret
xchg
mov
xchg
sbb
popf
ret
xchg
and
jno
fwait
ret
xchg
retw
mov
mov
ret
mov
ret
jle
inc
ret
test
ret
pushf
ret
mov
push
pop
ret
xchg
ret
mov
mov
ret
popf
ret
inc
inc
ret
sahf
pop
ret
mov
ret
mov
add
ret
test
nop
ret
mov
inc
ret
movs
ret
xchg
addr16
xchg
ret
mov
daa
ret
ret
mov
ret
mov
mov
mov
ret
mov
cdq
cs
mov
inc
ret
(bad)
ret
ret
lea
movs
ret
mov
test
ret
add
ret
add
popf
ret
mov
cdq
ret
ret
add
ret
lods
ret
xchg
sbb
ret
ret
mov
cmps
ret
ret
ret
xchg
ret
mov
mov
push
lea
pushf
sub
stos
and
mov
ret
ret
xchg
xchg
ret
test
inc
dec
imul
ret
cmps
ret
cmps
or
xchg
adc
mov
mov
ret
mov
push
ret
stos
sbb
xchg
xchg
mov
mov
test
ss
mov
mov
ret
cmps
ret
or
add
es
ret
ss
mov
ret
ret
mov
call
ret
ret
scas
jge
adc
inc
cmp
mov
inc
ret
test
mov
ret
test
ret
xchg
or
ret
adc
ret
mov
ret
xchg
ret
nop
sbb
imul
xchg
push
ret
mov
ret
xchg
push
ret
jns
sahf
cmp
ret
mov
scas
ret
scas
ret
mov
push
adc
mov
pop
ret
xchg
mov
ret
mov
das
dec
imul
xchg
je
mov
xchg
sub
xchg
ret
xchg
mov
cwde
pop
dec
sub
sahf
and
mov
ret
scas
ja
ret
popf
xor
mov
mov
nop
jp
mov
pop
pusha
inc
ret
add
pop
ret
add
test
ret
push
pop
ret
test
ret
mov
mov
ret
mov
xchg
cdq
cmp
mov
mov
mov
or
mov
xchg
ret
xchg
and
mov
ret
mov
dec
ret
mov
mov
mov
ret
xchg
arpl
mov
lahf
ret
add
je
scas
add
mov
dec
ret
test
lahf
ret
movs
and
inc
or
ret
mov
gs
mov
ret
lods
ret
call
ret
xor
ret
mov
add
add
mov
mov
test
mov
mov
ja
ret
xchg
ret
movs
ret
popf
ret
mov
xor
ret
lods
ret
arpl
dec
ret
lea
ret
ret
mov
ret
xchg
ret
mov
scas
jns
ret
dec
ret
ret
dec
ret
call
ret
mov
test
ret
xchg
cmp
mov
addr16
je
(bad)
ret
fwait
ss
xchg
ret
mov
ret
mov
mov
cmp
stos
outs
imul
sub
xor
ret
mov
daa
add
xchg
ret
test
pop
ret
movs
ret
movs
ret
pop
aaa
aaa
and
inc
dec
sub
cmp
imul
ret
lods
inc
je
xchg
ret
ret
test
xchg
adc
and
call
cmp
sub
xor
ret
call
ret
lods
ret
xchg
lea
pop
adc
xchg
ret
scas
dec
or
mov
inc
ret
mov
gs
test
mov
lea
mov
mov
mov
lods
ret
movs
push
popa
ret
mov
ret
fwait
pop
ret
add
ss
mov
xor
ret
pop
adc
xchg
lahf
ret
mov
movs
ret
mov
ret
mov
or
sub
ret
mov
or
sub
adc
jnp
ret
sbb
xchg
ret
sbb
pushf
xor
mov
ret
push
xchg
ret
mov
xor
mov
lods
ret
cmps
ret
xchg
pusha
ret
mov
mov
mov
ret
ret
mov
je
ret
mov
popf
ret
fwait
push
ret
lods
add
ret
test
ins
gs
xchg
xchg
ret
sahf
ret
mov
mov
xchg
ret
xchg
ret
stos
ret
ret
stos
ret
xor
lods
dec
sbb
test
and
mov
test
jae
mov
pop
jle
sahf
ret
xchg
mov
mov
xchg
jnp
xchg
ret
mov
ret
cmps
ret
test
sbb
scas
push
ret
mov
cwde
jns
dec
xor
ret
cs
ret
xor
xor
cmps
ret
ret
sahf
ret
lahf
inc
ret
mov
mov
pop
ret
movs
ret
mov
ret
ret
mov
mov
xchg
ret
movs
ret
sahf
ret
lahf
ret
mov
ret
xchg
push
push
ret
scas
ret
mov
test
ret
jns
jp
ret
test
lods
push
ret
fwait
dec
pop
inc
ret
pop
dec
dec
pop
or
fwait
pop
ret
mov
mov
mov
mov
dec
or
fs
and
add
jne
add
ret
sub
cdq
ret
ret
movs
ret
xchg
ret
ret
popf
or
mov
xor
adc
ret
sub
call
add
outs
ret
xchg
or
ret
fwait
ret
ret
mov
mov
sub
xchg
jae
jl
ret
xchg
outs
push
cs
ret
mov
ret
ret
ret
cwde
ret
pop
ret
xchg
ret
mov
add
adc
ret
add
push
ret
mov
ret
ret
mov
ret
xchg
ret
jnp
ret
popf
pop
push
ret
mov
cmp
mov
scas
sub
push
ret
xchg
ret
mov
mov
xchg
ret
mov
ret
lgdtd
pop
sbb
imul
ret
or
push
ret
fwait
ret
fwait
sbb
xchg
daa
ret
add
ins
jl
ret
mov
xor
mov
inc
ret
mov
ret
lahf
ret
pop
ret
mov
xchg
push
ret
ret
sub
mov
ret
lods
ret
xor
lods
push
pop
ret
mov
inc
ret
ret
ret
cwde
push
ret
sbb
mov
add
test
ret
test
mov
add
mov
ret
xchg
xchg
ret
mov
ret
mov
mov
mov
xchg
sahf
adc
cdq
ret
ret
cdq
xor
cmp
ret
lahf
ret
mov
test
dec
jg
test
pushf
imul
fs
cwde
ret
ret
mov
pop
push
ret
cmps
ret
xchg
ret
xchg
ret
sahf
push
ret
nop
ret
movs
js
mov
ret
mov
jbe
dec
inc
imul
jle
ins
ret
mov
inc
jnp
jb
xchg
ret
mov
lahf
inc
ret
xchg
ret
mov
scas
ret
fwait
jp
ret
sub
ret
mov
mov
lods
push
adc
adc
sub
pop
jle
ret
xchg
ret
mov
mov
mov
pop
data16
ret
lea
nop
ret
(bad)
ret
mov
ret
test
dec
ret
ret
lods
ret
xchg
js
ret
mov
add
mov
mov
(bad)
ss
lods
arpl
dec
sbb
jp
mov
ret
mov
ret
call
lods
ret
mov
ret
ret
sub
xchg
ret
add
ret
mov
ret
add
mov
or
mov
xchg
sahf
ret
sub
ret
add
ret
dec
outs
add
add
xor
ret
movs
pop
ret
pop
adc
nop
jns
xchg
mov
ret
and
jns
mov
pop
jae
push
push
ret
add
ret
mov
ret
mov
ret
xchg
ret
mov
ss
xchg
add
ret
mov
ret
test
xchg
xchg
ret
lods
daa
ret
test
scas
and
mov
scas
ret
xchg
ins
push
ret
mov
lahf
pop
ret
sub
ret
ret
fwait
ret
sahf
ret
movs
ret
mov
adc
ret
mov
xchg
outs
ret
test
or
cmp
pushf
ret
cmp
nop
push
ret
mov
jno
ret
mov
xchg
or
mov
sub
mov
nop
ret
sub
ret
ret
mov
ret
ret
xor
ret
mov
ret
add
imul
xchg
ret
mov
push
ret
ret
cmps
ret
pop
ret
scas
ret
scas
ret
xchg
das
jns
test
mov
cwde
ret
mov
(bad)
nop
ret
mov
stos
ret
movs
ret
mov
ret
jnp
inc
imul
ret
stos
(bad)
ret
mov
ret
movs
dec
push
push
sub
ret
add
dec
ret
pushf
xor
mov
push
mov
ret
movs
ret
mov
movs
ret
ret
pop
jne
mov
ret
scas
jae
mov
mov
ret
xchg
ret
mov
mov
jle
mov
add
ret
mov
(bad)
ret
test
xchg
push
or
fwait
ret
ret
nop
or
xchg
dec
cmp
es
fwait
xor
add
ret
call
dec
ret
test
xchg
ret
nop
xor
mov
ret
xchg
ret
xchg
push
and
ret
pusha
ret
mov
ret
xchg
ret
stos
ret
popf
ret
nop
sub
ret
sahf
sub
mov
lods
sub
add
mov
ret
xchg
pop
ret
xchg
ret
mov
ret
mov
mov
ret
ret
mov
ins
ret
test
cmp
lods
and
test
ret
ret
cmps
dec
or
sbb
aas
cmp
mov
pop
test
cmps
ret
mov
ret
scas
ret
xchg
ret
xchg
ret
mov
xchg
ret
pop
mov
ret
ret
adc
ret
add
ret
pushf
adc
test
mov
xchg
ret
fwait
pop
ret
xchg
ret
mov
pop
ret
cmp
add
ret
mov
ret
ret
mov
ret
mov
ret
mov
ret
sub
ret
mov
sahf
ret
and
add
cmp
(bad)
nop
ret
pushf
ret
xchg
ret
mov
inc
ret
cwde
jnp
add
mov
pushf
ret
add
scas
xor
add
stos
pop
dec
or
or
ret
cmp
pop
cmp
ret
mov
mov
ret
cmp
mov
xchg
ret
movs
inc
add
ret
mov
push
ret
test
mov
nop
inc
ret
sub
mov
test
jne
ret
scas
ret
mov
ret
xchg
fwait
inc
ret
push
ret
imul
and
ret
xchg
ret
cwde
pop
ret
lods
xor
test
xchg
sub
ret
push
fs
cwde
ret
xchg
ret
cwde
ret
mov
ret
mov
mov
mov
ret
mov
mov
ret
mov
push
ret
ret
mov
jb
scas
push
ret
ret
movs
cmp
fwait
inc
cvttps2pi
cmp
ins
ret
test
pop
ret
mov
xchg
mov
ret
ret
mov
(bad)
ret
jbe
mov
ret
cmps
ret
lods
arpl
nop
ins
ret
ret
mov
ret
ret
pop
xchg
mov
nop
sbb
ret
ret
mov
ret
ret
cmp
xchg
ret
mov
and
ret
dec
ret
add
ret
lahf
xor
scas
ret
ret
ret
mov
push
ret
scas
gs
mov
inc
ret
mov
mov
ret
sbb
xchg
ret
cmp
test
add
je
add
ret
mov
movs
ret
nop
ss
cmps
ret
mov
jne
ret
mov
movs
ret
add
pop
ret
ret
fwait
ret
mov
nop
ret
ret
stos
inc
ret
imul
aaa
ret
movs
ret
nop
ret
mov
ret
test
mov
add
mov
xchg
sbb
ret
adc
ret
test
adc
ret
scas
ins
ret
mov
ret
test
ret
movs
sub
ret
ret
mov
add
ret
call
cmps
push
dec
push
ret
ret
mov
daa
ret
ret
ret
mov
push
sub
ret
fwait
ret
ret
mov
call
imul
fwait
push
cmp
cmp
jnp
mov
and
xchg
popf
ret
jp
mov
lods
ret
mov
mov
xchg
ret
mov
xchg
ret
inc
cmp
ret
mov
mov
ret
xchg
stos
ret
mov
ret
pop
ret
xchg
ret
xchg
ret
aaa
ret
xchg
mov
pop
cmps
inc
inc
pusha
or
nop
ret
stos
bound
jl
jns
jp
ret
cwde
ret
stos
ret
mov
xchg
push
ret
add
ret
cdq
ret
mov
mov
adc
mov
movs
ret
cdq
ret
ret
cwde
push
ret
mov
sahf
ret
ins
push
ret
(bad)
or
ret
mov
ret
mov
xchg
mov
ret
ret
mov
mov
adc
ds
mov
ret
mov
mov
ret
mov
ret
inc
inc
ret
lods
or
stos
add
mov
ret
ret
mov
mov
ret
ret
push
ret
xchg
ret
jp
xchg
addr16
retw
mov
pop
mov
ret
scas
ret
mov
mov
or
pop
ret
cmp
nop
adc
ret
pop
ret
mov
push
ret
mov
xchg
jo
nop
push
ret
test
test
mov
lods
dec
dec
ret
call
cs
xchg
and
(bad)
add
ret
test
mov
xchg
ret
add
pop
dec
ret
push
ret
or
ret
mov
ret
cmp
mov
or
mov
ret
ret
ret
jle
ret
fwait
ret
add
ret
cmp
or
or
mov
xchg
ret
sbb
mov
jbe
scas
ret
mov
pop
push
or
mov
ret
ret
sbb
xchg
inc
dec
inc
add
mov
push
ret
mov
inc
ret
mov
mov
cs
push
outs
sub
test
ret
mov
pushf
aaa
ret
mov
aaa
ins
push
jge
ret
mov
sub
ret
xchg
and
cmps
addr16
stos
inc
ret
cwde
ret
ret
mov
mov
mov
(bad)
ret
popf
ret
stos
ret
lahf
inc
inc
ret
add
ret
cmps
ret
popf
ret
mov
xchg
cwde
inc
sbb
dec
or
mov
and
ret
sahf
ret
movs
pusha
ret
ss
push
ret
mov
jp
xchg
ret
mov
or
mov
ret
lahf
add
xchg
ret
test
inc
add
mov
sbb
nop
ret
mov
mov
or
ret
ret
ret
ret
movs
ret
scas
gs
ret
dec
ret
mov
xor
xchg
popa
ret
mov
push
ret
ret
mov
ret
ret
lea
mov
sub
call
xchg
ret
stos
or
xchg
ret
xchg
jge
ret
lahf
sub
ret
xchg
adc
xchg
ret
add
ret
cwde
ret
mov
cmp
ret
lea
ret
mov
ret
xchg
ret
ret
mov
sbb
mov
das
ret
lods
dec
jl
add
scas
ret
adc
ret
dec
ret
xchg
ret
mov
cdq
ret
pop
scas
sbb
test
ret
jp
pop
ret
test
scas
sub
pop
ret
dec
xor
xchg
ret
mov
and
sub
ret
mov
ret
mov
and
call
ret
mov
ret
movs
ret
mov
gs
lods
inc
cmp
nop
ret
xor
dec
push
xor
mov
mov
ret
add
scas
pop
push
popf
ret
lods
ret
xchg
movs
jl
ret
ret
ret
mov
ret
test
mov
ret
mov
test
ret
add
ret
add
cmp
ret
fwait
ret
add
pusha
or
popf
ret
pop
dec
ret
mov
aaa
pusha
ret
stos
add
cdq
add
ret
mov
ret
xchg
(bad)
mov
sbb
fs
mov
mov
ret
xchg
imul
ret
mov
xchg
ret
sahf
ret
mov
sbb
gs
test
mov
or
mov
dec
dec
or
ret
mov
pop
lahf
xor
pushf
ret
lahf
sub
mov
test
outs
ret
ret
ret
mov
test
mov
mov
ret
or
mov
ret
adc
pop
xor
fwait
ret
fwait
sub
inc
ret
ret
pushf
ins
ret
mov
cwde
ret
mov
ja
ret
mov
ret
mov
xor
ret
ret
adc
ret
mov
mov
mov
mov
sub
mov
test
and
add
mov
mov
ret
lea
mov
ret
xchg
pop
mov
xor
dec
cmp
mov
data16
mov
and
mov
ret
lods
add
xchg
ret
mov
ret
cmps
xor
xchg
call
dec
ret
jg
test
cmps
ret
arpl
pop
pop
push
ret
call
push
cs
xor
ret
ret
xchg
xchg
ret
cdq
ret
sahf
ss
mov
(bad)
ret
xchg
js
mov
ret
add
sahf
ret
mov
ret
push
ret
ss
xchg
push
ret
stos
sub
mov
test
fs
ret
pop
ret
push
sub
mov
xchg
dec
and
scas
inc
cmp
ret
scas
ret
popf
or
mov
ret
ret
ret
mov
ret
mov
mov
aas
xor
sahf
ret
ret
xchg
lods
xor
mov
lea
cmp
xchg
xchg
ret
mov
mov
xchg
ret
ret
adc
aaa
inc
dec
jae
scas
ret
mov
sub
mov
je
ret
mov
sahf
pop
jo
jl
ret
sbb
push
adc
ret
xchg
ret
mov
test
ret
fwait
ret
xchg
ret
mov
pop
ret
test
ret
mov
inc
ret
ret
mov
or
lea
ret
mov
es
ret
add
ret
mov
ret
add
xor
xchg
mov
mov
ret
push
ret
mov
ret
cwde
ret
mov
cdq
ret
lods
ret
test
popf
ret
jo
ret
add
sbb
ret
xchg
ret
xchg
ret
xchg
sub
stos
or
xchg
ret
xchg
pop
aaa
ret
ret
mov
mov
ret
cdq
pop
pop
ret
test
ret
test
mov
ret
xchg
push
add
mov
ret
mov
aas
fs
ret
ret
sahf
ret
inc
inc
aaa
ja
lahf
jb
jg
mov
xchg
ret
mov
ret
mov
ret
scas
ret
xchg
mov
ret
mov
ret
test
mov
fwait
sbb
ret
ret
imul
mov
ret
pushf
ret
ret
mov
ret
pushf
pusha
dec
push
ret
mov
mov
push
ret
mov
pop
push
ret
xchg
ss
sub
fwait
sub
cmps
ret
test
mov
cmps
ret
mov
outs
push
ret
mov
inc
add
mov
xchg
ret
stos
and
ret
sahf
ret
mov
pop
push
cwde
ret
call
push
ret
cdq
jno
xchg
ret
mov
ret
ret
mov
push
adc
xchg
jbe
(bad)
ret
ret
ret
xchg
ret
cmps
ret
mov
and
mov
ret
mov
xchg
ret
pushf
ret
movs
ret
mov
mov
jp
cmps
dec
ret
dec
adc
dec
sub
xchg
push
movs
sbb
lods
ret
mov
ret
inc
xor
ret
mov
xchg
ret
cmps
inc
jg
lods
ret
pushf
jg
xor
push
ret
stos
dec
inc
add
ret
sbb
cwde
cmp
pop
sbb
nop
push
dec
ret
mov
mov
ret
mov
sub
das
ret
mov
jp
xchg
ret
test
ret
mov
ret
(bad)
ret
ret
sbb
movs
ret
ret
mov
stos
gs
mov
ret
mov
scas
dec
and
lahf
ret
lea
ret
ret
mov
mov
ret
test
sbb
ret
cmps
ret
ret
scas
ret
ret
lods
jge
test
test
ret
mov
pop
ret
jae
inc
sub
ret
mov
mov
xchg
jge
mov
mov
xor
pushf
inc
and
cmp
ret
mov
ret
test
cmps
ret
cmps
ret
xchg
call
ret
mov
scas
ret
(bad)
ret
ret
mov
mov
sub
mov
ret
mov
ret
mov
jae
jne
data16
imul
ret
mov
lods
ret
mov
mov
ret
lods
ret
adc
ret
pushf
ret
stos
ret
ret
movs
push
ret
mov
pop
cmp
ret
mov
ret
mov
jle
test
ret
ret
ret
mov
add
push
ret
cmps
jne
xchg
ret
dec
dec
ret
xor
ret
test
xchg
ret
mov
movs
ret
mov
mov
mov
ret
pushf
ret
mov
mov
mov
xchg
or
mov
ret
mov
add
mov
nop
pop
ret
mov
mov
mov
cwde
push
jns
ret
cmp
or
sub
mov
ret
xchg
sahf
or
jp
ret
lahf
push
ret
ret
mov
cmps
ret
call
jle
nop
ret
pop
ret
mov
call
or
and
mov
ret
mov
and
ret
mov
cmps
ret
xchg
xchg
sbb
mov
lahf
ret
cdq
ret
cmp
stos
push
movs
jns
test
mov
jg
push
ret
mov
add
dec
ret
cmps
aaa
pop
fs
xchg
inc
sbb
mov
xchg
ret
xchg
dec
pop
ret
stos
ret
mov
sbb
ret
call
mov
ret
nop
ret
xchg
pop
and
mov
ret
cmps
ins
jae
mov
nop
ret
movs
pop
ret
mov
and
mov
ret
adc
ret
mov
ret
xchg
ret
xchg
mov
ret
mov
mov
mov
stos
or
movs
ret
mov
ret
lods
ret
popf
ret
mov
jbe
sahf
ret
xor
ret
mov
or
pop
add
movs
ret
add
jo
ret
cdq
sub
xchg
sub
xchg
ret
cwde
jg
and
mov
add
ret
scas
dec
push
ret
ret
xchg
ret
push
ret
call
mov
ret
cmps
and
mov
mov
ret
fs
ret
mov
ret
xchg
mov
dec
pop
ret
mov
or
pushf
add
mov
ins
ret
mov
ret
cwde
ret
movs
sbb
mov
cdq
xor
mov
fs
mov
ret
mov
xchg
je
cwde
sub
mov
mov
scas
ret
mov
ret
mov
test
ret
cmps
ret
scas
ret
push
xor
mov
ret
ret
test
ret
mov
lods
xor
cs
mov
pushf
ret
xchg
ret
push
ret
jo
call
ret
mov
ret
mov
stos
cs
test
mov
sbb
dec
ret
ret
xchg
ret
mov
mov
mov
ret
ret
xchg
fwait
ret
stos
ret
ret
scas
ret
ret
mov
ret
sub
lea
ret
(bad)
ret
add
ret
sub
mov
mov
addr16
nop
ret
stos
outs
ret
xchg
jg
(bad)
ret
ret
ret
xchg
push
je
inc
xor
mov
or
lods
ret
ret
mov
xor
ds
nop
jns
jge
cwde
ret
push
push
ret
lods
pop
jbe
ret
cmps
push
ret
pop
ret
mov
lods
push
ret
mov
ret
stos
dec
ret
add
push
inc
pop
ret
scas
ret
mov
sahf
ret
aaa
push
jg
ret
cmps
ret
sub
ret
dec
ret
movs
and
pushf
ret
call
ret
test
call
mov
push
ret
mov
ret
test
ret
sahf
sub
ret
stos
sbb
inc
ret
(bad)
adc
nop
ret
popf
ret
mov
movs
ret
ret
xchg
ret
pop
inc
and
mov
mov
mov
mov
mov
popa
ret
mov
ret
pop
pushf
or
ret
mov
test
lods
ret
ret
mov
ret
pop
ret
mov
push
jle
adc
lea
ret
nop
ret
mov
ret
mov
ret
xchg
pop
jg
xor
ret
mov
push
ret
(bad)
ret
mov
or
test
mov
ret
cmps
pop
dec
ret
mov
push
ret
mov
lea
ret
test
xchg
and
add
ret
mov
add
and
test
pop
ret
scas
add
test
test
push
ret
mov
push
sbb
mov
dec
ret
mov
cmp
mov
jb
ret
mov
movs
ret
pushf
cs
call
inc
and
cmps
pop
ret
mov
ret
mov
sub
addr16
mov
cmp
gs
ret
mov
ret
mov
or
mov
ret
ret
popf
ret
push
ret
mov
ret
pushf
dec
ret
mov
ret
ret
test
ret
mov
stos
ret
add
sbb
mov
inc
ret
ret
xchg
lods
push
mov
fwait
push
ret
add
ret
add
xchg
ret
xchg
ret
pop
xchg
ret
cdq
dec
ret
ret
mov
ret
xchg
ret
xchg
or
jno
ret
mov
jbe
popf
ret
mov
inc
ret
mov
ret
mov
add
ret
xchg
cmp
mov
mov
pop
mov
add
ret
stos
ret
mov
ret
ret
lea
mov
lahf
ret
mov
ret
adc
push
inc
ret
xchg
pop
jb
mov
ret
test
arpl
mov
ret
mov
ret
mov
xchg
ret
ret
mov
sbb
add
sbb
cmp
lods
jb
xor
arpl
movs
ret
cmps
push
ret
test
ret
xchg
dec
ret
xchg
ret
xchg
mov
ret
popf
ret
or
ret
dec
arpl
test
xchg
ret
stos
ret
mov
call
mov
popf
ret
scas
ret
or
mov
mov
pushf
ret
mov
ret
xchg
ret
call
lahf
ret
cwde
adc
push
ret
cdq
ret
cwde
ret
cmps
ret
and
ret
pushf
ret
mov
test
mov
pop
sub
mov
ret
test
sbb
mov
push
add
mov
or
call
push
jg
cwde
jbe
fs
inc
adc
ret
ins
ret
test
ret
scas
ret
movs
ret
xchg
ret
mov
mov
cmp
mov
mov
ret
stos
ret
xchg
ret
ret
xchg
pop
ret
ret
fwait
ret
call
test
test
ret
test
test
xchg
inc
ret
add
ret
mov
jle
js
ret
mov
adc
dec
ret
scas
add
ret
xchg
sub
push
ret
call
ret
ret
ret
sahf
ret
mov
scas
ret
ret
ret
mov
test
ret
jge
push
or
ret
mov
stos
dec
ret
cwde
ret
sub
ret
cdq
ret
ret
mov
mov
ret
scas
add
ret
mov
ret
mov
movs
ret
fwait
ret
stos
ret
test
mov
ret
mov
xchg
ret
lods
push
cmps
ret
mov
mov
cdq
sbb
mov
xchg
mov
mov
movs
dec
pusha
push
pop
ret
lahf
ret
xchg
ret
call
cmp
cwde
ret
ret
mov
es
mov
ret
mov
and
lods
ret
ret
ret
stos
daa
ret
xchg
push
ret
nop
ret
cmp
ret
add
sbb
mov
scas
pop
sbb
jge
ret
cdq
and
xchg
ret
mov
ret
js
mov
inc
ret
test
ret
mov
xchg
mov
cmp
mov
cmp
mov
ret
sub
ret
mov
push
dec
ret
mov
ret
lahf
ret
nop
cmp
jnp
mov
lea
dec
ret
mov
ret
lahf
sub
mov
cs
mov
mov
ret
cmp
ret
lods
ret
xchg
ret
ret
mov
ret
cdq
ret
cmps
and
pop
push
ret
mov
mov
ret
mov
pop
add
ret
fwait
daa
ret
test
nop
jno
ret
call
ret
test
jno
sbb
ret
ret
mov
ret
test
dec
ret
movs
adc
adc
ret
movs
ret
push
jno
mov
daa
pop
jnp
cmps
ret
mov
dec
ret
add
nop
inc
xor
xchg
movs
pop
gs
or
ret
mov
ret
cmps
ret
popf
dec
ret
lods
inc
ret
mov
ret
mov
mov
ret
or
add
cmp
ret
ret
push
pop
outs
ret
cwde
fs
adc
push
sbb
stos
arpl
mov
ret
mov
cmp
scas
ret
ret
mov
ret
lods
jne
cwde
pop
inc
ret
mov
stos
sub
movs
ret
mov
ret
mov
jne
mov
cmps
ret
popf
ret
ret
sub
ret
ret
xchg
pop
ret
cdq
ret
xchg
ret
xchg
ret
mov
adc
cwde
ret
cdq
ret
lahf
ret
jae
add
pop
ret
jo
mov
aaa
jnp
dec
push
ret
mov
mov
ret
cmps
jno
mov
ret
imul
ret
ret
ret
lods
ret
popa
ds
ja
ret
test
adc
ret
ret
ret
mov
ret
mov
ret
add
scas
aas
dec
ret
mov
mov
test
movs
sub
ret
mov
ret
nop
ret
stos
ret
xchg
aaa
ret
xor
ret
outs
sub
xchg
mov
ret
ret
call
ret
mov
ret
xchg
ss
mov
ret
test
test
(bad)
cs
mov
cmps
ret
call
mov
xchg
das
push
ret
cwde
ins
jno
mov
lods
ins
ret
mov
mov
mov
lahf
ds
ret
mov
ret
stos
ret
add
ret
sbb
inc
js
ret
mov
xor
mov
xchg
push
adc
ret
ret
fwait
pop
ret
xor
push
ret
ret
scas
cmp
movs
inc
ret
cmps
ins
jb
xchg
adc
scas
ret
xor
test
scas
ret
mov
ret
mov
xchg
or
add
adc
mov
lahf
ret
mov
mov
ret
mov
or
cmp
lahf
ret
xchg
ret
popf
ret
mov
mov
ret
mov
scas
ret
sahf
ret
test
mov
dec
outs
ret
ret
ins
adc
ret
ja
cwde
ret
mov
add
or
ret
mov
ret
mov
or
cdq
ss
(bad)
ret
mov
movs
jnp
ret
test
mov
and
cmps
cmp
mov
ret
mov
ret
aaa
ret
mov
ret
ret
mov
sbb
pop
pop
ret
sahf
ret
lods
push
push
or
xchg
xchg
push
ret
mov
ret
sbb
and
xchg
ret
cwde
bound
dec
ret
mov
ret
xchg
ret
xchg
ret
stos
ret
xchg
mov
aaa
ret
ret
cmps
ret
popf
ret
mov
mov
or
mov
test
mov
push
addr16
xchg
pop
jle
mov
lahf
or
ret
xchg
ret
scas
ret
mov
xchg
xchg
mov
ret
mov
cdq
ret
add
ret
inc
jg
movs
ret
ret
adc
ret
movs
and
ret
mov
ret
xchg
ret
mov
mov
mov
xchg
outs
pop
ret
ret
ret
jge
push
sub
mov
jnp
mov
ret
ret
mov
mov
lahf
ret
mov
and
mov
xchg
ret
mov
pop
xchg
ret
mov
mov
stos
ret
inc
ret
sbb
ret
scas
add
mov
mov
pop
ret
adc
data16
cmp
lods
daa
add
add
push
jo
pop
sub
mov
xchg
ret
stos
ret
add
inc
push
daa
js
xor
mov
ret
or
ret
adc
ret
lods
inc
xor
inc
ret
cmps
jne
dec
adc
mov
xchg
ret
mov
cmp
sahf
jg
cdq
adc
mov
ret
mov
mov
mov
sbb
ret
mov
xchg
ret
or
ret
xchg
cmp
mov
lahf
cs
ret
pop
xchg
ret
cmps
push
push
pop
ret
pushf
ret
mov
ret
ret
xchg
xchg
ret
cdq
ret
xchg
ret
mov
sahf
ret
mov
ret
xor
popf
ret
mov
ret
mov
sub
add
adc
adc
xchg
ret
mov
jae
pop
das
jb
movs
ret
xchg
ret
sahf
ret
xchg
dec
es
and
xchg
xchg
pop
ret
mov
mov
mov
push
ret
xchg
sub
inc
daa
jg
xchg
das
cmp
ins
imul
ret
mov
ret
scas
ret
mov
retw
mov
lea
ret
movs
ret
ret
mov
jg
ret
mov
mov
ret
sahf
sbb
ret
add
ret
dec
jo
call
je
sbb
pop
ret
add
ret
ret
mov
mov
test
ret
mov
fs
ret
(bad)
ret
ret
mov
ret
adc
xchg
ret
sahf
pop
ret
sbb
ret
test
jb
scas
jp
ret
xchg
or
xchg
ret
ret
ret
sahf
ret
mov
sub
ret
ret
jns
mov
xchg
push
jnp
mov
pop
jbe
(bad)
ret
stos
ret
mov
mov
pushf
ret
pushf
sub
pushf
ret
test
mov
mov
mov
test
sbb
popf
ret
mov
pushf
ret
mov
mov
dec
ret
add
ret
ret
mov
ret
add
cs
ret
mov
mov
mov
ret
mov
mov
ret
ret
xchg
data16
ret
mov
ret
push
add
xchg
dec
ret
mov
ret
mov
jb
mov
stos
ret
or
pop
cmp
mov
sahf
ret
ret
ds
mov
arpl
mov
mov
ret
scas
ret
ret
mov
ret
scas
or
add
scas
push
ret
sub
retw
dec
ret
movs
ret
mov
pop
cmp
mov
ret
mov
ret
movs
ret
fwait
ret
mov
ret
cwde
ret
ret
xchg
ret
xchg
inc
push
ret
mov
mov
xor
pop
ret
ret
inc
sub
outs
xor
mov
cwde
ret
xchg
ret
sbb
xchg
ret
mov
ret
mov
mov
sahf
ret
cmps
ret
add
mov
lahf
ret
mov
mov
xchg
pop
ret
mov
mov
sub
xchg
ret
xchg
ret
mov
and
and
ret
ret
test
add
xchg
and
mov
mov
mov
ret
cmps
inc
ret
mov
mov
push
ret
pop
test
dec
adc
es
ret
mov
ret
mov
mov
xchg
ret
lahf
ret
mov
sahf
ret
xchg
pop
xor
sahf
ret
ret
cwde
and
ret
mov
mov
mov
mov
sahf
push
ret
xchg
and
ret
movs
or
and
dec
push
jge
es
ret
ret
popf
ret
scas
inc
ret
mov
ret
xchg
ret
mov
ret
scas
sbb
ret
ret
ret
xchg
mov
mov
lods
ret
ret
mov
ret
cwde
sbb
pusha
ret
lods
outs
pop
push
ret
lods
aaa
ret
ss
jae
ret
push
adc
mov
jp
test
pop
xor
mov
mov
mov
pushf
ret
pop
ret
addr16
lea
ret
cwde
imul
xchg
xchg
ret
movs
ret
sbb
ret
xchg
jb
ret
ret
ret
mov
ret
ret
mov
xchg
add
cmps
ret
mov
ret
mov
ret
mov
xchg
pop
ret
mov
ret
test
ret
mov
ret
test
ret
cmp
scas
xor
push
ret
sahf
bound
ret
mov
test
mov
jno
outs
push
ret
mov
ret
mov
ret
lods
pop
ret
xchg
fs
mov
and
fwait
ja
mov
ret
jnp
push
pop
ret
xchg
ja
and
add
push
pop
ret
ret
mov
fwait
ret
fwait
ret
cmps
jle
mov
and
mov
ret
mov
ret
mov
scas
ret
mov
imul
daa
or
ret
and
jno
ret
xchg
andnps
mov
mov
ret
fwait
ret
lods
ret
mov
stos
push
and
mov
ret
mov
dec
sbb
movs
ret
dec
ret
ret
mov
xor
ret
ret
cwde
pop
ret
test
fwait
ret
xor
ret
mov
ret
xchg
ret
mov
ret
mov
ret
mov
fs
mov
ret
ret
mov
call
xchg
ret
cdq
ret
fwait
sub
scas
ret
add
push
push
push
ins
ret
stos
ret
call
jno
ret
mov
ret
lods
push
ret
lods
xor
ret
mov
adc
xchg
ret
mov
mov
or
xchg
ret
xchg
ret
stos
ret
ret
ret
inc
dec
inc
ret
xchg
pusha
ret
lahf
sbb
cmp
mov
push
adc
mov
xchg
ret
mov
ret
mov
add
ret
pop
mov
ret
add
ret
xchg
adc
push
ret
(bad)
sbb
ret
add
push
push
ret
ret
mov
popf
ret
movs
ret
ret
ret
xchg
popf
ret
sbb
pop
ret
movs
cmp
popf
ret
xchg
js
ret
ret
ret
cmps
ret
(bad)
ret
fwait
xor
mov
cmps
ret
sahf
inc
ret
xchg
ret
jbe
mov
ret
test
popf
jno
ret
popf
ret
mov
inc
ret
pushf
dec
gs
lods
ret
and
lods
ret
mov
or
pusha
ret
mov
xchg
mov
ret
pop
scas
daa
ret
retw
ret
popf
ret
movs
ret
mov
addr16
ret
xchg
ret
add
retw
mov
mov
push
ret
mov
lahf
xor
mov
mov
ret
test
ret
add
mov
pop
push
ret
sahf
and
mov
ret
mov
and
mov
mov
pusha
pop
fs
cwde
ret
dec
ret
lods
imul
cmp
popf
ret
mov
mov
ret
(bad)
and
sahf
sub
ret
mov
ret
ret
mov
mov
popa
push
ret
lods
fs
add
ret
mov
push
ret
mov
pop
ret
pop
cmp
cmp
mov
mov
pop
dec
jb
ret
mov
ret
sub
ret
movs
jns
ret
or
xor
mov
popa
ret
adc
addr16
ret
mov
mov
ret
xchg
nop
sbb
inc
ret
fwait
ret
add
xchg
je
ret
ret
test
ret
stos
adc
sbb
pop
ret
mov
sbb
dec
ret
mov
mov
retw
mov
ss
xchg
pusha
push
ret
ret
mov
ret
ret
xchg
add
ret
add
ret
mov
ret
ins
jg
mov
ret
mov
popf
push
ret
movs
ret
add
pusha
ret
mov
mov
mov
pop
add
ret
jne
mov
mov
xchg
ret
mov
xchg
dec
ret
mov
ret
mov
ret
xchg
sahf
sub
cmps
ret
scas
push
ret
test
xor
or
mov
sub
sahf
ret
mov
pop
test
popa
ret
add
ret
stos
inc
ret
ret
mov
ret
mov
ret
cdq
or
popf
sbb
add
ja
add
push
push
ret
mov
ret
cmp
ret
pushf
ret
mov
ret
cmp
stos
ret
ret
ret
scas
ret
gs
dec
ret
movs
ret
mov
ret
mov
jl
ret
mov
ret
and
xor
ins
adc
xchg
sbb
sub
test
mov
sbb
jbe
and
popf
ret
add
ja
mov
ret
mov
xchg
bound
ret
movs
push
ret
mov
ret
(bad)
ret
mov
add
fwait
ret
mov
ret
ret
movs
ret
mov
ret
dec
ret
nop
ret
mov
cmps
ret
adc
fs
ret
mov
adc
das
ret
ret
mov
add
ret
lods
ret
mov
ret
mov
ret
cmps
ret
lods
retw
pushf
push
pop
ret
movs
ret
sahf
ret
mov
popa
ret
xchg
mov
mov
xor
ret
movs
jge
lods
or
cmps
push
jge
js
xchg
mov
cdq
pshufw
ret
das
ret
aas
cmp
xchg
xchg
jnp
mov
ret
fwait
push
ret
fwait
imul
daa
xor
ret
test
ins
or
ret
xor
cmovbe
call
mov
ret
mov
scas
ret
ret
ret
mov
call
add
scas
ret
xchg
mov
test
mov
dec
ret
mov
xchg
ret
stos
ret
add
mov
sbb
stos
imul
scas
dec
ret
inc
ret
add
ret
mov
call
ret
ret
mov
ret
dec
ret
mov
mov
dec
jge
test
movs
ret
xchg
mov
inc
sub
ret
mov
and
sbb
mov
xchg
ret
sub
pop
add
ret
mov
call
ret
mov
xchg
ret
push
inc
pop
dec
xor
mov
add
or
cwde
ret
xchg
ret
ret
mov
ret
(bad)
ret
popf
ret
mov
ret
mov
xor
scas
arpl
lods
jno
ret
pop
ret
mov
jns
ret
je
ret
mov
mov
ret
lods
ret
(bad)
pop
ret
movs
ret
stos
jb
mov
mov
jne
test
ret
nop
pusha
ret
mov
call
aas
ret
inc
ret
or
jns
js
mov
cmp
ret
(bad)
xor
mov
adc
arpl
daa
ret
sahf
ret
xchg
add
xchg
dec
ret
nop
ret
popf
ret
lahf
ret
ret
cdq
jge
ret
mov
and
bound
ret
ret
sub
mov
arpl
mov
push
ins
and
call
add
inc
sub
jl
ret
ret
add
ret
xchg
jb
xchg
pop
stos
ret
movs
ret
mov
lods
jb
cwde
ret
mov
xchg
sbb
lods
and
mov
mov
ret
mov
ret
xchg
ret
movs
push
ret
mov
ret
ret
add
push
addr16
pop
or
ret
cmps
inc
ret
je
ret
mov
jnp
ret
pushf
ret
jge
inc
pop
ret
mov
dec
cmp
sbb
movs
ret
pop
ret
mov
ret
ret
scas
ret
push
ret
lea
ret
xchg
dec
jle
movs
and
mov
pop
or
xchg
ret
dec
push
ret
ret
xchg
or
mov
dec
dec
ret
pop
mov
cwde
xor
mov
xor
add
xor
ret
test
xor
xchg
ret
ret
mov
mov
add
mov
fwait
ret
pushf
inc
sbb
mov
cdq
ret
xchg
sahf
ret
fwait
push
je
ret
pop
mov
sahf
pop
sbb
mov
ret
mov
ret
xchg
inc
ret
test
ret
lahf
ret
mov
movs
ret
ins
ret
mov
ret
mov
lods
ret
xchg
ret
ret
scas
jne
xchg
mov
scas
ret
lods
ret
ret
lods
ret
mov
scas
ret
mov
stos
(bad)
pop
dec
ret
test
xchg
ret
ret
stos
inc
ret
xor
adc
mov
ret
mov
sub
ret
and
arpl
ret
xchg
daa
ret
sahf
pusha
ret
mov
ret
ret
mov
ret
add
ret
ret
add
popa
adc
mov
xchg
andnps
mov
xor
cmps
ret
mov
sbb
pop
jo
stos
xor
scas
ret
stos
ret
call
pop
sbb
mov
add
and
mov
cmps
ret
add
aas
ret
cmps
inc
ret
mov
lahf
jne
mov
ret
xchg
pop
ret
mov
ret
mov
fs
xor
cdq
cmp
ret
ret
mov
mov
mov
ret
cdq
or
daa
ret
test
inc
inc
ret
sub
test
mov
sub
mov
call
dec
ret
xchg
mov
mov
push
jl
pusha
push
pop
push
ret
ret
cmps
ret
xchg
ja
scas
ret
xchg
ret
ins
sbb
push
add
mov
mov
ret
stos
ret
mov
ret
adc
ret
pushf
fs
mov
pop
ret
mov
test
fwait
ret
sub
movs
ret
stos
ret
ret
js
stos
and
pop
call
ret
ret
mov
push
ret
mov
imul
popf
ret
movs
sub
jbe
mov
xchg
xor
xor
pop
ret
push
cmp
ret
sbb
jbe
stos
ret
xchg
push
jns
inc
ret
popf
ret
mov
ret
mov
test
scas
pop
push
imul
ret
lods
ret
mov
ret
add
and
ret
or
test
mov
ret
mov
jnp
stos
and
test
ret
mov
ret
cwde
ret
add
sub
(bad)
ret
popf
ret
mov
ret
mov
popa
ret
movs
ret
ret
pop
lahf
ret
es
or
mov
ret
mov
ret
je
cmp
mov
mov
mov
test
jne
mov
popf
cmpps
mov
ret
xchg
ret
movnti
ret
test
stos
ret
mov
cdq
ret
lahf
ret
movs
ret
ret
pop
ret
xchg
ret
mov
ret
call
ret
scas
ret
stos
pop
ret
mov
test
mov
pop
ret
test
js
cmp
add
ja
ret
scas
sbb
mov
dec
ret
scas
inc
cmp
sahf
ret
fwait
pop
ret
test
aaa
ret
mov
ret
cdq
push
xchg
mov
stos
ret
test
ret
ret
ret
mov
sbb
ret
mov
jo
push
ret
ret
mov
ret
(bad)
adc
ret
cmp
mov
ret
scas
pop
ret
lahf
ret
lods
ret
mov
ret
sbb
ret
pop
or
cwde
ret
scas
push
and
imul
xchg
adc
xchg
adc
inc
jo
mov
mov
ret
push
ret
pushf
fs
lahf
ret
mov
ret
ret
mov
add
ret
ret
ret
xchg
ret
stos
add
mov
xchg
ret
xchg
mov
mov
xchg
ret
xchg
jg
cmps
ret
ret
fwait
sbb
push
pushf
ret
push
ret
lods
sub
or
mov
pop
ret
cwde
ret
cmps
ret
test
nop
ret
cdq
jno
movs
jl
sbb
mov
scas
popa
adc
cdq
sbb
lea
cdq
jae
ret
ret
mov
mov
mov
and
ret
mov
ret
mov
cmp
cmps
outs
addr16
scas
pop
ret
pop
movs
inc
ret
lods
sbb
xor
add
sahf
ret
mov
scas
ret
xchg
sbb
jo
scas
cmp
ret
mov
arpl
ret
movs
inc
add
xchg
ret
test
ret
cmps
sub
ret
ss
mov
add
push
ret
sahf
push
add
pushf
cmp
ret
(bad)
sbb
nop
ret
mov
ret
xchg
ret
dec
ret
ret
add
pop
add
mov
test
add
push
cmp
scas
xor
xor
mov
xchg
ret
xchg
ret
stos
ret
scas
sub
and
add
ret
scas
pop
adc
mov
mov
fwait
outs
jl
sub
popa
outs
ret
sahf
and
pop
ret
ret
call
mov
ret
mov
mov
mov
pop
ret
mov
xchg
and
cwde
xor
or
mov
or
xchg
test
nop
adc
jnp
xchg
push
push
ret
mov
mov
add
ret
test
mov
xchg
inc
arpl
test
ret
xchg
ret
pushf
pop
jg
ret
add
movs
ret
add
ret
scas
ret
movs
ret
mov
cwde
pop
ret
lods
ret
mov
sbb
inc
dec
ret
(bad)
ret
cwde
ret
xchg
ret
pop
ret
cmps
or
add
cmps
sub
mov
imul
dec
pop
outs
ret
ret
mov
push
ret
ins
ret
lahf
bound
mov
xchg
ret
test
aaa
sbb
pop
ret
pushf
ret
mov
add
ret
test
addr16
mov
ret
ret
lods
dec
ret
mov
ret
push
or
mov
ss
sbb
mov
lea
pop
sub
push
ret
mov
cdq
or
add
jns
ret
stos
addr16
jge
fwait
pop
ret
pop
sahf
ret
mov
movs
ret
sahf
dec
ret
ret
scas
ret
mov
movs
ret
cwde
ret
mov
test
ret
mov
mov
adc
dec
ret
mov
ret
test
ret
lahf
das
jbe
mov
ret
sahf
ret
mov
xor
ret
ret
xchg
mov
ret
mov
xchg
xor
xchg
inc
and
add
mov
and
mov
stos
sbb
mov
mov
cdq
xor
ret
mov
ret
ret
adc
ret
lods
ret
mov
ret
test
ret
mov
mov
adc
ret
mov
ret
popf
ins
ret
mov
push
ret
mov
mov
jne
(bad)
ret
mov
inc
xor
mov
ret
test
ret
cmps
ret
pop
sbb
ret
stos
inc
sub
ret
add
pop
ret
ret
mov
mov
daa
ret
ret
call
ret
(bad)
jb
mov
ret
mov
inc
dec
pop
and
lods
ret
lods
cs
test
(bad)
ret
imul
ret
ret
mov
ret
xchg
dec
inc
or
ret
lahf
ret
and
ret
sub
xchg
sbb
test
xchg
adc
jb
cwde
jno
aaa
ret
add
imul
inc
push
pop
and
ret
mov
ret
cmps
ds
scas
ret
mov
ret
and
mov
stos
ret
ret
test
ret
inc
outs
ret
add
ret
xchg
jge
ins
ret
xchg
ret
sub
movs
ret
cwde
jp
mov
mov
ret
mov
gs
lea
sbb
mov
ret
push
cmp
ret
call
ret
mov
cmps
ret
inc
pusha
imul
ret
mov
push
ret
mov
and
cmps
ret
dec
dec
ret
test
test
push
ret
mov
mov
mov
ret
pushf
and
push
test
jg
mov
test
inc
push
add
adc
xchg
ret
inc
ds
ret
mov
ret
mov
stos
ret
mov
mov
ss
xchg
ret
mov
cwde
ret
add
pop
push
ret
popf
ja
ret
mov
ret
popf
or
sbb
xchg
xchg
ret
ret
cdq
add
ret
ret
sahf
ret
outs
ret
je
dec
or
ret
add
ret
xchg
and
nop
imul
ret
mov
mov
ret
xor
sbb
ret
(bad)
ret
adc
pop
ret
sub
xor
add
ret
lods
ret
cmps
ret
ret
xchg
mov
pop
ret
mov
xor
sub
ret
scas
ret
xor
ret
ret
ret
lods
ret
pop
xor
dec
push
pop
dec
ret
lahf
ret
mov
ret
xchg
add
ret
xchg
ret
test
movs
aas
ret
mov
mov
ret
xchg
ret
ret
adc
ret
ret
mov
cmp
ret
sbb
ret
mov
pop
xor
xchg
ret
mov
add
ins
or
sahf
add
cmp
pop
jae
jb
mov
pop
ret
mov
ret
mov
test
cwde
ret
ret
pop
cmps
pop
push
ret
mov
movs
push
ret
xchg
ret
stos
ret
mov
ret
mov
pop
cwde
ret
mov
cwde
ret
xchg
ret
mov
ret
xchg
ret
mov
inc
push
ret
mov
movs
push
ret
push
ret
test
ret
mov
ret
mov
ret
mov
dec
aaa
add
test
mov
ret
mov
sbb
mov
ret
lods
and
(bad)
dec
ret
ja
adc
mov
adc
outs
sbb
mov
ss
ret
nop
ret
test
mov
lahf
imul
sub
ret
outs
pop
ret
arpl
ret
inc
ret
pop
ret
mov
add
mov
mov
cs
xchg
stos
aaa
ret
mov
ret
mov
cmp
test
ret
call
addr16
mov
ret
add
ret
nop
ret
or
cmp
ret
pop
ret
test
mov
ret
test
cmps
ret
cmp
data16
ret
mov
xchg
ret
ret
xchg
xor
mov
inc
and
ret
ret
add
and
pop
ret
ret
xchg
ret
mov
pusha
sub
imul
xor
(bad)
ret
mov
ret
ret
mov
cmps
cmpps
arpl
mov
scas
ret
aas
and
ret
ret
mov
mov
mov
lods
ret
mov
add
ret
popf
add
ret
mov
daa
push
inc
push
or
mov
xchg
dec
ret
xchg
pop
pop
push
ret
stos
adc
sbb
mov
cmps
push
ret
mov
test
mov
mov
add
sub
lods
pop
ret
mov
test
mov
mov
xchg
ret
xchg
js
lods
ret
ret
mov
ret
xchg
ins
imul
push
ret
xchg
jno
fwait
ret
add
cmp
sub
ret
mov
mov
inc
ret
mov
addr16
ret
xchg
ret
dec
ret
ret
ret
xor
xchg
ret
xchg
cmp
xchg
jo
xchg
dec
ret
call
cmp
scas
xor
jae
ret
dec
ins
ret
mov
push
popa
ret
xchg
push
ret
ret
mov
ret
mov
nop
ret
ret
mov
ret
adc
mov
aaa
cmp
scas
pop
ret
mov
(bad)
ret
mov
cmp
mov
ret
mov
lods
sub
mov
jl
ret
mov
ret
add
pop
jp
pushf
cmp
ret
ret
cwde
ret
jle
gs
xchg
ret
sahf
fs
ret
nop
xor
sub
mov
push
ret
mov
jne
ret
scas
dec
ja
mov
mov
scas
ret
xchg
ret
lahf
ret
test
ret
sub
xchg
pushf
prefetch
or
ret
xchg
cwde
ret
add
mov
ret
scas
sbb
ret
scas
ret
lahf
es
ret
mov
xchg
adc
mov
mov
add
lods
cs
mov
mov
dec
ret
pushf
ret
mov
ret
pop
ret
test
mov
cwde
imul
mov
dec
ret
adc
mov
mov
or
ret
mov
mov
test
dec
ret
sub
mov
mov
xor
ret
mov
xchg
test
mov
pop
inc
dec
dec
pop
ret
or
mov
ret
xor
ret
ret
xchg
ret
mov
sub
ret
adc
sahf
sbb
mov
ret
ret
xchg
sahf
ret
mov
jnp
mov
mov
mov
ret
xchg
ret
ret
mov
mov
xchg
mov
cmp
jo
mov
mov
push
push
ret
mov
xchg
ret
cwde
pop
ret
mov
aaa
pop
ret
ret
ret
fwait
ret
lods
add
ret
ret
mov
movnti
dec
adc
push
pop
ret
xchg
ret
add
add
ret
mov
cdq
ret
movs
ret
scas
ret
dec
ret
mov
mov
ret
cmp
ret
pushf
push
adc
xchg
add
(bad)
ret
cmps
arpl
mov
pop
ret
ret
ret
xchg
ret
lahf
ret
ret
lods
sbb
movs
sub
ret
nop
sub
cmp
ret
cdq
ret
mov
inc
ret
xchg
pop
ret
mov
mov
ret
add
adc
scas
inc
ret
mov
ret
ret
mov
sub
scas
ret
mov
popa
ret
mov
or
mov
ret
lea
or
mov
cwde
ret
xchg
ret
movs
ret
cwde
push
ret
xor
ret
xor
movs
ret
mov
mov
mov
ret
cwde
jl
inc
ret
xchg
ret
xchg
ins
adc
ret
(bad)
ret
mov
pop
call
adc
ret
cwde
das
ret
ret
mov
mov
ret
mov
sbb
mov
mov
jge
pop
ret
add
mov
ret
stos
ja
mov
ret
xchg
ret
cmp
mov
ret
lods
ret
mov
dec
add
ret
call
mov
add
ret
or
mov
mov
mov
mov
stos
inc
push
ret
mov
cmp
jge
ret
ret
movs
adc
push
xchg
inc
pop
pop
ret
mov
or
mov
ret
dec
ret
pop
movs
ret
cdq
push
dec
ret
xchg
ret
ret
jp
jb
add
mov
pop
cmps
jge
mov
ret
mov
mov
movs
ret
xchg
ret
ret
mov
or
adc
add
ret
xchg
dec
sbb
mov
test
fwait
ret
mov
adc
mov
mov
ret
stos
imul
test
add
ret
xchg
js
and
mov
test
xor
cdq
sub
ret
scas
ret
and
ret
nop
sbb
sub
add
push
ret
xchg
xchg
or
ret
xchg
ret
lods
ret
mov
ret
test
lahf
ret
pop
add
inc
inc
ret
xor
mov
pushf
and
mov
cmp
pop
push
daa
cs
ret
test
ret
cmps
ret
mov
inc
and
daa
ret
ret
sbb
ret
lahf
ret
mov
jb
mov
push
ret
ret
nop
adc
pop
pop
ret
mov
mov
add
imul
pop
ret
cmps
pop
dec
addr16
ret
ret
push
ret
xchg
ret
lahf
ret
mov
cmps
adc
ret
ret
stos
ret
fwait
push
inc
inc
jbe
pop
ret
mov
test
pushf
ret
mov
xor
lods
ret
lods
ret
ret
outs
ret
xchg
test
mov
xchg
ret
jg
or
pushf
jbe
cmps
ret
fwait
push
push
ret
xchg
xor
add
pop
xor
cdq
pop
ret
test
cmps
or
mov
mov
dec
ret
xchg
scas
ret
ret
pop
lods
or
retw
adc
test
lods
ret
stos
ret
mov
ds
mov
sub
mov
sbb
ret
sahf
or
ret
test
mov
mov
push
ret
cmps
ret
fwait
sbb
pushf
ret
add
xchg
or
cmps
ret
mov
movs
sbb
ret
adc
cmps
ret
mov
xchg
sbb
ret
ret
movs
ret
lea
dec
xor
ret
lods
ret
pop
ret
mov
xchg
ret
cmps
ret
test
mov
ret
test
ret
ret
push
ret
mov
ret
ret
nop
sub
ret
mov
pusha
ret
xchg
ret
movs
inc
push
adc
xchg
jno
lods
add
call
adc
inc
ret
dec
outs
push
jae
ret
pop
ds
pop
xor
and
pushf
cmp
jle
mov
inc
ret
ret
mov
ret
push
ret
call
xchg
ds
ret
ret
mov
ret
mov
xchg
ret
pop
ret
xchg
mov
pop
ret
mov
call
ret
test
ret
fwait
ret
ret
fwait
ret
add
dec
pop
and
mov
lahf
ret
ret
nop
ret
jle
mov
ret
mov
sub
mov
xchg
ret
mov
ret
mov
xor
ret
movs
ret
cdq
ret
mov
ret
cmps
ret
scas
ret
stos
ja
mov
mov
mov
mov
test
movs
ret
mov
mov
mov
inc
ret
cmps
ret
and
push
ret
cmps
imul
movs
ret
xchg
ret
test
mov
xchg
or
mov
inc
ret
ret
ret
mov
mov
daa
push
mov
ret
mov
add
pop
dec
jae
mov
test
xor
ret
stos
js
mov
cwde
imul
stos
ret
cwde
ret
xor
ret
jnp
inc
ret
scas
ret
stos
jge
push
ret
ret
mov
call
ss
lods
ret
ret
add
ret
mov
ret
mov
mov
test
sbb
mov
dec
ret
ret
test
adc
arpl
mov
lods
ret
ret
and
xchg
mov
call
mov
das
ret
test
ret
mov
mov
or
ret
popf
ret
jle
mov
cmp
ret
mov
xchg
ret
sbb
cmps
jo
adc
ins
pop
ret
daa
inc
jnp
mov
js
push
ret
mov
ret
ret
fwait
ret
sub
xchg
ret
ret
adc
ret
xchg
or
mov
test
ret
ret
push
ret
xchg
ret
scas
ds
mov
ret
stos
push
inc
jle
mov
xchg
mov
mov
ret
movs
ret
lods
ss
nop
adc
jno
and
mov
ret
cwde
add
cs
pop
ret
mov
ret
mov
mov
ret
xchg
ret
test
ret
pop
test
scas
dec
ret
mov
ret
xchg
ret
lahf
cmp
mov
scas
ret
ret
mov
mov
(bad)
ret
cdq
ret
test
ret
(bad)
ret
stos
ret
mov
popa
ret
stos
cs
xchg
or
add
ret
xchg
pop
scas
jle
push
ret
mov
ret
cmps
ret
pushf
ret
mov
or
mov
jle
ret
mov
ret
xor
ret
call
dec
and
lods
ret
mov
xchg
(bad)
ret
mov
inc
dec
and
or
ret
add
ret
xchg
mov
ret
nop
ret
or
ret
xchg
ret
pop
adc
mov
cmp
test
scas
ret
ret
call
dec
sbb
(bad)
mov
cmps
ret
xchg
and
mov
ret
pop
ret
ret
mov
scas
or
mov
mov
mov
popf
sbb
jbe
ss
mov
and
xchg
push
inc
ret
inc
ret
xchg
ret
mov
ret
push
mov
nop
sub
ret
call
ret
test
ret
mov
lods
ret
sub
jbe
mov
sub
mov
movs
ret
(bad)
ret
ret
ret
mov
mov
and
ret
es
mov
stos
jbe
stos
ret
mov
mov
scas
ret
mov
mov
xchg
ret
mov
test
popa
ret
or
push
pop
ret
xchg
ret
ret
pop
ret
ret
add
ret
mov
ret
cmps
imul
ret
xchg
ret
mov
ret
lods
pop
sbb
retw
mov
push
dec
ret
mov
ret
nop
push
ret
mov
nop
ret
ret
call
ret
mov
ret
mov
or
xor
jne
mov
mov
xchg
jo
push
ret
fs
stos
inc
xor
lea
sub
dec
ret
ret
ret
mov
test
cwde
ret
xchg
adc
ret
ins
ret
sbb
cmp
or
pusha
ret
xchg
mov
test
cmp
mov
sub
ret
inc
push
ret
mov
push
ja
ret
ret
fwait
cmp
lods
pop
jg
test
scas
inc
ret
mov
ret
cdq
retw
add
push
adc
mov
mov
fwait
ret
pop
jge
xchg
ret
test
popa
xor
add
ret
test
mov
pop
ret
or
add
ret
stos
ret
mov
sub
cmps
ret
xchg
ret
ret
outs
ret
xchg
xchg
ret
test
adc
outs
pop
ret
lods
ret
mov
ret
xchg
cmp
mov
lods
xor
scas
push
ret
xchg
ret
mov
sub
xchg
ins
ret
xchg
sub
ret
dec
ret
mov
ret
add
ret
ret
sahf
ret
mov
ret
ret
mov
ret
xchg
cmp
cwde
ret
ret
ret
ret
jb
cmps
sub
scas
jge
mov
cmp
ret
add
ret
scas
jne
cs
ret
mov
ret
mov
adc
mov
ret
sbb
lea
ret
scas
ret
cmps
jo
lea
ret
ret
mov
mov
xor
ret
mov
and
add
xor
ret
call
ret
test
ret
xchg
ret
ret
pop
cmp
ret
dec
popa
ret
pop
dec
ret
mov
call
(bad)
aas
ret
lea
ret
ret
xchg
inc
or
ret
pop
test
ret
mov
ret
xchg
ret
test
mov
sahf
ret
ret
mov
jo
ret
ret
mov
xor
ret
stos
das
js
pop
mov
xchg
adc
mov
mov
ret
mov
ret
cmp
stos
ret
push
ret
ret
xchg
jns
push
ret
nop
ret
(bad)
ret
test
add
fwait
ret
mov
sub
mov
xchg
ret
inc
ret
lods
push
inc
ret
mov
add
ret
xchg
push
aas
ret
mov
lods
sub
sbb
ret
mov
add
ret
sahf
ret
mov
cmps
inc
inc
ret
xchg
ret
sbb
movs
dec
movnti
pop
ret
mov
jnp
xchg
pop
or
ret
lods
sub
xchg
sub
popf
ret
mov
movs
ret
xchg
stos
adc
ret
lods
push
sbb
ret
cmp
ret
cmps
cmp
mov
ret
mov
sbb
test
xchg
pop
pop
ret
ret
(bad)
jb
movs
ins
ret
stos
or
ret
xchg
ret
cmps
sub
mov
sbb
xchg
mov
ret
lea
ret
push
ret
mov
stos
ret
xchg
ret
mov
ret
inc
ret
nop
ret
ret
mov
mov
add
ret
call
pop
sahf
ret
ret
xchg
push
ret
add
ret
pop
ret
das
ret
xchg
add
xchg
pusha
data16
popf
ret
or
ret
xchg
sub
xchg
ret
popf
ret
cmps
ret
pushf
ret
mov
cmpps
ret
scas
add
movs
ret
cdq
ret
ret
mov
ret
mov
mov
mov
gs
ret
ret
xor
xor
pushf
ret
ret
lea
aaa
push
xor
sub
call
lods
ret
mov
ret
add
push
ins
ret
cwde
imul
or
dec
ret
ret
sub
xchg
mov
mov
jbe
lods
adc
mov
mov
movs
bound
ret
mov
lahf
ret
cmp
mov
dec
ret
lods
ret
ret
movs
ret
add
mov
ret
jns
push
push
ret
ret
movs
ret
ret
scas
sbb
mov
ret
mov
ret
xchg
test
dec
das
ret
mov
movs
jae
sbb
mov
add
pop
jnp
ret
ret
bound
mov
ret
ret
ret
add
ret
mov
stos
and
ret
mov
mov
ret
xchg
mov
ret
ret
ret
pusha
ret
mov
arpl
mov
ret
ret
xchg
(bad)
addr16
sahf
sbb
pop
ret
add
inc
ret
mov
ret
lods
pop
ret
dec
ret
stos
ret
pop
ret
movs
ret
mov
push
sbb
mov
lea
gs
ja
cwde
adc
test
ret
mov
mov
add
nop
ret
test
cmps
add
lods
ret
xchg
xchg
jbe
sbb
ret
test
ret
ins
jbe
scas
aas
ret
pop
sub
mov
dec
ret
ret
xchg
xor
dec
ret
sahf
outs
inc
ret
sbb
ret
lods
dec
ret
ret
ret
lods
ret
cwde
ret
push
push
daa
ret
xchg
ret
outs
xor
xchg
ret
mov
ret
sub
scas
ret
xchg
ret
fwait
adc
mov
movs
ret
mov
ret
cdq
ret
jl
ret
ret
mov
add
mov
scas
ret
push
dec
jae
ret
mov
ret
mov
cmp
jnp
xchg
push
ret
mov
xchg
ret
mov
xchg
movs
ret
mov
ret
ret
cdq
ss
ret
xchg
retw
ret
ret
add
xor
test
add
ret
mov
ret
call
pop
inc
ret
xchg
mov
dec
ret
mov
ret
ret
mov
mov
ret
mov
daa
sbb
xchg
ret
xchg
outs
ret
pushf
jno
add
mov
ret
(bad)
adc
xor
ret
xchg
ret
mov
dec
cmp
lahf
jo
ret
mov
ret
xchg
adc
ret
xchg
cs
and
cmp
xchg
ja
mov
ret
mov
mov
movs
ret
scas
and
movs
ret
mov
(bad)
aaa
ret
ret
mov
stos
ret
mov
add
ret
mov
ret
test
xchg
mov
xchg
nop
push
ret
add
and
mov
xchg
ret
gs
ret
ret
ret
movs
ret
add
ret
test
mov
mov
ret
cmps
ret
stos
ret
pop
ret
test
mov
ret
mov
scas
ret
xchg
push
inc
push
and
sahf
add
das
or
scas
ret
nop
aaa
ret
adc
jp
mov
ret
or
fwait
ret
mov
mov
lahf
xor
inc
ret
scas
ret
cmp
stos
ret
xchg
xchg
and
mov
sahf
ret
ret
ret
mov
ret
ret
ret
dec
inc
adc
push
ret
mov
ret
or
addr16
or
xchg
ret
stos
push
ret
arpl
nop
adc
sub
mov
add
ret
add
ret
mov
adc
lahf
cmp
mov
stos
ret
add
stos
ret
test
test
ret
aas
ret
pushf
ret
mov
sub
call
ret
mov
mov
sbb
cwde
ret
dec
ret
call
ret
mov
xchg
pop
ret
ret
ret
sbb
mov
push
ret
stos
add
scas
ret
xchg
movs
ret
test
retw
mov
sub
mov
ret
xchg
xchg
jne
ret
ret
mov
cmp
mov
ret
ret
cdq
ret
popf
pop
ret
ins
add
xchg
ret
ins
ret
fwait
ret
mov
ret
movups
nop
ret
jne
ret
mov
mov
lea
ret
xchg
ret
movs
jbe
ins
ins
push
pop
ret
pop
movs
jge
mov
mov
ret
sahf
ret
mov
add
ret
dec
inc
ret
mov
xchg
push
or
ret
sahf
ret
push
ret
lods
es
ret
mov
lahf
jge
xchg
or
jne
mov
ret
mov
inc
jg
test
fwait
sbb
ret
ret
add
ret
cmps
jl
scas
inc
ret
push
test
ret
movs
ret
scas
ret
mov
pop
xchg
or
cmps
ret
xchg
ret
nop
ret
mov
ret
ret
imul
dec
ret
mov
dec
ret
mov
pushf
and
pop
add
mov
ret
scas
jb
(bad)
ret
test
ret
ret
test
ret
add
add
mov
and
mov
inc
outs
cmp
mov
ret
xchg
and
pushf
and
push
or
xchg
ret
xchg
xchg
mov
ret
dec
ret
push
es
mov
lods
inc
cmp
ret
popf
ret
test
stos
push
ret
mov
xor
retw
mov
xchg
ret
xchg
ret
cs
lahf
ret
mov
mov
sahf
xor
mov
ret
lods
ret
add
push
xor
mov
ret
ret
cwde
ret
mov
ret
mov
ret
sbb
ret
mov
ret
mov
fwait
ret
lods
ret
ret
xchg
(bad)
ret
lahf
ret
and
ret
xchg
or
xchg
pop
ret
pushf
ret
inc
push
cs
ret
scas
ret
test
adc
mov
push
cmp
sahf
or
bound
lahf
ret
jg
pusha
sbb
mov
ret
add
ret
ret
dec
ret
ret
xchg
mov
mov
xchg
adc
mov
(bad)
ret
mov
xchg
jns
outs
ret
mov
ds
mov
ret
mov
ret
lods
inc
ret
movs
ret
ret
ret
add
sub
ret
cwde
ret
mov
cs
mov
ret
ret
mov
ret
test
cmp
ret
mov
cwde
push
ret
mov
dec
adc
ret
xchg
ret
pop
ret
ret
mov
pop
ret
add
xchg
ret
xchg
add
add
inc
inc
ret
inc
ds
ret
xchg
ret
mov
inc
sbb
movs
ret
lea
or
ret
movs
pop
ret
add
inc
ret
mov
mov
ret
cwde
jne
daa
ret
mov
and
mov
mov
ret
mov
sbb
mov
ret
xchg
pop
push
and
mov
and
ret
popf
ret
mov
cmps
ret
mov
add
cmova
mov
pop
jno
ret
xchg
ret
mov
lahf
push
cmp
add
or
mov
ret
mov
xchg
pop
sbb
jl
test
lods
ret
mov
mov
(bad)
adc
ret
movs
ret
lods
ret
mov
and
mov
mov
ret
xor
ret
ret
ret
xchg
ret
fwait
dec
ret
mov
mov
gs
add
mov
ret
mov
ret
xor
ret
xor
nop
ret
mov
add
pop
or
dec
ret
ret
xchg
xor
ret
movs
push
xor
ret
mov
xchg
aaa
jns
and
inc
dec
ret
sub
movs
cmp
xchg
ret
ret
mov
ret
add
pusha
pusha
ret
mov
ret
scas
ret
lods
ret
ret
ret
stos
pop
push
push
ret
and
sahf
ret
jbe
stos
pop
pop
ret
lahf
and
arpl
movs
bound
pop
adc
jle
ret
ret
mov
mov
dec
ret
add
dec
ret
ret
nop
popa
ret
ret
scas
ret
mov
movs
ret
mov
ret
sbb
dec
ds
mov
mov
sub
mov
mov
ret
xchg
xchg
ret
scas
ret
mov
ret
mov
ret
xchg
ret
pop
ret
or
cdq
ret
mov
(bad)
xor
xchg
outs
ret
popf
ret
popf
ret
mov
mov
ret
mov
and
cmps
ret
mov
ret
ret
nop
ret
mov
ret
ret
ret
dec
sbb
mov
inc
ret
ret
jge
push
sub
mov
lahf
dec
and
ret
mov
mov
ret
mov
cdq
jbe
ret
test
xchg
sbb
cmp
ret
mov
ret
xchg
ret
mov
push
inc
ret
nop
and
ret
mov
movs
and
test
pusha
ret
push
jae
xchg
outs
adc
lea
adc
xchg
ret
stos
aas
adc
movs
push
push
es
mov
push
ret
push
ret
mov
ret
lods
ret
cmps
ret
fwait
ret
mov
ret
mov
mov
and
pushf
jg
stos
or
cmps
cmpps
je
xchg
xchg
ret
cdq
cmp
xchg
ret
add
cmps
cmp
fwait
cmp
ret
pop
xchg
sub
mov
ret
nop
inc
cs
mov
mov
push
jb
ret
test
mov
mov
jns
sub
mov
pop
ret
lahf
ret
movs
ret
mov
ret
inc
dec
ret
mov
ret
nop
ret
xchg
ret
ret
movs
ret
mov
fwait
or
pop
ret
xchg
imul
sbb
mov
xchg
ret
lea
sbb
mov
jg
ret
ret
xor
ret
ret
mov
stos
ret
cmps
ret
mov
pop
ret
mov
lea
ret
cmps
push
add
ja
arpl
call
mov
xchg
lods
jae
mov
xchg
jp
add
xor
xchg
ret
mov
ret
mov
ret
mov
mov
ret
mov
pop
ret
mov
ret
cdq
ret
mov
movs
inc
ret
test
mov
lods
ret
imul
nop
ret
ret
call
imul
mov
stos
pop
aaa
add
mov
mov
sub
push
adc
test
scas
or
popf
ret
push
ret
mov
mov
ret
scas
add
mov
xor
mov
pop
ret
mov
mov
adc
ret
xchg
ret
mov
xchg
pop
jbe
ret
mov
cmp
lods
pop
ret
sbb
mov
cwde
ret
xchg
jp
ret
mov
ret
ret
test
mov
dec
ret
stos
or
add
cmp
lods
ret
ret
mov
scas
sbb
bound
add
ret
mov
ret
sahf
add
mov
ret
ret
xchg
ret
lea
mov
cmp
call
test
lea
ret
jp
xchg
ret
mov
test
cmp
ret
mov
dec
sbb
add
ret
mov
ret
cdq
retw
xchg
ret
jle
ret
mov
and
xchg
and
mov
jno
or
sbb
ret
push
imul
mov
arpl
mov
add
ret
cmps
ret
mov
push
ret
cdq
ret
mov
(bad)
imul
jo
nop
pop
ret
mov
stos
adc
add
ret
sahf
add
test
ret
cwde
pusha
ret
test
xchg
ret
mov
add
ret
cmp
ret
mov
ret
mov
ret
ret
mov
popf
daa
ret
xchg
and
ins
or
push
ret
cmps
ret
lods
ds
ret
mov
nop
gs
xchg
lods
push
and
ret
xchg
ret
mov
pop
outs
ret
mov
ret
scas
ret
fwait
ret
popf
ret
or
or
dec
ret
lods
ret
mov
test
xchg
ret
ret
mov
ret
mov
sahf
ret
mov
mov
cmpps
add
xchg
push
ret
mov
xchg
test
dec
ret
nop
ret
movs
imul
inc
ret
mov
cwde
syscall
jns
and
lahf
and
add
imul
je
mov
ret
(bad)
ret
mov
test
ret
add
sub
ret
add
ret
stos
pop
ret
mov
ret
test
cdq
and
outs
ret
mov
ret
scas
push
ret
mov
movs
pop
pop
and
push
ret
ret
ret
mov
xchg
mov
ret
xchg
jge
push
ret
ret
ret
xchg
outs
xor
scas
ret
xchg
es
xchg
ret
and
je
stos
add
add
ret
mov
ret
movs
ret
xchg
cmp
xor
ret
ret
movs
ret
ret
lahf
ret
ret
xchg
ret
scas
ret
scas
ret
xchg
jl
scas
ret
mov
ret
ret
ret
xchg
pop
ret
cmp
mov
mov
gs
xchg
jge
adc
ret
lahf
ret
xchg
adc
mov
xchg
cmpps
dec
inc
ret
nop
push
ret
mov
xor
jno
ret
xchg
ret
mov
stos
ret
mov
das
ret
mov
ret
xchg
jg
mov
ret
xchg
ret
mov
mov
jl
stos
pop
sbb
xchg
dec
and
mov
mov
add
ret
cmp
imul
test
cmps
jns
dec
adc
test
mov
xchg
jnp
ret
xchg
jp
ret
xchg
ret
ret
sahf
ins
ret
mov
ja
sbb
ret
mov
test
lea
dec
aaa
ret
mov
ret
xchg
ret
mov
call
ret
jle
and
ret
movs
imul
xor
cmps
or
mov
ret
mov
jne
xchg
ret
call
ret
mov
mov
ret
xor
mov
cmps
or
mov
mov
(bad)
popa
ret
mov
dec
ret
(bad)
ret
cmps
adc
ret
ja
outs
ret
mov
and
ret
pushf
ret
mov
mov
cmps
pop
ret
(bad)
cmovno
add
ret
ret
mov
ret
mov
mov
xchg
add
ret
mov
or
adc
mov
mov
ret
ret
ret
scas
ret
mov
push
xor
lods
push
jp
add
pop
ret
mov
test
dec
ret
mov
mov
xchg
fs
xchg
mov
js
mov
(bad)
pop
ret
mov
dec
ret
xchg
mov
or
mov
scas
ret
push
pop
pop
js
add
xchg
ret
mov
mov
ret
jle
mov
xchg
sub
call
pop
pusha
jbe
test
xchg
mov
cmp
aas
xor
inc
ret
ret
mov
ret
test
mov
mov
call
xchg
jbe
xor
sbb
adc
ret
mov
mov
mov
ret
ret
scas
ret
mov
cmp
lods
je
mov
ret
test
popf
or
test
ret
sbb
call
ret
ret
jns
mov
ret
movs
inc
jb
ret
xchg
or
xchg
aas
ret
ret
add
xor
pop
sub
xchg
xchg
or
xor
xchg
ret
mov
ret
lahf
or
pop
mov
bound
lods
ret
fwait
adc
lea
xchg
ret
mov
ja
add
adc
mov
mov
xor
call
mov
jnp
ret
mov
push
ret
mov
ret
mov
ret
xchg
ret
nop
punpckhbw
ret
test
xchg
test
ret
pop
mov
pop
nop
ret
mov
add
and
xchg
add
ret
push
ret
mov
mov
xchg
ret
pushf
or
mov
and
ret
ret
pushf
add
add
ret
fwait
jp
mov
dec
outs
ret
ret
xchg
mov
ret
mov
add
mov
(bad)
mov
ret
cmp
movs
ret
mov
jae
ret
mov
add
cmp
ret
mov
cmps
ret
mov
ret
mov
cmps
ret
pop
ret
push
push
mov
ret
stos
dec
or
mov
push
ret
mov
ret
xchg
ret
or
cwde
ret
mov
push
ret
xchg
ret
mov
movs
ret
mov
inc
adc
dec
ret
mov
nop
jnp
ret
sahf
ret
ret
mov
mov
mov
ret
pushf
pop
push
pop
push
mov
lahf
ret
ret
ret
mov
cmp
sbb
ret
ret
sbb
xchg
stos
inc
ret
mov
ret
call
mov
xchg
sbb
stos
ret
lods
sub
ret
test
and
ret
mov
cmp
lahf
ret
test
xor
movs
add
xchg
ret
add
ret
xchg
ret
lea
ret
ret
mov
jo
ret
mov
mov
xchg
ret
mov
mov
ret
ret
mov
mov
xchg
ret
pop
ret
cmps
sub
ret
sbb
ret
mov
pushf
ret
xchg
xor
ret
cmp
dec
aas
push
or
mov
xor
sub
xchg
ret
mov
ret
add
ret
es
mov
mov
mov
mov
lahf
ret
xchg
ret
adc
push
pop
punpckhwd
mov
mov
ret
popf
dec
popa
ret
mov
sbb
mov
je
pushf
sbb
ret
mov
mov
pushf
ret
pop
ret
mov
cwde
ret
mov
xchg
ret
mov
lods
sub
dec
xor
mov
push
or
jge
mov
ret
mov
sub
adc
and
ret
cmps
ret
mov
mov
scas
ret
mov
test
stos
es
cdq
or
xchg
ret
mov
ret
mov
add
sub
mov
cdq
ret
jl
ret
add
daa
xor
mov
mov
ret
nop
ret
ret
mov
add
sub
lods
ret
stos
ret
inc
ret
test
xchg
mov
ins
ret
xchg
ret
xchg
pop
ret
scas
ret
mov
or
ret
ret
mov
cmps
pop
ret
ret
xchg
and
ret
je
scas
sbb
ret
mov
ret
pushf
adc
xchg
ret
mov
ret
fwait
ret
mov
ret
ret
scas
pusha
ret
mov
and
pop
sub
lods
ret
mov
ret
stos
ret
xchg
ret
ret
mov
mov
ret
mov
dec
push
outs
ret
xchg
dec
popa
ret
mov
jnp
inc
ret
pushf
or
ret
lods
ret
mov
mov
ins
imul
adc
ret
add
ins
push
ret
ret
lahf
ret
jns
ss
xchg
ins
jp
lods
ret
popf
ret
ret
cwde
and
xor
mov
aaa
jb
ret
ret
ret
add
lea
imul
ret
mov
ret
cmps
ret
inc
ret
test
ret
mov
ret
inc
ret
mov
or
ret
(bad)
ret
sub
popf
push
pop
sub
mov
(bad)
adc
scas
ja
ret
test
outs
jae
es
mov
test
mov
mov
jo
ret
test
dec
sbb
adc
adc
(bad)
push
js
ret
xchg
mov
stos
ret
stos
ret
push
ret
movs
xor
sub
xchg
mov
adc
lahf
ret
mov
cmps
ins
xor
cwde
ret
mov
mov
ret
mov
xchg
inc
ret
movs
ret
stos
dec
ret
test
xchg
ja
xchg
ret
mov
ret
mov
stos
inc
ret
lahf
or
mov
push
jg
sub
add
ret
cdq
sbb
lods
jnp
ret
mov
dec
ret
mov
add
lahf
dec
cmp
and
sbb
ret
ret
mov
movs
ret
xor
nop
ret
or
popf
sub
jns
ret
xchg
dec
ret
pushf
ret
mov
or
xchg
xchg
ret
mov
ret
movs
ret
mov
mov
mov
mov
ret
xchg
and
ret
mov
ret
mov
mov
add
lods
pusha
inc
or
and
cmps
xor
ret
ret
add
ret
xchg
ss
aaa
ret
movs
ret
xchg
xchg
ja
call
ret
cmps
ret
mov
push
pop
ret
test
sahf
jbe
cmp
scas
gs
ret
test
cs
cs
mov
ret
cmps
ret
mov
push
ret
push
cmpps
dec
ret
stos
ret
xchg
test
mov
jp
mov
and
xchg
mov
mov
cmp
mov
mov
stos
ret
dec
dec
ret
mov
ret
mov
test
popa
ret
xor
inc
ds
cmps
ret
xor
imul
ret
mov
ret
mov
lods
ret
mov
cmp
ret
cwde
ret
mov
lahf
sbb
ret
stos
ret
ret
add
dec
inc
je
adc
ret
mov
pop
imul
jns
mov
mov
ins
ret
scas
dec
ret
test
ret
mov
mov
ret
pushf
cs
ret
ret
scas
ret
call
ret
jo
ret
xchg
ret
jg
mov
mov
call
nop
ret
test
xchg
xor
cdq
ret
mov
mov
dec
push
xor
mov
ret
lahf
sub
test
scas
ret
ret
pop
or
ret
ret
test
add
push
sub
lahf
ret
jle
(bad)
ret
lods
ret
mov
nop
dec
ret
mov
ret
and
ret
add
jbe
cwde
pop
cmp
ret
mov
test
ret
nop
outs
jns
ret
mov
lea
ret
xchg
ret
mov
mov
ret
ret
ret
nop
ret
xchg
sub
mov
mov
ret
add
ret
popf
or
ret
cmps
ret
arpl
mov
xchg
imul
mov
sub
add
ret
sahf
ret
stos
ret
mov
mov
scas
ret
test
jle
mov
sahf
ret
xchg
ret
cmps
ret
ret
sahf
sub
mov
cdq
ret
sahf
sub
push
ret
mov
dec
jbe
ret
mov
inc
ret
add
ret
ret
ret
mov
movs
ret
(bad)
ret
movs
ret
sub
nop
ret
xor
mov
ret
mov
ret
gs
mov
nop
jne
cmp
test
xchg
ret
mov
ret
cmp
and
ret
mov
ret
mov
ja
ret
add
ret
jg
call
push
arpl
mov
lods
ret
ret
xchg
mov
ret
cmps
push
ret
stos
jp
jp
and
adc
mov
pop
xor
cwde
ret
adc
xchg
ret
popf
ret
sub
ret
add
ret
mov
pop
pop
ret
scas
cmp
ret
stos
ss
mov
ret
mov
push
xchg
mov
inc
pop
sub
test
ret
mov
add
push
sbb
inc
pop
ret
ret
sahf
ret
nop
ret
lods
ret
adc
lahf
ret
mov
jns
mov
cmps
ret
movs
or
ret
or
ret
ret
xchg
push
ret
add
ret
ret
ret
xchg
pop
ret
mov
or
pop
inc
ret
(bad)
ret
ret
xchg
and
xchg
sahf
ret
mov
ret
mov
ret
mov
add
mov
cmps
cmp
js
(bad)
adc
pop
ret
cwde
push
ret
nop
ret
dec
push
ret
mov
lea
(bad)
sub
ret
scas
or
xchg
ret
ret
mov
ret
xchg
mov
xchg
movs
ret
add
ret
lahf
ret
mov
ret
movs
inc
ret
mov
mov
mov
ret
xchg
ret
mov
xchg
push
ret
lods
or
lea
mov
ret
xchg
mov
ret
mov
pop
gs
mov
test
ret
mov
jge
cdq
ret
popf
ret
mov
mov
test
mov
mov
test
mov
ret
mov
push
ret
lea
mov
popa
ret
call
pusha
ret
test
ret
pop
sahf
jge
mov
cmps
ret
popf
sbb
scas
pop
jae
xchg
dec
cmp
xor
lahf
ret
test
addr16
ret
cmp
xchg
and
lods
ret
xchg
ret
mov
stos
ret
stos
ret
cmps
ret
mov
ret
or
ret
mov
dec
ret
mov
ret
mov
ret
ret
dec
ret
mov
push
ret
xchg
ins
adc
mov
pop
xchg
ret
mov
ja
imul
ret
xchg
ret
ret
and
jp
ret
cmps
ret
mov
ret
ret
nop
ret
sub
ret
jb
ret
mov
ret
adc
mov
jnp
(bad)
es
popf
ret
test
lods
adc
adc
ret
xchg
ret
sahf
ret
pushf
sub
pop
xchg
scas
or
adc
mov
ret
cwde
pcmpgtb
ds
mov
add
xchg
sbb
xchg
ret
ret
movs
ret
scas
ds
dec
xor
ret
call
fs
mov
pusha
jno
lahf
ret
nop
dec
adc
fwait
xor
mov
sbb
mov
ret
and
ret
scas
fs
ret
mov
or
xor
ret
movs
adc
xor
mov
xchg
ret
sub
call
ret
mov
ret
pushf
cmp
cmp
jo
xor
mov
mov
xchg
cdq
ret
cdq
ret
mov
pushf
sbb
mov
mov
xor
or
mov
ret
stos
ret
ret
sub
jno
dec
ret
cmp
mov
xchg
pop
ret
or
cmp
xor
ret
dec
adc
call
outs
jns
mov
ret
mov
ret
cdq
cmp
mov
cwde
ret
jns
ret
ret
mov
movnti
test
xchg
sbb
ret
add
ret
ret
jo
mov
(bad)
pusha
ret
xchg
mov
ret
movs
ret
mov
mov
and
ret
xchg
push
ret
xchg
jb
test
lea
xchg
add
mov
cmp
mov
ret
mov
or
mov
ret
ret
lods
pop
dec
cmp
test
sub
lahf
sbb
lahf
pop
ret
jne
test
ret
inc
jge
ret
ret
add
ret
xchg
nop
and
ret
xchg
xor
mov
imul
pop
add
aaa
push
adc
mov
outs
cmp
xchg
add
cdq
ret
xchg
ret
pop
ret
mov
jp
pop
aas
adc
popf
ins
jne
and
movs
push
aas
ret
jb
ret
mov
ret
mov
ret
call
xchg
push
ret
stos
dec
sub
test
mov
xchg
jp
add
add
ret
mov
xchg
ret
mov
or
push
pop
push
adc
mov
xchg
push
ret
xchg
ret
mov
stos
ret
mov
pop
xchg
jl
cmps
sbb
mov
aaa
ret
cmp
xchg
ret
stos
ret
mov
sub
aas
adc
ret
cs
mov
ret
movs
push
sub
ret
mov
or
scas
add
popf
ret
ret
ret
aaa
je
xchg
mov
scas
ret
mov
mov
mov
ret
adc
outs
and
pushf
jae
ret
mov
and
cwde
ret
test
sub
add
push
and
add
add
push
ret
mov
dec
ret
mov
call
ret
mov
ret
xor
ret
xchg
cmps
ret
cmps
inc
dec
pop
ret
ret
mov
mov
mov
dec
ret
mov
(bad)
sub
xchg
ret
lahf
ret
ret
pop
inc
daa
ret
mov
nop
js
or
arpl
lahf
ret
stos
ret
mov
inc
ret
ret
lods
or
ret
mov
mov
sahf
push
or
xchg
sahf
or
sbb
mov
scas
ss
call
ret
pushf
ret
ret
push
push
ret
lods
ret
test
ret
mov
sub
lahf
ret
ret
ret
sahf
inc
cmp
mov
outs
cmp
add
mov
dec
ret
mov
xchg
ret
or
test
je
stos
push
ret
test
xor
arpl
jl
ret
xchg
jo
ret
ret
popf
pop
ret
ret
xchg
ret
movs
push
ret
ret
cmps
das
cmp
mov
ret
pop
mov
mov
ret
mov
ret
dec
dec
jp
popf
pop
ret
xchg
dec
ret
pushf
aas
pop
ret
mov
ret
test
ret
sub
ret
mov
dec
pop
ret
lea
popa
jle
test
popf
ret
nop
ret
ret
pushf
ret
mov
fwait
bound
and
ret
pushf
ret
movs
ret
lods
or
ret
inc
ja
stos
ja
scas
push
or
inc
ret
sahf
ret
lods
and
ret
ret
ret
xor
pop
cmp
add
ret
ins
ret
adc
test
jge
and
mov
xchg
ret
ret
xchg
ret
dec
add
mov
add
ret
call
ret
pop
ret
mov
xchg
ret
xchg
lea
ret
mov
jnp
or
fwait
ret
xchg
xor
lods
daa
ret
cmps
ret
xchg
ret
ret
or
inc
dec
ret
stos
sbb
mov
ret
mov
ret
add
pop
ret
ret
mov
test
ret
ret
xchg
ret
mov
pop
mov
ret
mov
ds
cwde
ret
ret
ret
xchg
ret
mov
jne
mov
dec
sbb
ret
inc
ret
ja
lods
cmp
xor
mov
add
add
ret
(bad)
outs
ret
ret
mov
ret
mov
ret
ret
test
sub
mov
mov
test
ret
scas
inc
ret
stos
ret
mov
arpl
xchg
ret
(bad)
ret
stos
ret
sbb
ret
xchg
ret
pop
push
ret
cwde
ret
xchg
pop
js
jg
or
mov
inc
ret
pop
test
mov
ret
mov
ret
mov
mov
mov
dec
or
jnp
stos
aas
push
inc
ret
add
cmp
test
ret
mov
pop
ret
cmps
ret
call
ret
nop
ret
pop
ret
mov
cmp
lods
dec
retw
daa
pop
aaa
sub
pop
jnp
ret
scas
ret
call
sub
movs
ret
xchg
ret
xchg
jb
push
movs
ret
lods
cmp
mov
ret
mov
lahf
sbb
sub
mov
ret
mov
ret
mov
mov
mov
mov
or
add
mov
ret
lea
call
ret
xchg
add
movs
dec
ret
mov
mov
ret
xchg
xchg
ret
mov
mov
ret
mov
jnp
ret
cwde
ret
xchg
ret
mov
add
ret
lahf
ret
cmps
ret
mov
scas
ret
fs
cmp
pushf
push
ret
call
pop
sub
mov
mov
dec
imul
cmp
ret
cmps
ret
mov
mov
xchg
ret
mov
ret
scas
ret
test
ret
call
lods
ret
stos
ret
mov
imul
ret
(bad)
ret
mov
xchg
ret
mov
jl
ret
ret
test
sahf
cmp
mov
ret
mov
add
cmps
ret
call
ret
mov
ret
add
ret
dec
ret
sahf
ret
ret
lods
dec
aaa
push
add
ret
mov
ret
sahf
ret
mov
mov
mov
ret
adc
xchg
xor
ret
pushf
dec
ret
mov
mov
sbb
test
ret
outs
ja
mov
add
mov
ret
and
pop
ret
lods
ret
mov
mov
xor
mov
jl
ret
mov
mov
jb
stos
pop
ret
jge
push
adc
test
sbb
addr16
xchg
(bad)
cmp
mov
ret
test
(bad)
xor
test
dec
ret
lods
add
ret
scas
ret
cmps
dec
and
ds
mov
mov
ret
cmp
mov
ret
mov
ret
mov
ret
lahf
retw
movs
adc
mov
cmp
popf
pop
ret
mov
dec
ret
ret
ret
mov
ret
push
ja
mov
ret
ret
mov
mov
mov
test
mov
ret
xchg
or
ret
mov
scas
ret
ret
ret
xchg
cmp
pop
ret
ret
mov
ret
mov
dec
pop
ret
test
mov
ret
scas
xor
and
nop
ret
xchg
push
ret
ret
ret
mov
cwde
push
ret
ret
mov
scas
fs
dec
ret
test
xchg
ret
mov
xchg
sub
mov
xchg
cmp
mov
ret
test
xchg
mov
mov
ret
test
add
ret
mov
dec
ret
add
jns
mov
mov
ret
mov
jb
mov
ret
xor
ret
xchg
push
push
sbb
jge
and
ret
mov
xor
stos
ret
mov
jns
dec
dec
push
ret
ret
mov
lahf
or
ret
arpl
mov
pop
push
ret
jne
mov
jns
lahf
dec
cmp
mov
stos
pop
ret
popf
ret
ret
mov
movs
sub
mov
xchg
test
sub
ret
mov
(bad)
ret
ret
ret
test
xchg
ins
ret
(bad)
ret
mov
ret
pop
xchg
test
add
ret
ret
mov
mov
ret
mov
test
test
test
aaa
ret
mov
sbb
ret
pushf
ret
mov
jb
mov
mov
inc
ret
ss
mov
xchg
ret
jno
mov
sub
sbb
retw
mov
jg
ret
sahf
pop
ret
mov
ret
mov
test
ss
mov
ret
test
xchg
ret
movs
push
ret
mov
ret
add
test
ret
call
ret
ret
mov
mov
mov
ret
mov
ret
mov
or
xor
mov
mov
cmp
ret
mov
lahf
ret
xchg
ret
ret
pop
cmps
ret
xchg
push
jb
ret
ret
xchg
js
add
ret
mov
ret
ret
ret
call
ret
call
push
pop
ret
adc
lahf
ret
popf
adc
ret
sahf
push
adc
add
imul
mov
ret
popf
inc
ret
mov
je
ret
xchg
and
test
pop
stos
je
outs
jnp
ret
ret
add
ret
test
mov
sbb
adc
cmps
or
ret
add
pop
ret
ret
xchg
or
lods
dec
xor
test
pushf
pop
ret
mov
ret
mov
push
ret
mov
dec
push
mov
cmp
mov
ret
xchg
arpl
test
mov
mov
lods
ret
(bad)
ret
mov
retw
mov
ret
mov
stos
ret
lea
mov
js
ret
ret
xchg
ret
cmps
ret
mov
cmps
ret
gs
mov
ret
mov
add
ret
jnp
mov
test
xchg
ret
movs
dec
ret
mov
adc
test
ret
ret
cwde
adc
mov
jb
ret
ret
xchg
ret
add
push
ret
cmps
ret
(bad)
ret
mov
pop
ret
mov
movs
ret
mov
ret
add
mov
xor
xchg
dec
ret
ret
push
jns
ret
test
xchg
dec
ret
mov
xchg
ret
push
ret
jnp
push
adc
ret
mov
pop
sbb
ret
xchg
ret
sub
pushf
xor
test
ret
nop
je
mov
ret
ins
dec
outs
pop
ret
ret
lea
ret
mov
lods
push
ret
xchg
ret
mov
mov
ret
add
ret
add
ret
ret
xchg
ret
lods
ret
ret
ret
cdq
ret
mov
cmpps
lods
ret
cmps
ret
mov
ret
test
xchg
push
ret
ret
mov
inc
ret
popf
ret
test
mov
ret
mov
cmp
inc
cmp
fwait
push
ret
ret
call
ret
xchg
lods
arpl
mov
push
ret
add
ret
test
cmp
pop
sbb
xchg
lea
inc
ret
cdq
ret
scas
pop
ret
scas
ret
cdq
ret
ret
test
popf
and
mov
xor
scas
ret
stos
pop
ja
mov
mov
inc
ret
mov
(bad)
ret
fs
ret
lods
push
ret
xchg
jp
xchg
push
ds
mov
ret
xchg
ret
mov
test
ret
xchg
ret
cmps
or
ret
mov
mov
ret
xchg
push
ret
mov
mov
adc
mov
outs
ret
mov
xchg
jge
ret
ret
mov
ret
xchg
stos
ret
mov
cmps
retw
stos
pop
sbb
mov
sbb
cmps
ret
scas
ret
fwait
ret
cmps
ret
ja
or
mov
push
and
mov
push
push
ret
ret
scas
jae
cdq
jl
push
ret
xchg
pop
es
mov
ret
ret
jle
or
popa
ret
mov
mov
mov
ds
mov
xor
cdq
ret
lea
popf
push
dec
jnp
retw
mov
push
or
test
xor
ret
ret
fwait
push
pop
pop
jno
sub
ret
test
xchg
ret
call
ret
ret
mov
ret
ret
call
test
ret
stos
and
mov
add
ret
mov
ret
mov
ret
push
jle
adc
ret
xor
pop
or
sub
cmp
dec
ss
ret
mov
push
adc
mov
ret
mov
ret
add
ret
lahf
adc
mov
ret
imul
xchg
ret
mov
mov
fs
or
ret
push
and
stos
ret
ret
lahf
ret
sahf
and
cmps
ret
test
ret
stos
ret
mov
push
ret
mov
or
nop
jp
addr16
ret
call
ret
ret
(bad)
sbb
mov
ret
mov
pop
sub
ret
ret
xchg
ret
ret
ret
mov
test
ret
ret
xchg
cmp
movs
and
test
jb
scas
dec
or
lahf
ss
mov
cmp
ret
popf
ret
xchg
or
call
ret
ret
mov
mov
jp
inc
ret
test
ret
cmps
popa
ret
test
mov
call
cmps
ret
add
jbe
ret
mov
xor
push
pop
ret
aaa
and
ret
stos
ret
test
xchg
jge
or
ret
ret
pushf
outs
ret
xchg
ret
inc
sbb
mov
xchg
ret
scas
ret
mov
ret
xchg
mov
(bad)
ret
xchg
dec
sbb
ret
scas
ret
mov
cdq
ret
ret
xchg
add
ret
cmps
ret
xor
ret
mov
push
inc
ret
ret
sub
test
ret
fwait
pop
ret
mov
pop
ret
cmp
aas
inc
jb
pusha
adc
xchg
sub
xchg
ret
mov
mov
add
mov
mov
or
jl
jp
xchg
push
add
ret
test
mov
ret
mov
mov
mov
lea
adc
ret
xchg
ret
xchg
push
jge
mov
ret
ret
xchg
js
ret
ret
mov
mov
mov
mov
inc
ret
pushf
ret
mov
ret
mov
ret
mov
lods
ret
mov
ret
xchg
sub
pushf
ret
mov
xchg
test
test
push
pop
or
mov
ret
mov
ret
mov
inc
ret
mov
sub
xchg
cmp
mov
mov
inc
ret
or
ret
ret
fs
xchg
ret
ret
mov
ret
mov
mov
mov
xchg
or
mov
mov
mov
push
ret
ret
mov
outs
outs
inc
dec
ret
mov
ret
test
ret
mov
test
lea
ret
mov
ret
xchg
add
push
and
outs
addr16
ret
cdq
sub
ret
mov
test
gs
mov
ret
pusha
sub
ret
pop
add
mov
cmp
mov
ret
mov
adc
mov
ret
mov
add
mov
ret
mov
pop
test
lahf
jp
ret
mov
ret
xchg
jp
(bad)
xor
mov
mov
mov
das
pusha
ret
cmps
ret
cmps
ret
stos
adc
mov
push
or
stos
ret
mov
call
xchg
xchg
mov
or
inc
jo
cmp
pusha
cmp
ret
call
ret
xchg
ret
mov
ret
movs
and
push
ret
imul
popf
or
call
ret
mov
add
ja
ret
ret
adc
ret
sub
and
sbb
mov
xchg
pop
ret
sahf
ret
xchg
ret
cwde
das
adc
movs
pop
popa
ret
stos
ret
mov
inc
ret
adc
ret
mov
mov
ins
jno
cwde
ret
dec
ret
xchg
mov
ret
movs
ret
sahf
push
ret
mov
mov
ret
mov
mov
mov
cmp
ret
sub
ret
mov
ret
mov
inc
adc
mov
ret
test
and
movs
ret
xchg
dec
ret
lods
dec
jp
ret
popf
sub
xchg
push
ret
test
sbb
jb
ret
mov
xchg
ret
test
movs
adc
stos
ret
popf
dec
jns
ret
lahf
push
push
cmps
sub
ret
mov
xor
mov
dec
ret
scas
ret
stos
ret
cmps
pop
popa
ret
mov
mov
push
mov
ret
movs
or
xchg
ret
mov
ret
jno
ret
scas
ret
lods
ret
mov
scas
ret
mov
push
addr16
movs
ret
mov
pusha
ret
test
ret
xchg
adc
ret
lods
ret
mov
test
ret
ret
add
mov
scas
ret
mov
pushf
ret
dec
inc
ret
mov
lods
xor
cdq
dec
ret
mov
mov
ret
mov
ret
test
xchg
push
ret
mov
ret
add
ret
xchg
ret
pusha
cmp
ret
xchg
jns
sub
lea
ret
call
cmps
ret
mov
ret
cmpps
ret
cwde
ret
cwde
and
inc
ret
xchg
ret
xchg
ret
mov
cdq
ret
push
or
ret
cwde
xor
scas
ret
mov
pushf
sub
ret
jl
push
ret
ret
mov
ret
mov
lods
ret
cmps
ret
mov
ret
sbb
cwde
ret
ret
xor
adc
dec
push
push
or
mov
cwde
ret
xchg
dec
pop
ret
stos
ja
pop
cmp
mov
ret
add
ret
mov
ret
ret
mov
mov
lods
ret
mov
ret
xchg
ret
sbb
sahf
add
movs
ret
and
mov
movs
ret
mov
and
add
test
ret
pushf
ret
push
add
dec
ret
cdq
bound
push
ret
ret
fwait
pop
ret
ret
movs
ret
mov
jb
test
ret
mov
xchg
inc
ret
stos
cmp
mov
cdq
jge
mov
lea
mov
sahf
ret
stos
jns
mov
xchg
ret
xchg
jnp
ret
sub
cdq
ret
or
call
pop
adc
xchg
sbb
add
call
ret
mov
mov
ret
pushf
or
and
ret
mov
adc
ret
mov
ins
push
jle
lods
ret
ret
(bad)
xchg
ret
mov
ret
ret
pushf
jne
test
ret
mov
cwde
pop
ret
ret
mov
jle
lods
cmp
xor
jne
ret
xchg
sbb
mov
mov
ret
xchg
mov
mov
jb
mov
ret
mov
ret
ret
ret
mov
inc
xor
test
ret
fwait
ret
mov
xchg
ret
lahf
ret
xchg
xor
sbb
sahf
push
ret
adc
push
inc
adc
lods
adc
mov
ret
lahf
ret
mov
ret
mov
mov
ret
xchg
ret
ret
cmps
push
adc
mov
xor
ret
cwde
popa
ret
mov
ret
sbb
mov
je
mov
lahf
ds
ret
fwait
ret
ret
mov
push
and
movs
adc
dec
ret
push
dec
outs
ret
cmps
ret
popa
push
ret
ret
xchg
xchg
mov
ret
mov
xchg
and
add
ret
fwait
ret
mov
push
ret
ret
xchg
pop
es
mov
jp
adc
ret
jb
sub
lea
ret
sub
ret
xchg
outs
add
ret
mov
scas
dec
ret
ret
mov
pop
ret
stos
ret
stos
ret
movs
jnp
add
or
scas
ins
inc
ret
mov
push
or
xchg
and
cwde
ret
mov
es
mov
mov
cmp
add
ret
mov
mov
stos
pop
push
ret
sbb
sub
push
ret
stos
ret
cdq
ret
xchg
pop
ret
stos
jle
and
ret
xchg
ret
adc
mov
sbb
inc
ret
mov
xchg
ret
xchg
movnti
or
xchg
jl
scas
adc
push
ja
xchg
ret
mov
packuswb
mov
mov
ret
mov
sbb
ret
mov
ret
mov
ret
mov
mov
mov
push
aaa
ret
mov
sub
xchg
ret
jno
mov
ret
xchg
pop
jp
mov
cmps
ret
(bad)
push
sub
scas
jg
ret
test
mov
mov
mov
ret
mov
adc
lods
ret
xchg
ret
ret
nop
ret
scas
adc
ret
ret
mov
scas
movnti
add
sahf
ret
mov
mov
ret
or
mov
ret
xchg
ret
mov
inc
ret
xchg
ret
mov
ret
lahf
ret
mov
mov
add
or
ret
ret
cmps
xor
ins
ret
xchg
ret
ret
stos
ret
xchg
ret
mov
cwde
ret
nop
push
add
dec
or
add
cmp
mov
xor
mov
mov
pop
add
mov
es
ret
add
sbb
lods
jb
push
xor
mov
ret
mov
mov
mov
ret
stos
ret
mov
ret
mov
ret
add
or
ret
inc
ret
mov
sub
test
mov
add
ret
xor
ret
add
ret
mov
ret
nop
push
add
xchg
outs
ret
xchg
ret
ret
sahf
popa
addr16
mov
xchg
js
mov
xchg
ret
cmp
mov
mov
ret
mov
add
mov
xchg
and
cmp
test
and
xchg
xor
mov
jge
aas
ret
mov
arpl
mov
ret
ja
ret
mov
lods
ret
mov
ret
mov
ret
xchg
ret
ret
mov
mov
mov
gs
push
ret
add
ret
lods
jb
xor
mov
ret
aaa
jb
ret
(bad)
ret
test
cmps
adc
mov
sbb
inc
ret
mov
mov
and
ret
ret
mov
ret
sahf
sub
adc
mov
mov
sub
xchg
ret
fwait
ret
stos
dec
jo
mov
ret
cmps
sub
xchg
or
mov
cwde
or
ret
pop
lahf
xor
ret
addr16
ret
ret
ret
cmovg
ret
xchg
mov
or
das
dec
pop
pop
inc
sbb
xchg
mov
mov
pop
ret
sbb
mov
mov
dec
ret
jae
mov
sub
push
ret
mov
or
ret
mov
adc
mov
push
ret
mov
mov
xchg
or
pushf
adc
test
ret
mov
ins
ret
ret
rsqrtps
mov
mov
cmp
and
cmpps
push
nop
and
pop
sbb
test
stos
ret
xchg
ret
xchg
ret
mov
xor
xchg
ret
ret
ret
stos
ret
lods
ret
lods
outs
add
pop
ret
xchg
test
mov
push
add
push
ret
xchg
push
outs
ret
mov
ret
mov
pop
ret
ret
ret
adc
nop
add
xchg
or
ret
ret
pop
jne
ret
lods
sbb
xchg
arpl
stos
pop
cmp
xchg
xchg
ret
cmp
xchg
ret
xchg
mov
mov
ret
mov
xchg
ja
xchg
ret
adc
je
mov
ret
adc
ret
cdq
push
jnp
jno
xchg
ret
mov
ret
or
xchg
xor
ret
scas
pop
sub
xchg
jae
mov
mov
ret
mov
ret
mov
ret
ret
ret
mov
ret
mov
or
lods
inc
ret
movs
ret
lods
pop
ret
cmps
jnp
xor
add
daa
dec
ret
stos
push
xor
mov
xchg
aas
ret
ins
ret
call
ret
(bad)
imul
ret
adc
cdq
ds
adc
push
das
ret
mov
ret
add
aas
sub
mov
push
retw
ret
mov
mov
ret
lahf
jge
ret
fwait
ret
mov
add
ret
mov
cmp
push
ret
sahf
popa
ret
mov
sub
ret
movs
ret
mov
ret
mov
nop
ret
ret
ret
jg
ret
sub
xchg
es
mov
nop
ret
mov
test
cwde
ret
mov
mov
ret
cmps
push
ret
xchg
ret
pop
scas
and
push
sbb
cmp
cmps
ret
xchg
pop
ret
lods
ret
nop
xor
ret
stos
ret
mov
ret
imul
ret
xchg
xchg
ret
mov
xchg
ret
add
ja
cwde
ret
mov
dec
pop
push
ret
ret
lods
inc
or
ret
scas
jae
and
mov
pop
ret
(bad)
ret
ret
sub
ret
movs
jo
mov
cs
add
ret
jne
xchg
jl
or
ret
mov
ret
scas
inc
aas
ret
mov
mov
jne
sahf
xor
add
add
nop
cmp
mov
popf
ret
mov
ret
test
mov
scas
addr16
adc
test
mov
ret
test
ret
mov
(bad)
sub
ret
cmp
lahf
sbb
popf
outs
ret
fwait
ret
cmp
inc
ret
mov
mov
mov
fwait
push
and
mov
push
ret
pushf
cmp
mov
xchg
sbb
xchg
ret
xchg
pop
ret
mov
or
xchg
inc
outs
ret
push
ret
pop
mov
pop
ret
mov
ret
test
test
mov
mov
cwde
or
pop
ret
add
ret
mov
ret
xchg
push
pop
ret
add
ret
mov
ins
ins
ss
popf
push
push
ret
test
stos
ret
xor
mov
ret
(bad)
ret
fwait
das
ret
ret
mov
imul
pop
ret
mov
fwait
ret
xchg
daa
pop
ret
mov
ret
mov
mov
pop
ret
cmps
or
mov
ins
jbe
mov
ret
xchg
adc
sub
pushf
push
ret
mov
pushf
ret
ret
mov
test
movs
ja
ja
outs
ret
mov
ret
add
jae
pop
gs
ret
movs
add
nop
ret
mov
mov
cmp
ret
movs
pusha
(bad)
ret
mov
ret
mov
mov
cwde
jb
ret
ret
mov
fwait
ret
add
adc
cmps
jl
ret
mov
lods
ret
xchg
ret
mov
ret
xchg
imul
adc
mov
popf
push
sbb
test
ret
mov
ret
lods
ret
ret
mov
nop
ret
mov
mov
ret
cmps
ret
mov
mov
add
mov
pop
cdq
fs
ret
ss
mov
mov
or
ret
pushf
ret
ret
test
pop
ret
nop
ret
movs
ret
ret
mov
ret
mov
ret
mov
pop
pop
sbb
ret
mov
mov
movs
sbb
mov
ret
adc
xchg
ret
push
pop
add
xchg
das
inc
inc
ret
lods
push
mov
pushf
ret
mov
lods
ret
mov
ret
mov
ret
mov
ret
cwde
dec
push
pop
ret
mov
ret
cmp
pusha
ret
cdq
ret
add
imul
lea
mov
inc
inc
ret
lods
ret
mov
mov
or
test
ret
ins
ret
mov
adc
ret
mov
ret
mov
cmps
ret
popf
ret
mov
stos
jb
xchg
and
mov
ret
scas
ret
xchg
ret
sub
and
test
mov
ret
ret
mov
scas
ret
scas
ret
cmps
outs
ret
fwait
ret
xchg
ret
mov
ret
jb
push
ret
mov
mov
call
ret
or
nop
ret
pushf
add
xchg
ret
ret
test
lahf
ret
ret
add
add
ret
mov
mov
sbb
(bad)
xor
ret
ret
scas
ret
mov
(bad)
ret
mov
pop
mov
xchg
pop
ret
mov
mov
addr16
add
sbb
mov
ret
ret
xchg
ret
mov
pop
cmps
inc
ret
mov
mov
movs
ret
add
ret
ret
test
ret
mov
mov
inc
adc
ret
call
mov
inc
jnp
ret
xchg
jbe
mov
fwait
jg
mov
xor
ret
popf
ret
ret
ret
mov
jne
xchg
push
ret
ret
test
mov
xchg
push
daa
sub
ret
scas
ret
mov
popf
ret
ret
xchg
and
ret
mov
add
ds
xor
mov
lods
or
movs
ret
ret
xor
push
ss
ret
xchg
ret
stos
and
pusha
ret
movs
push
mov
jnp
ret
mov
ret
adc
ret
popf
jp
mov
stos
ret
xchg
sub
xchg
test
mov
mov
ret
add
xchg
xchg
ret
xchg
ret
pop
mov
cmp
push
ret
ret
test
xchg
ret
mov
scas
ret
test
ret
add
ret
movs
js
cmp
push
ret
nop
and
mov
push
ret
pop
ret
xchg
ret
ret
ret
cmps
adc
mov
aaa
ret
ret
inc
sbb
stos
inc
ret
xchg
sub
test
ret
ret
daa
ret
xchg
ret
nop
adc
mov
xchg
ret
mov
mov
ret
and
ret
mov
ret
fwait
dec
ret
jge
ds
xchg
and
ret
mov
ret
lea
mov
xchg
scas
ret
mov
ins
ret
mov
mov
or
addr16
mov
add
ret
ss
ret
sub
ret
fwait
arpl
movs
inc
fs
xchg
ret
mov
ret
mov
popf
ret
mov
xchg
scas
pop
pop
ret
inc
ret
mov
ret
ret
cdq
or
jns
xchg
ret
xor
mov
xchg
xchg
ret
mov
push
cmp
inc
ret
mov
ret
xchg
ret
mov
mov
sbb
ret
jbe
ret
pushf
xor
cmps
ret
mov
imul
ret
ret
ret
push
ins
ret
mov
mov
es
mov
xchg
xor
lea
popf
pop
or
xchg
ret
mov
test
lods
ss
fwait
jns
mov
adc
xchg
jp
sbb
add
ret
sbb
ret
mov
add
ret
ret
pop
pop
ret
cmps
sbb
ret
lods
ret
mov
ins
sub
xchg
push
arpl
dec
ret
ret
mov
inc
dec
push
inc
ret
movs
dec
ret
scas
ss
nop
adc
and
mov
mov
ret
cmps
adc
ret
(bad)
ret
lods
ja
xchg
pop
ins
ret
mov
lahf
ret
xchg
sbb
or
xchg
ret
ret
movs
ret
pop
xor
fwait
sbb
(bad)
mov
mov
push
ins
ret
add
ret
ret
mov
mov
test
ret
ret
scas
push
jle
ret
nop
inc
ret
stos
push
ins
jge
xchg
es
ret
ret
cmps
ret
nop
ret
mov
ret
sahf
ret
mov
lods
xor
inc
push
push
mov
xchg
push
ret
(bad)
ret
mov
ret
mov
ret
mov
ret
mov
mov
ret
mov
mov
ret
mov
scas
pop
ret
xchg
jne
mov
add
push
ret
scas
ret
movs
ret
test
cmps
ret
mov
xor
retw
ret
ret
mov
mov
test
movs
ret
xchg
mov
xchg
or
xchg
jle
movs
add
cmp
sbb
ret
mov
adc
movs
and
cmp
mov
cmps
ret
ret
fs
mov
sahf
and
test
ret
xchg
ret
mov
and
ret
cdq
ret
mov
cmps
ret
test
mov
ret
mov
ret
nop
ret
mov
test
or
lahf
ret
mov
mov
push
ret
scas
ret
ret
mov
push
pop
ret
mov
scas
inc
ret
ja
lods
push
movnti
cmps
jg
ret
ret
mov
add
or
ret
ret
xchg
aaa
popa
pop
push
and
lods
ret
mov
ret
ret
mov
pushf
ret
lods
xor
mov
mov
mov
lahf
ret
stos
ret
cmps
ret
dec
dec
add
mov
mov
ret
lahf
ret
xchg
inc
js
stos
push
ret
test
addr16
mov
sub
add
xor
cmps
ret
dec
ret
mov
ret
xchg
inc
ret
lods
add
jl
lods
cmp
mov
push
jb
xor
ret
cdq
ret
call
scas
ret
test
mov
mov
ret
mov
ret
cwde
ret
xchg
test
ret
adc
pop
ret
xor
addr16
cwde
ss
mov
and
ret
mov
mov
test
jne
xchg
ret
lea
ins
ins
ret
imul
mov
mov
ret
mov
mov
xchg
ret
mov
ret
fwait
ret
call
ret
mov
mov
mov
cmp
ret
xchg
ret
mov
mov
mov
ret
test
or
movs
sbb
mov
xchg
ret
fwait
ret
cwde
or
ret
xchg
aas
ret
mov
xchg
ret
test
mov
lahf
ret
cmp
or
fwait
ret
fwait
ret
cdq
cmp
add
adc
ret
call
cmps
ret
ret
mov
cmp
pushf
ret
add
mov
movs
ret
mov
ret
mov
ret
mov
ret
add
ret
mov
ret
lods
ret
mov
daa
ret
ret
mov
mov
sub
ret
ret
ret
fwait
ret
or
xchg
ret
ret
mov
mov
stos
ret
mov
popf
ret
ret
and
scas
dec
or
add
ret
sbb
jbe
jnp
ret
pushf
sbb
scas
ret
mov
scas
ret
mov
ret
cmps
and
sahf
dec
sub
ret
xor
cmps
ret
sbb
popf
pop
ret
ret
xchg
push
ja
mov
ret
call
ret
mov
xor
mov
xchg
addr16
mov
or
ret
call
fwait
ret
test
js
ret
lea
je
ret
xor
mov
ret
mov
cwde
ret
cmps
sbb
xchg
mov
mov
(bad)
ret
popf
ret
lods
ret
mov
ret
ret
mov
cmp
and
pop
pop
pop
ret
add
add
mov
ret
jg
test
ret
ret
mov
add
ret
(bad)
jge
xchg
mov
add
test
scas
ret
outs
pop
jne
xchg
ret
mov
mov
cmp
sbb
ret
mov
xor
add
ret
ret
mov
scas
ins
aaa
ret
mov
xchg
jg
or
ret
mov
dec
ret
jg
ret
mov
adc
xchg
mov
stos
cmp
pushf
ret
cmp
jae
mov
mov
ret
jns
xchg
ret
movs
ret
cmp
inc
ret
scas
dec
js
lods
adc
cwde
ds
ret
ret
xchg
xor
test
test
scas
jae
mov
and
push
ret
js
ret
xchg
cmp
ret
stos
ret
test
cmps
je
call
ret
test
ret
cwde
ret
mov
ret
ret
popf
add
ret
add
ret
mov
xor
add
mov
mov
mov
xchg
ret
ret
sub
xchg
ret
mov
ret
(bad)
ret
ret
movs
ret
ret
scas
sbb
xchg
ret
mov
cmps
ret
mov
mov
ret
test
inc
ja
popf
ret
mov
cs
xchg
sbb
ret
mov
adc
mov
sub
ret
xchg
ret
ja
ret
add
or
xor
mov
xchg
sbb
ret
sahf
pop
ret
cmps
sub
mov
ins
ret
add
ret
ret
mov
inc
ret
ret
mov
jl
sbb
mov
dec
push
js
ret
scas
push
mov
inc
dec
outs
js
pop
ret
xchg
ret
mov
test
cmp
ret
cdq
ret
movs
jne
adc
mov
mov
mov
ret
pop
or
or
add
ret
xchg
ret
mov
mov
ret
stos
ret
pushf
cmp
ret
mov
es
ret
movs
js
xchg
ret
cmps
inc
adc
pop
imul
ret
adc
sbb
sbb
mov
add
ret
ret
lea
push
ret
lahf
ret
mov
ret
ret
je
mov
ret
test
xchg
sbb
mov
dec
ret
xchg
ret
jle
ret
mov
ret
mov
ret
cmp
mov
add
test
ret
cmp
xchg
test
ret
push
ret
cmps
ret
cmp
cwde
dec
jns
lods
ret
xchg
ins
ret
scas
ret
nop
sub
mov
mov
ret
scas
inc
arpl
sub
nop
cmpps
pop
ret
nop
add
mov
mov
ret
mov
ret
or
ret
mov
nop
push
inc
ret
ret
pop
cmp
ret
lods
ret
or
mov
pushf
adc
mov
outs
add
test
mov
xchg
retw
mov
ret
cwde
aas
ret
lods
ret
arpl
ret
jae
cdq
add
test
mov
ret
mov
ret
mov
lahf
ret
lea
xchg
cmpps
pop
ret
ret
sahf
ret
mov
or
jbe
sbb
test
mov
inc
jae
mov
stos
arpl
mov
gs
ret
ret
mov
and
cmps
ret
lahf
pop
ret
xchg
scas
das
ret
test
cwde
dec
sub
mov
popf
jb
mov
ret
cmps
dec
xor
ret
mov
lea
sub
pop
dec
jb
cmps
inc
ret
mov
adc
scas
ret
lahf
cmp
mov
adc
lods
ret
test
pop
add
scas
ret
mov
mov
pusha
jg
or
jge
stos
add
mov
xchg
ret
or
ret
lahf
ret
or
inc
ja
movs
sub
jnp
ret
add
jo
xchg
push
ja
ret
ss
test
ret
mov
cs
lahf
push
imul
ret
movs
ret
cdq
push
ret
test
xchg
ret
scas
xor
sub
dec
ret
xchg
fs
or
cdq
or
ret
movs
ins
dec
ret
ret
ret
mov
movs
ret
mov
lahf
ret
mov
jge
xchg
or
test
xchg
push
ret
ret
mov
ret
pushf
ret
jge
ret
mov
ret
cmps
push
mov
ret
ret
scas
ret
mov
pushf
and
mov
ret
mov
ret
mov
(bad)
or
ret
ret
mov
mov
dec
ret
fwait
ret
mov
test
push
ret
mov
lea
mov
mov
mov
mov
ret
cwde
ret
mov
ret
mov
pushf
pop
inc
cmp
mov
or
sbb
xchg
sbb
scas
ret
ret
ret
fwait
ret
xor
jnp
xchg
add
inc
or
xchg
and
sahf
pop
sub
inc
ret
ret
cdq
or
ret
mov
ret
jne
sahf
dec
ret
test
sub
ret
inc
ret
mov
xchg
adc
ret
outs
aas
jnp
test
mov
xchg
ret
xchg
jne
mov
ret
stos
ret
mov
ret
lods
ins
add
mov
inc
jnp
ret
fwait
ret
cwde
and
test
and
xor
ret
xchg
das
popa
outs
inc
ret
lea
ret
movs
ret
test
lods
ret
mov
mov
ja
test
sahf
ret
ret
ret
mov
mov
ret
cdq
ret
cmps
inc
ret
mov
xchg
ret
ret
xchg
ret
movs
dec
ret
scas
adc
arpl
stos
ds
fwait
ret
add
adc
ret
ret
pushf
pop
ret
stos
add
ret
xchg
xchg
mov
mov
add
mov
lods
ret
lods
sub
popf
sbb
aas
imul
ret
mov
sahf
jne
mov
ret
ret
stos
ret
mov
fwait
ret
mov
xchg
xchg
push
add
ret
mov
mov
mov
push
ret
mov
xchg
add
fwait
ret
call
sahf
pop
pusha
ret
mov
ret
movs
js
cwde
ret
mov
ret
mov
jbe
movs
push
and
and
ret
xchg
ret
mov
xchg
ret
stos
ret
mov
cmps
ret
test
sub
or
mov
ret
stos
ret
scas
adc
xor
mov
mov
sbb
ret
mov
mov
mov
mov
pop
ret
ret
xchg
ret
mov
call
ret
add
push
pop
ret
cmps
ret
xchg
ret
sahf
jle
popf
ret
add
ret
test
xor
sub
or
mov
ret
test
pushf
ret
call
cmp
mov
data16
mov
mov
push
pop
and
xchg
pop
ret
mov
xchg
ret
movs
ret
mov
ret
mov
xchg
xor
mov
aas
ret
mov
xchg
movs
push
dec
ret
mov
ret
mov
test
pop
ret
xor
mov
ret
call
mov
ret
pusha
ret
xchg
ret
mov
ret
lods
xor
ret
outs
sbb
mov
test
jbe
ret
xchg
aaa
push
das
ret
mov
jb
cmps
add
popf
ret
scas
ret
jge
xchg
pop
outs
ja
pop
pop
push
gs
xchg
mov
or
xchg
ret
mov
mov
mov
ret
mov
ret
cdq
ret
mov
mov
mov
pop
ret
add
push
pop
aas
push
ret
mov
ret
inc
ret
test
mov
adc
mov
xchg
movs
sub
mov
lea
popf
ret
jne
mov
ret
cmps
ret
mov
xchg
xchg
ret
pop
cmps
add
mov
ret
sahf
add
movs
dec
popa
push
ret
ret
xchg
ret
popf
ret
cdq
ret
mov
add
ret
outs
xor
ret
mov
add
cmp
xchg
cmp
and
ret
scas
xor
ret
movs
ret
mov
ret
stos
ret
mov
cmp
test
lahf
or
ret
lahf
ret
test
test
fs
mov
mov
inc
ret
stos
ret
jnp
ret
mov
cmp
mov
cwde
ret
mov
mov
mov
mov
test
xchg
ret
sub
xchg
and
ret
movs
ret
mov
ret
mov
aas
ret
cmp
ret
mov
mov
ret
mov
call
xor
pop
push
es
ja
ret
mov
ret
mov
imul
ret
movs
ret
pop
retw
cdq
jg
ret
mov
ret
xchg
ret
mov
ret
dec
adc
ret
mov
sub
mov
cmps
ret
adc
ret
ret
jg
xchg
xor
mov
dec
ret
xchg
addr16
jno
mov
ret
call
xchg
scas
ret
scas
ret
cs
mov
ret
mov
ret
pushf
ret
xchg
push
ret
mov
mov
test
add
jl
xor
mov
pop
mov
mov
adc
ret
mov
ret
ret
mov
ret
ret
test
aaa
ret
mov
mov
xchg
jno
and
adc
stos
ret
imul
xchg
ret
mov
add
ret
mov
mov
ret
ret
mov
mov
(bad)
pop
xor
(bad)
ret
nop
dec
ret
xchg
ret
sbb
jno
dec
ret
mov
mov
pop
ret
lods
ret
mov
and
movs
ret
mov
nop
ret
mov
(bad)
push
or
ret
test
cmps
ret
lods
ret
mov
cmp
ret
scas
pop
ret
ret
xchg
ret
push
pop
and
xor
test
push
ret
mov
ret
mov
xchg
ret
ret
pop
push
ret
pop
test
ret
mov
das
inc
ret
mov
cmps
ret
call
push
inc
xor
ret
stos
ret
mov
ret
(bad)
ret
push
ret
ret
add
ret
pushf
ret
mov
mov
dec
ret
mov
jg
sbb
push
ret
scas
jae
push
ret
mov
ret
mov
add
ss
jns
jge
mov
ret
test
dec
inc
dec
pop
push
jg
mov
dec
ret
mov
push
jbe
mov
mov
ret
sbb
jae
dec
pop
ret
or
mov
ret
ret
adc
xchg
and
test
ret
and
jle
mov
bound
fwait
adc
movs
ret
movs
dec
push
ret
mov
mov
add
cmp
mov
ins
ret
mov
ret
lods
xor
xor
mov
ret
pop
mov
ret
ret
mov
xchg
pop
imul
ret
ret
mov
xchg
ret
mov
ret
ret
push
ret
cmps
popa
ret
pushf
imul
pop
xor
sub
cs
ret
mov
mov
ja
mov
ret
outs
jl
mov
inc
ds
test
and
cmp
sub
pusha
sbb
mov
mov
jae
ret
mov
ret
xor
ret
mov
pop
cmp
mov
ret
ret
inc
ret
ret
ret
popf
jo
mov
jl
ret
cmpps
mov
ret
add
jb
mov
mov
cmps
ret
mov
ret
xchg
adc
stos
dec
ret
ret
ret
cmp
mov
mov
xchg
push
add
mov
add
add
ret
xchg
mov
pop
lahf
ret
mov
xchg
adc
lods
ret
jp
nop
or
xor
nop
imul
ret
mov
xchg
sbb
mov
scas
ret
ret
lods
dec
or
cmps
ret
mov
cmps
ret
dec
ret
mov
mov
sahf
ret
cdq
ret
ret
jbe
ret
mov
xchg
ret
call
mov
mov
sub
mov
test
dec
ret
mov
mov
push
pop
ret
mov
ret
pop
and
mov
push
sbb
stos
sbb
push
or
xchg
push
ret
lods
cmp
xor
mov
movs
cmp
add
pop
ret
ret
mov
nop
cmp
xchg
ret
mov
ss
mov
ret
lahf
ret
cmps
ret
mov
mov
inc
ret
mov
ret
stos
addr16
mov
ret
mov
popa
pop
ret
mov
cmps
ret
cdq
ret
ret
mov
mov
ret
cmps
ret
lods
or
popf
ret
xchg
ret
mov
mov
cmps
je
gs
call
lods
ret
add
pop
add
pop
pop
ret
xor
xchg
ret
call
and
test
ret
mov
dec
ret
add
mov
sub
mov
mov
mov
stos
ret
(bad)
jg
ja
jno
ret
ret
pop
push
mov
add
ret
mov
cdq
adc
mov
mov
sub
movs
dec
ret
test
ret
mov
ret
lods
ret
sbb
ret
daa
ret
add
call
nop
ret
movs
ret
xchg
ss
ret
mov
xchg
addr16
movs
or
mov
sub
jae
ret
xchg
ret
mov
imul
pop
inc
ret
add
ret
ret
jg
pushf
ret
mov
jnp
ret
mov
sub
ret
mov
ret
mov
xchg
ret
test
pop
add
mov
sbb
mov
mov
cmp
cs
(bad)
ret
mov
ret
mov
ret
mov
(bad)
mov
ret
mov
ret
mov
nop
sbb
mov
ret
mov
xor
ret
ret
scas
and
ret
lahf
ret
add
ins
ret
popf
ret
mov
pop
ret
mov
lahf
pop
ret
ret
stos
ret
mov
ins
ret
mov
pop
push
(bad)
mov
jb
ret
xchg
ret
ret
test
ret
mov
retw
mov
ret
xchg
ret
xchg
mov
test
mov
mov
ret
mov
mov
ret
stos
jns
ret
xchg
ret
sub
mov
or
xchg
ret
call
ret
xchg
xor
mov
push
dec
ret
sub
sahf
ret
or
mov
adc
lods
add
ret
stos
ret
xchg
ret
mov
xchg
ret
mov
ret
popf
ret
fwait
ret
xchg
arpl
xchg
pop
push
push
dec
push
test
ret
add
ret
(bad)
ret
scas
ret
sbb
mov
add
ret
mov
mov
ret
fwait
ret
scas
pop
ret
xor
mov
adc
nop
ret
xchg
ret
cdq
sub
mov
outs
xor
pop
mov
xchg
das
ret
lahf
ret
inc
pop
inc
cmp
xchg
outs
ret
lods
ret
nop
es
mov
ret
mov
ret
add
lahf
ret
ret
mov
pop
add
ret
sahf
ret
stos
or
add
xor
mov
ret
ret
or
ret
popf
ret
mov
fwait
ret
mov
popf
pop
ret
stos
pop
ret
mov
test
ret
mov
scas
ret
test
mov
mov
mov
mov
mov
adc
lods
sbb
ret
xchg
xchg
gs
add
and
xchg
je
mov
ret
lods
ret
stos
xor
cmps
ret
call
ret
stos
xor
ret
sbb
xchg
mov
mov
fwait
dec
cmp
mov
test
fwait
jns
ret
mov
mov
dec
ret
xchg
ret
mov
or
xchg
ret
stos
jne
mov
push
ret
ret
call
aaa
pop
dec
outs
imul
ret
add
ret
movs
ret
mov
xchg
ret
cmps
ret
mov
ret
xchg
ret
cmps
retw
pop
ret
imul
ret
scas
inc
ret
add
add
js
xor
jns
dec
ss
xor
ret
mov
ret
test
sahf
xor
sub
ret
mov
mov
ret
(bad)
ret
lahf
push
ret
mov
ret
(bad)
ret
test
ret
ret
mov
cdq
inc
ret
cmp
xchg
add
cmp
ret
imul
push
add
mov
ret
xchg
ret
mov
ret
mov
pop
inc
ret
pushf
ret
sub
arpl
mov
test
xchg
ret
mov
ret
xchg
ret
pop
mov
ret
lea
mov
mov
mov
ret
call
mov
pop
ret
ret
or
mov
add
fs
mov
ret
outs
ret
mov
push
ret
dec
adc
popf
ret
movs
ret
xchg
movnti
xchg
ret
mov
ret
test
mov
mov
xchg
jbe
ret
cmps
xor
xchg
sbb
xchg
ret
pop
ret
mov
mov
ret
ret
mov
pop
ret
push
ret
inc
ret
mov
ret
cwde
ret
ret
mov
jl
xor
test
mov
ret
mov
ret
ret
xchg
pushf
ret
ret
mov
ret
mov
es
add
mov
sahf
pop
ret
lahf
ret
movs
ret
popf
pop
ret
ret
mov
xor
ret
nop
ret
xchg
push
outs
ret
test
mov
add
ret
pushf
cmp
inc
ret
ret
test
test
mov
jae
jl
movs
jo
stos
ret
scas
ret
test
ret
movs
or
mov
mov
and
ret
ins
ret
lahf
ds
mov
ret
mov
cmps
ret
mov
ret
push
jb
outs
push
ret
cmp
ret
cwde
bound
sub
ret
mov
mov
ret
xchg
imul
stos
ret
mov
nop
ret
movs
ret
xchg
add
mov
cmps
inc
and
nop
jo
ret
mov
jnp
lahf
ret
mov
mov
ret
movs
ret
ret
and
mov
adc
fwait
ret
cdq
es
jns
fwait
cmp
mov
ret
jle
ret
mov
pop
popa
and
mov
ret
mov
cmps
ret
mov
xchg
ret
ret
mov
add
push
ret
mov
mov
cmp
ret
cmps
ret
mov
xchg
imul
ret
popf
pop
ret
ret
xchg
push
ret
xchg
fwait
ret
mov
mov
ret
xor
mov
or
mov
xor
xchg
call
je
xchg
push
ret
ret
cmp
mov
ds
ret
popf
inc
daa
inc
cs
ret
add
stos
ret
mov
cmp
pushf
sub
mov
cwde
ret
add
ret
xchg
das
xor
test
mov
outs
push
ret
mov
mov
mov
jp
mov
ins
ret
xchg
sbb
lods
ret
cmps
ret
add
ret
cwde
ret
xchg
gs
ret
mov
imul
ret
ret
mov
retw
fwait
ret
ret
ret
xchg
ret
mov
ret
xchg
aaa
adc
xchg
sub
mov
mov
cdq
push
adc
mov
jle
ret
jo
pusha
aas
ret
mov
cdq
ret
mov
ret
mov
xchg
ret
xchg
ret
ret
ret
add
das
movnti
add
push
ret
mov
jb
and
mov
ret
xchg
inc
jg
ret
cdq
ret
mov
add
ret
and
sub
and
add
push
ret
add
ret
cmp
ss
cmp
xchg
ret
lahf
addr16
ret
mov
cmps
ret
mov
movs
dec
push
and
pusha
ret
call
sahf
ret
mov
inc
ret
ret
mov
and
ret
dec
push
ret
mov
mov
test
mov
pop
jns
pop
fs
ret
test
ret
mov
xchg
and
push
mov
xor
mov
imul
ret
xchg
ret
ret
mov
lods
dec
inc
push
push
ret
scas
aas
ret
fwait
xor
mov
stos
jnp
arpl
mov
sbb
ret
scas
je
cdq
ret
xchg
sbb
scas
ret
das
ret
ret
mov
das
cmp
mov
fs
ret
ins
dec
ret
mov
test
mov
ret
test
mov
xchg
jl
scas
and
xchg
ret
mov
mov
adc
add
mov
stos
and
mov
mov
ret
mov
ret
jne
mov
call
sub
cwde
jl
ret
cdq
ret
xchg
ret
inc
ret
fwait
ret
test
ret
test
mov
bound
add
ret
mov
pusha
ret
xchg
ret
ret
mov
call
mov
pop
cmp
ret
pushf
pop
push
pushf
ret
sub
outs
ret
mov
mov
ret
cdq
ret
mov
or
ret
mov
mov
pop
ret
xor
scas
ret
mov
ret
mov
pop
js
ret
cwde
ret
call
ret
movs
ret
mov
nop
inc
inc
ret
test
ret
xchg
ret
mov
mov
ret
mov
ret
cmp
ret
xchg
cmp
pop
push
ret
xchg
ss
mov
xor
sbb
ret
xchg
ret
stos
ret
xchg
pop
ret
ret
xchg
es
scas
add
scas
ret
mov
ret
add
ret
xchg
ret
cmps
ret
mov
ret
mov
ret
stos
arpl
cmps
ret
xchg
ret
lods
ret
ret
mov
sub
adc
add
ret
mov
add
adc
jne
mov
mov
inc
ret
lods
ret
push
pop
sbb
ret
test
cmps
ret
test
inc
cmp
ret
mov
mov
ret
ret
adc
cdq
cmp
movs
bound
ret
mov
mov
xchg
sbb
mov
mov
add
ret
xchg
je
mov
ret
ret
ret
stos
ret
test
xor
ss
fwait
inc
ret
dec
ret
mov
ret
cwde
ret
mov
jl
movs
push
xchg
mov
sub
sahf
pop
ret
test
ret
stos
dec
push
ret
and
ret
xchg
adc
mov
and
ret
lea
sub
cmp
push
pop
outs
inc
ret
mov
aaa
bound
arpl
sahf
jnp
ret
ret
xchg
ret
mov
ret
scas
and
xchg
xor
ret
add
sbb
xchg
ret
test
popf
adc
scas
ret
xchg
bound
ret
mov
mov
jp
mov
ret
pop
or
pop
ss
cdq
ret
mov
xchg
ret
mov
sub
stos
dec
push
jno
pop
xor
ret
mov
mov
mov
or
ret
add
ret
mov
mov
lods
add
mov
imul
and
cmps
dec
adc
ret
stos
ret
mov
test
popf
sbb
ret
jp
mov
xchg
adc
scas
ret
ret
mov
mov
and
test
mov
ret
movs
js
ret
mov
mov
mov
xchg
ret
mov
scas
ret
scas
cmp
mov
fwait
and
mov
call
pop
addr16
jge
test
xchg
push
push
ret
xchg
sbb
mov
stos
ret
ret
mov
ret
ret
xchg
jns
jge
scas
ret
test
cwde
je
adc
ret
call
or
cmps
ss
mov
ret
mov
mov
ret
sub
inc
ret
scas
push
ret
mov
mov
and
test
sahf
add
call
cmp
xchg
ret
mov
xchg
scas
ret
mov
jb
adc
mov
xchg
and
ret
movs
adc
mov
cmp
mov
cdq
ret
test
add
ret
or
add
pop
ret
ret
mov
ret
ret
ret
mov
ret
mov
add
pop
outs
jbe
add
cmps
ret
mov
ret
cmps
push
and
ret
ret
nop
ret
mov
cdq
adc
mov
adc
and
movs
ret
mov
ret
xchg
add
xchg
ret
xchg
ret
mov
ret
cmps
or
ret
lea
ret
mov
ret
stos
ret
and
mov
ret
test
inc
push
ret
xchg
ret
ret
ret
mov
pusha
sub
mov
mov
ret
mov
sbb
movs
ret
ret
xchg
ret
(bad)
ret
nop
ret
cmps
ret
mov
mov
pusha
je
add
mov
mov
mov
and
xchg
addr16
sbb
ret
stos
jg
mov
cmp
mov
mov
je
lods
push
ret
popf
ret
mov
ret
mov
and
ret
stos
ret
ret
add
inc
ret
lahf
push
ret
pushf
ret
ret
lods
adc
mov
mov
daa
or
or
movs
ret
mov
ds
add
xchg
ret
ret
daa
jge
mov
dec
add
bound
pop
push
scas
sbb
ret
ret
ret
mov
stos
inc
inc
dec
xor
mov
ss
pop
ret
mov
ret
test
fwait
ret
ret
cdq
jp
ret
xchg
push
dec
ret
mov
call
xor
mov
xchg
and
ret
add
jb
xchg
ret
mov
sbb
ret
xchg
ret
pushf
es
stos
pop
ret
xor
fwait
ret
mov
stos
ret
and
ret
adc
ret
xchg
je
pushf
or
ret
cmp
ret
xchg
ret
xchg
fs
ret
ret
ret
cmps
inc
ret
(bad)
sbb
movs
ret
(bad)
dec
outs
pop
ret
mov
mov
xchg
ret
stos
ret
mov
mov
jnp
ret
mov
ret
ret
scas
jns
nop
ret
stos
sub
(bad)
ret
xchg
adc
lods
ret
mov
mov
pop
mov
ret
inc
ret
mov
ret
cdq
ins
add
mov
lods
add
ret
ret
lahf
ret
xchg
fwait
sbb
bound
push
pop
pop
jnp
ret
xchg
jae
ret
mov
mov
movs
ss
mov
mov
stos
ret
ret
mov
stos
ret
mov
scas
ret
scas
adc
test
jnp
mov
mov
cmp
mov
add
cmp
movs
ret
mov
mov
ret
mov
ret
cdq
ret
cmp
stos
push
adc
add
push
ret
nop
ins
das
ret
test
sub
lods
jbe
ret
test
mov
ret
mov
push
ret
mov
push
or
mov
ret
test
ret
ret
test
mov
mov
xchg
inc
ret
(bad)
ret
ret
mov
adc
mov
lods
ret
mov
cdq
sbb
ret
mov
ret
test
mov
test
nop
ret
popf
add
ret
xchg
xchg
ret
xchg
pop
mov
daa
ret
ret
mov
ret
ret
mov
jo
jae
mov
push
inc
ret
ret
mov
ret
test
ret
mov
xchg
ret
ret
cdq
ret
mov
outs
ret
test
ret
mov
push
inc
pop
daa
pusha
jg
and
xchg
ret
xchg
ret
mov
mov
ret
ret
call
add
jp
xchg
push
or
mov
ret
mov
jp
mov
ret
ret
cmp
dec
adc
ret
pusha
ret
popf
ret
mov
stos
ret
xor
dec
ret
ret
mov
mov
mov
xchg
ret
add
ret
aas
sub
dec
pop
ret
ret
stos
pusha
pop
ret
lahf
dec
retw
ret
mov
add
ret
ret
xchg
mov
ret
popf
pop
push
ret
xchg
add
adc
cs
mov
fwait
jle
mov
test
(bad)
pop
ret
mov
ret
pop
mov
mov
ret
cwde
push
pop
ret
sbb
sbb
ret
and
mov
mov
xchg
push
ret
xchg
ret
cmps
push
ret
mov
xchg
ret
ret
xchg
ret
sub
ret
ret
xchg
ret
test
mov
outs
ret
pop
mov
add
mov
push
inc
or
ret
ret
test
sub
ret
mov
ret
ret
xchg
xchg
pop
ret
mov
ret
xchg
inc
ret
stos
pop
es
ret
lods
push
ret
test
mov
ret
and
ret
ret
sahf
ins
adc
cmp
lods
jnp
ret
add
ret
ret
addr16
xchg
ret
sbb
mov
sahf
ret
scas
add
ins
ret
mov
cwde
ret
ret
test
sub
adc
ret
mov
ret
mov
adc
ret
sahf
ret
mov
ret
ret
movs
ret
cmps
ret
xchg
ret
lods
ret
xchg
sbb
xchg
ret
test
test
stos
ret
ret
ret
dec
jg
add
ret
mov
mov
ret
xchg
pop
jno
add
or
ins
ret
mov
ret
xchg
ret
pushf
ret
mov
cmp
mov
cdq
ret
xchg
ret
mov
mov
ret
mov
xchg
ret
xchg
bound
ret
mov
mov
pop
ret
mov
ss
ret
mov
mov
adc
ret
pushf
add
sbb
xchg
ret
mov
ret
movs
sub
inc
arpl
fwait
xor
xchg
ret
ret
fwait
jae
xchg
xor
mov
call
ret
mov
add
js
mov
pushf
jns
sbb
ret
mov
ret
xchg
ret
cdq
ret
stos
push
ret
test
scas
jg
ret
cwde
ret
dec
ret
mov
add
ret
movs
ret
mov
pop
ret
mov
ret
mov
ret
mov
ret
jno
ret
ret
mov
mov
xor
mov
mov
movs
xor
add
cmp
adc
cdq
and
nop
ret
mov
mov
pop
daa
aaa
ret
xchg
jle
pusha
sbb
ret
stos
ret
aas
pop
ret
mov
and
xchg
push
ret
ret
cwde
pop
cmp
xchg
and
mov
jp
mov
push
ret
mov
mov
ret
cmps
dec
ret
stos
ret
xchg
ret
jbe
stos
or
ret
mov
xchg
pop
jp
inc
ds
ret
xchg
scas
ret
ret
xchg
pop
ret
mov
xchg
ret
xchg
stos
ret
and
mov
push
pusha
pop
add
daa
jnp
dec
ret
mov
test
mov
dec
outs
ret
mov
pop
or
ret
xchg
cmp
ret
call
test
push
ret
xchg
pop
ret
movs
ret
xor
and
cmps
xor
ret
mov
scas
ret
mov
mov
ret
scas
jb
xchg
ret
mov
call
ret
test
cwde
ret
mov
ret
and
pop
ret
xchg
ret
das
ret
mov
push
ret
pop
ret
pop
ret
mov
mov
ret
mov
ret
lods
ret
mov
xchg
ret
fwait
or
push
pop
ret
mov
inc
pop
and
mov
xchg
xor
pushf
push
aaa
ret
mov
xchg
sub
add
xchg
ret
add
mov
test
mov
or
add
add
ret
mov
cmps
sub
sub
mov
outs
sub
mov
xchg
ret
movs
ret
mov
ret
pushf
ret
xchg
pusha
dec
push
jge
ret
xchg
ret
and
mov
mov
dec
ret
ret
fwait
ret
retw
cwde
inc
ret
mov
sbb
cmp
push
ret
sahf
push
ret
ret
mov
xchg
jb
mov
xchg
ret
mov
ret
sbb
sbb
mov
ins
pop
pop
ja
add
cmp
call
pop
mov
mov
mov
cmps
ret
mov
ret
mov
add
dec
ret
add
ret
xchg
ret
mov
xor
mov
cmps
ret
ret
lahf
ret
scas
ret
mov
retw
mov
ret
cwde
sbb
imul
lods
fs
mov
ret
cwde
ret
ret
ret
test
mov
add
or
cdq
jo
ret
(bad)
ret
ret
xchg
push
jp
test
mov
ret
sbb
mov
mov
ret
test
movs
jb
push
ret
push
ret
xchg
lahf
ret
xchg
ret
cmp
ret
xchg
ret
mov
lods
ret
cmps
ret
mov
mov
cmps
ret
mov
and
test
or
sahf
data16
ret
push
outs
ret
mov
jg
xchg
pusha
je
ret
add
ret
mov
ret
stos
aas
ret
xchg
popa
ret
mov
xchg
sub
ret
xchg
ret
xchg
xor
cdq
ret
mov
mov
popa
sub
lods
ret
scas
ret
mov
ret
pop
ret
test
ret
add
ret
mov
lods
ret
fwait
ret
mov
ret
cmp
ret
mov
mov
inc
jbe
dec
ret
mov
dec
pusha
push
inc
add
xchg
ret
xchg
ret
jne
mov
mov
and
ret
outs
jne
jg
ret
lods
ret
dec
push
ret
mov
mov
ret
mov
mov
xchg
cwde
ret
mov
imul
ja
(bad)
pop
ret
ret
sbb
sbb
lahf
inc
pop
ret
je
or
mov
xchg
call
outs
ret
adc
or
xchg
pop
ret
xchg
and
mov
push
ret
mov
cwde
inc
push
fs
ret
ret
lahf
xor
xchg
ret
(bad)
ret
mov
stos
cmp
(bad)
ret
stos
ret
mov
ret
test
cmps
ret
test
ret
gs
inc
ret
test
ret
sbb
ret
mov
xchg
xchg
inc
ret
ret
test
mov
mov
mov
ret
mov
ret
mov
mov
sahf
ret
mov
mov
mov
ret
mov
mov
cwde
ret
add
test
mov
ret
fwait
ret
lods
ret
fwait
jne
lahf
addr16
xchg
ret
mov
ret
nop
ret
ret
fwait
and
xchg
ret
mov
ret
mov
fwait
sbb
popf
ret
mov
sbb
inc
adc
ret
pop
jg
scas
jl
dec
ret
mov
pop
addr16
mov
ret
mov
test
xchg
cmp
pop
ret
xchg
ret
cwde
ret
mov
adc
lea
movs
add
push
cmp
dec
cmp
and
xor
mov
lods
push
jb
scas
ret
xchg
ret
xchg
je
ret
cwde
ret
mov
ret
lahf
dec
ret
mov
ret
mov
ret
push
ret
xchg
adc
sub
xchg
mov
movnti
(bad)
xor
xchg
ret
jp
xchg
sub
mov
xchg
push
or
jae
scas
ret
mov
sbb
stos
adc
ret
push
push
add
ret
mov
xchg
ret
mov
test
lea
sub
mov
sbb
sbb
push
dec
ret
mov
lahf
adc
sub
test
mov
addr16
test
dec
sub
mov
ret
mov
xchg
ret
mov
jg
cmps
es
push
ret
sbb
ret
or
test
ret
ret
mov
ret
mov
ret
mov
mov
dec
ret
adc
cwde
push
inc
dec
ret
mov
mov
xchg
cs
ret
mov
ret
mov
mov
pop
xor
inc
adc
ret
add
pop
ret
fwait
ret
push
and
ret
nop
ret
mov
cmp
mov
pop
sbb
dec
inc
dec
inc
cmp
and
arpl
mov
aas
ret
nop
ret
pop
mov
ret
mov
mov
lods
inc
jle
stos
ret
xchg
jp
test
xchg
push
or
ret
stos
inc
ret
mov
ret
lahf
popa
dec
ret
mov
ret
pushf
jge
ret
mov
pop
ss
stos
jb
cmp
xor
push
jae
add
mov
ret
stos
ret
ret
popf
ret
mov
cwde
ret
ret
scas
ret
ret
mov
mov
stos
adc
test
call
mov
inc
ret
ret
mov
popf
xor
pop
or
movs
ret
ret
mov
fwait
ret
mov
pop
pop
pop
inc
jne
ret
add
mov
sub
lahf
ret
ret
mov
xchg
ret
xchg
sahf
jle
scas
imul
call
pop
das
ret
stos
dec
ret
mov
xor
call
lahf
ret
xchg
pop
outs
pop
ret
je
xchg
ret
cdq
ret
ret
stos
push
ret
mov
ret
mov
cmp
mov
ret
ret
ret
ret
mov
jno
sub
xchg
pop
ret
pushf
ret
mov
ret
xchg
sbb
xchg
xchg
ret
mov
lahf
xor
mov
mov
pushf
ret
call
mov
aaa
ret
mov
gs
xchg
popa
sub
mov
mov
sbb
mov
or
mov
jle
lahf
cmp
movs
sbb
add
ret
mov
sub
mov
mov
ret
mov
ret
xor
ret
adc
cwde
ret
stos
ret
xchg
xchg
sbb
add
push
push
add
cmp
ret
test
push
sbb
movs
xor
cwde
ins
jle
mov
ret
ret
pushf
ret
mov
ret
ret
ret
mov
ss
mov
ret
ret
or
ret
lahf
dec
aaa
ret
lahf
ret
mov
xchg
ret
sahf
or
jo
mov
mov
mov
ret
xor
pop
pop
inc
ret
xchg
xchg
adc
mov
fs
or
mov
ret
xor
cmps
inc
push
push
mov
ds
sub
ret
mov
js
mov
ret
dec
ret
mov
mov
xchg
ret
stos
je
movs
ret
movnti
ret
ret
mov
xchg
ret
mov
xchg
push
cmp
ret
xchg
ret
ret
pushf
ret
mov
movs
dec
or
mov
ret
mov
lods
ret
xchg
ret
mov
ret
xor
ret
test
stos
add
xchg
aaa
retw
mov
ret
sahf
ret
ret
xchg
ret
mov
cdq
pop
ret
add
ret
mov
ret
xchg
cmps
retw
ret
ret
ret
lods
jbe
xchg
mov
ret
ret
mov
sub
fs
ret
cdq
sbb
mov
lods
ret
xchg
ret
mov
xchg
ret
scas
push
push
push
ret
mov
ret
cmps
ret
lods
ret
mov
ret
lods
ret
popf
ret
cwde
ret
xor
test
sub
ret
mov
pop
ret
xchg
ret
mov
ret
mov
stos
jae
xchg
movnti
stos
or
stos
imul
pop
sbb
ret
ret
mov
push
pop
sub
mov
ret
xchg
movnti
jge
mov
ret
cmps
ret
sahf
ret
mov
mov
ret
stos
dec
ret
popf
add
sub
push
dec
ret
ret
ret
dec
ret
xchg
add
adc
sub
cdq
ret
xor
ret
mov
retw
mov
scas
pusha
adc
ret
sub
mov
mov
xchg
cmp
je
xchg
and
das
ret
ret
xchg
inc
sbb
mov
push
pop
xchg
ss
mov
ret
mov
test
push
cmp
ret
ret
mov
movs
ret
cmps
and
lods
imul
mov
mov
adc
ret
and
jae
nop
ret
pop
das
ret
mov
mov
test
mov
adc
adc
arpl
mov
gs
push
ret
xchg
dec
ret
mov
ins
dec
ret
stos
ret
and
ret
ret
mov
ret
jne
mov
mov
ret
mov
ins
ret
xchg
pop
pop
ret
mov
ret
mov
ret
mov
lods
ret
mov
sbb
ret
xchg
ret
movs
ret
xchg
ret
nop
cmp
mov
ret
mov
ret
cmp
ret
mov
sub
mov
ret
ret
lods
ret
test
ret
adc
xchg
sbb
ret
call
cwde
ret
mov
ret
mov
ret
mov
call
and
xor
mov
mov
ret
ds
mov
or
mov
ins
adc
ret
mov
ret
or
pop
je
ret
lahf
ss
mov
ret
add
ret
mov
pushf
imul
jne
ret
sahf
ret
ret
mov
scas
ret
xchg
stos
cmp
add
ret
test
ret
pop
xchg
ret
pop
ret
mov
mov
dec
ret
stos
ret
add
ss
mov
xchg
ret
ret
cmps
inc
add
test
mov
mov
mov
fwait
ds
cmps
ret
ret
stos
ret
movs
ret
sahf
push
and
popa
ret
mov
sbb
cmps
dec
ret
mov
ret
mov
xchg
sub
jae
mov
ret
stos
ret
xchg
cmp
ret
ret
ret
ret
mov
mov
scas
ret
lahf
xor
mov
ret
stos
inc
nop
aas
gs
mov
ret
mov
ret
xor
ret
push
ret
gs
movs
sub
movs
sub
xchg
ret
xchg
ret
mov
pushf
ret
aas
aas
pop
pop
ret
ret
lea
adc
sub
ret
xchg
ret
lods
ret
push
sbb
pop
pop
ret
mov
pusha
xor
lods
ret
test
mov
xchg
ret
ret
xchg
and
add
ret
mov
ret
scas
add
sub
add
jb
mov
aaa
ret
ret
popf
ret
ret
sahf
dec
pop
ret
push
jbe
mov
ret
mov
test
cmp
ret
ret
cwde
ret
movs
sbb
gs
mov
mov
mov
ret
movs
ret
ret
popf
ret
mov
call
or
test
ret
ret
ret
mov
ret
mov
stos
jnp
mov
ret
lods
sub
push
ret
movs
push
ret
push
ret
inc
ret
cmps
ret
ret
nop
xor
pop
xor
ret
xchg
or
ret
nop
sub
mov
add
add
test
mov
fs
stos
jl
add
mov
cmpps
ret
mov
dec
and
mov
ret
mov
and
mov
mov
jae
nop
jl
pushf
dec
or
test
ret
xchg
mov
or
movs
ret
stos
or
movs
ret
movs
ret
xchg
cmp
mov
lods
inc
ret
xchg
push
cmp
xchg
or
ins
ret
ret
mov
mov
ins
ret
mov
mov
dec
addr16
daa
ret
fwait
aaa
adc
or
mov
mov
test
xchg
ret
movs
push
ret
lods
add
stos
push
ret
mov
popf
ret
inc
and
test
fwait
fs
sbb
test
sahf
ret
popf
xor
xchg
mov
ret
mov
mov
xchg
cmp
cdq
push
ret
xchg
ret
xchg
jl
mov
ret
add
ret
test
scas
pop
sub
jl
mov
je
mov
arpl
ret
ret
add
ret
push
ret
ret
sahf
cmp
mov
sub
pop
cmp
mov
dec
pop
ins
ret
xchg
ret
xchg
popa
jo
inc
ret
mov
ret
sbb
add
ret
fwait
ret
cdq
push
dec
inc
addr16
test
ret
or
and
mov
scas
pop
jle
cwde
ret
sub
mov
jbe
mov
adc
ret
add
add
ret
mov
lods
ss
add
ret
sahf
adc
jle
push
pop
ret
ret
xchg
cmp
stos
ret
push
ret
mov
lods
ret
mov
scas
ret
jp
mov
jg
cmp
lods
ret
mov
ret
test
cmp
test
ret
mov
pop
sub
or
ret
scas
push
push
ret
lea
ret
mov
mov
pusha
or
stos
ret
xchg
mov
ja
xchg
sub
mov
ret
mov
outs
xor
jbe
lods
ret
xchg
ret
mov
scas
popa
ret
add
and
xchg
inc
ret
pushf
gs
mov
popf
sub
ret
pop
scas
adc
call
xchg
ds
ret
fwait
ret
cmps
jne
ret
stos
add
ret
ret
mov
ret
lea
and
nop
ret
lea
ret
xchg
ret
imul
ret
scas
sbb
cmp
movs
daa
ret
das
adc
stos
ret
add
xchg
ret
mov
xchg
lods
ret
inc
sub
mov
mov
and
add
mov
add
sahf
ret
scas
ret
cmps
ret
scas
ret
mov
cwde
ret
xchg
jns
mov
adc
jle
pop
ret
mov
mov
(bad)
xor
mov
add
jo
mov
push
pusha
es
cwde
pop
inc
ret
stos
ret
ret
xchg
popa
ret
sbb
mov
ret
sub
pusha
ret
test
xor
lods
ret
mov
outs
ret
or
popf
sbb
ret
inc
ret
pusha
dec
ret
mov
mov
and
outs
ret
mov
mov
ret
stos
ret
stos
ret
mov
ret
mov
nop
jl
push
and
jbe
mov
cdq
dec
ret
ret
mov
dec
ret
xchg
adc
xchg
ret
pushf
jle
scas
aas
dec
sub
adc
mov
xchg
and
ret
adc
xchg
ret
das
ret
ret
xchg
ret
movs
sub
inc
dec
and
mov
sub
xchg
ret
cwde
and
sbb
and
xor
and
mov
ret
popf
ret
(bad)
mov
mov
ret
push
popf
cmp
sub
ret
xchg
jp
and
mov
adc
stos
dec
sbb
pusha
ret
add
jo
ret
add
ret
xchg
ret
add
ret
xchg
ret
(bad)
ret
xchg
cmps
ret
test
ret
pushf
inc
ret
mov
mov
sbb
cdq
ret
mov
add
ret
movs
ret
add
inc
ret
mov
mov
mov
mov
imul
ret
ret
test
ret
stos
and
lods
ret
mov
ret
jle
xchg
add
movs
pop
ret
mov
cmp
sbb
mov
ret
xchg
ret
xchg
push
inc
gs
ret
ret
mov
ret
lods
ret
cmps
ret
test
ret
xchg
ret
movs
ins
ret
mov
pop
test
sub
scas
ret
mov
popf
ret
mov
and
jae
mov
ret
ret
mov
mov
ret
or
mov
lods
ret
movs
jp
xchg
ret
stos
ja
or
xchg
ret
mov
movs
jne
mov
je
ret
sahf
(bad)
xchg
add
ret
mov
xchg
ret
xchg
push
inc
xor
mov
inc
ret
stos
jge
cmp
pushf
jl
inc
sub
mov
bound
add
mov
mov
ret
mov
test
xchg
ret
xchg
ret
mov
test
pusha
ret
(bad)
es
stos
ret
mov
mov
xchg
ret
mov
mov
xchg
sub
push
ret
test
adc
dec
ret
ret
cmps
ret
ret
ret
xchg
ret
mov
ret
fwait
ret
mov
ret
add
ret
mov
or
ret
lea
ret
ret
test
mov
dec
ret
mov
ret
test
ret
mov
lea
ret
ret
or
ret
mov
xchg
mov
ret
mov
mov
lahf
ret
mov
ret
mov
ret
xchg
ret
dec
ret
movs
ret
mov
ret
mov
add
xchg
gs
ret
test
call
ret
ret
fwait
add
mov
test
ret
xchg
push
inc
ret
mov
mov
call
test
test
xchg
dec
sub
mov
ret
inc
adc
cmp
test
xchg
ret
mov
ret
cdq
ret
call
movs
imul
ret
xchg
sub
mov
scas
adc
ret
mov
cmp
ret
call
xor
cmps
ret
mov
ret
mov
xchg
mov
ret
xchg
pop
adc
and
scas
push
cmp
xchg
add
mov
ret
mov
ins
xor
imul
mov
add
cdq
ret
mov
mov
cmps
jnp
ret
xchg
adc
ret
mov
scas
adc
mov
mov
mov
cmps
ret
mov
cwde
ret
mov
mov
ret
mov
mov
and
ret
ret
lods
ret
test
movs
ret
mov
jnp
ret
cwde
ret
cmp
mov
ret
add
ret
test
cdq
or
mov
xchg
and
mov
mov
ret
xchg
lahf
ret
or
dec
ret
mov
xchg
sahf
ret
sbb
mov
scas
adc
mov
(bad)
ret
ret
test
ret
mov
inc
ret
ret
mov
xchg
ret
popf
ret
sub
jnp
sub
cmps
ret
mov
test
fwait
inc
xor
movs
ret
mov
mov
mov
ret
ret
mov
ret
ret
xchg
ret
xchg
ret
xchg
mov
jge
ret
add
ret
ret
xchg
ret
xchg
pop
and
ret
mov
mov
cmps
ret
mov
ret
movs
push
ret
ret
mov
ret
fwait
inc
ret
movs
cmp
ret
mov
test
ret
js
ret
mov
ret
sahf
dec
ret
sbb
lods
pop
jae
mov
ret
or
stos
ret
add
ret
mov
lods
ret
mov
adc
ret
mov
xchg
ret
popf
ret
cmp
xchg
adc
mov
ret
mov
movs
ret
ret
mov
ret
and
ret
xor
ret
xor
add
push
pop
and
je
test
outs
cmp
movs
ret
xchg
cmp
pusha
pop
ret
test
mov
sbb
ret
sbb
or
cmps
ss
cmps
jnp
pop
cmp
pop
ret
and
cdq
sub
xchg
ret
ret
mov
ret
cdq
ret
mov
dec
imul
ret
mov
mov
ret
pushf
dec
ret
mov
sahf
ret
test
ret
ret
mov
ret
outs
ret
jb
(bad)
ret
mov
xchg
pusha
ret
mov
ret
add
ret
xchg
xchg
ret
scas
ret
xchg
ret
ret
mov
ret
mov
mov
arpl
ret
xchg
xchg
ret
test
xor
mov
mov
ret
mov
sub
add
ret
test
push
add
ret
mov
mov
ret
nop
das
ret
mov
lods
ret
xchg
ret
mov
pop
ret
mov
aaa
pop
dec
ret
mov
ret
mov
sbb
mov
pop
add
cmp
retw
cdq
ret
test
mov
pop
bound
jnp
pop
js
xchg
jle
ret
mov
xchg
ret
xchg
push
or
cmps
dec
ret
mov
popf
add
ret
add
ret
ret
mov
ret
ret
test
mov
test
mov
ret
scas
outs
ret
ret
mov
and
xor
ret
xchg
ret
sahf
sbb
movs
ret
xchg
ret
xchg
ret
mov
ret
add
sbb
ret
mov
scas
ret
test
ret
lods
jb
mov
mov
test
ret
xchg
ret
test
mov
mov
push
ja
mov
mov
test
ret
xchg
inc
ret
fwait
ret
add
pop
ret
mov
call
mov
ret
cmp
test
mov
cwde
and
mov
ret
xchg
ret
ret
movs
push
ret
mov
and
ret
stos
gs
and
ret
xchg
push
mov
gs
(bad)
jle
cmps
daa
ret
jb
ret
ret
cs
arpl
mov
push
ret
adc
mov
and
ret
call
cwde
addr16
ret
mov
ret
mov
mov
ret
add
ret
xchg
push
popa
dec
ret
mov
mov
mov
imul
mov
xor
mov
pop
ret
nop
jae
mov
mov
ret
ret
ret
cmps
gs
mov
cmps
sbb
xchg
mov
ret
mov
movs
ret
mov
ret
mov
sub
jns
ret
adc
xchg
scas
ret
xchg
add
pop
ret
xchg
ret
sahf
xor
dec
xor
ret
xchg
sub
mov
mov
ret
cmp
ret
test
mov
sbb
xchg
xor
mov
ret
xchg
jae
mov
add
mov
inc
ret
sub
adc
mov
mov
stos
ret
mov
add
inc
pop
add
pop
ret
stos
cmp
ret
ret
xchg
ret
ret
mov
and
xchg
and
mov
test
test
ret
mov
inc
imul
inc
dec
ret
mov
ret
pop
ret
mov
sub
movs
ret
ret
ret
lahf
bound
ret
xchg
ret
inc
inc
cs
sbb
ret
sub
scas
ret
add
data16
xchg
ret
mov
lods
adc
popa
or
mov
mov
mov
mov
ret
dec
ret
mov
ret
mov
jns
inc
ret
mov
mov
jl
push
ret
ret
and
mov
xor
ret
mov
ret
mov
ret
scas
ret
ret
mov
stos
ret
add
or
cmp
cwde
ret
mov
ret
add
stos
adc
sub
adc
or
jnp
add
ret
add
ret
scas
ret
mov
and
mov
(bad)
sub
ret
mov
ret
xchg
ret
popf
ret
mov
ret
mov
ret
xchg
add
jge
push
pusha
ret
lods
dec
ret
lods
ret
xchg
push
push
adc
mov
xchg
pop
push
jo
ret
mov
cmp
ret
movs
ret
mov
xchg
ret
adc
mov
sahf
ret
mov
scas
ret
popf
ret
mov
es
ret
ret
cdq
sbb
cmpordps
push
pop
sbb
pop
pop
ret
xchg
ret
(bad)
xor
pushf
ret
xor
call
mov
pop
inc
ret
ret
scas
cmp
lods
pop
ret
scas
sub
mov
ret
fwait
ret
mov
mov
add
or
mov
jle
sub
mov
movs
ret
scas
jge
ret
mov
ret
mov
ret
call
pop
jnp
ret
xchg
ret
ret
cmps
pop
ret
mov
nop
ret
jo
jg
ret
add
addr16
lea
ret
ret
mov
ret
retw
and
je
cmps
ret
mov
ret
and
mov
and
adc
ret
xchg
ret
mov
pop
sbb
ret
inc
ins
dec
ret
test
jg
stos
ret
mov
ret
xchg
pop
ret
xchg
ret
sub
pop
ret
mov
and
ret
test
inc
ss
xchg
ret
lahf
ret
mov
mov
push
ret
mov
das
ret
mov
pop
ret
ret
mov
ret
mov
mov
ret
mov
jp
xchg
fs
mov
ss
mov
mov
mov
and
call
dec
ret
ret
xchg
jp
inc
ret
movs
push
ret
xchg
dec
cmp
mov
xchg
ret
xor
mov
cmps
ret
mov
mov
ret
pop
ret
mov
lods
ret
ret
mov
nop
ret
test
ret
test
pop
ret
mov
sbb
popf
and
aaa
ret
sub
xchg
scas
aas
sbb
sbb
sbb
pop
ret
cwde
or
xchg
ret
cwde
add
movs
inc
ret
xchg
ss
test
mov
cs
ret
and
mov
mov
mov
add
add
dec
ret
push
inc
ret
xchg
ret
push
ret
mov
fwait
ret
mov
ret
mov
scas
ins
ret
test
mov
mov
mov
mov
mov
cdq
ret
stos
xor
mov
ret
xchg
ret
mov
ret
mov
ret
pushf
ja
pop
ret
xchg
sbb
or
ret
pop
ret
xchg
popa
ret
or
mov
retw
xchg
ret
xor
imul
pop
ret
ret
mov
ret
and
xor
mov
push
cmp
(bad)
ret
mov
cwde
ret
ret
xchg
ret
ret
xchg
ret
xchg
inc
sub
mov
ret
cmps
inc
ret
test
ret
xchg
mov
ret
xchg
ret
add
ret
pushf
ret
stos
ret
stos
ret
mov
ret
test
test
ret
call
cmps
rdmsr
or
push
mov
inc
ret
ret
mov
test
nop
or
mov
addr16
ret
mov
sbb
ret
xchg
ret
xchg
stos
ret
test
sbb
mov
ret
scas
ret
vpshaw
mov
dec
dec
ret
lea
ds
test
and
mov
mov
cmps
js
mov
dec
jnp
dec
ret
add
push
adc
dec
adc
popf
adc
jnp
lea
pop
outs
ret
mov
sub
test
sahf
sbb
mov
jnp
ret
lea
ret
sbb
je
ret
mov
mov
ret
lods
or
scas
push
xor
lods
ret
(bad)
ret
xchg
ret
cmps
ret
mov
jg
cdq
ret
mov
mov
mov
sub
dec
xor
fs
daa
ret
lods
adc
mov
dec
pop
ret
mov
lods
pusha
gs
ret
lods
and
xchg
ret
xchg
jle
ret
add
ret
ret
sbb
add
sbb
add
pushf
aaa
ret
mov
lahf
ret
jge
mov
jg
cmps
inc
and
xchg
ret
ret
xchg
stos
ret
mov
mov
popa
or
test
xchg
and
mov
mov
inc
pop
ret
mov
ret
xchg
inc
ret
mov
inc
js
ret
ret
lods
ret
xchg
ret
xchg
dec
pop
ret
mov
inc
jge
mov
jnp
add
mov
mov
mov
and
test
mov
movs
ret
jbe
ret
test
dec
jns
and
sahf
push
ret
and
and
stos
jne
xchg
xchg
ret
ret
mov
ret
movs
ret
xchg
ret
mov
xchg
es
xchg
ret
mov
ret
scas
ret
ret
mov
ret
lea
push
ret
mov
movs
popa
push
and
mov
ret
mov
ret
mov
pop
arpl
mov
adc
ret
mov
cmp
jl
pop
ret
test
ret
jge
call
movs
ret
mov
mov
stos
or
mov
push
xchg
ret
mov
xchg
sbb
or
ret
xchg
ret
mov
ret
mov
ret
fwait
ret
mov
pop
mov
xchg
aaa
pop
aaa
ret
pop
scas
pop
inc
ret
test
mov
xchg
xor
xchg
sub
mov
xchg
adc
bound
ret
stos
cmp
pop
ret
xchg
scas
cmp
xchg
mov
ret
mov
stos
cmp
mov
test
stos
ret
popf
ret
ret
scas
outs
ret
mov
ret
mov
scas
ret
mov
mov
ret
stos
ret
cdq
ret
or
mov
ret
sbb
xchg
ret
xchg
inc
pop
inc
or
push
ret
lods
jno
ret
push
sbb
xchg
ss
dec
cmp
ret
mov
xchg
ret
or
jbe
add
gs
mov
push
push
ret
mov
ret
push
add
ret
xor
pop
lea
sbb
test
xor
ret
ret
mov
add
ret
ret
movs
push
ret
mov
ss
mov
mov
mov
gs
cmps
ret
mov
adc
mov
ret
xchg
or
mov
mov
ret
ret
mov
jp
xchg
ret
dec
jae
cwde
ret
lods
ret
mov
pop
mov
ret
xchg
push
ret
inc
ret
ret
mov
mov
stos
push
or
ret
xchg
adc
scas
ret
add
ret
mov
mov
adc
mov
lea
xor
popf
fs
mov
ret
ret
scas
and
xchg
call
mov
ret
mov
mov
ret
mov
cwde
ret
xchg
ret
ret
mov
ret
ret
scas
jns
test
mov
mov
ret
ret
cmps
ret
pushf
dec
popa
ss
and
ret
xor
mov
and
ret
cmp
dec
or
mov
mov
ret
or
mov
dec
ret
mov
cmps
ret
popf
push
ret
ret
ret
inc
ret
sbb
ret
mov
mov
ret
outs
push
and
xchg
inc
ret
cdq
ret
mov
inc
adc
ret
ret
mov
mov
ret
mov
xchg
xor
mov
or
ret
mov
dec
ret
(bad)
pop
add
mov
pop
jl
or
push
ret
mov
mov
ret
mov
ret
test
mov
movs
ret
sbb
ret
mov
stos
pop
ret
mov
ret
xor
ret
mov
mov
pop
cmp
inc
ret
mov
ret
mov
ret
mov
stos
ret
nop
ret
xchg
ret
ja
mov
sub
test
mov
mov
mov
cwde
sub
ret
ret
mov
test
test
ret
(bad)
ret
xchg
ret
xor
mov
cmps
ja
test
mov
push
jne
ret
mov
scas
je
ret
mov
movs
ret
movs
ret
mov
adc
test
mov
ret
test
test
ret
jbe
mov
mov
ret
call
or
mov
xchg
inc
ret
mov
add
ret
mov
ret
and
xchg
cmp
lahf
ret
mov
inc
ret
xchg
xchg
ret
xchg
lods
ret
cmps
ret
adc
fwait
jbe
inc
ret
mov
pop
jns
stos
ret
test
je
mov
lea
scas
sub
adc
ret
ds
mov
add
mov
mov
lahf
ret
ret
mov
das
ret
das
pop
ret
sahf
js
and
cwde
pop
imul
jo
sahf
push
outs
ret
scas
or
sahf
ret
test
ret
xchg
ret
ret
xchg
(bad)
sub
mov
ret
ret
xchg
xor
add
cmps
ret
(bad)
ret
add
pop
ret
fwait
ret
ret
(bad)
jno
movs
ret
mov
outs
ret
xchg
addr16
mov
ret
cmps
ret
test
lods
je
ret
mov
ret
jo
sahf
push
ret
mov
xor
dec
ret
adc
ret
mov
pop
ret
mov
push
pop
ret
fwait
ret
fwait
jo
inc
ret
arpl
mov
je
lods
sbb
ss
pop
ret
popf
ret
cdq
ret
mov
ret
jp
das
ret
xchg
ret
mov
sbb
movs
ret
add
mov
xchg
pop
or
scas
ret
cdq
ret
scas
dec
ret
mov
xchg
jle
ret
dec
dec
ret
xchg
ret
mov
ret
push
ret
mov
jne
jns
test
ret
mov
cmps
jae
mov
ret
lods
add
adc
ret
xchg
ret
ret
add
ret
mov
stos
push
jb
ret
ret
or
sbb
xchg
and
mov
ret
mov
test
jg
(bad)
ret
xchg
test
xchg
ret
mov
ret
cdq
add
mov
mov
nop
xor
push
sbb
mov
mov
aaa
ret
test
ret
mov
xchg
stos
ret
adc
fs
ret
popf
ret
pusha
add
or
mov
cwde
ret
mov
xor
ret
pop
lods
ret
movs
jo
stos
ret
ret
test
xchg
sbb
pop
ins
ret
xchg
xor
scas
ret
fwait
ret
mov
ret
pop
jp
mov
ret
test
mov
ret
lods
xor
ds
mov
xchg
ret
mov
ret
ret
xor
or
ret
xchg
ret
mov
ret
mov
scas
ret
test
mov
ret
lahf
ret
mov
cmps
ret
movs
ret
mov
test
scas
jp
dec
ret
lods
inc
xor
mov
movs
ret
ret
movs
ret
mov
lods
push
push
ret
ret
cmps
ds
ret
xchg
push
movs
nop
call
push
ret
pushf
ret
scas
ret
cwde
ret
pop
push
ret
movs
adc
scas
inc
pop
ret
(bad)
push
ret
xchg
ret
stos
push
adc
xchg
push
ret
pushf
ret
test
ds
xchg
jo
movs
push
ret
add
ret
sub
ret
xchg
pop
ret
cwde
sbb
ret
mov
gs
nop
inc
ret
cmp
xor
ret
mov
ret
ret
lods
ret
jno
scas
xor
ret
mov
push
ret
mov
add
das
ret
ret
ret
mov
lods
and
test
ret
ret
scas
ret
xchg
ret
stos
ret
mov
sbb
stos
ret
movs
push
cmp
pushf
ret
ret
xchg
push
pop
add
cmps
pop
dec
pop
ret
test
mov
xchg
ret
ret
fwait
pop
or
mov
ret
scas
push
ret
mov
mov
test
ret
ret
cmps
dec
ret
ret
test
ret
stos
ret
lods
ret
ret
xchg
ret
xchg
ret
test
mov
mov
cs
push
ret
mov
xor
sub
mov
ret
ret
mov
jae
and
ret
mov
ret
mov
inc
inc
ret
mov
sahf
sub
mov
mov
inc
imul
stos
ret
xor
xchg
inc
push
aas
ret
mov
ret
stos
or
ret
mov
add
popa
push
mov
mov
mov
sub
ret
mov
test
mov
mov
ret
stos
jae
mov
add
movs
push
ret
push
xor
stos
inc
ret
pop
nop
ret
sbb
ret
mov
ret
xchg
xchg
ret
mov
ret
mov
ret
mov
ret
test
inc
ret
cdq
ret
outs
ret
(bad)
ret
ret
ret
jbe
push
push
ret
mov
ret
ret
xchg
ret
pop
or
mov
cmps
ret
ret
lahf
ret
push
or
sub
inc
ret
sbb
ret
ret
adc
adc
cmps
adc
add
inc
pop
ins
ret
mov
lar
lods
ret
inc
ret
mov
ret
xchg
ret
fwait
ret
stos
and
xchg
ret
xor
bound
xchg
ret
ret
inc
ret
pop
mov
ret
mov
mov
je
push
pop
ret
ss
xchg
ret
ret
ret
test
mov
scas
add
ret
mov
mov
ret
lods
adc
cmp
xchg
ret
xchg
or
or
lods
add
test
mov
cmps
ret
mov
xchg
xor
imul
mov
mov
movs
ret
mov
popf
ret
ret
ret
(bad)
or
and
movs
or
mov
gs
sub
call
dec
ret
add
ret
mov
mov
ret
pop
outs
ret
ret
xchg
inc
dec
push
ret
xchg
ret
cdq
add
ds
ret
ret
xchg
ret
nop
push
dec
ret
ret
stos
imul
add
or
mov
test
xchg
ret
lods
and
push
mov
ret
xchg
ret
cmp
mov
xor
ret
add
ret
cmp
xchg
xor
nop
ret
popa
or
mov
ret
mov
fwait
jp
scas
or
xchg
ret
mov
mov
xchg
ret
es
pop
adc
scas
adc
ret
xchg
ret
jge
add
xor
add
ret
stos
ret
movs
ret
test
ret
mov
jb
ret
cmps
and
test
xchg
and
mov
and
add
adc
add
add
xchg
mov
sub
mov
ret
xchg
ret
ret
popf
ret
scas
dec
ret
test
pop
inc
ret
pushf
ret
cdq
push
ret
test
mov
test
ret
mov
movs
ins
ret
mov
inc
ret
mov
ret
adc
pushf
ret
popf
outs
ret
mov
das
pop
pop
ret
ret
fwait
ret
mov
popf
ret
mov
inc
ret
add
ret
add
ret
mov
xchg
cmps
ret
mov
mov
js
ret
pushf
ret
pop
ret
mov
add
push
ret
dec
ret
adc
or
ret
xchg
sub
xor
mov
ret
mov
xchg
mov
ret
ret
lods
ret
or
cmp
ret
mov
or
movs
ret
pop
ret
(bad)
ja
xchg
ret
sahf
ret
xchg
inc
ret
mov
ret
add
gs
test
xor
mov
mov
push
ret
lahf
jnp
and
mov
ret
pop
cwde
ret
ret
mov
mov
scas
pop
ret
cwde
ret
jne
ret
adc
ret
and
xchg
jg
xchg
ret
ret
test
ret
mov
ret
mov
ret
push
ret
mov
push
ret
xchg
pop
ret
lods
dec
ret
popf
ret
cmps
sub
mov
push
ret
pop
pop
pop
push
add
mov
mov
ret
jle
xchg
ret
mov
inc
pop
or
movs
ins
ret
test
call
ret
cdq
ret
test
or
inc
pop
ret
mov
xchg
adc
dec
ret
xchg
sub
mov
ret
pop
test
ret
cmps
push
ret
xchg
cs
inc
jo
lods
ins
pop
ret
ret
dec
ret
mov
inc
ret
movs
ret
mov
mov
lods
ret
ins
ret
ret
popf
ret
ret
xchg
ret
scas
add
mov
ret
mov
dec
ret
cmp
es
jge
lods
addr16
ret
xchg
ret
mov
ret
xor
mov
ret
call
ret
xchg
ret
mov
ret
mov
add
ret
ret
scas
daa
ret
test
push
mov
ret
and
dec
adc
mov
mov
mov
push
ins
inc
ret
xchg
ret
lods
pop
inc
ret
outs
jb
sub
ret
ret
mov
mov
ret
popf
pusha
ret
call
adc
push
ret
cdq
ret
sub
mov
ret
mov
ret
lods
ret
mov
adc
ret
mov
movs
ins
ret
pop
cwde
xor
mov
test
mov
popa
ret
test
scas
or
mov
pop
ret
mov
pop
push
ret
lea
mov
push
scas
push
ret
pop
push
ret
ret
movs
ret
test
ret
lahf
ret
mov
mov
ret
sub
mov
ret
cmps
ret
xchg
lods
xor
ret
sahf
(bad)
mov
mov
ret
xchg
or
cwde
jo
xchg
scas
cmp
mov
ins
ret
add
sbb
lahf
ret
add
ret
add
adc
mov
pop
or
cdq
ret
scas
add
cmps
inc
sub
test
ret
test
dec
ret
mov
ret
mov
ds
(bad)
add
mov
sbb
ret
cmps
jno
xchg
ret
xchg
ret
mov
mov
mov
call
ret
mov
mov
mov
ret
dec
ret
ret
ret
add
ret
or
mov
mov
mov
mov
dec
ret
mov
jns
mov
add
ret
add
sbb
ret
xchg
or
test
ret
mov
ret
mov
ret
ret
mov
movs
pop
adc
ret
xchg
ret
nop
xor
xchg
xchg
ret
mov
mov
push
ret
nop
ret
movs
ret
mov
ret
fs
mov
ret
xchg
outs
and
mov
xor
cwde
ret
lods
ret
popf
cmp
mov
ret
adc
inc
jbe
ret
movs
ret
xchg
ret
mov
mov
ret
stos
jb
mov
lahf
ret
xchg
ret
mov
ret
movs
ret
movs
sbb
ret
scas
ret
jns
mov
or
pop
and
xor
xchg
scas
or
lods
ret
mov
test
sbb
ret
xchg
xor
ret
pop
nop
ret
fs
test
ret
cmp
mov
ret
test
ss
mov
cdq
outs
jns
ret
test
movs
ret
test
mov
ret
movs
popa
ret
mov
lods
ret
dec
popa
jo
mov
ret
lods
push
ret
ret
mov
ret
cmps
xor
ret
ret
mov
ret
lods
ret
lahf
ret
or
bound
ret
xchg
ret
lods
ret
jo
ret
xchg
xor
ret
mov
pop
ret
jp
mov
and
ret
call
ret
mov
ret
nop
ret
mov
ret
popf
jl
mov
scas
ret
ret
test
mov
adc
inc
jb
ret
mov
and
fwait
ret
mov
mov
(bad)
ret
or
cmp
ret
xchg
or
add
pop
aaa
pop
ret
xchg
add
ret
mov
xchg
call
mov
mov
mov
inc
cmp
mov
add
cmp
jae
ret
call
ret
ret
mov
xor
xchg
adc
test
or
xchg
ret
ret
mov
cmps
push
add
mov
ret
mov
jbe
push
arpl
stos
ret
mov
mov
stos
and
dec
ret
xchg
xchg
sub
mov
dec
add
sahf
dec
jle
add
or
cmp
mov
ret
mov
ret
movs
ret
mov
ret
es
ret
mov
test
gs
dec
ret
ret
add
mov
mov
ret
mov
cs
push
push
or
push
dec
cmp
push
ret
ret
ret
xchg
popf
adc
xchg
ret
ret
pushf
ret
and
pop
xor
mov
ret
test
inc
inc
outs
ret
cmps
dec
inc
ret
mov
dec
inc
dec
ret
cmp
mov
ret
aas
ret
or
cmps
sbb
mov
mov
ret
ret
xchg
pop
push
ret
(bad)
ret
mov
ret
cmps
xor
ret
xchg
ret
mov
jo
sub
mov
cmp
stos
xor
mov
jp
test
xchg
sbb
cmps
ret
scas
ret
pushf
ret
sahf
pop
pop
pop
ret
push
inc
inc
arpl
ret
add
ret
jo
cmps
add
ret
cmp
mov
mov
ret
dec
ret
ret
ret
mov
ret
pop
test
mov
pusha
add
ret
mov
ret
cwde
dec
ret
test
nop
inc
ret
mov
xchg
arpl
mov
stos
ret
mov
sub
call
ret
movs
xor
mov
mov
xor
mov
ret
dec
ret
mov
push
ret
cdq
ret
call
stos
ret
mov
mov
popf
ja
ret
add
ret
ret
xchg
ret
mov
mov
xchg
ret
mov
scas
ret
lods
dec
ret
xchg
sbb
test
mov
sahf
cmp
mov
sub
sahf
ret
mov
dec
inc
ret
mov
ret
ret
cmps
ret
inc
dec
inc
ret
mov
xchg
jg
ret
mov
scas
ret
mov
ret
ret
test
xchg
ret
ret
add
ret
cmps
arpl
mov
ret
test
test
xchg
ret
lods
adc
mov
stos
xor
lea
ret
push
or
xchg
dec
sub
ins
ret
popf
ret
cmps
ret
lods
jns
sahf
xor
cdq
ret
mov
ret
sub
stos
outs
ret
xchg
ret
ret
test
add
pop
cdq
pop
ret
ret
pop
or
add
xchg
ret
mov
mov
ret
xchg
ret
xchg
daa
jbe
nop
add
mov
test
cwde
ins
ret
mov
test
mov
scas
and
pushf
push
ret
nop
ret
mov
outs
ret
mov
ret
lahf
and
test
test
xor
mov
mov
nop
jo
mov
mov
mov
ret
mov
mov
ret
mov
ret
test
ret
lahf
adc
mov
ds
scas
cmp
jno
ins
jns
lods
je
push
ret
fwait
ret
nop
and
ret
ret
test
ret
xchg
ret
ret
ret
movs
push
and
push
sub
ret
mov
mov
lea
and
test
mov
inc
or
ret
xchg
addr16
ret
mov
ret
and
push
inc
ret
sub
xchg
ret
mov
sbb
lods
pop
adc
mov
fwait
ret
mov
jge
add
popf
and
push
add
xor
ret
mov
lods
daa
pop
pusha
ret
je
ret
mov
ret
inc
dec
cmp
adc
sub
ret
mov
ret
add
sub
test
mov
adc
mov
mov
pushf
sbb
ret
mov
mov
ret
mov
mov
ret
test
test
bound
addr16
ret
mov
and
mov
mov
xchg
ret
mov
ret
mov
ret
(bad)
ret
ret
mov
add
cmps
ret
ret
ret
movs
add
ret
ret
mov
pop
push
jno
ret
ret
push
ret
ret
add
ret
and
ret
mov
xchg
and
add
push
sub
ret
ret
mov
and
push
adc
ret
mov
mov
test
ret
lods
sbb
add
inc
ret
pushf
and
mov
mov
adc
sbb
fwait
ret
sub
je
cdq
ret
mov
push
cmp
ret
ret
mov
ret
pop
ret
mov
mov
ret
cs
mov
scas
ret
cwde
sub
movs
ret
ret
xchg
ret
xchg
push
jb
ret
call
inc
or
movs
ret
jo
pusha
ret
ret
nop
sub
push
sub
ret
sbb
mov
popf
push
ret
ret
scas
ret
cmps
ret
mov
cdq
cmp
ret
ret
ret
ret
mov
xchg
add
stos
cs
mov
scas
ret
ret
mov
add
nop
or
xchg
mov
stos
ret
mov
ret
mov
ret
(bad)
mov
ret
lahf
inc
ret
mov
adc
sub
pushf
cmp
ret
cwde
sbb
xchg
inc
sub
scas
ret
or
and
ret
cdq
ret
(bad)
ret
xchg
add
xchg
add
ret
xchg
ret
cwde
or
ret
scas
ret
mov
mov
xchg
push
sbb
mov
add
and
mov
cmp
jb
test
ret
(bad)
jle
sbb
xchg
inc
imul
or
xchg
xchg
sub
popf
cmp
test
ret
ret
xchg
ret
cdq
xor
sahf
ret
mov
ret
fwait
pop
arpl
(bad)
mov
xchg
jne
xor
imul
ret
inc
ret
mov
ret
js
jns
mov
ret
mov
stos
cmp
mov
mov
sbb
lods
ret
nop
push
ret
mov
ret
ret
ret
push
ret
stos
ret
mov
ret
xchg
ret
stos
ret
ret
ret
mov
ret
stos
ret
xchg
ret
mov
pop
data16
ret
call
adc
mov
or
ret
mov
ret
movs
ret
add
ret
and
mov
movs
ret
mov
xchg
ret
ret
mov
mov
stos
cmp
cmps
pop
ret
ret
and
ret
ins
ret
xchg
call
sub
ret
mov
mov
ret
fwait
and
cmp
ret
mov
pop
jne
mov
ret
scas
ret
fwait
ins
gs
mov
test
ret
mov
lods
add
scas
dec
or
xchg
ret
mov
xchg
ret
xchg
stos
ret
outs
sbb
xchg
cmp
xor
fwait
ret
test
mov
xor
xchg
aaa
ret
ret
add
ret
mov
ret
cmps
ss
test
ret
mov
mov
fwait
ret
xchg
dec
ret
ret
mov
ret
jp
push
ret
mov
pusha
ret
add
stos
ret
ret
ret
mov
xchg
push
pop
pop
ret
test
ins
ret
mov
ret
xchg
ret
xchg
xchg
jns
ret
inc
inc
ret
xor
ret
cs
mov
pop
jp
or
mov
ret
adc
js
ret
mov
sub
popf
ret
fwait
ret
xchg
jno
dec
ret
scas
ret
movs
ret
test
imul
ret
xchg
ret
pop
push
pop
ret
xchg
ret
mov
and
movs
ret
(bad)
ret
ret
test
ret
xchg
dec
inc
ret
mov
ret
ret
xchg
ret
jbe
jbe
mov
mov
xchg
ret
add
ret
mov
inc
ret
jge
ret
ret
jg
pop
dec
ret
fwait
ret
scas
or
push
dec
add
stos
and
mov
mov
and
ret
fwait
ret
pusha
ret
pushf
push
ret
mov
xor
mov
mov
imul
ret
ret
sahf
aas
ret
ret
mov
xchg
cmpps
mov
test
ret
test
sub
xchg
or
ret
test
sub
ret
xchg
ret
push
pop
ret
mov
mov
ret
xchg
movs
ret
call
ret
mov
xchg
cwde
ins
ret
ret
xchg
ret
cmps
inc
ret
xchg
sahf
ret
ret
xchg
xchg
pop
adc
mov
add
test
pushf
xor
ret
cmps
ret
mov
ret
scas
xor
mov
mov
ret
push
ret
cmp
pushf
adc
xchg
ret
mov
mov
mov
mov
jg
inc
ret
cwde
jl
cdq
push
ja
pop
ret
ret
lahf
ret
ret
cwde
push
mov
sub
add
add
cs
pop
sub
test
jnp
fwait
ins
dec
ret
mov
call
jne
sahf
sbb
ret
test
ret
stos
sbb
add
and
add
push
ret
cdq
ret
ret
stos
jns
cmps
ss
mov
add
cmp
movs
imul
inc
ret
xchg
jae
ret
cmps
ret
mov
inc
push
ret
ret
mov
popf
and
mov
test
xchg
jge
sbb
mov
dec
outs
ret
add
cs
scas
jne
add
mov
cmp
sahf
add
add
je
mov
inc
dec
cmp
and
mov
ret
nop
es
cdq
adc
mov
scas
dec
ret
mov
ret
outs
ret
mov
ret
pop
sbb
ret
ret
movs
ret
mov
movs
add
mov
and
cmps
ja
imul
jnp
push
ret
mov
ret
ret
lahf
ret
(bad)
jle
dec
ret
call
das
jg
cdq
ret
lods
push
sub
scas
ret
xchg
ret
lahf
ret
mov
popa
push
ret
or
ret
mov
ret
call
ret
mov
inc
or
aas
pop
push
inc
inc
ret
xor
xchg
daa
push
ret
lahf
ret
sahf
ret
mov
ret
mov
lahf
pop
sub
mov
ret
mov
push
ret
mov
sbb
xor
mov
inc
or
mov
stos
sub
mov
add
ret
lahf
ret
stos
ss
sahf
dec
(bad)
push
ret
or
mov
movs
ret
scas
ss
ret
stos
ins
pop
xor
test
mov
lahf
ret
jp
ret
cdq
ret
xchg
inc
ret
ret
mov
ret
xchg
adc
test
ss
mov
stos
sbb
ret
inc
and
ret
add
ret
ret
xchg
adc
scas
outs
ret
movs
ret
mov
sbb
xchg
sbb
mov
ret
cwde
sbb
mov
scas
ret
dec
arpl
mov
ret
mov
push
ret
mov
mov
xchg
ret
stos
ret
scas
ret
ret
stos
ret
ret
test
ret
add
and
mov
stos
sbb
ret
cmps
ret
mov
mov
xchg
or
xchg
push
ret
cmps
adc
cs
and
imul
ret
call
imul
ret
cdq
arpl
scas
ret
add
ret
mov
cmpps
xchg
je
test
xchg
sub
xchg
mov
daa
ret
scas
ret
cmps
ret
push
ret
add
sahf
sbb
ret
mov
imul
dec
ret
mov
or
ret
mov
xchg
js
jp
mov
mov
xchg
add
fwait
pop
ret
add
ret
stos
adc
mov
ret
or
ret
mov
pop
dec
ret
xchg
and
mov
nop
outs
ret
xchg
ret
ret
test
mov
adc
ret
xchg
sbb
mov
ret
adc
call
ret
cmps
daa
es
mov
xchg
mov
pop
pop
ret
add
aaa
add
mov
xchg
ret
cwde
ret
ins
ret
ret
mov
push
ret
sbb
mov
sahf
push
dec
ret
test
mov
xchg
sysenter
or
lahf
ret
mov
cdq
ret
mov
ret
mov
scas
ret
mov
sbb
scas
ret
mov
mov
inc
ret
test
add
call
ret
ss
xchg
ret
ret
dec
ret
mov
ret
mov
sbb
ret
movs
cmp
ret
cmps
js
xchg
ret
stos
pop
push
cdq
push
inc
ret
xchg
pop
ret
mov
or
xchg
ret
mov
(bad)
jg
mov
pop
mov
ret
mov
mov
mov
cwde
pop
pop
daa
js
ret
mov
ret
mov
nop
ret
xchg
ret
mov
mov
mov
ret
mov
and
cmpps
ret
mov
ret
add
ret
mov
cmp
xchg
ret
xchg
ret
scas
ret
lods
jb
mov
mov
ins
ret
sbb
test
mov
ret
ret
mov
mov
pop
test
mov
sbb
popf
ret
mov
mov
popa
ret
mov
mov
ret
mov
ret
cmps
ret
mov
mov
or
mov
mov
or
jbe
inc
ret
mov
ret
lahf
ret
scas
ret
add
ret
xchg
push
ret
mov
es
ret
mov
lods
addr16
push
ret
xchg
ret
mov
ret
stos
das
sbb
test
scas
ret
stos
sub
mov
mov
ret
cwde
jo
push
ret
ret
test
sahf
push
cmp
or
mov
ret
adc
ret
dec
ret
ret
scas
ret
movs
ret
xchg
add
push
ret
mov
mov
ret
xchg
inc
ret
nop
ret
mov
lahf
ret
add
inc
ret
pop
xchg
ret
test
ret
mov
ret
xchg
ret
mov
ret
xchg
ret
adc
xchg
ret
ret
mov
mov
mov
and
lods
inc
ret
mov
ret
(bad)
imul
ret
ret
cdq
pop
ret
mov
cwde
pop
ret
mov
xchg
cwde
ret
cwde
jl
ret
ret
mov
das
pop
dec
sub
mov
pop
aaa
ret
mov
mov
mov
or
test
xchg
ret
fwait
ret
mov
ret
imul
ret
nop
ret
mov
test
mov
ret
xchg
or
ret
cdq
ret
movs
cmp
es
call
mov
adc
mov
ret
mov
ret
cmp
cmp
pop
imul
pop
ret
lods
adc
mov
ret
mov
pop
mov
ret
ret
inc
ret
mov
mov
cmps
ret
scas
ret
ret
(bad)
ret
mov
popf
jp
ret
xchg
ret
aaa
ret
mov
test
cs
mov
aas
add
mov
mov
ret
scas
fs
test
test
mov
ret
movs
ret
xchg
xchg
push
jbe
and
xchg
jp
mov
xchg
jbe
nop
pop
ret
ret
mov
ret
pop
and
ret
jge
popf
ret
ret
xor
dec
sbb
movs
ret
ret
inc
ret
add
add
ret
mov
ret
mov
mov
mov
or
ret
pushf
or
ret
mov
ret
ret
mov
ret
xchg
arpl
cmps
ret
outs
ret
add
outs
or
mov
add
ret
mov
ret
mov
ret
cmp
cwde
inc
ins
adc
sahf
pop
ret
cwde
sub
sahf
ds
xchg
bound
ret
cmp
sahf
inc
ret
fwait
push
ret
or
test
ret
xchg
lods
push
ret
push
ret
xchg
ret
mov
ret
mov
ins
ret
ret
adc
inc
jg
ret
add
ret
xchg
ret
mov
ret
mov
mov
ret
mov
mov
and
jnp
cmps
inc
imul
cdq
ret
ret
ret
ret
mov
pop
ret
cdq
push
ret
sahf
sbb
cmp
sahf
ret
mov
movs
ret
cwde
ret
test
mov
lods
cmp
inc
ret
ret
mov
add
arpl
mov
ret
or
ret
mov
ret
scas
push
ret
ret
xchg
pop
cmp
mov
add
call
ret
xchg
ret
mov
ret
mov
cmp
cdq
ret
lahf
ret
mov
pushf
ret
mov
mov
mov
ret
sbb
mov
xchg
ret
cmps
dec
ret
xchg
pop
mov
ret
or
mov
ret
xchg
mov
ret
add
jl
xchg
ret
ret
mov
ret
mov
ret
and
xchg
cmpps
xchg
xor
xchg
jb
ret
ret
mov
ret
mov
ret
mov
jle
ret
pushf
ret
add
push
retw
test
ret
mov
dec
ret
ret
mov
ret
mov
popf
ret
test
cwde
ret
mov
stos
ins
ret
mov
xchg
ret
mov
xor
xchg
ret
ret
xchg
push
adc
test
ret
mov
mov
(bad)
ret
ret
mov
mov
ret
stos
ret
ret
mov
pusha
ret
ret
mov
and
mov
mov
mov
jne
mov
ret
xchg
ret
outs
and
mov
call
dec
ret
ret
ret
pop
outs
es
mov
sahf
popa
ret
test
add
jge
mov
test
cmp
test
scas
arpl
and
mov
jbe
or
xchg
bound
ret
mov
ret
test
ret
mov
xchg
pop
push
ret
xchg
popa
ret
mov
xchg
sbb
xor
sbb
data16
ret
ret
mov
ret
ret
mov
mov
ds
mov
cmps
jp
mov
mov
mov
ret
test
ret
ret
mov
push
ret
ret
mov
ret
cmp
or
mov
ret
ret
ret
mov
mov
add
push
ret
mov
pop
mov
stos
push
ret
mov
add
sub
ret
call
ret
lods
ret
ret
sbb
cwde
ret
movs
cmp
cmps
ret
mov
pop
push
sub
mov
mov
ins
js
outs
daa
inc
ret
test
scas
ret
lahf
ret
mov
push
jne
test
push
ret
mov
or
mov
mov
dec
ret
movs
das
ret
ret
scas
ret
mov
mov
pop
ret
mov
ret
dec
ret
mov
mov
ret
mov
xor
sbb
scas
cmp
ret
test
nop
ret
test
adc
sub
(bad)
ret
xchg
sbb
ret
mov
ret
lods
ret
nop
jl
ret
sahf
jge
test
ret
xchg
outs
aas
ret
ret
mov
ret
mov
ret
add
cmp
mov
ret
cmps
ret
ret
sub
ret
mov
ret
cdq
ret
call
ret
mov
ja
xchg
sub
ret
xchg
ret
mov
mov
push
aas
inc
pusha
ret
xchg
push
ret
nop
sub
mov
jb
ret
pushf
inc
sub
ret
mov
sbb
scas
inc
ret
mov
pusha
ret
ret
mov
lods
ret
test
movs
ret
stos
pop
ret
ret
mov
add
ret
xchg
ret
(bad)
push
add
ret
mov
ret
(bad)
ret
test
ret
lods
pop
ret
mov
lods
ret
test
mov
xchg
ret
scas
xor
ret
mov
xchg
pop
sbb
ret
ret
push
ret
mov
jns
pop
add
mov
xchg
or
ret
mov
movs
ret
es
ret
pop
jnp
ret
ret
cwde
ret
mov
nop
xor
xchg
lea
mov
scas
jae
ret
ret
inc
sbb
mov
pushf
ret
mov
mov
ret
mov
and
mov
push
inc
addr16
or
adc
call
push
pop
aas
pop
ret
(bad)
ret
sahf
ret
xchg
ret
aas
ret
cwde
ret
xchg
ret
xor
ret
mov
xchg
ret
popa
ret
ret
pushf
ret
scas
ja
ret
xchg
js
ret
mov
js
dec
ret
xchg
inc
ret
mov
dec
jae
(bad)
ret
cmp
nop
jg
ret
test
ret
mov
ret
scas
ret
xchg
mov
mov
push
ret
nop
jnp
push
cmp
push
pop
pop
ret
mov
mov
xchg
ret
ret
lea
ret
(bad)
pop
add
ret
lods
ret
mov
jo
mov
ret
xchg
push
ret
mov
ret
mov
addr16
or
aas
ret
mov
xchg
ret
movs
sbb
add
es
ret
mov
mov
xchg
ret
mov
ret
cwde
ret
stos
ret
xchg
ins
ss
add
ret
movs
push
ret
mov
adc
pushf
ret
ret
scas
ss
ret
mov
xchg
ret
mov
je
ret
adc
or
test
xchg
daa
ret
dec
ret
xchg
jo
mov
pushf
ins
ret
and
mov
mov
push
ret
cdq
add
mov
nop
dec
ret
cmps
ret
adc
ret
pushf
or
push
das
cmp
stos
ret
dec
ret
lahf
ret
jns
ret
ret
lods
ret
ret
xchg
mov
ret
fwait
sbb
sbb
ret
lods
ret
scas
cmp
stos
ret
mov
nop
outs
dec
jl
add
mov
ret
ret
xchg
ret
xchg
ret
movs
ss
xchg
mov
mov
ret
test
mov
ret
fs
test
pushf
cmp
or
ret
mov
mov
lahf
ret
(bad)
mov
mov
dec
add
inc
ret
fwait
ret
xor
sub
mov
ret
adc
sahf
inc
ret
(bad)
ret
and
ret
mov
or
xchg
movs
inc
jbe
jge
ret
ret
xchg
jno
or
mov
pop
and
ret
xchg
ret
stos
ins
ret
ret
xchg
xchg
ret
cmps
push
ret
cmps
ret
ret
ret
stos
sbb
mov
ret
ret
test
add
sbb
add
add
ret
mov
adc
mov
ret
mov
dec
imul
xor
mov
jnp
mov
test
(bad)
ret
ret
push
ret
cmps
ret
mov
xchg
push
inc
ret
cmps
sub
ret
jbe
push
ret
test
cmp
mov
ret
nop
ret
mov
test
ret
or
add
mov
mov
add
ret
mov
mov
pushf
xor
add
cwde
addr16
ret
xchg
jno
ret
cmp
ret
mov
inc
push
cs
ret
xchg
ret
fwait
sbb
je
mov
xchg
xor
or
scas
pop
or
ret
cmps
dec
and
ss
ret
ret
cdq
ret
ret
mov
xchg
ret
test
lods
ret
ret
ret
movs
push
ret
mov
dec
ret
call
ret
mov
cmps
ret
ret
mov
ret
cwde
ret
mov
sbb
fwait
sbb
ret
ret
mov
mov
mov
cdq
ret
test
ret
mov
popf
ret
xchg
mov
mov
ret
mov
cmps
jb
movs
ret
cwde
ret
ret
xchg
adc
ret
xchg
ret
mov
xchg
ret
cmp
movs
bound
xor
xor
ret
mov
movs
ret
cwde
addr16
nop
ret
or
ret
scas
sub
dec
push
ret
mov
mov
movs
ret
ret
mov
and
mov
ret
ret
mov
test
mov
push
ret
mov
xchg
or
gs
cdq
or
ret
arpl
inc
ret
jno
xchg
inc
ret
ret
cmps
ret
dec
ret
ret
ret
mov
ret
xchg
ins
jae
lea
xor
mov
fs
xchg
ret
ret
vphaddbd
dec
ret
ret
sahf
sbb
xchg
mov
dec
ret
movs
dec
ret
test
ret
ret
cmps
ret
cwde
ret
and
mov
dec
aas
ret
stos
push
ins
sbb
ret
push
outs
ret
lea
adc
gs
test
mov
mov
jae
ret
mov
test
sbb
mov
ret
test
sbb
sahf
ret
lahf
ret
movs
pop
dec
ret
ret
xchg
jb
gs
sbb
cmps
jl
ret
jne
fs
lea
ret
or
mov
sub
pop
xor
ret
xchg
ret
ret
mov
ret
movs
ret
jge
ret
fwait
ret
xchg
outs
ret
pushf
xor
sahf
push
daa
ret
xchg
das
add
stos
ret
scas
outs
ret
cdq
ret
xchg
ret
sahf
jb
ret
mov
mov
ret
xchg
ret
cmps
jnp
xchg
ret
mov
and
test
movs
gs
cwde
ret
lea
mov
sahf
ret
mov
ret
mov
xchg
mov
xchg
ret
ret
cs
outs
ret
mov
sahf
jno
popa
ret
mov
call
cs
test
mov
ret
mov
ret
ret
mov
xchg
ss
mov
ret
pop
sbb
ret
movs
addr16
cmp
ret
cmp
scas
xor
push
xor
mov
ret
xchg
cmp
push
ret
stos
ret
mov
ret
ret
xchg
pop
ret
cdq
jge
ret
mov
ret
adc
ret
mov
popa
push
sbb
xchg
ret
ret
ret
xchg
ret
mov
mov
xor
pop
popf
ret
xchg
ret
mov
ret
cmps
add
mov
ret
lods
pop
ret
pop
ret
(bad)
ret
cmps
add
mov
cmp
jb
fwait
pop
ret
movs
ret
mov
ret
cmps
cmp
mov
push
imul
es
xchg
mov
imul
cwde
ret
xchg
ret
mov
xchg
ret
cmps
ret
movs
sbb
xchg
ret
inc
or
ret
xor
dec
ret
ret
xchg
ret
ret
stos
jne
lods
and
sub
mov
push
ret
mov
ret
xchg
xchg
pop
dec
sbb
ret
ret
ret
sub
ret
mov
ret
(bad)
push
ret
test
push
ins
xor
mov
xchg
ret
ret
mov
mov
adc
mov
popf
sub
xchg
ret
sbb
mov
mov
ret
js
mov
and
ret
stos
je
ret
mov
mov
pop
push
jns
mov
ret
scas
jns
movs
popa
cmp
lods
ret
mov
inc
ret
scas
ret
lods
jae
mov
mov
sbb
push
push
sub
inc
pop
ret
mov
ja
sub
mov
mov
ret
xchg
jg
test
lahf
push
ret
test
ret
sub
mov
and
ret
fwait
js
or
and
ret
cdq
ret
xchg
push
ret
xchg
ret
mov
ret
cmp
ret
mov
dec
ret
xchg
ret
ret
mov
inc
ret
ret
test
ret
(bad)
jnp
arpl
ret
xchg
ret
mov
mov
fwait
ret
call
xor
lahf
and
cwde
ret
sub
ret
pushf
jbe
mov
ret
mov
sahf
ret
lods
ret
mov
popa
aas
ret
cmps
arpl
mov
ret
mov
popf
cmp
inc
ret
mov
ret
nop
dec
or
popf
push
js
add
test
outs
jo
jne
ret
mov
sub
xchg
xor
ret
xchg
mov
ret
call
ret
popa
ret
stos
sbb
xchg
sbb
aas
pop
ret
vprotw
xchg
lods
ret
xchg
ret
add
and
mov
xchg
xchg
ret
mov
mov
ret
mov
fwait
ret
lahf
ret
sahf
pop
ret
mov
mov
test
mov
mov
mov
xchg
ret
xchg
ret
xchg
ret
(bad)
ret
add
ret
xchg
mov
ja
push
(bad)
fs
ret
nop
ret
add
add
pushf
ret
mov
mov
sub
and
mov
sahf
ret
mov
mov
add
sbb
and
sub
mov
ret
mov
ret
scas
push
cs
ret
stos
arpl
dec
add
ret
ret
mov
ret
mov
ret
mov
pop
ret
(bad)
push
ret
scas
ret
xchg
and
movs
pop
ret
movs
xor
mov
xor
ret
ret
test
ret
mov
mov
add
test
stos
or
add
ret
mov
push
or
cdq
ret
mov
add
pop
ret
ret
dec
and
mov
ret
cdq
inc
ret
mov
ret
sahf
pop
dec
ret
pop
xor
ret
ret
ret
(bad)
ret
movs
jae
inc
adc
movs
cmp
mov
ret
mov
ret
test
ret
mov
ret
mov
xor
lods
gs
ret
mov
jns
ret
mov
ret
mov
ret
cmps
ret
dec
ret
mov
ret
ret
cmp
push
ret
inc
pop
sub
mov
ins
adc
and
ret
mov
movs
ret
mov
ret
stos
pop
aaa
ret
ret
movs
cmp
movs
inc
ret
mov
ret
sahf
and
or
ret
test
mov
ret
popf
ret
mov
lods
sub
xchg
or
lahf
je
ret
mov
xchg
jbe
sahf
sbb
push
ret
mov
xchg
arpl
nop
ret
mov
xchg
or
mov
ret
ret
ret
sbb
adc
mov
mov
push
ret
test
mov
stos
push
ret
ret
movs
and
ret
ret
mov
ret
mov
nop
adc
ret
lea
mov
or
ret
add
ret
mov
(bad)
ret
ret
test
ret
mov
test
ret
cmps
je
xchg
ret
ret
ret
sub
cmp
ret
push
jg
(bad)
adc
ret
mov
xor
ret
cmps
add
ret
mov
ret
nop
ret
ret
stos
ret
mov
ret
mov
ret
xchg
ret
mov
aas
ret
lahf
pop
ret
mov
ret
mov
fwait
addr16
adc
pop
ret
ret
nop
jae
ret
add
imul
push
jbe
ret
cwde
ret
pop
ret
mov
lods
js
cwde
xor
ret
ret
or
mov
test
ret
and
call
mov
cmp
mov
mov
jae
call
dec
ret
dec
outs
ja
sbb
ret
sahf
jno
call
ret
mov
sbb
ret
mov
mov
sub
cmp
bound
ret
mov
ret
scas
and
and
add
push
cmp
ret
push
ret
stos
ret
test
movs
ret
cmp
adc
das
sbb
cwde
ret
dec
je
sbb
cwde
xor
mov
push
ret
stos
ret
mov
add
ret
jb
call
push
ret
test
sbb
xchg
ret
test
ret
xchg
adc
ret
pop
ret
add
ret
xor
or
(bad)
je
ret
addr16
or
sub
lea
retw
xchg
dec
ret
sahf
dec
sbb
mov
mov
xchg
or
adc
add
ret
test
mov
ret
sahf
sbb
ret
ret
sub
mov
jne
dec
ret
movs
push
push
sub
and
scas
ret
add
ret
popf
add
cmps
ret
pop
pop
ins
and
lods
ret
test
xchg
ret
mov
sbb
popa
ret
xchg
or
test
fwait
jnp
ret
xchg
ret
mov
ret
sbb
inc
ret
mov
ret
mov
jg
jge
ret
xchg
ret
push
outs
dec
ret
mov
and
add
outs
xor
mov
test
ja
xchg
cmps
ret
xchg
sub
popf
ret
ret
xchg
mov
sbb
mov
stos
outs
ret
stos
ret
scas
cmp
mov
ret
cdq
jae
movs
ret
mov
ret
mov
xchg
pop
ret
mov
movs
cmp
mov
ret
cmps
push
ret
mov
adc
ret
call
ret
stos
ret
mov
mov
inc
ret
mov
ret
or
ret
inc
pop
ret
mov
ret
ret
movs
xor
ret
cwde
inc
jp
ret
test
xor
mov
mov
ret
cs
cdq
ret
mov
mov
ret
xchg
mov
ret
mov
xchg
ret
xchg
mov
mov
mov
or
and
test
ret
pop
ret
mov
movs
add
xchg
pop
ret
mov
ret
ret
ret
add
sub
ret
cmp
ret
mov
aas
jb
ret
sahf
adc
fwait
xor
cmp
sbb
mov
call
add
mov
stos
inc
inc
cmp
ret
jo
cdq
ret
mov
mov
ret
mov
ja
ret
mov
test
mov
ret
test
xchg
cmpps
ret
test
ret
mov
movs
ret
mov
xchg
pop
and
scas
ret
mov
jo
xchg
inc
ret
ret
pushf
cmpps
mov
ret
mov
test
push
xor
dec
ret
mov
mov
ret
cmps
inc
ret
and
ret
mov
inc
ret
pop
push
ret
test
mov
add
test
mov
xchg
xor
ret
cwde
push
ret
mov
cwde
jle
mov
ret
xchg
pop
ret
ret
dec
ss
ret
ret
mov
cwde
outs
jge
mov
sbb
pop
mov
mov
ret
es
mov
sahf
addr16
mov
add
dec
ret
mov
mov
ret
ret
sbb
sub
xor
movs
adc
ret
(bad)
ret
scas
inc
dec
ret
gs
add
nop
ret
cmps
jb
popf
and
xchg
ret
call
ret
xor
sbb
ret
mov
ret
mov
pop
ret
add
ret
jp
test
xchg
ret
mov
cmps
or
ret
ret
ret
mov
sub
inc
ret
or
mov
xchg
ret
sbb
ret
mov
sbb
mov
xchg
ret
movs
jbe
ret
scas
ret
mov
sub
scas
ret
mov
ret
xchg
ret
mov
ret
pop
mov
ret
test
push
ret
mov
ret
test
ret
xor
cmp
inc
ins
or
mov
ret
cmps
ds
lahf
dec
cmp
scas
ret
mov
ret
inc
ret
movs
sbb
push
push
ret
(bad)
adc
dec
pop
add
ret
mov
mov
xchg
ret
ret
mov
nop
or
arpl
ret
mov
and
imul
sub
ret
cdq
ret
inc
inc
ret
test
lods
ret
xchg
ret
xchg
ret
mov
jno
imul
ret
mov
or
xchg
ret
mov
inc
pop
ret
lea
mov
mov
pop
xchg
lahf
ret
ret
or
mov
mov
adc
ret
mov
cmp
jg
mov
das
add
test
mov
ret
cwde
jae
ret
lahf
push
aas
ret
sbb
lea
adc
ret
mov
mov
xchg
test
mov
jge
ret
mov
lods
ret
mov
mov
scas
cmp
ret
cmp
ret
popf
ret
mov
ret
stos
ret
ret
cmps
js
ret
and
mov
mov
ret
stos
ret
js
sbb
pop
pusha
jp
xor
movs
ret
test
addr16
mov
push
inc
xor
mov
lods
sbb
cmps
ret
mov
mov
add
mov
mov
lods
ret
mov
cmp
mov
pop
arpl
ret
cmps
and
mov
ret
mov
ret
mov
mov
or
ret
push
ret
(bad)
aaa
ret
mov
and
cs
mov
pushf
push
pop
inc
aas
aas
add
mov
test
cmp
movs
ret
xchg
ret
cmps
push
ret
cmps
ret
xchg
ret
inc
ret
fwait
sub
mov
ret
xchg
jno
jge
lods
cmp
ret
ret
xchg
jl
mov
ret
mov
dec
ret
ret
xchg
ret
stos
fs
sub
(bad)
ret
xchg
jle
dec
sbb
ret
ret
mov
ret
mov
cmp
ret
mov
push
sbb
fwait
ss
test
xchg
ret
pushf
adc
ret
mov
and
mov
cwde
xor
mov
push
ret
mov
sub
mov
cmp
mov
ret
nop
ret
popf
sbb
ret
ret
pushf
ret
add
ja
movs
sbb
jns
ret
mov
ret
cmps
je
lahf
pusha
ret
mov
mov
mov
pop
ret
mov
cmps
ret
scas
ret
mov
ret
mov
ret
push
dec
and
xchg
ret
mov
ret
ret
ds
(bad)
ret
mov
ins
ret
test
sub
mov
ret
xchg
ret
or
mov
ret
mov
ret
(bad)
ret
mov
ret
add
and
cmps
push
daa
push
and
test
mov
ret
mov
ret
mov
ret
ret
ret
xor
mov
xchg
ins
ret
test
lods
cmp
ret
cmps
cmp
mov
mov
movs
xor
ret
mov
adc
fwait
ret
ret
test
ret
ret
lods
ret
scas
ret
stos
ret
ret
scas
pop
ret
mov
mov
ret
mov
dec
ins
ret
xor
(bad)
sbb
cdq
ret
mov
ret
sub
ret
sub
ret
mov
mov
movs
ret
ret
mov
ret
cdq
add
dec
ret
jle
adc
mov
push
das
pop
or
add
inc
ret
stos
ret
add
ret
stos
ret
pushf
imul
ret
test
ret
mov
ret
lods
ret
xchg
inc
and
cmps
ret
addr16
xchg
mov
ret
je
sub
mov
ret
mov
outs
ret
ret
cmp
ret
test
movs
imul
ret
dec
push
xor
ret
ret
mov
push
ret
ret
mov
cwde
ret
mov
ret
push
jp
xchg
ret
pop
mov
add
ja
ret
lea
mov
xchg
inc
inc
sub
pusha
ret
mov
ret
xchg
dec
ret
lods
sub
ret
movs
ret
ret
push
ret
outs
ret
add
ret
bound
sahf
imul
ret
add
jg
mov
ret
adc
ret
xchg
popa
inc
js
scas
ret
mov
mov
adc
xor
mov
mov
ret
pushf
ret
lea
ret
fwait
push
ret
pop
ret
ret
cmp
push
ret
mov
sub
ret
and
stos
ret
mov
popf
popa
inc
ins
ret
pushf
dec
jb
movs
ret
mov
xchg
ret
xchg
ret
test
dec
ret
lods
dec
pop
xor
cmp
ret
cwde
inc
ret
mov
push
ret
or
xchg
ret
movs
ret
scas
ret
ret
add
adc
mov
outs
or
stos
sub
ret
and
cwde
dec
je
test
mov
ret
mov
ret
xchg
ret
mov
stos
ret
xchg
ret
mov
dec
das
jnp
xchg
or
popf
ret
lods
ret
ret
push
cmp
mov
lahf
ret
scas
add
xchg
cmp
cmps
ret
xchg
dec
sub
xchg
adc
cwde
ret
ret
popf
ret
xchg
cmp
xchg
ret
ret
test
mov
xchg
sbb
ret
mov
xchg
es
cmp
mov
nop
ret
mov
ret
lods
ret
fwait
ret
(bad)
das
ret
ret
mov
ins
push
ret
add
ret
mov
ret
mov
ret
mov
ret
jo
ret
xchg
ret
nop
pop
ret
cwde
adc
sub
mov
inc
gs
xchg
ret
cwde
ret
test
popf
ret
xchg
ret
scas
ret
mov
adc
mov
ret
ret
add
ret
ret
jle
ret
pop
fwait
ret
and
ret
call
ret
test
mov
stos
pop
ret
scas
push
sbb
mov
ret
(bad)
push
pop
add
imul
ret
xchg
adc
popf
jnp
mov
mov
ret
and
xor
xchg
ret
mov
je
ret
pop
mov
ret
sbb
popf
ret
xchg
ret
ret
fwait
pop
ret
scas
push
je
mov
ret
lea
inc
adc
mov
popf
or
ret
dec
adc
cmps
dec
ret
cmps
ret
movs
ret
stos
ret
sbb
pusha
jns
fs
add
test
xchg
xor
pop
pop
and
ss
ret
mov
sub
ret
ret
ret
xchg
or
mov
popf
ret
mov
stos
ret
mov
ret
mov
mov
ret
ret
lahf
or
lods
fs
scas
ret
mov
mov
ds
mov
ret
ret
cmps
or
pushf
ret
mov
ret
mov
test
nop
ret
ret
scas
ret
push
ins
ret
add
push
daa
ret
nop
ret
test
push
ret
cmps
sbb
ret
mov
ss
lods
jns
xchg
adc
push
ret
mov
push
dec
ret
ret
xchg
ret
ret
cmp
pop
ret
or
ret
pop
lods
ret
aaa
push
ret
jg
ret
xchg
ret
mov
mov
pop
ret
xor
mov
mov
adc
ret
adc
mov
scas
ret
cs
ret
je
or
ret
stos
ret
nop
dec
ret
xchg
and
sub
add
dec
js
jge
xchg
sub
mov
sub
add
ret
ret
ret
mov
je
test
mov
ret
push
adc
scas
ret
movs
ret
mov
ret
lods
ret
add
ret
(bad)
ret
pushf
imul
movs
ret
add
test
ret
mov
movs
ret
or
add
sbb
sbb
mov
mov
sahf
ret
ret
cmps
cmp
aaa
jp
ret
cmps
ds
test
mov
mov
ret
mov
ret
mov
xchg
jg
mov
xchg
ret
ret
xchg
ret
nop
and
mov
jnp
ret
mov
ret
ret
mov
xchg
ret
mov
push
inc
ret
inc
ret
xchg
js
test
stos
ret
cdq
ret
and
mov
ret
test
mov
mov
lea
ja
ret
sahf
ret
lods
sub
ret
mov
ins
push
fs
movs
ret
ret
sub
call
call
ret
ret
mov
add
ret
mov
sahf
ret
xchg
ret
scas
ret
mov
ret
xchg
ret
xchg
ret
ret
ret
mov
ret
add
pop
ret
jne
ret
test
lods
adc
or
lods
ret
mov
popf
push
ret
nop
sub
mov
ret
mov
mov
sub
(bad)
ret
ret
sahf
inc
add
xchg
imul
ret
scas
ret
lea
ret
mov
test
or
mov
pop
sbb
js
mov
add
ret
mov
mov
scas
ret
(bad)
ret
add
inc
ret
mov
push
cmp
call
popf
cmp
ret
movs
ret
ret
mov
ret
fwait
ret
ret
pop
outs
ret
mov
fwait
ret
cmp
xchg
and
pop
(bad)
ret
xchg
ret
mov
inc
aaa
jae
xchg
ret
add
jp
add
xchg
ret
stos
ret
xchg
sub
mov
mov
ret
mov
cmp
xchg
pop
push
ret
mov
ret
ret
test
test
mov
ret
test
stos
push
ret
xchg
ret
mov
test
xchg
adc
ret
fwait
pop
push
bound
pop
ss
scas
ret
mov
pop
ret
ret
mov
inc
cmp
mov
ret
pushf
ret
test
mov
ret
add
ret
ret
mov
nop
and
ret
mov
mov
mov
pop
fs
ret
ret
mov
jg
pop
fwait
ret
ret
ret
imul
and
mov
mov
ret
mov
ret
xchg
ret
mov
inc
ret
xchg
ret
jg
inc
ret
jl
dec
arpl
ret
lods
inc
ret
cmps
dec
outs
ret
mov
ret
movs
adc
xchg
ret
adc
mov
ret
stos
ret
mov
lea
ret
mov
lahf
ret
ret
cmps
sub
mov
inc
es
push
ret
xchg
inc
ret
test
ret
ret
(bad)
ret
mov
ret
lods
outs
jns
ret
xchg
xchg
dec
ret
xchg
fwait
ret
xchg
ret
xchg
inc
ret
scas
ret
lods
ret
xchg
ret
movs
adc
mov
movs
cmp
pop
xor
test
push
pop
ret
mov
xchg
ret
ret
ret
cwde
popa
addr16
pushf
inc
ret
fwait
ret
mov
mov
xchg
ret
mov
xor
ret
stos
sub
movs
inc
(bad)
mov
inc
ret
ret
add
ret
mov
add
push
ret
cdq
push
ret
mov
js
sahf
ret
mov
ret
fwait
ret
mov
ret
ret
jns
ret
mov
stos
ret
mov
ret
scas
ret
ret
mov
nop
es
ret
mov
test
ret
lahf
ret
nop
adc
add
ret
cwde
ret
mov
movs
ret
mov
mov
ret
test
ret
cmps
inc
push
sub
mov
popa
pop
ret
mov
pop
sbb
mov
xchg
ret
ret
add
pop
ret
xchg
lea
ret
test
ret
mov
ret
mov
cs
pusha
popa
adc
mov
push
jb
ret
mov
daa
ret
ret
and
or
ret
mov
es
mov
ret
lods
pop
push
ret
xchg
cmp
ret
test
mov
nop
dec
ret
ret
pop
add
mov
xchg
sbb
ret
xchg
ret
ret
mov
ret
mov
scas
es
push
ret
cdq
ret
mov
sbb
xchg
ret
call
ret
sub
js
ret
popf
ret
ret
mov
cmp
mov
ret
mov
ret
inc
ret
pushf
pop
ret
mov
ret
movs
push
jo
push
ret
ret
mov
mov
mov
ret
test
cdq
cmovs
inc
jo
xchg
ret
mov
ret
mov
ret
adc
xchg
ret
cmps
ret
call
daa
ret
mov
ret
lods
pop
ret
movs
ret
and
mov
mov
ret
mov
mov
and
mov
ret
mov
xchg
and
nop
jo
xchg
jns
pop
ret
mov
stos
js
ret
xchg
ret
mov
ret
mov
mov
ret
ret
add
ret
mov
dec
ret
xchg
add
xchg
ret
mov
jl
ret
mov
add
and
xchg
popa
jns
xchg
ret
mov
ret
test
ret
xchg
ret
ret
mov
add
ret
ret
mov
cmps
imul
ret
ret
mov
ret
xchg
add
ret
pushf
push
ret
test
ret
ret
mov
xor
xor
ret
xchg
ret
ins
and
lods
aas
pop
jg
ds
call
pop
inc
jns
arpl
lahf
cs
ret
ret
(bad)
ret
sbb
mov
jl
dec
ret
(bad)
ret
scas
ret
mov
ret
mov
(bad)
ret
lods
ret
xchg
ret
ret
stos
and
inc
sbb
pop
add
pop
ret
add
push
ret
cmp
scas
ret
inc
ret
mov
push
or
mov
ret
mov
pop
mov
cs
mov
ret
mov
pushf
ret
mov
add
popf
ret
mov
xor
ret
lods
ret
mov
ret
stos
ret
mov
ret
push
ret
mov
add
ret
mov
xchg
cmpps
ret
stos
ret
stos
gs
xchg
push
sbb
mov
xchg
ret
mov
cwde
ret
ret
popf
push
ret
fwait
xor
mov
sbb
and
ret
sbb
mov
ret
sahf
ret
mov
push
and
cmp
inc
ret
add
pop
ret
nop
jbe
push
ret
movs
or
ret
sahf
ret
xchg
mov
sub
pop
fwait
ret
test
sbb
scas
ret
mov
ret
call
mov
adc
mov
mov
push
ret
ret
or
xor
jno
inc
ret
mov
ret
xchg
nop
ret
mov
mov
inc
ret
mov
ret
mov
xchg
ret
ret
mov
ret
cs
jl
xchg
ret
add
xchg
aaa
retw
xchg
push
ret
ret
mov
test
scas
sub
gs
ret
ret
ret
call
xchg
ret
jg
ret
cdq
jns
ret
cmps
dec
inc
ret
cmps
push
ret
test
ins
add
xchg
ret
cmps
xor
add
ret
or
scas
adc
push
ret
mov
xchg
ret
xor
xchg
inc
and
xchg
ret
mov
mov
imul
lods
jge
cmps
ret
xchg
dec
sub
nop
ret
push
je
scas
ret
mov
nop
sub
mov
ret
mov
movs
or
outs
ret
test
scas
ret
mov
ret
stos
push
ret
stos
ret
mov
cmpps
ret
mov
cwde
ret
mov
ret
xchg
sbb
test
ret
ret
nop
inc
inc
adc
dec
cs
ret
mov
ret
mov
ret
mov
push
sbb
ret
mov
add
sub
mov
ret
mov
jno
push
ret
cwde
dec
or
xchg
test
ret
ret
mov
dec
ret
mov
ret
xchg
ret
xchg
push
ret
ret
xchg
ret
xchg
push
ret
add
sub
push
sub
aaa
inc
ret
mov
xchg
ret
mov
ret
mov
ret
add
ret
adc
or
ret
xchg
stos
ret
push
push
ret
cmps
ret
call
ret
mov
mov
sub
adc
xchg
cmp
lahf
ds
ret
nop
ret
mov
ret
mov
xchg
sbb
ret
mov
(bad)
ret
ret
test
inc
ret
movs
ret
cdq
ret
sub
mov
ret
scas
ret
mov
test
cmp
scas
xor
xchg
ret
fwait
ret
ret
mov
mov
ret
mov
and
ret
xchg
pop
jo
ret
mov
xchg
ret
xchg
ret
mov
ret
scas
ret
mov
ret
mov
cmp
pop
push
ret
xchg
nop
ret
stos
ret
test
pop
dec
ret
mov
ret
mov
dec
pop
js
mov
and
and
mov
cdq
push
ins
ret
mov
add
mov
mov
ret
mov
and
mov
cmp
ret
cwde
ret
movs
ret
mov
scas
inc
ret
jg
mov
xchg
ret
mov
cmps
push
push
xor
ret
ret
pop
ret
sahf
ret
xchg
ret
ret
ret
test
stos
imul
cmp
sahf
push
ret
and
fwait
ret
add
cmps
ret
mov
scas
ret
mov
pushf
xor
nop
ret
adc
sbb
cdq
ret
lahf
ret
mov
mov
jnp
ret
add
mov
scas
ret
mov
ret
adc
cmps
ret
or
lahf
jp
inc
aaa
ret
mov
ret
cmps
inc
pusha
and
ret
ret
ret
ret
mov
pop
ret
ret
ret
scas
ret
xchg
outs
inc
jl
mov
ret
add
push
ret
pop
ret
stos
popa
ret
stos
ret
mov
push
ret
pop
mov
mov
ret
push
ret
xchg
sbb
test
ret
mov
scas
ret
xchg
ret
mov
ret
ret
mov
mov
ret
and
ret
sub
ret
mov
cmp
mov
xchg
inc
inc
ret
mov
lods
ret
mov
jnp
ret
xchg
ret
mov
lahf
sub
xchg
ret
ret
cmps
ret
ret
fwait
pop
ret
push
and
mov
dec
ret
js
ret
test
daa
aas
ret
movs
ret
mov
mov
ret
add
nop
aas
adc
mov
sub
mov
xchg
imul
mov
outs
ret
inc
ret
sahf
cmp
ret
ret
cmps
ja
mov
push
ret
lods
sbb
lods
ret
xchg
inc
ret
mov
mov
es
test
ret
xchg
ret
mov
ret
test
ret
mov
pop
ret
mov
inc
and
jg
movs
push
ret
lea
xchg
ret
lea
ret
mov
call
ret
pop
ret
mov
xor
movntps
mov
ret
xchg
ret
ret
mov
ret
mov
movs
cmp
mov
ret
test
sbb
ret
mov
mov
ret
imul
xor
xchg
ret
cmps
pop
ret
and
ret
xchg
cmp
mov
ret
jp
ret
stos
ret
dec
xor
mov
stos
ret
stos
js
popf
imul
or
mov
and
jge
test
imul
sub
pop
xchg
ret
pop
imul
ret
jbe
scas
cs
ret
xchg
xchg
ret
lods
add
xchg
ret
mov
movnti
sub
push
sub
inc
add
popf
adc
push
ret
sahf
ret
mov
xchg
ss
mov
aaa
add
xchg
inc
ds
ret
xchg
ret
inc
ret
ret
ret
ret
xor
ret
cmp
mov
cmps
ret
stos
push
ret
mov
cmps
cmp
call
mov
dec
ret
ret
mov
xchg
adc
xchg
xor
mov
xchg
mov
jp
test
movs
and
ret
mov
ret
add
ret
test
pop
jge
ret
movs
add
scas
ret
retw
adc
cs
mov
xor
pushf
push
ret
mov
mov
lods
ret
popa
or
mov
mov
adc
dec
js
mov
ret
xchg
xchg
(bad)
xor
pop
sub
xchg
mov
mov
mov
imul
xor
pusha
gs
xchg
ret
movs
inc
ins
dec
jns
mov
ret
add
es
pop
ret
stos
ret
mov
lahf
ret
mov
mov
or
ret
xchg
ret
scas
dec
ret
sub
xchg
ret
xchg
ret
mov
cmp
xor
mov
dec
push
ret
ret
mov
xchg
push
mov
sahf
ret
movs
jns
ret
fwait
ret
sbb
push
pusha
xor
and
ret
mov
mov
ret
mov
test
mov
es
mov
ret
ret
ret
cdq
adc
mov
ret
mov
pop
pop
ret
ret
mov
mov
dec
pop
ret
sub
ret
movnti
mov
xchg
jns
cdq
ret
mov
or
push
push
ret
ret
mov
ret
scas
es
(bad)
and
mov
jl
sbb
ret
add
ret
movs
ret
adc
addr16
xor
mov
nop
dec
ret
mov
outs
and
call
xchg
addr16
fwait
inc
ret
mov
ret
test
ret
ret
ret
popf
ret
ret
ret
pushf
ret
test
mov
mov
mov
scas
ret
mov
ret
mov
mov
push
xor
ret
lods
pop
ret
ret
mov
(bad)
ret
add
ret
inc
ret
movs
inc
sub
mov
xchg
push
push
inc
ret
mov
ret
xchg
or
mov
test
call
mov
ret
cwde
adc
dec
imul
ret
mov
mov
ret
sahf
ret
fwait
push
sbb
mov
sbb
ret
ret
ret
and
and
xor
mov
mov
push
jle
mov
stos
sbb
test
xchg
ret
ret
push
add
test
sahf
and
movs
and
ret
stos
ret
push
push
ret
stos
pop
ret
mov
ret
pop
mov
ret
add
ret
mov
ret
ret
ret
popf
gs
mov
ret
or
mov
dec
ret
mov
sbb
mov
jo
test
mov
cmps
ret
adc
mov
ret
mov
ret
add
aaa
ret
pop
mov
pop
pop
aaa
ret
stos
fs
test
test
pop
mov
pop
ret
mov
scas
add
xor
add
pop
inc
ret
ret
movs
ret
ret
mov
mov
jo
cwde
ret
ret
xor
movs
sbb
inc
ret
mov
mov
dec
ret
jle
ret
ret
mov
push
ret
mov
ret
movnti
ret
ret
sub
xchg
adc
mov
xchg
es
mov
ret
mov
ret
test
mov
mov
ret
ds
mov
cmp
mov
ret
mov
stos
ret
mov
ret
dec
push
(bad)
sub
xchg
add
ret
mov
(bad)
push
outs
sbb
xchg
adc
call
ret
xchg
inc
ret
scas
jnp
mov
mov
test
lahf
ret
popf
push
ret
ret
xchg
ins
sub
je
xchg
ret
scas
jle
test
xchg
ret
ret
ret
xchg
inc
jbe
pop
ret
mov
ret
xchg
ret
ret
ret
jl
scas
ret
mov
xchg
inc
sub
jb
push
je
ret
push
ret
mov
cmpps
fs
mov
mov
ret
xchg
mov
mov
dec
ret
mov
add
inc
ret
ret
test
lods
or
xchg
ret
sub
xchg
ret
mov
push
mov
pop
ret
sbb
mov
scas
sbb
ja
fwait
dec
ret
xchg
ret
mov
xchg
ret
add
sbb
(bad)
ret
mov
xchg
ret
xchg
push
ret
cmpps
ret
(bad)
ret
pop
ret
mov
mov
gs
dec
ret
test
ret
xor
push
ret
cmps
ret
mov
and
cwde
imul
jo
xchg
mov
inc
add
je
mov
xchg
ret
mov
ret
ret
ret
mov
scas
push
ret
mov
ret
movs
ret
ret
mov
mov
add
ret
mov
push
ret
mov
xchg
ins
push
xor
ins
aas
dec
push
xor
ret
mov
movs
ret
pop
mov
cmp
mov
scas
outs
ret
ret
mov
mov
ret
das
ret
xchg
push
ds
xchg
and
mov
dec
ret
ret
cwde
push
aas
aaa
pop
ret
xchg
jbe
ret
mov
ret
xor
cdq
ret
ret
mov
mov
cmps
pop
ret
mov
ret
lea
ret
mov
mov
ret
xchg
ret
cwde
jg
ret
mov
pop
ret
mov
mov
mov
mov
ret
movs
ret
mov
ret
mov
push
ret
cdq
sbb
add
push
jae
mov
fs
sub
sub
mov
mov
and
mov
mov
ret
mov
ret
test
ret
call
ret
jge
and
aaa
jb
ret
movs
or
push
ret
cmps
jno
mov
jnp
test
ret
test
lea
pop
ret
xchg
fwait
ret
cmp
ret
fwait
pop
ret
add
ret
ret
mov
mov
sbb
add
ret
mov
xchg
and
xchg
ret
ret
scas
ret
test
test
ret
mov
ret
cmps
ret
ret
xchg
ret
jl
xchg
ret
mov
ja
movlps
mov
push
ret
test
lods
push
ret
ret
xchg
ret
call
xor
jl
ret
cmps
ret
mov
ret
mov
or
ret
xchg
xchg
ret
test
ret
mov
ret
ret
scas
outs
adc
test
xchg
ret
stos
ret
stos
sub
xchg
ret
xchg
push
ret
mov
push
or
mov
mov
or
cdq
ret
add
ret
ret
mov
cmp
xchg
ret
mov
popf
sbb
nop
ret
mov
ret
test
mov
mov
mov
add
push
push
ret
mov
cmps
ret
inc
ret
pop
ret
mov
pop
ret
ret
fwait
ret
test
test
push
sub
stos
pop
dec
push
mov
mov
cmp
xor
and
pusha
push
sub
lods
ret
mov
cmps
sub
cdq
or
jbe
xchg
xchg
test
pop
popf
ret
xchg
ret
(bad)
ret
mov
ja
lods
ret
ret
ret
add
ret
test
pusha
outs
ret
ret
sub
mov
jo
cmp
mov
sub
test
mov
sbb
nop
aaa
ret
xchg
inc
ja
ret
test
ret
mov
xchg
ret
cs
cwde
sbb
addr16
lods
dec
ret
pushf
ret
mov
ret
test
ret
mov
xchg
addr16
mov
or
ret
add
jnp
ret
mov
ret
ret
mov
add
scas
ret
pop
xchg
ret
mov
or
call
inc
or
ret
mov
inc
cmp
sub
mov
mov
add
ret
ret
mov
ret
jp
movs
adc
ret
popf
ret
mov
lahf
sub
call
dec
ret
sub
mov
ret
mov
(bad)
ret
ret
ret
mov
xchg
ret
mov
mov
ret
mov
ret
fwait
inc
ret
xchg
inc
ret
mov
ret
movs
ins
and
sbb
add
jno
jnp
mov
xchg
ret
call
popf
ret
(bad)
ret
mov
mov
mov
mov
xchg
dec
ret
mov
xor
mov
sbb
pop
ret
mov
ret
ret
ret
add
pop
ret
xchg
sub
mov
test
das
ret
ret
pop
pushf
ret
dec
jg
mov
jle
cmp
ret
adc
ret
ret
mov
mov
ret
mov
or
lods
ret
mov
ret
ret
xor
ret
test
sahf
push
ret
movs
ret
xchg
mov
ret
mov
jl
test
movs
add
mov
inc
ret
scas
ret
mov
ret
ret
stos
ret
ret
xchg
ret
nop
ret
xchg
push
ret
ret
xchg
pop
cmp
ret
jno
ret
test
mov
lods
ret
xchg
mov
mov
add
ret
pushf
jno
mov
sahf
push
ss
xchg
ret
mov
popf
jnp
ret
or
jl
mov
ret
mov
adc
ret
mov
dec
ret
adc
mov
xchg
jle
(bad)
jge
or
sbb
movs
ret
test
ret
xchg
ret
xchg
ret
xchg
mov
jbe
ret
push
ret
mov
popa
jl
mov
mov
ret
test
ret
mov
xchg
ret
sahf
ret
mov
ret
movs
dec
outs
sbb
sbb
cmp
mov
ret
mov
cmp
xchg
cmp
sub
dec
outs
ret
fwait
ret
mov
push
ret
mov
pushf
adc
movs
ret
xchg
ret
pop
pop
ret
mov
stos
ret
mov
ret
add
gs
mov
push
ret
cwde
ret
pop
mov
ret
add
ret
movs
imul
cmp
adc
ret
lods
ret
test
cmp
mov
ret
mov
(bad)
pop
or
ret
pop
xchg
ret
mov
mov
pop
ret
pop
adc
add
ret
mov
mov
ret
mov
es
ret
test
xor
mov
xchg
xchg
mov
test
inc
je
call
ret
ret
ret
mov
ret
mov
pop
ret
or
mov
movs
ret
mov
ret
mov
lahf
arpl
pop
push
jne
mov
mov
mov
ret
xchg
ret
mov
mov
ret
sub
lea
mov
jg
fwait
ret
mov
movs
ret
pop
ret
mov
sub
cmps
ret
mov
sub
ret
and
ret
pop
mov
ret
ja
xchg
ret
mov
pop
mov
ret
xchg
and
ret
xor
xchg
sbb
xchg
addr16
xor
mov
ret
mov
mov
ret
sub
ret
add
add
mov
test
nop
ret
mov
imul
jo
push
aaa
ret
cmps
xor
scas
ret
mov
call
inc
outs
push
jnp
add
ret
cmp
ret
addr16
mov
xor
add
ret
inc
ret
movs
ret
ret
mov
ret
cwde
cs
sbb
sbb
sbb
(bad)
ret
ret
mov
mov
test
mov
ret
cmpps
je
push
mov
xchg
je
mov
ret
ret
mov
mov
ds
inc
aaa
or
mov
adc
pop
ret
cmps
ret
xchg
mov
push
ret
xchg
ret
ret
xor
mov
ret
pop
add
cmpps
push
ret
ret
movs
cs
sbb
or
cdq
ret
mov
mov
mov
xor
test
push
ret
ret
mov
ret
mov
ret
mov
ret
(bad)
ret
lods
ret
mov
mov
xchg
ret
mov
or
aas
ret
xchg
ret
lods
jle
lods
ret
fwait
ret
scas
ret
pushf
ja
ret
xchg
ret
mov
or
mov
mov
add
ret
xchg
ret
mov
and
ret
xchg
push
mov
mov
mov
pushf
ret
popf
ret
lea
ret
stos
sbb
mov
ret
ret
mov
mov
ins
jnp
mov
mov
cdq
ret
sbb
add
xchg
cmps
ret
mov
stos
ret
xchg
inc
ret
pop
mov
ret
mov
ret
scas
ret
mov
nop
ret
mov
ret
movs
jo
ret
mov
ret
xchg
cmps
xor
push
and
ret
xchg
xor
ret
or
mov
ret
je
je
mov
add
ret
ret
fwait
inc
ret
stos
cmp
fwait
sbb
retw
xchg
ret
mov
test
ret
ret
cmps
adc
push
xor
or
or
add
fwait
ret
sahf
pop
ret
mov
ret
test
add
test
adc
push
adc
ret
mov
mov
test
test
cdq
cmp
ret
scas
ret
mov
dec
ret
mov
adc
outs
jbe
ret
stos
ins
ret
mov
lea
ret
mov
xchg
adc
mov
xchg
ret
mov
and
ret
popf
sub
xchg
mov
jle
movs
push
or
cmp
mov
push
ret
nop
inc
ret
cmp
pop
ret
ret
ret
cdq
push
ret
cmps
push
inc
sub
mov
test
add
ret
mov
sbb
pop
ja
xchg
ja
fwait
imul
cdq
ret
fwait
imul
inc
js
push
dec
sbb
ret
cmp
mov
ret
mov
and
jae
xchg
ret
mov
ins
or
jae
ret
sbb
pop
je
ret
call
ret
ret
mov
mov
nop
ret
ret
mov
cmps
je
mov
ret
mov
aaa
ret
scas
ds
adc
test
ret
xchg
and
cwde
ret
sbb
addr16
movs
ret
(bad)
dec
inc
ret
cmps
maxps
push
sub
ret
cmps
ret
xor
adc
inc
ret
test
xchg
xor
mov
ret
mov
cdq
ret
cdq
ret
test
dec
pop
ret
xchg
sub
pop
mov
ret
mov
push
ret
sahf
ret
lods
addr16
add
nop
gs
movs
or
adc
imul
inc
push
fs
fwait
jne
test
xchg
ret
ret
lods
ret
or
lea
ret
stos
ret
mov
test
xchg
call
push
ret
cs
dec
and
mov
ret
adc
xchg
ret
stos
ret
push
push
ret
scas
ins
push
ret
mov
popf
xor
ret
stos
jp
xor
inc
ret
ds
sahf
sub
movs
or
mov
cwde
add
ret
call
cmp
(bad)
mov
popf
ret
nop
add
mov
ret
pop
lods
ret
or
ret
movs
cmp
add
ret
add
movs
ret
nop
ret
mov
movs
ret
or
fwait
ret
mov
ret
ret
xchg
ret
mov
or
jne
ret
scas
push
ret
mov
jp
ret
stos
xor
xchg
ret
stos
sub
mov
mov
ret
test
pop
cdq
ret
mov
mov
mov
ret
xchg
ret
fwait
ja
push
ret
xchg
ret
push
ret
mov
mov
mov
ret
mov
ins
jae
ret
movs
ret
ret
mov
ret
scas
ret
ret
xchg
ret
ret
pop
add
add
xchg
or
mov
xchg
jo
cwde
pop
outs
add
xor
ret
add
xor
xchg
ret
xchg
sbb
daa
ret
and
(bad)
ret
call
mov
scas
ret
ret
ret
mov
fs
mov
ret
(bad)
push
ret
xor
inc
xor
dec
ret
push
inc
ret
sahf
ret
scas
ret
ret
xchg
ret
sahf
ret
ret
nop
jle
ret
stos
js
mov
mov
pop
ret
xchg
ret
push
and
movs
push
ret
popa
ret
mov
ret
ret
or
mov
xchg
ret
mov
cmp
jno
ret
mov
ret
ret
mov
sbb
dec
jnp
push
add
mov
xchg
ret
mov
scas
ret
test
ret
xchg
mov
xor
ret
cmps
ss
scas
ret
add
mov
ret
lahf
ret
lods
pop
pop
ret
mov
ret
movs
cmp
imul
sbb
add
pop
outs
gs
outs
fs
add
popa
and
and
fs
jae
ins
jae
outs
jb
imul
gs
cs
outs
jb
add
fs
ins
cs
ins
add
jb
gs
xor
cs
ins
add
mov
in
xchg
cmps
out
xchg
lahf
out
mov
jecxz
cdq
call
add
dec
outs
fs
gs
mov
out
sahf
out
sub
mov
test
in
cdq
add
je
outs
outs
popa
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
jecxz
lahf
loopne
mov
lods
mov
lods
xchg
mov
loope
test
movs
xchg
add
mov
out
mov
out
xchg
call
mov
lods
mov
dec
gs
outs
fs
popa
jae
add
ins
bound
dec
outs
outs
add
je
dec
outs
fs
add
fs
add
je
dec
gs
fs
je
push
outs
imul
push
gs
ins
jbe
push
imul
add
je
dec
outs
addr16
add
je
add
je
outs
outs
jbe
jb
gs
push
outs
push
dec
outs
je
xor
inc
gs
jne
jb
outs
je
gs
outs
add
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
jns
gs
inc
gs
je
imul
dec
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
push
fs
gs
dec
popa
outs
popa
gs
jae
gs
cs
arpl
imul
je
addr16
jo
jns
dec
inc
xor
popa
je
add
jae
inc
ins
outs
jb
je
ins
add
ins
jo
je
dec
popa
jae
add
ins
ins
gs
imul
imul
popa
je
inc
arpl
jo
outs
jb
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jns
je
push
je
gs
ins
add
jns
je
push
je
gs
ins
dec
outs
fs
arpl
outs
jb
inc
jns
popa
ins
imul
add
jae
gs
cs
gs
arpl
outs
cs
ins
imul
gs
jb
outs
outs
add
gs
fs
outs
outs
add
inc
outs
gs
je
jb
inc
outs
outs
jae
jb
arpl
dec
outs
outs
add
je
imul
ins
dec
popa
outs
fs
add
je
inc
arpl
imul
add
je
dec
jae
jb
popa
jns
addr16
push
popa
jb
ins
gs
jb
jns
add
je
dec
jae
outs
je
jb
popa
arpl
push
gs
ins
jbe
dec
gs
outs
add
je
popa
jb
ins
gs
jb
add
inc
outs
fs
dec
gs
bound
dec
jo
outs
fs
imul
gs
inc
imul
add
gs
je
inc
gs
gs
je
add
gs
je
add
je
popa
ins
jne
add
je
dec
inc
outs
gs
je
jb
dec
fs
jb
pop
push
add
mov
xchg
sub
xchg
out
(bad)
call
movs
call
add
je
outs
fs
outs
outs
add
je
push
gs
jb
push
jns
add
jb
add
jae
arpl
jae
addr16
inc
push
inc
popa
ins
ins
add
ins
ins
jbe
jb
add
je
dec
jae
je
je
arpl
out
xchg
mov
cmps
lahf
out
xchg
(bad)
cdq
jmp
call
outs
popa
jb
push
gs
fs
push
gs
fs
outs
je
xor
push
gs
fs
jns
gs
inc
jne
data16
inc
ins
outs
arpl
outs
jo
add
imul
ins
add
fs
data16
xchg
mov
scas
mov
lods
and
mov
cmps
sub
test
jae
outs
fs
popa
jb
jae
out
mov
out
mov
xchg
call
loope
mov
call
movs
mov
xchg
call
xchg
pop
dec
imul
and
push
inc
je
jb
bound
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
je
outs
je
arpl
imul
add
inc
jb
popa
je
dec
popa
imul
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
dec
jns
outs
ins
jo
je
jb
dec
imul
pop
dec
outs
fs
jae
dec
jns
inc
outs
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
cdq
scas
out
mov
loope
mov
mov
jmp
loope
lods
add
popa
jb
loope
test
loope
movs
add
xor
loope
mov
add
and
add
and
movs
loope
movs
add
and
movs
loope
test
jmp
lahf
jmp
xchg
xchg
jecxz
xchg
in
popf
mov
add
gs
jns
gs
xchg
mov
mov
out
mov
jecxz
mov
mov
jmp
mov
in
scas
in
test
xchg
int3
movs
jmp
call
mov
xchg
mov
mov
in
mov
add
gs
out
mov
mov
jmp
mov
mov
in
mov
call
mov
mov
test
loope
mov
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
gs
mov
in
cwde
(bad)
jmp
mov
lods
sub
and
mov
mov
add
gs
fs
je
je
arpl
je
imul
popa
jb
gs
outs
jbe
arpl
imul
jo
imul
pop
dec
jae
imul
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
inc
outs
outs
ins
gs
outs
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
gs
scas
cmps
loope
xchg
scas
lods
in
xchg
jmp
mov
cmps
(bad)
in
adc
bound
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
pushf
jmp
mov
jecxz
sub
mov
xchg
jmp
test
loop
test
xchg
mov
add
outs
jne
gs
je
jb
xor
addr16
inc
jne
jb
outs
je
dec
inc
outs
jne
gs
je
jb
dec
outs
jbe
dec
gs
add
outs
jne
gs
bound
xor
inc
gs
outs
jne
gs
je
jb
loope
mov
and
xor
sub
and
and
gs
bound
inc
jne
arpl
add
jne
gs
bound
push
jns
je
ins
cs
imul
arpl
popa
jae
add
and
outs
outs
outs
je
je
outs
outs
add
je
dec
je
ins
add
je
inc
outs
jne
je
loope
mov
loope
mov
loope
mov
loope
mov
loope
mov
xor
sub
and
movs
add
and
xor
adc
mov
add
mov
mov
add
sahf
lods
jecxz
lods
out
mov
loopne
and
popf
jmp
and
xchg
jmp
mov
lods
test
call
mov
ins
xor
dec
imul
pop
dec
outs
fs
jae
jmp
mov
in
mov
mov
jecxz
test
imul
addr16
sub
xor
and
mov
xor
xor
sub
and
sub
je
jb
jae
loope
mov
xor
and
and
and
xor
cmp
outs
gs
outs
gs
je
fs
je
jb
bound
add
ins
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
and
xor
and
mov
scas
mov
mov
jmp
xchg
loop
mov
xchg
mov
loop
xchg
out
test
mov
xchg
mov
adc
mov
loope
mov
movs
lods
loop
mov
mov
in
mov
jmp
mov
mov
out
and
and
lahf
add
scas
mov
mov
mov
stos
mov
in
mov
stos
cmps
call
cwde
out
mov
in
mov
int
in
test
mov
loopne
mov
mov
lods
xchg
out
mov
mov
out
test
mov
mov
jecxz
mov
cdq
mov
scas
xchg
out
mov
out
and
mov
mov
in
nop
jmp
mov
scas
test
nop
(bad)
call
mov
xchg
add
mov
out
xchg
mov
xchg
cwde
jmp
xchg
in
mov
sub
in
mov
jmp
lods
jecxz
mov
mov
loop
(bad)
call
xchg
addr16
inc
gs
jne
je
jmp
mov
test
mov
in
mov
xchg
call
mov
loope
movs
loope
movs
add
and
and
and
and
and
mov
in
popf
jmp
mov
mov
pop
dec
je
ins
add
xor
xor
xor
xor
xor
xor
cwde
mov
mov
jmp
test
jmp
lods
add
mov
fstp
lods
test
pushf
xchg
out
cwde
loop
mov
loope
movs
loope
mov
loope
mov
loope
mov
loope
movs
add
sub
mov
test
mov
mov
mov
stos
loope
xchg
out
xchg
in
mov
stos
call
mov
loope
test
sub
sub
xor
xor
and
and
xchg
mov
in
scas
jmp
scas
call
sahf
xchg
out
mov
mov
out
mov
popf
mov
loope
movs
add
cmps
movs
loopne
mov
nop
mov
(bad)
mov
lahf
call
add
sub
sub
nop
and
mov
xchg
mov
sbb
xchg
loop
stos
add
jb
push
imul
jb
inc
gs
popa
ins
jne
add
jo
add
cmps
mov
mov
xchg
xchg
in
mov
lahf
test
mov
bound
fisubr
xchg
test
popf
mov
out
test
jmp
xchg
mov
fwait
movs
in
mov
in
mov
mov
mov
jmp
mov
add
xchg
xchg
scas
in
mov
mov
fnstcw
jecxz
cdq
in
(bad)
jecxz
xchg
in
lods
lods
jecxz
xchg
in
xchg
mov
pushf
mov
out
and
call
in
xchg
jmp
test
mov
mov
sahf
mov
add
xchg
fbstp
loop
mov
mov
loop
mov
mov
in
mov
out
mov
mov
out
movs
in
popf
jmp
mov
in
(bad)
out
popf
jecxz
nop
out
sub
mov
mov
add
mov
jmp
mov
loope
mov
mov
add
test
loop
mov
mov
call
mov
out
cdq
mov
xchg
mov
xchg
sahf
jmp
mov
cwde
add
mov
loop
mov
mov
jecxz
stos
jmp
or
jecxz
xchg
call
lods
jecxz
scas
jmp
in
xchg
pushf
in
(bad)
jmp
movs
mov
mov
mov
lods
mov
mov
out
popf
sahf
out
popf
loop
(bad)
out
mov
add
mov
call
xchg
mov
out
mov
sahf
scas
add
mov
out
mov
jmp
mov
add
test
aad
call
mov
mov
jmp
or
in
xchg
out
cmps
jmp
xchg
jecxz
xchg
loope
mov
ret
xchg
add
xchg
out
mov
add
test
jmp
cdq
jecxz
cmps
out
mov
out
mov
out
mov
xchg
stos
loope
mov
xchg
test
mov
xchg
test
jmp
nop
xchg
mov
mov
jmp
test
call
(bad)
out
mov
jmp
mov
xchg
sub
test
out
mov
mov
jmp
test
scas
mov
xchg
loopne
mov
mov
out
xchg
cwde
in
mov
mov
xlat
mov
in
cdq
in
mov
nop
xchg
loope
scas
jmp
mov
je
arpl
je
gs
gs
je
add
or
mov
jmp
nop
leave
mov
mov
out
mov
dec
outs
jbe
imul
stos
movs
jecxz
xchg
in
mov
mov
ret
mov
scas
in
lods
jmp
lods
mov
movs
mov
mov
jmp
xchg
out
mov
out
mov
out
lods
call
popf
loop
pushf
add
or
pushf
test
stos
cdq
out
xchg
xchg
loop
cmps
jmp
lea
jecxz
sub
mov
fwait
mov
mov
call
xchg
in
xchg
add
pushf
mov
mov
in
xchg
xchg
mov
add
or
or
fwait
call
test
xchg
mov
cdq
mov
jmp
mov
pushf
mov
scas
movs
jmp
mov
mov
xchg
jmp
mov
mov
in
lea
and
jmp
(bad)
mov
mov
in
sahf
mov
(bad)
sahf
add
scas
nop
call
mov
mov
and
test
call
mov
pushf
mov
scas
mov
mov
add
or
mov
jmp
(bad)
loop
mov
mov
in
cwde
add
movs
mov
lea
mov
out
pushf
xchg
jmp
xchg
add
sahf
xchg
in
test
out
mov
out
xchg
jecxz
mov
and
loope
xchg
out
mov
lahf
mov
lods
scas
call
mov
loop
popf
jmp
xchg
out
mov
jmp
mov
test
test
call
sub
cdq
jmp
stos
call
test
mov
add
or
mov
jmp
nop
cmps
loope
and
movs
out
mov
out
test
xchg
(bad)
loop
test
mov
out
mov
in
pop
or
mov
loop
(bad)
loopne
nop
out
test
mov
add
or
mov
loop
lods
loope
xchg
or
movs
out
xchg
mov
xchg
mov
jecxz
xchg
lock
mov
loope
mov
mov
call
cdq
test
lahf
xchg
loope
xchg
out
xchg
(bad)
jecxz
mov
call
mov
popf
nop
jmp
vpshad
mov
call
xchg
add
cmps
xchg
mov
out
sahf
movs
jecxz
mov
mov
add
xchg
sub
mov
cmps
loopne
mov
cmp
stos
add
or
mov
jmp
xchg
in
mov
stos
lahf
out
mov
mov
in
fwait
in
mov
sahf
xchg
out
scas
jecxz
and
movs
jmp
lods
add
mov
mov
mov
out
mov
add
or
mov
out
mov
stos
mov
mov
in
cmp
mov
jmp
mov
mov
mov
jmp
xchg
mov
out
mov
jmp
xchg
stos
add
or
mov
cwde
mov
mov
nop
in
mov
loopne
mov
xchg
mov
cdq
xchg
adc
mov
out
xchg
sahf
test
lods
xchg
scas
mov
mov
and
in
xchg
(bad)
xchg
out
scas
mov
mov
xchg
mov
out
call
sahf
loop
test
mov
out
mov
in
cmps
mov
cmps
(bad)
jmp
mov
loop
mov
mov
jmp
xchg
scas
jmp
cmps
and
(bad)
in
popf
mov
in
mov
xchg
in
mov
mov
jmp
cmps
mov
fwait
mov
mov
jecxz
(bad)
jmp
lea
mov
call
cdq
out
stos
call
mov
in
pushf
loop
cmps
loop
mov
mov
out
mov
xchg
loopne
xchg
call
fwait
in
mov
mov
out
xchg
sahf
add
or
xchg
mov
out
popf
jmp
(bad)
add
xchg
mov
sahf
(bad)
in
test
mov
jmp
mov
add
movs
mov
test
in
(bad)
out
mov
jmp
mov
out
mov
jmp
mov
xchg
mov
and
xchg
add
mov
out
nop
in
fwait
in
xchg
call
mov
test
in
xchg
mov
lods
(bad)
jecxz
mov
xchg
mov
mov
out
xchg
add
or
mov
in
mov
mov
out
test
mov
add
cmps
jmp
mov
out
scas
out
test
sub
vfrczpd
mov
mov
and
call
xchg
out
mov
out
mov
mov
jmp
xor
mov
xchg
scas
loop
test
out
cmps
and
mov
stos
mov
stos
(bad)
out
test
mov
iret
mov
test
xchg
out
mov
jmp
fwait
mov
loope
and
cdq
call
mov
mov
loop
mov
scas
mov
jmp
mov
in
pushf
xchg
call
mov
add
or
mov
out
mov
in
lods
jmp
test
xchg
scas
add
test
loope
movs
in
mov
jmp
xchg
jmp
mov
loope
lods
jmp
mov
mov
call
or
mov
out
mov
mov
in
mov
pushf
and
(bad)
in
mov
push
in
mov
in
mov
mov
mov
add
test
mov
out
sub
(bad)
loop
cdq
add
or
cdq
lahf
out
movs
jmp
mov
pushf
xchg
loope
cmps
loopne
call
add
mov
out
sbb
lahf
out
mov
jmp
out
xchg
mov
mov
out
mov
out
mov
adc
call
mov
mov
out
mov
call
xchg
jmp
lods
jmp
mov
scas
xchg
loopne
(bad)
in
xchg
add
mov
loopne
(bad)
loop
mov
mov
out
mov
test
or
out
cmps
jmp
lahf
out
mov
jmp
and
mov
mov
xchg
mov
mov
mov
jmp
mov
mov
add
or
mov
call
mov
mov
xor
xchg
mov
scas
stos
loope
lods
jmp
(bad)
mov
test
mov
jmp
mov
in
xchg
mov
popf
mov
loope
mov
mov
jecxz
mov
mov
mov
out
lahf
add
cmps
scas
loope
sub
xchg
out
movs
jmp
mov
scas
test
cdq
add
or
xchg
mov
nop
call
jmp
mov
add
nop
mov
mov
call
movs
loop
mov
nop
lahf
add
add
mov
cwde
(bad)
in
mov
mov
loop
sub
mov
scas
test
cmps
mov
lods
and
add
movs
mov
lea
lods
in
cmps
jmp
in
lea
xchg
xchg
jmp
test
or
out
mov
jmp
mov
sbb
mov
mov
out
sahf
out
mov
ret
stos
in
mov
loope
mov
nop
xchg
add
xchg
xchg
jmp
scas
loope
mov
cwde
mov
(bad)
mov
mov
jmp
mov
sub
mov
mov
add
or
mov
out
xchg
in
mov
mov
mov
add
mov
out
xchg
out
xchg
mov
mov
nop
xchg
jecxz
movs
add
xchg
call
jmp
nop
out
mov
xchg
call
mov
mov
in
popf
out
mov
jmp
or
xchg
xchg
in
xchg
loop
stos
in
xchg
jecxz
mov
mov
add
mov
in
mov
cmps
and
lods
out
nop
jmp
jmp
cwde
out
mov
movs
mov
xchg
movs
loope
mov
adc
loope
xchg
in
mov
out
sub
mov
mov
jmp
mov
mov
out
xchg
in
scas
xchg
xchg
mov
mov
jmp
mov
jmp
mov
pushf
cwde
out
xchg
loopne
stos
loopne
(bad)
in
xchg
mov
nop
lods
jecxz
mov
mov
in
test
lods
add
mov
in
mov
fwait
sub
mov
mov
add
mov
loope
mov
mov
jmp
mov
test
jecxz
lods
out
mov
mov
jecxz
mov
out
mov
mov
out
mov
mov
jmp
mov
movs
mov
icebp
xchg
mov
loope
mov
sbb
mov
cmps
xchg
jmp
mov
scas
scas
jmp
mov
scas
mov
out
mov
jecxz
scas
jmp
pushf
in
mov
mov
add
xchg
mov
mov
call
xchg
out
xchg
out
mov
movs
xchg
mov
jmp
mov
mov
mov
movs
xchg
out
mov
loopne
test
stos
movs
out
mov
lods
mov
loope
lods
loope
mov
xchg
mov
movs
sub
test
or
out
movs
scas
loope
xchg
jecxz
mov
mov
jecxz
xchg
in
mov
jmp
mov
sahf
popf
call
lahf
out
mov
add
movs
mov
test
call
mov
test
call
mov
or
out
xchg
cwde
in
scas
in
cdq
in
mov
sbb
mov
lods
mov
mov
in
mov
call
mov
test
mov
in
mov
mov
loop
mov
sahf
movs
call
sub
xchg
loop
(bad)
out
pushf
add
xchg
jmp
mov
mov
mov
add
lods
test
mov
stos
loopne
cmps
in
mov
out
xchg
add
or
test
mov
jmp
xchg
scas
call
lods
mov
test
out
mov
mov
out
mov
add
sub
loope
mov
scas
mov
mov
mov
loope
mov
scas
xchg
loop
movs
loope
mov
lods
(bad)
in
mov
or
loop
fwait
out
test
mov
loope
mov
mov
in
mov
mov
xlat
stos
in
cdq
out
mov
add
mov
out
mov
in
cmps
mov
movs
xchg
out
mov
add
mov
in
fwait
and
mov
sahf
mov
mov
out
mov
jmp
mov
mov
jmp
or
out
mov
jecxz
mov
adc
add
mov
lahf
and
and
mov
mov
cmps
mov
call
test
scas
mov
popf
xchg
jmp
mov
add
lea
mov
mov
loope
xchg
call
or
mov
loope
nop
in
mov
movs
xchg
loope
mov
mov
out
mov
out
cmps
mov
xchg
cmps
in
xchg
add
mov
jmp
lods
out
popf
(bad)
in
(bad)
fwait
jecxz
cmps
jecxz
mov
xchg
xchg
add
mov
out
xchg
jmp
scas
out
mov
jecxz
mov
out
lods
sahf
jecxz
test
xchg
jmp
test
pushf
scas
jmp
mov
or
rcr
mov
call
mov
mov
add
or
mov
out
movs
test
xchg
sahf
loope
scas
out
sbb
add
cmps
movs
loopne
mov
movs
mov
popf
mov
xchg
xchg
jecxz
mov
mov
out
mov
jmp
mov
call
scas
out
xchg
loopne
xchg
in
mov
loop
mov
mov
or
jmp
mov
xchg
lahf
jmp
stos
loope
lods
aam
out
xchg
scas
add
mov
out
test
lahf
xchg
in
sbb
add
xchg
movs
in
mov
mov
movs
cmps
jmp
mov
out
xchg
mov
mov
stos
lods
call
xchg
pushf
mov
adc
out
cmps
out
mov
mov
mov
jmp
adc
in
lods
cmps
in
call
nop
(bad)
mov
xchg
stos
in
pushf
loop
lods
add
mov
in
mov
mov
out
(bad)
out
movs
add
mov
mov
add
mov
call
xchg
lods
mov
movs
mov
test
in
and
add
mov
out
xchg
movs
out
mov
jmp
mov
test
jmp
mov
loop
mov
xchg
mov
mov
mov
or
stos
mov
add
cdq
out
movs
cdq
out
mov
lahf
scas
jmp
cmps
jmp
mov
out
cmps
in
cwde
add
pushf
mov
scas
xchg
out
mov
mov
loop
scas
in
xchg
xchg
out
call
lods
lahf
in
or
lods
out
xchg
mov
adc
out
mov
mov
lods
mov
mov
jmp
pushf
add
lods
movs
jmp
mov
mov
or
xchg
mov
pushf
mov
xchg
(bad)
ficomp
mov
add
or
scas
popf
jmp
mov
mov
hlt
mov
sub
nop
in
xchg
xchg
xchg
out
xchg
(bad)
in
scas
in
sbb
lods
xchg
out
mov
movs
mov
mov
loop
xchg
adc
out
scas
xchg
xchg
mov
xchg
xchg
out
mov
out
stos
cwde
fistp
out
mov
in
cdq
mov
movs
mov
mov
add
xchg
and
xchg
jmp
xchg
in
lea
mov
add
or
xchg
mov
xchg
lods
call
xchg
mov
lea
jmp
mov
fsub
mov
out
mov
mov
out
mov
out
sub
mov
mov
call
cmps
jmp
mov
mov
sahf
stos
in
mov
leave
mov
movs
mov
mov
in
and
cmps
jmp
xchg
out
pushf
add
mov
mov
out
mov
lahf
mov
xchg
xchg
add
or
mov
in
mov
xchg
and
mov
mov
out
sahf
add
sahf
mov
scas
mov
lea
mov
jecxz
xchg
add
mov
jmp
sub
mov
mov
retf
mov
add
or
mov
lods
mov
nop
mov
stos
mov
xchg
sub
mov
call
mov
cmps
scas
out
cmps
cdq
fst
cwde
xchg
add
lods
test
mov
in
sahf
cdq
jmp
mov
lods
movs
loopne
xchg
jmp
or
mov
in
mov
mov
in
adc
add
test
loop
mov
mov
into
mov
pop
xchg
test
loope
mov
sahf
xchg
stos
mov
pushf
cdq
jmp
test
cmps
sub
mov
call
jmp
test
loopne
(bad)
in
mov
mov
out
fwait
call
mov
movs
stos
jmp
sahf
add
or
stos
lahf
loop
test
popf
mov
scas
xchg
out
mov
call
or
mov
mov
out
nop
out
mov
add
mov
loop
xchg
jmp
nop
loop
xchg
mov
leave
mov
mov
out
movs
mov
fwait
mov
xchg
cwde
in
test
lea
loop
mov
(bad)
out
mov
call
mov
loope
xchg
in
(bad)
out
mov
xchg
in
lahf
loopne
call
or
in
scas
call
mov
mov
call
mov
int3
cmps
loop
sub
mov
popf
xchg
jmp
mov
call
cwde
lods
call
call
call
or
xor
out
xchg
and
mov
mov
add
stos
stos
out
movs
mov
mov
cmps
stos
jmp
xchg
jecxz
lahf
add
movs
stos
jecxz
scas
jmp
mov
loop
test
mov
adc
out
and
mov
test
loope
sub
call
add
sahf
in
mov
mov
mov
nop
mov
out
lea
mov
fwait
lahf
in
mov
or
xor
mov
(bad)
sahf
out
test
mov
mov
sahf
pushf
in
sbb
cmps
loop
mov
test
mov
mov
out
mov
jmp
test
mov
mov
in
cdq
pushf
jmp
mov
pushf
mov
cdq
cwde
out
mov
add
stos
mov
mov
out
xchg
cmps
sub
scas
call
xchg
out
lods
mov
mov
out
xchg
out
xchg
test
stos
test
mov
in
cmp
test
xchg
stos
out
test
out
mov
mov
jecxz
test
mov
in
mov
xor
test
(bad)
test
mov
in
xchg
out
mov
adc
jmp
lods
loope
lahf
in
mov
jmp
xchg
mov
loope
mov
xchg
mov
mov
test
mov
out
nop
mov
mov
in
popf
scas
in
mov
add
or
mov
loope
scas
out
test
mov
in
mov
add
xchg
mov
stos
nop
out
test
in
mov
xchg
stos
in
mov
jmp
add
mov
mov
add
or
cmps
mov
mov
out
mov
in
mov
out
adc
test
mov
lahf
test
mov
add
sahf
mov
mov
call
mov
mov
loopne
mov
or
out
mov
out
scas
loopne
and
mov
mov
add
mov
out
nop
out
mov
mov
out
movs
fwait
out
mov
movs
out
mov
out
mov
nop
cmps
in
mov
mov
add
or
mov
jecxz
mov
movs
sub
call
jmp
fwait
scas
out
movs
xchg
call
mov
mov
jmp
xchg
jmp
jmp
mov
jmp
test
or
in
lods
loope
movs
jmp
cmps
out
mov
mov
in
test
add
or
mov
mov
in
and
mov
mov
add
mov
mov
jecxz
scas
loopne
mov
and
mov
in
nop
in
mov
popf
(bad)
in
fwait
xchg
loope
mov
xchg
mov
jmp
xchg
out
cmps
and
mov
lods
movs
loope
(bad)
jmp
or
in
cdq
in
movs
stos
in
sahf
mov
mov
loop
lods
in
mov
mov
scas
loope
pushf
jmp
sub
xchg
jmp
pop
loope
test
mov
jecxz
and
mov
mov
out
test
adc
out
mov
in
mov
mov
out
mov
xchg
mov
out
(bad)
call
test
cdq
mov
mov
in
lods
add
fwait
nop
in
mov
xchg
lahf
jmp
(bad)
in
sbb
or
movs
sahf
jecxz
cmps
loopne
call
cmps
cwde
loop
stos
jmp
xchg
mov
test
xchg
mov
pushf
cwde
in
xchg
in
mov
add
mov
loope
sub
xchg
jmp
mov
xchg
add
or
scas
mov
xchg
mov
mov
call
sub
mov
out
mov
fcom
mov
ficomp
stos
lahf
add
mov
mov
out
mov
movs
xchg
in
xchg
movs
stos
add
or
or
mov
movs
and
mov
lea
out
movs
jecxz
cmps
in
xchg
out
test
out
xchg
cdq
xchg
add
xchg
scas
out
mov
loope
mov
mov
test
ror
or
mov
out
xchg
xchg
loope
and
xchg
sahf
mov
scas
mov
jmp
stos
jecxz
popf
loope
mov
mov
out
mov
mov
jmp
cmps
mov
popf
xchg
mov
mov
adc
jmp
mov
mov
call
xchg
jmp
mov
lods
xchg
jmp
cwde
call
mov
jmp
test
mov
jmp
xchg
mov
in
sbb
jecxz
nop
loop
mov
call
add
or
mov
jmp
test
mov
out
mov
jmp
mov
jmp
cwde
call
lahf
in
mov
nop
mov
mov
nop
in
mov
lods
lahf
out
cdq
out
mov
in
cdq
dec
add
or
xchg
xchg
out
mov
jmp
mov
mov
out
mov
out
mov
mov
loope
pushf
loope
fwait
jmp
loopne
mov
popf
sahf
loope
scas
jmp
stos
call
and
xchg
jmp
test
mov
jecxz
mov
movs
mov
movs
mov
mov
loopne
mov
call
mov
movs
call
loopne
mov
mov
mov
lahf
(bad)
out
and
and
xchg
loope
mov
pushf
lea
adc
jecxz
mov
lahf
and
fwait
in
mov
popf
mov
or
mov
out
mov
out
xchg
in
mov
mov
out
mov
out
mov
mov
nop
xchg
fwait
mov
mov
mov
add
or
mov
out
xchg
fwait
mov
mov
out
mov
loopne
scas
out
mov
in
scas
jmp
sahf
out
and
mov
out
mov
out
xchg
jmp
xchg
mov
stos
sub
mov
call
add
fwait
mov
xchg
sub
test
mov
test
jmp
xchg
scas
in
mov
call
mov
mov
add
or
mov
mov
out
mov
mov
in
mov
lahf
cmps
loope
mov
xchg
scas
loope
stos
in
test
out
fwait
xchg
stos
xchg
loope
popf
call
and
mov
mov
add
or
cwde
mov
lea
popf
mov
mov
add
xchg
mov
xchg
xchg
call
mov
mov
mov
out
cwde
lods
out
and
call
out
call
or
mov
jmp
lahf
loopne
mov
scas
call
add
xchg
sub
nop
loop
mov
mov
jmp
mov
mov
mov
out
mov
loope
mov
test
loopne
mov
lahf
xchg
in
mov
in
scas
xchg
in
fwait
loope
mov
mov
les
in
xchg
mov
mov
in
mov
out
cdq
out
nop
out
fwait
add
mov
mov
out
mov
in
and
or
xchg
mov
cwde
mov
xchg
mov
mov
loope
cwde
in
mov
pushf
jecxz
mov
test
call
mov
xchg
test
scas
mov
jmp
mov
mov
in
mov
mov
out
mov
add
or
mov
out
adc
in
xchg
mov
jecxz
movs
loope
scas
add
mov
loope
mov
mov
loop
xchg
add
mov
out
test
test
xchg
mov
popf
lahf
loope
sub
stos
out
mov
loope
and
xchg
in
xchg
out
add
test
mov
xchg
(bad)
jmp
stos
loope
mov
in
mov
mov
in
lods
out
test
mov
out
cwde
mov
mov
movs
mov
mov
jmp
and
mov
sub
nop
fwait
in
mov
mov
in
mov
popf
add
movs
sub
mov
mov
out
mov
or
loop
xchg
icebp
sub
pushf
and
nop
in
add
mov
call
test
cwde
mov
xchg
(bad)
loop
xchg
jecxz
xchg
jmp
mov
lahf
cmps
loopne
mov
mov
add
or
xchg
mov
lods
cdq
in
xchg
movs
loope
test
mov
out
movs
loopne
mov
jmp
mov
test
loop
xchg
in
mov
test
add
mov
fcom
mov
xchg
mov
add
or
call
cdq
jmp
test
add
mov
loope
mov
mov
out
xchg
lods
out
lods
lahf
jmp
in
xchg
in
stos
rcl
lods
mov
popf
movs
call
movs
add
or
mov
out
mov
mov
loop
(bad)
in
scas
jmp
out
mov
in
xchg
out
mov
mov
mov
loope
stos
out
xchg
in
mov
xchg
xchg
out
movs
stos
in
lods
lods
jmp
lods
stos
out
test
mov
mov
out
mov
add
xchg
mov
mov
out
mov
out
mov
out
mov
fwait
test
out
mov
jmp
mov
in
stos
jmp
mov
or
out
xchg
mov
lahf
and
jecxz
xchg
jmp
sar
mov
mov
out
stos
jmp
test
out
stos
mov
xchg
mov
out
mov
out
mov
loopne
test
mov
out
mov
test
xchg
out
popf
mov
mov
pushf
xchg
xchg
mov
in
cmps
jmp
fwait
jmp
mov
mov
scas
stos
out
cdq
xchg
add
or
mov
loope
mov
xchg
mov
scas
lods
loope
test
jmp
mov
out
call
mov
mov
in
mov
mov
call
sahf
loop
mov
or
in
mov
mov
loop
mov
scas
mov
movs
mov
mov
in
test
out
mov
xchg
mov
scas
mov
xchg
out
cmps
sub
mov
mov
in
cdq
jecxz
mov
xchg
mov
or
out
movs
call
mov
mov
jecxz
cmps
jmp
mov
in
xchg
movs
fwait
loopne
cmps
jmp
call
(bad)
out
lods
jmp
xchg
jecxz
mov
xchg
mov
add
or
xchg
sub
nop
leave
mov
movs
lods
out
mov
jmp
xchg
out
test
add
fwait
mov
mov
leave
mov
cmps
nop
loopne
sub
call
mov
mov
jmp
mov
xchg
cmps
in
xchg
loop
xchg
add
or
xchg
mov
mov
in
mov
loope
mov
fwait
mov
jmp
test
call
movs
loope
lods
add
mov
xor
test
xchg
stos
in
mov
movs
xchg
loope
mov
mov
out
mov
in
xchg
mov
in
mov
mov
jmp
mov
mov
out
mov
in
test
mov
fwait
mov
xchg
mov
sahf
popf
out
stos
scas
out
mov
cwde
xchg
jmp
stos
out
mov
jmp
fwait
cmps
in
mov
loope
mov
mov
jmp
xchg
pop
in
xchg
out
test
scas
fwait
out
mov
jmp
stos
loopne
mov
or
out
mov
mov
test
mov
jmp
out
mov
fmul
mov
xchg
xchg
loopne
mov
out
scas
jmp
cmps
jecxz
mov
nop
cwde
out
mov
jmp
mov
nop
test
or
out
mov
mov
out
mov
loope
test
xchg
mov
call
cmps
out
cwde
loope
mov
mov
in
mov
jmp
sahf
mov
popf
lods
loope
cmps
jmp
mov
mov
out
lods
in
pushf
mov
mov
jmp
mov
mov
add
or
mov
loop
mov
call
lods
in
movs
out
xchg
jecxz
and
scas
in
stos
out
test
stos
cmps
out
mov
mov
mov
mov
loop
mov
scas
xchg
out
lods
and
xchg
add
mov
jmp
mov
mov
out
xchg
adc
out
mov
mov
call
mov
mov
lea
mov
stos
stos
in
scas
in
pushf
and
mov
in
xchg
mov
jmp
mov
in
and
test
or
out
scas
out
lea
lahf
out
mov
mov
in
pushf
xchg
add
fwait
mov
mov
loop
mov
mov
jecxz
mov
mov
xchg
loop
xchg
fidivr
mov
jmp
cwde
add
or
stos
mov
xchg
mov
stos
loopne
mov
lea
call
xchg
loopne
mov
xchg
mov
xchg
mov
test
cmps
loop
mov
stos
in
adc
cwde
jmp
or
mov
mov
in
mov
mov
cdq
nop
add
mov
in
mov
mov
jecxz
sahf
call
pushf
add
xor
scas
out
mov
(bad)
in
xchg
cmps
out
xchg
mov
or
loope
mov
lahf
cmps
out
mov
mov
in
(bad)
in
scas
mov
mov
add
lahf
nop
in
mov
mov
in
(bad)
in
mov
lods
mov
in
test
mov
jmp
xchg
loope
mov
xchg
mov
adc
call
mov
mov
mov
jmp
out
mov
in
xchg
in
sahf
and
mov
mov
in
test
mov
out
xchg
and
mov
mov
jecxz
test
adc
out
mov
test
cdq
jmp
cmps
xchg
jmp
lahf
add
mov
in
mov
out
mov
loop
stos
in
(bad)
out
call
mov
loope
pushf
in
mov
mov
sahf
mov
or
call
mov
scas
mov
mov
jmp
mov
mov
out
test
mov
movs
xchg
jecxz
mov
movs
movs
out
mov
add
cmps
cwde
loop
xchg
mov
out
mov
lahf
cwde
out
sahf
call
jecxz
mov
xchg
xchg
jmp
test
xchg
test
out
mov
mov
call
mov
mov
xchg
call
mov
mov
in
movs
mov
mov
xchg
mov
mov
fsubr
lea
mov
jmp
and
mov
cmps
and
xchg
jmp
mov
loopne
stos
loope
test
mov
call
mov
mov
adc
call
mov
mov
test
(bad)
pushf
loope
mov
out
mov
lods
lods
out
mov
jmp
mov
loope
and
mov
mov
mov
add
or
stos
mov
mov
in
xchg
sahf
out
mov
out
mov
mov
add
xchg
mov
fimul
mov
mov
mov
mov
out
mov
jmp
nop
jmp
stos
add
or
stos
mov
xchg
in
mov
cmps
test
mov
loope
add
or
mov
mov
jmp
jecxz
mov
out
mov
mov
out
nop
xchg
lahf
mov
mov
loope
mov
loop
lahf
loopne
scas
out
xchg
scas
out
lea
lods
xchg
popf
sub
mov
push
jb
arpl
jae
popa
outs
fs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
inc
ins
popa
jae
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
dec
outs
addr16
add
je
jb
dec
outs
addr16
add
push
jne
jb
dec
outs
outs
jb
popa
je
outs
outs
push
jb
arpl
jae
jmp
mov
loop
(bad)
loop
pushf
in
mov
dec
je
gs
outs
outs
jb
popa
je
outs
outs
push
jb
arpl
jae
in
xchg
and
mov
nop
mov
lea
mov
in
add
arpl
ins
outs
jae
dec
popa
outs
fs
gs
mov
mov
jmp
mov
loope
mov
bound
addr16
jb
jae
outs
je
in
and
mov
mov
in
lea
mov
jecxz
mov
jae
jb
dec
jne
jo
je
bound
push
je
imul
gs
add
jbe
jb
outs
ins
outs
je
inc
gs
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
inc
popa
imul
popa
jb
ins
gs
jb
jp
fs
push
push
je
jb
add
je
dec
jae
popa
arpl
jb
jne
fs
mov
out
xchg
call
test
sub
mov
addr16
dec
jae
ins
imul
pop
inc
jne
jb
outs
je
push
add
gs
inc
bound
addr16
push
jns
je
ins
cs
imul
imul
pop
dec
jae
je
popa
arpl
add
dec
outs
addr16
loop
mov
call
mov
mov
retf
je
jb
popa
fs
nop
mov
mov
jmp
xchg
xchg
mov
loope
mov
(bad)
xchg
out
mov
pushf
(bad)
in
mov
or
fs
jae
add
imul
gs
jb
je
arpl
jo
ins
dec
ins
fs
jb
je
arpl
imul
jb
je
arpl
gs
inc
jne
ins
jns
jne
ins
imul
ins
add
pop
dec
outs
gs
popa
ins
imul
dec
dec
push
push
inc
dec
inc
inc
add
je
je
add
outs
imul
outs
ins
popa
outs
popa
addr16
gs
outs
jb
push
je
gs
ins
add
ins
gs
arpl
jae
add
imul
gs
imul
push
dec
outs
je
xor
push
gs
fs
dec
outs
je
add
je
push
outs
jae
je
outs
outs
add
popa
fs
jns
add
je
push
outs
jae
je
outs
outs
add
popa
fs
dec
outs
je
xor
push
outs
push
dec
outs
je
xor
out
movs
jmp
mov
in
mov
mov
add
inc
xor
dec
inc
xor
mov
add
pushf
in
adc
add
data16
add
add
mov
loopne
sub
mov
mov
loop
test
out
mov
out
cwde
in
xchg
(bad)
call
(bad)
in
test
je
xor
out
mov
lahf
xchg
mov
pushf
mov
mov
loop
xchg
inc
outs
outs
data16
gs
jns
je
jb
bound
add
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
je
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
imul
jne
gs
scas
mov
movs
xchg
call
stos
in
test
lods
test
out
xchg
mov
mov
out
vpshad
mov
loope
test
xchg
lods
add
scas
lods
in
cdq
in
xchg
loope
mov
test
mov
mov
xchg
xchg
out
mov
movs
fwait
out
sahf
mov
mov
xchg
in
mov
in
mov
scas
sub
mov
mov
out
mov
jecxz
xchg
jecxz
cmps
loope
mov
mov
jecxz
test
int3
mov
mov
loop
mov
popf
test
mov
fwait
xchg
in
pushf
in
xchg
cwde
loope
lahf
out
mov
add
add
xlat
pushf
les
std
push
cdq
ds
add
add
push
add
inc
add
inc
add
dec
add
pop
add
push
add
inc
add
dec
add
dec
add
add
inc
add
push
add
push
add
dec
add
dec
add
add
add
push
add
outs
add
imul
jb
and
add
je
add
je
add
aaa
inc
add
bound
jne
add
add
and
add
je
add
je
add
add
add
popa
add
popa
add
add
add
pop
dec
add
outs
add
and
bound
jb
outs
add
add
add
dec
add
add
ins
add
and
add
jb
outs
add
add
cmp
push
add
imul
add
ja
outs
add
add
pop
inc
add
outs
add
add
and
data16
ins
add
add
mov
pop
mov
fisubr
mov
add
add
add
push
add
add
push
push
and
add
sbb
add
adc
push
and
add
adc
adc
and
add
dec
add
add
jno
and
add
pop
dec
jno
pop
aaa
jge
add
addr16
bound
je
jb
sbb
push
add
add
sbb
and
add
jns
and
add
add
and
add
or
sbb
add
add
adc
add
add
push
push
and
add
sbb
and
add
add
sbb
and
add
sbb
push
add
add
sbb
add
add
add
add
jge
and
sbb
push
and
adc
adc
sub
push
push
and
add
sub
and
add
and
add
add
add
sbb
add
add
xor
add
adc
adc
or
add
add
pop
add
adc
add
add
adc
sbb
or
and
add
or
and
add
adc
and
adc
add
add
sbb
and
adc
sbb
add
sbb
push
and
add
adc
add
add
sub
add
and
adc
add
sub
sub
and
add
push
push
sbb
add
xor
and
add
add
adc
add
add
sub
add
add
add
sub
stc
add
push
push
and
add
or
mov
mov
pop
jg
aad
cmp
push
adc
or
push
sbb
sub
adc
adc
or
sbb
adc
cmp
or
sbb
sbb
add
or
add
or
add
adc
add
sub
or
add
cmp
adc
sbb
and
adc
add
adc
add
cmp
or
or
adc
adc
or
sbb
adc
add
dec
push
and
adc
add
push
adc
add
and
add
adc
adc
and
sbb
add
push
pop
and
add
and
adc
adc
push
adc
dec
sbb
adc
and
add
and
add
or
add
adc
or
add
and
or
push
add
add
add
cmp
sub
add
xor
or
adc
add
sbb
add
add
or
add
sub
or
cmp
add
or
adc
adc
add
add
add
push
and
add
add
add
pop
add
adc
push
and
add
or
add
add
add
add
add
or
push
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
push
sbb
push
add
adc
add
add
pop
add
or
add
or
pop
pop
add
or
add
add
or
adc
or
or
sbb
sbb
or
add
or
or
add
adc
add
or
add
adc
or
add
adc
or
or
add
adc
or
add
adc
add
adc
or
add
adc
adc
add
or
popa
or
or
add
adc
or
or
add
cmp
push
or
pop
add
push
sbb
add
or
or
or
or
dec
or
or
or
or
pop
add
adc
sbb
sbb
or
push
adc
or
push
adc
or
push
adc
and
pop
push
adc
sbb
pop
add
or
or
adc
or
adc
or
adc
and
adc
sbb
pop
add
or
or
add
add
add
add
or
pop
add
or
or
add
add
or
pop
add
and
mov
sbb
or
add
add
sbb
pop
add
sbb
or
add
add
sbb
push
adc
push
adc
pop
add
xor
or
add
add
xor
and
adc
pop
adc
add
adc
add
or
or
or
or
or
push
add
add
add
add
adc
add
add
add
pop
add
or
or
pop
add
dec
or
or
pop
add
or
or
and
push
push
push
push
pop
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
push
adc
or
add
or
push
adc
add
adc
add
add
add
add
push
adc
sbb
or
adc
adc
or
or
or
or
adc
adc
or
or
add
adc
or
add
adc
adc
adc
lds
adc
or
or
or
or
add
adc
adc
add
adc
adc
add
add
adc
or
add
adc
add
add
sub
add
or
pop
add
adc
adc
adc
adc
or
or
add
adc
adc
pop
pop
sbb
sub
or
adc
add
sbb
xchg
adc
adc
sbb
pop
push
adc
int
adc
or
adc
adc
sbb
add
adc
push
add
push
add
push
add
add
or
adc
or
adc
adc
sbb
adc
sbb
add
add
adc
rcr
xchg
adc
adc
adc
adc
sbb
adc
push
or
adc
adc
or
add
add
or
add
add
xchg
pop
adc
adc
add
or
test
adc
adc
adc
sbb
or
add
adc
or
pop
add
sbb
or
or
add
adc
or
or
or
add
adc
or
add
sbb
sbb
or
add
adc
or
or
add
adc
adc
or
or
sbb
sbb
or
push
adc
pop
add
push
sbb
adc
or
and
add
xchg
adc
adc
or
add
sub
add
sub
push
adc
or
add
add
add
xchg
or
adc
adc
add
adc
pop
add
or
pop
or
dec
adc
adc
or
or
or
or
pop
add
adc
or
add
add
adc
pop
or
sbb
adc
or
or
adc
pop
add
xor
and
adc
xor
add
adc
add
and
adc
add
add
adc
sbb
or
pop
pop
add
popa
or
or
add
popa
push
pop
add
popa
or
add
popa
pop
pop
add
ins
or
or
add
ins
or
pop
adc
or
or
add
ins
or
pop
adc
or
or
pop
pop
add
or
or
add
add
or
pop
adc
or
or
add
or
pop
add
or
or
and
add
sbb
push
adc
sub
or
or
or
add
adc
in
pop
push
adc
or
add
add
and
and
add
adc
add
and
adc
add
sub
dec
or
or
add
sbb
sub
add
add
sbb
or
add
adc
sbb
add
ins
or
or
add
adc
or
or
add
adc
or
add
adc
or
or
push
or
cmp
or
or
add
or
sub
or
sbb
sbb
or
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
push
adc
push
adc
add
adc
add
adc
push
adc
push
adc
add
adc
push
sbb
add
add
sbb
inc
sbb
or
or
or
or
or
add
inc
pop
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
cmp
xor
xor
xor
add
pop
add
inc
or
or
add
adc
or
add
adc
or
add
sub
sub
or
add
push
sbb
add
adc
or
pop
add
push
adc
add
adc
sub
add
jns
or
or
add
adc
add
adc
pop
add
add
sbb
or
add
push
adc
add
adc
and
or
add
adc
or
pop
add
push
adc
add
adc
or
or
add
adc
push
add
adc
or
or
add
push
sbb
or
sbb
or
or
push
adc
pop
adc
push
adc
adc
push
push
adc
sbb
adc
sbb
push
or
or
or
or
or
pop
adc
push
push
pop
and
add
add
add
add
adc
or
or
add
add
or
add
sbb
or
or
add
adc
add
add
cmp
or
add
sbb
or
add
adc
or
or
add
adc
add
adc
pop
add
add
jns
or
add
adc
add
push
adc
add
adc
adc
add
push
push
or
or
add
adc
sbb
add
push
adc
add
push
push
or
or
push
add
cmp
or
add
adc
add
add
adc
or
or
add
adc
or
or
add
adc
or
or
add
adc
push
or
or
add
adc
or
or
add
adc
or
add
or
add
adc
or
or
add
adc
add
adc
jns
or
add
adc
or
or
add
adc
add
adc
or
or
add
adc
or
sbb
adc
or
or
push
add
adc
add
add
add
sbb
and
add
add
adc
or
add
or
xor
add
add
or
pop
adc
or
or
or
or
add
sbb
or
sbb
adc
or
or
adc
or
or
sbb
adc
add
adc
or
push
add
or
sbb
adc
sbb
or
sbb
or
adc
add
sbb
adc
adc
add
or
sbb
adc
or
or
add
or
or
sbb
or
sbb
adc
or
push
add
or
adc
or
pop
adc
add
or
sbb
adc
or
or
pop
adc
or
sbb
adc
adc
or
or
or
or
sbb
add
or
pop
adc
or
add
adc
sbb
pop
adc
add
or
or
or
or
adc
or
or
adc
or
sbb
adc
adc
or
or
or
or
sbb
adc
or
sbb
sbb
adc
sbb
pop
adc
or
adc
push
add
or
sbb
sbb
adc
or
push
add
or
adc
sbb
sbb
pop
adc
or
sbb
push
add
or
adc
sbb
or
sbb
or
or
adc
sbb
sbb
or
push
add
sbb
or
or
pop
adc
or
push
add
add
or
or
or
adc
sbb
add
add
or
adc
or
sbb
adc
cmps
dec
ror
add
inc
sbb
add
adc
or
add
or
add
add
add
add
or
add
push
add
push
or
add
or
add
add
imul
push
adc
mov
add
and
adc
add
adc
push
adc
lods
dec
fimul
add
sbb
sbb
sbb
mov
add
add
xor
add
xor
add
or
push
and
adc
dec
push
add
adc
dec
or
add
or
add
add
adc
add
or
add
add
xor
lods
add
or
add
add
add
mov
sti
or
add
add
popa
or
add
or
push
and
adc
jno
add
adc
jno
push
adc
test
loop
or
add
add
or
add
or
add
add
push
add
add
push
or
add
or
add
push
add
push
or
add
or
add
push
add
push
or
add
or
add
and
adc
add
or
adc
mov
add
and
adc
add
adc
push
adc
mov
add
and
sbb
add
sbb
push
adc
mov
add
add
pop
add
add
pop
or
add
or
add
and
adc
add
pop
sbb
sbb
jmp
add
and
adc
adc
add
adc
adc
push
adc
dec
mov
or
add
or
add
add
or
fisubr
adc
and
add
add
add
add
or
mov
pop
and
add
add
adc
sub
in
or
mov
pop
and
add
sbb
adc
xor
ror
jle
leave
sub
adc
push
mov
or
add
or
retf
add
and
add
sbb
adc
cmp
ror
and
and
add
or
add
or
mov
add
add
sbb
push
adc
dec
mov
add
add
sbb
add
push
sbb
push
adc
push
mov
or
add
or
mov
push
and
add
jns
add
add
jns
push
adc
and
and
adc
add
sbb
push
adc
daa
mov
add
push
add
push
or
add
or
int3
sub
add
sbb
xor
add
add
xor
push
adc
ss
add
push
add
push
or
add
or
sub
adc
jg
loopne
push
and
mov
or
add
or
xlat
sub
adc
popa
mov
or
add
or
jmp
push
adc
xor
push
adc
inc
mov
or
add
or
loope
push
xor
mov
push
and
add
sbb
add
add
sbb
push
adc
imul
adc
and
in
sub
adc
adc
push
adc
das
mov
or
add
or
xlat
sub
adc
xor
and
add
xor
adc
ds
add
sbb
add
adc
sbb
push
adc
sub
and
push
push
push
or
add
or
loope
push
add
add
or
sub
add
sub
or
push
adc
pop
mov
add
sub
push
add
or
loopne
push
sbb
fsubr
add
or
push
add
adc
adc
cmp
and
sbb
add
adc
adc
add
and
add
or
adc
and
sub
add
sbb
or
add
add
or
push
adc
jo
loope
push
add
or
add
or
mov
push
and
add
push
push
add
add
push
or
add
or
mov
or
add
adc
or
add
or
mov
pop
and
add
cmp
adc
cmp
enter
or
add
or
std
sub
add
sbb
add
or
add
or
loope
push
add
sbb
add
sbb
add
or
add
or
sub
adc
jl
jmp
add
sub
sbb
push
adc
cmp
push
adc
xor
add
add
or
sub
adc
mov
and
add
or
or
add
or
mov
add
add
push
or
add
or
(bad)
sub
adc
sub
add
sbb
add
or
mov
or
add
or
fisubr
add
sbb
add
add
sbb
add
adc
push
mov
or
add
sub
sub
push
adc
push
mov
add
add
sbb
push
adc
dec
mov
pop
and
adc
add
push
adc
dec
mov
pop
and
add
adc
add
add
adc
push
adc
jp
jmp
adc
dec
mov
or
add
or
cli
sub
adc
cmp
add
add
or
(bad)
sub
add
sbb
sbb
add
add
sbb
push
adc
push
add
and
push
push
sbb
sbb
mov
pop
and
add
sub
adc
sbb
mov
or
add
or
(bad)
sub
adc
push
mov
or
add
and
adc
adc
cmp
and
adc
adc
sub
mov
add
sbb
add
adc
xor
mov
or
add
or
clc
sub
add
cmp
push
add
adc
adc
jno
std
sub
adc
mov
push
adc
ins
mov
or
add
or
jecxz
push
or
ror
mov
or
add
or
add
add
or
add
add
or
out
push
sbb
(bad)
or
mov
add
push
add
push
or
add
or
lds
add
sbb
adc
add
add
adc
push
adc
pusha
mov
or
add
or
int
push
add
and
add
add
and
add
or
mov
pop
and
adc
sbb
sbb
sbb
sbb
sub
jmp
add
add
or
loope
push
xor
ror
and
push
adc
inc
mov
or
add
sbb
add
add
sbb
add
adc
and
push
adc
mov
push
add
or
fsubr
adc
jb
in
push
push
sbb
or
or
mov
add
xchg
or
add
or
fldcw
add
sbb
add
sbb
add
push
add
or
shr
sbb
add
adc
cmp
push
adc
inc
mov
or
add
or
sub
adc
ins
mov
or
add
add
add
sbb
sbb
add
sbb
pop
add
xor
push
push
add
add
push
push
and
add
cmp
xor
or
add
sbb
or
or
pop
sub
or
sbb
sbb
or
add
cmp
or
or
sbb
sbb
pop
adc
or
ins
pop
or
add
push
push
add
sbb
sbb
add
sbb
add
add
and
syscall
or
adc
or
adc
or
and
pop
add
add
or
and
or
add
or
add
sbb
add
or
add
sbb
adc
add
adc
adc
sbb
add
adc
adc
and
sbb
or
add
sbb
add
add
syscall
or
adc
ds
sub
syscall
syscall
pop
pop
syscall
syscall
syscall
syscall
syscall
syscall
or
or
add
or
or
or
add
or
or
or
or
add
pop
or
or
sbb
add
add
dec
imul
and
fs
jae
add
add
or
add
add
pop
add
adc
jo
jb
addr16
and
xor
xor
add
or
add
xor
xor
xor
xor
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
and
cmp
xor
arpl
xor
sub
sub
arpl
gs
add
push
add
adc
outs
data16
gs
jbe
cmp
xor
xor
add
add
adc
xchg
add
and
add
xchg
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
