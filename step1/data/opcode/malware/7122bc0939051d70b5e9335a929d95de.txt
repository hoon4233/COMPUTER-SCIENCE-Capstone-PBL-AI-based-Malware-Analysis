hlt
mov
pop
jecxz
jg
adc
jnp
sbb
aas
sbb
das
aas
add
jns
pop
lds
xlat
xchg
sub
or
jae
aad
sbb
dec
sbb
jnp
adc
lock
xor
lock
sbb
or
xchg
cmp
xor
lock
cmps
dec
aaa
aas
sbb
xor
xchg
mov
lods
in
jbe
lock
jnp
xchg
add
dec
sahf
mov
dec
inc
nop
adc
jle
adc
popa
int
dec
outs
lds
dec
fwait
and
inc
dec
sahf
cwde
clc
int
dec
inc
nop
lock
sbb
adc
dec
mov
jge
adc
je
test
jnp
popf
add
call
vdivss
dec
cmp
lahf
mov
nop
outs
int
in
retf
adc
jnp
sbb
jnp
imul
jnp
adc
dec
stos
push
(bad)
clc
dec
jns
and
sbb
jne
sbb
sub
cdq
clc
inc
stos
push
vucomiss
jne
sbb
pusha
mul
sub
sbb
lds
inc
dec
cmp
xchg
adc
jb
pusha
in
add
lahf
mov
test
jmp
mov
dec
inc
sub
clc
fistp
ja
lahf
shl
push
leave
test
int
pusha
sbb
ja
lahf
icebp
hlt
bnd
test
and
dec
adc
jle
sub
cmp
ja
adc
jle
movs
xchg
adc
jnp
pop
sub
clc
fistp
mov
fcom
aad
pop
adc
jnp
adc
jae
inc
mov
jae
aam
jl
adc
loop
jecxz
mov
dec
jmp
imul
lds
ror
test
add
cmp
cld
leave
push
sbb
mov
sbb
and
dec
dec
xchg
inc
xlat
inc
inc
aaa
movs
xchg
popa
ret
adc
jnp
cld
fs
stos
push
lds
adc
and
jnp
call
pop
mov
inc
dec
sahf
jno
lods
stos
push
lds
add
jnp
clc
aad
dec
inc
dec
push
repz
sbb
aas
jb
ja
adc
mov
pop
jle
adc
jl
retf
pop
adc
pop
stos
push
lds
cmp
jnp
jmp
push
stos
push
lds
jmp
pop
stos
push
(bad)
add
sbb
popf
or
adc
mov
push
call
lds
xlat
mov
jnp
adc
repnz
lods
aad
sbb
sub
jp
ins
jge
repnz
and
sahf
in
test
popf
add
sbb
adc
jle
adc
jl
jnp
xchg
lods
pop
mov
loope
lds
xlat
inc
mov
cwde
out
cmp
pop
and
(bad)
loopne
test
inc
lods
jae
adc
jbe
in
xchg
xchg
shr
cld
cmp
adc
lea
lods
jmp
push
(bad)
and
xchg
or
lds
ror
inc
in
lds
adc
mov
in
add
jnp
xchg
add
mov
mov
sub
call
icebp
inc
xchg
pop
inc
xchg
(bad)
jmp
sub
xchg
in
les
jecxz
dec
ds
scas
jnp
sub
je
jle
adc
jle
test
cmp
adc
jns
sbb
mov
sbb
lea
hlt
mov
add
mov
in
fst
sbb
mov
in
cmp
xchg
sar
push
out
pop
add
adc
lea
hlt
mov
jecxz
mov
mov
dec
repnz
and
pop
loopne
mov
inc
fld
cs
icebp
xchg
sub
(bad)
aas
dec
xor
dec
mov
jae
lds
jle
test
cmp
adc
popf
add
adc
mov
sub
cs
in
fld
jle
test
cmp
out
add
in
cmp
adc
mov
sub
cs
aam
nop
sbb
adc
and
fld
cs
icebp
inc
xchg
aas
inc
xchg
sub
popa
leave
mov
cmp
ds
or
in
ds
add
adc
push
out
adc
push
out
cs
jecxz
sbb
lock
ds
popf
add
adc
test
sub
out
cmp
lds
push
retf
sub
stos
outs
adc
or
jp
popa
cmp
fsub
test
dec
or
dec
ds
std
cli
pop
in
test
adc
repnz
jp
popa
cmp
fsub
test
dec
adc
test
daa
adc
add
jmp
test
adc
and
dec
or
dec
popf
and
pop
adc
jnp
sub
xchg
sub
popa
leave
lock
add
(bad)
out
cmp
xchg
cmp
adc
jle
mov
int
ficom
stc
jp
popa
cmp
frstor
mov
in
cs
xchg
jecxz
imul
cs
out
push
adc
cld
movs
dec
out
cmp
cmp
mov
push
adc
dec
(bad)
sbb
test
mov
inc
dec
sahf
cwde
clc
fldcw
dec
inc
dec
es
rol
sub
in
dec
ds
jecxz
adc
hlt
(bad)
lock
lock
test
jbe
sub
out
ret
or
mov
les
xchg
add
cmp
nop
push
int
pop
or
lock
call
adc
lock
ds
fwait
and
xlat
nop
repnz
xchg
sub
inc
xchg
lock
sbb
ds
sbb
(bad)
in
mov
in
jmp
xchg
stc
ins
lds
imul
imul
mov
aad
jl
in
ficom
popf
adc
mov
pop
sub
ror
push
vdivps
jg
adc
ds
add
in
dec
ds
add
inc
dec
sahf
cwde
clc
aad
dec
inc
dec
push
or
cmp
add
mov
out
ror
push
(bad)
(bad)
f2xm1
pop
sbb
lds
sub
xor
sbb
or
add
inc
les
lock
call
or
in
ds
add
mov
dec
inc
dec
push
adc
inc
mov
in
mov
pop
adc
push
pop
jl
cwde
pop
adc
xchg
pop
jmp
cmp
data16
cmp
inc
sub
sub
inc
sub
clc
fbstp
call
inc
xchg
sub
movs
push
fwait
jmp
popf
cmp
test
sub
repnz
adc
jl
sbb
sub
sbb
xchg
loope
lds
adc
jnp
in
ja
(bad)
hlt
jnp
jecxz
repnz
call
sahf
mov
inc
dec
sahf
dec
inc
xchg
sub
popa
int
popa
or
pop
xchg
in
in
adc
xchg
pusha
into
fiadd
lahf
fld
jmp
jg
or
sub
lahf
ret
test
sbb
sub
dec
ds
add
inc
dec
sahf
mov
inc
dec
sahf
cwde
clc
in
dec
inc
dec
push
adc
dec
sbb
dec
mov
jge
lds
sbb
jge
sbb
ds
lods
imul
lds
xchg
xlat
inc
xchg
fdiv
lds
aam
mov
pop
clc
int3
mov
stos
test
sub
jge
jnp
popf
push
dec
fistp
dec
ds
xor
adc
adc
dec
nop
add
outs
push
adc
jnp
popf
push
repnz
and
pop
lock
mov
adc
add
mov
pop
dec
sub
in
inc
xchg
jne
lds
aam
and
xchg
icebp
jge
sbb
lds
inc
xchg
sar
push
add
addr16
in
lds
adc
arpl
mov
ds
sbb
sbb
add
dec
lds
test
xlat
inc
inc
xchg
fstp
xchg
cmc
test
inc
mov
lds
xor
pop
adc
cli
lock
jl
test
adc
(bad)
cli
jmp
test
mov
repz
jnp
jle
adc
test
in
xchg
xchg
cmp
cmp
jmp
jnp
sbb
xchg
mov
adc
(bad)
xor
scas
in
cmp
fcomp
xor
shr
sub
sub
popf
add
nop
out
sbb
push
out
retf
adc
cmp
iret
pop
adc
test
adc
pop
xchg
int3
les
addr16
nop
push
xor
push
ret
push
fs
scas
push
vdivss
inc
nop
cmp
lds
adc
js
adc
and
xlat
mov
jnp
push
cmp
pop
scas
push
vdivss
xchg
imul
inc
xchg
or
lds
mov
push
adc
cli
test
ds
ss
and
adc
aam
cmp
lahf
or
sub
jnp
adc
ds
add
mov
popf
inc
stos
in
cmp
fcomp
cmp
mov
inc
dec
inc
in
push
jnp
adc
ds
add
pop
scas
push
lds
sbb
inc
jmp
test
dec
mov
cwde
sub
pop
adc
movups
xchg
lock
xchg
jae
push
cmp
ds
inc
push
in
cmp
mov
sbb
mov
inc
dec
sahf
mov
inc
dec
sahf
cwde
clc
leave
sub
jp
sub
jmp
and
cmp
clc
jle
vdivps
(bad)
xchg
adc
jnp
iret
mov
fcom
jp
adc
bnd
adc
nop
arpl
inc
or
movs
lock
sbb
aas
sbb
stc
dec
outs
adc
out
dec
adc
lods
jmp
push
lds
cwde
ror
cli
hlt
add
mov
mov
test
sbb
mov
push
jecxz
add
callw
dec
mov
fistp
popw
scas
push
lds
xor
call
out
jecxz
cmp
nop
xlat
lock
sbb
jg
sub
add
sub
push
pop
xchg
mov
or
cmp
daa
and
je
and
test
xchg
mov
xchg
pusha
retf
sbb
dec
adc
jp
jnp
pusha
dec
xor
dec
mov
jno
scas
jnp
adc
jnp
adc
adc
mov
sbb
scas
jnp
adc
xchg
push
lds
push
int
ficom
stc
jp
popa
cmp
fnstcw
not
xchg
sub
popa
int
outs
in
sub
adc
cdq
or
test
gs
sti
call
cld
rcl
adc
and
xchg
icebp
jge
sbb
lds
dec
inc
xchg
ror
sbb
hlt
mov
out
cmp
adc
lock
(bad)
loopne
test
cdq
inc
mov
pause
ds
dec
int3
mov
sbb
mov
jno
sub
xchg
lea
xchg
xchg
or
adc
jnp
cdq
inc
mov
repz
test
xchg
add
sub
pop
adc
paddq
(bad)
hlt
cmp
mov
sub
sub
popf
add
xchg
sbb
test
lock
rol
adc
jnp
push
cmp
fadd
jnp
sbb
int
sbb
cmp
mov
inc
dec
inc
in
mov
mov
cwde
imul
jae
adc
sub
aam
test
cld
loope
in
inc
mov
xchg
test
dec
(bad)
xlat
jmp
test
xchg
push
aaa
add
test
inc
fs
push
lds
nop
sub
sub
popf
add
adc
jnp
xchg
js
in
cmp
nop
pop
jns
adc
(bad)
out
cmp
adc
adc
jl
cwde
pop
adc
(bad)
out
cmp
jmp
mov
xchg
test
dec
mov
mov
cmp
cmps
cmp
sbb
jmp
push
lds
mov
cmp
dec
cdq
inc
xchg
jmp
sbb
cmc
or
adc
mov
test
adc
sub
mov
test
jmp
clc
es
cmp
adc
(bad)
fst
cwde
jnp
jecxz
repnz
mov
push
adc
jl
cdq
pop
adc
sub
loop
test
jmp
jnp
xor
cmp
cdq
js
in
cmp
xor
jmp
jnp
pusha
iret
mov
in
lds
jle
adc
test
sbb
enter
inc
mov
sbb
pop
jno
lods
ret
(bad)
jmp
sub
clc
fistp
clc
test
adc
movups
inc
iret
in
cmp
adc
adc
jl
cdq
pop
adc
sub
loope
test
jmp
jnp
xor
cmp
cdq
js
in
cmp
mov
add
jmp
jnp
pusha
iret
mov
in
lds
xchg
mov
lds
sbb
pop
adc
sub
loope
test
jmp
jnp
xor
cmp
cdq
js
in
cmp
jb
test
xchg
add
jmp
jnp
pusha
iret
mov
in
lds
jle
adc
inc
cmp
cld
test
pop
sub
test
adc
jno
xchg
jno
in
les
adc
jp
xchg
daa
cmp
jl
fistp
sub
clc
fistp
clc
test
adc
movups
inc
iret
in
cmp
adc
adc
jl
cdq
pop
adc
sub
loopne
test
jmp
jnp
push
scas
jp
lods
daa
cmp
cdq
js
in
cmp
into
xor
jmp
jnp
popa
fcom
sbb
pop
adc
(bad)
out
cmp
jmp
mov
sbb
jno
xchg
jno
in
les
adc
nop
and
jnp
test
lds
or
push
lds
xchg
cmp
out
cmp
fs
sbb
(bad)
mov
les
out
cmp
adc
mov
xchg
xchg
sbb
lock
enter
inc
dec
inc
in
cdq
repnz
call
ret
jle
adc
(bad)
mov
lahf
inc
mov
nop
sub
sub
popf
add
xlat
inc
push
out
retf
adc
jnp
mov
test
jmp
bnd
and
pusha
stos
in
cmp
test
les
lds
xchg
ss
adc
sbb
in
sar
xchg
jne
in
les
adc
inc
cdq
inc
shl
jmp
in
xchg
lock
xchg
addr16
dec
jmp
test
push
cwde
pop
adc
(bad)
mov
lahf
std
test
sub
jnp
adc
ds
add
jnp
cdq
inc
stos
in
cmp
nop
xchg
adc
jmp
stos
sbb
mov
cwde
imul
jg
adc
(bad)
repz
test
inc
stos
in
cmp
nop
sub
sub
popf
add
mov
sbb
cmp
nop
xchg
sbb
jmp
inc
xchg
push
cmp
ret
cmp
mov
sahf
sbb
repnz
mov
push
neg
inc
dec
(bad)
repz
test
std
test
ds
add
jnp
lods
sahf
sbb
adc
cwde
xchg
xchg
jne
in
dec
mov
in
lds
jl
fistp
dec
(bad)
out
cmp
adc
mov
in
cmp
push
(bad)
jnp
jle
xchg
cmp
int3
hlt
mov
imul
cmp
jmp
adc
xchg
xchg
cmp
jns
jnp
rcl
sbb
in
(bad)
jnp
xchg
sub
jmp
test
jmp
imul
xchg
sub
repz
sbb
jmp
jmp
mov
out
lock
cld
cmp
in
jmp
mov
adc
retf
push
lds
mov
test
jmp
neg
inc
lods
sti
clc
push
(bad)
mov
test
inc
dec
inc
in
clc
jnp
adc
repnz
call
lds
aam
(bad)
pop
push
lds
xchg
popa
test
jmp
lock
mov
dec
inc
in
test
and
lds
jmp
sbb
inc
jge
adc
clc
mov
adc
xchg
sbb
pop
sbb
bnd
jecxz
repnz
dec
cmp
fcom
(bad)
jnp
xchg
imul
xchg
inc
test
jmp
imul
xchg
sub
repz
sbb
or
jmp
mov
out
lock
mov
dec
inc
in
mov
pop
call
lds
aam
(bad)
push
lds
mov
test
jmp
neg
inc
lods
or
push
(bad)
nop
cmp
in
clc
jnp
adc
repnz
call
fidivr
adc
(bad)
xchg
jmp
test
sbb
sbb
test
inc
scas
jnp
mov
dec
(bad)
xchg
jmp
test
std
test
ds
push
push
sbb
cwde
xchg
xchg
popf
test
jmp
mov
adc
push
jnp
adc
clc
cmps
je
test
sbb
(bad)
(bad)
adc
jnp
test
lds
lds
cdq
inc
and
jmp
lods
test
jmp
loopne
jmp
clc
fistp
mov
in
cmp
call
xchg
js
in
cmp
nop
dec
jnp
adc
(bad)
jmp
cmp
adc
into
mov
cmp
jmp
adc
xchg
xchg
cmp
jg
jnp
rcl
bnd
cmp
dec
xchg
jmp
daa
adc
inc
and
cmp
cdq
inc
and
jmp
cmp
call
jmp
sub
clc
fistp
scas
jg
xchg
cmp
test
in
xchg
xchg
in
jle
jnp
rcl
bnd
adc
js
in
cmp
adc
(bad)
lahf
jmp
test
cmc
test
jge
jnp
lds
jmp
in
cmp
sahf
mov
test
sub
cmp
cmp
jmp
adc
cmp
nop
and
sub
in
cmp
sahf
lock
in
cmp
cmp
jmp
out
cmp
popf
push
lock
cld
cmp
in
int
cmps
les
test
adc
ja
xchg
adc
lock
xchg
jae
sbb
repnz
mov
push
clc
cmps
sar
in
mov
nop
xchg
adc
jmp
jae
xchg
sbb
lock
xchg
jae
xchg
sbb
jmp
jae
add
jnp
jecxz
repnz
mov
push
lock
hlt
cmp
in
int
add
cmp
inc
dec
sahf
jno
lods
jmp
add
jnp
mov
jnp
adc
pop
xchg
xor
jnp
adc
xchg
add
sub
jno
mov
mov
dec
push
call
sbb
lock
out
lds
xchg
sbb
dec
(bad)
jnp
cld
fst
sbb
mov
in
inc
inc
fwait
mov
sbb
sbb
push
call
sbb
data16
out
cmp
enter
adc
ds
xlat
dec
push
repz
pop
call
nop
mov
jmp
test
jmp
lds
test
pop
adc
repnz
sub
add
inc
dec
popf
cmp
adc
adc
jnp
cmp
cmp
jle
adc
cld
mov
sbb
mov
sbb
mov
popf
add
xlat
nop
repnz
xchg
sub
inc
dec
adc
dec
mov
fmul
adc
movs
cwde
xor
jmp
adc
ret
xchg
or
jnp
cmc
dec
ds
add
ds
cmp
adc
pop
and
loopne
mov
fcom
sub
pop
adc
jnp
adc
mov
fcom
and
sbb
mov
vcvtps2dq
sar
push
lds
sbb
sbb
jnp
fwait
mov
pop
sahf
test
sbb
cmp
jge
jnp
jmp
imul
dec
fist
xor
push
xor
sub
cmp
std
lea
adc
jbe
mov
adc
std
jns
adc
jle
lea
test
cs
adc
in
adc
xchg
or
lds
add
rol
lds
in
mov
pop
adc
jle
mov
(bad)
cmp
jge
adc
mov
mov
pop
adc
imul
cmp
adc
nop
lds
aad
inc
sbb
jnp
std
leave
test
jmp
jle
mov
(bad)
aaa
jns
adc
jbe
mov
rcr
test
push
cmp
std
and
jle
mov
(bad)
add
adc
jbe
mov
add
cmp
push
lds
std
jno
in
xor
mov
(bad)
pop
jns
adc
mov
fmul
sbb
in
adc
mov
sbb
lds
std
dec
test
jmp
jle
mov
std
in
adc
mov
fmul
sbb
in
adc
xchg
adc
pop
cmp
adc
(bad)
adc
enter
lds
repnz
lds
mov
out
adc
mov
test
xchg
rcl
sbb
lds
mov
adc
lds
in
mov
pop
adc
jle
mov
sbb
mov
popf
adc
mov
sbb
mov
sbb
pop
mov
jecxz
repnz
cld
dec
mov
sbb
retf
inc
cmp
sbb
cmp
pop
sahf
test
sbb
inc
jnp
adc
cmp
fcmovnb
jnp
imul
aas
xchg
add
jbe
mov
push
pusha
jno
sbb
jmp
adc
in
adc
pop
in
std
in
adc
mov
fwait
sbb
in
adc
nop
push
and
lds
fsubr
mov
aad
jle
mov
fucom
pop
adc
je
rol
jnp
popf
xor
or
jecxz
repnz
in
mov
mov
adc
jnp
push
xor
mov
pop
adc
fwait
sbb
or
aam
jnp
sbb
sbb
push
sbb
push
vunpckhps
jnp
cmc
dec
neg
xor
adc
jnp
pop
fs
adc
push
sbb
cmp
xchg
clc
aas
adc
outs
add
in
adc
aaa
fwait
imul
jle
test
sti
data16
push
aas
xchg
enter
kmovd
les
pop
sahf
(bad)
mov
xchg
clc
sti
adc
in
xchg
mov
sti
data16
push
sbb
shl
lds
xor
jmp
adc
nop
add
leave
jmp
adc
jnp
adc
inc
adc
push
sbb
sbb
cld
jle
test
mov
jnp
xor
jmp
adc
nop
add
leave
jmp
adc
jnp
adc
sar
sbb
sbb
cld
jle
test
jle
mov
in
mov
sbb
inc
mov
inc
dec
or
dec
popf
and
dec
inc
xchg
lds
pop
arpl
mov
jecxz
repnz
call
mov
pop
adc
jb
push
lds
xchg
shr
sub
dec
movs
jnp
mov
fistp
lods
push
mov
pop
movs
jnp
mov
in
adc
inc
dec
adc
mov
popf
add
push
lds
cmp
out
adc
xor
or
in
adc
and
repz
fistp
call
xchg
sub
dec
inc
xchg
rcl
jge
int3
les
outs
mov
jg
sbb
shl
mov
cld
fnstsw
adc
mov
cwde
jno
jnp
push
ins
repnz
in
ds
push
lds
xchg
mov
pop
or
call
jno
sbb
pop
cmp
adc
cwde
xchg
push
pop
repnz
and
push
sbb
adc
neg
pusha
jg
sbb
mov
pop
adc
ds
push
lds
xchg
push
sti
add
jnp
adc
push
mov
cdq
mov
mov
out
neg
xchg
adc
adc
jnp
push
and
in
xor
pop
adc
mov
xchg
push
pop
sub
dec
ds
adc
jg
adc
push
(bad)
cld
inc
sbb
adc
ds
cdq
or
jle
xchg
popf
jbe
jnp
adc
jnp
popa
adc
jle
adc
jle
test
sub
cli
lock
jnp
jmp
lahf
repz
jnp
jmp
imul
neg
xchg
test
dec
inc
out
mov
sbb
adc
and
dec
or
dec
popf
and
test
xchg
dec
cmp
in
mov
pop
sbb
lahf
mov
pop
cmp
dec
leave
popf
nop
xchg
xchg
push
sub
adc
cdq
add
jmp
xor
ds
inc
scas
test
popa
int
push
and
cmp
lahf
or
adc
mov
dec
call
nop
repnz
xor
cli
in
lods
lods
jnp
jmp
imul
test
scas
test
add
in
adc
fadd
sahf
cwde
clc
leave
sub
dec
push
adc
mov
pop
adc
test
rol
lds
popa
icebp
je
push
bnd
jmp
jnp
popa
in
je
push
bnd
jmp
jnp
popa
fnstenv
bnd
jmp
jnp
popa
aad
lods
push
bnd
jmp
jnp
sbb
sbb
aas
sbb
dec
outs
and
push
cmp
mov
sar
xchg
mov
retf
adc
jnp
out
(bad)
je
add
inc
fstp
inc
repz
jns
mov
mov
xchg
out
inc
xchg
sbb
jae
or
popf
cmp
int
adc
xchg
sbb
ds
add
adc
inc
cwde
jnp
sbb
in
pop
outs
xchg
add
test
dec
cld
xchg
sbb
ds
or
test
jp
xchg
das
jg
(bad)
(bad)
ds
sub
lock
add
aas
sbb
les
dec
loopne
outs
push
adc
in
lods
push
cmp
fild
inc
inc
push
(bad)
jns
sbb
je
push
cmp
and
test
jmp
imul
sti
daa
sub
push
dec
popf
cmp
jg
pop
dec
sbb
ror
popf
cmp
inc
sbb
in
inc
xchg
pop
sbb
sbb
sub
sbb
jo
in
inc
xchg
push
xchg
stc
jge
popa
shl
ret
pop
sub
std
jle
inc
clc
fist
dec
jg
adc
stc
inc
sbb
repnz
inc
inc
sbb
in
inc
xchg
sbb
repnz
sub
jns
push
dec
sbb
ret
inc
repz
jnp
adc
xchg
sbb
test
pop
sar
das
jg
(bad)
les
pop
in
dec
or
cmp
cs
sar
adc
jnp
sub
jp
inc
dec
adc
jge
popa
mov
jecxz
sub
jp
sub
cld
(bad)
sti
daa
adc
push
sub
retf
adc
inc
outs
sbb
test
adc
nop
cmp
adc
arpl
mov
jnp
lahf
nop
imul
inc
xchg
pop
popf
shr
lds
xchg
cmp
adc
je
mov
fwait
and
xlat
nop
repnz
xchg
sub
inc
xchg
test
pusha
jno
sbb
hlt
test
adc
and
xchg
cmp
jmp
or
push
dec
ds
cmp
mov
sbb
jle
mov
nop
imul
(bad)
lock
add
jmp
les
in
pushf
test
pusha
jno
sbb
jae
add
sub
pop
es
lds
pusha
in
jle
lds
pop
call
sar
push
cmp
pop
test
or
jmp
icebp
pop
or
add
lahf
vdivss
dec
mov
into
in
stos
xchg
out
les
out
cdq
and
add
popw
test
or
out
mov
sbb
les
pop
in
add
std
dec
aas
add
popf
aad
push
pusha
jno
sbb
dec
das
add
cld
shl
in
add
rol
lds
inc
retf
add
cdq
sbb
icebp
outs
inc
test
jnp
pusha
cmp
dec
sahf
mov
inc
dec
sahf
mov
cld
add
sbb
sub
in
add
clc
retf
cmp
adc
jnp
adc
or
inc
cwde
(bad)
jmp
jp
xchg
ss
in
(bad)
pusha
jno
sbb
inc
xabort
cmp
xchg
ss
in
inc
inc
push
je
cmp
adc
movs
in
lds
or
jae
call
sub
sbb
push
cs
hlt
jmp
repnz
je
sbb
inc
cmps
push
lds
repz
jnp
lahf
push
rol
jmp
repnz
adc
test
jg
gs
sbb
movs
mov
test
mov
icebp
outs
dec
lea
sbb
cmp
pop
add
jmp
cmp
sti
cmp
adc
rcr
je
pop
cmp
jmp
jnp
mov
cmp
push
xor
cmp
adc
inc
mov
cmp
push
inc
pop
cmp
popf
push
scas
(bad)
jmp
test
pusha
jno
sbb
jnp
nop
push
jp
adc
and
jmp
repnz
int3
sbb
push
(bad)
rcr
in
push
mov
or
adc
jnp
xchg
xor
xor
lds
repz
jnp
popf
add
in
adc
jno
jecxz
cmp
adc
inc
xchg
sub
nop
sbb
adc
test
pusha
jno
sbb
cmp
cwde
lds
jl
test
adc
into
idiv
cmp
jmp
data16
cmp
fistp
dec
ds
add
sti
(bad)
jnp
mov
in
cmp
jmp
mov
stc
push
(bad)
cs
icebp
rcr
cmp
jb
xchg
cmp
adc
or
xchg
cmp
popf
sbb
jnp
xchg
inc
movs
in
cs
sbb
sbb
lds
mov
fld
sahf
clc
sub
lahf
inc
test
jmp
jnp
xchg
sub
jmp
test
adc
into
ret
retf
cmp
std
test
adc
int
out
test
aad
jns
add
pop
mov
mov
sub
jmp
jnp
xor
cdq
sbb
add
sbb
mov
xchg
add
out
out
sti
cmp
aad
jns
cmc
(bad)
js
call
mov
jmp
jnp
adc
or
(bad)
neg
test
adc
and
js
sbb
gs
adc
(bad)
mov
(bad)
(bad)
outs
push
sub
jnp
popf
push
out
jmp
clc
fldcw
xchg
xchg
pop
movs
in
dec
(bad)
mov
sbb
pop
pop
(bad)
repnz
sbb
in
inc
fcmovnb
jmp
lock
(bad)
repnz
test
test
popf
inc
xlat
(bad)
jmp
lock
rcr
in
inc
cmps
(bad)
jmp
adc
cdq
inc
ret
(bad)
jmp
sub
mov
sub
lock
rcr
in
inc
mov
lahf
inc
mov
sahf
mov
inc
cmps
(bad)
jmp
sti
cmps
neg
test
adc
mov
cmp
lock
das
ja
lahf
push
ret
(bad)
jmp
mov
push
adc
jnp
sub
in
mov
pop
adc
int
out
test
aad
jns
cdq
sbb
retf
cmp
push
lds
ss
in
add
sbb
test
xor
jnp
adc
sub
and
retf
(bad)
jmp
jb
sbb
sbb
je
les
lahf
inc
(bad)
hlt
jmp
je
adc
xchg
sbb
jae
sbb
sbb
jnp
xchg
xor
adc
das
test
xchg
and
retf
sbb
cmp
mov
dec
mov
std
jnp
cmp
mov
adc
gs
in
xchg
sbb
mov
adc
jno
in
xchg
push
xchg
std
jnp
sbb
ror
push
lds
movs
in
add
sbb
cmp
jmp
je
adc
xchg
sbb
dec
sbb
neg
shl
lock
dec
lock
loopne
test
adc
shl
or
(bad)
dec
cmp
retf
sbb
jae
mov
test
cmps
add
in
add
stc
inc
sbb
sti
daa
sub
jnp
adc
push
add
adc
jnp
popa
sar
daa
sub
jnp
adc
push
adc
jnp
pusha
(bad)
cmp
fmul
int
mov
test
sbb
mov
je
xchg
ss
in
xchg
test
jmp
scas
(bad)
jmp
xchg
ins
in
cmp
neg
test
adc
cmp
jmp
lock
sub
int
xchg
sbb
and
sbb
lock
add
jg
jmp
(bad)
hlt
jmp
cli
cmps
loopne
test
adc
jnp
adc
pusha
jno
sbb
jmp
in
inc
(bad)
call
sbb
call
aam
sti
daa
adc
rcr
je
cmp
test
dec
fwait
and
xlat
nop
repnz
xchg
sub
dec
inc
xchg
lock
sbb
ds
mov
sbb
push
jecxz
xor
jmp
mul
dec
dec
outs
test
lds
out
lock
in
dec
mov
jecxz
mov
(bad)
pop
adc
je
adc
mov
and
pop
adc
jl
adc
mov
sbb
mov
jecxz
add
shl
sbb
jae
in
sub
jmp
nop
adc
test
and
jbe
test
out
sub
sbb
cs
sub
adc
sti
pop
jmp
je
push
les
adc
jnp
jns
aas
dec
adc
mov
dec
rcr
xchg
aam
jnp
xchg
cmp
ds
retf
adc
ret
adc
push
adc
inc
ds
retf
adc
mov
cwde
hlt
ret
adc
js
mov
lds
sub
sbb
jg
push
cmp
push
cmp
je
pop
clc
mov
adc
push
adc
xchg
popa
sar
jmp
sti
pop
jmp
retf
inc
cmp
call
icebp
sbb
jae
out
sub
jmp
nop
adc
xchg
and
pop
in
dec
rcr
or
ds
jae
es
lds
popa
sar
jmp
je
push
cmp
popf
and
dec
inc
xchg
lock
sbb
fimul
cmp
ret
inc
dec
lds
repz
ds
add
in
lds
jle
xchg
icebp
inc
lds
in
mov
push
inc
inc
sbb
adc
sti
daa
outs
adc
aas
sub
lds
sbb
and
dec
or
dec
popf
and
adc
jnp
inc
xchg
les
fidivr
jecxz
repnz
call
add
outs
sbb
(bad)
sbb
cmp
adc
ficomp
adc
mov
popf
inc
add
cmp
fcomp
cmp
repz
jnp
xchg
add
loop
xor
dec
mov
dec
popf
and
dec
stos
push
push
pop
adc
pop
adc
mov
popf
add
adc
push
adc
xchg
imul
cs
icebp
inc
xchg
or
sub
add
or
jnp
adc
js
adc
js
adc
jnp
jmp
jae
in
jnp
popf
add
in
mov
cwde
imul
ds
xchg
in
call
mov
dec
cld
sbb
sbb
mov
jno
sub
repnz
call
lds
shr
jnp
sbb
ds
popf
or
popf
or
popa
cmp
sbb
ror
repnz
cmp
xchg
mov
inc
dec
sahf
dec
inc
xchg
sub
rol
xchg
lock
lds
adc
sti
sbb
adc
jl
jnp
aam
push
adc
mov
sbb
mov
pop
and
xor
pop
adc
adc
jle
adc
inc
sub
lock
sbb
fdivr
cmp
in
dec
mov
out
xchg
test
xchg
xchg
test
jnp
adc
ds
scas
jns
in
cmp
inc
sub
sub
sbb
pushf
xchg
push
cmp
mov
sbb
and
xlat
nop
repnz
sub
and
jo
lds
adc
sti
sbb
adc
jl
jnp
aam
push
adc
jne
sbb
mov
xchg
rol
in
ror
not
sbb
adc
inc
sub
adc
cdq
add
popa
leave
sub
sbb
aam
adc
ret
and
lds
repz
ds
add
push
call
xchg
sub
inc
xchg
lock
sbb
ds
cli
aad
xchg
mov
sti
sbb
jnp
iret
dec
movs
lock
int
sub
mov
addr16
test
lods
cmp
push
lds
nop
push
cmp
fldenv
lods
inc
stc
push
lds
cwde
rcl
dec
sar
je
adc
sub
daa
cmp
cld
fldcw
sbb
mov
pop
push
into
sti
daa
sub
push
pop
rol
inc
xor
push
daa
cmp
cld
xor
sbb
mov
xchg
push
cmp
push
jecxz
or
dec
or
dec
popf
and
test
jae
popa
leave
mov
xor
ds
add
in
dec
ds
add
cld
ins
sub
adc
dec
in
(bad)
je
adc
sub
daa
cmp
cld
push
sub
adc
mov
imul
lds
inc
xchg
test
or
dec
sahf
mov
inc
dec
sahf
cwde
clc
cmc
sub
jle
adc
ffree
lds
lds
test
push
daa
jp
xchg
mov
xchg
sbb
mov
(bad)
pop
adc
js
adc
mov
adc
sti
data16
push
sbb
or
lock
sbb
int3
pop
push
dec
ds
jecxz
ret
jecxz
repnz
int3
dec
mov
adc
cmp
push
sub
data16
push
pop
xchg
test
sbb
test
popa
adc
xor
ds
popf
push
lock
sbb
int3
pop
push
dec
ds
out
lods
push
cmp
ror
cld
inc
push
in
mov
cwde
jns
jns
int3
hlt
mov
in
inc
push
in
mov
mov
jecxz
repnz
ror
leave
je
adc
adc
jb
xor
lods
mov
adc
nop
cdq
adc
pop
jp
lock
ss
or
int3
push
div
call
inc
mov
nop
push
leave
je
push
ret
lock
sbb
int3
dec
adc
stos
adc
nop
cdq
adc
pop
jp
lock
ds
sbb
adc
xchg
jae
(bad)
les
call
sahf
mov
je
jmp
test
sbb
hlt
pop
adc
ret
jo
mov
push
sysexit
test
mov
push
cmp
push
push
jmp
test
mov
jmp
test
ret
test
mov
jmp
test
sbb
cwde
pop
adc
ret
icebp
dec
mov
push
sysret
test
mov
push
clc
fist
push
jmp
sub
push
push
test
sbb
popf
aam
in
movs
jmp
test
jl
lds
adc
jmp
test
push
mov
call
jmp
or
jmp
test
pop
test
nop
inc
int
mov
jmp
xlat
shr
test
mov
test
addr16
push
jmp
test
pop
test
cwde
sub
jmp
test
jmp
test
mov
test
add
jnp
fwait
test
sbb
sbb
jnp
push
icebp
dec
fdiv
mov
jnp
jle
jmp
test
mov
jnp
test
dec
test
mov
push
bnd
jmp
cmp
push
dec
leave
test
mov
mov
jmp
jecxz
jmp
test
mov
jmp
test
push
sbb
mov
push
jp
test
mov
aaa
jmp
test
sbb
jnp
test
dec
test
mov
push
bnd
jmp
cmp
push
dec
leave
test
mov
mov
jmp
jecxz
jmp
test
mov
jmp
test
sub
and
push
jp
test
mov
aaa
jmp
test
mov
inc
or
cmp
cwde
clc
loope
dec
inc
dec
adc
xor
cmp
jl
mov
ins
sbb
lea
clc
dec
ds
xchg
xchg
push
and
pop
call
lds
cmc
lds
popf
sbb
xor
jmp
and
lahf
add
inc
cmp
out
lds
sbb
(bad)
out
xchg
jmp
push
and
jnp
adc
jnp
sbb
loopne
cmp
retf
adc
xor
loope
shl
mov
daa
imul
pop
sbb
adc
mov
adc
shl
lds
popa
aad
ret
adc
aad
lods
pop
aas
push
rcr
jnp
jno
repnz
enter
jle
adc
push
aaa
sub
inc
mov
sbb
loopne
dec
mov
pop
out
int
out
les
sbb
jge
push
aaa
sub
cld
in
sbb
mov
xchg
(bad)
hlt
mov
fst
mov
int3
pop
sbb
imul
dec
or
dec
popf
and
imul
sub
sbb
dec
ds
popf
add
mov
inc
dec
mov
(bad)
enter
in
mov
les
xchg
in
popf
xchg
push
sbb
mov
outs
adc
mov
sbb
mov
repz
test
xchg
add
xlat
int3
mov
sbb
int
sti
add
sbb
xchg
add
shl
pop
dec
push
repz
retf
sti
add
sbb
icebp
inc
mov
xchg
retf
mov
xchg
cld
popf
xor
push
adc
mov
popf
sub
adc
mov
pop
adc
ds
sub
clc
fisttp
mov
push
vdivss
cs
xchg
int3
(bad)
ds
shr
or
add
pop
call
xchg
adc
(bad)
pop
adc
ds
sbb
iret
test
cmp
jp
popf
add
ret
pop
add
adc
imul
js
sbb
shl
in
mov
repz
sub
lahf
mov
repnz
jb
(bad)
aad
int3
popf
clc
stos
cmps
push
lds
xchg
push
or
nop
imul
mov
stc
add
lods
xchg
sub
(bad)
pop
adc
xchg
cmp
lds
push
lods
ret
cmps
push
(bad)
pop
sar
mov
xchg
add
fdivr
sbb
dec
mov
repnz
rcr
or
adc
imul
js
sbb
shl
loopne
lods
mov
popf
or
in
mov
jmp
shl
or
adc
pop
adc
jle
test
xor
js
sar
sbb
jae
hlt
lds
lock
dec
jbe
test
push
les
clc
mov
lods
inc
sub
jmp
sbb
pop
adc
ja
popf
xor
mov
rol
hlt
adc
sub
xchg
dec
popf
sbb
cmp
inc
sub
clc
fistp
jnp
adc
jns
adc
jnp
adc
jnp
jmp
jae
cdq
mov
popf
sbb
inc
cmp
sti
inc
cmp
(bad)
cld
int
sbb
xchg
mov
popa
and
dec
cld
mov
sbb
mov
rcl
nop
repnz
xchg
sub
adc
sub
jnp
or
xchg
cli
cmc
xor
jnp
xchg
ror
push
(bad)
adc
test
and
sbb
add
mov
inc
dec
mov
sbb
cmp
xor
dec
stos
inc
popf
add
fcom
adc
adc
mov
sbb
in
push
ss
xchg
repnz
das
mov
add
pslld
dec
dec
mov
(bad)
in
inc
ds
dec
ds
int
rcl
inc
jl
jmp
jnp
in
jnp
popf
pop
(bad)
fst
rol
cmp
repnz
(bad)
imul
cmp
jmp
pop
adc
mov
push
(bad)
out
cmp
adc
adc
jle
adc
jle
adc
jl
jnp
push
dec
(bad)
loopne
cmp
adc
(bad)
out
jmp
in
mov
lods
dec
mov
adc
xchg
lea
jnp
adc
(bad)
jmp
cmp
adc
and
cmp
adc
into
out
jmp
cmp
ror
push
lds
jae
and
sbb
cmp
repz
mov
popf
xor
neg
inc
lods
cmps
cli
push
(bad)
jmp
test
inc
lods
jnp
adc
xchg
pop
adc
jnp
adc
mov
(bad)
cmc
xchg
xchg
cmp
sbb
jnp
inc
lods
pop
cli
push
lds
data16
xchg
push
lds
cld
retf
jnp
adc
mov
dec
adc
and
dec
or
dec
popf
and
dec
inc
xchg
lock
add
xor
cmp
mov
ror
push
(bad)
xor
mov
or
xchg
lds
and
retf
adc
jnp
adc
push
pop
jmp
jae
ror
jecxz
add
jmp
jp
popa
cmp
pop
in
cmp
jecxz
scas
jp
adc
push
or
mov
repz
repz
jnp
dec
fwait
mov
inc
dec
sahf
dec
inc
jp
pop
push
int3
repnz
and
pop
call
rcl
jno
xchg
test
cmp
or
mov
in
int
sub
and
xlat
nop
repnz
loope
jae
cli
hlt
jno
jnp
jle
adc
cdq
sub
mov
in
leave
test
sub
clc
fisttp
fadd
sahf
dec
inc
xchg
(bad)
clc
sbb
dec
sub
adc
ds
dec
ds
scas
jnp
adc
jns
jle
adc
jle
test
cmp
adc
lds
sbb
mov
lock
push
add
mov
in
fst
sbb
mov
in
cmp
adc
mov
in
cmp
sub
cs
in
les
out
adc
mov
dec
popf
and
test
lock
or
repnz
or
pop
sbb
jecxz
cmp
jnp
in
hlt
adc
lods
bound
push
lds
sbb
mov
in
int
sbb
sub
cs
xchg
push
(bad)
dec
jle
adc
jmp
imul
cmp
adc
mov
in
cmp
sub
cs
in
cmp
adc
and
dec
sub
dec
ds
add
icebp
xchg
sub
jp
pop
scas
lods
repnz
cmp
xchg
push
lds
aaa
sub
sub
pop
cmp
add
adc
xchg
push
lds
in
mov
sub
test
fcom
jnp
adc
sbb
push
lds
mov
xchg
add
adc
jb
popa
ror
rol
cld
xor
ds
ret
cli
fsub
mov
sbb
mov
lods
ficom
mov
push
lds
push
loope
xchg
add
adc
nop
repnz
sub
mov
xchg
push
ins
inc
adc
lock
inc
fwait
sub
jbe
and
aas
push
fld
mov
(bad)
xchg
test
sub
clc
fistp
dec
xor
leave
lock
add
jg
adc
sbb
sbb
cmp
sub
jnp
(bad)
inc
push
pop
adc
pop
fwait
sub
jnp
or
xchg
stc
jge
popa
shl
pop
add
jnp
popf
sbb
xchg
push
cmp
inc
sub
repnz
push
jb
pusha
fcomi
jmp
xor
mov
repz
mov
popf
add
adc
add
mov
popf
add
fld
cs
icebp
inc
xchg
cmova
mov
jnp
inc
ds
jmp
sbb
xchg
pop
adc
repnz
in
dec
mov
adc
cmp
or
(bad)
nop
push
xor
repnz
in
(bad)
lock
int
daa
inc
mov
add
jg
xchg
xor
cmp
(bad)
jb
ds
lds
in
jae
and
lds
jecxz
repnz
add
dec
popf
cmp
jnp
pop
sub
icebp
pop
dec
neg
xchg
lock
adc
xchg
cld
sar
adc
mov
in
jb
in
add
dec
lock
in
mov
jmp
fwait
and
xlat
nop
repnz
lods
mov
adc
jo
adc
sub
jle
inc
add
bnd
adc
pusha
(bad)
in
cmp
mov
test
jmp
neg
inc
cmp
pop
cld
xchg
mov
jmp
mov
fcomp
push
sbb
add
jnp
test
lds
push
inc
sub
dec
(bad)
out
sbb
push
paddb
inc
jmp
test
jecxz
and
cmp
sahf
sar
in
js
in
cmp
cmps
int3
cmp
iret
jmp
test
adc
sub
push
sub
repnz
call
sbb
sbb
cwde
xchg
xchg
adc
mov
pop
adc
xchg
lods
mov
sbb
cwde
xchg
xchg
or
push
int
sahf
fdivr
xchg
popf
add
shr
test
daa
adc
add
adc
cmp
inc
sub
clc
fistp
test
sub
clc
fistp
test
cld
adc
mov
sbb
jno
adc
loop
in
inc
sbb
test
in
sub
clc
fistp
ret
lds
jecxz
clc
loope
mov
jnp
lods
cmps
jnp
adc
mov
inc
dec
(bad)
out
cmp
adc
xchg
ins
push
lds
rcl
bnd
cmp
xchg
sbb
jno
adc
loop
in
inc
sbb
test
in
sub
clc
fistp
test
cld
cdq
sbb
mov
sbb
jno
adc
loop
in
inc
sbb
test
in
sub
clc
fistp
ret
lds
jecxz
clc
loope
mov
jnp
lods
cmps
jnp
adc
mov
inc
dec
(bad)
out
cmp
adc
xchg
lds
jnp
rcl
test
lods
imul
call
lods
pop
cli
push
lds
repz
jnp
xchg
add
int3
hlt
mov
pop
adc
ret
lds
jecxz
clc
loope
mov
cmp
jmp
xchg
jmp
cwde
ror
adc
cmc
xchg
mov
sub
clc
fistp
ret
lds
jecxz
clc
loope
mov
cmp
jmp
xchg
jmp
cwde
ror
adc
cmc
xchg
mov
sub
clc
fistp
mov
repz
jnp
adc
mov
xchg
aas
jle
aaa
sub
ret
lds
jecxz
sub
jmp
adc
cld
aad
sbb
mov
sbb
xchg
sbb
adc
hlt
xchg
test
xchg
xchg
cmc
push
lds
xchg
sbb
add
(bad)
out
cmp
adc
xchg
leave
push
lds
shl
xchg
test
push
lds
lea
sbb
cmp
adc
sbb
adc
loop
in
xchg
lock
call
lods
inc
cli
push
lds
mov
imul
es
sar
xchg
popf
push
xchg
jne
lds
push
lds
lea
sbb
xor
into
out
cmp
xchg
add
pop
xchg
lods
iret
jnp
adc
mov
xchg
aas
jle
pop
lods
mov
push
lds
cld
lods
cmp
adc
mov
sbb
jno
adc
loop
in
inc
sbb
test
in
sub
clc
fistp
nop
gs
lds
and
nop
xchg
cmp
hlt
xchg
cld
cmp
sbb
mov
sbb
jno
adc
loop
in
inc
sbb
hlt
xchg
mov
sub
clc
fistp
ret
lds
jecxz
clc
loope
mov
cmp
jmp
xchg
jmp
cwde
ror
xchg
mov
jnp
push
lds
lea
sbb
inc
cmp
adc
sbb
adc
loop
in
xchg
lock
call
lods
inc
cli
push
lds
imul
jnp
nop
mov
sbb
(bad)
jmp
test
std
cmp
add
sbb
test
lods
fisttp
sbb
cwde
xchg
xchg
jge
out
dec
mov
out
lds
in
cmp
test
xchg
das
inc
and
cmp
jae
js
in
cmp
test
xchg
sbb
and
adc
jnp
jecxz
clc
fnstenv
repnz
fistp
adc
xor
ror
js
xor
cwde
shl
in
xchg
adc
xchg
test
xchg
xchg
lds
jnp
rcl
test
xchg
js
in
cmp
sbb
(bad)
in
cmp
adc
test
inc
xchg
jmp
sbb
pop
adc
clc
fisttp
mov
lds
xchg
test
lods
iret
jnp
adc
mov
xchg
aas
jle
pop
lods
es
push
lds
cld
cmp
adc
mov
sbb
jno
adc
loop
in
inc
sbb
hlt
xchg
mov
sub
clc
fistp
ret
lds
jecxz
clc
loope
mov
cmp
jmp
xchg
jmp
cwde
ror
cli
sahf
aam
xchg
xchg
lds
jmp
(bad)
in
cmp
sahf
in
cmp
in
cmp
cmp
jmp
lods
jnp
std
inc
jp
adc
ds
popf
inc
and
cmp
fwait
test
lds
les
xchg
ss
inc
adc
lock
or
jnp
adc
inc
sahf
in
cmp
sbb
test
popf
inc
xchg
in
cmp
push
(bad)
loopne
xchg
inc
sub
clc
fistp
dec
imul
jmp
test
sub
jnp
in
dec
mov
in
cmp
ret
adc
inc
jnp
jmp
sub
inc
mov
lahf
adc
test
jmp
xchg
test
xchg
xor
in
cmp
in
xchg
jmp
(bad)
in
cmp
jmp
test
jmp
adc
xchg
cld
icebp
cmp
adc
mov
sbb
jno
adc
loop
in
inc
sbb
hlt
xchg
mov
sub
clc
fistp
mov
repz
cli
jnp
lods
iret
jnp
adc
mov
xchg
aas
jle
pop
lods
mov
push
lds
cld
int
sbb
mov
sbb
jno
adc
loop
in
inc
sbb
test
in
sub
clc
fistp
into
jmp
cmp
jmp
(bad)
in
cmp
ret
jecxz
repnz
test
xchg
popf
push
neg
inc
cmp
jecxz
cmp
jmp
mov
in
cmp
sbb
in
cmp
and
xchg
mov
sub
clc
fistp
nop
jg
lds
push
cli
jnp
lods
iret
jnp
adc
mov
xchg
aas
jle
pop
lods
es
push
lds
cld
mov
mov
sbb
jno
adc
loop
in
inc
sbb
hlt
xchg
mov
sub
clc
fistp
ret
lds
jecxz
clc
loope
mov
cmp
jmp
xchg
jmp
cwde
ror
adc
hlt
xchg
mov
sub
clc
fistp
mov
repz
iret
jnp
adc
mov
xchg
aas
jle
aaa
sub
ret
lds
jecxz
sub
jmp
adc
cld
ins
inc
sbb
mov
sbb
jno
adc
loop
in
inc
sbb
hlt
xchg
mov
sub
clc
fistp
ret
lds
jecxz
clc
loope
mov
cmp
jmp
xchg
jmp
cwde
ror
xchg
and
push
lds
lea
sbb
xor
into
out
cmp
xchg
add
(bad)
fcom
sbb
ret
lds
jecxz
clc
loope
mov
jnp
lods
cmps
jnp
adc
mov
inc
dec
(bad)
out
cmp
adc
xchg
in
lds
rcl
adc
hlt
xchg
mov
sub
clc
fistp
ret
lds
jecxz
clc
loope
mov
cmp
jmp
xchg
jmp
cwde
ror
ret
adc
lds
test
xlat
lods
addr16
push
lds
cld
or
mov
sbb
jno
adc
loop
in
inc
sbb
test
in
sub
clc
fistp
test
cld
push
inc
sbb
mov
sbb
cwde
xchg
xchg
jns
out
dec
mov
sbb
pop
mov
xchg
aas
jle
pop
lods
mov
push
lds
cld
cdq
inc
sbb
mov
in
cmp
nop
xchg
cmp
hlt
xchg
cld
fld
adc
mov
sbb
jno
adc
loop
in
inc
sbb
test
in
sub
clc
fistp
test
cld
int
sbb
mov
sbb
jnp
push
lds
lea
sbb
xor
into
out
cmp
xchg
add
(bad)
stc
jnp
lods
sub
mov
popf
adc
fadd
jnp
inc
dec
(bad)
out
cmp
adc
xchg
xchg
sub
jnp
rcl
xchg
jne
lds
push
lds
lea
sbb
xor
into
out
cmp
xchg
add
push
sti
jnp
jecxz
repnz
lods
cmp
(bad)
jnp
mov
sub
clc
fistp
ret
lds
jecxz
clc
loope
mov
cmp
jmp
xchg
jmp
cwde
ror
xchg
sbb
lds
push
lds
lea
sbb
xor
sbb
adc
loop
in
xchg
lock
call
lods
inc
cli
push
lds
stc
(bad)
jnp
xchg
add
les
cmp
jmp
xchg
jmp
cwde
ror
adc
jle
adc
jle
adc
jl
jnp
push
cmp
adc
mov
(bad)
repz
test
xlat
cmp
out
cmp
jle
mul
inc
xchg
test
jmp
xchg
in
cmp
in
sub
adc
adc
test
cld
fld
adc
mov
inc
sub
lock
clc
cmp
rcl
nop
repnz
xchg
sub
adc
sub
cmp
dec
jecxz
add
and
add
cmp
jae
sbb
sbb
cmp
repz
jnp
jle
adc
xchg
cmp
sbb
test
xchg
add
push
cmp
push
cmp
data16
sbb
pop
adc
xor
push
lds
sbb
test
jl
movs
pop
adc
mov
lock
jae
lds
cld
cmps
mov
jmp
mov
jecxz
add
xlat
nop
repnz
xchg
sub
sbb
jb
add
repnz
and
sahf
xchg
cmp
mov
test
adc
adc
clc
sti
adc
cmp
adc
jnp
adc
(bad)
xchg
jmp
xor
jmp
mov
adc
xchg
xchg
movs
and
jnp
inc
int
dec
push
sar
and
mov
lds
xchg
mov
in
cmp
mov
(bad)
bnd
lahf
nop
jae
cdq
mov
in
dec
das
adc
dec
das
sbb
cmp
popf
add
sbb
cmp
cld
mov
(bad)
ja
cmp
jmp
sub
(bad)
sbb
imul
cmp
cdq
test
das
adc
xchg
mov
rol
adc
int3
xchg
and
inc
out
out
cmp
in
(bad)
jle
adc
cdq
inc
(bad)
jmp
sub
popa
cld
jnp
cld
or
xchg
test
adc
jnp
cdq
inc
iret
out
cmp
jae
sbb
sbb
pop
adc
jns
adc
xchg
(bad)
sti
cmp
popa
(bad)
sub
sbb
lds
sti
or
sbb
repnz
cmp
jp
adc
(bad)
out
cmp
jmp
sub
(bad)
jnp
jmp
out
out
cmp
jmp
mul
jmp
test
jmp
jecxz
jmp
test
inc
dec
(bad)
scas
jmp
in
mov
jmp
mov
out
cmp
popa
enter
lock
and
lds
mov
cmp
cdq
inc
xchg
jmp
sub
add
sub
adc
neg
inc
dec
(bad)
out
cmp
adc
retf
hlt
jmp
repnz
nop
cmp
adc
adc
(bad)
lods
cmp
adc
clc
fisttp
inc
mov
adc
jnp
xchg
jge
in
cmp
jmp
jge
inc
xchg
in
cmp
xchg
js
out
cmp
or
test
adc
cmp
ret
in
cmp
repz
test
dec
dec
(bad)
mov
cdq
inc
ret
in
cmp
jno
scas
jnp
xor
jnp
adc
jnp
xchg
cmp
sbb
popf
dec
sbb
mov
sbb
into
mov
cmp
lods
sub
adc
pushf
xchg
xchg
mov
mov
in
lods
imul
retf
xchg
xchg
cmp
sbb
mov
in
cs
xchg
in
in
adc
cmp
adc
add
adc
repnz
sub
mov
sahf
jg
test
adc
cmp
iret
mov
jae
mov
dec
sbb
(bad)
mov
cmp
in
jnp
test
jnp
jl
jp
adc
(bad)
out
cmp
adc
adc
jl
movs
pop
adc
(bad)
out
cmp
jmp
mov
sbb
fs
mov
xchg
jmp
nop
or
jmp
jnp
sti
outs
push
sbb
jl
mov
xchg
jmp
neg
inc
sub
cli
fdivr
jnp
inc
sub
adc
jmp
(bad)
jmp
xchg
xor
lds
mov
sub
lock
mov
test
dec
repnz
and
sahf
jl
test
popf
add
adc
repnz
xchg
sub
inc
xchg
lock
add
push
push
mov
repnz
mov
repz
pop
sbb
fcomp
mov
jmp
ja
xor
jnp
popf
pop
sbb
outs
add
ins
das
adc
repnz
cs
inc
sub
repnz
cs
sbb
in
jb
out
adc
jp
sbb
out
cdq
sub
xor
jnp
popf
add
mov
lds
repz
ds
add
xchg
mov
mov
sbb
or
bnd
xchg
xchg
add
ror
test
dec
mov
mov
jnp
xchg
sub
adc
test
retf
jmp
repz
hlt
jnp
jmp
imul
test
mov
aad
dec
cld
test
je
push
cmp
pop
adc
je
inc
cmp
sbb
in
cdq
sub
adc
ret
out
lds
repz
ds
add
pop
in
xchg
adc
inc
lods
aaa
dec
push
lds
sbb
xchg
dec
daa
lds
shr
dec
sbb
ds
xchg
xchg
xchg
and
xor
inc
sub
lock
in
call
icebp
jge
add
lds
dec
inc
xchg
lock
sbb
(bad)
mov
cmp
repnz
lods
and
mov
in
fidivr
cdq
inc
(bad)
sti
jmp
sub
jmp
adc
xchg
or
jnp
popf
add
sbb
sbb
jnp
inc
cmp
fcomip
cmp
xchg
add
aam
(bad)
in
or
push
pop
cld
dec
dec
sbb
xor
dec
mov
jnp
inc
(bad)
sti
jmp
cmp
(bad)
test
test
inc
dec
(bad)
fcomi
cmp
adc
jb
pusha
icebp
repnz
cmp
into
fcomip
cmp
xchg
add
aam
(bad)
in
or
push
pop
cld
icebp
dec
sbb
xchg
mov
aam
nop
pop
jmp
(bad)
ret
repnz
cmp
and
xlat
nop
repnz
lods
fstp
adc
nop
xor
lds
dec
inc
dec
adc
inc
xchg
pop
jnp
in
mov
adc
cmc
jnp
popf
sbb
shr
test
daa
adc
add
adc
sub
clc
fistp
mov
in
mov
sbb
in
das
adc
clc
fistp
mov
repnz
(bad)
out
retf
cmp
jmp
mov
sbb
cmp
repz
icebp
jnp
xchg
add
cmp
jnp
lods
iret
jnp
adc
mov
xchg
aas
jle
add
neg
inc
sub
clc
fistp
ret
lds
jecxz
clc
loope
mov
jnp
lods
cmps
jnp
adc
mov
inc
dec
(bad)
sbb
cmp
adc
(bad)
sbb
cmp
adc
mov
sbb
jno
adc
loop
in
inc
sbb
test
in
xchg
xchg
icebp
daa
lds
ror
cli
cmc
adc
jnp
jl
call
cmp
adc
mov
sbb
jno
adc
loop
in
inc
sbb
test
in
xchg
xchg
mov
lds
ror
xchg
jge
lds
push
lds
lea
sbb
xchg
dec
sbb
sbb
adc
loop
in
xchg
mul
inc
lods
and
push
(bad)
adc
test
inc
sub
clc
fild
push
or
pop
adc
(bad)
sbb
cmp
adc
(bad)
sbb
cmp
adc
mov
jmp
add
mov
lea
sbb
xor
(bad)
sbb
cmp
adc
mov
pop
adc
(bad)
sbb
cmp
adc
mov
sbb
jno
adc
loop
in
inc
sbb
test
in
xchg
xchg
std
lds
ror
adc
cmc
xchg
xchg
lds
leave
lds
ror
bnd
xor
dec
sbb
jno
adc
loop
in
inc
sbb
lds
ja
jnp
lea
or
jnp
jmp
sub
dec
sbb
sbb
cmp
jns
jnp
xchg
add
cmp
inc
jnp
jmp
sub
imul
jae
sub
iret
jnp
adc
mov
xchg
aas
jle
add
neg
inc
sub
clc
fistp
mov
popf
inc
mov
jmp
repnz
pop
adc
(bad)
sbb
cmp
adc
mov
sbb
jno
adc
loop
in
inc
sbb
test
in
xchg
xchg
adc
ror
adc
hlt
xchg
xchg
lds
loope
lds
ror
cli
ffree
movs
jnp
cld
jne
sbb
jno
adc
loop
in
inc
sbb
test
in
xchg
xchg
aad
lds
ror
test
dec
(bad)
sbb
cmp
adc
(bad)
sbb
cmp
adc
mov
sbb
jno
adc
loop
in
inc
sbb
test
in
xchg
xchg
xchg
and
int
sbb
xchg
xchg
lds
ins
and
int
sub
lds
lea
sbb
xor
(bad)
sbb
cmp
adc
mov
sbb
popf
xchg
xchg
sub
jmp
sub
mov
popf
adc
fadd
jnp
inc
dec
(bad)
sbb
cmp
adc
(bad)
sbb
cmp
adc
mov
sbb
jno
adc
loop
in
inc
sbb
test
in
xchg
xchg
icebp
and
jnp
ror
adc
retf
xchg
xchg
lds
int
lds
ror
bnd
and
sahf
cld
sbb
and
jnp
push
lds
lea
sbb
xor
(bad)
sbb
cmp
adc
mov
sbb
jno
adc
loop
in
inc
sbb
and
jnp
ja
jnp
lea
or
jnp
jmp
sub
dec
sbb
sbb
cmp
push
cmc
jnp
xchg
add
les
cmp
cdq
inc
jnp
jmp
sub
inc
cmc
jnp
xchg
add
adc
jnp
push
scas
jnp
adc
jnp
adc
sub
(bad)
sbb
cmp
fst
mov
jnp
jmp
sub
inc
call
mul
inc
xchg
mul
inc
cmp
out
cmp
jmp
xchg
jmp
xchg
fnstsw
lds
aam
nop
sbb
adc
and
dec
or
dec
popf
and
test
sbb
xchg
add
adc
clc
mov
adc
lea
adc
adc
xchg
aaa
adc
lock
sbb
das
sbb
cmp
xchg
inc
and
dec
mov
sbb
xor
lds
mov
jecxz
repnz
xchg
ds
popf
add
sbb
xchg
test
inc
(bad)
jmp
repnz
and
sahf
push
add
or
neg
inc
sub
adc
adc
jno
in
xchg
adc
sbb
sbb
sbb
clc
fbstp
int3
mov
sbb
neg
inc
dec
(bad)
scas
jmp
mov
sbb
sub
dec
mov
in
xchg
neg
inc
sub
clc
fistp
int3
mov
sbb
neg
inc
sub
neg
inc
dec
(bad)
out
cmp
adc
repz
jmp
repnz
mov
test
xchg
xor
adc
adc
(bad)
lods
cmp
adc
clc
fisttp
jge
cmp
add
jmp
repnz
inc
ret
in
cmp
sbb
test
adc
js
out
cmp
xor
test
adc
lds
repz
(bad)
outs
out
cmp
jmp
in
pushf
neg
inc
dec
(bad)
mov
jle
adc
jle
adc
jle
adc
cdq
inc
xchg
jmp
sub
sub
jb
sbb
sbb
test
cld
sub
sbb
dec
mov
in
lods
imul
retf
xchg
xchg
cmp
sar
jnp
rcl
mov
in
cs
xchg
in
xor
jmp
mov
in
xchg
adc
xchg
pop
out
jnp
popf
add
popa
ficom
repz
lds
sub
or
jmp
jp
xchg
mov
in
stc
jle
(bad)
int3
lea
fnstsw
adc
jnp
adc
xchg
imul
les
cdq
inc
jmp
jmp
sub
xor
xchg
retf
jnp
adc
(bad)
test
test
inc
sub
clc
fistp
clc
test
adc
je
rol
sbb
cmp
dec
cld
mov
mov
lahf
test
lds
cdq
inc
mul
jmp
sub
gs
jnp
cdq
inc
out
jmp
sub
mov
sub
repnz
pushf
xchg
xchg
mov
in
dec
mov
in
sub
adc
retf
repz
jnp
inc
lods
jo
push
lds
sbb
mov
jae
sbb
sbb
fst
adc
out
jmp
jmp
xchg
xlat
les
out
cmp
cwde
ror
nop
add
inc
out
jmp
clc
repz
xchg
sub
in
sub
clc
fistp
inc
mov
cld
in
sbb
inc
adc
jnp
in
hlt
adc
cmp
adc
jnp
mov
sub
repnz
and
sahf
pusha
ds
popf
add
cld
jmp
inc
dec
sahf
mov
adc
cs
icebp
inc
xchg
or
sub
dec
int
data16
in
push
adc
xchg
jno
lds
push
cmp
and
adc
lock
in
dec
das
sbb
adc
push
push
sbb
mov
xchg
rcl
jnp
inc
sub
test
dec
das
sbb
xor
jnp
cld
mov
sbb
xor
dec
mov
jno
xchg
adc
test
adc
jnp
xor
jnp
popf
add
in
sub
ret
or
repz
ds
popf
add
pop
call
loop
sbb
add
adc
lock
call
xor
dec
fwait
and
xlat
nop
repnz
lods
lds
adc
loopne
adc
sub
jbe
dec
sub
dec
mov
adc
rcl
dec
mov
sub
cmp
shr
neg
inc
xchg
xchg
cmc
cmp
jnp
adc
inc
jp
jmp
sub
push
jne
in
add
jmp
jnp
pusha
shl
dec
adc
inc
sub
repnz
jo
inc
fld
cs
icebp
inc
xchg
cmovae
daa
call
and
pop
in
dec
mov
sbb
adc
ror
int3
pop
jmp
xchg
push
sub
repz
sbb
lds
pop
adc
inc
ficomp
sub
je
push
cmp
fist
xchg
adc
leave
xchg
push
sub
repz
add
push
sub
jno
lods
cmp
adc
test
cmp
sbb
rcl
inc
mov
lds
jmp
test
add
dec
or
dec
popf
and
dec
inc
xchg
lds
in
popf
xchg
push
cmp
fnstsw
adc
jle
adc
jle
adc
jle
adc
jle
adc
adc
jnp
adc
jnp
popf
add
sbb
dec
in
inc
ficomp
sub
adc
inc
scas
dec
in
sub
call
jmp
and
pop
in
dec
mov
sub
lock
mov
cmp
jnp
adc
lock
test
xchg
jno
lds
adc
lock
xchg
inc
cmp
jnp
adc
lock
test
xchg
push
cmp
jnp
cli
mov
sbb
jp
jle
test
xor
cmp
cld
icebp
push
sbb
jp
jle
test
test
sbb
loope
sbb
jp
jle
test
pusha
cmp
cld
rcl
adc
xchg
mov
lds
adc
lock
adc
in
lds
adc
lock
xor
jnp
adc
lock
mov
xor
jnp
adc
lock
push
lds
inc
dec
or
dec
stos
jae
ret
cmp
in
dec
mov
xrelease
sbb
lods
xchg
pushf
push
lds
out
lock
xchg
xchg
dec
xor
jnp
call
xchg
sub
stc
in
adc
xchg
pushf
push
lds
out
lock
mov
xor
jnp
call
test
add
jnp
mov
in
adc
xchg
pushf
push
lds
out
lock
test
xchg
adc
lds
in
in
adc
fldz
pop
adc
nop
cmp
test
cmp
jle
test
or
sbb
and
xchg
and
in
adc
mov
arpl
inc
cmp
jle
test
cmp
cmp
cld
jns
sbb
xchg
and
in
adc
fdivr
lea
cmp
jle
test
xor
cmp
cld
pop
pop
sbb
xchg
and
pop
adc
add
adc
fadd
mov
sbb
test
nop
cmp
cld
mov
sbb
mov
test
and
popf
cmp
adc
leave
xchg
popa
int
mov
shr
sub
in
add
sbb
cmp
jle
sub
and
loopne
adc
neg
xchg
sub
sbb
test
and
sbb
sub
pop
loopne
lock
in
out
ds
scas
jnp
adc
jnp
xchg
xchg
adc
cmc
xchg
cmc
sbb
sbb
sbb
fcomp
test
adc
dec
das
mov
daa
lahf
add
jo
adc
jle
adc
adc
sub
sbb
sbb
pop
adc
jnp
xor
jnp
mov
in
adc
xchg
adc
jnp
adc
dec
das
mov
pop
mov
jnp
test
jnp
lahf
add
jo
adc
rcl
adc
cmp
jl
cmps
pop
adc
jnp
cmc
loopne
sbb
scas
jnp
push
scas
jnp
adc
jle
adc
scas
jnp
test
jnp
jle
adc
jle
adc
cld
loope
sbb
mov
sub
lock
push
lds
jno
cmp
mov
pop
mov
jnp
add
dec
sbb
adc
adc
sub
sbb
sbb
pop
adc
jnp
popa
loopne
sbb
scas
jnp
and
in
adc
jnp
and
imul
jnp
jle
adc
jl
jnp
inc
lods
arpl
push
lds
ror
jnp
adc
inc
ds
fdivr
in
xor
jle
test
and
sbb
test
push
cmp
jle
adc
adc
lds
jle
adc
adc
sub
sbb
sbb
pop
adc
jnp
jmp
leave
in
adc
jnp
and
in
adc
jnp
and
imul
jnp
jl
jnp
adc
push
jae
lds
jl
cmps
pop
adc
mov
sbb
add
adc
outs
test
adc
jmp
dec
test
adc
jmp
sbb
jle
adc
add
adc
cmc
xchg
xchg
sbb
sbb
xchg
xchg
xor
jnp
cld
pop
cmp
xchg
add
jl
lds
popa
enter
adc
cmp
adc
sub
pop
loope
sbb
pop
adc
jnp
push
les
jmp
xchg
xchg
xchg
sub
adc
dec
das
mov
jnp
xchg
cmp
jnp
jle
adc
outs
lods
js
xchg
xchg
adc
cmc
xchg
xchg
sbb
sbb
xchg
cmp
xchg
cmp
jle
test
and
sbb
test
je
cmp
jl
jp
adc
inc
jae
lds
jl
jnp
adc
js
xchg
xchg
adc
cmc
xchg
xchg
sbb
sbb
xchg
icebp
aaa
lds
cmp
sbb
clc
and
and
in
adc
jnp
and
imul
popf
sbb
jnp
adc
jnp
jl
cmps
pop
adc
mov
sbb
imul
push
(bad)
jecxz
repnz
cld
dec
mov
das
mov
pop
mov
jnp
add
cli
sbb
jnp
add
jnp
jl
jnp
inc
lods
sub
push
lds
ror
jnp
adc
sbb
adc
fsubr
xchg
adc
dec
das
mov
pop
mov
jnp
add
sbb
or
jnp
jl
jnp
adc
jnp
adc
adc
xchg
into
sbb
sbb
xchg
xor
and
cmp
jle
test
and
sbb
test
push
cmp
jle
adc
adc
jnp
and
mov
sub
sbb
sbb
pop
adc
jnp
loope
jnp
mov
out
adc
jnp
and
in
adc
jnp
and
imul
xor
adc
adc
adc
jnp
jl
cmps
pop
adc
mov
sbb
jns
sbb
out
mov
jmp
dec
test
adc
jmp
sbb
jl
jp
adc
jmp
lds
inc
lods
cmps
cli
push
lds
sbb
xchg
adc
jnp
cld
inc
pop
sbb
(bad)
mov
jmp
dec
test
adc
jmp
sbb
jl
jnp
adc
mov
(bad)
lds
inc
lods
jmp
push
lds
sbb
xchg
adc
jnp
cld
sbb
push
(bad)
imul
sbb
test
and
sbb
test
je
cmp
jle
adc
jl
jnp
adc
outs
jae
(bad)
jl
call
lds
sbb
lds
adc
jnp
mov
in
adc
jnp
and
in
adc
jnp
and
arpl
lods
mov
adc
adc
jl
jnp
inc
lods
cmps
cli
push
lds
sbb
xchg
adc
jnp
cld
or
adc
pop
test
adc
jmp
dec
test
adc
jmp
aas
mov
jl
jnp
adc
rcr
adc
adc
inc
lods
cwde
rcl
loope
xchg
adc
call
xor
test
popf
cmp
xchg
mov
cmp
popf
and
test
mov
sbb
lds
out
leave
xchg
popa
int
pop
jecxz
test
push
lds
in
add
sbb
cmp
lods
stc
sub
xchg
push
sub
fdivr
test
sbb
cmp
cld
in
sbb
ds
xchg
xchg
add
push
sbb
jnp
and
in
adc
jnp
lahf
add
push
cmp
adc
jle
adc
adc
sub
and
sbb
pop
adc
jnp
adc
xchg
std
xor
jnp
push
cmp
jle
test
and
sbb
sub
dec
ds
or
add
sti
dec
jl
mov
(bad)
push
lds
sbb
jne
sbb
jg
push
lds
sbb
lock
test
adc
jmp
aas
mov
adc
cmp
xchg
jg
scas
sub
lods
jb
xchg
xchg
adc
cmc
xchg
into
sbb
sbb
xchg
imul
adc
jle
adc
jle
adc
jle
adc
jle
adc
adc
jnp
sbb
outs
repz
add
fmul
(bad)
jnp
jle
sub
pop
mov
sbb
test
and
sbb
test
je
cmp
jle
adc
rcl
(bad)
(bad)
jnp
inc
lods
cmps
cli
push
lds
sahf
enter
adc
js
adc
fdiv
mov
xchg
shr
adc
jl
jp
adc
dec
xrelease
sbb
pop
adc
jnp
push
les
jmp
xchg
xchg
xchg
mov
sub
pop
adc
push
or
jl
jp
adc
dec
xrelease
sbb
rcl
sbb
adc
lds
and
or
lds
sbb
lock
test
adc
jmp
sbb
adc
scas
outs
jno
lods
js
xchg
xchg
adc
cmc
xchg
xchg
sbb
sbb
xchg
jge
lds
xchg
cmp
popf
cmp
adc
jmp
dec
test
adc
jmp
sbb
adc
scas
outs
jae
lds
jl
jnp
inc
lods
cmps
cli
push
lds
sahf
enter
adc
pop
add
(bad)
mov
in
lds
jle
test
push
cmp
jle
adc
jp
outs
sbb
sub
sbb
sbb
pop
adc
jnp
std
fstp
mov
ficomp
inc
mov
lds
adc
dec
das
mov
pop
mov
jnp
add
sbb
xchg
lds
jl
jnp
adc
jnp
adc
adc
xchg
into
sbb
sbb
xchg
mov
lds
and
cmp
jle
test
and
sbb
test
push
cmp
jle
adc
adc
jnp
mov
jnp
jle
adc
adc
sub
sbb
sbb
pop
adc
jnp
fstp
mov
out
adc
jnp
and
in
adc
jnp
and
imul
ret
lds
mov
adc
jnp
jl
cmps
pop
adc
mov
sbb
std
sbb
out
mov
jmp
dec
test
adc
jmp
aas
mov
jl
jp
adc
popf
sbb
jnp
inc
lods
add
ror
jnp
adc
test
adc
fsub
xchg
in
hlt
adc
icebp
in
adc
jnp
and
imul
jnp
jl
jnp
adc
gs
lds
jl
mov
(bad)
push
lds
sbb
add
fstp
jmp
dec
test
adc
jmp
sbb
jl
jnp
adc
push
jno
lods
jnp
xchg
xchg
adc
adc
lds
adc
cld
push
adc
fadd
add
jnp
adc
dec
jnp
xchg
or
push
jno
scas
outs
jae
(bad)
jl
call
lds
sbb
lds
inc
fdivr
mov
in
adc
mov
inc
lds
adc
dec
das
mov
jnp
xchg
or
pop
jno
scas
outs
jae
(bad)
jl
call
lds
sbb
lds
add
jnp
mov
in
adc
jnp
and
in
adc
jnp
and
ins
jae
lds
jl
jp
adc
gs
(bad)
jl
mov
rcl
sbb
sbb
adc
jecxz
push
lds
repz
xor
adc
and
fld
cs
icebp
inc
xchg
add
sub
pop
shr
jl
xchg
jg
adc
pushf
xchg
push
sub
fdivr
adc
pop
scas
jnp
pop
lods
jnp
adc
test
sub
repnz
pop
jnp
adc
jnp
cld
imul
sti
jb
sbb
xchg
(bad)
cmp
push
xor
adc
neg
xchg
neg
xchg
neg
xchg
test
lods
inc
scas
push
lds
sbb
test
xchg
add
in
xor
sub
scas
jnp
popa
cmp
dec
iret
xchg
inc
push
cmp
jmp
ja
popa
int
repnz
in
dec
sbb
dec
mov
outs
or
ds
cmp
or
pop
adc
jp
adc
xchg
cwde
mov
test
dec
or
dec
popf
and
not
les
inc
xchg
lds
adc
in
mov
js
jnp
mov
cmp
cdq
inc
jnp
jmp
sub
jge
jnp
cld
shl
jl
sbb
test
dec
cmp
data16
push
or
pop
adc
(bad)
sbb
cmp
adc
push
in
mov
jae
jne
sbb
cmp
repz
sub
arpl
push
or
pop
adc
(bad)
sbb
cmp
adc
push
in
mov
jae
je
sbb
cmp
repz
jnp
xchg
mov
adc
movs
xchg
xchg
lds
add
jnp
imul
xor
adc
test
inc
sub
cli
in
or
mov
adc
xchg
xchg
lds
add
jnp
imul
clc
stos
push
(bad)
adc
test
inc
sub
sti
data16
push
or
pop
adc
(bad)
sbb
cmp
adc
push
in
mov
jae
je
sbb
cmp
repz
jnp
popf
xor
xchg
jmp
repnz
adc
cmps
xchg
xchg
lds
add
jnp
imul
pop
test
adc
test
inc
sub
sti
data16
push
or
pop
adc
(bad)
sbb
cmp
adc
push
in
mov
jae
ja
sbb
cmp
repz
lds
sbb
pop
adc
xor
push
(bad)
adc
test
inc
lods
jnp
push
lds
jae
push
cmp
jl
retf
lods
cmp
cmp
cld
lds
adc
mov
jmp
add
inc
dec
or
pop
adc
repnz
sub
movs
pop
xor
lods
out
sbb
pushf
xchg
push
cmp
fcomp
fnstsw
cdq
cdq
jge
inc
xchg
xchg
sbb
cmp
pusha
int
sbb
sbb
adc
and
dec
or
pop
adc
repnz
xchg
sub
adc
sub
jnp
cmp
xor
jp
popf
add
imul
xchg
xchg
and
lds
rcr
sbb
pop
mov
pushf
push
mov
jmp
sti
cmps
out
test
adc
ja
sbb
cmp
repz
jnp
lods
cdq
jnp
adc
popf
xchg
xchg
and
test
(bad)
push
or
pop
adc
(bad)
mul
cmp
adc
(bad)
call
popa
aam
cld
cmps
xchg
xchg
sub
add
jnp
test
ror
jl
enter
(bad)
mul
cmp
adc
(bad)
call
popa
aam
add
sub
add
jnp
in
popf
xchg
xchg
and
mov
in
ret
push
or
pop
adc
(bad)
mul
cmp
adc
(bad)
call
popa
aam
push
cmps
xchg
xchg
sub
add
jnp
test
int
or
pop
adc
(bad)
mul
cmp
adc
mov
repnz
inc
jecxz
test
in
cmp
cmps
xchg
xchg
sub
add
jnp
test
iret
push
or
pop
adc
(bad)
mul
cmp
adc
(bad)
call
popa
aam
shl
sub
add
jnp
test
leave
push
or
pop
adc
(bad)
mul
cmp
adc
mov
fwait
test
enter
(bad)
iret
pop
adc
(bad)
mul
cmp
adc
(bad)
call
popa
aam
cmp
sub
add
jnp
fs
cdq
inc
xchg
in
jmp
sub
push
sub
adc
adc
xchg
fwait
ja
sbb
sub
or
cmp
cmps
out
test
es
cwde
test
lds
(bad)
jnp
popf
xor
cli
fst
push
adc
jl
fistp
sub
clc
fistp
(bad)
imul
cmp
push
lds
test
xchg
jmp
jnp
nop
outs
jns
adc
(bad)
out
cmp
adc
sti
cmps
jmp
test
cs
adc
cmp
jmp
xor
and
cmp
jae
push
cmp
cdq
inc
xchg
jmp
sub
mov
jnp
xchg
add
test
lds
xor
cdq
arpl
adc
mov
xchg
aad
xchg
(bad)
ret
or
mov
les
jecxz
cmp
adc
inc
jnp
test
popa
repnz
ds
cmp
cdq
inc
xchg
jmp
sub
and
xor
mov
push
cmp
cdq
inc
xchg
jmp
sub
add
jnp
xchg
add
push
lods
jnp
adc
neg
inc
sub
cli
in
pushf
(bad)
jnp
cdq
inc
xchg
jmp
sub
push
cmp
cdq
inc
xchg
jmp
sub
cmc
sar
jl
mov
out
cmp
adc
mov
in
cmp
repz
inc
xchg
jmp
clc
fist
xchg
neg
inc
lods
add
call
sub
clc
fild
jnp
xchg
cmp
rol
lds
adc
(bad)
call
sub
clc
fistp
int3
mov
sbb
(bad)
out
cmp
adc
dec
(bad)
jecxz
cmp
rol
jecxz
cmp
adc
test
jl
ficomp
lods
sahf
rcl
sahf
call
sub
clc
fild
neg
inc
sub
neg
inc
sub
repnz
int3
xor
int3
xor
jmp
sahf
int3
xor
jmp
xchg
int3
xor
jmp
js
lds
imul
and
dec
(bad)
out
cmp
adc
(bad)
out
cmp
adc
mov
jecxz
cmp
repz
jnp
popf
inc
scas
in
jmp
mul
inc
sub
lock
shl
in
mov
cmp
add
inc
(bad)
jecxz
cmp
sahf
call
cmp
out
in
cmp
cdq
inc
xchg
jmp
sub
mov
js
in
cmp
test
dec
pop
sbb
xchg
xchg
xchg
add
and
adc
(bad)
jecxz
cmp
loopne
test
jl
or
scas
jnp
adc
lock
jnp
cdq
inc
xchg
jmp
sub
jo
jecxz
cmp
cwde
ror
repnz
cmp
jmp
xchg
xchg
push
lds
cli
mov
sbb
xchg
jge
lds
std
or
inc
fld
jg
inc
dec
sahf
mov
cld
sub
adc
sub
add
mov
xchg
int3
in
mov
stos
push
lds
sbb
add
sub
repnz
mov
test
sbb
sub
adc
cld
icebp
outs
sbb
lock
sbb
dec
test
ret
add
in
test
xlat
add
mov
jae
pop
cmp
cld
push
push
adc
test
adc
adc
inc
aam
sbb
mov
xchg
push
add
jnp
(bad)
fmul
adc
jg
adc
neg
inc
cmp
adc
cmp
adc
jp
test
cdq
inc
retf
cmp
repz
test
xchg
add
jmp
jnp
sbb
sbb
cmp
sbb
pop
outs
mov
mov
pop
adc
int3
and
popf
inc
jecxz
jmp
repnz
or
test
jbe
sub
out
ret
or
mov
les
xchg
out
dec
out
mov
xchg
jbe
in
les
sbb
int
cmps
sub
add
repnz
das
mov
add
pslld
dec
dec
mov
jmp
stc
cmp
jmp
icebp
sahf
cmps
sub
rol
imul
cmp
inc
sar
popf
pop
(bad)
fst
ins
xchg
in
idiv
in
dec
mov
xchg
xchg
xchg
in
xchg
adc
fcomp
cmp
cdq
inc
in
jmp
sub
and
(bad)
mov
test
inc
dec
(bad)
stos
cli
cmp
adc
inc
or
mov
cld
movs
mov
add
push
adc
cdq
inc
in
jmp
sub
cmp
ficom
adc
cwde
xchg
xchg
push
xchg
in
dec
mov
adc
lds
cmps
into
xchg
test
jl
mov
test
xchg
movs
pop
lds
xlat
mov
(bad)
jns
cmp
adc
pop
sbb
iret
rcl
mov
pop
cmp
jl
fistp
sub
mul
cdq
lock
push
adc
jnp
jb
bnd
cmp
outs
mov
mov
into
xchg
xor
cmp
cld
popf
push
stc
stc
cmp
adc
pop
sbb
fld
push
lds
mov
pop
cmp
jl
in
adc
push
or
(bad)
movs
stc
cmp
adc
jb
adc
mov
adc
adc
jle
adc
jle
adc
jl
jnp
push
lods
jnp
push
lds
xchg
push
jno
sbb
adc
inc
sub
cli
fsubr
fistp
rol
jnp
push
jge
xchg
xchg
jo
in
xchg
xchg
jns
lds
cdq
jo
in
inc
mov
push
inc
inc
sbb
xor
push
mov
mov
cmp
scas
cld
sub
scas
jnp
push
jge
jno
lods
mov
push
lds
adc
mov
sbb
mov
sti
cmp
adc
imul
fdivr
cmp
in
scas
jnp
popa
jge
dec
cdq
js
hlt
jmp
sub
popa
jno
sbb
dec
mov
in
cmp
jmp
iret
repz
retf
jmp
iret
repz
sbb
neg
cmc
sbb
sbb
pop
cmp
popf
xor
adc
fstp
sbb
jnp
cmc
retf
popf
sub
jecxz
repnz
movs
sub
jmp
repnz
sbb
jnp
(bad)
jnp
popf
sub
adc
adc
cld
ins
imul
dec
ds
rol
jnp
call
sbb
fist
mov
adc
jnp
push
jns
repz
lds
jle
adc
jle
adc
jle
adc
jl
jnp
adc
call
xchg
adc
pusha
or
jnp
xor
jle
adc
cld
popf
jne
adc
jnp
aam
test
xchg
add
popf
enter
lds
xchg
mov
jae
pop
cmp
cld
cmc
jbe
adc
add
repz
jnp
popf
inc
xlat
imul
cmp
gs
jnp
test
xchg
ins
xchg
in
dec
mov
sbb
sub
sub
mov
cmp
jmp
(bad)
mov
cdq
inc
xlat
cmc
jmp
sub
jno
sbb
pop
adc
sub
adc
sti
repz
in
add
aam
jl
xor
mov
sbb
pop
fsub
jmp
mov
xchg
xchg
ins
xchg
in
xchg
adc
jle
adc
test
adc
jnp
add
jnp
inc
sub
neg
inc
scas
jnp
adc
sub
adc
jle
xchg
in
sbb
jnp
cld
mov
sbb
jnp
loopne
jnp
jle
test
adc
cmp
cld
movs
jne
adc
arpl
aad
jnp
popf
sbb
neg
xchg
xchg
movs
sbb
jnp
adc
jnp
adc
inc
adc
popa
adc
adc
repnz
xchg
sub
adc
sub
jp
imul
jnp
lahf
xor
aad
lahf
pop
jnp
imul
jecxz
retf
adc
int
sbb
aam
sbb
jmp
lds
pop
les
pusha
fiadd
adc
pusha
jae
adc
inc
sbb
jnp
std
push
jae
adc
inc
jae
xchg
sbb
sbb
jnp
and
inc
(bad)
jmp
repnz
clc
cmp
popf
inc
mov
fdivr
pop
adc
into
imul
cmp
xchg
add
xchg
sub
inc
jmp
jo
out
cmp
adc
retf
adc
jnp
xchg
or
test
push
cmp
cld
cmp
mov
sti
jmp
sbb
xchg
pop
lahf
push
stos
out
cmp
fdivr
test
sub
inc
lahf
out
cmp
enter
xchg
sub
xchg
jmp
out
xlat
jmp
mov
jno
dec
(bad)
(bad)
jmp
sbb
sahf
hlt
cmp
jmp
sub
scas
jnp
and
rcl
adc
repnz
cmp
pop
scas
push
lds
nop
ja
sbb
pop
scas
push
(bad)
mov
les
jg
xchg
xchg
clc
or
sbb
dec
jae
xchg
iret
cs
dec
inc
inc
imul
add
lds
cld
fwait
popf
in
pushf
xchg
jae
lds
in
hlt
adc
lds
sbb
dec
lds
adc
js
adc
xchg
push
adc
jnp
adc
cmp
sub
cmp
adc
aad
sbb
sub
dec
mov
sbb
cmp
mov
lds
adc
pop
adc
aas
and
mov
pop
adc
inc
and
cmc
loop
adc
dec
and
xor
push
and
push
fcomp
mov
and
mov
and
fcomp
mov
and
leave
in
adc
ja
adc
in
adc
dec
adc
jnp
adc
push
or
sub
(bad)
jecxz
cmp
adc
imul
fcomp
mov
and
icebp
loop
adc
jbe
movs
aad
sbb
mov
repz
cmp
cld
popa
ja
adc
xchg
pop
pop
lds
mov
xchg
jmp
clc
mov
adc
(bad)
sti
jmp
pop
ja
adc
(bad)
imul
cmp
popf
cmp
xchg
inc
adc
jnp
rcl
je
adc
test
adc
neg
inc
cmp
mov
sbb
jnp
xor
jnp
adc
sub
push
lds
sbb
movs
jo
adc
dec
xrelease
sbb
ss
adc
mov
and
jnp
xchg
les
jmp
xor
es
sbb
lds
jmp
jnp
cdq
inc
jp
jmp
sub
and
pop
adc
hlt
adc
test
xchg
or
jp
popa
cmp
jecxz
mov
jno
lods
and
xchg
sub
clc
fistp
clc
test
adc
push
cmp
adc
jl
mov
repz
sbb
lock
mov
push
lds
jo
jnp
popf
cmp
neg
inc
dec
(bad)
out
jmp
call
(bad)
out
jmp
push
ja
adc
mov
sbb
(bad)
sbb
cmp
push
lds
fwait
test
lds
cmp
adc
jl
mov
repz
jnp
jmp
mov
xchg
or
call
dec
jp
jmp
clc
shr
test
daa
adc
cmp
jnp
adc
pushf
ret
adc
cld
icebp
jno
adc
dec
pop
add
jg
adc
(bad)
sbb
cmp
xchg
lds
adc
cmc
pop
pop
sub
add
sbb
pop
adc
jnp
loope
jnp
jmp
mov
xchg
mov
pushf
sar
inc
jnp
jmp
jp
xchg
lds
lods
dec
sbb
dec
mov
in
xchg
neg
inc
lods
push
rcl
sahf
loope
test
inc
sub
clc
fild
neg
inc
cmp
mov
jnp
add
js
in
cmp
xor
jnp
adc
mov
sbb
mov
dec
fwait
mov
jnp
cmp
retf
adc
xor
adc
mov
popf
inc
xchg
out
cmp
fcomp
cmp
xchg
xchg
xor
ss
xchg
xchg
xor
sub
rcl
adc
adc
jnp
xchg
les
cmp
sbb
gs
adc
(bad)
sbb
cmp
jle
adc
adc
jo
adc
test
cmp
sbb
jge
sbb
in
adc
neg
inc
dec
(bad)
out
jmp
addr16
dec
(bad)
out
jmp
adc
adc
mov
sbb
(bad)
sbb
cmp
push
lds
fwait
test
lds
cmp
adc
jl
mov
repz
lock
test
xchg
dec
sbb
jnp
sub
jnp
cdq
dec
jp
jmp
clc
shr
test
daa
adc
cmp
jnp
adc
push
ret
adc
cld
mov
sbb
dec
xor
int
sbb
ret
adc
(bad)
in
cmp
xchg
cmp
push
adc
cmc
pop
pop
sub
add
sbb
pop
adc
jnp
and
jnp
jmp
push
test
xchg
stc
adc
jnp
fadd
jnp
xchg
inc
test
jmp
jp
xchg
cmp
imul
les
loope
test
inc
lods
push
rcl
sahf
loope
test
inc
sub
clc
fild
neg
inc
cmp
mov
sbb
jnp
xor
jnp
adc
push
push
lds
sbb
jns
sbb
dec
cmp
ret
std
mov
adc
(bad)
in
cmp
xchg
cmp
push
adc
cmc
pop
pop
sub
add
sbb
pop
adc
jnp
imul
pop
test
xchg
xor
lds
add
jnp
xchg
inc
test
jmp
jp
cdq
les
push
inc
inc
sbb
adc
test
jmp
inc
fldenv
repnz
and
sahf
cld
cmp
jmp
repnz
cmp
xchg
xchg
xor
ss
xchg
xchg
xor
or
aad
jecxz
and
sahf
lock
jmp
repnz
adc
jle
adc
jle
adc
adc
cmp
pop
cmp
cld
pop
jle
adc
(bad)
out
jmp
jno
cmp
out
jmp
sbb
jnp
push
dec
jbe
lea
cmp
in
dec
mov
jmp
cmp
push
lds
cld
and
jnp
xchg
xor
adc
jl
cdq
pop
adc
into
out
jmp
sbb
cmp
shr
test
daa
adc
(bad)
in
test
inc
xchg
test
cmp
out
jmp
sbb
neg
inc
scas
jns
in
cmp
jmp
(bad)
in
cmp
xchg
in
les
out
jmp
sbb
lock
mov
adc
jnp
adc
jnp
adc
jnp
adc
adc
test
jnp
popf
inc
(bad)
in
cmp
hlt
push
lea
jle
adc
jle
test
cld
add
jbe
mov
jnp
fdivr
cmp
in
dec
mov
jmp
cmp
push
lds
cld
lds
adc
jnp
xchg
xor
adc
jl
mov
out
jmp
sbb
jo
in
cmp
fcom
test
jnp
adc
sbb
dec
mov
jae
jno
sbb
pop
adc
sub
adc
sti
xrelease
in
add
adc
dec
adc
sar
cmp
fwait
out
cmp
fdivr
aam
outs
add
push
or
mov
in
int
jmp
dec
sahf
mov
add
cs
icebp
inc
xchg
pop
inc
xchg
sub
popa
int
ins
push
jbe
mov
jecxz
repnz
call
leave
inc
sbb
or
adc
push
or
lds
and
pop
adc
jo
and
fcomp
adc
ret
mov
repz
ds
popf
add
cld
pop
cmp
popa
into
test
xchg
cmp
cld
dec
jg
adc
dec
fwait
mov
jnp
pop
cmp
mov
sbb
lock
test
push
adc
lock
xchg
jns
lds
in
in
adc
test
pop
cmp
mov
sbb
lock
test
push
adc
lock
test
xchg
sub
and
in
adc
outs
fwait
sub
push
adc
lock
xchg
xchg
add
lds
in
in
adc
test
add
imul
test
nop
cmp
cld
cmp
mov
pop
adc
jge
or
out
pop
adc
xor
dec
mov
pop
adc
jge
or
in
adc
dec
aaa
mov
aas
mov
pop
adc
jge
or
jmp
adc
dec
xor
dec
data16
ret
inc
sbb
dec
cmp
dec
data16
lea
ficomp
mov
nop
or
in
adc
mov
por
sub
sbb
ja
mov
jnp
jecxz
repnz
loopne
mov
fld
pop
adc
xchg
test
jnp
adc
pop
pop
out
jnp
test
jnp
adc
pop
or
xchg
test
jnp
adc
pop
movntq
jnp
adc
pop
cmp
xchg
test
jnp
adc
pop
aaa
out
jnp
test
jnp
adc
pop
sub
xchg
test
jnp
adc
pop
das
out
jnp
test
jnp
adc
repnz
xchg
movs
adc
jnp
rol
cmp
adc
popf
cmp
jle
adc
mov
adc
mov
xchg
rol
inc
cmp
nop
pop
push
retf
sbb
cmp
jp
sbb
adc
mov
cwde
in
in
call
adc
jnp
adc
sub
and
xlat
pushf
cli
not
imul
inc
jg
sub
imul
mov
xor
inc
jg
jmp
jnp
adc
das
aas
sbb
mov
in
aas
mov
jmp
aas
aas
sbb
lock
mov
push
loope
fstp
pop
pop
out
jnp
test
jnp
adc
pop
pop
out
jnp
test
jnp
adc
pop
push
out
jnp
test
jnp
adc
pop
push
out
jnp
test
jnp
adc
pop
dec
out
jnp
test
jnp
adc
pop
dec
out
jnp
test
jnp
adc
pop
inc
out
jnp
test
jnp
adc
pop
inc
out
jnp
test
jnp
adc
pop
jnp
xchg
test
jnp
adc
pop
jg
xchg
test
jnp
adc
pop
jae
xchg
test
jnp
adc
pop
ja
xchg
test
jnp
adc
pop
imul
jnp
test
jnp
adc
pop
outs
out
jnp
test
jnp
adc
pop
arpl
xchg
test
jnp
adc
pop
addr16
jnp
test
jnp
adc
pop
fwait
out
jnp
test
jnp
adc
pop
lahf
out
jnp
test
jnp
adc
pop
xchg
out
jnp
test
jnp
adc
pop
xchg
out
jnp
test
jnp
adc
pop
mov
xchg
test
jnp
adc
pop
(bad)
out
jnp
test
jnp
adc
pop
and
jnp
test
jnp
adc
pop
xchg
xchg
test
jnp
adc
pop
mov
test
jnp
adc
pop
mov
test
jnp
adc
pop
mov
xchg
test
jnp
adc
pop
mov
xchg
test
jnp
adc
pop
stos
out
jnp
test
jnp
adc
pop
scas
out
jnp
test
jnp
adc
pop
mov
test
jnp
adc
pop
cmps
out
jnp
test
jnp
adc
pop
(bad)
xchg
test
jnp
adc
pop
(bad)
xchg
test
jnp
adc
pop
shl
xchg
test
jnp
adc
pop
xlat
out
jnp
test
jnp
adc
pop
retf
out
jnp
test
jnp
adc
pop
iret
out
jnp
test
jnp
adc
pop
ret
out
jnp
test
jnp
adc
pop
(bad)
out
jnp
test
jnp
adc
pop
sti
out
jnp
test
jnp
adc
pop
jmp
xchg
test
jnp
adc
pop
repz
jnp
test
jnp
adc
pop
mul
xchg
test
jnp
adc
pop
jecxz
xchg
test
jnp
adc
pop
out
xchg
test
jnp
adc
pop
sbb
xchg
test
jnp
adc
pop
pop
loopne
jnp
test
jnp
adc
pop
adc
xchg
test
jnp
adc
pop
pop
loopne
jnp
test
jnp
adc
pop
or
xchg
test
jnp
adc
pop
pavgb
jnp
adc
pop
add
xchg
test
jnp
adc
pop
pop
loopne
jnp
test
jnp
adc
pop
cmp
xchg
test
jnp
adc
pop
aas
loopne
jnp
test
jnp
adc
pop
xor
xchg
test
jnp
adc
pop
aaa
loopne
jnp
test
jnp
adc
pop
sub
xchg
test
jnp
adc
pop
das
loopne
jnp
test
jnp
adc
pop
and
xchg
test
jnp
adc
pop
daa
loopne
jnp
test
jnp
adc
pop
pop
loopne
jnp
test
jnp
adc
pop
pop
loopne
jnp
test
jnp
adc
pop
push
loopne
jnp
test
jnp
adc
pop
push
loopne
jnp
test
jnp
adc
pop
dec
loopne
jnp
test
jnp
adc
pop
dec
loopne
jnp
test
jnp
adc
pop
inc
loopne
jnp
test
jnp
adc
pop
inc
loopne
jnp
test
jnp
adc
pop
jnp
xchg
test
jnp
adc
pop
jg
xchg
test
jnp
adc
pop
imul
jnp
test
jnp
adc
pop
outs
loopne
jnp
test
jnp
adc
pop
arpl
xchg
test
jnp
adc
pop
addr16
jnp
test
jnp
adc
pop
fwait
loopne
jnp
test
jnp
adc
pop
xchg
loopne
jnp
test
jnp
adc
pop
mov
xchg
test
jnp
adc
pop
(bad)
loopne
jnp
test
jnp
adc
pop
and
jnp
test
jnp
adc
pop
xchg
xchg
test
jnp
adc
pop
mov
test
jnp
adc
pop
mov
test
jnp
adc
pop
mov
xchg
test
jnp
adc
pop
mov
xchg
test
jnp
adc
pop
mov
test
jnp
adc
pop
cmps
loopne
jnp
test
jnp
adc
pop
fneni(8087
xchg
test
jnp
adc
pop
fnstsw
xchg
test
jnp
adc
pop
shl
xchg
test
jnp
adc
pop
xlat
loopne
jnp
test
jnp
adc
pop
retf
loopne
jnp
test
jnp
adc
pop
iret
loopne
jnp
test
jnp
adc
pop
ret
loopne
jnp
test
jnp
adc
pop
(bad)
loopne
jnp
test
jnp
adc
pop
sti
loopne
jnp
test
jnp
adc
pop
jmp
xchg
test
jnp
adc
pop
repz
jnp
test
jnp
adc
pop
mul
xchg
test
jnp
adc
pop
jmp
xchg
test
jnp
adc
pop
out
loopne
jnp
test
jnp
adc
pop
jecxz
xchg
test
jnp
adc
pop
out
xchg
test
jnp
.byte
