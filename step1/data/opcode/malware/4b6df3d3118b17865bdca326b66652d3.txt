lock
add
add
add
add
add
add
add
sbb
add
add
add
add
push
xor
add
out
add
adc
add
add
add
adc
pop
sbb
jae
add
or
push
push
push
jb
add
jo
adc
add
push
push
pop
jb
add
jo
adc
add
push
push
sbb
add
jo
adc
add
push
pop
push
jb
add
jo
adc
add
push
pop
pop
jb
add
jo
adc
add
push
pop
sbb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
jb
add
jo
adc
add
push
sbb
add
adc
add
push
sbb
add
adc
add
push
sbb
add
adc
add
push
push
push
jb
add
jo
adc
add
push
push
pop
jb
add
jo
adc
add
push
push
sbb
add
jo
adc
add
push
pop
or
jb
add
jo
adc
add
push
pop
or
jb
add
jo
adc
add
push
pop
or
jb
add
jo
adc
add
push
pop
or
jb
add
jo
adc
add
push
pop
or
jb
add
jo
adc
add
push
pop
or
jb
add
jo
adc
add
push
pop
or
jb
add
jo
adc
add
push
pop
or
jb
add
jo
adc
add
push
pop
or
jb
add
jo
adc
add
push
pop
or
jb
add
jo
adc
add
push
pop
or
jb
add
jo
adc
add
push
pop
or
jb
add
jo
adc
add
push
pop
or
add
adc
add
push
pop
or
add
adc
add
push
pop
or
add
adc
add
push
pop
push
push
jb
add
jo
adc
add
push
pop
push
pop
jb
add
jo
adc
add
push
pop
push
sbb
add
jo
adc
add
push
pop
movhps
add
jo
adc
add
push
pop
movhps
add
jo
adc
add
push
pop
nop/reserved
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
jb
add
jo
adc
add
push
pop
adc
add
adc
add
push
pop
adc
add
adc
add
push
pop
adc
add
adc
add
push
pop
push
push
jb
add
jo
adc
add
push
pop
push
pop
jb
add
jo
adc
add
push
pop
push
sbb
add
jo
adc
add
push
pop
pop
push
jb
add
jo
adc
add
push
pop
pop
pop
jb
add
jo
adc
add
push
pop
pop
sbb
add
jo
adc
add
push
jge
add
add
pop
fs
add
add
push
jge
add
add
push
jge
add
add
push
jge
add
add
and
add
add
jge
add
add
pop
lea
add
add
add
add
push
jge
add
add
adc
push
add
add
sub
add
or
add
sub
add
push
add
sub
add
xor
add
add
adc
jae
add
or
push
add
add
or
add
sub
add
or
pop
or
push
or
add
outs
pop
add
or
fsub
add
or
add
pop
sub
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
add
sbb
add
or
and
or
add
add
sbb
add
add
or
add
sub
add
sbb
add
pusha
add
add
add
add
jae
add
or
push
outs
sbb
add
jb
add
jo
jg
add
sbb
push
add
add
jo
outs
push
add
or
sub
add
or
push
pop
outs
and
add
jb
add
jo
and
add
push
inc
or
pop
or
push
add
push
add
or
add
add
or
add
add
add
add
push
push
add
add
add
sbb
add
pop
add
add
add
and
add
outs
and
add
jb
add
jo
and
add
jge
add
add
sub
mov
jnp
add
add
add
or
add
add
add
add
add
sub
add
or
add
jo
jnp
add
add
add
or
sub
add
or
add
add
add
add
and
ret
add
jo
sub
add
or
add
or
or
call
add
add
push
inc
adc
add
add
ficomp
add
add
add
add
pop
pop
or
inc
add
add
int
add
add
add
add
add
add
sub
add
or
add
jo
jnp
add
add
add
or
and
add
push
inc
adc
add
inc
add
sub
add
push
push
inc
adc
add
xor
add
sub
add
or
add
add
jnp
add
add
add
add
push
add
pop
jge
add
add
jnp
add
add
outs
sub
add
add
add
sub
add
sbb
or
add
jo
jnp
add
add
add
or
add
add
push
inc
adc
add
or
add
sub
add
add
add
add
sub
add
add
add
pop
add
add
add
add
add
add
arpl
push
mov
add
sub
add
sub
add
add
add
xor
add
add
adc
add
or
add
push
inc
or
sub
jnp
add
add
jnp
add
add
jnp
add
add
sub
mov
add
or
or
add
add
sub
add
xor
hlt
add
add
add
adc
push
or
fiadd
add
add
jnp
add
add
pop
sub
add
and
add
push
inc
or
sub
add
add
push
sub
mov
add
or
add
or
inc
or
sub
add
add
pop
jb
add
jo
adc
add
add
jge
add
add
or
xchg
add
add
outs
add
add
add
pop
sub
mov
add
and
add
push
inc
or
sub
add
add
push
sub
mov
add
or
add
or
sub
add
add
pop
jb
add
jo
adc
add
add
add
add
sbb
add
jo
adc
add
add
pop
fs
add
add
add
pop
pop
or
pop
sbb
add
or
sbb
(bad)
call
or
add
sub
xor
add
add
add
add
adc
push
or
ret
add
add
add
add
add
call
sub
add
or
add
adc
mov
add
adc
add
add
add
add
sub
add
or
push
adc
sub
pop
adc
call
add
or
add
sub
add
add
inc
inc
sub
pop
add
or
or
or
add
jnp
add
add
add
add
add
pop
jge
add
add
add
add
add
add
or
pop
adc
adc
adc
mov
add
or
or
pop
pop
adc
adc
adc
adc
adc
cmp
(bad)
inc
push
pop
pop
or
add
add
add
add
or
or
sub
(bad)
jmp
add
add
add
add
dec
add
add
sbb
add
jae
add
or
add
add
pop
sbb
daa
add
or
add
jo
and
add
jae
add
or
sub
add
or
pop
add
add
or
add
push
outs
xor
add
add
outs
xor
add
add
or
sub
push
outs
xor
inc
or
outs
xor
add
add
outs
xor
add
add
fiadd
add
push
or
add
or
add
adc
add
add
add
add
sbb
push
add
add
or
add
add
jae
add
or
push
jb
add
jo
add
or
add
add
add
or
or
and
add
add
add
or
or
push
and
add
add
add
or
add
add
adc
sub
add
xor
add
outs
cmp
add
adc
adc
add
aaa
add
jo
xor
add
pop
pop
adc
cmp
add
xor
add
adc
aaa
add
jo
xor
add
pop
pop
pop
outs
cmp
add
jge
add
add
add
add
cmp
add
xor
add
pop
pop
outs
cmp
add
adc
adc
add
aaa
add
jo
xor
add
sbb
add
cmp
add
xor
add
adc
aaa
add
jo
xor
add
sbb
outs
cmp
add
jge
add
add
add
add
cmp
add
xor
add
pop
pop
outs
cmp
add
adc
adc
add
aaa
add
jo
xor
add
sbb
add
cmp
add
xor
add
adc
aaa
add
jo
xor
add
sbb
outs
cmp
add
jge
add
add
adc
inc
adc
adc
sub
add
or
fadd
adc
add
push
adc
sub
add
or
fsub
add
adc
add
add
add
add
adc
add
sbb
add
sub
add
adc
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
xor
loope
add
or
add
add
add
jnp
add
add
and
add
sub
add
or
add
add
add
add
ret
add
jo
sub
add
or
add
and
cmp
add
push
inc
or
sub
or
xor
adc
or
add
pop
jb
add
jo
jnp
add
add
add
or
sub
add
or
add
add
add
add
add
pop
adc
add
mov
add
or
add
add
ret
add
jo
sub
add
or
add
or
xor
adc
or
add
pop
jb
add
jo
jnp
add
add
add
or
sub
add
or
add
add
add
add
add
pop
adc
add
mov
add
or
add
fiadd
add
sub
add
add
add
add
add
sbb
add
add
dec
add
add
add
add
add
add
test
push
fld
add
adc
add
mov
add
adc
add
inc
push
inc
or
sub
sub
add
add
add
push
sub
mov
add
or
add
or
add
add
add
sbb
sub
add
and
add
push
inc
sub
pop
add
pop
sub
sub
add
push
add
add
pop
pop
or
pop
sbb
add
pop
sub
add
jnp
add
add
push
sub
mov
add
or
add
or
add
add
add
sbb
sub
add
and
add
push
inc
sub
pop
add
pop
sub
sub
add
push
add
add
add
xor
add
add
or
add
add
add
push
sub
mov
add
or
add
jo
sub
add
or
add
adc
push
adc
cmp
push
adc
call
add
add
add
add
xor
add
adc
cmp
jnp
add
add
xor
add
adc
push
add
or
or
or
add
jnp
add
add
mov
add
add
pop
jge
add
add
dec
add
add
outs
cmp
aas
add
jo
xor
add
pop
inc
push
inc
adc
adc
sub
add
add
pop
jb
add
jo
sub
add
or
or
or
adc
cmp
add
add
or
or
cmp
jnp
add
add
xor
add
adc
cmp
jnp
add
add
xor
add
adc
push
add
or
or
or
add
jnp
add
add
mov
add
add
pop
jge
add
add
xchg
add
add
or
add
jo
sub
add
or
add
adc
or
adc
arpl
or
or
adc
cmp
jnp
add
add
xor
add
adc
outs
cmp
jnp
add
add
xor
add
adc
push
add
or
or
or
add
jnp
add
add
add
add
add
pop
jge
add
add
add
adc
pop
adc
or
or
or
or
add
fiadd
add
adc
pop
pop
adc
adc
adc
mov
add
or
or
cli
(bad)
(bad)
inc
fiadd
add
add
pop
pop
pop
adc
adc
adc
mov
add
or
or
inc
(bad)
(bad)
inc
jnp
add
add
sbb
add
jo
adc
add
sub
add
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
mov
add
push
add
adc
add
add
add
jnp
add
add
add
inc
or
sub
jae
add
jnp
add
add
jnp
add
add
sub
add
es
sbb
daa
add
or
add
jo
and
add
pop
jae
add
or
push
add
add
add
jnp
add
add
outs
aas
add
or
push
outs
inc
add
or
push
outs
inc
add
or
add
add
pop
jge
add
add
sub
add
jnp
add
add
outs
sub
add
add
sub
adc
add
push
add
add
add
adc
add
or
add
push
inc
or
sub
sub
add
or
add
add
jnp
add
add
push
sub
jge
add
add
jnp
add
add
outs
sub
add
add
sub
add
jnp
add
add
outs
sub
add
add
add
add
adc
add
sub
add
push
add
adc
add
add
add
add
inc
sub
pop
add
push
sub
push
add
add
pop
add
or
add
add
inc
add
or
sub
xor
add
add
sldt
adc
add
add
or
add
add
add
add
sub
or
add
or
add
jnp
add
add
inc
add
or
add
add
add
add
add
inc
add
or
add
add
add
add
add
inc
add
or
add
add
sub
add
add
jnp
add
add
outs
sub
add
add
jnp
add
add
mov
add
outs
dec
add
or
add
add
add
inc
pop
add
push
jae
add
or
add
or
add
add
add
nop
pop
add
outs
dec
add
or
add
add
add
inc
sldt
push
jae
add
or
add
or
add
add
add
outs
sub
add
add
jnp
add
add
rcl
add
add
or
add
add
add
inc
adc
add
jae
add
or
add
or
add
add
rol
add
jae
add
or
dec
add
or
add
sub
add
add
pop
nop
jae
add
or
dec
add
or
add
sub
add
add
push
jb
add
jo
push
add
or
add
sub
add
add
jb
add
jo
push
add
or
add
sub
or
add
inc
push
add
push
jae
add
or
push
add
or
add
inc
add
dec
add
or
push
add
or
add
sub
add
add
push
sub
add
add
sub
add
add
add
push
sub
add
add
sub
sub
add
add
add
add
add
xor
add
add
adc
add
add
add
add
inc
push
inc
or
sub
add
jo
add
add
sub
or
add
or
add
or
push
adc
add
jle
add
add
sub
pop
sub
xor
add
add
add
add
adc
jle
add
add
sub
push
sub
add
adc
add
adc
add
or
add
adc
add
add
add
add
sub
push
sub
sbb
add
sub
add
je
add
add
sub
add
add
or
add
add
add
add
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
and
add
add
add
add
add
add
add
add
add
jmp
add
add
add
or
or
add
or
add
add
add
add
or
add
add
data16
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jmp
(bad)
mov
jns
stc
jmp
popf
cdq
lea
cmp
inc
and
xchg
cmps
or
jne
repnz
xchg
dec
iret
leave
repnz
retf
icebp
sahf
out
addr16
(bad)
pop
stc
jl
inc
dec
mov
pop
push
inc
mov
jb
mov
into
mov
cmp
je
out
loope
idiv
mov
add
nop
aad
outs
div
scas
div
out
adc
cld
aam
inc
je
mov
adc
dec
je
add
pop
mov
lock
in
xchg
(bad)
mov
pop
std
mov
and
shl
jae
cld
pop
mov
or
fidiv
es
mov
scas
xchg
inc
div
lods
adc
mov
call
add
dec
ret
inc
jne
xchg
rcl
out
int3
cs
les
retf
pop
fwait
outs
jp
jnp
(bad)
aas
stos
xchg
out
jbe
int
mov
(bad)
into
or
pop
and
xchg
jmp
je
cs
or
cmp
mov
pop
cmps
jp
lahf
jne
jns
addr16
retf
in
pusha
call
mov
outs
mov
mov
add
daa
or
mov
aam
lea
arpl
adc
fidiv
test
popa
push
(bad)
mov
icebp
mov
stos
enter
ins
in
sub
push
push
and
mov
dec
cmovle
(bad)
test
or
outs
(bad)
sbb
sar
ins
xchg
call
(bad)
jmp
je
mov
ja
pusha
mov
adc
fmulp
add
mul
push
inc
push
mov
dec
adc
cmp
or
adc
mov
xchg
inc
xor
mov
cli
cli
pop
push
lods
jecxz
je
imul
pop
arpl
push
sahf
popa
push
push
cdq
(bad)
mov
mov
retf
xchg
dec
(bad)
fmulp
sub
and
or
outs
or
pop
add
xchg
dec
das
push
sbb
cmps
(bad)
fstp
add
sub
(bad)
rcr
or
xor
and
jge
shr
fiadd
shl
xchg
dec
mov
xchg
call
lahf
addr16
shl
stc
pop
sub
jg
dec
mov
rol
call
add
sti
repz
adc
and
ins
sub
int3
movnti
call
sub
mov
and
cmps
and
inc
nop
push
(bad)
lods
sbb
mov
xchg
sub
mov
sbb
sbb
sub
inc
(bad)
jne
inc
push
hlt
mov
(bad)
jns
xchg
lds
mov
jge
jmp
outs
mov
addr16
pop
bound
push
bound
push
push
mov
jp
retf
test
jnp
or
xchg
or
outs
or
loop
inc
popf
sub
push
and
and
xchg
popa
pop
push
mov
(bad)
shl
mov
sbb
shl
add
shl
enter
cwde
cld
mov
pop
xchg
push
add
aaa
jmp
sub
retf
xchg
hlt
pop
cmps
test
mov
stos
(bad)
inc
xor
cmp
xor
jne
sub
inc
fistp
xor
mov
ins
mov
ins
mov
ficom
pushf
popf
mov
call
add
stc
popa
repnz
adc
add
mov
aad
push
mov
iret
dec
bound
adc
stos
mov
dec
clc
dec
xchg
outs
or
nop
cmps
mov
lods
mov
sbb
aaa
enter
lahf
mov
adc
add
inc
cwde
sbb
or
fimul
daa
call
jle
dec
push
dec
test
out
fisttp
dec
sub
cmp
aaa
jge
and
mov
sahf
inc
je
inc
xchg
or
scas
or
add
pop
imul
push
or
inc
iret
fldcw
jle
sbb
push
xchg
mov
push
or
inc
push
outs
mov
or
jp
add
xchg
inc
jg
movs
cmp
cmps
fidiv
jle
cdq
push
push
nop
pusha
dec
rcr
imul
mov
test
sub
dec
jg
(bad)
pop
cmp
dec
fidiv
imul
push
mov
push
inc
movnti
es
xchg
call
add
add
inc
je
shr
pusha
sbb
and
int
arpl
or
push
cdq
dec
sub
jge
pop
bnd
add
sbb
adc
dec
mov
jg
mov
or
repnz
adc
jne
cmp
adc
pusha
dec
dec
cmp
shl
or
inc
scas
add
pop
movs
aad
ins
jne
sti
mov
xchg
cmp
xchg
arpl
cmps
xor
fild
jb
inc
lods
push
stos
xchg
sub
outs
out
mov
shr
sbb
jle
add
or
mov
out
(bad)
xor
sub
mov
or
cwde
shr
adc
xchg
mov
outs
sub
inc
push
shr
pop
dec
test
add
sub
add
add
sbb
jmp
ret
cmp
adc
clc
jle
fisttp
and
(bad)
push
bnd
arpl
aam
scas
(bad)
repnz
adc
sti
xor
mov
in
and
pop
mov
popa
fs
jb
pop
mov
in
(bad)
xchg
lock
movs
mov
repz
popf
add
inc
add
mov
xchg
mov
sbb
pop
and
add
shl
mov
add
pop
add
push
rcl
adc
xchg
adc
push
js
add
fistp
push
cmc
push
jbe
adc
mov
clc
ss
out
dec
push
mov
pop
pop
ss
push
or
jl
ror
stc
xchg
ror
add
in
test
xchg
test
repz
cmp
(bad)
jae
fcmovb
cwde
push
lods
(bad)
imul
popf
fwait
cmp
adc
add
pop
scas
inc
fmul
hlt
clc
push
xchg
adc
or
retf
and
pop
es
and
mov
and
add
pop
adc
leave
movs
aaa
leave
lods
pusha
dec
xor
sub
enter
lahf
jp
movs
pop
sbb
retf
cli
xor
test
xchg
shr
push
(bad)
mov
vorps
js
push
and
bound
aam
out
mov
fistp
cmc
jmp
inc
jb
and
sub
sbb
pop
cmp
cmps
dec
jae
nop
fidivr
dec
push
call
or
xor
xchg
pop
das
loopne
mov
jb
out
push
scas
xchg
je
push
pop
add
aas
sub
out
add
test
and
adc
lods
icebp
xor
mov
in
pop
jp
cmp
movs
movs
mov
shl
pusha
(bad)
adc
loope
aad
imul
outs
mov
outs
adc
outs
cmp
xchg
in
enter
popf
daa
push
icebp
cmp
movs
jmp
(bad)
mov
mov
sar
and
xchg
add
add
mov
movs
aas
cs
add
inc
inc
push
pop
loope
popa
pop
xchg
xchg
fwait
cdq
ret
mov
cli
dec
push
add
sub
push
xchg
ret
(bad)
and
ret
adc
cmp
ror
add
js
(bad)
rcr
enter
lahf
push
mov
xor
add
adc
vpcmpistrm
or
or
dec
dec
dec
and
test
loop
imul
fwait
test
nop
enter
dec
cli
(bad)
mov
or
mov
es
pop
mov
dec
pushf
and
mov
and
nop
jg
call
rcl
push
mov
lods
packuswb
cmp
push
aas
cmps
add
mov
or
lahf
pop
cmps
adc
mov
mov
rol
mov
cld
fcmovnbe
xchg
add
pop
or
arpl
add
push
xchg
rcr
or
ss
cmp
stos
add
pop
loop
push
out
xchg
ds
pop
in
in
mov
jmp
ins
jne
aas
push
int
es
arpl
inc
loop
(bad)
dec
jae
lds
add
dec
add
jl
add
inc
rcl
das
pusha
test
inc
pusha
adc
xor
lods
mov
mov
pop
adc
mov
fwait
sub
xchg
mov
cwde
ficomp
lock
mov
std
cmp
mov
scas
add
(bad)
mov
add
aam
sahf
push
sub
adc
movs
mov
cmp
inc
out
jno
fs
or
call
xchg
mov
sub
jmp
cmp
aas
sbb
cmp
int3
daa
xchg
mov
jmp
add
pop
ss
nop
pop
adc
add
jge
mov
(bad)
jmp
lahf
inc
movs
pop
(bad)
push
jg
fwait
test
inc
mov
stc
cli
mov
and
pusha
and
retf
and
mov
fsub
test
xlat
loope
add
fbstp
(bad)
and
inc
aas
outs
mov
cmp
add
push
xor
stos
dec
pop
xor
bound
rcl
imul
xchg
clc
imul
mov
fldenv
or
mov
lock
call
jbe
push
call
adc
rcr
jo
test
mov
xor
add
adc
add
pushf
sub
outs
jmp
ins
sub
xor
arpl
xor
stos
and
cmp
cs
add
inc
adc
cmc
mov
adc
or
add
in
or
adc
cli
fdiv
icebp
and
mov
ja
jl
inc
cmps
xor
xor
imul
cmc
repnz
mov
jmp
jo
stc
pop
push
add
add
(bad)
(bad)
pop
int3
cmps
in
cli
dec
sbb
lock
fistp
fst
and
and
inc
add
retf
or
pop
adc
repnz
movs
imul
and
cwde
pushf
sbb
mov
aaa
and
sahf
shl
xor
and
test
jmp
xor
aam
xchg
leave
lods
jmp
and
or
jl
js
stos
stos
lock
lock
pop
cmps
dec
xchg
mov
sbb
lock
ror
xchg
or
scas
mov
adc
push
rcl
push
xchg
sete
cmp
jg
sub
mov
sub
in
cwde
icebp
push
xlat
jns
mov
fsubr
mov
mov
sahf
sbb
mov
cmp
lds
and
mov
or
add
ds
(bad)
(bad)
sbb
jecxz
cwde
sahf
inc
ss
push
stc
mov
add
cld
sub
mov
mov
fcmovb
aaa
mov
pusha
test
stos
cmp
jb
xor
xchg
cs
dec
fcomi
jmp
mov
or
cmc
add
push
add
push
add
mov
add
mov
cmp
push
add
inc
dec
pop
ds
xchg
nop
mov
or
dec
adc
ret
loopne
add
mov
pop
push
icebp
scas
out
mov
adc
jo
sub
into
and
(bad)
outs
fidivr
cmp
ss
sub
xchg
js
add
add
in
sbb
add
lahf
mov
dec
call
pop
test
pop
enter
jle
xchg
mov
clc
pop
test
inc
fcmovu
lock
add
mov
add
inc
jbe
add
or
add
mov
mov
xor
inc
js
cmps
mov
mov
push
cmp
clc
je
pop
mov
test
or
mov
enter
mov
pop
push
push
push
dec
cmps
cdq
js
jne
std
scas
ins
ja
loop
and
mov
(bad)
loope
mov
jmp
bound
popa
imul
jo
jae
and
dec
dec
xchg
dec
push
pop
xchg
gs
xchg
add
fld
in
not
dec
inc
test
lahf
or
push
repnz
sbb
fdiv
push
inc
sbb
loope
xor
xchg
aad
cli
mov
js
(bad)
xchg
or
add
xor
jl
ud1
mov
stos
(bad)
shl
test
shr
and
data16
popa
call
je
retf
xor
mov
int3
dec
lea
cld
push
mov
ja
and
test
rol
js
cwde
dec
jg
jmp
cmp
pop
mov
adc
mov
imul
add
add
loope
xchg
cmp
push
int
inc
test
dec
adc
sub
js
lods
test
fisubr
scas
call
sub
jl
pop
push
repnz
jecxz
ins
(bad)
loop
js
jg
add
or
xlat
imul
xlat
cli
pushf
xor
ds
test
lea
(bad)
dec
test
(bad)
mov
ret
jp
icebp
jp
call
sbb
(bad)
add
inc
mov
or
jne
sub
pop
pushf
sahf
shl
add
sub
xor
jmp
add
hlt
retf
test
pop
or
xchg
add
dec
push
in
add
push
mov
mov
push
xor
sbb
fisttp
ss
shl
mov
mov
call
js
sub
mov
adc
fs
movs
inc
mov
xchg
sub
js
jbe
imul
xlat
lods
(bad)
or
ds
push
xchg
xor
add
xor
cwde
test
movs
mov
xchg
imul
push
retf
mov
push
cdq
dec
push
call
jo
stos
inc
dec
mov
inc
and
sub
std
pushf
mov
mov
adc
inc
aas
call
cld
fiadd
pop
mov
(bad)
dec
pop
jnp
push
stos
jo
mov
inc
ret
xor
je
push
loope
sti
pushf
mov
sbb
shl
loop
enter
aad
mov
arpl
jmp
cmps
mov
out
dec
hlt
and
pop
and
add
test
in
loop
push
daa
cmps
xor
xchg
xchg
sub
sbb
add
fld
xchg
cmp
in
sub
jg
xchg
mov
dec
jno
inc
out
mov
ins
lea
add
mov
icebp
adc
ror
xor
pop
xchg
and
pop
cmp
dec
clc
mov
mov
in
pop
cdq
ins
lock
fsubr
aad
call
mov
fnstsw
mov
shl
and
sub
adc
into
and
pop
cmp
mov
(bad)
add
sbb
cmp
cli
dec
xlat
push
clc
leave
cmp
add
dec
or
push
pop
jge
loopne
fisttp
mov
sahf
cmps
imul
call
ins
mov
add
sbb
neg
aaa
adc
out
inc
gs
lock
packuswb
fwait
data16
pop
jo
fld
rcl
xchg
push
adc
aad
cmps
daa
mov
cmp
sbb
test
xor
in
push
jle
scas
or
mov
or
inc
inc
inc
jo
or
popa
rol
pop
or
add
sub
or
sbb
or
mov
int
lods
dec
add
push
fdivr
pop
ins
mov
add
sbb
mov
in
sbb
pop
sahf
sub
push
jge
stc
repz
cld
and
cld
sbb
fisub
xlat
or
call
in
rol
es
mov
enter
pop
test
jle
dec
bswap
pop
inc
push
sub
dec
aas
sbb
fisttp
sbb
jnp
add
inc
repz
add
sbb
push
aad
cwde
cli
cmp
cs
xlat
pop
inc
rcl
or
inc
inc
test
scas
or
xchg
test
xor
sbb
and
cmp
sub
mov
loopne
mov
adc
add
pushf
es
aam
inc
xchg
mov
push
repz
mov
mov
sub
je
push
xor
data16
(bad)
mov
lock
adc
and
shl
mov
xchg
loopne
out
js
mov
xor
lods
cmp
adc
adc
call
fwait
(bad)
out
jns
mov
data16
mov
xchg
ret
mov
jmp
mov
cdq
jae
movs
xor
cmp
hlt
xlat
and
pop
lock
adc
jle
jo
pop
add
sbb
jecxz
aad
loop
xor
aam
call
mov
and
fwait
or
(bad)
jle
adc
imul
xor
mov
lods
in
xor
pop
imul
fmul
add
cwde
imul
retf
push
xor
sti
or
jno
out
xchg
mov
out
mov
dec
mov
add
adc
add
and
mov
push
out
fs
pusha
data16
ins
sti
sbb
cmp
mov
and
lods
data16
ficom
(bad)
and
test
push
sbb
jge
neg
or
and
adc
push
mov
stos
add
sub
cmp
jmp
cld
repnz
and
sub
pop
inc
lods
add
and
mov
mov
xchg
xchg
and
inc
add
sbb
add
mov
and
jp
mov
inc
push
addr16
push
std
add
call
dec
jg
pushf
sbb
inc
mov
inc
push
les
sahf
daa
pop
retf
out
vminss
rcr
jmp
cld
(bad)
or
shr
stc
std
iret
mov
and
(bad)
cli
shl
cmp
jl
and
retf
jg
add
add
jne
adc
je
nop
scas
pop
test
iret
lea
in
repnz
outs
or
pop
or
jmp
aam
mov
(bad)
ret
inc
inc
or
sbb
jle
mov
jns
sar
mov
sbb
cmp
dec
push
or
repnz
pop
mov
div
add
sub
xor
mov
fsub
add
jl
out
pop
ror
cld
(bad)
cld
scas
(bad)
mov
jbe
inc
daa
add
stc
popa
scas
in
mov
xchg
lahf
sub
add
cs
arpl
sbb
das
ret
xor
cmps
jecxz
icebp
push
xchg
adc
adc
mov
repnz
jmp
cmp
jge
dec
adc
lahf
cmp
outs
jle
add
inc
lds
jg
sahf
cmp
mov
xchg
dec
add
loope
outs
mov
inc
and
cmps
pop
and
mov
pop
inc
add
add
dec
add
jmp
xor
test
xchg
scas
xchg
loopne
xchg
mov
mov
sub
xchg
pushf
pop
test
fmul
int
inc
push
int
mov
jecxz
push
out
pop
jmp
mov
sbb
pop
ja
add
push
lahf
or
(bad)
ficomp
lods
or
add
mov
push
sub
jbe
adc
sbb
repnz
icebp
(bad)
(bad)
out
(bad)
jmp
or
xlat
fldenv
mov
and
and
pushf
es
lods
(bad)
(bad)
shl
dec
(bad)
retf
in
fs
mov
xor
sub
sbb
imul
imul
xchg
mov
cli
ds
pop
add
daa
push
out
or
(bad)
(bad)
sbb
fadd
mov
into
push
or
and
push
dec
or
jp
aam
cld
(bad)
mov
add
rcr
inc
pop
pusha
dec
shl
mov
addr16
mov
xchg
or
mov
cmp
aaa
in
sub
daa
mov
scas
mov
pop
add
aas
fild
or
jge
fstp
adc
fistp
outs
outs
mov
inc
add
or
sbb
add
sbb
and
add
and
inc
push
rcr
add
or
(bad)
fcom
push
xchg
nop
pop
and
mov
fcomp
adc
mov
inc
xchg
inc
dec
mov
div
inc
test
pop
mov
push
das
add
mov
cmp
aaa
pop
clc
fwait
ror
add
add
push
add
inc
test
mov
and
nop
sbb
dec
xlat
retf
sub
dec
loope
mov
movs
push
dec
mov
push
nop
adc
dec
xchg
push
call
and
add
int3
mov
push
push
cmp
xor
lods
add
pop
add
or
cld
in
fidivr
add
mov
xchg
mov
add
dec
repz
pushf
and
cmp
add
add
sbb
std
js
out
and
xchg
push
sar
mov
repnz
popf
cmp
test
xchg
add
ss
jmp
adc
lock
rcr
inc
inc
jo
cdq
jg
pop
add
out
jecxz
push
or
push
adc
push
fisubr
loope
outs
xchg
dec
add
daa
or
dec
or
outs
call
sbb
mov
out
xor
sub
addr16
nop
dec
pop
in
cwde
xor
rcl
sub
dec
pop
xchg
repz
lods
xor
cld
xor
jmp
push
or
jmp
jmp
add
lods
outs
rcr
sbb
adc
mov
add
sub
int
test
popa
cmp
aam
add
adc
add
add
nop
shl
jo
loope
inc
xor
or
pop
mov
add
pop
sub
aad
mov
data16
sbb
scas
aas
test
sti
push
pop
ror
adc
mov
lock
sti
inc
lds
pop
or
rol
pop
cmp
mov
lahf
pop
add
add
add
mov
push
adc
mov
(bad)
addr16
loope
jmp
adc
adc
movs
lods
add
mov
into
push
sbb
orps
push
or
jle
shr
inc
push
adc
scas
and
(bad)
add
les
adc
or
adc
inc
ret
xor
sbb
leave
add
sbb
rol
(bad)
pop
adc
jmp
cmp
mov
cli
cli
adc
mov
mov
fild
add
add
jne
lock
mov
sub
je
(bad)
xlat
ins
or
xchg
xor
stos
dec
add
test
adc
and
rcr
scas
jmp
add
cmp
add
dec
or
add
sbb
add
inc
(bad)
sbb
add
pop
in
push
or
rcr
add
rcl
xchg
outs
call
adc
cli
xor
inc
mov
fsubr
add
adc
add
mov
add
pusha
add
jno
add
(bad)
(bad)
dec
or
(bad)
(bad)
mov
rcl
cmp
dec
inc
sbb
inc
adc
cld
add
shl
rcr
cmp
inc
test
push
mov
outs
add
sub
lods
rcl
jge
call
push
int3
or
add
jnp
aaa
rol
loopne
ror
and
ins
and
lods
ss
add
cmp
fmul
adc
mov
in
sub
int
popa
stos
fnstcw
ins
call
adc
add
xchg
xchg
fld
pop
icebp
adc
push
icebp
stos
add
or
mov
mov
or
and
pushf
mov
adc
pusha
jecxz
nop
(bad)
test
ss
sub
cmp
add
sbb
push
ret
xchg
es
stos
leave
inc
rcr
js
jmp
and
fsubr
push
sub
inc
pop
xor
dec
or
mov
xchg
adc
push
add
xchg
jg
je
or
enter
sbb
xchg
popf
imul
aam
das
mov
les
dec
inc
xchg
stos
or
cmps
push
stc
aad
mov
push
addr16
lds
push
pop
add
xchg
jecxz
add
ins
mov
ins
in
inc
inc
test
ins
xor
cmp
or
call
add
and
nop
or
add
mov
or
push
sbb
shl
mov
int3
and
and
xchg
mov
pop
rol
enter
fisubr
neg
cmp
push
inc
inc
fist
aas
test
jle
mov
push
or
adc
(bad)
dec
add
sub
add
fs
mov
inc
add
jmp
and
in
and
add
jp
and
test
jg
mov
inc
rcl
imul
shr
lea
mov
lock
dec
push
mov
ins
ret
dec
shl
fidivr
pop
add
add
or
adc
loopne
inc
add
inc
ja
mov
add
movs
icebp
int
jae
mov
lods
add
dec
loopne
test
add
test
push
adc
push
pusha
add
jns
imul
jbe
enter
push
jle
fstp
add
dec
pop
daa
add
add
add
pop
rol
add
mov
int
sub
pusha
mov
add
ins
adc
or
cmp
pusha
mov
adc
push
mov
clc
(bad)
adc
outs
clc
cmc
add
mov
jno
and
out
cmc
push
add
push
add
(bad)
xchg
push
inc
add
or
outs
mov
adc
nop
nop
mov
in
mov
or
popa
push
sub
adc
mov
call
jg
jp
mov
push
clc
sub
call
ins
fwait
xor
out
int
pop
outs
xor
daa
add
add
add
add
and
std
add
inc
and
push
adc
and
sbb
or
add
imul
add
push
sbb
and
or
movs
shr
sbb
dec
mov
mov
loope
mov
jecxz
(bad)
jp
pop
rol
js
add
outs
and
inc
add
add
xchg
add
push
add
sub
push
mov
jmp
lahf
loope
ret
test
adc
test
sbb
dec
scas
stos
or
push
add
and
dec
inc
mov
test
dec
xor
nop
sbb
lods
add
popf
popf
push
xchg
fmul
pusha
or
or
fwait
inc
xchg
push
movs
ret
mov
inc
test
adc
or
je
adc
push
test
loop
push
add
movs
mov
xor
jg
repz
add
rcr
mov
add
add
cld
sbb
mov
adc
mov
add
cmp
shl
pop
retf
mov
je
loopne
arpl
pop
dec
add
mov
pop
xor
rol
mov
or
sub
add
out
add
or
test
add
or
mov
push
mov
rol
ret
shr
inc
sub
mov
cld
mov
sub
add
and
adc
jge
mov
imul
push
stc
mov
xor
ret
xor
add
or
outs
jge
loopne
xor
mov
stos
mov
xor
pusha
test
add
je
in
xor
add
out
inc
mov
test
sbb
test
mov
enter
fidivr
inc
stos
add
ror
shr
add
mov
arpl
out
add
adc
jo
sbb
jnp
cmp
(bad)
leave
xor
pop
xchg
sbb
dec
xchg
jecxz
or
stc
inc
lahf
loope
in
aas
retf
scas
add
or
cld
ret
int3
out
add
inc
fidiv
sub
scas
add
fistp
xor
mov
sti
fild
xchg
jne
xor
loopne
daa
shr
xchg
jnp
push
ror
inc
add
add
and
int3
js
sbb
js
jge
xchg
dec
movs
xchg
mov
retf
mov
push
setbe
mov
xor
and
mov
inc
mov
xlat
push
adc
add
lahf
add
inc
rcl
int
jle
in
pop
cmp
aas
ficomp
jbe
int3
aaa
inc
clc
ret
rcr
push
xlat
inc
rol
inc
add
aaa
sbb
(bad)
cmp
or
movs
dec
and
jno
shr
icebp
cmp
popf
xor
pop
lods
sar
iret
shr
jmp
inc
inc
dec
je
xchg
loopne
test
daa
add
sbb
rol
inc
mov
inc
inc
fwait
icebp
add
ss
fdiv
sbb
fcmovu
jge
lea
lods
mov
dec
retf
push
mov
outs
xchg
out
pop
and
add
dec
add
lahf
add
ins
and
push
fidivr
daa
lock
fistp
mov
mov
mov
push
fidivr
cmp
sahf
inc
xor
and
mov
seto
adc
test
dec
lock
fsubr
in
pop
gs
outs
push
xor
pop
mov
jle
mov
scas
add
call
rol
aaa
rcr
or
adc
and
rcr
cwde
cmp
(bad)
push
add
and
jmp
mov
outs
(bad)
mov
cmp
xor
cmp
out
push
imul
mov
mov
mov
test
sbb
pop
or
fs
pop
add
sahf
popf
add
add
xor
add
mov
cld
or
test
cld
jg
jne
push
xor
mov
lock
das
data16
enter
add
add
or
dec
fstp
loopne
or
push
(bad)
push
inc
test
mov
aad
mov
arpl
push
ins
fbstp
sbb
arpl
xor
add
add
dec
movs
shr
in
jmp
pop
mov
cmp
popa
xor
add
jl
sub
call
and
in
bound
in
cmc
cli
and
adc
push
sub
push
cmp
aaa
inc
clc
mov
sbb
push
push
inc
add
or
outs
mov
std
xor
loopne
or
fdiv
test
push
jo
ins
enter
mov
add
je
push
push
pop
jno
popf
ja
push
dec
mov
inc
add
dec
ret
mov
xlat
aaa
dec
inc
fsub
cmp
loope
sbb
pop
xchg
dec
icebp
jmp
jo
push
js
xchg
pop
dec
(bad)
jp
pop
pusha
add
inc
rcr
or
jle
rcr
js
pop
pop
sbb
or
mov
rol
inc
scas
adc
aad
imul
dec
add
mov
dec
mov
pop
cmps
jmp
mov
mov
cmps
aas
ins
mov
push
fiadd
add
test
in
movs
leave
push
call
dec
ud1
imul
cs
mov
pop
xor
adc
xchg
inc
adc
xchg
inc
xor
clc
cmc
jge
mov
pop
call
jg
dec
rol
or
inc
add
and
xor
or
ja
add
add
shr
xor
inc
add
enter
test
jne
clc
or
jl
push
mov
sbb
xor
lea
pop
push
sbb
loopne
and
js
cmp
cs
cmc
mul
ins
or
sub
fild
mov
xor
icebp
inc
xchg
fadd
adc
and
sti
push
call
sbb
push
fisubr
outs
outs
call
js
add
out
(bad)
or
add
mov
add
das
loopne
cmp
rol
pop
lahf
pop
mov
out
fdivr
imul
mov
cmp
mov
adc
or
xor
or
mov
ins
fild
test
rcr
das
out
mov
cmp
push
cdq
push
bound
pusha
ret
test
mov
inc
add
inc
add
jle
das
adc
rcr
and
pushf
xchg
add
movq
adc
mov
add
in
div
xchg
ja
add
adc
add
jns
inc
sbb
fld
jno
fs
sahf
cmp
out
in
test
mov
ret
mov
aaa
sbb
in
sbb
inc
inc
pop
jmp
rcl
daa
addr16
lock
fidiv
or
call
push
xrelease
pusha
adc
js
jo
scas
add
add
adc
add
add
imul
or
mov
inc
mov
loopne
push
add
fisubr
cmps
pop
or
test
cmp
sahf
(bad)
ja
lock
clc
jg
mov
xchg
sub
bnd
fimul
cdq
sti
imul
sub
ja
cmps
add
test
adc
imul
leave
loopne
rol
in
lock
push
sbb
inc
inc
shl
push
sub
mov
jbe
fimul
inc
dec
pop
or
mov
lods
adc
adc
mov
and
xchg
add
xchg
test
ss
clc
pop
arpl
cmps
pop
pop
adc
and
rol
shr
lods
add
jge
and
jp
sub
pop
outs
loopne
mov
(bad)
dec
ss
sub
in
scas
(bad)
ror
push
out
mov
in
cmp
ja
jo
inc
cs
scas
sub
add
jns
push
mov
fld
(bad)
and
ja
jge
sbb
xchg
xor
push
add
dec
mov
xlat
shl
adc
jae
retf
aas
inc
push
(bad)
and
bound
mov
or
daa
xor
sbb
inc
or
xchg
add
or
sbb
add
dec
popf
cmp
js
dec
push
inc
sahf
ds
daa
dec
lahf
rol
and
xor
out
add
mov
mov
ja
pop
shl
rol
inc
sub
mov
pop
add
nop
adc
push
ret
pop
and
sbb
jge
jge
xchg
mov
xchg
ins
pusha
daa
add
push
mov
or
ret
cmps
mov
test
xchg
and
dec
pop
pop
loope
lahf
out
int
add
std
or
(bad)
cmp
rcr
(bad)
div
retf
ins
sbb
mov
or
out
cmp
scas
pusha
jle
add
mov
inc
pop
add
add
sub
jle
scas
or
xor
cs
lea
fisubr
scas
add
inc
sar
aam
dec
inc
mov
mov
jl
mov
push
lahf
into
sbb
pusha
xchg
inc
imul
stc
inc
fisttp
add
add
pop
pop
add
addr16
loope
aas
js
(bad)
cmp
outs
nop
fidiv
outs
imul
mov
mov
mov
cwde
mov
adc
fcmovu
imul
xor
mov
mov
xor
cmp
pop
push
shr
fisub
retf
repnz
sbb
movs
mov
pop
mov
fisub
sub
js
xchg
lods
test
aad
call
add
hlt
mov
lock
add
pop
add
sti
jg
and
push
sbb
or
out
rcl
sub
imul
pop
ret
push
xchg
push
push
or
iret
or
inc
sub
rcl
add
jne
xor
xchg
mov
sti
fucomp
xchg
sbb
hlt
test
sbb
mov
outs
adc
in
push
adc
xchg
imul
leave
jne
dec
jmp
jp
or
test
pushf
push
fsub
out
xor
lock
loopne
add
mov
inc
(bad)
adc
jp
add
pop
add
(bad)
mul
loopne
data16
(bad)
repz
aas
inc
inc
pop
sysenter
hlt
loopne
adc
push
cmp
ret
repnz
pop
jns
push
das
pop
cmp
std
sbb
sar
mov
mov
or
adc
add
jle
sti
out
mov
nop
jnp
out
xchg
outs
ret
cmps
ror
jge
or
mov
sbb
scas
(bad)
pop
fldcw
mov
adc
cmp
inc
dec
ja
adc
pop
bound
sahf
add
sbb
add
lds
fisttp
xor
add
cmc
xor
add
or
ins
adc
jle
shl
xor
and
ins
add
sub
mov
xchg
fcom
shr
jl
cmc
pushf
dec
scas
sbb
push
fdiv
jg
je
cmp
or
outs
(bad)
dec
inc
adc
pop
in
jne
push
stc
lds
push
in
je
stos
or
mov
xor
outs
test
cmp
pop
jp
cmp
(bad)
rcr
(bad)
in
jg
in
inc
add
sub
in
pop
or
push
or
cmp
call
outs
lds
mov
frstor
inc
mov
inc
jno
hlt
imul
int3
mov
mov
jge
pop
add
xor
sbb
into
mov
add
pop
add
mov
rcr
mov
jge
dec
inc
jo
xchg
stos
mov
mov
pop
fwait
jmp
punpckhdq
or
cmp
pop
push
jbe
mov
push
sub
(bad)
jle
cmps
cmps
sahf
jns
lahf
std
out
jg
dec
add
xor
sbb
leave
mov
sub
mov
daa
cmp
outs
push
fimul
ss
in
fdiv
adc
les
nop
gs
aam
dec
dec
scas
and
ins
add
mov
dec
add
jnp
add
int
pusha
iret
xchg
push
or
mov
mov
out
inc
pop
jg
out
mov
jne
out
sbb
sbb
push
sub
xor
in
or
js
enter
or
mov
mov
mov
cld
lods
iret
jmp
mov
adc
pusha
add
loopne
add
aas
push
fcomp
out
pop
mov
adc
in
mov
rol
mov
out
adc
sub
adc
cmp
pop
ds
mov
cmp
push
mov
push
xlat
add
scas
cmps
std
mov
repnz
call
and
push
call
loopne
jbe
popa
jmp
lods
fdivr
jbe
mov
rol
rol
adc
cmps
push
jmp
or
aad
fcmovnbe
fnsave
jmp
mov
sbb
fsub
ds
pop
mov
(bad)
mov
add
add
add
ror
mov
aad
stos
or
(bad)
pop
push
shl
and
and
mov
daa
cmps
fcomp
add
cmp
les
jno
in
pop
pop
int3
adc
sbb
imul
arpl
fwait
mov
dec
int
in
repnz
mov
jae
pop
jp
and
jne
in
and
cmps
xchg
stos
inc
aad
or
mov
pop
outs
mov
arpl
and
js
test
push
xchg
dec
sub
scas
pop
mov
lods
mov
mul
xchg
jp
mov
stos
xor
(bad)
int3
shr
dec
inc
pop
mov
adc
loopne
add
in
sbb
add
fist
adc
add
xlat
and
inc
inc
aad
lea
xchg
data16
jge
repz
mov
adc
jbe
xchg
bound
retf
js
icebp
daa
lock
repz
ret
xchg
int
gs
xchg
pop
or
adc
mov
jg
and
pop
sub
and
repz
jns
rcl
out
xor
pop
xchg
dec
sti
cmp
push
loope
retf
(bad)
jnp
mov
inc
lds
cs
or
cmp
in
in
es
and
add
pop
mov
xor
into
xor
lds
xor
sbb
sub
imul
or
scas
sbb
rcr
clc
out
shl
add
rol
push
fcom
nop
fcomip
shr
mov
sti
out
mov
pmaxsw
iret
movs
les
mov
in
icebp
(bad)
lock
jae
shl
sbb
and
(bad)
jns
cmp
jle
pop
das
out
aas
mov
pop
pop
sti
jo
cld
sub
cmps
push
scas
cmp
mov
fcmovnb
int3
in
sub
adc
idiv
pop
add
or
xor
and
sub
outs
sub
add
inc
scas
jge
mov
mov
sbb
sbb
dec
sbb
sub
dec
sub
dec
fs
mov
and
popa
cli
cld
stc
repz
out
js
push
(bad)
dec
mov
pusha
mov
(bad)
add
cmp
jmp
repz
bnd
(bad)
das
call
loop
or
jl
fdivr
into
lahf
sar
adc
dec
add
int3
into
adc
push
daa
mov
inc
cmp
les
sub
js
push
add
les
aaa
ins
jmp
cmps
adc
or
adc
or
inc
movs
push
inc
mov
je
jne
repnz
push
push
sub
xchg
gs
idiv
rol
sbb
jg
out
in
and
das
mov
(bad)
cmp
scas
pop
(bad)
adc
mov
outs
cli
pop
sub
lds
or
dec
sahf
loopne
sub
jecxz
dec
lock
(bad)
(bad)
or
pop
mov
mov
add
add
xor
adc
xor
add
lods
add
xchg
std
or
push
je
cmp
xor
(bad)
sbb
nop
or
neg
sbb
lahf
jmp
ret
inc
pop
ins
mov
inc
addr16
sbb
repz
ja
test
cmp
or
loopne
sub
sbb
rcl
neg
addr16
clc
xor
int
mov
mov
xor
lds
sbb
adc
je
int3
push
ins
fisttp
pop
sbb
frstor
sti
push
lods
or
inc
mov
xchg
xor
mov
or
ins
sub
aad
xor
pushw
rcl
dec
jmp
shr
cmp
sub
int
iret
xchg
cwde
pop
mov
or
mov
fmul
xchg
retf
cs
adc
sbb
popa
add
mov
xor
lahf
es
daa
sub
(bad)
adc
mov
sbb
xor
mov
xor
(bad)
pop
loopne
dec
add
leave
(bad)
jl
jns
retf
or
repz
push
fcmove
scas
loop
add
loope
add
enter
lds
adc
pop
mov
out
ja
inc
jbe
jno
(bad)
clc
les
mov
jge
cmps
dec
lahf
xchg
push
add
inc
fist
(bad)
fild
fpatan
cwde
pop
into
mov
neg
mov
or
cmp
xchg
mov
fadd
ja
cmp
dec
das
and
(bad)
xchg
or
sar
dec
movs
cmp
push
sbb
rcl
mov
add
stos
sbb
scas
sub
cmp
inc
loopne
add
(bad)
rol
enter
mov
adc
push
aaa
sbb
fidivr
inc
ror
mov
add
add
jle
mov
and
pop
pop
inc
movs
push
xchg
sub
add
push
cmps
fild
sbb
adc
or
inc
push
and
xchg
mov
cmp
stc
mov
jno
shr
pop
cdq
mov
jbe
gs
in
js
test
test
inc
js
imul
mov
test
es
rcl
addr16
int
nop
mov
hlt
sbb
ss
dec
fdiv
mov
and
dec
or
ins
lahf
mov
fld
sar
cwde
xchg
pop
mov
xchg
repz
sbb
mov
outs
sbb
dec
aas
add
mov
jo
pop
add
jo
ins
mov
imul
sbb
xchg
rol
lahf
xchg
inc
jno
add
xor
aas
jp
and
and
outs
mov
sub
cdq
iret
lods
and
push
dec
fnstsw
inc
mov
jg
cmp
push
push
jmp
dec
cmc
jmp
mov
popf
dec
daa
jno
xchg
fcmovne
mov
(bad)
in
shr
retf
daa
lahf
and
cmp
aam
add
mov
fwait
push
cli
mov
add
xchg
dec
dec
sub
cwde
fwait
clc
or
and
dec
fst
fstp
or
jecxz
mov
repz
sub
rol
jb
sub
xchg
and
fisttp
mov
ins
(bad)
adc
sbb
jns
retf
push
jmp
aaa
dec
adc
mov
jo
rol
pop
pusha
adc
xchg
mov
jle
shl
jo
add
les
int3
adc
dec
dec
add
sti
dec
jecxz
dec
push
xlat
nop
and
js
jle
xor
cmps
scas
fs
or
mov
mov
pop
cmps
add
hlt
add
xchg
add
int3
add
in
xchg
fnsave
jecxz
add
test
mov
sbb
imul
jmp
icebp
stos
addr16
in
cmp
stc
(bad)
popf
and
pop
pop
cdq
pop
inc
dec
sbb
cmp
xor
(bad)
shl
jno
jmp
mov
int
mov
enter
(bad)
inc
psraw
mov
inc
out
lock
out
(bad)
push
mov
scas
dec
in
outs
nop
mov
mov
push
add
pop
aad
jmp
jae
mov
cmp
mov
adc
stc
leave
dec
loop
pop
(bad)
mov
and
inc
add
jmp
sbb
out
jmp
adc
(bad)
fisttp
aas
jl
xor
out
xchg
lea
push
popf
fsub
mov
movs
pop
xchg
es
not
lahf
and
sub
dec
shl
adc
das
add
pop
sbb
loopne
imul
inc
xchg
add
inc
lock
ror
icebp
(bad)
push
mov
and
outs
jl
pop
sub
(bad)
jle
in
inc
xor
or
jge
imul
jno
jnp
push
and
bound
and
cld
adc
gs
test
cli
sti
jo
int
xor
or
retf
adc
enter
add
cdq
dec
mov
pop
pop
inc
mov
call
fistp
pop
and
inc
cmps
add
sub
push
jae
movs
movs
sahf
mov
lods
(bad)
cld
dec
push
(bad)
cmp
lahf
cli
aam
lock
mov
add
je
jne
add
lock
xchg
arpl
pop
push
sub
dec
imul
sbb
int3
int3
dec
sar
mov
clc
imul
rcr
add
mov
sahf
push
add
out
inc
outs
popf
cdq
or
cmc
cmc
rol
dec
adc
pushf
add
dec
or
add
dec
(bad)
fild
mov
dec
stos
pop
gs
dec
adc
jecxz
sbb
test
ins
fstp
dec
mov
add
sbb
outs
push
test
sbb
sar
and
(bad)
leave
jp
and
fdiv
outs
mov
mov
leave
add
lahf
sbb
adc
(bad)
fnsave
les
into
mov
dec
call
mov
aaa
in
nop
mov
rol
aad
jle
add
sbb
and
cmp
add
fist
xor
jmp
dec
add
lock
cdq
sub
mov
retf
scas
bound
mov
mov
or
and
fcomp
add
add
jmp
push
sub
cmps
mov
rol
mov
(bad)
xor
xchg
movsx
sub
mov
mov
inc
ja
sbb
sbb
cdq
int3
sti
and
xor
or
popf
int
dec
(bad)
(bad)
sti
out
mov
jo
fs
mov
loope
mov
fcom
das
push
jmp
imul
lds
cmp
add
sub
push
aas
mov
cmp
cdq
xor
in
fild
xchg
or
push
fnstenv
outs
add
add
add
dec
add
inc
push
jno
dec
mov
scas
sub
addr16
cmps
add
mov
pop
cmps
mov
or
mov
and
(bad)
mov
or
das
or
leave
xor
pop
add
mov
and
or
mov
add
lock
adc
jne
in
iret
out
pop
ins
add
xor
std
out
aaa
inc
adc
xor
add
mov
mov
jns
sar
xor
(bad)
fdiv
add
out
xor
enter
(bad)
lea
test
mov
and
in
fdivr
mov
sub
hlt
lahf
push
mov
pmuludq
lock
pop
pop
pop
sub
out
or
inc
push
sbb
into
fistp
iret
mov
(bad)
fnstsw
mov
pop
das
jecxz
fsubr
mov
mov
mov
push
pop
jae
rcl
adc
jl
add
add
enter
mov
push
test
daa
xor
retf
arpl
mov
mov
mov
int
popa
jle
cmp
cmps
jns
xor
cmp
dec
push
push
ret
(bad)
xor
jnp
mov
(bad)
fwait
jg
cmps
mov
pop
(bad)
rcl
xor
shl
mov
test
cld
dec
adc
ins
call
movs
sar
sub
repz
cmp
in
loopne
ins
push
inc
fadd
pusha
inc
das
(bad)
cli
cmp
or
sub
outs
and
push
cmp
in
aam
sub
stos
push
mov
(bad)
scas
js
jge
mov
inc
mov
cmps
jecxz
daa
stos
leave
inc
cmp
jnp
pop
sub
fdiv
daa
xor
mov
mov
xchg
int3
aam
fsub
mov
sahf
pop
nop
and
out
mov
ror
sbb
mov
shl
enter
sti
in
aas
(bad)
fimul
xchg
adc
pop
mov
fistp
stos
and
mov
mov
or
loop
xor
xor
add
xor
repnz
adc
cmc
xchg
add
dec
mov
jle
cmp
repnz
ffreep
ja
test
or
(bad)
or
mov
adc
mov
xor
xchg
add
rcr
sbb
lock
(bad)
xchg
cmp
stos
in
iret
xchg
add
pusha
(bad)
mov
aaa
mov
cdq
(bad)
retf
aas
and
dec
mov
mov
push
shl
push
enter
ins
fstp
ror
jecxz
cmp
cdq
xchg
test
(bad)
mov
cwde
pop
retf
push
fbld
hlt
inc
cmps
or
mov
mov
sbb
cmp
xor
imul
(bad)
mov
push
add
les
shl
rcl
ins
lock
add
repz
pop
in
dec
scas
add
inc
xor
sub
fbstp
or
test
jne
push
clc
push
adc
stos
cmp
inc
inc
jg
test
popf
jne
and
iret
jnp
sbb
jo
out
jb
sbb
cli
rol
js
mov
shl
adc
cmp
or
dec
mov
pop
pop
pop
inc
(bad)
scas
enter
rcr
lds
test
enter
movs
rcl
(bad)
shl
and
out
sbb
cmp
not
xchg
fs
cdq
adc
cmps
inc
push
push
or
mov
retf
mov
call
in
int
mov
shr
mov
retf
leave
cmc
dec
adc
fisttp
xchg
icebp
pop
xor
add
mov
or
mov
js
or
add
and
and
cli
movs
sar
scas
gs
cli
xchg
retf
sub
sub
push
xor
repnz
movs
or
xchg
xchg
xor
aaa
and
cmp
mov
inc
mov
mov
and
inc
das
out
jnp
sti
lock
xor
dec
sar
cmp
out
fdiv
lods
test
pop
icebp
inc
mov
test
enter
or
shl
mov
mov
push
pushf
push
(bad)
pop
or
jb
outs
repz
mov
cmc
pusha
(bad)
gs
cmp
mov
mov
jecxz
jg
xor
mov
inc
punpckhbw
sbb
add
lods
loope
das
popa
mov
jo
mov
in
adc
or
sub
das
pop
out
mov
ret
imul
ret
fisttp
call
stc
retf
stos
mov
inc
mov
xor
int3
sbb
pop
mov
adc
and
adc
or
jo
movups
loop
mov
dec
cmp
cmp
cwde
sbb
pop
aas
dec
(bad)
in
push
(bad)
aad
cdq
int3
pop
sub
push
xchg
outs
add
jp
push
xchg
push
test
add
(bad)
mov
or
mov
or
test
sub
jp
or
and
sbb
or
outs
scas
push
mov
iret
popf
ret
in
mov
iret
ret
scas
sbb
dec
push
dec
or
jl
sbb
(bad)
fdivr
add
jns
adc
dec
addr16
data16
xor
xor
jg
mov
cmp
adc
retf
add
icebp
leave
sub
xchg
push
mov
out
pop
cmp
stos
and
cmps
jecxz
mov
daa
imul
jne
in
adc
xchg
add
or
jecxz
leave
inc
test
mov
xor
mov
daa
fwait
xchg
mov
mov
jge
xchg
mov
dec
sub
mov
mov
ror
aaa
fnsave
or
ror
add
jl
les
call
cmp
(bad)
jbe
cdq
out
fwait
call
cmp
sbb
push
cmps
daa
stos
and
test
mov
add
cs
cmp
xchg
std
push
cs
in
rcl
or
and
gs
fbstp
retf
mov
imul
xchg
and
ins
add
sub
pushf
xor
xchg
addr16
call
scas
jge
test
sbb
pop
mov
ss
fmul
ror
mov
or
stc
retf
push
and
jno
ja
icebp
xor
push
bnd
and
popf
leave
cwde
sub
cs
bound
repnz
jno
sub
fwait
test
dec
cmp
mov
nop
retf
add
mov
rol
iret
repz
sbb
push
cmp
xor
lea
sub
cld
ficom
and
push
dec
mov
in
std
loop
jg
mov
add
cmps
adc
in
int
jle
and
mov
add
popf
mov
out
repz
push
(bad)
lods
addr16
dec
push
stc
div
xor
sbb
jns
pop
adc
sbb
and
jo
pusha
imul
scas
out
adc
fwait
mov
jmp
mov
sbb
ja
div
loopne
loope
(bad)
(bad)
(bad)
cdq
jecxz
arpl
(bad)
pusha
jns
sub
outs
rcr
test
dec
div
cmp
lods
and
aaa
scas
fldenv
jb
nop
mov
xchg
push
pop
fs
or
(bad)
adc
xchg
inc
mov
push
xchg
add
and
mov
dec
xchg
neg
xchg
sub
popa
ror
rcr
sbb
mov
and
(bad)
mov
add
and
cld
xchg
enter
add
push
jno
pop
mov
mov
daa
xchg
add
mov
aad
mov
mov
and
data16
push
inc
lock
lds
pop
retf
fsubr
ins
js
iret
add
imul
mov
xchg
rcl
enter
mov
jg
adc
xchg
retf
jns
enter
repz
fs
out
mov
jecxz
lahf
cld
jns
mov
dec
fwait
daa
pusha
xchg
jo
icebp
xchg
mov
dec
dec
or
ret
ja
adc
pop
cmp
in
xchg
imul
mov
repz
mov
or
mov
loopne
inc
aaa
cmc
mul
rcl
(bad)
adc
mov
inc
inc
fwait
cld
ins
jae
xor
mov
xchg
push
pop
inc
gs
xor
xchg
mov
xor
ret
push
inc
dec
fisubr
shl
jb
push
dec
rcl
fisttp
push
loop
iret
jle
pop
std
dec
adc
clc
sub
shr
imul
js
(bad)
mov
icebp
lock
data16
lods
jne
jns
(bad)
xchg
mov
out
mov
das
push
movs
shl
jnp
push
jmp
dec
xchg
sbb
inc
movs
push
push
lock
arpl
cmp
xchg
add
sub
push
jb
add
pop
add
mov
cli
(bad)
mov
jmp
addr16
std
or
add
(bad)
(bad)
xchg
xchg
adc
dec
nop
push
xchg
ret
ja
call
cld
dec
in
inc
pop
leave
push
xor
shl
fdiv
pop
data16
(bad)
push
dec
hlt
loopne
fst
cmp
xlat
mov
jb
out
jp
out
cmp
lds
sub
dec
(bad)
xchg
and
add
sbb
inc
mov
movs
adc
jne
dec
std
int3
fnstsw
jp
sahf
fsubr
xor
inc
out
pop
pop
scas
push
jge
xlat
mov
or
dec
inc
pop
ds
repz
(bad)
out
idiv
fsub
add
in
rol
adc
xlat
mov
cmp
jl
add
push
pop
add
cmps
movs
inc
loope
adc
cwde
xor
push
jmp
bound
dec
mov
movs
inc
xchg
(bad)
jbe
inc
pop
test
rcr
pop
les
shl
retf
cli
jmp
fldenv
push
xchg
add
scas
imul
sub
icebp
add
inc
add
pop
jg
repz
jae
xchg
jbe
outs
sbb
out
repz
jg
push
jmp
cmp
jnp
stos
push
lock
pop
(bad)
cmp
pushf
fwait
and
dec
mov
popf
ret
mov
nop
xchg
shr
movs
push
dec
aam
mov
ins
add
out
fadd
jo
or
push
imul
jecxz
or
je
fsubr
shl
or
test
and
push
dec
cmp
and
loopne
inc
jg
daa
ins
scas
and
loope
cmps
dec
sub
mov
jmp
ins
inc
test
mov
jnp
jge
xlat
cmp
test
cmp
(bad)
std
(bad)
push
push
inc
add
mov
stc
ret
scas
loope
xchg
pop
add
enter
inc
test
sub
call
(bad)
fadd
in
add
cli
push
dec
mov
loop
jnp
mov
mov
jae
popa
xchg
and
jb
sub
inc
jbe
mov
add
aas
mov
cmp
enter
in
mov
and
shr
dec
xchg
int3
mov
stos
sbb
ror
rcl
loope
stos
sub
add
xor
mov
mov
push
enter
jnp
(bad)
clc
cmc
mov
add
and
out
loop
(bad)
call
sahf
rcr
and
hlt
cmps
xor
add
ins
cmps
gs
les
jo
add
add
stos
xor
xchg
sub
lds
and
cs
(bad)
lahf
les
stos
mov
or
pop
xor
mov
test
addr16
inc
out
xchg
mov
inc
xchg
push
rcl
push
mov
or
pop
fld
lock
jl
add
xor
lods
ja
jecxz
outs
push
add
jmp
ret
adc
push
sar
out
dec
add
add
jmp
cmp
jp
cmps
int3
add
add
dec
popa
push
dec
push
mov
dec
sahf
ds
dec
xor
add
sub
stos
fmul
fstp
xchg
and
repz
retf
cmps
jle
push
(bad)
or
pop
cmp
add
in
add
ss
mov
xchg
shr
cdq
xor
(bad)
mov
fimul
xchg
(bad)
inc
or
push
add
or
inc
xor
mov
out
xor
dec
outs
rcr
fisttp
or
(bad)
xor
cmp
mov
jge
mov
xchg
leave
sar
or
xor
cmc
ds
or
cli
mov
push
xor
adc
nop
scas
data16
add
push
retf
push
add
mov
or
lock
je
dec
cwde
shl
stc
cld
out
(bad)
cdq
add
xchg
sub
lock
push
sub
loope
mov
dec
jge
add
xor
rcr
mov
or
(bad)
into
in
fdiv
iret
push
add
sahf
adc
(bad)
cmp
sub
jns
or
add
xchg
jb
fadd
push
sub
ror
fsub
mov
mov
jne
lds
xchg
call
ret
mov
fwait
cld
jo
and
and
and
mov
out
pop
and
xor
loopne
movs
sub
rcr
mov
les
adc
call
mov
add
xchg
dec
loopne
ficom
sbb
mov
cmp
in
adc
cmp
fnstenv
arpl
push
shl
adc
xor
jge
cdq
stc
ret
cmp
out
nop
pop
pop
test
xor
adc
cmp
aaa
adc
hlt
ss
(bad)
add
inc
cs
aaa
outs
aas
je
data16
je
test
pop
inc
sub
aam
jns
push
cld
lds
icebp
aad
inc
xchg
cmp
add
jno
jle
push
int
mov
jb
cmp
jle
push
mov
mov
lds
sub
arpl
scas
icebp
les
sub
xchg
inc
arpl
xchg
in
mov
leave
add
sub
pop
or
xchg
mov
pop
ror
push
or
adc
mov
xor
dec
sub
and
sub
xor
sub
and
lods
test
add
fwait
add
fnstsw
sub
test
nop
inc
mul
sbb
popf
jnp
and
mov
call
sub
ret
(bad)
fdivr
scas
daa
(bad)
(bad)
retf
cmp
jno
imul
scas
dec
loopne
lds
je
adc
jmp
xlat
push
and
jle
(bad)
inc
xchg
jl
fwait
into
xchg
mov
push
dec
cmp
loop
fldcw
sub
and
push
hlt
fdivr
idiv
in
stc
mov
ret
and
(bad)
rol
mov
push
or
jbe
cmps
aas
push
or
pop
xchg
in
test
stos
pop
clc
test
icebp
in
jge
mov
or
pop
sub
into
pop
repz
lahf
and
out
stos
adc
rdtsc
add
enter
add
or
into
aad
or
adc
inc
pusha
lds
shl
mov
inc
cs
dec
inc
gs
jnp
xor
add
and
xchg
jl
and
popa
push
mov
sub
xor
add
sbb
push
mov
cdq
ret
in
adc
or
mov
xchg
mov
cmp
pushf
xor
jl
or
lods
cmp
pop
add
cld
ret
iret
loop
fcomp
stos
add
or
or
cmp
sar
mov
ret
vmovapd
aam
retf
fst
adc
or
test
mov
into
mov
out
or
aam
jnp
xor
js
sub
sahf
cmp
adc
xchg
mov
arpl
daa
xor
retf
sub
pop
mov
enter
push
and
call
and
jb
add
cdq
dec
lds
lahf
mov
popf
jle
addr16
mov
nop
add
je
aad
xchg
rcl
jne
pop
aas
add
(bad)
cmova
add
nop
add
jmp
int
cmp
mov
jae
clc
icebp
add
aas
and
stos
jne
retf
dec
stos
sbb
shl
fst
push
cmc
std
in
jecxz
(bad)
xchg
and
and
mov
(bad)
xchg
inc
popa
test
jb
xor
sbb
out
(bad)
or
mov
cmp
mov
sub
ja
add
call
mov
seto
das
push
or
xchg
pop
retf
sub
js
add
cmp
xchg
cmp
xlat
jg
xchg
push
adc
mov
push
retf
dec
cs
pop
jae
push
pop
push
fld
cmp
xor
xchg
shr
jno
sub
cwde
movs
pop
and
cmp
mov
jno
ficom
ror
mov
dec
into
adc
jns
outs
mov
sahf
mov
adc
retf
sbb
pop
icebp
rcl
out
test
mov
add
dec
inc
add
sbb
pop
jecxz
mov
lock
nop
xchg
dec
pop
cmp
mov
std
clc
das
inc
add
add
cmc
push
popa
add
aad
setnp
xchg
or
mov
and
push
fadd
pusha
mov
add
xor
fdivr
loopne
adc
cmp
xchg
push
pop
and
je
and
cmp
test
retf
retf
dec
cmp
(bad)
jae
jne
out
inc
sbb
retf
shl
push
mov
add
lea
mov
sbb
sub
mov
aad
push
ja
jp
into
cmp
and
mov
pop
mov
sbb
adc
xor
pop
sahf
xchg
pop
push
mov
mov
push
xor
push
pushf
addr16
mov
ja
jb
and
mov
retf
push
sub
adc
arpl
or
inc
dec
and
xchg
in
fbld
pop
dec
sar
in
jno
mov
cmps
cmps
dec
mov
jg
enter
lock
fild
jmp
or
outs
push
push
cmps
pop
dec
mov
nop
jmp
retf
in
aaa
dec
or
ins
adc
push
ds
clc
xchg
jge
int
add
inc
cs
add
loope
(bad)
mov
add
mov
push
rol
hlt
outs
inc
pushf
imul
push
or
hlt
adc
xchg
mov
pushf
add
dec
sbb
add
cmc
xchg
dec
inc
or
pusha
jbe
dec
adc
rcl
dec
daa
sub
outs
or
pop
dec
call
sub
xor
into
dec
(bad)
into
cmps
xor
pop
add
xchg
std
mov
adc
dec
jle
inc
mov
and
dec
mov
cld
mov
(bad)
sahf
cmp
int
jecxz
test
mov
jae
dec
xor
test
or
popf
add
or
dec
popa
mov
sub
imul
pusha
push
add
lock
push
and
pusha
lahf
ret
sbb
rcr
push
call
add
dec
in
stos
(bad)
push
call
sar
sti
push
scas
mov
outs
cmp
out
enter
xchg
ret
dec
stc
fdivr
lock
mov
adc
(bad)
out
loopne
ret
inc
icebp
imul
adc
xchg
add
add
imul
push
adc
jne
mov
cmp
mov
rol
icebp
dec
cmp
aad
ret
add
inc
test
mov
sbb
adc
mov
imul
jo
jmp
sub
mov
push
jecxz
mov
into
repz
bnd
cmp
inc
enter
movs
xchg
xchg
cmc
or
fist
out
jp
sbb
and
pop
push
pop
xor
push
and
xor
and
imul
or
dec
test
add
adc
popa
imul
std
xor
sub
dec
mov
les
mov
push
xchg
sub
mov
dec
xor
fcom
push
es
adc
push
push
stos
bnd
jp
pop
mov
xchg
(bad)
out
sbb
nop
push
fwait
mov
sbb
pop
jmp
lock
push
sahf
repnz
xchg
test
hlt
out
retf
jmp
std
dec
lds
cmp
cmc
movs
rcr
fisttp
jmp
xchg
retf
js
sti
fisttp
ins
fbstp
mov
jg
cmps
cmp
pop
jl
xchg
mov
xor
ficomp
add
add
add
cmp
add
es
shl
add
or
mov
popf
pop
lods
jecxz
(bad)
mov
daa
cli
sahf
pop
jnp
ja
jbe
cmp
fbstp
sahf
pushf
(bad)
mov
ds
or
rcr
mov
arpl
leave
cmp
mov
push
and
bound
xchg
scas
pushf
inc
xchg
and
sbb
hlt
cmp
adc
int3
iretw
or
in
inc
push
cmp
inc
inc
sub
jl
cmp
(bad)
scas
jle
inc
dec
dec
pop
xchg
mov
mov
dec
jns
inc
inc
push
call
pop
enter
jns
xor
adc
push
addr16
push
(bad)
call
add
repz
mov
(bad)
jmp
cdq
sahf
xchg
rol
ins
add
rcl
fmul
mov
pop
retf
mov
add
cwde
xchg
fldcw
jmp
mov
ud0
ffreep
lea
ins
(bad)
leave
jecxz
loope
mov
psraw
ins
mov
iret
(bad)
adc
lock
aas
sti
scas
fdivr
arpl
rcr
add
call
xlat
xlat
pop
sub
rcl
leave
retf
add
ret
call
pop
pop
stc
popf
cmp
cwde
jnp
mov
sbb
mov
add
lea
(bad)
lahf
inc
xor
out
mov
cmp
xor
xlat
or
inc
sbb
or
xor
(bad)
lea
repnz
or
or
fdiv
mov
mov
mov
loopne
pop
mov
or
imul
stos
imul
xlat
loopne
out
(bad)
in
dec
xor
mov
pop
cli
fsubr
loopne
call
jo
dec
addr16
mov
push
inc
sub
in
test
out
cmp
adc
aad
pop
int3
xlat
gs
leave
jmp
push
mov
retf
rcl
(bad)
jle
mov
push
sbb
cli
cmp
fisttp
push
int
sti
xchg
cmps
in
cdq
cmps
xlat
int
fcmovnb
call
jge
inc
sti
clc
mov
mov
mov
retfw
lds
pop
push
stos
jne
push
mov
mov
jle
scas
jg
mov
mov
cwde
shr
sahf
ret
ins
call
es
(bad)
cmp
jg
ret
std
xor
push
sub
pop
sbb
lods
sar
into
mov
add
add
jp
xor
cmp
stos
jae
retf
adc
push
pusha
popa
dec
lahf
cwde
lods
add
inc
aaa
push
inc
mov
xchg
out
pop
add
mov
or
xchg
push
add
pop
daa
rcl
cmp
sub
xchg
and
pusha
enter
and
jne
adc
out
inc
gs
dec
pop
rol
(bad)
push
push
cmc
add
sbb
mov
push
rcl
loopne
pusha
fcomp
add
xchg
pop
les
xchg
in
add
ja
sub
pop
jbe
cmp
sub
sbb
inc
(bad)
mov
jae
add
mov
xor
enter
leave
sub
out
dec
push
out
jmp
dec
xlat
add
mov
popa
rol
dec
cmp
pushf
inc
add
mov
and
std
jecxz
std
sti
mov
cdq
pop
adc
aad
jo
rcr
cmp
jns
jle
out
std
push
jbe
push
mov
lahf
ret
mov
sub
sbb
pop
push
fyl2xp1
sub
in
(bad)
or
frstor
or
mov
add
scas
(bad)
fisttp
adc
add
inc
add
aam
mov
mov
hlt
pmuludq
and
sub
or
xchg
or
ss
add
jns
xchg
pop
dec
mov
cs
je
test
xchg
sbb
jl
ud0
into
push
jge
push
mov
pop
pop
loopne
es
push
out
cmp
push
xchg
cmp
add
icebp
pop
ins
jle
push
xchg
retf
stos
cwde
cwde
mov
fsubr
push
pop
cdq
sbb
mov
and
xor
cmc
scas
xchg
jmp
shl
add
jg
add
sub
xor
lea
mov
sub
mov
cwde
aam
pop
pop
cdq
or
ja
out
mov
jp
je
push
lea
or
xchg
or
sub
xor
adc
xchg
push
sbb
sahf
mov
popa
mov
xabort
push
jne
add
call
xchg
cwde
add
adc
neg
out
mov
std
dec
cmp
push
pop
loope
in
ja
jno
mov
std
jmp
rol
daa
imul
das
jg
jg
(bad)
mov
retf
add
inc
add
add
xchg
cld
std
jmp
cmc
ret
lahf
movs
out
test
addr16
lock
out
aas
xchg
in
out
out
shl
add
div
mov
sub
call
icebp
cdq
jae
fimul
pop
inc
dec
fdiv
cmps
jecxz
fmulp
push
pop
(bad)
mul
sar
outs
nop
inc
int
cmp
push
stos
int3
shl
and
pop
popa
enter
js
(bad)
loope
cmp
xor
xchg
jns
xchg
(bad)
das
pusha
imul
stc
in
sahf
xchg
xchg
out
inc
mov
cmp
xor
xchg
mov
or
ret
popa
je
push
cli
mov
into
jbe
jne
shl
xchg
dec
cwde
jns
adc
mov
xor
rcr
sbb
jg
add
pop
je
imul
(bad)
aam
mov
shl
mov
inc
push
sbb
ret
xchg
lods
fwait
mov
pop
lds
push
int3
inc
cmp
push
xchg
xchg
xor
es
pop
dec
sub
sbb
in
repnz
and
out
mov
(bad)
pop
mov
pop
pop
and
push
jo
enter
ret
xchg
pop
xor
xchg
lds
mov
jmp
lods
or
mov
stc
pop
mov
mov
call
add
adc
adc
cmps
adc
test
ret
fwait
in
aaa
cmp
ror
dec
xor
mov
hlt
xchg
shr
pushf
in
jecxz
data16
or
mov
fisttp
mov
(bad)
ror
push
sti
xchg
mov
mov
fs
sub
enter
out
jb
sub
lahf
push
shl
pop
scas
pushf
daa
sub
mov
imul
sbb
imul
mov
pop
hlt
sbb
jg
add
inc
push
shl
cmp
scas
mov
and
retf
cmp
xchg
dec
mov
mov
and
pop
lea
mov
mov
pop
jp
mov
lock
mov
cmps
pop
or
mov
dec
das
pop
add
sbb
cmp
xchg
dec
enter
push
shl
add
mov
(bad)
cmp
in
push
imul
iret
fdiv
retf
mov
pop
dec
lods
fsub
movs
jmp
(bad)
out
lods
add
mov
pop
sar
nop
jle
adc
jno
test
dec
jl
inc
jl
mov
outs
mov
jg
cmp
add
inc
add
cld
jecxz
loopne
test
call
or
push
xchg
push
shl
xchg
fdivr
iret
fidivr
dec
jbe
push
(bad)
idiv
stos
jae
jmp
cmp
add
or
add
pop
push
imul
jmp
push
pop
test
fidiv
mov
iret
dec
pop
push
mov
sub
add
adc
dec
into
sar
ja
into
shl
jle
jp
push
adc
nop
inc
std
rol
imul
(bad)
out
std
and
mov
les
push
sbb
js
iret
jg
(bad)
call
pop
enter
sub
jno
jge
jecxz
jnp
and
xor
mov
pop
into
push
inc
adc
xchg
sub
bound
add
dec
int3
popa
popa
xchg
sbb
xor
test
fnstsw
jmp
mov
shl
sbb
ret
push
mov
(bad)
pop
xor
nop
sub
aad
push
xor
xor
mov
add
(bad)
js
xchg
cmps
dec
cdq
add
mov
or
and
adc
sbb
pop
pop
sbb
mov
ins
ret
xor
loopne
or
xchg
jl
xor
pop
sbb
mov
push
inc
mov
mov
or
repz
dec
lock
pop
(bad)
or
adc
pop
dec
and
outs
je
dec
das
xchg
ins
and
adc
xchg
xlat
nop
mov
mov
xchg
mov
and
xchg
adc
cmp
fwait
test
(bad)
(bad)
call
dec
lods
inc
mov
add
add
adc
xchg
or
aam
mov
ins
mov
lds
jl
push
test
popa
adc
add
loop
gs
sbb
push
jbe
icebp
fstp
pop
sbb
sahf
mov
cmp
adc
pop
int3
jecxz
repnz
mov
pop
adc
or
(bad)
mov
aad
mov
icebp
mov
cmps
sar
loope
test
sub
sbb
and
into
dec
lahf
inc
movs
inc
nop
and
xor
rcl
add
(bad)
jg
daa
(bad)
pop
push
jp
xor
push
retf
jle
sbb
popf
mov
iret
sub
xchg
xchg
cmps
loop
imul
repz
shr
sub
pop
adc
and
add
test
dec
xchg
cwde
mov
cmps
xchg
iret
icebp
inc
daa
push
jb
pop
imul
adc
mov
adc
dec
mov
and
sbb
mov
xchg
or
enter
xchg
adc
cmp
add
and
inc
mov
sub
xlat
loopne
das
inc
stc
das
cli
cmp
and
jae
mov
ror
sub
es
mov
dec
mov
sub
mov
mov
fdiv
xor
into
jo
stos
movs
retf
push
xor
jg
dec
mov
jecxz
mov
inc
imul
gs
lea
retf
cwde
cdq
pop
(bad)
mov
cmps
jmp
mov
mov
cmp
ins
retf
mov
stos
xor
jecxz
in
jp
add
add
sbb
add
mov
fidivr
(bad)
jle
adc
(bad)
inc
sub
or
jmp
add
repnz
mov
push
ja
add
hlt
int3
mov
adc
and
xor
aam
in
gs
add
aaa
xor
jecxz
jmp
shl
mov
gs
ja
lea
dec
dec
or
jle
iret
inc
xor
or
scas
pop
imul
mov
sbb
push
push
ins
xor
cmove
sub
movs
gs
mov
sub
push
movs
xor
iret
test
cs
mov
push
aam
jl
or
shl
add
lahf
push
add
jmp
jl
sub
adc
mov
xor
stc
dec
push
loopne
xor
loopne
add
add
sbb
popa
fwait
(bad)
sbb
cdq
push
mov
jmp
movs
test
sbb
pop
daa
jge
fidiv
xchg
lahf
push
outs
call
das
pusha
imul
xchg
push
movs
pop
sub
mov
loop
sbb
(bad)
xor
ds
test
leave
push
push
mov
(bad)
lods
aam
(bad)
jne
leave
repnz
sbb
dec
lahf
loopne
xchg
xor
das
add
mov
xchg
add
mov
ins
call
add
hlt
cdq
shr
mov
test
mov
scas
push
inc
pop
(bad)
in
fdivr
jecxz
mov
sbb
mov
xchg
xor
clc
mov
push
push
cwde
in
inc
jmp
mov
cmps
lods
xchg
imul
cmp
fmul
add
and
sbb
ds
pop
bound
mov
out
xor
stos
sub
pop
int
sub
pop
cdq
sub
fiadd
enter
sub
push
imul
sbb
jg
ins
ds
or
leave
lods
jns
inc
xor
push
mov
and
cmps
mov
out
cli
pop
dec
adc
sub
push
iret
loopne
mov
add
inc
dec
ins
mov
jbe
aad
hlt
bound
ins
cmp
leave
popa
xor
inc
and
cmps
(bad)
scas
rol
(bad)
mov
neg
dec
dec
and
or
mov
and
xlat
ds
(bad)
inc
jmp
sub
(bad)
xchg
out
xchg
or
sbb
pop
mov
sbb
shl
xchg
(bad)
adc
sub
into
loop
jmp
stc
jnp
mov
call
pop
or
push
push
pusha
mov
(bad)
pop
lea
cld
retf
inc
imul
xor
lods
pop
rol
sbb
call
fdivrp
shl
mov
push
pop
cmc
jbe
push
(bad)
xchg
int
push
into
out
xchg
xchg
push
(bad)
cmp
xchg
inc
adc
in
sub
scas
jp
call
ror
(bad)
sbb
mov
test
mov
rol
xchg
add
inc
test
xor
mov
mov
(bad)
pop
(bad)
imul
mov
cmp
xchg
push
push
mov
xchg
retf
hlt
shr
loopne
add
popf
pop
add
pop
xchg
call
jmp
add
lock
xchg
sbb
and
ins
ret
jne
icebp
mov
push
push
mov
in
jae
jne
push
sbb
xlat
xor
dec
adc
shl
loopne
sbb
inc
add
push
mov
inc
pop
pop
jle
cs
push
jno
adc
dec
cmp
addr16
jmp
or
push
push
push
addr16
call
loopne
jnp
fsubr
sbb
arpl
out
push
or
dec
sub
idiv
bound
or
movs
cmc
push
je
cmp
lods
jge
or
push
inc
(bad)
xor
cmp
inc
jnp
adc
mov
add
adc
mov
xchg
add
jmp
movs
cmp
fild
(bad)
enter
mov
repz
mov
loope
inc
adc
(bad)
(bad)
addr16
pop
pop
retf
pop
cmp
cmc
imul
imul
xlat
jno
loop
jmp
imul
mov
clc
call
inc
sbb
xchg
push
jmp
addr16
or
test
clc
rol
add
mov
add
jb
loopne
and
cwde
cmp
add
jp
dec
sbb
add
mov
fs
add
scas
mov
sub
jmp
mov
scas
movs
cmp
arpl
push
pusha
xchg
imul
aam
lds
js
jge
outs
ret
enter
xor
push
push
push
inc
xor
push
mov
sub
arpl
in
mov
ja
jecxz
enter
mov
dec
mov
push
xchg
mov
add
add
cld
fsubr
push
loop
cld
xor
dec
sub
movs
cwde
jmp
adc
jp
mov
jbe
cmp
mov
pop
mov
push
push
mov
pop
mov
rol
hlt
and
je
push
and
mov
mov
sbb
gs
cmps
mov
rcl
bound
pop
or
mov
jecxz
mov
div
mul
xchg
shr
shr
fst
pop
ja
ret
stos
xchg
out
xchg
jecxz
retf
movs
jge
iret
mov
cmps
out
jns
add
push
pop
sub
jmp
push
mov
and
jnp
js
pop
xchg
add
add
mov
add
sbb
push
sbb
add
inc
call
inc
retf
test
iret
adc
out
add
adc
push
jmp
call
ret
xchg
or
fldenv
out
lds
inc
add
xchg
mov
out
add
push
jle
test
aam
xor
jmp
mov
inc
xor
push
push
mov
xor
and
loopne
xchg
rcl
fbld
out
pop
stc
sahf
jmp
add
xchg
inc
dec
pushf
imul
into
icebp
(bad)
jbe
out
(bad)
xor
mov
int3
xor
cmp
xlat
mov
inc
scas
data16
push
mov
pop
(bad)
mov
sub
in
dec
cmp
pop
mov
lea
dec
xchg
stos
sub
or
add
push
mov
cmp
retf
aam
push
es
ins
clts
adc
mov
outs
and
stos
rcr
rcl
mov
ror
jmp
push
push
inc
cmp
leave
xor
pop
pop
cmps
lods
adc
push
pop
aam
mov
cs
jnp
(bad)
push
cs
cld
hlt
movs
sahf
xlat
lods
xlat
pop
pop
lods
in
cmp
pushf
das
push
xor
and
push
clc
ds
sbb
repz
ins
add
add
sbb
xchg
jne
jmp
push
pop
iret
repz
movs
add
or
add
add
jae
clc
mov
add
mov
cs
push
cwde
lock
jp
mov
inc
js
xor
adc
ficomp
lock
test
ficomp
jno
popf
mov
and
mov
cmp
inc
test
mov
pop
(bad)
push
fcomp
in
clc
push
xchg
dec
stos
ins
data16
jmp
aam
mov
retf
mov
inc
sub
js
cmps
dec
sbb
push
cmps
hlt
jmp
ror
cli
lods
iret
(bad)
stc
lahf
bound
pop
dec
ds
or
xchg
shl
loope
jns
add
adc
jp
mov
mov
and
(bad)
test
jno
js
dec
dec
(bad)
mov
dec
push
loope
xlat
test
lods
xchg
xor
mov
push
sahf
outs
movs
xchg
inc
popa
jne
push
pop
sti
or
xchg
sub
pop
stos
ret
sub
jb
mov
and
inc
jmp
add
mov
sub
mov
jbe
sbb
jg
adc
fs
ss
mov
idiv
daa
mov
add
push
add
jle
add
add
test
xor
jmp
retf
cli
ja
or
test
cmp
or
nop
add
push
dec
mov
dec
ret
jmp
outs
fistp
imul
fadd
pop
iret
movs
mov
adc
cmps
shr
sbb
(bad)
test
into
loope
iret
jg
add
mov
xor
cmps
cmp
fwait
jl
cmp
push
test
jo
push
ret
in
and
push
inc
mov
or
dec
lahf
cdq
inc
outs
fimul
retf
and
ins
pop
scas
xor
cmp
sub
jge
mov
xor
scas
punpckhdq
out
repz
sbb
call
pop
cmps
addr16
adc
call
push
sar
pop
sub
mov
mov
mul
stc
adc
prefetch
rcl
and
mov
push
inc
xchg
mov
loop
nop
xchg
inc
inc
icebp
add
sahf
add
or
cmp
fldcw
xor
fld
jnp
mov
or
repz
aam
sbb
xor
xchg
jmp
push
adc
add
xor
dec
test
test
mov
(bad)
mov
cdq
xor
mov
retf
cs
jmp
xchg
aas
cld
push
mov
lea
mov
add
add
add
add
or
pop
retf
mov
pop
cmp
add
add
add
pop
cmp
fsubr
jno
add
jbe
jae
sti
neg
test
sahf
jle
in
dec
lahf
jp
inc
jmp
adc
inc
cld
loopne
out
xchg
add
scas
vmovdqa
lea
dec
cmp
xchg
fisubr
xchg
jne
push
xor
inc
mov
shl
movs
outs
lods
jbe
jle
adc
stos
aam
sub
out
loop
jne
sbb
mov
or
push
in
stos
cmp
sbb
out
xchg
cmp
fmul
rcl
sar
sbb
inc
or
jecxz
test
add
hlt
popf
xchg
cmp
xor
cmp
jo
pop
xchg
mov
jl
mov
nop
leave
icebp
jmp
inc
das
inc
or
mov
daa
jmp
inc
or
bound
inc
push
in
mov
pop
xchg
scas
inc
pop
and
aas
inc
dec
outs
ret
aad
arpl
sbb
es
pop
movs
mov
push
adc
in
pop
mov
pop
xchg
sub
push
scas
mov
sti
xor
fwait
inc
and
ret
jo
aaa
or
sub
call
inc
bound
or
out
mov
mov
(bad)
sti
push
sti
pop
jge
push
add
loop
ja
add
add
push
add
xlat
xchg
lods
fnsave
popa
add
pushw
jo
sub
sbb
cli
xchg
push
xor
mov
add
cmp
inc
sbb
xchg
xchg
out
(bad)
sbb
push
fldenv
mov
dec
xor
dec
jne
imul
inc
dec
shl
inc
nop
sahf
jp
loope
or
lock
lds
mov
in
mov
lahf
inc
pop
pop
scas
test
xchg
fdivrp
mov
inc
bound
test
mov
das
add
mov
cmp
or
cmp
test
sub
pop
pop
int
nop
imul
fnstcw
xor
add
and
jmp
iret
aad
jecxz
(bad)
mov
add
repz
ds
inc
mov
arpl
cwde
test
jle
lds
xor
jns
repz
xor
cdq
(bad)
arpl
xor
sub
je
pop
ins
mov
jg
adc
add
int3
sub
xchg
in
sub
call
and
mov
retf
in
in
add
push
out
jge
xor
imul
pop
daa
mov
mov
sub
sub
xor
push
rcl
jno
jno
outs
addr16
popf
xor
daa
inc
mov
mov
icebp
mov
xchg
js
arpl
icebp
movd
loopne
push
add
call
cmp
call
jnp
repz
fwait
pop
xlat
pop
or
ficom
push
add
inc
add
lods
mov
pop
xchg
cwde
push
addr16
xchg
or
(bad)
in
(bad)
mov
dec
cdq
add
push
das
test
icebp
cmp
inc
mov
fstp
mov
or
cli
(bad)
addr16
xchg
leave
push
rcr
fisttp
ficom
rcr
repnz
cmp
dec
dec
imul
xor
push
fadd
mov
pop
xor
jne
fwait
jns
jle
sub
jg
mov
dec
and
dec
sub
shr
inc
or
and
jp
pop
retf
and
or
mov
or
ror
mov
cmp
addr16
xchg
add
sar
adc
enter
add
shr
xchg
test
repnz
sub
xchg
sbb
sbb
out
sub
movs
sub
in
neg
movs
jne
pop
dec
add
ret
arpl
and
add
sar
mov
sub
adc
or
fwait
popf
push
repnz
and
out
jnp
(bad)
jmp
jbe
jne
pop
inc
add
cmp
xor
retf
add
xchg
add
add
aas
xchg
jle
jmp
push
sbb
out
add
add
(bad)
cld
xchg
jns
mov
xor
push
xchg
iret
jmpw
mov
popf
loop
test
push
arpl
shl
ret
pop
inc
outs
gs
inc
pop
pop
adc
jg
mov
add
jp
leave
cmps
push
movs
fs
loop
imul
xchg
mov
xchg
and
mov
adc
and
add
add
sbb
mov
es
enter
sbb
jb
cmp
leave
ret
retf
int3
cmp
add
cli
retf
pop
dec
out
jno
call
rcl
or
fnstcw
add
adc
sahf
shl
cmps
enter
mov
ror
sbb
inc
shl
out
xchg
jp
mov
add
push
cmps
je
mov
fdivr
icebp
les
cmp
test
and
sbb
jp
sbb
inc
outs
not
pop
add
enter
adc
cmps
cmps
xor
mov
push
sub
xchg
xchg
rcr
jl
stos
mov
es
and
retf
out
stos
stc
aam
popf
dec
or
arpl
dec
pop
bound
dec
inc
(bad)
mov
stos
and
jg
enter
xor
adc
hlt
ret
add
(bad)
outs
add
das
add
pop
pop
mov
add
add
or
push
sar
or
sbb
xchg
lock
loopne
add
xchg
dec
rol
retf
mov
mov
data16
fwait
ret
fisttp
popa
ins
sbb
mov
cmp
cld
xor
shr
mov
push
pop
jle
mul
je
cmp
and
pop
jle
or
fwait
iret
or
jns
fiadd
inc
mov
pop
(bad)
and
aad
out
repz
add
dec
in
sbb
in
mov
mov
sub
repnz
sbb
psraw
sbb
pop
sub
popa
test
xor
sar
sbb
inc
nop
mov
or
adc
fild
aas
sub
jp
add
push
fnstsw
or
popf
and
adc
and
sbb
dec
imul
xchg
imul
cmp
and
rol
push
aaa
int
and
les
or
arpl
sbb
sub
mov
(bad)
xor
adc
and
mov
lds
sub
mov
pop
jns
pop
mov
sbb
mov
add
cld
(bad)
repnz
add
xchg
mov
jae
sar
iret
xchg
and
pop
sti
mov
das
push
or
add
and
out
test
xchg
push
adc
jae
dec
pop
movs
out
xor
hlt
es
mov
pop
arpl
aaa
and
cmps
xchg
or
and
push
pop
inc
aad
arpl
and
xlat
lea
mov
pop
xor
fimul
dec
fidivr
xor
mov
repnz
popf
mov
push
cmps
(bad)
repnz
xor
sub
sahf
pop
fst
mov
jns
jmp
mov
hlt
cmps
dec
push
pop
ror
mov
shl
sub
clc
rcl
adc
mov
out
ds
cmps
mov
sbb
dec
fs
hlt
cmps
add
mov
inc
cmp
xlat
mov
ja
aaa
mov
sub
add
mov
pop
mov
out
adc
neg
outs
lods
adc
fld
xor
call
sbb
push
sbb
repnz
mov
mov
sbb
push
sbb
shr
jmp
les
movs
call
push
push
cdq
adc
ja
add
outs
add
push
jle
rol
mov
icebp
out
idiv
out
jp
arpl
popf
pop
add
dec
add
xor
rol
jns
cmp
adc
jmp
(bad)
fld
add
add
or
push
pop
fld
xor
outs
sbb
mov
or
mov
jbe
dec
leave
ins
or
jb
mov
cmc
and
daa
lock
xchg
leave
and
sub
cmps
movs
into
mov
cdq
jae
xlat
push
(bad)
push
xchg
sbb
sbb
and
inc
dec
(bad)
cmp
shl
cmps
jnp
fdivr
push
mov
pushw
jae
sub
sbb
inc
(bad)
retf
div
imul
hlt
gs
sub
aas
repz
push
pop
ret
cmps
loopne
je
adc
mov
ror
or
ss
mov
mov
nop
pop
pop
(bad)
into
or
adc
adc
xor
mov
or
and
adc
and
ret
push
xchg
xor
out
test
arpl
sbb
sbb
in
popa
add
mov
es
fsub
inc
inc
add
test
mov
sub
mov
enter
fidivr
out
scas
dec
sbb
fisub
fld
jl
stc
adc
mov
and
sti
icebp
enter
cmp
std
loopne
add
movs
add
rol
add
fxch
add
shr
scas
shr
mov
rcr
or
fs
add
xchg
(bad)
repz
jp
xor
out
scas
mov
inc
imul
pop
fst
iret
jle
jno
dec
cwde
sahf
call
mov
out
push
mov
add
into
or
cdq
pop
hlt
cld
mov
mov
pinsrw
jle
into
add
ins
pop
in
add
bound
(bad)
dec
pushf
inc
mov
retf
jmp
imul
mov
mov
movs
adc
or
jp
lahf
stc
scas
lahf
push
add
(bad)
mov
retf
fwait
(bad)
(bad)
mov
(bad)
dec
xchg
mov
adc
add
mov
jp
fxam
push
int3
cs
les
pop
xchg
or
fild
mov
mov
and
and
in
fisubr
mov
out
and
lods
pop
iret
addr16
arpl
mul
and
xchg
sbb
into
das
pop
cmps
inc
inc
nop
push
in
add
rol
sbb
dec
popf
jp
(bad)
dec
ss
leave
addr16
inc
xor
ror
shr
gs
out
stc
rol
(bad)
or
pop
pop
add
add
inc
add
rcr
add
inc
shl
dec
icebp
mov
sahf
addr16
xchg
dec
cmp
cmp
dec
add
in
mov
cdq
xchg
push
xchg
aam
pop
dec
jmp
int3
pop
test
dec
aaa
jbe
fild
dec
sahf
cmp
cmc
ins
lods
test
shr
or
cmc
mov
or
(bad)
test
rcr
(bad)
cmp
and
pop
and
inc
das
mov
push
dec
sub
addr16
pop
jge
icebp
pop
pop
pop
aad
mov
pop
jmp
push
rol
mov
rol
test
jle
mov
aas
(bad)
fiadd
rol
jecxz
leave
aam
lods
dec
out
xchg
sub
dec
les
jmp
dec
test
aad
lock
pop
in
out
mov
rcl
jno
adc
pushf
mov
push
int3
test
jmp
fiadd
or
jo
jp
cmc
dec
push
out
mov
sar
call
sub
pop
mov
sub
adc
xlat
aad
inc
jbe
std
ss
cmps
and
movs
cmp
mov
inc
fldenv
popf
adc
in
call
add
out
mov
xor
xor
sar
test
sbb
jo
add
add
push
lahf
mov
in
mov
std
lds
pop
ror
stos
fimul
pop
(bad)
xlat
(bad)
out
pop
int3
adc
jmp
jmp
or
xchg
push
push
pop
jle
xchg
mov
das
dec
popf
cmp
out
xor
pop
cmps
out
scas
mov
add
and
add
cdq
or
(bad)
xchg
and
mov
mov
push
sti
mov
ins
(bad)
add
inc
fisttp
jmp
xchg
sub
(bad)
xlat
movs
dec
mov
stos
mov
xchg
mov
int3
xor
sti
push
cmps
sbb
cld
fstp
jl
(bad)
dec
lahf
(bad)
xor
ds
xor
nop
xchg
or
inc
ret
pop
and
push
jp
or
pop
pop
lds
add
and
mov
scas
add
sbb
test
imul
rcr
in
das
adc
test
ss
add
sub
aaa
fistp
or
adc
dec
out
sahf
arpl
adc
and
jecxz
fldenv
sub
pop
xor
xchg
mov
out
mov
dec
imul
ss
imul
arpl
xchg
pusha
jl
jb
or
jns
test
stos
or
mov
xchg
inc
popf
sub
int
add
add
jl
out
jb
mov
or
scas
add
push
xor
daa
loope
push
dec
pop
dec
sub
sub
iret
stos
neg
pop
inc
mov
inc
xor
push
xchg
mov
retf
pop
jo
(bad)
dec
sub
pop
add
xchg
add
out
jp
lea
(bad)
fld
jmp
setns
imul
mov
data16
int3
adc
inc
jnp
and
sbb
cmp
add
or
ins
and
pushf
cli
add
jp
and
adc
gs
dec
pop
rcl
arpl
bound
inc
mov
fisubr
cmps
cmps
or
inc
pop
ret
in
xor
cmp
sub
dec
adc
fiadd
cmps
xor
sub
mov
xor
int
jne
in
adc
push
or
push
(bad)
jmp
push
scas
les
pop
repz
push
cmc
pop
loopne
inc
mov
adc
jmp
(bad)
xor
adc
test
lea
aam
lds
and
inc
mov
jecxz
jecxz
cmps
xchg
sti
sub
push
and
sar
outs
fmul
and
or
int3
xchg
and
dec
lahf
sar
loopne
add
cmp
(bad)
push
jge
ins
in
cmp
add
add
mov
in
call
into
jnp
and
pop
(bad)
jl
pusha
sbb
ins
int
pop
jmp
popf
enter
call
jmp
dec
ds
fmul
sub
stc
lods
bound
les
adc
mov
xchg
ja
(bad)
aaa
repnz
dec
or
nop
inc
xor
jo
mov
adc
sbb
outs
or
sub
pusha
xchg
cmps
mov
mov
ds
mov
movs
jl
mov
dec
dec
cs
bound
and
and
repnz
mov
push
mov
mov
lea
cmp
enter
enter
rol
sbb
and
adc
jnp
jp
cdq
call
mov
adc
pushf
movs
or
jecxz
out
jo
cld
sub
or
cmp
inc
fbstp
jo
scas
and
clc
repz
jae
cmp
gs
mov
or
and
outs
out
push
rol
jg
mov
sbb
outs
xor
leave
push
dec
sub
leave
add
pop
cmp
icebp
test
popf
pop
lds
dec
cld
or
jp
mov
add
xor
add
shl
add
sub
push
add
xor
xor
enter
stc
inc
mov
mov
pop
test
int
and
dec
xchg
xchg
hlt
jbe
sti
icebp
mov
mov
cmc
xchg
mov
cs
add
mov
test
push
(bad)
pusha
enter
lea
inc
push
(bad)
movd
mov
mov
pop
and
cmp
jmp
xor
mov
adc
dec
sub
popa
lods
ror
test
jecxz
xor
shl
jnp
pop
addr16
pop
pushf
les
mov
stos
ss
call
push
adc
or
movs
dec
fild
call
sub
data16
xchg
inc
pop
or
jge
enter
adc
clc
xchg
sbb
push
sub
rcl
fisub
add
cmp
add
pusha
imul
pushf
pushf
aad
ret
xchg
cmp
loop
into
stos
loop
cld
call
sahf
loopne
inc
pop
in
imul
mov
mov
sbb
icebp
js
out
sbb
maxps
or
cs
(bad)
jle
cmp
mov
aaa
inc
add
fild
sub
cmp
rol
cmp
add
mov
pop
ss
or
fcmove
call
jne
mov
pop
(bad)
repnz
or
mov
ret
cmp
pop
shl
cmp
iret
sub
cmp
hlt
jle
cs
enter
pop
(bad)
and
pop
dec
pop
fst
inc
sub
inc
sub
jecxz
movs
xchg
push
neg
mov
aaa
out
jns
test
xchg
sbb
and
adc
(bad)
pop
adc
jb
xchg
add
rcr
lods
fsubr
jge
sbb
jmp
pop
into
rcl
fsubr
adc
xchg
repz
inc
push
sar
mov
mov
sbb
adc
jnp
lock
pop
fdiv
inc
nop
call
loope
or
test
rcl
push
ret
bound
jbe
add
push
call
push
or
nop
cmp
pushf
inc
adc
ins
xchg
shl
mov
mov
mov
out
pushf
ret
dec
add
pop
fidiv
lods
sbb
dec
loope
icebp
jecxz
cdq
fwait
ret
(bad)
jl
(bad)
mov
jno
adc
out
xchg
ins
les
retf
add
inc
pop
xchg
cli
xchg
xchg
jno
rcl
xchg
or
std
std
cmp
xlat
iret
loope
idiv
fnsave
sbb
add
dec
add
and
or
or
pop
int
mov
int
push
add
add
aaa
sbb
jmp
hlt
sar
and
mov
sbb
out
sahf
ret
fstp
inc
mov
icebp
repnz
ins
les
xor
es
sub
jmp
cmp
(bad)
lock
std
xchg
(bad)
add
dec
xchg
add
adc
sbb
test
dec
(bad)
mov
pop
adc
jo
xchg
push
loope
mov
mov
xchg
fld
mov
jo
sub
int3
push
(bad)
xchg
scas
lods
cmps
jno
lock
jp
mov
and
inc
out
jns
in
cmp
mov
test
popf
inc
mov
sbb
xchg
or
xchg
rcr
mov
(bad)
and
or
vpsubsw
data16
fstp
mov
into
pop
das
outs
sbb
lea
pop
stc
fucompp
push
add
ds
push
push
bound
sbb
sar
mov
ins
rcl
loope
cmp
xor
popa
and
cmc
push
xor
pop
sar
pop
adc
fiadd
sub
ins
ins
jo
add
dec
inc
sbb
je
(bad)
into
js
inc
add
or
test
fdivrp
idiv
sar
clc
xchg
add
add
fdivr
sbb
mov
pushaw
repz
add
cmp
xchg
stc
gs
cmc
add
pop
pop
(bad)
sub
xor
fcmovnbe
retf
xor
sti
out
jnp
jnp
jmp
test
dec
arpl
aam
ins
or
sub
xchg
sbb
(bad)
pop
(bad)
aad
push
mov
out
mov
cmp
gs
mov
js
or
mov
inc
push
imul
aas
cmp
xor
lea
sub
cwde
adc
sbb
or
mov
fwait
lahf
inc
mov
mov
xchg
jns
lock
mov
pop
xor
inc
inc
addr16
loop
sub
cmp
sub
mov
sub
out
mov
(bad)
into
fidiv
xchg
js
das
sub
and
adc
call
pop
int
enter
mov
push
xchg
cmp
xchg
call
and
xchg
pop
sub
cmp
push
enter
ins
loope
sbb
cmps
sbb
out
in
enter
sbb
jno
mov
jg
or
mov
fmul
pop
mov
push
ltr
add
pop
add
sbb
mov
sbb
test
dec
jg
call
fdivr
stc
ret
xchg
add
sub
jmp
nop
mov
test
adc
xchg
out
mov
inc
pop
jae
jmp
jg
add
pop
std
jmp
add
or
call
lods
push
or
cmp
sbb
and
ja
(bad)
outs
add
cdq
pusha
movs
mov
inc
mov
mov
retfw
ud0
jg
inc
enter
jmp
jb
pop
sar
test
sbb
out
clc
and
and
nop
leave
sub
mov
pop
es
fwait
dec
es
push
jl
or
lods
and
cmp
pop
call
dec
mov
xor
or
pop
push
cmps
add
movs
mov
and
pop
movs
inc
into
scas
lods
push
xchg
leave
(bad)
jbe
mov
add
into
imul
adc
xor
jle
pop
mov
je
jne
lock
sub
in
sbb
mov
xor
ins
push
into
repz
and
dec
xlat
xor
add
mov
mov
pop
or
jmp
push
sbb
and
add
sub
ins
mov
mov
leave
or
xor
(bad)
shl
or
ficom
jecxz
out
sbb
cmp
and
xchg
mov
push
xor
das
lods
and
aad
cdq
into
fist
fdivp
rol
clc
retf
add
stos
add
pop
jmp
jecxz
stos
xor
test
sub
sar
movs
retf
stos
loopne
pop
jbe
(bad)
(bad)
sbb
repz
jle
fcmove
xor
jmp
les
and
and
outs
jge
imul
shr
fdivp
xor
(bad)
call
dec
push
push
cmps
aam
pop
jno
fmul
mov
loope
xor
mov
dec
out
ins
fwait
cmp
stos
xor
test
xor
cmp
sub
clc
icebp
ror
test
xlat
pop
dec
cmps
mov
push
mov
or
ja
jmp
cmp
sbb
add
add
jg
shl
adc
xor
mov
mov
mov
rcr
and
push
and
xchg
(bad)
js
add
(bad)
mov
std
pusha
jge
bound
add
add
add
(bad)
leave
fsubrp
addr16
test
sbb
dec
test
adc
sbb
mov
cmps
jmp
mov
stc
aad
ror
add
mov
sti
xchg
shr
int3
push
pop
sbb
push
aad
lahf
push
in
sub
das
and
lods
(bad)
push
das
aas
lock
sub
aam
pop
inc
inc
sub
jmp
sub
retf
push
lahf
neg
pop
retf
pop
jmp
jae
and
inc
ret
xchg
imul
dec
xor
out
ret
jge
in
shl
pop
adc
int
push
pop
cdq
in
cdq
and
int3
add
add
sbb
pop
sub
mov
loopne
pop
push
mov
loope
out
jnp
add
mov
inc
(bad)
mov
lea
leave
or
lock
xor
fsubr
push
cmps
(bad)
fucomp
(bad)
sbb
cdq
and
push
adc
mov
or
and
cmps
mov
xchg
sub
outs
inc
aad
mov
repnz
inc
fimul
ror
push
or
into
push
in
fidivr
push
sbb
clc
lds
and
scas
push
dec
call
mov
pop
lock
xchg
mov
adc
xor
pop
xchg
adc
jne
ja
retf
inc
push
mov
fidiv
mov
mov
iret
push
and
aad
adc
mov
add
cmp
lods
test
or
dec
enter
or
out
jecxz
jmp
lods
shr
adc
xchg
jmp
outs
jbe
dec
add
mov
xchg
lock
lea
in
inc
cmps
pop
rol
xchg
mov
jnp
pop
dec
call
int
cmp
push
scas
movs
pop
jmp
xor
mov
iret
xor
in
cmc
push
inc
mov
sbb
and
js
aam
pop
xor
xlat
xchg
cmp
popf
pop
pop
sub
jnp
fcmovne
push
cmp
mov
inc
sahf
xchg
pop
pop
mov
and
stc
add
stos
gs
js
(bad)
and
sti
or
sbb
dec
xchg
add
xchg
(bad)
sbb
dec
cmp
xor
add
xchg
sbb
lock
cli
(bad)
ja
xor
jbe
lea
mov
(bad)
push
xor
cmp
arpl
adc
jae
imul
xor
loope
(bad)
fidiv
bound
or
and
xchg
hlt
repz
cmp
push
rcr
mov
mov
pop
fucomip
add
add
std
xor
(bad)
call
fadd
xchg
add
popf
test
mov
cli
pop
das
adc
add
and
xchg
sbb
xchg
ret
aaa
(bad)
inc
js
fwait
pop
js
(bad)
test
fisttp
inc
dec
add
jmp
and
or
xchg
std
jge
icebp
and
hlt
loopne
call
js
mov
stos
push
icebp
jmp
push
movs
mov
std
cld
mov
nop
movaps
call
adc
add
mov
push
outs
sbb
fdiv
mov
mov
je
mov
or
addr16
xchg
sahf
not
mov
sbb
cmp
out
xor
fsubr
icebp
sahf
sti
loopne
sti
lock
jmp
pop
shr
or
sub
jae
dec
imul
daa
repz
out
test
inc
pop
data16
mov
jg
pop
movs
inc
pop
sub
cmc
adc
jp
sub
mov
fcom
ins
push
add
push
scas
retf
sbb
adc
bound
and
repnz
nop
jmp
rcr
add
repnz
jle
jns
fcomi
daa
mov
mov
mov
inc
cmp
repnz
js
jecxz
inc
pop
pop
cwde
push
xchg
idiv
out
test
xchg
add
add
sub
or
sub
add
aaa
add
imul
inc
out
das
sahf
sar
sbb
add
mov
retf
clc
(bad)
xor
loope
jg
inc
jecxz
rcr
mov
aad
jbe
jp
add
and
bound
test
jmp
sbb
out
popa
sti
push
test
sub
call
hlt
mov
aam
sub
rol
push
xchg
xchg
shl
loope
test
xchg
(bad)
sti
out
fimul
cmps
inc
imul
push
imul
test
inc
(bad)
sbb
mov
stos
stos
sbb
pop
inc
and
xor
mov
loope
rcr
jl
int
add
popa
or
dec
stos
enter
sti
and
movs
jmp
sbb
repz
outs
outs
cmp
pop
jbe
push
ror
enter
fidiv
mov
jbe
enter
inc
ret
cli
dec
push
and
cmp
add
mov
cmps
pop
iret
and
jmp
enter
movs
mov
loope
cmp
fbstp
bound
dec
add
push
jp
add
add
fild
jns
pop
sahf
mov
pop
retf
mov
idiv
clc
sbb
mov
mov
adc
push
sbb
sub
add
call
loopne
fstp
aas
xchg
ret
adc
jae
out
and
ss
in
test
jno
jnp
js
xor
inc
pop
or
xchg
jns
iret
int
imul
in
add
mov
push
pop
fdivrp
xchg
xchg
cmp
scas
int
mov
sbb
dec
mov
cmp
and
fs
mov
ins
int
enter
mov
push
and
sub
or
mov
or
fnstsw
cli
cli
mov
ds
mov
pop
daa
cmp
mov
xchg
ficomp
fdiv
mov
int3
int3
sbb
daa
out
jmp
mov
(bad)
arpl
scas
int
aas
xchg
inc
or
or
retf
jne
mov
xor
or
scas
or
xchg
xchg
dec
call
xor
inc
scas
and
std
or
clc
add
xchg
mov
test
sub
and
jp
pop
lods
adc
cmp
out
jmp
adc
xor
xor
sbb
ss
jnp
jmp
ret
mov
xlat
outs
les
mov
sub
test
repz
call
hlt
(bad)
leave
shr
xchg
add
test
ins
(bad)
add
adc
inc
loop
dec
dec
mov
add
(bad)
int
mov
cmps
imul
push
shl
out
sub
jno
addr16
mov
scas
jge
daa
cmp
xor
mov
and
sahf
push
ret
pop
pop
iret
bound
add
sbb
and
loopne
mov
outs
test
rcl
cmps
icebp
fucomp
jl
bound
ja
push
ins
shl
sahf
popf
inc
cmp
xchg
inc
shr
das
std
mov
test
mov
movs
xor
out
test
adc
jae
fdivr
outs
cmp
(bad)
sbb
es
iret
xlat
jo
rcl
popf
adc
mov
mov
dec
push
in
jp
pop
adc
add
dec
or
stc
movs
dec
or
call
out
cwde
xchg
add
popa
xor
mov
jle
(bad)
sbb
sbb
xchg
lods
jge
dec
pop
push
cwde
push
dec
ss
push
movs
scas
pop
(bad)
jnp
adc
enter
test
xchg
inc
loopne
push
adc
lods
imul
fld
xlat
leave
inc
(bad)
repz
lidtd
xlat
mov
inc
mov
(bad)
jbe
mov
adc
xlat
and
pop
sahf
scas
adc
pop
pop
cmps
icebp
addr16
stos
add
xchg
mov
and
mov
mov
add
add
add
and
add
inc
in
pop
add
sbb
mov
or
pop
lods
mov
or
or
call
test
addr16
shr
inc
sub
lods
rcl
sub
dec
and
mov
mov
aad
xor
es
cmps
and
mov
fild
popf
out
jl
ja
add
pusha
icebp
call
or
js
test
sbb
fwait
jo
push
jp
cmp
adc
jle
repnz
sti
mov
jl
(bad)
dec
ss
pop
das
or
jb
rol
sbb
mov
push
ss
jno
or
fdivr
scas
(bad)
pop
jle
jno
das
pushf
inc
pop
ja
cmp
shl
out
retf
adc
stc
retf
push
push
xchg
retf
les
retf
ins
cmp
fist
inc
add
dec
mov
inc
sub
mov
xchg
lods
sbb
adc
pop
add
cdq
mov
xchg
sub
(bad)
cmp
xchg
sbb
xor
leave
call
sbb
sbb
ins
xlat
out
inc
sub
sbb
sbb
add
pop
xchg
bound
xchg
xchg
or
add
fist
movs
inc
dec
cwde
mov
sti
xchg
cli
rcr
and
push
add
add
scas
dec
outs
push
mov
pop
add
mov
push
repnz
in
or
push
ja
mov
iret
jno
stos
push
xchg
and
cmp
push
push
pushf
inc
mov
mov
jbe
sahf
adc
std
movs
in
push
repz
pop
and
and
mov
or
or
or
ins
bsr
cmps
dec
popf
and
jl
mov
hlt
dec
dec
int3
push
cmp
jl
push
xor
or
icebp
mov
push
and
xor
retf
push
into
loop
add
jecxz
sub
inc
push
mov
mov
neg
ja
pop
inc
pushf
adc
xchg
and
push
cmp
adc
inc
fld
ror
mov
(bad)
rcr
pop
(bad)
test
cmp
test
inc
mov
mov
out
ror
into
dec
push
or
pop
sbb
xchg
sub
xor
or
mov
inc
(bad)
jns
call
test
int
retf
sub
xchg
mov
loop
ss
sub
xchg
mov
pop
mov
inc
loope
pop
sub
inc
in
fdivr
mov
test
out
scas
mov
imul
movs
dec
aam
cdq
xchg
pop
xor
repnz
or
add
fs
pop
sti
loopne
cmp
mov
faddp
mov
fdivp
ins
add
aad
adc
shr
ins
add
adc
retf
adc
pop
adc
pop
mov
pop
mov
call
adc
dec
cmps
jb
call
shr
xor
imul
stos
jle
jbe
pusha
jbe
push
sub
xor
fimul
mov
enter
push
xchg
pop
(bad)
sar
dec
add
xchg
lahf
jle
cmp
int
fist
or
call
fsub
nop
sbb
in
jmp
and
and
push
sti
std
jmp
test
fnstsw
imul
fisttp
sbb
icebp
mov
out
xor
jae
dec
jno
ja
mov
sub
inc
mov
cmp
push
jle
adc
(bad)
shl
mov
int
cmp
or
les
lods
dec
leave
mov
scas
out
sub
ss
and
xor
dec
jle
adc
sbb
add
dec
xor
inc
pushf
movs
addr16
je
mov
mov
nop
rcl
sub
sub
sub
or
inc
lock
xchg
pop
test
add
(bad)
js
push
lods
dec
(bad)
ret
xlat
js
cmp
fild
and
adc
outs
jge
(bad)
add
pop
or
jp
(bad)
mov
add
xor
adc
inc
sar
movs
out
adc
(bad)
jbe
push
shl
mov
ja
dec
sub
gs
add
and
pushf
ds
scas
inc
add
(bad)
int3
sbb
xchg
add
and
xor
add
add
dec
lahf
jmp
pop
jns
jns
push
jmp
dec
mov
in
sub
aam
adc
(bad)
mov
test
leave
xor
(bad)
mov
and
push
shl
jne
mov
loopne
push
pusha
push
sub
(bad)
scas
cmp
and
rcpps
pop
aam
pop
mov
add
mov
(bad)
xor
jae
and
xor
mov
out
dec
jge
iret
in
or
out
xor
gs
xor
dec
stos
xor
inc
bound
les
movs
aam
leave
pop
push
cs
lods
aas
push
(bad)
and
repz
jmp
jne
call
push
mov
jl
scas
push
daa
scas
fstp
imul
(bad)
dec
jbe
jmp
jbe
mov
data16
data16
outs
out
scas
addr16
scas
pushf
loopne
dec
lock
push
pop
lods
icebp
fiadd
mov
jmp
xor
rcl
ret
fdiv
xchg
(bad)
ins
push
add
push
add
mov
adc
cli
sub
mov
hlt
mov
out
add
dec
les
test
add
shl
push
push
xchg
mov
add
mov
fwait
lods
bound
or
mov
fnstsw
outs
add
loope
fdiv
lock
jg
shl
cmps
jne
push
mov
adc
fcmovnb
add
mov
ret
jmp
cdq
xchg
fisttp
mov
add
int3
push
sbb
cmp
and
push
ds
cmp
mov
fwait
mul
push
aad
std
xchg
in
add
push
add
cld
inc
xor
sub
mov
and
cmps
aam
imul
xor
mov
test
pop
movs
sbb
jb
push
add
cmps
xchg
mov
add
inc
stc
lods
sub
add
movs
adc
(bad)
mov
add
xlat
(bad)
(bad)
mov
adc
jno
cmp
mov
bound
ret
sbb
sbb
push
dec
cld
jle
ror
sar
jmp
in
mov
and
inc
mov
or
inc
xchg
es
inc
push
outs
xor
call
shr
int3
hlt
sbb
fiadd
cmovge
fld
sub
add
ins
add
mov
add
mov
scas
cdq
and
aad
shl
ror
icebp
dec
aas
ret
push
cmc
pop
dec
stos
cli
xor
hlt
outs
dec
jmp
pop
mov
sbb
dec
call
vsqrtss
sbb
sahf
jne
ins
cmp
jecxz
jl
out
mov
popf
xor
and
call
and
jbe
mov
call
add
mov
imul
call
pop
das
fsubp
jnp
cmp
movs
xor
imul
cmp
std
mov
mov
call
test
int
mov
int
repnz
sub
adc
pop
imul
call
pop
mov
sti
dec
(bad)
mov
sub
adc
les
jg
test
add
test
cmp
push
push
enter
test
xchg
adc
fcmovnb
pusha
(bad)
dec
fs
mov
scas
(bad)
pop
fild
cli
cmp
adc
clc
xchg
mov
fs
test
test
add
add
cmps
mov
(bad)
jge
pop
jae
les
leave
cmp
cmc
call
jnp
je
std
mov
test
mov
pop
out
fnsave
add
xor
mov
or
and
adc
mov
aad
pop
and
iret
aaa
adc
int3
or
retf
sahf
pop
test
outs
mov
loopne
mov
pop
and
fnsave
xchg
daa
mov
and
jns
imul
mov
les
jns
fwait
lock
inc
stos
imul
ja
pop
neg
pop
mov
mov
jae
pavgb
aam
sub
xor
dec
cmp
sub
adc
mov
dec
mov
dec
shr
popf
sahf
jnp
retf
mov
jecxz
in
fdivr
bound
in
adc
aaa
pop
or
push
add
popf
pop
adc
loopne
pop
test
jecxz
aad
movs
cmp
cmp
inc
mov
jmp
or
mov
clc
mov
(bad)
imul
mov
das
dec
dec
and
mov
sub
or
xchg
popa
sbb
out
sub
xchg
sbb
je
jl
movs
repz
inc
mov
push
dec
popa
ins
hlt
mov
ins
mov
and
gs
and
mov
lods
movs
rol
or
iret
cmps
shl
(bad)
data16
jbe
pop
out
push
call
aad
adc
mov
popa
add
pop
or
mov
adc
adc
or
jno
inc
mov
cmp
jl
outs
sahf
ret
cdq
push
sub
repnz
pop
pop
inc
sub
cmps
cmps
dec
rcr
mov
pop
popf
and
cs
sub
imul
inc
outs
jne
in
ss
add
xor
icebp
scas
mov
ja
xchg
jno
dec
outs
jb
ja
jbe
fmul
xor
xor
std
test
add
out
sub
movs
loope
mov
outs
cdq
bound
pop
dec
sub
adc
les
icebp
inc
ret
inc
mov
dec
cli
add
call
cmps
loope
push
lock
inc
mov
add
xlat
mov
and
mov
cdq
test
mov
dec
mov
ficomp
dec
sub
pop
dec
ret
push
or
push
jecxz
dec
xor
repz
call
lods
fist
mov
and
mov
mov
(bad)
aad
out
clc
cmp
cld
and
int3
fdiv
mov
push
popf
and
mov
pop
xchg
fs
fild
in
cmp
pop
into
icebp
fdivr
pop
add
xrelease
mov
mov
add
push
fcom
out
test
push
mov
add
push
pop
xor
outs
push
or
push
imul
or
adc
frstor
pop
sbb
js
xchg
add
aam
cmp
add
aaa
pop
dec
cmp
(bad)
fadd
sbb
push
jns
push
mov
sub
jb
mov
out
in
pop
cmp
outs
(bad)
push
mov
iret
ret
das
fcom
push
jl
enter
out
push
movs
cmps
push
and
jmp
pushf
test
retf
popf
xlat
jb
mov
pop
pop
dec
aaa
pusha
fwait
and
mov
repnz
dec
jbe
xchg
in
or
sbb
mov
mov
lds
imul
cmp
mov
adc
add
adc
mov
jp
gs
push
mov
and
sub
xor
shr
add
xchg
leave
jmp
bound
inc
add
les
sbb
(bad)
adc
jno
leave
add
and
out
and
and
add
mov
and
imul
cmp
pop
sub
xchg
and
jp
sbb
aad
add
popf
push
or
dec
sbb
mov
add
lds
pop
cld
cmp
rol
mov
and
mov
pop
pop
jbe
mov
mov
stc
sub
rcl
aas
stc
leave
or
int3
mov
outs
fmul
fnstcw
movs
leave
or
data16
iret
out
dec
cmps
xor
out
sbb
nop
push
cwde
hlt
ret
mov
xchg
cmp
shl
out
out
add
pop
inc
mov
inc
ins
mov
mov
or
pop
add
cmps
stos
inc
cmps
cs
mov
ret
push
into
dec
rcl
mov
add
popa
or
mov
push
sub
loope
jp
push
xchg
and
sti
rcr
fdiv
test
pop
dec
mov
add
add
push
or
shr
jl
add
mov
push
cli
mov
lock
mov
dec
xchg
mov
mov
xor
push
out
jp
jb
push
add
pop
dec
add
lods
sub
adc
mov
mov
fisttp
xchg
push
inc
(bad)
cld
mov
add
cmp
ds
and
adc
dec
push
sub
adc
hlt
pop
push
adc
cli
xchg
adc
add
loopne
mov
mov
xchg
jp
loopne
sub
shl
add
or
dec
mov
dec
or
and
aad
nop
dec
jp
push
xchg
(bad)
(bad)
cld
sub
add
mov
fwait
push
push
in
and
mov
xor
and
cmp
pop
push
pop
pop
ss
and
(bad)
in
scas
adc
mov
test
adc
jo
in
nop
out
data16
sub
test
call
cmp
fimul
inc
push
imul
cmp
cmp
or
aas
pop
add
inc
mov
(bad)
movs
imul
push
push
jno
mov
fwait
test
int3
inc
push
mov
mov
dec
and
cmp
clc
mov
shr
(bad)
mov
into
or
cmp
dec
jmp
push
pause
pop
mov
stos
push
hlt
stos
fs
xchg
push
aam
push
imul
add
bnd
pop
loopne
jmp
enter
mov
int3
ss
imul
lods
cmp
jo
popa
outs
inc
fst
inc
cmps
clc
and
ret
cmp
sub
test
xchg
shl
xchg
mov
je
std
fs
xchg
fild
pusha
loop
pop
add
add
add
adc
aam
xor
add
ficomp
jb
inc
mov
mov
dec
dec
fprem
rcl
mov
cmps
xor
xor
out
mov
ror
lahf
inc
cmp
imul
cmp
add
sbb
dec
les
adc
mov
mov
push
frstor
jne
jle
mov
add
push
(bad)
jae
xor
ret
out
cmc
cwde
pushf
adc
in
xchg
xor
or
mov
rcl
push
xchg
add
fisubr
lock
outs
(bad)
or
iret
push
mov
lods
sbb
stos
add
push
ret
add
mov
scas
bound
sub
cmp
sub
popf
adc
push
inc
leave
mov
(bad)
fadd
pop
inc
mov
jb
mov
add
aas
mov
lock
das
push
jbe
hlt
jns
(bad)
repz
cmps
lds
xchg
mov
repz
not
lock
rcl
fld
adc
fisub
cmc
ja
and
mov
lods
call
xchg
and
test
add
mov
rcl
cld
repnz
inc
mov
add
mov
div
add
es
cdq
call
mov
(bad)
je
pop
test
sbb
lock
mov
mov
xchg
inc
mov
push
popf
pop
xchg
neg
test
movs
cmp
and
xchg
add
aaa
aas
stc
stos
sub
inc
je
or
xlat
(bad)
fild
gs
and
push
mov
sbb
aad
or
sub
adc
inc
add
loope
(bad)
mov
enter
bnd
xchg
cvtps2pi
fdivr
mov
xor
or
sub
nop
add
push
inc
mov
ss
call
dec
iret
in
imul
pop
popf
xchg
jo
retf
lods
push
test
das
xchg
sub
sub
jl
add
and
test
cs
xchg
mov
mov
aaa
pushf
mov
adc
and
or
sbb
pop
mov
mov
pop
add
mov
jns
stos
jl
rcl
xlat
repnz
add
sub
adc
adc
pop
push
outs
add
aad
adc
jns
add
xor
mov
cmp
or
inc
and
add
or
add
cmps
xchg
mov
sbb
pop
cmp
adc
(bad)
cld
hlt
mov
stos
das
dec
cli
iret
xor
mov
lock
dec
add
mov
sub
ja
nop
cwde
sbb
add
jmp
dec
xor
cld
xor
pop
cmp
test
scas
pop
mov
jo
inc
retf
test
test
fidiv
dec
mov
add
icebp
ret
mov
enter
add
fisub
xchg
mov
cmc
addr16
in
repnz
xchg
outs
pop
adc
sub
cmps
xchg
pop
imul
xchg
cmp
adc
xchg
dec
dec
jle
add
pop
in
cmc
xlat
daa
cmp
add
or
or
and
pop
das
int3
inc
push
scas
and
test
inc
dec
xchg
mov
aam
add
xchg
shl
or
xor
cmp
mov
inc
enter
and
xchg
push
add
dec
test
fistp
push
adc
xchg
sub
add
mov
pusha
neg
pop
into
jmp
mov
call
mov
loopne
ins
ror
mul
jle
out
mov
or
ins
js
jle
iret
popf
fcmovnb
dec
xlat
fwait
js
jmp
cmps
cli
pop
sbb
das
sbb
movs
xor
pop
sar
int3
pushf
cmp
outs
rcr
xchg
and
(bad)
out
xchg
xor
data16
repnz
ds
jp
imul
xchg
mov
popf
sbb
mov
jo
xchg
ds
add
push
pop
sbb
shl
pop
icebp
into
lea
test
out
mov
mov
test
mov
(bad)
pushf
inc
dec
sbb
idiv
cmc
imul
add
je
mov
sahf
hlt
jecxz
cli
das
and
and
push
add
or
rol
nop
or
int
push
retf
push
sar
add
push
and
iret
das
mov
pop
cmp
fdivr
mov
aad
sbb
mov
push
mov
xchg
xchg
mov
sbb
xchg
cmp
iret
push
mov
mov
sahf
sbb
dec
out
out
mov
add
inc
arpl
popf
pop
pop
sub
bound
pop
rcl
loopne
add
inc
js
add
dec
aaa
in
pop
pop
lea
mov
ds
out
fstp
aad
xchg
sub
xchg
sub
cdq
jo
rcr
dec
call
adc
xor
adc
mov
mov
cld
jno
pop
cmp
rcr
push
and
ror
add
sbb
div
call
push
div
add
mov
ss
rcr
adc
mov
mov
cmps
pop
pop
lahf
sub
dec
mov
xor
inc
and
mov
sti
xor
cmp
pop
(bad)
add
pusha
xor
xor
icebp
cld
retf
and
xor
xlat
xor
and
sbb
popf
ss
dec
sbb
pop
pop
dec
cmp
cmp
imul
push
mov
xchg
dec
cwde
mov
scas
cdq
or
enter
pusha
xor
frstpm(287
rcr
or
xor
mov
jbe
or
and
bound
push
imul
popa
lahf
sbb
cld
push
cmp
fcom
rcl
and
mov
dec
add
mov
idiv
sbb
stos
mov
shr
call
add
or
(bad)
aaa
push
daa
fidivr
cdq
pop
das
sbb
xchg
call
cmc
and
jge
clc
dec
sbb
stc
cmp
pop
or
jmp
cdq
cmp
dec
adc
clc
jl
add
jmp
push
inc
movs
movs
xor
movs
jecxz
das
xor
fcom
int3
cmc
shr
ins
inc
ffreep
hlt
add
call
mov
push
push
shr
or
jne
push
jo
dec
xchg
xor
mov
shr
add
inc
and
push
push
sbb
jae
je
mov
add
les
fiadd
fisub
xor
push
jae
xor
cmp
mov
push
mov
push
xor
pop
outs
pop
pop
cdq
test
push
jns
push
mov
nop
daa
jo
leave
into
xor
and
push
xchg
das
pop
ds
ffreep
scas
inc
aaa
xchg
shl
sub
shl
push
xchg
rcr
cmp
mov
add
inc
and
(bad)
jmp
(bad)
jne
inc
gs
jne
mov
add
movs
push
and
sub
cs
add
pop
xchg
or
or
add
loopne
aas
(bad)
cmp
push
add
lahf
jl
leave
mov
sub
fimul
pop
punpcklwd
xchg
loopne
js
mov
jno
outs
push
or
jnp
or
cmp
push
adc
add
mov
shl
add
inc
lods
jmp
xor
lods
jmp
outs
mov
cmp
push
cli
pop
aaa
out
mov
rol
inc
or
cmp
ror
das
in
xlat
jmp
(bad)
js
mov
out
ja
sbb
add
shl
std
(bad)
add
pop
sar
aam
and
xchg
in
xor
movs
lock
sbb
mov
xchg
dec
add
ins
cld
mov
xlat
adc
cdq
xor
mov
sub
or
inc
cmps
inc
jbe
sub
inc
ja
ins
fld
(bad)
fwait
inc
pop
push
xchg
pusha
and
rcr
dec
or
adc
cmp
add
add
(bad)
jmp
add
repnz
add
dec
push
xor
adc
pop
mov
or
push
in
add
xor
lds
jmp
sbb
popf
cmp
ret
sub
pop
pop
inc
push
push
mov
imul
jp
cld
in
adc
mul
pop
fisubr
mov
push
mov
jbe
lea
push
sub
cmps
adc
mov
ss
movs
xchg
ja
sub
jne
cli
sub
cs
ds
ror
or
test
bound
mov
jo
aam
mov
mov
mov
mov
sbb
pop
xchg
test
cld
icebp
outs
dec
sub
test
xchg
xlat
xchg
sbb
ins
or
jg
cmp
adc
adc
jb
clc
jb
jb
xor
inc
mov
push
arpl
xchg
sub
cmp
dec
pop
mov
imul
adc
sub
push
mov
daa
test
jecxz
xor
(bad)
mov
xchg
add
arpl
xor
stos
lods
pop
cdq
ins
sar
das
movs
inc
push
lods
gs
mov
pop
inc
pop
stos
and
xor
jg
sbb
xor
call
add
js
add
stc
cdq
push
mov
loopne
mov
xor
xor
or
scas
mov
add
loopne
pop
jns
(bad)
loope
enter
mov
jbe
int3
in
mov
mov
pop
cwde
sbb
xchg
push
(bad)
lock
cmp
into
in
mov
or
pop
and
sbb
add
xchg
maskmovq
div
addr16
sbb
sub
fwait
or
mov
(bad)
sbb
fwait
add
pop
dec
sub
cmp
add
in
add
or
mov
lahf
aas
fs
ins
setp
aas
cld
lods
ffreep
repnz
push
jecxz
push
in
outs
aaa
jmp
pop
inc
mov
loope
cmc
adc
jge
sbb
and
push
scas
rol
addr16
sub
dec
push
rcl
test
sub
xlat
imul
jne
or
inc
xor
mov
imul
gs
lds
xor
dec
xor
lahf
inc
mov
adc
mov
add
mov
add
(bad)
in
add
pusha
rol
lock
jo
add
test
mov
fs
sbb
in
pop
jg
aam
lock
int3
iret
sub
push
popf
ins
cmp
jbe
ins
pushf
shl
adc
fcmovbe
xchg
movs
neg
sbb
(bad)
jmp
cli
lods
sbb
iret
sbb
sub
lods
ret
test
mov
ds
(bad)
mov
aam
xor
dec
mov
loope
xor
aaa
add
cmc
or
add
ror
add
rol
data16
adc
hlt
and
pusha
je
retf
cmps
pop
sti
scas
fild
jmp
enter
sbb
clc
sbb
jne
cmp
mov
jnp
jns
jb
or
push
and
jo
push
sbb
inc
cmp
jae
les
aad
popa
mov
pop
dec
xor
ins
fwait
jno
cmc
jne
add
lods
mov
pop
daa
sub
retf
mov
fisub
cmp
sub
mov
test
div
mov
into
sub
jo
mov
adc
cmp
or
ds
imul
jp
jg
stos
sbb
jmp
mov
add
add
pop
pop
and
sbb
cli
xchg
scas
add
pushf
mul
mov
adc
out
mov
xor
lods
aaa
mov
loope
jmp
add
mov
add
push
add
das
pop
rol
pop
ret
out
push
mov
fwait
pop
inc
mov
add
mov
jmp
ret
jmp
call
mov
sub
loopne
fisubr
jmp
in
cmp
es
lock
inc
add
arpl
leave
push
aaa
out
mov
or
ret
add
or
jl
xlat
xor
loopne
push
cmps
retf
xchg
and
(bad)
imul
pop
push
xor
sub
dec
imul
cmp
jbe
or
sbb
push
aam
inc
add
mov
inc
scas
xchg
enter
xchg
test
and
(bad)
xchg
inc
rcl
fmul
in
sbb
mov
(bad)
movs
mov
rcr
nop
adc
pop
in
movs
mov
test
repnz
fdivr
ror
push
shl
out
mov
cmc
lea
sub
xor
push
pop
shl
xchg
dec
adc
loopne
push
push
mov
outs
mov
pop
sbb
push
loopne
dec
std
sbb
repz
mov
push
out
retf
or
lea
shl
adc
icebp
mov
fild
scas
test
pop
adc
cli
pop
inc
xor
jbe
pop
add
(bad)
fcomp
loop
add
mov
lahf
mov
shr
ss
(bad)
fdivr
pusha
in
pop
stos
add
ror
jp
or
pusha
mov
mov
inc
in
push
pop
data16
pop
pop
mov
xchg
test
dec
aad
push
loopne
xchg
add
mov
jge
ins
ret
ror
shr
cmp
pop
outs
cdq
mov
cmp
shl
into
dec
jge
sub
pop
out
add
shl
pop
add
adc
dec
mov
or
jl
lock
adc
pop
xor
sbb
push
sbb
adc
test
mov
pop
pop
pop
inc
ds
out
mov
add
gs
jno
fisttp
and
ins
add
push
add
rcr
add
jmp
add
add
cld
xlat
pop
or
cmp
(bad)
out
icebp
push
sbb
xchg
loope
rcl
lock
mov
push
pop
outs
fwait
cmps
cmp
fisttp
adc
(bad)
ins
ret
leave
jmp
adc
sbb
icebp
mov
jbe
cmp
push
xchg
aam
dec
ficomp
dec
ror
movs
mov
movs
test
fnstsw
fadd
add
add
add
sbb
rol
inc
push
cmp
xor
cmp
dec
ror
and
mov
add
stc
mov
cdq
(bad)
shr
shl
mov
push
mov
neg
hlt
clc
retf
out
push
out
mov
sub
rcl
mov
xchg
add
daa
xor
lock
dec
mov
ins
and
cmp
in
cmp
dec
(bad)
mov
rol
cmp
mov
cmps
js
xchg
jb
dec
xchg
xchg
inc
mov
inc
es
arpl
push
ret
loopne
add
mov
add
add
test
dec
lock
pop
cmp
pop
or
outs
ds
adc
jbe
add
pop
iret
bound
mov
or
cmp
sahf
dec
rcr
cdq
inc
dec
push
(bad)
outs
leave
mov
es
js
movs
cmp
leave
out
leave
push
loope
int
js
les
sbb
mov
pop
cmps
add
fwait
xchg
mov
je
inc
cwde
sub
dec
leave
ins
retf
(bad)
add
cmp
mov
and
mov
push
sub
nop
pop
(bad)
mov
or
mul
in
mov
mov
sti
add
jmp
jbe
into
jbe
and
add
test
je
push
and
ss
shr
in
data16
fsubr
jb
jmp
lods
mov
add
and
pop
add
or
test
inc
adc
iret
mov
ret
out
push
cs
add
hlt
mov
sub
or
ins
add
std
push
(bad)
jecxz
daa
adc
mov
add
add
add
add
add
inc
mov
mov
scas
mov
out
push
sub
cmp
add
cli
sub
aaa
cld
aad
cmps
(bad)
push
mov
retf
jnp
mov
sti
push
or
imul
cmp
es
pop
mov
xchg
out
int3
dec
data16
rcl
cdq
mov
xor
jmp
push
mov
add
test
ficom
push
jp
mov
neg
imul
and
cli
jnp
jmp
cmp
out
sub
repz
mov
add
inc
(bad)
enter
xchg
xor
adc
mov
rcr
mov
fisttp
mov
jbe
pop
adc
imul
adc
push
cmp
push
inc
and
add
add
dec
jmp
add
pop
and
adc
cdq
mov
add
movs
cmps
adc
xor
fimul
and
rcl
mov
in
mov
pop
lahf
and
sub
out
adc
jo
mov
jp
(bad)
adc
inc
aad
dec
add
nop
inc
sub
(bad)
inc
xor
jo
(bad)
and
jp
and
add
jl
xchg
dec
and
bound
and
jne
inc
or
add
mov
adc
fcomp
mov
xchg
or
adc
cwde
fmul
adc
adc
pusha
pushw
add
sbb
or
add
loop
add
push
add
adc
add
loope
jnp
dec
add
fbstp
push
mov
mov
dec
jge
dec
push
arpl
out
mov
loopne
sbb
repnz
sub
jge
ins
call
jle
outs
rcr
fimul
push
sub
dec
cmp
addr16
xadd
mov
retf
cs
xor
cmp
in
cmp
inc
fnstenv
mov
sub
xchg
out
xchg
adc
(bad)
test
retf
stos
imul
dec
dec
js
xor
cmp
les
pop
adc
inc
mov
dec
cld
loope
and
call
out
cmp
jp
and
and
and
rcl
add
test
and
adc
dec
shl
pop
pop
jmp
pushf
inc
mov
sbb
dec
leave
jg
(bad)
adc
dec
stos
mov
add
jnp
mov
sbb
sbb
addr16
jns
bound
mov
mov
sub
mov
aas
sbb
mov
inc
or
mov
and
or
dec
sti
inc
or
repz
mov
arpl
cmps
(bad)
clc
xchg
repz
ds
retf
or
aas
jns
sbb
call
cmp
pop
or
pusha
mul
pop
jge
jp
adc
and
dec
jno
and
and
int
xor
cmps
iret
pushf
pop
fcmovnu
jp
(bad)
hlt
cmp
jne
jge
dec
inc
add
xor
mov
mov
leave
add
test
nop
sub
je
add
mov
(bad)
movs
out
(bad)
out
push
sahf
mov
xchg
inc
jecxz
clc
xchg
mov
ret
cmc
xlat
sub
mov
pop
add
ss
mov
cmp
and
add
in
jmp
iret
and
ficom
std
inc
push
bound
retf
xchg
pop
mov
std
pop
(bad)
imul
jmp
sbb
leave
enter
sub
cdq
mov
push
ins
xchg
pop
adc
lock
adc
mov
sbb
push
or
call
mov
mov
inc
sahf
and
jne
cs
jl
int3
mov
add
int3
add
nop
lock
add
inc
arpl
dec
push
pop
add
push
add
cmp
jo
xlat
std
hlt
in
cli
arpl
or
cmp
sbb
and
inc
adc
xlat
nop
and
inc
dec
leave
adc
sub
js
ja
pop
pop
cmp
xor
mov
xchg
jo
dec
mov
dec
(bad)
leave
loopne
jns
int
and
outs
dec
aad
xchg
out
push
(bad)
add
gs
sub
test
jp
dec
test
xor
test
pop
add
mov
imul
sbb
stos
adc
retf
imul
sahf
sub
pusha
pop
jg
pusha
div
xchg
dec
xchg
cmp
jb
dec
push
stos
push
sbb
and
es
sub
daa
sbb
jp
and
dec
pop
add
adc
cmp
pop
and
xor
mov
dec
je
jmp
pop
test
mov
adc
jmp
loop
imul
ror
add
add
push
push
or
push
bound
sbb
add
xchg
or
add
add
add
or
loope
mov
mov
inc
rcl
sbb
aam
cmp
loop
jno
dec
pop
cmp
iret
(bad)
popa
push
and
xor
inc
mov
push
inc
inc
dec
das
cmp
mov
rcl
push
xor
pop
xchg
dec
scas
add
sub
jle
mov
dec
outs
stos
icebp
stc
jge
or
(bad)
imul
xchg
jb
push
int3
fnstcw
sbb
sbb
jo
inc
jb
mov
add
mov
push
and
inc
test
pop
jae
jne
xor
push
and
jge
dec
dec
inc
jnp
mov
inc
jae
jle
jp
in
push
push
push
add
cmp
nop
xchg
out
mov
cmp
enter
jbe
sbb
mov
inc
push
inc
jo
enter
sub
iret
inc
movs
aas
stos
or
xor
add
mov
xor
nop
int3
push
das
add
sub
pop
cmps
hlt
mov
addr16
pushf
mov
aaa
ret
lods
int
inc
add
pop
cmp
add
pop
mov
add
add
or
es
fistp
lahf
retf
inc
fbstp
add
ror
jbe
aad
shl
xor
out
sbb
fadd
ins
in
adc
mov
aad
mov
xor
pop
jl
movs
mov
rol
lock
inc
shr
cmps
push
cmp
xchg
mov
imul
sub
mov
jnp
int3
scas
sbb
pop
inc
xlat
and
mov
push
push
add
jmp
mov
(bad)
int
dec
jge
cmp
add
dec
xor
inc
pop
sbb
pop
shr
retf
add
call
lea
cmp
xchg
out
test
push
mov
(bad)
pushf
jl
adc
mov
jmp
xchg
das
and
test
dec
jno
nop
mov
fnstenv
mov
inc
retf
inc
inc
xchg
mov
cdq
mov
fild
add
movs
jo
out
push
sbb
rcr
pop
xchg
pop
xor
add
retf
push
test
lock
shr
aad
mul
lahf
enter
pop
and
push
addr16
pop
ss
mov
jo
xchg
(bad)
imul
jbe
ins
movs
ins
das
bound
hlt
xor
das
add
push
mov
icebp
adc
cli
arpl
ret
jg
push
not
sub
addr16
mov
or
pop
mov
das
dec
ret
movs
icebp
into
jmp
pop
fs
mov
push
cs
jp
cmp
clc
add
repnz
out
test
add
sahf
leave
call
scas
cmp
cmp
cdq
call
or
sbb
fiadd
mov
push
icebp
cmp
push
(bad)
xlat
or
mov
jb
cld
in
enter
xor
sbb
pop
dec
pop
xor
or
add
ret
mov
or
xchg
xchg
mov
push
sbb
cwde
xchg
pop
pop
(bad)
mov
clc
ja
and
pop
fdiv
mov
xor
pop
cwde
pop
xor
add
inc
std
retf
shr
mov
lahf
lods
xchg
add
nop
add
jb
and
in
pop
in
adc
jb
and
jge
cmp
adc
sbb
pop
ss
hlt
add
out
add
dec
hlt
add
cmps
lahf
jecxz
mov
outs
mov
xlat
dec
lock
sbb
js
and
or
jo
xor
cld
aaa
mov
mov
pop
repnz
call
xor
mov
cs
pop
pop
outs
das
mov
push
ror
xor
fs
cmp
sub
into
jno
inc
cmp
lea
xchg
icebp
push
in
(bad)
aam
mov
test
inc
and
retf
shr
outs
jae
push
fcomp
cmp
(bad)
push
jne
out
inc
into
psubsb
test
push
out
or
popf
enter
xor
or
and
add
add
lds
jmp
jge
les
pop
shl
mov
mov
cmp
(bad)
and
mov
aad
sub
inc
out
inc
jns
mov
outs
xor
fcomp
rol
cmp
pushf
fisub
push
pop
cmc
cmovnp
and
or
lock
out
pop
mov
retf
lock
jb
iret
jno
add
sbb
push
cmp
mov
xor
inc
loop
push
ins
or
les
push
bound
out
or
or
jl
sahf
jne
xor
and
shl
movs
jb
int3
pushf
mov
pop
pop
fbstp
icebp
sub
xor
repnz
add
add
mov
mov
retf
ret
mov
in
cmps
pop
and
aas
mov
into
push
and
das
pop
add
dec
(bad)
or
mov
sbb
cmp
ds
dec
adc
jp
jno
in
inc
jo
xor
dec
pop
shl
inc
cmp
rol
jb
inc
sar
daa
push
dec
(bad)
mov
push
xchg
fidiv
ds
add
adc
leave
xchg
xchg
sbb
hlt
div
inc
outs
outs
das
sub
sbb
jp
cdq
mov
sub
push
stos
inc
rcl
lahf
fld
lahf
imul
idiv
pop
mov
verr
lods
cmp
ins
clc
sti
pop
mov
xchg
xchg
sar
inc
add
inc
add
adc
pop
adc
fistp
fprem1
dec
push
and
xor
loope
das
ins
adc
sbb
inc
test
dec
jae
int3
sbb
div
mov
xchg
add
or
and
sub
dec
push
push
push
push
push
pop
std
dec
jo
add
outs
fwait
pop
out
and
pop
inc
mov
sbb
sub
ret
aaa
data16
inc
sbb
(bad)
(bad)
jb
add
xor
cdq
add
adc
in
or
add
int3
add
jns
or
in
pop
mov
push
movs
cmp
aas
add
xlat
lahf
jl
mov
inc
xchg
enter
ror
push
mov
stc
sub
cmp
jb
cmp
test
rcl
or
adc
jb
movs
mov
(bad)
fwait
jno
mov
jg
push
in
xor
sub
pop
pop
push
enter
call
dec
mov
mov
test
scas
daa
jns
xchg
dec
xor
mov
add
jmp
ins
inc
punpcklbw
add
sbb
fs
sti
aaa
add
adc
ins
adc
and
push
ret
dec
add
test
pusha
mov
jmp
and
loopne
das
mov
das
jo
inc
dec
mov
call
inc
dec
push
lods
in
adc
inc
add
mov
loope
shl
adc
pop
mov
mov
xor
(bad)
std
icebp
dec
xor
push
mov
bound
cs
add
or
aam
xor
or
jns
cli
clc
add
pushf
cdq
jmp
add
add
fwait
outs
xor
add
sahf
inc
add
loopne
add
and
aam
adc
dec
and
dec
mov
xor
out
dec
into
add
mov
inc
nop
or
inc
test
jno
add
sub
rcr
xchg
clc
ja
je
mov
rsqrtps
leave
cmp
push
int3
xchg
jb
cmp
add
jmp
out
xor
push
mov
pop
mov
jno
fimul
mov
sub
adc
cmp
(bad)
fadd
cmp
adc
dec
jmp
js
add
mov
repz
adc
(bad)
rcr
fcmovb
cmp
jbe
cmc
div
push
gs
jp
xchg
mov
sub
lods
iret
lahf
cmp
es
push
inc
xor
les
fdiv
mov
(bad)
mov
mov
js
sbb
mov
sub
or
addr16
sbb
add
and
xor
sbb
xor
xlat
fbstp
addr16
cmp
cmp
mov
(bad)
push
fnstsw
rol
dec
inc
xor
es
sbb
adc
sub
je
mov
js
add
jge
pushf
mov
les
sbb
bound
mov
fld
out
nop
pop
mov
dec
repnz
inc
sbb
mov
xor
add
data16
jmp
push
ja
clc
dec
push
add
in
pop
sti
into
xchg
cwde
jge
cdq
pop
mov
xchg
mov
add
or
push
sub
cmp
jmp
ret
add
add
(bad)
inc
imul
cmp
mov
mov
vmaxps
jmp
cmp
xchg
mov
pop
sahf
push
push
mov
inc
adc
gs
pop
pop
into
xor
popf
sbb
and
sbb
xchg
mov
mov
or
inc
or
sbb
in
pop
popf
loop
movs
add
scas
xchg
adc
add
push
and
adc
sahf
sub
and
movs
out
sbb
cmps
hlt
add
xor
(bad)
mov
pop
xchg
cwde
retf
not
add
push
mov
sbb
jmp
jecxz
and
inc
xor
out
inc
ror
push
nop
sbb
jmp
sbb
iret
mov
std
mov
cmc
sbb
xchg
cmp
shl
jb
scas
pop
emms
lods
iret
jnp
addr16
push
lock
fdivr
gs
rol
or
sar
fnstsw
loope
pusha
(bad)
in
xchg
out
cli
idiv
and
cmp
loop
rcr
add
xchg
cmc
lock
aas
pop
shl
ret
xlat
fistp
mov
or
out
pop
and
pop
inc
mov
rcl
push
xchg
push
ret
push
ds
adc
inc
fcomip
cli
push
cmp
sbb
or
(bad)
mov
cmp
jmp
push
cmps
aam
movs
xor
(bad)
ja
lds
pop
jb
adc
sbb
and
xor
jo
int3
add
add
mov
dec
mov
ja
add
les
sub
(bad)
dec
jmp
sub
test
imul
outs
add
fcom
and
push
and
mov
(bad)
cmp
and
test
xor
ss
cwde
lods
xchg
jecxz
sub
jo
push
add
fwait
sbb
sbb
dec
fisttp
lahf
mov
cld
jl
loopne
out
fsubr
ins
jnp
sub
aam
mov
lock
pop
call
add
mov
dec
add
call
pop
mov
jo
add
loopne
sbb
ret
or
cmps
lock
test
cli
mov
dec
int3
cmc
sbb
or
sbb
es
in
xchg
and
lds
icebp
nop
mov
mov
mov
call
pop
add
test
and
loop
xchg
fnstenv
test
xchg
fisub
fwait
retf
sbb
sub
jle
fild
retf
push
sbb
iret
sub
addr16
mov
cmpxchg
es
imul
xchg
xchg
and
nop
ds
push
mov
in
adc
xor
icebp
jg
arpl
jbe
lea
mov
dec
mov
push
push
push
add
or
stc
rol
ror
sbb
das
add
or
rol
ins
clc
aaa
aaa
scas
mov
pop
push
add
in
pop
inc
in
mov
aam
mov
les
out
jmp
shr
add
shl
out
inc
mov
jp
pop
sbb
inc
or
jns
add
xchg
add
sbb
fnstsw
aas
int
adc
and
sub
in
jne
jge
daa
add
sub
sbb
push
in
mov
xor
je
lsl
jno
cmp
movs
adc
push
dec
and
mov
or
add
dec
leave
jae
cmps
pop
es
sbb
stos
push
mov
add
xchg
xor
sbb
retf
dec
inc
fdiv
out
sub
inc
fwait
sbb
cmps
repnz
xor
pop
and
les
jo
mov
sub
and
cmp
jne
loope
xchg
xlat
mov
adc
xchg
xor
adc
sub
xchg
adc
xor
mov
add
mov
fadd
pop
inc
jae
imul
adc
dec
les
mov
idiv
repz
or
adc
je
in
mov
fldenv
or
lods
je
add
mov
jg
pop
inc
or
das
in
rol
mov
dec
mov
iret
retf
fs
add
adc
leave
adc
jnp
push
push
aas
call
sbb
fild
push
xor
sub
cmp
cld
fnstenv
mov
ja
push
inc
cmp
ror
jbe
jnp
sub
push
nop
mov
mov
pavgb
in
xor
outs
dec
mov
imul
retf
cmp
sti
aas
imul
jle
add
(bad)
pop
xchg
xor
inc
pop
je
dec
xchg
mov
jecxz
das
fbstp
test
sub
pop
pushf
xchg
enter
mov
jle
add
ins
cmp
sub
mov
inc
sub
test
ss
mul
or
push
test
dec
add
inc
or
aam
pop
outs
cmp
dec
adc
xchg
gs
scas
sbb
fcom
(bad)
mov
push
sbb
xchg
pop
and
shl
iret
(bad)
sti
fdiv
inc
adc
lock
xor
in
js
dec
sbb
sbb
nop
sbb
mov
adc
pop
shl
outs
cmp
add
or
daa
mov
add
jmp
out
mov
adc
jl
sub
sub
imul
rcl
aas
ja
add
jle
mov
pop
sub
sbb
es
and
gs
add
scas
imul
iret
mov
inc
mov
pop
loope
jl
leave
daa
sbb
cmp
icebp
(bad)
cdq
or
inc
adc
sub
dec
jns
jo
pop
lahf
lahf
sbb
adc
call
adc
mov
stc
and
popf
outs
and
xor
pop
ss
imul
push
and
xchg
adc
stos
(bad)
je
xchg
mov
sbb
ltr
out
adc
ret
call
push
jbe
jne
call
dec
pushf
into
jnp
pop
jmp
outs
pop
adc
jmp
add
loopne
(bad)
cmc
push
test
outs
in
sbb
in
rcr
sub
mov
inc
cmc
(bad)
pop
sub
jmp
mov
neg
cmp
and
and
mov
mov
pop
push
xor
push
dec
scas
pushf
jmp
jne
pop
jp
frstor
mov
pusha
loope
add
in
mov
or
test
fwait
retf
fs
leave
dec
movs
dec
fidivr
adc
push
pop
fstp
mov
iret
mov
pop
push
jae
(bad)
(bad)
mov
add
adc
or
or
jge
es
scas
jmp
scas
sub
push
(bad)
call
call
mov
adc
add
bound
or
jno
push
rol
aam
xor
or
sub
shl
call
push
cwde
fwait
sbb
jae
les
pusha
lds
out
inc
add
pop
or
call
popf
jns
out
inc
inc
fnsave
inc
dec
jp
jmp
add
(bad)
jg
add
pop
xchg
push
xchg
ret
in
push
adc
cmp
cli
jp
mov
jge
adc
jnp
adc
cs
dec
movs
sbb
push
push
rol
push
mov
push
out
push
or
push
int3
pop
inc
in
icebp
ror
arpl
cs
popa
int3
mov
cmp
in
sub
push
retf
test
sub
sub
loopne
and
mov
loope
(bad)
jg
mov
les
cmp
mov
and
inc
dec
push
scas
mov
into
ja
aas
adc
push
js
div
pop
repnz
xchg
retf
hlt
cdq
cld
pop
cmp
ja
jp
jnp
cmp
mov
mov
jae
push
sub
pop
ins
retf
nop
rcl
dec
xchg
stos
add
jmp
mov
test
rcl
pop
jnp
lods
pop
jg
ds
lock
add
xchg
int
mov
pop
out
xchg
adc
neg
aad
or
scas
mov
aam
inc
add
mov
push
mov
add
xchg
and
clc
mov
cli
push
mov
pusha
aas
(bad)
lock
xlat
inc
div
add
out
or
clc
aaa
pop
or
mov
lock
adc
pop
in
jbe
js
pop
popf
cmp
xor
xor
loop
mov
jns
xor
imul
cmp
jecxz
pop
add
call
mov
outs
mov
adc
add
mov
mov
dec
jge
fstp
or
cmp
loop
mov
or
not
mov
lea
mov
sbb
cmp
xchg
and
in
sub
push
pop
jp
stos
cmp
inc
inc
mov
(bad)
or
xchg
dec
adc
dec
(bad)
fwait
cmp
int3
test
jns
clc
push
call
inc
shr
cdq
outs
jecxz
repz
and
aas
or
je
add
paddd
sub
cmps
int
cmp
out
mov
mov
bound
dec
into
(bad)
icebp
jecxz
outs
out
jae
fidiv
inc
(bad)
xor
cmps
cmps
pop
mov
in
test
push
push
pop
(bad)
jns
mov
or
fwait
leave
xor
and
mov
sub
xor
add
das
sbb
repz
mov
inc
adc
push
fist
adc
push
or
ins
lods
mov
add
xor
and
mov
xchg
je
loop
adc
pop
fadd
call
rol
ret
adc
and
fwait
sub
imul
pop
xchg
fiadd
jl
pushf
cmp
in
and
jns
jae
retf
sbb
sub
jmp
mov
ret
inc
jl
xchg
scas
pop
pop
sub
mov
aad
pop
mov
stos
push
fcomip
ffreep
inc
in
or
add
in
cli
jecxz
sar
add
and
dec
int3
push
or
add
mov
inc
adc
mov
jne
in
xor
push
push
add
inc
sub
cmps
inc
jl
push
stos
aad
retf
rcr
fiadd
int
sub
xchg
pop
int3
(bad)
cmp
(bad)
daa
call
hlt
loope
xchg
push
hlt
mov
inc
adc
ret
into
add
fidiv
(bad)
adc
pop
sahf
cmp
jp
xchg
je
ins
add
pushf
mov
inc
cmp
pop
add
add
and
cwde
mov
aad
lods
jb
dec
fmul
aaa
fwait
cwde
push
cmp
adc
inc
add
inc
shr
jnp
xchg
push
ja
nop
test
in
into
leave
cmp
adc
outs
sub
lods
inc
cmp
inc
and
call
or
mov
shl
pop
mov
ja
ds
lock
sahf
fwait
hlt
clc
fstp
jb
dec
mov
adc
cld
scas
push
xor
xchg
cmps
ficom
pushf
dec
pop
jb
movs
pop
fcomp
imul
movs
sub
sub
rol
out
rol
popa
pop
fild
dec
dec
lods
in
out
je
inc
and
sub
ret
out
jge
popa
adc
adc
mov
mov
mov
data16
mov
inc
mov
pop
xor
outs
inc
sub
lock
aas
pop
mov
or
sub
enter
jp
shl
sub
call
sbb
repnz
in
add
fisttp
out
lahf
stos
push
mov
and
pop
inc
or
push
sub
xadd
and
jbe
shl
mov
xchg
ret
iret
lea
add
adc
xchg
mov
add
call
pusha
sbb
adc
jne
data16
jg
mov
xchg
xlat
inc
add
and
push
xchg
fs
jnp
adc
xor
shl
(bad)
adc
loope
imul
pop
add
in
das
int
inc
int
ret
sahf
fcmovbe
inc
dec
(bad)
lods
inc
loop
pop
jle
and
aas
adc
xchg
add
xchg
loope
xor
dec
dec
loop
in
sub
mov
ja
ret
in
retf
scas
mov
hlt
cmc
push
inc
inc
jge
sbb
hlt
or
mov
arpl
sub
xor
sub
sti
movs
mov
push
dec
mov
sbb
dec
(bad)
loopne
pop
stos
gs
in
adc
(bad)
or
lods
cmps
mov
mov
adc
add
stos
mov
lock
(bad)
(bad)
int3
xor
test
cmp
adc
inc
xor
mov
sub
retf
movs
ror
xor
ja
repnz
pop
loop
enter
mov
xor
sbb
(bad)
pop
add
popf
leave
jb
ins
xchg
sbb
test
in
dec
adc
or
fdiv
data16
(bad)
dec
repz
cmp
js
imul
(bad)
fild
enter
jecxz
jnp
dec
jmp
ficom
sar
cmp
xor
rcl
int3
ins
dec
stos
or
idiv
adc
call
shl
fidivr
ja
jns
dec
pushf
sbb
ret
xor
fwait
ret
add
iretw
call
movs
call
mov
pop
mov
bound
aam
push
loope
int3
ins
call
add
pop
mov
xor
clc
pop
leave
nop
out
jns
or
mov
loopne
(bad)
int3
push
add
push
out
pop
jb
(bad)
movs
push
shl
inc
inc
idiv
imul
mov
int
dec
out
test
sahf
arpl
cmp
inc
dec
jmp
rcl
cwde
sub
(bad)
dec
inc
xor
mov
fnstenv
add
cmp
adc
dec
lods
imul
mov
jns
add
adc
and
fisubr
pop
jmp
stos
mov
je
mov
xchg
in
cmp
neg
jmp
mov
inc
retf
jns
cmp
mov
aaa
and
jb
sub
retf
lock
mov
pop
add
push
xchg
rcl
dec
sar
mov
cmp
lods
inc
mov
icebp
jmp
(bad)
cmc
loope
in
lock
pop
mov
retf
es
jb
lods
lds
or
sar
jns
push
pop
mov
mov
and
pusha
add
or
fs
rcl
faddp
cmp
fisub
in
retf
jmp
xchg
mov
push
mov
es
jo
mov
xchg
mov
push
ret
adc
jmp
adc
mov
pop
out
mov
inc
fwait
push
mov
or
or
shl
adc
sbb
add
in
jo
mov
mov
mov
xchg
add
aas
ltr
jns
loopne
xchg
test
sub
test
aad
jp
std
arpl
loopne
add
out
loope
sub
ins
pop
cmps
movs
and
push
push
in
pop
das
rcl
jae
rcl
adc
inc
repz
push
popa
cmp
adc
scas
aad
aad
mov
test
int3
jmp
je
imul
fld
pop
jne
mov
mov
mov
aas
mov
gs
pop
adc
push
mov
cmp
ss
cmp
fisttp
mov
xor
mov
jmp
cmps
add
xor
or
mov
xchg
adc
repz
call
je
dec
xor
pop
repz
xor
outs
mov
add
pop
dec
push
push
sar
sbb
cld
pushf
xchg
loopne
dec
loopne
push
dec
ss
mov
aaa
lods
sub
lods
inc
add
xchg
enter
add
test
xchg
retf
pshufw
aas
pop
add
cmp
mov
ss
push
or
xchg
jmp
and
adc
xchg
xchg
repz
ja
jne
mov
push
mov
not
push
push
or
push
(bad)
dec
inc
jmp
adc
inc
inc
xchg
iret
jno
adc
push
pop
hlt
rcr
add
ret
sbb
and
data16
add
(bad)
call
mov
jmp
repnz
adc
or
(bad)
inc
push
inc
or
dec
bound
push
test
adc
mov
mov
xchg
das
and
ret
fs
inc
xlat
popf
and
fwait
popa
leave
stos
xor
cmp
sar
or
sub
xchg
and
ror
add
mov
push
add
dec
(bad)
(bad)
fcom
add
hlt
or
push
and
push
and
sbb
dec
sub
pop
call
dec
arpl
das
(bad)
pusha
add
loope
mov
neg
xchg
imul
stos
push
jmp
sub
mov
sub
rcr
sahf
add
sar
inc
imul
pop
imul
loopne
add
push
dec
sahf
push
jecxz
retf
daa
leave
cmps
gs
lock
out
out
xchg
sbb
ficomp
ins
xor
(bad)
dec
cmp
jmp
retf
aam
mov
cwde
mov
sub
or
xlat
scas
mov
add
push
mov
xor
fidiv
int3
fbstp
leave
lahf
adc
iret
add
pusha
repz
mov
pop
mov
mov
add
imul
aam
jecxz
mov
leave
out
pop
mov
scas
bswap
retf
dec
mov
adc
cmp
mov
in
sbb
add
icebp
test
and
fst
mov
sbb
pusha
pop
and
ror
in
pushf
mov
shr
and
test
add
mov
nop
push
adc
add
mov
add
mov
cmp
cmp
xchg
pop
push
imul
mov
test
repnz
pushf
mov
lock
ins
sub
into
and
ins
ja
add
sub
rcl
test
fs
nop
and
inc
mov
jmp
pop
popf
das
add
push
out
std
jbe
push
cli
push
jmp
or
cld
(bad)
addr16
loopne
add
les
sub
inc
xor
ds
iret
dec
shr
and
pushf
adc
xor
mov
and
inc
in
or
sbb
imul
xor
inc
and
mov
cli
mov
mov
inc
int3
pushf
test
add
mov
push
je
xchg
add
add
ins
push
scas
pop
add
std
jmp
sub
xchg
test
push
xor
or
add
int
hlt
fldcw
pop
shl
cdq
xor
dec
rcr
inc
cmc
sti
addr16
pop
push
inc
xchg
mov
adc
inc
shl
jp
mov
mov
cmps
shr
cmps
imul
xor
int3
popa
shl
repnz
jo
repnz
stc
sub
fnstcw
sbb
mov
scas
pop
clc
sti
cwde
div
out
adc
push
add
add
jecxz
outs
sub
or
ss
ins
mov
mov
ss
cld
mov
xor
into
add
add
arpl
add
xchg
xor
call
retf
(bad)
xor
add
inc
mov
or
rcr
(bad)
pusha
mov
ss
cmp
dec
pop
shl
push
loop
cmps
rcl
mov
int3
sbb
or
xchg
mov
jecxz
leave
jg
sbb
lock
out
xchg
ins
enter
xchg
inc
and
xchg
xchg
add
jno
scas
dec
sbb
aad
fisttp
leave
dec
inc
cld
ja
dec
mov
lock
scas
xor
cmp
jge
cmp
iret
shl
pusha
mov
pop
(bad)
scas
daa
punpcklbw
jmp
aaa
nop
stc
dec
dec
fcomip
cdq
add
dec
inc
or
pop
adc
aas
cld
test
rol
dec
inc
call
adc
into
scas
iret
dec
inc
inc
retf
das
mov
(bad)
lock
ja
and
adc
ja
test
adc
mov
xor
pop
push
xor
push
(bad)
fstp
or
and
nop
inc
add
sub
add
nop
pop
out
js
cmp
xor
sub
cmp
add
shl
rcr
and
fisub
pop
test
mov
cmp
inc
out
or
adc
cmp
in
movs
nop
inc
xchg
xchg
jmp
ja
repnz
je
push
aam
pop
ficom
mov
or
sahf
inc
in
scas
mov
jno
or
xchg
adc
fidivr
js
and
lods
popf
xor
test
adc
lods
mov
ret
push
jnp
inc
ins
pop
cmp
add
leave
add
cwde
jmp
pop
mov
pop
loopne
(bad)
push
add
xchg
leave
inc
push
or
std
call
fnstenv
sub
add
imul
pop
imul
(bad)
repz
aam
ss
add
mov
and
add
add
jne
fisubr
aas
inc
stc
add
adc
adc
cs
cmp
jbe
mov
dec
cwde
fdivr
lahf
shr
out
mov
les
push
mov
add
xchg
scas
cmp
jle
adc
cmp
mov
pop
bound
xchg
lock
mov
fwait
repz
rcr
cmp
xor
pushf
(bad)
shl
inc
int
add
fisubr
lock
add
loope
test
into
fidivr
imul
mov
leave
mov
mov
idiv
cmp
pop
inc
sub
mov
loopne
mov
and
sub
cmp
fstp
test
inc
mov
push
push
pop
add
sub
js
push
lods
and
cs
mov
sbb
mov
pop
push
int
jno
push
(bad)
int3
into
and
loopne
(bad)
and
add
ret
and
jne
int
mov
cld
sbb
ror
inc
addr16
xchg
in
mov
dec
mov
adc
loopne
fstp
aaa
add
movs
inc
or
sub
sti
xor
cmps
cs
jnp
sub
mov
jp
in
push
in
sar
shr
pop
movs
and
pop
or
push
es
mul
inc
out
pushf
(bad)
out
fs
dec
sub
stos
fwait
xor
sti
call
ret
fdiv
xlat
popa
xlat
xchg
push
(bad)
inc
fnstcw
retf
add
xor
in
retf
scas
mov
jnp
pop
pop
pushaw
pusha
pusha
rcr
lds
mov
mov
scas
pop
jnp
loopne
push
lods
scas
arpl
scas
retf
add
xchg
or
in
push
loopne
and
inc
adc
xor
sbb
add
mov
imul
outs
fabs
es
or
push
dec
push
test
mov
jmp
pop
add
stos
cmp
mov
ret
js
jge
out
aad
jge
add
stos
repz
lahf
aam
push
pop
or
add
and
aaa
and
and
push
fist
inc
xchg
or
push
inc
inc
in
pushf
repnz
sbb
or
call
pop
jl
ret
call
jb
push
add
cli
push
pusha
test
loope
in
cli
pop
enter
daa
mov
jp
push
adc
adc
xchg
sub
xchg
push
cmp
loopne
mov
(bad)
mov
fptan
ror
idiv
xchg
mov
mov
fidivr
icebp
jbe
stos
stos
imul
pop
retf
xor
enter
in
fdivr
add
mov
loopne
pop
gs
mov
hlt
cmp
mov
popa
push
pop
cmp
inc
adc
(bad)
ror
xor
or
xchg
add
xor
adc
push
pause
sti
dec
fnstcw
add
jg
mov
pop
idiv
jecxz
jle
dec
xor
cmp
sbb
pop
mov
(bad)
(bad)
cmp
mov
into
xor
addr16
sbb
xor
and
xlat
retf
test
add
fcmovb
jge
das
add
jle
dec
jb
sbb
inc
retf
xchg
sbb
sbb
stos
or
call
xor
sbb
das
pop
inc
pop
cmp
sbb
sti
mov
lea
jle
addr16
jbe
imul
add
out
jmp
cmps
dec
fwait
lods
xor
jmp
jmp
jecxz
xchg
(bad)
aad
sbb
nop
ja
hlt
hlt
hlt
mov
lods
mov
xchg
scas
(bad)
arpl
push
(bad)
fdiv
clc
mov
leave
in
sahf
add
cmp
ss
xchg
pop
popa
add
or
mov
ins
push
in
cmp
out
cli
movs
enter
sbb
mov
add
fild
mov
adc
xchg
cdq
jae
(bad)
loopne
das
mov
jbe
and
and
shr
sbb
scas
out
icebp
cmp
dec
aaa
or
pop
pop
jo
inc
sbb
icebp
push
outs
out
clc
and
push
push
jecxz
fs
ds
add
inc
inc
inc
ins
sbb
dec
cmp
prefetch
jnp
sbb
mov
push
dec
mov
daa
inc
jg
repz
icebp
std
scas
mov
adc
mov
je
shl
sbb
xor
add
mov
xchg
sub
fnsave
cs
sbb
outs
out
call
pop
jbe
jl
inc
test
mov
adc
xchg
dec
fwait
push
or
xchg
jmp
in
jmp
mov
inc
sbb
or
mov
mov
mov
dec
cmp
push
in
jne
push
cmc
aam
push
aas
and
xchg
in
fidiv
fnstsw
jge
xor
sti
pop
jp
jmp
pop
pop
xchg
mov
fbld
(bad)
jecxz
adc
xchg
or
test
inc
(bad)
into
into
dec
test
lods
in
jmp
arpl
adc
dec
sahf
and
retf
jbe
outs
push
jecxz
das
cwde
mov
mov
leave
mov
xor
imul
dec
(bad)
push
add
add
into
popf
arpl
not
lahf
lea
mov
cmp
pop
add
add
jge
add
stos
ins
push
or
dec
fdiv
xchg
jge
mov
dec
(bad)
xlat
mov
jnp
ins
jg
pop
mov
and
retf
arpl
push
or
mov
loopne
shl
js
push
inc
test
mov
sub
mov
mov
dec
into
sub
jecxz
pop
cli
add
(bad)
mul
cmp
out
fdiv
sti
xchg
pop
sub
mov
idiv
std
outs
cld
ja
lahf
push
push
ins
pop
jnp
enter
jp
add
sbb
fmul
inc
jnp
cmp
ins
mov
mov
xor
pusha
(bad)
cmp
cmp
pusha
add
dec
test
pop
cwde
pop
push
or
int3
in
or
add
or
jno
push
mov
inc
push
addr16
sub
mov
adc
add
fwait
or
dec
push
inc
shr
arpl
mov
mov
push
add
mov
(bad)
xchg
sub
fsincos
stc
pop
ss
jge
xchg
pextrw
movs
loop
iret
je
hlt
mov
cmc
in
mov
jmp
ins
rcr
cmp
mov
repnz
pop
add
and
push
ds
add
mov
mov
push
retf
mov
je
or
(bad)
sbb
paddsw
xor
rol
js
sub
add
push
lock
loope
(bad)
cmp
out
inc
jbe
mov
cmp
rcl
sbb
imul
fld
movs
(bad)
inc
aaa
sbb
into
sbb
mov
daa
add
fmul
jno
add
pop
adc
rep
pushf
add
call
iret
sub
sbb
nop
fiadd
push
and
inc
cmp
jne
pop
js
inc
fdivr
hlt
xlat
and
xchg
dec
call
sbb
ja
mov
retf
jbe
into
ins
cmp
loop
mov
pop
push
pop
jge
div
mov
push
call
xchg
cmps
push
jae
out
inc
jns
div
popf
jle
xchg
inc
push
dec
inc
mov
aaa
xor
pop
xchg
(bad)
sbb
gs
arpl
xchg
mov
(bad)
mov
add
and
add
jmp
or
out
xor
lock
mov
ret
cmp
loop
mov
jb
cmp
(bad)
add
adc
movs
sub
inc
adc
dec
enter
nop
sbb
test
pop
lock
mov
add
je
mov
push
cwde
pop
mov
rcr
xchg
ret
mov
sub
mov
jo
sub
sbb
pop
mov
or
jbe
sbb
fdiv
movs
jns
and
jl
jecxz
leave
fs
bound
add
push
stos
cmp
imul
(bad)
fistp
in
dec
add
jae
and
enter
or
dec
pusha
(bad)
push
sbb
push
or
shl
sub
lds
sbb
gs
int
loope
adc
idiv
sar
add
jecxz
add
sbb
lea
pusha
loop
mov
mov
rol
xchg
repz
je
rol
rol
(bad)
xor
les
test
jp
pushf
pop
movs
nop
sub
mov
or
data16
mov
xlat
mov
out
outs
scas
sub
pop
jg
xlat
dec
js
dec
sub
mov
out
mov
pop
cmps
jmp
jbe
jbe
ins
call
push
push
push
das
jl
fstp
jno
mov
out
mov
dec
mov
add
push
pop
pop
push
inc
push
popa
add
mov
xor
pop
mov
adc
test
xchg
pop
ds
je
xchg
dec
adc
and
sbb
(bad)
push
push
push
push
and
inc
mov
movs
pop
(bad)
mov
test
mov
add
fisttp
push
xlat
inc
xor
mov
daa
push
jns
(bad)
adc
cwde
cli
sbb
div
cli
cmp
cmp
pop
mov
xor
leave
add
mov
cmc
sahf
adc
mov
rcl
add
cli
(bad)
cmp
cs
in
cld
mov
fld
bound
mov
inc
imul
lods
lods
pop
loope
out
xchg
out
(bad)
std
jge
add
adc
out
push
clc
cli
add
stc
dec
mov
pop
sub
lods
jg
push
sti
mov
add
(bad)
jno
scas
mov
jbe
fdivr
call
inc
or
mov
pop
mov
in
or
ja
pop
je
in
test
push
inc
dec
int
or
stos
(bad)
pop
sbb
ins
mov
cmp
mov
push
jns
jae
add
add
fdivr
jmp
pop
ret
pop
sbb
movs
mov
add
inc
rcl
das
iret
les
and
cmp
jl
shl
(bad)
shl
icebp
mov
sub
stc
dec
push
loop
adc
pop
pop
sub
sbb
mov
idiv
dec
scas
add
call
add
jmp
mov
jnp
rol
icebp
mov
pop
xor
and
(bad)
push
adc
call
lods
dec
sti
jl
lea
sbb
(bad)
xor
cmp
outs
fistp
cmp
fdiv
sbb
cmp
add
push
add
in
push
aas
dec
sub
cli
push
rcl
shl
dec
jmp
pusha
dec
pushf
pop
mov
cli
ficom
loopne
stos
push
ins
fnstenv
out
lods
lods
std
mov
call
fadd
sti
jg
daa
jnp
shl
test
or
fnstsw
push
adc
pop
aaa
xchg
xchg
xchg
or
pop
test
xchg
repnz
outs
mov
add
dec
sub
cli
cli
push
sbb
push
(bad)
lock
pusha
fcmovnu
fistp
out
xor
pushf
ror
and
add
cmp
mov
ss
or
retf
mov
or
push
or
clc
aad
cmc
mov
ja
jmp
pop
outs
fistp
aaa
loope
addr16
gs
clc
je
pushf
lods
pop
jo
movs
mov
aas
sti
lds
in
xchg
sub
loope
jp
je
sbb
push
loop
(bad)
out
jge
jnp
push
out
mov
scas
scas
jg
jg
push
push
push
mov
add
mov
je
sub
daa
inc
stc
add
es
cdq
xor
jl
xor
loop
push
sbb
pushf
pop
xor
or
aad
cmp
dec
xor
pop
dec
movs
dec
or
lods
popf
jge
loop
jg
lahf
fld
xor
mov
inc
xlat
xchg
or
pop
sub
fisub
loopne
aas
stc
or
jmp
loopne
xor
xlat
mov
add
cmp
sbb
arpl
dec
(bad)
mov
xchg
mov
adc
sbb
inc
mov
sub
sub
mov
sbb
sbb
add
mov
das
push
push
pop
cmp
jmp
mov
push
retf
add
stc
jo
push
mov
jle
lock
xor
movs
(bad)
mov
and
in
clc
xor
aaa
sbb
stos
stos
retf
outs
aaa
cs
dec
shr
xchg
(bad)
fdiv
ss
or
jle
mov
push
mov
cwde
and
fs
jle
mov
add
push
pop
pop
sbb
and
cld
xchg
lds
mov
push
inc
add
mov
push
sub
movhps
imul
xor
xchg
inc
xchg
push
mov
loopne
or
sbb
das
iret
int3
fwait
aaa
das
aas
sbb
jl
push
(bad)
mov
sub
dec
aaa
mov
and
iret
cwde
out
(bad)
cld
and
mov
mov
cmp
ins
sbb
outs
stos
movs
movs
in
add
sub
push
fadd
(bad)
jg
jecxz
cmc
xlat
pop
jnp
call
shl
test
adc
xchg
sahf
jge
cmps
test
cmp
pusha
in
icebp
jmp
xchg
and
jae
or
aad
inc
pusha
std
adc
(bad)
outs
mov
jecxz
adc
out
icebp
pushf
int
stos
stos
dec
push
push
push
in
loopne
or
jge
or
jl
sbb
(bad)
push
adc
inc
xor
(bad)
pushf
outs
sub
cld
mov
(bad)
lock
test
pop
pop
enter
scas
in
out
out
pop
push
push
push
push
mov
out
rcl
inc
pusha
popf
xchg
push
in
sub
sar
adc
adc
jl
and
jl
add
mov
out
in
in
jge
push
(bad)
iret
cs
das
pop
xchg
jge
verr
shl
jg
xlat
ret
(bad)
call
or
add
jae
scas
dec
(bad)
fadd
scas
mov
cmc
jns
xlat
xlat
sti
cmps
dec
fwait
xchg
inc
div
cmc
int
es
adc
dec
dec
dec
sbb
imul
out
mov
in
outs
add
cmp
cld
repz
jmp
sbb
mov
lods
lods
in
push
clc
js
jmp
or
repnz
sbb
(bad)
in
xor
mov
out
push
sahf
dec
data16
sub
loope
pop
pop
xor
out
sub
mov
dec
fdiv
sub
ficomp
mov
das
adc
mov
in
cld
mov
mov
xchg
or
mov
and
cmp
jl
inc
in
out
pop
mov
sbb
addr16
add
or
push
pop
lock
add
arpl
mov
mov
mov
xchg
mov
test
outs
jle
sbb
mov
adc
add
jl
xchg
add
loopne
cmp
add
(bad)
loope
scas
xchg
cli
pop
icebp
mov
mov
add
and
(bad)
jle
pop
jno
out
into
sub
aas
fwait
iret
(bad)
ret
shl
popf
bound
pop
test
repz
and
dec
fbstp
cmps
daa
or
call
cmp
pop
cmp
aas
outs
fisub
sub
push
ret
push
and
add
out
or
fldcw
inc
adc
push
add
shl
xchg
fadd
pop
fcmovnu
fdivr
(bad)
scas
jb
fidivr
test
out
pop
dec
and
cwde
imul
mov
mov
or
cmp
pop
mov
out
or
jne
or
or
cmc
mov
sub
addr16
jg
into
pushf
loop
jae
sbb
inc
inc
and
fimul
out
mov
icebp
jbe
stos
scas
mov
stc
pop
dec
jl
or
push
jmp
(bad)
add
sbb
sub
sbb
and
jns
leave
nop
outs
call
add
jge
xor
push
out
call
push
cmps
cmp
pop
call
and
inc
pusha
inc
inc
inc
xchg
xchg
push
pop
sbb
and
add
inc
add
xchg
pop
xor
cmp
mov
(bad)
out
outs
cli
pop
pop
ss
jbe
outs
sub
jmp
dec
xchg
hlt
loope
in
shl
retf
xor
lahf
(bad)
fstp
std
mov
mov
mov
das
mov
dec
js
or
jle
or
fidiv
iret
scas
xchg
cmp
pushf
xchg
inc
pop
pop
retf
xor
cdq
add
add
xchg
add
call
fcmove
stc
je
popf
popf
popf
jae
icebp
clc
xchg
rcl
push
mov
mov
sti
or
pop
pop
pop
lea
pop
js
sbb
jmp
pop
outs
pop
mov
mov
mov
pop
push
aam
sar
lds
sbb
sysret
jb
inc
bound
push
stc
push
pop
js
jg
mov
fsubr
xchg
js
jne
xor
push
gs
sbb
cmp
mov
fadd
push
mov
outs
scas
out
dec
push
add
(bad)
jb
jmp
add
mov
(bad)
movs
inc
inc
pop
sbb
mov
dec
lahf
cmp
popa
pop
hlt
mov
addr16
xlat
xlat
fbld
cmps
push
pop
pop
sahf
ins
push
cli
out
cmp
mov
lahf
ds
loopne
ds
mov
pop
neg
pop
push
jp
movs
xlat
in
mov
iret
test
pop
xor
xchg
das
sahf
out
xlat
loopne
add
nop
je
es
out
xor
in
or
leave
scas
xchg
cmp
pushf
iret
mov
lds
pop
hlt
call
les
repnz
retf
jg
xlat
(bad)
out
fidivr
push
xlat
aam
lods
sub
cs
in
mov
fwait
cs
add
mov
and
and
(bad)
fs
pcmpeqd
cli
popa
enter
or
cld
xchg
cmp
cmp
js
add
sar
fstp
push
rcl
jge
push
xor
jmp
sahf
cmp
ficomp
enter
or
inc
sub
jmp
imul
mov
jecxz
inc
loop
aaa
pushf
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
jle
add
or
add
or
add
push
je
imul
add
adc
add
add
and
add
adc
add
and
dec
inc
add
add
adc
add
and
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
ins
add
add
nop
add
add
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
gs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
or
xchg
test
nop
add
add
add
add
fild
or
inc
inc
xor
or
add
push
push
add
push
ins
add
add
push
nop
add
add
add
pop
pop
pop
or
sub
pop
pop
or
xor
add
ins
add
add
add
add
pop
pop
pop
or
aam
nop
add
add
or
pop
or
adc
add
or
add
add
nop
add
add
or
or
add
add
add
add
in
ins
add
add
add
or
adc
inc
or
or
or
or
add
or
add
inc
add
mov
push
add
sbb
push
add
sbb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
imul
jo
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
and
add
add
or
sub
add
sub
add
add
add
add
test
add
add
add
add
cmp
add
add
add
push
add
add
add
add
add
add
or
mov
add
add
add
or
mov
add
add
add
or
sbb
add
add
add
or
int3
sub
add
add
add
add
sub
add
add
add
add
add
add
add
das
add
add
add
lldt
add
adc
hlt
xor
add
add
add
dec
add
add
add
add
add
adc
mov
add
add
xchg
add
add
xor
add
add
add
fdiv
add
add
xchg
or
add
adc
and
add
add
xchg
or
add
adc
cmp
add
add
xchg
or
add
adc
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
ins
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
jo
add
add
jp
push
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
rol
xor
and
or
xor
mov
add
xor
and
loope
xor
and
loope
rol
add
inc
add
add
add
sub
and
out
retf
add
add
xor
and
stc
add
push
aad
or
addr16
aas
add
add
fild
adc
mov
jecxz
adc
xchg
push
jmp
push
icebp
add
add
add
int3
push
or
sbb
fild
vmmcall
add
push
adc
and
or
sbb
xor
es
and
cmp
inc
pop
sub
cmp
push
pop
dec
add
add
and
dec
add
dec
add
ja
cmp
cmp
jnp
inc
add
add
add
add
pop
add
pop
bound
pop
add
and
pop
add
and
push
add
retf
pop
jo
popa
add
pop
ja
adc
fiadd
jecxz
fld
call
add
pop
jg
xor
es
xchg
add
add
pop
icebp
add
add
or
add
or
pop
and
jns
inc
add
add
add
dec
add
add
add
add
add
add
add
jbe
and
cmp
test
inc
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
cmp
add
add
push
or
or
or
jo
out
or
jle
out
dec
add
add
add
add
add
add
add
or
loope
xor
aas
add
add
add
add
add
add
add
add
add
add
add
xor
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
outs
add
add
outs
add
add
mov
add
mov
add
ret
add
adc
popf
add
adc
popf
add
add
add
add
add
add
ret
add
add
add
add
add
dec
add
add
add
add
mov
xchg
add
add
add
add
add
add
add
push
add
add
add
add
add
cmp
mov
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
nop
add
add
add
add
in
add
add
add
add
add
add
add
add
add
int
add
add
add
gs
outs
jae
arpl
jns
je
ins
xor
cs
add
jb
xor
jbe
outs
jae
arpl
jns
je
ins
xor
add
outs
addr16
ins
add
jae
jne
arpl
add
outs
jae
arpl
jns
je
ins
xor
cs
jb
jo
jb
imul
je
outs
addr16
push
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
arpl
ins
imul
gs
add
push
arpl
jns
je
ins
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
jbe
jae
outs
gs
jb
jbe
add
jne
ins
outs
addr16
jb
ins
outs
addr16
ins
outs
popa
fs
outs
jne
je
jb
push
dec
add
add
add
add
add
gs
outs
jb
dec
add
ins
outs
jb
ins
add
jae
popa
jb
gs
arpl
add
popa
jb
push
push
jb
popa
je
push
popa
jb
ins
jae
addr16
inc
jb
popa
je
push
popa
jb
ins
jae
jae
gs
ins
pop
je
imul
je
jb
jae
inc
outs
jb
xor
outs
popa
add
jb
xor
arpl
popa
je
add
gs
pop
push
imul
arpl
gs
jb
jbe
add
je
gs
outs
push
jo
outs
popa
fs
imul
gs
arpl
outs
je
jb
gs
jae
jb
popa
fs
outs
add
je
gs
outs
outs
jb
popa
je
outs
outs
dec
data16
popa
jb
push
add
push
jo
outs
popa
fs
push
imul
inc
push
jb
push
imul
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
jo
jae
add
imul
inc
outs
ins
jo
outs
outs
je
push
imul
ins
gs
add
push
jo
outs
popa
fs
inc
outs
outs
inc
push
jb
dec
popa
imul
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
je
jb
add
popa
jne
je
outs
jae
popa
outs
arpl
addr16
inc
gs
jne
je
inc
gs
jne
je
jo
je
add
jb
gs
imul
outs
fs
add
jb
outs
addr16
jb
data16
add
js
popa
add
jo
jae
outs
add
ins
jne
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
popa
jb
gs
jb
ins
gs
jb
inc
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
gs
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
je
push
je
imul
arpl
jae
je
jb
dec
outs
outs
add
je
inc
imul
push
jb
arpl
jae
push
je
jb
add
imul
ins
add
je
inc
js
je
ins
add
je
inc
js
je
ins
add
jae
gs
cs
gs
push
bound
imul
bound
popa
fs
outs
ins
ins
arpl
outs
add
je
dec
gs
fs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
push
jo
arpl
ins
imul
ins
gs
popa
ins
jne
inc
outs
ins
ins
arpl
outs
add
add
ins
outs
popa
fs
imul
gs
cs
gs
add
arpl
imul
pop
push
push
inc
cmp
inc
gs
je
imul
inc
jno
popa
ins
imul
jne
jb
outs
je
jb
arpl
jae
addr16
push
jb
arpl
jae
popa
ins
add
outs
arpl
add
jo
imul
add
je
push
je
jb
jne
push
popa
je
add
jbe
jb
outs
ins
outs
je
push
jo
arpl
ins
inc
outs
ins
fs
inc
gs
outs
ins
fs
popa
je
add
jae
gs
cs
dec
add
ins
add
jo
add
arpl
jns
push
gs
jb
push
outs
outs
add
je
imul
imul
pop
inc
outs
popa
bound
add
outs
jae
add
outs
je
outs
ins
add
je
push
imul
inc
gs
inc
js
jae
jae
inc
gs
imul
gs
ins
push
gs
fs
push
gs
push
gs
fs
push
gs
fs
imul
gs
data16
je
inc
outs
fs
push
je
gs
ins
add
jb
popa
ins
add
outs
push
gs
add
je
add
popa
add
je
inc
push
inc
dec
dec
add
bound
jb
outs
add
pop
dec
outs
gs
popa
ins
imul
ja
jb
push
je
gs
ins
push
jb
je
jb
push
gs
push
jb
je
jb
push
jb
je
dec
imul
je
imul
jo
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
push
jne
jo
outs
fs
popa
jns
jne
add
je
dec
outs
je
jb
popa
ins
add
outs
je
popa
outs
fs
gs
popa
fs
push
imul
je
ins
cs
jb
ja
outs
add
jp
inc
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
jp
add
je
inc
ins
imul
add
jb
inc
outs
jb
gs
je
ins
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
je
bound
arpl
arpl
add
je
dec
arpl
add
je
dec
popa
ins
add
je
push
push
push
popa
jae
bound
add
fs
inc
arpl
popa
je
add
fs
dec
outs
popa
add
jae
ins
gs
popa
jns
jne
add
inc
push
push
inc
je
jb
bound
add
popa
bound
imul
jns
gs
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jae
ins
bound
addr16
inc
jae
gs
bound
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
arpl
outs
jb
push
gs
imul
add
outs
arpl
outs
outs
imul
outs
jae
arpl
jns
je
ins
xor
cs
outs
jb
xor
jb
jae
jne
arpl
add
outs
jae
arpl
jns
je
ins
xor
cs
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
pop
add
add
add
pop
add
sbb
outs
add
je
add
je
sub
add
add
daa
bound
imul
jb
jns
das
add
arpl
je
add
add
je
jb
add
ins
add
or
dec
add
push
add
add
add
or
add
js
add
add
add
add
add
add
jne
ins
add
add
add
je
add
add
add
cmp
das
add
add
jb
push
add
ins
add
ins
add
add
outs
add
das
add
add
add
add
jb
add
push
or
inc
add
inc
add
add
add
add
xor
jns
jae
je
add
and
jbe
outs
add
add
add
add
outs
add
outs
add
ins
add
je
imul
add
add
add
cmp
das
add
add
ja
ja
add
jb
push
add
ins
add
ins
add
add
outs
add
das
add
ins
add
add
push
adc
push
add
add
arpl
outs
add
add
inc
add
jb
ins
add
add
dec
jbe
push
add
add
push
add
je
add
xor
xor
add
jb
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
out
(bad)
cmp
std
lea
add
mov
pop
push
sbb
mov
push
adc
add
add
add
push
or
push
push
add
sbb
add
add
add
add
push
add
add
adc
push
push
and
add
adc
add
push
add
add
or
push
adc
add
add
add
push
adc
adc
add
add
push
adc
add
adc
and
add
and
adc
and
add
and
add
add
adc
or
adc
and
add
add
popa
pop
adc
add
add
add
or
and
add
or
or
add
add
add
add
add
adc
jno
pop
add
jno
adc
add
add
push
pop
add
adc
adc
add
push
push
push
add
mov
and
push
sbb
add
add
push
or
add
jge
add
add
jne
and
push
add
push
add
add
push
add
push
push
push
push
push
add
push
adc
add
push
add
add
sbb
and
push
sbb
and
push
or
add
add
add
add
push
add
add
pop
or
sbb
push
sbb
or
add
add
push
or
add
sub
add
xor
sbb
and
push
or
adc
push
add
add
push
or
add
sbb
add
add
push
sbb
push
sbb
push
or
add
push
add
pop
add
cmp
add
or
and
add
add
and
add
sbb
sbb
and
add
adc
mov
pop
jg
aad
cmp
or
and
add
adc
and
add
sbb
and
add
and
and
add
and
and
sbb
push
and
add
sub
pop
add
or
add
add
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
std
pop
and
add
adc
adc
adc
add
add
and
adc
add
add
add
pop
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
adc
add
adc
dec
add
sbb
dec
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
adc
jb
ins
gs
jb
inc
imul
popa
ins
adc
dec
inc
push
and
popa
ins
gs
jb
and
xor
jbe
outs
jae
arpl
jns
je
ins
xor
add
add
add
add
adc
jo
jb
addr16
and
xor
xor
add
xor
cmp
data16
sub
sub
sub
sub
popa
xor
xor
add
or
add
xor
xor
xor
xor
add
add
pop
add
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
jecxz
push
add
add
add
add
sbb
add
pushf
cmp
add
inc
push
push
ins
rcr
jmp
mov
add
add
pop
push
jae
jb
pop
dec
cs
gs
pop
inc
outs
arpl
outs
je
pop
push
imul
je
imul
pop
push
jb
push
arpl
jbe
outs
jae
arpl
jns
je
ins
xor
pop
jbe
outs
jae
arpl
jns
je
ins
xor
pop
outs
bound
inc
bound
pop
jbe
outs
jae
arpl
jns
je
ins
xor
cs
bound
add
cmp
add
cmp
add
and
add
cmp
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
