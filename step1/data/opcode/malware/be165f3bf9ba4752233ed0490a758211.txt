and
ret
daa
xchg
adc
idiv
inc
cmps
jns
push
cmps
popa
cdq
add
jb
add
cli
push
daa
xchg
and
jmp
xor
out
xor
mov
push
xor
mov
out
cld
not
ja
push
sbb
inc
data16
jns
dec
mov
ins
mov
jno
aam
and
je
xchg
add
das
dec
rcl
cmc
push
aam
inc
imul
add
jmp
or
add
cs
pop
or
cdq
out
popf
sbb
es
mov
jge
inc
mov
pushf
ret
shl
adc
adc
xor
pop
int
add
xor
mov
lea
mov
mov
wbinvd
or
cmp
sub
add
jge
cmp
adc
test
bndldx
mov
popf
fwait
add
jno
xor
adc
and
inc
cmp
pop
and
inc
and
push
cmp
add
xor
mov
xor
cmp
aaa
inc
xor
pop
(bad)
out
push
or
sub
or
cmp
cli
imul
cdq
cmp
jge
xchg
mov
mov
add
pmuludq
adc
or
sbb
(bad)
(bad)
sbb
hlt
cli
and
imul
cld
jge
shr
repz
push
push
out
cld
jge
aam
call
mov
add
jp
pop
std
jno
add
ret
not
add
add
shl
xor
push
outs
add
mov
add
jo
add
mov
mov
jmp
push
adc
add
rol
cdq
in
jge
jno
mov
sub
ds
mov
add
jno
add
mov
inc
xor
imul
call
and
call
xor
imul
push
add
adc
adc
add
cdq
pushw
leave
aas
cmps
pop
xchg
(bad)
jno
fisubr
sbb
imul
xor
imul
outs
add
xor
cld
mov
rol
mov
mov
cdq
pop
jp
jno
(bad)
call
jmp
movups
dec
mov
mov
inc
jno
mov
add
jno
test
jno
push
aam
scas
fdivr
mov
sub
add
sbb
imul
push
mov
sbb
ror
cmp
or
adc
inc
call
xor
pop
add
(bad)
out
push
rcr
xchg
hlt
adc
add
cdq
cld
jp
jno
cmc
call
xor
mov
inc
call
jmp
jo
add
mov
ds
adc
div
ret
xor
add
(bad)
in
jl
(bad)
iret
mov
sti
or
push
lsl
and
rcl
cmc
sub
push
cmp
clc
call
test
mov
inc
jp
popf
inc
jle
jp
jmp
imul
cdq
test
jno
lds
mov
inc
jge
or
mul
jbe
sbb
cld
mul
jbe
cdq
mov
xor
jge
in
jmp
or
fs
mov
sti
sbb
or
add
jbe
add
clc
call
repz
dec
retf
cdq
out
daa
inc
mov
or
popf
inc
jle
js
xor
or
jmp
or
sbb
div
ret
imul
pop
jge
or
or
jmp
or
out
jbe
cdq
adc
jno
cmc
div
ret
imul
add
add
and
out
popf
add
es
jbe
mov
sti
dec
push
mov
cmp
jno
cld
xchg
aam
xor
test
cli
push
sti
or
call
inc
add
(bad)
cli
push
inc
jle
pop
cmp
mov
xor
inc
add
add
mov
shl
out
inc
jbe
push
adc
cli
push
jmp
test
push
hlt
out
cdq
inc
jb
push
sti
(bad)
or
cmp
xlat
jno
mov
or
mov
fdivr
ret
add
lea
cmp
mov
add
mov
push
jp
dec
pop
dec
mov
mov
adc
xor
cmc
jno
push
aam
fwait
jbe
retf
and
cdq
fild
je
mov
test
sbb
ret
add
pop
sbb
pop
jo
cld
jge
sti
sub
or
sbb
xchg
cld
jge
sub
or
enter
push
adc
jo
cld
jge
popf
xchg
ja
fld
das
dec
retf
cdq
out
and
or
(bad)
(bad)
lea
mov
inc
jle
shr
inc
clc
inc
push
dec
imul
cli
ins
or
mov
cdq
ret
sar
test
cdq
rcr
clc
rol
mov
sub
(bad)
cmps
fwait
inc
jle
shl
inc
clc
inc
dec
xor
lds
sub
rcl
cmc
push
shl
inc
mov
jge
inc
jle
jns
xchg
lock
jmp
adc
mov
sti
and
cmp
or
mov
cdq
ret
sar
test
cdq
rcr
clc
rol
mov
sub
(bad)
cmps
out
push
cli
mov
add
xor
lds
lea
xor
fnstcw
inc
push
aam
fwait
jbe
cli
dec
pop
inc
xor
loop
or
add
loop
xor
cli
mov
add
xchg
pop
or
or
jne
mov
loop
iret
jge
mov
div
ret
inc
mov
xor
mov
ror
(bad)
dec
retf
cdq
out
and
aad
or
clc
call
cld
xchg
aam
or
inc
and
jne
mov
mov
lea
imul
add
cdq
jae
jge
inc
mov
lea
aam
or
jge
xchg
(bad)
cmps
call
jne
cdq
inc
jp
xlat
pop
fsubr
fld
xlat
clc
cmc
push
aam
fwait
pop
mov
scas
or
inc
cdq
sti
stos
mov
jmp
push
adc
or
js
popf
jno
push
aam
gs
jno
add
add
jno
lds
cs
pop
fbstp
inc
push
or
mov
or
xchg
ds
ret
add
add
cli
or
sar
inc
xchg
out
push
mov
call
mov
inc
or
arpl
sub
pop
fbstp
cld
pop
shl
inc
mov
jns
sub
jno
xor
add
mov
sti
or
jp
push
arpl
cmp
repz
sub
shl
icebp
jno
mov
out
icebp
jno
xor
retf
or
mov
inc
outs
js
jbe
daa
js
jno
adc
sbb
mov
add
or
pop
lahf
inc
clc
push
jmp
mov
xor
adc
mov
add
xor
or
adc
mov
sbb
(bad)
in
ror
div
ret
mov
call
add
out
pop
mov
dec
pop
fnstcw
test
xor
push
add
add
daa
inc
mov
or
xchg
add
adc
div
es
mov
add
jno
inc
mov
fld
jge
jg
xor
mov
enter
sub
add
outs
mov
xor
adc
inc
out
push
mov
xor
add
test
enter
cdq
rol
jnp
xor
jge
adc
jge
out
jbe
cdq
mov
add
push
inc
cmp
loop
(bad)
out
push
push
jmp
jge
aam
mov
add
and
stc
popa
xor
pop
inc
enter
push
not
cli
push
or
xor
or
push
sahf
clc
push
inc
or
add
jno
jle
jno
xchg
adc
add
dec
nop
mov
jno
das
or
out
push
add
in
xchg
aam
add
and
mov
inc
xor
mov
mov
rol
push
xor
add
arpl
clc
xchg
fstp
out
mov
xlat
inc
bound
mov
mov
mov
and
adc
xchg
test
lock
cli
ins
or
push
adc
or
push
mov
call
not
js
xor
adc
adc
xor
push
or
pop
mov
clc
push
dec
test
(bad)
cld
jl
cdq
rol
in
add
inc
popf
xchg
out
cld
rcl
mov
mov
jno
mov
lea
add
je
mov
jno
inc
mov
fistp
out
ja
lock
call
mov
or
in
mov
xor
sbb
(bad)
mov
xchg
out
cld
or
push
sti
(bad)
repz
cld
jge
xchg
es
ret
sub
pop
dec
mov
mov
cld
sbb
daa
inc
mov
or
and
or
cmp
xor
or
mov
push
or
dec
and
(bad)
hlt
xchg
xor
mul
inc
jle
adc
cmp
mov
jne
cdq
inc
jbe
xlat
call
pop
cmp
mov
jns
inc
xor
div
data16
fwait
inc
mov
push
add
xor
jmp
pop
adc
add
call
mov
push
out
jge
shl
bnd
cmp
hlt
gs
push
test
jno
push
and
js
shl
or
xchg
data16
and
imul
add
and
arpl
xor
inc
ins
pop
add
add
mov
daa
xor
(bad)
jns
aas
mov
pop
xchg
adc
add
or
add
arpl
jbe
sbb
stos
ret
shl
jno
jmp
out
or
mov
adc
sbb
sbb
imul
mov
jno
jno
inc
jbe
adc
sbb
push
push
bound
cmp
or
mov
retf
jge
nop
aas
xor
or
loopne
ror
in
clc
add
add
lods
cmp
add
inc
push
xlat
imul
adc
add
jmp
add
add
in
jo
adc
(bad)
dec
retf
cdq
out
in
adc
sbb
push
aad
in
fisubr
rcr
cmp
or
out
cld
sbb
lock
in
jno
mov
test
std
jge
xchg
(bad)
jge
out
push
push
jmp
jge
sbb
(bad)
cmc
inc
or
jno
hlt
popa
clc
xchg
mov
(bad)
out
mov
sti
pop
shl
sbb
pop
lock
mov
mov
popf
xchg
out
cld
rcr
xchg
(bad)
mov
sub
add
mov
adc
or
mov
ror
lock
jl
inc
mov
sar
sub
aad
cdq
inc
jle
shl
lock
test
mov
lods
out
std
jge
js
jno
adc
jge
fwait
cmp
sub
mov
lea
ret
(bad)
hlt
mov
lock
add
hlt
sar
jl
inc
mov
sar
sub
aad
cdq
inc
jle
ror
add
add
jno
mov
mov
cld
push
jmp
or
mov
mov
mov
std
jge
enter
ror
jge
inc
mov
jno
lock
adc
pmuludq
mov
sar
sub
aad
cdq
inc
jle
ror
push
sbb
adc
mov
cmp
xor
aas
mov
std
jge
pop
xchg
jo
test
adc
jge
clc
mov
inc
jge
(bad)
in
lods
test
imul
cmps
xchg
mov
cld
mov
jle
fwait
xor
xor
mov
pmuludq
cld
jl
inc
imul
push
add
bound
xor
jge
(bad)
out
lds
jno
and
out
std
jge
test
shl
hlt
popa
clc
xchg
cmps
jge
out
mov
sub
add
jno
add
jno
inc
sbb
mov
jno
xor
inc
jge
cld
jge
adc
sbb
imul
add
int3
in
cld
jl
inc
jmp
xchg
cld
add
adc
idiv
xchg
mov
cld
xor
or
jp
jmp
mov
jno
in
ja
out
add
cld
jge
adc
sbb
imul
add
int3
in
cld
jl
inc
jmp
test
cld
add
adc
idiv
xchg
mov
cld
xor
call
xor
imul
push
add
in
jge
aam
mov
add
hlt
icebp
shl
jg
out
cld
aad
lahf
idiv
xchg
(bad)
mov
xor
inc
hlt
mov
add
mov
inc
mov
jno
imul
sub
ja
sbb
imul
add
int3
in
cld
jl
inc
jmp
test
cld
add
adc
idiv
xchg
mov
cld
xor
add
jp
jmp
mov
jno
and
out
add
cld
jge
adc
mov
scas
jge
out
add
sbb
push
xor
adc
jg
out
cld
add
adc
idiv
xchg
mov
cld
xor
call
xor
imul
push
add
in
jge
aam
mov
add
hlt
icebp
shl
jg
out
cld
aad
stos
idiv
xchg
(bad)
mov
xor
call
xor
mov
mov
std
jge
clc
popf
jbe
out
add
cld
jge
adc
mov
scas
jge
out
add
pop
adc
jne
cdq
xchg
mov
cld
or
out
cld
sbb
imul
push
add
and
idiv
xchg
(bad)
mov
xor
call
xor
imul
push
add
in
jge
aam
mov
add
out
std
jge
adc
xor
(bad)
xor
aas
fucomp
std
jge
gs
shl
pop
mov
std
jge
clc
xor
mov
pop
imul
add
jno
imul
sub
add
(bad)
out
add
adc
xor
ror
inc
cld
xchg
fstp
out
push
or
int3
cld
jl
inc
mov
xor
or
xchg
cld
xchg
mov
leave
out
std
jge
fwait
xchg
out
cld
sar
sub
aad
cdq
inc
jle
shl
xor
inc
jle
int3
xchg
and
out
std
jge
cdq
fld
aam
cld
jl
adc
jge
pop
lea
adc
cmp
add
std
out
std
jge
shl
hlt
mov
jl
pop
add
mov
add
mov
cld
sar
xchg
mov
or
enter
inc
mov
test
popf
xchg
out
cld
rcr
test
shl
sbb
sub
xchg
dec
adc
xor
jle
ror
xor
add
(bad)
out
push
or
(bad)
cld
jl
inc
mov
jno
mov
lea
xchg
mov
cld
or
pop
xchg
hlt
clc
cld
jl
inc
mov
mov
fwait
cmp
sub
(bad)
hlt
fadd
xor
adc
adc
imul
cld
sar
xchg
fistp
out
push
or
push
mov
test
xchg
jle
jno
xchg
adc
add
popf
xchg
out
cld
sar
xchg
jmp
(bad)
out
push
or
push
cmps
clc
push
dec
jb
add
call
jb
out
cld
or
imul
push
add
hlt
in
cld
jl
inc
jmp
pop
adc
add
out
std
jge
stc
or
jno
imul
test
cld
cld
jl
popf
xchg
out
cld
rcr
jne
shl
jg
out
cld
rcr
xchg
(bad)
xchg
clc
enter
shl
hlt
cmp
mov
add
hlt
cld
cld
jl
cdq
xchg
mov
cld
pmuludq
mov
loope
std
jge
cld
adc
xchg
test
lock
cld
movs
xchg
jge
out
sub
in
jne
add
cdq
out
std
jge
fwait
cmp
es
(bad)
lea
rol
in
add
jno
cmps
sub
enter
ror
jge
js
jno
adc
jge
fwait
cmp
sub
mov
lea
ret
(bad)
hlt
add
je
add
hlt
mov
jl
inc
mov
(bad)
std
jge
fwait
cmp
jl
(bad)
lea
ret
(bad)
hlt
jmp
mov
cld
sbb
add
jge
sub
fld
test
xchg
jnp
(bad)
out
add
(bad)
out
mov
icebp
out
std
jge
xchg
mov
out
push
pinsrw
mov
mov
jno
popf
mov
mov
cld
add
adc
xor
or
mov
mov
xor
mov
enter
ins
inc
jno
and
out
std
jge
popf
xchg
mov
cld
rcr
mov
shl
or
sub
xchg
dec
adc
xor
jle
sti
test
xchg
adc
aas
std
out
std
jge
pop
xchg
hlt
js
jl
inc
imul
std
out
std
jge
fwait
cmp
xor
sub
add
jno
cmp
out
std
jge
pop
xchg
adc
add
pusha
cld
jl
adc
mov
add
mov
push
jge
pusha
cld
jl
clc
(bad)
jo
out
add
(bad)
(bad)
addr16
out
mov
enter
lods
push
mov
add
jno
xchg
out
cld
xor
or
jp
jge
mov
xchg
out
cld
rcr
dec
icebp
shl
jg
out
cld
rcr
xchg
(bad)
xchg
cld
popf
(bad)
jge
out
or
cmp
xchg
sti
jge
out
cld
aaa
adc
xchg
push
mov
push
or
call
xchg
and
sub
jno
add
fld
jne
xchg
out
cld
rcr
dec
icebp
shl
jg
out
cld
rcr
xchg
(bad)
xchg
clc
enter
rol
jge
add
hlt
cwde
cld
jl
inc
mov
hlt
mov
xchg
mov
cld
mov
mov
adc
mov
mov
inc
or
test
pushf
cld
jl
cdq
ror
mov
jl
inc
mov
hlt
cld
cld
jl
fwait
xchg
out
cld
mov
mov
sbb
loopne
jl
adc
mov
(bad)
jge
out
add
mov
jns
jno
xchg
out
cld
sar
and
aam
xchg
mov
add
std
jge
fwait
xor
sbb
xor
xlat
jge
out
add
jge
xchg
out
cld
sar
and
aam
fwait
xchg
out
cld
sar
and
aam
fwait
xchg
out
cld
sar
and
aam
cdq
fld
hlt
lock
jl
inc
mov
int
cld
jge
dec
pop
dec
mov
mov
out
imul
push
add
jmp
inc
adc
push
out
xor
sub
push
aad
jne
inc
xor
inc
call
xchg
cdq
std
mov
cdq
jbe
mov
inc
or
mov
mov
xchg
js
xor
adc
adc
add
out
cld
add
shl
sbb
std
or
(bad)
(bad)
(bad)
out
cld
jge
sti
ss
xor
add
xchg
ror
pop
jmp
or
enter
cdq
jle
call
xor
jle
out
cld
jge
dec
pop
adc
push
repz
adc
xor
inc
jne
push
aad
cmps
ds
sti
mov
cdq
(bad)
jmp
imul
jno
loopne
jno
mov
pop
in
adc
inc
cs
rcl
cmc
sub
push
or
mov
or
in
mov
adc
mov
pop
and
adc
or
call
mov
and
inc
adc
mov
cmp
scas
ret
jno
add
fcom
xchg
add
adc
ret
jno
mov
xor
or
loop
add
jno
mov
jae
add
xchg
xchg
inc
xor
or
stc
jbe
jno
cld
xchg
aam
add
mov
cmp
inc
jb
adc
jmp
or
dec
pop
xchg
jae
add
stos
ret
jno
ja
sar
scas
ret
jno
push
mov
ja
push
mov
xchg
add
ret
adc
or
jmp
push
push
call
xor
inc
add
jno
hlt
arpl
push
jmp
mov
push
call
stos
ret
jno
adc
xor
jmp
or
inc
shr
mov
cwde
cmc
xor
call
cld
jge
out
call
xor
out
add
add
add
jl
lods
ret
jno
mov
and
mov
std
jge
out
call
xor
ret
jno
jmp
or
popf
mov
add
clc
shr
sub
or
inc
shr
and
add
jl
lods
ret
jno
mov
fmul
sub
adc
xor
dec
push
push
mov
cwde
mov
jno
push
call
add
xor
add
leave
push
xor
xor
mov
sbb
inc
imul
scas
ret
jno
ret
xor
sub
jno
add
xor
adc
jmp
mov
cmp
jno
add
push
push
mov
cwde
mov
xor
jns
adc
add
ret
jno
jmp
stc
out
jno
or
cdq
retf
cmp
mov
jno
mov
and
jg
bnd
daa
pop
in
inc
or
jno
inc
mov
push
sub
cmps
hlt
aam
shl
call
cld
xchg
aam
sbb
add
jno
sub
sub
mov
or
inc
shr
jmp
add
lods
cdq
ret
push
push
call
leave
xor
jb
call
clc
fadd
dec
clc
ror
je
mov
jno
ret
xor
mov
lock
xor
or
xor
ds
jno
add
jno
jle
xor
jge
sbb
mov
(bad)
push
lock
add
mov
xor
jno
ds
fcom
add
(bad)
ins
icebp
test
add
sti
dec
add
pop
neg
push
call
or
xor
mov
loopne
or
out
xor
or
je
scas
ret
jno
jecxz
stc
push
icebp
add
push
idiv
jno
gs
je
mov
imul
add
xor
add
cdq
repz
cli
add
mov
fcom
jge
sbb
ret
or
xor
cmp
add
mov
icebp
mov
sbb
call
or
ret
add
jne
stos
xor
adc
xchg
inc
adc
lods
ret
jno
push
mov
push
add
stos
out
push
cli
mov
add
cmp
inc
add
imul
ret
fld
aam
scas
je
ins
pop
mov
call
jnp
xor
imul
jno
cmp
imul
fsub
jno
pop
xor
adc
inc
sbb
shl
xor
adc
and
inc
sbb
leave
shl
and
adc
and
pop
leave
shl
adc
adc
and
inc
cmp
add
xlat
imul
push
add
cdq
nop
bound
xor
pop
fdiv
cld
ja
daa
inc
mov
or
out
push
cli
mov
add
stc
fiadd
cld
push
stos
ror
adc
(bad)
cdq
or
xor
dec
inc
adc
add
add
xor
mov
adc
add
clc
enter
rol
xchg
aam
xor
rol
jno
loopne
xor
mov
jne
xor
add
mov
repz
in
rol
add
or
inc
cmp
jecxz
je
mov
jae
add
jno
(bad)
mov
xchg
data16
(bad)
or
mov
mov
adc
daa
cld
push
jmp
sbb
add
out
push
jbe
push
add
push
inc
add
loope
ror
mov
jno
inc
and
call
ja
jbe
cdq
int3
pusha
xor
and
out
jbe
cld
push
mov
sbb
jmp
adc
add
push
add
mov
sbb
imul
jno
mov
enter
gs
inc
jo
or
mov
cdq
inc
cld
test
out
push
jbe
push
add
xor
call
popa
clc
push
(bad)
or
rcl
xchg
xchg
out
stos
mov
dec
xor
mov
xchg
cdq
inc
bound
int3
mov
lea
repz
mov
mov
ror
and
mov
cdq
jp
call
xor
push
sysenter
clc
push
jge
call
not
sbb
cld
idiv
push
mov
push
add
xor
call
xor
jle
push
fisttp
xor
retf
cdq
out
into
sub
dec
cdq
sti
or
mov
sbb
cld
xchg
popa
mov
loop
jno
pop
fbstp
cld
psrlw
inc
mov
jns
pop
mov
adc
jge
cmps
pop
mov
jno
aaa
(bad)
(bad)
push
xor
dec
out
add
(bad)
push
xor
dec
out
add
(bad)
push
xor
dec
out
add
(bad)
push
xor
dec
out
add
jae
add
xor
mov
jb
mov
mov
cld
cmp
jge
cmps
pop
xchg
fadd
jle
pop
mov
out
add
mov
or
cmps
pop
xchg
dec
shl
clc
jmp
addr16
neg
cdq
sti
add
push
ds
adc
imul
pop
mov
mov
(bad)
cld
adc
out
mov
mov
jno
mov
mov
xchg
cld
add
push
mov
clc
pushf
fdiv
mov
mov
adc
and
xchg
jmp
(bad)
mov
test
jb
add
clc
pop
or
mov
jno
and
mov
cmp
adc
icebp
push
cld
sbb
push
cli
mov
add
dec
cs
mul
sub
xchg
mov
clc
add
dec
push
pop
div
cdq
sti
add
adc
mov
call
mov
ja
imul
sub
ja
clc
call
aas
test
adc
xchg
cld
inc
cmp
mov
mov
jno
aas
mov
mov
mov
clc
call
aas
test
push
or
sub
add
jp
clc
pop
(bad)
(bad)
adc
mov
add
adc
neg
retf
jge
inc
adc
and
xchg
jmp
pop
repnz
pop
or
mov
popa
popf
inc
xor
xlat
mov
add
add
mov
nop
aas
test
dec
or
sub
add
jp
clc
add
dec
push
add
inc
cdq
sti
add
push
aas
mov
jno
add
jbe
cld
xor
call
push
xchg
cld
inc
adc
jne
pop
xchg
jo
add
jne
add
mov
fnstcw
xchg
out
mov
inc
push
jge
push
jbe
call
mov
ss
cld
push
adc
hlt
adc
icebp
arpl
(bad)
jge
jmp
jno
cmp
jmp
sbb
xchg
aam
cmp
xchg
mov
add
dec
add
xor
call
pop
je
out
pop
jge
push
mov
outs
sub
ja
dec
stc
add
adc
add
cdq
fild
jbe
pop
test
mov
or
lock
sti
and
jne
mov
jo
add
xor
mov
retf
clc
jmp
test
push
jbe
add
lahf
jne
inc
xor
push
lock
xchg
retf
jge
loop
pop
pop
ror
repnz
pop
or
lds
outs
adc
jge
push
retf
jge
call
add
clc
pop
or
lds
jo
add
and
ret
out
aaa
xchg
sub
fs
jge
xchg
(bad)
mov
dec
pop
dec
mov
mov
dec
xor
fnstenv
push
aam
clc
loop
mov
lds
xchg
iret
cld
jge
clc
clc
fnstenv
xor
icebp
jbe
xchg
out
cld
xor
add
je
mov
xchg
iret
cld
jge
adc
mov
cmp
adc
icebp
lods
loopne
mov
add
bound
mov
cmp
jge
sub
out
push
add
jle
xchg
jno
out
cld
or
mov
leave
(bad)
cld
sbb
mov
cdq
cld
pop
xor
sub
test
xor
or
in
in
jge
jnp
pushf
cld
sbb
pusha
mov
repnz
in
fnstsw
out
aaa
xchg
and
pop
xor
es
out
cld
or
and
xor
add
(bad)
cld
jge
pop
mov
cmp
jge
rcr
dec
xor
add
mov
xchg
out
cld
cmp
jno
out
cld
inc
xchg
adc
ret
or
jmp
add
sahf
out
cld
inc
xchg
adc
ret
jno
xchg
push
scas
out
cld
jge
push
mov
cmp
xor
mov
out
cld
or
enter
out
push
cli
mov
add
in
fdivr
cdq
rol
push
ret
cdq
fild
clc
xchg
imul
out
xor
xor
popa
adc
rcr
cdq
lds
xchg
ret
cdq
mov
mov
cld
jge
xchg
rol
in
jge
data16
hlt
xchg
fnstsw
inc
jmp
sub
add
push
cmps
outs
sahf
out
cld
sbb
cld
jge
adc
aaa
popf
(bad)
cld
jge
movs
fistp
out
jmp
mov
cld
add
sbb
not
xchg
cmps
add
lea
rol
pop
mov
add
adc
xlat
lea
pop
mov
mov
jbe
ss
cld
xor
lock
xchg
cld
jge
adc
lock
fild
clc
xchg
sbb
int3
lock
xchg
jno
cmp
add
(bad)
clc
adc
out
pop
add
cld
in
jge
adc
xor
push
scas
out
cld
scas
mov
add
mov
or
sub
cld
jge
adc
cld
aaa
test
ins
pop
xor
xor
in
jge
shl
cmp
push
mov
in
in
jge
xchg
cmps
jbe
out
cld
cmp
imul
out
ret
cdq
fiadd
adc
arpl
dec
jle
sbb
or
add
mov
test
cld
jge
repnz
test
jmp
in
add
sbb
jge
in
jge
xchg
mov
xor
lock
out
push
cli
mov
add
int3
repz
adc
sbb
shl
fidiv
mov
ror
cld
jge
rol
xchg
je
add
scas
out
cld
add
xchg
fwait
pop
mov
mov
ror
cld
jge
test
inc
ins
adc
or
test
jge
fwait
xchg
scas
out
cld
or
test
jge
adc
or
sbb
mov
cld
or
(bad)
fdivr
cdq
xchg
out
cld
call
scas
out
cld
ror
out
jmp
sub
add
hlt
(bad)
fdivr
sub
div
fwait
xchg
out
cld
or
movs
fdivr
adc
add
repz
adc
sbb
add
movs
fdivr
shr
mov
fwait
xchg
cmp
sbb
jmp
scas
pop
mov
call
inc
xor
or
in
in
jge
shl
cmp
fistp
out
sub
movs
iret
cld
jge
sbb
mov
push
add
mov
ret
fwait
pop
xchg
push
mov
cmp
imul
out
imul
nop
pop
xor
xor
pop
xchg
jo
add
or
add
jno
xchg
out
cld
(bad)
(bad)
adc
imul
idiv
jle
jo
xchg
push
add
mov
mov
jno
jmp
xchg
xchg
out
mov
lds
ror
cld
jge
xchg
scas
data16
out
cld
xchg
movs
out
mov
mov
nop
cmp
repnz
add
dec
adc
clc
loopne
push
nop
cmp
repnz
pop
add
jbe
clc
loopne
push
nop
cmp
mov
push
add
mov
ret
cdq
mov
aad
cld
jge
xchg
mov
(bad)
(bad)
push
imul
mul
pop
mov
adc
xor
cld
sysexit
and
or
hlt
fdivr
sti
or
hlt
in
jge
adc
stos
sbb
cld
jge
stc
sub
into
cld
jge
pop
mov
ror
cld
jge
repnz
int
cmps
pop
mov
lds
jo
add
dec
sub
add
outs
nop
aas
mov
jno
pop
add
pop
xor
idiv
aas
mov
jno
add
call
jge
sbb
std
aam
jle
jo
pop
(bad)
(bad)
xchg
lock
mov
push
jge
int3
fdivr
out
mov
scas
out
cld
push
jmp
lar
repz
adc
repnz
ins
mov
add
in
in
jge
shl
cmp
ret
shl
xor
or
add
mov
sahf
out
cld
add
in
jge
adc
xor
jge
push
sub
pop
cmp
jge
pop
mov
cmp
jge
rcr
dec
xor
add
mov
fnstcw
xchg
out
mov
sub
(bad)
(bad)
lea
sbb
xchg
inc
jle
add
xor
in
inc
push
adc
cli
push
dec
mov
ror
in
mov
test
push
add
jle
add
mov
push
add
jbe
add
lea
push
jle
sub
push
add
adc
xor
js
sti
adc
xlat
mov
inc
xchg
xchg
gs
imul
jle
pusha
(bad)
out
xor
xchg
mov
mov
jmp
pop
mov
mov
inc
xchg
test
adc
add
add
mov
or
xor
ds
jno
add
sbb
xor
cmp
pop
add
add
xor
mov
ror
shl
add
or
mov
inc
push
inc
jns
pop
mov
jo
inc
xor
cmp
pop
add
add
xor
mov
ror
shl
xor
add
add
jne
inc
jns
xchg
outs
jle
jbe
cmp
mov
add
cmc
shl
xchg
push
clc
xchg
push
cli
xor
cli
lea
inc
jge
out
(bad)
adc
xchg
sti
adc
and
cmp
shl
push
clc
sbb
cmp
pop
jno
cli
push
dec
xor
mov
mov
push
(bad)
or
or
jb
add
push
clc
cmp
jns
dec
pop
dec
mov
mov
inc
push
aam
fwait
jbe
retf
jmp
inc
jle
shr
jno
add
sbb
jmp
and
xchg
retf
jge
nop
aas
xor
or
cs
div
inc
mov
adc
test
xchg
cld
or
mov
jne
cdq
inc
jp
rcr
fld
xlat
clc
cmc
mov
push
inc
add
sub
in
hlt
in
fdivr
cdq
les
xchg
xor
mov
out
jbe
cld
xchg
add
out
push
push
dec
add
mov
push
push
adc
xor
adc
mov
sti
or
cmp
or
inc
mov
scas
jecxz
xor
outs
add
mov
call
jno
pop
fbstp
cld
pop
shl
inc
mov
or
jp
jmp
imul
add
jmp
and
xchg
std
jge
push
cmp
adc
cli
push
lgdtd
sub
add
sbb
push
push
inc
add
inc
adc
jne
cdq
inc
jbe
xlat
mov
rcl
rcr
push
jmp
and
add
xor
mov
call
cmp
adc
cli
push
ud2
xor
call
or
cld
test
adc
aam
in
xor
jle
sbb
(bad)
popf
cdq
(bad)
(bad)
dec
retf
cdq
out
and
cmp
lock
add
jno
imul
jno
add
jno
add
or
inc
add
inc
call
cld
div
ret
imul
jp
aam
cwde
push
xor
fistp
adc
or
mov
fdivr
ret
add
sbb
mov
lea
jge
sbb
push
inc
add
lea
sbb
lock
cmp
adc
aam
dec
push
xor
lock
add
jo
add
mov
mov
inc
push
aad
adc
inc
cdq
sti
mov
cdq
les
dec
jg
add
(bad)
call
jno
imul
mov
jbe
cdq
int3
push
xor
add
shr
mov
adc
sbb
push
push
inc
add
clc
xlat
imul
add
push
push
inc
add
jno
mov
call
inc
(bad)
fld
xlat
clc
cmc
push
shl
inc
mov
jns
inc
jle
jbe
lahf
lock
push
push
adc
mov
fwait
inc
jle
rol
inc
clc
inc
push
(bad)
adc
xor
not
mov
jmp
push
xor
jo
adc
in
adc
add
add
jne
push
jmp
push
xor
mov
sub
or
cdq
shl
out
call
add
xchg
inc
mov
daa
js
jo
adc
pushf
and
add
mov
pop
fsubr
fld
xlat
clc
cmc
push
shl
inc
push
or
mov
jge
inc
jle
jbe
(bad)
leave
add
clc
push
sti
or
imul
inc
add
bound
mov
dec
inc
imul
inc
add
dec
out
imul
call
or
add
push
loop
sbb
pop
fsubr
fld
xlat
clc
cmc
sub
push
aad
pop
pop
ja
test
hlt
jno
hlt
popa
clc
push
fisttp
mov
(bad)
(bad)
xchg
adc
add
add
adc
add
adc
add
or
mov
enter
jno
cmps
add
nop
jle
jo
add
call
inc
cmp
cld
imul
add
(bad)
push
push
jae
rcr
dec
jge
cmp
xor
rol
dec
push
jge
xor
call
pop
clc
ror
xor
or
xor
push
add
cdq
nop
jle
jae
pop
add
add
xchg
push
add
test
out
add
or
add
mov
adc
popa
clc
push
fisttp
mov
inc
mov
add
and
or
arpl
shr
mov
add
xchg
pop
lods
inc
jo
out
cmp
mov
push
out
(bad)
(bad)
pop
loope
nop
cdq
inc
push
jo
out
xor
or
xor
mov
jns
mov
ja
ror
(bad)
add
xchg
test
mov
clc
push
ror
mov
inc
mov
inc
mov
inc
or
mov
push
out
ja
(bad)
das
dec
retf
adc
popa
push
add
retf
ret
mov
adc
rcl
lods
loope
xchg
adc
xchg
adc
add
adc
loope
inc
adc
adc
loope
cmp
adc
loope
mov
adc
call
mov
adc
rcl
sahf
loope
xchg
adc
xchg
adc
add
dec
enter
xor
adc
loope
fs
(bad)
jge
jo
adc
adc
jno
xchg
adc
adc
loope
adc
adc
loope
xchg
or
sbb
adc
adc
loope
enter
xchg
(bad)
popf
adc
loope
xchg
add
xchg
adc
gs
adc
adc
loope
jmp
push
add
loopne
add
adc
add
push
add
adc
mov
adc
adc
adc
sbb
xchg
adc
call
ja
loope
xchg
adc
dec
xchg
ret
mov
adc
loope
xor
adc
loope
mov
adc
loope
xchg
adc
adc
loope
mov
adc
xchg
adc
add
loope
xchg
adc
cmp
bnd
ja
loope
xchg
adc
call
mov
adc
loope
xor
adc
loope
mov
adc
loope
xchg
adc
adc
loope
mov
adc
xchg
adc
add
loope
xchg
adc
and
adc
mov
rol
out
popf
add
aam
fwait
inc
mov
cdq
inc
mov
and
sti
pop
cdq
fild
xchg
shl
push
test
jne
add
add
(bad)
ror
jge
gs
imul
mov
sub
add
mov
rcr
xchg
mov
push
repz
inc
std
or
mov
fs
cmc
pusha
fwait
inc
mov
inc
(bad)
mov
sub
add
xchg
loope
jno
jbe
cli
push
or
popa
pop
mov
(bad)
cmp
or
rcr
adc
call
jno
mov
xchg
sbb
adc
(bad)
(bad)
push
cld
sar
push
or
xchg
mov
(bad)
adc
rcr
cdq
fld
ja
inc
je
fwait
inc
mov
push
push
inc
add
test
cld
mov
(bad)
add
(bad)
(bad)
push
bswap
dec
(bad)
or
jg
cld
jge
dec
pop
dec
mov
mov
cld
das
shl
inc
mov
add
clc
dec
shl
mov
sar
shl
push
jl
cli
popf
pop
fimul
or
mov
loopne
inc
repnz
add
jl
ret
imul
add
clc
(bad)
mov
xchg
inc
cld
idiv
js
mov
add
ror
adc
(bad)
(bad)
ins
in
inc
xchg
adc
shl
mov
clc
(bad)
dec
or
push
(bad)
(bad)
ins
in
inc
xchg
adc
mov
mov
fadd
jno
jmp
adc
call
test
push
add
cld
pop
add
mov
push
jmp
xchg
in
push
cmp
add
test
add
xor
rcr
into
shl
push
mov
in
jno
ror
into
shl
jp
pop
mov
push
sti
or
shl
or
xchg
inc
jp
mov
dec
xor
add
dec
push
sti
lock
inc
int
adc
int
adc
jge
ror
js
mov
lock
jno
jmp
adc
or
jmp
adc
or
or
mov
ret
sbb
or
shl
jmp
add
and
mov
inc
jge
iret
dec
xor
mov
test
sbb
and
mov
add
test
add
jne
iret
dec
xor
add
dec
push
div
cmps
mov
dec
xor
mov
cmp
inc
jb
add
xor
ror
into
shl
pop
mov
loopne
pop
clc
iret
add
jle
push
ins
mov
hlt
into
shl
push
mov
sub
cmp
add
jle
push
ins
mov
clc
into
shl
bound
cmp
adc
bnd
call
fild
jno
jmp
(bad)
out
cld
add
adc
sbb
imul
cdq
lock
xor
data16
lods
shl
imul
mov
push
pop
add
sbb
and
pushf
enter
jb
test
mov
pop
fsubr
fld
xlat
clc
cmc
sub
add
ficomp
mov
jno
in
hlt
cld
(bad)
jge
cdq
lds
je
mov
jno
push
jge
push
add
lahf
nop
sub
jno
mov
sar
shl
push
mov
sub
rcr
xchg
(bad)
mov
mov
cld
jge
loopne
jb
(bad)
(bad)
adc
lods
cdq
js
xor
dec
add
mov
jmp
jnp
cmp
or
shl
in
cld
jl
out
add
adc
hlt
mov
out
cld
sbb
shl
mov
out
xor
cld
jge
and
inc
cld
xchg
cld
jl
out
push
jmp
repnz
jns
out
cld
rcr
jp
call
jno
add
jno
add
cld
xchg
clc
jg
out
push
push
pop
add
mov
cld
idiv
(bad)
pop
xor
push
push
pop
add
jno
imul
jo
add
jno
mov
mov
cld
push
pop
add
mov
jmp
cmp
add
push
imul
add
hlt
out
std
jge
inc
jmp
cmp
retf
jno
xchg
out
cld
rcr
int3
repnz
jge
out
cld
rcr
adc
xor
dec
xor
xchg
aam
sbb
repnz
jae
adc
jge
js
xor
scas
jno
add
and
xchg
mov
cdq
in
cld
jge
(bad)
push
jmp
repnz
xor
mov
add
mov
pop
fsubr
fld
xlat
clc
cmc
sub
push
aad
gs
cmp
lock
(bad)
jno
cld
xchg
aam
cmp
hlt
gs
push
test
jno
inc
jp
popf
inc
jle
jp
jmp
imul
cdq
call
dec
clc
push
repz
out
inc
add
add
mov
sti
aam
adc
mov
jge
in
jmp
cmp
add
in
jmp
cmp
add
xchg
or
jno
pop
fnstcw
inc
mov
add
out
jbe
cdq
enter
jp
ror
add
idiv
jbe
cdq
sub
xor
call
push
cmp
lock
dec
bnd
imul
popa
out
jbe
mov
push
adc
xor
sbb
xchg
les
sub
push
or
add
push
inc
mov
jne
cdq
inc
jbe
xlat
add
add
cld
push
call
sbb
imul
add
jno
jbe
mov
push
pop
add
inc
shr
mov
add
cld
imul
add
add
test
sbb
test
pop
cld
test
adc
jne
cdq
inc
jb
xlat
xor
dec
retf
cdq
out
popf
add
cli
gs
or
or
mov
or
test
test
hlt
gs
push
repz
push
call
sbb
add
add
cld
idiv
mov
inc
add
es
imul
jge
add
test
sbb
test
add
inc
mov
push
pop
add
cs
retf
cdq
out
popf
sbb
aad
inc
and
cdq
sti
mov
cdq
les
dec
adc
shl
stos
cdq
lods
inc
xor
aam
adc
or
mov
jne
cdq
inc
jbe
xlat
mov
mov
inc
rol
dec
jp
jmp
imul
js
add
jno
cli
or
pop
mov
sti
pop
or
out
sbb
add
das
fld
xlat
clc
cmc
push
cmp
pop
out
int
fdiv
arpl
push
dec
mov
inc
mov
add
mov
jns
repnz
sub
add
inc
mov
cld
adc
daa
inc
mov
jns
pop
mov
bound
add
add
jno
mov
sub
mov
call
repz
cld
retf
add
sti
stos
test
adc
xor
call
adc
or
nop
add
dec
adc
js
ja
icebp
sub
add
jp
nop
aas
test
sbb
xor
lds
jno
hlt
out
cdq
inc
jp
push
dec
test
loopne
pop
and
cmp
jno
mov
push
dec
mov
ror
in
or
or
push
jge
add
xchg
xor
in
mov
ror
or
adc
xor
mov
mov
sti
or
mov
lea
fnstcw
xchg
out
scas
and
or
(bad)
mov
push
out
or
hlt
out
cdq
inc
data16
push
repz
cdq
inc
jp
xlat
shl
xlat
or
sbb
js
adc
or
sub
jg
xor
imul
repz
ja
jle
pop
mov
loopne
or
inc
mov
pop
xlat
inc
jl
adc
retf
jle
jle
aas
mov
jno
add
xchg
mov
(bad)
aam
call
add
ds
(bad)
int3
xchg
ret
cdq
push
(bad)
clc
mov
fadd
in
xor
xchg
pop
out
inc
jl
cmps
inc
jl
push
sti
lock
fisttp
xor
hlt
out
cdq
inc
push
clc
push
repz
pop
fsubr
fld
xlat
clc
cmc
mov
push
push
add
lds
mov
jno
and
out
std
jge
xchg
cmps
outs
mov
cld
cmp
sub
(bad)
mov
mov
std
jge
out
jbe
cdq
hlt
in
jge
xchg
(bad)
mov
ror
pop
add
xor
bound
xor
jp
out
cld
add
push
push
add
jp
add
and
jbe
cdq
mov
xchg
in
cld
cmp
add
(bad)
out
mov
movs
out
(bad)
jge
lods
fstp
out
push
jge
fwait
xchg
push
mov
cld
bswap
sub
xchg
push
call
jno
mov
(bad)
out
std
jge
out
out
adc
idiv
pop
xor
xchg
xor
add
xor
mov
mov
rol
mov
clc
xlat
imul
and
retf
out
add
lds
add
add
and
inc
or
add
aas
loope
or
jmp
aaa
adc
add
adc
cmp
add
mov
lock
jle
out
cld
push
push
add
add
or
add
repnz
jno
mov
sbb
in
cld
jl
inc
imul
inc
xor
xchg
lock
in
xor
add
jnp
add
mov
lock
jle
out
cld
push
push
add
inc
loope
or
jmp
aaa
adc
add
adc
cmp
add
mov
lock
jle
out
cld
push
push
add
mov
dec
xor
(bad)
jno
mov
sbb
ins
and
push
add
jno
hlt
jnp
fwait
mov
aad
repnz
cmp
adc
add
js
jae
adc
jge
js
jae
adc
rcl
xor
pop
add
clc
js
jno
mov
sbb
ins
adc
imul
(bad)
jge
out
jmp
xor
add
mov
imul
in
cld
jl
clc
test
jno
add
inc
(bad)
jno
mov
sbb
ins
adc
imul
(bad)
jge
out
jmp
xor
add
mov
add
sbb
repnz
jle
out
cld
push
push
add
je
add
jno
hlt
jnp
jmp
jno
mov
sbb
in
cld
jl
inc
imul
inc
xor
xchg
clc
loopne
jb
(bad)
jmp
xor
adc
sub
cli
rcr
in
repz
pop
mov
cld
aad
fadd
jno
xchg
cld
ror
in
cld
jl
inc
imul
add
cdq
mov
(bad)
mov
jno
or
mov
jmp
xor
adc
sub
cli
sar
lods
(bad)
jge
out
push
jmp
je
jno
add
lds
outs
adc
push
push
add
jno
hlt
jnp
jmp
xor
cld
aaa
(bad)
out
std
jge
pusha
inc
xor
mov
test
call
add
adc
jl
clc
dec
(bad)
jno
add
add
jno
mov
sbb
ins
adc
imul
(bad)
jge
out
jmp
xor
sbb
sbb
repz
xchg
cli
xchg
(bad)
jge
out
push
jmp
fadd
jno
add
mov
mov
add
xchg
cmp
adc
mov
movs
(bad)
jge
out
jmp
xor
add
mov
mov
test
clc
(bad)
jmp
xor
add
jnp
add
mov
lock
jle
out
cld
push
push
add
sbb
or
add
repnz
jno
mov
sbb
in
cld
jl
inc
imul
inc
xor
xchg
repnz
and
jno
and
out
(bad)
jge
stc
pop
xor
pop
jno
cld
jge
cdq
rep
sbb
call
jge
out
add
mov
(bad)
jge
xchg
sti
jge
out
jo
leave
jno
xor
or
sar
jg
cdq
lds
int3
fdivr
jg
adc
(bad)
(bad)
sub
or
adc
jecxz
cdq
sti
cmp
add
aas
out
inc
fwait
adc
jge
mov
jge
js
jae
adc
jge
clc
lods
shl
inc
gs
xchg
in
cld
add
aam
jg
nop
add
mov
cld
jge
in
jl
out
jbe
cld
xchg
add
hlt
in
cld
jl
inc
imul
push
add
cdq
fs
xor
call
in
hlt
sar
jg
cdq
lds
push
add
jno
hlt
jnp
jmp
xor
cld
aaa
(bad)
out
std
jge
je
xor
mov
test
call
add
adc
jl
clc
cmp
jno
add
clc
ret
jno
mov
sbb
ins
adc
imul
(bad)
jge
out
jmp
xor
add
mov
add
out
(bad)
jge
adc
or
mov
mov
std
jge
xchg
retf
jge
out
or
out
cld
jge
xchg
out
jge
out
mov
loopne
inc
cwde
xchg
add
clc
xchg
sti
jge
out
jmp
adc
jge
adc
cmp
add
jno
mov
ins
adc
cmp
mov
std
jge
xchg
push
xor
pop
mov
std
jge
xchg
out
jge
out
cld
mul
pop
jb
adc
jge
clc
push
inc
jge
mov
in
cld
add
adc
test
out
mov
test
cli
xchg
(bad)
jge
out
mov
add
(bad)
xchg
leave
jge
out
mov
je
cld
jg
inc
jmp
dec
adc
pmuludq
cld
jg
inc
jmp
mov
cld
add
out
(bad)
jge
movs
idiv
out
cld
imul
mov
mov
cld
or
in
cld
jl
inc
imul
push
add
cdq
cld
inc
xor
call
jmp
xor
add
jnp
add
mov
repz
jle
out
cld
push
push
add
rcl
or
add
repnz
xor
cld
aaa
(bad)
out
std
jge
rol
jno
(bad)
mov
test
call
add
adc
(bad)
in
cld
jl
clc
cwde
ret
add
rep
sbb
add
test
std
jge
xchg
add
(bad)
call
jmp
xchg
cld
add
out
std
jge
ror
imul
cld
jge
sub
shl
jle
out
cld
push
push
add
js
add
jno
hlt
jnp
jmp
xor
cld
aaa
(bad)
out
std
jge
cmp
jno
(bad)
mov
loopne
jb
(bad)
jmp
dec
adc
cmp
add
mov
repz
jle
out
cld
push
das
add
enter
enter
jno
hlt
jnp
jmp
xor
cld
aaa
(bad)
out
std
jge
enter
xchg
(bad)
mov
and
shl
jle
out
cld
push
das
add
sbb
add
mov
(bad)
jmp
dec
adc
cmp
add
mov
cmp
jno
pusha
xor
jne
inc
mov
(bad)
out
std
jge
js
jae
adc
das
add
dec
das
add
jno
hlt
jnp
jmp
xor
cld
aaa
(bad)
out
std
jge
dec
cmp
jno
(bad)
mov
test
call
add
adc
jl
clc
xor
jno
add
repz
cdq
xchg
in
cld
or
adc
sbb
ins
adc
imul
(bad)
jge
out
jmp
dec
adc
add
adc
cmp
add
mov
cmp
xor
jne
inc
mov
(bad)
out
std
jge
js
jae
adc
add
pop
loopne
or
jmp
dec
adc
add
loopne
inc
cdq
fs
xor
jne
xchg
stc
xchg
imul
in
cld
jl
clc
nop
mov
jns
pop
jb
adc
aaa
(bad)
out
std
jge
nop
cmp
mov
test
call
add
adc
(bad)
in
cld
jl
clc
pop
mov
jns
sbb
adc
aaa
(bad)
out
std
jge
pop
cmp
mov
pop
cmp
hlt
sar
jg
cdq
lds
sub
add
repnz
xor
cld
aaa
(bad)
out
std
jge
add
xor
mov
xchg
fnstsw
out
push
or
in
cld
jl
inc
imul
les
xor
xchg
cdq
movs
xor
xor
jne
xchg
stc
xchg
imul
in
cld
jl
clc
sar
jns
repz
inc
or
jmp
dec
adc
add
adc
cmp
add
mov
lock
jle
out
cld
push
sub
or
sub
add
clc
mov
jle
out
cld
aad
clc
in
shl
les
add
loopne
inc
cdq
xor
xor
xor
jne
xchg
stc
xchg
imul
in
cld
jl
clc
cmp
jno
add
(bad)
adc
aaa
(bad)
out
std
jge
cmp
xor
mov
test
call
add
adc
(bad)
in
cld
jl
clc
add
jno
add
in
shl
add
sub
or
add
repnz
jno
mov
sbb
in
cld
jl
inc
imul
aas
xor
xchg
sbb
in
shl
jle
out
cld
push
sub
xor
or
jno
add
jae
add
jno
add
jns
xor
cdq
out
(bad)
jge
loopne
jb
(bad)
cld
aaa
(bad)
out
std
jge
test
xor
bswap
in
jl
inc
push
jge
in
cld
jl
out
mov
mov
cld
push
sub
or
jmp
dec
adc
jge
in
cld
jl
clc
sar
jp
add
cdq
xchg
mov
cld
or
adc
or
cld
cld
jg
sti
ud2
and
cld
jg
cdq
vcomisd
inc
and
out
popf
sbb
xor
pop
imul
or
call
les
add
cdq
sti
stos
mov
cld
rcr
fwait
in
shl
jge
out
cld
rcr
jp
jmp
cld
jl
out
push
jmp
repz
xchg
(bad)
sahf
icebp
push
cld
cmp
cld
mov
jno
cmp
adc
sahf
push
add
jo
add
cdq
xor
jge
js
ins
xor
imul
add
call
xor
fld
out
add
sti
mov
cdq
(bad)
fnstsw
xchg
out
push
jae
add
daa
inc
mov
cmp
add
icebp
in
cld
jge
xlat
and
in
cld
jge
fwait
inc
mov
sub
(bad)
in
and
xchg
mov
cld
or
mov
jno
mov
mov
cld
add
and
or
clc
pop
mov
jns
push
xor
shr
cld
jge
call
push
push
sub
cmp
jnp
mov
cld
aaa
shr
cld
jge
and
xor
mov
popf
jnp
mov
mov
jnp
mov
jae
inc
or
mov
jge
inc
jmp
dec
adc
or
fs
jge
out
mov
mov
cld
push
sub
cmp
jae
mov
cld
aaa
jmp
in
xor
mov
popf
ja
mov
mov
jnp
mov
add
cld
jge
inc
or
xor
cld
cmp
add
sbb
xlat
imul
add
mov
mov
call
imul
jl
add
jno
jmp
dec
adc
jmp
mov
mov
push
jmp
in
shl
xor
out
sahf
out
cld
add
add
shl
add
clc
jae
add
sahf
frstor
jno
stc
jg
out
mov
call
add
(bad)
out
cld
sar
xchg
mov
mov
push
push
and
xchg
jg
out
cld
aaa
loope
cld
jge
movs
(bad)
jg
out
cld
aaa
stc
in
cld
jge
movs
fwait
jg
out
cld
aaa
shr
cld
jge
popf
xchg
mov
cld
rcr
xchg
(bad)
mov
mov
or
add
dec
add
clc
xlat
xor
adc
xor
ins
xor
mov
(bad)
out
cld
jge
clc
mov
jp
call
mov
mov
push
pmuludq
std
jge
inc
jmp
dec
adc
push
(bad)
cld
jge
xchg
xchg
out
mov
call
imul
js
add
mov
sti
or
out
cld
(bad)
jno
add
hlt
std
jge
adc
xor
pop
cdq
out
cld
jge
adc
pop
sbb
cld
jge
xlat
cmp
in
cld
jge
fs
in
xchg
jmp
mov
add
clc
xlat
mov
leave
out
cld
jge
clc
dec
ins
mov
pop
pmuludq
pop
leave
out
cld
jge
jp
call
jno
add
jno
xchg
out
cld
rcr
adc
pop
inc
adc
mov
adc
jge
mov
pushf
mov
adc
or
imul
inc
cld
xchg
(bad)
jl
out
push
push
sub
xor
adc
(bad)
jge
adc
lods
lock
fwait
jno
mov
(bad)
out
cld
jge
js
ins
xor
jmp
inc
adc
or
js
xor
add
hlt
ja
jge
adc
jge
adc
ja
sbb
jnp
jno
xor
sub
lods
xchg
jg
out
add
jnp
add
adc
cwde
inc
adc
jmp
(bad)
jl
out
push
rcr
jp
jmp
(bad)
jl
out
push
push
stos
cld
jge
aam
mov
add
and
in
cld
jge
sti
pop
add
mov
jge
adc
sbb
cld
jge
xchg
les
adc
pmuludq
mov
mov
in
hlt
je
jge
cdq
(bad)
aam
inc
aaa
xor
jge
mov
jge
clc
movs
mov
adc
inc
mov
jmp
inc
adc
or
mov
jge
dec
pop
fnstcw
cdq
out
popf
or
aam
fwait
pop
xchg
into
mov
sti
jne
cdq
inc
jb
xlat
mov
jne
cdq
inc
outs
clc
xlat
cld
idiv
lods
mov
adc
jl
gs
and
cmp
or
mov
test
or
add
mov
mov
xchg
cld
inc
adc
or
xchg
in
mov
adc
(bad)
(bad)
push
std
(bad)
mov
mov
adc
(bad)
mov
xor
adc
adc
add
mov
les
add
add
jo
xchg
inc
clc
push
out
ja
pop
sysenter
or
adc
xor
(bad)
add
mov
rol
rcr
cdq
sti
or
or
xor
mov
ja
inc
rcr
out
jbe
jle
inc
jl
push
add
jle
push
adc
jno
push
(bad)
(bad)
push
std
sysexit
push
push
(bad)
mov
mov
popf
inc
xchg
jb
jmp
inc
adc
sysenter
call
imul
push
add
jno
add
and
cmp
mov
call
push
push
and
cmp
sti
shl
clc
add
jno
push
push
and
cmp
sub
xlat
mov
mov
fnstcw
test
popf
jno
jmp
inc
adc
shl
inc
mov
jns
jle
fs
clc
sbb
add
cdq
xchg
xchg
out
cld
or
xlat
xchg
xchg
out
cld
ret
add
hlt
lods
jecxz
mov
pop
mov
cld
jge
js
ins
xor
jmp
inc
adc
or
add
jno
sti
stos
mov
(bad)
bound
adc
add
or
aaa
mov
punpckhdq
add
clc
xlat
xor
sti
arpl
lods
jecxz
mov
xor
ja
adc
pmuludq
pop
mov
cld
jge
inc
jmp
inc
adc
mov
movs
(bad)
bound
adc
add
or
aaa
mov
gs
and
cmp
sub
xlat
xor
sti
punpckhwd
and
imul
add
das
dec
retf
cdq
out
push
xor
sbb
push
aad
dec
or
sub
jb
(bad)
mov
jne
cdq
xchg
out
cld
or
adc
push
and
cmp
sub
(bad)
mov
fdivr
ret
add
sbb
mov
jmp
repnz
jmp
add
jno
add
repz
cdq
xchg
out
cld
or
loopne
jge
cdq
(bad)
loope
cmp
add
out
push
push
and
xor
or
and
or
add
repnz
xor
mov
jno
cld
jge
clc
mov
inc
jns
mov
xchg
out
pop
mov
mov
aaa
xor
xor
jne
xchg
stc
xchg
jmp
inc
adc
cmp
adc
sub
cli
sar
lods
add
out
push
jmp
add
out
push
push
and
xor
adc
and
or
add
repnz
xor
mov
jno
cld
jge
clc
dec
mov
adc
jae
adc
jge
clc
xor
jno
add
repz
cdq
lds
and
or
add
repnz
xor
mov
jno
cld
jge
clc
or
jns
les
jno
add
xchg
cmp
sub
and
or
add
and
cld
aad
dec
in
shl
adc
xor
mov
jmp
add
out
push
jmp
add
out
push
push
and
xor
pop
add
clc
pusha
mov
adc
sbb
ins
pop
jmp
add
out
push
push
and
xor
or
jnp
inc
cmp
add
out
push
push
and
xor
or
mov
sub
jno
mov
sbb
ins
pop
jmp
add
out
push
push
and
xor
or
jb
inc
cmp
add
out
push
push
and
xor
or
and
or
add
repnz
jno
mov
sbb
adc
jge
inc
imul
push
add
int3
adc
jge
inc
jmp
inc
adc
add
push
add
hlt
adc
jge
inc
jmp
inc
adc
add
adc
jne
cdq
xchg
out
cld
or
adc
sbb
ins
pop
jmp
add
out
push
push
and
xor
or
cmp
inc
cmp
add
out
push
push
and
xor
or
and
or
add
repnz
xor
mov
jno
cld
jge
clc
ins
mov
adc
jb
adc
jge
clc
pop
mov
adc
stos
sbb
add
repnz
xor
mov
jno
cld
jge
clc
sub
jno
add
jbe
cld
xchg
add
out
push
jmp
add
out
push
push
and
xor
adc
and
or
add
repnz
xor
mov
jno
cld
jge
clc
call
inc
jns
add
adc
jge
clc
aam
jno
add
repz
cdq
lds
and
or
add
repnz
xor
mov
jno
cld
jge
clc
test
jno
add
fs
adc
sbb
xlat
adc
int3
adc
jge
inc
imul
jecxz
mov
aam
adc
add
adc
cmp
add
mov
lock
adc
xor
clc
loopne
fs
xchg
out
mov
mov
in
shl
adc
xor
cdq
loopne
xor
xor
jne
xchg
stc
xchg
imul
adc
jge
inc
jmp
inc
adc
add
adc
cmp
add
mov
xor
jno
call
lock
jge
js
ins
xor
mov
jno
cld
jge
clc
lods
mov
adc
ins
xor
mov
jno
cld
jge
clc
mov
inc
jns
add
jno
add
jno
add
jno
add
and
cmp
(bad)
iret
cld
jge
inc
pop
jno
cld
jge
clc
mov
cmp
sti
pop
mov
push
sar
lods
add
out
push
jge
in
fdivr
clc
xchg
scas
jno
cld
aaa
(bad)
iret
cld
jge
and
xor
xchg
hlt
fs
xchg
jecxz
mov
mov
inc
imul
vcomisd
inc
and
out
popf
xchg
pop
xor
aad
and
pusha
das
test
stos
jno
hlt
gs
xchg
xchg
out
mov
mov
jg
out
add
mov
sti
or
sbb
xor
or
and
test
jge
xchg
in
sbb
or
nop
clc
jge
cdq
les
cmp
and
int3
lods
jno
jmp
sub
or
js
push
adc
nop
pop
adc
or
mov
jge
jp
call
mov
cld
rcr
js
xor
pop
vpaddb
js
ins
xor
imul
push
add
jae
add
cdq
xlat
out
mov
or
enter
sbb
xor
jle
out
cld
sar
xchg
mov
mov
push
push
cmp
cmp
add
xlat
cld
aaa
shr
cld
jge
popf
xchg
mov
cld
rcr
xchg
(bad)
mov
or
or
add
jno
xchg
out
cld
rcr
popf
xchg
mov
cld
sar
xchg
(bad)
jl
out
push
push
aas
add
mov
cld
or
jp
call
(bad)
out
cld
rcr
xchg
(bad)
sahf
clc
call
les
leave
out
cld
jge
adc
xor
add
jmp
fs
in
xchg
jmp
mov
add
jno
mov
leave
out
cld
jge
clc
push
addr16
pop
pmuludq
pop
leave
out
cld
jge
jp
call
jno
add
jno
xchg
out
cld
rcr
adc
sbb
add
jo
add
mov
pop
test
adc
or
imul
inc
cld
xchg
(bad)
jl
out
push
push
add
hlt
outs
clc
jge
adc
lods
lock
stos
jno
mov
(bad)
out
cld
jge
js
ins
xor
jmp
pop
adc
or
js
xor
add
hlt
outs
clc
jge
adc
jge
adc
or
adc
sbb
repz
test
adc
inc
sbb
xor
adc
clc
pusha
test
sbb
shl
adc
sbb
mov
xor
push
jno
add
hlt
pushf
clc
jge
inc
push
push
out
jge
aam
mov
adc
call
mov
cld
pmuludq
push
sahf
pop
or
mov
cld
ror
out
jmp
movs
out
cld
or
adc
jge
test
jge
clc
fsubr
lahf
push
add
cmp
and
or
push
push
cmp
pop
mov
inc
cdq
test
xor
push
mov
cld
add
adc
ror
out
jmp
cmps
out
cld
add
xchg
lahf
jg
out
sub
push
jge
test
jge
clc
lods
push
mov
add
(bad)
retf
add
cdq
mov
xor
push
mov
cld
xor
add
popf
xchg
mov
cld
rcr
cdq
sti
or
mov
mov
cld
push
cmp
or
jmp
pop
adc
or
mov
jge
sti
add
or
rol
and
add
fwait
pop
mov
push
ins
jno
xchg
in
ret
add
cdq
hlt
sub
mov
push
cmp
cmp
sti
(bad)
adc
rcr
push
jmp
pop
adc
or
adc
shl
clc
lods
movs
jno
push
push
cmp
or
add
cdq
mov
jno
jmp
push
adc
sysenter
in
push
call
adc
call
aam
add
jl
add
cdq
inc
jbe
xlat
imul
adc
push
aaa
add
jno
mov
call
(bad)
(bad)
dec
retf
cdq
out
jno
add
jno
push
cmp
lock
mov
jno
imul
clc
(bad)
or
xor
pop
mov
call
or
jno
xchg
daa
clc
jo
jno
imul
mov
outs
fucomip
cld
add
adc
div
repz
(bad)
call
pop
adc
or
fld
xlat
clc
cmc
sub
mov
or
call
inc
jl
adc
jmp
or
xor
push
jmp
in
rcr
popf
inc
ins
and
jmp
xor
adc
xor
add
mov
push
jmp
in
rcr
xchg
(bad)
call
imul
adc
jge
cmp
ret
jno
sub
add
adc
inc
jl
cmps
inc
jl
call
retf
cdq
out
and
cmp
clc
call
imul
sbb
imul
jno
add
jno
add
stos
jno
mov
les
daa
jp
jge
xchg
mov
jno
sbb
jno
imul
jno
or
jno
mov
call
push
call
rcl
mov
add
inc
out
ss
ficom
push
cmp
sbb
push
call
aam
add
cmp
cmp
add
xlat
imul
jno
shr
jp
jge
xor
jno
imul
jno
mov
and
xor
fs
jno
nop
stos
jno
sub
add
inc
out
ss
push
add
cmp
sbb
push
call
fcom
push
cmp
cmp
hlt
gs
push
dec
mov
add
sbb
cld
mov
mov
sub
sbb
cld
mov
mov
sub
jno
hlt
gs
push
sti
or
inc
mov
inc
mov
or
jp
jge
clc
scas
ret
jno
shl
push
add
movs
cdq
inc
sbb
cld
mov
mov
and
jno
(bad)
jge
nop
mov
jno
pushf
movs
jno
mov
jmp
cld
mov
mov
and
jno
sti
jne
cdq
inc
jle
xlat
imul
adc
lock
adc
and
inc
sbb
mov
jno
(bad)
jge
cmp
ret
jno
movs
jno
imul
adc
int3
push
adc
and
inc
sbb
mov
jno
(bad)
jge
or
ret
inc
movs
jno
imul
adc
test
adc
and
mov
mov
jno
(bad)
jge
cmp
jno
sub
add
push
mov
and
jno
das
sub
adc
clc
push
add
(bad)
out
mov
test
add
cmc
mov
and
sub
clc
push
add
(bad)
out
ss
rcl
mov
call
pop
dec
mov
mov
cld
pop
aam
scas
sub
jp
call
out
shl
mov
cdq
(bad)
std
inc
and
imul
mov
sub
pop
or
sbb
push
push
add
jno
mov
add
sbb
cld
mov
mov
push
or
sub
test
(bad)
mov
inc
jb
jp
call
icebp
inc
imul
add
cwde
std
inc
sbb
add
jno
mov
call
ficom
call
cli
push
sti
test
adc
add
xor
jmp
out
shl
push
add
jno
sti
jne
cdq
inc
outs
clc
xlat
imul
mov
imul
adc
or
sub
adc
or
adc
xchg
std
inc
sbb
jmp
push
adc
and
mov
imul
sbb
imul
jno
add
jns
pop
push
add
daa
jp
jge
adc
ret
jno
int3
cmps
jno
imul
mov
imul
pop
js
xor
neg
inc
sbb
jmp
push
adc
and
(bad)
clc
mov
adc
mov
imul
sbb
add
pop
js
xor
mov
xchg
std
inc
sbb
jmp
push
adc
and
mov
cld
mov
mov
cld
mov
mov
imul
add
rcl
add
jno
push
jmp
out
shl
push
xor
lods
ret
jno
add
and
ret
jno
add
push
mov
jno
adc
or
add
jno
sub
jno
add
sbb
loope
xor
imul
xor
imul
mov
imul
jno
add
gs
xor
imul
add
cld
cld
inc
sbb
jmp
push
adc
and
xlat
sub
jno
imul
push
add
jno
inc
xor
push
xor
sbb
out
shl
jmp
jmp
xor
jmp
push
adc
call
ficom
call
rcl
pop
adc
sbb
imul
adc
call
icebp
inc
imul
add
cld
cld
inc
sbb
jmp
push
adc
and
mov
cld
mov
mov
cld
mov
mov
add
fist
add
jno
add
adc
cld
cld
inc
sbb
jmp
push
adc
and
inc
or
xor
jno
in
xor
mov
adc
jge
jp
jge
and
ret
jno
add
push
mov
jno
adc
dec
js
xor
jmp
add
sbb
shl
outs
xor
imul
xor
sub
add
inc
mov
cld
mov
mov
imul
adc
jmp
add
jno
imul
push
add
xchg
std
inc
sbb
jmp
push
adc
and
adc
mov
mov
cld
mov
mov
imul
jno
rol
adc
cmp
inc
sbb
out
shl
push
xor
adc
stos
ret
jno
add
and
ret
jno
add
push
mov
jno
adc
mov
add
jno
addr16
out
shl
outs
xor
imul
xor
mov
call
cld
mov
mov
cld
mov
mov
imul
jno
mov
xor
jmp
out
shl
push
xor
adc
mov
jno
add
and
ret
jno
add
jo
shl
jmp
add
jno
adc
int3
repnz
outs
xor
imul
xor
adc
mov
jno
add
and
ret
jno
add
jo
shl
jmp
add
jno
adc
xor
xor
imul
xor
adc
cmps
ret
sti
stos
mov
ss
push
add
jno
ss
push
add
imul
sbb
imul
loope
sbb
out
shl
xor
les
add
pop
mov
cld
mov
mov
cld
mov
mov
imul
jno
pop
jmp
repnz
outs
xor
imul
xor
adc
lods
ret
jno
add
and
ret
jno
add
push
mov
jno
adc
jmp
xor
jmp
call
outs
xor
imul
xor
jmp
mov
cld
cmp
mov
xchg
cdq
les
jmp
retf
cdq
out
popf
or
into
(bad)
push
cmp
dec
adc
jmp
or
out
jge
(bad)
imul
add
cdq
sti
cmc
jge
xchg
(bad)
xchg
rcr
lods
ret
jno
sti
stos
mov
ss
push
add
xor
cmp
hlt
gs
push
out
or
inc
jmp
push
adc
call
ficom
call
lea
inc
jbe
fwait
inc
jp
push
repz
adc
sbb
add
and
jae
adc
pushf
push
add
jno
add
jno
inc
xor
adc
mov
imul
adc
add
call
sbb
jmp
push
adc
and
inc
cmp
sub
xlat
imul
mov
imul
call
jmp
and
call
icebp
inc
imul
add
xchg
std
inc
sbb
jmp
push
adc
and
mov
imul
sbb
imul
jno
add
jns
pop
push
xor
cmp
imul
jno
dec
mov
mov
imul
sbb
sbb
xor
inc
sbb
out
shl
push
xor
adc
scas
ret
jno
sti
or
inc
sbb
imul
adc
jge
clc
scas
ret
jno
clc
popf
jno
imul
push
add
jno
inc
xor
mov
mov
sbb
jno
ds
push
add
sbb
imul
adc
jge
clc
scas
ret
jno
les
sbb
imul
fcom
push
lsl
inc
mov
cld
mov
mov
add
gs
jmp
repnz
outs
xor
imul
xor
mov
jne
cdq
inc
push
xlat
imul
mov
imul
jp
jmp
add
and
jae
adc
popf
push
add
jno
pop
popf
jno
mov
push
in
jge
adc
mov
mov
cld
mov
mov
imul
adc
call
jno
imul
cld
inc
sbb
out
shl
push
lsl
jno
hlt
js
adc
call
ficom
call
rcl
popa
jp
jmp
add
jno
imul
push
add
xchg
std
inc
sbb
jmp
outs
adc
and
inc
sbb
cld
mov
mov
cld
mov
mov
imul
add
rcl
add
jno
push
jmp
out
shl
push
push
add
jno
les
adc
call
ficom
call
rcl
popa
jp
jmp
add
jno
imul
inc
sbb
jmp
outs
adc
and
mov
cld
mov
mov
cld
mov
mov
imul
add
xchg
adc
sbb
imul
sti
inc
sbb
out
shl
push
push
add
jno
add
and
ret
jno
add
push
mov
jno
adc
mov
add
jno
sbb
rcr
dec
call
outs
xor
imul
xor
imul
mov
imul
gs
xor
imul
push
add
js
inc
sbb
add
jno
mov
or
jp
jge
and
ret
jno
add
jo
shl
call
gs
xor
imul
add
js
inc
sbb
add
jno
mov
call
ficom
call
rcl
imul
jmp
repnz
outs
xor
imul
or
lods
ret
jno
add
and
ret
jno
add
push
mov
jno
adc
jmp
xor
jmp
call
outs
xor
imul
xor
jmp
sub
or
clc
movs
jbe
out
pop
fdivr
xchg
out
xchg
and
cmp
lock
sbb
add
jno
add
jno
add
mov
push
or
cmp
cmp
push
jno
add
jno
jmp
push
xchg
hlt
pop
inc
adc
aam
adc
xor
jle
xlat
inc
jbe
adc
xor
mov
mov
inc
cld
mul
cmp
xor
imul
mov
jge
aam
mov
sbb
cld
test
push
add
sbb
idiv
cmp
add
inc
jp
shl
sbb
xchg
push
sti
ror
aam
sbb
add
mov
add
sti
mov
cdq
(bad)
(bad)
dec
retf
cdq
out
popf
adc
xor
cmp
dec
int
leave
call
hlt
in
std
jge
cdq
lds
mov
adc
xor
mov
jno
cld
jge
clc
mov
mov
jle
add
mov
ins
cld
add
add
adc
jge
inc
jmp
imul
add
pusha
js
inc
xor
mov
jno
cld
jge
clc
pusha
call
mov
cld
add
add
hlt
adc
jge
inc
jmp
imul
pop
mul
push
inc
xor
mov
jno
cld
jge
clc
sub
jno
cmp
adc
rol
popf
xchg
cdq
or
xor
sbb
adc
add
add
inc
xor
mov
jno
cld
jge
clc
clc
xchg
jno
cmp
pop
jbe
sbb
ret
popf
xchg
cdq
hlt
adc
jno
jle
jns
adc
mov
inc
cmp
add
out
push
push
pop
add
add
imul
push
add
hlt
adc
jge
inc
jmp
data16
add
nop
jle
jnp
adc
adc
cmp
add
out
push
push
pop
add
add
imul
adc
jge
inc
jmp
data16
add
maskmovq
mul
xor
adc
jge
clc
push
je
sbb
cld
pop
imul
push
add
hlt
adc
jge
inc
jmp
data16
add
or
inc
xor
mov
jno
cld
jge
clc
xor
jno
imul
and
inc
cmp
add
out
push
jmp
out
mov
imul
push
add
xor
(bad)
jge
js
movs
js
jmp
push
add
mov
mov
loopne
inc
cwde
and
jge
dec
pop
dec
mov
add
clc
cmc
push
shl
inc
push
or
mov
cmp
add
mov
hlt
std
cmp
fcomp
xor
test
push
jle
inc
jmp
lahf
out
cld
add
push
imul
push
xor
sub
pop
dec
mov
add
clc
cmc
sub
add
out
and
hlt
fs
xchg
out
mov
mov
add
(bad)
imul
add
hlt
std
hlt
jge
inc
jmp
adc
push
or
or
add
stc
test
jp
out
cmp
call
adc
push
rol
cld
xchg
out
jne
out
push
push
push
add
clc
(bad)
cmp
call
adc
xor
inc
cmp
out
jne
out
push
push
push
add
mov
add
pusha
js
inc
xor
mov
pushf
out
jge
clc
hlt
xchg
jno
cmp
call
adc
or
xchg
out
jne
out
push
push
add
and
hlt
lock
jge
cdq
lds
int3
jecxz
jge
adc
rol
popf
xchg
out
cld
rcr
nop
mov
test
imul
std
hlt
jge
inc
jmp
adc
add
jecxz
jge
pop
jbe
sbb
rol
popf
xchg
out
cld
rcr
cdq
rep
sbb
jbe
sbb
shl
outs
xchg
cld
rcr
nop
mov
mov
imul
push
add
hlt
std
hlt
jge
inc
jmp
adc
add
jecxz
jge
sbb
sbb
xchg
out
cld
rcr
cdq
repz
sti
jge
sbb
sbb
rol
popf
xchg
out
cld
rcr
nop
mov
mov
imul
std
hlt
jge
inc
jmp
adc
add
jecxz
jge
sbb
mov
xchg
cld
rcr
nop
mov
mov
imul
add
hlt
std
hlt
jge
inc
jmp
adc
jmp
out
jne
out
push
push
cld
cld
jge
(bad)
pop
(bad)
jno
imul
push
add
jnp
inc
sbb
(bad)
xchg
clc
xchg
jmp
mov
cmp
call
pop
add
clc
hlt
jge
adc
cwde
aaa
add
sbb
mov
jno
lds
and
or
js
xor
adc
loopne
out
cld
add
call
or
mov
add
jno
mov
cmp
xor
aas
(bad)
in
cld
jge
pop
xchg
int3
out
(bad)
jge
sub
pop
adc
xor
add
and
xchg
out
cld
rcr
sub
xchg
out
cld
rcr
xchg
(bad)
mov
lods
sti
jp
out
add
pop
clc
jl
jno
mov
sar
shl
push
mov
sub
rcr
push
cmp
mov
cld
jge
xchg
cmp
jno
cmp
gs
loope
inc
sbb
call
jle
out
cld
rcr
xchg
in
fnsave
add
loope
inc
sbb
call
jle
out
cld
rcr
xchg
(bad)
call
add
hlt
in
sti
jge
inc
jmp
adc
add
popf
xchg
out
cld
rcr
or
shl
jle
out
cld
rcr
js
imul
call
adc
jno
add
xchg
out
cld
rcr
popf
xchg
out
cld
add
in
sti
jge
inc
imul
in
sti
jge
inc
jmp
data16
add
xchg
(bad)
jp
out
push
push
add
cmp
hlt
fs
xchg
fbstp
out
mov
imul
add
hlt
in
(bad)
jge
inc
jmp
jmp
cld
add
xchg
push
xor
pop
(bad)
in
cld
jge
rol
rcr
dec
mov
mov
cld
jge
out
mov
cmp
test
call
xchg
xor
adc
fwait
push
add
hlt
in
sti
jge
inc
jmp
data16
add
push
add
hlt
in
std
jge
inc
jmp
arpl
add
hlt
in
std
jge
inc
jmp
adc
or
int3
hlt
jge
sti
and
jge
nop
mov
jge
adc
hlt
int3
hlt
jge
(bad)
xchg
jno
or
cld
int3
hlt
jge
xchg
mov
add
loopne
inc
mov
mov
(bad)
out
cld
jge
js
push
(bad)
out
cld
jge
clc
enter
add
xchg
out
cld
rcr
cdq
xchg
out
cld
bswap
in
std
jge
inc
jmp
bound
add
int3
enter
popf
jg
popa
inc
imul
jno
xchg
out
cld
pmuludq
sti
jge
inc
cld
aaa
test
cld
jge
fcom
xor
stos
sbb
jmp
bound
add
int3
in
std
jge
inc
mov
test
cld
jge
ins
add
es
pushf
xchg
jno
mov
mov
cld
jge
jp
jge
in
jge
js
div
adc
sbb
jmp
bound
add
cdq
xor
xor
jle
out
cld
shl
out
mov
mov
cld
push
fdivr
jge
aam
or
xor
jge
out
mov
mov
cld
push
add
cmp
sub
(bad)
imul
or
push
add
lds
out
pop
fsubr
fld
xchg
mov
je
xor
xchg
jno
push
aam
stos
fdivp
pop
push
mov
enter
jecxz
shl
imul
push
add
jno
add
arpl
add
hlt
mov
jge
sbb
mul
jmp
pusha
adc
call
jno
pop
add
fwait
inc
mov
and
ret
jno
push
rcr
push
add
jno
add
test
js
das
xor
jmp
pusha
adc
jmp
mov
jno
ins
xchg
jno
jmp
pusha
adc
rcr
cdq
fild
jne
add
mov
push
jge
sbb
cwde
pusha
adc
call
xor
mov
sar
jge
clc
jno
mov
add
cld
jge
adc
pop
adc
xor
jnp
xor
or
push
push
cli
mov
add
xor
add
cld
jge
shr
fs
cmp
cdq
ret
sar
test
cdq
rcr
clc
xlat
add
stc
or
mov
jge
(bad)
xchg
call
(bad)
(bad)
lods
mov
mov
mov
sar
shl
push
mov
sub
rcr
xchg
(bad)
loop
push
dec
mov
jge
nop
xchg
sti
xchg
mov
mov
aas
mov
rol
pop
fdivrp
cld
jge
clc
ins
xchg
jno
mov
rol
idiv
xchg
pushf
out
cld
mov
xchg
lods
outs
mov
xor
xor
and
sbb
xlat
push
sar
cld
jge
clc
dec
xchg
jno
imul
hlt
mov
jmp
popa
adc
pmuludq
jmp
mov
cld
pmuludq
jmp
mov
cld
add
push
add
sar
cld
jge
clc
inc
xchg
jno
mov
enter
adc
lock
add
test
js
push
rcl
mov
push
lods
ret
jno
fcom
adc
cld
jge
and
mov
jno
mov
imul
stos
jmp
xor
adc
fwait
push
add
add
adc
lahf
out
cld
cmove
shl
xor
in
test
fnsave
hlt
popa
clc
xchg
mov
mov
mov
mov
xchg
xor
adc
fwait
push
add
push
mov
sbb
mov
cmove
xor
in
xchg
call
jmp
mov
jno
int
xor
imul
add
xor
inc
bswap
scas
out
jge
popf
ss
cdq
push
add
js
add
inc
adc
jne
cdq
xchg
pushf
out
cld
or
jp
call
jno
add
sbb
lods
ret
jno
mov
jno
mov
lds
add
jae
add
jno
jmp
jle
add
test
lea
mov
leave
inc
mov
(bad)
(bad)
cld
jge
clc
push
pinsrw
jge
fdivr
ret
add
cld
gs
aaa
sahf
out
cld
aad
gs
test
add
leave
inc
imul
cdq
lock
jno
lock
adc
add
test
lea
mov
leave
inc
mov
(bad)
(bad)
cld
jge
clc
mov
(bad)
(bad)
cld
jge
fdivr
ret
add
cld
gs
aaa
sahf
out
cld
aad
gs
in
pop
add
leave
inc
imul
cdq
cwde
or
jno
jbe
cdq
xor
xor
test
adc
popa
clc
xchg
scas
outs
mov
mov
(bad)
cld
jge
ror
cmp
jecxz
inc
mov
iret
pcmpeqb
inc
inc
clc
enter
shr
push
adc
call
jno
mov
movs
js
std
jno
imul
mov
fild
test
jp
push
add
cmp
fild
lods
add
mov
add
and
add
fadd
xor
(bad)
int
jmp
jle
add
jno
ss
push
add
jno
add
jno
add
jno
add
jno
leave
sbb
out
shl
outs
xor
imul
xor
imul
push
add
jno
add
push
add
shr
add
adc
mov
add
imul
push
add
sbb
jmp
mov
hlt
mov
(bad)
movs
sbb
sbb
push
jge
mov
xchg
lahf
out
cld
xchg
add
cmp
cmp
scas
ins
mov
push
jmp
jmp
inc
xor
imul
cmp
repnz
mov
pusha
mov
xlat
out
cld
or
popf
xchg
lahf
out
cld
rcr
adc
sbb
ret
add
jno
sub
sbb
cmp
stos
ins
mov
push
call
iret
gs
sbb
imul
jge
add
jno
test
xor
jmp
jg
add
popf
inc
and
aam
jno
add
add
cdq
les
call
xor
push
push
push
add
cs
pop
dec
mov
add
clc
cmc
sub
add
dec
ins
lock
xlat
sbb
jno
mov
jge
sti
xchg
jle
call
call
add
jno
ds
jo
add
jno
adc
dec
add
xor
xor
dec
adc
cmp
xor
and
dec
jl
shl
push
stos
adc
sbb
out
shl
out
mov
add
repz
jge
xchg
out
jg
out
add
add
jno
jmp
xchg
out
cld
add
in
cld
jge
call
mov
test
out
mov
mov
cld
push
sbb
or
cli
adc
cmp
retf
jg
out
push
jge
push
mov
jno
adc
add
in
cld
jge
xchg
fstp
out
sub
xchg
push
mov
cld
test
mov
shl
outs
fwait
xchg
out
cld
test
mov
xlat
jg
out
sub
mov
shl
adc
jge
xchg
fistp
out
push
or
lock
jge
cmp
rcr
adc
mov
jmp
jl
add
mov
in
hlt
aam
jge
cdq
les
dec
js
shl
push
mov
add
jno
outs
inc
xor
sub
add
xor
add
dec
fs
and
mov
add
shl
mov
adc
movs
xchg
out
cld
(bad)
call
jmp
and
or
adc
(bad)
jns
xchg
jbe
add
jno
sbb
jbe
add
xor
add
cld
jge
xlat
mov
mov
dec
pop
add
fs
add
jno
sti
jne
cdq
xchg
out
cld
or
xchg
sti
jl
out
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
add
mov
cmp
jle
rol
adc
sbb
cmp
sti
jl
out
cmp
add
mov
cmp
add
imul
add
jge
add
inc
jge
add
mov
cld
or
add
jno
and
in
cld
jge
xchg
cmps
pop
mov
cld
cmp
add
xlat
mov
test
clc
cwde
mov
mov
xchg
in
cld
jge
dec
add
mov
adc
jmp
add
out
push
jge
clc
scas
ret
jno
cld
mov
cmp
out
cld
jge
gs
jno
add
es
inc
sbb
jmp
jp
add
clc
scas
ret
jno
adc
jno
jmp
inc
bound
mov
cld
or
in
jge
(bad)
xchg
cld
xor
ja
xor
add
jno
cld
xor
pop
jo
cld
jge
out
ss
rcl
call
popf
add
out
or
cmp
call
add
mul
inc
cmp
add
out
push
push
cmp
repnz
mov
add
imul
jno
fmul
cmc
mov
or
jno
mov
jne
cdq
xchg
out
cld
or
out
cld
sar
xchg
idiv
out
push
jmp
idiv
out
push
push
sbb
xor
adc
mov
add
mov
push
jge
or
ret
cld
mov
cmp
out
cld
jge
gs
jno
add
arpl
inc
sbb
jmp
jnp
add
or
ret
adc
jno
jmp
adc
jge
xchg
retf
jge
nop
aas
xor
add
adc
sbb
jmp
sbb
or
jmp
js
add
adc
xor
add
pop
mov
jno
cld
jge
xchg
push
or
pop
mov
jno
add
call
je
adc
jge
or
ret
mov
pop
jne
add
hlt
adc
jge
adc
jge
add
clc
call
mov
jo
cld
jge
popf
xchg
out
cld
rcr
and
shl
ja
out
cld
rcr
xchg
(bad)
xchg
sbb
add
mov
cld
ror
adc
nop
js
add
int3
adc
jge
adc
sbb
imul
or
add
xor
jmp
js
add
adc
cmp
hlt
gs
xchg
out
mov
mov
xchg
add
out
push
pmuludq
(bad)
jge
inc
imul
in
jge
inc
jmp
jp
add
mov
imul
add
hlt
adc
jge
inc
cld
mov
mov
or
mov
cld
add
sbb
imul
push
add
jno
or
jno
cld
mov
mov
or
jno
mov
call
add
out
push
pmuludq
(bad)
jge
inc
imul
add
hlt
in
jge
inc
jmp
jnp
add
mov
imul
add
hlt
adc
jge
inc
cld
mov
mov
or
mov
cld
add
sbb
imul
push
add
jno
movs
mov
cld
mov
mov
or
jno
mov
jo
cld
jge
fdivr
ret
add
jb
and
jno
add
inc
stc
inc
sbb
jmp
jns
add
cmp
jno
jmp
out
std
jge
adc
mov
(bad)
out
cld
or
adc
aas
mov
adc
mov
sbb
imul
clc
xor
pop
mov
add
jno
rol
out
cld
jge
call
jb
mov
or
out
cld
sar
xchg
idiv
out
push
jmp
idiv
out
push
push
sbb
xor
adc
mov
add
mov
push
jge
xor
jno
cmp
out
cld
jge
gs
jno
add
fs
inc
sbb
jmp
jbe
add
xor
jno
jmp
out
std
jge
adc
mov
(bad)
out
cld
or
adc
aas
mov
adc
mov
sbb
imul
add
jno
js
jno
cld
mov
mov
add
jno
or
(bad)
out
cld
jge
popf
mov
mov
adc
test
shl
lock
jno
mov
jo
cld
jge
popf
xchg
out
cld
rcr
and
shl
ja
out
cld
rcr
xchg
(bad)
xchg
sbb
imul
jno
inc
jmp
push
xor
jbe
out
cld
or
lock
jge
fwait
xchg
out
cld
or
jp
jge
in
jge
clc
mov
jno
cmp
gs
(bad)
and
jge
nop
aas
xor
or
loopne
jge
inc
push
jmp
idiv
jmp
je
add
jno
xchg
out
cld
rcr
adc
adc
(bad)
in
jge
clc
int3
xchg
mov
test
cld
jge
fdivr
ret
add
cld
test
jg
out
push
sar
(bad)
idiv
out
push
jge
in
jge
clc
mov
cmp
repz
out
push
call
xor
cld
aaa
test
cld
jge
cwde
push
xor
gs
adc
jge
in
jge
clc
sbb
xor
fadd
call
jno
add
jno
add
sbb
mov
xchg
mov
test
cld
jge
jmp
sbb
imul
jne
add
jl
mov
jno
retf
jge
nop
aas
xor
or
loopne
jge
inc
push
jmp
idiv
jmp
je
add
jno
xchg
out
cld
rcr
adc
cdq
push
add
in
jge
clc
in
xchg
mov
call
idiv
jmp
jb
add
pusha
mov
jno
les
jne
pop
jmp
jmp
inc
xor
imul
cdq
cld
jge
aam
call
ficom
push
adc
hlt
gs
xchg
fistp
out
mov
add
mul
jbe
mov
jge
sbb
je
adc
(bad)
dec
retf
adc
xchg
xchg
out
mov
inc
push
or
mov
or
in
mov
push
movsx
add
jno
mov
call
adc
jno
cmp
add
cld
mov
mov
pop
xor
stos
mov
scas
ret
jno
or
nop
mov
jno
mov
icebp
mov
cld
mov
mov
pop
xor
scas
ficom
idiv
ss
aam
add
adc
cmp
sub
xlat
cmp
add
cld
mov
mov
pop
xor
stos
ficom
idiv
mov
dec
adc
or
xor
or
mov
and
jbe
icebp
sub
add
jp
ss
push
add
adc
or
sub
icebp
sub
add
(bad)
out
ss
rcl
mov
add
pop
call
cmp
add
mov
clc
call
cmp
add
mov
dec
and
jbe
cli
or
mov
call
pop
daa
xor
jbe
cli
or
cmp
add
mov
dec
and
jbe
cli
or
cmp
add
mov
js
ja
mov
jge
add
idiv
push
push
adc
sbb
mov
dec
pop
dec
mov
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
and
cmp
adc
or
xor
clc
call
push
xor
mov
push
dec
mov
call
mov
ss
mov
xchg
call
add
jle
add
mov
push
add
adc
inc
jno
add
jo
imul
mov
sub
add
jno
pop
cmps
dec
adc
xor
stos
mov
pop
cmps
mov
add
jns
ret
cmp
jmp
mov
mov
push
adc
es
aam
xor
adc
xor
ret
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jb
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
add
jne
add
loope
.byte
.byte
.byte
