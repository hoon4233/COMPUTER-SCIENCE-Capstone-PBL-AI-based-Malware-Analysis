(bad)
sti
(bad)
call
in
xor
sub
cmp
je
push
xchg
pop
cld
(bad)
(bad)
(bad)
in
fst
daa
mov
adc
pop
cmp
sbb
add
lea
pop
cmp
push
mov
push
cmp
adc
mov
pop
ret
int3
inc
fdivrp
dec
fstp
ret
jne
sbb
pop
and
mov
xor
cmp
cmp
mov
sub
add
shl
mov
push
dec
add
dec
add
push
mov
ret
push
mov
outs
jg
fistp
dec
pop
push
or
lahf
std
add
jge
push
push
push
mov
cld
pop
pop
ret
aas
and
push
jmp
sbb
mov
push
cmp
call
jl
sub
mov
call
or
pop
push
mov
or
or
push
push
push
mov
es
pop
mov
stc
mov
pusha
adc
jbe
sbb
add
call
ins
mov
jge
cmp
mov
jne
jmp
xchg
xchg
xchg
jmp
adc
jle
push
repz
dec
mov
jle
lea
cmp
mov
test
iret
inc
ret
adc
add
mov
repz
add
sti
mov
push
fadd
ins
mov
mov
fcomp
mov
test
sti
mov
repnz
pusha
mov
adc
mov
and
xchg
movq
call
push
push
js
or
xor
clc
push
push
pusha
push
mov
clc
or
fcomp
adc
adc
pop
or
ja
mov
xor
jg
loope
std
jns
jp
lahf
xchg
add
test
push
push
pop
iret
mov
xor
sbb
aas
ds
cmps
add
or
add
push
lea
in
mov
stos
dec
or
fsub
add
aas
mov
cmp
adc
js
add
mov
dec
and
pop
adc
jmp
and
cmp
in
inc
aaa
(bad)
outs
push
push
xchg
mov
movs
or
scas
repnz
outs
add
imul
dec
sbb
or
dec
push
jmp
lods
shl
dec
mov
jg
inc
sub
leave
sbb
mov
nop
rol
jo
jle
std
push
(bad)
enter
push
and
mov
mov
jl
cmp
mov
lea
ret
mov
adc
ja
and
pushf
mov
push
xlat
xchg
jbe
cmp
mov
sbb
repz
jle
adc
test
cld
test
jb
test
(bad)
loop
mov
inc
cld
push
mov
fcom
imul
test
lea
dec
arpl
pop
pop
mov
mov
sbb
je
inc
(bad)
and
in
dec
int3
push
gs
push
(bad)
mov
add
popa
xchg
sbb
push
dec
push
inc
clc
shl
add
fsubr
in
dec
(bad)
data16
mov
mov
dec
ror
repz
rcr
sti
in
mov
clc
lea
pop
aam
jg
rol
shl
add
js
mov
std
inc
call
push
add
jg
mov
add
mov
or
cmp
je
mov
jge
in
ret
ds
add
inc
and
jg
repnz
test
je
dec
data16
out
push
cld
test
jne
mov
mov
or
popf
adc
loopne
or
dec
cld
shl
add
mov
cmp
dec
mov
cld
sbb
sub
mov
sub
arpl
sub
cmp
fs
mov
pop
sbb
push
add
loopne
mov
ds
mov
sub
mov
call
fld
xchg
cmps
lea
mov
fdiv
stos
je
add
mov
xchg
push
scas
in
mov
dec
pop
mov
aad
test
frstor
cmp
sbb
pop
aam
sbb
lea
lea
cld
inc
pushf
mov
scas
dec
(bad)
mov
data16
inc
stos
add
mov
imul
cld
cmp
test
repz
mov
sahf
add
(bad)
enter
sti
mov
mov
cmp
dec
push
push
pop
in
out
(bad)
scas
inc
jo
pop
call
or
fimul
(bad)
hlt
mov
rcr
in
mov
loopne
inc
sahf
jl
hlt
(bad)
(bad)
js
sbb
push
push
mov
pushf
ret
test
cmp
mov
push
cwde
xor
mov
jb
mov
lds
pop
aas
ret
mov
aam
add
data16
push
call
sub
movs
push
cmp
popa
inc
push
jb
xchg
lock
jmp
call
push
add
pop
sti
in
or
mov
fsub
sahf
jl
popa
into
cld
mov
fsubr
movs
call
xchg
call
cmp
jmp
jp
add
push
xchg
cmp
call
sbb
es
sti
fidiv
sbb
in
push
stc
pop
sti
stos
int
sbb
push
jo
add
xor
add
push
invlpg
repnz
or
or
or
or
sbb
push
adc
pop
rol
mov
push
jmp
fsub
cs
and
in
pop
cs
add
add
xor
outs
add
dec
or
jg
lods
dec
lahf
push
add
mov
add
stos
xor
mov
sbb
mov
retf
add
mov
inc
cmp
loopne
pop
jle
(bad)
fistp
adc
push
sbb
sbb
jb
mov
mov
into
nop
pop
cmp
je
mov
fwait
stc
shr
mov
sar
sbb
fild
loopne
jge
jle
push
mov
fsubr
mov
add
aad
loopne
retf
cmc
or
add
mov
mov
inc
mov
sbb
rcr
jnp
in
fdivr
jnp
pop
mov
sub
add
test
les
add
mov
(bad)
pop
add
shl
sub
add
mov
adc
add
loop
add
add
lds
adc
int
lea
sub
or
push
push
push
mov
mov
fsub
dec
repnz
push
loope
inc
adc
test
loop
mov
mov
clc
lea
and
dec
jb
xor
mov
lea
inc
adc
ror
push
inc
ret
cmp
adc
in
shl
push
inc
dec
sar
je
pop
and
lods
push
or
sti
sbb
and
jg
push
xor
mov
mov
and
adc
inc
in
into
rcr
add
inc
add
mov
repz
imul
xor
push
cmps
or
arpl
and
data16
mov
push
pop
jg
jg
sub
push
in
or
clc
jae
lea
ret
loopne
sbb
mov
mov
xor
xchg
cmp
cld
stos
dec
(bad)
clc
mov
xor
sbb
pusha
push
xchg
in
addr16
mov
add
sub
mov
mov
mov
cmp
in
jp
fprem
stc
mov
lea
fidivr
cld
xchg
xor
cmp
sub
inc
xor
lock
movs
cmp
(bad)
mov
cmp
mul
mov
sbb
inc
push
mov
mov
mov
push
ins
ror
test
pusha
jae
jne
loop
inc
fsub
mov
lea
push
stc
pushf
mov
cmp
neg
pusha
(bad)
fwait
add
adc
fild
add
lahf
cmp
dec
add
adc
lea
je
std
int3
mov
and
push
xor
cld
and
lahf
cmp
mov
mov
lods
dec
fcmove
mov
sar
cli
pushf
adc
ins
pusha
shl
or
mov
sub
mov
cmp
imul
stc
xchg
mov
das
fist
cmp
(bad)
xor
(bad)
mov
adc
inc
or
and
cmc
test
xor
cld
fs
mov
mov
mov
jo
inc
sbb
dec
dec
xchg
aam
shl
je
sar
xchg
push
in
outs
pop
aam
mov
or
lea
push
xor
jnp
add
mov
mov
ins
push
sub
(bad)
sar
frstor
push
cmps
or
test
out
push
lods
repz
jb
nop
aam
cld
jne
int3
and
inc
cmp
sbb
imul
xchg
data16
jmp
inc
lock
scas
cmp
add
ins
(bad)
imul
mov
jge
jle
cwde
mov
push
mov
ss
inc
pop
jp
sub
lock
mov
test
mov
push
xor
inc
mov
sti
jp
push
or
jge
pop
ret
std
and
(bad)
pushf
mov
daa
cmp
jl
inc
pop
lds
aas
adc
movs
inc
mov
les
add
mov
into
mov
cmp
mov
inc
mov
push
mov
xchg
sub
ror
lea
push
push
ja
pop
call
dec
arpl
sub
jmp
or
add
inc
shl
inc
xor
jns
push
ja
rol
stos
call
pop
mov
lea
out
adc
js
repz
mov
adc
cmp
dec
mov
push
in
dec
cmp
mov
dec
aas
or
xchg
ret
lar
inc
mov
push
xor
aas
jg
mov
mov
int
adc
(bad)
and
mov
mov
dec
or
pop
ins
xchg
adc
dec
int3
or
jge
mov
ins
push
aad
jp
sbb
lods
add
loope
aad
or
inc
or
xor
test
and
imul
inc
jb
pop
call
enter
stos
hlt
lea
dec
or
les
push
ins
inc
test
cmp
repnz
pop
push
dec
or
push
dec
fisubr
or
jle
or
pop
cmp
and
sub
imul
mov
inc
cmp
jb
cwde
(bad)
pop
dec
addr16
clc
inc
retf
sub
dec
inc
dec
push
dec
push
push
jg
adc
js
hlt
mov
xchg
and
add
or
cmps
mov
(bad)
mov
cmp
lahf
and
xor
add
imul
fild
sbb
sbb
adc
addr16
jle
push
jmp
fisttp
repnz
addr16
mov
inc
cmp
jl
lea
lahf
adc
ror
cmp
add
pop
loopne
clc
cld
leave
jle
ror
neg
aas
add
push
add
ret
xor
lea
pop
cmp
test
jl
pop
(bad)
pop
sar
or
adc
jmp
mov
mov
fstp
cmp
mov
aaa
cmp
push
mov
push
sub
shl
or
call
std
push
aam
push
lea
push
(bad)
inc
add
jmp
lea
add
mov
sub
xlat
add
mov
cmp
adc
adc
icebp
push
lea
mov
loop
mov
add
or
test
mov
mov
dec
pop
or
in
sti
mov
sub
jl
dec
cmps
jns
push
adc
adc
or
lahf
inc
fdivr
push
mov
adc
sub
inc
cmp
add
cs
xchg
je
mov
std
mov
and
test
(bad)
inc
pusha
jmp
jecxz
movs
ins
(bad)
out
and
jl
add
xor
push
push
add
ror
cmp
test
mov
hlt
sbb
sti
pop
fwait
adc
ins
lock
xor
jmp
push
(bad)
fiadd
push
jo
movs
mov
in
sbb
push
sbb
ins
pop
pop
adc
and
pop
and
je
mov
pop
inc
sub
or
add
ret
cmp
test
stos
sub
call
cmps
jns
aad
mov
adc
cld
scas
imul
dec
ret
and
jge
jmp
fist
jne
adc
push
sbb
xchg
inc
xchg
pop
out
lahf
mov
sbb
nop
dec
daa
inc
imul
jns
inc
adc
cmp
adc
ret
lahf
rcr
jne
sbb
dec
push
pop
js
shl
add
add
pop
jb
sbb
mov
cmp
or
fs
(bad)
dec
push
push
push
xchg
xchg
or
adc
jo
loopne
cli
pop
mov
mov
cli
sub
push
mov
gs
mov
fnsetpm(287
mov
mov
and
adc
mov
shr
fsub
mov
pop
push
jg
pop
cmp
jbe
xor
cli
mov
loop
test
mov
dec
push
sub
mov
add
or
lds
cmp
mov
or
fiadd
test
loope
sub
cwde
arpl
js
push
test
cmps
repnz
jae
jnp
retf
pop
push
add
call
jbe
cmp
push
call
call
(bad)
inc
ja
cmp
je
lds
jl
lock
ins
pop
adc
push
mov
clc
cmp
bound
sahf
or
jnp
cmps
or
mov
mov
jge
add
pop
jl
cmp
(bad)
sbb
cmp
clc
imul
sahf
lea
push
xor
out
ss
pop
and
jb
mov
ret
push
jmp
out
xchg
add
test
adc
add
adc
adc
shl
ins
fdiv
call
lock
mov
mov
jg
jo
xlat
jo
test
in
cmp
mov
add
jge
ficom
ss
jge
(bad)
popa
scas
jl
add
mov
add
shl
pop
in
fidivr
xchg
dec
jne
retf
test
xchg
int3
out
lock
fadd
and
jno
pop
or
fcomp
push
or
adc
repz
pop
fiadd
ja
test
or
lea
adc
cmp
into
push
cld
(bad)
push
outs
mov
inc
popa
rep
inc
int3
inc
push
or
movs
pop
mov
stos
lds
jp
std
inc
jbe
or
pushf
ret
add
pop
mov
pop
jg
xchg
or
mov
push
mov
sub
mov
into
mov
cmp
test
push
out
or
and
or
jl
mov
or
imul
adc
or
pop
rol
add
push
pop
cmp
push
jbe
and
dec
push
inc
movs
repnz
pop
add
cwde
inc
(bad)
outs
aas
add
jbe
dec
add
subps
xlat
dec
sbb
push
sar
dec
ret
push
cmp
mov
pop
fst
jno
adc
sar
neg
mov
or
cdq
(bad)
cld
or
adc
or
cdq
and
jmp
jbe
add
cmp
das
pop
je
xor
add
call
push
dec
loopne
js
push
jo
jecxz
xor
push
gs
mov
mov
and
paddsb
jl
or
inc
add
in
push
dec
movs
or
je
sbb
loope
or
mov
jle
test
inc
push
fnsave
(bad)
repz
sub
jge
or
sahf
out
push
pop
mov
add
imul
add
add
adc
scas
jge
push
pop
push
add
push
or
or
fild
or
inc
cmp
jb
mov
hlt
adc
cs
cmp
xor
(bad)
es
imul
push
add
clc
mov
inc
sbb
push
cli
(bad)
test
push
(bad)
adc
jno
mov
mov
cld
push
addr16
or
mov
pop
outs
mov
jmp
add
mov
lea
sub
cmp
mov
inc
and
inc
push
xchg
movs
rol
mov
inc
call
mov
imul
pushf
inc
mov
das
push
add
mov
mov
ins
push
cmp
shl
jecxz
jge
lahf
sbb
xor
fistp
out
inc
call
rcr
mov
jecxz
xlat
add
paddb
push
dec
rol
add
movs
push
lock
jb
cmp
push
(bad)
push
mov
add
inc
jmp
xchg
sbb
jg
in
xlat
fwait
mov
je
loope
add
mov
int
jp
adc
nop
and
push
push
out
inc
sub
sub
cmp
sti
sub
sub
rol
xchg
or
adc
shl
rcl
rol
inc
retf
pop
je
sbb
push
enter
add
(bad)
sahf
jne
inc
xor
xchg
jae
(bad)
cmp
push
lea
and
lods
xchg
mov
jne
lahf
pop
pop
or
sub
iret
iret
iret
je
cmp
cmps
sub
xor
call
arpl
mov
or
push
aam
test
pop
pushf
inc
xor
sub
nop
xor
add
jg
inc
mov
mov
adc
inc
or
je
gs
outs
push
je
push
cmp
outs
or
lods
std
sbb
or
clc
and
or
mov
mov
ds
push
out
and
xchg
pusha
push
mov
and
push
loope
mov
dec
jne
push
fs
test
and
lods
icebp
inc
inc
add
sbb
dec
push
jge
test
and
(bad)
xor
add
shl
sub
cwde
call
popa
jne
inc
sahf
inc
lods
lock
mov
mov
push
mov
xchg
xchg
mov
ins
dec
js
xor
or
mov
inc
add
push
add
pop
pxor
in
jmp
arpl
stc
test
je
cmp
xchg
or
gs
xor
sahf
add
add
enter
add
int3
xchg
pusha
adc
fcom
push
or
and
dec
xchg
mov
cs
cmp
loop
jo
inc
and
jb
jo
ds
mov
jmp
jg
lods
sub
movs
jo
lds
push
push
mov
adc
add
or
push
adc
push
adc
mov
add
pop
and
adc
es
je
sbb
push
mov
add
sub
cmp
or
xor
sbb
loopne
push
push
shl
cwde
inc
shr
pop
or
push
adc
out
push
test
lea
test
push
test
sub
sbb
or
push
bound
push
inc
pop
ins
mov
dec
jns
add
enter
xor
cmp
jg
inc
daa
rcr
mov
push
imul
jp
add
push
pop
and
pop
push
mov
into
and
dec
ret
fdiv
sbb
sbb
cmp
stc
loopne
lock
lea
cmps
dec
daa
pushf
cmp
pop
push
(bad)
repnz
push
push
sub
loop
daa
call
push
sbb
gs
pusha
xchg
punpckhdq
and
fadd
arpl
adc
xor
lock
cld
push
dec
adc
and
std
or
or
je
mov
or
jl
inc
or
sub
cmp
jne
inc
int3
cmp
sub
shl
or
lahf
xor
lea
test
js
jmp
jge
enter
push
mov
rol
stos
ret
icebp
lea
push
(bad)
btr
jl
mov
push
into
test
and
js
mov
scas
add
adc
test
jl
add
sub
add
jge
jne
lahf
test
ins
sub
add
and
sti
not
inc
pushf
and
cmp
jns
out
das
neg
adc
(bad)
mov
and
or
je
cmps
rol
outs
inc
add
aas
js
test
sbb
pop
adc
inc
push
xor
icebp
sub
sub
adc
(bad)
dec
xchg
sub
mov
pop
mov
push
mov
leave
cs
add
dec
or
sbb
sbb
mov
nop
jg
cmps
add
cmp
sbb
pop
adc
dec
adc
outs
aaa
std
mov
dec
in
mov
push
je
or
je
jmp
fwait
rol
xchg
push
inc
jb
mov
push
clc
fcmovne
movs
add
mov
or
or
or
or
or
inc
rcr
lods
mov
sahf
lea
mov
mov
sar
inc
mov
xor
lock
or
in
je
inc
push
push
cs
xchg
cmp
mov
jge
pop
sub
add
sub
push
test
push
cli
push
xor
push
cld
or
ror
inc
push
scas
adc
adc
pop
sub
mov
ret
loop
sti
fist
xchg
xor
fwait
je
push
fdiv
pop
test
pop
add
icebp
inc
or
xchg
scas
inc
jle
je
sub
cmp
jb
add
jge
mov
inc
adc
enter
inc
and
dec
cld
push
push
push
add
aam
or
(bad)
cmps
mov
pop
(bad)
jp
jmp
push
adc
and
ror
sahf
mov
sub
jg
dec
cmp
fsubr
push
and
and
xor
pop
sub
mov
(bad)
cmp
add
retw
mov
test
repnz
imul
daa
data16
xlat
mov
loop
aas
pop
pop
push
dec
inc
mov
add
mov
mov
add
mov
sub
add
add
inc
add
ret
sub
add
add
pop
push
pop
jge
cmc
dec
cmp
push
inc
dec
repz
inc
imul
sbb
push
mov
or
cmps
clc
fisttp
add
mov
aam
or
mov
adc
inc
cmp
dec
xchg
dec
adc
lahf
out
or
jmp
jne
ror
or
rcl
mov
inc
push
aas
pusha
and
ins
test
cmps
shr
push
test
cmp
sbb
(bad)
mov
pop
sub
jecxz
xchg
(bad)
mov
push
jo
mov
jecxz
or
enter
(bad)
jg
or
ret
jle
add
push
lea
push
pop
fdivrp
add
mov
(bad)
inc
push
or
jp
add
fisub
ss
and
lea
xchg
xchg
push
sub
adc
push
adc
mov
add
outs
mov
xor
pop
lock
xchg
jnp
dec
test
or
or
les
iret
push
shl
pop
ret
jb
cmp
pop
add
or
out
pop
cmp
test
or
jg
push
or
push
sbb
popa
adc
loopne
cmp
mov
or
lea
add
or
sub
and
mov
lahf
(bad)
mov
mov
sub
aam
add
or
inc
pop
int3
inc
push
lea
aaa
movs
push
xor
ds
mov
inc
adc
push
pop
or
add
add
call
adc
out
adc
or
lahf
(bad)
mov
daa
lahf
jge
mov
and
test
shl
dec
iret
rep
mov
jle
jle
mov
or
push
mov
sar
pop
sbb
sub
mov
sbb
and
out
sub
adc
out
(bad)
xor
mov
shr
xor
add
and
dec
and
mov
mov
mov
sub
dec
push
or
sahf
push
push
sub
mov
cmp
or
neg
loop
add
mov
pop
add
je
push
xor
sub
sbb
ss
adc
pop
test
add
xor
test
or
cmps
pop
mov
hlt
cmp
jmp
(bad)
clc
fld
jb
sar
dec
mov
sbb
sbb
test
out
repnz
hlt
pop
adc
pop
add
sbb
and
inc
fndisi(8087
fwait
test
push
jle
test
xchg
xchg
and
ficom
int3
mov
lods
or
(bad)
out
sbb
adc
push
shl
loop
cmp
clc
push
(bad)
sub
add
add
cwde
jb
cmp
into
int
add
sub
scas
jne
xchg
fwait
sub
adc
jne
test
mov
jb
jmp
sub
adc
mov
sbb
sbb
sbb
dec
xor
mov
sub
mov
xchg
jae
jg
sbb
push
push
add
cld
scas
push
dec
sub
push
lock
inc
sbb
jge
scas
add
fnsave
jg
mov
test
mov
pusha
sbb
jp
shr
sbb
dec
sbb
xchg
dec
scas
or
mov
or
push
add
mov
rol
pop
test
je
add
fcom
adc
(bad)
push
das
cmp
out
dec
sbb
push
add
jmp
mov
aaa
test
and
adc
movs
sub
(bad)
mov
pop
inc
add
loope
add
cs
inc
sti
mov
js
xor
lods
loopne
cld
jmp
pop
hlt
pop
dec
cld
lea
cdq
sub
enter
mov
add
mov
js
out
pop
add
jle
cmp
jle
xchg
mov
add
fstp
jg
pop
shl
dec
mov
dec
(bad)
psadbw
or
add
pop
imul
push
test
rol
cmp
dec
add
or
mov
jl
push
mov
adc
dec
mov
retf
gs
sub
jge
in
push
sbb
cmp
in
mov
xor
pop
mov
fmul
stc
mov
fsub
jecxz
sub
fistp
inc
bound
push
sub
xor
ins
cmc
add
mov
std
je
dec
mov
add
dec
xor
xchg
retf
js
aam
popf
dec
ja
sub
test
mov
mov
ja
xor
pop
fsubr
loopne
in
jbe
ja
push
das
or
retf
lods
adc
pushf
and
sub
mov
mov
mov
or
push
adc
or
pusha
sti
push
mov
imul
mov
inc
lods
jae
in
int3
cmp
aam
retf
cmps
inc
hlt
clc
inc
jno
xchg
out
enter
xor
daa
xchg
xchg
inc
mov
pusha
fs
stos
cmp
dec
sub
jb
lods
pushf
lods
rep
int3
dec
rcr
(bad)
push
das
loop
loopne
or
stos
icebp
jl
repz
fmul
loopne
call
dec
adc
xor
stc
mov
xor
sub
xor
xchg
retf
inc
dec
dec
push
mov
push
jo
js
pop
ja
mov
popa
nop
inc
xchg
xor
repnz
mov
mov
xchg
retf
repz
lods
je
xchg
aam
xchg
retf
repz
fdiv
mov
cld
rcr
das
add
or
je
imul
stos
adc
sbb
and
movs
mov
jb
cmp
lods
pop
retf
in
jo
add
movs
jno
xchg
lock
enter
daa
int3
jae
in
and
lods
dec
movs
adc
adc
push
push
pop
cmp
pop
lock
mov
pop
mov
inc
adc
xor
loopne
jl
or
sti
inc
xor
inc
xor
push
push
fs
push
cmp
mov
mov
nop
inc
cwde
xor
dec
movs
push
lods
mov
mov
push
mov
loopne
repz
cs
sbb
clc
or
jne
xor
jbe
dec
or
xor
and
xor
cs
retf
cmp
inc
dec
movs
push
test
fs
jo
cmp
cli
sbb
js
(bad)
jl
or
loop
xor
aam
gs
movs
ret
xchg
pushf
mov
mov
(bad)
ror
call
ret
fdiv
pop
faddp
inc
mov
scas
cmp
rcr
mov
ds
xor
xchg
enter
out
mov
sub
cmp
dec
ret
in
mov
mov
test
mov
jns
test
mov
mov
ror
shr
fsub
push
hlt
or
xor
xor
adc
sbb
sbb
and
outs
or
xor
or
jns
jns
ror
inc
pop
xchg
sub
ja
ja
and
test
sub
jae
push
ds
cmps
int3
rcr
jns
ret
retf
call
sub
lahf
xchg
dec
pop
or
or
adc
les
xor
vpmulhw
arpl
pop
ret
push
push
cs
js
push
mov
pushf
pushf
mov
xchg
retf
rol
mov
and
sub
add
or
or
fld
xor
movs
mov
xor
mov
mov
daa
lahf
int3
hlt
xor
push
test
xor
imul
sub
xor
or
xchg
cmp
ins
pop
pusha
pop
cs
out
push
add
xor
jecxz
cs
gs
sbb
enter
mov
add
xchg
cmp
cmps
imul
xor
jae
pop
or
lods
sub
pop
or
push
push
cmp
fcomp
sahf
inc
jo
js
sub
retf
repnz
cwde
pushf
arpl
leave
test
xor
mov
jb
loopne
jb
add
arpl
mov
add
or
push
lds
dec
sub
xchg
sub
enter
jns
pop
push
lods
push
inc
ins
jo
(bad)
xchg
xchg
cwde
ins
pop
sub
push
jbe
ficomp
xor
and
jl
mov
dec
mov
pushf
mov
out
repnz
add
jns
xchg
sub
iret
movs
in
hlt
pusha
or
adc
nop
xchg
out
sbb
push
xor
jb
sahf
outs
xor
cmp
gs
pop
out
icebp
sbb
sub
js
jl
mov
or
pop
mov
adc
in
movs
in
pop
out
sar
or
(bad)
icebp
jne
mov
fsub
loop
inc
retf
mov
in
add
add
loopne
sub
and
dec
ja
jns
pop
dec
dec
dec
lods
dec
inc
push
ins
jo
dec
mov
xchg
lods
pop
mov
mov
push
push
cs
fmul
lods
mov
fdivr
clc
xor
popa
mov
xchg
in
int3
pop
sub
in
xchg
lock
xchg
popf
mov
or
adc
fbstp
sub
xor
cmp
push
test
je
outs
sub
js
add
retf
dec
cwde
mov
movs
sbb
and
hlt
movs
loopne
popf
ja
in
sar
cmp
out
jge
pop
or
xchg
or
xor
cmp
xor
iret
or
aad
inc
cmp
xchg
retf
dec
ins
shl
fs
ins
dec
aam
mov
movs
mov
nop
dec
fldcw
mov
jb
rcl
fcomp
sub
pop
cmp
xor
cmp
sbb
and
xchg
retf
lods
repnz
sar
inc
inc
gs
sbb
push
dec
dec
(bad)
xlat
sub
fisttp
xor
fadd
dec
and
out
jne
jo
je
push
xchg
movs
repnz
sub
push
lahf
dec
mov
fdivr
adc
cmp
add
mov
cmp
or
in
mov
into
jae
sar
push
mov
repz
ins
jo
es
nop
out
jne
mov
pushf
push
push
cwde
js
sbb
test
in
pop
mov
xor
rcl
adc
xchg
and
sub
mov
sbb
pushf
pop
sahf
cmp
inc
in
repnz
dec
xor
sub
dec
xchg
add
sub
gs
push
enter
loope
ret
retf
dec
in
lock
cmp
mov
cmp
mov
pop
fcom
ds
dec
cld
std
mov
cmp
or
daa
and
fidiv
fld
and
inc
adc
push
sahf
dec
xor
push
sbb
ins
daa
mov
or
in
mov
mov
push
jns
fsub
sar
sub
mov
gs
adc
adc
or
mov
scas
shl
cmp
in
pop
(bad)
in
bound
pusha
lods
pop
dec
mov
test
enter
rol
mov
xchg
xchg
retf
dec
(bad)
enter
call
in
lock
or
push
stc
lods
pushf
xchg
adc
cmp
iret
xor
xchg
retf
xor
daa
loop
shr
pop
pop
push
clc
xor
jbe
push
dec
and
xor
xchg
xor
iret
in
inc
inc
dec
ins
fs
cmps
dec
adc
jo
jns
loop
leave
mov
dec
arpl
push
lods
mov
sbb
retf
push
aam
hlt
mov
xchg
clc
add
sbb
cmp
dec
in
and
cmp
dec
enter
movs
pusha
xor
pushf
adc
aaa
ins
xor
pop
mov
xor
movs
popf
add
enter
sub
in
retf
scas
(bad)
fiadd
cmp
fwait
cmp
xor
retf
dec
mov
int3
arpl
pop
cmps
push
cs
iret
loope
je
jl
lds
pushf
push
cwde
pushf
mov
in
mov
loopne
jb
xor
test
cmp
ins
test
mov
dec
in
push
sub
rcr
sub
and
xor
icebp
fldcw
sbb
and
pop
in
lods
sbb
inc
fcomp
movs
popf
aaa
mov
sub
test
lods
movs
push
jns
inc
test
mov
enter
in
aam
js
and
dec
movs
cmp
ds
movs
sti
sub
sbb
xchg
xchg
retf
fnop
jo
js
push
sub
xor
jb
ss
ds
fdiv
mov
rcr
fsub
dec
xor
and
aas
mov
aas
and
xor
or
sbb
arpl
in
jns
sbb
lock
test
adc
sbb
dec
xor
cmp
pop
add
fs
and
xchg
out
inc
jl
or
mov
mov
lods
xor
lods
jns
inc
xchg
les
fbld
call
imul
adc
pop
sbb
jl
repz
xor
cmp
sbb
and
push
aas
ss
aas
push
sub
test
cmp
stc
xor
pop
push
je
mov
pop
stos
movs
nop
xchg
xor
sahf
mov
mov
pop
dec
sahf
inc
fcomp
loopne
sahf
repnz
cmp
cld
add
inc
outs
dec
in
repnz
sub
sub
inc
push
ins
jo
mov
xchg
adc
cs
pusha
dec
test
test
aas
inc
in
js
sub
sub
mov
les
int3
adc
sbb
out
sub
mov
cmp
or
xor
enter
jns
iret
xor
cmp
push
pop
je
pushf
xchg
out
js
inc
adc
adc
movs
sub
mov
push
pop
mov
fdiv
xchg
xchg
retf
in
clc
cld
add
inc
pop
sahf
inc
into
sbb
and
ja
mov
dec
arpl
xchg
xchg
dec
mov
pop
mov
nop
xchg
lods
mov
jb
push
cs
xor
fcomp
jmp
sbb
xchg
mov
popf
imul
outs
nop
pop
movs
popf
inc
pop
or
adc
sub
xor
xchg
addr16
push
pop
xor
retf
jae
xor
data16
sbb
mov
and
pushf
fcomp
inc
cs
mov
inc
push
add
or
test
lods
jl
inc
and
and
inc
or
push
pop
inc
retf
leave
movs
repnz
fs
dec
cs
push
jb
test
lods
mov
retf
leave
movs
dec
rcl
call
lock
clc
mov
adc
sbb
inc
rcl
cmp
mov
daa
pusha
mov
sub
pusha
mov
out
dec
push
xor
pop
ins
inc
in
repz
jo
js
mov
enter
in
mov
pop
cs
and
rcr
adc
xchg
fwait
cld
bnd
sub
add
adc
inc
jns
push
mov
inc
sub
inc
inc
inc
mov
push
cmp
push
ins
je
call
daa
mov
pop
movs
dec
cs
out
test
lods
pop
enter
cmp
inc
outs
aam
fadd
stc
dec
cs
lock
fistp
stc
adc
sbb
gs
push
xor
cmp
mov
pop
pop
pusha
or
daa
add
mov
push
les
jb
int3
inc
jg
mov
imul
retf
inc
xchg
enter
retf
cmp
mov
cmp
cs
clc
cld
pop
add
push
xor
or
dec
inc
inc
es
mov
dec
or
jge
popf
and
sub
hlt
cdq
cli
or
repnz
mov
xchg
aam
repnz
inc
mov
mov
cmp
fcom
jl
inc
inc
(bad)
inc
inc
inc
xor
and
xor
inc
in
stc
mov
push
inc
jp
in
leave
in
pop
pusha
fs
retf
leave
jae
mov
xchg
retf
test
push
push
mov
rol
xchg
ficomp
enter
inc
cmp
jl
in
iret
or
or
in
repnz
adc
mov
rcr
or
and
sub
add
sbb
inc
jae
pop
fisub
xor
fsubr
dec
in
cwde
nop
int3
test
bnd
adc
xor
cmp
rcr
xor
hlt
add
and
xchg
pop
adc
fbstp
popa
mov
cmp
jns
iret
and
inc
adc
rcl
clc
mov
inc
retf
in
repnz
aad
inc
cmp
das
mov
xchg
jl
scas
cwde
xor
adc
movs
test
mov
les
in
in
in
in
push
lock
fs
mov
or
dec
mov
sbb
mov
sub
sub
xor
add
mov
inc
cmp
push
sbb
daa
jns
dec
cmp
xor
repz
inc
xor
mov
mov
cmp
cs
mov
pop
ins
sbb
and
inc
ins
push
jb
retf
xor
pop
popf
fdivrp
pop
fs
inc
inc
jns
icebp
repz
fwait
pushf
jae
push
fiadd
movs
inc
ds
inc
push
jbe
enter
int
fmul
pop
mov
imul
mov
xchg
add
or
and
mov
ja
pusha
dec
jb
push
stc
xor
add
dec
retf
dec
gs
jne
ins
jo
daa
xchg
xchg
je
rcl
push
jp
mov
mov
add
jl
xchg
dec
pop
cld
push
out
push
test
int3
call
in
hlt
lods
mov
jbe
adc
dec
cmp
push
jns
push
adc
daa
push
iret
test
in
push
fisubr
push
xchg
int3
add
call
jl
in
xchg
fimul
out
or
mov
push
sub
addr16
and
dec
sub
inc
stos
lods
pop
outs
xor
pop
mov
in
ins
jo
mov
retf
nop
xchg
ret
xor
mov
aam
retf
leave
jae
fdiv
aad
clc
cld
cmp
rol
dec
in
sbb
xor
dec
retf
leave
movs
push
and
inc
inc
ss
scas
fs
dec
jbe
lods
ins
rcl
push
fstp
push
adc
xor
xor
mov
in
mov
sbb
cmp
stos
cmp
jo
test
enter
xchg
retf
in
push
out
sub
add
or
dec
jns
push
xchg
cmp
xchg
xor
adc
sahf
out
push
dec
mov
xchg
scas
push
sbb
dec
xor
inc
pusha
add
shl
dec
dec
dec
inc
loopne
dec
repnz
dec
sub
dec
xchg
retf
dec
dec
jl
dec
mov
xchg
dec
dec
cmp
dec
dec
xchg
fwait
mov
dec
xor
xor
pop
dec
sub
movs
in
fs
call
cmp
mov
xchg
inc
mov
push
pop
mov
ret
int3
stc
jo
lock
mov
xchg
retf
in
mov
xchg
ja
mov
adc
add
xor
or
mov
sub
mov
cmp
adc
jl
ror
adc
dec
pop
pop
push
add
pop
pushf
adc
dec
push
jo
repnz
adc
out
hlt
jg
inc
in
call
dec
call
mov
add
gs
dec
pop
fadd
dec
in
ins
sub
xor
xchg
out
fstp
pop
dec
sub
mov
retf
test
shr
xchg
xchg
out
mov
lock
mov
movs
xor
mov
jne
dec
or
jle
add
fcom
mov
enter
sbb
cmp
retf
jge
push
cwde
mov
mov
adc
mov
jns
lds
mov
iret
movs
fsub
jl
cld
in
sar
and
push
sub
dec
inc
inc
dec
pushf
je
loop
lods
ss
pop
pop
in
pop
mov
jl
pop
dec
mov
mov
test
enter
(bad)
lock
xchg
dec
adc
dec
(bad)
scas
lods
pop
dec
sub
xor
jno
mov
cmp
test
js
and
pushf
mov
dec
push
jns
xchg
fs
test
xchg
and
mov
out
bnd
xchg
hlt
clc
add
sub
sbb
and
sub
movs
push
cmp
dec
int3
pusha
dec
in
push
fs
les
nop
lods
xchg
pop
test
lods
pop
xor
sub
xchg
int3
and
mov
popf
cmovle
in
sub
push
push
pushf
or
dec
adc
pushf
push
ds
fwait
sub
xor
jb
pop
stos
mov
pop
xchg
retf
leave
jae
ins
inc
je
jl
test
inc
(bad)
cwde
pushf
mov
jbe
xor
les
push
cs
in
leave
mov
ret
dec
movs
push
push
push
or
sub
fmul
call
ins
inc
test
lock
adc
cmp
bswap
idiv
inc
cmp
pop
dec
pop
ja
mov
adc
mov
xchg
ins
dec
dec
mov
cld
xchg
enter
imul
sbb
movs
jb
lock
nop
or
daa
pop
aas
or
dec
fisubr
sub
jb
jns
retf
clc
inc
xor
retf
mov
lds
js
xchg
xchg
out
pop
inc
xchg
cwde
pushf
repz
cmps
xor
inc
sub
push
ss
xchg
out
add
push
push
stc
lods
pushf
push
push
xor
or
pop
gs
push
and
sub
pop
xchg
xchg
retf
dec
dec
dec
push
mov
push
cs
jo
rcr
adc
push
push
mov
xchg
adc
(bad)
pop
and
xchg
jbe
sub
jl
xchg
ja
pop
test
out
nop
scas
bnd
mov
cmp
pop
sub
in
hlt
cmp
ds
daa
adc
or
daa
xor
xor
add
retf
xor
nop
js
jns
mov
ss
xchg
push
push
icebp
sahf
push
movs
mov
mov
xchg
outs
push
pop
sub
pop
arpl
div
xor
push
push
ins
cmp
sub
sub
pop
dec
dec
dec
aas
jle
gs
sbb
jb
push
push
cmps
push
sub
push
les
dec
fst
push
fnstcw
mov
fcom
loopne
in
lods
cmp
imul
clc
xor
jmp
mov
push
inc
int3
movs
nop
mov
jl
call
dec
mov
data16
or
adc
je
jns
xchg
sub
cmp
push
sub
movs
push
pop
cmp
js
lods
icebp
mov
push
ja
inc
jp
push
xor
pop
out
aas
pop
sar
in
(bad)
out
rcr
out
push
push
jge
dec
push
ss
xchg
push
push
push
mov
in
inc
dec
shl
sub
mov
pop
mov
mov
dec
gs
lahf
test
test
push
push
shr
push
jl
sub
push
push
and
in
shr
inc
inc
or
dec
and
inc
dec
push
push
cli
adc
(bad)
dec
or
xor
mov
iret
dec
push
push
aas
pop
jo
jo
sub
in
je
push
jl
xchg
mov
mov
mov
in
iret
push
push
mov
sub
clc
jl
call
push
xchg
out
jnp
adc
xor
cld
mov
loope
in
dec
pusha
fs
leave
push
lea
fisttp
mov
mov
mov
das
repnz
xchg
dec
int3
jb
pop
outs
xor
aam
lock
in
hlt
clc
lds
dec
adc
dec
in
jb
push
sbb
and
cmp
iret
xchg
retf
cmp
inc
pop
inc
pop
pusha
pushf
cmp
cs
inc
add
movs
test
repz
lods
hlt
xor
sahf
push
sub
push
push
sub
mov
lods
mov
iret
ja
fcomp
cmp
fistp
fs
push
add
adc
xchg
push
and
xchg
xchg
inc
push
(bad)
out
xor
push
mov
push
push
push
xor
fisub
xchg
mov
aaa
into
mov
sub
sub
push
and
in
push
inc
push
push
adc
fcom
jnp
cmp
pop
mov
pop
retf
leave
jae
pusha
mov
inc
jl
cs
iret
xchg
test
push
inc
mov
cmp
xor
in
push
pop
xchg
call
dec
jle
push
adc
push
jb
xor
fcom
cmps
repnz
and
pop
xchg
xchg
out
sti
cmp
sub
and
sbb
stos
cmp
inc
sbb
xor
movs
cdq
retf
cmp
fdivr
jae
pop
inc
push
adc
lea
dec
jns
dec
push
push
mov
xlat
jae
hlt
clc
pop
lods
add
arpl
je
sbb
push
xchg
sub
xchg
push
cmp
push
push
or
push
push
push
push
test
xchg
dec
gs
push
push
stc
loopne
pop
mov
call
jb
enter
xchg
and
push
je
or
mov
adc
sub
xor
in
jb
jecxz
inc
push
push
xchg
xchg
retf
xchg
jo
js
test
sub
cwde
pushf
push
iret
in
adc
adc
dec
dec
jns
jae
lea
push
es
iret
movs
push
test
retf
sbb
sub
int3
rcr
call
mov
hlt
jmp
mov
repz
pop
mov
repz
call
push
pop
dec
in
sub
push
cmp
test
mov
inc
pop
pop
sub
iret
dec
pop
rol
pop
pop
pop
cmp
xor
pop
or
retf
repnz
sub
lods
pop
outs
xchg
out
arpl
sub
jb
test
sub
xchg
fist
mov
mov
mov
jb
loopne
push
ins
add
add
nop
pop
pop
dec
mov
iret
push
jns
enter
mov
in
(bad)
xor
repz
test
clc
adc
fcom
pop
adc
mov
lock
sbb
clc
mov
adc
xchg
retf
cmp
inc
fcomp
movs
push
jns
sar
sub
mov
dec
in
(bad)
enter
out
test
retf
inc
mov
(bad)
imul
xchg
pop
xor
dec
dec
gs
dec
push
mov
xchg
retf
jo
cli
ss
nop
xchg
stc
xchg
das
cwde
pop
lods
pushf
and
fidiv
pop
xor
jno
fsub
sub
xlat
mov
pop
pop
pop
push
sbb
fwait
xlat
inc
pop
pop
pop
push
cs
gs
hlt
xor
mov
push
push
adc
pop
iret
movs
stos
xor
xor
xor
sbb
mov
pusha
cld
mov
cmp
retf
test
cmp
rol
arpl
int3
mov
in
lock
cmp
pop
aad
adc
adc
repz
push
repnz
cs
mov
push
sub
call
pop
or
iret
dec
test
and
xlat
cwde
inc
pushf
aaa
dec
inc
dec
sahf
mov
cld
jo
aam
daa
cmp
clc
cld
add
inc
push
sub
pop
call
jns
and
inc
xor
push
inc
xor
leave
movs
adc
mov
ds
lods
mov
prefetch
sub
in
push
adc
mov
mov
clc
mov
enter
dec
mov
jns
add
pop
mov
rol
xor
cmp
dec
dec
sub
sar
in
cmp
je
xor
push
cs
ja
jge
cmp
mov
or
data16
fcomp
mov
pop
inc
sahf
fwait
pop
dec
enter
and
cmp
inc
pop
dec
pop
xchg
xchg
retf
inc
mov
stos
lods
pushf
je
test
in
mov
lods
cmps
ror
shl
mov
outs
daa
lock
dec
addr16
repz
mov
call
mov
and
xor
pop
add
in
imul
and
sbb
mov
xchg
retf
repz
push
aam
ins
pop
in
jne
out
jo
js
mov
xlat
or
out
bnd
mov
pop
push
jmp
clc
jbe
imul
pop
ins
sbb
lahf
out
pop
and
sub
mov
ror
inc
repnz
pop
and
inc
dec
(bad)
and
test
cmps
inc
movs
test
jns
fsubr
enter
push
in
sbb
pop
cmp
nop
das
adc
pop
xchg
retf
pop
xor
cmp
daa
pop
lahf
imul
jecxz
inc
mov
pop
cs
out
inc
fs
repz
je
mov
nop
pop
sub
cmp
lods
mov
in
in
jae
mov
xor
xchg
ja
cs
aam
loopne
hlt
aad
imul
add
mov
mov
and
sub
movs
inc
inc
dec
je
xchg
out
test
test
mov
xchg
sub
enter
mov
pop
leave
in
inc
push
mov
dec
sti
les
xchg
dec
in
rcl
or
out
gs
in
hlt
clc
push
mov
enter
pusha
ins
xchg
xor
push
xor
pusha
mov
xchg
jbe
and
js
jl
mov
and
gs
rol
push
(bad)
in
retf
repz
test
mov
movs
jns
jl
xchg
add
cmps
stos
pop
fcom
sub
xor
xchg
mov
cmp
inc
pusha
sahf
out
bnd
xchg
pop
pop
ins
jo
jb
pop
add
aam
movs
test
mov
xor
enter
iret
movs
rcr
and
call
in
or
add
cmp
and
and
inc
sub
popa
retf
sbb
cmp
inc
retf
sub
shl
pop
mov
cwde
mov
dec
jb
mov
dec
ja
push
aad
inc
in
lods
xchg
retf
add
or
xchg
adc
iret
xchg
sub
mov
dec
idiv
popa
rol
adc
or
popa
fcomip
push
fldenv
add
xor
inc
pop
push
jmp
pop
pop
or
push
aam
push
popa
jb
mov
mov
movs
test
mov
js
mov
call
pop
sahf
out
lock
clc
test
adc
imul
ins
xor
ror
bound
inc
push
ja
mov
xor
inc
push
fstp
(bad)
lods
xchg
in
mov
cwde
(bad)
dec
gs
lahf
fsub
mov
retf
add
arpl
movs
and
dec
cs
sub
test
jo
test
lds
cmp
cmp
fs
bound
js
cmp
jecxz
cmp
retf
movs
lods
sbb
mov
enter
jb
add
call
cli
dec
hlt
xor
test
es
jge
and
lea
les
movs
push
sub
arpl
pop
cmp
push
push
pop
push
mov
je
retf
in
test
cmp
and
enter
pusha
and
retf
xor
ds
mov
fs
lods
and
push
inc
and
lods
inc
dec
pop
cmp
ins
outs
cmps
in
jb
mov
xchg
pop
gs
call
inc
pop
sub
xchg
jb
or
repnz
cmp
xchg
ja
movs
in
lock
add
and
lahf
or
adc
xchg
or
sub
cmp
push
ds
or
out
sbb
in
jo
jb
push
stc
aas
js
enter
iret
mov
cwde
jg
or
mov
enter
xchg
retf
in
loopne
in
jo
gs
gs
add
adc
jns
gs
inc
inc
mov
lods
je
inc
stc
lods
adc
sti
xchg
out
mov
adc
sub
adc
adc
cs
retf
not
ins
or
pop
imul
pop
push
or
sbb
retf
in
pop
push
or
xchg
push
pop
cs
cwde
mov
inc
mov
sub
sahf
out
jb
xchg
pop
fsubr
push
in
pop
mov
retf
mov
aam
mov
jns
call
cmc
cmp
not
movs
sub
data16
test
jp
mov
cmps
int3
aam
add
sti
xor
out
push
dec
or
aas
std
pop
cmp
mov
mov
xchg
(bad)
(bad)
mov
mov
ins
dec
dec
or
hlt
(bad)
loop
push
pop
pop
push
cli
mov
mov
ja
ins
lea
pusha
push
or
sbb
mov
stc
out
xor
(bad)
aas
sub
push
mov
xchg
(bad)
jbe
cmp
jbe
mov
cli
sub
cli
inc
add
cmp
jb
enter
dec
push
int
test
push
xor
sahf
dec
or
(bad)
pushf
sbb
push
mov
cmp
inc
lea
ficomp
cld
add
movs
add
mov
pop
add
mov
push
mov
cmp
fnstenv
add
test
repnz
add
pop
cmps
stos
mov
fcomip
out
inc
cmp
push
pushf
push
push
mov
add
jo
inc
adc
or
ret
je
mov
or
or
sub
cmp
lea
cmp
je
sub
outs
add
mov
xor
xchg
xchg
imul
inc
retf
lock
or
stos
repz
ret
pop
sbb
and
inc
add
add
pop
mov
cmp
add
or
pop
mov
dec
ror
pop
pop
pop
fstp
xor
es
es
dec
ror
pop
lods
or
sbb
mov
mov
mov
xchg
push
or
call
daa
mov
ins
inc
mov
inc
jle
push
nop
pop
call
adc
or
add
shr
mov
rol
mov
or
adc
dec
mov
mov
mov
fcomp
add
xor
and
jle
jb
mov
inc
add
(bad)
in
lock
mov
inc
mov
repnz
jle
inc
ret
jge
cmp
add
imul
out
mov
pop
mul
mov
sub
push
xor
loopne
push
mov
ret
(bad)
or
mov
scas
push
mov
lds
inc
add
out
mov
hlt
movzx
es
xor
ins
lds
aas
xor
pop
(bad)
sti
inc
mov
lods
ss
dec
test
or
std
aad
mov
push
loopne
test
and
jns
into
div
mov
inc
fisub
cli
(bad)
popf
add
jmp
test
neg
rol
xchg
sub
xor
cs
retf
add
cld
push
stc
xor
cs
mov
xor
add
sti
add
mov
inc
scas
pop
and
nop
xchg
out
jbe
cmp
fsubr
or
out
inc
es
mov
test
shr
cmp
pop
push
push
cmp
add
lds
mov
dec
sub
jo
xchg
cmp
stos
inc
inc
mov
xchg
aad
mov
push
maskmovq
test
xchg
fsubrp
fdivr
and
inc
adc
jne
adc
dec
pop
sbb
xlat
sub
mov
pop
cld
add
add
js
call
imul
jbe
cmp
popf
pop
xchg
and
jns
in
xchg
popf
mov
scas
xor
inc
cmp
outs
and
sub
mov
jnp
xchg
mov
pop
ficomp
dec
dec
adc
imul
ret
pop
call
push
jmp
adc
fstp
rol
cmp
out
fisttp
mov
add
popf
lods
call
pop
and
mov
mov
fadd
add
jne
xchg
pushf
rol
lds
sar
std
fisttp
lar
mov
dec
sub
mov
fldenv
inc
dec
push
pushf
or
mov
push
and
pop
(bad)
push
pusha
jg
fiadd
fwait
outs
pop
xchg
sub
add
dec
call
push
lock
push
or
test
and
xchg
cs
inc
jle
test
int
stc
adc
ss
dec
aam
cs
dec
sar
mov
adc
add
inc
pop
or
jne
ret
sbb
and
push
test
das
add
mov
mov
(bad)
pop
cdq
stos
pop
enter
mov
call
mov
push
call
or
je
mov
pop
inc
mov
sbb
xchg
xor
xchg
add
push
push
mov
xchg
cmp
into
mov
dec
fdivr
ins
adc
fcomp
sti
jns
js
push
mov
dec
sub
sbb
ins
push
lea
neg
out
dec
popa
adc
es
in
dec
jae
push
test
cld
shr
mov
imul
sbb
jo
xor
add
out
fxch
icebp
loope
jno
in
fbld
or
mov
fisub
xor
cmps
mov
adc
pop
mov
push
fidiv
push
sti
mov
push
xchg
push
je
add
and
add
add
or
add
or
or
ror
sar
push
mov
mov
gs
push
pusha
mov
push
xor
into
push
mov
outs
add
push
add
push
push
dec
cmp
mov
lds
outs
out
pop
xchg
add
cmp
xlat
add
sub
ins
push
inc
mov
add
or
rol
out
mov
fld
mov
add
in
sbb
lods
cmp
adc
jnp
call
sub
loopne
or
aas
les
xor
daa
jmp
js
cmp
jne
pop
cs
inc
add
or
loop
rcr
inc
pop
mov
push
in
dec
sbb
pop
mov
(bad)
je
fs
sub
mov
mov
or
loopne
mov
jae
add
das
pop
stos
ficom
push
sub
xor
add
iret
jnp
mov
es
cmp
neg
pusha
je
fs
(bad)
(bad)
out
mov
jl
shl
sbb
not
push
enter
sub
sbb
test
inc
jge
inc
jmp
jmp
add
or
test
xor
sub
sub
not
xor
ror
not
jo
push
pop
sbb
push
adc
js
test
xchg
into
fcom
movs
imul
jl
adc
inc
push
pop
clc
push
add
mov
xor
xor
cmp
ret
sbb
push
mov
loopne
fdivr
in
xor
lock
dec
or
mov
out
add
sbb
add
inc
mov
js
mov
sub
add
push
sub
jmp
add
add
add
adc
(bad)
or
and
sbb
add
mov
fcom
(bad)
mov
mov
inc
mov
dec
push
jl
adc
pop
cmp
pop
xor
push
mov
push
push
cmp
loop
outs
int3
mov
push
jp
push
out
ret
cmp
adc
adc
mov
ins
dec
add
add
aam
adc
cli
inc
sahf
cmp
je
pop
mov
dec
jae
dec
or
lea
push
imul
jno
xchg
rcr
fstp
jecxz
or
push
jne
dec
pop
jno
sub
js
pusha
or
sbb
leave
adc
ud2
test
or
rcr
inc
js
mov
cmp
je
or
cmp
mov
cmp
cs
clc
mov
ja
mov
nop
dec
mov
cmp
add
test
(bad)
jge
test
add
or
popf
movs
test
and
js
mov
cmp
bound
cmp
(bad)
retf
dec
add
test
je
mov
fadd
mov
repnz
ror
mov
loopne
pop
cmp
lea
push
pop
fisub
push
pop
or
inc
ds
loope
js
jo
cdq
sbb
or
and
xchg
or
xlat
cmp
ror
and
sub
retf
in
fidivr
adc
shl
mov
inc
and
mov
leave
cli
cmp
imul
pusha
into
add
mov
and
lahf
pop
or
or
mov
add
je
pop
cmp
mov
aaa
xor
out
or
je
mov
pop
cs
or
adc
ss
cmp
in
lods
gs
push
inc
push
jne
stos
mov
jb
cmp
xor
dec
imul
pop
sbb
push
dec
mov
fadd
outs
push
and
cmps
push
pop
dec
jge
ror
xor
shl
adc
test
and
je
push
jbe
mov
ja
or
call
(bad)
or
pop
rcr
cli
adc
dec
xor
xchg
adc
call
pop
rcl
adc
mov
push
push
xor
push
mov
jno
ss
cmp
inc
cmps
cld
pop
mov
dec
call
or
push
sub
xor
dec
push
lods
push
dec
adc
jnp
add
xor
neg
sbb
sbb
iret
cmp
clc
or
out
cmps
sbb
(bad)
pop
push
loop
pop
fstp
xlat
pmaxsw
push
xchg
out
push
add
idiv
dec
push
pushf
nop
cmp
push
xchg
adc
push
adc
jo
(bad)
push
sbb
loopne
clc
adc
dec
loope
and
push
leave
xor
or
pop
jo
leave
leave
pop
jbe
nop
pop
mov
inc
pop
xchg
pusha
inc
add
sub
push
or
dec
xor
jne
or
mov
sbb
add
mov
sub
test
pop
adc
mov
mov
push
in
mov
xor
jne
jl
rol
ret
pop
mov
add
inc
int3
or
and
pop
out
inc
mov
push
mov
fistp
mov
or
or
xor
lea
test
rol
sbb
mov
test
and
dec
pop
sub
push
push
rcr
sub
and
jo
mov
push
inc
mov
xor
mov
and
or
fdivr
pop
dec
enter
cmps
ror
xchg
adc
inc
cmp
retf
add
fisub
into
add
movs
pop
adc
mov
push
cmp
lea
pop
adc
in
jmp
test
xchg
and
push
aaa
pop
cmps
add
outs
in
mov
mov
retf
adc
outs
enter
mov
pop
cs
dec
inc
setg
fwait
retf
mov
sbb
sbb
mov
sbb
pop
mov
sub
push
in
sahf
sbb
jg
inc
inc
ja
cmp
(bad)
dec
cld
mov
xchg
cs
sub
xor
jns
in
dec
add
jbe
imul
inc
or
imul
mov
lods
ja
dec
push
xchg
or
jle
xor
sbb
push
aas
push
loope
das
cdq
int3
sahf
inc
dec
dec
(bad)
fadd
inc
adc
(bad)
retf
in
loope
add
sbb
fidivr
loope
cdq
sti
mov
daa
inc
jmp
and
push
addr16
cmp
push
xor
pop
and
es
je
pop
dec
add
sbb
js
or
cmp
js
push
pop
mov
sahf
sub
test
push
pop
(bad)
cmp
xor
jp
es
fimul
retf
and
push
inc
xor
push
je
pop
xlat
xor
(bad)
fldl2e
es
push
mov
sbb
jns
or
cmp
or
jne
lods
push
icebp
push
cmp
outs
mov
inc
dec
and
push
inc
in
or
frstor
pop
cmp
sar
jns
inc
pop
inc
pop
pop
adc
dec
adc
push
cdq
xor
jne
push
and
xor
ins
mov
icebp
sub
add
mov
sbb
(bad)
add
retf
pusha
fmul
pop
sbb
inc
and
push
push
stc
nop
inc
dec
ds
add
pshufw
sbb
add
ror
sbb
arpl
xchg
out
cmp
dec
adc
pop
add
jl
mov
jecxz
jno
pop
sub
dec
push
jb
rol
hlt
or
adc
and
retf
cmp
dec
loope
jbe
or
inc
or
jb
ret
pop
or
cmp
ror
ins
mov
or
push
xchg
pop
call
pop
xchg
daa
das
nop
push
cmc
pop
or
leave
sbb
sbb
xor
loope
push
cld
cdq
inc
cmp
push
inc
mov
mov
push
mov
aam
cmp
lock
dec
fadd
outs
iret
push
jb
imul
or
not
outs
push
fld
jecxz
ror
dec
nop
mov
mov
mov
or
mov
mov
mov
popf
mov
test
push
mov
inc
add
push
xlat
popf
push
add
aas
iret
jnp
xchg
push
sahf
mov
pop
test
sub
test
mov
pop
jo
dec
add
adc
mov
sbb
sbb
and
and
jmp
push
adc
push
sbb
(bad)
sub
add
clc
mov
nop
pop
lahf
adc
shr
(bad)
dec
adc
xor
fiadd
lock
mov
inc
jae
sub
adc
jl
lea
pop
add
mov
xor
cmp
cli
(bad)
mov
imul
movzx
and
popf
mov
lea
pusha
fst
adc
inc
sbb
xchg
pop
mov
push
jo
xor
stos
adc
js
push
jmp
cmps
js
cmp
mov
lahf
mov
push
mov
jns
push
into
push
jecxz
lahf
jecxz
adc
inc
sahf
fidivr
xor
aam
sub
cld
movs
dec
push
push
lods
pop
sub
inc
js
xor
sbb
inc
sub
jecxz
movd
push
sbb
inc
or
mov
adc
(bad)
inc
out
adc
mov
test
mov
push
jmp
repnz
cmp
test
retf
or
add
adc
cmp
gs
dec
push
data16
push
or
or
inc
or
pop
repnz
mov
adc
mov
mov
into
loopne
cmp
or
inc
mov
or
or
or
gs
xchg
or
or
or
sbb
call
jp
push
cs
(bad)
cmp
cmps
add
int3
psubb
push
lea
sub
pop
je
je
or
into
adc
sti
push
ja
pop
adc
dec
scas
mov
mov
out
inc
cwde
cmp
stos
push
movs
push
inc
and
push
fnstcw
mov
or
sbb
inc
xor
pushf
push
les
frstor
sbb
xchg
lock
add
frstor
jle
mov
mov
push
(bad)
cs
push
mov
and
xor
mov
movs
or
test
lahf
jle
xor
dec
mov
dec
add
or
inc
cmp
into
rol
ret
push
call
mov
dec
fbstp
mov
repnz
sbb
push
popa
adc
dec
shl
push
test
and
sbb
sub
jmp
sbb
and
xor
add
clc
xor
sahf
mov
pop
xor
pop
inc
lods
or
sub
pop
arpl
push
mov
cmp
xchg
push
push
add
dec
mov
or
inc
test
cmp
adc
shl
xchg
sbb
shl
mov
pusha
movs
mov
test
mov
outs
(bad)
into
jl
aam
jl
add
cmp
push
pop
add
imul
inc
add
sbb
lods
or
mov
cmp
ins
test
cmp
cmps
sub
mov
or
ret
jecxz
and
ret
cld
int3
sbb
loop
jne
mov
add
ss
stos
inc
cmps
push
fwait
scas
jge
nop
lods
push
pop
or
repnz
pop
repz
out
add
shl
mov
mov
push
scas
rol
inc
mov
add
mov
xchg
fstp
cmp
push
out
ds
cmp
push
pop
add
pop
pop
dec
ficom
xor
sbb
add
movups
adc
adc
adc
adc
cmp
push
mov
pop
cmp
sub
sub
adc
add
dec
popa
push
mov
push
fs
adc
add
into
mov
in
imul
out
add
and
mov
or
dec
repnz
movs
sar
fcomp
xlat
and
and
and
and
das
in
add
sbb
push
fmul
dec
add
mov
lods
nop
int
and
inc
test
cmp
es
xchg
adc
xchg
and
jo
adc
retf
inc
push
icebp
dec
and
dec
sahf
cmp
cmc
jp
and
outs
and
adc
lods
or
pop
or
mov
mov
and
ja
mov
push
cs
fs
lea
push
jbe
pop
loopne
or
shl
js
jge
cmp
inc
sub
push
push
push
sbb
mov
adc
ja
daa
add
jmp
cmp
repnz
sbb
sbb
sbb
sbb
out
sahf
adc
fldz
cli
add
rcr
sub
inc
shl
mov
and
stc
add
and
movs
sbb
fnstsw
test
mov
and
imul
pop
das
fist
ja
lea
add
mov
xchg
int
aas
sbb
push
ss
inc
jmp
or
add
lock
push
mov
and
mov
ret
push
cmp
cmp
enter
sbb
inc
inc
lods
sbb
inc
cwde
enter
popa
push
mov
pop
and
sbb
mov
test
jmp
stos
sbb
ficomp
clc
cld
sub
pop
pop
mov
fldlg2
mov
xchg
nop
sub
fisubr
leave
dec
mov
mov
sahf
test
xchg
retf
push
cmp
push
sub
mov
imul
mov
(bad)
cmp
jnp
jmp
inc
push
push
inc
cmp
repz
pop
mov
outs
div
std
xchg
bnd
stos
sahf
mov
inc
mov
out
shl
dec
push
mov
inc
add
push
pop
in
jns
in
inc
iret
pop
iret
popf
add
popa
iret
and
push
mov
dec
pop
jne
gs
inc
sbb
dec
add
and
sbb
aad
int3
movs
cmp
out
push
sub
sbb
mov
xchg
out
dec
data16
enter
shr
jo
or
cli
adc
inc
jg
sti
or
cmp
jne
xchg
push
lea
cdq
mov
sub
cli
mov
cdq
add
adc
cdq
aam
int3
add
sub
(bad)
test
retf
inc
xor
cdq
xchg
xor
cmp
cmps
pop
repnz
retf
add
into
mov
clc
retf
fstp
inc
hlt
fstp
or
fisttp
xchg
push
and
mov
call
pop
jbe
lods
cmp
test
loope
fldcw
adc
jg
(bad)
and
or
pop
inc
sub
(bad)
cwde
xlat
ror
rcl
xchg
aad
push
xlat
inc
(bad)
ror
mov
add
push
cmp
(bad)
fcom
adc
adc
dec
add
loopne
push
mov
emms
inc
inc
mov
imul
cmp
cmp
pop
stc
push
adc
loope
sahf
lods
je
xor
xlat
jno
stos
jl
sub
inc
push
test
or
pop
jne
pop
and
add
adc
lods
pop
stc
retf
outs
xlat
mov
pop
pop
cmp
dec
repz
push
push
mov
in
into
jle
test
fwait
sub
cmp
push
ror
ins
pop
push
jnp
push
push
inc
nop
xchg
scas
xor
sbb
test
imul
mov
dec
adc
xor
into
retf
jae
ret
imul
mov
cwde
inc
ins
push
mov
sbb
(bad)
fcmovb
push
add
and
bound
popf
data16
pusha
jl
mov
push
and
std
adc
mov
xchg
jne
lea
sar
xchg
lea
dec
lock
cmps
mov
and
int
mov
inc
add
(bad)
ror
cmps
jge
out
push
test
nop
inc
xchg
mov
rcl
out
mov
stc
push
pop
ss
cld
arpl
add
jg
push
jne
or
pop
mov
jl
call
pop
dec
test
push
pusha
ja
neg
mov
mov
dec
xchg
jmp
xchg
add
or
xor
add
popa
int
xor
and
ret
movs
ret
mov
mov
cmp
and
std
and
jo
inc
adc
xchg
adc
(bad)
xlat
(bad)
into
mov
das
xchg
push
dec
jbe
sahf
xchg
loopne
mov
pusha
mov
cmp
inc
test
inc
sbb
push
test
sbb
call
wbinvd
push
cmp
push
rol
dec
dec
mov
jb
imul
adc
shr
pop
mov
and
add
rcr
adc
cmps
js
mov
xor
cmp
and
cdq
fadd
std
popa
out
pop
dec
aas
(bad)
loopne
cwde
sbb
or
inc
bound
jb
daa
clc
clc
adc
pop
pop
fisubr
ds
jp
jecxz
std
scas
add
test
icebp
scas
js
ja
movzx
push
loope
test
cmp
mov
push
retf
hlt
stos
ror
test
add
out
aaa
sub
imul
imul
inc
ror
sar
push
enter
pop
pop
add
mov
dec
cld
das
hlt
call
ja
lods
test
mov
int
push
sti
loopne
sub
sub
add
aaa
sbb
mov
add
cli
push
jne
mov
mov
push
push
ja
pop
ret
add
add
jle
sub
or
mov
inc
mov
pop
ss
add
popf
into
les
adc
jb
xor
jmp
add
loope
pop
mov
pop
dec
inc
stos
or
add
xchg
(bad)
in
ret
jns
mov
jae
movs
add
sub
lds
add
inc
push
lea
lods
pop
jp
pop
dec
js
pop
mov
mov
and
add
sub
add
and
neg
or
add
dec
pop
ret
mov
adc
jne
mov
call
add
stos
lods
jl
pop
push
icebp
lods
loope
and
inc
cmp
dec
xor
dec
mov
sub
cmp
inc
mov
push
cld
aad
mov
mov
mov
pop
loope
or
mov
jle
adc
adc
mov
test
pop
aaa
int3
push
mov
popa
(bad)
rol
pusha
adc
push
icebp
iret
scas
add
lock
push
cld
and
mov
lods
mov
les
call
sahf
lahf
push
je
inc
loop
lock
sub
jle
je
dec
cmps
pop
pusha
mov
es
pop
loopne
mov
push
sbb
mov
push
(bad)
push
ins
xor
mov
jge
inc
test
adc
jmp
sub
je
jmp
out
sub
rcl
and
fucomp
int3
dec
push
mov
js
pusha
or
cmp
push
mov
mov
jno
dec
retf
mov
les
mov
hlt
inc
fsubr
repnz
pop
int3
outs
push
pop
sub
and
add
nop
inc
adc
xor
js
call
push
push
fs
xchg
(bad)
test
add
loope
ror
dec
les
fs
mov
jne
lea
or
or
fadd
sub
mov
adc
test
or
and
adc
mov
stos
mov
or
xchg
les
add
test
gs
lods
dec
cwde
sub
dec
fwait
or
inc
mov
push
xchg
adc
das
dec
(bad)
xor
dec
xchg
shl
push
(bad)
stc
cmps
push
pop
(bad)
fs
push
add
das
idiv
lea
xchg
lea
dec
and
lods
(bad)
add
inc
or
or
arpl
jo
inc
adc
dec
cwde
imul
out
je
dec
aaa
inc
xor
xor
mov
sbb
pop
dec
pop
les
push
jle
pop
sti
test
je
test
jne
add
jne
jle
adc
scas
or
(bad)
loopne
jnp
and
adc
mov
dec
xchg
jmp
imul
call
or
adc
jge
add
mov
into
lods
fstp
jmp
mov
(bad)
mov
pushf
and
ret
pop
dec
cmp
les
in
push
inc
adc
out
mov
sbb
pushf
xchg
arpl
mov
idiv
test
jl
scas
push
std
cmp
lahf
and
pop
aam
fstp
jne
add
lea
adc
adc
push
pop
xor
(bad)
(bad)
pop
adc
xor
aam
pop
sub
aas
sub
adc
pop
dec
mov
cs
or
loopne
cmp
dec
adc
pusha
jns
stos
push
xchg
ins
jl
add
(bad)
fwait
dec
inc
stc
jo
fadd
arpl
dec
shl
inc
cmp
repnz
test
addr16
je
rcl
test
call
jnp
dec
add
dec
rcl
xchg
or
lods
dec
adc
ds
sar
sbb
mov
loop
sbb
scas
push
or
push
clc
mov
mov
out
stc
cmp
adc
add
dec
stc
imul
cs
stc
mov
adc
lods
fcmovne
xor
sbb
nop
inc
lods
ins
mov
jmp
or
fwait
jl
cmp
pop
or
jmp
cmp
inc
cs
movs
jb
mov
nop
xchg
andps
jmp
cwde
pop
push
xor
or
adc
inc
loope
jnp
xor
jnp
dec
int3
int3
inc
mov
mov
mov
mov
mov
mov
shl
dec
in
mov
mov
out
mov
outs
add
jne
mov
xchg
cwde
inc
inc
inc
adc
dec
ins
cwde
and
cmp
sub
stc
mov
in
dec
mov
clc
add
inc
cmps
ficom
cdq
mov
add
in
jae
mov
or
add
lock
cs
or
xchg
in
push
fsubr
mov
mov
push
mov
jge
mov
inc
inc
mov
dec
neg
popf
in
inc
dec
nop
inc
dec
add
push
jo
je
mov
retf
call
pop
stos
repnz
out
push
pop
mov
mov
jae
xchg
mov
push
or
cmp
or
je
add
or
imul
and
mov
sub
or
int3
pop
add
xor
enter
rol
(bad)
jg
xchg
pop
ja
cdq
sbb
stos
(bad)
pop
mov
call
dec
sbb
mov
loopne
sub
ficomp
xchg
add
mov
cmp
xor
sbb
adc
adc
setl
lea
push
setne
sub
inc
sbb
out
push
adc
push
test
pop
mov
fist
loopne
cmp
mov
test
shl
sbb
lds
fild
push
cld
sub
fstp
fld
sbb
shr
out
(bad)
or
sbb
xchg
xor
pop
into
fadd
mov
push
xor
or
pop
stos
lahf
mov
push
adc
add
mov
loop
inc
xor
pop
add
pop
mov
test
add
inc
dec
cld
mov
pop
dec
push
xor
xchg
in
aas
leave
sub
test
or
or
enter
mov
or
or
fadd
and
or
push
(bad)
mov
sti
mov
mov
add
scas
adc
sbb
dec
cli
lods
mov
nop
add
les
xchg
retf
neg
or
jb
pop
test
mov
int
inc
fdivr
jnp
mov
call
fmul
loopne
call
pop
leave
in
sbb
clc
sub
stc
pop
cld
aaa
add
xchg
inc
sub
or
adc
xchg
and
lock
pop
sub
xor
(bad)
pop
jg
push
adc
mov
pop
test
scas
jb
test
bound
mov
rol
aam
jb
jl
fsub
in
pop
pop
jle
cld
xor
les
xchg
(bad)
adc
scas
pop
add
ret
jl
daa
ror
jmp
(bad)
fld
mov
xchg
ret
sbb
lds
inc
cs
pusha
ins
rcr
mov
clc
int3
mov
and
add
adc
retf
mov
jl
dec
test
jle
sahf
push
mov
or
clc
int
retf
ja
nop
(bad)
push
dec
mov
sub
mov
jae
add
mov
cwde
cmps
pop
and
adc
sbb
lods
movs
or
xor
in
rcr
pushf
lea
mov
jmp
sub
daa
rcr
aam
outs
test
clc
sbb
adc
cmp
push
push
push
dec
mov
push
xlat
in
cmp
mov
xor
jge
inc
add
fist
ror
femms
fcomi
test
stos
repz
aas
mov
js
ror
adc
mov
sub
ins
clc
adc
push
cs
ins
daa
(bad)
mov
adc
lock
lock
shl
inc
pop
xchg
pop
imul
(bad)
adc
lea
jle
imul
mov
dec
adc
or
mov
push
loope
dec
enter
lock
xchg
rcr
push
out
cli
lock
aas
and
cwde
pusha
into
in
sti
push
outs
call
mov
dec
mov
cmp
mov
ins
ret
movs
add
data16
mov
arpl
jg
ins
adc
cmp
xor
mov
sbb
push
loopne
fstp
inc
retf
and
lea
mov
and
fbld
cmp
lods
rcl
fbld
stc
inc
fcom
jmp
cdq
std
inc
movs
mov
push
inc
pop
add
lea
jle
mov
movs
mov
test
rcr
hlt
call
push
hlt
jmp
ror
xchg
mov
and
movs
je
mov
(bad)
jle
test
dec
mov
sub
(bad)
and
sub
mov
pop
pop
xchg
sub
pextrw
mov
jae
or
inc
mov
call
or
fmul
popa
push
aaa
nop
push
pop
pop
mov
sub
fiadd
jle
mov
ret
and
adc
and
add
cs
rcr
mov
mov
cmp
stos
aaa
fcomp
shl
mov
call
lock
stos
popf
push
dec
lods
add
fistp
fmul
int
jbe
mov
mov
sbb
push
mov
in
push
call
mov
xchg
retf
lock
mov
mov
cmp
xchg
or
jg
mov
sub
shl
inc
jge
xor
or
inc
push
fdiv
jl
dec
jne
rol
cmp
scas
xchg
or
out
lds
sub
test
jle
inc
add
mov
push
cdq
idiv
xlat
and
scas
rol
repnz
cmp
je
fadd
mov
sbb
adc
and
(bad)
enter
pop
xor
out
out
dec
pop
pop
cmp
mov
sar
fsub
add
sub
adc
(bad)
shl
cdq
push
adc
sar
or
jmp
xor
movups
mov
inc
pop
fucom
or
pushf
lods
mov
mov
pop
jecxz
out
cld
out
cmp
add
dec
call
and
movs
(bad)
xchg
sbb
and
rcl
(bad)
cmp
add
or
mov
sub
push
shl
sub
les
and
(bad)
dec
lods
push
sbb
xor
adc
test
aas
jae
mov
sbb
rcr
jo
xchg
arpl
je
cmp
push
arpl
or
inc
adc
pop
adc
test
out
mov
xchg
push
push
mov
call
sbb
mov
xchg
push
push
mov
pop
bound
pop
lea
(bad)
push
js
jno
lods
retf
mov
xchg
sbb
mov
clc
jmp
mov
aas
xchg
sbb
lea
mul
lock
mov
sbb
pop
and
sub
or
fbstp
cmp
inc
cmp
sub
mov
mov
aad
adc
inc
pop
repnz
mov
gs
enter
jg
loop
xor
mov
dec
cli
inc
or
push
mov
loop
or
push
es
or
lock
sub
cmps
dec
pop
es
and
mov
jle
fld
gs
retf
sbb
and
mov
(bad)
(bad)
out
or
push
aas
sbb
add
sub
paddsb
cmp
mov
jae
call
pop
(bad)
sub
adc
adc
ror
mov
cld
jne
and
jne
punpckhdq
fimul
push
adc
retf
rol
sub
xlat
clc
jecxz
hlt
sbb
sar
xchg
inc
or
aam
mov
(bad)
repnz
fisttp
inc
mov
add
pop
popa
adc
leave
lods
sub
jmp
cmc
cld
xor
xor
lahf
repnz
add
jbe
in
dec
push
push
aam
mov
aam
mov
ins
sbb
mov
push
fisttp
fnstsw
add
das
dec
fadd
shr
fmul
shl
xchg
inc
mov
ret
add
inc
xchg
hlt
clc
lea
fisubr
movs
mov
nop
sub
aad
xor
test
sub
add
sub
mov
cmp
mov
add
xor
sbb
push
adc
cdq
in
mov
dec
push
mov
push
cmps
fisub
pop
or
out
sar
pop
std
in
sti
rol
rcr
cmp
repz
cmp
sbb
mov
add
repnz
shl
mov
push
fdivr
mov
daa
adc
xchg
pop
mov
sub
test
outs
(bad)
cmp
(bad)
daa
jle
js
pop
sti
lea
jl
shl
adc
repz
inc
daa
jae
push
inc
iret
xor
loop
cdq
pop
jmp
push
push
adc
xchg
imul
lods
or
cld
call
mov
jl
ret
jo
add
dec
adc
add
mov
sbb
fadd
jge
mov
pushf
mov
mov
push
push
and
popa
loope
dec
and
inc
mov
xlat
repnz
pop
scas
sub
sbb
retf
add
inc
cmps
adc
xchg
nop
movs
shl
or
pop
push
dec
push
lea
dec
outs
mov
push
or
jo
ret
imul
sbb
test
mov
pop
pop
aas
lods
add
retf
xor
add
inc
inc
cmp
jl
arpl
pop
dec
sub
dec
push
retf
sub
fcom
and
aaa
jge
mov
push
js
lock
mov
jle
xor
pop
push
sbb
xchg
stos
mov
adc
in
xor
pusha
(bad)
jge
mov
adc
movs
retf
jne
lahf
neg
xor
jb
inc
cmp
jbe
lea
loopne
or
(bad)
mov
pushf
adc
push
ja
xchg
pop
addr16
pop
cs
dec
pusha
inc
mov
(bad)
(bad)
add
or
xchg
mov
sbb
ja
or
cwde
or
sbb
sahf
loopne
pushf
(bad)
push
sbb
or
cmp
mov
movs
inc
inc
in
or
push
stc
or
dec
shl
or
add
jne
or
test
(bad)
hlt
sub
dec
les
ror
fdiv
sti
pushf
and
pop
mov
mov
push
imul
mov
mov
push
or
or
call
jno
outs
ror
or
dec
sbb
std
add
add
push
lods
inc
inc
adc
in
repnz
nop
ins
nop
cmp
sbb
std
cmp
jle
ffreep
mov
push
add
call
add
mov
mov
sub
cmp
mov
sbb
dec
ins
xchg
retf
jmp
or
jmp
mov
or
sub
sub
test
mov
or
and
jne
mov
mov
sub
aam
jecxz
push
pop
mov
test
jmp
mov
push
or
pusha
loop
push
fdiv
sub
bound
jmp
and
or
jg
loopne
sub
xchg
pop
pop
pop
add
lods
iret
in
sbb
xchg
dec
jge
fst
or
pop
pop
or
pop
out
jne
push
push
jb
lds
into
in
pushf
inc
mov
xchg
dec
movs
test
aaa
mov
mov
mov
xchg
les
enter
add
push
xor
jl
loop
fisttp
mov
pop
cld
mov
pop
xchg
cld
push
mov
jne
(bad)
jmp
(bad)
xor
das
xchg
push
(bad)
dec
xor
cmp
mov
test
(bad)
jl
and
adc
outs
push
aaa
mov
xchg
dec
push
popa
pop
icebp
jmp
pop
sub
ret
add
or
(bad)
sbb
sub
jo
mov
mov
adc
fsubrp
aaa
pushf
jecxz
jl
pop
das
fisub
imul
sub
mov
xor
mov
mov
test
and
cmp
imul
push
pop
pop
push
sub
add
in
mov
cmp
add
xor
jne
push
loopne
mov
xor
sub
dec
jb
mov
cmp
in
test
(bad)
fidiv
jb
cmp
sbb
imul
jne
and
sbb
mov
mov
jge
pop
pop
xor
cs
in
push
test
in
in
lds
cmp
aas
inc
jge
scas
push
into
lods
inc
mov
sbb
lods
nop
push
jle
leave
fnstcw
shl
cdq
sub
sbb
cmp
in
(bad)
mov
add
ins
mov
sub
sbb
cmp
jg
push
bound
sar
jl
ja
ret
(bad)
shl
ficomp
call
fcomp
push
push
push
push
inc
test
and
shl
rcr
(bad)
imul
push
jmp
lahf
push
ins
shl
push
add
push
ins
or
(bad)
daa
jecxz
cmp
add
sub
or
jo
ds
cmp
or
or
rol
jg
push
push
mov
mov
les
(bad)
retf
add
sub
mov
mov
aam
xlat
jge
scas
mov
dec
daa
xchg
fnsave
in
jnp
test
mov
dec
sbb
dec
out
mov
dec
test
xor
or
pop
in
xor
push
ins
or
lea
ja
pop
sbb
(bad)
push
sbb
add
push
jle
lods
xor
daa
xchg
cmp
push
test
mov
sbb
js
xchg
sahf
sbb
dec
cmp
inc
pop
test
sbb
fst
retf
pop
stc
jno
pop
push
add
loopne
sub
adc
jae
je
mov
push
repz
mov
jo
pop
inc
cmps
cs
jno
dec
sub
(bad)
retf
aas
sbb
in
adc
mov
xor
add
add
jmp
leave
cs
and
mov
adc
mov
(bad)
mov
and
loope
repnz
mov
(bad)
stos
cmp
mov
mov
stos
mov
test
sbb
mov
cmp
mov
pop
and
or
cli
cmps
inc
and
push
cmp
int3
cmp
lea
sbb
cmp
scas
xor
dec
fs
jo
or
in
cmp
sub
add
and
dec
or
aaa
adc
mov
dec
and
xor
inc
test
jl
jecxz
cmps
and
push
mov
push
pop
cs
dec
and
add
sti
fwait
stos
sub
arpl
push
pop
xlat
pop
push
sub
add
imul
test
call
xchg
xor
push
pop
aaa
loop
sbb
out
xchg
jno
pusha
pop
push
inc
push
mov
jl
cmc
out
adc
jmp
(bad)
addr16
lods
and
pop
arpl
mov
xor
dec
sub
or
add
mov
xor
pop
aas
test
test
addr16
jmp
mov
xchg
add
sbb
sub
js
lahf
test
or
mov
xor
cmp
out
or
pop
mov
jl
xor
aam
inc
sbb
add
pop
sub
nop
ins
dec
jge
shl
test
aam
push
pop
and
clc
mov
rcr
jle
test
add
cmp
sbb
sbb
push
shl
es
mov
jo
and
pop
cmp
je
retf
ret
test
push
das
sbb
and
jge
add
sub
cmp
sub
push
les
fmul
ins
inc
ja
cmp
jmp
in
in
int3
in
sub
cdq
out
dec
popf
push
rcl
push
mov
xor
mov
pusha
mov
mov
push
and
(bad)
aas
mov
jmp
ret
stos
(bad)
pop
stc
jbe
inc
movq
pop
cmp
inc
and
push
mov
inc
pop
test
lods
adc
ret
xchg
aam
xchg
js
inc
adc
repz
dec
mov
nop
popa
stos
inc
jmp
mov
mov
nop
rcr
out
das
lock
mov
rcr
movs
add
(bad)
sbb
sbb
outs
sahf
mov
sub
loopne
cmp
pop
cmp
xchg
cmp
pop
mov
inc
outs
ss
test
jne
push
push
push
mov
ror
jmp
jns
cwde
sbb
push
jbe
add
fimul
fbstp
or
(bad)
adc
aad
(bad)
push
cli
in
xchg
push
mov
popa
add
xchg
movs
sahf
and
inc
push
push
aaa
std
int
sets
icebp
inc
loope
add
(bad)
mov
mov
push
not
adc
lods
inc
jne
mov
mov
out
dec
rol
add
mov
push
call
cmp
mov
or
lahf
mov
in
shl
add
imul
out
add
out
(bad)
xchg
loop
jp
int
ja
iret
dec
inc
scas
dec
imul
aad
mov
or
mov
pop
popa
inc
sti
daa
adc
add
lds
or
out
mov
out
mov
adc
test
add
sahf
ja
mov
dec
adc
sbb
and
ret
mov
jno
pop
push
inc
or
cmps
adc
jecxz
fisttp
shl
neg
ins
dec
stos
cmp
xor
xchg
push
mov
aas
and
sub
inc
clc
mov
ss
and
xor
in
clc
ret
test
push
mov
or
or
into
add
push
aas
inc
cmp
les
sti
les
push
push
dec
hlt
sbb
dec
cmps
hlt
push
xchg
push
icebp
ins
sbb
(bad)
hlt
std
jo
adc
inc
add
dec
jb
enter
cmp
ds
push
xchg
push
xor
sbb
ret
loopne
in
cld
or
test
(bad)
rcl
(bad)
int3
jmp
jo
fiadd
cmp
or
mov
ds
mov
aam
shl
out
jnp
dec
push
push
push
inc
popa
ins
mov
jne
ins
outs
or
arpl
add
and
stos
mov
es
xor
inc
mov
call
jo
push
pop
xor
mov
sbb
push
sahf
punpckhbw
and
adc
gs
and
lods
call
mov
mov
sahf
inc
and
imul
loopne
push
inc
jb
pop
and
xor
or
pop
inc
inc
pop
lahf
push
or
push
(bad)
fsub
mov
add
ins
mov
cmp
cld
push
cmc
adc
sbb
aad
add
mov
adc
cmp
jbe
es
inc
mov
adc
das
movs
mov
jb
lea
fcomp
sub
inc
movs
lods
shl
ret
sbb
mov
pop
mov
xor
push
scas
sub
xor
fisubr
xor
lods
mov
cmp
xchg
add
mov
or
fdivr
xchg
cdq
(bad)
lea
adc
es
adc
repz
mov
sub
in
xchg
retf
mov
mov
xchg
in
mov
and
sub
mov
xor
stos
dec
ror
adc
push
retf
mov
jle
sbb
or
push
add
ret
adc
or
jmp
jg
test
or
or
scas
pop
sbb
jp
lahf
xor
fstp
clc
cmp
je
mov
and
push
imul
(bad)
or
cld
dec
jno
inc
enterw
ret
es
mul
pop
sbb
push
cmps
pop
jl
retf
test
push
mov
jno
cmp
je
sub
in
dec
add
jo
scas
inc
jmp
add
dec
aas
fistp
jne
stos
jb
stc
pop
xor
imul
fisubr
int3
imul
or
loopne
jnp
sbb
cli
and
add
xchg
mov
leave
(bad)
out
adc
or
mov
jbe
mov
or
jge
(bad)
cmp
in
mov
lods
fstp
or
lods
or
icebp
out
xchg
and
sbb
das
add
add
mov
pop
bound
mov
cmp
lahf
(bad)
idiv
(bad)
jb
test
push
sbb
loop
or
inc
push
mov
dec
cmp
mov
outs
enter
movs
cmps
add
mov
push
push
xchg
cmp
pop
lods
lds
pop
aas
loope
popa
cwde
mov
xor
es
rcr
and
pop
shl
aas
in
mov
mov
jnp
xor
push
lea
mov
inc
int3
test
jns
or
loop
inc
fwait
loop
(bad)
add
stos
xor
dec
dec
rcl
int3
pop
pop
xor
nop
jge
lea
mov
mov
nop
cmp
or
xor
(bad)
jo
jg
je
and
cmps
test
adc
jbe
sbb
adc
test
out
aam
pop
push
push
inc
clc
push
add
push
pop
mov
je
sub
shr
and
test
jae
cmps
sub
push
push
fmul
mov
sub
out
pop
daa
xor
pop
or
mov
and
lods
jne
xor
xlat
pop
push
arpl
inc
or
ds
lock
dec
stc
push
push
and
and
in
mov
in
call
ret
pop
xor
and
add
mov
es
test
push
and
(bad)
sbb
xlat
shl
and
inc
mov
cmps
and
or
dec
jne
push
cmp
inc
mov
xchg
inc
jl
adc
jle
inc
dec
jmp
inc
jmp
pop
ret
mov
sar
lahf
push
les
cwde
mov
stos
in
aaa
pushf
call
adc
pop
hlt
mov
mov
call
add
pop
or
ds
cmc
pop
pop
test
shl
fiadd
(bad)
sub
or
cmp
cwde
dec
or
or
fstp
pop
xor
sbb
fstp
int
jne
retf
loope
add
inc
stos
xor
(bad)
js
lods
push
das
mov
mov
pop
jge
push
clc
int3
add
into
dec
dec
add
xchg
xor
push
aas
pop
pop
pop
or
mov
aas
sub
add
iret
icebp
sbb
adc
or
lods
sar
jge
sahf
std
icebp
mov
(bad)
ins
lea
loopne
sbb
push
jge
out
mov
adc
scas
test
add
shr
jecxz
xor
push
cwde
push
mov
sbb
xchg
mov
pop
dec
mov
mov
rol
sar
or
push
add
out
sub
mov
das
add
dec
rol
mov
fnstenv
add
push
out
add
add
lea
or
(bad)
call
cmp
pop
adc
in
mov
or
lea
cmp
stc
adc
scas
push
xchg
nop
data16
(bad)
jl
dec
or
lea
cmp
xor
adc
xchg
out
nop
jmp
ret
js
in
loope
adc
rcr
xchg
push
mov
sahf
sub
and
call
in
mov
sub
out
call
out
and
lock
adc
mov
adc
or
data16
mov
mov
mov
pop
dec
push
push
pop
mov
or
or
cmp
push
jmp
aas
jmp
(bad)
mov
push
pop
les
and
aas
or
call
mov
pop
call
pop
and
push
or
add
or
inc
sbb
loop
add
mov
jl
sub
push
lahf
(bad)
cmp
test
push
xlat
push
xor
sub
cmp
aaa
mov
inc
inc
dec
int
jmp
mov
or
mov
fnstcw
(bad)
fdivr
xor
mov
add
pushf
and
stos
in
xchg
and
(bad)
adc
icebp
ret
jmp
inc
hlt
cmp
lea
lea
push
loopne
mov
cmp
jb
shr
shr
add
add
fdivr
repz
add
inc
aaa
push
sub
add
sbb
sub
stos
adc
push
push
xor
push
ret
pop
jmp
xchg
call
loopne
lahf
mov
pop
inc
mov
xchg
je
jmp
adc
loope
ret
cmp
mov
aad
ror
std
ss
dec
mov
adc
push
jmp
mov
push
push
adc
xor
cs
dec
push
out
and
add
push
mov
adc
or
push
mov
mov
pop
inc
ins
cmp
fidivr
xor
fdiv
push
lea
shr
mov
inc
jle
dec
mov
or
push
xchg
or
sbb
adc
dec
jne
pop
ret
call
mov
pop
mov
cmp
push
aas
loopne
inc
pop
lock
(bad)
not
pop
aam
ret
and
ss
or
add
cmp
pop
add
push
(bad)
sbb
lock
add
(bad)
and
inc
ror
xlat
add
das
xchg
(bad)
call
mov
icebp
fistp
inc
xor
(bad)
and
sti
(bad)
(bad)
push
int3
add
cli
not
xor
add
lea
sti
mov
jge
or
repnz
(bad)
and
cmp
jge
or
add
(bad)
data16
scas
(bad)
cmc
push
loope
ins
cli
mov
and
iret
inc
mov
cvtpi2ps
xchg
xor
(bad)
fdiv
int
xor
adc
test
jae
cld
sbb
add
(bad)
imul
addr16
(bad)
scas
test
jo
mov
call
mov
and
nop
imul
jno
std
fbld
fsubrp
outs
stc
(bad)
hlt
and
or
and
loopne
mov
cmps
data16
sbb
ss
mov
hlt
push
and
mov
cs
mov
call
idiv
pop
(bad)
call
aam
mov
ror
or
js
sub
ss
stc
rol
mov
imul
stos
(bad)
mov
cs
mov
std
int
rcl
pop
adc
(bad)
(bad)
mov
ret
loopne
mov
xchg
stc
mov
mov
loop
adc
add
jmp
mov
and
cs
outs
jbe
(bad)
loop
enter
or
stc
out
mul
loopne
call
and
stc
in
hlt
(bad)
pop
aaa
ret
adc
out
loope
imul
xchg
gs
das
in
adc
inc
in
jmp
and
clc
std
cdq
add
mov
fld
outs
addr16
fwait
cwde
imul
in
mov
mov
loopne
ret
scas
std
repz
cs
inc
cmp
inc
retf
xchg
out
(bad)
xor
pop
fadd
fld
icebp
sub
popa
popf
ins
scas
adc
cli
mov
hlt
data16
in
shr
(bad)
xor
movs
int3
hlt
pop
cwde
dec
fimul
(bad)
(bad)
iret
xor
xor
add
pop
stc
(bad)
sub
scas
adc
mov
retf
sub
in
xor
mov
retf
add
push
je
stc
add
jle
sub
mov
icebp
xor
xor
ds
daa
mov
je
stc
int
mov
out
aam
(bad)
fsub
fidiv
fadd
sbb
jg
scas
rcl
(bad)
stc
xor
shr
in
sbb
in
(bad)
mov
ret
int
clc
jl
pop
mov
xchg
push
lods
(bad)
into
inc
or
repz
push
stc
mov
mov
xor
inc
sti
xor
ja
and
dec
psubb
cli
sar
mov
xor
ret
pop
pop
fnstenv
cs
(bad)
lods
mov
lahf
in
hlt
out
inc
rcr
test
repnz
fmul
test
clc
cld
mov
sub
aam
inc
add
lock
or
iret
repnz
(bad)
retf
or
cwde
int3
mov
cmp
sti
psllq
enter
adc
inc
mov
sbb
(bad)
(bad)
aam
shl
pop
xor
test
jl
cli
iret
or
outs
mov
xchg
rol
cmps
mov
int3
inc
cmp
dec
or
inc
cmp
cmp
je
mov
cli
push
or
push
enter
daa
(bad)
push
pop
jo
mov
shl
or
push
js
adc
mov
and
dec
jne
xchg
ss
cmp
inc
cli
sbb
das
jg
xor
xchg
aas
stc
imul
xacquire
jecxz
push
test
sbb
cwde
xor
jbe
loope
and
cwde
and
mov
cmp
or
fsubr
loopne
cmp
(bad)
pop
add
rcr
test
sbb
push
enter
or
and
dec
cmp
and
adc
mov
pop
mov
mov
or
je
pop
sub
sub
gs
push
cmp
mov
dec
push
push
daa
lods
xchg
jmp
sub
adc
push
push
push
je
sahf
push
jg
push
ss
jle
or
data16
mov
cmp
push
push
push
test
and
(bad)
nop
dec
jnp
add
sti
push
test
adc
push
movs
test
push
push
movs
aaa
int3
add
cmp
cld
push
sub
push
adc
inc
shr
jo
cld
pop
leave
outs
xchg
mov
pop
add
mov
xor
xchg
inc
(bad)
push
out
push
push
out
sbb
pusha
in
pop
sbb
push
mov
push
cli
rol
movs
push
mov
mov
push
mov
mov
pop
add
cmps
(bad)
gs
push
sbb
cmp
add
call
imul
inc
ins
addr16
pushf
shl
or
and
fadd
pop
movs
call
dec
push
dec
mov
xchg
loopne
inc
call
xchg
mov
dec
retf
loope
data16
loope
inc
and
mov
sbb
mov
int3
lock
xchg
sub
mov
or
icebp
enter
cli
sub
enter
fmul
add
je
dec
jae
lock
pop
pushf
xor
aam
ins
(bad)
mov
test
or
cmp
mov
sbb
shl
lods
and
sbb
and
test
push
imul
push
dec
test
xor
mov
mov
mov
mov
push
fstp
out
mov
scas
or
sbb
mov
call
mov
les
mov
adc
mov
mov
push
mov
sub
or
mov
cmc
fadd
imul
lea
loopne
bound
lea
mov
cmc
add
dec
jmp
inc
not
push
aam
leave
test
inc
sbb
leave
mov
push
jb
pushf
xor
cli
sbb
daa
pop
in
popa
add
cmp
movs
dec
not
int
call
xchg
sub
pop
(bad)
shl
cmp
cs
jmp
test
dec
or
sbb
cmp
and
aas
idiv
adc
sbb
mov
idiv
mov
fdivr
cmc
mov
enter
imul
dec
adc
js
mov
pop
test
lods
bound
or
imul
or
cdq
pop
cmps
push
dec
and
fild
call
pop
enter
jecxz
addps
cli
popa
sbb
jbe
inc
ja
movs
enter
mov
push
sub
pop
in
inc
and
add
je
adc
aas
xchg
retf
add
jmp
jnp
pop
jg
sbb
sub
loope
nop
jecxz
mov
inc
mov
or
dec
sbb
xor
push
test
and
mov
sub
push
repnz
dec
cmp
out
mov
jg
mov
sub
test
test
push
je
mov
adc
or
adc
mov
lods
cmp
xor
std
push
aas
repnz
xchg
jnp
xor
lods
mov
mov
(bad)
(bad)
xchg
xor
xchg
cmps
stos
mov
call
int3
adc
ds
dec
mov
push
pop
and
pusha
call
push
repnz
xchg
pusha
out
popa
fistp
daa
loope
push
pusha
or
(bad)
ret
jns
or
dec
pop
push
pop
movs
pushw
sbb
sbb
fnstcw
push
inc
or
call
push
push
movs
fst
sbb
push
push
mov
daa
cmp
push
sub
and
add
fmul
and
sbb
and
retf
xor
push
lds
imul
xchg
fistp
or
in
push
sbb
les
dec
sbb
loope
or
hlt
mov
loope
inc
dec
xchg
int3
xor
add
mov
test
call
call
pop
aas
jg
cwde
nop
cmps
pop
imul
dec
js
sub
cld
add
add
repz
push
adc
jns
pop
pop
xor
into
nop
cmps
pop
outs
add
xor
pop
push
sub
push
adc
add
sub
adc
mov
or
adc
cld
fisttp
enter
sub
(bad)
jmp
movs
dec
inc
retf
push
test
sub
xor
nop
stos
jnp
or
ret
div
pop
inc
mov
pusha
into
dec
or
stc
add
hlt
scas
xor
imul
add
scas
inc
cmps
mov
push
adc
or
cli
mov
push
jmp
or
lea
mov
jmp
push
sar
dec
imul
push
imul
push
and
push
sub
je
cld
jne
adc
(bad)
ss
push
pop
fstp
xor
(bad)
les
adc
mov
in
and
sbb
jmp
dec
in
xor
je
mov
jno
out
rcr
jne
add
popa
or
loop
shr
retf
dec
popa
mov
sahf
cld
psubb
add
sub
xor
push
rol
in
and
or
add
add
adc
and
fstp
push
jge
rol
dec
adc
and
or
pop
dec
jmp
pop
jmp
outs
add
dec
adc
rol
std
add
cmp
jbe
rol
loope
stc
mov
sbb
xchg
lods
mov
ss
pop
and
and
dec
shl
jnp
clc
mov
neg
adc
jmp
pusha
loop
data16
rep
lods
rol
inc
push
mov
jb
xor
clc
enter
push
cmp
loopne
fisubr
hlt
and
inc
push
and
mov
not
sbb
mov
mov
or
lods
adc
xlat
(bad)
mov
dec
xchg
add
add
addr16
add
add
(bad)
or
push
lods
push
movs
pushf
iret
(bad)
jns
xchg
mov
inc
(bad)
in
cmp
repz
in
in
lock
repz
hlt
clc
clc
cld
stos
cmp
test
add
iret
imul
sbb
jmp
xor
and
mov
ret
nop
inc
pop
sbb
fild
mov
push
lea
jl
cld
pop
ror
and
std
(bad)
cld
out
ins
adc
out
ins
sub
fst
gs
sub
pop
nop
or
into
jnp
movs
push
int3
fiadd
jl
mov
mov
mov
add
popa
inc
push
out
push
add
nop
dec
dec
test
pop
add
loop
out
mov
sub
xor
out
sahf
cmp
push
arpl
aaa
out
sahf
out
sbb
sbb
out
sahf
adc
adc
or
add
sub
out
int
jl
test
xchg
test
aaa
mov
add
pop
mov
daa
ja
test
rcr
push
mov
adc
jmp
sar
dec
pop
ret
adc
inc
stos
jmp
dec
jl
inc
pop
jb
dec
cmps
sub
dec
mov
inc
xor
dec
push
movs
nop
inc
(bad)
sub
in
or
pop
xor
add
pop
xor
or
dec
into
adc
ret
add
cmp
jb
push
push
add
sub
(bad)
aas
nop
ds
sar
push
lea
call
push
push
stc
(bad)
cmp
stos
xor
mov
add
mov
shr
pop
loope
sbb
pop
fiadd
and
or
or
push
push
ins
or
xchg
and
lods
pop
jo
into
jecxz
dec
cld
ficomp
pop
mov
in
retf
shr
push
mov
push
lahf
pop
push
add
neg
sbb
sbb
mov
push
pop
mov
inc
(bad)
pop
les
push
test
daa
inc
xchg
dec
ins
mov
or
and
sbb
cmp
or
inc
push
test
jne
dec
addr16
mov
xor
push
aas
outs
arpl
shl
mov
test
mov
adc
add
add
or
dec
inc
lea
xor
mov
sbb
loopne
push
outs
jae
add
stos
mov
inc
adc
cmp
pusha
jo
mov
dec
add
(bad)
shr
xor
push
daa
pop
sbb
aam
test
mov
retf
or
fist
sbb
inc
cmp
test
retf
inc
sar
inc
sbb
pop
sub
push
push
sar
inc
cmp
push
cmp
lock
jmp
and
movs
lods
div
shl
push
push
pop
add
and
in
bound
add
cmps
cmp
(bad)
sub
das
pop
xor
inc
popa
xchg
int3
mov
imul
inc
sub
nop
or
js
cmp
out
rcl
add
add
pop
scas
adc
rcl
je
ret
cmp
mov
ret
pop
mov
mov
push
ja
std
imul
out
fmul
lods
or
lahf
jne
popa
retf
outs
ja
in
hlt
jo
or
pop
icebp
mov
add
sti
icebp
ss
jo
jo
push
fadd
push
and
call
jne
cmp
push
(bad)
icebp
inc
stos
pop
jne
pop
inc
pop
jmp
jno
test
push
cmp
nop
add
aas
cwde
add
jne
or
cmps
iret
mov
or
push
inc
pushf
push
scas
pop
loope
push
cmps
fist
call
nop
mov
jno
int3
jmp
je
les
dec
test
pop
sub
call
pop
out
imul
shr
push
push
pop
adc
int3
push
jb
pop
ret
adc
out
pop
sbb
movs
sub
ins
xchg
jne
dec
jae
arpl
xor
pop
mov
inc
xchg
lds
call
loop
stos
jb
aaa
mov
sar
call
xlat
sbb
ins
or
and
xchg
jp
push
or
push
fistp
scas
ss
test
test
dec
pop
jno
mov
or
cmp
jae
shr
add
(bad)
jb
into
push
ficomp
or
shl
shr
and
add
sub
in
add
iret
pop
sub
push
or
or
dec
jl
mov
xor
test
ret
fdivr
ja
push
jmp
loope
or
jge
fmul
fadd
fistp
adc
dec
mov
sbb
push
ins
(bad)
pop
call
lahf
xchg
test
jp
add
push
je
mov
stos
mov
stos
outs
in
sub
cmps
icebp
mov
or
adc
daa
das
fld
add
out
loopne
loopne
loopne
add
and
push
or
push
jbe
adc
adc
jle
add
fdivr
je
dec
stos
cmp
dec
jne
xchg
pop
pop
ret
sub
ficom
sbb
cmp
sbb
imul
in
popa
sbb
int3
pop
mov
xor
test
or
or
fidiv
fs
pop
inc
(bad)
movs
rol
cmp
test
cmp
stos
(bad)
add
push
outs
mov
and
cld
inc
test
mov
dec
or
enter
ins
and
sbb
push
add
sub
push
adc
je
mov
mov
sbb
repz
xor
hlt
lahf
ret
lea
inc
sub
pop
leave
xor
add
repz
pop
in
add
add
test
test
add
jp
jno
xchg
add
inc
scas
in
mov
pop
and
push
push
push
pop
enter
pop
pop
inc
xchg
ja
or
or
mov
cld
add
push
repnz
or
fisttp
push
pop
and
push
or
out
ror
xchg
or
and
xor
iret
enter
push
(bad)
shld
adc
push
pop
adc
or
leave
jae
mov
cmp
cmp
adc
adc
adc
adc
ror
adc
pop
fs
push
inc
jb
cmp
pop
pop
and
jns
out
sbb
xchg
sbb
xchg
mov
cmp
fdiv
jb
iret
sbb
mov
jb
sbb
or
je
push
sbb
iret
xchg
cmp
jo
xor
sbb
xchg
cmp
inc
neg
pop
push
(bad)
inc
jne
add
add
sub
cmp
jae
outs
cmp
mov
xchg
add
and
mov
call
(bad)
scas
adc
push
in
push
in
imul
call
xor
out
xchg
in
out
mov
out
mov
cmps
pop
aas
sub
call
adc
inc
xchg
iret
enter
cmp
cmp
jb
push
jmp
jmp
and
and
in
in
xchg
aad
mov
in
cmp
mov
pop
and
out
xchg
out
or
movs
mov
lock
xchg
sub
lock
icebp
icebp
xchg
addr16
das
repnz
sbb
pushf
call
or
out
push
(bad)
std
cmc
cmc
cmp
cmps
div
mov
sbb
test
xchg
clc
clc
sbb
or
aas
stc
stc
and
xchg
cmp
cli
cli
add
iret
sti
sti
fdivrp
cld
mov
je
cld
push
push
nop
shl
out
leave
jnp
std
xor
sbb
inc
ret
(bad)
xor
outs
lahf
retf
(bad)
cld
dec
jmp
ror
rol
inc
scas
sahf
sbb
pop
cmp
lods
add
jecxz
jecxz
scas
in
pop
xor
push
retf
stos
pop
inc
cmp
aam
out
fisub
add
scas
nop
mov
(bad)
sti
dec
adc
jo
or
mov
daa
xchg
pop
push
and
cdq
or
or
or
(bad)
cli
out
out
out
xchg
jns
xor
cmp
(bad)
cli
or
aas
repz
sbb
xchg
push
pop
repnz
cli
stc
(bad)
movs
test
stc
div
sbb
xchg
xchg
clc
jns
mov
push
stc
push
dec
xor
stos
or
or
cmp
jmp
mov
cmp
out
or
stos
cmp
or
cwde
or
loop
loop
add
arpl
loope
leave
and
clc
and
or
out
jmp
mul
in
repnz
neg
mov
jnp
jmp
push
test
pusha
leave
pop
test
xchg
leave
or
scas
test
pop
nop
test
repnz
das
test
adc
loope
not
and
mul
out
div
test
dec
stos
nop
jo
dec
loope
repnz
scas
mov
pop
or
and
jmp
xor
cmc
cli
cli
xchg
pop
push
sub
sbb
or
or
xlat
inc
pushw
(bad)
data16
add
shr
sbb
popa
push
mov
mov
loope
(bad)
jp
mov
pop
hlt
dec
xor
cmp
mov
hlt
loopne
rcl
pop
jns
mov
repz
repz
and
test
jmp
mov
adc
ror
cs
or
in
jne
cmp
in
(bad)
repnz
ror
cmps
repnz
test
icebp
cmp
inc
repnz
stos
mov
repnz
pop
repnz
test
icebp
cmc
cmc
and
inc
lea
pop
jb
icebp
icebp
cwde
icebp
cs
add
or
arpl
mov
sbb
adc
scas
adc
or
inc
jb
mov
test
push
scas
lock
mov
(bad)
push
sub
ffreep
push
inc
jp
push
cmp
aaa
inc
cmp
push
sti
cmp
cmp
int
xchg
mov
lods
or
mov
sbb
push
dec
icebp
dec
add
movs
xchg
dec
add
adc
faddp
imul
fstp
add
enter
sub
ins
xchg
and
inc
adc
sub
call
sub
and
int
repz
in
sub
pop
stos
and
out
call
(bad)
imul
popf
and
push
into
jnp
js
call
test
push
inc
adc
imul
sub
cmp
mov
fdivrp
adc
(bad)
cli
add
xor
fld
sub
mov
pop
jmp
loope
dec
add
or
mov
push
rep
mov
dec
jmp
ret
loopne
js
fst
adc
(bad)
test
xlat
loopne
jg
pop
fbld
bound
ss
jne
xor
dec
je
fbld
push
add
hlt
xchg
shl
or
mov
fcmovnbe
jmp
or
or
inc
js
or
pop
jp
add
pop
je
fcom
div
or
inc
mov
jbe
add
jmp
push
cmp
in
jbe
push
dec
mov
sub
mov
cmp
jb
sbb
retf
or
lods
or
push
push
shr
and
fcomp
sub
pop
and
jmp
jmp
ja
xor
push
pop
mov
adc
xor
push
(bad)
sub
pop
add
pop
lods
jle
push
cs
mov
test
pop
or
inc
rcr
ror
(bad)
ja
jb
(bad)
pop
jae
shl
push
push
(bad)
imul
(bad)
inc
imul
sbb
jg
jl
or
and
add
cwde
adc
add
or
jnp
lea
rcr
mov
sub
mov
loopne
cli
xor
retf
adc
add
xchg
or
push
jns
scas
test
jbe
jg
jbe
push
daa
sub
seto
cmp
mov
adc
mov
cld
mov
ins
pop
test
fst
imul
mov
xor
fldcw
push
or
sub
pop
add
sub
add
add
add
and
test
jne
jne
push
mul
add
add
fisubr
add
add
and
push
dec
pop
add
pop
mov
je
stos
adc
jne
add
lods
(bad)
jmp
rol
in
int3
loope
dec
mov
lea
dec
adc
inc
lods
xor
lock
clc
or
loopne
sbb
sbb
or
push
push
popf
xchg
cmp
cmps
(bad)
fidivr
xor
sub
sbb
and
js
inc
or
sbb
test
jno
loope
pop
or
jl
and
dec
or
jne
and
pop
(bad)
ror
repz
ret
jmp
add
ret
in
pop
pop
xor
ins
xor
jle
out
repz
jo
jns
rol
std
arpl
or
pushf
es
ret
adc
and
jp
dec
sbb
stos
pop
sub
je
inc
loopne
nop
dec
mov
sub
fisttp
sbb
movntps
call
fidiv
aam
adc
out
cmp
push
push
or
retf
(bad)
pop
(bad)
jmp
or
(bad)
xchg
in
pop
(bad)
test
add
mov
jne
add
and
cld
stos
jg
add
rol
test
test
call
xor
inc
les
add
sub
add
retf
in
ret
adc
std
cld
inc
std
(bad)
pusha
cmp
ja
push
push
or
and
push
sbb
sbb
push
push
pop
dec
xchg
jo
push
jle
div
xchg
dec
mov
ret
call
es
aad
clc
push
pop
cmp
mov
test
xor
push
jmp
inc
std
or
es
jbe
push
jl
or
outs
js
sub
push
popa
adc
nop
inc
cmp
repnz
sbb
jns
mov
or
jmp
std
jmp
and
repnz
or
sbb
mov
fnstcw
cdq
push
mov
xlat
in
cli
mov
loope
xor
push
daa
test
fist
paddusw
jo
data16
and
(bad)
in
sbb
mov
lods
mov
retf
gs
ret
test
sub
pusha
add
adc
outs
xchg
(bad)
test
or
sbb
pop
mov
jecxz
push
sbb
adc
push
jle
xchg
je
test
dec
push
mov
clc
sar
rol
mov
scas
addr16
or
in
cmp
inc
loopne
daa
jle
lods
and
xor
xchg
jbe
cmp
retf
neg
dec
push
cmp
jne
cmp
jne
jl
je
or
int
mov
sbb
sbb
jne
call
or
outs
cli
enter
push
je
dec
es
add
mov
cmp
mov
and
add
call
js
rep
mov
push
mov
mov
mov
js
mov
pushf
jo
xchg
pop
je
aam
or
je
or
je
or
cs
mov
ret
dec
and
inc
pmaxub
je
jbe
and
mov
clc
xchg
jbe
imul
mov
cli
adc
(bad)
add
cmp
cmp
je
cmp
jb
aam
sbb
jg
jbe
ja
jp
(bad)
jmp
jge
je
sub
sar
cmp
jbe
push
push
mov
pop
jmp
test
sub
cmp
mov
and
or
sub
cld
jbe
mov
adc
sbb
enter
and
cmps
cli
(bad)
mov
push
pop
lea
mov
mov
sahf
inc
cld
jne
das
and
jmp
mov
leave
mov
aam
enter
adc
pusha
sbb
sbb
dec
sbb
mov
mov
push
retf
xchg
push
add
inc
test
in
mov
mov
mov
jmp
or
inc
or
pop
cmp
pop
push
push
popa
jmp
add
cmp
jmp
stc
xchg
fwait
add
push
or
inc
or
pop
js
sar
cmp
push
repz
add
pop
add
push
add
out
cdq
and
sub
pop
test
jge
les
push
iret
das
mov
js
push
push
scas
xchg
mov
xor
fmul
lds
inc
adc
mov
or
jecxz
dec
mov
test
call
dec
in
(bad)
out
jmp
mov
loop
and
lods
in
idiv
and
repnz
ja
fld
inc
jno
lahf
dec
or
xchg
add
popa
daa
dec
pop
sub
leave
and
xchg
stos
imul
or
aam
dec
adc
sub
test
mov
cmps
jae
imul
loop
scas
jge
not
iret
push
jo
call
push
nop
and
ins
sub
out
sub
push
cmps
xor
xchg
push
cdq
push
adc
scas
icebp
mov
jp
stos
or
push
loopne
jbe
push
and
ficom
or
jmp
lods
cmps
fld
push
mov
or
imul
sbb
push
in
aad
mov
jo
cwde
mov
mov
xchg
das
adc
jle
pop
push
cli
div
add
imul
psubq
dec
jle
xor
pusha
ret
aas
popf
or
inc
xchg
pop
cmps
dec
add
ins
test
inc
pop
push
out
cdq
pop
lock
shr
jbe
jmp
xchg
je
dec
rcr
sar
jne
cmp
je
dec
loope
xor
xor
je
pop
pop
cli
stos
dec
pop
mov
adc
jne
sbb
(bad)
imul
xchg
add
add
outs
pop
fmul
jne
or
push
inc
fsubr
lock
mov
sub
mov
dec
ror
add
lock
(bad)
js
div
shr
mov
dec
pmullw
(bad)
sbb
push
sbb
jnp
mov
xlat
push
(bad)
push
popf
mov
sub
fnstcw
jne
out
or
push
js
push
mov
shl
adc
mov
mov
clc
add
(bad)
inc
cwde
repnz
pop
shl
add
mov
add
push
movzx
std
pop
std
add
mov
sar
cmp
push
push
imul
add
add
(bad)
cmp
xchg
lea
mov
and
cmp
mov
retf
adc
daa
sub
popa
add
jmp
aas
sub
or
(bad)
jne
mov
lds
adc
cmc
mov
pop
sbb
push
pop
inc
or
push
es
adc
mov
loopne
cmp
or
pop
cmp
sbb
ficomp
lods
(bad)
mov
push
xchg
mov
clc
pusha
btc
sbb
lds
je
cmp
ins
and
pop
js
inc
xor
loopne
je
push
jl
push
out
add
es
bound
jmp
mov
mov
sub
sub
aam
ins
int
inc
dec
mov
repz
gs
aam
aam
and
mov
or
ja
imul
inc
or
fadd
shr
pop
push
mov
je
sbb
pop
jle
dec
xchg
test
mov
cs
and
inc
dec
jmp
das
sti
cmp
jb
cmp
xchg
push
sbb
push
ins
sub
jg
sbb
sub
add
jmp
cmp
mov
mov
dec
or
xor
icebp
test
fidiv
or
mov
jne
sub
jge
xor
dec
adc
cmps
dec
ins
shl
popa
cmp
ja
enter
fst
or
or
sub
(bad)
scas
push
sub
es
js
jg
or
jge
add
inc
mov
push
mov
mov
pop
pusha
ret
push
or
inc
cmps
jmp
test
mov
and
inc
sub
mov
push
ret
das
add
mov
call
inc
ins
repnz
jo
out
scas
xor
sahf
loop
cmp
and
(bad)
addr16
repnz
mov
lods
and
jge
fdivr
jmp
cmps
sbb
je
ud0
je
push
add
test
jne
push
popf
fisub
getsec
sbb
(bad)
push
rol
cli
add
xchg
and
loope
xchg
mov
je
jne
add
push
jg
sub
imul
loopne
jmp
mov
adc
mov
in
and
sub
or
cs
pop
rol
push
push
mov
inc
dec
xor
push
or
fadd
mov
(bad)
fbstp
loope
and
test
mov
jle
push
push
xlat
dec
and
movd
jns
std
add
or
jo
popw
sbb
mov
hlt
inc
dec
outs
int
or
call
hlt
pop
inc
inc
je
jmp
cmp
ror
mov
pop
mov
mov
(bad)
inc
push
push
pop
imul
fsub
jo
nop
sahf
cmp
cmp
add
add
cmp
js
gs
adc
or
inc
mov
test
das
cmp
jne
lds
mov
sbb
loop
shr
cmp
je
xor
adc
clc
xor
lds
xor
popf
push
push
jae
loop
xchg
mov
add
mov
fdivr
cmps
popa
inc
sahf
push
call
or
or
add
out
lods
mov
or
sub
cmps
push
sub
adc
jl
pop
lods
and
inc
popa
in
sub
jne
lods
adc
retf
jne
fsub
mov
data16
into
mov
movs
jge
push
add
in
arpl
and
js
stos
test
nop
shr
(bad)
mov
fst
jle
push
shl
xor
add
cld
cmp
loope
jae
hlt
pop
test
ss
sbb
jmp
mov
push
jl
cmp
adc
call
movs
jae
cs
sbb
jl
and
jmp
xor
lock
daa
loop
cmps
loopne
ficom
rcr
add
cmc
sbb
push
push
in
rol
es
mov
(bad)
dec
sub
fwait
out
out
cld
std
add
js
mov
dec
jo
call
cmp
pop
sbb
les
leave
ins
int3
mov
das
push
inc
xor
inc
dec
stc
shl
nop
xchg
or
ror
inc
mov
adc
enter
sub
shr
push
mov
and
push
ret
and
(bad)
push
xor
fistp
dec
je
dec
popa
outs
adc
pop
test
mov
jl
push
and
mul
inc
or
jmp
dec
push
mov
jno
sub
jne
lock
mov
out
fucompp
mov
out
ins
or
scas
and
loop
or
add
(bad)
or
cmps
cmp
adc
aaa
add
sub
xchg
cwde
add
outs
jecxz
(bad)
(bad)
out
shr
pop
cmp
jbe
jg
pop
push
mov
rol
push
xchg
leave
jnp
shr
mov
pop
or
ffreep
daa
xchg
js
sbb
jne
cmp
je
clc
cmp
and
rol
mov
jb
sbb
(bad)
dec
inc
xchg
jp
cmp
popf
push
mov
fild
sub
or
mov
add
ret
mov
out
adc
add
add
push
or
loopne
jmp
lea
(bad)
jmp
test
mov
jge
loop
add
jmp
mov
je
push
push
and
clc
(bad)
es
or
sbb
sub
pop
add
or
mov
call
test
jbe
dec
adc
mov
cmp
scas
jmp
cmc
out
outs
sbb
mov
xchg
mov
mov
sbb
inc
loope
cmps
les
enter
xor
jne
test
je
adc
push
push
adc
mov
iret
inc
shl
xchg
js
or
icebp
int3
leave
hlt
fimul
inc
mov
js
xchg
push
jmp
clc
sar
pop
add
sub
in
sub
les
and
pop
hlt
jb
sbb
loopne
sbb
fnstenv
jle
hlt
or
add
(bad)
and
jmp
outs
pop
or
mov
cmp
push
pop
out
loope
in
iret
enter
ins
sti
or
add
fsubr
dec
jmp
inc
enter
fimul
pop
push
adc
mov
mov
dec
inc
ins
sub
adc
lock
or
dec
fadd
fs
xlat
and
dec
jmp
test
outs
and
jmp
loop
pop
mov
jp
cmp
adc
sub
into
mov
adc
aas
push
bound
cmps
cmp
cmp
cmp
ins
xchg
adc
call
cmp
fiadd
test
mov
mov
cmp
jne
or
cmp
push
in
sbb
inc
add
sub
add
out
add
add
ret
nop
pushf
rol
push
div
push
mov
add
mov
movs
mov
mov
rcl
push
mov
in
cmp
push
retf
jnp
mov
aaa
shl
sbb
rol
pop
sbb
sub
es
xbegin
ficom
sub
jg
ret
cmp
jge
mov
push
sub
shl
cmps
addr16
dec
mov
push
or
or
test
sub
jge
lods
dec
xchg
mov
sub
mov
push
enter
push
(bad)
jecxz
add
inc
xor
xchg
sar
shl
into
cmp
sub
add
jb
iretw
lock
or
sar
push
aam
push
dec
daa
pushf
xor
mov
mov
bound
hlt
shr
adc
rol
sar
ror
mov
or
add
xor
dec
shl
adc
sti
ins
sar
add
jmp
cmp
add
bound
shl
shl
jmp
arpl
imul
cmp
je
pop
into
or
test
out
test
in
fiadd
icebp
jmp
je
sbb
or
add
push
ror
pushf
pop
jno
dec
pop
sub
add
or
outs
dec
je
adc
das
or
out
lock
pop
mov
cld
or
adc
pop
stc
(bad)
out
js
pop
adc
and
push
test
je
test
adc
add
int3
jne
add
add
mov
dec
xor
sti
test
add
pusha
push
outs
adc
rcl
pusha
xchg
and
(bad)
fadd
shl
push
mov
retf
pop
add
inc
aas
adc
ret
xchg
add
or
inc
in
add
and
mov
inc
rcl
pop
and
jb
sar
sub
or
cwde
pusha
cmp
enter
sub
sub
add
inc
push
push
push
add
add
push
dec
dec
xor
sbb
clc
push
mov
mov
inc
xor
rcr
add
inc
ror
aaa
cdq
xor
sub
xchg
jbe
add
adc
jle
pop
xor
cmp
aad
and
es
dec
call
inc
add
jbe
ror
popf
gs
push
lea
test
jns
adc
adc
push
pop
into
repz
mov
jbe
sub
mov
xlat
lds
pop
mov
rsqrtps
cmp
jge
(bad)
mov
not
mov
mov
sub
xor
xor
rcl
xchg
scas
push
dec
push
adc
or
and
jge
adc
cmp
jmp
mov
adc
add
and
shl
aaa
sbb
pop
(bad)
je
iret
neg
jp
sahf
and
rol
jmp
add
adc
adc
sbb
sbb
(bad)
push
test
jb
xchg
mul
cmp
mov
sub
cli
lea
or
(bad)
and
dec
xor
es
jmp
adc
adc
dec
pop
inc
sbb
pop
imul
leave
pop
cmc
mov
pop
cmp
mov
mov
cwde
jl
imul
sub
stc
loopne
adc
pusha
dec
pop
or
mov
push
pushf
push
ins
jmp
push
inc
push
or
fidiv
je
and
inc
pop
inc
sahf
inc
cmp
dec
or
inc
jmp
or
cmp
mov
ja
push
or
dec
push
push
pop
int3
push
inc
lea
xor
stc
pop
or
retf
push
inc
cmp
jb
or
inc
push
out
icebp
lock
adc
mov
scas
cmp
jmp
push
jb
jno
mov
push
adc
xchg
add
push
hlt
add
not
and
push
clc
push
push
push
push
in
daa
test
and
adc
xchg
jmp
mov
cmp
jg
jl
cmp
adc
mov
add
push
test
in
rol
lock
inc
push
loopne
or
rcr
fisttp
cs
retf
int
fs
mov
test
jl
mov
add
hlt
outs
pusha
add
sbb
inc
mul
shr
and
(bad)
pop
(bad)
cmp
data16
mov
nop
xchg
test
cdq
sub
jmp
push
arpl
pop
test
lds
push
cmp
cmp
je
popf
je
adc
gs
pop
mov
push
push
push
clc
mov
pusha
ja
loop
stc
sbb
dec
and
stos
dec
jp
sbb
stos
cmp
mov
pop
in
or
cmp
les
sar
aaa
(bad)
inc
add
add
sub
fisub
xor
sbb
xor
or
call
sbb
enter
sub
fisttp
add
push
cdq
pop
idiv
add
add
cmp
pop
daa
or
dec
jg
jl
out
lea
into
xor
dec
dec
push
push
into
je
jo
les
push
jae
fcom
pop
inc
xor
sub
jge
adc
aam
push
add
sub
sub
outs
iret
in
sub
cmp
pop
sbb
mov
add
sub
push
mov
dec
mov
add
cmp
cmp
mov
mov
add
or
dec
in
(bad)
mov
mov
ja
pop
iret
jl
mov
jg
cld
xchg
push
add
shr
push
adc
ss
xchg
call
leave
call
push
fidiv
aam
inc
xchg
jp
adc
mov
stos
jmp
push
pop
push
pop
cmp
mov
mov
pop
ret
mov
pop
out
add
movs
or
hlt
push
push
cwde
push
lods
cmp
jnp
inc
adc
or
repnz
and
test
data16
mov
push
div
dec
(bad)
mov
test
mov
sbb
cmp
xor
fistp
mov
pop
data16
push
(bad)
sbb
or
leave
jno
mov
fcomp
sti
adc
sbb
push
in
or
jnp
sbb
adc
mov
stos
cmp
div
out
xchg
dec
fcomp
xchg
lock
fimul
mov
mov
faddp
ret
daa
mov
mov
adc
dec
cmovs
dec
add
aaa
mov
mov
daa
inc
je
or
dec
dec
je
ror
inc
xor
mov
and
or
mul
sbb
dec
jne
push
inc
dec
shr
or
(bad)
mov
dec
inc
push
inc
add
in
or
mov
push
in
push
push
add
add
push
aad
push
push
clc
push
lea
push
mov
mov
test
imul
adc
adc
and
shl
push
jne
mov
addr16
scas
in
pop
add
dec
sahf
and
jne
pop
ds
popa
dec
add
repnz
pop
adc
outs
imul
jecxz
dec
xchg
cmovp
(bad)
pop
jns
sub
or
mov
push
mov
aas
popf
push
sub
daa
mov
jnp
mov
pop
cld
iret
or
js
jbe
leave
cld
retf
add
ja
out
pop
dec
je
mov
jns
or
dec
or
push
jmp
sub
push
jmp
shr
pop
push
shr
add
or
loope
and
mov
xlat
add
xlat
dec
mov
test
jp
mov
mov
and
outs
mov
aas
cmp
jae
das
mov
sub
sub
adc
(bad)
mov
idiv
push
add
inc
loop
sub
push
jne
mov
lea
pusha
sub
jmp
mov
dec
and
adc
call
fld
call
adc
int
pop
sbb
sbb
dec
and
push
pop
add
fwait
cli
ins
cdq
inc
in
mov
bswap
jnp
pop
jle
aaa
push
adc
rcl
gs
mov
push
push
mov
nop
out
addr16
adc
xor
add
sbb
or
(bad)
and
outs
cmp
sub
or
mov
add
loop
mov
std
add
call
ret
jle
adc
add
(bad)
je
push
push
dec
pop
clc
test
sbb
shl
dec
leave
into
(bad)
jmp
push
push
add
retf
dec
add
push
inc
lods
movs
stos
sbb
clc
mov
call
xlat
sub
cmp
mov
push
lods
ret
jl
inc
inc
pusha
in
les
dec
fcomp
repnz
push
add
cmp
fst
xchg
mov
adc
xor
mov
cmc
mov
not
imul
add
push
dec
pop
mov
pop
adc
rcr
dec
or
je
scas
jb
push
ret
add
sbb
xchg
lds
inc
(bad)
mov
jmp
add
and
cdq
pop
inc
mov
adc
test
popf
sbb
jge
pop
pop
mov
sbb
mov
jle
dec
aam
inc
adc
aaa
jb
xchg
jp
sub
and
xor
cwde
push
push
mov
mov
ret
int
push
cmp
mov
push
fld
ds
enter
add
pop
stos
and
imul
rol
into
in
add
inc
jo
sub
mov
dec
cmp
push
pop
push
frstor
sub
jge
cmp
stos
push
cmp
aaa
push
mov
or
push
clc
es
jbe
dec
inc
sub
add
mov
mov
cdq
pop
add
das
sub
ds
xchg
dec
pop
jo
ins
push
mov
mov
xchg
and
cli
(bad)
(bad)
jmp
pop
movs
adc
int
dec
mov
movs
cmp
add
mov
pop
adc
or
es
pop
pop
or
shl
sbb
repnz
daa
popa
movs
fsubr
pop
and
in
add
mov
ret
sbb
mov
in
push
movs
push
lods
dec
pop
push
ds
jge
xor
dec
sar
lahf
or
repz
mul
mov
enter
stc
or
mov
sub
sub
out
aas
sub
mov
les
mov
inc
push
ja
mov
xchg
inc
or
push
fldcw
sub
ja
or
mov
sub
cli
rol
adc
jge
jmp
inc
pop
add
ins
(bad)
jne
or
ja
shl
pop
outs
and
pop
jno
xchg
add
lock
mov
push
jns
out
push
push
clc
test
push
push
stos
pop
pop
mov
mov
in
and
data16
cwde
loopne
out
clc
outs
ror
cmp
push
je
fadd
adc
fiadd
mov
jae
mov
push
aaa
in
rcl
imul
daa
sbb
sbb
ret
aam
movs
daa
xor
loopne
(bad)
clc
call
dec
or
mov
xchg
dec
imul
enter
bound
push
sub
xor
xchg
push
jne
push
push
xor
xchg
sbb
add
adc
ss
cmp
cmp
jle
in
inc
mov
jne
cmp
mov
imul
inc
div
icebp
jecxz
push
lock
push
daa
pop
and
sbb
jne
(bad)
xor
jns
xchg
cmp
mov
outs
lock
mov
ror
sbb
jb
and
mov
inc
adc
inc
call
les
je
mov
jmp
push
pop
adc
sbb
xchg
mov
(bad)
(bad)
cmp
jne
pop
or
imul
nop
mov
retf
pop
push
in
pop
in
adc
and
or
js
in
push
push
mov
fild
push
out
xchg
xchg
push
addr16
or
pushf
or
mov
fild
fisttp
jns
inc
xchg
out
aaa
or
push
sbb
or
rol
cld
data16
data16
jmp
xor
clc
js
fistp
test
fsubr
push
ret
dec
pop
nop
lock
add
fsubr
(bad)
in
push
out
sahf
out
mov
sub
or
shr
shl
xor
or
push
add
sbb
scas
or
push
pop
pusha
call
inc
push
daa
imul
sti
sbb
retf
mov
imul
sbb
sub
neg
mov
jne
mov
push
cmp
jne
(bad)
call
and
adc
fst
and
rol
jb
out
mov
pop
jmp
adc
jp
lahf
out
jmp
std
std
jmp
cld
cld
addr16
cmc
int3
sub
jmp
lock
cmp
jne
inc
inc
inc
cmp
jb
inc
add
repnz
inc
jne
loopne
and
shr
je
shl
outs
repz
mov
or
pop
xor
push
dec
out
stc
jl
jg
jg
outs
inc
or
out
mov
jo
addr16
jg
adc
jg
lea
dec
jne
repnz
pop
dec
in
pop
pop
fild
lea
lea
inc
out
and
je
mov
cld
or
pop
pop
xor
dec
jne
sbb
je
push
add
dec
jae
inc
push
neg
mov
add
sub
push
mov
inc
push
mov
shr
dec
pop
add
sti
dec
push
in
xchg
loope
add
inc
(bad)
fild
loopne
idiv
push
cmp
outs
jbe
push
cmps
lea
in
int3
cmp
add
sbb
retf
cmp
dec
xchg
push
out
xchg
push
xchg
rcl
jb
ret
xchg
cmc
adc
sub
je
and
xor
out
mov
fs
mov
add
(bad)
mov
pop
rol
push
push
pop
ss
cmps
and
popf
push
movs
cmps
push
lea
push
push
sub
add
inc
(bad)
xor
push
mov
inc
mov
fistp
test
push
mov
pop
sbb
pop
mov
shufps
cmc
fst
mov
div
xor
cmp
dec
mov
lea
jb
cmp
xor
add
or
fwait
(bad)
mov
or
mov
(bad)
rol
call
jp
push
cld
fisubr
xchg
mov
pop
and
dec
xchg
arpl
bound
sub
mov
pop
mov
inc
inc
fsubr
rcl
ret
mov
push
add
push
cmp
or
and
dec
cld
bound
test
cmp
ins
loopne
fcom
add
packuswb
xchg
popf
fdiv
(bad)
xchg
cmp
add
das
and
imul
and
dec
xor
mov
jle
push
xchg
ret
inc
loop
or
mov
sub
arpl
jae
mov
outs
push
or
test
aam
je
bnd
mov
cpuid
test
add
in
es
add
or
push
or
cmp
push
fimul
pop
adc
jb
fild
xchg
shl
rol
loope
or
lea
stos
add
sti
lea
jno
adc
mov
inc
dec
cld
sahf
out
mov
xchg
mov
add
add
daa
out
push
push
or
push
jmp
adc
push
fs
mov
hlt
call
add
pop
pusha
lods
hlt
mov
and
lods
xor
inc
dec
xor
add
(bad)
enter
rol
xchg
or
jg
xchg
add
mov
xchg
cmp
ja
mov
cmp
loopne
ficom
push
mov
jmp
push
sub
arpl
std
push
cmp
add
cld
push
cmp
and
mov
in
(bad)
aas
dec
fimul
or
mov
dec
ja
push
adc
mov
(bad)
nop
push
mov
mov
ds
test
mov
(bad)
std
pop
mov
cmp
and
sbb
in
outs
fidiv
enter
and
or
and
cld
jmp
(bad)
dec
inc
push
(bad)
push
xor
pop
outs
and
dec
inc
push
call
xor
scas
aas
fwait
pop
jg
ja
test
cmps
and
dec
dec
cld
int
(bad)
std
or
sub
xor
iret
ss
sbb
setb
int
cmp
inc
push
and
push
je
js
inc
mov
mov
rcl
xor
push
inc
add
cmp
sbb
movs
push
mov
add
sbb
pop
jmp
inc
std
jne
pusha
jmp
retf
leave
mov
sub
cdq
retf
stos
adc
les
mov
jecxz
iret
and
stc
xor
and
xor
add
push
mov
ins
mov
sbb
and
mov
pusha
mov
add
or
mov
scas
cmp
cs
or
cdq
xchg
pushw
jmp
push
mov
test
ds
push
and
aaa
or
inc
sbb
aas
rol
jne
cmp
push
jae
push
call
cmps
xchg
out
movs
rol
mov
push
test
arpl
inc
push
leave
inc
and
mov
imul
int3
lea
push
aaa
jmp
cld
enter
mov
shr
loopne
or
inc
cmp
sbb
adc
clc
jbe
fcom
cdq
dec
pop
push
sub
jo
sbb
loopne
xor
(bad)
ss
sbb
in
inc
pop
push
and
dec
mov
pop
mov
inc
shl
ror
dec
test
rol
jle
add
gs
dec
jbe
mov
xor
push
mov
adc
sub
stc
sub
movs
ror
or
push
jnp
cmps
cmp
into
adc
loop
hlt
push
pop
adc
or
mov
xor
sbb
cs
not
push
mov
out
cli
pop
mul
loop
push
mov
cs
add
int3
inc
mov
mov
sti
rep
and
pop
pop
loop
cwde
jno
aam
neg
push
push
mov
call
inc
jne
xor
push
pop
push
idiv
xor
xlat
test
ins
jmp
add
fld
and
lods
mov
or
cmp
iret
mov
pop
sbb
jge
into
dec
inc
cmps
or
mov
test
jge
mov
mov
inc
mov
pusha
sbb
pop
ret
or
out
imul
aad
ins
adc
jne
es
xor
adc
and
loopne
and
add
js
mov
push
and
pop
mov
add
cmp
push
(bad)
mov
xchg
(bad)
push
sbb
mov
lea
inc
adc
and
and
mov
cmp
jbe
sub
ret
inc
out
mov
or
aam
movs
sub
or
imul
fistp
lea
xchg
int
outs
cmp
es
pop
cmp
and
sbb
sbb
nop
pushw
mov
pop
inc
mov
cmp
cmps
in
scas
sbb
retf
rol
shr
aad
xchg
xchg
int3
imul
and
ins
jo
add
xchg
cmp
cmp
sbb
aaa
jmp
jle
jg
je
call
js
or
inc
add
add
inc
and
jns
hlt
xchg
lock
icebp
adc
push
mov
or
addr16
push
pop
mov
in
or
addr16
add
inc
test
add
inc
jo
and
(bad)
sbb
jo
or
add
inc
or
(bad)
mul
pop
jae
pop
mov
mov
adc
xor
sbb
push
or
or
mov
add
pop
sub
jno
or
ror
push
and
adc
jne
fsubr
shl
mov
movs
inc
in
(bad)
fucomip
adc
xchg
and
push
cmp
or
jmp
js
cmp
jg
mov
or
jno
shr
xlat
rol
pop
fdivr
pop
xor
mov
add
(bad)
cmps
inc
or
add
imul
jo
les
punpckhwd
mov
xor
cmp
retf
push
bound
dec
jno
arpl
sub
push
mov
mov
jecxz
into
test
loope
mov
mov
jmp
dec
inc
jbe
and
inc
sub
adc
sbb
sbb
jecxz
fimul
or
not
jl
sbb
cmp
adc
mov
retf
adc
add
or
sub
cmp
inc
pop
cmp
add
cmp
mov
fwait
jle
pop
cwde
dec
jl
push
mov
pop
or
xchg
push
dec
imul
jbe
and
pop
push
(bad)
mov
cmp
cmp
or
ret
ret
movs
ins
jg
adc
pop
or
je
or
push
popa
pop
jno
cmp
imul
and
loopne
std
test
cmp
xlat
mov
dec
push
jg
push
mov
mov
arpl
test
sti
je
push
loopne
push
add
fucomip
bt
mov
pop
shl
jae
jb
ret
mov
adc
inc
sub
or
mov
test
test
pusha
scas
ja
test
shl
fnstcw
lock
test
fiadd
and
and
or
adc
inc
xchg
test
mov
gs
jne
jb
or
jnp
and
dec
adc
jae
inc
ins
pop
or
call
pop
inc
sub
add
mov
cld
push
outs
mov
adc
je
loopne
or
in
fstp
or
jae
sub
xlat
xor
or
xor
pusha
test
sub
std
lods
lods
lods
jl
(bad)
fcom
sar
data16
popf
enter
mov
lods
mov
(bad)
inc
inc
jo
mov
icebp
sahf
hlt
(bad)
fild
mov
mov
xor
adc
loopne
dec
loop
pop
adc
pop
in
or
cmp
test
(bad)
rol
call
adc
push
xchg
ror
shr
push
mov
push
ror
or
lods
xchg
ins
cmps
inc
loopne
enter
pop
sbb
add
adc
bound
dec
mov
sbb
sub
arpl
xor
int
test
adc
stc
sub
in
push
adc
jo
cmp
and
ss
addr16
push
adc
and
rol
and
and
mov
loope
out
enter
and
int3
or
jae
mov
mov
ins
cdq
dec
dec
cmp
sbb
cmp
add
mov
inc
sub
inc
lea
in
push
xor
fstp
or
sub
jo
stos
jns
add
mov
js
inc
addr16
and
inc
outs
(bad)
cmp
push
mov
mov
loope
pop
inc
or
aaa
dec
lea
mov
mov
call
out
fsub
mov
push
outs
out
retf
lahf
mov
movs
mov
arpl
mov
jae
neg
arpl
mov
dec
push
mov
(bad)
out
in
arpl
shr
or
or
les
cmps
es
jge
rep
pushf
in
pop
rcr
and
add
jbe
rcl
xchg
lock
push
push
sbb
lods
fs
mov
xchg
ss
hlt
xchg
std
add
pop
cmps
lea
push
add
data16
sbb
and
loope
jl
jg
and
mov
push
sub
xchg
mov
pusha
nop
fcom
daa
xchg
test
or
push
call
or
lock
aam
(bad)
adc
jl
push
pop
leave
push
and
mov
out
pop
jns
push
sbb
push
push
or
or
fstp
sbb
mov
xor
push
je
dec
movs
pop
stos
jmp
push
adc
push
test
jmp
push
or
mov
xchg
pop
cld
pop
jne
pop
push
shld
imul
or
mov
std
stos
xor
inc
adc
lea
scas
pop
jb
pop
adc
or
mov
fbstp
xchg
add
jecxz
mov
mov
sbb
sbb
in
mov
adc
lock
jmp
mov
test
mov
and
dec
movs
sti
sbb
add
loop
mov
je
sahf
cmp
pop
mov
mov
or
rcr
pop
pop
dec
in
imul
mov
shl
rol
cmp
ds
movs
fild
push
fcom
fcomp
mov
dec
or
ror
inc
ss
pop
clc
into
stos
adc
and
or
jne
mov
mov
xor
mov
push
push
bound
scas
fisttp
pop
adc
inc
sub
fucomi
push
nop
sub
je
mul
adc
jmp
mov
pop
jmp
pop
sub
mov
pop
push
cld
or
mov
movs
loop
loopne
lock
(bad)
sub
sbb
pop
push
mov
push
in
sub
cmps
or
test
sti
add
dec
pusha
sar
pusha
cs
sbb
fnstsw
mov
pushf
push
jo
ins
add
les
add
inc
adc
push
scas
es
jmp
xchg
fcom
popf
mov
xchg
jne
xchg
add
and
scas
cmp
pop
jmp
xchg
push
jmp
xchg
add
adc
sub
push
daa
push
adc
fs
or
jmp
shl
sbb
push
mov
scas
push
mov
test
mov
stos
push
jne
mov
out
inc
cwde
and
test
je
aaa
push
mov
cmp
sbb
rol
dec
sbb
xchg
ret
sbb
jae
or
dec
mov
nop
ins
or
data16
or
adc
cmp
add
add
or
cmps
sub
retf
push
aas
adc
clc
xchg
pop
mov
aad
add
pushf
rol
sub
call
or
loopne
shl
push
cs
cmp
sub
sbb
mov
call
or
push
js
test
add
cli
shl
dec
mov
xlat
je
mov
xor
cmp
mov
push
jb
movs
add
fs
add
xchg
dec
cld
add
add
push
pusha
ja
fistp
mov
push
add
push
pop
pop
mov
pop
and
out
out
or
out
jl
jle
add
adc
pop
aas
dec
sbb
mov
inc
ret
inc
push
adc
fisttp
mov
idiv
mov
and
test
push
adc
xor
or
pop
adc
aad
pop
inc
sub
sub
lea
addr16
and
clc
push
into
inc
sar
push
push
xor
push
jle
mov
mov
push
cwde
shr
and
push
es
push
sub
lock
add
add
enter
push
dec
add
adc
je
push
ins
(bad)
or
mov
ja
sbb
inc
cmp
test
add
push
or
jbe
sbb
adc
pop
and
mov
add
cmc
je
cmp
in
pop
jne
push
and
adc
out
dec
inc
xor
fnsave
push
loop
out
je
mov
movq
push
inc
adc
and
xchg
mov
inc
call
mov
shl
xor
pop
int3
mov
lods
mov
div
nop
sub
fmul
dec
mov
push
mov
inc
inc
cli
pop
pop
fld
neg
cli
sub
mov
add
shr
add
lock
jns
test
les
inc
inc
cs
push
push
or
mov
fisttp
imul
fs
adc
jmp
push
pop
push
push
imul
push
shr
rcr
shr
rcr
or
jne
div
pop
dec
adc
sub
outs
fwait
inc
mul
pop
jb
cmp
fsincos
fnclex
(bad)
push
jbe
dec
sub
sbb
les
iret
push
adc
or
(bad)
fadd
pop
xor
nop
lock
pop
push
push
icebp
pushf
test
mov
add
sbb
movs
or
add
mov
jle
jg
cmp
mov
sub
(bad)
arpl
data16
cdq
not
jmp
push
sub
jl
push
js
mov
add
add
ds
js
inc
les
add
pop
inc
pop
adc
sub
adc
push
repnz
pop
jne
push
add
jne
ja
push
test
retf
dec
or
add
sub
pop
cmp
bnd
xor
lea
adc
sbb
sub
ins
jp
add
leave
cmp
jae
pusha
outs
das
or
jb
jne
push
clc
jbe
or
or
out
xor
sar
out
add
je
mov
jmp
ror
scas
dec
push
mov
mov
pop
jnp
mov
inc
dec
mov
cmp
and
popa
ja
repnz
adc
test
jbe
jg
dec
mov
mov
or
(bad)
jmp
int3
push
xor
inc
push
xchg
and
xchg
jmp
hlt
neg
mov
sub
ins
jp
cld
push
and
sub
dec
dec
das
xchg
dec
cld
pop
fist
sbb
fnstenv
sbb
fsub
xchg
jg
cmp
out
adc
and
inc
lds
out
leave
xor
add
cmp
lea
jmp
and
in
sbb
mov
cs
add
jg
jb
or
cmp
out
sub
daa
dec
adc
test
popa
add
call
or
push
test
call
add
push
hlt
jg
and
push
mov
mov
cmp
int3
and
frstor
sbb
jb
or
push
mov
test
outs
pop
lods
jne
sub
push
xchg
es
jb
ja
jno
inc
cmp
jbe
pop
cmps
adc
and
sbb
in
popa
push
pop
or
out
push
add
lock
dec
clc
icebp
cmp
pop
jb
ret
adc
aas
push
shl
ret
jecxz
jge
mov
jmp
sbb
scas
mov
adc
fidivr
ja
push
sbb
mov
repz
sub
shr
jle
push
sub
outs
inc
dec
mov
xor
js
cmp
ss
and
add
jns
movs
shl
in
jmp
ins
sbb
cmp
add
jb
push
cmp
jmp
loop
ins
pop
sbb
aam
mov
int3
jle
add
lock
mov
jmp
or
xchg
rol
or
sbb
into
cmps
add
sub
dec
or
sar
dec
adc
hlt
mov
inc
test
jno
int3
xor
or
lods
xor
inc
je
jecxz
dec
adc
pop
mov
jecxz
pop
add
and
loopne
mov
mov
cmp
es
mov
lock
jge
fcomp
mov
jne
or
test
call
dec
imul
or
cmp
into
sbb
clc
dec
test
cmp
jle
push
push
jne
inc
and
and
jns
stc
rol
pop
dec
add
cmp
add
std
(bad)
and
add
push
cmc
adc
add
out
jmp
or
cmp
mov
mov
(bad)
sub
sbb
add
inc
mov
js
sbb
test
loopne
mov
add
iret
test
mov
loopne
cmp
dec
fnstsw
push
jmp
(bad)
adc
and
jle
add
adc
adc
mov
xchg
jno
shl
lds
jmp
add
or
das
lods
punpcklbw
pop
jg
and
jb
sub
add
mov
pop
mov
pop
inc
jge
lea
sub
popf
mov
jb
hlt
fdivr
add
test
fsub
fstp
pop
or
cmp
jno
es
xchg
pop
stc
cs
lods
call
in
clc
sub
or
push
inc
loop
pop
sahf
mov
mov
jl
loopne
pop
ja
adc
mov
xor
ffree
adc
sbb
pop
sar
pop
push
sbb
add
and
(bad)
push
cmp
mov
(bad)
cwde
sti
or
jb
clc
aam
mov
test
jo
xor
add
loop
loope
outs
sub
je
sbb
nop
pushf
pop
or
add
xchg
retf
and
(bad)
jnp
sbb
jnp
add
adc
lods
adc
add
sbb
pop
sub
push
imul
xor
mov
in
leave
test
add
jbe
adc
movs
hlt
fcom
xor
sbb
push
or
inc
sbb
ja
iret
or
add
loope
ins
shl
or
in
out
in
adc
and
js
and
add
add
sub
and
xor
movs
sub
and
inc
fs
fcmovb
rcr
imul
dec
and
stos
xor
out
or
mov
push
lea
out
test
adc
fidivr
sbb
out
mov
inc
je
pop
push
or
sub
adc
xor
cwde
mov
inc
movs
je
mov
cld
das
fst
test
lea
popf
je
push
arpl
in
xor
arpl
sub
stos
fwait
sub
sti
jo
in
add
dec
and
stos
shr
adc
outs
or
fsubr
mov
sub
adc
ds
cmp
mov
mov
adc
mov
jge
push
das
rcl
add
push
ins
cmp
out
loope
stc
xor
cmc
add
call
mov
xor
jne
mov
adc
adc
test
aam
fstp
jmp
movs
test
test
lea
imul
enter
dec
or
idiv
cmp
add
jb
dec
nop
cmp
mov
rcr
dec
std
dec
test
lock
xor
add
jl
je
cdq
jle
xor
icebp
push
sbb
(bad)
sti
rcl
sub
add
mov
inc
inc
addr16
pushf
pusha
je
mov
or
sub
mov
loope
and
xchg
popa
add
dec
fwait
xor
ret
mov
test
mov
xor
dec
xchg
sub
adc
mov
daa
mov
call
cmp
xchg
loope
jle
jbe
mov
mov
jne
add
xchg
xor
out
xchg
hlt
jmp
cmp
jle
imul
and
pop
mov
jo
scas
mov
les
adc
movs
jbe
adc
jo
cmc
lock
loopne
push
cld
adc
pxor
jb
mov
popf
adc
fisttp
or
or
je
add
and
pushf
iret
sbb
and
dec
xor
cmp
jne
dec
mov
push
and
jg
xchg
mov
xchg
data16
mov
aam
and
jae
imul
cli
mov
xor
sub
add
ds
lahf
test
add
pop
data16
xor
int3
push
sub
into
mov
je
xor
mov
retf
lock
and
jle
jmp
into
mov
jmp
mov
add
pop
ror
push
jl
pop
mov
xor
cld
rol
neg
mov
adc
push
push
jne
(bad)
jnp
or
sbb
add
dec
adc
daa
jo
cld
adc
push
and
pushf
mov
or
push
inc
je
mov
cmps
push
and
sbb
test
add
mov
mov
cmp
jg
sahf
add
jmp
sub
sub
inc
push
mov
in
sti
and
icebp
push
pop
enter
xor
sar
and
lock
mov
jmp
push
xchg
mov
in
xchg
aas
mov
es
inc
mov
push
sbb
mov
repnz
sar
xchg
dec
out
int
mov
popa
xor
pop
mov
test
sub
mov
xor
sub
push
test
cli
and
mov
mov
loope
ja
mov
test
jne
js
cmp
jmp
and
dec
imul
lahf
adc
pop
cmps
mov
(bad)
mov
mov
adc
rcr
xchg
daa
lods
or
das
jae
fisub
add
es
pusha
mov
xor
mov
cmp
int
fild
in
rol
imul
shl
mov
push
dec
stc
inc
mov
daa
clc
mov
and
xor
in
xlat
add
jmp
or
mov
and
sub
lock
mov
xchg
and
je
(bad)
adc
mov
push
push
ret
ror
or
mov
(bad)
movs
pusha
mov
hlt
mov
push
and
fadd
mov
aaa
push
pop
pop
addps
jmp
out
dec
inc
add
xchg
and
jns
xchg
popf
in
imul
push
mov
leave
adc
sub
mov
sbb
and
xchg
es
in
test
in
ja
ror
or
jne
add
aas
clc
mov
mov
test
bnd
adc
add
cmp
js
jno
daa
sub
not
and
and
adc
and
test
rol
out
jmp
adc
push
movs
or
ficom
push
cmp
adc
push
pop
xor
add
xor
test
leave
sbb
loope
inc
add
aam
das
pop
dec
add
add
daa
dec
jne
dec
dec
ins
loopne
and
jg
pop
cmp
je
dec
je
dec
jne
ins
loope
shl
movs
jns
xchg
jmp
sub
dec
(bad)
pop
scas
mov
mov
mov
or
jecxz
leave
je
cmp
sbb
dec
push
xor
nop
or
cmp
mov
or
pop
fidivr
jo
or
add
cmp
(bad)
jmp
and
pop
push
or
cmp
cmp
je
cmps
adc
inc
or
std
fld
into
xor
sub
mov
sti
sbb
out
pop
je
dec
jae
push
sbb
jmp
sub
dec
jne
add
jmp
sbb
pop
sub
inc
int3
xor
cmp
jb
dec
es
and
adc
sub
aaa
sbb
push
ins
and
add
stc
jno
mov
shl
dec
jl
xor
test
jmp
inc
pusha
add
jne
pop
inc
(bad)
or
jne
scas
cmp
jo
pop
out
push
movs
les
mov
xor
inc
test
fimul
add
pop
or
xchg
inc
movs
in
dec
aas
enter
or
mov
mov
movs
fld
add
add
ins
cmp
stc
xor
imul
aam
je
xchg
adc
data16
out
ins
data16
add
es
lds
arpl
push
clc
or
dec
or
cmc
in
push
repnz
xchg
or
mov
adc
test
or
sar
nop
push
enter
in
stc
imul
add
test
xchg
or
xor
retf
mov
add
add
fstp
mov
sub
xor
imul
call
adc
mov
stos
mov
or
jns
mov
inc
adc
gs
sahf
and
adc
in
sub
sub
xor
push
stc
adc
jp
or
xchg
mov
mov
push
fcmovu
loop
cmp
test
lar
add
out
inc
push
test
inc
xor
pop
adc
pop
dec
rcr
mov
pushf
or
js
xor
mov
cmp
push
movs
je
addr16
adc
clc
inc
inc
rcl
hlt
push
lods
pop
mov
daa
mov
or
sti
cmp
or
or
in
xor
push
xor
adc
or
xchg
fimul
sub
nop
dec
iret
ins
cmp
pop
sub
mov
fiadd
out
cli
movs
outs
push
movsx
outs
push
pop
jmp
call
dec
je
int3
or
sbb
mov
mov
ins
imul
mov
jmp
mov
inc
mov
mov
fwait
add
mov
lods
call
je
inc
mov
inc
xor
mov
inc
jle
pushf
loopne
sub
inc
pop
push
push
or
sub
sub
push
into
xchg
fcom
fiadd
pop
inc
push
xor
dec
loop
push
dec
cs
jl
ja
fs
sbb
rcl
jmp
inc
pop
jno
cmp
ja
dec
mov
push
add
inc
sub
or
call
jae
test
xor
scas
dec
pusha
adc
dec
dec
jecxz
mov
rol
fwait
mov
xor
out
repnz
cwde
adc
je
jmp
in
and
out
arpl
repnz
dec
bnd
fnstsw
rcl
pusha
out
inc
mov
or
sub
sub
and
adc
ins
jg
pop
or
dec
pushf
adc
pop
pop
popf
push
addr16
jo
and
sub
into
xchg
mov
xor
test
jmp
sti
mov
mov
(bad)
je
ret
(bad)
shr
mov
ret
out
pop
and
pop
cmp
push
jmp
xchg
jbe
cmp
jl
inc
mov
dec
pop
mov
popa
inc
scas
mov
test
test
sub
jmp
mov
leave
sahf
clc
lea
add
stc
push
adc
jg
pop
fiadd
imul
sub
push
and
jmp
pop
or
mov
test
loope
dec
nop
sbb
call
sub
stos
in
loopne
lea
adc
push
add
cwde
add
pop
xchg
mov
sbb
dec
mov
push
sbb
sbb
xchg
(bad)
and
out
xchg
sub
mov
inc
test
add
cmp
es
ins
or
adc
inc
es
jno
lds
add
or
mov
push
lahf
into
push
ss
mov
sbb
pusha
push
and
cmp
jb
mov
lea
movs
add
retf
cmp
pushf
stc
sub
inc
or
(bad)
rcr
fs
mov
rol
pop
mov
mov
cs
push
mov
pop
adc
cld
mov
std
mov
or
call
mov
lods
xor
test
fbld
(bad)
jne
inc
test
jne
mov
jne
jne
test
(bad)
jne
inc
sub
pop
cmp
call
hlt
int3
add
jne
push
pushf
inc
lods
xor
hlt
cld
movs
add
push
pushf
xchg
movs
add
(bad)
adc
pop
add
test
mov
adc
aaa
cmp
dec
gs
scas
ret
cld
lea
pop
icebp
es
add
lock
fbstp
mov
je
add
inc
xchg
ins
aad
or
cwde
pop
mov
mov
sbb
and
add
xor
scas
test
(bad)
jge
test
js
mov
aam
gs
cmp
pop
mov
add
or
shr
mov
pop
ror
ret
pop
mov
bound
or
adc
inc
jbe
adc
mov
add
inc
int3
lods
sahf
push
fadd
(bad)
shr
shl
shr
or
mov
sahf
dec
add
jne
outs
test
adc
inc
cwde
jmp
inc
mov
push
cmp
sbb
(bad)
ss
(bad)
rcr
icebp
out
inc
xchg
fiadd
mov
pop
clc
cmp
fiadd
push
out
add
mov
push
daa
(bad)
mov
and
mov
sete
xor
adc
mov
loope
jl
dec
cmps
test
pusha
or
(bad)
push
pop
mov
cmp
lods
test
jb
sbb
dec
and
mov
adc
lods
dec
mov
add
push
sbb
jne
push
retf
int
out
jmp
sub
lock
sbb
add
into
stos
movups
and
push
adc
pusha
inc
pop
test
cmps
ja
pop
mov
es
inc
cmp
xchg
(bad)
push
mov
sub
or
xchg
inc
mov
pushf
mov
sahf
pusha
xchg
hlt
cmp
push
mov
cmps
stc
cmp
adc
adc
pop
clc
xor
rcl
aad
test
and
inc
adc
xor
retf
adc
sbb
cdq
and
push
or
out
inc
sub
add
out
or
and
add
push
cli
dec
pusha
jmp
add
and
mov
and
or
sbb
js
jl
mov
cmp
or
mov
pop
xor
xchg
test
xchg
xchg
inc
scas
or
dec
cmp
mov
xchg
cmp
xchg
push
push
cmp
cmp
pushf
pop
adc
fs
add
jmp
add
jo
rcl
pop
and
xchg
js
jne
rcr
push
push
pop
push
loopne
nop
or
xlat
cli
inc
xor
popa
add
and
ss
sar
sti
jmp
inc
jle
mov
adc
(bad)
pop
or
fild
sbb
mov
mov
sti
add
cmp
out
dec
sbb
nop
sub
movs
adc
ret
mov
mov
jl
sbb
mov
jge
mov
mov
push
add
pop
inc
add
daa
loopne
cmp
iret
add
or
add
cmp
or
std
inc
xor
mov
shl
adc
sub
jl
mov
arpl
pop
jmp
inc
pop
push
paddw
jb
inc
fsubr
or
jne
add
pop
sbb
xchg
cmp
or
mov
fadd
add
jns
mov
add
inc
push
and
mov
sub
mov
mov
push
add
dec
sbb
fimul
sub
or
or
jmp
(bad)
mov
sub
pop
jb
call
jns
or
xor
add
xchg
mov
mov
push
aaa
xor
std
pushf
mov
or
jne
or
je
push
mov
mov
push
scas
sub
mov
out
add
loopne
ror
daa
jno
in
div
push
sbb
pop
cmp
jae
or
sub
cmp
xchg
or
cmp
xor
sti
aam
push
add
adc
jne
push
push
adc
cmc
jmp
not
cwde
mov
mov
jmp
xlat
test
xchg
or
das
mov
push
cmp
jl
cmp
xchg
out
sar
test
xor
cmp
inc
jo
xor
add
sub
or
xchg
jg
or
xor
jmp
mov
xchg
data16
or
or
mov
jbe
rcl
or
inc
data16
dec
lods
or
ja
add
stc
data16
sub
pop
ins
in
cdq
sbb
movs
jge
jmp
std
repz
mov
xor
xor
add
or
sbb
jg
add
neg
sbb
pusha
mov
sbb
mov
or
add
fwait
push
mov
adc
jbe
sub
jns
sub
add
or
jmp
mov
dec
and
cmp
mov
lods
cld
mov
cli
add
and
xor
dec
cvtps2pd
push
adc
pop
inc
push
daa
sbb
or
inc
int
lahf
jmp
push
pop
lea
push
out
cmps
je
sbb
or
jmp
xor
xchg
jo
xor
popa
out
dec
mov
sub
inc
cwde
loopne
add
dec
xchg
sbb
inc
mov
pop
mov
cld
fidivr
popa
lea
mov
mov
adc
sbb
in
dec
or
out
cmp
mov
pop
(bad)
jno
shl
sahf
push
add
or
or
mov
xchg
mov
in
add
cmp
pop
or
test
sbb
or
cmp
fwait
xor
cmp
cmp
das
adc
push
jge
dec
mov
push
lea
idiv
mov
add
sar
mov
aas
or
add
or
dec
adc
push
xchg
retf
clc
push
jae
ins
jmp
add
or
push
loopne
jp
mov
call
ficomp
add
sbb
inc
xor
test
inc
push
or
stos
jo
into
mov
out
inc
pusha
pop
(bad)
or
xor
push
push
inc
pushf
popf
and
jns
push
sub
data16
or
mov
imul
mov
pop
mov
add
call
inc
pusha
mov
mov
mov
mov
into
sbb
fadd
clc
inc
and
dec
movsx
xor
pop
push
add
sbb
(bad)
out
add
mov
cdq
jbe
enter
adc
dec
push
test
push
sub
add
call
jmp
adc
push
adc
inc
outs
inc
push
imul
movs
cli
mov
mov
shl
scas
popa
sbb
push
movs
sbb
sub
cmp
int
test
fabs
xchg
and
or
stos
xor
or
add
cmp
mov
push
cmps
int
push
test
(bad)
push
or
add
mov
xor
lock
add
cmp
jne
push
cmp
sbb
push
aas
pop
dec
push
sbb
mov
fmul
jmp
hlt
adc
pop
cmp
push
cmovns
iret
test
add
sub
shl
dec
mov
call
data16
xor
jb
sti
inc
dec
push
mov
mov
inc
mov
sbb
ror
xor
cmp
mov
icebp
popa
xor
dec
xor
xchg
retf
xor
sub
fs
sub
cmp
mov
and
jne
shufps
xchg
ret
push
add
mov
aad
gs
xchg
and
pop
lahf
dec
add
sbb
daa
ret
sub
xchg
add
ins
push
push
and
movs
pop
mov
jae
in
pop
lock
adc
(bad)
adc
fiadd
into
fisub
sbb
mov
pop
data16
push
cmp
add
test
sub
pop
cmp
imul
jb
inc
mov
push
mov
jne
lea
or
inc
push
add
shl
test
sbb
not
push
in
lods
and
jmp
lods
sub
int3
in
aam
shl
cmp
pop
cmc
xchg
(bad)
xor
cmp
cmovbe
(bad)
mov
push
add
out
lea
nop
(bad)
add
jmp
or
lock
rcl
sbb
outs
sbb
jae
rol
push
jb
ja
cmp
xchg
dec
push
bound
ja
call
ins
lods
inc
sub
sub
sbb
jne
xlat
xor
cmp
pop
jmp
xchg
and
rdtsc
cmp
add
arpl
pop
or
mov
inc
in
mov
in
ror
adc
sub
mov
rcl
rol
(bad)
adc
test
mov
aas
cmp
and
jp
inc
jecxz
ror
dec
add
or
or
xchg
aam
or
ins
pusha
pop
test
push
test
sbb
daa
inc
xor
sbb
aad
sbb
adc
adc
es
sub
lods
mov
aad
push
mov
jmp
mov
movs
pop
mov
or
sub
in
int3
mov
es
sub
ret
aaa
mov
or
std
mov
test
inc
cmp
xchg
push
mov
je
enter
mov
sar
mov
pop
rol
ret
jnp
fisttp
or
add
jmp
fild
xor
mov
into
iret
movs
jge
or
mov
test
test
mov
push
cmp
jle
mov
jns
loopne
aas
enter
mov
test
rol
inc
add
stos
pushf
mov
ret
mov
sub
int3
lock
pop
mov
dec
push
(bad)
(bad)
leave
dec
dec
retf
scas
push
pop
or
add
or
add
icebp
jb
cmp
in
and
dec
lea
pop
lahf
mov
sub
imul
sbb
and
pushf
dec
enter
call
mov
stos
mov
fcmovnbe
mov
push
or
inc
frstor
mov
std
dec
cmp
jne
inc
sub
pop
aad
mov
and
push
cmp
in
mov
xor
loop
jl
xor
mov
scas
inc
cmp
imul
outs
ss
jno
dec
push
js
pop
push
adc
retf
push
mov
and
or
hlt
inc
xlat
push
sbb
mov
mov
out
pop
push
(bad)
rol
sub
inc
in
in
and
and
cmp
adc
sbb
mov
xchg
cmp
pop
mov
shl
and
or
adc
ja
adc
std
(bad)
out
jl
pop
std
xchg
scas
xchg
test
dec
jnp
jecxz
jmp
jne
xor
sub
stc
xlat
jno
xchg
mov
push
dec
scas
mov
mov
es
les
xchg
test
push
mov
and
push
test
ficomp
mov
mov
outs
lods
js
mov
std
fdivr
add
mov
mov
adc
fcomp
pop
fnstenv
and
inc
in
cmp
inc
add
sub
pop
add
xor
js
xchg
retf
mov
loopne
mov
(bad)
sbb
lods
cmp
add
add
xchg
push
jns
add
mov
adc
pusha
lds
pusha
add
add
or
cmp
add
nop
scas
cmp
std
fdivr
inc
in
fcomi
imul
fnsetpm(287
nop
scas
mov
std
loopne
lock
cmpxchg
je
repz
mov
call
je
push
sub
fmulp
in
stos
adc
addr16
and
sbb
call
mov
mov
mov
mov
std
loopne
mov
jns
std
cmp
push
mov
popa
(bad)
dec
adc
sub
pushf
nop
pop
lock
call
(bad)
lock
cmp
cmp
std
lock
loopne
pop
adc
das
scas
stos
xchg
push
call
(bad)
stos
or
push
test
xchg
aad
int
mov
push
mov
(bad)
dec
aad
adc
scas
outs
dec
push
enter
in
add
std
sbb
leave
sub
ficom
(bad)
mov
std
and
in
std
cmp
mov
std
das
mov
movs
lea
sahf
int3
add
sub
les
push
enter
std
inc
repz
mov
pop
cmps
cmps
xchg
fdiv
sbb
scas
frstor
into
cmp
je
fidiv
out
add
inc
jmp
dec
cs
inc
mov
pop
leave
jne
add
jns
sub
nop
jmp
dec
xchg
inc
fiadd
mov
dec
int
rol
scas
mov
xchg
cwde
push
xchg
push
sub
in
fnstcw
jmp
and
sbb
pop
and
int3
mov
mov
sub
(bad)
pop
mov
cmp
sbb
fwait
push
and
(bad)
mov
fsubrp
cmp
leave
int3
and
add
mov
fs
adc
jmp
mov
xor
jecxz
les
je
pop
jno
mov
cmp
data16
jmp
shl
xchg
mov
jne
cmp
hlt
push
nop
add
dec
ficomp
fsub
or
ficomp
popa
shr
leave
or
xor
test
xchg
cmp
std
mov
adc
or
jne
pop
mov
js
outs
stos
dec
jno
test
push
push
xchg
popf
mov
and
push
int3
sub
jns
(bad)
div
loopne
sbb
xor
adc
mov
nop
mov
fidiv
into
sub
retf
dec
xor
and
je
or
rol
aad
pop
inc
in
push
sbb
xchg
sub
mov
test
and
or
inc
shl
and
or
adc
xor
or
add
add
push
sbb
sub
cmp
push
test
or
rcl
lock
into
dec
cmp
jge
add
adc
mov
and
js
inc
into
jne
and
xor
xor
out
add
cmps
add
in
cld
add
xchg
mov
test
lahf
outs
mov
jle
push
xor
pop
div
cs
in
pusha
loopne
inc
aas
or
and
add
not
lods
push
(bad)
hlt
(bad)
(bad)
ss
enter
inc
es
es
or
ja
test
mov
xor
inc
cwde
inc
and
lods
inc
pusha
adc
jno
or
push
jle
pop
mov
cmp
ja
jae
popf
jo
cld
cmp
je
mov
adc
push
pop
pop
jnp
aas
(bad)
clc
lock
mov
and
pusha
lods
and
or
push
jmp
mov
push
or
cmp
adc
push
add
outs
adc
pop
lea
pop
mov
sbb
scas
inc
sbb
loopne
(bad)
mov
pop
dec
stos
ror
test
or
mov
mov
inc
imul
loope
ror
shl
xchg
xchg
rcl
cmp
pop
adc
adc
jg
or
pop
cmps
and
pop
stos
movs
adc
push
mov
and
add
mov
in
sbb
icebp
push
jmp
test
gs
mov
jmp
fstp
fdivr
shl
mov
test
test
retf
pop
fsub
push
out
leave
inc
mov
pop
dec
sbb
or
mov
es
call
or
mov
or
xor
push
mov
push
in
mov
ror
xor
mov
cdq
push
add
es
sub
push
push
push
lahf
mov
inc
loop
pop
inc
sub
add
jns
adc
xor
sub
(bad)
push
or
mov
or
mov
std
pop
mov
or
dec
imul
sub
lods
push
call
dec
add
and
test
and
enter
add
or
xor
nop
scas
sti
fldln2
out
and
shl
dec
xor
adc
or
dec
push
jb
shr
add
outs
inc
sbb
add
mov
and
mov
mov
or
test
adc
shl
add
adc
or
adc
push
xlat
jo
push
push
sub
fdiv
data16
or
sub
pushf
or
or
clc
(bad)
push
push
pop
mov
mov
sbb
lock
and
mov
and
add
aaa
jecxz
jge
mov
or
sbb
dec
adc
xor
mov
fdivr
shr
xor
sub
aaa
jge
mov
pusha
and
stos
(bad)
mov
pop
adc
pusha
mov
pusha
loope
pop
sub
adc
push
jmp
mov
inc
jecxz
pop
fnstsw
dec
pop
push
fnstsw
pusha
pusha
(bad)
mov
call
loope
retf
cli
inc
test
and
adc
mov
add
add
test
xchg
xchg
push
cli
fisttp
stos
mov
loope
push
add
dec
je
add
dec
out
or
scas
jmp
push
and
and
pop
mul
pusha
mov
push
sbb
sbb
jb
dec
mov
sub
and
inc
add
adc
loopne
dec
inc
fld
fstp
jmp
fisttp
add
arpl
inc
pusha
popa
pop
adc
add
adc
inc
mov
mov
sub
rcpps
(bad)
pop
sub
pusha
aad
movs
(bad)
mov
or
push
loopne
dec
shl
test
call
adc
rol
push
loopne
inc
inc
aaa
sbb
aaa
hlt
imul
test
cmp
(bad)
inc
add
sub
sub
jmp
sub
nop
xchg
add
push
or
push
fldcw
movs
jns
add
adc
add
xchg
mov
scas
add
mov
mov
xor
adc
cmp
mov
inc
out
fstp
call
and
rcl
cmc
fistp
sbb
add
test
inc
arpl
rcr
add
test
popf
aam
mov
test
div
mov
cli
shr
sbb
cmp
dec
in
lods
sbb
nop
loopne
ss
jle
push
ins
test
push
pop
hlt
add
lock
mov
call
push
add
add
icebp
cwde
fcom
dec
mov
push
push
add
retf
int
and
sbb
cld
xchg
sar
mov
add
add
push
js
shl
xor
add
push
pop
or
add
add
and
(bad)
dec
add
mov
je
sbb
js
sub
or
(bad)
xor
push
adc
sbb
or
mov
movs
cmp
and
sub
adc
lock
loop
inc
out
stos
push
clc
es
or
add
add
(bad)
fistp
jno
mov
out
push
mov
adc
int
sub
call
sar
xrelease
lea
dec
mov
scas
adc
clc
adc
pop
push
mov
shl
cmp
imul
mov
add
mov
and
mov
mov
jbe
(bad)
push
das
adc
inc
(bad)
mov
or
inc
mov
mov
mov
out
lea
xor
ja
inc
adc
push
xchg
add
cmp
inc
sbb
aaa
push
jecxz
mov
sbb
pushf
imul
imul
mov
loop
inc
fstp
sbb
shl
inc
dec
pusha
fdiv
or
es
enter
fldcw
push
push
cmp
rcr
fld
pop
or
cmps
fwait
xor
cs
sbb
adc
push
or
call
sbb
fldpi
xor
mov
mov
inc
loopne
mov
inc
je
mov
rol
or
aad
adc
jne
loopne
mov
push
mov
and
or
popa
bound
repz
adc
push
sbb
xor
fimul
xor
mov
fs
cmp
add
arpl
ror
fcom
add
stos
and
lock
inc
push
nop
in
not
fbld
jmp
jb
and
push
sbb
leave
mov
add
or
sub
add
or
push
push
pop
ins
loopne
cld
(bad)
loop
jns
mov
popf
inc
push
sbb
and
lock
xchg
jg
cld
dec
ror
add
out
push
dec
je
and
push
and
or
je
sar
test
aas
add
gs
mov
fbld
test
cmp
das
inc
imul
lock
jecxz
mov
dec
add
(bad)
(bad)
push
outs
mov
cmp
and
outs
jmp
inc
dec
(bad)
push
push
push
push
sub
test
pusha
inc
or
jmp
inc
push
jne
jo
cmp
popa
dec
sbb
xor
and
ret
mov
adc
(bad)
pusha
test
mov
call
cmp
shl
fcomp
test
int3
and
cmp
je
jge
outs
fs
push
pop
pop
and
int
mov
mov
cmp
out
arpl
push
and
cmp
or
or
mov
xchg
test
adc
and
adc
sbb
lods
pop
(bad)
mov
fdiv
sbb
mov
test
mov
mov
sbb
push
jmp
pop
push
inc
adc
outs
pop
or
mov
dec
(bad)
clc
add
inc
push
and
cmp
pop
push
(bad)
sbb
retf
lock
xor
test
in
jne
lea
call
lock
ror
mov
sbb
ret
or
inc
idiv
cdq
lods
aas
shr
xchg
and
arpl
das
add
push
mov
mov
mov
or
cwde
jne
inc
loopne
mov
shl
dec
popa
imul
jne
call
sub
or
push
and
sbb
ficomp
sbb
pop
or
dec
adc
(bad)
inc
ins
enter
sub
pushf
mov
or
sbb
in
dec
(bad)
cmps
into
adc
jl
mov
adc
ret
clc
pop
sub
sbb
sti
mov
cmp
add
bnd
lea
lea
push
add
inc
or
jnp
int3
icebp
adc
push
lock
add
jge
sbb
push
jmp
fs
pop
adc
jno
hlt
sbb
jbe
inc
add
mov
adc
mov
enter
adc
push
adc
call
pop
inc
mov
and
and
push
add
cmp
sbb
push
adc
push
mov
icebp
pop
and
loopne
sub
rol
aaa
jo
inc
cmp
xor
out
push
mov
inc
xlat
out
icebp
xor
or
sub
push
push
push
or
push
(bad)
std
sahf
cld
mov
pop
clc
push
mov
or
and
in
pusha
int3
adc
add
test
sbb
inc
pushw
push
cli
sub
addr16
cmp
imul
icebp
jge
cmp
dec
clc
push
dec
mov
pop
(bad)
mov
add
test
imul
lods
mov
pop
and
inc
adc
sbb
or
je
dec
or
hlt
hlt
sbb
jbe
jae
adc
pop
aam
mov
shr
(bad)
pop
popf
cmc
dec
push
les
frstor
movs
push
shr
nop
out
add
xchg
je
outs
inc
adc
enter
or
xlat
xchg
sbb
xlat
sub
jns
add
cmps
mov
jp
scas
adc
jne
sub
cmp
fwait
(bad)
pop
jb
push
sbb
ss
pop
pop
pop
dec
pop
aaa
mov
and
cmp
cmp
or
and
lahf
es
xchg
ror
dec
push
jle
test
inc
mov
jmp
int
fadd
dec
adc
push
mov
pop
sbb
shl
sbb
out
mov
(bad)
pop
clc
mov
into
jne
cmp
cmp
je
push
call
shl
and
sbb
les
icebp
mov
xchg
jo
jle
jns
push
movs
cli
out
cmp
push
add
push
std
jo
pusha
popa
mov
cwde
dec
aaa
or
dec
push
pop
je
dec
jne
aas
push
pop
inc
in
and
out
div
lock
sub
mov
imul
sub
and
dec
adc
sub
test
adc
sub
test
adc
inc
mov
sbb
sbb
movs
add
hlt
nop
push
inc
ins
fmul
push
sub
or
adc
push
mov
jb
je
xchg
adc
or
shl
pop
(bad)
jb
inc
jge
ss
push
and
push
and
or
inc
mov
push
add
inc
cs
sbb
add
xchg
sbb
scas
mov
xchg
repnz
sahf
cmp
outs
js
test
and
xor
ins
add
mov
daa
pop
add
xor
add
jo
mov
adc
cld
add
cmp
cwde
or
add
or
retf
ret
pop
mov
and
div
mov
cmp
scas
sbb
jae
cmp
add
sub
sub
(bad)
sbb
cmp
jae
lea
ds
(bad)
sbb
add
jmp
(bad)
jmp
mov
xor
or
adc
imul
cmp
mov
push
nop
xor
je
mov
clc
mov
mov
and
xor
dec
jmp
inc
pop
add
pop
jno
inc
and
mov
cwde
sbb
test
xor
nop
js
inc
lock
sub
xchg
ins
dec
mov
test
js
inc
mov
test
sbb
out
jecxz
out
(bad)
les
adc
jb
dec
push
or
mov
pop
cld
je
mov
sbb
movsx
pop
jno
jp
lahf
add
xadd
fsubr
inc
xchg
outs
call
jl
jo
sbb
in
popa
inc
ret
and
inc
sub
sub
push
mov
or
pushf
enter
sub
test
mov
inc
shl
xchg
js
or
push
cmp
inc
or
loopne
mov
adc
mov
cwde
add
mov
push
mov
push
ret
push
icebp
fild
add
nop
mov
jmp
pop
dec
je
mov
sub
pop
es
shufps
and
lea
pop
adc
sbb
shl
mov
(bad)
push
hlt
dec
jnp
and
jb
lea
stos
cmp
cmp
or
push
mov
push
and
mov
add
rcl
xchg
pop
push
sub
int3
inc
lds
add
jmp
and
pushw
jmp
jae
pop
test
xor
jne
mov
mov
sbb
xchg
mov
push
or
add
mov
popa
sub
xchg
into
sbb
mov
cwde
pop
xchg
test
mov
js
jecxz
pop
lock
add
inc
pop
loope
call
inc
out
or
call
mov
sub
cmp
adc
call
daa
adc
jmp
push
dec
sbb
pusha
jb
push
js
mov
jmp
lahf
outs
adc
push
or
jne
ins
jmp
movs
pop
fisttp
stc
inc
jae
or
jae
fs
push
shld
shl
sbb
pop
in
or
ins
sbb
ret
rol
sub
fwait
shrd
shr
ret
call
pop
aaa
adc
sar
dec
push
xchg
or
lods
and
popa
fs
jne
mov
outs
call
stos
push
inc
(bad)
in
add
inc
jbe
pop
jge
and
jecxz
and
shl
cmp
or
mov
bound
das
jmp
push
pop
mov
cmp
test
inc
gs
jg
push
pop
or
inc
add
jl
fisub
loope
add
jmp
cmp
push
jb
push
or
pusha
cmps
xor
enter
test
pop
je
fcom
pop
rol
test
add
mov
sub
movs
sub
or
pop
cs
lods
fdiv
fwait
popa
out
mov
test
ds
adc
rol
or
push
call
sbb
jmp
cmp
je
mov
and
lea
cmp
fisubr
idiv
and
pop
not
push
adc
mov
pop
cmp
xor
mov
push
and
xor
adc
and
pop
mov
(bad)
fs
shr
in
mov
cmp
loopne
xor
add
sub
sbb
mov
or
mov
outs
fsubr
push
(bad)
sub
jbe
dec
push
push
mov
or
js
pop
shl
mov
aaa
mov
mov
jmp
adc
outs
dec
in
(bad)
jo
push
push
or
add
or
sub
popf
mov
adc
push
push
test
ja
cmps
mov
aam
fisubr
mov
mov
push
inc
fidiv
cmps
xchg
push
jg
dec
xor
ds
shl
push
pop
imul
cld
(bad)
aas
adc
push
cmp
je
cmp
jl
cmp
jg
inc
jmp
fwait
rol
pop
jbe
jne
cmps
xchg
out
push
pop
inc
inc
or
std
jo
jge
aas
sbb
push
xchg
add
cmp
(bad)
in
cmp
sbb
aas
dec
push
dec
je
aam
xchg
das
mov
mov
lock
xor
stos
xor
add
add
dec
jecxz
stos
adc
add
clc
inc
and
ins
cs
push
push
cld
inc
push
dec
xor
fsub
sbb
lea
mov
cmp
xchg
loopne
add
loopne
stos
add
sbb
popa
sti
(bad)
ins
pop
sub
lea
mov
inc
dec
mov
sbb
cdq
sbb
add
enter
shr
cdq
jb
mov
add
les
inc
not
imul
pushf
outs
adc
add
fadd
pop
sub
test
scas
xchg
sub
push
sbb
lea
jmp
cli
xor
sbb
add
(bad)
call
push
inc
add
adc
add
(bad)
cmp
jle
sub
jmp
cmc
xchg
mul
leave
sbb
mov
pop
adc
mov
lahf
or
jne
imul
dec
and
and
leave
call
mov
sub
jne
sbb
pop
inc
dec
sbb
push
into
arpl
xor
push
test
in
add
(bad)
popa
xor
jns
or
sti
pop
es
sbb
or
seta
xchg
cmc
jmp
mov
int3
in
push
sub
jne
das
mov
or
lods
push
cmp
mov
cmp
xor
into
aam
jne
xor
(bad)
mov
add
and
and
and
mov
sbb
and
xor
test
push
jmp
pop
push
push
push
push
sbb
(bad)
jae
shr
or
(bad)
add
mov
outs
pop
enter
ja
mov
push
adc
push
sbb
pop
(bad)
dec
mov
add
push
sub
das
add
imul
inc
rcr
mov
or
push
dec
mov
pop
push
pop
jnp
ins
popf
push
js
mov
push
das
js
mov
stos
dec
mov
sbb
dec
mov
and
sar
cmp
jle
jge
loopne
cdq
ret
and
bnd
cli
adc
push
add
or
out
jne
rcr
pop
setge
scas
sbb
and
inc
mov
mov
lods
or
add
call
sub
push
lods
retf
out
ret
pusha
sbb
add
fwait
push
mov
popf
mov
xor
mov
mov
enter
add
gs
mov
fld
in
cli
sub
xor
aad
xchg
ss
lock
fild
repz
and
push
jmp
xor
jl
jg
jo
pop
jg
es
xchg
ja
push
sub
xor
add
inc
mov
(bad)
fld
inc
lea
stc
arpl
aam
adc
pop
add
rol
xchg
xchg
jle
or
xchg
sbb
test
lea
mov
in
mov
(bad)
sbb
mov
lds
or
push
and
daa
mov
push
hlt
jecxz
dec
cmp
pusha
or
mov
js
dec
and
lds
dec
or
inc
mov
or
add
(bad)
outs
jmp
ss
push
leave
mov
or
adc
imul
hlt
add
push
les
push
cs
int3
outs
jo
push
sub
xor
out
jne
mov
adc
add
or
aaa
push
sbb
jl
(bad)
adc
add
test
ds
fmul
int
cld
push
mov
add
cld
mov
push
push
sbb
out
sbb
lock
call
mov
cmp
inc
inc
fld
(bad)
leave
and
pusha
ss
repnz
rcr
mulps
add
push
lock
mov
js
jl
push
push
push
push
xor
jge
inc
fnsave
fdiv
fiadd
sbb
es
ss
sbb
add
ins
sbb
mov
fdiv
push
test
loopne
rcr
ins
fcomi
sbb
and
dec
xchg
add
cdq
xchg
pusha
or
push
xchg
and
adc
pushw
sbb
ss
xor
cmp
enter
call
jns
jmp
popa
mov
ret
xor
xchg
or
ja
lods
dec
push
or
sbb
push
adc
call
repz
ins
pop
test
inc
xchg
adc
push
jo
dec
xchg
cmp
fisttp
dec
cmp
jbe
aam
xchg
sub
fnsave
cs
mov
cli
scas
pop
lsl
sbb
or
pop
jmp
add
pop
inc
cli
rcr
call
adc
jbe
add
and
div
rcr
(bad)
loopne
in
in
in
sbb
push
inc
sbb
adc
jle
es
(bad)
cwde
jbe
push
inc
or
add
xchg
push
dec
(bad)
inc
dec
(bad)
jb
mov
mov
adc
push
push
and
push
mov
add
int
inc
xor
jp
mov
or
loop
jo
out
inc
imul
imul
jmp
xchg
(bad)
fild
mov
push
aas
sar
loopne
add
into
jmp
ins
or
add
sbb
xchg
mov
(bad)
sbb
test
mov
adc
rcl
xchg
cmps
adc
sub
push
stos
mov
es
add
inc
imul
(bad)
push
push
cmp
pop
xchg
xchg
xor
sbb
jo
add
xchg
test
push
jbe
sub
inc
adc
jmp
lahf
jne
sub
enter
mov
fsub
dec
mov
cmp
mov
ss
rcl
and
shr
es
jo
push
add
dec
inc
inc
xchg
push
jnp
pop
dec
cmc
xchg
mov
add
in
cmp
retf
sub
in
ror
jg
and
cmp
and
cmp
adc
inc
cli
sub
push
repnz
add
mov
sub
dec
out
iret
mov
je
and
aas
sub
dec
es
test
call
mov
inc
or
sub
add
out
sti
xor
sub
xchg
sbb
mov
push
call
je
loope
xor
je
sub
add
push
pop
inc
mov
push
xlat
ret
and
gs
nop
popf
xchg
jmp
outs
add
add
gs
push
gs
hlt
cwde
or
mov
xor
(bad)
outs
and
lea
icebp
enter
(bad)
daa
and
stos
loop
xchg
xchg
dec
push
push
sub
inc
lock
mov
pop
xor
loopne
and
push
add
xor
xchg
adc
inc
push
push
xor
call
push
(bad)
xor
in
test
xchg
mov
or
dec
push
dec
stos
adc
in
sub
jbe
lds
dec
jno
call
add
call
adc
dec
and
jp
add
inc
cs
cmp
je
cmp
pop
jne
jne
mov
add
xchg
scas
and
pop
ins
mov
jmp
or
jle
in
arpl
mov
and
dec
or
sbb
mov
int3
pusha
ins
push
mov
cmp
adc
dec
hlt
ret
pop
xor
ds
pop
add
stos
pop
cmp
sbb
mov
inc
jno
aam
dec
cmp
mov
dec
jo
in
scas
(bad)
xchg
pusha
cmps
mov
lea
pop
add
loope
jecxz
mov
sub
mov
xchg
fnop
aas
stc
jae
lea
push
xor
int
jb
sub
ds
or
mov
dec
pop
mov
pop
pusha
rcl
popa
and
xor
shl
call
ss
loop
or
lock
sub
lea
push
js
dec
push
(bad)
push
push
lods
repz
mov
push
test
and
cmps
out
es
adc
lock
push
mov
mov
(bad)
in
test
not
mov
cwde
push
cld
xor
sbb
sahf
push
xchg
fsub
lock
pusha
and
cli
sbb
xor
and
pop
js
push
fdivr
repz
or
clc
ret
or
loop
not
and
pushf
push
retf
ror
clc
fs
lea
sub
mov
ins
mov
xor
dec
(bad)
call
add
push
cmp
ja
stos
lock
inc
jae
xor
lock
(bad)
xchg
inc
imul
test
adc
and
xchg
add
xchg
aam
sub
out
(bad)
sbb
push
imul
dec
push
jmp
sbb
sub
push
scas
shl
sbb
cmp
je
push
jbe
pop
and
outs
test
rcl
inc
add
or
jmp
dec
adc
and
les
shl
mov
adc
outs
or
inc
inc
or
fsub
loopne
adc
fist
aam
jb
dec
adc
arpl
jmp
jb
sbb
and
(bad)
cmp
inc
cmp
xor
dec
cmp
pop
test
xor
ror
test
xchg
jp
pusha
test
leave
adc
shr
and
test
adc
pop
sub
shl
inc
xor
push
or
jb
or
adc
leave
leave
in
ss
leave
leave
leave
leave
sub
xor
fwait
pop
ret
cmp
inc
and
xchg
fisttp
inc
cmovs
xchg
xchg
push
push
pop
add
in
fs
in
je
jl
mov
xor
sbb
cdq
fs
dec
mov
xchg
cwde
pushf
xchg
dec
es
mov
cdq
fs
fs
enter
xchg
dec
cmps
dec
mov
es
fs
call
in
aam
hlt
pushf
fs
dec
clc
cld
add
and
add
fidiv
sbb
es
and
dec
es
sub
dec
es
fs
cmp
es
add
dec
xchg
dec
xor
dec
mov
pop
dec
xor
and
pusha
sbb
jmp
pop
xchg
lock
int
mov
cmps
add
mov
nop
pop
dec
xor
xor
bound
rcl
xchg
or
ror
adc
cwde
adc
int
xor
sbb
xor
and
shr
sar
inc
enter
adc
rcr
xor
dec
aam
and
add
mov
sbb
mov
push
adc
and
jo
add
cwde
aas
rol
inc
lods
sub
pop
mov
dec
sbb
stos
add
les
mov
mov
fmul
jae
push
test
and
rcl
add
mov
pop
fmul
cmp
ret
cmp
ja
pop
and
jb
push
or
adc
fstp
inc
mov
mov
inc
cmp
je
dec
cli
inc
shl
sbb
sub
mov
mov
inc
cmp
je
dec
loope
adc
out
mov
mov
jnp
fcom
shld
ror
mov
aas
lods
sub
xor
sub
es
loop
or
push
inc
test
sar
popa
repz
add
mov
adc
clc
imul
mov
icebp
lea
mov
fs
pop
mov
push
push
dec
inc
das
mov
or
adc
sub
dec
dec
jle
pop
adc
xchg
test
cmp
push
mov
jmp
lock
inc
call
mov
xor
into
push
adc
lock
movs
test
push
push
inc
or
or
add
or
imul
and
cmp
add
cmp
or
jecxz
ret
call
inc
pop
in
pop
cmp
adc
cmp
xlat
add
cmp
pop
inc
outs
sub
cli
push
mov
push
xchg
inc
cs
cmp
mov
pop
mov
fs
push
out
mov
js
cli
es
adc
es
je
fdiv
aas
inc
push
inc
inc
mov
inc
call
sbb
sahf
xor
sbb
sbb
push
shl
adc
or
shl
mov
sub
mov
in
ja
inc
in
mov
fisubr
out
in
cmp
push
daa
ret
xor
cmp
nop
pop
or
ins
pop
adc
(bad)
cmp
ret
and
sub
enter
jg
cmpps
pop
stos
or
add
or
add
mov
mov
or
loopne
sbb
es
popf
add
adc
jae
xor
std
xor
xor
adc
jae
push
sbb
imul
xor
jae
push
sub
push
lock
jg
inc
jb
mov
or
leave
test
pop
mov
xchg
movs
out
add
fist
into
mov
ss
or
xor
xchg
imul
test
sbb
mov
das
push
push
jb
pop
sbb
addr16
aaa
es
lahf
pop
inc
push
jbe
jnp
inc
cmp
fld
loopne
daa
jg
fwait
dec
in
(bad)
xor
xor
add
or
xlat
xor
mov
arpl
dec
inc
clc
mov
or
push
add
loope
pushf
adc
or
add
pop
std
outs
add
add
push
mov
inc
lods
movs
push
test
pop
mov
push
or
xlat
jmp
mov
xor
and
xor
data16
out
jb
adc
xchg
or
iret
inc
ins
imul
sbb
rol
hlt
adc
mov
xchg
cdq
ja
adc
sub
out
jg
test
add
pop
lea
movsx
and
or
mov
push
ret
in
add
sbb
inc
push
ins
gs
cwde
not
cmc
cmc
mov
and
or
and
inc
mov
and
xchg
mov
xchg
jp
inc
inc
sti
sbb
js
add
(bad)
xchg
mov
xor
popa
add
add
xchg
or
or
shr
cmp
aam
or
mov
push
xchg
in
cmp
call
(bad)
leave
or
fiadd
mov
or
cld
or
and
jg
add
fisttp
mov
test
lahf
fiadd
je
xor
push
xor
fcomp
pop
ret
neg
jmp
mov
lock
xor
js
mov
hlt
shl
mov
cmp
inc
cmp
shl
std
pop
fs
add
js
or
jmp
push
xchg
cmp
popa
add
adc
sub
push
shl
adc
jno
xchg
adc
xchg
fwait
popa
adc
adc
pop
adc
push
repz
adc
sbb
jmp
push
loop
or
dec
sub
dec
js
push
add
retf
pop
inc
xor
xor
pop
jge
mov
dec
loop
mov
loope
inc
js
and
sar
push
jo
cs
push
add
std
and
adc
gs
cmp
sar
sbb
mov
xor
js
adc
rol
loopne
pushf
cmp
dec
adc
div
jb
nop
jo
mov
add
inc
sub
nop
dec
or
push
gs
arpl
enter
sub
ror
lock
and
xchg
sub
pop
pusha
and
rcl
sbb
pop
test
jp
hlt
sbb
(bad)
outs
(bad)
fisubr
pop
pop
fisttp
xor
in
add
call
or
je
push
pop
out
pop
rol
adc
pop
lods
jns
dec
or
inc
lea
pop
aad
in
mov
repnz
popa
outs
(bad)
fwait
inc
or
shl
not
test
cmp
mov
jmp
(bad)
out
shr
mov
out
mov
inc
fwait
or
push
adc
iret
push
push
adc
mov
add
ds
or
out
jno
cmp
cmp
adc
pop
shl
cli
jb
inc
lock
js
dec
xchg
mov
sar
pop
or
adc
cs
sbb
and
and
push
xor
push
and
mov
fidiv
mov
sbb
or
or
inc
stos
inc
std
adc
(bad)
push
mov
inc
aam
add
cmp
mov
xchg
movs
das
fadd
adc
add
mov
shl
sub
lahf
and
push
fcomp
pop
loopne
pop
popf
sahf
mov
pop
jb
mov
and
cmp
(bad)
add
push
or
out
or
mov
jl
scas
jo
push
inc
shl
cmp
into
cmp
mov
and
ret
je
lahf
fs
dec
xchg
dec
outs
icebp
jns
mov
push
push
sbb
adc
lahf
(bad)
lods
pop
out
test
ror
push
adc
mov
out
cwde
ror
rcr
dec
xor
(bad)
cmp
or
cli
fsub
or
push
jb
or
inc
xor
mov
xor
cmp
and
scas
sbb
shl
hlt
push
sub
push
aas
mov
sbb
or
lea
(bad)
leave
fs
inc
movs
outs
sbb
jl
das
cmp
add
call
ss
mov
inc
aas
sbb
dec
add
add
push
jne
daa
and
push
dec
into
out
or
rcl
dec
iret
and
dec
jbe
add
and
mov
jge
call
jge
inc
push
add
adc
fimul
lods
shl
test
xchg
dec
ret
pop
add
or
ficom
or
add
pop
lock
int3
pop
mov
add
pop
clc
jle
sub
and
push
fldenv
add
rcr
inc
cmps
mov
sub
jns
add
bound
mov
add
dec
mov
or
xor
je
sub
and
enter
pop
and
lods
mov
push
add
jmp
inc
sub
iret
test
lea
cmp
js
test
fimul
cmps
lock
mov
mov
mov
inc
lods
adc
xor
mov
cmp
mov
or
lock
inc
xchg
xchg
adc
adc
retf
cs
or
ret
push
stc
gs
or
test
dec
lahf
loopne
or
mov
push
mov
cmp
(bad)
sbb
add
or
mov
rol
add
out
call
inc
jmp
pusha
sbb
nop
test
mov
adc
and
mov
xor
and
xor
cs
pop
add
or
sti
inc
arpl
push
add
adc
add
add
dec
mov
or
ret
ret
pop
lock
je
and
fst
shr
cmp
jbe
or
add
lods
xor
ror
inc
cmc
sbb
push
pushf
ret
push
pop
sbb
shr
addr16
pushf
ss
setg
mov
cmp
add
retf
adc
adc
cmp
mov
jne
mov
lea
adc
adc
cld
mov
adc
or
xchg
popa
pop
aam
and
fdiv
mov
ret
jo
test
jbe
push
popf
(bad)
push
jg
and
pop
aaa
pop
mov
fdiv
das
mov
fadd
inc
add
nop
jl
cdq
lods
idiv
mov
js
or
add
xor
add
add
mov
jne
push
xor
push
iret
or
ret
ins
xlat
add
test
add
dec
xor
pop
sub
push
and
cmp
outs
and
xchg
shr
call
ins
(bad)
or
mov
or
sbb
xchg
sub
loopne
dec
enter
xchg
movs
in
pop
pop
out
push
push
adc
shl
enter
or
(bad)
jmp
jmp
les
mov
pusha
mov
mov
je
sbb
mov
test
jecxz
pop
pop
and
and
add
pushf
sub
cmp
or
pop
retf
and
jl
xchg
or
jbe
cmp
push
pop
dec
ror
add
dec
enter
sub
and
adc
or
jmp
retf
mov
add
sub
pop
or
and
imul
dec
and
call
out
enter
sub
jmp
ficom
sub
xor
cmp
enter
js
inc
mov
(bad)
clc
add
mov
(bad)
pop
out
js
sub
leave
and
add
ins
mov
in
or
xchg
push
movs
or
mov
(bad)
je
mov
inc
popf
neg
sbb
mov
stos
add
jg
adc
jg
ret
daa
xor
or
jne
bound
xor
das
retf
add
xor
mov
(bad)
push
pushf
sub
fisubr
jmp
(bad)
jmp
inc
xor
mov
pop
sbb
sbb
sbb
(bad)
push
(bad)
add
cmps
or
mov
adc
ins
add
pushf
daa
xchg
push
push
daa
and
mov
mov
movsx
and
ins
cmp
outs
and
ja
stos
cmp
mov
jbe
add
mov
cld
rcr
hlt
shrd
sbb
leave
int3
rol
dec
cmp
mov
scas
sbb
clc
dec
mov
mov
cmp
sar
adc
inc
and
xor
out
push
ja
mov
ret
cmp
jo
loopne
inc
mov
adc
lock
xor
add
mov
and
xor
xchg
jo
(bad)
mov
in
and
jno
shr
ins
pop
sbb
js
jg
sbb
xor
outs
add
fsubrp
or
neg
mov
sar
mov
cmp
sar
(bad)
push
shl
xor
add
mov
inc
or
xlat
lds
mov
add
jmp
and
xchg
imul
jb
or
jo
imul
imul
add
in
cmps
or
(bad)
and
(bad)
lock
jbe
xor
xchg
test
mov
jae
mov
jp
ficomp
sbb
jle
in
in
jne
rcl
mov
push
cmp
inc
sub
jb
add
es
inc
inc
or
or
add
xor
test
push
(bad)
and
add
push
mov
push
scas
dec
or
mov
and
pusha
(bad)
shr
push
push
and
xchg
lods
or
adc
fnstenv
fiadd
into
lds
(bad)
push
mov
adc
jne
push
mov
add
mov
add
xor
rcl
jne
push
cmp
jo
mov
push
and
xchg
fadd
sub
sub
lea
stc
not
adc
or
or
push
push
push
push
mov
dec
dec
out
adc
pop
dec
int3
cld
jl
loopne
jge
sar
mov
inc
jmp
cmp
into
sbb
sbb
mov
add
xor
mov
gs
or
pop
data16
sub
push
sbb
lods
or
fs
cmps
pushf
aas
cmp
inc
inc
je
mov
ins
sbb
or
or
jmp
and
pop
pop
pushf
and
inc
push
das
aad
xchg
sbb
rcr
fidivr
or
push
xor
inc
add
pop
add
js
retf
fldcw
adc
out
iret
retf
cmp
nop
or
retf
retf
sbb
pop
sub
or
pop
(bad)
mov
mov
mov
and
inc
shr
jno
js
fnstsw
sbb
jo
push
dec
adc
xchg
and
cmc
test
fiadd
pop
push
inc
jp
push
sub
add
fadd
and
dec
and
inc
dec
inc
push
or
mov
push
xor
sbb
icebp
inc
inc
pop
push
in
dec
inc
mov
cmp
push
movs
fs
mov
sar
or
or
or
fadd
push
mov
test
jg
lea
add
or
pop
add
shr
or
(bad)
mov
dec
call
and
add
pop
push
stos
(bad)
dec
mov
cmp
mov
in
cmp
scas
adc
add
movs
fisub
add
hlt
dec
mov
inc
jl
in
sbb
cmp
repz
les
add
rol
repnz
inc
fisttp
cmp
shr
cmps
cld
ins
adc
mov
ret
call
clc
cs
and
push
imul
shl
cli
test
pop
ss
mov
inc
rcr
or
add
and
adc
sbb
popf
add
ret
fadd
ins
mov
or
inc
add
adc
mov
push
loope
pusha
ficom
mov
test
sub
sbb
mov
mov
add
inc
and
or
xchg
or
sar
popa
pop
je
or
or
int
sbb
push
sbb
adc
add
pop
add
mov
adc
push
or
or
jge
sbb
cmps
outs
leave
pop
test
add
sar
jle
stos
enter
add
lods
jb
pop
pop
outs
push
rcr
shl
sub
jns
jmp
xchg
loopne
adc
jbe
or
mov
add
jbe
xchg
test
sub
jo
popa
inc
ins
pop
jbe
mov
and
or
mov
and
shl
sar
iret
or
xchg
(bad)
push
scas
(bad)
enter
sbb
ror
add
xor
inc
mov
enter
push
push
push
push
xchg
adc
hlt
dec
dec
inc
pop
pop
jl
adc
data16
mov
retf
je
mov
jmp
shr
xor
fidiv
jbe
or
or
and
loop
xor
pop
or
(bad)
(bad)
ror
test
push
jb
add
xor
sbb
sbb
mov
les
fcmovu
add
push
adc
movs
xchg
movs
inc
jmp
xor
jnp
jl
push
pusha
(bad)
int
mov
adc
inc
jecxz
es
dec
repnz
cmps
sbb
jnp
xor
mov
sbb
add
cmps
data16
inc
push
push
sbb
jmp
ss
xor
in
pop
inc
mov
add
loop
adc
into
repz
hlt
aaa
push
sub
movs
cmp
sub
pusha
cmp
jmp
cmps
repnz
add
pusha
lock
add
xor
clc
mov
mov
push
stc
cmp
dec
and
add
dec
pop
and
add
sub
push
inc
in
xchg
adc
dec
dec
jmp
inc
add
jmp
ds
add
loope
mov
pop
xor
cli
add
or
dec
sbb
stos
mov
stos
cwde
dec
adc
or
pop
inc
fstp
es
add
xlat
addr16
add
or
push
or
sbb
mov
lahf
sbb
mov
cs
push
das
sbb
(bad)
push
push
stc
pop
mov
into
(bad)
adc
push
call
hlt
xlat
adc
dec
inc
and
jo
mov
mov
jnp
jmp
and
jge
jbe
pop
xchg
ret
mov
and
mov
adc
xor
cmp
push
inc
in
adc
inc
xchg
ja
xchg
imul
and
fstp
mov
pop
ss
out
or
mov
mov
call
pop
pop
mov
fsubr
mov
add
cmp
add
outs
imul
mov
and
or
jg
rol
push
add
ret
clc
mov
mov
rcl
cmp
cmp
push
cmp
pop
loopne
test
dec
aam
cmps
clc
fsubr
jne
mov
pop
neg
sub
sbb
(bad)
cdq
push
xor
sub
jb
jns
mov
push
mov
(bad)
sub
(bad)
jmp
(bad)
lods
fisubr
cmp
(bad)
bound
dec
retf
dec
loopne
xor
adc
inc
test
inc
ins
sub
and
add
add
xchg
and
push
data16
in
shr
call
jmp
jmp
or
jns
(bad)
and
les
popf
xchg
xlat
and
(bad)
xor
shl
scas
cmp
pop
cwde
dec
and
(bad)
jbe
data16
(bad)
fmul
add
sub
les
dec
jb
sbb
loope
loope
fidivr
clc
add
faddp
fsubr
int3
push
and
push
mov
ret
xchg
pop
add
in
inc
jmp
je
cs
or
mov
test
out
mov
mov
pop
inc
int
adc
add
ins
adc
call
mov
pushf
pop
popf
dec
and
pop
daa
cmp
jne
pop
test
or
jne
push
(bad)
rcr
ds
sub
ds
xor
call
rol
jp
push
inc
cmp
inc
xchg
je
add
popa
hlt
sub
fst
mov
or
mov
xor
and
xor
ret
or
adc
jmp
shl
pop
and
or
cmp
mov
in
fwait
sbb
(bad)
jmp
xchg
jle
ins
loope
or
xchg
adc
ins
push
and
mov
ins
jge
fmul
xor
dec
sti
jp
imul
or
or
and
add
and
adc
add
adc
sbb
out
sub
jo
test
or
rcl
je
adc
jg
in
dec
jmp
or
retf
xor
test
sub
jae
pop
in
ror
(bad)
test
je
cs
punpckhdq
mov
adc
pop
xor
push
jmp
or
imul
imul
push
les
neg
cmp
out
dec
or
add
and
int
adc
dec
cld
push
sub
and
and
or
ret
dec
mov
inc
enter
add
push
lea
mov
cmp
push
out
and
sub
push
cmp
dec
inc
add
jle
js
int3
jl
verw
sbb
shl
popa
lock
push
jmp
ins
sub
mov
mov
push
jg
cmp
mov
nop
fcmovbe
push
or
js
aaa
pminsw
dec
push
mov
or
jo
cmps
add
pop
push
push
push
pop
pop
pop
pop
pop
sbb
daa
int3
rol
ja
adc
cmp
cdq
bound
test
pusha
mov
pop
je
outs
fs
lods
dec
inc
mov
inc
mov
add
fsub
daa
push
adc
or
sbb
cmp
jne
push
inc
push
jnp
add
movs
and
or
dec
dec
sub
nop
enter
jmp
push
adc
repz
test
inc
adc
sbb
lea
add
inc
and
loop
pop
sub
or
call
jg
jp
or
and
jmp
lds
inc
daa
or
bound
js
or
pop
or
or
pop
mov
movs
or
test
add
clc
je
sub
pop
pop
and
add
xchg
daa
enter
or
aam
xchg
sti
pop
int3
in
jmp
stc
inc
add
push
sub
je
xor
sar
and
and
test
outs
xchg
xor
cmp
aas
push
sbb
jmp
sbb
inc
jmp
push
and
pop
pop
mov
ret
xor
or
jmp
push
pop
and
js
and
and
jmp
adc
xor
in
inc
xor
cli
lea
pop
popa
cs
push
adc
ret
inc
push
sub
xchg
add
retf
push
test
lds
add
xchg
add
mov
cmp
adc
jecxz
xor
jp
dec
imul
in
cld
fisttp
adc
push
sbb
sub
lea
vmovlps
cmp
fild
imul
mov
std
repnz
dec
rol
cmp
adc
bound
cmc
add
pop
popa
sub
xchg
fcom
into
dec
cmp
add
xchg
sub
ss
sub
push
pop
stc
imul
in
inc
add
xchg
nop
or
push
jp
dec
test
das
xor
add
call
imul
ss
add
retf
mov
cmp
mov
int
pop
leave
in
sahf
hlt
sub
push
sub
add
movs
mov
dec
jmp
jmp
sub
push
pop
push
add
sti
int
ss
mov
inc
dec
sub
in
jne
add
jl
js
cmp
jl
clc
dec
cmp
je
inc
cmp
jne
inc
dec
add
pop
push
xchg
es
ret
pop
ror
push
es
mov
push
xchg
and
push
jecxz
sub
sti
mov
mov
cdq
and
or
inc
add
sub
fld
jmp
mov
out
cmp
scas
push
and
sti
or
jmp
dec
add
sti
cmp
adc
push
add
jo
pusha
hlt
xlat
mov
clc
loopne
add
add
retf
or
(bad)
je
mov
iret
add
or
xor
xchg
cwde
mov
sahf
or
or
or
dec
pop
add
loop
pop
jge
sub
dec
mov
movs
movs
movs
xor
pop
cwde
and
popa
mov
push
loop
add
mov
test
fs
ja
sub
mov
ror
aam
pop
mov
sahf
mov
xchg
inc
dec
mov
lds
sbb
sbb
cwde
call
bound
dec
test
test
rcr
mov
div
adc
push
xor
idiv
and
iret
neg
add
inc
and
or
xor
xchg
sbb
leave
add
lods
fild
add
dec
bound
adc
ror
mov
and
push
push
sub
out
push
cmps
mov
retf
pop
gs
push
test
movs
pop
in
mov
sub
daa
dec
inc
xchg
xor
fmul
js
and
add
mov
cmp
add
sub
and
mov
and
cmp
(bad)
sub
mov
cmp
dec
cmp
aaa
xchg
and
and
adc
out
loopne
ins
adc
pop
lods
dec
add
and
ins
fmul
or
pushf
push
inc
sbb
xor
retf
pushf
dec
out
cmps
(bad)
rol
mov
sub
jmp
in
mov
sbb
sbb
inc
lahf
jg
add
and
adc
or
aaa
xlat
add
jb
sub
clc
jbe
dec
mov
dec
push
push
fiadd
and
mov
inc
adc
and
push
xchg
cmp
call
sbb
adc
inc
xor
fmul
push
lea
add
dec
das
xor
add
cmp
ins
dec
dec
add
mov
sub
jge
clc
(bad)
shr
dec
fisttp
sbb
test
add
mov
add
rol
or
enter
jae
jne
bnd
push
inc
aaa
rcl
outs
shl
retf
inc
jbe
(bad)
mov
cli
inc
pop
xchg
js
jg
and
icebp
adc
jle
push
hlt
fdivrp
jno
sbb
xor
cdq
xor
or
push
mov
xchg
pop
xchg
lock
movs
dec
shr
ss
test
js
jg
retf
dec
jl
and
push
(bad)
clc
xchg
add
fstp
xchg
pop
xchg
(bad)
std
mov
cmp
add
sub
mov
in
jae
push
movs
mul
sub
repz
inc
out
lock
sbb
xlat
(bad)
jmp
cmp
adc
add
ficom
jns
popa
aam
call
jmp
jp
jb
mov
aaa
test
mov
adc
add
cmp
cld
jmp
cmp
jbe
mov
xchg
sub
mov
inc
inc
lahf
push
add
ds
daa
push
or
test
add
push
or
inc
movs
xor
add
dec
cmp
xor
dec
push
add
mov
(bad)
xchg
push
cmp
add
mov
push
mov
jecxz
mov
cmps
jmp
stos
or
and
inc
jb
es
sub
mov
les
ss
inc
fstp
cmps
mov
dec
sar
bound
ret
ret
enter
jle
jp
pop
inc
jmp
lahf
push
jmp
shr
or
je
push
mov
inc
mov
mov
cmp
in
je
mov
and
out
push
cmp
xchg
call
add
cmp
adc
(bad)
cmp
add
shl
leave
adc
mov
jle
add
(bad)
sbb
adc
xchg
dec
add
nop
scas
cld
add
push
into
jne
test
dec
movs
cmp
push
sub
fmul
ret
add
add
data16
xor
daa
mov
pop
sub
jne
inc
jmp
push
mov
cs
mov
(bad)
rep
sbb
inc
inc
or
data16
jmp
clc
or
sar
xor
mov
dec
dec
pop
pop
aas
and
mov
out
cmp
inc
mov
push
jmp
mov
jb
test
stos
popf
jno
mov
ss
cmp
and
mov
add
das
cmp
jle
sub
cld
lahf
and
xchg
mov
jmp
in
or
xchg
je
push
cmp
lock
jae
cs
jmp
and
test
sbb
sahf
mov
jae
ins
clc
pop
jge
(bad)
(bad)
sahf
mov
add
adc
jmp
mov
mov
xchg
aad
cmp
loop
and
mov
and
sar
outs
xchg
pop
dec
pushf
daa
mov
cmp
lahf
and
inc
add
add
push
and
stos
mov
xor
mov
push
movs
jbe
sub
mov
sub
xor
nop
cmps
jns
les
je
test
fmul
jnp
in
dec
mov
daa
mov
and
repz
inc
dec
cmp
(bad)
adc
rcr
and
mov
daa
mov
dec
or
jecxz
cwde
or
or
(bad)
pop
pushf
xor
mov
ret
cmp
and
add
adc
mov
repnz
repnz
xor
icebp
mov
cmp
hlt
or
pushf
movs
scas
in
daa
mov
mov
and
cmp
test
call
jge
mov
and
mov
cmp
sub
add
callw
xchg
mov
inc
pop
add
jl
idiv
scas
fbld
pop
cmps
stc
cmp
jo
mov
aas
es
enter
push
mov
jb
add
jmp
cmp
sbb
push
stos
or
mov
pushf
pop
adc
mov
imul
add
mov
jmp
xor
or
add
cmp
dec
cmps
cmp
dec
xor
dec
mov
or
push
mov
movs
cmp
mov
xchg
movs
jo
test
xchg
test
xchg
dec
lods
dec
invd
test
rcl
loopne
test
and
lods
stc
push
adc
scas
sti
sbb
push
and
sbb
outs
cmp
xor
jle
mov
sbb
cmp
dec
aas
push
retf
imul
lods
dec
xchg
pop
and
inc
sub
test
or
mov
cld
jecxz
call
pop
rcl
lock
inc
push
jmp
loopne
cmp
(bad)
sub
inc
call
icebp
cmp
fcom
mov
sar
cmp
addr16
jb
sbb
add
iret
inc
or
out
cli
sbb
add
mov
repnz
aam
clc
loopne
shl
in
mov
mov
add
(bad)
and
push
xor
and
jae
and
(bad)
ja
mov
dec
cmp
add
loopne
aaa
jge
jns
ds
test
(bad)
gs
fsubr
cmp
jne
add
int
scas
mov
jne
xchg
add
hlt
in
ror
add
mov
lea
inc
movs
gs
pop
xchg
inc
mov
push
push
outs
xor
aam
enter
or
ret
retf
shl
push
nop
xchg
mov
cmps
cmp
in
jl
add
lods
shl
add
clc
ret
mov
sub
pop
add
lock
add
shr
or
add
js
rol
cdq
rol
(bad)
push
push
retf
xchg
addr16
(bad)
inc
rol
lock
mov
cs
fcom
hlt
clc
shl
or
mov
sti
jmp
pop
jg
mov
lock
lock
stc
repnz
das
inc
mov
cli
cli
inc
cli
adc
test
push
mov
add
and
movs
loopne
sbb
sub
mov
push
mov
and
mov
pop
fidivr
mov
mov
or
enter
jg
adc
aad
or
mov
inc
sahf
out
dec
rol
lock
imul
not
cmp
or
or
pushw
sbb
or
clc
out
jge
ins
push
cs
div
push
jl
movs
add
cmp
mov
lock
inc
jae
push
jae
cmp
and
cmp
or
jp
fdivr
aam
int3
movs
enter
and
jge
or
xor
hlt
mov
cwde
inc
adc
inc
pusha
add
or
adc
dec
ret
mov
push
retf
cmp
fnstcw
add
push
cli
mov
test
or
push
inc
adc
ret
test
(bad)
sbb
test
mov
and
jge
or
jge
adc
sbb
pop
lock
lods
xor
jne
inc
sub
fnsetpm(287
rcl
loopne
push
retf
int
pushf
pusha
mov
jge
add
sbb
or
sbb
and
adc
neg
inc
add
inc
mov
push
cmc
jg
repnz
jle
push
pop
outs
call
je
out
inc
and
or
push
sub
pop
in
shl
mov
adc
(bad)
pop
sub
pop
inc
rcr
lds
neg
and
(bad)
jle
inc
imul
jmp
pop
jl
inc
loopne
call
mov
rcl
add
and
mov
push
push
in
jne
adc
scas
add
ror
xor
sti
into
add
xor
jg
inc
arpl
or
lea
pop
inc
scas
add
sbb
scas
(bad)
push
clc
fld
rol
inc
add
enter
ja
adc
sahf
mov
jae
inc
jnp
cwde
mov
mov
jne
xor
add
add
clc
out
nop
into
or
mov
inc
or
mov
dec
mov
sub
push
cld
stos
aas
sub
cmp
or
add
dec
cmp
aaa
lods
(bad)
inc
dec
add
add
fadd
dec
mov
cs
bound
ret
jp
jne
loopne
rol
or
push
inc
test
mov
fwait
movs
add
dec
and
add
push
push
lods
call
jp
ret
adc
xchg
pusha
add
enter
dec
movs
push
add
add
add
test
mov
mov
mov
pop
push
and
pop
pusha
not
cmp
je
push
and
or
or
push
push
data16
je
push
add
or
add
pop
scas
add
push
and
ret
mov
lds
or
xchg
xchg
or
xchg
adc
or
cmp
mov
jae
test
cmp
mov
mov
iret
xor
xor
push
jns
pusha
inc
and
jg
mov
rcr
add
mov
nop
xor
ret
sub
mov
inc
ret
or
loopne
jmp
add
popf
loope
inc
push
pop
jne
or
or
sub
adc
and
add
push
or
xchg
push
push
mov
retf
inc
or
cli
(bad)
pop
mov
xor
or
push
pop
ja
mov
pop
xchg
adc
and
and
mov
(bad)
sti
mov
xor
aad
(bad)
mov
lock
mov
test
fst
nop
clc
mov
and
sub
test
sbb
add
push
inc
scas
sbb
cmp
mov
movs
sub
add
ins
rcl
mov
cmp
mov
in
clflush
lock
test
div
into
or
add
or
sbb
sbb
add
je
mov
mov
sub
dec
sahf
pop
out
xor
inc
jg
into
into
adc
dec
into
mov
mov
sub
push
pop
nop
test
jnp
pop
sahf
pop
mov
movs
add
push
inc
daa
mov
rcr
pop
and
movs
mov
inc
ja
fist
js
shl
cs
call
test
lahf
pop
xchg
out
iret
enter
add
or
sbb
add
sar
into
and
je
and
stc
xor
jne
or
sub
rol
sub
jmp
rcr
pushf
push
push
mov
retf
sbb
jo
xor
pop
sub
ins
cmp
ds
jecxz
push
out
les
and
or
sub
sub
cmp
scas
sub
shr
mov
retf
mov
aaa
call
or
mov
in
inc
jl
jae
rol
sbb
mov
add
enter
je
dec
dec
rcr
cmp
add
ret
xor
jle
movs
mov
push
js
xor
jmp
je
dec
sub
and
add
sbb
je
mov
or
push
cmp
xchg
mov
cmp
icebp
dec
push
out
retf
dec
repnz
jmp
push
ror
fwait
add
cwde
fisubr
add
adc
dec
ret
cmps
fsubr
or
aam
sbb
push
fsub
pop
mov
repz
stos
add
or
push
push
inc
adc
add
ret
nop
xchg
add
in
fcomp
pop
dec
inc
stos
adc
pop
or
push
mov
and
push
push
call
jmp
pop
pop
cmp
arpl
or
arpl
fsub
sub
ror
psubusb
mov
int
loopne
and
inc
xchg
adc
push
sar
add
dec
inc
sub
push
adc
pop
push
adc
(bad)
sbb
loopne
push
outs
pop
xor
push
or
push
jne
inc
pusha
in
or
mov
add
and
xlat
mov
ret
sbb
shl
pop
cmp
add
fld
fst
clc
dec
jnp
add
adc
add
mov
test
iret
mov
rcr
repz
cmp
inc
ret
mov
dec
inc
xchg
mov
sbb
sub
or
outs
lahf
inc
pop
mov
loope
jae
inc
add
cdq
inc
loopne
lods
push
dec
sbb
mov
int
sbb
ror
dec
cld
push
push
push
dec
and
xor
and
cmp
mov
add
add
inc
fs
jge
and
gs
sbb
(bad)
mov
out
pop
add
push
clc
cli
mov
fs
je
mov
jg
xor
jp
push
dec
inc
push
lock
push
push
xchg
cmp
pop
inc
sub
push
sbb
stos
ins
adc
lea
jo
test
std
xor
adc
inc
jae
imul
inc
dec
mov
popf
or
fmul
out
popa
push
jmp
dec
das
add
lea
fisttp
add
add
cmp
(bad)
dec
sub
js
dec
jmp
cld
lea
mov
out
cmp
inc
mov
leave
inc
ins
or
jae
add
jg
iret
clc
je
fiadd
ficom
xor
stos
or
rcl
(bad)
sub
mov
(bad)
rcr
inc
fdiv
push
push
cs
add
and
cli
int
push
mov
mov
dec
cmp
sub
pop
mov
jae
pop
ret
popa
cmp
jbe
rol
pop
clc
ds
push
jns
add
sub
push
pop
sub
or
or
add
or
and
cli
cli
jo
mov
and
xor
xchg
push
ror
mov
ficomp
add
sbb
adc
data16
rol
loope
or
data16
dec
jmp
fist
push
ja
fwait
add
or
retf
inc
aaa
push
lds
inc
bound
jae
loope
inc
bound
xor
pop
ret
dec
retf
in
or
les
icebp
pop
adc
(bad)
(bad)
xchg
into
xchg
dec
(bad)
adc
mov
retf
je
or
jne
cli
sub
jecxz
push
xor
xchg
ror
jmp
dec
adc
inc
test
sub
jne
and
adc
dec
test
mov
xchg
inc
cld
and
repnz
cmp
shr
jmp
fmul
repz
adc
xchg
pop
retf
adc
(bad)
outs
or
cld
jmp
jecxz
and
fldl2e
fmulp
fld1
fld
fldenv
sti
fprem
f2xm1
fimul
std
fxch
fstp
ret
in
sbb
icebp
mov
repz
in
mov
xchg
sahf
je
fld
sbb
loope
or
fdivrp
fsqrt
push
hlt
outs
fstp
fadd
pop
inc
loope
adc
(bad)
sbb
adc
cmp
fmul
fsubrp
jmp
adc
sti
sahf
ficomp
enter
repnz
call
(bad)
loope
sbb
fs
clc
adc
cli
in
or
inc
push
xchg
fstp
icebp
aaa
push
mov
sub
adc
fxch
mov
xor
jbe
fcomp
dec
add
sub
xchg
loopne
inc
push
sub
mov
push
(bad)
lahf
xor
stos
xor
or
cmps
or
sub
push
xor
cvttsd2si
in
aaa
adc
cmp
pop
(bad)
pop
push
fisubr
jbe
add
ds
and
mov
ret
inc
fbld
pushf
push
xchg
sbb
inc
jge
xchg
cwde
mov
xor
test
pop
loop
jmp
cmp
fcomp
loop
pushf
fstp
inc
push
mov
add
fist
push
vmulsd
loopne
push
add
mov
push
(bad)
sbb
push
cld
int3
lahf
sub
out
inc
cmp
fadd
push
fimul
push
mov
mov
xchg
pop
cld
pushf
push
mov
sar
fucomp
add
test
fadd
loopne
repz
adc
push
mov
fnsave
and
and
jge
call
or
rcr
adc
push
jbe
mov
(bad)
pushf
push
fwait
rol
lock
cmp
jge
mov
lea
mov
sbb
jmp
jp
push
es
int
mov
push
mov
sbb
and
fs
test
gs
xchg
inc
sub
adc
movsx
inc
add
xchg
pop
ret
inc
mov
add
inc
(bad)
stc
out
addr16
adc
rol
and
fidivr
out
add
and
sub
mov
push
jb
adc
jae
daa
add
jnp
add
out
push
dec
add
push
(bad)
dec
and
mov
mov
sahf
test
or
inc
adc
add
mov
rol
cmp
(bad)
and
mov
cmp
je
push
xor
outs
fld
(bad)
pop
xor
hlt
data16
xor
xchg
and
jns
lods
xchg
lock
shl
test
cmp
dec
arpl
jg
sub
jbe
ret
adc
jmp
lock
add
dec
fstp
out
inc
ret
sbb
push
aaa
(bad)
adc
clc
xlat
push
stos
fwait
loopne
mov
pop
adc
and
mov
and
mov
call
retf
or
sbb
add
or
rcl
xor
cmp
jb
fbstp
mov
jecxz
and
out
add
adc
jb
hlt
ja
mov
add
add
push
push
sbb
push
or
push
fstp
xchg
pop
mov
and
cwde
or
push
fs
(bad)
add
repnz
push
lds
push
iret
pop
push
aas
(bad)
std
arpl
in
push
sub
inc
sub
sbb
fmul
add
rcl
sahf
mov
div
xchg
pop
or
loopne
mov
ret
lock
imul
xor
and
cmps
jge
inc
fisubr
dec
sub
or
out
gs
mov
les
jp
sbb
pop
ins
add
xchg
das
or
dec
les
push
inc
xchg
xchg
mov
inc
aam
imul
in
aam
cli
jnp
ror
push
ficomp
inc
push
adc
inc
xchg
jmp
mov
inc
mov
push
data16
xor
lock
or
dec
mov
dec
add
add
ret
call
cmps
or
cwde
dec
pusha
sub
gs
mov
cmp
int3
bound
adc
test
inc
(bad)
into
adc
jle
push
pop
add
inc
xchg
aam
(bad)
movs
add
add
jo
rcl
in
(bad)
jo
lods
inc
mov
loope
in
hlt
pop
lods
stos
movs
inc
clc
mov
add
mov
adc
adc
std
pop
mov
add
inc
add
adc
fldenv
mov
fld
xchg
jnp
pusha
xor
dec
or
add
rol
sub
adc
adc
sahf
out
test
push
fucomip
fdiv
mov
call
nop
stc
hlt
add
sub
into
aad
in
cdq
sbb
xor
sbb
aas
sbb
adc
les
shr
inc
je
add
and
pop
adc
dec
jl
cmp
cmp
rcr
loop
add
sbb
scas
loope
leave
scas
rcl
mov
and
mov
cmp
push
push
int3
seta
mov
stos
pop
fild
adc
cmp
xor
lods
cmp
fld1
adc
or
hlt
pop
cwde
mov
pop
push
outs
pop
sbb
pop
sbb
mov
or
lock
xor
adc
fadd
das
mov
and
or
icebp
pop
xchg
inc
inc
sbb
inc
sbb
sub
adc
dec
adc
cdq
mov
lea
add
(bad)
fist
adc
cld
in
mov
xchg
or
dec
cmp
jl
push
and
outs
xchg
add
iret
cli
dec
or
dec
mov
jo
xchg
fild
cmps
inc
bound
or
in
ins
in
xor
loope
je
xor
lea
sub
aas
xor
lea
push
cld
cmp
fist
dec
adc
in
and
push
sub
cs
inc
sub
test
ret
test
aas
adc
leave
fwait
das
mov
add
jp
inc
jns
xor
sub
cmp
xor
dec
adc
jnp
into
mov
push
in
cmps
fild
add
adc
xchg
inc
cmp
sbb
daa
iret
jmp
add
jbe
sub
into
cmc
mov
sub
icebp
dec
test
mov
ret
jp
push
sbb
dec
cmpxchg
cmp
xlat
sub
je
xchg
out
test
out
add
mov
pop
ss
(bad)
fnstsw
into
pop
mov
mov
popa
inc
pop
pop
pop
or
jo
mov
mov
or
and
jo
mov
pop
cld
xor
or
out
(bad)
inc
add
inc
sti
xor
loopne
inc
popf
cmp
movs
or
push
dec
cmp
lods
add
inc
aaa
mov
jl
sbb
clc
(bad)
nop
adc
(bad)
inc
push
call
mov
dec
add
gs
sub
or
call
push
cld
rcl
mov
push
mov
push
push
scas
jg
inc
adc
sub
aam
fiadd
push
push
cli
in
imul
loopne
ret
repnz
or
sbb
xor
xor
loope
pop
(bad)
pop
or
sti
outs
stos
fstp
ret
std
test
das
ins
sub
cmp
mov
out
rcl
cmp
sub
sbb
xor
and
fiadd
jl
add
cmp
sbb
adc
inc
mov
or
pop
inc
pusha
jl
iret
push
push
mov
add
loop
dec
push
xchg
add
fadd
or
push
or
jge
(bad)
aas
dec
mov
fldcw
fistp
mov
stos
push
cli
jg
or
adc
and
add
mov
icebp
pop
pop
add
adc
xchg
inc
xchg
(bad)
std
sub
mov
mov
or
adc
jbe
mov
ret
jns
in
push
(bad)
mov
daa
aad
lock
stc
sbb
mov
clc
dec
ret
cmp
(bad)
scas
sbb
les
cmp
mov
mov
icebp
loopne
pop
sub
shr
(bad)
out
imul
push
adc
sub
xor
xor
xchg
push
popa
jnp
das
sub
dec
dec
jae
lahf
clc
clc
inc
rcr
repnz
sahf
(bad)
pop
sbb
test
pusha
push
test
push
jno
xchg
jnp
hlt
imul
pop
xor
loope
or
xor
shl
rol
pop
in
jnp
popa
adc
lods
test
leave
lods
fadd
mov
or
in
push
ror
mov
ins
mov
rcl
xor
pop
jbe
add
(bad)
ins
add
push
add
call
mov
cli
xor
fisttp
loope
fist
add
jecxz
xor
call
push
stc
cmps
je
out
dec
loopne
xor
ja
addr16
ss
adc
pop
mov
inc
cmp
mov
retf
and
inc
adc
and
cmps
xchg
call
pusha
(bad)
js
jmp
cmps
jnp
stos
inc
sahf
xor
cdq
xchg
je
fdiv
and
adc
adc
jle
jae
dec
add
mov
fidiv
loop
and
jnp
fcmovnb
mov
pop
setns
outs
or
jmp
mov
fdivrp
shr
xor
(bad)
sar
add
lods
xlat
aas
sub
and
inc
and
sub
(bad)
xor
into
movs
int
or
add
rol
adc
ins
mov
dec
dec
test
push
data16
clc
xchg
add
inc
push
mov
inc
sbb
and
jle
sahf
push
or
xor
sbb
sbb
xor
mov
shr
iret
test
mov
sub
mov
cmpxchg
unpckhps
popa
cld
in
mov
pop
adc
cmp
loop
lods
popf
fisttp
js
jp
and
xor
in
jb
push
or
sbb
cmp
push
shl
pop
push
movs
outs
xchg
and
inc
or
add
pop
xchg
rol
adc
pop
or
push
(bad)
gs
add
mov
test
sbb
sub
jl
add
add
mov
adc
add
cs
mov
rcr
or
mov
lahf
adc
and
mov
or
jmp
push
sar
inc
xor
mov
sti
add
arpl
clc
mov
loope
mov
jbe
cmps
mov
iret
popa
jecxz
inc
pop
and
ret
dec
mov
jbe
jnp
push
into
mov
jmp
scas
inc
and
push
xor
mov
push
add
mov
mov
or
cmp
push
int
cmp
pushf
not
xlat
pop
mov
add
jp
fisttp
push
test
mov
aad
inc
sub
sbb
xor
and
stos
or
dec
and
call
imul
add
icebp
das
add
or
in
es
push
imul
and
mov
sbb
cmp
mul
mov
mul
xchg
adc
add
push
jo
add
or
sahf
or
xchg
or
mov
lahf
mov
xchg
inc
cmp
or
xor
mov
jne
xchg
xor
test
add
mov
mov
jl
or
(bad)
pop
mov
(bad)
xor
xchg
neg
lahf
in
(bad)
fwait
and
sub
enter
mov
and
loopne
scas
pop
test
sub
adc
add
and
std
mov
jns
xor
cmp
push
jmp
mov
ins
push
jno
shl
mov
out
push
or
ins
or
cwde
xor
adc
ret
fmul
int
cmp
movs
push
xlat
push
mov
cmp
clc
jle
xor
mov
loopne
push
xchg
psubw
pushf
movs
retf
movs
xchg
cmp
jecxz
es
or
cs
and
je
retf
dec
clc
ror
ss
pop
ror
jmp
sar
fwait
mov
sbb
mov
jle
inc
enter
fidivr
jle
xor
xor
rol
jmp
xor
sbb
or
push
xor
sbb
xchg
adc
mov
push
cmp
dec
add
imul
inc
jmp
loopne
mov
and
call
mov
add
call
test
pop
jg
push
push
push
push
adc
or
pop
push
jae
add
mov
mov
adc
test
push
mov
fcmovbe
outs
push
xsaves
inc
int3
inc
addr16
out
or
fadd
outs
or
mov
pop
shr
ficom
push
push
xor
ss
or
enter
out
jp
mov
mov
bound
adc
add
js
fwait
mov
cmovo
xchg
xchg
lea
pop
add
push
das
in
mov
dec
mov
xchg
cmp
sub
iret
mov
cmps
mov
mov
dec
dec
cmp
push
push
pushf
out
(bad)
mov
or
or
push
pop
cmp
loope
sub
ds
and
or
enter
sbb
adc
out
movs
adc
jbe
or
adc
or
and
jl
mov
(bad)
or
outs
cmps
mov
sbb
or
sbb
ret
ret
(bad)
retf
mov
and
push
int
and
(bad)
fild
adc
stc
add
mov
push
ror
xor
js
dec
cwde
out
mov
js
cmps
mov
jp
mov
das
jge
xor
adc
and
and
jmp
addr16
mov
sbb
popa
inc
pop
stos
movs
fcmovb
data16
jle
xor
icebp
add
mov
sub
call
push
daa
ds
clc
es
sub
or
retf
add
adc
or
int3
pop
and
clc
cmps
dec
pop
daa
dec
and
mov
push
pop
je
push
push
add
jne
or
adc
add
mov
mov
push
jg
loopne
aam
mov
adc
mov
shl
pop
sbb
adc
push
and
inc
into
fwait
or
lahf
mov
mov
xchg
pusha
and
pop
lock
mov
mov
add
mov
inc
and
mov
sub
cdq
push
bound
sub
into
ins
cmp
add
aas
mov
push
sbb
and
sbb
xor
xchg
sahf
test
xor
test
xor
inc
and
clc
xchg
sar
jae
add
mov
ins
push
add
push
rcl
mov
inc
add
cmp
addr16
push
push
xor
cmps
ja
inc
fiadd
xor
cmps
nop
mov
pop
mov
test
sub
fcom
push
outs
lock
ss
add
sbb
add
(bad)
sbb
add
cmp
xor
adc
fadd
sar
inc
in
and
stc
sahf
pop
cld
inc
adc
mov
add
mov
fdiv
aam
repz
jecxz
loopne
jne
test
iret
pop
or
push
movs
xchg
cmc
mov
daa
stc
mov
mov
repz
xor
imul
add
xor
iret
in
nop
add
mov
xor
movs
in
mov
add
pop
jmp
pushf
push
mov
out
in
adc
cs
std
dec
cld
dec
cmp
(bad)
daa
fs
movs
dec
rcl
dec
cmp
out
add
in
cwde
push
mov
adc
fwait
inc
push
inc
adc
cmp
movd
pop
dec
cmp
call
loopne
movs
rcr
nop
mov
in
mov
lock
call
sub
fwait
adc
inc
adc
jg
push
push
push
and
push
shl
mov
lea
jns
xchg
stos
fdivr
movs
or
sahf
sub
mov
mov
sbb
and
push
push
or
xor
pushf
retf
out
dec
add
adc
add
test
push
push
mov
add
xor
ret
das
fild
mov
jne
push
inc
mov
add
push
mov
push
dec
add
enter
ss
xchg
adc
add
xchg
push
jle
sub
rcl
pop
or
xchg
out
dec
adc
add
adc
mov
test
and
sbb
add
pop
out
jmp
outs
mov
(bad)
ror
aas
and
cmp
imul
mov
ins
jmp
inc
mov
push
cmp
mov
stos
inc
adc
mov
mov
xchg
pop
ret
rcl
movs
out
push
lods
sbb
jnp
push
leave
cld
leave
pop
test
sbb
lds
adc
jnp
xchg
adc
int3
pop
in
inc
das
push
push
inc
shl
sbb
sbb
push
add
xchg
and
dec
pop
dec
jl
fsubrp
adc
fdivr
fimul
cmp
icebp
inc
pushf
mov
sbb
fmul
(bad)
inc
jnp
pop
scas
fnstenv
or
daa
cmc
fdiv
add
add
sahf
js
call
lods
ja
mov
mov
xchg
pop
(bad)
jge
inc
div
loopne
push
jne
sub
and
call
or
xor
mov
or
jecxz
cmc
hlt
pop
jo
js
test
cmp
inc
jb
cld
adc
xchg
daa
jp
sbb
sbb
cmp
pop
jecxz
xor
mov
or
xor
jbe
pop
add
(bad)
cmp
push
dec
iret
adc
push
imul
sub
mov
inc
and
xor
inc
imul
loop
mov
pop
cmp
sbb
loop
js
cmp
pusha
into
mov
mov
pavgb
push
in
lahf
jecxz
or
inc
in
movs
int3
add
data16
cmp
inc
and
add
dec
sub
xchg
iret
popf
nop
mov
dec
dec
mov
jmp
shl
sbb
mov
push
mov
scas
push
loopne
push
or
outs
mov
jg
inc
dec
ds
mov
push
jb
fdivp
xor
mov
jnp
int
xchg
mov
push
fist
xor
(bad)
stos
dec
stos
jp
test
xchg
mov
adc
xor
add
jg
push
push
cmp
not
jo
inc
loope
fisttp
add
adc
or
push
cmp
movs
cdq
fld
push
adc
add
movs
pop
les
inc
pop
or
mov
cmps
add
push
pop
jne
push
lds
enter
test
pop
iret
iret
push
or
add
jo
mov
sbb
push
into
out
inc
pop
push
add
sbb
jmp
cmc
sbb
add
out
adc
inc
add
mov
das
inc
jbe
lea
outs
or
cdq
add
adc
outs
jae
ret
xor
push
js
jns
movs
ja
neg
xchg
call
jg
rol
jne
scas
movs
or
add
fld
test
sub
lods
(bad)
adc
fidiv
mov
mov
jb
xchg
dec
add
dec
add
inc
adc
inc
pop
cmps
test
movs
pusha
push
push
adc
ret
or
daa
mov
int
pop
fdivr
inc
dec
adc
add
test
push
push
push
imul
das
fstp
inc
popf
or
out
push
jns
inc
and
js
adc
fucomi
cmp
inc
inc
sub
out
cmp
lea
(bad)
mov
cmp
sub
lea
mov
add
jmp
add
(bad)
je
jg
dec
jns
bound
or
push
loope
imul
repnz
ins
cmps
and
inc
lods
or
sbb
in
dec
lods
jl
test
mov
idiv
add
adc
or
rcr
fsub
daa
cmp
loopne
test
xor
hlt
adc
retf
sbb
pop
cmp
repz
mov
pop
pop
xchg
iret
das
movs
ins
mov
mov
sub
xchg
arpl
(bad)
shl
and
daa
aaa
push
out
mov
push
fabs
cli
push
cdq
or
sub
push
push
mov
repnz
push
push
pop
pusha
lea
mov
add
cmp
mov
in
cmovle
leave
push
add
jl
mov
push
push
jmp
pop
stc
(bad)
aaa
or
or
fdivr
pop
shr
dec
cmp
syscall
jno
mov
pop
dec
dec
mov
xchg
push
mov
push
adc
loope
xchg
test
push
push
and
dec
sahf
shl
std
rol
inc
das
mov
pop
lea
sbb
dec
adc
dec
mov
jmp
fsubr
or
sub
and
or
mov
mov
push
hlt
push
cmp
dec
lahf
punpckhbw
je
bndldx
or
daa
rcl
sub
fdivp
add
fmul
push
in
push
aad
ss
xchg
mov
dec
je
xchg
cmp
adc
clc
cmp
mov
add
or
jge
and
lock
mov
jne
mov
mov
ret
pop
and
clc
add
push
js
push
test
push
inc
and
call
or
dec
xor
add
lahf
data16
jbe
mov
dec
add
jle
inc
pusha
jns
adc
mov
jo
aam
ins
xchg
fdiv
mov
out
cmp
movs
inc
pop
pusha
ss
pop
repz
and
add
aas
and
mov
xor
es
test
add
sub
xchg
or
adc
js
test
sub
cdq
push
and
mov
stos
sbb
test
imul
dec
or
(bad)
or
jmp
add
mov
cmp
ins
jbe
mov
add
ret
loop
dec
push
mov
clc
ins
sahf
mov
into
shl
sbb
mov
mov
mov
or
lea
fwait
sbb
(bad)
lock
ds
jle
stc
mov
xor
mov
push
push
dec
enter
xor
push
add
pop
in
cmp
push
push
cmp
pcmpeqw
xor
mov
es
and
push
jg
repnz
xor
sar
ins
out
xor
jo
pop
adc
shl
sub
inc
sbb
stos
xor
sub
scas
mov
or
or
aas
pop
or
xor
popf
lods
and
shr
adc
sub
dec
xlat
nop
jo
push
pop
and
mov
mov
add
sub
dec
add
add
out
inc
mov
and
mov
xchg
or
aad
test
or
xchg
mov
add
cmp
add
pop
xor
rol
add
cld
fdiv
mov
adc
mov
adc
xchg
add
pusha
jl
pop
pop
lock
repz
push
mov
mov
xor
sub
pop
icebp
jb
pop
adc
jmp
or
mov
dec
dec
xchg
or
sub
out
loopne
ret
or
nop
sub
push
pop
add
jge
leave
xor
and
sbb
jmp
aas
es
cmp
adc
cs
push
or
into
int3
pand
adc
jmp
jp
jmp
cmps
xor
enter
inc
cmp
push
(bad)
in
sub
inc
push
mov
and
add
lea
xor
push
xor
or
aas
nop
cmps
sti
and
pop
cmp
push
loopne
clc
loop
or
lock
push
mov
outs
(bad)
cmp
jne
inc
add
imul
loope
clc
lahf
jp
xchg
mov
sbb
pop
dec
push
mov
rdmsr
cmp
or
pop
cmp
data16
data16
in
loopne
mov
call
push
push
faddp
imul
push
xchg
dec
es
test
xor
mov
xchg
and
invd
fdivr
push
test
push
fild
mov
push
dec
or
int3
push
shl
(bad)
lea
pop
(bad)
shl
cmc
(bad)
adc
sub
stc
sti
test
lea
push
int
mov
lock
dec
shl
mov
loopne
ret
push
cmps
rcr
aam
jae
fisubr
mul
push
ret
jns
ret
inc
sbb
arpl
sbb
fisttp
cmps
and
jmp
add
inc
loop
test
mov
xor
mov
ins
mov
push
mov
loope
jmp
xor
cmps
or
xlat
cmp
or
or
and
frstor
or
pop
cmp
ins
adc
add
sbb
push
mov
dec
and
imul
test
xor
jnp
bound
add
xor
mov
das
mov
pop
test
test
inc
daa
inc
js
shl
sbb
in
and
popf
mov
ficom
sbb
lahf
or
add
pop
int
mov
push
mov
popa
icebp
jg
dec
cwde
in
hlt
popa
rcl
sbb
xchg
sub
mov
pusha
test
call
or
adc
clc
add
je
jl
push
add
adc
add
add
sbb
sbb
hlt
test
mov
fchs
mov
sub
mov
sub
xor
out
fidivr
xor
add
ins
jo
cmp
stos
retf
jo
pop
sbb
add
daa
push
ins
push
inc
shl
push
cld
fadd
loope
std
cmps
fcompp
xor
jmp
in
ins
add
gs
push
out
rcr
inc
pop
(bad)
cld
test
loop
cmp
sbb
sub
out
daa
add
test
test
addr16
shl
cmp
mov
cmp
rcl
loopne
sbb
jo
mov
fnstsw
shl
fld
jmp
jl
inc
sbb
shl
sub
inc
rcl
add
mov
add
mov
and
mov
cmp
add
pop
retf
(bad)
(bad)
pop
test
in
adc
lock
ins
stos
jl
(bad)
cmp
cmps
(bad)
mov
daa
pop
xor
sub
adc
cli
or
dec
push
xchg
movs
cld
leave
aam
and
push
aam
add
dec
add
xor
cmp
gs
aaa
in
outs
repnz
jmp
mov
dec
sub
sub
xor
sbb
daa
and
enter
mov
and
loop
xor
xor
mov
dec
ror
push
in
add
fistp
dec
mov
(bad)
jmp
add
fwait
iret
cmps
out
bndldx
sub
xchg
push
or
sbb
stos
cmp
cwde
inc
mov
xor
push
shl
js
or
or
inc
mov
xlat
imul
aam
dec
cmp
pop
push
add
or
or
push
into
sbb
push
sbb
add
push
ret
sbb
cmp
jmp
mov
imul
push
pop
hlt
xchg
cmp
adc
pop
or
add
push
cmp
xchg
xor
in
fs
push
sub
dec
mov
jp
jmp
outs
fwait
out
dec
es
bound
jne
(bad)
sbb
add
fnstenv
add
fld
sbb
leave
xchg
push
jbe
cmp
fwait
and
add
mov
inc
add
push
shr
mov
and
pop
or
dec
xchg
arpl
lock
jae
sbb
mov
les
movs
inc
push
add
push
or
inc
test
push
add
movs
pop
aam
inc
cmp
mov
or
movs
jge
mov
mov
arpl
mov
jp
pop
sub
loopne
call
adc
mov
jns
add
(bad)
push
push
and
or
push
outs
push
jmp
mov
push
push
jns
mov
rol
cmps
jp
mov
cmp
dec
dec
fiadd
ror
inc
js
rcr
sub
mov
add
imul
stos
mov
mov
sub
test
mov
cwde
(bad)
ret
sbb
sub
or
jnp
push
xchg
jbe
or
lock
or
xor
inc
mov
pop
or
mov
pop
shl
pop
inc
dec
mov
sub
jle
mov
jo
pop
cld
pop
push
xor
jge
inc
xchg
push
xchg
lock
ret
xchg
jno
push
mov
mov
loop
push
push
cmp
cmp
rcl
js
dec
cmp
leave
add
mov
push
xor
add
ins
sahf
or
push
mov
outs
pop
stos
push
pop
sti
inc
push
jo
sub
es
and
iret
test
fdivrp
cmps
lods
sbb
int3
and
hlt
mov
pop
je
daa
dec
inc
dec
loopne
fimul
cmp
mov
lods
ror
mov
pop
int3
mov
xchg
pop
iret
cmp
cmp
jg
jae
pop
mov
aaa
sbb
sub
cs
dec
push
pop
dec
nop
cld
push
xor
inc
push
cmps
mov
jne
jecxz
mov
lock
adc
loop
jbe
xchg
inc
push
inc
cld
mov
jmp
sub
xchg
shl
adc
int
repz
pop
push
fsub
(bad)
clc
xor
inc
xchg
mov
and
cmp
sbb
lods
mov
jne
neg
into
adc
cmp
bound
das
add
or
jge
mov
sbb
add
adc
pushf
nop
neg
add
mov
cs
test
rcr
pusha
push
cmps
add
and
aaa
js
das
push
xor
dec
push
fdivr
inc
in
adc
cli
sub
mov
stos
or
dec
pop
pop
or
inc
ds
addr16
xor
dec
pop
push
shl
add
daa
adc
jmp
mov
cmp
lea
dec
and
jb
aad
and
icebp
(bad)
mov
ret
xchg
sti
scas
scas
inc
or
sub
test
adc
xor
mov
and
fstp
cmp
mov
adc
mov
jp
adc
call
cmp
lea
adc
and
xor
aad
hlt
inc
jb
mov
arpl
push
push
lods
mov
pushf
mov
adc
or
mov
pop
fst
std
mul
or
ja
or
cmp
xchg
inc
les
mov
add
mov
and
lea
or
push
inc
jmp
xchg
cmp
lock
jb
rcr
mov
jns
dec
in
sbb
mov
xchg
or
mov
pop
and
mov
jb
nop
xor
jecxz
out
mov
aaa
sub
push
adc
sbb
rep
out
sbb
xchg
std
movs
lea
or
dec
add
jp
mov
enter
add
pop
imul
repnz
adc
loop
sub
es
int
sar
sbb
iret
xchg
aas
inc
es
dec
pusha
pop
adc
push
and
inc
(bad)
jnp
sub
dec
or
mov
sub
in
inc
sbb
cmp
adc
xor
into
cmp
rcl
call
cmp
adc
sub
add
sbb
repnz
jmp
data16
test
sbb
adc
cmp
xor
add
dec
rol
or
add
dec
sbb
lea
sub
(bad)
mov
mov
or
inc
or
lods
add
ins
jo
sub
out
push
aad
or
and
dec
or
inc
pusha
ret
inc
(bad)
cmp
and
and
and
push
mov
loopne
inc
push
adc
mov
ss
mov
das
rol
adc
push
(bad)
imul
out
add
std
or
and
mov
or
jne
test
std
sub
pop
in
into
aas
movs
out
cwde
in
mov
pop
sbb
mov
add
std
mov
icebp
sahf
inc
fild
cmp
outs
push
pop
cmp
sbb
sbb
pop
ins
adc
or
(bad)
mov
dec
ins
lods
dec
mov
dec
add
jmp
sbb
fdivr
hlt
sub
jle
adc
inc
push
adc
xchg
inc
add
test
out
lods
sbb
cmps
pop
push
fcomp
loopne
adc
sbb
xchg
add
sub
xor
jnp
adc
xor
test
arpl
or
mov
loop
pusha
mov
mov
push
mov
inc
add
push
adc
xor
jo
xchg
sub
mov
div
aaa
stc
retf
mov
mov
and
push
push
and
fst
or
push
adc
xchg
std
pop
mov
pushw
enter
jae
and
push
ss
daa
jns
pushf
mov
add
push
mov
push
xchg
cmp
push
push
push
adc
ds
push
push
clc
ins
ja
and
or
xchg
sub
out
cmc
cmp
xor
mov
in
jl
shl
lahf
push
adc
outs
push
adc
lea
cmp
cld
or
push
js
sub
or
or
pop
adc
adc
call
add
lods
jp
and
add
dec
sar
push
sbb
sbb
sbb
xchg
xchg
dec
mov
sbb
sbb
adc
sti
cmc
fcom
(bad)
das
sbb
add
push
les
jae
inc
add
out
and
or
sbb
(bad)
dec
aaa
rcl
lock
push
add
mov
and
std
icebp
mov
mov
nop
mov
div
rol
repz
inc
cmp
cmp
mov
stos
sub
into
inc
nop
cmp
icebp
push
sub
mov
in
mov
daa
sbb
test
xlat
aam
cmp
jb
sbb
fs
enter
sub
inc
mov
add
or
cmp
pop
cmp
cld
shr
ret
iret
daa
mov
outs
inc
retf
adc
cmp
cld
ret
xchg
cmp
cmps
adc
sub
ficom
mov
jbe
xchg
cmp
jmp
add
fld
dec
and
retf
adc
xchg
xlat
inc
xchg
jge
or
adc
or
pmulhuw
(bad)
cdq
mov
push
mov
push
push
sub
adc
push
push
and
aaa
sbb
push
mov
test
jno
(bad)
and
pop
nop
in
cmp
popf
mov
shl
lea
je
cld
fadd
data16
(bad)
arpl
mov
mov
test
or
sub
xchg
rcr
aaa
xchg
cmps
pop
and
inc
xchg
mov
mov
sbb
sar
ret
mov
xor
out
push
cdq
lea
sbb
mov
and
jg
cmp
or
sbb
xchg
nop
lahf
rol
or
inc
xchg
cmp
fwait
cmp
xchg
cli
std
xchg
xchg
pop
pusha
dec
inc
not
test
sub
push
and
dec
cmp
iret
mov
mov
pop
out
mov
xchg
add
aad
mov
test
adc
and
xchg
dec
push
adc
pusha
push
or
inc
sar
sub
fistp
sub
mov
adc
enter
test
lods
sbb
daa
retf
mov
ins
adc
scas
jb
jg
xchg
ins
adc
scas
or
cdq
mov
add
popa
jnp
sar
jno
push
mov
mov
stc
out
mov
adc
adc
push
mov
aas
ins
dec
imul
jne
jbe
movs
jae
repnz
ret
and
jno
push
xor
ins
mov
push
ins
imul
imul
push
test
jne
imul
mov
adc
into
mov
and
cdq
out
jae
aas
mov
add
cmp
inc
mov
inc
jmp
jnp
(bad)
clc
xchg
and
cmp
push
xchg
cmp
clc
dec
aad
repnz
cmp
or
add
xchg
test
mov
dec
mov
dec
shr
sub
push
push
push
popf
xchg
or
popf
and
inc
fidiv
lea
cld
popf
(bad)
(bad)
pusha
adc
xchg
jb
inc
jo
aas
cld
mov
jnp
jo
iret
cmp
(bad)
xchg
push
nop
imul
mov
dec
test
mov
push
in
sub
adc
push
lods
retf
dec
fadd
sub
mov
adc
jmp
sar
in
push
and
xchg
push
sbb
lods
rol
cmp
imul
shl
inc
inc
icebp
mov
mul
inc
out
sar
push
inc
in
repnz
out
add
xchg
das
nop
xchg
xchg
das
(bad)
xchg
adc
or
and
sahf
cmp
adc
inc
xchg
pop
repnz
iret
or
jmp
call
int3
sar
xlat
add
ins
aas
movs
xor
int
iret
dec
pop
mov
push
push
call
sbb
inc
add
sbb
sub
daa
imul
stos
test
mov
test
dec
push
push
and
arpl
in
mov
sbb
add
xchg
push
rcl
xor
xchg
sbb
add
rol
mov
adc
xchg
and
add
js
movs
in
push
inc
and
lock
popa
jmp
sbb
mov
sub
xchg
add
cmp
mov
dec
int3
sub
pushf
xchg
inc
jp
fcmovne
jne
lock
or
imul
in
pop
adc
js
inc
fisttp
push
push
and
jnp
in
add
mov
les
mov
mov
mov
or
rcl
or
imul
sar
ret
test
dec
pop
dec
fld
movs
dec
add
repnz
aaa
add
jbe
jge
xchg
lock
sbb
int3
add
or
mov
jp
mul
jbe
mov
pushf
sub
or
dec
xchg
or
add
jne
into
or
mov
sbb
mov
jbe
adc
test
test
jb
cmps
push
movs
das
push
mov
xor
dec
or
dec
add
ins
or
xor
(bad)
js
shr
pop
adc
jo
inc
inc
mov
add
sbb
add
cmp
add
scas
repnz
ja
xchg
shl
or
(bad)
cmp
loop
adc
mov
dec
test
mov
mov
inc
mov
repnz
hlt
jp
or
mov
pushf
or
test
out
and
xchg
sahf
ret
vmread
mov
jg
jmp
push
cld
ret
xor
adc
dec
sbb
mov
mov
clc
jnp
pop
sbb
stos
and
xchg
mov
and
mov
cmp
shl
shr
push
ins
loop
xchg
push
ret
ss
push
data16
in
test
(bad)
rcl
idiv
inc
ins
lods
and
loopne
and
xchg
xchg
mov
cmc
call
dec
push
jge
pushf
push
pushf
cmc
movs
call
lods
scas
mov
hlt
psllw
push
ja
fld
call
lock
dec
mov
aaa
int3
mov
pop
loope
sbb
xor
pop
pushf
sbb
mov
jmp
lods
iret
in
es
cmp
lods
ja
mov
add
jbe
mov
mov
inc
ret
shr
push
out
mov
mov
in
fs
adc
popa
lahf
cmc
fwait
sbb
and
cmp
xor
or
xchg
sti
pop
adc
dec
aam
xchg
xor
xchg
add
fistp
push
ret
lock
ret
arpl
inc
fmul
sbb
pop
pop
ins
push
and
jbe
dec
inc
sahf
mov
in
repnz
add
icebp
cdq
add
lods
jge
icebp
outs
cdq
add
mov
movs
mov
ins
dec
jne
ins
cdq
sub
inc
dec
nop
cdq
sub
sub
and
cmp
inc
dec
jb
mov
mov
adc
dec
lock
shr
leave
cdq
sub
sub
cmp
dec
fist
ins
cdq
sub
push
jb
cdq
sub
pushf
xchg
jo
push
lock
and
mov
pop
mov
cmp
(bad)
leave
sub
dec
or
cmp
push
aas
sub
hlt
mov
pushf
inc
sbb
sbb
and
lock
out
mov
mov
fcom
ja
sbb
fisttp
(bad)
ret
push
push
dec
mov
retf
inc
xor
xchg
sub
mov
or
or
sbb
int3
sbb
and
inc
test
inc
add
cmps
inc
stos
sub
dec
push
sbb
mov
jbe
fsubr
movs
dec
add
xchg
pop
inc
cmp
jle
jg
sub
enter
js
fcomp
outs
inc
cmp
dec
repnz
ret
pop
xor
enter
dec
ins
imul
and
mov
fwait
fs
pop
test
shr
cwde
mov
js
and
fidivr
leave
sbb
add
stos
push
aad
int
mov
data16
clc
push
mov
inc
jge
iret
repz
test
xor
or
push
das
mov
out
jno
(bad)
sub
into
repz
add
dec
pop
es
sbb
call
jo
cmp
movs
stos
or
adc
jmp
inc
and
sbb
mov
dec
xor
ret
(bad)
into
inc
div
fisttp
fwait
mov
add
call
add
ja
push
mov
or
scas
(bad)
xor
inc
adc
out
push
lar
dec
call
aas
movs
add
outs
cmc
out
pushf
adc
mov
adc
out
dec
sbb
and
adc
jecxz
scas
jbe
ret
movs
inc
test
pop
dec
xor
and
pop
daa
jb
inc
and
cmps
or
fdiv
cmps
push
fwait
push
mov
ret
jb
or
fwait
push
fsub
inc
xchg
pusha
imul
jle
mov
or
xor
inc
jl
xchg
mov
and
inc
arpl
inc
jl
cmovo
push
cmp
fnsave
scas
or
test
cmp
mov
ins
test
clc
or
les
sbb
adc
mov
jo
pop
pushf
mov
jecxz
xor
push
mov
lods
adc
retf
and
xor
adc
dec
std
inc
mov
and
sbb
jo
or
pop
push
shl
int3
popf
ret
fidivr
cmp
add
dec
jp
and
mov
xchg
mov
pusha
pushf
push
sbb
jb
inc
mov
jnp
dec
dec
ja
inc
or
xchg
dec
xchg
jo
sub
jno
adc
sbb
loope
mov
popa
xchg
or
outs
dec
mov
mov
ret
dec
js
shl
mov
das
mov
imul
test
or
pop
mov
ins
fisub
nop
inc
mov
jnp
imul
push
jae
ins
rcr
sbb
(bad)
stos
dec
dec
(bad)
lock
cmp
xchg
push
mov
shr
not
xor
inc
(bad)
rcr
lods
push
les
dec
daa
mov
jbe
int3
inc
or
int3
sbb
cld
sub
shr
xchg
mov
stos
adc
mov
mov
dec
jo
or
retf
fimul
sgdtd
shl
fcomi
xor
out
dec
mov
cmp
jbe
add
and
in
fild
or
cmps
or
add
adc
test
inc
test
sti
mov
inc
push
std
push
mov
dec
test
(bad)
inc
sbb
dec
add
mov
or
adc
mov
out
fsubp
jge
inc
jo
jb
sbb
loop
aam
sti
mov
dec
repnz
mov
cmc
les
mov
mov
mov
mov
jne
rcl
mov
in
loopne
sbb
pop
dec
or
push
movs
push
dec
jno
outs
bound
loopne
js
sub
add
mov
adc
pop
and
clc
or
adc
es
mov
outs
es
jne
pop
mov
es
fisttp
into
je
push
dec
in
or
push
(bad)
ficom
sbb
push
xchg
pop
arpl
std
and
cdq
in
es
sti
push
dec
sub
mov
push
cmps
addr16
push
stos
out
inc
test
retf
sahf
repnz
pop
jmp
pop
push
stos
xchg
jbe
adc
sti
push
lods
adc
rcr
jns
jo
das
loopne
pushf
addr16
push
mov
sbb
jmp
test
adc
ss
and
fld
xchg
mov
or
in
pop
out
cdq
xor
inc
dec
out
stos
cld
pop
(bad)
retf
cdq
sbb
sbb
and
fadd
pop
loopne
pusha
and
stos
push
fiadd
or
retf
add
push
and
add
and
sbb
dec
adc
inc
les
enter
xchg
add
inc
mov
or
mov
retf
dec
jmp
in
cmp
pop
popa
dec
pop
aad
das
sbb
or
or
xchg
ds
mov
daa
sbb
call
inc
xor
lock
add
mov
adc
mov
or
fdiv
adc
cmp
clc
adc
cld
inc
call
scas
mov
dec
sbb
loop
add
sub
inc
add
lods
push
pop
sbb
imul
mov
xchg
mov
fdiv
jl
xchg
mov
cmp
mov
push
(bad)
out
mov
or
push
rcl
data16
jle
xchg
cmp
cld
mov
jmp
inc
inc
and
pop
or
mov
outs
sbb
mov
jmp
inc
and
add
cli
add
add
mov
inc
jne
lahf
lock
cwde
push
and
fcomp
sub
jl
icebp
popa
mov
push
aaa
cmp
xor
sub
add
jl
xchg
xchg
sbb
dec
pop
adc
jae
xchg
xor
or
inc
add
and
loopne
jge
or
or
add
cmp
sub
inc
mov
test
sbb
fidivr
dec
pushf
test
movs
or
ror
push
adc
mov
cli
inc
pop
push
fdiv
add
sub
jl
dec
pop
pushf
leave
jo
push
popa
pop
out
and
(bad)
jbe
lods
sub
ret
cli
fwait
fwait
inc
mov
cmp
push
jg
inc
hlt
call
mov
sbb
ret
stos
data16
out
ds
pop
cmp
in
sbb
cli
add
sbb
jo
cmp
push
add
je
or
mov
sahf
inc
ja
pop
or
adc
add
add
inc
add
jo
mov
adc
lahf
in
call
ret
cmp
lea
sub
test
push
mov
add
mov
test
and
inc
or
jb
rol
dec
push
lods
inc
shr
mov
dec
adc
jns
pop
jmp
push
call
js
js
pop
sbb
or
dec
mov
push
ficom
or
outs
adc
jecxz
pusha
shl
mov
cmp
mov
adc
pop
or
mov
adc
sub
add
mov
inc
iret
mov
jge
sbb
inc
push
sbb
sbb
outs
in
mov
mov
cmps
push
sahf
adc
mov
push
pop
or
mov
pop
jmp
fcomp
sub
xor
ret
xor
shl
mov
cld
mov
je
add
inc
cdq
outs
sub
jnp
lea
jle
test
fld
sub
fadd
push
out
cmps
sub
shl
addr16
jp
cli
jo
loop
sub
loope
mov
(bad)
inc
(bad)
pop
xchg
movs
out
xor
jl
xor
dec
inc
sub
push
repnz
mov
jg
bnd
jg
jb
dec
mov
test
jmp
jb
jno
and
dec
lock
and
mov
aaa
fsub
mov
loopne
bound
cmps
pop
xor
add
imul
adc
sbb
in
cmp
fstp
pushf
push
adc
hlt
(bad)
push
cld
add
call
sub
inc
xchg
in
ins
dec
fxch
jmp
fild
shl
jo
push
pop
retf
adc
call
or
mov
call
jo
in
xchg
xchg
sbb
mov
mov
enter
loopne
xor
in
mov
mov
repz
pop
cmp
test
mov
cmp
sbb
mov
js
movs
cmp
clc
gs
mov
mov
in
sub
push
dec
and
enter
push
(bad)
in
sub
inc
dec
fnstsw
add
mov
push
xchg
sub
mov
mov
push
sbb
retf
mov
fbld
icebp
xor
fcomp
mov
add
fldcw
call
cmp
setne
mov
fidiv
adc
test
cmp
cwde
mov
sub
adc
mov
imul
gs
xor
and
push
rcl
xchg
pop
ret
lock
ss
push
inc
scas
jae
stos
mov
xor
call
xor
add
in
jmp
inc
xor
cmps
loopne
pop
ds
inc
out
mov
xchg
mov
xchg
jecxz
popf
aam
repz
jle
pop
push
inc
and
xor
and
mov
inc
dec
mov
ins
and
inc
add
jo
(bad)
out
sahf
imul
inc
and
stc
xchg
lock
push
adc
push
int3
lock
xchg
cwde
adc
jmp
jbe
fs
aam
test
nop
or
repnz
inc
fld
xchg
fiadd
sbb
enter
add
aas
adc
mov
loop
push
push
mov
and
dec
bnd
push
fisub
enter
fstp
sahf
out
jb
aas
mov
ret
jecxz
dec
cli
push
fcomp
mov
fstp
je
out
sub
adc
outs
and
mov
mov
frstor
loope
jnp
mov
mov
call
popa
or
or
mov
sub
mov
mov
sub
pop
sub
jns
pushf
mov
mov
sbb
clc
ins
pop
icebp
xor
mov
pop
or
mov
xor
enter
rcr
sub
fmul
or
sub
xchg
daa
ret
push
test
sub
adc
pop
(bad)
adc
mov
cs
mov
movhps
pusha
int
loope
jmp
jne
push
sbb
cmp
jae
test
and
jns
jle
jo
pop
mov
mov
and
inc
add
outs
iret
pop
jns
out
daa
outs
xor
aas
dec
push
inc
mov
push
shl
psrad
iret
jnp
out
push
clc
mov
lahf
fdecstp
lea
rcr
shl
sar
push
aam
mov
das
inc
add
add
xlat
and
ret
push
dec
mov
or
push
and
mov
and
aaa
gs
or
rcl
add
sub
add
pop
xor
add
cmp
call
sub
popf
xor
xchg
mov
jmp
lea
pop
out
cmp
fidivr
push
mov
gs
stos
inc
lds
push
cmp
addr16
mov
jns
ret
pop
nop
sbb
adc
push
outs
cmps
lds
mov
add
pusha
cmp
add
sgdtd
add
lock
sub
rol
xchg
jge
mov
fwait
sti
mov
mov
dec
ins
adc
jp
out
cmp
lahf
mov
lahf
push
add
ret
cs
adc
adc
jecxz
lods
push
inc
pop
imul
sbb
inc
loop
pop
jb
imul
add
push
aam
cmp
ret
ins
popf
outs
sahf
hlt
nop
test
ret
push
pop
adc
jnp
xchg
shl
pusha
ds
out
jo
push
cmps
rcr
push
push
jns
pop
sbb
inc
jne
call
mov
xor
adc
lahf
pop
add
and
sbb
aam
enter
push
jbe
retf
mov
jle
jo
add
mov
out
xchg
fndisi(8087
daa
ror
dec
clc
pushf
(bad)
cmp
jb
xor
inc
adc
rcl
out
repnz
retf
adc
or
jo
jmp
ins
mov
sub
push
mov
inc
adc
lds
mov
int3
dec
mov
push
ret
xor
cld
sub
enter
pusha
mov
cmp
nop
dec
push
xor
mov
xchg
adc
dec
cmps
inc
xchg
ins
mov
dec
clc
adc
push
std
lods
(bad)
fcomp
cmp
pop
rol
mov
inc
mov
xchg
shl
push
or
aad
sbb
sar
popa
pop
ds
xchg
or
adc
retf
xchg
sahf
pop
loopne
test
je
xor
mov
xor
pop
cmp
mov
push
cmp
shl
xor
inc
add
mov
je
mov
adc
sbb
retf
dec
in
packsswb
push
mov
or
sub
push
adc
pusha
jmp
or
mov
push
mov
pop
retf
enter
mov
nop
mov
or
movs
loopne
loope
sub
xchg
ja
add
sbb
pop
mov
inc
push
popa
ins
outs
leave
gs
(bad)
cmp
ins
outs
sbb
sbb
jp
and
gs
pop
jns
jne
adc
in
xchg
sub
in
add
add
popf
pop
or
push
adc
cld
and
shl
sbb
adc
mov
cmp
or
int
inc
jbe
inc
push
pop
push
push
out
and
mov
or
push
iret
aas
les
fiadd
scas
sbb
mov
dec
test
pop
mov
daa
and
addps
pop
dec
dec
cmp
gs
xchg
adc
xchg
cdq
lahf
mov
dec
add
aam
xchg
xchg
and
cmp
jae
enter
std
or
mov
mov
jmp
jo
fadd
repnz
adc
inc
pop
scas
test
mov
lahf
xor
mov
xchg
lods
pusha
sbb
jecxz
xchg
fild
add
cmp
mov
jbe
pop
ja
lock
add
mov
ja
test
test
aaa
jne
adc
and
pop
daa
and
or
lods
mov
lea
push
mov
movs
cmp
mov
mov
or
hlt
xor
inc
into
cmp
mov
push
mov
retf
mov
(bad)
jnp
sahf
lds
icebp
cmc
sar
xchg
cmps
xchg
push
mov
add
pop
and
scas
ds
mov
mov
ror
lods
ins
or
(bad)
push
ds
push
inc
mov
pushf
pop
and
shr
(bad)
dec
push
daa
mov
sbb
ss
push
call
js
jmp
sbb
lea
rcl
std
outs
jae
test
jne
int3
inc
xchg
push
in
inc
mov
mov
icebp
(bad)
sbb
addr16
out
mov
sub
push
test
push
adc
imul
push
inc
xlat
lods
add
lods
mov
jns
inc
fisttp
fild
(bad)
loope
mov
mov
add
test
stc
mov
sub
sub
(bad)
or
add
xchg
sbb
ja
call
pop
je
stc
fidivr
fild
rcr
fisubr
and
call
pop
adc
nop
ret
out
call
add
sub
fwait
lea
add
call
dec
cmp
mov
call
inc
mov
mov
daa
lea
lea
and
stos
cmp
xchg
xlat
dec
icebp
pop
pop
jmp
push
add
fwait
adc
fs
iret
das
mov
in
call
mov
cld
xor
nop
adc
js
dec
cmp
ins
adc
push
lea
dec
call
pop
ja
sti
test
lea
push
dec
arpl
movs
xor
xchg
adc
scas
movzx
and
cmp
mov
inc
and
mov
and
aas
pop
shl
nop
ret
ss
out
scas
add
add
adc
ret
xchg
inc
and
dec
fsub
ret
xchg
loope
add
dec
mov
mov
or
rcl
rcr
add
jecxz
jne
push
or
inc
xor
dec
test
jne
and
enter
movsx
loope
and
or
aas
or
xchg
out
outs
dec
pop
cmp
movs
push
xchg
js
jmp
shl
push
add
imul
add
cmp
xlat
inc
dec
add
call
xchg
or
add
or
inc
cmp
test
sbb
out
aad
and
shr
ins
lock
ror
sbb
loopne
add
inc
pop
xchg
jl
inc
cmp
add
ror
jno
hlt
push
add
and
imul
pusha
and
inc
dec
add
or
inc
lds
ret
pop
cs
lods
(bad)
and
jecxz
ins
nop
dec
mov
and
jecxz
push
mov
pop
xchg
in
imul
mov
jns
dec
fs
or
and
enter
popa
fild
ror
add
jne
ds
ror
call
call
cli
cmp
sub
ret
imul
add
ror
loop
ret
sbb
aad
test
add
push
inc
and
sub
hlt
sub
retf
xor
ins
xor
stos
or
cmp
jno
jecxz
ret
mov
mov
inc
mov
bound
add
xor
dec
mov
cmp
jle
mov
dec
shr
cmp
fcomp
lock
in
in
dec
je
add
dec
jne
xchg
jne
test
jne
ror
or
mov
idiv
jg
jne
cmp
ja
jmp
dec
loopne
and
mov
sbb
add
dec
fiadd
sub
scas
sbb
and
les
mov
sub
je
enter
setb
push
pop
or
outs
mov
push
sub
or
popa
or
jmp
(bad)
mov
adc
dec
cwde
jle
dec
or
rol
jl
sbb
cmp
sbb
xlat
lock
push
dec
dec
sar
leave
jg
pop
mov
push
cmp
nop
std
or
mov
inc
pop
xchg
mov
push
xor
ficomp
jmp
mov
ret
xchg
add
dec
hlt
mov
mov
jge
pop
jecxz
scas
dec
pop
pop
or
sbb
mov
inc
dec
sbb
(bad)
pop
aad
cmp
push
add
push
xchg
ss
imul
add
inc
scas
lea
je
mov
js
or
scas
popa
mov
into
pop
adc
test
push
dec
inc
mov
clc
xor
pop
or
xchg
movs
cmc
mov
mov
sub
jl
push
sub
cmps
add
fwait
ret
push
data16
add
adc
push
adc
cmp
mov
push
lods
stos
je
loop
push
pushf
jno
sub
ja
add
pop
aaa
(bad)
jo
mov
and
mov
pop
and
mov
sub
jnp
shl
fidiv
or
xchg
dec
je
lock
xchg
mov
adc
mov
or
data16
cwde
loopne
push
sub
aam
push
or
or
pop
ins
call
dec
cld
lea
jne
add
je
add
xor
push
mov
inc
inc
inc
nop
and
xchg
scas
xchg
inc
cli
sbb
or
inc
pop
or
and
aaa
mov
loopne
mov
lock
mov
add
inc
xor
jne
mov
adc
mov
add
sub
cmp
xchg
adc
xor
sbb
pop
loopne
je
pusha
pop
mov
sub
imul
mov
adc
mov
dec
inc
cmp
jne
jb
out
rol
pop
jecxz
pop
repnz
mov
mov
sahf
outs
cmp
retf
icebp
pop
scas
add
mov
ins
inc
call
adc
dec
adc
jle
xlat
push
dec
mov
sub
clc
sub
cmp
add
fsubr
loopne
rcl
dec
add
pop
sahf
mov
jmp
pop
jne
push
jne
inc
jmp
adc
jo
add
adc
or
je
inc
imul
cs
dec
loop
popf
push
adc
push
xchg
aam
rol
or
jmp
lea
cmp
ja
and
mov
adc
jo
mov
or
cmp
nop
outs
cs
or
jne
and
ss
jmp
inc
jmp
or
add
xchg
rol
adc
outs
or
fadd
in
emms
and
pusha
sar
out
shl
add
mov
pop
mov
inc
pop
cmps
jle
arpl
xor
push
dec
dec
(bad)
cdq
fnstcw
add
or
mov
add
jp
xchg
arpl
mov
add
sbb
retf
sub
stos
push
fcompp
sub
inc
scas
test
inc
rol
fist
jne
add
fist
add
dec
pop
pop
push
out
repnz
dec
out
mov
and
out
out
pusha
cmp
sub
push
xchg
popf
mov
push
ret
mov
fucomip
mov
(bad)
add
push
xor
xchg
inc
mov
test
or
push
push
add
icebp
mov
cmp
leave
(bad)
xchg
rcl
dec
mov
push
xchg
jg
jp
(bad)
push
sbb
jp
add
and
adc
cmp
cmp
je
jmp
out
mov
add
pushf
(bad)
loopne
sub
push
push
adc
sbb
test
loop
add
je
or
js
in
or
add
pop
xchg
add
(bad)
(bad)
cld
in
mov
ret
cmp
jbe
sub
fs
ds
sbb
adc
xchg
and
ins
cmp
(bad)
lock
push
rol
xor
inc
cmp
cli
add
add
fmul
iret
adc
cmp
add
ror
and
shl
imul
repnz
cmps
clc
js
aas
cs
or
adc
adc
jl
lock
push
add
push
sub
add
cmp
add
pop
movs
aam
ja
dec
adc
inc
xlat
test
pop
daa
push
fbld
and
sar
mov
rcr
test
add
push
rcr
sub
or
and
inc
add
retf
push
(bad)
xor
dec
add
loopne
mov
out
mov
push
xor
mov
int
imul
or
jp
(bad)
out
cmp
int3
add
dec
push
mov
or
mov
in
or
or
inc
icebp
or
add
jb
mov
push
nop
out
add
stc
cmc
adc
frstpm(287
cmp
cmps
imul
ja
fs
push
repz
xor
dec
je
fld
mov
inc
int3
ror
aas
cmp
jmp
or
cmp
jge
imul
pop
or
mov
jmp
cmp
jnp
lods
in
fwait
push
jmp
call
dec
add
and
xchg
sbb
ins
inc
movs
call
sub
and
sbb
xchg
mov
mov
adc
stos
inc
cs
sub
jle
jecxz
(bad)
push
dec
in
sub
mov
jne
and
pop
add
jb
xor
jne
mov
jge
in
jb
sub
adc
sub
loope
inc
ficomp
xor
scas
std
in
jge
mov
sub
cmp
pop
mov
addr16
push
into
jg
add
repnz
ds
jge
ins
cmps
mov
and
add
push
nop
push
cmp
or
cmp
lock
daa
jne
or
inc
sbb
rol
fwait
jmp
pop
add
inc
sub
mov
pusha
sub
sbb
mov
sbb
push
mov
jae
xchg
test
pusha
cwde
sub
xor
icebp
add
ja
dec
sub
jns
sbb
jne
inc
adc
add
push
add
aaa
cmc
sub
jmp
jle
inc
jne
mov
in
pop
mov
sbb
inc
add
cmp
shr
or
add
add
int
(bad)
pop
jne
inc
add
jne
test
xor
jo
cmp
not
push
dec
rcl
and
cmp
xchg
xor
test
cmp
out
lods
xchg
add
icebp
cld
push
ins
mov
ss
inc
movs
lock
pop
sbb
lea
sub
push
mov
sbb
inc
test
ins
xor
dec
enter
add
cld
bnd
cmp
lock
adc
ror
popa
je
inc
stos
mov
je
sub
push
stc
push
add
xor
repnz
jge
cmp
sub
bound
pop
(bad)
push
push
lahf
pop
push
mov
or
shl
out
jg
mov
ins
xor
cli
je
jmp
inc
sub
adc
wbinvd
loope
xchg
cmp
jle
ret
xor
adc
cli
xlat
call
call
cmp
jge
sbb
sub
or
mov
pop
inc
push
sbb
jo
popf
bound
sbb
fs
adc
pop
mov
in
mov
call
xor
inc
push
jb
mov
jne
adc
test
test
inc
jge
adc
aaa
mov
xor
mov
fnsave
aam
and
sbb
call
bound
sub
dec
cli
out
inc
std
dec
jns
pop
push
adc
out
dec
xor
mov
and
sub
mov
stos
or
push
sub
js
push
and
sub
loopne
nop
leave
(bad)
in
push
or
test
fcom
fsub
push
dec
inc
inc
inc
mov
adc
fcom
arpl
and
lods
frstor
inc
jmp
loop
mov
imul
mov
arpl
pop
dec
mov
add
push
imul
arpl
sbb
leave
add
dec
hlt
icebp
jg
mov
in
js
push
rcl
cmp
adc
add
push
icebp
mov
add
or
test
cmp
mov
loope
mov
push
mov
movs
popf
push
bound
cmp
push
hlt
push
xor
jnp
dec
sub
lea
sub
stos
popa
push
mov
cmp
and
fcom
push
mov
dec
test
add
in
inc
jmp
rol
pop
mov
mov
imul
jbe
pop
jns
aaa
test
dec
je
inc
pop
mov
and
mov
adc
sub
add
inc
rcl
enter
cmp
popa
cmp
sbb
cmp
das
dec
xchg
cmp
jbe
rcr
adc
push
imul
jle
(bad)
ror
lahf
ret
push
inc
adc
dec
lock
(bad)
sub
pusha
imul
mov
sbb
inc
shl
inc
push
stos
xor
push
add
or
sbb
jl
dec
in
call
aaa
mov
add
jb
or
ja
mov
ret
imul
cmp
jl
jmp
add
dec
xor
push
sbb
mov
lods
popa
mov
xchg
or
mov
and
xor
sbb
popa
jl
out
and
fcomi
push
adc
popf
ret
cld
add
and
add
sub
mov
add
mov
jns
mov
test
sbb
out
and
aas
sub
ret
mov
(bad)
retf
arpl
sahf
mov
ins
jle
cmp
iret
jae
fucomi
rol
loop
aad
push
aaa
ret
mov
jmp
stc
inc
fdivr
and
mov
sub
jle
inc
pop
inc
add
sub
mov
push
inc
je
inc
mov
pop
hlt
jne
add
iret
ds
pop
test
jl
add
mov
mov
loop
and
sar
add
xor
cld
mov
es
cld
mov
xchg
outs
add
add
add
add
es
call
hlt
fstp
sbb
jne
cmp
dec
pushf
lock
sub
dec
add
lahf
bound
aaa
mov
dec
mov
pop
das
or
mov
(bad)
out
ret
out
fsubr
pop
adc
mov
in
jl
push
and
in
mov
cmp
push
sub
scas
sub
(bad)
test
cmp
and
sbb
pop
sub
dec
icebp
mov
lock
loope
js
push
cmps
movs
jae
or
sub
leave
cli
mov
adc
push
push
mov
fcomp
push
ss
and
inc
sbb
push
xor
add
sub
test
test
add
dec
cdq
stos
mov
popa
jnp
and
inc
sub
push
ret
add
mov
mov
dec
sub
and
xor
push
enter
and
pop
cdq
xchg
int3
push
add
push
add
mov
sahf
mov
ror
cmp
inc
mov
xchg
hlt
push
cmp
jne
dec
dec
dec
pop
ds
inc
pusha
xchg
sub
push
push
push
and
add
pusha
pop
add
sub
fstp
adc
jne
lea
mov
mov
push
out
inc
add
jb
pop
mov
adc
fcmovne
inc
add
push
dec
int3
push
dec
pop
xor
pop
sar
inc
shl
ret
dec
and
int3
not
cmps
and
push
shr
rol
les
mov
and
cmp
pop
jo
adc
and
jo
ins
stos
mov
sbb
sbb
ss
jbe
inc
mov
xchg
lock
xor
cmp
push
ja
or
add
enter
test
mov
cmp
cmp
test
xchg
pop
xchg
xor
inc
push
and
sti
ds
ins
sbb
retf
mov
xchg
rcl
mov
ds
int
jecxz
xor
and
enter
imul
push
sbb
dec
jbe
dec
mov
sub
int
or
jge
and
adc
cmps
lock
mov
sub
mov
loop
inc
jo
cmp
adc
xor
jae
int3
sar
mov
and
push
test
not
sbb
sub
cmp
jne
cli
rcl
movs
stos
or
push
in
pop
cwde
xchg
xchg
sub
ds
pusha
push
push
push
sub
mov
mov
dec
sub
mov
xchg
mov
mov
mov
aad
xor
push
shl
les
push
inc
sbb
push
pavgb
push
in
jmp
xor
push
xor
adc
sub
pop
or
push
and
test
or
mov
es
pusha
popa
mov
dec
into
mov
cmc
cmp
popa
leave
std
add
mov
adc
shr
in
sub
dec
ins
pusha
and
hlt
leave
push
int3
mov
mov
shr
mov
loopne
mov
dec
pop
mov
push
lods
and
pusha
xchg
test
cmp
push
xchg
loope
push
add
(bad)
cmp
inc
mov
fst
dec
loopne
shl
xchg
adc
fsub
mov
nop
and
dec
push
cmp
repnz
mov
test
ja
iret
gs
sub
fcomi
dec
xor
inc
jle
hlt
int3
loopne
xchg
sub
fcom
xchg
xchg
dec
sub
sbb
push
stc
add
adc
jo
popf
and
fld
aas
lods
cmp
cwde
and
and
push
pop
nop
icebp
push
dec
int3
ret
shr
sbb
jg
fsubr
ret
lods
pop
adc
rcr
cmp
push
pop
in
ror
or
div
pop
jnp
jge
adc
sub
jns
cmps
cmp
or
int
lock
sti
mov
mov
adc
push
hlt
test
jne
or
les
push
sub
out
out
mov
cmp
jmp
mov
cmp
jle
popa
das
mov
in
sbb
sub
add
sti
push
cmps
inc
pop
imul
or
add
mov
jecxz
inc
inc
xor
add
rcl
clc
ins
in
mov
cmp
jle
mov
add
mov
clc
iret
call
jl
mov
cmp
test
pop
or
add
cmp
jmp
daa
sub
xor
push
and
mov
leave
je
mov
mov
push
jge
push
lock
imul
sbb
xchg
loopne
test
mov
sbb
cmps
xchg
adc
cli
in
sbb
cli
push
mov
jmp
pop
or
jns
sub
add
pop
sti
jg
sbb
add
adc
add
data16
mov
pop
fs
adc
mov
test
inc
mov
add
js
jnp
sub
shl
test
gs
das
ror
pop
push
add
or
add
pop
adc
(bad)
retf
loopne
rcr
jge
mov
add
inc
mov
lods
loopne
cmp
in
inc
mov
cmp
mov
push
es
sub
mov
add
mov
add
ja
inc
mov
cmp
call
rcr
xor
pop
sub
push
arpl
mov
inc
pop
mov
outs
xchg
push
fadd
push
push
inc
das
cmc
dec
add
stos
or
push
mov
push
jp
jb
mov
mov
pop
and
enter
enter
xchg
test
test
enter
and
add
dec
pop
ret
xchg
or
jge
mov
not
(bad)
sahf
idiv
cmp
xchg
and
mov
pop
loop
sbb
xchg
add
and
ins
pop
adc
fs
hlt
lock
outs
stos
lock
mov
sbb
mov
imul
aas
push
imul
adc
gs
sub
dec
cmp
or
out
ja
bound
je
inc
aas
add
add
cdq
ret
es
cmp
inc
mov
push
jae
dec
jnp
loopne
xor
cs
hlt
iret
fmul
mov
into
inc
sbb
rcr
and
adc
sub
ins
or
cmp
push
pushf
push
inc
shl
push
add
xchg
data16
enter
xor
ror
sbb
sub
(bad)
repz
clc
dec
test
inc
sahf
sub
test
sbb
loopne
cmp
fld1
ins
pusha
xor
jl
and
xor
mov
and
std
mov
rcr
push
es
dec
lods
jne
pop
mov
adc
aad
or
inc
sub
push
pop
cld
and
movs
dec
ret
icebp
and
icebp
push
rcl
cmp
and
xor
xchg
es
js
out
test
dec
scas
push
mov
not
sbb
scas
pop
mov
sbb
inc
aaa
and
adc
in
or
(bad)
pushf
lahf
cmps
popf
sub
xchg
add
cwde
dec
or
add
and
ins
xor
push
ins
push
jle
movs
jne
loopne
mov
push
or
mov
push
mov
hlt
les
test
je
test
leave
clc
retf
in
push
sub
xor
mov
fadd
js
call
push
or
push
iret
sar
mov
mov
pop
hlt
inc
test
push
in
jmp
test
cmp
cmp
jae
outs
pusha
sub
sub
fidivr
xor
pop
dec
push
call
and
push
and
push
pop
inc
push
outs
adc
cmp
fs
dec
jne
sbb
pause
adc
pop
test
jo
test
cld
jnp
add
sbb
push
mov
ins
add
popa
inc
loope
sub
cmp
jbe
nop
xor
add
fistp
or
pusha
and
xor
and
fadd
iret
adc
pop
sti
std
sbb
dec
ret
and
adc
movs
pop
xor
inc
sub
or
or
arpl
sub
ds
in
lea
jns
ins
cdq
mov
xchg
add
or
ret
std
mov
xor
mov
gs
push
or
or
xchg
push
mov
ins
pop
dec
sub
push
cmp
jae
mov
mov
pop
pop
adc
xchg
(bad)
bound
or
mov
or
(bad)
ja
ret
push
sbb
sbb
xchg
ret
inc
fist
test
inc
out
cmp
add
cmp
or
push
mov
lea
inc
lods
jmp
loope
cmp
ret
inc
or
fwait
adc
cmps
adc
(bad)
cmp
inc
test
hlt
shr
adc
loopne
in
and
imul
pop
push
jle
lock
ja
pop
xchg
lea
push
cmp
or
clc
jnp
jg
add
mov
shld
or
inc
rcr
add
in
sbb
test
out
jg
jp
(bad)
add
or
adc
call
fs
xor
(bad)
add
je
gs
loopne
js
add
push
inc
lods
js
inc
xchg
push
lock
clc
es
imul
jge
movs
sub
push
loop
and
or
out
xchg
sub
cmp
jbe
adc
in
lock
adc
add
dec
fdiv
ret
mov
jne
ins
and
mov
(bad)
jb
xor
popa
ret
retf
movs
(bad)
mov
ss
and
mov
es
sar
push
cwde
lods
add
cmp
sar
sub
mov
fadd
and
sub
and
push
(bad)
adc
nop
mov
mov
pusha
jbe
add
dec
mov
push
lahf
mov
pusha
xchg
pop
test
lds
mov
clc
mov
dec
and
lock
mov
sar
sub
ror
es
mov
adc
(bad)
sub
pop
inc
add
shl
pop
lods
pop
jge
or
sub
mov
cmp
mov
xchg
ja
dec
cdq
bound
call
add
bound
lock
jmp
daa
aam
ret
sub
adc
enter
mov
mov
test
xchg
arpl
repnz
push
les
in
stc
push
xor
cli
add
cmp
sbb
leave
push
repnz
push
xor
push
xor
dec
mov
push
adc
sahf
push
loope
js
push
sbb
or
dec
pushf
push
cmp
cmp
pushf
inc
ror
inc
jmp
(bad)
adc
mov
jle
mov
mov
imul
ficomp
sbb
jp
call
dec
in
mov
neg
sub
dec
add
pop
add
xchg
cmp
inc
push
inc
outs
cmp
aaa
add
clc
push
push
pushf
xor
bound
in
and
inc
clc
lock
and
das
out
clc
push
push
jmp
push
inc
in
push
sbb
in
jnp
mov
fsub
add
push
cwde
or
xchg
push
mov
or
adc
ds
loope
ins
outs
mov
sub
add
call
push
push
cmp
clc
in
clc
lods
loopne
(bad)
mov
les
cmc
mov
inc
mov
pop
int
dec
jnp
or
test
(bad)
stc
(bad)
cld
and
xchg
outs
aaa
or
jns
push
jne
add
sahf
xor
push
fnsave
xor
cli
repnz
jmp
mov
fistp
adc
cmps
pop
out
jle
adc
xlat
imul
add
xor
rol
mul
or
cmp
adc
push
jne
adc
or
fs
(bad)
pusha
xor
das
(bad)
ror
cmp
mov
cmp
jb
add
aaa
out
js
mov
add
shr
out
dec
push
add
shl
push
stos
les
mov
iret
push
retf
add
add
jo
mov
dec
mov
mov
test
fs
jl
jae
adc
test
scas
adc
rcr
or
adc
fld
lock
enter
scas
or
les
sub
add
push
add
into
fs
ja
or
sub
mov
rcr
fisub
jo
fdiv
cmp
sub
sbb
jmp
dec
inc
mov
(bad)
pop
jb
stc
inc
retf
mov
add
ficom
add
out
scas
jmp
cs
rol
cwde
mov
and
retf
push
stos
add
mov
mov
cmp
jae
aad
fistp
cmp
jb
push
cmp
ja
sub
stos
xor
or
dec
jge
mov
pop
cmp
jns
movs
xor
add
ret
jbe
push
das
inc
push
xor
sub
jne
arpl
inc
sbb
xor
sub
fs
in
mov
mov
scas
sbb
xor
sub
add
mov
es
je
add
jmp
shl
and
add
and
xor
rol
dec
xor
mov
cdq
js
push
dec
cmp
dec
and
xlat
hlt
aam
cmp
or
sbb
mov
adc
adc
and
in
add
pusha
lock
adc
movs
(bad)
cmp
mov
fwait
xor
pop
jne
cmps
cmp
fdiv
inc
sub
movs
xor
inc
mov
pop
rol
pop
ins
arpl
inc
jg
adc
push
add
sub
cmp
jnp
aaa
xchg
es
adc
push
inc
add
dec
loope
or
fdiv
sti
dec
jo
jnp
pop
mov
loop
mov
push
and
nop
xor
repz
xor
add
mov
outs
mov
mov
sbb
aad
(bad)
adc
or
mov
inc
inc
hlt
shl
pop
mov
addr16
jl
mov
mov
mov
push
or
sbb
mov
pushfw
xchg
cmp
movs
jl
mov
cmp
xchg
data16
sar
ret
aam
or
adc
ret
rcr
and
add
outs
push
inc
and
or
(bad)
cmp
fadd
dec
xor
cmp
jnp
and
xchg
sub
outs
add
sbb
test
rcr
shl
fs
aad
call
mov
sub
imul
mov
gs
xchg
adc
mov
inc
loopne
sub
movs
adc
and
fadd
cmp
das
xchg
int3
and
fdiv
ds
mov
mov
or
cmp
test
push
and
fs
mov
mov
hlt
cmp
sub
outs
das
push
int
(bad)
adc
lock
(bad)
aam
(bad)
rcl
add
inc
push
xlat
ins
sub
add
add
test
jmp
adc
dec
push
lock
rcr
xchg
push
mov
test
sub
push
xor
fst
pop
rcr
or
sbb
push
push
in
mov
jnp
jae
pusha
add
xlat
xchg
pop
cdq
into
clc
inc
push
call
mov
pop
das
and
or
sahf
mov
shr
mov
push
add
addr16
pop
jl
fst
dec
ins
add
xor
movs
mov
ret
and
popa
aaa
es
es
xchg
xor
or
je
int
xor
(bad)
fcom
and
arpl
xor
xchg
jns
xchg
push
sti
push
hlt
cs
xchg
or
sub
fmul
mov
mov
addr16
xchg
bound
pop
dec
and
push
pop
pusha
jb
add
pop
clc
cld
or
xchg
push
push
hlt
cmp
popf
or
shl
push
add
jl
in
adc
mov
or
pop
and
clc
int
cmp
jne
mov
inc
push
sbb
or
and
lea
push
fldz
pop
push
iret
shr
adc
iret
sub
lock
ret
cld
mov
or
push
sbb
loop
mov
clc
not
xchg
gs
je
dec
je
add
push
(bad)
cli
bound
(bad)
mov
jmp
cmp
or
jbe
push
mov
xchg
add
add
test
ins
jge
inc
xlat
test
mov
push
push
pop
ins
int
das
dec
sbb
mov
ins
jne
jp
mov
jae
popa
mov
sahf
(bad)
push
add
sub
mov
adc
neg
lods
pusha
and
rol
push
shl
imul
jno
jl
mov
movs
mov
mov
cdq
sub
mov
push
sbb
shl
and
xchg
mov
not
xor
xor
mov
add
jb
mov
pop
pop
sbb
sub
test
adc
add
dec
cli
or
adc
or
hlt
sub
lods
inc
dec
and
adc
mov
add
adc
mov
adc
sub
dec
mov
sub
inc
inc
out
cmp
call
enter
dec
add
inc
sbb
push
daa
ds
out
arpl
jo
pop
dec
mov
mov
popa
mov
or
dec
jle
mov
test
mov
xchg
mov
mov
or
cmp
push
fnstenv
add
pop
mov
adc
xlat
mov
jg
mov
mov
stc
imul
fcom
pop
ins
sahf
movs
inc
fistp
iret
inc
cmp
loope
pop
and
add
out
(bad)
adc
jle
adc
fld
push
xchg
add
stos
cmp
push
iret
mov
mov
inc
fld
std
jnp
jge
test
mov
fst
push
loopne
sahf
sub
add
fild
sub
iret
mov
xor
fiadd
and
(bad)
hlt
jne
pop
clc
out
mov
sub
sbb
sub
sub
sbb
and
push
mov
stc
jb
rol
push
test
stos
xchg
xchg
cmps
lods
hlt
mov
test
sbb
leave
aam
mov
mov
xor
dec
mov
dec
pop
jo
and
frstor
mov
sbb
cmp
mov
daa
and
test
or
mov
fdivr
xor
pop
jg
inc
mov
xchg
sub
cwde
inc
xchg
xor
or
xchg
inc
pop
inc
iret
cmc
and
xor
inc
and
fmul
sub
mov
pop
jl
fld
aas
cmp
rol
cwde
xor
loope
int3
cmp
ret
adc
outs
stos
inc
jl
xchg
push
mov
lock
addr16
or
xchg
aam
pushf
enter
push
mov
nop
jo
aam
imul
loopne
inc
call
lar
outs
pop
add
add
dec
aaa
scas
(bad)
sar
add
push
jne
push
sbb
and
(bad)
sub
mov
cmps
sub
add
stos
dec
inc
and
jg
jno
bound
addr16
adc
dec
cmps
and
retf
(bad)
dec
cs
xor
push
in
scas
xor
mov
mov
adc
add
fld
sbb
add
sbb
imul
jmp
push
cwde
inc
push
adc
cwde
inc
sub
mov
and
and
popa
gs
jne
data16
cmp
add
adc
aaa
rol
mov
not
add
je
add
cmps
imul
adc
pop
inc
add
add
add
(bad)
cmp
pop
clc
xor
dec
loopne
mov
push
push
xchg
into
ins
in
adc
popf
or
test
xchg
xlat
dec
push
mov
pop
je
mov
pop
pop
int
push
or
dec
adc
or
test
adc
inc
push
jle
(bad)
test
or
add
mov
xor
sbb
cs
dec
(bad)
pop
and
nop
mov
and
inc
pusha
adc
stos
add
mov
mov
sbb
add
push
mov
sti
sbb
sbb
mov
movs
xor
les
retf
sub
pop
add
or
sahf
sub
add
xchg
xchg
and
push
add
pop
imul
xchg
std
xor
aam
mov
mov
push
sbb
pop
adc
or
add
inc
or
or
sub
inc
rol
push
xchg
adc
xor
stos
sub
pop
pop
cmps
add
fs
add
pusha
push
addr16
lea
(bad)
xlat
pcmpgtb
daa
idiv
scas
add
sbb
sub
sbb
and
xor
(bad)
or
pusha
int
mov
pop
sbb
dec
cmp
xor
xor
push
xor
shr
xor
test
test
dec
push
sbb
jo
mov
adc
add
movs
mov
push
retf
inc
mov
jl
(bad)
or
inc
pop
imul
jge
dec
inc
popf
xor
adc
pusha
add
ins
sbb
lock
mov
pushf
sub
jnp
rcl
cmp
xor
adc
jo
add
cmps
push
or
push
mov
dec
cld
aaa
lea
lock
jnp
push
arpl
stos
or
pop
clc
add
or
fadd
popa
xor
sub
push
test
adc
sbb
sbb
add
push
sbb
or
repz
push
jbe
or
fisubr
outs
or
pop
inc
lds
push
push
ret
popa
jle
push
das
sub
mov
mov
adc
or
and
adc
or
lods
jno
in
fsub
inc
mov
pop
add
(bad)
jle
jg
xchg
jo
push
push
pop
adc
xchg
(bad)
mov
addr16
inc
shl
pop
xor
add
sahf
pusha
sub
cmp
cmp
sbb
push
mov
adc
adc
cmp
push
jbe
inc
inc
outs
(bad)
xor
or
add
cmp
shr
sbb
inc
mov
leave
jmp
popa
jb
data16
add
mov
inc
dec
xor
hlt
fucom
cmp
jl
jmp
add
nop
pop
inc
(bad)
push
fchs
mov
fbld
rcl
arpl
popf
sub
xor
test
dec
js
dec
mov
or
pop
add
xchg
fisubr
jg
inc
(bad)
adc
mov
sbb
cli
jl
jl
cwde
in
mov
add
jae
lea
push
sub
sbb
inc
jae
add
sbb
ja
test
lds
add
dec
sbb
add
pop
or
adc
mov
jl
jmp
fnstcw
nop
mov
or
and
fcomp
jno
sub
inc
mov
push
dec
jae
fs
push
mov
mov
mov
ret
pop
xor
mov
mov
and
or
pop
pop
stc
pop
mov
movs
and
mov
inc
jp
add
fdiv
mov
adc
enter
mov
or
js
xor
jae
sub
add
adc
push
psllq
int
out
inc
inc
push
push
fcom
dec
sysret
dec
mov
inc
fdivr
in
fnstcw
dec
jns
mov
pop
mov
leave
rcl
dec
push
and
fistp
lock
call
sbb
outs
fidiv
lods
ror
mov
shr
call
push
jae
je
mov
add
dec
in
rcl
inc
retf
popa
stos
shl
inc
push
std
mov
jbe
je
mov
sbb
(bad)
cmp
adc
ss
xor
and
add
cs
bound
data16
jmp
dec
stos
(bad)
jnp
in
dec
daa
iret
dec
aad
adc
les
inc
sub
and
push
add
xor
jne
xor
mov
ss
or
js
adc
xlat
or
(bad)
mul
stc
adc
add
sbb
hlt
add
or
(bad)
push
add
cld
nop
icebp
outs
mov
popa
dec
imul
sbb
adc
into
cwde
mov
inc
push
(bad)
scas
(bad)
and
pop
nop
call
pop
imul
int3
xor
pop
out
push
call
fld
mov
sbb
inc
cli
and
hlt
push
add
xchg
jbe
mov
push
ds
popa
inc
pop
sbb
push
xchg
lock
or
add
cmp
mov
push
cmps
sbb
outs
add
call
mov
inc
mov
cmp
lock
stos
adc
mov
cmps
pop
test
push
mov
fs
push
(bad)
push
add
sbb
stos
jmp
or
les
inc
push
add
adc
lahf
mul
je
push
add
dec
push
jbe
push
call
(bad)
xor
add
mov
jmp
rol
and
ret
jne
lods
pop
pop
loop
jne
inc
inc
mov
(bad)
ins
mov
je
pop
mov
push
dec
cld
adc
fnstcw
adc
dec
jle
ins
fadd
call
loopne
and
fsub
fdivrp
fmul
inc
mov
fistp
and
test
adc
dec
mov
push
xchg
pop
inc
pusha
std
jne
or
mov
or
or
sahf
int3
push
push
ja
sbb
or
pop
pusha
cmp
popa
sub
dec
fcom
add
or
sbb
push
add
aaa
dec
and
sbb
iret
jge
mov
dec
iret
cld
test
sahf
jle
mov
sub
pop
or
sub
push
sub
out
sub
mov
bound
hlt
int3
cwde
push
push
jg
sub
js
push
xor
push
js
movs
fs
pop
ror
mov
push
mov
add
aad
adc
out
adc
ret
cmp
loop
es
repz
push
push
ret
ins
mov
out
or
push
sbb
or
xchg
(bad)
add
inc
js
and
inc
(bad)
(bad)
dec
xor
and
inc
je
test
stc
in
add
push
inc
jmp
or
lods
push
jnp
sub
jl
aaa
lock
inc
mov
int3
and
push
sbb
out
inc
lea
add
add
ss
cmp
test
outs
lods
mov
or
(bad)
and
xor
push
dec
loopne
push
test
cmp
pop
adc
enter
or
dec
sub
sbb
mov
mov
sub
loope
int3
daa
(bad)
das
retf
or
push
outs
cmps
xchg
xchg
out
or
shl
iret
add
push
xor
xor
icebp
sbb
rcl
mov
cmp
loope
sub
imul
mov
add
clc
in
mov
add
jb
and
xchg
jle
pop
xchg
adc
aaa
inc
es
popa
popa
add
pop
rol
and
push
mov
dec
retf
jle
add
repnz
xchg
push
imul
sub
push
sbb
jmp
xor
push
push
out
imul
mov
cmps
cmps
push
loope
xchg
imul
pop
movs
push
out
call
inc
and
or
xchg
adc
inc
retf
and
mov
or
xor
xor
jecxz
xchg
pusha
shl
out
ja
aaa
inc
sbb
xchg
outs
adc
jb
jns
cs
add
lahf
mov
cmp
inc
inc
xor
jmp
int3
xor
sbb
jb
jo
sub
mov
imul
mov
jno
add
loop
ret
cs
fisttp
mov
dec
xor
add
or
dec
and
sbb
movs
mov
addr16
ins
pop
(bad)
mov
mov
pop
mov
shl
out
gs
stc
lods
icebp
push
dec
das
sub
push
lea
xchg
mov
add
cmp
neg
(bad)
outs
out
xchg
cmp
ficom
push
ret
dec
pop
jp
adc
inc
adc
fsubr
(bad)
cmc
gs
push
add
pop
sub
fisub
rcr
or
retf
call
cmp
inc
xlat
shl
add
xchg
dec
fstp
lods
adc
mov
jmp
inc
fcmovnu
dec
fisub
and
out
dec
aas
pop
xchg
push
repz
or
enter
mul
xor
push
in
ret
pop
adc
inc
mov
data16
or
sbb
pop
pusha
fild
std
xchg
pop
loopne
sbb
pop
dec
sub
xor
loope
xor
test
enter
push
mov
pop
mov
in
cmps
daa
iret
in
and
pop
or
xchg
pop
ret
aam
mov
pop
pop
clc
add
xchg
sub
daa
mov
test
push
sub
sbb
rol
mov
sbb
ret
jmp
ja
arpl
dec
add
scas
test
add
jb
and
mov
popa
icebp
pop
ins
adc
adc
mov
das
cmp
add
jmp
push
test
fidivr
add
push
sbb
out
jge
mov
jl
or
and
mov
push
sub
sub
shl
sbb
call
aam
aam
shl
push
and
out
dec
adc
adc
mov
xchg
jg
inc
mov
dec
rcl
mul
inc
add
loope
sub
sbb
arpl
adc
push
mov
jmp
lahf
push
xor
ret
ficom
or
pop
in
xor
inc
mov
mov
add
push
jmp
xchg
call
inc
mov
call
lock
pop
lods
data16
add
xor
mov
(bad)
sub
push
add
inc
mov
pop
cwde
mov
(bad)
pop
daa
rcl
shl
dec
push
mov
enter
popa
or
das
imul
add
inc
and
shr
xchg
fcomp
mov
or
test
jecxz
add
push
inc
adc
inc
hlt
lea
jno
popa
pop
je
js
jne
fistp
fild
dec
pop
jle
or
rol
jle
clc
out
hlt
addr16
out
(bad)
add
jne
push
das
xchg
push
cwde
jl
pop
(bad)
xor
inc
cmp
jl
loopne
out
and
cmp
(bad)
jns
push
fmul
out
add
dec
fistp
mov
lock
or
add
ja
or
or
xchg
popf
lods
mov
sbb
mov
xchg
pushf
jmp
add
rcr
out
repnz
push
jp
adc
mov
call
add
add
dec
sub
cmps
movs
add
dec
push
ret
and
and
xchg
jmp
ja
mov
sub
and
xchg
push
or
test
cmp
or
outs
retf
inc
loope
dec
mov
hlt
sub
lea
loope
loope
(bad)
enter
push
adc
inc
lea
mov
inc
int
jmp
int3
dec
jnp
das
xor
(bad)
enter
sbb
and
push
imul
cmp
jmp
add
sub
jmp
mov
addr16
aaa
add
adc
retf
or
fadd
xor
div
sub
shl
fisttp
dec
or
leave
loope
or
(bad)
adc
repz
jne
lea
sbb
cld
sti
adc
or
xchg
rcr
add
sub
shl
xor
sub
or
cld
pop
jmp
cmp
adc
xor
ja
mov
mov
jae
into
push
jo
xor
or
int3
les
loope
call
jae
adc
aam
cmp
cld
cld
inc
add
push
push
xor
ins
push
retf
sub
jle
sub
je
add
outs
je
add
xor
ins
arpl
pop
(bad)
std
inc
add
gs
leave
and
add
std
mov
sub
adc
inc
aam
loopne
ret
cwde
or
add
xchg
push
add
mov
lea
mov
or
or
xchg
jmp
push
jbe
pop
cwde
out
cmp
mov
lea
loope
pushf
or
inc
jl
add
sub
adc
mov
rcr
add
js
and
loope
add
adc
mov
mov
cld
or
movs
add
add
jp
cmp
pop
and
xor
pushf
add
or
dec
xchg
aas
xor
or
xor
outs
jl
dec
lahf
add
adc
mov
xchg
test
scas
xchg
mov
or
dec
and
outs
sbb
or
fdivr
or
dec
jl
lock
and
push
test
add
loopne
mov
pop
arpl
imul
scas
dec
stos
mov
push
test
or
ds
mov
xchg
scas
cmp
or
xchg
add
inc
dec
inc
loopne
or
mov
inc
or
xchg
push
and
cmp
mov
imul
push
sub
sbb
test
mov
dec
pop
ss
dec
jmp
ins
cs
sbb
and
shl
js
xor
fdivr
xchg
pop
xor
mov
dec
lods
push
adc
push
xor
push
cwde
mov
jne
push
add
pusha
push
dec
loope
adc
xchg
mov
mov
aaa
mov
xchg
xor
xlat
and
sbb
push
cmp
push
sbb
pop
cwde
rcl
pop
aas
dec
stos
xchg
xor
add
rcl
inc
xchg
cmps
in
das
sub
lods
push
retf
ror
mov
mov
addr16
(bad)
daa
cmp
pop
fsub
ja
push
or
sbb
push
mov
fild
push
loopne
loopne
add
imul
stos
adc
add
jp
test
push
mov
pop
cld
jnp
or
rcl
mov
ss
sbb
add
loopne
or
xor
xor
push
or
frstor
push
dec
shl
mov
mov
add
fldenv
pop
ja
or
not
ins
push
adc
cld
popa
jne
mov
dec
xor
push
adc
add
(bad)
icebp
fwait
out
sub
mov
imul
push
push
xchg
mov
jp
lods
aam
in
add
je
adc
pushfw
push
pusha
cmp
adc
and
pop
mov
dec
or
push
hlt
sbb
dec
mov
loop
mov
and
add
and
cmp
jge
dec
xor
lods
fcom
pop
or
sbb
fadd
scas
(bad)
data16
or
mov
cld
je
jge
mov
add
sbb
js
xor
dec
inc
add
jne
push
adc
in
add
add
repz
add
inc
mov
mov
imul
mov
inc
or
cmp
and
retf
ror
inc
or
push
fs
and
cli
push
cmp
outs
xor
push
dec
retf
mov
xchg
pop
ret
inc
cmp
out
or
xchg
xor
mov
xor
(bad)
or
jge
cmps
call
pop
jb
ror
test
ret
cmp
dec
adc
push
dec
adc
dec
push
jo
push
dec
xchg
mov
add
pop
mov
sbb
sub
xchg
and
pop
mov
pop
adc
add
pop
arpl
sbb
jae
sub
dec
pop
lea
xor
pop
pop
add
outs
fstp
sbb
add
mov
push
outs
ss
xchg
cmp
ja
dec
fisub
add
fadd
pop
mov
mov
cmps
push
ror
pop
sub
scas
cmp
cmp
loope
pop
mov
add
mov
push
fisub
xor
test
sbb
(bad)
xor
mov
inc
dec
pop
lods
jb
xchg
jmp
pop
loope
pop
mov
repnz
adc
or
or
add
movs
and
test
retf
pusha
and
add
addr16
pop
push
xchg
jmp
add
push
adc
push
xor
cli
into
add
inc
pop
int3
push
mov
mov
ss
xor
movs
dec
and
push
add
adc
jle
sbb
sbb
inc
add
fstp
sbb
mov
jb
rcr
push
inc
nop
adc
daa
and
cmps
xor
cli
push
enter
aas
in
shl
shl
clc
mov
xchg
cmp
ss
fbld
dec
add
jle
hlt
jle
mov
pop
jne
cmp
push
adc
inc
add
loopne
jo
pusha
sub
loop
jo
sbb
data16
sub
hlt
jo
pushf
retf
inc
cmp
pop
jmp
jge
push
pop
(bad)
and
push
ds
push
je
push
mov
cwde
xchg
add
jle
add
icebp
pop
mov
add
pop
das
ret
mov
js
je
mov
jp
lock
inc
pusha
add
push
jl
jle
out
xor
push
push
xlat
inc
and
inc
or
push
cmps
inc
cmp
adc
sub
call
push
push
ret
aam
aad
(bad)
cmp
sbb
dec
mov
jnp
xor
dec
dec
push
or
inc
scas
leave
das
or
add
clc
mov
test
dec
sbb
js
mov
inc
stos
pop
jg
cmps
fiadd
or
fcom
ja
cld
sbb
shr
and
dec
add
jmp
cmp
xchg
in
and
in
pop
cld
mov
(bad)
cmc
retf
sti
jb
pop
pop
ficomp
adc
mov
outs
loopne
add
mov
xor
push
les
enter
cld
ret
inc
push
jne
add
loop
dec
dec
jmp
lar
sbb
bound
fs
push
mov
push
stos
imul
lds
pop
jo
dec
adc
mov
adc
inc
dec
jne
dec
movs
test
xor
into
mov
dec
push
clc
into
push
pop
ror
mov
xchg
shl
mov
adc
loope
pop
push
adc
sbb
aas
push
adc
shl
pop
pop
inc
ja
push
rcl
pop
retf
xor
sar
inc
call
in
mov
mov
push
or
in
sbb
retf
inc
enter
sbb
pusha
sbb
in
push
pop
jno
imul
adc
add
or
ins
aaa
xor
adc
out
adc
pusha
mov
shr
sub
div
movs
inc
or
sbb
cmp
or
mov
or
pusha
pop
add
dec
mov
fsubr
(bad)
ds
jnp
ret
pop
lods
and
add
lds
adc
mov
inc
mov
aas
test
mov
lods
lds
clc
adc
inc
mov
and
mov
push
adc
jne
push
ss
loope
imul
or
aam
mov
je
mov
add
inc
imul
arpl
jae
dec
enter
test
mov
and
push
imul
call
adc
and
mov
pop
sbb
jne
mov
and
jge
test
lods
ins
in
outs
lods
and
xor
js
dec
ss
jnp
out
inc
les
mov
sbb
or
setl
push
jno
cmp
or
sub
into
pop
outs
mov
lods
mov
pusha
mov
mov
cmp
rol
movs
in
and
mov
fild
add
mov
jnp
inc
imul
sub
cmp
mov
out
or
or
mov
sub
or
inc
shl
daa
iret
data16
enter
and
sbb
or
cmp
imul
add
add
xor
xchg
jne
mov
rcl
push
inc
enter
cdq
push
jno
mov
sub
cmps
push
ins
pop
sub
movs
loop
and
push
shr
movs
add
inc
and
sub
xchg
loopne
cmp
mov
les
fnstcw
dec
jmp
dec
ins
fsub
ret
mov
and
pop
pop
mov
push
inc
retf
in
repnz
or
lock
sti
gs
popa
pop
sbb
inc
clc
ret
shr
nop
pop
push
xchg
call
pusha
rcr
rcr
neg
or
and
dec
or
dec
ds
sub
push
aas
int3
outs
test
loope
add
pop
cmp
add
sub
mov
push
jbe
mul
and
sar
or
dec
rcr
adc
loope
in
pop
int3
mov
and
outs
sbb
shl
mov
adc
pop
dec
or
inc
push
test
add
add
adc
inc
sbb
fnstsw
xor
inc
and
je
das
add
aaa
mov
fadd
je
call
mov
pop
sahf
aam
jecxz
mov
rol
xor
cs
cmp
sub
loope
mov
into
and
jbe
test
mov
sbb
inc
mov
push
fs
int3
sbb
jmp
jae
adc
jb
push
clc
dec
fld
je
mov
das
stos
inc
push
movs
lahf
or
jle
inc
icebp
jb
fistp
ret
into
out
adc
call
sub
and
xchg
jo
add
and
mul
mov
stc
and
xchg
int3
jmp
daa
sbb
cmp
enter
jl
cmp
adc
add
or
adc
push
sub
add
push
or
in
sub
pusha
or
jmp
push
in
inc
dec
sar
mul
shr
retf
sbb
sahf
lods
mov
jg
xchg
icebp
push
push
xchg
dec
xchg
cmps
imul
scas
jg
fsubr
sti
push
add
dec
dec
or
outs
xlat
xor
movs
sbb
and
pop
push
pushf
enter
adc
nop
mov
or
or
cmp
cdq
xor
aad
adc
sub
push
fnstsw
jno
push
add
rcr
mov
je
add
sbb
out
mov
mov
push
and
push
or
dec
push
rcr
pop
jge
cmp
jno
sub
push
inc
mov
mov
ja
(bad)
mov
jns
mov
sbb
pop
pop
push
adc
mov
dec
mov
test
inc
jnp
xchg
jg
repz
or
cmp
and
cmp
or
test
cli
add
dec
fsubr
inc
int3
jbe
jb
add
call
test
dec
lahf
xchg
lock
jp
cmp
lds
cmp
jp
inc
xor
dec
mov
icebp
sbb
or
shl
or
push
and
cmp
retf
adc
or
sub
ret
xor
push
sub
xchg
cmp
inc
push
xor
adc
or
cdq
inc
clc
sub
clc
sbb
mov
pop
je
cdq
or
sub
gs
or
pop
popa
and
adc
dec
dec
dec
or
mov
std
jno
dec
xor
rcr
add
inc
adc
xor
or
mov
in
js
dec
adc
cmps
jo
arpl
xchg
inc
or
sbb
xchg
int3
popf
add
ror
stc
adc
das
ror
pop
iret
jg
(bad)
xor
sbb
push
call
jmp
pop
stos
sub
sbb
aad
sbb
pop
in
mov
push
jl
(bad)
sub
dec
xor
inc
or
(bad)
cmps
jmp
inc
or
push
and
dec
or
jecxz
xor
loopne
push
or
imul
inc
and
mov
setae
aaa
adc
adc
xchg
jnp
sbb
inc
mov
lds
and
lock
push
push
xor
lock
sub
push
fmul
xor
mov
jno
cs
xor
inc
jp
(bad)
xchg
inc
test
adc
jb
xor
mov
aaa
push
cmp
ret
in
and
mov
mov
cmp
mov
data16
sub
into
or
cmp
rol
add
(bad)
mov
and
cmp
cmp
ins
pop
imul
add
mov
rcl
out
push
outs
push
xchg
hlt
call
inc
lods
jne
jp
dec
mov
dec
cmp
mov
inc
mov
sbb
sbb
nop
sub
mov
push
hlt
xchg
cwde
xchg
and
cmps
dec
ret
int
shl
inc
inc
ja
dec
retf
and
daa
imul
je
mov
sbb
or
loopne
jb
mov
pop
or
and
sub
mov
push
sbb
test
and
pusha
sti
adc
add
jae
mov
push
xor
lds
sbb
call
add
pop
dec
push
in
add
cmp
dec
rcl
xlat
cmc
sbb
mov
add
sub
test
out
test
outs
arpl
adc
cmp
and
push
add
mov
leave
and
xchg
mov
xlat
int
out
test
rcl
out
out
ins
xchg
adc
mov
jmp
xor
or
or
repnz
bound
sbb
sbb
test
imul
retf
push
in
imul
bound
pop
nop
push
xchg
add
and
and
mov
add
loope
cmps
inc
adc
out
aam
stos
sub
jns
leave
and
or
pop
mov
xor
cmps
loopne
and
xchg
or
cmp
test
sbb
lea
sub
or
or
xor
add
shr
(bad)
or
push
pop
jne
inc
shrd
adc
movs
mov
mov
fiadd
adc
xor
and
pop
cmp
pop
jnp
popa
sbb
mov
bound
add
jno
inc
ja
push
and
and
in
mov
cmp
jne
or
scas
stos
fsub
lods
test
add
push
mov
and
and
test
sub
gs
push
adc
adc
push
ins
inc
push
inc
xor
add
and
mov
gs
mov
and
fisubr
dec
mov
adc
hlt
jg
dec
cmp
xchg
jl
ins
or
lods
xor
push
xchg
adc
std
fcomip
dec
push
dec
fcomip
inc
in
jne
inc
nop
jle
lea
lods
cmp
or
sub
je
push
rol
pop
shl
mov
ins
inc
push
mov
push
dec
push
adc
jg
fbld
pop
scas
push
mov
pop
pop
or
or
hlt
add
imul
dec
dec
ins
xchg
push
or
adc
lahf
sbb
fisub
and
adc
xor
add
int3
sbb
cwde
lods
fcomp
inc
movzx
neg
push
sbb
or
imul
das
ds
clc
or
pop
and
in
addr16
pushf
sub
jecxz
xor
jg
rcl
sub
mov
xchg
scas
inc
or
xchg
jne
imul
fbld
lock
push
add
das
and
xor
or
push
push
leave
and
fsub
jl
jno
dec
leave
out
sub
and
or
call
out
cli
mov
cmp
adc
ins
js
inc
add
mov
lds
mov
fadd
out
add
adc
dec
stos
inc
xlat
test
xor
ror
adc
pop
shl
jmp
mov
inc
and
mov
std
xor
sub
fst
cmp
inc
sbb
(bad)
push
movs
jne
sub
arpl
mov
and
cmp
cld
hlt
push
and
xor
dec
or
fnstsw
mov
add
or
lahf
add
mov
xor
fst
add
add
shl
pop
jns
nop
dec
or
push
bound
cmp
jge
lods
jo
lds
jl
pop
imul
jle
add
jge
add
and
pop
add
sbb
das
push
fisttp
jle
icebp
mov
test
cli
cmp
or
pop
inc
pop
(bad)
mul
movs
push
push
call
cmp
lock
xchg
push
jnp
pop
lea
adc
sahf
add
es
and
xor
push
mov
retf
inc
imul
inc
enter
xor
in
push
leave
add
sbb
rcl
in
cmc
into
or
daa
push
test
nop
push
ror
je
jo
push
int
xor
adc
inc
add
xlat
push
cli
test
sti
pop
je
add
shl
lea
outs
stc
les
adc
test
xor
ins
inc
push
xor
add
add
das
push
or
movsx
xor
cmp
push
shr
fdivr
push
mov
cwde
lods
and
adc
cmps
icebp
or
xchg
cli
cld
rol
push
or
sub
sbb
jbe
lea
aam
mov
xor
cmp
sbb
push
cmp
call
ret
or
mov
int3
push
add
sub
ins
sbb
inc
rcl
xor
mov
or
or
enter
jbe
js
or
adc
adc
jae
imul
cs
xchg
or
push
cmps
pop
adc
or
sbb
pop
xor
xor
pop
pop
or
jo
adc
jns
mov
push
xor
sbb
adc
js
fs
shr
lea
test
mov
or
push
sub
sbb
or
nop
sbb
(bad)
cmc
clc
cmp
lea
xor
or
iret
les
push
daa
or
xor
push
sbb
hlt
push
mov
ret
popa
adc
or
stos
push
push
ror
sub
pop
jecxz
enter
sub
xchg
xchg
scas
loop
dec
adc
push
push
or
outs
push
or
mov
sub
mov
pop
(bad)
and
adc
not
out
jns
test
cdq
xor
js
push
leave
inc
mov
add
in
mov
inc
jnp
retf
push
in
mov
push
repz
aaa
jbe
add
fcom
lock
mov
push
sub
push
inc
test
push
dec
and
retf
inc
cmp
jb
add
sbb
dec
loopne
or
or
or
bnd
lods
xchg
int3
mov
or
rol
inc
cmp
add
(bad)
mov
mov
in
leave
in
cmp
scas
ret
daa
dec
inc
cmp
pusha
stos
adc
cdq
push
jl
pop
push
hlt
dec
js
inc
les
ret
das
ret
pop
inc
(bad)
or
int3
cmp
add
sbb
jno
arpl
dec
inc
iret
push
xchg
push
cmp
stos
ss
cmp
and
sbb
sub
inc
mov
add
add
inc
pop
cmp
push
sbb
mov
mov
jle
dec
add
push
sar
mov
dec
push
or
push
or
fadd
(bad)
data16
rcr
or
adc
dec
fisub
int
adc
pop
adc
sahf
dec
sahf
adc
push
sbb
or
sbb
pop
or
sbb
in
and
cmp
adc
test
add
xchg
sbb
inc
shl
sub
adc
je
sbb
inc
or
movs
movd
cmp
xchg
test
std
stos
dec
sub
mov
dec
or
test
and
sahf
push
and
jne
outs
or
test
cmp
outs
add
pop
cmp
ja
ja
loope
ds
fisttp
jmp
sbb
loop
movs
cmp
jnp
mov
loopne
pop
push
xchg
test
and
pusha
mov
and
sbb
test
aad
sub
lock
push
ins
sub
into
inc
ins
sub
out
popf
dec
xlat
jo
dec
lea
out
mov
mov
lods
jnp
pop
sub
or
mov
xchg
pop
mov
(bad)
cwde
or
inc
sbb
les
sar
ins
ret
push
mov
push
fisub
mul
addr16
je
or
je
push
xchg
call
and
pop
add
jmp
sbb
js
adc
push
bound
rcr
sbb
push
not
cmp
test
jbe
jo
fiadd
push
lock
cdq
rol
ret
dec
arpl
inc
cmp
or
lea
and
rol
jo
and
sub
inc
fadd
iret
shr
cmp
jle
idiv
add
mov
fistp
dec
and
dec
cmp
xor
aam
mov
outs
fidiv
in
sub
jg
in
push
mov
es
or
adc
sbb
imul
pop
add
gs
sub
mov
das
add
mov
(bad)
add
nop
imul
push
fnstenv
dec
fnstcw
or
rcr
loop
jns
lods
arpl
jmp
mov
push
add
bound
sar
popa
push
cmp
fiadd
jmp
sub
xor
es
in
mov
xchg
imul
stc
idiv
inc
loop
xchg
cmps
sub
es
mov
test
add
pop
xchg
or
xor
loopne
inc
push
dec
inc
mov
lods
and
cmp
cdq
dec
es
icebp
or
dec
loop
dec
add
jle
nop
xor
or
mov
sub
adc
xor
fadd
dec
push
inc
sti
xlat
cmp
sbb
data16
mov
es
stos
and
pop
jp
mov
(bad)
jmp
adc
(bad)
inc
cmp
sub
sbb
xchg
jp
push
or
pop
and
mov
dec
shl
pop
cmp
pop
xchg
out
xor
pop
lahf
cmp
inc
dec
jg
or
dec
adc
add
add
push
out
dec
pop
loopne
xor
sub
mov
dec
push
sub
mov
adc
repnz
loope
aad
inc
cli
add
scas
fist
push
push
lea
push
jmp
je
inc
je
scas
loope
jb
adc
mov
ret
je
scas
push
jo
adc
fld
xchg
fisubr
adc
pop
mov
dec
and
and
add
rol
(bad)
(bad)
enter
jbe
dec
xchg
pop
push
adc
sbb
push
out
push
addr16
sbb
sbb
rcr
xor
dec
pop
test
or
cmp
cmp
ror
inc
lea
test
loopne
or
jle
es
dec
or
adc
outs
jnp
push
mov
jle
dec
jg
xor
(bad)
jg
jmp
pop
sub
cmp
rcr
ja
push
repz
ins
ja
jae
or
add
push
cs
mov
ds
xor
stc
dec
cwde
jle
pop
repz
pushf
cmps
inc
mov
and
loopne
add
add
rol
aad
mov
mov
push
lahf
add
push
div
push
mov
and
jne
lock
cmp
lahf
and
adc
jns
loopne
xchg
cmps
jo
jo
adc
add
les
push
push
cs
out
and
jg
test
lahf
je
or
ss
sbb
mov
rol
jg
ror
inc
push
add
fmul
and
outs
jecxz
test
test
jmp
mov
(bad)
nop
jmp
mov
and
fndisi(8087
(bad)
xor
fnstcw
xor
movs
lods
cmp
aaa
mov
push
xlat
mov
call
cmp
jb
out
sbb
mov
adc
enter
push
retf
cmp
cmps
sar
dec
outs
(bad)
pop
push
pop
pop
movs
test
pop
neg
in
cwde
aam
pop
push
(bad)
xlat
into
inc
xor
sub
add
cmc
rcl
jmp
mov
xchg
and
add
ins
sbb
add
loopne
inc
(bad)
adc
nop
cmps
or
pop
fabs
add
pop
daa
and
pop
bnd
aad
and
fs
inc
cmp
mov
xor
and
je
ret
cmp
ins
inc
push
mov
into
sub
xchg
(bad)
fisttp
(bad)
sbb
inc
lea
push
out
fstp
ja
or
add
push
outs
xchg
nop
add
mov
movs
int3
push
sub
repz
ins
imul
fmul
inc
sub
adc
frstor
adc
adc
pop
add
inc
cmps
and
adc
add
pop
push
jae
dec
and
in
imul
(bad)
pop
stos
sub
push
jns
ror
ins
cmp
push
adc
dec
xor
imul
mov
dec
fcom
lods
ret
dec
inc
sbb
call
sti
mov
add
jbe
xchg
inc
pop
and
pop
push
push
rcpps
or
or
sub
inc
pusha
and
jl
sub
ins
push
inc
rcl
cmp
push
dec
ds
repnz
out
lds
cmp
push
jb
fsubr
dec
dec
sub
call
inc
push
add
add
add
dec
pop
mov
je
daa
sti
ret
inc
add
pusha
or
push
fadd
scas
sar
inc
cmp
or
jmp
adc
add
mov
clc
or
cmps
outs
call
adc
inc
push
inc
cld
jns
push
add
ja
add
dec
add
in
addr16
shl
inc
add
sub
add
pop
sbb
push
add
sbb
or
jne
pushf
shl
ds
fwait
sbb
push
xor
add
data16
scas
leave
add
das
or
and
xchg
ins
push
cmp
push
loopne
jno
push
cmp
aad
push
or
repnz
or
cwde
sub
nop
es
push
inc
add
js
enter
sbb
inc
ins
imul
pop
dec
pop
out
xor
mov
cmp
cmp
mov
dec
loopne
mov
mov
push
nop
sbb
ja
retf
adc
or
loope
and
xor
loope
in
inc
push
jmp
inc
ret
push
push
xor
lock
sub
inc
pop
cmp
sbb
and
mov
sub
cdq
stos
rol
add
iret
push
xor
test
push
daa
add
cli
call
push
out
pop
mov
push
rcl
mov
stos
add
jbe
test
movs
adc
pop
adc
rol
cmp
jb
add
xor
test
add
fs
jmp
push
mov
pop
out
add
sbb
push
pop
hlt
adc
sti
(bad)
loop
idiv
js
push
jb
and
push
inc
push
pop
mov
inc
leave
and
fcomp
pop
ins
outs
test
ja
inc
adc
ss
ja
jno
push
ret
jne
jne
in
jb
push
add
js
sub
loopne
(bad)
cmp
xchg
xlat
or
inc
push
test
jle
and
jae
cmp
pmulhuw
xor
push
outs
jb
in
jne
jne
xchg
pop
adc
stc
add
dec
push
dec
jbe
adc
cmp
jns
repnz
inc
in
test
inc
retf
div
lods
mov
aaa
cmp
sbb
add
js
int
add
ss
add
test
xor
or
shl
xor
add
mov
inc
mov
pop
in
ficomp
add
mov
xor
test
js
call
ja
je
pop
xchg
xor
sbb
inc
xchg
jle
cmp
popf
loope
inc
test
pop
cmp
and
push
cmp
cmp
jecxz
xchg
jg
add
in
fisubr
mov
mov
push
dec
adc
enter
in
dec
pop
call
add
adc
in
loop
dec
inc
dec
mov
xchg
xchg
mov
add
add
xor
ror
add
(bad)
dec
addr16
adc
mov
adc
out
and
and
nop
add
test
rol
mov
sub
and
and
stos
fld
xor
pop
dec
stc
pop
dec
enter
jl
jl
repnz
icebp
(bad)
call
sbb
call
enter
sbb
mov
adc
push
sub
or
jmp
jns
repnz
rol
fild
sbb
jge
fdiv
jne
test
(bad)
int
and
jge
in
icebp
or
sub
xlat
xor
xchg
inc
push
cmp
push
jg
movnti
dec
sbb
adc
xchg
lea
daa
pop
aaa
jl
push
push
ror
call
cs
or
lea
(bad)
out
pop
mov
sub
push
jg
cmp
push
push
sub
div
inc
jb
mov
inc
das
outs
add
outs
in
ror
add
sbb
adc
or
in
cwde
outs
jl
adc
iret
and
dec
stos
inc
lahf
push
jmp
sbb
cmp
fwait
js
xor
adc
loopne
nop
cmp
in
aaa
in
dec
jo
jmp
nop
hlt
adc
ret
add
jne
jno
pop
call
jp
xchg
and
retf
and
dec
or
cmp
imul
cwde
jne
inc
clc
jle
ret
enter
xor
cmp
sub
mov
adc
sub
lock
mov
mov
adc
push
cli
pusha
cmp
pop
jp
cmp
lea
inc
mov
call
es
push
pop
in
inc
cmp
inc
jo
add
and
and
or
lods
fnstcw
adc
(bad)
mov
retf
retf
pop
push
mov
add
enter
and
nop
xchg
inc
mov
push
sub
or
jo
mov
clc
jmp
xor
ror
(bad)
push
lods
(bad)
push
clc
add
imul
popf
mov
pop
or
stos
mov
aas
and
enter
cli
sbb
jno
leave
fld
test
mov
aam
out
inc
add
and
sbb
xchg
jbe
xor
ret
or
dec
and
test
(bad)
xchg
sbb
or
cld
bound
mov
cmp
mov
mov
aas
fsub
loopne
xchg
mov
mov
ret
(bad)
sar
mov
fisttp
jnp
adc
cmp
int3
and
cdq
mov
xchg
and
(bad)
pop
fld
pusha
loop
in
inc
adc
dec
inc
sub
mov
mov
scas
shl
in
add
xchg
ficom
hlt
dec
mov
or
mov
push
aam
in
cdq
sti
xchg
xchg
sbb
stc
inc
mov
jns
mov
and
mov
xor
test
sahf
out
stc
sti
pusha
cmp
push
cdq
fisttp
mov
and
out
mov
jo
push
rcl
cmp
push
jb
stc
inc
out
inc
(bad)
retf
dec
fwait
add
add
imul
scas
add
jb
sbb
scas
adc
out
add
retf
adc
jmp
push
or
mov
cmp
and
ret
into
scas
mov
fmul
fild
mov
dec
inc
inc
cmp
add
or
mov
xchg
test
push
add
cmp
xchg
jo
add
popf
rol
das
lods
sub
sub
sbb
push
aas
test
and
imul
mov
or
sbb
pop
inc
and
push
add
and
je
sbb
pop
xor
js
mov
mov
imul
dec
and
add
mov
add
sub
and
cmp
add
push
xor
inc
xor
adc
movs
mov
ret
arpl
lods
xchg
pop
add
cmp
nop
aad
retf
dec
outs
add
xchg
mov
adc
inc
add
pop
mov
push
mov
adc
popa
dec
dec
repnz
js
add
jp
test
fmul
jno
or
jecxz
jno
jg
inc
mov
inc
cmp
adc
int
daa
daa
dec
cld
ds
cmp
adc
(bad)
xchg
adc
cmp
std
pop
cmp
jmp
fld
jmp
xbegin
xchg
arpl
cmps
and
(bad)
and
and
fsub
out
jbe
inc
adc
dec
jns
adc
bound
loop
add
push
adc
adc
mov
push
ja
sbb
movs
jns
add
jne
pop
pop
jl
rcr
sbb
xor
inc
rcl
outs
add
add
add
xor
cld
in
sbb
ret
mov
jl
inc
cwde
and
ret
mov
adc
fdiv
leave
mov
push
cmp
lock
add
xchg
push
pusha
or
(bad)
cmp
adc
test
jnp
mov
xchg
push
scas
ja
cmps
jne
lahf
lea
jl
jmp
repz
std
push
inc
jns
push
retf
scas
(bad)
call
sub
jmp
lods
shl
pusha
ror
mov
mov
inc
xor
retf
ins
adc
xchg
test
je
jl
push
sub
adc
pop
pop
jle
mov
movups
leave
push
lock
or
push
test
mov
push
inc
ja
jle
mov
aad
push
xchg
inc
inc
test
xor
test
push
sub
inc
retf
jl
jmp
ret
lock
inc
aaa
arpl
clc
jo
add
push
pop
les
sbb
hlt
xchg
add
cmp
dec
jae
call
cli
es
add
inc
icebp
loopne
not
or
push
dec
(bad)
retf
sar
jle
cmp
shr
aam
push
(bad)
sub
(bad)
fsubrp
inc
sar
(bad)
mov
popf
adc
inc
inc
inc
dec
adc
call
in
leave
xchg
aam
dec
sbb
fst
dec
dec
ss
add
xchg
(bad)
mov
je
mov
jp
add
cmp
or
jne
and
push
shr
scas
inc
sar
rcl
nop
jo
test
lods
rcr
imul
xor
sub
sete
mov
ins
push
cmp
shr
dec
outs
outs
outs
retf
push
mov
mov
inc
mov
int3
(bad)
cdq
es
xor
sbb
clc
jmp
add
xchg
sub
push
mov
jbe
jl
jne
mov
inc
adc
test
int3
push
inc
leave
sbb
sbb
inc
mov
clc
test
xchg
inc
mov
xchg
(bad)
xchg
(bad)
ds
xchg
rol
jecxz
jmp
add
mov
ds
add
fnstenv
aam
fs
or
test
add
dec
ds
ja
pop
jnp
sub
loop
jge
nop
jmp
add
loope
xchg
loop
pop
jb
push
leave
enter
xchg
mov
enter
dec
pop
ficom
inc
ins
push
popa
leave
push
mov
ins
fwait
jecxz
leave
gs
inc
stos
jge
push
aas
sbb
push
add
je
je
add
sbb
lock
loope
adc
pop
xchg
adc
enter
sbb
cmp
loop
inc
and
mov
dec
cmp
stc
sbb
popf
sti
and
cmp
dec
dec
inc
cwde
xor
loope
lock
jge
out
sbb
and
test
les
push
xor
dec
mov
pusha
adc
cmp
fidiv
adc
adc
inc
out
stos
cmps
pop
shr
popa
fild
cdq
and
por
in
mov
or
pop
not
add
aaa
add
adc
and
imul
adc
push
in
pop
push
add
add
sub
stc
mov
xchg
cmp
rcr
fild
dec
dec
cs
int3
jle
ret
rol
in
sub
sbb
ficom
sbb
lds
mov
and
into
daa
inc
adc
add
je
nop
outs
lds
push
ins
add
pop
popa
aad
cmp
sbb
fnstcw
cmp
int3
xor
xor
push
shl
push
push
add
imul
sub
cmps
and
sbb
dec
mov
mov
(bad)
xor
iret
jmp
call
xchg
clc
push
mov
fmul
jge
fist
jmp
inc
int3
sar
push
jb
retf
cmp
retf
cmp
xor
clc
lahf
repnz
imul
mov
fisttp
sbb
test
mov
fsubr
(bad)
arpl
ror
inc
mov
cmp
push
pop
outs
das
pop
bound
sub
cwde
mov
cmps
aam
arpl
call
dec
mov
jmp
or
ja
jle
xor
jb
lea
pusha
add
mov
rol
or
call
add
xchg
push
push
sub
inc
inc
jl
xchg
pop
cli
mov
adc
shufps
jns
sbb
test
inc
adc
inc
fmul
sub
jmp
adc
les
sub
bound
mov
in
dec
xor
mov
xchg
cmp
pop
cmp
in
pop
lea
daa
jb
push
add
jbe
jle
jb
jns
or
les
xchg
xor
adc
inc
xlat
test
out
push
in
add
lods
sub
jmp
hlt
dec
push
and
xlat
fwait
cmp
adc
cmp
cmp
fisttp
ja
je
push
or
mov
mov
cmc
jp
clc
daa
movs
shl
dec
push
cmp
dec
rcr
inc
jmp
add
adc
(bad)
push
iret
daa
mov
mov
xchg
inc
sub
(bad)
or
sub
pushf
lahf
cmp
and
add
or
movs
jo
data16
push
dec
stos
movs
jns
out
dec
sbb
sub
sahf
jb
adc
daa
sub
icebp
movs
jo
or
and
or
push
sahf
ss
ss
push
jl
cs
and
sahf
pop
ins
sbb
shl
dec
mov
ret
and
xor
test
test
and
nop
daa
pop
test
adc
sub
lahf
mov
dec
sbb
bound
cli
sub
or
push
push
jmp
ret
retf
push
cmp
sub
cmp
or
(bad)
and
mov
lock
(bad)
test
dec
sbb
shl
mov
aad
and
push
push
xchg
push
and
xchg
inc
mov
and
scas
fdiv
leave
fsub
cld
test
push
inc
push
loop
movs
pop
out
js
add
add
and
mov
adc
mov
inc
and
and
fst
mov
sbb
adc
push
inc
inc
push
loopne
push
add
sbb
or
je
enter
xor
inc
(bad)
and
push
cld
adc
inc
and
and
sbb
mov
mov
sbb
movs
and
sbb
retf
jb
pop
dec
xor
adc
in
retf
xchg
xor
in
inc
popf
jnp
leave
(bad)
fdivr
mov
mov
jmp
push
and
loopne
and
xor
aam
adc
jne
jns
and
mov
add
adc
gs
jno
call
cmp
jl
nop
das
xor
inc
cld
jns
out
or
jne
and
lds
repnz
adc
and
jno
dec
pop
xor
sub
cdq
inc
xor
xchg
retf
and
lahf
xor
iret
mov
pop
nop
mov
fld
xor
or
(bad)
cmp
pushf
je
test
and
iret
xchg
add
fwait
mov
jle
adc
fwait
test
daa
je
mov
pop
push
cmc
rol
sub
rcr
or
and
sbb
int3
sbb
fcmove
add
and
dec
enter
nop
sbb
add
xchg
add
xor
popf
pop
test
repnz
and
in
jmp
imul
add
fldlg2
sbb
retf
and
leave
sub
aad
das
cmc
stos
sub
push
out
fsubr
sahf
cmp
or
jge
ja
lea
mov
push
sub
cmp
outs
xchg
xchg
or
push
das
jge
push
push
push
add
sub
and
xor
daa
sahf
mov
test
cdq
and
or
outs
or
mov
inc
test
or
xchg
add
adc
outs
loopne
xchg
pop
mov
jg
or
(bad)
and
bswap
in
add
(bad)
test
repnz
sbb
neg
fs
shr
(bad)
cmp
jbe
and
push
sbb
inc
popa
push
cmc
pop
lock
jns
cmps
fs
dec
add
adc
lods
and
add
aad
rol
mov
add
stos
lods
pop
push
gs
xor
mov
pusha
sub
fdiv
inc
or
jmp
test
out
sbb
dec
or
or
sbb
jl
jg
push
mov
sub
test
mov
cmps
cwde
mov
or
ret
mov
sbb
dec
cmp
push
mov
or
inc
push
in
ins
sbb
cmp
mov
cmp
mov
and
stos
add
dec
add
add
push
shr
das
pusha
add
cmp
mov
add
pop
sbb
aas
xor
jbe
mov
addr16
test
adc
les
shl
or
and
or
clc
aaa
dec
fcmovne
stos
mov
(bad)
stos
(bad)
popa
movs
mov
mov
jp
outs
and
mov
sahf
movs
movs
ret
call
or
or
or
in
or
inc
xor
lods
shr
add
xchg
cmp
inc
xor
ss
and
out
jbe
fs
inc
sahf
mov
fiadd
ja
in
sahf
pushf
loope
ffreep
pop
mov
sbb
mov
push
lock
lock
sahf
scas
dec
lock
inc
leave
push
enter
sbb
enter
push
aaa
aam
or
nop
pop
imul
push
add
ficom
fmul
cwde
pushf
push
push
fisub
repnz
xor
mov
lea
in
mov
inc
daa
pop
and
add
mov
enter
and
cmp
add
push
enter
ret
in
mov
add
add
add
dec
repnz
add
adc
add
inc
or
adc
jb
push
xchg
add
leave
add
cmp
add
mov
adc
jp
and
lahf
aas
inc
dec
and
pop
leave
data16
adc
push
or
leave
xchg
add
xchg
add
pop
leave
xor
push
xchg
mov
and
ret
jb
je
das
or
dec
inc
ja
sbb
lods
adc
pop
ja
lods
sahf
dec
sbb
dec
or
cmp
aaa
xor
adc
pushf
inc
arpl
test
loope
je
and
loop
cmp
repnz
add
and
cwde
scas
jle
shl
adc
pop
add
(bad)
push
mov
add
xchg
es
add
jo
sub
dec
test
(bad)
ja
xor
and
or
jbe
mov
lock
mov
push
call
add
jmp
cwde
pop
ja
into
in
add
push
mov
sub
mov
cwde
inc
jb
je
pop
imul
(bad)
adc
dec
fild
jmp
enter
fnsave
add
sbb
int3
inc
inc
sar
adc
stc
sub
mov
jmp
(bad)
out
or
add
adc
push
stc
int3
test
push
pop
cmp
mov
(bad)
je
dec
mov
cmp
fcomp
xor
(bad)
imul
lahf
test
cmps
nop
daa
test
add
imul
mov
fisttp
mov
outs
jge
mov
pop
add
push
push
fucomip
dec
inc
mov
jae
push
je
jecxz
leave
and
pop
(bad)
or
lds
icebp
push
sub
clc
mov
push
ja
and
sub
jbe
imul
test
or
sub
nop
push
test
fidiv
and
cmps
mov
out
push
add
add
cmps
stc
popa
sub
sub
and
loopne
rol
nop
cdq
sub
test
frstor
add
es
gs
push
int3
adc
rcl
lea
push
adc
sar
shl
cwde
fbstp
sub
pusha
dec
push
mov
loopne
push
or
sbb
inc
call
loope
clc
shr
and
push
jne
xor
sbb
shl
ret
jne
sbb
pop
sbb
in
movs
add
inc
mov
int3
sub
jno
jl
sbb
fadd
add
enter
popa
lock
adc
cs
mov
shl
mov
pusha
iret
rcl
pop
pusha
jo
js
cmp
or
inc
sbb
and
add
dec
adc
jno
loopne
or
jg
adc
mov
rcr
or
sbb
adc
push
cli
add
xor
lds
pop
adc
adc
jecxz
push
pop
add
repz
loop
mov
test
jo
add
mov
std
or
iret
cmp
sahf
sti
mov
or
sbb
add
jns
fst
push
add
push
loopne
add
dec
sbb
js
add
cmp
ja
or
rcl
sbb
inc
jmp
sub
mov
sub
push
rcl
scas
mov
arpl
jo
scas
sbb
sub
xor
sbb
add
mov
enter
inc
pop
pop
ret
sbb
sub
sbb
fdiv
cmp
jmp
iret
mov
lea
mov
dec
jbe
push
cmp
vcvtps2dq
fnstcw
inc
jb
rcl
sbb
cmp
lods
xchg
mov
mov
dec
aam
in
adc
mov
loopne
test
or
mov
xchg
test
mov
les
add
mov
xchg
or
clc
fiadd
and
out
and
inc
sbb
sub
xor
in
mov
mov
nop
mov
pop
loopne
sbb
je
mov
xor
push
mov
cld
scas
je
inc
jns
and
sbb
xor
retf
jp
cmp
xchg
or
push
outs
jmp
xchg
jnp
add
xlat
dec
mov
cmp
clc
ja
sbb
mov
push
or
mov
inc
add
std
inc
fs
or
push
lods
aam
outs
push
push
test
xor
pop
fs
add
push
les
pop
or
pop
clc
pop
int3
push
pusha
in
xchg
shr
aam
jg
and
sbb
shr
daa
and
xchg
xchg
icebp
jns
or
loopne
imul
mov
add
fld
fmul
call
pop
inc
lods
fsub
lods
out
mov
sub
ret
xor
push
lahf
pushf
shl
or
popf
and
adc
arpl
fsubr
add
adc
ins
into
mov
mov
dec
ror
popa
dec
sub
push
cs
push
mov
sbb
add
add
repz
inc
jle
and
adc
rcl
test
pop
cmp
fisttp
std
adc
loopne
inc
cmp
add
cmp
adc
jnp
mov
lea
rcl
ja
in
sub
cmp
out
cmp
rcl
dec
mov
push
loopne
mov
and
inc
dec
add
sar
mov
cmp
mov
mov
outs
cld
data16
iret
mov
sahf
jmp
or
popa
or
setbe
mov
xchg
pop
and
push
inc
mov
adc
xchg
(bad)
shr
xlat
add
dec
inc
sbb
icebp
call
push
retf
or
gs
fistp
repnz
and
arpl
sbb
dec
(bad)
std
iret
pop
std
dec
std
cmp
jno
stos
std
cli
pop
push
push
add
mov
lea
sub
outs
sbb
mov
mov
jae
je
mov
xor
fistp
(bad)
outs
push
or
add
inc
push
pop
dec
mov
or
pop
mov
fstp
std
test
inc
add
je
lds
aam
and
or
and
add
imul
call
jo
into
shl
add
data16
jmp
aaa
jmp
loopne
cmps
shr
xor
pop
jo
add
xor
je
jmp
(bad)
jns
xchg
das
cli
icebp
loopne
loopne
ds
push
jb
mov
fild
mov
and
mov
xchg
xchg
scas
push
mov
xchg
sbb
frstor
jmp
stos
mov
xor
nop
adc
inc
push
shl
inc
mov
mov
push
pop
test
fimul
cmps
ror
push
cli
jo
cmp
cmc
stc
and
cmp
pushw
sub
sbb
out
shl
pop
movs
retf
cld
adc
outs
sbb
pop
mov
push
add
jo
dec
call
sub
mov
push
imul
je
bound
ret
and
mov
retf
inc
aaa
and
sub
pop
adc
xlat
bound
aad
adc
xor
adc
add
add
or
cwde
or
shr
mov
test
ret
sbb
push
inc
jmp
or
adc
les
cmps
pop
push
inc
addr16
mov
test
das
(bad)
enter
xchg
or
hlt
adc
pop
add
push
lock
mov
fsubr
ret
pop
mov
pop
pop
fcomi
pop
repnz
daa
shl
jns
idiv
div
mov
neg
inc
adc
push
or
xor
loope
dec
adc
push
ror
dec
div
cmp
add
inc
push
mov
stos
push
or
or
cmp
lahf
mov
mov
cmc
mov
or
push
push
jae
or
cmp
or
cmp
add
sub
push
ins
inc
rol
rol
sub
je
popa
icebp
out
add
sub
push
mov
or
daa
xchg
jg
test
ds
hlt
test
mov
out
(bad)
out
and
aad
cmps
imul
jo
dec
or
add
jns
push
jns
rep
cs
(bad)
sbb
sar
inc
es
(bad)
fld
pop
(bad)
or
popf
pop
sbb
dec
push
imul
pop
out
push
xlat
or
jg
bnd
sbb
xcrypt-cbc
cmps
push
xor
sub
jmp
add
pop
in
push
icebp
aam
push
adc
lock
dec
popa
and
inc
aam
and
(bad)
jmp
loopne
repnz
in
(bad)
(bad)
sti
jmp
(bad)
enter
call
cmp
dec
adc
stos
add
sub
inc
push
(bad)
push
and
cld
(bad)
(bad)
jmp
sub
pop
dec
xchg
imul
jmp
popf
push
add
and
inc
xchg
pop
enter
mov
in
lock
mov
fcom
shr
out
mov
xchg
mov
je
and
mov
push
pop
jmp
daa
add
and
enter
jmp
jmp
mul
mov
outs
pop
jge
pop
je
xchg
pmulhuw
test
mov
fwait
aaa
out
xchg
cld
ror
out
add
in
mov
or
std
add
mov
sub
fsub
xor
jmp
cmp
sub
iret
jl
das
jmp
sub
adc
sbb
les
test
cmp
(bad)
adc
or
std
jmp
mov
sbb
(bad)
call
mov
in
in
add
in
cs
sahf
int
daa
adc
test
and
in
call
out
jae
cmp
cwde
fiadd
(bad)
out
test
dec
inc
push
scas
mov
mov
out
cmp
and
push
loopne
dec
mov
jmp
pushf
mov
jnp
pushf
stc
jmp
out
repnz
hlt
add
cdq
mov
add
(bad)
mov
cld
hlt
sbb
adc
in
xchg
retf
daa
out
stos
add
and
cpuid
add
stc
dec
push
adc
div
(bad)
jmp
mov
xor
clc
mov
pop
jnp
xchg
jmp
pop
inc
ja
iret
int
cmp
pop
sub
je
rcr
mov
in
pop
outs
out
inc
xchg
ja
mov
cmp
pop
jge
imul
ss
ins
repnz
test
test
bound
xor
mov
mov
call
and
cmp
push
int
imul
sahf
mov
ins
iret
repz
sahf
cli
cdq
cmps
or
int
repz
lahf
inc
mov
out
add
test
out
test
addr16
rcr
imul
loop
xchg
adc
cmp
sar
jnp
es
in
sar
dec
sbb
das
retf
push
adc
jb
jmp
data16
cmp
and
push
adc
imul
iret
sar
(bad)
lock
ss
xchg
imul
push
add
inc
jnp
or
mov
icebp
xor
(bad)
dec
adc
sbb
add
sbb
and
and
in
stc
and
sub
sub
xor
xor
xor
fnsave
cmp
cmp
cmp
inc
inc
inc
xchg
out
loopne
inc
inc
inc
inc
inc
dec
add
nop
sar
adc
mov
pop
pushf
outs
xchg
dec
mov
mov
ret
cmps
stc
cmp
adc
in
fwait
int
int
stos
xchg
inc
stos
cmps
stos
lods
cmps
fldcw
scas
cmpxchg
mov
(bad)
jl
lahf
fist
mov
stc
xchg
cmps
jge
ins
jle
mov
push
add
jl
xchg
(bad)
mov
fstp
push
xchg
outs
jo
int
mov
add
xchg
sahf
mov
jae
ins
ss
ret
mov
mov
sti
es
aas
mov
enter
fldcw
leave
ins
mov
fdiv
(bad)
jg
push
clc
call
outs
mov
sahf
out
pusha
jbe
cmps
mov
jg
out
mov
ds
stos
jmp
jns
lahf
scas
mov
cmps
sbb
push
cmp
push
lds
es
pop
test
push
push
or
sbb
cmp
and
push
mov
jno
dec
fdiv
popa
inc
dec
mov
std
or
mov
cmp
mov
and
xor
adc
nop
inc
outs
popa
add
or
and
sub
outs
fucom
xchg
cmp
cli
inc
sbb
(bad)
adc
or
rcl
xchg
ret
add
iret
xchg
mov
idiv
xchg
push
gs
pusha
inc
sub
mov
mov
test
jo
adc
je
and
push
or
call
dec
sbb
mov
mov
push
or
mov
cmp
add
fwait
and
mov
add
test
dec
adc
cmp
push
iret
xor
clc
adc
pusha
jne
scas
push
jmp
push
scas
push
(bad)
xor
fs
cmp
jbe
sbb
loopne
arpl
ficomp
mov
push
(bad)
in
test
mov
and
pop
jne
xchg
(bad)
adc
push
mov
and
shl
or
push
and
push
jp
inc
test
sub
pop
je
cmp
repz
int
or
je
sbb
jmp
cmp
jne
test
rol
jmp
pusha
push
sub
push
jl
test
dec
pop
cli
cmp
dec
push
out
or
pop
ret
int
nop
pop
add
test
stc
add
cmps
jmp
fdiv
rol
dec
sar
jno
inc
xor
stc
cmp
stc
mov
adc
xor
je
cmp
mov
push
add
je
test
jne
cdq
outs
dec
mov
and
mov
adc
push
mov
mov
enter
sub
sbb
int3
xchg
push
cld
nop
cmc
or
xchg
or
add
imul
cmp
sub
dec
or
dec
mov
mov
mov
or
pop
dec
ja
xor
mov
std
inc
(bad)
out
mov
mov
push
lea
add
fsub
jmp
pop
pop
mov
inc
ins
loope
mov
sbb
fiadd
cmp
sbb
jmp
pop
pop
xchg
push
sub
mov
clc
neg
int
adc
inc
jle
movups
pusha
and
add
aam
push
jp
adc
push
sub
and
or
and
mov
add
dec
add
je
adc
xor
sub
scas
and
cdq
mov
pop
hlt
jmp
ret
fidiv
jecxz
leave
sbb
mov
add
test
jecxz
shl
shl
mov
ret
jl
jne
jne
and
aas
pop
pop
(bad)
ret
arpl
xchg
dec
call
add
add
add
test
mov
loope
add
push
xchg
leave
popa
fwait
rcr
fldcw
daa
dec
test
mov
pop
test
ret
cmp
xor
inc
out
adc
mov
cmp
push
popa
push
scas
div
imul
push
dec
movs
aam
sub
cmp
adc
push
push
adc
test
pop
inc
mov
cli
add
add
inc
cli
outs
sbb
xchg
mov
sbb
(bad)
call
or
xchg
xchg
sub
jb
pop
mov
ja
jo
xor
sub
add
or
daa
popa
inc
jmp
push
neg
fwait
pop
add
push
imul
inc
ds
sub
test
push
jb
add
ins
mov
sub
xor
ins
adc
and
pop
nop
or
gs
add
retf
xchg
add
xchg
ficom
pop
test
inc
gs
pop
or
(bad)
loopne
retf
xor
adc
push
add
push
xor
icebp
clc
jge
in
adc
inc
mov
sbb
pop
shr
or
or
and
cwde
test
adc
cmp
xchg
and
pop
push
jg
add
mov
dec
dec
xchg
add
and
xor
(bad)
and
or
add
adc
and
fdivr
mov
jecxz
ins
fdivr
in
mov
bound
fwait
mov
adc
movs
xchg
jl
push
sahf
dec
cmc
push
pop
jg
mov
mov
(bad)
jp
jp
mov
stos
mov
pop
pop
or
lods
xor
ds
lahf
pusha
jg
je
adc
jl
push
or
dec
sahf
in
jle
pusha
das
and
daa
mov
mov
jl
jle
inc
adc
shl
sub
cmp
movs
or
lods
add
jb
fs
mov
mov
pop
jmp
cmp
dec
sbb
sbb
call
inc
jno
jmp
pop
neg
lea
fchs
add
les
iret
mov
(bad)
push
clc
jmp
in
mov
xor
jo
dec
mov
push
jnp
mov
push
and
or
inc
inc
and
dec
xor
xor
and
cld
cld
std
add
in
add
jg
jg
pop
inc
sti
mov
rcl
retf
leave
xchg
push
jg
je
sub
les
idiv
cmps
sub
and
inc
adc
aad
inc
cmp
cmp
xchg
dec
inc
adc
stc
sti
cs
test
jmp
fnstenv
fsubrp
dec
aad
cs
sbb
aad
push
clc
mov
xor
sti
rcl
stos
cmc
jmp
mov
movs
xchg
inc
(bad)
cmp
mov
xchg
ins
jge
dec
mov
in
in
dec
push
pop
lahf
and
gs
ficom
cmp
push
sub
and
loope
aam
jp
jbe
cmovs
push
xor
sbb
dec
add
scas
loop
lea
jge
mov
cmp
out
iret
mov
mov
mov
push
lock
das
stc
adc
out
or
ss
imul
xchg
mov
or
push
pop
pop
push
push
or
and
int3
cmp
ds
iret
repz
xchg
test
repnz
repz
ds
cli
xchg
or
repz
jle
or
mov
nop
outs
add
cmp
xlat
mov
cmp
or
jl
push
adc
pusha
or
retf
dec
loope
mov
jmp
push
and
bnd
call
loopne
add
push
mov
and
test
xor
nop
cs
mov
aaa
lea
sar
mov
push
sbb
add
and
mulps
pop
cmp
mov
mov
sub
das
dec
add
(bad)
cmp
add
mov
lods
jbe
sbb
push
into
jmp
mov
fistp
scas
jecxz
adc
rcr
fidiv
push
jne
push
jle
push
out
cli
add
cmps
adc
or
mov
mov
ins
nop
pop
xchg
mov
dec
in
iret
adc
test
clc
cmp
jno
pop
rcl
add
test
inc
loop
lahf
lea
sub
ficom
ja
inc
mov
mov
stos
mov
clc
inc
and
add
inc
test
mov
sbb
xchg
mov
repz
into
inc
or
or
hlt
adc
cli
mov
add
mov
sub
icebp
jo
rcr
fidivr
mov
pop
dec
cmps
jb
push
mov
test
and
mov
ret
repnz
ret
add
xor
je
popa
adc
xchg
inc
dec
push
movs
loope
daa
or
mov
mov
pop
retf
jmp
push
push
cmp
fidiv
pop
fninit
in
inc
mov
dec
sbb
ds
cmps
std
jns
nop
scas
std
and
int3
push
cmc
repz
out
(bad)
jl
fld
jb
cmp
push
sub
pop
fwait
or
add
cmp
or
cmp
test
push
or
sub
fild
add
or
call
fistp
xlat
gs
push
ret
dec
and
adc
push
adc
add
push
imul
dec
pop
xor
dec
inc
jmp
xchg
or
das
sbb
pop
and
dec
aad
aam
mov
mov
sbb
xor
out
push
jo
dec
xchg
mov
push
jl
add
sub
xor
push
add
ffree
jb
sti
or
cdq
xchg
push
test
dec
xor
int
mov
add
add
add
jge
sub
(bad)
mov
sub
cmp
inc
or
xor
ret
sbb
mov
add
fst
sub
add
fist
mov
add
push
dec
fwait
mov
fwait
nop
and
dec
in
js
jle
mov
ins
test
ret
push
add
push
mov
call
ret
push
inc
clc
cli
add
test
inc
xchg
sub
mov
add
push
mov
pop
lds
cmp
je
mov
sbb
ud0
jp
push
push
cmp
into
push
push
push
sbb
and
jae
and
sub
pop
enter
int
push
adc
inc
mov
xchg
sub
and
push
(bad)
and
sub
jmp
or
iret
movs
sbb
adc
adc
adc
sti
outs
movs
jle
push
pusha
in
sbb
add
loopne
inc
add
fiadd
mov
imul
cwde
cs
add
push
xchg
mov
push
ss
neg
test
or
or
imul
mov
xor
imul
push
movs
adc
lock
push
je
sbb
mov
mov
xor
xor
pop
and
jle
ret
sbb
cmp
sub
pop
adc
sub
pop
hlt
popa
add
and
push
add
mov
into
enter
or
dec
data16
jno
inc
add
sub
cli
cdq
ins
mov
sub
ret
clc
out
fucom
adc
dec
adc
mov
test
push
jle
loop
or
dec
fs
or
push
add
das
push
scas
mov
retf
sub
add
add
mov
pop
loop
adc
hlt
pop
sub
push
dec
jb
push
fisub
jno
test
rol
mov
clc
sub
pop
mov
(bad)
sbb
clc
push
sub
push
mov
mov
and
push
jle
dec
shl
add
xchg
ds
inc
les
cdq
push
in
imul
sahf
inc
push
cmp
add
mov
inc
cmp
cmp
(bad)
sub
jne
aam
adc
out
iret
not
cmp
je
ret
jno
push
cmp
xchg
shl
push
sub
dec
jmp
adc
add
aad
retf
mov
aad
lock
or
add
adc
adc
lods
test
push
jno
sub
pop
cmp
add
test
add
jns
js
mov
jmp
mov
stos
movs
dec
in
test
mov
sub
jnp
dec
icebp
hlt
inc
dec
inc
and
lock
mov
fs
add
xchg
adc
cs
mov
inc
dec
stos
mov
enter
fist
rcr
inc
js
jo
jmp
xor
mov
mov
imul
pop
add
out
(bad)
mov
mov
cmp
xchg
nop
mov
or
cli
mov
adc
adc
push
xchg
and
add
test
dec
sbb
loopne
add
jl
pop
xor
cmp
sub
jns
fstp
bound
add
je
ja
imul
mov
add
inc
adc
xchg
jge
aas
ror
(bad)
adc
mov
pop
mov
adc
push
(bad)
and
and
pusha
or
push
cmp
xchg
and
int3
jg
and
sub
mov
dec
jbe
cmp
mov
jmp
jmp
hlt
adc
cmp
imul
cli
inc
ror
in
je
add
sbb
dec
sbb
and
jle
pop
add
and
in
push
nop
mov
outs
cmp
push
cmp
push
loopne
test
mov
inc
adc
mov
fldenv
add
inc
mov
jge
scas
pusha
xchg
or
test
fdivr
push
clc
dec
inc
fistp
cmp
je
xchg
or
push
pop
cli
or
mov
mov
and
sbb
pop
mov
mov
push
je
and
pusha
or
cmp
or
pop
push
movs
dec
lods
fld
add
ins
and
fimul
xor
and
jne
cmp
add
lods
scas
mov
mov
push
sub
or
xchg
mov
ss
lock
xlat
rcl
sbb
lds
and
cs
loopne
push
adc
cmp
stos
dec
cmp
push
mov
stc
adc
jge
retf
push
pop
adc
cli
adc
or
rcl
test
adc
pushf
adc
xor
adc
jp
pop
mov
imul
gs
lock
push
jmp
push
out
movs
cmc
add
ret
dec
sub
fsub
sbb
add
mov
sbb
jl
cmc
or
mov
xchg
movs
fild
jne
and
and
dec
dec
jge
inc
sbb
pop
mov
clc
jg
nop
jg
mov
and
jg
jno
mov
dec
fdiv
jg
nop
push
and
cmp
add
arpl
pop
outs
icebp
add
mov
fild
jne
loope
sbb
cmovge
mov
push
jnp
xor
jg
fwait
hlt
aaa
sbb
movs
shl
lock
imul
push
pop
add
inc
ins
mov
pusha
shr
pop
cmp
push
inc
push
sti
add
rcr
inc
push
jge
sub
pop
push
iret
xor
sub
mov
lock
jp
cmp
add
cmp
mov
call
pop
add
(bad)
push
and
jmp
inc
xor
imul
sub
shr
add
jle
push
call
push
scas
inc
push
sbb
jbe
push
xchg
mov
xor
sbb
loop
mov
cmp
mov
lock
mov
test
mov
or
fbstp
jne
movzx
adc
loope
fistp
jae
inc
sub
inc
ret
rcl
cmp
sub
dec
cmp
adc
adc
ret
imul
iret
shr
(bad)
push
bound
push
aad
sbb
xor
jbe
(bad)
rol
push
outs
push
jo
mov
or
inc
add
clc
loop
pop
push
es
loopne
sub
fsubr
mov
mov
and
(bad)
(bad)
adc
in
pop
ret
(bad)
jmp
inc
dec
jmp
adc
sub
jp
stos
xchg
sub
add
shl
enter
cmp
ss
imul
xchg
mov
jmp
lock
jl
cmp
pop
add
mov
xor
sbb
add
cmc
adc
push
fdivr
push
sub
jle
pop
inc
add
pusha
aas
pusha
mov
or
push
push
mov
cmp
pop
cli
push
xor
xchg
xchg
jae
dec
xchg
jnp
sub
cmp
lods
dec
and
sub
push
xacquire
mov
int3
adc
out
push
dec
lock
sub
out
imul
push
pop
jp
into
repz
mov
push
or
add
add
xchg
or
add
sub
push
dec
daa
movs
mov
or
lds
ins
mov
add
clc
xchg
movs
mov
xor
or
mov
dec
cmp
imul
cmc
sar
dec
add
inc
dec
fadd
and
fs
and
dec
loopne
sub
inc
dec
(bad)
retf
scas
xor
dec
fs
repnz
sbb
aas
fist
dec
lods
rcl
dec
lock
sbb
and
clc
into
jmp
adc
inc
dec
xchg
rol
loopne
adc
inc
ins
(bad)
(bad)
or
xchg
dec
dec
sub
pop
stos
imul
dec
jmp
movs
or
push
leave
push
mov
rol
and
je
xchg
dec
mov
inc
adc
daa
mov
mov
sub
jle
test
xor
add
lods
fidiv
mov
dec
test
rcl
adc
xchg
or
push
push
mov
mov
adc
pop
xlat
mov
jmp
mov
dec
cmc
addr16
cmp
pop
or
add
cmp
inc
mov
out
dec
call
dec
xor
adc
test
push
stc
pop
je
daa
je
fst
mov
ret
sbb
xor
(bad)
xor
add
lods
xlat
inc
js
push
or
cld
mov
dec
xor
push
mov
test
call
sub
xchg
mov
test
test
mov
mov
mov
std
cmp
sbb
maxps
adc
inc
xchg
mov
mov
shl
jne
jecxz
dec
jmp
fs
dec
es
(bad)
xor
(bad)
and
or
daa
mov
scas
movs
xchg
adc
into
hlt
pop
sbb
ret
test
sub
cmp
fbld
add
inc
cmp
jl
xchg
retf
ret
xchg
loopne
gs
stos
jae
mov
lahf
call
sbb
push
pop
fnsave
cmp
sbb
mov
ins
clc
jmp
jo
cwde
in
fadd
adc
adc
adc
lahf
xor
test
push
and
or
push
dec
adc
or
xchg
inc
xchg
sub
inc
fst
xchg
mov
test
inc
inc
jnp
and
cs
or
lahf
ja
jl
call
push
sub
ja
fisubr
sub
cmp
je
push
sti
pop
dec
or
push
shl
push
lea
adc
and
cmps
cmp
es
(bad)
jne
sahf
mov
stos
rol
pop
or
push
push
mov
movs
stc
jle
xor
add
push
push
pop
jnp
ins
sub
xor
sbb
pop
imul
add
loop
pop
cmps
jae
push
add
bound
rol
sbb
sub
or
xchg
movs
out
and
mov
movs
dec
ret
push
adc
xchg
mov
pop
mov
dec
adc
jns
mov
dec
shl
cmp
adc
and
mov
mov
adc
and
mov
xchg
sbb
mov
and
mov
or
push
sar
add
xchg
movs
pop
stos
sub
cmp
push
mov
in
xor
mov
hlt
and
push
lock
inc
fcmovb
stos
mov
test
sub
xchg
cwde
repz
nop
jmp
adc
mov
cmp
sar
mov
adc
ss
ret
mov
pusha
mov
pop
sbb
stos
cmp
adc
or
push
out
pushf
out
add
xor
(bad)
and
addr16
ficomp
int
push
xlat
sub
xchg
xor
push
cmp
mov
xor
ds
cmp
dec
imul
xchg
add
pop
sbb
rol
mov
nop/reserved
push
sbb
mov
outs
ret
push
loopne
xchg
fs
mov
fwait
mov
push
mov
inc
xchg
cld
lods
and
jl
jp
inc
add
add
sbb
inc
sbb
add
add
jo
ror
pop
call
gs
jg
add
sbb
add
lock
ror
push
jmp
shl
sbb
fidivr
xchg
and
push
mov
inc
loop
xor
test
cdq
call
call
add
outs
pop
and
aam
lods
sbb
jl
or
push
movs
lea
or
dec
add
cdq
repnz
fist
test
add
jne
mov
stos
shl
ss
mov
enter
xor
or
imul
mov
(bad)
ret
sub
or
mov
jne
inc
jmp
push
dec
jne
dec
jns
cmp
jb
xchg
adc
add
push
add
fld
ja
pop
jmp
call
rcl
scas
bound
inc
bound
mov
sub
scas
sub
ja
repz
psubw
dec
dec
push
enter
ror
popa
xor
jno
out
or
ds
or
mov
xchg
and
push
xchg
(bad)
stc
dec
adc
xchg
and
and
hlt
adc
sbb
fnop
mov
lock
sbb
push
adc
mov
or
or
push
push
sbb
sub
push
mov
pop
xchg
pop
adc
inc
pop
jb
pand
rol
dec
inc
or
jb
mov
dec
dec
test
sub
shl
add
in
pop
or
loop
cmp
and
stos
adc
sbb
mov
dec
dec
mov
inc
sbb
cwde
or
add
add
jnp
pop
sbb
loope
mov
mov
loop
jle
or
lahf
mov
push
pop
mov
outs
push
repz
imul
(bad)
in
jge
fdivp
stc
push
xor
loopne
ds
xchg
adc
push
das
xchg
test
adc
add
mov
sbb
sbb
icebp
push
xor
sub
ror
add
sub
push
ret
mov
iret
enter
jp
add
inc
imul
adc
push
cmps
or
xchg
ins
cld
adc
dec
add
movs
add
mov
push
shr
or
es
add
dec
mov
mov
or
lods
repnz
push
test
add
add
inc
add
xchg
dec
rol
loope
imul
cmps
(bad)
cmp
pop
and
loopne
fbstp
jmp
icebp
push
sbb
add
outs
inc
sbb
out
mov
jne
pop
mov
sbb
adc
add
sbb
into
mov
add
xor
xor
test
cdq
push
js
daa
sbb
jns
loope
mov
das
push
or
and
mov
in
in
sub
ror
neg
lods
pop
out
pop
pop
push
sub
add
or
lsl
mov
push
or
sub
sbb
aaa
adc
push
push
mov
xor
(bad)
jno
arpl
cmc
pop
retf
dec
mov
push
push
pop
popa
scas
adc
dec
inc
add
bound
cmp
xchg
fldenv
mov
mov
fld
or
push
xchg
shl
sbb
sbb
mov
push
out
push
and
cmp
vcvttss2si
loope
adc
dec
cmps
inc
xor
push
mov
add
sbb
pop
add
mov
rcr
push
push
inc
pop
add
test
adc
or
xor
adc
aas
adc
inc
aad
jo
inc
lea
adc
cli
aaa
cdq
lea
lea
mov
or
inc
dec
add
jmp
inc
sub
lock
rcr
lea
push
nop
xor
xchg
push
inc
mov
adc
xchg
dec
pop
pop
and
mov
ret
imul
and
test
stos
push
jmp
push
add
jmp
push
loop
jmp
cmp
sub
xor
xor
cmp
sub
add
sahf
sbb
stos
lock
pop
mov
push
cmovo
cmp
xor
adc
dec
sub
adc
xchg
dec
daa
sbb
mov
push
or
stos
and
xor
js
xor
jb
and
adc
loopne
pop
and
mov
stos
loope
lods
xchg
jp
and
push
add
adc
mov
dec
jge
lock
add
push
scas
add
dec
add
inc
cmp
adc
and
push
xor
adc
or
movs
fsubr
fisubr
(bad)
mov
and
es
fdiv
push
jmp
(bad)
jmp
adc
and
shl
sub
and
mov
mov
je
sahf
mov
add
lea
push
mov
and
cs
pusha
mov
mov
and
add
add
shl
jmp
mov
ds
or
stos
push
jg
add
iret
add
inc
jae
push
pop
add
inc
dec
pop
adc
jle
sub
dec
jge
daa
xor
ret
je
sub
ds
mov
mov
dec
jge
(bad)
adc
cmp
(bad)
add
pop
adc
shl
and
arpl
or
push
adc
test
sub
fs
dec
addr16
cmp
iret
xchg
ins
movs
cs
jmp
add
dec
test
mul
xchg
jnp
or
sti
jge
adc
mov
ret
push
add
loopne
and
sub
and
sbb
xchg
out
or
daa
jnp
cdq
push
dec
or
shl
xchg
add
push
push
ins
push
xor
sbb
xchg
mov
add
mov
jmp
or
dec
and
xchg
jmp
pop
and
or
mov
scas
ja
mov
lods
or
sbb
pop
adc
inc
push
or
adc
add
pop
sub
add
adc
pop
sar
inc
pop
or
bound
jnp
lods
jmp
mov
movs
lea
jle
ss
ins
xchg
aaa
cmp
jg
jo
jne
pop
and
dec
neg
pop
cmps
sbb
mov
push
and
sub
add
mov
sbb
ss
ja
mov
jb
mov
xor
imul
cmp
xchg
sub
call
sub
mov
add
cmp
push
or
js
int
mov
xchg
sbb
mov
fstp
dec
jne
mov
inc
cmp
or
xchg
aaa
xlat
sar
add
movs
inc
pop
bound
mov
pop
pop
dec
cmp
jne
mov
xor
adc
clc
sbb
mov
or
sbb
pop
stos
dec
jl
call
push
add
cmp
mov
stos
push
(bad)
fmul
inc
inc
or
dec
jae
int3
sbb
pop
inc
into
xchg
iret
sbb
shl
ins
dec
imul
dec
add
adc
or
fimul
pop
mov
push
push
sbb
lahf
call
inc
jae
push
sar
sbb
cmp
jl
jae
inc
ja
mov
xchg
cmp
pop
pop
sub
xlat
and
or
mov
add
(bad)
or
xchg
xchg
pop
pop
sbb
rcr
sub
mov
mov
aam
xchg
js
imul
cdq
stos
dec
sahf
mov
xor
mov
xchg
jle
push
mov
sub
jge
jmp
dec
lahf
jmp
fistp
ret
dec
pusha
jecxz
jecxz
ds
and
outs
pusha
cld
mov
and
mov
ds
shr
xor
jl
ret
xor
dec
mov
into
mov
les
aaa
js
sub
jne
or
inc
cs
loop
ret
imul
loop
jmp
pop
xor
shr
pop
push
push
test
fld
push
loope
hlt
inc
stos
movs
icebp
xchg
das
dec
sub
mov
and
inc
arpl
fs
pusha
invd
xchg
mov
das
inc
pop
add
test
dec
mov
cs
ins
mov
cmp
je
mov
sbb
jl
ins
and
add
cmp
sub
xor
jmp
xchg
xchg
leave
in
in
jae
cmps
punpckldq
xchg
into
mov
or
cmps
je
add
pop
jns
jle
div
or
push
fidivr
cdq
adc
cmps
ret
jns
and
add
add
shl
mov
sub
sbb
in
lock
fadd
leave
and
outs
mov
aad
jl
jg
mov
stc
push
push
adc
mov
js
adc
es
mov
cmp
xor
xchg
rol
cmp
jmp
out
or
xchg
inc
add
jbe
inc
sub
push
(bad)
neg
jo
stos
cmp
and
out
push
sbb
cs
jbe
xlat
jns
dec
mov
test
in
retf
dec
jae
scas
(bad)
outs
jmp
mov
pop
add
add
push
jne
sub
or
pop
ss
xor
test
ret
jne
adc
jb
xchg
push
push
std
lds
stc
cmp
xor
add
in
add
mov
add
mov
or
or
sbb
test
cmp
sub
push
sub
int
test
xor
dec
push
mov
push
or
push
and
mov
and
dec
mov
test
jmp
aaa
in
cmp
pop
and
cld
mov
xor
fwait
mov
sbb
nop
xchg
push
jno
add
test
jo
mov
lea
xchg
mov
inc
sbb
lods
jb
dec
dec
jecxz
and
and
add
mov
fcmovb
cmovp
(bad)
cmps
(bad)
out
push
test
xor
fidiv
mov
add
aas
inc
sbb
mov
lock
xor
pop
xchg
test
pop
mov
add
and
add
addr16
ds
sub
inc
enter
jmp
push
jmp
dec
adc
push
push
inc
nop
mov
out
cmp
push
cdq
add
xchg
mov
adc
test
adc
add
adc
inc
sti
xor
pusha
jo
add
lea
sub
jp
mov
xor
ret
loopne
sub
aaa
add
jb
mov
test
sub
ins
xchg
cs
pop
mov
pop
les
pop
cmps
or
outs
pop
jne
sbb
sbb
test
add
dec
daa
mov
sub
dec
push
pop
adc
dec
fld
push
push
pop
and
cmp
bound
adc
or
test
or
push
popf
dec
add
cmp
and
arpl
jnp
mov
and
sbb
and
push
ror
jno
in
test
inc
sub
adc
xchg
retf
sbb
sbb
xchg
cs
or
cmp
mov
add
in
adc
fsubr
or
and
lea
push
and
mov
or
xor
add
pop
push
les
sub
sbb
pop
nop
and
sub
add
ficom
data16
mov
add
add
cli
aaa
push
inc
fcom
jo
push
lock
popf
and
fs
sbb
(bad)
in
mov
iret
lock
mov
mov
mov
adc
dec
or
inc
adc
jecxz
and
dec
jl
cmps
push
out
add
add
add
lahf
ret
add
add
data16
push
lock
sub
inc
add
push
sub
(bad)
add
or
or
es
call
nop
sbb
test
inc
xor
and
push
add
jmp
mov
(bad)
cmp
sbb
push
sbb
mov
shl
dec
cmp
outs
sbb
jecxz
mov
jno
retf
sbb
fdivr
sahf
cld
or
sbb
cli
adc
mov
xchg
stos
mov
jb
cmp
push
push
pop
sahf
ja
push
xor
add
xor
sub
mov
sahf
mov
and
xchg
sbb
scas
push
push
pop
lds
mov
and
sbb
pop
loop
and
adc
mov
aam
push
hlt
xchg
movs
add
out
cdq
dec
fisttp
add
pop
pusha
sub
adc
adc
sti
dec
movs
outs
les
mov
sti
cmp
mov
sbb
push
adc
adc
cmp
ss
iret
cmp
add
xchg
or
mov
add
xchg
fcom
bound
xchg
mov
call
pop
or
movs
test
repz
inc
cmc
adc
mov
xchg
sub
sbb
push
mov
and
test
xchg
int3
cmp
dec
sbb
data16
jmp
dec
repnz
mov
add
push
(bad)
call
(bad)
add
mov
dec
dec
sar
add
sub
add
movs
test
call
inc
call
mov
enter
ins
into
fnsave
cmp
and
(bad)
sub
(bad)
cli
sbb
call
push
(bad)
dec
fdivr
push
xor
je
fistp
ret
cld
push
and
or
movs
out
sub
mov
dec
outs
add
stc
mov
cmp
popa
xchg
mov
(bad)
push
ss
inc
jno
inc
out
test
and
mov
xor
jo
lahf
mov
jmp
aam
mov
jne
sbb
push
push
popa
leave
je
sub
pcmpeqd
mov
call
pop
fcom
or
pop
adc
popf
xor
pop
test
dec
dec
call
loope
outs
sub
xchg
movs
shr
jmp
or
ret
adc
shr
or
rol
add
xor
jno
mov
cmove
les
out
xlat
or
loope
loop
clc
xor
pushf
add
xchg
aad
ret
mov
sub
xor
add
mov
adc
mov
stos
scas
ret
or
data16
pop
jle
rol
and
xchg
(bad)
and
sub
mov
inc
test
fadd
dec
sbb
mov
push
adc
(bad)
cmp
push
lahf
outs
stos
sbb
inc
pop
add
adc
sbb
xlat
sub
into
jb
leave
test
sahf
or
xor
fcom
cmp
pop
and
mov
sar
push
or
dec
pop
inc
pop
dec
inc
or
inc
push
inc
fld
mov
mov
and
je
hlt
sbb
xor
inc
cmp
dec
loope
sahf
add
push
and
push
add
out
(bad)
or
add
push
pop
push
xor
inc
mov
mov
addr16
jne
wbinvd
daa
and
lds
(bad)
jmp
add
aaa
cmp
les
add
cmp
xlat
push
popa
jecxz
adc
inc
dec
add
xor
movs
rcl
aam
pop
pop
sub
mov
and
inc
dec
nop
mov
shl
push
or
out
adc
dec
or
mov
add
and
adc
push
test
(bad)
pusha
pusha
lods
pop
stos
sbb
add
adc
add
sar
add
cmp
fisttp
imul
or
rol
stos
movs
test
loop
xchg
ret
inc
test
xor
test
inc
or
push
inc
mov
pusha
fild
and
sub
add
stc
mov
push
inc
jnp
imul
inc
sub
adc
pop
mov
mov
lea
mov
or
mov
xor
and
aas
ds
(bad)
dec
sub
pop
jge
push
mov
inc
sub
(bad)
shl
test
or
jne
fcomp
push
dec
push
lea
outs
(bad)
mov
add
lea
push
mov
mov
je
outs
mov
mov
add
loop
aas
pop
inc
add
sbb
mov
sub
das
or
sub
sub
jnp
jmp
adc
push
push
jge
or
inc
adc
add
or
mov
dec
sbb
cmp
dec
imul
(bad)
js
dec
popf
add
push
jnp
sahf
(bad)
push
inc
dec
or
imul
add
jmp
es
dec
adc
dec
inc
add
ret
ins
repz
push
les
push
jb
ja
test
test
add
(bad)
icebp
loopne
test
arpl
add
mov
outs
rol
cmps
std
loope
add
add
push
add
imul
add
mov
push
adc
mov
mov
js
push
cwde
mov
je
int
jmp
xor
scas
sbb
cmps
imul
cmps
jmp
lea
test
adc
int
es
and
pusha
or
add
neg
xor
mov
push
loope
sbb
xchg
sub
adc
inc
add
inc
retf
and
and
les
xor
push
jmp
and
inc
cmp
movs
and
pop
lea
inc
jecxz
or
inc
out
push
adc
daa
and
aas
sbb
push
mov
repnz
adc
add
into
xor
add
sub
sub
out
mov
fs
xor
sub
es
or
sbb
xchg
or
or
jmp
mov
push
cmps
nop
add
add
and
and
mov
xchg
aad
and
dec
add
add
pop
add
xor
add
add
js
dec
adc
and
mov
push
pop
sbb
inc
mov
xor
sbb
xchg
shl
xor
jp
xor
in
je
sbb
adc
add
push
add
sub
or
js
add
mov
xchg
pusha
mov
test
jne
and
in
mov
ret
pop
cmp
xor
dec
pop
xor
sbb
push
adc
adc
inc
out
dec
pop
push
push
push
loopne
pop
mov
add
mov
idiv
fisttp
xchg
and
mov
dec
jmp
mov
(bad)
(bad)
jg
sub
jl
and
and
je
cmp
je
cmp
je
jmp
sbb
cmp
je
cmp
je
xchg
pop
cmp
je
cmp
je
ins
mov
push
cmp
je
mov
cmp
push
cmp
je
cmp
ins
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
scas
or
fs
sbb
mov
cmp
je
cmp
je
cmp
push
mov
mov
neg
mov
test
jmp
xor
imul
adc
out
inc
add
pop
pop
mov
sbb
adc
ret
add
add
pop
int3
jg
mov
mov
imul
ret
adc
outs
mov
xor
pop
xor
mov
shl
test
sub
dec
add
ret
dec
pop
mov
mov
push
add
das
jge
cmp
pop
add
pop
test
xor
push
neg
dec
pop
inc
and
jb
es
ror
ja
cmp
push
inc
jmp
jge
arpl
jge
ins
inc
data16
shl
xor
pop
daa
inc
sub
fist
or
mov
jmp
push
das
add
mov
std
push
in
or
adc
pop
add
inc
pop
int3
stos
dec
sub
out
and
std
nop
mov
jmp
or
adc
push
push
add
loopne
push
add
(bad)
adc
xor
arpl
mov
dec
mov
adc
bound
shl
lock
sti
and
inc
je
in
repnz
xor
jmp
shl
sub
lahf
jae
and
imul
pop
and
call
dec
mov
test
mov
xor
dec
add
adc
or
cmp
(bad)
(bad)
iret
pop
fsubr
and
cmp
outs
push
les
imul
inc
movs
cmp
jb
test
dec
inc
or
repz
and
in
add
imul
xor
fs
and
or
add
cwde
dec
rcr
(bad)
add
mov
adc
daa
movs
push
add
rol
movs
and
fst
add
jmp
gs
push
popf
inc
adc
add
ss
leave
pop
xchg
mov
mov
xchg
sbb
or
inc
lahf
cli
mov
fidivr
imul
sbb
mov
pop
add
inc
ds
xchg
into
dec
cmp
cmp
add
cmp
inc
ror
cmp
sub
lea
sub
ret
or
dec
mov
mov
or
mov
ret
mov
dec
cs
or
add
fcomp
cmp
cmp
push
mov
fisttp
and
cmp
push
lods
outs
adc
mov
outs
jmp
mov
fadd
mov
data16
or
mov
scas
or
rol
arpl
add
outs
and
pusha
push
push
push
push
in
jmp
fist
or
add
sub
call
sbb
pop
xchg
add
shr
mov
add
pop
add
inc
sbb
pop
dec
add
pcmpeqd
ins
jb
add
movs
clc
aaa
sbb
or
or
xchg
test
aam
sub
enter
or
inc
je
outs
sbb
ds
adc
jo
xor
push
sbb
movs
(bad)
mov
mov
inc
and
and
sub
ins
inc
sub
xor
push
push
lea
ss
jl
xchg
fcmovnbe
gs
and
inc
add
(bad)
or
cwde
aas
xchg
inc
add
mov
xor
push
push
lock
mov
xlat
mov
in
(bad)
fldenv
add
aam
dec
pop
mov
sbb
cmp
outs
mov
shr
daa
cmp
pushf
xchg
pop
push
mov
jl
pop
xor
pop
sub
jno
pop
shl
push
fmul
mov
or
enter
mov
or
add
inc
jl
cmp
loope
mov
sahf
sar
das
mov
ror
shl
adc
jl
push
jno
xchg
int3
fistp
push
dec
jmp
rcr
cmps
loope
dec
add
test
fnsave
repz
inc
jl
sbb
mov
push
inc
jnp
aad
add
inc
mov
xchg
add
in
inc
pop
inc
sbb
sbb
test
push
in
mov
or
inc
pusha
jo
jle
dec
cmp
pusha
and
cmp
cld
mov
push
or
(bad)
adc
cmp
sar
cmps
lods
enter
or
push
(bad)
cmp
sub
test
push
inc
sub
mov
push
ss
cld
pop
inc
push
mov
cs
push
jl
je
sbb
js
aad
popa
inc
or
sub
or
pop
add
and
fist
push
or
dec
or
rcr
add
push
fwait
lods
inc
pop
adc
xchg
jbe
add
or
clc
mov
push
movs
push
js
mov
mov
cmp
retf
add
add
mov
xor
mov
in
mov
mov
std
mov
push
inc
jne
push
pop
sti
loope
inc
iret
or
test
push
and
adc
cmp
adc
xchg
pop
sbb
movs
push
loopne
call
(bad)
rcl
and
scas
dec
or
(bad)
sbb
in
inc
ins
ret
loopne
add
int3
out
std
mov
mov
or
(bad)
pushf
add
mov
rcr
and
pop
movs
iret
sbb
add
je
or
add
daa
in
jmp
pop
stos
dec
push
mov
mov
inc
ss
hlt
imul
sahf
inc
xchg
fst
push
or
pop
xchg
sub
pop
cmp
cmp
add
sbb
cs
imul
xor
cld
pop
or
out
je
adc
repnz
dec
call
test
or
pop
sbb
add
dec
mov
imul
fwait
push
pusha
sbb
cmps
mov
iret
ret
cli
retf
push
(bad)
or
or
adc
pop
jbe
xor
or
jo
sbb
xor
and
fcmovb
call
inc
xor
inc
push
or
adc
adc
inc
dec
std
ins
push
add
ins
int3
in
xchg
test
jp
(bad)
inc
or
xor
xor
add
in
mov
adc
outs
push
inc
bound
je
das
arpl
lea
out
mov
inc
sub
pusha
and
scas
sub
jg
and
mov
cmp
push
sub
pop
outs
push
loop
inc
and
cli
sub
ret
call
cmp
dec
or
dec
cmp
arpl
outs
lea
sub
sub
ds
pop
inc
xchg
xchg
jb
jmp
jg
jmp
push
and
inc
xchg
mov
or
cmovg
test
push
push
fcmovne
mov
and
mov
xchg
(bad)
sbb
mov
push
jg
div
push
jge
jo
sahf
adc
ret
loop
adc
pop
xor
loope
adc
daa
add
or
loop
sub
dec
push
adc
dec
push
adc
cmp
icebp
dec
daa
imul
dec
test
inc
and
xchg
adc
and
pushf
cmps
call
mov
jns
dec
jne
push
jo
push
inc
cwde
arpl
sbb
pop
xchg
mov
mov
movs
ror
push
jne
or
dec
mov
add
cmps
cmp
and
xor
ret
push
jne
mov
out
inc
fadd
mov
int3
shl
ret
mov
(bad)
dec
adc
xor
and
test
dec
hlt
sub
push
cmps
sub
add
fisubr
inc
mov
lahf
std
push
push
movs
dec
xor
cmp
in
xor
pop
mov
mov
pusha
add
push
leave
sub
outs
fisubr
jo
pop
les
in
dec
sub
aam
sub
imul
dec
enter
in
dec
push
sub
dec
cmp
xlat
push
in
pop
ret
mov
push
retf
or
test
add
inc
inc
dec
cmp
lods
inc
jno
push
ds
ss
sub
dec
push
outs
adc
sbb
dec
aad
add
add
sbb
adc
xchg
sar
ss
or
xchg
xchg
xor
add
stos
neg
imul
out
fstp
xor
add
ins
mov
jp
inc
outs
mov
adc
mov
xor
retf
or
(bad)
out
and
lods
push
ror
dec
sub
or
push
push
lea
dec
add
scas
jmp
cli
test
shl
ins
test
mov
ret
jp
fld
ja
pop
hlt
daa
adc
add
(bad)
ficomp
sub
cmp
dec
adc
jp
add
sbb
jno
call
fidiv
pop
adc
nop
mov
sahf
and
cmc
in
sub
add
mov
jo
xchg
jmp
mov
pop
and
imul
sub
add
or
or
pop
fs
and
rol
mov
add
and
call
xchg
xor
xlat
adc
pop
hlt
xchg
dec
data16
pop
gs
pop
daa
test
in
xchg
cli
jecxz
sub
xor
sub
jmp
clc
dec
jae
sbb
dec
adc
dec
pop
data16
in
int3
add
clc
jo
inc
and
lds
sbb
cmps
mov
inc
inc
adc
jne
pop
xchg
hlt
mov
push
loope
fidiv
je
rcl
inc
ss
jbe
sbb
shr
retf
rcr
jae
mov
add
jmp
movs
jae
aam
jb
loope
or
aaa
cld
lock
aam
cmp
adc
lea
sbb
out
add
add
pop
add
and
mov
ror
std
sahf
push
out
ret
dec
push
lods
push
ret
ret
cmp
inc
mov
fild
jb
sub
movs
lea
inc
ins
pop
inc
pop
dec
pop
scas
xor
mov
cs
add
push
sub
adc
call
add
or
vsqrtpd
sub
pop
jae
mov
sahf
lods
push
int3
sti
mov
das
into
hlt
ftst
xchg
jne
sbb
adc
and
mov
pop
and
test
in
or
and
arpl
ror
push
push
push
popf
add
les
rcl
lea
lahf
lods
add
loope
or
ins
push
push
dec
mov
dec
repnz
sar
sub
dec
or
adc
jl
out
mov
js
repnz
jae
jl
je
cmp
inc
jg
cmp
xor
loopne
pop
pop
add
imul
push
mov
lock
(bad)
(bad)
lock
add
scas
shl
fdivr
(bad)
icebp
and
xor
movs
add
xlat
push
repnz
mov
neg
inc
inc
dec
xor
cmp
js
pop
inc
mov
xor
push
mov
sbb
inc
add
xchg
jecxz
stos
dec
(bad)
das
inc
or
fs
push
push
and
in
mov
inc
mov
adc
pop
jbe
xor
data16
ins
dec
and
sahf
and
out
xor
push
sub
add
addr16
xchg
adc
retf
mov
sbb
icebp
icebp
shl
dec
enter
add
adc
(bad)
jno
shr
ret
in
dec
lahf
and
call
xor
push
ins
in
mov
rcl
in
(bad)
xor
push
cs
and
sub
hlt
add
sbb
sbb
ror
mov
and
pop
cmp
jo
xor
or
or
jg
add
or
cmp
out
add
mov
out
cmp
add
test
lods
es
loopne
jge
jnp
sar
shr
outs
pop
psrad
lea
popa
mov
aaa
dec
xor
rol
ret
rcr
sti
mov
jge
icebp
test
js
dec
cmps
inc
dec
mov
(bad)
cmps
mov
sbb
pusha
popf
not
lea
jp
cmps
or
pop
push
cmp
les
push
sbb
push
or
sub
(bad)
rol
dec
cmp
loope
ror
loope
sub
adc
lea
adc
and
pop
mov
xor
cld
xor
ror
xlat
mov
fild
and
xchg
xor
and
movs
push
add
push
xor
inc
stos
fldenv
push
test
dec
xor
movs
jb
mov
or
or
das
mov
dec
sbb
sbb
pop
jl
pusha
add
test
or
movs
inc
or
pop
nop
adc
jno
cmp
mov
mov
or
ficom
mov
ss
pushf
jo
aam
je
cmp
or
je
add
sub
xchg
sbb
pushf
fwait
sbb
test
pop
or
cmp
ins
xchg
dec
push
and
adc
push
je
jmp
in
ret
add
mov
into
mov
je
mov
enter
gs
nop
sahf
cmps
cmp
add
cmps
mov
mov
test
jmp
mov
inc
data16
dec
dec
lahf
add
push
sub
add
sub
add
clc
and
je
neg
mov
lea
push
mov
test
sbb
jb
mov
sbb
scas
inc
and
idiv
sbb
cs
outs
dec
jge
mov
loope
cmc
inc
pop
sub
mov
push
push
add
pop
xor
and
in
cmp
cwde
adc
dec
push
cmp
aaa
xor
ror
fidiv
imul
dec
pop
mov
les
and
or
push
xchg
pop
aas
mov
add
xchg
je
jo
pop
popf
ror
inc
dec
or
sub
cmp
jo
sbb
jb
xchg
add
loopne
stos
inc
cmp
mov
xchg
sbb
xor
popa
movs
ins
xor
loopne
je
shl
inc
sub
(bad)
mov
add
loopne
in
enter
test
xor
add
sub
add
ins
sub
xchg
and
adc
xchg
cmp
lods
add
push
in
mov
add
(bad)
sbb
sub
dec
inc
adc
or
stos
xor
mov
lock
mov
nop
jo
adc
push
xor
mov
push
hlt
jno
loopne
call
mov
das
fs
mov
hlt
sub
in
cmp
add
jae
pop
out
pop
ret
in
pop
dec
stc
ja
cmp
cmp
test
inc
outs
mov
cmp
inc
outs
ss
mov
cli
jae
dec
pop
inc
cmp
adc
test
popa
and
mov
pusha
xor
sub
arpl
pop
loope
push
push
push
pushf
xchg
jno
jne
inc
repnz
fst
call
lock
add
pop
jne
pushf
adc
in
stc
cmp
fdivr
pop
push
add
mov
scas
mov
scas
or
xchg
xor
mov
cmp
ret
gs
jge
cmp
test
inc
jb
cld
push
popa
pushf
out
pop
aaa
push
jns
or
pushf
je
lock
shr
add
adc
inc
das
and
ficomp
ins
pop
add
cmp
jbe
xchg
xor
hlt
pusha
push
sub
test
retf
rcl
inc
cmps
call
iret
sub
adc
inc
adc
ret
sbb
sub
sbb
sahf
adc
mov
div
inc
sti
mov
add
xchg
or
jmp
or
imul
adc
ins
xor
ret
loop
popa
xor
js
popf
jne
push
xor
add
jb
jmp
pop
cs
test
xchg
cmp
jne
sbb
enter
ret
dec
mov
or
inc
or
pop
pop
add
lods
xlat
add
sub
inc
pop
jl
addr16
clc
mov
retf
cmp
cmp
call
mul
sub
mov
fcmovne
mov
or
iret
je
cmp
in
popf
mov
pusha
aaa
inc
lock
sti
push
in
hlt
dec
cmp
mov
pop
adc
dec
mov
xor
(bad)
push
out
lods
dec
loopne
lods
push
daa
jnp
ret
push
jge
sub
cwde
cmp
xchg
and
dec
jbe
push
pop
cmp
sub
ins
xchg
sbb
out
xor
sub
dec
mov
push
sbb
sbb
xchg
pop
pop
nop
imul
test
jae
pop
xchg
cmps
(bad)
dec
ficom
push
std
stos
pop
addr16
outs
jmp
push
in
cmps
cmps
dec
mov
and
adc
jmp
fwait
clc
ins
mov
je
fidiv
fisttp
xor
je
mov
sub
and
aas
mov
enter
jo
dec
lods
rcl
mov
jo
jle
jne
fmul
adc
ret
sub
mov
in
fadd
loope
ins
test
pop
dec
xor
mov
popf
fist
call
dec
mov
ret
and
add
pop
mov
inc
data16
stc
ins
mov
inc
ins
shr
or
shufps
inc
(bad)
test
mov
sbb
jbe
lea
push
inc
in
push
setae
jne
rol
sar
rcl
and
je
push
xchg
mov
and
shl
pop
test
movs
fisubr
adc
mov
push
or
cmp
add
jo
in
cmp
outs
push
inc
inc
daa
cmc
nop
leave
loope
sub
imul
pop
aas
mov
push
push
and
push
psubusw
and
push
call
in
in
ss
invd
js
shl
sbb
sub
icebp
fbld
push
mov
mov
test
or
push
repnz
dec
push
push
adc
fnstenv
mov
inc
rcl
add
call
and
pop
dec
mov
and
push
add
jmp
sbb
mov
test
xchg
push
push
mov
(bad)
jae
les
dec
add
xor
push
(bad)
push
push
add
push
push
cmp
das
ja
inc
fdivrp
fdiv
adc
out
mov
out
jns
fcom
movs
dec
mov
inc
clc
mov
scas
stc
or
repnz
retf
cmc
inc
xchg
xor
inc
mov
(bad)
push
jo
outs
mov
mov
push
mov
jo
cmps
mov
jmp
dec
enter
mov
lods
fwait
ret
test
scas
call
daa
jbe
loopne
push
stc
add
fldenv
mov
call
pusha
and
popf
mov
in
and
movs
shr
shr
inc
cmp
test
lods
int
jecxz
add
xchg
iret
and
jbe
or
ds
push
ret
retf
bound
mov
adc
jecxz
sub
push
sub
add
adc
adc
popa
sub
(bad)
movs
jns
mov
fild
mov
sbb
(bad)
fild
mov
mov
stos
add
dec
fld
cdq
adc
add
xchg
cmp
jl
int3
xchg
xchg
call
jmp
sub
lea
pop
add
push
adc
fcom
clc
aaa
and
push
xor
xchg
dec
add
ret
pop
inc
or
lods
xchg
or
jb
xor
cli
jl
xchg
mov
aad
cmp
js
iret
repz
inc
push
test
ss
jl
jne
call
add
std
fistp
add
add
pop
or
or
or
add
lock
sub
cdq
cli
cmp
push
mov
lahf
sbb
cmps
in
add
lea
jb
inc
mov
mov
dec
imul
xchg
mov
stc
or
rcr
adc
jbe
or
icebp
loope
gs
int3
iretw
sub
add
bound
pop
jns
lahf
inc
js
and
loop
aam
shr
(bad)
inc
inc
loope
cld
xchg
push
call
arpl
in
dec
jmp
push
imul
pop
inc
sub
pop
push
push
je
fistp
adc
push
jne
popa
pusha
push
pop
jno
pushf
cmp
or
add
in
mov
mov
or
cmp
ror
test
test
push
push
retf
loop
push
sti
or
lds
mov
xor
out
xor
add
loope
xchg
clc
sbb
push
pusha
cmp
comiss
neg
lea
mov
cmp
retf
test
and
hlt
inc
mov
jo
sub
(bad)
mov
dec
push
int3
push
stc
and
(bad)
adc
and
jp
icebp
push
cmp
je
cmp
jne
dec
movs
out
jl
add
mov
dec
push
sahf
clc
ret
adc
dec
ror
sub
pop
fnsave
mov
jne
clc
test
pusha
and
cmp
xchg
sub
(bad)
es
push
js
inc
add
pop
pusha
aaa
aas
mov
lea
jbe
and
fdivr
stos
or
or
ins
add
mov
xor
xchg
push
xchg
and
stc
xchg
test
ret
push
add
sub
add
mov
fidiv
cmp
loopne
int3
ror
lock
push
push
leave
test
or
ret
push
loope
or
into
int3
lock
or
mov
pcmpeqb
adc
clc
mov
adc
stos
lahf
scas
mov
mulps
mov
retf
ja
or
xchg
pop
dec
and
and
out
xor
add
mov
shl
xchg
push
lds
fnstcw
sbb
adc
sbb
sub
cmp
and
cld
adc
jg
jl
or
ja
add
ret
mov
sbb
popa
pop
push
stc
mov
and
pop
dec
cmp
lea
sub
movsx
dec
imul
xor
or
lods
lahf
into
inc
cmp
sbb
arpl
push
sbb
movs
push
or
pop
popf
push
xor
jne
mov
mov
inc
adc
inc
dec
and
test
pop
add
inc
add
mov
or
push
adc
jns
or
xor
push
sub
mov
add
mov
add
xchg
pop
mov
test
(bad)
(bad)
adc
cmp
inc
add
and
cmp
mov
and
js
inc
movs
or
adc
and
adc
jb
je
mov
jecxz
sbb
bound
pusha
loope
dec
cmp
add
mov
mov
in
xor
push
jns
rcr
push
sub
rol
sub
sbb
push
(bad)
pop
inc
mov
pusha
inc
jne
repnz
mov
lods
ret
or
push
aaa
test
loopne
outs
push
jae
pop
popf
sub
jle
scas
adc
push
push
arpl
sbb
dec
push
adc
cdq
and
push
scas
pop
daa
sbb
push
xlat
push
fdiv
or
push
push
dec
in
xor
vfrczps
(bad)
or
aad
call
shr
xchg
xor
and
xlat
or
xor
das
adc
ins
push
mov
mov
mov
cmps
ins
add
dec
lods
in
dec
pop
ins
mov
fld
inc
add
pop
push
mov
leave
mov
jae
icebp
out
pop
mov
and
sbb
hlt
sbb
stc
inc
dec
xchg
or
add
fdiv
fcmovnbe
add
xchg
das
pop
pop
add
mov
pusha
jnp
inc
push
test
add
jne
js
pop
mov
push
push
outs
xchg
clc
add
fist
push
pop
dec
fwait
sti
add
jg
mov
mov
sub
mov
or
clc
jge
and
xchg
add
add
cmps
fwait
out
sbb
lods
push
push
pop
cmp
ret
popa
stos
inc
adc
cs
iret
rep
(bad)
in
jle
jge
in
inc
std
push
add
add
add
add
push
loopne
add
sbb
aad
push
dec
dec
adc
test
fsubr
xchg
mov
add
test
or
data16
nop
adc
or
jle
cmps
nop
or
mov
(bad)
fstp
dec
pop
cmp
je
cmp
je
jne
mov
xor
(bad)
shl
mov
jp
(bad)
pop
add
pop
das
imul
int
sub
and
mov
adc
add
inc
mov
cld
cmp
mov
rol
rol
dec
pop
cld
sbb
mov
int
clc
push
jo
test
aam
mov
retf
push
mov
loopne
mov
or
push
mov
and
inc
sbb
push
dec
stc
push
outs
lahf
add
out
push
std
(bad)
pop
pop
aad
inc
pusha
popf
in
pop
mov
lock
fwait
inc
mov
push
xchg
enter
fild
dec
fs
sbb
xor
mul
(bad)
push
out
xchg
pop
adc
loope
test
jg
mov
sub
out
call
fistp
mov
push
push
or
div
rcl
rcl
dec
jle
push
cmp
fst
pop
jo
aaa
sub
jg
ror
enter
push
sub
jo
add
(bad)
xlat
or
loope
push
and
cmp
add
shl
mov
sbb
(bad)
icebp
or
scas
fs
push
rol
jne
mov
xchg
jg
xchg
lods
pop
xchg
mov
fisttp
push
dec
xor
cmps
ret
mov
add
jmp
sub
sbb
sub
add
lea
rep
movs
mov
sbb
movs
sub
inc
add
add
popf
enter
add
push
and
ins
mov
scas
push
add
cmp
adc
fisttp
inc
ja
xor
mov
xchg
mov
cdq
cmp
(bad)
je
adc
ror
jmp
mov
mov
xchg
pop
sub
ins
jne
mov
enter
add
adc
out
pop
push
ret
xchg
pop
inc
retf
dec
xor
cmp
scas
and
sbb
mov
jge
loopne
in
repz
shr
daa
imul
cmp
xor
mov
jo
out
pusha
jmp
or
sbb
stc
cmps
sahf
push
push
push
push
call
push
mov
nop
loope
imul
cmp
inc
and
mov
inc
jo
xchg
mov
fidiv
inc
xor
push
cmp
pop
xor
mov
add
sbb
adc
mov
sub
push
rcl
fcomp
aam
in
inc
dec
test
mov
or
loop
add
push
ss
bound
xchg
push
push
or
mov
js
mov
push
mov
inc
data16
arpl
(bad)
or
cmp
dec
xchg
out
mov
das
(bad)
retf
sub
cdq
adc
inc
mov
dec
jl
mov
pop
cmp
loopne
rol
and
pop
dec
mov
dec
rol
fcmovnu
pushf
aaa
loopne
or
sar
mov
dec
sbb
shr
add
fdivr
adc
ret
std
push
dec
cdq
adc
fdivr
mov
retf
cs
add
push
lea
mov
ss
sub
xor
add
outs
das
lods
jnp
xor
cli
les
loopne
and
movs
jo
push
or
jo
pop
push
pop
cwde
icebp
push
mov
cmp
and
push
(bad)
rol
ss
cmp
je
jp
mov
jle
xchg
sub
mov
lods
nop
cwde
and
mov
push
jecxz
scas
cmp
je
xchg
ins
push
and
pusha
mov
mov
ins
icebp
iret
mul
mov
cmp
and
call
pop
test
xchg
xchg
mov
or
stc
push
xchg
inc
adc
dec
clc
inc
stc
(bad)
(bad)
adc
sbb
push
icebp
dec
push
xchg
add
xor
push
pop
or
adc
into
lds
add
scas
adc
sbb
in
add
mov
aas
xlat
dec
add
(bad)
out
add
fisubr
xor
int3
or
xlat
jp
jbe
dec
and
push
xchg
mov
mov
or
add
adc
inc
mov
push
imul
xor
rol
lods
or
push
fwait
or
call
cdq
push
fidiv
pusha
sub
dec
sbb
adc
push
push
xor
xor
mov
sub
ds
loopne
xchg
inc
rcr
jmp
neg
jns
adc
jne
or
xchg
fcmovu
pop
imul
sub
pop
inc
push
(bad)
jb
and
dec
sbb
ret
nop
jecxz
loope
call
push
popa
cmps
ja
nop
mov
push
fidiv
inc
push
test
sbb
and
ror
pop
inc
and
test
aas
xor
dec
movs
pswapd
shl
or
sub
fs
add
gs
psubd
xor
loope
jmp
ret
cli
mov
jp
cdq
sbb
shl
sahf
mov
or
test
or
and
mov
xlat
adc
sar
push
mov
jns
jmp
call
ja
jl
js
push
adc
jne
jae
sbb
adc
or
xchg
rcl
sbb
cdq
inc
inc
int
and
xor
ss
test
push
mov
cmp
pop
retf
dec
loopne
or
add
sub
or
sti
shr
ins
jl
enter
push
mov
in
cmp
or
mov
add
add
std
aam
sti
mov
inc
mov
fst
int
rol
popa
test
xor
push
xor
add
ins
cmps
ret
pop
jmp
pop
movs
cmp
addr16
add
lahf
adc
icebp
jmp
mov
mov
cmp
xor
xchg
mov
cmp
sub
ss
mov
ret
xor
add
and
or
or
cmps
nop
cli
cmps
lea
pop
adc
push
jae
retf
scas
or
ins
jecxz
lahf
pusha
mov
outs
xchg
xor
sahf
stc
ds
jmp
inc
push
in
movs
push
add
add
lea
xchg
pop
pusha
loope
mov
push
xchg
rcl
pop
cmp
add
lock
dec
inc
inc
mov
jl
les
adc
pop
dec
and
sbb
mov
sub
dec
(bad)
in
aam
push
mov
out
pop
fdiv
cmp
cmp
add
mov
pop
add
stos
bound
xor
xchg
lock
imul
push
sbb
and
cld
xchg
cmp
outs
mov
mov
sbb
cmp
lock
add
ret
push
test
xchg
push
or
xor
inc
stos
and
xchg
out
cmps
arpl
fld
push
push
jbe
sar
bnd
push
xchg
int
scas
add
add
or
call
rcr
pop
pop
jle
in
or
xor
sub
mov
adc
cmc
add
test
mov
sbb
sub
ja
in
xchg
mov
push
cld
sub
add
or
push
push
dec
mov
dec
xor
jno
sub
cmp
xchg
(bad)
pop
push
es
or
es
xor
push
adc
push
jl
or
sub
sbb
push
push
dec
adc
loope
fwait
and
adc
lods
or
sbb
mov
dec
shr
cmps
xor
shl
xchg
add
add
add
mov
test
inc
mov
daa
loop
sbb
mov
or
es
(bad)
fadd
inc
xchg
in
and
or
and
dec
xchg
mov
push
mov
in
lock
dec
or
ret
icebp
nop
push
test
sbb
fwait
mov
xor
ja
jle
xchg
mov
push
movs
inc
xchg
inc
jae
pop
or
clc
dec
lock
mov
cmp
mov
inc
adc
adc
in
shl
add
sbb
add
or
div
adc
arpl
or
in
cmp
dec
clc
adc
movs
jp
and
enter
(bad)
xchg
rcl
sahf
mov
daa
dec
icebp
into
mov
stos
pop
inc
sub
xlat
xchg
jg
mov
mov
push
sub
out
inc
ror
test
mov
loop
mov
pop
jbe
jne
sub
push
pushf
adc
lods
ret
rcr
ja
xlat
add
xor
rcl
lahf
(bad)
mov
adc
jge
push
push
add
push
or
and
pop
jecxz
call
mov
and
mov
cmp
or
adc
icebp
xchg
jge
mov
aas
inc
js
inc
mov
adc
lock
add
(bad)
dec
inc
pop
ins
sbb
(bad)
add
inc
imul
push
xchg
push
sub
jecxz
rol
(bad)
and
sub
lds
jnp
push
or
cmps
xchg
mov
xchg
mov
mov
mov
sbb
sub
push
inc
jmp
in
movs
jo
cmp
sbb
sub
(bad)
and
cld
add
stos
or
sahf
lea
imul
xor
push
jmp
mov
pop
cmc
jbe
hlt
xor
fimul
addr16
mov
bound
jo
shl
mov
fcmove
push
arpl
add
popf
push
int
test
pop
dec
push
jns
fs
rcl
push
sahf
push
mov
inc
loop
or
add
jbe
pop
add
jmp
out
ror
dec
or
xchg
push
in
push
mov
rcl
ficom
sbb
test
fisub
xor
push
call
aad
cld
(bad)
test
mov
call
es
fimul
mov
sub
dec
mov
test
sbb
sub
push
or
push
push
fadd
sbb
push
add
add
or
or
sbb
cmp
jge
test
xor
call
jge
(bad)
lock
enter
neg
sub
dec
pop
stos
inc
sbb
test
sub
les
add
adc
sub
pop
jae
cli
icebp
adc
pusha
xlat
pop
sti
fptan
jle
aaa
push
bound
dec
push
jne
call
pop
xchg
nop
ins
out
jnp
test
push
movs
xchg
push
xchg
adc
repz
mov
loop
or
cmp
scas
add
pop
mov
int3
add
lock
scas
cld
test
push
dec
dec
mov
or
movs
xchg
pop
scas
or
rcl
cmp
sub
loopne
ja
adc
cdq
stos
or
or
fisttp
into
push
jmp
or
jmp
add
sub
enter
jp
jmp
pop
mov
sbb
dec
sub
add
xor
es
or
or
movs
sub
mov
test
inc
rcl
jne
push
mov
pop
out
pop
clc
inc
mov
cld
sbb
or
cmp
lds
jno
xchg
cmps
pop
push
or
add
lds
daa
cmps
xor
sub
xchg
xchg
sahf
out
loope
mov
mov
pop
add
jns
out
into
sar
add
icebp
jmp
or
ret
scas
and
xor
cs
popa
and
cmp
mov
inc
out
push
jbe
push
inc
scas
dec
shr
pop
pop
ja
cmp
adc
rol
adc
adc
pop
pop
mov
sti
adc
dec
hlt
sub
xchg
xchg
movs
sub
out
add
rcl
mov
das
mov
adc
test
pop
clc
inc
ret
call
push
movsx
sub
scas
cmp
pop
sub
shl
test
jne
add
ins
pop
pushf
xor
pop
push
push
ins
or
cmp
retf
or
inc
jl
pop
movs
cmp
adc
sub
cmp
jne
nop
add
packssdw
jne
cmp
lods
fiadd
mov
mov
cwde
cmp
(bad)
ins
and
add
shl
xor
jle
cmp
inc
pop
gs
push
jge
into
jge
(bad)
nop
sub
mov
jae
push
and
lods
nop
xchg
xor
and
mov
hlt
sbb
mov
or
shl
je
add
xor
not
sbb
movs
sbb
push
inc
and
ror
test
mov
arpl
(bad)
xor
ror
mov
adc
sbb
xlat
cmc
rol
stos
sub
test
cli
xor
add
aaa
or
cld
push
and
neg
add
pop
and
cld
sub
push
mov
addr16
xlat
jp
or
pop
mov
mov
jge
mov
sahf
pop
adc
xchg
jno
pushf
add
rcl
mov
or
in
mov
and
mov
and
push
or
stos
fidiv
call
int
test
mov
mov
pusha
mov
daa
ja
dec
sub
push
imul
cmp
mov
mov
adc
rol
bound
pop
adc
mov
cmps
popa
aam
sbb
and
sbb
jg
and
adc
sub
je
dec
je
dec
add
add
adc
cmps
mov
loope
movs
pop
and
jmp
(bad)
sub
adc
sub
gs
mov
push
push
push
and
dec
cmp
add
lock
cmps
sbb
je
push
mov
mov
and
std
cmp
mov
push
scas
adc
cmp
mov
push
rcl
lock
mov
in
nop
xor
and
(bad)
sub
push
sub
sti
inc
and
stc
ret
loop
cmp
push
mov
dec
loope
add
sub
into
fdiv
mov
cld
movs
push
sub
adc
or
xchg
outs
mov
(bad)
stc
sbb
mov
pop
das
call
cmc
add
mov
lds
xchg
and
fwait
lods
add
sub
push
dec
dec
push
out
sbb
push
sahf
dec
and
cmp
and
pop
and
lock
movs
addr16
dec
pop
jne
int
jle
iret
jmp
mov
or
dec
cmp
and
pop
or
mov
cdq
outs
xchg
adc
inc
popa
cmp
lods
pop
mov
cs
sysret
xor
cmps
rcr
aaa
lock
inc
test
pop
(bad)
or
es
test
arpl
cmps
or
sti
out
dec
push
xor
xchg
mov
sbb
xchg
push
dec
ret
and
mov
dec
mov
dec
xchg
leave
add
or
lock
xlat
inc
ins
mov
xor
xor
mov
imul
in
imul
imul
imul
cmp
add
call
or
and
lock
or
dec
inc
mov
in
and
gs
add
xor
xchg
add
outs
imul
mov
pop
cmp
or
or
gs
outs
loop
and
dec
add
inc
pop
js
jg
adc
icebp
sar
mov
and
loopne
add
xor
fild
add
push
jbe
outs
jno
mov
sub
lods
aas
cmc
xchg
mov
and
leave
adc
aas
sub
push
pop
mov
cmp
leave
mov
xchg
call
test
dec
fild
and
mov
cmc
push
push
enter
call
mov
or
or
push
push
add
in
pop
mov
push
pop
sbb
push
out
popf
sub
(bad)
(bad)
loope
add
sub
js
test
add
sub
movs
push
fs
fadd
stos
mov
cmp
mov
inc
sub
adc
cli
or
je
(bad)
loopne
push
dec
pusha
mov
jmp
mov
pop
mov
fmul
shl
enter
add
(bad)
cld
add
daa
push
push
pop
pshufw
pop
ja
movs
mov
fadd
int3
dec
imul
pusha
mov
mov
ret
push
adc
dec
push
adc
fcom
lock
dec
sbb
sbb
cmp
or
jns
xchg
pusha
gs
ins
mov
or
and
and
dec
inc
jp
mov
mov
add
shl
pop
jmp
add
pop
leave
les
push
rol
or
pop
jb
sbb
mov
xor
add
jne
dec
sbb
aas
or
push
xor
push
fmul
push
js
psadbw
rcr
mov
mov
add
or
cmp
fisttp
mov
sbb
out
push
iret
push
je
test
pop
cmp
stc
sub
adc
or
push
cmp
pop
mov
aaa
test
fidiv
adc
lods
je
pop
push
out
enter
or
call
push
out
test
scas
fmul
lods
add
mov
mov
adc
adc
fcom
adc
push
hlt
push
inc
add
sbb
test
loope
add
mov
loop
cld
cmp
inc
pop
jo
dec
add
cmp
add
inc
push
push
mov
mov
mov
xor
and
xchg
pusha
fwait
pop
cmp
stc
adc
movs
mov
pusha
push
adc
push
jbe
jge
pushf
push
ja
jmp
out
aam
cmp
dec
aam
xchg
xchg
adc
clc
or
movq
dec
adc
push
dec
push
or
adc
push
imul
pushf
dec
adc
pop
and
nop
add
add
inc
xchg
mov
out
push
(bad)
test
or
pop
add
lock
pop
rcl
not
js
push
sbb
js
mov
out
or
dec
pop
add
inc
sub
lock
pusha
adc
je
push
or
and
push
or
push
xor
push
mov
cs
ds
push
mov
dec
xchg
mov
and
out
dec
enter
jae
push
cli
or
push
xchg
cmps
movs
sub
adc
push
or
sub
push
adc
jae
ins
mov
add
push
clc
push
ja
movs
sti
mov
and
push
mov
fdivr
imul
out
cdq
test
lea
(bad)
retf
inc
in
sub
(bad)
and
pop
test
inc
cmp
sub
aas
or
adc
add
xor
sbb
push
imul
and
mov
lods
faddp
aas
jno
add
mov
sbb
test
push
call
or
je
mov
pop
fs
push
and
push
daa
lea
add
add
or
adc
cdq
push
call
movs
or
push
outs
ss
inc
push
mov
pop
xor
push
loopne
(bad)
out
mov
and
mov
push
dec
cdq
sub
mov
lods
adc
sub
jo
fimul
aad
mov
xor
push
sti
cmovns
test
adc
sti
test
push
or
inc
pop
or
cmp
pop
loope
push
js
add
sub
mov
push
xor
fld
test
push
adc
and
rol
pusha
push
jb
push
push
push
inc
or
call
push
add
sub
test
es
inc
nop
add
pop
push
push
push
and
dec
or
adc
push
sar
dec
ret
or
xor
sahf
cmp
push
and
out
sub
movs
push
(bad)
daa
sub
adc
cmc
sub
popf
test
daa
pop
push
or
push
imul
add
xor
and
pushf
(bad)
ret
sbb
cdq
sub
mov
add
push
lock
jne
call
lea
pop
pop
jne
push
or
xchg
outs
sub
and
sbb
jae
push
xor
jmp
push
push
dec
adc
push
add
int3
sub
adc
cmp
mov
sbb
ret
cmp
sahf
pop
cmps
pop
sub
rcr
dec
int3
push
mov
add
jl
sti
jmp
push
push
mov
mov
shl
sbb
rcr
call
adc
and
mov
pop
adc
movs
sbb
gs
cmp
inc
or
in
cmp
push
inc
and
sbb
sbb
dec
pusha
sbb
dec
sbb
and
and
lock
adc
inc
sbb
jmp
mov
add
retf
int3
ficom
or
inc
sub
movs
push
inc
dec
push
mov
loopne
or
mov
xor
mov
add
adc
adc
fiadd
cmp
je
outs
ret
mov
sbb
hlt
imul
mov
add
bound
xchg
push
and
sbb
sbb
jo
mov
or
mov
mov
out
mov
outs
mov
or
rcl
inc
fisubr
loop
xor
or
gs
mov
js
cmc
into
mov
shr
xor
cld
fild
pop
or
mov
out
pusha
mov
xor
mov
shr
mov
retf
aas
xor
loopne
xor
mov
shr
ret
daa
adc
shr
sbb
inc
clc
xchg
not
and
inc
dec
push
xor
inc
dec
jno
and
xchg
push
mov
test
(bad)
and
ja
pop
dec
cwde
push
shl
add
mov
xchg
rol
rcr
aas
xor
mov
add
ret
dec
cmp
add
inc
cmp
nop
mov
push
and
loopne
and
test
or
addr16
sub
inc
lods
cld
aas
aas
and
fwait
and
(bad)
(bad)
mov
retf
retf
mov
mov
inc
push
dec
out
ins
cmp
jae
(bad)
lods
sub
test
movs
test
or
sub
push
std
mov
push
pop
push
mov
mov
arpl
xor
rol
cmp
sub
inc
sbb
shr
adc
or
xlat
dec
xchg
xor
out
mov
mul
or
mov
repnz
mov
jge
adc
xchg
lock
shl
or
xchg
cmp
and
adc
(bad)
xchg
stos
mov
and
fadd
sub
cmp
ja
hlt
inc
xor
or
fdivr
(bad)
je
bound
push
cmp
cmp
push
push
inc
dec
mov
in
test
inc
adc
mov
cmc
xor
cld
dec
imul
inc
mov
xchg
dec
sbb
and
hlt
retf
sub
movs
in
fdivr
and
sbb
jae
sbb
push
pop
jmp
mov
push
inc
pop
pop
loopne
or
or
inc
xchg
jmp
scas
and
dec
inc
sub
nop
inc
pop
sbb
adc
push
movs
sub
and
std
test
fwait
cmps
shl
ja
push
mov
aaa
lock
mov
sbb
and
retf
mov
mov
adc
pop
aas
or
cmps
dec
and
xor
xchg
sub
dec
jne
rol
leave
adc
out
sbb
xor
pop
adc
add
sbb
loope
pop
out
ins
push
cdq
and
ret
pop
or
add
ret
test
jbe
ja
push
or
add
pop
mov
test
jp
push
sbb
or
inc
jp
pop
dec
jmp
dec
pop
inc
bound
and
test
push
and
(bad)
imul
mov
cmp
dec
xor
retf
ror
ret
and
sub
adc
push
cmp
cmp
lahf
sub
xor
shl
dec
inc
push
(bad)
pop
sub
xor
add
push
jge
dec
push
or
cmp
jle
push
xor
add
dec
hlt
and
add
and
icebp
fcom
cmp
add
loope
mov
pop
add
cmp
sub
and
das
leave
add
adc
enter
and
adc
xor
push
cmp
call
js
mov
xchg
std
add
clc
add
fstp
add
pop
rcl
hlt
jnp
add
ja
push
inc
inc
(bad)
push
jle
push
addr16
test
mov
jmp
add
cli
pushf
nop
aam
repnz
shl
fs
lock
and
inc
mov
(bad)
sbb
pop
adc
sti
add
imul
sbb
cmp
pop
xor
in
pop
addr16
push
ss
jno
call
sbb
pop
or
sub
or
and
leave
out
je
inc
mov
mov
push
jne
enter
js
jnp
and
push
ret
sub
push
stos
sub
rol
arpl
pop
xchg
call
xchg
dec
shl
inc
inc
inc
add
sub
int
in
pusha
pop
mov
test
ins
or
retf
xor
mov
(bad)
push
adc
lock
pop
call
mov
sub
leave
loopne
test
or
jnp
xchg
daa
push
push
into
ja
ins
aam
or
push
retf
sub
and
mov
push
stc
push
sub
mov
mov
and
pop
push
add
arpl
mov
pop
add
es
jge
in
test
add
add
popf
xchg
leave
call
lock
add
arpl
in
add
add
mov
sub
movs
inc
add
pop
addr16
icebp
jle
push
rcr
fsubr
ja
push
cs
sub
loopne
dec
sbb
pop
push
or
lahf
mov
xor
sub
pop
xlat
push
push
jns
sbb
loopne
jne
adc
mov
add
jle
nop
add
call
arpl
ficom
hlt
push
add
imul
sbb
sub
loop
hlt
sub
lahf
sbb
adc
sbb
xchg
daa
pop
(bad)
push
sbb
or
add
or
add
std
je
cmp
jp
cdq
adc
call
pop
pop
inc
push
leave
mov
add
sbb
fcmove
sbb
dec
and
shl
mov
xchg
test
or
sbb
and
ins
inc
mov
mov
mov
rcr
adc
mov
fstp
add
push
adc
push
push
jo
movs
add
jmp
dec
push
push
jmp
jns
pusha
in
rcr
push
push
xor
jge
test
push
mov
push
add
outs
pop
add
jmp
push
(bad)
mov
cmp
add
xchg
lock
movs
inc
sbb
sbb
mov
lds
dec
je
push
cld
mov
xor
js
sub
or
or
mov
(bad)
sbb
cdq
push
push
test
mov
and
fucomi
inc
test
icebp
ret
sub
sbb
inc
adc
dec
test
or
sub
and
or
clc
dec
inc
(bad)
jl
stc
push
add
std
xor
mov
xor
push
fisttp
xchg
pop
test
and
mov
inc
mov
add
mov
sub
and
ds
icebp
jle
sub
inc
loope
pusha
mov
scas
in
adc
mov
xor
push
jmp
adc
mov
stos
xchg
push
aas
pusha
cmp
mov
or
cmp
push
ficom
rcl
jnp
pop
test
mov
sub
adc
xchg
add
add
mov
or
add
mov
mov
int3
test
jp
js
jl
cdq
push
adc
pop
add
jnp
sub
add
dec
and
and
add
popa
ss
cmp
rcr
into
mov
enter
jns
je
push
jecxz
add
je
push
nop
pop
pop
sbb
pop
cdq
pop
sub
cmp
add
add
test
sbb
and
addr16
push
aas
jecxz
movs
lds
sub
dec
add
es
or
adc
cmp
shl
das
push
or
cmp
icebp
repz
daa
jmp
loope
pop
enter
loopne
or
inc
or
mov
enter
test
cs
xor
xor
jecxz
outs
lock
in
lods
out
call
cmps
pop
push
jns
add
mov
icebp
or
cmp
jno
and
out
xor
(bad)
loopne
arpl
mov
adc
mov
cmp
adc
outs
mov
or
ret
cdq
mov
pop
push
fstp
call
loop
pop
mov
je
add
int3
dec
jo
mov
mov
sbb
push
mov
mov
and
ds
inc
movq
mov
in
pop
adc
add
add
sbb
and
push
add
enter
push
push
or
or
add
or
fmul
add
adc
add
ret
(bad)
mov
add
pop
or
inc
xlat
sub
push
retf
rcr
mov
mov
and
push
sub
gs
out
cmp
add
push
lods
pusha
mov
dec
retf
inc
adc
mov
inc
cmp
or
jecxz
push
loope
popa
pop
scas
rol
sub
inc
jbe
xchg
lock
lea
mov
inc
and
adc
sbb
sti
out
or
mov
daa
and
movs
and
dec
sbb
xchg
movs
mov
and
pop
ficom
or
add
add
push
scas
cmps
movs
sub
adc
dec
mov
cmp
lods
sub
jge
add
xchg
fs
or
pusha
ja
dec
jecxz
repz
add
push
sbb
mov
jne
aam
(bad)
add
xchg
push
add
xor
push
fwait
push
sbb
or
sub
rcr
mov
cmp
rcl
push
mov
inc
or
push
fwait
sub
jl
lock
adc
leave
pop
xor
push
or
push
inc
or
ins
cmp
mov
pop
jno
push
sub
mov
dec
cmp
mov
mov
xor
inc
mov
lock
pusha
(bad)
adc
sar
mov
repnz
inc
ret
stos
cmp
mov
mov
adc
jmp
cmp
call
or
adc
cmp
mov
dec
fdiv
cmp
sub
adc
inc
cmps
inc
inc
xor
cmp
adc
inc
je
mov
push
add
movs
add
mov
dec
fsubr
xor
pop
mov
add
sbb
fild
cmps
dec
sbb
push
xchg
dec
jecxz
es
pusha
xor
(bad)
cs
xchg
mov
push
repz
enter
dec
cld
and
int
push
jl
je
arpl
and
jge
pop
clc
and
out
add
cmp
adc
mov
cs
adc
add
push
push
repnz
sbb
cmps
add
mov
adc
inc
add
fs
ss
sbb
push
movs
ret
and
nop
pop
xchg
push
push
sub
mov
or
fs
xor
jmp
lods
sub
mov
mov
fisub
push
add
adc
sub
aaa
mov
mov
test
mov
xor
test
sub
dec
and
ror
dec
push
pusha
adc
dec
jecxz
mov
sub
xchg
sbb
push
cld
jle
sub
mov
ss
sbb
aam
fnstcw
fld
sub
push
sub
inc
cmp
fdiv
or
popf
lock
(bad)
retf
dec
test
sbb
adc
push
add
dec
movs
add
adc
xchg
add
fcom
mov
adc
sbb
dec
sbb
and
fnsave
xor
sub
add
pop
push
push
cli
adc
push
sbb
adc
push
pop
test
loopne
push
inc
ss
add
repnz
shr
add
(bad)
(bad)
shr
and
es
dec
aaa
mov
or
pop
aam
push
dec
dec
or
imul
add
or
mov
dec
dec
nop
and
pop
(bad)
out
adc
xor
jo
push
inc
icebp
int3
cmp
cmp
in
add
pushf
or
and
mov
aam
xchg
outs
and
aaa
fmul
sahf
push
pop
xor
dec
mov
lock
enter
into
ds
push
in
cmp
enter
xor
sub
outs
ret
dec
xlat
shl
movs
pop
(bad)
mov
pushf
mov
mov
add
pop
(bad)
lock
push
test
and
sub
xchg
push
loopne
jle
add
xchg
cs
xchg
pusha
mov
cwde
inc
test
fldenv
outs
add
sar
retf
inc
inc
fwait
shl
out
sub
xor
cmp
sub
adc
mov
inc
enter
xor
pop
test
repnz
add
sub
add
aam
fs
loopne
inc
jmp
mov
sbb
fsub
push
adc
or
sub
mov
dec
add
clc
int3
push
push
dec
jns
lock
pop
adc
add
(bad)
inc
xchg
mov
jbe
inc
xchg
inc
mov
call
outs
xor
add
stos
movs
mov
rcl
mov
dec
xor
movs
not
shr
mov
clc
call
push
pop
movs
shl
xchg
or
dec
add
jo
mov
inc
add
push
call
mov
mov
xchg
add
push
add
fmul
ret
sbb
mov
dec
pop
pop
fdiv
cs
xor
jg
or
mov
push
adc
mov
(bad)
not
hlt
push
mov
push
add
mov
mov
jo
call
dec
or
enter
popf
addr16
sar
xor
leave
cmp
out
adc
cmp
push
dec
bound
cmp
cli
sub
mov
sub
xor
mov
add
into
push
adc
xchg
or
lods
and
and
aam
stos
dec
mov
adc
inc
stos
loope
je
and
shr
xor
mov
push
inc
fmul
fdiv
push
fsubp
daa
cmps
shr
and
inc
test
sbb
sahf
in
inc
or
pop
nop
dec
sbb
or
add
xchg
adc
xchg
pop
inc
test
in
clc
inc
popa
push
scas
icebp
je
in
not
sbb
cmp
inc
jl
and
ret
shl
push
and
adc
sub
outs
mov
add
inc
jp
popa
push
bound
loopne
inc
mov
adc
dec
or
mov
inc
add
pop
popf
lods
xchg
stos
aam
sub
dec
shr
(bad)
out
loopne
push
adc
addr16
xor
and
mov
pushf
arpl
push
popa
enter
fwait
call
and
lods
mov
mov
dec
mov
ret
xchg
cld
inc
xchg
stos
fwait
mov
dec
js
and
jo
cmp
mov
hlt
(bad)
push
xor
sahf
add
xchg
inc
add
adc
or
aas
inc
je
in
mov
sbb
int3
sub
in
jnp
pop
lea
jmp
adc
xor
push
push
call
or
mov
iret
add
mov
push
mov
(bad)
push
push
adc
in
or
cmp
lea
cs
jne
xor
ins
cmps
push
sub
rcl
jmp
es
lea
int
add
vcmpss
push
and
inc
out
jno
cmps
mov
push
sar
add
movs
mov
inc
sub
dec
xor
gs
pop
sub
push
push
sub
add
push
test
add
push
icebp
add
adc
sbb
ins
add
adc
add
push
and
imul
retf
pop
cmp
(bad)
shr
addr16
or
packsswb
int
cdq
repz
mov
test
fdivr
jo
ss
sbb
bound
inc
lahf
dec
lock
jb
and
not
cmp
cdq
sub
popf
dec
add
ja
push
push
xor
jle
or
sbb
inc
sbb
dec
fmul
push
inc
and
std
jns
inc
xor
cmp
and
push
mov
fld
pop
adc
adc
add
push
and
shl
daa
or
jns
idiv
adc
movs
and
jmp
sbb
jne
sub
int3
je
mov
push
add
mov
ror
adc
add
inc
adc
or
or
in
jge
loopne
push
jne
test
xor
add
ins
clc
add
and
popf
aas
rcl
jle
inc
ins
xchg
sub
sahf
nop
fcom
leave
add
sbb
add
and
xchg
in
jmp
sbb
sbb
(bad)
leave
or
fwait
std
daa
sar
and
dec
dec
and
mov
pop
jnp
pop
mov
repnz
or
retf
ja
out
int
xor
jmp
dec
push
sbb
or
push
pushf
mov
inc
mov
(bad)
sub
jns
add
test
in
movs
loopne
add
fmul
inc
jp
test
out
mov
jbe
int3
dec
ds
push
jbe
in
inc
xor
xchg
pop
mov
or
aam
neg
pop
mov
jmp
or
dec
ins
or
xchg
mov
or
push
lock
mov
retf
sub
lahf
shl
push
invd
pop
pop
test
lea
and
or
arpl
or
jge
push
inc
push
push
(bad)
xchg
imul
into
xchg
add
das
push
sbb
lds
and
or
pop
leave
and
fisubr
and
xor
es
inc
sti
push
psubusb
jecxz
and
xchg
sub
test
ret
mov
xchg
mov
ins
push
je
fcom
push
dec
popa
in
cs
mov
repnz
sub
ror
mov
ret
and
div
call
sub
dec
loopne
add
sbb
jge
mov
sbb
jle
inc
dec
add
retf
push
and
xchg
clc
xor
jno
pop
sub
pop
and
shl
xchg
call
fadd
cmps
add
pop
push
std
ja
push
arpl
retf
add
pop
adc
sbb
pop
repnz
(bad)
repnz
pop
repnz
or
and
repnz
mov
xor
and
cmp
das
sbb
or
xor
mov
inc
push
loope
pop
sbb
push
hlt
mov
cmps
in
lock
sub
adc
or
scas
jle
ret
fcom
dec
daa
mov
or
add
enter
and
lock
fadd
xor
mov
xchg
fbstp
jne
add
add
jne
inc
or
aad
sub
mov
js
lods
adc
sbb
ja
sbb
push
xchg
mov
lea
mov
xchg
push
adc
shr
xor
loopne
mov
cmp
test
mov
inc
cmp
sub
add
or
iret
and
rcr
add
jmp
adc
test
addr16
iret
push
sub
test
lods
sbb
push
retf
je
jns
sti
dec
ins
add
lea
pop
push
inc
call
inc
clc
xchg
gs
jae
or
dec
pop
cmc
ret
je
adc
pop
dec
mov
test
jge
inc
inc
add
fcomp
es
ja
mov
adc
js
or
mov
call
push
adc
jle
int3
hlt
mov
lea
cmp
call
pop
mov
lods
pop
ror
mov
shl
sar
or
or
data16
jp
add
dec
clc
in
push
jnp
cmps
pop
push
pusha
daa
add
push
(bad)
or
mov
inc
jo
icebp
xor
mul
dec
dec
call
push
or
dec
adc
xor
mov
jo
inc
xor
and
jne
or
mov
fidiv
sbb
mov
ins
cmp
and
add
idiv
mov
shl
mov
jg
jne
or
mov
call
mov
add
ror
sbb
and
loopne
sbb
sar
loopne
fadd
dec
mov
or
in
inc
lea
movs
mov
or
not
dec
add
fidivr
popa
add
(bad)
rol
nop
xchg
push
(bad)
std
dec
sub
je
push
jl
dec
cld
sbb
push
(bad)
out
mov
lahf
loopne
mov
scas
cdq
movs
pop
lods
or
popa
dec
rol
jmp
retf
and
xor
mov
cmp
sbb
dec
sbb
push
inc
ss
aad
cmps
retf
sub
add
add
fsub
push
push
push
ss
retf
in
mov
sub
add
lods
mov
push
cmp
mov
or
jno
or
cld
stos
lea
push
mov
cli
sbb
ret
cdq
add
jne
or
xor
pop
and
or
mov
shl
adc
fcomp
and
fcom
loop
xlat
mov
test
pop
jae
xchg
ret
inc
dec
push
cmp
mov
ins
or
xor
push
push
jmp
sbb
add
call
dec
push
jae
sti
rol
je
or
sub
and
pusha
je
jae
push
or
dec
adc
add
call
xor
fadd
test
gs
addr16
cli
inc
les
jp
push
ficomp
xor
inc
fdivr
push
int3
and
rcl
mov
jne
cld
js
mov
xor
sub
mov
push
retf
pop
sahf
test
or
or
out
lods
mov
fsubr
mov
pusha
out
or
lock
pop
sub
add
fild
cmp
add
and
(bad)
imul
les
cmp
adc
mov
inc
out
push
inc
push
scas
push
push
adc
add
pusha
add
dec
loopne
jno
mov
mov
mov
jle
js
sahf
mov
adc
in
jno
push
stos
cmp
shr
mov
jmp
and
jo
inc
inc
adc
adc
mov
int3
cmp
jl
pusha
test
jo
inc
mov
leave
or
aam
pop
jge
jge
add
mov
add
mov
test
int3
xor
push
push
cmp
retf
adc
cmp
jae
sbb
arpl
sbb
sbb
dec
and
mov
cmps
push
adc
xor
mov
push
int3
pop
jb
movs
fadd
fadd
mov
jne
add
add
xor
ja
jl
jmp
pushf
shl
adc
add
cmp
(bad)
(bad)
in
and
(bad)
inc
dec
push
jne
ret
mov
inc
mov
fsubr
jle
and
mov
movs
(bad)
popf
sub
pop
mov
pop
add
nop
add
or
mov
ja
and
(bad)
xor
jae
aam
dec
add
jge
push
in
neg
sbb
xchg
dec
push
mov
out
inc
add
push
sub
pop
hlt
push
xchg
rol
inc
mov
int3
lock
rcr
push
daa
and
sbb
sahf
in
pshufw
push
or
and
cmps
test
mov
add
adc
add
adc
nop
test
call
push
test
inc
xor
ret
add
inc
sti
mov
jne
xor
push
sub
inc
add
fimul
ret
loop
push
sub
push
pushf
not
call
inc
or
leave
fadd
push
add
pop
and
add
pusha
retf
xor
outs
iret
cli
rcl
mov
dec
dec
mov
iret
shr
sti
xor
enter
mov
add
in
jne
pop
add
and
jnp
mov
jns
xlat
push
faddp
push
in
add
or
or
xchg
ins
xor
add
je
fild
inc
sub
mov
adc
out
and
dec
xor
dec
jecxz
push
les
rcr
sbb
int3
push
in
iret
inc
adc
mov
adc
inc
cwde
mov
imul
jge
adc
loopne
rol
je
jp
dec
jl
push
fsubr
dec
mov
or
or
push
mov
or
add
mov
sub
and
cwde
add
loope
adc
jne
mov
xor
loop
ficomp
and
je
and
pop
and
jne
mov
outs
or
xor
sbb
fisubr
add
aam
add
jmp
aas
aam
sar
inc
pop
inc
das
imul
or
and
rcr
jg
loopne
dec
call
push
icebp
das
cmp
jl
mov
dec
pop
or
or
fadd
add
jo
xchg
cmp
add
repnz
pop
inc
js
mov
push
mov
fidivr
je
jo
daa
sbb
fs
xchg
push
rcl
or
in
jnp
int3
sar
mov
or
mov
sub
adc
add
sbb
fbld
ss
fst
inc
lahf
loopne
mov
int3
and
push
loopne
loope
pop
and
rol
add
cmp
xor
xchg
push
mov
rol
mov
sbb
out
lock
pop
adc
cmp
jb
adc
bound
sbb
loopne
imul
movs
shl
sbb
outs
add
cld
pop
pop
cmp
add
add
pushf
pushf
sub
inc
jae
jae
add
inc
jmp
inc
jmp
xor
jae
ss
aaa
jmp
cmp
push
inc
inc
cs
imul
les
pop
call
push
add
cmps
and
jo
add
imul
test
push
movs
add
xor
inc
add
ret
xchg
push
add
jp
inc
test
sbb
sub
loope
and
aam
push
and
and
sub
fimul
pop
jnp
shl
in
mov
add
cmp
inc
xchg
sbb
push
xchg
jp
aam
and
and
or
and
call
push
jl
push
jne
pop
jne
inc
jmp
dec
je
or
or
loopne
sub
dec
aad
inc
outs
ret
cs
jne
ss
hlt
adc
push
sbb
pop
pop
sub
add
loope
adc
out
pop
add
sar
xor
test
jg
clc
add
cmp
mov
sbb
jmp
sbb
mov
push
or
call
scas
cmp
add
popf
push
sbb
push
js
ret
and
dec
add
ror
popf
imul
dec
or
adc
adc
jne
ins
jge
daa
test
and
push
inc
dec
pop
xor
add
fdiv
hlt
mov
mov
cwde
jecxz
in
jle
and
mov
test
sub
enter
jmp
mov
pop
iret
popa
push
into
inc
or
lods
adc
cmp
popa
sub
es
add
pop
ds
or
in
sbb
push
hlt
pop
mov
sbb
add
aas
xor
jp
and
or
mov
je
and
adc
or
and
cmp
int3
xor
add
lock
pop
movs
repz
data16
jmp
ins
jne
inc
dec
cmc
lea
sub
and
lods
jb
sbb
cmp
jne
add
pop
lods
pusha
sub
xchg
aam
inc
xor
shl
test
add
adc
test
mov
inc
inc
shl
aad
mov
test
dec
loopne
nop
mov
shufps
imul
test
mov
bndstx
add
in
pop
scas
not
inc
mov
inc
out
or
add
xor
push
cmp
pop
call
rol
ficomp
xchg
xor
lods
jle
adc
push
sbb
push
loopne
xlat
sub
dec
dec
je
add
das
inc
sub
jo
mov
sub
and
jo
call
or
mov
ficom
shl
or
push
loopne
fcom
lods
ret
push
push
push
adc
(bad)
jle
movs
push
rcr
mov
jl
clc
lods
ins
test
stc
jle
jmp
inc
add
adc
adc
inc
add
icebp
sbb
loope
xor
iret
jl
sbb
xchg
inc
push
xor
movs
sbb
push
push
push
mov
xor
test
push
jo
add
test
repz
mov
pop
popa
add
(bad)
pop
clc
and
jae
pop
call
push
movs
fidiv
xchg
add
aam
push
or
outs
push
dec
outs
std
mov
loop
mov
outs
sub
pop
retf
cmps
mov
push
ret
movs
and
push
sub
enter
clc
mov
push
lods
aas
pop
fwait
outs
cmc
add
adc
out
inc
cmp
movs
push
sub
xchg
jmp
and
and
out
xlat
adc
(bad)
adc
inc
jo
mov
xchg
sub
jmp
movs
push
jl
pop
sbb
add
pop
je
ror
sub
mov
ds
xchg
fsubr
sub
cld
push
(bad)
xor
ds
and
mov
xchg
jmp
mov
add
scas
inc
pop
add
mov
ret
push
sub
ja
mov
sar
dec
sub
push
jmp
je
into
cmp
pop
pop
out
imul
sbb
mov
xor
call
lock
ss
xor
cmp
mov
in
cmp
push
xchg
add
repz
inc
cmps
jno
xchg
imul
loopne
ret
or
sub
loop
mov
movs
sub
jo
int
rol
leave
sbb
dec
clc
out
jg
pop
stos
mov
js
cmp
scas
cmp
mov
bound
sub
stos
mov
and
add
lock
inc
dec
inc
sub
cli
pusha
cli
dec
jle
leave
shl
add
stos
je
mov
pop
push
ds
sahf
(bad)
out
pop
sti
sbb
add
stos
inc
push
jl
stos
nop
inc
add
in
scas
pop
or
pop
mov
inc
push
mov
out
and
test
or
(bad)
cmp
shl
js
iret
and
jb
ss
lds
jno
sbb
das
int
xor
rol
ror
ficom
mov
adc
and
add
push
or
xor
pop
mov
in
test
pop
or
jb
jo
nop
das
imul
js
add
add
in
add
pop
or
rcr
adc
das
stos
add
push
pop
imul
mov
pop
mov
dec
dec
std
mov
test
or
cdq
cmp
setne
rcl
push
push
mov
rcl
ret
fistp
retf
je
or
sbb
jge
loop
inc
ret
cmp
sub
mov
pop
mov
repz
(bad)
pusha
inc
imul
lock
or
nop
adc
cmp
or
and
dec
mov
fld
add
popf
and
cmp
test
xor
jne
aaa
add
mov
adc
in
xchg
aas
pop
sub
les
and
imul
inc
pop
stos
mov
push
sub
mov
bound
or
mov
mov
or
jmp
or
adc
cwde
fistp
sbb
add
adc
cmp
pop
mov
xor
jne
mov
dec
ret
xchg
mov
mov
and
jmp
xor
jne
div
cmp
jne
mov
movs
(bad)
mov
pusha
mov
jg
xor
test
je
mov
mov
and
ret
fld
in
jbe
xlat
mov
icebp
adc
mov
enter
imul
ins
add
xchg
push
fcom
push
test
int3
div
xor
add
icebp
mov
mov
std
add
enter
push
fwait
hlt
or
mov
jne
test
xor
mov
sub
js
push
sbb
ja
cmp
int3
clc
jnp
push
(bad)
mov
shr
jecxz
ja
mov
sub
mov
int
cli
rcl
sahf
cli
push
addr16
lea
into
scas
adc
fadd
aad
add
mov
add
cmp
and
dec
push
lahf
xchg
mov
jmp
mov
xchg
repnz
les
rcr
ret
cmps
call
push
ja
pop
jl
cmp
or
cld
jae
jmp
and
or
je
(bad)
or
rcr
push
jno
sbb
mov
adc
call
pushf
sti
adc
pop
adc
(bad)
xor
xor
add
sub
inc
sbb
imul
sbb
sub
dec
cmp
xchg
test
popf
jns
or
mov
push
jmp
aam
mov
push
or
je
dec
fmul
add
add
mov
ds
mov
cmp
push
ss
jge
sbb
sbb
mov
xor
jnp
inc
loopne
and
(bad)
jmp
std
cmp
not
adc
clc
lahf
sbb
add
jbe
cli
test
cli
ret
mov
mov
jl
xor
sbb
or
pop
push
outs
arpl
int3
push
xor
pop
adc
jne
cmp
adc
mov
jge
adc
aam
ret
out
push
cmp
cmp
jmp
or
or
or
cmps
and
movs
daa
int
xor
mov
fdivr
add
push
dec
xor
dec
(bad)
fcomp
ret
xor
out
hlt
or
retf
mov
(bad)
and
or
imul
push
in
sub
add
mov
mov
fiadd
xor
and
jmp
ffree
mov
test
jne
mov
add
add
popa
push
mov
call
or
add
push
mov
mov
mov
cmc
mov
xor
push
xchg
push
hlt
or
jbe
pushf
or
add
xchg
mov
test
and
inc
mov
or
adc
mov
movs
hlt
test
nop
mov
push
dec
cmp
into
xchg
sub
inc
adc
jno
cmp
cmp
adc
test
cmps
retf
inc
dec
push
je
rcl
bswap
adc
pop
or
bound
arpl
fsubr
add
nop
sbb
push
test
je
jmp
or
je
enter
push
mov
sbb
inc
dec
adc
push
imul
pop
cmp
dec
push
(bad)
or
sub
or
sbb
adc
xor
adc
mov
mov
ins
push
into
mov
lods
loopne
pop
lock
and
inc
add
mov
mov
jge
cmp
ss
rcr
fdivr
cwde
xor
and
dec
out
cli
lods
sub
enter
jae
leave
inc
push
xor
js
pop
in
scas
popa
add
push
inc
jb
or
aaa
mov
adc
inc
xor
enter
jnp
dec
or
adc
sbb
mov
xchg
andnps
add
and
add
inc
add
or
push
or
in
pop
sub
pop
in
xchg
xchg
dec
and
cdq
and
dec
sbb
sub
jo
inc
fild
fwait
or
inc
cmovge
ret
inc
and
add
nop
pop
or
push
ins
mov
cld
call
inc
(bad)
push
pop
jmp
loope
repz
mov
hlt
or
repz
aam
es
loope
mov
aaa
aad
add
add
add
xchg
ror
push
fisubr
or
call
push
dec
fldenv
lock
dec
cmp
fimul
push
jns
out
push
adc
movs
jmp
out
loopne
jmp
rcl
out
add
add
mov
add
ins
fwait
pop
int
or
cs
in
push
hlt
repz
lahf
xlat
rcl
leave
or
push
mov
lock
jns
dec
xor
dec
rol
(bad)
ds
push
push
bound
in
fmul
add
push
es
or
push
add
mov
mov
mov
cmp
push
push
pop
popa
je
push
int3
mov
adc
add
add
add
aam
pop
jnp
adc
jo
jge
adc
xor
pushf
dec
add
addr16
sbb
add
rcl
mov
inc
outs
enter
jne
sbb
outs
sub
mov
mov
add
lods
adc
pop
cmps
sub
or
add
sbb
adc
push
mov
(bad)
pushf
push
push
adc
je
popa
sbb
mov
inc
xchg
add
or
pushf
cmp
add
lods
sub
xor
push
push
pop
rcr
push
mov
in
xchg
std
sub
imul
adc
pop
dec
lahf
loopne
movs
stc
int
sbb
push
or
outs
adc
or
imul
push
dec
sbb
fdiv
jne
inc
mov
sbb
adc
loopne
xchg
or
outs
add
adc
add
cdq
sahf
or
add
and
setb
sub
lahf
sub
push
mov
mov
push
xchg
call
mov
jno
mov
mov
sub
add
lahf
adc
push
and
mov
popf
and
jp
xor
and
inc
and
push
xchg
xor
das
aas
add
dec
add
push
test
jmp
sub
adc
mov
ss
push
fstp
or
push
push
daa
mov
pop
sbb
daa
scas
dec
inc
(bad)
(bad)
push
das
push
sub
call
mov
addps
js
adc
or
and
push
dec
stos
sti
cmp
lea
pop
hlt
mov
fwait
add
mov
and
aam
repz
lock
adc
and
div
mov
xor
dec
pop
xchg
pop
outs
or
mov
add
idiv
aaa
mov
dec
and
or
jne
sub
jg
daa
xor
jns
nop
retf
aaa
add
mov
push
mov
outs
dec
enter
arpl
ins
or
sbb
and
iret
jae
rcl
and
sbb
adc
xchg
add
adc
in
mov
cmp
adc
dec
fisttp
xchg
cmovbe
and
(bad)
fnstenv
cmp
or
inc
pop
push
add
add
jnp
dec
pop
dec
popa
leave
xchg
jmp
sub
in
inc
and
popf
(bad)
loopne
or
fs
sbb
xchg
rol
xchg
xor
inc
std
and
or
or
dec
loop
popa
xchg
movs
movs
les
jne
sbb
mov
cmp
pop
push
push
arpl
ror
ja
imul
add
pop
inc
sbb
adc
inc
shr
xor
dec
cmp
out
cwde
add
cmps
dec
mov
sbb
(bad)
push
xor
inc
pop
enter
mov
xor
lds
popa
sbb
test
imul
sub
sbb
(bad)
sbb
lea
adc
and
shl
jl
sbb
jl
scas
cwde
(bad)
or
or
mov
aam
add
mov
jns
nop
push
xor
add
pop
push
add
add
xor
add
jmp
cmp
test
setg
cmc
xor
ret
push
and
inc
std
sub
(bad)
rcl
hlt
xor
mov
fs
fld
ret
push
and
mov
or
sub
loope
xor
aad
call
cmp
push
lea
xor
nop
adc
idiv
cmovbe
cmp
push
xchg
add
push
push
mov
push
enter
adc
xchg
and
imul
sbb
popf
inc
sbb
push
(bad)
and
repnz
lods
loop
sbb
dec
pop
stos
xor
ins
sub
cs
add
and
mov
add
and
mov
rol
and
inc
add
dec
adc
iret
jae
mov
xor
or
mov
push
push
sbb
xor
mov
jo
movs
add
mov
call
in
push
mov
xlat
add
comiss
fcmovne
sbb
sub
shr
dec
imul
cwde
movs
test
and
cmp
sbb
add
dec
wbinvd
adc
retf
(bad)
mov
lods
push
sar
cmp
loopne
push
call
inc
cwde
outs
adc
rcr
mov
push
dec
sub
ret
dec
sub
push
lods
mov
clc
test
jo
inc
iret
stos
enter
cmp
push
imul
sub
push
sbb
retf
push
or
aas
data16
int3
rol
popf
jbe
jb
push
push
lock
(bad)
sbb
stos
add
push
pop
and
shr
push
add
cld
dec
enter
leave
add
push
push
ror
mov
pop
xchg
mov
and
adc
stos
xchg
xchg
pop
jmp
sub
sahf
fidiv
in
mov
sub
or
or
pop
lods
push
lea
ret
dec
or
inc
sbb
sbb
stos
mov
dec
pop
pop
mov
push
nop
inc
add
push
pop
dec
add
jge
ins
mov
scas
or
pop
fcom
jae
jle
jb
mov
lods
xor
add
push
sub
fsubr
pusha
push
push
add
and
nop
test
mov
and
add
push
ret
repz
add
nop
inc
sbb
pusha
add
inc
dec
mov
dec
dec
ins
loopne
dec
xchg
pop
push
add
or
sub
cmp
nop
cmp
inc
dec
jg
cs
dec
loop
fistp
cmp
sti
jmp
call
cmp
mov
aas
mov
inc
xchg
add
std
pop
mov
add
cmp
add
push
inc
push
push
loope
(bad)
xchg
adc
mov
add
sub
or
adc
or
outs
lds
call
cmp
movs
lods
movs
inc
add
add
pop
sub
shr
adc
fmul
lock
or
sbb
sbb
cdq
adc
jmp
sub
mov
pop
shl
jl
mov
xor
(bad)
ret
push
or
add
inc
pusha
adc
jb
in
xchg
mov
push
dec
ss
pushf
and
je
lea
or
popf
jno
dec
push
sti
add
lea
pop
mov
cmp
ss
ret
lea
in
jns
adc
mov
mov
push
or
sbb
mov
mov
inc
sbb
imul
pop
mov
dec
inc
(bad)
jl
fsubr
or
or
test
push
js
adc
or
cmc
xchg
mov
scas
mov
ror
push
ins
push
mov
mov
test
ds
push
push
inc
imul
mov
mov
jnp
outs
mov
cmp
adc
mov
jecxz
ret
push
mov
test
pop
add
ins
push
inc
fs
inc
pop
mov
sbb
cmp
dec
movs
(bad)
cmc
inc
imul
push
sti
daa
std
dec
add
add
push
mov
push
xor
fiadd
call
movs
call
mov
arpl
(bad)
cwd
fimul
loopne
xor
and
dec
rol
add
mov
or
and
retf
add
add
gs
push
adc
fs
pusha
add
jge
call
test
pop
sbb
add
adc
push
push
stc
or
test
shr
(bad)
sub
jmp
or
mov
jmp
sub
mov
add
(bad)
xor
xchg
fnstenv
adc
lahf
cmp
and
lods
push
push
gs
xor
push
pop
pop
dec
retf
adc
jae
clc
stc
adc
mov
cmp
je
or
add
je
in
mov
push
mov
in
xor
scas
loopne
clc
add
sbb
add
fs
es
fwait
cmp
mov
jno
nop
call
mov
inc
push
and
xor
push
add
ret
pop
mov
popf
ss
inc
inc
or
xor
push
inc
dec
aas
jae
pop
cmp
cmp
add
add
inc
ss
add
dec
add
mov
xchg
sub
jle
add
lea
mov
mov
sar
dec
(bad)
jmp
sti
lahf
fwait
cmp
add
sbb
sbb
imul
sub
dec
push
add
inc
dec
inc
mov
cmps
imul
fs
push
jo
jle
push
jecxz
push
add
xchg
xor
fwait
rol
mov
nop
(bad)
cmp
leave
add
inc
push
fisttp
or
cli
popa
or
inc
out
pop
fcmovb
sahf
cmp
mov
dec
push
mov
or
push
jae
lea
jb
mov
and
sbb
dec
leave
inc
push
aad
push
test
sub
ret
inc
mov
mov
ret
inc
xchg
and
jp
ins
inc
xchg
popa
push
aam
mov
inc
or
pop
push
or
test
mov
push
rcl
lea
dec
cmp
or
cmp
ror
push
cmp
into
mov
adc
sti
ret
lods
cmp
fild
loopne
push
inc
in
push
jle
or
shl
gs
aas
xchg
cwde
cmp
mov
pop
xor
add
rcl
(bad)
cs
cmp
int3
das
cdq
mov
imul
jp
popf
add
push
aad
int3
sbb
jae
push
push
pusha
push
xor
dec
add
pop
shr
xchg
cmp
xor
pop
mov
xchg
jle
mov
sar
shl
pop
pop
mov
add
shl
mov
inc
mov
add
ret
je
push
lods
das
call
stos
adc
mov
mov
call
nop
add
test
ret
cdq
sbb
ret
ss
clc
mov
arpl
popa
jecxz
dec
inc
jns
add
add
das
iret
test
ds
jo
sbb
push
mov
xor
in
out
dec
ss
std
js
sub
ret
push
adc
pop
adc
inc
out
jns
shl
add
sbb
xor
outs
aas
jge
mov
mov
adc
jg
cdq
mov
lods
xchg
outs
jo
add
adc
mov
inc
jns
or
mov
or
dec
cmp
js
aas
int3
aaa
pop
or
push
add
jmp
push
inc
inc
(bad)
mov
mov
adc
test
out
cmp
xor
add
repz
cmps
inc
mov
call
bswap
inc
xor
add
mov
movs
mov
adc
nop
dec
repz
cld
dec
mov
loopne
push
pop
mov
mov
inc
xor
or
test
mov
dec
xlat
xchg
stc
push
movs
outs
push
bound
scas
pop
jo
cwde
add
mov
mov
pop
lods
(bad)
push
out
mov
mov
sbb
add
mov
clc
and
inc
push
push
and
push
sbb
xchg
push
jge
pop
adc
mov
outs
sbb
adc
push
sbb
inc
sti
cmp
jne
test
ins
cmp
mov
xchg
or
xor
mov
mov
adc
(bad)
cmp
cmp
push
into
movs
mov
stos
add
adc
data16
pop
aas
mov
push
jmp
inc
adc
jmp
iret
jmp
mov
cdq
test
ror
xor
lock
dec
push
dec
sbb
cmp
push
xlat
pop
mov
(bad)
fwait
(bad)
into
or
mov
repnz
mov
mov
hlt
mov
sub
dec
dec
add
xor
push
(bad)
clc
push
xchg
stos
add
lods
bound
or
mov
outs
pop
xchg
jne
and
int
jo
cmp
sbb
movs
pushf
add
fst
pushf
xor
pop
and
dec
shl
sbb
push
shl
and
aam
xor
sub
sub
call
xor
mov
mov
pop
xor
cmp
cmp
inc
inc
inc
lea
dec
add
xor
push
and
cmps
push
pop
pop
push
inc
fist
jb
rol
or
outs
mov
(bad)
fmul
loope
jmp
sub
add
imul
adc
fwait
les
add
push
jo
mov
sub
add
and
add
add
pop
inc
inc
and
mov
shr
stos
aaa
sar
scas
xor
adc
and
pushf
mov
add
push
aam
and
dec
out
in
gs
mov
add
lea
push
or
mov
loope
push
and
nop
mov
or
daa
movs
sbb
cmc
inc
add
push
push
or
fistp
pop
inc
cli
mov
out
lea
push
arpl
mov
pop
cdq
mov
sub
neg
xchg
mov
xchg
cmp
adc
sbb
mov
mov
lods
push
dec
inc
fiadd
inc
push
pop
lods
rcr
mov
mov
dec
push
and
or
adc
add
adc
mov
or
dec
inc
add
push
(bad)
clc
sbb
add
jmp
pop
dec
sbb
inc
arpl
out
cmp
lock
dec
lds
push
test
add
sbb
or
and
add
pop
or
sub
or
or
sbb
add
andps
xor
arpl
(bad)
sub
lahf
mov
sahf
xor
xor
dec
call
mov
stc
(bad)
or
shr
in
lock
dec
cmp
mov
sbb
mov
jge
and
adc
sti
cmp
mov
idiv
data16
arpl
(bad)
aas
mov
fwait
ror
xchg
(bad)
dec
xor
add
add
and
vmwrite
pushf
jo
push
push
push
dec
inc
dec
ss
test
xchg
pop
mov
jns
stos
ret
sub
sbb
imul
out
push
std
adc
push
push
add
inc
loope
sbb
inc
int
push
sbb
lock
xor
ja
add
sbb
push
push
sbb
pop
sub
test
sar
lock
or
(bad)
mov
das
or
and
push
leave
pop
cs
retf
jecxz
xchg
cwde
pushf
retf
in
mov
test
adc
shr
mov
in
jg
add
and
cmp
je
xor
adc
sub
sbb
es
lds
push
sbb
mov
icebp
cld
loope
dec
xchg
dec
xor
mov
jns
cmp
xor
and
ins
and
pusha
pop
xor
cmp
dec
popf
add
outs
ja
retf
pop
push
daa
(bad)
or
rol
into
and
and
xor
and
int
push
inc
fcom
scas
inc
push
shl
sbb
mov
mov
(bad)
out
test
sub
add
into
bound
movs
inc
ror
into
sti
jmp
and
sub
fiadd
aas
out
and
or
aas
mov
fisub
inc
out
cdq
push
push
dec
sahf
out
sahf
dec
push
push
pop
pop
pusha
lods
sets
sbb
xchg
cmp
iret
adc
in
xor
inc
add
popa
sbb
pop
fcomp
pop
stos
inc
shl
jmp
xlat
add
or
enter
jns
mov
int3
or
mov
and
inc
inc
pop
xchg
pop
std
xor
mov
pushf
sub
sub
int3
cwde
fdivr
bound
cmps
and
jae
jae
dec
lods
xor
lods
cmp
into
pop
(bad)
pop
inc
xchg
lods
aaa
mov
(bad)
push
push
scas
pop
movs
add
lea
inc
sbb
push
xor
sub
out
jl
call
push
mov
ret
fimul
inc
jmp
pop
jnp
cdq
bound
fs
adc
test
dec
or
add
les
ficom
hlt
push
dec
sub
dec
add
jo
mov
icebp
inc
shl
cdq
inc
ret
mov
bound
add
iret
jle
add
shr
mov
dec
or
xor
rcl
mov
loop
test
inc
mov
mov
adc
xor
push
inc
fist
sahf
int3
adc
push
popa
test
dec
mov
cmps
fbstp
js
jge
scas
cmp
mov
dec
loope
enter
inc
cmp
je
push
movs
xor
daa
add
aaa
rcl
adc
lsl
inc
xor
dec
out
xchg
and
stos
inc
cwde
into
pushf
mov
call
sbb
mov
rcr
popa
and
jno
and
pop
mov
xchg
aas
or
sbb
pop
xchg
adc
add
pop
fisub
or
push
rol
push
xor
mov
or
lahf
or
ret
test
or
add
cmps
sub
rcl
lea
or
and
stos
shr
cmps
mov
sbb
(bad)
cdq
jno
test
ret
lock
sub
dec
mov
popa
adc
mov
fsubr
(bad)
sub
mov
push
shr
push
sbb
jg
cdq
inc
cmc
sbb
sub
leave
fmul
(bad)
jnp
xor
pop
das
push
mov
push
call
push
push
add
and
add
add
popf
adc
adc
push
inc
or
lahf
jge
fst
sbb
movs
cmp
lods
dec
mov
sbb
stos
movs
xchg
add
lea
dec
xchg
mov
std
xchg
ja
shl
dec
je
aam
dec
in
inc
jmp
loopne
sub
pop
clc
xchg
and
mov
or
add
inc
cmp
mov
push
out
inc
xchg
dec
jbe
jns
imul
push
push
or
loopne
(bad)
cli
test
or
and
and
add
and
out
sar
and
add
cmps
cmp
das
int
add
jno
ret
push
pop
test
aaa
int3
adc
ss
mov
cmp
jae
in
pop
iret
xchg
cmp
xor
push
(bad)
sbb
jnp
sub
mov
mov
ret
push
mov
sub
test
jp
rcr
rep
inc
sbb
jmp
cli
clc
test
and
sub
adc
repz
sub
sbb
or
xor
arpl
mov
xor
push
adc
mov
xor
push
push
xchg
mov
mov
or
imul
cmp
adc
dec
in
mov
inc
jae
push
es
mov
inc
and
arpl
mov
mov
ins
push
leave
inc
test
pop
and
pop
push
out
dec
and
mov
jmp
dec
cwde
ds
and
adc
inc
pushf
xor
sbb
icebp
test
call
or
push
push
and
push
xlat
inc
mov
mov
jp
or
or
fiadd
pop
dec
mov
ret
jl
pop
push
fimul
cmp
sub
mov
cmp
(bad)
dec
add
dec
xor
dec
sbb
call
or
out
pop
cmp
mov
outs
dec
outs
inc
and
call
pusha
and
icebp
push
mov
or
sub
or
adc
or
mov
add
ja
shr
mov
jge
dec
inc
js
scas
and
rcr
sub
aas
push
jle
mov
mov
ja
dec
mov
push
loope
add
rcr
jl
push
adc
add
outs
dec
push
cmp
retf
inc
inc
cmp
jge
dec
or
mov
xor
out
push
add
dec
adc
dec
test
push
mov
shr
retf
or
or
(bad)
and
lea
aad
pop
inc
jge
xchg
sar
daa
dec
pop
xchg
pop
data16
jle
or
sub
pop
push
ret
add
jle
sub
and
not
mov
fisttp
(bad)
hlt
sbb
and
push
jmp
les
sbb
push
outs
adc
xchg
je
pop
sub
pop
or
or
imul
and
jns
push
jmp
pop
xlat
dec
xchg
and
sub
outs
mov
sub
mov
lahf
ret
push
push
loopne
mov
pop
mov
(bad)
stc
icebp
aaa
pop
test
pop
push
add
arpl
or
push
adc
ret
sbb
cs
lock
in
xor
cmp
dec
sbb
jns
loope
jbe
in
sti
lea
or
add
test
cmp
and
sub
fcom
das
stos
or
inc
jbe
in
sub
nop
adc
div
stc
mov
cdq
and
fcom
shl
(bad)
(bad)
pop
stos
gs
push
push
ret
ins
ja
fisub
cdq
je
pop
and
gs
sbb
or
pop
out
dec
fbstp
mov
stos
into
lds
pop
or
jnp
test
sub
test
mov
test
mov
popf
sbb
jge
ret
sub
pop
add
cmp
mov
nop
shl
dec
mov
ds
cmps
push
or
mov
mov
les
fwait
sub
push
xor
and
xchg
nop
jae
xor
lock
sbb
(bad)
mov
test
mov
push
push
add
and
fsubr
add
xchg
rol
or
sub
call
xor
out
mov
mov
arpl
mov
sti
mov
add
imul
nop
sar
and
nop
ret
cmp
push
jb
les
fwait
push
popf
push
or
sub
cmp
faddp
dec
test
mov
or
leave
enter
cmp
dec
cmps
mov
push
test
or
cmp
fadd
popa
mov
adc
xor
rcr
pop
cmp
ss
or
sbb
xchg
out
imul
sbb
jb
cs
pop
sbb
xchg
sbb
push
imul
push
hlt
fbld
mov
fdivp
clc
cmps
pop
call
sbb
inc
xchg
and
leave
sbb
sub
mov
sbb
mov
dec
inc
lea
inc
sbb
push
add
jne
stc
cmp
cmp
mov
fadd
mov
sub
rol
adc
jne
sub
mov
add
fstp
mov
mov
jle
mov
popf
outs
jg
sub
jbe
nop
jg
adc
push
sbb
pop
int
dec
sbb
adc
mov
ins
adc
ins
sbb
adc
pop
pop
mov
pop
pop
pop
movs
mov
or
lock
aas
popf
sub
in
xlat
clc
push
mov
lahf
js
shl
add
and
xor
mov
mov
loop
sbb
outs
jne
xor
xor
dec
adc
pop
cdq
hlt
mov
sub
mov
sar
adc
cmc
xlat
pop
mov
push
adc
je
enter
push
fnstsw
push
jp
jp
or
ja
lea
mov
test
and
ss
mov
mov
cmp
imul
or
jno
xchg
and
mov
test
xchg
mov
mov
inc
call
push
adc
jne
xchg
fadd
push
jp
push
or
adc
hlt
test
int
push
cmp
xchg
fistp
int3
sar
daa
test
ins
or
mov
mov
adc
push
xchg
lock
pop
fild
push
test
sbb
pop
mov
and
mov
(bad)
cwde
push
jmp
movs
out
loope
push
xor
bound
call
jge
push
in
add
mov
nop
adc
add
dec
cmp
mov
sub
add
add
inc
jnp
lock
jns
aaa
sub
xchg
mov
dec
xchg
mov
add
push
or
add
dec
neg
sub
inc
push
mov
inc
sbb
retf
push
js
ret
int3
mov
xchg
pop
dec
jmp
inc
pop
adc
cmp
dec
xchg
(bad)
jo
jo
sub
xor
xchg
and
pop
adc
test
aam
xchg
mov
push
outs
cmp
mov
mov
je
jle
mov
jle
add
xor
gs
mov
push
fdiv
mov
daa
sbb
test
hlt
dec
mov
in
ins
hlt
cmp
out
mov
in
mov
ret
fimul
inc
cmp
jl
push
pop
inc
mov
or
sbb
mov
test
cmp
adc
(bad)
and
xor
cdq
inc
adc
inc
retf
enter
bswap
jae
add
adc
cmp
dec
xchg
fiadd
dec
lods
add
std
les
mov
push
jmp
in
int3
jne
jp
fs
je
nop
adc
mov
rcl
fcomp
add
jle
pop
inc
fdivr
push
add
pop
or
jg
ret
mov
add
or
aas
pusha
sub
pop
push
or
xor
sbb
je
adc
sbb
lea
rcr
add
push
pop
or
addr16
(bad)
and
and
fsub
dec
adc
(bad)
dec
and
adc
fs
add
rcl
lock
mov
add
inc
sbb
movs
wbinvd
cli
push
sub
sti
sub
mov
fadd
mov
iret
retf
inc
jge
(bad)
lods
pop
shl
aaa
cdq
xchg
or
push
sahf
add
pop
add
pop
or
aas
sub
lods
and
jne
cmps
add
push
jnp
sub
sub
mov
inc
sbb
add
loopne
pushf
xchg
(bad)
mov
pop
adc
shl
inc
sbb
test
adc
clc
mov
sub
or
xchg
lea
add
add
loop
pop
leave
cmp
inc
or
xor
popf
mov
pop
jl
fld
in
out
and
sbb
jmp
push
mov
cmp
por
icebp
and
mov
(bad)
jne
movs
repnz
inc
sbb
cmp
jecxz
jle
rol
sub
or
jno
push
pop
push
jne
stc
and
icebp
or
add
jb
clc
cmps
fsubr
lahf
not
add
pop
in
(bad)
jns
out
inc
imul
movs
xchg
mov
pop
push
sbb
xchg
adc
ret
mov
push
inc
retf
jbe
adc
push
mov
cmp
sub
adc
(bad)
inc
out
mov
das
inc
jmp
out
xor
in
cwde
loopne
mov
lock
or
ficom
push
or
xchg
pop
adc
pop
adc
mov
dec
jb
ss
push
lock
inc
add
fdivr
xchg
push
stc
xor
push
es
add
or
jne
pop
sar
imul
mov
push
and
into
push
pop
out
mov
push
fldenv
adc
mov
mov
fadd
cmp
jne
inc
mov
xchg
and
call
mov
push
xor
(bad)
imul
xor
mov
dec
or
cmp
mov
sbb
jmp
jb
call
add
dec
cld
adc
pop
sbb
cmp
inc
sbb
or
outs
repz
test
pop
and
mov
call
pop
add
lea
add
mov
(bad)
sbb
and
sub
xor
mov
inc
stos
jo
and
and
push
inc
fisubr
inc
or
or
cmp
cmp
push
or
nop
and
dec
jbe
dec
push
ss
jl
cmp
test
(bad)
fidiv
retf
ret
cmp
loopne
push
push
fs
cmps
push
jbe
sahf
stos
push
ret
mov
xor
cmp
push
pop
scas
and
rcl
inc
dec
bound
pop
lea
push
adc
push
sub
or
les
jne
adc
xchg
adc
sub
ss
lea
imul
xchg
pop
jnp
inc
dec
push
cs
adc
or
enter
sbb
lea
sbb
out
outs
loopne
pusha
aam
arpl
xor
and
cld
pop
xor
enter
pop
ins
or
inc
stc
mov
enter
ficomp
cs
inc
sbb
data16
mov
arpl
aam
je
and
pusha
dec
(bad)
loop
xchg
daa
repnz
adc
cmp
dec
shl
gs
lock
dec
sub
ja
push
outs
xor
je
pop
ret
add
jp
or
js
xor
inc
sbb
push
and
xor
or
(bad)
out
pop
push
movs
pop
or
jge
dec
dec
ins
dec
jmp
xlat
pushf
xchg
xchg
popa
loopne
retf
inc
sbb
and
add
dec
test
retf
shl
sbb
or
or
stos
add
gs
call
std
mov
xlat
pusha
cmp
loopne
xchg
push
jb
pop
add
xor
xor
xchg
popf
pop
das
sbb
jp
ud2
outs
sbb
ins
dec
adc
sub
push
or
mov
jecxz
or
mov
jmp
enter
pop
inc
adc
inc
push
out
push
dec
and
inc
mov
add
add
out
xor
sbb
inc
mov
(bad)
dec
clc
mov
add
jo
or
add
add
xor
push
imul
js
and
and
or
add
push
jle
nop
inc
and
mov
add
add
cmps
push
jo
(bad)
sub
mov
cmp
js
jnp
or
xor
fisttp
and
cmp
add
sub
or
sbb
jnp
and
js
sbb
jl
mov
retf
mov
sub
sub
xchg
push
out
fdiv
in
ss
mov
jge
inc
sbb
xchg
shld
mov
or
jg
dec
sar
hlt
cmp
add
push
pop
fcmovb
xchg
fadd
mov
data16
(bad)
and
into
cmp
je
sub
sbb
lahf
rcr
mov
lods
cld
in
xchg
into
sub
test
mov
inc
add
pop
pop
cli
leave
in
mov
push
jne
jmp
aaa
std
fidivr
and
cmp
and
xchg
fstp
pushf
cmp
sbb
mov
add
and
aam
mov
fld
mov
dec
add
out
sub
clc
pop
(bad)
pop
add
xchg
lock
xchg
inc
or
outs
add
push
enter
fcomp
div
push
dec
add
(bad)
inc
clc
sub
(bad)
add
push
push
xor
or
arpl
dec
jne
mov
lods
outs
inc
test
jl
inc
mov
cmp
jmp
cmp
push
sbb
push
scas
dec
dec
push
and
mov
and
and
pop
add
mov
mov
xchg
push
inc
pand
xor
gs
pop
xchg
jle
test
arpl
dec
jmp
fs
xchg
and
push
retf
inc
dec
sbb
xchg
jmp
jo
pop
sub
int3
add
mov
dec
es
adc
xchg
sub
or
je
adc
ret
dec
js
cmps
mov
stos
adc
xor
jmp
dec
shr
pop
cmp
es
xchg
cs
fild
aam
add
rcr
jb
and
fld
movs
test
add
sub
shl
mov
or
xor
fist
fwait
push
test
icebp
pusha
adc
and
push
iret
add
das
push
pop
push
pusha
mov
sub
outs
hlt
xor
pop
sbb
sbb
rol
retf
add
add
push
nop
or
mov
pop
daa
pop
or
gs
movs
cmp
mov
xor
jne
mov
das
add
or
popa
or
sahf
inc
mov
loope
ja
push
cmp
mov
shr
mov
push
in
jmp
add
mov
sub
pop
mov
xlat
or
push
cmp
or
lea
sbb
xchg
add
add
ret
repz
cmp
sub
pop
mov
(bad)
push
push
xchg
out
dec
mov
mov
dec
xchg
ror
test
adc
movs
and
dec
dec
jne
adc
jne
or
movs
cmp
movs
out
or
xlat
je
pop
ss
push
sub
in
or
sub
dec
cwde
and
jnp
mov
adc
xchg
mov
mov
pop
xor
les
pop
ins
sbb
nop
xchg
lods
repnz
clc
dec
gs
sub
mov
jl
(bad)
xchg
cmp
inc
cmp
xor
push
mov
(bad)
sti
es
repz
repz
adc
and
mov
xor
imul
jne
sbb
mov
dec
mov
cmps
adc
ins
jnp
sar
or
add
jl
addr16
inc
and
cs
repz
rcl
mov
sbb
sbb
adc
call
inc
mov
ins
outs
into
ror
std
or
push
and
es
adc
data16
inc
test
mov
push
out
add
jbe
sbb
add
call
or
movs
jne
mov
or
nop
push
mov
inc
and
cmp
sub
jmp
sbb
inc
pop
sbb
pop
add
pop
adc
mov
or
nop
cmps
mov
add
mov
cmp
xor
mov
out
xor
xor
adc
dec
xor
mov
mov
mov
cmps
out
xchg
and
gs
sbb
inc
sub
mov
sbb
leave
dec
retf
and
jno
mov
ja
shl
xchg
xor
xor
push
xor
push
push
jo
aaa
in
mov
ret
movs
test
sahf
dec
xor
dec
dec
inc
pop
add
call
mov
test
das
push
ror
jle
test
push
jne
or
push
sub
das
jmp
adc
sbb
mov
add
sub
imul
mov
push
mov
pop
and
sbb
pop
dec
(bad)
inc
dec
ins
outs
push
mov
and
sbb
inc
xor
iret
push
xchg
fcom
data16
jg
ret
nop
mov
push
push
jg
shr
push
in
push
xor
jns
iret
test
push
pop
mov
pop
add
or
add
lods
cld
or
sahf
mov
inc
jg
push
xor
sbb
add
adc
xchg
mov
lods
cmp
ror
femms
inc
xchg
cmps
rcl
or
adc
movs
test
sbb
sub
adc
and
sbb
loope
pop
lds
cmp
aam
mov
push
pop
push
loopne
or
popa
push
shr
in
or
xor
add
dec
pusha
or
lahf
fidivr
ss
cld
add
cmp
fist
or
fist
hlt
mov
popf
jmp
mov
out
and
sbb
icebp
mov
inc
or
retf
or
or
jp
xor
jne
xchg
div
mov
sbb
xlat
loope
add
adc
in
cmp
(bad)
inc
in
add
mov
add
push
int3
pop
aam
les
dec
nop
adc
mov
imul
ror
leave
mov
dec
sub
or
sbb
xchg
adc
adc
sbb
retf
or
imul
jne
ss
mov
mov
bound
(bad)
dec
jl
adc
pop
or
loope
jnp
mov
dec
rcl
es
push
push
das
mov
in
les
push
mov
(bad)
xor
and
mov
xchg
mov
adc
mov
or
dec
sub
sbb
and
xlat
mov
add
dec
xor
cmp
xchg
or
je
push
dec
xor
dec
sub
loopne
push
push
inc
mov
shl
push
add
lea
mov
fmul
mov
movs
mov
add
push
add
cmp
(bad)
inc
or
les
adc
or
ins
ins
cmp
mov
mov
xchg
mov
push
and
sub
add
push
dec
jb
or
push
mov
inc
push
je
sbb
push
jo
pop
movnti
ror
cs
fsubr
pop
or
push
leave
shl
sbb
arpl
inc
inc
adc
sbb
ret
inc
lods
inc
std
pusha
adc
test
pop
push
add
fcmovnu
cli
enter
xor
adc
dec
xor
or
adc
inc
and
sub
jno
ins
shr
inc
sahf
lods
inc
je
aad
scas
and
cmp
aam
ss
inc
mov
push
lock
pop
call
pop
jne
add
rol
push
or
sbb
es
or
out
lock
lds
sbb
jns
push
jne
mov
sub
jp
ret
xor
push
xor
mov
inc
shl
add
in
dec
and
sub
or
mov
test
or
cmp
mov
and
add
fadd
xor
enter
test
jmp
mov
or
and
add
add
icebp
sub
push
dec
inc
jno
and
push
in
adc
pop
stos
jge
push
push
sbb
cmp
jl
cmp
xor
push
and
push
call
ret
sbb
sub
inc
or
sbb
lock
lea
push
sbb
call
sub
xor
mov
mov
out
(bad)
daa
sbb
pop
mov
sbb
pop
call
or
sub
nop
loope
push
adc
push
(bad)
cmp
sub
adc
mov
jbe
js
aam
rcl
push
cmps
mov
push
cdq
add
fsub
inc
xor
int3
add
(bad)
adc
shr
adc
data16
stos
orps
test
fstp
sbb
add
retf
cmps
stc
lods
pop
bswap
push
or
mov
cmps
lods
sahf
xor
pop
lds
adc
and
test
sbb
sbb
adc
adc
inc
push
ds
imul
mov
ins
cmp
fadd
bound
int
ret
mov
repnz
add
add
add
add
add
mov
or
or
cmp
pop
les
jmp
jp
mov
inc
sub
dec
xor
xor
xor
sbb
rcl
xchg
add
loope
lods
or
adc
add
cmp
loop
(bad)
mov
mov
fadd
adc
push
push
jmp
xor
imul
test
int3
sbb
pop
dec
movs
and
and
loope
cdq
mov
sbb
and
push
and
inc
out
dec
adc
xchg
in
mov
daa
mov
fiadd
push
inc
ror
cmp
in
hlt
sub
cli
fstp
push
enter
mov
adc
push
in
(bad)
pop
add
aaa
cmc
movs
nop
jnp
into
test
and
or
cwde
sar
xchg
fnstsw
or
push
mov
or
jge
and
dec
xor
jl
xor
ds
or
pop
test
mov
push
sbb
clc
push
shr
pop
and
call
xchg
out
mov
outs
cmp
add
fistp
test
pushf
stc
jmp
(bad)
push
mov
add
or
xchg
or
sub
pop
sub
call
mov
adc
cwde
arpl
ins
icebp
pusha
add
and
xchg
jl
jmp
test
ja
outs
adc
push
daa
add
pop
jno
push
xor
sub
or
push
adc
test
inc
sbb
or
pop
xchg
retf
cli
xor
mov
or
mov
nop
mov
xchg
mov
add
add
and
xor
cmp
inc
push
push
and
test
and
push
cmp
sbb
mov
call
and
inc
xchg
push
pop
lods
fwait
sbb
xor
push
inc
mov
in
sbb
pop
inc
add
inc
adc
push
jo
or
mov
or
mov
jb
adc
xor
mov
and
out
out
dec
div
adc
call
add
stos
loopne
sbb
mov
mov
pop
cwde
sbb
mov
in
xor
jecxz
cwde
mov
ds
test
and
add
sbb
addr16
add
add
rol
in
hlt
cmp
jae
pusha
cwde
test
push
adc
sub
movs
sbb
jno
test
and
ret
test
and
movs
imul
and
and
add
push
dec
and
or
xchg
dec
cwde
push
call
pop
push
add
or
adc
test
push
or
outs
(bad)
out
push
aad
(bad)
fild
jmp
push
cmp
or
pusha
sub
or
push
mov
lahf
pop
sbb
imul
sbb
retf
gs
outs
fnstsw
push
fadd
push
push
or
adc
sbb
sub
cmp
pop
adc
test
sub
sub
and
jo
xchg
inc
inc
outs
mov
lea
mov
or
and
mov
push
in
xchg
js
inc
stos
push
in
mul
or
sub
adc
fcmovb
jle
mov
pop
fdivr
ret
in
sar
ret
mov
sub
shl
xchg
adc
rcl
dec
sar
outs
retf
ret
mov
in
xchg
add
in
mov
dec
pop
adc
iret
adc
and
sbb
pop
mov
mov
jbe
dec
ret
pop
test
sub
icebp
cs
test
fwait
call
push
jmp
arpl
add
fwait
mov
add
fcom
fldenv
dec
and
or
mov
dec
loop
fwait
and
pop
outs
pop
fimul
or
(bad)
or
and
mov
push
push
in
sti
xchg
ss
push
jmp
ret
mov
jno
cmp
mov
or
mov
and
xor
adc
test
fwait
cmp
inc
test
(bad)
mov
popa
mov
sbb
mov
sbb
mov
push
lods
ficom
cmp
stos
leave
dec
adc
inc
in
idiv
add
fdiv
aaa
add
inc
xchg
xchg
call
outs
adc
cmp
push
sub
cs
div
jne
fxch
inc
xor
bswap
add
int
imul
mov
mov
adc
pop
or
push
test
and
mov
push
enter
sub
mov
lock
push
mov
or
nop
cli
div
push
push
inc
mov
and
dec
je
dec
jne
cwde
es
call
push
mov
pop
or
jmp
rcl
clc
push
ja
sbb
outs
ins
mov
cmp
jns
sub
rol
push
out
xor
(bad)
mov
pusha
xor
xor
sub
fcmovnu
rcl
push
pop
enter
mov
fadd
xchg
jge
out
daa
xor
add
rol
xor
jo
dec
jo
adc
daa
jmp
inc
push
push
sbb
lods
pop
add
jne
mov
sub
pop
jp
xchg
inc
jl
xchg
js
or
std
xor
retf
xchg
mov
outs
fld
cli
add
rcr
repz
outs
iret
repz
xor
enter
add
cmp
mov
stos
or
inc
sbb
test
inc
jge
push
outs
or
ret
nop
int3
and
inc
sbb
sub
clc
iret
sbb
add
or
pop
mov
out
and
or
push
push
inc
xchg
cmc
sbb
xchg
inc
out
lock
mov
or
push
mov
adc
or
outs
stos
push
repz
mov
add
fnstenv
cmp
xor
lock
popa
int3
xor
push
and
out
out
loop
rcl
xor
dec
jno
pop
push
jae
dec
xchg
daa
mov
jns
outs
mov
mov
push
in
mov
test
addr16
xor
push
push
pop
jnp
mov
add
pop
jle
stos
xchg
ins
jl
lock
push
xchg
call
pop
jge
or
leave
jl
shl
mov
pusha
mov
jp
sbb
cmps
repz
xchg
xor
jecxz
cmp
xor
or
sbb
cmp
adc
add
add
test
inc
nop
push
arpl
ins
add
js
pusha
mov
inc
sbb
out
fldcw
xchg
dec
xor
test
jb
ret
xchg
lea
sbb
pop
es
inc
add
(bad)
xlat
mov
mov
cli
outs
xor
lods
mov
jl
add
mov
test
adc
xlat
daa
sub
add
sub
aaa
xor
fisub
inc
lahf
stos
or
dec
jmp
fld
dec
mov
out
sbb
arpl
dec
jl
mov
xchg
cmps
xor
jmp
rol
aam
xor
(bad)
pop
push
cmp
jo
imul
mov
test
mov
or
sbb
mov
loop
rcl
in
push
inc
push
adc
arpl
inc
arpl
cmp
lahf
leave
jle
cmp
es
xor
sub
jns
repz
(bad)
cli
pop
sti
mov
push
cmp
mov
iret
pop
gs
lea
push
adc
inc
jmp
adc
and
cwde
adc
adc
or
xor
ss
sub
cmps
mov
test
mov
(bad)
mov
jmp
lahf
inc
inc
test
jge
adc
pop
lds
and
push
xchg
cmp
xchg
std
sahf
cmp
inc
add
icebp
pop
pusha
pop
dec
or
lods
jle
add
sahf
shl
mov
rol
ficomp
sbb
inc
sbb
sub
inc
mov
js
pop
adc
dec
sbb
sbb
lea
mov
dec
(bad)
cmp
aam
adc
push
jbe
jo
add
test
or
lahf
adc
bound
or
inc
js
test
or
fs
scas
sbb
je
or
leave
(bad)
mov
push
push
sbb
pusha
dec
fsub
or
inc
or
add
inc
adc
push
xchg
nop
in
add
jae
mov
repz
or
xchg
fstp
iret
leave
or
fistp
jge
out
arpl
(bad)
fdivrp
daa
dec
jmp
mov
xor
or
cmp
or
fstp
and
test
pop
dec
pop
lea
test
push
adc
fistp
popa
loop
push
adc
scas
fisttp
adc
pop
adc
lea
(bad)
or
pop
vmovmskps
jmp
cmp
je
mov
mov
sub
aas
cwde
add
sub
push
imul
mov
mov
and
pop
adc
mov
ret
or
js
jge
out
cmp
and
outs
add
jns
pop
push
das
inc
push
js
sahf
div
lds
mov
pop
shl
std
sub
push
jno
cmp
loope
push
mov
or
push
push
test
sbb
pushf
or
sbb
sbb
and
and
xchg
and
ja
push
mov
xchg
jno
jnp
mov
and
inc
and
out
xor
mov
xchg
adc
lock
cmp
inc
add
arpl
ins
pop
test
iret
repz
arpl
push
jno
jg
call
in
aam
icebp
adc
jbe
enter
dec
push
and
push
cmp
mov
mov
add
and
ins
and
and
pop
in
push
mov
cmp
push
push
out
push
ret
and
xor
cmp
inc
or
fcomp
fiadd
inc
lea
fcom
adc
xor
push
mov
xor
add
push
pop
nop
jp
dec
jmp
arpl
push
mov
jb
dec
rcl
adc
mov
push
push
lods
imul
inc
cmp
inc
rcl
movups
jmp
push
cmp
inc
or
enter
jg
movs
popf
and
div
ret
rol
rcl
sbb
sbb
cs
or
out
jecxz
push
in
adc
mov
lods
cdq
imul
lods
stos
stos
fwait
pop
icebp
imul
dec
fiadd
mov
loop
jo
mov
sub
xor
(bad)
sbb
add
xchg
sub
adc
fstp
pop
daa
es
inc
sub
mov
xor
adc
adc
jmp
test
push
(bad)
mov
dec
jmp
mov
aas
adc
dec
dec
mov
jmp
pushf
neg
pop
xor
es
add
push
fmul
test
xchg
pop
mov
jmp
mov
mov
sbb
ja
push
inc
inc
push
and
sub
push
fild
jo
lods
dec
in
adc
lahf
adc
and
ins
pop
push
or
push
inc
gs
jae
sbb
ja
inc
inc
jne
ror
fadd
inc
rcl
xchg
aam
sub
add
lock
sar
icebp
jmp
and
cs
mov
cmp
and
aam
xor
es
jmp
clc
call
pop
jae
or
sbb
add
jp
xchg
xchg
dec
rcl
xor
ficomp
jmp
in
and
and
pusha
add
int3
gs
loop
and
add
mov
xchg
sbb
jnp
xor
push
mov
rcr
inc
and
cmp
test
daa
sbb
hlt
call
push
mov
out
cs
loope
ret
ss
xor
loopne
sbb
push
xor
sub
mov
shl
movs
inc
gs
adc
cs
shrd
cmc
push
and
loop
and
jno
mov
rol
dec
sub
sbb
add
ret
pusha
dec
jle
pop
xor
lods
push
mov
and
cld
adc
and
movs
jb
rcr
test
adc
push
aaa
loope
push
jo
jg
add
test
xchg
ins
adc
ror
enter
and
aas
push
fnstenv
mov
adc
sbb
mov
repnz
out
cld
sbb
ins
adc
push
or
sub
mov
adc
scas
adc
xor
retf
enter
into
or
(bad)
cdq
or
pop
lods
fdiv
(bad)
in
inc
inc
push
sbb
fiadd
test
and
mov
push
scas
cmpxchg
sbb
in
adc
cmp
mov
sbb
outs
ror
or
int3
aam
jno
or
imul
push
dec
movs
sbb
sar
fisub
xchg
cmp
inc
dec
lock
cmp
(bad)
jmp
sub
jb
sbb
je
mov
mov
mov
and
cli
ds
leave
cld
push
jb
jne
or
bound
add
daa
dec
test
pop
inc
jge
push
jne
mov
add
xchg
sahf
sbb
push
or
ds
lods
or
sbb
pop
(bad)
jmp
pop
test
and
test
sbb
sub
jae
pop
out
add
push
adc
push
inc
pop
dec
jnp
and
rcr
(bad)
daa
add
in
jp
inc
gs
push
adc
mov
dec
into
or
inc
cmp
js
daa
mov
std
pop
jl
imul
xchg
sbb
sbb
xchg
pop
sbb
jecxz
shld
retf
les
fisttp
jmp
das
sbb
shr
add
cmp
in
cwde
or
mov
(bad)
adc
xor
push
sub
adc
bound
jne
inc
mov
xor
mov
les
adc
ret
push
cli
sub
xchg
stos
shr
sub
ss
aam
push
loope
sbb
jo
test
push
cmp
sahf
pushf
xchg
xor
in
mov
pop
mov
adc
shl
retf
or
xchg
dec
test
daa
rcl
jnp
xchg
(bad)
popf
ins
in
test
rol
push
xchg
sbb
push
pusha
mov
mov
xchg
or
in
adc
xor
dec
pusha
dec
scas
in
je
in
scas
in
cwde
test
and
scas
movs
lods
repz
(bad)
add
xor
iret
repz
xchg
test
shl
ins
dec
dec
int3
cmp
adc
push
rol
jne
pop
jb
adc
les
imul
push
mov
inc
and
or
lahf
mov
call
xchg
sar
sbb
xchg
or
daa
sub
loope
cmc
cmps
mov
jge
mov
(bad)
les
jo
or
js
and
mov
dec
bound
imul
jle
mov
imul
enter
jnp
or
push
div
repz
mov
lods
xchg
add
cmp
push
js
sub
mov
add
aam
push
or
add
mov
inc
sub
add
add
js
add
jg
add
in
dec
lock
leave
mov
sbb
sbb
add
cs
jp
sbb
daa
or
mov
int3
mov
cmp
(bad)
dec
ins
je
retf
or
fstp
xchg
xor
ror
adc
xor
fwait
jecxz
imul
adc
(bad)
rcl
add
rcl
jbe
push
push
mov
or
dec
lea
inc
xchg
stos
ins
retf
or
leave
cmp
jne
js
push
inc
cmp
cs
fld
stos
dec
and
fst
out
cdq
popa
adc
sahf
fwait
jo
clc
outs
cmp
fldcw
ffreep
mov
cwde
push
pop
sub
dec
loopne
sub
shl
adc
sbb
or
shl
inc
cdq
push
push
test
test
adc
das
push
adc
mov
push
and
xchg
sbb
fnsave
inc
pop
xor
addr16
xchg
stos
mov
jno
test
dec
aaa
nop
rcl
add
mov
lods
mov
sahf
shr
jbe
iret
jp
out
cmp
jmp
(bad)
adc
sub
lods
or
pop
addr16
popa
jg
fs
mov
out
movs
aad
push
popf
add
add
cmc
push
(bad)
cwde
sub
pop
pop
mov
xor
loop
and
(bad)
pop
pushf
cmp
out
mov
mov
mov
pushf
cmp
rol
jae
or
shl
pushf
cmp
aam
fdivr
iret
leave
add
add
mov
jno
pushf
in
call
mov
adc
sbb
and
xor
call
clc
sbb
inc
mov
add
scas
mov
jle
push
imul
jg
sub
lods
adc
(bad)
add
movs
sbb
js
sbb
ret
fwait
pop
pop
jp
jle
xor
dec
rol
(bad)
into
outs
lods
(bad)
pop
in
adc
and
rol
xchg
sub
add
sub
adc
inc
nop
add
in
add
lock
or
and
adc
pushf
dec
aam
xor
and
shl
js
ins
adc
mov
cmp
cmp
jmp
ss
xchg
fwait
cmps
fptan
and
push
dec
adc
push
jp
aaa
push
jb
xor
mov
jnp
test
push
pop
or
push
cmp
sbb
jmp
ret
cld
jne
jmp
(bad)
(bad)
(bad)
cld
xor
push
dec
pushf
inc
outs
mov
loopne
je
gs
cdq
call
or
outs
mov
ins
dec
xor
inc
ret
push
add
shl
jns
test
test
push
dec
cmp
jns
out
cmp
inc
(bad)
push
mov
cs
add
hlt
in
jns
std
or
popf
push
pop
or
sub
and
test
and
xchg
neg
mov
mov
or
adc
xor
push
dec
and
into
sub
push
push
dec
inc
dec
movs
add
add
and
adc
rol
leave
hlt
push
sar
inc
or
mov
lock
pop
add
bound
ret
xchg
lahf
call
or
xor
xor
inc
mov
sbb
dec
inc
adc
pop
xor
cdq
push
rcl
cmp
cmps
ficom
les
pop
push
ret
call
pop
cmp
xchg
imul
popf
les
jp
sub
lods
xor
mov
gs
jae
xchg
into
lds
pop
push
add
in
movs
push
mov
jno
cmp
cmps
shr
pop
in
rol
arpl
gs
cmp
clc
mov
add
xchg
sbb
add
imul
add
add
es
add
or
or
pop
jbe
mov
mov
pusha
push
or
lock
cmp
scas
push
mov
(bad)
cld
je
add
cmp
jbe
mov
nop
add
std
movs
push
xchg
popa
inc
push
mov
xchg
lea
je
mov
lahf
or
(bad)
xor
mov
dec
push
mov
sub
je
and
je
sbb
movs
ss
loopne
add
ret
mov
xchg
jb
or
ins
fs
sbb
shl
push
inc
addr16
fsub
test
lock
stc
jbe
push
icebp
daa
hlt
pop
jb
ja
mov
in
sbb
sbb
lock
cmp
sub
cmp
movsx
add
lea
pushf
mov
mov
pop
add
test
push
mov
lock
ror
xor
lock
in
nop
xor
adc
push
rcr
push
push
loopne
in
repz
call
add
and
dec
push
pshufw
push
cld
je
xor
add
in
loopne
jge
gs
and
xchg
fist
cmp
jns
push
aas
push
xchg
mov
xchg
sahf
xlat
loope
sbb
dec
sbb
and
(bad)
popf
imul
add
push
or
add
clc
push
jb
cld
and
push
aam
push
push
push
push
push
icebp
jge
sar
adc
add
xor
mov
inc
inc
dec
iret
inc
and
and
and
add
lods
cli
xchg
mov
retf
mov
cwde
add
xchg
ins
in
mov
and
push
push
xor
sbb
push
mov
jl
test
adc
or
xchg
cld
xlat
(bad)
jmp
push
cld
sub
push
sub
enter
(bad)
or
xor
or
rol
pop
push
jmp
cmp
push
push
movs
(bad)
push
mov
add
xchg
xor
fdivr
inc
sbb
sbb
pop
imul
xchg
fld
shr
fwait
(bad)
aaa
mov
push
jl
push
aas
in
xor
sti
or
mov
jmp
xor
jg
stc
and
das
lods
rcr
lea
test
inc
and
jg
(bad)
jno
(bad)
cmp
ret
jge
adc
pop
push
and
out
lahf
gs
jnp
and
mov
movs
push
and
ins
pusha
test
outs
mov
add
ja
push
lods
xchg
cmp
cmps
rcl
js
lock
fsub
add
push
adc
test
or
retf
lds
add
test
sub
adc
sbb
mov
inc
gs
movs
inc
cwde
and
sub
add
or
test
adc
add
mov
inc
jb
(bad)
(bad)
mov
pop
out
jle
jmp
repnz
add
cmp
push
adc
add
xchg
out
sub
rcr
mov
dec
or
ins
adc
neg
xchg
ss
(bad)
scas
xchg
xchg
and
add
adc
sub
mov
xchg
ror
push
pop
aad
inc
neg
and
add
or
inc
jge
sbb
cmp
add
dec
jge
push
add
cdq
pop
add
xchg
js
xchg
pop
mov
and
mov
ffree
xchg
inc
dec
inc
adc
cmp
ror
mov
or
xor
sbb
pop
and
or
popf
sbb
xlat
add
inc
retf
or
jno
dec
sub
xchg
push
sbb
mov
and
dec
imul
inc
mov
shl
daa
jp
imul
cmp
stos
fwait
bound
push
mov
ret
adc
dec
push
fimul
pop
mov
adc
add
scas
movs
jmp
clc
adc
(bad)
add
inc
dec
jle
sub
leave
push
mov
adc
inc
xor
jne
jne
pop
pop
pop
pop
mov
cli
pop
add
jb
call
xchg
push
outs
dec
outs
(bad)
js
sub
dec
jo
sbb
test
xor
js
mov
ins
mov
(bad)
nop
js
mov
bound
dec
xchg
cmc
rol
dec
sbb
mov
sar
xlat
add
and
int3
mov
pop
retf
push
or
cmp
or
jp
fldenv
xor
mov
mov
mov
popa
or
dec
(bad)
jae
add
pop
sub
jb
add
sbb
mov
xor
mov
sbb
das
adc
xchg
into
jmp
add
sbb
outs
cmp
or
fild
sbb
iret
push
adc
sub
mov
and
inc
mov
loopne
loope
jo
cmps
(bad)
ret
push
lea
cmps
jne
mov
push
stc
push
mov
add
ja
add
push
push
and
sbb
loop
cdq
mov
push
fstp
mov
popf
pop
sub
dec
std
push
mov
out
adc
lods
dec
sbb
sub
sbb
or
popf
mov
mov
push
xor
lods
push
sbb
pop
add
mov
sub
pop
xchg
push
and
loop
pop
test
test
dec
mov
test
ror
inc
shl
mov
xchg
sub
add
or
and
mov
stc
fisttp
and
jp
cwde
cmp
fmul
inc
pop
outs
jae
into
cmp
xor
push
repnz
mov
fwait
push
aaa
dec
fld
out
jb
and
aad
adc
sbb
dec
cs
and
xor
les
add
(bad)
add
add
es
leave
add
pop
fdivr
aas
push
ror
adc
inc
clc
jns
sub
sub
lds
push
mov
adc
mov
and
arpl
mov
lods
imul
pusha
sub
cmps
sub
add
movs
cdq
lea
cmps
mov
sbb
jp
test
pop
xchg
or
inc
adc
add
push
je
(bad)
in
cmps
call
mov
sti
mov
cmp
xchg
mov
test
and
fdiv
rcr
adc
push
sub
mov
inc
pop
aam
shl
or
call
sahf
dec
push
es
mov
push
cmp
jmp
add
cmp
mov
cmp
test
cmps
rol
out
aas
xchg
jno
lds
les
lea
mov
mov
xor
mov
or
dec
fiadd
dec
mov
sbb
add
dec
xor
jb
dec
inc
dec
cwde
jg
push
and
iret
cmc
je
push
mov
stos
or
sbb
cdq
idiv
push
xchg
xor
ss
into
dec
enter
int
in
shl
adc
test
lock
dec
sbb
ficom
xor
lahf
push
mov
adc
shl
sbb
sar
mov
add
les
leave
inc
leave
mov
leave
cmps
jb
leave
inc
leave
inc
cmp
enter
adc
les
(bad)
adc
mov
mov
cmp
ret
jmp
or
arpl
cmp
adc
pop
imul
movhps
or
push
inc
outs
pop
adc
jg
loopne
pop
mov
jae
xchg
mov
mov
xchg
sub
jne
and
pop
mov
rep
xor
pushf
cmp
cld
xlat
das
jmp
push
cmp
cmp
pop
retf
mov
add
jo
stos
mov
shl
add
scas
pusha
xchg
xchg
inc
aas
jbe
jo
xor
add
push
rcr
jmp
faddp
leave
adc
call
or
pop
mov
stos
push
pop
pop
test
test
push
neg
mov
push
ret
gs
push
pushf
pop
shr
mov
push
fstp
fidiv
inc
shl
inc
loopne
push
fbld
pavgb
es
jle
jb
test
loop
or
call
movs
mov
sbb
js
shl
mov
push
or
mov
cli
sahf
pop
imul
or
or
jbe
adc
cmps
push
gs
(bad)
cmp
movs
mov
and
pop
push
or
jbe
cmp
add
ficom
dec
mov
dec
nop
adc
add
push
mov
lea
jo
retf
dec
and
or
es
xchg
mov
sbb
add
ror
add
and
dec
inc
aaa
sbb
sub
push
and
or
xor
dec
or
push
fsub
add
sbb
ret
adc
add
js
mov
push
loope
test
shr
pop
jno
push
xor
and
jmp
add
add
mov
add
adc
jp
jbe
gs
shr
pop
imul
in
push
ret
dec
or
mov
sub
pop
or
and
sub
sahf
jno
rcl
fnsave
cmps
xor
inc
adc
push
adc
dec
adc
inc
mov
and
cmp
adc
int
lds
cmp
in
add
(bad)
sub
(bad)
scas
test
cmp
dec
sub
jne
inc
mov
imul
push
repz
sub
adc
mov
xor
xor
or
add
jp
pop
sbb
icebp
sub
inc
arpl
das
test
sbb
jmp
push
jp
xchg
jne
push
sub
lods
ins
aas
pushf
daa
push
hlt
test
cmp
cmp
popa
adc
mov
movs
dec
push
pop
cmp
dec
or
add
not
sub
cmc
xchg
xchg
stos
daa
mov
fild
pop
jge
pop
add
sub
push
dec
call
xchg
push
outs
and
lock
dec
jno
push
inc
cmps
xor
repz
mov
call
lea
add
or
ja
arpl
cmc
movzx
xchg
push
sub
sub
aam
lods
add
pop
adc
dec
or
adc
adc
jmp
mov
push
push
push
call
mov
mov
xchg
mov
sub
sub
pop
add
(bad)
cmp
call
fisubr
push
pop
fstp
jge
ja
xchg
movs
int
dec
push
sub
cwde
lea
inc
sub
inc
xchg
ret
push
xchg
je
adc
lds
push
adc
or
shl
cmp
dec
sbb
jne
push
cwde
clc
xor
sbb
inc
shl
add
adc
sub
add
jg
int
lea
add
std
lea
nop
iret
movs
push
ret
inc
cmp
es
xor
xchg
cmp
or
jo
and
cmc
es
or
jmp
pusha
test
jbe
xchg
add
sub
cmp
or
and
xchg
add
and
and
cmp
ins
popa
jno
aad
inc
and
sbb
jl
jo
leave
test
test
mov
mov
(bad)
cmp
mov
scas
and
jbe
cmp
sar
mov
or
dec
gs
xor
js
lds
add
jo
daa
retf
inc
(bad)
cmp
and
jbe
cmps
inc
imul
jmp
arpl
ins
ror
add
inc
sbb
inc
adc
add
aas
inc
push
iret
sub
adc
fdiv
xor
adc
push
enter
or
dec
popa
or
scas
push
aad
push
call
adc
(bad)
pop
pusha
mov
mov
fidiv
clc
jno
push
bound
xor
jb
std
cmps
add
xchg
mov
into
ins
in
sbb
lods
dec
xchg
mov
xor
jbe
jge
or
push
hlt
and
and
pusha
test
call
sbb
add
movs
call
push
pop
sbb
mov
xchg
and
in
or
test
mov
int
push
add
or
call
jge
inc
addr16
pop
dec
or
or
mov
xchg
push
inc
add
cdq
lods
adc
out
dec
loope
cmc
mov
rol
xlat
sbb
sbb
mov
inc
fsub
cli
sub
jbe
bound
jns
push
xchg
push
sbb
enter
sub
or
arpl
dec
or
mov
nop
sub
inc
pop
xchg
push
jae
popa
lods
mov
dec
xchg
retf
add
or
imul
adc
popf
aaa
nop
cmps
ds
rol
cmp
push
push
sub
add
xlat
test
sar
jg
and
nop
or
inc
add
pop
test
xor
cld
xchg
push
add
sub
jbe
sbb
lock
push
addr16
sbb
clc
add
mov
fwait
or
leave
lock
add
cmp
addr16
pop
bound
lock
pop
mov
aad
and
mov
jns
ja
push
and
mov
(bad)
sahf
xor
and
dec
xchg
and
loopne
jmp
push
test
je
and
inc
aad
mov
add
mov
xor
xor
inc
xor
dec
cmc
sbb
aam
push
aaa
xchg
cmp
test
test
or
jnp
mov
mov
add
cmp
popf
and
add
inc
mul
int3
mov
push
sbb
mov
pop
pusha
add
or
lods
mov
es
dec
jno
fs
jge
icebp
fist
sti
push
aaa
and
cmp
and
cwde
mov
or
test
add
inc
add
daa
inc
jb
or
test
es
add
ins
dec
ret
loopne
mov
int
cs
movs
and
add
(bad)
scas
push
and
cdq
xor
dec
add
and
xor
vmovups
fldcw
xlat
mov
push
movs
and
loopne
xor
dec
sub
xchg
push
xor
fwait
cdq
xor
or
enter
and
jmp
jl
adc
outs
imul
inc
and
or
xor
je
jne
sbb
and
add
push
mov
sub
add
pop
inc
dec
push
mov
push
add
sti
mov
xor
stos
bound
mov
stos
jnp
test
mov
jns
ja
rol
cli
add
xchg
repnz
sub
cld
push
xor
arpl
mov
mov
add
cdq
and
lock
cdq
add
sbb
rol
arpl
or
push
int
or
(bad)
add
push
inc
(bad)
jnp
aas
out
xchg
inc
and
jne
outs
ror
jge
inc
jae
sbb
call
mov
pop
mov
cmps
int
out
add
fstp
iret
add
or
mov
popf
xchg
add
sub
inc
pop
jne
outs
inc
inc
jbe
mov
sub
in
xchg
outs
int3
(bad)
pop
or
sbb
fld
cmp
add
mov
pop
adc
push
sar
add
add
aad
xchg
jne
pop
add
lods
xor
add
outs
sbb
jle
xchg
arpl
lahf
es
or
and
addr16
and
push
add
xchg
cmps
dec
int
hlt
push
jle
hlt
and
push
add
mov
es
outs
pusha
lods
std
dec
jmp
dec
je
adc
jne
adc
inc
lods
pop
cwde
or
cmps
adc
or
bound
inc
xlat
cs
jno
sbb
cmp
imul
mov
cmp
out
and
iret
jp
sub
pop
and
jo
aam
push
and
jno
sub
xor
inc
sub
aad
or
dec
fisttp
(bad)
mov
push
loopne
adc
pop
(bad)
not
lods
sub
add
daa
retf
xchg
retf
adc
or
add
dec
loopne
mov
cmps
scas
lea
pop
inc
fwait
push
bound
or
sub
push
xchg
dec
or
mov
loopne
mov
mov
adc
ret
les
adc
and
(bad)
cmp
test
add
mov
ret
ins
push
cmp
xor
sbb
pop
inc
test
push
sub
cmp
sbb
ins
dec
add
and
pop
lock
adc
dec
push
test
pop
ret
jmp
mov
xchg
outs
mov
xor
cmp
jl
push
movs
lea
sbb
sbb
dec
mov
pop
or
sub
sub
inc
out
retf
ins
iret
adc
adc
sub
fcmovb
xchg
xchg
test
add
push
jae
popa
sbb
push
stos
jbe
xchg
jne
and
push
add
into
push
adc
movs
fmul
shl
cmc
fisttp
dec
jle
addr16
stos
xchg
adc
pusha
jno
ror
movs
cmp
shl
mov
shr
push
mov
adc
jbe
popa
push
stos
mov
cmp
dec
adc
add
jnp
popf
and
mov
push
lock
mov
fdiv
and
stos
xchg
add
lahf
xchg
dec
call
push
inc
cmp
lds
xor
push
cmc
mov
jnp
push
jne
lds
cli
and
xchg
sub
or
out
pusha
xor
or
mov
adc
rol
adc
or
movs
cmc
adc
cmp
jnp
dec
mov
push
adc
xchg
jge
add
or
dec
add
mov
mov
or
cmp
test
and
dec
cwde
sbb
cwde
pop
add
pop
(bad)
mov
jns
lods
es
inc
xchg
or
mov
mov
xchg
cmp
dec
sub
sub
or
mov
push
mov
inc
or
sbb
add
cld
sti
aad
call
add
xchg
fwait
cld
sti
dec
cwde
repnz
es
sub
clc
xchg
xchg
mov
test
rcl
jb
or
mov
adc
test
jne
sub
add
sbb
(bad)
adc
xor
outs
or
push
je
(bad)
(bad)
popa
je
push
je
jae
dec
dec
je
(bad)
(bad)
push
sub
es
je
(bad)
adc
fsubr
adc
jnp
out
test
mov
repnz
(bad)
test
and
mov
loopne
inc
hlt
inc
cld
clc
inc
cmp
imul
std
fist
sbb
mov
pop
xchg
add
fwait
mov
in
retf
xchg
js
(bad)
pop
gs
xchg
xchg
(bad)
repz
lock
dec
ins
dec
gs
jb
or
jmp
pop
pop
mov
inc
fdivr
sbb
mov
pushf
pop
jae
and
mov
xor
fisub
add
adc
or
not
call
ret
or
fdivr
jmp
rcr
aaa
add
push
pop
imul
sbb
mov
sub
fcmovnu
xchg
xor
add
xor
rol
lea
cwde
or
pop
pop
mov
push
dec
mov
mov
or
cmps
xchg
push
mov
adc
mov
and
add
push
imul
inc
add
xor
int
inc
outs
cmp
inc
or
enter
gs
mov
inc
jmp
cld
pop
add
dec
jmp
mov
retf
fimul
adc
inc
xor
stos
cmc
dec
test
in
xor
push
xor
mov
adc
int3
sub
push
arpl
add
iret
add
xor
nop
aam
test
mov
push
cmovp
movs
mov
inc
xchg
inc
sub
pop
pop
icebp
adc
fwait
jbe
shl
call
mov
and
adc
fmul
in
pop
scas
test
jo
rol
add
pusha
aam
sar
pop
cmp
dec
imul
dec
xchg
(bad)
mov
inc
call
stos
inc
lods
pop
push
dec
xchg
or
jg
ret
jno
cvtdq2ps
cmp
push
sbb
mov
inc
push
stc
mov
adc
xchg
sbb
cmps
test
fdivp
dec
jae
pop
pop
or
imul
add
inc
sbb
mov
sbb
stos
outs
test
pop
inc
into
adc
or
inc
in
push
push
or
data16
or
test
lock
enter
push
push
clc
cld
hlt
lock
mov
sub
or
sub
jmp
int3
popa
loop
xor
aaa
xchg
ds
or
pop
dec
nop
es
cmp
pusha
push
and
sbb
sub
call
fsub
test
xor
xchg
je
mov
or
shl
mov
jmp
jp
pop
mov
test
repz
add
or
std
mov
loopne
mov
push
jno
loopne
mov
leave
or
sub
add
clc
dec
add
cmp
lods
push
pop
sub
dec
sub
xchg
or
add
jno
push
adc
pop
btc
test
(bad)
push
cmp
and
jne
sub
js
or
jle
push
add
pop
call
push
dec
sbb
jns
gs
sbb
jmp
jmp
sbb
and
pop
fwait
inc
nop
clc
cmc
jb
jne
nop
cld
inc
fdivr
add
ss
add
(bad)
cmp
repz
push
adc
add
add
inc
mov
mov
in
mov
lea
jp
push
mov
(bad)
mov
push
mov
fcom
or
push
enter
add
test
movs
inc
cmp
and
ins
xchg
and
hlt
lahf
mov
xor
jns
sbb
adc
aaa
pop
hlt
mov
in
fcom
dec
es
arpl
xchg
retf
in
mov
in
lock
in
cdq
imul
add
sbb
pop
fisubr
xchg
inc
mov
pop
js
nop
retf
mov
pop
mov
das
in
sbb
jns
add
aam
jecxz
adc
xor
jo
and
push
retf
mov
imul
sbb
cmps
sahf
mov
or
sub
jo
lock
sub
pop
mov
dec
fadd
out
mov
jbe
jns
dec
inc
rcl
sbb
sahf
rcl
sub
fldcw
adc
shr
hlt
push
or
dec
mov
retf
ins
xor
fimul
and
mov
(bad)
sbb
jge
aaa
test
jne
je
or
sub
sti
lds
inc
(bad)
cwde
jmp
in
jmp
and
test
and
or
push
push
fs
cmp
lods
push
add
dec
jp
movs
or
or
dec
cmp
inc
das
cmps
or
xor
push
sbb
nop
lock
and
push
idiv
or
cmp
cmp
pop
lods
inc
adc
sbb
movs
adc
cmp
mov
xor
pop
xor
rcr
movs
add
sub
add
adc
or
sub
mov
mov
pop
and
mov
push
push
fs
and
lods
stc
fwait
sbb
add
or
in
int3
push
aas
push
push
mov
inc
(bad)
and
mov
push
push
pop
rol
popf
sbb
int3
jno
lods
jmp
shl
pop
mov
inc
test
cmp
dec
and
push
data16
cmp
mov
sub
adc
mov
std
and
sbb
mov
push
dec
cmp
mov
jb
lods
sub
add
xor
bound
add
clts
adc
dec
or
adc
je
mov
bound
or
in
pcmpgtw
xchg
mov
ret
xchg
lods
arpl
inc
mov
cmp
arpl
movs
adc
sub
ins
fs
or
push
sub
arpl
outs
adc
sub
mov
push
push
cmp
mov
test
sbb
adc
cmp
retf
push
push
je
aam
sahf
mov
push
retf
cs
aam
int
inc
(bad)
xor
inc
sub
and
test
inc
xlat
jb
or
mov
les
fsub
push
pop
jmp
dec
sbb
dec
enter
sub
pop
pop
push
add
clc
adc
add
test
jl
neg
ror
jnp
fnstenv
lods
sahf
dec
push
pop
dec
add
test
or
lods
and
sub
push
cmp
cmp
mov
cmp
sbb
sub
mov
popa
ret
mov
lahf
mov
inc
test
mov
pop
xor
js
sbb
pop
and
add
fst
dec
adc
push
(bad)
cmps
push
adc
ret
cmp
inc
out
xor
push
or
push
jecxz
adc
add
dec
loopne
fisub
and
mov
mov
ret
cwde
dec
mov
stc
push
sbb
jns
retf
clc
jmp
push
jg
pop
push
push
cdq
arpl
js
enter
lahf
mov
hlt
jae
pop
push
ss
dec
sub
movq
pop
(bad)
xor
pop
inc
stos
jo
nop
adc
pop
add
dec
inc
das
mov
push
cmp
push
(bad)
aam
into
(bad)
mov
je
mov
leave
pushf
push
push
test
dec
rol
push
add
jnp
out
add
lea
xchg
rcl
js
dec
fcmovnb
xor
jge
popa
mov
pop
dec
into
jbe
(bad)
mov
rol
mov
(bad)
mov
movs
inc
mov
loopne
xor
daa
pusha
pop
cwde
pop
push
aaa
sub
sub
inc
cmp
(bad)
inc
loope
mov
je
jecxz
pusha
loopne
jge
ret
and
adc
cmp
xchg
test
stc
or
or
clc
daa
push
outs
add
pop
push
rcl
pop
sbb
icebp
leave
add
(bad)
pop
test
and
sub
test
ret
push
fwait
(bad)
xchg
push
mov
xor
mov
sbb
cld
ror
ins
ret
ins
outs
lea
jl
or
frstor
les
hlt
cmps
sbb
mov
push
int
sbb
jmp
cmps
sar
(bad)
ror
adc
ss
cld
test
mov
xchg
enter
ret
mov
sbb
scas
add
or
adc
sbb
das
push
xor
fldcw
jns
dec
mov
xchg
push
cdq
int
and
push
jp
push
hlt
xchg
je
pop
cli
je
pop
sbb
movs
add
push
push
sub
imul
mov
mov
xor
lods
inc
popf
lods
lods
test
xchg
sbb
(bad)
jg
pusha
xchg
xor
sub
test
cmps
andnps
leave
les
enter
jns
leave
add
lods
add
sbb
adc
stc
add
inc
mov
int
sbb
lea
sub
lods
(bad)
in
cmp
sar
js
mov
cli
rcl
add
or
gs
out
icebp
mov
inc
rcl
pmulhuw
dec
rcl
and
sub
mov
dec
call
inc
nop
pop
push
rol
ror
mov
inc
js
aaa
movs
or
pop
nop
dec
jmp
adc
add
mov
loopne
(bad)
adc
clc
xor
mov
leave
sbb
and
or
sub
adc
aas
sar
and
cmc
cmp
dec
imul
lds
or
and
inc
cwde
and
ss
add
lock
cmp
je
and
xlat
and
sbb
mov
pop
mov
shl
jp
mov
sti
and
add
stc
push
inc
and
mov
sbb
xor
and
mov
add
inc
add
les
dec
movsx
lahf
cld
fimul
mov
cmp
mov
jmp
into
mov
cld
mov
mov
ret
jp
dec
add
shr
add
pop
push
push
neg
ins
bound
jne
fld
xor
cli
sub
int3
xor
nop
pop
push
test
mov
mov
xor
sbb
mov
push
ins
add
shr
loopne
xchg
or
rcl
pop
inc
ja
es
adc
xor
mov
fdivp
fld
push
sbb
push
sbb
push
sbb
push
or
push
xlat
mov
lock
or
push
call
cmp
lock
xchg
nop
pop
shl
jbe
cmp
rcr
fmul
cmp
xor
ds
push
pop
sbb
jbe
jl
mov
sbb
sub
(bad)
pop
mov
mov
push
mov
or
add
push
sbb
enter
push
sbb
mov
js
and
gs
mov
ss
push
aas
adc
sub
loop
dec
into
push
jb
push
push
mov
cld
lahf
pop
ja
mov
fld
repnz
add
fnstsw
push
ret
jo
push
inc
(bad)
pusha
adc
xor
jo
cmp
call
pop
mov
rcr
repz
sar
inc
jmp
fldpi
pop
dec
in
pop
(bad)
idiv
imul
push
out
pop
in
cmps
mov
loop
dec
push
xchg
aam
adc
jns
rcr
cmp
pop
and
xor
jo
out
imul
inc
push
add
dec
sbb
ret
mov
aad
(bad)
xchg
jne
push
daa
xchg
pop
cmps
mov
clc
dec
ins
loop
retf
mov
js
mov
iret
add
add
push
sahf
add
arpl
xchg
and
or
push
stc
xchg
and
dec
inc
cmp
pop
push
inc
ret
fistp
ud2
sbb
icebp
imul
jecxz
movs
lods
push
and
ins
adc
icebp
and
leave
jbe
mov
sbb
xchg
mov
xor
jp
cmp
dec
jne
inc
mov
jmp
cmp
push
in
pop
push
dec
sqrtps
cmc
nop
xor
popf
xor
cdq
xchg
jp
addps
and
sbb
aaa
push
cmp
pop
test
xchg
jne
in
mov
mov
push
mov
je
sbb
pop
adc
or
adc
jne
and
push
and
mov
push
fnstsw
jns
inc
or
not
xchg
aaa
in
pop
mov
mov
and
cmp
xor
(bad)
jae
pop
in
scas
or
jmp
sub
cmp
and
and
mov
jne
ror
and
call
test
je
mov
arpl
sbb
dec
cld
hlt
std
dec
pop
jo
mov
sti
fsubr
std
and
mov
jl
fwait
mov
push
cmp
dec
movs
(bad)
mov
and
dec
sub
rcl
adc
lods
mov
scas
inc
jl
mov
call
outs
cmp
add
jle
(bad)
jecxz
mov
dec
mov
inc
push
xor
aad
movs
addr16
sub
and
rcr
pop
cld
or
sahf
dec
pusha
cmps
ffreep
sbb
mov
add
rcl
ret
add
adc
test
push
aas
sbb
sub
sbb
push
adc
add
test
sub
mov
sub
and
or
call
loop
je
mov
(bad)
add
inc
or
scas
rol
sub
addr16
imul
ror
jle
jmp
popa
rol
push
(bad)
dec
pushf
jb
push
xor
push
aaa
xchg
mov
imul
push
push
pop
push
mov
sub
and
mov
add
mov
push
or
sub
inc
add
or
xor
dec
jl
pop
call
or
int
in
pop
add
mov
sbb
and
cmp
dec
mov
cdq
test
mov
pop
or
pop
mov
pop
and
cmp
dec
sbb
add
xchg
push
inc
stos
mov
mov
test
icebp
adc
adc
inc
loope
nop
popa
test
pop
fild
adc
ss
cmp
sar
dec
iret
(bad)
fimul
in
pop
cmp
adc
sbb
mov
test
push
adc
test
or
daa
daa
rol
mov
mov
xor
push
clc
inc
call
sub
or
push
adc
or
imul
sub
retf
mov
retf
sub
or
jnp
arpl
and
mov
sub
xor
push
add
es
or
sub
shl
(bad)
shr
cs
fdiv
sbb
je
call
cmp
adc
mov
or
enter
push
or
pop
add
sub
das
mov
mov
or
add
and
or
scas
push
push
xor
cmp
jb
xchg
imul
scas
dec
adc
mov
push
movs
inc
xor
sbb
xchg
cmp
xchg
xchg
int
imul
add
add
xor
inc
and
sbb
std
jl
or
mov
xor
sub
push
xchg
add
jg
sbb
add
ret
and
cmp
lock
xchg
dec
and
push
stos
jno
mov
test
out
sbb
popa
(bad)
ret
lock
aam
retf
enter
sahf
xor
not
sbb
xor
lods
mov
sub
dec
jae
loope
xor
loop
mov
jmp
cld
mov
sub
cmp
and
mov
addr16
loopne
pop
pop
(bad)
out
xor
call
sub
jmp
sub
and
add
loopne
xchg
and
into
mov
mov
inc
cmp
out
or
shl
sahf
inc
psraw
mov
xor
pushf
sbb
out
add
jp
das
xor
pop
mov
sub
imul
stos
loope
mov
push
data16
sar
bound
push
mov
stos
dec
push
popa
cmp
xchg
mov
push
push
adc
pop
dec
mov
xor
pop
jl
shl
retf
sbb
sbb
loope
jbe
retf
add
pushf
and
jns
xchg
addr16
sbb
dec
and
sub
xor
cmp
ret
push
or
cmp
jbe
ja
fisub
bound
mov
xor
mov
cmp
jne
cmp
or
repz
cmp
and
sub
mov
mov
pop
leave
sub
jno
mov
xor
imul
cmp
xchg
rcl
sbb
das
push
stc
cmp
cwde
(bad)
or
or
ret
enter
adc
and
jo
nop
mov
mov
pusha
or
lock
cwde
lea
mov
add
xor
jo
add
or
pop
mov
mov
push
inc
popa
sub
inc
dec
adc
push
add
push
test
sub
pop
out
dec
mov
adc
mov
ret
inc
mov
inc
mov
test
(bad)
xchg
sahf
sub
das
mov
cwde
fsub
adc
test
xor
add
and
mov
mov
and
jmp
adc
jge
pushf
or
add
add
jnp
(bad)
cmps
push
push
or
sub
jl
mov
cmp
jo
cmps
ja
or
inc
lea
mov
add
nop
jle
push
xchg
popa
stos
(bad)
sbb
adc
rcr
cld
sub
jl
xor
mov
pop
mov
lahf
jne
push
sbb
outs
pop
repz
sar
inc
xchg
xor
mov
push
imul
push
xchg
aam
icebp
or
add
loopne
add
shl
add
inc
pusha
ss
lea
ffreep
test
or
or
mov
or
add
jbe
add
retf
xor
sbb
in
mov
scas
popa
and
sub
jne
ficom
nop
xor
ins
xchg
add
pop
sbb
movs
jno
sbb
xor
adc
fdivr
add
add
sub
mov
in
xor
add
loopne
or
imul
test
mov
movs
out
js
dec
xor
mov
adc
test
add
jns
inc
out
or
jge
jae
sti
sub
xor
xor
outs
lods
push
dec
push
in
nop
sub
add
jle
sub
cmp
or
addr16
and
xor
push
or
inc
lods
rcl
adc
or
and
scas
and
sub
popa
pop
retf
jl
xchg
add
in
fsub
jmp
movs
mov
and
inc
nop
push
popa
pusha
pop
add
dec
les
xor
std
and
dec
popf
rcr
lods
pushf
push
inc
sub
ins
ror
retf
add
hlt
push
add
je
sbb
fwait
cli
xchg
cmp
jecxz
push
ins
mov
jne
aam
or
sbb
or
add
dec
mov
leave
unpcklps
sbb
push
fs
std
pop
pop
inc
pop
lock
xor
lock
pop
lods
pop
js
or
push
mov
mov
adc
inc
mov
push
push
jecxz
(bad)
jmp
cmps
push
mov
push
jmp
scas
add
pop
rol
xor
lahf
fs
jmp
mov
adc
push
xor
rol
loopne
add
or
adc
rcl
pop
les
xor
movs
xchg
mov
and
push
cmp
jb
inc
hlt
test
js
cs
or
pop
inc
adc
mov
mov
les
aas
call
or
sub
lods
shl
in
mov
fcomp
and
sbb
add
inc
adc
frstor
mov
popa
in
pop
dec
pushf
cmp
push
sub
pop
stc
push
ja
inc
pop
sahf
and
adc
and
shl
sbb
mov
dec
ja
popa
pop
sbb
sbb
add
mov
shr
inc
ror
add
xchg
adc
(bad)
mov
imul
movs
cmp
movs
cmp
or
push
test
fldenv
cs
or
add
jp
cmp
sbb
outs
std
or
push
test
add
jns
xchg
jge
shl
out
add
sbb
fs
out
inc
mov
sbb
sbb
ror
mov
mov
xchg
rep
pop
mov
repnz
or
cmp
aaa
fdiv
push
mov
xchg
adc
push
ss
sub
push
test
add
mov
pop
in
add
or
pop
push
test
cs
jmp
xchg
lea
dec
ss
mov
pop
inc
jmp
push
adc
cs
mov
jo
imul
adc
jle
adc
into
popf
imul
js
jbe
outs
cmps
push
push
cld
mov
add
mov
mov
cs
mov
push
stos
int
add
(bad)
cmp
sub
sub
(bad)
dec
xor
push
jo
pop
test
pushf
dec
add
jne
aaa
inc
rcr
mov
adc
js
movs
jae
add
dec
gs
cmp
sbb
leave
pop
xor
fiadd
and
ins
jmp
jno
frstor
push
or
or
shr
cmps
js
jmp
or
mov
mov
shl
sbb
stos
movs
ret
jge
pop
adc
mov
add
cmp
dec
add
cmp
cmp
sbb
adc
sbb
push
test
push
pop
es
ror
(bad)
pop
ds
xor
dec
and
lock
int3
pop
mov
pop
pop
out
sahf
push
jp
push
dec
push
fs
adc
test
add
cmp
test
xor
add
or
jmp
push
push
nop
mov
sti
sub
sub
or
push
dec
inc
loope
push
inc
enter
inc
jle
push
mov
lock
mov
xor
or
adc
cmp
je
push
push
push
push
inc
push
jmp
nop
and
or
ins
inc
push
mov
fsub
or
or
sbb
iret
ret
fmul
nop
xchg
adc
aaa
stc
aad
push
fisubr
enter
xor
cmp
fisttp
pop
add
rcl
mov
xchg
rcl
mov
shl
add
cmp
movsx
jecxz
lea
ret
xor
mov
fmul
jmp
push
icebp
jo
xor
push
add
add
jecxz
ficom
and
add
outs
adc
and
ins
lods
std
push
push
mov
push
aas
jnp
sbb
loop
jge
jl
es
mov
xor
pop
mov
je
pop
jge
jmp
dec
or
push
das
movs
or
inc
mov
or
sub
sbb
add
outs
cs
loope
popa
jl
xor
add
dec
mov
add
add
or
xor
(bad)
fisttp
xchg
jno
add
add
fist
les
xchg
adc
test
and
mov
mov
or
mul
mov
sbb
xchg
cmp
add
inc
ror
jge
and
push
jg
sub
push
arpl
cmp
popa
test
inc
imul
inc
or
pusha
sub
sub
(bad)
(bad)
in
leave
push
or
out
dec
loop
adc
lock
sub
sbb
ror
std
push
pop
lea
xor
sbb
xor
xchg
sub
xor
cmp
cmp
or
mov
jne
fmul
xchg
enter
jp
mov
out
add
adc
movs
nop
aad
dec
sbb
dec
fidivr
adc
inc
xchg
cmp
cmp
dec
fs
test
mov
mov
fcomp
add
push
pushf
data16
xor
add
jo
and
xchg
popf
push
sub
push
sub
push
xor
add
shl
test
std
xor
xchg
shr
mov
push
movs
pop
push
out
test
arpl
addr16
xor
mov
inc
lahf
mov
ficomp
push
sub
cmp
push
es
dec
xchg
sbb
adc
sbb
inc
ds
iret
ins
enter
bound
add
rol
add
test
push
or
mov
call
aaa
inc
add
xchg
cmp
ficom
popa
sub
test
je
out
jns
movs
cmp
push
fadd
mov
retf
mov
xorps
jae
gs
imul
lea
push
popa
mov
in
cmp
add
mov
test
es
or
pop
sbb
pop
rcr
mov
out
sub
xor
push
sbb
push
cmp
adc
dec
xchg
and
inc
jno
ficom
adc
test
cmc
mov
cdq
ja
push
(bad)
popa
and
sbb
ret
add
std
mov
inc
inc
adc
and
xor
je
dec
jne
xor
mov
adc
jge
aaa
jmp
sub
and
and
and
sbb
dec
popa
push
aas
add
sub
jne
fwait
lods
lea
sbb
fcom
xor
or
cmp
push
cmp
inc
adc
clc
rcl
jae
cmp
or
mov
mov
out
push
sub
and
jnp
push
icebp
je
loopne
in
pusha
mov
adc
dec
test
js
mov
cmp
(bad)
xor
mov
inc
inc
ss
popf
cmp
mov
(bad)
mov
mov
xchg
aam
pop
cmp
mov
mov
sahf
xchg
add
sbb
sar
sub
cmp
xor
xchg
loopne
and
push
adc
lahf
xchg
sbb
dec
inc
xor
ss
mov
add
cld
adc
in
inc
add
cmps
test
inc
inc
cmp
jmp
pop
xor
sbb
arpl
adc
je
cmp
fisttp
adc
int3
adc
pop
xchg
cmc
and
fidiv
push
test
loope
ret
and
mov
push
sbb
jecxz
sti
add
jp
jne
fbld
test
mov
lods
lds
mov
das
push
std
inc
cmp
arpl
push
and
add
push
out
pop
xor
loope
dec
lea
xchg
xchg
or
dec
call
ds
inc
push
cdq
xchg
int3
shl
jmp
add
mov
and
gs
shl
jmp
mov
loope
cmp
jbe
mov
push
mov
sar
pop
dec
ins
push
add
mov
ret
imul
or
push
cmp
rcl
pop
stos
add
cmp
push
push
and
xchg
sbb
aas
pop
stos
mov
xchg
rol
aad
movs
cmp
xor
(bad)
xchg
mov
xchg
add
loop
popa
hlt
pop
into
fs
push
push
xor
add
cmp
div
sub
add
xor
sbb
mov
das
push
cmp
ror
push
addr16
xor
sahf
jno
cwde
test
and
add
lea
pop
mov
and
dec
jl
or
add
sbb
mov
xor
jnp
cld
mov
jle
sbb
lods
adc
push
mov
cmps
test
hlt
cmp
cmp
jnp
popf
fidiv
sbb
call
xchg
and
inc
push
xor
mov
mov
xchg
sbb
adc
add
xor
and
popf
jne
cmp
nop
sar
ins
and
dec
in
movs
xor
adc
xchg
xor
and
sbb
pusha
mul
jge
add
jge
push
xor
daa
sbb
xchg
sub
mov
dec
add
test
inc
rcl
adc
shl
mov
lea
call
xor
sahf
jnp
mov
fistp
push
daa
or
cmp
das
mov
push
mov
adc
shl
test
stos
daa
ret
sbb
lea
in
push
add
jmp
jmp
mov
lock
inc
inc
daa
xor
inc
and
adc
adc
xor
inc
sub
mov
add
xor
push
cmp
test
adc
fsub
imul
xchg
add
dec
adc
(bad)
push
push
js
sbb
das
xor
mov
lahf
mov
add
pop
pop
jmp
cli
(bad)
scas
jae
pop
add
lea
inc
add
pop
inc
in
and
add
sbb
cmp
xchg
les
add
jae
push
mov
mov
cmp
retf
sbb
inc
inc
test
xchg
aam
pop
jmp
and
push
dec
cmp
rol
and
sub
stos
sbb
or
out
xor
xchg
xor
and
aaa
cld
mov
sbb
ja
mov
cmp
cmp
push
shl
and
les
inc
cs
ss
add
add
outs
test
jbe
jmp
inc
mov
sub
pop
cmp
jmp
sub
add
mov
or
lock
loop
jl
fsub
(bad)
cli
jecxz
and
cmp
jge
(bad)
fs
dec
enter
ret
pop
push
loope
sub
mov
lea
imul
pusha
fsub
mov
jecxz
cmp
pop
pushf
dec
cmps
rcr
test
xchg
or
push
test
xor
push
or
ret
sbb
mov
add
dec
fcom
push
test
enter
xor
push
push
into
outs
xor
out
neg
sti
push
movs
loopne
or
mov
sub
mov
cmp
adc
xchg
and
jne
pop
push
or
mov
jmp
pop
aaa
and
sbb
cmp
dec
rol
push
cmp
(bad)
mov
push
cmp
jg
cmp
push
or
fld
popa
xchg
push
jae
je
loopne
lods
lock
inc
leave
retf
les
js
mov
sub
shl
daa
mov
retf
or
mov
jno
cmps
pop
add
test
cld
jecxz
push
mov
xchg
xchg
fcom
jne
jbe
pop
cld
jae
imul
pop
and
or
jl
push
stos
out
call
mov
sbb
xlat
or
cs
xor
bound
ret
ins
test
add
add
and
cwde
pop
lock
push
mov
push
ins
sbb
push
inc
das
inc
xchg
jo
call
pop
ret
popf
push
retf
inc
ins
mov
out
xor
add
movs
xor
or
inc
and
jecxz
and
nop
pop
push
je
push
mov
mov
and
sbb
sbb
cmc
sar
jge
adc
add
push
inc
push
imul
lea
imul
lods
pop
jecxz
add
xchg
inc
scas
rcr
add
lds
pop
int
and
jp
adc
pop
inc
ret
xchg
adc
xchg
lock
je
cdq
mov
rol
inc
mov
and
add
mov
(bad)
cmp
lds
dec
xor
clc
cwde
loope
jne
jb
or
xchg
imul
jge
jb
sub
shl
dec
fist
ins
and
je
cdq
fidiv
popa
ins
fmul
cmp
jecxz
or
pop
(bad)
daa
and
dec
gs
call
add
cmp
pushf
iret
jmp
ret
es
sub
push
pop
sbb
xor
xlat
into
adc
mul
ins
or
dec
neg
add
jns
cmp
sbb
aas
xchg
loope
test
cmp
sub
(bad)
cmp
inc
push
out
push
js
int3
dec
aas
loopne
out
call
mov
xor
pop
dec
push
add
mov
cmp
push
push
or
push
les
add
mov
hlt
add
push
adc
adc
fisttp
(bad)
(bad)
call
fcomp
sbb
add
fcomp
pop
xor
xor
jmp
or
xchg
push
cmp
pop
or
pusha
nop
addr16
or
rcr
add
stos
push
push
pop
icebp
repz
cmp
fadd
arpl
fist
fst
mov
jo
jne
popf
call
icebp
or
adc
add
xor
imul
or
int
sahf
add
nop
pop
idiv
enter
test
inc
cmp
add
add
(bad)
add
xchg
inc
cmp
dec
out
rol
and
cmp
rcl
push
adc
or
mov
cmp
xor
add
mov
jmp
cmps
jns
fistp
fdiv
lods
mov
jmp
(bad)
sub
xchg
jns
adc
sbb
test
push
mov
add
mov
fwait
cmps
imul
hlt
add
xor
ror
std
jbe
mov
add
add
add
js
lea
and
mov
push
add
aaa
and
es
inc
fadd
push
push
in
dec
add
jmp
test
add
cmp
es
loope
les
push
add
jle
cmps
push
push
adc
test
sbb
lea
push
xchg
add
lock
shl
mov
push
fs
mov
lahf
dec
sub
lea
push
push
cmps
in
es
adc
sub
xchg
inc
test
inc
sbb
cld
and
mov
add
push
lock
dec
push
ss
std
cmps
xor
push
adc
inc
repz
push
add
lock
mov
jge
add
cmps
int3
jbe
xchg
push
(bad)
sbb
adc
in
test
cmp
js
inc
push
out
data16
lods
xchg
push
lock
adc
or
je
cmp
mov
push
fmul
gs
cdq
dec
daa
cld
push
lock
in
(bad)
hlt
sub
cmp
or
pop
in
push
js
inc
jo
sar
pop
and
enter
jmp
mov
adc
xchg
mov
test
inc
sbb
dec
sub
and
cmp
test
shl
and
dec
loop
in
inc
sbb
mov
sbb
repnz
xor
cmp
jbe
test
daa
cmovo
dec
ins
cmps
sti
ja
aam
push
pop
cmp
jmp
and
jne
dec
(bad)
and
and
in
xor
cmp
sbb
cld
xchg
or
mov
ins
inc
adc
xchg
mov
retf
jne
jno
loopne
pop
xor
(bad)
xor
inc
sbb
xchg
stos
setns
call
in
pop
in
cld
mov
imul
add
call
mov
jo
fs
jmp
fs
adc
out
or
not
adc
inc
adc
push
or
dec
(bad)
int
adc
push
push
cmp
xor
mov
data16
add
adc
or
cmp
add
add
xchg
ret
jle
cmp
inc
rol
popa
sub
js
add
mov
push
push
mov
adc
inc
add
xor
lea
inc
and
(bad)
add
add
or
repnz
push
pop
in
je
mov
inc
retf
mov
and
ds
mov
fadd
ret
ror
stc
inc
add
mov
mov
sub
cmp
mov
fist
loope
pusha
inc
dec
(bad)
(bad)
and
pop
out
neg
push
jmp
adc
add
das
loope
add
pop
test
sbb
jle
or
cmp
adc
mov
push
dec
push
dec
arpl
pop
sar
push
push
sub
dec
xchg
push
daa
daa
mov
inc
mov
inc
nop
cmp
inc
sahf
js
mov
xchg
xchg
cmp
sub
lds
sahf
push
pop
pop
push
test
cmp
mov
xor
sbb
test
dec
dec
pop
push
jmp
dec
call
pop
push
inc
loop
sbb
xchg
or
add
pop
mov
jne
add
sahf
mov
jg
and
or
sbb
pop
mov
or
xchg
shl
imul
jle
jecxz
mov
jmp
rcr
xchg
fstp
add
push
push
adc
push
mov
inc
adc
adc
mov
lea
rol
(bad)
sub
or
pop
xor
pop
sub
outs
push
arpl
out
movs
pop
into
hlt
or
inc
add
cmp
jge
scas
xor
sub
cmp
repz
pop
cmp
pusha
push
sbb
xor
add
push
or
pop
cmp
and
mov
in
dec
sbb
push
popf
loope
push
sbb
icebp
fs
sbb
imul
fdiv
(bad)
xor
pop
inc
lock
jmp
aaa
dec
cmp
push
fwait
pop
push
cli
mov
popf
cli
mov
test
(bad)
int3
xor
shl
aam
adc
mov
mov
pop
je
out
mov
cdq
mov
daa
pop
inc
call
sbb
push
shr
push
adc
mov
lds
xchg
fild
and
pop
jbe
out
adc
rol
mov
outs
jbe
xor
inc
ret
sbb
push
xchg
icebp
add
adc
adc
fs
xor
or
dec
fxch
inc
jb
dec
and
mov
loopne
sbb
cmc
fst
push
imul
or
dec
test
and
sbb
test
icebp
mov
jp
or
sub
mov
dec
pop
push
adc
mov
sbb
scas
inc
adc
stc
add
or
xor
sub
cmp
push
and
fdiv
ins
leave
movs
mov
push
shl
jne
lock
dec
pop
jmp
shl
adc
adc
jmp
mov
inc
xchg
mov
inc
sub
test
scas
and
ins
loope
sbb
and
(bad)
push
pop
js
fmul
jo
inc
xchg
or
xchg
out
mov
(bad)
cmp
sub
adc
jmp
mov
outs
xor
sbb
pushf
scas
dec
and
jge
adc
sub
ins
call
mov
stos
xchg
mov
push
in
call
or
pop
jp
fs
loopne
loopne
or
(bad)
jge
cmps
test
and
adc
push
pop
push
js
and
sbb
push
mov
pop
fs
sar
cld
dec
jne
inc
cli
aas
mov
inc
call
add
je
jno
inc
loop
push
pop
and
xor
adc
nop
push
xchg
dec
sbb
lods
popa
adc
pusha
and
sbb
ror
retf
test
and
add
adc
shr
push
ds
sbb
sbb
mov
sub
inc
sbb
xor
mov
pop
mov
jle
cwde
adc
test
movs
xlat
or
mov
jo
ja
jle
mov
push
push
push
fcom
pushf
and
mov
push
push
fisub
sbb
cmovo
sub
and
push
add
sbb
add
dec
in
outs
imul
xchg
rol
mov
or
jb
popf
add
or
cdq
dec
pop
test
pop
xchg
mov
and
push
shl
sub
mov
outs
sar
xor
push
jmp
sub
push
push
and
add
jnp
adc
or
mov
push
div
or
jp
movs
push
and
fisubr
sub
fild
jo
rcl
sbb
cmps
or
inc
loope
imul
sub
sbb
fimul
movs
xchg
adc
into
push
push
pushf
dec
jg
outs
sub
xor
or
int3
call
sbb
inc
sub
mov
(bad)
jmp
movs
pop
sbb
sub
loop
rcr
or
cmp
lods
push
inc
sub
pop
push
pop
push
inc
aad
jb
cmp
adc
(bad)
fisttp
dec
pop
je
adc
outs
mul
imul
dec
loope
xor
or
(bad)
or
sub
into
push
add
pop
clc
push
sbb
or
repz
xor
push
arpl
sub
dec
fimul
je
or
test
test
and
push
lahf
fcomp
add
jne
mov
js
in
shl
imul
mov
mov
rcl
pusha
xor
movs
rcl
outs
jae
retf
or
mov
push
push
xchg
mov
popa
rcl
sbb
adc
sbb
xor
pop
xor
adc
sar
xor
mov
adc
mov
sub
outs
add
push
jae
sub
dec
nop
push
cmp
gs
cmp
push
sbb
fild
add
mov
mov
and
jne
nop
fld
(bad)
test
lds
pop
sar
adc
dec
sbb
jmp
add
mov
mov
test
dec
xor
push
bnd
add
and
inc
or
imul
adc
add
push
adc
mov
mov
push
inc
add
ds
jl
or
icebp
hlt
or
adc
mov
hlt
pop
sahf
inc
add
jmp
add
adc
or
sbb
push
push
scas
sub
dec
push
inc
fdiv
mov
aaa
jnp
cs
icebp
les
dec
sbb
jne
stc
loopne
les
push
xchg
or
stos
mov
in
mov
xchg
lea
(bad)
sti
jns
jo
dec
call
pop
add
and
adc
inc
xor
sub
in
ds
push
or
add
add
idiv
ins
popa
sbb
mov
xor
or
xor
fadd
retf
in
dec
or
pop
pop
std
outs
and
pop
add
hlt
cli
loopne
mov
jle
jo
xchg
sbb
movs
outs
aam
std
jbe
jle
aaa
sbb
or
mov
inc
cmp
push
pop
call
ins
popf
popf
xor
lea
cld
xchg
fcomp
cs
mov
popf
(bad)
sti
mov
adc
fistp
cmps
push
cmp
cmp
pusha
mov
pop
mov
out
out
mov
in
cs
retf
add
(bad)
retf
sub
hlt
arpl
and
repnz
dec
cs
xchg
xchg
fucom
clc
cld
push
add
or
data16
add
sub
sbb
jae
pop
sbb
and
sub
xchg
out
repnz
in
xchg
es
cs
out
push
or
ja
pop
dec
sbb
pop
xor
xchg
out
lds
popf
and
cmp
push
mov
ja
add
sub
or
frstor
out
mov
inc
sbb
shr
mov
jb
jbe
adc
jge
out
sbb
adc
pop
dec
test
mov
or
sub
movsx
mov
cs
out
sti
mov
or
push
int3
fstp
call
jge
test
pop
mov
or
mov
les
pop
mov
jns
loopne
ds
retf
in
in
push
inc
inc
mov
push
cld
sub
test
pop
test
xchg
jbe
mov
enter
jne
pop
jl
lock
sbb
popf
pushf
push
jge
(bad)
mov
or
adc
movs
retf
ja
ds
jne
and
in
mov
mov
std
mov
pop
mov
sub
xor
push
mov
nop
lahf
push
verr
push
retf
jns
dec
push
cmps
movs
cld
call
sbb
inc
std
or
mov
bound
fisttp
push
mov
or
pop
js
out
jb
jl
add
xchg
cmp
mov
pusha
in
scas
mov
aad
pop
mov
shr
cmp
xor
xchg
dec
mov
(bad)
xchg
dec
aaa
jb
fimul
pop
scas
push
jge
or
lock
push
cmp
or
test
push
in
push
adc
in
pop
adc
out
repnz
adc
jmp
divps
dec
mov
mov
add
cmp
mov
movs
fst
sub
sub
mov
dec
in
cs
(bad)
xor
xchg
cmp
in
sub
das
adc
dec
dec
fld
mov
jb
push
cs
jmp
or
push
test
xchg
dec
ja
adc
sbb
pop
and
mov
retf
in
rcl
mov
sub
test
lods
(bad)
sub
mov
test
in
ds
shr
jmp
fcom
fsubr
jo
arpl
add
stc
rcr
jmp
xor
adc
inc
mov
mov
sbb
jmp
adc
mov
pop
push
pop
cmps
lea
sbb
mov
rcl
clc
pop
pop
mov
fdivrp
fnstenv
xchg
xor
int3
mov
dec
mov
sbb
xor
out
rcl
sub
fdiv
cmp
push
inc
pop
fwait
cmp
pop
sub
pop
push
jno
push
sub
mov
pop
enter
pusha
jge
dec
pop
cmp
dec
test
inc
les
dec
jmp
jmp
pop
and
in
test
xor
jnp
jl
cwde
jns
push
mov
xchg
xchg
dec
test
js
sub
sar
jl
retf
out
lods
and
and
dec
mov
or
syscall
add
mov
xlat
xor
scas
add
mov
mov
mov
pop
les
dec
enter
into
shr
xor
push
loop
sub
loopne
imul
add
mov
add
neg
cmp
cmp
push
or
pop
dec
push
movs
sub
sbb
fs
lea
push
push
imul
dec
fcom
add
jno
fld
pop
cmp
jne
(bad)
mov
nop
scas
cld
mov
push
add
mov
and
xor
getsec
dec
gs
push
rcl
(bad)
mov
fadd
sbb
fild
in
fstp
jg
xchg
add
xchg
clc
xchg
inc
div
mov
inc
out
xor
mov
add
add
push
add
mov
adc
test
push
lea
cmp
mov
shr
inc
cmp
(bad)
dec
rcr
push
lods
push
or
sub
es
out
or
imul
push
test
fisttp
mov
adc
push
adc
imul
cld
test
pop
push
enter
dec
cdq
retf
mov
or
shr
sub
movs
sbb
cs
fwait
test
arpl
adc
retf
push
in
xlat
and
out
xor
lea
or
push
sbb
(bad)
pop
mov
movs
add
cmc
cmp
xchg
(bad)
cs
inc
adc
sub
pop
xor
icebp
push
mov
jne
pop
cmc
loope
ret
fnsave
add
jle
sub
sub
mov
jnp
mov
lods
call
inc
das
sbb
dec
add
and
dec
jecxz
push
fs
stos
add
movs
icebp
mov
xchg
or
xor
inc
imul
pop
imul
lods
add
add
in
cmp
push
leave
pop
xor
adc
inc
xor
pusha
jge
fsubr
test
xor
inc
push
ds
add
mov
in
add
cmps
jbe
adc
jns
adc
lock
setbe
and
jmp
add
out
daa
mov
sub
sub
fdivr
ret
enter
ins
mov
lock
test
cmp
mov
rcl
add
jbe
xor
push
test
(bad)
jno
sub
rcl
ror
(bad)
or
lock
aas
sbb
icebp
outs
test
and
sub
add
sub
outs
ins
jbe
push
bound
dec
mov
mov
xor
int3
and
and
loopne
ror
sbb
fstp
out
add
dec
pop
or
movs
mov
das
jne
rol
mov
jl
cmp
(bad)
or
or
add
adc
sbb
sbb
or
lahf
and
push
lock
push
mov
jb
jge
leave
in
inc
sub
sub
or
xor
xor
lock
sub
push
jbe
push
dec
mov
sub
adc
or
into
rcl
ss
add
push
pop
icebp
test
push
xchg
add
je
push
mov
push
push
rcl
xchg
sub
(bad)
xchg
adc
push
int
js
sub
or
xor
pop
cmp
and
xchg
cmp
ins
aas
mov
out
push
sbb
fmul
pop
inc
dec
adc
and
push
sbb
inc
xor
dec
sub
and
xor
int
push
pop
or
jmp
jb
jne
dec
imul
arpl
gs
push
or
sub
push
jmp
xchg
xor
xor
jl
add
add
cmps
push
call
rol
push
and
out
cmps
lock
xor
nop
push
xor
retf
lea
leave
inc
push
(bad)
mov
xchg
push
push
pop
shr
xlat
lea
inc
push
sbb
movs
cmp
cmps
xor
or
aaa
cmp
pop
rcl
inc
cmp
popa
pusha
pop
ss
or
cwde
js
xor
push
xor
or
jo
or
mov
test
pop
je
adc
jno
sahf
adc
sub
fcom
jo
sbb
test
xor
or
jmp
or
pop
popa
xor
and
push
and
ins
in
cwde
pop
xor
sahf
scas
js
inc
pop
sbb
rcl
sub
push
neg
shl
adc
mov
pop
dec
out
pusha
sbb
mov
lock
jo
(bad)
mov
shr
mov
cmp
in
js
push
rol
and
mov
mov
in
push
test
jbe
mov
add
imul
jge
jmp
int
js
adc
add
mov
xor
push
add
sbb
or
adc
or
icebp
adc
(bad)
jecxz
add
mov
sbb
call
sbb
imul
lahf
inc
sbb
sar
sbb
mov
hlt
or
test
shl
mov
sbb
mov
jmp
add
cmc
mov
add
movs
or
daa
mov
popf
out
jbe
sub
pushf
daa
test
fnsave
movs
pop
mov
call
push
pop
and
shl
(bad)
push
sub
jmp
mov
mov
(bad)
sub
xor
ja
mov
in
pop
loop
add
sub
mov
mov
clc
pop
shr
xchg
lea
add
sbb
stos
mov
nop
inc
and
sub
adc
les
mov
push
adc
xor
xor
adc
dec
pusha
push
mov
mov
push
sbb
lea
cmc
or
mov
pop
xor
or
sub
mov
test
rcl
mov
loope
loopne
push
xor
ffreep
push
xor
mov
xchg
retf
sbb
adc
clc
jo
shr
sub
push
jp
retf
mov
(bad)
adc
add
mov
mov
aam
pusha
jl
cmp
pxor
adc
cmp
adc
lods
xchg
ud0
and
in
sbb
inc
loop
push
fidiv
adc
lock
adc
sbb
gs
add
push
je
sbb
mov
scas
lea
cwde
sbb
push
add
fs
cmc
cmp
or
mov
push
call
gs
add
jo
movs
pop
into
and
add
jl
movs
pop
and
rcr
test
stos
add
jbe
pop
push
add
mov
das
push
ror
push
cmp
clc
les
das
jge
aam
xchg
adc
mov
sbb
jp
mov
mov
jb
shl
adc
sub
push
jmp
push
pmaxub
adc
cmp
push
pop
mov
dec
sbb
sbb
test
add
(bad)
sar
mov
sub
mov
popf
rep
rol
sub
inc
fs
adc
mov
jmp
add
mov
jp
sub
cmp
int
adc
or
adc
mov
adc
pop
add
cmp
(bad)
jo
and
xor
xchg
xor
fwait
ins
cmp
fild
outs
xor
and
cmp
push
nop
push
test
xchg
test
iret
das
cmp
gs
in
add
adc
sbb
mov
sub
pop
xor
or
in
pushf
pop
pop
and
ret
scas
sub
mov
xchg
es
ins
adc
add
hlt
cdq
mov
push
mov
adc
rcr
sub
ret
test
mov
push
push
and
lahf
ins
adc
jne
xchg
inc
mov
jne
imul
je
cmp
pop
psrad
or
add
adc
test
test
push
movs
pop
xchg
cmp
or
mov
mov
xor
and
add
ins
mov
mov
dec
add
inc
sub
test
jae
add
(bad)
xor
lea
nop
dec
sub
faddp
lea
or
lahf
adc
iret
xor
xchg
retf
dec
inc
xchg
std
add
jne
(bad)
dec
dec
lods
add
int3
cmp
fisubr
outs
jnp
test
sub
push
push
and
jo
ror
jbe
jge
test
fadd
shr
sbb
lods
dec
cmove
inc
in
mov
pop
ds
push
(bad)
pusha
shl
mov
jl
ins
xor
je
js
jl
in
xchg
or
xlat
loopne
or
test
adc
add
pop
inc
in
adc
adc
jge
jns
lds
cmp
xor
mov
outs
movs
adc
mov
mov
mov
les
push
stc
sbb
or
dec
fsub
and
fmul
xchg
sub
and
in
ret
and
je
jb
push
test
mov
jl
fwait
cld
sbb
in
enter
sbb
sbb
xchg
mov
xchg
xchg
daa
xchg
fucomip
sbb
fld
inc
xchg
fadd
je
inc
cmp
and
fadd
mov
cs
add
jno
dec
xlat
fs
inc
push
cs
or
ins
arpl
push
fs
cmps
mov
popa
(bad)
ror
xchg
cld
ins
mov
nop
enter
adc
pop
ds
sub
xor
mov
dec
in
repnz
sub
xchg
cmp
aas
and
je
push
push
enter
adc
jo
inc
inc
ficomp
pusha
fs
iret
enter
ins
mov
iret
enter
les
repnz
mov
xor
mov
outs
in
mov
pop
cwde
js
test
ror
addr16
and
mov
push
or
pusha
sub
ror
jbe
sub
enter
ds
cmp
xchg
xchg
jge
and
jmp
push
aaa
or
and
pop
dec
pop
cli
fistp
sar
lea
mov
push
(bad)
popa
std
push
aad
ret
jge
dec
pop
jmp
jle
adc
push
cmp
ret
pop
push
inc
jg
mov
jmp
jbe
test
or
push
push
add
mov
or
jge
add
arpl
(bad)
mov
and
and
push
fisub
xor
clc
add
inc
jne
and
sbb
call
not
frstor
nop
sub
je
mov
jae
aam
fs
and
push
test
jmp
jecxz
test
and
pusha
push
das
add
ret
add
stos
jl
cwde
mov
fimul
and
mov
aad
push
xchg
es
xor
xchg
movs
push
dec
sbb
or
(bad)
xchg
outs
(bad)
ficom
cmp
xchg
dec
jecxz
mov
adc
pop
lock
xchg
and
loopne
mov
dec
push
repz
xlat
dec
mov
inc
cmp
popa
jl
imul
mov
xor
sbb
adc
mov
push
xchg
push
push
div
loope
xor
aam
add
pop
shr
jg
inc
call
ss
mov
pop
push
mov
and
adc
lods
mov
out
cmp
inc
pop
adc
push
(bad)
nop
popa
cmps
adc
test
gs
sub
add
jbe
mov
mov
sbb
scas
movs
mov
xchg
cdq
mov
gs
add
sbb
or
lahf
sub
jecxz
jg
dec
je
adc
jne
lahf
aam
push
gs
xchg
mov
in
add
arpl
dec
add
pop
nop
mov
stos
pop
(bad)
sbb
or
jno
dec
mov
or
cmc
test
mov
or
push
pop
mov
mulps
imul
adc
inc
add
mov
and
int3
scas
test
sahf
or
xor
adc
sbb
outs
pop
jmp
xchg
add
repz
daa
and
mov
inc
nop
cmp
movs
sub
call
or
shr
pop
cmps
push
adc
out
or
cmp
dec
scas
sti
jmp
div
mov
mov
in
mov
loope
or
or
test
ret
imul
adc
pop
push
pop
pusha
not
mov
repz
add
xchg
add
sbb
sub
or
mov
aam
mov
outs
sbb
xor
and
mov
push
js
and
leave
inc
inc
inc
push
shl
arpl
sub
sub
jns
pushf
and
inc
jns
outs
mov
loop
xchg
std
sbb
pop
cli
jo
add
lea
inc
aad
pop
loopne
or
jno
lea
js
cmp
mov
sub
scas
adc
jmp
lea
jmp
xor
dec
jbe
or
cmp
sub
and
lods
sbb
add
add
sub
fadd
mov
xchg
std
sbb
lea
adc
cmps
push
jbe
xchg
and
mov
rol
ret
movs
mov
scas
pop
(bad)
movs
mov
and
push
dec
adc
imul
sub
jmp
js
enter
pop
pop
inc
and
inc
ror
push
jb
mov
add
pop
mov
xchg
inc
or
ins
dec
xor
pop
arpl
sub
sub
xchg
or
test
mov
test
mov
in
shl
mov
in
adc
jmp
push
pop
ror
or
jmp
push
call
jnp
enter
in
fstp
pop
aam
and
imul
mov
inc
or
in
loope
add
lea
push
dec
or
push
fiadd
jns
pop
int3
push
js
ror
fmul
inc
pusha
hlt
inc
fadd
and
jno
movs
and
(bad)
or
push
xchg
(bad)
test
or
sbb
mov
fst
sub
outs
nop
inc
add
add
or
cmps
loope
mov
xor
nop
jo
sub
arpl
shl
pop
mov
retf
ret
add
jbe
cmps
out
add
add
jo
or
xor
fnstcw
pop
mov
fimul
dec
popa
mov
jg
mov
mov
xchg
cmps
icebp
push
pop
or
ins
sar
cli
hlt
cmp
pop
dec
cli
push
out
add
icebp
push
inc
push
add
inc
adc
inc
cmp
fist
jae
dec
loope
fst
mov
clc
or
cmps
xor
adc
add
fidivr
bound
push
mov
pusha
loop
shl
mov
and
cli
add
mov
sbb
cmp
sbb
lods
sub
dec
loope
dec
imul
lods
sub
sub
cmc
adc
inc
mov
cmp
adc
push
inc
neg
push
jns
add
mov
add
leave
add
inc
lds
jmp
xor
or
push
inc
add
repnz
add
and
or
mov
aaa
test
int3
js
xchg
jl
cmp
push
mov
sbb
sub
sti
or
cmp
sbb
or
sbb
push
xor
in
mov
add
rcr
mov
and
adc
test
test
inc
out
xchg
sbb
adc
cmp
mov
inc
push
ins
arpl
inc
xchg
xchg
pop
(bad)
mov
es
clc
ins
int3
sub
pusha
and
sub
sub
dec
pop
sbb
mov
adc
and
ud2
lods
stc
mov
mov
xchg
pop
repz
test
dec
xchg
test
adc
jg
add
arpl
pusha
cmp
add
add
sub
jo
xchg
pop
add
adc
sub
adc
in
mov
jp
sbb
add
cmp
fmul
cdq
(bad)
cld
stos
cdq
rcl
pop
push
fmul
pop
loop
(bad)
xor
aam
mov
in
jecxz
dec
add
test
dec
mov
aam
arpl
fsub
stc
xor
pop
ret
push
stos
pop
fs
pop
jns
push
pop
push
lds
test
jp
xor
rol
les
dec
add
cmp
dec
jmp
and
rol
add
sbb
movs
jbe
push
ss
dec
sub
jmp
dec
jmp
pop
or
jo
sub
inc
ror
pushf
nop
retf
les
mov
xchg
and
xchg
push
or
cmp
arpl
add
das
pop
ret
mov
nop
sbb
inc
lea
fs
or
pop
and
dec
sub
mov
std
mov
adc
inc
xchg
adc
adc
movs
xchg
mov
xor
pop
adc
push
add
cmp
adc
jne
mov
aas
ds
ins
mul
jmp
sbb
fild
mov
aas
test
and
ret
jmp
add
data16
inc
inc
data16
loopne
pop
sbb
cli
cmp
pushf
std
jne
fstp
test
inc
xchg
xchg
adc
movs
setne
mov
add
xlat
callw
jmp
push
cmp
adc
daa
fst
dec
or
rol
outs
jno
adc
ret
shl
pop
jle
repnz
(bad)
jg
or
cmp
add
(bad)
aaa
into
mov
adc
add
dec
pop
nop
cmp
imul
lods
pop
push
xchg
(bad)
nop
fisubr
mov
push
and
mov
cmp
iret
push
outs
mov
and
xor
sub
daa
dec
add
pushf
(bad)
(bad)
lock
push
or
add
test
and
fmul
inc
push
push
jmp
push
dec
add
(bad)
shr
mov
and
cmc
das
pop
dec
dec
sub
mov
jbe
push
fisubr
or
jnp
adc
adc
jle
imul
movs
add
mov
in
mov
call
sub
sub
jmp
in
push
aaa
pop
and
cmp
sub
dec
in
fstp
cmc
push
jo
test
fiadd
dec
cli
pop
std
mov
call
or
add
adc
ret
jnp
loop
push
je
test
xor
cmps
loope
mov
add
fiadd
rol
out
or
jbe
inc
pop
out
add
jns
cmp
test
mov
jp
add
call
nop
mov
out
dec
xchg
adc
test
sub
ds
jecxz
or
mov
popf
cmp
mov
cmp
push
add
jo
jo
jns
mov
sbb
mov
or
arpl
jmp
sbb
jne
mov
cmp
lds
call
mov
pop
dec
cmp
push
xchg
bound
test
and
and
call
xor
add
cmpxchg
pop
mov
js
push
adc
mov
dec
ret
fucomip
test
pushf
movs
dec
pusha
and
xor
rcr
xor
and
nop
bswap
sbb
and
push
(bad)
call
jne
(bad)
call
lahf
jne
mov
mov
or
xor
cli
loopne
or
mov
add
or
inc
jae
and
icebp
test
xchg
ds
pop
or
mov
mov
retf
inc
clc
clc
nop
sub
imul
mov
cmp
sbb
or
psubsw
mov
sub
stc
cld
psrlq
sbb
aam
stc
sub
mov
xor
fidiv
icebp
jo
xor
jne
adc
js
push
pop
movs
jne
jbe
jle
fcom
call
push
push
cmps
xor
push
test
ffreep
sbb
cdq
stc
or
jo
add
cmc
add
and
inc
ror
or
add
pop
mov
adc
mov
test
mov
dec
test
mov
mov
push
dec
cmp
inc
pop
or
or
dec
xchg
add
ds
sti
jmp
fld
sbb
jbe
rcl
push
nop
and
xor
sub
xchg
jno
cmp
xlat
xchg
cmc
fcmovbe
(bad)
xor
xchg
repz
xchg
loopne
repnz
jp
jl
cmp
popf
sbb
mov
mov
cmps
imul
leave
or
add
or
ins
sbb
pop
push
mov
test
inc
inc
xor
pusha
xchg
cmp
or
int
cdq
sub
(bad)
mov
fild
mov
adc
lea
mov
popf
push
add
add
add
inc
inc
mov
push
mov
sub
pop
leave
lods
fld
jbe
sbb
(bad)
xor
dec
call
and
mov
retf
add
and
sbb
or
xchg
and
stc
adc
mov
sub
xchg
rol
add
push
out
add
or
or
add
adc
es
fdivr
push
mov
xor
cwde
rol
sub
mov
icebp
jle
lods
jmp
repz
push
jecxz
mov
adc
inc
dec
push
shl
in
push
fdiv
or
jecxz
sar
or
mov
cmp
test
pop
push
pop
inc
cmp
ret
mov
ror
mov
adc
or
and
dec
or
push
jae
inc
mov
push
icebp
inc
mov
dec
add
cmp
inc
sub
add
or
adc
test
inc
adc
cs
adc
imul
shl
out
and
and
cmps
adc
push
jle
dec
ins
shl
pop
xchg
push
adc
cs
js
ret
mov
sahf
mov
(bad)
xchg
adc
in
js
rcr
cmp
mov
xchg
push
mov
mov
test
adc
test
or
dec
leave
or
xlat
gs
sbb
cmp
and
jle
and
rcr
cwde
or
sbb
addr16
movs
enter
fcom
pop
rcr
add
fcom
push
adc
enter
mov
push
push
push
inc
push
xor
pop
imul
(bad)
jne
pusha
test
rol
imul
popf
pop
and
nop
add
cmp
add
jp
add
pushf
or
jmp
mov
cmps
shr
dec
xchg
mov
loopne
push
lahf
cwde
cmp
(bad)
xchg
push
repz
imul
retf
or
(bad)
mov
out
adc
jne
or
mov
(bad)
pusha
cmps
shr
nop
fadd
sbb
or
jge
mov
adc
mov
pop
push
or
cli
add
adc
popa
xor
xchg
call
push
fiadd
add
pop
and
push
add
adc
add
lahf
inc
and
cdq
and
pushf
xchg
aam
cmp
es
add
popf
lock
movs
fist
adc
repnz
push
lods
leave
add
out
loopne
ret
jge
adc
add
int
adc
or
jg
mov
mov
pop
xor
in
jge
xchg
mov
loop
sbb
mov
and
add
test
or
pusha
xor
jmp
sub
mov
push
fcomp
aaa
mov
and
setbe
push
mov
cwde
jmp
push
push
aaa
in
call
loopne
add
in
mov
pop
xchg
mov
cmp
or
sahf
dec
add
mov
mov
inc
lahf
mov
pushw
iret
or
and
bound
adc
adc
adc
and
shl
xchg
and
add
stos
inc
loope
jo
sbb
xchg
pop
pop
adc
(bad)
sbb
or
sbb
jmp
cmp
inc
test
pop
xchg
mov
(bad)
push
ret
mov
adc
or
scas
ficom
wbinvd
inc
lods
sti
rcr
and
push
mov
outs
lock
sbb
push
mov
fidiv
ins
jl
enter
mov
mov
clc
mov
push
stos
or
push
pop
movs
sub
inc
clc
fdivr
xor
adc
pop
ss
mov
xor
pop
inc
xchg
rcr
pop
and
inc
xor
sbb
sbb
push
imul
outs
xchg
mov
js
scas
add
cmp
or
loopne
or
or
inc
cld
add
pop
fld
push
mov
push
(bad)
push
xchg
test
jp
jnp
adc
sbb
push
fisttp
lods
test
and
add
das
lds
aaa
call
call
or
xchg
pushf
fwait
and
and
pop
push
repz
inc
push
mov
inc
jmp
mov
sbb
pop
fsub
mov
mov
ret
bound
xchg
xchg
sbb
fwait
mov
repnz
stc
add
mov
je
pop
lods
and
fist
and
add
cmp
sbb
rcr
cmp
push
cmc
sub
movs
inc
xchg
pusha
mov
or
clc
out
push
mov
fwait
push
adc
out
add
dec
cwde
lea
call
ret
ins
push
int
or
adc
push
into
sbb
fstp
push
add
adc
cmp
ret
xor
mov
movs
inc
sub
pushf
inc
cmp
jmp
int
add
enter
add
pushf
daa
sub
inc
js
xchg
pop
sub
adc
in
sub
mov
jns
fcom
js
mov
xchg
sbb
bnd
xchg
or
xchg
mov
inc
add
daa
sub
dec
mov
cmp
push
das
jb
fsub
push
push
mov
sub
divps
push
xchg
inc
xor
ret
pop
movs
push
stos
jo
lods
dec
js
xchg
pop
mov
div
rol
das
push
jnp
dec
add
jmp
and
test
jns
je
mov
push
lods
or
or
sbb
jmp
mov
sbb
fsub
adc
or
mov
jno
pop
lods
sub
fscale
ins
push
and
or
xchg
aam
test
push
add
movs
xor
scas
lds
test
leave
cmps
push
adc
add
ret
clc
enter
dec
sar
pop
pusha
lea
or
xchg
pop
lea
mov
test
and
in
popa
mov
je
imul
mov
jb
es
inc
cmp
pusha
out
gs
add
push
jmp
out
fwait
ret
jae
and
fld
pop
sbb
adc
sub
jmp
mov
test
ret
mov
mov
rol
sbb
jmp
push
scas
lods
sbb
pop
lahf
push
hlt
ror
call
jmp
sub
or
mov
dec
jl
push
sbb
mov
add
nop
arpl
orps
add
sahf
sbb
outs
and
push
ror
pop
cmp
test
and
das
adc
push
push
push
push
xor
lock
popf
add
outs
jbe
sub
ss
push
and
call
pop
jo
xchg
and
mov
push
test
popa
sub
adc
or
frstor
inc
repnz
fwait
inc
push
cwde
sub
pop
es
cmps
in
cmp
add
push
pusha
push
out
sahf
ins
jmp
jo
stc
or
repnz
inc
add
sub
push
adc
pop
or
loopne
imul
mov
sbb
inc
jge
xor
lods
jbe
pop
out
out
and
and
jne
es
fcmovnu
add
add
inc
jmp
cmp
mov
call
sbb
jl
fnstsw
stos
push
inc
hlt
sbb
mov
jecxz
add
loop
ror
pop
sbb
fstp
les
mov
inc
cmp
lock
inc
mov
loopne
mov
add
adc
pop
inc
pop
adc
cmp
fbstp
sbb
sbb
adc
jae
sbb
jmp
cmp
mov
movs
add
shl
or
or
sub
mov
dec
add
movs
sbb
test
push
add
fbstp
adc
rcr
js
and
test
push
shl
xchg
sbb
xor
sti
push
or
adc
jno
dec
popa
add
mov
sub
fcmovnu
cmp
test
ror
aaa
xor
mov
adc
sub
mov
scas
scas
and
test
mul
imul
addr16
and
mov
adc
add
addr16
imul
dec
arpl
sbb
push
(bad)
mov
add
fyl2x
ret
mov
inc
add
and
pop
sub
add
mov
add
mov
mov
test
jnp
xor
jne
cmp
sbb
fmul
jb
dec
add
sbb
call
dec
sub
ficom
xchg
cmps
jno
mov
mov
loop
add
jp
das
inc
cli
inc
inc
add
jbe
cmp
sub
add
jecxz
nop
or
pop
mov
data16
cmp
xchg
push
mov
sub
inc
sbb
test
in
jmp
add
xor
mov
ret
push
add
xor
scas
je
les
pop
jne
gs
lea
ficomp
dec
je
add
mov
pop
aas
sti
(bad)
pop
std
mov
add
fwait
rol
xlat
mov
(bad)
cmp
add
(bad)
pop
jmp
push
cmp
dec
leave
inc
jo
clc
adc
add
imul
dec
mov
movs
rol
add
add
je
cmp
sbb
pop
mov
lahf
std
cmp
(bad)
sbb
inc
xchg
push
dec
sbb
rcl
sbb
push
fdiv
addr16
or
push
fsub
fs
les
mov
pop
push
mov
mov
aas
add
pop
pop
imul
ja
inc
push
in
jmp
push
or
jae
xchg
push
daa
or
and
mov
cmps
test
mov
in
mov
sub
lods
and
sbb
sub
cld
cmp
jmp
mov
iret
shl
sar
fcomp
add
sub
jmp
(bad)
inc
dec
add
sti
mov
inc
loope
shl
mov
or
sub
fisubr
jno
fcom
mov
mov
push
and
bound
mov
repz
scas
add
lods
or
push
sar
sub
cmps
xchg
add
out
jne
mov
loopne
popa
ins
pop
inc
or
(bad)
cli
imul
pop
adc
sbb
mov
imul
mov
pop
sub
or
sahf
out
call
push
add
inc
cmp
int
ror
jp
push
hlt
sub
mov
jmp
imul
mov
sub
shl
or
and
movs
pop
push
sbb
lods
gs
leave
xchg
outs
leave
fs
retf
inc
inc
push
or
sbb
fdiv
push
and
sub
jl
push
enter
imul
imul
cmp
xor
push
pusha
inc
call
les
cmp
xor
add
dec
shl
les
test
push
sbb
jno
push
dec
mov
je
mov
nop
sbb
cwde
add
stos
sub
and
iret
loop
inc
or
mov
int3
cmp
or
push
mov
ret
cs
fdivr
jmp
fmul
inc
sbb
sub
add
fwait
xchg
pop
sub
add
(bad)
repz
or
or
mov
sub
push
cld
jp
popa
lea
and
or
sub
xchg
and
jb
xor
xlat
push
test
ret
push
iret
and
mov
sbb
in
push
lods
leave
cmp
push
jg
push
add
test
or
or
mov
push
shl
ja
add
cmp
add
je
pop
mov
ret
cmp
sar
pop
fsubr
dec
fsubr
or
jns
int
dec
sbb
and
jb
imul
frstor
xchg
(bad)
lahf
pushf
mov
ret
je
into
leave
adc
lea
pop
enter
and
jecxz
outs
test
retf
jle
or
js
in
push
add
xor
cmp
imul
inc
mov
(bad)
test
(bad)
je
fdiv
cmp
(bad)
cmp
addr16
scas
sub
push
fmul
xchg
adc
mov
or
stos
or
nop
test
and
push
add
lods
popf
loopne
inc
movs
push
pop
add
and
adc
jo
xchg
clc
or
call
unpckhps
sub
cwde
dec
sti
inc
or
ror
adc
inc
push
pop
xor
push
or
shl
xchg
sbb
pop
mov
and
cmp
stos
nop
pusha
mov
xchg
les
in
push
nop
pusha
ret
mov
enter
mov
jo
mov
lea
push
or
cmp
mov
or
(bad)
push
fmul
fnstenv
xchg
(bad)
dec
inc
cmp
movs
aad
lods
dec
rcr
inc
out
sub
imul
pusha
in
mov
dec
add
sti
mov
jno
mov
xor
mov
inc
fst
sbb
cld
or
int3
and
pop
aam
adc
leave
add
loopne
or
mov
call
dec
mov
add
daa
fbstp
leave
call
dec
jns
xchg
jecxz
xchg
sti
mov
sti
pop
or
cmps
xchg
push
fild
je
mov
pop
mov
mov
movs
sahf
repnz
inc
or
dec
dec
in
test
and
inc
lock
and
pusha
aad
das
adc
cmp
repnz
xor
adc
and
or
test
or
add
sbb
ret
cmps
push
adc
leave
adc
outs
inc
xor
std
stos
sbb
mov
fs
fld
data16
dec
or
mov
int
pop
adc
push
out
inc
aad
bound
in
aas
xchg
test
adc
imul
push
pushf
adc
ja
popf
ins
inc
test
inc
xor
nop
push
cmp
imul
js
jl
mov
xlat
push
inc
sbb
adc
mov
xchg
les
adc
push
or
dec
outs
push
and
add
loopne
lods
xchg
add
adc
adc
imul
cmp
dec
mov
dec
loop
inc
sub
stos
ins
lods
movs
shr
add
mov
mov
shrd
push
adc
push
adc
add
inc
sbb
fisubr
push
push
adc
inc
cld
je
mov
sub
sbb
jne
cmp
dec
js
sub
ficomp
push
leave
ror
repnz
(bad)
fimul
pop
adc
inc
nop
jge
cwde
mov
add
aad
popf
mov
(bad)
pop
or
push
push
test
bound
xchg
jp
jp
ss
push
rcr
lods
(bad)
retf
inc
inc
pop
cmp
mov
push
ins
push
call
adc
push
inc
push
push
out
pop
fcomp
xor
cmp
mov
mov
adc
lds
add
inc
je
cdq
adc
and
or
or
xchg
and
sub
add
push
add
mov
and
data16
call
adc
inc
bound
inc
ja
jle
or
or
dec
clc
imul
cmp
cmps
inc
cmp
or
jne
clc
out
jmp
outs
(bad)
pop
inc
bound
inc
push
dec
adc
test
(bad)
dec
test
add
in
xor
push
sbb
jnp
ficomp
or
push
test
das
dec
sub
or
mov
clc
lods
and
mov
nop
jp
add
adc
cmps
mov
ins
dec
xchg
sub
add
lods
ds
pushf
jp
mov
jo
pop
push
cdq
or
das
loopne
mov
push
and
push
mov
pop
dec
sub
jb
sub
inc
sub
mov
arpl
cmp
test
push
leave
add
movs
sub
push
dec
ins
mov
cmp
push
inc
dec
das
add
mov
dec
xchg
add
repz
mov
push
inc
(bad)
(bad)
pop
push
movs
lock
sar
aam
or
gs
fist
xor
ret
or
in
sub
inc
and
loopne
push
adc
clc
sub
cdq
xchg
push
cmp
inc
sahf
es
in
movs
aad
mov
mov
stos
or
pop
or
in
add
mov
pop
mov
inc
inc
cmp
push
cmp
push
and
cwde
push
dec
dec
rol
dec
ins
adc
ss
add
inc
push
pop
es
cmp
cmp
push
push
push
call
cmp
into
aad
inc
sbb
push
cmp
inc
sub
jbe
mov
enter
enter
push
rol
push
push
(bad)
movs
cmc
sub
mov
xchg
dec
mov
jbe
and
pop
add
sahf
cli
cmp
mov
mov
sbb
jnp
jge
lea
adc
je
push
cdq
mov
pop
inc
out
xor
lds
sub
les
push
adc
mov
and
mov
movs
test
jl
xlat
and
test
pusha
dec
mov
repz
xor
push
dec
mov
push
gs
push
xchg
add
adc
ins
dec
je
imul
inc
in
push
es
rcr
jb
loope
add
add
fidivr
std
pop
mov
sub
jg
xor
and
fistp
je
and
xor
and
adc
xchg
popf
xor
fiadd
push
pop
adc
push
add
ret
inc
(bad)
je
pop
or
mov
fiadd
add
jg
add
ret
jne
adc
ins
jnp
push
fwait
sub
movs
cmp
lods
push
arpl
pop
push
or
adc
sub
dec
pop
pop
mov
fwait
push
pop
movs
xchg
in
mov
dec
mov
cmp
fiadd
mov
push
fadd
xchg
loopne
or
adc
sub
fild
in
into
popf
mov
or
and
cdq
xchg
inc
sub
push
rol
jl
in
xchg
in
test
add
ret
inc
jmp
pop
cmp
sbb
xor
and
push
and
scas
mov
fsubr
fcmovbe
mov
and
shl
iret
or
mov
jb
shl
in
add
mov
std
ins
movs
xor
xadd
sub
adc
imul
xor
push
mov
ja
(bad)
and
and
cmp
or
(bad)
cmp
or
enter
and
shr
mov
mov
jmp
push
xchg
cmps
xor
add
sub
xchg
lea
dec
inc
xchg
repnz
add
cmps
fst
push
ja
jns
outs
push
dec
std
into
stos
dec
cmp
movs
mov
cld
adc
jbe
dec
loope
jne
push
(bad)
shl
fdivr
imul
sub
lahf
jp
add
lods
or
and
sub
sub
cmp
mov
and
adc
push
and
push
push
mov
add
xor
inc
pusha
jno
or
and
sbb
stc
pop
aas
dec
sbb
jecxz
inc
mov
mov
mov
dec
popf
push
dec
pushf
push
cs
xadd
popa
or
shl
xor
sbb
or
into
push
sbb
cmp
xor
jl
retf
nop
in
jge
pop
sub
pop
(bad)
jnp
adc
fadd
pop
jno
or
nop
enter
push
and
fsub
sbb
(bad)
sub
pop
fcmove
cmp
clc
push
ret
cld
fisttp
and
jmp
push
imul
cdq
xor
dec
ficomp
icebp
jmp
cmp
lods
dec
nop
div
je
ja
clc
ds
cmc
jno
jno
rol
pop
and
inc
sbb
nop
ror
(bad)
ds
lea
rol
sub
retf
ins
mov
sbb
xchg
sub
push
fidiv
or
push
sub
ret
sti
sbb
adc
or
push
adc
dec
cmove
push
repnz
push
dec
fadd
cmp
movs
rol
and
sub
sbb
hlt
shr
push
aaa
mov
push
mov
or
(bad)
rcl
lods
xchg
add
pop
pop
push
xor
inc
out
out
cmps
jne
inc
fsubr
lea
xchg
and
jo
sbb
adc
jo
inc
push
dec
sub
xchg
xchg
inc
push
pusha
jae
out
ja
mov
mov
sbb
or
sub
mov
jo
jecxz
xchg
adc
sub
xchg
inc
iret
popa
gs
dec
adc
add
dec
push
push
push
test
pop
ins
shr
xchg
xchg
fs
mov
push
not
xor
dec
push
or
in
lock
outs
jmp
sub
or
xchg
adc
jns
pop
push
test
mov
dec
jle
dec
xor
fwait
popa
ficom
xor
sub
adc
push
popa
movs
add
jno
mov
adc
jbe
cmps
add
adc
aaa
sahf
rcl
add
imul
aam
outs
adc
sbb
shr
mov
sbb
and
inc
jmp
(bad)
jo
ret
cmp
in
inc
and
mov
jae
in
and
dec
push
jns
jae
and
cmp
es
inc
sbb
and
cmps
add
dec
sub
into
xchg
xor
jb
jno
jg
iret
(bad)
mov
mov
das
ret
dec
sub
push
inc
jp
and
jmp
jo
cmp
rol
dec
jp
loope
cmp
and
sub
push
stos
(bad)
dec
xor
pop
retf
retf
adc
xchg
mov
dec
frstor
mov
sub
add
mov
or
mov
inc
stos
clc
mov
mov
jbe
push
jae
push
dec
or
and
cs
or
cmp
or
mov
dec
cmp
inc
cmp
out
(bad)
test
nop
push
push
push
xor
or
sub
jl
rol
cmp
cli
js
xchg
add
in
cwde
ss
les
ror
fcom
(bad)
lds
bound
add
aaa
fist
cmp
sbb
in
call
fistp
dec
add
pop
and
jmp
mov
and
pop
retf
ret
and
pop
ins
pop
add
push
add
aaa
sbb
and
clc
or
loope
(bad)
xor
xor
sbb
jbe
cmps
inc
cmp
mov
or
xor
ror
or
sub
cmp
sbb
or
cmps
and
push
push
scas
movs
popa
inc
lods
iret
inc
dec
pop
mov
shr
cdq
or
fidiv
or
scas
mov
loopne
add
adc
loope
push
test
or
pop
sbb
nop
pushf
sbb
inc
aas
inc
(bad)
pop
les
cmp
mov
mov
(bad)
jmp
outs
cmps
xor
push
mov
adc
pop
inc
js
pop
xchg
xchg
xchg
cs
dec
sub
mov
sub
test
inc
orps
inc
test
mov
rcl
push
mov
aad
jne
ins
mov
pop
pop
dec
or
add
ror
jae
xor
and
push
add
outs
sub
jmp
lods
pop
js
cmp
fiadd
xchg
out
add
push
push
(bad)
jo
or
inc
add
pop
lods
add
test
jl
cmp
xchg
stc
in
and
retf
add
out
push
mov
dec
or
ret
loop
mov
loop
scas
adc
jb
mov
adc
mov
dec
mov
dec
out
ss
mov
popw
call
sub
cwde
push
or
loope
call
data16
xor
scas
(bad)
aas
push
icebp
jg
pushf
jl
add
xchg
jo
arpl
add
cli
xchg
call
popa
pop
dec
inc
(bad)
lock
adc
xor
inc
push
add
(bad)
loopne
and
xor
or
pushf
mov
add
add
adc
jmp
rol
or
pop
inc
mov
add
and
and
jb
sbb
sbb
sub
sub
xor
mov
sbb
adc
pop
mov
cmp
xor
aam
push
rol
adc
ins
mov
mov
mov
es
ror
jae
jns
adc
dec
fstp
sbb
dec
push
jbe
sub
(bad)
dec
add
inc
sub
in
rol
cdq
dec
push
push
sbb
push
cmps
adc
loope
stc
sub
sub
pop
mov
adc
sbb
or
(bad)
pop
mov
fwait
xchg
inc
or
fsub
push
sbb
dec
loop
xor
dec
add
popa
imul
cmp
and
dec
(bad)
push
jl
add
dec
pop
ds
mov
and
call
out
dec
sub
mov
int
loop
mov
pop
rcl
repz
mov
inc
sub
or
xchg
xlat
fistp
sub
repz
mov
sbb
inc
fwait
push
jne
stos
sbb
shl
scas
adc
imul
loop
adc
cmovb
sbb
ret
repnz
cld
pop
rol
sbb
xor
xor
or
ss
or
aaa
daa
out
xchg
test
adc
jl
mov
aam
dec
popf
inc
test
js
push
or
mov
mov
jmp
mov
jmp
fist
cmp
inc
sub
or
and
xor
push
and
popa
xchg
dec
nop
in
leave
mov
or
sub
cmp
jl
test
cmp
pop
pop
or
cmp
cmovne
mov
pushf
push
in
neg
xchg
mov
jno
sub
call
sbb
fst
loopne
into
mov
test
jb
mov
mov
mov
cmp
xchg
adc
addr16
pop
jmp
je
cmp
lods
ficomp
or
dec
cmp
adc
dec
push
dec
adc
xor
(bad)
mov
cmp
jmp
push
push
or
add
fiadd
daa
inc
jns
out
sub
icebp
les
(bad)
sar
stos
pusha
mov
lds
out
jle
pop
lds
pop
dec
lds
push
in
push
out
fldcw
sahf
mov
sbb
push
cdq
inc
lds
adc
or
and
(bad)
jmp
pop
inc
clc
(bad)
jbe
popf
test
fisub
cmp
xor
sahf
dec
jmp
cmp
dec
mov
add
cld
daa
or
adc
sub
ins
push
push
ss
ins
jmp
push
js
imul
sub
adc
sub
inc
mov
inc
pop
push
loopne
push
mov
and
add
add
stos
ror
pusha
adc
xchg
out
add
dec
sbb
iret
mov
cmps
add
and
mov
add
push
mov
push
push
adc
dec
inc
cmps
in
sub
sub
pmulhuw
adc
inc
mov
inc
aam
cwde
or
loope
mov
xchg
mov
xor
mov
mov
sub
ins
sub
sub
sbb
sbb
es
push
mov
push
mov
aad
inc
sub
sub
jnp
cmp
shl
and
sub
stos
inc
push
push
(bad)
into
es
dec
sub
and
add
inc
imul
cmps
or
mov
adc
mov
pop
mov
cmp
dec
xchg
ds
adc
sahf
imul
mov
repz
test
mov
out
add
mov
popf
add
or
ins
and
jne
or
pop
out
push
push
mov
adc
jo
add
and
cmc
inc
dec
sub
js
jmp
sub
dec
ins
dec
dec
clc
push
jge
aam
shr
cld
pusha
loope
add
add
dec
adc
ret
test
fdiv
sub
push
mov
call
pop
retf
test
xor
jmp
std
pop
xor
push
lods
inc
or
je
mov
(bad)
daa
inc
test
push
div
xchg
mov
jp
fst
ret
cmp
pop
std
hlt
mov
fsub
sbb
call
rcl
movs
adc
push
pop
shl
xchg
sub
(bad)
push
or
add
push
sbb
cmp
jae
cmp
mov
mov
push
xor
xchg
xchg
pop
xlat
push
pushf
mov
push
data16
adc
inc
ror
mov
loopne
jne
push
aad
jmp
and
push
or
test
inc
xor
sar
cmp
outs
push
mov
jne
push
(bad)
iret
bound
adc
popa
add
shl
frstor
and
pushf
loopne
out
adc
neg
pop
dec
stc
adc
or
pop
cmp
push
sbb
and
add
and
add
stos
push
xchg
dec
cmp
pop
and
daa
cmp
daa
cmp
cmp
mov
push
outs
pop
xchg
pushf
(bad)
es
mov
fdiv
xchg
stos
inc
pop
sbb
add
mov
sahf
adc
and
dec
(bad)
add
or
jnp
nop
sbb
test
dec
cs
or
iret
mov
sub
xchg
and
in
imul
dec
mov
pop
push
out
je
ja
add
call
sub
add
mov
dec
mov
push
adc
push
or
pop
cli
test
mov
les
add
mov
push
adc
fdiv
push
inc
stos
es
mov
jo
(bad)
and
leave
cwde
gs
inc
jae
lea
arpl
inc
sub
xchg
add
mov
mov
lds
jmp
ins
test
add
xor
push
faddp
int3
and
sbb
add
push
mov
add
and
inc
in
or
test
ins
adc
push
in
test
mov
adc
and
mov
enter
or
mov
sbb
sub
adc
mov
pop
sar
inc
mov
retf
lock
aam
dec
ds
nop
adc
xor
popa
loop
jns
and
dec
call
push
int3
mov
dec
or
aad
nop
mov
push
push
jmp
fld
lea
iret
out
push
jge
inc
arpl
lea
test
movs
and
je
xchg
sub
dec
mov
adc
inc
or
loop
mov
sub
xor
add
sbb
fcom
mov
inc
mov
ins
ret
mov
in
lds
xor
mov
and
daa
fsubr
das
stos
mov
pusha
inc
into
push
dec
jo
adc
sbb
pop
lock
dec
daa
bound
or
cmps
movs
lock
stos
ret
(bad)
sbb
test
push
out
jg
lock
and
xchg
mov
push
or
loop
mov
sbb
add
lock
dec
retf
pop
ins
xor
push
jmp
inc
cmp
push
repnz
daa
gs
or
outs
retf
push
or
and
inc
sti
loope
sti
dec
sar
cdq
ror
jl
and
pop
in
fwait
pop
out
jo
and
adc
mov
xchg
out
cdq
sbb
js
sbb
(bad)
loope
inc
push
xchg
test
sbb
jnp
das
mov
sbb
jns
std
cli
rcl
sub
scas
imul
retf
lea
aad
nop
push
movs
mov
shl
dec
pop
sbb
mov
cmp
push
dec
mov
mov
shl
ds
or
test
bound
pop
or
popw
in
xchg
fst
ret
out
mov
sbb
sar
scas
xchg
or
movs
daa
or
call
dec
push
test
mov
lea
scas
xchg
rol
or
push
push
or
push
jmp
push
mov
jns
mov
push
mov
add
xchg
mov
push
and
adc
test
sbb
inc
and
and
inc
enter
pusha
add
or
shl
xor
xor
sub
cmp
or
and
sub
cdq
pop
push
mov
xchg
inc
shl
mov
and
and
dec
sub
stos
pusha
cmc
adc
pop
dec
js
(bad)
xchg
hlt
xor
pop
test
xchg
bound
lahf
mov
adc
fsubr
pop
movs
push
movs
or
pop
ss
js
test
jae
dec
or
test
cmc
jno
adc
push
aam
lea
cs
xchg
ror
adc
mov
add
cmp
das
dec
mov
add
jg
jmp
sti
push
pusha
retf
nop
scas
add
add
add
mov
pop
adc
push
inc
jl
push
sub
call
bound
enter
mov
jne
icebp
adc
lea
dec
mov
jl
stos
mov
sti
ins
inc
push
fs
mov
jne
mov
and
jbe
fcom
adc
jb
je
jnp
mov
out
add
xchg
inc
call
fst
xor
jne
push
ret
or
cmp
pop
aas
xor
inc
dec
dec
mov
push
add
lods
stos
rcl
mov
stos
add
es
aas
ret
pusha
cmp
mov
mov
mov
add
and
push
push
mov
xchg
(bad)
jnp
mov
mov
pop
add
call
loope
ss
mov
ficom
repnz
stc
or
or
xor
sbb
and
and
push
push
or
add
jmp
dec
push
dec
push
arpl
(bad)
ja
add
ret
or
dec
dec
ror
sub
mov
push
mov
inc
(bad)
imul
jns
mov
add
inc
fldenv
imul
and
imul
fild
fldz
in
cmps
mov
aam
fstp
pop
mov
cmp
jo
and
or
xor
or
cmp
dec
pop
add
or
mov
stos
adc
or
pusha
fisttp
stos
and
idiv
popa
and
movs
or
sub
or
xor
(bad)
es
sub
jp
cmp
push
movs
sub
mov
xor
mov
and
(bad)
push
push
dec
sbb
imul
mov
adc
pusha
jmp
ret
lock
inc
sbb
call
(bad)
cli
or
jbe
stos
cmps
out
dec
push
or
iret
gs
sub
xchg
mov
sub
lea
(bad)
or
ret
ds
adc
push
lea
jmp
mov
mov
fsubr
cmp
leave
in
inc
add
sub
sbb
mov
scas
mov
jae
jmp
sbb
jmp
or
push
dec
mov
mov
adc
dec
dec
and
add
jmp
ret
or
dec
mov
lahf
(bad)
sub
push
add
test
mov
mov
mov
adc
adc
and
outs
popa
jle
jb
icebp
add
sbb
add
xor
add
add
pop
mov
push
loope
(bad)
stos
dec
inc
pmovmskb
ficom
repz
mov
sub
loope
repz
fsubr
mov
xchg
dec
cmp
add
add
stos
mov
dec
and
fsubr
aam
cmp
xchg
hlt
mov
fs
add
adc
sub
aad
mov
xchg
jno
jnp
ret
imul
sub
sub
cmp
or
in
pop
push
pop
stos
add
test
inc
adc
jnp
fcomp
adc
mov
cmp
xchg
fild
mov
inc
(bad)
lock
mov
retf
std
cmovp
mov
sbb
pop
mov
inc
push
adc
je
and
add
fmul
neg
push
jo
push
dec
sbb
mov
sub
xchg
jns
ins
fwait
dec
inc
adc
je
jl
popa
rcr
and
push
push
je
lods
or
bound
push
data16
movhps
mov
es
in
add
and
push
mov
aas
lods
outs
fcmovnu
inc
dec
das
div
add
mov
inc
popf
and
push
mov
inc
das
shl
xchg
and
adc
stos
inc
mov
inc
or
sub
xor
adc
loop
add
push
xchg
mov
adc
adc
mov
xor
mov
lahf
mov
ret
dec
or
xor
sbb
jb
mov
push
sbb
dec
aam
push
mov
add
push
inc
mov
gs
retf
in
popa
xchg
push
sbb
pop
dec
sub
das
adc
leave
lock
sbb
mov
sbb
ffree
and
mov
sbb
movs
xor
and
rcr
movs
das
jecxz
call
data16
adc
pop
pop
jmp
ds
adc
jmp
or
or
adc
jo
jmp
in
and
add
aam
cmp
ret
dec
rol
push
in
in
jle
lea
push
jp
sbb
dec
jecxz
mov
nop
add
mov
aam
xor
or
inc
rcr
sti
adc
inc
or
fstp
mov
push
sub
fadd
inc
(bad)
sub
dec
or
push
aaa
xchg
pop
xchg
iret
push
(bad)
movs
push
dec
shl
sub
js
int3
hlt
dec
dec
and
inc
adc
mov
imul
and
cmc
xchg
cmp
sub
ja
ja
xor
jne
adc
adc
frstor
or
adc
lods
mov
adc
adc
inc
add
or
fsubr
and
xor
outs
mov
xor
idiv
or
adc
or
fmul
add
sbb
mov
in
pop
cmp
jmp
add
and
adc
dec
packssdw
adc
ret
add
jae
pop
add
imul
push
cmps
push
xlat
dec
imul
js
add
lahf
popa
mov
arpl
addr16
enter
sub
loope
sbb
xor
and
(bad)
(bad)
mov
inc
sbb
mov
dec
jmp
leave
xchg
push
mov
cmp
sub
movs
pop
xchg
stos
sub
clc
aaa
jne
(bad)
push
add
or
mov
(bad)
sub
adc
loop
cmp
dec
fisub
dec
in
mov
shl
sbb
mov
cmp
inc
inc
icebp
mov
dec
cmp
inc
add
xchg
mov
cs
scas
in
sbb
jbe
adc
jb
inc
or
ret
rol
sbb
mov
pop
push
push
sar
cmp
adc
jge
js
sbb
out
add
xchg
mov
aas
je
mov
mov
aam
adc
mov
test
inc
(bad)
fstp
inc
push
adc
and
or
out
inc
adc
jae
sbb
mov
xchg
mov
jbe
imul
pusha
loopne
cwde
in
js
sub
test
cld
imul
xlat
rol
ins
inc
push
add
into
jbe
gs
and
dec
and
jmp
sub
cs
push
int
aas
xchg
int3
xor
adc
fucomi
(bad)
adc
mov
pop
push
pop
int3
mov
adc
dec
loopne
cdq
sbb
out
popa
pusha
pop
inc
or
or
loopne
das
pop
push
pop
add
xchg
retf
jbe
ret
push
or
test
adc
loopne
or
push
sub
into
mov
test
fdiv
inc
sub
je
xor
ret
aam
sub
jne
mov
mov
test
dec
inc
arpl
cli
pusha
pop
or
test
jmp
mov
aaa
aam
add
mov
into
sub
gs
xchg
daa
loop
popf
jp
mov
or
nop
mov
sbb
mov
adc
inc
sub
inc
je
cmps
hlt
xor
mov
xlat
sub
cs
outs
and
add
add
add
dec
fimul
push
add
and
jno
dec
push
sbb
sub
cli
and
rol
pop
pop
or
and
or
adc
retf
sub
add
les
mov
sbb
push
push
add
or
stc
adc
inc
add
push
mov
or
or
mul
xchg
adc
inc
mov
and
pop
lahf
ret
iret
inc
dec
shl
and
add
and
stos
cmp
push
pop
neg
mov
or
push
sub
push
stos
adc
loop
(bad)
cmps
(bad)
xchg
cmp
icebp
add
out
mov
(bad)
jne
jg
mov
ret
add
jl
and
jae
test
mov
loopne
add
mov
jmp
push
inc
and
push
addr16
call
fmul
mov
fadd
ins
mov
test
mov
cmovl
xchg
xchg
cmc
mov
cmp
rol
test
add
adc
push
imul
pop
mov
cwde
add
adc
daa
call
mov
jmp
shl
mov
shl
mov
shl
push
ja
retf
cmp
inc
clc
push
push
sub
and
adc
out
sub
jo
ret
add
aad
mov
mov
pop
xchg
scas
fcmove
add
ss
add
inc
popa
adc
es
ds
pop
jle
sbb
dec
loopne
in
fidivr
sbb
int
int3
jnp
sub
ins
shl
or
cld
inc
push
mov
jo
pop
sbb
mov
or
cli
jmp
and
and
dec
and
xchg
push
aam
ror
cmp
inc
mov
repz
mov
xchg
rol
jne
test
and
inc
adc
dec
fcmovnb
xchg
adc
in
jle
lahf
rcl
lahf
in
inc
xor
cmp
inc
adc
or
mov
or
popa
inc
adc
(bad)
adc
xor
call
adc
in
and
and
jno
mov
fisttp
js
mov
xlat
and
adc
or
jl
push
sbb
pop
sbb
imul
jg
pop
sub
push
ins
pusha
and
mov
mov
adc
dec
sti
test
or
push
xlat
add
ficomp
pop
jno
pop
xor
ds
add
cmc
push
je
xchg
xor
adc
imul
inc
or
inc
pushf
push
cs
imul
and
add
or
dec
aaa
cld
(bad)
jo
(bad)
ds
loope
push
out
push
mov
mov
popf
fdivrp
outs
cmp
mov
push
jae
sbb
pusha
push
movs
fs
adc
pop
jbe
sub
das
aam
dec
push
retf
adc
enter
push
pop
or
jb
sub
xor
xor
cmp
jns
add
je
xor
mov
pop
push
ja
movs
into
lea
pop
xchg
test
and
or
retf
xor
xchg
mov
mov
(bad)
in
pusha
cmp
daa
push
xor
loopne
sub
adc
adc
sub
jne
out
loope
lods
push
push
inc
ret
sbb
xlat
push
or
adc
mov
xlat
dec
sbb
nop
jbe
adc
cwde
gs
adc
or
dec
loope
add
das
retf
test
xchg
pop
pusha
add
or
or
or
div
je
ret
arpl
or
mov
rcr
retf
or
add
ins
and
or
push
in
fist
cmp
popa
and
call
adc
rcr
and
fld
mov
lea
rcl
lds
cld
or
and
(bad)
fcomp
mov
mov
mov
aaa
arpl
dec
adc
inc
xor
push
ja
dec
xchg
in
mov
lods
mov
jns
sbb
jge
fisttp
push
push
addr16
fst
add
std
(bad)
dec
adc
bound
sbb
nop
lock
sub
xchg
xor
xor
cmp
gs
inc
test
test
cld
cdq
dec
test
push
inc
push
ret
xchg
movs
mov
test
fist
add
or
aam
gs
popa
fmul
xor
adc
xlat
fstp
(bad)
mov
mov
pushf
imul
jmp
mov
lods
dec
push
sbb
mov
add
adc
add
push
sub
or
leave
mov
adc
sbb
iret
inc
push
add
xchg
xor
shl
xor
xor
push
xchg
push
push
jo
test
push
movs
xchg
add
pop
adc
add
(bad)
adc
and
adc
push
jb
dec
push
dec
clc
adc
adc
add
in
or
adc
mov
push
sbb
inc
fnstcw
call
stos
push
mov
fdivr
jno
call
sub
jg
inc
imul
cmp
fild
add
add
dec
push
cmp
imul
adc
dec
sbb
es
push
lea
lea
fnsave
push
push
rcr
or
(bad)
sbb
inc
mov
loope
inc
add
adc
mov
xor
or
sbb
fwait
mov
rcl
ins
pop
xor
sub
pop
(bad)
mov
mov
add
jle
mov
adc
jecxz
pop
sahf
aas
push
sub
ds
pop
ins
pop
pusha
cmp
add
mov
adc
sar
and
pop
mov
imul
dec
jmp
outs
ret
pop
test
cmp
rcl
add
push
or
in
add
push
movs
xchg
ror
ins
mov
fist
cld
and
and
push
mov
cmps
lods
not
push
sub
ss
inc
push
jmp
jl
inc
call
add
push
mov
inc
lods
les
loope
cmp
out
mov
stos
repz
and
push
sbb
call
and
mov
add
mov
add
cmp
add
mov
xchg
add
mov
out
movs
nop
adc
pop
sbb
int
xor
ror
(bad)
cmps
sub
add
sbb
push
adc
or
jmp
mov
dec
mov
popa
je
push
mov
or
xor
mov
adc
add
adc
cdq
mov
cmps
pusha
nop
mov
push
(bad)
push
popa
in
adc
ja
jmp
(bad)
dec
fistp
pop
cs
add
mov
mov
je
repnz
ror
jmp
rcr
retf
xor
repnz
outs
popf
xor
cli
push
push
popa
and
test
cmp
or
sbb
inc
mov
mov
(bad)
pop
adc
popa
sub
and
jl
dec
sbb
push
adc
push
xchg
(bad)
jg
mov
inc
cmp
push
mov
mov
xchg
ret
sub
in
xchg
push
adc
rcl
sub
fwait
lahf
nop
xchg
adc
xlat
sar
mov
inc
push
push
cdq
cmp
adc
dec
je
aaa
sbb
add
inc
popa
add
push
movs
cmp
xchg
add
add
cmp
jmp
or
sbb
jmp
push
loop
bound
pop
fsubr
and
cmp
pusha
mov
aam
or
ins
ret
adc
adc
push
test
fld
jle
neg
adc
fcomp
xchg
fs
sbb
add
sub
repnz
stos
pusha
and
enter
addr16
adc
cmp
jle
ja
xor
xor
mov
nop
xor
rol
pop
pop
out
cld
pop
jg
push
add
dec
push
mov
inc
leave
retf
shl
pop
js
leave
add
sti
jne
or
push
pop
sbb
ins
push
add
mov
push
cmp
add
xor
xchg
add
adc
and
mov
imul
or
sbb
das
das
and
lods
sub
or
jg
fild
pop
xor
sub
cmp
jae
int
cwde
add
addr16
retf
mov
mov
sub
mov
ds
fcom
inc
lahf
aas
cmp
(bad)
out
pop
dec
movs
in
out
(bad)
aad
test
xor
ror
sub
dec
jne
pushf
bound
loopne
mov
or
sub
or
and
cmp
push
mov
dec
test
in
adc
push
add
retf
xchg
add
aad
or
ins
sub
mov
leave
add
mov
jo
inc
xor
pop
xchg
call
adc
xor
sbb
sub
pop
adc
jle
adc
adc
cmp
sbb
push
scas
adc
pop
or
jbe
dec
cmps
(bad)
push
dec
push
inc
lods
mov
or
push
pop
std
test
outs
xor
and
xchg
cmp
dec
adc
sub
mov
and
pusha
add
test
sbb
cmp
loopne
adc
mov
dec
push
jb
cld
xor
inc
add
or
add
mov
mov
and
cmp
xor
cmp
dec
mov
inc
add
loope
pop
add
pop
cmp
xor
(bad)
sub
mov
cdq
sub
addr16
add
inc
fdivr
imul
je
add
pop
popa
adc
mov
pop
retf
imul
popa
jno
mov
xchg
cmps
sub
cmp
pusha
(bad)
cmps
mov
fldenv
rcl
xchg
cli
jns
mov
retf
push
mov
jge
call
mov
jne
dec
and
add
cmp
and
jmp
test
mov
leave
xchg
es
push
shr
nop
or
pop
push
jne
sub
jle
inc
mov
mov
pop
jne
fnsave
jge
(bad)
sar
sbb
push
loope
push
(bad)
into
shl
dec
dec
movs
mov
test
or
inc
aam
mov
sub
push
inc
fisttp
sbb
lock
test
adc
call
loop
fs
or
pop
adc
in
jbe
push
jno
dec
ja
jmp
adc
or
jmp
gs
adc
cmp
hlt
jno
dec
sbb
mov
lock
sbb
mov
outs
enter
fnstsw
jne
call
(bad)
sahf
mov
out
mov
arpl
xor
addr16
add
mov
dec
sahf
je
dec
adc
je
fst
cmp
or
pop
sub
inc
push
dec
xchg
and
pop
dec
call
hlt
jnp
or
es
ins
loope
cmps
cmp
and
adc
stc
xchg
ja
out
loop
pop
(bad)
(bad)
and
or
sub
repnz
and
and
jp
mov
fild
adc
jl
stc
pop
jle
es
dec
fwait
stc
adc
mov
xchg
shl
mov
cmps
imul
inc
mov
jnp
adc
inc
mov
shl
inc
or
mov
add
fadd
repz
dec
jo
icebp
pop
xor
aas
inc
sbb
ins
inc
dec
adc
std
stc
pushf
mov
push
push
push
xor
sbb
xor
mov
add
add
fidiv
call
xor
sub
jge
mov
add
cwde
outs
push
push
loopne
mov
ins
inc
cmp
mov
outs
shr
adc
push
adc
push
dec
push
jb
and
ret
leave
and
push
cmp
and
push
add
add
jnp
adc
or
test
retf
add
imul
in
sbb
sbb
cmp
jne
repnz
add
add
and
ret
push
dec
shl
add
fisubr
or
add
rcr
xor
cmp
pusha
or
cmps
imul
test
mov
cs
test
mov
mov
push
out
je
dec
ins
xchg
fisttp
ret
add
nop
stc
mov
rol
xchg
in
xchg
je
jl
iret
ja
test
mov
cwde
xchg
out
jb
xor
jb
pop
cs
enter
fs
rol
test
xor
bound
(bad)
(bad)
push
inc
add
pop
clc
inc
mov
(bad)
cmp
jnp
repnz
ds
push
and
or
inc
jecxz
add
adc
cli
adc
lock
jle
mov
pop
sbb
and
cmc
nop
(bad)
and
push
jl
int
nop
outs
ret
in
inc
and
cli
mov
inc
loop
popa
ins
test
mov
dec
xor
adc
mov
call
dec
wbinvd
call
fistp
push
xchg
lods
imul
ja
sbb
pop
shr
aad
or
and
out
repnz
cs
dec
cmp
push
jmp
push
or
ds
jge
ins
add
mov
rcl
inc
dec
popa
push
push
sub
int
or
cmp
mov
not
ss
and
mov
test
enter
mov
std
lea
call
push
dec
cmp
sbb
jns
mov
pushf
test
xchg
xor
adc
nop
fcmove
mov
(bad)
jl
xor
movs
aam
cwde
mov
fnstcw
cmp
mov
cmp
add
call
cmps
push
mov
fst
add
or
cmp
imul
ss
sub
inc
or
hlt
nop
xlat
and
push
add
(bad)
daa
adc
bound
or
jnp
fild
cmp
mov
add
call
inc
adc
push
add
stos
cli
lods
lods
dec
or
push
add
inc
lea
in
clc
xchg
mov
pop
xor
jl
push
cmp
inc
popf
mov
adc
sub
adc
xor
xor
xor
push
push
push
push
mov
out
xchg
mov
lahf
scas
test
inc
pop
mov
mov
xchg
test
jo
mov
mov
enter
pop
mov
add
add
jmp
cwde
push
pusha
or
mov
rol
adc
movs
xchg
xor
pop
inc
popa
daa
push
mov
inc
mov
add
sbb
cld
push
inc
mov
inc
jmp
dec
add
dec
mov
cmp
adc
xchg
sbb
mov
sbb
sbb
push
js
pop
dec
dec
push
push
pop
xchg
xor
xor
pop
aam
ss
add
fwait
test
retf
mov
or
push
imul
je
xchg
pop
add
jg
sbb
add
inc
push
inc
sbb
adc
dec
push
dec
inc
imul
adc
sub
mov
xchg
and
jnp
mov
jbe
xor
adc
or
jmp
pop
test
data16
cmp
pop
and
lea
add
popa
sar
les
mov
add
pop
popa
cwde
and
jnp
outs
sbb
pusha
add
test
aam
add
(bad)
or
jb
mov
mov
movs
sbb
push
popf
mov
(bad)
call
or
push
inc
dec
dec
dec
adc
sbb
ret
pop
in
js
(bad)
push
loope
sub
div
push
sahf
add
sbb
push
out
dec
arpl
aad
mov
inc
sbb
mov
pop
push
xchg
retf
push
or
pop
mov
mov
bound
pop
loop
sbb
xchg
jb
cmp
or
cwde
(bad)
mov
gs
sub
movs
jno
push
mov
xor
adc
add
and
or
xor
test
mov
or
sbb
jnp
sub
stc
pop
push
push
xchg
inc
inc
push
push
mov
fld
sub
hlt
push
cmp
cdq
sub
mov
inc
push
and
scas
daa
sub
ins
stc
mov
add
sar
es
je
les
or
call
dec
pop
(bad)
call
jnp
stc
sbb
jmp
daa
sbb
jmp
movs
outs
mov
mov
xchg
add
push
cwde
sbb
and
enter
mov
lock
mov
push
fstp
inc
adc
add
inc
push
dec
mov
or
sbb
shl
sbb
jno
sub
enter
pop
adc
xchg
add
mov
inc
retf
jmp
or
popf
leave
mov
loop
add
add
nop
pop
shr
and
xor
popa
stos
sub
and
adc
outs
inc
adc
dec
mov
mov
push
and
lods
mov
push
imul
inc
add
push
addr16
es
push
data16
push
pop
xchg
enter
cmp
cmp
add
mov
ds
and
cli
pop
test
ds
es
jae
adc
popa
sub
cmp
arpl
add
popa
test
ss
movs
sahf
pop
sub
lea
adc
and
jge
sbb
cli
pusha
jns
jge
push
movs
and
rcl
mov
popf
aad
in
lods
mov
hlt
adc
dec
inc
sbb
jae
cmp
mov
int3
jns
push
xor
rol
mov
push
repnz
sub
push
adc
jg
and
aas
ss
push
inc
pop
sbb
out
dec
in
mov
add
hlt
and
ffreep
dec
pop
push
sti
shl
add
or
pop
out
cmp
adc
fadd
(bad)
adc
xchg
retf
dec
and
push
loopne
push
int3
ret
dec
pop
or
xchg
lds
xchg
lock
mov
popf
add
push
and
mov
out
add
jp
test
push
xchg
lock
cmp
ficomp
mov
ret
or
pop
pushf
ss
sbb
jne
lea
adc
or
inc
imul
pop
xor
icebp
and
fistp
or
inc
pop
dec
pop
push
pop
or
scas
clc
jnp
jmp
push
push
cmp
ret
xchg
pusha
dec
dec
add
fwait
sbb
push
cmc
in
mov
into
jne
(bad)
data16
lea
popf
xor
jmp
and
rcl
cmp
inc
mov
jno
xchg
add
push
dec
jmp
cmp
stos
push
cmp
dec
sbb
cld
sub
dec
rcr
or
pop
js
push
inc
pop
or
mov
add
adc
mov
pop
push
out
(bad)
je
call
push
inc
dec
push
mov
mov
cmps
ret
mov
jae
inc
sbb
sbb
sbb
xor
push
(bad)
or
cmp
xchg
xor
add
rol
xor
mov
inc
bound
and
push
addr16
or
cdq
mov
pop
cld
(bad)
js
dec
cmp
popa
fsubr
inc
(bad)
or
call
ffreep
jae
pop
push
fwait
inc
xor
call
and
jne
mov
push
adc
push
sbb
add
cmp
jnp
xor
gs
xchg
and
js
and
pop
push
repz
cmp
jne
mov
xchg
adc
sbb
cwde
call
xchg
xor
mov
add
les
cdq
test
sbb
pop
adc
pusha
aas
and
pop
inc
cld
jle
and
add
lods
xchg
and
mov
jb
and
or
int3
and
sti
mov
aam
jl
fld
lock
ss
popf
jno
pop
clc
inc
push
scas
sbb
xchg
adc
test
push
dec
sbb
hlt
mov
mov
dec
cmps
aaa
mov
adc
add
ss
nop
xchg
dec
test
rol
xor
ja
sar
pushf
sbb
mov
cli
(bad)
adc
xchg
xchg
add
mov
add
or
mov
and
or
nop
adc
test
or
and
adc
test
lds
sub
data16
sbb
mov
push
mov
(bad)
aam
dec
jmp
div
jge
cmp
or
int
(bad)
(bad)
es
in
dec
cmp
test
sbb
push
mov
xor
mov
add
mov
adc
sub
retf
movs
lea
inc
test
ret
or
add
push
test
fcom
loop
test
arpl
adc
stos
inc
mov
int
das
cwde
ja
inc
xor
xchg
les
adc
inc
adc
fld
cs
or
mov
jle
shl
push
sub
add
and
shr
pop
shr
enter
mov
stc
cmp
dec
push
addr16
add
enter
pop
clc
test
xchg
out
dec
push
sbb
aam
lock
ret
and
outs
pop
xlat
mov
adc
adc
nop
scas
test
or
in
xchg
inc
arpl
lock
inc
and
mov
xchg
sub
sbb
lock
dec
add
push
out
push
and
shl
mov
adc
repnz
hlt
mov
and
add
xchg
push
daa
into
call
push
gs
cld
pop
popa
les
xchg
mov
cmp
inc
dec
sbb
shr
add
(bad)
push
ror
test
inc
cmp
int3
arpl
xor
js
inc
inc
jmp
dec
and
nop
xor
pusha
xor
adc
mov
xor
push
cmp
loopne
xor
fucomp
inc
dec
xchg
popa
jo
movs
daa
or
or
lock
ror
arpl
test
(bad)
add
push
mov
push
pop
mov
jb
push
movs
test
jmp
dec
lea
sub
sub
mov
test
xchg
xor
sub
bound
call
out
or
sub
or
mov
jp
rol
pop
loop
mov
lea
mov
fisttp
adc
(bad)
xchg
sbb
ror
xlat
sahf
add
push
jg
rcl
pop
test
jl
add
dec
pop
mov
mov
cdq
xor
je
and
adc
and
mov
push
movs
adc
leave
push
or
cli
sar
dec
xor
push
push
test
(bad)
jge
xchg
pop
and
pusha
jl
or
mov
rol
shl
daa
push
outs
and
or
cmps
mov
adc
adc
sbb
sub
or
push
mov
(bad)
inc
push
inc
cmp
xchg
or
test
clc
in
(bad)
sub
pop
and
push
sub
adc
popa
add
mov
dec
dec
daa
js
mov
in
popa
in
jbe
test
push
orps
test
mov
and
pop
xlat
adc
outs
test
lea
or
xchg
push
repnz
jge
cdq
pop
or
add
pop
cmp
movs
into
repz
inc
movs
push
adc
adc
or
test
inc
nop
dec
xor
test
enter
enter
mov
ror
or
sbb
jl
or
push
ret
sub
das
cmps
push
pop
adc
int3
push
ins
mov
or
fcmovnbe
cmp
and
cli
stos
mov
es
xchg
push
add
fwait
and
in
cmp
pop
inc
mov
in
cmp
sbb
inc
mov
and
or
pop
and
xchg
shl
add
shl
cmp
js
xor
aam
cmp
mov
push
lea
rcr
and
hlt
mov
hlt
add
out
leave
aaa
jno
int3
jo
sbb
jb
(bad)
push
xor
jb
inc
add
jb
pop
or
mov
jb
mov
xor
fdivr
xchg
sbb
fist
inc
inc
and
mov
sbb
xchg
adc
inc
xchg
dec
fsubr
shl
push
inc
imul
addr16
sub
add
clc
xor
and
add
xchg
(bad)
mov
(bad)
inc
cmp
loopne
leave
clc
or
mov
xchg
pop
mov
das
pop
cs
jbe
jne
pop
ret
and
ja
fist
mov
test
sub
xor
xchg
push
es
and
xchg
dec
and
sbb
mov
sub
nop
inc
mov
es
sbb
cmp
lods
dec
dec
xor
mov
shr
shr
out
lock
dec
stos
mov
in
rol
jmp
rol
mov
in
sub
add
movs
xchg
icebp
movs
adc
xor
test
in
es
jbe
push
adc
addr16
jbe
neg
push
push
xchg
mov
mov
ja
dec
pop
pop
jb
into
test
rcr
or
jne
fcmove
cs
jmp
adc
add
call
cmp
push
xchg
and
mov
outs
loop
cld
add
and
dec
mov
xor
push
mov
inc
sbb
inc
dec
adc
jge
or
inc
fdivr
aaa
push
adc
dec
xor
cs
push
pop
sbb
pop
lock
je
and
cwde
mov
popf
adc
jae
dec
mov
sub
test
or
and
mov
jecxz
dec
push
xor
jecxz
outs
pop
nop
add
rcl
sbb
aaa
outs
and
jbe
aaa
cmps
pushf
mov
test
les
mov
mov
adc
xchg
jno
les
fmul
inc
and
adc
cmc
cmp
popa
add
adc
je
sahf
fistp
stc
and
imul
mov
out
sahf
cmps
sub
jns
int
jns
lods
(bad)
loope
adc
out
dec
push
arpl
mov
mov
push
and
iret
repz
inc
(bad)
(bad)
push
imul
std
repz
repz
mov
out
repz
xor
ja
outs
int
in
push
mov
sub
iret
repz
(bad)
(bad)
or
cmp
and
sbb
push
pop
inc
div
out
arpl
ss
out
aas
push
sbb
aad
cmp
out
or
jo
loopne
push
popa
sub
imul
bound
add
adc
or
(bad)
daa
popa
or
mov
test
mov
mov
inc
inc
loop
jne
xchg
aaa
and
inc
loopne
jmp
rol
bound
xchg
stos
xor
sar
inc
cmp
test
cmps
lods
jle
retf
inc
push
dec
cdq
inc
loope
and
xchg
cdq
lock
sbb
jno
outs
cmp
in
cmp
adc
(bad)
hlt
push
mov
movs
cmp
pop
pop
mov
(bad)
shr
cdq
inc
(bad)
and
test
inc
sar
dec
fnstsw
or
or
or
sub
push
mov
adc
sub
pop
sub
test
xor
cmps
loopne
cmps
xlat
push
rcl
mov
jp
leave
in
dec
es
mov
ret
inc
xchg
leave
xor
mov
or
jmp
push
enter
lods
or
fsub
sbb
sub
dec
adc
movs
test
stc
pushf
add
adc
or
dec
push
push
sbb
pop
jns
call
clc
mov
adc
retf
mov
push
retf
adc
or
xor
push
jne
inc
repz
cdq
or
or
xchg
xor
inc
sbb
mov
mov
sar
push
jmp
movs
outs
cs
out
or
mov
adc
adc
push
inc
xor
push
sti
and
je
xor
push
sub
xor
iret
mov
mov
and
adc
loope
xor
cmps
js
add
push
nop
xchg
xor
dec
push
xor
lock
pop
fcom
imul
cli
or
dec
adc
mov
(bad)
xchg
jnp
dec
add
add
(bad)
mov
mov
add
or
fld
adc
nop
jmp
in
aam
sub
add
addr16
mov
push
add
and
movs
repz
xor
fisttp
mov
add
jmp
movs
add
cmp
test
clc
and
sbb
adc
fdiv
cli
and
jbe
in
jmp
nop
dec
add
test
xchg
add
adc
in
and
fmul
xchg
add
mov
lds
xchg
ins
cli
dec
and
push
jns
sbb
frstor
add
mov
in
cmp
loope
or
push
nop
dec
adc
pusha
js
mov
and
sub
or
retf
movs
pusha
push
or
dec
in
imul
jo
outs
dec
gs
sbb
adc
push
cmc
jo
push
or
popa
retf
addr16
aaa
je
push
call
ret
push
jmp
adc
sbb
add
push
xor
(bad)
(bad)
mov
popa
adc
lahf
mov
adc
cmp
add
cwde
sti
pop
or
or
pop
out
dec
add
sub
and
add
or
sbb
repnz
jmp
pushf
pop
dec
rol
push
and
xor
cmp
xor
cmp
cmp
push
xchg
call
adc
rcl
xor
pop
and
retf
call
(bad)
xor
push
mov
sub
adc
push
pop
inc
sbb
adc
push
pop
add
cld
add
push
add
or
xor
dec
jae
or
add
pop
outs
mov
hlt
es
loope
or
in
add
mov
lock
push
push
mov
push
(bad)
dec
inc
mov
and
mov
jno
inc
pop
mov
std
push
add
xor
and
int3
mov
xor
pop
mov
add
enter
jo
pop
inc
sbb
into
sahf
adc
xor
lock
mov
mov
push
lock
stos
fadd
inc
sub
cmp
rcl
sub
push
rcl
mov
or
inc
push
mov
mov
sub
push
mov
stc
adc
retf
das
sub
push
inc
xchg
daa
movs
pop
add
adc
lea
sbb
push
pop
xchg
lea
cmp
adc
mov
mov
pusha
mov
imul
enter
mov
xor
cmps
mov
ins
push
add
mov
sub
(bad)
icebp
inc
les
add
inc
loop
mov
or
xor
call
loope
xchg
xchg
xlat
pusha
add
cdq
fst
inc
sub
add
and
call
and
dec
fsub
(bad)
hlt
ss
inc
and
push
sbb
test
jnp
and
adc
inc
aas
dec
inc
jnp
cld
(bad)
cmp
add
mov
xor
adc
ins
xor
shl
cmps
xchg
push
ss
cmp
xor
push
stos
xchg
pop
xor
(bad)
(bad)
cmova
dec
test
ds
or
hlt
push
shl
test
xchg
es
sbb
and
rcl
in
sti
xchg
mov
adc
jno
mov
scas
xor
xor
movs
fwait
mov
adc
test
or
inc
cmp
clc
add
minps
imul
mov
mov
cmp
jmp
daa
add
pusha
mov
or
sub
sbb
in
inc
adc
imul
jge
pop
movs
cmc
stos
xchg
pop
push
push
pop
sub
cmp
pop
jl
cld
in
or
movs
mov
jmp
push
jle
xchg
or
xor
iret
or
add
adc
fld
or
test
dec
add
inc
xchg
xchg
add
and
jecxz
cmp
push
add
pop
std
addr16
mov
lods
sbb
sbb
cmp
imul
test
or
loopne
in
add
clc
add
mov
add
cli
enter
pop
or
cmp
out
cmp
and
hlt
lock
div
inc
pop
sub
stc
aam
fcomp
and
cmc
addr16
add
fcmovnb
cmp
fidiv
(bad)
xor
jo
nop
adc
xchg
xchg
loopne
jb
xchg
jmp
jl
mov
cmp
jae
cmp
inc
dec
lea
fwait
add
jl
fnstsw
popa
push
jmp
add
jmp
stos
cmc
pop
fwait
inc
jecxz
jmp
cmc
mov
jno
jmp
popa
pop
push
xchg
daa
aad
mov
xor
pop
rcl
or
pop
(bad)
dec
fcomp
(bad)
aad
inc
add
sub
push
xchg
mov
mov
sub
push
inc
dec
pop
out
out
and
and
sbb
jl
jne
cmp
adc
mov
jecxz
repz
icebp
ins
jmp
fsubr
fcomp
push
jl
daa
inc
idiv
es
imul
jb
dec
or
dec
loopne
push
cld
loope
mov
je
mov
popf
xor
enter
dec
dec
inc
push
add
daa
cmps
retf
xchg
shr
cmp
(bad)
fld
push
test
nop
rol
cmp
ret
call
push
push
scas
xor
push
jmp
call
adc
dec
ret
xor
dec
test
pop
setp
inc
and
inc
test
fsub
bound
push
push
xor
test
fs
outs
loop
outs
or
pusha
loope
jno
sahf
inc
pop
sbb
ret
stc
adc
or
xchg
dec
and
retf
adc
je
mov
mov
nop
sbb
inc
inc
adc
pop
(bad)
sbb
and
cmp
ret
cwde
pusha
test
and
sbb
cmp
push
jp
add
daa
sbb
jns
pop
and
iret
shl
ins
stos
in
or
iret
jnp
cmps
ss
push
sbb
iret
shr
ds
inc
popa
retf
fdiv
xor
jnp
mov
inc
and
int
cmp
(bad)
cld
aam
pop
cmp
push
inc
sub
dec
add
gs
test
bound
shrd
lods
push
aad
jmp
sahf
push
push
push
out
popf
test
(bad)
push
fnstsw
cmps
xor
sub
or
xor
mov
jmp
cs
inc
jge
or
cld
sbb
and
inc
mov
or
cmp
sub
mov
push
pop
xchg
inc
out
mov
and
pop
in
faddp
das
add
cmps
retf
sbb
popa
cmps
arpl
xor
pop
mov
pop
adc
and
in
or
imul
outs
repnz
adc
inc
jb
mov
pop
loop
and
inc
adc
nop
scas
rol
or
sbb
js
ins
ins
das
sbb
pop
push
jae
inc
jecxz
push
push
clc
pop
xor
cmp
movs
jno
ins
inc
jae
jle
inc
icebp
sbb
push
dec
adc
enter
mov
movs
mov
jb
jne
add
xchg
adc
add
out
cmp
or
xchg
sbb
or
sbb
or
loopne
xor
das
cmp
or
sub
test
mov
xor
mov
sub
and
sub
arpl
outs
sub
push
stos
sbb
push
xchg
mov
xchg
cdq
add
dec
sub
jmp
mov
pop
sub
lea
jns
adc
mov
jo
cmp
loopne
mov
loopne
mov
inc
cmps
dec
ror
rol
or
sti
das
dec
add
mov
dec
popf
add
push
jb
(bad)
adc
push
dec
cmp
add
(bad)
sbb
ins
mov
pushf
xor
mov
je
sub
xor
lock
mov
mov
mov
retf
cmc
xchg
xchg
daa
jmp
(bad)
sub
aam
push
leave
rcr
xchg
dec
ss
xlat
adc
nop
clc
ss
or
xor
and
add
inc
and
cmp
loop
mov
mov
add
sub
xor
and
gs
mov
pop
jmp
and
jbe
sub
jne
je
mov
xchg
test
daa
pop
inc
add
or
mov
push
cmp
sbb
jns
jp
dec
adc
pop
ret
repz
jge
dec
ins
push
retf
mov
and
cmp
std
inc
inc
cmc
xchg
inc
aaa
mov
pushf
sub
fnstcw
lea
pop
inc
sbb
cmp
and
adc
cmps
add
sbb
(bad)
fld
mov
cld
push
fdivr
call
inc
and
stc
add
sub
js
hlt
sub
ror
popa
shr
(bad)
cwde
cli
sar
pushf
mov
adc
sbb
je
jmp
fwait
sub
xor
(bad)
mov
pusha
lock
jmp
das
sub
mov
scas
pusha
adc
push
fadd
cwde
in
jns
lods
test
sub
retf
jl
mov
xor
jne
daa
shl
cmp
pop
call
out
fistp
jo
leave
(bad)
jmp
(bad)
jnp
or
or
outs
mov
aas
add
mov
loop
sub
stc
sub
int
lahf
nop
cmp
mov
fisttp
cmc
dec
je
push
aas
(bad)
shl
xor
xor
cmp
mov
add
inc
cmp
push
bound
jno
ins
and
pop
ja
test
push
call
mov
icebp
push
xor
mov
xchg
push
push
loopne
and
inc
adc
dec
and
cmps
lock
sub
jo
mov
test
or
iret
and
mov
sar
mov
retf
pop
push
inc
jno
es
loope
repz
iret
addr16
loopne
loopne
jbe
xor
xor
(bad)
cmp
punpcklbw
mov
imul
ret
add
fadd
in
pop
xlat
add
xor
add
sti
popa
or
cmps
xor
cmp
mov
loop
out
push
nop
push
les
push
mov
xor
cli
push
xor
ins
push
or
dec
movs
stc
pusha
sbb
mov
sbb
sub
and
inc
iret
add
push
dec
ins
icebp
add
pop
and
outs
xchg
mov
lods
or
mov
xor
cdq
jb
pop
adc
pop
test
push
lea
out
xor
mov
cmp
stos
xchg
or
inc
retf
es
enter
fcom
and
sub
sub
push
inc
shl
or
xlat
mov
sbb
lea
mov
add
lea
mov
mov
push
addr16
xchg
out
pop
sub
repnz
or
push
dec
add
imul
movs
add
and
jl
imul
stos
test
add
(bad)
enter
outs
es
pusha
xchg
pop
add
test
dec
dec
dec
mov
pop
pop
pop
push
outs
or
retf
sub
jb
test
sub
dec
inc
fsubr
xor
add
ror
sbb
push
mov
je
sub
cld
push
sub
mov
(bad)
repz
xor
jg
shr
add
sub
add
mov
jne
inc
mov
aam
xchg
push
leave
cmp
dec
jl
mov
pushf
lahf
cmps
xor
test
sub
and
inc
arpl
push
add
stc
push
nop
cmp
pop
and
cmp
jo
lea
push
ins
jmp
cmp
sub
cmpxchg
adc
cmp
sbb
add
add
mov
add
jo
lock
sbb
lock
push
inc
xor
sbb
xchg
aam
fcmove
add
and
or
sub
shl
ins
test
or
mov
cmovbe
data16
or
adc
push
imul
sbb
jmp
dec
xchg
loop
add
jp
xor
cmp
jge
frstor
retf
aam
sti
shl
out
or
inc
clc
(bad)
dec
cmp
dec
fidiv
and
dec
jne
mov
data16
add
or
rcr
xchg
xor
pop
mov
add
mov
test
(bad)
pusha
out
les
mov
and
std
sub
shl
retf
mov
inc
sbb
push
cmc
xchg
hlt
dec
clc
pop
imul
mov
jl
mov
mov
push
popf
es
ret
jo
sbb
ret
jp
loopne
jl
mov
mov
inc
pop
clc
fst
xor
add
xor
jae
mov
pop
pop
test
inc
call
add
adc
add
ret
aad
adc
cld
push
push
inc
iret
sub
stos
cmp
cmps
aas
cmp
cmps
cmps
xor
mov
add
jl
ret
push
pusha
ins
jmp
add
push
in
jmp
cmp
inc
gs
push
push
lea
jmp
cs
xor
or
retf
add
movs
jno
xor
stos
dec
pop
push
in
pusha
and
add
pop
fld
ror
lds
inc
jae
test
test
mov
inc
pop
dec
push
mov
and
fmulp
cmp
adc
lock
mov
push
outs
enter
aam
dec
mov
lods
lods
dec
test
pop
movs
fcmovnb
add
inc
fistp
add
sahf
popf
sub
aad
aam
push
sub
mov
mov
and
sub
sbb
or
jge
add
pop
lods
sbb
inc
push
ins
js
sbb
jle
daa
add
sbb
lock
(bad)
mov
test
sar
retf
xor
cmp
xchg
or
add
add
mov
fild
jnp
cmps
and
js
rcl
cwde
push
inc
movs
sub
push
or
test
or
jle
push
push
mov
ror
bound
jge
stc
div
adc
adc
stc
mov
mov
sbb
je
sbb
leave
add
loopne
gs
cmp
les
or
fwait
sub
clc
(bad)
inc
jmp
push
movs
xor
pop
dec
stos
sbb
add
pop
shl
cmp
pop
push
sbb
fidiv
mov
sbb
iret
pop
dec
test
mov
inc
mov
sbb
or
lods
sar
cmp
ret
(bad)
or
jae
and
add
cmp
leave
fistp
out
mov
addr16
mov
inc
aas
test
fcomi
or
ficom
add
pusha
dec
adc
push
inc
and
rcr
jb
or
mov
inc
dec
inc
outs
add
cmp
fs
sahf
jmp
je
sub
pop
clc
lock
fwait
imul
mov
pusha
scas
dec
retf
adc
or
push
cmp
test
mov
mov
add
push
push
scas
add
or
push
pop
pop
rcl
leave
mov
adc
jmp
and
(bad)
int3
inc
sub
mov
aam
mov
jb
cmps
ins
retf
xchg
push
xor
inc
push
and
dec
adc
push
or
cld
xor
xlat
je
or
mov
dec
jl
or
inc
pop
aam
adc
pop
xor
push
sbb
pop
cs
jl
mov
sbb
fisubr
sar
mov
or
jl
push
xor
jmp
add
mov
fistp
dec
adc
and
mov
call
push
jne
fadd
mov
mov
pop
cmps
dec
fwait
xchg
sub
jne
fiadd
call
cmps
mov
fs
jne
stos
sub
loopne
popf
imul
sbb
inc
icebp
push
inc
pop
fstp
add
scas
inc
je
xchg
call
mov
jmp
jg
jmp
mov
cmp
mov
xchg
inc
or
popa
adc
sqrtps
fmul
mov
xor
pop
ret
and
sti
inc
in
push
or
test
mov
jmp
jmp
stos
shr
mov
fidivr
cs
sar
mov
add
and
ins
adc
in
movs
test
add
xchg
xor
je
stos
add
ja
cmp
gs
mov
cmp
ret
mov
test
cwde
adc
adc
nop
popa
cmovp
sub
sbb
xchg
inc
test
push
adc
pop
push
pop
add
test
mov
sbb
nop
dec
dec
in
or
xchg
(bad)
add
add
xchg
and
xchg
in
and
cmp
sub
mov
das
add
jnp
push
into
sti
adc
and
inc
movhps
sub
dec
pop
pop
cwde
pop
cmp
inc
mov
xor
xchg
mov
mov
sar
add
cs
push
sti
push
and
cmp
rcr
and
jb
mov
and
sub
sbb
pop
sub
cmp
xor
popa
loope
fwait
pusha
mov
jnp
cwde
neg
dec
cli
mov
push
sbb
and
push
xor
test
ja
xchg
jno
jne
jno
nop
xchg
mov
mov
outs
add
dec
mov
dec
inc
add
sbb
pop
cld
push
les
(bad)
mov
rol
sub
test
call
adc
ret
mov
imul
or
imul
adc
jbe
les
push
shl
add
jns
mov
or
test
pop
(bad)
push
ret
push
aad
xchg
call
repnz
aaa
mov
adc
xor
push
mov
or
loopne
lock
clc
push
xchg
adc
sbb
ins
mov
sbb
push
or
mov
sub
call
xchg
push
and
retf
movs
adc
mov
mov
xchg
mov
scas
and
inc
fsqrt
fistp
inc
repz
add
or
stc
mov
mov
(bad)
mov
mov
outs
push
xchg
test
test
addr16
outs
arpl
bound
cmp
mov
adc
jo
test
mov
and
lods
popa
xchg
inc
or
sub
cwde
inc
rcl
(bad)
xchg
adc
movs
jne
lods
dec
dec
test
add
inc
test
push
pop
clc
add
adc
sub
push
push
lock
(bad)
fimul
je
fwait
shl
push
dec
arpl
popf
xchg
push
mov
pop
in
jne
es
xor
test
adc
sti
cmp
push
sub
xchg
clc
or
xor
xchg
push
mov
xlat
sbb
in
outs
xor
sub
or
and
cmp
or
push
xor
inc
or
jae
or
pop
mov
pop
sbb
iret
xor
jmp
dec
(bad)
movs
mov
sub
mov
sbb
mov
push
xchg
(bad)
pop
mov
cmc
push
ret
sub
inc
loope
dec
push
out
xchg
sub
setbe
data16
and
aam
outs
push
call
(bad)
pop
pop
jp
(bad)
push
jmp
ss
pop
pusha
mov
push
je
add
je
ins
and
sub
cmps
adc
adc
inc
test
ja
xchg
out
cmp
out
stos
xchg
push
ror
add
(bad)
aad
push
ins
mov
adc
push
xor
movs
pop
and
push
xchg
loope
clc
enter
mov
js
ret
xchg
pop
adc
sbb
adc
mov
xchg
out
enter
add
inc
xchg
(bad)
adc
mov
sub
xchg
(bad)
inc
retf
(bad)
lock
jo
(bad)
xor
mov
in
dec
dec
test
stos
lds
out
xchg
ds
add
xchg
lock
mov
loopne
mov
push
push
adc
sbb
mov
aas
cmp
stos
rol
push
cmp
jmp
(bad)
es
push
dec
xchg
push
sbb
sbb
es
pop
or
or
in
mov
xchg
lock
bound
xchg
arpl
ss
adc
pop
pop
add
inc
adc
and
repnz
or
sub
mov
leave
and
xor
in
push
push
test
gs
xchg
lods
jne
jp
pop
xor
and
adc
push
jb
es
daa
mov
inc
test
fwait
(bad)
dec
push
push
add
xor
pop
or
inc
pop
les
je
add
xor
popa
cmc
sub
fstp
pop
leave
jp
(bad)
push
xchg
push
in
fisttp
call
sbb
nop
inc
push
add
add
in
push
sub
push
in
add
pusha
inc
adc
call
or
mov
(bad)
adc
sub
dec
cmp
ror
mov
push
cdq
mov
mov
cmp
mov
mov
retf
xor
push
les
test
movs
lea
and
jmp
xchg
sbb
and
and
mov
(bad)
in
adc
push
push
popf
loope
loope
lds
or
or
mov
pop
nop
xor
xchg
xchg
or
inc
jg
lock
enter
ins
push
add
inc
sbb
push
dec
push
call
inc
lea
rol
fsub
dec
xor
push
jp
add
adc
ja
iret
test
inc
dec
aam
sub
ficom
cmp
(bad)
mov
(bad)
pop
add
cmp
or
sub
push
and
mov
stos
sub
jmp
sbb
sar
aad
pop
lock
lock
jmp
xchg
add
in
mov
loope
pop
adc
neg
loope
push
xor
dec
test
add
ret
loope
lea
mov
dec
stc
imul
sahf
lea
mov
dec
bound
pop
in
mov
add
lahf
jbe
inc
into
xchg
cmp
data16
add
push
add
repnz
jmp
add
pop
pop
les
xchg
xor
add
and
fild
jo
pop
nop
mov
and
fcomp
adc
sub
hlt
fdiv
mov
inc
in
es
add
push
les
inc
inc
inc
pop
push
shl
push
pop
scas
add
mov
sbb
adc
arpl
in
loopne
or
cmp
loop
sub
add
xor
rcr
or
sbb
xchg
addr16
mov
mov
adc
xor
dec
je
dec
jne
call
adc
dec
ret
je
or
je
or
mov
mov
jb
jmp
ins
jl
arpl
sub
mov
movs
movs
pop
and
fimul
xchg
push
pcmpgtb
mov
push
or
bound
rcl
adc
adc
sbb
dec
add
mov
and
hlt
adc
adc
jg
sub
int
xchg
and
je
push
dec
jne
data16
adc
jo
sub
xchg
mov
cs
sbb
push
sub
xchg
imul
adc
or
es
data16
rol
cld
dec
ss
mov
(bad)
sti
dec
cmp
ins
sbb
jne
or
add
add
pop
addr16
inc
fcomp
add
repz
add
(bad)
mov
dec
or
push
sub
mov
outs
cmp
xor
pop
int3
(bad)
sub
jno
adc
mov
mov
adc
sbb
movs
test
test
push
dec
and
add
or
sbb
add
imul
mov
movs
and
sbb
xchg
mov
jns
pop
xchg
mov
inc
dec
bound
and
dec
unpcklps
ficom
sub
jo
call
dec
repz
dec
cmp
push
pop
ret
xor
pop
xor
ins
ss
leave
cmps
and
mov
pop
and
or
mov
dec
adc
je
xchg
add
inc
imul
fst
add
sub
jns
inc
mov
test
jmp
loope
or
sahf
push
jo
and
push
ja
mov
out
ret
in
test
cmps
aaa
and
add
das
movs
or
dec
add
cmp
or
and
test
jmp
call
inc
cmp
jns
xor
add
xchg
mov
sbb
sub
add
adc
call
outs
movs
mov
lock
out
es
sub
sub
mov
push
inc
aam
adc
lods
mov
sub
rol
in
and
push
push
pop
add
or
push
cmps
es
clc
mov
sbb
xchg
push
cmp
rcl
xchg
mov
cmp
jecxz
dec
sbb
sub
fcmovne
mov
or
out
pop
sbb
add
out
or
jp
pop
jb
jns
sbb
or
jne
adc
add
add
and
mov
push
test
and
or
xchg
mov
pop
mov
test
data16
pop
push
inc
add
inc
and
pop
add
sub
xchg
push
push
push
fidiv
pop
dec
sbb
fs
mov
adc
xor
add
xor
cld
gs
and
pop
add
js
jo
add
push
aam
or
fcom
cld
pop
rcl
add
movs
pop
cs
sbb
vunpcklpd
pop
xor
mov
add
push
movs
jp
cwde
pop
loopne
hlt
pop
lahf
or
adc
push
adc
and
mov
and
sbb
add
add
or
add
ins
or
inc
in
mov
fild
(bad)
cmp
lea
cmp
nop
or
mov
loop
inc
popf
cmc
or
inc
addr16
sbb
add
xor
fwait
out
ret
add
in
mov
out
shr
sbb
xlat
and
das
dec
clc
ds
adc
or
lahf
jecxz
rol
xchg
add
dec
sar
inc
mov
xor
xor
push
cmp
adc
push
sahf
ret
sub
add
xor
stc
into
push
xchg
cdq
call
push
ret
call
(bad)
out
mov
xor
imul
sbb
sbb
punpckhbw
push
jnp
ins
ficom
dec
cmp
jns
cmp
lods
aam
ins
pop
cmp
sbb
imul
xor
inc
add
jae
inc
mov
ret
aas
push
sub
adc
fisubr
or
mov
not
test
sbb
clc
push
or
and
int3
ret
std
push
pop
pop
xor
mov
mov
lea
add
dec
xor
aad
cmp
cs
data16
add
add
imul
push
add
push
aam
sbb
or
sub
adc
out
pop
dec
call
sbb
xchg
js
sub
test
pop
retf
out
push
jo
pop
adc
rol
mov
ret
mov
sbb
dec
inc
psrlq
lods
jl
cmps
push
int3
or
repz
xchg
push
sbb
dec
push
pop
push
add
hlt
add
add
dec
into
mov
sbb
add
or
push
adc
dec
mov
shr
and
sbb
jnp
dec
dec
ins
add
leave
and
inc
shl
cmc
repnz
fcom
stc
adc
lea
mov
and
je
inc
mov
add
push
loope
test
into
add
cmc
(bad)
ror
pop
add
aam
aam
push
add
mov
push
fst
mov
les
lods
add
aas
push
adc
clc
ror
enter
call
jl
or
sub
imul
call
or
sub
ret
add
inc
sub
xchg
mov
adc
adc
fcomp
push
sbb
and
inc
and
xchg
sar
inc
sbb
pop
shr
dec
or
add
cmp
jnp
push
xor
cmp
popa
mov
inc
call
nop
xchg
inc
je
pop
inc
add
loopne
and
fs
push
inc
or
cmc
les
js
cmp
mov
jne
or
pop
popa
xlat
add
mov
sub
push
aaa
or
adc
cmp
xor
dec
push
into
(bad)
mov
add
je
or
cli
mov
add
(bad)
push
and
js
jmp
(bad)
ins
push
inc
ins
pusha
dec
and
cs
or
and
inc
popa
dec
lea
mov
push
sub
mov
push
(bad)
mov
jae
ror
pop
lds
popa
xor
and
test
inc
popf
xchg
pop
and
xor
sub
mov
push
add
adc
push
inc
lea
scas
mov
mov
adc
xchg
xchg
adc
fist
or
add
jle
fs
add
or
jecxz
dec
xchg
adc
outs
movs
pop
add
mov
inc
jbe
adc
mov
pop
cmp
dec
cwde
iret
dec
add
aaa
mov
jo
xor
xor
inc
add
and
and
pop
and
add
fidivr
imul
inc
inc
add
or
xchg
cmp
push
add
sbb
sub
jae
or
xchg
inc
repnz
or
inc
cmp
mov
popf
cmp
gs
xor
dec
ins
call
rol
addr16
or
cmp
push
jnp
adc
add
push
cmp
xor
adc
and
lea
cmp
cmp
and
dec
or
scas
add
push
ror
arpl
and
sbb
sar
push
push
add
cmp
push
pop
mov
scas
jae
jo
add
mov
jl
jl
add
lods
mov
push
sbb
pushf
movs
dec
or
(bad)
push
pop
adc
mov
dec
xor
int
mov
sbb
call
sub
scas
adc
sti
arpl
stc
out
xchg
push
mov
gs
jl
lock
add
dec
lods
ror
js
es
rcr
jbe
jle
movd
push
mov
sub
mov
adc
fdivr
stos
nop
pushf
rcr
ss
or
scas
lock
pop
jmp
add
jo
add
fstp
add
sub
sub
jmp
mov
xchg
or
sbb
mov
xor
jns
fdiv
and
pop
(bad)
jno
ret
aam
mul
out
mov
push
sahf
ins
sub
loopne
jo
sbb
fdivr
and
adc
je
add
and
jmp
ret
push
das
lahf
sub
add
out
push
es
adc
pop
inc
dec
mov
dec
cwde
fninit
addr16
movzx
or
cmp
push
pop
sbb
push
and
adc
add
aas
or
rol
and
adc
jp
fnsave
dec
or
mov
push
mov
lea
pop
out
sbb
push
and
outs
pop
add
cmps
jbe
xor
and
push
pop
add
pop
push
add
and
or
es
sub
add
lods
stos
add
xor
rol
or
popf
enter
sub
cli
xor
cwde
xchg
adc
add
sub
inc
(bad)
fsubr
push
push
ret
daa
daa
adc
movs
retf
jnp
or
push
xchg
push
fiadd
jmp
cmp
or
fistp
ficom
cmp
add
xchg
ins
cmc
or
mov
test
or
add
jae
fwait
inc
loopne
test
daa
ret
mov
or
adc
loop
jmp
cs
mov
popa
jo
add
popf
adc
mov
mov
push
mov
mov
movs
rcl
and
test
dec
push
aad
mov
mov
jbe
inc
sbb
(bad)
ins
loope
mov
or
fcom
jnp
test
mov
ja
sub
and
push
or
adc
aas
movs
pop
movs
mov
mov
rcl
in
pop
aam
out
jae
add
xor
xor
xlat
pop
mov
add
aam
repnz
sub
xor
aas
sbb
add
and
inc
sub
inc
jmp
dec
inc
aas
add
and
call
sbb
xor
add
xchg
mov
adc
mov
xor
xor
mov
sbb
shl
jnp
push
sbb
xchg
cmp
fisttp
out
mov
add
dec
jle
clc
lods
sub
(bad)
push
jg
push
sbb
sbb
test
ins
pop
movs
mov
mov
or
inc
inc
add
mov
into
jne
out
je
out
imul
add
adc
add
shr
fsubr
in
fld
arpl
sub
pop
xor
das
cmp
inc
pusha
jecxz
sub
adc
test
mov
test
dec
xlat
adc
scas
cmps
retf
lods
pop
push
push
add
out
mov
jmp
stos
call
jp
movs
sahf
cld
adc
je
xor
add
or
dec
popf
scas
adc
rcl
add
jne
lock
xor
out
adc
mov
or
adc
cmp
and
jne
test
push
jl
cli
push
cmp
ret
mov
sub
stos
push
add
mov
add
retf
jne
ins
adc
add
sub
cmp
or
cmp
inc
or
dec
sbb
and
sbb
jecxz
imul
push
adc
jge
or
or
sub
xor
sbb
xchg
sub
push
sti
js
rol
in
shl
fdiv
js
cmp
mov
out
push
mov
sbb
sub
xlat
cmp
into
fiadd
pop
les
inc
fimul
adc
dec
or
sub
es
inc
sub
sub
ror
lea
sar
clc
sub
test
and
and
and
stc
in
ret
or
jecxz
shl
gs
push
adc
push
inc
pop
or
stos
add
or
sar
xlat
rol
push
cmp
(bad)
dec
loop
jle
mov
fnsave
and
push
adc
mov
push
or
dec
mov
pop
arpl
fisub
inc
or
cmps
lea
push
addr16
dec
xchg
mov
or
mov
or
or
(bad)
sub
mov
or
scas
adc
psadbw
xor
jo
push
clc
push
adc
rol
xor
push
cmp
or
mov
and
jge
into
xchg
jb
arpl
dec
sub
mov
loope
mov
mov
add
mov
pusha
mov
aas
mov
popa
mov
in
hlt
sti
mov
xlat
jl
inc
mov
add
and
shl
push
(bad)
call
pushf
adc
add
and
dec
and
fisub
or
adc
in
add
test
dec
add
pop
fsubr
and
inc
call
inc
adc
dec
dec
jmp
adc
pop
retf
mov
add
les
xor
fstp
cld
pop
es
ins
idiv
or
je
jo
rcr
push
lods
or
fbld
jb
xchg
mov
jl
loopne
lods
sub
adc
(bad)
xchg
dec
leave
dec
mov
xchg
nop
ror
pop
add
xchg
inc
add
mov
push
sbb
jne
adc
aaa
shr
or
push
or
es
and
stos
movlps
ins
loope
xchg
mov
mov
mov
pop
test
add
jge
pop
push
test
xor
xchg
sub
or
cmp
mov
mov
sbb
xor
fisttp
movs
clc
ja
push
pop
and
aad
js
loope
mov
pop
popf
imul
lock
imul
inc
fcmovnb
cmp
mov
and
sub
sbb
and
cmc
pop
lahf
out
mov
push
(bad)
jecxz
xchg
cmp
add
imul
xchg
xchg
fnstcw
sar
sbb
xchg
sub
repnz
scas
leave
push
pop
loopne
in
ins
sub
movs
shl
add
(bad)
pop
inc
adc
mov
xchg
pop
sbb
sbb
aam
rcr
and
push
sbb
adc
jb
repz
inc
inc
mov
push
sub
sbb
gs
jmp
push
mov
test
mov
hlt
sub
mov
add
add
add
pop
mul
cmp
loop
sbb
or
inc
sbb
out
add
cmp
arpl
add
inc
out
jl
add
jne
dec
dec
mov
dec
add
inc
add
repz
cmp
sbb
mov
sub
xlat
add
les
mov
dec
xor
jmp
es
pop
xchg
sub
popf
cwde
xor
xor
push
je
shl
and
cld
jbe
mov
add
retf
push
jle
daa
mov
jne
add
sbb
add
xor
adc
(bad)
push
sub
add
mov
or
inc
sub
xor
mov
(bad)
jb
push
and
sbb
ret
or
push
add
test
xchg
js
mov
in
dec
mov
adc
adc
mov
mov
cmp
mov
sbb
mov
sub
add
pop
outs
test
or
pop
dec
ret
sub
bound
sar
adc
cmp
pop
jbe
xchg
rcr
cmp
jbe
lea
addr16
add
test
call
sbb
sti
test
hlt
retf
inc
movs
das
out
push
mov
pop
lods
and
push
das
adc
loopne
sbb
popa
fcomp
pusha
and
lock
retf
mov
aas
pop
es
mov
lock
xor
retf
test
push
xor
retf
nop
pushf
je
mov
cdq
ins
jmp
inc
inc
xor
add
shl
jo
ins
sbb
mov
mov
add
push
add
mov
and
sbb
or
lea
jmp
push
call
mov
jp
or
inc
mov
xor
xchg
sub
xor
in
jg
jne
sub
and
inc
xor
pop
jne
lea
or
pop
popa
arpl
lods
mul
mov
sbb
or
and
inc
and
popf
pop
shr
pop
fnsetpm(287
out
and
sbb
xor
cs
adc
adc
or
add
or
adc
or
enter
femms
xor
and
enter
add
or
sbb
sbb
add
add
enter
pop
or
inc
bound
sub
jmp
shl
add
push
push
inc
sbb
sub
sbb
and
and
fdiv
lds
mov
fimul
icebp
rcl
iret
sbb
and
das
xlat
test
test
mov
out
rcr
call
add
hlt
jmp
adc
repz
dec
dec
sub
xchg
inc
and
add
gs
unpcklps
xor
cmp
push
les
push
xor
xchg
ror
out
test
ret
leave
xor
es
lea
xor
arpl
mov
xor
movs
daa
xchg
cmovl
xor
movs
mov
mov
loope
js
sbb
lahf
imul
jle
enter
mov
jp
pop
and
jnp
or
pop
ret
les
cwde
out
ret
outs
push
jmp
cmp
sbb
ror
lahf
call
xchg
mov
sub
adc
lock
les
mov
add
sar
jl
fwait
adc
mov
lods
inc
cdq
cld
cmp
and
xor
outs
out
xor
sbb
mov
adc
cwde
cs
mov
sbb
xchg
mov
jle
xchg
jae
inc
stos
ss
push
nop
inc
mov
or
push
jae
pop
xchg
xlat
out
xor
sidtd
cmp
jb
or
cmp
xor
dec
and
inc
cmp
mov
iret
jo
ins
sub
js
test
inc
repz
push
cmp
push
fs
dec
or
lds
sahf
mov
push
sbb
sbb
dec
mov
jne
xor
sbb
int3
and
mov
jbe
call
and
sub
out
cmps
push
je
xchg
test
push
std
inc
jle
loopne
mov
ficomp
icebp
xor
daa
xchg
or
int3
jl
cmp
inc
pop
pop
or
jle
repz
inc
add
nop
sbb
sub
nop
imul
loop
push
pop
inc
stos
popa
test
or
push
ins
pop
(bad)
fst
jmp
aas
cmp
pop
and
fst
jo
inc
sbb
xor
aas
and
inc
add
pop
lock
sub
sub
test
ins
push
adc
test
enter
sub
pusha
popa
and
sub
in
push
xor
pop
push
ret
mov
cmc
pop
pusha
xor
mov
mov
xchg
add
cmp
rol
test
sbb
sub
fmul
add
popa
mov
and
ret
sbb
xchg
pop
push
lods
push
imul
jecxz
dec
pushf
test
shr
je
mov
push
outs
dec
lock
movs
sbb
or
cld
sbb
loop
push
sub
dec
and
lea
adc
cmps
and
jmp
gs
dec
mov
sbb
into
int
mov
jne
adc
les
loope
mov
cmp
popa
sbb
jne
xchg
dec
lods
xchg
add
adc
sub
icebp
pop
mov
add
push
cmp
popf
or
push
mov
inc
jno
xchg
push
sub
ror
cdq
movs
mov
cmps
cwde
sahf
ror
mov
ss
jmp
inc
add
xchg
je
xor
pop
(bad)
mov
sub
mov
inc
mov
sub
add
add
shr
adc
jg
xor
aad
pushf
inc
das
fcom
push
xchg
pop
test
imul
and
xor
je
stos
add
fmul
cwde
add
push
das
xor
xlat
aaa
and
add
stc
add
and
or
xor
adc
pop
pop
cdq
scas
add
inc
jg
scas
and
mov
push
jmp
inc
lahf
dec
popa
ins
mov
cdq
imul
jle
cli
jmp
xor
xor
mov
sar
(bad)
push
adc
xchg
(bad)
shl
push
adc
dec
pop
movzx
arpl
mov
push
out
cs
inc
jo
jae
inc
xor
and
inc
pop
pop
es
icebp
movs
or
adc
sub
inc
rcl
jns
jmp
(bad)
and
cmp
dec
or
xor
mov
int
das
retf
pop
test
pop
push
or
inc
pop
sub
push
imul
mov
and
test
and
cmp
imul
push
sbb
mov
inc
and
dec
dec
mov
sub
sub
mov
inc
push
retf
inc
or
inc
test
sub
sub
cmp
xchg
ror
mov
shl
or
or
or
dec
leave
push
pop
jb
lahf
add
dec
loope
inc
push
inc
es
pop
jg
js
push
push
mov
push
icebp
test
sbb
add
cmp
mov
test
mov
inc
or
dec
dec
adc
or
push
popf
jmp
nop
sub
pop
retf
rol
cmc
fs
iret
mov
mov
mov
pop
xchg
ret
or
jecxz
push
pop
jmp
jmp
sbb
lods
push
in
push
ret
fwait
pop
sbb
shl
xchg
xor
xchg
daa
in
xor
inc
cmp
adc
lods
sub
hlt
dec
adc
xchg
div
popf
xor
xor
xchg
mov
mov
xor
pushf
in
inc
dec
je
adc
sub
test
test
pop
xor
inc
jns
imul
mov
in
mov
fs
pop
nop
xchg
lods
jle
dec
push
xchg
mov
sahf
inc
lods
pop
mov
je
jle
out
xchg
xchg
movs
wrmsr
xor
icebp
add
enter
add
and
cdq
adc
test
aam
or
inc
gs
jmp
js
call
(bad)
aas
hlt
push
xor
clc
jb
fisub
jmp
retf
aaa
mov
add
jmp
sbb
ret
aam
pop
mov
test
or
ins
and
rcl
mov
add
ret
adc
ficomp
jne
adc
add
imul
pop
xchg
movs
mov
jbe
inc
stos
outs
inc
or
lods
or
add
cmp
mov
pusha
mov
aam
fidiv
adc
fmul
mov
or
dec
retf
adc
push
loopne
ret
push
jge
push
add
xor
mov
loope
sub
pop
push
scas
jo
inc
repnz
jmp
xor
out
je
mov
loopne
push
stos
inc
dec
fild
fidivr
pop
jg
and
ins
or
shr
push
je
lea
stc
and
jl
jb
jae
lods
mov
push
test
push
xor
push
mov
adc
(bad)
push
ret
es
pop
mov
push
and
add
sbb
mov
mov
sub
adc
mov
add
pop
movs
push
sahf
sbb
add
adc
pop
add
lock
and
xor
push
ins
adc
inc
inc
inc
dec
xor
jae
push
adc
or
mov
adc
inc
loope
mov
xchg
xor
dec
xchg
(bad)
cli
cmp
cld
pop
idiv
and
out
xor
fincstp
mov
add
xchg
adc
leave
sbb
inc
mov
addr16
cmp
push
and
out
mov
ss
xlat
xor
push
ja
and
mov
or
data16
pop
aam
hlt
jmp
and
retf
pusha
in
inc
adc
xchg
sbb
push
cmps
clc
xchg
sbb
and
or
fs
ds
cmps
ss
enter
neg
push
in
neg
adc
sub
push
gs
imul
adc
adc
add
mov
inc
lock
or
call
pusha
jns
mov
jns
jo
pusha
sbb
sub
sub
xchg
cmps
outs
xor
enter
xor
or
call
and
in
push
lahf
jae
int
repnz
xor
adc
lods
or
shr
xchg
jle
adc
pop
xchg
xchg
mov
rol
cmp
outs
xchg
lea
mov
loop
or
int
nop
fild
int3
mov
out
dec
xchg
sbb
repz
add
cwde
jg
ja
and
or
ins
mov
sub
bnd
mov
push
jl
icebp
add
mov
ret
imul
fs
sub
sub
lods
loopne
lods
sbb
xor
or
pop
dec
xchg
lods
pop
xor
or
add
in
push
jmp
mov
jle
add
loopne
and
pop
xor
cmp
add
push
and
das
mov
xor
push
dec
mov
adc
icebp
inc
scas
mov
repnz
lods
inc
pop
adc
add
pop
inc
in
adc
jge
mov
push
dec
nop
sbb
mov
cwde
daa
icebp
push
bound
dec
or
dec
gs
mov
mov
mov
or
jmp
sub
shl
test
adc
dec
jmp
cmc
fcom
repnz
mov
add
mov
outs
dec
(bad)
lds
lds
daa
jo
add
add
mov
and
add
adc
mov
stc
pusha
sub
jns
cmps
mov
jl
mov
push
ficom
xchg
call
cmp
jp
loope
(bad)
pop
(bad)
out
neg
push
or
jnp
stos
or
and
push
mov
adc
or
and
or
dec
fs
aad
shl
cmp
pop
jb
pop
mov
jl
repnz
add
xor
repz
or
sub
xlat
loop
gs
bound
mov
mov
sbb
call
out
ja
lods
std
in
je
push
retf
cld
or
mov
add
aad
xor
dec
popa
adc
out
inc
mov
pop
xor
cmp
dec
xor
and
inc
cs
and
pushf
mov
push
pop
mov
jmp
cmp
pushf
xor
mov
xor
into
push
shl
stc
pushf
xchg
nop
sbb
cmps
or
dec
inc
push
jae
dec
or
rol
inc
inc
sbb
jmp
imul
add
dec
es
cs
add
fst
adc
xchg
xor
sti
cmps
fwait
pop
push
add
sub
loope
cmp
pop
in
jmp
lahf
mov
adc
xor
jge
add
out
jge
rcr
or
mov
pop
add
xchg
fnstsw
dec
ss
push
mov
loope
pop
sub
mov
xchg
(bad)
cli
xchg
lods
push
pop
test
push
leave
pop
or
xor
sbb
xchg
cmp
(bad)
repnz
lock
push
add
push
add
and
shr
adc
adc
inc
xchg
pop
jp
xor
movs
nop
dec
mov
pop
ins
sbb
ret
cmp
or
and
inc
ret
daa
adc
push
pop
stc
nop
mov
lock
cld
add
sub
and
adc
inc
add
mov
leave
mov
push
(bad)
(bad)
mov
push
push
dec
and
xor
cli
push
adc
rol
sub
xchg
test
dec
cs
sub
jb
rol
or
adc
mov
shr
xor
sub
jge
sbb
jmp
pop
aam
push
mov
xchg
retf
jne
push
jns
pop
pop
mov
inc
inc
lods
in
or
mov
je
jae
dec
call
dec
fadd
pop
xchg
and
ss
dec
ss
add
jg
cmp
scas
sti
mov
mov
std
and
nop
out
addr16
rcr
dec
aam
sar
shr
(bad)
adc
bound
pop
jns
sahf
jne
adc
rol
cmp
inc
xor
movs
ds
call
pop
fisub
jnp
and
sub
add
sub
int
and
pop
pop
aam
or
test
lods
popa
lods
mov
sub
mov
push
mov
and
push
xchg
xchg
(bad)
(bad)
mov
iret
outs
enter
cmp
xchg
inc
sbb
xchg
adc
test
or
mov
sbb
mov
leave
or
xchg
mov
or
xor
test
xchg
sbb
es
wrmsr
sbb
fimul
mov
into
out
mov
adc
nop
or
cmp
data16
push
jle
mov
test
adc
mov
dec
inc
adc
mov
fidiv
or
cmp
scas
mov
or
lea
(bad)
adc
pop
lea
push
sbb
push
xchg
xchg
push
mov
dec
push
pop
push
pop
inc
jo
dec
(bad)
or
mov
dec
push
mov
xchg
mov
mov
xchg
jl
jl
add
add
mov
adc
ror
inc
mov
adc
mov
sub
xor
adc
adc
ss
data16
and
mov
ds
les
lea
mov
lock
xor
ins
mov
jp
push
mov
fwait
or
mov
adc
add
inc
or
jmp
xor
dec
fs
mov
and
xor
push
push
push
xchg
movs
mulps
arpl
daa
or
lods
xchg
push
xor
paddsw
cmp
pop
mov
cmp
popa
lods
test
fild
rcr
sbb
adc
wrmsr
je
stc
inc
and
push
pop
iret
popf
add
cwde
leave
lods
push
push
mov
xor
cmp
lods
xchg
mov
cmps
mov
test
movs
dec
frstor
dec
or
or
idiv
jmp
push
jecxz
enter
mov
popa
adc
cmp
adc
cmp
shl
in
adc
out
std
xchg
lock
not
sub
retf
adc
hlt
jmp
cdq
bnd
adc
and
shl
mov
push
xchg
push
xor
daa
dec
fild
cmp
adc
push
sub
outs
mov
push
push
es
jle
bnd
ins
add
test
xor
fs
mov
(bad)
shl
push
and
or
adc
add
shr
mov
(bad)
stos
gs
add
cmp
adc
cli
push
adc
mov
mov
add
push
dec
repz
add
addr16
std
je
loop
mov
mov
sbb
adc
and
xchg
xchg
add
sbb
out
or
fiadd
and
pop
inc
jecxz
lods
pop
mov
aad
push
movs
jno
sbb
nop
push
add
dec
aas
sbb
xchg
lock
xchg
sub
nop
repnz
adc
popa
arpl
lock
mov
sub
dec
frstor
(bad)
test
and
or
add
dec
cmps
and
sbb
xchg
arpl
inc
cmps
add
test
clc
and
push
aaa
ins
cwde
cmps
adc
jecxz
ret
mov
aas
ins
dec
cld
mov
jmp
js
add
mov
clc
adc
jge
sub
cmp
mov
push
pop
ins
add
xor
(bad)
inc
sbb
test
mov
je
jle
push
(bad)
stc
cmp
inc
mov
pop
mov
or
or
nop
jp
cli
xor
add
mov
inc
xor
out
and
vpmacsdd
inc
add
enter
sub
add
(bad)
dec
retf
mov
sbb
dec
or
nop
fmul
cmp
jmp
adc
or
cmp
jle
or
leave
jecxz
cs
test
push
sub
repnz
enter
mov
mov
lock
imul
dec
arpl
jne
sbb
fwait
xchg
je
sbb
mov
xchg
jne
ins
jecxz
xor
test
or
sub
call
dec
xor
or
sbb
dec
movs
cmp
ret
push
lahf
or
pop
movs
push
dec
je
test
jecxz
shl
adc
adc
into
icebp
pop
sbb
mov
sub
sar
call
mov
cmp
sub
push
jb
cmc
mov
fs
dec
dec
add
ret
add
imul
ins
push
mov
cwde
mov
xor
sub
adc
popa
ins
xor
or
cmp
out
imul
mov
(bad)
out
cmp
ret
jle
add
ficom
mov
inc
fmul
lea
pop
ret
outs
shl
out
mov
add
mov
rcl
mov
shl
mov
push
add
popa
imul
aas
lods
inc
inc
lea
push
inc
js
retf
add
rcl
jmp
sti
shl
adc
inc
mov
inc
mov
loopne
jg
sub
dec
jns
adc
xchg
push
inc
mov
frstor
mov
push
inc
aaa
cwde
aam
sbb
push
inc
inc
pop
or
or
pop
mov
xchg
mov
outs
xlat
inc
rol
inc
std
hlt
add
arpl
adc
cli
dec
push
xchg
pop
ins
xchg
and
inc
push
pop
imul
in
mov
mov
cli
or
das
cmps
or
sub
ins
aaa
rol
jno
mov
sub
lock
sub
or
sbb
cmps
or
xchg
push
cli
arpl
xchg
aam
or
jo
mov
add
out
pop
(bad)
sbb
cmp
jns
pop
push
jp
mov
std
pushf
popa
pusha
add
mov
push
cwde
gs
nop
or
mov
shr
rol
xchg
faddp
sbb
sbb
add
(bad)
sub
outs
push
push
mov
jge
enter
pop
adc
mov
push
jo
aam
jmp
popf
fmul
int3
call
xor
adc
int3
sti
mov
(bad)
and
push
pop
movs
rcr
shl
nop
fistp
push
aas
sub
pop
xchg
sub
loopne
fisub
sub
cdq
cs
add
push
aad
sub
es
jmp
push
add
sub
scas
or
dec
push
enterw
imul
pop
sbb
mov
ret
gs
or
push
push
push
fdiv
xchg
push
inc
push
jno
dec
jae
rol
pop
adc
inc
xor
adc
xchg
je
mov
les
sub
pop
das
shl
xchg
push
jo
push
and
or
mov
push
lds
leave
and
bound
hlt
mov
sbb
(bad)
sbb
adc
and
sub
cmp
(bad)
popf
shl
xor
sub
ficom
push
ret
call
mov
fwait
mov
sbb
sub
stos
scas
(bad)
jbe
repz
imul
mov
lds
fst
jge
sbb
ficom
pop
ins
push
inc
mov
cmp
mov
add
frstor
ins
sbb
sbb
outs
xchg
jno
fdiv
pop
xchg
call
call
and
or
inc
add
cmovs
add
or
fimul
js
adc
gs
push
(bad)
(bad)
icebp
adc
es
and
or
ss
push
test
inc
es
popf
adc
push
push
cld
pop
pop
sti
pushf
xchg
fwait
or
xor
xchg
adc
pop
sub
mov
jae
ins
es
dec
pop
retf
popf
pop
cmp
mov
fsub
push
push
ss
mov
nop
xchg
retf
inc
dec
adc
pop
inc
or
xchg
icebp
jecxz
sbb
pop
and
xor
push
jne
pop
inc
or
xchg
pusha
cmps
movs
pop
inc
mov
push
mov
in
mul
call
adc
clc
shl
test
jo
retf
pusha
inc
int
test
push
adc
idiv
push
inc
or
xor
add
xor
les
arpl
mov
sbb
stos
aaa
inc
sbb
sar
jp
xchg
ds
popf
jge
and
inc
loope
mov
icebp
gs
mov
inc
in
inc
in
push
pop
mov
push
mov
pop
cmp
rcr
mov
push
push
jno
jae
jecxz
push
sbb
sub
sub
(bad)
mov
stos
add
cs
mov
cmp
sar
and
adc
jg
popa
mov
dec
cld
pop
cmp
or
push
push
xor
cmp
push
dec
jae
or
les
adc
and
daa
fiadd
cmp
js
mov
mov
sbb
loop
or
mov
add
push
in
dec
inc
(bad)
into
add
push
sbb
push
adc
sub
ins
cmc
and
xor
and
push
test
nop
mov
push
push
or
mov
and
xchg
rol
inc
test
data16
loop
sbb
ins
mov
xchg
push
xchg
push
test
jns
jecxz
icebp
xor
call
add
sub
pop
sbb
cmp
int3
adc
xchg
jne
or
shl
add
arpl
ins
xor
jl
mov
test
push
inc
cmc
adc
or
push
pop
int3
clc
and
add
sbb
jo
xor
ror
jmp
sub
cmp
push
rol
loop
shl
sub
enter
mov
nop
sbb
or
push
and
xor
xchg
sub
or
sbb
fadd
jns
inc
stos
or
xchg
dec
or
jmp
pop
ret
jge
and
push
inc
and
ret
adc
jmp
pop
fcom
pop
or
ins
push
pop
adc
shl
sub
sti
adc
or
das
aam
xchg
sub
mov
jmp
movs
rcr
pushf
push
and
and
add
loope
es
mul
cmp
dec
cdq
sub
and
xor
rcl
lock
rol
pop
push
push
dec
xchg
cmps
test
inc
inc
je
mov
dec
(bad)
fwait
ins
pop
les
gs
int
in
int3
and
aam
adc
rcl
addr16
test
jge
les
int3
sub
jbe
dec
dec
mov
rol
cmps
nop
and
jmp
popa
add
push
dec
aaa
rcr
cdq
bound
or
movs
push
lods
push
xor
ror
dec
ror
or
xor
xor
(bad)
cdq
xchg
mov
cli
loop
push
ss
les
dec
sbb
clc
cmc
xchg
ins
mov
lea
xchg
ret
sbb
ud1
mov
xor
jecxz
not
in
jg
mov
scas
inc
movs
jne
xor
cmp
je
pop
or
jne
mov
cmps
sbb
and
cmp
je
sbb
jne
jle
xchg
out
pop
and
lea
in
xor
and
(bad)
shl
fistp
pushf
daa
stos
stos
push
or
imul
test
sbb
add
mov
xor
je
mov
cmp
xchg
pop
inc
inc
not
pop
popa
je
pop
movs
dec
add
push
enter
adc
or
jne
loop
lods
and
jnp
imul
mov
mov
mov
pop
loope
jmp
inc
or
and
sub
(bad)
add
rcl
cmps
jle
jns
and
mov
in
xchg
sub
xor
fwait
or
push
stos
and
jl
sub
cmp
jg
cmp
je
lea
sbb
push
and
ret
sub
pop
push
mov
pop
inc
push
std
or
arpl
mov
movs
xchg
push
retf
rcl
or
imul
fist
jo
adc
push
sbb
add
and
xchg
pop
loopne
and
sbb
sbb
fwait
xchg
jbe
xor
xor
rcr
shl
cmp
push
dec
jmp
and
arpl
xchg
jbe
mov
and
and
xor
and
sbb
sub
xchg
jae
dec
cmc
sbb
mov
jl
mov
adc
jo
mov
inc
push
cmc
clc
dec
jl
imul
fs
pop
cmp
int
push
in
pop
push
mov
xor
and
rcr
inc
sbb
add
mov
dec
dec
popa
cmp
imul
out
inc
push
push
fs
push
in
das
dec
call
fisub
out
sbb
and
ror
jno
push
jb
xor
push
pop
cmp
(bad)
lahf
movs
xchg
sub
xchg
mov
outs
movs
sbb
jns
icebp
(bad)
pop
pop
in
test
mov
jmp
sbb
inc
or
sub
imul
in
adc
adc
mov
mov
dec
push
adc
(bad)
mov
cmc
sub
push
mov
push
jg
sub
popa
sub
add
cmps
xchg
outs
loopne
int3
xlat
cdq
popa
jge
and
push
leave
cmp
lds
mov
sub
push
inc
inc
adc
xor
adc
jne
add
add
les
retf
cmp
add
pushf
out
data16
sbb
sub
bound
or
mov
inc
push
mov
popa
outs
std
pop
fs
mov
push
push
jl
add
mov
sbb
or
sar
inc
or
or
cmps
retf
cld
mov
mov
push
scas
mov
scas
mov
fdivr
lfs
jnp
inc
adc
call
out
shr
into
mov
push
test
push
mov
push
hlt
rol
add
fcomp
push
jnp
cmp
jns
xchg
lea
push
sbb
mov
js
jecxz
inc
rcl
out
stos
or
jecxz
xor
ret
mov
sub
pop
test
or
adc
sbb
push
push
add
in
jle
les
add
and
rep
mov
xchg
in
imul
jnp
(bad)
shr
add
lds
add
add
jle
push
out
(bad)
push
xor
leave
jbe
or
push
loopne
test
nop
pop
ins
and
repz
nop
xchg
retf
jp
add
lock
add
sbb
std
nop
fwait
out
addr16
stc
sub
and
xchg
test
dec
push
push
add
add
enter
mov
push
push
push
xchg
mov
das
mov
cmp
push
push
ror
cmp
out
push
xchg
dec
cs
sbb
mov
xor
adc
lock
ja
mov
sub
sub
inc
xor
add
out
mov
xchg
cmps
sbb
lock
arpl
add
test
inc
call
idiv
fadd
pop
push
pop
sahf
or
jns
mov
sub
add
add
in
popf
push
rcr
add
dec
or
inc
mov
sub
iret
sar
dec
push
push
imul
sbb
or
out
imul
push
out
in
or
or
dec
add
ss
push
or
add
mov
or
imul
cmc
and
inc
lock
jl
or
test
outs
adc
loopne
sbb
nop
or
outs
dec
dec
sbb
mov
adc
push
aaa
aas
inc
push
pop
jle
cmps
sub
lods
mov
jecxz
test
pop
stc
and
mov
sub
xchg
pop
cmc
mov
and
aas
repz
add
pop
pop
or
mov
gs
xchg
stc
fisttp
xor
mov
shl
sbb
loope
mov
adc
sbb
cld
xchg
imul
test
pusha
cmp
jne
inc
push
xor
jmp
div
add
push
lahf
cmps
cmp
movs
adc
dec
popf
add
sbb
fmul
dec
enter
sbb
fstp
imul
retf
xor
push
jmp
push
push
fs
dec
xor
inc
xor
jo
retf
inc
ret
add
sbb
jmp
fstp
xor
pop
adc
mov
ins
inc
js
xor
and
dec
jnp
out
or
je
dec
jne
fstp
push
jl
pop
adc
call
in
or
mov
popf
and
add
fsqrt
adc
or
push
lods
loopne
stc
movs
or
fidivr
inc
jne
mov
cmp
xor
aad
jmp
mov
outs
push
jmp
mov
push
rol
nop
jg
movzx
lods
pop
mov
loope
mov
lods
mov
movs
pop
fist
add
add
sahf
test
mov
add
cs
add
std
jnp
mov
mov
mov
adc
shr
or
add
mov
mov
and
jmp
push
adc
inc
or
clc
or
(bad)
dec
mov
or
mov
push
in
or
jg
outs
hlt
add
movs
push
add
xchg
xchg
or
jbe
inc
mov
cmp
jne
xor
test
aaa
test
mov
xor
inc
loope
add
(bad)
add
sub
add
retf
pop
or
mov
xlat
call
gs
xchg
sub
loopne
and
xor
push
pop
add
retf
pop
int
or
pcmpeqw
adc
push
popa
add
xchg
aam
retf
inc
cmp
aam
ja
daa
jno
sbb
cmp
sbb
add
popa
dec
fcomp
adc
stc
(bad)
mov
inc
daa
mov
xchg
mov
xor
lods
jae
in
ja
ja
and
push
mov
retf
jmp
sub
add
xchg
pop
adc
jmp
jl
xchg
sbb
or
inc
sti
xchg
mov
jmp
mov
xor
int
dec
ret
push
test
(bad)
hlt
xchg
dec
ja
call
xchg
(bad)
jne
inc
rol
imul
(bad)
aas
mov
gs
repz
dec
sbb
add
les
popa
sub
imul
icebp
jne
cmp
jmp
cdq
(bad)
shr
adc
out
cmp
adc
rcl
push
dec
add
std
div
lahf
dec
jmp
and
cmp
jne
test
movs
jns
out
inc
std
push
adc
dec
jae
push
(bad)
clc
jmp
cmc
mov
call
adc
mov
mov
adc
jne
imul
inc
sub
sahf
(bad)
lock
out
or
cmc
push
pop
jge
adc
and
(bad)
pop
sub
xchg
call
outs
push
jae
or
fisubr
in
loop
inc
(bad)
xor
ja
adc
js
dec
or
imul
push
sbb
sub
rol
out
std
inc
sbb
cmps
ror
jg
ins
jp
xlat
xchg
mov
in
rol
sub
mov
aam
imul
jne
push
mov
fs
pop
mov
ror
add
xor
sub
push
in
xor
or
inc
and
out
adc
imul
add
fidivr
pop
jnp
cmp
jle
pop
or
aam
adc
sbb
push
or
inc
sub
int3
je
rcl
mov
jb
jl
test
sub
pop
add
nop
and
or
popa
xor
xchg
hlt
faddp
adc
and
xchg
sbb
xor
enter
in
push
in
in
or
pop
sub
push
leave
xor
mov
mov
dec
and
nop
push
inc
mov
push
and
movs
add
aad
or
or
jp
les
sub
pop
mov
ds
dec
or
inc
je
cmps
(bad)
mov
cdq
xadd
dec
je
dec
nop
mov
pop
dec
or
ins
add
call
imul
add
inc
dec
add
(bad)
push
push
sbb
pop
push
pop
das
aam
jecxz
xor
test
movs
inc
mov
dec
add
dec
loope
enter
fwait
inc
in
and
gs
pop
or
ins
and
ss
mov
dec
inc
bound
psrlw
test
bnd
iret
jns
push
cdq
mov
inc
xor
lock
mov
test
sub
call
adc
iret
inc
lods
mov
push
push
repz
mov
por
adc
jecxz
push
and
add
in
fwait
(bad)
test
sbb
imul
and
xor
das
pop
dec
adc
jae
mov
pop
inc
retf
sub
xchg
push
dec
add
jecxz
test
out
pop
ins
add
push
xchg
and
sti
push
pop
ins
jg
(bad)
pop
sahf
inc
cwde
push
mov
hlt
retf
in
ret
jmp
mov
push
sbb
dec
call
nop
xlat
xor
sub
or
(bad)
jl
xor
dec
les
imul
xor
stc
push
nop
call
shl
mov
add
movs
jb
push
stos
xchg
cmps
or
jge
movs
lock
mov
cmp
sbb
mov
jmp
je
cwde
pop
les
mov
jne
inc
lahf
les
adc
add
in
sub
daa
in
add
inc
dec
push
fstp
xchg
mov
retf
mov
sub
add
call
jl
or
xchg
push
std
out
sbb
adc
repnz
js
adc
pop
mov
inc
lods
cmovl
fmulp
and
pop
loope
inc
call
repz
dec
inc
cwde
push
dec
cwde
push
push
hlt
mov
and
or
lods
xchg
ja
fdiv
dec
in
inc
sub
aaa
add
adc
sbb
ss
mov
enter
mov
mov
or
or
jecxz
mov
inc
jge
sbb
outs
and
ins
addr16
jp
adc
adc
adc
test
call
js
rcl
in
iret
stos
cwde
sti
xor
add
jge
push
pop
add
or
popf
out
adc
dec
shl
shl
fisttp
mov
call
cmp
stc
or
es
mov
and
add
imul
inc
out
cmps
mov
sar
cwde
jle
adc
dec
pop
je
pusha
xchg
dec
add
(bad)
inc
push
mov
pusha
dec
scas
lods
add
and
add
mov
or
dec
adc
lahf
fsubr
xchg
mov
sti
sub
push
mov
div
stc
adc
lea
push
loopne
dec
mov
popf
gs
out
add
(bad)
adc
bound
outs
lock
jb
pop
cld
push
nop
retf
xchg
pop
sbb
dec
mov
jnp
loopne
outs
int3
inc
pop
es
les
cmp
cmp
or
fcmove
rol
aaa
or
jle
aas
add
cmp
das
add
stos
and
add
pop
and
push
inc
xor
or
add
adc
xchg
sub
dec
or
jmp
dec
inc
jle
sub
mov
out
and
jne
hlt
cmp
pop
sub
or
imul
lds
and
(bad)
adc
inc
and
push
shl
pushf
jl
sbb
jb
mov
xor
ds
xor
xorps
dec
je
jmp
dec
je
dec
je
inc
adc
je
aad
punpckhbw
stc
adc
shr
add
add
mov
add
add
inc
fcmovbe
dec
test
dec
in
leave
jle
mov
mov
push
dec
push
add
xor
sbb
icebp
xor
je
xor
or
fld
mov
pushf
dec
gs
pop
push
mov
add
pop
inc
daa
sub
sbb
add
jmp
rol
mov
mov
inc
sbb
jecxz
lds
sbb
mov
and
sahf
adc
cmp
xor
ds
sub
pop
cwde
add
cmc
fwait
pop
aad
psubsb
mov
pop
imul
or
jns
push
push
jbe
push
scas
fwait
xor
mov
fwait
cld
imul
xor
push
ins
dec
push
add
inc
shl
xchg
jl
inc
mov
xchg
cmpxchg
mov
jbe
pop
jg
push
fild
movs
pop
mov
fwait
jne
es
std
mov
push
stos
push
add
add
push
jo
push
movs
add
cmp
mov
js
leave
sub
add
jle
int
cmc
loope
and
inc
imul
add
aad
pop
leave
inc
and
adc
xor
mov
in
scas
adc
push
movaps
rol
jo
fild
fdiv
pop
loop
sti
cdq
mov
xor
push
mov
inc
outs
je
inc
and
mov
nop
cmp
add
fs
mov
xor
push
cmp
cld
cld
repz
sar
and
in
cld
cmp
hlt
pop
add
inc
ss
ret
fimul
and
push
loope
mov
(bad)
push
xchg
retf
dec
in
inc
add
enter
inc
fisttp
pop
or
or
stos
inc
data16
rcl
sbb
in
stc
mov
lea
sub
jmp
loope
popa
add
addr16
sbb
lock
jmp
les
or
adc
lods
pushf
stc
add
xor
sbb
int3
stos
int3
nop
push
jne
cmp
cs
stc
pop
and
and
mov
pop
sub
cld
cld
add
cwde
and
and
jmp
add
sub
add
fs
(bad)
cld
js
shl
imul
add
add
cli
addr16
or
pop
inc
add
cmp
dec
cmp
(bad)
cs
jl
jno
rcl
data16
jmp
jge
pop
enter
mov
inc
push
call
ds
outs
ins
test
add
sub
shl
add
out
test
fwait
fs
mov
jo
les
movs
add
fmul
or
mov
and
pop
xor
test
ror
add
mov
push
xor
mov
jne
jmp
aam
fild
call
xchg
call
test
not
and
push
out
sahf
and
cmps
sbb
cmc
mov
mov
cdq
sbb
ror
psrld
cmp
jno
and
and
lods
or
retf
and
pop
inc
jmp
cli
pusha
or
sub
ds
neg
xor
cmps
sub
movs
push
jbe
scas
sub
add
add
jno
xchg
mov
push
shr
fsub
dec
add
loopne
sub
enter
arpl
sub
movs
aam
or
push
imul
add
sti
mov
lods
sbb
retf
mov
ss
dec
add
in
xor
in
xchg
aad
push
xor
(bad)
rol
lds
jnp
push
inc
pop
scas
adc
cli
pop
test
xchg
mov
adc
ss
pop
in
mov
mov
lock
ret
jl
adc
iret
ja
pop
and
lods
sub
pop
(bad)
bound
ret
arpl
data16
inc
xlat
mov
cmp
inc
sahf
sbb
ror
sub
pop
(bad)
out
jb
inc
mov
add
mov
push
adc
push
add
cmp
mov
and
jo
cmp
mov
lods
ficom
mov
pushf
or
mov
aam
or
mov
ror
mov
das
(bad)
mov
and
add
scas
pop
cmp
nop
xchg
dec
mov
mov
daa
xlat
add
mov
pmaddwd
mov
xor
hlt
fadd
push
movs
push
dec
mov
je
adc
fs
xor
mov
push
int
cmp
pop
add
ror
lea
and
xor
xchg
dec
or
scas
add
out
add
and
repz
jnp
xchg
or
inc
sub
jle
push
fdivrp
jge
ins
dec
fadd
or
shl
cmp
jle
xor
icebp
mov
push
or
ret
push
mov
fcmovnb
xor
mov
mov
pop
aam
rcl
or
xor
mov
leave
rcr
sbb
test
mov
es
pop
cmp
cmps
pop
jbe
and
sub
sbb
imul
or
test
add
and
mov
sub
sar
or
push
test
lahf
add
outs
or
cmp
je
xor
add
cmp
(bad)
mov
jp
xchg
inc
sub
xchg
iret
mov
shl
add
sbb
xlat
jne
push
fwait
pop
sbb
bound
mov
push
pop
or
cmp
or
pop
cmp
fsub
xchg
lahf
imul
inc
loope
shl
lea
adc
push
sbb
test
ret
add
dec
jge
adc
loope
cmp
mov
xchg
pop
adc
scas
add
into
outs
cmc
sbb
ret
std
je
sbb
xor
mov
inc
or
fst
jne
mov
imul
or
into
xchg
arpl
push
xor
in
push
xor
add
add
inc
inc
sub
iret
dec
sub
add
cmp
adc
sti
ret
add
push
push
hlt
push
jne
outs
fcomi
fdiv
inc
aaa
ret
cmp
push
pop
add
adc
enter
pop
rol
add
test
adc
test
push
adc
test
lds
mov
dec
sbb
mov
inc
inc
jo
or
and
mov
add
pop
enter
test
sbb
mov
pop
enter
xor
pop
sbb
and
or
loope
jg
push
scas
sub
cld
fsin
adc
mov
or
add
sti
push
int
add
ins
fnstsw
popa
and
ins
outs
arpl
imul
xchg
outs
jb
js
je
jb
gs
push
ins
add
arpl
add
add
add
add
das
outs
or
add
ins
adc
add
aas
jns
jnp
ins
or
add
and
mov
and
jns
add
das
rcr
es
cmovno
imul
add
mov
dec
enter
ss
dec
dec
je
outs
neg
ja
push
jo
dec
cmps
jne
addr16
xlat
ins
scas
mov
push
ins
out
pop
outs
dec
cmp
div
imul
arpl
ret
push
push
outs
adc
popf
popa
and
sub
pop
pop
ins
in
mov
imul
iret
jns
out
fdivrp
mov
out
(bad)
popa
sahf
jne
shl
pop
push
pop
cmp
mov
mov
in
(bad)
dec
push
dec
pop
out
inc
addr16
imul
ds
neg
iret
arpl
fdiv
mov
(bad)
jg
out
icebp
pop
inc
dec
cmp
cmp
dec
xlat
mov
cmp
add
das
das
adc
cli
mov
dec
inc
inc
gs
ins
bound
std
fsubr
mov
dec
arpl
push
gs
in
jge
ret
sub
addr16
xor
ins
xchg
outs
das
jle
pop
xchg
inc
jo
imul
in
bound
push
inc
popa
outs
adc
cmp
pushf
cmps
xchg
pop
leave
pushf
jae
ja
inc
data16
xor
mov
jae
push
gs
shr
int
sbb
dec
enter
cmp
pushf
ins
jbe
adc
(bad)
into
inc
aas
add
push
fnstcw
dec
add
add
cli
inc
adc
stos
add
jae
gs
or
inc
inc
lods
sub
xchg
lds
stos
dec
pop
or
retf
sub
push
test
dec
sub
fs
dec
dec
dec
dec
dec
dec
(bad)
(bad)
(bad)
jmp
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
dec
jbe
js
jp
jl
jle
add
out
into
mov
ja
and
arpl
iret
jnp
jb
ds
imul
push
cmps
in
out
call
sbb
aad
xchg
imul
mov
dec
into
push
add
hlt
shl
add
pop
dec
call
push
dec
push
inc
inc
aas
cmp
push
add
add
add
sub
fcmovbe
scas
sub
mov
jle
and
loopne
mov
daa
scas
ins
push
push
mov
popa
pop
cmp
hlt
add
ds
outs
imul
sti
and
popa
jecxz
xchg
mov
in
jge
imul
jns
mov
mov
mov
out
jbe
out
(bad)
aas
rcr
cs
outs
jmp
jo
mov
pop
xor
stos
ins
sub
adc
push
imul
push
cmp
mov
push
data16
ins
mov
retf
xor
xchg
push
mov
sub
mov
ins
call
xor
out
jo
inc
imul
push
scas
mov
retf
vpunpckhwd
out
xor
bound
jnp
adc
ret
arpl
loopne
outs
fist
ins
inc
(bad)
rcl
mov
sbb
inc
mov
fcom
fisub
sbb
aas
cs
and
daa
pop
in
and
and
cmp
push
mov
(bad)
gs
add
pop
mov
aaa
jg
add
fbstp
fist
and
xor
pop
dec
retf
jnp
jb
jne
enter
pop
mov
ficom
stos
and
das
mov
loop
mov
mov
fbld
stos
mov
outs
aas
in
xor
scas
cmp
ja
aaa
xchg
push
mov
test
mov
mov
xchg
aaa
ins
retf
imul
jb
fs
imul
sar
(bad)
mov
or
outs
inc
sub
das
jae
stos
xor
cmp
das
mov
sub
ins
adc
je
scas
cmp
(bad)
cmp
outs
mov
inc
jg
xor
ds
jnp
mov
inc
mov
(bad)
xor
or
pop
sar
add
getsec
dec
add
test
or
idiv
push
or
adc
mov
adc
imul
call
inc
sbb
xor
stc
sahf
out
sbb
sbb
shl
repz
sahf
mov
repz
and
js
jns
cmp
repz
cld
sub
dec
int
jmp
cs
aaa
add
pop
lahf
addr16
mul
call
sub
and
jns
dec
jb
mov
jo
xchg
ucomiss
(bad)
outs
mov
das
adc
jnp
imul
ds
ja
outs
ret
inc
add
push
fwait
cmp
sub
jle
out
mov
pop
cmp
pushf
mov
lea
leave
and
nop
and
xchg
xchg
repnz
in
add
push
jb
add
jmp
aas
sub
ins
ins
adc
add
push
imul
add
add
jg
mov
pop
pop
lods
aaa
xor
push
push
pop
cwde
and
or
int3
mov
add
js
js
pop
sub
add
cli
out
out
xor
sbb
js
popa
data16
pop
ins
cmp
ins
outs
bound
jns
push
xor
dec
hlt
xchg
ins
outs
mov
push
push
(bad)
gs
hlt
arpl
clc
ins
fs
cmp
stc
fucomi
cmp
push
xchg
outs
jb
arpl
ins
sub
dec
(bad)
push
imul
jb
sub
sysret
ins
imul
pop
inc
cmovs
mul
fnsave
cvttps2pi
dec
xor
minps
inc
inc
jp
add
(bad)
scas
mov
inc
data16
adc
mov
daa
dec
aaa
int
mov
and
push
push
inc
ins
(bad)
sti
mov
ss
push
push
dec
dec
inc
dec
inc
adc
pop
xor
and
(bad)
xchg
mov
mov
int3
nop
inc
push
cmp
fild
mov
nop
mov
in
inc
hlt
add
and
add
dec
push
cmp
mov
test
add
adc
add
add
xchg
add
push
add
add
push
and
push
add
add
sub
ja
jmp
cmps
or
adc
aaa
and
inc
pop
inc
mov
out
and
(bad)
ffreep
add
add
xchg
lea
xchg
xchg
(bad)
(bad)
(bad)
call
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
(bad)
(bad)
push
mov
mov
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
(bad)
call
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
(bad)
inc
inc
or
push
fstp
push
add
inc
(bad)
rol
push
imul
adc
cs
jae
jb
jl
out
jmp
arpl
outs
jb
xor
ss
popa
div
jne
inc
xor
gs
movs
jne
daa
pop
test
fistp
add
popa
addr16
outs
js
mov
add
push
sub
add
pop
adc
push
test
push
outs
outs
or
add
xchg
cdq
popa
fiadd
pop
adc
inc
dec
sub
cmp
inc
pop
mov
xchg
add
xchg
mul
inc
xor
mov
add
cld
adc
ins
jo
push
and
sahf
ror
and
daa
add
clc
aaa
ins
movs
jae
dec
imul
mov
inc
and
jo
add
inc
mov
mov
gs
inc
jb
jns
daa
pop
pop
jnp
fsub
movs
sbb
push
jns
mov
push
pop
add
and
arpl
je
jb
pop
adc
cmp
cmp
mov
pop
push
jbe
mov
fcomip
sbb
jne
imul
pusha
inc
jbe
(bad)
push
ror
aaa
push
lahf
fs
ins
jae
add
push
gs
push
lods
fstp
mov
inc
imul
and
push
and
pop
es
dec
or
sbb
outs
mov
mov
sub
jae
or
cmp
dec
loopne
pusha
ins
call
jae
test
sub
gs
mov
add
bound
or
xchg
inc
push
push
push
push
dec
test
push
jne
repnz
call
div
enter
fbstp
mov
dec
jge
loop
or
jg
jb
sbb
adc
push
imul
push
jo
fistp
stos
or
outs
jae
nop
shl
xor
jg
popa
jne
je
pop
sub
stos
outs
bound
pusha
push
or
stos
pop
xor
outs
xchg
daa
xchg
mov
data16
repz
pop
pop
cmp
cmp
add
ds
jns
imul
sub
jnp
sahf
jl
push
addr16
jle
sub
int3
cmc
rcr
xchg
mov
sar
add
sub
sub
jnp
jne
sub
mov
(bad)
into
or
add
push
cmp
and
add
xchg
lahf
pop
jne
ret
pop
cmp
jb
imul
inc
sub
push
gs
pop
shl
(bad)
sahf
sub
push
je
imul
fs
jo
sub
inc
sub
push
jmp
xlat
hlt
push
fmul
rol
les
mov
lods
mov
imul
dec
fs
dec
iret
repz
cbw
cs
push
push
push
dec
dec
cmp
repz
cmp
sub
cmp
repz
sbb
iret
repz
adc
or
add
sahf
out
ds
dec
clc
hlt
lock
jns
out
call
out
sahf
out
ror
enter
jns
sar
out
js
pop
cmp
(bad)
cmp
repz
inc
mov
mov
mov
lock
fiadd
(bad)
cmp
repz
mov
ds
repz
inc
sbb
inc
enter
out
sbb
mov
jle
jg
push
xchg
push
sub
jne
pusha
inc
adc
ja
xchg
sbb
xor
push
dec
inc
dec
cmovns
ficomp
xchg
add
push
dec
pop
push
test
sub
scas
and
push
dec
dec
cmp
xor
test
pop
hlt
adc
push
andps
mov
sbb
das
inc
mov
fst
push
dec
outs
inc
pop
jmp
xchg
cmp
lods
inc
popa
mov
inc
and
adc
inc
ret
inc
sbb
loopne
loope
xchg
add
scas
ja
push
shl
add
call
mov
jne
dec
push
mov
cs
scas
or
and
stos
adc
add
gs
popa
pop
push
dec
dec
cmp
inc
popa
push
dec
mov
adc
jmp
js
(bad)
mov
icebp
imul
mov
pop
cmp
push
add
inc
xchg
pusha
jno
dec
dec
push
cmps
cs
jnp
ret
dec
addps
inc
aas
push
cmp
in
ror
push
das
dec
add
pop
test
or
or
cmp
jo
outs
mov
dec
mov
das
mul
gs
add
push
and
sar
push
push
jo
push
aas
imul
jge
pop
mov
jo
jns
xchg
add
(bad)
ins
mov
add
stos
cmps
add
fucomip
jns
mov
jne
push
cs
dec
jae
mov
push
pop
mul
test
jnp
fstp
(bad)
mov
addr16
ret
rcl
popa
push
sahf
jge
ret
push
stos
das
jbe
xor
fst
ja
mov
out
push
jmp
lods
add
jae
or
adc
push
loope
xchg
aas
pop
inc
cmc
push
add
pop
xchg
inc
push
js
xor
pop
inc
imul
push
dec
or
push
xchg
push
out
cmp
push
jge
retf
add
xor
das
out
fdiv
js
jb
jae
out
cmp
out
out
push
(bad)
out
xchg
imul
pop
push
repnz
popf
cld
cmp
jbe
inc
push
rol
dec
pop
inc
fcmovnu
imul
push
dec
mov
pop
out
jge
pop
push
pop
out
inc
dec
add
mov
mov
mov
jae
jne
imul
mov
sbb
mov
out
xchg
pop
and
xchg
ja
shr
fisttp
fidivr
addr16
inc
and
push
pop
pop
retf
cs
xor
xchg
adc
push
pop
mov
pop
cs
ins
not
add
push
and
(bad)
ja
pop
adc
test
aad
loop
add
mov
ret
out
arpl
fadd
mov
outs
push
xor
sahf
cmp
(bad)
and
popa
ja
fst
aas
pusha
aaa
push
das
push
daa
cdq
pop
out
mov
pop
pop
rdpmc
jns
jnp
in
pop
push
bound
call
ja
popa
pop
popf
sti
mov
repz
ja
mov
cmc
mov
and
mov
pop
inc
pusha
ja
pop
(bad)
adc
sahf
dec
mov
fcmovnbe
mov
outs
pop
and
repz
jle
in
push
imul
gs
xor
lahf
jae
outs
ja
xor
pop
sub
push
jns
push
push
jb
enter
jb
push
xchg
imul
pop
mov
push
jo
je
xor
inc
ja
shl
add
sbb
ja
xchg
in
(bad)
inc
xchg
mov
daa
sub
and
and
push
mov
push
add
xchg
cmps
mov
fs
popa
ins
addps
addr16
(bad)
popa
imul
or
test
ficom
(bad)
add
sbb
xchg
shl
daa
aaa
in
lods
pop
ror
(bad)
cmps
popa
pop
adc
or
sbb
add
pop
gs
pop
jns
fstp
retf
pop
arpl
shl
dec
or
out
mov
push
inc
ffreep
push
or
inc
jns
jns
cwde
js
out
push
inc
scas
mov
fild
adc
push
jns
cmp
push
mov
push
add
mov
dec
xlat
cs
push
and
sti
xor
(bad)
ins
jne
imul
or
push
popa
jb
pop
jne
adc
ja
aam
out
jb
push
daa
dec
loopne
aaa
add
jg
adc
add
mov
push
aaa
and
dec
pop
loop
punpckhdq
mov
and
xchg
das
jns
clc
or
adc
ins
ja
shl
pop
inc
arpl
test
aaa
pusha
mov
jecxz
and
or
stos
xchg
pushf
and
loop
mov
ins
bound
rol
lock
xor
xor
sbb
js
fidiv
xor
sub
push
shl
xchg
push
xor
pop
(bad)
sahf
xor
scas
arpl
pop
cs
out
mov
mov
pop
cmp
js
cmp
ja
arpl
sub
fisttp
out
dec
pushf
mov
cmp
fidiv
pop
or
imul
(bad)
push
and
ja
bound
ror
dec
lock
loopne
pop
cs
jno
ret
mov
xchg
ss
pop
push
dec
push
jmp
adc
and
addr16
push
ror
fwait
mov
add
add
mov
ret
and
cmps
pop
js
xlat
sub
or
addr16
mov
sbb
retf
mov
rol
gs
add
jmp
jo
inc
add
dec
inc
push
cmp
xchg
jle
inc
stos
push
mul
ficomp
cmova
lods
fs
cmps
rol
fcom
fimul
dec
inc
into
mov
aaa
inc
daa
fadd
mov
dec
(bad)
pop
(bad)
dec
push
pop
xchg
js
maxps
xlat
xchg
mov
push
fidivr
xor
xor
cmp
push
js
nop
sub
cmp
dec
cmp
in
das
xor
ret
add
xchg
mov
dec
pop
add
adc
mov
adc
cli
push
das
or
fnstsw
dec
pop
push
sbb
sbb
dec
sbb
xchg
and
push
inc
out
cmp
arpl
dec
sbb
xchg
fiadd
(bad)
mov
add
push
shr
mov
xchg
jp
push
pop
aaa
jecxz
or
sti
push
xor
push
push
mov
add
mov
dec
push
out
imul
sbb
outs
inc
add
inc
pop
mov
repz
push
jecxz
jp
jae
pop
jae
xlat
pop
inc
imul
dec
pop
in
pop
enter
push
inc
daa
push
jbe
mov
daa
sbb
pop
enter
pop
cmp
test
ss
xor
xor
xlat
test
aas
xor
lds
mov
push
pop
(bad)
imul
mov
push
sub
inc
or
(bad)
scas
push
add
(bad)
sti
pop
push
jae
xor
lock
inc
scas
add
ja
cmp
push
jg
push
outs
sbb
popw
inc
mov
pop
out
add
daa
mov
inc
adc
rdtsc
xor
in
pop
inc
(bad)
ss
in
in
xor
xor
(bad)
push
scas
inc
pop
rol
rol
xlat
pop
outs
in
push
dec
stos
das
sbb
xlat
bound
push
pop
xchg
out
add
mov
sahf
add
or
adc
cmp
ficom
loope
jae
test
push
mov
push
jne
retf
push
(bad)
jns
imul
jno
sar
out
arpl
pop
push
jo
xor
inc
mul
or
mov
add
int3
mov
movs
mov
add
bound
out
sbb
add
cmps
ins
push
add
add
push
fdivp
mov
idiv
pop
push
call
dec
and
stc
inc
jg
(bad)
loopne
dec
pushf
out
lock
out
push
ror
es
cmovbe
aaa
dec
inc
push
dec
add
inc
inc
push
dec
dec
dec
jno
mov
dec
push
adc
dec
push
push
dec
mov
pop
clc
add
dec
jle
inc
dec
add
iret
leave
test
add
mov
add
add
add
push
inc
outs
jns
lods
push
scas
adc
arpl
imul
jbe
push
inc
sti
jne
dec
dec
or
ins
jne
or
(bad)
outs
jo
ins
outs
xchg
inc
jb
or
bound
dec
jne
imul
mov
fs
pop
inc
bound
dec
fstp
es
inc
arpl
push
mov
imul
sub
sahf
add
add
stos
adc
fs
imul
adc
outs
je
jb
cmp
sahf
inc
mov
jbe
mov
loopne
jns
out
mov
ins
sbb
inc
push
lods
in
fisub
pusha
inc
mov
inc
ins
pop
outs
test
inc
outs
cmp
imul
push
mov
retf
adc
jne
xor
popf
mov
ins
or
xor
pusha
xor
ret
add
ins
cli
sub
shl
pop
sbb
loopne
mov
and
je
fs
ins
sti
sbb
push
pop
ficomp
sbb
add
dec
ss
or
and
and
or
mov
sbb
push
mov
dec
push
add
dec
and
popa
outs
push
cld
or
arpl
fnstcw
jne
test
pop
inc
adc
ins
frstor
cmps
add
outs
je
jns
hlt
daa
sbb
or
test
enter
pushw
inc
dec
arpl
bound
(bad)
cmp
add
fiadd
jo
dec
outs
ins
scas
xor
add
pop
push
popa
dec
mov
ins
dec
imul
ror
mov
imul
pop
dec
xchg
mov
adc
push
outs
adc
cwde
pop
add
push
add
push
into
or
mov
pushf
dec
shl
fs
mov
outs
fs
popa
fiadd
xchg
push
imul
loop
pop
pop
push
jne
add
or
lds
and
mov
loope
iret
in
jbe
adc
push
add
add
outs
mov
inc
mov
inc
ins
jno
add
sbb
ins
push
mov
es
repnz
push
bound
jg
out
sub
adc
adc
pop
or
and
fidiv
or
sbb
ins
imul
push
add
jnp
inc
and
cmp
push
jo
mov
shr
ja
pop
and
add
inc
cmps
add
in
add
lahf
lahf
lahf
lahf
or
add
and
popf
lahf
sub
add
xor
inc
push
loopne
pop
mov
push
ja
push
ficom
adc
jo
mov
repz
cmc
pop
test
push
xchg
add
mov
cwde
push
push
fwait
stc
stc
stc
std
push
add
or
mov
add
push
add
dec
add
verr
adc
lock
fdivr
stc
adc
sti
adc
add
adc
or
adc
cld
cld
cld
adc
push
pop
add
cld
cld
cld
sbb
xor
add
add
cld
cld
cld
push
add
add
add
sbb
popf
sbb
scas
push
add
pop
add
add
xchg
add
and
stc
stc
stc
or
and
iret
inc
add
and
fdiv
jo
stc
and
in
jmp
out
out
add
pop
add
or
test
mov
stos
jo
and
or
add
lock
repnz
and
add
ds
or
mov
push
add
push
or
sub
imul
xor
add
es
xchg
cmp
daa
push
or
mov
lahf
mov
and
add
add
add
aas
aas
aas
sub
jl
add
sub
lahf
fdiv
jle
add
lods
add
mov
cld
cld
scas
add
mov
add
or
jmp
jo
jle
add
ror
add
xor
out
push
jmp
dec
fiadd
pop
repz
jle
cmp
add
add
sbb
repz
add
add
adc
dec
mul
addr16
stc
or
add
repnz
add
out
out
xor
inc
xor
dec
pop
add
add
out
out
add
add
add
add
addr16
cmp
lea
pop
mov
xchg
jne
aad
arpl
lea
mov
add
xor
pop
inc
cmps
adc
add
sbb
dec
push
push
add
stos
(bad)
jmp
inc
(bad)
call
icebp
sub
add
lods
nop
idiv
add
jle
test
pop
shr
inc
ret
les
add
mov
pusha
jnp
or
jnp
push
in
clc
push
js
inc
push
mov
adc
jge
sbb
add
inc
cmp
arpl
add
sbb
jge
add
pop
mov
adc
add
fcmovb
stos
jmp
add
cmp
cmp
loope
push
mov
cld
push
(bad)
cli
jmp
push
out
(bad)
(bad)
out
mov
jmp
(bad)
out
(bad)
clc
pop
in
push
inc
add
pop
inc
pop
add
cli
jne
mov
sti
es
call
clc
jns
xlat
aas
in
push
in
or
lock
daa
push
sub
push
das
call
movs
xchg
mov
push
push
je
jae
dec
pop
jb
jae
cmp
add
repnz
fsubrp
ss
(bad)
outs
push
outs
jo
jno
les
mov
into
ins
outs
ja
mov
and
cmp
aaa
dec
add
rcr
outs
(bad)
ins
popa
outs
cli
arpl
jb
fs
aam
pop
add
popa
pusha
add
cmp
fiadd
ja
mov
xor
jb
sub
xchg
mov
dec
sbb
mov
add
and
xchg
imul
pop
jb
add
xlat
shl
and
outs
and
jb
int3
inc
adc
outs
and
pop
sub
and
outs
arpl
cdq
mov
mov
jb
arpl
outs
rol
inc
sub
mov
jo
mov
outs
push
cmp
and
and
mov
pushf
jl
dec
and
bound
aas
ins
imul
fidiv
pop
cli
inc
cmp
scas
out
les
xor
add
inc
push
cmps
popa
popf
inc
pusha
or
inc
movs
lea
mov
add
mov
cmc
xor
dec
cwde
or
mov
es
ins
push
aaa
dec
fs
mov
pushf
ins
sbb
mov
add
jbe
jo
jns
push
fucom
xchg
push
lods
inc
add
jp
out
adc
jl
popf
popa
or
mov
outs
sub
dec
pop
and
test
fiadd
pusha
adc
in
ja
fisub
int3
jne
inc
mov
add
in
loopne
sahf
sub
push
test
or
ss
cmp
bound
dec
data16
jo
fs
lock
push
dec
dec
dec
jnp
dec
mov
je
jae
and
pushf
cmp
sbb
add
cmp
sub
and
pop
aad
jmp
cmp
sbb
jnp
addr16
cmps
mov
addr16
aas
xchg
adc
inc
arpl
addr16
popa
push
shl
leave
cs
xor
(bad)
mov
or
sbb
mov
pop
adc
push
data16
arpl
cmp
fcom
cwde
dec
outs
imul
les
outs
and
call
test
inc
outs
sbb
pop
xchg
pushf
pushf
mov
(bad)
outs
loopne
and
js
nop
js
lahf
mov
push
push
sti
pop
sub
pop
ror
push
icebp
fistp
sub
dec
cmc
aaa
add
or
xchg
jmp
cwde
mov
jne
jge
(bad)
cs
imul
ins
sbb
push
inc
mov
or
push
inc
adc
mov
jnp
fdiv
and
(bad)
push
push
sub
pop
js
add
ret
test
mov
jge
clc
push
xor
stc
xor
rol
sub
dec
mov
loopne
outs
int3
lahf
in
sub
sbb
dec
jnp
jge
push
sub
pop
aaa
mov
pop
inc
sbb
sub
jbe
cdq
iret
cmp
lds
pusha
xchg
xchg
popa
inc
fucomip
pop
out
loopne
jo
into
or
pop
je
mov
push
push
jns
jmp
push
je
pusha
mov
out
dec
arpl
retf
addr16
pop
loope
dec
mov
push
jno
or
movs
xchg
dec
pop
jns
pusha
inc
daa
cmps
pop
push
adc
loope
sbb
xor
lds
inc
icebp
rcr
aad
loopne
aad
rol
add
fist
cld
pusha
sbb
xor
inc
jae
add
shl
add
push
xor
add
nop
sbb
outs
cld
popa
ins
sti
dec
(bad)
adc
jb
pop
xor
aaa
mov
out
dec
ins
bound
lea
test
pop
ins
sub
in
mov
push
mov
push
scas
cmp
sub
pop
mov
fisttp
push
enter
dec
add
dec
dec
inc
outs
add
fld
aaa
lods
sbb
cmp
movs
ror
(bad)
stos
(bad)
mov
push
dec
push
arpl
pop
addr16
sbb
mov
addr16
sub
jno
dec
push
in
adc
das
xor
das
add
int
ja
sub
add
mov
sub
adc
push
pop
fidiv
sub
jae
sub
jo
add
sub
push
adc
sar
imul
inc
sub
fwait
lea
sti
sbb
adc
rol
add
ds
or
and
xchg
jo
rcl
and
and
cld
jns
lock
je
jae
xchg
stos
add
pushf
dec
adc
(bad)
pop
jns
jo
loope
push
adc
(bad)
pop
cmp
jne
mov
push
lock
mov
dec
int
or
scas
idiv
add
sub
pop
inc
mov
adc
cmp
(bad)
lock
daa
sti
dec
loopne
and
call
addr16
ret
adc
xor
xchg
jb
push
mov
fidiv
clc
scas
sar
dec
jae
(bad)
outs
rcl
mov
into
cs
adc
or
cs
mov
xor
xlat
cs
add
cmc
inc
stos
shr
imul
dec
mov
cdq
jp
pop
icebp
cwde
sbb
aaa
sti
fs
ins
sbb
jno
mov
push
pop
jg
xor
xor
dec
cld
not
je
adc
fwait
jo
sbb
pop
pop
inc
addr16
adc
jo
xlat
ret
sar
and
adc
dec
cwde
dec
iret
fisubr
and
pop
(bad)
dec
js
mul
inc
xor
daa
inc
aas
jp
jbe
cmps
and
inc
mov
scas
xor
ss
div
dec
cmp
(bad)
inc
push
pop
das
mov
fwait
pop
ret
clc
sub
pop
dec
push
or
dec
daa
push
push
mov
ret
jecxz
push
das
cmp
scas
pop
outs
(bad)
cwde
(bad)
test
imul
dec
xchg
or
lahf
inc
xchg
mov
add
mov
repnz
das
fwait
out
shr
ja
iret
inc
push
or
push
adc
jg
imul
dec
inc
pop
xchg
lahf
ret
fistp
mov
pop
daa
dec
out
mov
sub
outs
adc
xlat
mov
out
push
mov
repnz
inc
push
dec
pop
dec
(bad)
lds
cmp
dec
pop
jnp
mov
xchg
sbb
fisttp
add
dec
pop
fdiv
ret
outs
(bad)
ds
adc
sub
outs
push
adc
mov
adc
imul
das
fild
mov
jnp
(bad)
pop
and
fcmovu
scas
addr16
js
jo
ds
scas
stos
outs
inc
das
jae
xor
fs
push
jmp
outs
(bad)
out
sub
inc
inc
xor
bound
dec
wrmsr
xor
and
xlat
inc
pop
add
push
addr16
dec
mov
aaa
push
mov
les
dec
dec
push
mov
scas
add
bound
add
pop
xchg
daa
retf
jo
jnp
xor
mov
test
pop
lahf
loop
sub
outs
inc
inc
sub
loopne
packsswb
and
sbb
pop
dec
ss
push
test
ret
inc
and
scas
lods
mov
mov
ins
jae
pop
jae
mov
sbb
fisubr
mov
xor
ffreep
push
jp
dec
or
pop
push
push
lahf
(bad)
cs
daa
pop
sbb
out
ins
mul
jnp
inc
xor
sbb
pop
mov
dec
mov
push
enter
das
pop
add
imul
(bad)
pop
clc
xor
inc
outs
push
aaa
test
xchg
xchg
pop
lods
aaa
stos
dec
aaa
push
add
mov
fiadd
iret
(bad)
inc
fadd
mov
sar
jae
daa
das
add
push
jo
dec
mov
popa
ins
jne
daa
das
adc
sbb
push
(bad)
pop
cmps
push
mov
retf
sbb
dec
adc
das
outs
sub
fist
movs
mov
pop
outs
imul
iret
div
add
inc
inc
sti
aas
imul
push
pop
lods
ins
cmp
cmp
or
sub
mov
adc
sub
ins
pop
daa
aas
jae
pop
cmp
sbb
stos
sub
fwait
aas
sub
inc
add
inc
aas
in
sbb
xlat
inc
inc
inc
pop
dec
stos
cmp
mov
ja
adc
outs
mov
fist
les
movd
xchg
push
daa
push
push
daa
inc
iret
das
ficom
ins
stos
iret
das
iret
pop
pop
add
pop
sbb
pop
das
inc
adc
xchg
push
dec
scas
pop
mov
aas
xchg
inc
(bad)
lds
jmp
out
xchg
cwde
sub
adc
les
idiv
out
xor
dec
xor
ficom
inc
dec
xchg
pop
push
push
and
mov
loop
add
mov
adc
aad
cmps
aaa
iret
sub
pusha
dec
pop
daa
ja
test
dec
iret
fst
adc
push
push
mov
(bad)
ss
lods
xchg
(bad)
aaa
aas
mov
loop
xchg
adc
imul
stos
movs
arpl
pop
dec
retf
xchg
pop
test
arpl
inc
mov
inc
scas
dec
loope
xor
loope
stos
scas
jmp
push
sub
xor
daa
neg
pop
xchg
jae
test
(bad)
cmps
call
das
or
jnp
dec
(bad)
pop
or
mov
dec
aas
push
outs
mov
ret
into
push
aaa
push
lahf
addr16
sbb
xor
mov
(bad)
daa
das
fisub
pop
push
loope
sbb
push
cmp
push
dec
pop
mov
adc
test
xor
movs
imul
mov
inc
inc
mov
xchg
ja
inc
cs
sbb
popf
test
fcom
test
loop
push
jae
daa
pop
push
sub
xchg
or
inc
push
push
fld
and
popa
pop
retf
das
retf
(bad)
cmps
inc
lods
add
cmp
fstp
daa
das
ds
(bad)
adc
or
daa
pop
in
xchg
cmp
pop
jg
inc
push
outs
jg
mov
sbb
push
aas
push
aaa
pop
inc
mov
or
mov
jmp
sub
dec
gs
aaa
push
inc
xlat
sbb
mov
aaa
(bad)
dec
adc
mov
sahf
out
fwait
xchg
pusha
sub
pop
push
add
dec
pop
addr16
mov
dec
xchg
add
inc
xchg
mov
add
adc
je
xchg
push
mov
push
movhps
das
imul
daa
pop
stos
lods
inc
addr16
das
shl
push
mov
cmp
xor
sbb
aad
pop
aas
das
inc
pxor
xor
push
sub
pop
push
jmp
outs
pop
pop
pop
add
push
aaa
daa
fstp
ret
dec
inc
pop
dec
test
sub
ss
dec
mov
jnp
mov
lods
das
stos
iret
jg
mov
mov
xlat
mov
mov
inc
sub
pop
adc
aaa
push
push
sub
out
sbb
mov
inc
push
imul
imul
push
xchg
xchg
imul
lods
add
mov
imul
(bad)
not
das
cmps
dec
das
mov
xchg
ss
(bad)
scas
pop
sbb
mov
shl
aad
mov
fcomp
push
mov
jmp
jecxz
out
out
cmp
sbb
outs
rcr
daa
das
inc
fwait
popf
mov
ins
es
out
dec
xchg
mov
test
(bad)
movs
les
fbld
pop
das
push
lea
xchg
mov
out
pop
enter
dec
das
inc
sbb
inc
dec
push
aaa
into
pusha
ret
or
mov
mov
scas
mov
data16
inc
shl
or
xchg
mov
imul
cmps
pop
or
test
aas
mov
ins
inc
mov
ret
add
dec
das
(bad)
pop
ins
aaa
cmova
(bad)
fistp
fmul
cmp
aaa
mov
or
rcl
xor
push
xor
sbb
mov
inc
pop
jg
retf
aas
mov
inc
mov
stos
pop
pop
cmove
dec
dec
dec
mov
aas
out
push
jmp
stos
inc
lea
cmps
cli
jg
mov
or
and
inc
and
rcl
inc
ja
popa
adc
imul
pop
and
sub
stos
push
cmp
fwait
je
mov
mov
ror
in
adc
cs
stos
fisub
sbb
imul
test
push
fild
push
cmp
das
push
inc
mov
mov
mov
inc
xchg
push
dec
jp
fisubr
add
fidivr
dec
xor
xchg
push
pop
ins
add
(bad)
inc
retf
fld
push
dec
and
push
test
cmps
push
pop
mov
popa
nop
and
mov
add
xor
(bad)
add
lods
mov
mov
stos
aaa
daa
mov
pop
test
das
mov
pop
in
or
popf
mov
repz
sti
ins
xchg
push
mov
xlat
std
rcr
jnp
arpl
hlt
je
push
fild
lds
inc
movs
mov
push
mov
and
pop
aas
daa
pop
imul
mov
inc
jbe
test
retf
movs
xchg
aas
div
das
dec
(bad)
pop
stos
stos
inc
addr16
and
xchg
js
shl
cmp
ja
sbb
dec
push
mov
daa
jecxz
cmp
inc
sub
loopne
or
test
aad
cmps
mov
mov
(bad)
dec
mov
dec
repz
scas
dec
mov
push
mov
aas
cmp
daa
pop
inc
fadd
retf
shr
pop
mov
xchg
sti
push
inc
sbb
sbb
test
imul
mov
fistp
inc
cs
add
das
fcom
xor
aas
aaa
fisub
cs
ret
scas
jb
lods
lods
or
xchg
add
pop
das
inc
pop
adc
scas
sbb
sahf
adc
sub
aad
mov
aas
shl
aaa
pop
mov
xchg
add
cmova
inc
lods
fisubr
xchg
aas
iret
push
sub
imul
pop
jae
jmp
ins
adc
inc
pop
mov
(bad)
aas
add
push
and
pop
mov
das
pop
les
addr16
add
inc
test
dec
scas
aas
xchg
shr
das
(bad)
mov
push
or
loop
dec
mov
lock
sub
leave
push
cmova
or
jg
add
adc
xchg
sbb
xor
sti
in
adc
fild
aad
cmp
dec
add
sub
stos
mov
jbe
(bad)
jmp
adc
ss
push
jg
retf
add
and
out
pop
jl
push
push
pop
pop
cmovl
inc
jecxz
and
inc
popa
sahf
pop
dec
sbb
test
pop
lock
mov
jnp
jae
cdq
and
push
loop
ins
shl
nop
xchg
and
pop
lahf
adc
add
out
adc
inc
aas
pop
daa
mov
cs
mov
out
cmps
arpl
mov
or
adc
inc
inc
add
and
retf
xchg
mov
xlat
scas
lods
cmc
shr
pop
dec
pop
inc
or
mov
sub
aaa
ja
fucomi
fwait
add
inc
jb
push
and
nop
and
inc
pop
jmp
or
or
pop
sub
sub
inc
cmp
lahf
arpl
adc
pop
inc
jbe
ret
ret
jbe
xor
inc
js
loopne
enter
adc
imul
xchg
cwde
or
inc
mov
dec
(bad)
pop
mov
lock
das
mov
xor
push
ss
mov
and
push
dec
push
rcl
test
xlat
int3
pop
loope
mov
sbb
push
retf
shl
push
iret
arpl
shr
pop
push
scas
(bad)
(bad)
jecxz
daa
jae
pop
fisubr
arpl
out
inc
out
aas
add
jo
(bad)
imul
jno
mov
xor
lock
dec
ja
scas
pop
lods
add
xchg
pop
dec
popa
stos
and
jmp
mov
stc
push
xor
lods
and
sbb
jo
push
pop
inc
stos
test
add
(bad)
pop
sar
cmps
rol
mov
jge
(bad)
inc
sub
out
push
pop
out
mov
sub
(bad)
jo
add
mov
addr16
bound
test
test
mov
arpl
xchg
add
inc
aas
or
pop
popa
sbb
mov
pop
pop
push
pop
pop
arpl
or
mov
fwait
dec
outs
lods
popf
cmp
ja
out
xor
iret
shr
fcom
cmp
mov
jae
cmp
xor
pop
xor
imul
mov
push
ins
add
mov
dec
inc
pop
lods
inc
pop
addr16
pop
or
mov
out
mov
mov
fmul
aad
mov
jg
clc
pop
sub
pop
mov
popa
xchg
inc
mov
lock
xlat
inc
xor
or
dec
push
jns
scas
xor
xchg
dec
dec
inc
outs
and
and
or
push
les
nop
scas
es
pop
add
push
pop
stos
mov
ror
fst
(bad)
push
dec
ror
jp
and
dec
xchg
jne
and
mov
or
sub
add
fild
push
es
adc
mov
push
daa
retf
jnp
cmps
push
push
jb
add
jnp
addr16
and
pop
pop
push
xor
stos
sub
addr16
fimul
push
pop
push
push
lea
push
addr16
cs
loop
cmps
xchg
ret
mov
mov
not
scas
mov
pop
inc
and
ja
out
or
cvtdq2ps
adc
push
or
cs
shl
loopne
push
dec
mov
add
add
mov
push
pop
mov
jb
fild
out
mov
mov
cwde
nop
sub
out
dec
inc
and
loope
xchg
and
inc
(bad)
inc
mov
inc
dec
push
cs
dec
dec
pop
arpl
inc
shl
jp
inc
nop
pop
fnsave
jle
and
push
cmp
arpl
dec
add
push
pop
pop
sbb
popf
xchg
scas
retf
popa
lock
xchg
stos
pop
pop
vmread
lahf
les
and
push
loopne
or
retf
pop
inc
push
lahf
push
xlat
or
cs
div
xchg
dec
sbb
fcomp
add
mov
mov
add
(bad)
daa
pop
and
retf
push
rcr
mov
fld
xchg
shr
gs
addr16
imul
cs
fsubr
repz
adc
fisub
push
dec
test
out
jae
jo
sub
ins
aaa
les
push
push
mov
cmp
pop
mov
xchg
popa
or
or
(bad)
add
daa
addr16
pop
cmp
mov
push
and
adc
test
or
movs
cs
pop
pop
rcl
fwait
sbb
outs
ss
mov
dec
mov
jbe
fistp
or
ins
es
push
aaa
inc
js
retf
and
arpl
jecxz
push
or
sub
mov
add
inc
and
dec
jo
loopne
dec
cmp
dec
push
scas
or
out
(bad)
inc
push
adc
or
mov
daa
pop
push
imul
xchg
(bad)
les
pusha
inc
(bad)
adc
dec
pushf
xor
adc
mov
(bad)
daa
cmp
test
and
add
adc
iret
jp
and
add
jb
add
aaa
daa
nop
or
fiadd
xchg
ret
lods
mov
and
movs
push
or
cmc
ror
addr16
mov
dec
scas
or
sbb
pop
in
mov
aaa
dec
xchg
mov
outs
imul
loopne
mov
daa
call
add
das
xor
and
inc
call
rol
pushf
rol
loopne
mov
movs
cwde
js
(bad)
push
adc
pop
imul
outs
xor
dec
adc
aaa
fnsave
inc
iret
inc
pop
aas
mov
cs
jg
jecxz
push
rep
inc
pop
and
sub
inc
pop
inc
jae
in
shl
push
inc
jg
fisubr
or
cmp
inc
cli
test
ret
add
inc
out
push
push
pop
jb
ins
daa
pop
scas
adc
pop
sbb
aaa
fcmovbe
inc
adc
xchg
fsub
sbb
mov
rol
add
pop
adc
das
xchg
mov
ins
lahf
xor
pop
pop
ss
push
aas
mov
das
or
nop
xchg
das
cmp
mov
cmps
push
ins
mov
add
xor
push
(bad)
sbb
test
aaa
adc
not
xlat
(bad)
rol
mov
mov
pop
rcl
pop
adc
add
jmp
adc
fwait
and
inc
mov
push
or
dec
adc
ja
inc
adc
jecxz
dec
adc
inc
div
adc
add
or
imul
inc
fstp
sbb
pop
das
inc
mov
fstp
xchg
sbb
mov
sub
mov
push
adc
mov
add
and
scas
aas
inc
dec
jae
mov
pop
imul
jo
dec
add
loop
fisttp
movs
(bad)
xor
pushf
fmul
dec
dec
ins
pop
sbb
pushf
push
cmp
jno
mov
movs
cmps
in
es
out
lods
inc
pop
and
cmps
jo
repz
adc
mov
or
aas
push
sbb
add
add
mov
mov
mov
lahf
scas
cmp
loop
xchg
outs
cmps
push
add
cmp
jmp
pop
loop
pop
jbe
sbb
cmp
daa
mov
or
sbb
add
ror
add
pop
pop
outs
or
(bad)
ja
mov
daa
mov
jmp
lock
mov
or
imul
jns
pop
pop
or
inc
(bad)
pop
cmp
xchg
js
loope
packsswb
dec
push
xchg
jne
add
maxps
jg
bound
popa
sti
lahf
dec
(bad)
addr16
push
shr
ret
mov
xchg
pop
jne
pop
lea
xchg
arpl
mov
and
ss
pop
push
aas
xchg
cmp
push
das
push
inc
pop
jo
in
scas
addr16
(bad)
sahf
sahf
pop
aaa
sbb
(bad)
aad
and
dec
aaa
inc
pop
leave
mov
pop
daa
push
or
popa
fs
jo
or
push
gs
sbb
sbb
shl
call
add
dec
mov
or
in
jge
pop
pop
add
or
sub
fild
xor
aas
add
and
cmp
sub
fisub
das
adc
aaa
jnp
(bad)
mov
aas
xor
pop
pop
repz
shl
js
pop
ins
fadd
push
inc
pop
addr16
test
pop
jmp
sub
lea
mov
and
adc
aaa
nop
sbb
fdiv
and
push
dec
bound
mov
jae
or
inc
addr16
daa
inc
bound
mov
nop
addr16
jmp
(bad)
pop
out
addr16
xchg
lea
scas
jae
adc
push
add
push
aas
push
adc
adc
push
jg
xchg
mov
inc
sbb
or
aas
das
push
or
ret
push
and
cmps
sahf
cmp
pop
daa
fimul
and
jmp
dec
rcl
inc
daa
cmc
mov
(bad)
cmp
mov
adc
sub
pop
jae
out
xchg
cwde
ror
or
stos
xchg
xor
fwait
clc
ret
and
or
loope
js
xchg
adc
push
xor
and
inc
or
and
pop
fwait
adc
inc
cwde
push
adc
mov
fadd
bound
call
inc
arpl
push
jo
enter
inc
dec
lea
scas
sub
or
mov
push
sbb
stos
dec
push
movs
inc
dec
nop
pop
pop
ret
jg
and
(bad)
pop
add
or
mov
sub
bound
dec
mov
gs
or
sub
add
or
dec
push
jae
mov
pop
add
inc
mov
push
adc
je
and
sub
push
dec
xchg
jb
cld
pop
mov
sub
jnp
sub
xchg
push
jb
ja
xor
dec
imul
inc
push
push
pop
dec
out
outs
cmp
or
push
or
mov
dec
inc
dec
pop
push
and
adc
push
pop
pop
xadd
in
in
pop
add
inc
(bad)
aas
ss
dec
dec
inc
pop
jo
in
ss
std
clc
aas
int
add
(bad)
aas
retf
fcmovne
in
lock
mov
jle
fmul
mov
push
fist
jb
int
out
or
push
rol
in
bound
shr
inc
add
xchg
neg
outs
sub
add
into
pop
dec
(bad)
lahf
add
call
dec
jg
int
iret
pop
pusha
daa
aas
out
fiadd
mov
pushf
test
add
adc
xchg
or
jle
push
enter
iret
scas
jbe
push
or
mov
add
ffreep
lds
inc
pop
fisttp
pop
push
cmp
cli
cmp
push
cmp
adc
cs
mov
es
aas
xor
pop
enter
pop
mov
cmovbe
mov
dec
nop
adc
mov
mul
mov
mov
gs
sbb
dec
mov
in
je
jo
aas
popf
arpl
fcomp
jns
pop
out
dec
jb
dec
call
and
and
shr
enter
xchg
out
out
sahf
in
dec
enter
scas
inc
adc
mov
jnp
aas
icebp
and
sub
inc
jle
and
ror
aad
mov
adc
mov
loopne
loop
repnz
es
outs
mov
in
mov
bswap
aas
adc
mov
adc
adc
stc
add
inc
or
add
mov
ins
push
adc
jecxz
jle
inc
push
inc
add
pop
pop
cs
cs
inc
push
adc
into
pop
inc
dec
sbb
aaa
nop
push
aaa
add
dec
sgdtd
int
dec
add
in
dec
and
pop
add
mov
outs
adc
in
les
add
add
add
and
push
inc
(bad)
mov
push
sbb
cmp
adc
mov
outs
push
shr
movs
add
pusha
cmp
pop
stc
enter
pop
movs
sbb
mov
fisub
add
cdq
cmovo
push
mov
sbb
in
call
mov
push
add
mov
xor
mov
rcr
fsubp
stc
jb
jle
inc
(bad)
jae
inc
sub
sahf
out
sar
out
pushf
nop
test
cmp
repz
push
cmp
repz
push
push
dec
dec
iret
repz
inc
inc
cmp
sbb
out
daa
adc
or
clc
sub
cmp
repz
fcom
rol
mov
repz
jnp
xchg
push
mov
iret
ins
pop
dec
cmp
adc
sahf
(bad)
cmp
call
sahf
out
enter
cmp
jns
test
cwde
nop
pop
sub
repz
push
dec
push
cmp
sahf
ja
out
or
rcr
popf
out
mov
pusha
inc
or
dec
pop
imul
into
rcl
fadd
inc
jbe
or
les
add
mov
add
sahf
out
sahf
add
or
cmp
jns
or
aaa
or
or
daa
adc
dec
aaa
jns
adc
and
xchg
inc
inc
push
addr16
das
push
loopne
mov
pop
imul
cmp
out
and
jb
pop
jb
pop
jo
or
repz
jo
pop
xchg
sub
mov
aas
movs
loope
in
into
aas
xlat
sbb
data16
add
dec
or
pop
imul
inc
add
das
stos
or
aas
add
mov
inc
daa
rol
add
mov
mov
push
out
xor
mov
inc
mov
(bad)
lahf
cmp
call
cdq
adc
iret
repz
mov
dec
add
repz
repz
repz
fsub
(bad)
push
push
jns
or
iret
pshufw
add
cmp
pop
adc
repz
repz
or
or
cmp
adc
sub
iret
repz
and
sbb
repz
repz
or
or
repz
and
add
call
xor
xor
or
dec
or
push
ins
xor
pop
xor
fstp
push
lock
daa
push
push
push
dec
clc
mov
cmovns
cmp
cs
jge
test
jg
test
jno
xor
pop
push
inc
push
aad
pop
add
add
add
xchg
xor
lahf
inc
jmp
jns
sbb
leave
sbb
and
mov
in
mov
add
cli
or
or
ret
cmovno
enter
adc
xchg
aas
repnz
sbb
into
sbb
ror
(bad)
(bad)
(bad)
jmp
lock
mov
sub
inc
rcr
and
sbb
add
xlat
xchg
inc
push
add
jmp
scas
sahf
inc
stc
mov
adc
mov
dec
js
inc
outs
(bad)
(bad)
(bad)
(bad)
jmp
mov
or
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
(bad)
(bad)
(bad)
call
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
(bad)
(bad)
(bad)
jmp
dec
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
(bad)
(bad)
jmp
cmps
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
mov
(bad)
(bad)
push
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
add
les
add
(bad)
fnstsw
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shr
(bad)
(bad)
jmp
loop
pop
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
(bad)
(bad)
(bad)
(bad)
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
xchg
xchg
out
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
popa
push
pop
sar
jl
mov
das
lea
mov
inc
(bad)
(bad)
jmp
aas
movs
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
(bad)
(bad)
call
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
(bad)
(bad)
(bad)
dec
call
cmp
test
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
dec
(bad)
(bad)
(bad)
call
mov
and
mov
cmps
push
lahf
inc
pop
mov
sub
dec
in
ss
(bad)
(bad)
push
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
dec
or
in
dec
(bad)
std
or
pop
ficomp
frstor
fisubr
xchg
es
add
jnp
imul
push
pop
js
iret
repz
mov
repz
outs
(bad)
imul
cmp
pop
cmp
repz
xchg
mov
repnz
lahf
cmps
stc
adc
das
dec
ins
add
aas
ins
push
fild
(bad)
jmp
add
dec
repz
add
jo
iret
repz
pusha
add
sub
sbb
add
in
dec
jns
out
or
or
out
or
sub
xchg
dec
repz
adc
add
shr
cmp
repz
int3
shl
pusha
cmp
lock
out
jl
inc
sub
ja
or
mov
mov
jns
out
push
repz
adc
mov
mov
inc
sbb
mov
cmp
push
mov
mov
adc
in
mov
cmp
shl
iret
repz
xor
add
mov
ror
rcl
cwde
iret
repz
jl
inc
sub
fdivr
jl
pop
or
mov
cmp
repz
test
out
call
lods
popa
les
cwde
mov
mov
add
stos
lods
pop
fcom
sub
aam
pusha
sub
sub
mov
sbb
add
add
jecxz
rol
push
shr
(bad)
jmp
add
popa
push
out
mov
les
(bad)
hlt
push
xor
(bad)
(bad)
jmp
mov
push
movs
mov
aad
mov
rcl
mov
sub
(bad)
call
adc
push
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
(bad)
(bad)
(bad)
inc
test
adc
adc
test
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
(bad)
(bad)
push
or
outs
cmp
imul
addr16
add
aam
dec
std
test
jmp
or
ins
cwde
mov
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
(bad)
call
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
dec
movs
mov
sub
mov
(bad)
and
or
adc
stos
sbb
(bad)
(bad)
cmp
inc
fdiv
jno
add
aad
mov
mov
movs
in
lahf
pop
pop
ret
aam
call
xor
push
test
xchg
(bad)
(bad)
(bad)
call
cwde
push
loope
or
ins
or
pop
arpl
hlt
push
imul
ins
sbb
xor
(bad)
(bad)
(bad)
dec
(bad)
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
(bad)
(bad)
jl
mov
bound
ficom
gs
aam
pop
popa
mov
into
pop
jmp
(bad)
cmp
mov
inc
movs
fisttp
xchg
fadd
(bad)
shl
jmp
(bad)
(bad)
(bad)
fldcw
inc
mov
sar
add
in
add
pop
dec
or
cmp
add
(bad)
inc
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomp
(bad)
(bad)
(bad)
dec
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
(bad)
(bad)
push
mov
call
jmp
fild
push
fdiv
or
test
clc
(bad)
(bad)
cmp
push
or
or
push
in
dec
xchg
daa
scas
pushf
mov
pop
jge
(bad)
(bad)
inc
lock
add
inc
push
imul
xor
sbb
push
imul
(bad)
push
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
(bad)
(bad)
(bad)
(bad)
call
xchg
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
(bad)
(bad)
(bad)
(bad)
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
mov
retf
sbb
outs
and
xchg
ja
int3
add
mov
das
es
(bad)
mov
or
sub
mov
cmps
call
ret
shl
sbb
(bad)
(bad)
push
repnz
pushf
mov
ins
add
ss
jmp
addr16
jb
push
(bad)
(bad)
push
mov
dec
mov
loop
sub
or
mov
xchg
or
out
fdivr
(bad)
(bad)
(bad)
jl
(bad)
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
push
push
cmp
outs
ja
mov
out
cli
jo
std
(bad)
mov
pop
or
adc
sahf
gs
clc
sar
imul
push
js
(bad)
(bad)
jmp
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
(bad)
(bad)
(bad)
jmp
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
(bad)
(bad)
(bad)
push
mov
retf
mov
cmps
mov
sar
sub
push
mov
(bad)
(bad)
(bad)
(bad)
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
iret
sahf
dec
push
adc
mov
mov
push
or
dec
dec
mov
adc
mov
dec
je
push
in
or
ficomp
pop
mov
add
pop
inc
ret
adc
scas
or
mov
inc
inc
scas
mov
push
mov
mov
push
xchg
inc
in
add
repz
pop
push
inc
iret
repz
xor
sbb
or
sahf
out
ds
jg
loopne
les
out
test
mov
out
sahf
out
cmp
and
jns
ja
or
jle
push
loopne
shl
sahf
out
test
mov
je
pop
mov
lock
ins
push
add
push
movs
lea
cmp
or
adc
ss
aaa
stos
sbb
cmp
inc
out
aaa
ss
mov
inc
pop
ins
jb
lea
fimul
outs
addr16
mov
outs
fistp
cmps
dec
sub
(bad)
fild
cmps
push
xor
ins
arpl
outs
sbb
jmp
test
mov
mov
pop
aam
jecxz
outs
or
ins
dec
mov
aad
xor
cmp
mov
rcl
aaa
(bad)
and
aaa
xor
pop
pop
add
add
add
and
fs
mov
sub
sub
and
xor
xor
xor
in
or
outs
das
xor
xor
xor
ret
mov
jg
outs
outs
bound
outs
gs
and
jo
and
or
sahf
push
test
cs
push
lock
out
les
jns
cwde
nop
mov
out
push
out
sahf
out
xor
sbb
iret
repz
add
pop
in
loopne
sar
repz
lods
mov
iret
rep
pusha
dec
cmp
cmp
or
or
push
pop
push
fdiv
cmp
repz
mov
repz
ins
pop
inc
xor
sbb
out
cmp
add
pop
in
jns
out
shl
out
add
pop
sar
movs
mov
and
in
pop
aam
pushf
jns
out
and
sbb
xor
out
add
pop
fmul
xor
xchg
mov
push
sub
inc
aad
sub
or
sub
or
test
xor
daa
and
lods
push
(bad)
das
pop
xchg
nop
add
adc
mov
pop
sub
mov
sbb
add
lods
push
push
add
dec
fistp
mov
pop
push
pop
push
inc
xor
sar
sbb
hlt
push
call
(bad)
les
repz
jl
push
repz
inc
cmp
adc
jns
iret
add
push
loopne
mov
test
test
out
sub
adc
add
mov
add
mov
aaa
add
fnstcw
cmp
adc
mov
and
and
mov
push
sub
push
(bad)
(bad)
(bad)
jmp
stos
sub
nop
inc
add
inc
push
add
add
add
adc
enter
xchg
inc
add
push
push
mov
mov
and
cmps
iret
inc
or
adc
sar
test
inc
ss
dec
cwde
cmp
add
add
dec
or
add
pop
jl
push
inc
dec
out
and
(bad)
test
loop
pop
fistp
adc
addr16
add
add
push
pop
push
add
sbb
pop
in
sbb
push
cmp
jmp
cmp
sbb
add
push
cmp
mov
add
add
inc
pushf
pushf
add
add
and
ins
retf
or
pop
ret
sub
mov
cmp
mov
mov
sub
xor
mov
mov
cs
imul
ret
mov
adc
mov
push
imul
adc
imul
(bad)
imul
sbb
xor
mov
or
ins
add
ds
addr16
and
xchg
in
jg
imul
mov
shr
jae
jnp
sub
inc
and
sbb
pop
xchg
bound
sbb
xchg
pop
daa
sbb
mov
pop
add
or
ins
sub
(bad)
mul
push
cli
pop
fs
add
push
and
push
mov
(bad)
or
mov
(bad)
jbe
adc
xlat
mov
cwde
and
sbb
add
sbb
push
pop
lock
push
inc
arpl
inc
fs
pusha
sbb
mov
shl
adc
adc
arpl
data16
inc
sbb
inc
retf
cdq
and
div
(bad)
xor
and
inc
out
out
lock
mov
dec
ror
sbb
cmps
jae
push
push
(bad)
jb
gs
daa
jmp
shl
or
shr
inc
outs
cs
push
push
push
bound
sbb
cmp
inc
fs
lods
add
in
jae
adc
sahf
push
mov
shl
or
aad
adc
inc
lods
stos
inc
jmp
inc
mov
sbb
les
ins
push
push
push
outs
xlat
cmp
out
mov
shl
jbe
adc
dec
das
bound
cli
ss
xlat
addr16
and
je
shr
ja
push
lods
push
bound
cmp
cmp
jo
(bad)
push
sub
xor
sub
dec
xchg
mov
and
sbb
inc
sub
mov
shl
jae
(bad)
xor
add
mov
pusha
jb
outs
mov
mov
out
fistp
aaa
adc
xor
bound
scas
test
push
ja
add
pop
sbb
ja
inc
or
mov
xor
mov
fwait
mov
cmps
popa
vaddps
inc
mov
imul
push
(bad)
out
cmp
outs
aaa
scas
or
lods
and
jae
fadd
sbb
jb
gs
adc
push
jmp
arpl
adc
rol
mov
pop
push
imul
push
sub
movs
(bad)
es
nop
or
inc
dec
cmp
xor
pop
and
mov
mov
inc
and
sub
dec
mov
mov
(bad)
inc
push
bound
or
push
seta
sub
add
inc
jo
push
ins
cmps
popa
ja
push
xchg
inc
mov
rcl
add
xchg
imul
or
xor
retf
out
xor
adc
dec
jae
js
ins
js
imul
jp
sub
imul
scas
sbb
inc
adc
outs
cmps
mov
fisub
and
and
int3
pusha
adc
lods
push
add
scas
loope
sub
jae
jb
mov
stos
jo
arpl
(bad)
shr
les
sbb
addr16
retf
test
mov
jle
(bad)
cmp
(bad)
adc
push
mov
adc
cs
and
mov
bound
or
scas
push
push
cmp
mov
mov
ds
loope
(bad)
outs
mov
aaa
lods
call
jmp
push
aaa
outs
shl
daa
xor
jae
pop
sbb
pop
mov
dec
mov
mov
inc
push
add
sub
cmps
inc
and
fistp
or
pop
dec
add
sti
or
cvttps2pi
addr16
mov
cwde
test
jb
xor
or
mov
call
xchg
and
retf
jne
dec
mov
pop
sub
pop
dec
jnp
rol
pop
dec
(bad)
mov
daa
das
pop
sbb
shl
jmp
cs
add
sbb
das
das
jno
push
hlt
xchg
das
xchg
mov
lods
call
das
je
dec
xor
cmp
dec
and
lsl
push
mov
sbb
add
xchg
xchg
inc
inc
mov
jmp
mov
xor
repz
add
mov
imul
lods
pop
stos
repz
adc
out
cs
(bad)
cli
ror
pop
aaa
rcr
fwait
or
add
add
sti
ja
sub
xor
ins
imul
inc
sub
jecxz
pop
mov
or
sbb
dec
xchg
pop
pop
pop
outs
retf
cmp
cmp
push
jae
rcr
outs
arpl
dec
add
xor
out
push
popa
(bad)
(bad)
mov
xchg
scas
and
(bad)
ds
(bad)
and
daa
inc
dec
inc
repz
mov
outs
lds
(bad)
push
retf
aas
mov
ret
and
pop
pop
sbb
add
and
push
pusha
aad
mov
mov
xchg
sub
jle
push
lods
scas
fdiv
mov
jne
(bad)
fld
bts
ret
xor
mov
stos
push
mov
push
and
ja
repz
inc
mov
pusha
sub
lds
ja
out
fmul
imul
mov
push
inc
lea
sub
sub
xor
xor
scas
adc
les
stos
sub
mov
fisttp
inc
xor
pusha
pop
mov
arpl
xor
adc
leave
push
dec
adc
and
mov
mov
shl
iret
jne
adc
adc
and
fisubr
and
or
retf
sbb
add
arpl
loopne
repz
pusha
test
or
xor
shl
add
cmp
ja
inc
in
add
push
jecxz
(bad)
sub
jg
aam
popa
add
sbb
aam
xchg
pop
xor
dec
fbstp
stos
add
xchg
(bad)
mov
ret
shr
mov
loope
aaa
sub
rcl
inc
add
lahf
iret
call
data16
or
dec
pop
popa
jae
les
pop
lds
jmp
outs
adc
jmp
aad
push
jae
cmovs
stos
sbb
lods
dec
lods
mov
adc
and
sbb
mov
ja
mov
es
fld
adc
sub
xor
fdiv
push
fbld
adc
add
inc
pop
jg
mov
fwait
sbb
(bad)
imul
(bad)
imul
outs
pop
push
loop
cmp
xchg
push
stos
dec
inc
inc
xlat
inc
sub
sub
bound
pop
(bad)
xlat
call
mov
adc
or
pop
adc
fisub
dec
gs
jo
and
retf
jecxz
mov
jb
cdq
xor
sub
movs
dec
fs
jle
popa
imul
cs
sti
jne
inc
imul
mov
cmp
not
pusha
pop
mov
or
mov
in
scas
xor
cmps
sub
pusha
sbb
push
imul
mov
(bad)
sub
arpl
mov
imul
ins
jp
push
les
add
adc
das
xor
fidivr
or
ret
push
jmp
mov
outs
jne
jle
mov
and
inc
push
mov
dec
jo
inc
fmul
leave
cdq
aaa
xor
cmp
cmp
pop
or
dec
mov
test
jbe
and
sbb
adc
imul
mov
lahf
adc
push
inc
jne
clc
push
fcmovnu
xor
loope
inc
imul
clc
outs
ins
push
xor
jo
outs
jo
fcmovne
mov
and
je
push
and
add
inc
ret
imul
je
jne
fwait
jnp
mov
jns
pop
and
and
mov
in
fwait
ja
cmps
sbb
retf
mov
and
push
rcr
fld
ins
push
and
cmp
fs
sti
inc
lods
add
and
cmp
jae
mov
and
mov
sbb
sbb
add
push
cmp
or
popa
ins
aad
arpl
add
hlt
addr16
jno
mov
inc
xchg
xchg
inc
aam
cmps
popa
pop
int3
xor
cmp
inc
pop
imul
push
xchg
inc
mov
sbb
pushf
jbe
dec
and
mov
xor
pop
jns
imul
push
inc
(bad)
push
imul
push
push
jne
dec
jg
pop
mov
push
je
or
push
fld
xchg
gs
pop
rcl
and
adc
out
adc
dec
sub
out
data16
ins
mov
arpl
aaa
imul
sub
mov
bound
mov
and
xor
sub
das
jns
lods
movs
push
jne
cli
inc
ret
mov
jo
jl
imul
imul
and
push
inc
jne
in
fsubr
popa
bound
inc
shl
dec
enter
push
fistp
push
inc
pop
jo
mov
aas
loop
mov
inc
xchg
movs
xchg
inc
ins
mov
adc
(bad)
push
rcl
xacquire
inc
mov
popa
dec
mov
sbb
jb
jge
xor
bswap
jbe
pop
or
adc
out
fnsave
fadd
mov
shr
jb
and
ins
sbb
jae
sbb
adc
das
sbb
loopne
inc
inc
movs
mov
jo
mov
cs
stos
push
outs
lock
loop
ror
mov
or
jmp
aaa
loop
mov
je
adc
fdiv
or
stc
(bad)
push
jge
sbb
loop
and
int
mov
and
pop
cmp
sub
inc
adc
xor
or
loope
data16
xlat
dec
and
pusha
sbb
jae
jno
sbb
add
push
into
ja
xor
dec
imul
mov
push
and
in
call
adc
loopne
rol
cli
and
or
fidiv
jmp
jne
out
sub
and
fstp
cmovg
adc
add
(bad)
popa
fsub
jo
icebp
adc
mov
xor
sbb
sub
and
sub
(bad)
bnd
shr
cmps
mov
jg
popa
sbb
cmp
iret
lock
outs
adc
sbb
pusha
mov
stos
add
bound
loop
xchg
ja
pop
and
ror
enter
dec
xchg
add
das
nop
pop
jno
or
mov
or
retf
cmp
test
(bad)
xor
sbb
mov
mov
inc
(bad)
punpckhwd
add
clc
adc
mov
mov
inc
push
sbb
dec
and
ja
sub
ja
sbb
adc
fsub
jl
sub
les
adc
imul
or
pusha
mov
popa
sub
cmp
push
outs
imul
pop
loopne
and
or
imul
adc
sub
add
lock
icebp
jp
jmp
sbb
push
popa
and
arpl
fidivr
mov
adc
outs
aas
pop
push
sbb
rcr
iret
ficomp
xchg
pop
movs
fdiv
fimul
push
jnp
ret
jo
xchg
jns
and
movs
fwait
xchg
jae
mov
jae
dec
fst
jne
push
ja
pop
shr
push
fs
(bad)
outs
es
mov
(bad)
add
mov
cmp
(bad)
pop
das
or
sbb
add
pusha
sbb
cmp
jae
add
outs
aas
sub
xchg
add
in
test
jns
adc
sbb
sub
dec
arpl
fdivr
enter
dec
cmp
rcr
xor
xor
sahf
ss
and
enter
fst
inc
sub
jb
int3
pushf
cwde
sbb
js
cmp
shl
xor
mov
inc
or
nop
test
sub
fild
pop
addr16
pop
or
inc
inc
pusha
push
add
dec
lods
lods
jo
inc
inc
test
je
add
retf
movs
arpl
ins
fild
inc
das
icebp
test
and
loopne
nop
(bad)
iret
sahf
pop
mov
pop
retf
ror
stos
jp
and
shr
ja
idiv
daa
sbb
push
in
xor
imul
ror
addr16
js
pop
mov
inc
inc
imul
xor
sub
fldcw
jae
adc
xchg
inc
jb
push
in
mov
push
sbb
push
fwait
lock
ret
mov
inc
lock
test
pop
enter
adc
mov
ins
jnp
push
push
add
das
js
lods
mov
sub
jl
out
(bad)
pop
je
mov
push
push
outs
jne
int3
mov
add
pop
jb
mov
ret
pushf
jns
push
outs
popa
jecxz
adc
inc
fisttp
inc
inc
jbe
sbb
and
and
dec
add
xor
mov
sbb
pusha
cmps
push
pop
cmp
xor
mov
retf
cdq
sub
fnsave
outs
out
dec
outs
dec
cmps
push
push
imul
movs
pop
adc
or
lock
(bad)
push
push
and
stos
inc
and
daa
test
js
outs
test
dec
cmp
push
dec
es
ins
js
fs
and
imul
stos
dec
sti
cmp
and
or
dec
shl
push
imul
xor
fwait
cmps
movs
sub
or
xor
sar
rcl
push
adc
mov
out
or
jae
adc
xchg
cmp
(bad)
jno
jae
dec
mov
pop
cmps
rol
sub
mov
and
mov
imul
xlat
cmps
mov
arpl
or
dec
scas
outs
daa
cmp
fidiv
popa
mov
and
or
ror
jecxz
sub
jns
dec
popa
pop
and
or
adc
std
loopne
hlt
inc
addr16
dec
outs
stos
data16
push
or
inc
push
lea
jns
call
mov
or
adc
fmul
adc
imul
add
adc
dec
(bad)
bound
push
outs
mov
addr16
icebp
jmp
push
xor
dec
sbb
ds
mov
sub
push
jo
pop
xchg
push
pop
inc
daa
adc
jo
inc
add
ret
scas
nop
jae
pop
outs
dec
sbb
push
xchg
inc
(bad)
mov
imul
jns
mov
push
imul
push
push
inc
retf
sbb
mov
sub
push
push
push
je
push
je
add
les
(bad)
pushf
lahf
jo
or
mov
or
lds
setno
mov
jnp
xor
xchg
ficomp
dec
sbb
inc
ss
push
je
dec
movs
mov
xor
sub
inc
sbb
out
mov
xchg
inc
or
add
enter
nop
mov
sbb
pop
fs
inc
bound
loop
push
inc
push
cmp
imul
jne
in
jmp
loope
inc
ret
test
inc
push
je
stos
jmp
or
xchg
data16
and
(bad)
pop
call
mov
sbb
adc
dec
arpl
and
test
ins
adc
jb
mov
push
not
adc
pop
frstor
xchg
lahf
shr
xor
fild
fcom
ret
jecxz
or
loope
imul
pushf
inc
in
pop
loop
nop
pop
loope
shr
push
shl
mul
adc
mov
test
dec
pop
jbe
sbb
push
and
inc
mov
xor
jb
jo
sbb
sbb
arpl
rcr
retf
test
or
movs
popa
in
test
outs
jmp
and
div
pop
arpl
dec
jecxz
add
and
jno
add
loopne
loopne
pop
mov
stos
xor
xchg
and
enter
shl
jl
loop
push
or
ret
invd
push
inc
(bad)
icebp
dec
fstp
pop
mov
gs
mov
icebp
adc
push
lahf
(bad)
and
xor
xchg
popa
mov
fld
sub
sbb
out
into
pusha
adc
pop
xor
sbb
fs
lock
outs
mov
adc
cmp
sbb
add
test
inc
mov
pusha
inc
mov
mov
dec
test
loopne
inc
dec
mov
(bad)
cmp
adc
inc
mov
push
imul
sbb
inc
xchg
inc
cmps
sub
popa
xor
sub
ins
and
ret
gs
xor
jg
pop
rol
mov
jmp
daa
mov
push
aaa
xchg
add
mov
dec
inc
xchg
adc
mov
mov
inc
xchg
lods
movs
imul
mov
push
movs
jecxz
jge
retf
enter
jae
or
scas
add
test
iret
outs
loop
mov
push
jne
and
pop
xchg
dec
cld
jmp
sti
popa
(bad)
mov
gs
adc
outs
inc
jge
or
jg
dec
and
jnp
xlat
mov
push
mov
lds
inc
outs
rol
cli
movs
push
repz
push
sahf
imul
sub
push
outs
jb
rol
imul
push
movs
adc
adc
data16
dec
or
and
add
push
mov
out
add
mov
idiv
test
outs
sbb
stos
jge
xor
adc
iret
cmp
jle
rcl
or
mov
dec
arpl
add
mov
sbb
out
scas
daa
cmps
push
scas
in
push
lods
mov
inc
sub
je
inc
cmps
push
jmp
sbb
and
loopne
frstor
xor
retf
repz
mov
xor
test
xor
add
aam
or
mov
add
outs
call
xchg
add
movups
mov
push
jnp
add
jae
shl
adc
retf
inc
mov
dec
imul
add
not
dec
add
nop
icebp
in
mov
add
add
add
xchg
fadd
shl
cmp
jp
cmovo
adc
addr16
mov
cmp
pop
xchg
or
fcomp
push
prefetch
sbb
sbb
mov
sub
or
or
adc
inc
or
js
in
rcl
test
cs
mov
enter
rcr
loopne
mov
shl
add
cdq
or
mov
xchg
cmp
rcr
inc
add
out
xchg
push
or
mov
jg
pop
or
and
xchg
and
add
test
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
