push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
mov
xor
xor
mov
push
push
push
push
lea
mov
mov
call
mov
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
lea
push
call
mov
mov
push
push
call
jmp
mov
ret
mov
push
mov
push
call
mov
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
mov
pop
ret
int3
push
mov
sub
mov
xor
mov
push
push
mov
push
push
mov
mov
call
add
push
call
push
mov
lea
push
push
call
xor
mov
add
mov
mov
mov
mov
cmp
je
pop
mov
pop
mov
xor
call
mov
pop
ret
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
inc
cmp
jl
push
push
push
call
lea
push
push
mov
call
mov
push
add
push
mov
mov
call
push
lea
push
push
mov
call
push
push
call
lea
push
lea
push
push
push
push
push
push
push
push
lea
push
mov
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
lea
push
push
mov
mov
mov
mov
mov
mov
call
push
push
push
push
mov
call
mov
mov
lea
lea
mov
mov
push
push
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
lea
mov
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
nop
mov
inc
test
jne
mov
mov
mov
mov
lea
push
push
call
push
lea
push
push
mov
call
mov
mov
mov
lea
add
mov
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
lea
mov
inc
test
jne
mov
mov
mov
mov
lea
dec
mov
inc
test
jne
movzx
mov
mov
mov
lea
push
push
call
push
call
mov
mov
mov
push
push
push
mov
add
push
push
mov
call
push
push
mov
call
push
call
mov
mov
push
push
push
add
push
push
mov
call
push
lea
push
push
call
mov
mov
mov
mov
add
mov
movzx
lea
mov
mov
push
push
mov
mov
mov
mov
mov
call
push
call
mov
push
push
lea
push
mov
add
push
push
mov
call
mov
imul
mov
mul
mov
shr
lea
lea
push
mov
push
mov
call
mov
push
push
mov
call
mov
test
je
mov
mov
xor
mov
push
mov
mul
shr
add
push
push
push
mov
push
call
mov
push
push
lea
push
mov
mul
mov
shr
lea
push
push
mov
call
mov
mov
mul
mov
mov
lea
lea
shr
push
sub
sub
mov
call
mov
push
push
add
push
push
push
call
mov
push
call
mov
pop
mov
pop
pop
mov
xor
call
mov
pop
ret
mov
mov
push
push
call
mov
pop
mov
pop
xor
pop
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
mov
xor
xor
mov
push
push
push
push
lea
mov
mov
push
mov
call
push
call
push
push
call
push
call
mov
mov
push
push
call
push
push
call
mov
push
push
call
add
mov
xor
lea
mov
add
inc
cmp
jb
push
call
mov
mov
call
call
mov
call
mov
call
mov
lea
lea
add
je
mov
mov
sub
mov
jmp
mov
mov
mov
mov
add
inc
inc
call
mov
call
mov
lea
lea
add
cmp
jb
mov
xor
mov
add
inc
cmp
jb
push
push
mov
push
call
push
push
call
mov
mov
mov
push
push
call
add
mov
mov
mov
call
xor
xor
dec
jne
mov
inc
cmp
jl
call
mov
call
push
call
jmp
mov
ret
mov
call
cmp
je
mov
jmp
lea
push
push
mov
push
push
mov
push
push
call
mov
push
push
mov
call
push
call
mov
mov
mov
xor
mov
mov
mov
lea
push
push
call
push
call
push
call
add
mov
call
cmp
jbe
mov
call
test
je
mov
sub
jmp
lea
mov
mov
mov
mov
inc
dec
jne
mov
call
test
jne
push
push
push
call
xor
mov
mov
pop
pop
pop
pop
mov
xor
call
mov
pop
ret
int3
jmp
cmp
jne
repz
jmp
mov
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
mov
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
push
push
call
lea
push
call
xor
cmp
jne
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
cmp
jne
mov
cmp
jne
cmp
jbe
xor
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
test
je
movzx
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
call
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
push
call
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
mov
xor
jmp
mov
test
je
mov
pop
pop
ret
mov
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
push
call
pop
ret
mov
push
mov
push
call
pop
push
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
mov
mov
pop
mov
cmp
jae
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
and
xor
inc
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
push
call
mov
call
mov
call
push
call
mov
push
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jae
mov
mov
test
je
call
add
jmp
mov
cmp
jae
mov
mov
test
je
call
add
jmp
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
call
push
call
pop
push
call
int3
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
mov
push
mov
push
call
mov
test
je
mov
mov
mov
push
cmp
je
add
lea
cmp
jb
add
cmp
jae
cmp
je
xor
test
je
mov
test
jne
xor
jmp
cmp
jne
and
xor
inc
jmp
cmp
je
mov
push
mov
mov
mov
cmp
jne
push
pop
mov
and
add
cmp
jl
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
and
push
call
pop
mov
pop
or
pop
pop
pop
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
mov
cmp
je
mov
add
mov
mov
cmp
jne
xor
cmp
mov
sete
inc
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
cmp
je
mov
mov
inc
mov
inc
mov
mov
test
je
cmp
jne
cmp
je
cmp
jne
test
je
mov
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmp
je
cmp
je
mov
add
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
mov
inc
inc
test
jne
mov
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
test
je
call
pop
test
je
mov
mov
inc
mov
inc
inc
mov
mov
inc
mov
jmp
call
pop
test
je
inc
inc
inc
mov
inc
jmp
test
je
mov
inc
mov
inc
mov
jmp
mov
pop
pop
test
je
and
inc
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
call
mov
xor
cmp
jne
xor
jmp
cmp
je
add
cmp
jne
add
cmp
jne
push
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
call
push
push
pop
push
call
pop
pop
xor
cmp
jne
or
jmp
lea
mov
mov
cmp
jae
add
or
mov
mov
mov
mov
mov
mov
mov
add
lea
add
cmp
jb
push
push
cmp
je
mov
cmp
je
mov
add
mov
add
mov
mov
cmp
jl
mov
cmp
jge
mov
push
push
call
pop
pop
test
je
add
lea
mov
cmp
jae
add
or
and
and
and
mov
mov
mov
mov
add
add
lea
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
cmp
je
mov
mov
test
je
test
jne
push
call
test
je
mov
and
mov
sar
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
test
je
inc
add
inc
inc
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
or
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
push
lea
push
call
test
je
inc
jmp
or
mov
inc
cmp
jl
push
call
xor
pop
pop
pop
leave
ret
or
jmp
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
ret
call
ret
mov
push
push
call
mov
test
jne
push
call
mov
push
push
call
mov
pop
ret
mov
cmp
je
push
push
call
call
or
mov
cmp
je
push
call
or
jmp
push
push
call
push
call
mov
mov
and
xor
inc
mov
mov
mov
mov
mov
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
push
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
push
push
call
call
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmp
mov
mov
je
cmp
je
cmp
je
test
jne
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
push
push
call
test
je
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
call
test
je
mov
push
push
call
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
push
push
call
call
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
push
push
call
xor
test
setne
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
mov
test
js
jg
mov
mov
cmp
jne
cmp
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
cmp
jne
cmp
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
pop
leave
ret
and
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
call
ret
push
call
mov
ret
mov
push
push
xor
mov
cmp
jne
lea
mov
push
push
add
call
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
and
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
mov
pop
mov
test
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
mov
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
mov
mov
jmp
mov
jmp
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
push
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
mov
xor
cmp
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
inc
jmp
call
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
cmp
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
push
push
mov
push
push
call
push
mov
mov
call
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
mov
call
mov
add
push
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
call
mov
call
ret
call
ret
mov
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
push
call
mov
add
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmp
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzx
push
push
movzx
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
and
cmp
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzx
mov
add
test
je
dec
jne
jmp
mov
sub
movzx
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzx
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
mov
call
or
pop
ret
mov
push
mov
mov
push
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
test
jne
or
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
push
lea
call
movzx
mov
mov
test
jne
cmp
je
mov
mov
movzx
and
jmp
xor
test
je
xor
inc
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
push
call
mov
test
je
xor
mov
inc
cmp
jb
mov
mov
test
je
lea
movzx
movzx
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
push
lea
push
push
push
lea
push
push
push
call
xor
push
push
lea
push
push
push
lea
push
push
push
push
call
add
push
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
mov
xor
sub
mov
lea
add
lea
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
mov
call
cmp
je
mov
and
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
jmp
cmp
je
mov
and
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
inc
add
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmp
je
lea
mov
test
je
movzx
movzx
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzx
movzx
jmp
mov
mov
or
movzx
inc
cmp
jbe
mov
add
cmp
jne
mov
inc
add
cmp
mov
jb
mov
mov
mov
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
or
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
and
push
push
call
pop
pop
mov
test
jne
mov
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
test
jne
test
jne
push
call
pop
and
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
and
mov
call
ret
cmp
jne
push
call
pop
mov
xor
ret
mov
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
mov
jmp
mov
sub
mov
mov
inc
test
je
dec
jne
test
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
lea
mov
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
dec
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
add
push
call
pop
pop
mov
mov
call
jmp
push
call
pop
mov
ret
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmp
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
call
test
je
push
call
pop
test
je
push
push
push
call
add
push
call
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
icebp
add
icebp
add
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
out
icebp
add
push
icebp
add
push
icebp
add
push
icebp
add
icebp
add
icebp
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
or
adc
icebp
add
push
icebp
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
push
icebp
add
push
icebp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
push
icebp
add
icebp
add
icebp
add
icebp
add
icebp
add
icebp
add
icebp
add
inc
mov
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pushf
push
icebp
add
icebp
add
push
icebp
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
mov
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmp
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
mov
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
mov
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
int3
int3
int3
int3
add
add
test
inc
push
popf
or
or
or
std
add
inc
inc
sar
cli
mov
xor
(bad)
(bad)
out
out
push
jecxz
pop
jecxz
leave
pop
out
test
ret
mov
mov
(bad)
stos
test
mov
repz
mov
retf
test
call
stos
ret
sti
icebp
out
pushf
(bad)
aad
(bad)
cwde
mov
ss
pop
ret
push
cmps
clc
sbb
mov
sbb
lahf
daa
imul
mov
mov
jecxz
loopne
mov
les
pop
jp
jle
and
xchg
jb
jb
gs
imul
data16
jno
jl
push
daa
dec
pop
push
imul
push
dec
push
test
dec
dec
or
inc
inc
ret
cmp
mov
xor
push
push
jmp
xor
mov
mov
daa
movs
and
push
jp
imul
dec
adc
das
push
mov
gs
outs
jle
jl
loope
mov
mov
inc
fcmovne
icebp
iret
out
shr
shr
aad
xlat
out
in
test
std
(bad)
dec
(bad)
mov
push
iret
mov
test
shl
mov
fdivr
mov
mov
scas
scas
ret
fmul
(bad)
movs
les
in
aad
jmp
(bad)
clc
in
stc
repnz
jmp
fdivrp
lods
in
in
sti
hlt
out
fdivp
adc
push
sbb
adc
push
sbb
adc
sbb
outs
and
sbb
add
cmps
adc
add
pop
cmp
sbb
sub
push
or
sbb
and
dec
test
sub
pop
sub
cmp
dec
pop
push
pop
inc
inc
sbb
push
dec
push
das
dec
dec
jne
cmp
pop
adc
int
sahf
repnz
sbb
dec
ja
jmp
add
sbb
push
adc
sbb
cli
push
les
xor
aas
loop
adc
call
push
int3
test
push
xchg
mov
pop
xchg
in
pop
mov
int
enter
xlat
dec
mov
fisttp
in
jmp
aaa
mov
mov
mov
mov
imul
or
outs
and
pop
pop
pop
in
shr
pop
sbb
mov
popf
push
push
div
jmp
out
mov
sahf
jge
es
cmp
icebp
jno
std
cli
outs
mov
das
xchg
and
and
push
pop
mov
and
push
sub
shl
dec
xor
sbb
jo
dec
fild
fdivr
inc
cmp
adc
gs
fwait
sub
and
xchg
jbe
leave
or
xchg
imul
adc
inc
xlat
dec
sub
mov
inc
into
lea
add
inc
data16
cmp
fdivr
lahf
mov
jno
xor
pushf
iret
mov
sbb
in
ins
data16
loopne
fwait
dec
mov
and
inc
cwde
mov
mov
mov
sbb
mov
and
loop
mov
pop
test
add
dec
xchg
outs
loop
in
pop
je
mov
push
ds
sbb
pop
rcl
aam
rcl
push
aad
loop
sbb
mov
add
mov
ins
push
(bad)
xor
fidiv
mov
aas
adc
outs
xchg
outs
(bad)
stos
jns
lahf
jmp
mov
bound
cmps
sbb
fdivr
xor
fisttp
xchg
push
mov
dec
(bad)
inc
daa
ret
mov
mov
cmc
sbb
sub
mov
lea
sub
dec
cmp
push
lods
pusha
jle
pusha
and
mov
pop
arpl
xchg
hlt
jecxz
rol
pop
fs
fs
add
push
mov
add
test
aaa
(bad)
or
sbb
shr
jmp
sub
and
push
cdq
in
sbb
mov
mov
int
inc
mov
inc
fmul
(bad)
clc
adc
mov
mov
jg
cmp
pop
daa
jmp
test
hlt
pop
idiv
sbb
ins
mov
xchg
lahf
sbb
xlat
ins
loop
dec
mov
int3
call
add
mov
aas
div
jle
xchg
jg
jne
cli
aas
cdq
sti
movs
out
ins
xchg
push
inc
in
cs
fisub
xchg
pusha
pop
cmp
dec
das
pop
dec
push
loopne
fiadd
(bad)
rcr
mov
dec
dec
inc
dec
add
pop
inc
push
iret
push
mov
cmp
cmp
or
sub
mov
sub
dec
adc
push
pop
lods
mov
sub
pop
sbb
in
sub
loope
add
js
or
pop
pop
jb
popa
sbb
aas
pop
stc
jno
add
mov
aam
pxor
adc
mov
adc
or
cdq
fld
rcl
dec
mov
enter
retf
(bad)
mov
inc
test
mov
mov
mov
repnz
mov
jae
out
sahf
mov
cmps
loope
daa
sub
mov
lahf
push
pop
fdivr
stc
out
clc
sbb
je
mov
dec
sub
outs
adc
pop
jne
aaa
cdq
stc
arpl
sub
sub
mov
mov
jns
das
imul
(bad)
aam
pop
xlat
das
fistp
adc
push
push
and
sbb
dec
dec
sbb
sbb
inc
mov
xor
data16
push
aaa
ja
scas
dec
xlat
sub
(bad)
fiadd
pop
jecxz
lea
adc
xchg
call
fimul
dec
or
out
std
jge
test
fcomp
push
div
enter
test
outs
movntq
jecxz
shl
loopne
inc
lahf
rcl
sti
(bad)
in
sbb
xor
push
vhaddpd
pop
cmp
pop
cmp
mov
outs
repz
hlt
xor
mov
aad
pushf
(bad)
in
pushf
iret
pop
shr
xchg
dec
test
inc
adc
retf
pushf
xor
clc
mov
pop
test
mov
jl
out
jo
jmp
hlt
dec
lahf
mul
ror
into
mov
ret
test
test
dec
jno
dec
iret
jp
dec
inc
call
sbb
xor
inc
aas
push
pop
movs
inc
iret
mov
sub
cdq
sub
mov
inc
jle
sub
lods
sbb
mov
push
pop
add
add
popa
add
or
loope
loopne
(bad)
repnz
lahf
out
pop
xchg
jmp
jmp
out
loopne
(bad)
(bad)
fcmovbe
fcomp
(bad)
fcmovbe
(bad)
cs
ror
retf
(bad)
(bad)
leave
(bad)
int
sti
mov
dec
xor
ds
pop
mov
xchg
push
sub
test
jecxz
cld
sub
inc
sub
sbb
int
adc
les
(bad)
pop
(bad)
mov
jns
or
jecxz
xlat
int
iret
lock
hlt
repnz
enter
loope
jb
sti
jmp
retf
out
jmp
(bad)
or
push
xor
fadd
ret
out
sbb
add
kxorb
aad
adc
nop
lods
jl
stc
cmp
sti
cmp
adc
(bad)
ss
test
or
jns
loope
lock
and
movs
call
iret
ja
add
jo
jl
mov
imul
arpl
bound
cmp
pushf
sti
mov
xchg
hlt
xchg
xor
sub
jmp
push
test
nop
and
add
fnstsw
mov
xor
mov
dec
or
pop
mov
mov
dec
push
or
lods
xor
mov
inc
sbb
add
fsubr
sub
adc
and
sub
pop
and
call
nop
xchg
xchg
add
mov
dec
mov
mov
sar
lock
leave
cli
jo
jge
dec
mov
imul
cmc
arpl
mov
sbb
push
rcl
mov
adc
jae
dec
inc
cld
iret
ins
sub
in
push
mov
imul
out
gs
mov
jns
shl
into
add
movs
sbb
pop
mov
lea
adc
push
outs
mov
fwait
inc
int3
dec
nop
push
mov
mov
mov
nop
xor
stos
jae
sub
and
loopne
fdivr
xchg
push
xchg
jb
aam
lahf
inc
add
call
test
mov
mov
xor
mov
fild
jmp
stos
cmps
enter
movs
test
fs
xlat
popf
stos
aad
xchg
lock
adc
fist
mov
les
add
mov
addr16
je
std
ins
xor
out
outs
push
and
movs
and
pop
sbb
sbb
push
xchg
and
sbb
jo
add
stc
jnp
cmp
imul
dec
icebp
jae
xor
std
xor
mov
and
jecxz
movs
inc
pop
sbb
sahf
xor
jo
push
je
adc
mov
jl
sub
inc
push
js
js
xchg
lods
je
cwde
div
pushf
repnz
sub
cwde
gs
je
aad
fmul
pop
fdiv
shl
repz
pop
in
into
jmp
data16
add
cdq
mov
mov
xchg
mov
xor
daa
mov
aam
movs
enter
fsub
in
lahf
out
xchg
xchg
adc
adc
push
push
push
pop
push
mov
cmps
or
cmps
test
outs
cmp
sub
mov
repnz
div
ds
lods
das
loopne
mov
out
and
lahf
fcom
pushf
cmp
xchg
pop
sti
stc
mulps
or
loope
push
jmp
daa
out
out
or
xchg
cld
xor
sahf
cmc
imul
(bad)
ins
ins
mov
and
enter
pusha
pop
jbe
or
sbb
pop
push
mov
jns
out
test
test
mov
dec
or
add
jg
div
jbe
jle
icebp
std
repnz
sub
in
arpl
in
push
mov
ficom
fcmovnb
push
or
adc
and
sub
and
or
mov
mov
cmp
ins
sub
aad
stos
fbld
das
repnz
cmc
adc
dec
pop
sahf
mov
sahf
push
nop
mov
push
fstp
mov
xchg
ja
repnz
cli
div
in
push
xor
in
dec
nop
ins
fstp
pop
add
arpl
xchg
iret
mov
add
lds
dec
adc
or
and
or
jo
movs
mov
movs
sbb
lahf
sahf
das
nop
push
push
dec
sbb
(bad)
test
pop
pop
retf
retf
xchg
add
in
aas
cld
jne
push
jb
mov
adc
repz
fs
mov
stos
xchg
(bad)
push
mov
mov
fnsave
rcr
(bad)
dec
sub
(bad)
addr16
leave
(bad)
aam
mov
fistp
mov
add
test
and
movs
cmps
inc
das
inc
scas
add
mov
pushf
pushf
jne
(bad)
xchg
adc
add
ret
cmc
dec
mov
test
adc
push
hlt
stc
cmp
fnstenv
daa
jbe
aaa
jno
in
adc
sub
(bad)
addr16
aaa
frstor
pop
aad
cld
push
cdq
dec
clc
bound
mov
js
int
lods
inc
loop
or
mov
or
ds
push
inc
dec
fs
jae
aam
ss
daa
aaa
in
movs
and
xor
cmc
push
cmp
sbb
adc
sahf
push
retf
adc
or
or
clc
jb
repz
xor
jno
sub
add
jmp
pusha
out
xchg
cwde
push
xchg
xor
push
xchg
(bad)
pop
push
xchg
mov
ror
iret
pushf
in
enter
ret
push
movs
in
xchg
dec
mul
xor
addr16
nop
mov
jae
sub
test
push
arpl
mov
mov
fwait
stos
repnz
adc
sbb
sbb
add
pop
add
sti
add
adc
xor
jae
bound
add
loope
pusha
adc
rcr
jb
aad
in
inc
fcom
jmp
int
push
mov
push
pop
mov
aam
aam
pop
and
mov
data16
inc
das
lods
movs
das
jg
mov
scas
pusha
fsub
rcl
or
jo
xchg
dec
xchg
pop
cdq
dec
or
or
pop
pop
pop
add
xor
scas
out
adc
div
hlt
adc
push
in
out
or
stc
out
icebp
mov
(bad)
fbstp
xlat
rcl
dec
cmc
rcl
repnz
dec
iret
or
mov
retf
out
jns
inc
mov
cmp
into
dec
mov
add
call
push
push
and
push
pushf
ficom
test
inc
sbb
xchg
test
xchg
push
push
xor
inc
ss
add
jo
lea
ins
lods
ins
xchg
outs
jmp
ins
xlat
sub
es
push
push
loope
scas
xlat
xchg
bound
sbb
or
mov
and
mov
push
mov
jl
fs
jl
sub
scas
into
and
mov
(bad)
lods
sub
push
jmp
and
push
xchg
sbb
pop
in
jbe
daa
popa
dec
out
cmp
cli
mov
(bad)
xor
loop
adc
push
clc
call
loopne
leave
and
daa
ds
and
cmps
fnstsw
push
icebp
xor
sahf
pushf
sub
shr
(bad)
bswap
push
inc
sub
inc
imul
xor
mov
loope
mov
cs
fwait
(bad)
test
and
ficomp
pusha
sbb
mov
xlat
or
clc
mov
jns
dec
jle
pop
push
push
daa
jge
jl
xchg
push
push
cmc
arpl
pop
mov
push
rcl
push
fadd
push
fild
shr
sbb
pop
cdq
inc
mov
xchg
inc
xchg
aaa
(bad)
cmp
xor
xchg
xor
dec
push
sub
and
or
and
pop
cmp
and
(bad)
std
sbb
sbb
add
jne
jo
or
or
or
xor
add
pop
rol
dec
div
ss
repz
cld
call
fdiv
scas
adc
repnz
leave
mov
jge
cli
cld
jnp
(bad)
push
push
out
push
shl
(bad)
jnp
mov
xchg
les
jno
mov
mov
xor
xor
test
mov
jmp
pushf
xchg
sahf
es
mov
imul
jns
(bad)
mov
pop
mov
clc
shl
outs
out
cmp
loopne
mov
mov
mov
jbe
push
mov
cmps
pop
pusha
pop
sub
push
sbb
jg
mov
inc
(bad)
dec
push
dec
aad
lods
dec
aam
sub
test
xchg
xor
cmp
int
push
push
sub
fs
inc
push
push
sub
rcl
dec
xchg
pop
add
jp
inc
sbb
pop
rol
and
mov
ud2
sbb
ds
adc
sbb
push
test
(bad)
cs
in
jmp
adc
aaa
fsubr
push
mov
and
cmp
pop
push
sbb
pop
xchg
sub
cmc
call
retf
cmp
test
cld
cmp
mov
pop
stos
mov
in
inc
div
ret
call
cwde
xchg
pop
push
lds
mov
out
pop
mov
xchg
test
jmp
or
jns
call
iret
sub
loop
ja
lock
jae
sub
scas
ins
popf
adc
imul
xor
sub
cmps
or
mov
sub
retf
fnstsw
shr
ja
cmp
mov
dec
adc
fisub
test
or
fs
iret
scas
shr
add
adc
ss
push
xchg
fnstsw
push
xchg
leave
cwde
push
or
add
push
xchg
sahf
dec
sbb
stc
pop
in
push
xchg
loop
in
(bad)
jecxz
pop
mov
out
push
scas
out
call
cdq
add
xor
loop
add
mov
mov
pop
sahf
pop
retf
lea
jmp
enter
inc
cdq
dec
fwait
mov
xchg
inc
adc
inc
xchg
pop
in
(bad)
push
mov
mov
mov
mov
mov
sbb
xchg
xchg
inc
or
mov
cmp
xchg
xor
xchg
mov
xchg
cmp
jge
sub
and
test
sub
and
add
ins
outs
ja
popa
mov
cmps
or
or
inc
pop
ficomp
dec
sbb
and
out
xor
mov
ds
xor
leave
fs
(bad)
dec
fst
sub
jnp
fimul
mov
pop
in
sbb
xchg
push
cli
and
add
repnz
add
mov
or
push
pop
repnz
test
cmp
cmc
scas
not
jbe
sbb
dec
rol
outs
xchg
pminsw
jmp
cmp
iret
sti
fild
xchg
fstp
xchg
fnsave
aam
retf
(bad)
call
jae
outs
mov
mov
mov
movs
and
popa
adc
cld
and
xchg
int3
stos
inc
mov
(bad)
idiv
adc
xchg
test
ins
test
xlat
dec
mov
imul
jp
js
jb
cmp
jno
cmp
jnp
data16
mov
pop
push
mov
or
rcl
push
test
and
lds
sbb
mov
add
mov
mov
xor
aas
cwde
arpl
movs
jp
popf
sub
push
and
sbb
nop
pop
ret
dec
xchg
push
adc
inc
sbb
jmp
lods
xchg
push
retf
mov
add
std
in
sti
outs
stc
jae
sti
sub
inc
pmaxsw
add
scas
sbb
icebp
repz
jecxz
loop
gs
retf
int3
fcomp
sub
test
push
and
inc
sbb
inc
retf
dec
mov
movs
dec
mov
inc
inc
mov
arpl
arpl
in
adc
test
jbe
out
and
test
call
sahf
test
jle
add
xor
jo
test
add
push
hlt
and
jo
div
je
cmc
lock
rep
ins
ins
xor
gs
popa
bound
push
mov
ins
test
jge
sar
ror
push
mov
test
adc
jle
cmp
aas
jno
sub
mov
scas
adc
cmp
fidivr
stos
mov
daa
mov
push
ror
xchg
cmp
inc
fadd
add
add
loopne
push
mov
scas
jo
loope
cmp
out
mov
imul
leave
sub
mov
fcomp
(bad)
out
fcom
cmps
in
ret
dec
movs
int3
(bad)
dec
pop
inc
xchg
dec
dec
(bad)
mov
cmp
and
dec
xor
xchg
mov
sub
xchg
sub
pop
add
jo
lahf
popf
das
push
sub
lea
mov
aaa
mov
ja
cmp
xchg
mov
mov
jo
mov
cmc
jno
sub
arpl
call
ins
pop
inc
mov
mov
test
xchg
aam
or
cmps
inc
rcr
inc
(bad)
sub
inc
inc
cld
add
cs
dec
sub
lods
cmp
cmp
mov
and
clc
pop
es
jecxz
pop
sub
pop
addr16
adc
lock
pop
leave
dec
jmp
test
sub
or
jmp
jbe
stos
stc
mov
out
in
or
adc
pop
and
movntps
xor
xchg
das
ror
(bad)
xchg
push
ret
(bad)
clc
xchg
inc
int
push
aas
call
mov
jno
test
mov
ret
das
repz
(bad)
sub
push
ins
xchg
sub
xchg
xchg
xchg
pushf
and
mov
call
xchg
pop
or
and
cmp
xor
sub
jg
pop
das
popa
xchg
gs
mov
sbb
pop
pop
stos
mov
adc
aad
daa
ficomp
retf
add
inc
movs
inc
sbb
or
jg
sbb
inc
js
fsub
sub
jb
(bad)
and
inc
inc
add
adc
pushf
(bad)
xlat
pop
push
je
jae
push
or
inc
hlt
cmps
dec
in
test
adc
call
shl
movs
push
out
dec
in
dec
loopne
inc
out
and
mov
sahf
mov
cmp
mov
and
retf
or
leave
and
cmp
retf
ins
mov
mov
lds
es
ficomp
or
(bad)
fiadd
xchg
mov
popf
jbe
and
rcl
and
adc
sbb
jne
lock
xor
iret
out
push
mov
ss
les
pop
pop
cmp
xchg
aam
push
mov
pop
popf
mov
ins
imul
adc
sar
(bad)
clc
adc
xor
sbb
mov
icebp
add
lods
arpl
scas
ins
shr
pop
jmp
push
repz
aaa
adc
mov
and
and
in
jb
es
popf
std
push
jmp
xchg
repz
jmp
sar
jecxz
fucom
and
sub
mov
ss
and
(bad)
and
fcmovne
shl
movs
(bad)
inc
rcl
mov
cmp
arpl
int3
pusha
lahf
enter
mov
mov
and
pop
inc
sti
fbld
mov
jmp
ins
popf
jp
push
movs
mov
mov
int
pop
enter
xchg
js
in
js
imul
adc
daa
dec
add
inc
cld
stc
retf
sbb
xor
pop
pop
pop
pop
mov
push
push
inc
dec
jl
push
movs
shl
mov
push
pop
inc
add
fs
aas
pop
xor
lds
inc
xor
and
cmp
outs
(bad)
test
int
xchg
imul
sbb
pop
out
aas
sub
dec
and
(bad)
jmp
xchg
xchg
inc
out
push
imul
jecxz
icebp
xchg
mov
mov
cmp
dec
retf
adc
outs
pop
clc
jg
sub
aad
mov
shl
sub
lahf
xlat
sub
mov
loope
loope
ret
shl
mov
sbb
mov
sub
bnd
add
mul
nop
cmp
lods
mov
fist
pop
call
add
aad
xchg
or
xor
jge
or
push
ja
and
das
cld
sub
cmc
jl
fs
inc
sbb
add
repnz
sub
pop
pop
adc
ror
movs
sbb
clc
inc
jbe
pop
iret
ss
mov
sbb
mov
adc
test
les
push
jb
es
stos
shl
fist
test
test
xor
div
loope
cld
and
push
xor
fisttp
jo
mov
jle
pop
xor
inc
popa
call
in
dec
jecxz
popf
js
test
xor
jle
cdq
jae
push
lods
outs
into
(bad)
mov
call
in
sahf
mov
and
or
push
aaa
scas
(bad)
nop
add
out
push
(bad)
scas
out
fld
dec
scas
cmp
cmp
popf
or
jne
add
xchg
or
ret
adc
fisub
inc
popf
shr
xchg
xchg
and
popf
rcl
loop
mov
xchg
in
mov
ja
je
mov
iret
mov
or
not
loopne
push
mov
call
dec
(bad)
push
sub
vmovdqa
sub
push
inc
and
mov
rep
lods
cmp
lods
ins
xchg
and
test
sbb
ds
push
push
or
lahf
pop
dec
or
or
pop
xchg
pop
aad
mov
adc
adc
loopne
mov
cmp
(bad)
cmp
loopne
out
sub
(bad)
stc
outs
mov
and
popa
jecxz
call
sbb
sbb
out
cdq
sbb
push
cmp
iret
sbb
mov
jp
lds
ret
sti
mov
xor
cmps
or
loope
jae
mov
lds
adc
test
xlat
and
popf
int3
add
and
pop
and
outs
call
fmul
inc
xchg
mov
into
jg
or
leave
popf
sub
les
imul
mov
lods
shl
add
add
or
push
adc
fist
add
test
arpl
pop
cmp
push
or
ins
lds
jl
(bad)
hlt
stos
jp
nop
cmps
aas
and
jno
pop
ficomp
scas
mov
aad
xchg
adc
outs
xchg
add
pop
stos
mov
mov
inc
mov
call
cld
mov
cli
mov
push
ret
icebp
aaa
mov
in
pop
or
lods
outs
mov
je
(bad)
fisttp
sub
fwait
les
inc
sti
retf
inc
dec
call
mov
mov
mov
mov
sub
sub
and
lods
sub
lahf
adc
pop
retf
call
sbb
nop
ret
fmul
rol
mov
jg
jge
dec
or
je
jb
jo
out
ins
cmp
add
in
push
gs
popa
xor
inc
pop
push
pop
(bad)
fistp
push
bound
push
pop
pop
(bad)
leave
adc
pop
les
leave
or
mov
add
cmp
pop
ss
xor
cmp
pop
sub
ja
fisub
dec
loope
enter
xchg
inc
sbb
push
sbb
test
in
or
add
jo
cli
leave
jb
(bad)
mul
shl
popf
int
loope
xor
imul
and
xor
ret
ds
cmp
movs
pop
mov
pop
mov
dec
(bad)
test
(bad)
leave
test
scas
mov
test
mov
pop
mov
das
push
and
scas
and
xor
mov
cmc
sbb
popf
cmps
adc
and
(bad)
push
sbb
mov
outs
xchg
mov
icebp
cli
adc
jo
std
and
out
and
bound
shl
jno
cs
mov
pop
pop
add
add
or
adc
adc
arpl
dec
inc
or
push
inc
(bad)
fidivr
mov
mov
pop
xor
lods
pop
outs
xor
test
pushf
sbb
xor
lahf
push
adc
sbb
dec
add
lea
(bad)
push
rol
cmp
jnp
and
xor
ins
clc
stos
movs
cmp
and
in
cmp
test
lods
fcmovnbe
xchg
xchg
xor
xchg
jl
rol
mov
pop
dec
out
les
cli
inc
nop
add
xchg
mov
loope
cmp
mov
test
outs
stos
cmp
std
and
lods
mov
sbb
xor
add
fmul
xchg
push
add
add
bound
dec
loope
daa
movs
inc
sbb
pop
sti
add
and
cmps
fs
loopne
dec
add
mov
pop
push
add
mov
or
dec
js
ror
retf
add
mov
lea
push
jle
xor
mov
cmp
xor
cs
jle
jnp
stos
arpl
ret
setne
adc
or
add
shl
pop
movs
sub
cld
cld
jbe
xor
lds
dec
fdiv
hlt
not
mov
mov
sub
sbb
shl
push
(bad)
push
mov
into
sahf
inc
mov
call
inc
cwde
cmp
sbb
mov
mov
imul
push
enter
movs
add
test
(bad)
bound
cld
xlat
jbe
sbb
test
fadd
add
jge
jp
mov
mov
call
dec
xor
add
out
mov
xor
rcl
dec
push
dec
xor
rcl
mov
sub
arpl
adc
xchg
fst
aaa
pop
aas
cmp
aaa
aaa
cmp
adc
scas
cmp
movs
in
and
adc
fwait
je
jle
loopne
sbb
push
mov
dec
push
or
or
les
popa
add
sub
fst
addr16
adc
out
or
loopne
mov
cmp
fst
iret
lds
sbb
xchg
mov
ficom
out
imul
je
mov
mov
mov
mov
mov
cmps
in
mov
test
cwde
cli
xor
(bad)
ins
(bad)
cmp
dec
test
sub
mov
jp
mov
add
cmp
mov
xor
push
je
loopne
push
xchg
imul
push
dec
gs
into
popa
arpl
into
mov
sbb
aaa
push
cmp
int3
push
rol
add
push
out
mov
inc
imul
dec
lock
in
cmps
data16
leave
or
imul
add
jbe
pop
sahf
sbb
ins
cdq
or
stc
cmps
lea
(bad)
adc
hlt
cmp
jae
je
adc
jnp
inc
dec
or
retf
scas
pop
(bad)
jmp
pop
push
mov
fwait
cli
fcmovu
popf
leave
jne
scas
jae
push
sti
cs
or
enter
dec
add
xor
cmp
(bad)
push
xrelease
pop
(bad)
test
mov
sub
xor
mov
xchg
pop
sbb
movs
xor
frstor
call
mov
xchg
ja
mov
pop
aaa
(bad)
outs
jns
rol
addr16
pop
fcomp
mov
push
jno
or
pop
lea
push
mov
jb
data16
pusha
mov
cmps
pop
adc
mov
and
enter
inc
pop
mov
xchg
and
fisubr
pop
arpl
sub
aas
sbb
daa
inc
push
mov
xchg
repz
lahf
mov
dec
xchg
or
adc
cli
dec
imul
(bad)
clc
loope
ret
pop
repz
div
fld
fisub
ja
adc
rcr
je
fmul
sbb
xchg
leave
clc
ret
(bad)
lahf
pop
fdiv
ret
cmp
or
test
mov
cdq
sub
test
popf
mov
out
push
cmps
lods
daa
pop
repnz
or
xchg
aad
adc
vpmacsswd
lds
pop
in
jo
int3
mov
push
jbe
cmp
cmp
jecxz
and
inc
inc
bound
lods
ins
push
out
sbb
scas
sbb
sbb
inc
inc
dec
sti
add
leave
mov
xor
xor
shl
mov
div
mov
sub
cmp
lods
daa
mov
cmp
add
xor
mov
push
cli
sub
into
sub
inc
(bad)
xor
shr
mov
sbb
add
vpsubusb
push
shr
scas
mov
mov
test
faddp
xor
dec
stc
adc
mov
jns
cmp
and
aaa
(bad)
aad
cmp
int3
xor
mov
test
fwait
pop
clc
inc
call
mov
repz
mov
mov
mov
popf
pop
stc
xchg
(bad)
aad
add
das
jns
xchg
mov
ja
and
(bad)
cld
sbb
sbb
es
sub
gs
test
mov
dec
mov
inc
adc
loop
and
ss
jge
ins
addr16
imul
sub
xor
sub
cwde
fs
ret
push
pop
fsub
fiadd
jb
adc
dec
and
out
and
imul
mov
test
mov
push
and
dec
in
pop
aad
rol
push
lods
int3
or
addr16
or
frstor
test
cmps
lock
mov
xchg
call
add
push
mov
lea
loop
int
sbb
pop
cs
repnz
add
add
imul
fild
mov
mov
xchg
mov
pop
repz
ret
repz
cmc
cdq
jl
aaa
jno
outs
in
fs
and
lahf
aaa
out
xor
mov
fcomp
xchg
rcl
inc
dec
dec
adc
adc
inc
push
idiv
cmp
aaa
mov
ins
and
loope
sub
mov
loopne
frstor
and
and
sti
sbb
sbb
push
add
popf
dec
cli
pop
xchg
or
mov
push
je
ins
and
mov
sub
add
lock
and
in
lods
or
icebp
adc
iret
push
fucomp
nop
lds
popf
pop
shl
jae
icebp
test
into
inc
and
inc
rol
xchg
dec
or
leave
(bad)
mov
fbstp
lods
mov
dec
and
inc
movs
mov
jp
pop
mov
jbe
mov
add
mov
outs
mov
add
sti
mov
cmp
jno
cdq
sbb
outs
adc
das
xchg
jecxz
xchg
pushf
ja
arpl
inc
mov
cmp
push
cmp
inc
mov
retf
or
mov
cs
ss
xor
sub
test
fldenv
jge
sahf
jns
pop
repnz
pop
push
adc
add
dec
or
lahf
jge
jbe
jmp
ja
repz
in
outs
push
push
call
data16
data16
lds
fcomp
sbb
out
mov
test
push
inc
mov
mov
ret
(bad)
dec
mov
mov
clc
inc
cmp
inc
mov
fcmovbe
js
fimul
out
stos
in
xor
in
mov
jmp
xchg
adc
mov
mov
int
add
sti
push
lods
test
leave
lock
mov
movs
jg
bound
pop
push
sbb
aaa
xchg
inc
add
imul
int
xchg
adc
jb
mov
xor
mov
dec
sub
cs
cmp
xor
add
sbb
fsub
xchg
xor
add
pushw
dec
retf
xchg
sbb
imul
jmp
js
jmp
xor
inc
int3
xor
sub
lods
mov
scas
div
repz
rcl
call
push
loop
lock
sbb
or
aaa
(bad)
mov
rcl
aad
jle
jge
jb
stos
loope
mov
jae
ret
outs
movs
cmp
fwait
xchg
gs
mov
mov
repz
(bad)
neg
lods
or
in
xchg
jmp
pushf
jp
nop
std
fwait
pusha
jne
fnstenv
mov
aad
mov
bound
push
cmp
loopne
rcr
outs
out
xor
lds
ds
popa
pop
push
pop
dec
mov
int
stc
in
add
call
push
sub
or
(bad)
cmp
mov
xchg
sub
cmps
mov
dec
lods
aaa
adc
rcr
sbb
pop
or
jo
test
jnp
mov
pop
or
and
add
sbb
clc
js
mov
cmc
div
test
loop
test
jmp
call
ret
popa
cmp
push
push
(bad)
push
dec
dec
jns
pop
inc
mov
rcl
outs
into
gs
mov
out
test
mov
frstor
aaa
ds
adc
adc
jmp
add
mov
pop
or
push
mov
shr
xchg
enter
retf
mov
loop
mov
sub
adc
jns
pop
into
outs
mov
retf
iret
in
imul
pop
sub
sbb
inc
mov
push
and
dec
add
int
cmps
or
and
xor
sub
pop
popa
mov
and
pop
and
test
mov
dec
out
inc
pop
das
test
sbb
fwait
dec
and
sub
sbb
dec
pop
pop
sbb
into
add
test
mov
ja
push
jne
test
lock
ja
ins
jno
(bad)
mov
push
dec
mov
aad
pop
rcl
fwait
dec
int
add
enter
rol
mov
ret
mov
in
mov
push
mov
rol
push
mov
enter
out
push
sti
leave
mov
adc
xchg
(bad)
inc
adc
frstor
push
mov
add
jl
ins
repnz
jb
xor
pop
scas
mov
in
pop
mov
popa
adc
lahf
test
pop
mov
mov
pop
push
jecxz
lods
xlat
cwde
pop
retf
pop
dec
jge
cld
sbb
les
cmp
mov
sbb
rcl
and
mov
pop
adc
add
repz
test
push
adc
push
sub
sbb
add
xchg
mov
jbe
fist
movs
div
cmc
std
jae
add
es
in
dec
loop
call
loop
imul
mov
fmul
rol
xchg
fst
cmc
sbb
jns
pop
enter
fnstenv
(bad)
test
inc
adc
inc
mov
in
mov
or
inc
xor
add
in
and
mov
push
mov
push
xor
movs
xor
sub
jp
adc
nop
and
or
jge
or
push
ror
js
bound
pop
cli
pop
outs
je
(bad)
cmp
inc
aaa
gs
pusha
fldl2t
ficom
outs
ja
pop
retf
xlat
push
fnstenv
lahf
dec
dec
ds
mov
inc
xchg
mov
ds
movs
jge
xor
lock
cmps
mov
sub
cs
stos
scas
sbb
sbb
sbb
adc
adc
push
cmp
adc
cmc
xchg
pop
add
xchg
push
mov
adc
fs
jle
jg
stc
addr16
and
out
dec
or
(bad)
jecxz
jmp
loopne
add
ret
xlat
hlt
call
sub
clc
rol
(bad)
neg
(bad)
rcl
sti
or
mov
(bad)
rcr
icebp
ret
lds
mov
test
and
(bad)
add
mov
mov
mov
ror
les
fwait
push
adc
call
(bad)
cli
inc
js
cmp
jp
dec
jnp
sbb
push
cld
or
dec
int3
outs
mov
push
mov
imul
mov
push
add
lods
dec
cdq
pop
ss
xchg
push
mov
xchg
push
xchg
aas
in
sub
xor
es
daa
cmps
mov
jns
mov
sub
shl
cs
sbb
push
adc
mov
rcl
(bad)
out
iret
or
fwait
or
(bad)
nop
add
out
std
jmp
std
shl
cwde
jp
push
in
loope
jmp
out
mov
jae
or
iret
cmc
and
xor
add
ret
int3
out
enter
xchg
sbb
(bad)
inc
inc
scas
fidivr
mov
cmp
in
mov
aas
clc
test
mov
inc
mov
mov
jbe
pushf
push
xchg
xor
dec
mov
cwde
ins
retf
test
lods
adc
cmp
lods
push
(bad)
xchg
xor
adc
dec
jmp
adc
adc
dec
pop
pop
out
popf
fmul
adc
lea
pop
xor
or
mov
(bad)
sar
add
sbb
gs
mov
push
daa
inc
and
and
sbb
sbb
jae
inc
jns
fwait
je
push
pop
jae
out
outs
or
push
imul
popw
in
popa
add
mov
sub
sub
jmp
pop
xchg
fs
in
mov
push
mov
rcr
mov
push
retf
xchg
jbe
lds
mov
add
mov
push
fdiv
dec
movs
cmp
scas
lods
je
stos
outs
sub
mov
jno
lahf
outs
sub
data16
push
adc
ret
sub
in
mov
mov
or
xchg
mov
idiv
adc
ja
cld
fwait
xchg
loope
pop
dec
cmp
arpl
mov
xchg
int
mov
out
add
cmp
ds
sbb
(bad)
cmp
inc
ret
mov
mov
cmp
mov
xor
mov
in
daa
sub
mov
sbb
(bad)
sbb
fwait
pop
push
sbb
popf
push
ficomp
sub
or
adc
test
dec
in
fwait
push
mov
jecxz
push
in
out
loope
scas
jmp
mov
push
outs
cmp
and
mov
imul
xor
les
(bad)
lods
int3
ret
movs
ror
mov
xchg
mov
mov
in
xor
and
cmps
mov
mov
popf
and
enter
push
add
out
mov
mov
cld
or
inc
cli
call
jae
loope
(bad)
jae
and
out
push
ins
cmp
in
xor
push
popa
xchg
mov
aam
(bad)
add
repnz
and
push
dec
inc
ret
int
lds
mov
fwait
mov
mov
stc
xor
sub
push
retf
mov
mov
cmp
add
xchg
outs
xchg
or
or
je
scas
or
and
jno
cld
stc
mov
std
jp
jnp
outs
jmp
ins
addr16
pusha
and
imul
push
pop
aad
test
pop
mov
dec
into
into
retf
dec
jne
mov
jge
mov
mov
ja
cmp
cmp
stos
sub
mov
sti
and
xchg
jecxz
adc
push
xchg
xchg
push
adc
mov
adc
nop
inc
mov
ins
jge
mov
movs
jb
mov
icebp
mov
ja
out
je
imul
sub
loope
push
pop
dec
pop
pop
pop
jg
push
xor
pop
push
adc
push
jbe
fisttp
test
add
jle
add
es
jo
das
cmp
sub
and
cs
cmps
sbb
fst
sbb
sti
push
jno
xor
aad
pop
mov
xchg
xchg
ror
clc
(bad)
(bad)
cmp
xor
mov
push
xchg
call
mov
out
in
mov
push
sbb
ret
push
cmps
add
and
fisubr
dec
fxch
shr
int3
in
add
cmp
mov
movs
add
xchg
stos
xor
movs
and
(bad)
mov
out
pop
sbb
push
iret
sbb
jnp
lea
jecxz
adc
in
cmps
xchg
pusha
or
cmp
xchg
cmc
div
ja
jnp
xor
imul
jae
popa
jae
xlat
inc
(bad)
fisttp
pop
mov
dec
push
mov
mov
sub
int
and
loopne
lahf
scas
fdiv
cmps
sub
and
or
daa
daa
xchg
stos
in
sub
pop
cmp
adc
nop
sub
pop
in
das
add
imul
pop
cmps
pop
loop
and
jae
test
fist
push
fbstp
icebp
mov
repz
hlt
(bad)
loopne
ins
lahf
cmp
xor
cmp
shl
in
int3
(bad)
jmp
test
mov
xchg
stos
cdq
add
fwait
ret
fdivr
adc
mov
xor
mul
add
jp
cmps
jge
inc
mov
ss
jnp
(bad)
xchg
call
jg
jp
je
ins
jae
pop
xor
or
jno
shl
ret
mov
push
inc
pop
pop
sbb
loope
push
push
push
je
sbb
test
mov
dec
xor
inc
and
stos
aaa
cmp
iret
xor
in
ficomp
sub
ret
outs
lock
pop
and
cmp
inc
aaa
or
or
push
dec
or
(bad)
fwait
gs
sahf
inc
mov
pop
push
cdq
jp
jo
arpl
xchg
repnz
mov
sbb
test
and
test
rcr
pop
push
outs
les
cmp
iret
or
mov
test
push
fild
out
scas
mov
dec
call
ss
lds
test
(bad)
mov
and
xor
or
bound
cwde
fwait
inc
xchg
jg
rcl
cli
movs
in
fstp
stos
inc
add
jmp
fld
dec
jnp
jl
sar
imul
sbb
shl
xchg
icebp
pop
inc
push
(bad)
mov
pop
jmp
pop
xchg
test
inc
cmps
inc
rol
cdq
inc
lds
outs
ds
lods
push
xor
mov
scas
rcr
pop
pop
leave
pusha
adc
and
sbb
bound
sub
dec
inc
adc
test
mov
push
inc
adc
or
jb
jl
dec
xlat
pop
mul
arpl
sbb
(bad)
arpl
std
aaa
ror
out
fstp
fdiv
pop
pop
gs
inc
lock
sbb
and
add
jecxz
lods
leave
jmp
mov
jecxz
lahf
mov
jnp
inc
in
and
sbb
pushf
or
xchg
out
xchg
sbb
adc
mov
mov
adc
sbb
cmp
js
xor
jmp
loope
stos
imul
bound
pop
inc
pop
pop
pop
cmps
inc
scas
fnsave
out
add
sbb
jge
retf
aas
int
in
movs
fdiv
push
cmp
(bad)
in
xor
xchg
push
int
mov
jle
jmp
(bad)
pop
test
inc
jns
pop
push
popf
dec
pusha
jnp
or
retf
rol
jb
jae
imul
and
cmc
retf
loop
mov
dec
jmp
jns
mov
mov
bound
push
adc
dec
call
pop
push
xor
call
sahf
dec
sbb
pop
nop
(bad)
stos
cmp
mov
jae
mov
xchg
cmp
mov
fwait
and
mov
pop
xor
pop
mov
jo
iret
push
jne
dec
dec
call
jns
sbb
mov
out
faddp
mov
jle
enter
and
bnd
jg
pop
sbb
std
push
data16
jmp
pushf
sahf
pop
mov
mov
je
and
aam
scas
dec
lahf
push
dec
retf
aaa
inc
inc
dec
mov
mov
push
mov
and
xor
pop
mov
mov
xchg
xchg
cld
sbb
add
les
aam
adc
adc
xchg
pop
pop
out
mov
add
dec
(bad)
fmul
test
pop
jge
idiv
std
inc
mov
dec
retf
out
push
jmp
in
jmp
rcr
leave
fld
pop
add
addr16
js
pop
stos
xor
and
sub
scas
loop
sbb
adc
mov
mov
test
mov
lods
dec
scas
or
jmp
sbb
mov
push
mov
imul
mov
aas
in
jp
sahf
jle
jb
sbb
outs
sbb
push
bound
data16
out
jno
popf
fbld
aaa
adc
pusha
loop
les
xchg
mov
fidiv
ss
or
mov
gs
fidiv
push
jbe
cmp
push
daa
mov
jno
dec
cmc
enter
or
xchg
xchg
pop
out
das
sbb
add
jp
(bad)
bnd
enter
sub
dec
add
popf
out
(bad)
cli
push
adc
pop
popa
(bad)
dec
repz
add
sbb
loopne
lahf
or
out
jge
jnp
jle
lahf
sub
sub
movs
icebp
es
mov
loop
xchg
push
scas
je
push
jbe
ins
mov
fucomip
xchg
mov
pushf
js
mov
mov
test
test
lods
fucom
outs
outs
ret
call
mov
add
pop
ins
cmp
adc
pop
jecxz
inc
mov
out
pop
inc
aad
push
push
add
aad
mov
mov
dec
(bad)
lds
leave
inc
aad
ret
imul
(bad)
iret
shr
scas
call
mov
test
ins
sbb
call
jno
dec
add
add
add
mov
hlt
imul
pmaxsw
outs
retf
add
das
bound
in
loop
loope
fbstp
rcr
fcmovnu
pop
fsubr
aad
xlat
cmps
pushf
pop
pop
ror
or
mov
adc
int3
mov
push
push
into
xchg
aas
ss
mov
scas
xchg
cmps
mov
mov
push
adc
call
sbb
out
shrd
movs
push
icebp
test
or
jge
sub
jnp
repnz
repnz
test
mov
jge
add
arpl
out
adc
rcl
aam
dec
adc
xchg
push
ror
dec
clc
sahf
retf
and
push
xchg
ret
shr
cmp
xor
sub
js
cmp
and
sub
movs
pop
lods
popf
mov
loopne
call
mov
ins
xchg
fst
fisttp
loope
add
out
test
or
(bad)
mov
xor
xchg
inc
idiv
in
scas
shl
jmp
loop
in
pop
lds
(bad)
sbb
mov
icebp
cmp
pop
or
retf
jmp
lods
sub
sub
push
repnz
mov
mov
test
cmc
lahf
test
sbb
(bad)
xchg
aam
adc
or
mov
or
or
push
icebp
fistp
fnsave
repz
imul
outs
scas
loope
sub
or
js
pop
pop
push
(bad)
fidivr
(bad)
lods
adc
jmp
pop
jg
sub
dec
stc
xor
mov
dec
mov
test
adc
movs
test
call
stos
mov
cmp
or
sbb
adc
cdq
test
pop
push
or
add
add
jne
mov
icebp
jg
div
push
jne
jmp
out
ins
push
jbe
jecxz
out
push
lds
hlt
pop
adc
push
outs
xchg
out
ror
hlt
sti
enter
(bad)
(bad)
mov
xor
mov
pop
jnp
aad
push
adc
fist
mov
movs
stc
movs
sbb
adc
mov
test
ret
cmp
out
push
test
repz
sbb
jne
cmp
shr
enter
stos
xor
loop
pop
sbb
clc
mov
aam
mov
cwde
sbb
cmp
sub
dec
sub
add
dec
xor
xchg
or
xchg
push
push
mov
movs
mov
jmp
pop
adc
jp
pushf
sbb
bnd
or
sub
add
pop
add
or
jns
pushf
pop
cli
sub
jae
xor
push
aaa
jne
out
in
push
sub
icebp
daa
jle
mov
mov
pop
pop
test
push
pop
shl
fdiv
inc
shr
lock
rol
dec
out
jae
movs
enter
mov
out
cdq
aad
xor
movs
in
mov
in
mov
popa
(bad)
lds
xchg
xchg
(bad)
sbb
enter
int3
je
sub
mov
jle
js
cmp
push
jo
xchg
jb
jl
outs
dec
in
loope
jl
xchg
xor
fs
inc
or
ficomp
shr
add
into
add
ds
xlat
js
ss
jns
mov
sub
jmp
int
push
pop
xchg
push
lock
call
addr16
push
test
xchg
out
push
in
inc
cmovbe
hlt
in
not
push
cmc
sbb
sbb
inc
pop
std
sti
sub
sbb
jae
out
cmp
push
xchg
push
cdq
and
push
ficom
(bad)
shl
fnstcw
lods
lods
popf
aas
loope
dec
xchg
gs
xor
rcr
mov
mov
and
jmp
add
mov
int3
pop
into
mov
lock
fbld
retf
push
ret
ins
test
pop
lods
or
jb
adc
push
shl
pop
inc
loopne
test
pusha
xchg
xor
popa
adc
push
test
inc
test
hlt
pop
push
xor
mov
je
aas
add
push
push
inc
mov
xchg
dec
add
cmp
aaa
push
aaa
dec
mov
sar
ds
fld
fidiv
fnsave
inc
fisttp
fsub
out
add
add
lock
push
neg
clc
adc
push
cld
adc
adc
mov
movs
xor
loope
jmp
shr
adc
pop
sbb
pusha
hlt
sub
and
rcl
test
(bad)
push
push
nop
movs
out
cmp
pop
les
cmps
das
add
xor
xor
xchg
mov
mov
lds
mov
jne
out
mov
pop
mov
icebp
cmp
int
pusha
rol
xchg
xchg
shl
test
outs
xchg
inc
mov
xchg
add
addr16
pop
xor
in
sar
push
sbb
push
call
xchg
jmp
enter
dec
xchg
push
fsubrp
sub
scas
cmp
pop
add
or
xchg
je
in
cmp
sub
mul
repnz
fstp
mov
test
jno
loope
or
or
pop
lods
retf
out
or
cli
inc
int
mov
jo
arpl
cdq
repnz
adc
aad
ds
imul
mov
mov
(bad)
mov
popf
inc
jmp
jle
std
fsave
(bad)
lods
and
push
mul
mov
lea
(bad)
loop
add
jmp
test
cdq
loope
ldmxcsr
popf
adc
fstp
adc
jne
nop
sbb
in
(bad)
fild
xchg
outs
daa
adc
sub
lds
dec
xchg
adc
js
push
jge
ins
out
cwde
push
dec
lahf
cwde
inc
xchg
inc
mov
mov
jge
xor
jo
je
push
mov
shl
bound
fs
mov
sub
sub
and
loop
arpl
xchg
mov
dec
and
les
test
aas
test
ret
call
pop
ret
or
outs
das
xchg
and
and
or
xchg
fadd
(bad)
ss
cld
and
scas
inc
mov
gs
cli
es
fadd
push
shl
sar
movs
jmp
out
sub
and
(bad)
out
sahf
pop
inc
pop
(bad)
icebp
xchg
jno
xchg
lock
scas
xchg
mov
dec
inc
mov
test
sti
in
ins
mov
fnstsw
lds
out
mov
xchg
popa
pop
and
xchg
lds
push
cmp
mov
xor
mov
(bad)
shr
cwde
jae
test
call
pop
dec
pop
pop
xor
fiadd
inc
push
inc
sbb
and
add
scas
adc
mov
jnp
xor
mov
add
sub
jge
ds
ja
ins
es
xchg
dec
sbb
push
lahf
lock
sbb
or
push
xor
dec
aad
push
push
or
hlt
jmp
hlt
(bad)
mov
mov
sbb
movs
call
sub
cdq
rcl
rcr
pop
inc
cwde
cmp
inc
leave
lea
xchg
lods
vcmpsd
stos
test
int
mov
sti
ins
std
les
dec
cmps
cld
push
movs
popa
mov
pop
fnstenv
adc
stos
adc
or
lahf
and
stc
jb
xor
jno
icebp
pop
jecxz
out
xor
test
gs
xor
aas
xor
pop
test
lods
scas
pop
cs
dec
dec
ja
dec
inc
inc
xor
cli
inc
sbb
daa
mov
inc
and
or
imul
and
sbb
cmp
xchg
cli
adc
adc
xchg
dec
push
pop
mov
pop
mov
add
or
jne
or
mov
mov
test
scas
outs
jmp
cmps
adc
out
jmp
jecxz
cs
enter
cmp
mov
test
dec
mov
mov
cmp
pushf
jecxz
cmp
ins
out
cmps
sub
mov
xchg
in
ds
scas
pop
sbb
fcom
mov
jo
sti
stos
ror
mov
mov
jp
cmp
arpl
je
push
add
retf
scas
mov
mov
movs
in
bound
mov
mov
fwait
xlat
popa
aad
pop
std
adc
and
adc
inc
(bad)
pop
inc
aaa
dec
add
ret
cmp
aaa
mov
into
add
sub
jmp
movs
outs
jg
jne
stos
ins
gs
or
xchg
call
xchg
push
jl
push
into
lea
enter
or
jnp
add
int3
in
cmp
dec
clc
stc
loop
mov
clc
fdiv
ins
mov
out
in
stos
popa
sbb
xlat
rcr
fcmovnu
pop
movs
ret
sub
aam
fst
iret
int
xchg
fisttp
rcr
add
(bad)
loopne
jge
cld
sahf
xchg
mov
movs
(bad)
in
call
mov
test
pop
jg
adc
sbb
test
(bad)
outs
jnp
nop
lahf
pop
(bad)
rcr
fcomp
jmp
jnp
repnz
jno
and
push
sub
jns
dec
(bad)
clc
in
jecxz
xor
pop
xor
(bad)
sbb
xor
push
push
inc
adc
inc
jl
into
mov
inc
push
dec
jl
xor
jp
push
xor
push
push
dec
push
cmp
mov
xor
movs
pusha
lods
pop
imul
and
xor
xchg
pop
push
nop
mov
push
xor
test
adc
test
(bad)
dec
and
add
jne
cli
fnstenv
(bad)
jl
(bad)
jnp
cmps
mul
lock
jmp
out
mov
or
pop
and
sbb
cwde
(bad)
fadd
mov
jmp
ret
shl
(bad)
fnclex
ret
leave
cdq
mov
push
inc
idiv
out
mov
rep
mov
cmps
lock
push
hlt
fwait
rcr
or
mov
xchg
sbb
jnp
mov
cmp
neg
inc
or
js
sub
xor
out
push
loop
sub
loopne
add
sub
adc
sbb
sbb
add
and
inc
jle
or
or
inc
add
or
aas
cmp
sub
fnsave
test
fisubr
movs
push
or
scas
sub
(bad)
test
std
pop
sbb
push
sahf
inc
aaa
cdq
popa
push
mov
push
push
push
imul
test
add
mov
lods
stos
cmp
jae
hlt
ficomp
pop
lock
out
jmp
call
scas
popa
(bad)
out
fwait
call
pop
stos
sub
ror
int
hlt
inc
sbb
dec
inc
and
or
pop
mov
push
scas
test
xor
scas
or
loop
jecxz
sub
bound
rcr
rcl
sti
pushf
pop
stos
les
mov
test
shl
inc
xchg
arpl
daa
push
jno
mov
repz
out
jge
lods
sub
dec
repz
arpl
pop
ficomp
push
sti
dec
push
pop
push
and
adc
pop
jne
or
inc
lds
(bad)
lods
xchg
inc
inc
xor
cmp
and
push
dec
sub
pop
aaa
xchg
rcl
dec
xor
sub
loop
stos
pop
loope
sbb
sti
sub
xor
and
xchg
test
or
js
add
mov
leave
jb
cmps
test
mov
ret
out
cli
(bad)
(bad)
ins
cdq
cmc
loopne
in
jmp
mov
xchg
iret
fistp
int3
pop
aam
rol
not
inc
sar
pushf
xlat
mov
loopne
mov
inc
stos
cmp
nop
mov
(bad)
lock
movs
leave
mov
pop
es
scas
sbb
fstp
xchg
push
xchg
xchg
push
aam
cwde
scas
scas
(bad)
stc
xchg
sub
shl
xchg
jmp
(bad)
call
fxtract
outs
jp
mov
outs
sbb
ins
dec
fsub
pop
(bad)
sbb
add
mov
dec
push
pop
rcl
jne
mov
push
push
inc
adc
ds
cmp
ret
cmp
sub
adc
push
sub
jl
push
or
fcom
es
ret
dec
inc
gs
xchg
cmp
or
adc
arpl
(bad)
cli
stos
ja
cmp
sbb
sbb
(bad)
std
mov
stos
movs
in
mov
loop
popa
xchg
in
pop
psrlq
test
shr
(bad)
pop
add
retf
adc
pop
out
int
xor
jns
mov
cli
std
(bad)
mov
jo
mov
stos
and
cwde
mov
inc
xchg
pop
or
movs
jp
sbb
mov
in
mov
out
jg
test
fwait
in
stc
(bad)
xor
jns
sub
jp
cmp
jne
sub
ins
mov
jl
data16
pop
push
pop
push
mov
mov
pop
mov
nop
inc
pop
test
mov
cmp
lea
leave
outs
je
ins
ins
repnz
cs
pop
das
data16
mov
jb
pop
xchg
arpl
in
sbb
shl
pusha
adc
push
fwait
dec
jle
int
sbb
clc
push
xor
dec
add
and
clc
lock
add
or
ins
mov
in
lock
sub
mov
pop
in
sub
int3
fwait
enter
(bad)
or
int3
mov
ret
mov
std
mov
(bad)
aam
mov
dec
add
push
scas
rcl
push
aas
sub
xchg
fcomp
out
mov
shr
lea
aaa
jmp
push
clc
mov
add
and
repz
je
and
jno
outs
adc
pop
jbe
gs
popa
jae
loope
(bad)
mov
fisub
dec
push
data16
sub
pop
jle
jb
xor
(bad)
mov
jnp
inc
xor
mov
sub
and
mov
or
jmp
adc
sub
cwde
std
pop
in
push
sbb
out
push
sbb
push
cwde
or
lea
cmp
jne
add
jae
mov
stc
js
repz
jmp
gs
add
sbb
popa
sti
push
loop
outs
ret
fcom
in
xchg
pop
xchg
xchg
ficomp
jmp
or
mov
xchg
in
xchg
cli
adc
mov
inc
sti
xchg
xor
(bad)
mov
cmp
inc
movs
and
fidiv
lock
xchg
fwait
cdq
mov
pop
in
sbb
mov
xchg
lea
out
popf
test
or
push
inc
mov
xor
sbb
clc
push
mov
pop
and
in
xchg
jl
sbb
pop
imul
adc
mov
rol
mov
dec
hlt
ret
inc
int3
inc
into
inc
mov
cmp
ret
or
or
cs
and
sub
xchg
pop
and
sub
sbb
adc
or
or
push
or
fiadd
xchg
repnz
add
cs
push
out
iret
cmps
xor
out
lahf
call
shl
pop
fsubr
and
jecxz
fadd
push
ret
pop
mov
adc
xchg
pop
adc
stos
js
(bad)
out
mov
arpl
sbb
mov
cmp
(bad)
(bad)
mov
test
popf
retf
(bad)
xchg
aad
sbb
fs
push
mov
call
or
movs
test
test
sub
jo
mov
jmp
jae
xchg
je
pop
push
inc
fsub
add
xchg
fst
packuswb
mov
sub
jne
inc
ror
sbb
sar
(bad)
jne
xor
fcomip
or
and
lods
cmp
jne
test
pop
shr
out
movs
cmp
stc
or
(bad)
aas
inc
in
daa
xor
call
shl
addr16
dec
stos
loopne
(bad)
(bad)
adc
jmp
xor
mov
(bad)
mov
aas
(bad)
iret
ficomp
xchg
loopne
add
mov
xchg
stc
inc
fiadd
les
push
ins
aaa
test
xchg
std
inc
test
mov
dec
fnstcw
aam
push
xchg
nop
or
mov
repnz
jbe
jl
int
pop
sti
xor
in
leave
cwde
pop
add
sub
jno
jle
jl
pop
xchg
arpl
xchg
and
pop
sub
and
test
push
jnp
mov
sub
cmp
mov
mov
jl
retf
aaa
outs
xor
inc
loop
and
je
xor
scas
mov
inc
icebp
inc
test
add
cmp
add
ja
sub
fdivr
jbe
repnz
pop
cli
imul
fldln2
pmulhw
push
aad
test
nop
pmaxub
ret
inc
rcr
mov
xor
xchg
adc
xor
call
loopne
sbb
mov
adc
push
call
pushf
xchg
pop
sbb
lods
add
push
retf
test
sbb
xor
add
add
js
push
jno
jb
jo
sub
imul
and
fwait
pushf
jmp
jecxz
push
pop
pop
ror
push
push
push
inc
ficom
push
pop
inc
cli
dec
add
xchg
scas
dec
repnz
inc
jns
fidivr
std
fnstsw
jmp
cmp
sar
xor
into
cmp
cmp
lods
bound
push
cmp
xchg
pop
lahf
jno
push
push
adc
cdq
dec
push
xor
or
or
xchg
sbb
push
cmc
stc
ins
aaa
(bad)
mov
js
mov
out
lahf
lods
gs
sbb
out
fucom
mov
and
and
aam
pushf
daa
in
nop
jmp
shr
hlt
or
retf
(bad)
mov
mov
mov
sub
jecxz
and
and
cmps
add
out
test
ror
jbe
cmp
loopne
sbb
lods
popw
in
mov
mov
retf
or
mov
pop
xor
lock
std
mov
push
push
mov
jle
and
pusha
ins
dec
push
movs
in
jmp
ins
aam
sbb
fnstcw
xlat
ja
adc
jae
pop
cmps
loope
leave
push
(bad)
xchg
stos
inc
ins
dec
mov
add
fdiv
xlat
aas
and
push
sub
mov
outs
cmp
xchg
or
inc
add
jmp
call
dec
push
and
cmp
(bad)
hlt
js
ret
mov
sar
mov
(bad)
push
aam
pop
fstp
(bad)
ficomp
iret
cvtps2pi
or
test
stos
(bad)
mov
mov
sti
mov
mov
mov
scas
test
idiv
mov
sub
nop
sbb
and
test
add
sar
or
pop
adc
ja
cmc
stc
mov
test
sti
nop
cwde
mov
movs
jnp
in
jmp
nop
(bad)
pop
pop
call
inc
(bad)
cmps
push
inc
cdq
and
inc
push
sub
dec
movs
dec
ud2
mov
xor
xchg
push
xor
cmp
and
and
sub
jmp
jg
pusha
adc
adc
push
ror
jle
pop
mov
pop
(bad)
xor
div
(bad)
or
push
adc
out
pop
repnz
out
fisubr
lock
cli
sbb
sub
arpl
inc
(bad)
fild
add
cmp
ficom
(bad)
movs
xor
xchg
and
test
nop
dec
mov
ret
retf
mov
mov
dec
pop
xchg
cmp
mov
sub
shl
mov
cmp
jae
sbb
outs
jo
dec
stc
out
(bad)
mov
mov
add
jae
jge
es
(bad)
cmps
xor
sub
outs
sbb
out
push
jl
addr16
pop
jmp
push
push
push
push
and
add
push
push
int
dec
aas
dec
imul
sar
jnp
mov
sub
imul
sar
es
mov
mov
dec
(bad)
pop
adc
or
xchg
(bad)
(bad)
jge
out
add
pop
push
mov
jp
iret
xor
mov
dec
call
mov
sbb
jg
xchg
frndint
sbb
xchg
shr
mov
dec
scas
call
lock
mov
mov
loop
aaa
sbb
mov
jmp
es
scas
and
fistp
push
xchg
push
sbb
movs
lock
pop
xchg
mov
or
sti
dec
jp
imul
jno
or
jmp
jmp
cpuid
mov
movs
pop
pop
or
popa
fcom
ficom
retf
ror
mov
rcl
inc
in
aam
retf
daa
into
mov
xor
enter
xor
sub
rol
sbb
test
pop
mov
loop
adc
jno
push
retf
out
stos
sub
iret
mov
int3
and
movs
lock
jb
mov
dec
loopne
loope
popa
mov
rcl
call
jecxz
mov
pop
cmps
rcr
mov
mov
(bad)
stos
fild
(bad)
xor
popf
inc
cmp
pop
mov
jnp
out
mov
ret
push
xchg
push
fbld
shl
jne
mul
pusha
call
jp
in
test
retf
mov
dec
inc
cdq
shl
and
aas
jno
and
test
jae
and
pop
and
hlt
xor
ds
dec
in
js
popf
and
adc
fcmovu
ss
xlat
lods
xchg
xchg
ret
sub
sbb
lock
(bad)
aas
loope
mov
in
js
cmps
loopne
shl
cs
mov
test
pop
push
mov
mov
ss
aaa
adc
ret
pop
inc
add
rcl
mov
idiv
in
jle
fdivr
neg
stos
mov
test
mov
mov
out
fisubr
mov
in
mov
cs
fistp
leave
mov
dec
lds
dec
(bad)
mov
ss
sub
xor
add
ins
lahf
push
push
call
lods
sub
mov
fwait
mov
mov
mov
gs
mov
lods
add
or
or
jle
cmp
call
imul
imul
call
aad
movs
ficomp
popfw
sti
push
and
lds
push
mov
cmp
test
xor
inc
cmp
sbb
pusha
(bad)
(bad)
(bad)
(bad)
sbb
mov
test
call
repz
lds
ss
repz
sbb
lea
call
cmp
jbe
clc
mov
jnp
mov
mov
pxor
test
pusha
dec
sub
mov
loop
in
rcl
(bad)
aad
aad
fcomip
shl
fistp
mov
(bad)
fstp
mov
mov
imul
mov
hlt
loopne
jne
cmp
sub
aam
pop
(bad)
(bad)
lock
sbb
xchg
int
sbb
imul
into
push
jmp
mul
push
into
jp
mov
js
add
loop
call
push
jl
adc
xchg
pop
cs
pop
mov
push
pop
imul
int3
pop
dec
sti
sbb
stos
sar
pusha
mov
mov
xlat
jbe
mov
lahf
cs
ds
cs
div
inc
add
sahf
jns
sbb
xchg
push
int
add
pushf
xchg
sub
push
call
sub
test
hlt
xchg
jl
das
jnp
adc
aad
xor
or
sbb
movs
adc
fld
icebp
push
xlat
rcl
retf
test
xor
fincstp
(bad)
mov
dec
adc
jmp
mov
std
pop
enter
aam
mov
ins
mov
hlt
mov
(bad)
jl
aam
mov
lods
shl
jle
sahf
retf
ins
pushf
retf
pusha
test
cmp
xchg
inc
xor
scas
jecxz
adc
cdq
ret
jmp
add
shl
mov
and
push
out
xchg
fsubr
pop
mov
cmps
xor
mov
popa
int3
cmp
imul
fwait
cs
mov
call
push
dec
jae
test
jecxz
sbb
sti
or
inc
mov
inc
adc
dec
sysret
add
into
dec
or
mov
rcr
int3
cli
inc
jno
sbb
lds
jg
dec
out
in
mov
ins
mov
fnstenv
pushf
fcmovnu
xchg
mov
jp
pop
push
test
out
adc
addr16
inc
setge
or
sbb
dec
mov
aam
fmul
jnp
mov
cwde
mov
mov
out
cs
mov
inc
movs
loope
das
mov
xchg
xchg
sub
call
mov
sahf
mov
or
mov
add
test
cli
bound
jle
loop
or
outs
cmps
gs
add
and
and
ret
push
mov
ficom
dec
ret
dec
enter
inc
retf
inc
ret
inc
scas
xor
mov
mov
mov
sub
cmps
and
int3
xor
sbb
xchg
sbb
add
adc
test
xchg
lea
(bad)
std
jg
loopne
clc
jbe
jbe
sbb
jl
jle
outs
in
int
jmp
or
imul
jecxz
(bad)
push
ficom
fcmovbe
lock
(bad)
push
rcl
add
aas
(bad)
retf
mov
mov
mov
mov
dec
cmp
pop
lods
xchg
daa
push
push
cmp
and
test
xor
mov
cmps
mov
cmps
mov
cmp
mov
pushf
mov
cmps
xchg
mov
outs
cmp
xor
xor
fs
dec
popa
shl
xor
xor
test
pop
push
jo
or
cmp
dec
dec
dec
push
pop
inc
inc
inc
and
pop
inc
inc
fidiv
mov
inc
(bad)
cmp
push
mov
and
movs
popa
(bad)
jmp
call
loop
loope
pop
int3
xchg
pop
jecxz
cdq
sbb
ss
into
clc
push
sub
out
(bad)
loopne
mov
push
add
cmovs
std
mov
fbstp
shl
sar
movs
or
pop
aam
mov
out
sbb
pop
sbb
fcmovu
(bad)
xlat
and
mov
test
pop
int3
push
les
ds
jns
dec
inc
sbb
mov
stos
adc
scas
xchg
clc
pop
(bad)
lods
and
pop
mov
test
adc
cs
jae
shl
xchg
xchg
xchg
pop
add
cwde
mov
test
(bad)
aas
inc
mov
je
lds
in
scas
inc
add
fs
jo
popf
xor
push
push
pop
xor
xor
add
pop
cmp
es
inc
and
sbb
inc
push
sub
push
cmp
outs
push
cmp
pop
aaa
das
pop
xor
pop
xor
jnp
sub
dec
daa
add
je
push
ss
xor
xor
pop
cmp
adc
js
cmp
or
push
outs
add
imul
push
lds
hlt
mov
repz
out
test
test
mov
in
mov
scas
mov
fisttp
fld
mov
xchg
movs
retf
leave
cdq
(bad)
mov
ret
jle
mov
xor
(bad)
fnsave
inc
mov
int3
aam
out
mov
loop
mov
test
mov
stos
push
scas
add
cmps
stc
mov
mov
cmp
hlt
(bad)
pop
mov
popa
nop
sbb
push
arpl
and
pop
addps
lahf
dec
fcomp
push
lods
sbb
cmp
test
ja
inc
js
iret
inc
aaa
mov
aas
cmp
div
lds
mov
in
push
ins
cmps
xchg
cli
imul
and
test
hlt
sub
xchg
sbb
in
(bad)
mov
xor
dec
mov
test
ror
jne
add
jle
idiv
mov
cmc
add
addr16
sbb
jmp
scas
adc
gs
mov
inc
leave
push
shl
pop
ins
and
popf
adc
lea
(bad)
ja
and
sti
mov
movs
mov
mov
push
retf
mov
mov
(bad)
inc
gs
shl
outs
jb
xchg
mov
sahf
adc
mov
xchg
repnz
fcomp
ja
mov
movs
test
push
jb
imul
push
jp
cdq
es
mov
and
nop
rcl
sahf
and
dec
and
mov
add
inc
ret
shr
fdivr
mov
lds
sub
sbb
(bad)
aas
movs
adc
sbb
xchg
fld
sbb
test
adc
jmp
push
mov
sbb
xchg
or
mov
call
jo
sbb
fs
or
mov
xchg
aam
pop
repnz
lock
loope
loopne
(bad)
xchg
(bad)
(bad)
cdq
mov
xor
and
sub
mov
mov
ret
mov
cmp
cmp
mov
stos
enter
mov
cwde
call
fstp
retf
icebp
or
mov
xchg
rol
add
dec
ss
imul
adc
and
adc
aam
and
ss
adc
in
pop
lods
pop
ds
xchg
outs
jbe
retf
movs
mov
sub
mov
cmp
addr16
dec
add
push
lds
rcl
movs
pop
fld
mov
jecxz
das
call
xor
push
xchg
in
push
inc
push
ror
sbb
(bad)
cmp
cmps
pop
push
pop
mov
jle
fst
pushf
xor
in
repnz
loopne
stc
lods
shr
das
arpl
outs
push
(bad)
mov
adc
sti
(bad)
fdivr
pusha
pop
fsubr
xor
retf
pop
mov
lds
cs
sar
mov
and
or
lods
cmps
xor
icebp
cmp
push
popf
iret
or
xchg
scas
add
test
mov
adc
sbb
(bad)
in
dec
jecxz
stos
loopne
imul
inc
jo
ins
cmc
std
push
mov
ficomp
ds
push
cld
jno
push
pop
(bad)
push
imul
arpl
inc
pop
rol
fiadd
aam
stos
cmp
mov
sbb
das
sbb
sub
mov
adc
pop
pusha
mov
sub
sbb
adc
cwde
getsec
xchg
or
sahf
add
inc
push
adc
fldlg2
sub
repnz
repz
sub
scas
jno
inc
jo
mov
ja
xchg
inc
(bad)
xlat
jg
inc
rcr
int
push
enter
les
in
es
mov
cs
and
lods
ins
cmp
icebp
xor
idiv
mov
add
nop
setb
push
xchg
out
push
cmp
inc
(bad)
or
je
jb
idiv
mov
jg
push
ins
mov
test
sbb
xlat
adc
xchg
daa
adc
pop
out
jg
dec
dec
dec
dec
dec
add
dec
bswap
adc
cmp
cmp
xor
xor
and
stc
lods
sub
sti
clc
loope
jecxz
out
sbb
imul
lods
cdq
xchg
adc
or
test
dec
add
dec
cli
cmp
lock
jno
add
cmc
aaa
cmps
jns
mov
jecxz
xor
repz
mov
mov
add
adc
add
jo
int3
ror
retf
(bad)
fadd
mov
jmp
add
out
repnz
mov
imul
stos
mov
mov
stc
rcr
adc
pop
adc
or
xchg
xchg
xchg
jp
nop
(bad)
(bad)
(bad)
shl
leave
test
add
sar
outs
addr16
test
jmp
clc
add
andnps
inc
mov
dec
dec
sbb
push
(bad)
mov
imul
dec
clc
adc
lods
stos
inc
inc
inc
dec
fidivr
cmp
mov
cmp
mov
pop
xor
add
(bad)
cld
lods
and
das
ds
mov
test
sbb
icebp
clc
xchg
movs
es
sub
pop
data16
cmp
jbe
jmp
adc
iret
scas
sbb
mov
out
push
jns
addr16
or
addr16
sbb
fdiv
adc
cmp
pop
sbb
ins
and
aad
(bad)
cmp
mov
cmp
inc
cmp
aaa
mov
repz
out
icebp
cmc
lock
cmc
sub
stc
stos
sub
mov
test
into
sbb
adc
jbe
mov
test
cmp
push
cmp
cmp
aaa
jne
inc
xor
sub
push
sub
sub
and
bound
and
sbb
or
pop
repz
push
or
push
das
or
out
or
add
xor
inc
mov
outs
lds
data16
lock
jae
scas
mov
pop
jne
(bad)
xchg
(bad)
cdq
cmp
xor
cmp
fwait
pushf
or
pop
mov
sbb
xchg
sub
stos
sub
lods
inc
jge
addr16
fisub
mov
fs
jb
popf
lock
dec
fcomi
sbb
inc
adc
test
inc
pop
dec
sti
ficomp
xchg
outs
dec
sub
jmp
test
mov
cmp
es
mov
popf
std
outs
sub
pusha
mov
sbb
xchg
pop
adc
xchg
xchg
outs
(bad)
ror
dec
xchg
mov
jl
dec
idiv
cli
add
jp
mov
jle
fidivr
and
es
imul
aad
inc
cmps
pop
fcom
stos
sbb
push
cmovbe
mov
inc
std
mov
sbb
jg
loopne
mov
xlat
movs
jg
or
adc
push
inc
and
enter
jge
adc
jae
jno
sbb
jae
dec
jp
js
add
add
cdq
push
fwait
or
js
jnp
stc
hlt
cli
cld
stc
pop
cmc
out
cld
lock
sub
int
fs
aam
outs
xor
and
push
adc
(bad)
push
add
shr
retf
pop
xchg
mov
xchg
inc
jmp
not
scas
ins
lods
jmp
test
pop
loop
test
mov
jl
pop
call
mov
ins
enter
cwde
mov
lea
inc
and
pusha
sbb
jns
cmps
pop
bound
ins
jnp
repz
imul
jnp
out
jmp
cmps
push
pop
push
ins
out
arpl
fs
push
push
aas
inc
push
dec
pop
push
pop
adc
aad
dec
inc
pop
inc
inc
dec
push
dec
pop
dec
in
dec
sbb
and
xor
cmp
xor
and
sub
xor
sub
sub
adc
inc
cwde
sbb
sbb
sbb
ss
xchg
push
xchg
add
push
mov
in
add
sar
mov
lock
das
jmp
in
xor
loope
and
sbb
rcl
or
(bad)
adc
sbb
les
retf
push
into
or
or
xor
(bad)
nop
xchg
jbe
and
fwait
jbe
js
jp
pusha
jge
jg
stos
mov
scas
push
ins
cmps
outs
cdq
pop
fwait
test
pop
push
pop
xchg
push
xchg
mov
jae
mov
xchg
push
out
adc
sbb
cdq
jo
jbe
jge
fldenv
daa
pop
mov
fs
outs
shr
cmp
inc
xor
stos
xor
push
and
dec
and
sub
sub
sbb
mov
into
out
mov
icebp
enter
outs
pop
or
sub
nop
out
in
sub
loope
xchg
pop
sub
mov
pop
aaa
jnp
loope
(bad)
int3
push
sub
enter
xor
cld
call
xchg
lock
jns
cld
pushf
cli
into
jmp
cmc
mov
(bad)
jmp
jg
pop
ret
mov
stos
sub
ret
scas
inc
mov
dec
enter
lods
lds
sbb
mov
or
aaa
mov
aam
cmps
adc
test
call
arpl
cwde
fistp
lea
xchg
xchg
outs
retf
icebp
addr16
add
nop
add
cld
(bad)
(bad)
call
div
popf
jo
mov
iret
add
and
repnz
jge
rcr
push
sub
push
stos
inc
rcl
inc
aaa
xchg
ret
inc
rol
ins
ds
stc
sbb
sub
cmp
and
and
sub
sub
aam
and
xor
pop
ret
out
adc
cwde
shl
or
test
sbb
add
out
stc
adc
push
std
cmc
push
inc
mov
repnz
not
adc
cmp
push
les
pop
cwde
rcr
mov
out
sbb
inc
and
in
and
fcmovu
mov
in
dec
retf
test
stos
jb
nop
stos
outs
mov
in
dec
popf
loopne
jnp
dec
dec
pop
addr16
push
scas
jecxz
jmp
mov
jne
push
dec
xchg
jbe
idiv
test
out
dec
leave
jae
ret
mov
push
call
in
sahf
out
and
xchg
sub
jmp
je
cmp
les
cdq
call
jg
push
es
nop
cmp
cmp
cmp
sub
imul
imul
pop
ret
or
in
push
addr16
or
cli
call
cmc
bound
jne
sub
jp
or
sub
daa
jo
sbb
push
mov
loop
loope
test
and
loop
fwait
jnp
stos
fdivr
stos
mov
fdiv
sub
mov
fidiv
ret
xor
xor
cmp
xchg
mov
cmps
xor
scas
mov
sub
daa
ret
mov
fsubr
adc
mov
ins
xchg
sbb
or
inc
mov
add
push
mov
lds
pop
jle
inc
jnp
mov
sar
addr16
scas
adc
imul
push
pop
adc
and
push
dec
dec
pop
mov
inc
mov
repz
inc
leave
les
ins
cmp
push
sub
aaa
mov
je
sub
test
jecxz
mov
push
sbb
adc
xchg
jl
adc
xchg
push
in
dec
or
inc
and
mov
std
std
aad
mov
(bad)
mov
icebp
cmp
adc
in
mov
ret
(bad)
push
adc
dec
(bad)
fcmovnbe
rcl
xor
inc
fwait
(bad)
sbb
hlt
mov
(bad)
aas
repnz
push
ss
mov
pop
mov
enter
ins
and
cmps
sbb
imul
sbb
(bad)
push
nop
pop
adc
in
or
adc
xor
icebp
jmp
cwde
js
je
div
aas
leave
stc
cmp
pop
adc
in
cs
pop
jle
pop
push
mov
sub
inc
enter
pusha
ja
repz
jne
adc
sbb
xor
mov
xor
sub
movs
xor
and
adc
fcomp
xor
or
test
add
rcr
mov
cmp
mov
sbb
jo
adc
jno
dec
loop
stc
popa
mov
hlt
call
repnz
cmps
sti
ret
adc
(bad)
aam
pop
fwait
das
iret
sbb
retf
(bad)
and
dec
cli
adc
jmp
xor
ds
pop
push
push
daa
stos
out
and
inc
sahf
mov
fst
call
scas
xchg
and
fstp
xchg
and
xor
add
cmc
ds
jns
or
cmc
jo
imul
xchg
sbb
gs
out
bound
movs
sahf
sbb
sub
dec
ins
int3
inc
xor
cmp
cmp
jle
shl
int
ss
pop
and
call
xor
xchg
sbb
inc
fisubr
adc
into
je
pop
or
sub
daa
sti
inc
add
jne
cld
or
mov
jecxz
jb
pop
out
imul
and
ins
push
mov
pop
rol
aad
pop
adc
inc
add
inc
or
dec
dec
shl
dec
add
cli
push
inc
icebp
adc
std
xor
xchg
ds
adc
sub
mov
inc
fucomi
mov
daa
mov
ss
or
sbb
enter
ret
inc
mov
jg
test
pop
mov
scas
add
in
adc
adc
je
jp
ins
pop
fstp
lods
rcr
test
loopne
push
daa
rcl
ja
cmp
mov
test
mov
aas
scas
sbb
addr16
mov
test
rcl
push
aam
sub
daa
pop
sbb
rcr
leave
pop
inc
cmp
xchg
inc
push
adc
out
pop
dec
or
(bad)
imul
dec
dec
inc
add
cli
mov
ds
sbb
enter
push
idiv
loop
pop
retf
mov
call
ds
fcomp
push
sub
rep
test
inc
mov
into
inc
sbb
push
inc
pop
xchg
xchg
pop
inc
mov
and
mov
xor
ficom
push
fs
mov
sahf
cmp
int
push
xchg
cwde
xchg
sbb
or
call
or
xor
je
mov
jmp
cdq
je
outs
sbb
sub
les
jno
je
shr
inc
pop
js
push
test
inc
sbb
sbb
lods
dec
mov
add
les
mov
mov
sub
xlat
push
xor
xor
cli
sbb
and
call
ins
push
fwait
div
add
add
adc
out
jne
clc
jnp
jge
mov
pop
or
xor
jl
in
fs
clc
fs
fs
xchg
fmul
outs
imul
fadd
imul
iret
push
fidivr
xor
popf
mov
pop
add
xchg
inc
jo
and
push
cmps
scas
sub
sub
pop
mov
sbb
push
xchg
shr
test
dec
add
mov
xor
or
push
or
adc
sbb
sbb
dec
inc
cmp
push
xchg
add
mov
mov
adc
into
inc
fs
inc
mov
push
inc
ja
or
lds
jge
cmp
mov
shr
sub
lods
sub
adc
push
push
out
adc
jmp
(bad)
jo
mov
sub
jns
xchg
cmp
jo
mov
xor
pop
push
push
icebp
adc
(bad)
aad
ins
xchg
push
in
push
dec
fist
loope
xlat
pop
pop
xor
add
pop
or
fmul
retf
or
icebp
xchg
cmp
mov
add
mov
cmp
scas
mov
xor
iret
push
mov
push
(bad)
out
mov
or
xchg
or
sub
xchg
cld
ss
jl
cmp
mov
cmp
dec
cli
jb
(bad)
xor
sti
push
or
ins
push
pushf
stos
imul
ss
aam
mov
pop
(bad)
mov
pop
sbb
push
mov
inc
addr16
xchg
mov
(bad)
cmp
sar
cmp
repz
sub
adc
pop
xchg
lods
or
adc
mov
shl
or
or
gs
hlt
pop
push
call
cld
or
cmp
(bad)
cld
js
dec
(bad)
fs
jecxz
or
push
stos
in
call
push
fnsave
push
fbld
push
xor
mov
fcomp
inc
dec
(bad)
leave
mov
xchg
aam
xor
scas
mov
js
cmps
push
mov
pop
mov
cwde
mov
lods
nop
imul
sahf
push
dec
adc
mov
mov
mov
mov
xchg
mov
clc
loope
push
xor
cld
aas
imul
push
push
cmps
dec
int
push
test
outs
outs
(bad)
shl
inc
je
inc
or
mov
pushf
clc
jne
push
ins
add
or
inc
movs
lds
jne
dec
out
dec
stos
jmp
cmps
dec
mov
aaa
ret
mov
and
and
inc
sub
cmps
inc
imul
jo
mov
add
fwait
je
push
adc
pop
add
or
xor
in
icebp
jecxz
xor
div
jle
jnp
(bad)
sub
js
sti
popa
xor
(bad)
out
scas
ror
loopne
das
aaa
or
push
div
out
retf
push
sub
rcl
adc
ffreep
sbb
fwait
push
add
dec
xor
inc
cld
mov
cmp
cmp
mov
lods
mov
and
loopne
and
sbb
mov
add
lods
push
mov
add
push
or
lock
sti
js
adc
icebp
jb
stc
in
out
ins
jnp
loopne
das
in
test
jmp
aad
ror
fistp
pop
(bad)
pop
rcl
mov
ins
leave
dec
in
int3
sbb
inc
jmp
vmaxsd
mov
mov
cmps
cmps
outs
inc
test
in
scas
lods
push
movs
and
jle
xlat
fsubrp
sub
push
pop
pop
mov
xchg
mov
mov
out
test
ret
add
das
xor
jno
in
lods
mov
sub
repnz
ins
sub
scas
xchg
fst
ret
retf
pop
mov
rcr
push
dec
(bad)
leave
push
dec
mov
add
xchg
mov
aas
pop
mov
mov
mov
js
jmp
cmps
sub
mov
int
mov
mov
ret
nop
xchg
aad
pop
xchg
shl
add
jl
test
(bad)
sub
idiv
mov
xchg
(bad)
dec
mov
mov
mov
jbe
pop
mov
push
pop
push
pop
push
pop
dec
or
mov
mov
inc
lds
dec
cmp
cmp
cmp
stos
xor
cmp
adc
sub
jbe
mov
xor
fsub
adc
adc
adc
pop
mov
in
ins
test
inc
pop
sub
pop
pop
cmp
cli
call
jge
and
mov
popf
cwde
cmp
out
jecxz
push
sub
xrstor
push
ficomp
rcr
shr
mov
pop
leave
dec
add
add
push
into
or
or
xor
(bad)
mov
je
jbe
js
jp
mov
mov
test
inc
pop
dec
daa
pop
pop
test
sahf
lahf
jle
call
mov
mov
mov
and
xchg
sub
sub
jl
push
js
xchg
jne
cmp
aad
je
(bad)
imul
bound
repnz
dec
sbb
xor
push
inc
outs
cld
push
push
inc
in
inc
retf
sti
dec
pop
dec
add
inc
push
mov
mov
sub
xor
sub
sub
(bad)
outs
dec
mov
pop
ficom
adc
inc
rcl
add
or
push
rol
push
mov
inc
call
loope
cmc
hlt
mov
(bad)
in
imul
push
pop
and
or
fld
mov
xor
inc
leave
(bad)
dec
or
int3
mov
adc
push
inc
inc
cmps
dec
cmp
arpl
lea
push
push
push
cmps
test
pop
scas
adc
lahf
pushf
fwait
call
cs
nop
nop
xchg
jge
pop
(bad)
jbe
add
mov
inc
or
(bad)
hlt
jp
cmp
icebp
dec
in
in
sahf
popa
push
rcr
in
push
dec
jmp
shr
popf
push
fcom
fstp
les
xor
int3
cli
clc
inc
dec
inc
inc
push
inc
loope
aas
mov
int
enter
mov
and
cmp
cmps
shr
cmps
addr16
and
xchg
sbb
fstp
push
fwait
pushf
adc
lea
xor
jbe
mov
mov
and
ja
dec
cli
out
dec
inc
not
jno
retf
arpl
out
cmps
jmp
adc
pusha
pop
loop
mov
fcmovnbe
push
adc
and
and
dec
ret
jle
repnz
(bad)
lock
mov
cld
inc
mov
mov
xor
int3
hlt
and
mov
rcl
fadd
sbb
sub
stos
sub
xchg
(bad)
xchg
dec
mov
pop
xchg
ins
idiv
enter
test
dec
ret
imul
das
cmps
cmp
aam
pop
push
in
cmps
sbb
leave
loope
push
fcomp
mov
mov
cmp
mov
ret
movs
jns
leave
mov
xor
adc
or
jmp
mov
imul
lods
xchg
dec
(bad)
pushf
add
cdq
pop
repnz
and
std
lea
add
jnp
std
hlt
inc
je
jg
call
stos
loop
fwait
xchg
in
ins
(bad)
pusha
dec
sahf
jp
fisttp
fwait
jmp
pop
mov
add
(bad)
dec
add
dec
inc
or
les
repz
cmp
mov
lods
aad
sbb
mov
sbb
mov
sbb
mov
xchg
push
adc
adc
dec
pop
jno
xor
mov
cld
test
mov
mov
cli
and
ds
pop
dec
xor
pop
daa
jns
and
sub
out
ins
push
data16
cmps
es
fisub
int
or
pop
cmp
aaa
inc
in
fs
cmp
mov
movs
pop
xor
push
pop
add
das
aas
push
arpl
adc
and
adc
outs
add
sub
jne
inc
add
jp
mov
xchg
jmp
add
ror
out
rep
gs
in
mov
sub
push
stos
pop
sub
rcr
test
int
(bad)
loopne
out
xlat
cmps
or
cwde
dec
call
stos
call
pushf
sub
mov
pop
out
dec
cwde
repnz
sbb
(bad)
outs
pop
iret
mov
or
ja
jge
cli
xchg
dec
cli
add
jno
inc
repnz
adc
pop
jmp
sbb
jae
pop
or
rcl
add
test
enter
ins
int
aam
leave
pop
iret
lahf
js
jbe
sar
aaa
mov
test
and
and
push
sub
bound
push
es
push
adc
push
(bad)
xor
adc
imul
pop
sbb
push
jge
and
add
sti
das
fucomip
js
sbb
sbb
jmp
lods
in
outs
pusha
rcr
outs
call
daa
call
ror
(bad)
lods
iret
retf
inc
rol
sbb
ret
add
not
cmp
inc
ss
mov
out
(bad)
std
and
out
cld
lods
cli
dec
or
(bad)
pop
call
ins
in
xchg
nop
(bad)
in
mov
ret
jae
push
hlt
test
jns
nop
push
jne
ja
mov
ins
dec
in
imul
xor
fs
sar
test
fst
fistp
repz
popa
rol
or
(bad)
xor
cmp
enter
mov
(bad)
push
test
pop
popa
in
popa
stos
xor
fstp
push
or
cwde
sbb
adc
mov
add
jg
fdiv
inc
jo
dec
ss
lods
sbb
jmp
adc
ins
add
std
push
adc
xor
xchg
sub
add
in
inc
adc
mov
mov
adc
and
pop
das
mov
movs
lahf
popa
shl
out
cwde
call
bound
inc
movs
fstp
mov
mov
mov
xchg
test
cmp
cmc
cmp
retf
jo
dec
clc
or
push
sub
loope
cmps
(bad)
in
inc
imul
ficom
inc
lods
fldcw
ror
dec
push
dec
dec
jp
pop
push
push
cmp
mov
xor
cs
in
xor
and
test
mov
sbb
adc
push
lahf
add
rcpps
add
popa
cmp
ds
or
adc
ret
sbb
xchg
(bad)
jmp
in
push
jmp
loope
frstor
fstp
mov
aam
xlat
pop
gs
int3
int
cmp
leave
into
bound
loopne
xor
add
xchg
dec
adc
es
add
popf
push
fsub
push
xchg
jno
xchg
push
dec
jbe
bswap
dec
mov
or
lea
add
pushf
mov
jg
cmp
outs
ss
jmp
cdq
push
imul
jp
imul
push
sub
dec
jo
je
mov
pop
aas
jle
mov
pop
mov
jge
(bad)
imul
fadd
sub
sti
sbb
pop
jo
pop
and
xchg
adc
xchg
rcl
xlat
in
adc
or
or
sub
add
mov
cli
jo
jbe
mov
jae
sbb
outs
and
fs
sub
(bad)
adc
rcl
pop
das
aam
push
in
mov
push
inc
ror
fild
or
loope
jae
push
ret
dec
dec
les
pop
stos
sub
dec
mov
mov
jne
xchg
adc
add
sub
mov
dec
sub
jp
jl
dec
pusha
xchg
jae
xchg
je
js
pushf
sbb
inc
jmp
inc
pusha
test
shl
movs
bound
xor
test
push
rol
addr16
mov
jo
cmp
adc
jbe
cmps
mov
js
push
jecxz
loopne
or
adc
stos
pextrw
or
push
push
(bad)
imul
inc
stc
loopne
xor
clc
clc
jae
xchg
repnz
fsub
fidivr
rcr
push
fild
cwde
iret
dec
hlt
ins
.byte
.byte
stos
