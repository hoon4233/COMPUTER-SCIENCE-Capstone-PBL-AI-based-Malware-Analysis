mov
or
add
add
jo
or
pusha
inc
or
add
add
in
or
test
rol
add
inc
or
out
or
cli
inc
or
push
inc
or
push
inc
or
cs
or
ds
or
push
inc
or
fs
or
jbe
or
mov
add
inc
or
mov
inc
or
fadd
add
inc
or
add
add
inc
or
sbb
or
xor
or
dec
inc
or
pop
inc
or
push
or
jbe
or
mov
add
or
mov
fiadd
add
inc
or
or
add
or
ds
or
pop
inc
or
outs
inc
or
xchg
add
inc
or
rol
fadd
add
inc
or
cld
inc
or
or
sbb
es
or
xor
or
inc
inc
or
dec
inc
or
pop
inc
or
push
inc
or
mov
cwde
inc
or
mov
or
rol
inc
or
(bad)
inc
or
loop
or
repnz
or
add
add
or
cmp
add
or
pusha
inc
or
jb
or
add
xchg
inc
or
mov
inc
or
rol
add
add
add
add
add
add
add
add
push
sbb
xor
leave
add
movs
test
adc
add
outs
ret
test
push
adc
shr
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
mov
shl
cmp
jne
into
scas
xchg
xchg
je
jns
xchg
jge
mov
xchg
je
jbe
jbe
mov
(bad)
xchg
dec
push
leave
mov
mov
adc
in
fisubr
retf
bound
movs
mov
push
fldenv
push
fldenv
push
fldenv
push
fldenv
push
fldenv
push
fldenv
push
fldenv
push
fldenv
push
fldenv
push
fldenv
push
fldenv
in
fisubr
adc
in
fisubr
inc
adc
xchg
out
fild
or
shr
fisubr
adc
in
fdiv
or
rol
fisubr
lea
test
mov
test
sub
call
out
fisubr
adc
in
fisubr
adc
in
fisubr
jae
test
xchg
add
test
sub
fisubr
and
fstp
outs
sub
fisubr
adc
in
fisubr
mov
fisubr
xor
test
sub
fisubr
adc
in
fisubr
sbb
mov
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
xchg
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
ja
cmp
test
sub
sbb
sub
fisubr
adc
in
fimul
jl
fisubr
dec
adc
sub
test
sub
fisubr
adc
in
fisubr
jno
fisubr
inc
adc
ror
adc
shl
adc
shr
fisubr
adc
in
fisubr
push
jne
ja
in
fisubr
inc
adc
sar
adc
rcl
adc
shr
fisubr
adc
in
fisubr
jae
fisubr
arpl
shr
(bad)
gs
rcl
outs
sub
fisubr
adc
in
fidiv
shr
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
xchg
mov
jbe
repnz
push
adc
cmps
push
jl
add
add
push
add
outs
out
or
shr
fiadd
adc
jbe
in
jmp
jae
xchg
adc
push
adc
inc
sti
dec
mov
push
mov
xchg
sti
jl
push
cs
push
test
das
fisubr
or
sub
jns
hlt
push
mov
lods
sub
aam
stos
push
jnp
or
sub
jns
lahf
call
push
lods
es
aam
retf
popf
repnz
push
adc
adc
pop
es
in
movs
xor
lock
mov
cs
mov
fldcw
in
fisubr
jmp
stos
shr
push
lods
xor
pop
mov
adc
test
xor
and
fwait
push
call
bound
inc
adc
fnstenv
jbe
js
jae
inc
or
or
cdq
inc
outs
sub
stos
outs
sub
repnz
adc
repnz
imul
(bad)
imul
(bad)
ja
pop
sbb
push
cmc
mov
sbb
iret
jb
imul
push
adc
push
jae
ror
outs
sub
mov
mov
addr16
sahf
ret
test
je
adc
retf
mov
sub
or
lahf
ja
test
ja
jns
cs
in
hlt
pop
xchg
cli
and
push
cs
ja
test
cli
push
mov
pop
pop
lods
rcl
js
add
js
outs
sub
popf
mov
shl
out
(bad)
jmp
push
fsubr
pop
(bad)
jmp
das
fisubr
or
pop
push
std
pop
push
add
add
inc
adc
in
jae
jns
pop
call
into
push
adc
jbe
xchg
add
sub
push
out
push
cs
ins
adc
xchg
fisubr
mov
cmp
in
fiadd
mov
and
jbe
inc
out
inc
adc
sub
cs
pop
ss
add
add
add
jge
or
mov
int3
leave
and
or
jo
mov
ja
mov
lock
add
add
ja
pop
(bad)
jo
add
push
push
test
imul
sub
push
stos
js
jae
dec
adc
ins
std
push
lods
cs
push
add
sub
popa
popa
push
aad
jge
push
test
or
adc
js
xchg
sub
mov
sbb
iret
jb
imul
test
js
pop
pop
jmp
lods
shr
pop
sub
ins
adc
rcl
lea
sbb
pusha
xchg
ins
sub
fidiv
or
xchg
sub
int
ficomp
shr
push
pushf
mov
xchg
adc
xor
pop
mov
ss
repnz
sti
(bad)
pop
pop
sub
in
(bad)
shl
sti
adc
adc
or
adc
push
add
lahf
jae
ret
add
repnz
push
adc
cmc
pop
sub
pop
aad
je
fisubr
xchg
lods
shl
dec
es
scas
fsubrp
(bad)
mov
jmp
sub
int
cmc
repz
je
fisubr
fbld
lods
shl
dec
es
xlat
loope
ficomp
shl
fisubr
or
out
in
scas
cli
push
pop
(bad)
clc
jbe
sbb
test
sub
add
adc
in
fisubr
leave
bound
ficomp
in
lods
jnp
or
mov
add
icebp
jno
sar
pop
fdivr
repnz
push
mov
xchg
cmc
mov
sub
mov
xchg
push
adc
cdq
add
push
jne
in
sbb
mov
pushf
mov
push
push
adc
stc
mov
repnz
dec
adc
fnstenv
jbe
jbe
jae
jle
test
and
int3
jo
pop
jl
lea
stos
cli
and
into
js
pop
gs
adc
lahf
pop
lods
rcr
sbb
pop
scas
add
add
out
pop
gs
xchg
in
loopne
push
xor
shr
pop
out
in
scas
cli
push
or
mov
fwait
lods
cli
jge
(bad)
loopne
lods
out
and
push
jle
or
mov
std
ret
jl
je
cs
push
cmp
xchg
pop
jmp
add
add
jl
or
(bad)
rcl
in
data16
lods
pop
adc
sub
sbb
jle
push
xchg
in
adc
mov
jle
push
mov
in
adc
pushf
cs
adc
pop
test
dec
sub
popf
mov
in
pop
into
in
fisub
movs
das
(bad)
outs
push
or
pop
push
stos
rcr
lods
out
fisubr
sub
sbb
pop
lds
test
gs
lods
out
ficomp
sub
imul
adc
adc
fld
inc
or
jl
lods
pop
out
adc
pop
lds
test
push
add
fldcw
mov
bound
ficomp
jo
jae
retf
mov
cmps
adc
repnz
sti
(bad)
pop
pop
sub
shl
sti
adc
add
(bad)
ins
cld
popf
bnd
adc
inc
adc
sbb
fld
cli
mov
rcl
add
mov
or
lods
shr
sub
pop
sti
add
and
dec
adc
push
out
cmp
add
sbb
lea
lods
sub
pop
clc
xchg
add
sub
mov
mov
ja
ins
adc
or
add
add
mov
xor
cmc
push
movs
push
add
mov
jnp
bnd
and
int
popf
imul
(bad)
(bad)
jae
push
pop
test
mov
adc
or
jo
xchg
or
sub
xchg
or
outs
sub
mov
shr
sbb
or
adc
jmp
test
adc
cmp
shl
scas
cli
push
add
rcr
xchg
sub
mov
jle
test
mov
mov
xchg
xchg
adc
fisubr
(bad)
and
clc
mov
jo
pop
popa
add
push
xor
shr
ficom
test
mov
lea
xor
add
mov
and
jnp
add
js
sahf
adc
add
add
mov
jge
adc
out
add
imul
add
jbe
push
xor
add
(bad)
in
push
pop
push
xor
pop
sub
sbb
loope
mov
lea
jne
add
(bad)
ja
shl
test
js
ja
(bad)
and
setp
stos
jp
cdq
push
stos
sar
imul
shr
pop
lds
test
push
or
mov
js
pop
push
inc
add
gs
sbb
es
adc
jl
lods
cld
pop
call
add
(bad)
jo
push
adc
cwde
jmp
and
cdq
jle
push
lods
es
adc
jl
pop
arpl
xchg
add
cdq
add
cli
lock
add
add
sub
fsubr
scas
cli
push
or
mov
popf
(bad)
daa
jp
pop
in
push
add
mov
inc
pop
fs
jmp
push
add
adc
inc
add
jge
push
xor
add
movs
pop
lds
test
jmp
jae
ret
add
repnz
dec
adc
cmc
pop
sub
pop
aad
mov
sar
jb
xchg
add
lods
mov
dec
aad
push
adc
xor
loop
jl
xchg
test
in
push
lods
es
(bad)
sar
cdq
xor
ins
aam
cmp
inc
xchg
in
aam
repnz
adc
mov
leave
fldcw
in
fisubr
jmp
add
add
xor
sub
out
repnz
popf
js
mov
mov
pop
(bad)
lods
sar
clc
daa
or
lods
call
pop
push
jl
pop
sar
add
push
mov
clc
stos
lea
jbe
push
mov
(bad)
out
xchg
(bad)
cli
ins
adc
or
repnz
inc
add
call
or
adc
lea
add
adc
ja
pop
add
add
movs
in
mov
push
adc
(bad)
sar
cs
in
repnz
fst
push
add
repnz
add
add
or
sbb
mov
or
addr16
adc
pop
add
dec
out
js
inc
icebp
or
jmp
in
fld
add
push
jne
push
jne
fisubr
leave
pop
out
in
scas
cli
push
push
outs
add
jp
inc
jecxz
and
add
movs
in
xchg
push
adc
cs
dec
cmps
push
jmp
sti
mov
pop
add
daa
mov
or
adc
fisubr
pop
(bad)
mov
call
hlt
loope
popf
mov
xchg
sub
push
lods
es
mov
icebp
mov
or
lods
jg
leave
clc
sar
fdivr
cli
cmps
adc
call
cmps
adc
leave
jmp
and
jl
lea
icebp
push
adc
lods
icebp
push
add
stos
scas
in
fiadd
jbe
and
jl
out
jbe
and
jl
out
retf
xchg
adc
add
dec
mov
add
leave
add
jge
shl
sbb
stos
pop
loopne
add
dec
and
mov
cmp
lods
lahf
jl
test
mov
test
add
js
cli
stc
or
popf
(bad)
and
add
pop
adc
popa
push
fst
or
shr
movs
stos
jmp
lea
pushf
push
pop
inc
loopne
movs
leave
and
and
or
cwde
jmp
repz
pop
stc
outs
pop
push
jmp
out
js
repnz
ins
mov
sbb
iret
jo
imul
mov
js
jae
stos
sbb
sub
adc
jb
jp
loopne
call
cs
mov
sar
pop
add
cli
gs
in
add
in
fisub
adc
inc
inc
adc
cwde
out
jl
sbb
mov
(bad)
std
push
ret
mov
(bad)
sbb
sub
adc
sub
addr16
adc
inc
push
inc
xchg
adc
add
js
cmp
mov
enter
gs
mov
or
mov
gs
in
mov
push
in
(bad)
jmp
ins
mov
lock
ja
lea
push
mov
push
lock
test
push
xchg
ins
jecxz
ins
and
ret
sbb
push
or
mov
cs
pop
icebp
movs
adc
dec
sub
or
jge
repnz
test
mov
jbe
daa
mov
add
jge
push
lods
mov
jb
and
aad
inc
in
fisubr
mov
jo
lods
jbe
adc
mov
or
xchg
mov
mov
adc
test
jb
push
adc
dec
test
das
fisubr
mov
or
inc
sub
adc
mov
outs
lods
inc
jno
lods
sub
pop
movs
shr
mov
xor
sbb
inc
jmp
mov
sub
fsubr
fisubr
aad
push
lods
sub
imul
pop
xor
push
mov
and
cs
cmp
mov
adc
cwde
jmp
xchg
dec
add
ret
imul
stos
addr16
lea
js
imul
fidivr
ror
inc
cli
push
jbe
ja
lea
lods
sub
push
mov
jno
lods
sub
dec
mov
jp
adc
jbe
jo
adc
jo
ret
ins
rcl
xchg
mov
adc
mov
jmp
sahf
shr
mov
test
pop
push
gs
push
add
loop
shr
push
mov
or
cdq
mov
jo
mov
stos
push
in
jmp
outs
sub
ret
in
push
scas
sbb
mov
xor
mov
xor
add
push
mov
or
adc
fisubr
add
outs
sub
cdq
mov
(bad)
cdq
push
sbb
or
adc
test
jl
mov
push
xlat
js
pop
push
les
imul
lea
pop
adc
mov
gs
adc
pop
add
push
cmp
rcl
sbb
push
retf
shr
add
sahf
shr
mov
imul
out
popa
clc
sti
mov
jbe
jae
push
and
xchg
fld
xor
in
out
in
(bad)
jmp
mov
add
outs
sub
pop
cdq
push
sub
stos
icebp
les
hlt
js
pop
push
dec
adc
add
repnz
dec
adc
cmc
jno
push
test
movs
das
fisubr
or
es
(bad)
cs
icebp
pop
cmp
inc
sti
div
push
scas
push
lods
ror
add
mov
ret
imul
rcr
fsubr
(bad)
addr16
in
movs
push
jp
pop
sub
test
test
ja
or
adc
in
fisubr
popa
pop
lock
jmp
mov
mov
bnd
jge
jo
adc
push
test
cmps
pop
das
jbe
mov
mov
xchg
mov
adc
xchg
in
jo
inc
push
test
out
push
scas
es
xor
js
clc
jno
xchg
mov
in
push
sub
shr
fisubr
or
es
add
add
mov
outs
sub
jb
pop
pop
mov
ins
stos
fiadd
push
(bad)
ins
lods
test
sub
(bad)
cli
jge
(bad)
lods
fptan
mov
adc
in
stos
inc
lahf
lea
mov
mov
in
(bad)
movs
adc
leave
out
jmp
jbe
cs
icebp
push
mov
shr
pop
das
das
pop
mov
cmp
fldcw
vmovdqa
or
cmps
cmp
jge
push
jnp
inc
mov
imul
stc
add
stos
inc
mov
cmps
sub
shr
fist
or
add
lahf
sub
cmps
adc
add
dec
push
push
pop
int
popf
push
stos
inc
cmps
fs
cmc
repnz
daa
adc
js
imul
xor
and
push
add
adc
leave
sahf
pop
jg
add
fwait
xchg
fcomi
jbe
sub
jg
add
cdq
clc
popa
lods
outs
sub
movs
push
mov
xchg
in
fisubr
in
mov
adc
sub
mov
test
js
ja
data16
sub
dec
adc
in
outs
popa
jmp
mov
in
sbb
push
lea
pop
pop
add
xchg
pop
or
movs
cmc
fisubr
dec
sbb
(bad)
std
push
outs
lods
jle
push
adc
push
fwait
test
sbb
add
jmp
in
(bad)
jmp
cli
mov
clc
ins
repz
xchg
adc
js
imul
cdq
pop
mov
stos
icebp
lds
test
jne
in
loop
out
(bad)
sub
aam
int3
js
sbb
aam
xchg
jmp
pop
adc
loop
outs
stos
dec
sbb
sub
aam
int3
enter
jmp
movs
shr
push
lods
es
mov
jmp
shl
and
adc
fld
dec
sbb
test
mov
or
test
sbb
lea
sbb
int3
cs
mov
jae
sbb
cli
jo
cmp
clc
push
lds
imul
sbb
jmp
(bad)
stc
clc
or
dec
adc
(bad)
outs
popa
popa
aad
retf
jl
jmp
movs
shr
push
ins
movs
ret
mov
cmp
lea
enter
xchg
mov
push
xor
test
sub
pop
jbe
jo
lods
js
adc
sti
add
test
cld
repnz
clc
add
arpl
add
pop
mov
scas
cli
push
add
add
js
adc
fmul
pop
sub
outs
test
sldt
sub
mov
xor
sar
cli
call
add
cli
call
call
cwde
out
jl
sbb
mov
(bad)
std
push
ret
aam
push
jl
sar
adc
neg
outs
pusha
pop
(bad)
mov
call
aam
(bad)
js
inc
sub
sub
popf
lahf
fwait
lods
dec
in
nop
xchg
sub
in
ficomp
mov
leave
std
push
xchg
jb
or
push
sahf
loop
push
sti
xchg
(bad)
fdivr
cli
das
in
push
adc
mov
dec
add
jmp
jge
or
mov
cmp
lea
mov
clc
mov
sub
jns
cli
push
(bad)
lea
sbb
push
mov
mov
leave
sub
cmp
lods
int3
test
add
sub
mov
and
js
cli
call
sbb
repnz
cmps
sbb
push
lea
pop
pop
imul
jno
sti
add
pop
cmp
or
mov
jp
xchg
(bad)
fdivr
cli
sub
push
or
mov
inc
or
cmp
jl
pop
jbe
cs
cmc
leave
and
adc
int
outs
movs
ret
mov
jl
lea
inc
sti
mov
stos
jle
mov
out
push
cmp
and
add
test
xor
and
jo
ja
push
push
jp
push
mov
push
retf
jnp
jo
push
js
xchg
lock
fstp
mov
jne
cs
sbb
cli
in
push
sbb
adc
mov
ret
stos
fimul
mov
or
jp
repnz
icebp
jno
int
call
adc
xchg
(bad)
fdivr
cli
sbb
(bad)
fmul
sbb
repnz
cmps
mov
lea
mov
inc
jmp
add
push
add
and
dec
mov
sub
inc
xor
adc
(bad)
cmc
repz
adc
in
outs
mov
or
iret
jb
jmp
std
repnz
xchg
adc
xchg
lea
sbb
adc
jbe
(bad)
adc
adc
lahf
sti
mov
pop
inc
add
push
pop
fisubr
ret
mov
push
mov
cli
push
lea
sbb
pop
sbb
jbe
xlat
adc
rol
jae
inc
sbb
cwde
cmc
jo
adc
add
js
pop
mov
adc
adc
push
adc
sbb
or
cdq
pop
stos
add
gs
(bad)
jl
jbe
add
div
js
imul
shr
sbb
dec
mov
test
jge
xchg
ficomp
inc
add
add
out
cdq
sub
pop
add
add
lods
push
add
mov
xor
sub
adc
adc
cli
gs
mov
lahf
pop
mov
add
(bad)
in
lods
test
cli
jmp
cdq
shr
push
test
or
adc
pop
fisubr
ret
xchg
gs
xchg
call
sub
push
mov
or
mov
test
cs
jp
cli
ins
jmp
stc
aas
add
inc
xchg
adc
sbb
ins
mov
clc
imul
adc
aaa
mov
outs
lods
push
sbb
shr
call
jmp
lea
mov
div
push
sti
mov
push
stos
(bad)
sub
js
repnz
(bad)
gs
mov
cmps
sbb
mov
fisubr
mov
cs
repnz
adc
dec
push
lods
sub
pushf
outs
sub
cs
mov
xchg
adc
mov
lea
js
pop
push
les
imul
push
sbb
xchg
clc
cs
outs
sub
cdq
dec
sub
cld
jge
adc
lea
lahf
add
push
lods
inc
xchg
sbb
xchg
sub
mov
jp
pop
test
adc
push
or
jne
(bad)
loop
jp
in
push
adc
fld
retf
add
sbb
repz
in
push
cs
sbb
cli
das
in
stc
mov
enter
xchg
push
out
(bad)
mov
sub
clc
and
loopne
scas
cli
push
add
leave
lahf
fwait
lods
cli
jge
lea
jb
or
cmps
inc
test
lods
jbe
adc
rcr
mov
add
jge
bnd
adc
adc
sbb
shr
push
add
mov
ret
mov
js
lea
xchg
call
adc
shl
cld
adc
fisubr
and
sub
outs
add
pushf
cmps
or
adc
(bad)
repz
ins
shr
ins
or
or
pop
jl
mov
push
adc
test
add
mov
jp
push
jne
add
daa
push
aam
sbb
(bad)
sub
in
(bad)
adc
push
adc
push
push
(bad)
loope
sub
cld
xor
jbe
cs
in
jl
ins
adc
inc
ja
jp
test
adc
test
mov
mov
fxtract
jge
(bad)
jl
jbe
call
push
cmps
test
and
popf
push
stos
(bad)
bnd
in
(bad)
jmp
cli
ins
xchg
in
aaa
push
mov
clc
test
ins
add
cwde
jmp
and
mov
mov
repnz
jmp
nop
cwde
fst
in
fiadd
jne
lea
js
ja
sub
add
test
jo
jae
enter
in
(bad)
jmp
lods
add
popf
push
jp
clc
gs
in
pushf
aad
(bad)
push
xchg
jmp
leave
cwde
adc
dec
sub
add
xchg
cmc
pop
xchg
imul
sub
cmp
add
mov
ins
adc
in
add
es
push
adc
test
fs
cdq
pop
stos
add
gs
mov
cdq
addr16
or
iret
jb
pop
mov
add
fs
add
add
cwde
jmp
dec
mov
cs
pop
cmp
mov
dec
sub
xchg
cmc
pop
xchg
add
or
dec
add
add
add
jge
test
push
fldln2
(bad)
sbb
mov
ficom
or
push
movs
movs
arpl
(bad)
cdq
rcr
pop
mov
mov
add
jmp
dec
adc
sbb
ret
mov
or
test
mov
push
stos
push
clc
imul
xor
(bad)
lods
rcr
cld
pop
mov
xchg
lea
lods
inc
cmp
dec
loop
(bad)
nop
adc
stos
imul
movs
jmp
pop
mov
sub
and
mov
jns
adc
hlt
fld
add
mov
jo
pop
sub
popf
shl
scas
cli
push
push
gs
icebp
lods
cli
add
popf
(bad)
stos
rol
shr
push
scas
push
lods
push
mov
xor
fs
adc
push
dec
sub
push
enter
jmp
mov
in
pop
sub
lea
lock
pop
stos
push
pop
cmp
sub
sbb
jle
push
xchg
in
adc
lods
and
cdq
jle
push
popf
es
adc
jl
or
popf
push
mov
rcr
lock
add
pop
push
adc
popa
or
addr16
sahf
test
cs
sbb
out
(bad)
imul
sub
push
mov
adc
repnz
jge
or
popf
push
icebp
ret
je
adc
clc
fld
add
jb
(bad)
outs
test
(bad)
jmp
or
add
das
jbe
xchg
jle
cmc
mov
sbb
iret
jb
imul
mov
sbb
iret
jb
imul
mov
lods
mov
fidivr
clc
inc
test
dec
sub
cli
call
add
cli
call
in
scas
cli
push
pop
imul
push
or
adc
ret
mov
xchg
hlt
push
push
add
into
add
add
jns
cs
push
jae
mov
(bad)
jp
adc
push
test
(bad)
sar
pop
mov
sub
sbb
or
mov
sbb
iret
jb
imul
mov
pop
push
sbb
js
pop
and
add
dec
sub
cli
out
or
adc
leave
popa
arpl
pop
(bad)
loopne
js
cli
add
mov
das
jbe
xchg
sub
mov
sbb
iret
jb
imul
fadd
fwait
push
sub
add
iret
cdq
sub
adc
ret
mov
push
mov
repnz
ficomp
sub
pop
lods
lahf
sahf
stos
cli
out
mov
add
sub
or
or
(bad)
jmp
test
pushf
mov
xchg
test
out
(bad)
pop
stos
jp
mov
jmp
adc
jl
es
in
ror
loop
jl
lea
sbb
bnd
in
lods
hlt
ds
mov
mov
(bad)
out
pminsw
shr
div
loopne
(bad)
sti
sub
fs
jmp
lea
sbb
aad
xchg
cmc
pop
or
ja
sub
jns
dec
ins
xchg
mov
sub
mov
stos
out
and
pop
aad
push
adc
and
jl
js
addr16
or
lods
pop
stos
push
sub
in
lahf
jae
push
adc
test
repnz
sbb
pop
das
jbe
(bad)
ret
push
xchg
add
out
jge
adc
test
push
ins
mov
or
(bad)
std
mov
fnstenv
pop
lods
jbe
xor
jmp
xor
in
pop
das
jbe
add
(bad)
ja
or
pop
jmp
test
in
push
ja
inc
sbb
xlat
jbe
imul
or
idiv
frstor
in
push
test
or
mov
mov
hlt
addr16
in
adc
in
(bad)
jmp
jl
in
shr
std
push
jb
jl
jmp
cmc
fisub
push
cmc
ficomp
dec
ds
push
jbe
add
jge
test
push
xchg
sub
adc
dec
sub
lea
jbe
add
jge
pop
lods
jbe
xor
adc
or
test
scas
or
test
sub
mov
scas
and
dec
ror
test
(bad)
or
test
(bad)
or
test
and
jb
mov
(bad)
ja
inc
add
scas
cmc
fisubr
jbe
xor
std
lods
lahf
adc
test
lods
jbe
adc
ret
lea
sub
sub
jbe
clc
imul
xor
sub
lods
add
shr
push
or
cmc
pop
test
lea
jbe
adc
adc
xchg
shr
xor
icebp
stos
pop
ins
mov
push
and
jl
sar
clc
pop
out
xchg
mov
rcl
ds
push
pop
or
adc
add
add
ja
inc
lock
mov
jge
push
mov
jmp
arpl
in
jo
xchg
sub
mov
fidiv
xchg
dec
mov
pop
push
cmps
adc
push
add
add
jg
xchg
pop
rcl
mov
pop
repz
lods
inc
call
pop
adc
push
push
mov
or
xchg
and
xor
imul
and
push
repnz
cmps
es
mov
and
and
test
fidivr
or
cs
rol
mov
xor
mov
sub
pop
mov
or
es
mov
sbb
pop
mov
inc
jp
jl
fwait
push
or
mov
test
call
lods
fdivrp
push
fisubr
in
push
scas
es
lods
call
jo
fistp
dec
add
call
cmc
push
mov
sar
cli
add
ja
or
adc
fisubr
dec
sbb
nop
rcr
cli
xchg
sub
lods
push
mov
popf
adc
or
mov
xchg
xor
add
loop
push
fisubr
out
push
lods
xor
xor
retf
cmp
push
or
es
icebp
pop
cmp
inc
lock
out
adc
push
test
cmps
adc
stos
retf
add
add
push
mov
jmp
or
add
sbb
inc
adc
(bad)
stc
stos
pop
jg
adc
xchg
test
clc
mov
jo
or
mov
es
mov
pop
stos
ds
icebp
jbe
mov
sbb
cli
imul
movs
test
jmp
mov
pop
lods
not
push
rcl
pop
dec
test
push
popf
fisttp
nop
xchg
test
in
(bad)
out
in
into
sbb
adc
push
into
lock
je
cs
js
pop
outs
add
add
push
lods
sbb
test
cli
add
jg
sub
add
jne
mov
sbb
leave
adc
sti
add
cs
icebp
push
sbb
shr
ficom
(bad)
nop
adc
push
call
loopne
jno
push
test
jmp
in
pop
shr
(bad)
jae
lea
fcomp
cdq
push
sbb
add
lods
movs
retf
add
lea
cs
mov
in
mov
add
cwde
or
sub
adc
clc
jnp
mov
push
test
sub
test
dec
les
lea
cmp
test
pop
clc
popf
jmp
sar
addr16
les
out
jno
push
test
ja
out
ins
das
arpl
shl
outs
push
adc
pop
push
scas
jecxz
outs
mov
sub
call
jge
pop
pop
sub
(bad)
jne
in
jbe
add
cdq
sub
mov
xchg
pop
push
mov
adc
add
cli
jae
(bad)
ins
and
and
in
arpl
push
mov
add
add
jl
cmps
fst
sbb
test
push
mov
xor
sbb
add
or
rol
push
pop
outs
sub
call
stos
jmp
in
ficomp
cmps
add
push
lods
jbe
adc
and
lods
shr
(bad)
jnp
pop
mov
in
mov
in
(bad)
imul
dec
out
sbb
sti
jo
arpl
xor
mov
adc
or
xor
loope
pop
inc
leave
mov
jecxz
push
cmp
inc
movs
mov
enter
fist
pop
jmp
mov
test
inc
adc
addr16
ins
shl
daa
adc
test
sub
push
loope
jb
mov
rcl
(bad)
ins
inc
popf
repnz
push
adc
fwait
push
jge
push
lods
and
or
inc
cld
test
loope
lods
cs
push
mov
add
cmp
add
jmp
cli
jg
xchg
or
cld
test
sub
jg
pop
stos
or
or
mov
adc
xchg
pop
mov
clc
gs
push
dec
in
(bad)
jmp
jl
ins
adc
xchg
add
adc
add
in
(bad)
xor
lods
pop
clc
push
mov
leave
push
mov
sbb
hlt
jne
in
aam
in
(bad)
jge
lea
xchg
jae
dec
adc
cmp
ret
mov
jne
in
inc
push
stos
or
sub
jge
or
aad
sbb
shr
or
es
in
cli
loop
push
mov
gs
lea
lods
jbe
xor
adc
fwait
mov
fxtract
jge
(bad)
jl
jbe
sti
adc
call
or
mov
repz
scas
shr
push
mov
or
mov
repnz
cdq
addr16
or
(bad)
in
ja
inc
or
cwde
jmp
in
mov
jge
(bad)
jl
jbe
pop
adc
add
add
pop
lods
inc
lock
mov
adc
fst
cs
sub
in
pop
das
jbe
lea
xchg
pop
mov
mov
pusha
pop
retf
out
in
jo
ret
ins
rcl
lea
push
and
jno
sbb
xchg
stos
inc
or
inc
xchg
mov
(bad)
je
adc
ins
sub
stos
(bad)
gs
fs
call
and
mov
stos
sahf
pop
jmp
mov
in
add
cs
rol
mov
addr16
lea
sbb
out
jge
adc
aad
in
push
fist
adc
pushf
addr16
jnp
jl
jbe
ja
cld
(bad)
data16
push
push
outs
sub
fimul
jbe
cs
cmc
pop
mov
mov
xor
add
cmp
outs
sub
lods
or
sbb
nop
jmp
lea
js
imul
stos
shr
icebp
mov
mov
(bad)
addr16
scas
sahf
jo
mov
stos
sub
cs
icebp
pop
inc
mov
add
into
mov
push
lods
fisubr
mov
push
scas
es
push
ins
sar
imul
(bad)
push
pop
lods
push
cmc
pop
mov
adc
mov
sbb
nop
jmp
lea
aam
bound
in
sub
adc
and
adc
dec
sbb
test
mov
or
mov
ret
ja
push
mov
inc
xchg
mov
or
test
mov
mov
sbb
lods
js
imul
scas
pop
stos
fdivrp
push
cmp
lea
cli
jo
cmp
lea
pop
cmp
adc
es
pop
setp
push
or
mov
pop
ins
adc
shl
ja
jmp
sbb
jl
mov
adc
mov
xchg
cli
fsubr
(bad)
push
jns
pop
adc
adc
xor
icebp
jno
retf
lea
test
push
mov
mov
push
lods
es
lods
enter
or
sub
pop
add
cli
stc
jmp
mov
in
sbb
test
in
xchg
push
adc
xor
mov
inc
sbb
add
mov
xchg
in
cmps
push
sbb
sub
add
mov
or
inc
inc
or
int3
cmp
aam
movs
das
fisubr
push
mov
pop
sbb
jmp
xchg
add
(bad)
je
adc
xchg
mov
(bad)
je
adc
ins
inc
and
adc
in
outs
lods
jbe
xor
add
fld
push
sub
mov
dec
or
mov
fidivr
or
push
aam
lahf
pop
lods
dec
or
jmp
add
sar
imul
jbe
dec
ds
push
jp
clc
bound
(bad)
imul
sar
adc
mov
push
add
sar
cli
lock
and
iret
js
sbb
or
shr
push
sub
xor
js
retf
mov
adc
xchg
aad
test
adc
push
mov
repz
push
mov
or
push
int
adc
imul
or
ins
jbe
imul
sar
add
jmp
or
lods
jge
push
and
and
fwait
cmc
push
pusha
mov
or
xchg
jmp
pop
test
and
repz
mov
mov
fistp
sub
push
mov
mov
clc
jb
(bad)
jb
jo
push
inc
ret
push
fst
prefetch
xor
ja
push
mov
xchg
xor
test
sub
outs
sub
(bad)
sub
outs
sub
mov
jo
xchg
xor
test
js
sub
shr
fisubr
push
or
mov
fidivr
adc
mov
fstp
push
mov
test
push
sub
shr
call
in
bnd
adc
xchg
cmc
push
lods
dec
or
or
or
push
xor
dec
sub
shr
ficomp
add
aad
jp
sub
push
xor
lahf
in
(bad)
xor
jnp
sar
cli
imul
xchg
xor
push
lods
sub
cs
shl
add
sbb
or
sub
or
mov
lods
mov
push
leave
push
aad
adc
lea
imul
shr
nop
rcr
pop
and
adc
push
xor
imul
hlt
ja
in
inc
and
test
jo
xlat
mov
adc
test
sub
ja
dec
and
fnsave
lods
sub
and
cwde
jmp
adc
aam
scas
cli
push
or
mov
fst
xor
sub
or
push
sahf
fdivrp
pop
xchg
addr16
dec
sbb
cwde
imul
lea
enter
or
push
iret
jbe
ja
mov
imul
adc
or
test
js
cdq
cmp
xchg
test
inc
xchg
mov
in
jmp
add
in
push
cs
cmc
push
outs
mov
adc
mov
push
lods
sbb
mov
adc
cdq
arpl
fst
dec
leave
pop
aam
js
pop
mov
fstp
push
jne
in
sbb
in
fisubr
clc
pop
out
jo
iret
outs
jne
and
stos
sub
leave
mov
push
add
sar
xchg
add
test
arpl
add
dec
mov
outs
lods
inc
in
push
mov
pop
and
inc
sub
adc
(bad)
jl
adc
lea
jbe
lea
sbb
cli
imul
imul
out
hlt
jb
(bad)
rol
vfrczps
push
sbb
sub
mov
imul
in
scas
leave
jecxz
imul
sar
pop
fwait
cmp
or
mov
(bad)
repnz
push
aaa
mov
xchg
or
js
addr16
pop
or
dec
imul
sub
sub
es
push
adc
shr
add
std
jbe
ja
mov
js
clc
sbb
call
call
es
xor
push
inc
mov
or
loope
xchg
ja
inc
sbb
xchg
cmc
push
mov
jge
push
mov
in
adc
xchg
jmp
mov
xor
hlt
jae
xchg
jmp
xor
push
pusha
mov
mov
fucomi
add
dec
(bad)
outs
sub
shr
data16
add
fisubr
xchg
cmp
mov
add
sar
push
jne
fisubr
out
push
xor
clc
(bad)
outs
sub
mov
xchg
test
stos
jnp
test
not
xor
jl
sar
cli
imul
add
call
adc
lea
ja
stos
push
xor
or
push
adc
inc
in
fisubr
add
sub
cmc
sbb
data16
adc
adc
sar
out
add
ja
jnp
test
iret
push
jo
jnp
test
out
mov
or
mov
imul
inc
add
add
ds
xchg
or
sbb
data16
mov
repnz
shl
stos
push
xor
or
data16
shr
fisubr
xchg
repnz
or
mov
js
arpl
jbe
arpl
js
pop
mov
mov
adc
(bad)
cdq
rcr
or
loopne
stos
ja
xchg
xchg
jg
in
(bad)
jb
dec
sbb
mov
or
mov
lahf
loop
je
xchg
or
lods
(bad)
test
clc
xor
push
lods
movs
das
fisubr
or
sar
ja
xchg
lea
ins
sub
push
mov
push
call
int3
jp
clc
ins
xchg
mov
sahf
fimul
mov
sbb
push
xor
pop
(bad)
lods
rcl
adc
mov
ja
xor
jb
imul
cmps
pop
ficom
xor
sub
mov
cmp
dec
adc
cwde
adc
xchg
mov
jg
pop
xor
call
sub
jns
push
jne
lea
(bad)
jae
jbe
adc
fisubr
enter
out
fidiv
sbb
hlt
or
sbb
xchg
ficom
setb
test
movs
stc
mov
dec
sub
xor
jmp
sbb
fcomp
fdivr
repnz
add
test
hlt
es
cmp
pop
sub
movs
imul
stos
mov
xchg
add
(bad)
jp
sahf
(bad)
jns
cs
add
ud0
add
mov
icebp
cmc
add
mov
adc
sub
in
mov
adc
rol
or
in
sbb
out
(bad)
loope
push
mov
in
push
lods
or
push
stos
jmp
cmc
push
jl
jmp
xlat
add
mov
adc
push
jmp
xlat
add
scas
sbb
(bad)
in
push
adc
(bad)
outs
xchg
mov
ficom
jno
adc
test
adc
jge
bnd
add
add
pop
mov
and
add
pop
clc
mov
push
jmp
(bad)
shl
sbb
mov
add
js
ja
jmp
test
xor
ret
ins
rcl
add
jg
sub
xchg
clc
mov
add
(bad)
fstp
inc
xacquire
add
cs
stos
pop
sbb
add
jbe
jo
lods
jbe
adc
es
adc
fld
ins
xor
jmp
test
add
jae
data16
push
jp
pop
jmp
lods
sbb
add
sub
dec
push
add
jl
push
in
out
and
xor
sbb
out
add
cs
cmc
repnz
dec
xchg
ja
or
popf
jle
push
mov
adc
stos
cli
jb
in
call
aam
mov
(bad)
sti
ins
rcl
add
jg
sub
dec
(bad)
jp
push
inc
xchg
pop
jmp
test
xor
bound
add
xor
sbb
stos
xlat
add
cs
cmc
repnz
adc
js
mov
(bad)
cmc
lods
cli
add
inc
or
mov
loope
add
or
fstp
and
or
xchg
jmp
popa
or
lea
lods
jle
dec
add
push
jne
add
(bad)
ja
jnp
test
pop
retf
shl
xor
sbb
(bad)
jno
in
cmps
dec
fisub
xchg
in
fisubr
retf
shl
stc
jmp
adc
test
add
mov
jp
pop
mov
sub
cmps
icebp
lds
test
gs
(bad)
jno
ja
scas
cmps
aad
add
(bad)
lea
nop
outs
sub
scas
cli
push
pop
(bad)
clc
push
mov
dec
lock
add
dec
div
sbb
xor
cs
jmp
sbb
xchg
cmc
repnz
adc
jp
dec
div
sbb
outs
cmp
cmp
movs
pop
lds
test
mov
adc
js
ja
repz
inc
cwde
jmp
and
ficomp
sub
pop
lods
mov
test
jmp
int3
add
jns
cs
push
jae
mov
xchg
sub
push
test
ins
adc
pop
pushf
push
xor
add
jnp
or
mov
and
lock
popf
es
popf
lahf
add
ja
ret
push
sahf
repnz
fadd
add
or
lods
cli
lock
fild
add
sub
push
cmc
ficomp
mov
repnz
sbb
adc
(bad)
cmc
pop
mov
or
sub
add
push
mov
jmp
test
cs
mov
sbb
cli
jne
in
scas
jbe
repnz
xlat
add
es
jo
inc
jbe
jl
xchg
ficom
pop
mov
test
sub
addr16
js
ja
push
arpl
imul
push
jne
sub
or
add
out
in
jo
ret
ins
rcl
(bad)
clc
pop
jp
clc
jne
xchg
mov
add
fidiv
inc
in
sbb
out
fidiv
sub
fadd
xchg
shr
leave
sub
(bad)
push
test
or
or
adc
movs
or
xlat
mov
lahf
add
mov
push
lods
ficom
repnz
pop
add
repz
rcr
sub
movs
test
leave
and
and
(bad)
aaa
adc
sub
inc
movs
jbe
sar
(bad)
rcl
gs
shl
pop
adc
add
js
pop
ss
adc
stos
out
sub
mov
add
lahf
ja
ret
lahf
fwait
lods
hlt
pop
xchg
int3
lds
mov
test
hlt
mov
sub
jbe
dec
sub
xchg
lea
jbe
pop
mov
sbb
mov
pusha
mov
mov
lea
pop
pop
lods
stc
adc
sbb
sbb
test
sub
adc
mov
in
popa
shr
fisubr
sub
sbb
pop
lds
test
mov
fldcw
adc
adc
sar
lahf
ja
ja
pop
clc
pushf
or
sub
jmp
mov
lea
mov
in
push
shr
fisubr
sub
sbb
pop
lds
test
gs
shr
ficomp
mov
repnz
add
push
push
or
add
push
push
push
mov
jmp
addr16
and
cwde
shr
sbb
ins
sbb
data16
outs
adc
or
jne
in
adc
test
adc
jge
push
mov
enter
stos
ficom
inc
rol
add
repnz
adc
in
scas
cli
push
pop
(bad)
clc
clc
(bad)
outs
sub
push
mov
jns
popf
adc
test
pusha
pop
(bad)
lods
rcr
outs
test
mov
sub
fisub
inc
(bad)
repz
and
fwait
push
add
mov
mov
inc
add
(bad)
cmc
fstp
pop
in
mov
in
fisubr
push
jmp
and
int3
js
pop
jmp
push
cdq
setp
pop
add
mov
add
jmp
fisub
das
fisubr
push
out
ror
inc
jl
lods
call
sub
adc
(bad)
out
movs
push
add
add
rcr
imul
fisubr
jmp
(bad)
add
sub
call
(bad)
rcl
xchg
jmp
enter
lock
(bad)
push
fiadd
add
add
jge
jmp
std
shr
mov
es
(bad)
mov
or
fild
add
add
adc
mov
xchg
cmp
lods
and
(bad)
rcr
out
add
jnp
pop
(bad)
repz
sub
push
jmp
pop
push
adc
jmp
ins
adc
test
push
pop
lea
xchg
fidiv
pop
(bad)
repnz
int
push
inc
aam
fidiv
ja
push
sub
sub
jbe
adc
xor
icebp
fadd
add
sub
xor
and
jo
ja
jbe
es
jmp
lock
das
or
mov
int
xchg
xchg
xchg
add
lods
add
jbe
aad
cmps
adc
adc
or
cmps
xor
sub
enter
xchg
mov
in
(bad)
sbb
imul
xchg
jmp
jb
inc
pusha
les
hlt
fwait
push
(bad)
cmp
fldcw
in
fisubr
jmp
xlat
add
lods
cs
mov
xor
push
dec
arpl
mov
in
jmp
outs
mov
xchg
sub
dec
sbb
iret
jb
imul
pushf
imul
or
(bad)
push
jo
add
xchg
jmp
add
and
pop
cs
jmp
sbb
nop
(bad)
xor
sbb
adc
add
js
xor
jns
in
jecxz
aaa
cs
cdq
jle
push
ja
test
pop
stos
std
and
into
js
cli
jo
adc
ins
adc
cld
test
pop
xchg
(bad)
jmp
pop
test
sub
xchg
lods
dec
call
push
mov
lea
jg
sub
(bad)
rcl
lea
repnz
rcl
in
push
add
cli
gs
fcmovnbe
out
fidiv
xchg
mov
ficom
stc
(bad)
adc
test
adc
xchg
sbb
push
add
add
pop
stos
data16
adc
test
js
ja
jmp
hlt
add
outs
xchg
or
inc
lea
push
je
adc
push
adc
sbb
dec
cmps
push
jmp
sti
mov
pop
or
mov
add
lea
fild
and
icebp
ficomp
mov
(bad)
loope
js
cs
pop
sldt
sub
sbb
imul
(bad)
data16
add
jae
sti
jecxz
fwait
mov
adc
sub
fist
inc
lock
push
mov
cli
repnz
shl
or
mov
dec
add
test
mov
inc
add
xchg
loop
in
(bad)
imul
clc
idiv
cli
jae
(bad)
jle
jo
ja
xchg
push
stos
cli
or
into
js
clc
jge
lea
jge
test
fcom
mov
cld
into
adc
adc
adc
xchg
in
aam
add
add
sub
mov
(bad)
ins
adc
or
pop
mov
(bad)
out
add
push
inc
aam
jae
xchg
inc
jle
jbe
js
lods
dec
sbb
or
mov
xchg
in
cmps
push
push
pop
pop
xor
cs
add
push
jge
cs
icebp
mov
push
lds
fist
imul
cmp
add
stos
sti
or
int
xchg
imul
(bad)
outs
int3
add
ja
leave
fs
jle
cli
gs
in
movs
and
in
aam
sbb
dec
rol
add
movs
stos
icebp
lds
popf
js
repnz
xchg
push
jbe
push
call
jg
leave
sub
xor
mov
lods
out
dec
pop
outs
sub
sub
pop
stos
push
cli
mov
jae
jle
mov
gs
lea
push
call
mov
shl
mov
sbb
in
(bad)
push
dec
pop
hlt
lods
fisub
gs
mov
xchg
pop
jnp
outs
test
adc
pop
mov
add
mov
adc
push
mov
xchg
push
push
lods
pop
stos
jmp
mov
sbb
push
push
lods
pop
stos
push
hlt
es
lea
fidiv
adc
sbb
push
jmp
cld
adc
or
or
pop
xchg
mov
sbb
push
dec
lods
push
mov
repnz
ficomp
sub
lods
pop
call
push
icebp
stos
mov
push
jmp
in
cld
adc
test
mov
sbb
or
mov
sbb
iret
jb
imul
test
push
int3
jbe
pop
mov
adc
or
mov
loopne
fidivr
or
adc
add
es
pop
pop
xor
cs
jmp
sbb
or
mov
sbb
iret
jb
imul
mov
sub
sub
mov
iret
cld
push
imul
ins
or
sbb
sub
(bad)
jae
jg
add
jg
cli
imul
clc
gs
xchg
add
jg
cli
imul
clc
mov
pop
lods
xchg
mov
mov
pop
or
mov
jmp
fs
add
(bad)
in
sub
add
mov
jmp
xchg
jmp
pop
cs
jmp
sbb
popf
fst
cs
adc
sub
xor
jge
cli
out
push
test
in
fstp
popf
icebp
lea
or
int
cdq
imul
(bad)
data16
jo
ja
xchg
hlt
pop
xchg
ja
xchg
xor
cdq
push
jmp
fs
add
(bad)
in
sub
add
mov
jmp
lahf
jmp
pop
cs
jmp
sbb
xchg
fst
lods
dec
add
je
ficomp
js
pop
adc
add
jo
ja
xchg
hlt
pop
xchg
cli
imul
clc
gs
lea
fidiv
mov
push
imul
lea
repnz
repnz
cs
in
sub
add
mov
jmp
lahf
jmp
pop
cs
jmp
sbb
xchg
fst
inc
clc
ins
not
cli
ins
xchg
fs
ret
push
imul
ins
or
lea
jo
jae
cli
or
int
cdq
imul
(bad)
data16
jbe
pop
stos
cli
or
int
cdq
imul
(bad)
data16
js
jae
inc
or
sbb
cli
jge
sub
pop
ins
dec
pushf
xor
je
lock
add
jmp
adc
popa
bt
xor
sub
std
jo
xchg
or
inc
outs
test
push
fsubr
add
test
fst
pop
in
fisubr
mov
fisubr
shl
test
mov
(bad)
push
lods
es
in
fs
in
(bad)
addr16
mov
ja
fs
pop
cs
push
lods
dec
or
pusha
setnp
stos
leave
sbb
gs
outs
(bad)
mov
fisubr
dec
stc
add
sub
xor
xor
adc
data16
sbb
jl
pop
adc
jl
pop
sub
jl
pop
and
cmp
outs
sub
add
test
inc
(bad)
cmp
or
add
cvtpi2ps
add
test
out
add
(bad)
int3
sub
int
in
ficom
pop
out
adc
test
or
rcr
sub
mov
jo
pop
sub
popf
shl
inc
sub
add
mov
out
fidiv
and
sub
imul
out
fisubr
adc
add
jb
dec
sub
fisubr
mov
fisubr
cmp
fisubr
jmp
out
add
outs
pop
push
leave
or
in
ficom
pop
int3
add
jbe
test
test
inc
outs
test
sub
add
xor
jno
outs
sub
inc
out
add
outs
pop
push
mov
xlat
adc
jmp
push
push
jl
pop
pop
int3
add
jbe
test
popf
pop
add
cdq
sub
in
sar
inc
outs
test
dec
add
mov
sub
jl
pop
bswap
add
jbe
jo
lods
js
adc
aaa
add
test
cld
repnz
hlt
add
arpl
xchg
fcmovb
push
add
clc
cmp
jo
or
mov
js
pop
or
add
dec
mov
outs
lods
inc
and
jl
pop
fadd
add
push
mov
lahf
lods
js
jmp
add
pop
call
mov
lahf
lods
js
jmp
add
pop
mov
mov
lahf
lods
js
jmp
add
pop
enter
push
jo
outs
sub
fisubr
leave
push
add
inc
(bad)
es
fisubr
push
leave
push
shr
fisubr
xchg
add
test
scas
(bad)
adc
shr
lahf
add
jmp
in
add
repnz
dec
cvtpi2ps
fst
jo
add
push
jo
outs
sub
fisubr
leave
push
add
inc
fisubr
push
repnz
loop
sub
fisubr
or
test
in
push
repnz
adc
ins
mov
lods
out
fisubr
push
cdq
int
in
ficomp
shl
inc
sub
(bad)
jo
sbb
add
repnz
jmp
movs
fld
or
stc
stos
pop
adc
sub
fld
or
cli
out
imul
out
push
jle
jmp
lock
test
jmp
(bad)
loope
scas
out
dec
loop
push
pop
mov
add
pushf
jo
push
fisttp
push
jmp
out
shl
sbb
pop
movs
(bad)
xor
movs
(bad)
xor
shl
sbb
cmp
mov
adc
jmp
shl
std
jp
movs
shl
mov
push
fisubr
add
mov
jmp
adc
in
mov
inc
cmp
xchg
sbb
aas
in
adc
push
adc
jecxz
cmp
inc
adc
push
movs
dec
mov
stos
jmp
cmps
or
xor
mov
popa
imul
ds
scas
sbb
inc
add
jne
in
(bad)
fsubrp
(bad)
pop
(bad)
(bad)
jl
adc
lea
xchg
jae
ret
pop
add
adc
out
outs
stos
(bad)
and
mov
push
add
int3
out
fidiv
xor
jbe
sub
repnz
inc
or
xchg
add
adc
mov
or
cdq
mov
(bad)
cdq
push
sbb
or
lahf
ja
xchg
pop
repnz
(bad)
mov
pushf
lock
jae
lds
test
sub
adc
shl
outs
xchg
xchg
gs
in
(bad)
jge
inc
fisubr
or
into
rcr
daa
or
push
jp
cli
push
inc
jle
sub
movs
jae
pusha
and
mov
dec
in
bswap
in
fimul
ja
jmp
add
cli
pusha
xchg
lea
push
jp
pop
adc
(bad)
hlt
jne
in
push
loope
(bad)
jne
lea
rcr
jge
scas
add
add
jl
js
or
xor
test
mov
and
add
pop
jno
adc
jne
in
inc
int3
in
fiadd
push
adc
push
lea
push
in
(bad)
idiv
cmp
fist
lods
out
adc
push
stos
rcr
shl
pushf
jae
lds
test
inc
adc
jbe
(bad)
int3
adc
pop
mov
enter
or
rcr
sub
push
mov
mov
clc
jo
(bad)
jmp
sbb
jo
lds
test
jmp
cmp
adc
icebp
repnz
pop
adc
mov
xchg
mov
in
pop
lea
sub
jmp
fisubr
lahf
js
jae
pusha
and
int
push
adc
or
es
pop
pshufw
movs
(bad)
jge
jmp
adc
mov
mov
js
stos
jmp
lea
push
cmps
or
ja
adc
lea
sbb
dec
adc
ficomp
mov
lea
push
jl
mov
push
aad
popf
pop
push
ret
imul
sbb
jmp
cld
add
je
add
jo
pop
jmp
lods
shr
push
scas
sbb
sbb
cmp
jmp
lock
stos
cli
out
aam
shr
movs
movs
arpl
(bad)
lods
sar
jae
ret
mov
sub
jl
sub
cdq
shl
pop
sub
scas
or
in
mov
into
mov
sbb
sub
cld
ja
adc
lea
jb
(bad)
jmp
sbb
jp
pop
sub
adc
push
jmp
das
jbe
lea
mov
sbb
adc
in
test
jmp
sbb
jp
pop
in
adc
push
jmp
das
jbe
lea
mov
sbb
adc
in
test
inc
or
out
js
cli
jo
xchg
adc
jne
inc
jmp
push
lods
shr
or
push
test
or
into
and
add
rol
outs
stos
enter
(bad)
push
clc
xor
sub
pop
mov
push
(bad)
jmp
sbb
retf
out
jmp
das
jne
in
(bad)
imul
(bad)
sub
aam
int3
js
sbb
aam
xchg
jmp
pop
adc
dec
sbb
call
std
leave
sub
xchg
ror
fimul
lahf
xchg
fwait
js
pop
adc
ret
addr16
add
sub
imul
add
pusha
cmp
pop
cmps
out
test
mov
and
cmps
xor
popf
lahf
fwait
lods
cli
add
mov
lods
jmp
cld
add
jmp
push
lods
jbe
adc
repz
inc
and
adc
dec
gs
mov
or
popf
mov
push
cdq
push
sbb
or
add
jbe
adc
pop
push
adc
lock
pusha
adc
adc
std
push
jl
or
xor
pop
push
jne
in
xor
fiadd
or
add
cli
mov
pop
push
jbe
(bad)
ret
push
jbe
call
(bad)
and
push
lods
xor
jns
mov
(bad)
cdq
rcr
aad
aam
mov
fild
add
pop
push
sti
scas
jb
or
pop
lods
jmp
xor
cs
aam
loope
mov
dec
adc
jae
or
test
adc
push
adc
push
adc
test
add
mov
jp
push
jne
add
lds
or
stos
(bad)
sub
in
(bad)
adc
push
adc
push
push
push
push
add
pop
cdq
mov
arpl
xchg
pop
das
jne
xor
mov
jne
in
inc
aad
(bad)
gs
xchg
jmp
add
adc
fisubr
inc
sub
lea
inc
mov
adc
push
push
lods
inc
xchg
sbb
xchg
sub
mov
jp
pop
mov
or
jne
(bad)
loop
jp
in
push
adc
retf
add
sbb
add
mov
xchg
xchg
add
inc
adc
leave
push
inc
js
jbe
adc
lea
push
jg
popa
mov
sub
stc
push
add
pop
ret
lods
clc
jo
push
dec
adc
stc
js
shr
fcos
mov
adc
mov
push
jle
xor
arpl
js
jae
ret
mov
push
xchg
add
pop
push
in
test
sub
cdq
shl
pop
sub
addr16
sahf
stos
sahf
cmp
pop
add
push
jne
add
mov
ins
aam
sbb
or
fldcw
in
scas
cli
push
add
mov
fwait
lods
cli
add
cdq
mov
(bad)
cdq
inc
sbb
or
jl
mov
push
mov
pop
std
add
js
cli
gs
xchg
jmp
jbe
in
pop
clc
in
(bad)
gs
sub
call
sub
pop
push
add
lods
pop
test
pop
inc
cld
add
push
mov
or
mov
jmp
add
std
jbe
lea
adc
inc
jmp
and
in
push
lods
xor
jl
mov
retf
rcr
imul
add
push
jne
add
(bad)
ja
fist
test
xchg
ret
cmp
or
fldcw
in
scas
cli
push
or
or
jge
pop
lea
dec
xchg
jmp
stc
pusha
(bad)
lods
pop
mov
lea
pop
or
cs
lods
cli
or
xor
add
add
leave
sub
movs
cmp
add
adc
test
(bad)
sub
ror
stc
test
push
loopne
dec
add
pop
mov
adc
jge
push
xor
sar
jae
and
sub
add
jge
xchg
sti
jge
repnz
pop
adc
jb
out
jnp
jp
push
jnp
or
push
retf
sbb
mov
mov
adc
lahf
ja
dec
cld
xor
mov
push
fstp
cli
push
fcom
and
pop
mov
js
pop
inc
retf
mov
sbb
sub
jo
stos
ret
adc
push
call
jl
jo
addr16
addr16
pushf
push
pop
adc
add
test
jp
cmps
pop
lds
test
sub
xchg
add
in
repnz
adc
cmc
push
add
mov
xchg
mov
icebp
jbe
mov
sbb
cli
push
cdq
arpl
push
sub
out
ror
add
aad
aam
push
and
xchg
call
sbb
fcmovu
add
push
popf
fisttp
nop
xchg
mov
jmp
in
into
sbb
adc
into
lock
je
cs
pop
inc
test
push
add
pop
mov
cdq
arpl
rol
add
repnz
adc
shl
push
inc
add
dec
mov
aam
iret
sub
pop
idiv
add
push
mov
sahf
push
jmp
adc
rcl
lea
add
push
mov
and
ja
scas
jb
push
add
sub
push
inc
add
adc
(bad)
cli
push
cdq
arpl
mov
jnp
add
push
add
add
jp
repnz
or
mov
inc
ins
ficomp
adc
clc
adc
jo
adc
sub
add
aad
add
call
push
inc
inc
sti
leave
cmp
enter
push
inc
(bad)
jno
cwde
sbb
add
cmp
(bad)
aad
add
mov
add
push
inc
add
xor
outs
popa
pop
push
das
cli
fisubr
enter
xchg
scas
call
push
mov
cld
test
jo
outs
sub
repnz
xor
push
movs
dec
cdq
push
scas
scas
lahf
(bad)
jns
adc
neg
outs
call
mov
hlt
adc
fcomp
and
add
and
push
mov
add
pop
mov
and
mov
in
or
int3
icebp
fisubr
leave
push
add
jmp
shr
(bad)
movs
mov
add
js
pop
stos
ret
push
repnz
cdq
sub
adc
push
cmp
add
pop
mov
adc
or
adc
sbb
hlt
pop
das
imul
sub
lahf
pop
mov
dec
add
add
xor
mov
add
add
add
in
cmp
add
dec
sbb
(bad)
clc
jo
outs
sub
jl
or
cdq
push
movs
scas
cli
cli
mov
inc
inc
inc
add
ins
clc
fisubr
leave
push
hlt
mov
adc
in
push
or
fidiv
and
jo
jae
retf
mov
push
in
add
icebp
les
(bad)
stc
add
pop
jg
jo
lods
dec
or
enter
xchg
xlat
shr
lahf
sti
pop
jmp
std
shr
push
pushf
mov
imul
fdiv
add
push
sub
jo
cmp
pop
lds
test
sub
xchg
cmps
(bad)
in
repnz
adc
cmc
push
or
icebp
pop
push
dec
xchg
popf
add
adc
ss
imul
in
mov
lods
out
pop
jmp
or
mov
and
adc
xor
fild
cli
fldcw
ins
adc
jmp
fst
es
out
fisubr
(bad)
xor
inc
fdivp
out
fldenv
inc
fld
cmp
outs
push
test
std
add
cs
fnsave
and
push
add
add
rol
add
ins
add
cdq
sub
xchg
mov
add
cwde
jmp
pop
std
add
pop
clc
fiadd
push
inc
(bad)
cdq
add
pop
jl
sub
ja
add
test
in
ficom
sub
push
add
add
das
xchg
jmp
add
test
adc
sbb
mov
and
adc
add
sbb
push
ja
(bad)
call
inc
mov
sub
sub
add
test
in
jae
xchg
fcos
mov
sub
jnp
push
scas
cs
xor
add
rol
inc
add
pop
std
add
nop
sbb
int3
pop
clc
jnp
push
push
push
inc
pop
push
dec
dec
test
sub
adc
push
xchg
retf
shr
fxtract
sbb
add
mov
add
cmp
add
test
adc
test
push
inc
and
adc
or
add
pop
sub
(bad)
movs
add
add
popf
repnz
cli
add
(bad)
into
test
movs
dec
cdq
push
outs
jle
sub
repnz
sub
fsqrt
addr16
sub
out
add
add
js
inc
mov
push
ja
in
or
jp
js
pop
lods
or
test
or
dec
add
xor
ins
add
(bad)
jmp
mov
in
fld
add
sbb
add
loope
adc
icebp
pop
push
dec
cdq
int
fld
push
lea
jle
sub
add
adc
add
push
lods
push
sbb
add
pop
sbb
add
or
adc
mov
pop
add
add
add
clc
mov
outs
sub
loopne
popf
pop
mov
sub
add
test
(bad)
frstor
test
in
push
hlt
push
inc
add
shl
xchg
(bad)
and
add
test
mov
jp
hlt
mov
adc
in
mov
in
fidiv
and
jo
jae
retf
mov
adc
adc
pop
lock
cmp
or
lds
cmc
(bad)
shl
sti
adc
retf
xchg
cs
cli
adc
repz
scas
push
sub
xor
leave
sar
arpl
push
mov
pop
dec
not
push
mov
xchg
sti
jge
leave
push
adc
sbb
inc
sbb
or
cli
jae
(bad)
call
mov
sub
arpl
or
into
add
jo
xchg
test
add
hlt
jp
cmp
jo
or
inc
fadd
jno
sti
cmp
add
shr
(bad)
cli
or
popf
mov
(bad)
cdq
inc
sbb
or
jae
lock
push
outs
xchg
or
xchg
ret
cmp
test
lods
push
jne
fldcw
fisubr
jmp
lods
shr
push
lods
adc
popf
nop
cwde
sbb
leave
add
sbb
test
sub
cdq
pop
push
ret
imul
jmp
call
inc
test
sub
ins
fcomp
cmp
adc
jae
inc
adc
sub
push
lods
xor
iret
xor
add
mov
sbb
sub
iret
stos
rcr
fcomp
add
jge
repnz
adc
fwait
repnz
jae
lahf
pop
xchg
cmps
fwait
pusha
sti
push
push
test
add
test
jo
outs
sub
loope
inc
outs
cmps
mov
dec
sub
leave
stos
push
jnp
in
daa
int3
in
fisubr
xchg
fst
out
(bad)
call
inc
pusha
fwait
cli
add
sub
clc
push
or
dec
xchg
arpl
mov
adc
outs
sub
add
stc
push
xchg
clc
jno
push
inc
xchg
idiv
lods
xor
cdq
dec
sub
sub
adc
repnz
add
(bad)
rcl
add
push
jp
pop
cdq
in
add
or
adc
jg
lods
hlt
sbb
adc
push
jge
push
mov
or
adc
jmp
sub
leave
mov
jmp
hlt
push
movs
retf
stos
shr
pop
cs
mov
(bad)
retf
adc
(bad)
retf
adc
shl
adc
loopne
scas
cli
push
add
mov
lea
retf
lods
sahf
repnz
loope
adc
sbb
pop
aaa
push
dec
jnp
outs
test
ds
add
js
adc
std
mov
adc
push
adc
cs
push
push
push
push
mov
or
sub
jp
push
ins
(bad)
in
scas
push
lods
out
pop
jmp
stos
push
cli
pop
xchg
(bad)
out
cs
push
inc
inc
call
push
rcl
pop
cli
rol
add
push
scas
inc
rcl
es
in
fisubr
in
sub
sub
ja
rcr
fnstenv
(bad)
cmp
fprem
dec
jo
or
cmp
sar
into
fwait
push
cmp
adc
lea
lea
inc
adc
sbb
add
popf
pop
lods
push
mov
outs
sub
mov
movs
jmp
push
jnp
push
in
sbb
fisubr
int3
imul
push
sbb
pop
lods
jmp
in
(bad)
gs
(bad)
out
mov
sbb
sub
sti
test
stos
push
jne
push
sbb
xor
(bad)
jmp
cmps
shr
push
jle
push
push
add
pop
adc
in
or
add
repnz
sbb
sbb
mov
push
pop
add
dec
and
adc
shl
imul
jno
jmp
lods
add
test
jmp
mov
shr
push
scas
sbb
mov
std
sbb
fidivr
xor
test
mov
(bad)
fld
stos
(bad)
and
cwde
jmp
cld
xor
jo
imul
std
mov
mov
push
adc
cs
retf
jp
rcl
jmp
adc
pop
lock
cmp
or
dec
add
adc
xchg
stc
repnz
mov
xor
outs
lods
inc
or
ja
outs
sub
xchg
retf
shr
jnp
mov
shl
sub
outs
mov
mov
call
dec
add
shr
push
sub
cld
repnz
int
add
ins
add
hlt
imul
(bad)
int
add
pextrw
test
ins
add
repnz
add
or
(bad)
lods
rcl
adc
mov
ja
xor
jb
imul
cmps
pop
ficom
xor
sub
mov
cmp
push
cli
adc
icebp
pop
mov
or
inc
xchg
mov
push
or
lea
repnz
mov
mov
inc
add
lods
xor
sar
in
sbb
push
jge
stc
xor
lock
push
test
pop
enter
or
es
jmp
lock
xor
or
mov
add
and
add
and
cmp
cmp
in
sbb
xchg
lds
adc
movs
das
pop
aam
setp
pop
pop
inc
jmp
push
add
add
mov
inc
fsubr
add
cdq
mov
push
lea
lods
jle
dec
add
push
jne
add
(bad)
ja
sbb
shl
pop
pop
retf
rcr
(bad)
loope
stos
ror
xchg
add
jns
jle
sub
sar
or
mov
xor
cs
adc
sbb
shl
repz
mov
(bad)
jmp
test
movs
jmp
lea
lods
jle
dec
add
push
jne
add
(bad)
ja
ins
sbb
pop
retf
rcr
push
sub
lahf
ja
sbb
test
(bad)
ins
jmp
pop
mov
pop
jmp
push
mov
lock
lods
cs
int
shl
xchg
test
(bad)
mov
(bad)
jmp
test
movs
jmp
lea
jmp
cs
jno
mov
sub
jnp
mov
sahf
adc
xchg
in
loopne
sbb
pop
lds
test
stos
ret
bound
add
inc
inc
pop
sahf
outs
adc
test
stos
data16
jge
adc
mov
(bad)
ja
dec
and
out
fisubr
dec
adc
(bad)
cmc
scas
sbb
or
adc
adc
add
or
add
pop
fucomip
adc
clc
or
outs
sub
outs
mov
rcr
lods
sub
inc
adc
in
push
lods
xor
add
stos
jle
test
xor
cdq
clc
add
outs
sub
dec
mov
stos
ror
out
js
adc
mov
data16
add
test
jne
outs
test
adc
fisubr
ins
or
ret
outs
adc
out
test
stos
data16
jge
adc
sar
mov
or
and
fisubr
dec
adc
(bad)
cmc
mov
adc
adc
sbb
inc
jbe
jl
xchg
ficomp
shr
repnz
adc
sbb
add
out
addr16
arpl
dec
inc
add
xor
lds
add
sbb
jb
add
xor
loope
pop
mov
add
ret
mov
add
xor
cdq
stos
pop
je
add
push
mov
hlt
imul
ret
push
lods
adc
repnz
adc
adc
(bad)
xor
in
fisubr
add
test
and
add
jbe
jo
lods
add
test
scas
(bad)
adc
rcl
(bad)
xor
in
fisubr
add
test
cld
xor
push
outs
sub
fisubr
jmp
aaa
add
repnz
loop
sub
fisubr
or
test
in
push
repnz
adc
ins
mov
lods
out
fisubr
or
test
in
repnz
xor
rcr
sub
xchg
vpaddsw
mov
add
cmps
sub
fld
or
(bad)
cmps
pop
adc
sub
fld
or
arpl
js
popf
mov
(bad)
jbe
jb
imul
adc
mov
and
(bad)
loop
scas
sbb
lods
mov
pop
push
adc
add
add
jmp
adc
mov
cli
push
cdq
arpl
add
sbb
fst
mov
ret
adc
sar
pop
mov
adc
seta
cs
xchg
add
lea
mov
pusha
cmps
shr
mov
adc
dec
and
mov
jo
mov
sub
in
or
imul
in
scas
push
lods
out
pop
jmp
push
dec
dec
call
adc
loope
in
xchg
iret
in
fisubr
push
cmp
mov
dec
adc
jns
push
ja
in
fdivp
add
push
ja
in
mov
mov
and
mov
jo
mov
ss
mov
or
pop
mov
dec
jmp
adc
cwde
add
jo
add
adc
mov
js
cmps
arpl
aad
int3
inc
outs
or
in
mov
in
(bad)
mov
jmp
sub
pusha
inc
add
cmp
adc
in
scas
cli
push
push
arpl
js
dec
add
(bad)
jo
lea
fcomp
retf
adc
imul
add
mov
in
and
in
ficomp
out
adc
mov
cli
addr16
sub
inc
or
xor
js
add
push
lods
add
outs
sub
add
repnz
add
cs
mov
sbb
(bad)
jns
jle
sub
pop
outs
sub
sub
aam
aad
popf
pop
push
lds
cli
ins
sti
cmp
in
push
out
fisubr
js
cmps
sbb
mov
shl
(bad)
out
test
aam
loope
lea
cmp
lea
in
test
sbb
inc
or
pop
mov
clc
outs
xchg
cmp
push
push
add
sub
ja
lea
add
pop
adc
inc
add
pop
mov
popa
pop
sbb
jo
ret
ins
rcl
lea
lahf
ja
inc
add
ins
add
in
jmp
push
(bad)
jmp
(bad)
in
sbb
ins
adc
lock
outs
adc
jmp
sar
clc
jne
mov
jg
sub
or
adc
in
xchg
imul
fidiv
push
or
es
loope
popf
push
or
mov
jmp
add
add
cmps
cs
xchg
clc
inc
add
dec
std
push
jp
pop
sar
add
push
mov
in
inc
or
jmp
cli
ja
adc
fisubr
inc
or
lea
mov
jbe
add
repnz
sub
lea
repz
dec
cmc
add
clc
ja
popa
arpl
out
xchg
adc
mov
lea
jb
pop
adc
add
js
jae
jbe
adc
pop
or
add
movs
adc
cli
jmp
add
add
lods
add
aam
int
lahf
push
in
mov
idiv
ins
add
loopne
jne
add
adc
pop
pusha
add
cli
jmp
stc
add
jle
pusha
bound
xor
ret
ins
rcl
(bad)
clc
push
stos
(bad)
repnz
adc
lea
sar
add
push
xor
add
jae
add
pop
not
or
pop
syscall
push
stos
enter
icebp
pop
xchg
sub
(bad)
(bad)
outs
sub
mov
shl
sub
addr16
mov
push
mov
sub
fwait
mov
and
pop
mov
adc
pop
or
mov
sub
clc
gs
in
cmps
push
stos
(bad)
hlt
ss
add
test
jp
movs
pop
or
pop
movs
xor
sub
ja
les
outs
idiv
push
push
std
jae
xchg
(bad)
dec
pop
mov
pop
jmp
push
mov
lock
lods
cs
inc
mov
inc
aad
shr
fimul
mov
movs
arpl
out
icebp
inc
mov
or
outs
mov
lea
jg
sub
push
adc
sub
jl
jmp
add
add
jl
test
push
hlt
js
adc
adc
inc
jle
sub
add
mov
stc
jo
xchg
sub
out
in
(bad)
gs
in
jae
in
fidiv
xchg
(bad)
mov
pop
sahf
call
push
lods
cs
add
inc
jle
jge
js
jae
pop
inc
add
jae
add
int
pop
push
jl
in
push
or
xchg
jmp
enter
repnz
test
or
adc
(bad)
icebp
repnz
adc
js
out
or
ins
mov
or
int
inc
mov
add
sub
mov
mov
cvtps2pd
sub
pop
push
adc
sub
dec
add
(bad)
jp
sahf
(bad)
jns
cs
add
ud0
add
mov
adc
repnz
out
adc
scas
fisubr
mov
xchg
xchg
cmc
push
pop
mov
or
loopne
xor
jmp
lods
push
fisubr
push
jp
clc
ins
xchg
mov
sahf
fimul
jbe
xor
sbb
clc
ins
mov
xor
jbe
cli
pop
mov
mov
sbb
mov
or
sbb
dec
je
xchg
or
lods
(bad)
mov
jl
or
imul
push
jno
dec
or
xchg
jmp
and
fistp
adc
in
fisubr
push
cld
repnz
rol
add
xchg
xchg
(bad)
lods
add
clc
icebp
cld
outs
sub
cdq
push
mov
add
xlat
in
cmp
add
repnz
adc
lea
stos
hlt
ins
das
in
pop
sbb
rcl
push
stos
ss
adc
repz
adc
test
test
jge
js
ja
call
sub
cs
sbb
cli
gs
(bad)
jno
js
dec
jmp
sub
scas
(bad)
jnp
xchg
call
jl
or
clc
ret
gs
mov
div
push
test
or
sbb
dec
and
and
sub
push
loopne
(bad)
out
in
sbb
sbb
out
add
cli
jbe
cli
adc
(bad)
mov
test
imul
or
adc
(bad)
repnz
mov
test
outs
fcomp
jg
ins
xchg
mov
jbe
add
jecxz
jg
adc
sub
jb
js
xor
js
ja
xchg
lea
jbe
imul
ret
test
jbe
xor
dec
sbb
jmp
in
adc
mov
push
mov
cmp
pop
mov
add
stc
gs
mov
das
push
cld
test
sub
(bad)
out
test
add
cs
cmc
pop
mov
xchg
mov
fisubr
in
repnz
add
cs
cmc
pop
mov
xchg
push
xchg
add
outs
js
ja
jnp
test
fist
call
scas
call
js
ja
dec
push
xor
or
push
adc
pop
add
adc
push
test
xor
add
add
sar
cli
imul
xchg
adc
add
and
es
xchg
ins
add
sub
or
mov
lods
call
mov
adc
mov
pop
imul
leave
push
imul
add
push
out
push
mov
jmp
add
add
pop
jle
adc
dec
ret
push
jmp
je
cvtps2pd
ins
xchg
lea
xchg
mov
adc
(bad)
mov
mov
xchg
or
lods
enter
daa
jmp
repz
icebp
push
mov
or
test
test
cmps
imul
pop
mov
sbb
mov
sbb
nop
jmp
out
xor
les
hlt
jo
pop
leave
adc
popf
mov
add
jno
outs
push
push
jg
push
jp
clc
gs
in
out
cdq
in
(bad)
jmp
outs
mov
add
jno
outs
lods
jle
xor
fst
add
mov
shr
pop
das
jbe
mov
push
stos
fiadd
jp
mov
pop
idiv
add
xor
lods
sub
push
lods
xor
lods
sub
sbb
mov
mov
push
stos
(bad)
push
mov
push
stos
(bad)
sub
push
lods
xor
adc
ja
jbe
xor
add
add
push
lods
cli
pop
adc
add
xor
cmc
repnz
jno
adc
adc
jae
aam
mov
jno
outs
mov
mov
movs
push
xor
(bad)
cdq
rcr
cld
dec
pusha
jno
outs
mov
jl
mov
push
pop
stos
out
adc
sahf
test
lods
pop
cmp
inc
inc
sbb
pop
cs
adc
dec
retf
push
pop
push
lods
sub
cmps
xor
ficom
push
in
test
adc
add
add
xchg
sub
outs
popa
jmp
pop
shr
sbb
cmc
repnz
movs
das
fisubr
or
pop
push
stos
shl
fwait
push
jge
add
test
enter
xchg
xchg
and
push
add
or
rol
jae
xchg
mov
dec
lods
fdiv
jecxz
hlt
bound
lods
sbb
adc
or
add
mov
xchg
cmc
pop
mov
xchg
lea
fdivr
xor
(bad)
sub
push
test
sub
movs
xor
add
push
lea
pushf
jae
cmp
add
imul
mov
jmp
sub
xor
cli
or
push
repnz
or
jne
mov
lahf
or
lods
fisubr
ret
xchg
mov
xor
add
lods
repnz
in
in
add
cli
add
xchg
lods
jbe
adc
arpl
cmp
jmp
test
in
sbb
inc
lahf
cvtdq2ps
jmp
xchg
fild
or
cs
jmp
lock
add
adc
push
add
adc
fisubr
push
fnstsw
push
cmp
or
jne
in
or
in
(bad)
push
in
fidiv
or
push
add
rcr
mov
jp
or
mov
in
xor
or
push
stos
cli
inc
jecxz
push
add
not
test
add
hlt
jge
(bad)
jl
adc
cwde
jmp
mov
pop
lock
jmp
mov
dec
or
jo
adc
fisubr
inc
leave
mov
cmp
mov
jmp
outs
mov
lock
es
(bad)
icebp
sbb
inc
fisubr
ins
adc
add
or
(bad)
mov
xchg
out
(bad)
jnp
push
test
sub
adc
sub
outs
mov
or
daa
cmps
shl
xchg
das
mov
mov
(bad)
jae
dec
and
mov
jo
mov
movs
(bad)
clc
pop
xchg
mov
enter
jmp
add
xor
fisubr
push
movs
sbb
xor
adc
add
mov
jmp
adc
add
jl
or
mov
sub
add
(bad)
ja
add
pop
dec
popf
adc
dec
sub
clc
push
sub
pop
or
push
jl
jmp
fld
add
sub
in
mov
in
fidiv
xchg
mov
ficom
xchg
adc
push
adc
outs
(bad)
xchg
lock
push
scas
push
lods
ror
add
test
jo
outs
sub
in
inc
xchg
mov
xchg
pop
stos
repnz
inc
icebp
add
push
adc
pop
(bad)
(bad)
jl
adc
lea
xchg
daa
cmp
pop
add
pop
sbb
add
push
jp
cli
pusha
xchg
lea
jo
jae
les
cmps
test
mov
or
adc
jns
adc
fisubr
or
adc
out
jb
adc
clc
adc
sub
(bad)
pop
adc
shl
in
ins
es
fidiv
stos
mov
fidivr
and
xor
into
cvtps2pd
sub
adc
add
imul
fistp
int
push
lods
sub
lods
cmp
sub
pushf
outs
jne
xchg
int3
cmp
pushf
outs
sub
addr16
jo
pop
xchg
add
test
adc
rcr
imul
(bad)
fs
leave
xchg
mov
adc
js
addr16
sbb
mov
jmp
stos
(bad)
pop
inc
int
add
ins
mov
or
retf
dec
sbb
sub
or
int
js
addr16
cmp
inc
lahf
(bad)
jge
fst
inc
xchg
mov
int
stos
inc
lahf
in
pop
mov
(bad)
jmp
cli
mov
cmp
add
jl
push
mov
mov
add
ins
lods
lods
(bad)
xchg
mov
jge
in
hlt
cmps
sub
push
xor
(bad)
adc
js
imul
arpl
xchg
cmp
dec
mov
fcom
xchg
jmp
jb
mov
pusha
bound
in
mov
adc
sub
stos
fild
stos
data16
sub
dec
adc
das
fisubr
jmp
in
in
sbb
push
lea
pop
pop
add
xchg
push
adc
inc
in
xor
or
push
stos
cli
clc
gs
lea
and
gs
in
mov
jp
mov
xchg
rol
jb
jmp
mov
outs
cmps
ret
mov
mov
retf
sar
in
jmp
outs
mov
xchg
jmp
adc
fimul
fwait
xchg
or
lods
dec
sub
mov
pop
mov
adc
jbe
repnz
adc
cmc
leave
sub
aad
int3
jbe
sbb
aam
retf
jbe
add
fnsave
and
(bad)
mov
jbe
pop
inc
les
outs
sub
lahf
add
or
cdq
push
add
adc
mov
add
cmps
cs
xchg
clc
xchg
icebp
push
dec
mov
mov
inc
jmp
jae
jbe
pop
add
cli
ins
out
sahf
fucomi
(bad)
out
mov
js
cli
out
shl
shr
sbb
or
mov
sub
fst
adc
rcr
pop
or
add
mov
fwait
lods
cli
add
mov
ss
imul
in
mov
lods
out
pop
jmp
cld
add
cli
or
cdq
push
xor
pusha
sti
push
shr
xchg
(bad)
shl
pop
adc
repnz
adc
add
jl
out
hlt
cmps
sub
jl
out
push
jne
fs
popa
arpl
xchg
push
adc
and
mov
inc
or
lea
pop
test
call
push
jne
in
call
jmp
shr
fcmovbe
call
lods
cli
and
in
push
test
push
xchg
lock
adc
dec
sub
and
adc
push
xor
arpl
add
imul
test
sbb
(bad)
dec
pusha
jno
outs
mov
add
mov
outs
lods
jle
xor
icebp
push
lods
push
jmp
push
jbe
mov
push
stos
(bad)
push
xchg
jmp
dec
enter
sub
adc
xor
lods
sub
mov
xchg
ficomp
xchg
add
add
jmp
add
inc
aam
lds
jae
inc
or
(bad)
fst
test
add
inc
(bad)
or
lods
dec
sub
jmp
das
jbe
lea
fwait
ja
jnp
test
inc
add
inc
lea
sbb
int3
in
push
or
cs
icebp
push
lods
test
pop
stos
add
call
rol
jp
clc
gs
in
dec
cli
add
hlt
jge
(bad)
stc
clc
es
js
pop
stos
ret
unpckhps
inc
cwde
jmp
sbb
mov
test
cs
add
add
mov
adc
push
fst
xor
and
nop
jmp
shl
test
xor
sub
popf
fild
in
push
test
mov
xor
or
leave
mov
push
mov
mov
aad
fadd
pop
mov
add
jge
add
push
add
scas
sbb
mov
shr
sbb
or
mov
adc
push
sbb
adc
cmp
pushf
outs
mov
mov
jb
pop
lea
(bad)
mov
fsubr
push
sub
fsubr
clc
ja
rcr
fdivr
sub
or
sub
mov
lods
(bad)
adc
dec
sti
mov
mov
cmps
mov
js
sub
jns
cli
sub
push
mov
fadd
lods
push
mov
lea
js
(bad)
pop
popa
aad
mov
cvtps2pd
ret
test
ret
test
sub
pop
mov
js
mov
sbb
jmp
stos
(bad)
add
rcl
add
(bad)
mov
cmp
pushf
outs
pop
or
cmp
ror
cvtps2pd
jo
inc
cmp
cmp
in
mov
jmp
adc
test
dec
adc
lds
lods
sub
pop
push
adc
push
push
(bad)
loope
sub
cld
xor
jbe
cs
in
jl
ins
adc
inc
ja
dec
or
adc
test
mov
mov
fxtract
jge
(bad)
jl
jbe
call
out
inc
test
and
popf
push
stos
(bad)
bnd
add
jmp
nop
cwde
mov
in
(bad)
ins
xchg
in
aaa
push
mov
clc
test
ins
add
cwde
jmp
and
mov
mov
repnz
jmp
nop
cwde
fst
in
fiadd
jne
lea
js
ja
sub
add
test
jo
jae
enter
add
jmp
ja
cs
fst
add
popf
push
jp
clc
gs
in
pop
fldln2
(bad)
push
xchg
jmp
add
add
dec
sub
add
xchg
cmc
pop
xchg
imul
sub
cmp
add
mov
ins
adc
in
add
es
push
ss
aad
add
jnp
or
cdq
pop
stos
add
gs
mov
cdq
addr16
or
iret
jb
pop
mov
add
pop
inc
add
add
cwde
jmp
dec
mov
cs
pop
mov
add
dec
sub
sub
xchg
cmc
pop
xchg
add
or
dec
add
add
add
jge
test
or
in
(bad)
sbb
mov
ficom
or
push
movs
movs
arpl
(bad)
cdq
rcr
cld
pop
mov
xchg
lea
lods
inc
cmp
(bad)
add
pop
xchg
aas
adc
dec
mov
outs
stos
imul
movs
jmp
lea
pop
pop
lea
push
movs
(bad)
cli
addr16
sub
test
cli
xchg
jmp
(bad)
in
sub
jge
repnz
fstp
jbe
cmp
pop
hlt
ret
push
stos
out
pop
jmp
imul
push
push
add
repnz
xor
push
jl
jmp
or
add
test
or
std
push
and
jl
push
add
push
xor
add
stos
push
call
jmp
js
sbb
or
push
jmp
add
lods
clc
mov
outs
sub
mov
jbe
imul
pop
sbb
jmp
call
or
add
aam
in
ficomp
pop
lods
(bad)
clc
addr16
mov
cmp
lea
lods
jle
dec
add
push
jne
add
(bad)
jae
jbe
adc
hlt
fisubr
inc
adc
push
test
mov
ins
or
shl
outs
adc
out
shl
push
add
in
icebp
ja
add
repnz
sbb
outs
in
xchg
push
adc
push
and
jp
xchg
adc
fisubr
(bad)
dec
mov
or
xchg
icebp
push
jl
jmp
call
test
jge
js
sbb
or
mov
sbb
push
stos
(bad)
jge
adc
test
pop
test
jne
mov
in
push
jl
push
jg
push
jp
clc
gs
(bad)
(bad)
in
(bad)
jmp
jo
dec
cld
xor
or
test
or
mov
sub
push
jp
pop
pop
test
push
or
ins
mov
xor
add
jl
add
lods
push
or
mov
and
mov
addr16
sahf
cmp
scas
dec
adc
call
test
loop
cmp
lods
cs
jmp
jbe
lea
sbb
out
add
loope
lahf
ja
push
adc
and
ret
mov
dec
sub
and
imul
inc
push
call
push
adc
xor
ret
mov
adc
mov
ja
dec
mov
outs
mov
add
in
push
scas
xor
popa
mov
mov
cli
out
retf
out
in
jo
ret
ins
rcl
(bad)
clc
push
ret
push
jmp
inc
ins
shl
sbb
lds
sub
push
frstor
jae
add
xchg
pop
pop
or
out
adc
fnstsw
fild
popf
repnz
xor
push
lods
sub
dec
pusha
jno
outs
cmp
cmp
xchg
and
leave
adc
inc
pop
(bad)
ret
cmp
scas
dec
adc
sar
inc
in
and
xor
fild
cmc
(bad)
jb
jnp
cs
jb
imul
adc
sar
cli
pop
xchg
mov
jl
rol
adc
lea
sub
lods
push
lods
fdivp
bound
imul
xchg
imul
lock
sbb
imul
fisub
out
push
ja
dec
sbb
test
jae
push
stos
enter
or
adc
add
jmp
lods
(bad)
push
jne
scas
mov
sbb
cwde
jmp
add
jmp
push
mov
jns
push
jmp
movs
xor
es
push
imul
mov
in
push
xchg
or
cmp
(bad)
adc
mov
xchg
mov
in
(bad)
push
jns
cli
push
mov
lds
mov
cmc
ret
jbe
push
into
js
cli
imul
in
int
mov
dec
xor
xor
mov
push
mov
mov
repnz
jbe
imul
inc
std
inc
adc
fisubr
xor
loope
mov
push
aaa
cdq
pop
repnz
out
enter
je
adc
xchg
mov
(bad)
je
adc
ins
sub
stos
(bad)
gs
adc
xor
outs
mov
jecxz
dec
push
rol
(bad)
cmp
jnp
push
sub
in
push
jae
or
dec
lea
or
mov
shr
cs
jno
inc
add
fsubr
cmp
int3
outs
fnstenv
shr
mov
xor
pop
mov
add
out
(bad)
lods
rcl
pop
and
jge
or
mov
js
add
or
adc
mov
add
xchg
jo
push
cmp
or
dec
add
adc
xchg
or
add
lods
inc
hlt
adc
xchg
outs
mov
mov
mov
push
pushf
cli
push
sbb
adc
mov
jnp
js
inc
jmp
outs
movs
ret
mov
sub
(bad)
pop
test
sub
sbb
shr
sbb
fwait
push
jl
or
mov
mov
add
lea
push
mov
mov
clc
jge
in
pop
inc
add
mul
cwde
jmp
adc
push
sub
sub
dec
clc
xrelease
mov
cli
xor
jg
push
jp
clc
ins
out
mov
cmp
sbb
cs
mov
out
push
mov
push
push
adc
or
xor
push
lods
or
(bad)
jl
adc
lea
dec
adc
icebp
repnz
jns
push
jne
add
inc
cli
repz
imul
cmp
mov
push
adc
and
push
mov
cli
sub
ins
or
sahf
lods
jle
xor
icebp
push
lods
imul
or
jbe
lea
jbe
pop
mov
pop
inc
or
es
mov
mov
push
jp
(bad)
out
clc
push
shr
or
mov
imul
outs
mov
sbb
nop
cmc
push
mov
or
cs
cmc
push
mov
or
xor
sbb
cli
gs
lea
inc
cld
adc
jbe
xor
adc
lods
shr
push
test
push
xchg
sub
aam
push
js
ja
dec
and
out
loop
jb
popa
arpl
push
lea
mov
sbb
call
sub
retf
(bad)
(bad)
imul
stc
retf
cwde
jmp
xor
and
xchg
fidivr
or
mov
mov
pop
icebp
cmp
add
jno
loope
jl
js
out
sub
push
sub
cs
cmc
push
scas
and
lods
mul
push
inc
adc
xchg
jae
sbb
jnp
or
cs
mov
mov
or
sar
add
sbb
mov
push
cmps
or
push
sub
cmp
mov
cwde
inc
pop
push
sub
adc
(bad)
add
and
lods
ins
pop
ret
hlt
ins
xlat
in
cmp
add
xor
sbb
arpl
add
test
adc
into
test
mov
and
fwait
popf
bnd
mov
push
daa
mov
sbb
or
clc
bound
loop
push
adc
jbe
mov
inc
jbe
xor
sbb
clc
pop
mov
ja
test
hlt
imul
cli
xor
lods
(bad)
test
jnp
mov
lods
cli
add
add
add
scas
es
push
aad
js
imul
(bad)
xchg
repnz
adc
js
out
test
fwait
push
sub
push
aad
js
cli
jno
fisubr
in
push
outs
mov
sbb
mov
pop
lea
clc
sbb
sub
lods
or
sbb
nop
jmp
lea
js
imul
add
scas
es
sub
ins
add
add
addr16
sbb
nop
rcr
cli
mov
clc
xor
mov
shr
sbb
push
inc
fmulp
jecxz
ins
adc
pushf
imul
jge
js
ja
dec
sbb
test
mov
mov
mov
cmps
mov
and
push
sbb
ja
pop
das
jge
jbe
imul
lea
enter
or
push
lods
fiadd
scas
mov
push
mov
inc
popa
scas
mov
sub
adc
sub
shr
fcmovb
fiadd
adc
sub
mov
(bad)
push
mov
or
push
inc
xchg
lock
leave
sub
mov
cdq
cmp
popa
cli
add
cli
adc
aas
mov
call
and
jo
xchg
in
add
hlt
pop
cmp
sub
mov
inc
int3
test
sub
cmp
sub
in
(bad)
add
cdq
mov
(bad)
cdq
cmp
pop
cli
or
cmp
add
sub
adc
mov
jl
add
lods
stos
ins
aam
iret
sub
pop
aad
add
push
mov
sahf
push
jmp
adc
rcl
lea
xchg
pop
push
aam
iret
sub
push
js
fldcw
add
push
sub
adc
clc
imul
sub
mov
stos
jmp
cld
add
lock
add
adc
add
adc
or
add
mov
add
lock
or
pop
sub
push
in
(bad)
mov
out
test
dec
xchg
cs
test
mov
imul
ret
mov
and
lods
stos
push
dec
test
sub
add
add
jl
add
pop
and
add
add
add
add
inc
inc
in
fisubr
or
(bad)
out
push
cdq
jbe
arpl
test
mov
push
outs
sub
jg
clc
test
push
bound
push
cli
ins
xchg
(bad)
add
lods
shr
sbb
inc
mov
(bad)
fnsave
arpl
or
mov
push
arpl
cmp
add
test
fst
sbb
(bad)
fst
jmp
std
fild
add
mov
lods
jbe
adc
fisubr
inc
xchg
cs
fstp
cmp
ins
loopne
sbb
adc
add
xchg
ficomp
add
test
add
lods
inc
test
push
popa
fstp
xchg
pop
stos
jmp
enter
or
pop
popf
jg
add
js
cmp
add
idiv
std
adc
pop
xchg
jl
js
pop
lods
pop
inc
cs
sbb
push
jg
clc
(bad)
fild
add
mov
lods
jbe
(bad)
rcl
add
clc
xor
outs
sub
adc
push
(bad)
xchg
lock
leave
cmp
iret
dec
outs
sub
out
xor
add
or
(bad)
je
adc
ins
fst
stos
(bad)
mul
sub
outs
out
ins
adc
jmp
outs
adc
test
pop
xor
dec
mov
outs
mov
pop
xor
leave
push
add
sbb
xchg
jne
add
pusha
jb
or
sub
and
add
pop
xor
test
jmp
jmp
in
push
cdq
outs
cmp
add
hlt
adc
fstp
dec
or
sub
dec
fprem
sbb
add
add
pop
push
dec
push
clc
ins
inc
push
jmp
(bad)
push
in
cmc
or
xchg
in
mov
sbb
jle
sar
cli
or
out
sub
sbb
or
popf
push
mov
cli
inc
mov
test
test
es
mov
scas
loop
bound
ficomp
xor
les
sub
xor
jbe
sub
or
push
loopne
(bad)
out
in
sbb
sbb
out
sub
cli
mov
ja
push
call
or
mov
or
adc
(bad)
repnz
mov
test
outs
fcomp
jg
ins
xchg
mov
jbe
add
jecxz
jg
adc
sub
jb
js
xor
js
ja
xchg
lea
jbe
imul
ret
test
jbe
xor
dec
sbb
jmp
in
adc
mov
push
mov
cmp
pop
mov
icebp
das
loope
jmp
mov
test
in
repz
adc
rcr
jbe
add
sar
dec
add
cs
cmc
pop
mov
xchg
scas
adc
adc
pushf
push
sub
push
push
add
mov
add
shl
pop
jmp
adc
ins
adc
or
xchg
cmc
pop
xchg
mov
sub
push
jne
fisubr
out
sbb
dec
sub
shr
(bad)
jo
mov
add
ja
inc
xor
mov
(bad)
imul
scas
add
push
pop
outs
sub
(bad)
pop
push
jmp
rcr
cli
lock
pop
aad
adc
lea
jne
lea
ins
adc
ss
push
sub
jmp
rcr
cli
add
lods
push
stos
sar
push
cmp
aas
inc
add
mov
scas
adc
fwait
ja
jbe
jmp
rcr
sub
adc
mov
mov
add
ja
inc
xor
mov
(bad)
sub
jmp
rcr
pop
inc
adc
lods
mov
xchg
sub
adc
fisttp
add
lahf
adc
lea
push
mov
push
retf
jnp
mov
mov
or
cs
icebp
push
mov
or
cwde
jmp
adc
loopne
scas
cli
push
or
mov
push
or
xchg
fidivr
dec
lods
push
sahf
fdivrp
pop
xchg
addr16
dec
sbb
cwde
imul
lea
enter
xchg
clc
sub
dec
mov
scas
fisub
adc
inc
xlat
test
or
cwde
jmp
mov
hlt
ja
xor
sub
aam
xchg
(bad)
(bad)
mov
pop
test
sub
pop
adc
xchg
mov
jg
pop
xor
call
sub
jns
cli
mov
clc
xchg
jb
jae
or
clc
(bad)
pop
push
dec
out
scas
adc
mov
(bad)
out
mov
shr
sbb
add
outs
sub
test
in
adc
inc
adc
cmp
fimul
cli
gs
mov
js
pop
lods
js
push
pop
lods
sar
jne
in
(bad)
dec
add
repnz
adc
psraw
adc
add
test
mov
in
jae
in
fidiv
and
sahf
test
jle
in
lods
clc
ins
dec
push
ja
lea
cli
push
inc
(bad)
ret
jo
lods
je
adc
jmp
push
shr
pop
xchg
pop
and
movs
pop
pop
retf
out
in
scas
cli
push
lods
push
mov
add
retf
ror
into
jb
pusha
movs
ret
mov
pop
push
in
pop
xor
(bad)
out
(bad)
jmp
mov
arpl
sub
add
(bad)
jae
jbe
add
repnz
sub
movs
cmp
mov
fadd
add
in
mov
in
(bad)
mov
lods
push
add
mov
jnp
cli
pop
xchg
lea
scas
outs
sub
lahf
ja
in
cli
test
icebp
je
or
inc
xchg
jmp
xchg
jmp
sub
outs
jmp
sbb
retf
imul
push
scas
xor
push
push
add
cli
stos
mov
js
push
mov
xor
or
jo
ret
ins
rcl
lea
pop
or
jge
xchg
mov
in
inc
push
add
pop
and
adc
seta
(bad)
mov
mov
outs
sub
cs
icebp
pop
mov
or
jbe
lea
repnz
mov
icebp
out
call
jp
sbb
add
(bad)
ror
(bad)
jae
lock
test
sub
mov
sub
outs
sub
outs
mov
pop
push
stos
sub
es
shr
push
sub
add
clc
gs
cmp
cli
ins
(bad)
in
bound
add
repnz
mov
lock
aad
fcomi
ja
in
in
pop
add
repnz
outs
test
push
ins
adc
ja
fisubr
inc
adc
jne
fisubr
pop
(bad)
stc
mov
pop
test
mov
sbb
add
lods
push
jmp
lea
adc
adc
and
jo
addr16
xlat
nop
imul
xchg
imul
lods
clc
gs
xchg
sbb
arpl
xor
pop
xor
jp
test
add
dec
std
push
repnz
repz
xor
jne
mov
lahf
adc
xlat
fisubr
ret
xchg
or
add
scas
(bad)
or
mov
in
add
adc
pop
push
push
stc
mov
fst
test
jp
in
cmps
push
jp
in
jecxz
sbb
rcl
inc
je
jl
adc
popa
xor
frstor
push
call
mov
pop
rol
adc
dec
mov
outs
adc
push
test
scas
dec
adc
test
fisubr
jmp
in
shr
sbb
mov
or
lea
repnz
adc
or
push
or
adc
or
fisttp
(bad)
fmul
hlt
jne
push
adc
jle
xor
stc
repnz
push
adc
or
pop
sbb
fisubr
or
es
loope
mov
push
test
outs
pop
pop
mov
loopne
ins
mov
and
push
lods
add
sub
or
add
loop
test
ins
add
adc
(bad)
fisubr
ret
xchg
or
add
scas
(bad)
adc
std
push
stos
sar
sub
xchg
dec
mov
outs
mov
in
xor
adc
fs
mov
jge
sbb
or
std
push
mov
in
icebp
jbe
adc
push
fisubr
ret
cmp
pop
in
adc
mov
retf
sar
sbb
ins
adc
sub
add
test
stos
data16
sub
dec
adc
push
fisubr
jmp
out
in
sbb
push
lea
pop
pop
add
lahf
and
dec
or
sar
or
adc
push
in
stos
push
cli
gs
ficomp
add
xor
xchg
(bad)
adc
pop
into
sub
shr
jnp
pusha
bound
push
adc
add
inc
jno
outs
adc
mov
pushf
mov
xchg
adc
cmp
push
pop
stos
push
clc
gs
cmp
call
sub
add
bnd
adc
cmc
repz
sbb
pushf
outs
mov
mov
inc
repz
jb
jae
inc
lock
fisubr
ret
mov
mov
sub
and
js
sbb
and
xor
cli
and
xor
push
push
xchg
push
stos
adc
dec
sub
nop
imul
call
hlt
pop
out
adc
in
icebp
sub
mov
jae
mov
(bad)
sti
mov
or
lea
adc
xlat
js
imul
jbe
js
pop
mov
or
mov
fisub
loopne
popf
push
inc
lea
xchg
jae
push
lea
lahf
pop
leave
xlat
nop
imul
lahf
dec
aas
nop
imul
(bad)
sti
mov
or
lea
repnz
push
call
cmp
cmps
ret
xchg
cs
cs
fst
xor
jle
shl
add
push
es
push
stos
repnz
adc
adc
ins
mov
clc
imul
adc
push
adc
add
call
je
cvtps2pd
cs
fs
sahf
sahf
push
mov
into
in
fiadd
xor
adc
xchg
int3
sbb
pushf
outs
sub
loope
stos
fisubr
pop
lea
add
popf
lahf
js
inc
jmp
lods
(bad)
mov
add
mov
push
adc
jmp
outs
mov
or
in
fisubr
inc
sbb
shl
sti
mov
pop
inc
add
push
retf
fisubr
ret
mov
or
popf
(bad)
popf
(bad)
jbe
xlat
adc
rcr
push
mov
sub
jg
push
jp
clc
gs
inc
stos
in
(bad)
jmp
scas
xor
mov
call
shr
fisub
pop
js
jae
nop
lea
xchg
jae
inc
lea
pop
mov
cld
xor
adc
js
imul
jbe
js
add
fcmovu
sahf
mov
mov
outs
add
add
jp
cdq
sub
push
add
add
lods
push
mov
push
mov
or
push
mov
clc
test
ins
add
pop
test
push
jmp
jbe
cs
icebp
push
outs
inc
inc
adc
js
pop
mov
or
xchg
fiadd
jne
(bad)
(bad)
jge
stos
sbb
add
adc
xor
cli
ins
mov
clc
imul
adc
push
adc
add
cs
push
jne
xchg
fs
sahf
sahf
push
stos
inc
xchg
fs
add
adc
xchg
mov
in
pop
lea
sbb
mov
xchg
adc
scas
dec
adc
xchg
jmp
gs
fwait
js
sub
mov
scas
jae
mov
jns
js
jbe
inc
add
test
fidivr
or
push
iret
js
ja
jnp
test
inc
(bad)
sti
or
jnp
or
xor
adc
test
stc
pop
stos
not
push
cmps
adc
dec
sub
adc
pop
jmp
test
in
push
pop
mov
or
nop
jmp
and
xchg
cmc
(bad)
jmp
stc
repnz
sub
push
mov
or
mov
cmc
mov
add
lods
xor
std
pop
cmc
push
jg
leave
push
mov
movs
movs
stos
icebp
lds
popf
js
repnz
xchg
mov
push
stos
(bad)
sub
ins
add
inc
repz
add
push
add
ds
jge
dec
cs
dec
inc
repz
jb
pop
mov
cld
adc
fisubr
ret
mov
sbb
sub
test
sub
(bad)
mov
in
cmp
scas
dec
adc
nop
jmp
adc
lods
and
mov
sub
push
mov
sbb
sub
xor
dec
adc
iret
sbb
cli
jge
(bad)
jl
jbe
add
pop
pop
test
lods
inc
add
mov
or
adc
sbb
gs
repnz
repz
mov
cmps
mov
(bad)
lock
fstp
pushf
mov
arpl
aad
push
lods
sub
js
js
out
test
(bad)
push
pop
pop
lea
(bad)
cmp
mov
mov
fidivr
mov
adc
push
dec
outs
jbe
popa
pop
push
xchg
outs
mov
xchg
adc
jp
cli
cmp
cmp
lahf
shr
test
pop
mov
shl
or
mov
popa
retf
out
in
jo
ret
ins
rcl
xchg
les
jno
outs
add
add
inc
inc
adc
xchg
sbb
xchg
test
add
hlt
xlat
fs
push
repnz
sbb
mov
clc
pop
sub
call
jl
push
gs
clc
lods
shr
add
loope
stos
(bad)
add
call
daa
jne
mov
push
sbb
sub
sub
or
outs
inc
fwait
xchg
mov
or
sbb
pushf
outs
inc
pop
or
iret
jbe
ja
clc
(bad)
pop
outs
sub
fimul
jbe
cs
cmc
pop
mov
or
daa
or
adc
in
fisubr
dec
sbb
nop
(bad)
cli
push
sub
lods
push
mov
pop
cmp
push
popa
stos
jge
test
push
sbb
fsubr
push
ja
dec
sbb
xchg
(bad)
cli
sub
lods
test
(bad)
clc
clc
jmp
pop
lods
or
sbb
nop
jmp
lea
js
imul
sbb
mov
xchg
sbb
aad
nop
add
add
sbb
sub
lods
or
or
aad
push
lods
sub
jl
pop
cmc
repnz
aam
scas
cli
push
add
mov
xor
mov
adc
lods
add
(bad)
cli
cmp
jbe
inc
cld
sub
or
push
iret
js
ja
jnp
test
add
(bad)
jne
mov
xchg
cli
outs
fwait
lea
jne
mov
lahf
pop
adc
xor
inc
add
push
jne
outs
test
stos
repnz
adc
adc
push
mov
imul
call
test
sti
mov
or
xchg
icebp
push
lods
cs
add
add
sub
cli
or
mov
and
mov
addr16
jo
addr16
or
cs
in
outs
pop
or
push
lock
hlt
jge
(bad)
jl
jbe
sti
adc
test
mov
cli
sub
jg
push
jp
clc
gs
into
mov
(bad)
jmp
jg
or
adc
fisubr
inc
sbb
nop
jmp
jne
shl
cli
imul
addr16
lea
xchg
imul
push
lods
sbb
mov
jp
clc
gs
in
cmps
into
in
fiadd
jne
(bad)
ins
hlt
pushf
stos
mov
shl
pop
lods
jbe
adc
int
outs
cmps
ret
mov
push
stos
sar
ins
xchg
lea
es
bound
das
out
outs
push
or
pop
call
outs
int3
ins
sbb
pop
add
mov
jge
gs
xor
test
add
sar
dec
fbstp
and
add
in
mov
add
sar
cli
jo
lea
sbb
cli
xor
jnp
sar
cli
jge
(bad)
ret
(bad)
sub
jecxz
fstp
fsqrt
jno
xchg
sbb
mov
mov
lea
push
jg
or
cwde
cmc
push
lahf
cs
retf
out
in
jo
ret
ins
rcl
xchg
and
add
xchg
mov
dec
fcom
fild
add
lods
dec
les
or
add
ins
shl
mov
shr
push
scas
and
popf
mov
jmp
stos
shr
push
mov
add
push
and
sar
mov
xor
js
addr16
or
mov
xchg
ja
xor
js
addr16
add
mov
or
xchg
in
mov
jbe
xor
inc
sbb
push
in
fisubr
mov
jl
or
mov
xchg
outs
jbe
cmp
sahf
mov
in
fxch
in
(bad)
push
out
push
lods
es
lods
or
sbb
cwde
jmp
adc
div
sub
push
sbb
fsubr
push
ja
dec
sbb
xchg
(bad)
cli
sub
lods
not
rol
imul
sub
call
lods
fisubr
mov
push
mov
pop
in
xchg
retf
hlt
push
xchg
outs
das
pop
outs
add
add
scas
and
lods
or
or
shl
imul
fidiv
sbb
in
and
in
push
lods
es
repnz
retf
adc
js
ja
pop
daa
jl
sbb
cli
repnz
shr
sbb
fidivr
imul
jl
jbe
imul
mov
dec
sbb
or
cmp
retf
adc
jmp
ucomiss
mov
icebp
inc
mov
cmp
fnstsw
sbb
int3
cs
cmc
ret
ja
xor
push
sbb
push
lds
jae
lds
repnz
ficomp
sub
pop
lods
push
sub
daa
add
adc
push
mov
adc
mov
add
(bad)
je
adc
xchg
mov
(bad)
je
adc
ins
inc
and
fs
inc
fisubr
jbe
adc
add
push
mov
xchg
jg
in
mov
or
jmp
jnp
test
adc
xchg
ja
mov
pop
xchg
jp
clc
ja
mov
push
stos
fimul
xchg
sbb
mov
les
sub
xor
cmp
jge
pop
xchg
xor
pop
mov
(bad)
repnz
push
aaa
mov
xchg
sbb
lea
outs
inc
pop
or
dec
imul
sub
sbb
cmc
push
adc
shr
adc
ja
mov
js
clc
sbb
call
call
es
xor
push
inc
mov
or
loope
xchg
ja
inc
sbb
aad
push
lods
sub
push
mov
in
adc
xchg
jmp
mov
xor
hlt
jae
xchg
jmp
xor
push
pusha
mov
mov
fucomi
adc
outs
sub
mov
shr
pop
xchg
adc
in
in
fisubr
xchg
cmp
mov
add
sar
sub
adc
pushf
pop
sub
(bad)
test
xor
jnp
sar
cli
sub
jl
sar
cli
imul
or
mov
fstp
adc
nop
(bad)
sub
int
fisubr
push
or
mov
push
mov
leave
pop
popf
sar
ja
rcr
imul
adc
ins
sbb
and
xchg
(bad)
cli
lock
pop
popf
rcl
lea
jne
lea
ins
sbb
xor
shr
pop
sub
jmp
(bad)
cli
add
lods
xor
push
lods
sub
push
inc
in
mov
push
add
push
adc
xchg
(bad)
pop
outs
adc
repz
lods
push
or
or
(bad)
repz
adc
shr
popf
pop
sub
in
(bad)
cmp
in
mov
loope
stos
(bad)
mov
ret
scas
dec
adc
loopne
xchg
imul
(bad)
test
mov
or
loopne
stos
ja
xchg
xchg
jg
in
(bad)
jb
dec
sbb
mov
or
fst
dec
je
xchg
or
lods
(bad)
test
clc
xor
push
lods
vmread
cli
pop
mov
out
test
nop
imul
push
pop
(bad)
cvtps2pd
and
hlt
push
mov
jge
push
mov
in
push
xor
jbe
ja
inc
sbb
jbe
inc
and
inc
adc
test
fisubr
pop
sub
xchg
fidivr
imul
push
mov
jmp
add
pop
mov
or
shr
int
add
ret
fiadd
xor
push
stos
pop
pop
xor
push
jp
pop
xor
add
push
loopne
mov
mov
sbb
or
mov
test
outs
jbe
(bad)
push
icebp
push
lods
push
push
dec
mov
mov
jne
xchg
sbb
push
and
adc
mov
or
mov
and
clc
ret
gs
mov
div
push
test
or
mov
stos
and
jl
push
xor
push
xor
imul
out
outs
jbe
mov
pop
fwait
cmp
hlt
pop
in
sub
fidivr
or
push
fidivr
ja
shr
lods
push
xor
jl
sar
clc
je
in
mov
fdivrp
sbb
and
(bad)
cmc
(bad)
imul
out
outs
mov
sbb
lea
ror
jae
mov
js
ja
dec
sbb
test
inc
sbb
sar
imul
lods
pop
out
icebp
jb
inc
or
xchg
jmp
dec
popf
dec
sub
adc
loopne
scas
push
mov
mov
sub
jge
shl
pop
popa
sub
fisubr
sub
shr
outs
sub
(bad)
jle
push
or
mov
fidivr
xchg
mov
fisubr
in
bnd
adc
cmc
pop
mov
in
fisubr
adc
inc
or
mov
fstp
or
mov
test
jo
xchg
lea
push
adc
xchg
(bad)
pop
sbb
sar
push
jne
pop
call
scas
sar
lock
push
popf
rcl
jmp
shr
(bad)
adc
sub
push
sub
shr
(bad)
xor
jnp
sar
cli
imul
xchg
sbb
inc
sub
es
mov
lods
loop
add
push
adc
out
jo
xchg
lea
add
ja
inc
sub
adc
test
push
jne
pop
call
out
push
xor
clc
jle
outs
sub
pop
popf
shl
adc
(bad)
cmc
mov
lock
xchg
clc
jb
lea
ins
xchg
mov
fnstenv
ficomp
js
clc
pop
mov
outs
jne
mov
js
imul
push
mov
jge
push
mov
in
adc
mov
xchg
mov
or
xchg
jmp
addr16
js
cli
pop
mov
out
test
nop
imul
push
pushf
xor
mov
and
hlt
push
mov
jge
push
mov
in
push
xor
jbe
ja
inc
sbb
ficomp
shr
leave
and
(bad)
jge
jbe
hlt
jb
cmp
pusha
lods
dec
or
push
jns
clc
sbb
push
popf
shl
pop
jmp
lea
xchg
adc
sub
or
fdivr
jae
dec
sbb
xchg
fst
xor
xor
or
lods
out
outs
call
das
(bad)
outs
push
or
push
call
pushf
sar
cli
div
add
push
cmp
in
add
js
sahf
adc
test
sub
add
movs
arpl
lods
rcl
pop
test
sub
mov
xor
out
adc
add
push
jne
(bad)
jae
sub
mov
jmp
add
xor
sub
xchg
ficomp
or
dec
les
in
bnd
add
mov
mov
push
add
or
mov
jmp
sbb
in
mov
out
in
jo
ret
ins
rcl
(bad)
clc
pop
jp
cli
jge
imul
stos
data16
lods
push
adc
retf
lods
sub
test
add
sub
shr
fisubr
dec
mov
pop
dec
xor
push
(bad)
pop
add
(bad)
cmc
push
lahf
sub
(bad)
(bad)
stc
push
add
lods
inc
add
test
adc
lea
test
imul
jmp
jge
add
test
push
push
frstor
jmp
add
add
sti
fiadd
xor
push
stos
pop
scas
sub
test
push
jmp
inc
shr
pop
sub
leave
sbb
test
js
repnz
adc
shr
jnp
push
in
or
fisubr
cmps
add
test
jmp
outs
sub
stos
dec
sub
mov
js
inc
lods
sub
dec
loope
jecxz
push
inc
add
pop
push
push
cmp
add
stos
(bad)
xor
pop
fisubr
add
add
hlt
add
stos
clc
icebp
dec
outs
sub
push
add
imul
es
jnp
push
xchg
lock
pop
push
into
js
clc
daa
add
test
inc
dec
sbb
adc
imul
pop
cmp
xchg
or
jmp
pop
shr
mov
lock
push
outs
mov
ds
jge
pop
and
mov
(bad)
stos
jo
(bad)
push
push
jne
inc
jmp
stos
fild
mov
push
jbe
ret
vmread
sahf
adc
and
mov
xchg
lock
push
jno
xchg
ds
jge
pop
and
mov
(bad)
stos
jo
(bad)
push
push
jne
inc
jmp
stos
fild
mov
push
jbe
ret
vmread
cli
sub
sbb
mov
pop
mov
sar
ja
fmul
inc
add
(bad)
xor
or
pop
movs
out
test
cld
cmps
add
pop
and
adc
(bad)
stc
test
pop
add
es
sbb
jmp
sbb
rcr
inc
jmp
pop
retf
cdq
adc
imul
leave
std
mov
in
lods
pop
in
cmps
es
adc
xchg
push
adc
xor
add
push
mov
or
mov
clc
xor
mov
mov
movs
in
mov
push
adc
add
xchg
(bad)
lahf
outs
xchg
adc
shr
stos
mov
xor
fcomp
test
adc
shr
push
sub
cmc
pop
xchg
or
add
push
fdivr
pop
mov
or
xchg
fst
push
or
rol
in
icebp
jg
es
test
enter
jbe
xchg
call
ja
outs
leave
clc
aas
imul
cmp
pop
jbe
lea
sub
mov
push
mov
aam
icebp
ja
pop
dec
ss
add
shr
adc
lock
pop
stos
movs
adc
push
jbe
ja
lea
lods
or
mov
ja
(bad)
loopne
mov
xor
xor
shr
fimul
ja
xchg
pop
push
call
xchg
fxtract
add
jb
adc
dec
fisubr
dec
cmp
add
dec
sbb
pushf
jae
inc
cmp
jbe
lea
lock
or
adc
add
es
jmp
sub
call
adc
movs
movs
stos
mov
pop
out
in
jo
ret
ins
rcl
(bad)
clc
rol
ja
sti
sbb
jo
or
js
clc
jge
xchg
add
mov
or
sub
add
not
adc
fwait
adc
pop
push
(bad)
pushf
ja
adc
repnz
ins
movs
ret
mov
sub
pop
std
jbe
ins
out
das
lods
(bad)
cmp
mov
and
fwait
adc
pop
adc
push
lea
jne
(bad)
je
adc
lea
lahf
pop
adc
xchg
pop
adc
add
js
ja
lds
rol
ja
or
mov
mov
sbb
lea
inc
or
lods
pop
xchg
clc
xor
test
test
add
loopne
test
out
ret
adc
in
loopne
repz
and
test
scas
xor
mov
push
dec
cdq
push
jg
dec
stc
ja
cs
or
es
push
mov
fdivr
cli
sbb
inc
xor
movs
movs
stos
jmp
dec
inc
dec
add
outs
adc
or
mov
inc
cwde
cmc
pop
mov
adc
sub
xchg
jnp
dec
mov
jns
mov
inc
stos
(bad)
ins
xlat
in
jmp
test
adc
lea
stos
hlt
gs
fs
pop
add
ins
shl
rcr
(bad)
dec
shr
pop
inc
sub
mov
(bad)
in
(bad)
ins
ret
ins
rcr
xchg
jmp
inc
inc
adc
add
fisub
clc
xchg
(bad)
outs
sub
push
lods
add
imul
in
sahf
vpminub
cli
add
adc
xchg
outs
inc
or
dec
adc
fisubr
xchg
fsubr
fisubr
mov
ins
rcl
adc
cmc
pop
pop
sub
fidiv
shr
xchg
jbe
es
shl
mov
push
dec
sub
jmp
push
dec
push
sub
add
pop
or
adc
movs
push
add
ins
shl
cmps
inc
add
(bad)
aas
outs
sub
das
adc
adc
shl
fsub
and
fsubr
out
fs
lds
and
adc
retf
adc
sub
shr
fisub
imul
in
push
mov
jmp
xchg
add
lods
sahf
push
(bad)
sub
add
push
pop
enter
in
fisubr
repz
add
xchg
push
pop
or
adc
(bad)
repz
pop
(bad)
pop
aam
adc
je
adc
(bad)
ins
dec
popf
push
in
cmp
add
mov
adc
cmp
push
jmp
(bad)
add
add
lahf
add
adc
ret
xchg
sub
dec
(bad)
jecxz
push
inc
add
pop
push
xchg
or
add
lahf
adc
add
xchg
push
pop
or
adc
fcomp
sub
aam
aad
fisubr
imul
shr
inc
cmp
inc
adc
lods
push
fisubr
inc
pop
mov
adc
adc
pop
adc
hlt
pop
shr
adc
stos
xchg
mov
mov
lods
inc
stos
(bad)
ins
add
cmp
add
xor
movs
add
ins
add
fisubr
jmp
add
add
sti
fiadd
xor
movs
add
and
jmp
sub
adc
es
daa
loope
hlt
sti
or
sub
in
out
in
and
jg
and
pop
movs
in
adc
outs
sub
fcom
lods
dec
mov
push
lods
inc
mov
push
inc
fs
in
and
add
xchg
not
push
test
inc
in
sbb
xor
das
sub
mov
push
mov
pop
xor
add
inc
lahf
lods
push
inc
add
add
cs
test
test
lahf
outs
lods
push
inc
add
add
popf
inc
add
adc
cwde
jmp
ret
inc
adc
xchg
sbb
xor
add
hlt
xlat
fs
or
in
retf
sti
add
xchg
not
push
test
inc
jmp
add
mov
adc
aad
and
fisubr
stc
std
ins
rcl
adc
cmc
pop
pop
sub
fidiv
shr
xchg
jbe
ss
shl
mov
push
dec
sbb
mov
push
sbb
add
pop
or
adc
cmp
mul
ins
shl
xchg
inc
add
mov
outs
sub
das
mov
in
pop
mov
sbb
or
xchg
loop
or
sub
jecxz
in
xchg
xchg
jmp
loope
in
and
es
fsubr
adc
and
dec
inc
(bad)
in
push
mov
jmp
mov
add
lods
into
push
(bad)
sub
add
push
pop
enter
in
fisubr
mov
push
pop
or
adc
(bad)
repz
xor
aam
rcl
je
adc
xchg
mov
(bad)
sub
add
push
pop
jmp
cld
add
sti
fiadd
xor
in
push
(bad)
jmp
mov
sbb
int3
rcr
fsubr
xchg
dec
shr
sbb
mov
repnz
adc
cmc
aad
jb
xchg
adc
jns
mov
xchg
mov
cmp
mov
js
inc
lods
sub
dec
(bad)
ret
jno
inc
add
pop
push
push
push
mov
add
stos
(bad)
gs
adc
sub
sub
es
or
mov
cmp
in
sbb
or
scas
cwde
jmp
in
adc
js
jbe
dec
or
hlt
icebp
lods
in
icebp
jg
es
test
stos
cli
sbb
jo
outs
jne
lea
push
or
es
fidivr
or
mov
add
push
add
push
pop
ins
(bad)
adc
clc
sbb
push
lods
nop
sbb
inc
jmp
outs
sub
jecxz
(bad)
in
repnz
adc
cmc
push
lods
xor
aam
mov
jnp
imul
ret
pop
add
mov
or
jp
add
mov
add
stos
(bad)
movs
jae
add
popf
bnd
adc
push
jg
clc
mov
push
lea
fld
sub
or
adc
lea
jg
sub
push
adc
(bad)
cs
test
pop
push
pop
adc
sub
cs
in
outs
lods
jle
push
cmpxchg
adc
clc
fisubr
ret
xchg
push
addr16
inc
aam
aam
add
stc
dec
sub
sbb
push
or
pop
jmp
scas
shr
sbb
inc
out
jbe
pop
push
stos
es
mov
or
rcl
lea
jne
mov
lahf
call
aas
push
test
sbb
cmc
sbb
inc
(bad)
gs
fdivr
add
cli
call
in
sbb
ins
adc
dec
data16
outs
adc
mov
ja
data16
inc
sti
add
push
sub
fdiv
add
adc
fisubr
xchg
dec
in
fisubr
rcr
ins
rcl
lea
pushf
ja
ret
mov
xchg
stos
mov
(bad)
adc
jg
sub
push
inc
mov
add
pop
clc
imul
(bad)
add
add
sbb
lods
jle
adc
cli
add
ins
add
fisubr
jmp
add
add
mov
add
push
dec
mov
out
push
lods
push
pop
mov
lahf
add
popf
push
movs
push
jmp
mov
in
push
ins
mov
sbb
shl
and
jbe
and
push
push
test
sbb
in
push
pushf
push
jmp
cld
add
das
jbe
in
dec
fldln2
(bad)
cli
add
mov
mov
lods
push
push
(bad)
ins
push
adc
add
push
jne
(bad)
ins
push
push
push
in
js
ja
sub
int3
in
(bad)
xor
lods
push
jp
clc
ins
out
mov
jge
sub
bound
lea
fcom
mov
stos
(bad)
pop
stos
test
mov
fsubr
jo
ret
ins
rcl
(bad)
clc
push
stos
shr
jmp
xchg
xchg
ds
test
sub
add
push
outs
lods
inc
rcr
outs
lahf
adc
add
xchg
push
pop
or
mov
jp
rcr
cvtps2pd
xor
adc
lods
inc
in
pop
push
stos
and
fsubr
(bad)
xor
lods
pop
stos
(bad)
cli
sub
dec
or
loop
sub
jg
push
jp
clc
ins
fisttp
js
sbb
fimul
pop
test
or
mov
shr
push
jmp
adc
add
or
(bad)
lods
rcr
jl
loopne
(bad)
push
in
cmps
dec
sub
or
iret
add
lods
rcr
xchg
add
lods
mov
add
popf
js
mov
retf
push
cmp
cmp
outs
das
push
shr
adc
arpl
mov
jmp
lock
das
es
in
hlt
add
adc
xor
push
add
cmps
in
rcr
and
jo
jae
jecxz
in
mov
retf
out
sub
ret
mov
mov
ja
jno
jmp
fild
call
dec
ficom
stc
push
stos
fisub
and
hlt
sti
or
(bad)
popa
fld
mov
add
mov
jmp
or
inc
add
mov
sbb
or
adc
aas
test
loope
retf
sbb
add
push
aad
rol
ja
ja
jno
mov
aam
mov
and
loopne
sti
or
adc
in
out
in
es
sar
and
push
arpl
in
repnz
add
imul
pusha
pshufw
jecxz
ret
push
adc
fsubrp
icebp
jg
or
sbb
and
fcomip
add
mov
mov
push
lea
imul
sbb
test
adc
lea
fisubr
add
xchg
or
jecxz
or
fsubr
ret
pop
mov
add
ins
add
add
add
and
jl
and
mov
clc
gs
call
sub
jmp
push
inc
cmp
add
xor
jmp
adc
cmp
inc
or
mov
jmp
lock
xchg
mov
sar
cmp
fisubr
jge
shr
xchg
adc
push
ins
in
das
lods
fisub
int3
fwait
push
ja
push
pushf
test
dec
test
ins
(bad)
(bad)
mov
inc
in
shl
in
fidiv
xor
pop
xor
sti
test
fcom
movs
retf
push
sahf
loop
sbb
or
fdiv
imul
or
pshufw
or
ret
jo
or
js
in
icebp
ja
mov
mov
ja
les
imul
push
mov
xor
test
out
sbb
shr
ficom
adc
leave
jp
jnp
lods
xchg
jne
in
cld
outs
add
cli
out
pop
out
in
jo
ret
ins
rcl
(bad)
loopne
jp
cdq
es
sub
in
mov
xor
sbb
inc
jmp
pop
inc
mov
or
sbb
and
das
es
add
xor
adc
mov
push
mov
or
push
stos
loop
jb
xchg
add
(bad)
push
mov
xchg
add
retf
in
std
push
stos
loop
xor
mov
jb
xchg
add
(bad)
imul
loop
imul
push
mov
sub
jns
adc
in
push
mov
jmp
mov
in
jo
xchg
sub
in
fidiv
push
or
es
fldcw
pop
fwait
jbe
pop
mov
add
(bad)
loope
imul
in
jo
hlt
add
dec
outs
sub
xchg
jo
or
test
ins
add
cwde
jmp
push
or
mov
stos
jmp
sub
adc
add
cdq
sub
push
aas
js
addr16
or
iret
jb
jmp
std
repnz
and
jns
cli
imul
jae
pop
and
xor
sub
push
(bad)
rcr
sbb
jne
lea
fsubr
sub
add
jmp
ja
cs
fst
dec
xchg
pop
stos
add
popf
xchg
push
popf
fdivp
in
xchg
(bad)
jmp
aam
mov
xchg
add
mov
mov
inc
add
xchg
fnstenv
adc
(bad)
pop
lods
pop
and
or
cwde
jmp
sbb
push
add
loop
test
ins
add
pop
xchg
push
jp
jmp
jbe
cs
icebp
push
lods
sbb
push
adc
add
das
jbe
lea
fwait
ja
jnp
test
cmps
lea
add
xchg
ficomp
mov
jp
mov
ds
lea
jmp
push
mov
js
cmps
pusha
pop
retf
out
in
jo
ret
ins
rcl
lea
add
ret
lahf
outs
lods
dec
in
mov
add
test
lods
dec
lods
adc
jno
push
xchg
aas
in
shl
xlat
pop
jmp
and
in
push
jl
jmp
cmps
shr
push
bound
jmp
(bad)
cmc
pop
xchg
or
mov
sub
cmc
push
dec
inc
les
outs
mov
sbb
lea
dec
or
xchg
in
cmps
es
xor
mov
icebp
jb
or
jne
xchg
add
mov
shr
cdq
push
in
push
adc
pop
xchg
or
xor
mov
movs
or
shr
inc
sub
adc
call
repnz
push
aaa
mov
or
mov
dec
mov
mov
es
xor
enter
xchg
xchg
or
ja
mov
push
mov
dec
mov
scas
fdivrp
ins
mov
imul
push
jae
cmp
adc
imul
pop
das
cmp
not
mov
ud2
adc
xchg
adc
sub
aad
inc
ror
js
jae
ins
cmp
jbe
add
sbb
cmp
retf
pushf
sbb
stos
jp
test
sub
retf
mov
aas
sub
cs
cmc
pop
xchg
add
xor
push
mov
sub
aaa
stos
shr
push
mov
or
shl
imul
shr
nop
mov
adc
stc
outs
fisubr
add
sar
push
jne
fisubr
out
push
xor
clc
pop
fild
or
sub
or
mov
test
jo
movs
lea
jne
fisubr
in
push
add
(bad)
cmc
push
scas
and
push
inc
in
mov
cmp
rol
jne
fisubr
out
sbb
cmp
(bad)
xor
shl
imul
fisubr
out
repnz
and
mov
adc
add
sub
in
push
lods
xor
jno
push
jge
dec
mov
js
cli
gs
lea
jmp
in
fidiv
sbb
push
ins
push
adc
lea
sub
movs
shl
cli
cmp
mov
push
add
mov
jne
lea
push
adc
sar
addr16
add
retf
jb
adc
adc
cwde
jmp
add
cdq
dec
sub
add
dec
sub
in
cwde
push
stos
sar
jb
lea
gs
(bad)
je
js
cli
gs
lea
movs
movs
clc
sbb
dec
lods
cmps
sbb
push
lea
pop
or
lods
pop
stos
push
sbb
or
mov
fwait
jmp
sub
or
int
pop
mov
xchg
add
mov
mov
add
(bad)
mov
(bad)
out
sbb
or
sub
jp
pop
mov
adc
push
jmp
das
jbe
lea
mov
sbb
adc
test
stos
ret
and
lahf
shl
and
adc
dec
sbb
test
mov
stos
xchg
test
jb
cmp
sar
sub
int3
cs
mov
jae
sbb
cli
jo
cmp
clc
push
lds
imul
sbb
jmp
inc
fmulp
jecxz
ins
adc
cwde
test
inc
pop
inc
jge
js
ja
dec
sbb
test
mov
mov
mov
cmps
retf
jl
in
push
sbb
ja
pop
inc
jge
jbe
imul
lea
enter
or
push
lods
fiadd
mov
adc
fiadd
mov
stos
clc
bound
sub
adc
sub
dec
sub
mov
or
lods
mov
fdivrp
loop
aam
seta
(bad)
aad
push
test
sub
mov
stos
(bad)
cli
xor
adc
xchg
mov
in
jne
add
cli
out
loope
shr
sbb
add
adc
addr16
jo
addr16
or
mov
stos
loop
mov
sbb
lea
sbb
add
(bad)
hlt
addr16
mov
add
es
push
iret
js
ja
add
and
add
fdivr
jge
mov
xchg
cli
jo
lea
jne
mov
lahf
pop
adc
add
imul
mov
jp
cdq
sub
add
adc
sar
cli
push
mov
imul
call
aaa
add
add
sti
mov
or
(bad)
icebp
push
sahf
sbb
xchg
add
das
jbe
add
pop
adc
ins
add
clc
add
cli
jmp
retf
out
in
scas
cli
push
add
mov
imul
pop
mov
imul
cs
inc
aam
mov
inc
cld
cs
jb
sti
lods
jbe
xor
add
sub
add
or
and
cs
cmc
push
mov
or
xor
sbb
cli
gs
lea
inc
cld
adc
add
xor
adc
inc
add
test
push
xchg
inc
aam
push
js
ja
dec
and
out
loop
jb
popa
arpl
push
lea
jge
xchg
add
push
sub
jnp
cli
repz
add
add
cmp
clc
cmp
in
mov
xor
and
pop
fs
jmp
adc
push
mov
clc
sub
push
mov
push
lea
mov
or
push
fidiv
xchg
dec
mov
pop
cmp
adc
push
push
pop
test
add
add
jg
xchg
pop
rcl
mov
pop
fistp
dec
mov
outs
lods
inc
call
pop
test
ins
sub
adc
lea
xchg
fiadd
jne
fs
mov
add
in
and
push
repnz
cmps
es
mov
and
and
test
fidivr
or
cs
rol
mov
xor
mov
sub
pop
mov
or
es
mov
sbb
pop
mov
inc
jp
jl
fwait
push
or
adc
test
call
lods
fdivrp
push
fisubr
in
push
scas
es
lods
call
jo
fistp
cmp
retf
inc
inc
test
cmc
push
mov
sar
cli
add
ja
or
adc
fisubr
dec
sbb
nop
mov
lea
sub
lods
push
mov
popf
adc
imul
aad
xchg
add
add
loop
push
fisubr
out
push
lods
xor
xor
shr
outs
push
or
cs
cmc
push
pop
mov
or
loopne
add
adc
mov
push
call
int3
jp
clc
ins
xchg
mov
sahf
fimul
jbe
xor
sbb
clc
ins
mov
movs
in
xchg
push
adc
mov
or
loope
stos
ja
jge
test
es
lods
pop
popf
fdivrp
push
mov
imul
addr16
sbb
cli
pop
xchg
clc
ins
mov
cmps
pop
out
push
mov
or
movs
das
fisubr
or
es
add
(bad)
clc
push
stos
loop
xor
pop
mov
cmps
sbb
push
sub
(bad)
std
add
add
repnz
add
repnz
jmp
out
lahf
outs
adc
sar
clc
jge
lea
test
or
mov
aas
nop
retf
sahf
push
mov
push
add
stos
pop
js
adc
push
and
jl
sar
clc
pop
out
xchg
mov
rcl
inc
add
push
pop
or
adc
add
add
ja
inc
lock
mov
jge
push
mov
jmp
add
add
outs
xchg
sub
pusha
in
fidiv
xchg
mov
fiadd
pop
cmp
pop
lods
dec
sbb
sbb
dec
mov
aaa
mov
xchg
fisubr
out
push
lahf
cmp
outs
mov
xchg
lods
sub
(bad)
sbb
adc
jle
shl
add
or
pusha
pop
jp
clc
jne
fisubr
pop
std
jbe
add
xchg
pop
push
add
add
test
adc
out
outs
push
adc
xchg
outs
popa
ins
adc
rcl
ror
gs
pop
in
(bad)
loope
push
mov
jmp
lods
or
push
stos
jmp
js
clc
jge
in
(bad)
in
add
repnz
adc
pmaddwd
mov
gs
mov
sub
inc
pop
fisubr
xchg
adc
push
adc
(bad)
shl
add
jno
test
movs
ret
mov
es
mov
js
imul
sbb
mov
movs
or
jg
fisubr
or
arpl
xor
movs
retf
clc
inc
add
jge
js
cdq
sub
add
xor
ret
ins
rcl
(bad)
loopne
mov
outs
mov
mov
mov
inc
xchg
mov
jg
dec
or
adc
inc
add
repnz
add
adc
in
fisubr
cld
add
xchg
test
adc
(bad)
jmp
out
pop
push
dec
pop
cmp
js
pop
adc
add
adc
fsubr
or
dec
outs
sub
fisubr
dec
outs
cmps
test
adc
popf
adc
add
movs
cli
call
add
cmp
ins
push
ja
add
or
(bad)
out
adc
fsubr
or
xchg
lock
jne
inc
dec
adc
add
sub
hlt
pop
cmp
in
jp
pop
add
pop
sub
(bad)
int3
movs
push
xor
add
in
jbe
add
stc
repz
ret
pop
cdq
sub
or
push
sub
cmps
cmps
add
cs
cs
stos
loop
sub
ins
push
ja
add
or
(bad)
out
adc
(bad)
out
or
xchg
lock
jne
inc
dec
adc
in
es
in
pop
cmp
or
or
aad
push
adc
je
mov
add
lahf
ja
icebp
inc
jmp
pop
les
dec
mov
sub
cmp
shr
push
test
or
adc
fcmovu
outs
cmp
(bad)
jp
jbe
add
fbld
test
adc
xchg
add
jb
jg
pusha
pusha
xor
or
pop
movs
jbe
aam
add
push
ins
push
outs
sub
mov
xor
adc
sub
fstp
scas
cli
push
pop
imul
nop
js
pop
or
add
dec
and
jl
lea
sbb
bnd
add
jae
leave
fs
pop
sub
cmps
xor
sub
dec
fsubr
in
push
add
fadd
test
arpl
sub
push
mov
or
push
mov
xchg
xchg
rcl
and
shl
mov
xchg
repnz
add
int
mov
add
push
fidivr
arpl
mov
inc
les
dec
pusha
lahf
xchg
push
stos
(bad)
clc
gs
(bad)
ins
hlt
popf
push
sub
sar
pop
mov
adc
pop
stos
or
gs
mov
in
fiadd
adc
sar
dec
mov
jns
cli
pop
(bad)
outs
cmps
push
stos
mov
add
and
push
adc
sar
cli
gs
mov
rcr
imul
ja
cmp
sub
inc
hlt
mov
in
(bad)
jge
mov
(bad)
pushf
inc
gs
sub
(bad)
push
(bad)
je
js
pop
scas
xchg
adc
jbe
jo
lods
dec
fcom
and
in
cmps
push
stos
or
xchg
adc
push
cmc
ficomp
xchg
add
test
sub
fisubr
push
push
xor
fcomp
imul
outs
sub
xor
leave
loop
retf
test
mov
cwde
adc
bound
outs
sub
shl
outs
sub
xor
jge
jle
adc
add
je
add
xor
and
add
retf
js
pop
ficom
repnz
shl
pop
adc
add
fild
adc
adc
inc
ficom
mov
mov
ins
data16
add
dec
pop
pop
scas
sub
pop
int
popf
repnz
leave
in
sbb
adc
push
test
sbb
shr
icebp
sbb
xchg
outs
sub
pop
int
push
sahf
jo
or
sub
js
dec
dec
cmps
pop
add
add
aaa
and
jbe
dec
cmp
pusha
int
jbe
dec
inc
leave
pop
int
out
push
jecxz
sbb
sar
pop
dec
xchg
adc
push
in
push
mov
cmps
arpl
ins
stc
push
dec
push
int
jo
dec
mov
adc
(bad)
jmp
cmc
out
outs
sub
int
js
pop
jo
mov
js
pop
cmc
xchg
adc
push
mov
dec
adc
adc
sar
dec
dec
cmps
pop
add
add
aaa
and
jbe
dec
cmp
pusha
int
jbe
dec
inc
or
lods
sub
dec
mov
in
fisubr
or
xor
leave
call
add
cmp
shr
fidiv
adc
loopne
outs
mov
imul
push
push
int
push
mov
inc
cmp
push
in
fisubr
pop
xchg
test
xchg
lods
movs
repnz
or
add
or
cmps
cmps
pushf
test
sub
(bad)
sub
adc
add
and
in
fiadd
lods
dec
cmp
retf
dec
adc
push
js
xchg
mov
dec
cdq
push
sub
push
sbb
mov
pop
or
xor
adc
fist
xchg
pop
xchg
push
sub
jne
adc
jbe
xchg
mov
cmp
adc
es
cmps
and
mov
ficom
stc
(bad)
outs
mov
lea
int
lods
pop
imul
in
push
mov
push
push
int
adc
gs
leave
mov
push
and
test
sub
div
xchg
or
adc
sbb
scas
cmps
movs
test
sub
cmps
movs
movs
arpl
vmread
mov
jmp
adc
or
inc
adc
shrd
sub
inc
adc
or
ficom
or
(bad)
ror
test
loop
adc
or
xchg
mov
jmp
ficom
into
in
fisubr
les
hlt
sahf
stos
popf
push
or
adc
fisubr
dec
js
sbb
imul
add
sub
mov
test
sub
test
in
pop
das
jbe
xchg
add
scas
adc
out
fisubr
test
test
sub
fisubr
leave
push
add
sbb
cli
fsubr
in
shr
push
lods
(bad)
mov
push
jbe
sub
(bad)
iret
mov
dec
js
mov
add
rcr
push
adc
adc
shl
outs
adc
adc
shl
push
jbe
adc
sub
fisubr
sti
cmp
das
push
into
test
xor
fisubr
enter
in
(bad)
push
mov
stc
sub
ret
test
mov
jg
sbb
mov
xor
fisubr
inc
mov
js
dec
push
push
outs
sub
adc
pop
adc
add
cmps
shr
ficomp
lea
fs
jo
popa
lods
sar
jo
ja
mov
adc
jns
repnz
mov
xor
sbb
test
sub
retf
sub
adc
in
cmp
jb
rol
cmc
xchg
into
lds
fldenv
xchg
xchg
or
lock
adc
test
test
xchg
data16
in
movs
push
mov
stc
sbb
dec
jl
pop
or
ja
sub
repnz
push
jl
scas
push
mov
or
(bad)
(bad)
mov
jl
les
hlt
js
mov
enter
mov
push
jecxz
push
movs
add
mov
fsub
(bad)
pop
movs
retf
iret
sub
lods
xchg
adc
das
fisubr
ret
in
cli
lahf
fwait
push
add
fist
add
repnz
xor
sar
ins
addr16
shl
cmp
pop
sbb
adc
(bad)
aam
fucomi
in
sub
retf
outs
mov
ja
inc
js
mov
cwde
jmp
adc
aas
pusha
in
fisubr
ja
mov
mov
call
sub
add
jle
call
add
jmp
jbe
mov
lods
lods
push
jl
(bad)
out
call
test
mov
mov
pop
adc
leave
std
push
rol
mov
and
in
add
dec
mov
outs
mov
jo
mov
add
call
sub
jbe
ins
ins
fs
(bad)
imul
les
push
cs
icebp
push
test
add
push
mov
add
adc
je
add
rcl
inc
mov
push
adc
test
xchg
sub
rol
ins
gs
push
in
fiadd
push
(bad)
je
sub
adc
adc
mov
sbb
jmp
fiadd
add
pop
mov
fisubr
repnz
rcr
add
push
pop
(bad)
in
cmp
jmp
mov
in
push
ja
inc
or
nop
jmp
push
cdq
stc
outs
fld
add
in
aam
fstp
aam
dec
imul
in
push
sub
mov
add
test
(bad)
jnp
pop
aam
dec
xchg
fld
add
in
into
jp
bnd
adc
dec
jae
outs
sub
ret
(bad)
in
push
mov
jmp
jae
add
test
xchg
lahf
pop
push
dec
(bad)
mov
outs
sub
aam
dec
outs
fisubr
or
(bad)
into
adc
mov
stc
movs
fld
add
in
retf
imul
je
outs
sub
fisubr
fsub
test
pop
jecxz
add
or
push
lea
fcom
int3
test
dec
sub
adc
push
sub
hlt
lods
imul
add
outs
add
leave
push
add
inc
gs
shl
xchg
inc
add
jp
add
fs
inc
and
add
pop
cwde
cld
add
dec
sub
adc
dec
sbb
push
xor
sub
rol
hlt
xlat
in
imul
add
ins
cmp
push
sub
sar
pop
arpl
add
push
mov
in
icebp
ja
jo
mov
jl
add
mov
call
add
hlt
pop
cmp
mov
jmp
bnd
push
jge
jo
(bad)
xor
push
test
jbe
sbb
sar
aam
loopne
cmps
(bad)
mov
in
scas
pop
add
bnd
adc
jo
(bad)
sub
pop
xor
sub
adc
inc
add
jbe
outs
add
add
(bad)
xor
add
push
adc
fdiv
movs
imul
add
(bad)
lea
fcom
or
jb
inc
jmp
shr
fcmovb
sub
(bad)
shl
sbb
jp
add
ja
pop
sbb
jmp
ficom
xor
outs
lods
dec
movs
xor
jmp
fiadd
add
movs
fucomi
rcl
lods
dec
movs
adc
add
ins
pusha
popf
push
mov
or
jmp
add
pop
test
mov
sbb
push
inc
(bad)
in
push
hlt
outs
add
add
pop
xchg
push
jmp
xor
mov
push
call
je
js
sub
popf
neg
outs
lods
push
push
add
add
outs
xchg
or
(bad)
jmp
ret
ins
rcl
outs
stos
push
sub
xor
add
mov
lds
or
jecxz
add
xchg
add
stos
daa
add
cli
call
in
push
ja
inc
or
nop
jmp
push
cdq
push
sub
cmps
add
add
mov
fidivr
cmps
movlps
sti
add
cmp
adc
mov
adc
mov
add
pop
stos
shl
mov
lods
repnz
adc
adc
lea
push
jnp
dec
mov
jp
repnz
sbb
sbb
sbb
cwde
neg
outs
adc
adc
shr
jnp
or
xor
or
add
test
jg
(bad)
jns
bnd
sbb
fistp
sub
retf
sub
icebp
jbe
test
add
add
cli
fucomip
ins
scas
shr
push
outs
movs
add
xor
add
push
xchg
jmp
ins
shl
pop
adc
add
jb
pop
pop
push
push
xor
sub
das
push
jmp
(bad)
push
in
jne
in
ficom
push
mov
pop
push
dec
add
jbe
push
lods
mov
(bad)
je
js
cs
test
xor
fcomi
ins
aaa
mov
clc
jb
push
dec
fisubr
xchg
in
jae
gs
dec
in
(bad)
loope
adc
test
add
ins
add
cli
out
gs
clc
call
fidivr
add
add
das
unpckhps
in
sub
xor
test
pop
jmp
fild
add
sub
sar
cli
imul
pop
mov
in
das
(bad)
in
(bad)
xor
ret
push
popf
idiv
jo
ret
ins
rcl
lea
pop
or
sbb
sbb
pop
retf
jl
ja
out
add
jg
and
sti
ins
jl
pop
or
adc
or
(bad)
ins
inc
dec
sbb
adc
sub
adc
das
(bad)
and
sbb
jl
or
mov
fld
jmp
add
rcr
push
stos
jle
test
jmp
ins
stos
retf
adc
adc
fld
dec
loopne
movs
or
fnsave
push
jmp
jp
jg
inc
pop
lock
neg
and
mov
scas
sbb
push
out
add
inc
adc
pop
push
pop
push
(bad)
pop
or
pop
mov
pop
pop
push
cmp
ins
inc
dec
clc
ja
enter
rol
aaa
or
mov
jg
jl
mov
mov
loopne
scas
shl
xchg
lea
lods
stos
jo
mov
cmps
or
sub
repnz
cs
icebp
rol
add
push
mov
adc
loop
add
cs
push
test
add
hlt
and
stos
ficomp
mov
add
xchg
lock
lahf
outs
pop
push
push
inc
mov
jmp
jns
add
sub
or
mov
js
ja
leave
push
add
sub
fcomi
ins
aas
mov
clc
sbb
push
mov
pop
jl
add
call
push
add
xor
arpl
ja
cli
add
add
ins
inc
adc
fldcw
fisubr
in
aaa
cs
sub
sub
add
dec
aaa
fdivr
push
(bad)
mov
cmps
xor
inc
push
lods
jmp
outs
lods
inc
rcr
jmp
mov
push
lods
dec
rcl
sbb
push
mov
in
fidiv
sub
fcmovb
adc
outs
sub
mov
adc
fstp
xor
or
cs
jmp
mov
leave
xchg
add
test
inc
dec
add
dec
mov
outs
xchg
or
adc
test
sub
dec
push
jbe
repnz
add
movhps
mov
lahf
retf
inc
outs
jp
adc
mov
clc
pushf
push
outs
sub
mov
stos
bound
push
stos
push
inc
jecxz
mov
xor
or
icebp
push
pop
adc
repnz
or
add
test
test
ins
sbb
xchg
dec
stos
lahf
adc
jge
shl
jae
sub
mov
cli
add
inc
imul
leave
sub
add
imul
repnz
add
push
push
inc
ins
std
inc
stos
ficomp
shr
ficom
xor
xchg
or
test
pop
leave
push
add
inc
xchg
in
aam
push
movs
xchg
push
(bad)
repz
sbb
xchg
or
hlt
inc
add
call
add
adc
push
adc
rol
inc
lea
lahf
out
test
add
and
xor
or
pop
mov
add
sbb
test
inc
xchg
je
add
mov
jmp
fadd
add
jo
lahf
xchg
test
xchg
mov
ficom
mov
adc
mov
xlat
fldcw
fisubr
jmp
imul
lods
popf
lods
dec
call
jecxz
adc
aam
(bad)
shl
sbb
mov
add
ja
and
xlat
xchg
test
jmp
imul
adc
test
jmp
jbe
sub
xor
cs
adc
add
test
leave
fisubr
repnz
sub
xchg
(bad)
pop
push
in
aaa
sbb
cmp
inc
(bad)
jmp
lods
fsubr
or
lods
push
in
mov
pop
or
sub
push
sub
mov
pop
or
xor
sub
add
dec
adc
or
jae
inc
or
(bad)
jb
in
mov
add
data16
cmp
jo
or
stos
cli
ss
aam
outs
sub
sti
shr
outs
sub
sbb
or
stos
cli
jp
jge
test
stos
xchg
add
mov
fwait
dec
push
cmps
jnp
add
xchg
push
outs
sub
jo
adc
shl
jns
push
adc
mov
xchg
pop
sbb
jmp
mov
hlt
pop
shr
adc
add
ja
dec
in
xor
std
repnz
pop
shr
adc
xchg
adc
and
add
sub
or
sub
inc
(bad)
shl
aam
add
jl
in
sub
sub
sbb
push
jne
inc
fimul
add
cli
gs
lea
mov
mov
ins
retf
in
test
test
adc
push
stos
adc
repz
mov
adc
(bad)
je
xchg
ficomp
push
add
sar
inc
lods
sub
dec
push
clc
xor
ins
xor
adc
pop
mov
add
outs
sub
(bad)
ins
das
in
lock
sub
push
in
fidiv
xor
fisubr
in
push
or
js
pop
push
push
add
daa
outs
sub
enter
adc
sar
inc
sub
adc
shr
outs
sub
fidiv
add
xchg
pop
mov
(bad)
fdiv
jle
xchg
test
lahf
outs
lods
dec
fcom
mov
add
loop
int
movs
cmc
stos
pop
pop
adc
in
jo
lods
dec
fsubr
sub
mov
div
sbb
push
mov
push
xor
ins
add
(bad)
ins
fcomp
in
popa
shr
(bad)
jmp
cli
das
or
mov
add
outs
sub
adc
in
push
jbe
mov
shr
sbb
imul
jmp
add
push
or
add
int
movs
cmc
stos
pop
fild
lods
hlt
ins
aas
jmp
add
lods
(bad)
in
repnz
fnsave
test
(bad)
je
adc
xchg
mov
adc
movs
cmc
push
lods
loop
in
and
sub
xor
and
push
add
ja
sbb
add
enter
sbb
mov
cmc
push
sub
loop
sub
mov
or
hlt
inc
and
leave
push
sub
jmp
xchg
div
sbb
or
pop
or
pop
push
mov
retf
add
push
ja
xor
test
leave
test
lds
test
sub
dec
inc
clc
sti
cwde
push
dec
mov
mov
mov
aas
fs
in
fisubr
sub
inc
repz
pop
or
in
jp
in
(bad)
mov
jae
jbe
or
das
adc
jb
add
add
or
xor
sub
cdq
jmp
outs
test
ins
shl
push
mov
aam
lea
push
lods
out
(bad)
data16
sti
jo
sub
out
push
mov
jmp
push
adc
sub
or
es
(bad)
cs
movs
test
fdivrp
add
scas
fwait
jb
dec
pop
jmp
test
in
push
lods
idiv
das
jne
imul
xchg
adc
mov
(bad)
lods
rcr
outs
test
loop
push
add
add
jl
or
adc
add
push
arpl
out
in
push
mov
jge
enter
adc
mov
xor
lock
leave
test
xor
adc
adc
push
mov
lahf
sti
lods
inc
hlt
adc
(bad)
rcl
hlt
gs
(bad)
repz
sbb
sub
test
adc
sbb
jne
mov
(bad)
call
sbb
test
stos
(bad)
xor
fwait
js
pop
fwait
mov
loop
jl
lea
sbb
hlt
push
jb
call
mov
movs
stos
icebp
les
hlt
sahf
inc
add
mov
mov
add
scas
push
push
aam
movs
jo
push
js
xchg
icebp
add
(bad)
push
movs
fiadd
into
js
push
jne
adc
lahf
pop
in
pop
es
and
js
dec
cli
ja
add
xchg
jbe
mov
inc
lahf
outs
adc
jb
shl
jae
ret
xchg
dec
test
pop
jl
lea
adc
cmp
ins
sbb
pop
(bad)
fisubr
mov
mov
cmp
push
mov
jbe
clc
jo
mov
jbe
addr16
and
or
scas
cli
push
push
push
hlt
rcl
lods
jae
xor
bnd
add
jge
push
mov
jmp
test
in
movs
cmp
mov
push
adc
imul
lods
dec
push
add
outs
sub
mov
jo
cmp
xor
cs
jno
mov
jo
adc
push
mov
or
mov
stos
jmp
adc
add
movs
movs
test
lds
test
stos
sbb
and
lock
movs
es
xchg
add
cs
popa
pop
out
fwait
push
add
js
and
or
popf
iret
and
add
or
adc
push
or
cs
push
jle
test
or
pop
jl
adc
push
les
mov
add
jp
pop
mov
test
jbe
lea
adc
inc
jmp
imul
sbb
ret
sbb
inc
(bad)
mov
repnz
mov
push
movs
add
xchg
sub
pop
sbb
scas
cli
push
pop
(bad)
stc
push
stos
out
jo
adc
jb
xchg
xchg
jmp
inc
dec
sub
adc
lea
mov
sub
or
bnd
retf
mov
loop
pop
cdq
adc
fdiv
test
rcl
adc
test
xchg
imul
stc
cmps
push
rol
add
cli
sub
sbb
mov
movs
movs
pop
lds
test
sub
adc
repnz
mov
push
mov
int3
push
movs
and
cmp
adc
adc
add
cli
mov
mov
adc
add
pusha
fwait
adc
pop
int3
adc
mov
in
sbb
in
(bad)
pop
mov
movlps
adc
jbe
add
inc
hlt
pop
push
sub
jno
adc
xchg
fcomi
ins
fwait
in
mov
mov
mov
jne
mov
repnz
fld
jbe
pop
mov
js
mov
ret
add
sbb
(bad)
in
push
mov
jmp
ret
add
mov
or
mov
add
out
fiadd
xor
gs
pop
push
jbe
test
stos
sti
or
iret
xchg
shl
mov
sar
xchg
jb
or
mov
popa
or
call
mov
or
clc
gs
popf
retf
js
pop
popa
or
cdq
push
jmp
in
mov
add
test
push
and
and
dec
into
movs
adc
inc
jmp
aaa
add
cli
add
fnstsw
js
inc
jmp
movs
cli
push
retf
jnp
js
pop
adc
icebp
add
sub
stc
add
lods
jg
jo
lods
dec
loopne
inc
mov
and
pop
add
add
call
add
pop
popa
or
cdq
push
jmp
arpl
bound
add
sub
jnp
cli
repz
div
js
pop
movs
ret
mov
sub
(bad)
clc
add
stos
sub
test
sub
adc
inc
add
stos
shr
repnz
int3
in
pop
dec
sub
or
js
addr16
les
jb
mov
xchg
sub
push
cmps
es
out
js
cli
gs
xchg
jmp
mov
or
or
mov
retf
(bad)
mov
jnp
jmp
xchg
in
push
lods
lods
push
popf
movs
xor
ret
ins
rcl
lea
inc
add
add
popf
pop
repnz
(bad)
xor
pop
xchg
xchg
mov
das
adc
jg
sub
push
jmp
adc
add
xchg
pop
pop
or
jnp
adc
sbb
repz
mov
into
and
sbb
or
push
mov
ror
into
lock
shr
lock
stos
pop
das
popa
adc
push
mov
cli
add
stc
cmps
pop
stos
div
push
mov
lock
arpl
mov
pop
lea
js
cli
repz
jmp
push
adc
ret
pop
ins
xor
add
sti
xchg
lock
leave
das
sti
sub
fidivr
push
test
or
push
xchg
jo
push
cmp
or
dec
add
adc
xchg
and
add
add
xchg
sbb
lahf
outs
lods
inc
loopne
popf
add
push
mov
rol
into
jb
jp
cli
les
add
pop
mov
lock
sub
dec
pop
jmp
cmp
add
test
dec
add
or
jge
mov
div
js
pop
movs
ret
mov
sub
push
lods
sbb
stc
shr
adc
setp
stos
out
sub
push
mov
add
test
add
movs
in
test
jmp
add
add
movs
and
jg
clc
stos
add
dec
or
mov
add
int
not
in
js
pop
idiv
test
jo
pop
sub
push
std
jl
ret
movs
adc
adc
mov
outs
mov
and
lea
fldenv
test
adc
add
lods
loop
aam
int
lahf
pop
jbe
in
dec
jno
(bad)
fild
daa
inc
inc
or
js
addr16
inc
add
adc
adc
xchg
add
push
jne
fs
jmp
outs
stos
(bad)
and
test
rep
shr
add
push
enter
sub
adc
add
xor
and
xchg
add
push
jne
add
jnp
sub
xchg
sub
adc
dec
cld
jl
js
lods
jle
adc
add
cs
push
lods
loop
mul
pop
popa
pop
lock
(bad)
xchg
sahf
adc
mov
lods
sub
push
shr
push
lods
cs
mov
add
add
jp
inc
mov
add
push
adc
lahf
pop
movs
ret
mov
inc
mov
or
popf
mov
jb
inc
mov
pushf
arpl
fadd
clc
jge
mov
add
push
inc
loopne
es
fisubr
jle
es
add
dec
fist
ficomp
push
add
add
jg
add
or
push
push
hlt
jbe
repz
sbb
inc
add
test
jb
jnp
add
xor
add
outs
sub
imul
jmp
cmps
shr
add
adc
lock
pop
cwde
xor
jns
push
dec
cs
jmp
push
xor
push
pop
push
test
add
push
cmp
xchg
inc
add
cmp
fisubr
(bad)
sub
dec
jp
outs
in
xchg
adc
test
movs
and
mov
pop
cmp
add
dec
adc
pop
or
inc
jns
push
dec
xchg
test
add
jge
dec
in
dec
into
in
ficom
adc
sbb
adc
push
sbb
jmp
cmps
shr
push
ja
inc
sbb
cmp
push
pop
inc
pop
mov
clc
paddsb
into
in
(bad)
pop
pop
pop
add
jmp
add
pop
pop
test
push
mov
pop
add
adc
jbe
cs
ins
add
lods
add
inc
xor
add
movs
and
mov
inc
in
xor
add
cli
pop
pop
pop
add
adc
out
fisubr
repz
add
add
add
cld
sub
add
add
jb
ret
pop
jmp
lods
shr
push
mov
jmp
mov
add
push
inc
jb
inc
in
lods
clc
xchg
fsubr
mov
jo
xchg
sub
jae
(bad)
gs
ins
add
fisubr
mov
fisubr
lods
fldcw
sub
jge
add
jns
add
cli
call
add
sbb
add
xor
mov
sbb
inc
jns
push
push
repnz
add
cs
jno
arpl
push
mov
hlt
movs
ja
add
adc
in
push
int3
in
ficomp
sti
add
push
gs
pop
(bad)
std
add
push
mov
add
add
jnp
add
adc
out
fisubr
pop
xchg
xor
movs
add
add
add
mov
jb
jnp
add
ror
inc
add
repz
pop
or
inc
movs
add
sub
mov
inc
adc
outs
sub
ficomp
cli
add
push
gs
pop
je
add
push
mov
add
add
jnp
add
adc
in
fisubr
mov
jg
add
xor
pop
push
mov
or
clc
xor
outs
sub
push
add
lods
ds
add
add
lods
mov
cmps
test
lods
mov
add
lods
mov
xchg
test
xor
push
(bad)
jmp
cmps
shr
add
add
push
jo
add
xor
adc
inc
add
adc
jmp
movs
add
add
mov
in
(bad)
ins
pop
xchg
in
fcom
fs
std
add
cs
or
xchg
add
jnp
add
test
jne
adc
add
pop
mov
xchg
jge
push
mov
or
clc
(bad)
fld
or
cs
jmp
adc
or
lock
cmc
lods
sahf
mov
(bad)
(bad)
sub
push
(bad)
outs
aam
repnz
add
cs
cmc
push
scas
push
pusha
mov
js
movs
pop
lds
test
pop
or
cs
call
adc
lea
sub
popf
push
stos
jmp
repz
adc
imul
push
stos
jmp
adc
add
jbe
addr16
popa
pop
fs
jmp
adc
mov
pushf
addr16
and
aam
jo
xchg
adc
inc
add
js
addr16
dec
sub
jo
sub
push
movs
jge
pop
lea
adc
call
or
jb
fisttp
in
jmp
outs
mov
xchg
jmp
adc
mov
sub
mov
test
leave
stos
fiadd
shr
push
cmp
push
jmp
jno
ret
cmp
clc
ja
cs
inc
jmp
imul
push
lods
sbb
inc
mov
pop
aad
retf
das
jne
in
repnz
in
(bad)
sub
aam
int3
js
sbb
add
jns
cli
xor
push
mov
js
arpl
in
and
jecxz
shr
jnp
or
push
into
rcr
pop
fwait
test
and
sub
pushf
mov
arpl
cmc
push
scas
es
(bad)
fistp
sti
mov
lahf
add
sbb
add
js
cli
push
bound
mov
push
jbe
enter
call
hlt
aad
popf
push
push
aam
int3
js
sbb
aam
call
dec
and
popf
int
jl
or
mov
stos
repnz
jmp
sbb
dec
or
push
pop
fwait
add
add
mov
mov
cmps
mov
jle
cs
push
lods
push
or
leave
jp
jnp
push
push
xor
stc
push
jl
or
clc
fcmovnu
outs
sub
ins
hlt
adc
(bad)
loope
sbb
outs
sub
fld
(bad)
cmc
movs
movs
arpl
aad
push
adc
inc
or
mov
fwait
lods
cli
add
popf
pop
stos
(bad)
in
icebp
ja
fstp
fadd
or
cs
icebp
push
pushf
and
pushf
push
or
xor
add
addr16
dec
add
mov
sub
mov
inc
add
lea
push
jl
or
adc
jne
cmp
hlt
gs
in
sbb
in
ficomp
dec
in
fisubr
fucomi
pop
shr
fiadd
neg
es
cmps
pusha
pop
retf
out
js
cli
gs
xchg
adc
jne
xchg
jmp
adc
push
mov
or
pop
mov
dec
jne
mov
gs
imul
jmp
test
add
clc
arpl
out
lea
lods
cli
cli
or
dec
jbe
aas
cdq
sub
mov
jb
jae
jmp
rol
add
lods
xor
shl
les
push
jmp
lea
movs
ret
xchg
sub
sub
jns
cli
xor
push
mov
push
jnp
or
push
into
rcr
push
adc
imul
test
push
or
js
sbb
aam
mov
lea
mov
cmp
sub
jnp
or
push
into
ror
xchg
lea
push
or
pop
mov
or
jmp
in
jo
xchg
lea
jl
mov
jl
jmp
adc
cmp
push
mov
das
push
movs
dec
adc
popf
icebp
(bad)
and
sbb
scas
cli
push
add
int
test
xlat
xor
or
mov
loopne
(bad)
icebp
test
addr16
pop
cmp
or
dec
sbb
fcomp
jb
and
or
add
cmps
mov
add
leave
adc
add
cli
lock
mov
add
mov
pusha
inc
hlt
push
sub
test
adc
addr16
jo
dec
leave
inc
ja
rol
pop
clc
call
push
jne
(bad)
ins
or
ja
jle
xor
add
pusha
test
shr
mov
ins
inc
push
sub
test
push
add
shl
test
xlat
xor
add
loope
sahf
stos
and
cmps
ins
jge
stos
(bad)
fild
mov
or
lods
dec
adc
loopne
pop
and
sub
hlt
data16
cs
sub
jge
sbb
push
inc
cmp
lods
ficom
repz
dec
retf
push
dec
add
adc
test
sbb
daa
enter
ins
add
rcr
outs
sub
bound
xor
pop
leave
out
rcr
shl
cmp
mov
ficomp
rcl
add
js
repnz
cmp
outs
sub
aad
ret
test
xchg
test
jbe
addr16
and
fwait
mov
push
mov
addr16
mov
sub
cmps
and
jnp
push
pop
mov
mov
addr16
lods
dec
xchg
test
jp
jbe
scas
(bad)
jns
add
or
(bad)
sub
test
sahf
cdq
adc
mov
stos
add
js
cli
fld
mul
cmp
pop
mov
pushf
(bad)
dec
pop
mov
call
mov
xor
(bad)
fdiv
fnstenv
shr
xor
popf
push
mul
xor
(bad)
cdq
adc
or
sub
push
out
adc
lods
mov
test
add
cs
bnd
adc
sbb
xchg
in
sbb
ins
rcl
outs
add
jmp
inc
add
xor
nop
mov
and
and
jnp
pop
xchg
clc
sbb
fs
popf
jmp
test
test
in
cli
jp
(bad)
(bad)
daa
loope
stos
in
es
jle
lahf
es
es
aad
in
or
pop
test
test
jmp
add
xor
mov
push
cmp
jmp
push
or
popf
push
jge
not
mov
imul
pop
lea
sbb
test
push
out
push
daa
movs
fmul
pop
(bad)
jns
adc
jns
outs
sub
test
fstp
movs
push
stos
bound
pop
xchg
xchg
addr16
popa
pop
setp
pop
push
push
add
sbb
adc
fisubr
and
mov
mov
aad
lds
(bad)
js
dec
sbb
sub
sbb
ins
rcl
adc
dec
test
pop
mov
sub
int3
test
ds
sub
dec
jl
outs
sub
pop
leave
pushf
loop
movs
out
test
sub
popf
push
lods
shr
mov
push
scas
push
or
mov
jmp
sub
mov
push
mov
leave
sbb
mov
and
xchg
fstp
das
push
cwde
test
xor
sbb
mov
sub
xchg
cmc
sbb
xor
popf
pop
mov
or
int3
cmc
fiadd
addr16
lea
js
ja
xchg
add
jb
sub
ja
add
push
ins
pop
outs
sub
add
xchg
fidiv
cmc
shl
xchg
imul
push
xor
fiadd
popf
push
mov
sub
mov
sbb
test
sub
aad
in
add
sub
fstp
dec
adc
lsl
out
or
out
das
pop
aad
pop
ins
stc
ja
aam
and
add
sub
jmp
adc
pop
sub
or
fsubr
add
popf
push
mov
stc
jno
lea
jne
pop
dec
cs
push
mov
or
shl
cs
add
js
arpl
push
sahf
xor
adc
outs
lahf
lea
ja
outs
mov
or
aam
add
sub
outs
xchg
xchg
add
jp
cdq
sub
sub
inc
jne
outs
sub
fadd
iret
xchg
fisub
int3
fiadd
movs
push
lods
out
stc
jno
lea
jne
pop
dec
cs
push
mov
mov
shr
sub
fwait
cmc
push
imul
pop
popf
push
mov
stc
jno
lea
js
ja
(bad)
and
mov
push
mov
or
movs
leave
movs
mov
sbb
mov
add
aas
adc
mov
bound
adc
ins
fisubr
or
mov
or
fisubr
sbb
mov
cwde
test
jle
xchg
add
sbb
jmp
pop
sub
push
xor
test
adc
adc
jbe
mov
jmp
(bad)
out
push
mov
sub
(bad)
jmp
adc
sbb
add
mov
dec
pop
mov
stos
sbb
shr
outs
sub
sbb
cwde
dec
shr
(bad)
outs
xchg
mov
mov
push
jp
cli
outs
lahf
xchg
xor
jnp
fcomp
cmps
popf
add
and
popa
or
clc
pop
push
push
dec
popf
pop
stos
push
dec
addr16
mov
cli
jno
lea
ja
pusha
mov
or
aam
add
leave
push
lods
out
mov
sub
mov
mov
mov
and
mov
fidivr
or
popf
(bad)
stos
push
jge
lods
push
add
push
jmp
mov
adc
test
dec
and
xchg
int
mov
jbe
es
xchg
shr
pop
xchg
dec
adc
in
fisubr
dec
and
mov
fidiv
push
adc
sar
pop
mov
add
mov
shr
loope
mov
mov
pop
lods
push
add
push
jmp
mov
adc
test
fdivr
add
js
pop
mov
add
mov
xor
fwait
loope
mov
(bad)
scas
push
mov
or
mov
loope
push
addr16
xchg
fidivr
icebp
jb
fcom
mov
pop
xchg
mov
dec
cli
push
mov
jge
jmp
ret
shr
mov
sub
jp
push
pop
mov
fisubr
add
lods
cmps
hlt
pop
int
adc
loope
xchg
adc
mov
sub
lea
push
scas
push
mov
push
mov
add
aad
jns
dec
dec
cli
push
mov
jge
jmp
ret
shr
mov
adc
dec
sub
lea
shr
int
sahf
push
or
int
cmp
jns
or
push
mov
neg
mov
push
push
jl
in
adc
scas
push
add
aad
jns
cli
addr16
cmp
pop
dec
add
mov
sub
xor
mov
push
mov
outs
sub
lods
imul
addr16
xchg
xor
popf
jae
xchg
push
push
add
cli
addr16
(bad)
jno
enter
test
xchg
ja
xchg
or
mov
push
scas
push
or
shl
push
mov
push
jo
aas
sub
pop
lods
sub
sub
add
add
sbb
jl
add
rol
rcr
ja
adc
push
lods
fmulp
movs
test
(bad)
cs
jp
sbb
xor
add
sub
jl
add
jge
jp
dec
jmp
jne
outs
sub
cmps
jge
push
adc
mov
mov
and
popa
xor
pop
jmp
adc
icebp
jo
push
add
popa
add
cmps
jl
pop
pop
sub
jmp
xchg
jmp
sub
pop
sub
(bad)
fs
add
pop
push
adc
repnz
add
es
jbe
push
add
add
movs
ret
xor
dec
add
push
popf
push
fwait
retf
mov
mov
sub
call
mov
lods
out
cli
addr16
mov
js
ja
xchg
or
mov
push
scas
push
or
shl
push
mov
push
js
pop
mov
or
xchg
cmc
push
pop
xor
pop
popf
push
lods
out
stc
pop
mov
ja
dec
sub
mov
push
popf
xor
push
mov
(bad)
push
addr16
lea
ja
jp
push
or
fdiv
add
mov
fwait
enter
adc
add
cli
or
add
loop
jmp
addr16
cmp
hlt
outs
das
adc
aad
cdq
add
add
jne
push
dec
pop
mov
xchg
add
test
xor
or
sub
movs
dec
sub
adc
push
test
repnz
lahf
jnp
add
jo
fcomp
arpl
add
jge
outs
add
jl
js
ja
ret
mov
call
pusha
test
inc
pop
sub
jns
lahf
(bad)
jns
add
dec
and
nop
lods
pop
das
jbe
add
add
cs
push
scas
inc
push
aam
fstp
push
test
add
repnz
add
add
jmp
das
pop
les
test
sbb
push
lock
push
shr
mov
push
add
xchg
sahf
lods
inc
adc
mov
jns
adc
or
das
cs
leave
xor
lahf
outs
mov
xchg
test
mov
xchg
ins
shl
repz
jle
adc
sub
jl
sub
stos
xchg
and
cmp
sub
cwde
jbe
xchg
call
xchg
adc
push
outs
push
sub
jbe
test
cmps
sbb
jnp
fmul
lock
jbe
call
xchg
icebp
sub
adc
pop
stos
idiv
cbw
add
lea
imul
push
add
inc
push
outs
sub
add
inc
mov
(bad)
stc
mov
inc
or
(bad)
cmc
push
add
das
lea
ret
nop
xchg
sbb
in
(bad)
add
mov
adc
push
jmp
jno
push
xchg
test
sub
push
movs
push
inc
push
imul
xchg
mov
lods
inc
mov
lods
inc
mov
lods
inc
mov
lods
inc
mov
lods
inc
mov
lods
inc
mov
lods
inc
mov
ret
mov
sub
outs
sub
push
inc
push
jl
or
push
lods
mov
das
mov
lods
dec
push
xor
xchg
mov
test
(bad)
cmc
shr
aad
inc
add
add
mov
js
or
cs
jo
jae
pop
lea
adc
inc
push
popa
mov
mov
fdiv
hlt
add
or
sbb
fwait
jb
inc
pop
push
in
pop
ja
(bad)
push
(bad)
test
xor
pop
or
push
jmp
leave
mov
push
mov
inc
rcr
cmp
dec
add
mov
push
xor
dec
dec
mov
cmc
push
and
cmp
and
add
push
ja
call
add
inc
add
lods
shl
pop
jne
adc
jns
movs
mov
lods
push
mov
jb
mov
sbb
or
dec
add
jne
inc
jmp
(bad)
lods
push
add
es
in
inc
jbe
(bad)
addr16
lea
jo
jae
sti
adc
pop
mov
inc
cs
adc
in
xchg
dec
add
xchg
cmp
ja
shr
mov
lea
fld
dec
or
mov
lods
jbe
mov
jb
add
cmps
jle
push
popf
mov
rcl
pop
fisttp
inc
cdq
sar
(bad)
push
cmp
imul
pop
push
adc
enter
sbb
std
cli
jo
inc
jmp
mov
mov
imul
jae
mov
imul
mov
dec
cmp
outs
sub
imul
mov
adc
js
repnz
push
dec
jmp
push
mov
jbe
adc
enter
out
fld
mov
and
push
xchg
ficomp
shl
jae
loopne
and
fcmovnu
outs
adc
fisubr
int
retf
pop
cs
adc
mov
rol
test
sahf
sub
outs
test
sub
inc
das
sbb
sbb
mov
mov
bnd
stos
push
dec
bnd
xor
mov
push
sub
popa
mov
in
dec
add
ja
jmp
sub
test
cs
xchg
sbb
test
jbe
cmp
aaa
mov
mov
(bad)
xchg
pop
and
lea
lock
sub
retf
into
push
popf
stos
inc
dec
outs
mov
jo
mov
pop
in
call
sub
push
mov
push
mov
pop
fldcw
rcr
add
pop
cmp
lea
lock
sub
aam
mov
jmp
aam
in
push
mov
or
pusha
test
jl
add
js
dec
adc
push
cmp
popa
arpl
(bad)
adc
push
mov
dec
adc
jne
lea
push
and
push
ror
icebp
jno
ret
lea
fsubr
mov
jle
fisubr
inc
jo
mov
pop
in
sar
add
cli
sub
fsubr
inc
push
adc
xor
imul
movs
enter
push
out
retf
js
inc
sub
in
cmps
mov
push
inc
add
repnz
dec
adc
xchg
push
inc
popa
pop
mov
adc
lea
cmps
ins
add
add
sbb
add
pop
mov
pushf
push
mov
inc
sbb
jnp
(bad)
idiv
mov
push
dec
jns
jle
test
sub
mov
sub
jae
imul
test
test
(bad)
lock
inc
das
cmp
into
rcr
imul
mov
mov
or
push
push
mov
dec
inc
dec
cs
lods
aad
es
lea
js
stos
mov
mov
push
mov
sub
cmp
fs
adc
xchg
in
int3
jbe
(bad)
stos
jl
cmps
shr
jo
cmp
xchg
jl
jae
lea
xor
fisubr
inc
je
aas
dec
in
outs
sub
jl
cs
lea
xor
fisubr
adc
fwait
shr
push
imul
dec
(bad)
fidiv
ret
adc
push
ins
sub
fisubr
ret
shr
jl
sub
adc
shr
jl
repnz
leave
call
stos
add
xor
mov
cmp
lea
neg
outs
mov
adc
dec
popa
in
outs
sub
pop
sub
outs
xor
mov
add
jnp
add
test
stos
cli
adc
mov
add
push
mov
lea
js
inc
das
cmp
into
and
cli
jae
inc
jmp
mov
mov
imul
cbw
js
stos
mov
mov
dec
je
inc
sbb
data16
xchg
inc
stos
fs
push
(bad)
jbe
test
mov
jecxz
cmp
inc
push
sahf
mov
jo
xchg
lds
xor
cli
fwait
daa
sub
mov
dec
cs
gs
outs
sub
mul
xchg
add
xor
fisubr
cmp
xor
jo
outs
sub
pop
jecxz
adc
mov
repnz
test
jae
(bad)
clc
add
cwde
or
pop
xchg
lock
push
mov
test
push
into
rcr
pop
outs
sub
push
mov
in
out
mov
(bad)
imul
test
jmp
stc
add
jb
jnp
mov
push
pop
push
push
xor
cmps
shl
test
imul
pop
pusha
sub
sbb
out
imul
leave
cmp
fs
sahf
popf
cli
jmp
mov
shr
push
mov
or
pusha
test
lods
add
add
inc
icebp
mov
sbb
sub
iret
sbb
push
mov
retf
js
inc
sub
in
cmps
mov
push
inc
add
repnz
push
adc
xchg
push
inc
popa
pop
mov
adc
lea
cmps
add
add
sbb
add
pop
mov
pushf
push
mov
inc
sbb
jnp
(bad)
idiv
mov
push
dec
jns
jle
test
sub
inc
jno
add
add
push
jno
mov
lea
and
cli
jae
adc
xchg
(bad)
inc
jmp
mov
jp
int3
scas
mov
mov
mov
imul
mov
cmp
push
pop
inc
jp
jg
jl
ss
lea
xchg
fdivr
imul
and
mov
mov
dec
ins
fisubr
je
cs
xchg
push
mov
sbb
sbb
push
(bad)
out
clc
mov
lods
pop
mov
repnz
push
outs
sub
add
xchg
lea
fcomp
test
jnp
lea
jo
jb
add
ret
mov
nop
cdq
ins
shr
(bad)
imul
jl
imul
aas
dec
in
outs
sub
xor
imul
jo
cmp
lea
dec
in
outs
sub
mul
mov
es
fisubr
cmp
mov
ins
pop
xchg
(bad)
sub
sub
rol
add
fimul
shr
fimul
adc
xchg
jnp
in
icebp
jns
jmp
mov
ins
pop
jle
or
sub
test
sub
pop
iret
sbb
aad
jmp
ss
pop
repnz
sub
add
js
xchg
inc
fmul
cli
jae
lea
and
cli
jae
adc
xchg
(bad)
inc
jmp
mov
jp
int3
scas
mov
mov
mov
imul
mov
mov
jne
xchg
xchg
add
mov
js
xchg
out
je
shr
fidiv
add
add
mov
push
mov
push
mov
fcomp
lahf
pop
mov
cs
dec
sub
leave
test
or
clc
test
mov
repz
adc
xchg
fidiv
push
adc
sar
xchg
mov
cmp
mov
add
test
sbb
push
cmp
dec
(bad)
(bad)
mov
sub
inc
fwait
shr
aad
jmp
outs
mov
adc
dec
popa
in
outs
sub
es
fisubr
mov
outs
movs
push
and
push
ror
icebp
jno
ret
lea
fsubr
mov
unpckhps
data16
leave
test
or
clc
hlt
test
push
lock
cdq
shl
pop
inc
std
add
mov
movs
movs
stos
pop
les
data16
xchg
jnp
inc
ins
test
in
ficomp
and
add
dec
mov
jbe
lea
js
inc
mov
or
push
inc
ds
sub
fisubr
xchg
inc
add
(bad)
popf
mov
lea
push
pop
shl
dec
xor
in
fimul
js
cdq
xchg
xchg
test
adc
jg
int3
jbe
mov
nop
js
mov
push
mov
push
mov
fcomp
lahf
cmp
arpl
xor
into
dec
adc
xchg
push
inc
popa
pop
mov
adc
lea
sbb
push
xor
push
add
add
iret
sbb
push
mov
retf
js
inc
sub
in
cmps
mov
push
inc
add
repnz
dec
adc
xchg
push
inc
popa
pop
mov
adc
lea
cmps
xchg
add
add
sbb
add
xchg
add
out
fisubr
xchg
(bad)
idiv
outs
clts
dec
jmp
pop
stos
test
in
pop
xchg
mov
pop
in
sub
pop
das
js
lea
jb
jo
inc
add
mov
cwde
call
nop
call
test
xor
adc
nop
hlt
dec
inc
inc
rol
inc
inc
rol
inc
inc
rol
inc
inc
rol
inc
inc
rol
inc
inc
rol
inc
inc
rol
inc
inc
rol
ret
push
lds
cmps
shr
(bad)
imul
jp
push
or
fiadd
add
mov
jg
stc
imul
xor
fisubr
test
pop
mov
sub
sbb
add
test
mov
in
push
jmp
sbb
test
mov
xchg
xor
in
(bad)
stos
pop
sub
inc
add
fwait
shr
push
mov
nop
test
mov
outs
xchg
xchg
icebp
mov
dec
jo
pop
push
imul
lea
in
fimul
push
gs
outs
sub
mul
xchg
add
xor
fisubr
cmp
xor
jo
outs
sub
pop
jecxz
adc
ss
repnz
test
jae
add
push
jbe
or
xchg
mov
push
mov
jb
in
push
mov
js
xchg
push
shl
mov
cmp
mov
pop
pusha
pop
mov
pop
pop
in
add
push
lock
xchg
nop
xchg
pop
add
out
mov
xchg
cmp
and
cs
mov
mov
(bad)
in
xchg
push
xchg
pop
mov
cli
cmp
push
lsl
jb
retf
loopne
outs
xor
(bad)
call
cmp
cmp
jp
cli
sti
jmp
test
ret
mov
cwde
sbb
imul
enter
sbb
or
sub
mov
sbb
in
outs
sub
sbb
sub
pop
repnz
adc
add
push
jae
add
js
jecxz
adc
xchg
xchg
dec
mov
sub
pop
pop
cmp
mov
into
rcl
in
push
arpl
mov
mov
cli
cmp
xor
add
cs
mov
add
das
pop
popa
aad
xchg
mov
enter
xchg
inc
cmp
adc
fadd
or
xchg
mov
test
call
unpckhps
pusha
push
mov
clc
imul
clc
int3
repz
dec
pop
das
push
shr
js
sbb
xor
mov
jp
mov
jbe
ja
jb
mov
mov
aas
stos
or
sahf
shr
add
test
jp
mov
jbe
dec
mov
cmp
add
scas
push
adc
dec
xor
pushf
adc
shr
fisubr
ret
(bad)
out
add
mov
imul
fs
popf
retf
add
add
mov
jge
js
arpl
stos
into
in
jmp
jnp
push
add
add
dec
stos
imul
xor
fisubr
or
arpl
push
add
popa
mov
push
gs
push
add
xchg
or
leave
movs
mov
leave
out
rcr
shl
cmp
mov
ficomp
rcl
add
js
repnz
cmp
add
xor
jnp
push
movs
ss
add
add
lods
(bad)
mov
add
int
cmps
push
cmps
push
or
add
jmp
lea
push
pop
inc
add
ret
test
jbe
cs
leave
leave
and
(bad)
rcr
fs
dec
sub
clc
push
cmc
leave
das
push
cmps
test
push
jbe
cs
leave
leave
das
push
hlt
xor
or
push
stos
mov
ins
mov
pop
loop
add
adc
mov
stos
(bad)
adc
call
add
push
or
popf
push
lods
test
mov
adc
jbe
add
cmps
ja
add
outs
sub
mov
stos
retf
add
jo
cmp
lea
or
and
ror
das
pop
popa
pop
setp
mov
or
hlt
mov
imul
xchg
ror
pop
int
shr
ret
mov
shr
fimul
jbe
rcl
adc
dec
(bad)
sar
sbb
ins
(bad)
lea
js
inc
mov
clc
cs
push
lods
push
or
xor
or
pop
stos
sub
gs
mov
lahf
cmpxchg
push
jge
mov
test
jne
fldcw
adc
test
in
aad
repnz
adc
push
stos
push
jbe
add
or
and
test
add
or
and
jns
lock
rol
push
pop
push
call
clc
in
lods
adc
lds
or
mov
enter
in
(bad)
push
mov
jge
ins
add
mov
pop
leave
dec
mov
outs
movs
ret
mov
clc
dec
or
shr
outs
sub
cli
ja
int3
rcl
fdiv
sbb
sti
(bad)
pop
and
(bad)
out
hlt
(bad)
ja
xchg
lea
call
in
out
sub
push
scas
inc
ret
push
cmp
das
add
lods
dec
cs
jne
xchg
jmp
inc
mov
imul
aam
cs
cmc
or
es
not
push
or
pop
scas
retf
mov
mov
jbe
push
add
dec
bnd
cs
cmc
sbb
ins
rcr
addr16
push
mov
addr16
enter
in
ficomp
cmp
add
dec
add
das
pop
mov
lods
(bad)
nop
retf
mov
cli
lock
cmps
sub
add
std
pop
add
mov
ja
jmp
in
inc
sti
xor
cvtpi2ps
loop
jmp
dec
movs
ret
mov
xor
test
cmc
or
test
pop
jmp
cmps
add
adc
cmps
sbb
jmp
scas
ja
pop
mov
shl
clc
enter
in
ficomp
pop
add
add
hlt
pop
pusha
das
adc
add
mov
push
xor
(bad)
fild
ins
add
sbb
stos
add
and
popf
dec
movs
ret
mov
addr16
adc
shr
mov
(bad)
rcl
fdiv
sbb
xchg
fiadd
ja
rcl
loopne
icebp
lods
push
in
xor
jmp
retf
push
pushf
xor
xor
stc
fldcw
adc
aad
retf
test
mov
js
and
test
add
add
cdq
jle
push
scas
dec
push
aam
fidivr
lock
adc
shl
ja
push
xor
ucomiss
ja
inc
adc
mov
fidiv
or
sub
mov
push
jmp
fs
adc
lea
mov
fidivr
enter
in
(bad)
addr16
adc
shr
aad
test
adc
push
lods
mov
es
fisubr
daa
xchg
sar
popf
pop
sub
add
or
mov
or
not
jmp
adc
mov
in
icebp
nop
cwde
dec
shr
(bad)
imul
adc
sar
pop
push
dec
push
cs
stc
push
mov
and
pop
repnz
jns
test
pop
sar
add
cmp
xchg
add
adc
bnd
jg
cli
addr16
nop
push
jnp
or
lods
jmp
jne
pop
xchg
test
jp
cs
ja
push
in
xor
adc
cmc
mov
mov
ror
repz
add
cs
and
pop
clc
int3
mov
mov
sub
(bad)
addr16
adc
shr
mov
jbe
cs
add
int3
shr
push
pushf
xor
xor
stos
push
add
stos
push
pop
addr16
xchg
adc
adc
dec
mov
test
sbb
pop
imul
adc
add
adc
sub
std
push
stos
push
jbe
xchg
add
or
leave
dec
sub
and
xchg
sbb
jbe
lea
enter
nop
mov
lahf
sbb
lods
push
pushf
xor
in
jns
cli
gs
cmp
inc
(bad)
addr16
adc
shr
mov
jbe
cs
add
int3
shr
push
pushf
xor
xor
stos
push
add
stos
push
bnd
adc
dec
adc
sub
or
das
jbe
xchg
mov
in
pop
mov
fldcw
test
jbe
or
shl
pop
sub
(bad)
test
adc
xchg
stc
push
lods
(bad)
nop
retf
add
sti
mov
loopne
mov
pop
das
jbe
lea
jbe
sbb
mov
dec
jb
test
xlat
mov
mov
or
test
fidivr
or
add
stos
push
add
out
fisubr
cdq
add
scas
add
js
adc
fisubr
push
or
test
inc
or
lea
jg
shl
pop
cmp
adc
js
dec
movs
ret
mov
out
or
shr
or
test
dec
add
add
hlt
pop
shl
adc
add
mov
push
xor
(bad)
fild
ins
add
sbb
mov
add
add
mov
das
cmp
(bad)
and
sbb
adc
add
mov
jbe
cs
pop
das
jbe
lea
add
loop
xor
enter
in
fisubr
push
retf
mov
cs
add
test
or
add
cmp
xchg
add
adc
bnd
jg
cli
repz
shr
mov
or
lock
sti
ret
scas
std
sbb
xor
in
mov
and
pop
mov
jecxz
or
retf
neg
outs
sub
mov
hlt
pop
fnsave
adc
adc
push
mov
sub
mov
retf
and
pop
stc
or
outs
sub
add
mov
push
shr
or
add
ins
sti
(bad)
repz
or
add
or
pop
add
pshufw
fldlg2
mov
js
repnz
stos
jb
pop
jno
fist
mov
out
pop
test
out
and
shr
icebp
pop
out
push
jns
stos
fisubr
addr16
or
pop
jae
ins
shr
test
sub
xlat
outs
sub
xchg
clc
jne
jmp
or
stos
pop
sbb
test
in
aad
xor
push
jbe
add
or
and
test
add
or
and
cld
sub
adc
adc
jmp
in
xor
jmp
push
add
inc
jecxz
or
mov
sbb
daa
nop
adc
sar
scas
mov
or
hlt
pop
mov
add
lea
adc
lods
push
mov
push
lods
test
shl
pop
clc
xor
add
or
sub
std
mov
jmp
ins
hlt
out
lahf
or
lods
repz
add
test
or
das
cmp
xchg
add
adc
bnd
jg
cli
jmp
hlt
mov
sub
pop
mov
sbb
cli
jmp
hlt
mov
mov
js
pshufw
stos
ret
sbb
repnz
add
outs
mov
pusha
xor
lea
cmp
icebp
pop
mov
in
fisubr
push
fldenv
rcr
lods
sub
inc
add
add
test
adc
and
fisubr
inc
add
add
(bad)
lock
call
jb
fisttp
jae
repz
ins
sar
repnz
mov
addr16
iret
jo
jb
jbe
mov
out
fnstsw
xchg
das
cmp
ins
add
outs
cmp
jp
xchg
lods
mov
imul
mov
in
push
jle
or
xor
test
mov
jae
xor
cdq
jo
out
sbb
inc
adc
std
pop
sub
or
dec
sub
or
nop
in
xor
jmp
or
jmp
addr16
lods
jle
arpl
push
jg
sbb
adc
add
das
pop
adc
(bad)
nop
retf
mov
cli
lock
cmps
sub
add
cdq
leave
das
push
hlt
cs
mov
push
jmp
adc
push
sbb
xor
es
call
cs
mov
call
and
pop
xchg
adc
shl
retf
pop
sbb
xlat
jp
xchg
lods
mov
imul
pop
jl
or
call
jmp
jbe
sbb
test
das
cmp
xchg
add
lea
and
call
sub
inc
cmp
scas
xchg
nop
retf
(bad)
sub
mov
add
adc
pop
sbb
cmp
loopne
pshufw
stos
ret
adc
mov
adc
ror
adc
or
(bad)
in
(bad)
dec
add
das
pop
xor
(bad)
nop
retf
mov
cli
lock
cmps
sub
add
cmc
pop
das
sub
and
in
outs
add
xor
daa
add
cmps
adc
fstp
inc
add
add
hlt
pop
add
adc
add
mov
push
xor
(bad)
fild
ins
add
lahf
and
in
sar
fmul
cdq
add
das
xor
in
stos
dec
mov
outs
lods
jecxz
(bad)
js
mov
(bad)
fnstenv
mov
add
push
jl
in
jmp
cli
outs
imul
and
jns
lods
jb
or
push
mov
adc
or
add
ja
inc
sbb
adc
adc
shl
fs
pop
or
add
repnz
in
(bad)
jae
inc
sbb
adc
add
push
ins
retf
or
addr16
(bad)
fisubr
add
lahf
lods
push
push
js
adc
retf
stos
(bad)
and
lea
lea
(bad)
jmp
inc
sbb
adc
add
push
jmp
scas
pop
push
cdq
stc
into
in
ficomp
mov
fs
movs
jo
out
sbb
inc
adc
std
pop
sub
or
dec
sub
or
nop
in
xor
jmp
std
add
cli
push
mov
stos
fucomip
fisubr
mov
test
add
div
adc
js
ja
dec
clc
add
push
mov
or
adc
ins
dec
clc
jb
xor
jmp
leave
shr
pop
inc
xor
mov
jl
cli
pop
mov
mov
je
js
pop
mov
lock
imul
push
jl
nop
xchg
fdivrp
add
repnz
(bad)
sbb
test
cs
cdq
pop
into
out
adc
rol
sbb
vmread
cli
addr16
lea
jge
adc
dec
call
push
add
ins
sti
(bad)
repz
or
fidiv
(bad)
mov
imul
dec
xor
cli
bnd
sar
adc
js
sub
sub
pop
fld
adc
and
xchg
fimul
push
pushf
not
leave
and
cs
stc
push
lods
cli
ret
xchg
shr
and
in
mov
retf
sbb
mov
fisubr
or
add
mov
add
adc
xchg
std
fldenv
inc
mov
lock
fdivr
mov
(bad)
in
sar
add
ret
xchg
js
lock
rcl
fdiv
dec
cmp
int
repz
aad
ins
repnz
icebp
pop
stc
or
cli
bnd
sar
adc
(bad)
sbb
and
or
push
xor
xchg
pop
mov
jmp
jbe
jmp
mov
dec
jbe
xchg
xor
fisubr
jmp
jbe
fldenv
or
lods
sub
push
std
add
mov
lods
xchg
cs
xchg
adc
sar
mov
ret
mov
std
mov
jle
test
sub
dec
outs
dec
adc
cli
bnd
stos
push
dec
ja
xchg
push
mov
inc
jmp
push
jmp
pop
imul
pushf
adc
push
lods
call
sub
pop
sub
leave
das
push
hlt
jno
xor
mov
fs
jne
aas
stos
jle
test
sub
dec
outs
dec
adc
cli
cli
outs
pop
xchg
jmp
lock
inc
nop
and
cli
outs
push
dec
(bad)
vmread
lock
rcl
fdiv
dec
cmp
mov
cmp
aad
xchg
adc
stos
xor
call
sbb
adc
inc
in
push
mov
clc
repz
loopne
mov
fst
stos
cli
adc
cmp
jle
test
sub
dec
outs
das
cmp
add
hlt
mov
mov
jb
add
mov
aam
es
push
cmp
aad
clc
hlt
dec
mov
test
cs
popf
push
imul
aad
icebp
test
mov
mov
cmc
sub
push
repnz
or
fisubr
retf
rcl
fdiv
dec
cmp
adc
sahf
shr
mov
fucomi
mov
(bad)
call
inc
mov
in
inc
adc
sbb
add
cmp
cs
stos
jecxz
xor
enter
in
(bad)
addr16
xchg
jmp
jnp
xchg
test
in
aad
pop
test
push
stos
push
jbe
add
or
and
add
mov
and
mov
and
jb
aam
pop
or
add
scas
xor
scas
data16
test
sub
outs
sub
sbb
jge
adc
dec
clc
fsubr
or
or
inc
cmp
aaa
mov
or
stos
inc
aam
shr
fidivr
enter
das
lahf
outs
adc
lods
aas
mov
dec
mov
stos
sub
pop
jmp
lock
push
inc
mov
adc
or
push
xlat
js
or
lea
jbe
and
adc
xchg
stc
push
pushf
fisubr
push
sahf
push
addr16
push
inc
add
sar
sub
add
jmp
sti
stc
add
test
adc
ins
out
fisubr
dec
clc
das
mov
dec
adc
push
adc
or
inc
mov
hlt
pop
mov
scas
jo
pop
sub
(bad)
call
cmp
add
pop
mov
in
iret
and
fidiv
add
cli
pop
gs
adc
out
popf
arpl
jns
bnd
adc
jl
push
pushf
push
add
xlat
and
push
mov
lods
dec
or
loop
jge
adc
test
dec
sbb
xchg
mov
and
push
stos
idiv
gs
out
sar
cs
cs
pop
sub
(bad)
out
adc
shl
or
cli
ja
ret
adc
loop
jmp
icebp
sbb
ins
rcl
and
fidivr
enter
in
(bad)
jg
adc
ins
jo
pop
sub
push
loop
xchg
sub
lea
aad
sub
dec
add
sub
sub
add
sbb
mov
add
add
mov
pusha
and
sub
addr16
lds
stc
pop
or
dec
or
gs
mov
js
add
jbe
imul
jo
adc
icebp
add
shl
clc
enter
in
fisubr
fist
test
out
fadd
add
sbb
or
mov
stos
(bad)
clc
ins
(bad)
lea
cwde
pop
mov
add
into
js
pop
mov
sbb
adc
clc
pop
mov
out
cli
gs
addr16
retf
add
movs
test
pop
pop
and
cmp
(bad)
cmc
push
mov
lods
dec
cdq
mov
pop
out
add
cmps
pop
das
jbe
fldcw
xchg
(bad)
jmp
repz
cli
jne
lea
xchg
imul
(bad)
shr
jge
push
jnp
add
cdq
rcr
adc
jnp
mov
adc
icebp
je
push
adc
sbb
addr16
daa
test
popa
or
push
in
pop
pop
xor
xor
jp
jno
retf
fistp
repnz
icebp
ins
ret
test
neg
sbb
jb
or
loope
push
fstp
dec
sub
add
jbe
repz
adc
add
add
(bad)
rcl
mov
call
sub
sbb
arpl
mov
dec
sbb
adc
mov
or
fnsave
shl
fnsave
ror
mov
out
or
ror
push
push
sub
adc
adc
mov
adc
loopne
mov
shl
je
mov
mov
jmp
sub
call
push
sub
mov
mov
or
div
adc
leave
shr
push
mov
mov
or
push
mov
sub
xor
fisubr
stos
scas
or
lods
sub
xchg
rcl
fiadd
pop
jne
pop
sub
(bad)
mov
adc
rol
jo
sub
mov
stos
ret
jge
jo
lods
or
clc
imul
xchg
push
jne
jns
sbb
mov
stos
ret
jge
leave
cmp
mov
pop
jmp
mov
xor
fisubr
or
mov
jne
pop
sub
mul
pop
jne
jp
or
push
adc
enter
add
shl
enter
fisubr
pop
mov
in
fidiv
lahf
leave
mov
fldcw
inc
fld
fld
pop
sub
pop
mov
(bad)
pop
fsub
shr
or
add
cmp
sbb
cmp
mov
mov
jmp
sbb
sub
fisubr
call
pop
mov
push
pop
stos
pop
sub
adc
sbb
xor
jp
or
popf
js
repnz
stos
lea
mov
or
xchg
or
fsubr
cwde
jmp
mov
xchg
ja
inc
and
lea
leave
stc
fwait
jbe
adc
clc
sbb
xor
mov
test
sub
daa
pushf
(bad)
outs
mov
lea
sub
jno
adc
fisubr
ret
cmps
out
fisubr
aaa
xchg
xlat
in
ficomp
or
jb
or
stc
push
mov
push
xor
call
imul
add
jge
jp
xchg
in
xchg
add
sub
std
ror
(bad)
adc
sub
and
stc
push
test
nop
leave
mov
mov
or
adc
loope
aas
xor
adc
outs
nop
push
cmps
xchg
stc
aad
ins
jmp
das
xor
fisubr
inc
add
add
add
add
add
nop
cwde
cmp
ins
sti
(bad)
cmp
sub
add
mov
div
xchg
mov
imul
inc
add
outs
mov
fisubr
cmovle
xlat
in
fimul
adc
add
add
dec
add
mov
or
xchg
stc
aad
xor
dec
stc
dec
mov
xlat
in
(bad)
adc
xchg
cmpxchg
xor
and
or
add
cmp
pop
sub
jl
jns
add
(bad)
daa
stos
jle
test
inc
std
into
jo
add
jbe
bound
or
es
leave
cmp
or
mov
pop
push
jp
inc
jecxz
aam
mov
push
cmp
lea
and
imul
in
jo
jbe
out
fadd
mov
dec
lods
inc
addr16
cmp
jbe
repnz
mov
leave
das
mov
xchg
or
clc
sbb
adc
(bad)
fldpi
jp
int3
fs
dec
pop
mov
movs
cmp
pop
adc
les
hlt
jo
pop
mov
or
mov
push
ja
dec
cld
add
dec
or
cwde
icebp
pop
int
xchg
adc
rol
sbb
ins
(bad)
fldcw
pushf
(bad)
outs
cmp
ss
movs
adc
jo
out
sub
add
out
outs
sub
pop
fsubr
(bad)
cmps
adc
shr
push
lods
add
cwde
mov
sub
sbb
cmps
test
add
test
out
xchg
inc
cld
lea
add
mov
adc
in
push
jmp
pop
or
cli
bnd
(bad)
mov
inc
leave
cwde
stos
test
fisubr
or
std
add
pop
sub
aad
data16
dec
push
in
outs
sub
pop
fsubr
fidiv
sub
imul
arpl
or
fadd
sbb
mov
add
add
test
(bad)
push
lods
dec
push
std
push
imul
dec
mov
mov
mov
or
in
jo
mov
mov
jo
fisubr
call
push
fwait
push
adc
(bad)
shr
pop
lea
pushf
(bad)
outs
mov
xchg
xlat
in
fiadd
mov
sub
push
adc
jae
jp
or
mov
xor
fs
xor
addr16
ins
idiv
fdiv
and
test
bound
mov
aad
iret
hlt
dec
das
mov
add
adc
jne
xchg
adc
sar
lea
adc
test
outs
imul
sti
adc
add
jo
lahf
push
adc
hlt
push
dec
inc
add
push
cdq
out
outs
sub
pop
fsubr
(bad)
mov
or
in
pop
mov
push
stos
sar
fsubr
jmp
push
xchg
(bad)
ficom
xchg
inc
add
push
lea
ins
sti
add
ins
std
fisub
push
(bad)
aad
jb
pop
(bad)
int3
movs
pop
cmp
outs
cmps
inc
ja
outs
sub
add
in
fimul
dec
sti
aad
mov
adc
push
mov
pop
xor
push
jl
or
push
cs
mov
nop
leave
mov
enter
mov
or
cmp
sub
xor
jns
dec
gs
mov
jle
adc
push
pop
ret
xor
adc
fnsave
jns
mov
dec
sub
sbb
sub
add
icebp
jbe
aas
push
in
fisubr
test
mov
cs
ins
xchg
mov
call
popa
lea
fiadd
ins
test
adc
ins
out
add
hlt
dec
sub
stos
pop
jp
cmps
cmp
outs
lods
cmps
(bad)
pop
jne
outs
cmps
inc
ja
outs
sub
shl
imul
xchg
call
test
adc
push
jbe
mov
(bad)
mov
add
xchg
add
or
and
pop
push
adc
hlt
push
in
adc
inc
push
xor
adc
pop
inc
in
outs
sub
pop
mov
sar
pop
adc
cmp
xchg
or
xor
sbb
fisubr
push
sub
push
or
cwde
add
lea
ja
enter
xor
ficom
mov
lods
out
rcr
into
mov
adc
inc
repz
push
mov
push
jp
sbb
lea
sub
push
push
jne
pop
sub
in
outs
sub
pop
sub
pop
xchg
inc
add
push
fisubr
aad
sub
inc
push
lock
pop
fisubr
nop
leave
inc
pusha
adc
sub
inc
(bad)
ficomp
(bad)
cmp
test
fisubr
fxam
pop
push
mov
lea
adc
push
or
(bad)
push
xchg
add
js
pop
mov
or
push
or
cwde
push
pop
inc
pop
sub
jmp
mov
push
cmp
lea
loopne
mov
movs
test
in
fimul
inc
fcmovnu
outs
mov
fidiv
push
mov
inc
fcmovnu
outs
mov
add
sub
fisubr
xchg
pop
into
and
adc
jge
sbb
dec
ret
xor
adc
add
std
cli
jb
jp
dec
inc
in
outs
sub
popf
push
gs
pop
sub
call
inc
in
outs
sub
popf
pop
loope
cli
mov
add
pop
mov
and
cli
ins
repz
jne
std
jl
mov
js
add
cdq
jp
dec
inc
shr
imul
(bad)
sbb
fnstenv
stos
leave
jmp
or
push
idiv
test
lea
mov
mov
test
stc
mov
jne
dec
inc
cs
push
mov
or
(bad)
push
nop
lea
inc
fcmovnu
outs
inc
cmp
xlat
adc
(bad)
push
adc
and
push
dec
(bad)
sbb
repz
adc
not
mov
frstor
test
in
lea
mov
sar
jle
sbb
adc
push
add
push
mov
or
fld
pop
sub
(bad)
(bad)
sbb
add
mov
gs
pop
sub
out
mov
rcr
xor
pop
mov
adc
xchg
clc
or
shr
push
jl
in
sub
sub
rol
ret
test
out
add
add
push
xlat
clc
mov
sub
add
stc
cs
cmc
jl
ret
test
mov
mov
arpl
push
popf
push
test
cli
jb
mov
dec
fcmovnu
outs
mov
adc
push
add
fnsave
es
repz
adc
mov
mov
dec
fstp
push
adc
cmp
sub
and
adc
jge
sbb
dec
sub
adc
add
std
cli
jb
jp
dec
inc
in
outs
sub
popf
push
gs
pop
sub
call
inc
in
outs
sub
popf
pop
loope
cli
mov
add
pop
mov
and
cli
ins
repz
jne
std
jl
mov
js
add
cdq
jp
dec
sub
outs
sub
or
inc
(bad)
sbb
fnstenv
stos
leave
pop
es
push
idiv
mov
add
fmul
adc
push
test
stc
mov
jne
dec
inc
cs
push
mov
or
(bad)
push
nop
lea
inc
fcmovnu
outs
inc
cmp
xlat
adc
sti
mov
ret
test
sub
jl
mov
jo
outs
mov
rcr
push
lock
js
or
fstp
das
mov
jo
pop
in
push
(bad)
retf
movs
jo
arpl
std
int3
add
pop
das
push
mov
movs
arpl
aad
push
std
push
cmc
push
mov
push
imul
sub
pop
add
scas
shr
push
in
mov
adc
call
sub
clc
fisubr
jmp
add
add
sub
ins
es
sar
push
sar
adc
dec
inc
push
test
adc
jge
xchg
repnz
cmp
add
cwde
shl
pop
sub
mul
shr
pop
or
push
lea
lods
test
mov
sub
fistp
sqrtps
dec
fcmovnu
outs
mov
mov
lahf
xor
and
jb
mov
dec
fcmovnu
outs
mov
or
in
push
fistp
lods
out
cli
pop
xchg
ret
cdq
mov
jl
adc
cld
pop
pop
inc
pop
sub
in
outs
sub
sbb
xor
add
add
(bad)
js
cmp
test
mov
rcr
cdq
adc
dec
push
rol
xchg
js
and
dec
popf
pop
mov
mov
out
cdq
adc
push
popf
shl
push
xchg
add
js
pop
mov
mov
lahf
xor
and
sub
cmps
add
and
repnz
test
mov
les
in
ficomp
sbb
mov
and
lea
adc
and
in
(bad)
mov
sub
sbb
add
sub
or
dec
popf
pop
mov
mov
out
cdq
adc
push
popf
shl
push
xchg
add
js
pop
mov
mov
lahf
xor
and
sub
cmps
add
and
repnz
test
inc
(bad)
ficomp
adc
(bad)
js
cmp
test
mov
rcr
fcom
xor
fisubr
or
fwait
shr
pop
or
jge
outs
sbb
cmp
test
or
push
imul
outs
mov
mov
lahf
xor
and
jb
mov
dec
fcmovnu
outs
mov
or
in
push
fistp
lods
out
cli
pop
xchg
ret
cdq
mov
jl
adc
neg
inc
pop
sub
in
outs
sub
sbb
test
adc
pop
(bad)
js
cmp
test
mov
rcr
nop
nop
js
add
cli
push
mov
pop
pop
fisubr
jmp
add
add
pushf
cs
(bad)
xor
fisubr
xlat
cld
add
movs
movs
stos
icebp
les
hlt
sahf
test
xor
outs
stos
cli
cvtps2pd
test
push
mov
clc
pop
(bad)
jp
pusha
inc
in
outs
sub
popf
push
gs
pop
sub
call
in
push
xchg
or
mov
mov
lea
inc
fcmovnu
outs
inc
cmp
xlat
adc
push
ret
sbb
inc
pop
sub
jl
mov
jo
jb
or
fwait
shr
push
test
or
clc
fsubr
or
popf
push
mov
neg
xchg
add
js
pop
mov
or
pop
cs
(bad)
fst
push
or
mov
cmp
mov
sub
nop
fst
push
or
mov
cmp
xor
fild
push
fbstp
push
ins
dec
pusha
inc
push
add
mov
sub
movs
stos
icebp
les
hlt
sahf
pop
mov
and
std
pop
lds
sub
into
jp
pop
pop
xchg
pop
mov
hlt
test
or
push
test
xor
leave
shr
push
in
idiv
add
test
or
adc
add
fwait
shr
push
cmc
into
cdq
adc
dec
das
shl
jmp
cs
inc
add
sub
mov
cs
(bad)
mov
movs
fimul
js
es
fidivr
add
ss
in
add
test
sub
fisubr
mov
fisubr
or
inc
(bad)
(bad)
add
fdivrp
in
aam
cs
cmc
jl
test
sub
mov
mov
arpl
add
push
mov
stc
mov
js
ja
lahf
adc
bound
outs
sub
pop
popf
inc
fnsave
lldt
mov
jbe
(bad)
sbb
popf
imul
jp
dec
inc
in
outs
sub
cmps
pop
jae
pop
sub
stos
cli
test
or
cli
test
or
cli
call
add
in
mov
adc
mov
adc
sub
in
adc
fpatan
lock
in
outs
sub
mov
lods
fadd
out
js
pop
mov
(bad)
mov
js
ja
lahf
and
mov
push
mov
or
mov
arpl
sub
ins
ret
sbb
dec
pop
push
int
(bad)
clc
jo
add
in
jl
test
sub
or
sub
fisubr
ret
push
inc
in
outs
sub
jnp
in
jb
jns
adc
or
pop
pusha
push
sub
sti
sldt
sub
jns
pop
nop
xchg
mov
or
es
(bad)
lock
test
sub
fisubr
cmp
push
pop
bound
adc
mov
test
cs
inc
in
outs
sub
dec
sar
jno
lods
jmp
jbe
mov
push
mov
imul
outs
mov
sub
push
or
cwde
add
mov
dec
fcmovnu
outs
mov
or
in
push
fistp
lods
out
cli
pop
mov
cdq
mov
jl
adc
push
mov
ret
test
sub
fwait
push
clc
lea
adc
adc
shl
dec
(bad)
aaa
sbb
sub
dec
add
sub
and
ins
sti
lea
inc
fcmovnu
outs
inc
int3
sbb
shl
aas
test
cli
xlat
aam
cs
cmc
jl
call
pop
mov
mov
arpl
add
mov
cli
pop
mov
outs
mov
and
pusha
inc
in
outs
sub
push
popf
inc
fnsave
cs
add
jp
dec
inc
in
outs
sub
std
mul
push
movs
xor
sbb
sub
pop
push
push
sbb
fnstcw
mov
rcr
or
rol
xchg
xlat
jl
mov
stos
jp
test
sub
and
adc
jb
jp
pusha
inc
in
outs
sub
popf
push
gs
pop
sub
call
cmc
push
out
cdq
adc
pop
loope
cli
call
pop
mov
and
cli
ins
dec
clc
mov
sbb
and
imul
outs
sub
mov
inc
fcmovnu
outs
outs
add
test
xor
lahf
outs
adc
fnsave
or
mov
adc
jmp
outs
into
xchg
jmp
js
ret
sbb
pop
adc
mov
or
mov
imul
sbb
push
out
cdq
adc
pop
loope
push
push
lea
js
ja
sbb
arpl
or
inc
(bad)
fiadd
push
ret
cdq
mov
jl
adc
add
sar
mov
les
in
(bad)
jne
in
xchg
push
call
mov
inc
in
outs
sub
add
aaa
push
movs
xor
mov
in
(bad)
cwde
ret
test
scas
add
inc
add
mov
and
jb
mov
rcr
ret
test
mov
jne
pusha
inc
cs
cmc
push
ffreep
cdq
adc
push
jge
cli
pop
test
nop
(bad)
push
int
(bad)
repz
add
jbe
(bad)
sbb
std
lea
cmp
mov
rcr
mov
fidiv
xchg
add
hlt
dec
retf
adc
push
jne
pop
sub
sub
mov
inc
fisubr
or
xor
sbb
fisubr
push
sub
push
or
cwde
add
lea
ja
enter
xor
ficom
mov
lods
out
rcr
into
mov
adc
inc
repz
inc
inc
in
outs
sub
and
imul
jp
out
mov
ffreep
cdq
adc
iret
xor
movs
mov
rcr
pop
imul
push
jne
outs
sub
fisttp
mov
imul
xchg
add
xor
inc
cmp
mov
fidivr
cmp
in
fisubr
sahf
outs
leave
test
cmp
jp
mov
ret
sbb
or
fld
jg
mov
sbb
inc
jmp
ret
sbb
jmp
gs
pop
sub
out
inc
cs
fst
rcr
neg
xchg
add
rcl
mov
sub
ret
test
xor
mov
cdq
adc
push
out
cli
jp
mov
pop
add
fdiv
ret
sbb
jmp
arpl
lea
inc
fcmovnu
outs
stos
cli
or
or
lahf
xor
jns
jb
(bad)
sbb
out
inc
cs
lahf
push
or
enter
xchg
lock
mov
or
popf
push
gs
pop
sub
call
fcmovnu
outs
mov
mov
in
fisubr
mov
pop
(bad)
stc
fwait
rcr
add
adc
outs
cld
push
inc
mov
stc
dec
inc
ja
fmul
jb
mov
fld
lods
cld
adc
out
fisubr
retf
adc
fisubr
cld
and
dec
outs
fld
add
cmp
in
fidiv
retf
adc
sar
retf
adc
mov
pop
or
lea
pop
sbb
test
outs
sub
aad
pop
adc
pop
test
mov
iret
call
mov
iret
call
mov
iret
call
mov
iret
call
mov
iret
call
mov
iret
call
mov
iret
call
mov
iret
call
mov
iret
call
mov
iret
call
mov
iret
call
mov
iret
call
mov
iret
(bad)
fld
shr
push
inc
(bad)
jmp
pop
inc
add
adc
js
(bad)
stc
add
push
dec
and
clc
add
add
dec
add
add
jbe
in
test
das
add
push
xor
jmp
mov
fcompp
add
cmp
iret
add
add
cmp
iret
add
add
cmp
iret
add
add
cmp
iret
add
add
cmp
iret
add
add
cmp
iret
add
add
cmp
iret
add
add
cmp
iret
add
add
cmp
iret
add
add
cmp
iret
add
add
cmp
iret
add
add
cmp
iret
add
add
cmp
iret
add
add
cmp
iret
add
add
cmp
iret
add
add
jo
pop
jb
xchg
jge
add
sbb
retf
lock
jge
inc
add
adc
jg
pop
stc
or
mov
cld
or
in
in
cmp
cli
inc
adc
add
in
fiadd
or
cli
cli
js
cli
cld
mov
cli
add
cli
out
hlt
cdq
xlat
sub
pop
push
adc
jne
inc
jmp
cs
mov
lock
pop
pop
out
js
mov
call
test
sub
mov
mov
rcl
fadd
fidivr
add
ja
out
test
int
sahf
xchg
xchg
lds
adc
cmc
sbb
and
jmp
(bad)
mov
ror
loopne
and
adc
outs
inc
push
inc
adc
sub
out
in
pop
push
test
and
outs
dec
ret
dec
lds
cmps
sti
js
xor
xchg
(bad)
fist
sbb
push
jmp
cdq
lahf
outs
dec
fiadd
lds
call
popf
mov
sub
push
cmp
(bad)
in
leave
ins
sub
(bad)
fst
pop
jmp
pop
ret
adc
fcom
and
push
cmp
(bad)
in
push
daa
jmp
(bad)
xor
inc
pop
inc
adc
(bad)
or
cdq
push
daa
sbb
xor
fwait
xor
bound
cs
cmp
mov
mov
sbb
mov
adc
sbb
or
(bad)
and
fadd
push
test
loope
sub
movs
lahf
outs
mov
ror
call
push
push
test
movs
mov
in
jb
or
call
mov
lea
sub
in
mov
es
imul
and
adc
stos
lods
sub
mov
fmul
leave
ins
sub
(bad)
fst
sbb
sbb
in
mov
push
push
pop
xchg
mov
and
push
cmp
(bad)
in
push
daa
jmp
(bad)
xor
inc
pop
inc
adc
(bad)
or
cdq
scas
cs
imul
and
adc
addr16
bound
cs
cmp
mov
mov
sbb
mov
add
(bad)
mov
push
pushf
xor
out
cmps
pop
call
push
sbb
jecxz
fcomp
fwait
or
loope
sub
movs
lahf
outs
mov
ror
call
push
push
test
movs
mov
or
out
cs
test
and
(bad)
mov
and
bnd
xchg
lods
dec
jl
cld
sub
hlt
js
jae
xor
mov
sbb
call
inc
fstp
outs
popa
pop
aad
push
adc
push
push
mov
mov
cli
pop
xchg
gs
cld
mov
adc
(bad)
loope
cli
or
sub
add
clc
ins
ror
and
sub
dec
adc
into
clc
ins
fisttp
add
icebp
push
mov
mov
xor
inc
mov
xchg
frstpm(287
lea
mov
pushf
out
mov
addr16
seto
push
retf
lea
add
sahf
xchg
ins
aam
cdq
jbe
xchg
in
push
mov
jo
call
cmp
sub
sub
es
icebp
sar
ins
iret
xor
or
std
push
pushf
cli
ret
sar
adc
(bad)
jmp
je
jbe
pop
das
cmp
xor
dec
lea
sbb
dec
or
nop
hlt
pop
jmp
push
scas
sub
mov
add
stc
fst
fcom
(bad)
cli
adc
(bad)
jmp
sub
mov
jbe
int
je
push
jl
dec
ror
loopne
in
sbb
test
adc
jmp
jbe
pop
jbe
lea
xchg
pop
jnp
push
mov
loopne
adc
push
add
(bad)
icebp
sar
ins
sti
inc
xlat
mov
clc
mov
jne
fistp
mov
repnz
(bad)
ja
nop
retf
sqrtps
hlt
dec
(bad)
frstpm(287
adc
lahf
jae
or
icebp
scas
mov
cli
push
jecxz
mov
sbb
std
jmp
out
fisubr
aad
(bad)
out
hlt
dec
mov
dec
xor
cli
ins
jecxz
mov
jbe
push
cmc
aad
icebp
aam
add
ins
sti
adc
push
sti
sbb
(bad)
xchg
or
cs
mov
lock
je
cs
icebp
pop
lods
mov
cmp
sub
mov
cld
test
add
mov
je
cs
icebp
cdq
jbe
xchg
in
push
mov
jo
call
and
cs
add
xor
add
push
lock
adc
push
dec
fdivr
sub
scas
pop
inc
push
aam
aad
inc
das
and
mov
sub
push
mov
or
adc
(bad)
dec
mov
loopne
push
out
xchg
push
stc
aad
mov
adc
mov
repz
das
loope
add
jl
sbb
into
push
lock
and
dec
add
xchg
add
dec
std
jg
mov
test
stc
push
call
fstp
cli
ins
fisttp
xchg
std
push
mov
mov
mov
test
add
or
xchg
add
(bad)
repnz
idiv
ins
repz
(bad)
mov
(bad)
mov
sbb
dec
std
push
mov
mov
xchg
pop
add
imul
fist
or
push
not
hlt
ins
(bad)
outs
cmps
mov
or
stc
nop
jo
sti
sub
cwde
mov
mov
xchg
pop
push
addr16
mov
xor
xor
adc
adc
(bad)
not
not
inc
mov
mov
pop
es
fdiv
pop
js
es
fidivr
inc
mov
sub
sub
ja
jo
or
mov
inc
jle
mov
out
push
(bad)
in
xor
nop
in
xor
in
movs
or
adc
fdivr
sbb
mov
stos
xlat
in
fisubr
mov
imul
enter
in
(bad)
ins
(bad)
rcl
iret
fsub
xor
test
je
rcl
mov
lea
clc
mov
add
sub
jae
mov
jb
lea
adc
jmp
js
pop
push
rcl
outs
mov
and
(bad)
icebp
movs
clc
pop
mov
mov
adc
sub
fiadd
or
push
stos
(bad)
clc
gs
lea
lahf
mov
cmp
(bad)
call
xor
pop
xor
and
fidivr
add
pop
bound
test
jnp
cli
gs
adc
int3
mov
stos
fistp
shr
lock
xchg
aad
cmp
mov
lahf
out
imul
ja
or
(bad)
das
mov
inc
retf
mov
out
aaa
cs
sbb
popf
inc
jl
gs
fcomi
sub
pop
ins
or
outs
mov
mov
sbb
imul
ja
or
(bad)
xor
mov
iret
jbe
shl
cmp
mov
test
into
pop
hlt
push
in
sub
aad
adc
dec
pop
mov
jg
ret
outs
cmps
push
lahf
lds
lea
inc
jl
mov
push
mov
jg
inc
(bad)
mov
push
lods
cmps
push
sbb
and
xchg
mov
or
cmp
das
cmp
xchg
mov
(bad)
inc
xchg
xlat
lea
adc
dec
mov
out
mov
xchg
stos
fisubr
pmulhuw
in
icebp
dec
stos
retf
add
xchg
out
fisubr
test
test
sub
pop
push
push
test
scas
enter
out
fisubr
xchg
lea
lahf
repz
mov
lea
outs
sub
lahf
mov
push
ret
push
movs
(bad)
or
push
daa
sub
mov
xchg
xor
add
in
add
add
data16
lods
ja
add
(bad)
scas
ja
mov
outs
ja
xchg
test
out
(bad)
jbe
cld
cmps
shr
mov
(bad)
shr
(bad)
ins
aaa
mov
adc
sub
das
cmp
mov
push
rcr
ficomp
dec
sbb
mov
iret
ss
pop
sbb
addr16
push
call
retf
(bad)
mov
clc
ins
cmp
mov
rol
pop
push
jb
push
inc
mov
xchg
mov
div
cmps
mov
popf
cmp
jmp
jo
mov
pop
out
sbb
fmul
adc
push
icebp
in
loope
(bad)
sub
jns
hlt
pop
add
pushf
(bad)
in
sbb
ins
dec
(bad)
and
xor
stos
es
inc
adc
push
jmp
mov
jp
sbb
dec
sbb
sub
mov
mov
cmp
push
mov
nop
leave
lods
xchg
jbe
out
mov
mov
push
hlt
pop
push
inc
add
push
jns
push
jmp
dec
ins
pop
adc
stos
jle
test
ror
cmp
push
cli
repnz
push
mov
test
(bad)
out
enter
stos
mov
sahf
lods
fsubrp
adc
mov
push
sub
inc
imul
enter
loop
jmp
or
addr16
inc
cmp
shl
jge
push
xchg
stos
jle
cmps
jge
pop
test
jl
cli
gs
lea
or
aam
push
das
mov
out
push
jne
fsubr
lea
stos
pop
sbb
mov
in
icebp
ja
iret
lea
lods
ret
ins
dec
rcr
mov
mov
imul
add
add
or
out
fdivr
gs
mov
(bad)
pusha
inc
hlt
cmps
adc
retf
out
retf
add
mov
lahf
outs
jmp
add
test
add
or
lahf
outs
jmp
add
test
add
xor
lahf
outs
jmp
add
test
add
cmp
lahf
outs
jmp
add
test
add
mov
lahf
outs
jmp
add
test
add
sub
lahf
outs
jmp
jo
ret
ins
rcl
ins
mov
ins
fucomi
loope
add
xor
and
in
sub
add
xchg
stos
rcl
push
stos
dec
lahf
adc
sbb
shl
jo
ret
ins
rcl
ins
imul
fucomi
dec
icebp
add
xor
and
in
outs
aam
add
test
adc
sbb
shl
push
push
push
or
fs
iret
fldcw
or
pop
js
jp
sub
add
jns
lods
sub
aam
jmp
dec
adc
clc
arpl
outs
sub
mov
push
mov
ins
mov
stos
fiadd
adc
push
test
pop
ret
stos
ficomp
shl
addr16
in
mov
add
or
or
lods
cli
stc
or
test
cwde
sbb
retf
jle
rcr
adc
push
sub
shl
imul
jmp
push
in
fisubr
(bad)
in
mov
or
das
leave
jp
sub
retf
jge
add
in
scas
jl
test
sub
scas
jle
sbb
call
adc
adc
mov
lea
adc
mov
lea
adc
mov
lea
adc
mov
push
inc
sub
adc
add
mov
or
(bad)
jns
cs
dec
sub
fisubr
pop
(bad)
cli
dec
add
pop
stos
les
sub
inc
xchg
mov
mov
fild
clc
fcomp
and
shl
adc
push
xor
iret
shl
adc
push
xor
js
ja
and
jp
sub
lods
shl
push
xor
iret
shl
adc
push
xor
js
ja
mov
in
pop
das
jbe
lea
call
lea
push
jnp
pop
add
(bad)
shl
adc
push
xor
jo
pop
mov
or
xchg
icebp
jb
repnz
adc
popf
std
test
gs
(bad)
in
push
lods
test
add
stos
push
outs
sub
fisubr
iret
shl
adc
push
xor
iret
shl
adc
push
xor
js
ja
or
jmp
dec
lods
pop
mov
cli
pop
mov
cs
in
pop
das
jbe
lea
call
(bad)
jmp
mov
shl
adc
push
xor
fwait
push
add
(bad)
loop
sub
aam
fdivr
cli
pop
mov
js
jae
ret
mov
sbb
adc
(bad)
cmc
fstp
pop
in
mov
out
(bad)
jmp
mov
(bad)
ins
stos
fidivr
aad
hlt
vmovdqu
mov
adc
add
xchg
div
mov
sbb
jge
xchg
sub
arpl
lods
sahf
push
pop
imul
stos
(bad)
sub
or
lahf
dec
jge
mov
sbb
jl
add
ja
cld
xor
jae
ret
aam
add
mov
cs
ret
jl
je
adc
fisubr
movs
pop
xor
js
sbb
ins
sub
mov
push
rcl
(bad)
clc
clc
and
outs
sub
sbb
call
call
aad
(bad)
ja
dec
cmp
jbe
add
xor
pop
sub
jns
cmp
stc
pop
in
test
sub
jecxz
sub
out
push
xor
add
in
sahf
iret
in
fisubr
clc
mov
call
lods
not
lods
fucomp
fidiv
mov
addr16
mov
add
adc
imul
je
shr
xchg
and
out
add
cli
push
push
lea
lods
cli
add
sbb
sub
aam
stos
popf
repnz
push
adc
stos
lods
pop
pop
xchg
test
push
aam
fiadd
popf
pop
jmp
rcl
pop
sub
in
sbb
imul
mov
test
pop
popa
pop
fs
jmp
lea
xor
adc
call
add
mov
jbe
imul
test
push
push
lea
push
add
mov
in
push
mov
or
dec
sub
mov
pop
jmp
xchg
shr
push
pop
addr16
in
dec
int3
in
fisubr
dec
sub
sbb
adc
xchg
in
aam
shl
mov
pushf
imul
arpl
add
mov
sub
xchg
and
jge
add
imul
adc
cli
imul
adc
push
add
cli
push
pop
(bad)
clc
clc
sbb
push
mov
jns
popf
adc
inc
add
(bad)
lods
sar
mov
(bad)
in
repnz
adc
js
pushf
mov
push
add
or
mov
jmp
add
add
cli
call
in
push
push
push
or
cs
cmc
pop
xor
push
xchg
jmp
inc
adc
cmps
loope
popa
inc
pop
out
in
push
push
push
or
cs
fldcw
jl
ret
test
jbe
adc
fisubr
cdq
bound
rcr
into
in
(bad)
out
(bad)
jmp
(bad)
ret
test
ja
ror
cmp
mov
(bad)
clc
neg
push
jne
add
sbb
sub
sbb
add
push
add
in
xor
in
fiadd
xor
js
clc
jge
in
add
(bad)
cli
pop
pop
mov
sub
and
add
jg
sahf
adc
test
imul
(bad)
sub
mov
enter
sub
jbe
add
outs
sub
sub
jp
hlt
addr16
cmp
push
jne
in
or
aam
shr
jno
push
dec
and
pop
shr
mov
popa
stos
fiadd
jne
in
sub
in
(bad)
sub
lods
call
inc
or
pushf
outs
mov
or
imul
leave
das
pop
popa
pop
lock
leave
clc
sahf
mov
pop
clc
cdq
shr
fdiv
sub
sbb
xchg
test
sbb
dec
add
xor
xchg
jae
ins
rcl
in
cmps
mov
(bad)
test
adc
jge
repnz
add
add
stos
(bad)
cs
add
add
js
adc
or
xor
adc
clc
push
fwait
outs
sub
lea
popf
js
push
jne
in
cmp
add
(bad)
loop
aam
sub
add
push
lods
xor
test
add
hlt
outs
not
adc
mov
add
aas
daa
inc
add
movs
fild
add
xchg
ficomp
shl
daa
inc
add
dec
aad
push
dec
xchg
mov
out
mov
add
add
add
hlt
fdivrp
add
pop
pop
and
add
push
mov
in
add
(bad)
out
inc
add
outs
pop
std
add
mov
add
add
gs
nop
sub
add
jmp
scas
rol
data16
js
imul
pop
push
inc
pop
pop
std
add
xor
pop
push
dec
add
inc
fldcw
add
jmp
inc
adc
push
inc
add
fidivr
test
push
xchg
push
test
inc
fs
leave
call
jl
push
jl
ins
push
adc
mov
outs
popa
imul
shr
push
test
sbb
adc
xchg
add
xor
jmp
inc
add
xor
add
aaa
jle
adc
call
push
aam
iret
mov
in
xchg
jmp
pop
push
fs
mov
add
jae
adc
ins
rcl
lea
or
jne
aas
inc
popa
stos
fidiv
inc
outs
lods
clc
and
mov
adc
test
ret
mov
adc
sub
add
add
add
clc
fisubr
add
or
jne
in
scas
jbe
repnz
imul
outs
push
add
test
adc
push
adc
popf
repnz
xor
cmps
repnz
out
icebp
jb
repnz
adc
test
fisubr
data16
test
xor
jl
cdq
es
ins
shr
mov
pop
clc
fwait
xchg
outs
sub
ins
in
sub
add
add
add
neg
outs
sub
or
sub
outs
lods
clc
mov
outs
sub
add
xchg
cmps
and
shl
es
shl
xchg
stos
dec
adc
jge
repnz
adc
adc
ins
add
in
ficom
inc
rcl
cmps
cmp
cdq
dec
adc
or
(bad)
jne
stc
mov
cmp
push
pop
mul
pop
pop
sub
pop
clc
mov
xchg
jmp
jne
pop
es
pop
or
add
add
push
and
outs
mov
(bad)
fbld
cmps
dec
adc
fld
ja
xchg
shl
lea
add
scas
in
(bad)
cmp
es
shr
push
aas
pop
or
pop
neg
lods
pop
fnsave
add
sub
fisubr
ret
bound
(bad)
xchg
fcmove
push
test
sub
das
mov
or
and
outs
das
inc
leave
xchg
sub
adc
shr
ficomp
clc
adc
push
inc
popf
mov
ret
lea
ret
cmp
das
mov
shr
in
(bad)
mov
hlt
dec
adc
in
outs
sub
retf
xor
jl
cmp
adc
sub
shr
jo
lods
inc
add
js
jg
sub
xchg
push
shr
pop
sub
in
mov
add
sahf
pop
jmp
jb
in
pop
sub
or
or
add
fldln2
fisubr
inc
clc
adc
add
outs
sub
add
add
(bad)
ja
stos
add
add
jae
les
js
adc
in
push
lods
xor
push
or
inc
mov
cmps
jae
mov
fisubr
sub
test
cwde
add
xchg
inc
jmp
sub
in
mov
sbb
jne
cmp
dec
jmp
fld
movs
icebp
mov
mov
loopne
clc
jno
outs
sub
fs
pushf
jae
jbe
pop
clc
bound
add
jns
repnz
mov
and
in
adc
test
sbb
pop
pushf
outs
adc
(bad)
imul
xchg
add
jns
cli
bnd
dec
or
adc
lods
sub
pop
inc
test
pushf
outs
clc
inc
cmp
jl
repnz
dec
adc
fcmovnu
outs
sub
lahf
mov
add
or
push
movs
push
mov
push
test
add
jl
add
cs
dec
jo
or
push
retf
fwait
repnz
adc
stos
and
add
xchg
das
or
div
push
outs
or
(bad)
test
push
(bad)
jmp
test
push
jmp
ret
sbb
jne
push
mov
fisubr
les
mov
fwait
rol
jge
repnz
fwait
pushf
lods
sahf
out
sub
add
add
or
shl
adc
imul
mov
pop
jmp
popa
shr
lods
cli
loop
xor
pop
lods
pop
adc
mov
adc
and
ficom
push
mov
repnz
add
pusha
pop
and
or
movs
jmp
adc
adc
test
push
push
inc
clc
adc
enter
jmp
mov
sbb
lods
sahf
push
jmp
inc
add
sub
add
add
icebp
or
cs
mov
gs
dec
ret
xor
loope
shr
mov
adc
or
or
add
int
fisubr
(bad)
lea
repnz
xor
adc
vmread
ins
fcomp
adc
adc
test
mov
jo
sar
xchg
mov
sbb
ror
xlat
iret
lea
jge
js
(bad)
mov
sub
jge
outs
adc
sub
push
cwde
pushf
outs
jbe
lea
js
(bad)
mov
sub
jge
ja
add
shl
imul
fdivr
dec
jns
sub
fdiv
cli
push
mov
js
movs
pop
lds
test
push
add
cdq
add
hlt
ins
repz
mov
add
cli
gs
inc
xor
fisubr
and
mov
mov
mov
fst
repnz
mov
jbe
xchg
jmp
mov
mov
lock
(bad)
lock
call
mov
jecxz
fs
push
jne
in
sub
add
test
pop
aad
add
and
jge
push
mov
jmp
add
add
lods
cli
add
push
shr
fidiv
cdq
(bad)
ins
add
adc
jge
repnz
adc
icebp
icebp
popa
mov
int3
test
xor
pop
outs
sub
mov
dec
cld
es
pop
cmp
or
pop
push
adc
or
test
mov
outs
das
cmp
push
sub
(bad)
rol
ja
add
movs
jmp
add
pop
adc
add
pop
mov
add
push
stos
or
ret
test
lods
inc
add
jbe
add
arpl
in
pop
sub
in
and
push
xor
dec
mov
cmp
mov
jecxz
sub
or
add
mov
les
repnz
in
(bad)
popa
mov
or
aad
ja
sub
cli
ja
les
add
pop
movs
add
add
add
hlt
jo
pop
push
xor
std
repnz
add
cs
std
pop
(bad)
into
adc
sub
gs
retf
out
fisubr
jbe
adc
mov
adc
fidivr
aaa
sub
aad
es
aaa
stos
shr
(bad)
jge
adc
retf
js
pop
stos
bound
push
or
lds
xchg
sub
hlt
dec
imul
test
in
cmps
xor
test
inc
pop
pusha
movs
xor
xor
push
jnp
or
int
shl
pop
cmps
adc
push
lock
ja
das
(bad)
jo
jo
int3
mov
adc
(bad)
cmps
shr
fidivr
in
lods
jle
lods
cli
add
cmc
mov
and
or
in
cmps
and
loope
stos
ret
sbb
ja
repnz
add
lods
pop
pop
sub
pop
pshufw
jl
lea
add
and
rcl
outs
sub
nop
add
mov
mov
jmp
adc
push
sbb
xor
add
add
test
hlt
ins
jmp
vmread
les
pushf
outs
sub
adc
fisubr
jbe
adc
fisubr
add
rcl
pop
pusha
movs
xor
xchg
mov
ins
rcl
inc
sti
pop
jp
hlt
sbb
in
lods
sub
bound
push
(bad)
ins
pop
adc
push
fild
inc
adc
enter
push
xchg
inc
shr
call
int3
inc
jp
adc
jne
outs
push
xchg
push
adc
rcl
mov
hlt
outs
xor
jbe
or
fcom
clc
inc
shr
xchg
jmp
adc
add
cmps
repnz
adc
jp
cdq
sbb
pop
add
add
pop
es
pop
mov
adc
dec
sub
in
fwait
mov
out
test
push
in
fcmovbe
fidivr
test
sub
aam
fcom
adc
test
adc
adc
dec
test
mov
enter
push
in
repz
movs
bound
jbe
adc
xchg
xor
pop
pop
mov
inc
adc
call
inc
hlt
sar
ins
pop
jmp
rcl
repnz
test
icebp
cmp
inc
lock
clc
ins
fbld
test
out
mov
cli
fisttp
or
jbe
pop
clc
inc
outs
sub
es
sbb
add
js
movlps
mov
enter
add
push
ret
test
sub
fisubr
jp
add
xor
xor
in
fidiv
cli
jae
shl
ja
xor
int3
js
dec
cmps
xchg
mov
pop
adc
es
dec
mov
int
jo
xchg
mov
mov
in
icebp
outs
sti
nop
sub
jl
push
xchg
mov
(bad)
in
jl
push
fstp
mov
jecxz
mov
std
jl
jnp
adc
mov
aad
inc
xor
ror
adc
and
dec
imul
add
imul
jb
add
sub
rol
das
pop
add
das
(bad)
dec
les
sbb
daa
stos
inc
xchg
les
in
fisubr
nop
sub
mov
nop
jmp
sbb
test
and
jmp
adc
sbb
aad
jmp
fwait
and
mov
xor
jmp
adc
rcr
fdivr
repz
sti
adc
xlat
mov
sbb
mov
fidiv
stos
out
and
sbb
push
repnz
xchg
mov
cmc
pop
xor
or
int3
jo
ja
xchg
cmp
sbb
inc
cmp
out
iret
shl
adc
push
xor
jb
dec
sub
mov
ins
lods
cmc
test
mov
cdq
mov
test
mov
xchg
out
(bad)
adc
pop
retf
jge
cld
sbb
adc
clc
and
loopne
shl
mov
rol
add
pop
lock
add
add
add
es
jmp
adc
jge
mov
jge
retf
sub
fisubr
add
inc
jmp
jnp
pop
aam
repz
stc
jnp
pop
clc
jge
cs
inc
les
and
stos
dec
or
bound
add
add
inc
jmp
test
hlt
ins
jmp
cmps
xor
xchg
pop
retf
ins
rcl
xchg
mov
ds
cmc
mov
or
add
push
adc
gs
test
gs
shr
pcmpeqd
outs
sub
in
adc
lea
add
add
icebp
int
sub
and
jbe
jb
icebp
inc
adc
dec
mov
clc
test
call
out
lahf
ja
data16
xor
rol
push
xchg
in
stc
or
adc
lea
add
inc
in
mov
in
ficom
jmp
fstp
bnd
adc
loope
(bad)
pop
push
add
add
add
add
cdq
sbb
lock
in
repnz
cmp
lahf
cmpxchg
xor
mov
push
jl
or
add
or
sbb
in
fisubr
inc
add
add
test
sub
sub
jne
add
(bad)
or
jbe
add
repnz
add
out
add
cli
push
push
push
popf
mov
xchg
add
(bad)
ja
scas
ja
shl
pop
pop
les
repnz
mov
fsubr
mov
pusha
(bad)
cld
(bad)
adc
rcr
test
adc
add
jo
pop
stos
retf
add
mov
loope
add
add
cs
dec
test
adc
xchg
pop
mov
dec
jmp
or
or
jp
push
jne
add
pusha
retf
out
add
cli
push
pop
lea
lahf
pop
pop
ins
adc
jge
jb
mov
add
push
stos
(bad)
and
movs
xor
mov
out
or
outs
popf
mov
cmp
shr
icebp
ins
inc
leave
jg
push
sub
bswap
dec
adc
int3
popf
repnz
adc
push
cs
adc
pop
or
xor
adc
test
dec
adc
adc
cdq
and
(bad)
out
pop
inc
jp
dec
cs
or
stos
lds
sub
lea
sub
pop
mov
je
rcr
cs
push
fild
(bad)
dec
in
pop
mov
push
jbe
cmp
das
jne
mov
test
in
xchg
unpckhps
sub
pushf
outs
sub
adc
jns
outs
push
repnz
stc
add
pusha
vmread
cs
inc
jp
jg
lock
imul
loopne
lock
int3
call
sbb
arpl
(bad)
adc
shr
mov
leave
call
arpl
or
cs
cmc
pop
pop
push
jle
es
stos
pop
cmp
(bad)
lock
adc
shr
mov
mov
sub
cwde
xchg
(bad)
in
cmps
xor
js
ja
jecxz
imul
sbb
mov
lea
arpl
add
ret
dec
sub
inc
test
stos
ret
xor
add
pop
popa
sbb
add
cli
push
or
mov
push
out
cli
gs
jg
push
(bad)
(bad)
push
jg
add
adc
stos
pop
fbstp
sbb
jmp
lods
sub
cmc
adc
push
xor
iret
shl
adc
push
xor
lock
mov
push
fs
mov
push
dec
test
jbe
xchg
out
hlt
xor
in
add
jge
pop
cmp
push
dec
test
sub
sbb
das
and
int
adc
stos
(bad)
xor
sbb
push
xor
iret
shl
adc
push
xor
lock
mov
push
fs
mov
push
dec
test
jbe
xchg
out
hlt
xor
in
add
jge
push
push
mov
push
jmp
sub
or
push
mov
cmp
sub
pop
xor
pop
aam
xchg
cld
sbb
adc
jmp
lods
in
fisubr
push
mov
outs
mov
mov
jb
add
add
sub
shr
pop
mov
add
push
ja
push
shr
add
test
sub
iret
xor
add
mov
xchg
add
mov
sbb
imul
mov
jmp
push
add
push
ret
add
xor
(bad)
cmc
lods
sahf
xchg
mov
and
lahf
outs
lods
jle
imul
inc
adc
stos
push
movs
movs
ret
mov
daa
enter
lods
arpl
inc
or
jp
push
jne
add
out
pop
sbb
adc
push
cmc
(bad)
call
adc
cs
mov
stos
push
mov
in
push
jb
and
test
xor
mov
xchg
push
cli
mov
add
cmps
sbb
pop
pop
sub
leave
add
cs
sahf
stos
mov
mov
or
sbb
adc
rol
jae
jbe
add
repnz
adc
icebp
push
scas
es
add
mov
clc
imul
pop
add
sbb
movs
movs
stos
icebp
lds
popf
js
repnz
mov
fwait
add
(bad)
mov
pop
mov
add
push
jne
add
shl
xchg
in
mov
lahf
pop
pop
popa
pop
lea
lea
popf
js
popf
dec
mov
mov
inc
lock
adc
add
outs
pop
add
cdq
sub
xchg
jne
in
add
in
(bad)
out
bound
add
adc
xor
(bad)
push
push
push
test
sub
outs
sub
loope
sub
and
push
test
sub
dec
loope
cs
lods
or
mov
gs
mov
lahf
arpl
int
lods
cli
add
std
shl
pop
sub
add
mov
cld
lea
in
fisubr
or
push
stos
and
shr
aaa
sub
sar
gs
lea
lahf
pop
adc
sub
sub
push
lods
out
push
lea
retf
xlat
pop
pusha
dec
mov
outs
stos
jle
test
sbb
js
cli
pop
fisttp
outs
sub
lahf
daa
xchg
test
repnz
retf
out
add
cli
push
push
gs
jb
inc
je
adc
lea
call
js
jae
inc
cmp
jmp
jo
inc
adc
and
lods
add
jp
outs
test
pop
jns
add
ja
enter
jo
dec
mov
adc
mov
fidivr
xchg
(bad)
inc
add
jo
xchg
sub
in
push
lods
(bad)
push
ins
(bad)
shr
ficom
leave
add
add
out
dec
arpl
rcr
arpl
aad
add
push
push
adc
addr16
lea
jbe
add
add
gs
push
mov
push
(bad)
jmp
sub
dec
cdq
leave
mov
test
jmp
xchg
icebp
push
movs
xor
xchg
jge
lea
push
aas
mov
sbb
call
xchg
dec
pop
adc
cwde
sbb
inc
add
test
xor
js
jae
or
mov
jmp
lock
adc
fisubr
or
clc
xor
shr
(bad)
call
add
cli
push
jmp
rcl
in
push
out
mov
not
inc
dec
or
(bad)
js
imul
sbb
pop
aad
add
dec
rcl
in
push
jl
mov
fidivr
cmp
shr
push
mov
or
pop
(bad)
in
pushf
mov
sbb
rcr
sar
jb
cmp
xor
(bad)
movs
movs
adc
test
mov
sbb
push
js
pushf
mov
xchg
adc
push
in
push
mov
mov
cs
cmc
push
lods
cli
or
mov
stos
push
cli
gs
push
jmp
mov
lahf
add
in
push
lods
adc
push
adc
outs
sub
add
xchg
shr
push
aaa
mov
in
lea
in
fisubr
or
lock
xor
jb
dec
lods
js
aam
lods
sahf
mov
lea
xor
xlat
pop
add
cs
add
add
lods
mul
test
pop
add
fisubr
inc
cmp
pop
pop
imul
data16
test
test
add
lahf
add
add
add
push
mov
adc
xor
test
inc
(bad)
sub
popf
push
or
clc
dec
sahf
mov
inc
in
mov
jbe
jmp
(bad)
ins
cld
mov
outs
sub
add
test
push
cmp
lods
clc
push
or
dec
mov
xor
add
push
inc
add
adc
js
sti
xchg
pop
shr
fisubr
push
or
stc
mov
add
adc
dec
lock
adc
jmp
add
adc
sub
fiadd
or
cli
jmp
jl
jo
adc
repnz
jns
cdq
sbb
aam
shr
mov
imul
aad
hlt
adc
push
add
add
push
mov
fadd
add
in
inc
add
sub
add
push
mov
cmps
add
push
lock
add
repz
retf
inc
add
add
push
aas
das
std
add
mov
add
add
push
dec
lods
push
stos
fdivrp
movs
idiv
add
sub
aas
std
add
test
out
(bad)
mov
inc
add
add
add
add
pop
jmp
movs
shr
push
in
loop
add
dec
sub
clc
movs
stos
inc
add
aas
std
add
(bad)
shr
daa
inc
add
out
add
jbe
push
std
add
add
cdq
call
rol
xchg
cmp
adc
sub
push
push
or
push
call
test
push
mov
jle
push
imul
cmp
jne
lea
dec
in
fisubr
les
bound
add
add
test
sub
cs
cmp
outs
sub
jl
push
in
repnz
add
push
mov
adc
pop
pusha
add
dec
outs
sub
add
test
inc
pop
pusha
push
imul
sub
ret
addr16
lea
or
fisubr
add
rcr
add
dec
xor
outs
sub
test
pop
jmp
adc
add
in
fiadd
stos
pop
xchg
jmp
add
cmp
outs
sub
add
inc
sbb
fisubr
mov
fnstenv
fidivr
mov
fidivr
in
and
fiadd
aaa
jmp
adc
add
test
and
adc
sub
cs
enter
mov
repnz
add
pusha
leave
movs
push
jnp
or
lods
(bad)
xor
stos
mov
add
or
add
pop
clc
adc
push
call
arpl
push
lea
jbe
push
test
push
add
cs
cmp
aam
iret
popf
add
test
jbe
add
js
mov
adc
lahf
(bad)
(bad)
outs
movs
ret
mov
pop
push
fldcw
fisubr
add
adc
lea
pop
add
xchg
fidivr
or
lods
dec
sub
jmp
jbe
cs
sbb
outs
sub
stos
push
fsub
pop
movs
xor
push
or
pop
push
adc
call
fisub
fisubr
lea
inc
in
fisubr
ret
mov
cmps
cmp
shr
jnp
push
add
push
ins
dec
outs
sub
stos
push
fmul
jmp
jmp
cmps
pop
enter
in
fisubr
jl
jmp
xor
lahf
(bad)
fst
jns
inc
sbb
jns
lahf
(bad)
fst
ja
(bad)
outs
and
popf
add
jmp
dec
sub
jns
popf
mov
cmp
clc
inc
jmp
add
add
in
clc
ja
pop
clc
stos
add
test
add
jo
sar
popf
adc
add
cmps
push
cs
les
seta
xchg
ret
test
sub
mov
shr
push
dec
cmp
shr
jg
movs
xchg
xor
adc
ss
movs
stc
xchg
dec
adc
sub
mov
adc
jbe
repnz
push
adc
mov
outs
lods
dec
jo
lds
lods
sub
imul
add
lods
push
enter
add
push
adc
sbb
shr
mov
(bad)
fcom
in
clc
mov
mov
outs
sub
mov
sub
mov
aam
in
add
test
mov
sbb
push
mov
or
add
adc
shl
outs
jbe
outs
mov
push
mov
sub
ins
add
fisubr
add
mov
add
sub
jns
repnz
add
sub
pop
clc
call
add
add
test
cli
cs
imul
or
add
pop
mov
js
ja
mov
test
or
mov
icebp
bnd
adc
js
pushf
mov
lea
sbb
add
mov
lds
and
add
inc
pop
vmread
adc
push
stos
push
mov
push
inc
fs
jg
test
cmp
pop
pop
js
jecxz
sub
test
in
test
ins
shr
jnp
or
or
adc
stos
(bad)
add
scas
or
inc
shr
ret
movs
push
xor
lods
sbb
mov
repz
sbb
lods
push
lods
shl
stos
out
test
inc
mov
inc
into
hlt
pop
shr
adc
hlt
pop
retf
sub
aad
out
adc
mov
xchg
or
push
mov
inc
jmp
pop
add
push
jne
(bad)
lods
or
push
add
sub
add
outs
sub
sub
into
jg
hlt
data16
jmp
in
mov
in
(bad)
out
aad
in
fidiv
out
adc
popf
repnz
push
add
pusha
(bad)
xor
in
in
pop
das
xor
push
std
div
push
movs
idiv
les
sub
stc
add
cdq
jbe
add
sub
hlt
pop
adc
adc
cmc
call
pop
add
push
jne
add
sub
repnz
(bad)
cmp
jmp
adc
stos
(bad)
outs
adc
pop
les
push
nop
xchg
dec
shr
fiadd
jne
add
add
mov
jp
push
fsubr
movs
test
add
mov
add
cmps
jle
push
stos
xor
fidivr
jmp
fwait
shr
push
sti
inc
hlt
mov
sub
loopne
adc
shl
mov
test
stos
ret
or
add
fadd
mov
pop
pop
pop
add
(bad)
jae
jbe
add
cmc
call
jge
mov
xchg
push
add
add
add
add
test
adc
inc
add
mov
add
lods
add
pusha
shr
(bad)
pop
test
stos
push
lods
out
clc
mov
fs
sar
sub
lods
pop
stos
mov
cmp
mov
lock
outs
cmp
jmp
shr
fimul
mov
fisubr
push
(bad)
je
sahf
add
jl
adc
xchg
in
call
les
popa
and
jp
lahf
push
add
add
mov
clc
jmp
stos
sti
hlt
jp
jo
ja
sbb
sar
scas
xchg
adc
push
add
or
fldcw
stos
enter
popf
repnz
or
add
xor
in
in
pop
das
xor
push
into
rol
jge
test
test
push
pop
add
push
jne
add
(bad)
ja
(bad)
jl
mov
push
lods
add
arpl
in
sahf
push
add
repnz
nop
adc
jbe
jmp
call
imul
popa
in
push
add
add
popf
add
push
jne
add
out
jae
inc
adc
add
cmps
sti
jbe
add
ss
add
(bad)
std
shl
(bad)
cmp
fstp
add
hlt
bound
mov
adc
sub
add
xchg
add
xchg
call
mov
add
add
push
lods
dec
add
jge
add
movs
add
push
jne
add
(bad)
jae
stos
add
add
dec
stos
jle
test
add
jns
sbb
push
or
pop
call
cs
push
xor
add
sub
fisubr
cli
adc
shr
mov
mov
fidivr
pop
push
jmp
pop
or
mov
pop
jmp
jae
(bad)
out
adc
sar
xor
test
ja
lods
add
sti
pusha
inc
adc
push
sub
jb
adc
jmp
adc
in
xor
test
pop
inc
adc
add
push
mul
adc
call
popa
push
test
dec
ror
lods
sub
pop
test
stos
fdiv
adc
sbb
stos
enter
cmc
mov
sti
es
pop
stc
movs
mov
push
dec
test
mov
mov
cs
dec
adc
or
pop
cs
sti
mov
dec
or
jmp
fcmovu
dec
ror
sub
dec
sub
repnz
add
push
adc
test
fisub
test
jmp
outs
mov
mov
xchg
or
mov
xchg
adc
push
pop
mov
xchg
adc
mov
xchg
stc
pop
test
xchg
std
pop
test
xchg
add
push
pop
mov
xchg
add
lods
xchg
jb
test
add
lea
int3
movs
fwait
outs
cs
push
test
dec
pusha
push
test
pop
retf
push
jmp
outs
mov
or
mov
mov
or
movs
cmp
push
dec
test
mov
adc
mov
push
lods
sub
pop
cmps
push
stos
shl
push
jns
add
sub
outs
sub
fdiv
or
xchg
add
jg
add
add
lods
pop
push
imul
je
shl
outs
mov
mov
repnz
fstp
add
sub
movs
fwait
outs
jmp
fcmovu
(bad)
pusha
push
test
cli
pusha
push
test
(bad)
pop
cmps
dec
adc
xor
test
ja
xor
add
push
mov
adc
jb
dec
push
call
sub
repnz
dec
adc
repnz
aas
add
cmps
cmps
sbb
fcmovu
mov
adc
jb
dec
push
xor
ret
pop
lods
fcomi
adc
ja
add
pop
add
inc
int
pop
jp
sub
dec
test
outs
arpl
pushf
lea
test
mov
test
cmps
arpl
push
test
xchg
movs
push
test
xchg
mov
mov
xchg
popf
push
test
xchg
cdq
push
test
xchg
mov
test
xchg
mov
test
xchg
lods
push
jmp
adc
add
add
inc
push
movs
mov
arpl
cmp
push
test
mov
or
mov
dec
adc
lods
xor
lock
xchg
outs
mov
adc
lods
sub
pop
cmps
push
stos
shl
push
stos
fincstp
test
jne
jno
dec
adc
mov
push
lods
xor
lock
pop
mov
jmp
jecxz
add
pop
popa
push
add
fist
jle
adc
jecxz
add
test
sub
pushf
outs
js
xchg
icebp
add
repnz
xchg
push
sub
movs
pop
les
popf
push
mov
(bad)
rol
jae
jbe
adc
xchg
fisubr
sti
xchg
in
aam
add
adc
add
or
cmps
shr
shr
test
dec
or
xor
xor
push
or
pop
fwait
ror
pop
jl
adc
lea
test
scas
cmp
mov
imul
in
call
push
in
adc
sub
cmps
dec
xor
cld
add
push
cs
popa
pop
out
add
cli
push
pop
imul
jge
bnd
adc
jo
jae
add
jnp
mov
fidivr
pop
add
or
cmps
shr
shr
test
dec
or
les
xor
push
or
cs
cmc
leave
cmp
iret
cmp
fidivr
inc
xchg
add
out
xchg
add
jl
cdq
sub
jmp
adc
pminsw
mov
enter
movs
shl
adc
cmps
xor
test
sbb
sbb
mov
sbb
jmp
outs
movs
ret
xchg
sub
xchg
jmp
push
or
pop
clc
syscall
push
dec
mov
jbe
pop
lods
add
add
add
add
movs
movs
jmp
add
lods
hlt
mov
adc
fldcw
mov
bound
fisubr
sub
xor
lods
daa
inc
lea
popf
js
popf
mov
fldcw
adc
add
sti
lahf
ja
ja
pop
clc
lods
sub
call
jmp
mov
add
lods
sahf
mov
or
mov
pop
das
jbe
(bad)
pop
fsubr
outs
jbe
lea
xchg
imul
popf
dec
shl
shr
mov
lods
mov
mov
jge
sti
fnsave
cmc
lea
fcmovbe
sub
sti
retf
out
mov
rol
fdivr
mov
imul
js
ja
or
or
les
ja
jne
in
xor
in
(bad)
retf
test
je
adc
test
fisubr
cmp
cs
call
adc
fadd
sbb
aaa
lahf
outs
adc
pop
mov
or
sub
outs
sub
mov
test
or
mov
push
sub
push
outs
inc
jbe
jge
jo
push
add
pop
popf
dec
adc
push
sub
movntps
mov
xor
hlt
jmp
xchg
or
mov
or
iret
out
fisubr
or
mov
jns
imul
bound
sub
push
add
repnz
inc
add
js
pop
stos
data16
pop
mov
or
sbb
ins
add
add
test
push
ja
adc
mov
outs
mov
or
gs
outs
jmp
pop
mov
jp
pop
mov
inc
push
sub
push
pop
sub
fiadd
xor
lea
(bad)
jecxz
ror
jb
mov
jno
outs
add
adc
jge
outs
add
adc
jge
outs
add
adc
jl
jo
arpl
jbe
adc
push
xor
fsubr
or
out
sub
sub
(bad)
in
repnz
adc
cmc
pop
cmp
xchg
shr
pcmpeqw
sbb
or
lods
dec
sub
add
adc
out
add
sub
add
add
add
stc
out
sub
inc
jmp
xchg
ret
aad
ins
adc
adc
push
add
cli
push
or
mov
out
lods
cli
jne
adc
outs
jle
lea
js
ja
mov
cs
fnstcw
sub
bound
add
adc
xor
inc
jo
in
repnz
adc
ins
add
fisubr
test
fdivr
arpl
jb
imul
add
or
xchg
ja
jb
cs
scas
test
mov
add
jl
dec
xchg
jmp
push
xchg
in
sbb
lea
push
gs
lea
fld
lea
xor
ficom
fsubrp
add
clc
shr
sub
sbb
jbe
in
dec
cwde
in
(bad)
test
adc
push
mov
outs
stos
dec
add
clc
mov
outs
sub
adc
ins
adc
shl
fld
adc
push
add
xchg
xor
lahf
outs
adc
cli
jge
lea
cmps
or
lods
push
clc
fild
jnp
jb
sub
ds
mov
fcom
or
fisubr
add
(bad)
jmp
popf
shr
push
out
scas
adc
stos
sub
rcl
push
outs
sub
(bad)
ins
xchg
mov
push
in
fisubr
data16
gs
mov
(bad)
arpl
jbe
push
add
sahf
adc
lock
jo
pop
mov
clc
es
add
sbb
push
pop
push
inc
lea
adc
sub
popf
push
adc
add
ins
das
inc
push
mov
lock
mov
or
cdq
dec
mov
outs
mov
hlt
mov
xchg
ret
sub
inc
int
imul
or
mov
mov
ja
pop
outs
test
inc
xchg
in
loopne
jg
sub
add
out
add
add
test
sub
repnz
adc
add
jg
push
jp
cli
fisttp
daa
adc
in
add
cmps
repnz
adc
sbb
mov
adc
clc
inc
jmp
fstp
push
outs
sub
ja
jne
xchg
and
pop
dec
sub
mov
imul
pusha
jecxz
daa
mov
(bad)
dec
stos
jle
test
push
or
xor
add
test
add
add
add
seta
xchg
repnz
test
sub
lods
sbb
lods
(bad)
aaa
aad
bound
shl
push
adc
inc
int
mov
in
fisubr
add
sub
mov
lea
sbb
aam
scas
add
fcom
cmp
mov
jnp
repnz
push
jbe
cmc
adc
shl
adc
test
pop
repz
and
sbb
xchg
fstp
xor
adc
add
stos
stc
cmp
outs
sub
popf
push
stos
rol
jp
cwde
mov
xchg
adc
push
jbe
sub
lods
pop
jl
adc
test
pop
fwait
test
push
or
mov
jge
popf
adc
shl
jae
sub
shr
outs
sub
mov
mul
sahf
and
adc
pop
xchg
jmp
adc
mov
add
pop
xor
ins
fadd
adc
add
cmps
mov
mov
in
pop
sub
in
cmp
add
xchg
jmp
adc
ins
test
jmp
adc
sub
sbb
jmp
pop
movs
inc
adc
or
add
lea
icebp
jne
ret
push
out
mov
pop
dec
inc
adc
mov
adc
cmc
jb
hlt
inc
adc
pop
in
outs
mov
and
shr
fisubr
ja
movs
icebp
icebp
jns
dec
or
popf
icebp
push
mov
add
push
jl
pop
add
push
test
pop
in
imul
add
jge
mov
cmp
add
inc
add
test
add
or
push
stos
rcr
push
or
add
test
add
stos
push
add
popf
in
outs
jmp
aam
vmread
adc
pop
test
push
or
es
fidivr
add
jl
jmp
add
add
sub
add
leave
rol
ja
test
iret
add
dec
adc
test
jne
add
repnz
add
cs
jb
sub
call
add
jae
dec
adc
jp
pop
cmc
cld
add
dec
sub
pop
mov
add
push
add
cli
push
push
arpl
jp
lock
test
push
hlt
pop
sub
adc
xor
outs
sub
sub
in
fisubr
shr
loopne
(bad)
ret
test
sub
pop
inc
ins
push
push
or
jl
add
push
jne
add
(bad)
jae
jmp
or
add
sub
push
aam
dec
js
outs
sub
mov
jne
in
test
popf
push
lods
(bad)
push
push
jge
lods
pop
outs
call
push
lods
inc
popf
(bad)
stos
add
test
cs
push
mov
ret
iret
cs
mov
push
retf
jge
ins
xor
cs
std
or
push
add
push
jl
add
jl
add
push
jne
in
cmp
add
cli
jne
xchg
in
in
lahf
add
fld
lods
add
pop
mov
add
hlt
jo
push
mov
adc
mov
aas
sub
in
ficomp
rol
push
iret
js
ja
cli
add
xchg
add
sub
xchg
or
fsubr
add
cdq
iret
dec
mov
sub
out
fisubr
dec
sub
dec
xchg
push
and
add
outs
sub
movs
shl
pop
cld
sub
fisubr
cmp
cmps
ss
test
sub
fisubr
jbe
adc
nop
test
pop
or
clc
jmp
adc
pop
mov
adc
leave
ret
(bad)
dec
stos
and
push
mov
mov
stos
(bad)
loop
jbe
es
jl
jmp
addr16
bnd
adc
pop
fisubr
or
sub
sbb
adc
rol
or
sbb
and
add
test
mov
shl
out
xchg
jmp
adc
call
mov
jo
pop
inc
mov
fwait
outs
sub
add
repnz
add
pusha
test
or
inc
ins
lods
pop
stos
(bad)
xlat
adc
syscall
push
mov
or
outs
xor
rcl
pop
out
fisubr
and
sub
sbb
mov
mov
movs
pop
push
jmp
adc
in
xchg
adc
inc
in
fisubr
inc
clc
pop
push
stos
or
jge
lods
pop
inc
out
add
out
cli
add
stc
(bad)
stos
(bad)
jbe
sbb
sar
pop
inc
mov
xor
fisubr
dec
sbb
mov
or
mov
push
lods
adc
aam
je
pushf
arpl
jmp
lock
cmp
mov
inc
hlt
adc
cli
add
sub
jp
push
ins
out
xchg
out
(bad)
lahf
adc
add
lahf
sti
sbb
adc
test
add
push
jne
fisubr
add
mov
jne
push
jge
repnz
jge
pop
sub
add
dec
sub
sbb
add
push
and
jge
adc
(bad)
xchg
fistp
add
adc
dec
push
fisubr
or
int3
add
push
jmp
adc
loope
push
das
pop
mov
pop
mov
add
test
add
shl
mov
cmp
push
outs
sub
(bad)
jge
adc
xchg
fst
scas
adc
jp
push
jne
in
cmps
add
pop
out
loop
add
loop
call
jl
add
jae
pop
pop
add
jo
pop
(bad)
jns
adc
cld
add
es
fidivr
add
shl
pop
pop
add
add
jge
add
add
jbe
add
lods
pop
or
add
dec
sub
test
sub
mov
sub
sbb
call
adc
mov
in
fs
add
ins
sar
movs
pop
lds
test
push
push
push
clc
mov
outs
sub
mov
in
fisubr
inc
sbb
xchg
cmc
inc
xchg
jnp
hlt
inc
add
push
jmp
mov
add
adc
mov
call
in
(bad)
imul
cwde
es
(bad)
jge
adc
test
sub
jge
repnz
or
icebp
cdq
stos
jnp
test
dec
fst
push
in
mov
dec
xchg
jb
scas
cmp
jnp
cli
pop
lahf
lea
push
jnp
nop
retf
fwait
add
movs
mov
jbe
add
stos
push
fadd
leave
mul
add
movs
add
lahf
push
add
add
call
out
inc
jmp
pop
(bad)
aad
mov
fwait
outs
retf
and
shr
retf
nop
dec
adc
sbb
fisubr
and
xor
pop
push
jb
fidiv
inc
adc
int
je
sub
push
push
xchg
pushf
outs
(bad)
test
push
in
sbb
test
out
fcom
imul
add
add
xchg
test
in
cmp
jle
adc
int
ins
xchg
sub
push
xor
jo
addr16
or
mov
js
ja
mov
mov
leave
push
add
sub
sti
sub
jmp
mov
jb
mov
sar
adc
dec
mov
stos
shl
mov
sar
adc
dec
mov
lods
fimul
shr
push
mov
push
adc
push
cli
arpl
xchg
adc
jb
outs
lods
xchg
xchg
imul
or
(bad)
std
push
outs
mov
cld
sub
jns
cli
xlat
jmp
int3
shr
sbb
inc
test
sub
add
add
mov
mov
cli
jo
adc
pop
movs
retf
add
push
mov
cli
pop
mov
pop
jne
add
push
stos
push
cmps
pusha
pop
lea
adc
sbb
cli
ins
mov
pcmpeqw
lahf
outs
sub
xchg
push
into
lahf
outs
adc
outs
test
movs
ret
mov
sub
pushf
push
into
lahf
outs
stos
(bad)
or
xchg
icebp
repnz
adc
(bad)
icebp
ret
cmps
cs
xchg
mov
in
sbb
lea
xchg
pop
mov
adc
retf
add
int3
lock
test
(bad)
lea
lock
pop
or
jno
js
pop
imul
gs
imul
sahf
mov
in
pusha
lods
in
ficomp
push
add
add
push
xor
mov
imul
push
stos
inc
mov
or
adc
repz
inc
jle
pop
test
and
test
add
xchg
sub
into
and
repnz
xchg
adc
jp
cli
bnd
iret
cs
aaa
jmp
js
repnz
rcl
into
jns
add
push
out
(bad)
jne
repnz
xchg
psrlw
cli
cmps
or
vmread
cmc
adc
push
xor
push
int
fcom
repnz
shl
popa
jmp
outs
cmps
or
sbb
outs
sub
sbb
sbb
jno
test
push
add
ror
in
fcmovbe
sub
push
test
mov
sahf
or
jle
test
push
in
lods
sub
mov
sbb
stos
fimul
mov
jl
inc
jecxz
imul
push
push
fidivr
test
or
(bad)
in
cmp
dec
adc
(bad)
jmp
adc
(bad)
cmc
cmp
dec
adc
dec
or
pop
pop
test
adc
fadd
jg
shr
pop
jle
adc
int3
in
sbb
and
out
fisubr
and
mov
push
in
loop
add
xor
xchg
in
add
push
adc
push
xchg
test
outs
test
int
outs
sub
test
sub
fiadd
adc
jo
mov
dec
adc
jge
jo
adc
adc
es
(bad)
jmp
fistp
add
mov
movs
jmp
add
add
test
sub
jmp
xor
in
dec
sub
push
xadd
movs
jmp
add
push
mov
push
inc
ficomp
mov
jle
jmp
adc
add
pop
pusha
or
mov
int
add
pop
mov
in
mov
sti
jbe
xor
sbb
cli
(bad)
pushf
dec
jmp
adc
or
mov
jmp
pusha
pop
cmc
push
add
ret
mov
ins
adc
adc
pop
rcl
adc
test
or
mov
mov
in
icebp
ja
dec
lods
ins
pushf
outs
les
lahf
or
cmc
(bad)
push
mov
sbb
xchg
jmp
add
test
xor
add
cmps
pop
lea
sbb
add
add
test
sub
sbb
in
cmp
jmp
shl
adc
push
xor
iret
shl
adc
push
xor
mov
ja
lds
inc
mov
ds
rcl
das
jbe
ds
jp
jns
ja
call
sub
sbb
mov
repnz
xchg
or
cmp
aad
out
sub
stos
ret
adc
sti
das
fld
or
sub
sbb
ret
mov
sti
das
fsubr
or
in
test
test
xor
das
jbe
ds
jp
jns
ja
es
icebp
imul
iret
shl
adc
push
xor
lock
call
cs
push
xor
add
sub
fisubr
cli
adc
shr
mov
mov
fidivr
pop
push
jmp
pop
or
mov
pop
jmp
test
(bad)
out
adc
sar
xor
test
ja
lods
add
stos
js
adc
push
sub
jb
adc
jmp
adc
in
bound
test
js
adc
add
push
daa
jne
adc
js
fwait
outs
xchg
jbe
test
dec
ror
lods
sub
pop
test
stos
fdiv
adc
sbb
stos
enter
cmc
mov
sti
es
pop
test
dec
test
mov
mov
cs
dec
adc
or
pop
cs
sti
mov
dec
or
jmp
fcmovu
dec
ror
sub
dec
sub
repnz
add
push
inc
jns
test
dec
jns
test
sbb
test
sub
test
mov
xchg
or
mov
xchg
adc
push
pop
mov
xchg
adc
mov
xchg
stc
pop
test
xchg
std
pop
test
xchg
add
push
pop
mov
xchg
add
lods
xchg
jb
test
add
lea
pushf
jnp
outs
pop
jns
test
jle
push
test
pop
retf
push
jmp
outs
mov
or
mov
mov
or
movs
cmp
push
dec
test
mov
adc
mov
push
lods
sub
pop
cmps
push
stos
shl
push
jns
add
sub
outs
sub
fdiv
or
xchg
add
jg
add
add
lods
pop
cli
jle
or
lods
adc
outs
mov
mov
repnz
fstp
add
sub
jnp
outs
jmp
fcmovu
idiv
test
push
push
test
(bad)
pop
cmps
dec
adc
xor
test
ja
xor
add
push
mov
adc
jb
dec
push
call
sub
repnz
dec
adc
repnz
aas
add
cmps
cmps
or
fcmovu
mov
adc
jb
dec
push
xor
ret
pop
lods
fcomi
adc
ja
add
pop
add
inc
int
or
dec
test
sahf
js
test
into
js
test
mov
jl
outs
xlat
js
test
mov
xchg
movs
push
test
xchg
mov
mov
xchg
popf
push
test
xchg
cdq
push
test
xchg
mov
test
xchg
mov
test
xchg
lods
push
jmp
adc
add
add
inc
push
hlt
jp
in
push
push
cli
js
test
xor
test
mov
or
mov
dec
adc
lods
xor
lock
xchg
outs
mov
adc
lods
sub
pop
cmps
push
stos
shl
push
stos
fincstp
test
jne
jno
dec
adc
mov
push
lods
xor
lock
add
or
xchg
loope
fiadd
fadd
aam
mov
mov
jns
lahf
push
add
jmp
add
inc
sub
adc
add
outs
popa
adc
stc
xchg
test
imul
(bad)
in
stos
push
adc
push
jnp
add
lods
xor
mov
mov
cdq
add
add
xor
fwait
add
test
add
dec
sub
ja
shl
push
jbe
add
add
add
push
jnp
or
add
inc
inc
fmul
(bad)
in
lods
push
adc
push
jl
pop
in
jnp
in
fisubr
js
mov
pushf
xor
lahf
outs
movs
ret
mov
fimul
push
mov
stos
shl
js
lahf
outs
in
xchg
add
pop
test
or
push
repnz
add
pusha
push
std
lods
push
xor
add
jg
inc
adc
or
pop
test
sbb
mov
adc
pop
stos
mov
jbe
pop
test
xor
pushf
rcr
lahf
outs
stos
mov
sbb
mov
jbe
jb
repz
adc
fdiv
fisubr
(bad)
xor
add
test
pop
jmp
lods
shr
mov
jl
sub
mov
mov
xchg
xchg
jmp
dec
inc
adc
push
loop
popa
add
pop
imul
sub
fiadd
jne
add
pop
imul
sub
pop
aaa
sub
xchg
jo
adc
xchg
bound
clc
dec
shr
pop
xchg
mov
daa
jge
stos
fisubr
inc
add
add
inc
sub
pop
js
sbb
add
or
dec
sub
outs
imul
pushf
xchg
(bad)
jns
adc
enter
add
push
adc
push
outs
sub
push
jl
ins
movups
fisubr
les
clc
(bad)
shr
pop
aad
add
es
rol
jg
dec
adc
or
add
push
std
pop
std
jne
ins
popf
into
in
ficomp
add
jmp
xchg
sti
jl
lods
push
xor
add
aas
stos
dec
adc
clc
add
sub
jns
cdq
sub
in
add
sbb
xchg
xor
sbb
popf
adc
aad
add
daa
add
mov
(bad)
out
add
pop
jg
add
push
std
pop
std
jne
outs
cdq
clc
pop
fldcw
pop
(bad)
jmp
xor
xchg
or
ins
rcl
lea
or
cmps
sti
adc
sar
dec
movs
ret
mov
inc
pop
cs
pop
das
jbe
adc
add
mov
pop
jmp
out
add
cli
push
in
stos
pop
les
add
ret
mov
inc
pop
mov
fs
xor
jno
sub
inc
out
add
cli
push
stos
fidivr
push
in
mov
xchg
mov
fsubr
fisubr
push
xor
ja
pop
add
jle
adc
mov
in
lods
pop
cld
lds
add
add
add
pushf
fisubr
ins
adc
and
enter
in
fisubr
xor
adc
add
cmps
rol
test
repnz
pop
test
sub
pop
clc
and
call
ins
add
add
test
movs
lds
add
adc
sar
ja
mov
push
retf
test
or
mov
icebp
repnz
sub
add
enter
push
adc
push
jl
pop
in
fwait
into
in
fisubr
shr
jo
or
xchg
xchg
ss
rcr
ins
rcr
add
xchg
add
sub
ins
pushf
outs
(bad)
fldcw
stos
ficomp
rol
repnz
in
push
cmp
xchg
push
test
sub
vcvtpd2ps
dec
ret
push
push
jl
and
(bad)
in
cmp
dec
adc
rcr
lahf
outs
out
sub
mov
mov
mov
retf
mov
imul
out
xchg
sbb
inc
jl
pushf
outs
stos
sti
add
sub
inc
aad
stos
ficomp
shr
outs
sub
fiadd
xor
adc
add
stos
xchg
imul
(bad)
inc
add
scas
xchg
imul
or
inc
add
mov
imul
stc
or
add
out
push
in
(bad)
jmp
outs
push
repnz
add
add
sbb
adc
or
mov
xchg
push
test
mov
std
mov
mov
test
add
jmp
inc
add
push
fiadd
aam
out
ficomp
add
es
shl
imul
sbb
adc
sbb
js
adc
in
leave
das
mov
or
add
and
jmp
add
rcr
fisubr
pop
imul
add
es
pop
aaa
(bad)
in
gs
lods
sub
shl
add
adc
pop
test
or
add
or
jb
jbe
jmp
in
int3
shr
fimul
jecxz
cdq
lahf
pushf
add
test
or
sub
push
movs
xor
or
adc
js
pushf
mov
imul
add
in
fisubr
add
enter
in
pop
push
mov
adc
jnp
pop
das
jbe
popa
vmread
cmp
in
fiadd
jne
in
add
in
fiadd
xor
adc
ins
add
in
fiadd
fiadd
mov
xor
push
or
xchg
mov
lahf
outs
call
pop
das
jbe
ins
movs
scas
stos
ficomp
(bad)
in
pop
das
jbe
add
sub
adc
add
add
push
jne
add
ins
or
sub
les
clc
das
fldcw
pop
aad
add
add
xlat
js
in
jmp
imul
ja
mov
addr16
fwait
push
jl
mov
push
shr
jl
or
sub
jns
push
fld
lods
(bad)
jp
or
add
cli
push
add
dec
mov
fisubr
call
inc
pusha
adc
test
add
push
sbb
mov
daa
ins
rcl
in
dec
add
jl
xchg
cmp
imul
push
test
adc
add
push
stos
mov
fisubr
popa
stos
ficom
out
popa
adc
test
ins
adc
into
xchg
fiadd
adc
rcr
jmp
sbb
and
lahf
outs
adc
test
jmp
jo
add
mov
leavew
loop
out
push
in
fisubr
sahf
js
mov
push
lods
sbb
pop
test
adc
gs
fisubr
mov
sbb
add
pusha
push
add
add
add
sub
add
add
jge
push
test
or
clc
jne
cmp
stos
add
add
retf
dec
div
add
add
push
dec
sbb
sbb
aaa
cdq
dec
adc
mov
sti
add
pushf
cld
add
jo
jae
jle
jl
(bad)
lahf
pcmpeqd
xchg
mov
hlt
add
and
xchg
adc
mov
pop
pop
add
add
cmp
add
add
add
add
in
outs
sub
cdq
sar
clc
sbb
xchg
rcl
jb
(bad)
ja
(bad)
inc
add
and
jl
jo
adc
adc
or
add
test
xor
aad
add
sub
pop
aad
add
outs
test
jp
pop
int
add
dec
sub
movs
jmp
adc
popf
add
add
(bad)
xor
repnz
add
add
or
sbb
call
imul
pop
in
add
test
ret
add
pop
clc
int3
fwait
outs
sub
std
mov
adc
fwait
repnz
int
outs
sub
sub
add
es
cmp
rdtsc
push
xor
mov
test
mov
cmp
push
jecxz
pop
fwait
dec
sahf
mov
inc
ins
add
pop
lahf
mov
in
add
push
lods
dec
push
add
mov
cld
xor
std
jle
sub
xchg
inc
in
fisubr
push
or
inc
popa
stos
fisubr
or
pop
push
adc
das
inc
inc
or
shl
outs
das
xchg
and
popf
add
test
sub
aam
into
mov
mov
popa
stos
fisub
ror
add
dec
ror
test
test
jecxz
imul
ja
shl
xchg
retf
test
and
sub
test
ret
mov
jle
inc
jmp
stos
cmps
pop
sub
fisubr
ret
in
clc
push
add
cli
sbb
fwait
inc
out
test
pop
push
ret
pop
push
jbe
xchg
or
mov
in
clc
repnz
push
inc
test
test
in
xchg
rol
imul
push
ins
movs
ret
mov
jne
add
jo
ja
add
pusha
pop
aad
add
or
mov
add
push
fistp
mov
std
adc
add
push
or
mov
add
jge
repnz
sub
adc
ins
add
in
ficom
in
cld
add
test
push
dec
cld
push
mov
push
sub
xchg
xchg
fwait
in
and
sti
cmp
ins
fild
add
shl
fisubr
mov
push
mov
adc
jbe
add
xchg
js
aad
sub
(bad)
movs
in
fisubr
fistp
pusha
clc
xor
push
dec
adc
shr
(bad)
pop
out
scas
pop
ret
icebp
outs
push
jmp
add
cs
add
add
js
adc
or
mov
add
out
div
push
inc
add
js
pushf
mov
lea
push
cmp
add
shl
outs
jne
adc
push
aam
fcom
add
test
pop
es
shl
addr16
js
iret
cdq
dec
adc
sub
pushf
outs
xchg
retf
sbb
jmp
push
mov
outs
sub
sbb
ret
mov
add
hlt
jo
pop
mov
or
xchg
(bad)
add
xor
add
repz
push
ss
retf
shr
push
repz
test
mov
dec
xor
nop
xchg
(bad)
into
in
fisub
fbstp
sti
mov
add
popf
add
pop
mov
das
fstp
(bad)
lods
xchg
jo
inc
js
outs
ret
xchg
imul
jl
dec
fisubr
add
cli
hlt
aam
xor
out
fdivrp
(bad)
sar
dec
mov
out
arpl
jb
jno
clc
in
fs
push
outs
sub
push
mov
mov
(bad)
cli
pop
mov
add
dec
or
cmps
jmp
pop
lods
push
lahf
sar
pop
mov
xor
dec
es
les
movs
add
pop
std
shr
outs
sub
cmps
pop
jmp
jbe
jae
popa
cmp
and
and
add
or
(bad)
sbb
jl
push
mov
or
lods
(bad)
jle
jl
inc
adc
shr
or
sub
pop
and
(bad)
fsub
xchg
jb
jbe
cs
cmc
mov
outs
lock
(bad)
fsub
fisubr
dec
adc
mov
mov
(bad)
cli
jns
lea
jbe
imul
push
mov
push
jp
sbb
or
mov
or
jne
cmp
outs
sub
(bad)
and
cmc
push
movs
or
clc
jns
lea
enter
arpl
mov
add
xor
test
push
adc
jne
(bad)
out
inc
in
fisubr
aam
cs
cmc
shr
adc
js
and
push
pop
inc
mov
loop
push
add
sar
hlt
je
mov
and
or
mov
cmps
fdivp
je
mov
and
cwde
inc
or
fisubr
xchg
lea
fdivr
data16
cs
std
add
test
test
hlt
pop
daa
sub
imul
stos
ficom
adc
aad
jb
mov
mov
aad
imul
in
inc
outs
sub
stos
ja
ret
xchg
imul
call
in
pop
retf
mov
adc
shr
cmp
test
fld
imul
sub
add
sar
repnz
pushf
outs
stos
jnp
add
test
mov
sbb
das
test
fnsave
push
add
test
push
stos
ficomp
sub
pushf
outs
push
retf
(bad)
jne
adc
pop
clc
xor
push
dec
mov
sub
push
sub
enter
dec
adc
int3
jo
ja
and
rcr
cmc
cmp
test
cmp
sub
sbb
cmp
push
mov
imul
ja
out
lahf
push
lods
push
xor
add
call
inc
adc
or
inc
jmp
lods
sub
pushf
outs
retf
daa
mov
pop
sub
jb
imul
adc
fnstsw
pop
cdq
(bad)
sub
cs
xchg
in
ficom
fwait
add
daa
sbb
adc
mov
shr
xchg
add
pushf
add
test
gs
dec
mov
push
mov
mov
cdq
dec
adc
mov
pop
ja
or
bound
or
pop
mov
inc
or
call
push
iret
lock
push
xor
test
push
imul
pop
jbe
pop
or
lods
fdivp
jmp
cli
add
cdq
shr
sbb
das
test
js
pop
outs
sub
pushf
sub
lahf
outs
movs
ret
xchg
popf
adc
pop
fidivr
or
imul
adc
repz
dec
and
dec
mov
push
stos
or
mov
in
add
test
call
add
nop
adc
pop
popf
fisubr
stos
jmp
test
sub
xchg
jl
or
add
add
(bad)
clc
jb
mov
jb
jae
dec
or
xchg
jmp
adc
add
test
mov
add
dec
sub
push
data16
rol
shr
cmp
in
or
mov
sar
jmp
bound
xor
push
or
es
icebp
push
mov
or
cdq
lahf
fwait
push
jl
pop
lea
(bad)
xchg
jmp
cs
int
lock
out
fisubr
movlps
in
(bad)
ins
test
xor
mov
pop
or
pop
mov
adc
das
push
push
test
in
fldcw
inc
hlt
adc
(bad)
out
fisubr
dec
add
or
xchg
clc
ins
sti
xchg
add
jnp
cdq
aas
pop
mov
movs
imul
jl
dec
fisubr
add
and
or
add
fld
aam
gs
test
lea
jecxz
pop
add
or
sbb
add
push
test
cld
sub
adc
test
jne
lea
mov
mov
or
lods
push
test
clc
or
xchg
test
adc
push
add
ins
(bad)
rol
int3
mov
mov
call
cdq
aas
pusha
lea
out
mov
and
cmps
jmp
pop
cdq
pop
cmps
sar
jae
lea
jbe
ja
pop
sbb
mov
sbb
jmp
jo
dec
jnp
xchg
test
in
(bad)
jne
sar
and
or
mov
out
stos
call
test
add
sub
push
mov
mov
push
imul
xchg
or
xchg
(bad)
div
jmp
jb
inc
dec
or
xchg
out
push
sbb
or
mov
stos
(bad)
ins
dec
inc
sub
ret
adc
mov
fisubr
pop
adc
jge
push
mov
or
push
mov
and
add
xchg
clc
pop
(bad)
mov
jo
inc
js
outs
ret
lahf
add
nop
xchg
sub
in
(bad)
jne
rol
int3
mov
add
ret
mov
push
mov
scas
inc
outs
sub
mov
shl
push
push
jns
imul
xor
test
lea
jecxz
push
push
push
or
sbb
sub
push
sub
fdivr
ins
mov
pusha
int3
js
jae
push
or
jnp
push
and
mov
jns
lea
pop
mov
and
add
xchg
repnz
mov
ins
test
xor
or
lods
pop
cmps
sar
jae
cmp
stc
outs
mov
xor
dec
sbb
push
add
sar
cli
lock
adc
shr
push
mov
or
leave
jb
fbld
ror
mov
xchg
jbe
xor
or
xchg
(bad)
repz
ja
jp
xor
pop
push
outs
sub
fisubr
add
psubusw
push
lods
sbb
adc
inc
jmp
cli
call
adc
retf
test
jmp
outs
stos
ret
icebp
std
push
mov
ret
lahf
mov
or
imul
add
je
ret
push
add
std
fucomi
mov
xlat
rcr
sbb
cli
pop
xchg
push
add
pop
mov
or
sub
dec
loop
sub
sub
and
lahf
jmp
cld
mov
sub
popf
pop
mov
in
mov
cs
mov
jp
bnd
mov
and
sar
cdq
dec
adc
fnstenv
ja
jbe
psubusw
xor
jl
jmp
inc
add
daa
mov
or
daa
jp
inc
jmp
pop
inc
cld
add
test
or
jbe
mov
inc
and
loopne
scas
add
js
(bad)
adc
sub
add
adc
add
sub
push
dec
dec
push
cld
mov
sub
add
sub
std
cli
push
dec
jno
or
sub
dec
std
push
mov
stos
cmp
xor
repz
pop
xchg
mov
adc
push
mov
cli
push
cli
sbb
(bad)
fcom
add
mov
add
xor
inc
pusha
mov
fld
or
lods
(bad)
mov
jl
add
leave
inc
in
fisubr
jle
adc
icebp
cli
ins
dec
and
jne
clc
pop
or
sar
cli
ins
out
lea
rcr
dec
push
push
or
sbb
dec
nop
xor
cmp
sti
and
fs
jp
cli
pop
mov
imul
lea
xchg
sub
mov
xchg
clc
add
or
dec
jb
outs
sub
std
push
icebp
or
add
sbb
xchg
jmp
dec
lods
(bad)
mov
jl
or
xchg
jp
ret
mov
xchg
ins
es
sub
inc
adc
shr
xor
push
xor
sub
xchg
add
jg
ins
not
pop
test
add
sub
ror
push
inc
push
sub
adc
or
xchg
(bad)
repnz
ins
sti
xchg
lock
push
jns
dec
and
add
stc
iret
push
push
mov
or
xor
lea
inc
push
retf
jl
enter
dec
adc
fidivr
add
enter
(bad)
outs
stos
cmps
aam
mov
(bad)
ins
dec
cmps
pusha
pop
retf
out
add
cli
push
push
arpl
mov
or
inc
lahf
dec
stos
fidivr
dec
mov
icebp
xchg
add
hlt
pop
jle
adc
adc
pop
es
aad
adc
lock
adc
dec
sub
in
mov
(bad)
pushf
adc
sub
fld
imul
(bad)
in
inc
pop
sub
pop
lods
sub
iret
in
add
repnz
xchg
jmp
pop
pop
push
mov
add
xchg
int3
out
fisubr
loop
imul
jo
call
in
fiadd
adc
push
jl
imul
(bad)
in
jb
sub
adc
clc
adc
fdiv
cmp
fs
mov
add
dec
sub
popf
adc
repnz
in
(bad)
inc
xchg
adc
lock
sub
loopne
mov
jb
inc
inc
adc
sbb
adc
dec
sub
in
jmp
popf
pop
pop
in
and
xchg
in
cmps
mov
inc
adc
fwait
adc
xchg
in
aam
sbb
pop
push
call
es
push
lods
inc
dec
in
sub
pushf
outs
pop
pop
in
sub
(bad)
xchg
jmp
pop
pop
push
mov
(bad)
sub
xchg
and
ins
rcr
es
icebp
inc
xchg
test
outs
mov
cmp
or
ja
(bad)
shl
pop
pop
push
dec
add
mov
inc
add
test
add
add
inc
popa
and
sbb
shr
mov
pushf
jbe
repnz
pop
adc
sub
in
mov
fstp
add
add
add
adc
mov
cs
jo
pop
leave
cmp
cli
jne
imul
test
push
imul
cld
mov
jmp
pop
mov
or
pop
stos
sti
mov
adc
imul
cdq
adc
rcl
xchg
in
fadd
sbb
pop
test
inc
out
fldcw
in
movzx
jo
add
in
or
fldz
fisubr
dec
add
push
enter
fcom
test
sub
mov
cmp
jo
mov
shr
aad
stos
adc
adc
adc
shl
jp
pop
dec
jge
jo
addr16
xchg
adc
jns
repnz
add
mov
xor
outs
sub
push
add
in
fisubr
int3
and
or
fisubr
int3
xchg
test
sub
aad
aam
adc
dec
cmp
test
sub
fisubr
les
mov
jb
outs
sub
add
or
xchg
out
into
repnz
outs
sub
xchg
sti
xchg
stos
add
adc
int
xchg
stos
jmp
jge
jo
jne
inc
dec
jge
jo
jp
xchg
xchg
adc
hlt
pop
sbb
add
cli
paddsw
outs
sub
scas
sbb
mov
mov
stc
fld
sub
leave
or
inc
mov
or
adc
jecxz
sbb
adc
outs
adc
adc
inc
ficomp
adc
adc
aad
sub
jmp
cmp
adc
stos
pushf
lea
xchg
fstp
rcl
xchg
in
aam
sbb
arpl
add
xchg
mov
push
into
stos
pushf
lea
mov
push
les
pop
add
add
lods
mov
fist
call
in
aam
sbb
fisubr
es
jbe
jb
push
inc
adc
clc
cpuid
outs
sub
mov
sub
and
pop
in
fidiv
in
aaa
(bad)
retf
xchg
mov
sub
movs
fisubr
(bad)
adc
hlt
pop
sbb
add
es
pop
cmp
adc
imul
pushf
lods
mov
leave
jl
jl
inc
nop
xchg
repz
adc
jp
hlt
gs
add
stos
pop
jge
adc
dec
sub
in
jmp
cli
gs
add
dec
add
cwde
icebp
push
mov
or
lds
xor
jl
pop
mov
cmps
pusha
pop
retf
out
fnsave
out
inc
adc
test
add
add
(bad)
cdq
sub
imul
pop
inc
pop
jp
dec
xor
hlt
push
sub
pushf
outs
lods
xchg
shr
mov
mov
jo
mov
adc
(bad)
xchg
add
jl
hlt
push
adc
push
popa
push
aam
dec
data16
and
sbb
pop
in
cmp
add
sbb
stc
push
mov
jns
lahf
pop
jmp
aas
add
test
in
mov
or
imul
into
xchg
ret
iret
add
test
dec
adc
int3
repz
cdq
dec
adc
or
loop
jno
mov
shr
push
outs
stos
ret
xor
clc
jne
outs
sub
sub
dec
cs
add
movs
sub
cs
or
mov
pop
cmps
xchg
push
test
sub
stos
pop
cmp
pop
(bad)
cmp
mov
adc
pusha
or
jecxz
movs
arpl
stos
push
add
xlat
in
fisubr
enter
add
xor
adc
pop
out
fwait
lods
cli
push
cmps
and
mov
out
cli
outs
cmps
sbb
sahf
popf
stos
mov
ror
adc
xor
fdiv
mov
ror
shr
push
stos
inc
mov
popa
fdivr
dec
dec
mov
cs
add
pushf
leave
into
repnz
mov
lods
mov
xor
inc
jmp
mov
outs
jne
ins
test
in
(bad)
imul
enter
test
mov
cmp
adc
shl
addr16
popa
pop
out
mov
imul
sbb
sub
push
stos
inc
mov
pop
or
js
push
add
jmp
add
add
sub
pop
lea
cmc
push
fwait
inc
xchg
mov
sub
addr16
leave
sar
push
add
push
jns
in
pushf
add
out
in
scas
popf
push
push
lea
mov
aad
sti
mov
pusha
bound
lock
stc
or
(bad)
rcl
inc
jmp
cmp
inc
add
or
pop
jbe
jo
xchg
cmp
push
rol
xor
jo
fcomp
sub
cmp
add
fs
cmc
(bad)
call
adc
push
mov
mov
mov
add
fwait
pushf
lods
sahf
push
enter
in
ficom
scas
sub
add
out
sbb
adc
stos
(bad)
xlat
stos
nop
cwde
adc
push
xchg
or
sub
or
lods
cs
sub
pop
mov
icebp
fld
jbe
pop
clc
ret
sub
lods
push
stos
sar
sub
mov
adc
stos
pop
inc
pop
adc
dec
sub
clc
push
imul
add
pop
out
sub
pop
jl
pop
in
loop
in
fisubr
mov
repnz
adc
dec
add
in
jmp
push
les
fild
in
cmp
in
(bad)
or
fldcw
in
pop
inc
test
pushf
outs
mov
sbb
dec
rcr
add
ror
fisubr
sbb
adc
cmc
mov
sbb
sar
cs
in
push
jne
push
sbb
xor
and
repnz
pushf
jae
sbb
movs
pop
les
js
push
lods
sub
mov
add
push
mov
add
jecxz
ins
shr
add
add
add
jo
pusha
pop
in
(bad)
sbb
mov
(bad)
outs
sub
sbb
adc
push
jne
ja
sub
or
add
nop
jmp
lods
in
sbb
inc
(bad)
fisubr
not
inc
leave
push
mov
mov
mov
mov
pop
xor
mov
(bad)
mov
mov
shl
or
cmps
add
sar
hlt
bound
lahf
or
or
enter
or
jmp
in
pop
jbe
jo
adc
add
cmps
mov
cs
or
movs
imul
fcomi
and
int
fild
mov
not
sbb
adc
xor
je
shr
dec
stos
leave
push
int3
(bad)
sub
rcl
call
fcompp
sbb
add
movs
imul
sbb
or
sub
(bad)
test
adc
add
lea
pop
add
add
jb
or
pop
add
or
jmp
sub
jmp
sub
pop
pushf
outs
mov
clc
shl
stc
sub
pop
lods
js
aad
sub
pop
mov
adc
pop
pusha
dec
sub
adc
add
push
lea
fimul
jecxz
push
mov
jmp
push
sub
or
jp
sti
add
ins
xchg
imul
pop
in
jecxz
pop
(bad)
cli
movs
icebp
jns
les
call
fs
mov
lods
sub
add
mov
add
or
inc
adc
adc
clc
inc
cmps
add
sub
sbb
xchg
jmp
cld
cmps
jge
pop
mov
mov
in
(bad)
push
lods
fisubr
pop
xchg
jmp
xor
push
sub
add
add
mov
or
nop
nop
mov
add
push
xor
add
pop
sbb
mov
sbb
inc
jmp
lods
inc
add
add
push
adc
in
add
xor
push
or
cs
cmc
lods
inc
clc
mov
hlt
aaa
inc
push
call
test
inc
xchg
in
fdiv
push
adc
xor
fwait
push
jl
pop
push
mov
fisubr
add
add
iret
call
js
add
jl
add
cmps
jge
or
data16
pop
adc
js
pop
add
adc
test
lahf
push
repnz
outs
popa
push
add
ret
xchg
or
pop
jmp
pop
shr
push
sub
int3
push
fild
xchg
or
cs
ins
popa
leave
pop
mov
jbe
imul
popa
add
add
out
leave
das
pop
popa
pop
out
fnsave
out
inc
adc
push
or
push
mov
or
or
(bad)
int3
add
jo
outs
adc
js
adc
add
cmc
sub
sbb
sub
fiadd
add
inc
adc
fld
add
js
adc
pushf
lods
sahf
adc
pop
adc
(bad)
icebp
adc
fcomip
push
push
mov
mov
push
jmp
jmp
jp
inc
push
mov
jbe
adc
fisubr
or
push
lock
cmp
(bad)
ja
int3
add
add
adc
pusha
sub
push
out
or
push
add
ins
add
add
test
push
jmp
or
add
push
jne
in
adc
or
pop
push
adc
aam
pop
jnp
sub
adc
mov
add
jae
cld
add
mov
or
pop
stos
fisub
popf
js
mov
push
stos
(bad)
cli
repnz
cmps
mov
jbe
push
fsubr
fisubr
mov
push
inc
push
sti
xchg
add
jmp
add
add
lahf
adc
test
inc
enter
stos
(bad)
jmp
jp
lock
cs
sbb
xchg
icebp
mov
cs
pop
lea
or
pop
les
popf
mov
or
cli
jp
popf
adc
icebp
push
pop
jmp
add
add
in
jmp
test
in
fidivr
pop
in
sbb
jmp
test
popa
pushf
aam
into
rcr
pop
les
js
push
lods
sub
out
add
push
mov
clc
xor
sar
add
cmps
push
test
mov
xor
sar
pop
test
sub
(bad)
xor
sar
clc
inc
adc
jl
stos
popf
adc
add
cmps
mov
pop
add
cs
or
clc
ret
mov
scas
ja
xchg
adc
add
add
lods
push
in
sbb
test
(bad)
pop
clc
ret
rcr
add
add
push
in
add
xor
pop
inc
dec
or
sbb
sub
dec
cmp
add
cvttps2pi
add
(bad)
outs
sub
mov
js
or
lea
test
(bad)
rcl
pop
out
out
repnz
add
sar
jb
or
pop
add
mov
icebp
xchg
jnp
mov
out
jmp
mov
xor
xchg
shl
inc
pusha
adc
add
sahf
mov
ins
test
in
fiadd
push
pop
movs
fwait
popf
bnd
add
mov
hlt
dec
aaa
mov
mov
mov
adc
icebp
fst
xor
pop
inc
out
dec
adc
or
push
lods
push
lods
rol
out
fisubr
xchg
adc
loopne
xchg
jl
push
call
adc
(bad)
neg
inc
push
jl
movs
movs
xor
outs
mul
adc
mov
add
lods
hlt
movs
jmp
add
popf
add
lods
fisubr
adc
dec
sub
adc
mov
inc
add
lods
shr
test
add
add
jmp
ja
xor
adc
push
call
(bad)
js
into
adc
add
add
dec
pop
jmp
(bad)
add
sub
inc
mov
loop
adc
jp
push
in
(bad)
std
add
add
lahf
push
push
xchg
add
xchg
sub
ins
mov
sub
hlt
movs
(bad)
inc
add
add
add
sahf
(bad)
jns
push
clc
mov
fsubr
add
imul
lods
lahf
push
push
xchg
add
xchg
adc
rol
jae
jmp
inc
add
sub
aam
cmp
add
add
adc
mov
dec
sbb
inc
add
fimul
sub
daa
sub
pop
add
scas
mov
test
in
icebp
ja
pop
sbb
mov
lods
hlt
test
adc
add
add
add
or
xchg
out
add
jb
jne
adc
sbb
std
mov
xor
sbb
nop
xchg
(bad)
jmp
xchg
pop
leave
push
push
pop
sbb
and
iret
sub
outs
imul
pop
clc
mov
push
dec
aad
aam
bound
gs
out
add
pop
sbb
add
push
add
adc
mov
fs
xor
fcom
xchg
push
or
mov
add
in
add
xchg
xlat
pop
leave
out
add
or
xchg
pop
jp
dec
xor
jns
in
clc
ja
pop
add
jle
adc
mov
in
lods
pop
jl
add
test
or
xchg
dec
adc
jge
lods
push
adc
sub
add
add
add
jmp
jge
jo
adc
add
cmps
sbb
call
adc
cmp
gs
std
repnz
add
xor
or
add
jge
sbb
test
call
ret
ja
cs
add
in
lds
pop
jl
enter
stos
fidiv
adc
and
lods
sub
frstor
add
(bad)
popa
mov
add
nop
jmp
pop
test
adc
cmp
add
(bad)
gs
xchg
mov
retf
add
xor
mov
mov
push
movs
cs
lea
repnz
add
cs
or
jge
cmp
xor
cmp
add
rcr
popf
adc
jp
inc
jmp
jbe
adc
rol
or
in
fisubr
call
fisubr
pop
test
adc
adc
shr
jo
adc
or
push
test
pop
adc
stos
repnz
push
add
lods
fisubr
cwde
mov
in
ficom
push
mov
popf
pop
jmp
fld
add
and
mov
mov
clc
jnp
cmp
pop
pop
sub
fidiv
rcl
shl
push
mov
cwde
lock
outs
sub
aad
icebp
jmp
sub
lods
lahf
adc
add
js
or
mov
ret
loope
stos
(bad)
jne
in
iret
push
stos
fucomi
jmp
mov
lea
pop
test
das
cmp
mov
add
or
mov
stos
pop
inc
sub
cs
add
mov
cmp
mov
clc
ja
js
clc
add
outs
sub
jns
add
ins
mov
adc
fst
out
ins
pop
test
imul
mov
clc
sbb
push
(bad)
jmp
sub
mov
push
in
aad
add
add
in
add
shr
(bad)
add
add
(bad)
icebp
push
mov
jg
leave
das
das
cmp
adc
sti
pop
xor
(bad)
jle
pop
xor
adc
cmp
push
pop
add
add
aaa
dec
add
arpl
push
sbb
add
xor
ficom
out
add
dec
mov
push
adc
add
jge
in
in
add
cli
pop
imul
inc
mov
cdq
imul
imul
or
or
sub
hlt
pop
lods
sub
fisubr
js
cs
add
repnz
and
cmc
repnz
std
add
pusha
test
ret
adc
in
fisubr
jbe
add
add
test
mov
ins
les
pushf
outs
jbe
adc
or
lahf
js
jnp
inc
adc
sbb
pushf
jg
nop
xchg
(bad)
in
(bad)
and
out
aad
fld
repnz
or
add
mov
outs
mov
sbb
imul
mov
adc
imul
jge
jp
xchg
mov
lea
stos
fisubr
pop
stos
inc
adc
test
push
mov
lahf
mov
dec
xchg
pushf
outs
push
jmp
adc
or
sub
scas
fwait
pop
test
in
push
imul
ins
pop
test
xor
add
mov
adc
adc
shr
ins
pop
test
sub
pop
clc
pop
popa
push
call
movs
adc
jmp
push
inc
in
cmps
shr
ficomp
cmp
adc
add
int3
dec
add
std
and
fidivr
push
in
bound
add
add
sub
pop
sub
jg
sub
or
and
adc
pushf
outs
sub
pop
add
int
imul
rcr
mov
addr16
jo
addr16
add
pop
fldenv
add
push
mov
aas
test
das
or
adc
adc
adc
int3
movs
icebp
jl
pop
or
test
shl
gs
cs
cmc
mov
pop
clc
push
cmps
outs
sub
sub
jns
stc
mov
pop
stos
add
pop
cli
fisubr
mov
xor
adc
adc
sub
sub
lods
(bad)
push
arpl
jmp
test
adc
xchg
in
mov
sbb
push
std
jl
push
lods
cli
add
jns
rcr
push
nop
leave
ins
add
lahf
jae
jle
test
cli
add
jns
test
xor
js
ja
adc
jne
xchg
and
inc
sub
mov
imul
pusha
jecxz
xor
mov
adc
fist
ror
cmps
xor
sub
fiadd
adc
rcr
mov
addr16
sahf
stos
popf
adc
out
add
in
clc
nop
cwde
imul
(bad)
pop
pop
mov
jne
ficomp
push
mov
(bad)
loope
sub
bnd
cmp
cmps
push
enter
mov
sbb
sub
aam
adc
cli
bound
and
aam
pop
in
fisubr
cld
pop
jl
jo
ja
mov
imul
add
test
imul
jo
xchg
pop
mov
adc
xchg
lea
es
mov
push
outs
sub
pushf
outs
mov
enter
push
and
cli
cmp
cmp
or
gs
mov
ja
or
cmp
(bad)
sbb
scas
fldenv
stos
ret
pop
cmp
test
mov
adc
jge
sbb
test
call
lods
xchg
adc
rcr
xchg
inc
cdq
adc
neg
test
fwait
adc
neg
test
lods
adc
neg
test
scas
adc
neg
test
pushf
adc
in
sbb
test
xchg
mov
(bad)
test
mov
push
fisttp
add
retf
add
mov
mov
rol
sub
jmp
outs
das
cmp
dec
push
mov
lock
pop
and
jp
or
(bad)
js
retf
rcr
cli
fld
push
daa
mov
dec
js
imul
xor
pop
or
fld
xchg
sti
jge
pop
aaa
(bad)
jmp
add
repnz
adc
jns
jno
cmp
mov
(bad)
or
fwait
adc
(bad)
loope
cmps
push
fs
add
dec
sub
push
jl
iret
pop
jle
adc
mov
adc
or
jge
xchg
fcomp
add
aam
mov
xchg
pop
test
movs
ret
mov
pop
push
adc
add
psubsw
sub
sar
push
xor
adc
xchg
int3
and
xor
loopne
adc
shr
leave
das
popa
pop
popa
arpl
add
lahf
stos
dec
adc
sub
stos
cmps
sub
add
or
push
push
push
push
pushf
push
test
or
jo
adc
cmc
mov
dec
or
(bad)
cmc
fdivrp
cmp
shr
inc
lock
pop
aad
jmp
js
test
fwait
add
mov
mov
pushf
lods
das
cmp
nop
mov
jbe
xchg
xlat
jge
jl
add
add
inc
xchg
sti
jl
leave
cmp
mov
outs
cmp
jp
loopne
pop
xor
adc
cmc
jl
add
add
mov
adc
shl
pop
shr
adc
cmc
mov
dec
or
(bad)
cmc
fdivrp
cmp
sbb
adc
inc
pop
ja
mov
mov
test
int
test
or
stos
mov
sbb
sub
(bad)
xchg
add
pop
shl
xchg
add
sbb
nop
dec
sub
jns
cdq
pop
pop
jp
shr
out
cmc
hlt
dec
ja
push
retf
jge
(bad)
scas
add
jp
or
mov
add
mov
loopne
push
jbe
xchg
sti
jl
jl
xor
add
lods
call
rcl
mov
pop
imul
push
test
jmp
xor
push
daa
pusha
(bad)
lock
pop
lahf
fwait
lods
xchg
adc
int
lods
sub
jmp
retf
stos
cdq
imul
out
imul
adc
in
dec
pushf
outs
mov
pusha
sub
mov
jl
or
xor
add
mov
js
pop
mov
add
push
mov
std
add
add
xor
push
push
add
ret
mov
mov
adc
leave
add
js
test
stc
mov
push
stos
push
lahf
lods
(bad)
mov
cli
out
and
add
lods
dec
inc
les
outs
popa
or
push
stos
fiadd
in
adc
movs
arpl
aad
add
push
test
inc
xacquire
mov
call
lods
jl
xor
into
or
imul
or
pusha
dec
add
je
add
fabs
stos
(bad)
out
pop
arpl
mov
enter
push
jae
jmp
lahf
outs
mov
push
int3
xor
int3
ins
rcr
mov
in
pop
das
jbe
add
dec
sub
dec
add
bound
cmp
icebp
(bad)
in
inc
jae
inc
adc
push
add
lea
call
xchg
jmp
(bad)
out
add
cli
push
add
cdq
xor
ja
shl
add
push
imul
adc
enter
push
aad
frndint
sub
jb
pop
test
gs
fs
add
xchg
adc
ror
adc
ror
adc
ror
gs
xor
push
std
mov
mov
xchg
or
dec
add
or
clc
or
xor
cld
sub
xor
mov
xchg
int3
mov
outs
sub
pop
popa
shr
cmp
adc
push
push
push
or
push
call
lds
fcmovb
inc
adc
call
sub
lea
adc
repnz
arpl
pushf
adc
jmp
loopne
in
gs
movs
lods
adc
pop
pusha
dec
sub
push
sub
fild
stos
and
ficom
mov
lahf
in
shl
xchg
jmp
shr
fisub
and
and
mov
lods
cmc
and
lods
movs
fisubr
pop
or
lahf
adc
xchg
in
call
mov
int
sbb
fsub
mov
fsub
out
xchg
lahf
outs
mov
fsub
test
and
clc
sbb
push
cdq
and
mov
movs
cmc
and
lock
push
stos
test
fisubr
mov
call
pusha
test
popa
pop
vmread
adc
mov
adc
jp
sahf
mov
or
lea
push
call
add
dec
mov
add
int
pop
lods
sub
add
jmp
cmc
add
sbb
in
push
mov
cmp
sar
adc
jmp
adc
push
jecxz
scas
sti
adc
shl
pop
sbb
adc
xchg
fsubr
adc
nop
cwde
inc
shr
(bad)
adc
adc
je
cwde
sub
in
(bad)
adc
mov
jns
repnz
adc
out
fisubr
inc
fsub
fisttp
outs
lods
dec
fsub
movs
or
pop
adc
add
pusha
dec
sub
adc
clc
add
push
dec
adc
shr
ficomp
fwait
adc
stos
es
inc
adc
retf
jb
daa
fstp
pop
and
xchg
shl
cmps
pop
fisttp
sub
shr
daa
sub
es
inc
adc
imul
test
or
adc
ins
adc
xchg
daa
out
loopne
mov
add
add
stos
mov
adc
sbb
daa
out
loopne
mov
add
add
stos
es
inc
adc
dec
jo
imul
mov
jno
xor
stc
loop
popa
stos
jmp
sub
push
in
(bad)
lahf
outs
adc
mov
sub
mov
pop
gs
and
inc
loopne
mov
add
add
stos
and
adc
add
ds
fisubr
fist
lods
fimul
ins
rcl
inc
call
cli
adc
sub
cmp
push
fwait
outs
out
loopne
mov
enter
(bad)
lahf
outs
adc
fldcw
mov
sub
test
pop
gs
or
adc
dec
sub
and
stos
push
test
dec
push
in
(bad)
lahf
outs
adc
add
sub
and
push
test
fisub
(bad)
fbstp
(bad)
in
daa
outs
fimul
in
and
and
jecxz
cmps
and
fcmovnu
add
adc
rol
test
ret
xchg
dec
adc
shr
fisub
mov
scas
push
sub
push
sub
scas
push
sub
aaa
mov
lea
mov
cs
push
sub
push
loop
push
test
(bad)
jmp
cmc
add
scas
add
jge
jo
add
add
push
retf
rcr
jmp
ja
or
add
ror
push
adc
in
add
repnz
out
add
cs
sbb
stc
cmp
xchg
or
lahf
outs
adc
aas
cmps
dec
adc
call
push
aam
fidiv
add
add
push
retf
rcr
jmp
ja
or
add
test
push
xchg
in
repnz
mov
lea
popf
js
mov
call
ins
aam
pushf
jae
sub
ret
fldcw
stos
push
adc
dec
xor
adc
cmp
lds
add
push
sub
leave
sub
or
sbb
(bad)
jo
xchg
or
jbe
clc
push
jo
push
stos
retf
push
xor
or
cmp
fld
jbe
adc
bound
mov
xor
add
dec
sub
lar
repnz
pusha
adc
sub
or
shr
mov
test
in
lods
jbe
add
sar
ja
ror
jo
sub
clc
jo
and
inc
pop
shr
pop
sub
or
div
pop
mov
xor
dec
mov
push
add
add
xor
add
sbb
push
movs
jge
sub
push
lods
mov
out
cdq
sub
gs
clc
call
or
pop
pop
push
cs
push
mov
or
fcmovb
add
mov
add
jae
(bad)
push
test
mov
add
test
mov
push
adc
dec
xor
push
mov
add
outs
sub
arpl
xor
push
or
es
int
inc
jecxz
pop
popf
jge
repnz
mov
mov
sub
mov
add
or
pop
aaa
(bad)
jmp
jne
imul
jbe
cmp
or
add
push
lahf
mov
sub
mov
add
or
pop
aaa
(bad)
in
outs
inc
add
mov
jge
add
lahf
ud0
jmp
add
(bad)
pop
pop
or
repnz
mov
or
mov
xchg
or
jne
sbb
push
push
or
add
pusha
test
xchg
inc
jmp
push
das
push
aam
cwde
movs
movs
stos
icebp
les
mov
loopne
out
outs
xor
add
enter
in
ficom
mov
add
dec
sub
repnz
pop
call
lods
leave
mov
cmp
add
outs
sbb
add
popf
add
push
jne
push
rcr
cwde
outs
adc
add
add
addr16
les
pop
jecxz
pop
add
adc
cmp
ss
pop
push
gs
jb
push
stos
(bad)
sub
sbb
stos
pop
les
cli
sub
push
jbe
test
icebp
(bad)
pop
adc
mov
add
aam
int3
rcr
jmp
push
cdq
or
fld
add
add
push
aaa
jmp
dec
add
sub
in
adc
or
mov
sub
jecxz
mov
or
pop
push
adc
mov
jne
add
inc
(bad)
cmc
mov
loop
adc
dec
lods
mov
push
jns
cmp
push
adc
cmc
add
cmps
sbb
call
adc
jbe
pop
adc
fisubr
les
mov
retf
push
inc
(bad)
loope
or
out
adc
pop
sub
jp
cli
jmp
pop
out
add
cli
push
add
add
data16
test
dec
popf
push
stos
rcr
test
push
hlt
push
add
add
xchg
ins
add
add
add
in
inc
add
add
ss
add
add
mov
pop
cmp
add
repnz
add
pop
call
test
mov
add
or
pop
aaa
(bad)
jmp
jbe
or
lods
test
sub
add
imul
add
jbe
xchg
add
jns
cli
repnz
mov
and
icebp
addr16
call
std
imul
xchg
add
jns
cli
repnz
mov
or
push
sub
push
cs
sti
call
push
add
pop
call
adc
(bad)
sub
sbb
(bad)
xor
push
hlt
xor
add
clc
leave
push
dec
add
inc
add
add
add
das
das
pop
ins
mov
in
push
mov
sar
sbb
add
add
add
cmp
add
add
cmps
stos
pop
xchg
add
add
mov
pop
add
jl
push
xor
mov
cmp
(bad)
popf
pop
rol
or
mov
add
add
pop
push
add
add
inc
mov
add
add
add
in
mov
add
shr
pop
pop
add
test
inc
adc
dec
mov
fisubr
add
jbe
add
outs
call
add
clc
mov
add
add
out
adc
pop
sub
jns
cli
movs
outs
add
add
mov
add
mov
not
and
mov
add
test
das
adc
jmp
adc
or
imul
xor
adc
add
jge
push
add
shr
(bad)
outs
adc
test
movs
stos
add
add
clc
mov
add
add
inc
add
add
jne
add
(bad)
(bad)
ret
xchg
or
xchg
mov
xchg
ins
add
test
jecxz
imul
add
xchg
jl
pop
or
jl
pop
add
add
add
push
lods
dec
adc
enter
add
ins
add
add
in
jnp
add
div
add
xchg
add
add
jb
add
lahf
add
add
add
out
mov
in
push
les
add
jge
push
in
push
add
add
push
in
add
add
fdivrp
movs
lahf
add
add
fadd
mov
xor
mov
add
lds
je
add
add
mov
mov
sub
add
stos
dec
xor
add
add
xchg
jbe
xchg
add
jecxz
add
add
jle
inc
(bad)
cmp
add
add
cmps
icebp
pusha
mov
js
add
add
lods
push
push
dec
xchg
add
add
sub
mov
pop
add
add
les
add
push
jb
add
jl
pop
les
hlt
pop
jmp
adc
mov
cld
xchg
shl
sub
fisubr
sti
jne
dec
neg
outs
sub
pop
(bad)
das
aad
or
jae
ins
sub
lahf
repnz
enter
jbe
push
inc
cdq
add
add
inc
adc
adc
push
test
add
add
inc
test
jmp
fisubr
push
je
add
sbb
mov
mov
add
add
push
add
add
ficom
or
inc
test
jmp
add
ins
add
add
add
movs
add
add
dec
test
inc
jne
add
outs
jne
xchg
xor
add
sub
add
sub
add
add
add
das
jbe
mov
add
add
add
in
bound
add
pop
jmp
add
add
add
mov
push
add
add
dec
add
add
dec
pop
add
sub
hlt
pop
cmc
xor
adc
pop
mov
inc
xchg
jge
add
pop
(bad)
add
pop
push
add
adc
add
sub
or
add
out
mov
in
push
outs
mov
jae
add
in
add
add
push
outs
sub
add
add
add
das
das
pop
jecxz
shr
push
fadd
push
add
push
add
cli
lods
push
add
add
xchg
add
das
dec
mov
dec
sbb
inc
fs
add
push
inc
scas
add
lods
add
add
jo
jae
ret
adc
das
cmp
sbb
add
push
lods
outs
add
add
jnp
or
pop
add
add
add
cmps
add
add
aam
push
in
cmp
add
mov
add
pop
(bad)
mov
add
push
cmp
jle
add
repnz
xchg
jmp
sub
add
add
add
sbb
dec
test
call
mov
sub
jp
repnz
in
aad
pop
adc
inc
add
jo
xchg
add
ins
shr
jo
or
dec
jo
add
das
das
pop
inc
test
in
push
in
push
add
add
jmp
inc
add
add
hlt
movs
jg
add
popf
cdq
mov
add
mov
clc
push
add
inc
mov
sub
adc
push
pop
jle
inc
add
add
add
jbe
xchg
add
es
(bad)
push
mov
push
imul
(bad)
sub
add
test
add
lahf
imul
add
repnz
xchg
jmp
sub
add
js
xchg
add
add
push
xchg
add
inc
aam
fmul
pop
xchg
add
add
fstp
mov
add
add
add
(bad)
jmp
add
add
in
add
add
cmp
add
add
ja
pop
xchg
add
add
push
xchg
add
inc
aam
push
pop
fwait
add
add
push
test
inc
xchg
popa
add
sub
add
test
add
lahf
imul
add
add
add
jbe
add
es
pop
das
das
pop
sbb
fadd
push
add
or
add
hlt
dec
das
pop
jmp
das
add
in
jmp
push
inc
(bad)
jge
add
push
mov
add
add
xchg
inc
test
add
mov
sbb
mov
outs
das
push
add
push
add
add
push
add
fadd
add
cmp
add
test
add
add
add
ret
nop
dec
adc
cmp
push
popa
add
es
repz
sub
jmp
sub
mov
add
test
in
(bad)
mov
in
test
push
jbe
add
cli
mov
add
jnp
add
pop
add
add
add
add
cmps
mov
add
in
mov
push
jo
add
add
aad
cmp
add
clc
test
add
add
sub
stos
ds
add
add
jnp
add
add
add
adc
xor
out
fisubr
sti
xor
mov
add
jle
push
jno
adc
mov
push
outs
ins
aam
sbb
add
inc
push
mov
rcl
fst
(bad)
mov
in
aad
mov
inc
js
inc
adc
dec
sbb
sub
xchg
leave
add
adc
stos
fisubr
push
aam
fild
jnp
add
sbb
mov
add
add
add
cli
movs
mov
add
sub
add
add
shr
fiadd
mov
jb
dec
add
add
push
add
jns
fisubr
or
mov
out
jp
retf
sbb
test
dec
adc
push
test
das
pop
stos
add
add
mov
pop
jge
shr
pop
pop
sub
add
mov
cmp
dec
movs
jnp
add
hlt
pop
xor
nop
add
inc
mov
outs
das
push
and
add
add
out
inc
jmp
int
(bad)
mov
in
test
push
jbe
add
scas
stos
shl
jp
hlt
ja
fisubr
add
xor
and
pop
jmp
cmp
add
sub
add
jge
dec
movs
push
sbb
mov
add
sbb
dec
pop
mov
xchg
xchg
add
rol
imul
push
push
lds
jmp
mov
push
(bad)
out
adc
out
cs
inc
pop
in
in
mov
neg
aad
repnz
sti
outs
mov
pop
stc
hlt
data16
mov
ja
inc
pop
jbe
sub
and
mov
push
dec
ins
add
add
add
add
xchg
add
add
adc
xor
push
fstp
mov
add
add
add
(bad)
jmp
cld
add
in
add
add
movs
dec
mov
add
add
pop
xchg
adc
mov
inc
xchg
jge
add
pop
sbb
push
add
jl
(bad)
cmps
jbe
xchg
inc
movs
add
popa
add
jge
jo
mov
add
test
mov
add
jge
add
out
pusha
add
add
outs
sub
fiadd
mov
add
add
jnp
add
pop
clc
and
push
call
xor
jmp
xchg
add
add
add
cld
add
repnz
in
push
in
add
add
aam
add
add
jo
xchg
add
add
out
pusha
add
add
outs
sub
(bad)
sub
cmp
add
add
add
scas
add
add
inc
add
add
add
lahf
adc
add
cmps
mov
add
hlt
pop
or
inc
xchg
add
inc
fisubr
push
inc
add
add
les
add
outs
hlt
pop
push
sub
adc
inc
pop
inc
sahf
add
push
fistp
or
sahf
add
rcl
and
sbb
ja
add
add
mov
sub
add
es
test
jmp
add
dec
mov
sub
push
pop
jle
inc
add
add
add
jbe
xchg
add
es
aad
push
inc
fisubr
fcom
sub
out
fisubr
ds
add
add
jnp
add
add
cmp
add
call
jecxz
add
test
ret
adc
stos
ds
add
add
jl
add
add
push
enter
push
mov
push
inc
ret
add
dec
sti
lock
rcl
add
add
cmp
add
adc
repz
push
mov
add
add
add
sub
dec
add
add
les
add
add
add
jmp
cmc
test
jnp
add
js
xchg
add
add
add
inc
fldcw
or
add
jne
add
outs
mov
dec
add
add
les
add
jl
add
add
fadd
push
add
inc
add
push
aam
inc
add
add
add
add
mov
clc
push
or
call
sub
add
inc
add
test
add
add
ret
add
loope
push
(bad)
loope
xchg
mov
lods
mov
and
or
cmps
fcom
sub
in
fisubr
ds
add
add
jnp
add
add
cmp
add
call
xor
test
ret
adc
stos
ds
add
add
jl
add
add
jno
or
sbb
retf
pop
xchg
add
pop
clc
or
xchg
jmp
add
add
or
pop
in
repnz
test
add
add
add
inc
jne
add
outs
mov
jl
add
and
mov
inc
mov
add
sub
add
add
jbe
xchg
add
adc
ss
add
add
cmp
push
add
mov
add
outs
jbe
or
dec
inc
cmps
add
retf
jo
cmps
add
add
inc
adc
dec
cmc
fld
add
outs
jne
add
add
add
add
les
add
sar
cli
movs
mov
add
jbe
cli
movs
mov
pushf
imul
xchg
inc
ja
add
xor
sbb
lea
add
add
add
clc
mov
sbb
inc
jbe
xor
out
pop
inc
inc
jbe
or
jnp
add
sbb
(bad)
loope
cmp
scas
mov
jl
add
les
add
(bad)
xor
pop
clc
dec
call
into
add
add
repnz
cmp
popf
clc
mov
enter
add
repnz
add
bound
js
mov
add
sub
or
das
retf
imul
add
sbb
add
add
xchg
add
adc
add
pushf
call
sub
add
popf
pop
jmp
stc
add
sub
add
mov
jne
add
add
add
cmps
pop
les
jp
cli
movs
mov
sbb
xchg
xchg
add
jl
add
add
out
add
lods
js
pop
add
add
jno
pop
sbb
add
outs
jbe
lea
add
add
push
add
xchg
add
lahf
jnp
add
xchg
call
sbb
add
shl
pop
out
test
popa
sbb
call
fs
fldenv
lds
imul
leave
xlat
mov
dec
and
cs
call
cmp
xchg
add
jns
push
gs
add
xor
repnz
lods
sub
call
cmp
jmp
test
add
rcl
adc
pop
loope
scas
adc
fldcw
add
test
push
jmp
inc
add
cdq
sub
aas
jmp
mov
addr16
js
ja
inc
cdq
imul
sbb
out
iret
shl
adc
push
xor
lock
jmp
adc
adc
push
lods
dec
mov
add
pop
mov
and
jne
repnz
pop
fwait
add
cmps
pusha
or
fs
mov
pushf
mov
xchg
add
out
fisubr
xchg
mov
shl
adc
push
or
mov
mov
lods
sub
sub
dec
adc
pushf
ins
pushf
outs
pop
les
cli
mov
outs
pop
mov
push
add
cmc
pop
das
cs
adc
dec
or
(bad)
mov
sbb
rcr
jmp
inc
pop
dec
stos
ficom
add
test
mov
int3
(bad)
inc
add
(bad)
clc
jge
lea
add
dec
mov
lods
sar
fcomp
jnp
lods
sar
fcomp
jl
jmp
cmp
add
pop
mov
fsubr
jp
repnz
mov
in
fcmovb
jb
pop
test
sub
je
jnp
push
and
pop
add
add
bnd
cmps
push
xor
jo
ins
jbe
dec
jge
adc
fldcw
cmp
fs
mov
jge
add
out
sbb
inc
sub
dec
adc
fiadd
out
push
stos
ficomp
xor
push
fwait
cmps
dec
adc
lea
fld
and
add
pusha
mov
adc
sub
fisubr
inc
hlt
jl
xchg
fst
fistp
add
leave
stos
(bad)
jnp
push
in
mov
add
ins
add
add
lea
repnz
jp
ins
xlat
mov
jo
ja
inc
lea
jbe
pop
out
js
shr
(bad)
add
dec
xchg
push
js
mov
fnstsw
into
rcl
loopne
sbb
push
sahf
pop
or
fadd
and
fsubr
adc
add
clc
sub
push
add
adc
add
mov
add
mov
jge
xchg
test
in
mov
sub
inc
add
test
push
add
pop
or
ja
es
clc
mov
sbb
lahf
sbb
cmc
(bad)
ins
mov
in
mov
rol
xor
push
or
pop
push
jp
in
clc
nop
cwde
sub
in
fiadd
js
in
sub
mov
or
in
jp
add
push
js
in
xchg
mov
mov
fwait
in
bound
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
sub
mov
jmp
clc
add
jno
cli
add
add
push
inc
mov
or
pop
clc
and
popa
clc
sbb
gs
xor
mov
sub
(bad)
clc
inc
add
add
push
inc
mov
inc
mov
dec
add
add
push
inc
mov
inc
mov
inc
imul
sub
mov
test
inc
add
pop
in
fisubr
push
add
add
repz
add
test
add
add
pop
fisubr
jmp
add
adc
ret
inc
retf
in
ficom
cmp
add
add
cmp
sub
mov
test
inc
add
cmp
fisubr
xchg
jl
add
push
pusha
pop
aad
add
xchg
mov
cmp
outs
jbe
fs
jl
push
popa
or
lods
(bad)
jmp
mov
add
jp
sar
pop
test
hlt
js
add
add
hlt
fwait
push
jl
push
or
js
jae
xchg
pop
jmp
jp
add
cli
push
nop
pushf
outs
jbe
adc
add
popf
(bad)
jmp
mov
add
mov
shr
test
jl
add
test
xchg
pop
jmp
jp
add
cli
push
nop
pushf
outs
jbe
adc
or
int
mov
mov
inc
pop
arpl
or
cs
cmc
test
mov
jge
cmp
mov
fisub
gs
lahf
adc
xchg
in
fdivr
sbb
or
cdq
mov
in
fist
ret
xchg
jge
ror
icebp
mov
inc
int3
mov
add
xor
adc
outs
(bad)
test
in
(bad)
mov
movs
movs
stos
pop
les
mov
mov
xchg
xchg
inc
pop
adc
sbb
mov
adc
dec
sbb
movs
clc
cmp
lahf
mov
add
or
push
sub
fdivr
mul
in
into
cs
ffree
and
mov
push
add
jns
mov
cmp
push
jmp
inc
push
mov
jbe
add
hlt
dec
pop
xchg
xchg
jne
xchg
test
add
jbe
inc
adc
call
add
jmp
and
add
push
popa
or
add
pop
cli
call
adc
test
mov
jbe
add
pop
cdq
imul
lods
inc
jecxz
lea
(bad)
xor
pop
mov
ja
ins
rcr
push
test
mov
pusha
sub
xchg
int3
xchg
(bad)
in
pop
pop
xor
into
movs
cmp
int
cmps
out
push
hlt
pop
sub
pop
sub
aad
adc
add
fwait
xchg
or
push
mov
inc
jmp
pop
add
push
jne
(bad)
lods
or
push
add
sub
add
outs
sub
add
xor
(bad)
rol
adc
jnp
bnd
add
cs
sbb
enter
in
ficomp
sbb
mov
add
test
les
and
adc
jecxz
imul
stos
cdq
sub
sub
push
add
push
jne
outs
test
jp
push
fadd
aam
loope
(bad)
pop
pop
push
add
out
jecxz
inc
adc
lea
add
push
stos
add
leave
mov
sbb
nop
fst
push
mov
push
outs
mov
sbb
(bad)
in
jl
jmp
test
add
xchg
inc
inc
sbb
loop
test
add
stos
push
jne
in
hlt
shr
(bad)
cli
add
mov
mov
adc
jge
add
mov
jp
push
jne
add
sti
cmp
pop
xchg
ja
add
out
popa
arpl
into
in
aas
jb
add
pop
push
adc
sbb
xchg
sub
add
jp
hlt
ins
repz
(bad)
arpl
jbe
add
add
mov
fild
inc
movs
push
add
jbe
lea
jnp
std
retf
add
adc
mov
add
fdiv
mul
fstp
outs
push
jmp
pop
fiadd
adc
push
jl
add
add
not
not
je
in
fisubr
adc
add
out
add
cli
push
add
mov
sub
lods
sbb
mov
gs
xor
or
push
stos
rcr
adc
xchg
mov
call
jmp
adc
mov
(bad)
je
sahf
stos
push
fmul
popf
loope
(bad)
jmp
jl
push
push
adc
fst
test
add
xlat
adc
push
add
repnz
add
add
pop
sub
std
add
xor
mov
adc
jnp
repnz
enter
or
sbb
cmc
adc
ficomp
dec
pop
imul
loop
adc
jge
add
cli
jge
leave
das
adc
adc
rcr
add
sub
js
sbb
shr
pop
das
xor
push
or
push
mov
push
imul
imul
lds
add
or
lods
push
jne
add
(bad)
daa
xchg
add
fadd
in
jmp
es
imul
add
jae
xchg
and
(bad)
in
pop
das
jbe
mov
mov
ins
rol
xchg
jne
imul
out
add
add
cli
jl
lods
cdq
sub
call
test
inc
hlt
mov
push
pop
fs
add
sahf
push
add
enter
add
push
call
test
sbb
bnd
add
js
pop
mov
add
stc
repz
pop
lea
bound
mov
inc
in
jmp
xchg
add
xor
lock
cmc
push
test
or
cli
jge
lea
rep
adc
fisubr
nop
jno
push
jne
sbb
xchg
call
mov
test
lea
adc
hlt
test
mov
imul
nop
jno
jo
aad
xor
or
push
test
imul
mov
push
inc
pop
outs
sub
pop
mov
add
in
mov
xchg
adc
mov
cld
xor
or
and
push
lods
xor
jbe
int
out
imul
es
leave
or
(bad)
fcom
sbb
mov
adc
xchg
jns
pop
stc
pop
gs
clc
int3
add
mov
stos
sar
ins
jmp
lock
push
movs
sbb
mov
and
cmps
sub
and
pop
repz
xchg
mov
in
imul
lahf
ja
push
cmp
sub
or
cs
mov
mov
add
or
mov
mov
cli
push
(bad)
adc
pop
push
inc
clc
pop
sahf
sahf
repnz
add
es
push
lods
xor
push
cs
push
test
or
cdq
push
push
sbb
sub
mov
push
jo
jb
daa
lea
cmps
add
stc
push
or
les
js
pop
lods
sub
cmps
add
mov
mov
mov
or
xlat
sti
inc
lods
cs
aam
jge
repnz
add
jmp
imul
add
es
leave
das
adc
adc
shl
xor
xor
sar
test
mov
and
pop
out
add
jl
repnz
lock
mov
jmp
mov
jmp
jbe
repnz
mov
add
add
jne
in
mov
mov
clc
jmp
in
(bad)
shr
(bad)
pop
out
loop
fiadd
adc
add
mov
xchg
mov
mov
call
push
daa
inc
loopne
jne
ret
push
adc
pop
sub
hlt
pop
cmp
ffree
cs
pop
add
add
outs
adc
stos
add
cs
jo
adc
lds
add
ucomiss
mov
test
mov
in
jmp
add
xor
ficom
jbe
add
push
mov
adc
jge
repnz
jp
add
xor
outs
sub
mov
sti
(bad)
jae
jmp
xchg
add
sbb
ret
push
pusha
fld
mov
xor
nop
cdq
das
shr
ficomp
add
clc
jge
adc
add
or
sub
jmp
adc
mov
mov
mov
add
dec
sub
in
jmp
cmp
jmp
inc
add
clc
gs
jmp
cmp
sub
in
adc
gs
cmp
push
mov
add
or
cmp
std
push
sub
repnz
mov
lods
push
xor
add
cmp
adc
lea
shr
mov
shr
mov
data16
add
push
jne
in
adc
add
repnz
fldcw
add
test
or
(bad)
jo
add
mov
or
clc
jne
push
jbe
add
test
or
cs
mov
jmp
add
js
or
in
fisubr
mov
mov
jmp
inc
add
in
jmp
pop
mov
add
leave
cmp
mov
add
xor
in
bound
add
bound
aad
stos
adc
je
push
(bad)
mov
sbb
test
jne
pop
pop
lahf
xchg
fiadd
xor
add
call
inc
adc
or
jl
mov
fidivr
pop
in
mov
add
test
ret
mov
in
pop
in
(bad)
cs
test
inc
mov
jae
adc
adc
aad
rcr
adc
add
push
jl
jmp
sbb
add
(bad)
call
stos
pop
fcom
add
pop
jmp
cli
out
out
add
adc
sub
cmp
outs
or
mov
repnz
add
push
lahf
mov
adc
lea
add
or
leave
das
adc
push
xchg
(bad)
fdivr
push
jne
in
mov
mov
push
jge
repnz
std
add
or
sub
sti
pop
outs
test
mov
add
dec
sub
cli
out
bound
xor
push
or
mov
lods
pop
test
add
out
iret
shl
adc
push
xor
pop
int
clc
sbb
push
int
js
dec
cs
cli
add
cli
cmps
or
add
cli
jmp
js
loopne
adc
call
lock
addr16
movs
leave
jmp
leave
shl
adc
fstp
neg
and
jbe
cli
(bad)
js
inc
js
dec
sbb
cli
cmps
and
dec
push
cmps
adc
jg
dec
cmps
or
fnstenv
sbb
sub
cmp
neg
or
dec
daa
(bad)
hlt
or
sub
cli
call
js
pushf
mov
xchg
adc
cs
dec
stc
clc
stc
mov
dec
mov
inc
fcomp
shl
mov
(bad)
pop
mov
jmp
pop
mov
sub
ret
adc
pop
or
lea
push
ret
sub
fdivr
xor
adc
repz
ins
mov
mov
sti
popa
cmp
add
(bad)
gs
xchg
mov
add
hlt
jo
pop
pop
add
pop
test
stos
sar
xor
stc
dec
mov
shr
xchg
ds
jl
call
ja
scas
cmps
retf
idiv
pop
or
stos
mov
or
cmc
cli
fimul
rol
add
mov
adc
sar
mov
cmps
jp
mov
lea
cmc
pop
cmp
xchg
test
push
add
mov
les
sub
or
mov
in
psubb
push
jg
rcr
pop
les
movs
xor
push
or
pop
mov
add
jnp
push
push
add
or
mov
lea
xchg
imul
(bad)
ins
fcomp
adc
(bad)
icebp
push
mov
or
or
adc
mov
addr16
xchg
fiadd
jne
add
(bad)
ja
sub
add
jo
pop
pop
les
in
push
pop
clc
inc
add
inc
fs
iret
cld
lods
pop
(bad)
and
add
jmp
adc
push
adc
add
out
add
cli
push
ins
adc
jge
repnz
add
pusha
test
push
lea
pop
pop
add
xchg
push
add
inc
clc
mov
aam
inc
outs
fwait
mov
pop
mov
clc
aam
push
inc
popf
push
add
jbe
lea
jp
std
or
adc
jbe
jnp
(bad)
(bad)
jae
xchg
inc
jmp
jle
jmp
xor
add
push
adc
mov
push
sub
das
and
mov
jo
push
das
pop
shr
or
adc
jmp
add
test
add
aam
add
xor
out
pop
test
add
xor
adc
add
push
in
push
outs
mov
mov
and
(bad)
jb
add
mov
jp
repnz
lods
mov
fldenv
in
test
add
jo
jae
fcom
mov
nop
xchg
add
xor
out
ret
movs
sbb
jmp
stos
push
scas
cs
xchg
rol
mov
xchg
int
and
or
js
sti
add
ins
mov
pop
es
xchg
ins
push
(bad)
sti
add
ins
mov
adc
sar
fild
jl
pop
dec
cmp
(bad)
iret
jb
jo
push
in
pop
arpl
test
cld
es
pop
inc
jmp
push
push
or
es
sar
stos
test
mov
jbe
add
pushf
push
test
ins
sub
jb
or
dec
frstor
mov
out
in
fiadd
add
popf
(bad)
or
add
mov
mov
inc
popf
push
sub
xchg
mov
and
(bad)
sti
cli
jne
xchg
add
jp
repnz
popf
mov
scas
adc
icebp
mov
mov
lods
dec
call
mov
test
mov
xchg
ret
inc
lock
fldenv
jae
adc
or
shl
xchg
push
push
push
fstp
or
pop
add
pop
(bad)
add
dec
sub
cli
ins
jmp
mov
add
sbb
push
push
push
or
(bad)
rol
push
add
add
mov
fiadd
mov
push
or
es
leave
lods
sahf
push
xor
and
test
inc
in
repnz
fld
cs
sar
lods
in
and
add
pop
fwait
pushf
lods
clc
cmp
mov
sub
add
sar
cli
gs
mov
xchg
adc
pop
js
lea
sbb
mov
(bad)
fisttp
add
xchg
mov
mov
in
push
lods
test
push
xor
add
hlt
mov
mov
sub
pop
imul
adc
fstp
push
scas
adc
fptan
jmp
hlt
pusha
test
adc
xchg
in
fsubr
jnp
add
shr
fsubr
pop
stos
cmps
shr
push
mov
add
jns
push
push
jno
adc
scas
pop
jmp
mov
adc
ins
hlt
outs
das
add
cmp
int3
test
push
in
fisubr
dec
mov
outs
sub
mov
add
xchg
or
ins
sbb
mov
imul
adc
in
(bad)
cmp
or
ins
dec
dec
lea
fdivr
push
sub
sbb
es
or
out
pop
adc
add
test
jmp
xor
fisubr
mov
xchg
or
add
outs
push
jbe
adc
mov
ins
hlt
add
outs
sub
sbb
retf
cli
call
(bad)
scas
pop
jne
mov
fimul
inc
shr
(bad)
xor
xchg
imul
aad
mov
cld
jp
enter
ss
shl
sti
out
cld
test
jge
adc
xchg
js
imul
cs
hlt
inc
mov
movs
push
std
push
syscall
push
das
sub
xchg
in
fimul
cmp
mov
add
add
not
push
sbb
sbb
es
add
pop
test
or
jge
jp
test
fiadd
scas
call
add
lahf
sti
test
in
repnz
adc
add
pop
add
pop
or
stos
(bad)
ins
call
adc
lods
cs
das
fsubr
dec
jne
xchg
out
jne
sbb
add
xor
sbb
add
fsubr
test
jbe
pop
fwait
repnz
mov
icebp
fnstcw
push
mov
(bad)
sub
add
test
fcmovb
ss
test
add
mov
es
in
call
jecxz
add
push
inc
lock
test
sbb
movq
sub
(bad)
sub
push
push
cld
and
or
jmp
mov
adc
dec
jmp
lahf
stos
pop
sahf
dec
adc
int3
mov
addr16
push
cs
and
xchg
jg
xchg
add
cdq
sub
push
mov
sbb
pop
jmp
pushf
cli
dec
(bad)
call
jne
xchg
xlat
test
test
push
ja
xchg
ficomp
mov
mov
stos
pop
call
add
retf
leave
pop
test
ins
xchg
sub
lea
pop
(bad)
jp
inc
jmp
jmp
add
pop
adc
push
push
add
cli
loop
test
cli
push
in
mov
add
adc
jne
push
xchg
cdq
bound
rol
lahf
pop
push
fs
clc
pushf
jle
inc
popf
push
add
jbe
lea
jp
std
or
adc
in
fisubr
jle
test
sbb
(bad)
jl
mov
es
rcl
fucomi
test
cmps
or
fidivr
call
enter
jbe
jmp
rcl
sub
in
jmp
or
add
stos
shr
test
in
test
or
sub
outs
mov
mov
es
xchg
fiadd
jle
test
cs
xor
or
adc
push
add
pop
clc
pop
ins
push
inc
mov
add
jbe
lea
jp
std
mov
bound
add
hlt
jo
push
leave
inc
ja
rol
pop
clc
dec
sahf
mov
adc
ins
out
xor
sbb
mov
sub
or
in
ror
add
push
pop
mov
add
or
push
sub
loopne
sbb
add
add
shr
adc
push
das
pop
ror
adc
pop
lods
dec
call
jb
push
fs
jo
sbb
test
iret
sub
pop
pushf
dec
adc
dec
sub
dec
jmp
sbb
jecxz
out
push
jne
(bad)
ins
sbb
lods
push
jne
(bad)
repnz
lea
inc
cdq
push
mov
cmps
pusha
mov
pop
clc
test
add
inc
dec
mov
mov
lahf
ja
pop
lea
jo
pop
pop
(bad)
je
sahf
push
mov
push
add
add
pop
ror
test
push
mov
je
inc
gs
lahf
mov
cmps
xchg
add
sub
or
adc
fisubr
dec
and
pop
jnp
cli
xlat
dec
xor
jle
aam
pop
sbb
ds
add
jp
jp
in
push
into
sbb
pop
pop
add
sub
adc
or
shl
xchg
(bad)
dec
cmp
data16
enter
stos
ds
jl
push
outs
addr16
aam
or
add
lea
sub
adc
pop
adc
inc
add
pop
adc
lahf
pop
xchg
and
push
sub
jge
repnz
add
es
push
mov
pusha
bound
pop
add
lock
ins
fdiv
mov
xchg
add
imul
jl
add
jae
jbe
adc
(bad)
sub
add
xchg
jns
push
jne
add
(bad)
push
add
add
add
add
aas
push
add
add
cdq
add
push
jne
in
jp
add
sbb
add
push
jne
add
(bad)
jae
jbe
adc
add
vmread
test
jne
add
(bad)
pop
push
add
repnz
or
cmps
xor
add
mov
add
add
or
mov
sar
movs
movs
jmp
add
in
fidiv
imul
in
leave
std
pop
jmp
push
in
pop
sub
push
aam
aad
lods
popf
pop
pop
in
lock
xchg
(bad)
out
add
cli
push
add
mov
gs
add
fisttp
inc
adc
movs
adc
xchg
and
or
(bad)
jmp
or
repnz
loope
cli
sub
mov
xor
das
icebp
les
stos
fiadd
adc
push
jnp
imul
stos
push
adc
push
jnp
ins
adc
and
repz
adc
push
xor
iret
shl
adc
push
xor
js
ja
dec
pop
test
jbe
inc
jmp
ds
sub
popf
lahf
outs
sub
mov
inc
shl
cmp
in
fucomi
or
fs
push
xor
iret
shl
adc
push
xor
js
ja
dec
inc
cmps
sbb
dec
mov
push
push
cmp
inc
fcomp
ins
fsub
pop
std
js
lea
cli
xchg
loope
std
ja
scas
pop
das
push
mov
sbb
adc
push
xor
iret
shl
adc
push
xor
xchg
add
mov
or
mov
shr
ficomp
call
mov
pop
push
push
stc
ins
push
fisubr
or
sub
fisubr
add
sub
push
aam
popf
js
ja
adc
popf
jb
sub
adc
(bad)
or
adc
cli
push
rcl
jecxz
sub
or
add
stc
ins
jbe
outs
sub
mov
lea
push
ja
add
jmp
push
das
sbb
test
fldcw
add
cs
std
jle
sub
cmps
movs
movs
arpl
setp
stos
out
sbb
test
push
test
or
mov
push
fisttp
fdiv
dec
sub
aad
daa
imul
jbe
dec
xor
rol
push
mov
xchg
jp
sub
push
inc
pop
outs
sub
xchg
mov
pop
out
js
repnz
xchg
mov
or
mov
fadd
repnz
nop
inc
push
mov
sub
or
mov
adc
lods
into
pop
mov
add
ja
push
or
jns
jb
xchg
sub
inc
jmp
add
or
mov
ror
xor
jle
cs
std
or
mov
add
xchg
cmc
push
pushf
sbb
outs
pop
jmp
add
add
sub
or
mov
add
add
xor
xor
iret
shl
adc
push
xor
push
int
fcom
push
clc
in
sbb
dec
sub
add
(bad)
xor
pop
sbb
inc
les
test
sub
jmp
add
or
fs
pushf
outs
pop
les
cli
mov
movs
jmp
and
dec
xor
add
jo
add
add
push
adc
jbe
or
mov
ins
hlt
js
cli
sub
push
or
adc
pop
cs
xor
or
adc
cli
pop
sub
rol
adc
jo
or
enter
add
push
mov
clc
adc
or
pop
push
adc
push
push
push
clc
arpl
inc
add
cmps
dec
adc
push
and
adc
js
enter
daa
sbb
stos
(bad)
add
add
sub
dec
fisubr
push
test
jmp
lahf
adc
stos
add
sub
dec
retf
test
push
adc
fldcw
sub
push
dec
stos
fiadd
fcom
inc
pop
add
cs
test
into
or
add
stos
pop
rcr
add
test
adc
cmp
adc
add
stos
pop
cdq
sbb
add
xor
jmp
push
shl
pop
lods
sub
pop
clc
adc
push
inc
inc
cmp
cli
jmp
sbb
add
test
sti
xchg
sti
jl
pop
push
jbe
add
dec
sub
cld
pop
jbe
push
mov
push
outs
test
add
in
jmp
jl
add
shr
mov
push
dec
stos
fimul
ja
pop
clc
fs
push
call
jmp
mov
add
jns
ror
or
(bad)
xor
sbb
add
in
jmp
pop
mov
add
mov
jmp
sbb
add
in
jmp
jl
add
push
(bad)
push
mov
movs
movs
stos
icebp
les
cli
ins
mov
cli
enter
add
cmps
xor
or
jbe
dec
sbb
pushf
outs
adc
(bad)
sub
sbb
pop
out
add
call
fwait
shr
ficom
push
pop
add
dec
sub
repnz
vmread
adc
clc
inc
and
call
xor
(bad)
adc
shl
pop
jbe
mov
lahf
push
sbb
push
jmp
mov
lahf
cvtps2pd
(bad)
ins
shr
mov
push
lahf
mov
pop
add
jo
pop
mov
and
shr
outs
movs
retf
xchg
daa
add
add
push
js
repnz
outs
jmp
scas
jb
xor
retf
repnz
jg
add
call
xchg
add
pop
push
gs
lahf
jbe
pop
ss
add
dec
sub
sbb
xchg
pop
call
jl
or
test
add
fprem
jge
lea
jmp
mov
ret
mov
mov
jmp
jl
mov
(bad)
std
icebp
gs
add
shr
ficomp
adc
in
fisubr
(bad)
fldcw
fisubr
in
adc
lods
sbb
mov
test
sub
mov
inc
les
cmp
test
sub
fisubr
push
push
add
add
lods
push
test
rcr
mov
gs
sbb
out
lock
shr
ficomp
sbb
in
mov
sbb
sar
dec
in
nop
xchg
mov
add
cs
adc
sbb
push
std
push
in
fisubr
enter
bnd
or
scas
mov
jmp
jnp
jmp
lods
imul
test
sub
or
and
jns
js
imul
test
cs
pop
test
rcl
push
outs
sub
fisubr
mov
pop
out
add
pop
in
jne
jmp
test
add
outs
and
fisubr
or
mov
ret
and
stc
sbb
test
gs
add
add
mov
sbb
lods
push
add
add
push
mov
cmp
shr
xchg
cli
stos
jmp
add
push
jg
add
lahf
xor
jbe
pop
add
push
jne
add
sub
add
jp
cli
cmp
call
movs
and
jmp
mov
add
jmp
test
add
pop
cs
add
repz
adc
or
test
mov
(bad)
jmp
add
mov
mov
pop
or
push
test
add
fnsave
add
clc
cli
xchg
call
jl
add
add
adc
(bad)
jp
pop
mov
in
xlat
outs
sub
fdivr
dec
add
test
ja
jbe
add
or
pop
ret
push
fldcw
call
test
dec
add
sbb
push
mov
xchg
nop
(bad)
lods
push
fldcw
call
stos
sub
xchg
leave
push
jne
add
push
mov
jbe
add
sar
sbb
das
pop
(bad)
cmps
shr
or
sbb
pop
call
mov
sub
mov
stos
repnz
out
sbb
mov
mov
mov
aas
add
sbb
add
jbe
push
lods
ficom
mov
arpl
(bad)
in
jmp
imul
test
(bad)
mov
(bad)
out
cmp
mov
nop
in
(bad)
out
cmp
lods
inc
adc
mov
inc
fisubr
loopne
aad
gs
jmp
adc
lods
sbb
inc
sub
(bad)
outs
push
adc
scas
ret
sub
mov
(bad)
jno
ja
(bad)
shr
fisubr
mov
test
sbb
sbb
cli
ins
xchg
mov
push
repnz
lahf
add
movs
add
stos
shl
pop
mov
lea
clc
pop
jmp
sub
out
fisubr
inc
cld
inc
shr
fisubr
dec
ret
shr
call
ret
sub
mov
cs
cmps
adc
stos
test
call
test
jge
add
lods
shr
jo
adc
lea
leave
push
jb
cwde
retf
shr
fidiv
shr
sbb
test
sub
adc
stc
out
outs
sub
push
lahf
add
pop
inc
cmps
adc
dec
sub
jp
ja
push
lahf
mov
aaa
test
out
xchg
add
hlt
pop
hlt
add
add
pop
add
sti
jmp
or
add
fdivr
add
cmps
shr
outs
sub
inc
(bad)
sub
jmp
add
sbb
adc
stos
test
call
test
sub
add
mov
popf
add
push
lahf
add
pop
lds
jmp
add
mov
clc
pop
mov
cdq
scas
das
pop
pop
call
ficomp
add
add
repnz
inc
adc
lds
add
add
add
rol
bound
sar
xchg
add
sub
push
jbe
add
test
stos
sti
add
dec
push
add
sbb
adc
fisubr
(bad)
adc
imul
test
sub
mov
pop
push
pop
(bad)
clc
popf
add
test
stos
sti
add
inc
sub
push
(bad)
cs
mov
mov
pop
nop
hlt
stos
push
test
inc
je
ins
sti
xchg
mov
or
pop
pushf
outs
stos
jecxz
call
sub
jmp
ins
clc
xchg
pop
jl
stc
push
cdq
fdivr
cli
sub
es
or
pop
pushf
outs
jmp
out
fsubrp
xor
fisubr
ret
(bad)
repnz
xor
or
mov
jbe
add
add
lods
sub
cld
jb
xor
pop
push
inc
add
call
pop
pop
push
add
xor
in
cli
mov
es
or
pop
pushf
outs
jmp
out
fsubrp
dec
add
mov
sub
sbb
add
cli
cmp
call
lods
and
jmp
repz
xor
pop
lock
xchg
loop
push
test
push
das
mov
sbb
add
outs
das
inc
leave
xchg
jmp
bound
lods
popf
pop
pop
push
pop
cdq
add
or
mov
jmp
xchg
ret
cmp
jl
ja
cs
fnstcw
cli
sub
sbb
add
(bad)
pop
push
add
add
or
xchg
sti
add
dec
sub
clc
gs
ins
add
add
test
or
push
adc
test
std
mov
sbb
jge
mov
jbe
jge
js
cli
bnd
dec
or
lea
sub
pop
test
ins
mov
imul
fisubr
push
adc
push
add
add
cdq
add
pop
and
add
dec
sub
movs
jmp
add
pop
adc
push
push
cli
rcr
inc
jbe
mov
xor
outs
sub
mov
and
add
fwait
lods
popf
pop
pop
fldcw
adc
pop
ret
add
or
xlat
add
pop
jns
add
push
stos
or
xchg
xchg
sar
lea
mov
fs
es
aad
cli
nop
leave
stos
push
add
or
xor
(bad)
lods
popf
push
ins
xchg
adc
adc
lea
enter
in
dec
xor
std
stos
jbe
test
ret
das
cmp
(bad)
std
stos
jbe
mov
ret
stos
(bad)
and
(bad)
lods
popf
push
ins
xchg
adc
adc
lea
enter
nop
leave
icebp
sar
pop
jmp
jns
cli
ins
sti
xchg
mov
retf
add
or
mov
xchg
sbb
(bad)
jge
cmp
hlt
js
add
fwait
lods
popf
out
sub
pop
add
es
inc
push
inc
or
inc
(bad)
lea
mov
fs
es
aad
repnz
leave
cmps
push
add
or
xor
mov
adc
adc
lea
mov
nop
leave
(bad)
cmp
pop
in
in
es
add
push
jne
add
lea
loopne
movs
movs
jmp
add
pop
test
add
mov
adc
xchg
cmc
add
mov
out
jl
jmp
ins
imul
mov
mov
cmps
xor
lock
call
xchg
push
jbe
adc
(bad)
fisubr
pusha
bound
or
lods
sti
scas
fisubr
adc
in
fisubr
mov
ins
lods
fst
(bad)
mov
adc
add
cdq
push
popf
mov
mov
cmp
(bad)
outs
sub
mov
js
dec
xor
int
jbe
(bad)
sub
lods
sahf
mov
cmp
xchg
and
push
sub
jg
sub
imul
push
stos
inc
stos
lea
js
jae
add
jge
jo
dec
dec
add
push
js
(bad)
mov
mov
cmp
jle
sbb
sub
rcl
jno
adc
push
test
adc
rcr
dec
cli
outs
cmps
sbb
sub
movs
stos
jmp
aam
push
repnz
adc
sub
mov
mov
inc
jo
adc
sahf
inc
pop
nop
dec
adc
xlat
mov
pop
test
mov
or
vpshad
push
arpl
cmps
cmps
test
lds
test
call
adc
push
xchg
push
jge
jo
bound
push
adc
cli
jbe
adc
add
adc
or
shr
pop
aaa
(bad)
jmp
jecxz
add
out
call
jnp
add
push
call
lahf
mov
adc
clc
xchg
stos
push
inc
popf
dec
xor
adc
push
sub
pop
and
dec
push
sub
es
das
cwde
jmp
sub
scas
jns
push
mov
in
mov
add
sub
jo
add
add
cmp
repz
ins
sub
pop
push
adc
icebp
mov
mov
cmp
add
inc
adc
and
repz
xor
shr
add
addr16
push
stos
(bad)
clc
gs
sub
in
(bad)
in
clc
in
sar
pop
mov
add
pop
in
in
add
jmp
gs
lahf
mov
add
or
icebp
cmp
mov
dec
jmp
fld
js
add
clc
idiv
mov
add
shl
fisubr
jmp
jbe
add
outs
xor
add
test
push
adc
loop
outs
mov
mov
aad
lods
test
pop
cdq
aam
mov
adc
mov
ja
jo
ins
add
outs
cmp
jge
xor
imul
repz
xor
mov
ror
pop
or
push
shl
lea
stos
jle
test
stos
or
adc
repz
mov
mov
dec
stos
cli
push
jge
(bad)
cmps
pop
jbe
mov
ins
xchg
fldcw
fisubr
leave
pop
mov
imul
add
stos
cli
daa
add
add
xchg
popa
adc
sub
adc
jae
test
das
or
shr
push
outs
sub
xor
jmp
std
sub
adc
stos
jle
cmps
shr
jno
cmp
test
scas
jge
pop
ja
in
adc
movs
test
iret
xor
sbb
push
stc
(bad)
and
adc
push
mov
stc
sub
fisubr
mov
fnstenv
stc
pop
fisubr
or
stc
cwde
enter
push
push
test
(bad)
xor
push
xor
in
xchg
(bad)
(bad)
xchg
inc
(bad)
shl
pop
pop
ins
adc
add
add
xchg
popa
adc
repnz
push
test
stos
jle
test
clc
inc
sbb
jge
push
jge
sub
je
mov
ins
and
stc
(bad)
ins
stos
jle
scas
jl
jo
xchg
add
add
pop
std
pushf
adc
dec
sub
out
jge
push
jge
sub
je
or
stc
leave
stos
jmp
sbb
cli
daa
push
pop
stos
int3
sti
fisubr
into
sbb
stc
sub
adc
lods
test
add
jbe
jmp
push
in
shr
pop
das
das
pop
int3
test
xor
retf
or
adc
lods
aad
icebp
in
adc
or
test
pop
or
mov
xchg
inc
lock
pushf
outs
sub
das
fcomip
dec
cmp
inc
mov
jb
(bad)
icebp
jbe
adc
jle
push
out
cs
imul
cmps
adc
fwait
imul
dec
add
xor
push
adc
(bad)
jo
jb
mov
fwait
xor
call
test
popf
add
sahf
shr
pop
sub
or
or
adc
jl
mov
adc
stc
add
outs
call
push
lods
cli
push
aam
mov
inc
adc
clc
cmp
je
add
lods
idiv
pop
or
add
test
sti
add
sub
stc
stc
jo
outs
sub
stc
push
fmul
cmp
adc
lock
repz
mov
mov
stos
mov
shr
test
mov
add
pcmpeqd
mov
sub
aad
xor
add
hlt
pop
push
sub
xlat
jnp
imul
adc
add
adc
shl
mov
pop
dec
xor
(bad)
adc
push
lods
sbb
adc
fisubr
dec
and
dec
in
fisubr
inc
and
jbe
push
lods
adc
cmps
push
stos
add
retf
mov
inc
adc
adc
push
adc
push
jl
add
adc
jns
cli
daa
stc
pop
stos
int3
mov
push
mov
add
jns
cdq
sub
js
stc
ins
sti
mov
jmp
xchg
jmp
cli
daa
leave
pop
stos
stos
div
pop
inc
pop
or
pop
test
lea
push
xchg
add
jl
adc
xchg
in
loopne
pop
test
lea
lea
stos
or
xchg
adc
out
add
mov
jns
imul
push
jl
ins
aam
adc
push
jb
inc
sub
call
adc
add
add
aaa
sbb
adc
int
shr
add
sub
jmp
inc
mov
inc
xchg
shr
add
hlt
push
cmps
add
mov
ins
and
or
lahf
outs
adc
ja
sti
add
and
rcl
fldcw
stos
retf
add
inc
in
fisubr
stc
cmp
ins
stos
adc
jle
repnz
rcl
test
pop
pop
push
call
in
fcomp
adc
bnd
push
loope
iret
call
jmpw
xlat
hlt
inc
mov
xchg
enter
add
jmp
(bad)
je
dec
inc
adc
sub
shr
icebp
mov
shr
mov
cmps
cli
test
sub
jge
add
mov
add
inc
mov
stos
(bad)
sbb
jmp
xchg
add
test
dec
inc
es
or
add
add
js
adc
or
stc
lods
add
out
jp
pop
xchg
test
test
or
add
and
adc
shr
repnz
push
mov
clc
imul
fldcw
in
jmp
icebp
fdivp
imul
adc
push
scas
shl
mov
sbb
call
adc
push
push
aam
test
dec
adc
mov
xchg
hlt
ds
mov
mov
push
jbe
jmp
add
fnstenv
fidiv
or
mov
jecxz
pop
sub
jno
cmc
xchg
jl
push
outs
std
div
test
push
jbe
add
test
sub
push
lea
add
shl
fisubr
jmp
xchg
add
dec
sub
add
add
hlt
js
ja
mov
mov
arpl
sbb
call
lods
mov
(bad)
daa
add
mov
call
jns
repnz
add
(bad)
jl
fcom
jnp
dec
mov
xchg
imul
mov
xchg
bndldx
push
outs
sti
add
dec
pusha
or
cmp
in
pushf
clc
dec
jbe
dec
adc
shr
ficom
iret
outs
add
pop
in
aaa
jmp
pop
movs
xor
push
or
cs
cmc
pop
pop
add
adc
add
adc
or
shr
pop
aaa
call
pop
mov
movs
cmp
outs
jnp
(bad)
icebp
dec
or
lea
sub
hlt
stos
iret
cs
add
dec
inc
adc
xchg
add
pop
call
adc
(bad)
sub
sbb
jno
and
xchg
(bad)
xchg
and
push
test
dec
mov
sub
pop
and
in
or
xor
outs
out
clc
test
in
fiadd
mov
jo
adc
add
cmps
push
movs
(bad)
mov
jb
das
adc
icebp
stos
pop
sub
cmps
pop
das
jne
mov
pushf
ja
inc
add
add
test
sbb
jmp
push
jmp
adc
mov
(bad)
lahf
call
push
lods
push
jmp
add
inc
jecxz
jg
jbe
bnd
add
pusha
vmread
ins
fdivr
repnz
(bad)
hlt
retf
test
data16
add
pop
popa
sbb
in
inc
lock
adc
xor
push
stos
dec
clc
add
ins
or
push
popa
push
aam
fdiv
push
adc
test
mov
add
test
jle
add
adc
push
mov
adc
cli
hlt
pop
leave
sub
push
imul
fidiv
cmp
sub
(bad)
mov
jge
jo
adc
add
cmps
leave
sub
pop
add
jne
ins
dec
shr
(bad)
push
push
add
jmp
fsubrp
adc
mov
sub
shr
(bad)
jge
adc
(bad)
jae
add
sub
push
mov
push
test
lods
or
loope
jp
cdq
xor
pop
add
xor
or
add
into
(bad)
retf
test
out
hlt
lods
iret
std
push
jl
add
or
adc
cdq
dec
jmp
nop
add
test
inc
hlt
sub
jns
hlt
cs
mov
push
jo
xchg
sbb
(bad)
test
in
je
jmp
jmp
fisubr
neg
xor
lahf
(bad)
(bad)
or
jbe
or
js
repnz
fsubrp
retf
test
sub
jmp
add
test
ret
xchg
out
add
add
test
mov
add
seta
pop
addr16
push
push
push
or
inc
in
out
outs
adc
add
dec
sahf
mov
inc
in
pop
stos
push
cli
gs
jbe
cmp
(bad)
dec
(bad)
mov
jne
xchg
sub
mov
add
repnz
xchg
add
pop
call
test
add
es
pop
aaa
(bad)
jmp
mov
or
or
add
xchg
dec
pusha
stos
(bad)
sub
mov
out
pop
int
sub
or
add
in
out
add
fdivr
add
test
mov
jecxz
adc
(bad)
dec
adc
or
cmp
push
nop
add
popf
pop
pop
push
rcr
fisubr
jmp
ins
add
sub
jmp
mov
jo
xchg
add
fcom
xchg
in
loopne
(bad)
ja
int
test
das
pop
lahf
cmps
shr
push
ins
clc
inc
sbb
sub
adc
pushf
outs
add
mov
(bad)
xchg
pop
lods
push
and
add
fucomi
push
lea
lods
mov
out
xlat
sbb
sub
hlt
pop
(bad)
sub
adc
sbb
push
dec
add
imul
test
sbb
cs
xchg
movs
in
add
inc
jmp
dec
gs
adc
mov
fisubr
push
pop
or
add
in
inc
out
add
in
xchg
push
mov
mov
nop
test
pop
push
or
add
xchg
mov
test
(bad)
stc
stos
sbb
ret
adc
pop
sub
jns
cli
lods
mov
add
fcom
jb
xchg
inc
jmp
test
adc
movs
inc
test
push
cmps
adc
dec
sub
repnz
adc
imul
ins
in
add
sbb
ins
adc
push
or
add
leave
fisubr
(bad)
adc
or
test
xchg
xchg
jo
push
push
or
add
lahf
push
and
add
push
movs
inc
test
sbb
add
jbe
pop
sbb
movs
mov
lods
hlt
mul
aad
push
dec
add
push
test
push
xchg
push
push
or
add
push
sub
cmp
or
or
add
repz
inc
mov
mov
xor
outs
sub
xor
sar
call
test
stos
push
lahf
mov
sub
add
outs
call
mov
es
shr
jbe
rcl
inc
add
jno
jb
add
ror
push
inc
cmp
add
repnz
fiadd
jbe
mov
ror
mov
scas
rcr
mov
add
ins
in
add
jno
ss
or
add
hlt
dec
out
add
out
mov
test
or
add
dec
mov
fisubr
in
add
jbe
imul
add
inc
mov
jge
xchg
xlat
cmps
pop
or
pop
jge
adc
test
out
add
push
jb
add
enter
inc
inc
or
add
lods
sbb
add
add
push
mov
mov
loopne
in
inc
out
add
aad
mov
mov
(bad)
sub
fdiv
stc
push
lods
push
hlt
pop
(bad)
sub
adc
dec
mov
(bad)
add
out
shr
(bad)
movs
mov
xchg
pop
das
or
shr
icebp
ins
mov
sub
add
hlt
ds
add
sahf
or
add
push
mov
xchg
jno
add
dec
ins
xchg
test
push
pop
(bad)
or
add
sub
or
sub
test
outs
sub
or
add
inc
inc
mov
push
sbb
and
movs
dec
test
sub
xchg
aad
add
lahf
pop
push
xchg
jno
add
lahf
mov
add
sbb
adc
adc
pop
mov
adc
sar
push
inc
add
mov
movs
mov
pop
cmp
fst
icebp
outs
add
add
int
outs
sub
xchg
ins
in
add
out
add
fisubr
dec
and
dec
mov
outs
sub
sbb
cmp
or
ins
in
add
repnz
mov
ss
add
xchg
or
add
cli
xchg
inc
test
add
cmp
mov
imul
add
out
jo
arpl
mov
ds
add
jo
inc
add
jbe
scas
push
mov
add
cmp
dec
test
sub
xchg
aad
add
lahf
pop
push
xchg
jno
add
lahf
mov
add
sbb
adc
adc
pop
xchg
sub
inc
inc
add
pop
shr
(bad)
movs
inc
test
add
fst
icebp
aas
add
add
lods
fld
mov
xchg
or
stos
es
or
add
pop
lods
mov
add
xchg
fdiv
movs
dec
sti
add
mov
inc
cs
test
leave
xchg
sar
sahf
or
add
jns
xchg
outs
mov
mov
sub
adc
or
or
add
clc
sbb
push
jmp
sbb
clc
pop
push
popf
repnz
push
add
add
hlt
lods
dec
sti
add
fcomp
call
mov
imul
shr
add
test
das
pop
test
outs
lods
push
xor
add
cli
jmp
ficomp
imul
pop
push
push
or
add
push
adc
push
jnp
test
aad
add
dec
loopne
int
aam
out
aaa
sbb
adc
dec
lods
inc
(bad)
mov
pop
stos
add
mov
xchg
shr
add
daa
(bad)
add
push
adc
outs
test
inc
arpl
jge
add
add
mov
push
test
mov
xor
add
int3
push
add
shl
inc
add
add
aaa
sbb
adc
dec
lods
inc
inc
shr
add
inc
nop
or
(bad)
int
ret
mov
jge
repnz
mov
add
shl
fisubr
jmp
xchg
add
aas
adc
add
or
add
cmps
icebp
inc
mov
sub
add
ins
clc
inc
sbb
movs
mov
add
ins
ret
xchg
test
add
shl
fisubr
jmp
xchg
add
dec
sub
add
icebp
push
in
inc
out
add
add
push
mov
inc
in
popa
in
push
leave
add
cmp
ins
and
jo
lahf
outs
adc
xchg
add
js
ja
sti
add
pop
xchg
inc
xchg
leave
rcl
fldcw
stos
retf
add
gs
fisubr
add
ins
stos
adc
jle
repnz
mov
add
enter
inc
fldcw
push
pop
imul
add
cli
bnd
push
loope
iret
call
jmpw
xlat
hlt
inc
mov
xchg
lahf
adc
pop
add
cmps
push
test
or
sti
mov
add
(bad)
jae
jbe
adc
(bad)
adc
lea
icebp
pop
adc
jae
add
js
adc
mov
je
add
lods
inc
add
add
lea
test
add
repnz
clc
add
pusha
seta
xchg
stos
rcl
clc
cld
pop
push
dec
mov
add
cmps
mov
add
outs
xor
add
test
jle
cmp
outs
jl
in
js
add
sub
test
sbb
add
repnz
in
fst
sbb
and
pop
pushf
outs
mov
xchg
or
cs
ins
mov
adc
repz
or
loope
inc
pop
xor
inc
sbb
jne
in
xor
add
test
add
dec
loope
(bad)
jmp
lods
sub
push
or
push
mov
repnz
mov
add
xchg
or
adc
je
add
js
adc
or
add
add
js
adc
or
sub
test
test
or
es
fld
stc
clc
and
ins
fdivr
push
in
aad
es
aaa
test
jge
adc
retf
js
pop
stos
bound
push
or
(bad)
rol
ja
cmp
add
cmps
mov
pop
push
adc
xor
mov
mov
jle
jmp
mov
add
pop
pusha
or
pushf
lods
sahf
adc
add
jo
pop
mov
popa
arpl
xchg
cmp
das
mov
push
push
sbb
adc
mov
shr
cmp
jl
mov
mov
mov
in
mov
dec
pop
mov
mov
addr16
js
ja
or
imul
push
add
js
adc
sub
push
add
pop
mov
cmp
cs
test
gs
lea
sub
out
sub
mov
jmp
mov
sbb
add
add
or
inc
lea
popf
js
repnz
fwait
inc
jmp
mov
or
lea
int3
mov
pop
push
mov
pop
push
inc
jmp
test
adc
idiv
ins
repz
jbe
or
pop
stos
add
shr
fidivr
jmp
add
add
das
jbe
inc
jmp
jmp
push
jmp
sbb
or
pop
push
adc
loopne
and
lock
ins
fdiv
pop
pop
pop
imul
daa
jbe
ja
inc
or
pop
test
std
jmp
stos
sar
xchg
ins
loopne
fisubr
stc
shl
xor
lods
into
sub
pop
fwait
adc
cmp
es
jmp
mov
xor
ja
cs
cmc
pop
mov
mov
ins
loopne
fisubr
stc
shl
xor
lods
loopne
lahf
pop
call
cli
xor
mov
push
fdivrp
fnstenv
inc
jb
lea
icebp
clc
jecxz
cwde
cmc
pop
adc
mov
mov
repz
lods
xor
jmp
and
xchg
ja
loop
mov
mov
or
stc
lock
es
out
retf
mov
or
cs
cmc
sbb
and
cmc
mov
adc
fisubr
les
bnd
and
int3
jns
cli
ins
mov
ja
mov
jae
sub
stos
dec
adc
mov
or
test
push
ins
rol
jnp
mov
mov
or
jns
dec
jmp
cmc
pop
ja
in
xor
(bad)
cmc
push
ja
loop
es
push
ja
xchg
lea
shl
or
or
lods
xor
add
sub
mov
test
jne
lea
mov
ins
fdivr
repnz
xchg
lock
sbb
cli
mov
repnz
mov
cli
ins
xchg
ror
int
shl
or
add
mov
popa
mov
xchg
inc
or
test
mov
arpl
push
stos
loop
sub
mov
movs
jmp
js
ja
arpl
in
push
lods
xor
pop
pop
idiv
repz
dec
ss
jb
lea
(bad)
gs
popa
loopne
lahf
ja
pop
je
(bad)
cmc
push
mov
add
push
dec
ss
jb
fild
bound
xchg
in
(bad)
mov
in
add
popf
fisubr
or
fisttp
sti
xchg
cmc
sar
add
(bad)
cli
scas
shr
test
ja
ja
es
adc
test
ja
es
and
jo
jecxz
mov
fcomp
leave
push
add
jl
xchg
jnp
dec
mov
xor
mov
inc
add
outs
xor
jmp
add
outs
adc
into
in
cli
sub
in
cmps
dec
or
daa
jno
in
xchg
jl
mov
fcom
mov
shr
icebp
js
mov
outs
sub
sbb
movs
int
outs
loope
fs
sbb
and
push
fbld
jmp
add
jo
push
add
add
cdq
add
push
jne
in
stos
add
lahf
pop
out
add
cli
push
add
popf
push
stos
shl
add
imul
add
cmps
pop
and
shl
adc
dec
or
test
clc
inc
and
jl
jo
adc
test
add
mov
das
pop
sahf
test
sbb
fisubr
mov
pop
int
(bad)
gs
pop
inc
shl
fisubr
ret
vpmaxub
ja
(bad)
shl
fisubr
popf
cmp
adc
jmp
fild
or
sub
push
mov
fistp
loop
sti
push
ins
sub
outs
adc
(bad)
and
loopne
sti
or
and
fdivr
in
icebp
gs
lea
jecxz
or
fsubr
jae
test
bnd
test
stos
jmp
fisubr
test
sub
clc
inc
and
shr
outs
sub
mov
hlt
fist
fwait
js
jae
mov
sahf
jbe
adc
shl
(bad)
gs
fs
mov
unpckhps
fstp
sub
in
add
inc
mov
push
adc
inc
jg
and
fisttp
add
stos
ficomp
pop
(bad)
in
adc
jl
js
sbb
out
(bad)
call
das
add
cdq
push
lahf
add
test
add
enter
lods
shr
movs
stc
xchg
push
pop
pop
stc
jl
pop
mov
adc
push
ja
jb
hlt
sub
jns
and
out
fisttp
and
out
fbld
pop
push
or
xchg
jmp
jo
add
or
add
jbe
or
mov
mov
fisubr
adc
movs
das
pop
aam
sbb
push
push
push
or
es
fstp
and
xchg
jmp
pop
add
test
add
jmp
aad
add
or
mov
ficomp
fdivr
inc
jmp
imul
ins
xchg
test
hlt
dec
das
stos
jecxz
cmps
adc
lea
jmp
outs
inc
dec
adc
lods
pop
pop
sbb
jbe
or
stos
jmp
jbe
adc
std
push
lods
push
pop
lea
lahf
sti
mov
xor
lea
add
shr
add
or
push
pop
jne
cli
lahf
adc
adc
jae
ret
xchg
inc
pop
in
add
sbb
in
xchg
pushf
outs
adc
add
in
fiadd
jne
in
inc
into
in
fiadd
jne
in
stos
add
in
aam
sbb
call
adc
push
add
pop
fld
es
in
mov
and
inc
adc
in
add
adc
(bad)
cmp
fsubr
add
fiadd
jne
fldcw
adc
test
popa
pop
pop
out
add
cli
ficom
es
std
pop
sub
push
lea
es
sub
ins
fisubr
and
mov
leave
sub
inc
add
jg
push
mov
push
add
adc
xchg
in
aam
sbb
ja
add
addr16
push
push
cdq
mov
inc
xor
jg
stos
hlt
add
add
add
bnd
add
es
pop
inc
cs
test
jmp
mov
add
mov
loope
fbld
cmc
daa
mov
fisub
int
adc
adc
add
jo
dec
adc
add
add
in
fiadd
jnp
in
dec
shr
fisub
fwait
pop
pusha
push
mov
inc
in
jmp
rol
add
or
or
pop
vmread
pop
sub
push
lods
xor
pop
add
add
gs
inc
ins
aam
add
ins
fdiv
add
inc
cld
lock
pop
push
stos
jmp
and
test
test
in
shl
mov
push
add
or
pop
push
adc
and
std
test
addr16
in
das
push
aad
test
fisubr
add
jl
ins
push
popa
movs
xor
xor
cld
adc
mov
jl
xchg
fstp
adc
add
shr
jl
bnd
cli
(bad)
icebp
add
lods
leave
call
adc
sbb
adc
adc
lock
push
stos
test
fisubr
or
mov
ss
test
add
mov
jp
dec
ins
mov
leave
sub
add
and
pop
mov
lods
icebp
addr16
in
popf
and
adc
shr
imul
sar
jl
lods
lds
add
push
(bad)
jne
mov
(bad)
sub
daa
lods
xor
pop
and
add
add
(bad)
sbb
loope
stos
shl
clc
sbb
inc
out
lods
push
syscall
outs
sub
lock
(bad)
fst
pop
les
mov
rol
icebp
les
mov
out
hlt
inc
lods
dec
aad
add
fild
dec
or
xchg
icebp
or
scas
adc
dec
das
mov
adc
jne
aad
gs
out
add
cli
push
push
arpl
xchg
cmc
or
sub
fidiv
fcomp
addr16
sbb
xchg
popf
loop
sub
in
add
or
loopne
shr
dec
inc
mov
mul
adc
and
mov
daa
movs
add
out
cmc
jb
lock
adc
jo
add
lods
test
outs
jbe
or
mov
mov
mov
xor
push
adc
cmp
jns
inc
sbb
lock
das
jmp
aam
vmread
stos
cmps
or
mov
(bad)
test
shr
inc
add
add
ja
data16
rcl
ja
inc
xchg
add
leave
das
jmp
add
stos
mov
push
jp
clc
gs
lea
lods
clc
gs
in
adc
add
repnz
add
or
pop
jbe
add
or
shr
or
push
xor
add
add
shr
sub
push
add
sub
(bad)
call
pop
das
jbe
adc
add
or
add
xchg
dec
pusha
stos
(bad)
or
sahf
aas
add
push
stos
add
push
jmp
sbb
jo
xchg
jecxz
ins
rcl
xchg
repz
and
cmc
pop
pop
add
adc
call
add
or
mov
jmp
shr
fiadd
mov
fucomip
call
fwait
inc
mov
clc
sub
push
dec
adc
shr
ficomp
clc
or
push
inc
popf
div
pop
xor
jb
fild
(bad)
stc
dec
or
xor
mov
inc
es
test
retf
repnz
push
add
xor
adc
fldcw
push
pop
imul
add
push
mov
in
pop
mov
add
test
push
jb
inc
inc
lods
sar
push
jne
add
(bad)
jae
jbe
adc
add
xor
in
push
adc
cdq
add
test
push
add
xor
jo
and
add
or
sub
add
add
add
icebp
fisubr
or
in
call
(bad)
(bad)
ja
or
add
cmps
sbb
call
adc
add
xchg
dec
adc
shr
fiadd
pop
aad
mov
mov
outs
jl
in
fcomp
pop
push
or
shr
sub
mov
add
jmp
stos
jecxz
call
lods
and
das
inc
pop
test
jo
scas
pusha
pop
aad
mov
adc
cmps
dec
adc
pop
cs
xor
or
pop
push
adc
sbb
jge
leave
sub
jg
mov
mov
jmp
push
xor
rcr
stos
adc
stos
ror
ja
fadd
push
inc
add
pop
add
(bad)
fisub
gs
adc
xchg
in
fdivr
sbb
xchg
jno
add
push
stos
or
xchg
adc
in
fisubr
or
popf
dec
add
outs
sub
call
jbe
cmp
mov
add
sub
jmp
push
add
test
dec
shl
cld
es
pop
cmps
pusha
pop
retf
out
add
aad
sub
push
jmp
arpl
or
rol
shl
add
push
stos
add
mov
adc
add
ins
fmul
sbb
enter
in
fiadd
call
sub
mov
cld
es
pop
sbb
add
add
(bad)
mov
shl
pop
pop
push
mov
mov
xchg
and
(bad)
in
shl
xchg
cmp
pop
movs
inc
add
xchg
cmc
sar
mov
repnz
push
test
movs
inc
add
add
or
push
add
pusha
add
add
add
jo
jae
push
add
add
pushf
mov
outs
test
jne
add
(bad)
ja
jg
add
jo
pop
pop
les
push
stos
jp
test
es
cs
fadd
sub
aad
jmp
push
popa
pop
xchg
add
jp
js
les
stos
vmread
add
jmp
ins
fadd
jae
add
add
push
jbe
xchg
test
in
test
pusha
pop
aad
add
adc
fwait
push
push
test
outs
jne
lea
fcomp
push
or
push
adc
add
mov
inc
push
adc
mov
adc
add
add
test
add
mov
addr16
outs
test
mov
add
push
movs
cs
lea
sbb
jge
push
hlt
mov
cmp
add
add
push
mov
mov
in
cli
inc
add
push
add
add
push
mov
in
add
in
sar
add
pop
push
add
add
fwait
mov
jbe
adc
popf
add
test
pop
push
fs
mov
add
ret
std
add
test
ret
add
mov
retf
add
add
fisubr
dec
adc
mov
add
test
adc
add
mov
pop
or
call
sub
outs
adc
mov
add
jns
repnz
mov
pop
ret
adc
mov
mov
icebp
jno
lds
imul
shl
pop
pop
add
add
bound
add
in
or
add
pop
push
add
add
push
mov
icebp
add
add
and
pop
fs
shr
cdq
inc
jmp
clc
popf
(bad)
inc
add
push
bound
adc
push
ins
repz
stos
cli
pop
jp
hlt
inc
xor
cmp
or
add
mov
imul
(bad)
fsubr
repnz
jmp
call
add
cdq
daa
pop
cmp
js
add
dec
cmp
aam
push
adc
mov
add
add
add
in
out
inc
add
sub
add
push
mov
int3
add
add
jnp
adc
das
pop
pop
dec
ja
es
lock
push
leave
mov
cwde
mov
pop
stos
jmp
mov
fwait
shr
mov
stc
add
mov
dec
jb
add
add
adc
neg
outs
stos
push
add
add
sbb
mov
push
jb
add
add
xor
pop
push
inc
(bad)
add
xchg
dec
sub
clc
mov
js
add
add
push
das
push
sti
mov
in
pop
hlt
cli
inc
add
cld
addr16
add
adc
cmc
fisubr
push
rol
add
das
xor
ret
test
rol
add
xor
adc
adc
jmp
fsubr
(bad)
add
xchg
dec
sub
clc
mov
js
add
add
push
das
push
mov
shr
pop
hlt
adc
add
add
outs
ja
or
xchg
ret
push
mov
aaa
push
stos
xor
mov
add
test
jbe
xchg
(bad)
js
sahf
out
add
mov
movs
gs
shr
(bad)
std
add
test
pop
mov
push
enter
inc
xchg
xor
add
test
inc
jmp
fsubr
(bad)
lods
repz
add
repz
xor
pop
push
jmp
(bad)
sub
xor
outs
push
(bad)
std
add
test
popf
(bad)
inc
add
pop
outs
sub
pop
mov
mov
call
add
add
add
add
and
adc
adc
adc
adc
adc
adc
adc
sub
xchg
dec
sbb
add
cmp
cmp
pop
clc
and
push
call
jmp
inc
pop
jge
js
iret
std
add
xor
and
nop
inc
add
jb
or
jmp
nop
cwde
xor
lods
and
add
jb
daa
std
add
adc
add
test
stos
sti
js
push
pop
fld
nop
cwde
jp
in
(bad)
add
(bad)
in
fisubr
pop
xchg
test
imul
mov
ja
jno
hlt
pop
mul
int
in
xchg
inc
add
in
fisubr
push
icebp
add
add
hlt
cli
inc
add
add
test
inc
mov
clc
popf
out
add
jbe
jecxz
add
mov
stos
fsubr
enter
add
ins
sub
fisubr
push
add
add
ja
adc
push
push
add
add
ja
sub
shr
(bad)
movs
repz
add
push
sub
pop
push
inc
push
pop
std
add
or
ins
rol
add
push
add
add
ja
or
mov
add
inc
or
push
call
(bad)
push
dec
sbb
clc
add
add
in
push
inc
add
push
add
add
test
adc
movs
aad
aad
adc
cwde
mov
mov
adc
jb
adc
jmp
sbb
dec
std
pop
push
call
inc
and
add
jge
hlt
dec
scas
(bad)
push
ins
test
movs
idiv
add
popf
push
in
or
add
mov
add
jnp
enter
add
jo
adc
ja
add
add
in
or
add
shr
fisubr
push
or
add
in
push
inc
add
mov
sbb
or
push
(bad)
fdivrp
add
dec
sub
sbb
jns
(bad)
movs
repz
add
shr
nop
shr
add
and
enter
add
jo
adc
lock
es
add
add
sbb
test
xor
ja
sub
xchg
or
adc
dec
add
cmps
repz
adc
jge
div
adc
imul
add
push
mov
or
add
jae
lea
xchg
jl
pop
pop
(bad)
nop
xchg
push
iret
in
(bad)
movs
repz
add
mov
jl
pop
hlt
cli
inc
add
out
fisubr
push
lea
mov
adc
xchg
jmp
inc
or
add
mov
and
add
retf
cli
movs
(bad)
add
jbe
movs
sub
add
out
fisubr
jmp
cli
inc
add
add
scas
shr
(bad)
lods
repz
add
sbb
adc
dec
fld
test
mov
in
shr
(bad)
pusha
stos
std
jns
push
pop
pop
std
add
test
in
ficomp
fs
add
adc
jmp
add
push
fisubr
adc
add
fs
ficomp
add
push
std
add
pusha
pop
push
add
add
dec
sub
clc
add
add
mov
push
and
in
add
add
outs
sub
popf
pop
mov
mov
add
scas
dec
xchg
xor
movs
xor
add
popf
add
add
inc
sbb
mov
inc
add
and
add
pop
add
data16
add
push
pop
push
add
dec
je
add
add
add
sub
add
sub
in
fidivr
add
adc
fwait
(bad)
sub
add
mov
adc
pop
popa
pop
xchg
inc
repz
sub
jp
hlt
movs
xor
add
popf
test
imul
or
inc
pop
add
cmps
mov
cwde
push
jb
add
add
shr
cdq
clc
popf
out
add
mov
add
cmp
or
sbb
in
jbe
imul
shr
add
iret
hlt
pop
mov
dec
dec
pop
push
jmp
pop
(bad)
std
add
sub
push
add
add
shr
aad
xchg
add
add
ds
add
pop
or
add
add
sbb
push
dec
xchg
fld
adc
add
cdq
shr
aad
ins
add
add
fdivrp
jmp
inc
es
add
call
mov
hlt
dec
scas
(bad)
sbb
xchg
push
lods
push
std
jmp
sbb
inc
fmul
mov
std
jmp
pop
test
xchg
daa
stos
aad
cli
outs
push
(bad)
std
add
test
movs
repz
add
push
sub
or
inc
jecxz
mov
outs
jge
fldcw
add
test
cli
inc
add
inc
fidiv
cmp
clc
add
sub
add
out
jmp
in
(bad)
add
push
jp
cli
movs
jmp
add
add
pop
std
add
sub
test
cli
out
aad
mov
pop
paddw
add
sahf
popf
test
add
jo
aas
stos
cli
cmp
gs
pop
push
dec
cs
lods
daa
inc
add
mov
ds
ins
(bad)
fcomp
add
jno
or
mov
clc
add
add
xchg
movs
ret
mov
cmp
add
pop
push
dec
or
sub
jl
inc
or
jne
sub
push
fsincos
in
ror
(bad)
jp
(bad)
outs
imul
pop
or
add
cs
or
push
(bad)
in
sbb
(bad)
and
cli
mov
push
inc
add
cli
add
add
push
sub
(bad)
movs
repz
add
jnp
sub
shr
mov
push
call
sbb
sub
jge
sub
std
add
into
idiv
xor
xchg
fisubr
add
fld
adc
xor
push
jmp
pop
popf
sar
add
sti
pop
(bad)
std
add
mov
fadd
add
and
add
mov
mov
in
aam
dec
pop
std
add
cs
dec
pop
push
dec
xchg
loope
add
hlt
lods
xlat
inc
add
or
add
sahf
cli
push
add
add
jl
pushf
test
loope
add
pop
and
add
dec
sub
repnz
in
push
in
or
add
jl
pop
das
and
in
add
add
add
mov
add
mov
in
call
pop
mov
add
dec
sub
in
jmp
push
push
add
push
xchg
loope
add
hlt
ins
imul
in
add
repnz
in
mov
es
and
in
xchg
push
jb
add
add
and
(bad)
std
add
repnz
in
xchg
push
add
add
jnp
pop
gs
mov
pop
daa
std
add
adc
add
es
push
pop
push
inc
ss
add
sub
das
inc
add
mov
add
ja
mul
imul
in
add
stc
(bad)
fdivr
add
std
inc
ss
add
gs
ds
add
ins
add
popf
pop
pop
fldcw
pop
jmp
mov
jns
cli
movs
cmp
add
jo
jg
or
loope
add
cli
ins
jmp
mov
lahf
add
sbb
push
push
movs
xchg
push
test
repz
push
test
jnp
push
test
in
push
test
mov
addr16
fwait
push
jl
stc
pop
mov
pushf
(bad)
test
bound
test
and
add
aaa
stos
loop
or
add
cmps
aam
cmp
push
aaa
or
inc
add
and
add
aaa
stos
jecxz
call
sub
outs
adc
mov
mov
call
pop
fwait
pushf
sbb
test
inc
popf
dec
xor
lea
add
jbe
lea
push
fstp
aam
mov
mov
rol
cld
fild
add
cli
sub
test
jbe
imul
adc
jmp
jbe
fwait
mov
add
mov
or
mov
stos
fdivp
or
xchg
icebp
shl
jae
les
add
in
ficomp
or
pop
push
adc
sbb
jge
leave
sub
mov
mov
lahf
ja
les
clc
xor
push
jne
(bad)
je
adc
lea
mov
ins
fmul
sbb
imul
ja
pop
add
js
pop
stos
arpl
hlt
push
push
stc
mov
jmp
push
add
test
ret
mov
das
adc
shl
jo
cmps
cmp
mov
mov
pop
sbb
call
pushf
(bad)
lahf
outs
movs
ret
lea
jmp
in
fisubr
mov
loope
stos
das
adc
rol
cmps
add
pop
ja
add
mov
add
jns
push
mov
call
sub
cmps
add
lea
jp
std
add
add
mov
fsubr
push
add
lahf
call
mov
xchg
sub
das
push
add
add
leave
mov
addr16
xchg
fiadd
jne
add
(bad)
ja
xlat
add
add
pop
pop
(bad)
shl
adc
push
xor
iret
shl
adc
push
xor
mov
pop
xor
lea
icebp
(bad)
js
inc
cmp
sub
push
and
or
mov
cmp
arpl
and
push
add
cli
push
ins
push
(bad)
rol
ja
and
push
jae
(bad)
shl
adc
push
xor
lock
push
adc
jmp
xor
clc
(bad)
repz
push
lods
inc
push
dec
sub
inc
daa
ja
mov
sbb
cli
out
popa
lock
adc
jne
(bad)
je
adc
lea
fidiv
cmp
adc
push
shr
fidiv
xchg
(bad)
ins
clc
popf
jo
pop
jmp
add
mov
add
mov
repnz
lock
cmp
cmps
stos
jecxz
sub
jns
cli
test
hlt
dec
imul
mov
shr
pop
test
or
mov
movhps
sub
inc
shr
adc
mov
jg
fdiv
pop
pop
or
mov
add
outs
sub
jp
add
test
push
aam
fidiv
ja
test
call
sbb
pop
inc
inc
add
or
mov
sub
push
sub
push
stos
repnz
sub
test
sub
xor
add
xor
adc
add
dec
sub
xchg
add
cmp
cmp
adc
jg
sar
cli
ins
repz
mov
les
repnz
in
(bad)
pop
mov
or
cwde
inc
pop
or
js
es
cmps
xor
sbb
movs
xor
push
or
es
aad
stos
test
mov
jbe
add
lea
add
mov
mov
pop
mov
stos
es
cmp
gs
lahf
mov
fs
std
stos
pop
sub
stos
div
gs
clc
test
outs
sub
sar
stos
div
lods
xchg
add
jp
inc
pop
jmp
stos
push
stos
(bad)
repnz
(bad)
iret
movs
icebp
push
stos
sti
push
jl
lds
ins
in
jo
jg
ins
sbb
clc
sti
lahf
adc
jbe
sti
lea
fdivr
pop
adc
lods
push
add
jns
rcr
ins
jmp
mov
cwde
add
sbb
push
push
push
or
es
aad
stos
test
mov
jbe
add
lea
add
mov
mov
pop
stc
mov
es
cmp
gs
lahf
mov
fs
std
stos
pop
test
div
gs
clc
fldpi
outs
sub
sar
stos
div
lods
xchg
add
jp
inc
pop
jmp
stos
push
stos
(bad)
repnz
(bad)
iret
movs
icebp
push
stos
sti
push
jl
lds
ins
in
jo
jg
ins
sbb
clc
sti
lahf
adc
jbe
sti
lea
fdivr
pop
adc
lods
push
add
jns
rcr
ins
jmp
mov
cwde
add
sbb
push
push
push
or
cs
fldcw
mov
pushf
push
mov
mov
mov
inc
outs
fwait
mov
push
gs
clc
mov
push
inc
popf
push
sub
in
sub
mov
push
and
pop
jne
test
or
push
into
rcr
inc
inc
adc
adc
outs
(bad)
test
in
fdivr
lods
dec
adc
repz
mov
ss
sbb
ins
inc
pusha
pop
cmc
call
mov
dec
fisttp
sbb
fisubr
cmp
mov
cmps
or
retf
mov
(bad)
inc
mov
lods
add
sub
add
fwait
bnd
add
es
leave
das
pop
popa
pop
vmread
cs
icebp
aad
ins
mov
sbb
aaa
test
dec
push
lods
cs
lods
push
(bad)
mov
shr
push
call
pop
sub
cmp
xor
mov
inc
push
jg
adc
lods
shl
jmp
es
mov
xchg
icebp
push
cmps
or
xchg
outs
sbb
adc
add
mov
stc
ficomp
rdpmc
mov
scas
xchg
add
xor
imul
sbb
sar
sar
pop
xchg
sbb
mov
cmps
sbb
push
inc
push
ja
(bad)
jp
pusha
bound
icebp
les
repnz
mov
ins
ins
stos
fiadd
or
push
stos
out
mov
pop
stos
sub
push
stos
or
add
fs
rcl
(bad)
jl
js
int3
lds
adc
in
(bad)
cmc
aad
(bad)
sbb
and
push
jns
add
sub
jns
inc
jmp
movs
and
add
or
push
mov
pusha
mov
mov
pop
adc
fiadd
cmc
adc
push
xor
addr16
shl
cmps
sub
gs
int
cld
and
in
fsubr
mov
cmp
xor
jg
mov
dec
and
fdivr
es
outs
mov
cmp
xor
xchg
push
mov
addr16
cmp
mov
lea
fisttp
out
mov
jmp
mov
push
and
lea
fst
inc
xchg
jecxz
and
sub
(bad)
or
add
loope
aaa
mov
cmp
jl
cmp
ja
nop
cmp
js
lods
pop
int
call
(bad)
mov
jmp
in
or
(bad)
js
cli
fisttp
sbb
mov
mov
(bad)
and
bound
fstp
xor
ins
add
mov
push
and
lock
push
in
adc
inc
jmp
sub
and
add
hlt
js
pop
mov
adc
add
cli
adc
inc
pop
push
adc
clc
mov
lods
pop
sub
adc
test
cld
inc
add
xchg
in
cmps
pop
pop
push
call
add
out
cli
out
in
movs
push
jp
lahf
push
sub
jns
pop
fsub
ins
adc
xor
inc
jmp
cli
push
add
mov
jecxz
adc
add
ja
pop
add
movs
stc
repnz
pop
add
xor
(bad)
and
popf
adc
push
(bad)
into
mov
in
pminsw
es
pop
or
ja
cs
push
test
lods
add
push
hlt
push
sub
fmul
or
aas
adc
ror
pop
sub
out
aas
sbb
adc
add
into
popa
or
pop
jmp
lds
add
outs
adc
mov
adc
mov
adc
or
mov
add
xchg
mov
add
add
xlat
add
sub
add
add
pop
cli
pushf
inc
clc
js
cs
add
mov
stos
fld
pop
pop
add
jo
call
stos
push
adc
shl
test
adc
clc
pop
rol
add
lods
jge
repnz
shl
fisubr
add
add
push
sbb
sbb
push
add
push
jne
add
cmc
or
add
repnz
adc
push
adc
xor
pushf
xor
lahf
outs
neg
sbb
call
push
jbe
sti
stos
sti
add
lods
dec
inc
fldcw
adc
add
js
push
adc
jbe
cli
jne
xor
push
das
pop
or
add
push
jne
add
(bad)
ja
pop
test
out
xchg
add
hlt
pop
sub
add
mov
push
and
popf
js
popf
mov
or
clc
xchg
adc
call
add
jp
pop
idiv
shr
adc
push
(bad)
rol
jae
add
(bad)
(bad)
add
add
add
test
movs
ret
mov
inc
pop
sbb
push
leave
rol
int
fsubrp
retf
test
or
pop
dec
std
or
bound
push
lea
pop
or
mov
sub
pop
and
pop
pushf
outs
mov
xchg
or
cs
ins
lods
pop
leave
fsubr
push
nop
retf
hlt
inc
das
test
in
sub
test
in
mov
shr
mov
shr
mov
cld
adc
into
in
mov
cld
adc
int3
in
pop
sbb
push
not
cmp
pop
out
hlt
or
add
dec
mov
xchg
pop
dec
ins
adc
jmp
mov
test
je
dec
sbb
push
not
cmp
add
stos
dec
in
pop
outs
sub
cli
sub
sbb
adc
int
call
call
mov
sahf
in
lock
add
popf
pop
pop
push
or
in
outs
sub
add
fwait
test
sar
sub
jbe
inc
jmp
cli
push
cmp
add
in
push
aaa
stos
out
sub
cmps
sbb
add
adc
dec
adc
jecxz
in
fdivr
ja
dec
ror
add
leave
sar
sbb
in
(bad)
cli
imul
pop
lods
inc
lock
jbe
add
test
in
pop
sub
push
aam
cmp
dec
adc
sub
fistp
jmp
sub
push
outs
test
mov
mov
hlt
popf
repnz
pop
das
das
cmp
jl
aad
gs
cmp
or
cli
ins
not
cmp
or
pop
push
adc
sbb
pop
mov
inc
add
sti
ret
cmp
jb
test
xchg
test
push
movs
adc
xor
cld
add
inc
push
inc
push
mov
push
outs
test
mov
mov
loope
(bad)
jmp
lods
sub
adc
adc
xor
fwait
lods
cdq
and
xchg
fcomi
mov
fisub
and
jmp
sub
lea
(bad)
add
mov
jb
call
ins
cld
popf
stos
push
adc
push
jnp
imul
adc
hlt
add
lods
adc
outs
sub
push
push
push
or
inc
add
outs
stos
out
sub
sub
add
sub
lahf
ja
popf
adc
(bad)
cmc
push
je
fs
test
mov
clc
gs
in
imul
out
in
stos
jmp
out
add
add
imul
push
lods
xor
ins
hlt
xchg
fistp
shl
arpl
stos
push
out
jge
adc
retf
js
sti
stos
arpl
das
cmp
scas
adc
mov
addr16
jo
pop
pop
pop
add
xchg
adc
xor
add
pop
mov
adc
sub
inc
mov
jbe
add
fwait
pushf
lods
sahf
push
enter
in
ficom
xchg
xchg
add
dec
sub
out
jge
adc
retf
js
sti
stos
arpl
sub
mov
jle
cmps
test
pop
test
cmps
and
mov
mov
cmp
test
push
push
adc
xchg
mov
test
es
icebp
pop
mov
int3
test
jmp
leave
lods
mov
ja
ret
mov
add
aam
jmp
mov
test
lods
push
or
push
stos
out
in
jmp
repnz
fisubr
sti
cmp
sub
aam
mov
add
jbe
fldcw
fisubr
in
dec
das
retf
rol
fldcw
pop
xor
sbb
test
add
retf
or
fiadd
jbe
push
in
cli
mov
inc
add
xlat
sti
jp
jbe
int3
adc
aam
or
es
mov
cmp
cmp
sbb
outs
sub
das
pop
ins
pause
stos
cli
sbb
stos
jmp
push
je
es
in
dec
inc
cmp
xchg
je
jmp
xchg
push
stos
loop
ror
jmp
jo
add
in
pop
movs
add
(bad)
pop
xchg
adc
stc
pop
dec
in
cs
add
push
jg
sbb
fstp
hlt
cmps
jl
pop
test
adc
jl
in
jmp
dec
adc
inc
add
sti
lahf
addr16
adc
shr
fidivr
add
add
gs
push
(bad)
shl
fidiv
lea
push
lods
sbb
aam
into
jbe
std
gs
push
jge
cld
cmps
add
in
push
lods
test
add
fwait
lea
sbb
or
add
push
std
dec
lea
bound
push
lea
jne
add
(bad)
ja
xchg
test
sub
rcr
fistp
add
pop
pop
(bad)
shl
adc
push
xor
iret
shl
adc
push
xor
lock
call
jge
js
ja
jle
cmp
push
dec
test
mov
mov
(bad)
sub
adc
or
ror
mov
push
jnp
fmul
(bad)
xor
or
pop
sbb
jbe
mov
(bad)
cli
jnp
cmp
add
add
jno
fimul
cmp
or
pop
push
adc
dec
or
mov
cmp
jns
or
sub
in
pop
outs
sub
dec
adc
ins
jecxz
jno
hlt
dec
outs
test
in
pop
sbb
rcl
or
clc
xor
ret
add
jge
leave
sub
ret
cmp
or
cld
cmps
test
leave
das
adc
sbb
jge
lods
dec
jbe
xor
shl
ja
pop
(bad)
jl
jb
sbb
es
mov
push
(bad)
jae
js
call
push
add
xchg
pop
jecxz
(bad)
mov
add
(bad)
stc
sub
or
ins
and
push
hlt
xor
pop
(bad)
push
lods
test
pop
prefetch
movs
push
xchg
or
jmp
fsubr
add
call
and
sbb
add
(bad)
add
adc
adc
sub
dec
or
mov
retf
dec
jne
xchg
leave
call
mov
jg
sub
push
sub
js
hlt
jl
mov
or
jg
sbb
test
xor
and
xchg
add
cs
add
hlt
enter
sti
push
cld
cmps
test
jo
popa
push
sub
adc
hlt
lods
es
fidivr
inc
mov
jle
(bad)
repnz
xadd
fimul
jle
mov
jb
psrlq
outs
inc
fist
xor
out
fisubr
inc
add
jge
push
aaa
lods
jle
dec
imul
and
add
and
and
scas
pop
mov
adc
dec
(bad)
jmp
lahf
add
adc
mov
or
mov
mov
(bad)
repz
xor
mov
or
(bad)
bnd
add
jbe
xor
jmp
xchg
or
call
xchg
pop
lods
sar
cmp
mov
sbb
xacquire
hlt
test
movs
aad
or
ret
adc
out
push
xor
das
sbb
and
in
outs
stos
or
mov
nop
repnz
jecxz
(bad)
jecxz
mov
cmp
push
(bad)
out
jb
in
or
dec
stc
dec
loopne
jmp
adc
aaa
add
sub
push
sbb
in
(bad)
ja
add
cmps
test
icebp
lea
cmps
mov
add
outs
cld
data16
pop
xor
fsubr
leave
and
push
(bad)
out
jb
in
or
xor
fcmovnb
add
jg
sbb
test
ins
mov
mov
lods
dec
xchg
or
push
sub
jg
repnz
popf
clc
cmp
jno
and
cli
add
add
or
or
add
adc
rcpps
inc
jmp
ds
test
stos
in
cmps
push
js
xor
xchg
out
add
adc
ins
cmc
(bad)
out
add
lods
(bad)
mov
scas
add
fmul
in
or
cs
adc
out
pop
adc
dec
jl
aam
add
test
cli
cli
ins
push
call
adc
repz
sbb
mov
or
cmps
or
mov
sbb
push
out
jmp
fadd
pop
jmp
shr
fimul
mov
imul
xlat
inc
jl
adc
push
push
fisubr
mov
xor
or
dec
or
in
(bad)
mov
fwait
es
in
xor
outs
clc
data16
pop
cmp
inc
xchg
mov
in
pop
mov
adc
pop
enter
in
fisubr
push
add
sbb
ja
pop
lahf
or
push
xor
add
and
or
add
cmp
stc
pop
or
mov
jbe
sti
jle
(bad)
stc
jbe
sbb
cmps
fcom
fidivr
shl
or
pop
es
pop
cli
outs
je
jmp
dec
pop
xchg
leave
mov
imul
xlat
stos
jl
adc
in
leave
das
push
popf
test
jl
adc
ins
or
adc
repnz
adc
pop
and
in
pop
mov
scas
pop
mov
adc
dec
(bad)
jmp
test
fmul
mov
adc
pop
mov
cli
hlt
aam
cs
cmc
rol
js
push
add
ja
jle
cmps
pop
or
fimul
(bad)
into
cs
jno
dec
in
pop
mov
rcr
mov
movlps
fidivr
push
cmp
jmp
inc
jl
adc
out
js
adc
ficomp
outs
sub
or
sub
add
aam
scas
or
sbb
repnz
(bad)
clc
and
lock
adc
das
cmp
js
lock
xchg
adc
or
leave
test
sub
fisubr
jecxz
pop
pop
mov
clc
gs
(bad)
shr
inc
fidivr
jecxz
mov
jo
jb
test
sub
ficom
fisubr
add
mov
fwait
push
jl
push
jg
sub
push
xchg
mov
mov
or
and
in
in
ret
push
push
pop
adc
adc
mov
jnp
xchg
jo
(bad)
push
sub
in
jmp
clc
ins
sti
xchg
stos
shr
outs
sub
adc
frstpm(287
or
dec
cdq
pop
movlps
fidivr
xchg
add
or
and
mov
call
pop
adc
jmp
ins
add
pop
lock
addr16
xorps
iret
call
xor
sar
push
inc
push
or
out
adc
add
add
or
xor
out
push
jl
mov
add
jnp
fldcw
fisubr
dec
lea
jmp
ins
(bad)
jnp
pop
mov
cli
ins
sti
xchg
icebp
add
cli
push
daa
or
std
nop
jo
jb
mov
test
lods
int3
mov
add
bnd
adc
shl
adc
sbb
xlat
lahf
jl
adc
sub
jg
aaa
pop
xor
sub
and
adc
mov
or
jne
(bad)
icebp
push
cmp
mov
das
aas
cli
fld
cld
lods
push
pmulhw
add
cmp
inc
xchg
mov
in
pop
mov
adc
pop
enter
in
fisubr
push
add
sbb
ja
pop
lahf
or
push
xor
add
and
or
add
cmp
stc
pop
or
mov
jbe
sti
jle
(bad)
stc
jbe
sbb
cmps
fcom
fidivr
shl
or
pop
es
pop
cli
outs
je
jmp
dec
pop
xchg
mov
fs
in
xchg
hlt
jo
(bad)
call
sub
rol
int
sub
or
adc
push
jbe
sti
add
sub
and
pusha
sub
jbe
jmp
in
fisubr
int
(bad)
out
cld
sub
push
push
hlt
push
int
xchg
or
add
hlt
in
mov
arpl
iret
das
sbb
and
in
pop
mov
stos
pop
mov
add
xor
sub
js
hlt
ds
cmp
or
fldcw
fisubr
or
cs
cmc
icebp
movs
retf
push
mov
btr
add
es
mov
add
sar
and
adc
fninit
xor
stos
sti
adc
test
jg
or
sub
mov
jg
outs
imul
jb
or
call
pop
adc
jmp
ins
stc
(bad)
test
push
cmp
call
fisubr
stos
addr16
xor
pusha
and
js
cli
lock
shl
xchg
std
push
cmp
icebp
lea
(bad)
sti
mov
lea
cld
push
mov
jl
jg
add
(bad)
je
cmps
mov
inc
rol
jnp
jecxz
lods
dec
mov
sub
adc
push
test
ins
push
mov
movs
repz
in
mov
jle
fidiv
cs
rol
sbb
jge
lods
dec
aaa
outs
xchg
cvtpi2ps
arpl
or
adc
pop
and
in
pop
mov
scas
pop
mov
adc
dec
(bad)
jmp
lahf
add
adc
mov
or
mov
mov
(bad)
repz
xor
mov
or
(bad)
bnd
add
jbe
xor
jmp
xchg
or
call
xchg
pop
lods
sar
cmp
mov
sbb
xacquire
hlt
test
movs
aad
or
mov
lods
sub
gs
(bad)
push
add
push
popa
outs
sub
(bad)
test
add
add
es
in
xor
outs
clc
data16
pop
cmp
inc
xchg
mov
in
pop
mov
adc
or
push
add
push
push
add
sbb
ja
jg
or
mov
cs
and
cli
ins
mov
hlt
or
stc
push
mov
and
add
dec
adc
mov
or
sub
cli
cmps
push
mov
test
test
push
inc
mov
cmps
or
jmp
dec
push
fsubrp
fdivr
mov
mov
minps
fisub
or
adc
test
ins
shr
mov
pop
ja
in
shl
repnz
mov
or
or
sbb
push
es
(bad)
ins
mov
adc
jmp
or
pop
push
adc
jle
pop
mov
inc
add
(bad)
cmc
test
sti
pop
stos
push
cli
gs
pop
mov
pushf
push
lods
call
clc
jne
mov
cmps
xlat
mov
mov
movs
sahf
or
pop
mov
xchg
call
lahf
mov
adc
clc
in
push
inc
popf
mov
adc
fst
into
or
(bad)
inc
xor
(bad)
fiadd
jbe
neg
dec
aas
mov
push
es
aad
dec
test
add
push
and
adc
sbb
inc
stos
cli
or
retf
test
in
fild
xchg
leave
push
js
or
test
inc
add
out
ret
adc
dec
jge
jo
jb
push
lea
adc
outs
cmps
test
add
test
cmps
test
add
mov
add
mov
inc
shr
(bad)
xor
ficomp
int
sub
jnp
mov
cdq
jbe
mov
lahf
test
mov
fld
mov
fld
ins
sbb
push
mov
jp
jp
add
ja
out
adc
pop
mov
xchg
leave
push
js
or
test
inc
adc
pushf
add
push
inc
les
sub
mov
mov
fsubr
fisubr
jbe
push
out
ret
xchg
jg
jmp
aaa
cs
in
popf
sbb
add
push
out
cwde
dec
jmp
imul
xchg
leave
push
js
or
test
inc
adc
movs
add
push
lods
mov
(bad)
ror
add
jo
mov
pop
jp
jl
in
sbb
xchg
cmp
aad
cli
sbb
inc
inc
and
test
jecxz
xor
push
cmp
add
push
out
cwde
dec
jmp
clc
push
inc
xlat
sbb
jne
inc
mov
ins
je
inc
outs
lods
stc
arpl
dec
dec
add
ss
repnz
mov
daa
ins
or
dec
add
es
fmul
cdq
dec
adc
add
add
add
dec
mov
push
xchg
mov
nop
add
xchg
add
cmps
push
out
cwde
dec
jmp
sti
aad
rcl
ret
rcl
pop
sbb
add
mov
pop
shl
ds
test
inc
aam
clc
fcom
dec
dec
push
jl
xchg
mov
xor
xor
inc
movs
xor
hlt
pop
sub
adc
movs
ret
lods
mov
and
test
fild
xchg
add
mov
test
fidiv
loope
test
xor
dec
es
aad
mov
inc
push
jl
mov
push
jmp
ins
retf
scas
rol
hlt
outs
mov
sub
popf
out
outs
sub
shl
in
lods
dec
sahf
out
outs
sub
dec
and
das
adc
add
jno
mov
xchg
push
inc
add
lahf
mov
jl
push
lods
out
add
lahf
cvtps2pd
and
shr
push
lods
sahf
mov
es
ret
pushf
mov
lock
mov
iret
lock
addr16
push
mov
arpl
hlt
push
push
sub
add
cmps
shr
inc
xchg
jl
adc
stc
lea
into
mov
fsubr
jle
cli
sub
sub
ins
xor
repz
sub
sbb
popf
push
aad
call
jmp
lea
test
test
outs
mov
cwde
mov
sub
adc
adc
fnstenv
mov
mov
lea
xchg
ret
dec
add
adc
xchg
test
xor
or
push
stos
adc
stc
cmp
leave
dec
xor
out
sub
(bad)
push
or
mov
outs
sub
repnz
jno
add
inc
in
fimul
(bad)
out
fisubr
inc
inc
test
ja
inc
jmp
gs
jmp
into
in
fiadd
imul
add
test
jl
(bad)
(bad)
sub
inc
jmp
adc
adc
jne
push
cli
(bad)
cmc
add
call
inc
jl
jbe
xor
sub
sub
adc
gs
test
enter
in
fisubr
inc
pushf
cs
push
fldcw
mov
mov
hlt
data16
xor
or
push
stos
cmp
ins
daa
adc
fxtract
dec
outs
stos
enterw
sbb
outs
dec
and
sub
mov
dec
or
js
jge
mov
cmps
dec
xchg
cmp
dec
mov
xchg
dec
pop
add
add
push
rol
test
cmp
xchg
xchg
push
stos
and
js
jb
mov
stc
in
imul
shr
push
add
outs
sub
xchg
pop
stos
lea
push
xchg
(bad)
add
in
fimul
push
das
or
cmps
sbb
lahf
sbb
ja
add
or
loope
mov
and
push
cmc
jp
or
fst
push
in
adc
clc
xlat
xchg
leave
jp
jnp
imul
sbb
and
xchg
sbb
inc
adc
sub
sub
jne
xchg
mov
in
pop
test
add
outs
rol
test
loopne
sbb
adc
icebp
ja
inc
fimul
iret
add
sbb
ror
inc
jmp
adc
xor
push
fisubr
add
xchg
mov
fmul
sub
sub
fimul
push
out
push
scas
xor
push
or
xchg
ret
xchg
mov
in
xchg
dec
sub
pop
push
jg
ja
shl
xor
push
add
add
mov
or
jmp
call
or
adc
loop
or
inc
fisubr
mov
jmp
in
mov
stos
outs
jo
adc
rcr
fdiv
lods
scas
imul
xor
push
sahf
sub
add
arpl
inc
add
xor
cld
ret
dec
cmp
ins
ret
mov
(bad)
cmp
add
mov
xchg
rcl
sub
rcr
shl
xchg
mov
iret
shl
push
add
cli
push
add
jge
test
xlat
xor
lahf
push
push
jp
hlt
jge
mov
push
push
pushf
add
inc
shr
outs
dec
retf
xchg
pop
add
jmp
sbb
shr
lea
push
sub
lea
push
sub
lea
push
sub
lea
shr
lea
add
lea
outs
sub
pop
cmp
fisub
shl
imul
push
leave
push
jp
cli
jge
jp
push
jp
in
clc
jbe
sub
jp
inc
fsubr
icebp
rcr
add
mov
push
bound
lock
lahf
jmp
shr
inc
push
jg
adc
(bad)
sbb
adc
mov
test
cli
jbe
sub
jns
(bad)
call
jp
xchg
div
in
icebp
ja
sub
in
fisubr
jbe
sub
jp
xchg
push
mov
test
jne
xchg
add
jb
cmp
xor
jmp
cmp
sub
mov
sub
jns
popf
pop
pop
push
clc
aam
add
or
ins
in
stos
(bad)
imul
inc
inc
xchg
in
aam
or
jmp
popf
adc
pop
call
sub
adc
cmp
push
sub
in
sbb
xor
call
imul
imul
call
jmp
clc
ins
jecxz
xchg
jle
(bad)
jecxz
jmp
pop
stos
dec
lea
or
or
dec
and
sahf
test
test
inc
aaa
jnp
adc
daa
jo
(bad)
mov
mov
in
sub
adc
lea
cli
repz
stos
adc
fldlg2
icebp
nop
cwde
mov
in
ficomp
fs
clc
ins
aas
mov
lea
xchg
out
mov
lea
aas
push
ins
leave
mov
dec
lahf
xor
retf
xor
or
pop
mov
cli
ins
in
(bad)
idiv
add
pop
jp
(bad)
adc
scas
xor
mov
add
adc
xor
repnz
test
push
sub
stos
and
test
sub
pop
fsubr
adc
inc
(bad)
fisubr
mov
or
jne
mov
(bad)
movups
adc
inc
rol
pop
inc
add
push
jbe
sar
jp
ret
jp
lea
repz
adc
sbb
mov
add
xchg
cmp
jp
dec
cmp
enter
jl
enter
in
fisubr
dec
lods
cs
sub
les
sub
adc
push
mov
or
push
stos
outs
jbe
mov
outs
mov
add
mov
and
sub
retf
sub
outs
mov
add
mov
cmps
dec
xchg
bound
dec
les
test
push
inc
mov
dec
jmp
jg
xchg
jmp
add
sub
push
lods
test
and
aam
stc
in
xor
add
aam
push
outs
sbb
xor
or
dec
add
mov
enter
in
jl
(bad)
jle
cs
and
ret
adc
jo
test
ins
xor
xchg
pop
mov
or
popf
stc
sub
adc
add
in
sbb
int
xor
push
mov
jbe
ror
dec
stc
rol
out
sub
xchg
push
lea
sti
push
inc
pop
jo
jbe
es
add
not
jo
std
push
es
sti
fcmove
inc
adc
push
xchg
or
jp
lea
popf
sbb
imul
push
gs
in
cmps
add
adc
push
add
sub
test
icebp
imul
or
pop
shl
lea
adc
push
outs
sbb
add
std
inc
loope
sub
add
call
aas
adc
test
outs
mov
outs
sub
push
cmp
mov
call
es
dec
cmp
xor
adc
shr
push
pop
lods
mov
xor
imul
mov
sub
adc
add
mov
fsubr
cmp
ret
jl
cli
js
mov
jbe
or
out
fisubr
or
not
add
inc
hlt
cs
stc
push
lods
or
push
add
cld
lea
add
push
cmp
inc
sti
push
pop
das
pop
aam
lods
in
fisubr
xchg
add
add
add
das
mov
lods
adc
add
cmp
gs
mov
stos
cli
jl
imul
mov
test
jl
mov
ret
lods
ficom
add
test
sub
das
and
stos
xor
ins
ret
adc
in
icebp
or
ret
lods
lock
(bad)
das
cmp
cmp
pop
mov
js
add
jg
dec
loope
sbb
lea
outs
sub
push
cmps
(bad)
ja
mov
in
pop
xchg
ret
imul
das
adc
adc
je
jo
das
sub
sbb
imul
xor
std
push
pop
sub
rcl
jecxz
sbb
gs
pavgw
inc
xor
xchg
jmp
add
outs
mov
cld
mov
test
xchg
outs
sbb
inc
xchg
sar
jb
stc
push
stc
sar
push
xor
sti
mov
or
jne
sbb
pop
shl
scas
or
(bad)
jmp
clc
adc
xchg
std
(bad)
and
les
mov
cli
cmp
imul
cli
ins
repz
or
add
outs
test
in
(bad)
cmp
fcomp
cld
adc
stos
data16
sub
je
jp
lea
repz
gs
in
mov
stos
or
sub
push
test
cmp
das
cmp
jp
lea
lods
push
nop
test
pop
stos
cli
mov
shr
xor
add
sbb
sbb
lea
(bad)
retf
mov
push
or
push
clc
gs
ins
or
or
mul
leave
das
mov
fnsave
push
or
(bad)
and
jo
cvtpi2ps
push
adc
stos
loop
mov
mov
lea
push
test
imul
xor
mov
lea
movs
jmp
lock
ret
add
lods
repnz
inc
push
jmp
jmp
adc
mov
add
or
out
cmps
mov
in
call
add
adc
mov
in
fldcw
fisubr
or
or
(bad)
cli
ins
out
mov
cs
or
xor
mov
add
or
loop
or
add
rol
lea
xchg
or
outs
in
call
xor
lea
sti
data16
or
or
test
hlt
or
cmps
das
mov
enter
push
mov
popf
or
xchg
push
sbb
lds
jecxz
lock
psubusw
call
sub
(bad)
jmp
clc
sub
jmp
adc
lea
cmc
xor
lea
or
add
ror
fwait
(bad)
imul
sub
jne
es
mov
aad
add
jnp
inc
lea
out
aas
mov
sar
je
push
adc
adc
cmp
or
clc
ins
jmp
adc
lock
jmp
adc
or
bnd
adc
jge
sbb
adc
add
outs
les
aam
mov
dec
jne
fisub
jmp
movs
jmp
add
div
aad
repz
test
push
xor
pusha
mov
pop
clc
lds
add
(bad)
mov
(bad)
js
iret
inc
fiadd
clc
sbb
jl
push
adc
imul
add
sub
repnz
xor
cmps
or
retf
xchg
push
cld
add
out
jns
scas
clc
les
clc
les
jge
jo
ja
les
jge
jo
pop
clc
les
jge
jo
dec
test
mov
retf
push
cs
inc
fidiv
xor
sub
fidiv
or
inc
int
xchg
aad
(bad)
outs
sub
adc
xchg
test
repz
test
cs
test
sub
movs
test
mov
and
shl
leave
das
clc
lds
sub
fidiv
or
fdivr
jp
stc
(bad)
lods
jl
xlat
outs
adc
out
mov
or
sar
sbb
xchg
test
sub
fisubr
or
rol
jnp
mov
adc
mov
fimul
aad
call
int
outs
rol
and
xchg
call
in
fidiv
cdq
xchg
call
in
fidiv
lea
outs
stos
adc
xor
xchg
test
push
or
es
fldcw
test
js
pop
cmp
or
sar
cdq
sbb
out
jns
repnz
mov
out
jns
repnz
xchg
out
jns
repnz
test
out
jns
repnz
or
into
jns
lock
adc
hlt
dec
cmp
in
ficom
inc
adc
shr
mov
sbb
sar
inc
sub
shr
repz
cmp
test
imul
pop
cmp
adc
xor
pop
test
in
(bad)
jne
int
test
test
in
or
test
sub
(bad)
cli
ins
mov
xor
or
dec
in
nop
cwde
push
shr
(bad)
loop
push
add
add
mov
sub
add
movs
add
and
les
jge
xchg
jmp
jo
ja
les
clc
les
clc
les
clc
les
jge
outs
adc
mov
cmp
push
xor
mov
vpmaxub
ja
(bad)
shl
fisubr
(bad)
cmp
cmp
test
div
pop
cmp
test
imul
pop
cmp
adc
push
fidiv
or
sub
fisubr
sub
push
aaa
fisubr
or
rcr
fisubr
mov
outs
mov
adc
push
ror
jg
imul
pop
hlt
sub
fnstenv
or
rcl
push
xchg
cdq
sbb
test
sub
mov
in
fisubr
ja
es
xor
adc
and
jns
xacquire
sub
shr
repnz
mov
in
mov
add
int
outs
jbe
xchg
add
lods
fisubr
(bad)
cmp
xor
div
pop
xor
imul
pop
xor
inc
lods
pop
outs
sub
arpl
sub
push
xor
outs
sub
fisubr
test
stos
push
xor
outs
sub
sub
mov
xlat
scas
sbb
pop
inc
fld
mov
fiadd
add
std
clc
push
adc
stc
push
mov
mov
sub
sbb
call
jbe
xchg
out
fdivr
sbb
adc
ret
shr
mov
int
cli
adc
jmp
out
inc
outs
sub
fdiv
hlt
adc
js
push
jmp
cmp
ror
fisubr
pushf
aas
test
cs
adc
adc
outs
adc
adc
clc
sub
out
add
imul
test
push
sub
push
in
fisubr
in
adc
push
in
fisubr
in
sbb
push
in
fisubr
or
cs
xchg
jae
inc
adc
adc
fnstenv
ja
mov
in
(bad)
pop
popa
pop
lock
adc
lods
dec
add
int
add
mov
sbb
adc
(bad)
fst
ja
push
sti
add
add
mov
add
cdq
add
push
adc
ins
xchg
sub
cs
add
retf
out
sub
fs
iret
xchg
fisubr
inc
ins
add
adc
push
jle
push
jg
outs
pop
or
add
add
mov
sub
(bad)
lea
add
pop
add
pop
add
movs
xor
jo
pop
push
xor
std
repnz
clc
add
es
add
push
fiadd
push
add
add
and
jge
adc
retf
js
pop
stos
bound
push
or
es
in
stos
test
mov
jbe
add
ror
inc
in
jae
in
(bad)
cmp
test
jne
adc
mov
fisubr
xchg
lea
js
hlt
jge
mov
sub
mov
out
push
ror
xor
mov
push
test
or
es
adc
cli
in
in
mov
pop
mov
movs
std
fscale
sub
or
clc
cmp
lods
pop
mov
dec
add
mov
gs
adc
mov
cmp
loopne
jl
cmp
add
daa
mov
jg
push
fnstsw
scas
push
mov
or
lods
push
call
(bad)
mov
fld
clc
bound
add
add
mov
repnz
adc
aam
push
push
jmp
call
or
jmp
hlt
lods
lahf
es
cmc
shl
int3
jbe
ja
inc
es
ficom
cli
mov
or
shr
fisubr
jle
test
lods
push
adc
and
lock
and
lods
dec
pop
mov
or
mov
push
mov
out
push
add
add
dec
sbb
and
lock
mov
or
loopne
add
or
adc
ins
clc
std
add
lods
pop
ffree
jg
ja
shr
outs
movs
pop
or
sar
add
outs
sub
cmps
cli
cs
(bad)
mov
jb
(bad)
ficom
pop
in
icebp
mov
xor
push
int
and
mov
js
add
inc
hlt
cmps
adc
retf
out
retf
add
test
lahf
outs
jmp
add
test
add
push
fstp
xchg
(bad)
in
scas
cli
push
ins
adc
jne
add
les
hlt
ins
mov
xor
fimul
or
inc
lods
sub
addr16
ins
mov
xor
fimul
or
lods
sub
addr16
ins
mov
xor
fimul
or
test
hlt
ins
mov
xor
fimul
or
movs
lods
sub
lea
lock
mov
cdq
push
test
pop
jmp
add
add
lahf
mov
push
lods
push
in
add
pop
mov
add
sbb
stos
fidiv
pop
or
xor
add
arpl
fwait
push
add
add
push
pusha
les
scas
push
addr16
ins
xchg
and
leave
pop
mov
xchg
fistp
rol
call
cmps
xor
and
sahf
stos
mov
push
stos
ficomp
add
dec
pop
and
jmp
stos
ficomp
das
pop
push
lods
sub
dec
adc
add
in
jmp
pop
sti
es
stc
imul
leave
std
pop
enter
out
fisubr
aam
inc
pusha
ja
outs
adc
add
cmps
jo
call
push
cmp
xchg
push
test
push
add
(bad)
cmps
pushf
push
lods
inc
jmp
les
pop
stos
add
sub
daa
fs
pop
test
sbb
add
retf
sbb
test
jp
pusha
pop
xchg
xchg
jnp
leave
pop
test
fidiv
les
hlt
sahf
jb
fiadd
xor
add
aas
(bad)
in
repnz
add
add
popf
js
mov
shl
add
push
add
adc
inc
add
push
scas
les
mov
les
jae
loop
add
cmps
sbb
push
aad
push
adc
test
jmp
outs
lods
inc
add
stos
push
pop
rol
aas
add
mov
adc
jp
clc
imul
push
test
push
push
lea
push
jl
imul
in
push
lods
(bad)
push
fldcw
inc
lods
sub
jg
add
jo
add
adc
stos
fidivr
jmp
lea
jmp
outs
lods
inc
or
or
adc
lahf
add
das
cmp
sti
es
stos
loop
pop
mov
inc
adc
push
jmp
gs
(bad)
mov
adc
mov
add
mov
pop
push
add
(bad)
jae
push
add
out
out
inc
adc
xchg
xchg
mov
add
add
cdq
add
mov
clc
mov
push
call
add
repnz
std
add
pusha
mov
add
pusha
mov
add
pusha
mov
xchg
in
(bad)
in
mov
adc
dec
adc
enter
push
mov
xchg
pop
add
pop
gs
add
push
jne
gs
add
push
jne
in
push
add
add
mov
push
push
push
call
push
clc
push
push
push
call
push
clc
push
push
push
call
add
add
test
sub
daa
inc
fild
add
add
daa
inc
fild
add
add
xchg
adc
es
test
push
inc
adc
mov
inc
clc
pop
add
sub
sbb
push
or
sbb
xor
or
ins
rcr
pop
add
shr
rol
pop
jge
add
inc
out
icebp
jno
ret
popa
arpl
out
xchg
test
je
xor
icebp
lods
lahf
push
add
gs
(bad)
shl
ja
mov
add
mov
addr16
sahf
push
lods
cs
push
cwde
pushf
push
test
nop
cwde
inc
shr
ficom
adc
jl
push
lods
xor
rol
add
fnop
in
(bad)
mov
enter
mov
ins
aam
movs
arpl
int
xchg
ret
movs
ret
mov
adc
add
mov
jp
push
sbb
stos
test
and
add
lahf
scas
fidiv
or
add
mov
jp
push
fsubr
mov
push
push
mov
add
lods
xor
test
adc
lea
push
add
push
jmp
add
jl
add
retf
sbb
sub
jns
cli
out
pop
(bad)
int
out
mov
(bad)
jb
ja
jmp
mov
jbe
(bad)
ins
fcomp
add
shl
pop
sub
(bad)
rol
push
push
inc
adc
adc
jmp
icebp
add
icebp
fild
pop
fs
fstp
pushf
mov
xchg
or
pop
jmp
mov
jbe
(bad)
ins
fcomp
add
sar
movs
jmp
lea
pop
or
xor
cmc
pop
xor
push
(bad)
out
clc
(bad)
inc
aam
int3
mov
push
mov
adc
lea
sar
movs
das
shr
or
es
fstp
and
ficomp
ins
rcl
(bad)
ins
loopne
repnz
add
add
(bad)
fld
imul
in
cs
add
test
jbe
or
pop
add
push
daa
adc
add
cmps
add
cdq
clc
mov
push
dec
push
popf
iret
xor
jl
jbe
pop
mov
and
adc
and
cmps
adc
shr
adc
jge
push
lods
push
push
mov
dec
or
fucom
out
lods
sub
ss
dec
lock
or
push
stos
push
cli
fisubr
pushf
push
or
mov
jmp
js
pop
push
dec
sbb
(bad)
fnsave
add
rep
test
push
or
pop
stos
out
push
adc
popf
jo
(bad)
jns
add
add
add
add
popf
add
push
adc
jb
jae
mov
lods
sbb
ins
rcl
add
call
add
push
lahf
call
push
lods
and
push
enter
sub
mov
dec
bound
push
lea
cmp
gs
mov
lahf
sbb
and
pop
fild
pushf
pop
fistp
cs
fnsave
jg
adc
pop
stos
inc
adc
jbe
pop
mov
adc
lea
push
lods
out
push
mov
lahf
sti
push
cmp
pop
mov
sub
xchg
ja
or
enter
push
ss
bnd
xchg
mov
and
or
adc
xchg
dec
xor
in
fld
jbe
inc
dec
lds
adc
add
mov
or
jnp
jo
mov
add
test
pop
mov
cmp
push
mov
jbe
clc
pop
(bad)
in
test
jo
mov
mov
mov
js
clc
sub
xor
add
cdq
add
add
adc
repnz
inc
loopne
(bad)
daa
in
push
xor
js
jae
les
scas
push
stos
mov
jl
ins
and
add
lahf
push
jmp
add
add
scas
and
fdivr
addr16
mov
jo
imul
popa
cdq
pop
movs
(bad)
clc
pop
mov
push
add
call
jge
popf
add
test
xchg
xchg
push
test
xor
pushf
call
leave
and
(bad)
jmp
pop
push
adc
mov
test
xlat
xor
adc
xchg
add
jmp
pop
clc
fs
inc
mov
push
add
into
out
fisubr
xchg
test
(bad)
in
push
mov
mov
adc
push
add
icebp
les
hlt
sahf
or
outs
push
pop
test
sub
out
jb
mov
adc
fstp
lods
sub
xor
in
or
outs
push
pop
test
xor
jp
repnz
out
jb
mov
adc
mov
add
inc
mov
outs
clc
xchg
mov
fidivr
pcmpeqw
fisubr
(bad)
mov
mov
dec
adc
sbb
hlt
push
jb
outs
xor
xchg
loope
fidivr
pcmpeqw
fidiv
fnstenv
std
and
fisttp
xor
in
jmp
in
leave
sub
dec
xor
in
aad
stos
adc
loop
hlt
push
loop
hlt
push
mov
lea
fld
mov
mov
add
sbb
and
inc
cmp
fdivr
dec
jmp
sbb
jmp
lods
push
lods
sub
jns
stos
fisub
mov
add
mov
jmp
test
xchg
add
les
outs
(bad)
fldcw
add
add
inc
out
movs
stos
icebp
les
xchg
add
mov
call
or
out
js
push
jne
add
xchg
aam
(bad)
in
or
setp
mov
and
push
js
outs
cmp
push
fs
fstp
pushf
mov
arpl
mov
fldcw
fldcw
in
xor
lods
sub
lods
jl
pop
pop
dec
ja
es
(bad)
pop
stos
outs
add
call
jo
push
add
jo
push
add
add
or
xor
test
xor
lock
mov
and
enter
int3
adc
shl
pop
pop
ins
or
(bad)
jmp
fstp
sub
pop
or
movs
loopne
(bad)
jmp
xchg
fild
jne
mov
sub
pop
inc
push
adc
rcr
stos
adc
add
add
jp
add
cmps
push
pop
lods
inc
add
jp
sahf
xchg
add
or
in
jmp
pop
(bad)
xchg
push
test
add
in
jno
mov
push
test
adc
add
cmps
add
imul
add
popf
loopne
(bad)
jmp
pop
(bad)
xchg
push
test
add
add
sbb
add
cmps
push
fs
push
pop
test
and
in
movs
movs
arpl
aad
cwde
sbb
mov
adc
jl
add
sbb
adc
xor
inc
jl
add
sbb
adc
sbb
and
out
(bad)
jbe
mov
mov
fild
adc
sbb
rcr
pop
test
call
in
fcmovbe
pop
push
pop
test
inc
add
add
cli
push
push
gs
fwait
ror
mov
push
pop
jl
add
push
and
push
test
add
fldcw
sub
add
jmp
iret
jb
sub
out
jae
inc
adc
adc
popf
pop
pop
push
lea
stos
popf
pop
pop
add
jmp
in
add
pop
into
fiadd
add
push
test
pusha
bound
xor
pop
push
adc
jmp
outs
shr
outs
sub
test
mov
pop
push
mov
outs
call
in
fld
push
stos
fidiv
mov
fidivr
aam
mov
test
add
pop
or
mov
movs
fisubr
fdiv
jae
pop
pop
popa
inc
out
movs
stos
icebp
les
hlt
fcomp
cs
jo
addr16
dec
clc
ins
imul
ins
cld
pushf
push
jg
enter
in
fisubr
add
shl
pop
out
lock
shr
(bad)
not
cmp
adc
shl
xor
stc
pop
add
ins
dec
es
adc
mov
cli
pop
out
adc
mov
push
lea
arpl
jo
(bad)
repnz
push
push
aaa
mov
or
iret
inc
add
sti
or
aaa
mov
cld
xor
hlt
dec
scas
sub
mov
add
ss
xchg
ins
or
pop
sub
cmp
add
sti
or
aaa
dec
xor
add
add
mov
cli
ins
sti
adc
popa
pop
lock
dec
pop
test
sub
lods
bound
call
daa
xor
shl
lahf
ja
test
fwait
js
cli
cli
add
test
add
cmps
test
pop
sub
add
std
shr
fidivr
cmps
mov
push
test
mov
jp
mov
or
in
(bad)
jmp
outs
add
jo
adc
out
xor
das
mov
pop
das
jbe
lea
sbb
(bad)
ja
mov
das
mov
stos
push
pop
cmps
pop
out
js
shr
or
mov
jbe
fadd
jae
dec
adc
add
adc
shr
add
test
neg
aad
push
adc
adc
jp
xchg
inc
xor
add
or
adc
iret
inc
adc
add
cmp
xor
and
out
cmp
dec
adc
adc
(bad)
and
xor
(bad)
rol
ja
rcr
popf
js
mov
mov
fidivr
or
in
add
test
xchg
xchg
mov
rcr
push
test
sub
aam
scas
jb
add
daa
std
loopne
ficomp
mov
pop
das
jbe
xchg
test
sub
in
fld
shr
cmp
dec
adc
setp
test
in
cmp
or
mov
jl
push
xchg
adc
add
lahf
out
in
add
add
jo
add
int3
loopne
outs
movs
ret
mov
add
add
push
adc
inc
repz
xlat
cmp
dec
adc
int
shl
push
rcl
jge
add
sbb
scas
cli
push
pop
outs
stos
mov
fld
ins
rcl
push
mov
ins
adc
add
ja
inc
inc
ins
rcr
push
test
cli
jmp
fild
add
das
stos
add
arpl
(bad)
lods
rcr
inc
lock
test
ja
dec
add
xchg
add
sbb
iret
jo
imul
stos
hlt
ins
jmp
rcl
sbb
jbe
inc
jmp
push
add
in
lods
sub
pop
clc
xchg
sub
jl
js
sahf
pop
add
popf
loopne
fiadd
jne
xchg
jmp
or
sub
add
pop
mov
sbb
push
adc
js
cmps
pusha
retf
push
adc
push
pop
(bad)
stc
push
stos
push
lahf
xchg
mov
lahf
outs
pop
add
leave
loopne
(bad)
jmp
repnz
imul
xchg
jmp
jb
sti
pop
pop
inc
sti
call
sub
jns
cli
imul
lea
push
lea
push
lods
push
push
push
jge
sbb
test
sub
adc
add
(bad)
pop
or
out
or
pop
push
adc
xchg
add
mov
push
in
cmps
dec
sub
xchg
test
sub
(bad)
rcr
add
or
pop
stos
add
jge
jb
xor
add
push
aam
aam
out
add
adc
adc
add
xlat
add
mov
imul
popf
xchg
test
jbe
stos
pop
and
add
push
std
pop
sub
add
add
lods
mov
aad
lods
sub
jmp
adc
add
push
stos
repnz
gs
xchg
stos
add
mov
and
icebp
in
or
es
icebp
lods
cli
cli
add
mov
es
cs
sbb
cli
out
adc
clc
mov
add
dec
sub
in
xchg
lahf
popf
repnz
add
es
test
fild
push
jne
outs
test
add
xchg
jmp
inc
push
lods
not
rol
fisub
add
jnp
add
add
test
lock
clc
add
jmp
loope
add
cs
in
scas
lahf
adc
inc
jmp
pop
popa
retf
out
movs
add
adc
xor
pop
mov
mov
xor
jns
(bad)
rcl
adc
inc
add
jmp
call
sar
hlt
jb
jp
or
lea
cmp
es
mov
addr16
jl
lea
push
xor
aad
fwait
rol
jp
push
xor
rol
das
cmp
cwde
sbb
mov
ja
fld
mov
sbb
xor
leave
mov
jge
or
call
dec
add
mov
in
push
mov
imul
jge
sbb
mov
jle
nop
leave
jmp
adc
pop
or
sub
pop
mov
pop
or
arpl
jo
xor
cs
jmp
sbb
(bad)
pusha
add
add
mov
pshufw
nop
jmp
sbb
(bad)
pusha
adc
sbb
mov
lods
sbb
les
ins
mov
sbb
iret
jo
imul
mov
add
mov
cmp
push
out
sub
arpl
mov
shl
int
call
jb
jae
nop
retf
cld
and
add
test
icebp
and
mov
add
ret
mov
icebp
les
arpl
jns
repnz
imul
xchg
jmp
mov
fs
call
cdq
(bad)
in
pop
das
jbe
add
out
cmp
inc
adc
prefetcht2
pop
push
adc
ja
js
imul
xchg
jmp
pop
push
dec
add
sub
stos
push
jne
add
ret
mov
add
pop
adc
sub
ficomp
sub
pop
lods
mov
and
jp
push
adc
push
jnp
add
pop
or
adc
xchg
sub
lods
hlt
ja
xchg
mov
ins
sub
in
ficomp
(bad)
in
pop
xchg
mov
imul
lods
sub
pop
push
adc
cs
lods
inc
icebp
ins
push
xor
in
fsubr
adc
and
push
in
loop
add
or
pop
popa
jne
cs
icebp
jb
leave
sbb
in
fcomp
or
add
ficomp
popa
push
test
scas
xchg
push
test
xor
pop
add
push
popa
gs
test
daa
jmp
jmp
mov
and
add
test
das
pop
aam
mov
or
es
in
cli
cli
add
pop
jbe
push
test
mov
add
mov
mov
sbb
iret
jo
imul
jl
add
xchg
inc
adc
clc
hlt
add
push
stos
neg
jge
push
jl
add
adc
gs
add
push
jl
jmp
fadd
add
das
das
push
ret
test
jne
add
repnz
fld
add
mov
jbe
adc
push
add
pop
add
icebp
loopne
ficomp
add
add
sub
lods
sub
jl
add
das
sbb
xor
std
stos
push
jne
in
cld
and
add
cs
cmc
aad
repnz
sub
in
add
mov
push
shl
aad
adc
lock
ret
ror
fdiv
adc
add
add
add
fld
add
push
push
jne
in
cmp
add
cmp
add
and
add
cmp
add
pushf
test
lahf
outs
push
cs
add
xor
add
pushf
add
lahf
outs
push
add
js
sti
pusha
retf
test
outs
mov
in
(bad)
daa
add
mov
lods
sbb
push
sub
(bad)
jecxz
add
jns
xchg
scas
cmp
push
sub
(bad)
jecxz
add
jp
inc
jmp
cli
call
add
das
jbe
ins
and
call
add
das
jbe
ins
dec
dec
stos
(bad)
call
add
das
jbe
ins
push
dec
stos
(bad)
call
add
das
jbe
ins
cmp
call
add
das
jbe
ins
inc
dec
stos
(bad)
call
add
das
das
pop
xchg
add
sub
inc
adc
or
xchg
jmp
inc
ins
cmc
dec
stos
(bad)
call
add
das
das
pop
dec
add
add
sbb
inc
adc
or
xchg
jmp
inc
ins
in
stos
(bad)
call
add
das
das
pop
aaa
add
add
or
inc
adc
or
xchg
jmp
inc
ins
adc
call
add
das
das
pop
inc
add
sti
ret
or
xchg
jmp
inc
ins
add
call
add
das
das
pop
out
add
imul
adc
or
xchg
jmp
inc
ins
mov
stos
(bad)
call
add
daa
and
push
out
js
repnz
cmps
mov
ins
stos
fiadd
or
cli
jmp
call
xor
in
fistp
fisubr
pop
test
gs
push
stos
fiadd
ins
add
mov
add
jmp
call
repnz
push
mov
pop
xchg
das
inc
clc
cmp
add
push
fistp
cdq
push
stos
(bad)
clc
pop
fild
mov
add
lahf
push
add
in
xchg
fist
add
mov
sub
je
adc
in
xor
js
lock
mov
ror
mov
inc
in
pop
stos
push
repnz
add
in
lods
xchg
sub
push
(bad)
inc
fs
ja
or
adc
inc
inc
adc
retf
jb
add
add
pop
clc
pop
dec
add
or
add
pusha
jmp
fadd
add
xor
inc
pop
jmp
test
add
cmp
or
xor
pop
push
(bad)
jmp
cmp
push
hlt
add
add
test
push
fldcw
add
test
inc
inc
sti
pop
inc
and
add
in
add
in
jmp
repnz
imul
xchg
out
pushf
lods
cdq
sub
stos
js
fisubr
push
add
repz
add
hlt
pop
loope
adc
jb
and
add
pop
call
adc
add
add
add
jl
ss
add
(bad)
lock
pusha
fwait
popf
push
in
loop
add
push
push
add
add
jle
push
inc
aam
mov
(bad)
add
add
daa
std
add
add
jmp
or
add
daa
inc
loopne
mov
std
add
pop
lahf
adc
xchg
jmp
adc
add
mov
add
adc
inc
pop
push
push
push
add
add
add
mov
add
jge
pushf
add
add
into
cld
push
(bad)
mov
add
test
inc
mov
inc
in
test
add
add
add
adc
add
popf
js
(bad)
mov
lea
jmp
pop
mov
inc
add
(bad)
cmc
pop
int3
mul
add
shl
xor
cs
jbe
pop
fild
add
js
imul
xchg
jmp
sub
pushf
test
lahf
outs
mov
xchg
add
xchg
sub
push
inc
add
lods
push
adc
pushf
push
daa
call
pop
sub
adc
push
in
hlt
xor
add
add
add
pop
or
inc
push
mov
cmps
mov
inc
hlt
mov
add
out
js
repnz
mov
pushf
outs
sub
lods
xchg
scas
mov
lock
(bad)
jmp
jg
push
jmp
(bad)
rcl
fisubr
add
mov
mov
add
js
cli
xor
rcl
pop
push
add
fistp
push
and
add
dec
test
ja
mov
sbb
or
add
pop
push
outs
lods
jbe
stos
push
fsub
out
sbb
lods
jb
outs
jne
ins
lea
fiadd
adc
fwait
jb
adc
add
dec
sbb
pop
call
pop
call
pushf
push
fistp
add
and
out
fisubr
popa
aad
aam
sbb
sub
clc
add
add
clc
jne
mov
jle
std
add
std
test
gs
test
adc
cmp
scas
add
inc
repz
cli
loop
fld
addr16
mov
jl
sub
mov
add
das
jle
lea
xchg
out
cmp
inc
jecxz
push
adc
pop
push
mov
add
nop
fstp
xor
xchg
jmp
add
scas
cli
push
add
shl
jg
sub
mov
and
sub
mov
xchg
xchg
sub
jp
push
jne
in
inc
dec
add
bnd
mov
clc
mov
clc
push
pop
sahf
adc
scas
add
js
add
fisub
xor
add
xor
leave
xor
xlat
xor
or
cmp
jp
xchg
add
inc
xlat
jbe
movs
(bad)
test
mov
cmc
jo
jno
jmp
push
add
pusha
(bad)
jmp
xor
sbb
scas
cli
push
push
xchg
mov
(bad)
cs
push
add
retf
push
test
div
xor
arpl
pop
aaa
add
stos
sbb
and
xchg
push
push
lods
iret
sub
data16
add
xchg
add
mov
sub
jge
fld
jmp
les
in
add
cmps
movs
cli
call
call
shl
fs
add
cmp
add
xchg
mov
sub
cli
jg
in
cmps
dec
sub
xchg
sub
add
test
std
add
push
pusha
(bad)
jmp
test
xor
ficom
push
call
cs
cmp
add
dec
mov
outs
xchg
mov
ins
shl
sbb
push
call
jl
inc
adc
shr
outs
xchg
or
std
add
add
aas
stos
(bad)
xlat
in
mov
add
inc
shr
(bad)
adc
ins
test
stos
(bad)
xlat
in
push
sbb
add
inc
into
in
(bad)
adc
ins
dec
aas
stos
(bad)
xlat
in
mov
jmp
out
adc
ins
inc
aas
stos
(bad)
xlat
in
(bad)
sbb
add
inc
int
(bad)
adc
ins
or
xlat
in
scas
sbb
add
ja
add
xchg
cli
xor
test
clc
aam
add
mov
xchg
inc
ins
shl
sbb
out
add
push
jnp
imul
jmp
(bad)
add
sbb
stos
(bad)
xlat
in
out
add
mov
push
mov
inc
outs
mov
shl
sub
ror
pop
mov
or
mov
inc
dec
mov
outs
cmp
outs
mov
movs
push
movs
push
jmp
push
add
test
sar
jmp
cmp
xor
xchg
cmp
stos
mov
and
pop
push
stos
call
xchg
inc
adc
clc
sub
inc
dec
stc
mov
sub
add
jo
ret
ins
rcl
xchg
mov
mov
cmps
adc
cli
out
add
add
or
popf
push
jmp
adc
or
dec
fild
adc
mov
lock
push
xor
fsubrp
add
hlt
dec
outs
jmp
aad
lods
sub
push
adc
jp
inc
jecxz
lea
clc
(bad)
sub
dec
stc
push
stos
not
mov
cmp
repnz
lahf
outs
mov
clc
add
push
add
add
push
or
in
sbb
add
and
ficom
mov
mov
outs
cmp
push
or
jmp
in
(bad)
push
xor
jb
mov
jb
outs
mov
add
fs
pop
push
xchg
ror
rcl
pop
cs
adc
xchg
mov
push
adc
mov
mov
in
repnz
add
mov
cld
or
mov
pop
test
pop
add
mov
in
push
jl
push
in
sbb
add
fst
bnd
add
out
js
(bad)
xor
test
jmp
pop
mov
inc
add
pushf
leave
push
clc
xchg
cli
stc
or
jl
add
and
cmp
ins
movs
aad
fisubr
and
in
fisubr
or
sbb
retf
pop
(bad)
imul
xor
add
push
jb
outs
inc
mov
(bad)
push
lods
push
add
add
sahf
push
ins
sub
ficomp
jmp
inc
add
inc
push
clc
push
cmp
or
add
cmp
pop
adc
les
hlt
inc
shr
add
mov
push
push
mov
push
pop
test
mov
jp
repnz
out
leave
das
xchg
(bad)
(bad)
shr
(bad)
lods
dec
adc
shr
(bad)
cmp
mov
retf
lods
dec
adc
(bad)
xor
popa
cmp
xor
in
ret
inc
mov
pop
test
inc
add
pop
add
ret
xchg
add
push
dec
add
push
in
data16
add
or
lods
icebp
add
xor
lock
fsubr
jno
add
mov
inc
in
pop
stos
push
mov
cli
jmp
add
pop
mov
jo
and
sub
adc
int
push
lods
sub
(bad)
sbb
sub
sub
jo
add
retf
pop
test
push
push
(bad)
inc
fs
fwait
xchg
mov
xchg
(bad)
in
pop
das
jne
(bad)
sub
inc
add
mov
add
add
js
add
fisub
xor
add
xor
imul
add
dec
mov
mov
lods
sahf
cmp
or
or
xor
inc
push
push
es
push
lods
sub
(bad)
lods
sub
pop
add
fisubr
adc
stc
push
lods
sub
or
lock
add
test
cmp
cld
jb
outs
jne
in
mov
add
jmp
push
xchg
add
push
pop
mov
xchg
test
jmp
jl
jb
add
adc
adc
arpl
push
mov
add
sub
or
add
adc
sub
xchg
xchg
add
stos
test
mov
jbe
add
imul
push
(bad)
push
les
inc
add
jge
pop
je
adc
rol
sbb
or
loop
push
in
push
inc
push
adc
push
fdivp
push
add
imul
(bad)
pop
mov
adc
scas
jb
add
pushf
jo
push
add
ins
fild
sysenter
dec
add
call
adc
jmp
and
pusha
(bad)
jmp
rcl
adc
fiadd
add
sbb
in
ficom
push
outs
add
xor
xlat
xor
mov
sti
int
push
lods
sub
add
inc
xchg
dec
repnz
cmc
push
xchg
cmp
gs
enter
daa
adc
ret
push
jae
outs
adc
into
add
cmps
inc
dec
mov
adc
lds
xor
push
call
pop
jbe
lods
push
adc
push
jl
push
xchg
add
pop
jmp
push
add
push
inc
push
mov
cmps
mov
bound
call
call
rcl
mov
ins
stos
fiadd
or
lahf
fwait
lods
inc
(bad)
stc
pop
gs
stos
fidiv
repnz
add
mov
jae
outs
sub
outs
out
pop
xor
or
mov
xor
add
pusha
inc
lods
push
lods
sub
fidivr
xchg
add
push
pop
outs
mov
sbb
sub
jp
hlt
movs
inc
add
popf
test
add
add
sub
clc
jne
add
push
adc
push
adc
cmp
ja
rol
pop
clc
jmp
fwait
rol
shr
push
add
add
pop
stos
mov
inc
jmp
ins
adc
test
mov
mov
mov
jl
xchg
pop
test
call
mov
fimul
ja
imul
mov
add
popf
lods
sahf
xchg
xchg
imul
sub
aam
aad
pop
add
adc
adc
pop
push
mov
add
sub
or
add
adc
sub
push
xchg
add
stos
test
mov
jbe
add
imul
push
(bad)
push
les
inc
add
jge
pop
je
adc
rol
sbb
or
(bad)
cmc
push
in
push
inc
xchg
adc
push
pop
cmc
push
add
imul
(bad)
(bad)
jb
add
pushf
jo
push
add
ins
fild
sysenter
dec
add
call
adc
jmp
push
add
pusha
(bad)
jmp
rcl
adc
add
sbb
mov
repnz
loopne
add
mov
adc
pop
mov
cmovne
fidiv
ret
ins
and
stos
fisubr
and
in
fisubr
or
cmp
retf
daa
xchg
imul
mov
inc
xor
outs
inc
sahf
enter
(bad)
mov
in
push
lods
cli
push
xor
inc
add
vmwrite
pop
sti
pmullw
jmp
sahf
repnz
push
mov
mov
add
pop
das
jbe
add
lahf
pop
push
adc
xor
push
xchg
add
sub
push
popf
add
jo
add
push
outs
test
jp
pop
mul
rcr
add
pop
shl
add
seta
test
push
lods
sub
mov
sub
out
leave
das
xchg
(bad)
(bad)
shr
daa
mov
adc
shr
(bad)
xor
mov
sub
sub
push
popa
inc
aam
mov
ret
cmp
adc
jge
push
mov
or
add
push
lods
cli
mov
adc
rcr
(bad)
loope
int3
pop
clc
jb
add
add
add
dec
sub
add
mov
inc
in
scas
xor
push
xchg
add
daa
jbe
add
push
sahf
add
jo
add
pop
outs
test
jp
pop
dec
and
rcr
add
pop
or
add
seta
(bad)
out
pop
test
inc
aas
rcl
fisubr
lods
(bad)
je
adc
xchg
mov
repnz
xchg
ficomp
das
mov
test
push
pop
test
push
add
or
ficom
and
add
push
stos
sar
stc
mov
es
clc
ror
imul
imul
push
xor
in
stos
mov
lea
lea
ret
sub
add
mov
xchg
fsubr
adc
and
push
in
sbb
add
pusha
pop
stos
push
sub
stos
mov
jge
push
lods
(bad)
jmp
repz
add
add
add
lea
push
lods
(bad)
push
in
xchg
add
xor
sbb
aas
leave
inc
lea
add
popf
js
mov
call
add
jo
push
jne
imul
adc
mov
pop
push
pop
test
adc
pop
or
adc
rol
out
sub
and
add
xor
push
sub
dec
pop
push
cmp
mov
dec
mov
dec
cli
add
xor
ret
test
ja
xor
inc
test
(bad)
push
call
test
sar
fisttp
mov
sub
je
sahf
push
mov
push
(bad)
je
sahf
push
mov
push
imul
rol
xchg
inc
adc
or
pop
push
sub
jmp
pushf
lods
cdq
sub
xchg
das
pop
clc
test
shr
add
adc
fdiv
movs
shl
pop
shr
rcl
pop
jbe
add
mov
sub
pop
inc
add
adc
lea
jbe
aas
inc
add
(bad)
cmc
push
in
add
add
(bad)
repnz
mov
add
push
mov
and
pop
push
push
inc
(bad)
sub
add
push
pop
imul
in
lods
xchg
sub
dec
push
adc
jbe
iret
inc
enter
mov
imul
add
cs
and
sahf
mov
jmp
ins
shl
rol
mov
lahf
popf
lods
sahf
xchg
xchg
jl
add
in
jmp
jl
jmp
push
add
add
or
stos
fiadd
jne
add
pop
pushf
push
add
cli
popa
cmp
inc
jns
sahf
push
add
jno
lods
sub
add
sbb
stos
ficomp
sbb
fwait
out
add
shl
(bad)
adc
lahf
retf
adc
jo
ret
ins
rcl
ins
test
adc
xchg
loop
and
call
sub
jns
xchg
inc
cmp
push
jp
pop
add
inc
dec
mov
outs
xchg
adc
ins
shl
daa
adc
mov
xchg
adc
jb
ret
lods
push
mov
lea
fist
mov
add
test
test
ins
mov
sbb
iret
jo
imul
mov
and
xchg
or
std
add
jbe
push
jl
jmp
and
or
std
add
jae
add
push
arpl
add
push
stos
sar
stc
mov
xor
mov
jmp
mov
push
lods
loop
dec
add
lods
dec
sbb
xchg
cmp
push
sar
mov
popf
cmp
inc
ins
shl
add
push
stos
dec
in
jmp
inc
inc
inc
adc
lods
fs
push
xchg
sub
sub
outs
sub
adc
adc
cli
sub
adc
add
xor
push
push
push
stos
xor
push
mov
mov
mov
push
add
add
dec
jmp
sub
pop
inc
add
out
cmp
enter
jne
in
hlt
bound
add
ins
sbb
repnz
jge
repnz
add
pusha
leave
mov
cmp
(bad)
in
icebp
push
lods
jle
xor
inc
repnz
add
xor
inc
push
mov
leave
push
add
inc
ins
or
call
adc
fisttp
fsubp
sub
push
xchg
sbb
jp
add
rcl
lea
and
imul
in
repnz
inc
push
fnstenv
sbb
mov
push
xchg
scas
addr16
ins
adc
push
jp
pop
aaa
push
inc
push
stos
dec
pop
and
call
cli
pushf
push
daa
mov
add
mov
jmp
xchg
add
repnz
mov
repnz
sbb
add
and
aad
mov
add
scas
jl
push
xor
inc
and
inc
xor
imul
out
xchg
or
popf
idiv
and
inc
dec
ja
cs
bound
add
enter
mov
in
xchg
fild
add
jge
js
pop
and
jo
js
xchg
sti
sbb
dec
add
cs
test
add
hlt
mov
addr16
gs
ja
pop
mov
sub
jbe
inc
adc
popf
sbb
push
mov
or
lea
push
lods
cs
xor
or
cdq
mov
(bad)
cdq
push
sbb
or
jmp
jp
cli
imul
or
add
scas
push
push
pusha
cmps
sar
pop
push
dec
adc
add
push
stc
leave
stos
or
clc
cmc
addr16
add
add
repz
mov
fnsave
and
push
aam
xchg
add
pop
mov
adc
dec
pop
push
pop
push
push
cmc
mov
add
cs
test
push
ins
adc
sahf
push
pop
push
xchg
sub
jp
sub
inc
push
and
mov
jo
mov
enter
or
adc
jmp
mov
adc
(bad)
jmp
mov
add
dec
(bad)
cmp
add
lods
xor
lods
or
mov
or
pop
mov
sbb
adc
pop
sub
in
popa
push
sub
xor
xchg
clc
int
add
add
jo
push
push
xor
add
inc
jecxz
(bad)
jl
sub
push
add
push
xchg
clc
fbld
call
push
jp
neg
in
lods
add
cli
gs
lea
jb
dec
pop
add
add
or
xor
dec
pop
push
push
pop
add
pop
mov
jb
sbb
xchg
or
aam
add
jae
sub
das
pusha
add
ins
adc
shl
sbb
cmp
xor
pop
jmp
pop
mov
rcl
lea
iret
pop
sbb
mov
mov
mov
lahf
jae
push
rcl
in
ficomp
movs
sbb
int3
mov
jne
ins
ror
ficom
xchg
sbb
add
icebp
xchg
cmp
outs
cmps
cmps
cld
clc
jbe
ret
xlat
xor
add
test
inc
in
add
push
jne
gs
add
pop
test
add
mov
add
pop
add
inc
add
clc
pop
(bad)
in
lock
add
xor
sbb
add
xlat
in
lods
data16
xlat
sbb
mov
ficom
loope
add
mov
stc
pop
add
jne
xchg
mov
jae
outs
sub
outs
out
cld
xor
or
mov
xor
add
pusha
inc
or
pop
movs
push
stos
fidiv
adc
rcl
aas
test
inc
push
push
stc
mov
sub
and
jl
add
call
sbb
add
jl
add
or
cmp
add
(bad)
ins
sub
xchg
push
push
lahf
outs
adc
iret
add
add
pop
mov
in
push
popa
add
push
jbe
push
jl
jmp
and
inc
adc
clc
xchg
pusha
add
or
adc
ret
xchg
sub
dec
add
imul
push
jl
pop
in
mov
add
fld
add
pushf
mov
mov
pop
out
add
xor
xlat
xor
pop
mov
inc
add
xor
repnz
dec
repnz
push
xchg
stos
jae
sbb
call
adc
loop
imul
jp
int3
je
outs
adc
add
cmps
inc
outs
scas
dec
adc
in
push
lods
sub
ficom
popa
loope
add
in
fisubr
jne
xor
add
ins
jmp
scas
fiadd
add
popa
add
inc
add
dec
add
inc
add
add
(bad)
pop
gs
push
push
(bad)
inc
fs
lahf
xchg
fbld
(bad)
in
pop
das
jne
(bad)
sub
inc
add
jmp
add
test
std
add
push
inc
aam
xlat
xchg
ret
sub
dec
pop
push
call
in
fistp
add
add
fisub
xor
add
xor
add
jb
lds
lea
in
fisubr
push
xchg
adc
leave
inc
ja
rol
push
clc
cmps
cmps
dec
test
in
test
mov
push
cwde
int
out
fisubr
and
test
xor
lods
sub
push
jnp
fwait
xchg
dec
repnz
imul
adc
gs
test
pushf
outs
daa
adc
mov
jp
mov
adc
inc
scas
scas
dec
adc
mov
jbe
adc
add
test
bound
pushf
push
ret
xchg
test
push
int
adc
(bad)
pop
lods
loope
mov
mov
fld
jmp
adc
jo
push
mov
jmp
leave
mov
adc
jle
pop
push
pop
ins
adc
leave
call
jno
xchg
sub
fcomi
outs
cmps
cmp
mov
pop
push
mov
cmp
std
add
(bad)
lea
fisubr
sbb
test
repz
dec
adc
jne
add
push
or
push
sub
aad
add
rol
or
xor
mov
cli
push
in
cmps
dec
sub
adc
jbe
jo
xchg
adc
popf
bnd
add
or
pop
mov
shl
add
bound
js
pop
dec
sbb
add
repz
sub
out
stos
sbb
adc
add
push
jne
imul
sub
ret
(bad)
in
push
mov
jmp
sbb
add
or
adc
xchg
dec
add
pop
mov
cmp
hlt
gs
fs
arpl
out
add
jno
stos
(bad)
jmp
xor
adc
(bad)
aaa
jl
add
out
add
adc
push
mov
cs
adc
xchg
inc
xor
jne
sub
adc
dec
stos
adc
jge
pop
xchg
xchg
call
push
clc
xchg
ins
add
leave
push
add
jne
add
jmp
cmp
add
imul
ins
rcl
scas
push
inc
push
push
jp
pop
imul
push
jno
add
push
mov
pop
aam
inc
lahf
xchg
fcomi
ins
sub
std
add
sar
push
popa
or
fst
cs
adc
movs
add
mov
call
push
mov
in
leave
push
add
jmp
pop
inc
icebp
dec
sahf
outs
adc
in
add
and
stc
or
push
pop
jb
ret
xor
sbb
ret
jmp
jecxz
inc
or
adc
sbb
test
or
clc
sub
add
enter
in
fisubr
cld
adc
mov
enter
add
call
cmp
in
(bad)
gs
in
dec
adc
add
cmc
sar
sbb
add
xchg
test
mov
jle
rcl
push
outs
sub
pop
xor
add
pop
imul
cmp
add
outs
inc
sti
push
or
pop
push
stos
cs
adc
add
stos
pop
add
jmp
lahf
and
sbb
es
repz
lods
lock
mov
int3
das
lea
push
aaa
jmp
lods
fild
repz
pmaxub
or
pop
stos
adc
or
xchg
mov
rol
inc
leave
sub
xchg
jmp
add
test
adc
rol
pop
in
fisubr
cld
sbb
int3
arpl
loop
cdq
sub
cwde
cmc
add
sti
push
or
pop
push
stos
cs
adc
lock
stos
pop
add
jmp
lahf
and
sbb
es
repz
lods
lock
mov
int3
das
lea
push
aaa
jmp
lods
fild
fnop
ins
sti
jbe
in
mov
jb
push
mov
retf
xor
mov
sahf
ins
repnz
inc
pop
stos
inc
push
jne
inc
fimul
add
ins
and
(bad)
pop
jle
outs
test
(bad)
jmp
sbb
jmp
repnz
xchg
pop
adc
fidivr
sub
fdiv
add
jl
imul
jb
adc
adc
dec
dec
add
call
sub
gs
xchg
mov
cwde
pop
shr
(bad)
add
fld
jbe
sub
add
dec
mov
cmp
in
(bad)
mov
mov
cs
add
test
push
fistp
cs
fistp
dec
add
aam
stos
fisubr
fwait
add
xchg
mov
jle
pop
test
or
pushf
add
(bad)
pop
pop
pop
add
mov
(bad)
jmp
sbb
inc
adc
es
shl
div
jmp
lods
fwait
repnz
add
pusha
add
push
cli
push
inc
ds
test
(bad)
call
add
pop
sub
cli
push
pop
imul
mov
pushf
add
test
sub
lods
inc
jno
outs
ja
in
hlt
push
add
imul
dec
repz
repnz
repz
out
mov
mov
mov
push
stos
fidiv
or
(bad)
pusha
cmp
push
adc
mov
imul
mov
mov
add
stos
clc
lods
or
inc
push
stos
ficomp
(bad)
in
jo
xchg
add
jo
pushf
outs
call
movs
movs
pop
les
in
fcmovb
mov
mov
push
mov
push
push
inc
lea
or
or
clc
lods
jg
add
rcr
gs
sbb
adc
ins
sub
add
jns
hlt
add
jmp
add
xchg
shl
add
mov
add
ret
mov
(bad)
movs
pop
add
add
inc
dec
sub
repnz
add
xchg
sbb
add
std
add
shl
cmps
inc
add
movs
add
lahf
cdq
inc
push
loope
adc
frstor
jmp
xor
add
add
push
push
inc
mov
add
(bad)
call
push
and
inc
aam
scas
js
xchg
add
xor
inc
stos
pop
push
or
add
cmp
add
xchg
sub
into
in
(bad)
movs
jg
add
popf
push
sub
add
outs
sub
add
test
add
cmps
cmp
mov
cmps
mov
pop
stos
bound
or
push
lahf
jmp
inc
add
jle
add
jge
lods
hlt
gs
fs
ins
gs
add
addr16
push
adc
adc
rol
cmp
add
cmp
pop
pop
add
pop
mov
xchg
ds
add
ins
add
repnz
call
push
call
cmp
add
push
lods
ss
add
add
dec
fwait
inc
pop
push
push
push
inc
ins
gs
inc
add
inc
mov
jb
out
pop
mov
jmp
add
pop
nop
or
add
pop
add
add
gs
shl
inc
inc
add
lea
ficom
call
inc
js
cmp
adc
fldcw
add
push
sub
xchg
inc
(bad)
xor
add
push
adc
test
js
hlt
gs
fs
sbb
add
popf
sbb
dec
add
popa
add
mov
push
add
push
dec
sub
add
add
jmp
cmp
add
sub
(bad)
je
sahf
leave
sub
inc
add
call
push
cmp
push
inc
in
jge
add
cmp
add
push
adc
add
mov
xor
add
cmps
scas
inc
push
jbe
push
mov
or
xchg
add
jb
(bad)
adc
fadd
add
jnp
add
lock
pop
fld
nop
nop
les
add
push
mov
add
add
sbb
mov
dec
sub
inc
call
push
jp
pop
call
inc
lahf
pushf
push
jl
jmp
xor
jbe
adc
jae
push
pop
pop
(bad)
jl
adc
lea
add
push
adc
into
add
xor
add
add
inc
lahf
adc
call
out
arpl
ins
add
repnz
ins
mov
sbb
iret
jo
imul
jl
adc
lea
push
jae
les
dec
push
cmp
sub
hlt
lock
lods
xor
mov
jo
xor
pop
stos
sub
push
jbe
sub
mov
loop
pusha
sub
pushf
stos
mov
shr
add
mov
ins
shr
stos
ficom
adc
inc
mul
add
dec
and
popa
or
in
pop
stos
push
cli
push
imul
add
stos
mov
shr
add
xor
sbb
xor
or
clc
push
xor
call
je
js
lahf
adc
jo
mov
in
call
in
aas
sbb
add
mov
push
retf
push
stos
sar
jne
inc
ficomp
repnz
mov
int
call
jb
mov
loopne
and
add
test
hlt
and
sahf
add
test
xchg
mov
or
add
repz
adc
and
hlt
add
jno
enter
sahf
test
push
mov
xchg
cmp
(bad)
in
pop
das
jbe
add
out
cmp
inc
adc
jge
jb
inc
inc
adc
mov
push
mov
jmp
into
in
ficomp
pop
stos
sub
pop
iret
jp
xchg
inc
push
movs
dec
dec
dec
push
fidivr
pop
push
leave
mov
jl
add
mov
aas
push
push
push
mov
push
gs
add
push
adc
push
jl
add
pop
sub
add
test
cmp
daa
sub
sub
add
cdq
sub
xchg
pop
mov
inc
stc
jae
outs
sub
xchg
add
into
pop
or
gs
push
add
test
out
adc
push
stos
xor
ins
push
pop
sti
pmullw
jmp
sahf
bnd
add
and
test
inc
mov
into
js
hlt
ins
sub
lahf
mov
add
ret
xchg
imul
adc
adc
fisubr
push
test
in
ds
ins
mov
xlat
fs
jne
pop
(bad)
xor
add
(bad)
cdq
call
dec
sub
and
add
cdq
sub
xchg
or
nop
add
pushf
push
lods
(bad)
push
in
and
add
cmp
push
dec
jmp
or
mov
pop
pop
adc
add
jp
pop
(bad)
das
add
test
jbe
xor
inc
adc
in
fisubr
cli
adc
jo
jno
push
or
lods
shl
adc
adc
cli
sub
adc
add
xor
ins
xor
fdivr
aas
push
dec
push
mov
add
pop
adc
inc
xchg
test
add
xor
sbb
clc
scas
inc
sbb
imul
inc
add
jmp
xor
inc
stos
inc
jecxz
push
add
std
add
shl
not
popa
lea
mov
call
lahf
mov
add
fnstenv
(bad)
pop
jmp
sbb
into
jmp
dec
add
push
jne
add
jbe
xor
inc
stos
pop
jo
inc
lahf
xchg
fcomi
jne
in
movs
push
add
(bad)
add
xchg
test
add
js
fisubr
ins
adc
shl
xor
test
xchg
pop
inc
ins
sar
pop
stos
or
jo
adc
lods
add
cmps
push
call
and
jge
push
jl
add
imul
jbe
pop
clc
mov
add
jge
add
test
pop
push
xchg
clc
rcl
add
pop
data16
add
add
pop
loopne
(bad)
call
dec
pop
add
pop
outs
test
xor
shl
adc
aad
push
adc
xchg
adc
ins
ror
adc
dec
lods
mov
push
add
stos
test
mov
jbe
call
imul
adc
js
ja
fmul
inc
xchg
sub
loopne
add
mov
sbb
iret
jo
imul
fstp
shr
pop
sti
int
add
out
clc
movs
retf
loope
add
push
jne
ins
sbb
out
jmp
xor
int3
adc
sub
outs
test
mov
add
mov
inc
adc
adc
push
mov
loope
add
add
adc
or
add
pop
lahf
mov
adc
cmp
add
pop
loopne
(bad)
jmp
inc
add
(bad)
lea
enter
add
mov
js
in
cmps
dec
sub
mov
or
add
cdq
(bad)
in
pop
das
jne
add
and
push
call
icebp
retf
pop
xor
and
cmp
popf
aam
add
lds
xor
inc
and
xor
and
cmp
and
push
call
pop
das
jbe
cmp
and
push
jne
xchg
xor
and
push
sub
test
in
lods
pop
push
sub
add
mov
xor
and
push
das
xor
sub
add
outs
sub
sbb
nop
enter
in
jbe
inc
inc
and
cs
inc
and
mov
push
fisubr
mov
leave
das
inc
int3
mov
push
pop
dec
inc
(bad)
cmp
call
enter
pop
add
scas
mov
cmp
hlt
mov
add
lahf
sahf
push
in
cli
loopne
add
add
add
mov
lods
sub
aam
lods
mov
add
mov
or
pop
add
icebp
and
ins
shr
jl
add
in
and
ins
shl
add
add
stos
pop
add
sbb
xchg
(bad)
in
ret
ja
pop
clc
and
add
adc
add
ins
rcl
lea
and
push
mov
or
sub
push
mov
mov
adc
push
add
icebp
les
cmp
and
push
call
ret
ja
pop
clc
pop
xor
mov
loopne
add
add
pop
jbe
add
add
inc
inc
add
ss
add
das
jne
add
add
jmp
adc
push
mov
inc
add
add
jmp
adc
(bad)
dec
(bad)
fild
add
call
sub
and
push
pop
push
(bad)
frstor
add
pop
xor
inc
push
jb
inc
(bad)
fistp
push
pop
adc
add
lahf
xchg
(bad)
lock
sub
add
push
inc
add
sub
push
add
stc
jbe
leave
push
push
pop
(bad)
ins
adc
mov
lods
sub
aam
loope
outs
inc
or
(bad)
jmp
mov
lock
outs
sub
xchg
add
scas
pop
adc
jne
add
int3
xchg
sub
push
lods
push
jne
cs
icebp
jb
leave
sbb
fwait
add
jne
stos
(bad)
jmp
pop
jb
push
test
pusha
pop
(bad)
ins
dec
popf
push
lods
or
cmps
add
clc
jne
add
jbe
sub
jns
push
adc
pushf
add
pop
loopne
fimul
cmp
sub
add
push
pop
push
push
or
fwait
cdq
add
js
cli
repz
clc
add
push
call
test
xor
loop
inc
cs
xor
add
(bad)
loopne
aad
sub
adc
add
mov
mov
add
adc
in
push
lods
sub
cmp
dec
adc
movs
add
xor
repnz
outs
adc
scas
add
cmps
repnz
add
ins
add
clc
pop
out
fldcw
fisubr
or
jge
stos
ficom
arpl
add
mov
arpl
pop
enter
push
in
push
lods
adc
xchg
push
add
pop
mov
std
(bad)
and
add
test
sub
adc
add
fdivrp
jmp
lea
push
movs
bnd
es
push
lods
sub
(bad)
lods
sub
pop
and
fisubr
adc
pop
push
lods
sub
sub
inc
sub
out
lods
dec
adc
dec
imul
cmp
or
clc
cwde
pop
add
imul
in
push
jl
leave
push
add
std
add
push
stos
push
mov
fs
into
in
(bad)
lods
push
mov
add
lods
inc
add
add
push
lods
sub
pop
js
inc
mov
push
(bad)
jge
add
pop
pop
push
inc
fwait
xchg
fcomi
jne
in
mov
add
jl
adc
xchg
je
add
ins
and
pop
test
xchg
add
test
add
add
jbe
push
mov
jmp
es
add
xchg
mov
ficom
rol
add
or
imul
xchg
(bad)
inc
imul
inc
jmp
sub
pop
inc
push
stos
fisubr
adc
cmp
sub
dec
push
stos
ficom
inc
sub
add
cmp
cmp
pushf
outs
jne
in
fcomp
add
jmp
ja
xor
sbb
add
fmul
cmp
push
jge
icebp
push
and
add
fs
leave
sub
push
add
push
jl
add
add
dec
pop
inc
push
jp
sahf
adc
add
js
pop
or
add
xchg
jb
stc
sub
clc
add
mov
add
or
adc
in
sub
add
jl
or
mov
sub
add
add
xchg
ficomp
xchg
sbb
xchg
add
outs
xchg
fwait
pop
pop
mov
clc
pop
iret
in
mov
add
out
push
sbb
loopne
xchg
sahf
stos
hlt
ins
paddsb
add
xchg
out
xor
mov
or
clc
aam
add
add
popf
jbe
leave
sub
push
add
std
add
push
jp
pop
jg
inc
lahf
pushf
push
jl
or
clc
jg
add
or
pop
mov
(bad)
lea
adc
movs
adc
fs
jnp
push
jne
(bad)
je
add
daa
adc
out
add
fs
jno
cs
sub
inc
es
jo
call
jp
mov
add
in
popf
dec
add
push
pop
mov
inc
rol
cmp
push
adc
adc
nop
cdq
(bad)
in
(bad)
gs
or
dec
pop
out
or
jns
add
push
mov
add
push
jmp
push
(bad)
in
stos
hlt
gs
lea
fild
sub
cmp
add
add
stos
push
ins
mov
clc
push
clc
(bad)
outs
add
push
imul
jb
xlat
mov
add
push
outs
pop
push
sub
cwde
movs
adc
movs
push
sub
jo
pop
sub
jae
lea
adc
movs
adc
fs
jg
push
jne
(bad)
je
add
pop
adc
repnz
and
stos
cs
test
(bad)
inc
es
jo
call
jp
mov
add
in
int
add
push
pop
mov
inc
push
jp
cli
push
adc
(bad)
jmp
sub
inc
ins
xor
in
fcmovb
jbe
pop
test
jmp
cmp
xchg
push
test
pop
pop
push
test
pop
add
dec
fisubr
es
rcr
add
clc
sbb
push
call
ins
sbb
ds
test
repnz
or
lods
cdq
sub
(bad)
xchg
add
add
adc
xor
gs
icebp
sub
mov
fisubr
sub
ficomp
mov
or
lahf
add
bndstx
test
sar
gs
lea
xchg
mov
fdiv
test
fdiv
lea
push
lods
(bad)
push
mov
inc
adc
cmp
cmp
jl
cmp
add
pop
js
fisubr
nop
leave
call
sub
sub
in
fiadd
adc
pushf
shr
mov
lea
fld
push
add
mov
popf
(bad)
in
icebp
jbe
sti
add
jb
neg
daa
popf
fsubr
(bad)
ins
pop
popf
add
or
jne
in
cmc
push
add
inc
add
imul
add
sahf
outs
adc
lahf
ja
data16
dec
test
ja
cli
mov
or
lods
div
pop
das
imul
in
stos
pop
aaa
sub
add
push
aam
fist
(bad)
cli
clc
mov
dec
adc
fisubr
inc
call
ss
add
pusha
dec
mov
outs
stos
jle
cdq
push
stos
repnz
pop
fisttp
hlt
pop
fist
outs
sub
fs
jbe
iret
adc
add
jb
(bad)
mov
enter
ret
sub
push
add
adc
fisubr
jbe
das
retf
jnp
mov
icebp
add
ja
scas
cmps
retf
mov
push
pop
lods
inc
inc
add
pop
or
test
hlt
es
pop
push
inc
lea
push
lods
(bad)
lods
fcmove
pop
enter
das
and
popf
dec
mov
lahf
sub
adc
add
xchg
dec
repnz
lods
(bad)
jbe
movs
cmp
adc
jge
lods
push
jne
in
push
cmp
add
jmp
inc
in
mov
aad
xchg
push
push
push
inc
push
clc
sub
push
inc
mov
add
mov
push
inc
fimul
stos
push
jno
mov
mov
jl
add
lods
inc
add
clc
arpl
add
aas
cmp
add
pusha
push
stos
inc
lahf
adc
add
xchg
ficomp
clc
iret
test
ins
adc
shl
sbb
inc
jg
add
jecxz
out
add
xor
sub
sahf
outs
adc
add
js
ja
inc
shr
(bad)
icebp
push
lods
repnz
cdq
pop
stos
inc
hlt
movs
ja
add
rol
jmp
add
add
clc
gs
in
mov
add
clc
gs
outs
lods
push
stos
sbb
add
mov
and
dec
inc
add
test
repnz
(bad)
add
xor
xchg
hlt
mov
add
add
add
stos
add
mov
lahf
add
or
add
add
(bad)
push
in
pusha
xor
add
push
push
jb
push
inc
in
sub
rcl
add
xor
add
push
adc
add
pushf
test
add
sub
test
push
push
frstor
jmp
push
add
leave
push
add
pop
pop
in
in
cli
add
cdq
call
xor
sbb
dec
add
out
clc
retf
call
test
mov
sub
fiadd
shl
adc
pop
pop
push
mov
(bad)
xor
lahf
add
jmp
sti
add
hlt
xlat
add
sbb
dec
add
(bad)
sar
pop
in
inc
fwait
xchg
fcomi
ins
pop
in
xacquire
add
je
adc
lea
jge
add
aad
mov
shl
in
xchg
dec
add
in
stos
fidiv
jle
jl
jo
and
sub
adc
int
push
lods
sub
(bad)
sbb
sub
sub
sbb
add
dec
cmp
hlt
pop
icebp
sub
lahf
outs
lods
dec
mov
push
xchg
aaa
(bad)
ins
shl
sbb
add
pop
push
stos
cs
lods
inc
xchg
pop
or
add
add
jae
ror
add
lea
xchg
ret
xchg
imul
and
(bad)
jp
push
push
inc
gs
popa
(bad)
inc
pop
lahf
jb
out
adc
test
cli
xchg
add
pop
lahf
jb
(bad)
adc
jle
add
ja
ret
xchg
imul
and
add
add
dec
push
ss
sub
cdq
cmp
add
mov
sub
(bad)
ins
cmp
mov
test
adc
dec
aas
lahf
outs
lods
dec
call
push
lods
inc
mov
lahf
push
jmp
add
pop
inc
add
(bad)
cdq
sub
xor
sbb
repnz
add
ins
cmp
jp
add
stos
dec
add
pop
fwait
xchg
fild
jne
add
mov
leave
std
pop
pop
outs
test
add
popf
xchg
sub
push
cmp
add
call
test
lods
sbb
das
imul
call
add
jno
lods
sub
jmp
jp
inc
jmp
popa
gs
movs
xor
sub
sahf
outs
adc
or
or
pop
add
mov
add
pop
fs
add
push
jbe
inc
or
push
scas
push
mov
or
dec
hlt
js
xlat
enter
or
mov
push
add
add
mov
sub
add
push
sub
and
push
dec
mov
sub
add
push
mov
push
inc
ret
add
int3
inc
lds
das
jbe
lea
js
cli
sub
xchg
pop
add
add
sub
inc
add
push
add
add
jo
cmps
inc
add
inc
adc
push
mov
int3
lds
jmp
into
in
(bad)
mov
add
add
(bad)
stc
dec
sub
(bad)
sbb
fwait
js
pop
bound
jmp
test
fwait
js
pop
fs
add
push
test
imul
cdq
cmps
shr
lods
cli
lock
xchg
add
hlt
ins
xlat
in
(bad)
(bad)
add
ins
add
xchg
sub
(bad)
rcr
adc
nop
fs
outs
pop
or
adc
loopne
push
cmps
ret
adc
pop
or
adc
fild
stos
jnp
lods
shr
jno
and
adc
fs
xor
sbb
mov
push
fisubr
repnz
adc
add
sub
icebp
add
adc
pop
sar
jo
lods
jbe
adc
or
jbe
repz
adc
xor
call
adc
sahf
mov
in
and
add
jl
xchg
xchg
out
or
call
xor
add
push
adc
or
add
or
add
jmp
add
repnz
arpl
add
out
stos
pop
push
in
add
test
adc
jb
push
inc
sbb
loop
ret
or
adc
jle
add
add
adc
jb
push
inc
or
push
cmp
inc
in
fiadd
dec
shr
leave
push
addr16
xchg
mov
add
ja
xchg
xchg
dec
jo
add
xor
in
add
add
add
int3
jns
repnz
add
or
add
add
jg
inc
jmp
add
std
movs
arpl
add
out
mov
es
add
mov
add
add
sub
inc
shl
lahf
ret
lods
push
js
add
lahf
lods
inc
xchg
pop
clc
ins
xor
mov
stos
data16
lods
dec
xchg
jmp
add
pop
test
add
test
mov
test
adc
pop
(bad)
jl
adc
gs
push
cmp
inc
in
std
mov
add
inc
clc
pop
add
imul
mov
add
add
es
test
aas
add
ins
add
adc
mov
shl
cmp
add
xor
add
push
adc
jae
rcl
fisubr
repnz
add
lods
push
and
add
retf
add
jb
jecxz
xor
hlt
jne
in
test
push
(bad)
lea
add
pop
(bad)
jnp
add
jmp
add
xchg
ficomp
shl
sbb
jp
add
jb
stos
inc
add
mov
add
lods
push
cmp
add
hlt
data16
add
or
add
pop
aam
dec
jecxz
push
dec
pop
add
add
xchg
mov
test
pop
test
push
movs
adc
xchg
call
xchg
jae
pop
add
cli
pop
(bad)
ins
add
in
adc
pop
push
mov
lock
mov
pop
stos
or
gs
sub
jae
jbe
adc
xchg
push
out
add
mov
or
pusha
add
xchg
sub
add
pop
(bad)
js
add
idiv
ins
(bad)
(bad)
popa
rcr
out
test
push
adc
mov
icebp
push
jl
jmp
jg
add
test
push
lea
xchg
test
add
fwait
adc
lea
mov
pop
push
adc
add
xchg
inc
cmp
test
push
push
gs
fwait
dec
sahf
mov
inc
in
mov
addr16
shr
(bad)
gs
inc
fimul
loop
mov
cmp
jle
push
scas
es
adc
mov
xchg
arpl
loope
retf
sub
in
fld
add
mov
mov
add
ret
mov
xor
add
hlt
fld
push
gs
lahf
mov
dec
pop
push
test
gs
add
inc
mov
cmp
mov
sub
(bad)
in
pop
das
jbe
add
fld
test
inc
lahf
inc
lock
call
cld
and
push
in
inc
pop
add
popf
pop
test
cmp
mov
add
push
inc
pop
cmp
inc
lahf
gs
lahf
lods
test
xor
leave
retf
ja
aad
add
dec
dec
add
int
stos
(bad)
jmp
push
jbe
xor
mov
sahf
push
jbe
and
out
pop
push
mov
cmp
fwait
jb
dec
dec
leave
pop
int
out
repnz
cmp
pop
push
test
mov
mov
cmp
mov
mov
lods
rol
jns
adc
stos
add
cmps
add
pushf
mov
inc
cmp
mov
repz
add
dec
push
jmp
dec
add
stos
in
xor
add
cs
leave
jp
mov
adc
shr
mov
or
xor
nop
pop
add
cdq
add
into
pop
add
fcom
in
inc
popf
js
repnz
sti
outs
add
dec
stos
sub
test
test
in
cmp
or
pop
dec
sub
lods
shl
pop
test
cmps
cmps
sbb
shr
jle
sub
sar
cmps
sub
(bad)
icebp
push
stos
inc
mov
and
pop
jns
arpl
mov
add
inc
cmp
sub
xchg
ficomp
or
ficom
xchg
rcl
push
sub
shl
xor
pusha
int
jg
cli
jg
in
cmps
dec
sub
sahf
lods
jg
sar
xchg
jbe
dec
mov
outs
mov
cmp
outs
adc
mov
jge
int
mov
lahf
popf
stos
push
pop
(bad)
xchg
xor
sub
pop
adc
add
enter
or
int
js
lahf
call
add
pop
bound
inc
stc
or
gs
iret
xchg
fldenv
jl
mov
jmp
ins
ror
sbb
js
lahf
call
push
or
repnz
jge
xchg
push
mov
jge
add
xor
leave
jb
cmp
(bad)
sub
sub
xor
mov
sub
add
sbb
in
ficom
mov
adc
adc
xchg
in
fcom
fs
leave
push
outs
sub
mov
sub
pop
push
stos
(bad)
adc
jb
dec
scas
adc
pop
mov
push
outs
test
cmp
adc
add
pop
ins
adc
leave
mov
shr
fst
xlat
je
add
jns
push
lods
pop
cmp
shr
ficomp
shr
ficomp
add
jae
add
outs
sub
fimul
imul
add
push
outs
test
cmp
jmp
leave
mov
sub
pop
push
mov
cmp
leave
movs
out
jnp
push
(bad)
sub
sub
ss
in
stos
pop
xchg
sbb
add
(bad)
cdq
call
lods
add
outs
sub
cwde
int
out
fisubr
jmp
sub
sub
enter
fisubr
pop
cmp
shr
fisubr
rol
adc
js
dec
add
push
jmp
sti
adc
rcr
in
and
add
ss
in
push
add
sub
sub
add
test
in
sar
xor
sbb
retf
cs
sbb
or
push
into
shr
cmps
xor
shl
push
pop
gs
sahf
test
call
xor
leave
mov
cli
jmp
pop
stos
fisubr
sub
add
cs
mov
pop
fdivr
dec
and
pop
add
sub
xchg
pop
pop
push
adc
adc
pop
push
mov
(bad)
sar
add
dec
leave
mov
adc
fisubr
inc
cmp
inc
mov
xor
leave
into
mov
add
push
call
shl
test
inc
or
cdq
mov
(bad)
cdq
push
sbb
or
dec
inc
push
aam
dec
fcmovnu
outs
sub
ror
adc
rcl
fisubr
sub
push
(bad)
adc
mov
jo
xor
cs
jmp
sbb
xchg
leave
retf
push
gs
leave
sahf
popf
pop
push
arpl
sahf
ffree
xor
push
cdq
test
cmps
inc
es
mov
sti
or
jmp
imul
pop
cmp
jmp
imul
add
sub
sub
mov
imul
push
dec
mov
push
call
add
mov
pop
mov
stos
adc
xchg
inc
push
jbe
push
mov
shr
pop
dec
push
adc
adc
(bad)
ins
lods
shr
shl
dec
loop
adc
mov
jmp
jp
add
cdq
sub
enter
fisubr
pop
cmp
shr
fidiv
mov
popf
pop
push
dec
adc
add
pop
int
(bad)
sahf
dec
inc
nop
xchg
lar
fcomp
pusha
int
hlt
pop
fadd
add
cs
mov
pop
fdivr
dec
and
pop
add
and
fcomp
pop
int
popf
add
jecxz
add
adc
popa
pop
push
push
pop
clc
jl
add
shl
dec
inc
mov
or
int
js
dec
and
xlat
outs
sub
mov
test
in
leave
xor
mov
add
js
movs
jmp
lea
jmp
cmp
adc
mov
adc
mov
lods
(bad)
sub
xor
fcomp
imul
outs
sub
mov
push
leave
sub
ss
add
sub
sub
dec
fiadd
push
dec
jmp
cmps
sub
(bad)
push
xchg
mov
or
add
cmps
fsubr
jp
add
or
(bad)
ins
sub
mov
pop
mov
inc
mov
jb
dec
mov
mov
xchg
shl
test
or
add
movs
mov
test
mov
jno
pop
sub
add
popa
shr
fidiv
aas
cmp
shr
fidivr
mov
mov
pop
mov
jae
xchg
add
test
in
fcom
or
adc
clc
scas
bound
push
aam
retf
sub
stos
mov
pushf
inc
jmp
bound
mov
es
leave
out
add
push
(bad)
jge
jge
inc
(bad)
inc
shl
xor
leave
sbb
and
push
jnp
jae
inc
push
nop
int
in
fisubr
mov
jmp
leave
jp
sub
pop
push
pop
ins
adc
dec
leave
jp
sub
pop
push
cmp
(bad)
sub
sub
cmp
mov
inc
in
mov
cli
push
add
xchg
rcr
fisubr
jg
rol
or
adc
sub
mov
fmul
add
test
imul
jno
or
adc
jb
scas
das
cmp
pop
jns
cmp
jmp
repnz
jl
push
in
fiadd
jbe
cmp
fiadd
pop
adc
sub
push
jnp
outs
in
pop
jae
add
int
in
fisubr
pop
cmp
in
fisubr
and
add
xchg
rcr
sub
xchg
sar
inc
xchg
in
aam
jo
lods
aaa
cmp
pop
jno
add
cmps
test
dec
leave
jp
sub
pop
push
mov
cmp
cmp
add
or
int
js
dec
push
or
enter
pushw
mov
jo
sahf
dec
ds
inc
add
arpl
stos
inc
mov
shl
add
adc
leave
mov
aad
inc
mov
adc
push
jg
dec
cwde
int
out
fisubr
or
int
in
fisubr
ret
adc
lods
jnp
or
jp
enter
mov
cmp
mov
in
out
out
add
jl
js
dec
push
adc
jb
dec
loop
adc
clc
jg
add
or
int
in
fisubr
pop
cmp
shr
fiadd
lods
(bad)
outs
sub
ficom
mov
adc
jge
push
call
in
fidivr
dec
cmp
loop
adc
clc
js
add
pop
aam
int3
inc
fistp
sub
fucomp
dec
leave
mov
test
inc
xchg
sbb
jo
dec
push
cld
outs
test
inc
sub
rcl
cwde
fidivr
jo
xchg
or
sub
cwde
int
out
fisubr
jmp
xchg
add
stos
in
lods
jge
add
xor
leave
mov
dec
jbe
add
in
sgdtd
add
mov
popa
shr
fidiv
jne
add
add
dec
jb
push
xor
add
jnp
mov
sbb
mov
cmp
push
in
movs
fdivrp
add
push
outs
outs
sub
fisubr
ins
add
leave
sbb
and
push
outs
sub
add
rcl
mov
pop
or
mov
adc
xchg
push
mov
add
repz
ret
adc
rcr
cmp
adc
add
rol
lods
push
fisubr
jmp
xchg
add
push
enter
fisubr
mov
add
or
in
ficom
imul
push
jns
mov
lds
dec
jb
cmps
xor
jbe
xor
pop
jno
push
mov
cmp
scas
add
pusha
lahf
xchg
fcomi
mov
sbb
shr
push
jecxz
arpl
test
std
add
cmps
mov
xlat
adc
shl
push
jmp
ret
adc
rol
aam
shr
push
cmp
xchg
push
test
(bad)
(bad)
pop
mov
cmp
sub
jns
(bad)
jmp
xchg
test
or
clc
jbe
ret
xlat
xor
add
dec
inc
mov
mov
test
cmp
shr
fisubr
lods
sub
add
in
lahf
(bad)
fst
jnp
xchg
in
loopne
add
pop
add
lods
pop
cmp
adc
inc
or
cmps
sub
mov
add
jo
dec
sbb
pop
dec
inc
(bad)
cmps
cmps
cld
test
sub
stos
push
xlat
or
mov
jbe
and
leave
push
outs
sub
pop
push
adc
adc
rol
adc
sti
pmullw
jmp
sahf
repnz
leave
jmp
leave
loop
cmps
cmps
add
daa
push
cwde
int
in
fisubr
add
push
movs
ret
xchg
adc
out
pop
add
in
jmp
mov
test
std
add
sub
sub
repnz
mov
add
jl
mov
aad
in
ficomp
add
cmp
aaa
ins
inc
lahf
xchg
fcomi
mov
add
xchg
inc
push
jbe
push
mov
rcl
lea
loope
repz
push
adc
sub
movs
stos
mov
cmp
shr
fiadd
jmp
das
add
or
les
dec
mov
sub
ror
add
sub
xchg
xor
repz
dec
repnz
imul
adc
gs
or
daa
adc
loop
imul
jp
in
je
outs
adc
add
cmps
inc
imul
shl
push
lods
sub
xchg
shr
cdq
add
cmps
stos
xchg
sub
or
adc
push
jnp
add
pop
sub
push
sub
fs
sub
pop
pushf
leave
sub
inc
add
call
push
jp
pop
outs
push
add
push
push
pop
ins
adc
inc
add
repnz
add
pusha
or
fdivp
push
cmc
lods
pop
jo
inc
push
sub
adc
add
out
js
repnz
sti
arpl
lods
leave
(bad)
jge
adc
rol
out
add
das
jbe
add
add
out
add
cli
cli
jmp
xchg
add
add
outs
mov
add
or
addr16
add
ja
stos
(bad)
add
popf
bnd
inc
add
stos
push
jne
in
fwait
push
add
sbb
add
adc
in
inc
adc
xor
fisubr
push
arpl
mov
outs
adc
add
mov
inc
in
pop
stos
mul
(bad)
stc
jle
sub
or
add
push
dec
mov
clc
popf
add
jmp
add
test
mov
add
push
outs
cmps
pop
mov
add
pop
push
(bad)
inc
xchg
add
jp
sahf
adc
mov
add
dec
jno
add
into
in
ficomp
add
lahf
adc
jae
push
mov
stos
push
mov
mov
idiv
push
push
movs
ret
xchg
add
adc
add
push
inc
add
pushf
add
lahf
outs
push
jmp
dec
add
jmp
bound
add
mov
add
ins
add
push
in
jmp
add
mov
add
test
mov
mov
lods
sub
int3
in
fiadd
fmul
xchg
test
add
add
push
ins
test
fmul
xchg
test
add
pop
shr
(bad)
movs
dec
mov
in
push
add
mov
add
pop
push
push
(bad)
inc
add
add
jne
stos
(bad)
jmp
push
dec
jge
add
clc
movs
jecxz
add
jbe
or
jbe
movsx
add
or
jmp
leave
shr
push
in
adc
add
add
adc
push
movs
ret
adc
lods
push
in
inc
add
hlt
mov
mov
add
add
pop
push
(bad)
adc
call
push
popa
or
xor
cmc
inc
push
dec
push
add
inc
outs
add
sbb
inc
arpl
and
add
push
push
inc
gs
cmc
inc
push
(bad)
jmp
mov
ss
add
xlat
mov
add
jb
dec
mov
mov
push
mov
add
inc
test
push
sar
fiadd
bound
(bad)
sub
inc
add
jmp
adc
jno
add
add
adc
sbb
sub
(bad)
sub
inc
add
add
movs
das
mov
in
jmp
xchg
std
add
cmp
inc
add
xchg
(bad)
in
icebp
push
mov
hlt
inc
add
in
inc
add
push
push
(bad)
inc
fs
add
lods
sub
xchg
push
inc
add
lahf
lods
push
aam
add
pop
cdq
jo
add
push
inc
mov
inc
add
inc
add
in
mov
push
(bad)
inc
fs
movs
inc
push
(bad)
jmp
in
add
add
mov
add
adc
jo
push
movs
ret
adc
add
xchg
(bad)
in
add
add
add
test
inc
fs
clc
add
add
add
xchg
push
cmp
push
jp
add
add
adc
pop
push
jbe
push
mov
clc
xchg
dec
cs
stc
jle
sub
cmps
movs
movs
arpl
adc
movs
add
lock
outs
sub
ficom
int3
and
add
rol
or
mov
or
mov
bound
sti
int
push
sub
in
js
xchg
sbb
int3
add
fisubr
and
or
add
push
(bad)
jno
add
clc
xor
push
mov
jbe
mov
add
xor
inc
xor
add
aam
js
(bad)
inc
add
nop
jmp
add
pop
in
push
in
mov
add
pop
lods
sar
popf
add
add
aas
inc
add
stos
push
jno
adc
bound
push
lods
inc
movs
pop
or
lahf
add
sub
test
xchg
arpl
ins
shl
push
add
adc
sbb
clc
test
add
or
add
or
outs
add
mov
sbb
ja
pop
push
xchg
jnp
ins
shl
sbb
pusha
ja
add
lahf
lods
push
inc
add
add
lods
dec
add
add
std
add
stos
(bad)
mov
add
add
ins
sbb
jne
fisubr
repnz
test
add
push
(bad)
sub
add
push
pop
leave
push
add
mov
(bad)
je
adc
xchg
in
aam
or
gs
ins
add
repnz
bnd
scas
inc
add
repnz
cmps
add
pusha
lahf
pushf
push
jl
jmp
xchg
mov
add
lods
inc
add
ins
fs
out
popa
clc
sti
mov
push
jbe
adc
rcr
gs
sbb
adc
ins
sub
imul
add
add
add
pop
push
or
add
(bad)
cdq
call
sbb
lahf
add
jmp
jge
add
cdq
sub
(bad)
jge
add
sub
cmps
nop
pop
push
lods
dec
adc
jp
pop
sub
add
movs
out
jnp
push
pop
test
adc
(bad)
loope
jp
push
dec
xor
sbb
test
mov
adc
int
push
mov
lahf
mov
push
lods
inc
call
outs
xchg
retf
(bad)
ins
rcr
fist
mov
add
div
jb
mov
adc
lea
stos
pop
inc
inc
push
stos
cs
lods
push
dec
add
add
pop
mov
sub
call
push
inc
in
cs
add
ficomp
xlat
fisubr
repnz
mov
add
lea
lods
sahf
ins
and
test
mov
add
(bad)
jmp
jbe
add
clc
pusha
jns
dec
pop
push
push
push
inc
fisubr
repnz
xchg
inc
push
fwait
sub
xchg
inc
adc
cmp
jmp
xchg
push
xchg
mov
dec
adc
xchg
pop
push
pop
pop
fisubr
repnz
inc
xchg
fdivr
lahf
outs
lods
mov
add
dec
mov
add
or
add
or
ins
add
mov
sbb
out
pop
push
xchg
mov
pop
adc
mov
or
call
or
dec
push
inc
mov
add
pop
or
les
sbb
daa
adc
push
jae
repz
ins
pusha
sub
mov
jmp
xor
add
jl
jmp
daa
add
mov
add
add
leave
push
add
std
add
jecxz
lahf
fwait
pusha
sti
push
pop
das
das
or
shr
jo
pop
mov
jmp
mov
push
lods
loop
rol
(bad)
in
push
scas
add
jl
sub
mov
ja
add
popf
repnz
inc
es
jo
pop
push
xchg
or
xchg
mov
mov
add
lods
(bad)
xchg
in
mov
add
jge
repnz
add
adc
mov
push
jl
imul
(bad)
in
icebp
dec
lods
dec
add
jp
pop
shr
js
dec
lods
sub
call
das
jne
ins
in
cmp
imul
push
lods
(bad)
push
in
movs
outs
add
adc
pop
push
xchg
fwait
lds
xor
std
add
xor
pushf
push
jl
jmp
mov
inc
adc
push
jbe
push
movs
ret
xchg
sub
pop
xchg
mov
inc
call
add
push
push
frstor
add
pop
clc
xchg
inc
add
push
aam
fdiv
sbb
lahf
jno
add
pop
cmp
inc
or
fild
push
outs
test
jp
sub
outs
lea
push
mov
mov
lea
arpl
sub
hlt
outs
add
add
mov
xlat
adc
pop
(bad)
inc
add
push
mov
push
dec
xchg
xchg
add
jns
add
clc
lods
imul
add
shl
jb
rcl
inc
ret
js
sahf
lods
jbe
adc
dec
and
lea
adc
or
add
mov
jmp
sub
add
sub
ins
add
lea
out
cli
jne
adc
ins
adc
jmp
bound
push
xchg
adc
popa
add
jb
rcl
fld
xchg
inc
add
add
sub
jge
lea
enter
dec
(bad)
repnz
dec
jnp
dec
xchg
clc
fwait
push
add
add
add
rol
add
aas
inc
add
loopne
add
popa
push
xchg
jno
add
lahf
mov
add
fld
push
mov
in
(bad)
add
xor
inc
mov
xor
add
ins
adc
lahf
jae
repnz
add
sub
gs
mov
add
pop
sbb
pop
retf
fldcw
fisubr
or
push
lahf
daa
mov
add
iret
shl
lods
push
test
add
dec
mov
add
jp
hlt
gs
lea
fcom
in
pop
inc
dec
sub
push
jne
fisubr
stos
hlt
sub
imul
jmp
add
push
jne
in
or
push
xchg
inc
movs
add
pop
gs
jno
mov
lahf
jb
jg
add
xor
inc
xor
push
stos
pop
enter
or
cmp
(bad)
stos
ficomp
clc
fcomp
inc
mov
stos
push
ins
push
pop
push
push
push
inc
adc
(bad)
adc
pop
mov
jmp
add
pop
enter
fwait
xchg
fcomi
mov
add
add
imul
add
jmp
add
pop
dec
popa
inc
push
stos
cs
shr
add
in
and
add
fwait
xchg
fcomi
jne
in
popf
mov
shr
pop
imul
lock
add
xlat
ins
ror
adc
dec
adc
test
inc
imul
dec
sahf
mov
inc
in
mov
adc
push
fisubr
or
outs
add
test
adc
jmp
mov
scas
retf
pop
test
push
adc
dec
dec
mov
test
std
add
stos
ficom
push
jno
repz
(bad)
push
lods
dec
adc
shr
ins
sub
(bad)
jbe
sub
je
pop
push
lods
dec
cmp
sub
add
ins
lods
(bad)
sbb
in
fidiv
fdiv
add
bound
xchg
ficomp
clc
mov
nop
int
in
fisubr
ins
adc
push
jns
adc
add
(bad)
jge
fptan
pusha
pusha
inc
xor
leave
retf
pop
cmp
sub
add
xor
leave
jmp
in
fisubr
jmp
xchg
jmp
arpl
push
mov
enter
std
add
outs
sub
outs
test
and
mov
mov
inc
adc
jl
out
pop
mov
mov
aas
out
cmp
shr
fisubr
adc
mov
repz
ins
lods
(bad)
sbb
in
fisubr
pushf
jne
add
pop
add
xchg
ficomp
clc
jg
add
add
int
in
fisubr
ins
adc
push
jns
adc
add
xchg
mov
jge
fptan
mov
xchg
leave
retf
cmps
mov
sub
add
int
popf
test
test
mov
js
pop
ins
pop
inc
jbe
lods
hlt
jbe
cmp
fbld
cmp
shr
fiadd
xchg
sub
leave
loop
call
js
dec
lods
sub
mov
fcom
(bad)
jne
mov
adc
shl
fisubr
jmp
cmp
add
jmp
mov
adc
shl
repnz
mov
add
sub
adc
add
inc
mov
add
test
sub
jge
in
iret
arpl
add
lods
ja
popf
clc
pusha
cmps
add
push
push
int
sub
dec
mov
adc
xlat
in
fisubr
pop
mov
cmps
and
lahf
sub
call
nop
std
add
adc
outs
test
inc
jmp
pop
add
or
rol
outs
push
push
mov
call
add
stos
(bad)
jbe
sub
mov
dec
cmp
sub
ficom
pop
aaa
add
push
std
push
stos
inc
xchg
fs
or
fild
adc
fs
call
jmp
retf
jmp
pop
push
jns
inc
adc
pop
add
jo
dec
mov
adc
add
cmp
jmp
cmp
inc
xchg
in
fsub
cmps
inc
pop
or
repz
ficom
not
add
test
cmps
and
lahf
sub
call
nop
std
add
adc
outs
test
inc
jmp
pop
add
or
rol
outs
push
push
mov
call
add
stos
(bad)
jbe
sub
jl
pop
push
lods
dec
cmp
sub
ficom
cld
xor
push
stos
inc
xchg
fs
or
fild
adc
and
add
push
(bad)
jmp
mov
pop
push
jns
inc
adc
push
dec
mov
adc
add
cmp
jmp
cmp
inc
xchg
in
pushf
cmps
add
test
sub
stos
pop
dec
xlat
add
test
cmps
and
lahf
sub
call
(bad)
std
add
adc
outs
test
inc
jmp
pusha
add
or
rol
outs
push
push
mov
call
add
stos
(bad)
jbe
sub
cmp
pop
push
lods
dec
cmp
sub
ficom
xchg
xor
add
push
stos
inc
xchg
fs
or
fild
adc
in
add
push
(bad)
jmp
dec
mov
pop
push
jns
inc
adc
add
jo
dec
mov
adc
add
cmp
jmp
cmp
in
push
jnp
xchg
in
pop
cmps
add
jmp
sub
mov
jb
dec
sbb
jmp
leave
push
sub
pop
push
pop
or
adc
sub
leave
ret
pop
inc
dec
jno
imul
adc
in
lods
hlt
jbe
sbb
iret
cmps
pop
push
xchg
scas
(bad)
ins
shl
dec
push
jmp
pusha
add
or
shl
fisubr
push
push
int
adc
(bad)
stc
push
test
fisubr
sub
add
or
pop
(bad)
jge
(bad)
(bad)
inc
es
leave
push
outs
sub
push
jnp
fwait
in
dec
test
add
test
adc
pop
add
jb
dec
cmp
sub
sub
adc
add
dec
sbb
jmp
leave
push
sub
pop
push
pop
or
adc
pop
push
xchg
sub
leave
ret
pop
inc
dec
jno
imul
adc
in
lods
hlt
jbe
sbb
(bad)
movs
pop
push
xchg
dec
(bad)
ins
shl
dec
push
jmp
pusha
add
mov
jmp
pop
test
adc
add
std
push
stos
inc
xchg
fs
or
fild
adc
movs
add
push
(bad)
jmp
retf
jmp
pop
push
jns
inc
adc
imul
adc
xchg
ficomp
clc
shrd
leave
pop
enter
jo
push
cmp
mov
mov
add
dec
mov
adc
jecxz
fisubr
mov
sahf
dec
pop
and
mov
push
stos
inc
dec
(bad)
ins
lods
mov
pop
pop
lahf
adc
lea
push
jns
mov
scas
sti
add
imul
int
xchg
ret
sub
test
add
int
popf
test
add
mov
jb
add
outs
xchg
or
push
inc
cs
mov
scas
cmps
xchg
test
sub
cmps
movs
movs
arpl
int
rcl
fnstsw
add
cmps
xor
lock
xchg
pop
sub
cmp
in
fisubr
cmp
in
repnz
add
dec
mov
mov
lods
sahf
pop
push
push
std
ins
push
fisubr
or
movs
jmp
add
jbe
or
xchg
mov
(bad)
mov
jb
adc
add
imul
adc
adc
hlt
movs
out
rol
popf
push
mov
clc
xor
pop
push
jb
(bad)
inc
mov
in
inc
pop
pop
pushf
sbb
inc
add
cmp
inc
add
add
jo
add
push
outs
test
cmp
(bad)
inc
in
sub
mov
rol
pushf
repnz
inc
or
sti
xchg
pop
shr
fisubr
xchg
adc
xor
dec
xchg
jmp
stos
sub
mov
add
lods
xor
lods
fidivr
dec
sbb
or
or
adc
lea
fisub
fldcw
ins
lods
sub
push
cmp
out
mov
cs
test
(bad)
in
test
cmp
fdivr
pop
(bad)
mov
cmps
pop
rol
and
stos
hlt
jne
in
or
add
inc
aas
add
lahf
mov
fs
popf
add
adc
push
xor
xchg
add
add
inc
push
add
sub
dec
mov
push
stos
(bad)
sbb
jbe
push
mov
clc
scas
add
push
outs
test
cld
repnz
add
adc
fstp
test
sub
pop
test
mov
jl
add
jo
add
(bad)
and
or
or
jp
mov
add
movs
sbb
and
jp
cli
add
xchg
sub
iret
in
fisub
add
popf
pop
push
in
rcr
sahf
lods
dec
call
push
rol
add
ss
push
xor
cmps
call
call
lods
repnz
cmp
or
inc
fidiv
cdq
hlt
jne
in
retf
add
cmp
aam
push
cld
(bad)
aaa
cmp
push
xor
sbb
cmp
(bad)
clc
jmp
jbe
leave
and
add
xchg
sub
jmp
sub
push
hlt
jne
in
and
add
adc
add
pop
push
inc
into
push
inc
in
mov
add
lahf
lods
inc
call
sub
xchg
xchg
push
stos
(bad)
sub
out
push
(bad)
adc
add
mov
mov
cmps
cdq
pop
push
lods
jbe
push
jbe
repnz
push
inc
lea
add
jbe
inc
push
repz
adc
push
je
push
mov
or
lea
add
sbb
push
inc
add
loop
popa
jne
cs
jmp
sbb
xchg
test
js
fisubr
push
in
stc
pop
add
repnz
imul
jne
mov
or
add
pop
clc
sub
jmp
sub
pop
jbe
test
ins
adc
aaa
pop
ins
sbb
sahf
dec
xchg
(bad)
in
push
test
or
add
pop
test
xchg
dec
gs
mov
mov
lock
adc
sar
sub
outs
add
push
add
add
sub
xor
call
push
icebp
mov
jbe
pop
add
clc
jge
add
push
stos
push
dec
gs
mov
call
add
add
test
inc
mov
scas
add
or
adc
push
push
jge
repnz
add
jge
push
test
jmp
jbe
add
push
jne
add
mov
jl
jmp
push
add
scas
mov
add
jmp
and
fsubr
daa
xchg
(bad)
lock
jmp
add
pop
dec
push
inc
dec
sub
xchg
enter
adc
gs
pushf
jo
lods
dec
call
push
adc
add
lahf
sbb
(bad)
fadd
add
dec
(bad)
adc
fyl2xp1
xchg
add
test
repz
adc
add
push
stos
data16
mov
(bad)
xor
add
push
mov
lods
adc
push
add
xor
xchg
push
test
stos
dec
mov
lods
mov
add
test
hlt
pop
cld
sub
pop
mov
or
lods
jbe
adc
pop
push
mov
cwde
xor
gs
inc
lea
mov
or
pop
mov
in
jmp
ins
adc
add
js
mov
dec
arpl
outs
sub
xchg
lds
dec
xor
sub
add
lea
lods
inc
call
ins
clc
(bad)
xchg
(bad)
ja
xchg
ins
adc
shl
aaa
call
bts
push
xchg
das
mov
push
mul
test
or
js
ret
lods
sub
push
icebp
mov
add
pop
pop
mov
pop
outs
js
add
(bad)
cdq
dec
push
add
cmp
adc
ins
adc
jmp
pop
add
push
xchg
or
arpl
sbb
cli
jge
mov
xchg
add
add
xlat
mov
sub
jns
mov
shr
test
jnp
add
adc
add
add
push
adc
add
cmps
push
adc
jo
ret
ins
rcl
js
shr
outs
mov
or
xor
push
mov
lods
(bad)
sbb
mov
(bad)
jb
xchg
lock
enter
nop
add
xor
push
push
add
pushf
push
jl
jmp
pop
add
or
push
add
mov
jmp
pop
(bad)
cli
add
push
adc
popa
ja
or
add
or
imul
in
test
js
xor
test
ins
popa
popa
sar
cli
in
ret
xlat
das
sub
sti
sub
lock
xor
and
adc
jnp
(bad)
ins
sub
pop
lods
dec
or
cmps
push
add
dec
sub
cdq
sub
xor
sbb
xchg
add
jne
in
xchg
mov
jmp
sub
sahf
outs
adc
lea
add
cli
out
cmp
add
das
jne
les
inc
xchg
sub
mov
js
cs
rcl
mov
shl
in
ficomp
(bad)
in
pop
xchg
mov
jno
leave
fs
mov
aam
inc
js
pop
xchg
sbb
add
mov
int3
loopne
add
cmp
push
test
adc
pop
leave
add
pusha
imul
pop
xchg
mov
jno
leave
gs
lahf
mov
fs
cmc
jmp
movs
mov
fsub
in
cmps
push
sub
sub
inc
popa
adc
mov
push
fnstsw
aam
dec
mov
(bad)
in
push
mov
clc
sub
(bad)
in
push
jl
or
clc
nop
stos
add
push
xchg
jge
add
lahf
mov
fs
rol
rcl
(bad)
stc
push
push
push
inc
fs
add
pop
push
sub
xchg
inc
mov
pop
imul
add
stos
push
jb
xor
add
jo
jae
push
(bad)
ins
sbb
sbb
inc
add
(bad)
shl
imul
add
pop
mov
push
pop
ins
adc
jmp
jae
add
cdq
sub
mov
fist
add
adc
fst
or
call
das
xchg
add
add
adc
jnp
(bad)
je
jo
xor
push
push
jle
push
outs
xchg
and
fcmovbe
pusha
adc
jmp
dec
xor
sbb
xchg
adc
cli
fild
cdq
sub
add
inc
leave
test
xchg
fcomi
jne
in
xchg
xchg
add
movs
add
test
pop
jmp
jbe
add
sub
ins
add
push
push
inc
or
pop
add
sub
mov
imul
(bad)
adc
add
pop
inc
and
add
push
(bad)
sub
add
push
pop
leave
push
add
std
add
hlt
ins
xlat
arpl
sub
add
lods
mov
cmp
adc
xchg
or
call
daa
xchg
add
push
push
(bad)
mov
inc
aam
imul
loope
lock
mov
add
mov
jl
lea
call
pop
das
das
push
aad
daa
jns
hlt
jge
in
cs
out
or
lea
fmul
ret
test
lods
jbe
adc
pop
leave
mov
push
add
hlt
jo
pop
pop
pop
(bad)
stc
dec
sub
push
or
jl
js
ja
enter
add
jmp
ja
cmp
push
scas
jo
or
inc
cli
jae
in
cmps
push
mov
or
int
popf
imul
(bad)
fisub
loope
(bad)
jmp
(bad)
add
retf
or
bound
add
es
rol
div
pop
xor
imul
sub
call
js
repnz
mov
add
das
pop
jmp
mov
push
retf
jge
jo
pop
sub
mov
push
stos
ficomp
sahf
sahf
stos
mov
(bad)
in
pop
das
jbe
lea
enter
(bad)
gs
add
lods
sub
test
xchg
mov
sbb
push
pop
lods
js
fisubr
ins
adc
outs
sub
adc
(bad)
sub
lea
fld
aad
outs
pop
jmp
pop
add
fs
push
test
push
mov
ror
push
stc
push
stos
or
add
push
adc
push
jnp
or
add
adc
xchg
(bad)
jmp
add
pop
call
xchg
jmp
mov
add
push
mov
pop
add
add
add
mov
retf
out
adc
lea
add
jl
add
cs
cmc
repnz
xchg
add
push
es
mov
test
dec
mov
dec
sub
std
push
movs
loop
popf
jne
add
mov
ins
xor
sahf
lods
inc
clc
xor
or
pop
jp
pop
imul
repnz
adc
mov
call
lods
push
pop
(bad)
je
lods
stos
cli
ins
repz
loope
std
add
push
das
pop
mov
shr
push
lods
push
lods
aad
add
hlt
jne
in
iret
xchg
add
add
jecxz
in
out
add
inc
pop
mov
inc
push
stos
cli
pop
gs
lea
stos
push
jne
(bad)
jl
adc
fs
inc
stos
cs
test
push
add
pusha
test
call
sub
and
test
adc
mov
push
pop
pop
(bad)
jl
jne
add
loope
add
js
btr
xor
out
lods
hlt
gs
unpckhps
ins
hlt
jo
push
das
push
push
add
add
push
push
xor
popa
repnz
ins
inc
pop
sub
add
adc
jp
cdq
sub
cmp
add
outs
push
push
xchg
dec
adc
mov
add
hlt
jo
pop
xchg
add
test
adc
rcr
adc
xor
fdiv
dec
leave
xor
gs
fwait
dec
sahf
mov
inc
in
mov
adc
push
fisubr
or
es
add
dec
test
ja
jne
cs
jmp
sbb
pop
add
inc
fisubr
add
pushf
push
jnp
lahf
in
popf
xchg
add
add
dec
lods
inc
cmp
inc
pop
or
gs
shl
dec
push
jmp
jo
add
push
adc
jb
dec
pop
adc
mov
mov
outs
inc
pop
cmp
push
imul
inc
push
adc
je
add
mov
or
je
add
leave
call
popa
fld
sub
sub
xor
sub
fimul
imul
add
push
outs
test
jns
mov
jno
add
mov
cmp
sub
pop
push
cmp
pop
xor
leave
loop
sub
add
xor
leave
into
jo
and
data16
adc
popa
or
loopne
pop
dec
pop
adc
jb
dec
repnz
lds
sub
sub
sub
add
loope
stos
ficomp
shr
ficomp
shr
fisubr
jb
add
jae
ja
cdq
or
jecxz
adc
jb
dec
adc
adc
xchg
in
aam
dec
mov
dec
leave
dec
outs
sub
ds
sbb
cwde
xchg
pop
push
stos
(bad)
adc
jb
dec
jb
fisubr
sub
add
dec
inc
stos
ficomp
shr
ficomp
shr
fidivr
xchg
jb
add
jae
pop
(bad)
jge
mov
jg
inc
push
fwait
jb
dec
mov
(bad)
xchg
add
push
imul
sub
cwde
add
int
in
fisubr
dec
dec
add
mov
shr
jb
add
jb
dec
adc
xlat
xchg
add
push
imul
sub
cwde
add
int
mov
ins
ins
shr
ficom
mul
add
mov
mov
push
jae
jmp
outs
shr
pop
ret
inc
pop
adc
inc
jae
test
scas
cmps
test
inc
imul
shl
push
jmp
push
adc
cmps
cmps
push
fwait
inc
mov
xor
leave
jp
pop
push
ins
test
pop
push
arpl
fimul
add
lods
pop
fisubr
or
add
fadd
enter
fisubr
fld
cmp
sub
jmp
add
sbb
inc
mov
popf
outs
add
cmp
or
or
je
adc
rol
sbb
or
sahf
fild
sbb
push
pop
test
push
add
sbb
inc
mov
push
call
add
cs
jne
in
adc
add
cdq
jmp
sbb
inc
add
call
test
jp
pop
test
push
pop
ins
adc
inc
cs
jb
call
push
mov
in
sbb
add
es
loope
popf
mov
or
push
add
in
movs
push
add
jmp
nop
xchg
cmc
shr
(bad)
out
jmp
sti
add
test
mov
sbb
add
lods
js
fisubr
ins
adc
outs
sub
push
jnp
add
in
fdiv
adc
pop
fld
mov
push
push
stos
add
add
mov
out
mov
inc
adc
adc
pop
cwde
sub
(bad)
pusha
adc
xor
cs
icebp
jb
dec
sbb
xchg
test
shr
fisubr
add
sub
or
dec
add
adc
stos
sbb
mov
clc
pop
xrelease
push
pop
lods
lahf
jb
call
add
add
test
std
adc
lods
out
dec
repz
in
fisubr
dec
add
sub
cli
outs
add
mov
hlt
inc
pushf
call
add
mov
scas
shl
in
ficomp
add
clc
test
in
ficomp
jae
dec
add
cmp
out
jp
aad
cs
cmps
pop
sub
inc
popf
jmp
dec
cld
imul
fcom
je
mov
arpl
jp
clc
pop
repz
ret
mov
xrelease
pop
pop
imul
add
daa
jno
stos
(bad)
jmp
add
clc
adc
pop
add
push
cmp
xchg
push
test
test
push
mov
add
pusha
add
pop
mov
mov
pop
add
add
add
js
ja
adc
add
cmp
in
out
add
add
adc
adc
push
shr
fcmovb
mov
adc
add
mov
adc
sar
repnz
out
test
test
push
in
bnd
test
lahf
outs
adc
add
cmps
ret
movs
push
nop
xchg
call
sbb
hlt
pop
mov
dec
xchg
add
push
sbb
scas
es
adc
out
sub
fist
mov
add
jo
ss
add
lods
adc
push
ins
add
add
and
adc
aad
outs
pop
jmp
xchg
add
inc
jb
push
test
xor
xor
mov
add
sbb
jmp
mov
mov
jp
push
jne
mov
sub
add
repnz
jp
push
adc
ja
sbb
adc
aas
out
icebp
adc
add
clc
pop
(bad)
cmp
xchg
fldcw
dec
lods
sub
(bad)
push
in
lea
fwait
or
int
pushf
imul
(bad)
imul
pop
outs
sub
fisubr
inc
adc
add
in
fdiv
push
jne
fldcw
dec
lods
sub
(bad)
in
ret
mov
sub
(bad)
pop
out
test
push
(bad)
je
sahf
add
test
mov
sub
movs
imul
lahf
adc
push
fld
call
adc
add
add
gs
cmp
inc
adc
lea
rep
inc
add
xchg
add
test
or
std
add
ins
add
fisubr
or
mov
test
ja
xchg
repnz
sub
add
push
fisubr
repnz
adc
add
stos
push
imul
push
scas
es
adc
hlt
jne
in
push
pop
add
xor
dec
push
xor
clc
(bad)
clts
call
fidivr
or
clc
ja
add
push
imul
add
sahf
lods
jbe
adc
pop
push
pop
pop
(bad)
je
adc
mov
mov
pop
push
adc
loop
test
scas
xor
add
das
das
push
mov
shr
pop
inc
pop
jge
test
push
mov
lods
sub
pushf
call
mov
sar
push
and
push
fs
test
sub
(bad)
push
xor
jmp
shl
ja
xchg
mov
xchg
les
(bad)
xchg
dec
jg
in
jo
pop
push
add
ret
mov
push
sub
out
add
sub
jg
or
into
js
push
jne
push
pop
xchg
add
test
adc
cmp
cmp
aam
cmps
sbb
mov
or
mov
ficomp
shr
push
sub
add
jnp
xor
adc
in
fisubr
sbb
es
push
into
js
lahf
call
pop
test
mov
cli
daa
in
push
or
fs
inc
call
adc
std
add
mov
mov
clc
inc
test
mov
jb
pop
add
ret
mov
push
xor
push
mov
add
sbb
jno
add
or
push
test
inc
mov
push
stos
ficomp
(bad)
in
push
lods
add
mov
js
pop
pusha
hlt
add
test
add
mov
arpl
fiadd
jne
gs
inc
call
adc
scas
add
add
aad
xor
fisubr
test
ins
rcl
ins
ror
(bad)
jne
in
sub
add
das
(bad)
in
push
jl
or
clc
sbb
mov
push
dec
add
add
lods
inc
add
sub
jmp
fild
add
sub
imul
in
stos
hlt
movs
add
add
in
lock
add
pop
push
stos
data16
call
add
inc
mov
add
in
cmp
call
push
jp
mul
in
lods
nop
add
lea
add
pop
test
push
jl
jmp
ret
test
add
add
(bad)
inc
push
fwait
jb
sbb
fld
add
in
cmc
ret
add
sub
or
cs
cmc
sbb
test
sub
sar
pop
out
pop
loopne
in
push
lods
push
enter
scas
(bad)
fldcw
mov
and
rcl
push
mov
mov
cli
sub
jo
inc
or
shl
or
sbb
pop
mov
lea
fidiv
(bad)
adc
gs
mov
sub
je
js
pop
repnz
mov
xor
jno
mov
cli
xor
ja
mov
lods
cmp
push
fsubrp
add
mov
ret
mov
pop
les
hlt
jo
inc
pop
pop
imul
(bad)
in
push
movs
xor
dec
pop
shr
jl
sub
jmp
ins
ins
and
adc
add
mov
inc
xor
in
inc
pop
inc
adc
jl
sbb
ins
rcl
(bad)
ins
hlt
sbb
(bad)
xor
popf
addr16
fldcw
aas
lods
sub
(bad)
in
shl
mov
mov
in
push
jl
push
aam
out
push
outs
sub
fwait
imul
cmp
fprem
gs
xchg
call
stos
inc
mov
cdq
push
adc
shr
add
(bad)
rol
daa
sbb
adc
add
add
stos
push
fcmovnb
inc
adc
mov
or
cmps
add
push
pop
add
loope
stos
(bad)
jmp
int3
sub
(bad)
gs
mov
jne
adc
mov
push
mov
push
imul
pop
lahf
fwait
repnz
add
es
stc
fiadd
add
mov
enter
scas
(bad)
and
out
fisubr
test
add
push
add
sub
add
cmp
ins
stos
(bad)
adc
(bad)
stc
pop
xor
push
std
test
leave
sub
cwde
test
call
mov
adc
fst
call
or
xor
cmp
rcl
push
stos
cli
sbb
add
add
pop
outs
sub
fisubr
or
mov
sub
ins
shl
sti
mov
and
or
jb
dec
mov
cmps
add
shr
icebp
ja
dec
add
pop
add
popa
sub
in
add
stc
add
into
popa
adc
sub
xor
out
pop
mov
cli
ins
mov
test
xor
lods
rol
call
sub
repnz
xor
js
in
jmp
xor
add
test
inc
lea
sub
fisubr
leave
sub
shld
mov
mov
mov
shr
fldcw
in
enter
or
es
cmc
(bad)
ins
fisttp
repnz
adc
nop
retf
hlt
dec
pop
jmp
add
outs
sub
fnstsw
jo
jb
push
lea
sub
pop
jecxz
fcmovnbe
out
lods
xor
rcl
clc
ja
mov
aas
sub
jle
cmp
ror
sar
jae
inc
adc
gs
dec
(bad)
in
jb
fiadd
xor
and
mov
add
jmp
ins
ins
and
jmp
add
fwait
xchg
jp
mov
js
dec
bound
push
lahf
lods
inc
int3
pop
push
stos
push
lahf
lods
inc
in
push
stos
repnz
lods
inc
call
push
inc
mov
cmp
test
ins
rol
pop
mov
add
repnz
add
cs
sbb
adc
int3
repz
mov
adc
xchg
xor
xor
ror
stos
push
cli
ins
retf
mov
or
xchg
or
sbb
adc
xor
fisubr
in
push
adc
repnz
xchg
ins
push
fisubr
sub
ret
out
fiadd
fsub
pop
sbb
push
xor
iret
rcr
leave
cmp
cmp
mov
(bad)
dec
mov
and
nop
ins
fisubr
push
outs
test
sahf
cmp
dec
adc
fstp
lods
sub
pushf
lock
outs
retf
mov
sbb
mov
daa
push
fild
(bad)
cdq
ror
repz
stos
fiadd
lds
popf
js
jbe
inc
sub
adc
(bad)
stc
push
stos
out
xor
xchg
adc
jle
push
popa
pop
xchg
add
fisubr
js
cs
push
lods
sub
mov
dec
in
jg
cs
push
lods
sub
nop
scas
add
fisubr
ret
push
stos
fiadd
mov
cmp
add
adc
add
or
pushf
outs
stos
mov
out
daa
add
in
pop
stos
fisubr
mov
xor
add
pusha
push
fstp
inc
jmp
adc
mov
add
push
jl
push
push
inc
mov
xchg
push
test
sub
test
sbb
mov
call
add
jmp
js
add
lahf
push
jo
xchg
add
dec
add
pop
sbb
xor
inc
stos
popf
call
push
mov
mov
mov
mov
add
push
fstp
rol
cvtps2pd
jmp
xchg
(bad)
into
in
ficom
lahf
add
aas
sbb
adc
add
into
popa
xor
jmp
cwde
stos
into
in
fiadd
mov
(bad)
bound
fisubr
sbb
fwait
lods
cdq
sub
(bad)
jne
lock
jb
inc
lock
xchg
jns
or
jbe
jne
or
mov
lea
jbe
jb
imul
mov
jbe
jne
or
pop
cmps
fdiv
jmp
in
fimul
shr
ficomp
add
outs
mov
jp
jmp
adc
jbe
inc
jecxz
ror
mov
sbb
stos
bound
test
mov
pop
mov
jbe
jne
or
pop
sahf
fdiv
jmp
in
fimul
and
mov
lea
sub
test
mov
fnstenv
adc
out
mov
adc
dec
and
outs
sub
lods
shl
lea
cmps
ror
pop
cmps
aam
jmp
xchg
or
adc
jbe
add
adc
ror
sbb
clc
sbb
clc
sbb
clc
sbb
clc
sbb
pusha
sub
jp
loope
adc
mov
adc
repnz
ror
pop
sahf
aam
mov
and
xchg
out
fldcw
push
(bad)
push
ror
rcr
sbb
sub
lock
mov
adc
jb
imul
scas
push
mov
mov
jbe
pop
ret
mov
test
sbb
push
cmps
shl
ficomp
mov
mov
xor
lea
mov
xchg
mov
lea
lock
add
xchg
dec
das
pop
lea
jbe
inc
fadd
xor
push
stos
jno
and
cs
mov
das
mov
add
test
sub
cdq
inc
sbb
or
add
push
call
adc
jle
push
xchg
sub
std
fisubr
add
sub
outs
sti
sub
sub
aad
or
push
mov
and
js
outs
push
xchg
cs
jo
mov
enter
popa
pop
xchg
mov
outs
call
movs
xor
pop
das
mov
add
test
sub
cdq
inc
sbb
or
add
push
call
adc
jge
push
xchg
sub
std
fisubr
add
sub
outs
sti
sub
sub
aad
push
jge
push
mov
and
js
outs
push
xchg
mov
enter
popa
pop
xchg
mov
outs
call
movs
xor
lock
mov
stos
test
mov
jbe
add
xchg
pop
add
cmc
fild
pop
test
push
mov
int3
xor
ins
dec
xchg
cld
in
fisubr
jbe
adc
(bad)
sbb
lea
popf
call
push
mov
mov
mov
mov
add
push
fstp
pushf
mov
xchg
adc
push
stos
push
popf
mov
or
lea
popf
call
jb
mov
adc
mov
ins
xor
mov
mov
or
add
ins
dec
popf
lods
push
adc
js
add
into
inc
jmp
add
retf
out
in
test
das
mov
lods
push
adc
dec
inc
cli
push
js
outs
xchg
cmps
fwait
pusha
sti
push
leave
sub
push
push
lods
sub
jae
add
jl
mov
add
adc
dec
inc
cli
push
js
outs
xchg
cmps
fwait
pusha
sti
push
cdq
dec
loop
rcr
ficomp
xor
and
rol
jp
inc
jae
dec
adc
sbb
test
in
jne
jmp
and
and
pop
test
inc
sti
xchg
push
mov
mov
push
stos
(bad)
push
add
shl
cvtps2pd
push
add
cmp
js
outs
adc
add
cdq
sub
lds
scas
dec
adc
int
push
lods
sub
add
enter
pusha
bound
call
clc
(bad)
add
(bad)
fisubr
pop
sbb
adc
jnp
test
call
add
ins
and
push
test
add
pop
stos
jnp
add
push
jne
add
(bad)
ja
xchg
int3
xchg
(bad)
in
icebp
push
stos
ret
sbb
and
cli
mov
add
fisttp
out
inc
pop
pop
jbe
push
jl
jmp
mov
adc
test
add
jmp
test
add
push
push
lods
hlt
jne
in
fidiv
adc
or
add
or
outs
mov
in
cmp
jge
or
lea
fsubr
mov
push
add
dec
test
ja
fild
sbb
add
lods
fwait
add
cdq
sub
push
fst
sub
fstp
inc
imul
sti
add
add
push
fsubr
(bad)
shl
sbb
dec
dec
add
js
pop
adc
call
hlt
mov
stos
test
mov
jbe
dec
pop
imul
cmp
add
mov
xor
leave
rcr
fild
add
add
scas
push
popf
clc
adc
fcomp
pop
pop
add
dec
cmp
mov
in
jg
add
cdq
rcr
cld
es
mov
stos
test
mov
jbe
dec
pop
imul
repz
add
mov
xor
leave
rcr
fild
lea
add
imul
add
push
jbe
sub
mov
and
mov
rcr
fild
push
bound
jmp
pop
add
or
lds
jbe
inc
pop
rol
adc
arpl
daa
adc
inc
add
jo
add
push
push
loope
adc
pop
(bad)
rcl
in
(bad)
add
(bad)
loopne
iret
jae
dec
adc
fnstsw
jmp
xchg
shr
add
test
nop
add
out
js
repnz
xchg
gs
cmc
lods
sahf
pop
jmp
xchg
add
pop
popa
push
add
icebp
mov
sub
jl
add
add
pop
enter
in
fisubr
pop
cld
jmp
add
inc
and
jbe
mov
xor
jmp
nop
add
push
js
add
ret
popa
arpl
push
lea
shl
add
inc
in
mov
mov
repnz
xchg
add
pusha
add
add
ret
pop
out
in
scas
cli
push
add
push
call
jmp
adc
scas
fidiv
adc
icebp
bnd
add
pusha
mov
sub
fcmovb
out
pop
test
dec
mov
lods
loop
mov
jo
ins
ja
in
das
js
add
pcmpeqw
add
test
gs
adc
cmp
add
ins
add
cdq
and
shl
mov
add
add
ins
jne
stos
fisubr
cmps
pop
push
mov
or
jbe
loopne
xchg
add
or
inc
add
imul
imul
shr
sahf
das
add
test
add
mov
add
jmp
add
pop
pop
mov
add
push
hlt
pop
add
add
stos
push
jb
scas
mov
inc
clc
pop
fs
sbb
inc
add
xor
add
add
fwait
jo
lods
push
cmp
add
cli
dec
inc
pop
jbe
push
hlt
push
add
or
xor
push
push
outs
sub
ficom
push
push
add
xchg
loope
outs
mov
(bad)
xor
add
lods
clc
add
ror
add
clc
loopne
add
or
pop
push
push
add
cmp
leave
push
add
sub
lods
lahf
lods
dec
call
pop
add
inc
call
add
adc
push
shl
mov
pop
mov
xchg
add
add
lods
inc
(bad)
mov
add
add
push
lods
cmp
lods
(bad)
jmp
test
add
clc
movs
jnp
add
push
jnp
or
xchg
lea
cwde
outs
mov
inc
cs
pop
mov
jmp
fld
(bad)
fcom
lea
push
ror
add
add
push
outs
mov
pop
adc
mov
add
add
add
add
xchg
add
test
pusha
ins
adc
shl
sbb
bound
add
js
sbb
add
add
cmps
push
test
sub
ja
add
add
jbe
test
sub
xchg
sub
add
lahf
mov
add
fucomip
fld
ret
fldcw
fisubr
or
push
lahf
daa
cmp
push
jmp
add
inc
cmps
adc
xchg
shl
push
add
adc
ja
ss
add
add
add
das
pop
shl
in
mov
add
mov
adc
call
das
mov
mov
ror
xchg
add
jns
cdq
call
popa
shl
mov
mov
ret
mov
in
push
add
mov
jmp
pop
add
ins
add
jp
sub
push
lods
pop
push
push
ins
adc
jmp
rol
push
(bad)
add
adc
fcom
mov
push
pusha
add
add
sub
lds
mov
add
hlt
jne
fisubr
repnz
push
add
jb
mov
lea
fcom
cmpxchg
add
test
xchg
mov
push
add
add
and
add
sbb
out
add
add
lea
fcom
mov
mov
in
cmp
xlat
fs
cmc
stos
hlt
movs
pop
add
add
add
or
stos
hlt
movs
add
add
sub
mov
lods
ss
add
add
lods
inc
add
test
inc
in
xchg
mov
add
sub
add
sub
add
sub
out
mov
(bad)
xor
add
add
pushf
test
add
sub
rol
add
add
pop
add
call
xchg
mov
inc
cmp
add
sub
add
xor
mov
call
add
add
add
hlt
pop
sub
adc
cmc
add
dec
xchg
sub
add
pop
das
fwait
adc
inc
arpl
sbb
lahf
add
jmp
and
add
cli
cli
push
xchg
fld
dec
or
lea
rcl
and
add
test
inc
add
lods
sub
ins
add
repnz
inc
es
jb
mov
push
add
lea
(bad)
pop
and
inc
dec
sub
popf
pop
push
xchg
add
mov
movs
mov
mov
sub
pop
add
sahf
pop
push
(bad)
add
add
add
add
jp
add
pop
gs
adc
push
(bad)
jmp
into
add
push
in
add
stos
push
inc
pop
lahf
jb
dec
add
add
xchg
fadd
push
push
push
(bad)
cmp
add
add
pushf
test
mov
add
add
adc
outs
test
adc
xor
adc
aad
test
sub
sub
imul
inc
dec
push
and
xor
jg
clc
(bad)
fs
call
fst
inc
sub
std
fcmovu
outs
mov
(bad)
je
sub
popf
shr
pop
adc
or
xor
stos
xchg
mov
sub
push
add
jmp
add
dec
pop
outs
test
jp
pop
cmps
scas
inc
fwait
xchg
fcomi
ins
cmp
dec
mov
add
je
adc
imul
add
aad
lods
inc
add
sub
imul
cli
jge
add
nop
cmps
inc
dec
mov
outs
stos
sbb
rcr
mul
add
lahf
sbb
jbe
pop
pop
jmp
int
add
cld
add
add
sub
add
jbe
jo
lods
jbe
adc
rol
push
cmp
in
fild
add
push
shr
fcmovb
lods
xor
jge
push
push
(bad)
mov
fidivr
imul
bnd
test
adc
jo
fisubr
push
mov
sub
shr
repnz
sbb
pop
out
add
add
pop
or
clc
cli
push
inc
mov
add
sbb
sub
inc
add
cmp
add
adc
mov
sar
push
pop
push
cmp
inc
in
addr16
add
xchg
or
lahf
outs
out
mov
outs
sub
add
add
out
pop
das
jbe
mov
add
sti
dec
popa
add
inc
fcomi
mov
add
add
cmp
das
add
add
ss
add
or
sub
lahf
add
jmp
jge
add
push
push
add
sbb
add
sub
ins
add
sub
inc
add
cmp
add
add
mov
js
add
movs
(bad)
jmp
iret
add
push
mov
repz
lahf
outs
lods
ss
add
add
rcl
add
or
add
or
daa
test
rol
add
pop
pop
std
add
stos
(bad)
mov
add
add
mov
hlt
lods
dec
add
add
lahf
add
jmp
mov
pop
push
(bad)
sub
add
dec
add
adc
fld
pop
(bad)
xor
add
add
mov
add
add
gs
clc
iret
mov
call
mov
push
lea
mov
or
pop
das
pop
push
cmps
ret
mov
ins
mov
jae
add
jl
js
jae
dec
or
lds
pop
push
adc
xor
lock
push
stos
(bad)
cli
ins
mov
pop
push
add
cs
icebp
push
mov
jmp
out
add
xchg
mov
cli
ins
mov
stos
push
add
cdq
test
out
lea
xchg
ja
jmp
out
add
das
jbe
lea
xchg
ja
jecxz
add
js
pop
push
(bad)
dec
sub
adc
xchg
cmc
repnz
inc
add
in
cmps
push
stos
jmp
js
jae
dec
or
clc
push
sbb
pop
aam
mov
lahf
jae
dec
or
gs
push
mov
in
xor
jmp
mov
jmp
call
adc
mov
cli
gs
bound
push
adc
push
mov
mov
popf
adc
rol
imul
mov
mov
pop
popa
ret
push
xor
add
gs
lea
cdq
xor
add
add
in
sbb
popa
pop
aad
les
shl
inc
outs
add
je
jo
jmp
jmp
call
imul
jge
js
pop
mov
adc
int
pop
push
stos
jnp
lods
jge
push
lods
sbb
mov
stc
sbb
push
(bad)
je
adc
xchg
mov
mov
pop
call
movs
add
test
gs
lea
repnz
add
xchg
std
fdivrp
gs
jge
jo
(bad)
std
ins
adc
push
jp
pop
push
stos
inc
dec
mov
adc
push
mov
pop
jl
inc
push
stos
rcl
sub
add
xchg
add
cmp
add
push
stos
sar
stc
or
hlt
movs
inc
inc
add
pop
ffree
inc
push
push
add
add
add
jmp
jp
add
clc
inc
adc
add
mov
jb
cmp
add
fistp
pop
push
cmp
(bad)
and
add
adc
popa
add
je
sub
test
add
cdq
sub
pop
adc
inc
js
lods
sub
push
sbb
pop
jmp
jae
add
sub
or
xor
cmp
push
dec
push
add
inc
fs
pop
stos
hlt
xor
add
pop
jbe
inc
dec
sub
sahf
xchg
or
call
test
mov
sub
pop
retf
lods
push
call
pop
xor
js
ret
push
(bad)
cmp
dec
adc
mov
xor
inc
add
dec
pop
push
stos
push
lahf
lods
push
add
stos
hlt
movs
sbb
add
popf
sbb
dec
repnz
outs
add
cs
add
daa
sub
mov
pop
push
(bad)
and
test
push
mov
jmp
int3
add
ss
sbb
dec
add
add
jp
hlt
mov
adc
outs
test
adc
cmp
xchg
fisub
rcl
(bad)
jl
adc
ins
mov
lods
aaa
inc
add
lahf
add
add
sub
add
push
add
stos
hlt
movs
sbb
add
popf
sbb
(bad)
xchg
in
sbb
out
outs
add
or
add
daa
sub
mov
sub
(bad)
and
test
fcomi
lods
aaa
inc
add
imul
clc
mov
cmp
(bad)
in
push
jl
jmp
retf
jb
lahf
inc
adc
push
cmp
push
dec
push
add
std
add
mov
push
push
add
add
gs
push
call
ins
add
repnz
std
add
es
jo
lods
push
adc
add
sub
mov
pop
push
push
ins
adc
jmp
int3
add
push
(bad)
cmp
adc
inc
fwait
xchg
fcomi
jne
fisubr
repnz
enter
lods
jbe
adc
pop
push
xchg
mov
push
mov
lea
jmp
add
stos
hlt
movs
aaa
inc
add
add
mov
add
pop
or
add
add
pop
xchg
add
push
pop
leave
push
add
std
add
shl
out
add
adc
ins
adc
jmp
mov
xchg
or
aaa
add
xchg
ret
or
std
add
stos
(bad)
lods
aaa
inc
add
lahf
add
jmp
int
add
sub
add
push
add
stos
hlt
movs
sbb
add
popf
sbb
(bad)
cwde
in
mov
add
repnz
outs
add
sub
lea
loop
dec
sahf
inc
fwait
xchg
fcomi
mov
inc
add
imul
jmp
xor
xor
dec
add
test
retf
add
stos
push
push
shl
mov
mov
pop
push
mov
fs
cmp
push
call
sub
add
and
inc
add
inc
cdq
jbe
push
hlt
add
add
jmp
movs
add
push
(bad)
and
cmps
inc
fwait
mov
add
clc
mov
xor
xor
dec
add
add
jns
mov
add
inc
jmp
movs
sar
add
(bad)
fisubr
jmp
aam
add
in
(bad)
add
dec
add
adc
xchg
add
push
pop
push
(bad)
and
test
push
hlt
jle
add
mov
jmp
adc
loope
push
push
ins
adc
lea
rcl
mov
push
add
add
push
adc
aaa
add
push
outs
sub
add
cmps
shr
leave
push
lods
push
adc
add
or
ret
movs
jo
mov
pop
jae
add
pop
push
cmp
inc
in
push
stos
add
ins
add
ins
add
repnz
and
add
out
sbb
dec
add
ins
add
sub
add
add
xchg
fcomi
movs
sar
add
popf
leave
das
lods
push
pop
add
add
(bad)
(bad)
add
clc
sbb
add
stos
xchg
add
push
lods
pusha
adc
cmp
inc
in
pop
lods
add
test
add
mov
add
repnz
and
add
out
sbb
dec
add
ins
add
add
add
add
fidiv
sbb
shl
add
add
and
cmps
inc
push
sbb
push
add
inc
imul
add
inc
adc
lea
repnz
jae
add
jns
xchg
out
or
push
stos
push
pop
jo
inc
dec
sub
mov
lahf
xor
mov
sbb
imul
(bad)
in
push
lods
out
jmp
outs
add
xchg
lea
add
xor
test
addr16
add
cdq
sub
xchg
or
ss
jb
xor
(bad)
ins
add
add
aaa
inc
add
lahf
add
inc
scas
shr
push
pop
lods
push
pushf
add
add
lods
(bad)
cmps
in
das
fldz
ficomp
add
ins
add
repnz
add
out
push
mov
clc
daa
mov
test
jb
add
add
cli
jecxz
add
je
sub
mov
inc
inc
adc
jge
repnz
mov
lahf
outs
lods
push
enter
sbb
(bad)
test
imul
add
test
push
pushf
add
add
sub
addr16
and
add
pop
inc
add
stos
push
pop
adc
sbb
pushf
jo
lods
ss
add
add
cmps
dec
inc
pop
jbe
push
hlt
mov
add
clc
jp
add
pop
outs
test
jp
sub
(bad)
into
pop
push
xchg
add
lea
add
add
(bad)
pop
inc
jb
out
add
adc
cmc
fld
add
push
pop
leave
push
add
std
add
lahf
jb
out
add
jmp
add
pop
mul
lods
sub
(bad)
cmp
mov
inc
fwait
jb
mov
push
push
add
add
add
add
(bad)
sahf
pop
push
(bad)
cmp
movs
test
add
jmp
mov
pop
pop
add
mov
push
mov
dec
adc
(bad)
jmp
leave
add
aaa
inc
add
add
mov
jmp
cli
add
sub
pop
gs
cmp
push
dec
xchg
mov
dec
adc
pop
push
push
push
mov
pop
(bad)
inc
js
lods
sub
(bad)
cmp
jmp
adc
in
push
xchg
or
push
jmp
push
add
aaa
inc
add
add
mov
jmp
sti
add
sub
push
(bad)
sub
add
push
add
inc
add
clc
xor
ins
adc
push
jb
add
add
ins
add
repnz
inc
xor
popf
pop
push
dec
cmps
mov
add
pop
lds
jle
inc
(bad)
sbb
add
add
push
push
jb
or
pop
push
xchg
fld
sar
add
sbb
iret
add
mov
sbb
lods
push
in
add
scas
lods
push
call
in
(bad)
add
ret
in
fisubr
mov
pop
pop
std
add
mov
mov
inc
add
(bad)
popf
lods
pop
adc
push
(bad)
cmp
add
add
xchg
add
add
sahf
leave
sub
inc
add
call
test
stos
push
js
shl
add
pop
std
add
xor
sbb
(bad)
sub
add
add
add
outs
sub
add
cmps
xlat
sub
add
inc
add
out
stos
hlt
movs
xlat
inc
add
add
clc
sbb
add
push
inc
fimul
stos
push
dec
adc
jo
call
pop
in
(bad)
jmp
xchg
add
clc
ins
inc
add
add
mov
jb
xor
loope
add
jo
lahf
inc
add
bound
add
or
push
inc
sbb
movs
inc
add
add
(bad)
cmp
add
push
adc
add
inc
ret
sub
gs
push
dec
push
add
std
add
stos
(bad)
lods
aaa
inc
add
lahf
add
adc
pop
push
xchg
cmp
lods
inc
rcr
push
add
add
add
pop
pop
test
dec
sub
cdq
dec
pop
add
ins
add
bnd
inc
push
jbe
push
mov
clc
out
add
push
outs
test
jb
add
add
mov
xchg
or
call
pop
out
(bad)
mov
add
test
mov
add
clc
adc
add
imul
push
hlt
mov
stos
push
cmp
jne
add
js
lahf
lods
push
pushf
add
add
hlt
gs
fs
aad
push
call
ins
add
repnz
test
es
jo
lods
push
pop
add
add
sub
neg
pop
push
pop
ins
adc
jmp
movs
add
push
(bad)
and
pushf
inc
lahf
xchg
fcomi
mov
inc
add
lahf
add
jmp
movs
add
add
add
imul
push
(bad)
jmp
mov
lahf
inc
adc
push
gs
push
dec
push
add
std
add
out
add
pop
push
stos
push
lahf
lods
push
sub
add
sub
(bad)
stc
add
pop
jb
jnp
add
pop
or
daa
add
rol
mov
add
add
pushf
test
add
adc
imul
add
ins
add
nop
add
push
jmp
sar
inc
pop
std
add
push
fdivr
jae
add
into
adc
add
dec
sbb
(bad)
mov
add
cli
call
movs
(bad)
(bad)
mov
add
lds
add
lahf
pop
pop
in
in
test
add
add
sbb
adc
scas
add
mov
cld
add
add
lahf
lods
push
inc
add
add
hlt
movs
xchg
add
popf
push
in
add
add
clc
pop
lods
add
push
mov
pop
arpl
add
push
sub
or
push
lods
ss
add
pop
mov
popf
pop
push
dec
(bad)
lea
jo
add
in
inc
add
outs
add
add
jl
mov
push
sar
pop
push
ret
ins
out
fisubr
add
cli
jmp
shl
dec
mov
outs
sub
sti
mov
movs
xlat
inc
add
push
pusha
add
in
xor
jmp
mov
inc
add
cs
add
cmp
add
add
mov
in
popf
test
add
add
sub
dec
add
inc
add
push
xchg
add
ins
adc
shl
mov
add
dec
sbb
inc
add
std
add
adc
push
pop
push
lods
test
add
mov
dec
test
(bad)
jns
add
pop
dec
jo
add
in
je
add
clc
int
add
dec
popa
dec
stos
sub
movs
pop
add
std
lods
dec
call
push
lods
add
xor
ret
jl
jbe
xor
cmp
inc
js
add
pop
mov
jmp
add
pop
pusha
xchg
inc
lahf
xchg
fcomi
jne
mov
fld
add
fs
jp
hlt
gs
fs
ds
xor
sbb
adc
ins
adc
jmp
lahf
add
push
(bad)
je
adc
pop
pop
jb
sbb
fucomp
lea
fst
sub
hlt
jne
mov
xor
add
stos
ficomp
ss
push
popa
pop
gs
shl
sbb
adc
add
js
pop
pop
pop
add
setp
stos
out
pop
xchg
or
shr
fisubr
add
mov
data16
test
inc
xchg
adc
leave
inc
ja
rol
push
lahf
lods
pop
cmp
shr
fimul
sar
jae
adc
pop
stos
fisub
pop
mov
add
mov
aad
push
lods
sub
pop
int
fcomp
inc
jecxz
cld
lea
push
lods
xor
fidiv
or
jmp
dec
adc
dec
leave
shl
add
push
jbe
outs
pop
jmp
out
add
sub
or
outs
leave
or
repz
adc
dec
(bad)
outs
sub
das
sub
fisub
dec
or
daa
sub
adc
loope
push
jbe
outs
fild
push
stos
inc
fwait
loop
sub
loop
gs
pop
out
(bad)
cmps
sub
sub
ficom
push
jns
push
adc
push
add
sub
cmp
mov
or
adc
rcl
(bad)
stc
add
arpl
in
fisubr
shr
fcom
mov
add
(bad)
xchg
repnz
test
xchg
sub
sub
repnz
push
push
imul
inc
sub
les
add
mov
or
lods
sub
sub
sub
sub
sub
add
jno
stos
ficomp
mov
adc
adc
xchg
adc
xchg
lahf
outs
pop
push
fisubr
sub
add
imul
push
jae
or
add
jge
mov
xlat
and
add
jb
dec
stos
adc
addr16
call
cmp
outs
sub
add
int
adc
gs
push
cmp
adc
pop
push
pop
pop
(bad)
cmp
sub
ja
add
ja
aad
popa
mov
adc
inc
cmp
sub
sbb
stos
in
(bad)
jmp
cmps
sub
leave
imul
sbb
lods
mov
in
mov
mov
fisubr
sub
pushf
outs
lods
inc
cmp
mov
adc
cs
xor
inc
test
in
rcl
fnstenv
add
push
pop
ins
fisubr
jmp
push
add
sub
sub
outs
sub
pop
push
stos
(bad)
sub
pop
push
pop
int
popf
sbb
inc
mov
repnz
cmp
icebp
lods
lahf
lods
pop
cmp
shr
ficomp
shr
fidiv
aas
add
jo
jae
xlat
mov
rcr
adc
rcr
adc
cmp
icebp
jo
pop
push
enter
fisubr
pop
cmp
shr
fidiv
fisubr
add
add
cmp
sub
push
call
cmp
shr
ficom
aaa
cwde
inc
lahf
pushf
push
jnp
addr16
aad
add
int
in
fisubr
mov
lods
hlt
mov
xchg
test
pop
inc
push
fwait
jb
dec
jb
pop
call
cmp
shr
ficom
neg
push
jnp
scas
mov
sub
neg
jbe
and
push
add
test
adc
pop
add
cmps
icebp
jb
add
hlt
loope
jmp
mov
push
clc
xchg
aam
dec
push
pop
stos
ficom
jnp
add
push
test
(bad)
cmp
sub
xor
sbb
add
sar
dec
push
adc
jbe
outs
sub
mov
test
in
leave
xor
xchg
add
movs
jmp
mov
sub
outs
adc
add
shl
sbb
hlt
pop
out
adc
jb
outs
lods
jbe
adc
fadd
push
mov
add
fnstsw
push
pop
or
pop
push
sbb
add
js
cmp
popf
sbb
inc
add
test
pop
leave
push
add
std
add
clc
test
ins
rcl
lahf
pop
leave
push
add
std
add
outs
stos
(bad)
adc
xor
gs
jb
(bad)
adc
daa
add
mov
in
in
fld
add
sub
inc
out
add
push
imul
sahf
add
jmp
xor
shr
inc
(bad)
out
adc
dec
popf
add
stos
data16
sub
sbb
push
pop
std
add
add
lods
jbe
jmp
add
pop
sbb
lods
sub
xchg
stos
push
jno
push
push
jl
leave
push
add
std
add
cmp
leave
push
add
std
add
arpl
in
(bad)
gs
push
push
mov
hlt
xchg
fild
add
sub
mov
add
daa
call
jmp
(bad)
ins
dec
popf
push
les
add
add
add
push
dec
xor
mov
xor
ins
push
fmul
add
or
ja
add
fs
stc
add
call
ins
add
bnd
inc
es
lods
lahf
lods
push
dec
add
add
sub
sub
pop
push
stos
(bad)
adc
xchg
rol
div
pop
xor
add
mov
push
in
cmps
dec
sub
fs
pushf
add
test
pop
push
(bad)
jno
add
pop
scas
xchg
inc
fwait
mov
add
clc
outs
out
add
pop
gs
rol
popf
add
ss
add
xchg
push
inc
pop
lahf
jb
daa
add
add
cmps
fld
push
push
push
(bad)
cmp
add
push
adc
add
pushf
test
ins
fadd
add
inc
clc
(bad)
out
add
pop
gs
popa
repnz
push
inc
pop
lahf
jb
sbb
inc
add
inc
movs
push
stos
sar
test
stc
mov
add
movs
jmp
add
add
popf
call
jns
or
jae
add
lods
xor
add
push
mov
jmp
nop
add
cli
add
add
ins
aas
in
idiv
add
dec
js
lods
sub
ins
add
repnz
or
jb
mov
stos
pop
lahf
call
(bad)
add
cdq
push
xor
xor
pop
or
cmp
jo
jae
out
add
xor
add
jb
repnz
adc
xor
fisubr
push
xchg
adc
leave
inc
ja
rol
push
lahf
lods
pop
cmp
shr
fimul
rol
mov
mov
or
sub
(bad)
repnz
xor
inc
xchg
sub
lods
sub
dec
push
or
xor
daa
stc
push
stos
fiadd
in
push
lods
sub
xor
xchg
test
jbe
sub
outs
and
mov
fst
inc
fwait
loope
lods
fst
inc
xchg
loopne
cwde
xor
popf
dec
xchg
xchg
in
and
leave
sti
nop
imul
xlat
inc
jmp
adc
int
push
lods
sub
aam
retf
scas
jmp
adc
aad
sbb
pop
fld
sti
nop
imul
fdivr
sbb
add
mov
adc
lods
daa
stc
push
stos
fisubr
or
fdiv
dec
and
jo
fdiv
dec
push
fisttp
ror
stos
fisubr
cmps
sub
sbb
and
and
rol
cvtps2pd
gs
or
outs
movs
ret
jg
and
call
xor
retf
fcmovbe
add
pop
test
add
pop
test
sub
mov
mov
mov
std
add
outs
sub
add
call
xchg
repnz
add
add
adc
shr
add
test
pop
jmp
add
mov
lods
mov
cwde
int
in
fisubr
jmp
mov
ret
test
retf
dec
add
lahf
xchg
fcomi
jbe
push
adc
fiadd
push
pop
ins
adc
sti
adc
xchg
xor
sub
gs
shl
dec
cmp
mov
add
dec
adc
aad
push
lods
sub
scas
and
dec
sbb
jp
cli
adc
enter
lods
pop
int
mov
pop
mov
sub
mov
out
and
adc
jle
cmp
adc
jb
push
popa
pop
lea
movs
push
add
js
dec
sbb
xor
inc
lahf
mov
push
stos
(bad)
cmps
xor
cld
jno
outs
mov
cmp
shr
fimul
shr
mov
or
das
jmp
add
int3
ins
ror
adc
push
adc
jo
and
dec
sahf
mov
inc
in
mov
adc
push
fisubr
adc
or
lahf
sub
pushf
dec
fistp
movs
inc
sub
sub
add
add
ja
inc
sbb
leave
stos
clc
outs
cmps
cmp
mov
mov
in
dec
inc
push
cmc
push
scas
or
in
sahf
dec
dec
push
retf
jge
enter
ja
adc
add
mov
cmp
(bad)
test
(bad)
jge
loope
in
inc
or
dec
dec
jmp
add
outs
xchg
sub
fiadd
jbe
cmp
fld
cld
test
neg
inc
dec
push
mov
lods
ja
mov
inc
mov
rcl
xor
leave
out
jge
inc
push
mov
arpl
adc
stos
inc
cwde
adc
ins
mov
push
push
mov
call
add
ins
call
int
in
aad
inc
adc
in
scas
push
inc
aam
dec
inc
fisubr
imul
(bad)
in
push
jnp
pop
in
adc
add
test
in
fiadd
dec
ins
icebp
pusha
stos
(bad)
mov
test
shr
push
add
hlt
loopne
add
test
in
sbb
test
lea
add
test
or
adc
(bad)
stc
or
aas
sub
fisubr
cmps
xor
shr
ficom
jns
add
mov
adc
jb
dec
loop
adc
clc
test
push
inc
cdq
dec
and
xchg
nop
pop
ja
js
imul
xchg
jmp
jo
xor
cs
jmp
sbb
xor
add
das
sbb
es
mov
inc
cmp
pop
cmps
sbb
mov
in
outs
clc
les
sub
enter
fisubr
in
adc
hlt
pop
push
clc
les
jge
xchg
ficomp
mov
mov
add
sti
sbb
xchg
outs
test
inc
sbb
shl
add
icebp
adc
sti
sbb
mov
jbe
push
jnp
arpl
in
add
test
sub
ficom
push
jns
xchg
inc
adc
xchg
and
or
sub
cwde
int
out
fisubr
adc
push
aad
dec
cwde
int
out
fisubr
jmp
xchg
add
hlt
cmps
jl
push
inc
mov
adc
push
mov
fisubr
sub
add
inc
shr
ficomp
shr
ficom
push
add
dec
sub
repnz
imul
xchg
jmp
jo
xor
cs
jmp
sbb
xor
add
das
sbb
es
aad
cmps
sub
addr16
(bad)
cmp
sub
daa
mov
add
sahf
lods
aaa
cmp
daa
xchg
inc
lahf
pushf
push
mov
rcl
gs
push
jns
adc
(bad)
add
cmps
dec
pop
jbe
adc
sbb
das
mov
add
test
inc
mov
push
je
adc
movs
movs
stos
mov
pop
out
in
jo
ret
ins
rcl
xchg
mov
in
repnz
add
mov
mov
das
das
push
mov
shr
jb
pushf
inc
adc
jge
repnz
inc
es
add
xchg
loop
push
test
pop
out
in
test
add
ins
hlt
lock
jmp
mov
add
hlt
gs
fs
add
jmp
inc
add
gs
sbb
xchg
add
pop
push
stos
sub
in
add
es
cs
adc
mov
sbb
iret
jo
imul
push
scas
es
adc
dec
pop
push
add
xchg
aam
(bad)
in
push
movs
sti
add
stos
jl
sbb
sti
or
hlt
cmc
mov
data16
jbe
test
or
gs
sbb
jo
adc
ins
adc
push
cmp
cmc
aam
add
jge
jo
adc
ins
adc
push
jp
pop
mov
inc
dec
mov
adc
push
jp
pop
(bad)
(bad)
inc
push
or
jbe
fldcw
adc
fsubr
push
inc
inc
mov
stos
fiadd
adc
rcr
imul
pushf
mov
xchg
or
lahf
retf
ins
dec
fisubr
and
fld
push
push
xor
fcomp
imul
outs
sub
mov
adc
sbb
das
pop
shr
cwde
mov
in
ficom
adc
shr
outs
sub
shr
add
pop
cmp
cli
or
cdq
push
push
jl
fidiv
mov
cs
ins
imul
test
sub
out
jnp
inc
adc
or
aad
icebp
mov
or
aas
xchg
adc
into
fwait
sbb
jb
pop
test
sbb
adc
xchg
test
inc
rol
inc
fsubr
(bad)
push
outs
sub
pushf
outs
das
pop
cdq
stos
shr
leave
das
pop
push
fs
add
fisubr
add
bound
lea
add
pop
js
fisubr
add
push
stos
fiadd
fsubr
imul
(bad)
xor
adc
adc
cmp
outs
sub
pushf
outs
adc
add
add
ja
xchg
xor
(bad)
in
jo
xchg
or
adc
js
out
sbb
xchg
sub
outs
push
or
nop
add
xchg
jle
adc
fwait
js
push
fld
lods
shr
lods
clc
cmps
xor
pop
jbe
dec
ds
pop
int
popf
lods
cli
xor
add
hlt
cmps
push
pop
add
push
(bad)
(bad)
push
jbe
push
add
js
repz
xor
leave
mov
push
add
xor
leave
retf
add
xor
leave
call
leave
xchg
lahf
push
add
xor
leave
out
lahf
push
add
xor
leave
out
push
add
xchg
into
out
fisubr
jbe
add
pushf
stos
clc
cmps
sbb
fstp
lods
sub
int
fcomp
cmps
shr
stos
cli
cmps
cmp
mov
out
mov
cmp
mov
mov
int
add
dec
inc
ins
adc
jl
mov
adc
xchg
ds
or
xor
add
lods
aaa
cmp
in
fisubr
cmps
cmps
lock
in
fld
sub
xlat
add
jae
in
stos
hlt
outs
cmps
jl
pop
leave
ss
sbb
lods
std
fld
test
in
cmps
add
xchg
ds
pop
dec
push
adc
sub
inc
pop
push
std
add
xor
cs
jmp
sbb
jns
pop
call
jo
xchg
or
sub
xlat
mov
add
outs
xchg
or
sub
(bad)
mov
add
outs
xchg
or
sub
mov
add
jmp
test
xchg
or
xor
add
mov
ins
adc
jl
(bad)
cdq
cmp
mov
in
sub
cmp
in
aad
imul
outs
sub
xchg
mov
adc
cmp
(bad)
outs
sub
repnz
dec
leave
bnd
sbb
shr
repnz
xchg
add
sub
test
in
repnz
retf
pop
push
imul
outs
pop
leave
cwde
int
out
fisubr
jmp
rol
inc
adc
push
imul
ja
adc
je
add
add
leave
dec
test
ja
xchg
repnz
push
adc
rol
lods
jns
outs
sub
iret
mov
add
cdq
sub
enter
fisubr
inc
or
add
popa
shr
ficom
iret
mov
add
cmps
in
test
xor
add
mov
ins
adc
jl
(bad)
cdq
cmp
mov
in
sub
and
jp
push
fisttp
pop
int
js
dec
dec
lods
pop
int
xchg
in
jno
and
lods
push
jbe
sub
fstp
lods
sub
test
(bad)
fisubr
add
xchg
sub
rol
fisttp
xchg
lods
arpl
and
stos
ficomp
les
jmp
shr
ficom
add
push
fisttp
pop
lahf
jbe
dec
and
daa
sbb
sub
mov
les
ins
xor
(bad)
mov
movs
test
xor
add
dec
leave
bnd
sbb
shr
repnz
sub
test
in
repnz
pusha
test
jnp
ja
js
imul
xchg
jmp
xchg
inc
adc
jle
push
test
xchg
or
sub
mov
add
jmp
test
xchg
or
sub
(bad)
jb
call
outs
sub
add
test
in
repnz
push
sub
test
in
repnz
add
es
shr
nop
jmp
sbb
add
xchg
imul
arpl
aam
(bad)
shl
dec
repnz
mov
outs
test
cmp
adc
pop
ins
jae
in
fiadd
jbe
and
pop
js
dec
dec
imul
shr
lods
sahf
sub
sub
push
jbe
cmp
add
push
call
repnz
(bad)
shr
fsubr
add
push
stos
inc
scas
sub
pop
sub
adc
js
fldcw
pop
imul
adc
jno
or
add
(bad)
jmp
jo
sub
retf
add
sub
sub
enter
fisubr
xor
add
enter
fisubr
sbb
jno
add
fadd
dec
push
inc
adc
add
push
test
pop
test
push
test
add
xchg
push
test
push
jmp
imul
mov
fnstenv
mov
popf
repnz
add
xchg
leave
ret
cmps
push
cmps
adc
xor
sti
fs
call
jl
add
dec
push
inc
adc
mov
or
xchg
sub
outs
push
or
xchg
jle
adc
fwait
js
push
fmul
pop
int
jb
dec
push
push
gs
jmp
xor
leave
call
and
inc
arpl
ficom
or
mov
nop
xchg
(bad)
in
add
mov
push
add
xor
leave
call
sbb
stos
inc
dec
add
push
xlat
add
jo
stos
fisubr
pop
xor
adc
leave
out
push
fsubr
add
clc
cmps
pop
add
jbe
dec
inc
push
pop
int
popf
add
(bad)
push
test
mov
mov
cmps
and
mov
out
lahf
pop
add
xor
leave
out
pop
add
xor
leave
stos
lahf
pop
add
xor
leave
mov
xchg
int3
out
fisubr
jbe
add
js
dec
dec
lods
push
int
dec
out
jno
and
mov
lahf
push
dec
cmp
ret
sub
inc
stos
adc
mov
mov
ret
cmps
cmps
xchg
leave
mov
pop
jbe
stos
push
xlat
imul
shr
add
cs
leave
loop
cmps
and
mov
mov
cmps
pop
xchg
fucomp
fisubr
aad
push
iret
cs
inc
scas
fs
jb
es
fs
add
push
(bad)
fsubr
in
fiadd
jne
add
push
std
test
mov
mov
cmp
push
inc
cmp
iret
test
push
adc
add
int
fcom
pop
add
dec
xchg
sub
sbb
xchg
sub
mov
jne
mov
(bad)
les
lahf
outs
xchg
cdq
push
test
inc
mov
stos
inc
icebp
push
arpl
add
retf
adc
clc
stc
xchg
push
(bad)
mov
mov
cmp
pop
push
lea
jge
stos
inc
imul
stos
lahf
push
add
rcr
scas
cmps
hlt
test
in
jle
sub
cmps
movs
movs
arpl
fs
fstp
cdq
push
cmp
lock
repnz
add
sbb
adc
dec
jmp
push
std
pop
imul
sub
add
(bad)
cli
add
mov
inc
adc
rcl
fisubr
or
clc
xor
ins
hlt
jbe
call
and
test
js
mov
inc
adc
rol
lods
jbe
add
repnz
inc
es
add
cdq
jmp
inc
loopne
pushf
outs
adc
add
jo
add
mov
pop
jbe
push
mov
jmp
test
add
hlt
gs
add
push
jne
add
leave
jp
jl
add
add
sbb
cs
cmc
lods
inc
clc
or
pop
stos
(bad)
xor
adc
cwde
jmp
adc
ja
(bad)
add
mov
pop
test
push
jmp
inc
jmp
mov
adc
fnsave
lods
sub
outs
mov
adc
enter
jmp
mov
xchg
repz
mov
shrd
(bad)
jno
cmp
mov
add
push
aad
cli
(bad)
pop
ins
add
add
mov
sub
out
fisubr
add
push
stos
fiadd
adc
xchg
fcom
or
call
push
mov
jmp
mov
xchg
repz
mov
shrd
(bad)
jno
cmp
inc
push
aad
adc
ins
add
add
mov
sub
xchg
shr
add
fdiv
outs
call
jo
adc
inc
clc
push
cmps
jb
es
adc
clc
lock
test
or
lods
sub
xor
pop
aad
push
adc
pop
leave
loop
cli
push
adc
cli
out
ja
add
add
jmp
dec
add
je
or
test
mov
loop
clc
push
cmc
ret
fs
pop
test
adc
sar
push
add
shr
or
test
inc
sahf
nop
xor
mov
movs
pop
jbe
outs
js
ret
test
out
enter
fnstsw
sbb
test
push
or
xor
jb
or
push
mov
and
mov
repnz
add
adc
sbb
out
js
repnz
sti
outs
add
pop
stos
sub
test
test
in
cmp
or
pop
dec
fiadd
lods
shl
pop
test
cmps
cmps
in
test
in
jle
sub
mov
jl
in
jb
adc
adc
dec
leave
outs
outs
sub
fisubr
daa
cmp
shr
fisubr
scas
jnp
shl
dec
scas
adc
xor
outs
sub
and
mov
push
jmp
xlat
adc
push
push
cwde
int
in
fisubr
pop
cmp
in
fidiv
in
test
xchg
test
cmps
cmps
cld
test
in
fist
sub
add
lahf
xchg
fcomi
jbe
cmp
fs
add
sub
rol
add
test
push
inc
sub
jp
xchg
add
push
test
std
add
mov
call
ret
fs
pop
test
sub
ficomp
clc
nop
fild
or
pop
push
test
enter
fisubr
pop
cmp
shr
fidiv
add
test
mov
cmp
clc
mov
call
push
jns
scas
mov
cmp
shr
ficom
inc
cmp
push
inc
mov
sbb
in
fidivr
add
int
out
fisubr
adc
stos
lods
hlt
jbe
inc
adc
out
pop
push
mov
fs
leave
mov
sbb
cmps
cmps
cld
test
in
fst
ja
adc
outs
cmps
cmp
retf
push
pop
ins
adc
leave
call
in
repnz
(bad)
inc
xor
leave
out
cmps
cmps
nop
test
adc
pop
dec
cli
adc
stos
push
jnp
fwait
cmp
jp
hlt
scas
cmps
nop
test
add
in
jmp
ja
jmp
leave
in
jo
pop
(bad)
jge
leave
push
jecxz
sti
adc
inc
cmp
lods
(bad)
in
cld
adc
aad
lods
sub
pushf
dec
fistp
xor
sbb
adc
(bad)
and
out
clc
cmp
mov
adc
fnsave
lods
sub
xor
leave
mov
shr
ficom
sub
imul
jmp
adc
push
outs
sub
ror
in
mov
add
test
call
in
fisubr
clc
add
lods
inc
cmp
jb
dec
inc
push
push
int
sub
add
stos
xchg
inc
pop
pusha
jbe
jb
or
dec
add
jmp
jb
dec
pop
jmp
add
test
int
adc
gs
shl
dec
inc
leave
cwde
int
out
fisubr
jmp
add
repnz
add
pop
add
pop
popa
and
jb
dec
sub
add
push
ret
inc
unpcklps
sub
mov
lea
fisubr
sbb
test
repz
rcl
test
or
or
cs
jo
pop
xchg
add
test
adc
rcr
adc
xor
fdiv
dec
leave
mov
and
dec
sahf
mov
inc
in
mov
adc
push
fisubr
sub
sub
inc
dec
gs
clc
or
add
inc
in
stos
outs
sub
mov
add
int
adc
pop
xor
leave
mov
cmps
sbb
push
syscall
push
stos
jnp
mov
jmp
adc
push
add
pop
add
jp
and
jb
dec
cmp
scas
add
add
jae
dec
adc
enter
lods
ja
aad
test
adc
pop
test
add
or
sub
mov
outs
adc
add
push
and
push
imul
jo
adc
mov
repz
sub
sub
mov
in
stos
hlt
outs
cmps
inc
xor
leave
into
jo
sbb
lods
fld
test
adc
add
popf
pop
push
cwde
int
out
fisubr
leave
cwde
int
out
fisubr
jmp
mov
cmp
adc
add
push
pop
ins
adc
leave
stos
jo
sub
add
add
cmp
sub
out
add
sub
mov
shr
dec
mov
adc
xchg
inc
lods
sbb
sub
sub
dec
leave
jb
sub
push
stos
inc
push
mov
clc
cmps
js
mov
jbe
data16
test
mov
cmp
sub
mov
out
cmp
shr
fisubr
inc
adc
mov
xchg
cmps
jl
push
jne
clc
sbb
jb
dec
push
mov
call
push
test
mov
adc
js
push
lods
sub
daa
sub
mov
pushf
repnz
pop
add
inc
mov
call
jp
test
adc
pop
add
jo
push
das
pop
pop
test
in
jo
lods
popa
adc
cmp
adc
add
push
mov
cmp
push
imul
or
out
adc
sbb
(bad)
xor
sub
cwde
int
out
fisubr
jmp
add
push
jbe
and
dec
leave
outs
jo
or
sub
mov
mov
add
sub
shr
(bad)
pop
add
add
lahf
mov
hlt
mov
sbb
shr
repnz
add
add
inc
sub
rcl
outs
test
out
adc
clc
outs
add
jmp
push
push
cmp
jmp
leave
bound
or
or
push
mov
in
add
add
jmp
nop
xchg
xor
in
(bad)
pop
cmps
xor
add
test
add
add
mov
out
jbe
xor
daa
pushf
push
mov
shr
pop
dec
mov
adc
add
loope
repz
fist
rcr
cmp
shr
fidiv
sahf
imul
cmps
mov
sub
sub
add
test
cmp
adc
pop
push
push
push
ins
adc
leave
push
outs
sub
add
cmp
sub
iret
inc
leave
sub
dec
aad
add
jae
dec
adc
int
sub
add
sub
inc
adc
mov
in
jo
ja
int
mov
add
lods
in
lods
and
add
xchg
fcomi
mov
jo
shr
repnz
in
cli
scas
cmps
mov
sub
cmps
movs
movs
arpl
int
out
fisubr
iret
in
cmps
out
add
pop
push
adc
add
xchg
call
and
shr
stos
lock
fist
test
push
imul
stos
test
mov
popf
push
jmp
jmp
test
sub
pop
mov
adc
cmp
cmp
sub
cwde
int
out
fisubr
jmp
or
in
pop
retf
inc
repz
test
inc
push
adc
je
push
call
in
fidiv
dec
cmp
or
mov
pop
push
xor
add
xchg
add
test
cmps
cmps
cld
cmps
shr
fcom
sub
add
lahf
xchg
fcomi
jbe
cmp
aaa
push
push
push
pop
ins
adc
leave
cmps
neg
in
repnz
inc
adc
add
imul
push
dec
scas
adc
loop
xchg
in
popa
imul
ficomp
shr
ficom
(bad)
in
test
sub
mov
fwait
sbb
test
sub
cwde
int
out
fisubr
(bad)
push
test
sub
adc
frstor
outs
add
in
jl
cmps
cmps
xchg
test
in
inc
pop
sbb
mov
dec
jl
lahf
outs
mov
cmp
and
test
sub
fisubr
or
outs
ret
test
inc
jne
test
or
sub
cwde
dec
(bad)
in
jb
mov
adc
dec
leave
xchg
or
sub
test
jb
dec
scas
adc
sub
dec
call
popf
out
cmp
shr
(bad)
add
out
lods
sub
adc
push
popa
inc
push
lods
shr
ret
cmp
or
test
sub
(bad)
jbe
inc
adc
push
mov
fs
leave
mov
sbb
cmps
cmps
cld
cmps
shr
fst
idiv
adc
lahf
xchg
fcomi
outs
cmps
cmp
dec
sti
push
push
pop
ins
adc
leave
call
in
repnz
inc
xor
leave
push
jo
and
cmp
push
jmp
mov
mov
shr
pop
test
leave
xchg
jae
les
push
(bad)
in
or
cmp
fdivrp
push
enter
jmp
mov
stos
jecxz
pop
jbe
stos
push
adc
mov
pop
test
adc
sub
fcmovbe
es
(bad)
inc
clc
mov
jo
inc
in
mov
std
stos
push
adc
js
imul
xor
rol
mov
xchg
xor
push
add
push
stos
fiadd
adc
xchg
fcom
mov
repnz
add
dec
dec
jbe
outs
mov
adc
int3
leave
or
imul
cdq
sub
add
ins
sub
mov
and
xor
or
clc
movs
mov
or
xor
hlt
cmps
cmps
nop
test
in
test
add
cmps
mov
test
sub
int
lods
sub
daa
jmp
jmp
push
cmps
sbb
test
loop
jle
mov
pop
stos
ficomp
mov
adc
adc
pop
pusha
mov
dec
adc
mov
or
mov
mov
add
mov
adc
add
add
mov
xor
or
add
jb
cwde
inc
adc
jl
xabort
(bad)
mov
adc
fisubr
sub
add
add
pop
or
pop
clc
test
push
call
cs
push
lods
sub
push
mov
sub
cwde
int
out
fisubr
jmp
sti
add
add
test
call
mov
add
xor
leave
push
jo
sub
lock
fimul
xchg
xchg
mov
fidivr
leave
pop
int
out
leave
push
pop
dec
imul
stc
add
push
cmp
repnz
icebp
aad
ror
nop
cli
push
arpl
outs
sub
daa
stc
fild
mov
enter
pop
arpl
(bad)
jmp
imul
pop
sbb
mov
add
cmps
shr
mov
add
out
dec
js
mov
jmp
xor
mov
mov
xchg
cmp
add
out
sbb
inc
sti
push
test
cmc
inc
shl
push
lods
sub
push
clc
test
push
call
push
pop
stos
ficom
mov
add
xor
lods
sub
xchg
rol
add
mov
clc
dec
mov
push
dec
and
daa
sbb
xchg
cld
xchg
(bad)
in
cmp
mov
adc
xor
pop
ficom
cmp
or
sbb
xor
call
in
(bad)
cmp
fcmovbe
in
jecxz
adc
call
jmp
iret
call
push
jns
adc
sub
(bad)
lock
jmp
das
pop
xchg
scas
shr
inc
adc
jns
dec
adc
pop
add
sub
leave
mov
cmps
shr
mov
add
imul
pop
cmp
into
in
ficom
and
add
inc
ja
sub
sub
sahf
lods
ja
lds
imul
add
inc
bound
inc
push
push
push
mov
dec
lods
pop
cmp
shr
fisubr
shr
mov
add
sbb
inc
sti
push
test
pop
add
pop
push
imul
sbb
adc
js
push
mov
(bad)
ins
lods
mov
lahf
lods
(bad)
shr
(bad)
xchg
cmps
sub
inc
mov
cmp
add
pop
push
cwde
int
in
fisubr
leave
cwde
int
lock
jmp
mov
inc
pop
fs
leave
mov
jmp
leave
push
jno
sub
cmp
pop
push
stos
(bad)
adc
xchg
rol
div
pop
xor
add
mov
push
in
cmps
dec
sub
add
add
jmp
jecxz
add
pushf
push
mov
rcl
gs
push
cmp
adc
push
push
pop
pop
(bad)
cmp
sub
jg
add
test
cmc
shr
ficom
(bad)
hlt
add
lahf
pushf
push
mov
rcl
gs
push
jns
scas
adc
add
jbe
jl
xchg
add
push
pop
pop
(bad)
cmp
sub
aas
test
sahf
lods
ja
gs
mov
mov
in
adc
sub
fisub
clc
call
add
(bad)
in
lods
hlt
jbe
mov
dec
leave
push
jno
sub
int3
stc
push
push
xchg
pop
movs
ins
shl
dec
call
sti
sub
adc
clc
sbb
add
push
(bad)
jge
movs
sbb
inc
not
test
sti
inc
pop
push
jns
dec
call
in
ficom
add
jno
or
lods
dec
cmp
pop
mov
jmp
leave
add
xor
movs
mov
push
mov
fisubr
sub
add
and
in
ficomp
shr
ficom
mov
add
push
add
push
push
mov
xchg
lods
pop
cmp
cmps
cmps
or
shr
retf
inc
add
js
push
lods
sub
sub
sub
sub
sub
add
sub
sub
(bad)
add
outs
shl
imul
lods
(bad)
inc
xchg
jmp
sub
fisub
clc
clc
or
inc
and
cmps
mov
dec
leave
push
jno
add
inc
push
xchg
inc
test
shl
dec
call
sti
sub
adc
clc
sub
add
push
(bad)
jge
movs
sbb
inc
not
test
cld
inc
pop
push
jns
dec
call
in
fidivr
add
jno
or
lods
dec
cmp
pop
mov
jmp
leave
add
or
scas
add
sub
sub
add
and
in
ficomp
shr
ficom
pop
or
add
push
stos
inc
scas
push
push
mov
xchg
lods
pop
cmp
cmps
cmps
or
shr
ret
pop
xor
add
push
lods
sub
sub
sub
sub
sub
add
sub
sub
popf
ret
imul
ret
inc
inc
pop
sub
sub
lahf
outs
pop
push
mov
les
rol
ja
jge
imul
add
imul
in
push
mov
shr
pop
dec
test
add
add
jl
mov
cmps
shr
les
jmp
dec
dec
leave
cwde
int
out
fisubr
jmp
clc
add
inc
movs
sub
adc
mov
mov
nop
jb
dec
dec
adc
imul
push
dec
jmp
leave
add
adc
mov
push
pop
push
cwde
int
in
fisubr
push
ror
in
fisubr
dec
cdq
add
js
hlt
cmps
xor
jb
dec
mov
test
fsubr
fisubr
pop
cmp
adc
push
add
xchg
div
and
(bad)
outs
sub
out
jb
adc
fiadd
push
stos
(bad)
cmp
dec
leave
or
sbb
jmp
xor
inc
add
pusha
dec
sub
adc
inc
adc
sub
lods
shl
cli
inc
inc
add
lahf
outs
push
push
mov
jl
pop
dec
test
(bad)
inc
ins
jno
stos
(bad)
mov
movs
test
inc
not
test
cli
inc
push
push
jns
cmps
call
in
fisubr
add
sub
sub
dec
add
add
test
pop
push
(bad)
jne
lods
push
fild
adc
add
shr
imul
push
call
sub
sub
inc
lods
inc
fisubr
jmp
sub
add
pop
lods
inc
cmp
call
sbb
sub
cwde
int
lock
jmp
ret
jb
mov
adc
push
imul
pop
sub
out
add
add
int
imul
jmp
jmp
test
push
inc
es
pop
mov
mov
sbb
add
lods
dec
test
ja
xchg
repnz
cmp
or
sbb
add
add
scas
push
push
enter
fisubr
leave
repnz
mov
shr
adc
add
jb
dec
adc
push
hlt
add
push
imul
sub
repnz
int
out
fisubr
adc
add
jbe
cmp
dec
adc
push
pop
pop
(bad)
jge
mov
add
jb
dec
xchg
adc
xchg
hlt
add
push
imul
icebp
add
push
jns
inc
pop
pop
jmp
iret
in
fimul
inc
lea
pushf
aad
and
sub
mov
dec
sbb
outs
sub
imul
sbb
adc
add
jbe
cmp
imul
and
leave
(bad)
pop
xor
add
inc
add
sub
jge
jns
jmp
not
test
adc
add
lods
aaa
cmp
shr
fisubr
shr
fcom
loop
add
lahf
jb
dec
(bad)
leave
cwde
int
out
fisubr
jmp
adc
lods
hlt
jbe
xor
dec
leave
push
jno
or
adc
push
shl
shl
dec
jp
fs
leave
call
in
sbb
inc
sti
push
test
inc
add
sub
pop
dec
add
jns
inc
fs
leave
bound
and
inc
outs
sub
add
int
fwait
stos
hlt
outs
cmps
jo
pop
leave
out
jo
sbb
lods
cmc
fldcw
mov
lods
ret
xchg
push
or
mov
adc
sub
push
test
aam
sbb
std
add
dec
cli
test
aad
add
cmp
lods
ja
(bad)
hlt
add
inc
add
(bad)
in
lods
hlt
jbe
mov
dec
leave
push
jno
adc
add
push
push
xchg
dec
movs
ins
shl
dec
call
sti
sub
adc
clc
adc
add
push
(bad)
jge
movs
sbb
inc
not
test
or
jns
dec
call
in
fisub
inc
out
add
sub
lods
lahf
lods
dec
cmp
pop
mov
jmp
leave
add
and
pushf
ret
mov
fisubr
sub
lahf
lods
pop
cmp
shr
ficomp
shr
ficom
bound
add
push
stos
inc
scas
push
push
mov
xchg
lods
pop
cmp
cmps
cmps
or
shr
out
pop
sbb
push
lods
sub
sub
sub
sub
sub
add
sub
sub
fcmovb
dec
jp
test
call
jmp
sub
fisub
clc
clc
test
(bad)
in
lods
hlt
jbe
mov
dec
leave
push
jno
sub
cld
adc
push
xchg
dec
movs
ins
shl
dec
call
sti
sub
adc
clc
sub
add
push
(bad)
jge
movs
sbb
inc
not
test
push
inc
pop
push
jns
dec
call
in
fisubr
cmp
add
sub
lods
lahf
lods
dec
cmp
pop
mov
jmp
leave
add
sbb
mov
fisubr
sub
add
and
in
ficomp
shr
ficom
pop
add
push
stos
inc
scas
push
push
mov
xchg
lods
pop
cmp
cmps
cmps
or
shr
out
xor
push
lods
sub
sub
sub
sub
sub
add
sub
sub
mov
pop
clc
cli
jmp
mov
ja
xchg
bnd
xchg
sub
inc
sbb
iret
jo
imul
stc
push
loopne
outs
cmp
inc
ficomp
cmps
in
test
adc
add
jb
dec
out
adc
aaa
lock
pop
gs
leave
fidiv
sub
test
sahf
pop
push
enter
fisubr
xor
add
mov
xor
shr
repnz
adc
add
jb
dec
inc
jmp
(bad)
add
mov
clc
ja
add
pop
gs
leave
outs
outs
sub
add
int
adc
imul
pop
cmp
into
in
fisubr
popa
out
add
es
test
inc
gs
jbe
add
test
cmp
nop
js
outs
das
push
ins
scas
shr
leave
push
addr16
(bad)
xor
sub
cwde
int
out
fisubr
push
call
dec
sub
adc
shr
xchg
pop
nop
pop
add
test
cmps
int3
test
inc
not
test
fild
push
dec
push
adc
imul
outs
sub
movs
push
xor
inc
mov
xchg
pusha
dec
lahf
outs
pop
leave
cwde
int
lock
jmp
mov
add
sub
jmp
inc
add
sub
imul
sub
stc
add
int
in
fisubr
ret
add
sbb
pop
inc
push
fwait
jb
dec
mov
xchg
add
jmp
sar
test
or
shr
jno
add
mov
add
jbe
push
adc
add
cmps
pop
das
das
push
dec
cmps
shr
push
adc
add
dec
push
push
aam
dec
hlt
fsubr
cmp
and
cmps
inc
adc
fwait
ins
rcr
sub
sub
mov
add
test
sub
push
jno
and
push
push
push
pop
push
mov
test
pop
dec
test
sbb
add
jl
mov
cmps
shr
scas
pop
(bad)
add
inc
mov
pop
int
fwait
stos
hlt
outs
cmps
push
xor
leave
mov
sub
sub
mov
add
cli
loop
cwde
int
out
fisubr
jmp
imul
stos
hlt
cmps
cmps
pushf
test
mov
in
repnz
jg
add
or
dec
dec
pop
fs
leave
jbe
xchg
cmps
sub
inc
mov
push
inc
add
xchg
hlt
jne
outs
pop
push
cwde
int
in
fisubr
leave
cwde
int
lock
jmp
mov
add
sub
fs
leave
repnz
sub
push
jno
sbb
repz
push
stos
(bad)
adc
xchg
rol
div
pop
xor
add
mov
push
in
cmps
dec
sub
add
add
jmp
push
mov
rcl
imul
adc
or
push
push
push
(bad)
cmp
sub
out
add
lods
mov
shr
ficom
out
add
fwait
mov
adc
inc
imul
xor
add
jbe
pusha
adc
or
push
push
push
(bad)
cmp
sub
cmps
or
lods
mov
clc
ja
add
pop
gs
leave
call
in
ficom
ja
add
xor
push
lods
sub
aaa
mov
add
mov
sub
add
cs
jle
ss
ins
loope
stos
fisub
iret
in
fisubr
add
jae
mov
add
jo
dec
push
push
(bad)
cmp
sub
aaa
or
icebp
pop
leave
xchg
pop
pop
mov
pop
adc
or
xor
xchg
dec
and
repnz
jmp
cmp
add
sub
adc
rcl
in
ja
and
fadd
leave
or
mov
adc
inc
cmp
push
ins
sub
out
fisubr
jmp
dec
add
std
loop
aam
add
cmp
pop
test
cmp
into
in
fisubr
retf
add
dec
sbb
fisubr
shr
call
cmps
sub
sub
adc
hlt
data16
outs
pop
push
mov
les
rol
ja
jge
imul
add
imul
(bad)
in
push
mov
shr
pop
dec
test
push
inc
gs
leave
mov
cmps
shr
movs
pop
cmp
add
fwait
jb
dec
dec
leave
cwde
int
out
fisubr
jmp
or
inc
movs
sub
adc
mov
mov
nop
jb
dec
mov
imul
push
dec
jmp
leave
add
xor
mov
push
pop
push
cwde
int
in
fisubr
push
ror
out
fisubr
cmp
hlt
cmps
xor
jb
dec
mov
test
and
fisubr
pop
cmp
adc
add
xchg
div
and
fidiv
and
out
jb
cmp
clc
pop
push
stos
(bad)
cmp
jb
dec
adc
sub
inc
cmps
jp
add
xor
cmps
jmp
sbb
mov
rol
div
pop
das
es
and
mov
dec
adc
(bad)
fnsave
lods
aaa
cmp
shr
ficom
aas
out
add
jmp
test
inc
gs
push
cmp
adc
pop
(bad)
cmp
sub
daa
or
add
sahf
lods
aaa
cmp
shr
ficom
daa
out
add
cmps
in
add
push
push
mov
movs
adc
gs
push
cmp
adc
or
push
pop
pop
(bad)
jge
test
daa
push
inc
push
fwait
jb
dec
push
mov
outs
adc
clc
add
push
jecxz
push
push
add
dec
dec
adc
inc
int
inc
mov
inc
mov
xchg
test
lahf
outs
pop
leave
cwde
int
lock
jmp
scas
add
jmp
cmp
inc
mov
push
sub
fisub
add
(bad)
std
pop
mov
ins
rcl
xchg
jb
xor
push
gs
js
fisubr
push
add
sti
adc
sub
daa
stc
fild
mov
enter
ins
adc
fimul
bound
mov
pop
stos
ficom
cmp
add
xor
lods
sub
sub
add
mov
clc
mov
push
jmp
inc
(bad)
in
push
jnp
pop
in
cld
in
add
test
call
in
fimul
add
arpl
mov
sbb
inc
jnp
sub
sub
jl
add
test
or
dec
pop
stos
ficom
stos
mov
fist
(bad)
in
add
cmps
pusha
jmp
leave
add
adc
adc
push
xchg
add
lods
in
pop
adc
pop
sbb
dec
cmp
outs
push
add
and
lods
sub
add
add
jmp
cmp
fcmovbe
in
popa
test
jbe
push
adc
add
cmps
pop
das
das
push
ins
lods
shr
push
adc
add
dec
push
mov
fsubr
cmp
and
cmps
inc
adc
fwait
ins
rcr
sub
sub
mov
add
test
sub
push
jno
sub
adc
push
pop
push
mov
test
pop
dec
test
adc
add
jl
mov
cmps
shr
jbe
(bad)
add
inc
mov
pop
int
fwait
stos
hlt
outs
cmps
push
xor
leave
dec
outs
sub
fsubr
outs
in
mov
leave
cwde
int
out
fisubr
jmp
imul
cmps
pushf
test
mov
in
repnz
add
sahf
dec
dec
pop
fs
leave
jbe
xchg
cmps
loopne
shr
sbb
inc
mov
push
cmp
add
pop
push
cwde
int
out
fisubr
leave
cwde
int
lock
jmp
stos
add
pop
fs
leave
(bad)
jo
and
push
jno
add
stos
(bad)
adc
xchg
rol
div
pop
xor
add
mov
push
in
cmps
dec
sub
add
add
jmp
jecxz
add
pushf
push
mov
rcl
gs
push
cmp
adc
push
push
push
pop
pop
(bad)
cmp
sub
out
add
test
lods
shr
ficom
out
add
lahf
pushf
push
mov
rcl
gs
push
jns
dec
adc
repz
jbe
pusha
adc
push
push
push
pop
pop
(bad)
cmp
sub
cmps
or
test
cmp
push
imul
cmps
cld
cmps
shr
xacquire
inc
dec
int3
js
outs
pop
jmp
lahf
add
xor
leave
mov
xchg
mov
fwait
(bad)
cmc
pop
mov
inc
(bad)
in
stos
sub
shr
mov
test
(bad)
pop
xor
add
mov
adc
xchg
lea
add
mov
mov
retf
inc
adc
aam
push
push
adc
les
add
dec
adc
adc
add
mov
sub
ret
out
fwait
ins
shl
in
in
add
test
jbe
cwde
int
out
fisubr
jmp
or
jb
xchg
inc
adc
cmp
push
sub
fsubr
ja
push
icebp
add
popa
or
sti
sub
adc
clc
push
(bad)
jge
int
jmp
not
test
or
add
out
fisubr
inc
cmp
popf
push
mov
inc
(bad)
sbb
sub
cwde
int
out
fisubr
jmp
mov
call
in
fiadd
add
adc
rcr
adc
rcl
lea
push
test
(bad)
jne
xchg
push
fild
adc
shr
pop
dec
xor
aas
inc
ins
adc
lods
pop
cmp
in
ficomp
iret
in
fimul
add
dec
push
push
(bad)
sub
sub
sub
sub
int
add
jle
cmc
mov
sbb
iret
jo
imul
push
scas
es
adc
pop
pop
push
add
xchg
aam
(bad)
in
leave
sub
add
fwait
jb
dec
bound
and
xor
leave
(bad)
jo
sub
and
add
int
in
fisubr
adc
add
mov
shr
(bad)
add
jb
dec
adc
jg
add
push
imul
loopne
add
pop
in
and
add
int
in
fisubr
push
loope
add
jl
(bad)
and
push
pop
pop
(bad)
jge
lods
push
jecxz
sti
push
test
inc
mov
push
stos
fisub
add
xor
sub
sub
add
adc
or
xor
lahf
xchg
add
jmp
lahf
adc
gs
icebp
repnz
add
xor
leave
adc
adc
(bad)
add
mov
test
mov
call
add
test
sub
fisubr
ret
lea
sub
mov
in
fisubr
pusha
bound
jno
pop
sub
adc
adc
int
std
add
outs
xchg
mov
ficom
jns
add
push
stos
jmp
hlt
pop
inc
adc
fptan
jmp
add
mov
cmps
shl
pop
and
ds
lea
push
cmp
dec
retf
sub
pushf
shl
jo
adc
sub
xchg
jnp
push
adc
lock
xor
add
jo
scas
mov
adc
or
xor
shr
(bad)
pop
xchg
add
stos
fiadd
cmp
or
jb
daa
adc
(bad)
add
xchg
add
and
jecxz
inc
fild
test
adc
and
push
adc
add
imul
fisubr
add
push
stos
fiadd
adc
push
xor
mov
push
stos
fiadd
dec
cmp
pop
sub
pop
xchg
data16
inc
fimul
sub
add
push
lods
jle
adc
add
stos
fiadd
or
add
push
push
sti
adc
in
add
sub
clc
fisubr
in
stos
adc
and
push
adc
test
mov
stos
fiadd
adc
push
fdiv
sub
sub
cmps
mov
jbe
rol
sub
cmps
shr
pop
adc
into
in
fidiv
shr
xchg
jbe
icebp
adc
shl
adc
push
mov
mov
pop
stos
(bad)
push
add
shl
cvtps2pd
push
add
cmp
jno
outs
adc
sub
js
cdq
sub
sbb
cmp
mov
rol
into
enter
and
mov
mov
jb
pop
test
sub
aam
lods
inc
(bad)
repz
add
pop
fld
test
push
out
rol
jecxz
ins
push
stos
ficomp
(bad)
in
cmp
mov
adc
int
push
lods
sub
and
nop
call
or
test
std
add
pop
jmp
pushf
add
mov
pushf
cmp
lahf
outs
leave
xlat
lea
fcomp
pop
mov
adc
lods
mov
loope
xor
xor
adc
ja
outs
push
add
sub
(bad)
or
test
push
cmps
or
mov
sub
fld
add
jl
mov
add
adc
dec
cs
push
js
outs
xchg
cmps
fwait
pusha
sti
push
cdq
dec
loop
rcr
ficomp
xor
and
rol
jp
inc
inc
scas
dec
adc
inc
fiadd
push
mov
outs
test
adc
push
xor
jb
pop
test
inc
sti
xchg
push
mov
mov
push
stos
(bad)
push
add
shl
cvtps2pd
push
add
call
cvtps2pd
dec
(bad)
rcl
mov
push
stos
ficomp
mov
imul
sbb
sub
cld
ja
push
or
or
leave
pop
mov
jbe
stos
adc
add
dec
fdivp
push
jno
outs
cmp
rol
into
push
jge
inc
or
mov
bnd
inc
rcl
add
xor
push
lods
sub
scas
jmp
jg
rcr
cvtps2pd
push
add
aaa
inc
aam
pushf
outs
adc
sub
js
mov
add
repz
jno
outs
addr16
mov
add
test
sub
cdq
inc
sbb
or
jge
inc
mov
mov
test
add
out
jne
adc
loopne
push
xchg
add
add
xor
xor
and
xchg
mov
data16
and
daa
sub
stos
ficomp
xor
pop
dec
mov
add
mov
add
out
in
scas
cli
push
add
pusha
sub
repnz
add
fs
fstp
cdq
push
cmp
mov
bnd
add
xchg
iret
ins
fisubr
xchg
pop
xchg
(bad)
in
jb
es
adc
fstp
pop
das
mov
add
test
call
jb
inc
inc
adc
jge
repnz
inc
es
add
cli
call
add
repnz
inc
pusha
jbe
jo
adc
fild
test
add
test
add
pop
push
adc
add
xchg
nop
daa
sahf
outs
xchg
adc
shr
stos
lock
adc
ror
mov
inc
in
pop
imul
stos
test
mov
popf
push
jmp
and
ror
adc
test
jo
lods
dec
sbb
test
or
adc
xchg
in
aam
ds
rol
(bad)
jb
xchg
lea
mov
leave
push
jnp
stos
mov
fst
inc
fwait
push
xor
inc
into
mov
ret
sbb
pop
enter
jle
cs
dec
push
or
adc
in
fisubr
xchg
jge
loope
jnp
mov
and
add
jge
mov
sbb
xchg
dec
lahf
outs
call
in
fidiv
adc
mov
adc
leave
loope
sahf
cmps
les
loop
add
movs
leave
jmp
test
and
mov
rcl
jne
lea
outs
add
cdq
jmp
pop
push
jns
lahf
call
in
fidiv
pop
fild
outs
cmps
sub
leave
xor
adc
pop
ins
adc
adc
gs
shl
dec
xchg
or
outs
adc
jmp
ja
leave
dec
sub
hlt
pusha
mov
fisubr
jmp
int
add
cli
outs
cmps
sub
shr
jbe
stc
adc
rcl
nop
int
in
fisubr
pop
jmp
or
cs
mov
cmps
xor
mov
out
imul
loop
scas
rol
add
js
xchg
int
push
test
daa
ins
adc
rcr
push
mov
ins
loop
scas
ficomp
add
outs
xchg
ja
rcl
sub
add
or
in
jb
sub
adc
rcr
add
fwait
jmp
test
dec
xchg
mov
cdq
outs
xchg
test
test
inc
lea
push
add
cli
aaa
or
int
stos
sahf
pop
loopne
add
mov
fcom
add
pop
push
lods
ja
aad
mov
add
add
pop
std
add
vmread
retf
test
sub
mov
test
adc
or
js
movs
in
xchg
add
outs
test
inc
pop
adc
rcl
outs
cmps
cmps
sbb
pushf
mov
xchg
or
mov
pop
test
sub
fisubr
and
mov
leave
sub
in
fisub
ins
stos
fiadd
push
(bad)
sub
sub
test
jge
inc
fidivr
cmp
out
fisubr
jg
movs
pop
mov
jmp
dec
fiadd
pop
dec
inc
cli
outs
sub
push
xor
int3
in
(bad)
push
cmps
push
adc
enter
pop
push
dec
leave
jbe
sub
push
push
pop
ins
adc
leave
fidiv
sub
sbb
add
lods
shr
add
cmp
sub
outs
fild
jb
retf
inc
adc
cmp
cli
jo
sub
sbb
add
or
adc
pop
or
jmp
push
test
inc
add
pusha
test
outs
sbb
xlat
inc
push
jbe
push
mov
rcl
xchg
xor
sub
gs
shl
dec
push
adc
out
sub
jmp
dec
(bad)
in
push
mov
rcl
(bad)
sub
sub
sub
sub
xchg
cmps
inc
pop
adc
adc
push
or
adc
pop
dec
jp
adc
int
retf
add
call
test
inc
gs
shl
dec
sub
das
add
push
outs
test
cmp
adc
push
push
stos
(bad)
int3
in
fiadd
pop
ins
adc
leave
(bad)
jo
sub
sbb
mov
popf
inc
stos
out
and
cld
jbe
dec
ds
in
es
lahf
fldcw
sub
popf
arpl
xchg
stos
pop
mov
add
dec
adc
sub
shr
sar
test
int
pushf
repnz
inc
es
leave
sbb
add
inc
leave
cs
sub
in
in
(bad)
cmps
sbb
dec
leave
jb
sub
ret
out
adc
rol
fs
pop
test
sub
fisubr
ret
in
cmps
shr
stos
pop
retf
add
sub
outs
sub
sub
add
outs
sub
nop
int
out
fisubr
stos
sub
add
cmp
in
ficomp
int3
in
fidivr
adc
add
jae
ins
adc
leave
fidiv
sbb
lods
jge
outs
sub
add
cld
add
ja
xor
leave
sbb
or
mov
cmp
shr
(bad)
sahf
cmps
shr
inc
rcl
test
(bad)
adc
jns
inc
mov
sub
xchg
xchg
rcl
lea
jbe
inc
xor
cmp
mov
mov
dec
inc
or
mov
mov
fist
ins
std
inc
push
test
cmp
shr
jo
or
xor
add
or
dec
mov
jns
add
imul
shl
push
mov
lods
mov
inc
pop
in
scas
loop
add
xor
leave
pop
outs
sub
add
test
inc
or
shl
dec
dec
or
shr
sub
pop
fdivr
inc
push
test
cmp
imul
aad
inc
xor
leave
out
jno
and
adc
lea
in
jmp
imul
rcr
push
jmp
mov
test
sub
fisubr
or
int
out
fisubr
aas
cmp
in
(bad)
jbe
adc
inc
cmp
popa
mov
xor
push
clc
cmps
push
adc
inc
cmp
pop
test
cmp
test
adc
shl
dec
push
jmp
mov
add
hlt
mov
hlt
test
in
repnz
repz
xor
leave
pop
jno
or
sub
cwde
int
jmp
dec
retf
add
xor
int3
in
fisub
dec
sti
add
sub
enter
fisubr
fcmovnu
sub
sub
add
xor
leave
mov
sub
fld
jmp
mov
add
outs
xchg
or
sub
cwde
int
jmp
(bad)
xlat
add
push
jnp
lahf
in
in
add
xor
leave
out
or
add
dec
sub
add
push
inc
mov
jmp
leave
jb
sub
pop
push
lods
ja
aad
loopne
add
or
int
push
imul
inc
imul
shl
repnz
inc
add
pop
fdivp
inc
test
jmp
mov
add
mov
cmps
inc
fdivrp
stc
pop
push
dec
mov
les
push
add
lods
push
jns
inc
mov
cmp
test
or
cli
push
mov
leave
push
stos
inc
stos
cmp
mov
dec
mov
or
int
enter
nop
cwde
adc
in
(bad)
jbe
cmp
icebp
clc
pop
push
mov
(bad)
jge
(bad)
repnz
and
leave
jb
sub
mov
jle
js
jl
stos
pop
lock
inc
push
mov
cmp
clc
cs
dec
int
js
dec
push
pop
int
jbe
dec
cmp
aam
retf
dec
pop
ja
adc
pop
push
mov
cmp
das
pop
pop
test
in
push
jnp
scas
in
jg
add
cmps
shr
stos
cli
loop
mov
inc
fisubr
sub
fldcw
mov
fidiv
call
sar
dec
mov
adc
push
inc
mov
xor
leave
mov
add
mov
cmp
in
(bad)
cmps
dec
cs
cmps
hlt
mov
cwde
test
inc
mov
add
test
inc
lahf
lea
sub
pop
int
push
push
jge
loope
adc
push
cmp
adc
xor
cmp
scas
cmps
cld
test
in
sbb
inc
imul
rcr
bnd
add
adc
pop
dec
xchg
xchg
ficom
outs
test
inc
adc
shl
sub
shr
out
pop
jg
add
dec
sub
aad
in
(bad)
mov
aam
shr
repnz
add
mov
clc
test
in
sbb
inc
jae
test
(bad)
add
leave
out
mov
add
push
cmp
add
pop
aam
dec
cmps
add
int
out
fisubr
pop
cmp
adc
add
jb
dec
dec
jmp
scas
add
scas
jmp
add
jmp
leave
jb
sub
pop
push
push
(bad)
clc
or
pop
(bad)
jge
leave
repnz
xor
add
xchg
leave
mov
add
add
fs
or
test
sub
mov
mov
add
outs
lods
ja
vmovlhps
add
or
int
js
dec
push
pop
int
jbe
dec
cmp
dec
cmps
fs
adc
lea
mov
adc
lods
ja
aad
dec
rol
push
nop
int
out
fisubr
or
adc
pop
push
mov
cmp
adc
imul
outs
sub
(bad)
sahf
cmps
enter
push
ret
inc
daa
adc
ds
mov
inc
mov
fld
or
cwde
js
dec
push
mov
test
sahf
dec
outs
jmp
mov
inc
pop
mov
loope
stos
inc
pop
mov
int
loope
adc
leave
out
sbb
jb
dec
or
sbb
int
out
fisubr
phaddw
in
fisubr
shr
loop
inc
movs
add
push
xor
inc
imul
shl
repnz
cmc
inc
(bad)
rcl
adc
shr
push
daa
call
in
fisub
xor
add
sbb
mov
outs
lods
aaa
cmp
shr
ficom
xor
jo
lods
aaa
cmp
cmps
cmps
test
jg
add
push
jns
arpl
cmp
add
jb
mov
in
das
sbb
shr
push
inc
pop
(bad)
outs
sub
cwde
int
jmp
mov
add
scas
in
lods
fld
add
adc
add
(bad)
in
ficomp
cmps
shr
sub
aad
scas
(bad)
mov
adc
dec
push
fisubr
or
int
js
cmps
sub
fldcw
push
jmp
shr
fiadd
ins
sbb
pmullw
jmp
sahf
repnz
inc
pusha
push
jno
pop
sub
sbb
cmps
shr
jmp
jnp
dec
cli
jne
adc
add
push
mov
cmp
shr
(bad)
xor
dec
fiadd
mov
inc
iret
adc
sub
add
daa
fcom
out
adc
add
jo
ret
mov
inc
adc
clc
mov
in
or
add
cdq
xor
pop
cli
or
push
xchg
aad
cmps
shr
test
cmp
dec
out
adc
repnz
test
std
add
cmp
sbb
or
sub
mov
outs
mov
cmp
shr
ficom
push
out
inc
test
adc
imul
add
add
int
out
fisubr
(bad)
out
add
shl
mov
cmp
sub
stos
clc
outs
cmps
cmp
outs
ret
add
sub
sub
dec
(bad)
in
stos
sub
shr
loopne
test
sub
lahf
call
in
fisubr
dec
add
cmps
leave
push
pop
dec
imul
sub
push
add
int
out
fisubr
pop
cmp
in
fidivr
ror
add
sub
ret
or
sub
xchg
hlt
add
push
(bad)
call
in
fisub
jg
popf
idiv
adc
call
test
sub
das
inc
add
stc
or
xchg
adc
in
fisubr
cmps
sub
cmps
sbb
push
in
fisubr
push
mov
mov
adc
and
push
push
stos
(bad)
adc
jb
dec
adc
pop
dec
add
outs
adc
add
xchg
lahf
mov
jmp
xchg
test
inc
jnp
test
stc
inc
es
fst
call
in
fimul
addr16
add
mov
in
push
add
add
dec
addr16
repnz
gs
push
cmp
adc
push
push
pop
pop
(bad)
cmp
sub
scas
out
add
test
push
shr
ficom
lahf
int3
add
cli
test
and
add
pop
(bad)
cmp
sub
xchg
out
add
sbb
test
sub
pop
int
out
mov
cmp
lods
hlt
mov
mov
repz
jmp
adc
in
xchg
dec
inc
mov
mov
sbb
jp
xchg
or
test
call
cmp
sub
fst
shr
push
mov
fwait
mov
movs
out
fisubr
les
addr16
and
shr
aad
leave
xchg
push
sub
test
or
sub
cwde
int
lock
pushf
fisubr
mov
adc
mov
cmps
jo
shr
mov
add
cmps
aam
shr
sbb
inc
imul
ror
push
mov
mov
adc
push
(bad)
sub
sub
dec
(bad)
in
stos
sub
shr
mov
add
(bad)
xchg
pop
daa
push
test
push
adc
sub
jbe
adc
lods
adc
xchg
in
aam
stos
hlt
cmps
cmps
adc
shr
stos
sub
shr
mov
add
(bad)
xchg
bound
push
test
jbe
adc
mov
xchg
stos
adc
xchg
in
aam
sbb
inc
outs
sbb
aaa
add
pusha
lahf
pushf
push
repz
ja
test
inc
gs
push
jno
outs
sub
adc
mov
(bad)
xor
sub
cmp
add
test
push
shr
ficom
push
retf
add
lahf
pushf
push
repz
retf
adc
inc
gs
push
jno
fild
adc
xor
(bad)
cmp
sub
cwde
int
jmp
iret
lock
push
stos
inc
fwait
cmp
inc
in
fisubr
mov
(bad)
jbe
js
cmp
push
push
mov
cmp
or
xchg
adc
mov
pop
es
xor
push
cwde
int
in
fisubr
ret
mov
aad
inc
es
push
stos
inc
cmps
fldcw
sub
xchg
dec
push
mov
dec
leave
outs
sub
pop
jb
sub
sub
(bad)
fimul
nop
int
out
fisubr
pop
cmp
sub
fisubr
repz
xor
sub
cwde
int
lock
pop
cmp
adc
shl
dec
push
adc
js
sub
shr
mov
js
add
test
cmps
cmp
shr
sbb
inc
outs
sbb
mov
jb
dec
repnz
imul
outs
sub
sub
sub
dec
(bad)
in
stos
sub
shr
mov
or
sub
xchg
loop
push
test
mov
sub
add
adc
aam
pop
dec
mov
mov
push
(bad)
sub
sub
mov
add
sub
sub
stos
hlt
cmps
cmps
sbb
je
add
dec
sub
xchg
push
daa
push
test
add
dec
add
adc
add
dec
jb
cwde
int
jmp
(bad)
sub
sub
mov
add
xchg
sub
ficomp
shr
ficomp
int3
in
fidivr
sub
add
mov
fisubr
sub
lods
lahf
pop
jmp
adc
add
sub
jmp
sbb
add
sub
imul
sub
or
add
int
out
fisubr
(bad)
add
mov
mov
out
add
jb
dec
sub
sbb
xor
leave
(bad)
jo
sub
or
add
int
out
fisubr
and
add
mov
int3
test
in
repnz
inc
push
fwait
jb
dec
out
adc
outs
sbb
xor
leave
(bad)
jo
sub
or
push
nop
int
in
fisubr
adc
add
mov
xor
shr
repnz
out
add
jb
dec
bound
sbb
xor
leave
dec
outs
sub
add
mov
loopne
mov
or
jb
dec
xchg
adc
iret
sbb
int
jmp
adc
cli
test
or
dec
xchg
jmp
jmp
adc
shl
dec
jle
adc
clc
in
outs
sub
jmp
leave
jb
sub
into
hlt
cmps
cmps
movs
test
mov
clc
add
fdiv
sub
ins
lods
xchg
stos
sub
shr
ret
out
add
dec
adc
cli
out
leave
cwde
int
jmp
js
enter
adc
add
adc
fwait
add
jo
arpl
(bad)
jge
xchg
repnz
inc
push
fwait
jb
dec
xchg
adc
xchg
dec
enter
fisubr
xor
test
ss
cwde
int
in
fisubr
jmp
mov
lods
inc
cmp
sub
sub
sub
add
jmp
leave
jbe
sub
add
xor
leave
jb
pop
mov
repz
pop
adc
shr
pop
dec
jp
adc
fst
cmp
inc
in
fisubr
cmps
ins
ror
(bad)
mov
adc
shr
repnz
inc
xor
ins
lods
shr
(bad)
repnz
cmps
sub
rol
pop
dec
repnz
sub
in
div
add
ins
lods
leave
sbb
test
sub
int
int
hlt
cmps
cmps
cmp
shr
stos
hlt
cmps
cmps
cwde
cmps
shr
repnz
adc
and
dec
push
adc
imul
pop
adc
std
sbb
inc
outs
sbb
inc
mov
sub
sub
dec
(bad)
in
stos
pop
lods
in
add
dec
sub
sub
shr
call
imul
add
add
mov
loope
lods
sub
sub
sub
sub
sub
call
out
add
mov
jmp
jae
test
cmps
cmps
pushf
test
adc
add
dec
sub
xchg
xchg
daa
push
test
mov
sub
sub
test
repnz
xchg
(bad)
cmc
or
mul
adc
push
arpl
cmp
push
push
stos
(bad)
adc
cmp
push
stos
(bad)
xor
fwait
jb
dec
xchg
jmp
in
add
test
sbb
mov
add
lahf
pushf
push
mov
rcl
gs
push
cmp
adc
push
push
pop
pop
(bad)
cmp
sub
(bad)
in
add
test
adc
in
ficom
jg
add
lahf
pushf
push
repz
mov
xor
add
ins
lods
fnstcw
int
and
sahf
lods
aaa
cmp
shr
ficom
push
mov
xchg
adc
in
(bad)
cmps
sub
inc
xchg
icebp
push
fwait
jb
dec
adc
mov
mov
call
pop
add
cmps
xor
xchg
cdq
stos
inc
jmp
outs
sub
push
int
adc
mov
loope
pop
call
(bad)
add
jge
aad
sub
in
ficom
in
add
jbe
sbb
inc
outs
sbb
inc
stos
(bad)
(bad)
jb
dec
repnz
push
sbb
dec
cwde
int
jmp
nop
int
out
fisubr
retf
dec
inc
mov
mov
imul
dec
rol
mov
mov
rcl
shr
mov
pop
cmp
in
ficomp
dec
nop
leave
mov
out
movs
leave
dec
mov
sar
inc
push
jae
sti
leave
and
out
fisubr
inc
cmp
dec
cwde
int
out
fisubr
jmp
jmp
add
stos
inc
cmps
xchg
add
hlt
pop
sub
adc
add
jmp
adc
sub
in
hlt
adc
jb
dec
rol
and
mov
adc
shr
repnz
in
add
sbb
pop
dec
xchg
xchg
mov
mov
loope
das
das
pop
mov
inc
cmps
sub
dec
rol
fistp
shr
ficom
mov
imul
dec
xchg
add
outs
sub
jl
jb
popf
mov
dec
inc
mov
mov
jno
sub
adc
jb
dec
out
adc
mov
or
xor
leave
(bad)
jo
sub
aad
add
(bad)
shl
dec
xchg
jmp
out
add
outs
xchg
or
sub
xchg
add
jo
xchg
or
sub
ja
add
jo
xchg
or
sub
addr16
add
outs
xchg
or
sub
cwde
int
jmp
aas
out
add
jnp
fwait
inc
add
push
nop
int
lock
gs
adc
sub
int
in
(bad)
imul
sub
test
nop
cwde
mov
in
ficom
clc
inc
fadd
call
jmp
in
fisubr
push
cwde
int
out
fisubr
sub
ud0
es
sbb
inc
imul
shl
adc
xchg
leave
mov
push
popa
clc
sti
xor
call
cmps
dec
cs
mov
fs
add
dec
sub
or
mov
test
fld
mov
outs
sub
push
leave
xor
sub
adc
sbb
ja
mov
mov
cmp
clc
fiadd
add
add
shl
cwde
int
out
fisubr
jmp
cli
shr
pop
sub
push
cwde
int
out
fisubr
push
nop
int
out
fisubr
pop
cmp
adc
inc
add
cmps
sbb
inc
imul
sar
adc
push
push
nop
int
out
fisubr
mov
add
mov
clc
test
in
sbb
inc
jae
test
jmp
outs
cmp
outs
retf
(bad)
jb
dec
rol
test
mov
jmp
add
push
mov
arpl
sbb
pop
pop
xchg
(bad)
test
fisubr
jmp
fadd
jo
pop
push
push
int
sub
jp
adc
xchg
adc
outs
(bad)
clc
das
test
push
test
adc
fisubr
dec
cmp
sub
mov
pushf
sbb
inc
jae
test
fcos
add
jb
dec
xchg
jmp
inc
add
lods
mov
shr
ficom
lods
inc
add
fwait
mov
adc
jp
adc
cdq
adc
inc
fimul
or
cdq
mov
(bad)
cdq
push
sbb
or
dec
ss
pop
jnp
add
xchg
sar
xchg
arpl
test
push
test
mov
or
inc
imul
shl
push
test
sub
ins
inc
sub
fisubr
xor
test
push
in
fimul
aas
adc
sar
xchg
inc
mov
mov
adc
push
mov
fisubr
sub
jne
fstp
push
shr
ficomp
shr
ficom
mov
add
cmps
cmps
ins
lods
shr
stos
outs
sub
pop
outs
sub
fisubr
push
cwde
int
out
fisubr
int
test
and
mov
jmp
arpl
push
inc
es
sbb
inc
imul
rcr
fs
leave
mov
adc
or
push
stos
(bad)
adc
jb
dec
mov
sub
jbe
adc
lahf
adc
xchg
in
aam
push
retf
and
outs
outs
sub
mov
sub
or
push
stos
(bad)
adc
pop
push
pop
int
popf
sbb
inc
ja
test
push
inc
es
stos
hlt
cmps
cmps
sbb
shr
sbb
inc
outs
sbb
rol
mov
jmp
inc
add
test
sbb
mov
mov
rcl
gs
push
cmp
adc
push
push
pop
pop
(bad)
cmp
sub
jg
add
test
adc
in
ficom
pop
add
test
sub
ins
leave
out
xchg
add
push
fwait
jb
dec
adc
lahf
inc
add
enter
jmp
adc
cli
test
and
(bad)
pop
pop
(bad)
cmp
sub
das
inc
add
jb
inc
inc
adc
cmp
push
jo
sub
inc
add
test
in
push
repz
unpcklps
xchg
xchg
fwait
adc
(bad)
repz
imul
mov
sub
sub
pop
inc
in
fisub
lods
xchg
bnd
inc
push
jbe
push
repz
pop
adc
rcl
gs
rcl
pop
(bad)
outs
sub
dec
push
shr
test
int
out
fisubr
pop
cmp
in
fidivr
retf
add
dec
and
outs
sub
ret
push
enter
fisubr
add
add
dec
push
leave
cwde
int
jmp
push
int
in
fld
in
inc
sub
push
fisubr
pop
(bad)
sub
sub
and
in
add
(bad)
clc
cmps
and
dec
leave
jb
sub
pop
mov
xchg
adc
shr
lods
hlt
cmps
cmps
cmp
shr
stos
hlt
cmps
cmps
cwde
cmps
shr
repnz
out
adc
jb
dec
push
adc
imul
pop
xchg
daa
adc
push
std
sbb
inc
outs
sbb
inc
mov
sub
sub
dec
(bad)
in
stos
pop
sub
sub
sub
shr
cmps
push
jbe
xor
push
imul
add
add
mov
loope
lods
sub
sub
sub
sub
sub
push
out
add
mov
jmp
jae
test
cmps
cmps
pushf
test
xchg
in
add
(bad)
xchg
xchg
daa
push
test
mov
sub
sub
mov
add
cmc
or
mul
adc
mov
adc
(bad)
adc
mov
(bad)
xor
fwait
jb
dec
xchg
jmp
inc
add
test
sbb
aaa
aas
add
lahf
pushf
push
mov
rcl
gs
push
cmp
adc
inc
push
push
pop
pop
(bad)
cmp
sub
cmovne
test
adc
in
ficom
(bad)
cmp
add
mov
out
inc
or
(bad)
jno
or
(bad)
inc
add
iret
adc
rcl
or
(bad)
jo
or
sub
inc
retf
pop
sbb
out
shr
leave
das
mov
cmp
mov
adc
shr
mov
xor
sub
push
mov
pop
out
in
jb
sub
sahf
outs
adc
add
js
inc
jecxz
popa
mov
imul
xor
gs
imul
repnz
xor
mov
jp
popf
mov
in
inc
sahf
add
adc
mov
push
lods
dec
enter
push
pop
xchg
scas
add
test
inc
add
call
push
jp
pop
pop
cmp
add
push
push
pop
ins
adc
inc
cs
cmc
ret
cmps
push
jbe
mov
push
lods
imul
ret
stos
ficomp
lahf
add
pop
push
xor
stos
pop
inc
sub
pop
(bad)
repnz
mov
add
push
(bad)
je
adc
(bad)
je
sahf
sbb
test
inc
pop
add
sbb
inc
mov
and
xchg
je
add
cdq
sub
dec
cmp
inc
and
jmp
push
add
test
adc
(bad)
icebp
clc
les
jge
fwait
push
ss
arpl
js
pop
mov
mov
clc
sub
and
jmp
push
add
test
adc
(bad)
icebp
clc
in
test
jge
fwait
push
adc
arpl
js
pop
cmps
dec
inc
push
mov
clc
sub
dec
(bad)
in
lods
cli
out
jmp
push
add
test
adc
(bad)
icebp
clc
xor
add
pop
aam
fcomp
arpl
js
pop
outs
dec
inc
push
mov
clc
sub
dec
(bad)
in
lods
cli
out
jmp
push
add
test
adc
(bad)
icebp
clc
pop
test
inc
aam
fcomp
arpl
js
pop
pop
dec
inc
push
mov
clc
sub
and
jmp
push
add
test
adc
(bad)
icebp
clc
daa
test
inc
aam
fcomp
arpl
js
pop
xor
mov
clc
sub
and
jmp
pop
add
test
adc
(bad)
icebp
clc
dec
test
inc
aam
fcomp
fs
js
pop
std
dec
inc
push
mov
clc
sub
dec
(bad)
in
lods
cli
out
jmp
pop
add
mov
adc
(bad)
icebp
clc
xchg
test
inc
aam
scas
fwait
push
adc
fs
js
pop
in
inc
push
mov
clc
sub
adc
(bad)
cmc
ret
cmps
push
nop
cwde
add
sbb
hlt
pop
(bad)
std
add
cs
jb
leave
inc
adc
or
xchg
jmp
push
adc
xchg
mov
add
inc
add
jmp
fs
leave
test
and
stc
add
test
adc
or
xchg
jmp
push
test
rcr
inc
cdq
bound
pop
adc
call
ins
add
add
xor
mov
repnz
lods
es
or
add
in
ss
jmp
add
adc
or
add
fadd
add
add
mov
mov
js
clc
gs
movs
add
add
rcl
or
add
fs
hlt
push
sbb
adc
adc
jbe
loop
test
xchg
inc
push
add
push
xor
jmp
add
into
rol
(bad)
icebp
repnz
inc
test
fdivr
jne
lea
int
sub
pop
leave
push
stos
loop
sub
pop
int
stos
mov
sar
jo
adc
scas
pop
mov
sbb
into
in
fisubr
pop
lea
mov
outs
mov
or
mov
push
lods
dec
push
add
cmp
push
lahf
repnz
and
lahf
outs
adc
add
call
or
xor
pop
push
xchg
push
test
repz
leave
push
lods
dec
push
add
cmp
cdq
lahf
mov
cmp
rcl
gs
fwait
xchg
cwde
or
add
push
popa
and
call
test
leave
inc
adc
jge
repnz
ret
xchg
adc
outs
lods
add
add
lods
dec
loopne
inc
lea
sbb
lods
push
je
add
hlt
push
sbb
ins
add
bnd
add
pusha
test
add
mov
push
in
cmps
dec
sub
lea
add
add
js
push
fadd
sahf
pop
jmp
test
test
mov
add
pop
mov
xchg
fcomi
mov
add
add
gs
shl
out
sub
add
adc
add
xor
add
jb
or
lea
in
fisubr
push
xchg
adc
leave
inc
ja
rol
push
clc
cmps
cmps
cmp
shr
test
mov
push
cwde
int
out
fisubr
and
test
pop
push
or
adc
gs
leave
add
or
sub
aad
add
mov
xor
jo
or
sub
xor
sub
cwde
int
out
fisubr
ret
mov
sub
sub
sub
pop
(bad)
in
push
repz
and
shr
pop
dec
pop
adc
adc
gs
leave
push
outs
sub
fld
xchg
xchg
pop
cmp
in
ficomp
shr
pop
dec
xchg
cmp
in
aam
push
stos
inc
jae
adc
pop
push
mov
fisubr
sub
add
xor
sub
cwde
int
out
fisubr
jmp
ss
ret
ja
sub
inc
sahf
mov
mov
(bad)
mov
sbb
mov
mov
add
leave
or
cmps
sub
mov
add
lods
sub
sbb
add
mov
sub
bound
adc
jbe
and
fist
add
pop
imul
shr
test
test
in
jb
sub
lahf
outs
adc
add
jb
dec
mov
push
mov
add
fwait
inc
outs
in
push
xchg
add
xor
leave
retf
mov
add
jmp
test
or
adc
push
jns
aas
adc
addr16
jo
ja
push
nop
int
in
fisubr
icebp
push
add
mov
adc
shr
pop
dec
pop
adc
adc
ins
in
xor
loopne
shr
sbb
inc
pop
adc
mov
add
inc
mov
jmp
leave
cmps
jo
or
fldcw
cwde
int
in
fisubr
push
cwde
int
in
fisubr
leave
cwde
int
out
fisubr
jmp
das
add
sub
push
(bad)
sub
sub
push
pop
add
int
out
fisubr
jmp
addr16
push
nop
int
in
fisubr
pop
cmp
adc
add
or
dec
inc
fisubr
imul
inc
mov
test
mov
movs
push
stos
inc
mov
push
stos
inc
xchg
mov
loope
inc
inc
inc
adc
dec
leave
out
jo
and
into
jp
adc
leave
mov
adc
push
push
mov
or
mov
mov
add
mov
int
popf
push
stos
inc
cmps
fs
leave
ret
inc
cmp
mov
push
(bad)
ins
lods
mov
xor
cmps
cmps
push
test
in
stos
hlt
scas
cmps
lods
test
add
add
add
dec
mov
cmp
mov
adc
out
jb
sub
xchg
sub
push
jns
pop
lods
inc
cmp
adc
fisubr
sub
lds
test
inc
mov
push
mov
mov
adc
mov
(bad)
sbb
or
les
dec
and
int
jo
dec
push
nop
rcl
in
fcomi
cmps
pop
xor
or
in
push
lods
sub
mov
sub
adc
inc
cmp
jb
dec
jmp
push
call
ins
push
stos
ficomp
(bad)
in
push
stos
inc
mov
pushf
outs
adc
add
stos
xchg
push
test
adc
mov
jmp
(bad)
add
cmps
shr
pop
adc
imul
pop
outs
sub
fld
test
stos
xchg
add
adc
push
lods
inc
cmp
sub
add
std
add
push
jbe
push
mov
rcl
gs
shl
dec
adc
lahf
dec
add
push
nop
int
in
fisubr
pop
cmp
in
ficom
les
add
mov
add
mov
add
js
dec
pop
adc
jbe
outs
sub
mov
test
in
leave
xor
das
out
add
movs
jmp
push
test
in
inc
sbb
inc
adc
xchg
adc
push
cmp
gs
xor
pop
push
clc
jge
add
push
pop
add
adc
pop
push
xchg
mov
jbe
adc
mov
clc
rol
pop
mov
shr
add
pop
and
add
pop
stos
popw
sub
add
js
cmp
add
clc
gs
in
imul
push
add
sbb
pop
push
push
push
inc
fs
jo
pushf
outs
pop
jmp
xor
add
sub
push
outs
test
jb
push
inc
mov
lahf
add
jmp
push
add
cmp
dec
adc
vmwrite
cli
add
push
stc
add
add
aad
add
inc
add
mov
cs
add
adc
push
adc
push
jb
add
push
inc
add
js
outs
adc
push
les
stos
push
ins
adc
aas
add
popf
push
in
push
add
add
mov
xlat
dec
add
repnz
fs
xor
in
ffreep
add
add
std
add
shl
push
inc
add
lea
fst
adc
add
enter
push
bound
add
push
push
add
lea
add
mov
sub
sbb
add
sub
fidivr
enter
in
fisubr
mov
or
stos
(bad)
lods
jnp
add
adc
xchg
jmp
xchg
add
inc
add
sub
pop
push
inc
mov
stos
ds
lods
rol
xor
push
test
push
add
test
add
add
add
lods
lods
fst
sub
sub
add
sbb
dec
add
xor
push
add
(bad)
jmp
imul
jb
retf
pop
push
push
push
inc
fs
add
pop
jle
add
dec
sub
xchg
jb
pop
test
add
add
stos
push
jp
sub
add
xchg
mov
push
in
jb
add
mov
jmp
fadd
pop
sub
leave
push
add
xor
cs
jb
jae
cs
push
lods
sub
cmp
jmp
das
jb
sub
push
lods
sahf
xchg
add
pop
in
sar
pop
iret
xor
xchg
popf
adc
in
fidivr
sub
mov
adc
in
add
mov
dec
add
add
jae
dec
adc
xchg
push
push
push
pop
ins
adc
jmp
push
add
test
rol
add
pop
dec
xor
add
sub
add
adc
gs
shl
xchg
add
jmp
add
pop
das
xor
add
repnz
add
js
outs
out
cmp
sbb
sub
imul
cdq
outs
xchg
xchg
adc
add
mov
push
stos
ficom
jbe
repnz
adc
add
mov
adc
fistp
push
cmp
inc
les
rcl
popf
repnz
add
push
into
rcr
call
stc
push
add
imul
jo
xchg
mov
js
fld
imul
rcr
test
add
fisubr
push
ins
test
in
ficomp
rol
mov
test
xor
std
add
lea
sbb
(bad)
nop
cmp
push
jne
ins
lea
ficomp
add
mov
cmp
lahf
add
or
cmp
pop
add
push
lahf
xchg
in
cdq
aaa
imul
shr
jb
sub
lock
shr
lods
shr
or
clc
out
add
pop
imul
xor
adc
inc
jmp
mov
pop
mov
cmc
mov
jmp
pop
lods
cld
in
fisubr
dec
or
shr
(bad)
pusha
xchg
xchg
jmp
js
pop
pop
cmc
add
push
stos
ss
dec
mov
clc
cmc
aad
jmp
mov
ret
sar
adc
or
inc
pop
ret
xchg
clc
cmp
add
pop
push
mov
sub
retf
repnz
mov
loope
sub
ficom
push
cmp
add
xor
push
(bad)
jno
add
sub
push
inc
fisubr
jnp
cdq
jle
push
lahf
es
adc
aaa
mov
adc
xchg
dec
jo
pop
test
pop
jbe
mov
sub
add
(bad)
shl
mov
add
adc
ins
adc
leave
push
add
inc
ins
shr
ficom
push
cmp
add
xor
push
(bad)
jno
add
sub
sahf
inc
fisubr
jnp
cdq
jle
push
lahf
es
adc
aaa
mov
adc
xchg
dec
jo
sub
ins
loope
in
fisub
adc
xchg
in
aam
jo
lods
push
dec
add
add
and
inc
push
jbe
push
hlt
push
add
add
stos
push
jb
ret
add
movs
add
pop
xchg
test
daa
nop
retf
hlt
xor
lods
push
cmp
add
xor
push
(bad)
jno
add
sub
push
aas
fisubr
jnp
cdq
jle
push
scas
es
adc
mov
xor
dec
jbe
inc
mov
lahf
das
cmp
sahf
js
aaa
mov
adc
(bad)
js
jecxz
jmp
stc
add
sub
push
outs
test
jb
push
inc
in
push
add
xor
add
cmps
clc
mov
push
dec
je
fisubr
enter
cwde
pop
lods
sub
add
sub
scas
ficomp
pop
stos
ficom
adc
stos
dec
xchg
(bad)
push
test
adc
add
xchg
unpcklps
xor
add
or
inc
adc
test
inc
clc
push
add
jmp
add
dec
jmp
and
jp
xchg
cmps
and
mov
add
cmps
mov
test
lods
sub
pop
or
lahf
inc
adc
cmp
jmp
push
add
jb
lahf
inc
adc
cmp
leave
push
add
inc
(bad)
jmp
jg
outs
sub
xor
add
push
lods
push
dec
add
add
lods
(bad)
xchg
in
cld
pop
add
add
xor
cs
jmp
sbb
mov
push
shr
in
ficomp
rcl
adc
jbe
add
lahf
xchg
fcomi
mov
add
add
gs
shl
xchg
add
adc
push
push
push
pop
ins
adc
leave
push
add
inc
mov
pop
stos
ficomp
fucomp
fisubr
cdq
rol
cmps
push
lods
mov
push
add
sbb
xor
pop
out
and
add
adc
push
jb
retf
mov
pop
stos
ficom
ja
add
js
cmp
add
pop
mov
add
js
arpl
add
sub
jl
push
push
mov
ins
jo
in
ficomp
add
fdiv
add
or
std
add
cmps
mov
es
rol
div
pop
das
es
dec
pop
stos
fisub
shr
jo
xchg
pop
ins
test
adc
add
mov
dec
add
add
addr16
add
out
push
mov
clc
div
add
push
outs
test
cmp
ins
add
repnz
sar
add
jbe
outs
xchg
pop
fldcw
fcmovnu
outs
sub
inc
out
add
aaa
fisubr
shl
xchg
add
jb
lahf
inc
adc
clc
loopne
add
adc
lahf
add
or
inc
xor
outs
adc
test
xchg
or
or
adc
scas
add
or
call
pusha
xor
dec
xchg
mov
outs
pop
push
(bad)
rol
add
hlt
xchg
dec
add
add
lahf
add
add
test
inc
add
jl
lea
sbb
repnz
outs
pop
pop
ins
push
in
ficomp
shr
ficomp
jmp
or
add
cdq
sub
(bad)
jno
add
pop
aaa
sub
add
jnp
add
adc
gs
shl
push
inc
add
lea
fst
pop
sub
add
dec
push
lods
sub
jmp
in
pop
push
add
jmp
add
dec
jmp
and
jp
xchg
xchg
push
test
add
in
cmps
mov
test
lods
sub
(bad)
or
add
cmp
or
lahf
xchg
jne
pushf
adc
repz
jo
adc
in
fisubr
imul
in
repnz
adc
pop
xor
mov
test
lea
ficomp
add
fadd
leave
push
add
mov
pop
test
dec
cmp
xchg
adc
rcl
outs
mov
xchg
fisubr
xchg
ins
ror
ficom
out
add
jbe
repnz
icebp
inc
pusha
pop
stos
dec
sub
vmwrite
mov
ins
fs
outs
pop
jmp
or
add
jno
ret
fisubr
push
aaa
retf
das
mov
adc
lea
ins
adc
shr
ficomp
mov
je
add
outs
popa
clc
mov
add
pop
mov
lahf
add
jge
mov
cwde
and
jmp
leave
das
call
xor
adc
aaa
or
mov
mov
(bad)
jbe
inc
enter
rol
rol
add
jp
clc
pop
aaa
ins
loope
stos
(bad)
mov
add
add
fisubr
repnz
sub
add
adc
pop
pusha
or
sbb
jle
push
mov
in
adc
lods
mov
inc
and
fisub
rcl
mov
sub
inc
adc
add
shl
mov
add
adc
ins
adc
leave
push
add
inc
outs
popa
clc
xchg
add
pop
mov
lahf
add
aad
loope
add
and
out
add
out
leave
das
call
xor
adc
daa
and
push
xchg
jmp
ins
shl
xchg
add
adc
dec
push
push
call
sub
push
call
jmp
jb
mov
add
adc
add
ins
add
pop
xchg
mov
sbb
add
lods
push
mov
gs
xchg
rcr
shr
jb
sub
stc
add
push
cmp
sbb
xchg
or
call
outs
cmp
jmp
adc
sub
push
popa
or
or
mov
xchg
addr16
popf
repnz
add
xor
pop
enter
fsqrt
ins
aaa
in
aad
add
imul
(bad)
mov
shl
xchg
add
adc
add
dec
mov
jno
mov
add
popf
push
sub
add
add
lods
adc
shl
xlat
es
mov
push
in
mov
sbb
cmp
leave
and
rol
pop
test
xchg
push
outs
scas
jbe
jb
sub
ficomp
jmp
pop
add
lods
rol
xor
pop
ins
adc
jmp
dec
add
sbb
test
sub
adc
out
push
mov
clc
addr16
add
ins
pop
adc
sub
push
popa
or
or
mov
xchg
addr16
popf
repnz
add
xor
pop
enter
fsqrt
ins
aaa
in
ins
and
add
test
inc
in
pop
sub
add
adc
or
pop
push
inc
xchg
push
inc
in
movs
les
add
xor
cs
jmp
sbb
jge
test
(bad)
rcl
adc
mov
add
shl
mov
add
adc
dec
push
push
pop
ins
adc
leave
push
add
inc
outs
popa
clc
(bad)
sbb
call
ins
cmp
lahf
add
aad
fsub
js
(bad)
in
stos
pop
and
add
pop
stos
dec
sbb
or
or
enter
add
xchg
jecxz
ins
shl
xchg
add
adc
push
push
call
imul
jmp
jb
mov
add
adc
push
popa
pop
fisubr
pop
xchg
mov
sbb
add
lods
push
jp
mov
rcl
jg
into
in
ficomp
jmp
or
add
cdq
sub
(bad)
jno
add
pop
push
daa
add
lahf
xchg
fcomi
mov
add
add
lahf
add
jmp
dec
add
jo
adc
xlat
add
cmps
push
lods
mov
push
add
push
push
add
jle
and
add
mov
enter
cmps
mov
push
mov
pop
pandn
add
ins
lods
sub
mov
or
adc
add
mov
pop
repnz
sbb
(bad)
mov
sub
inc
sbb
iret
jo
imul
jo
xchg
xchg
outs
test
fisubr
push
in
shl
add
cmp
add
push
adc
mov
add
jl
add
lods
inc
dec
sbb
hlt
pop
xlat
sub
and
std
add
lea
sbb
(bad)
mov
out
rcl
cmp
test
sub
xchg
adc
cli
test
dec
js
sub
add
jl
or
cs
adc
in
cmps
mov
test
ror
pop
test
call
cmp
dec
adc
mov
cwde
outs
xchg
adc
rcl
mov
push
stos
ficom
js
fsubr
jmp
loop
add
imul
cwde
outs
xchg
and
rcl
mov
push
stos
ficom
jbe
repnz
add
in
sub
in
ficom
push
jb
push
inc
in
jns
add
add
add
lods
(bad)
mov
addr16
add
add
add
xchg
mov
pop
test
adc
jl
add
jae
push
xchg
test
adc
inc
add
js
sub
retf
push
cmp
imul
add
lea
fst
int3
and
add
(bad)
adc
pop
push
mov
pop
add
jb
xlat
add
add
lea
int
aad
inc
js
lods
sub
pop
gs
cmp
and
push
call
jmp
test
push
push
inc
fs
in
add
jns
add
repnz
gs
push
jb
push
inc
mov
push
stos
fisubr
mov
push
push
xchg
jg
ins
shl
or
add
adc
push
push
pop
push
mov
sub
jns
pop
push
pop
push
xchg
or
lods
push
adc
add
sub
inc
jl
push
stos
(bad)
adc
push
push
inc
adc
pop
push
mov
fisubr
repnz
cmp
add
jb
or
add
jmp
add
pop
hlt
and
add
lods
sub
(bad)
jno
add
pop
cmp
add
lahf
jb
xchg
add
jmp
add
pop
and
jb
mov
add
pop
push
push
push
inc
fs
add
pop
ins
js
add
(bad)
lahf
lods
push
lods
add
add
pop
push
mov
add
stos
push
inc
mov
in
jmp
(bad)
jno
add
sub
push
push
push
lods
push
and
add
(bad)
add
add
stos
dec
jo
out
cmp
mov
add
xor
push
add
(bad)
jmp
mov
push
add
add
jle
inc
in
hlt
cld
add
test
inc
in
aaa
xchg
add
xor
test
rol
inc
adc
lea
stos
sub
movs
push
push
push
xchg
mov
lahf
(bad)
pop
enter
out
fisubr
inc
mov
clc
pop
pop
mov
add
push
mov
lods
adc
inc
mov
dec
jge
push
inc
dec
add
iret
pop
push
xchg
jns
add
lahf
lods
push
mov
add
hlt
gs
fs
dec
stos
hlt
gs
fs
push
stos
hlt
cmp
sbb
add
adc
xchg
in
lods
js
clc
jge
cmp
aas
jns
clc
cmp
sub
inc
dec
adc
mov
ret
stos
ficom
mov
stos
xor
adc
sub
(bad)
fisubr
pop
add
push
jl
add
lods
(bad)
mov
add
add
adc
(bad)
sub
add
push
mov
in
in
inc
add
mov
add
dec
xchg
movs
add
add
sub
mov
xchg
add
push
pop
mov
inc
in
xchg
add
add
jb
mov
add
adc
push
adc
dec
mov
add
adc
pop
push
stos
ret
or
push
jb
push
inc
in
in
mov
add
test
call
fnstenv
add
imul
in
push
lods
ret
ins
cmp
fld
enter
in
fisubr
pop
mov
push
dec
push
push
shr
ficomp
jmp
add
mov
test
add
mov
add
in
jp
add
mov
add
pop
push
stos
data16
lods
inc
mov
lahf
lods
inc
lods
pop
push
stos
inc
lahf
lods
inc
call
push
inc
in
sbb
add
repnz
lea
pop
or
xor
cdq
pop
ret
push
int
outs
sub
pop
ss
mov
pop
test
(bad)
clc
push
push
shr
fisubr
xchg
lea
sub
test
adc
jb
xchg
add
jmp
add
pop
ins
scas
inc
push
cmp
inc
in
dec
ret
add
add
js
pop
xor
add
push
icebp
add
add
hlt
rol
add
or
das
add
jb
push
inc
add
lea
fst
sub
inc
enter
push
out
fisubr
mov
ins
shl
mov
add
adc
arpl
push
pop
push
mov
sub
icebp
xlat
pop
push
pop
push
xchg
jno
add
lahf
xchg
arpl
add
sub
sub
push
(bad)
sub
add
push
pop
jmp
aam
add
ss
dec
mov
call
push
jb
push
inc
fisubr
repnz
inc
xor
loope
push
dec
cmps
test
in
mov
jle
inc
(bad)
sbb
add
push
adc
cmp
add
dec
outs
sub
add
add
jo
ja
push
pop
jmp
lods
sub
push
frstor
jmp
dec
add
jb
inc
inc
adc
lea
cs
dec
test
in
sbb
test
mov
mov
add
test
inc
lea
pop
jg
add
es
dec
add
xor
jge
push
call
sub
add
push
pop
push
push
and
pop
push
push
cmp
pop
push
push
inc
mov
push
pop
fsub
add
dec
sub
add
sub
into
add
inc
xor
loope
push
dec
(bad)
lea
add
pop
add
add
dec
sub
add
add
pop
lods
jmp
jo
lods
jbe
adc
bound
push
pop
ins
adc
inc
xor
in
add
add
inc
add
add
add
push
pop
push
adc
fadd
xor
add
jb
push
inc
adc
xor
fisubr
push
xchg
adc
leave
inc
ja
rol
push
clc
cmps
cmps
sub
shr
test
mov
push
cwde
int
out
fisubr
and
test
bound
dec
and
mov
mov
mov
xor
jo
or
sub
jo
cmp
leave
mov
xor
leave
bound
sbb
lods
mov
outs
sub
add
test
call
in
fidiv
in
add
inc
add
shr
pop
dec
outs
adc
adc
fs
leave
stos
lahf
xchg
arpl
dec
push
adc
adc
xchg
in
aam
push
jmp
sbb
rcr
add
adc
pop
dec
jb
adc
iret
adc
gs
shl
dec
push
leave
cwde
int
out
fisubr
jmp
pop
add
push
jmp
rcl
shl
dec
xchg
adc
pop
int3
add
push
pop
int
jb
dec
xchg
adc
sahf
int3
add
jmp
inc
jae
pop
add
xor
leave
pop
outs
sub
add
or
in
fisubr
shr
fist
sub
sub
lods
sub
push
int
sub
outs
adc
adc
gs
leave
stos
sub
shr
fst
add
jb
dec
ss
(bad)
sub
sub
sub
sub
add
xor
leave
cli
outs
sub
pop
push
mov
fisubr
sub
add
jne
lds
inc
push
adc
mov
fs
outs
lods
pop
cmp
adc
mov
cmps
mov
cmp
xchg
mov
pop
dec
dec
adc
jbe
dec
cmp
pusha
int
sub
dec
push
test
rcl
lea
sahf
dec
inc
add
int
add
stos
inc
scas
fs
leave
mov
lods
inc
cmp
mov
push
(bad)
ins
lods
mov
inc
pop
push
test
cwde
int
out
fisubr
push
cwde
int
out
fisubr
push
nop
int
in
fisubr
and
add
dec
mov
cmp
lods
cs
outs
test
(bad)
fisubr
push
add
pop
cmp
shr
ficomp
add
pop
dec
jb
adc
fxch
or
or
mov
imul
dec
into
adc
test
and
shl
dec
icebp
adc
test
cmp
shr
(bad)
cmps
cmps
shr
inc
sahf
sub
mov
(bad)
je
hlt
mov
adc
add
jb
dec
mov
jb
dec
or
mov
call
ins
push
stos
ficomp
(bad)
in
push
jmp
das
adc
rcr
adc
xchg
and
push
pop
add
sub
stos
(bad)
mov
les
xlat
inc
add
dec
outs
sub
add
in
in
fisubr
shr
fist
and
inc
push
mov
sub
cmp
in
fidiv
mov
add
dec
jp
jb
add
rcl
shl
dec
jp
inc
adc
add
das
das
push
mov
aaa
retf
xor
leave
into
pop
sub
add
lahf
jb
dec
pop
leave
cwde
int
out
fisubr
jmp
int3
add
cmps
dec
pop
js
push
lods
sub
cwde
int
out
fisubr
jmp
xchg
add
sub
push
(bad)
sub
sub
(bad)
mov
leave
cwde
int
out
fisubr
jmp
retf
test
int
sub
pop
adc
adc
cmp
lods
popa
fisubr
nop
cwde
je
in
fisub
shr
ficom
lea
cmp
sub
outs
adc
adc
gs
leave
stos
sub
shr
xlat
pop
cmps
inc
mov
push
(bad)
sub
sub
sub
sub
add
xor
leave
pop
outs
sub
pop
push
mov
fisubr
sub
add
jne
lds
inc
push
adc
cwde
inc
xchg
enter
lods
ja
pop
clc
nop
arpl
jmp
dec
(bad)
in
push
mov
mov
sub
sub
add
ins
lods
mov
mov
hlt
cmps
cmps
in
test
cmps
cmps
pop
test
in
jmp
sub
cdq
jmp
or
cmp
in
fisub
pop
movs
add
xchg
or
sub
call
add
lods
cdq
sub
push
int
adc
imul
mov
jmp
sbb
inc
stos
mov
adc
add
pop
popa
sub
(bad)
scas
cmps
xchg
test
pop
add
add
out
sbb
adc
xchg
leave
xchg
shr
fcom
dec
test
mov
jmp
leave
xchg
jo
adc
ror
pop
push
pop
ins
adc
leave
mov
sub
xchg
or
sub
xchg
add
push
repz
inc
adc
sub
movs
stos
mov
cmp
shr
fiadd
jmp
cmp
les
in
fcmovb
mov
pop
sub
ins
sbb
sub
in
lea
jl
ins
aas
mov
cmps
adc
mov
lahf
lods
ds
add
add
lods
inc
add
test
call
repnz
add
xor
add
xchg
lods
fs
outs
lods
push
jl
add
lods
mov
mov
add
jb
sub
add
mov
sahf
call
jecxz
push
inc
mov
popf
lods
sub
(bad)
popf
add
popa
pop
add
test
inc
fs
or
jo
add
jae
mov
ins
shl
xlat
add
add
lea
push
cwde
inc
xchg
shr
adc
push
lods
add
add
sahf
call
div
inc
mov
(bad)
sub
(bad)
icebp
add
fs
add
test
inc
fisubr
repnz
popf
push
in
bound
add
mov
add
pop
mov
push
outs
add
jo
pop
xchg
add
sub
inc
add
call
push
cmp
add
pop
add
xor
add
push
adc
jo
lods
ss
add
add
call
mov
lods
add
add
jp
inc
push
call
adc
pusha
push
push
pop
pop
(bad)
xor
add
push
call
adc
jmp
and
add
add
fwait
outs
add
ins
adc
lea
rol
adc
popf
push
in
add
add
add
es
test
add
add
lods
xchg
leave
push
add
inc
mov
push
stos
fimul
ja
add
push
call
ins
pop
adc
cmp
push
popa
or
or
mov
push
mov
add
imul
leave
das
call
push
fdivrp
push
add
bnd
or
push
mov
sub
dec
loope
and
aaa
sub
cli
xor
xchg
shr
and
mov
inc
mov
pop
pop
pop
add
(bad)
xlat
pop
jmp
fadd
add
jo
(bad)
mov
adc
mov
push
stos
fisubr
cmps
fisubr
adc
fdivrp
push
scas
ficomp
add
imul
cdq
outs
xchg
xchg
adc
add
ins
popa
arpl
add
add
(bad)
pop
push
push
pop
push
mov
sub
loope
pop
push
pop
push
xchg
add
arpl
add
jmp
pop
add
sub
push
(bad)
sub
add
push
pop
jmp
mov
add
call
push
jb
push
inc
fisubr
repnz
push
dec
cmps
mov
std
mov
add
xchg
push
inc
(bad)
sbb
add
push
adc
xor
push
aas
outs
sub
add
add
jo
ja
push
(bad)
icebp
add
add
lods
sub
push
inc
mov
jmp
and
add
inc
inc
inc
adc
lea
stos
cs
dec
test
in
sbb
test
mov
(bad)
jmp
in
pop
add
ins
xor
jecxz
push
push
and
pop
push
push
cmp
push
push
and
push
push
push
mov
push
push
inc
mov
add
adc
and
cmp
leave
push
add
std
add
mov
add
add
mov
add
adc
adc
add
push
shl
rcr
add
clc
sti
push
inc
test
add
mov
xor
(bad)
sub
add
push
pop
imul
sbb
(bad)
nop
in
jo
add
repnz
fs
mov
in
lahf
scas
add
add
std
add
shl
xchg
add
jmp
add
pop
push
adc
add
(bad)
adc
pop
push
mov
pop
lea
inc
xlat
add
add
lea
jmp
popf
lods
sub
pop
jmp
adc
push
push
call
jmp
test
push
push
inc
fs
mov
in
add
add
(bad)
shl
xchg
add
inc
fdivr
outs
call
cmp
jmp
and
add
add
jecxz
add
push
pop
add
xchg
clc
std
in
call
sub
add
push
pop
push
xchg
mov
call
lds
inc
mov
jb
aaa
add
add
lods
mov
jmp
add
pop
mov
xchg
fcomi
lods
jnp
add
sub
sbb
lods
hlt
lods
jnp
add
adc
gs
movs
add
add
std
add
test
sub
add
push
pop
leave
push
add
inc
xchg
in
aam
push
in
rol
add
mov
add
ins
add
push
adc
add
mov
jl
add
lods
(bad)
xchg
in
adc
add
add
jb
xlat
add
add
lea
jne
inc
push
push
push
inc
(bad)
sbb
add
add
jb
adc
add
xor
mov
push
(bad)
jmp
or
add
or
adc
mov
push
(bad)
jmp
mov
add
das
xor
xor
add
push
adc
and
xchg
pop
out
or
(bad)
cwde
in
or
add
test
out
mov
cs
test
mov
pop
cmp
xor
jmp
stos
outs
clc
and
lods
sahf
push
(bad)
ins
xor
(bad)
ins
cmp
push
lods
mov
popf
push
lods
rcl
ins
sbb
push
lods
ret
xor
add
push
adc
add
jo
dec
mov
mov
xchg
mov
in
pushf
outs
out
inc
mov
pop
xor
repz
add
lods
shr
mov
adc
rcl
adc
fwait
add
sbb
adc
push
movs
add
add
std
add
push
adc
inc
add
jb
adc
add
adc
inc
fimul
in
inc
add
push
push
add
sbb
add
test
lds
jne
add
hlt
xchg
retf
add
add
(bad)
sub
add
add
add
push
add
ss
add
add
add
adc
stos
hlt
lods
pop
add
add
ins
sub
cmp
add
pop
rcr
add
js
ret
push
push
frstor
adc
stos
bound
adc
cmp
mov
in
ficomp
add
(bad)
popa
add
xor
dec
stos
hlt
xor
cmp
xor
dec
stos
hlt
sub
sbb
xor
movs
add
fld
add
sub
cld
xor
ja
xor
int
lods
sub
pop
(bad)
fisubr
pop
mov
movs
cmp
dec
adc
int3
aaa
push
push
test
jnp
or
mov
in
jo
xchg
repnz
rcr
test
inc
fisubr
repnz
mov
push
(bad)
jmp
mov
push
add
add
repnz
daa
imul
add
jb
xlat
add
add
lea
jmp
jb
add
add
repnz
fs
outs
lods
push
jl
add
ret
mov
add
inc
mov
ins
add
repnz
and
add
push
push
inc
fs
jo
pushf
outs
call
hlt
jg
inc
mov
jb
aas
inc
add
or
shr
lea
jecxz
pop
sahf
inc
lahf
xchg
fcomi
lods
jnp
add
sub
xor
lahf
inc
adc
lea
pop
imul
ret
push
(bad)
icebp
add
test
mov
sub
mov
or
adc
lea
outs
sub
add
test
inc
fisubr
repnz
lahf
outs
lods
sub
add
lods
(bad)
lahf
in
fs
add
test
inc
fisubr
repnz
or
fs
fld
push
add
adc
and
lods
push
pop
add
add
hlt
lods
sti
add
add
add
push
xor
in
inc
add
add
mov
add
repnz
test
add
lea
mov
add
lahf
lods
lods
hlt
mov
add
add
iret
adc
pop
mov
add
add
gs
push
cmp
in
push
add
popf
add
add
add
add
push
push
add
push
imul
adc
(bad)
ins
fs
push
lods
retf
ins
inc
popf
push
lods
mov
(bad)
ins
push
push
(bad)
ins
cmp
(bad)
ins
dec
popf
push
hlt
cmp
add
clc
or
push
inc
int
xor
mov
sub
(bad)
push
adc
add
in
stos
ficom
push
jb
push
inc
in
loope
add
add
add
lods
(bad)
mov
add
add
add
xchg
mov
pop
test
adc
jae
push
xchg
mov
adc
sbb
sub
jb
pop
push
pop
ins
adc
leave
push
add
inc
ins
ror
(bad)
cmp
pop
push
push
xchg
jmp
ins
shl
xchg
add
jmp
fldcw
fisubr
enter
in
fisubr
inc
les
sub
test
lods
inc
jmp
add
add
ds
add
add
cwde
dec
add
pusha
test
xlat
arpl
inc
jmp
sub
xchg
add
and
mov
mov
jnp
inc
gs
shl
xchg
add
jmp
add
pop
outs
sldt
push
stos
data16
lods
inc
mov
push
stos
dec
lahf
lods
inc
enter
bound
push
stos
xor
push
stos
inc
lahf
lods
push
inc
add
add
jmp
shl
mov
adc
enter
in
ficomp
daa
enter
in
fisubr
jae
add
and
lods
sub
and
add
add
jae
add
push
pop
add
int3
clc
(bad)
loop
call
sub
add
push
pop
imul
sbb
(bad)
test
add
xor
mov
in
aaa
out
add
add
std
add
shl
xchg
add
jmp
add
pop
in
or
add
lods
sub
push
inc
mov
add
stos
(bad)
mov
add
add
retf
pop
adc
stos
bound
adc
cmp
outs
sub
fisubr
enter
in
fistp
pop
nop
add
or
call
mov
add
imul
(bad)
in
push
mov
or
nop
add
or
call
call
ficom
pop
push
(bad)
popf
add
add
sub
fiadd
add
hlt
bound
add
mov
add
pop
push
pop
adc
or
icebp
add
jo
pop
xchg
add
sub
inc
add
clc
out
add
or
sbb
cmp
gs
jb
pop
add
add
lea
mov
fwait
jb
xlat
add
add
das
ja
push
pop
pop
(bad)
cmp
add
push
adc
mov
mov
add
add
gs
push
cmp
test
add
icebp
add
adc
push
push
lods
inc
mov
lahf
lods
inc
les
stos
dec
lahf
lods
inc
pushf
pop
push
stos
ds
lods
inc
lods
pop
push
stos
cs
lods
inc
mov
push
inc
in
cmp
add
repnz
cmp
mov
mov
fstp
adc
sub
inc
xor
lods
sub
pop
mov
jb
cmps
inc
add
lea
mov
movs
cdq
inc
mov
add
pop
js
push
lods
sub
push
add
inc
xchg
in
aam
push
in
cmp
add
mov
add
push
adc
add
mov
jl
add
lods
inc
add
test
adc
or
or
out
mov
cs
test
mov
adc
add
and
test
push
xchg
xor
add
jmp
add
add
jb
jp
adc
push
jb
push
inc
(bad)
sbb
add
mov
call
pop
jb
sbb
fucomp
lea
retf
pop
test
add
push
stos
outs
repnz
pop
add
lods
ss
add
add
lods
retf
xor
lods
cdq
sub
mov
fwait
xchg
fcomi
mov
add
add
lahf
add
push
add
push
lods
sahf
push
(bad)
ins
xor
(bad)
ins
cmp
push
lods
mov
popf
push
lods
rcl
ins
sbb
push
lods
ret
xor
add
push
adc
add
jo
dec
inc
enter
mov
in
icebp
ja
jmp
sbb
nop
rcl
sub
(bad)
lods
jnp
add
adc
outs
test
inc
fisubr
repnz
adc
push
push
inc
fs
jo
pushf
outs
pop
leave
push
add
inc
xchg
in
aam
push
in
cmp
add
mov
add
inc
adc
sub
xchg
ficomp
add
adc
push
push
xchg
addr16
jb
(bad)
pop
jmp
sbb
jb
inc
inc
adc
lea
inc
jmp
adc
stos
ds
sub
aam
sub
lahf
mov
or
and
pop
pop
push
push
mov
test
lea
mov
add
lods
retf
ins
inc
popf
push
lods
mov
(bad)
ins
push
push
(bad)
ins
cmp
(bad)
ins
dec
popf
push
hlt
cmp
add
clc
mov
push
inc
int
fst
sub
aam
fcom
rol
xchg
out
or
adc
add
mov
sub
popf
add
jnp
add
popf
lods
sub
cmp
adc
push
push
inc
adc
rcr
ins
add
repnz
xchg
fcomi
lods
jnp
add
sub
sub
add
mov
inc
stos
pop
loope
add
xor
lods
sub
cs
and
mov
jbe
mov
shr
fidivr
enter
in
ficomp
xchg
inc
inc
inc
adc
lea
stos
pop
mov
stos
outs
clc
and
lods
sahf
push
(bad)
ins
xor
(bad)
ins
cmp
push
lods
mov
popf
push
lods
rcl
ins
sbb
push
lods
ret
xor
add
push
adc
add
jo
dec
xchg
stos
mov
shl
xchg
add
inc
fdivr
outs
adc
add
mov
sub
xchg
add
jnp
add
popf
lods
sub
dec
mov
adc
push
push
inc
adc
pop
push
mov
fisubr
repnz
inc
(bad)
rcl
add
add
lahf
add
pushf
sub
lahf
inc
adc
lea
pop
adc
add
jbe
push
lods
(bad)
push
mov
and
xchg
test
sub
aam
sub
fisubr
enter
lods
ficomp
jle
add
stos
dec
mov
hlt
gs
fs
dec
stos
hlt
xor
cmp
xor
dec
stos
hlt
sub
sbb
xor
mov
test
add
sub
dec
dec
(bad)
in
push
hlt
push
add
add
imul
push
(bad)
sub
add
push
pop
pop
fisubr
repnz
pop
add
es
test
test
jb
push
inc
adc
test
loop
add
sub
xchg
pop
in
std
sub
add
jmp
add
dec
jmp
sub
jp
xchg
xchg
push
test
add
mov
fprem
pop
aaa
fisubr
push
mov
jmp
inc
add
cmps
lods
inc
adc
cmp
jmp
sub
sbb
(bad)
mov
add
xor
add
xor
call
test
ja
xchg
repnz
pop
xchg
nop
outs
mov
imul
sub
test
scas
ret
mov
push
mov
das
push
add
lahf
pushf
push
mov
or
cwde
add
mov
mov
cmps
adc
mov
lods
mov
push
add
push
push
add
jle
and
add
mov
enter
cmps
mov
push
mov
pop
lahf
add
js
cmp
add
pop
mov
in
cmp
add
sub
fs
push
mov
ins
cdq
scas
in
ficomp
add
fsub
add
or
out
add
fs
add
fisubr
repnz
inc
es
sbb
inc
sub
inc
sbb
iret
jo
imul
jo
xchg
xchg
outs
push
sbb
push
adc
add
add
add
pop
dec
pop
add
lahf
pushf
push
mov
clc
iret
pop
add
push
imul
add
sahf
lods
sub
add
lods
inc
add
dec
add
aaa
fisubr
shl
xchg
add
jb
lahf
inc
adc
clc
fcomp
add
adc
lahf
add
int3
inc
aam
pushf
outs
adc
rol
dec
push
clc
push
jbe
outs
out
enter
jmp
test
(bad)
popf
add
add
cmp
add
sub
pop
imul
xchg
scas
in
ficomp
add
fsub
add
or
call
inc
and
add
call
ins
add
repnz
sar
add
or
sbb
inc
sub
dec
sbb
iret
jb
imul
push
lods
sub
jbe
jo
xchg
inc
xchg
icebp
into
popf
stos
pop
sahf
inc
add
lahf
pushf
push
mov
clc
iret
pop
add
push
imul
add
sahf
lods
ss
add
ja
inc
push
fwait
jb
pop
inc
add
lea
fcom
test
add
stos
dec
sub
vmwrite
mov
ins
fs
outs
pop
jmp
call
mov
adc
lods
inc
cmp
add
ins
pop
xor
add
add
ins
add
mov
add
add
lahf
add
mov
sub
rcr
add
push
pop
mov
ins
add
repnz
fild
add
pop
push
xchg
add
add
lahf
call
add
add
add
popf
or
sbb
jle
push
scas
es
adc
jl
push
outs
arpl
jo
xchg
inc
ins
cmps
shr
jmp
mov
add
add
gs
push
cmp
int
add
add
add
push
mov
or
xchg
add
outs
and
add
inc
add
xor
sbb
sub
aam
add
cmps
pop
mov
push
cs
cmp
mov
shl
outs
lods
ss
add
xor
xchg
pop
mov
js
lahf
lods
ds
add
add
clc
and
add
sub
mov
push
in
cmps
dec
sub
gs
dec
in
fisubr
ins
inc
(bad)
rcl
ins
test
adc
mov
jo
ss
add
add
xchg
test
out
push
mov
or
xchg
add
or
adc
xchg
add
push
add
add
sbb
add
bnd
add
es
test
test
jb
push
inc
adc
test
ret
add
sub
xchg
pop
in
pop
add
jmp
add
push
add
xchg
xchg
push
test
add
mov
fprem
pop
aaa
fisubr
push
jl
or
adc
inc
add
pop
pop
outs
cwde
jbe
movs
sahf
push
imul
fnsave
retf
adc
scas
gs
and
outs
adc
add
rcr
out
push
xchg
rcr
fisubr
xchg
xor
or
mov
fdiv
mov
jl
fimul
pop
test
mov
adc
in
push
lods
sub
pushf
and
pop
adc
add
rcl
jmp
sbb
stos
fidiv
dec
mov
cmp
repz
aaa
push
jae
dec
xchg
add
jmp
ins
push
fsubr
ficom
push
cmp
inc
push
add
add
add
sub
dec
imul
stos
jnp
cdq
jle
push
scas
es
adc
aaa
adc
aad
add
cld
add
add
push
inc
push
jbe
push
hlt
add
add
stos
push
jno
mov
mov
rcl
add
push
stos
dec
xchg
(bad)
push
test
ret
add
inc
jo
pushf
outs
xchg
pop
mov
shl
xchg
add
adc
push
mov
sub
mov
pop
push
pop
push
xchg
add
leave
push
add
inc
xchg
in
aam
push
in
cmp
add
mov
add
mov
add
jl
add
lods
inc
add
test
adc
mov
retf
xchg
mov
push
jmp
stos
(bad)
xlat
fs
fldcw
fisubr
enter
in
ficomp
sub
mov
mov
xchg
popa
add
xor
dec
stos
hlt
xor
cmp
test
sub
push
push
mov
push
push
inc
mov
add
adc
(bad)
cmp
add
add
add
push
stos
ficomp
push
stos
fisub
(bad)
in
stos
push
adc
push
loop
push
in
fimul
ja
xchg
in
and
jmp
sbb
loope
mov
jo
mov
in
out
add
cs
jb
inc
inc
adc
cmp
jmp
add
out
inc
adc
push
test
add
inc
(bad)
jmp
jb
xchg
add
pop
inc
lea
sub
xchg
add
add
sahf
pop
leave
push
add
inc
xchg
in
loopne
add
test
(bad)
push
in
jle
add
cmp
add
add
lods
push
jl
add
dec
jle
add
out
push
mov
or
jg
add
(bad)
cmp
add
push
adc
add
or
call
add
push
push
push
inc
fs
add
fs
add
add
jmp
in
sbb
(bad)
pop
in
(bad)
jge
add
cmp
add
add
lods
push
jl
add
retf
add
out
push
mov
or
jg
add
(bad)
xor
add
add
popa
push
(bad)
sub
add
cmp
(bad)
gs
shl
aaa
add
add
js
outs
call
xchg
add
clc
call
xchg
test
or
call
pop
rol
push
outs
test
jp
pop
das
jle
add
cmp
lods
test
add
add
call
add
js
shr
fisubr
add
push
shr
fcmovbe
data16
test
inc
and
shl
ja
rol
push
lahf
lods
pop
cmp
in
fimul
rol
add
int
in
fisubr
adc
inc
mov
mov
mov
xchg
rcr
fisubr
aas
cmp
shr
ficom
mov
ret
push
test
cmp
shr
imul
ins
ins
push
stos
fiadd
adc
dec
cs
push
js
outs
xchg
cmps
fwait
pusha
sti
push
pop
das
das
pop
lods
shr
inc
sub
leave
into
hlt
jbe
cmp
pop
sub
jnp
add
lods
push
jns
arpl
test
mov
lods
leave
push
stos
inc
stos
xchg
lock
shl
mov
pop
int
enter
ja
xor
leave
mov
add
push
jnp
push
in
arpl
add
test
inc
ja
mov
lods
ja
popa
clc
fld
inc
mov
test
mov
std
add
jl
mov
add
mov
jge
movs
sbb
inc
pushf
adc
cmc
inc
push
push
push
popa
clc
mov
add
pop
mov
push
stos
ficomp
ror
call
ins
leave
out
movs
ret
adc
sbb
adc
mov
or
adc
cmp
push
stos
cmp
and
mov
in
pop
xor
adc
cmp
push
mov
lea
fcomp
and
or
sub
fisubr
sbb
push
or
add
pop
movs
aaa
add
push
std
pop
sub
add
pop
das
jp
(bad)
ins
lods
lods
stos
pop
into
and
add
(bad)
cdq
jmp
xor
leave
outs
sub
fisubr
sub
push
add
xor
leave
call
in
ficom
pop
jge
add
jns
pop
mov
add
int
push
mov
add
add
imul
lds
sub
call
int
add
dec
push
or
adc
cmp
push
mov
lea
fcomp
and
or
cdq
shr
push
inc
jmp
shr
ficom
add
xor
push
cdq
dec
cs
mov
or
push
cmp
in
jmp
xchg
sub
push
test
mov
add
leave
repnz
inc
add
imul
mov
push
pop
int
popf
repnz
inc
es
jo
xchg
or
sub
cwde
int
in
fisubr
jmp
cs
jo
xchg
or
inc
retf
adc
shr
repnz
test
add
jl
jmp
adc
(bad)
stc
dec
sub
pop
movs
xor
loop
sub
lahf
outs
push
movs
add
in
mov
add
popf
mov
jmp
cld
add
cmps
and
dec
fwait
add
test
das
or
test
mov
mov
int
js
dec
inc
add
jb
or
mov
std
sar
(bad)
stc
dec
sub
pop
adc
mov
dec
stos
inc
cmp
sub
mov
call
cmps
sub
pop
movs
fld
jmp
aaa
add
push
jmp
ds
push
pop
imul
in
jo
xchg
add
push
fistp
cdq
push
add
ins
lods
shl
cmc
mov
jo
imul
ret
add
sbb
int
add
dec
dec
or
xor
fld
jmp
aaa
add
push
jmp
ds
push
mov
cmp
push
ins
out
sub
add
ins
lods
mov
(bad)
neg
imul
xor
push
mov
lods
push
cdq
dec
cs
mov
or
leave
test
sbb
add
sbb
sbb
cmp
test
cmps
and
mov
out
lods
mov
add
js
dec
rol
mov
nop
int
in
fisubr
xor
add
dec
adc
lods
fisubr
jmp
adc
add
lahf
lods
inc
cmp
js
lods
sub
sub
sub
repnz
fs
leave
push
outs
sub
add
popa
ins
adc
shl
dec
push
jl
add
jo
xchg
or
sub
cwde
int
in
fisubr
jmp
jnp
add
push
xchg
inc
mov
add
out
sbb
adc
inc
leave
xor
adc
pop
in
fisubr
fcom
mov
scas
mov
fs
fisubr
outs
jmp
add
cmp
or
sub
adc
leave
jnp
sub
xor
leave
xchg
shr
fcom
lea
test
out
leave
cwde
int
in
fisubr
or
mov
adc
clc
adc
fdiv
inc
leave
fwait
mov
adc
rcl
imul
retf
add
adc
push
push
inc
jg
aad
fbstp
xchg
add
lods
lds
pushf
enter
push
mov
call
(bad)
shl
dec
sahf
adc
(bad)
lea
push
outs
sub
fisubr
pop
popa
arpl
adc
xor
and
in
mov
xchg
or
jb
pop
test
sub
fldcw
and
mov
leave
sub
in
fisub
ins
stos
fiadd
push
(bad)
sub
sub
test
jecxz
pusha
int
sub
ins
lods
loopne
sub
enter
push
mov
lods
sub
nop
int
out
fisubr
jne
add
mov
dec
dec
test
clc
mov
nop
int
lock
pop
gs
shl
dec
jbe
adc
clc
xor
das
mov
lods
push
adc
dec
idiv
push
js
outs
shl
shl
or
ret
push
leave
mov
ins
lods
int3
ficomp
(bad)
in
pop
add
mov
in
outs
sub
ror
mov
mov
test
lahf
outs
lods
aaa
cmp
in
fisubr
cmps
cmps
xor
sub
add
test
call
mov
inc
mov
test
sbb
add
add
dec
push
fisubr
sub
repnz
ins
rol
ficomp
shr
ficomp
iret
in
fisubr
je
add
pop
push
(bad)
sub
sub
sub
sub
add
(bad)
shl
dec
stos
adc
aas
pop
call
push
jns
stos
adc
xchg
lods
ja
(bad)
clc
pop
call
push
cmp
adc
push
push
pop
ins
adc
leave
inc
outs
sub
fldcw
mov
jge
add
test
sub
push
push
mov
fs
leave
push
jo
and
mov
cmp
cmps
cmps
inc
cmps
shr
(bad)
pop
mov
cmps
test
int
lock
jmp
jl
add
repnz
lahf
(bad)
std
pop
mov
jnp
add
adc
leave
cwde
int
lock
push
cwde
int
out
fisubr
test
add
sbb
lods
xchg
fldcw
xchg
in
jg
add
std
pop
mov
xchg
add
push
ret
inc
call
test
stos
test
rcl
outs
cmps
mov
adc
imul
outs
sub
aam
shl
xchg
js
outs
sub
xchg
lock
fisubr
pop
mov
inc
daa
adc
sub
pop
das
das
pop
adc
or
sub
stos
xor
in
push
jmp
outs
adc
inc
push
adc
add
pop
xor
leave
jbe
sub
fldcw
xchg
in
loop
add
mov
shr
ficom
mov
imul
push
sub
out
dec
cwde
int
lock
add
int
out
fisubr
or
int
out
fisubr
mov
outs
sub
xor
sub
fwait
jbe
add
jmp
pop
adc
rcr
adc
shr
pop
dec
dec
test
fstp
push
test
inc
adc
adc
cwde
jmp
inc
pop
adc
shr
(bad)
js
inc
cmp
sub
mov
lods
inc
fisubr
enter
lock
adc
inc
mov
(bad)
mov
pop
or
js
lahf
outs
lods
(bad)
shr
ficom
and
lahf
jb
dec
push
cwde
int
lock
jmp
add
stos
hlt
cmps
cmps
mov
hlt
cmps
cmps
mov
sub
shr
in
pop
xchg
add
(bad)
lahf
lods
pop
cmp
shr
ficomp
add
sub
shr
in
pop
int3
cmp
lahf
xchg
fcomi
scas
cmps
shr
mov
test
jns
add
fs
outs
sub
fisubr
push
or
adc
ins
jge
stos
(bad)
outs
cmps
sub
leave
mov
sub
push
push
pop
push
ror
in
fisubr
pop
cmp
iret
in
fisubr
push
add
inc
jg
xor
leave
outs
sub
into
jb
sbb
and
adc
test
mov
add
pop
cmp
iret
in
fisubr
xchg
adc
mov
cmp
shr
fisubr
shr
loop
aam
add
inc
test
sub
ret
dec
cmp
and
add
pop
aam
mov
push
stos
inc
inc
adc
cmc
pop
push
stos
jnp
lods
jge
lods
hlt
cmps
push
pop
clc
rol
call
or
jbe
xor
push
test
adc
add
cmp
shr
pop
dec
dec
test
out
gs
mov
xchg
shr
ficomp
iret
in
fisub
pushf
dec
add
jo
jae
push
pop
int
popf
repnz
adc
pop
dec
push
test
out
cmps
outs
std
add
shl
dec
stos
adc
imul
add
mov
ret
dec
cmp
rcl
add
pop
aam
mov
push
stos
inc
inc
adc
in
pop
push
stos
jnp
lods
jge
lods
hlt
cmps
push
pop
clc
pop
fld
push
in
icebp
int
add
xor
push
test
adc
push
ret
inc
cmp
shr
pop
dec
dec
test
in
cmc
add
add
leave
xchg
shr
ficomp
iret
in
fisub
ins
pop
add
jo
jae
push
pop
int
popf
repnz
sub
add
adc
pop
dec
push
test
in
ss
inc
inc
add
cmps
xchg
test
inc
mov
test
(bad)
inc
shl
jne
lods
repnz
add
lods
inc
cmp
adc
xchg
sbb
push
pop
int
popf
repnz
daa
inc
pop
clc
fcmovnu
add
pop
aam
int3
jne
dec
sbb
pop
(bad)
in
ret
xchg
xchg
imul
jg
mov
push
pop
int
popf
sbb
inc
mov
test
xchg
inc
es
stos
sub
shr
mov
add
cmps
js
cmp
(bad)
xor
sub
cwde
int
lock
jmp
xchg
add
inc
mul
jmp
pop
(bad)
in
jb
sahf
inc
adc
xchg
leave
xchg
add
add
addr16
leave
into
jb
xor
sbb
push
stos
(bad)
adc
imul
add
push
mov
mov
push
jb
add
xchg
test
inc
mov
test
nop
inc
inc
pop
addr16
outs
inc
pop
cmp
movs
inc
adc
xor
lahf
outs
lods
dec
cmp
call
xor
leave
jle
call
in
ficom
jb
add
pop
leave
cwde
int
lock
jmp
in
add
mov
ins
adc
gs
push
jno
out
sub
push
push
lods
dec
cmp
or
push
sub
add
dec
cwde
int
out
fisubr
into
mov
add
dec
xchg
adc
imul
add
push
outs
test
jno
cmps
sub
push
push
cmp
pop
dec
fld
jmp
adc
test
int
out
fisubr
pop
jno
add
cmp
in
ficom
addr16
add
push
lods
sub
popa
mov
mov
test
dec
adc
jbe
dec
push
adc
imul
clc
cmps
cmps
push
test
in
leave
das
mov
cmp
in
fimul
shr
ficom
or
push
sub
mov
add
cmps
lods
clc
cmps
dec
xor
es
shr
dec
inc
adc
or
fisubr
aas
lea
fcomp
(bad)
mov
adc
lods
mov
xor
call
or
test
mov
mov
(bad)
inc
sbb
pop
push
inc
and
adc
arpl
xchg
pop
das
js
add
loope
add
ja
mov
dec
es
repnz
inc
in
outs
sub
daa
test
stos
fiadd
jbe
sub
mov
mov
dec
add
push
aaa
mov
sub
xchg
fstp
sbb
inc
mov
dec
sar
jmp
imul
mov
add
add
add
ds
pushf
outs
jne
ins
inc
fs
ficomp
sub
add
adc
jg
xchg
sar
xchg
ficomp
push
test
jne
add
dec
sub
jno
add
dec
sbb
data16
sub
idiv
movs
cmp
inc
movs
mov
add
pop
and
inc
jle
sub
xchg
push
aam
dec
ret
sub
mov
in
or
inc
sub
add
ins
jp
sub
xchg
add
mov
in
scas
sub
add
test
stos
jg
xchg
sar
push
jbe
and
call
or
jo
fisubr
ja
sub
ins
test
jbe
xor
call
xchg
jmp
inc
adc
pop
push
push
stos
(bad)
adc
inc
mov
pop
dec
cmp
test
add
shl
dec
xchg
cwde
int
lock
jmp
xchg
add
icebp
test
pop
mov
add
sti
cs
mov
jbe
and
push
sub
push
cmps
sbb
or
popf
dec
test
imul
mov
adc
inc
fs
fwait
scas
cdq
outs
push
pop
add
ja
movs
pop
test
mov
add
dec
push
add
arpl
adc
dec
push
push
mov
cmp
push
ins
out
sub
add
lods
popa
dec
idiv
push
js
outs
shl
shl
or
inc
cmp
das
add
jb
mov
adc
(bad)
lods
sub
int
out
fisubr
enter
jb
dec
adc
cmps
je
dec
cwde
int
out
fisubr
push
nop
int
out
fisubr
push
fild
add
je
int3
bound
int
lock
jmp
and
pop
sub
push
fisubr
sub
add
xor
leave
jle
dec
ins
add
fwait
xchg
fcomi
scas
cmps
movs
test
in
sbb
inc
mov
test
xchg
inc
adc
fisubr
out
lea
fcomp
pop
mov
adc
ins
out
fisubr
or
cli
or
jge
push
ret
stos
ficom
gs
add
add
add
out
lea
fcomp
pop
mov
adc
adc
or
fdiv
dec
ss
push
mov
cmp
inc
lea
jbe
and
xchg
leave
out
clc
cmps
sbb
pop
dec
push
push
mov
lea
jbe
dec
or
enter
sub
pop
test
inc
push
test
cmp
inc
mov
pop
sub
push
enter
fisubr
and
dec
test
lock
in
call
cmp
adc
aaa
cmp
shr
ficom
into
or
add
jmp
dec
add
push
mov
mov
sbb
mov
jmp
leave
jmp
add
dec
fiadd
push
add
pop
mov
push
stos
ficomp
cmp
call
add
jbe
(bad)
push
test
adc
and
adc
in
fisubr
cmp
cmc
sar
add
pop
imul
adc
or
jbe
add
test
add
lods
in
add
aad
add
push
jmp
dec
push
push
stos
ret
test
test
out
xor
pop
sub
ins
add
dec
adc
imul
add
ins
adc
shl
dec
xchg
cwde
int
lock
jmp
pop
add
neg
add
pop
popf
and
loop
sub
lahf
outs
inc
popf
fwait
js
pop
ins
and
add
push
mov
lods
push
cdq
dec
cs
shl
sar
add
cmps
sub
(bad)
jmp
inc
xchg
adc
dec
xor
outs
sub
int
in
repnz
retf
inc
sbb
pop
push
inc
and
adc
arpl
xchg
pop
das
das
or
outs
popf
inc
adc
jl
loop
sti
pop
in
ucomiss
add
lods
clc
in
add
add
jns
jb
dec
xchg
cwde
push
add
add
push
mov
shr
pop
dec
cmp
mov
add
jbe
push
jnp
fisubr
lods
mov
in
jne
add
call
add
imul
mov
add
sub
fld
pop
int
pushf
push
add
ja
add
imul
js
shr
or
popf
shr
push
inc
jmp
shr
(bad)
xchg
cmp
dec
cs
fnstenv
lods
imul
add
aad
fiadd
xor
test
cmps
xor
jl
out
sti
pop
adc
arpl
(bad)
mov
add
bnd
add
es
mov
xchg
sub
jns
dec
mov
imul
sub
cmc
dec
add
push
jmp
dec
push
push
pop
imul
in
jo
xchg
add
push
fistp
movs
push
add
adc
push
push
mov
xchg
jmp
adc
add
loope
mov
fwait
imul
sub
push
push
mov
xchg
jmp
adc
lea
aad
out
push
adc
mov
aas
inc
rol
test
add
xchg
leave
inc
sbb
pop
push
inc
and
adc
arpl
xchg
ret
stos
inc
lahf
adc
lods
add
push
leave
aas
lea
fcomp
(bad)
mov
adc
lods
mov
add
outs
mov
inc
ins
ins
push
stos
fiadd
adc
js
dec
dec
adc
sub
nop
int
out
fisubr
fldcw
add
dec
mov
adc
mov
adc
fisub
add
mov
jp
push
push
push
test
test
mov
leave
fdivr
add
jmp
scas
adc
or
add
pusha
jbe
jo
lods
dec
cmp
jmp
(bad)
shl
dec
call
aas
sub
jg
push
jo
adc
pop
in
fisubr
fcom
dec
leave
and
and
jno
dec
sub
add
popa
or
xor
leave
fidiv
sbb
lods
rcr
outs
sub
(bad)
fimul
nop
int
in
fisubr
pop
cmp
iret
in
ficom
pop
push
test
mov
fisubr
sub
stos
xchg
dec
push
push
test
inc
xchg
in
aam
dec
cmp
mov
test
test
mov
add
jb
dec
adc
adc
call
xor
leave
cli
outs
sub
add
imul
aad
nop
adc
test
daa
sub
(bad)
or
test
push
cmps
or
sub
mov
cmp
sub
fiadd
jbe
and
push
dec
and
mov
aaa
mov
sub
xchg
fstp
sbb
inc
push
aam
dec
or
outs
sub
mov
add
jns
pop
or
add
pop
mov
cmp
mov
adc
inc
adc
add
call
add
es
mov
push
pop
add
loope
add
ja
rcr
mov
push
arpl
add
lods
clc
ins
fs
push
ins
pop
xchg
mov
sahf
push
add
xor
jbe
sub
inc
dec
dec
or
les
(bad)
stc
dec
sub
pop
push
and
add
jns
pop
mov
cmp
add
dec
mov
mov
in
fisubr
xchg
bnd
add
cs
loope
outs
sub
int
add
dec
push
add
mov
sahf
dec
and
sbb
sbb
pop
push
inc
and
adc
arpl
xchg
ret
stos
inc
xchg
adc
jmp
xlat
lea
fcomp
pop
mov
adc
lods
mov
int
(bad)
sahf
dec
push
nop
xchg
fld
add
xchg
or
add
pop
popa
sub
out
add
jge
mov
push
test
adc
xchg
add
cmps
lods
cdq
sub
enter
fisubr
xchg
ja
add
leave
shr
ficom
jmp
add
mov
push
je
adc
movs
movs
stos
mov
cmp
out
jmp
sub
add
or
lds
test
pop
push
ins
push
mov
lahf
pop
add
xor
cli
jmp
or
add
push
pop
add
jmp
call
leave
das
pusha
les
hlt
jo
pop
xchg
add
test
adc
rcr
adc
xor
fdiv
dec
leave
and
and
dec
sahf
mov
inc
in
mov
xchg
ins
push
fisubr
add
mov
les
inc
xchg
in
mov
mov
test
sub
adc
jmp
push
push
lods
pop
cmp
into
in
ficomp
int3
in
ficom
aam
add
dec
jno
add
adc
rol
lods
add
outs
sub
push
xchg
jb
mov
adc
fst
lods
sub
push
fisubr
add
mov
cmp
mov
add
push
das
int
lods
sub
jmp
imul
shr
cmp
dec
adc
pusha
or
push
stos
(bad)
adc
pushw
pop
push
cwde
int
out
fisubr
imul
push
ret
inc
adc
dec
xchg
adc
popa
mov
xor
jo
sub
push
add
test
sub
adc
push
mov
push
mov
fs
leave
out
jb
and
fisubr
in
cmps
pop
in
(bad)
outs
cmps
js
push
xor
pop
test
(bad)
add
es
stos
hlt
cmps
cmp
pop
leave
cwde
int
jmp
add
pop
sub
push
fisubr
sub
add
jne
aad
mov
fwait
jb
dec
xchg
dec
mov
test
mov
das
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
ror
(bad)
mov
cld
cmps
shr
repnz
popf
push
jmp
xchg
adc
jmp
adc
shr
fisubr
jmp
fst
in
push
mov
arpl
pop
dec
xchg
retf
sbb
add
stos
inc
cmps
ins
adc
cmp
adc
add
pop
leave
cwde
int
jmp
or
add
mov
mov
add
push
mov
mov
and
mov
sbb
shr
repnz
mov
add
push
leave
add
add
fwait
jb
dec
inc
js
jmp
ror
push
test
inc
(bad)
jmp
jb
dec
push
test
mov
xchg
fldln2
fisubr
dec
in
shl
dec
xchg
icebp
or
imul
sub
mov
imul
cmps
cmps
sbb
adc
add
(bad)
lahf
call
in
fidiv
(bad)
add
cmps
test
sar
jmp
xchg
leave
jle
add
add
lahf
pushf
push
mov
rcl
xchg
xor
sub
gs
push
cmp
adc
mov
push
xchg
mov
dec
dec
add
js
dec
pop
push
imul
outs
and
in
ficom
test
adc
push
mov
mov
int3
jmp
leave
fisubr
adc
push
pop
add
stos
(bad)
adc
test
lea
sbb
inc
xchg
test
mov
add
or
stos
sub
shr
jmp
mov
sub
mov
pop
(bad)
jne
mov
mov
fwait
jb
dec
and
add
add
int
jmp
imul
sub
jno
add
test
sub
adc
cld
mov
push
mov
fs
leave
out
jb
and
fisubr
and
in
adc
leave
jle
mov
fisubr
sub
add
xor
leave
mov
test
xchg
fist
xchg
in
aam
sbb
inc
call
test
lock
pusha
lahf
pushf
push
mov
stos
in
cmp
push
push
int
adc
gs
push
cmp
adc
push
push
stos
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
pop
mov
jb
inc
inc
adc
cmp
add
sub
jno
add
sub
sub
sub
sub
das
imul
or
repnz
cwde
int
jmp
add
sub
push
(bad)
ins
lods
leave
jb
mov
adc
or
imul
push
add
add
mov
sub
inc
jbe
add
pop
push
fwait
jb
dec
push
jmp
arpl
test
(bad)
clc
jmp
cmp
loop
sub
add
lods
shr
add
int
out
fisubr
cmp
add
(bad)
cmp
sub
mov
sub
fdiv
fisubr
enter
jmp
clc
cmps
push
outs
sub
push
int
sahf
push
aaa
call
in
fisubr
fsubp
add
jo
jae
push
pop
int
xchg
inc
cli
and
fisubr
sbb
push
stos
(bad)
adc
imul
add
push
mov
push
adc
add
outs
cmps
js
mov
pop
(bad)
cmp
sub
aaa
bound
pop
repz
sti
sbb
lods
aaa
cmp
das
pusha
add
js
ret
push
enter
fisubr
add
add
lahf
lods
pop
cmp
out
cmp
sub
fisubr
dec
cmp
cmps
cmps
sbb
rol
add
(bad)
sub
shr
in
lods
inc
cmp
js
push
lods
sub
pop
push
add
jmp
leave
push
imul
xor
loop
add
popa
push
imul
pop
add
lahf
pushf
push
mov
addr16
cmp
enter
fisubr
and
add
lods
hlt
mov
add
pusha
inc
xchg
enter
lods
aaa
cmp
into
in
ficom
bound
add
stos
hlt
cmps
cmps
sub
cmps
cmps
adc
shr
mov
xor
in
(bad)
outs
cmps
js
push
xor
pop
test
out
add
es
stos
hlt
cmps
cmp
pop
leave
cwde
int
jmp
add
pop
sub
push
fisubr
sub
add
jne
aad
push
inc
push
fwait
jb
dec
xchg
and
add
test
mov
xlat
pop
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
ror
(bad)
mov
cld
cmps
shr
repnz
jmp
aaa
test
pop
push
cwde
int
lock
jmp
dec
shr
push
mov
arpl
pop
dec
xchg
stos
adc
xchg
in
aam
push
stos
inc
cmps
ins
adc
ficomp
int
fimul
mov
jae
leave
cwde
int
jmp
in
add
mov
mov
add
push
mov
mov
push
add
mov
sbb
shr
repnz
pop
inc
es
leave
add
add
fwait
jb
dec
inc
cmps
add
imul
in
push
mov
rcl
(bad)
jmp
jb
dec
push
test
mov
xchg
mov
xchg
call
push
(bad)
icebp
or
imul
adc
inc
mov
jb
dec
inc
imul
in
stos
sub
shr
mov
mov
(bad)
lahf
call
in
ficom
stos
into
add
cmps
test
sar
xor
xor
leave
jle
in
pop
add
lahf
pushf
push
mov
rcl
xchg
xor
sub
gs
push
cmp
adc
push
push
xchg
mov
dec
dec
add
cmps
add
or
pop
push
imul
outs
and
in
ficom
ror
test
pop
or
jmp
leave
fisubr
xor
data16
stos
(bad)
adc
test
lea
sbb
inc
xchg
test
mov
add
or
stos
sub
shr
retf
retf
test
cmps
sub
stos
cmps
push
push
pop
pop
(bad)
jne
mov
push
inc
push
fwait
jb
dec
and
add
add
int
jmp
imul
sub
cmps
add
test
sub
adc
inc
mov
fs
leave
out
jb
and
fisubr
inc
test
test
adc
xchg
leave
jle
mov
fisubr
sub
add
xor
leave
mov
test
xchg
mov
add
dec
add
repnz
add
pusha
lahf
pushf
push
mov
stos
in
sub
push
int
adc
gs
push
cmp
adc
test
push
stos
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
aaa
pop
add
jb
scas
inc
adc
cmp
add
sub
movs
add
sub
sub
sub
sub
idiv
lods
mov
int
jmp
add
sub
push
(bad)
ins
lods
leave
jb
scas
inc
adc
or
imul
push
add
add
mov
sub
inc
into
aaa
add
pop
push
fwait
jb
dec
push
jmp
popa
add
test
(bad)
clc
xor
xor
leave
loop
sub
add
lods
shr
add
int
out
fisubr
sbb
add
fs
leave
out
jb
sub
xor
add
mov
cmps
add
sub
add
add
in
fimul
push
pop
int
xchg
ds
push
push
stos
(bad)
adc
imul
add
push
mov
push
adc
add
outs
cmps
js
ret
push
stos
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
jmp
add
pop
pop
xchg
push
test
sub
adc
adc
xchg
into
xorps
dec
cwde
int
jmp
adc
neg
jb
scas
inc
adc
jae
push
push
out
cmp
int3
in
fiadd
adc
dec
leave
push
jno
and
add
stos
phsubw
in
fiadd
popa
push
imul
sub
fwait
add
test
rol
add
leave
xchg
jb
and
sub
dec
inc
fisubr
fmulp
add
cmps
stos
hlt
cmps
cmps
cld
cmps
shr
jb
scas
inc
adc
or
imul
pop
add
add
mov
sub
inc
push
sub
fwait
jb
dec
inc
lods
add
push
imul
sub
fwait
add
lods
shr
add
int
in
fisubr
cdq
pop
add
or
sub
sbb
add
sub
mov
pop
test
sub
sahf
jmp
in
push
repz
push
adc
aaa
call
in
fidiv
add
jae
push
cwde
int
in
fisubr
iret
nop
ins
rcr
pop
test
test
add
or
stos
sub
shr
sahf
pop
dec
leave
add
test
cmps
mov
pop
inc
push
fwait
jb
dec
pop
test
clc
cmp
jl
xchg
pop
jg
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
fst
hlt
mov
push
cmps
shr
repnz
inc
xchg
clc
jno
outs
lods
aaa
cmp
into
in
fisubr
cmps
cmps
add
sub
add
cmps
shr
stos
cli
call
in
fild
dec
in
outs
repz
adc
movs
push
push
stos
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
pop
popa
add
jb
scas
inc
adc
cmp
xchg
jb
sub
test
add
test
sub
adc
dec
leave
push
imul
pop
test
(bad)
inc
xor
leave
xchg
jb
and
sbb
inc
adc
shl
add
mov
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
int
stos
(bad)
mov
push
cmps
shr
repnz
inc
xchg
test
lahf
outs
lods
aaa
cmp
into
in
fisubr
cmps
cmps
add
sub
add
cmps
shr
stos
cli
call
in
fild
dec
in
repnz
adc
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
aas
pop
add
jb
lods
inc
adc
cmp
xchg
jb
sub
test
add
test
sub
adc
dec
leave
push
imul
dec
test
(bad)
inc
xor
leave
xchg
jb
and
sbb
inc
adc
shl
add
mov
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
sub
(bad)
mov
push
cmps
shr
repnz
add
lods
aaa
cmp
into
in
fisubr
cmps
cmps
add
sub
add
cmps
shr
stos
cli
call
in
fild
push
in
ds
add
adc
push
push
stos
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
xchg
add
inc
scas
inc
adc
cmp
xchg
jb
sub
fwait
add
test
sub
adc
dec
leave
push
imul
push
test
push
inc
xor
leave
xchg
jb
and
sbb
inc
adc
rcr
add
mov
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
loope
stos
(bad)
mov
push
cmps
shr
bnd
inc
xchg
call
aaa
cmp
into
in
fisubr
cmps
cmps
add
sub
add
cmps
shr
stos
cli
call
in
fild
push
in
div
add
adc
call
int3
in
fiadd
pop
pop
(bad)
cmp
sub
scas
pop
add
jb
call
jb
sub
call
test
sub
adc
dec
leave
push
imul
gs
pop
inc
xor
leave
inc
jb
and
sbb
inc
adc
rcr
add
mov
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
mov
mov
inc
cmps
shr
repnz
pop
inc
xchg
sub
outs
lods
aaa
cmp
into
in
fisubr
cmps
cmps
add
sub
add
cmps
shr
stos
cli
call
in
fild
pop
in
into
hlt
add
adc
cdq
push
push
stos
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
neg
add
jmp
inc
adc
cmp
adc
sub
popf
add
test
sub
adc
dec
leave
push
imul
imul
dec
leave
push
outs
sub
sbb
inc
adc
shl
add
mov
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
or
(bad)
mov
cmps
shr
repnz
xchg
shl
outs
lods
aaa
cmp
into
in
fisubr
cmps
cmps
add
sub
add
cmps
shr
stos
cli
call
in
fild
pop
in
xchg
add
adc
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
pop
pop
add
jb
fwait
inc
adc
cmp
ds
sub
popf
add
test
sub
adc
dec
leave
push
imul
pop
test
push
inc
xor
leave
cmp
and
sbb
inc
adc
shl
add
mov
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
test
(bad)
mov
add
push
inc
xchg
fs
lahf
outs
lods
aaa
cmp
in
fisubr
cmps
cmps
add
sub
add
test
in
stos
cli
call
jmp
in
push
test
test
push
imul
stos
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
addr16
add
jb
fwait
inc
adc
cmp
mov
sub
pushf
add
test
sub
push
imul
popa
test
push
inc
xor
leave
jbe
sub
sbb
inc
adc
ror
add
mov
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
leave
pop
stos
(bad)
mov
hlt
test
in
repnz
add
lods
aaa
cmp
in
fisubr
cmps
cmps
add
sub
add
test
in
stos
cli
call
in
fild
gs
(bad)
stc
add
adc
lahf
push
push
stos
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
(bad)
push
add
jb
xchg
inc
adc
cmp
sbb
sub
lahf
add
test
sub
push
imul
jne
shr
repnz
pop
inc
xor
leave
inc
jno
and
sbb
inc
adc
ror
add
mov
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
lds
(bad)
mov
sbb
shr
repnz
jo
lahf
outs
lods
aaa
cmp
into
in
fisubr
cmps
cmps
add
sub
add
cmps
shr
stos
cli
call
in
fild
imul
test
push
imul
stos
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
xlat
pop
add
jb
xchg
inc
adc
cmp
into
jno
sub
sahf
add
test
sub
adc
dec
leave
push
imul
jns
shr
bnd
dec
leave
retf
and
sbb
inc
adc
rcl
add
mov
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
icebp
pop
stos
(bad)
mov
jo
shr
repnz
lock
lahf
outs
lods
aaa
cmp
cmps
cmps
add
sub
add
cmps
shr
stos
cli
call
in
fild
ins
in
data16
add
adc
sahf
push
push
stos
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
call
add
imul
es
sub
mov
sbb
push
cmp
jmp
ins
test
pop
inc
xor
leave
and
and
sbb
inc
adc
rcl
add
mov
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
mov
mov
mov
pop
inc
xchg
test
lahf
outs
lods
aaa
cmp
into
in
fisubr
cmps
cmps
add
sub
add
cmps
shr
stos
cli
call
in
fild
jno
jle
add
adc
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
inc
pop
add
jb
cwde
inc
adc
cmp
xor
sub
mov
sbb
push
cmp
jmp
jno
shr
bnd
inc
xor
leave
ds
and
sbb
inc
adc
sar
pop
pop
add
pusha
test
push
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
cmc
pop
stos
(bad)
mov
fsubr
pop
inc
jmp
sub
inc
adc
cmp
xor
sub
mov
cmps
aam
shr
stos
cli
call
in
fild
jne
ss
adc
push
push
stos
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
outs
jb
add
imul
push
jo
sub
mov
sbb
push
cmp
jmp
test
pop
inc
xor
leave
push
jo
and
sbb
inc
adc
sar
mov
add
pusha
test
push
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
movs
pop
stos
(bad)
mov
mov
shr
repnz
add
lods
aaa
cmp
cmps
cmps
add
sub
add
cmps
shr
stos
cli
call
in
fild
jns
push
in
add
adc
push
push
stos
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
mov
add
jb
xchg
inc
adc
cmp
call
add
test
sub
push
imul
mov
outs
inc
xor
leave
(bad)
jo
and
push
imul
jl
or
add
mov
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
lds
(bad)
mov
cmp
outs
inc
xchg
mov
lods
aaa
cmp
in
fisubr
cmps
cmps
add
sub
add
test
in
stos
cli
call
in
fild
jge
(bad)
in
add
adc
mov
push
stos
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
fbstp
jb
xchg
inc
adc
cmp
shl
sub
xchg
add
test
sub
push
imul
jge
shr
repnz
xor
leave
fidiv
and
sbb
inc
adc
rol
add
mov
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
gs
stos
(bad)
mov
lock
jo
add
lods
aaa
cmp
cmps
cmps
add
sub
add
test
call
in
fild
sub
test
push
imul
stos
phaddw
in
fiadd
pop
pop
(bad)
cmp
sub
daa
je
add
xchg
xchg
inc
adc
cmp
out
jb
sub
xchg
add
test
sub
push
imul
sub
dec
leave
jmp
popf
sbb
inc
adc
shr
dec
add
pusha
test
dec
add
dec
jno
pop
adc
pushf
push
mov
rcl
ins
test
(bad)
jbe
je
sub
push
push
xchg
pop
test
dec
push
test
or
add
adc
in
ficom
mov
add
push
test
ficomp
imul
add
fwait
adc
xchg
xor
sub
gs
push
jns
mov
pop
push
add
or
ins
inc
xchg
pop
pop
lahf
outs
lods
ja
mov
imul
pop
cmp
add
mov
pop
or
outs
and
scas
stc
add
fwait
adc
xchg
xor
sub
gs
push
jns
push
adc
dec
add
add
add
xchg
fldenv
sub
add
fistp
adc
add
ds
sub
pop
add
out
cmp
in
ficom
pop
outs
inc
test
enter
jmp
adc
(bad)
xor
test
sub
fisubr
inc
cmp
inc
lahf
xchg
xor
sub
ins
and
outs
cmps
je
mov
push
push
xchg
xor
dec
inc
enter
jmp
adc
clc
fist
int
popf
push
stos
inc
cmps
fs
leave
xchg
lahf
call
in
(bad)
adc
add
jo
jae
ror
outs
sub
cwde
int
jmp
int
shr
test
jno
mov
imul
dec
add
lahf
pushf
push
mov
addr16
push
add
loope
in
fisubr
cmps
cmps
add
shr
aad
sub
add
test
cmps
cmps
add
add
stos
adc
js
sub
shr
push
pop
inc
aas
add
test
cmps
push
jmp
leave
add
adc
mov
(bad)
xor
sub
cwde
int
jmp
cmp
sahf
lods
dec
cmp
xor
xor
leave
push
outs
sub
add
lods
shr
outs
mov
inc
in
fisubr
or
sbb
std
add
pop
pop
inc
mov
imul
pop
adc
gs
shl
dec
and
outs
and
scas
nop
add
mov
fidivr
add
add
test
movs
ret
mov
push
push
in
xchg
xor
add
sub
sub
in
lahf
push
test
mov
popf
repnz
or
sbb
inc
sti
sbb
push
mov
adc
scas
push
push
pop
ins
adc
leave
mov
cmps
cmps
adc
shr
outs
pop
xlat
dec
add
dec
ret
push
xchg
fcomp
lods
aad
in
inc
jmp
leave
add
sbb
inc
cmp
adc
add
es
push
into
mov
cld
lods
shr
outs
outs
sub
fstp
add
int
add
xchg
or
jno
add
call
cmps
cmps
jb
dec
xchg
push
jne
add
daa
call
in
(bad)
adc
cmps
add
xchg
add
int
popf
repnz
jo
push
mov
jmp
leave
fisubr
sahf
adc
push
push
pop
ins
adc
leave
mov
inc
dec
add
lahf
xchg
fcomi
jbe
js
out
push
push
stos
daa
cmp
in
fisubr
ret
fldcw
sub
push
jmp
mov
test
inc
retf
adc
shr
pop
dec
inc
jne
inc
fisubr
sub
ins
loope
stos
(bad)
cmps
cmp
pop
mov
adc
push
push
stos
(bad)
adc
leave
data16
and
imul
imul
je
inc
mov
xor
sub
sub
sub
sub
sub
in
enter
repnz
(bad)
xor
sub
xor
leave
xchg
lahf
call
in
(bad)
adc
add
call
in
fcmove
mov
cmp
inc
adc
mov
cmp
mov
add
push
imul
sub
cwde
add
int
in
fisubr
mov
add
jbe
sub
dec
leave
fisubr
mov
push
adc
ret
sub
leave
mov
add
stos
hlt
cmps
cmps
push
cmps
shr
sbb
inc
call
test
inc
mov
fisubr
ins
adc
leave
mov
cmps
cmps
adc
shr
cmp
xlat
dec
add
clc
and
int
lock
pop
sbb
shr
push
fild
adc
dec
ret
test
sub
cwde
int
jmp
cwde
int
jmp
push
jmp
sti
sbb
inc
rcl
jmp
aas
adc
hlt
cmps
cmps
shl
cmps
cmp
fld
in
shr
ficomp
mov
xchg
or
outs
and
xchg
or
dec
fisubr
ins
adc
leave
mov
jmp
cwde
int
jmp
add
pop
sub
push
(bad)
cmps
shr
pop
ret
inc
iret
adc
shr
aad
rol
mov
sub
add
xchg
mov
leave
mov
lods
shr
xor
retf
dec
add
push
sub
pop
push
imul
mov
leave
cwde
int
jmp
add
sub
ins
add
leave
retf
and
sub
sub
jmp
jb
dec
jb
(bad)
imul
cdq
sub
push
int
adc
gs
shl
dec
xchg
cwde
int
jmp
add
ret
jecxz
inc
adc
cdq
jmp
or
adc
inc
inc
(bad)
sub
sub
mov
cdq
sub
nop
int
lock
or
add
cmp
in
fisubr
shr
popw
jl
add
leave
popa
mov
mov
cmps
pop
push
jmp
and
cmps
in
aam
add
sub
sub
cwde
int
jmp
push
int
popf
repnz
adc
jbe
sbb
inc
adc
rcl
outs
push
xchg
iret
in
fidiv
mov
test
test
mov
rcl
fs
leave
dec
outs
sub
fisubr
mov
call
sbb
dec
stos
adc
imul
add
xchg
leave
call
in
dec
pop
inc
scas
adc
jbe
lods
inc
jecxz
cwde
int
jmp
add
test
int
adc
inc
sti
lahf
stos
lods
hlt
scas
cmps
mov
imul
push
call
test
call
xchg
leave
jle
cmps
cmps
adc
shr
aaa
pop
jl
add
push
sbb
repz
xchg
adc
push
sub
pop
outs
sub
ficomp
int
fcmovb
adc
xchg
xchg
daa
pushf
ins
rcr
fs
leave
fisubr
lds
pop
cwde
push
push
stos
(bad)
adc
scas
cmps
hlt
cmps
shr
sbb
inc
xchg
test
push
add
jb
dec
jb
or
add
test
xor
in
ficom
add
add
or
pop
adc
fwait
push
repz
fwait
adc
mov
add
outs
sub
cmps
sbb
add
int
xchg
dec
out
and
fisubr
(bad)
adc
(bad)
adc
inc
fist
dec
sub
cmps
pushf
inc
gs
shl
dec
jb
pushf
addr16
test
int
in
fisubr
pop
cmp
adc
push
add
or
sub
pop
ins
add
jb
mov
leave
jp
cmps
cmps
add
fild
push
sub
pop
push
imul
mov
leave
cwde
int
jmp
add
sub
ins
add
cmp
fisubr
sub
in
les
add
push
push
jns
mov
jmp
test
adc
scas
push
push
push
push
(bad)
cmp
sub
cwde
int
jmp
add
ret
inc
push
pop
test
push
or
xor
xchg
mov
lods
push
stos
inc
lahf
(bad)
jne
lods
repnz
dec
adc
loope
jmp
xchg
pop
test
mov
cmp
xchg
repnz
arpl
cmp
adc
and
add
cs
jbe
dec
bound
and
inc
push
jmp
lea
adc
stc
xchg
(bad)
out
or
ins
inc
xor
leave
cmps
lahf
lods
pop
cmp
shr
ficomp
int
fcmove
adc
mov
int
push
push
clc
push
jbe
outs
call
in
fcmovbe
adc
adc
or
sub
add
add
adc
leave
imul
sbb
lods
add
outs
sub
or
add
test
sub
push
imul
rcl
mov
push
xchg
xchg
dec
mov
cwde
int
jmp
pop
addr16
push
sub
jo
push
jmp
iret
adc
rcr
adc
rcr
pop
test
and
add
leave
add
and
leave
scas
mov
shr
(bad)
repnz
cwde
int
jmp
add
sub
ins
add
cmp
fisubr
sub
in
inc
mov
inc
call
push
jns
mov
dec
push
add
mov
mov
ins
inc
push
fwait
jb
dec
xchg
pop
imul
cmp
pop
inc
add
lahf
pushf
push
mov
rcl
gs
push
cmp
jmp
leave
fisubr
scas
adc
scas
push
push
xchg
(bad)
fwait
ins
shl
dec
inc
adc
jae
add
push
(bad)
sub
sub
sub
sub
sub
sub
in
leave
call
(bad)
gs
push
jno
push
sub
pop
outs
sub
fild
cs
fcmovb
add
test
sub
push
push
pop
push
cwde
int
out
fisubr
push
cwde
int
in
fisubr
leave
cwde
int
jmp
add
sub
push
imul
or
and
jb
add
mov
(bad)
scas
mov
adc
lds
mov
in
jb
or
dec
mov
adc
clc
in
add
leave
cwde
int
jmp
push
int
out
push
pop
lods
dec
cmp
push
add
or
fisubr
adc
mov
imul
(bad)
in
repnz
inc
mov
lods
sbb
inc
xchg
adc
jns
neg
and
imul
lea
mov
cwde
adc
fldcw
sub
adc
sar
sahf
dec
and
mov
xor
leave
push
outs
sub
add
jge
xchg
add
test
or
lods
sub
repnz
inc
inc
add
dec
adc
jp
jo
xchg
scas
jnp
rol
and
mov
mov
imul
jmp
leave
add
adc
xchg
leave
loop
mov
(bad)
jne
lods
repnz
leave
add
sbb
shr
pop
mov
fwait
and
mov
lahf
outs
adc
add
xchg
shr
jnp
or
(bad)
sahf
dec
and
mov
xor
leave
xchg
pop
pop
inc
add
or
pop
adc
in
(bad)
cmps
sbb
jl
test
xor
in
ficom
inc
add
enter
jbe
outs
add
sub
jns
mov
xchg
in
fldcw
sub
mov
add
or
in
fisubr
adc
jo
call
in
fcmovbe
adc
inc
add
leave
inc
lea
enter
cmp
shl
jb
push
xchg
test
cs
test
push
add
xchg
test
xchg
mov
in
ficomp
add
pop
stos
sti
add
jb
dec
sahf
adc
popf
push
jecxz
daa
adc
shl
dec
rol
push
adc
inc
pop
adc
shl
dec
retf
test
sub
mov
int
in
fisubr
popf
lea
sub
rdtsc
pop
stos
fcmovbe
scas
or
imul
push
inc
push
pop
test
push
cmc
ret
fs
pop
test
mov
pop
test
mov
nop
xor
adc
data16
outs
pop
push
nop
int
in
fisubr
shr
add
jnp
pop
(bad)
sub
sub
popf
sbb
mov
jl
fwait
push
jmp
retf
adc
rcr
add
and
dec
push
int3
out
add
push
pop
push
enter
fisubr
pop
cmp
adc
add
outs
cmps
dec
adc
rol
pop
pop
(bad)
cmp
sub
xchg
add
push
repz
(bad)
adc
shr
pop
dec
add
es
add
push
cmp
adc
pop
(bad)
cmp
sub
cwde
int
jmp
add
inc
push
test
xor
leave
pop
outs
sub
ficomp
js
arpl
jmp
in
cmp
add
jmp
leave
push
imul
into
adc
push
imul
mov
push
repz
or
shr
pop
dec
sub
(bad)
inc
inc
gs
lahf
xchg
out
imul
popa
or
inc
pop
adc
rcr
adc
shl
fisubr
enter
in
fisubr
ret
adc
add
jb
add
inc
fistp
popf
push
mov
mov
add
cli
cli
leave
cwde
int
jmp
pop
int
jb
dec
rol
mov
and
cmps
mov
cmps
cmps
sbb
add
dec
sub
popf
pop
push
pop
int
popf
sbb
inc
xchg
test
mov
add
or
sbb
inc
sti
sbb
cmps
xor
ds
fisubr
pop
(bad)
jge
mov
push
cmp
jb
dec
mov
adc
clc
out
add
push
imul
sub
lds
add
int
sub
sub
add
add
stos
(bad)
jbe
cmp
hlt
ret
lods
pop
cmp
iret
in
(bad)
outs
cmps
push
jmp
leave
add
adc
fldcw
pop
push
imul
ins
sub
mov
test
outs
cmps
dec
adc
mov
sub
sub
in
and
mov
jno
out
sub
shl
add
adc
cmp
call
in
ficomp
mov
mov
pop
sbb
stc
add
dec
test
cld
out
fisubr
(bad)
push
test
pop
cmp
mov
sbb
inc
xchg
test
inc
inc
push
fwait
jb
dec
mov
adc
or
outs
and
call
aam
fisubr
jmp
or
inc
sti
sbb
xor
test
push
stc
sub
leave
repnz
inc
inc
jo
pushf
outs
push
push
pop
int
popf
push
jecxz
xchg
sbb
sub
push
or
add
loope
sub
aam
shl
dec
push
or
out
pop
dec
sub
dec
add
stos
out
and
cld
jbe
dec
bound
and
add
sub
xchg
push
lods
sub
out
test
int
xchg
dec
call
or
test
inc
jmp
mov
cmps
cmp
sub
xchg
sub
xchg
in
aam
jo
lods
dec
cmp
pop
test
cmp
adc
add
push
nop
cwde
mov
lods
dec
cmp
clc
sbb
add
push
pop
int
popf
sbb
inc
call
test
rol
add
xchg
fcomi
outs
cmps
sub
dec
leave
fisubr
jmp
cmp
or
add
xlat
adc
or
sub
cli
mov
mov
cmp
jmp
leave
push
imul
ficom
adc
push
push
xchg
dec
movs
ins
shl
dec
push
test
or
add
adc
inc
rol
imul
(bad)
in
push
jnp
arpl
sub
sub
in
and
add
int
imul
add
inc
bound
inc
jmp
test
scas
cmps
adc
inc
inc
adc
sub
loopne
add
mov
sub
cwde
int
jmp
add
hlt
cmps
cmps
and
mov
in
repnz
or
dec
cmp
xor
leave
mov
xchg
cmps
aam
shr
sbb
inc
xchg
pop
test
mov
add
pop
push
cwde
int
in
fisubr
leave
cwde
int
jmp
add
pop
sub
fs
leave
xchg
lahf
call
in
ficom
adc
popa
add
cmps
adc
sub
repnz
xchg
call
xor
cs
jmp
sbb
xor
add
das
sbb
mov
mov
cmp
dec
ret
add
push
imul
sub
leave
add
int
in
fisubr
or
add
mov
sub
shr
xacquire
add
jb
dec
data16
xchg
ret
add
push
imul
mov
push
jnp
addr16
pop
leave
add
int
lock
dec
cmp
mov
add
shr
repnz
inc
inc
push
fwait
jb
dec
adc
imul
add
jmp
adc
add
push
push
add
test
push
fistp
add
jb
dec
xchg
clc
(bad)
jbe
call
push
jno
add
adc
dec
leave
fisubr
(bad)
adc
mov
sahf
ins
shl
dec
mov
add
add
jo
inc
cmp
inc
xchg
test
das
add
es
test
int
jbe
dec
dec
jmp
mov
out
cmp
iret
in
fisubr
adc
leave
outs
jb
cmp
leave
pop
jb
sub
(bad)
mov
sub
inc
call
test
inc
inc
xchg
call
dec
cmp
or
add
adc
add
add
or
pop
push
test
pop
int
pushf
stos
sub
shr
cld
pop
pop
nop
add
dec
sub
cdq
dec
nop
int
lock
mov
jmp
leave
fisubr
stc
adc
push
push
pop
ins
adc
leave
xchg
pop
pop
mov
fcomi
outs
cmps
sub
mov
ins
adc
leave
loop
sub
fild
out
std
mov
sbb
mov
adc
push
push
call
in
ficom
pop
push
cwde
int
in
fisubr
pop
in
leave
rol
(bad)
shl
dec
cli
adc
test
inc
add
inc
imul
stos
test
shr
fisubr
adc
add
pop
dec
add
dec
xchg
test
shr
outs
sub
stos
enter
test
call
stc
push
test
call
jmp
call
test
rol
add
jb
dec
into
adc
sub
sub
fcomip
inc
push
push
imul
jae
adc
add
popf
mov
push
fisubr
sub
in
loope
add
push
mov
test
or
imul
leave
add
mov
push
mov
in
mov
pop
push
nop
int
in
fisubr
xchg
inc
add
scas
cmps
les
xor
jb
dec
push
jmp
mov
lods
dec
cmp
and
or
add
mov
(bad)
jle
sbb
xor
stos
inc
fwait
adc
inc
fwait
push
test
push
in
pusha
and
add
jle
add
jge
mov
out
cmp
add
jno
outs
stos
jg
mov
out
test
dec
sub
cmp
adc
pop
or
gs
shl
dec
jb
dec
mov
scas
dec
adc
push
jno
aas
sub
xchg
jb
adc
shr
repnz
xor
ja
outs
pop
leave
cwde
int
jmp
daa
sub
mov
jmp
imul
aad
stos
adc
jns
arpl
js
clc
pop
cmps
sbb
xchg
xchg
push
push
mov
lea
fcomp
and
fld
clc
sti
sub
hlt
pop
pop
sub
out
cli
test
in
xchg
inc
(bad)
stc
dec
sub
pop
gs
add
push
jmp
add
shl
jg
jmp
dec
add
jmp
call
test
inc
scas
sahf
ins
rcr
fs
mov
adc
inc
mov
test
sub
scas
lods
inc
gs
shl
dec
jb
movs
mov
add
cdq
sub
nop
int
in
fisubr
pop
cmp
adc
add
jle
xchg
jns
pop
mov
add
int
cmc
nop
inc
add
imul
outs
add
in
jae
jne
lods
repnz
add
call
in
fiadd
adc
pop
add
jmp
jnp
dec
mov
call
pop
test
inc
shl
int
js
sub
shr
repnz
nop
inc
rcl
cli
push
loope
stos
inc
fwait
(bad)
cli
clc
in
add
or
cs
fnstenv
lods
imul
add
test
out
add
ret
mov
adc
int
push
lods
sub
and
cmps
and
mov
out
lods
or
add
inc
jp
push
stos
ficomp
(bad)
in
push
jmp
inc
adc
jnp
dec
(bad)
xor
sub
cmc
pop
push
jmp
scas
adc
stos
inc
inc
ins
lds
ficomp
add
jae
leave
cwde
int
jmp
les
add
mov
lods
mov
mov
jbe
push
repz
mov
test
sub
mov
push
(bad)
lods
sub
lock
mov
adc
test
sub
or
dec
sub
adc
lahf
jb
dec
cmp
mov
adc
in
ficom
icebp
mov
add
imul
lods
sub
enter
test
pop
cmps
sub
hlt
pop
out
adc
leave
out
(bad)
pop
test
dec
xor
leave
pop
outs
sub
repnz
add
jmp
leave
push
imul
pop
jmp
fs
leave
xchg
lahf
adc
push
jae
add
cmp
into
jb
sbb
lods
in
fild
stc
in
ret
add
jne
mov
mov
inc
push
jbe
push
repz
or
shr
pop
dec
sub
jle
inc
mov
push
stos
ficomp
jmp
imul
jle
sub
sahf
dec
push
mov
pop
xchg
inc
add
dec
leave
call
repnz
hlt
scas
cmps
xor
xchg
inc
xor
leave
mov
sub
sahf
xchg
jb
push
test
inc
xchg
in
aam
sbb
inc
call
test
retf
pusha
lahf
xchg
fcomi
outs
cmps
dec
adc
mov
adc
leave
into
jb
sbb
lods
in
fild
jmp
or
call
adc
fisubr
pop
cmp
inc
jg
sub
in
mov
jmp
jbe
shl
push
lods
sub
fimul
lahf
lea
jns
pop
push
inc
add
jmp
adc
cmp
jo
add
xlat
or
shr
jo
sub
(bad)
outs
cmps
cmp
jmp
push
push
lods
inc
cmp
mov
xchg
pop
adc
pop
mov
mov
cmp
or
outs
and
stos
retf
pop
xchg
adc
xchg
lahf
outs
adc
sub
inc
xchg
in
mov
iret
scas
mov
adc
mov
jg
mov
sub
add
cmps
ins
shl
dec
mov
jmp
inc
adc
jl
mov
lods
shr
add
jmp
pop
adc
pop
push
add
lods
lea
test
repnz
add
pop
dec
sub
mov
add
fs
leave
mov
lods
jg
pop
clc
nop
adc
dec
and
jl
lea
sbb
bnd
cmc
mov
sbb
iret
jo
imul
stc
push
loopne
outs
stos
sti
sbb
cmp
gs
jb
dec
jb
aas
mov
lods
aaa
cmp
shr
ficom
dec
mov
add
stos
in
int
add
int
sub
sub
jmp
inc
cmp
lods
loopne
jns
xchg
sub
add
imul
out
sub
inc
adc
jo
pushf
outs
adc
add
inc
mov
push
imul
movs
push
stos
fiadd
adc
fwait
add
test
call
inc
out
movs
inc
adc
push
xor
push
adc
popf
push
jmp
jmp
add
xchg
mov
cli
push
add
mov
aam
and
gs
test
lods
sub
(bad)
loop
fisub
fisubr
jl
movs
leave
xchg
cmps
test
shr
(bad)
gs
mov
outs
pop
push
add
inc
cmp
sub
mov
(bad)
in
ret
jnp
test
movs
inc
adc
push
imul
add
push
inc
fimul
test
clc
mov
add
inc
pop
das
mov
lods
push
adc
dec
inc
cli
push
js
outs
xchg
cmps
fwait
pusha
sti
push
leave
sub
sub
adc
add
pop
shr
imul
int
inc
cmp
in
pop
cli
sub
out
hlt
scas
cmps
mov
shr
repnz
push
repz
add
shr
pop
dec
add
std
pop
sub
ficomp
mov
xchg
add
add
mov
iret
in
fisubr
shr
add
mov
add
cmps
dec
adc
push
push
pop
ins
adc
leave
push
outs
sub
add
cmp
sub
cwde
int
jmp
add
cmp
mov
adc
int
push
lods
sub
and
cmps
sub
mov
out
jbe
rol
add
test
sub
mov
adc
test
push
stos
mov
inc
dec
add
xchg
add
or
loopne
leave
sub
ror
lock
cdq
pop
add
or
add
pop
popa
xor
and
xchg
mov
inc
or
pushf
outs
movs
ret
adc
pop
push
nop
int
lock
pop
cmp
in
fidiv
adc
rol
push
call
in
fiadd
leave
xlat
lea
fcomp
pop
mov
adc
lods
mov
int
push
jbe
(bad)
adc
rol
dec
push
or
xor
add
push
xor
push
cdq
dec
cs
shl
sar
add
jmp
push
jbe
sub
sti
add
dec
dec
jmp
mov
push
jmp
mov
push
mov
(bad)
sub
sub
jns
adc
fldcw
sub
fimul
sbb
sahf
dec
jb
in
and
outs
add
test
or
outs
and
sbb
add
push
outs
test
mov
mov
xchg
xor
lods
(bad)
shr
fisubr
cmps
cmps
adc
shr
add
cli
mov
add
add
and
aaa
mov
sub
xchg
fstp
sbb
inc
mov
pop
mov
add
dec
sbb
pushf
outs
push
xchg
cs
jo
mov
test
cmp
inc
lea
sub
repz
scas
adc
xchg
inc
(bad)
sub
sub
ins
lods
test
adc
clc
stc
mov
mov
sub
dec
inc
fisubr
cmp
cdq
sub
push
int
sub
dec
sub
fisubr
push
sub
jo
(bad)
iret
in
fisubr
shr
repz
inc
lods
add
js
push
lods
sub
daa
sub
stos
(bad)
cmp
repz
xchg
pop
xor
mov
inc
leave
push
stos
fiadd
adc
add
dec
add
add
xor
adc
pop
add
jmp
je
add
cmp
xchg
push
test
mov
adc
mov
add
dec
dec
jbe
outs
push
push
scas
cs
add
leave
popa
mov
jl
adc
jmp
shr
ficom
add
pop
popa
xor
and
xchg
mov
xor
call
cmps
sub
sti
adc
cmp
in
pop
loopne
adc
leave
out
hlt
scas
cmps
mov
shr
repnz
push
sbb
adc
shr
dec
add
fisubr
push
sub
and
xchg
lahf
call
in
fisubr
sbb
add
jae
add
cmp
jbe
sub
fild
xchg
repnz
add
jne
mov
jp
inc
push
jbe
push
repz
or
rcl
gs
shl
dec
mov
imul
pop
mov
add
xor
push
lods
sub
cdq
inc
sbb
or
dec
push
mov
pop
inc
inc
add
call
push
ret
inc
jnp
test
inc
addr16
cmps
inc
xchg
shl
cmps
shr
xchg
hlt
cmps
cmps
js
shr
repnz
(bad)
inc
xor
sbb
mov
inc
leave
jb
sub
add
int
lock
pop
or
dec
adc
dec
leave
jb
sub
push
outs
sub
in
cs
add
dec
sub
cli
fimul
push
int
sub
dec
add
fisubr
mov
add
int
lock
pop
cmp
adc
or
push
mov
jp
inc
push
call
test
push
outs
sub
push
jecxz
retf
adc
shl
dec
out
adc
imul
clc
sahf
cmps
push
cmps
shr
jl
cmps
cmps
inc
cmps
shr
test
lods
shr
shl
or
sub
lods
mov
pop
cmp
shr
ficomp
fisubr
sub
adc
leave
xor
xchg
call
xchg
mov
(bad)
call
xor
dec
sti
nop
cwde
test
sahf
sbb
mov
adc
mov
adc
out
fisubr
mov
mov
jmp
into
add
jb
mov
adc
jl
mov
lods
shr
rcl
xor
mov
push
jno
mov
dec
leave
fisubr
push
adc
aaa
add
mov
(bad)
sub
sub
sub
sub
repnz
ins
rol
ficomp
mov
xchg
aam
xchg
mov
add
hlt
cmps
cmps
add
cmps
cmps
sbb
push
add
dec
sub
inc
call
push
jns
mov
adc
add
mov
mov
push
inc
push
fwait
jb
dec
mov
jg
add
push
imul
stos
add
lahf
pushf
push
jnp
fisubr
lods
in
fild
xchg
in
pop
mov
cmps
or
mov
add
test
test
mov
adc
shl
sub
push
xchg
add
sub
sub
mov
pop
mov
inc
push
fwait
jb
dec
cli
adc
out
mov
call
cmp
push
jno
sbb
lods
in
fild
mov
adc
jbe
jl
dec
leave
xor
mov
sub
mov
jbe
jb
dec
xchg
test
add
mov
es
stos
popf
adc
add
jo
jae
xchg
hlt
jbe
sub
(bad)
push
mov
(bad)
xor
sub
cwde
int
jmp
aad
shr
push
pop
lods
(bad)
shr
fisubr
shr
in
pop
sub
add
push
sbb
fisubr
sub
ficomp
iret
in
ficom
mov
xchg
call
add
mov
lods
mov
inc
push
inc
push
fwait
jb
dec
mov
adc
clc
call
push
leave
dec
outs
sub
add
int
sub
sub
into
dec
inc
gs
loope
sti
mov
cmp
js
ret
jmp
rol
pop
adc
leave
cwde
int
jmp
xchg
lock
test
(bad)
jecxz
add
sub
sub
fldcw
or
xor
push
outs
sub
push
push
call
in
fisub
cmp
pop
mov
sbb
inc
call
test
mov
adc
inc
(bad)
sbb
jae
adc
(bad)
mov
inc
cld
add
loop
cli
push
or
cmp
mov
adc
jae
adc
vmwrite
dec
jmp
sbb
lahf
jb
dec
push
xchg
clc
add
sub
pop
int
out
repz
sub
mov
lods
shr
repnz
cmp
lahf
outs
pop
push
cwde
int
in
fisubr
leave
cwde
int
jmp
add
pop
sub
push
nop
int
lock
push
(bad)
sub
sub
sub
sub
add
inc
data16
ficomp
mov
xchg
scas
adc
xchg
in
aam
add
cmps
shr
stos
inc
jecxz
cwde
int
jmp
add
leave
push
pop
dec
imul
test
push
mov
rcl
gs
push
cmp
adc
push
push
pop
pop
(bad)
jge
aad
out
dec
inc
add
push
adc
add
dec
push
add
add
mov
in
repnz
xor
out
push
mov
shr
pop
dec
sub
xchg
dec
inc
jmp
shr
fiadd
adc
popf
push
repz
pop
adc
rcl
pop
pop
push
test
sahf
ins
rcr
pop
test
outs
inc
es
sbb
inc
sti
sbb
call
stos
hlt
scas
cmps
cwde
test
add
sahf
dec
imul
(bad)
in
stos
sub
shr
mov
add
(bad)
sub
shr
mov
dec
nop
int
lock
mov
adc
jecxz
push
pop
ins
adc
leave
xchg
pop
mov
add
lahf
xchg
fcomi
mov
mov
inc
adc
shl
repnz
inc
inc
shl
int
out
mov
adc
(bad)
cmps
shr
dec
adc
pop
movs
inc
adc
clc
gs
add
add
mov
les
add
imul
repnz
jmp
mov
shr
dec
sub
fisubr
dec
aaa
add
mov
xchg
test
jmp
cmp
add
movs
inc
adc
push
leave
outs
sub
add
test
cmps
cmps
add
sub
add
xor
leave
dec
outs
sub
fild
jmp
inc
add
mov
cmps
dec
and
add
pop
push
jno
xchg
sub
push
push
pop
pop
(bad)
cmp
sub
(bad)
int
add
sahf
lods
(bad)
iret
in
ficom
fsub
push
mov
rcl
inc
jmp
adc
sbb
test
repz
fistp
test
adc
or
test
sub
mov
or
test
add
pop
leave
stos
adc
push
stos
bound
add
clc
jne
in
mov
add
ins
rcr
fisubr
repnz
inc
es
lods
cdq
sub
xchg
or
cmp
adc
outs
add
imul
test
add
lahf
adc
rol
add
adc
push
stos
dec
lahf
call
ins
xchg
add
add
mov
add
mov
push
inc
fimul
stos
push
ins
adc
jo
lods
jbe
adc
rol
push
pop
ins
adc
leave
push
add
inc
(bad)
ins
and
cwde
jmp
adc
pop
loop
add
test
lock
lods
(bad)
imul
sub
pop
lahf
adc
add
js
repnz
xchg
inc
jp
push
adc
popf
push
hlt
jbe
add
clc
push
add
push
jb
add
add
ins
add
repnz
adc
push
add
add
stos
ficomp
clc
adc
mov
ins
adc
popa
add
enter
add
push
mov
sbb
dec
add
add
pop
xlat
pop
inc
jbe
test
ins
shl
repz
add
or
gs
add
add
movs
dec
add
add
pop
(bad)
add
add
xor
push
add
rol
dec
add
add
add
test
add
xor
out
(bad)
ins
mov
xchg
dec
xchg
(bad)
in
pop
das
jne
add
add
add
movs
arpl
add
pop
popa
lods
sub
(bad)
add
add
mov
sub
jne
gs
add
lods
sub
xchg
lea
add
mov
mov
js
add
dec
inc
add
(bad)
jmp
adc
inc
fidiv
sub
lods
pop
push
popa
or
fild
mov
dec
sub
xor
sub
add
outs
sub
sub
sub
sbb
fld
add
popf
shl
repz
cmps
pop
loope
mov
call
pop
push
adc
aaa
test
or
add
xchg
ficomp
clc
btc
push
push
in
xchg
adc
xchg
add
test
popf
adc
add
jp
hlt
gs
adc
add
out
add
cmps
hlt
push
(bad)
in
stos
hlt
sbb
lods
push
push
stos
(bad)
adc
sbb
lahf
add
inc
fadd
add
cdq
sub
xchg
clc
ja
add
add
add
lods
jbe
adc
sub
and
add
xchg
(bad)
in
stos
hlt
mov
add
add
outs
scas
mov
or
dec
dec
add
dec
sub
pop
add
xchg
out
jecxz
or
adc
sbb
cwde
inc
add
push
adc
jo
jnp
add
stos
jp
jo
lods
push
je
add
inc
jecxz
xchg
clc
adc
push
add
add
add
sub
shl
add
in
fwait
add
add
push
jnp
leave
xchg
push
add
test
pop
add
add
sub
xchg
clc
aaa
mov
push
add
lods
shr
repnz
add
retf
test
ins
add
jbe
jo
lods
jbe
adc
push
push
xchg
lahf
mul
xchg
ficom
clc
lods
ds
jbe
push
in
mov
add
mov
movs
add
add
mov
inc
and
(bad)
std
add
jmp
add
pop
jg
add
push
sbb
add
or
sub
xchg
or
adc
add
call
mov
jg
int3
hlt
pop
add
adc
pop
jmp
stos
pop
cli
sub
push
lahf
xchg
ficomp
add
test
mov
ret
or
push
xchg
fiadd
mov
add
add
(bad)
sbb
adc
dec
imul
dec
pop
fisubr
pop
xchg
jmp
mov
popa
leave
add
push
pop
lods
push
pop
add
add
lods
(bad)
xchg
in
(bad)
mov
or
call
and
pop
das
adc
jno
add
leave
push
add
add
add
sbb
mov
push
push
push
inc
test
inc
lea
fwait
jb
pop
mov
cwde
add
add
sbb
inc
xor
cmp
and
add
fisttp
leave
push
add
inc
gs
shl
mov
clc
(bad)
in
dec
or
push
push
dec
fprem
push
in
dec
push
cmp
adc
add
cmps
jo
xchg
stos
jle
shr
lahf
add
jmp
call
xchg
adc
and
lods
jg
test
jb
pop
adc
add
or
inc
cwde
jmp
lds
test
jle
adc
mov
pop
je
add
push
stos
dec
lahf
lods
inc
in
sti
je
push
xchg
scas
fs
icebp
add
call
ins
add
repnz
enter
or
test
cmp
adc
and
lods
jg
test
jb
pop
adc
pop
jnp
add
pop
push
stos
sub
mov
shr
add
popf
sbb
(bad)
pushf
in
imul
add
(bad)
shl
jnp
add
jmp
add
pop
outs
mov
(bad)
cli
lods
pop
add
add
outs
sub
push
dec
xchg
and
add
cli
jp
test
adc
jo
mov
fisubr
repnz
push
inc
xor
pop
add
call
or
add
es
lods
sub
fiadd
mov
stos
hlt
ins
aaa
in
xor
add
test
lods
push
test
add
lods
(bad)
mov
add
lahf
daa
ror
add
sub
and
push
push
cmps
fmul
cli
test
test
add
xchg
mov
push
test
(bad)
jmp
stos
add
inc
xchg
cvtps2pd
push
lahf
(bad)
std
pop
dec
xchg
imul
add
add
js
arpl
add
pusha
test
add
xor
jne
push
(bad)
jmp
mov
push
in
mov
add
push
(bad)
mov
add
add
add
mov
pop
push
add
imul
cli
movs
jae
add
jbe
test
jns
push
dec
xchg
xor
addr16
(bad)
xor
add
pop
inc
pop
add
mov
cmps
daa
add
sub
and
fs
xor
pushf
outs
adc
call
jb
mov
add
test
retf
lods
ds
add
add
mov
clc
retf
mov
jl
js
cmp
add
xor
leave
add
dec
(bad)
jns
add
pop
lock
add
rol
push
mov
xchg
add
add
in
jbe
add
push
cmp
sub
add
add
add
add
dec
jne
push
dec
jge
add
hlt
mov
jb
test
jno
push
(bad)
jmp
int
add
das
jbe
(bad)
cmp
add
add
mov
pusha
popf
add
leave
sub
int3
jge
js
pop
dec
data16
mov
sub
popf
add
mov
mov
enter
push
push
lods
mov
add
mov
inc
xor
ins
add
(bad)
jmp
int
add
das
jne
in
cmps
mov
adc
adc
(bad)
jl
js
cs
xor
(bad)
in
repnz
inc
push
lahf
pushf
push
sub
rol
or
call
mov
sbb
fnsave
lods
sub
adc
add
add
sub
push
jge
repnz
inc
xor
pop
add
(bad)
jmp
jae
add
mov
clc
fwait
popf
add
add
int
add
pop
inc
mov
dec
jae
add
adc
lods
push
push
push
adc
add
je
inc
pusha
lahf
xchg
fcomi
ins
shr
sub
add
xor
add
push
call
xchg
jecxz
inc
mov
rcl
outs
ins
push
push
add
add
clc
hlt
mov
mov
xor
popf
add
jmp
hlt
mov
pop
xor
out
lods
push
push
push
add
dec
test
call
sti
push
push
add
pop
cmp
sub
add
test
or
adc
push
jnp
add
pop
push
xor
in
(bad)
push
add
add
add
inc
sahf
inc
adc
or
dec
add
pop
pop
(bad)
xor
add
add
mov
inc
add
lahf
add
xchg
lahf
add
pop
les
add
loopne
pop
push
inc
add
gs
add
push
dec
rol
inc
fisubr
jo
add
push
mov
add
add
add
add
test
add
popf
jo
xchg
inc
mov
xchg
add
xor
add
inc
jmp
ins
or
sbb
or
add
cs
test
jmp
xor
pop
push
inc
jmp
enter
add
outs
sub
pop
push
inc
test
sub
add
out
add
xchg
mov
int
call
jb
lahf
add
add
add
hlt
into
inc
add
sub
fldenv
sub
pushf
cmp
lahf
outs
push
ins
adc
jmp
mov
add
add
push
popa
add
add
scas
add
add
stos
add
jbe
push
in
into
inc
add
inc
cs
mov
xor
popf
add
jmp
fidiv
add
cld
mov
clc
add
add
sbb
clc
add
sub
add
add
add
jo
sbb
xor
add
test
sub
xchg
stc
add
in
add
jo
xor
lods
push
lods
ficomp
sub
lods
push
jb
add
add
sar
add
pop
fwait
pushf
lods
cdq
sub
xchg
int3
popa
lahf
outs
pop
add
cmp
xchg
or
adc
sbb
add
xchg
add
add
pop
add
fwait
add
add
pop
add
lahf
add
add
pop
pushf
repz
add
xor
fld
les
outs
jmp
xchg
leave
shr
fiadd
ins
out
sub
sbb
shr
sbb
stos
xchg
adc
push
push
xchg
mov
adc
push
(bad)
stos
pop
mov
sub
jp
sahf
outs
adc
add
jo
cvtpi2ps
xor
push
or
inc
sbb
sub
mov
out
hlt
test
in
(bad)
xrelease
push
or
cmps
sub
daa
adc
add
sbb
cs
std
push
adc
add
pop
adc
add
pop
stos
sti
add
push
jnp
mov
repnz
inc
inc
lea
shr
repnz
inc
mov
inc
(bad)
jne
adc
adc
and
add
push
jl
jmp
ins
add
icebp
les
mov
and
popa
sahf
outs
adc
data16
jo
cvtpi2ps
xor
push
or
push
push
add
sub
mov
out
hlt
test
in
(bad)
xrelease
push
or
xor
mov
test
jmp
lds
pop
test
mov
cli
and
adc
test
jmp
lds
push
jl
add
add
jbe
cmp
pop
lods
mov
test
mov
dec
push
or
jbe
std
add
ins
mov
sbb
iret
jb
imul
rol
xchg
jb
add
icebp
adc
shr
icebp
jbe
test
leave
sub
in
lds
dec
ins
adc
test
jne
cs
icebp
jb
dec
sbb
xchg
fst
jb
push
adc
cmp
adc
sbb
stos
(bad)
pop
cdq
push
inc
seta
(bad)
in
pop
test
dec
cs
clc
jbe
movlps
add
out
hlt
test
in
(bad)
jge
cmp
hlt
pop
imul
adc
js
cli
jge
(bad)
out
scas
cdq
add
or
(bad)
mov
xchg
jp
(bad)
nop
jl
inc
jg
mov
aas
jl
inc
sar
push
jbe
inc
bound
push
jbe
lea
inc
in
sub
mov
repnz
lods
fiadd
xchg
clc
xchg
cwde
add
add
mov
imul
or
test
jl
js
(bad)
cmp
push
adc
inc
lock
dec
popf
shr
push
inc
lea
sbb
push
adc
sti
sub
rcl
sbb
add
movs
das
fisubr
or
pop
dec
mov
outs
pop
xchg
pop
jmp
mov
add
sub
push
adc
pop
int
fisubr
or
pop
clc
push
xlat
add
or
arpl
xor
mov
(bad)
clc
mov
add
pushf
mov
arpl
ins
add
popf
and
js
lahf
adc
syscall
add
movs
icebp
les
hlt
jmp
(bad)
cmc
repnz
inc
fs
jmp
fisttp
mov
adc
inc
outs
test
sub
push
push
xchg
and
and
aas
pushf
add
jo
pop
push
leave
push
shr
ficom
dec
xchg
add
jbe
test
test
inc
outs
test
adc
fisub
xlat
fiadd
push
xchg
and
shl
adc
mov
pop
popf
add
jo
pop
or
adc
fld
push
pusha
pop
aad
rol
in
sub
xchg
add
cli
clc
sub
fnsave
loope
movs
(bad)
jmp
pushf
add
push
jle
jmp
pushf
add
push
jle
jmp
pushf
add
push
jle
jmp
pushf
add
push
mov
clc
pop
out
add
push
leave
push
shr
ficom
movs
xchg
add
push
cmp
outs
sub
add
test
inc
(bad)
cmp
addr16
add
call
ins
push
outs
sub
pop
sbb
adc
lds
loope
in
ficomp
add
add
call
movs
add
lods
hlt
cmps
not
rcr
add
ins
mov
sub
fld
test
shr
mov
in
(bad)
lahf
lahf
adc
sub
fld
or
pop
test
sub
or
mov
dec
test
in
push
adc
push
add
das
(bad)
outs
xchg
adc
rol
shl
in
cmp
or
xor
push
fisubr
add
mov
push
in
cmps
dec
sub
ins
test
pop
push
add
leave
fld
add
pop
or
pop
add
icebp
fisubr
rcl
mov
pop
push
push
and
sub
fs
ins
dec
inc
xchg
in
loopne
sbb
pop
or
sub
lods
jbe
adc
ins
adc
inc
mov
shr
sub
add
(bad)
repnz
ins
mov
sbb
iret
jo
imul
sar
jb
xchg
add
lods
sahf
fwait
stos
lahf
push
add
popf
out
lods
sub
aam
movs
add
aaa
sbb
adc
push
mov
pop
xor
add
mov
pop
call
test
rcl
xchg
in
loopne
sbb
pop
or
and
jo
jbe
adc
fild
push
pop
ins
adc
inc
add
add
test
jmp
imul
inc
pusha
push
mov
mov
jge
inc
outs
dec
adc
icebp
push
jl
add
pop
fsubr
inc
add
push
lods
mov
mov
add
push
xchg
rcl
in
fisub
shr
ficom
lods
xchg
add
dec
mov
push
pop
ins
adc
inc
inc
ror
fisubr
jbe
adc
mov
pop
mov
sub
push
movs
push
jmp
mov
gs
(bad)
ins
hlt
popf
push
lods
ficom
jl
xchg
in
push
jne
add
jbe
xor
inc
add
pop
jnp
add
jmp
in
call
add
out
push
jl
jmp
cwde
add
add
mov
add
out
push
adc
enter
push
imul
jmp
outs
test
in
lods
pop
imul
jno
in
fimul
ja
push
mov
inc
adc
adc
xchg
test
test
dec
adc
stos
and
js
fisubr
add
clc
pop
out
mov
lahf
daa
adc
fisub
jmp
repnz
push
test
adc
add
popf
push
lods
mov
in
stos
cs
test
aaa
inc
es
sbb
dec
(bad)
clc
cmps
rcl
rol
cmps
addr16
outs
lea
add
cmps
jl
add
and
call
ins
inc
xchg
jp
and
shr
sub
mov
xchg
fisubr
pop
cs
adc
fwait
adc
gs
shl
ret
adc
and
add
mov
push
mov
in
movs
adc
loope
adc
in
fisubr
daa
push
and
pop
push
popa
or
enter
sub
fisubr
dec
sbb
call
cs
in
xor
pop
sub
lods
adc
out
push
jbe
gs
inc
stos
lahf
push
add
add
test
and
ror
in
mov
repnz
push
test
inc
add
push
add
pop
push
push
sub
pop
lods
sub
ins
add
fisubr
jmp
mov
sbb
fabs
shr
ficomp
clc
mov
add
push
outs
test
jp
pop
pop
xchg
add
push
cmp
inc
jmp
shr
ficomp
(bad)
(bad)
add
inc
cs
int
outs
sub
addr16
add
pusha
test
adc
pop
mov
adc
jns
mov
fisubr
cwde
cs
(bad)
gs
fs
add
push
jne
mov
out
(bad)
push
inc
adc
adc
pop
inc
add
fnsave
(bad)
je
adc
fs
inc
jb
cmps
inc
adc
or
adc
dec
mov
and
or
fisubr
repnz
inc
push
jbe
push
jl
jmp
mov
add
jl
push
outs
test
xchg
aad
inc
xchg
call
xor
add
xchg
push
or
push
sub
outs
sub
push
push
adc
ins
std
dec
stos
(bad)
out
adc
rcr
mov
add
ja
xchg
pop
popf
(bad)
in
push
sub
pop
add
xchg
cmps
adc
inc
cmp
add
or
xchg
js
lahf
outs
mov
xor
jmp
cwde
add
push
lods
mov
mov
mov
pusha
adc
xor
sub
ins
aaa
in
ret
add
jmp
add
pop
cld
nop
add
jbe
jo
lods
jbe
adc
repz
push
stos
dec
add
jbe
jo
lods
jbe
adc
repz
push
mov
les
or
icebp
jne
mov
movs
inc
pop
jmp
mov
movs
inc
adc
unpckhps
inc
xchg
jmp
inc
xchg
rcr
enter
push
test
aaa
inc
sub
jp
cs
icebp
push
sar
pop
cmp
loope
stos
jecxz
es
push
scas
inc
add
or
gs
test
xlat
outs
test
stos
dec
cs
test
into
push
(bad)
jmp
stos
dec
push
sub
push
push
mov
les
and
push
jne
add
push
jl
jmp
cdq
add
jo
lods
dec
in
mov
test
outs
retf
mov
add
repnz
push
outs
lods
or
pop
xchg
cwde
add
mul
xchg
jp
pop
int
add
jbe
push
mov
push
inc
fimul
stos
push
imul
sbb
call
aas
xlat
add
or
cmp
add
sbb
ins
jmp
in
fisub
clc
cmp
add
ins
adc
shr
lahf
add
xchg
mov
add
jo
inc
mov
mov
enter
in
fisubr
mov
lahf
mov
loop
ret
sub
movs
stos
pop
or
popf
jnp
jmp
fwait
add
repz
adc
xor
push
cmc
retf
in
fisubr
or
mov
mov
xor
pop
sbb
dec
add
cmp
daa
jmp
lods
add
test
add
inc
lea
add
pop
push
jp
pop
aad
add
jbe
push
mov
push
inc
fimul
stos
push
ja
mov
add
call
daa
(bad)
add
ins
adc
push
dec
cmp
sub
push
push
mov
les
or
fs
push
pop
popa
mov
(bad)
sbb
or
sbb
add
xchg
popf
push
lods
mov
(bad)
jl
adc
(bad)
jb
sahf
sbb
dec
add
jmp
add
pop
ja
add
push
mov
push
cmp
call
mov
push
fisubr
repnz
xchg
fist
outs
pop
add
jo
lods
jbe
jmp
add
pop
aas
pop
add
push
lods
into
push
inc
jmp
gs
ds
adc
jbe
mov
mov
push
out
call
pop
adc
add
mov
int3
test
xchg
or
inc
in
loopne
add
fldenv
(bad)
adc
sub
push
jp
cli
adc
sub
iret
scas
add
sbb
dec
add
pop
push
cmp
pop
rol
add
pop
add
outs
xchg
cmp
xor
lahf
scas
add
icebp
fnsave
mov
repnz
adc
sub
outs
jno
loopne
stos
sub
in
add
mov
or
push
cmp
dec
cs
test
xor
add
or
add
add
ret
jl
nop
call
push
push
(bad)
dec
add
add
shr
outs
sub
lahf
sbb
fimul
add
leave
loope
sbb
xlat
mov
add
inc
in
jo
lods
push
shl
sbb
dec
xor
mov
jmp
ins
mov
mov
fnstcw
stos
sti
jae
retf
pop
mov
xor
sbb
mov
mov
mov
sub
sub
sub
shl
mov
push
add
ficomp
and
in
sbb
es
mov
xor
sub
pop
add
cli
add
push
(bad)
mov
cmp
jge
jo
adc
cs
and
push
lods
mov
xchg
jge
in
sub
inc
jbe
mov
jmp
push
push
lods
ret
jle
add
popf
xchg
or
inc
push
shl
(bad)
adc
add
adc
push
add
xor
ret
ins
rcl
(bad)
loopne
sti
push
jl
mov
push
jl
imul
in
repnz
add
or
fisubr
je
jl
js
hlt
ins
xlat
in
push
add
xor
repnz
add
xchg
add
jl
adc
lea
xchg
out
adc
inc
div
popa
lods
lahf
out
add
in
mov
add
push
lods
sub
ins
dec
popf
sbb
inc
add
outs
in
fisub
add
xchg
stos
or
ja
add
jbe
jo
lods
jbe
adc
push
push
stos
dec
add
jbe
jo
lods
jbe
adc
inc
add
or
add
(bad)
cli
jno
(bad)
jge
jmp
and
xor
ficomp
js
cli
jne
in
scas
aam
add
ins
add
imul
inc
adc
push
pop
push
mov
or
or
and
push
jp
clc
jge
mov
cmps
fist
clc
or
lods
inc
call
movs
(bad)
jmp
add
add
push
pop
dec
imul
cmp
fldcw
fisubr
or
push
lahf
ret
call
mov
adc
lods
dec
mov
push
xchg
mov
stos
fiadd
push
dec
and
adc
add
das
pop
repnz
ins
adc
xchg
sbb
test
inc
xchg
add
hlt
pop
and
adc
stos
bnd
enter
js
cli
add
push
(bad)
inc
test
jmp
shr
in
dec
add
lea
mov
mov
mov
xchg
xor
loope
lock
lods
loop
jg
fdiv
mov
inc
fdiv
jb
daa
lods
xchg
hlt
dec
ja
test
push
jbe
outs
mov
cwde
mov
stc
inc
xlat
dec
pop
(bad)
dec
push
cmp
aaa
dec
(bad)
jge
add
repnz
xchg
mov
jmp
scas
add
sbb
inc
div
dec
fdiv
jb
daa
push
ret
mul
mov
pop
push
push
frstor
add
ins
add
jo
lods
dec
mov
outs
sub
add
out
push
mov
clc
push
fld
push
jl
leave
push
add
inc
cmp
xchg
out
jge
adc
fidivr
fist
adc
jmp
shr
(bad)
sbb
push
adc
repnz
xchg
add
mov
sub
add
add
sahf
lods
mov
add
lods
inc
sahf
lods
inc
pushf
pop
mov
enter
in
fisubr
jmp
add
jbe
(bad)
je
adc
(bad)
ins
push
enter
in
fisubr
ja
add
jbe
(bad)
popa
rcl
fs
jns
push
(bad)
jmp
mov
add
push
lods
dec
mov
lods
dec
add
add
inc
add
xchg
(bad)
adc
add
cmps
test
adc
jmp
push
pop
pop
(bad)
jl
adc
lea
push
mov
add
mov
xchg
mov
test
jmp
xor
or
adc
push
mov
fs
sbb
push
pop
or
xor
add
pop
jbe
sbb
inc
add
je
adc
imul
add
lods
repnz
outs
test
jp
jbe
(bad)
in
pop
retf
sahf
xchg
or
inc
mov
clc
in
add
les
hlt
jo
pop
xchg
add
test
adc
rcr
pop
mov
inc
cmp
lahf
fwait
lods
shl
pop
test
cmps
lea
in
fisubr
imul
(bad)
in
push
jnp
xchg
lea
clc
or
add
or
pop
push
test
fs
dec
mov
int3
inc
add
cdq
sub
fild
inc
xchg
add
(bad)
shl
dec
ss
lods
add
push
cs
lea
popf
jle
sub
cmps
movs
movs
arpl
int
rcl
gs
cmps
xor
mov
add
sbb
pushf
mov
xchg
or
inc
xor
ins
dec
fisubr
and
fld
and
mov
leave
sub
in
fisub
mov
leave
sub
cwde
int
out
fisubr
and
test
xor
pop
int
js
jae
inc
cmp
cmps
xor
and
cmp
(bad)
in
lods
inc
jecxz
mov
mov
stos
inc
scas
in
push
rol
add
mov
add
hlt
addr16
adc
push
push
pop
push
gs
js
pop
lods
sub
mov
push
adc
jbe
dec
cs
out
aaa
sbb
adc
push
mov
lahf
adc
imul
cmps
jo
cmp
lahf
outs
pop
or
outs
adc
cs
push
int
imul
add
push
outs
test
jns
jg
xor
add
dec
adc
mov
cmp
fiadd
dec
int
xchg
outs
inc
gs
int3
add
test
sub
mov
mov
sbb
fs
int
mov
add
(bad)
int3
jb
pop
pop
ins
sbb
jl
loop
fsubr
xor
fldcw
int
add
cdq
es
push
popf
mov
cmps
sbb
sbb
pop
pop
jbe
add
ins
lods
popf
fld
add
jbe
movs
dec
mov
adc
sar
cli
push
jnp
cmps
push
pushf
or
xchg
push
push
gs
ins
push
sub
(bad)
push
in
cmps
dec
sub
adc
div
adc
popf
add
pushf
ins
fstp
leave
(bad)
xor
xchg
(bad)
in
stos
hlt
outs
cmps
jo
sbb
(bad)
ins
lods
popf
jb
movs
inc
adc
or
push
sub
ficom
in
stos
add
dec
sub
push
jbe
cmp
dec
leave
mov
adc
jmp
adc
leave
scas
pop
cmps
test
add
mov
add
cmps
test
jg
push
push
push
mov
fisub
out
add
add
in
fisubr
cmps
cmps
and
shr
aad
sub
add
add
imul
dec
lahf
mov
test
sub
fisubr
mov
push
scas
es
adc
out
sub
jb
sub
cdq
add
pop
test
add
sub
daa
icebp
fisubr
cmp
call
xor
leave
stos
xchg
sbb
push
test
dec
adc
adc
xchg
in
aam
mov
leave
cwde
int
out
fisubr
jmp
cmps
add
test
int
adc
gs
shl
dec
jp
cwde
int
out
fisubr
jmp
cmps
add
add
mov
(bad)
fld
jge
icebp
add
cdq
js
les
add
add
adc
test
aad
dec
and
outs
sub
push
leave
xor
sub
popf
add
sub
mov
fisubr
push
fisubr
sub
add
pop
push
test
cwde
int
out
fisubr
jmp
rol
pop
sub
imul
in
stos
hlt
cmps
push
push
sub
mov
mov
out
add
xor
sub
jne
lds
sbb
pop
dec
adc
adc
lea
mov
fisubr
stc
adc
cdq
sub
mov
pushf
jbe
dec
push
or
mov
sbb
add
shl
dec
jp
(bad)
test
add
cdq
sub
enter
fisubr
sub
add
lods
aaa
cmp
in
fisubr
shr
ficom
scas
add
not
push
mov
scas
outs
test
jns
dec
lods
pop
cmp
push
lds
add
sbb
add
clc
cmps
sub
pushf
leave
loop
out
jmp
inc
add
cmp
mov
inc
inc
and
test
in
aad
mov
cmp
repz
xor
or
out
fiadd
arpl
into
hlt
pop
sub
adc
xchg
leave
loop
pop
cmps
sub
push
scas
fld
nop
(bad)
aam
in
fiadd
jbe
sbb
push
leave
outs
sub
repnz
add
add
add
rcl
iret
adc
rcr
adc
dec
inc
es
lods
lahf
lods
pop
cmp
call
in
fidiv
sbb
add
xchg
mov
push
jmp
sub
rcr
adc
dec
inc
es
test
xor
leave
push
outs
sub
ret
ja
mov
inc
mov
test
push
add
push
jbe
push
mov
shl
dec
outs
or
mov
add
shl
dec
scas
adc
lahf
fiadd
call
push
cmp
adc
ins
adc
leave
cli
outs
sub
fld
xchg
aad
add
mov
sub
out
cmps
sub
mov
mov
cmps
fwait
adc
ret
test
gs
push
mov
stos
sub
popf
pop
mov
cmp
inc
inc
cmp
shl
add
push
test
cmp
inc
lea
mov
xchg
inc
inc
cmp
inc
inc
adc
jl
mov
inc
mov
add
mov
add
push
adc
add
dec
dec
or
popa
fsubr
mov
aam
sub
outs
cmps
and
dec
leave
push
outs
sub
add
pop
ins
adc
leave
push
outs
sub
add
cs
leave
loop
sub
fisubr
pop
bound
jno
imul
adc
adc
std
data16
add
outs
xchg
mov
xor
test
inc
push
stos
sar
gs
ins
aam
and
add
push
or
repnz
cmps
xchg
adc
jne
mov
dec
pop
inc
mov
dec
xor
adc
adc
mov
loopne
fisubr
push
add
add
in
add
lahf
adc
add
xchg
add
test
in
(bad)
ins
out
fs
pop
add
pop
ins
adc
jmp
add
push
adc
loope
out
fiadd
arpl
int3
jns
jb
xlat
adc
rol
cmps
push
fisubr
loopne
fisubr
or
adc
inc
or
js
fld
cmp
and
add
(bad)
cmc
push
lods
out
or
mov
stos
sub
gs
(bad)
clc
mov
or
pop
sbb
(bad)
js
add
cs
lods
push
mov
add
jmp
inc
adc
test
stos
cs
adc
sub
loope
add
pop
sub
imul
stos
inc
jecxz
xchg
or
pop
or
clc
cmp
mov
jp
sub
push
push
push
inc
adc
fadd
push
stos
(bad)
adc
pop
push
xchg
pop
add
cmps
clc
push
add
add
mov
mov
mov
mov
jmp
into
add
pop
sub
imul
stos
hlt
movs
retf
add
add
in
pop
lods
add
ins
and
sbb
add
lods
dec
add
xchg
pusha
jne
outs
pop
leave
push
add
inc
xchg
in
aam
lahf
add
imul
jae
add
popf
repnz
dec
inc
es
add
add
sub
add
mov
add
pop
mov
rcr
xor
dec
add
test
addr16
std
add
add
add
mov
xor
push
repnz
std
cld
add
jb
inc
inc
add
scas
add
push
push
push
(bad)
xor
add
inc
pushf
test
mov
pop
push
(bad)
pop
add
add
add
add
loop
or
pop
gs
or
(bad)
jmp
inc
add
mov
add
jb
cld
add
jb
sbb
cli
(bad)
inc
js
xor
pop
cmp
add
(bad)
outs
xchg
cmps
mov
pop
leave
mov
or
pop
inc
ins
shl
sbb
or
test
in
mov
gs
add
add
mov
add
adc
data16
add
jo
lods
dec
call
push
mov
or
mov
mov
lods
inc
jl
sub
mov
repz
pop
ret
lahf
outs
lods
dec
call
outs
sub
test
fdiv
add
push
push
frstor
shr
clc
add
add
xor
sbb
mov
(bad)
cmc
repnz
inc
out
in
cmp
mov
adc
popf
js
mov
jbe
add
mov
fisubr
popa
gs
call
push
rol
imul
add
add
test
leave
adc
retf
jl
popa
aad
push
adc
das
mov
icebp
pop
lods
dec
add
jnp
push
js
fs
sbb
fidiv
jne
(bad)
lock
stos
out
je
fwait
hlt
dec
ins
or
pop
test
jns
adc
or
cli
repz
stc
lods
gs
xor
in
sub
push
dec
data16
outs
out
add
test
adc
shr
push
lods
retf
std
int
fld
push
outs
test
or
retf
test
test
add
hlt
gs
fs
or
lods
sub
xor
push
stos
xchg
in
lahf
pop
test
or
mov
cld
cmps
lea
push
lods
cli
add
add
fisubr
ret
push
jge
xchg
out
gs
add
add
test
xor
pop
mov
adc
adc
push
mov
or
stc
pop
(bad)
rol
or
(bad)
cli
ins
sub
jo
and
das
mov
jno
cs
push
push
call
lea
lods
ret
stc
xor
mov
push
stos
ficomp
xchg
and
das
mov
jno
cs
push
dec
leave
fld
sti
mov
cwde
sbb
dec
lods
es
out
fisubr
sti
mov
cwde
sbb
dec
lods
es
out
shr
sti
mov
lods
jno
test
pop
stos
idiv
and
jl
add
add
add
mov
stos
div
daa
sub
pop
sbb
adc
cwde
out
push
lods
push
test
mov
push
cli
ins
sub
adc
lahf
outs
retf
dec
mov
push
test
lea
sub
xchg
push
movs
jmp
movs
loop
cmovno
push
mov
xchg
add
jns
jb
xchg
das
cs
out
pop
add
cdq
sub
inc
push
and
fidivr
add
add
ins
ret
test
popa
pop
(bad)
lods
shl
adc
cmp
inc
xlat
push
adc
jbe
(bad)
out
add
outs
sub
mov
pop
stos
ficomp
xor
push
lock
or
iret
call
shr
xchg
pop
les
hlt
jo
pop
xchg
add
test
adc
rcr
adc
xor
fdiv
mov
and
stos
fiadd
push
(bad)
sub
sub
test
jecxz
push
or
dec
push
or
loopne
movs
pop
jne
ins
sbb
jecxz
std
add
repz
mov
loop
pop
cmps
cmp
movs
leave
xabort
cmps
push
xor
and
bound
mov
mov
pushf
repnz
pop
inc
es
test
inc
cmp
es
adc
stos
inc
fwait
lea
mov
mov
int
jmp
or
shl
fisubr
jmp
cli
pop
add
jecxz
sbb
sar
dec
sbb
pop
int
popf
push
jnp
stos
mov
or
add
add
cld
cmps
jl
pop
pop
std
ja
or
mov
lods
aad
popf
lods
ja
popa
clc
leave
add
jmp
push
push
jns
jnp
pop
cmp
in
fidiv
pop
or
lods
dec
cmp
popa
mov
adc
add
inc
pop
cmp
jl
icebp
jne
pop
inc
ins
shl
dec
jp
in
pop
add
jnp
xchg
in
clc
call
cmps
cmp
mov
cmp
jl
push
lods
ss
add
pop
lods
test
mov
mov
dec
pop
pop
cs
leave
out
hlt
cmps
jo
clc
ror
or
push
outs
test
mov
jnp
stos
or
add
dec
push
or
int
in
fisubr
or
test
pop
popa
pop
cs
leave
add
jge
add
les
hlt
jo
pop
xchg
add
test
adc
rcr
pop
mov
inc
cmp
data16
test
cmps
jl
das
in
fisubr
mov
cs
js
clc
jle
sbb
movs
leave
out
dec
pusha
xchg
xchg
sub
sub
pop
add
cs
adc
shl
dec
push
or
les
dec
push
pusha
int
adc
xchg
jmp
adc
shr
jp
add
jo
sbb
ins
lods
(bad)
push
iret
jb
imul
out
mov
pop
test
cmp
in
fisubr
fwait
or
add
dec
stos
adc
jns
pop
lods
inc
cmp
mov
cmp
clc
rcr
add
cs
inc
cmp
mov
pop
in
in
add
jge
sbb
xchg
xchg
rcl
mov
cmps
adc
inc
fwait
repnz
pop
inc
pusha
push
jns
arpl
int3
iret
add
and
pop
int
popf
repnz
cld
add
out
push
mov
pop
in
loop
or
cs
leave
or
in
mov
jne
(bad)
leave
xor
mov
add
js
movs
jmp
dec
inc
in
push
sahf
outs
adc
inc
add
js
inc
clc
or
xor
or
jl
imul
clc
cld
add
or
imul
push
xchg
sbb
test
add
mov
cdq
pop
mov
fdiv
jp
pop
je
add
mov
out
ss
cmp
pop
pop
mov
add
jl
cmps
mov
mov
jmp
cs
inc
mov
in
push
out
stos
or
mov
or
add
hlt
jge
in
int
add
ins
and
lahf
sub
lea
scas
sbb
dec
add
add
call
push
mov
rcl
xor
dec
inc
jmp
xchg
inc
add
rol
pop
or
xchg
xchg
sub
dec
cld
pop
add
sub
shl
(bad)
adc
inc
add
add
dec
fisttp
stos
div
adc
stc
add
cmp
push
xor
or
nop
jb
sbb
jp
add
add
mov
dec
das
push
push
in
pop
pop
add
test
add
out
dec
inc
cs
pop
mov
mov
push
inc
clc
(bad)
mov
cmp
jmp
xor
pop
test
jne
pop
add
ins
cmp
(bad)
mov
xor
lahf
sbb
sub
pop
add
outs
pop
push
dec
(bad)
retf
jmp
push
push
mov
pop
and
std
add
ss
mov
inc
fld
rol
scas
sub
(bad)
mov
rcr
xor
pop
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
cmc
fiadd
lds
test
stos
lds
popf
js
bnd
adc
xchg
cmp
imul
adc
sbb
cmp
imul
cmp
imul
cmp
imul
cmp
imul
push
lea
mov
fiadd
pop
(bad)
lods
rcr
sbb
jp
dec
imul
adc
add
jae
mov
mov
cmp
imul
push
lea
jb
push
jge
leave
and
jbe
cli
jne
imul
mov
cmp
sub
xchg
xor
fwait
mov
js
arpl
es
mov
dec
or
mov
mov
arpl
ret
(bad)
lods
rcr
xchg
sub
mov
or
sbb
outs
pop
add
cs
js
hlt
push
add
arpl
aam
movs
das
fisubr
ret
(bad)
lods
rol
scas
sub
(bad)
mov
call
nop
icebp
push
mov
or
mov
mov
lea
jb
lea
mov
lea
push
lea
mov
lea
push
ins
sbb
ror
sub
cli
mov
sbb
xchg
dec
mov
test
jne
lea
sbb
push
dec
lods
imul
leave
cmp
js
lahf
call
mov
sbb
(bad)
sub
adc
mov
sub
test
xchg
aam
add
std
mov
add
test
sar
pop
lahf
lods
jle
adc
pop
add
lods
inc
loopne
add
mov
gs
add
push
lods
push
enter
in
fisubr
leave
mov
cmp
lea
js
popf
pop
pop
pop
push
xor
or
push
test
inc
in
std
add
mov
(bad)
add
add
loope
pushf
mov
xchg
adc
jne
xchg
sti
jl
push
lods
xor
push
mov
jb
addr16
push
push
rcl
push
test
sub
daa
std
fsubr
sbb
outs
lods
dec
call
push
xchg
add
ins
shl
sbb
lahf
rol
mov
mov
add
add
add
or
jge
mov
sub
or
xor
std
test
js
outs
add
push
add
movs
pop
das
jbe
ins
mov
(bad)
or
cs
jo
dec
pop
imul
in
test
sub
jns
xchg
push
push
test
sub
stc
ds
sub
popa
aad
add
lods
push
or
mov
sbb
adc
push
mov
add
mov
push
(bad)
data16
popf
sbb
test
ss
adc
(bad)
cmc
cmp
mov
add
jg
inc
adc
pop
sub
adc
cli
imul
push
cdq
repz
rol
xchg
cdq
xchg
adc
mov
mov
cld
add
sahf
add
xor
icebp
repnz
cli
cld
add
unpckhps
std
add
rcl
call
dec
mov
outs
stos
ret
inc
pop
clc
add
or
or
mov
das
fisubr
or
pop
dec
mov
outs
pop
xchg
add
clc
adc
add
sub
call
cs
dec
jmp
or
fiadd
popa
or
mov
adc
rcl
gs
shl
fild
adc
std
add
pop
ins
adc
jns
xchg
cld
add
out
push
jle
jmp
stc
pop
add
cdq
sub
push
(bad)
hlt
or
push
outs
test
jl
pop
push
repz
add
xchg
jne
or
lods
dec
scas
stos
sub
cmp
add
add
add
mov
in
lahf
add
add
xchg
add
add
inc
out
add
cmps
add
add
inc
or
test
add
(bad)
cmp
add
add
(bad)
ins
fsubr
lahf
add
jmp
adc
add
push
lods
dec
xor
push
stos
mov
add
push
scas
bound
ins
nop
adc
ins
ror
ficomp
add
mov
jge
push
out
adc
ins
sub
or
mov
add
jl
adc
gs
shl
scas
adc
icebp
inc
js
pop
imul
test
sub
aam
add
fmul
push
mov
gs
pop
jp
movs
retf
add
add
ds
add
das
lods
jle
dec
aaa
jo
jae
ins
push
dec
test
fisttp
add
inc
icebp
enter
add
jo
adc
adc
adc
je
jbe
add
jbe
xor
stos
push
jo
and
test
push
adc
jb
push
inc
in
outs
mov
add
test
pop
leave
push
add
inc
xchg
in
aam
add
jmp
add
pop
and
std
add
add
in
repnz
cmp
add
push
call
aas
hlt
or
push
push
frstor
add
xchg
enter
pop
jmp
popf
add
jb
mov
adc
push
push
push
inc
fs
add
pop
push
xchg
add
push
jp
hlt
jo
arpl
push
push
inc
fs
add
pop
je
add
js
push
lods
sub
ins
push
popf
sbb
dec
add
pop
push
push
push
inc
fs
add
pop
dec
xchg
add
dec
sub
cdq
dec
dec
inc
mov
jmp
or
add
push
pop
dec
imul
add
sahf
lods
jbe
adc
adc
push
pop
pop
(bad)
cmp
add
push
adc
lods
hlt
mov
add
add
gs
push
cmp
ins
add
repnz
in
fisubr
add
jnp
mov
or
cmp
jl
jo
lods
dec
mov
pop
sbb
std
add
adc
jb
pop
inc
add
pop
jmp
xchg
add
jb
mov
adc
push
push
push
inc
fs
add
pop
dec
xchg
add
dec
sub
aad
add
lahf
call
mov
fmul
jbe
push
mov
push
inc
fimul
stos
push
jp
ds
add
add
cmp
add
push
adc
inc
pushf
jo
lods
ss
add
lahf
or
out
push
mov
or
out
inc
lods
push
jl
leave
push
cmp
adc
(bad)
sub
fisubr
jnp
mov
jmp
adc
pop
test
mov
hlt
ins
aas
xchg
test
cmc
push
mov
or
loope
lock
mov
push
addr16
add
add
mov
or
lahf
mov
add
ret
adc
in
fisubr
and
test
mov
adc
int
ret
add
sbb
lahf
outs
pop
push
dec
sub
xor
add
inc
fwait
push
mov
or
out
inc
popf
push
in
sbb
add
js
push
lods
sub
ins
add
repnz
les
outs
pop
push
xchg
lea
add
lahf
call
hlt
call
cmp
stos
push
jbe
push
xchg
aad
add
lahf
adc
add
mov
mov
adc
outs
sub
ins
add
repnz
dec
push
inc
add
(bad)
adc
push
pop
pop
(bad)
cmp
add
push
adc
lods
hlt
mov
add
add
gs
push
cmp
movs
hlt
or
sub
fcomip
or
or
div
push
lods
sahf
or
push
mov
add
add
add
adc
sbb
imul
add
sbb
ja
add
add
add
iret
(bad)
fldenv
push
jp
pop
xlat
in
std
add
jmp
push
pop
add
lods
mov
popf
retf
sbb
dec
adc
sub
or
add
cmp
test
cmp
cmp
jo
sub
add
das
sbb
adc
mov
inc
adc
loop
cmps
ja
xchg
cmp
aam
shl
outs
ja
call
dec
test
in
push
scas
jbe
(bad)
xor
add
push
mov
test
and
in
xchg
sbb
(bad)
jmp
ret
add
cdq
sub
(bad)
pop
add
adc
push
mov
add
in
lods
add
jmp
add
cli
pop
pop
pop
add
adc
pop
xchg
xor
xchg
add
mov
mov
add
push
jb
push
inc
mov
xchg
jecxz
ret
mov
jmp
cwde
add
mov
push
jl
jmp
int3
add
push
daa
lods
jle
adc
sbb
push
lods
dec
call
lods
inc
add
push
jbe
pop
das
jne
fisubr
repnz
adc
add
cld
add
lea
xlat
adc
out
inc
xchg
push
bound
add
or
lahf
outs
lods
mov
add
lods
inc
add
add
adc
pop
adc
add
push
lods
mov
add
lods
inc
add
add
adc
xchg
test
in
mov
sbb
jmp
(bad)
shl
sbb
dec
out
inc
push
pop
add
clc
fnstsw
popf
js
cdq
jmp
loopne
in
jle
sub
(bad)
mov
sub
inc
add
test
cli
push
push
mov
and
test
jne
adc
jo
fisubr
push
inc
inc
add
or
mov
pop
call
add
mov
mov
mov
sub
mov
shr
(bad)
popf
xor
add
mov
retf
add
stos
push
jo
dec
sbb
dec
sbb
(bad)
jg
test
mov
and
adc
rcl
(bad)
sub
inc
add
test
push
hlt
or
add
jbe
push
in
(bad)
add
mov
cmps
ret
jne
push
rol
adc
retf
and
add
inc
add
and
inc
add
inc
inc
add
sub
and
push
jne
add
push
(bad)
mov
add
pop
adc
add
hlt
ret
add
call
push
pop
ins
adc
lea
fcom
pop
jmp
pop
add
or
add
add
adc
outs
add
inc
(bad)
inc
arpl
es
or
add
cdq
sub
push
add
add
outs
test
push
(bad)
inc
fs
jb
(bad)
mov
inc
push
mov
sub
add
pop
push
cs
xor
dec
xchg
rol
add
add
jo
imul
pop
test
in
push
cmps
(bad)
ins
sbb
push
(bad)
cmp
inc
add
inc
js
hlt
lods
xlat
rol
sub
mov
xchg
adc
stos
push
outs
adc
inc
jo
pop
sub
cs
inc
adc
xchg
pop
mov
mov
inc
xchg
jmp
push
inc
add
xchg
jb
(bad)
mov
mov
cmp
push
push
(bad)
xchg
sub
push
xchg
cmp
outs
adc
cmp
(bad)
movs
xlat
rol
adc
xchg
jmp
sub
add
inc
inc
add
neg
adc
jp
enter
push
inc
add
jge
jb
mov
adc
int
push
clc
adc
ret
add
add
push
adc
cmc
pop
stos
ficom
mov
add
dec
sub
cmp
add
cmp
shl
sbb
fld
push
movs
ret
xchg
inc
in
popf
js
push
lods
sub
xchg
fld
add
add
(bad)
ins
mov
xor
add
outs
pop
push
(bad)
fld
add
adc
add
cmp
(bad)
sbb
inc
add
inc
add
push
loop
add
push
xchg
mov
mov
add
js
pop
lods
sub
push
add
inc
or
out
test
xor
cmc
inc
push
dec
xchg
rol
add
adc
or
push
inc
push
xor
add
jmp
adc
push
(bad)
inc
fs
sbb
dec
xchg
int
add
outs
dec
adc
push
in
push
cmc
inc
push
dec
push
add
add
xchg
sub
inc
sbb
iret
jo
imul
int
add
mov
add
lahf
call
or
add
xchg
fcomi
mov
ret
jne
push
rol
adc
add
pop
ins
adc
leave
push
add
add
cmp
mov
add
test
cli
inc
add
mov
add
adc
push
mov
fs
cmc
inc
push
dec
push
add
add
pop
xor
jns
sub
jb
add
pop
ins
adc
jmp
or
add
cdq
sub
(bad)
fld
add
adc
js
pop
clc
daa
repnz
add
add
lahf
pop
mov
xor
cmc
inc
push
(bad)
jmp
adc
add
neg
sub
or
add
cdq
sub
push
add
add
(bad)
sbb
add
ja
sub
(bad)
movs
pop
rol
popf
repnz
jnp
fisubr
xchg
xchg
inc
or
data16
inc
fs
adc
push
adc
test
cmp
inc
add
sbb
lods
ss
inc
add
loopne
cld
add
push
fisubr
repnz
push
sub
jmp
adc
gs
shl
ja
add
jmp
add
pop
push
out
add
ret
push
(bad)
fld
add
add
stos
hlt
movs
add
add
popf
push
hlt
push
add
or
xchg
add
js
xchg
inc
mov
fcmovb
inc
(bad)
sub
inc
add
add
inc
xchg
in
fcomp
ret
popf
sbb
(bad)
xchg
in
fcmovbe
add
jb
sahf
sbb
(bad)
xchg
mov
inc
add
inc
mov
or
add
daa
push
cld
add
out
push
mov
clc
aaa
dec
call
push
cmp
(bad)
inc
in
inc
in
or
cmp
inc
add
mov
push
dec
inc
(bad)
rol
add
add
adc
ins
ror
(bad)
mov
rol
adc
(bad)
jmp
stos
push
pop
pop
push
xchg
or
lods
ss
inc
add
outs
adc
add
out
push
hlt
push
add
clc
jb
or
push
outs
test
cmp
(bad)
inc
fisubr
repnz
push
cld
add
push
xchg
mov
(bad)
rol
add
movs
out
mov
in
inc
add
rol
add
add
bound
sub
inc
and
test
mov
cmp
add
out
fiadd
mov
inc
mov
sbb
fisubr
pusha
jo
mov
cmps
cmp
(bad)
jmp
lods
mov
rol
mov
lods
push
clc
inc
add
hlt
lods
mov
add
adc
push
lea
in
pop
adc
std
add
out
add
sub
push
pop
add
les
inc
add
push
ins
sub
adc
sub
lahf
outs
inc
and
test
ret
ins
rcr
add
clc
retf
stc
or
ins
adc
cmp
push
cmps
mov
add
hlt
lods
out
add
sub
popa
add
test
add
push
mov
sub
push
add
pop
ins
adc
jmp
or
add
cdq
sub
(bad)
mov
add
sub
mov
pusha
jo
test
ret
or
adc
sbb
lods
push
xchg
inc
add
hlt
lods
out
add
sub
add
test
push
pop
pop
or
clc
inc
mov
clc
inc
add
pop
or
add
out
push
mov
or
idiv
add
add
inc
add
inc
add
pop
push
mov
add
(bad)
hlt
outs
pop
arpl
push
(bad)
inc
fs
add
pop
lods
mov
add
(bad)
mov
in
inc
add
movs
clc
pop
clc
or
push
xchg
fld
add
add
cmps
pop
das
das
pop
jb
shr
jb
inc
inc
adc
push
cmc
inc
push
(bad)
jmp
pop
pop
add
mov
inc
adc
dec
sbb
call
sub
inc
add
add
inc
xchg
in
aam
push
push
rol
pop
push
push
(bad)
fisubr
repnz
add
pusha
lahf
xchg
fcomi
mov
mov
push
rol
adc
ins
adc
leave
push
add
add
cmp
mov
add
xor
inc
add
add
push
das
jb
sub
(bad)
lods
mov
add
adc
ins
popa
push
stos
(bad)
movs
xlat
rol
popf
push
in
ret
add
jmp
stos
add
pop
sub
or
rol
add
add
sahf
sbb
(bad)
mov
add
xor
inc
inc
push
dec
xchg
rol
add
add
mov
add
sub
loop
add
in
inc
add
shr
jb
or
adc
sahf
stc
cmp
in
fisubr
xchg
lods
push
or
add
add
cld
add
push
add
inc
add
inc
add
lods
(bad)
movs
in
nop
add
test
jb
(bad)
mov
inc
add
movs
clc
mov
or
mov
add
test
gs
dec
test
mov
jl
cmp
in
stos
hlt
lods
mov
add
adc
(bad)
sub
inc
add
rol
add
add
sub
pop
add
test
ins
adc
or
sub
jmp
inc
add
test
sub
xchg
and
adc
push
jno
add
enter
jbe
test
cmp
in
fisubr
xchg
lods
push
or
add
pop
or
add
cmp
sbb
inc
add
inc
add
lods
(bad)
cmps
in
or
popa
ins
add
jb
inc
call
call
push
or
(bad)
jmp
jecxz
add
popf
lods
push
or
add
lods
(bad)
nop
in
jb
or
popa
js
ret
push
(bad)
mov
add
pop
sbb
std
add
stos
hlt
movs
add
add
popf
push
hlt
push
add
or
xchg
add
cmps
mov
jmp
add
add
out
add
adc
gs
shl
ja
add
jmp
add
pop
out
std
add
shr
add
add
popf
repnz
and
icebp
push
mov
push
fs
sbb
call
ins
add
repnz
test
or
jmp
adc
add
ret
ins
rol
cmp
adc
inc
xchg
stc
and
inc
push
(bad)
jmp
loop
add
in
xor
add
add
xor
sbb
dec
push
add
add
pop
pusha
lahf
xchg
fcomi
lods
mov
add
jne
push
rol
jmp
add
add
bound
sub
in
fisubr
cmp
add
ret
hlt
lods
mov
add
adc
add
push
cmps
mov
add
hlt
lods
out
add
sub
pop
add
test
add
push
mov
sub
repnz
add
pop
pop
(bad)
xor
inc
add
inc
mov
ret
sub
in
add
cmps
mov
ficom
add
fcmovb
inc
(bad)
sub
inc
add
lods
add
pop
sub
push
push
popa
mov
inc
add
mov
jmp
lods
add
pop
sub
push
push
cmp
leave
push
add
add
ins
sbb
lods
mov
add
adc
lea
inc
add
inc
add
hlt
movs
xlat
rol
sub
and
xchg
or
mov
xor
add
lods
(bad)
mov
pop
and
add
add
jns
cdq
inc
(bad)
rol
add
fld
add
add
xlat
rol
sub
in
add
in
inc
add
shr
outs
sub
dec
out
mov
and
push
pop
ins
adc
jmp
in
add
in
push
inc
add
shl
mov
das
(bad)
add
jmp
icebp
add
in
push
inc
add
push
mov
mov
in
mov
je
rcl
xor
xor
push
add
push
push
(bad)
in
cmp
dec
(bad)
and
cmp
fisubr
repnz
aad
add
out
push
mov
clc
(bad)
daa
or
push
outs
test
cmp
inc
in
pop
and
fistp
cdq
sub
mov
cmps
ret
sub
in
add
(bad)
fidivr
add
add
pop
loope
adc
leave
inc
push
push
push
xchg
pop
inc
ins
shl
ja
add
adc
and
push
lods
dec
mov
jb
ja
add
xor
or
dec
push
add
add
pop
pusha
jbe
test
jmp
add
pop
cld
(bad)
add
push
(bad)
or
add
std
add
inc
add
clc
adc
or
push
imul
add
sahf
lods
mov
xlat
fdivrp
add
jmp
jmp
add
add
jecxz
add
pop
push
push
(bad)
inc
ins
or
ficomp
add
jae
enter
in
lods
sub
push
and
push
pop
ins
adc
jmp
in
add
in
inc
add
stc
imul
clc
loopne
push
inc
aam
into
cmps
sbb
push
lahf
add
dec
inc
push
outs
sub
pushf
xchg
test
outs
sub
call
adc
add
sbb
cmps
sbb
cmc
pop
mov
sub
mov
add
out
icebp
inc
rcr
fild
push
stos
data16
test
adc
jge
repnz
sbb
adc
xchg
mov
adc
shr
jnp
add
stc
shl
call
in
ret
add
add
lods
pop
inc
out
add
jp
push
adc
js
pop
mov
pop
outs
sub
ficom
or
inc
push
stos
rol
mov
adc
mov
iret
mov
adc
inc
pop
xor
xor
in
jge
repnz
add
add
add
xchg
jne
add
fadd
inc
pop
add
repnz
add
mov
mov
clc
adc
add
or
push
push
mov
cs
adc
in
add
movs
add
add
push
cwde
test
fidivr
fild
adc
jns
lahf
lods
or
hlt
jne
in
and
or
jge
add
sub
cmp
ins
rcr
fisubr
repnz
add
or
jo
pop
push
xchg
or
in
inc
mov
movs
adc
and
adc
jmp
loope
add
cdq
sub
dec
push
pop
mov
std
add
ror
add
jl
adc
lea
shl
lahf
lea
ret
sub
daa
or
je
adc
(bad)
jmp
mov
push
frstor
test
xchg
xor
jmp
add
out
push
xor
add
call
push
mov
rcl
loope
pop
push
jmp
fs
mov
sahf
outs
adc
daa
add
js
ja
fmul
mov
xor
cmps
retf
mov
les
inc
cld
push
push
inc
pop
les
ret
or
dec
adc
fisubr
jbe
adc
add
retf
xor
mov
shl
xor
mov
mov
lahf
jbe
add
jbe
add
movs
call
xchg
mov
dec
mov
sub
pop
or
ja
or
test
push
mov
shl
pop
mov
dec
loope
sub
fisubr
repnz
mov
dec
xor
lea
push
inc
sub
inc
enter
sbb
es
leave
lods
(bad)
jmp
fstp
jb
sbb
sbb
inc
js
mov
lock
aad
es
sbb
(bad)
in
stos
pop
lods
in
add
repnz
add
lea
push
lods
ror
cmp
ss
mov
js
pop
inc
les
sbb
mov
inc
xchg
add
xor
inc
repnz
add
mov
adc
ins
adc
jmp
loope
add
xchg
mov
add
push
add
pop
cmps
cli
add
push
stos
push
test
les
lods
sub
adc
add
pop
ins
adc
cld
add
inc
add
jno
jb
(bad)
pop
mov
adc
add
pop
ins
adc
cld
add
lea
lea
inc
out
icebp
inc
stos
mov
loopne
push
mov
or
ins
adc
clc
jne
in
xchg
or
mov
mov
movs
push
jmp
sahf
add
lods
cli
nop
retf
js
xor
xchg
cmp
stos
fiadd
and
add
stos
call
xchg
inc
adc
clc
cmp
call
sbb
cmp
stos
fiadd
and
add
stos
call
xchg
inc
adc
clc
call
xchg
push
add
das
cmp
push
sub
pop
es
leave
lods
(bad)
jmp
in
mov
pop
nop
adc
int3
sbb
and
add
das
cmp
push
sub
pop
es
leave
lods
(bad)
jmp
in
mov
or
cmp
sbb
and
add
mov
in
jnp
add
pop
dec
mov
outs
pop
jmp
movs
add
jl
pop
aam
retf
xchg
retf
sub
js
ret
jmp
loope
add
sub
push
adc
pop
add
stos
bound
lea
sbb
imul
icebp
ins
xchg
mov
js
add
(bad)
jmp
sbb
jo
add
pop
outs
imul
aam
add
add
mov
stos
inc
lahf
mov
mov
lods
sub
aam
loope
(bad)
ja
mov
mov
jmp
loopne
jl
or
mov
jp
pop
in
stos
add
push
stos
shr
popf
js
mov
ins
add
pop
jae
add
push
stos
shr
hlt
sahf
add
add
add
lea
adc
xchg
outs
mov
pop
dec
xchg
inc
push
jp
inc
jecxz
xchg
pop
mov
in
dec
sbb
add
ins
sbb
fisubr
add
pop
les
add
aad
stos
fisubr
clc
inc
push
or
add
cdq
add
or
int
call
mov
gs
clc
mov
fcomp
push
push
xchg
pop
stos
sub
inc
loope
cmps
sbb
push
pop
pop
(bad)
jl
jne
add
push
jmp
pop
jmp
lods
jle
dec
aaa
pop
leave
das
lods
jle
dec
lahf
pop
push
lods
out
push
outs
mov
stos
sbb
lock
jb
push
scas
adc
jge
push
movs
out
add
in
stos
(bad)
jmp
push
jne
in
retf
add
xor
xor
ins
lock
jo
pop
imul
add
in
stos
(bad)
jmp
cli
addr16
cmp
cs
add
dec
stos
pop
and
add
dec
sub
cdq
dec
push
add
mov
fcom
(bad)
std
or
push
outs
test
jp
neg
in
dec
sbb
fld
stos
ficomp
add
addr16
les
push
pop
push
push
dec
mov
add
mov
shr
ficom
clc
jmp
fcomi
jne
mov
jnp
add
ins
cmc
leave
stos
fiadd
jne
in
xor
adc
pop
add
add
add
jge
push
lods
push
mov
push
xor
add
pop
and
call
push
mov
repnz
adc
cwde
rol
inc
or
sbb
jo
ret
ins
rcl
lea
add
pop
or
fcom
je
adc
pop
sub
add
mov
repnz
add
lahf
add
enter
rcr
mov
add
add
sub
pop
pop
add
stos
(bad)
sbb
jbe
push
jl
jmp
fld
add
cdq
sub
xchg
dec
cs
pop
outs
test
jp
pop
xchg
xlat
std
add
rcl
pop
xchg
inc
seta
test
dec
inc
fild
adc
test
add
and
call
ins
add
pop
push
mov
pop
xchg
test
add
stos
push
jo
xchg
jne
stos
ficomp
clc
sbb
or
add
jno
add
or
add
mov
jne
in
int
or
jl
adc
imul
add
ja
retf
adc
xor
sub
sahf
outs
adc
add
js
jae
pop
or
lea
push
pop
or
xor
jmp
mov
jge
cmp
mov
repnz
cld
add
out
push
jl
jmp
(bad)
pop
add
xor
inc
adc
adc
pop
inc
jecxz
add
cmp
clc
gs
inc
jmp
sub
jl
gs
ins
add
pop
test
mov
retf
mov
lods
ja
js
cli
sbb
jb
retf
pop
pop
ins
imul
xchg
pop
js
retf
inc
enter
(bad)
sub
cmp
(bad)
jmp
xchg
test
out
hlt
push
neg
or
add
add
lods
mov
jg
cli
sub
dec
dec
mov
inc
inc
ins
rcr
in
jge
shr
xchg
in
inc
inc
add
ror
call
or
add
add
pop
jp
test
mov
mov
add
adc
retf
pop
push
push
xor
ret
lods
sub
ins
add
repnz
or
jo
push
push
xchg
or
clc
inc
pushf
jo
lods
jbe
adc
pop
add
push
ins
adc
leave
push
add
add
lea
lahf
sbb
enter
lods
cdq
sub
xchg
clc
outs
sub
call
test
jp
pop
ja
std
add
dec
pop
gs
inc
seta
add
xlat
add
mov
sti
int
push
lods
sub
mov
sub
out
leave
das
xchg
xor
ins
shr
inc
scas
dec
adc
shr
(bad)
cmp
mov
dec
scas
dec
adc
out
sti
push
push
popa
mov
fidiv
ficom
shl
fistp
daa
or
gs
inc
lock
mov
call
pop
jmp
stc
add
push
daa
mov
mov
lahf
pop
pop
imul
add
jnp
push
in
xor
add
lods
lods
(bad)
sub
rcl
pop
add
fild
adc
dec
push
test
xor
dec
enter
add
mov
add
int3
leave
push
dec
and
stos
pop
ss
std
add
(bad)
cdq
call
leave
push
stos
fisubr
ficom
add
push
ins
adc
cld
add
xchg
add
jl
adc
add
lahf
jmp
dec
xchg
mov
lock
clc
in
or
jmp
dec
xor
ja
jno
int
lods
sub
pop
(bad)
pop
add
jl
imul
in
repnz
icebp
cld
add
or
aad
push
adc
add
xchg
test
sahf
outs
xchg
adc
shr
stos
mov
rcl
mov
ins
stos
fiadd
or
outs
pop
pop
imul
(bad)
fs
leave
cli
dec
sub
fisubr
jbe
xor
leave
outs
sub
ficomp
or
inc
lahf
add
ret
xchg
sub
ret
add
sub
rol
sbb
pop
cmps
sub
dec
leave
sub
sbb
shr
push
jecxz
iret
adc
ror
adc
shl
dec
adc
dec
(bad)
adc
imul
cli
cmps
sub
rcr
fisubr
add
test
in
push
jmp
xlat
adc
rcr
adc
rcl
fisubr
sub
fisubr
mov
fld
add
int
in
fisubr
or
int
jb
jo
or
fdivr
dec
retf
test
inc
and
rcr
push
test
movs
call
shl
dec
mov
adc
fdivr
dec
retf
test
mov
cmp
pop
mov
cmp
jg
push
jmp
and
shl
dec
inc
push
(bad)
jne
int
mov
fisubr
cwde
aas
shr
(bad)
gs
cmp
jp
cli
cmps
cmp
xchg
leave
mov
xor
int
js
dec
dec
push
fs
leave
jbe
movs
add
push
std
lods
hlt
cmps
cmps
lods
test
cmps
inc
pop
or
add
adc
clc
in
or
pop
fs
leave
outs
sub
rcl
adc
push
push
(bad)
ins
lods
jge
sub
shr
ficom
div
std
add
mov
call
lods
sub
cwde
int
int
outs
and
add
cdq
sub
mov
mov
add
shl
dec
mov
adc
clc
xlat
adc
test
jns
cmp
mov
jo
lods
ja
xchg
clc
fist
test
cmp
xor
dec
sub
add
mov
popa
sahf
sbb
adc
xchg
add
(bad)
in
sub
out
push
mov
shl
dec
cli
mov
adc
dec
int
in
fisubr
les
dec
ret
test
dec
int
jb
dec
ret
test
add
gs
shl
dec
jmp
or
or
int
js
dec
or
xlat
outs
sub
mov
leave
shr
leave
xor
xchg
icebp
add
jmp
mov
xchg
mov
cmp
pop
push
mov
or
in
fisubr
fsubr
dec
sbb
call
cmp
or
pop
dec
test
add
(bad)
hlt
movs
xlat
add
add
add
add
fisub
sub
fiadd
or
adc
cmps
add
ss
add
push
addr16
(bad)
sbb
add
clc
mov
adc
(bad)
stc
pop
add
mov
add
add
rol
add
adc
int
push
pop
push
xchg
popa
add
test
sub
add
scas
inc
inc
adc
push
push
add
lea
fst
outs
hlt
std
add
add
add
jmp
test
pop
sub
add
lea
(bad)
mov
add
add
add
jb
inc
add
add
dec
xor
push
pop
pop
(bad)
cmp
add
inc
mov
add
add
gs
push
cmp
add
adc
pop
add
cmp
inc
in
jne
or
add
jb
rol
add
adc
push
xchg
sbb
add
xchg
outs
mov
lahf
add
adc
mov
or
add
cdq
jbe
sbb
dec
add
jecxz
add
sahf
lods
movs
add
add
outs
in
cld
add
jb
rol
add
xor
cld
add
cmp
push
(bad)
push
add
add
add
xchg
movs
lds
add
adc
push
inc
jo
pop
xchg
add
ins
add
push
mov
lahf
adc
gs
push
cmp
inc
in
dec
adc
add
push
add
sbb
mov
out
pop
push
jb
add
jecxz
add
add
das
cmp
mov
add
adc
push
xchg
popa
add
test
xor
jge
pop
add
scas
inc
inc
adc
push
push
add
lea
(bad)
pop
(bad)
repnz
add
stos
push
je
push
(bad)
sub
add
test
ins
add
lea
aam
mov
add
add
add
jb
fild
add
adc
xor
push
pop
pop
(bad)
cmp
add
inc
mov
add
add
gs
push
cmp
or
push
push
mov
pop
(bad)
in
fst
or
pop
push
jb
add
loop
add
add
add
jg
inc
adc
or
adc
and
add
stos
(bad)
and
add
lahf
add
or
fld
add
mov
add
add
add
gs
push
cmp
add
add
cmp
add
cmp
das
add
add
fs
pop
add
jmp
ror
and
stc
cld
add
or
jo
call
cmp
add
push
and
push
pop
pop
(bad)
cmp
add
inc
mov
add
add
lea
add
add
xor
sub
sahf
outs
adc
add
js
ja
fmul
xor
ret
fldcw
fisubr
or
push
lahf
daa
xchg
test
shl
add
sub
add
cs
push
cmps
shr
repnz
inc
pusha
inc
in
jmp
sbb
push
test
mov
in
fld
add
jae
inc
adc
adc
pop
out
adc
jb
xor
gs
lahf
add
pop
call
add
popa
add
add
jbe
jmp
add
pop
jp
std
add
ret
push
(bad)
sub
add
push
pop
leave
push
add
add
gs
push
stos
ss
call
retf
inc
mov
(bad)
push
inc
fimul
stos
push
imul
(bad)
inc
mov
mov
mov
add
pop
ins
adc
jmp
out
pop
add
cdq
sub
xchg
clc
fist
or
push
outs
test
cmp
fs
fstp
add
imul
push
adc
pop
push
push
stos
jle
mov
stos
and
lea
in
in
or
jl
adc
lea
gs
std
add
pop
push
adc
mov
add
(bad)
cmc
mov
inc
xchg
pop
sahf
outs
adc
sbb
add
jae
fmul
call
sbb
inc
js
lahf
ror
imul
cmps
add
adc
inc
js
repnz
inc
push
(bad)
mov
add
jp
cli
jne
ins
ror
ficom
xchg
int
add
icebp
dec
push
xor
inc
stos
push
xlat
pop
pop
cs
stos
clc
pop
(bad)
in
jbe
or
jl
adc
lea
add
add
pop
push
adc
add
xchg
cld
cmp
outs
xchg
adc
shr
stos
lock
unpcklps
data16
test
cmps
cmps
pushf
test
sub
mov
xor
add
js
(bad)
lods
sub
mov
mov
dec
mov
or
or
pop
push
test
cmp
in
fidiv
sub
inc
mov
cmp
in
ficom
mov
gs
lods
sub
mov
test
ins
in
stos
(bad)
jbe
je
dec
leave
outs
sub
add
xchg
mov
ins
shl
dec
leavew
cwde
int
in
fisubr
jmp
lock
add
stos
inc
jnp
xor
leave
mov
lods
inc
cmp
outs
cmps
sbb
dec
leave
outs
sub
add
stos
(bad)
adc
out
repnz
repnz
add
out
push
jnp
addr16
jne
or
cmp
sub
cwde
int
in
fisubr
jmp
icebp
pop
add
stos
inc
lahf
sub
arpl
sub
or
enter
adc
jmp
cdq
clc
cs
or
or
mov
adc
(bad)
jge
icebp
repnz
cld
add
jl
(bad)
pop
sahf
jmp
add
jmp
test
add
xor
add
cs
leave
bound
cmp
in
fisubr
pop
bound
or
test
sub
iret
add
movs
cmc
pop
mov
stos
(bad)
mov
add
add
jmp
sbb
inc
rol
push
push
add
shr
pop
lahf
mov
add
out
add
stos
(bad)
and
rcr
xchg
or
add
icebp
pop
add
in
add
add
dec
hlt
mov
jb
not
jle
add
mov
lods
add
add
in
mov
stos
push
hlt
mov
add
add
das
add
add
cmps
fiadd
push
mov
enter
push
lods
mov
xchg
inc
add
inc
inc
add
adc
add
cmps
ret
adc
adc
push
jl
jmp
inc
pop
add
std
inc
jbe
jl
fwait
jo
adc
add
mov
add
jge
jb
pop
adc
pop
inc
pop
jbe
mov
sub
xor
adc
jp
lea
rcr
add
lods
dec
add
xor
pop
jb
ds
adc
or
lock
shl
out
push
push
inc
out
fisubr
pop
(bad)
repz
jnp
add
shl
push
push
clc
xchg
sbb
jmp
push
push
cmp
add
add
repnz
call
push
fidiv
fist
test
or
adc
fsin
add
pop
pop
push
xchg
in
add
test
xor
dec
adc
cs
(bad)
repz
push
movs
jmp
add
pop
dec
mov
(bad)
cdq
dec
dec
cmp
dec
adc
inc
gs
pop
bnd
cld
add
out
add
clc
nop
jmp
push
push
cmp
add
add
repnz
in
add
lods
jbe
adc
add
lods
inc
in
push
push
push
inc
ins
inc
les
or
lahf
adc
in
inc
jo
jae
enter
in
fisubr
dec
les
mov
add
test
jae
rol
stos
(bad)
mov
add
add
(bad)
ins
and
add
js
(bad)
lods
sub
push
add
stos
dec
les
add
xchg
in
aam
push
xor
shr
fisubr
dec
les
xchg
mov
add
xchg
in
aam
lahf
add
adc
mov
dec
xchg
mov
ins
rcl
fisubr
pop
das
jbe
mov
lahf
mov
ins
cmp
(bad)
cmp
add
inc
sti
lahf
mov
ins
cmp
(bad)
cmp
add
push
adc
fdivr
add
lahf
mov
ins
cmp
(bad)
cmp
add
inc
sti
lahf
mov
ins
cmp
(bad)
cmp
add
push
adc
fdivr
add
add
adc
stos
dec
jno
nop
xchg
mov
jo
pop
push
xchg
clc
addr16
or
add
sar
movs
jecxz
add
(bad)
sub
(bad)
add
add
add
stos
(bad)
jne
in
xchg
or
shl
xchg
add
lds
jmp
mov
add
stos
(bad)
adc
js
pop
imul
outs
pop
push
(bad)
xchg
add
mov
sub
pusha
sub
in
pop
add
test
adc
gs
fisubr
push
aas
ins
shl
fist
nop
xlat
inc
jb
pop
pop
push
xchg
in
add
test
sbb
sbb
sub
push
(bad)
repz
push
sub
add
lods
(bad)
xchg
in
add
(bad)
fs
xchg
add
les
jmp
push
stos
(bad)
adc
lods
jbe
jmp
add
pop
cmp
std
add
add
add
dec
sbb
call
xor
fld
out
add
mov
add
imul
cld
add
jb
fist
adc
add
xchg
outs
sub
xchg
std
add
xchg
mov
or
add
sub
add
xor
jb
ds
adc
jge
sbb
(bad)
cdq
in
ins
or
add
xor
fld
lds
jmp
adc
(bad)
adc
pop
push
xchg
xchg
add
mov
push
mov
push
pushf
push
xor
add
(bad)
cmp
add
push
mov
mov
imul
add
xchg
and
fld
out
add
outs
pop
push
xchg
or
(bad)
inc
ins
xchg
sub
ficom
push
jp
pop
ret
add
sub
add
(bad)
ds
adc
or
in
inc
jo
jae
arpl
ins
rcr
add
mov
jmp
adc
add
sub
push
(bad)
repz
push
ins
add
add
lods
(bad)
pushf
in
xor
outs
add
dec
mov
add
repnz
(bad)
cld
add
mov
add
clc
mov
or
ins
adc
push
cmp
push
inc
in
lds
or
cmp
add
inc
xchg
fisub
lea
in
pop
pop
(bad)
js
(bad)
lods
sub
mov
sbb
std
add
sub
add
(bad)
ds
adc
lea
out
ins
xor
in
or
add
mov
(bad)
(bad)
lods
sub
sub
add
push
out
add
ins
xor
xchg
std
add
(bad)
cs
test
mov
mov
ret
scas
add
test
ret
adc
xchg
stos
aas
ins
shl
fist
and
inc
jb
pop
pop
push
xchg
in
add
test
sub
fidiv
and
add
stos
(bad)
adc
pop
push
xchg
popf
add
test
mov
popf
repnz
cld
add
or
test
ins
add
fisubr
add
shl
fisubr
or
xor
xchg
add
mov
add
sub
enter
in
fisubr
dec
les
cmp
repz
leave
push
push
shr
jnp
or
sti
stos
dec
outs
sbb
jg
push
add
jbe
test
add
adc
or
shr
ja
sub
add
test
inc
add
pop
sub
les
adc
or
xor
sub
(bad)
jmp
jmp
mov
jns
lock
add
add
outs
pop
push
xchg
clc
sbb
(bad)
clc
push
cmp
out
fisubr
xchg
xchg
mov
add
jmp
push
push
cmp
push
inc
in
test
or
jge
outs
jg
jg
add
jbe
test
add
adc
fldcw
fisubr
stc
push
cmp
xor
(bad)
shl
add
clc
scas
sbb
inc
jg
sar
movs
out
add
(bad)
sub
(bad)
add
add
push
add
jmp
les
jmp
call
ficom
sub
add
push
xchg
cmp
rcr
in
(bad)
jmp
mov
stos
ficomp
add
sub
mov
add
stos
(bad)
adc
js
pop
fisttp
jo
pop
push
(bad)
jne
add
mul
in
in
inc
or
cmp
add
push
adc
sar
xchg
fisub
lea
in
pop
mov
outs
das
pop
aad
shr
jb
cmp
pop
repnz
cld
add
xchg
add
add
fs
add
dec
sub
xchg
mov
pop
xchg
inc
add
stos
push
dec
adc
clc
inc
jo
jae
or
pop
mov
mov
add
sub
mov
cs
(bad)
sub
add
push
xchg
pop
aas
ins
rcr
in
push
in
or
add
aaa
fisubr
repnz
cld
add
jb
mov
add
adc
inc
add
push
push
(bad)
cmp
add
push
adc
ret
pushf
test
add
adc
imul
add
or
pop
push
xchg
clc
daa
inc
or
enter
in
fisubr
or
shl
sbb
add
ret
xchg
inc
in
shl
adc
add
adc
add
cmp
lahf
outs
lods
jbe
jmp
add
add
sub
add
(bad)
ds
adc
or
clc
inc
jo
jae
outs
aas
ins
rcr
add
mov
jmp
or
stos
(bad)
adc
inc
fsubr
add
adc
pop
pusha
jbe
test
add
jne
(bad)
adc
inc
xchg
fisub
add
inc
sar
(bad)
shl
push
add
add
xchg
test
in
aad
inc
lods
sub
xchg
clc
loopne
or
push
push
fldenv
add
xchg
dec
rcr
mov
in
add
xchg
in
aam
jbe
and
add
ins
add
bnd
cld
add
or
test
adc
mov
add
jmp
add
pop
push
mov
add
(bad)
cdq
dec
dec
cmp
inc
into
cmp
push
pop
inc
gs
mov
push
(bad)
jmp
inc
pop
add
outs
pop
push
(bad)
mov
xchg
ds
add
test
add
adc
outs
test
call
xchg
jmp
les
add
add
cwde
inc
or
push
push
fldenv
add
xchg
dec
rcr
push
mov
outs
dec
adc
jge
or
add
mov
xchg
(bad)
lods
sub
sub
add
push
out
add
ins
xor
shr
stos
pop
mov
sub
cs
shr
pop
mov
adc
jmp
stos
add
test
ret
adc
xchg
stos
aas
ins
shl
fist
clc
mov
pop
pop
push
xchg
xchg
add
test
sub
fisubr
and
add
stos
(bad)
adc
pop
push
xchg
mov
dec
shr
pop
mov
adc
popf
repnz
or
add
or
test
ins
add
fisubr
add
shr
fisubr
or
xor
mov
push
(bad)
jmp
rol
add
sub
enter
in
fisubr
dec
les
cmp
dec
dec
push
push
shr
jnp
or
sti
stos
dec
outs
sub
jg
inc
or
jbe
test
add
adc
or
fisubr
ja
sub
add
test
inc
add
mov
add
test
jnp
add
add
push
xchg
and
xchg
add
inc
pop
add
lods
mov
jns
lock
add
add
outs
pop
push
xchg
clc
inc
(bad)
clc
push
cmp
ins
fisubr
xchg
xchg
mov
test
jmp
push
push
cmp
push
inc
in
fld
add
imul
les
inc
add
cdq
sub
or
add
inc
sub
add
adc
sti
stos
dec
outs
dec
adc
loopne
add
test
add
adc
xchg
test
in
mov
push
add
add
inc
sub
(bad)
movs
repz
add
or
inc
ins
pop
lds
in
mov
hlt
shl
mov
mov
sub
or
adc
pop
push
xchg
jne
add
lahf
call
sub
or
add
mov
pushf
push
xor
add
(bad)
cmp
add
push
mov
mov
fisttp
push
xchg
and
mov
pop
ds
add
outs
pop
push
xchg
or
mov
(bad)
sub
ficom
push
jp
pop
or
lahf
lods
push
sub
add
(bad)
ds
adc
or
hlt
inc
jo
jae
outs
aas
ins
rcr
add
mov
jmp
or
add
sub
push
(bad)
repz
push
inc
add
add
lods
inc
in
cmp
fs
mov
push
jmp
les
inc
xor
adc
lods
jbe
jmp
add
add
add
add
cmps
inc
or
pop
gs
mov
dec
aas
pop
add
mov
add
scas
(bad)
cld
add
jb
pop
inc
add
mov
push
(bad)
jl
adc
mov
xor
push
in
add
add
inc
sub
(bad)
movs
jmp
add
push
push
cld
inc
(bad)
ins
cmp
jns
add
mov
xor
fcom
add
xchg
jbe
ins
cmc
leave
stos
(bad)
gs
fs
mov
push
call
js
or
add
stos
push
mov
jbe
pop
clc
sahf
adc
call
xor
mov
push
(bad)
jmp
inc
pop
add
mov
aas
inc
add
push
push
(bad)
jl
sub
inc
pop
add
jl
jmp
call
cld
add
test
scas
push
push
aam
fdiv
mov
jecxz
add
adc
mov
fs
add
sub
mov
inc
out
js
repnz
sti
outs
add
inc
stos
sub
test
test
in
test
mov
push
cwde
int
in
fisubr
and
test
inc
mov
fisub
jmp
clc
pop
add
pop
ds
adc
jl
loop
sahf
cmps
shr
(bad)
cld
add
or
fisubr
sub
add
and
sub
out
inc
pop
add
inc
inc
inc
adc
jl
loop
or
std
add
stos
hlt
cmps
dec
jmp
leave
push
outs
sub
add
pop
ins
adc
fs
sub
sub
dec
or
test
sub
add
xchg
mov
mov
leave
cwde
int
in
fisubr
jmp
inc
pop
add
ja
inc
adc
cmp
push
outs
sub
fisubr
xchg
test
add
test
call
in
fisubr
mov
dec
retf
test
ss
(bad)
ins
lods
jge
hlt
xchg
cmps
movs
test
inc
mov
fisubr
mov
sbb
add
repz
sti
fisubr
sub
add
int
adc
add
fptan
(bad)
pusha
mov
push
mov
pushf
adc
gs
push
cmp
adc
cmp
push
pop
pop
(bad)
jge
jge
pop
mov
add
jb
dec
rol
dec
or
push
mov
rcl
jge
mov
add
(bad)
cmc
mov
test
sub
cmps
movs
movs
arpl
setp
stos
out
pop
xchg
test
cmp
in
fisubr
add
cmp
in
fisub
ins
stos
fiadd
push
(bad)
sub
sub
test
cmps
inc
mov
popf
push
mov
add
add
test
mov
cmp
shr
ficom
bound
std
add
stos
hlt
cmps
dec
jmp
leave
push
outs
sub
add
pop
ins
adc
fs
sub
sub
cmp
add
test
adc
sbb
lods
inc
cmp
sub
inc
or
push
outs
test
popa
mov
adc
cmp
push
xchg
mov
dec
dec
mov
or
imul
in
push
jnp
outs
fisubr
sub
xchg
xor
mov
jmp
leave
push
outs
sub
add
xchg
iret
cmp
mov
leave
cwde
int
in
fisubr
jmp
cmp
add
jmp
and
rcr
fs
leave
mov
shr
(bad)
outs
cmps
xor
dec
leave
outs
sub
add
stos
(bad)
adc
adc
cld
jmp
leave
sub
sbb
cld
out
push
popa
pop
(bad)
jge
fptan
cmp
add
jl
out
pop
fadd
add
pop
(bad)
jge
cdq
repnz
cld
add
jb
dec
scas
adc
(bad)
dec
or
push
imul
cmp
add
sub
rcl
(bad)
jge
mov
add
jl
retf
fld
add
shr
shr
fimul
shr
mov
or
xor
add
jb
mov
in
fisubr
push
xchg
adc
pop
pop
imul
(bad)
fs
leave
sbb
cmp
in
fisubr
inc
cmp
pop
cmps
push
adc
push
xchg
fisttp
shl
dec
and
mov
outs
adc
retf
js
lahf
lods
inc
cmp
sub
inc
or
push
outs
test
popa
mov
adc
mov
mov
jmp
cmp
add
sub
mov
adc
adc
gs
shl
dec
fiadd
dec
or
imul
in
push
mov
rcl
ins
push
(bad)
stos
(bad)
jbe
jo
dec
leave
push
outs
sub
add
xchg
mov
ins
shl
dec
mov
adc
or
xor
adc
imul
(bad)
in
push
jnp
push
fisubr
sub
add
test
cmps
dec
pop
push
test
test
pusha
in
fisubr
dec
cmp
or
sbb
adc
rol
add
push
xor
add
imul
add
jl
out
pop
and
add
jns
pop
adc
add
imul
aaa
std
add
unpcklps
add
gs
push
jns
jg
jns
inc
mov
lods
test
mov
add
leave
retf
jecxz
add
jns
aas
adc
ja
or
int
in
fisubr
or
test
pop
popa
pop
cs
mov
xchg
or
lock
test
sub
fld
and
mov
leave
sub
in
fisub
ins
stos
fiadd
push
(bad)
sub
sub
test
mov
stos
inc
mov
cmps
dec
and
mov
daa
cmp
xor
leave
outs
sub
fld
jmp
cmp
pop
push
pop
int
sub
inc
adc
adc
inc
add
cmps
sub
shr
repnz
mov
enter
aaa
cmp
shr
ficom
mov
sub
jmp
leave
mov
adc
add
pop
pop
mov
sub
xchg
pop
add
inc
inc
inc
adc
cmp
push
outs
sub
xchg
dec
gs
lods
mov
gs
lods
xchg
mov
sbb
lods
xchg
pop
dec
gs
lods
jge
dec
gs
lods
jns
dec
gs
cmp
add
test
sub
mov
adc
cmp
push
xchg
mov
ins
shl
dec
mov
dec
sub
dec
or
push
cwde
int
in
fisubr
push
pop
int
popf
push
jmp
(bad)
adc
rcr
cmp
sub
mov
mov
jb
dec
out
adc
clc
das
dec
or
leave
cwde
int
out
fisubr
push
imul
sub
or
xor
leave
mov
adc
add
push
mov
cmp
mov
cmp
lods
ja
pop
pop
test
add
add
dec
push
or
fdivr
dec
bound
pop
int
push
pop
outs
sub
repnz
cld
add
cmp
adc
(bad)
outs
sub
cwde
int
out
fisubr
jmp
lods
add
push
call
in
fidivr
stc
imul
cmps
cmps
add
int
std
add
add
add
jg
sahf
xchg
or
sub
pop
aaa
pop
add
cdq
sub
enter
fisubr
pop
cmp
shr
fidivr
icebp
ret
inc
jb
dec
push
jmp
aas
pop
add
add
jge
fptan
stos
(bad)
cld
add
inc
add
leave
mov
add
pop
dec
stos
adc
in
(bad)
popa
ja
pop
xchg
and
add
lods
in
or
add
es
icebp
dec
push
gs
jns
pop
adc
(bad)
inc
pushf
jo
lods
aaa
cmp
cmps
xor
add
cmps
hlt
test
mov
js
dec
sbb
ror
add
leave
mov
add
jns
dec
adc
jnp
mov
add
adc
push
push
push
mov
cmp
and
xlat
outs
sub
mov
test
in
leave
xor
aas
jecxz
add
movs
jmp
lea
jmp
inc
mov
jle
sub
mul
adc
mov
lods
fstp
outs
sub
xor
fcomp
imul
outs
sub
mov
call
int3
out
fisubr
inc
cmp
pop
cmp
dec
mov
inc
lods
mov
jp
pop
add
inc
inc
inc
adc
jl
xchg
sub
shr
fist
mov
sub
jmp
leave
into
jo
adc
jo
add
push
ins
adc
dec
leave
ret
adc
jg
add
xchg
cmp
ins
shl
dec
jb
jp
pop
add
sub
ins
sub
adc
adc
imul
rcl
outs
lods
clc
ja
add
pop
cmp
mov
scas
mov
mov
cmp
pop
cmp
scas
call
in
fisubr
cmp
out
cmp
adc
inc
jb
dec
push
enter
out
fisubr
jmp
sysret
add
mov
mov
mov
add
jbe
dec
push
push
aam
dec
loope
outs
sub
int
fcomp
and
cmps
xor
adc
pop
sbb
adc
leave
ret
cmps
and
or
rol
xchg
repnz
cmps
cmp
add
xor
cmp
in
cmp
lahf
push
pop
pop
mov
jmp
in
fdivr
cmps
push
cdq
push
sbb
or
and
pop
cmps
sub
hlt
pop
mov
adc
enter
ja
test
mov
cmp
(bad)
in
add
jge
xchg
sbb
inc
mov
repnz
mov
add
imul
or
add
mov
test
cmp
push
popf
push
jns
mov
ds
add
sub
sub
repnz
add
ins
lods
aad
jnp
lahf
fisubr
sub
mov
inc
mov
or
add
push
stos
inc
mov
xchg
push
jmp
test
inc
in
fisubr
int3
xor
add
jae
ror
outs
sub
cwde
int
out
fisubr
jmp
test
add
lahf
lods
pop
cmp
cli
xor
add
push
enter
fisubr
push
pop
int
adc
gs
push
cmp
adc
add
pop
pop
(bad)
cmp
sub
addr16
pop
add
sahf
lods
aaa
cmp
shr
ficom
addr16
add
add
shr
pop
dec
inc
adc
adc
xchg
test
adc
sar
dec
push
lods
pop
int
xchg
out
popa
clc
sti
add
sub
dec
mov
mov
pop
dec
cmp
pop
sub
add
jge
test
add
mov
mov
cmps
test
loope
test
cli
add
int
mov
mov
aad
pop
add
add
lahf
(bad)
call
jmp
leave
out
lods
out
add
js
dec
inc
imul
in
repnz
cld
add
test
ret
add
xor
jl
mov
jle
inc
xor
pop
adc
xor
push
popa
push
mov
jo
xchg
sub
add
jge
(bad)
xacquire
pusha
fwait
xchg
fcomi
mov
adc
int
add
mov
mov
test
in
jle
sub
cmps
movs
movs
arpl
int
out
fisubr
iret
in
fist
pop
aad
jl
mov
test
dec
mov
mov
add
test
add
mov
add
(bad)
in
inc
pusha
add
push
mov
cmp
pop
mov
cmp
fs
add
pop
(bad)
jge
(bad)
bnd
loop
add
jl
jp
scas
into
add
test
add
add
sti
outs
add
inc
stos
sub
test
test
in
cmp
or
pop
dec
inc
adc
fwait
lods
shl
pop
test
cmps
cmps
fs
in
jle
sub
sar
pop
(bad)
xchg
lea
sub
(bad)
fst
inc
scas
xchg
jmp
and
lods
dec
add
and
js
hlt
cs
mov
in
add
into
sbb
cli
in
mov
dec
ja
test
mov
lahf
outs
mov
popf
mov
stc
inc
add
aad
test
adc
nop
lods
shr
mov
dec
call
xor
add
add
push
add
sub
stos
add
mov
aaa
fild
mov
pop
das
and
leave
mov
test
jecxz
int
pop
add
jecxz
pop
adc
inc
inc
pop
test
xchg
xchg
mov
adc
add
gs
shl
dec
inc
xor
dec
int
push
pop
ins
sub
mov
xchg
sub
stos
inc
mov
add
cs
adc
push
movs
fcomi
mov
lods
test
sar
add
add
xor
inc
arpl
test
mov
add
add
dec
dec
add
add
imul
sti
jl
push
test
push
cwde
int
in
fisubr
pop
xor
pop
or
int
hlt
pop
fs
leave
sub
adc
sub
dec
(bad)
adc
in
fisubr
or
outs
call
in
fidiv
stc
mov
jb
dec
mov
hlt
mov
hlt
test
int
add
jmp
dec
mov
retf
add
shr
pop
dec
mov
sub
add
lea
int
push
lods
pop
cmp
in
(bad)
pusha
and
loop
sub
add
int
out
fisubr
add
jo
aaa
cmp
jne
std
add
push
jmp
ret
adc
rcr
(bad)
ins
lods
lods
stos
sub
shr
fist
pop
mov
add
jmp
in
fdivr
pop
cmps
pop
xor
leave
into
hlt
jbe
sbb
push
stc
add
mov
cmp
mov
cmp
push
test
cmp
pop
test
or
add
dec
dec
or
call
push
or
jb
dec
and
pop
int
adc
cwde
jmp
sub
repnz
push
cld
add
cmp
adc
leave
fs
leave
sbb
and
scas
lahf
call
in
fisubr
ret
add
dec
push
adc
popf
push
jmp
out
adc
rcr
adc
out
cld
add
inc
inc
(bad)
xor
sub
ret
test
add
pushf
push
mov
shl
dec
and
lahf
push
pop
add
sahf
lods
ja
pop
or
(bad)
stos
clc
ja
or
mov
enter
enter
fisubr
pop
cmp
adc
inc
jb
dec
and
mov
add
icebp
inc
or
mov
jp
mov
fcom
in
ins
or
int
in
fisubr
mov
mov
jmp
fadd
add
jnp
mov
fcomp
add
cmp
sub
daa
push
pop
add
sahf
lods
aaa
cmp
daa
sub
add
(bad)
adc
rcl
gs
push
cmp
adc
push
add
pop
pop
jmp
add
jmp
adc
pop
pop
test
in
jo
lods
pop
cmp
shr
ficomp
push
imul
add
or
cmps
sub
mov
xor
leave
pop
outs
sub
repnz
cld
add
mov
loop
sahf
cmps
movs
test
inc
scas
lea
loope
jnp
mov
repnz
cld
cld
add
mov
mov
cs
mov
adc
in
fisubr
ja
mov
call
cmp
sub
mov
add
sub
adc
fisubr
push
pop
int
popf
sbb
inc
adc
bnd
cld
add
leave
out
sub
mov
int
out
fisubr
jmp
hlt
pop
add
push
addr16
add
test
adc
std
add
mov
pushf
jne
dec
and
out
dec
pop
add
sahf
lods
ja
jns
imul
or
mov
test
lock
fisubr
pop
cmp
adc
inc
jb
dec
and
or
add
add
jge
in
pop
mov
hlt
pop
inc
inc
add
leave
pop
outs
sub
fld
mov
mov
or
test
repnz
pusha
mov
xchg
ins
ror
ficom
jp
std
add
mov
inc
add
dec
ss
icebp
add
leave
push
addr16
inc
xchg
ins
mov
jb
std
add
jecxz
test
add
(bad)
cmp
sub
adc
pop
add
mov
rcl
pop
adc
add
jge
mov
mov
pushf
adc
outs
test
mov
fisubr
sub
fisubr
enter
out
fisubr
jmp
stc
add
ret
xchg
enter
pop
aam
les
inc
xor
leave
mov
lds
std
add
add
icebp
or
(bad)
mov
in
(bad)
cmps
cmps
lods
test
inc
stos
sbb
cli
inc
pusha
test
cmp
(bad)
in
icebp
ins
ret
ins
sar
dec
push
push
in
sub
or
mov
lods
shl
clc
les
jge
xchg
ficomp
dec
adc
pop
xchg
std
add
xor
jnp
ins
adc
push
jns
fwait
adc
inc
xchg
ficomp
shr
ficom
addr16
add
repz
std
add
cs
out
xchg
inc
mov
cmp
cs
leave
stos
jo
cmp
in
fisubr
pop
popa
arpl
adc
xor
aad
inc
cs
mov
xchg
or
retw
pop
test
sub
fld
and
mov
leave
sub
in
fisub
ins
stos
fiadd
push
(bad)
sub
sub
test
mov
dec
push
or
push
or
shr
jo
test
add
icebp
jno
int
mov
jbe
dec
ss
mov
jmp
(bad)
out
mov
cmp
into
mov
adc
leave
hlt
mov
dec
push
jl
rol
shr
fisubr
mov
cmps
sub
lahf
adc
xchg
test
or
hlt
pop
inc
daa
adc
add
jmp
mov
mov
add
cmp
sub
clc
in
xor
jmp
fisubr
fldlg2
mov
cmps
cmp
jp
cli
jbe
sbb
enter
adc
mov
add
cmp
(bad)
std
add
mov
test
xor
cs
sbb
add
pop
int
push
mov
inc
lea
aad
ss
retf
arpl
jl
into
hlt
bound
fisubr
jmp
dec
pop
add
jno
stos
ds
rol
sbb
lock
cwde
int
out
fisubr
jmp
push
pop
add
push
add
test
sbb
imul
push
mov
gs
cmp
retf
inc
fist
shr
leave
das
out
cmp
shr
fisubr
adc
imul
jo
adc
cli
jns
popf
lods
pop
cmp
in
ficomp
lods
adc
or
push
lods
movbe
cmp
shr
fisub
shr
fidiv
data16
jo
pop
cmp
adc
mov
ins
add
leave
outs
sub
push
mov
rcl
outs
add
jns
cmp
leave
mov
sub
sub
add
int
in
fisubr
add
dec
jb
fisubr
sub
add
sub
sub
push
add
jge
loope
(bad)
or
leave
out
pop
cmps
dec
xor
xor
jl
mov
cmps
cmp
adc
push
mov
cmp
pop
test
cmp
push
cmp
dec
adc
lods
inc
imul
test
push
jmp
in
add
hlt
mov
movs
test
mov
popf
push
jmp
retf
adc
rcr
fs
leave
jbe
sub
add
lods
(bad)
shr
fisub
cld
in
fisubr
leave
cwde
int
out
fisubr
jmp
icebp
pop
add
sub
mov
nop
jb
dec
inc
adc
or
add
add
leave
mov
push
enter
fisubr
inc
cmp
call
jl
sub
in
fst
mov
mov
gs
push
cmp
jmp
leave
jb
sub
add
lods
ja
movs
clc
sub
or
push
or
adc
cwde
jmp
inc
jmp
shr
(bad)
cmps
cmps
nop
test
cmps
cmps
int3
test
cmps
cmps
in
test
ins
retf
std
add
mov
pop
mov
adc
sub
add
aaa
add
lea
mov
dec
test
in
stos
cli
outs
cmps
pop
pop
or
jmp
adc
lods
out
add
lahf
pushf
push
jnp
jnp
movs
or
int
in
fisubr
xchg
mov
add
test
shr
repnz
int3
cld
add
leave
(bad)
pop
repz
std
add
jns
inc
adc
add
lods
aaa
cmp
shr
ficom
fbld
std
add
mov
sub
add
gs
push
cmp
adc
dec
add
pop
pop
(bad)
cmp
sub
(bad)
dec
pop
add
sahf
adc
add
shl
xor
inc
dec
sub
adc
jbe
push
jmp
retf
adc
rcr
(bad)
sub
sub
int
add
sub
sub
outs
sub
ror
in
fisubr
ja
movs
clc
pop
icebp
or
or
int
js
dec
mov
test
cmp
push
jns
push
mov
cmp
clc
jle
or
or
int
jbe
dec
push
or
int
jbe
dec
dec
jmp
inc
lahf
in
addr16
or
or
inc
sbb
add
stos
hlt
cmps
cmps
int3
test
cmps
pusha
pop
or
xchg
sub
sbb
dec
nop
int
out
fisubr
push
(bad)
sub
sub
sub
sub
add
add
hlt
scas
cmps
cmp
shr
repnz
add
or
leave
sub
(bad)
jge
test
inc
mov
add
int
sub
xchg
adc
adc
cmp
lods
(bad)
in
sahf
adc
pushf
push
mov
shr
pop
dec
xchg
adc
adc
(bad)
jge
loope
enter
xor
leave
into
hlt
jbe
and
sbb
push
cmps
ret
adc
add
push
lods
aaa
cmp
push
iret
std
add
cmp
adc
sub
fnsave
leave
(bad)
pop
sbb
std
add
jns
inc
adc
aam
add
enter
fisubr
test
jo
lods
aaa
cmp
shr
ficom
pop
and
add
cmps
shr
inc
imul
shr
repnz
retf
adc
out
fisubr
pop
cmp
shr
ficomp
shr
ficomp
mov
add
outs
sub
xor
leave
jb
call
in
fidiv
and
inc
js
dec
cmp
xor
sub
jne
test
cwde
test
in
aad
out
add
dec
sub
int
adc
gs
push
jns
xchg
adc
hlt
mov
in
test
lahf
cld
add
leave
push
outs
sub
add
test
jmp
push
jmp
add
hlt
pop
or
int3
cld
add
test
mov
pop
push
imul
push
popa
pop
outs
test
inc
mov
add
test
push
mov
adc
mov
add
dec
and
dec
mov
js
sub
shr
jmp
sub
mov
bound
add
cmp
sub
fbld
pop
add
sbb
cli
add
clc
sar
inc
aam
mov
cmps
dec
xor
leave
cmps
pop
popf
and
add
push
aaa
push
push
cwde
int
in
fisubr
inc
cmp
into
in
fisubr
and
mov
test
sub
cmp
push
test
jo
ja
gs
outs
fs
add
lahf
xchg
add
jge
mov
in
outs
xor
add
mov
mov
lahf
lods
pop
cmp
shr
ficomp
lods
xchg
fld
xchg
in
nop
loopne
add
add
cld
add
jb
dec
mov
mov
gs
push
add
jge
in
inc
inc
inc
adc
in
add
adc
mov
imul
in
bnd
cld
add
or
dec
bound
xlat
outs
sub
mov
test
in
leave
xor
pop
ret
js
movs
jmp
lea
jmp
jmp
sub
not
sub
cmp
or
push
jmp
cmp
ror
adc
mov
out
inc
jecxz
mov
fptan
test
cld
add
leave
jle
mov
cmp
shr
ficom
jb
std
add
ret
lods
sub
mov
xchg
sub
out
adc
rcl
(bad)
jmp
jb
dec
xchg
leave
cwde
int
in
fisubr
jmp
inc
pop
add
push
pop
dec
imul
sub
add
xchg
mov
mov
jmp
and
add
and
adc
cmp
pop
outs
sub
fisubr
test
aam
or
test
sub
push
outs
sub
add
lods
inc
cmp
mov
push
(bad)
sub
sub
fist
mov
cmc
shr
fisubr
cmp
add
jae
repz
ins
lods
fstp
inc
ret
adc
shr
bnd
jl
xchg
pop
retf
retf
std
add
jns
mov
je
add
lods
aaa
cmp
in
ficom
mov
std
add
pop
adc
rcl
gs
push
jns
cmp
pop
cmp
shr
fidiv
sbb
dec
inc
mov
into
mov
mov
cli
or
jge
pop
(bad)
jge
in
push
int3
cld
add
leave
mov
adc
add
cmps
push
stos
inc
xchg
imul
sub
add
pop
or
int
adc
gs
shl
dec
ss
cwde
int
in
fisubr
jmp
and
inc
cmps
sub
arpl
enter
imul
(bad)
in
push
jnp
mov
movs
or
jl
jb
dec
push
leave
cwde
int
in
fisubr
jmp
add
ins
adc
pop
push
cmp
inc
mov
ins
adc
pop
cs
adc
add
fptan
in
mov
cmc
mov
test
sub
cmps
movs
movs
arpl
setne
sub
ficom
inc
fadd
add
rol
or
js
ret
lods
sub
(bad)
sbb
outs
add
add
cmps
add
add
push
popa
add
cmp
(bad)
sub
add
push
addr16
(bad)
repz
add
push
(bad)
inc
test
call
push
inc
push
mov
add
mov
push
je
add
hlt
ins
aaa
in
out
add
xor
add
lods
clc
dec
hlt
add
ins
add
push
fisubr
xacquire
jb
dec
add
add
scas
push
(bad)
jl
sub
push
pop
add
in
(bad)
add
mov
add
das
out
les
mov
mov
push
inc
push
in
sub
add
or
add
shr
in
add
add
in
(bad)
mov
add
add
in
xchg
add
add
fdiv
lods
pop
test
add
add
les
in
xor
add
mov
add
adc
cmp
(bad)
mov
clc
pusha
popa
or
ins
adc
or
fs
add
pop
pop
movs
add
dec
sub
cli
cli
push
xchg
mov
add
sub
mov
add
lods
jbe
adc
jbe
adc
dec
push
push
popa
ins
adc
shl
mov
add
add
adc
(bad)
pop
add
add
add
cmps
push
cld
add
dec
std
pop
push
dec
popf
add
add
js
sti
std
add
xor
add
xchg
lea
add
pop
cmp
std
add
add
add
push
mov
add
add
in
jbe
add
push
inc
jp
inc
(bad)
cmp
add
inc
imul
test
add
fs
cmp
push
cdq
cld
add
ins
pop
fiadd
enter
in
fisubr
or
js
ret
push
(bad)
leave
add
adc
add
lods
inc
enter
sahf
push
inc
ins
popa
leave
stos
ficomp
clc
cmp
fdiv
mov
arpl
push
mov
(bad)
sbb
add
xchg
clc
ins
rol
jbe
push
hlt
jle
add
mov
jmp
push
pop
pop
(bad)
cmp
add
inc
mov
add
add
gs
push
cmp
aad
or
test
call
cmp
add
fbld
push
pop
pop
jmp
into
in
(bad)
gs
fs
sbb
in
sbb
add
ficom
xchg
inc
in
mov
pop
out
jmp
sub
cs
inc
mov
mov
ins
add
repnz
cmp
add
xchg
mov
jmp
add
pop
aad
std
add
(bad)
xchg
retf
test
std
add
pop
or
ret
jo
jae
or
pop
push
jb
add
pop
test
push
add
add
xchg
in
aam
add
jmp
add
pop
mov
pushf
push
mov
clc
cmps
bound
call
cmp
jmp
and
add
sahf
lods
ss
add
add
scas
mov
jb
dec
add
add
mov
inc
add
out
mov
pushf
push
jl
jmp
and
add
pop
add
add
test
fadd
lea
add
jb
jg
xchg
jb
pop
adc
add
dec
jbe
lea
pop
das
add
ins
and
and
add
add
push
mov
push
inc
fimul
stos
push
arpl
xchg
movs
inc
mov
add
mov
push
stos
sub
test
inc
dec
sub
in
inc
and
push
jmp
xor
leave
out
enter
nop
leave
jmp
inc
add
pop
pop
pop
push
popa
push
(bad)
sub
add
ins
rcr
in
pop
inc
or
stc
push
stos
dec
lahf
lods
push
in
add
sub
clc
bound
push
mov
outs
add
test
push
pop
add
sahf
lods
ss
add
add
inc
xchg
cld
add
jb
stos
inc
add
lea
out
pop
inc
sbb
add
sub
add
in
dec
add
pusha
push
sbb
add
or
out
add
xchg
add
mov
sub
xor
add
sahf
lods
ss
add
add
pop
cwde
cld
add
jb
stos
inc
add
lea
out
pop
xlat
sbb
add
bound
leave
push
mov
hlt
movs
arpl
add
adc
ds
repz
lods
inc
pushf
pop
push
stos
dec
pop
add
std
add
lods
hlt
jne
in
dec
pop
or
cmp
add
push
adc
stos
inc
sub
add
pop
fisubr
ins
adc
shl
sbb
add
adc
pop
add
out
add
add
add
jl
adc
imul
lahf
pop
add
push
in
das
(bad)
rcl
add
add
fldcw
fisubr
cmp
mov
sbb
cmp
jmp
sbb
add
outs
xchg
or
add
fisubr
icebp
push
xchg
sub
jb
add
pop
or
test
lods
inc
adc
mov
pop
(bad)
jl
sub
sbb
add
mov
clc
call
cli
inc
add
outs
xchg
or
adc
movs
inc
sub
add
adc
aaa
pop
stos
sub
(bad)
cmp
add
stos
clc
sbb
inc
(bad)
mov
add
pop
outs
cmp
add
push
add
or
add
test
sub
(bad)
jne
fisubr
repnz
(bad)
lahf
outs
lods
ss
add
lods
(bad)
movs
in
mov
add
xor
cmp
test
in
pop
hlt
xchg
mov
lahf
add
jbe
add
sub
ins
add
leave
push
add
add
gs
push
cmp
add
pop
or
leave
add
add
jmp
sbb
add
lods
dec
xchg
sub
ficom
push
jp
sub
hlt
pop
add
xchg
xchg
cmp
dec
dec
add
add
lea
mov
loop
std
add
inc
enter
stos
enter
sub
mov
(bad)
repnz
add
es
jo
lods
dec
pushf
pop
mov
lods
in
not
mov
add
add
add
add
ja
or
push
imul
add
outs
sub
aad
adc
repnz
add
push
mov
in
add
in
mov
add
push
stos
bound
add
hlt
movs
sar
add
popf
repnz
sahf
cld
add
or
adc
mov
adc
xchg
or
pop
mov
xor
gs
add
ret
lahf
inc
jo
push
das
pop
cwde
test
sbb
jb
inc
add
add
and
push
xchg
add
lods
(bad)
scas
in
mov
or
ins
add
repnz
fwait
cld
add
popf
xchg
ficomp
add
add
stos
push
outs
sub
sahf
outs
jmp
adc
shl
jecxz
add
adc
pop
add
out
add
xor
pop
test
pop
push
xchg
fld
movs
sahf
inc
xchg
add
mov
adc
lea
add
pop
clc
push
or
or
adc
sar
add
jo
cmps
add
add
inc
lea
inc
(bad)
cmp
add
add
add
hlt
add
add
xchg
mov
pop
aam
dec
dec
fisubr
push
mov
push
add
add
add
xchg
jmp
add
or
(bad)
inc
js
lahf
lods
push
inc
add
add
xor
adc
or
mov
jae
add
ins
add
push
mov
lahf
adc
gs
shl
inc
add
add
maxps
push
pop
ins
adc
leave
push
add
add
gs
shl
push
inc
add
das
pop
add
lods
ss
add
push
mov
jge
push
(bad)
jmp
mov
inc
add
out
push
jl
jmp
pop
pop
add
in
(bad)
add
mov
jmp
pop
pop
add
cdq
sub
(bad)
mov
add
pop
pop
adc
jbe
inc
in
rcl
add
test
sub
adc
mov
pop
mov
mov
cmps
mov
add
add
adc
pusha
add
pop
or
clc
jbe
add
or
and
jbe
adc
and
push
mov
test
jge
repnz
fdivrp
add
lea
mov
or
pop
mov
in
jmp
ins
adc
lahf
ret
inc
inc
mov
outs
sub
xchg
std
adc
dec
xor
sub
add
add
add
stos
push
jno
les
add
xchg
ds
adc
add
sub
sar
stos
(bad)
adc
jb
cmp
add
pop
or
leave
inc
jo
jae
iret
cmp
push
in
and
add
mov
jmp
cmp
add
sub
ins
add
lea
fdivr
jne
inc
add
add
fwait
mov
hlt
mov
add
add
imul
add
lds
add
xchg
add
add
add
add
iret
imul
pop
gs
xor
daa
sbb
add
jl
jmp
and
add
lods
ret
add
add
jo
outs
in
add
mov
dec
sub
rcl
iret
pusha
add
lods
jbe
adc
dec
add
push
adc
push
push
popa
or
adc
xor
push
jmp
add
sahf
outs
adc
lahf
ja
jle
xor
mov
pop
pop
jp
cli
out
push
sbb
adc
(bad)
pop
jbe
mov
pop
call
and
adc
jne
jp
xchg
inc
sbb
inc
add
test
jb
xchg
add
adc
add
sub
inc
add
call
or
movs
inc
add
fld
add
pop
sbb
add
mov
push
fisubr
xacquire
pushf
jo
call
iret
push
(bad)
in
adc
or
adc
add
cmp
(bad)
ins
dec
popf
push
lods
(bad)
push
in
add
add
test
leave
push
add
jne
lea
ret
sub
pusha
or
jl
adc
imul
add
test
xlat
in
lahf
retf
lea
xchg
fcomi
jne
in
cs
or
xor
sbb
add
dec
lds
adc
xchg
hlt
jne
in
mov
add
xor
sbb
add
popf
repnz
mov
add
or
repnz
inc
das
sub
and
mov
(bad)
shr
add
add
pop
pop
adc
add
(bad)
jmp
ja
xchg
enter
adc
inc
sbb
hlt
xlat
adc
add
cmp
gs
push
jp
pop
aaa
adc
add
jmp
xor
add
sahf
lods
jbe
adc
inc
pushf
adc
aaa
push
push
jmp
cmp
aaa
sahf
outs
adc
retf
add
sub
ror
add
pop
add
mov
or
adc
sub
add
adc
out
jae
push
mov
or
gs
push
push
jmp
cmp
aaa
sahf
outs
adc
retf
add
sub
ror
ret
add
mov
or
adc
add
cmps
mov
adc
jae
push
mov
or
movs
aaa
push
push
jmp
cmp
cmp
add
sub
ror
xor
add
mov
or
adc
mov
adc
add
mov
or
in
push
push
jmp
add
sahf
outs
adc
retf
add
mov
adc
lea
fdiv
out
aam
adc
sub
adc
clc
and
push
lods
push
mov
shl
js
sub
inc
add
sahf
lods
jbe
adc
pop
add
xchg
add
lods
inc
add
adc
call
movs
sub
imul
pop
adc
(bad)
loope
daa
sub
push
lods
out
xlat
xor
add
movs
(bad)
in
xor
ins
sub
repnz
adc
icebp
ja
outs
jmp
add
jmp
sub
add
movs
out
fnsave
jnp
add
adc
pop
and
fucomi
inc
add
inc
mov
push
in
cmps
dec
sub
adc
jbe
jo
xchg
adc
popf
repnz
inc
es
test
sbb
outs
push
std
add
jnp
add
sub
xor
add
test
add
xchg
inc
mov
push
or
push
jmp
shr
fiadd
push
jg
aaa
pop
push
lods
ret
push
add
push
adc
add
das
movs
ret
xchg
gs
add
push
popa
or
pop
cmp
sbb
test
mov
in
push
(bad)
mov
lock
jl
js
aaa
pop
jmp
loop
add
sbb
push
push
cmp
inc
adc
lea
push
mov
ins
adc
mov
adc
sub
cs
leave
lea
fst
imul
jb
inc
inc
adc
pop
jb
push
xchg
sub
jp
pop
cmps
paddw
push
stos
adc
xchg
add
seta
test
dec
mov
adc
jecxz
(bad)
je
jbe
pop
adc
push
add
cmps
push
pop
lods
dec
call
push
or
add
out
push
jl
leave
push
add
add
(bad)
ins
sbb
icebp
sbb
add
outs
xchg
mov
fist
clc
rcl
call
push
jp
pop
pop
paddw
push
sub
or
jbe
inc
in
inc
adc
call
cs
leave
sub
dec
cmp
dec
inc
add
test
xlat
mov
dec
es
add
shl
mov
clc
pop
push
or
push
push
(bad)
dec
das
add
or
sub
inc
mov
jb
inc
inc
adc
cmp
add
pop
ins
adc
cld
add
or
aad
dec
in
fisubr
jmp
(bad)
sub
aam
(bad)
ja
or
mov
enter
adc
jne
mov
lahf
mov
clc
loope
or
or
dec
add
cmp
(bad)
in
repnz
cld
add
or
pop
outs
sub
push
mov
clc
int
or
push
(bad)
je
jbe
add
imul
cmps
push
pop
lods
dec
mov
pop
add
inc
fwait
xchg
fcomi
jne
in
movs
push
or
cmp
add
push
call
not
dec
cmp
into
inc
(bad)
jl
adc
lea
lahf
(bad)
pop
or
jmp
add
pop
inc
lea
add
loope
inc
pushf
jo
lods
jbe
adc
ja
push
mov
les
xor
push
push
jmp
lea
jmp
fmul
adc
mov
pop
imul
(bad)
fs
leave
stos
mov
adc
xchg
mov
add
mov
mov
jbe
dec
bound
pop
out
sub
add
or
rcr
sub
pop
int
out
repnz
cld
add
add
push
xchg
pop
inc
ins
shl
dec
and
pusha
int
adc
(bad)
jmp
js
cmps
pusha
cmps
shr
ficom
addr16
std
add
jo
out
jb
mov
push
mov
push
or
test
adc
sbb
mov
fldcw
mov
in
popf
push
or
jmp
pusha
int
adc
ins
cmp
ja
push
mov
fs
dec
pop
xchg
rcl
outs
test
adc
pop
test
adc
mov
add
(bad)
jge
in
enter
or
cmp
in
fisubr
xor
cdq
sub
adc
pop
test
je
pop
jbe
push
xchg
daa
inc
ins
shl
dec
and
call
or
jmp
adc
xchg
push
xchg
sub
in
jae
or
mov
add
lods
ja
mov
dec
pop
push
xor
stos
inc
pop
sbb
scas
cld
add
sub
sub
cmps
dec
mov
das
xor
add
xor
leave
loop
dec
or
stos
cli
out
enter
cmc
fisubr
jmp
xor
xchg
sbb
xor
cmp
jmp
mov
inc
fwait
in
adc
or
repnz
adc
clc
sqrtps
jmp
(bad)
shr
jle
inc
adc
movs
leave
jp
out
std
add
iret
lods
sub
mov
call
add
cmps
pusha
scas
shr
ficom
iret
or
add
jo
out
ret
sub
in
sbb
xor
mov
inc
js
lahf
mov
fldcw
mov
in
test
add
jmp
pusha
int
adc
ins
mov
jbe
sbb
pushf
jbe
push
mov
fs
dec
pop
(bad)
adc
rcl
outs
test
jbe
pop
test
adc
mov
or
mov
add
mov
mov
or
(bad)
inc
xchg
ficomp
push
test
je
pop
ins
add
xchg
mov
ins
shl
dec
and
repnz
add
sub
mov
cmps
jne
adc
ja
push
xchg
sub
in
ss
repnz
cmps
cld
add
lods
ja
mov
dec
pop
push
xor
stos
inc
pop
adc
mov
add
sub
cmps
dec
mov
cmps
sub
add
(bad)
cmp
xor
leave
loop
mov
std
add
stos
cli
out
enter
fstp
outs
sub
jg
pop
add
outs
xchg
sbb
jns
sahf
outs
mov
cmp
jmp
mov
inc
fwait
in
pop
pop
or
repnz
adc
clc
mov
or
ins
adc
shr
dec
imul
pop
dec
or
add
int3
lods
sub
mov
call
add
cmps
pusha
xchg
shr
ficom
pop
or
jo
out
gs
in
push
mov
dec
or
test
adc
cdq
inc
js
lahf
mov
fldcw
mov
in
or
sub
jmp
pusha
int
adc
ins
cmp
cmps
sbb
inc
ins
add
mov
fs
dec
pop
xchg
adc
rcl
outs
test
add
test
adc
call
or
cmps
cld
add
or
cmp
in
fisubr
or
fst
cmps
je
outs
imul
xchg
ror
shl
dec
and
push
pop
add
sub
mov
cmps
pop
sub
add
xchg
sub
in
popf
mov
mov
(bad)
repnz
test
add
lods
ja
mov
dec
pop
push
xor
stos
inc
pop
sub
mov
add
sub
jbe
shl
dec
mov
jmp
add
sti
cmp
xor
leave
loop
cli
or
add
stos
cli
out
enter
in
outs
sub
div
pop
add
outs
xchg
sbb
sbb
pop
cmp
jmp
mov
inc
fwait
in
inc
dec
or
repnz
adc
clc
aas
push
or
ins
adc
shr
arpl
adc
movs
leave
jp
xchg
push
std
add
int
sub
mov
call
add
cmps
pusha
lahf
shr
ficom
jg
std
add
jo
out
sub
push
mov
dec
or
test
adc
inc
js
lahf
mov
fldcw
mov
in
jne
or
jmp
pusha
int
adc
ins
ins
mov
cmps
sbb
lods
imul
mov
fs
dec
pop
lahf
adc
rcl
outs
test
nop
inc
pop
test
adc
cwde
inc
xchg
cmps
ds
movs
cld
add
or
cmp
in
fisubr
jmp
ficomp
mov
cmps
je
pop
imul
ins
shl
dec
and
ret
add
sub
mov
cmps
sub
add
out
addr16
push
mov
jbe
repnz
cld
add
lods
ja
mov
dec
pop
push
xor
stos
inc
pop
and
cmps
cld
add
sub
shl
dec
mov
ja
pop
add
fbstp
inc
adc
jl
loop
bound
std
add
stos
cli
out
enter
int
outs
sub
dec
sub
add
outs
xchg
sbb
cld
les
mov
mov
lods
mov
inc
fwait
in
int3
dec
or
repnz
adc
clc
out
or
ins
adc
shr
mov
movs
leave
jp
inc
lods
sub
mov
call
add
cmps
pusha
(bad)
shr
ficom
pop
or
add
jo
out
test
inc
arpl
cmc
dec
or
test
adc
inc
js
lahf
mov
fldcw
mov
in
cmp
sub
jmp
pusha
int
adc
ins
in
mov
cmps
sbb
push
imul
ins
lods
movs
mov
adc
outs
test
(bad)
mov
mov
inc
xchg
sub
or
cmps
cld
add
or
cmp
in
fisubr
push
call
enter
test
je
mov
out
ins
shl
dec
and
cmp
pop
or
jmp
adc
out
add
xchg
sub
in
xor
lods
(bad)
repnz
stos
cld
add
lods
ja
mov
dec
pop
push
xor
stos
inc
pop
cmp
movs
cld
add
sub
cmps
dec
mov
iret
daa
pop
add
ja
inc
adc
jl
loop
jmp
cli
out
enter
aad
outs
sub
(bad)
sub
add
outs
xchg
sbb
test
cmp
jmp
ror
in
xor
or
repnz
adc
clc
outs
pop
or
ins
adc
shr
retf
adc
ja
add
mov
lea
popf
jle
sub
cmps
movs
movs
arpl
fs
push
xor
in
fidivr
push
lea
push
sti
fbld
cmps
retf
out
ret
push
jo
imul
cmp
jo
xchg
and
leave
dec
or
sub
fisubr
call
loopne
int
js
dec
and
int
push
jnp
loope
sub
xchg
sub
cmps
lea
sub
add
test
stos
aad
push
mov
out
mov
cmp
adc
test
stos
fst
fdivr
dec
push
clc
(bad)
add
add
jl
fisub
call
retf
adc
push
xor
inc
add
mov
popf
mov
dec
cs
fdivr
es
outs
mov
cmp
mov
cmp
mov
cmp
stos
fist
mov
loop
push
cmps
sub
outs
cmps
sub
mov
jmp
leave
(bad)
(bad)
stc
or
mov
mov
mov
push
(bad)
loope
mov
pop
mov
cmp
fldlg2
jecxz
and
sub
xor
xchg
sti
(bad)
push
aaa
mul
mov
push
test
ja
enter
js
ja
enter
jns
into
mov
out
push
cmps
sbb
mov
(bad)
push
cmps
and
mov
or
(bad)
movs
mov
cmc
adc
push
xor
iret
shl
adc
push
xor
gs
js
dec
push
mov
test
lods
push
fwait
inc
xchg
or
sti
daa
pop
daa
sub
pop
int
jbe
dec
sbb
int
clc
sbb
in
daa
neg
xchg
loope
jbe
dec
push
or
call
or
int
js
dec
push
mov
cli
add
cli
cmps
and
add
sbb
fsubr
xchg
leave
loop
push
cmps
sub
mov
jmp
push
and
jbe
cli
add
inc
js
dec
and
cli
cmps
and
dec
push
cmps
sub
jg
dec
cmps
and
shl
push
jl
cld
and
loop
fisubr
sbb
push
xor
lea
in
das
jne
lea
fst
inc
xchg
inc
xlat
sti
(bad)
push
daa
mov
cmp
adc
icebp
push
mov
cmp
fldl2e
jecxz
and
sub
xor
xchg
sti
add
mul
mov
inc
xchg
or
iret
push
mov
push
cmp
inc
inc
cmp
fmul
arpl
dec
fcom
sbb
cmp
je
inc
icebp
clc
popf
cmp
(bad)
cmp
(bad)
in
repz
mov
add
pushf
leave
shl
ins
(bad)
lea
rcl
xor
test
lods
sub
and
add
add
dec
add
mov
mov
scas
(bad)
cli
je
inc
icebp
clc
fnstsw
add
cmp
fmul
inc
cs
std
rep
dec
inc
cs
leave
shl
ins
(bad)
lea
rcl
or
lds
lods
sub
jmp
mov
or
retf
in
xlat
arpl
add
test
dec
mov
je
or
or
int
jb
jae
dec
add
sbb
mov
sbb
stos
rcr
cli
lea
add
mov
cs
std
leave
aaa
adc
mov
and
jmp
cmp
add
xor
icebp
push
mov
and
rcl
mov
je
push
movs
sar
add
mov
or
stc
mov
inc
inc
sbb
lahf
outs
adc
xchg
call
mov
scas
dec
xor
push
mov
mov
inc
bnd
and
inc
outs
fild
adc
cmp
push
push
add
repnz
inc
pusha
test
mov
pop
cmp
in
cmps
arpl
add
test
dec
(bad)
jl
push
bound
hlt
push
mov
ins
and
repnz
js
add
push
cdq
mov
cs
and
mov
and
jmp
cmp
sar
add
jo
jo
pop
es
(bad)
add
add
sbb
add
adc
or
int
jb
jae
or
leave
aaa
adc
mov
add
retf
in
daa
bound
add
test
dec
adc
(bad)
(bad)
adc
shl
pop
add
adc
inc
lea
cmc
push
mov
or
or
mov
and
add
adc
jg
add
dec
xor
push
mov
mov
inc
bnd
and
push
mov
mov
push
push
ret
ins
rcl
sar
jo
jo
pop
adc
push
add
test
add
cs
leave
shl
ins
(bad)
lea
rcl
or
in
lods
sub
jmp
add
test
imul
mov
push
mov
jmp
push
cmps
or
mov
push
mov
dec
bound
push
ret
ins
rcl
cmp
push
stos
(bad)
or
mov
push
stos
fidiv
mov
in
es
aad
adc
mov
add
mov
or
int
jb
jae
dec
clc
mov
adc
mov
sbb
jp
sbb
jle
add
mov
cs
sbb
aaa
adc
add
gs
cmp
add
push
test
add
push
test
add
fiadd
xchg
jmp
push
sub
add
dec
adc
cmp
js
jmp
jl
push
mov
add
or
add
jge
pop
sub
pop
add
jl
add
sbb
in
ficomp
cwde
jg
add
or
call
push
push
add
lea
cmc
push
mov
or
adc
sahf
inc
inc
call
cmp
add
stos
jecxz
mov
icebp
fisubr
add
or
js
or
push
cmp
xor
inc
mov
sbb
retf
in
pop
add
test
dec
or
(bad)
(bad)
adc
shl
str
or
inc
lea
cmc
push
mov
or
fnstsw
inc
inc
sbb
outs
adc
add
stos
jecxz
jge
jo
str
stc
stc
inc
mov
inc
lea
cmc
push
mov
or
fnstsw
inc
inc
sbb
add
adc
jge
add
ja
leave
and
push
mov
push
mov
or
or
repz
jge
pop
sub
pop
add
jl
add
jge
dec
or
push
sub
sub
add
jmp
in
fisubr
push
jge
add
ja
leave
fsubr
cmp
cs
pop
sub
stc
xchg
or
push
sub
pop
xchg
add
xor
icebp
push
mov
xor
push
ret
ins
rcl
push
sar
lea
cli
jo
pop
adc
push
add
mov
add
cs
leave
shl
ins
(bad)
lea
rcl
lea
add
sub
sub
push
add
push
mov
jmp
into
jmp
jbe
add
stc
inc
(bad)
dec
sbb
cmp
push
stc
push
(bad)
push
jae
or
leave
aaa
adc
nop
add
retf
in
lahf
add
(bad)
mov
push
test
dec
xchg
or
push
xchg
stc
push
or
or
int
jb
jae
dec
mov
sbb
lea
rcl
add
inc
sub
sub
sar
add
push
lods
push
add
test
icebp
pop
mov
add
mov
add
cs
leave
shl
ins
(bad)
lea
rcl
mov
add
dec
adc
mov
jl
jmp
inc
mov
xor
retf
in
pop
add
test
dec
xchg
stc
(bad)
or
or
int
jb
jae
dec
shl
inc
mov
sbb
add
push
jp
sbb
jge
add
mov
cs
sbb
aaa
adc
add
gs
inc
add
push
mov
add
xor
icebp
push
mov
mov
dec
add
inc
mov
sbb
xor
add
data16
fisubr
data16
sbb
jp
add
jb
(bad)
adc
jnp
add
sbb
push
jnp
add
dec
xor
push
mov
ja
push
inc
inc
icebp
clc
and
dec
add
mov
sbb
outs
adc
les
adc
inc
jb
daa
adc
inc
jb
iret
adc
inc
js
dec
xor
push
mov
mov
inc
bnd
and
inc
pop
loop
adc
dec
cmp
call
push
lods
jbe
adc
jbe
adc
push
cmp
je
inc
icebp
clc
xchg
arpl
dec
add
mov
and
les
stos
jecxz
mov
icebp
fisubr
add
stc
add
adc
out
inc
xor
out
jmp
inc
mov
aaa
cmp
in
(bad)
imul
push
test
dec
xchg
stc
inc
or
push
xchg
or
push
xchg
stc
push
or
push
xchg
dec
or
or
int
jb
jae
dec
cwde
mov
adc
lea
rcl
fstp
add
dec
sub
lods
sub
ficom
add
jl
jmp
inc
mov
das
cmp
in
aas
push
inc
clc
cmp
add
(bad)
in
repz
jge
repz
cmp
cs
leave
shl
ins
(bad)
lea
rcl
lods
sbb
add
and
add
jl
jmp
inc
mov
xor
retf
in
(bad)
cli
je
inc
icebp
clc
lea
(bad)
cmp
in
repz
jge
repz
ja
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
jmp
stos
jmp
sahf
jmp
mov
add
fwait
inc
mov
(bad)
inc
add
inc
mov
sbb
xor
add
push
mov
add
dec
sbb
std
add
sub
pop
js
add
push
jo
std
add
push
push
jp
sbb
std
add
dec
sbb
js
add
push
push
js
add
push
dec
js
add
push
and
add
push
sbb
add
push
xor
add
mov
cs
xchg
add
adc
dec
cld
mov
adc
mov
sbb
xor
add
adc
or
fisubr
data16
add
and
lock
add
jb
retf
adc
mov
add
retf
adc
mov
add
retf
adc
mov
add
dec
xor
push
mov
mov
inc
bnd
sbb
push
mov
add
push
ret
ins
rcl
and
inc
(bad)
jl
push
push
jge
add
jge
add
jge
add
mov
or
and
inc
inc
fsubr
lahf
outs
adc
scas
add
adc
inc
jb
(bad)
adc
inc
jb
sbb
inc
mov
add
dec
xor
push
mov
mov
inc
bnd
sbb
inc
lahf
jecxz
adc
jl
push
push
lods
jbe
adc
jbe
adc
jnp
push
lods
ss
add
jbe
cld
add
cld
add
pushf
leave
shl
ins
(bad)
lea
js
add
outs
pop
add
icebp
clc
lods
ins
add
cmp
pop
int
add
cld
add
cld
add
pushf
leave
shl
ins
(bad)
lea
rcl
adc
xor
add
add
mov
stc
push
(bad)
(bad)
cmp
add
sbb
cmp
push
jge
add
add
push
push
jl
add
push
adc
inc
jb
mov
jle
add
mov
cmp
inc
lea
mov
add
aaa
pop
add
outs
or
adc
lds
add
dec
loope
lods
sub
xchg
push
add
push
in
repnz
add
(bad)
xchg
adc
shl
aaa
add
add
push
cmp
add
jge
add
add
add
pop
jne
add
jmp
bound
add
stc
out
(bad)
(bad)
jge
add
sbb
ja
add
mov
or
add
push
cli
jnp
add
push
adc
mov
add
rol
add
adc
jns
push
lods
movs
add
add
(bad)
jbe
add
jmp
jbe
add
stc
push
mov
dec
(bad)
popa
add
add
ss
jl
add
add
push
push
jnp
add
push
adc
inc
jb
fild
add
adc
add
lods
ss
add
mov
add
jmp
inc
mov
inc
add
add
inc
lea
rcl
xchg
pop
add
dec
and
or
push
jl
jmp
bound
add
stc
into
mov
dec
xchg
stc
out
or
push
(bad)
jge
add
sbb
ja
add
sbb
ja
add
mov
cs
cdq
add
adc
dec
add
inc
mov
sbb
add
push
jp
sbb
je
add
mov
cs
adc
aaa
adc
stos
and
sub
aaa
add
dec
test
add
jmp
adc
add
push
cdq
mov
cs
adc
aaa
adc
movs
add
gs
add
add
push
xchg
xchg
add
(bad)
cmp
add
inc
js
dec
xor
xchg
dec
add
add
rcl
mov
add
dec
sub
inc
icebp
clc
push
imul
(bad)
in
repz
inc
xor
sbb
jae
cld
add
cld
add
cld
add
pushf
leave
shl
ins
(bad)
lea
rcl
jne
add
push
mov
inc
bnd
push
add
inc
sti
fld
adc
call
push
mov
les
lock
aad
adc
mov
mov
mov
push
jmp
push
jae
dec
mov
sbb
lea
rcl
inc
adc
add
and
sub
adc
add
(bad)
mov
add
jmp
push
dec
int
jb
jae
or
leave
aaa
adc
cmps
add
cmp
in
neg
add
test
dec
xchg
stc
jbe
or
push
(bad)
popa
add
add
inc
sbb
std
add
data16
jp
sbb
cmp
pop
jle
add
add
push
stos
add
add
push
adc
inc
jb
imul
add
(bad)
jg
push
lods
ss
add
push
jl
add
jmp
add
add
out
or
or
int
jb
jae
or
leave
aaa
adc
add
cmp
in
push
pop
add
test
dec
dec
(bad)
cmp
dec
int
jb
jae
dec
aam
sbb
lea
rcl
inc
adc
and
push
add
push
jl
jmp
(bad)
jmp
(bad)
jmp
mov
mov
jl
jmp
mov
test
pop
add
fwait
inc
mov
jmp
retf
in
fbld
add
icebp
clc
sbb
pop
loop
in
repz
xor
sbb
cmp
leave
shl
ins
(bad)
lea
rcl
int
add
push
mov
inc
bnd
sbb
inc
jmp
inc
adc
push
push
push
push
lods
push
call
imul
shl
ins
(bad)
lea
inc
and
push
cmp
in
jg
add
icebp
clc
jge
add
cmp
loop
in
repz
inc
xor
sub
sbb
leave
shl
ins
(bad)
lea
rcl
ins
adc
add
push
inc
bnd
sbb
inc
and
inc
adc
mov
push
push
leave
jg
imul
cli
add
shl
push
lods
push
add
test
imul
mov
add
push
jmp
push
cmps
or
mov
push
mov
rcr
push
ret
ins
rcl
lock
inc
(bad)
jl
push
bound
add
jg
add
push
adc
test
add
dec
xor
push
mov
ja
push
inc
inc
icebp
clc
xor
dec
add
inc
inc
push
or
mov
sbb
push
test
add
(bad)
adc
inc
js
dec
xor
push
mov
mov
inc
bnd
sbb
inc
mov
test
mov
fsub
lock
aad
adc
mov
add
out
add
jmp
xchg
dec
xchg
test
stc
out
mov
dec
xchg
dec
xchg
(bad)
jne
dec
xchg
dec
xchg
push
jne
dec
xchg
dec
int
jb
jae
dec
mov
inc
mov
sbb
sub
add
and
stos
ins
std
add
mov
cs
sbb
aaa
adc
xchg
add
gs
sub
add
push
jae
add
cs
add
add
push
pop
xchg
add
(bad)
jl
push
adc
add
push
adc
inc
jb
mov
add
adc
add
lods
ss
add
sahf
(bad)
cld
add
cld
add
jmp
sbb
add
stc
(bad)
jne
dec
(bad)
lea
add
sbb
std
add
mov
inc
jmp
jae
add
sahf
jae
add
add
push
jmp
add
push
adc
dec
mov
add
adc
xchg
add
lods
xor
add
push
nop
cld
add
pushf
leave
shl
ins
(bad)
lea
or
add
mov
add
icebp
clc
aad
add
cmp
or
inc
xor
inc
repz
cld
add
cld
add
pushf
leave
shl
ins
(bad)
lea
rcl
std
adc
add
push
inc
bnd
xor
inc
push
or
adc
and
push
push
lods
jbe
adc
add
lods
jbe
adc
add
lods
jbe
adc
push
cmp
mov
add
add
adc
mov
xchg
clc
lods
sub
mov
mov
jmp
mov
sbb
inc
mov
push
mov
test
add
aaa
adc
xchg
add
mov
cld
mov
adc
mov
sbb
mov
sbb
imul
push
cdq
mov
cs
jne
aaa
adc
add
mov
cld
mov
adc
mov
sbb
add
push
mov
sbb
cdq
mov
cs
inc
leave
aaa
adc
nop
add
retf
in
(bad)
push
add
test
dec
dec
inc
stc
imul
push
dec
(bad)
xor
or
int
jb
jae
dec
lods
mov
adc
lea
rcl
or
aad
lods
sub
jmp
jmp
ret
xchg
pop
add
fwait
inc
mov
mov
push
add
test
dec
(bad)
xchg
add
add
mov
cs
xchg
add
adc
push
push
mov
add
inc
mov
sbb
mov
sbb
push
inc
sbb
outs
std
add
add
add
xchg
jne
add
xor
icebp
push
stc
jbe
add
mov
inc
cs
add
aaa
adc
add
gs
sub
add
add
push
aaa
mov
add
push
adc
push
imul
add
pop
mov
push
lods
push
inc
add
add
repz
add
cld
add
cld
add
cld
add
cld
add
cld
add
pushf
leave
shl
ins
(bad)
lea
rol
fist
cli
je
inc
icebp
clc
sbb
fs
retf
inc
xor
inc
repz
sbb
push
xchg
add
cld
add
cld
add
pushf
leave
shl
ins
(bad)
lea
mov
pop
push
add
test
dec
dec
inc
stc
sti
jl
dec
dec
(bad)
adc
or
int
jb
jae
dec
enter
jge
inc
mov
sbb
add
push
jp
sbb
ins
std
add
cs
ins
std
add
inc
sbb
ins
std
add
data16
ins
std
add
mov
inc
jmp
ja
add
add
push
sub
jl
add
inc
jb
jnp
add
adc
add
mov
cmp
mov
add
add
adc
std
or
add
push
inc
bnd
cs
inc
adc
inc
adc
and
push
push
lods
jbe
adc
add
lods
jbe
adc
add
mov
cmp
je
inc
icebp
clc
xor
dec
add
mov
add
or
add
adc
inc
js
dec
xor
push
cmp
bnd
cs
pop
das
cs
add
inc
inc
xor
lahf
outs
adc
add
inc
add
scas
cwde
add
lods
ss
add
add
pop
xchg
cld
add
jmp
push
add
add
out
jno
dec
dec
fyl2xp1
sub
dec
(bad)
ins
add
add
mov
inc
jmp
jbe
add
add
push
and
jo
add
inc
jb
stos
inc
add
push
xchg
add
lods
ss
add
mov
jge
repz
xchg
cld
add
cld
add
jmp
jle
add
stc
pop
jo
dec
int
jb
adc
add
cs
adc
int3
adc
ja
push
stos
ret
or
xchg
add
mov
gs
xor
add
or
hlt
pop
jae
adc
adc
jmp
ins
or
adc
mov
push
mov
cmp
je
inc
icebp
clc
jne
add
cmp
or
add
cld
add
jmp
push
add
add
sbb
dec
(bad)
movs
add
add
scas
push
inc
jmp
ins
or
inc
ins
or
add
push
aaa
mov
add
push
adc
imul
jb
xlat
adc
imul
jb
jg
add
adc
xchg
add
lods
ss
add
mov
pushf
leave
shl
ins
(bad)
lea
cmp
add
call
add
icebp
clc
std
push
add
cmp
or
inc
xor
sbb
fwait
xchg
add
pushf
leave
shl
ins
(bad)
lea
rcl
in
or
add
std
lods
sub
retf
add
mov
jmp
inc
mov
xor
retf
in
dec
pop
add
test
dec
mov
add
repnz
fisubr
es
add
cli
lods
push
add
add
setb
add
xor
sbb
adc
xor
xrelease
add
jl
jmp
mov
add
dec
or
adc
shl
(bad)
inc
add
add
inc
outs
or
add
add
(bad)
nop
cwde
xchg
shr
(bad)
lds
add
or
push
add
add
ss
inc
lea
add
push
stos
jecxz
mov
(bad)
outs
sub
mov
add
(bad)
lods
ss
add
into
xchg
cld
add
push
cmp
inc
jmp
js
add
push
js
add
popa
outs
or
add
push
xchg
xchg
add
lea
cmc
push
mov
or
in
add
xor
push
mov
dec
jne
push
ret
ins
rcl
cmp
inc
(bad)
je
push
out
add
(bad)
cmp
add
inc
jb
scas
add
add
retf
nop
add
lods
push
cmp
add
add
add
(bad)
jmp
stos
add
add
mov
add
add
call
or
xor
icebp
push
stc
dec
add
add
inc
cs
add
aaa
adc
stos
pop
gs
arpl
add
(bad)
imul
hlt
mov
push
out
mov
sbb
sbb
movs
add
inc
jb
scas
add
add
mov
push
lods
ss
add
add
out
cld
add
jmp
pop
add
add
jbe
or
push
(bad)
imul
push
rol
imul
hlt
lods
cmps
add
add
iret
xchg
add
(bad)
xor
add
inc
jb
adc
add
adc
pop
push
lods
push
push
add
add
pop
mov
add
jmp
inc
mov
xor
add
mov
adc
lea
rcl
jne
add
dec
jns
lods
sub
bound
add
push
jl
jmp
sahf
jmp
ret
mov
add
jl
jmp
inc
mov
out
retf
in
mov
cmp
push
test
dec
xchg
stc
push
jl
dec
int
jb
jae
dec
shl
inc
lea
rcl
sub
mov
or
add
(bad)
mov
add
adc
sub
add
sbb
push
add
shl
pop
popa
sub
add
inc
(bad)
cmp
add
inc
xor
xchg
add
stc
xchg
jl
dec
(bad)
sub
add
sbb
std
add
pop
add
push
add
add
push
xchg
lea
add
push
adc
scas
dec
xor
push
mov
ja
add
clc
ins
pop
add
or
add
test
add
push
lahf
outs
adc
add
stos
jecxz
mov
icebp
fisubr
add
stc
add
(bad)
adc
je
add
push
lods
cli
add
cmps
shr
outs
sub
push
jl
jmp
push
cmps
or
mov
push
mov
mov
imul
ins
rcl
call
xor
add
inc
jb
out
add
adc
dec
test
jnp
add
lods
dec
rcl
jae
add
lods
push
enter
repz
cmp
add
jmp
mov
add
stc
xchg
dec
dec
cmc
stc
ret
jp
dec
(bad)
and
data16
add
push
sbb
std
add
dec
add
add
leave
jo
add
add
push
xchg
mov
add
mov
add
push
adc
dec
out
add
adc
jbe
adc
push
enter
repz
add
jmp
out
jmp
mov
add
stc
sub
and
addr16
add
push
sbb
addr16
add
dec
add
add
push
mov
sbb
add
push
sub
push
(bad)
js
add
out
add
adc
add
lods
ss
add
add
(bad)
xchg
add
jmp
out
jmp
out
jmp
mov
add
stc
fwait
movs
or
push
(bad)
and
addr16
add
push
sbb
std
add
dec
add
add
shl
inc
add
jp
add
(bad)
cmp
add
inc
jb
mov
(bad)
add
add
jae
cld
add
jmp
mov
add
stc
sti
movs
or
push
dec
cmc
stc
call
add
addr16
add
bound
add
scas
ins
or
mov
mov
push
dec
out
add
push
adc
jne
add
mov
xor
sub
add
push
mov
add
jmp
mov
jae
or
push
(bad)
rol
fs
add
dec
add
add
dec
outs
or
add
push
ja
add
(bad)
cmp
add
inc
js
dec
xor
push
mov
ja
add
add
clc
and
dec
add
stos
inc
inc
add
lahf
outs
adc
sahf
add
stos
jecxz
mov
icebp
fisubr
add
adc
js
ja
mov
jl
jmp
out
jmp
inc
mov
aaa
cmp
in
das
dec
add
test
dec
push
inc
stc
and
push
xchg
stc
out
or
or
int
jb
retf
mov
mov
sbb
mov
sbb
add
push
inc
fiadd
inc
jmp
cmps
or
add
push
repnz
add
(bad)
jl
push
cli
xchg
add
(bad)
cmp
add
push
adc
jbe
add
pop
adc
jbe
add
mov
add
mov
add
imul
add
cwde
cmps
add
lods
ds
add
inc
fs
add
jmp
mov
test
pop
add
mov
stc
jbe
or
or
int
jb
adc
add
cs
adc
int3
adc
outs
push
push
stos
ret
adc
xchg
add
xchg
add
gs
imul
add
add
stos
xchg
add
(bad)
jl
push
xchg
xchg
add
lea
add
mov
(bad)
outs
sub
inc
add
add
add
dec
mov
add
push
cmp
push
inc
jmp
outs
or
add
push
jmp
add
push
adc
pop
adc
add
adc
add
lods
add
add
push
mov
add
dec
inc
add
inc
lods
shr
outs
sub
add
ins
add
add
jb
push
inc
add
push
mov
push
lods
ss
add
add
mov
jge
repz
mov
add
cld
add
pushf
leave
shl
lods
aaa
add
add
mov
sbb
xchg
jmp
cmp
in
fist
add
test
dec
xchg
stc
jle
or
push
xchg
xchg
jnp
dec
int
jb
jae
dec
enter
xor
cmc
cmc
stos
ficomp
mov
jp
sbb
std
add
dec
sbb
std
add
dec
sbb
(bad)
std
add
dec
sbb
std
add
mov
cs
push
leave
aaa
adc
add
cmp
in
(bad)
push
add
test
dec
push
sub
inc
push
or
push
xchg
dec
xchg
stc
(bad)
jp
dec
xchg
push
jp
dec
xchg
dec
xchg
xchg
add
add
mov
add
add
stc
xchg
add
add
inc
inc
mov
add
out
add
add
lea
push
lods
push
mov
mov
lea
cwde
mov
in
(bad)
test
add
jge
repz
mov
add
push
jp
sbb
jp
sbb
std
add
add
jo
add
add
push
jp
add
(bad)
cmp
add
inc
jb
fist
dec
je
add
mov
dec
icebp
fisubr
add
cmp
mov
inc
xor
mov
imul
mov
push
mov
stc
out
or
les
ja
pop
adc
mov
add
inc
xor
mov
imul
mov
push
mov
stc
push
movs
or
les
dec
das
pop
adc
mov
add
inc
xor
call
jl
jmp
out
add
stc
push
movs
or
push
(bad)
popf
add
add
jb
inc
jmp
mov
adc
mov
xchg
add
add
pop
cmps
add
(bad)
jl
push
and
add
inc
jb
pop
inc
add
outs
movs
add
lods
ss
add
add
sahf
pop
cld
add
lea
cwde
mov
in
(bad)
test
shl
inc
bound
add
cli
xor
sub
in
fidiv
xchg
adc
shr
mov
push
cmp
sahf
mov
inc
(bad)
int3
shr
fisubr
pop
es
mov
jb
aas
inc
add
push
mov
push
cmp
nop
cwde
mov
in
(bad)
test
add
add
jl
jmp
xor
test
cmps
xchg
adc
shr
mov
push
cmp
add
mov
inc
(bad)
int3
shl
fisubr
pop
es
mov
jb
pop
inc
add
mov
push
cmp
nop
cwde
xchg
shr
(bad)
test
add
add
mov
stc
xchg
pusha
push
mov
rol
add
fist
pop
(bad)
inc
jb
pop
inc
add
sahf
mov
ins
add
add
scas
pusha
cld
add
jmp
outs
add
add
mov
xchg
stc
(bad)
movs
or
push
(bad)
mov
and
add
push
sbb
add
jb
inc
jmp
mov
mov
add
push
fisub
xchg
add
push
adc
pop
inc
js
mov
shl
pop
popa
sub
add
cmp
add
inc
xor
mov
in
aad
sbb
adc
push
mov
mov
sub
(bad)
jmp
xor
test
cmps
xchg
adc
shr
mov
push
cmp
push
inc
jmp
movs
or
int3
shr
fld
pop
adc
mov
jb
fist
jbe
inc
xor
mov
in
aad
sbb
adc
push
mov
(bad)
inc
xor
xchg
add
fs
add
cli
xor
test
cmps
xchg
adc
shr
mov
push
cmp
push
inc
jmp
movs
or
int3
shr
shr
pop
es
mov
jb
mov
add
adc
mov
xchg
stc
mul
mov
add
add
push
clc
pop
std
add
out
push
inc
jmp
movs
or
add
push
cli
mov
rol
add
mov
add
adc
mov
push
add
add
(bad)
pop
cld
add
pushf
leave
shl
ins
(bad)
lea
test
add
cmps
test
add
icebp
clc
add
cmp
(bad)
in
repz
mov
xor
add
mov
stc
outs
cmps
or
push
(bad)
jno
add
sbb
std
add
sbb
jp
sbb
jp
sbb
std
add
pop
sbb
std
add
xchg
push
inc
jmp
dec
or
xor
test
mov
add
inc
bnd
test
inc
idiv
inc
adc
jl
push
push
lods
push
js
add
and
mov
push
(bad)
jmp
jb
add
stc
mul
(bad)
out
cmps
or
push
xchg
dec
xchg
(bad)
mov
sub
push
mov
jno
add
sbb
cdq
mov
add
add
stc
push
add
mov
inc
inc
xor
lahf
outs
adc
pop
mov
add
adc
push
lods
ss
add
add
into
arpl
add
jmp
(bad)
jmp
sahf
jmp
ret
pop
pop
add
jl
jmp
jb
add
stc
rcr
dec
int
jb
stos
inc
add
push
lods
add
adc
push
push
ret
ins
rcl
pusha
loope
add
push
adc
call
mov
(bad)
mov
add
(bad)
inc
add
mov
add
lods
jbe
adc
add
add
pop
arpl
add
jmp
mov
sbb
add
jl
jmp
inc
mov
push
mov
in
add
add
aaa
adc
sbb
dec
cld
mov
adc
mov
sbb
adc
sub
call
push
push
inc
jmp
dec
or
add
push
dec
test
loopne
add
inc
jb
pop
add
add
push
nop
add
lods
ss
add
add
pop
xchg
cld
add
jmp
data16
add
xchg
cmp
dec
xchg
stc
xchg
mov
test
add
sbb
std
add
mov
add
add
stc
loop
add
mov
inc
es
push
mov
popa
xchg
push
ret
ins
rcl
and
add
test
mov
inc
jb
(bad)
inc
add
fisub
add
add
outs
fs
add
cld
add
cld
add
jmp
push
add
add
push
mov
stc
add
add
mov
inc
jmp
dec
or
add
push
sbb
aam
add
inc
js
sub
add
es
aad
sbb
adc
dec
dec
push
add
cmp
jmp
movs
mov
imul
es
out
add
pop
jb
jae
add
adc
add
jmp
push
mov
push
cmp
int3
adc
push
push
stos
ret
adc
xchg
add
jnp
add
add
jmp
pusha
add
mov
mov
add
add
retf
add
push
adc
dec
cmp
add
out
add
lods
jbe
adc
cmps
add
lods
jbe
adc
cmps
add
lods
push
fadd
add
shl
add
popa
pop
add
mov
stc
push
mov
test
add
sbb
pop
std
add
(bad)
push
inc
jmp
test
add
add
push
sub
add
push
adc
pop
inc
jb
inc
add
adc
movs
add
lods
adc
add
into
(bad)
cld
add
jmp
cli
add
add
pop
mov
stc
add
add
mov
add
add
stc
rol
add
mov
inc
es
push
mov
dec
test
push
ret
ins
rcl
cmp
inc
(bad)
sub
add
push
adc
xchg
inc
jb
iret
adc
xchg
inc
jb
jmp
mov
dec
xchg
inc
add
mov
jbe
adc
jbe
adc
inc
cwde
adc
add
lods
ss
add
add
jbe
cld
add
jmp
inc
mov
push
mov
dec
add
add
aaa
adc
add
gs
push
add
add
push
and
jo
add
inc
jb
mov
add
dec
add
add
inc
pushf
add
lods
push
in
add
pop
ret
add
jb
out
es
add
add
xchg
jo
push
lods
jbe
adc
add
lods
inc
call
push
lods
jbe
adc
add
lods
add
add
jle
cld
add
jmp
data16
add
mov
push
add
pop
std
add
sub
jo
std
add
mov
data16
or
add
push
ret
add
push
adc
dec
stos
inc
add
scas
pushf
add
lods
ss
add
add
pop
push
cld
add
jmp
add
add
out
lods
or
push
(bad)
ins
add
add
mov
or
push
call
add
push
and
les
add
inc
jb
mov
add
dec
add
add
inc
fwait
add
lods
ss
add
add
(bad)
pop
cld
add
jmp
bound
add
dec
or
adc
shl
cmps
add
add
push
cmp
inc
jmp
call
add
add
jle
cld
add
jmp
add
add
mov
fdiv
jae
or
leave
aaa
adc
mov
cmp
in
pop
jp
add
test
dec
xchg
inc
inc
add
sbb
std
add
mov
aaa
mov
cmps
mov
popf
add
(bad)
cmp
inc
add
inc
jb
ja
add
adc
fwait
add
mov
cmp
mov
rol
rcl
gs
add
add
jmp
jnp
add
outs
add
adc
dec
add
add
xor
add
push
in
popa
xor
add
add
add
cwde
test
pop
pause
test
sbb
into
push
cld
add
cld
add
jmp
ret
pop
pop
add
lods
loop
dec
sub
add
jl
jmp
jbe
add
stc
jle
or
push
(bad)
jge
add
sbb
cmp
pop
popf
or
add
push
stos
pushf
add
(bad)
jl
push
xchg
pushf
add
(bad)
cmp
add
push
adc
lahf
daa
adc
xchg
inc
jb
sbb
scas
inc
jb
jnp
add
adc
push
test
add
movaps
(bad)
lds
add
add
shr
sbb
sbb
jne
jmp
pushf
or
add
push
or
lods
cmc
push
mov
or
aad
add
inc
bnd
jl
add
mov
mov
cmps
cld
ins
rcl
call
ins
sbb
jo
pop
adc
repnz
fwait
add
aad
jge
repz
push
cld
add
jmp
scas
jmp
shr
nop
pop
pop
add
jl
jmp
scas
jmp
jp
add
stc
jle
or
or
int
jb
jae
or
leave
aaa
adc
mov
cmp
in
dec
jl
add
test
jmp
sub
mov
pop
verr
sbb
pop
jmp
pushf
or
into
pushf
or
(bad)
pushf
or
sahf
pushf
or
xchg
pushf
or
scas
pushf
or
cmps
pushf
or
(bad)
lahf
or
neg
daa
jmp
lahf
or
push
lahf
or
ficomp
pop
jmp
lahf
or
out
lahf
or
out
or
ds
or
ss
or
dec
lahf
or
inc
lahf
or
push
lahf
or
push
lahf
or
cs
or
es
or
jle
or
jbe
or
mov
pop
jmp
lahf
or
pop
lahf
or
push
lahf
or
outs
lahf
or
data16
or
xor
imul
pop
add
stos
ret
adc
xchg
add
test
gs
push
add
add
push
jmp
inc
add
inc
js
dec
xor
push
mov
ja
(bad)
inc
inc
icebp
clc
mov
add
or
add
inc
inc
pusha
pop
lahf
outs
adc
(bad)
retf
adc
data16
jb
lahf
inc
add
push
lahf
add
lods
ss
add
(bad)
pop
cld
add
cld
add
cld
add
jmp
inc
mov
aas
inc
add
inc
lea
rcl
fnsave
add
add
add
jl
jmp
cli
add
add
xchg
test
dec
mov
push
jp
sbb
std
add
mov
inc
jmp
sahf
or
add
push
call
add
push
adc
dec
jae
add
adc
ss
add
pop
cld
add
cld
add
jmp
data16
add
out
test
dec
(bad)
mov
add
sbb
push
std
add
mov
inc
jmp
mov
sbb
push
mov
jg
add
push
and
lods
cmc
push
icebp
fiadd
add
push
ja
add
clc
in
add
add
mov
mov
inc
bnd
ja
add
test
jne
push
lods
jbe
adc
sahf
add
lods
jbe
adc
add
lods
jbe
adc
add
lods
jbe
adc
add
mov
cmp
mov
add
add
adc
in
jb
add
add
add
jl
jmp
(bad)
jmp
sahf
jmp
ret
pop
pop
add
jl
jmp
xchg
add
stc
(bad)
stos
or
push
(bad)
loope
add
sbb
std
add
jmp
or
add
push
loop
add
(bad)
cmp
add
inc
js
dec
xor
push
mov
ja
add
clc
popf
mov
(bad)
cmp
in
repz
mov
add
cld
add
cld
add
cld
add
cld
add
pushf
leave
shl
ins
(bad)
lea
rcl
adc
imul
sub
push
jl
jmp
(bad)
jmp
ret
pop
pop
add
fwait
inc
mov
out
cmp
in
pop
add
(bad)
jmp
add
or
adc
or
test
rol
pop
pop
add
cli
movs
out
add
add
jno
xchg
xchg
dec
hlt
add
lea
add
sbb
std
add
js
adc
add
es
lock
add
hlt
mov
add
add
mov
add
aad
cmp
jmp
stos
jmp
(bad)
jmp
inc
mov
push
mov
hlt
add
add
aaa
adc
add
gs
dec
add
or
jns
repnz
add
cld
add
push
stos
div
or
test
add
jmp
push
adc
das
add
adc
inc
add
ss
push
jmp
push
jae
or
leave
aaa
adc
jno
add
add
sub
dec
add
add
push
pop
mov
add
push
adc
inc
jb
(bad)
adc
inc
jb
sti
add
add
outs
mov
push
lods
ss
add
sahf
outs
cld
add
jmp
retf
add
scas
xchg
or
push
(bad)
loope
add
sbb
push
std
add
jmp
or
xor
leave
add
dec
leave
add
xchg
add
inc
jnp
inc
adc
pushf
imul
lods
dec
rcl
adc
cmp
je
inc
icebp
clc
mov
add
cmp
add
in
repz
test
add
cld
add
lea
cwde
mov
in
(bad)
test
add
jge
repz
add
push
stos
sbb
sub
add
stos
push
inc
jmp
xchg
or
add
push
xor
mov
push
push
inc
jb
inc
add
pop
mov
push
mov
cmp
mov
add
add
adc
aad
add
push
mov
inc
bnd
xchg
add
inc
stos
add
adc
push
push
lods
jbe
adc
add
lods
jbe
adc
ss
add
mov
cld
add
jmp
(bad)
jmp
inc
mov
jnp
add
mov
adc
lea
rcl
jne
add
dec
pop
add
sub
bound
add
jl
jmp
inc
mov
xor
retf
in
push
jb
add
test
dec
xchg
stc
push
xchg
or
or
int
jb
jae
dec
shl
inc
mov
sbb
push
add
push
jp
sbb
dec
std
add
mov
cs
xor
aaa
adc
out
push
gs
dec
add
jns
or
xchg
cwde
or
xor
icebp
push
mov
icebp
xchg
push
push
mov
add
inc
mov
sbb
pop
add
push
push
push
inc
jmp
popf
or
or
hlt
pop
jae
adc
dec
add
jne
jmp
xchg
or
adc
push
lods
ss
add
add
inc
ins
cld
add
pushf
leave
shl
ins
(bad)
lea
test
add
daa
jne
add
icebp
clc
test
(bad)
cmp
nop
cmps
inc
xor
inc
repz
cld
add
pushf
leave
shl
ins
(bad)
lea
rcl
push
outs
add
push
mov
inc
bnd
xchg
add
inc
(bad)
inc
adc
mov
add
outs
cld
add
cld
add
jmp
bound
add
stc
cs
or
push
(bad)
lods
add
add
cs
dec
std
add
inc
sbb
dec
std
add
repnz
xchg
or
add
push
push
add
lea
cmc
push
mov
or
or
bnd
xchg
add
push
mov
sbb
add
dec
repnz
lea
cli
jo
pop
adc
loop
lea
stos
mov
add
xor
inc
repz
outs
cld
add
cld
add
cld
add
cld
add
pushf
leave
shl
ins
(bad)
lea
rcl
jne
add
dec
fisubr
add
push
jl
jmp
add
add
out
xchg
or
push
(bad)
dec
add
add
xchg
inc
jmp
xchg
or
push
xchg
or
add
push
and
mov
inc
jb
(bad)
inc
add
push
mov
adc
add
mov
cmp
jmp
inc
mov
push
mov
test
add
aaa
adc
ins
add
mov
cld
mov
adc
mov
sbb
add
inc
sbb
std
add
sbb
cdq
mov
cs
cmp
ins
add
push
add
add
push
outs
cmp
add
push
adc
dec
stos
add
add
mov
ss
add
add
dec
jae
add
dec
leave
add
inc
test
imul
dec
lods
add
rol
add
sbb
dec
std
add
jb
add
add
push
mov
push
lods
ss
add
push
je
add
jmp
mov
add
stc
es
or
or
int
jb
arpl
add
cs
in
push
push
push
stos
ret
adc
xchg
add
ins
add
push
add
add
push
cmp
jo
add
inc
jb
mov
add
out
push
dec
inc
jb
pop
adc
inc
jb
stos
inc
add
jle
add
lods
ss
add
mov
xor
icebp
add
outs
pop
add
mov
stc
sahf
nop
or
push
(bad)
mov
add
sbb
std
add
mov
inc
jmp
xchg
or
add
push
retf
add
icebp
jle
add
push
ja
add
clc
jge
add
add
mov
mov
inc
bnd
pop
inc
lahf
sub
adc
xchg
outs
push
push
lods
ss
add
(bad)
jno
add
cld
add
jmp
retf
outs
pop
add
fwait
inc
mov
mov
add
mov
adc
lea
rcl
adc
popa
fsubr
add
push
jl
jmp
xchg
jmp
add
add
xchg
or
or
int
jb
jae
or
leave
aaa
adc
imul
retf
in
xlat
jns
add
test
dec
xchg
dec
xchg
stc
mov
int
jb
jae
dec
mov
sbb
lea
rcl
popf
push
add
fldcw
add
push
jl
jmp
(bad)
jmp
inc
mov
sar
retf
in
ja
add
icebp
clc
xchg
jae
(bad)
cmp
mov
cmp
jmp
call
jl
jmp
(bad)
jmp
inc
mov
xchg
inc
add
inc
lea
rcl
sbb
and
sbb
add
add
nop
add
mov
inc
jb
(bad)
adc
dec
inc
jb
(bad)
adc
dec
inc
jb
(bad)
adc
dec
inc
jb
(bad)
adc
dec
inc
jb
(bad)
adc
dec
inc
jb
(bad)
adc
inc
jb
(bad)
adc
inc
jb
(bad)
adc
inc
jb
(bad)
adc
inc
jb
(bad)
adc
inc
jb
(bad)
adc
inc
jb
(bad)
adc
inc
jb
(bad)
adc
inc
jb
(bad)
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
pop
inc
jb
(bad)
adc
inc
jb
(bad)
adc
inc
jb
sbb
outs
pop
inc
js
dec
xor
push
cmp
bnd
mov
inc
add
dec
adc
add
lods
dec
mov
push
lods
jbe
adc
ss
add
ds
add
cld
add
pushf
leave
shl
ins
(bad)
lea
cwde
add
push
cmp
in
ja
add
test
dec
mov
sbb
add
push
cmp
inc
jmp
mov
add
add
push
or
mov
add
inc
jb
stos
std
add
adc
stos
add
lods
ss
add
add
ss
aad
push
(bad)
jmp
mov
add
stc
inc
pushf
or
push
(bad)
and
dec
std
add
xchg
add
inc
mov
add
add
push
bound
hlt
add
inc
jb
pop
std
add
adc
add
lods
ss
add
jle
cld
add
jmp
data16
add
mov
add
dec
std
add
bound
add
outs
mov
add
add
push
call
add
inc
jb
dec
add
add
mov
add
lods
ss
repz
xor
cmc
add
(bad)
jmp
(bad)
add
stc
neg
add
inc
std
add
xchg
add
test
inc
add
repnz
add
(bad)
cmp
add
inc
jb
push
std
add
adc
stos
add
lods
cmp
add
cs
add
jmp
xor
add
stc
ds
or
push
(bad)
fld
inc
std
add
sahf
add
add
push
lea
add
add
push
push
add
(bad)
cmp
add
inc
jb
(bad)
std
add
adc
ss
add
xchg
gs
add
jmp
mov
add
stc
cmps
lahf
or
push
(bad)
mov
add
sbb
std
add
sub
add
lea
add
add
push
ret
add
push
adc
dec
out
add
adc
ss
add
pop
gs
add
jmp
inc
add
add
out
lahf
or
push
(bad)
cmp
clc
inc
std
add
rol
mov
add
add
push
cli
stos
add
(bad)
cmp
add
inc
jb
cmp
add
push
test
pushf
add
add
(bad)
data16
add
jmp
push
inc
add
push
sahf
or
push
(bad)
int
add
sbb
cmp
inc
jmp
mov
add
add
push
push
stos
add
(bad)
cmp
add
inc
jb
stos
std
add
adc
add
lods
add
repz
add
jmp
mov
add
stc
sahf
sahf
or
push
(bad)
rol
inc
std
add
mov
mov
mov
inc
add
retf
add
push
adc
dec
pop
std
add
adc
test
pop
add
add
jbe
cld
add
jmp
mov
push
cdq
or
push
(bad)
mov
inc
std
add
mov
inc
jmp
(bad)
mov
add
add
and
cmp
add
inc
jb
ja
add
adc
mov
push
lods
ss
add
mov
cmp
jmp
xor
add
stc
xchg
les
dec
(bad)
fld
sar
push
cmp
add
add
cs
mov
inc
add
pop
mov
add
push
adc
inc
jb
out
add
adc
add
lods
ss
add
cmps
imul
xor
aad
push
(bad)
jmp
inc
add
add
mov
or
push
(bad)
cmp
inc
inc
std
add
rol
(bad)
mov
inc
add
mov
add
(bad)
cmp
add
inc
jb
push
std
add
adc
ret
lods
ss
add
add
outs
imul
xor
add
addr16
add
mov
stc
(bad)
cwde
or
push
(bad)
mov
inc
std
add
mov
inc
jmp
mov
add
add
push
sub
fadd
add
inc
jb
pop
std
add
adc
add
lods
ss
add
(bad)
ins
cld
add
jmp
mov
add
stc
cbw
or
push
(bad)
rol
inc
std
add
sahf
add
add
mov
add
add
push
xor
add
inc
jb
(bad)
std
add
adc
add
lods
ss
add
sahf
ins
cld
add
jmp
xor
add
stc
scas
cwde
or
push
(bad)
fld
inc
std
add
test
jmp
mov
add
add
push
mov
cmp
add
inc
jb
cmp
add
(bad)
scas
add
lods
ss
add
add
push
imul
pop
push
(bad)
jmp
push
inc
add
push
fwait
or
push
(bad)
mov
add
sbb
inc
std
add
sub
add
(bad)
xchg
or
add
push
adc
nop
add
inc
jb
mov
ds
add
mov
cmp
inc
lea
call
retf
in
div
add
outs
or
adc
add
sbb
rol
loop
sub
push
jl
jmp
inc
mov
mov
jno
add
test
dec
xchg
stc
sahf
fwait
or
or
int
jb
jae
dec
call
nop
inc
mov
sbb
inc
retf
add
xor
push
mov
cmp
inc
add
inc
jb
ja
add
adc
scas
add
lods
ss
add
push
push
add
jmp
(bad)
inc
add
stc
push
call
add
sbb
inc
std
add
cs
inc
jmp
nop
or
add
push
adc
fadd
push
adc
push
inc
jb
ja
add
adc
lods
add
lods
ss
inc
add
into
push
add
jmp
(bad)
inc
add
stc
pop
call
add
sbb
cmp
inc
jmp
nop
or
add
push
mov
sbb
add
inc
jb
or
lods
add
lods
push
or
add
arpl
add
jmp
xor
add
(bad)
call
add
sbb
std
add
inc
inc
jmp
nop
or
add
push
loop
add
(bad)
xor
inc
add
inc
jb
(bad)
mov
lods
add
lods
push
or
add
sub
xor
inc
inc
push
(bad)
jmp
xor
add
push
ror
push
(bad)
mov
add
sbb
mov
rol
inc
jmp
(bad)
or
add
push
push
dec
add
(bad)
cmp
inc
add
inc
jb
or
les
push
lods
ss
inc
add
out
cld
add
jmp
xor
add
fwait
ror
push
(bad)
mov
add
sbb
std
add
inc
inc
jmp
(bad)
or
add
push
jb
add
(bad)
cmp
inc
add
inc
jb
ja
add
adc
mov
inc
add
scas
aas
cld
add
jmp
push
add
stc
add
or
push
(bad)
or
dec
sar
push
cdq
mov
cs
cmp
push
push
mov
add
inc
mov
sbb
add
push
jp
sbb
sar
push
jp
sbb
sar
push
cmp
push
ret
hlt
jne
jmp
ret
hlt
mov
add
add
sub
add
inc
add
lea
cmc
push
mov
or
ins
add
bound
inc
mov
dec
adc
cld
jp
push
lods
inc
xchg
adc
pushf
adc
add
lods
dec
enter
add
lods
dec
pushf
adc
push
cmp
inc
lea
jo
add
out
mov
(bad)
lea
rcl
mov
jno
lods
sub
mov
mov
stc
sahf
les
dec
(bad)
xor
push
cmp
mov
mov
inc
add
retf
add
push
adc
dec
inc
std
add
adc
ret
add
lods
ss
add
add
jbe
cld
add
cmp
jmp
jmp
or
push
mov
sbb
dec
add
push
cmp
inc
jmp
lds
add
add
push
push
cwde
add
(bad)
sub
add
inc
jb
fwait
std
add
adc
push
or
add
jns
cld
add
jmp
jp
add
stc
dec
(bad)
or
push
(bad)
xor
cwde
mov
push
or
add
jecxz
or
add
push
bound
add
push
adc
inc
jb
repz
add
adc
add
lods
lods
add
add
jle
cld
add
jmp
scas
inc
add
mov
or
push
(bad)
jns
add
sbb
mov
push
add
add
test
movs
sub
add
jo
jo
pop
es
sar
add
add
outs
std
add
adc
ret
jmp
xchg
push
pop
add
repnz
fisubr
lods
inc
add
hlt
mov
inc
add
or
add
xor
lds
push
(bad)
jmp
jp
add
stc
es
or
push
(bad)
xor
lock
push
inc
jmp
les
add
add
push
pop
add
(bad)
xor
add
inc
jb
inc
std
add
adc
add
lods
push
test
add
mov
cld
add
jmp
sub
add
stc
mov
or
or
push
pop
add
repnz
fisubr
lods
inc
add
hlt
mov
std
add
push
jp
add
aad
dec
push
add
inc
mov
imul
dec
cmp
add
leave
add
add
add
jb
inc
inc
add
add
clc
add
ds
add
jmp
jbe
add
stc
and
or
push
(bad)
icebp
add
add
add
mov
inc
or
add
push
or
add
push
adc
cmp
jg
add
adc
enter
ss
add
add
ss
cld
add
jmp
push
inc
add
inc
ror
push
(bad)
sbb
add
add
mov
add
inc
(bad)
or
add
push
bound
add
push
adc
cmp
dec
inc
add
xchg
mov
or
add
stos
cmp
add
dec
push
add
inc
cdq
shr
outs
sub
add
sbb
add
add
js
xlat
add
add
lock
jmp
adc
dec
xor
inc
loope
cmp
jmp
lods
retf
add
add
(bad)
add
(bad)
cmp
add
inc
jb
sar
add
adc
enter
ss
add
inc
cld
add
jmp
dec
inc
add
inc
or
push
(bad)
std
pop
add
sbb
mov
ret
add
faddp
or
add
push
sub
add
push
adc
inc
jb
jg
add
adc
add
lods
push
cmp
add
xor
pop
push
(bad)
jmp
push
inc
add
mov
or
push
(bad)
std
pop
add
sbb
std
add
push
or
add
pop
mov
sub
add
push
pop
dec
inc
lea
or
mov
(bad)
outs
sub
push
pop
add
(bad)
lods
ss
add
inc
cld
add
push
push
or
add
sub
in
fidiv
xchg
adc
shr
xlat
add
add
mov
add
add
retf
add
xor
jns
push
(bad)
jmp
into
inc
add
out
or
push
(bad)
or
xor
mov
add
cmps
(bad)
or
add
push
add
add
push
adc
cmp
add
repz
add
adc
mov
lods
push
xor
add
retf
ss
add
dec
push
add
jmp
aad
adc
dec
xor
inc
add
add
mov
stc
ds
or
les
push
inc
adc
shl
pop
pop
sub
add
inc
inc
add
cmps
inc
add
push
mov
jmp
(bad)
icebp
add
add
add
mov
inc
jmp
leave
or
add
push
jb
add
(bad)
cmp
add
inc
jb
inc
inc
add
sahf
mov
lods
ss
add
scas
inc
cld
add
jmp
inc
mov
push
mov
mov
add
aaa
adc
add
mov
cld
mov
adc
mov
sbb
add
push
mov
sbb
mov
add
dec
sbb
mov
dec
sbb
mov
add
sub
adc
or
outs
pop
add
test
jmp
pusha
add
mov
adc
lds
push
lods
add
add
cs
cld
add
jmp
inc
mov
cmps
inc
add
inc
mov
sbb
jo
add
jmp
or
inc
or
add
es
jne
jmp
enter
lods
inc
add
add
mov
add
push
adc
(bad)
add
sub
add
adc
movs
push
push
popa
les
push
adc
(bad)
add
(bad)
inc
add
jp
add
lods
push
add
add
imul
add
jmp
or
add
stc
jns
or
or
int
jb
mov
push
cmp
int3
adc
push
push
stos
ret
adc
xchg
add
pop
add
push
add
add
push
out
add
(bad)
xor
add
push
adc
(bad)
sbb
(bad)
dec
inc
jb
(bad)
adc
dec
inc
jb
xchg
add
adc
add
push
adc
les
push
adc
inc
jb
xchg
add
adc
sub
push
mov
lods
es
aad
das
adc
mov
add
add
fwait
cmp
add
push
cmp
jle
or
add
push
mov
add
(bad)
cmp
add
push
adc
inc
jb
or
add
adc
ss
add
add
mov
cld
add
jge
repnz
inc
pusha
(bad)
(bad)
mov
add
add
add
pop
inc
add
(bad)
xor
add
inc
jb
or
add
adc
mov
enter
push
push
popa
les
push
adc
dec
xchg
add
adc
mov
dec
add
add
push
cmp
add
jge
repnz
inc
pusha
(bad)
dec
push
inc
add
es
jl
add
ss
add
jmp
mov
ss
add
mov
add
add
(bad)
cmp
add
jmp
jb
add
stc
data16
or
add
add
pop
aad
jge
repnz
inc
pusha
(bad)
(bad)
mov
add
in
loopne
add
add
mov
xchg
push
inc
jmp
mov
aaa
in
inc
call
add
mov
xchg
push
inc
jmp
mov
aaa
in
and
or
push
dec
or
adc
shl
xlat
std
push
mov
vmread
mov
hlt
fisubr
add
push
pop
jb
mov
add
adc
mov
xchg
call
xor
test
mov
jb
add
stc
es
or
add
add
pop
aad
cmp
jmp
jb
add
stc
inc
iret
or
add
add
pop
aad
cmp
jmp
jb
add
stc
iretw
or
add
add
pop
aad
push
aad
push
(bad)
jmp
add
add
push
sbb
dec
(bad)
rol
add
sbb
(bad)
std
add
xor
invd
add
add
push
mov
xor
add
inc
jb
xchg
add
adc
add
lods
push
dec
add
add
imul
add
jmp
add
add
call
add
add
xchg
push
inc
jmp
mov
add
add
push
into
xor
add
push
adc
scas
dec
xor
push
mov
ja
add
clc
lds
add
push
inc
inc
sbb
pushf
outs
adc
(bad)
mov
add
pop
adc
dec
inc
jb
mov
add
adc
das
add
lods
push
adc
add
jnp
cld
add
jmp
cmp
add
stc
sub
or
push
dec
sbb
inc
sbb
dec
(bad)
or
jae
std
add
fiadd
inc
jmp
push
or
add
push
inc
mov
add
push
adc
push
outs
inc
add
dec
das
add
lods
push
inc
add
add
mov
cld
add
jmp
sub
add
stc
mov
or
push
(bad)
test
dec
mov
add
inc
mov
add
xchg
mov
cmps
or
dec
sub
dec
jmp
bnd
pop
add
pop
das
cs
add
inc
inc
xor
pushf
outs
adc
pop
adc
inc
inc
jb
sbb
(bad)
inc
inc
jb
aas
inc
add
add
add
lods
push
jl
add
repz
cld
add
jmp
rol
add
stc
jnp
or
push
(bad)
icebp
add
add
mov
mov
sti
add
add
push
inc
add
(bad)
xor
add
push
adc
inc
add
iret
adc
gs
lods
jnp
add
push
iret
push
add
(bad)
xor
add
push
adc
sar
add
aaa
add
add
dec
add
lods
push
jl
add
pop
push
cld
add
jmp
repnz
add
mov
or
push
(bad)
push
add
add
add
add
adc
jnp
add
push
daa
push
add
(bad)
xor
add
push
adc
push
xchg
add
adc
rol
push
lods
push
pop
add
add
push
jmp
movs
add
call
bound
add
stc
repnz
dec
pop
mov
jb
push
inc
jmp
adc
add
add
push
inc
inc
add
(bad)
cmp
add
push
adc
inc
inc
jb
pop
inc
add
cs
jl
add
fidivr
add
jmp
add
add
stc
outs
enter
pop
imul
push
inc
jmp
adc
add
add
push
jp
add
(bad)
cmp
add
inc
jb
xchg
add
adc
rol
push
lods
push
pop
add
add
sub
add
jmp
bound
add
stc
(bad)
enter
(bad)
popf
add
add
add
add
xchg
mov
sub
add
push
rol
add
push
adc
inc
inc
jb
xchg
add
adc
add
lods
push
pop
add
add
push
cld
add
jmp
add
add
push
retf
or
push
mov
call
jb
push
inc
jmp
mov
add
add
push
inc
add
(bad)
xor
add
push
adc
inc
jb
cmps
inc
add
adc
lods
push
jl
add
mov
push
movs
add
inc
pop
add
hlt
push
add
add
stos
mov
inc
xchg
call
xor
test
mov
add
add
stc
cmps
retf
or
add
add
pop
aad
cmp
jmp
add
add
(bad)
retf
or
push
(bad)
popa
add
add
add
ror
push
jne
in
sub
push
(bad)
popf
add
add
add
add
cmps
ror
hlt
mov
add
add
add
add
(bad)
cmp
add
inc
add
mov
add
add
add
and
add
(bad)
cmp
add
push
adc
inc
inc
jb
cmps
inc
add
push
mov
cld
add
add
mov
jge
repnz
pop
inc
pusha
(bad)
dec
xchg
add
adc
mov
cld
add
add
fidivr
cld
add
jmp
mov
out
pop
add
mov
add
add
stos
push
cld
add
jmp
bound
add
stc
pop
inc
or
push
(bad)
popf
add
add
add
add
mov
mov
add
add
call
add
push
adc
push
xchg
add
adc
xlat
add
lods
ss
add
add
data16
add
jmp
inc
mov
retf
add
add
inc
lea
rcl
ins
push
add
dec
sub
lods
sub
dec
mov
push
jl
jmp
jbe
add
stc
es
dec
(bad)
jge
add
sbb
mov
add
dec
sbb
jb
push
inc
jmp
mov
add
sub
ja
add
push
(bad)
pop
add
(bad)
jl
push
cmp
add
icebp
outs
add
add
xchg
push
inc
inc
icebp
clc
or
aam
push
mov
inc
bnd
jb
add
pop
sbb
adc
push
lods
push
push
add
add
cmp
xor
jne
push
(bad)
jmp
inc
add
add
sahf
mov
dec
(bad)
mov
push
cmp
add
add
mov
mov
inc
add
retf
add
push
adc
dec
xchg
std
add
adc
aam
push
lods
ss
add
add
jbe
cld
add
cmp
jmp
inc
add
push
mov
dec
mov
sbb
mov
mov
cmp
imul
add
(bad)
les
add
push
adc
jae
add
imul
add
lock
aad
sbb
adc
dec
dec
fiadd
add
xor
jne
push
(bad)
jmp
lods
or
add
push
ja
add
(bad)
xor
add
inc
jb
pop
std
add
adc
add
lods
push
push
add
add
mov
cld
add
jmp
outs
inc
add
mov
(bad)
xor
aas
std
add
xchg
add
add
leave
mov
or
add
push
xchg
add
(bad)
xor
add
inc
jb
aas
std
add
adc
aad
push
lods
push
push
add
add
sti
push
cld
add
jmp
outs
inc
add
and
mov
fld
test
jmp
mov
add
add
push
or
(bad)
cmp
add
inc
jb
mov
sub
add
lods
push
inc
add
add
jecxz
cld
add
jmp
cmp
add
stc
inc
mov
dec
(bad)
add
add
retf
add
jns
or
add
push
jg
add
(bad)
xor
add
inc
jb
xchg
std
add
adc
add
mov
cmp
inc
lea
lock
out
add
outs
or
adc
mov
add
dec
loope
lods
sub
mov
hlt
add
add
stc
(bad)
add
scas
std
add
out
add
mov
add
add
push
cmovle
add
push
adc
cmp
add
pop
std
add
adc
rol
push
lods
sub
add
outs
dec
cld
add
jmp
inc
cld
add
stc
inc
mov
add
scas
std
add
out
add
mov
add
add
push
addr16
add
(bad)
xor
or
inc
jb
pop
std
add
adc
add
lods
sub
add
(bad)
dec
cld
add
jmp
inc
cld
add
stc
mov
add
scas
std
add
out
add
mov
add
add
push
lahf
dec
add
(bad)
xor
or
inc
jb
pop
std
add
adc
add
lods
sub
add
sahf
dec
cld
add
jmp
inc
cld
add
stc
repz
add
scas
std
add
out
add
mov
add
add
push
test
or
inc
jb
pop
std
add
adc
rol
push
lods
sub
add
push
push
cld
add
jmp
inc
cld
add
stc
cmp
add
lods
std
add
out
add
mov
add
add
push
outs
dec
add
(bad)
xor
or
inc
jb
pop
std
add
adc
fadd
push
lods
sub
add
into
push
cld
add
jmp
inc
cld
add
stc
mov
mov
test
std
add
out
add
mov
add
add
push
(bad)
dec
add
(bad)
xor
or
inc
jb
pop
std
add
adc
sub
add
mov
cld
add
jmp
inc
cld
add
stc
jmp
or
push
mov
push
lods
std
add
out
add
mov
add
add
push
dec
(bad)
xor
or
inc
jb
pop
std
add
adc
fadd
push
lods
sub
add
(bad)
push
cld
add
jmp
inc
cld
add
stc
push
mov
popf
add
add
jp
inc
jmp
lods
or
add
push
push
dec
add
(bad)
xor
add
inc
jb
pop
std
add
adc
add
lods
ss
inc
add
out
cld
add
jmp
add
add
stc
fwait
mov
add
lods
std
add
sahf
or
add
jbe
or
add
push
iret
dec
add
(bad)
xor
or
inc
jb
mov
add
adc
ss
add
add
scas
push
cld
add
jmp
add
add
stc
mov
(bad)
jne
add
sbb
std
add
add
add
sahf
mov
add
add
push
jmp
add
inc
jb
mov
add
adc
(bad)
add
lods
ss
add
add
push
push
cld
add
jmp
add
add
stc
es
dec
(bad)
jne
add
sbb
stos
std
add
add
add
out
or
add
push
inc
pop
add
(bad)
cmp
add
inc
jb
aas
add
add
cs
add
lods
ss
add
add
ficom
add
jmp
add
add
stc
outs
mov
dec
(bad)
pop
add
stos
std
add
add
add
mov
daa
inc
add
jp
add
(bad)
cmp
add
inc
jb
add
add
adc
ss
inc
push
cld
add
jmp
(bad)
inc
add
(bad)
mov
dec
(bad)
or
add
add
mov
inc
jmp
mov
ret
inc
add
rcr
add
push
adc
sub
add
addr16
add
adc
aad
push
lods
ss
add
push
push
cld
add
jmp
and
add
stc
push
mov
dec
(bad)
xchg
add
stos
std
add
into
add
add
ds
(bad)
add
push
dec
push
add
(bad)
cmp
add
inc
jb
idiv
add
adc
add
lods
ss
add
not
add
jmp
mov
add
stc
xchg
in
add
add
add
xor
inc
jmp
mov
sldt
add
mov
cmp
add
inc
jb
iret
add
add
mov
add
lods
ss
add
push
cld
add
jmp
retf
add
into
mov
dec
(bad)
int
add
sbb
stos
std
add
call
or
add
push
ficom
add
push
adc
cmp
add
adc
add
adc
int3
add
lods
ss
add
es
cld
add
jmp
push
cld
add
stc
ss
mov
add
sbb
test
add
out
add
stos
or
add
push
xor
add
push
adc
cmp
add
scas
add
add
or
xor
or
inc
jb
dec
add
add
mov
add
lods
push
pop
inc
add
inc
dec
cld
add
jmp
loop
add
stc
retf
mov
push
pop
add
sbb
std
add
pop
or
add
cdq
scas
or
add
push
fist
add
push
adc
dec
pop
add
add
scas
int3
add
lods
ss
add
pop
inc
cld
add
jmp
push
cld
add
dec
or
adc
shl
arpl
add
add
mov
push
stos
or
inc
add
es
cld
add
jmp
cmp
add
stc
ss
icebp
pop
add
sbb
aaa
std
add
mov
ss
or
add
push
xor
add
push
adc
cmp
add
stos
add
add
pop
retf
add
lods
ss
add
out
dec
cld
add
jmp
mov
ret
mov
cdq
add
add
mov
shl
arpl
add
push
stos
dec
add
(bad)
xor
or
inc
jb
stos
add
add
(bad)
retf
add
lods
ss
add
push
dec
cld
add
jmp
mov
add
stc
or
push
pop
add
sbb
mov
pop
or
add
fnstenv
inc
std
add
push
add
(bad)
xor
add
inc
jb
jmp
add
adc
int
push
lods
push
pop
inc
add
retf
dec
cld
add
jmp
data16
add
stc
jae
or
push
(bad)
popf
add
add
jp
inc
jmp
mov
add
add
push
cmp
(bad)
cmp
or
inc
jb
pop
add
adc
ss
add
xchg
add
jmp
push
add
add
xchg
mov
mov
add
sbb
std
add
pop
or
add
push
lods
or
add
push
xchg
dec
add
(bad)
xor
add
inc
jb
scas
inc
add
add
add
mov
and
add
cvttps2pi
(bad)
lds
push
mov
stc
fidivr
sub
or
mov
(bad)
outs
sub
movs
pop
add
or
add
push
inc
cld
add
push
push
or
add
popa
sub
add
(bad)
clc
(bad)
cmp
or
inc
xor
push
cld
add
dec
or
adc
shl
arpl
add
adc
sahf
or
add
dec
lods
or
inc
add
out
cld
add
jmp
cmps
cld
add
stc
fwait
in
dec
(bad)
ins
pop
add
sbb
std
add
jp
inc
jmp
lods
or
add
push
jb
add
(bad)
cmp
or
inc
jb
stos
add
add
sahf
leave
add
lods
ss
add
scas
inc
cld
add
jmp
add
add
stc
add
or
push
(bad)
sub
dec
cmps
std
add
pop
or
add
adc
or
add
push
ficomp
lods
or
inc
jb
dec
add
add
or
add
lods
push
cmp
add
ret
and
add
jmp
push
cld
add
stc
es
popf
add
add
jp
inc
jmp
scas
or
add
push
inc
push
add
(bad)
cmp
add
inc
jb
dec
inc
add
rol
push
lods
ss
add
fimul
add
jmp
mov
add
stc
mov
or
push
(bad)
sub
js
std
add
out
add
scas
or
add
push
mov
add
(bad)
cmp
or
inc
jb
adc
add
adc
jecxz
push
lods
push
ins
add
add
jae
cld
add
jmp
inc
cld
add
stc
sti
out
dec
(bad)
push
pop
add
sbb
sahf
std
add
pop
or
add
or
or
add
push
das
add
(bad)
xor
add
inc
jb
jmp
add
adc
add
lods
push
pop
inc
add
mov
cmp
jmp
data16
add
stc
arpl
or
push
(bad)
mov
fwait
sahf
std
add
pop
or
add
xor
or
add
push
xchg
(bad)
xor
or
inc
jb
dec
add
add
imul
push
lods
ss
add
test
cmp
jmp
cmps
cld
add
stc
xchg
push
pop
add
sbb
jb
or
add
mov
lods
inc
std
add
push
mov
xor
add
inc
jb
jmp
add
adc
loop
push
lods
push
pop
inc
add
imul
add
(bad)
jmp
into
cld
add
stc
into
mov
sub
or
sahf
or
add
loope
or
add
push
pop
arpl
add
push
adc
and
add
aas
add
add
test
push
lods
ss
add
es
cld
add
jmp
into
cld
add
stc
ss
sub
shl
or
add
ss
add
add
push
xor
add
push
adc
xor
add
dec
add
add
mov
push
mov
add
fwait
push
cld
add
jmp
data16
add
stc
jle
or
push
(bad)
popf
add
add
mov
pop
mov
add
add
push
stos
push
add
pop
add
add
jb
dec
add
add
(bad)
into
add
lods
ss
add
push
dec
cld
add
jmp
data16
add
stc
out
or
push
(bad)
sub
xor
sahf
or
add
cmps
mov
add
add
push
add
add
push
adc
xor
add
rol
add
adc
call
cmp
inc
lea
loopne
add
(bad)
xchg
add
outs
or
adc
adc
in
lods
sub
add
add
jl
jmp
(bad)
mov
mov
stc
mov
push
xchg
dec
(bad)
jge
add
sbb
jb
add
add
jno
or
jbe
or
mov
arpl
add
push
jp
add
lea
add
mov
hlt
fisubr
add
test
add
add
mov
add
jmp
(bad)
sbb
mov
or
add
add
or
add
push
imul
add
imul
add
push
adc
push
inc
jb
pop
adc
push
inc
jb
mov
add
mov
add
mov
add
jae
add
adc
push
lods
mov
add
push
pop
cld
add
jmp
mov
mov
in
xchg
add
add
push
test
dec
dec
cmp
dec
xchg
stc
push
in
dec
(bad)
sbb
mov
mov
add
mov
or
add
push
scas
imul
cmc
push
mov
or
pop
add
jmp
ret
push
mov
adc
push
push
ret
imul
xor
sbb
mov
pop
lods
cmc
push
mov
or
fnstcw
inc
inc
or
pushf
outs
adc
push
add
ja
mov
inc
js
ja
leave
and
mov
add
mov
cmp
je
inc
icebp
clc
jge
add
cmp
(bad)
mov
repz
inc
xor
sbb
sbb
cld
add
pushf
leave
shl
ins
(bad)
lea
rcl
ins
rol
dec
aad
lods
sub
dec
pop
add
push
jl
jmp
inc
mov
pop
cmp
in
iret
ret
add
test
dec
stc
dec
or
adc
shl
inc
or
adc
inc
lea
cmc
push
mov
or
adc
inc
inc
pop
leave
pushf
outs
adc
addr16
push
adc
jp
push
popa
pop
aad
pushf
leave
shl
ins
(bad)
lea
rcl
in
rol
dec
inc
mov
pop
add
add
adc
dec
out
cdq
mov
cs
or
aaa
adc
inc
add
push
add
jl
adc
pop
pusha
vmread
mov
mov
inc
bnd
ret
add
inc
mov
dec
adc
ins
call
push
scas
(bad)
cli
je
inc
icebp
clc
(bad)
les
(bad)
cmp
mov
jge
repz
sbb
leave
shl
ins
(bad)
lea
rcl
cmp
sbb
cmp
add
adc
mov
out
cdq
mov
cs
or
aaa
adc
into
dec
push
add
jl
adc
pop
pusha
vmread
mov
mov
inc
bnd
les
inc
fisttp
adc
sbb
push
push
mov
cmp
je
inc
icebp
clc
sbb
lock
mov
repz
xor
sub
add
pushf
leave
shl
ins
(bad)
lea
rcl
int
add
dec
in
lods
sub
stos
pop
add
push
mov
jmp
inc
mov
(bad)
cmp
in
das
lds
add
icebp
clc
ins
mov
mov
repz
push
inc
xor
pop
repz
cld
add
cld
add
cld
add
pushf
leave
shl
ins
(bad)
lea
rcl
ins
mov
mov
pop
add
push
mov
jmp
into
jmp
repnz
inc
mov
pop
inc
add
inc
mov
sbb
push
add
push
mov
sbb
mov
sbb
std
add
inc
sbb
mov
sbb
cdq
mov
cs
and
push
push
ret
imul
sbb
sub
(bad)
pop
add
lea
cmc
push
mov
or
push
mov
inc
inc
nop
aad
outs
adc
gs
add
lea
cmc
push
mov
or
stc
mov
inc
inc
adc
outs
adc
scas
dec
xor
push
mov
mov
inc
bnd
lds
inc
xor
adc
ins
mov
cmp
je
inc
icebp
clc
(bad)
mov
cmp
ror
inc
xor
sbb
add
pushf
leave
shl
ins
(bad)
lea
rcl
cmp
popf
mov
sub
cmp
add
mov
jmp
inc
mov
out
retf
in
lahf
les
add
test
dec
mov
dec
mov
int
jb
jae
dec
loopne
sbb
mov
sbb
push
add
push
jp
sbb
cdq
mov
cs
inc
leave
aaa
adc
cmp
pop
push
add
xor
icebp
push
mov
dec
enter
outs
cs
cmp
pusha
push
xlat
lahf
add
pop
add
inc
js
dec
xor
push
mov
ja
push
inc
inc
icebp
clc
jne
add
or
add
inc
inc
fcomp
pushf
outs
adc
add
adc
scas
dec
xor
push
mov
mov
inc
bnd
mov
push
dec
adc
mov
or
(bad)
out
push
mov
or
or
repz
and
add
jge
pop
sub
pop
add
jl
add
pop
stc
push
loopne
dec
mov
sub
add
shl
call
push
inc
imul
outs
sbb
sub
add
mov
or
adc
fisubr
jmp
xor
fimul
shr
ficomp
mov
std
add
shl
call
push
pop
imul
jmp
mov
cmps
or
mov
push
mov
dec
mov
imul
cmp
fcom
stos
imul
jo
arpl
inc
push
inc
js
ja
leave
cmp
(bad)
out
push
mov
or
or
add
jge
pop
sub
pop
add
jl
add
xor
sbb
shl
call
push
shr
add
sub
adc
fld
push
mov
or
or
lock
xor
fiadd
loopne
std
add
or
icebp
movs
std
add
mov
cs
adc
aaa
adc
jb
push
add
ss
cmps
or
mov
push
mov
or
push
push
mov
cld
mov
adc
mov
sbb
push
add
push
cdq
mov
cs
adc
cmp
push
add
rcr
add
xor
icebp
push
mov
inc
mov
ret
imul
pusha
lahf
inc
(bad)
je
push
out
pop
add
lea
cmc
push
mov
or
push
mov
inc
inc
push
rcr
add
ja
fwait
inc
js
dec
xor
push
mov
mov
inc
bnd
rol
mov
pushf
popf
push
push
lods
jbe
adc
out
push
lods
jbe
adc
in
push
lods
jle
adc
into
add
mov
cmp
je
inc
icebp
clc
(bad)
(bad)
cmp
mov
repz
pop
inc
adc
add
mov
cmp
je
inc
icebp
clc
in
add
cmp
mov
repz
inc
adc
push
cmp
je
inc
icebp
clc
add
cwde
ror
inc
xor
inc
repz
cld
add
pushf
leave
shl
ins
(bad)
lea
rcl
aad
add
dec
cmp
ret
add
mov
jmp
call
fwait
inc
mov
fwait
inc
add
inc
lea
rcl
popf
mov
mov
sub
call
jmp
inc
mov
sbb
retf
in
jg
add
test
dec
int
jb
jae
dec
in
mov
adc
mov
sbb
add
push
stos
dec
sbb
std
add
pop
sbb
fwait
std
add
mov
cs
jge
push
push
push
mov
cld
mov
adc
mov
sbb
push
add
add
push
jne
in
outs
jb
add
pop
lods
cmc
push
mov
or
adc
inc
inc
cmp
push
add
xor
push
mov
mov
inc
bnd
mov
cmp
adc
push
push
mov
or
lods
push
add
mov
cmp
je
inc
icebp
clc
sub
inc
mov
jo
add
jge
add
xchg
add
mov
int
jb
jae
dec
clc
mov
adc
mov
sbb
cdq
mov
cs
or
aaa
adc
add
push
add
aaa
dec
or
xor
icebp
push
mov
test
dec
inc
imul
cwde
mov
add
pusha
add
lea
cmc
push
mov
or
sbb
inc
inc
mov
push
add
adc
push
jne
in
mov
jmp
push
adc
adc
mov
sbb
dec
add
add
pop
es
push
mov
jmp
inc
mov
(bad)
cmp
in
fistp
mov
test
dec
int
jb
jae
dec
clc
mov
adc
mov
sbb
dec
add
push
inc
pop
add
xchg
or
add
push
jp
add
lea
cmc
push
mov
or
test
bnd
mov
add
push
ret
imul
jo
inc
lea
shl
add
mov
or
in
xor
add
mov
dec
add
adc
mov
add
dec
xor
push
mov
mov
inc
bnd
mov
ss
adc
lods
mov
push
push
adc
les
mov
or
adc
cmp
add
mov
push
add
push
adc
xchg
push
push
popa
pop
aad
pushf
leave
shl
ins
(bad)
lea
rcl
or
sbb
jmp
mov
pop
cmp
in
xlat
mov
mov
test
dec
xchg
stc
xchg
out
or
push
xchg
dec
int
jb
jae
dec
mov
sbb
lea
rcl
popf
mov
add
iret
lods
sub
call
jmp
ret
inc
pop
add
fwait
inc
mov
mov
mov
inc
clc
xchg
iret
add
cmp
mov
repz
xchg
push
repz
cld
add
cld
add
jmp
shr
ret
mov
add
mov
jmp
inc
mov
jg
add
mov
adc
lea
rcl
adc
popf
int3
lods
sub
add
add
mov
jmp
cmps
jmp
retf
mov
add
mov
jmp
mov
add
mov
jmp
inc
mov
out
cmp
in
out
mov
mov
xchg
add
push
dec
loope
pop
cmp
dec
int
jb
jae
dec
call
cmp
add
call
sbb
nop
std
add
inc
sbb
nop
std
add
mov
cs
inc
leave
aaa
adc
add
push
add
or
or
ret
add
push
arpl
add
adc
push
add
jmp
push
jae
or
leave
aaa
adc
mov
int3
xchg
add
xor
icebp
push
mov
mov
push
push
ret
imul
sar
lods
cmc
push
mov
or
or
inc
inc
aam
pushf
outs
adc
dec
add
adc
pop
inc
jb
iret
adc
pop
inc
js
dec
xor
push
mov
mov
inc
bnd
mov
add
xlat
inc
dec
adc
or
push
push
mov
cmp
je
inc
icebp
clc
sub
sbb
mov
repz
cs
cmc
repz
pushf
leave
shl
ins
(bad)
lea
rcl
popf
mov
add
ret
lods
sub
call
jmp
loop
xor
inc
mov
sbb
retf
in
ja
add
test
dec
dec
fyl2xp1
ret
dec
dec
fyl2xp1
xor
or
push
dec
cmp
dec
int
jb
jae
dec
mov
inc
mov
sbb
add
push
mov
sbb
mov
add
push
sub
std
add
push
add
std
add
jb
inc
jmp
aad
add
add
push
xchg
(bad)
je
push
(bad)
je
add
push
adc
inc
js
dec
xor
push
mov
ja
push
inc
inc
icebp
clc
or
dec
add
cmp
add
(bad)
pushf
outs
adc
add
adc
mov
add
not
sbb
adc
mov
add
(bad)
adc
mov
add
sbb
popf
paddd
js
dec
xor
xchg
jge
add
cli
mov
add
add
adc
lods
mov
add
shr
add
mov
jmp
inc
mov
ret
cmp
in
(bad)
mov
mov
xchg
add
add
pop
mov
add
test
cmps
or
mov
push
mov
xchg
mov
cmp
mov
sbb
push
inc
add
(bad)
jl
push
sub
add
lea
add
mov
or
sbb
inc
inc
test
pushf
outs
adc
dec
add
add
lea
cmc
push
mov
or
stc
mov
inc
inc
pop
enter
fmul
js
dec
xor
push
mov
mov
inc
bnd
mov
inc
dec
adc
inc
mov
push
adc
add
js
pop
add
shr
add
xor
adc
ins
inc
(bad)
stos
ficom
mov
xor
mov
adc
xor
add
xchg
iret
push
ins
rcl
pop
out
and
sub
stos
jo
add
sub
adc
push
mov
ins
std
push
stos
ficom
stos
dec
std
add
shr
add
xor
adc
ins
add
stos
ficom
pusha
mov
add
dec
adc
pushf
mov
push
xchg
(bad)
or
cmp
add
js
push
lods
sub
inc
jo
add
push
mov
les
stos
ficom
dec
mov
add
inc
adc
out
push
push
popa
les
in
ficomp
fild
pop
test
sub
inc
bound
mov
push
stos
fidiv
leave
push
nop
imul
cmps
repz
clc
lahf
outs
adc
dec
add
sub
and
mov
bnd
cld
add
adc
dec
add
xchg
mov
clc
inc
into
add
pop
aad
mov
lahf
outs
adc
dec
add
mov
push
test
call
xchg
addr16
lahf
outs
adc
dec
add
into
mov
clc
jbe
add
pop
aad
inc
clc
lahf
outs
adc
add
lock
clc
jle
add
pop
aad
rol
mov
in
and
or
test
call
(bad)
rol
outs
gs
xchg
add
imul
add
jmp
scas
(bad)
in
repnz
pusha
clc
rcl
dec
icebp
sub
add
pop
xor
adc
mov
ins
stos
aam
ficom
xor
jo
ret
ins
rcl
outs
lods
clc
pop
retf
pop
xchg
jmp
or
test
retf
jnp
imul
jg
sub
leave
pusha
pop
add
fild
scas
fcmovnbe
call
rcr
in
cmp
scas
dec
adc
nop
cmc
pop
dec
xchg
cvtps2pd
gs
mov
xor
add
and
loop
fs
in
and
pop
test
inc
mov
add
ja
jmp
push
mov
xchg
out
xor
sub
jbe
mov
aad
push
lods
sub
cmovno
pop
pop
mov
add
inc
adc
xchg
rol
popa
les
dec
xchg
stos
sub
jno
add
jo
adc
xor
jbe
fldcw
adc
push
lods
sub
add
add
mov
push
stos
fisubr
sbb
pushf
outs
mov
sbb
jno
outs
mov
mov
push
stos
(bad)
push
xchg
int3
sub
outs
sub
mov
in
repnz
cmp
add
adc
mov
cvtps2pd
gs
mov
cmp
mov
repnz
adc
lahf
outs
adc
inc
add
ret
test
jmp
mov
in
repnz
inc
pusha
setne
je
sub
mov
jmp
sub
inc
mov
pushf
outs
adc
paddd
mov
lea
adc
(bad)
out
inc
push
cli
push
or
in
stos
ficom
or
add
mov
in
push
pusha
les
cld
js
outs
adc
inc
mov
nop
imul
mov
out
inc
mov
jae
or
lds
pop
imul
cdq
sub
inc
inc
test
add
outs
test
and
aas
mov
add
xor
adc
rol
xchg
in
aad
or
(bad)
rol
mov
in
push
or
(bad)
rol
mov
in
mov
or
test
or
push
pusha
les
rcl
pop
test
jmp
pop
jbe
jo
rol
imul
and
add
call
or
add
fwait
jo
xchg
add
mov
std
add
ins
adc
xchg
add
adc
xchg
add
inc
(bad)
scas
dec
adc
retf
push
xchg
sub
icebp
sub
add
popf
xchg
sub
aad
lods
sub
outs
mov
add
xor
pushf
ja
add
add
test
add
xchg
sub
test
push
mov
add
xor
adc
rol
imul
in
mov
jmp
outs
test
scas
dec
adc
scas
icebp
add
pusha
les
rcl
pop
test
jmp
pop
jbe
jo
rol
imul
(bad)
add
call
xor
cld
add
fwait
jo
xchg
add
push
stos
ficom
fisttp
cdq
sub
inc
mov
pushf
outs
adc
or
popf
xchg
sub
in
push
lods
sub
mov
xor
adc
rol
imul
in
push
xlat
or
test
lods
dec
adc
addr16
add
pusha
les
rcl
pop
test
jmp
pop
jbe
jo
rol
imul
cmp
(bad)
out
xchg
ficomp
mov
repnz
xor
add
fwait
jo
xchg
add
push
stos
ficom
push
mov
add
ins
adc
pop
pushf
outs
adc
inc
mov
outs
test
lea
sub
inc
scas
pop
add
xor
push
lods
sub
fs
add
popf
xchg
sub
sub
daa
scas
pop
add
xor
or
mov
repnz
seta
cdq
sub
push
sbb
cld
add
call
xor
cld
add
fwait
jo
xchg
add
push
stos
ficom
xlat
(bad)
std
add
ins
adc
je
outs
adc
push
inc
mov
std
add
sub
add
push
or
(bad)
(bad)
push
push
sar
imul
ficomp
add
sbb
add
or
inc
sub
mov
jle
adc
mov
push
push
cmp
test
sub
test
ficom
test
mov
popf
fsubr
push
sbb
xchg
push
sbb
push
sbb
dec
push
sbb
sub
test
loop
sbb
mov
mov
outs
mov
sbb
ds
sbb
dec
push
sbb
outs
push
sbb
sbb
sbb
inc
push
sbb
nop
push
sbb
mov
in
fisubr
dec
sbb
movs
dec
sbb
or
js
fsubr
dec
sbb
inc
dec
sbb
push
dec
sbb
adc
test
call
in
fisubr
push
sbb
sub
fsubr
dec
sbb
mov
sbb
loop
sbb
add
test
push
dec
sbb
pop
dec
sbb
or
pop
lods
fsubr
dec
sbb
hlt
dec
sbb
test
into
mov
outs
sbb
sbb
cmp
sbb
mov
test
stos
dec
sbb
ror
test
repnz
sbb
dec
test
sbb
test
cmp
sbb
pop
dec
sbb
or
push
mov
outs
inc
dec
sbb
cmps
pop
sbb
xchg
test
inc
pop
sbb
and
test
or
sbb
rcr
xor
fsubr
pop
sbb
pusha
pop
sbb
push
sbb
inc
pop
sbb
es
sbb
or
test
call
fsubr
pop
sbb
call
outs
jbe
sbb
pop
pop
sbb
cmp
test
sub
test
and
test
cld
inc
sbb
fadd
test
ret
test
movs
inc
sbb
mov
test
je
sbb
ss
sbb
fcom
test
and
test
add
sbb
(bad)
inc
sbb
mov
sbb
fs
sbb
jb
sbb
test
test
jo
sbb
dec
inc
sbb
es
sbb
push
inc
sbb
mov
mov
outs
sahf
inc
sbb
add
mov
outs
bound
cwde
mov
outs
push
inc
sbb
inc
test
or
test
ret
test
scas
inc
sbb
sub
(bad)
sub
adc
fldln2
(bad)
xor
fisubr
push
sbb
out
push
sbb
mov
sahf
fsubr
push
sbb
rol
fsubr
adc
mov
outs
sbb
test
sub
fsubr
dec
sbb
inc
dec
sbb
push
dec
sbb
jl
sbb
xchg
dec
sbb
mov
mov
outs
mov
mov
outs
(bad)
dec
sbb
adc
test
hlt
dec
sbb
push
dec
sbb
sbb
scas
mov
sbb
je
sbb
xchg
jle
fsubr
dec
sbb
mov
mov
sbb
push
dec
sbb
xor
sbb
and
test
inc
dec
sbb
sbb
test
mov
mov
outs
scas
dec
sbb
sub
fsubr
push
sbb
sub
fsubr
push
sbb
mov
mov
sbb
lods
push
sbb
sbb
sbb
test
test
cmp
test
jmp
outs
sub
(bad)
inc
adc
in
fisubr
push
sbb
mov
mov
outs
mov
sbb
jb
sbb
and
test
cld
dec
sbb
sub
fsubr
push
sbb
es
sbb
dec
push
sbb
pop
push
sbb
rcl
test
sub
lahf
outs
cmps
lea
neg
test
jp
push
test
sahf
mov
ds
lahf
outs
repnz
and
lahf
outs
test
outs
sbb
lahf
outs
xor
cmc
lahf
outs
pop
mov
mov
mov
dec
cmc
lahf
outs
scas
mov
addr16
lahf
outs
(bad)
mov
aas
cmc
lahf
outs
mov
cmc
lahf
outs
or
lahf
outs
dec
mov
mov
lahf
outs
cwde
mov
sub
mov
(bad)
neg
test
sub
fwait
outs
xchg
test
mov
cwde
outs
(bad)
push
test
sub
fisubr
dec
push
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
sbb
or
sub
adc
xchg
and
es
adc
sar
inc
jo
sahf
sub
sub
xchg
cmp
stos
sub
in
adc
sar
push
push
outs
adc
dec
sar
es
adc
sar
xchg
test
adc
dec
sar
jnp
rcr
retf
pop
adc
shr
fidiv
sub
pusha
retf
jmp
jbe
mov
add
sub
jg
jmp
scas
cmp
sub
jp
jmp
es
test
movs
jg
dec
xchg
or
popf
mov
mov
adc
xchg
cmp
out
mov
pusha
movs
xlat
adc
cmps
in
imul
pop
inc
fist
mov
jge
mov
sub
sub
xchg
cmp
mov
pop
retf
sub
dec
adc
cmps
in
jle
mov
sub
sub
xchg
cmp
sbb
movs
ins
(bad)
loop
pusha
mov
adc
sar
dec
mov
sub
jb
jmp
push
mov
sub
jp
jmp
test
ja
xchg
fsubr
pusha
mov
adc
xchg
jge
add
sbb
pusha
ror
adc
xchg
cmp
mov
mov
adc
xchg
cmp
call
inc
sub
xlat
adc
cmps
in
imul
daa
jmp
adc
xchg
and
and
imul
(bad)
cmps
popa
int
sahf
lds
fstp
sub
lahf
adc
cmps
in
test
sbb
sub
pushf
adc
cmps
in
test
mov
retf
xchg
cmp
call
lods
cdq
addr16
pop
mov
mov
mov
ins
dec
sub
fld
sbb
adc
shr
fisubr
adc
in
fisubr
(bad)
mov
adc
xchg
sbb
sar
les
xchg
ficomp
test
js
push
test
and
push
test
xlat
inc
push
test
mov
mov
outs
jnp
xchg
(bad)
jo
xchg
jae
jge
xchg
jno
mov
dec
jnp
xchg
(bad)
je
jge
xchg
je
push
adc
add
push
or
lahf
outs
mov
mov
jno
xchg
jae
je
test
mov
adc
xor
test
inc
add
add
add
add
outs
cmp
fisubr
xchg
shr
fisubr
adc
in
(bad)
sub
(bad)
sub
fisubr
adc
in
fisubr
je
or
in
fisubr
adc
in
fisubr
adc
jmp
shr
fisubr
test
ja
lea
pop
sbb
in
and
in
in
dec
movs
xor
push
push
lods
sub
aas
cmp
int
inc
mov
lds
lea
dec
jne
mov
lahf
pop
push
gs
popf
fwait
lods
cmps
popa
pop
pop
movs
mov
jne
ins
mov
xchg
ins
ins
xchg
jne
jne
jns
test
jnp
xchg
add
shr
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
xor
in
mov
test
dec
sub
in
mov
push
sub
in
mov
test
dec
xor
in
mov
test
dec
xor
in
mov
test
sbb
jmp
in
jmp
in
jmp
in
pop
outs
cmps
sbb
cmps
sbb
sbb
jmp
in
pop
outs
test
in
fld
adc
shr
fld
adc
shr
fld
adc
shr
fld
adc
shr
fld
adc
shr
jmp
in
jmp
in
pop
outs
lods
adc
sub
push
test
sub
push
test
sub
push
test
sub
push
test
sub
push
test
sbb
mov
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
xor
in
mov
test
dec
xor
in
mov
push
sub
in
mov
test
dec
xor
in
mov
test
dec
xor
in
mov
test
sbb
jmp
in
jmp
in
jmp
in
pop
outs
cmps
sbb
cmps
sbb
sbb
jmp
out
pop
jo
adc
sub
(bad)
adc
shr
(bad)
adc
shr
(bad)
adc
shr
(bad)
adc
shr
(bad)
and
in
jmp
out
pop
jo
adc
sub
push
test
out
fdiv
adc
into
out
fdiv
adc
into
out
fdiv
adc
into
out
fdiv
adc
into
out
fdiv
and
in
jmp
in
mov
test
dec
xor
in
mov
test
dec
xor
in
mov
test
dec
xor
in
mov
test
dec
or
jmp
in
jmp
in
jmp
in
jmp
in
out
outs
push
and
in
jmp
in
jmp
in
jmp
out
(bad)
adc
shr
(bad)
adc
shr
(bad)
adc
shr
(bad)
adc
shr
(bad)
adc
shr
(bad)
adc
shr
(bad)
adc
shr
(bad)
adc
into
out
fdiv
adc
into
out
fdiv
adc
into
out
fdiv
adc
into
out
fdiv
adc
into
out
fdiv
adc
into
out
fdiv
adc
into
out
fdiv
adc
into
out
fdiv
adc
shr
fisubr
add
out
mov
mov
push
jb
neg
pop
ins
fisub
bound
and
into
shr
scas
dec
xor
xor
mov
cmp
cmp
(bad)
jmp
cs
adc
adc
fcmovbe
out
sbb
sub
loop
(bad)
and
and
or
test
or
push
adc
out
push
hlt
adc
push
cli
repnz
idiv
cli
or
add
(bad)
inc
add
sub
fsubr
mov
scas
aam
aam
sbb
in
pop
and
in
dec
mov
mov
into
mov
mov
cmp
int3
ds
mov
les
bound
ins
mov
push
mov
xchg
jp
xchg
jp
jle
jp
pop
movs
mov
jbe
ins
mov
push
mov
xchg
jp
xchg
jp
jle
jp
jle
add
push
out
mov
mov
push
jb
neg
pop
ins
fisub
bound
and
into
shr
scas
dec
xor
xor
mov
cmp
cmp
(bad)
jmp
cs
adc
adc
fcmovbe
out
sbb
sub
loop
(bad)
and
and
or
test
or
push
adc
out
push
hlt
adc
push
cli
repnz
idiv
cli
or
add
(bad)
inc
add
stos
add
out
mov
mov
push
jb
neg
pop
ins
fisub
bound
and
into
shr
scas
dec
xor
xor
mov
cmp
cmp
(bad)
jmp
cs
adc
adc
fcmovbe
out
sbb
sub
loop
(bad)
and
and
or
test
or
push
adc
out
push
hlt
adc
push
cli
repnz
idiv
cli
or
add
(bad)
inc
add
sub
fsubr
mov
scas
aam
aam
sbb
in
pop
and
in
dec
mov
mov
into
mov
mov
cmp
int3
ds
mov
les
inc
push
data16
dec
outs
xchg
mov
mov
push
push
pushf
call
movs
mov
push
data16
dec
outs
xchg
mov
mov
push
push
pushf
call
test
xchg
es
push
out
mov
mov
push
jb
neg
pop
ins
fisub
bound
and
into
shr
scas
dec
xor
xor
mov
cmp
cmp
(bad)
jmp
cs
adc
adc
fcmovbe
out
sbb
sub
loop
(bad)
and
and
or
test
or
push
adc
out
push
hlt
adc
push
cli
repnz
idiv
cli
or
add
(bad)
inc
add
mov
xor
test
mov
leave
ins
test
jp
imul
jo
test
fs
test
pop
jle
test
xchg
xchg
jns
mov
in
lahf
outs
pop
adc
in
xchg
outs
cmp
sahf
outs
outs
adc
in
fisubr
data16
ins
mov
mov
fisubr
outs
test
mov
push
jns
nop
mov
test
test
mov
outs
push
xchg
jne
sub
mov
xchg
jns
jnp
adc
jne
mov
xor
in
jg
test
jbe
mov
je
xchg
outs
ja
ins
jg
xchg
jl
adc
pushf
mov
mov
jle
mov
adc
lahf
mov
scas
dec
data16
jg
jns
adc
mov
mov
push
xor
jle
jne
sub
in
fisubr
mov
shl
adc
xchg
jb
jb
jnp
outs
mov
nop
nop
mov
ja
jbe
mov
xchg
cdq
dec
jl
jb
jns
jg
mov
ja
jg
dec
xchg
jno
xchg
jle
jg
jbe
jnp
(bad)
popf
jbe
mov
outs
xchg
je
mov
jl
jg
mov
xchg
jns
jnp
xchg
jo
retf
mov
jno
jl
mov
jg
xchg
(bad)
jne
leave
jns
jl
jl
jae
jns
je
sub
in
fisubr
mov
rcl
mov
xchg
mov
ja
leave
jge
jg
ins
push
dec
jne
nop
jne
test
mov
leave
jno
mov
mov
leave
jb
mov
jae
jg
xchg
jno
jge
mov
test
nop
jae
rcr
jns
jle
mov
mov
jnp
mov
leave
jns
mov
leave
jno
mov
jns
je
dec
dec
mov
jns
mov
leave
je
jno
mov
jge
mov
xchg
jl
jne
dec
fs
je
je
dec
bound
xchg
mov
jno
adc
shr
mov
imul
ja
xchg
mov
jge
jnp
dec
mov
jbe
jg
xchg
jbe
xchg
jae
mov
leave
mov
jb
aad
fisubr
mov
rcl
jno
mov
je
jne
ins
leave
jg
jnp
test
jbe
mov
mov
jne
mov
xchg
sub
in
fisubr
mov
rcl
mov
xchg
mov
ja
leave
jns
jae
xchg
bound
xchg
xor
sahf
cdq
mov
leave
jl
jnp
dec
jo
xchg
rcr
jns
jle
mov
mov
jnp
mov
leave
jns
mov
leave
jno
mov
jns
je
sub
mov
push
aam
mov
fwait
dec
jno
jge
xchg
je
jbe
jae
jns
jg
sub
mov
push
aam
jp
nop
mov
leave
jl
mov
nop
jno
jae
test
xlat
jns
adc
mov
push
aam
xchg
jne
dec
data16
jge
jb
jnp
jae
ins
int
xchg
jl
jo
jnp
jne
xchg
jno
jge
mov
test
nop
jae
xlat
jns
adc
mov
push
aam
xchg
jne
dec
data16
jge
jb
jnp
jae
ins
int
xchg
jl
test
xchg
jne
xchg
jno
jge
mov
test
nop
jae
xlat
jns
adc
mov
push
aam
jge
add
mov
mov
jno
jbe
xor
adc
sahf
mov
push
aam
xchg
jne
dec
data16
jge
jb
jnp
jae
ins
int
xchg
jl
popa
xchg
jb
sbb
test
dec
ja
xchg
jns
adc
mov
push
aam
jp
nop
mov
leave
jl
mov
leave
outs
xchg
je
(bad)
outs
ja
ins
mov
shr
fisubr
mov
rcl
jb
mov
xchg
jbe
js
js
jnp
dec
data16
jg
jns
adc
mov
push
aam
jp
mov
mov
lea
jge
jns
add
data16
jg
jns
adc
mov
push
aam
xchg
jne
dec
data16
jge
jb
jnp
jae
ins
int
xchg
jl
mov
dec
addr16
jno
shr
lea
jns
mov
nop
outs
mov
xchg
jno
mov
mov
jg
dec
ja
mov
push
mov
data16
mov
je
mov
jl
jp
jl
outs
xor
jno
mov
pop
outs
ja
jg
mov
mov
mov
mov
bound
or
jns
xchg
mov
ja
mov
jl
jl
outs
xchg
jle
mov
ja
mov
mov
in
fisubr
mov
rcl
jno
mov
je
jne
ins
leave
jg
jnp
test
jg
js
xchg
jbe
push
test
inc
mov
aam
xchg
jne
dec
data16
jge
jb
jnp
jae
ins
int
xchg
jl
jae
imul
nop
ja
mov
in
fisubr
mov
rcl
jo
jno
jae
xchg
mov
jbe
jns
jg
dec
nop
jo
leave
je
jnp
test
scas
shr
fisubr
push
ja
xor
mov
jnp
dec
inc
sub
xchg
jbe
outs
mov
bound
outs
xor
adc
mov
mov
ds
xchg
imul
dec
jno
xchg
ins
int
xchg
xchg
jno
jp
ret
fisubr
jbe
jge
xchg
jg
gs
xchg
jle
sar
jne
mov
ja
dec
adc
in
jns
jnp
adc
popf
in
scas
outs
push
in
fisubr
sub
in
mov
cmp
lahf
outs
sub
xchg
outs
jno
push
test
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
xor
fisubr
adc
in
fisubr
adc
in
fisubr
xor
fisubr
adc
in
fisubr
adc
in
fisubr
xor
fisubr
adc
in
fisubr
adc
in
fisubr
xor
fisubr
adc
in
or
shr
or
sub
cli
xchg
adc
in
mov
test
sub
(bad)
sub
pop
push
sub
sbb
sub
(bad)
hlt
cmc
dec
js
call
mov
scas
cmp
popa
hlt
cld
out
xchg
aas
jo
hlt
cld
out
xchg
aas
lock
jb
outs
xchg
mov
push
test
sub
jne
jl
adc
outs
mov
sub
jnp
sub
mov
adc
nop
jne
sub
jae
sub
jge
mov
mov
test
test
push
xor
in
jbe
mov
fisubr
jno
xchg
je
fisubr
adc
out
fisubr
adc
es
push
ins
int
fild
inc
test
sub
fnsave
mov
(bad)
mov
fisubr
arpl
lea
sub
or
in
shl
adc
cmc
fisubr
adc
mov
xchg
lea
fisubr
addr16
mov
xchg
mov
dec
xor
ins
sar
test
xchg
fisubr
dec
adc
xchg
mov
outs
data16
jne
jg
sub
mov
in
fisubr
mov
pop
data16
xchg
js
jl
adc
xchg
jp
jl
ja
test
sub
je
sub
mov
xchg
mov
test
jne
xchg
je
jb
jno
sub
jne
xchg
xchg
mov
mov
imul
outs
je
jb
xchg
mov
test
push
mov
bound
mov
adc
jg
mov
xchg
pop
shr
fisubr
data16
ins
cmp
adc
jp
add
je
mov
test
mov
test
push
xchg
(bad)
outs
push
data16
pushf
jp
outs
ins
jo
test
test
outs
sub
stos
mov
adc
add
mov
je
ja
nop
jg
jnp
xchg
mov
ja
cmp
adc
stos
test
gs
inc
mov
in
fisubr
inc
jno
adc
xchg
jns
dec
dec
jno
jno
jne
inc
adc
mov
nop
jnp
xor
jns
mov
mov
jg
mov
jns
xchg
mov
adc
scas
jnp
test
mov
jne
mov
inc
jae
ins
int
xchg
mov
mov
test
jg
nop
jbe
sub
mov
cmp
pop
mov
mov
stos
in
fisubr
outs
jno
jno
mov
nop
outs
int
xchg
jl
jae
mov
(bad)
nop
jl
cmp
mov
lea
jo
leave
outs
xchg
mov
jg
mov
jno
mov
mov
int3
fisubr
jns
xchg
dec
js
jae
ins
int
xchg
jp
xor
jae
mov
jbe
jge
jg
cwde
jbe
xchg
sub
jg
jbe
xchg
outs
xchg
mov
jg
mov
jno
mov
mov
int3
fisubr
addr16
jno
jae
dec
bound
dec
xchg
jge
jp
jnp
jne
mov
mov
test
mov
xchg
push
xchg
jns
jg
dec
imul
mov
leave
jp
jns
(bad)
jne
jnp
mov
jns
int
xchg
nop
je
ja
nop
mov
ins
jg
jnp
jne
test
js
jne
jae
mov
leave
outs
xchg
je
jbe
xchg
xchg
ja
ja
jns
add
jnp
mov
lea
jo
leave
ins
mov
jge
jg
cwde
jbe
xchg
sub
jnp
mov
lea
jo
leave
outs
xchg
je
jbe
xchg
xchg
ja
ja
jns
add
jbe
mov
mov
mov
jge
test
dec
mov
jbe
jg
dec
sub
jbe
mov
mov
mov
jge
int
xchg
(bad)
je
ja
int3
fisubr
jo
xchg
jns
jns
mov
nop
imul
outs
dec
addr16
ins
jns
stos
pop
adc
xchg
jg
arpl
test
mov
jnp
jns
xchg
mov
xchg
mov
jbe
jge
jg
xchg
mov
jl
mov
xchg
mov
xchg
outs
mov
pop
cdq
in
fisubr
inc
dec
test
dec
jne
jge
jg
cwde
nop
push
jne
and
mov
(bad)
je
ja
int3
fisubr
data16
leave
jp
jns
(bad)
jne
jnp
mov
xchg
jg
mov
jno
mov
mov
int3
fisubr
data16
leave
jp
jns
(bad)
jne
lea
mov
jle
jae
test
jge
jg
outs
mov
leave
jp
jns
(bad)
jne
xchg
mov
jbe
jge
jg
cwde
jbe
xchg
sub
jae
jbe
jae
mov
jae
jp
jae
ins
xchg
jg
jbe
outs
mov
jns
xchg
dec
js
jae
ins
int
xchg
nop
je
ja
nop
mov
ins
jg
jnp
jne
test
jbe
xchg
ins
mov
jge
jg
cwde
jbe
xchg
sub
jg
jbe
xchg
outs
xchg
je
jbe
xchg
xchg
ja
ja
jns
add
jns
mov
leave
ins
mov
jbe
jb
mov
jg
jbe
xchg
sub
jg
mov
jge
nop
jne
jnp
xchg
jne
dec
fs
jg
mov
jnp
xchg
jbe
xchg
ins
mov
jbe
jb
mov
jg
jbe
xchg
sub
js
jnp
xor
ins
or
jle
fisubr
je
ja
xchg
jge
sub
jne
mov
jbe
mov
jl
jg
dec
sub
cmp
jp
shr
fisubr
jns
mov
outs
mov
jge
(bad)
jbe
inc
adc
jnp
jnp
gs
stos
in
fisubr
mov
fisubr
mov
(bad)
outs
inc
sar
lods
ret
dec
mov
fisubr
mov
fisubr
jg
test
pusha
adc
in
fisubr
stos
adc
ret
outs
inc
adc
ret
adc
in
fisubr
adc
ret
mov
push
adc
in
fisubr
lods
adc
mov
fisubr
jae
ja
jns
sub
ret
cmp
in
fisubr
mov
fisubr
addr16
ins
jns
outs
dec
jno
jp
in
fisubr
pusha
xchg
nop
data16
mov
ja
nop
outs
jns
outs
pop
pusha
test
mov
jne
jle
jnp
mov
jl
jnp
jne
je
fisubr
pusha
mov
mov
test
xchg
je
fisubr
pusha
test
sub
jns
test
mov
data16
shr
fisubr
mov
test
ret
test
retf
test
mov
push
test
jbe
push
test
xchg
rcl
fcomp
test
jbe
push
test
mov
lahf
outs
jp
push
test
pop
mov
test
jb
push
test
jle
push
test
ss
test
cmp
lahf
outs
dec
mov
test
(bad)
sbb
lods
mov
push
test
and
lahf
outs
sbb
lahf
outs
dec
sbb
lahf
outs
es
test
push
rcl
aam
outs
add
lahf
outs
cli
mov
test
adc
lahf
outs
or
lahf
outs
loop
push
test
fidiv
lahf
outs
ret
test
(bad)
mov
test
stos
mov
test
outs
mov
test
cs
test
out
mov
test
scas
mov
test
jb
push
test
es
test
cli
scas
push
test
loop
push
test
into
scas
push
test
call
outs
push
scas
push
test
es
push
test
mov
rcr
test
dec
scas
push
test
loop
push
test
data16
xchg
jns
jnp
imul
jns
je
data16
mov
xchg
lea
xchg
jne
imul
mov
jns
jge
push
jno
jge
fisubr
data16
jns
jge
pop
imul
test
mov
(bad)
jnp
test
cmp
fisubr
jno
cmp
test
mov
je
pop
jp
test
mov
add
in
fisubr
imul
jns
outs
pop
fs
jg
fisubr
addr16
sub
outs
mov
jbe
in
fisubr
jb
jge
in
fisubr
ja
xchg
mov
bound
shr
fisubr
jo
xchg
shr
fisubr
push
xchg
shr
fisubr
add
sub
pop
out
push
xchg
ins
lea
adc
sar
mov
aad
inc
pop
pop
xchg
test
cmp
xor
in
fimul
add
mov
xchg
js
shl
jnp
jns
jge
ja
adc
cmc
fisubr
adc
jp
mov
jno
jl
pushf
jg
push
imul
jbe
adc
xchg
mov
gs
mov
mov
jge
nop
jl
inc
xchg
mov
xchg
jp
jg
sub
stos
mov
push
adc
rcl
mov
adc
rcl
test
imul
mov
push
cmp
jl
jae
ins
aad
dec
mov
xchg
ins
mov
outs
data16
mov
mov
outs
inc
dec
pop
lea
fs
mov
mov
push
dec
pop
xchg
cdq
lahf
pop
dec
imul
pop
jbe
ja
mov
jnp
jne
mov
mov
push
data16
jle
lea
push
jae
test
test
and
pop
test
dec
cmps
pop
test
pop
cmps
pop
test
sbb
pop
test
call
outs
stos
xchg
push
test
cmps
pop
test
inc
cmps
pop
test
add
sahf
outs
leave
cmps
pop
test
xchg
cmps
pop
test
popa
cmps
pop
test
jle
push
test
lods
xchg
push
test
xor
pop
test
add
pop
test
adc
pop
test
in
pop
test
hlt
movs
pop
test
les
outs
int
pop
test
popf
movs
pop
test
sub
fisubr
adc
out
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
fcmovnbe
and
into
in
push
ret
fisubr
outs
retf
jg
sub
mov
push
in
fisubr
and
in
fisubr
xor
in
jae
js
imul
adc
in
je
jbe
imul
or
test
jae
jl
ja
jnp
jnp
mov
fisubr
add
jnp
ja
jle
mov
adc
in
jae
xchg
fisubr
xor
in
jae
jnp
mov
sub
jg
xchg
mov
cmp
in
jae
mov
fisubr
xor
in
xchg
outs
xchg
xor
in
fisubr
add
mov
fisubr
add
jl
adc
jns
mov
xor
in
jae
jnp
mov
sub
jae
mov
jae
lea
fisubr
add
jnp
mov
mov
fisubr
xor
in
jne
jl
jnp
shr
fisubr
xor
in
jle
xchg
jno
sub
mov
xor
in
mov
xor
in
fisubr
add
lea
fisubr
add
mov
fisubr
or
in
fisubr
xor
in
(bad)
outs
mov
mov
add
sub
jnp
jnp
ja
mov
jne
mov
fisubr
sub
in
jno
add
test
fisubr
sub
in
jg
imul
adc
ins
in
jae
jnp
test
add
mov
jnp
test
add
adc
ins
in
je
js
imul
sub
in
je
jbe
adc
js
jle
xchg
mov
xor
in
fisubr
cmp
in
test
test
mov
fisubr
adc
in
enter
adc
xchg
in
fwait
outs
imul
outs
adc
in
jnp
nop
cmp
in
fisubr
add
test
jg
jnp
adc
ins
in
jae
jnp
ins
test
jbe
adc
jge
mov
add
lea
fisubr
xor
in
mov
or
nop
xor
in
jg
sub
jne
jnp
mov
lea
fisubr
adc
in
fisubr
adc
in
jae
nop
adc
in
js
jne
imul
adc
in
mov
cmp
shr
fisubr
add
inc
add
jbe
ja
(bad)
in
fisubr
add
add
inc
adc
in
je
jbe
imul
add
jl
jno
ins
in
(bad)
outs
mov
fisubr
xor
in
jae
pop
add
add
jl
jno
ins
in
(bad)
outs
mov
fisubr
sub
in
jg
ja
jae
je
jbe
pop
add
jne
jne
jl
fisubr
or
sub
fisubr
xor
in
mov
xor
in
jg
pop
adc
in
jae
test
mov
and
in
jnp
jl
mov
nop
add
jbe
ja
jle
je
test
fisubr
xor
in
mov
xor
in
jg
pop
adc
in
jae
test
mov
and
in
jnp
jl
mov
nop
add
jbe
ja
jle
je
test
fisubr
add
mov
jne
jp
ja
jb
cmps
outs
mov
ja
mov
fisubr
adc
in
fisubr
xor
in
jg
sub
jae
nop
add
in
movs
outs
pop
sub
in
jg
pop
je
jbe
xchg
mov
fisubr
adc
in
scas
outs
pop
adc
in
xchg
outs
js
inc
test
pop
xor
shr
fisubr
and
in
fisubr
adc
in
fisubr
adc
in
scas
outs
push
adc
in
lahf
outs
pop
sub
in
lea
or
in
enter
jno
ins
in
jg
pop
or
in
jns
jl
jno
jg
jne
mov
lods
outs
xchg
xor
in
jne
ja
test
jne
xchg
nop
or
jl
test
nop
and
in
je
xchg
xor
in
mov
xor
in
fisubr
adc
in
scas
outs
push
adc
in
lahf
outs
pop
or
in
jns
jl
jno
jg
jne
mov
lods
outs
xchg
xor
in
jne
ja
test
jne
xchg
nop
or
jl
test
nop
and
in
je
xchg
xor
in
mov
xor
in
fisubr
sub
in
mov
xor
in
xchg
outs
mov
fisubr
adc
in
jne
xchg
fisubr
sub
in
mov
xor
in
js
pop
fisubr
sub
in
jnp
jl
ja
shr
fisubr
xor
in
jnp
mov
jbe
jnp
adc
sub
xchg
ja
imul
adc
in
jae
jl
mov
mov
jae
nop
add
in
movs
outs
imul
outs
jne
mov
pop
cmp
in
mov
sub
in
fisubr
jp
mov
fisubr
add
jne
jne
jl
fisubr
sub
in
leave
outs
cmp
popa
test
jnp
ja
mov
jne
mov
fisubr
xor
in
mov
xor
in
fisubr
sub
in
leave
outs
cmp
popa
test
jnp
ins
test
xchg
or
pop
je
sub
fisubr
adc
in
scas
outs
push
adc
in
lahf
outs
pop
or
in
jns
jl
jno
jg
jne
mov
xchg
outs
sub
in
pushf
outs
jl
jae
jne
jg
ja
jno
jle
jno
dec
and
in
mov
add
and
fisubr
xor
in
mov
xor
in
fisubr
adc
in
scas
outs
push
adc
in
lahf
outs
pop
or
in
jns
jl
jno
jg
jne
mov
xchg
outs
sub
in
pushf
outs
jl
jae
jne
jg
ja
jno
jle
jno
dec
and
in
mov
add
and
fisubr
jne
xchg
jle
jge
jbe
imul
je
xchg
jb
fisubr
xor
in
mov
xor
in
fisubr
data16
xchg
je
nop
jo
leave
jns
mov
outs
jo
ins
in
fisubr
and
fisubr
add
sbb
in
jbe
mov
cdq
outs
mov
je
jbe
adc
lahf
in
jg
jl
imul
add
test
fisubr
xor
in
mov
test
dec
cmp
movs
in
cmps
outs
pop
and
in
cmps
outs
pop
and
mov
test
outs
sbb
in
xchg
outs
pop
adc
in
mov
test
nop
add
in
movs
outs
pop
sub
mov
xor
in
jbe
ins
xor
in
jae
mov
retf
outs
cmp
inc
test
cmp
ret
outs
imul
pop
test
jle
adc
movs
in
cmps
outs
push
and
in
jb
add
jo
mov
mov
or
lea
sar
mov
shl
jno
test
(bad)
jne
pop
ret
xchg
(bad)
mov
fisubr
jno
mov
dec
lea
sar
mov
shl
mov
test
movs
rol
bsr
in
mov
pop
data16
call
xchg
add
scas
xchg
push
movs
mov
jge
mov
sub
push
mov
dec
jmp
xchg
sub
stc
clc
pushf
adc
dec
push
mov
test
or
mov
jbe
mov
lea
movs
xchg
in
movs
hlt
lods
test
xor
mov
and
mov
and
(bad)
scas
data16
push
jbe
and
mov
fisubr
cmp
pop
or
into
inc
mov
mov
xlat
data16
stos
in
xchg
sbb
outs
addr16
enter
jo
(bad)
sbb
inc
sub
inc
jmp
mov
repnz
cmp
pop
pushf
movs
pop
push
dec
cmp
retf
pop
ins
aad
jne
test
dec
stos
loope
scas
xchg
jg
jno
shl
push
fdivr
iret
sub
pop
mov
clc
and
and
scas
test
fs
pusha
mov
pop
stc
add
test
test
dec
scas
push
mov
xchg
rol
jmp
repz
aas
jle
or
sar
mov
out
stos
push
xchg
loop
in
xchg
push
jp
call
(bad)
enter
daa
jne
je
(bad)
push
jg
inc
retf
repnz
test
cmp
pusha
sbb
test
ins
stos
inc
mov
lock
inc
cwde
cwde
pop
es
xor
enter
test
push
iret
(bad)
inc
jge
call
pop
inc
pop
cmp
inc
test
lea
push
xchg
int3
into
shl
adc
repz
jmp
(bad)
(bad)
leave
popf
sar
je
cmc
in
add
sbb
call
mov
fisubr
stos
fidivr
je
sub
ins
test
fimul
dec
cmp
mov
jb
sti
in
cmp
cld
push
or
jg
inc
jb
sbb
repnz
inc
lea
test
retf
cwde
iret
mov
stc
popf
jae
mov
or
fwait
or
enter
xor
into
scas
jmp
dec
jo
push
push
push
cmps
aad
mov
(bad)
not
adc
addr16
loope
pushf
push
push
push
int3
adc
dec
cmp
aas
mov
fsubr
fsubr
jns
dec
add
popf
inc
push
xor
imul
test
cmp
imul
xchg
call
loopne
test
cmp
pop
dec
mov
cmp
stos
out
das
mov
test
shl
out
mov
xor
aas
jg
and
std
jbe
(bad)
fisttp
fs
imul
sahf
bound
jmp
fwait
aaa
out
sbb
shr
fisubr
ror
pushf
adc
shr
sbb
ret
adc
call
push
repnz
xchg
add
mov
cmp
push
mov
fidiv
xlat
(bad)
int
cs
jle
xchg
inc
call
and
loope
outs
add
repz
int3
dec
pop
push
icebp
sti
pusha
retf
sbb
dec
jg
fsubr
adc
cwde
iret
mov
adc
mov
or
retf
push
movs
dec
push
xchg
retf
mov
push
mov
cmp
call
mov
ss
mov
cwde
push
imul
int
fwait
and
lock
je
setle
sbb
in
in
push
xchg
jb
xchg
imul
mov
mov
scas
in
xor
fild
shr
fisubr
adc
cwde
ror
shl
mov
inc
pop
(bad)
jmp
mov
lods
shl
cmp
mov
cmp
xor
aad
pushf
dec
movs
js
dec
(bad)
and
jbe
mov
test
test
repz
inc
cmps
daa
adc
mov
push
imul
push
inc
dec
icebp
pop
xor
xor
fld
shr
fisubr
adc
mov
aad
mov
or
cmps
mov
push
add
mov
shl
jge
pop
jle
inc
retf
aad
pushf
arpl
(bad)
cs
mov
cmps
mov
mov
jmp
lods
dec
cmp
ret
jno
add
fsub
fild
pop
imul
in
fisubr
adc
push
mov
sbb
and
jp
retf
leave
jo
ss
jne
xchg
imul
pop
push
(bad)
call
mov
mov
xchg
pop
xor
add
pop
push
test
dec
or
mov
xor
add
or
xor
xor
bnd
je
pop
adc
cwde
adc
gs
aam
outs
add
xor
lods
cmp
out
lods
movs
jecxz
(bad)
movs
cli
out
add
dec
(bad)
xchg
mov
and
sbb
inc
fnstsw
sub
xlat
daa
jbe
clc
and
jle
int3
cmps
shr
fisubr
adc
cwde
adc
push
inc
cmp
and
xor
fdiv
retf
mov
lods
cmp
nop
mov
add
popa
mov
retf
xchg
and
aam
test
lds
mov
and
push
sbb
cmp
out
fisubr
adc
mov
mov
sub
stos
push
mov
scas
xchg
mov
mov
(bad)
pusha
xchg
mov
push
cwde
fdivrp
and
pop
jle
out
les
jmp
jbe
xor
jmp
pop
(bad)
jmp
jae
sub
push
adc
cwde
adc
shr
jbe
xor
mov
push
cmc
or
int
or
call
dec
imul
dec
cmpxchg
sbb
or
clc
adc
rcr
dec
xor
mov
push
cmp
aad
test
dec
scas
nop
into
(bad)
mov
test
cli
add
fwait
adc
cmp
add
imul
sar
jbe
popf
jbe
sbb
mov
fmul
sbb
mov
adc
mov
jne
jbe
add
fisubr
rcl
adc
jne
hlt
call
mov
ds
mov
mov
ins
xor
movs
in
leave
sub
jmp
mov
and
(bad)
cdq
jle
fnstcw
push
push
dec
and
fisubr
into
push
scas
adc
sub
(bad)
rol
sub
and
cmp
or
mov
jnp
sub
jnp
jae
cmc
sub
mov
lahf
push
push
xor
fidiv
in
fisubr
adc
ror
shl
movs
jmp
jae
add
xor
jbe
dec
lds
in
ins
inc
mov
movs
mov
dec
pop
fwait
sbb
aam
scas
sub
imul
iret
fimul
fidiv
ror
gs
lahf
jae
scas
push
or
add
outs
lea
shl
push
test
imul
push
xchg
or
push
mov
mov
mov
retf
push
pop
(bad)
sar
imul
out
xchg
mov
ret
dec
inc
pop
ret
jnp
stos
mov
int
and
jmp
test
jne
shl
and
ror
into
xchg
jmp
shr
mov
pop
sti
mov
mov
push
pop
nop
cmp
out
test
inc
sbb
call
ret
into
adc
xor
adc
ds
in
in
shl
mov
stos
dec
xchg
(bad)
outs
lea
mov
mov
fcomp
mov
(bad)
pop
cmp
rcl
retf
shl
loopne
pop
dec
jmp
xchg
out
adc
daa
(bad)
(bad)
cmp
repnz
fcmovnu
mov
xchg
inc
fiadd
adc
in
fisubr
rcl
mov
push
add
sub
ret
inc
imul
sti
es
mov
movs
and
test
and
cmps
jecxz
es
sbb
scas
ja
ins
fld
cmp
jle
cld
cmps
inc
mov
mov
out
add
out
push
clc
and
mov
adc
shr
fisubr
aad
(bad)
bsr
outs
jp
ds
jno
pop
es
sbb
mov
in
enter
cmps
xor
rcr
retf
jns
adc
ja
mov
enter
inc
enter
in
jmp
(bad)
xlat
sar
jg
mov
sbb
mov
inc
jle
push
ret
cs
xor
clc
inc
fwait
gs
pushf
xchg
xor
aas
icebp
daa
repz
into
jp
mov
loope
je
push
jmp
pop
xchg
jno
and
or
inc
ror
jns
inc
rcr
stc
ins
ret
stos
outs
movs
xchg
in
mov
xor
adc
mov
aas
repnz
push
dec
push
mov
addr16
inc
fisub
cmp
jle
add
sub
hlt
add
adc
out
push
icebp
jbe
xor
add
xchg
jmp
push
sbb
test
sub
jecxz
into
(bad)
gs
or
ds
cmps
movs
(bad)
add
getsec
scas
cmp
mov
xchg
or
aad
lods
jecxz
dec
jne
and
dec
(bad)
pop
test
mov
sub
fdivr
dec
(bad)
mov
sub
push
call
push
inc
cmp
lea
in
pusha
test
mov
pushf
push
push
aaa
sbb
sbb
xchg
mov
pop
sub
mov
lock
ret
mov
aas
imul
or
xor
cmp
xor
cmp
cmp
sbb
mov
dec
arpl
push
cld
inc
retf
pop
mov
jno
push
mov
jo
imul
push
aaa
xchg
lods
jns
dec
or
mov
jge
cmp
inc
sbb
push
test
loope
test
mul
cmp
adc
clc
(bad)
xchg
shl
sbb
test
mov
cs
arpl
shl
xchg
adc
fs
adc
(bad)
cmp
add
lods
pop
sub
xor
fidivr
(bad)
lds
ret
sub
mov
inc
fstp
shl
lahf
clc
shl
sbb
mov
retf
(bad)
hlt
outs
outs
je
(bad)
mov
xchg
inc
scas
repz
sbb
push
sahf
and
cmp
adc
mov
or
or
fsubp
cmp
or
push
in
mov
xchg
xchg
mov
pop
fldenv
retf
push
out
dec
add
xchg
outs
mov
popa
lods
push
pop
daa
dec
ds
(bad)
and
leave
xchg
xchg
into
mov
fbld
jg
push
adc
fild
mov
sbb
inc
out
mov
dec
push
popf
xchg
pop
stos
out
dec
or
aad
adc
loope
in
arpl
push
sti
mov
iret
into
ins
loop
mov
adc
pushf
daa
ja
inc
into
packuswb
retf
xlat
(bad)
sub
lods
xor
mov
xchg
mov
loopne
cmp
mov
cmp
dec
adc
sub
xchg
sti
push
xchg
adc
jmp
sbb
mov
jmp
cmp
gs
add
fistp
sub
cs
mov
jmp
add
push
jge
sub
mov
nop
jns
addr16
stc
push
jl
mov
add
ror
cdq
sub
lock
loopne
mov
xchg
loopne
movs
sbb
pop
push
xor
adc
shr
fisubr
repz
or
leave
jmp
pop
inc
sar
xlat
jnp
jp
add
mov
xor
mov
xor
leave
in
sbb
pusha
sub
es
inc
push
sbb
add
mov
fistp
aas
cwde
push
aam
jmp
mov
nop
int3
sbb
push
dec
push
pop
enter
xchg
(bad)
xor
or
inc
mov
jge
test
and
pushf
fidiv
push
jecxz
pop
cdq
leave
fneni(8087
repnz
adc
sbb
cs
add
dec
sbb
pop
call
inc
push
cmp
enter
lds
sbb
dec
in
imul
aaa
push
sub
cmp
das
fidivr
out
(bad)
dec
cmc
inc
lea
ja
pop
aaa
dec
cmc
dec
mov
ror
ins
mov
lods
push
call
aam
jae
rcr
into
push
pop
adc
pop
mov
jg
loope
pop
sbb
daa
pop
retf
in
loop
mov
pushf
or
jbe
sbb
mov
int
dec
retf
sub
cmps
push
fmul
cdq
call
jmp
add
xor
(bad)
(bad)
shl
mov
pop
mov
cmp
(bad)
pop
mov
add
jnp
je
ret
ins
jno
lahf
ja
cmp
push
push
pop
sbb
push
shl
and
js
mov
cmp
mov
mov
js
mov
push
and
int
mov
jnp
retf
xlat
cmp
xchg
das
mov
cmp
jle
aaa
test
mov
inc
adc
rcl
dec
repz
popf
cmps
xor
out
push
adc
fwait
into
ret
xchg
pop
(bad)
push
clc
call
imul
dec
xor
jecxz
in
adc
aas
inc
sahf
js
cmps
jle
sub
ret
xlat
ficom
repz
pop
aam
pop
shl
jg
mov
and
adc
rcl
pop
imul
idiv
or
loop
jge
pop
mov
imul
cmps
ret
bound
fst
(bad)
mov
adc
ret
inc
pop
and
jns
icebp
sbb
mov
int3
pushf
mov
(bad)
mov
mov
idiv
(bad)
in
mov
test
adc
pop
inc
pop
mov
fdiv
jl
std
push
cli
jle
loop
pop
or
add
sar
in
inc
jg
mov
jae
mov
push
pop
(bad)
addr16
adc
push
pop
pop
cmp
retf
aad
repnz
sti
pop
adc
mov
nop
mov
dec
or
xor
dec
outs
int3
shr
push
movs
nop
jb
and
popa
das
shr
adc
in
fisubr
push
mov
mov
xor
(bad)
jae
ja
mov
dec
mov
sar
xor
jno
jno
imul
outs
sub
fsubr
or
in
shr
or
shr
jmp
sbb
in
dec
sub
imul
outs
stos
xor
sub
adc
shr
fisubr
and
in
jmp
in
jmp
in
jmp
sbb
es
sbb
jmp
test
adc
in
out
outs
sbb
fisubr
adc
iret
in
fisubr
sbb
fldln2
xlat
outs
sbb
retf
outs
imul
xchg
test
out
(bad)
xchg
stos
shl
(bad)
xchg
adc
sub
mov
in
fisubr
and
in
jmp
in
call
test
adc
in
in
outs
pop
sub
call
sbb
out
loopne
and
out
sbb
in
call
das
lahf
outs
xchg
rcl
das
lahf
outs
mov
das
lahf
outs
call
outs
xchg
lds
pop
ret
lahf
outs
sub
fnstsw
bound
adc
shr
and
outs
stos
push
stc
jo
xor
pop
jle
cmp
fnsave
and
out
pop
es
push
dec
retf
or
popa
loop
fild
int
cdq
jb
mov
jmp
xlat
ficomp
pop
ss
repnz
sbb
adc
mov
jg
outs
pop
adc
mov
shl
repnz
jae
push
inc
je
jle
jge
(bad)
adc
mov
ja
ror
add
(bad)
mov
fmul
mov
ror
outs
fdiv
out
mov
in
ret
into
mov
retf
(bad)
in
and
stos
push
jmp
(bad)
mov
enter
dec
popf
mov
dec
inc
(bad)
mov
jne
cmps
mov
push
rol
cmps
jg
shl
mov
cmps
rcr
jl
call
jo
mov
das
push
mov
ret
js
cmp
out
and
retf
mov
sub
sbb
gs
ret
mov
mov
ja
xchg
outs
js
shl
ins
mov
jbe
loop
ja
xchg
in
js
or
dec
fld
test
call
push
dec
popa
adc
ret
jne
add
sahf
fild
sti
jg
xor
bound
je
sahf
dec
dec
jbe
rol
inc
sbb
loope
sbb
inc
(bad)
(bad)
jecxz
pop
stc
sub
xchg
jmp
push
inc
jp
jnp
sbb
loop
inc
pop
dec
push
dec
sbb
pop
pop
ss
fmul
xchg
or
cmp
ins
pop
aas
push
dec
xor
jp
arpl
jnp
xor
loop
push
sbb
cmp
lds
repnz
push
inc
pop
mov
das
dec
add
adc
inc
inc
jmp
popw
dec
jnp
dec
out
xor
adc
(bad)
sbb
push
dec
enter
ins
outs
mov
cmps
jo
xor
adc
inc
xor
inc
arpl
test
adc
push
push
shr
xchg
cmc
adc
pop
pop
jbe
pop
mov
jns
jo
jmp
jno
js
call
clc
fs
cdq
adc
daa
mov
adc
cmc
imul
sbb
and
fild
(bad)
sahf
jmp
fsubr
inc
int
mov
ret
dec
mov
lods
psraw
adc
mov
lock
popf
and
xlat
movups
mov
lods
scas
xor
out
out
jl
retf
int3
mov
js
cmc
iret
lods
ror
rcr
pushf
sar
pushf
pop
enter
dec
mov
shl
mov
fcmovnbe
in
and
mov
(bad)
jns
sahf
and
jl
pusha
ja
ror
aam
movs
push
fisubr
rcr
inc
adc
lods
ret
jle
call
out
aad
das
or
lock
mov
and
aad
sub
xor
xchg
jb
and
cdq
ret
retf
inc
std
or
xchg
jnp
dec
or
xor
mov
(bad)
and
jns
js
fild
ins
mov
in
dec
repnz
xlat
push
push
add
jae
inc
(bad)
test
jp
ins
dec
imul
je
je
jecxz
and
sub
mov
ds
xor
push
or
rol
push
add
aas
push
cmc
mov
cmp
adc
push
sub
dec
and
jmp
xor
pop
loop
inc
mov
push
push
jge
ss
mov
sub
ins
fs
fdiv
aaa
inc
or
xor
loopne
pop
push
adc
push
sub
loope
lods
gs
mov
mov
jo
(bad)
stc
lea
pop
fwait
mov
or
sbb
mov
icebp
call
es
adc
push
(bad)
push
xchg
xor
scas
xchg
and
loope
out
pop
xchg
(bad)
outs
loopne
and
pop
scas
cmc
nop
push
fdiv
xlat
ss
movs
pop
imul
call
std
das
cmp
int3
fcomp
mov
in
jbe
ffreep
push
frstor
mov
sbb
fisub
dec
dec
(bad)
dec
jno
xor
enter
jmp
or
inc
add
out
aas
pop
sub
xor
mul
push
iret
ins
xchg
jns
mov
ins
inc
shl
mov
dec
mov
scas
jne
out
sti
mov
cmps
sub
ror
cmp
retf
shl
and
mov
aas
mov
jne
loope
int3
enter
(bad)
jp
jbe
mov
cdq
jge
xlat
push
and
cmp
scas
push
out
loope
sub
or
aam
stos
jmp
dec
push
es
(bad)
mov
xchg
stc
inc
push
scas
sub
bound
adc
cwde
mov
(bad)
xchg
push
mov
mov
rcr
ror
pop
sbb
jecxz
push
push
cs
repz
pop
fdiv
in
sbb
imul
jbe
jae
int
scas
mov
mov
cmps
cld
add
pop
ins
lds
mov
xor
addr16
iret
mov
pop
iret
loop
push
repnz
and
in
shl
test
(bad)
js
jg
clc
jp
sar
mov
cmp
mov
aas
outs
aas
jb
mov
rcl
add
cli
or
pop
add
lds
xor
mov
inc
in
imul
push
sar
mov
mov
icebp
std
(bad)
mov
cmp
outs
pop
icebp
(bad)
xchg
push
lods
in
rcr
push
repz
xchg
pop
test
fwait
sbb
jae
call
fmul
retf
cmc
in
adc
dec
imul
js
dec
mov
sub
jbe
and
pushf
mov
scas
sbb
inc
sbb
pushf
inc
lahf
mov
mov
and
or
fwait
stc
cmc
sub
pop
and
adc
sbb
jb
mov
mov
mov
or
mov
and
xlat
pushf
adc
mov
pop
xchg
mov
mov
hlt
(bad)
cmps
sub
xor
adc
pop
ret
or
inc
iret
add
ss
cmps
dec
call
add
fidivr
fcmovu
cmp
dec
mov
mov
test
sbb
pop
jg
aas
cmps
xchg
jo
(bad)
out
ror
sti
and
rol
push
imul
mov
pop
scas
inc
jmp
pop
xor
imul
repz
ins
sbb
iret
push
scas
test
std
jnp
push
cmp
pop
(bad)
cmp
mov
sub
ss
out
fldenv
sub
mov
jbe
sub
repz
add
xchg
scas
jmp
xchg
sbb
ins
cmp
cmp
hlt
and
jg
nop
adc
dec
test
mov
xchg
push
cmp
push
jp
sbb
pushf
mov
les
aas
int
xor
sbb
cld
sub
sbb
mov
cmp
inc
shl
cwde
inc
dec
cli
xchg
stos
mov
ja
cld
cmps
test
mov
jp
xchg
(bad)
mov
fs
das
jle
mov
test
nop
xlat
cwde
cmps
test
sub
stos
imul
adc
jg
lods
dec
fist
mov
enter
push
test
jae
cli
push
mov
pusha
and
scas
mov
jp
and
movs
mov
(bad)
and
mov
into
mov
sahf
addr16
imul
cmp
repnz
inc
xchg
add
(bad)
enter
popa
mov
pop
push
pop
inc
pushf
scas
mov
mov
pop
or
rcr
push
dec
mov
retf
mov
ds
pop
ret
pop
inc
pop
mov
fadd
bound
cmp
fidivr
inc
imul
and
out
int
je
dec
add
mov
outs
dec
jbe
xchg
cmp
sbb
leave
fld
mov
iret
jecxz
inc
pop
push
test
aam
jnp
push
movs
retf
pop
shl
push
sahf
jns
or
adc
and
shl
push
cmps
movs
jp
mov
jge
repnz
push
mov
sbb
adc
sbb
xchg
and
jg
aaa
sbb
mov
test
cmp
stc
pop
add
cmps
adc
xchg
mov
xor
mov
(bad)
(bad)
fdivr
mov
test
mov
cli
mov
jmp
mov
mov
mov
pop
mul
mov
cmp
sub
sbb
fsubr
adc
pop
stos
data16
push
push
jmp
push
mov
imul
imul
pushf
inc
aas
xchg
sbb
scas
ret
cld
push
inc
push
shl
add
neg
mov
jp
inc
ins
cmps
ss
fs
or
arpl
aaa
cmps
stos
pushf
inc
or
jle
movups
ret
pop
sub
adc
inc
or
add
cmp
mov
or
cmp
ror
(bad)
adc
jno
jp
push
in
adc
jne
sbb
jae
cli
cmp
add
jmp
push
dec
xchg
push
jmp
xchg
or
add
cmps
pop
jb
adc
xor
dec
mov
pushf
add
fcom
cld
add
(bad)
cli
adc
pop
jl
fwait
mov
add
leave
adc
sub
fs
fsub
int
loop
ins
(bad)
mov
sbb
push
aas
mov
es
jbe
mov
jae
(bad)
movs
out
and
add
stos
pop
sub
lods
loop
out
pop
imul
int3
add
jmp
shl
dec
out
arpl
push
cmp
jl
icebp
add
sar
jbe
pop
cmc
(bad)
xchg
pop
xor
aam
repnz
fdiv
jnp
ja
push
inc
sub
loop
sar
cld
in
ss
ins
cli
fild
enter
push
test
cwde
xchg
cmp
xor
(bad)
and
jmp
test
or
cmp
xchg
repz
loop
xor
adc
das
daa
cld
cwde
cli
lods
dec
sbb
cmp
addr16
es
repz
sub
daa
es
iret
movs
sub
inc
fwait
sub
aad
das
in
retf
push
pop
inc
mov
dec
or
in
push
xchg
fbstp
push
lods
sub
shl
add
dec
mov
leave
int
push
xchg
les
out
cld
dec
push
add
inc
rcr
je
cmp
out
mov
pop
xor
cs
aaa
(bad)
ds
mov
push
mov
mov
stc
gs
shl
mov
loop
dec
or
pop
inc
cmc
mov
adc
ins
mov
mov
or
push
dec
popa
push
sbb
mov
pusha
ins
int3
dec
lds
in
push
mov
test
ins
fistp
ret
outs
and
js
or
pop
sbb
mov
and
add
sbb
jl
xchg
adc
jp
scas
sbb
in
push
add
mov
out
inc
jmp
lahf
mov
into
mov
xor
inc
dec
cmps
xor
cmp
rcl
neg
or
pop
sub
pop
inc
call
push
xchg
bnd
aad
jle
xchg
clc
pxor
sub
inc
stos
pop
leave
sti
sub
mov
mov
pop
xchg
pushf
fs
jo
sbb
cs
push
fsubr
sub
mov
hlt
in
stos
and
test
aas
test
fwait
jno
adc
cdq
sti
adc
sub
test
xor
adc
mov
xchg
ror
ror
mov
ins
fdiv
arpl
fsub
or
les
mov
call
test
ja
lea
int3
nop
pmaxsw
xchg
dec
adc
mov
jno
pusha
add
add
mov
mov
mov
das
jne
arpl
(bad)
sbb
cld
in
loop
clc
cmp
mov
xor
cmc
movs
imul
in
add
sub
inc
xor
int
loopne
add
mov
xchg
mov
js
aam
cmp
add
ficomp
and
or
and
imul
hlt
push
mov
mov
sti
mov
lods
gs
jnp
lea
adc
pop
add
lods
gs
(bad)
jmp
xchg
test
cs
cmp
pop
adc
push
call
out
push
mov
pop
sub
jmp
(bad)
and
rol
stos
fistp
clc
daa
(bad)
mov
xchg
dec
jmp
mov
dec
sar
push
ins
dec
stos
dec
call
ss
fisub
inc
sub
dec
jae
or
jmp
cdq
push
popa
stos
cli
mov
mov
xchg
sbb
or
call
mov
jbe
idiv
and
pop
adc
out
push
dec
mov
dec
adc
inc
into
inc
pop
adc
loope
push
fwait
jns
mov
jmp
sub
(bad)
cmp
push
lahf
not
pop
movs
push
xchg
or
jl
sbb
pop
cmp
pop
push
jnp
out
jne
(bad)
loopne
or
mov
dec
repnz
push
sar
jmp
sub
dec
jnp
jbe
xor
clc
scas
add
mov
xor
push
inc
sbb
adc
sti
ss
dec
lahf
jp
xchg
add
retf
xchg
xchg
rol
push
popf
lds
mov
cmps
sbb
cmp
add
repnz
jb
xor
lock
push
aaa
mov
pusha
gs
pop
retf
hlt
push
(bad)
cmps
stos
std
pop
jmp
push
mov
sbb
ror
test
sbb
mov
adc
sub
cmp
push
mov
xor
ds
ficomp
(bad)
inc
leave
sub
in
out
dec
xor
out
(bad)
cdq
jp
push
jle
inc
dec
loope
aad
inc
sub
cli
add
mov
or
or
loop
dec
push
shl
mov
je
jmp
fst
sub
mov
xchg
(bad)
jnp
bound
and
jnp
retf
xchg
jae
imul
fsub
adc
bound
mov
or
jmp
pop
pop
and
xor
push
into
cmp
les
cmp
stos
pusha
inc
out
sbb
cmp
xor
fwait
and
jne
(bad)
sbb
xlat
(bad)
pop
dec
and
sbb
pop
ins
cwde
xor
std
gs
jg
mov
adc
and
jmp
sub
aas
xchg
xlat
cld
inc
jno
icebp
xchg
xchg
jmp
mov
fcom
mov
call
bound
xor
add
lea
jl
(bad)
repnz
push
(bad)
test
fiadd
and
dec
repnz
inc
sbb
or
inc
push
push
out
cmp
aas
jbe
test
call
clc
repz
dec
jo
sub
bound
dec
cmp
push
sbb
sub
inc
repz
pop
jns
xchg
xor
cmp
lahf
inc
clc
dec
clc
inc
cs
or
cmp
repz
ins
(bad)
fcom
jo
jmp
std
in
jnp
movs
inc
loope
(bad)
fidiv
out
aas
mov
push
sahf
test
fucomi
fidivr
lahf
mov
mov
or
mov
pop
sbb
popa
(bad)
cmp
jge
dec
retf
loopne
push
(bad)
rcr
xchg
pop
sbb
or
jmp
mov
push
inc
pop
xchg
jbe
lock
aam
push
bound
xchg
fld
mov
sbb
mov
int3
mov
pop
ret
call
out
loope
mov
es
mov
sbb
mov
mov
xlat
lock
pusha
mov
or
inc
dec
mov
jl
sub
adc
pop
shl
(bad)
fdivr
pushf
jg
in
repnz
pop
mov
jmp
outs
outs
ret
xchg
shr
xor
mov
test
fs
movs
ins
dec
cmc
cmp
and
sbb
push
mov
and
js
cwde
fmul
add
sbb
nop
jle
imul
xor
cmp
xchg
push
inc
cmc
or
cmp
data16
push
sbb
fnstenv
test
(bad)
in
xchg
and
mov
sub
mov
ss
cwde
aas
int3
mov
xor
loope
cmp
(bad)
fbld
out
mov
adc
(bad)
lds
inc
jo
dec
sahf
xchg
clc
cmp
inc
clc
popf
jb
test
inc
popf
jmp
ds
rcl
aaa
pop
pop
movs
inc
jo
in
fadd
dec
cmp
fisub
mov
nop
or
ins
mov
into
xchg
imul
repz
inc
jl
jns
int
lods
bound
inc
sbb
sub
inc
pushf
aad
push
in
sbb
fcomip
cmp
sub
fld
sbb
mov
faddp
add
daa
pop
xchg
test
inc
mov
or
cmp
jle
mov
add
jo
mov
shl
or
add
ficom
test
xchg
xor
push
in
(bad)
jno
pop
je
xchg
lea
rcl
outs
outs
sub
mov
mov
aas
mov
and
sub
xor
add
movs
push
inc
sbb
pop
xor
mov
(bad)
ror
adc
loope
shr
imul
pop
imul
mov
ret
icebp
push
shl
sahf
mov
cmc
hlt
sub
retf
mov
mov
test
lods
test
pop
pop
mov
repnz
mov
out
stc
and
into
ss
mov
push
test
gs
je
es
lahf
es
(bad)
jno
fwait
loope
xor
pop
mov
sbb
fcmove
jo
(bad)
xor
scas
(bad)
fidivr
mov
pop
add
inc
loop
cmps
aam
xchg
pop
cmp
fs
adc
xor
lea
clc
add
push
jmp
xchg
int
sub
pop
pop
mov
mov
rcl
jp
pop
cwde
inc
mov
push
mov
mov
aad
loope
xchg
fisttp
test
ffree
or
cwde
jg
ret
lods
add
mov
pusha
in
cmp
pop
and
(bad)
shr
leave
inc
sub
add
cmc
inc
jnp
jnp
jbe
xchg
lds
sbb
inc
cli
jp
lods
stc
pop
daa
cdq
out
xchg
xchg
mov
enter
inc
lds
xor
xlat
mov
dec
push
mov
sbb
xor
lea
mov
std
jbe
jnp
test
pop
das
dec
jbe
mov
inc
(bad)
aam
loopne
pushf
pop
or
xor
loop
xlat
std
pop
adc
jl
jmp
fs
(bad)
jecxz
mov
out
xchg
es
rcr
mov
ffreep
rcr
dec
test
mov
int3
xchg
sbb
mov
call
sub
enter
(bad)
int
repz
cmp
sub
dec
test
dec
cmp
mov
pop
shr
mov
sti
mov
mov
cmp
push
shl
mov
ret
loop
jo
cmc
inc
pop
jmp
sbb
aad
mov
inc
stos
or
(bad)
mov
dec
jg
inc
add
outs
scas
xor
ss
lock
adc
pop
lock
jb
stc
jbe
(bad)
fiadd
jl
aam
sti
pop
data16
test
sub
xchg
mov
cld
ins
lds
pop
jmp
inc
mov
imul
cmps
xchg
and
adc
mov
das
and
rcr
xchg
xor
mov
pop
cmp
fwait
or
push
sahf
pextrw
mov
sbb
mov
adc
loope
xlat
sahf
mov
mov
cmc
pop
hlt
ins
jnp
pop
jge
rol
pop
sbb
push
mov
dec
or
jmp
xchg
xor
sbb
cmp
mov
dec
push
(bad)
mov
add
hlt
sar
stos
sub
imul
or
aaa
imul
cmp
lods
pop
mov
mov
repz
test
mov
repz
jmp
jbe
iret
(bad)
cmc
lock
hlt
iret
sbb
outs
cmp
jp
and
sub
outs
cmp
aam
xchg
sbb
jp
jmp
test
ror
movs
mov
fisubr
push
adc
add
retf
test
adc
push
call
das
sbb
xor
sbb
mov
pop
cmp
sbb
dec
and
pusha
add
xchg
jge
cmp
xchg
dec
adc
cmps
push
pop
cwde
sub
push
inc
xchg
int3
(bad)
adc
dec
cld
int3
ror
sbb
loop
sub
cmc
push
push
aas
repz
aad
sub
dec
or
dec
test
cmp
cmp
pop
ins
jmp
lea
or
push
or
ret
cmp
fbld
mov
shl
sub
jo
sub
call
test
mov
es
xor
mov
in
xor
imul
call
fsub
das
scas
xlat
mov
mov
in
adc
loop
out
and
jnp
and
out
xchg
dec
cld
sbb
push
icebp
(bad)
bound
sbb
cmp
adc
fadd
retf
cmp
mov
dec
pop
or
je
push
inc
retf
xabort
enter
(bad)
pop
jp
ret
ds
(bad)
mov
popa
sub
popa
xchg
mov
pop
shr
aam
movsx
(bad)
ins
neg
lods
push
push
into
inc
lock
add
gs
jne
dec
mov
(bad)
mov
or
enter
and
push
push
ret
rol
mov
mov
push
test
mov
cmp
jp
(bad)
std
(bad)
jnp
pop
push
jle
leave
call
jp
xchg
pop
jbe
add
sbb
or
add
xor
push
add
in
test
adc
aas
xor
jne
sahf
out
(bad)
mov
push
xchg
ss
mov
cmps
jns
ret
xor
inc
mov
mov
ins
mov
mov
jae
jb
int
cdq
fidivr
pop
jae
and
pop
(bad)
jne
xchg
loope
cmp
leave
pop
xchg
gs
int3
push
jmp
(bad)
gs
push
sti
mov
xor
inc
ins
nop
hlt
mov
iret
(bad)
js
fs
repnz
pop
popf
rcr
push
jbe
ret
call
xor
pop
jg
pop
mov
in
adc
imul
rcr
mov
pusha
jo
pop
mov
mov
sub
cld
mov
out
cmp
or
and
in
xchg
ins
pop
dec
shl
mov
pop
cmc
lea
nop
adc
push
and
sub
das
not
mov
add
jo
add
and
pop
and
fsub
mov
jmp
(bad)
das
pop
xchg
pop
aas
retf
add
push
sbb
test
add
mov
inc
int
in
mov
loopne
pop
inc
and
cli
(bad)
xor
and
xchg
or
ins
adc
sbb
push
(bad)
lock
sbb
gs
inc
fucomi
test
in
add
call
in
mov
cvtps2pd
or
aam
inc
adc
repnz
dec
mov
push
je
out
retf
sbb
jmp
out
inc
sbb
imul
ret
in
adc
inc
push
cdq
xor
jle
lods
push
rcr
mov
cwde
sub
pop
mov
neg
sub
aas
fld
bound
and
shl
jl
bound
add
test
mov
repz
push
cwde
mov
lahf
adc
mov
dec
daa
pop
sub
xor
aam
stos
mov
and
cmps
adc
pop
dec
sahf
cmp
cmps
cwde
sbb
dec
sbb
dec
cmp
inc
(bad)
imul
or
in
jl
xor
call
xchg
xor
sbb
(bad)
repnz
mov
(bad)
jbe
jnp
cmp
mov
sti
sub
xor
cdq
add
jg
dec
cs
ins
in
mov
inc
cmp
clc
mov
hlt
dec
dec
mov
js
pushf
ret
fdiv
xchg
inc
ficom
stos
dec
pop
inc
mov
loope
repnz
gs
adc
adc
inc
jge
aam
int3
fidivr
xor
pop
mov
ins
popa
in
sbb
enter
adc
ds
lea
out
pop
jo
fld
inc
(bad)
xchg
and
loopne
mov
nop
jmp
dec
retf
xchg
mov
sbb
aam
imul
adc
cmp
daa
leave
dec
sub
and
in
retf
push
mov
leave
xor
fadd
mov
call
mov
ficomp
dec
push
cmp
pop
adc
pop
lds
ins
out
test
cdq
fsub
adc
jnp
mov
adc
and
sahf
movs
lea
push
fdiv
lods
cld
dec
cwde
pop
sub
iret
out
arpl
sti
or
shl
aad
mov
addr16
ror
lahf
sbb
stos
xlat
test
(bad)
(bad)
pop
mov
sbb
xchg
pop
cmp
pop
les
sahf
movs
cmp
or
(bad)
xor
xor
sbb
retf
jmp
and
imul
mov
inc
fld
stc
sub
sbb
int3
xor
repz
inc
jg
jb
mov
cmp
add
add
sbb
cmp
call
icebp
push
shr
mov
sbb
in
inc
test
push
cdq
mov
xor
inc
je
aam
fld
dec
lods
loop
(bad)
adc
adc
push
sbb
mov
int3
mov
repz
sbb
xchg
mov
xchg
shl
mov
aad
push
pop
dec
out
movs
push
stos
aad
push
add
adc
mov
mov
push
add
in
jmp
mov
jmp
cmp
or
movs
addr16
cmp
adc
sbb
mov
pushf
js
mov
or
out
mov
shr
dec
(bad)
adc
es
je
sub
(bad)
cmp
mov
add
dec
sub
xor
xchg
mov
push
arpl
frstor
pop
and
retf
outs
adc
adc
jbe
jl
neg
bound
pop
and
add
sbb
gs
mov
mov
ds
sbb
inc
mov
xadd
sti
mov
imul
mov
daa
int
jb
(bad)
shl
sub
jl
cwde
shr
jnp
xchg
fcomi
mov
inc
xlat
inc
call
loop
jp
jo
fistp
shl
jmp
ins
scas
std
cmp
fisub
adc
push
xchg
fiadd
xor
add
jnp
xchg
pusha
in
pop
test
sub
mov
stos
cmp
and
adc
ds
inc
dec
int3
int3
sub
rol
dec
push
mov
add
push
in
jle
mov
xchg
fisubr
sar
inc
jo
dec
or
mov
bound
pop
add
call
sbb
jnp
call
mov
push
shl
movs
jle
mov
or
hlt
sbb
icebp
dec
dec
jns
xchg
and
sbb
imul
jl
rol
mov
rol
add
lods
fisub
cmp
dec
scas
push
loope
xchg
test
sub
daa
mov
dec
jo
aad
and
xor
cld
fmul
mov
out
mov
imul
jno
xchg
mov
out
mov
out
xor
mov
jmp
shr
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
fsubrp
outs
xor
shr
test
cmps
shr
aad
sub
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
add
xchg
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
in
shr
or
fucomip
shr
or
pop
out
shr
or
lahf
out
shr
or
pop
out
shr
or
mov
or
aas
out
shr
or
jg
shr
or
(bad)
out
shr
or
xlat
out
shr
or
push
out
shr
or
xchg
out
shr
or
pop
out
shr
or
mov
shr
or
aaa
out
shr
or
ja
shr
or
imul
shr
or
out
shr
or
addr16
shr
or
cmps
out
shr
or
daa
out
shr
or
(bad)
out
shr
or
inc
out
shr
or
xchg
shr
or
pop
out
shr
or
retf
out
shr
or
dec
out
shr
or
mov
shr
or
or
shr
or
stos
out
shr
or
sub
shr
or
imul
outs
pop
or
jmp
shr
or
fucomi
shr
or
pop
out
shr
or
fwait
out
shr
or
sbb
shr
or
mov
or
cmp
shr
or
jnp
shr
or
sti
out
shr
or
shr
shr
or
push
out
shr
or
xchg
out
shr
or
adc
shr
or
mov
shr
or
xor
shr
or
jae
shr
or
repz
shr
or
jecxz
shr
or
arpl
shr
or
mov
or
and
shr
or
ret
out
shr
or
inc
out
shr
or
sub
outs
inc
shr
sbb
nop
in
(bad)
sbb
jo
(bad)
sbb
mov
sbb
sub
outs
xor
(bad)
sbb
js
(bad)
sbb
test
(bad)
sbb
mov
(bad)
sbb
mov
(bad)
sbb
ins
in
(bad)
sbb
pushf
in
(bad)
sbb
jl
(bad)
or
in
shr
or
in
shr
or
in
shr
or
in
shr
adc
loopne
fild
adc
call
adc
fsubr
fild
adc
in
fild
adc
fsubrp
fild
adc
out
fild
adc
(bad)
fild
adc
loop
fild
adc
loope
fild
adc
jmp
adc
fucomp
fild
adc
in
fild
adc
fucomip
fild
adc
out
fild
adc
fucomi
fild
adc
int3
jmp
sbb
xor
shl
mov
mov
not
js
lea
scas
(bad)
not
jns
lea
scas
(bad)
not
jns
mov
jp
mov
jp
(bad)
adc
cs
adc
cs
adc
cs
adc
sub
repnz
je
mov
mov
repnz
je
mov
mov
repnz
je
mov
mov
repnz
je
xchg
adc
xor
aam
xor
aam
xor
aam
xor
aam
xor
aam
xor
aam
xor
aam
das
nop
adc
das
nop
adc
das
nop
adc
das
nop
adc
das
nop
adc
das
nop
adc
das
nop
adc
das
nop
adc
sub
jmp
popf
fstp
out
pop
sbb
in
pop
pop
cwde
sub
and
loop
and
loop
and
jecxz
and
jecxz
and
push
lahf
out
loopne
and
push
lahf
out
loopne
and
push
lahf
out
loopne
and
push
lahf
out
loopne
and
push
pushf
sbb
push
pushf
sbb
push
pushf
sbb
push
lahf
and
push
lahf
and
push
lahf
and
push
lahf
and
push
lahf
and
push
lahf
and
push
lahf
and
push
lahf
and
sbb
loop
fs
loop
fs
loop
fs
loop
fs
loop
fs
loop
fs
loop
fs
loop
sub
fsubr
mov
mov
not
jp
(bad)
adc
xor
aad
sbb
jmp
fsubrp
pusha
sbb
es
(bad)
call
xchg
fnstsw
jmp
popf
(bad)
out
pop
push
xchg
sub
adc
(bad)
pop
adc
(bad)
pop
sbb
in
pop
sbb
in
pop
pop
cwde
sub
pop
cwde
sub
and
loop
and
loop
and
loop
and
loop
and
jecxz
and
jecxz
and
jecxz
and
jecxz
and
push
lahf
out
loopne
and
push
lahf
out
loopne
and
push
lahf
out
loopne
and
push
lahf
out
loopne
and
push
pushf
sbb
push
pushf
sbb
push
pushf
sbb
arpl
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
cmc
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
out
fisubr
test
shl
fisubr
xchg
shr
fisubr
mov
shl
fisubr
xchg
adc
shl
fisubr
mov
fisubr
inc
adc
ror
adc
shl
stos
outs
sub
mov
mov
test
sub
sbb
mov
test
sub
cmp
mov
shl
pop
outs
sub
cli
outs
sbb
mov
test
sbb
sub
cmp
shl
sub
mov
test
sub
dec
outs
sub
push
outs
sub
or
mov
test
sub
stc
outs
sbb
mov
mov
shl
adc
mov
test
sub
xor
mov
test
sub
repnz
sbb
cmps
outs
sub
bound
mov
shl
xchg
mov
shl
and
mov
test
sub
inc
outs
sub
push
outs
sub
add
mov
outs
sub
cmp
mov
outs
sub
push
outs
sbb
js
sub
outs
sub
pop
outs
sub
(bad)
outs
sbb
mov
test
push
mov
shl
sub
ds
sbb
and
outs
sub
dec
outs
sub
push
outs
sub
push
outs
sbb
lods
outs
sub
fisubr
mov
shl
mov
mov
shl
push
outs
sbb
jl
sub
outs
sub
pop
outs
sub
imul
mov
test
sub
outs
push
mov
shl
test
mov
shl
outs
sbb
sbb
outs
sub
inc
outs
sub
push
outs
sub
push
outs
mov
stos
outs
sub
pop
outs
sbb
and
sub
sbb
mov
test
sub
cmp
mov
test
sub
clc
outs
sbb
mov
test
sbb
sub
cmp
sbb
jae
sub
dec
outs
sub
push
outs
sub
or
mov
test
sub
fdiv
mov
outs
sub
adc
mov
test
sub
xor
mov
test
sub
lock
sbb
cmps
outs
sub
pusha
outs
push
mov
shl
xchg
mov
test
sbb
sub
sub
inc
outs
sub
push
outs
sub
add
mov
outs
sub
sbb
mov
outs
sub
sbb
sbb
jns
sub
cmp
sub
pop
outs
sub
cld
outs
sbb
mov
test
push
mov
shl
sub
imul
sbb
and
outs
sub
dec
outs
sub
push
outs
sub
or
sbb
lods
outs
sub
fisubr
mov
shl
lea
mov
shl
adc
sbb
jge
sub
xor
sub
pop
outs
sub
hlt
outs
sbb
movs
outs
sub
outs
push
mov
shl
test
mov
shl
and
sbb
sbb
outs
sub
inc
outs
sub
push
outs
sub
add
mov
stos
outs
sub
mov
mov
test
sub
sbb
mov
test
sub
cmp
mov
shl
pop
outs
sub
sti
outs
sbb
mov
test
sbb
sub
cmp
shl
sub
mov
test
sub
dec
outs
sub
push
outs
sub
or
mov
test
sub
stc
outs
sbb
mov
mov
shl
adc
mov
test
sub
xor
mov
test
sub
rep
sbb
cmps
outs
sub
arpl
mov
shl
xchg
mov
shl
and
mov
test
sub
inc
outs
sub
push
outs
sub
add
mov
outs
sub
cmp
mov
outs
sub
pop
outs
sbb
js
sub
aas
outs
sub
pop
outs
sub
jmp
mov
test
sub
outs
outs
push
mov
shl
sub
ds
sbb
and
outs
sub
dec
outs
sub
push
outs
sub
movq
mov
test
sub
fisubr
mov
shl
mov
mov
shl
pop
outs
sbb
jl
sub
aaa
outs
sub
pop
outs
sub
imul
mov
test
sub
outs
push
mov
shl
test
mov
shl
daa
outs
sbb
sbb
outs
sub
inc
outs
sub
push
outs
sub
pop
outs
mov
stos
outs
sub
pop
outs
sbb
and
sub
sbb
mov
test
sub
cmp
mov
test
sub
stc
outs
sbb
mov
test
sbb
sub
cmp
sbb
jae
sub
dec
outs
sub
push
outs
sub
or
mov
test
sub
fdiv
mov
outs
sub
adc
mov
test
sub
xor
mov
test
sub
icebp
outs
sbb
cmps
outs
sub
popa
outs
push
mov
shl
xchg
mov
test
sbb
sub
sub
inc
outs
sub
push
outs
sub
add
mov
outs
sub
sbb
mov
outs
sub
sbb
test
sub
cmp
test
sub
std
outs
sbb
mov
test
push
mov
shl
sub
imul
test
sub
dec
outs
sub
push
outs
sub
or
test
sub
fisubr
mov
shl
lea
mov
shl
adc
test
sub
xor
test
sub
cmc
outs
sbb
movs
outs
sub
outs
push
mov
shl
test
mov
shl
and
test
sub
inc
outs
sub
push
outs
sub
add
test
sbb
fistp
xchg
test
adc
jmp
call
xchg
test
sbb
or
sbb
fisubr
xchg
test
sbb
(bad)
xchg
test
adc
jmp
call
xchg
in
fstp
sbb
pop
out
(bad)
xchg
test
sbb
fisubr
sbb
fldln2
fsubr
adc
xlat
in
fisubr
adc
xor
fisubr
addr16
je
mov
lds
ja
mov
dec
mov
sar
xor
ins
mov
jo
jns
lods
jnp
mov
leave
jno
jle
ins
bound
xchg
test
test
sub
fisubr
not
in
fisubr
sbb
push
cli
call
in
shr
not
in
fsubr
xor
cli
call
in
jmp
in
jmp
add
and
push
in
pop
outs
lods
sti
push
test
stos
adc
add
xchg
test
lods
sti
push
test
sub
adc
push
add
inc
ror
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
or
shr
(bad)
inc
add
add
test
sub
fisubr
adc
loopne
js
adc
lods
lahf
outs
push
xchg
adc
push
push
test
pusha
adc
stos
lahf
outs
dec
cwde
and
cmps
in
fisubr
dec
push
test
push
adc
stos
lahf
outs
inc
mov
fisubr
inc
push
test
je
adc
pop
stos
lahf
outs
arpl
outs
inc
inc
push
test
push
adc
test
and
lahf
in
fisubr
inc
push
test
jo
adc
enter
test
in
fisubr
inc
push
test
pop
adc
mov
outs
cwde
movs
and
outs
in
fisubr
inc
push
test
xchg
adc
scas
lahf
outs
aam
sub
inc
inc
push
test
pop
lahf
outs
jmp
sub
pop
inc
push
test
jbe
adc
sub
sub
xchg
inc
push
test
retf
adc
les
xchg
pusha
in
fisubr
rcl
repz
pop
lods
adc
ret
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
xor
mov
fisubr
or
jnp
adc
push
mov
adc
in
jae
mov
fisubr
adc
in
jne
ja
jb
je
jne
mov
mov
add
in
mov
cmp
adc
(bad)
in
mov
xor
in
mov
test
xchg
xor
in
jae
test
jge
dec
sub
in
jg
jbe
xor
scas
in
fisubr
add
jl
xor
outs
in
jne
nop
xor
in
jns
jbe
imul
xor
add
jl
xor
outs
in
mov
xor
in
jae
nop
cmp
in
jl
xchg
xor
in
mov
test
xor
test
je
xchg
mov
test
jnp
aas
test
add
jl
xor
outs
in
mov
xor
in
jae
nop
cmp
in
mov
add
jnp
mov
sub
mov
xor
in
mov
test
xchg
xor
in
mov
test
test
mov
test
test
jnp
mov
mov
sub
in
je
mov
jg
js
ja
jb
mov
adc
in
mov
add
mov
mov
sub
in
jnp
nop
xor
in
jbe
dec
xor
in
jg
nop
or
add
jl
xor
imul
outs
jbe
mov
xchg
scas
outs
push
and
mov
xor
in
(bad)
outs
jnp
xor
scas
in
fisubr
add
jl
xor
cwde
in
scas
outs
push
and
mov
xor
in
(bad)
outs
jnp
xor
shr
fisubr
add
jl
xor
jle
jg
mov
mov
xor
in
mov
test
dec
xor
add
jl
xor
jnp
mov
or
xchg
jae
mov
mov
test
test
jnp
mov
mov
sub
in
mov
xor
in
mov
sub
in
jge
dec
xor
in
jg
nop
or
adc
in
fisubr
adc
in
sahf
outs
sub
xchg
outs
pop
sub
in
fisubr
scas
imul
in
fisubr
lea
aam
in
fisubr
lea
jb
jg
jbe
pop
nop
jg
jne
xchg
ja
xchg
jb
mov
aam
mov
mov
(bad)
push
xchg
mov
adc
rcr
outs
sub
in
fisubr
xor
in
mov
xor
in
mov
push
cmp
in
jg
inc
xor
in
(bad)
outs
mov
mov
add
mov
ja
dec
cmp
in
mov
cmp
pop
jle
mov
(bad)
outs
sub
mov
test
nop
or
jbe
das
test
nop
cmp
in
jb
sub
jne
nop
or
jbe
das
test
jp
ja
shr
fisubr
xor
in
mov
adc
mov
dec
mov
imul
shr
fisubr
xor
in
mov
xor
in
mov
sub
in
mov
add
xchg
xor
in
fisubr
sub
in
jg
nop
xor
in
jg
sub
mov
test
add
outs
ja
test
push
and
in
fisubr
sub
in
jae
sub
mov
adc
in
test
test
jnp
jp
shr
fisubr
or
sub
jae
mov
je
pop
jg
add
outs
jnp
adc
jnp
mov
xor
in
mov
test
dec
add
adc
in
mov
xor
in
mov
test
dec
add
sub
fisubr
pop
adc
(bad)
in
mov
add
or
sub
mov
xor
in
mov
test
jbe
imul
or
sub
mov
xor
in
mov
test
xchg
xor
in
mov
test
mov
fisubr
add
jl
xor
ins
in
jg
mov
jae
nop
cmp
in
lea
cmp
in
fisubr
xor
in
je
mov
jle
dec
xor
in
mov
add
sub
ja
jnp
imul
xor
in
jg
add
outs
dec
xor
in
fisubr
xor
in
jae
dec
xor
shr
fisubr
adc
in
jg
jl
xchg
dec
xor
dec
sub
in
jae
sub
jnp
jne
jb
outs
in
jb
sub
jnp
jbe
js
jae
(bad)
outs
mov
nop
jp
mov
adc
jno
mov
jno
jg
sub
mov
in
fisubr
push
mov
fisubr
outs
xchg
jle
(bad)
outs
jbe
jno
jl
jnp
mov
mov
mov
outs
aas
test
mov
jge
jg
cmp
jo
ja
ret
xchg
mov
fisubr
push
mov
adc
xchg
mov
bound
shr
fisubr
push
jge
xchg
mov
bound
shr
fisubr
or
in
mov
test
imul
push
test
jo
push
test
imul
test
cmps
outs
adc
in
cdq
outs
pop
or
in
scas
outs
jno
push
test
pop
cmp
in
mov
sub
in
test
test
lea
jne
jnp
push
ins
in
mov
sub
in
je
sub
jne
cmp
mov
xchg
ja
nop
mov
fisubr
outs
nop
jb
jl
mov
je
je
cmp
jg
xchg
jnp
adc
mov
jne
ja
jb
je
jne
mov
fisubr
xchg
lods
shr
imul
push
lods
xchg
jmp
jno
jnp
je
mov
jle
xchg
xor
in
fisubr
xchg
jmp
dec
lods
(bad)
jmp
adc
lahf
in
jnp
js
ja
mov
jne
jl
xor
jae
mov
xor
in
mov
sub
in
mov
test
aas
adc
in
fisubr
xchg
(bad)
jmp
aas
lods
enter
outs
xchg
enter
inc
xchg
ret
imul
xchg
jmp
xor
xchg
jmp
push
lods
mov
sahf
imul
cmp
sub
fisubr
xor
in
jg
dec
or
jnp
xor
push
jae
mov
jne
nop
xor
in
mov
test
pop
mov
add
dec
sub
in
mov
test
jne
xchg
dec
adc
in
fisubr
xchg
(bad)
jmp
aas
lods
xchg
jmp
inc
lods
mov
xchg
imul
mov
mov
lods
leave
jmp
push
lods
ret
imul
lods
ret
outs
xor
jmp
inc
lods
xchg
jmp
inc
lods
mov
xchg
mov
xchg
mov
xchg
enter
ins
xchg
mov
(bad)
imul
lods
(bad)
sub
fisubr
xor
in
mov
xor
in
mov
test
pop
mov
or
jl
xor
jno
je
xchg
jnp
xchg
xor
in
jae
jbe
xor
ins
in
jg
mov
jbe
jbe
adc
shr
fisubr
xchg
mov
retf
xchg
mov
xchg
mov
retf
imul
lods
(bad)
xor
in
jmp
jmp
cmp
mov
fwait
imul
inc
lods
(bad)
jmp
push
lods
mov
iret
imul
inc
lods
mov
les
xchg
lods
ret
imul
fisubr
xor
in
jnp
jne
jo
jl
mov
test
jbe
jae
je
jbe
dec
xor
in
jle
xchg
or
nop
xor
in
mov
test
jne
jne
jl
mov
adc
in
fisubr
xchg
mov
cdq
imul
inc
lods
(bad)
jmp
aas
lods
enter
dec
sub
jmp
inc
lods
vpinsrw
lods
shr
outs
xchg
ret
jmp
inc
lods
nop
jmp
push
lods
(bad)
jmp
inc
lods
mov
cmp
jg
nop
cmp
in
jle
dec
sub
in
jne
jl
xor
jno
jle
js
jae
jb
jns
test
(bad)
outs
jnp
ja
jle
mov
adc
in
fisubr
xchg
jmp
push
lods
mov
xchg
mov
or
jmp
inc
lods
ret
jmp
aas
lods
xchg
jmp
inc
lods
ret
imul
lods
ret
imul
push
lods
mov
xchg
lods
mov
xor
in
sub
xchg
test
jbe
add
mov
pop
jnp
nop
xor
in
jbe
dec
cmp
in
jbe
test
jne
ja
jb
je
jne
mov
je
xchg
fisubr
xchg
mov
into
imul
cwde
imul
lods
mov
iret
imul
lods
vpinsrw
push
lods
ret
imul
lods
mov
xchg
jmp
inc
lods
mov
xchg
imul
lods
shr
imul
lods
mov
xchg
mov
retf
xchg
outs
sub
fisubr
xor
in
sub
xchg
test
jbe
add
mov
pop
jnp
nop
xor
in
jbe
dec
cmp
in
jbe
test
jne
ja
jb
je
jne
mov
je
xchg
je
xchg
jne
dec
sub
in
mov
xor
in
jbe
dec
xor
in
jle
xchg
or
nop
xor
in
mov
test
jne
jne
jl
mov
adc
in
fisubr
xchg
mov
into
imul
cwde
imul
lods
mov
iret
imul
lods
vpinsrw
push
lods
ret
imul
lods
mov
xchg
jmp
inc
lods
mov
xchg
imul
lods
shr
imul
lods
mov
xchg
mov
retf
xchg
outs
inc
xchg
(bad)
ins
xchg
jmp
cmp
mov
xchg
imul
lods
ret
imul
lods
vcmppd
inc
lods
(bad)
jmp
dec
lods
mov
xchg
jmp
lods
mov
xchg
imul
adc
(bad)
in
jnp
nop
xor
in
jbe
dec
cmp
in
jbe
test
jne
ja
jb
je
jne
mov
je
xchg
cwde
imul
inc
lods
(bad)
imul
lods
shr
imul
lods
mov
xchg
mov
retf
xchg
outs
mov
jg
dec
xor
in
mov
cmp
in
(bad)
outs
nop
cmp
in
fisubr
xchg
jmp
aas
lods
mov
xchg
jmp
aas
lods
shr
fisubr
xor
in
mov
test
ja
jb
je
jne
mov
jl
xchg
xor
in
fisubr
xchg
mov
cdq
imul
inc
lods
(bad)
jmp
push
lods
mov
int
cmp
cdq
imul
cmp
mov
xchg
imul
lods
shr
imul
test
nop
cmp
jl
mov
test
dec
cmp
in
jbe
test
iret
imul
lods
mov
xchg
xchg
jmp
inc
lods
mov
shr
dec
lods
mov
xchg
imul
lods
shr
imul
test
nop
cmp
jl
mov
test
dec
cmp
in
jbe
test
iret
imul
lods
mov
xchg
xchg
jmp
push
lods
ret
imul
lods
vcmppd
push
lods
mov
sahf
imul
cmp
mov
mov
test
test
jl
pop
jg
jl
adc
(bad)
imul
lods
mov
xchg
xchg
jmp
inc
lods
mov
shr
dec
lods
mov
xchg
imul
lods
shr
imul
shr
fisubr
xor
in
mov
xor
in
jb
xchg
add
xchg
xor
in
jne
xchg
jne
add
outs
test
jle
pop
jbe
pop
mov
test
mov
jg
jnp
adc
shr
fisubr
xchg
jmp
push
lods
xchg
jmp
cmp
shr
imul
lods
ret
imul
lods
mov
les
xchg
lods
ret
outs
aas
xchg
xchg
jmp
xor
mov
xchg
nop
jmp
aas
lods
enter
dec
or
jmp
push
lods
mov
xchg
pushf
in
jg
lea
mov
add
mov
jle
test
fisubr
xchg
jmp
aas
lods
(bad)
imul
test
aas
xchg
lods
shr
outs
push
add
jnp
jp
ins
in
mov
add
test
fisubr
xchg
lods
ret
imul
lods
mov
xchg
imul
lods
mov
xchg
shr
imul
test
push
sub
in
jg
dec
xor
in
jl
jbe
ds
and
retf
xchg
xchg
jmp
inc
lods
nop
jmp
inc
lods
vcmppd
adc
mov
jne
ja
jb
je
jne
mov
jle
inc
adc
jmp
push
lods
(bad)
xor
jmp
adc
(bad)
in
mov
xor
in
mov
test
nop
cmp
in
jl
xchg
xor
in
fisubr
xchg
jmp
inc
lods
mov
lds
xchg
inc
xchg
nop
jmp
inc
lods
vcmppd
xor
mov
retf
xchg
outs
xor
in
je
mov
jle
test
mov
cmp
shr
fisubr
xchg
(bad)
jmp
aas
lods
mov
xchg
mov
adc
in
jne
ja
jb
je
jne
mov
mov
cmp
shr
fisubr
xchg
jmp
dec
lods
enter
outs
xchg
mov
adc
in
jne
mov
fisubr
cmp
adc
in
mov
adc
in
fwait
imul
adc
mov
cwde
outs
sub
jmp
sub
xchg
outs
ins
adc
in
loopne
sbb
xchg
outs
ins
adc
in
out
sbb
popf
outs
ins
adc
in
jmp
test
ins
adc
in
mov
test
ins
adc
in
in
sbb
lahf
outs
ins
adc
in
mov
sbb
iret
mov
mov
int3
inc
cmp
mov
cmp
into
cmp
inc
mov
mov
adc
shr
outs
sub
mov
cmp
in
fisubr
xor
in
ja
test
fisubr
xor
in
mov
test
jbe
xor
jns
je
mov
mov
test
nop
cmp
jl
mov
test
test
jg
jbe
xor
jbe
mov
xor
in
fisubr
xor
in
mov
test
dec
sub
in
mov
test
pop
jg
mov
fisubr
data16
jle
jns
sub
scas
outs
mov
fisubr
jo
mov
imul
pusha
jle
jo
xor
(bad)
jb
sub
fisubr
bound
outs
xchg
(bad)
vpminub
jne
test
jp
mov
xchg
je
mov
jle
dec
add
sub
or
fisubr
sub
in
jg
push
xor
in
jg
sub
ja
sub
fisubr
bound
push
jbe
sub
jnp
xchg
mov
adc
in
jae
mov
mov
dec
adc
xchg
jg
xchg
je
test
mov
test
test
sub
adc
outs
in
jnp
nop
cmp
jl
mov
test
mov
ja
dec
cmp
in
mov
cmp
mov
fisubr
xor
in
mov
test
jl
test
jp
jno
jg
mov
sub
in
jne
nop
adc
in
jne
jnp
mov
pop
mov
test
pop
jne
mov
jns
jbe
adc
outs
xchg
jge
test
test
inc
xchg
(bad)
jmp
adc
outs
in
jne
lea
mov
adc
mov
xchg
mov
outs
jnp
mov
fisubr
data16
jl
mov
test
mov
jge
pop
jne
jne
mov
in
fisubr
jnp
bound
mov
in
fisubr
outs
jno
ins
mov
outs
dec
xor
in
jne
jnp
ja
mov
add
mov
fisubr
imul
or
cmp
fisubr
jne
lea
mov
jg
jg
mov
fisubr
xor
in
(bad)
outs
jp
xor
shr
fisubr
sub
shr
fisubr
sub
in
fisubr
or
dec
xor
mov
shr
xor
outs
dec
add
jne
test
jl
xchg
aas
cmp
in
mov
add
dec
xor
in
(bad)
outs
nop
xor
in
movs
outs
xchg
xor
in
jne
sub
mov
outs
jo
jle
je
jbe
jp
jge
jle
test
xchg
jle
jne
test
xchg
imul
xchg
jnp
jae
je
mov
push
mov
jne
xchg
jle
jge
jbe
imul
push
jl
xchg
jno
jge
xchg
jbe
jl
jbe
jb
mov
ins
in
fisubr
jne
xchg
jle
mov
int
xchg
jnp
jae
je
mov
push
mov
mov
test
test
mov
test
jle
ja
xchg
jno
jge
xchg
jbe
jl
jbe
jb
mov
ins
in
fisubr
sbb
in
je
test
jle
test
jae
mov
mov
adc
in
mov
sub
in
mov
adc
in
mov
add
dec
xor
in
(bad)
outs
nop
xor
in
movs
outs
jnp
ja
jl
(bad)
outs
jp
adc
or
test
mov
xchg
jns
mov
adc
in
scas
outs
ins
and
xchg
outs
outs
adc
in
fisubr
jo
jns
xchg
jg
jbe
adc
mov
imul
jo
mov
adc
(bad)
ja
test
bound
inc
sub
mov
or
test
js
outs
(bad)
shr
fisubr
sub
mov
je
pop
jnp
jl
jne
js
fisubr
sub
mov
je
pop
ja
test
jge
test
mov
dec
xor
in
mov
sub
in
fisubr
adc
test
xchg
ins
nop
jno
xchg
jns
test
ins
ret
dec
add
xchg
xor
in
jno
test
jae
nop
add
mov
mov
xor
in
(bad)
outs
mov
(bad)
outs
sub
jns
test
ins
mov
xchg
xchg
xor
in
jno
test
jae
nop
add
mov
mov
xor
in
(bad)
outs
mov
enter
adc
jecxz
retf
xchg
jmp
push
lods
xchg
jmp
mov
sub
mov
mov
fisubr
xor
in
jb
jl
ja
push
(bad)
outs
dec
sub
mov
cmp
mov
mov
mov
jge
pop
jnp
xchg
xor
in
mov
xor
ins
in
(bad)
outs
mov
jb
jbe
outs
test
inc
adc
in
fisubr
sub
mov
mov
sub
fisubr
xchg
mov
xchg
jmp
adc
jns
mov
xor
in
mov
add
imul
sub
jnp
jbe
xor
shr
outs
sub
sub
ja
sub
outs
xchg
xor
in
mov
test
dec
xor
in
(bad)
outs
nop
xor
in
movs
outs
test
jne
jl
inc
test
add
outs
dec
adc
in
jnp
jne
jb
outs
in
jb
cmp
(bad)
mov
leave
ins
jg
xchg
jl
imul
xor
in
je
test
fisubr
xor
in
mov
xor
in
fisubr
imul
sub
outs
mov
fisubr
adc
in
fisubr
adc
xchg
jae
xchg
adc
in
fisubr
adc
in
fisubr
jp
mov
in
fisubr
jo
xchg
jno
jle
xchg
adc
mov
outs
test
xchg
ins
xchg
mov
lahf
in
scas
outs
imul
adc
ins
test
test
mov
test
push
sub
in
xchg
outs
sub
jg
sub
cwde
imul
xchg
jmp
adc
outs
in
jne
lea
jge
cmp
fisubr
jo
xchg
je
jnp
sub
mov
jmp
push
lods
shr
imul
lods
xchg
jmp
jb
ins
xchg
fisubr
xchg
(bad)
jmp
inc
lods
shr
fisubr
sub
jbe
mov
fisubr
push
mov
ja
sub
jbe
jnp
jle
shr
fisubr
push
mov
mov
adc
xchg
mov
adc
jmp
adc
mov
retf
xchg
mov
adc
jmp
inc
lods
mov
(bad)
imul
lods
shr
fisubr
jo
xchg
jns
jbe
sub
jb
xchg
xor
in
jle
sub
jne
sub
jns
pop
fisubr
bound
ins
jg
jl
outs
adc
outs
mov
jne
xchg
call
je
test
xchg
ins
xchg
jge
jbe
adc
outs
in
fisubr
jnp
bound
mov
outs
jo
jle
fisubr
ja
test
xchg
mov
test
sub
mov
or
pop
add
add
jnp
inc
test
and
call
jmp
inc
lods
ret
jmp
adc
ins
test
test
test
jbe
in
fisubr
adc
in
fisubr
adc
mov
outs
jno
dec
test
adc
in
cwde
outs
push
sub
in
xchg
outs
jo
adc
stos
in
mov
test
xchg
retf
shr
fisubr
jmp
sub
fisubr
cmp
in
jbe
test
mov
xor
in
lds
cmp
in
jg
cmp
in
lea
xor
in
jnp
xchg
jg
jnp
jne
jle
(bad)
outs
sub
fisubr
cmp
in
jbe
test
mov
xor
in
lds
cmp
in
jg
cmp
in
jg
nop
sub
test
jl
pop
jg
jl
cmp
jnp
jne
jle
(bad)
outs
sub
jl
xchg
xor
in
movs
outs
test
jne
jl
inc
test
jp
ja
vpcmpeqw
xor
in
fisubr
cmp
in
jbe
test
mov
xor
in
lds
cmp
in
jg
cmp
in
mov
sub
test
jl
pop
jg
jl
cmp
jnp
jne
jle
(bad)
outs
sub
jl
xchg
xor
in
movs
outs
test
jne
jl
inc
test
jp
ja
(bad)
outs
pop
fisubr
xchg
jmp
push
lods
xchg
jmp
jp
jns
jbe
test
mov
xor
in
lds
cmp
in
jg
cmp
in
jg
nop
and
in
jnp
js
ja
ins
in
mov
pop
je
pop
cmp
in
jbe
xchg
mov
test
jl
aas
test
dec
cmp
in
jbe
test
mov
xor
in
lds
cmp
in
jg
cmp
in
jg
nop
and
in
jnp
js
ja
ins
in
fisubr
cmp
in
jbe
test
mov
xor
in
lds
cmp
in
jg
cmp
in
jg
nop
and
in
jne
mov
mov
cmp
in
mov
add
inc
xor
in
mov
test
sub
mov
sub
movs
outs
pop
or
test
test
pop
or
fisubr
and
in
xchg
outs
jno
pop
test
xchg
jno
jge
xchg
jbe
sub
jb
mov
(bad)
outs
sub
mov
add
pop
sub
in
mov
xor
in
jbe
aas
xor
in
ja
test
fisubr
adc
aad
outs
test
xchg
jle
fisubr
sub
in
iret
outs
cmp
in
jbe
mov
jns
xchg
and
in
je
jnp
mov
mov
mov
xor
in
(bad)
outs
sub
jnp
nop
cmp
jl
mov
test
mov
mov
test
test
shr
fisubr
xor
in
(bad)
outs
nop
xor
in
movs
outs
xchg
xor
in
mov
xor
in
lds
xor
in
jg
cmp
in
jbe
mov
jns
xchg
cmp
shr
fisubr
xor
in
jg
mov
fisubr
cmp
in
je
xchg
add
xchg
xor
in
mov
xor
in
lds
xor
in
jg
cmp
in
jnp
jbe
jae
(bad)
in
fisubr
jne
xchg
imul
lods
dec
imul
push
jne
xchg
imul
lods
dec
je
mov
mov
adc
xchg
xchg
mov
jo
xchg
jno
mov
xchg
jle
jnp
sub
mov
je
jns
jbe
jb
mov
jae
jbe
jae
mov
jg
(bad)
jne
test
jl
jne
ins
mov
mov
bound
ins
int
mov
jg
xchg
jl
jae
je
jns
jbe
jb
mov
or
jg
lea
xchg
jle
fisubr
jno
xchg
jae
je
jl
jo
outs
mov
test
aad
jnp
pushf
pushf
in
sub
mov
xchg
xchg
stos
jae
jp
dec
mov
mov
cmc
push
xor
jb
shl
test
push
pop
jnp
imul
cmp
(bad)
jb
test
jno
dec
addr16
or
popf
pop
push
clc
pop
mov
nop
lahf
jle
inc
and
inc
dec
imul
gs
je
dec
shl
js
jl
call
das
mov
popa
sub
fdivr
dec
sub
cmp
int3
out
xchg
mov
jns
sub
jo
mov
jge
xchg
sub
test
jns
push
mov
cli
adc
dec
mov
test
hlt
int
or
fistp
xchg
repz
pop
mov
aaa
push
pop
cmp
in
ds
fadd
inc
out
sbb
stos
lahf
and
add
push
fwait
iret
ds
in
rcl
call
ret
sub
movs
fimul
stos
fsubr
fisubr
mov
push
dec
ja
fcomip
add
mov
sahf
xor
shr
xchg
pop
and
jge
call
push
pop
(bad)
pop
enter
scas
in
xor
inc
aaa
stos
test
enter
mov
add
sbb
cwde
dec
inc
mov
mov
(bad)
xor
test
mov
out
push
xchg
pusha
popa
push
dec
dec
pop
cmp
lods
popa
mov
pop
jp
xchg
mov
pop
pop
call
cli
mov
movs
fwait
mov
out
lock
mov
push
jns
push
sub
jmp
das
lods
repz
inc
mov
push
gs
(bad)
jnp
mov
mov
in
push
adc
cvtps2pd
dec
and
sbb
jno
jno
xchg
mov
cmp
int3
pop
test
lea
and
or
xchg
add
jg
inc
mov
aad
sbb
out
out
call
jmp
test
xor
inc
mov
fistp
jo
mov
jmp
pop
pop
movs
push
shl
xchg
mov
sbb
popa
sub
inc
sbb
out
lods
sar
lods
fcmovnb
pop
jmp
(bad)
(bad)
pushf
cdq
or
xchg
call
push
stc
jmp
pop
hlt
in
sbb
push
loope
leave
mov
pop
mov
outs
cmp
shl
adc
cmp
daa
rcl
cs
sbb
aas
std
ss
xchg
or
adc
test
hlt
(bad)
jmp
mov
aad
call
in
ja
push
push
inc
mov
sti
xchg
ret
mov
fsubr
push
shl
mov
pop
cmps
cdq
dec
pop
jl
gs
outs
idiv
mov
call
aas
mov
lahf
retf
cmc
inc
cs
xchg
jne
inc
pop
mov
pop
into
or
jmp
or
jmp
inc
(bad)
mov
push
movs
jle
xchg
lods
cld
xchg
jmp
mov
test
call
xor
mov
add
out
sub
sbb
xor
push
stc
ret
push
clc
push
adc
mov
sbb
pop
jp
outs
or
or
test
retf
cmp
jnp
fimul
mov
mov
xchg
ins
jno
adc
ins
imul
jae
push
(bad)
je
retfw
mov
stos
(bad)
sbb
add
ins
popf
add
es
rcl
mov
mov
(bad)
xchg
sub
fbld
lea
repz
(bad)
clc
jge
arpl
mov
sub
out
cld
lods
mov
je
mov
lods
fild
mov
sti
int3
jae
(bad)
or
mov
in
xlat
shl
into
mov
mov
cmps
(bad)
jp
aaa
fwait
retf
fwait
iret
addr16
inc
(bad)
out
out
movs
or
add
jg
inc
test
push
je
test
(bad)
cld
mov
adc
fst
pop
xchg
clc
mov
xchg
add
inc
push
or
and
int3
pop
jle
cmp
adc
out
ja
pop
xchg
jg
fistp
(bad)
sti
sahf
jnp
cmps
movs
cmp
sub
add
lea
movs
in
mov
cmps
popa
and
jmp
ret
add
int
and
xor
pop
and
sahf
jne
pop
ret
stos
cmc
call
enter
cmc
popa
fidiv
dec
movs
out
jmp
leave
popa
add
jnp
addr16
mov
scas
jmp
xchg
sub
ror
shr
dec
icebp
pop
sub
push
add
mov
ror
fidivr
fs
or
dec
xchg
jle
sbb
jl
and
xor
jb
jp
test
mov
jnp
add
mov
test
push
outs
push
add
popf
mov
or
mov
in
test
jecxz
jecxz
mov
jecxz
or
fld
je
mov
mov
sbb
sbb
inc
int
test
cmp
adc
icebp
retf
adc
pop
retf
cdq
ret
jmp
xchg
xor
pop
outs
jecxz
cmp
mov
int3
mov
mov
sub
aam
aam
cmp
(bad)
data16
and
push
add
loopne
fidivr
shl
jnp
or
push
mov
pop
xor
push
sub
jo
sbb
push
out
repnz
test
movs
pop
jae
test
jecxz
loopne
test
jnp
adc
inc
icebp
push
loop
inc
fisttp
add
mov
(bad)
div
ds
and
adc
adc
and
fwait
xchg
into
mov
xchg
leave
(bad)
cmp
push
in
sbb
sbb
mov
int
or
xchg
dec
mov
(bad)
and
fld
dec
fistp
sub
movhps
add
jecxz
loopne
je
adc
pop
js
pop
mov
lds
call
cmp
imul
ret
sbb
call
sbb
fistp
adc
mov
das
jno
lock
test
cmp
hlt
lahf
ja
inc
adc
int3
cdq
sti
jle
xchg
cdq
mov
jo
popf
(bad)
pop
dec
ret
jmp
shl
and
dec
ja
push
in
pop
xchg
push
in
mov
xlat
or
pop
stos
and
dec
leave
js
xchg
es
outs
jecxz
mov
push
inc
gs
sahf
xor
jmp
popf
ja
scas
pop
jo
mov
dec
pop
push
sub
(bad)
(bad)
bound
jl
and
inc
(bad)
mov
out
out
hlt
stc
pop
cmp
push
and
daa
cld
movs
(bad)
adc
xlat
dec
adc
add
mov
pop
or
int3
and
scas
mov
lods
fldenv
aad
jle
nop
js
sub
cmp
lock
xchg
push
mov
pop
xor
add
cdq
push
sbb
add
mov
and
and
cdq
cmp
mov
mov
stc
scas
fs
sti
imul
adc
daa
pop
cli
mov
cmp
int
cmc
aas
mov
out
mov
pusha
imul
loop
inc
sahf
jge
jmp
sbb
mov
mov
push
push
repz
loop
ret
imul
or
pop
mov
mov
shl
inc
cmp
jecxz
add
icebp
cmp
leave
mov
daa
adc
add
hlt
frstpm(287
and
and
test
and
cmp
lock
cld
push
in
cmc
or
std
push
into
(bad)
push
and
pop
adc
adc
mov
mov
xchg
outs
mov
test
dec
adc
in
popf
imul
test
inc
xchg
lods
mov
fisubr
adc
jmp
adc
ja
jg
jl
jb
ins
in
jbe
cmp
jle
mov
fisubr
je
xchg
jnp
into
lahf
jl
jne
jg
fisubr
cmp
in
mov
xor
in
cmps
outs
lea
fisubr
sub
jbe
mov
mov
xchg
fisubr
dec
pop
mov
xchg
ja
pop
xchg
je
jg
pop
bound
outs
pop
sbb
in
lea
xor
in
jnp
xchg
fisubr
and
in
jg
jl
xor
mov
xor
in
jle
pop
sub
in
mov
adc
in
mov
adc
in
fisubr
or
in
jns
jl
jno
jg
jne
mov
xchg
outs
nop
or
nop
xor
in
mov
test
pop
mov
and
in
jae
mov
xchg
outs
mov
jns
xchg
adc
in
mov
cmp
in
jnp
lea
jbe
test
jae
jl
adc
shr
fisubr
adc
in
scas
outs
push
adc
in
lahf
outs
pop
or
in
jns
jl
jno
jg
jne
mov
lods
outs
xchg
xor
in
jne
ja
test
jne
xchg
nop
or
jl
test
nop
adc
in
jns
lea
jg
add
outs
imul
outs
jp
ja
outs
in
fisubr
xor
in
sub
mov
dec
xor
in
mov
test
pop
jg
add
outs
dec
xor
shr
fisubr
xor
in
jns
dec
cmp
in
mov
xor
je
mov
test
nop
xor
in
retf
outs
dec
add
in
int3
outs
cmp
jle
pop
jae
nop
cmp
in
jbe
pop
jbe
xchg
xor
in
mov
sub
jb
mov
test
dec
add
in
mov
test
dec
xor
sub
jp
mov
mov
test
cmp
leave
outs
add
in
int
inc
cmp
xchg
in
cwde
outs
imul
outs
or
in
nop
outs
jae
push
test
outs
and
test
pop
sub
in
lods
outs
push
sbb
mov
test
test
jb
xchg
sub
in
jbe
lea
mov
add
jne
mov
add
inc
mov
mov
push
addr16
addr16
dec
outs
xchg
mov
mov
push
arpl
cdq
scas
popf
push
pop
pop
pop
jno
jns
test
xchg
jns
jno
lea
jns
jg
jnp
jns
or
mov
jae
outs
mov
sub
retf
outs
cmp
inc
test
cmp
ret
outs
mov
jle
test
fisubr
outs
xor
imul
addr16
mov
popa
pop
addr16
xchg
inc
sub
mov
mov
push
ja
xchg
adc
mov
cmp
shr
fisubr
push
ret
lea
mov
test
test
jle
cmp
jnp
cmp
test
fisubr
sbb
in
xchg
outs
ins
xor
in
fisubr
xor
in
fisubr
adc
in
lahf
outs
imul
outs
dec
sub
in
lahf
outs
pop
adc
in
fisubr
and
in
fisubr
add
sub
jnp
mov
fisubr
adc
in
jno
test
jns
mov
mov
add
pop
fisubr
sub
in
sub
jne
jge
mov
xor
in
mov
add
jl
adc
js
jno
test
jbe
pop
jbe
pop
sub
in
jns
xchg
sub
in
jg
sub
jno
test
(bad)
outs
jnp
ja
jle
mov
adc
in
jno
test
jns
jne
xchg
nop
or
pop
jae
xchg
jno
mov
fisubr
sub
in
(bad)
outs
sub
jno
mov
fisubr
sub
in
fisubr
sub
in
jns
sub
jne
ja
jb
je
jne
mov
fisubr
add
xchg
xor
in
(bad)
outs
nop
xor
in
fisubr
add
xchg
xor
in
fisubr
xor
in
jno
jbe
jno
sub
outs
jp
xchg
xchg
xor
in
jg
jnp
ins
test
jp
adc
jno
mov
cmp
in
mov
adc
in
jne
mov
jnp
jp
test
jbe
jae
shr
fisubr
add
jl
jae
jne
jl
xchg
xor
in
mov
adc
in
mov
cmp
in
jnp
lea
jbe
test
ret
adc
in
mov
cmp
in
jnp
lea
jbe
test
int3
outs
adc
in
jae
nop
cmp
in
lea
adc
in
sub
mov
sub
sub
mov
add
outs
jbe
outs
test
jbe
ja
jne
mov
adc
in
mov
adc
in
fisubr
sub
in
mov
xor
in
xchg
outs
mov
fisubr
add
jne
jne
jl
test
test
sub
xchg
outs
outs
sub
in
test
test
xchg
or
test
jg
jl
inc
test
test
fisubr
adc
in
fisubr
xor
in
fisubr
xor
in
jns
mov
mov
xor
in
je
nop
sub
in
jge
xor
in
js
mov
fisubr
add
jne
jne
jl
scas
outs
jp
mov
mov
fisubr
adc
in
scas
outs
pop
and
in
jns
jne
xchg
add
ja
jle
fisubr
adc
in
jg
push
xor
in
jg
outs
or
jl
test
jp
fs
js
imul
xor
in
fisubr
cmp
in
jbe
test
jle
sub
je
test
jbe
xchg
mov
outs
test
in
fisubr
jne
xchg
jle
jne
test
xchg
imul
cwde
mov
mov
mov
nop
jb
fisubr
jne
xchg
jle
lea
imul
cwde
mov
test
test
jae
jbe
ins
test
add
outs
jne
test
cmp
jle
mov
fisubr
imul
ins
outs
jno
ja
jg
jnp
jb
jle
jnp
test
fisubr
xchg
ret
jmp
aas
lods
xchg
jmp
push
lods
xchg
jmp
inc
lods
mov
xchg
(bad)
jmp
cmp
mov
cdq
imul
lods
shr
imul
lods
(bad)
jmp
inc
lods
shr
imul
lods
(bad)
jmp
cmp
leave
jmp
xchg
xchg
xor
ins
in
jbe
mov
jae
nop
cmp
in
lea
xor
push
sub
in
jle
pop
mov
test
jbe
ja
shr
fisubr
xor
in
je
test
enter
adc
fwait
xchg
lea
jno
jbe
push
jo
mov
test
ja
nop
mov
fwait
xchg
lea
ins
jg
sahf
(bad)
js
mov
xchg
mov
jae
nop
adc
jns
jg
mov
test
imul
mov
dec
dec
jne
mov
lahf
pop
push
gs
popf
fwait
lods
cmps
popa
pop
jae
outs
mov
xchg
(bad)
ja
ja
(bad)
jae
ja
jns
jge
jnp
jg
mov
dec
mov
sub
(bad)
outs
sub
jno
sub
je
sub
mov
adc
in
jno
sub
sub
adc
ja
jnp
sub
jg
sub
mov
adc
in
mov
adc
in
sub
adc
jge
sub
adc
ja
sub
adc
jne
jne
sub
jge
sub
ja
sub
jno
sub
(bad)
outs
sub
mov
adc
mov
ret
mov
jne
dec
outs
jno
imul
outs
push
sub
in
jle
pop
jbe
mov
fisubr
bound
jl
mov
jg
jle
jno
xchg
jnp
jns
mov
fwait
xchg
je
(bad)
js
mov
nop
xchg
xchg
jnp
test
test
jbe
jne
ins
mov
xchg
ins
xchg
lea
bound
jl
mov
jns
jle
ja
jbe
outs
mov
nop
jb
jne
dec
jno
jge
nop
mov
in
fisubr
bound
jl
jle
jnp
jbe
ins
int
cwde
nop
addr16
mov
jg
mov
mov
jo
leave
jb
mov
jne
mov
outs
imul
jl
jnp
xchg
jle
mov
mov
jg
ja
jb
jae
mov
xchg
jnp
test
test
jbe
jns
jl
jnp
jbe
xor
ins
nop
jnp
jnp
xor
jns
jle
ja
jb
jl
jns
test
mov
outs
imul
jl
mov
jg
xchg
test
jg
mov
xchg
jnp
je
jbe
jne
ins
mov
test
test
(bad)
mov
adc
in
fisubr
jno
outs
jg
je
inc
pop
jae
jge
ror
test
test
jns
jge
mov
mov
bound
ins
mov
xchg
je
jns
jbe
xor
jl
jae
xchg
jg
mov
mov
fisubr
jno
outs
jg
je
inc
pop
jae
jge
ror
mov
xchg
ja
nop
ja
rol
int
xchg
lea
xchg
jl
mov
leave
jg
jnp
jbe
mov
sub
mov
xchg
mov
jo
jnp
jg
cwde
mov
leave
jl
mov
xchg
imul
outs
outs
bound
mov
jge
mov
xchg
jl
mov
xchg
mov
pop
cdq
xchg
mov
jbe
leave
jae
mov
ja
xchg
jge
sub
(bad)
xchg
mov
xchg
jge
mov
xchg
jl
mov
call
jbe
xchg
jne
dec
fs
jp
mov
gs
mov
jne
jno
mov
shr
fisubr
bound
mov
jge
mov
jo
jns
or
bound
pushf
jno
mov
jae
mov
imul
jl
jb
ins
in
fisubr
jo
xchg
xchg
jne
xor
push
scas
mov
jno
jge
sub
jbe
test
jne
dec
fs
jp
mov
gs
mov
jne
push
dec
jb
mov
fisubr
bound
pushf
jno
mov
jae
mov
imul
dec
jne
xchg
imul
xchg
xchg
jne
xor
push
xchg
xchg
jbe
dec
leave
jle
je
test
jbe
test
jne
dec
fs
jp
mov
gs
mov
jne
jno
mov
pop
bound
ins
int
or
jge
nop
jne
js
xchg
(bad)
jbe
dec
ja
leave
outs
xchg
jne
push
adc
xchg
mov
mov
jne
ds
mov
ja
mov
jae
cdq
xchg
jle
sub
jl
jne
jbe
mov
mov
outs
xchg
jno
outs
jg
je
inc
pop
jae
jge
ror
ja
jno
jne
arpl
nop
jb
mov
cmp
nop
jnp
nop
jo
leave
outs
mov
jge
jnp
outs
xchg
jno
outs
jg
je
inc
pop
jae
jge
ror
test
test
ja
xchg
jns
push
stos
ds
jle
mov
ja
mov
js
test
jno
(bad)
mov
adc
in
fisubr
jno
outs
jg
je
inc
pop
jae
jge
ror
ja
jno
jne
arpl
xchg
mov
jo
jbe
xlat
mov
(bad)
jno
jge
int
mov
imul
mov
xchg
xchg
jne
adc
cmp
lahf
outs
pop
and
call
xchg
jle
je
push
jae
mov
jne
ja
jl
ja
jnp
xor
ins
int
cwde
jbe
ja
mov
je
mov
mov
bound
jae
jo
mov
jnp
xchg
(bad)
mov
adc
aad
fisubr
jp
jge
test
ja
int
nop
mov
aad
xchg
js
test
jae
mov
xor
mov
jbe
test
sub
jbe
ins
push
jbe
xchg
jge
inc
mov
mov
mov
dec
outs
ja
outs
mov
mov
in
fisubr
push
jbe
xchg
jge
inc
scas
cmp
jae
mov
nop
jb
jne
xchg
data16
mov
jg
mov
mov
xchg
sub
mov
stos
cmp
outs
xchg
jg
jbe
outs
mov
jg
dec
jno
xchg
ins
in
fisubr
push
jbe
xchg
jge
inc
scas
cmp
jae
mov
nop
jb
jnp
jl
jnp
ins
mov
mov
jge
xchg
je
inc
mov
jne
dec
bound
jge
js
jl
adc
stos
in
fisubr
jno
xchg
jnp
mov
jg
jbe
ins
mov
jbe
nop
push
fisubr
outs
test
int
or
jg
jne
jb
ins
int
xchg
dec
je
ja
xchg
jge
ins
bound
ins
cmp
data16
ins
jle
mov
xchg
mov
xchg
imul
outs
mov
nop
jl
jne
mov
jbe
test
mov
jg
jnp
ja
or
jge
int
nop
jl
ja
jge
jae
(bad)
addr16
jg
mov
ins
int
nop
xchg
jne
test
test
mov
jae
xchg
jb
jl
pusha
jl
jns
call
js
xchg
leave
jl
jg
jnp
jne
jb
mov
leave
jae
mov
nop
outs
xchg
jle
dec
je
ja
xchg
jge
jbe
xor
jno
mov
bound
jge
jae
(bad)
addr16
ins
cmp
data16
ins
jle
mov
xchg
mov
xchg
imul
lea
xchg
jge
jbe
xor
mov
xchg
jbe
js
shr
fisubr
bound
jge
jae
(bad)
addr16
ins
cmp
data16
ins
jle
mov
xchg
mov
xchg
imul
xchg
test
lea
jae
mov
lea
jae
dec
data16
ins
nop
mov
ror
cmp
cmps
mov
jne
jle
jg
jbe
ins
mov
jg
dec
fs
mov
fisubr
jno
xchg
jae
je
mov
jns
mov
leave
jne
mov
jns
mov
jnp
je
(bad)
js
jbe
xchg
jne
ins
xchg
jae
je
xchg
data16
ins
jg
lea
cmp
adc
mov
test
xchg
mov
mov
outs
xchg
jno
mov
dec
mov
xchg
mov
jns
mov
jg
jne
test
xchg
call
jb
sub
jne
lea
xor
ins
leave
jae
mov
mov
jg
jnp
outs
xchg
mov
jno
mov
dec
mov
mov
ja
jbe
cmp
adc
xchg
mov
outs
xchg
mov
data16
jl
mov
mov
outs
xchg
jno
mov
dec
mov
mov
push
jbe
xchg
jge
test
aam
mov
mov
in
fisubr
jno
mov
dec
mov
mov
jbe
mov
mov
dec
jnp
mov
mov
leave
ins
xchg
mov
jno
mov
mov
xchg
mov
je
mov
mov
imul
mov
xchg
jno
mov
dec
xchg
jge
xchg
jns
dec
fs
ins
in
fisubr
jno
mov
dec
xchg
jge
xchg
jns
dec
ja
xchg
mov
jnp
dec
gs
ja
fisubr
jno
xchg
jle
jg
jbe
js
jl
mov
mov
in
fisubr
jno
xchg
jle
jg
jbe
jo
jb
mov
outs
cwde
fisubr
jno
xchg
jne
jnp
xchg
gs
mov
jg
jnp
jno
shr
fisubr
jbe
mov
mov
ja
in
fisubr
jno
jl
mov
xchg
data16
mov
jg
(bad)
jne
test
dec
data16
jg
outs
jnp
xchg
jne
ja
in
fisubr
push
mov
jne
test
mov
mov
fisubr
data16
mov
jae
jbe
jno
jno
sub
hlt
add
add
mov
adc
add
test
sub
mov
test
sub
or
or
shr
pop
lods
in
iret
shl
adc
test
fwait
and
inc
inc
cmp
inc
sub
push
scas
sub
or
push
cld
inc
sub
fisubr
adc
in
fisubr
jns
test
sub
fisubr
adc
lea
shr
fisubr
adc
in
fisubr
les
pop
xor
test
sub
fisubr
add
add
in
fisubr
adc
xor
test
sub
pushf
outs
out
push
test
sub
fisubr
les
lock
test
inc
pop
test
sub
add
test
out
push
test
sub
fisubr
jns
test
sub
fisubr
adc
sub
test
sub
pushf
outs
sub
fisubr
add
add
in
fisubr
adc
sub
test
sub
lahf
outs
dec
(bad)
push
test
mov
pop
test
sub
add
test
sbb
push
test
xor
fisubr
jbe
test
sub
fisubr
adc
jp
outs
ret
test
sub
fisubr
jbe
test
sub
fisubr
adc
sub
test
inc
leave
push
test
add
test
xor
push
test
sub
pushf
outs
sub
fisubr
add
add
in
fisubr
adc
sub
test
xor
add
test
inc
(bad)
push
test
sub
fisubr
(bad)
push
test
or
test
inc
jbe
test
sub
add
test
inc
(bad)
push
test
sub
fisubr
add
add
in
fisubr
adc
sub
test
adc
add
push
sub
fisubr
(bad)
push
test
sub
adc
int3
in
fisubr
add
add
in
fisubr
adc
sub
test
sub
lahf
outs
xor
push
test
or
test
ds
test
sub
add
test
push
(bad)
push
test
sub
fisubr
(bad)
push
test
or
test
bound
test
sub
add
test
mov
jp
outs
sub
fisubr
add
add
in
fisubr
adc
sub
test
sub
add
test
pop
leave
push
test
sub
fisubr
leave
push
test
or
test
xor
shr
fisubr
adc
add
push
sub
fisubr
leave
push
test
sub
fisubr
leave
push
test
sub
pushf
outs
daa
adc
in
fisubr
add
add
in
fisubr
adc
sub
test
sub
pushf
outs
fmulp
push
test
sub
fisubr
leave
push
test
mov
sub
test
sub
adc
shr
fisubr
add
add
in
fisubr
adc
sub
test
sub
pushf
outs
dec
enter
in
fisubr
adc
in
fisubr
enter
sub
outs
mov
sub
test
sub
adc
shr
fisubr
add
add
in
fisubr
adc
sub
outs
sub
fisubr
adc
jnp
outs
jle
push
test
sub
fisubr
enter
sub
outs
dec
(bad)
push
test
fidivr
test
sub
add
test
jle
push
test
sub
fisubr
jge
test
sub
fisubr
adc
sub
outs
push
enter
sub
test
sub
fisubr
add
add
in
fisubr
adc
sub
outs
sub
fisubr
adc
in
fisubr
add
add
sahf
outs
dec
xchg
outs
sbb
push
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
mov
fisubr
retf
push
test
push
retf
push
test
mov
pop
test
inc
add
shr
fisubr
adc
lds
add
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
mov
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
rcl
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
rcl
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
inc
push
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
inc
push
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
inc
push
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
dec
push
test
sbb
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
fwait
outs
in
push
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
dec
push
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
dec
push
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
pop
push
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
pop
push
test
sub
fwait
outs
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
addr16
test
and
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
mov
test
sub
fisubr
push
test
sub
add
test
sub
fisubr
adc
aaa
lahf
outs
dec
xchg
outs
push
int
test
xchg
push
test
sub
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
push
fisubr
imul
add
add
shr
fisubr
add
add
in
fisubr
add
add
xchg
fwait
outs
cs
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
xchg
fwait
outs
lds
test
mov
in
fisubr
int3
push
test
dec
int3
push
test
sub
pushf
outs
sub
add
test
push
jno
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
ja
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
jge
test
sub
fwait
outs
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
jg
test
sub
fwait
outs
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
pop
push
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
data16
outs
imul
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
sbb
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
pop
push
test
sub
fwait
outs
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
and
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
and
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
xor
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
xor
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
lds
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
(bad)
push
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
rcl
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
rcl
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
loopne
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
fwait
outs
(bad)
push
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
in
push
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
not
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
stc
push
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
sti
push
test
sub
fwait
outs
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
test
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
(bad)
push
test
add
add
shr
fisubr
add
add
in
fisubr
add
add
in
fisubr
xchg
push
test
bnd
test
inc
add
shr
fisubr
adc
loopne
outs
sub
pushf
outs
sub
add
test
leave
xchg
push
test
outs
jns
test
inc
add
shr
fisubr
adc
in
fisubr
adc
jnp
outs
sub
add
test
sub
fisubr
rcl
call
rcl
mov
adc
loopne
outs
sub
lahf
outs
sub
pushf
outs
sub
add
test
out
push
test
mov
pop
test
inc
add
shr
fisubr
adc
ficomp
test
call
outs
xchg
push
test
repnz
shr
fisubr
jns
test
inc
add
shr
fisubr
adc
mov
outs
sub
pushf
outs
sub
add
test
sub
fisubr
js
test
inc
add
shr
fisubr
adc
in
fisubr
adc
sbb
push
test
sub
fisubr
rcl
shr
fisubr
jns
test
inc
add
shr
fisubr
adc
mov
adc
pushf
sbb
push
test
sub
call
sbb
adc
sar
adc
add
push
sub
fisubr
inc
push
test
call
outs
call
outs
cwde
inc
push
test
into
rcl
shr
fisubr
jge
test
inc
add
shr
fisubr
adc
push
call
sbb
push
test
hlt
and
fisubr
rcl
add
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
data16
outs
dec
xchg
outs
cmp
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
sub
add
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
cdq
push
test
sub
fisubr
cdq
push
test
sub
adc
iret
in
fisubr
adc
push
lahf
outs
sub
fisubr
adc
in
fisubr
rcl
scas
jmp
movs
push
lahf
outs
sub
adc
fs
lahf
outs
sub
fisubr
adc
in
fisubr
add
add
xchg
outs
adc
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
jle
pop
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
fistp
test
sub
call
in
fisubr
adc
in
fisubr
aad
test
sub
fisubr
adc
pop
lahf
outs
dec
xchg
outs
push
push
test
stos
aad
test
sub
fisubr
adc
add
push
les
pop
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
xchg
outs
add
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
sub
imul
and
test
sub
fisubr
adc
in
fisubr
add
add
adc
addr16
outs
sub
sahf
outs
dec
xchg
outs
pop
aam
test
sub
fisubr
adc
in
fisubr
adc
add
push
pop
sbb
imul
and
test
sub
fisubr
adc
in
fisubr
add
add
addr16
outs
dec
xchg
outs
ret
test
sub
fisubr
adc
in
fisubr
adc
add
push
fstp
imul
and
test
sub
fisubr
adc
in
fisubr
add
add
push
movs
mov
sbb
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
inc
sbb
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
dec
xchg
outs
xchg
xlat
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
mov
pop
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
push
adc
and
outs
sub
sahf
outs
sub
adc
repz
adc
push
push
adc
int
sahf
outs
and
popa
sahf
outs
sub
sahf
outs
daa
adc
popa
sahf
outs
xor
sahf
outs
dec
xchg
outs
repnz
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
pop
pop
pop
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
dec
xchg
outs
xchg
(bad)
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
in
pop
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
popa
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
fbld
outs
sub
sahf
outs
adc
bound
test
sub
sahf
outs
daa
adc
bound
test
dec
xchg
outs
jmp
outs
sub
fisubr
adc
in
fisubr
adc
add
push
mov
pop
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
sub
outs
sub
sahf
outs
dec
xchg
outs
mov
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
sbb
pop
test
and
pop
test
sub
adc
xor
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
xchg
outs
or
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
js
pop
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
dec
xchg
outs
inc
fcom
shr
fisubr
adc
in
fisubr
adc
in
fisubr
adc
add
push
mov
jmp
ins
sbb
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
arpl
mov
call
outs
sub
fisubr
adc
in
fisubr
adc
add
push
and
shr
fisubr
and
shr
fisubr
and
scas
jmp
inc
sbb
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
adc
fs
outs
sub
sahf
outs
dec
xchg
outs
add
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
call
outs
mov
in
fisubr
and
scas
jmp
mov
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
adc
fs
outs
dec
xchg
outs
jp
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
xor
pop
test
sbb
pop
test
and
pop
test
dec
and
scas
jmp
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
xchg
outs
adc
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
and
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
dec
xchg
outs
push
push
test
sub
fisubr
adc
in
fisubr
adc
jmp
pusha
es
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
dec
sahf
outs
sub
sahf
outs
inc
add
daa
dec
sahf
outs
sub
adc
out
dec
sahf
outs
inc
add
test
add
dec
sahf
outs
inc
add
pop
dec
sahf
outs
sub
sahf
outs
inc
add
xlat
dec
sahf
outs
xor
sahf
outs
inc
add
mov
sahf
outs
xor
adc
mov
add
add
dec
sahf
outs
adc
dec
sahf
outs
inc
add
movs
dec
sahf
outs
sub
sahf
outs
inc
add
je
sahf
outs
sub
adc
jl
sahf
outs
sub
adc
test
outs
sub
adc
dec
dec
sahf
outs
sub
adc
push
dec
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
cmp
sahf
outs
sub
adc
shr
fisubr
adc
in
fisubr
adc
in
fisubr
adc
icebp
sahf
outs
adc
in
fisubr
adc
in
fisubr
fst
scas
jmp
shl
lahf
outs
sub
lahf
outs
sub
fisubr
adc
in
fisubr
add
add
dec
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
dec
xchg
outs
ret
test
sub
fisubr
adc
in
fisubr
adc
add
push
inc
and
fisubr
and
fisubr
and
imul
daa
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
sub
sahf
outs
dec
xchg
outs
inc
fcom
shr
fisubr
adc
in
fisubr
adc
in
fisubr
adc
add
push
retf
test
shl
fisubr
and
fisubr
and
imul
sub
test
sub
fisubr
adc
in
fisubr
add
add
dec
sahf
outs
sub
sahf
outs
dec
xchg
outs
ret
test
sub
fisubr
adc
in
fisubr
adc
add
push
sbb
test
dec
and
test
dec
and
test
aaa
and
test
ins
and
test
ins
and
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
inc
push
sahf
outs
sub
sahf
outs
adc
push
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
xor
sahf
outs
sub
sahf
outs
xor
adc
fimul
outs
xor
sahf
outs
adc
dec
sahf
outs
sub
dec
sahf
outs
sub
sahf
outs
das
adc
dec
sahf
outs
sub
sahf
outs
sbb
sahf
outs
dec
xchg
outs
push
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
cwde
daa
pop
test
mov
in
fisubr
daa
pop
test
mov
in
fisubr
daa
pop
test
and
and
test
sub
fisubr
adc
in
fisubr
add
add
dec
sahf
outs
dec
xchg
outs
jb
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
das
es
test
pop
es
test
sub
adc
jl
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
dec
sahf
outs
sub
sahf
outs
dec
xchg
outs
rcr
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
stos
es
test
mov
pop
test
fwait
es
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
dec
sahf
outs
sub
sahf
outs
dec
xchg
outs
and
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
sub
pop
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
dec
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
pushf
dec
sahf
outs
sub
sahf
outs
adc
dec
sahf
outs
adc
dec
sahf
outs
sub
sahf
outs
adc
dec
sahf
outs
xor
sahf
outs
xor
sahf
outs
xor
adc
sub
outs
dec
xchg
outs
and
test
sub
fisubr
adc
in
fisubr
adc
add
push
loope
pop
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
dec
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
loop
sahf
outs
sub
sahf
outs
adc
dec
sahf
outs
dec
xchg
outs
push
loopne
test
sub
fisubr
adc
in
fisubr
adc
add
push
arpl
pop
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
dec
xchg
outs
shl
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
ret
sub
scas
jmp
sbb
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
dec
sahf
outs
sub
sahf
outs
dec
xchg
outs
sub
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
sub
fisubr
sub
shr
fisubr
sub
into
in
fisubr
sub
add
test
bnd
test
int3
adc
test
sub
fisubr
adc
or
movs
mov
ss
test
mov
push
test
sub
fisubr
adc
add
push
lea
pop
test
jne
pop
test
sub
adc
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
and
push
sahf
outs
sub
sahf
outs
daa
adc
push
sahf
outs
dec
xchg
outs
loop
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
sub
scas
jmp
mov
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
adc
push
sahf
outs
sub
sahf
outs
sub
adc
xchg
push
sahf
outs
sub
sahf
outs
adc
push
sahf
outs
and
push
sahf
outs
sub
sahf
outs
daa
adc
push
sahf
outs
sub
sahf
outs
xor
sahf
outs
xor
adc
fs
sahf
outs
sub
sahf
outs
adc
push
sahf
outs
sub
push
sahf
outs
xor
sahf
outs
das
adc
push
sahf
outs
dec
xchg
outs
jp
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
sub
fisubr
sub
imul
setg
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
push
sahf
outs
inc
add
nop
push
sahf
outs
sub
sahf
outs
dec
xchg
outs
pop
in
test
sub
fisubr
adc
in
fisubr
adc
add
push
nop
sub
fisubr
sub
imul
setg
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
dec
xchg
outs
jmp
outs
sub
fisubr
adc
in
fisubr
adc
add
push
fisubr
imul
setg
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
pop
sahf
outs
sub
sahf
outs
dec
xchg
outs
and
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
inc
sub
test
push
jmp
xchg
adc
test
sub
fisubr
adc
in
fisubr
add
add
sahf
outs
dec
xchg
outs
stos
in
test
sub
fisubr
adc
in
fisubr
adc
add
push
sahf
sub
test
(bad)
sub
test
into
sub
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
pop
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
rcl
outs
sub
sahf
outs
sub
adc
xlat
push
sahf
outs
sub
sahf
outs
sub
sahf
outs
inc
add
xlat
push
sahf
outs
xor
sahf
outs
xor
sahf
outs
xor
sahf
outs
xor
sahf
outs
dec
xchg
outs
adc
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
arpl
pop
test
mov
pop
test
xchg
das
pop
test
jnp
pop
test
adc
or
test
sub
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
dec
xchg
outs
ret
test
sub
fisubr
adc
in
fisubr
adc
jmp
loopne
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
inc
add
adc
sahf
outs
sub
adc
sbb
sahf
outs
sub
sahf
outs
adc
push
sahf
outs
adc
push
sahf
outs
sub
sahf
outs
sub
sahf
outs
inc
add
enter
sub
sahf
outs
inc
add
nop
push
sahf
outs
dec
xchg
outs
(bad)
out
test
sub
fisubr
adc
in
fisubr
adc
add
push
lea
pop
test
sub
add
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
inc
add
aas
push
sahf
outs
sub
adc
inc
push
sahf
outs
inc
add
sbb
outs
adc
push
sahf
outs
and
push
sahf
outs
adc
push
sahf
outs
daa
adc
push
sahf
outs
xor
sahf
outs
xor
sahf
outs
adc
push
sahf
outs
xor
sahf
outs
adc
push
sahf
outs
sub
push
sahf
outs
dec
xchg
outs
(bad)
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
xchg
pop
test
stos
xor
scas
jmp
je
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
push
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
adc
outs
sub
sahf
outs
adc
push
sahf
outs
and
push
sahf
outs
sub
sahf
outs
daa
adc
push
sahf
outs
xor
sahf
outs
xor
sahf
outs
dec
xchg
outs
retf
test
sub
fisubr
adc
in
fisubr
adc
add
push
inc
xor
scas
jmp
in
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
xchg
outs
jb
push
test
sub
fisubr
adc
in
fisubr
adc
jmp
push
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
cmp
sub
sahf
outs
adc
push
sahf
outs
and
push
sahf
outs
sub
sahf
outs
daa
adc
cmp
adc
lods
cmp
adc
lods
cmp
adc
lods
cmp
adc
mov
sahf
outs
adc
cmp
adc
ret
cmp
add
jle
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
pusha
cmp
adc
addr16
adc
sub
adc
inc
cmp
adc
inc
cmp
movs
mov
sbb
push
test
sub
fisubr
adc
in
fisubr
adc
jmp
push
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
cmp
adc
sti
cmp
adc
into
ds
outs
sub
adc
(bad)
ds
outs
sub
sahf
outs
sub
adc
mov
sahf
outs
sub
adc
mov
sahf
outs
sub
adc
mov
adc
ds
outs
sub
adc
xchg
ds
outs
xor
sahf
outs
xor
adc
outs
ds
outs
xor
sahf
outs
adc
ds
outs
sub
ds
outs
inc
add
cmp
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
adc
sahf
outs
dec
xchg
outs
sbb
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
stc
xor
scas
jmp
pushf
push
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
aas
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
dec
xchg
outs
stos
jmp
sub
fisubr
adc
in
fisubr
adc
add
push
mov
pop
test
lock
imul
push
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
inc
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
adc
inc
sahf
outs
and
inc
sahf
outs
adc
inc
sahf
outs
sub
sahf
outs
xor
sahf
outs
xor
sahf
outs
xor
adc
mov
adc
inc
sahf
outs
xor
sahf
outs
sub
inc
sahf
outs
xor
sahf
outs
xor
sahf
outs
sbb
sahf
outs
sbb
sahf
outs
xor
sahf
outs
sbb
sahf
outs
push
adc
inc
sahf
outs
xor
sahf
outs
sbb
sahf
outs
pop
adc
inc
sahf
outs
xor
sahf
outs
and
sahf
outs
and
adc
repz
sahf
outs
xor
sahf
outs
xor
sahf
outs
xor
sahf
outs
xor
sahf
outs
xor
sahf
outs
xor
sahf
outs
dec
adc
cmp
test
xor
sahf
outs
inc
adc
cmp
test
xor
sahf
outs
inc
adc
cmp
test
xor
sahf
outs
xor
sahf
outs
xor
sahf
outs
xor
sahf
outs
dec
adc
cmp
test
dec
adc
cmp
test
cmp
sahf
outs
cmp
adc
and
adc
cmp
test
xor
cmp
test
cmp
sahf
outs
inc
adc
cmp
test
dec
xchg
outs
and
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
pop
ss
test
xor
test
js
pop
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
cmp
test
dec
xchg
outs
pop
out
push
test
sub
fisubr
adc
in
fisubr
adc
jmp
cmp
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
inc
add
sbb
sahf
outs
sub
sahf
outs
sub
adc
idiv
sahf
outs
sub
sahf
outs
sub
adc
std
cmp
test
inc
add
std
cmp
test
daa
adc
cmp
test
xor
adc
call
adc
cmp
test
sub
cmp
add
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
adc
cmp
test
adc
cmp
test
xor
sahf
outs
xor
sahf
outs
xor
sahf
outs
xor
sahf
outs
sub
sahf
outs
sub
cmp
outs
dec
xchg
outs
dec
out
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
pop
cmp
shr
fisubr
cmp
scas
jmp
inc
adc
test
sub
fisubr
adc
in
fisubr
add
add
adc
dec
cmp
outs
sub
sahf
outs
sub
sahf
outs
dec
xchg
outs
cli
out
push
test
sub
fisubr
adc
in
fisubr
adc
jmp
test
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
cmp
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
sub
outs
sub
sahf
outs
adc
cmp
outs
sub
sahf
outs
sub
adc
stc
cmp
outs
sub
sahf
outs
inc
add
mov
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
adc
inc
sahf
outs
and
in
fisubr
adc
inc
sahf
outs
sub
sahf
outs
xor
sahf
outs
xor
sahf
outs
sub
sahf
outs
xor
sahf
outs
adc
inc
sahf
outs
sub
inc
sahf
outs
xor
sahf
outs
sub
sahf
outs
sub
sahf
outs
sbb
sahf
outs
sbb
adc
mov
sahf
outs
sbb
sahf
outs
and
in
fisubr
adc
in
fisubr
adc
inc
sahf
outs
pop
adc
inc
sahf
outs
sbb
sahf
outs
and
sahf
outs
and
adc
movs
inc
sahf
outs
and
sahf
outs
sbb
sahf
outs
sbb
inc
sahf
outs
and
sahf
outs
pop
adc
inc
sahf
outs
dec
adc
inc
sahf
outs
dec
adc
inc
sahf
outs
dec
adc
inc
sahf
outs
sbb
sahf
outs
inc
adc
inc
sahf
outs
sbb
sahf
outs
dec
adc
inc
sahf
outs
inc
adc
inc
sahf
outs
push
adc
inc
sahf
outs
push
adc
inc
sahf
outs
adc
in
fisubr
adc
in
fisubr
adc
inc
sahf
outs
dec
adc
inc
sahf
outs
dec
adc
inc
sahf
outs
dec
adc
inc
sahf
outs
cmp
sahf
outs
cmp
sahf
outs
dec
adc
inc
sahf
outs
cmp
sahf
outs
adc
dec
sahf
outs
xor
dec
sahf
outs
cmp
sahf
outs
aaa
adc
dec
sahf
outs
inc
adc
dec
sahf
outs
dec
adc
dec
sahf
outs
inc
adc
dec
sahf
outs
dec
adc
dec
sahf
outs
adc
dec
sahf
outs
cmp
dec
sahf
outs
inc
adc
dec
sahf
outs
aas
adc
dec
sahf
outs
push
adc
in
fisubr
adc
inc
sahf
outs
push
adc
shr
fisubr
adc
mov
adc
shr
fisubr
adc
cmps
sahf
outs
push
adc
shr
fisubr
adc
call
nop
in
fisubr
adc
in
fisubr
repz
test
push
adc
in
fisubr
adc
std
lahf
outs
sub
fisubr
adc
in
fisubr
repz
test
imul
outs
sub
lahf
outs
sub
fisubr
adc
in
fisubr
add
add
adc
inc
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
adc
inc
sahf
outs
and
inc
sahf
outs
sub
sahf
outs
dec
xchg
outs
jb
push
test
sub
fisubr
adc
in
fisubr
adc
jmp
and
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
inc
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
adc
inc
sahf
outs
and
inc
sahf
outs
sub
sahf
outs
inc
add
aad
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
adc
inc
sahf
outs
and
inc
sahf
outs
sub
sahf
outs
dec
xchg
outs
sbb
push
test
sub
fisubr
adc
in
fisubr
adc
jmp
push
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
adc
inc
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
adc
inc
sahf
outs
and
inc
sahf
outs
adc
inc
sahf
outs
sub
sahf
outs
sub
sahf
outs
xor
sahf
outs
xor
adc
or
outs
inc
add
add
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
and
inc
sahf
outs
sub
sahf
outs
daa
adc
inc
sahf
outs
xor
sahf
outs
xor
sahf
outs
dec
xchg
outs
add
push
test
sub
fisubr
adc
in
fisubr
adc
jmp
push
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
dec
inc
sahf
outs
sub
adc
cmovae
test
and
inc
sahf
outs
sub
sahf
outs
daa
adc
inc
sahf
outs
sub
sahf
outs
xor
sahf
outs
xor
adc
(bad)
inc
sahf
outs
sub
sahf
outs
adc
inc
sahf
outs
inc
add
dec
inc
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
sub
adc
inc
sahf
outs
adc
inc
sahf
outs
and
inc
sahf
outs
sub
sahf
outs
daa
adc
inc
sahf
outs
daa
adc
inc
sahf
outs
xor
sahf
outs
sub
sahf
outs
xor
sahf
outs
adc
sub
adc
call
adc
sub
adc
mov
sahf
outs
sub
sahf
outs
dec
xchg
outs
xor
push
test
sub
fisubr
adc
in
fisubr
adc
jmp
lock
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
adc
sub
adc
cmp
adc
inc
sub
adc
inc
sub
add
stos
das
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
adc
cs
outs
sub
sahf
outs
sub
sahf
outs
daa
adc
cs
outs
xor
fisubr
adc
cs
outs
xor
adc
enter
xor
fisubr
adc
cs
outs
sub
in
fisubr
adc
cs
outs
das
adc
in
fisubr
adc
cs
outs
sbb
sahf
outs
sbb
adc
jns
sahf
outs
das
adc
in
fisubr
adc
cs
outs
adc
in
fisubr
adc
cs
outs
pop
adc
cs
outs
and
sahf
outs
and
sahf
outs
adc
in
fisubr
adc
cs
outs
adc
cs
outs
sbb
cs
outs
adc
cs
outs
pop
adc
cs
outs
sub
in
fisubr
adc
in
fisubr
adc
cs
outs
dec
adc
cs
outs
inc
adc
cs
outs
daa
adc
in
fisubr
adc
in
fisubr
adc
cs
outs
push
adc
das
sahf
outs
push
adc
das
sahf
outs
daa
adc
in
fisubr
adc
das
sahf
outs
daa
adc
das
sahf
outs
daa
adc
das
sahf
outs
push
adc
das
sahf
outs
sub
pushf
outs
ret
add
outs
sahf
outs
sub
pushf
outs
add
add
adc
jp
outs
(bad)
add
add
outs
sahf
outs
sub
pushf
outs
cli
add
add
adc
jp
outs
stos
add
add
adc
jp
outs
sahf
add
add
imul
outs
adc
in
fisubr
stc
push
test
sbb
fisubr
adc
sti
lahf
outs
sbb
fisubr
adc
in
fisubr
stc
push
test
dec
adc
in
fisubr
adc
sti
lahf
outs
dec
adc
in
fisubr
adc
in
fisubr
stc
push
test
push
adc
in
fisubr
adc
sti
lahf
outs
dec
xchg
outs
push
not
retf
outs
xor
push
test
sub
fisubr
adc
add
push
cdq
lds
shr
fisubr
lds
shr
fisubr
adc
in
fisubr
lds
iret
in
fisubr
lds
int3
in
fisubr
lds
shr
fisubr
adc
in
fisubr
jbe
test
cmc
xor
into
in
fisubr
adc
in
fisubr
adc
cld
lahf
outs
dec
xchg
outs
xabort
test
push
clc
push
test
sub
fisubr
adc
jmp
cwde
add
adc
shr
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
xor
test
sub
sahf
outs
sub
adc
fdiv
sahf
outs
sub
sahf
outs
adc
xor
test
adc
xor
test
xor
sahf
outs
adc
xor
test
adc
xor
test
adc
xor
test
das
adc
xor
test
adc
xor
test
adc
xor
test
inc
add
into
sub
test
sub
sahf
outs
sub
adc
mov
sahf
outs
sub
sahf
outs
sub
sahf
outs
and
sub
test
dec
xchg
outs
add
push
test
sub
fisubr
adc
in
fisubr
adc
jmp
push
push
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
inc
add
push
sub
test
inc
add
arpl
sahf
outs
sub
sahf
outs
inc
add
xor
sahf
outs
and
sub
add
sahf
outs
daa
adc
sub
add
sub
test
inc
add
and
sahf
outs
xor
sahf
outs
inc
add
repz
test
inc
add
add
sahf
outs
das
adc
sub
add
sub
test
inc
add
jecxz
sahf
outs
sbb
sahf
outs
inc
add
mov
sahf
outs
adc
sub
add
sub
test
inc
add
xchg
sub
test
inc
add
mov
adc
sub
add
sahf
outs
sbb
sub
add
add
add
sub
test
dec
xchg
outs
stos
std
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
or
in
fisubr
(bad)
pop
test
sub
pop
test
xor
pop
test
sbb
pop
test
and
pop
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
adc
sub
test
sub
adc
je
sahf
outs
sub
sahf
outs
adc
sub
test
sub
sahf
outs
sub
sahf
outs
xor
sahf
outs
xor
sahf
outs
xor
adc
inc
sub
test
adc
sub
test
xor
sahf
outs
dec
xchg
outs
xor
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
dec
enter
in
fisubr
enter
in
fisubr
enter
in
fisubr
enter
jmp
xor
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
adc
sub
outs
sub
sahf
outs
sub
adc
jp
sahf
outs
sub
sahf
outs
adc
sub
outs
and
sub
outs
sub
sahf
outs
daa
adc
sub
outs
xor
sahf
outs
dec
xchg
outs
cli
cld
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
jecxz
pop
test
or
pop
test
adc
pop
test
sti
enter
jmp
ins
add
test
sub
fisubr
adc
in
fisubr
add
add
xor
adc
loop
sahf
outs
sub
sahf
outs
dec
xchg
outs
sar
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
jno
pop
test
xchg
pop
test
movs
retf
pop
test
retf
retf
pop
test
ror
pop
test
mov
jmp
in
add
test
sub
fisubr
adc
in
fisubr
add
add
xor
adc
cld
xor
adc
fnstenv
sahf
outs
dec
xchg
outs
inc
(bad)
push
test
sub
fisubr
adc
in
fisubr
adc
jmp
push
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
outs
inc
add
ret
ss
outs
sub
sahf
outs
sub
adc
popf
ss
outs
inc
add
movs
ss
outs
adc
ss
outs
and
ss
outs
inc
add
xor
outs
inc
add
pop
ss
outs
inc
add
adc
sahf
outs
dec
xchg
outs
or
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
adc
pop
test
or
pop
test
es
test
cs
test
pop
int
test
dec
int
test
dec
int
test
daa
adc
add
test
sub
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
dec
xchg
outs
xchg
add
shr
fisubr
adc
in
fisubr
adc
in
fisubr
adc
add
push
mov
jmp
cmp
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
aaa
sahf
outs
dec
xchg
outs
or
push
test
sub
fisubr
adc
in
fisubr
adc
add
push
dec
pop
test
sub
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
cmp
test
dec
xchg
outs
inc
add
shr
fisubr
adc
in
fisubr
adc
in
fisubr
adc
add
push
pop
int3
pop
test
push
int3
pop
test
or
test
stos
int3
pop
test
adc
add
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
cmp
mov
mov
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
jmp
shr
pushf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
cmp
test
sub
sahf
outs
sub
adc
add
sahf
outs
sub
sahf
outs
adc
xor
test
sub
adc
fdiv
sahf
outs
sub
sahf
outs
sub
sahf
outs
inc
add
fdiv
sahf
outs
xor
adc
in
sahf
outs
xor
sahf
outs
adc
xor
add
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
push
xor
test
dec
xchg
outs
jp
pop
test
sub
fisubr
adc
in
fisubr
adc
jmp
lock
pushf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
xor
test
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
adc
xor
test
sub
sahf
outs
daa
adc
xor
test
inc
add
xchg
xor
test
dec
xchg
outs
cmp
fisubr
adc
in
fisubr
adc
in
fisubr
adc
jmp
pop
out
pushf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
and
xor
test
daa
adc
xor
add
xor
test
sub
sahf
outs
sub
adc
lds
sahf
outs
sub
sahf
outs
sub
adc
lea
sahf
outs
sub
sahf
outs
sub
sahf
outs
inc
add
lea
sahf
outs
xor
sahf
outs
xor
sahf
outs
xor
adc
outs
xor
test
xor
sahf
outs
sub
xor
test
dec
xchg
outs
fiadd
fisubr
adc
in
fisubr
adc
in
fisubr
adc
add
push
repnz
shr
fisubr
rcr
add
test
jecxz
pop
test
or
pop
test
and
out
pushf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
xor
outs
sub
sahf
outs
sub
fisubr
adc
in
fisubr
adc
xor
outs
sub
pushf
outs
sub
sahf
outs
sub
adc
into
in
fisubr
adc
in
fisubr
test
scas
jmp
adc
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
adc
xor
outs
inc
add
jno
sahf
outs
dec
xchg
outs
cmp
outs
sub
fisubr
adc
in
fisubr
adc
add
push
mov
pop
test
cwde
rcr
add
test
sub
pushf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
xor
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
inc
add
sbb
outs
adc
xor
outs
dec
xchg
outs
rol
outs
sub
fisubr
adc
in
fisubr
adc
jmp
mov
pushf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sbb
adc
call
add
add
sbb
add
lods
sbb
add
mov
sahf
outs
inc
add
mov
add
add
sbb
add
lea
add
xchg
sbb
add
popf
sbb
add
movs
sbb
add
ins
sbb
add
jne
sahf
outs
inc
add
jge
sahf
outs
inc
add
test
add
dec
sbb
add
push
sbb
add
pop
sbb
add
gs
add
sub
add
add
add
add
add
add
sahf
outs
inc
add
or
add
add
add
add
add
add
add
add
sbb
add
cmc
sbb
add
std
sbb
add
add
add
add
push
sahf
outs
inc
add
aad
sahf
outs
inc
add
fstp
sahf
outs
inc
add
in
sahf
outs
inc
add
lods
push
sahf
outs
inc
add
mov
sahf
outs
inc
add
mov
add
add
push
sahf
outs
inc
add
lea
sahf
outs
inc
add
xchg
push
sahf
outs
inc
add
popf
push
sahf
outs
inc
add
shr
fisubr
add
add
in
fisubr
add
add
adc
push
sahf
outs
sub
sahf
outs
adc
push
sahf
outs
push
adc
shr
fisubr
adc
sbb
test
sub
fisubr
xchg
scas
jmp
sub
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
and
and
test
daa
adc
sbb
test
xor
sahf
outs
xor
adc
mov
sahf
outs
xor
sahf
outs
adc
sbb
test
xor
sahf
outs
das
adc
sbb
test
sbb
sahf
outs
sbb
adc
dec
sbb
test
push
adc
sbb
test
sub
sahf
outs
pop
adc
sbb
test
and
sahf
outs
and
adc
and
sahf
outs
and
sahf
outs
push
adc
sbb
test
and
sahf
outs
sub
sahf
outs
sub
sahf
outs
dec
adc
pop
sahf
outs
dec
adc
pop
sahf
outs
dec
adc
pop
sahf
outs
inc
adc
pop
sahf
outs
inc
adc
pop
sahf
outs
dec
adc
pop
sahf
outs
inc
adc
pop
sahf
outs
push
adc
pop
sahf
outs
sub
sahf
outs
push
adc
pop
sahf
outs
push
adc
pop
sahf
outs
dec
adc
pop
sahf
outs
dec
adc
pop
sahf
outs
push
adc
pop
sahf
outs
dec
adc
pop
sahf
outs
cmp
sahf
outs
cmp
sahf
outs
sub
sahf
outs
cmp
sahf
outs
adc
pop
sahf
outs
xor
pop
sahf
outs
cmp
sahf
outs
aaa
adc
pop
sahf
outs
inc
adc
and
test
inc
adc
and
test
adc
and
test
inc
adc
and
test
push
adc
cmps
and
test
ins
adc
and
test
sub
sahf
outs
adc
and
test
adc
cmp
sahf
outs
jb
adc
aas
and
test
je
adc
sbb
sahf
outs
jae
adc
sbb
sahf
outs
outs
adc
and
test
jo
adc
loop
sahf
outs
outs
adc
sbb
test
sub
sahf
outs
pop
adc
sbb
test
push
adc
sbb
test
pop
adc
sbb
test
bound
sahf
outs
popa
adc
sbb
test
sub
sahf
outs
sub
sahf
outs
pop
adc
sbb
test
pop
adc
sbb
test
mov
sahf
outs
mov
sahf
outs
mov
sahf
outs
xchg
sahf
outs
sub
sahf
outs
sub
sahf
outs
xchg
sahf
outs
sub
sahf
outs
xchg
adc
sbb
test
xchg
adc
sbb
test
lea
sahf
outs
nop
adc
sbb
test
jp
adc
pop
sbb
test
sub
sahf
outs
jnp
adc
cmp
adc
sbb
test
js
adc
sbb
sahf
outs
ja
adc
icebp
sbb
test
add
adc
into
sbb
outs
sub
sahf
outs
dec
xchg
outs
adc
fisubr
adc
in
fisubr
adc
in
fisubr
adc
add
push
push
add
push
jo
pop
test
sub
adc
cld
neg
shr
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
xchg
outs
push
lea
shr
fisubr
adc
in
fisubr
adc
in
fisubr
adc
jmp
mov
pushf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
cmp
adc
sbb
outs
sub
adc
pop
sbb
outs
and
sbb
outs
sub
adc
sbb
outs
sub
adc
icebp
sbb
outs
sub
adc
hlt
sbb
outs
sub
adc
sti
sbb
outs
xor
adc
into
and
adc
aad
sahf
outs
sub
adc
dec
es
outs
sub
es
outs
sub
adc
call
adc
and
adc
mov
sahf
outs
sbb
sahf
outs
sbb
adc
mov
adc
xchg
and
adc
cmps
and
adc
ins
and
adc
and
test
das
adc
and
adc
popa
and
adc
fs
adc
sub
adc
sub
adc
ds
adc
inc
and
adc
sbb
adc
pop
and
adc
and
adc
stc
and
adc
cld
and
adc
add
adc
(bad)
es
outs
dec
adc
es
outs
das
adc
es
outs
push
adc
es
outs
das
adc
es
outs
push
adc
es
outs
das
adc
es
outs
dec
adc
es
outs
das
adc
es
outs
push
adc
es
outs
das
adc
es
outs
cmp
sahf
outs
das
adc
es
outs
sub
sahf
outs
inc
add
adc
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
jmp
sahf
outs
sub
sahf
outs
adc
es
outs
dec
xchg
outs
and
fisubr
adc
in
fisubr
adc
in
fisubr
adc
add
push
dec
fstp
shr
fisubr
fstp
shr
fisubr
fstp
into
in
fisubr
fstp
scas
jmp
je
pushf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
inc
add
dec
daa
sahf
outs
sub
adc
push
daa
sahf
outs
inc
add
data16
sahf
outs
adc
daa
sahf
outs
and
daa
sahf
outs
inc
add
inc
daa
sahf
outs
daa
adc
daa
sahf
outs
inc
add
and
sahf
outs
xor
sahf
outs
xor
adc
jmp
sahf
outs
xor
sahf
outs
adc
daa
sahf
outs
adc
daa
sahf
outs
xor
sahf
outs
das
adc
sub
test
sbb
sahf
outs
xor
sahf
outs
sbb
sahf
outs
push
adc
sub
test
xor
sahf
outs
pop
adc
sub
test
xor
sahf
outs
and
adc
push
sub
test
push
adc
sub
test
and
sahf
outs
pop
adc
sub
test
dec
adc
and
test
dec
adc
and
test
inc
adc
and
test
xor
sahf
outs
push
adc
and
test
push
adc
and
test
dec
adc
and
test
push
adc
and
test
cmp
sahf
outs
cmp
sahf
outs
cmp
adc
add
sahf
outs
cmp
sahf
outs
adc
and
test
xor
sahf
outs
aaa
adc
and
test
xor
sahf
outs
inc
adc
and
test
adc
and
test
inc
adc
and
test
push
adc
dec
and
test
ins
adc
and
test
xor
sahf
outs
adc
and
test
adc
int
sahf
outs
xor
sahf
outs
jno
adc
out
sahf
outs
je
adc
stos
and
test
jae
adc
les
sahf
outs
jno
adc
mov
sahf
outs
jo
adc
sahf
and
test
pop
adc
and
test
pop
adc
and
test
push
adc
and
test
jo
adc
and
adc
and
test
popa
adc
and
outs
adc
and
outs
arpl
sahf
outs
pop
adc
and
outs
pop
adc
and
outs
pusha
adc
and
outs
pop
adc
and
outs
mov
sahf
outs
dec
xchg
outs
mov
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
jmp
fcomp
pushf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
outs
sub
sahf
outs
inc
add
adc
sahf
outs
sub
adc
sbb
sahf
outs
inc
add
and
sahf
outs
inc
add
jmp
add
and
outs
sub
sahf
outs
daa
adc
or
add
mov
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
mov
adc
xchg
or
adc
cmps
or
adc
ins
or
adc
jle
sahf
outs
daa
adc
or
adc
pop
or
adc
pop
or
adc
bound
movs
mov
pop
xchg
pop
test
sub
fisubr
adc
in
fisubr
adc
jmp
or
pushf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
or
adc
out
or
adc
cmc
or
adc
std
or
adc
add
adc
push
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
xor
sahf
outs
xor
adc
cmps
push
sahf
outs
xor
sahf
outs
adc
push
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
push
adc
push
sahf
outs
adc
push
sahf
outs
sub
sahf
outs
sub
sahf
outs
and
sahf
outs
and
sahf
outs
sub
sahf
outs
sub
sahf
outs
push
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
setle
adc
adc
test
sub
sahf
outs
cmp
adc
stos
adc
test
sub
sahf
outs
xor
adc
test
aaa
adc
adc
test
inc
adc
adc
test
inc
adc
adc
test
inc
adc
adc
test
sub
sahf
outs
push
adc
inc
adc
test
inc
add
add
adc
or
test
sub
adc
call
adc
or
test
and
or
test
daa
adc
or
test
sub
adc
outs
or
test
sub
adc
mov
sahf
outs
adc
or
test
adc
or
test
sbb
sahf
outs
dec
xchg
outs
sbb
outs
sub
fisubr
adc
in
fisubr
adc
jmp
clc
loopne
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
or
test
sub
sahf
outs
sub
adc
ror
sahf
outs
sub
sahf
outs
adc
or
test
sub
sahf
outs
daa
adc
or
test
sub
adc
xchg
or
test
xor
sahf
outs
sub
adc
jne
sahf
outs
sub
adc
mov
sahf
outs
xor
sahf
outs
sub
adc
push
or
test
sbb
sahf
outs
sbb
sahf
outs
sbb
sahf
outs
sbb
sahf
outs
adc
or
test
sbb
sahf
outs
sub
adc
add
sahf
outs
and
sahf
outs
sub
adc
retf
or
test
push
adc
or
test
and
sahf
outs
pop
adc
or
test
dec
adc
or
test
dec
adc
or
test
inc
adc
or
test
inc
adc
or
test
push
adc
or
test
push
adc
or
test
dec
adc
or
test
dec
adc
or
test
sub
adc
int3
or
outs
cmp
adc
ror
outs
sub
adc
out
sahf
outs
adc
or
outs
sub
adc
ror
cmp
sahf
outs
sub
adc
mov
outs
sub
adc
mov
adc
or
outs
inc
adc
or
outs
sub
adc
or
test
cmp
or
outs
inc
adc
or
outs
aas
adc
or
outs
sub
adc
sub
outs
sub
adc
inc
or
outs
ins
adc
or
outs
imul
outs
adc
or
outs
sub
adc
and
adc
or
outs
adc
dec
outs
jb
adc
add
adc
adc
adc
fist
adc
in
sahf
outs
outs
adc
adc
adc
mov
adc
adc
adc
cwde
adc
adc
lahf
adc
adc
mov
adc
adc
adc
jl
sahf
outs
push
adc
adc
adc
push
adc
adc
pop
adc
adc
xor
adc
aaa
adc
add
and
adc
jmp
test
sub
sahf
outs
sub
sahf
outs
sub
sahf
outs
and
push
sahf
outs
sub
sahf
outs
dec
xchg
outs
ret
test
sub
fisubr
adc
in
fisubr
adc
jmp
nop
fcomp
shr
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
add
add
sahf
outs
sub
sahf
outs
sub
adc
mov
sahf
outs
sub
sahf
outs
adc
push
sahf
outs
and
push
sahf
outs
adc
push
sahf
outs
sub
sahf
outs
sub
adc
pushw
sahf
outs
sub
sahf
outs
inc
add
pushw
sahf
outs
xor
sahf
outs
adc
push
sahf
outs
xor
sahf
outs
xor
sahf
outs
das
adc
push
sahf
outs
xor
sahf
outs
sbb
sahf
outs
sbb
adc
jmp
sahf
outs
sbb
sahf
outs
push
adc
push
sahf
outs
push
adc
pop
sahf
outs
sbb
sahf
outs
push
adc
pop
sahf
outs
and
sahf
outs
and
sahf
outs
and
sahf
outs
and
sahf
outs
and
sahf
outs
sbb
pop
sahf
outs
and
sahf
outs
pop
adc
pop
sahf
outs
and
sahf
outs
dec
adc
pop
sahf
outs
and
sahf
outs
dec
adc
pop
sahf
outs
inc
add
or
sahf
outs
inc
adc
pop
sahf
outs
dec
adc
pop
sahf
outs
dec
adc
pop
sahf
outs
push
adc
pop
sahf
outs
dec
adc
pop
sahf
outs
dec
adc
sbb
test
dec
adc
sbb
test
push
adc
sbb
test
inc
add
jp
sahf
outs
inc
add
push
sbb
test
sub
adc
pop
sbb
test
inc
add
xor
adc
sbb
test
daa
adc
sbb
add
sbb
test
xor
adc
repz
test
inc
add
int
sahf
outs
sub
adc
test
das
adc
adc
add
adc
test
sbb
adc
mov
sahf
outs
sbb
sahf
outs
inc
add
movs
adc
test
sbb
sahf
outs
pop
adc
adc
add
sahf
outs
and
sahf
outs
and
adc
arpl
sahf
outs
and
sahf
outs
inc
add
cmp
adc
adc
test
pop
adc
adc
add
adc
test
dec
adc
adc
test
inc
add
aad
sahf
outs
inc
adc
adc
test
inc
adc
adc
add
adc
test
push
adc
adc
test
inc
add
ins
adc
test
push
adc
adc
test
inc
add
popa
adc
test
cmp
adc
sub
sahf
outs
cmp
sahf
outs
inc
add
inc
adc
test
cmp
sahf
outs
aaa
adc
adc
add
adc
test
inc
adc
adc
add
adc
add
adc
add
adc
adc
test
inc
add
xchg
adc
test
ins
adc
adc
test
inc
add
jne
sahf
outs
adc
adc
add
sahf
outs
adc
push
adc
add
sahf
outs
jno
adc
sub
sahf
outs
inc
add
xor
sahf
outs
jae
adc
inc
adc
add
adc
adc
add
adc
test
inc
add
add
sahf
outs
pop
adc
adc
add
adc
outs
pop
adc
adc
outs
inc
add
in
sahf
outs
push
adc
adc
outs
inc
add
mov
adc
adc
outs
inc
add
cdq
adc
outs
popa
adc
adc
outs
inc
add
mov
adc
adc
outs
inc
add
jge
sahf
outs
pop
adc
adc
outs
inc
add
push
adc
outs
pop
adc
adc
outs
inc
add
xor
outs
mov
sahf
outs
inc
add
cmp
outs
mov
sahf
outs
inc
add
adc
adc
adc
outs
inc
add
out
adc
outs
xchg
sahf
outs
inc
add
or
outs
xchg
adc
std
sahf
outs
inc
add
sar
sahf
outs
xchg
adc
std
sahf
outs
inc
add
lods
std
sahf
outs
lea
sahf
outs
inc
add
(bad)
std
sahf
outs
pop
sahf
outs
inc
add
mov
adc
std
sahf
outs
inc
add
imul
outs
jnp
adc
jle
sahf
outs
inc
add
test
sahf
outs
jne
adc
pop
std
sahf
outs
inc
add
pop
std
sahf
outs
ja
adc
(bad)
std
sahf
outs
inc
add
cmp
sahf
outs
add
add
inc
std
sahf
outs
add
outs
inc
add
sbb
adc
std
sahf
outs
inc
add
idiv
sahf
outs
jg
adc
cli
std
sahf
outs
inc
add
sar
sahf
outs
test
(bad)
sahf
outs
inc
add
(bad)
sahf
outs
stos
adc
(bad)
sahf
outs
inc
add
mov
sahf
outs
inc
add
(bad)
(bad)
sahf
outs
test
adc
(bad)
(bad)
sahf
outs
cmps
adc
(bad)
sahf
outs
mov
adc
cmps
(bad)
sahf
outs
cmps
adc
(bad)
sahf
outs
test
adc
cmps
(bad)
sahf
outs
inc
add
cmps
(bad)
sahf
outs
scas
adc
(bad)
sahf
outs
lods
adc
(bad)
sahf
outs
mov
adc
test
sahf
outs
scas
adc
(bad)
sahf
outs
call
outs
scas
adc
(bad)
sahf
outs
mov
adc
pop
(bad)
sahf
outs
lods
adc
(bad)
sahf
outs
xchg
adc
(bad)
sahf
outs
xchg
adc
(bad)
sahf
outs
xchg
adc
(bad)
sahf
outs
xchg
adc
(bad)
sahf
outs
xchg
adc
(bad)
sahf
outs
mov
(bad)
sahf
outs
xchg
adc
(bad)
sahf
outs
mov
call
test
popf
adc
call
test
lahf
adc
call
test
leave
adc
call
test
retf
adc
add
test
lds
sahf
outs
enter
ins
call
test
rol
sahf
outs
rol
sahf
outs
sahf
adc
call
test
sahf
adc
call
test
rol
sahf
outs
iret
adc
call
test
int
adc
push
call
test
mov
call
test
mov
adc
add
sahf
outs
int
adc
fld
sahf
outs
mov
adc
fadd
sahf
outs
ret
test
int
adc
mov
adc
add
test
mov
add
test
rol
outs
mov
add
test
int
adc
push
add
test
jmp
adc
inc
add
test
in
adc
add
sahf
outs
int
adc
mov
sahf
outs
int
adc
mov
sahf
outs
lods
adc
stc
sahf
outs
icebp
adc
stc
sahf
outs
lods
adc
stc
sahf
outs
repz
stc
sahf
outs
out
adc
stc
sahf
outs
in
adc
stc
sahf
outs
lods
adc
stc
sahf
outs
out
adc
stc
sahf
outs
fiadd
sahf
outs
out
adc
stc
sahf
outs
lods
adc
stc
sahf
outs
fild
sahf
outs
fild
sahf
outs
fild
sahf
outs
fadd
sahf
outs
fadd
sahf
outs
fadd
sahf
outs
fadd
sahf
outs
in
adc
jmp
test
fiadd
sahf
outs
fld
sahf
outs
loopne
adc
fdivrp
sahf
outs
fild
sahf
outs
or
sahf
outs
or
sahf
outs
lods
adc
cli
sahf
outs
lods
adc
cli
sahf
outs
push
adc
cli
sahf
outs
add
cli
sahf
outs
or
sahf
outs
push
adc
cli
sahf
outs
push
adc
cli
sahf
outs
adc
sahf
outs
adc
adc
pop
cli
sahf
outs
adc
sahf
outs
push
adc
cli
sahf
outs
or
cli
sahf
outs
adc
sahf
outs
jae
sahf
outs
cli
adc
cli
sahf
outs
jae
sahf
outs
jae
sahf
outs
adc
sahf
outs
test
outs
cmc
adc
sti
sahf
outs
test
outs
adc
sahf
outs
add
sahf
outs
add
sahf
outs
adc
sahf
outs
adc
sahf
outs
inc
sahf
outs
std
adc
sti
sahf
outs
adc
sahf
outs
inc
sahf
outs
sub
sahf
outs
inc
sahf
outs
adc
sahf
outs
sub
sahf
outs
adc
sti
sahf
outs
adc
sahf
outs
sub
sahf
outs
adc
sahf
outs
xor
sahf
outs
xor
sahf
outs
xor
adc
cli
sti
sahf
outs
xor
sahf
outs
adc
cld
sahf
outs
sub
cld
sahf
outs
adc
cld
sahf
outs
xor
sahf
outs
xor
adc
(bad)
sahf
outs
xor
sahf
outs
xor
sahf
outs
sbb
sahf
outs
xor
sahf
outs
adc
cld
sahf
outs
sbb
sahf
outs
pop
adc
cld
sahf
outs
and
sahf
outs
pop
adc
cld
sahf
outs
sbb
sahf
outs
adc
cld
sahf
outs
xor
sahf
outs
sbb
cld
sahf
outs
and
sahf
outs
sbb
cld
sahf
outs
dec
adc
cld
sahf
outs
dec
adc
cld
sahf
outs
dec
adc
cld
sahf
outs
dec
adc
cld
sahf
outs
xor
sahf
outs
inc
adc
cld
sahf
outs
xor
sahf
outs
inc
adc
cld
sahf
outs
adc
sahf
outs
dec
xchg
outs
repnz
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
rcr
shr
fisubr
adc
add
adc
loop
sahf
outs
sub
sahf
outs
sub
sahf
outs
adc
add
adc
leave
add
adc
mov
add
shr
fisubr
add
add
adc
add
add
mov
adc
add
adc
pop
add
adc
pop
add
adc
arpl
adc
arpl
adc
arpl
adc
ss
adc
ds
adc
ds
adc
inc
add
adc
or
adc
add
adc
sbb
adc
add
adc
and
adc
add
adc
inc
adc
inc
adc
add
adc
retf
outs
pop
adc
push
sahf
outs
pop
adc
push
sahf
outs
xor
sahf
outs
dec
adc
push
sahf
outs
dec
adc
push
sahf
outs
dec
adc
push
sahf
outs
xor
sahf
outs
push
adc
shr
fisubr
adc
sti
cdq
outs
dec
xchg
outs
pop
movs
pop
test
movs
pop
test
sub
fisubr
adc
add
push
xchg
cli
pop
test
sub
pushf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
dec
xchg
outs
adc
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
dec
xchg
outs
dec
cmps
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
push
sahf
outs
dec
xchg
outs
pop
cmps
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
pop
sahf
outs
dec
xchg
outs
stos
cmps
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
xchg
outs
mov
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
adc
pop
sahf
outs
inc
add
shr
fisubr
adc
in
fisubr
adc
jno
outs
sub
fisubr
adc
in
fisubr
cmps
pop
test
sub
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
sahf
outs
dec
xchg
outs
push
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
mov
test
sub
fisubr
cmps
pop
test
sub
adc
or
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
pop
sahf
outs
dec
xchg
outs
repnz
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
adc
pop
sahf
outs
inc
add
shr
fisubr
adc
in
fisubr
adc
ret
sub
fisubr
adc
in
fisubr
test
imul
retf
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
in
fisubr
adc
or
add
in
fisubr
adc
in
fisubr
adc
(bad)
call
in
fisubr
adc
in
fisubr
test
imul
retf
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
rcr
test
sub
fisubr
test
imul
retf
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
xchg
outs
sbb
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
xchg
outs
push
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
or
add
or
add
sahf
outs
dec
xchg
outs
jp
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
or
add
or
add
or
mov
mov
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
add
lods
add
add
add
add
add
mov
cli
test
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
xchg
outs
inc
stos
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
dec
xchg
outs
xchg
stos
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
jae
outs
sub
fisubr
adc
in
fisubr
stos
pop
test
sub
adc
push
adc
aad
outs
sub
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
jb
outs
sub
fisubr
adc
in
fisubr
stos
pop
test
sub
adc
add
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
add
mov
jb
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
add
mov
sub
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
add
test
sub
fisubr
adc
in
fisubr
adc
jl
outs
sub
fisubr
adc
in
fisubr
stos
pop
test
sub
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
movs
mov
xor
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
xchg
call
in
fisubr
adc
in
fisubr
lods
pop
test
sub
adc
enter
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
sahf
outs
sub
adc
shr
fisubr
adc
in
fisubr
add
add
adc
in
fisubr
adc
cmps
call
in
fisubr
adc
cmps
call
in
fisubr
adc
in
fisubr
lods
pop
test
sub
fisubr
adc
xlat
pushf
outs
dec
xchg
outs
call
outs
or
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
popf
call
in
fisubr
adc
in
fisubr
lods
pop
test
sub
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
add
test
sub
sahf
outs
sub
adc
repnz
test
adc
add
test
sub
sahf
outs
daa
adc
add
test
xor
sahf
outs
dec
xchg
outs
call
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
sub
sahf
outs
sub
sahf
outs
sub
adc
pusha
add
test
adc
add
test
sub
sahf
outs
daa
adc
add
test
xor
sahf
outs
dec
xchg
outs
sbb
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
add
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
adc
scas
call
in
fisubr
adc
in
fisubr
scas
pop
test
sub
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
scas
call
in
fisubr
adc
in
fisubr
scas
pop
test
sub
adc
add
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
xchg
outs
jb
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
xchg
outs
sub
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
sahf
outs
dec
xchg
outs
shr
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
add
outs
sub
sahf
outs
sub
sahf
outs
dec
xchg
outs
loop
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
add
outs
dec
xchg
outs
and
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
adc
loop
outs
sub
fisubr
adc
in
fisubr
mov
test
sub
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
xchg
outs
shl
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
adc
in
lahf
outs
inc
add
shr
fisubr
add
add
in
fisubr
adc
in
lahf
outs
inc
add
shr
fisubr
adc
in
fisubr
adc
and
outs
push
adc
shr
fisubr
adc
push
call
in
fisubr
adc
in
fisubr
mov
test
adc
in
fisubr
adc
aam
outs
dec
xchg
outs
loop
pop
test
push
mov
test
sub
fisubr
adc
in
fisubr
add
add
lahf
outs
dec
xchg
outs
xor
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
jae
outs
sub
fisubr
adc
in
fisubr
mov
test
sub
adc
cmp
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
adc
shr
fisubr
adc
in
fisubr
add
add
adc
shr
fisubr
adc
ins
call
in
fisubr
adc
jne
outs
sub
fisubr
adc
in
fisubr
mov
test
sub
fisubr
adc
mov
movs
mov
sub
fisubr
mov
test
sub
fisubr
adc
in
fisubr
add
add
out
lahf
outs
dec
xchg
outs
retf
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
mov
test
sub
fisubr
mov
test
sub
adc
and
adc
add
adc
shr
fisubr
adc
in
fisubr
add
add
xchg
outs
push
mov
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
adc
out
lahf
outs
inc
add
shr
fisubr
adc
in
fisubr
adc
inc
call
in
fisubr
adc
in
fisubr
mov
test
sub
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
inc
call
in
fisubr
adc
in
fisubr
mov
test
sub
adc
dec
mov
adc
sub
adc
shr
fisubr
adc
in
fisubr
add
add
out
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
adc
cmp
test
sub
adc
shr
fisubr
mov
test
sub
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
out
lahf
outs
dec
xchg
outs
jp
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
out
lahf
outs
inc
add
add
lahf
outs
dec
xchg
outs
retf
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
adc
mov
lahf
outs
dec
xchg
outs
loop
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
cwde
call
in
fisubr
adc
in
fisubr
mov
test
sub
adc
loopne
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
outs
sub
adc
shr
fisubr
adc
in
fisubr
add
add
lahf
outs
push
adc
shr
fisubr
adc
mov
adc
shr
fisubr
adc
mov
adc
shr
fisubr
adc
in
fisubr
mov
test
sub
fisubr
adc
rcr
in
fisubr
mov
test
ret
test
sub
fisubr
adc
in
fisubr
add
add
out
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
adc
popf
call
in
fisubr
adc
in
fisubr
mov
test
sub
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
xchg
outs
xchg
mov
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
out
lahf
outs
dec
xchg
outs
mov
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
lock
outs
dec
xchg
outs
repnz
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
mov
test
sub
fisubr
mov
test
sub
adc
or
adc
call
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
adc
in
fisubr
adc
in
fisubr
add
add
lahf
outs
push
adc
shr
fisubr
adc
mov
adc
shr
fisubr
adc
mov
adc
shr
fisubr
adc
in
fisubr
mov
test
sub
fisubr
adc
mov
movs
mov
pop
mov
test
retf
test
sub
fisubr
adc
in
fisubr
add
add
lahf
outs
sub
lahf
outs
dec
xchg
outs
cli
mov
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
lock
outs
inc
add
pop
lock
outs
sub
lahf
outs
sub
adc
and
lahf
outs
inc
add
jmp
mov
push
mov
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
jmp
adc
stos
jmp
adc
mov
lahf
outs
inc
add
fucompp
lahf
outs
inc
add
mov
add
add
jmp
movs
mov
cmp
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
lahf
outs
dec
xchg
outs
fidivr
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
outs
inc
add
push
jmp
movs
mov
sub
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
jmp
add
cmp
lahf
outs
inc
add
inc
jmp
adc
or
lahf
outs
dec
xchg
outs
inc
mov
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
jns
outs
sub
fisubr
adc
in
fisubr
mov
imul
mov
adc
xor
test
sub
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
xchg
call
in
fisubr
adc
in
fisubr
mov
imul
mov
adc
or
test
sub
fisubr
add
add
in
fisubr
add
add
in
fisubr
add
add
adc
in
fisubr
adc
in
fisubr
add
add
adc
in
fisubr
adc
movs
call
in
fisubr
adc
lea
test
sub
fisubr
mov
fisubr
adc
in
fisubr
adc
lds
retf
outs
cmp
fisubr
mov
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
add
add
in
fisubr
adc
in
fisubr
adc
xchg
test
sub
fisubr
mov
imul
lds
add
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
lahf
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
adc
jns
outs
sub
fisubr
adc
in
fisubr
mov
imul
(bad)
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
lahf
outs
sub
lahf
outs
dec
xchg
outs
mov
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
lahf
outs
inc
add
adc
lahf
outs
inc
add
sbb
lahf
outs
dec
xchg
outs
jmp
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
jmp
cld
jmp
add
lahf
outs
sub
adc
int3
jmp
outs
sub
lahf
outs
sub
lahf
outs
sub
lahf
outs
dec
xchg
outs
sub
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
add
add
add
add
lahf
outs
inc
add
jne
lahf
outs
inc
add
jge
lahf
outs
dec
xchg
outs
mov
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
lahf
outs
dec
xchg
outs
mov
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
adc
jmp
outs
inc
add
shr
fisubr
adc
in
fisubr
adc
jbe
outs
sub
fisubr
adc
in
fisubr
mov
imul
(bad)
pushf
outs
sub
pushf
outs
sub
fisubr
adc
in
fisubr
add
add
jmp
outs
sub
lahf
outs
sub
lahf
outs
dec
xchg
outs
push
pop
test
sub
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
lahf
outs
dec
xchg
outs
stos
mov
fisubr
adc
in
fisubr
adc
in
fisubr
adc
in
fisubr
add
add
in
fisubr
adc
in
fisubr
xchg
outs
mov
in
fisubr
adc
in
fisubr
adc
in
fisubr
adc
ret
fsubr
adc
in
fisubr
dec
sbb
or
test
sub
fsubr
xchg
pop
test
sub
fisubr
dec
sbb
push
inc
sbb
sub
fsubr
xchg
pop
test
sub
fisubr
push
sbb
fidivr
fisubr
adc
mov
outs
xchg
xchg
pop
test
sub
fisubr
push
sbb
jbe
sbb
sub
fsubr
xchg
pop
test
sub
fisubr
push
sbb
jb
sbb
sub
fsubr
xchg
pop
test
sub
fisubr
push
sbb
jmp
outs
sub
fsubr
xchg
pop
test
sub
fisubr
push
sbb
mov
in
fisubr
adc
mov
pop
test
sub
fisubr
push
sbb
outs
rcr
shr
fisubr
adc
cdq
fsubr
xchg
pop
test
sub
fisubr
push
sbb
push
inc
sbb
sub
fsubr
xchg
pop
test
sub
fisubr
push
sbb
sub
fisubr
adc
in
fisubr
adc
sahf
fsubr
push
sbb
adc
test
call
popf
fsubr
push
sbb
jle
sbb
pop
push
sbb
cmp
test
sbb
sbb
push
push
sbb
repnz
sbb
retf
test
nop
push
sbb
sub
fsubr
adc
mov
outs
sub
fsubr
push
sbb
bound
test
scas
push
sbb
sub
fsubr
dec
sbb
mov
sbb
xchg
dec
sbb
jb
sbb
inc
dec
sbb
es
sbb
loopne
sbb
sub
fsubr
push
sbb
mov
sbb
(bad)
dec
sbb
out
sbb
adc
sbb
sbb
sbb
cmp
test
xchg
dec
sbb
xchg
dec
sbb
mov
lods
fsubr
dec
sbb
sub
sbb
dec
dec
sbb
jo
sbb
nop
dec
sbb
pushf
dec
sbb
les
test
adc
test
xor
test
inc
dec
sbb
push
sbb
pusha
dec
sbb
mov
sbb
movs
pop
sbb
jbe
sbb
pop
pop
sbb
push
pop
sbb
clc
pop
sbb
jle
sbb
into
pop
sbb
sbb
mov
pop
sbb
cmp
test
sbb
test
adc
test
fcomp
test
mov
fsubr
pop
sbb
stos
pop
sbb
mov
test
pop
sbb
push
pop
sbb
push
dec
sbb
cs
sbb
push
inc
sbb
out
sbb
rol
test
jle
sbb
fs
sbb
jbe
sbb
adc
test
les
test
sbb
sbb
or
sbb
out
sbb
retf
test
ficomp
test
mov
sbb
pusha
inc
sbb
ds
sbb
and
sbb
inc
hlt
mov
outs
lock
sbb
into
inc
sbb
mov
sbb
nop
inc
sbb
jb
sbb
sbb
add
fsubr
inc
sbb
fiadd
test
int3
inc
sbb
aam
sbb
sub
(bad)
xor
(bad)
sub
fsubr
adc
mov
adc
addr16
(bad)
adc
push
sahf
fsubr
adc
out
(bad)
fs
sbb
or
test
add
sbb
or
xor
fsubr
dec
sbb
dec
sbb
mov
test
lods
dec
sbb
(bad)
dec
sbb
in
dec
sbb
ror
sbb
fsubr
dec
sbb
sub
push
mov
outs
loopne
sbb
add
sbb
dec
dec
sbb
inc
dec
sbb
bound
ins
mov
sbb
mov
sbb
mov
sbb
fmul
in
mov
sbb
sub
test
dec
dec
sbb
jo
sbb
in
dec
sbb
mov
mov
outs
xchg
test
rcl
push
push
sbb
fcom
test
add
sbb
inc
push
sbb
rcl
test
pushf
push
sbb
sub
fsubr
push
sbb
mov
cdq
fsubr
push
sbb
jnp
adc
leave
in
(bad)
sub
fsubr
push
sbb
mov
mov
outs
jl
sbb
cmp
sbb
es
sbb
or
test
out
push
sbb
cli
push
sbb
sbb
test
inc
push
sbb
jmp
outs
sub
xchg
xchg
jbe
xchg
xchg
xchg
ja
nop
ja
test
jbe
jnp
jl
ja
xchg
jne
xchg
mov
jg
mov
xchg
push
jae
ins
pushf
fisubr
test
jl
jne
jne
ja
jb
jne
lea
nop
jae
lods
outs
js
pop
mov
cmp
lods
outs
fadd
jae
test
xchg
ins
in
cdq
outs
imul
ins
mov
xchg
xchg
test
jbe
jnp
jl
ja
xchg
outs
ja
jg
jae
test
xchg
ins
in
push
xchg
xchg
mov
jns
jnp
je
adc
data16
mov
mov
ja
jnp
mov
imul
mov
cwde
js
push
outs
mov
test
xchg
push
sbb
or
jae
pop
jno
jo
mov
mov
mov
(bad)
xchg
je
jl
jo
pushf
jmp
xchg
(bad)
fs
movs
jmp
xchg
jl
adc
cmps
jmp
xchg
jbe
jne
shr
(bad)
outs
imul
xchg
jl
js
mov
jno
cwde
mov
data16
jbe
jae
jl
mov
mov
test
test
xchg
ja
xchg
jle
jae
xchg
jb
xchg
jg
jbe
(bad)
lods
fwait
jg
jnp
dec
imul
data16
xchg
jg
jbe
xchg
jnp
adc
pop
in
cdq
add
je
pop
shr
jl
data16
nop
jno
(bad)
jbe
jge
in
dec
jno
jno
jge
mov
test
ja
jns
xchg
mov
mov
jae
nop
add
jbe
push
jnp
xchg
mov
lea
test
jo
outs
mov
fisubr
sbb
mov
mov
ja
jno
jle
test
test
jbe
imul
inc
jl
das
in
cdq
add
addr16
push
lock
jnp
mov
je
sub
mov
xchg
jns
mov
jl
jne
sub
jnp
test
jl
jns
mov
jl
jne
sub
mov
in
aaa
jo
data16
jg
mov
mov
jno
adc
test
cdq
add
bound
sub
mov
push
jae
test
ja
jp
imul
ja
push
lock
ja
jg
xchg
xchg
test
jbe
jb
jno
jle
test
sub
jb
jns
mov
test
pop
jne
xchg
mov
test
jl
mov
je
fisubr
test
jno
pushf
cwde
mov
test
jbe
imul
add
outs
outs
mov
xchg
cwde
nop
imul
mov
xor
mov
push
xchg
mov
outs
xchg
jg
jbe
adc
gs
xchg
mov
xchg
jns
dec
test
jl
mov
cwde
mov
sub
jnp
imul
jl
fisubr
test
jno
xchg
cwde
mov
ja
scas
fisubr
test
jl
mov
jle
mov
sahf
mov
js
push
outs
jns
add
jo
jno
xchg
jle
test
test
xchg
ja
xchg
jle
jnp
sub
mov
shr
add
jo
mov
xchg
(bad)
fs
cmps
out
popf
mov
ja
sbb
test
mov
nop
outs
jg
add
inc
xchg
mov
jne
xchg
mov
test
ins
jg
stos
(bad)
je
mov
jns
push
and
mov
jo
jno
jb
mov
pop
shr
or
data16
xchg
jge
mov
jae
xchg
jg
sub
mov
stos
jae
test
xchg
ins
pushf
fisubr
test
jp
pushf
cwde
mov
sbb
mov
xchg
jb
jg
jbe
mov
xchg
jge
push
cmp
xchg
jle
imul
pushf
xchg
xchg
jl
ja
mov
outs
and
dec
jl
jns
mov
ja
pop
jae
jae
test
jle
adc
data16
xchg
jg
jbe
xchg
jnp
adc
jl
popf
mov
ja
jg
jne
sub
jg
jbe
mov
mov
shr
xor
cmp
outs
jae
js
mov
mov
jo
mov
lea
nop
jae
cwde
mov
jb
je
fisubr
adc
xchg
paddsw
mov
or
cdq
sbb
jl
stos
jnp
add
jbe
pop
nop
je
lods
outs
fild
xchg
test
nop
jb
jg
sub
jg
jbe
push
mov
xchg
jnp
jnp
jno
shr
sahf
jb
jne
xchg
mov
dec
imul
lods
outs
cmp
or
data16
xchg
jns
jnp
push
outs
push
nop
jg
jnp
inc
jae
test
test
mov
mov
stos
or
test
jno
xchg
cwde
mov
ja
stos
sbb
jg
mov
jbe
jno
sub
mov
xchg
mov
jbe
xchg
(bad)
jnp
jo
xchg
mov
data16
sbb
stos
sbb
cdq
jb
test
test
jnp
jo
jae
fisubr
xchg
jg
jg
pop
bound
ins
in
iret
imul
push
ins
jns
nop
mov
test
(bad)
gs
xchg
xchg
jbe
mov
jne
mov
xchg
outs
cwde
fisubr
test
jae
jnp
push
jno
xchg
outs
cwde
fisubr
test
jae
jnp
push
in
sbb
data16
jae
(bad)
jno
mov
lods
nop
jl
jae
je
lods
outs
adc
pop
mov
xchg
mov
jo
mov
sub
mov
jl
mov
shr
xchg
lods
pop
push
push
jne
mov
adc
popa
out
test
xchg
jo
data16
in
xchg
jno
data16
jno
jg
imul
mov
jne
jg
jl
jne
shr
das
jo
jo
lea
jne
test
jnp
jae
ins
scas
jne
push
xor
jo
pop
jns
jle
ja
iret
test
xchg
jbe
push
push
mov
scas
jo
data16
jg
xchg
jbe
pop
cmps
lahf
mov
outs
jns
jl
ja
test
imul
xchg
ins
test
jns
outs
out
test
mov
jnp
test
test
jbe
jo
cdq
jns
xchg
sub
mov
jnp
jg
jbe
push
mov
ja
jl
jg
jbe
push
mov
xchg
jae
nop
ja
test
jbe
imul
je
test
jbe
jae
ins
xchg
mov
test
jl
jae
xchg
pop
ins
test
test
sub
call
test
(bad)
js
nop
jb
jne
sub
mov
jle
adc
push
jne
xchg
jne
jnp
push
jnp
xchg
mov
test
jns
mov
jae
ins
pushf
fisubr
sbb
pushf
jae
xchg
pop
jle
jns
sub
jge
nop
push
jae
jb
fisubr
sbb
jl
xchg
(bad)
jno
adc
jno
pop
jno
je
sub
mov
je
mov
test
jl
jne
jne
adc
sub
xchg
xchg
mov
xchg
jno
jg
sub
mov
shr
sub
jno
xchg
cwde
nop
addr16
shr
jno
pop
data16
mov
mov
data16
jg
mov
xchg
ins
pushf
jae
xchg
test
mov
jns
jle
ja
adc
mov
xchg
jle
jnp
jno
test
mov
imul
xchg
xchg
lea
out
xchg
xchg
mov
jge
xchg
je
push
add
mov
jnp
ja
(bad)
xchg
jnp
jnp
jl
shr
jb
imul
jl
lods
cwde
nop
addr16
lea
pop
mov
cmp
mov
push
jns
jns
xchg
ins
test
mov
sub
mov
jg
xchg
mov
shr
fldcw
outs
jl
jns
cwde
nop
addr16
sahf
mov
gs
test
pushw
xchg
jae
xchg
mov
jae
ins
pushf
fisubr
test
jno
mov
ins
or
dec
out
popf
mov
imul
jno
pop
shr
aas
jno
data16
xchg
jle
ja
jno
imul
jg
stos
jl
ja
mov
jnp
test
jle
mov
nop
jb
jne
sub
leave
inc
push
addr16
shr
dec
jo
data16
jnp
xchg
test
jg
mov
imul
jl
cdq
xchg
lea
jge
(bad)
jbe
inc
adc
mov
bound
xchg
mov
test
mov
jge
(bad)
jo
mov
test
test
mov
inc
xchg
fisubr
sbb
mov
mov
fisubr
sbb
mov
cdq
test
shr
push
jo
data16
xchg
jns
outs
outs
mov
fisubr
adc
mov
jge
xchg
jle
jl
jne
fwait
in
jl
pop
data16
mov
mov
mov
data16
jne
sub
mov
out
test
xchg
jbe
sub
mov
jg
jne
test
xchg
popa
jno
ja
mov
stos
jno
imul
popf
stos
jno
inc
shr
outs
jne
pop
lea
jbe
jnp
mov
sub
jae
mov
push
js
mov
cmp
popf
mov
mov
imul
mov
jne
mov
addr16
mov
fwait
xchg
jle
xchg
xor
mov
mov
mov
jb
imul
sbb
jge
add
inc
push
test
xchg
jae
ja
mov
nop
ins
stos
jae
mov
jae
push
mov
mov
xchg
ins
mov
outs
ret
lea
sahf
or
mov
in
push
outs
addr16
jbe
jbe
push
ja
xor
sbb
jge
mov
jg
jg
push
jbe
in
bound
imul
mov
je
jo
mov
sub
jbe
jnp
js
je
shr
je
xchg
outs
sahf
(bad)
mov
jge
xchg
je
push
adc
mov
mov
or
and
mov
mov
gs
pushf
fwait
lahf
jno
js
je
sub
imul
ja
(bad)
jno
xchg
jb
mov
shr
cdq
mov
inc
push
mov
in
popf
mov
jae
ins
stos
jae
test
xchg
ins
pushf
fisubr
push
dec
ins
xchg
lods
leave
inc
push
addr16
shr
jb
imul
ins
jg
mov
lahf
jns
cwde
nop
push
fisubr
adc
jge
mov
add
sub
cmp
add
jo
imul
add
add
jb
popa
je
and
dec
add
add
add
(bad)
(bad)
(bad)
inc
push
inc
add
imul
data16
jne
arpl
add
jae
jb
and
dec
add
popa
and
cmp
jl
data16
popa
and
cmp
push
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
sub
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
jo
js
js
or
or
add
add
or
add
or
or
pop
or
add
sub
outs
add
ins
add
add
add
add
outs
jne
ins
sub
add
je
jne
arpl
add
add
and
cmp
daa
pop
xor
sub
add
jae
jb
imul
ins
gs
add
inc
jb
outs
jb
add
push
popa
jb
imul
and
and
add
or
jae
gs
imul
ins
gs
add
inc
jae
gs
imul
ins
gs
add
pop
inc
jb
inc
bound
gs
jb
cmp
push
je
imul
and
and
and
and
jb
jb
add
arpl
and
popa
outs
arpl
inc
jae
gs
imul
ins
gs
inc
imul
dec
imul
add
add
jo
imul
add
gs
xor
fs
ins
add
dec
imul
je
push
imul
sub
and
jne
and
jb
jb
add
inc
bound
and
push
jb
addr16
ins
cmp
and
jae
jae
jae
jae
jae
jae
jae
jae
jae
or
push
jb
jae
and
je
jns
je
and
jne
and
and
jo
imul
sub
add
dec
outs
fs
cmp
add
add
inc
imul
imul
or
add
jo
gs
imul
add
add
add
or
inc
outs
jb
imul
je
outs
outs
and
and
ja
jns
jne
and
outs
addr16
ins
and
outs
and
jne
and
and
jae
jb
imul
ins
jne
gs
jae
and
and
jae
popa
ins
and
sub
outs
arpl
outs
je
je
outs
outs
and
and
jae
jb
jae
add
cs
jb
addr16
ins
and
ins
and
imul
outs
add
bound
jo
arpl
add
add
push
jae
jb
gs
popa
and
cmp
dec
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
add
jne
arpl
arpl
add
add
add
lock
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outs
je
add
dec
inc
push
dec
inc
dec
xor
sub
xor
add
add
fs
jbe
arpl
add
jae
fs
jb
jbe
arpl
add
popa
pop
outs
jbe
arpl
imul
arpl
add
add
je
bound
arpl
add
outs
je
ins
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outs
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outs
je
outs
outs
jne
push
arpl
outs
jb
ins
outs
ja
outs
and
imul
je
outs
outs
or
add
xor
ss
outs
je
outs
outs
jne
push
arpl
outs
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
ins
and
outs
arpl
outs
and
ins
ins
or
push
xor
xor
or
and
outs
jne
push
arpl
outs
jb
pop
outs
outs
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outs
popa
bound
je
and
outs
and
outs
jae
ins
and
imul
add
push
xor
cmp
outs
gs
arpl
and
popa
jo
gs
outs
jb
or
add
add
xor
aaa
or
outs
gs
arpl
and
ins
je
je
jb
popa
and
imul
jb
outs
jb
or
add
add
xor
ss
outs
je
outs
outs
jne
push
arpl
outs
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
ins
and
outs
addr16
ins
and
ins
imul
or
add
xor
cmp
outs
je
outs
outs
jne
push
arpl
outs
jb
outs
jbe
jb
outs
ins
outs
je
or
push
xor
cmp
outs
je
outs
outs
jne
push
arpl
outs
jb
popa
jb
jne
outs
je
or
push
xor
xor
ins
outs
popa
je
outs
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outs
je
ins
and
jb
jb
add
add
push
jne
je
ins
and
jb
jb
or
push
jb
addr16
ins
cmp
add
add
imul
outs
outs
jb
add
inc
push
push
add
jb
popa
ins
add
inc
jb
add
add
inc
jb
outs
jb
and
ins
outs
jb
and
ins
outs
arpl
imul
and
ins
outs
jb
and
outs
arpl
je
jo
or
add
dec
outs
jbe
ins
imul
popa
je
outs
outs
and
jp
cmp
and
je
jae
or
and
ins
imul
outs
imul
ins
ins
outs
arpl
imul
ins
jne
gs
add
add
imul
outs
imul
ins
ins
outs
arpl
imul
ins
jne
and
and
ins
and
imul
or
add
add
push
arpl
add
pop
inc
jb
inc
push
gs
outs
jb
sub
add
add
jb
dec
jae
popa
ins
imul
imul
push
jae
jb
popa
je
sub
add
pop
jo
imul
arpl
cmp
gs
add
add
dec
popa
jae
inc
ins
outs
arpl
cmp
gs
add
add
jo
gs
fs
outs
arpl
jae
and
ins
outs
arpl
jae
add
add
gs
fs
outs
and
dec
dec
push
inc
pop
dec
dec
dec
inc
and
and
gs
fs
jno
gs
and
dec
dec
push
inc
pop
push
inc
push
add
add
inc
inc
dec
inc
inc
inc
cmp
popa
data16
jb
and
ins
outs
arpl
sub
and
je
xor
xor
pop
or
add
inc
inc
dec
inc
inc
inc
cmp
bound
outs
jb
and
ins
outs
arpl
sub
and
je
xor
xor
pop
or
add
dec
dec
inc
dec
pop
push
pop
push
inc
pop
dec
push
pop
push
inc
dec
dec
inc
sub
gs
fs
outs
arpl
jae
sub
add
imul
outs
imul
jb
and
imul
add
ins
outs
jb
and
arpl
gs
outs
jb
popa
je
xor
xor
pop
and
xor
pop
sub
jae
outs
jne
and
and
js
xor
pop
or
add
and
outs
arpl
gs
and
js
xor
pop
and
and
je
jae
ins
outs
outs
or
add
add
ins
ins
outs
arpl
gs
and
ins
and
sub
or
inc
inc
dec
inc
inc
inc
cmp
outs
outs
and
and
and
gs
outs
arpl
popa
je
xor
xor
pop
or
add
add
inc
inc
inc
inc
add
gs
jo
push
imul
and
imul
outs
and
je
jb
and
ins
jne
and
add
pop
push
push
imul
and
inc
inc
push
inc
inc
inc
push
push
push
or
add
pop
push
push
imul
and
inc
inc
push
inc
inc
inc
inc
dec
inc
or
add
pop
push
push
imul
and
inc
inc
push
inc
inc
inc
dec
dec
inc
inc
or
add
gs
jo
push
imul
and
inc
inc
push
inc
inc
inc
inc
inc
inc
dec
dec
or
inc
popa
and
ins
outs
jb
and
outs
arpl
outs
jne
and
and
js
xor
pop
or
add
jb
dec
gs
inc
push
outs
imul
dec
dec
and
popa
je
and
imul
add
push
arpl
jne
jo
arpl
jo
gs
or
add
je
bound
imul
je
xor
xor
pop
sub
jae
bound
and
jne
bound
gs
ins
outs
outs
or
add
add
jb
popa
ins
and
outs
arpl
popa
je
xor
xor
pop
sub
and
je
jae
ins
outs
outs
or
arpl
outs
je
bound
imul
je
xor
xor
pop
sub
jae
bound
and
jne
bound
gs
ins
outs
outs
or
jnp
ins
fs
add
and
sub
cmp
add
and
ins
and
jb
jb
sub
and
inc
jne
jo
outs
and
push
arpl
sub
inc
popa
je
cmp
cmp
jae
and
xor
add
add
arpl
and
ins
outs
jb
and
imul
add
outs
arpl
arpl
sub
imul
jae
outs
je
dec
dec
inc
and
gs
fs
sub
jae
jb
popa
ins
sub
jb
sub
gs
ins
sub
jae
and
cmp
add
ins
jae
jne
arpl
add
jae
jb
outs
je
arpl
add
jae
jb
outs
and
cmp
dec
add
jbe
jo
imul
add
je
popa
jae
inc
arpl
gs
outs
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outs
js
inc
data16
gs
add
add
jb
popa
ins
and
cmp
dec
add
pop
addr16
jne
arpl
add
pop
jns
add
xor
pop
jns
add
gs
add
add
outs
add
add
pop
push
add
pop
arpl
jae
add
ins
fs
add
add
data16
add
popaw
bound
add
add
outs
outs
jb
add
arpl
ins
add
add
je
outs
add
jae
jae
outs
add
jb
add
add
popa
je
outs
xor
add
popa
je
outs
add
add
popa
arpl
add
add
popa
jae
outs
add
add
je
outs
push
arpl
push
jae
outs
push
ins
outs
xor
add
add
add
ja
gs
add
(bad)
(bad)
push
push
dec
add
push
dec
add
add
add
(bad)
(bad)
push
sbb
(bad)
(bad)
(bad)
jmp
dec
add
and
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
pop
data16
bound
arpl
add
ins
ins
cmp
add
fs
dec
dec
dec
dec
and
and
jns
add
fs
jns
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outs
jbe
ins
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
ins
jns
add
add
outs
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outs
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
ins
add
outs
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outs
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outs
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outs
outs
fs
jns
add
outs
fs
jns
add
je
inc
jb
add
add
add
add
outs
add
outs
add
outs
dec
outs
outs
push
jne
push
gs
push
push
popa
je
add
dec
popa
outs
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
dec
dec
dec
and
add
in
sub
mov
mov
mov
mov
mov
mov
xor
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
push
push
call
push
push
call
push
call
mov
cmp
jne
push
call
push
call
add
call
push
push
call
movsx
push
call
push
push
call
fstp
add
push
push
push
push
push
call
push
call
add
push
call
xor
mov
pop
ret
push
mov
sub
mov
mov
push
call
push
push
call
mov
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
call
cmp
jne
push
call
push
push
call
push
push
call
push
push
push
call
test
jne
push
mov
push
call
add
mov
mov
mov
push
push
push
push
push
call
mov
push
call
mov
call
push
push
call
push
call
mov
mov
mov
mov
mov
add
mov
mov
push
call
mov
mov
mov
mov
mov
cmp
je
mov
sub
cmp
jne
push
jmp
mov
mov
mov
mov
add
mov
mov
mov
sub
cmp
jne
mov
push
push
mov
sub
cmp
jae
mov
add
mov
lea
push
push
push
push
push
call
add
jmp
mov
sub
cmp
jne
pop
jmp
mov
add
mov
mov
cmp
jb
xor
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
jmp
mov
add
mov
mov
add
cmp
jae
call
mov
mov
cmp
jae
mov
mov
add
mov
jmp
mov
add
mov
jmp
jmp
push
push
push
push
push
call
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
push
push
push
call
mov
and
add
mov
mov
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
lea
mov
cmp
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
push
push
call
add
push
call
add
mov
mov
push
mov
push
push
call
add
mov
push
mov
push
call
add
push
push
call
add
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
call
mov
call
fnclex
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
add
push
push
push
mov
call
mov
mov
shr
and
mov
mov
and
mov
mov
shl
add
mov
mov
shr
and
mov
push
call
add
test
jne
push
call
add
call
test
jne
push
call
add
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
mov
and
test
je
mov
and
mov
jmp
mov
mov
push
mov
push
push
push
call
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
add
ret
mov
mov
push
call
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
cmp
jne
call
mov
push
call
add
push
call
add
pop
ret
int3
int3
int3
push
mov
cmp
jne
call
mov
push
call
add
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
cmp
jne
mov
jmp
cmp
jge
mov
push
push
push
push
mov
push
call
add
mov
cmp
jne
mov
push
push
push
push
mov
push
call
add
mov
cmp
jne
push
call
add
mov
jmp
mov
add
mov
cmp
jge
mov
shl
add
mov
mov
mov
jmp
mov
jmp
mov
add
mov
cmp
jge
mov
sar
mov
and
imul
mov
cmp
je
mov
sar
mov
and
imul
mov
cmp
jne
mov
shl
mov
jmp
mov
pop
ret
int3
int3
int3
int3
push
mov
call
movsx
test
je
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
add
jmp
mov
add
push
call
pop
ret
int3
int3
int3
push
mov
cmp
jge
mov
add
push
call
add
jmp
mov
add
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
add
jmp
mov
add
push
call
pop
ret
int3
int3
int3
push
mov
cmp
jge
mov
add
push
call
add
jmp
mov
add
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
cmp
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
mov
mov
push
call
add
test
jne
xor
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
xor
jmp
mov
add
mov
mov
mov
and
test
je
xor
jmp
mov
cmp
jne
push
push
push
push
call
add
mov
mov
mov
cmp
jne
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
cmp
je
cmp
je
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
cmp
je
mov
mov
and
test
je
mov
push
call
add
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
movsx
mov
add
mov
test
je
cmp
jl
movsx
cmp
jl
movsx
cmp
jg
movsx
movsx
and
mov
jmp
mov
mov
mov
mov
mov
movsx
sar
mov
mov
mov
cmp
ja
mov
jmp
mov
mov
and
mov
xor
mov
and
test
je
lea
push
mov
push
movsx
push
call
add
mov
mov
mov
mov
add
mov
movsx
test
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
lea
push
mov
push
movsx
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
movsx
mov
mov
sub
mov
cmp
ja
mov
xor
mov
jmp
mov
or
mov
jmp
mov
or
mov
jmp
mov
or
mov
jmp
mov
or
mov
jmp
mov
or
mov
jmp
movsx
cmp
jne
lea
push
call
add
mov
cmp
jge
mov
or
mov
mov
neg
mov
jmp
mov
imul
movsx
lea
mov
jmp
mov
jmp
movsx
cmp
jne
lea
push
call
add
mov
cmp
jge
mov
jmp
mov
imul
movsx
lea
mov
jmp
movsx
mov
mov
sub
mov
cmp
ja
mov
xor
mov
jmp
mov
or
mov
jmp
mov
movsx
cmp
jne
mov
movsx
cmp
jne
mov
add
mov
mov
or
mov
jmp
mov
jmp
jmp
mov
or
mov
jmp
mov
or
mov
jmp
movsx
mov
mov
sub
mov
cmp
ja
mov
xor
mov
jmp
mov
and
test
jne
mov
or
mov
mov
and
test
je
lea
push
call
add
mov
mov
push
lea
push
call
add
mov
cmp
jge
mov
jmp
lea
push
call
add
mov
mov
mov
mov
lea
mov
jmp
lea
push
call
add
mov
cmp
je
mov
cmp
jne
mov
mov
mov
push
call
add
mov
jmp
mov
and
test
je
mov
mov
mov
mov
movsx
shr
mov
mov
jmp
mov
mov
mov
mov
mov
movsx
mov
jmp
mov
and
test
jne
mov
or
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
lea
push
call
add
mov
mov
and
test
je
cmp
jne
mov
mov
mov
mov
mov
mov
mov
sub
mov
test
je
mov
xor
mov
test
je
mov
add
mov
jmp
mov
sub
sar
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
sub
mov
test
je
mov
movsx
test
je
mov
add
mov
jmp
mov
sub
mov
jmp
lea
push
call
add
mov
mov
and
test
je
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
add
mov
mov
or
mov
lea
mov
cmp
jge
mov
jmp
cmp
jne
movsx
cmp
jne
mov
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
push
mov
push
movsx
push
mov
push
lea
push
call
add
mov
and
test
je
cmp
jne
mov
push
call
add
movsx
cmp
jne
mov
and
test
jne
mov
push
call
add
mov
movsx
cmp
jne
mov
or
mov
mov
add
mov
mov
push
call
add
mov
jmp
mov
or
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
and
test
je
mov
mov
add
mov
mov
jmp
mov
mov
and
test
je
mov
or
mov
mov
and
test
je
lea
push
call
add
mov
mov
jmp
mov
and
test
je
mov
and
test
je
lea
push
call
add
movsx
cdq
mov
mov
jmp
lea
push
call
add
and
cdq
mov
mov
jmp
mov
and
test
je
lea
push
call
add
cdq
mov
mov
jmp
lea
push
call
add
xor
mov
mov
mov
and
test
je
cmp
jg
jl
cmp
jae
mov
neg
mov
adc
neg
mov
mov
mov
or
mov
jmp
mov
mov
mov
mov
mov
and
test
jne
mov
mov
and
mov
mov
cmp
jge
mov
jmp
mov
and
mov
mov
or
test
jne
mov
lea
mov
mov
mov
sub
mov
test
jg
mov
or
test
je
mov
cdq
push
push
mov
push
mov
push
call
add
mov
mov
cdq
push
push
mov
push
mov
push
call
mov
mov
cmp
jle
mov
add
mov
mov
mov
mov
mov
sub
mov
jmp
lea
sub
mov
mov
add
mov
mov
and
test
je
mov
movsx
cmp
jne
cmp
jne
mov
sub
mov
mov
mov
mov
add
mov
cmp
jne
mov
and
test
je
mov
and
test
je
mov
mov
jmp
mov
and
test
je
mov
mov
jmp
mov
and
test
je
mov
mov
mov
sub
sub
mov
mov
and
test
jne
lea
push
mov
push
mov
push
push
call
add
lea
push
mov
push
mov
push
lea
push
call
add
mov
and
test
je
mov
and
test
jne
lea
push
mov
push
mov
push
push
call
add
cmp
je
cmp
jle
mov
mov
mov
mov
mov
mov
sub
mov
test
je
mov
mov
mov
mov
push
lea
push
mov
add
mov
call
add
mov
cmp
jg
jmp
lea
push
mov
push
mov
push
lea
push
call
add
jmp
jmp
lea
push
mov
push
mov
push
mov
push
call
add
mov
and
test
je
lea
push
mov
push
mov
push
push
call
add
jmp
mov
pop
pop
pop
mov
pop
ret
adc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
add
add
add
push
pop
inc
add
pop
inc
add
pop
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
push
add
add
push
push
push
push
push
push
push
push
push
push
add
push
push
push
add
add
push
push
push
push
push
push
push
add
push
push
push
push
push
push
or
or
push
or
or
push
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
sub
mov
mov
mov
cmp
jl
mov
mov
mov
mov
movsx
and
mov
mov
mov
add
mov
mov
jmp
mov
push
mov
push
call
add
mov
cmp
jne
mov
mov
jmp
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
sub
mov
test
jle
mov
push
mov
push
mov
push
call
add
mov
cmp
jne
jmp
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
sub
mov
test
jle
mov
push
mov
push
mov
movsx
mov
mov
push
mov
add
mov
call
add
mov
cmp
jne
jmp
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
mov
pop
ret
int3
push
mov
mov
mov
add
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
call
push
mov
mov
xor
lea
rep
stos
stos
mov
mov
xor
lea
rep
stos
stos
mov
mov
xor
lea
rep
stos
stos
lea
mov
cmp
jl
cmp
jl
or
jmp
cmp
jne
push
call
test
jle
cmp
jne
push
call
mov
cmp
je
push
mov
push
call
mov
cmp
jne
or
jmp
mov
push
mov
push
push
lea
push
call
add
lea
push
call
push
call
call
or
jmp
cmp
je
mov
push
mov
push
push
lea
push
call
add
test
jge
push
lea
push
call
add
cmp
jne
cmp
je
mov
jmp
mov
mov
push
lea
push
call
add
lea
push
lea
push
call
add
cmp
jne
mov
mov
and
test
je
push
lea
push
call
add
push
lea
push
call
add
cmp
je
lea
push
mov
push
mov
push
push
push
lea
push
call
add
test
jge
push
lea
push
call
add
jmp
lea
push
lea
push
call
add
cmp
je
lea
push
lea
push
mov
push
call
add
test
je
cmp
jne
push
call
mov
jmp
mov
mov
and
test
je
mov
cmp
je
push
lea
push
lea
push
call
add
push
lea
push
mov
mov
push
call
mov
mov
and
test
je
lea
push
call
mov
mov
and
test
je
cmp
je
push
lea
push
mov
push
call
add
mov
jmp
mov
lea
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
cmp
jne
push
call
mov
jmp
cmp
jne
push
call
xor
pop
mov
pop
ret
push
mov
mov
call
cmp
jne
push
push
push
push
push
call
add
cmp
jne
call
xor
test
jne
push
lea
push
push
call
test
jne
push
lea
push
call
add
lea
mov
mov
push
call
add
cmp
jbe
mov
push
call
add
mov
lea
mov
push
push
mov
push
call
add
mov
mov
cmp
je
mov
push
call
add
cmp
jbe
mov
push
call
add
mov
lea
mov
push
push
mov
push
call
add
cmp
jne
mov
jmp
mov
mov
movsx
test
je
mov
mov
jmp
mov
mov
movsx
test
je
cmp
jne
mov
jmp
mov
mov
movsx
test
je
mov
jmp
mov
cmp
je
mov
mov
jmp
mov
cmp
je
mov
jmp
mov
cmp
je
mov
mov
jmp
mov
cmp
je
mov
jmp
mov
cmp
je
mov
mov
jmp
mov
cmp
je
mov
jmp
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
mov
push
push
push
lea
push
call
add
test
jge
push
lea
push
call
add
push
push
lea
push
call
add
mov
cmp
jne
push
call
add
push
call
cmp
jne
mov
jmp
xor
mov
pop
ret
int3
int3
int3
int3
mov
or
jne
fxch
fyl2x
jmp
mov
xor
fldl2e
fmulp
call
fld1
faddp
test
je
fld1
cmp
je
fdivp
jmp
call
test
jne
fscale
or
je
fchs
jmp
call
or
je
xor
cmp
je
not
fxch
fabs
jmp
jmp
jmp
fstp
fstp
fld
mov
ret
fldln2
fxch
ftst
fstsw
fwait
test
jne
fyl2x
ret
mov
fstp
fld
ret
or
jne
ret
fldlg2
jmp
fldln2
fxch
or
jne
fyl2x
ret
jmp
call
fstp
fstp
or
jne
fldz
cmp
jne
or
je
fchs
ret
mov
fld
cmp
jne
or
je
fchs
jmp
fstp
jmp
fstp
jmp
pop
ftst
fstsw
fwait
test
jne
fstp
fld
or
je
fchs
ret
mov
jmp
fstp
fstp
fld
mov
ret
or
jne
fstp
fld
ret
fld
fabs
fld
fcompp
fstsw
fwait
test
jne
fld
frndint
ftst
fstsw
fwait
mov
fxch
fsub
ftst
fstsw
fabs
f2xm1
ret
fld
frndint
fcomp
fstsw
sahf
jne
fld
fmul
fld
frndint
fcompp
fstsw
sahf
je
mov
ret
mov
jmp
mov
jmp
push
sub
mov
push
sub
fstp
sub
fstp
fsave
call
add
frstor
fld
add
pop
test
je
jmp
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
push
fstcw
fwait
cmp
je
call
or
call
pop
leave
ret
fxch
fst
fxch
fst
jmp
push
mov
add
push
fstcw
cmp
je
call
or
and
call
pop
leave
ret
fst
jmp
push
mov
add
push
push
push
call
add
push
push
call
add
fstcw
or
mov
call
call
pop
leave
ret
and
cmp
jne
fst
mov
or
je
cmp
je
cmp
je
or
je
movsx
mov
jmp
mov
and
jne
fstsw
and
je
mov
jmp
fldcw
fwait
ret
mov
and
or
je
cmp
je
jmp
mov
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
jae
fmul
jmp
mov
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
jbe
fmul
push
push
mov
inc
mov
test
jne
cld
lea
lea
movs
movs
cmp
je
lea
lea
movs
movs
fstp
lea
lea
push
push
mov
mov
movsx
push
call
add
pop
pop
fld
jmp
push
mov
add
push
push
push
call
add
fstcw
and
call
call
pop
leave
ret
push
mov
add
push
mov
mov
and
cmp
jne
or
mov
mov
mov
shld
mov
mov
fld
jmp
fld
pop
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
cmp
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
mov
push
call
add
mov
mov
sub
mov
mov
mov
cmp
jl
mov
mov
mov
mov
movsx
and
mov
mov
mov
add
mov
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
mov
push
call
add
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
mov
fld
fdiv
fmul
fsubr
fstp
fld
fcomp
fnstsw
test
jne
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
sub
push
call
mov
cmp
je
push
mov
push
call
mov
cmp
je
push
call
jmp
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
movsx
push
call
add
cmp
je
mov
add
mov
cmp
jle
push
mov
movsx
push
call
add
mov
jmp
mov
movsx
mov
xor
mov
and
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movsx
mov
add
mov
test
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
movsx
test
je
mov
movsx
movsx
cmp
je
mov
add
mov
jmp
mov
movsx
mov
add
mov
test
je
mov
movsx
test
je
mov
movsx
cmp
je
mov
movsx
cmp
je
mov
add
mov
jmp
mov
mov
mov
sub
mov
mov
movsx
cmp
jne
mov
sub
mov
jmp
mov
movsx
movsx
cmp
jne
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
mov
movsx
mov
add
mov
test
je
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
fld
fcomp
fnstsw
test
jne
mov
jmp
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
cmp
je
mov
push
lea
push
call
add
mov
mov
mov
mov
mov
jmp
mov
push
lea
push
call
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
mov
lea
push
lea
push
mov
mov
push
mov
push
call
add
mov
push
mov
add
push
mov
xor
cmp
sete
mov
add
xor
cmp
setg
add
push
call
add
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movsx
test
je
mov
xor
cmp
sete
mov
add
mov
xor
cmp
setg
push
mov
push
call
add
mov
mov
mov
cmp
jne
mov
mov
mov
add
mov
cmp
jle
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
mov
add
movsx
neg
sbb
inc
add
push
call
add
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
movsx
cmp
je
mov
mov
sub
mov
cmp
jge
mov
neg
mov
mov
mov
mov
add
mov
cmp
jl
mov
cdq
mov
idiv
mov
mov
add
mov
mov
mov
cdq
mov
idiv
mov
mov
add
mov
cmp
jl
mov
cdq
mov
idiv
mov
mov
add
mov
mov
mov
cdq
mov
idiv
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
mov
lea
push
lea
push
mov
mov
push
mov
push
call
add
mov
push
mov
mov
add
push
mov
xor
cmp
sete
mov
add
push
call
add
push
mov
push
mov
push
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
sub
mov
movsx
test
je
mov
xor
cmp
sete
mov
add
mov
mov
cmp
jne
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
cmp
jg
push
mov
push
call
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
cmp
jle
push
mov
push
call
add
mov
mov
mov
mov
add
mov
mov
cmp
jge
movsx
test
je
mov
mov
neg
mov
jmp
mov
mov
neg
cmp
jge
mov
mov
jmp
mov
mov
neg
mov
mov
mov
mov
push
mov
push
call
add
mov
push
push
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
mov
lea
mov
lea
push
lea
push
mov
mov
push
mov
push
call
add
mov
mov
sub
mov
mov
xor
cmp
sete
mov
add
mov
mov
push
mov
push
mov
push
call
add
mov
mov
sub
xor
cmp
setl
mov
mov
mov
sub
mov
cmp
jl
mov
cmp
jl
push
mov
push
mov
push
mov
push
mov
push
call
add
jmp
movsx
test
je
mov
movsx
mov
add
mov
test
je
jmp
mov
mov
push
mov
push
mov
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
je
cmp
jne
mov
push
mov
push
mov
push
mov
push
call
add
jmp
cmp
jne
mov
push
mov
push
mov
push
call
add
jmp
mov
push
mov
push
mov
push
mov
push
call
add
pop
ret
int3
push
mov
cmp
je
mov
push
call
add
add
push
mov
push
mov
add
push
call
add
pop
ret
int3
int3
push
mov
cmp
je
call
push
push
call
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
cmp
jne
mov
push
call
push
call
mov
mov
mov
cmp
jne
cmp
je
mov
mov
mov
sub
mov
mov
cmp
jb
mov
cmp
je
mov
call
jmp
push
push
call
add
push
push
call
add
cmp
jne
push
call
add
and
test
je
mov
call
cmp
je
call
jmp
mov
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
add
pop
ret
int3
push
mov
push
call
add
pop
ret
int3
push
mov
mov
cmp
jae
mov
cmp
je
mov
call
mov
add
mov
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
mov
mov
mov
push
mov
push
call
add
mov
cmp
je
mov
cmp
jne
mov
push
call
jmp
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
or
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
add
mov
mov
add
cmp
jge
mov
imul
mov
mov
mov
jmp
mov
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
push
push
call
add
mov
mov
mov
jmp
mov
mov
mov
mov
push
call
add
mov
mov
mov
or
mov
pop
ret
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
je
mov
add
mov
mov
imul
mov
add
cmp
jae
jmp
mov
imul
mov
add
cmp
jae
mov
mov
cmp
je
xor
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
cmp
jne
call
mov
mov
mov
xor
mov
cmp
jne
mov
add
mov
mov
xor
mov
cmp
je
mov
xor
mov
test
je
mov
xor
mov
push
call
add
test
je
mov
add
mov
jmp
mov
xor
mov
cmp
jne
mov
add
mov
jmp
mov
xor
mov
cmp
jle
mov
add
mov
jmp
mov
xor
mov
test
je
mov
xor
mov
cmp
jg
mov
add
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
cmp
jne
call
mov
mov
mov
mov
movsx
test
je
mov
movsx
cmp
je
mov
add
mov
mov
push
call
add
mov
lea
mov
jmp
push
push
push
mov
lea
push
call
add
mov
mov
mov
cmp
jne
push
call
add
mov
mov
jmp
mov
add
mov
mov
movsx
test
je
mov
push
call
add
add
mov
mov
movsx
cmp
je
push
push
push
mov
push
call
add
mov
mov
mov
cmp
jne
push
call
add
mov
push
mov
mov
push
call
add
mov
add
mov
jmp
push
mov
push
call
add
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
cmp
jne
call
push
push
push
call
mov
mov
movsx
test
jne
mov
mov
jmp
mov
mov
mov
mov
lea
push
lea
push
push
push
mov
push
call
add
push
push
push
mov
mov
lea
push
call
add
mov
cmp
jne
push
call
add
lea
push
lea
push
mov
mov
lea
push
mov
push
mov
push
call
add
mov
sub
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
add
mov
mov
movsx
cmp
jne
mov
add
mov
mov
movsx
cmp
je
mov
movsx
test
je
mov
xor
mov
xor
mov
and
test
je
mov
mov
add
mov
mov
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
cmp
je
mov
mov
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
movsx
cmp
jne
mov
add
mov
jmp
mov
mov
add
mov
mov
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
and
xor
mov
and
test
je
mov
mov
add
mov
mov
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
and
cmp
je
mov
and
test
je
mov
and
cmp
jne
mov
and
test
jne
mov
sub
mov
jmp
cmp
je
mov
mov
mov
mov
movsx
test
je
mov
movsx
cmp
je
mov
movsx
cmp
jne
mov
add
mov
jmp
mov
movsx
test
jne
jmp
cmp
je
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
movsx
cmp
jne
mov
add
mov
mov
add
mov
jmp
mov
movsx
cmp
jne
mov
xor
mov
div
test
jne
cmp
je
mov
movsx
cmp
jne
mov
add
mov
jmp
mov
jmp
mov
xor
cmp
sete
mov
mov
shr
mov
mov
mov
sub
mov
test
je
cmp
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
movsx
test
je
cmp
jne
mov
movsx
cmp
je
mov
movsx
cmp
jne
jmp
cmp
je
cmp
je
mov
xor
mov
xor
mov
and
test
je
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
jmp
mov
xor
mov
xor
mov
and
test
je
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
cmp
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
cmp
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
xor
jmp
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
mov
mov
mov
xor
mov
test
je
mov
add
mov
mov
xor
mov
test
jne
mov
add
mov
jmp
mov
sub
sar
add
mov
push
push
push
push
mov
push
mov
push
push
push
call
mov
cmp
je
push
push
push
mov
push
call
add
mov
cmp
jne
mov
push
call
xor
jmp
push
push
mov
push
mov
push
mov
push
mov
push
push
push
call
test
jne
push
mov
push
call
add
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
mov
mov
mov
movsx
test
je
mov
add
mov
mov
movsx
test
jne
mov
add
mov
jmp
mov
sub
add
mov
push
push
push
mov
push
call
add
mov
cmp
jne
mov
push
call
xor
jmp
mov
push
mov
push
mov
push
call
add
mov
push
call
mov
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
mov
cmp
jne
push
call
add
mov
mov
mov
jmp
mov
add
mov
mov
add
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
push
call
mov
and
test
je
cmp
je
mov
mov
mov
mov
add
mov
mov
add
mov
cmp
jge
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jge
push
push
push
push
call
add
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
mov
add
mov
jmp
mov
add
mov
mov
mov
add
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
mov
jmp
mov
add
mov
mov
add
mov
mov
add
mov
mov
cmp
jge
mov
cmp
je
mov
movsx
and
test
je
mov
movsx
and
test
jne
mov
mov
push
call
test
je
mov
sar
mov
and
imul
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
add
mov
cmp
jge
mov
imul
mov
add
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
jmp
mov
sub
neg
sbb
add
mov
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
mov
mov
mov
and
cmp
jne
mov
mov
or
mov
mov
jmp
mov
and
cmp
jne
mov
mov
or
mov
mov
jmp
mov
mov
or
mov
mov
jmp
mov
mov
or
mov
mov
jmp
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
call
mov
cmp
jne
xor
jmp
push
push
push
push
push
call
add
mov
cmp
je
mov
push
mov
push
call
test
jne
xor
jmp
mov
push
call
add
call
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
mov
mov
push
call
mov
cmp
jne
push
push
push
push
push
call
add
mov
cmp
je
mov
push
mov
push
call
test
je
mov
push
call
add
call
mov
mov
mov
mov
jmp
push
call
add
mov
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
xor
cmp
sete
push
call
mov
cmp
jne
xor
jmp
call
test
jne
mov
push
call
xor
jmp
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
cmp
je
cmp
jne
cmp
jne
push
call
add
cmp
je
call
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
jmp
mov
add
mov
cmp
jae
mov
mov
cmp
jne
jmp
jmp
mov
mov
cmp
jne
cmp
je
mov
mov
push
push
push
push
push
call
add
cmp
jne
int3
cmp
je
cmp
jne
cmp
jne
push
lea
push
mov
mov
push
call
add
push
mov
mov
push
push
call
push
call
jmp
cmp
je
push
lea
push
push
call
test
jne
push
lea
push
call
add
lea
mov
mov
push
call
add
add
cmp
jbe
lea
push
call
add
mov
lea
mov
push
push
mov
push
call
add
push
lea
push
call
add
mov
push
lea
push
call
add
push
lea
push
call
add
mov
mov
push
lea
push
call
add
push
push
lea
push
call
add
pop
pop
pop
mov
pop
ret
int3
push
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
mov
push
mov
push
mov
push
mov
push
call
add
mov
push
call
add
cmp
jne
cmp
jne
mov
jmp
mov
push
call
add
test
jne
xor
jmp
jmp
mov
pop
ret
int3
int3
push
mov
sub
push
push
push
mov
mov
and
test
je
call
test
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
mov
cmp
jne
int3
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
add
test
jne
cmp
je
mov
push
mov
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
jmp
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
xor
jmp
mov
and
cmp
je
mov
and
test
jne
mov
cmp
ja
mov
add
cmp
jbe
mov
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
xor
jmp
mov
and
cmp
je
cmp
je
mov
and
cmp
je
cmp
je
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
add
mov
mov
push
call
add
mov
cmp
jne
xor
jmp
mov
add
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
mov
mov
add
mov
mov
cmp
jbe
mov
mov
cmp
je
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
xor
mov
push
mov
add
push
call
add
push
xor
mov
push
mov
mov
lea
push
call
add
mov
push
xor
mov
push
mov
add
push
call
add
mov
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
imul
mov
mov
push
mov
push
mov
push
mov
push
call
add
mov
cmp
je
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
add
mov
jmp
mov
mov
pop
ret
push
mov
push
call
add
mov
push
mov
push
call
add
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
mov
and
test
je
call
test
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
cmp
jne
jmp
push
push
push
mov
push
push
mov
push
push
call
add
test
jne
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
jmp
mov
push
call
add
test
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
sub
mov
mov
mov
and
cmp
je
mov
cmp
je
mov
mov
and
cmp
je
mov
cmp
je
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
and
test
jne
push
mov
push
mov
add
push
call
add
test
jne
mov
add
push
mov
mov
push
mov
mov
and
mov
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
push
mov
push
mov
mov
mov
lea
push
call
add
test
jne
mov
add
push
mov
mov
push
mov
mov
and
mov
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
add
push
xor
mov
push
mov
push
call
add
mov
push
call
add
jmp
mov
cmp
jne
cmp
jne
mov
mov
mov
cmp
je
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
sub
mov
mov
and
test
jne
mov
cmp
je
mov
mov
mov
mov
mov
jmp
mov
cmp
je
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
jmp
mov
cmp
je
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
mov
mov
mov
add
push
xor
mov
push
mov
push
call
add
mov
push
call
add
jmp
mov
mov
mov
mov
push
xor
mov
push
mov
add
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
mov
mov
mov
sub
mov
test
je
mov
xor
mov
mov
and
mov
add
mov
cmp
je
mov
and
push
mov
xor
mov
push
mov
sub
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
jmp
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
and
test
jne
mov
jmp
push
call
add
call
mov
cmp
je
cmp
je
mov
mov
mov
add
mov
cmp
ja
mov
jmp
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
jmp
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
jmp
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
jmp
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
jmp
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
push
call
add
xor
jmp
mov
mov
jmp
mov
mov
mov
cmp
je
mov
mov
mov
and
cmp
je
mov
cmp
je
mov
mov
and
cmp
je
mov
cmp
jne
mov
mov
and
mov
mov
jmp
mov
push
mov
push
mov
add
push
call
add
test
jne
mov
add
push
mov
mov
push
mov
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
push
mov
push
mov
mov
mov
lea
push
call
add
test
jne
mov
add
push
mov
mov
push
mov
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
cmp
jne
mov
mov
push
mov
push
mov
add
push
call
add
test
jne
mov
add
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
cmp
jne
mov
cmp
je
mov
mov
push
mov
mov
push
mov
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
push
mov
add
push
mov
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
jmp
push
call
add
mov
pop
pop
pop
mov
pop
ret
jp
inc
add
inc
add
call
int3
push
mov
push
mov
mov
cmp
je
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
cmp
je
mov
push
mov
push
call
test
jne
cmp
je
mov
push
mov
push
call
test
jne
mov
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
cmp
jne
xor
jmp
push
push
mov
sub
push
call
add
test
jne
xor
jmp
mov
sub
push
call
add
mov
cmp
je
mov
sub
push
mov
push
call
add
jmp
mov
and
test
je
mov
jmp
mov
sub
push
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
cmp
jne
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
jmp
push
call
add
mov
mov
mov
mov
jmp
mov
add
mov
cmp
jge
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
cmp
je
mov
mov
and
test
jl
mov
mov
and
cmp
jge
mov
mov
and
mov
mov
add
mov
mov
and
mov
mov
mov
mov
and
mov
mov
mov
add
mov
mov
and
mov
mov
jmp
mov
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
jmp
mov
mov
mov
mov
mov
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
push
call
add
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
cmp
je
mov
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
cmp
je
mov
mov
and
test
je
mov
mov
and
cmp
jne
mov
and
test
jne
jmp
mov
cmp
je
push
push
mov
mov
push
call
add
test
jne
mov
mov
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
jmp
mov
mov
push
mov
mov
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
and
cmp
jne
mov
mov
push
mov
mov
sar
and
push
mov
add
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
cmp
je
mov
mov
push
mov
add
push
call
add
jmp
mov
push
call
add
jmp
mov
cmp
jne
mov
mov
push
mov
add
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
push
call
add
jmp
mov
mov
and
cmp
jne
mov
mov
push
mov
mov
sar
and
push
mov
add
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
push
call
add
jmp
push
call
add
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
jmp
mov
mov
cmp
jge
mov
add
mov
mov
cmp
jle
push
mov
and
push
call
add
mov
jmp
mov
and
mov
xor
mov
and
mov
cmp
je
mov
and
mov
jmp
mov
mov
mov
mov
mov
and
push
push
mov
imul
lea
push
call
add
jmp
mov
mov
lea
push
lea
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
lea
push
call
add
cmp
jne
cmp
jne
mov
and
test
je
cmp
je
push
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
push
call
add
mov
jmp
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
call
add
mov
jmp
mov
add
mov
mov
cmp
jge
mov
mov
cmp
je
mov
mov
mov
mov
and
test
je
mov
mov
mov
push
call
add
cmp
je
mov
add
mov
cmp
jl
mov
mov
mov
add
push
call
push
mov
mov
mov
push
call
add
mov
mov
mov
jmp
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
push
call
add
test
je
or
jmp
mov
mov
and
test
je
mov
mov
push
call
add
neg
sbb
jmp
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
and
cmp
jne
mov
mov
and
test
je
mov
mov
mov
sub
mov
cmp
jle
mov
push
mov
mov
push
mov
mov
push
call
add
cmp
jne
mov
mov
and
test
je
mov
mov
and
mov
mov
jmp
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
add
pop
ret
int3
push
mov
sub
mov
mov
push
call
add
mov
jmp
mov
add
mov
mov
cmp
jge
mov
mov
cmp
je
mov
mov
mov
mov
and
test
je
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
and
test
je
cmp
jne
mov
mov
mov
push
call
add
cmp
je
mov
add
mov
jmp
cmp
jne
mov
mov
mov
mov
and
test
je
mov
mov
mov
push
call
add
cmp
jne
mov
mov
mov
mov
push
mov
push
call
add
jmp
push
call
add
cmp
jne
mov
jmp
mov
mov
pop
ret
int3
push
mov
mov
push
call
mov
push
call
mov
push
call
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
cmp
jne
push
push
push
push
call
add
mov
cmp
jne
push
call
add
push
call
add
mov
cmp
jne
mov
push
call
mov
mov
mov
jmp
push
mov
push
call
add
push
call
add
mov
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jb
xor
jmp
mov
sar
mov
and
imul
mov
movsx
and
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
cmp
je
push
call
push
call
add
mov
jmp
mov
mov
push
mov
push
call
add
mov
cmp
je
push
call
add
jmp
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
cmp
jne
xor
jmp
cmp
jne
mov
and
cmp
jle
call
mov
or
jmp
mov
mov
mov
mov
jmp
mov
lea
push
push
mov
push
mov
push
push
lea
push
push
mov
push
call
mov
cmp
je
cmp
je
call
mov
or
jmp
mov
mov
pop
ret
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
xchg
mul
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
cmp
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
mov
mov
mov
mov
mov
and
test
je
mov
mov
and
test
je
mov
mov
or
mov
mov
or
jmp
mov
mov
and
test
je
mov
mov
mov
mov
and
test
je
mov
mov
mov
mov
mov
mov
and
mov
mov
jmp
mov
mov
or
mov
mov
or
jmp
mov
mov
or
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
test
jne
cmp
je
cmp
jne
mov
push
call
add
test
jne
mov
push
call
add
mov
mov
and
test
je
mov
mov
mov
sub
test
jge
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
mov
sub
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
mov
cmp
jle
mov
push
mov
mov
push
mov
push
call
add
mov
jmp
cmp
je
mov
sar
mov
and
imul
mov
add
mov
jmp
mov
mov
movsx
and
test
je
push
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
mov
push
lea
push
mov
push
call
add
mov
mov
cmp
je
mov
mov
or
mov
mov
or
jmp
mov
and
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jne
cmp
jge
push
mov
push
mov
push
mov
push
call
add
jmp
push
mov
push
mov
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
neg
mov
mov
mov
mov
xor
div
mov
mov
xor
div
mov
cmp
jbe
mov
add
mov
mov
mov
add
mov
jmp
mov
add
mov
mov
mov
add
mov
cmp
ja
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
mov
mov
cmp
jb
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
lea
mov
lea
mov
cmp
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
cmp
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
add
mov
mov
mov
sub
mov
mov
mov
cmp
jl
mov
mov
mov
xor
and
mov
mov
mov
add
mov
mov
jmp
mov
push
push
call
add
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
mov
sub
push
push
push
lea
mov
cmp
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
cmp
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
add
mov
mov
mov
sub
mov
mov
mov
cmp
jl
mov
mov
mov
xor
and
mov
mov
mov
add
mov
mov
jmp
mov
push
push
call
add
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
push
mov
sub
mov
mov
mov
mov
sub
mov
cmp
ja
mov
xor
mov
jmp
mov
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
add
mov
jmp
call
mov
mov
mov
push
mov
push
call
add
add
mov
mov
mov
mov
jmp
or
jmp
cmp
je
push
call
add
cmp
jne
cmp
je
push
call
add
xor
jmp
cmp
jne
cmp
je
push
call
add
push
call
cmp
je
cmp
je
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
add
mov
mov
add
cmp
jge
mov
imul
mov
mov
mov
jmp
jmp
mov
mov
cmp
je
push
call
add
cmp
jne
mov
mov
push
push
call
add
jmp
mov
push
call
add
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
xor
mov
pop
ret
call
mov
add
mov
add
mov
add
inc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
je
mov
add
mov
mov
imul
mov
add
cmp
jae
jmp
mov
imul
mov
add
cmp
jae
mov
mov
cmp
jne
mov
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmp
jne
push
call
mov
cmp
je
push
mov
push
call
mov
cmp
jne
xor
jmp
push
mov
push
call
mov
push
mov
push
call
mov
cmp
je
call
mov
cmp
je
cmp
je
mov
push
call
mov
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fwait
mov
shl
sar
rol
mov
and
xlat
movsx
and
mov
add
add
jmp
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fxch
mov
fxam
fstsw
fxch
mov
shl
sar
rol
mov
and
xlat
mov
shl
sar
rol
mov
and
xlat
shl
shl
or
movsx
and
mov
add
add
jmp
call
fxch
fstp
ret
call
jmp
fstp
fstp
fldz
ret
fstp
fstp
fld1
ret
fstp
fld
test
je
mov
ret
mov
fadd
ret
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fld
test
je
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fstp
fld
cmp
jg
mov
or
ret
or
je
fchs
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
fld
fcomp
fnstsw
test
je
fld
fchs
fstp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
jne
fld
fcomp
fnstsw
test
jne
mov
mov
mov
mov
mov
jmp
fld
fcomp
fnstsw
test
je
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
cmp
jne
fld
fcomp
fnstsw
test
jne
mov
mov
mov
jmp
fld
fcomp
fnstsw
test
je
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
cmp
jne
fld
fcomp
fnstsw
test
jne
mov
mov
mov
mov
mov
jmp
fld
fcomp
fnstsw
test
je
mov
mov
mov
jmp
mov
mov
mov
jmp
cmp
jne
cmp
jne
mov
push
mov
push
call
add
mov
fld
fcomp
fnstsw
test
jne
cmp
jne
fld
fchs
fstp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
fld
fcomp
fnstsw
test
je
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
mov
push
call
add
and
test
je
xor
jmp
mov
push
mov
push
call
add
fstp
fld
fcomp
fnstsw
test
je
fld
fdiv
sub
fstp
call
add
fld
fdiv
fcompp
fnstsw
test
je
mov
jmp
mov
jmp
xor
mov
pop
ret
fld
fld
mov
add
jae
xor
test
je
fdivrp
ret
shr
cmp
jne
fdivrp
ret
mov
and
je
cmp
je
fnstcw
mov
or
and
mov
fldcw
mov
and
cmp
je
fmul
fxch
fmul
fxch
fldcw
fdivrp
ret
fmul
fxch
fmul
fxch
fldcw
fdivrp
ret
mov
or
jne
fdivrp
ret
mov
and
jne
fnstcw
mov
or
and
mov
fldcw
mov
and
je
cmp
je
mov
add
jae
jmp
mov
add
jb
fxch
fstp
fld
fmul
fstp
fld
fxch
fldcw
jmp
fldcw
fdivrp
ret
sub
and
jmp
fdiv
add
ret
add
int
fdivr
add
ret
add
int
fdiv
add
ret
fdivrp
add
ret
fdivr
add
ret
fdivp
add
ret
fstp
fld
fstp
fstp
call
fld
fxch
add
ret
add
int
fstp
fstp
call
fld
fxch
add
ret
add
int
fxch
fstp
fld
fstp
fstp
call
fld
add
ret
fstp
fstp
call
add
ret
fstp
fstp
call
fld
add
ret
fstp
fstp
call
add
ret
fstp
fxch
fld
fstp
fstp
call
fxch
fld
fxch
add
ret
add
int
fstp
fxch
fstp
call
fxch
fld
fxch
add
ret
add
int
fxch
fstp
fxch
fld
fstp
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fld
fstp
fstp
call
fxch
fld
fxch
add
ret
add
int
fstp
fxch
fstp
call
fxch
fld
fxch
add
ret
add
int
fxch
fstp
fxch
fld
fstp
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fld
fstp
fstp
call
fxch
fld
fxch
add
ret
add
int
fstp
fxch
fstp
call
fxch
fld
fxch
add
ret
add
int
fxch
fstp
fxch
fld
fstp
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fld
fstp
fstp
call
fxch
fld
fxch
add
ret
add
int
fstp
fxch
fstp
call
fxch
fld
fxch
add
ret
add
int
fxch
fstp
fxch
fld
fstp
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fld
fstp
fstp
call
fxch
fld
fxch
add
ret
add
int
fstp
fxch
fstp
call
fxch
fld
fxch
add
ret
add
int
fxch
fstp
fxch
fld
fstp
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fld
fstp
fstp
call
fxch
fld
fxch
add
ret
add
int
fstp
fxch
fstp
call
fxch
fld
fxch
add
ret
add
int
fxch
fstp
fxch
fld
fstp
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
fstp
fxch
fstp
call
fxch
fld
add
ret
fstp
fxch
fstp
call
fxch
add
ret
sub
fstp
fstp
call
add
ret
sub
fstp
fstp
call
add
ret
push
mov
and
cmp
je
fnstsw
and
je
fld
call
pop
ret
fxch
sub
fstp
fld
call
fld
fxch
add
pop
ret
fdiv
pop
ret
push
mov
and
cmp
je
fnstsw
and
je
fld
call
pop
ret
fxch
sub
fstp
fld
call
fld
fxch
add
pop
ret
fdiv
pop
ret
push
fnstsw
and
je
fild
call
pop
ret
fxch
sub
fstp
fild
call
fld
fxch
add
pop
ret
push
fnstsw
and
je
fild
call
pop
ret
fxch
sub
fstp
fild
call
fld
fxch
add
pop
ret
push
mov
and
cmp
je
fnstsw
and
je
fld
call
pop
ret
fxch
sub
fstp
fld
call
fld
fxch
add
pop
ret
fdivr
pop
ret
push
mov
and
cmp
je
fnstsw
and
je
fld
call
pop
ret
fxch
sub
fstp
fld
call
fld
fxch
add
pop
ret
fdivr
pop
ret
push
fnstsw
and
je
fild
call
pop
ret
fxch
sub
fstp
fild
call
fld
fxch
add
pop
ret
push
fnstsw
and
je
fild
call
pop
ret
fxch
sub
fstp
fild
call
fld
fxch
add
pop
ret
push
sub
fstp
fstp
call
add
pop
ret
push
sub
fstp
fstp
call
add
pop
ret
push
push
push
mov
xor
test
jne
shr
and
cmp
je
mov
and
cmp
je
mov
and
je
cmp
je
mov
add
jne
mov
add
jne
mov
and
add
mov
and
sub
ja
mov
and
add
mov
and
sub
js
fld
mov
mov
and
mov
sub
and
or
sub
mov
and
or
mov
fld
mov
fxch
fprem
fstp
fstp
jmp
test
jne
fld
fstp
fnstcw
mov
or
mov
fldcw
mov
and
mov
and
sub
and
or
add
mov
mov
mov
and
and
or
mov
fld
fabs
fld
fabs
fcom
fnstsw
and
jne
fsub
fxch
fmul
fxch
sub
jne
mov
fstp
fstp
fld
fld
fprem
fstp
fld
fldcw
and
je
fchs
jmp
fld
fld
fprem
test
je
fnstsw
test
je
fnstcw
mov
or
mov
fldcw
fmul
fldcw
mov
fxch
fstp
fld
fxch
and
sub
fnstenv
and
or
fldenv
add
pop
pop
pop
ret
push
sub
fstp
fstp
xor
mov
test
je
call
add
pop
ret
fld
fld
mov
or
je
fxch
fstp
fld
fxch
or
fnstcw
mov
or
mov
fldcw
mov
and
cmp
ja
or
fmul
fstp
fmul
fstp
jmp
fnstcw
mov
or
mov
fldcw
fstp
fmul
fstp
fldcw
call
add
pop
ret
fprem
add
pop
ret
push
push
push
mov
xor
test
jne
shr
and
cmp
je
mov
and
cmp
je
mov
and
je
cmp
je
mov
add
jne
mov
add
jne
mov
and
add
mov
and
sub
ja
mov
and
add
mov
and
sub
js
fld
mov
mov
and
mov
sub
and
or
sub
mov
and
or
mov
fld
mov
fxch
fprem
fstp
fstp
jmp
test
jne
fld
fstp
fnstcw
mov
or
mov
fldcw
mov
and
mov
and
sub
and
or
add
mov
mov
mov
and
and
or
mov
fld
fabs
fld
fabs
fcom
fnstsw
and
jne
fsub
fxch
fmul
fxch
sub
jne
mov
fstp
fstp
fld
fld
fprem1
fstp
fld
fldcw
and
je
fchs
jmp
fld
fld
fprem1
test
je
fnstsw
test
je
fnstcw
mov
or
mov
fldcw
fmul
fldcw
mov
fxch
fstp
fld
fxch
and
sub
fnstenv
and
or
fldenv
add
pop
pop
pop
ret
push
sub
fstp
fstp
mov
mov
test
je
call
add
pop
ret
fld
fld
mov
or
je
fxch
fstp
fld
fxch
or
fnstcw
mov
or
mov
fldcw
mov
and
cmp
ja
or
fmul
fstp
fmul
fstp
jmp
fnstcw
mov
or
mov
fldcw
fstp
fmul
fstp
fldcw
call
add
pop
ret
fprem
add
pop
ret
call
ret
call
ret
fpatan
ret
fptan
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
mov
lea
mov
mov
mov
mov
mov
sub
mov
cmp
ja
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
cmp
je
mov
mov
push
mov
add
push
mov
push
call
add
test
jne
mov
mov
cmp
je
cmp
je
cmp
je
jmp
mov
or
mov
mov
and
or
mov
mov
mov
mov
mov
mov
jmp
mov
and
mov
mov
add
push
mov
add
push
mov
push
mov
push
mov
push
lea
push
call
add
push
mov
mov
push
call
add
mov
mov
cmp
je
cmp
jne
mov
push
call
add
mov
cmp
jne
mov
mov
push
call
add
mov
pop
ret
cwde
enter
enter
enter
enter
enter
enter
enter
enter
int3
int3
int3
push
mov
sub
push
push
push
fstcw
mov
push
call
add
mov
mov
and
mov
not
mov
and
or
mov
mov
push
call
add
mov
fldcw
mov
pop
pop
pop
mov
pop
ret
int3
push
mov
mov
and
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
and
and
test
je
mov
or
mov
mov
and
and
test
je
mov
or
mov
mov
and
and
test
je
mov
or
mov
mov
and
and
test
je
mov
or
mov
mov
and
and
test
je
mov
or
mov
mov
and
and
test
je
mov
or
mov
mov
and
and
mov
cmp
jg
cmp
je
cmp
je
cmp
je
jmp
cmp
je
jmp
mov
mov
jmp
mov
or
mov
jmp
mov
or
mov
jmp
mov
or
mov
mov
and
and
mov
cmp
je
cmp
je
cmp
je
jmp
mov
mov
jmp
mov
or
mov
jmp
mov
or
mov
mov
and
and
test
je
mov
or
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
and
test
je
mov
or
mov
mov
and
test
je
mov
or
mov
mov
and
test
je
mov
or
mov
mov
and
test
je
mov
or
mov
mov
and
test
je
mov
or
mov
mov
and
test
je
mov
or
mov
mov
and
mov
cmp
ja
cmp
je
cmp
je
cmp
je
jmp
cmp
je
jmp
mov
mov
jmp
mov
or
mov
jmp
mov
or
mov
jmp
mov
or
mov
mov
and
mov
cmp
je
cmp
je
cmp
je
jmp
mov
or
mov
jmp
mov
or
mov
jmp
mov
mov
mov
and
test
je
mov
or
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
add
cmp
ja
mov
mov
xor
mov
and
jmp
mov
sar
and
and
mov
xor
mov
and
test
je
mov
sar
and
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
push
push
push
lea
push
mov
push
lea
push
push
call
add
test
jne
xor
jmp
mov
and
and
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
cmp
jne
cmp
jl
cmp
jg
mov
add
mov
mov
jmp
push
call
cmp
je
push
call
push
call
add
mov
jmp
mov
mov
push
call
add
mov
cmp
je
push
call
add
jmp
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
cmp
jne
cmp
jl
cmp
jg
mov
add
mov
mov
jmp
cmp
jge
cmp
jle
push
mov
push
call
add
mov
jmp
mov
mov
xor
mov
and
mov
cmp
jne
mov
jmp
mov
sar
and
and
mov
xor
mov
and
test
je
mov
sar
and
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
push
push
push
lea
push
mov
push
lea
push
push
mov
push
call
add
mov
cmp
jne
mov
jmp
cmp
jne
mov
and
jmp
mov
and
mov
and
shl
or
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cdq
and
add
sar
mov
mov
and
jns
dec
or
inc
mov
sub
mov
or
mov
shl
not
mov
mov
mov
mov
and
test
je
xor
jmp
mov
add
mov
jmp
mov
add
mov
cmp
jge
mov
mov
cmp
je
xor
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cdq
and
add
sar
mov
mov
and
jns
dec
or
inc
mov
sub
mov
mov
mov
shl
mov
mov
mov
lea
push
mov
push
mov
mov
mov
push
call
add
mov
mov
sub
mov
jmp
mov
sub
mov
cmp
jl
cmp
je
mov
mov
lea
push
push
mov
mov
mov
push
call
add
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
sub
mov
mov
add
mov
mov
cdq
and
add
sar
mov
mov
and
jns
dec
or
inc
mov
sub
mov
mov
mov
shl
mov
mov
mov
mov
and
test
je
mov
add
push
mov
push
call
add
test
jne
mov
push
mov
push
call
add
mov
or
mov
shl
mov
mov
mov
and
mov
mov
mov
mov
add
mov
jmp
mov
add
mov
cmp
jge
mov
mov
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
jmp
mov
add
mov
cmp
jge
mov
mov
mov
mov
mov
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
jmp
mov
add
mov
cmp
jge
mov
mov
mov
jmp
mov
pop
ret
int3
push
mov
push
mov
jmp
mov
add
mov
cmp
jge
mov
mov
cmp
je
xor
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
cdq
and
add
sar
mov
mov
and
jns
dec
or
inc
mov
or
mov
shl
not
mov
mov
mov
jmp
mov
add
mov
cmp
jge
mov
mov
mov
and
mov
mov
mov
mov
mov
shr
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
sub
mov
shl
mov
jmp
mov
jmp
mov
sub
mov
cmp
jl
mov
cmp
jl
mov
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
jmp
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
and
sub
mov
mov
xor
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
shl
mov
cmp
jne
mov
lea
push
call
add
test
je
mov
jmp
lea
push
call
add
mov
jmp
lea
push
lea
push
call
add
mov
mov
push
lea
push
call
add
test
je
mov
add
mov
mov
mov
mov
sub
cmp
jge
lea
push
call
add
mov
mov
jmp
mov
mov
cmp
jg
mov
mov
sub
mov
lea
push
lea
push
call
add
mov
push
lea
push
call
add
mov
mov
push
lea
push
call
add
mov
mov
add
push
lea
push
call
add
mov
mov
jmp
mov
mov
cmp
jl
lea
push
call
add
mov
or
mov
mov
mov
push
lea
push
call
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
and
mov
mov
mov
push
lea
push
call
add
mov
mov
mov
add
mov
sub
mov
mov
mov
shl
mov
or
mov
neg
sbb
and
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
mov
push
lea
push
lea
push
call
add
mov
push
lea
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
mov
push
lea
push
lea
push
call
add
mov
push
lea
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jle
mov
movsx
test
je
mov
movsx
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
cmp
jl
mov
movsx
cmp
jl
mov
sub
mov
mov
movsx
cmp
jne
mov
mov
mov
sub
mov
jmp
mov
mov
add
mov
mov
mov
movsx
cmp
jne
mov
mov
add
mov
mov
jmp
mov
add
push
call
add
add
push
mov
add
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
lea
push
call
add
lea
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
call
add
mov
mov
movsx
mov
mov
movsx
mov
mov
lea
push
mov
push
call
add
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
xor
mov
and
sar
mov
mov
xor
mov
and
mov
mov
mov
and
mov
mov
mov
mov
mov
and
mov
cmp
je
cmp
je
jmp
mov
jmp
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
mov
jmp
movsx
add
mov
mov
jmp
mov
sub
mov
movsx
add
mov
mov
shl
mov
or
mov
shr
or
mov
mov
mov
shl
mov
mov
mov
mov
and
test
jne
mov
mov
shl
mov
mov
and
neg
sbb
neg
or
mov
mov
mov
mov
shl
mov
mov
mov
sub
mov
jmp
mov
and
mov
and
or
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
fiadd
mov
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
fild
sbb
inc
add
inc
add
inc
add
inc
add
fiadd
hlt
fiadd
in
fiadd
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
fild
push
fild
pop
fild
jo
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
fadd
xor
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
inc
add
inc
add
inc
add
inc
add
fadd
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
inc
add
fadd
clc
fadd
or
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
add
pop
ret
int3
push
mov
push
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
and
mov
mov
xor
mov
and
test
jne
cmp
je
mov
xor
mov
and
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
mov
push
call
add
mov
mov
cmp
jne
push
call
add
xor
jmp
cmp
jne
call
call
push
call
add
xor
jmp
mov
jmp
mov
add
mov
cmp
jae
mov
imul
mov
cmp
jne
mov
jmp
mov
add
mov
cmp
jae
mov
mov
jmp
mov
jmp
mov
add
mov
cmp
jae
mov
imul
mov
lea
mov
jmp
mov
add
mov
mov
xor
mov
test
je
mov
xor
mov
test
je
mov
xor
mov
mov
jmp
mov
add
mov
mov
xor
mov
cmp
ja
mov
mov
mov
or
mov
mov
jmp
jmp
jmp
mov
mov
mov
mov
push
call
add
mov
mov
jmp
mov
add
mov
cmp
jae
mov
imul
mov
mov
mov
mov
jmp
call
push
call
add
xor
jmp
jmp
lea
push
mov
push
call
cmp
jne
mov
jmp
mov
add
mov
cmp
jae
mov
mov
jmp
mov
mov
mov
cmp
jbe
lea
mov
jmp
mov
add
mov
mov
xor
mov
test
je
mov
xor
mov
test
je
mov
xor
mov
mov
jmp
mov
add
mov
mov
xor
mov
cmp
ja
mov
mov
or
mov
mov
jmp
jmp
mov
jmp
mov
add
mov
cmp
jae
mov
mov
or
mov
mov
jmp
mov
push
call
add
mov
mov
jmp
mov
mov
jmp
mov
add
mov
cmp
jae
mov
mov
jmp
call
push
call
add
xor
jmp
cmp
je
call
call
push
call
add
xor
jmp
push
call
add
or
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
sub
mov
cmp
ja
mov
xor
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xor
mov
pop
ret
scas
loope
add
loope
add
loope
add
loope
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
jmp
mov
add
mov
cmp
jge
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
add
mov
cmp
jge
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
mov
push
call
cmp
jne
mov
jmp
mov
add
mov
cmp
jae
mov
mov
mov
jmp
mov
lea
mov
jmp
mov
add
mov
mov
xor
mov
test
je
mov
xor
mov
mov
jmp
mov
add
mov
mov
xor
mov
cmp
ja
mov
mov
jmp
jmp
push
mov
push
mov
push
lea
push
push
lea
push
push
call
add
push
mov
push
push
lea
push
push
lea
push
push
mov
push
call
add
push
mov
push
push
lea
push
push
lea
push
push
mov
push
call
add
mov
jmp
mov
add
mov
cmp
jae
mov
xor
mov
and
test
je
mov
mov
or
mov
mov
mov
mov
mov
mov
jmp
mov
xor
mov
and
test
je
mov
mov
or
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
jmp
mov
jmp
mov
add
mov
cmp
jae
cmp
jb
cmp
ja
mov
mov
or
mov
mov
mov
add
mov
mov
jmp
cmp
jb
cmp
ja
mov
mov
or
mov
mov
mov
sub
mov
mov
jmp
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jne
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jmp
inc
add
out
add
out
add
out
add
out
add
out
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
inc
add
out
add
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
out
add
call
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
call
inc
add
add
add
add
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
call
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
call
mov
cmp
jne
xor
jmp
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
imul
mov
add
mov
mov
mov
mov
cmp
jae
mov
mov
sub
mov
cmp
jae
mov
jmp
mov
add
mov
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
sub
mov
mov
shr
mov
mov
mov
shr
mov
mov
and
test
jne
mov
and
test
jne
mov
and
test
je
mov
jmp
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
shr
mov
mov
imul
mov
lea
mov
mov
sub
mov
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
test
jne
mov
sar
sub
mov
cmp
jbe
mov
mov
mov
mov
cmp
jne
cmp
jae
mov
mov
shr
not
mov
mov
mov
and
mov
mov
mov
mov
add
mov
sub
mov
add
mov
mov
add
movsx
test
jne
mov
mov
shr
not
mov
mov
and
mov
mov
jmp
mov
sub
mov
shr
not
mov
mov
mov
and
mov
mov
mov
mov
add
mov
sub
mov
add
mov
mov
add
movsx
test
jne
mov
sub
mov
shr
not
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
sar
sub
mov
cmp
jbe
mov
mov
and
test
jne
mov
sub
mov
mov
sar
sub
mov
cmp
jbe
mov
mov
add
mov
mov
sar
sub
mov
cmp
jbe
mov
mov
cmp
je
mov
mov
mov
cmp
jne
cmp
jae
mov
mov
shr
not
mov
mov
mov
and
mov
mov
mov
mov
add
mov
sub
mov
add
mov
mov
add
movsx
test
jne
mov
mov
shr
not
mov
mov
and
mov
mov
jmp
mov
sub
mov
shr
not
mov
mov
mov
and
mov
mov
mov
mov
add
mov
sub
mov
add
mov
mov
add
movsx
test
jne
mov
sub
mov
shr
not
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
test
jne
mov
cmp
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
jae
mov
add
movsx
mov
add
mov
add
mov
add
mov
test
jne
mov
mov
shr
mov
mov
or
mov
mov
mov
mov
shr
mov
mov
mov
or
mov
mov
mov
jmp
mov
add
movsx
mov
add
mov
add
mov
add
mov
test
jne
mov
sub
mov
shr
mov
mov
or
mov
mov
mov
sub
mov
shr
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
cmp
jne
cmp
je
mov
shl
mov
mov
add
mov
push
push
mov
push
call
mov
mov
shr
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
movsx
test
jne
mov
mov
and
mov
mov
mov
cmp
jne
push
push
mov
mov
push
call
mov
mov
push
push
mov
push
call
mov
imul
mov
add
mov
add
sub
push
mov
add
push
mov
push
call
add
mov
sub
mov
mov
cmp
jbe
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
push
mov
imul
mov
add
mov
mov
add
and
mov
mov
sar
sub
mov
cmp
jge
or
mov
shr
mov
mov
jmp
mov
mov
sub
or
shr
mov
mov
mov
mov
cmp
jae
mov
mov
and
mov
mov
and
or
test
je
jmp
mov
add
mov
jmp
mov
cmp
jne
mov
mov
mov
cmp
jae
mov
mov
and
mov
mov
and
or
test
je
jmp
mov
add
mov
jmp
mov
cmp
jne
mov
cmp
jae
mov
cmp
je
jmp
mov
add
mov
jmp
mov
cmp
jne
mov
mov
mov
cmp
jae
mov
cmp
je
jmp
mov
add
mov
jmp
mov
cmp
jne
call
mov
cmp
jne
xor
jmp
mov
push
call
add
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
and
mov
mov
mov
and
or
test
jne
mov
mov
mov
mov
and
mov
mov
mov
and
or
test
jne
mov
add
mov
jmp
mov
imul
mov
lea
mov
mov
mov
mov
mov
and
mov
cmp
jne
mov
mov
mov
mov
and
mov
cmp
jl
mov
shl
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
sub
mov
mov
sar
sub
mov
cmp
jle
mov
mov
cmp
je
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
shr
not
mov
mov
mov
and
mov
mov
mov
mov
add
mov
sub
mov
add
mov
mov
add
movsx
test
jne
mov
mov
shr
not
mov
mov
and
mov
mov
jmp
mov
sub
mov
shr
not
mov
mov
mov
and
mov
mov
mov
mov
add
mov
sub
mov
add
mov
mov
add
movsx
test
jne
mov
sub
mov
shr
not
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
jge
mov
add
movsx
mov
add
mov
add
mov
add
mov
test
jne
mov
mov
shr
mov
mov
or
mov
mov
mov
mov
shr
mov
mov
mov
or
mov
mov
mov
jmp
mov
add
movsx
mov
add
mov
add
mov
add
mov
test
jne
mov
sub
mov
shr
mov
mov
or
mov
mov
mov
sub
mov
shr
mov
mov
mov
or
mov
mov
mov
cmp
je
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
mov
mov
mov
add
mov
mov
test
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
cmp
jne
mov
add
imul
push
mov
push
push
mov
push
call
mov
cmp
jne
xor
jmp
mov
mov
mov
add
mov
mov
imul
mov
add
mov
push
push
mov
push
call
mov
mov
mov
cmp
jne
xor
jmp
push
push
push
push
call
mov
mov
mov
cmp
jne
mov
mov
push
push
mov
push
call
xor
jmp
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
cmp
jl
mov
shl
mov
mov
add
mov
jmp
mov
imul
mov
lea
mov
mov
jmp
mov
add
mov
cmp
jge
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
jmp
mov
shl
mov
mov
add
mov
push
push
push
mov
push
call
test
jne
or
jmp
mov
add
mov
mov
mov
jmp
mov
add
mov
mov
cmp
ja
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
add
mov
mov
mov
jmp
mov
add
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movsx
mov
mov
add
mov
mov
test
jne
mov
mov
or
mov
mov
mov
mov
shr
not
mov
mov
and
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
imul
push
mov
push
call
test
je
or
jmp
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
push
mov
push
call
test
je
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
mov
cmp
jge
mov
mov
mov
mov
jmp
mov
add
mov
cmp
jge
mov
mov
jmp
cmp
jl
push
mov
push
call
test
je
mov
jmp
mov
mov
mov
jmp
mov
add
mov
cmp
jge
mov
add
mov
mov
add
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
mov
mov
mov
mov
mov
mov
and
test
je
mov
sub
mov
cmp
jle
mov
jmp
mov
add
mov
jmp
mov
sar
sub
mov
cmp
jle
mov
mov
mov
add
mov
mov
cmp
jl
mov
and
test
jne
cmp
jle
mov
jmp
mov
add
mov
cmp
je
mov
jmp
mov
add
mov
mov
cmp
jb
mov
cmp
je
mov
jmp
mov
add
mov
jmp
mov
mov
cmp
je
mov
jmp
mov
mov
mov
jmp
mov
add
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
cmp
je
mov
cmp
jb
mov
add
cmp
jb
mov
jmp
mov
and
mov
mov
add
mov
mov
add
mov
mov
cmp
je
mov
cmp
jne
jmp
mov
mov
and
mov
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
sar
sub
mov
cmp
jle
mov
mov
cmp
je
mov
jmp
mov
mov
cmp
je
mov
jmp
mov
mov
mov
add
mov
jmp
cmp
je
cmp
jge
mov
mov
shr
mov
or
mov
mov
mov
shr
mov
or
mov
jmp
mov
sub
mov
shr
mov
or
mov
mov
sub
mov
shr
mov
or
mov
mov
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
mov
cmp
je
mov
jmp
mov
add
mov
jmp
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
jmp
mov
add
mov
mov
add
mov
mov
shl
mov
jmp
mov
mov
cmp
jne
mov
mov
cmp
je
mov
jmp
mov
add
mov
jmp
xor
mov
pop
ret
int3
int3
int3
push
mov
push
mov
mov
cmp
je
mov
push
call
add
test
jne
xor
jmp
mov
mov
pop
ret
int3
int3
int3
push
mov
push
mov
cmp
ja
push
call
add
mov
push
call
add
mov
push
call
add
cmp
je
mov
jmp
cmp
jne
mov
mov
add
and
mov
mov
push
push
mov
push
call
mov
pop
ret
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
cmp
jne
jmp
push
call
add
mov
push
call
add
mov
cmp
je
mov
push
mov
push
call
add
push
call
add
jmp
push
call
add
mov
push
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
call
add
call
test
jge
mov
push
call
add
push
push
mov
push
call
test
jne
call
cmp
jne
call
mov
call
mov
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
lea
mov
lea
mov
cmp
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
cmp
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
call
add
mov
mov
mov
sub
mov
mov
mov
cmp
jl
mov
mov
mov
xor
and
mov
mov
mov
add
mov
mov
jmp
mov
push
push
call
add
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
mov
cmp
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
and
test
je
mov
mov
jmp
mov
push
call
add
mov
push
call
add
mov
mov
push
call
add
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
cmp
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
and
test
je
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
call
add
test
jge
mov
jmp
mov
cmp
je
push
mov
mov
push
call
add
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
push
mov
cmp
jae
mov
sar
mov
and
imul
mov
movsx
and
test
jne
call
mov
or
jmp
mov
push
call
add
mov
sar
mov
and
imul
mov
movsx
and
test
je
mov
push
call
add
push
call
test
jne
call
mov
jmp
mov
cmp
jne
jmp
call
mov
mov
call
mov
mov
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
cmp
jae
mov
sar
mov
and
imul
mov
movsx
and
test
jne
call
mov
call
mov
or
jmp
mov
push
call
add
mov
push
mov
push
mov
push
call
add
mov
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
cmp
jne
xor
jmp
mov
sar
mov
and
imul
mov
movsx
and
test
je
push
push
mov
push
call
add
mov
sar
mov
and
imul
mov
movsx
and
test
je
mov
mov
mov
mov
sub
cmp
jae
lea
mov
mov
lea
sub
cmp
jge
mov
sub
cmp
jae
mov
mov
mov
mov
add
mov
movsx
cmp
jne
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
jmp
push
lea
push
mov
lea
sub
push
lea
push
mov
sar
mov
and
imul
mov
mov
push
call
test
je
mov
add
mov
mov
lea
sub
cmp
jge
jmp
jmp
call
mov
jmp
jmp
jmp
push
lea
push
mov
push
mov
push
mov
sar
mov
and
imul
mov
mov
push
call
test
je
mov
mov
mov
jmp
call
mov
cmp
jne
cmp
je
cmp
jne
call
mov
call
mov
mov
jmp
mov
push
call
add
or
jmp
mov
sar
mov
and
imul
mov
movsx
and
test
je
mov
movsx
cmp
jne
xor
jmp
call
mov
call
mov
or
jmp
mov
sub
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
mov
mov
mov
jmp
mov
add
mov
cmp
jae
mov
mov
cmp
jne
call
mov
mov
mov
jmp
jmp
cmp
jb
cmp
ja
call
mov
jmp
cmp
jb
cmp
ja
call
mov
jmp
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
add
pop
ret
int3
int3
int3
push
mov
call
add
pop
ret
int3
int3
int3
push
mov
push
mov
cmp
jae
mov
sar
mov
and
imul
mov
movsx
and
test
jne
call
mov
call
mov
or
jmp
mov
push
call
add
mov
push
mov
push
mov
push
call
add
mov
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
call
add
mov
cmp
jne
call
mov
or
jmp
mov
push
push
mov
push
mov
push
call
mov
cmp
jne
call
mov
jmp
mov
cmp
je
mov
push
call
add
or
jmp
mov
sar
mov
and
imul
mov
mov
and
mov
sar
mov
and
imul
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
cmp
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
add
mov
mov
mov
push
push
push
push
call
add
mov
mov
mov
cmp
je
mov
mov
or
mov
mov
mov
mov
jmp
mov
mov
or
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
and
and
mov
shl
or
mov
fld
mov
pop
ret
int3
int3
push
mov
cmp
jne
cmp
jne
mov
jmp
cmp
jne
cmp
jne
mov
jmp
mov
and
and
cmp
jne
mov
jmp
mov
and
and
cmp
jne
mov
shl
test
jne
cmp
je
mov
jmp
xor
pop
ret
int3
int3
int3
int3
push
mov
sub
fld
fcomp
fnstsw
test
je
mov
mov
mov
jmp
mov
and
and
test
jne
mov
shl
test
jne
cmp
je
mov
fld
fcomp
fnstsw
test
je
mov
jmp
mov
mov
mov
mov
and
and
test
jne
mov
shl
mov
mov
and
test
je
mov
or
mov
mov
shl
mov
mov
sub
mov
jmp
mov
and
mov
cmp
je
mov
or
mov
push
mov
push
mov
push
call
add
fstp
jmp
push
mov
push
mov
push
call
add
fstp
mov
and
and
sar
movsx
sub
mov
mov
mov
mov
fld
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
fld
frndint
fstp
fld
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
and
and
cmp
jne
mov
push
mov
push
call
add
mov
cmp
je
cmp
je
cmp
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
and
mov
mov
and
and
test
jne
mov
shl
test
jne
cmp
je
mov
neg
sbb
and
add
jmp
fld
fcomp
fnstsw
test
je
mov
neg
sbb
and
add
jmp
mov
neg
sbb
and
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
and
test
je
mov
mov
mov
or
mov
mov
mov
and
test
je
mov
mov
mov
or
mov
mov
mov
and
test
je
mov
mov
mov
or
mov
mov
mov
and
test
je
mov
mov
mov
or
mov
mov
mov
and
test
je
mov
mov
mov
or
mov
mov
mov
mov
and
neg
sbb
inc
and
shl
mov
mov
and
or
mov
mov
mov
mov
and
neg
sbb
inc
and
shl
mov
mov
and
or
mov
mov
mov
mov
and
neg
sbb
inc
and
shl
mov
mov
and
or
mov
mov
mov
mov
and
neg
sbb
inc
and
shl
mov
mov
and
or
mov
mov
mov
mov
and
neg
sbb
inc
and
mov
mov
and
or
mov
mov
call
mov
mov
and
test
je
mov
mov
or
mov
mov
mov
and
test
je
mov
mov
or
mov
mov
mov
and
test
je
mov
mov
or
mov
mov
mov
and
test
je
mov
mov
or
mov
mov
mov
and
test
je
mov
mov
or
mov
mov
mov
mov
and
mov
cmp
ja
cmp
je
cmp
je
cmp
je
jmp
cmp
je
jmp
mov
mov
or
mov
mov
jmp
mov
mov
and
or
mov
mov
jmp
mov
mov
and
or
mov
mov
jmp
mov
mov
and
mov
mov
mov
mov
and
mov
cmp
je
cmp
je
cmp
je
jmp
mov
mov
and
mov
mov
jmp
mov
mov
and
or
mov
mov
jmp
mov
mov
and
or
mov
mov
mov
and
shl
mov
mov
and
or
mov
mov
mov
mov
or
mov
mov
mov
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
push
push
mov
push
call
mov
mov
shr
and
test
je
mov
mov
and
mov
mov
mov
mov
shr
and
test
je
mov
mov
and
mov
mov
mov
mov
shr
and
test
je
mov
mov
and
mov
mov
mov
mov
shr
and
test
je
mov
mov
and
mov
mov
mov
mov
and
test
je
mov
mov
and
mov
mov
mov
mov
and
mov
cmp
ja
mov
jmp
mov
mov
and
or
mov
mov
jmp
mov
mov
and
or
mov
mov
jmp
mov
mov
and
or
mov
mov
jmp
mov
mov
and
mov
mov
mov
mov
shr
and
mov
cmp
je
cmp
je
cmp
je
jmp
mov
mov
and
or
mov
mov
jmp
mov
mov
and
or
mov
mov
jmp
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
dec
adc
cmp
dec
add
adc
push
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
and
mov
mov
and
test
je
mov
and
test
je
push
call
add
mov
and
mov
jmp
mov
and
test
je
mov
and
test
je
push
call
add
mov
and
mov
jmp
mov
and
test
je
mov
and
test
je
push
call
add
mov
and
mov
cmp
ja
cmp
je
cmp
je
cmp
je
jmp
cmp
je
jmp
mov
fld
fcomp
fnstsw
test
jne
mov
mov
mov
mov
jmp
fld
fchs
fstp
mov
mov
mov
mov
mov
jmp
mov
fld
fcomp
fnstsw
test
jne
mov
mov
mov
mov
jmp
fld
fchs
fstp
mov
mov
mov
mov
mov
jmp
mov
fld
fcomp
fnstsw
test
jne
mov
mov
mov
mov
jmp
fld
fchs
fstp
mov
mov
mov
mov
mov
jmp
mov
fld
fcomp
fnstsw
test
jne
mov
mov
mov
mov
jmp
fld
fchs
fstp
mov
mov
mov
mov
mov
mov
and
mov
jmp
mov
and
test
je
mov
and
test
je
mov
mov
and
test
je
mov
mov
fld
fcomp
fnstsw
test
jne
lea
push
mov
mov
push
mov
push
call
add
fstp
mov
sub
mov
cmp
jge
fld
fmul
fstp
mov
jmp
fld
fcomp
fnstsw
test
je
mov
jmp
mov
mov
mov
mov
and
mov
mov
or
mov
jmp
mov
add
mov
cmp
jge
mov
and
test
je
cmp
jne
mov
mov
shr
mov
mov
and
test
je
mov
or
mov
mov
shr
mov
jmp
cmp
je
fld
fchs
fstp
mov
mov
mov
mov
mov
jmp
mov
cmp
je
push
call
add
mov
and
mov
mov
and
test
je
mov
and
test
je
push
call
add
mov
and
mov
xor
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
cmp
je
cmp
jle
cmp
jle
jmp
call
mov
jmp
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
fstsw
movsx
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
fnstsw
fnclex
movsx
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
fstcw
mov
and
movsx
mov
not
and
or
mov
fldcw
movsx
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
and
test
je
fld
fistp
fwait
mov
and
test
je
fstsw
fld
fstp
fstsw
mov
and
test
je
fld
fstp
fwait
mov
and
test
je
fldz
fld1
fdivp
fstp
fwait
mov
and
test
je
fldpi
fstp
fwait
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
add
push
push
push
mov
cmp
jne
lea
push
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
jmp
xor
jmp
cmp
jne
cmp
jne
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
mov
push
mov
push
mov
neg
sbb
and
add
push
mov
push
call
mov
cmp
jne
xor
jmp
mov
mov
shl
add
and
call
mov
mov
mov
mov
mov
shl
push
push
mov
push
call
add
mov
jmp
mov
ret
mov
mov
mov
cmp
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
push
mov
push
call
mov
cmp
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
add
push
push
push
mov
cmp
jne
push
push
push
push
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
jmp
xor
jmp
cmp
jle
mov
push
mov
push
call
add
mov
cmp
jne
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
mov
push
mov
push
mov
neg
sbb
and
add
push
mov
push
call
mov
cmp
jne
xor
jmp
mov
mov
shl
add
and
call
mov
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
cmp
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
push
mov
push
call
test
jne
xor
jmp
push
push
mov
push
mov
push
mov
push
mov
push
call
mov
cmp
jne
xor
jmp
mov
and
test
je
cmp
je
mov
cmp
jle
xor
jmp
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
xor
jmp
jmp
mov
mov
mov
mov
shl
add
and
call
mov
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
cmp
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
test
jne
xor
jmp
cmp
jne
push
push
push
push
mov
push
mov
push
push
mov
push
call
mov
cmp
jne
xor
jmp
jmp
push
push
mov
push
mov
push
mov
push
mov
push
push
mov
push
call
mov
cmp
jne
xor
jmp
mov
jmp
xor
lea
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
test
je
mov
movsx
test
je
mov
add
mov
jmp
mov
movsx
test
jne
mov
sub
jmp
mov
mov
pop
ret
push
mov
sub
mov
mov
add
mov
mov
cmp
jb
mov
cmp
jae
mov
add
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
push
mov
mov
push
mov
mov
push
call
add
mov
cmp
je
mov
add
push
push
mov
mov
push
call
add
mov
cmp
je
mov
mov
add
mov
mov
mov
add
push
mov
mov
push
mov
mov
push
call
add
mov
cmp
je
mov
mov
add
mov
mov
mov
add
push
mov
mov
push
mov
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
mov
mov
and
neg
sbb
neg
mov
mov
mov
and
neg
sbb
neg
mov
mov
mov
shl
mov
mov
mov
mov
shl
or
mov
mov
mov
mov
shl
or
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
and
neg
sbb
and
mov
mov
mov
and
neg
sbb
and
mov
mov
mov
shr
mov
mov
mov
mov
shr
or
mov
mov
mov
mov
shr
or
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
jmp
mov
sub
mov
mov
add
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
mov
push
call
add
lea
push
mov
push
call
add
mov
push
call
add
mov
movsx
mov
mov
mov
lea
push
mov
push
call
add
jmp
mov
cmp
jne
mov
mov
shr
mov
mov
mov
mov
shl
mov
mov
shr
or
mov
mov
mov
mov
shl
mov
mov
mov
sub
mov
jmp
mov
mov
and
test
jne
mov
push
call
add
mov
sub
mov
jmp
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
mov
mov
movsx
cmp
je
mov
movsx
cmp
je
mov
movsx
cmp
je
mov
movsx
cmp
jne
jmp
cmp
je
mov
mov
mov
mov
add
mov
mov
mov
cmp
ja
mov
jmp
movsx
cmp
jl
movsx
cmp
jg
mov
mov
sub
mov
jmp
movsx
movsx
cmp
jne
mov
jmp
mov
mov
cmp
je
cmp
je
cmp
je
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
jmp
mov
movsx
cmp
jl
movsx
cmp
jg
mov
mov
sub
mov
jmp
movsx
movsx
cmp
jne
mov
jmp
movsx
mov
mov
sub
mov
cmp
ja
mov
xor
mov
jmp
mov
jmp
mov
jmp
mov
sub
mov
mov
jmp
mov
mov
sub
mov
jmp
movsx
cmp
jl
movsx
cmp
jg
mov
mov
sub
mov
jmp
movsx
movsx
cmp
jne
mov
jmp
mov
mov
cmp
je
jmp
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
cmp
jle
push
mov
and
push
call
add
mov
jmp
mov
and
mov
xor
mov
and
mov
cmp
je
cmp
jae
mov
add
mov
movsx
sub
mov
mov
mov
add
mov
jmp
mov
add
mov
jmp
movsx
movsx
cmp
jne
mov
jmp
movsx
mov
mov
sub
mov
cmp
ja
mov
xor
mov
jmp
mov
jmp
mov
sub
mov
mov
jmp
mov
mov
sub
mov
jmp
mov
mov
cmp
jne
jmp
mov
mov
mov
mov
add
mov
movsx
cmp
jne
mov
sub
mov
jmp
jmp
mov
mov
mov
mov
add
mov
cmp
jle
push
mov
and
push
call
add
mov
jmp
mov
and
mov
xor
mov
and
mov
cmp
je
cmp
jae
mov
add
mov
movsx
sub
mov
mov
mov
add
mov
mov
sub
mov
jmp
movsx
mov
mov
sub
mov
cmp
ja
mov
xor
mov
jmp
mov
jmp
mov
sub
mov
mov
jmp
mov
mov
sub
mov
jmp
mov
cmp
jle
push
mov
and
push
call
add
mov
jmp
mov
and
mov
xor
mov
and
mov
cmp
je
mov
mov
sub
mov
jmp
mov
mov
mov
jmp
mov
sub
mov
movsx
cmp
jl
movsx
cmp
jg
mov
mov
sub
mov
jmp
mov
mov
cmp
je
cmp
je
cmp
je
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
add
mov
movsx
cmp
jne
jmp
movsx
cmp
jl
movsx
cmp
jg
mov
mov
sub
mov
jmp
mov
mov
sub
mov
jmp
movsx
cmp
jl
movsx
cmp
jg
mov
mov
sub
mov
jmp
mov
mov
cmp
je
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
add
mov
cmp
jle
push
mov
and
push
call
add
mov
jmp
mov
and
mov
xor
mov
and
mov
cmp
je
mov
imul
movsx
lea
mov
cmp
jle
mov
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
add
mov
cmp
jle
push
mov
and
push
call
add
mov
jmp
mov
and
mov
xor
mov
and
mov
cmp
je
jmp
mov
mov
sub
mov
jmp
cmp
je
mov
sub
mov
mov
mov
cmp
je
cmp
je
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
sub
mov
jmp
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
cmp
jbe
movsx
cmp
jl
mov
add
mov
mov
mov
sub
mov
mov
add
mov
cmp
jbe
mov
sub
mov
jmp
mov
sub
mov
mov
movsx
test
jne
mov
sub
mov
mov
add
mov
jmp
lea
push
mov
push
lea
push
call
add
cmp
jge
mov
neg
mov
mov
add
mov
cmp
jne
mov
add
mov
cmp
jne
mov
sub
mov
cmp
jle
mov
jmp
cmp
jge
mov
jmp
mov
push
mov
push
lea
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
and
mov
mov
mov
cmp
jne
mov
mov
mov
and
mov
mov
mov
mov
or
mov
jmp
cmp
je
mov
mov
mov
mov
mov
or
mov
jmp
cmp
je
mov
mov
mov
and
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
and
or
mov
mov
mov
mov
pop
ret
lods
push
dec
add
dec
add
and
imul
add
and
sub
dec
add
and
add
and
add
and
dec
add
pop
dec
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
push
and
outs
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
mov
mov
and
mov
mov
and
test
je
mov
mov
jmp
mov
mov
mov
and
test
jne
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
and
cmp
jne
mov
mov
cmp
jne
cmp
je
mov
and
test
jne
push
mov
add
push
call
add
mov
mov
mov
jmp
mov
and
test
je
cmp
jne
cmp
jne
push
mov
add
push
call
add
mov
mov
mov
jmp
cmp
jne
cmp
jne
push
mov
add
push
call
add
mov
mov
mov
jmp
push
mov
add
push
call
add
mov
mov
mov
jmp
mov
and
sar
mov
mov
and
and
mov
mov
shr
mov
mov
and
mov
and
imul
mov
and
mov
and
imul
add
mov
and
mov
and
imul
add
sub
mov
mov
sar
mov
mov
mov
mov
mov
mov
mov
mov
push
movsx
neg
push
lea
push
call
add
mov
and
cmp
jl
mov
add
mov
lea
push
lea
push
call
add
mov
mov
mov
mov
and
test
je
movsx
mov
add
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jle
mov
mov
and
sub
mov
mov
mov
jmp
mov
add
mov
cmp
jge
lea
push
call
add
jmp
cmp
jge
mov
neg
and
mov
jmp
mov
sub
mov
cmp
jle
lea
push
call
add
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
mov
cmp
jle
mov
mov
mov
mov
mov
mov
lea
push
call
add
lea
push
call
add
lea
push
lea
push
call
add
lea
push
call
add
mov
and
add
mov
mov
mov
add
mov
mov
jmp
mov
sub
mov
mov
mov
mov
mov
sub
mov
movsx
cmp
jl
jmp
mov
sub
mov
mov
add
cmp
jb
mov
movsx
cmp
jne
mov
mov
jmp
mov
add
cmp
jae
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
jmp
jmp
mov
sub
mov
mov
add
cmp
jb
mov
movsx
cmp
jne
jmp
mov
add
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
mov
sub
add
mov
mov
mov
movsx
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
cmp
jae
mov
sar
mov
and
imul
mov
movsx
and
test
jne
call
mov
call
mov
or
jmp
mov
push
call
add
mov
push
call
add
mov
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
call
add
cmp
je
cmp
je
cmp
jne
push
call
add
mov
push
call
add
cmp
je
mov
push
call
add
push
call
test
je
mov
jmp
call
mov
mov
push
call
add
mov
sar
mov
and
imul
mov
mov
cmp
je
mov
push
call
add
or
jmp
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
cmp
jne
push
push
push
push
push
call
add
cmp
jne
int3
xor
test
jne
mov
mov
and
test
je
mov
mov
and
test
je
push
mov
mov
push
call
add
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
cmp
jae
mov
sar
mov
and
imul
mov
movsx
and
test
je
mov
sar
mov
and
imul
mov
cmp
je
cmp
jne
mov
mov
cmp
je
cmp
je
cmp
je
jmp
push
push
call
jmp
push
push
call
jmp
push
push
call
mov
sar
mov
and
imul
mov
mov
xor
jmp
call
mov
call
mov
or
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jae
mov
sar
mov
and
imul
mov
movsx
and
test
je
mov
sar
mov
and
imul
mov
mov
jmp
call
mov
call
mov
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
sar
mov
and
imul
mov
add
mov
mov
cmp
jne
push
call
add
mov
cmp
jne
mov
add
push
call
mov
mov
add
mov
mov
push
call
add
mov
sar
mov
and
imul
mov
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sar
mov
and
imul
mov
lea
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
inc
ret
mov
test
je
mov
inc
cmp
jne
inc
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
or
nop
inc
mov
or
je
inc
bt
jae
mov
add
pop
leave
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
mov
or
je
inc
bt
jae
lea
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
and
xor
and
mov
mov
and
mov
mov
and
mov
mov
and
mov
and
add
mov
mov
and
cmp
jge
mov
and
cmp
jge
mov
and
cmp
jle
mov
and
neg
sbb
and
add
mov
mov
mov
mov
mov
mov
jmp
mov
and
cmp
jg
mov
mov
mov
mov
mov
mov
jmp
mov
and
test
jne
mov
add
mov
mov
mov
and
test
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
jmp
mov
and
test
jne
mov
add
mov
mov
mov
and
test
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
add
mov
cmp
jge
mov
shl
mov
mov
mov
sub
mov
jmp
mov
sub
mov
cmp
jle
mov
add
mov
mov
add
mov
mov
lea
mov
mov
xor
mov
mov
xor
mov
imul
mov
mov
push
mov
push
mov
mov
push
call
add
mov
cmp
je
mov
mov
add
mov
mov
mov
add
mov
mov
sub
mov
jmp
mov
add
mov
jmp
mov
sub
mov
movsx
test
jle
mov
and
test
jne
lea
push
call
add
mov
sub
mov
jmp
movsx
test
jg
mov
sub
mov
movsx
test
jge
mov
and
and
test
je
mov
add
mov
lea
push
call
add
mov
add
mov
jmp
cmp
je
mov
or
mov
mov
and
cmp
jg
mov
and
cmp
jne
cmp
jne
mov
cmp
jne
mov
mov
and
cmp
jne
mov
mov
add
mov
jmp
mov
add
mov
jmp
mov
add
mov
jmp
mov
add
mov
mov
and
cmp
jl
mov
and
neg
sbb
and
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
and
or
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
mov
sub
mov
cmp
jne
jmp
cmp
jge
mov
neg
mov
mov
sub
mov
cmp
jne
mov
mov
cmp
je
mov
add
mov
mov
and
mov
mov
sar
mov
cmp
jne
jmp
mov
imul
mov
add
mov
mov
xor
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
mov
push
call
add
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmp
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsx
jmp
lock
cmp
jg
push
jmp
lock
push
call
mov
mov
xor
nop
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
mov
pop
or
jne
lock
jmp
push
call
add
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
or
je
mov
mov
lea
cmp
jne
mov
mov
mov
lea
mov
or
mov
je
or
je
inc
inc
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
jmp
lock
cmp
jg
push
jmp
lock
mov
push
call
mov
mov
xor
xor
mov
mov
or
mov
je
or
je
inc
inc
push
push
push
call
mov
add
call
add
pop
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
pop
or
jne
lock
jmp
mov
push
call
add
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmp
je
mov
and
and
mov
mov
mov
jmp
cmp
jne
or
jmp
cmp
jne
call
lea
push
mov
push
call
push
mov
push
call
lea
push
push
lea
push
mov
push
call
test
je
cmp
jne
mov
jmp
mov
and
cmp
jne
cmp
je
mov
and
mov
cmp
je
jmp
lea
push
call
add
mov
cmp
je
mov
xor
mov
mov
mov
xor
mov
mov
jmp
jmp
mov
push
mov
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
and
test
je
mov
mov
jmp
mov
add
mov
cmp
jae
mov
imul
xor
mov
mov
xor
mov
cmp
jne
mov
and
test
je
mov
imul
add
mov
jmp
mov
and
test
je
mov
imul
add
mov
jmp
mov
and
test
je
mov
imul
add
mov
jmp
mov
imul
add
mov
jmp
jmp
jmp
mov
and
test
je
mov
xor
mov
lea
mov
jmp
mov
and
test
je
mov
xor
mov
lea
mov
jmp
mov
and
test
je
mov
xor
mov
lea
mov
jmp
mov
xor
mov
lea
mov
mov
xor
mov
test
je
mov
xor
mov
cmp
jne
mov
xor
mov
test
jne
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
je
cmp
je
mov
push
call
cmp
je
cmp
je
mov
push
call
pop
ret
int3
int3
adc
or
add
or
add
push
inc
or
call
add
or
cmps
inc
or
dec
adc
add
or
les
add
adc
add
aas
or
mov
or
adc
add
mov
or
add
add
jo
or
pusha
inc
or
add
add
in
or
test
rol
add
inc
or
out
or
cli
inc
or
push
inc
or
push
inc
or
cs
or
ds
or
push
inc
or
fs
or
jbe
or
mov
add
inc
or
mov
inc
or
fadd
add
inc
or
add
add
inc
or
sbb
or
xor
or
dec
inc
or
pop
inc
or
push
or
jbe
or
mov
add
or
mov
fiadd
add
inc
or
or
add
or
ds
or
pop
inc
or
outs
inc
or
xchg
add
inc
or
rol
fadd
add
inc
or
cld
inc
or
or
sbb
es
or
xor
or
inc
inc
or
dec
inc
or
pop
inc
or
push
inc
or
mov
cwde
inc
or
mov
or
rol
inc
or
(bad)
inc
or
loop
or
repnz
or
add
add
or
cmp
add
or
pusha
inc
or
jb
or
add
xchg
inc
or
mov
inc
or
rol
add
add
add
add
add
add
add
add
mov
arpl
push
arpl
and
inc
jb
popa
je
inc
imul
inc
dec
xor
cs
ins
add
bound
imul
push
push
inc
push
xor
cs
ins
add
push
push
xor
xor
fs
ins
add
or
inc
gs
inc
ins
outs
jae
push
je
jb
add
inc
push
pop
push
push
xor
cs
ins
add
gs
pop
add
gs
inc
imul
jb
popa
je
inc
imul
jns
add
sahf
add
ins
imul
outs
arpl
jae
add
gs
gs
jne
arpl
add
push
gs
outs
fs
inc
imul
jne
jo
outs
fs
push
add
inc
imul
jo
inc
add
daa
add
je
outs
fs
gs
popa
outs
fs
gs
add
mov
je
popa
ins
inc
ins
ins
outs
arpl
add
add
je
outs
fs
gs
popa
outs
fs
gs
add
dec
add
je
push
popa
je
dec
popa
ins
gs
add
fs
gs
inc
imul
ins
outs
bound
dec
popa
outs
fs
add
sbb
inc
gs
popa
jae
inc
jb
outs
jb
add
add
outs
inc
jbe
outs
je
add
push
add
je
je
jb
jne
dec
outs
outs
inc
add
add
je
outs
ins
ins
popa
outs
fs
imul
inc
gs
gs
imul
inc
js
je
jb
arpl
jae
data16
je
jb
jb
je
arpl
push
arpl
outs
add
rol
gs
jbe
inc
jb
je
arpl
push
arpl
outs
add
push
add
jne
inc
jb
popa
imul
push
add
je
je
dec
popa
outs
fs
add
fild
push
jb
je
inc
imul
je
jb
outs
arpl
fs
arpl
ins
outs
je
add
add
je
jne
inc
bound
push
je
imul
add
je
jb
arpl
fs
jae
add
ret
outs
popa
fs
imul
add
mov
dec
outs
je
jb
outs
arpl
fs
outs
arpl
ins
outs
je
add
inc
gs
outs
fs
gs
imul
add
test
jne
jb
outs
je
jb
arpl
jae
lods
add
push
gs
js
gs
imul
gs
add
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
add
je
outs
jbe
jb
outs
ins
outs
je
je
imul
inc
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
ins
add
je
popa
outs
fs
gs
outs
jne
je
add
inc
imul
push
add
gs
inc
jb
je
arpl
push
arpl
outs
add
add
je
jne
jb
outs
je
push
dec
add
movs
add
push
gs
popa
ins
jne
add
inc
ins
ins
outs
arpl
add
push
gs
popa
jae
inc
jb
outs
jb
add
gs
popa
ins
jne
add
jo
gs
jb
jns
fwait
add
popa
jo
jb
popa
je
add
lahf
add
popa
jo
jb
add
mov
je
popa
ins
inc
jb
add
add
ins
push
outs
ja
outs
add
popa
fs
jb
je
push
je
add
popa
fs
gs
fs
je
add
cmps
add
popa
jo
popa
ins
imul
add
imul
inc
jb
je
arpl
push
arpl
outs
add
inc
push
dec
outs
outs
add
inc
inc
push
add
xor
inc
gs
inc
dec
inc
push
add
cdq
add
popa
jo
ins
ins
outs
arpl
mov
je
popa
ins
inc
ins
ins
outs
arpl
add
jo
gs
ins
ins
outs
arpl
stos
add
jne
push
inc
jne
data16
add
push
push
gs
imul
gs
add
add
imul
jo
imul
dec
jne
je
inc
jns
gs
outs
push
imul
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
add
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
outs
jae
dec
popa
outs
fs
add
gs
je
dec
popa
outs
fs
add
dec
inc
push
dec
inc
dec
xor
cs
ins
add
or
fs
outs
outs
jae
ins
gs
outs
jo
je
add
push
gs
outs
outs
jae
ins
gs
outs
fs
jmp
inc
gs
outs
outs
jae
ins
gs
outs
fs
xor
inc
jb
popa
je
inc
.byte
ins
gs
