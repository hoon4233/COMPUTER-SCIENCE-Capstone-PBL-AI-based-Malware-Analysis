mov
add
add
add
add
add
add
add
add
add
dec
add
push
add
add
mov
add
(bad)
and
add
and
add
add
add
sub
add
mov
add
lea
rcl
add
add
add
add
adc
add
add
adc
push
add
add
add
add
jle
add
add
sub
add
add
add
adc
add
add
add
adc
add
add
add
rol
add
push
or
jnp
and
sub
rol
add
add
add
add
sub
add
outs
push
add
push
sub
add
push
sub
add
or
add
add
jp
adc
add
jp
jle
add
add
xchg
popa
and
popf
sub
add
add
add
add
sub
add
add
sub
adc
add
add
add
add
add
jle
add
add
push
jle
add
add
pop
sub
add
add
add
add
add
add
xor
add
add
add
or
add
cmps
add
add
add
add
add
adc
add
test
add
inc
add
add
add
add
sbb
add
pop
or
add
popa
pop
push
pop
push
popa
inc
add
add
add
adc
and
sub
adc
(bad)
adc
or
push
adc
add
adc
and
pop
or
add
inc
pop
pop
or
and
pop
or
add
add
add
add
dec
sbb
adc
add
add
add
add
call
pop
and
jbe
add
pop
sub
pop
sub
pop
and
and
add
pop
adc
call
xor
leave
add
add
add
adc
add
add
add
add
or
add
das
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
das
add
add
add
push
or
adc
retf
popa
pop
ss
push
popa
inc
add
add
sldt
add
add
ret
fild
add
add
stos
push
sub
sbb
add
mov
add
add
add
or
pop
pop
or
xor
and
add
pop
or
pop
pop
xor
pop
or
add
ja
(bad)
call
sub
sbb
add
ins
(bad)
(bad)
jmp
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
add
sub
ja
(bad)
inc
add
adc
push
add
add
adc
add
add
pop
or
inc
or
add
dec
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
or
pop
xor
pop
or
int3
jle
add
add
pop
add
add
adc
add
pop
add
add
jle
add
add
xchg
jle
add
add
pop
pop
bound
popa
jle
add
add
popa
rcr
pop
pop
or
or
nop
push
jle
add
add
imul
jg
(bad)
call
sub
jle
add
add
pop
add
add
adc
add
pop
add
add
jle
add
add
pop
add
add
adc
add
imul
rol
add
push
sub
cmp
sub
add
sub
pop
add
push
sub
adc
add
mov
add
jle
add
add
sbb
inc
or
add
sub
add
daa
add
add
add
add
add
data16
add
add
add
add
push
add
add
add
sub
add
push
or
push
add
pop
popa
pop
push
popa
inc
add
add
add
add
pop
or
mov
and
add
add
sbb
sub
add
add
mov
add
sbb
add
or
pop
pop
or
sbb
pop
push
or
jl
(bad)
dec
and
add
add
cmp
jmp
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sub
jne
(bad)
inc
adc
add
fild
add
push
add
adc
add
add
jle
add
add
add
or
inc
or
add
push
add
add
add
xor
add
xor
add
inc
add
add
add
jbe
add
xor
add
jbe
add
add
add
push
or
or
int3
add
popa
pop
sbb
popa
inc
add
add
or
pop
ss
and
add
pop
or
scas
adc
mov
add
xchg
sbb
sub
sbb
sahf
add
outs
or
add
push
pop
pop
or
pop
sub
pop
or
jle
(bad)
dec
and
and
pushf
add
pop
sub
or
mov
add
xchg
and
aas
add
pop
or
pop
(bad)
(bad)
jmp
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
or
add
sub
gs
(bad)
inc
adc
add
inc
add
add
add
adc
add
add
sub
add
adc
add
adc
add
adc
add
add
add
adc
add
ror
add
push
or
das
xchg
and
jecxz
add
sub
sub
add
outs
pop
add
push
sub
xor
add
add
add
add
adc
and
inc
add
add
add
add
add
add
add
or
add
sbb
sub
ror
add
add
add
add
sub
add
cmp
sub
add
sub
or
add
sub
adc
pop
add
add
add
add
adc
add
add
jle
add
add
add
or
inc
or
add
mov
add
add
add
je
add
add
add
add
add
add
add
add
push
add
add
or
pop
cmp
add
pop
or
ret
add
popa
pop
adc
jle
add
add
mov
add
jle
add
add
mov
add
xchg
jle
add
add
pop
xchg
popa
pop
cmp
popa
inc
add
add
or
pop
dec
xchg
and
lods
add
pop
or
sbb
cli
or
lods
add
add
add
cmp
(bad)
inc
mov
add
sbb
or
add
push
pop
pop
or
pop
sub
adc
inc
xchg
pop
and
or
inc
(bad)
(bad)
call
sub
adc
scas
add
add
add
cmp
(bad)
(bad)
jmp
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
or
sub
inc
(bad)
(bad)
inc
add
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
or
add
adc
add
test
add
cmps
add
add
add
jl
add
push
add
add
add
add
add
add
add
add
add
add
push
add
push
es
push
or
adc
mov
add
push
popa
inc
add
add
push
add
add
add
add
add
add
cwde
adc
pop
xor
and
mov
add
out
push
or
or
add
add
add
add
add
add
or
adc
add
add
add
popa
(bad)
(bad)
inc
pop
pop
or
pop
or
adc
dec
(bad)
(bad)
dec
sbb
adc
add
add
add
add
xor
(bad)
call
push
and
and
sub
pop
sub
push
pop
jbe
and
adc
ud0
inc
add
adc
add
jecxz
add
push
add
adc
add
add
jle
add
add
add
or
inc
or
add
dec
add
add
add
cmp
add
sub
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
pop
xchg
and
sub
add
popa
pop
imul
add
add
add
sbb
scas
sbb
cli
sbb
mov
add
sbb
outs
or
add
push
pop
pop
or
sbb
add
or
mov
sub
adc
popa
add
add
add
add
(bad)
(bad)
jmp
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
sldt
push
es
add
add
pop
jle
add
add
pop
xchg
add
and
add
add
sub
push
(bad)
inc
adc
add
cmp
add
pop
add
adc
and
inc
add
add
add
adc
add
es
or
fcom
lea
add
add
add
sub
add
or
add
add
add
sub
adc
add
sub
adc
add
rol
add
or
add
jle
add
add
push
jle
add
add
pop
sub
add
add
add
add
add
add
add
pop
add
add
add
sbb
add
sbb
add
add
add
add
add
adc
add
adc
pop
and
and
adc
sbb
add
popa
pop
dec
pop
push
popa
inc
add
add
push
add
add
or
add
stc
adc
adc
pop
pop
xchg
and
adc
add
or
pop
adc
inc
pop
pop
or
icebp
add
add
sub
add
sbb
pop
xor
sbb
add
call
pop
add
add
adc
pop
dec
xchg
pop
ds
adc
inc
add
xor
cmc
add
add
add
adc
add
add
add
add
push
sbb
add
add
or
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
or
add
add
add
add
mov
jno
push
popa
inc
add
add
or
add
adc
add
adc
jmp
pop
adc
mov
mov
add
sbb
push
add
or
pop
pop
or
lds
add
or
mov
add
or
add
add
or
pop
pop
xor
push
adc
pop
(bad)
(bad)
call
push
push
xchg
and
in
pop
or
add
inc
(bad)
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sub
(bad)
(bad)
(bad)
inc
add
adc
add
int
add
or
add
jle
add
add
add
adc
add
add
or
add
jns
add
aas
add
add
add
inc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
pop
add
add
adc
add
sbb
sbb
add
pusha
pop
push
popa
inc
add
add
push
add
add
add
mov
pop
jge
or
and
and
in
adc
pop
or
add
add
sub
add
or
pop
or
inc
pop
pop
or
pop
sub
pop
or
call
sub
sbb
(bad)
inc
je
add
add
sbb
(bad)
inc
add
adc
add
xor
add
pop
add
adc
and
inc
add
add
add
add
add
add
add
adc
sbb
sub
rcl
add
add
add
add
sub
add
cmp
sub
add
sub
push
add
push
sub
adc
push
add
add
or
add
jle
add
add
push
jle
add
add
pop
sub
add
add
add
add
add
pop
add
add
add
sbb
add
in
add
add
add
popa
add
add
add
add
pop
add
push
adc
and
and
repnz
pop
adc
sbb
add
popa
sbb
popa
inc
add
add
sldt
add
pop
and
add
add
add
and
adc
pop
inc
xchg
pop
sub
ror
add
add
add
add
or
adc
inc
mov
add
sbb
mov
add
sbb
add
or
pop
adc
inc
pop
pop
or
cli
add
add
add
xchg
sbb
add
or
adc
pop
fs
and
rol
add
add
call
or
cmc
adc
sbb
add
add
inc
je
add
add
add
add
adc
add
add
adc
add
je
pop
and
add
add
sub
push
and
add
add
pop
adc
call
xor
add
add
add
add
adc
add
add
add
add
push
sbb
add
add
or
add
cmps
add
add
add
popa
add
add
add
add
add
mov
add
add
add
inc
add
add
add
push
or
add
add
add
add
mov
xor
push
popa
inc
add
add
adc
add
adc
and
and
pop
add
pop
adc
call
add
adc
pop
inc
xchg
and
add
pop
adc
jl
(bad)
inc
mov
add
sbb
outs
adc
add
push
pop
pop
or
pop
xor
and
or
pop
pop
jle
add
add
pop
jle
add
add
pop
xchg
jle
add
add
movs
add
add
pushf
xor
push
adc
xor
(bad)
call
add
add
and
and
adc
adc
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sub
sub
push
add
add
add
sub
xor
add
add
pop
add
adc
and
inc
add
add
add
add
add
add
add
sbb
add
es
or
(bad)
push
add
add
add
add
sub
add
outs
push
add
push
sub
add
push
sub
add
or
add
add
add
add
add
sub
sbb
add
sub
adc
add
adc
add
or
add
jle
add
add
add
add
push
push
adc
add
or
add
add
add
inc
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
or
adc
mov
popa
inc
add
add
adc
add
pop
add
add
add
add
add
add
mov
xchg
and
sub
sbb
in
sbb
add
mov
add
sbb
add
or
(bad)
(bad)
inc
mov
add
sbb
mov
add
sbb
add
or
pop
pop
or
push
or
je
and
or
pop
pop
xor
pop
or
add
inc
(bad)
(bad)
call
push
and
and
sub
sbb
add
sub
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sub
cmp
(bad)
inc
add
add
add
add
sub
sbb
sub
ret
add
push
jle
add
add
or
add
and
add
add
xor
add
sub
add
sub
add
or
add
rcr
add
push
sub
add
adc
push
add
add
pop
add
adc
and
inc
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
sub
sub
sbb
add
and
add
add
retf
add
add
add
jle
add
add
push
jle
add
add
push
xchg
jle
add
add
cwde
add
add
add
pop
pushf
sub
add
add
add
add
sub
and
add
sub
adc
add
jmp
add
adc
add
add
add
adc
add
add
or
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
and
sbb
or
or
popa
sbb
add
add
or
add
adc
cmp
sub
xchg
and
rol
add
lock
adc
leave
mov
add
cmp
(bad)
inc
mov
add
sbb
mov
add
sbb
adc
add
or
inc
pop
pop
or
pop
sub
adc
scas
hlt
add
pop
or
call
add
rol
add
xchg
sbb
or
inc
jne
add
add
pop
or
inc
add
adc
add
add
add
add
adc
and
inc
add
add
add
add
add
add
add
add
push
es
or
fsubr
add
push
sub
add
outs
inc
add
push
sub
add
add
add
add
sub
daa
add
push
sub
adc
add
add
adc
add
movd
add
add
adc
pop
adc
inc
adc
add
jle
add
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
es
or
add
bound
popa
or
add
add
or
add
and
sbb
pop
popa
or
adc
push
cmp
(bad)
(bad)
jle
add
add
push
add
sbb
call
adc
cmp
(bad)
call
nop
and
pop
add
pop
sub
or
add
sub
je
add
sbb
add
add
add
adc
or
or
adc
cmp
(bad)
(bad)
push
add
or
add
or
add
adc
adc
add
sbb
or
pop
xchg
adc
adc
cmp
(bad)
(bad)
call
or
pop
adc
push
pop
pop
pop
adc
and
inc
add
arpl
pop
pop
movlps
cmp
(bad)
(bad)
call
push
pop
and
or
adc
cmp
(bad)
(bad)
call
nop
xchg
and
sub
adc
pop
punpckldq
or
add
adc
xchg
adc
adc
and
add
add
add
add
xchg
(bad)
(bad)
call
or
add
sbb
adc
push
adc
cmp
(bad)
call
add
and
add
add
sbb
or
pop
pop
adc
pop
xchg
popa
adc
je
add
sbb
or
or
pop
adc
or
popa
shr
add
or
sbb
(bad)
(bad)
call
or
pop
adc
push
adc
cmp
(bad)
(bad)
call
or
pop
xor
adc
pop
and
add
push
cmp
(bad)
(bad)
call
nop
xchg
and
sub
adc
outs
pop
add
or
add
push
add
sbb
or
add
mov
out
(bad)
dec
jne
add
add
adc
add
jecxz
add
push
add
adc
add
add
push
or
inc
or
add
add
add
das
add
add
add
pop
add
add
add
add
add
add
add
xor
add
das
add
add
add
add
or
pop
sub
add
sub
add
popa
push
pop
push
popa
inc
add
add
or
pop
cmp
and
jle
add
sub
or
lahf
add
outs
sbb
add
push
pop
pop
or
sbb
pop
sbb
jg
(bad)
dec
pop
and
add
pop
sub
pop
or
imul
(bad)
jle
add
add
cdq
add
add
add
add
cdq
add
add
pop
popf
sub
adc
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
(bad)
(bad)
(bad)
inc
adc
add
or
add
sldt
adc
add
add
jle
add
add
add
or
inc
or
add
test
add
add
add
add
add
add
add
xchg
add
xchg
add
cmp
add
and
add
lea
rcl
add
add
add
add
or
add
lea
push
jne
add
sbb
and
and
add
xchg
pop
arpl
sub
add
sbb
add
add
sbb
pop
sub
or
jle
(bad)
inc
je
add
sbb
and
add
popf
push
jne
add
sbb
and
add
popf
adc
xor
add
cmp
(bad)
inc
jne
add
sbb
cdq
aaa
add
popf
push
jne
add
sbb
and
push
or
xor
(bad)
inc
je
add
sbb
and
xor
add
add
add
push
jne
add
sbb
sub
sub
add
sub
add
adc
add
add
add
add
adc
and
inc
add
add
add
add
add
add
add
add
add
add
add
sub
add
sbb
sub
and
add
add
outs
add
add
adc
add
sub
add
add
add
add
sub
sub
add
sub
adc
add
cli
add
add
add
adc
add
add
add
add
push
sub
add
or
add
adc
add
cmp
add
fwait
add
add
add
jo
add
sub
add
pop
add
add
add
add
add
add
fwait
add
add
sub
pop
or
add
mov
add
mov
add
popa
sbb
popa
inc
add
add
add
adc
mov
or
add
add
sub
add
add
mov
add
sbb
sbb
add
or
adc
ins
(bad)
(bad)
inc
pop
pop
or
or
sbb
add
pop
(bad)
(bad)
dec
sbb
adc
push
pop
push
xchg
and
std
add
pop
adc
inc
(bad)
(bad)
call
push
pop
jo
and
icebp
add
pop
sub
pop
jne
add
add
adc
add
add
add
push
(bad)
(bad)
inc
add
add
add
add
sub
add
push
sub
add
add
add
add
add
xor
add
sub
add
push
sub
add
push
and
add
add
rol
add
add
add
je
add
add
push
adc
and
shl
sub
add
outs
xor
add
adc
add
shr
add
push
sub
adc
add
xor
add
pop
add
adc
and
inc
add
add
add
add
add
add
add
add
add
add
add
xor
add
sbb
sub
rcl
add
add
add
add
sub
add
cmp
sub
add
sub
xor
sub
adc
push
add
add
pop
add
adc
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
sbb
sub
sub
add
push
je
add
add
add
add
mov
add
jle
add
add
mov
add
xchg
jle
add
add
popa
xchg
pop
and
add
add
sub
add
add
add
add
sub
aaa
add
push
sub
cmp
sub
add
sub
cmp
add
sub
call
push
add
push
and
aad
add
sub
add
adc
add
sar
add
push
sub
adc
add
dec
add
add
add
adc
add
add
sub
add
adc
add
add
add
adc
add
sar
add
push
or
sub
add
sub
pop
lea
add
add
add
sub
add
or
cmp
sub
add
sub
cmp
add
sub
adc
add
in
add
adc
add
jle
add
add
add
add
push
sub
add
or
add
inc
add
add
add
xor
add
add
add
sub
add
add
add
add
add
add
add
or
add
sar
add
es
or
add
mov
adc
mov
add
jo
push
popa
inc
add
add
add
adc
lahf
sbb
stc
adc
push
adc
xchg
add
sbb
add
or
adc
test
pop
pop
or
and
pop
or
add
add
add
add
pusha
(bad)
(bad)
dec
sbb
adc
push
pop
and
add
pop
adc
dec
(bad)
(bad)
call
push
pop
cmp
add
in
pop
je
add
sbb
pop
or
add
sub
(bad)
call
xor
add
add
add
sub
add
inc
or
add
sub
add
push
add
jno
add
xor
add
push
add
add
add
push
add
add
add
add
add
add
add
push
or
sub
add
popa
pop
js
push
popa
inc
add
add
or
add
or
rol
add
xchg
or
mov
sub
sbb
stos
add
outs
sbb
add
push
pop
pop
or
add
add
imul
add
imul
pop
ds
popa
and
popf
pop
sbb
pop
pop
or
imul
call
sub
sbb
cmp
(bad)
jmp
push
adc
add
add
add
add
add
add
add
add
cmp
sub
push
(bad)
inc
adc
add
fld
add
adc
add
jle
add
add
add
add
push
sbb
add
add
or
add
pop
add
add
add
das
add
add
add
add
add
add
add
add
add
push
or
adc
into
add
pop
push
popa
inc
add
add
sldt
add
add
retf
mov
add
add
scas
sbb
stc
sbb
add
outs
sbb
add
push
pop
pop
or
ins
sldt
or
cmps
add
add
fild
add
pop
sbb
pop
xor
adc
and
add
add
add
ins
(bad)
(bad)
call
add
add
sub
sub
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
sub
data16
(bad)
inc
add
adc
add
xor
add
pop
add
adc
and
inc
add
add
add
add
add
aas
add
push
sbb
sub
sub
add
outs
push
add
push
sub
add
cmp
sub
add
sub
inc
add
push
sub
call
aas
add
push
and
add
add
add
adc
rol
add
sub
cmp
sub
add
sub
inc
add
push
sub
adc
add
out
add
adc
add
jle
add
add
add
sub
add
add
or
add
and
add
dec
add
add
add
add
add
add
add
add
add
pop
add
lea
add
add
add
cmp
add
and
add
rol
add
adc
xor
add
sub
pop
push
xchg
and
add
pop
or
popa
pop
push
pop
push
popa
inc
add
add
add
add
sbb
cli
adc
adc
add
(bad)
inc
mov
add
sbb
mov
add
sbb
add
or
sbb
inc
pop
pop
or
sbb
pop
sbb
call
sub
adc
jl
adc
jl
pop
or
inc
sub
add
jg
adc
jg
pop
or
inc
add
jae
add
push
jge
add
add
sub
add
or
sub
push
sub
dec
add
push
sub
xor
add
add
add
add
jle
add
add
jle
add
add
sub
inc
or
add
sub
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
push
or
rol
add
xchg
or
mov
add
adc
add
or
sub
push
jle
add
add
pop
adc
add
or
sub
add
adc
add
imul
jle
(bad)
call
sub
jle
add
add
pop
adc
add
(bad)
(bad)
jle
add
add
das
pop
sbb
cmp
(bad)
dec
pop
inc
xchg
and
add
out
jle
add
add
add
xor
xchg
add
add
sub
add
add
or
jne
add
add
dec
add
push
outs
pop
add
push
ins
and
add
add
lods
add
add
add
add
and
add
add
fiadd
add
sub
add
sub
fiadd
or
inc
push
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
je
add
add
or
xchg
pop
push
pop
or
rcr
sub
push
jne
add
add
add
or
jle
add
add
and
add
sub
dec
add
push
sub
add
add
add
add
or
inc
add
add
adc
add
add
add
adc
add
add
sbb
pop
inc
pop
add
add
add
sbb
add
sbb
add
inc
add
add
add
add
add
add
add
add
sub
or
sbb
add
xchg
and
add
add
sub
or
sti
add
add
daa
add
add
add
add
or
and
add
add
sub
add
add
add
add
add
and
add
add
sub
add
or
ror
add
es
add
add
adc
add
jle
add
add
adc
add
xchg
jle
add
add
stc
add
add
pushf
sub
xor
add
sbb
add
add
adc
add
add
or
sub
add
or
adc
inc
je
add
add
add
and
add
fadd
add
sub
add
sub
add
es
add
add
push
or
add
mov
or
add
push
add
cdq
adc
add
push
add
lds
add
add
mov
adc
add
or
add
add
add
push
add
xchg
pop
add
ja
add
add
add
nop
or
add
pop
or
add
adc
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
retf
or
add
add
sldt
pop
add
add
adc
add
arpl
add
add
mov
add
dec
or
add
add
mov
add
(bad)
sbb
add
add
aas
add
add
add
imul
add
or
add
sbb
add
add
cld
adc
add
add
add
sldt
lea
add
test
add
add
adc
add
add
mov
add
pop
adc
add
(bad)
adc
add
add
add
iret
pop
add
icebp
add
add
pop
add
xor
add
sub
adc
add
or
add
add
add
pop
add
pop
add
add
push
add
push
or
add
sbb
add
push
add
out
or
add
adc
add
add
add
adc
add
adc
add
add
add
pop
adc
add
add
mov
add
push
pop
add
sub
add
xchg
add
add
sldt
dec
adc
add
add
add
lea
add
push
add
add
add
js
add
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
jnp
add
add
jne
add
add
add
add
adc
cmp
std
(bad)
inc
jae
add
or
jnp
add
add
jne
add
add
add
add
jae
add
or
add
add
cmp
or
mov
jae
add
or
daa
add
add
jne
add
add
add
add
jae
add
or
add
add
imul
cmp
jae
add
or
add
add
jae
add
or
add
je
add
add
add
add
or
xchg
and
adc
cmp
(bad)
inc
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
daa
add
add
add
sbb
add
jge
add
add
jb
or
sub
(bad)
inc
jae
add
or
add
add
add
add
add
add
jae
add
or
add
add
and
or
sti
cld
(bad)
inc
jae
add
or
push
jnp
add
add
push
jne
add
add
add
add
jae
add
or
add
add
sub
or
into
cld
(bad)
inc
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
pop
jnp
add
add
pop
je
add
add
add
add
or
add
cld
(bad)
inc
jae
add
or
add
add
jae
add
or
or
add
add
or
add
add
add
add
or
add
or
dec
cld
(bad)
inc
jae
add
or
or
add
add
or
add
jge
add
add
jae
add
or
add
add
pop
adc
cmp
cld
(bad)
inc
and
add
add
pop
add
add
pop
add
sub
jnp
add
add
push
jae
add
or
jle
or
add
pop
and
or
hlt
sti
(bad)
inc
jnp
add
add
push
adc
and
shl
sub
add
and
add
add
push
add
add
or
add
adc
add
or
mov
jnp
add
add
dec
pop
pop
jae
add
or
mov
add
and
or
add
add
add
add
and
mov
add
sub
add
sub
or
jb
and
sldt
pop
adc
cmp
(bad)
inc
jnp
add
add
mov
add
adc
and
shl
sub
add
pop
jle
jbe
or
add
sbb
or
push
sti
(bad)
inc
jnp
add
add
and
add
and
add
sub
add
add
add
add
push
jae
add
or
test
add
and
add
add
or
add
pop
pusha
adc
cmp
sti
(bad)
inc
jnp
add
add
adc
and
shl
sub
add
and
add
and
add
or
add
pop
aaa
adc
cmp
cli
(bad)
inc
jnp
add
add
dec
pop
pop
jae
add
or
dec
add
add
push
add
add
or
add
add
add
add
and
mov
or
add
pop
sub
or
lods
cli
(bad)
inc
jnp
add
add
jle
sbb
popa
mov
bound
sub
add
and
add
add
clc
add
add
or
add
pop
arpl
or
cmp
sbb
add
and
add
add
stc
add
add
or
add
add
add
add
adc
adc
add
or
cmc
add
add
lea
add
sub
add
sub
or
outs
xchg
and
adc
cmp
cli
(bad)
inc
jnp
add
add
sub
and
shl
sub
add
and
add
add
rol
add
sub
add
sub
or
or
add
add
(bad)
inc
jnp
add
add
dec
pop
pop
jae
add
or
imul
add
add
or
add
add
add
add
and
add
add
or
add
pop
das
adc
cmp
stc
(bad)
inc
jnp
add
add
mov
sbb
je
shl
sub
add
and
add
add
or
add
pop
sub
or
xchg
stc
(bad)
inc
jnp
add
add
and
add
add
rol
add
sub
add
add
add
add
add
add
push
pop
sub
movlps
cmp
inc
jnp
add
add
add
add
sbb
sbb
add
or
mov
add
and
add
add
or
add
pop
dec
adc
cmp
stc
(bad)
inc
jnp
add
add
add
add
and
and
sub
add
and
add
add
pop
add
add
or
add
adc
add
stc
(bad)
inc
jnp
add
add
add
add
push
pop
adc
add
or
add
add
call
add
pop
adc
cmp
clc
(bad)
inc
jnp
add
add
add
add
pop
bound
bound
or
add
add
add
add
add
add
lods
add
add
and
sub
add
and
add
add
jmp
or
add
adc
xchg
add
add
add
or
cmp
inc
jnp
add
add
add
add
and
fwait
add
add
or
add
add
add
add
add
add
and
mov
add
sub
dec
adc
cmp
(bad)
inc
jnp
add
add
add
add
and
and
add
or
mov
add
and
add
add
or
add
adc
imul
cmp
(bad)
inc
jnp
add
add
add
add
out
add
adc
and
sub
add
and
add
add
xor
or
add
pop
inc
adc
cmp
idiv
inc
jnp
add
add
add
add
push
pop
adc
add
or
inc
pop
pop
sub
add
sub
pop
adc
cmp
jnp
add
add
add
add
and
add
and
add
sub
add
sub
jnp
add
add
add
add
popf
add
add
bound
sub
add
and
xchg
add
sub
add
sub
or
or
arpl
(bad)
inc
jnp
add
add
add
add
and
add
and
or
add
add
add
add
and
add
jo
add
sub
add
sub
push
adc
cmp
idiv
inc
jnp
add
add
sub
sub
add
or
gs
sbb
sub
jnp
add
add
js
sbb
scas
mov
bound
sub
add
and
add
add
sbb
or
add
adc
xchg
add
add
add
or
fdecstp
(bad)
inc
jnp
add
add
js
pop
jae
add
or
lods
add
add
mov
add
sub
add
sub
jnp
add
add
and
add
and
add
sub
add
sub
or
lods
add
add
add
or
nop
idiv
inc
jnp
add
add
add
add
and
xchg
add
sub
add
sub
jnp
add
add
add
add
xor
xor
add
or
or
add
and
add
sub
add
sub
dec
adc
cmp
(bad)
inc
jnp
add
add
add
add
scas
add
add
and
sub
add
sbb
sub
add
sub
or
or
or
adc
jnp
add
add
add
add
js
pop
jae
add
or
cmp
add
and
add
add
or
add
adc
outs
xchg
and
sub
add
or
loopne
(bad)
inc
jnp
add
add
add
add
pop
or
add
sub
jnp
add
add
and
add
and
add
sub
add
sub
or
add
cmc
(bad)
inc
jnp
add
add
cmp
cmp
add
or
add
add
pop
add
add
or
add
add
add
add
int3
add
add
and
sub
add
and
mov
or
add
adc
add
add
or
dec
cmc
(bad)
inc
jnp
add
add
js
pop
jae
add
or
ins
add
add
jne
add
sub
add
sub
jnp
add
add
and
xchg
add
add
or
add
pop
adc
or
adc
(bad)
inc
jnp
add
add
and
lahf
add
add
push
add
sub
jnp
add
add
inc
pop
inc
jae
add
or
inc
add
add
cmp
add
sub
add
sub
or
or
shl
(bad)
inc
jnp
add
add
inc
adc
and
sub
add
and
add
add
jecxz
add
sub
add
sub
or
ja
and
add
add
or
sahf
hlt
(bad)
inc
jnp
add
add
jns
adc
or
pop
add
and
or
add
add
add
add
pop
jb
jb
or
add
adc
jb
and
sldt
pop
adc
cmp
(bad)
inc
jnp
add
add
add
and
mov
push
add
sub
jnp
add
add
add
dec
pop
dec
jae
add
or
jbe
add
and
add
add
or
add
pop
push
adc
cmp
hlt
(bad)
inc
jnp
add
add
add
push
sbb
mov
sub
add
and
mov
or
add
pop
cmp
or
out
(bad)
inc
jnp
add
add
add
jns
adc
or
popf
add
add
test
add
sub
add
sub
or
cmp
add
or
mov
(bad)
inc
jnp
add
add
add
or
mov
mov
or
add
add
add
add
push
jae
add
or
mov
add
and
add
add
or
add
adc
add
or
addr16
inc
jnp
add
add
inc
adc
and
sub
add
and
add
add
in
add
sub
add
sub
pop
adc
cmp
repz
inc
jnp
add
add
js
adc
sub
xor
add
and
add
add
or
add
add
add
add
or
jecxz
add
and
add
add
or
add
pop
push
or
std
repnz
inc
jnp
add
add
rol
add
adc
and
sub
add
and
add
and
add
sub
add
sub
sbb
or
into
repnz
inc
jnp
add
add
push
jae
add
or
push
add
add
jbe
add
sub
add
sub
jnp
add
add
mov
push
and
mov
bound
sub
add
and
add
add
fild
add
sub
add
sub
and
or
xor
inc
jnp
add
add
js
adc
sub
jnp
bound
or
add
add
add
add
or
ins
add
add
ins
add
add
or
add
sbb
or
dec
repnz
inc
jnp
add
add
je
sbb
fisttp
add
push
and
add
add
aaa
add
add
or
add
adc
push
xchg
and
rol
add
or
pop
repnz
inc
jnp
add
add
push
add
add
pop
inc
pop
jae
or
jnp
add
add
push
add
add
adc
adc
add
or
mov
mov
add
sub
pop
adc
cmp
icebp
(bad)
inc
jnp
add
add
push
add
add
xchg
add
add
and
mov
bound
sub
add
and
add
add
jmp
add
adc
jnp
adc
cmp
daa
add
add
push
add
add
and
or
or
inc
add
add
pop
add
add
or
add
pop
adc
or
jo
(bad)
inc
jnp
add
add
push
add
add
or
inc
add
add
inc
add
add
or
add
add
add
add
push
add
add
inc
add
adc
and
mov
bound
sub
add
and
add
add
leave
add
add
or
add
pop
adc
cmp
icebp
(bad)
inc
jnp
add
add
pop
add
add
pop
inc
pop
jbe
or
jnp
add
add
pop
add
add
sbb
sbb
add
or
push
add
add
add
add
or
add
adc
push
xchg
and
sbb
add
or
(bad)
lock
inc
jnp
add
add
pop
add
add
out
add
add
and
mov
bound
sub
add
and
xchg
add
sub
add
sub
or
outs
xchg
and
les
add
or
cdq
lock
inc
jnp
add
add
pop
add
add
and
or
or
test
mov
add
sub
add
sub
and
or
ins
lock
inc
jnp
add
add
pop
add
add
or
add
cmps
add
add
or
add
add
add
add
pop
add
add
cmc
add
add
and
mov
bound
sub
add
and
xchg
add
add
or
add
adc
and
and
adc
cmp
(bad)
inc
jnp
add
add
and
add
add
push
add
add
or
jnp
add
add
and
and
add
or
adc
ins
add
add
or
add
adc
xchg
add
add
add
or
retf
out
(bad)
inc
jnp
add
add
pushf
add
add
and
mov
bound
sub
add
and
add
add
rol
add
sub
add
sub
inc
adc
cmp
and
add
and
or
or
push
add
add
dec
add
add
or
add
add
add
add
push
and
add
add
or
add
pop
adc
out
(bad)
inc
jnp
add
add
adc
and
mov
bound
sub
add
and
test
add
sub
add
sub
push
adc
cmp
out
(bad)
inc
jnp
add
add
or
add
sbb
xor
or
jnp
add
add
or
add
sub
sub
add
or
add
add
sbb
add
sub
add
sub
ins
adc
cmp
out
(bad)
inc
jnp
add
add
or
add
cmp
and
(bad)
shl
sub
add
and
add
add
xor
add
sub
add
sub
outs
adc
cmp
out
(bad)
inc
jnp
add
add
or
add
and
or
or
arpl
add
and
add
sub
add
sub
inc
adc
cmp
jnp
add
add
or
add
mov
add
add
jl
add
sub
add
sub
jnp
add
add
or
add
mov
add
adc
and
sub
add
and
add
add
out
add
sub
add
sub
or
pop
adc
cmp
(bad)
inc
jnp
add
add
and
add
and
add
sub
add
sub
jnp
add
add
xor
xor
add
or
test
add
and
add
add
or
add
pop
sbb
or
add
(bad)
inc
jnp
add
add
fiadd
add
adc
and
(bad)
shl
sub
add
and
cmp
add
sub
add
sub
or
sbb
into
in
(bad)
inc
jnp
add
add
js
pop
jae
add
or
pop
add
add
push
add
add
or
add
add
add
add
adc
mov
add
add
or
add
pop
or
in
(bad)
inc
jnp
add
add
and
mov
push
add
sub
jnp
add
add
cmp
cmp
add
or
jmp
add
and
or
add
pop
dec
adc
cmp
(bad)
inc
jnp
add
add
dec
adc
and
(bad)
shl
sub
add
and
add
add
in
add
sub
add
sub
adc
cmp
in
(bad)
inc
jnp
add
add
js
pop
jae
add
or
aaa
add
add
add
add
or
add
add
add
add
adc
sub
sub
or
add
adc
add
or
loope
(bad)
inc
jnp
add
add
inc
pop
inc
jae
add
or
sub
add
and
add
sub
add
sub
jnp
add
add
ret
add
and
(bad)
shl
sub
add
and
add
add
jecxz
add
sub
add
sub
push
adc
cmp
and
add
jns
popa
jae
add
or
dec
pop
push
sub
add
sub
jnp
add
add
adc
mov
mov
or
add
pop
pop
adc
cmp
inc
jnp
add
add
and
add
add
stos
add
add
sldt
sub
jnp
add
add
dec
pop
dec
jae
add
or
mov
mov
add
or
add
adc
dec
xchg
and
add
pop
adc
cmp
in
(bad)
inc
jnp
add
add
dec
adc
and
(bad)
shl
sub
add
and
add
and
add
add
or
add
pop
bound
or
jmp
add
add
jns
popa
jae
add
or
sbb
add
and
add
add
or
add
add
add
add
adc
loope
add
and
add
add
or
add
pop
adc
or
lods
jmp
inc
jnp
add
add
and
add
and
add
add
sldt
sub
jnp
add
add
or
add
push
pop
push
jae
add
or
pop
js
or
add
pop
or
or
jno
(bad)
inc
jnp
add
add
or
add
xor
and
(bad)
shl
sub
add
pop
push
pop
push
sub
add
sub
or
inc
xchg
and
pop
add
pop
adc
cmp
jnp
add
add
or
add
jns
popa
jae
add
or
or
add
and
add
add
or
add
adc
xchg
add
pop
adc
cmp
jmp
inc
jnp
add
add
or
add
adc
sbb
add
add
add
add
or
add
outs
or
add
pop
ins
adc
cmp
jmp
add
pop
pop
pop
jae
add
or
add
or
jnp
add
add
js
sbb
and
sub
add
outs
adc
add
adc
xor
add
or
popf
jmp
add
jns
popa
jae
add
or
add
or
jnp
add
add
adc
or
xor
or
jae
(bad)
inc
jnp
add
add
outs
or
add
add
add
add
or
add
push
jae
add
or
add
or
popa
adc
cmp
(bad)
inc
jnp
add
add
or
add
mov
add
adc
and
(bad)
shl
sub
add
outs
adc
add
pop
cmp
or
sbb
jnp
add
add
or
add
sbb
add
pop
sbb
add
or
add
or
jnp
add
add
or
add
push
outs
sbb
add
adc
pop
xchg
and
add
pop
adc
cmp
jmp
daa
add
add
or
add
cld
add
add
and
(bad)
shl
sub
add
outs
adc
add
pop
adc
or
mov
(bad)
inc
jnp
add
add
or
add
push
jae
add
or
add
or
jnp
add
add
or
add
test
add
adc
and
(bad)
shl
sub
add
outs
adc
add
adc
add
cmp
(bad)
inc
jnp
add
add
or
add
fs
adc
sub
sbb
add
add
add
add
or
add
pop
outs
sbb
add
adc
jo
and
lock
pop
adc
cmp
jnp
add
add
adc
adc
add
or
add
or
jnp
add
add
inc
adc
and
shl
sub
add
outs
adc
add
pop
push
adc
cmp
call
add
add
fs
adc
sub
sbb
add
add
add
add
sbb
add
or
dec
adc
cmp
call
add
rol
add
jae
add
or
das
add
or
pop
sub
add
or
and
add
and
sub
xor
add
pop
sub
call
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
or
add
xor
add
adc
nop
add
add
add
or
push
call
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
or
add
xor
add
pop
sbb
or
daa
call
xor
add
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
pop
push
adc
cmp
out
inc
sub
add
or
jnp
add
add
xor
add
add
xor
add
add
add
add
xor
add
pop
pop
adc
cmp
out
inc
sub
add
or
jnp
add
add
or
add
xor
add
add
xor
add
add
add
add
xor
add
pop
push
adc
cmp
sub
add
or
jnp
add
add
pop
add
add
xor
add
add
xor
add
add
add
add
push
add
add
xor
add
adc
xor
and
add
pop
adc
cmp
(bad)
inc
sub
add
or
jnp
add
add
xor
add
add
xor
add
add
add
add
xor
add
pop
pop
adc
cmp
out
inc
sub
add
or
jnp
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
adc
cmp
add
pop
adc
cmp
out
inc
sub
add
or
jnp
add
add
xor
add
add
xor
add
add
add
add
add
add
xor
add
adc
dec
xchg
and
lods
add
pop
adc
cmp
out
inc
sub
add
or
jnp
add
add
xor
add
add
xor
add
add
add
add
add
add
xor
add
pop
push
adc
cmp
sub
add
or
jnp
add
add
add
add
xor
add
add
xor
add
add
add
add
xor
add
adc
lods
add
add
add
or
pop
out
inc
sub
add
or
jnp
add
add
xor
add
add
xor
add
add
add
add
xor
add
adc
push
pop
adc
cmp
out
inc
sub
add
or
jnp
add
add
or
add
xor
add
add
sub
add
pop
cmp
or
add
(bad)
inc
add
add
add
or
add
xor
push
sub
add
or
push
sub
add
or
or
add
add
add
imul
add
imul
and
pop
pop
cmp
pop
adc
cmp
pop
outs
adc
and
shl
sub
add
sub
add
or
and
add
add
add
add
cmp
add
pop
inc
adc
cmp
push
sub
add
or
push
sub
add
or
pop
sub
add
or
pop
sub
add
pop
xor
in
inc
add
push
dec
add
push
jae
add
or
add
or
push
sub
add
or
sub
add
sub
dec
add
push
sub
adc
add
out
add
add
add
adc
add
add
add
inc
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
push
sbb
add
mov
adc
mov
push
add
pop
and
popa
inc
add
add
add
adc
lahf
push
sub
adc
adc
add
add
add
mov
mov
add
sbb
mov
add
sbb
add
add
sub
add
or
adc
push
pop
pop
or
or
adc
add
add
add
inc
(bad)
(bad)
dec
sbb
or
add
cmp
(bad)
call
or
cmc
pop
jne
add
add
adc
add
add
add
sbb
(bad)
inc
jb
dec
add
push
and
add
and
add
sub
add
sub
ror
add
sub
add
adc
push
add
add
push
add
adc
add
add
sub
pop
inc
add
add
add
add
add
add
add
add
add
add
add
dec
add
push
or
into
add
add
sub
add
sub
add
xor
sub
add
xor
jle
add
add
mov
add
xchg
pop
pop
inc
pop
pushf
sub
add
adc
add
add
add
adc
add
add
sub
add
add
add
adc
add
adc
add
rcl
add
or
sub
add
sub
add
push
adc
and
mov
bound
sub
add
pop
or
pop
sub
add
sub
add
sub
add
add
add
add
add
pop
sub
and
mov
bound
sub
add
add
and
add
and
add
sub
add
sub
add
add
mov
sub
add
mov
jle
add
add
mov
add
xchg
pop
pop
xor
sub
push
add
push
sub
xor
add
add
pop
add
adc
and
inc
add
add
add
add
add
add
add
push
add
push
sbb
sub
add
out
add
add
and
mov
bound
sub
add
and
add
add
loop
add
sub
add
sub
add
jle
add
add
cmp
add
jle
add
add
cmp
add
xchg
jle
add
add
cmp
add
xchg
pusha
and
pushf
sub
add
add
add
add
add
add
pop
arpl
and
mov
bound
sub
add
add
add
add
dec
add
add
adc
add
sub
push
add
push
es
add
add
lea
add
jle
add
add
lea
add
xchg
jle
add
add
cmp
sub
xor
add
add
push
add
adc
add
add
sub
pop
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
push
or
into
add
add
pop
aas
adc
and
mov
bound
sub
add
and
add
and
add
sub
add
sub
add
jle
add
add
push
jle
add
add
push
xchg
jle
add
add
dec
add
add
pushf
sub
add
add
add
add
add
add
and
add
add
and
mov
bound
sub
add
add
retf
add
add
stos
add
add
adc
add
jle
add
add
adc
add
jle
add
add
adc
add
xchg
jle
add
add
push
xchg
pusha
and
add
add
sub
push
add
push
sub
adc
add
add
add
adc
and
inc
add
add
add
add
add
add
add
push
add
push
sbb
sub
add
dec
adc
and
mov
bound
sub
add
pop
dec
pop
push
sub
add
sub
add
sub
add
adc
and
sub
add
add
mov
fild
add
sub
add
sub
rcl
add
sub
adc
add
add
add
adc
add
add
sub
add
adc
add
add
add
adc
add
add
add
adc
add
rcr
add
or
xor
add
sub
add
mov
add
adc
and
mov
bound
sub
add
and
popf
add
add
adc
add
je
add
add
sahf
add
ins
adc
and
shl
sub
add
add
jmp
mov
add
sub
add
sub
rcr
add
sub
xor
add
add
adc
add
add
sub
pop
inc
add
add
add
add
add
add
add
add
add
add
add
pop
add
push
or
sti
add
add
and
add
add
and
mov
bound
sub
add
and
lods
add
add
adc
add
je
add
add
add
add
sbb
cmp
shl
sub
add
add
ins
add
add
or
add
sub
add
sub
rcr
add
sub
xor
add
add
adc
add
add
sub
add
adc
add
adc
add
add
add
rcr
push
or
xor
and
mov
add
sub
add
addr16
and
shl
sub
add
pop
adc
or
adc
add
movs
cmp
add
sub
mov
add
adc
and
shl
sub
add
add
push
add
add
xor
adc
add
sub
pop
add
push
sub
add
inc
add
or
rcr
add
sub
call
cmps
add
add
mov
add
adc
add
je
add
add
sub
pop
add
push
sub
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
lds
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
pop
push
jns
je
ins
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
retf
or
xor
xchg
mov
loop
fiadd
dec
sbb
and
inc
mov
loopne
mov
fisttp
mov
pop
pop
mov
inc
xchg
mov
out
mov
add
lea
add
mov
sub
jnp
lahf
mov
and
mov
xor
cmp
nop
jo
scas
xchg
cmovnp
xchg
pop
out
aam
call
cdq
mov
test
jne
cli
fwait
call
mov
(bad)
jae
mov
out
sahf
movs
movs
jmp
fadd
test
add
popa
xor
retf
scas
hlt
into
pushf
scas
inc
cmps
cwde
mov
pop
pop
mov
mov
mov
xchg
cmp
push
(bad)
cwde
mov
scas
movs
mov
add
mov
test
repz
out
std
mov
iret
mov
mov
lock
pushf
mov
rcr
push
rcr
rcr
mov
sub
and
push
dec
pusha
ret
enter
lahf
pop
inc
leave
pop
mov
adc
lds
push
inc
lds
loopne
iret
add
(bad)
mov
cli
cmp
jne
dec
enter
leave
push
retf
inc
out
retf
mov
mov
scas
in
int3
inc
popf
push
int
mov
int
jl
int
adc
int
push
clc
int
xchg
adc
adc
aad
iret
jle
mov
sar
mov
shl
(bad)
sub
cs
mov
pop
cwde
cmps
aam
xor
(bad)
sub
xchg
(bad)
sbb
movs
pop
cwde
xlat
sub
xlat
xlat
pop
inc
fst
(bad)
or
pop
adc
fcomp
adc
adc
xchg
call
cmp
fnstsw
std
or
or
ret
dec
sub
fdivr
ret
pop
shr
sbb
jp
inc
popf
mov
out
shl
out
xchg
clc
inc
out
mov
inc
jl
(bad)
(bad)
in
lock
xor
push
cmc
(bad)
repnz
and
mul
mov
mul
or
clc
hlt
xor
sub
stc
cmps
xor
cli
jno
add
sti
hlt
mov
sbb
mov
shr
jecxz
add
cmp
daa
pop
add
cdq
test
dec
inc
xor
push
jo
add
call
inc
add
div
dec
pop
push
dec
sbb
jb
sbb
push
jmp
xchg
adc
or
mov
or
imul
dec
push
pop
or
cld
push
push
(bad)
and
fmul
jmp
xor
jle
jle
dec
or
adc
sub
add
adc
xor
test
push
add
lahf
pop
xchg
test
shl
xchg
sbb
xchg
in
sbb
or
stos
sbb
push
scas
sbb
rol
gs
pop
sbb
mov
sbb
mov
sbb
cdq
mov
push
and
and
mov
and
in
jne
xor
jmp
out
lea
adc
sub
pop
out
outs
pop
scas
sub
xlat
std
sub
xchg
sub
push
mov
sub
sbb
ja
(bad)
out
cs
data16
xor
add
jmp
dec
mov
xor
lds
xor
lods
pop
xor
fldl2e
nop
aaa
xor
aaa
dec
fadd
cmp
bound
cmp
add
push
and
cmp
mov
sub
mov
add
cmp
add
dec
pop
inc
adc
test
inc
push
push
add
inc
test
pop
inc
ss
loopne
push
push
call
dec
loopne
mov
popf
inc
std
inc
or
sub
bnd
inc
cmps
out
loop
retf
inc
and
inc
repnz
push
dec
sbb
cdq
dec
and
xchg
clc
dec
mov
xor
dec
aad
sbb
dec
lods
jbe
dec
fsub
movs
dec
jecxz
inc
dec
les
push
jmp
scas
addr16
int3
stos
pop
push
pop
inc
inc
push
dec
dec
dec
push
das
mov
inc
push
sub
lahf
push
mov
dec
push
mov
jo
push
jp
(bad)
push
clc
addr16
push
mov
scas
dec
push
loopne
gs
out
sbb
ret
xchg
aaa
pop
inc
inc
pop
popf
cmp
or
push
pop
jnp
pop
pop
(bad)
lds
pop
jmp
pop
xor
dec
adc
popf
call
pop
sbb
popa
les
(bad)
out
in
(bad)
std
pop
fs
push
xor
dec
repz
ss
imul
adc
ins
push
test
ins
adc
pushf
sbb
outs
pop
fstp
jo
pop
xor
and
push
xor
cwde
jbe
mov
push
js
bound
jb
pop
jns
push
pushf
jns
mov
test
mov
jge
adc
jb
add
push
add
aad
add
lock
add
adc
add
or
add
pop
add
add
add
push
add
lods
add
add
jne
add
cmp
add
sysret
add
enter
or
add
out
add
add
adc
add
add
lahf
or
add
add
jl
add
hlt
or
add
add
call
add
pop
add
xchg
or
add
or
add
lds
add
or
add
or
add
adc
add
adc
add
add
add
add
ins
or
add
add
jns
add
cld
adc
add
add
add
adc
add
rol
add
or
add
push
add
imul
add
rol
add
sbb
add
fwait
add
add
adc
add
xchg
push
add
jmp
or
add
adc
add
sldt
adc
add
dec
add
add
cmp
add
in
add
add
imul
add
add
ss
add
and
add
add
sldt
push
or
add
add
add
add
add
test
add
adc
add
int3
or
add
sbb
or
add
or
add
push
add
pop
or
add
push
add
lods
or
add
or
add
add
mov
add
arpl
add
cmp
add
call
add
sbb
add
or
add
add
add
add
add
add
add
rcr
add
rcr
add
add
add
or
add
adc
add
add
stc
sbb
add
adc
add
pop
add
sahf
adc
add
mov
add
lds
add
jle
add
repnz
out
add
sbb
add
cmps
push
add
loope
add
sbb
add
add
outs
push
add
push
add
add
sldt
adc
add
aas
or
add
sub
add
mov
adc
add
add
fmul
add
push
pop
add
fist
add
in
add
das
or
add
add
jl
add
adc
add
(bad)
adc
add
add
fiadd
add
inc
add
add
add
jmp
add
mov
push
add
adc
add
ror
add
mov
add
jno
add
sub
add
adc
add
add
add
pop
add
out
pop
add
dec
adc
add
add
mov
add
pop
add
add
add
test
add
add
add
adc
add
adc
add
or
add
add
fadd
add
jb
add
ret
add
add
adc
add
xor
add
sbb
add
or
add
adc
add
sbb
add
sbb
add
sbb
add
add
push
or
add
add
xchg
add
sbb
add
adc
add
data16
add
add
add
add
dec
push
add
xchg
adc
add
add
push
adc
add
add
add
movs
adc
add
adc
add
add
push
sldt
cmp
add
not
add
fcomp
add
cmp
add
mov
add
fild
add
jbe
add
les
add
test
add
aam
add
test
add
add
add
inc
sbb
add
add
pop
add
add
add
add
sbb
add
adc
add
adc
add
pop
add
mov
add
push
or
add
add
jmp
add
pop
sbb
add
add
add
add
std
add
add
scas
or
add
adc
add
or
add
add
stos
sbb
add
pop
add
push
adc
add
add
mov
pop
add
outs
add
add
pop
add
cs
add
sbb
pop
add
or
add
push
add
pop
or
add
or
add
or
add
push
add
xor
add
fwait
or
add
add
add
or
add
or
add
add
imul
add
add
pop
or
add
or
add
or
add
add
mov
add
ds
add
push
add
cmp
add
dec
or
add
add
pop
add
add
add
or
add
ja
add
or
add
xor
add
add
add
adc
add
inc
add
add
adc
add
add
ror
add
add
add
or
add
test
add
mov
add
add
pop
add
and
add
repnz
add
and
add
outs
add
ins
add
add
dec
add
jbe
outs
add
add
add
add
push
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
aaa
add
push
push
add
add
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
push
add
adc
add
add
add
add
add
add
add
add
pusha
add
push
sbb
add
add
add
add
add
add
push
add
add
add
add
add
add
add
jo
add
sbb
add
add
add
add
add
add
add
jnp
add
sbb
add
add
add
add
add
add
test
add
sbb
add
add
add
add
add
add
nop
add
adc
add
add
add
add
add
add
add
add
popf
add
push
sbb
add
add
add
add
add
add
movs
add
push
sbb
add
add
add
add
add
add
lods
add
adc
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
int3
add
adc
sbb
es
add
add
add
add
add
add
xlat
add
adc
sbb
add
add
add
add
add
add
jecxz
add
add
add
add
add
add
add
repnz
adc
dec
add
add
add
add
add
add
add
add
cli
add
push
sbb
dec
add
add
add
add
add
add
or
add
sbb
ins
add
add
add
add
add
add
add
add
pop
add
adc
outs
add
add
add
add
add
add
add
push
add
push
sbb
jo
add
bound
sbb
add
add
add
add
cmp
add
sbb
add
add
add
add
add
add
inc
add
push
sbb
add
add
add
add
add
dec
add
adc
add
add
add
add
add
add
pop
add
or
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
je
add
sbb
add
add
add
add
add
add
jle
add
add
add
add
add
mov
add
sbb
add
add
add
add
add
add
xchg
add
adc
add
add
add
add
add
add
sahf
add
adc
add
add
add
add
add
add
add
add
add
scas
add
or
add
add
add
add
add
add
mov
add
push
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
enter
push
add
add
add
add
add
add
add
rol
add
pop
add
add
add
add
add
add
add
add
add
fiadd
add
pop
add
add
add
add
add
add
add
jmp
add
pop
add
add
add
add
add
add
add
add
repz
adc
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
push
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
and
add
and
dec
add
add
add
add
add
add
add
add
sub
add
es
add
add
add
add
add
add
add
xor
add
es
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
inc
add
push
es
add
add
add
add
add
add
push
add
adc
add
add
add
add
add
add
add
add
add
arpl
add
es
add
add
add
add
add
add
add
imul
sbb
add
add
add
jae
add
daa
add
add
add
add
add
add
add
add
jp
add
daa
add
add
add
add
add
add
add
add
xchg
add
daa
add
add
add
add
add
add
add
xchg
add
adc
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
sub
add
add
add
add
add
add
rol
or
add
add
add
add
add
add
int3
add
adc
add
add
add
add
add
add
add
add
add
(bad)
add
adc
add
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
icebp
add
or
add
add
add
add
add
add
inc
add
sub
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
adc
add
sub
add
add
add
add
add
add
add
add
and
add
sub
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
inc
add
adc
add
add
add
add
add
add
add
add
dec
add
push
sub
add
add
add
add
dec
add
or
add
add
add
add
add
add
push
add
or
add
add
add
add
add
add
add
push
sub
add
add
add
add
add
add
outs
add
or
add
add
add
add
add
add
jle
add
add
add
add
add
add
add
xchg
add
sub
add
add
add
add
add
add
add
xchg
add
push
sub
add
add
add
add
add
add
pushf
add
adc
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
stos
add
or
add
add
add
add
add
add
mov
add
sub
outs
add
add
add
add
add
add
add
add
lds
add
sub
jb
push
pop
add
add
add
add
add
add
into
add
adc
add
add
add
add
add
add
add
add
add
aad
add
cs
add
add
add
add
add
add
add
jecxz
add
add
add
add
add
add
add
out
add
adc
add
add
add
add
add
add
add
add
add
test
inc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
add
sbb
or
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
cmp
or
add
add
add
add
add
add
inc
add
adc
add
add
add
add
add
add
add
add
dec
add
adc
add
add
add
add
add
add
add
add
add
pop
add
adc
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
jae
add
xor
add
add
add
add
add
add
add
add
jge
add
xor
add
add
add
add
add
add
add
xchg
push
xor
add
add
add
add
add
add
lea
adc
add
add
add
add
add
add
add
add
xchg
add
adc
add
add
add
add
add
add
add
add
fwait
add
adc
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
xor
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
leave
add
push
xor
sub
add
add
add
xlat
add
adc
sub
add
add
add
add
add
add
add
fld
push
xor
sub
push
add
add
add
add
add
jmp
add
xor
dec
add
add
add
add
add
add
test
xor
pusha
add
add
add
add
add
add
add
std
add
adc
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
or
add
xor
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
push
add
adc
add
add
add
add
add
add
sub
add
ss
add
add
add
add
add
add
add
cmp
push
add
add
add
add
add
add
add
inc
add
sbb
add
add
add
push
add
cmp
ins
add
add
add
add
add
pusha
add
inc
add
add
add
add
add
add
add
ins
add
push
add
add
add
add
add
add
js
add
aaa
add
add
add
add
add
add
add
add
add
xchg
ss
add
add
add
add
add
mov
cmp
add
add
add
add
add
add
add
call
add
add
add
add
add
add
cmps
add
push
jb
and
xor
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
les
adc
add
add
add
add
add
rol
sbb
add
add
add
add
add
add
loope
add
add
add
add
add
add
add
out
add
sub
add
add
add
add
add
add
add
test
add
add
add
add
add
std
add
inc
add
add
add
add
add
add
add
add
pop
push
add
cmp
add
add
add
add
add
add
add
add
adc
add
cmp
add
add
add
add
add
add
add
add
pop
push
add
cmp
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
inc
push
add
cmp
add
add
add
add
add
add
push
push
add
add
add
add
add
add
add
pop
push
add
cmp
add
add
add
add
add
add
arpl
add
add
add
add
add
add
add
outs
push
add
add
add
add
add
add
add
jbe
add
cmp
add
add
add
add
add
add
jg
add
cmp
add
add
add
add
add
add
add
mov
add
cmp
push
add
add
add
add
add
add
add
add
call
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
cmp
cmp
add
add
add
add
add
add
mov
add
add
add
add
add
add
mov
outs
add
add
add
add
add
add
into
push
add
cmp
add
add
add
add
add
fild
add
cmp
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
hlt
push
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
add
add
add
add
add
pop
pop
add
ds
add
add
add
add
add
add
add
add
and
add
ds
add
add
add
add
add
add
add
das
pop
add
ds
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
inc
pop
add
ds
add
add
add
add
add
add
push
pop
add
ds
add
add
add
add
add
add
pop
pop
add
ds
add
add
add
add
add
add
imul
adc
add
add
add
add
add
add
add
add
ja
add
aas
add
add
add
add
add
add
add
add
test
add
aas
add
add
add
add
add
add
add
pop
add
aas
add
add
add
add
add
add
add
cdq
pop
add
aas
add
add
add
add
add
add
add
add
cmps
pop
add
inc
add
add
add
add
add
add
add
add
add
scas
pop
add
inc
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
ret
or
add
add
add
add
add
add
retf
pop
add
inc
add
add
add
add
add
add
add
fiadd
add
inc
add
add
add
add
add
add
add
add
out
add
inc
add
add
add
add
add
add
add
add
add
test
push
inc
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
or
add
inc
add
add
add
add
add
add
add
adc
add
inc
add
add
add
add
add
add
add
add
and
add
inc
add
add
add
add
add
add
add
sub
add
inc
add
add
add
add
add
add
add
xor
add
inc
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
inc
or
adc
add
add
add
add
add
add
add
add
dec
or
or
add
add
add
add
add
add
pop
or
adc
push
add
add
add
add
add
add
add
or
adc
sbb
add
add
add
add
add
add
outs
or
or
add
add
add
add
add
add
ja
add
inc
add
add
add
add
add
add
add
add
or
adc
dec
add
add
add
add
add
add
add
xchg
add
add
add
add
add
xchg
or
or
add
add
add
add
add
add
fwait
or
adc
jo
dec
add
add
add
add
add
add
add
test
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
(bad)
or
push
inc
add
add
add
add
add
add
add
iret
or
push
inc
add
add
add
add
add
add
add
(bad)
add
inc
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
or
adc
outs
add
add
add
add
add
add
add
add
dec
add
inc
add
add
add
add
add
add
add
add
add
or
add
inc
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
and
add
dec
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
cmp
add
dec
add
add
add
add
add
add
add
dec
or
push
dec
add
add
add
add
add
add
add
pop
or
or
add
add
add
add
add
add
pop
or
adc
inc
add
add
add
add
add
add
add
add
or
adc
adc
add
add
add
add
add
add
jb
add
dec
add
add
add
add
add
add
add
add
add
js
add
dec
add
add
add
add
add
add
add
add
add
mov
add
dec
add
add
add
add
add
add
add
xchg
or
adc
dec
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
scas
or
adc
push
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
les
add
dec
add
add
add
add
add
add
add
add
into
or
or
add
add
add
add
add
add
fisttp
add
dec
add
add
add
add
add
add
add
jmp
add
dec
add
add
add
add
add
add
add
add
add
repz
adc
cmp
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
or
add
dec
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
dec
add
add
add
add
add
add
add
add
add
xor
add
dec
add
add
add
add
add
add
add
add
xor
add
dec
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
inc
or
push
dec
add
add
add
add
add
add
add
dec
or
adc
cmp
add
add
add
add
add
add
add
pop
or
adc
dec
add
add
add
add
add
add
add
add
or
adc
dec
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
js
add
dec
add
add
add
add
add
add
add
add
or
cmp
adc
add
add
add
add
add
mov
add
add
add
add
add
add
add
cdq
or
adc
dec
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
stos
or
push
dec
add
add
add
add
add
add
add
mov
add
dec
add
add
add
add
add
add
add
ror
push
dec
add
add
add
add
add
add
add
retf
or
push
dec
add
add
add
add
add
add
add
fmul
add
dec
add
add
add
add
add
add
add
add
loop
add
dec
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
cli
or
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
and
add
pusha
add
add
add
add
add
add
add
daa
or
adc
dec
add
add
add
add
add
add
add
aaa
or
or
add
add
add
add
add
add
inc
or
adc
daa
add
add
add
add
add
add
add
add
push
or
adc
xor
inc
add
add
add
add
add
add
pop
or
push
bound
add
add
add
add
add
add
imul
adc
add
add
add
add
add
add
add
add
jne
add
fs
add
add
add
add
add
add
jg
add
add
add
add
add
add
add
mov
add
fs
add
add
add
add
add
add
add
add
cwde
or
or
add
add
add
add
add
add
sahf
or
adc
add
add
add
add
add
add
add
add
lods
or
push
data16
add
add
add
add
add
add
mov
add
add
add
add
add
add
ret
or
push
data16
add
add
add
add
add
add
int3
or
push
data16
add
add
add
add
add
add
fmul
add
push
add
add
add
add
add
add
add
out
add
push
add
add
add
add
add
add
repz
adc
dec
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
or
add
add
add
add
add
add
pop
or
push
push
add
add
add
add
add
push
or
push
push
add
add
add
add
add
cs
or
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
or
push
push
xor
add
add
add
add
add
push
or
push
push
cmp
add
add
add
add
pop
or
adc
inc
add
add
add
add
add
add
add
add
bound
or
add
add
add
add
add
add
jo
add
push
jb
inc
add
add
add
add
add
jge
add
ins
add
add
add
add
add
add
add
add
add
mov
push
ins
add
add
add
add
add
add
add
xchg
or
adc
add
add
add
add
add
add
add
add
sahf
or
or
add
add
add
add
add
add
test
add
add
add
add
add
add
mov
add
outs
add
add
add
add
add
add
add
add
ror
outs
add
add
add
add
add
add
int3
or
or
add
add
add
add
add
add
fimul
or
add
add
add
add
add
add
loop
add
add
add
add
add
add
add
in
or
adc
daa
add
add
add
add
add
add
add
cli
or
or
add
add
add
add
add
add
or
xor
add
add
add
add
add
add
adc
xor
es
add
add
add
add
and
dec
add
add
add
add
add
add
add
sub
add
outs
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
aas
or
sbb
add
add
add
add
add
add
add
dec
or
sbb
add
add
add
pop
or
pop
add
add
add
add
add
bound
cmp
add
add
add
add
add
ins
or
pusha
add
add
add
add
add
add
add
jne
add
add
add
add
add
add
add
jle
add
jb
adc
add
add
add
add
add
add
mov
sbb
cmp
sbb
add
add
nop
or
sbb
add
add
add
sahf
or
sub
adc
add
add
add
add
add
add
lods
or
inc
add
add
add
add
add
mov
add
jb
jp
sbb
add
add
add
add
add
ror
add
add
add
add
add
add
int
add
je
sbb
add
add
add
add
add
aam
add
jp
adc
cmp
add
add
add
add
add
add
fisttp
sbb
add
add
add
add
add
add
out
add
jp
xor
add
add
add
add
add
hlt
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
jp
dec
add
add
add
add
add
add
add
add
sbb
add
add
inc
add
add
add
add
daa
push
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
cmp
add
add
inc
add
add
add
add
add
add
inc
push
add
add
cs
add
add
add
add
add
add
dec
push
add
add
cmp
data16
add
add
add
add
push
push
add
add
and
inc
add
add
add
add
add
add
pop
push
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
dec
add
add
add
add
adc
adc
rol
shr
push
add
add
adc
mov
test
rcl
shl
add
add
shr
rcr
rcl
add
sar
shl
sar
add
test
mov
rol
add
add
rol
ror
xchg
or
add
push
shl
ror
shl
add
test
lahf
ror
shl
add
mov
mov
shl
add
add
adc
shl
shl
add
shl
rcl
shl
push
or
ror
rcr
mov
popf
sar
add
rol
shl
shl
push
sldt
add
sar
rcl
shl
adc
mov
shr
ror
push
adc
add
adc
mov
sar
rcr
add
add
ror
rcl
rol
add
mov
rcr
push
adc
add
or
adc
shr
shl
add
ror
cmps
shl
shr
add
xchg
mov
(bad)
shl
pop
add
add
shr
rol
sar
push
sbb
add
push
shl
mov
sar
add
rol
rol
rcl
add
ror
shr
ror
add
shl
mov
shr
push
sbb
add
adc
lahf
rcl
shl
rcl
add
or
test
mov
xchg
shl
push
push
add
add
ror
cwde
rcr
push
pop
add
add
mov
ror
push
and
add
adc
mov
ror
rcr
add
add
test
rcl
push
and
add
or
(bad)
rcr
shr
add
add
shl
sar
shl
push
and
add
push
shl
shl
shl
push
shl
mov
mov
push
add
add
sar
rcr
sar
add
adc
(bad)
ror
mov
shl
add
sar
rol
shl
add
shr
rol
rcr
sub
add
or
mov
rcr
push
sub
add
adc
xchg
scas
rol
rcr
add
add
add
sar
rol
shr
sub
sar
rcr
sar
add
adc
mov
shl
rcr
push
das
add
add
rol
ror
shl
add
add
shr
rcr
rcl
add
shl
rcr
lahf
shl
add
mov
shl
push
xor
add
adc
xchg
xchg
sar
shl
mov
add
rcr
rcr
ror
add
rol
rcr
shl
add
or
test
mov
mov
mov
lods
shl
add
sar
rcr
rol
push
cmp
add
adc
mov
mov
rol
xchg
rcr
add
mov
shr
cmp
add
adc
mov
rol
shl
add
add
rcr
rol
movs
rol
add
ror
ror
rcl
add
add
lods
ror
sar
add
add
sar
pushf
rol
push
aas
add
add
shr
rcl
shl
push
inc
add
add
rcr
sar
rcr
add
or
test
rcl
push
inc
add
add
ror
shl
cmps
push
inc
add
add
rol
shl
rcl
add
shr
rcl
popf
push
inc
add
add
ror
sar
rcr
add
add
ror
shl
xchg
popf
push
inc
add
add
ror
rcr
rcr
add
add
xchg
shl
ror
add
add
shl
rcr
mov
dec
add
add
ror
rcl
shl
add
add
shl
sar
sar
add
add
rol
rcr
shr
push
shl
xchg
shr
push
dec
add
add
shl
rcl
xchg
push
dec
add
add
mov
shl
push
push
add
add
sar
shl
scas
rol
add
add
rol
rol
rcr
push
push
add
add
rol
shl
rcr
push
push
add
add
rcr
shl
shr
add
add
shr
rol
rol
add
shl
sar
ror
add
add
stos
shr
xchg
shl
add
ror
rcl
shr
add
add
sar
shl
ror
add
rol
shr
shl
add
shr
shl
rol
push
pop
add
add
shl
sar
call
add
add
shr
ror
rol
push
pop
add
add
shr
shr
rcr
add
rol
test
cmps
sar
add
add
popf
rcl
mov
add
add
sar
shl
add
add
add
ror
sar
shl
push
bound
add
push
ror
rol
sar
add
stos
shr
mov
add
add
rol
shl
rcr
add
add
movs
rcr
xchg
rol
add
rcr
adc
test
movs
sar
add
rol
cwde
ror
rcr
add
add
rol
rol
mov
add
add
rcr
rcr
rol
add
add
shl
shl
mov
push
imul
add
scas
shl
shl
add
add
mov
xchg
rcr
ror
add
shl
sar
shr
add
mov
popf
rcr
shr
or
cmps
rcr
rcr
add
add
rol
sar
sar
add
rcr
test
shl
add
rol
shl
rol
push
jae
add
adc
test
mov
stos
rol
mov
pushf
push
je
add
push
sar
rcr
ror
add
shl
shl
shl
add
push
shl
test
pushf
rol
add
add
shl
mov
mov
lahf
shr
push
js
add
adc
mov
ror
rol
push
jns
add
adc
cmps
rcr
rcl
ror
add
shr
rcr
rcr
add
add
test
ror
push
jl
add
adc
mov
stos
shl
rcl
push
jge
add
adc
mov
ror
rcr
add
add
test
mov
shl
add
add
shr
shr
sar
add
sar
rcl
scas
shr
add
adc
cmps
shl
shr
rcr
add
add
movs
shr
rcr
add
add
rcr
shl
shr
push
ror
shl
ror
add
shl
shr
rol
push
xchg
add
push
sar
shl
ror
add
ror
shl
sar
add
push
rcr
sar
shl
add
rol
shl
shl
add
add
xchg
shl
sar
add
add
shl
rcr
shl
add
adc
lahf
rcr
sar
mov
lea
add
adc
xchg
mov
call
shr
push
mov
add
adc
cmps
sar
ror
shl
add
shl
ror
ror
add
mov
stos
shr
ror
add
ror
shl
shl
add
add
sar
rcr
rcl
push
xchg
add
add
mov
sar
push
xchg
add
add
cmps
shl
rcr
add
adc
lods
sar
ror
shl
add
add
shl
rol
shl
adc
test
mov
stos
rcr
sar
add
add
sar
rcr
ror
push
cdq
add
add
lods
sar
rcr
add
or
mov
pushf
shl
rcr
add
sar
rcr
shl
push
pushf
add
add
shl
ror
rol
add
add
scas
rol
shr
add
add
scas
shr
rcl
add
add
ror
rcr
rol
push
mov
rol
fwait
rcr
push
mov
shl
shl
mov
mov
mov
rcr
shr
shl
push
mov
rcr
shl
rcr
movs
add
add
shl
lods
rcr
rcr
add
ror
(bad)
shl
shl
add
test
mov
rol
add
add
rol
sar
rcr
push
test
add
or
test
pushf
rol
shl
add
rcr
shr
rol
add
add
shl
shl
cmps
shl
add
adc
mov
adc
rcl
rcr
push
lods
add
add
rol
rcr
scas
rcl
add
test
xchg
shr
ror
add
shl
call
push
scas
add
add
sar
mov
fwait
shr
mov
add
mov
shl
mov
add
adc
lods
shr
shl
shl
add
add
rol
rol
shr
add
add
ror
ror
add
add
add
ror
ror
mov
cwde
rol
add
shr
shl
shl
add
push
shl
rcl
ror
add
mov
mov
adc
rcl
add
add
ror
sar
rol
push
mov
shl
sar
shl
add
push
sar
rol
rcl
add
sar
shl
sar
add
add
shl
rcr
ror
add
mov
popf
shr
ror
add
mov
lahf
sar
rcr
add
shl
rcr
rol
add
add
rcr
test
mov
mov
add
add
sar
rol
rcr
add
shl
mov
lods
ror
push
ret
add
add
mov
pushf
sar
mov
les
add
or
mov
rcr
push
lds
add
adc
mov
test
test
sar
push
mov
add
test
xchg
shl
cmps
push
mov
pushf
shr
test
mov
lahf
shl
add
adc
lods
shl
rcl
sar
add
add
shr
sar
rol
add
sar
shl
shl
add
add
rol
sar
shl
add
add
xchg
rcr
mov
cmps
push
int
add
adc
mov
mov
shl
rcr
or
xchg
lahf
shl
ror
add
shr
ror
shl
push
rol
sar
shl
add
ror
shl
ror
add
add
shl
shr
ror
rol
add
adc
mov
mov
scas
ror
sar
push
aam
add
adc
mov
xchg
mov
shl
shr
add
mov
stos
rol
rcl
add
adc
mov
sahf
shl
push
shr
ror
mov
add
shr
mov
xchg
xchg
xchg
stos
rcr
add
stos
rcr
shl
add
add
shr
rcr
sar
add
add
rcr
rcl
shl
add
shl
shl
rol
add
rcr
shl
shl
add
shr
shl
popf
push
fild
add
or
test
rcr
loopne
add
adc
pushf
shr
rcr
rcr
add
pushf
sar
rol
add
add
rcr
shr
ror
push
jecxz
add
push
sar
stos
sar
push
in
add
adc
mov
adc
sahf
rol
shr
add
shl
shr
rol
add
add
shr
shl
shl
add
add
rcr
shl
ror
add
add
shl
rcr
shl
add
adc
mov
scas
rcr
sar
jmp
shl
ror
push
jmp
add
or
mov
stos
rcr
shl
add
rcr
rol
rcr
add
add
ror
rcl
shr
add
adc
xchg
xchg
shl
add
mov
mov
movs
sar
push
lock
add
sar
rcr
shl
adc
test
movs
ror
cmps
rol
push
repnz
add
test
stos
shl
shl
add
test
rol
push
hlt
add
add
rcr
rcr
shr
add
shl
rcr
ror
push
test
add
shl
shl
rcl
add
add
mov
ror
push
clc
add
add
rol
shr
rcl
add
add
rcr
adc
rcr
shl
adc
mov
sahf
rol
rcr
push
sti
add
add
shl
lods
shl
rol
add
add
shl
rcr
mov
stos
push
std
add
add
ror
rcl
ror
inc
add
adc
lahf
rol
rol
shl
add
shr
shl
ror
add
add
sahf
rcr
shl
add
add
mov
xchg
xchg
shr
push
add
add
or
test
movs
rcr
xchg
push
add
add
or
xchg
(bad)
shr
rol
add
shr
mov
rol
push
add
sar
rcr
push
push
add
add
rol
ror
rcr
push
pop
add
add
sar
rcr
shl
push
or
add
adc
mov
pushf
shl
rcr
shr
add
shl
shr
rol
add
add
stos
rol
ror
add
add
shl
mov
(bad)
shl
or
add
push
shr
mov
rol
add
rol
rol
shl
push
push
add
add
popf
sar
adc
push
sgdtd
add
rcr
rol
sar
add
add
sar
rol
ror
push
adc
add
adc
mov
xchg
xchg
shr
shl
add
add
shr
shr
shr
add
add
shl
shl
sar
add
rcr
rol
rcr
add
add
mov
shl
push
push
add
add
mov
shl
push
pop
add
add
mov
rol
sbb
add
or
scas
rcr
stos
rol
add
shl
ror
shr
add
rcr
shl
rcr
add
add
mov
lahf
sar
rcr
add
rol
shr
lods
shl
add
add
rol
shl
shl
add
add
shl
shl
shr
push
pop
add
add
lods
sar
shl
add
add
mov
cwde
ror
rol
add
rcr
stos
sar
rol
add
add
shl
ror
shl
add
scas
rcr
rol
add
or
popf
shr
rcl
add
add
shl
shr
rol
add
add
rcr
shl
rcl
add
shl
shr
rcr
add
shl
shr
fwait
shl
add
shr
sar
rcr
sub
add
adc
mov
lods
rcl
shl
ror
adc
movs
rcr
sar
sar
add
add
rcr
rol
rcl
add
shr
shl
rcr
add
add
shl
rcr
sar
add
add
ror
shr
rol
push
xor
add
or
mov
popf
rcl
rol
add
rol
ror
shl
add
mov
adc
ror
push
xor
add
push
shr
shr
rcr
add
rol
ror
popf
push
xor
sar
sahf
shl
mov
add
add
mov
shl
push
aaa
add
add
shl
rol
shl
add
add
sar
shl
mov
xchg
shr
push
shl
shl
sar
add
rol
rol
rcr
add
ror
sar
shl
add
ror
sar
sar
add
shr
rol
shl
add
add
fwait
shl
mov
add
add
rcr
fwait
ror
inc
add
add
rol
rcr
mov
add
add
add
shl
rol
shl
push
inc
add
add
shl
rcr
shr
add
add
shr
sar
sar
add
adc
mov
sar
shl
inc
add
add
ror
shl
ror
push
inc
add
add
rcr
rcr
rcr
add
add
ror
rcl
movs
shr
add
push
shr
rcr
sar
add
rcr
ror
shl
add
sar
rol
shl
add
ror
rol
shl
add
shr
shl
shl
add
add
mov
mov
rcl
add
add
rcr
rol
sar
add
add
sar
shr
shl
push
add
add
ror
mov
pushf
rol
sar
add
push
fstp
les
lock
sbb
stc
je
(bad)
stc
xor
jne
int3
cmc
add
push
cmps
(bad)
lock
sbb
mov
(bad)
loop
imul
sub
inc
or
or
in
sub
xchg
mov
ins
cmc
push
fisubr
sub
jae
jecxz
cld
mov
ins
jno
push
stc
mov
into
jbe
mov
xor
adc
leave
mov
jno
into
or
sahf
sbb
push
cli
cmp
fidivr
jle
(bad)
clc
lds
(bad)
stc
rcl
fisubr
jno
sbb
push
or
(bad)
push
enter
cwde
mov
inc
fnsave
lods
stc
xor
into
loope
mov
arpl
ins
mov
push
jae
or
fwait
popf
call
add
mov
mov
fsubr
fs
inc
add
int3
jp
jl
je
cli
repz
push
sub
sub
fcom
loop
arpl
imul
sub
or
lods
icebp
popa
fnstenv
movs
jmp
(bad)
fiadd
ja
sahf
int
out
inc
mov
xchg
dec
or
mov
inc
es
and
rcr
jge
adc
fs
jge
adc
fwait
les
popa
in
inc
outs
fs
sbb
or
hlt
push
dec
icebp
pop
iret
pop
int3
push
lods
mov
cmc
push
dec
outs
add
arpl
cdq
mov
nop
imul
mov
popf
xlat
mov
dec
inc
push
movs
pop
retf
into
icebp
xchg
sub
push
dec
cmp
out
add
mov
jae
pop
cwde
test
add
mov
sbb
push
xor
sub
cdq
jmp
cli
cmp
shl
stos
pop
mov
jle
push
sub
fidiv
pop
ins
enter
dec
xchg
cmps
ins
mov
enter
adc
xor
sti
pusha
cld
mov
pop
arpl
test
inc
call
mov
into
test
scas
loope
add
pop
jae
js
push
jge
inc
mov
rol
xor
or
in
xchg
(bad)
xchg
add
rcl
mov
jo
dec
or
pop
test
aas
mov
push
imul
jae
(bad)
add
push
cld
clc
pop
sub
cs
and
mov
bound
scas
in
xor
shl
in
outs
jmp
sbb
pop
jae
loope
es
adc
das
xlat
imul
arpl
xchg
or
gs
cdq
sbb
inc
fld
stos
js
std
and
sbb
lds
stc
icebp
(bad)
cmps
shr
ficomp
inc
and
aas
daa
push
bound
test
and
iret
xor
retf
fwait
adc
or
jae
xchg
or
pop
push
std
fdivr
fld
mov
mov
mov
nop
loopne
lods
call
cmp
jbe
inc
sub
cwde
mov
mov
cmp
(bad)
jmp
or
pop
imul
call
sbb
sbb
or
outs
and
add
xor
pop
ds
and
fld
(bad)
mov
inc
into
push
push
xor
out
iret
mov
sub
imul
add
dec
and
aam
cmp
std
repz
mov
retf
pop
retf
sub
mov
sub
ins
or
aaa
jnp
xchg
retf
push
cmp
adc
rep
dec
push
imul
push
push
pop
pop
mov
cmp
mov
call
mov
std
mov
test
ss
out
fdiv
jle
inc
dec
mov
cli
lods
jp
mov
test
or
mov
icebp
sub
sub
adc
xor
push
(bad)
sahf
lahf
test
pusha
pop
cmp
jbe
sub
fst
jmp
retf
ror
jge
in
jge
dec
jno
pop
retf
(bad)
retf
and
out
xchg
sbb
adc
inc
jle
ret
lods
xor
leave
in
hlt
cld
adc
leave
and
sbb
mov
push
sub
sub
push
push
pop
xchg
hlt
adc
cwde
fldenv
mov
jle
inc
adc
mov
ds
(bad)
(bad)
push
xchg
adc
rcl
fmul
pop
sbb
xor
xlat
and
inc
pop
jge
out
retf
mov
ret
sbb
test
mov
fchs
in
pop
or
cmc
fwait
sub
call
or
jge
pop
sbb
mov
add
xor
xlat
out
and
imul
mov
push
push
cmp
mov
dec
inc
dec
shr
outs
jb
cmps
sbb
sbb
neg
jns
retf
cmp
pushf
outs
mov
cld
mov
test
sahf
pop
jp
cs
ja
jae
inc
movs
nop
dec
out
in
sub
fs
cdq
xor
cwde
fwait
dec
or
std
nop
cmp
adc
jecxz
adc
(bad)
shl
das
neg
(bad)
sahf
adc
(bad)
pop
xor
add
scas
aam
retf
out
iret
or
dec
mov
repz
test
mov
inc
ins
mov
and
or
in
or
push
inc
scas
and
ds
outs
int
or
sahf
sub
inc
inc
inc
and
mov
dec
int3
jne
cmp
stc
fisub
fucomip
push
pop
cmc
(bad)
(bad)
in
add
mov
inc
ins
inc
call
test
add
inc
retf
sub
mov
pusha
push
cmp
cmp
hlt
stos
dec
xor
cli
call
inc
fistp
adc
inc
mov
test
retf
es
(bad)
xor
push
int
or
cmp
ja
popf
xor
push
cwde
loop
sbb
retf
ret
and
mov
enter
xchg
inc
sbb
pop
bound
mov
dec
cmps
mov
push
popa
outs
rcr
cmp
hlt
cmps
dec
xor
movs
inc
inc
sbb
inc
mov
adc
gs
add
jne
mov
daa
lods
xchg
add
jno
ficom
jg
js
xchg
cmp
adc
dec
(bad)
clc
xchg
iret
fisub
cmp
data16
sub
or
push
or
jae
xor
into
retf
test
pop
out
pop
mov
cmp
fcomp
call
out
(bad)
lds
or
(bad)
pop
jno
mov
pop
push
push
and
xor
jl
push
inc
jne
aaa
jmp
pop
das
out
mov
popf
cmp
ins
pushf
pop
sub
sub
dec
aam
and
mov
mov
fs
sub
test
gs
sub
push
out
push
xchg
ret
inc
dec
pop
mov
pop
mov
pop
and
jmp
sub
cmp
(bad)
or
xchg
mov
fst
or
repnz
pushf
xchg
mov
arpl
adc
(bad)
bound
lahf
fs
jb
push
mov
ror
imul
xchg
mov
dec
rcr
fdiv
(bad)
jecxz
mov
and
mov
std
mov
scas
lods
fnstcw
scas
adc
xchg
xchg
mov
inc
xor
pop
scas
in
test
dec
push
in
dec
sbb
pop
dec
adc
in
hlt
adc
mov
mov
mov
xor
cmc
addr16
xchg
push
jbe
sub
addr16
fdivr
lds
xlat
dec
sbb
pop
or
add
mov
push
push
int3
es
pop
gs
jl
into
das
xor
ret
pop
mov
push
inc
leave
mov
jg
pop
fisttp
lods
cdq
pop
and
retf
and
xchg
jno
(bad)
aad
and
add
jle
mov
fdiv
shl
ins
in
push
pop
movs
addr16
(bad)
test
popa
dec
add
enter
cmp
(bad)
jg
push
pop
adc
and
mov
pushf
inc
mov
loop
and
lds
dec
sub
mov
push
int3
sbb
imul
(bad)
int
push
arpl
xor
push
fst
ins
mov
das
mov
lods
mov
mov
xchg
adc
xor
in
sub
push
sub
or
fisubr
sub
in
pop
adc
mov
repz
test
sub
scas
inc
cmp
idiv
shr
mov
dec
cld
pusha
imul
adc
pop
ja
imul
sub
lea
and
mov
and
mov
xchg
mov
data16
hlt
(bad)
cli
js
or
cmp
jns
sbb
ror
or
leave
pop
ss
(bad)
shl
mov
pop
fsub
sbb
or
or
sub
push
(bad)
cmp
cli
add
xor
mov
mov
mov
dec
(bad)
lods
int
push
call
add
jb
mov
enter
pushf
push
(bad)
dec
jne
ins
xchg
rcr
repnz
out
xchg
mov
sti
fisttp
scas
scas
fdivr
(bad)
sbb
pop
imul
xlat
adc
dec
and
and
dec
in
retf
leave
cmps
(bad)
cmp
dec
or
jbe
cmp
push
jle
mov
pop
or
sbb
into
pushf
jns
les
mov
inc
outs
mov
mov
lods
ss
push
xor
xchg
sub
pop
jl
xor
dec
xchg
out
mov
inc
inc
enter
or
ss
in
pop
jb
mov
cmp
je
sub
xchg
aad
jae
cmps
retf
or
aas
pop
loopne
test
call
jb
or
sbb
nop
test
ds
inc
fisubr
popa
lods
add
(bad)
shl
fld
and
lds
shr
aas
cmp
sub
lahf
fnstenv
addr16
jbe
mov
mov
dec
sbb
adc
les
jno
clc
xchg
and
pop
add
and
imul
ficom
jle
sbb
inc
mov
(bad)
int3
stc
in
jno
aad
mov
inc
in
aaa
inc
iret
mov
jmp
xchg
mov
and
enter
push
xchg
popa
fsub
adc
inc
(bad)
repnz
sbb
cmp
push
jecxz
adc
sti
in
add
mov
pusha
adc
pushf
std
mov
pop
push
fmul
es
jbe
adc
inc
stos
mov
sbb
xor
in
scas
or
push
cs
jb
imul
cld
jo
in
out
adc
test
adc
lods
dec
cmp
into
push
cmp
in
out
adc
imul
(bad)
rol
inc
ss
jae
scas
jne
mov
in
jbe
mov
sub
js
aas
aad
cmp
popa
push
xor
movs
cmps
cli
mov
loop
and
and
mov
or
ret
adc
cmp
or
add
push
leave
mov
ret
outs
addr16
jmp
aaa
cmp
dec
push
out
jmp
sldt
outs
cmp
out
es
adc
hlt
sahf
enter
dec
in
loopne
pushf
popf
pop
ret
rol
repz
mov
mov
jne
sub
pushf
aad
mov
mov
pop
inc
arpl
aaa
ins
push
(bad)
cmp
dec
xchg
ds
sbb
cmp
rcr
mov
test
pop
addr16
cmp
ret
jle
jmp
aas
mov
shr
xchg
adc
rcr
idiv
mov
shr
xchg
test
jle
pop
pop
mov
xor
fwait
clc
push
cmc
or
push
mov
shr
sub
jns
xlat
in
push
xor
add
lea
test
call
fdiv
sub
push
mov
loopne
sub
xchg
push
sub
movs
adc
(bad)
cmp
test
inc
cmp
mov
mov
lock
jb
mov
imul
mov
jge
mov
je
pusha
dec
push
xor
popf
rol
ja
pop
imul
nop
add
xchg
xor
jle
cli
repnz
nop
loop
sbb
and
test
neg
and
fdivp
cmp
fs
aas
shl
out
add
fcmovb
retf
in
and
mov
fst
cli
inc
mov
cmp
jae
test
push
mov
stc
push
int3
jbe
mov
xor
lock
je
sbb
call
popa
mov
pop
sahf
or
das
jle
enter
cmp
std
sub
int
mov
dec
fcmovne
arpl
add
mov
int3
jns
sbb
dec
popf
lods
dec
mov
or
adc
into
sbb
jmp
popa
out
push
iret
(bad)
ror
retf
mov
adc
fdiv
out
or
xor
setl
ss
outs
sub
popa
rol
inc
fld
push
cmps
(bad)
mov
shr
xchg
daa
adc
hlt
out
(bad)
popf
mov
hlt
out
inc
rcl
leave
pop
iret
repnz
sub
mov
xor
mov
inc
add
xor
sbb
ret
jl
mov
sub
hlt
adc
push
aaa
loope
or
call
rol
sbb
pushf
add
jmp
gs
pop
mov
or
sub
xchg
lock
add
call
out
mov
dec
cmps
mov
push
add
push
fnstsw
fsubr
mov
sbb
sbb
inc
xor
mov
stc
(bad)
pop
pop
arpl
mov
add
jp
pop
mov
mov
leave
jmp
cmp
fs
arpl
leave
jmp
fistp
cli
jmp
cmp
ret
dec
add
mov
sbb
dec
rcl
xor
outs
or
sub
mov
lock
test
add
sbb
daa
daa
mov
mov
sub
mov
adc
popa
or
sahf
data16
(bad)
cmp
pop
mov
not
jle
jmp
pop
in
add
xsaveopt
and
push
jmp
les
jecxz
jmp
loopne
cs
scas
mov
inc
cmp
das
jnp
jmp
cmp
fmul
push
das
cli
(bad)
xchg
arpl
dec
xor
mov
jb
fild
(bad)
jg
mov
dec
gs
jns
or
test
cmp
ins
mov
xor
mov
cmp
xor
mov
inc
push
fstp
xor
sbb
dec
out
jo
xor
xor
mov
dec
jae
movs
cld
mov
scas
ret
cmps
scas
into
jb
scas
xchg
je
or
out
mov
repnz
pop
jnp
in
shr
pop
pop
enter
pop
in
daa
aaa
(bad)
cld
dec
cwde
and
cld
jecxz
cmp
inc
cwde
inc
add
pop
ins
jnp
je
cli
ret
movs
pop
cwde
cmps
sub
cmp
and
leave
dec
sti
adc
push
and
cld
inc
aaa
mov
mov
jb
dec
push
cli
lahf
scas
jle
daa
jne
test
pop
sbb
cmp
mov
cld
cwde
push
push
inc
and
sar
pop
aas
and
jnp
sbb
movs
xchg
or
mov
stc
mul
push
stos
retf
push
cmp
retf
dec
sub
loope
mov
mov
and
pusha
retf
jge
mov
jnp
push
shr
push
jo
lods
xchg
push
popa
(bad)
xchg
stc
test
add
mov
and
fidivr
and
leave
mov
bound
shr
jg
dec
and
icebp
lods
aaa
mul
outs
fwait
cmp
inc
jns
retf
sahf
push
and
xchg
mov
mov
dec
adc
mov
jns
test
das
ins
jbe
inc
ror
imul
mov
in
mov
fisub
and
inc
into
movs
pop
add
push
mov
jl
add
out
mov
loope
int
(bad)
jno
rcr
mov
or
mov
xor
pop
xchg
gs
mov
aam
inc
bnd
bound
mov
sbb
mov
in
inc
jmp
pop
mov
cmp
test
mov
xchg
xchg
pop
and
xchg
lock
cmp
in
repz
cmp
add
mov
mov
jns
push
push
add
enter
dec
lods
jg
inc
push
xchg
loope
or
in
scas
jmp
xor
repz
push
pop
pop
jge
jmp
jne
scas
aam
dec
loopne
mov
fstp
mov
fs
cmps
in
pop
shr
adc
pop
cmp
bound
rcr
out
xor
pop
imul
les
jne
fs
mov
sbb
pushf
push
push
cmp
jo
add
and
aas
xor
xchg
cmps
dec
jnp
mov
cmps
clc
ja
fsub
pop
mov
cmp
int3
movs
mov
mov
inc
mov
das
shl
xor
es
xor
js
jbe
push
(bad)
cmp
stos
jbe
call
in
inc
ret
test
adc
pop
inc
mov
mov
sbb
lahf
xor
cmps
inc
ror
mov
sar
mov
and
xchg
daa
(bad)
lods
add
jmp
clc
iret
scas
mov
push
mov
jg
or
out
xor
pop
cwde
mov
push
inc
mov
int3
add
xor
jns
cdq
add
scas
adc
mov
dec
sbb
std
xchg
shr
add
fidivr
loope
xchg
jae
dec
lahf
fdiv
push
mov
add
lock
pop
aas
cmps
ja
gs
(bad)
xor
or
cmps
in
sub
mov
adc
(bad)
loopne
test
(bad)
iret
inc
jne
push
and
inc
cli
jg
(bad)
fcmovnu
sbb
call
mov
(bad)
es
sbb
arpl
repnz
cmp
jbe
push
(bad)
into
dec
arpl
out
sub
fsubr
mov
iret
shr
xor
sbb
mov
nop
jmp
add
pop
les
add
(bad)
dec
test
or
jmp
(bad)
mov
and
scas
adc
adc
jmp
dec
imul
pusha
xor
pop
repnz
pop
cmp
das
popf
enter
loopne
and
data16
and
mov
push
arpl
imul
jns
movs
js
movs
mov
inc
sub
jno
jge
cmps
ror
aas
daa
(bad)
lock
xchg
dec
mov
bound
fisttp
sub
push
inc
movs
adc
stc
aad
push
addr16
enter
ficomp
mov
aas
jmp
mov
cmp
mov
stos
out
cmps
add
leave
dec
jmp
push
jl
mov
das
mov
fmul
xchg
add
mov
push
sti
(bad)
(bad)
cmp
pop
push
fisttp
frstor
shl
out
jo
int
movs
(bad)
mov
pop
mov
adc
lea
push
mov
cmps
(bad)
cmp
and
mov
sub
inc
ds
retf
adc
mov
movhps
dec
loopne
daa
gs
inc
push
aad
addr16
push
jmp
pop
mov
shr
cld
sub
jno
ja
add
jle
rcl
jge
ret
pushf
out
jnp
div
rol
aas
sar
fst
sahf
pop
in
pusha
push
cdq
pop
cmp
(bad)
out
jbe
repnz
push
push
jbe
pop
jns
jmp
jo
sbb
xor
sbb
cld
inc
rcl
arpl
scas
or
jp
xchg
cdq
inc
adc
sahf
in
arpl
call
lea
lock
jle
in
mov
adc
enter
cmps
fs
or
xor
sbb
test
adc
rol
(bad)
nop
js
pop
push
jg
inc
and
stos
mov
and
sti
jo
inc
ret
lds
adc
and
xor
pop
cli
test
dec
xor
loopne
sbb
lock
arpl
movs
in
std
and
xchg
je
pop
jae
inc
mov
leave
cli
mov
sbb
test
sar
pop
jns
mov
or
jne
mov
add
pop
mov
fs
and
loope
sbb
(bad)
fild
outs
push
enter
mov
loop
xchg
arpl
mov
push
xor
push
pop
add
sar
pop
addr16
xchg
push
(bad)
aas
imul
out
jecxz
cwde
dec
ret
mov
or
int3
dec
out
dec
fld
fidivr
or
push
jle
lea
jmp
dec
hlt
dec
clc
jne
or
cmp
fmul
in
loope
minps
in
sbb
cmps
mov
repnz
addr16
xlat
les
clc
imul
pop
imul
xchg
sub
adc
pop
test
js
scas
add
cmp
jbe
jecxz
hlt
xor
xor
push
out
aad
outs
lea
fmul
mov
pop
arpl
jnp
std
and
xor
adc
rol
push
ins
push
frstor
and
jo
scas
nop
ds
mov
pop
cli
mul
je
adc
jl
rcl
pop
jb
pop
push
add
repz
nop
jge
sti
adc
push
je
pop
push
xchg
retf
fld
test
inc
pop
addr16
ret
xor
cld
enter
sbb
jno
mov
std
(bad)
call
pop
jmp
or
add
add
cld
mov
shl
in
cmp
nop
add
pusha
call
pop
jle
jb
ins
add
test
dec
push
fiadd
cld
xlat
xchg
mov
jmp
mov
aam
and
in
movs
push
jno
aas
xor
xor
cmp
lds
test
mov
sub
mov
xor
adc
lods
ret
jecxz
mov
imul
stos
xor
mov
sbb
in
aam
icebp
scas
mov
popa
fisub
dec
dec
cdq
add
mov
mov
(bad)
xchg
outs
mov
sar
int
mov
dec
jmp
jge
cmp
xrelease
push
push
push
daa
fmul
add
in
add
sti
jne
mov
movs
aaa
ss
pusha
out
into
xchg
stos
jmp
sub
cmp
jle
add
rol
fdivrp
xchg
mov
test
outs
aaa
pop
dec
aad
sub
sbb
xchg
push
adc
sbb
dec
sub
(bad)
dec
fs
out
mov
fimul
xor
mov
ret
or
mov
mov
or
push
scas
imul
test
xchg
shl
xchg
stos
lock
popf
scas
jp
out
xchg
(bad)
xor
rcr
imul
push
repnz
stos
jl
movs
bound
ins
add
or
push
stos
lea
pop
in
pop
repnz
nop
cmp
test
stos
or
retf
xchg
pop
adc
std
sub
popa
fst
cld
cmp
leave
test
dec
xor
mov
mov
mov
pop
and
add
adc
push
out
lahf
mov
pop
mov
sbb
test
pshufw
out
mov
adc
xor
dec
(bad)
aas
iret
mov
pop
je
call
pop
xchg
lahf
or
sar
not
pop
or
hlt
call
fcomp
mov
or
movs
xor
inc
mov
xchg
xor
mov
pop
xchg
or
or
fs
jnp
sub
push
or
or
sahf
push
call
or
or
jg
sbb
je
xor
cdq
outs
stos
or
or
push
mov
sbb
sub
or
rcl
outs
jmp
or
sub
jb
mov
mov
pcmpgtb
ja
adc
(bad)
pop
shl
fs
and
or
in
jmp
sub
or
idiv
das
xlat
xor
ja
jnp
cmp
mov
mov
cmp
dec
call
add
stos
je
sub
push
daa
ret
les
outs
jne
dec
addr16
aad
gs
add
(bad)
je
sbb
inc
pop
dec
sub
fstp
mov
or
mov
(bad)
or
pop
and
fisttp
(bad)
push
ins
movs
sti
sbb
cmp
mov
and
lea
inc
jo
aas
ins
sti
jmp
pop
ret
test
push
int
adc
inc
push
movs
inc
mov
and
sbb
mov
enter
arpl
jl
call
fld
cdq
and
ins
ss
ret
jnp
bound
jmp
and
test
cmp
push
ins
xchg
pop
cwde
cmp
fs
push
repz
push
pop
or
imul
call
mov
out
mov
mov
ss
rol
mov
ja
ins
add
loopne
shl
mov
leave
sbb
out
jp
mov
mov
xor
pop
jmp
pop
movs
dec
pop
ins
movs
cli
pushf
ja
punpckldq
or
add
fucomi
js
xchg
in
jno
loope
sbb
mov
jno
repz
and
sbb
cmp
jl
mov
mov
inc
push
out
inc
fcom
sub
(bad)
test
jmp
cmps
shl
dec
mov
movs
xchg
and
sbb
xor
movs
xor
mov
xchg
shl
aaa
in
js
xchg
mov
jp
sbb
addr16
xor
repz
jb
push
in
adc
inc
push
mov
pop
pminub
rol
leave
inc
inc
add
jle
sbb
test
dec
ss
out
add
push
mov
imul
ins
ins
adc
pop
push
xor
inc
fimul
pop
sub
rcl
aas
fwait
push
cmp
aas
jno
sbb
cmp
mov
mov
cli
aam
jmp
cs
std
push
sbb
xor
and
push
aas
jle
cmp
ins
std
js
cmc
or
inc
mov
and
mov
imul
ins
mov
xchg
sub
pop
dec
and
xor
call
mov
ror
aad
inc
cmp
ds
dec
push
jecxz
sbb
arpl
inc
jae
mov
xor
scas
outs
mov
loop
cmps
xchg
pushf
dec
call
push
js
fs
stc
sbb
mov
ins
sti
lods
(bad)
xor
stc
mov
pop
cs
das
sti
inc
stos
test
mov
sbb
add
(bad)
repz
lahf
stc
stos
pop
sub
add
cmp
xlat
out
jp
xor
(bad)
jl
retf
shl
add
es
sbb
retf
sbb
sbb
repz
lods
out
popf
xchg
mov
ja
sub
mov
xor
adc
push
dec
mov
stc
cmc
adc
dec
cmps
jmp
xchg
mov
jns
xlat
xchg
iret
pop
dec
jne
scas
call
ret
in
inc
mov
daa
pushf
fbld
xor
inc
pop
in
sub
add
sahf
xor
inc
jmp
cmp
retf
stc
and
cmp
jae
sub
mov
sar
out
sbb
repz
imul
or
cvttps2pi
adc
sti
xor
sahf
fisubr
jl
mov
lds
aad
adc
adc
and
cmp
xchg
jbe
cmp
inc
and
mov
mov
test
jmp
mov
retf
inc
js
ins
mov
int
rep
mov
mov
mov
jne
js
ret
sahf
ret
fistp
imul
mov
xchg
mov
mov
push
mov
mov
arpl
(bad)
in
add
ins
sub
ror
and
mov
cmp
cmps
push
and
dec
push
dec
mov
push
or
mov
inc
sub
and
push
ins
mov
push
in
mov
jmp
lds
sbb
jne
cmp
into
scas
jo
adc
cmp
pop
mov
pop
xchg
mov
xchg
push
inc
into
cdq
test
test
jmp
push
jns
or
pusha
mov
jb
and
and
push
adc
cmp
leave
out
or
loopne
xor
and
lds
add
inc
int
or
sub
call
les
lds
mov
mov
adc
jl
out
mov
push
xchg
outs
(bad)
mov
push
lds
cmps
mov
adc
and
mov
inc
aad
(bad)
mov
dec
jbe
cmp
xchg
iret
push
arpl
std
add
or
mov
imul
jmp
(bad)
mov
jne
aaa
fwait
js
mov
jae
fstp
repz
xor
jb
ins
cmp
mov
arpl
int
in
mov
sbb
dec
out
pop
fmul
cmps
push
sub
lods
add
mov
cmp
movs
fs
and
out
sbb
les
call
shl
aas
push
in
jae
jns
xchg
or
es
sbb
xchg
mov
or
mov
inc
sti
mov
mov
cmc
push
jle
xor
popf
aad
fcmovne
mov
ret
outs
dec
sbb
or
(bad)
xor
cmp
scas
push
inc
stc
loop
shl
je
shl
icebp
test
push
pusha
mov
out
mov
clc
and
cmp
adc
lahf
jmp
sub
pop
xor
(bad)
movs
mov
xchg
inc
nop
push
stc
adc
push
aad
stc
mov
dec
sub
mov
hlt
dec
aaa
dec
in
fs
adc
mov
fdivrp
and
cmp
ficom
or
in
push
add
iret
cwde
pop
jmp
out
std
stos
cld
mov
ss
jle
lahf
jecxz
xchg
mov
dec
lock
pop
sub
shl
arpl
ins
repnz
sbb
loope
inc
popa
jne
pop
fsubr
xchg
cmp
sbb
dec
or
scas
rcl
push
add
xchg
ret
rcl
mov
xor
fs
rcl
dec
repnz
or
cli
pushf
xchg
lds
ja
mov
ds
jae
push
shl
retf
dec
xor
sahf
or
call
adc
inc
ss
inc
adc
push
adc
xchg
icebp
cmp
add
pop
jnp
adc
fwait
or
test
mov
push
inc
inc
pusha
in
sar
pusha
jmp
pop
ror
jae
pop
stos
int
mov
cs
sbb
jnp
fisub
adc
sar
and
cmp
xchg
xor
cmp
fisubr
pushf
xchg
icebp
call
mov
jle
jb
stos
mov
pop
lock
ret
xchg
add
jge
aam
jb
js
inc
shl
mov
rcl
push
sbb
pop
fwait
sub
jmp
call
and
movs
in
jae
or
popa
popa
mov
jae
dec
pop
sub
stos
cmps
scas
call
mov
add
dec
push
retf
sbb
data16
fdiv
jmp
sub
rol
inc
cmps
adc
mov
and
push
mov
mov
mov
in
rol
bound
adc
mov
pop
mov
and
cmp
rcr
xor
lods
sbb
or
adc
fadd
aas
scas
cs
in
xchg
stc
xor
cmp
outs
iret
call
stc
sbb
pop
loope
test
iret
in
xchg
xchg
sbb
xor
push
inc
sub
jmp
jno
fstp
and
mov
call
adc
push
or
lahf
sbb
jmp
and
push
lock
and
adc
xchg
xchg
movs
pushf
xchg
into
dec
cli
aaa
movs
ficomp
mov
xlat
jb
stc
sub
mov
push
adc
cmp
test
test
stos
adc
xlat
outs
imul
pop
es
mov
dec
jbe
or
or
and
in
int3
fdiv
dec
mov
sub
retf
mov
popf
inc
cmp
sub
and
arpl
es
mov
xchg
dec
cmp
mov
popa
push
fprem
lods
in
cmp
jno
sbb
inc
adc
mov
add
mov
mov
loopne
adc
mov
es
shl
push
cmp
iret
retf
push
(bad)
(bad)
(bad)
outs
dec
frstor
adc
mov
aad
xchg
imul
jmp
stos
or
fwait
mov
inc
sub
sti
je
mov
or
dec
imul
cmp
inc
pusha
rcl
jmp
jb
cmp
jb
ret
out
outs
jp
dec
mov
in
or
fild
xchg
or
ja
dec
cmp
xchg
sahf
sub
add
shl
(bad)
retf
mov
and
popf
and
cli
xor
mov
push
lds
and
es
dec
dec
mov
xchg
pop
add
adc
push
jp
std
pop
jns
push
cmp
pop
movs
gs
mov
adc
test
cs
jb
aam
push
mov
inc
jmp
cmps
push
iret
ds
leave
(bad)
xor
jae
adc
xor
rcr
jmp
(bad)
fs
cmp
aas
outs
es
les
je
shl
js
stos
(bad)
out
dec
test
data16
retf
sbb
mov
sti
jecxz
cmc
in
pop
pop
and
sub
pop
jns
inc
mov
fnstcw
sti
sub
jecxz
fild
dec
call
out
sub
pop
mov
stos
popa
xchg
ss
mov
sbb
es
aas
push
pop
(bad)
xor
cmp
push
cmp
les
aad
fidivr
pop
call
mov
xor
adc
and
bound
pop
cld
push
pop
cmp
outs
stos
cmp
cmp
sbb
jne
out
pop
call
sub
(bad)
mov
scas
leave
hlt
loope
push
xchg
out
sub
push
or
and
jae
sbb
mov
sbb
mov
xchg
lds
ja
push
ja
shr
add
std
xor
pushf
sbb
xchg
and
fsubr
mov
add
or
push
cmp
arpl
jmp
hlt
sbb
gs
sub
add
gs
jne
fistp
mov
xchg
lock
ret
jo
mov
arpl
retf
or
add
retf
xchg
sub
xor
mov
mov
scas
imul
leave
cld
cmc
repnz
rcl
aad
adc
test
cmp
mov
fisttp
xor
js
inc
test
mov
addr16
int3
loop
mov
jecxz
imul
loop
xchg
inc
sti
call
or
iret
js
fcomip
cld
cwde
fadd
or
es
xchg
stc
out
cmp
mov
stos
xchg
pop
inc
(bad)
stc
inc
test
push
stc
and
xlat
jecxz
push
add
stos
mov
ret
add
test
xor
xchg
(bad)
pmaxsw
cmp
mov
xor
int3
loop
es
jge
jae
add
jbe
add
mov
xor
fcom
movs
nop
mov
pop
add
mov
jg
push
(bad)
cmp
aas
cmp
push
push
pop
mov
ins
sbb
repz
pop
mov
pop
jns
pop
push
mov
jns
inc
lahf
dec
add
or
jle
sti
out
lods
push
lods
rcr
cdq
sti
sbb
in
mov
inc
mov
or
push
dec
and
mov
or
adc
push
pop
ror
jo
pusha
repz
movs
pop
sub
or
cmp
jno
or
in
inc
fdiv
retf
fdivr
jmp
sbb
mov
sub
mov
or
add
add
aas
cli
mov
or
pop
push
cmp
and
out
scas
mov
fwait
loopne
(bad)
mov
daa
xor
fsub
mov
mov
jmp
fwait
pop
sub
adc
xchg
add
inc
sti
xchg
adc
loope
pop
push
mov
push
retf
or
and
inc
ds
mov
(bad)
mov
test
or
adc
inc
loope
pop
dec
scas
in
nop
inc
and
sub
mov
int
mov
dec
or
aaa
mov
adc
lods
aam
shl
push
pop
(bad)
pop
imul
std
pusha
mov
(bad)
stc
aad
sar
adc
xlat
inc
mov
movlhps
(bad)
mov
adc
movs
call
jg
ins
inc
add
in
adc
ret
pushf
loopne
sub
adc
aam
sub
mov
mov
pop
(bad)
xchg
xchg
daa
les
fisttp
je
sbb
pop
lahf
retf
mov
jmp
and
rol
loopne
ret
mov
popf
and
js
fdivr
aaa
jae
leave
pusha
xchg
mov
cmp
pop
mov
retf
out
ja
(bad)
cmps
fcomp
push
scas
pop
push
(bad)
fbstp
out
mov
stc
cwde
test
adc
or
out
push
fbld
aas
sbb
aaa
sub
lds
js
movs
mov
shr
xor
and
sub
or
(bad)
stos
xchg
loope
jno
arpl
jbe
lea
movs
add
cmp
adc
pop
sbb
add
pusha
pop
jle
sub
and
inc
fwait
addr16
jecxz
xchg
icebp
mov
jae
xor
mov
and
test
jecxz
jns
mov
sub
cmc
mov
arpl
mov
sti
inc
hlt
push
add
ds
inc
jp
js
sub
pop
hlt
pop
int3
movs
adc
cmps
scas
xchg
out
(bad)
xchg
sbb
movs
dec
sahf
pop
and
push
jl
les
aaa
cmp
fwait
(bad)
repz
movs
mov
jmp
(bad)
xchg
stos
(bad)
ficom
sti
dec
adc
test
repnz
mov
xor
je
inc
repnz
repnz
mov
pop
cdq
jmp
and
add
xchg
xor
mov
cs
fsub
add
xor
(bad)
cld
add
pop
sar
loop
(bad)
mov
(bad)
push
jmp
inc
xor
push
cmp
mov
ror
mov
or
nop
mov
xchg
add
int
in
outs
xor
push
js
stos
loop
adc
mov
mov
fxch
mov
jecxz
cld
or
retf
push
fwait
loop
enter
or
das
or
test
push
cmp
in
shl
inc
leave
mov
retf
cwde
sub
cwde
movs
imul
clc
push
cmps
imul
into
test
jecxz
inc
retf
xchg
loop
jmp
popa
pop
cmp
rcl
xchg
and
jbe
xchg
mov
pop
addr16
and
and
imul
cmp
pop
mov
inc
and
jne
inc
mov
cs
mov
fisttp
lods
test
cdq
xchg
aam
mov
das
xor
mov
push
xchg
je
push
test
movs
jno
cld
leave
bound
es
pop
push
mov
jno
mov
outs
adc
fstp
aam
test
les
xchg
fst
pop
jmp
pusha
imul
repnz
in
add
test
xchg
jnp
xor
loopne
adc
aas
pavgw
mov
push
mov
sahf
jbe
push
push
ret
pop
sar
mov
push
daa
adc
push
pop
ja
sahf
push
pop
jb
adc
popa
jmp
pop
and
fsubr
sbb
imul
cmp
dec
sbb
loop
add
cli
dec
cmp
enter
retf
add
push
push
jmp
jle
xchg
fld
inc
xchg
push
sti
(bad)
jmp
pop
push
dec
and
aad
lea
scas
popa
les
lahf
push
inc
cs
fs
stc
xor
dec
xchg
das
mov
mov
sbb
pop
jecxz
push
pop
add
mov
in
and
add
pushf
ja
and
inc
xchg
repnz
cmp
sbb
out
sub
hlt
lea
lods
jp
into
addr16
cmp
out
cmp
(bad)
dec
cld
lods
xchg
push
adc
mov
cmps
pop
and
fsub
inc
scas
dec
push
jg
call
jne
leave
jl
pop
cli
stc
popf
outs
xor
loopne
imul
popa
mov
xchg
xor
out
int
clc
out
xor
adc
std
lea
in
data16
mov
aad
dec
jp
xchg
mov
popf
loope
(bad)
cli
ds
inc
into
ds
call
jp
xchg
jg
mov
dec
das
pop
push
cvtps2pi
cdq
pop
mov
leave
jne
and
(bad)
(bad)
int
inc
jae
cmc
call
or
lahf
rcr
push
ret
and
out
pop
bound
sbb
dec
arpl
stos
mov
or
mov
addr16
adc
adc
xor
inc
scas
sub
stc
mov
and
stos
pop
fcomp
jmp
pop
mov
cs
cmps
mov
pop
jp
test
sub
adc
dec
movaps
dec
or
sbb
sbb
cmp
shl
xchg
mov
jge
or
xchg
leave
add
nop
inc
dec
sbb
sub
mov
arpl
cmp
mov
(bad)
mov
add
push
mov
mov
rcr
jge
nop
push
pop
push
jae
jne
push
gs
jle
(bad)
xchg
fiadd
inc
in
outs
movs
adc
int
inc
dec
fnstsw
sub
fcmove
or
sbb
sub
pop
adc
cmova
push
enter
and
pop
call
add
jmp
repnz
retf
cmps
or
and
(bad)
xchg
test
adc
adc
repz
sbb
inc
retf
sbb
ds
retf
neg
sbb
dec
inc
loope
loop
mov
sbb
mov
add
ret
xchg
mov
or
stos
pop
adc
(bad)
std
or
dec
sub
fcom
dec
cli
nop
sti
in
dec
dec
dec
into
ror
mov
retf
cmc
das
loop
add
imul
shr
in
outs
sub
enter
into
stos
jmp
das
sbb
pusha
mov
mov
sahf
cmps
cdq
fistp
cmp
xor
add
sbb
sub
sbb
scas
das
xlat
rcl
jecxz
xor
mov
dec
cs
push
(bad)
or
mov
jae
adc
fisub
stos
push
jp
test
pop
push
sar
mov
fld
out
repnz
mov
cmp
push
(bad)
add
push
dec
ret
repnz
push
mov
pop
stc
cwde
jno
dec
mov
in
fcom
sbb
xchg
stos
icebp
test
mov
pop
nop
push
mul
sbb
out
fisubr
enter
dec
aas
fnsave
mov
je
or
sbb
push
cs
jno
mov
neg
rol
and
sti
push
dec
stos
jns
scas
lods
(bad)
mov
pop
lock
inc
jge
scas
mov
(bad)
push
add
jmp
hlt
adc
enter
mov
gs
inc
shr
xor
dec
lods
mov
hlt
icebp
retf
or
(bad)
loopne
arpl
in
jae
or
inc
sub
mov
outs
xchg
adc
add
clc
dec
cmp
inc
mov
mov
pop
fdivr
mov
shl
mov
call
repz
sbb
cmp
ret
and
stc
push
mov
xchg
es
scas
add
cmp
rcr
inc
jno
or
dec
jnp
xor
dec
pop
or
adc
je
xchg
or
or
mov
cmc
cmp
retf
and
rcl
dec
ins
mov
scas
pop
mov
in
add
mov
in
xchg
mov
loopne
sbb
mov
mov
pop
mov
push
adc
les
fisubr
shr
adc
ret
sbb
mov
or
shr
mov
test
jnp
lock
test
jb
inc
je
add
lods
cmp
repz
cmp
mov
clc
(bad)
cmp
add
cs
add
mov
and
test
arpl
cmp
loope
jp
das
mov
fwait
sbb
jge
lods
rcl
push
(bad)
pop
and
jno
(bad)
out
retf
retf
mov
into
imul
fwait
xor
repz
icebp
xchg
push
cmps
push
add
movs
xchg
in
push
ins
xchg
inc
pop
in
mov
outs
js
setns
push
ins
mov
dec
xor
fcmovu
scas
or
pop
(bad)
fmul
leave
(bad)
stc
shr
cmp
aad
cmps
add
pop
es
add
imul
clc
dec
rcl
fisub
test
aas
cs
add
push
retf
add
or
je
call
scas
cmp
out
pop
addr16
cmp
xor
sub
aas
mov
stos
pop
dec
cmp
pop
cmc
stc
ja
xchg
pop
mov
adc
sub
sub
mov
push
iret
aad
ins
aaa
sbb
xchg
cli
imul
div
and
scas
add
repnz
lea
retf
sbb
sbb
sti
dec
sub
arpl
mov
je
sbb
cmp
ss
jmp
mov
std
dec
jge
pushf
xor
mov
ds
daa
imul
jmp
jbe
xchg
push
sub
mov
out
std
imul
mov
sbb
pop
(bad)
sub
out
cli
dec
fiadd
xlat
mov
push
jb
pop
ret
xlat
in
fcompp
push
jbe
cmc
dec
retf
aaa
test
cmovo
loopne
dec
sub
xor
shr
pop
xor
or
lds
(bad)
inc
ror
addr16
adc
inc
pop
jns
jns
sub
das
mov
ret
mov
dec
lock
aad
movs
inc
add
sbb
aad
jne
mov
jmp
xor
stos
ret
movs
and
push
mov
and
mov
aam
cmp
cmp
adc
adc
ret
and
outs
daa
jns
call
retf
push
mov
mov
inc
xchg
adc
lea
sub
ins
jbe
push
mov
sahf
cmps
mov
ror
in
sti
pop
xor
mov
sbb
or
mov
or
adc
inc
shr
mov
aaa
leave
jnp
jmp
lock
adc
fisubr
sahf
mov
(bad)
ret
fisubr
sbb
push
lods
push
imul
jmp
ins
(bad)
stc
jae
jp
ret
ins
push
mov
jmp
(bad)
imul
scas
adc
popa
mov
movs
clc
pop
fdiv
vmovntpd
sub
ins
push
gs
rcr
cwde
call
fsubr
lock
push
and
add
jmp
(bad)
std
rol
fld
les
mov
jl
dec
xchg
mov
mov
imul
sub
pop
test
add
jns
call
es
retf
dec
fidiv
cld
lahf
mov
mov
pop
in
mov
mov
cmp
mov
push
aaa
fimul
add
cmps
cmp
aam
jae
cmps
cwde
xchg
hlt
enter
and
bound
mov
ret
and
stos
sbb
scas
mov
sahf
cmp
mov
xor
jmp
pop
mov
std
cs
test
daa
movs
jmp
sti
aam
pusha
(bad)
ins
fcmove
fist
(bad)
jecxz
leave
(bad)
in
fs
les
ret
push
and
sbb
pop
movs
xor
dec
inc
mov
xlat
aad
rcl
dec
mov
pop
sbb
jno
xchg
sbb
(bad)
inc
and
mov
sbb
pop
scas
xor
fisttp
dec
call
xchg
sbb
sahf
mov
enter
ret
adc
jo
lahf
out
push
test
test
mov
ret
ds
dec
xchg
xchg
mov
mov
fld
popa
add
in
mov
pop
sahf
sub
dec
adc
movs
std
std
adc
loope
(bad)
nop
ins
and
jmp
jne
jae
call
pop
xchg
mov
jb
and
jge
xchg
xchg
fs
push
xchg
retf
retf
mov
mov
sbb
sbb
dec
call
shr
mov
loopne
add
ins
pop
leave
mov
rcl
mov
test
(bad)
aaa
mov
loop
or
shl
mov
(bad)
rcl
sbb
fistp
fadd
ds
stos
push
adc
retf
mov
test
ss
loope
(bad)
jo
push
(bad)
out
pop
cmc
mov
mov
dec
mov
pop
dec
movs
and
aaa
dec
fwait
test
adc
fucomip
mov
dec
sbb
fmul
xor
xchg
out
(bad)
retf
mov
xor
xor
xor
sahf
mov
ss
push
(bad)
mov
lea
arpl
cmp
jns
pop
xor
in
xor
pop
mov
fisttp
push
jl
push
sub
and
enter
js
out
ja
mov
cmps
fst
dec
imul
mov
repnz
mov
jno
int
xor
sbb
pop
stos
inc
add
xchg
xor
sbb
mov
jl
mov
scas
imul
imul
xor
imul
jne
cmc
push
outs
out
ret
cmp
and
ficomp
dec
cdq
popf
loop
jmp
mov
mov
sbb
push
ins
cmc
pop
add
xor
enter
mov
pushf
repz
repnz
fisubr
mov
push
or
xor
or
fs
inc
lock
xor
mov
jecxz
push
xchg
jae
jbe
or
mov
mov
cmps
sbb
inc
pop
pop
sar
es
adc
xchg
in
jne
movs
loopne
cmp
lds
(bad)
jecxz
push
mov
pop
xor
mov
shr
retf
push
cwde
jmp
jmp
das
mov
fisub
pop
mov
pop
dec
push
sub
adc
mov
jle
movs
mov
cs
inc
out
mov
mov
cs
mov
das
test
fcmovbe
inc
ds
fcmovbe
out
fisub
in
repz
sbb
pop
dec
in
xchg
xchg
cwde
xor
or
add
or
std
loopne
outs
mov
pop
xchg
stc
cmp
int3
(bad)
rcl
daa
shr
xchg
ret
dec
ficomp
lahf
das
push
call
(bad)
in
scas
pop
addr16
repnz
or
push
outs
cmp
popf
fcom
lock
mov
outs
add
xor
adc
xchg
gs
add
rol
push
or
ja
(bad)
pop
jo
pop
add
mov
ins
lods
(bad)
jae
xchg
mov
out
sbb
xchg
add
inc
jp
xchg
rcl
pushf
cwde
or
outs
jecxz
mov
add
pop
or
xchg
xor
out
sbb
dec
ret
loopne
data16
int3
jnp
jae
movs
ins
inc
out
jns
mov
adc
sbb
test
xor
pop
mov
mov
retf
mov
into
mul
push
pop
mov
inc
outs
neg
mov
lea
mov
pop
cld
repnz
mov
rol
cld
cmp
enter
sub
pop
push
pop
jmp
sbb
push
push
add
or
dec
not
data16
jmp
imul
pop
xor
pop
or
xchg
or
xlat
(bad)
in
daa
ror
xchg
(bad)
push
mov
ins
popa
mov
mov
inc
fisubr
ror
test
and
and
sub
push
pop
adc
or
repz
push
mov
push
mov
dec
xor
sbb
mov
mov
push
jne
xchg
adc
jbe
xchg
xchg
outs
sbb
mov
into
pop
mov
loope
push
das
jmp
sub
lods
mov
test
mov
dec
std
leavew
out
push
sbb
or
inc
mov
mov
(bad)
xchg
or
pop
retf
jge
je
sub
and
(bad)
outs
or
rcl
jno
enter
fcomp
fdivr
std
mov
scas
fnstcw
mov
dec
loopne
jbe
sahf
cs
loopne
cmp
sbb
retf
or
push
adc
jmp
fs
mov
imul
and
pop
mov
and
adc
xchg
add
scas
int
test
ins
loopne
cmp
sub
push
sbb
cmc
pop
pop
sbb
jp
adc
movs
mov
popa
or
cwde
fisttp
hlt
pop
scas
ja
sbb
push
loop
push
jmp
mov
test
sub
ror
inc
dec
int
cmp
into
xor
not
imul
popa
addr16
pusha
mov
xchg
imul
cmc
dec
mov
scas
jnp
je
dec
jmp
push
int
adc
daa
and
pop
mov
popf
jo
jecxz
jmp
das
mov
push
cmp
sub
mov
mov
jecxz
or
cld
cdq
fcom
mov
jno
scas
or
xor
into
inc
fild
inc
mov
rcr
stc
mov
popa
mov
xor
pop
add
xchg
adc
or
or
pop
jp
ror
repnz
ins
adc
sub
icebp
or
lea
mov
or
gs
aaa
pop
arpl
xor
ins
jge
sbb
icebp
enter
sahf
adc
xor
mov
push
xor
mov
out
out
fdivp
adc
mov
test
stc
fisub
ds
inc
mov
dec
pop
imul
xlat
jle
not
ret
pop
movs
push
or
dec
fwait
ret
scas
sbb
nop
and
xor
add
int
ret
ror
pop
mov
push
in
or
out
mov
cmps
mov
hlt
jg
ret
or
push
shr
mov
scas
(bad)
rdmsr
mov
ds
and
dec
mov
icebp
sbb
cmp
mov
add
mov
or
pop
adc
shl
or
mov
lea
inc
(bad)
pop
adc
stc
pop
scas
xchg
xchg
xor
jmp
mov
mov
and
imul
mov
add
jge
test
arpl
cs
and
mov
stos
and
call
test
ss
mov
test
push
ja
movs
mov
les
sub
add
dec
ds
(bad)
repnz
fcomp
xchg
outs
push
jmp
les
xor
in
or
mov
push
xchg
xor
scas
shl
test
aam
dec
mul
bnd
adc
add
jg
dec
fwait
jmp
out
mov
hlt
outs
xchg
sbb
xor
cmp
ss
xlat
cmp
and
(bad)
cwde
iret
ins
add
mov
mov
movs
mov
jp
inc
daa
mov
gs
aas
stc
fsub
mov
(bad)
xchg
mov
mov
cmp
shr
out
loopne
popf
cli
xor
cmp
mov
test
lock
movs
jns
(bad)
out
call
bound
inc
fidivr
mov
adc
adc
loope
loope
lods
mov
movs
rol
push
mov
std
mov
scas
cld
clc
xchg
push
push
push
aaa
stc
aad
jg
sbb
aam
or
jnp
rol
xor
cmp
mov
mov
or
or
in
in
arpl
pop
add
mov
sub
popf
jo
test
movs
ins
mov
retf
mov
jns
cmp
inc
fisub
sub
jo
aas
(bad)
pop
scas
das
cmp
outs
arpl
pop
or
xor
cmp
inc
push
cmps
ret
stos
or
shl
xor
es
ficom
shl
lahf
sbb
sar
clc
jmp
retf
mov
mov
(bad)
jne
imul
xor
retf
test
sub
lock
dec
push
sub
jns
movs
ss
ret
push
jno
push
nop
idiv
pop
loope
adc
call
pop
sbb
outs
mov
adc
xor
cld
arpl
jecxz
dec
fucom
pushf
add
push
imul
mov
sub
imul
jle
pop
xor
inc
mov
mov
mov
scas
pusha
pop
pop
ins
dec
xchg
add
pop
and
inc
jl
scas
adc
push
(bad)
cmovne
shr
sbb
ins
enter
aad
jns
adc
pusha
inc
popf
mov
mov
add
sub
xor
xchg
mov
int
push
dec
jecxz
or
aaa
mov
add
sti
cs
sub
adc
add
push
adc
adc
mov
repz
sub
push
jo
scas
mov
cmp
mov
in
xchg
xor
sbb
jnp
or
sub
xor
pop
out
imul
cmc
ja
test
call
retf
out
(bad)
mov
retf
in
or
fiadd
xchg
adc
cmp
pop
jle
or
and
test
call
inc
jp
ss
les
enter
fs
(bad)
add
in
and
punpckhbw
mov
out
adc
dec
jl
xchg
lods
ins
loop
daa
pop
mov
dec
aam
add
mov
lahf
lea
mov
lock
jo
je
mov
inc
mov
les
add
jbe
clc
mov
ins
(bad)
cmp
rcl
pop
cmp
cmp
push
or
arpl
sub
xchg
lds
add
mov
mov
jnp
adc
jns
in
and
xor
out
out
loope
jb
lock
or
lods
jmp
or
std
outs
fdivr
and
jmp
jae
out
and
outs
es
scas
jmp
ins
aas
pop
cmp
push
arpl
stc
adc
xchg
sub
repz
sub
popf
adc
xor
stos
aad
xchg
in
out
jmp
jne
or
and
retf
push
lods
sbb
out
sbb
sbb
pop
mov
addr16
jnp
jne
cmc
ins
xor
(bad)
out
add
call
mov
cs
in
mov
push
mov
and
cld
cmc
clc
leave
mov
push
movs
outs
push
rcl
mov
sub
add
pushf
fcmovnb
jae
mov
in
cmp
js
xor
pop
ficom
adc
fs
pop
pusha
mov
sti
inc
je
xlat
xor
pusha
or
dec
loopne
pop
enter
inc
sub
es
xchg
add
popf
push
and
data16
iret
out
mov
popa
mul
lods
dec
popf
jb
or
gs
in
push
(bad)
rol
cmp
jmp
mov
sub
mov
sub
xchg
lods
fld
fstp
xchg
fisubr
push
sub
adc
push
ret
into
push
push
outs
psubusb
cmp
or
jmp
gs
push
loope
std
pop
aaa
inc
lods
addr16
sbb
add
cld
nop
mov
sbb
pop
rcr
inc
pop
stos
adc
pop
push
out
shl
sbb
movs
xchg
loop
sub
in
loop
sub
or
test
shl
pop
cld
jmp
adc
mov
jae
and
xchg
or
add
(bad)
mov
adc
(bad)
dec
jnp
sbb
mov
cmps
jmp
mov
cld
push
aas
nop
pop
sbb
stos
xchg
sahf
std
dec
pop
push
mov
idiv
lods
cmp
mov
cmp
inc
(bad)
hlt
sbb
lds
(bad)
xor
push
(bad)
imul
leave
pop
mov
inc
or
add
sbb
ret
out
dec
mov
in
outs
mov
cmp
div
js
cwde
movlps
jg
outs
mov
sti
mov
movs
xor
iret
jmp
dec
sahf
jne
out
jne
adc
daa
xchg
xor
fld
mov
add
das
xchg
mov
and
(bad)
jge
(bad)
(bad)
push
idiv
add
mov
inc
xchg
xlat
inc
into
aam
test
sub
pop
mov
push
cmp
lock
add
sbb
mov
add
jnp
sub
inc
ja
into
sbb
dec
xchg
es
imul
loopne
push
adc
jae
rcr
push
adc
jl
cmp
js
in
mov
cli
ds
xlat
xchg
mov
lahf
rcl
ins
(bad)
lock
(bad)
hlt
lahf
sub
dec
ret
jnp
mov
mov
retf
sti
sar
dec
fcomip
aaa
retf
adc
cmp
fs
inc
pop
sbb
adc
mov
mov
shl
arpl
jnp
enter
or
lgdtd
sub
cmp
lahf
sar
mov
jp
cmp
test
popa
cwde
popf
push
retf
cdq
pop
das
das
sub
sbb
jmp
inc
add
and
lahf
cli
jmp
dec
pop
mov
(bad)
pop
(bad)
sbb
mov
rcl
retf
pusha
push
dec
mov
in
mov
stos
push
mov
xchg
shl
das
or
inc
push
dec
gs
outs
and
dec
xchg
dec
jl
pop
or
(bad)
sbb
jnp
xlat
cdq
cmp
loopne
mov
repz
jmp
add
dec
call
das
out
pop
sub
mov
xor
pop
or
pushf
shl
inc
dec
cmp
(bad)
aas
and
into
dec
(bad)
repnz
or
fist
pop
movs
push
(bad)
cmp
dec
xor
iret
xor
cmps
jmp
mov
aad
pop
pop
test
ret
ss
add
gs
cld
xor
jg
inc
mul
icebp
xor
mov
outs
bnd
sub
mov
dec
pop
and
pop
xchg
in
jae
int3
mov
je
jae
fdivr
sub
(bad)
mov
cli
push
adc
push
mov
mov
pop
jae
sub
pop
fidivr
cmp
inc
mov
and
push
mov
push
popf
int3
stc
ret
dec
mov
or
pop
bound
cmp
and
shl
or
jle
pop
or
ficom
and
cmp
add
(bad)
sbb
pop
dec
fst
or
mov
leave
cmps
(bad)
std
stos
sbb
pop
shr
mov
push
addr16
xchg
pop
and
mov
inc
rcr
mov
mov
jb
sub
imul
in
inc
inc
repz
into
int3
cli
ins
pop
jge
inc
sti
cli
mov
int3
sub
pop
iret
add
or
cs
inc
xor
jp
neg
mov
(bad)
jecxz
fwait
sbb
lahf
mov
(bad)
iret
mov
arpl
adc
stos
or
push
hlt
dec
xor
dec
jg
repz
loope
in
sar
pop
in
call
dec
cmc
cmc
loopne
fwait
pop
jl
inc
cmp
dec
fsubr
mov
je
(bad)
xchg
xor
inc
add
outs
dec
push
dec
pusha
xchg
mov
cmp
js
pop
or
push
stos
sahf
xor
mov
xchg
(bad)
popa
imul
xor
push
sub
adc
push
lods
int
scas
mov
mov
in
xchg
pop
movs
fneni(8087
out
sub
push
popa
push
xor
mov
adc
or
inc
cwde
mov
dec
add
add
jbe
inc
mov
xor
enter
fs
fwait
rcr
inc
mov
test
fsubp
cmps
mov
ds
imul
rcl
cmp
lods
fdiv
in
pop
out
arpl
retf
fs
mov
mov
xor
push
outs
arpl
fsub
adc
das
out
lods
or
lahf
xor
iret
mov
xor
cpuid
adc
pop
adc
lea
fisttp
aaa
or
jg
lahf
sahf
xchg
ror
adc
pushf
jmp
jb
mov
(bad)
dec
mov
fst
lods
pop
dec
cmp
jbe
sub
jl
pop
imul
push
in
js
std
es
in
ja
jno
adc
nop
clc
jg
mov
pop
ret
adc
fsub
jbe
rcl
repz
push
or
loopne
push
sub
dec
jle
jmp
jo
sbb
sbb
in
ret
sahf
arpl
push
push
pop
mov
nop
jnp
fidivr
inc
outs
ss
inc
fbld
hlt
push
test
cmp
xchg
leave
pop
movs
int3
ins
imul
cmp
mov
call
enter
imul
push
jecxz
(bad)
(bad)
or
in
jl
test
jo
cmp
push
mov
xchg
arpl
aas
push
lods
ret
test
shl
sub
mov
test
imul
(bad)
js
jg
sti
mov
sbb
mov
xor
mov
outs
int
daa
adc
in
jmp
out
xor
fdivr
fild
fwait
jg
mov
xor
xor
mov
pop
pop
xor
fidivr
jg
fs
sub
dec
or
add
xor
not
jg
mov
ret
xchg
sub
jns
(bad)
int3
adc
fsubr
cli
dec
xchg
dec
dec
les
add
sbb
push
xchg
stos
(bad)
out
pushf
inc
jmp
or
jne
adc
bound
and
ins
xor
fcmovne
mov
inc
xor
sbb
dec
test
fdiv
mov
andnps
jmp
std
cmp
dec
mov
sub
in
inc
aas
xor
or
outs
rcr
arpl
pop
in
mov
daa
je
jmp
ja
push
fimul
xor
call
loope
jae
cdq
scas
mov
outs
mov
ss
punpckldq
out
xchg
sbb
mov
adc
sbb
cmp
inc
sub
sbb
daa
pop
mov
add
addr16
scas
mov
dec
loope
sar
lods
div
stos
mov
cmc
mov
stos
adc
sub
fimul
enter
cs
das
ror
fwait
dec
movs
repz
add
xor
mov
cmp
sbb
jl
xchg
cwde
(bad)
mov
cmp
out
fdivr
stc
jg
xor
pop
arpl
push
jle
pop
ins
or
dec
dec
push
stc
fs
or
aaa
popa
or
mov
xchg
push
push
pushf
cmp
in
inc
push
test
test
mov
outs
js
push
(bad)
jae
and
add
std
lea
pop
jne
into
xor
sub
xchg
ss
sub
sub
call
dec
je
rcl
call
pushf
fldenv
fwait
pop
add
call
dec
dec
int
sub
sbb
les
int
mov
push
in
aaa
call
mov
test
outs
dec
cld
xor
dec
add
mov
xlat
popf
mov
das
add
and
jae
xchg
rcr
test
mov
out
rol
test
xchg
pop
adc
test
and
mov
nop
js
(bad)
mov
push
xor
xchg
pop
daa
add
xchg
hlt
mov
int
pusha
in
loop
jb
movs
popa
cmp
pop
pop
sub
and
push
in
pop
inc
xor
stc
fstp
push
je
daa
into
arpl
fld
aaa
leave
js
xchg
xor
pop
or
or
or
test
pop
push
push
into
not
pop
in
add
fmul
fistp
in
xor
in
xchg
adc
or
rcl
add
(bad)
fsub
pop
test
jns
push
or
adc
call
rcl
lds
dec
movs
mov
rol
out
jecxz
pushf
les
pop
cmp
push
sbb
ins
push
daa
xchg
lods
(bad)
mov
dec
inc
xchg
nop
dec
xchg
cmp
popf
mov
(bad)
adc
jo
adc
icebp
mov
cli
std
mov
lods
dec
repz
jg
fnstsw
cmp
jmp
out
push
rcr
xor
jnp
xchg
adc
xor
imul
and
xlat
sub
pop
pop
and
dec
or
mov
mov
sub
fs
sub
outs
out
retf
retf
ret
inc
mov
mov
add
xor
xchg
stos
push
cmps
pushf
movs
and
jns
icebp
mov
jmp
cmc
cli
test
aad
mov
xchg
jmp
stos
mov
jns
(bad)
(bad)
jmp
push
inc
pushf
pop
test
cmps
adc
jg
pop
les
das
aam
push
es
iret
xchg
xchg
dec
sub
sbb
into
cmc
push
fidivr
fdiv
stc
in
movs
pop
fwait
cmps
mov
int
push
or
into
ja
lods
cld
scas
and
xchg
rol
pop
mov
jae
into
or
xchg
sbb
xchg
fwait
cmp
adc
retf
or
int3
es
jns
call
fiadd
jbe
shl
sbb
out
dec
and
cmp
and
xchg
aaa
fcmove
gs
mov
pop
lods
adc
pop
out
or
or
in
mov
fisttp
test
pop
in
add
xchg
int
mov
scas
out
aam
xchg
push
cmps
jp
cmp
jno
dec
ds
enter
iret
test
dec
sar
stc
mov
xchg
jmp
je
pop
inc
test
mov
mov
fs
aad
jne
adc
in
stos
adc
or
cmp
dec
push
imul
and
mov
push
inc
ror
mov
fwait
cwde
xchg
adc
pop
es
popf
imul
mov
cwde
push
jmp
cmc
ja
ins
sbb
xchg
jo
ror
dec
xor
sub
pop
jo
ss
call
in
mov
mov
lods
out
cmp
jle
mov
les
sub
mov
and
test
mov
sub
or
jno
std
lds
add
test
jmp
clc
pop
xchg
bound
or
fadd
cmp
ins
repnz
dec
lods
cmp
gs
in
rcr
popf
push
push
pop
es
lock
fidiv
(bad)
scas
adc
daa
mov
jg
fcomp
rcl
inc
ins
mov
jmp
xchg
jns
xchg
lea
ficomp
pslld
mov
xchg
clc
std
sbb
lahf
stos
pop
iret
push
jne
paddq
sub
xor
das
aad
aas
jbe
jp
push
fcomip
clc
dec
adc
dec
sahf
jp
pushf
daa
pushf
xchg
pop
scas
inc
dec
in
pop
mov
or
cs
pushf
cmp
dec
mov
addr16
mov
sbb
xor
or
add
inc
xor
inc
dec
sub
inc
stc
xor
jmp
inc
xchg
test
or
daa
shl
inc
jo
adc
shl
and
cmp
jo
dec
adc
sbb
and
pop
add
xchg
sub
in
rcr
xchg
mov
sub
or
mov
push
js
inc
mov
or
repnz
dec
pusha
push
lea
adc
ds
xchg
push
jmp
scas
rol
in
push
inc
ss
dec
test
fmul
and
ror
dec
cmps
je
mov
loop
sahf
nop
or
mov
(bad)
out
mov
(bad)
bound
ja
out
leave
or
lock
or
ficom
fs
mov
xchg
pop
dec
out
arpl
dec
push
xor
les
and
fs
ins
ss
mov
add
mov
xor
ss
retf
nop
nop
rcl
dec
pop
xor
daa
adc
sbb
mov
mov
stos
mov
inc
clc
es
jmp
xchg
sbb
and
(bad)
jmp
adc
pop
push
popf
mov
daa
test
and
push
fisubr
xor
aas
pop
cmp
sub
sbb
pop
js
out
addr16
pop
test
cld
cmp
pop
movs
push
rcl
xchg
out
and
outs
mov
fdiv
mov
pop
gs
pop
repz
pop
test
fcomp
hlt
jmp
js
mov
mov
rol
sub
pop
add
int
fs
in
and
adc
(bad)
jno
clc
rcr
or
fwait
mov
xchg
mov
xchg
loop
push
and
sbb
lds
mov
out
xor
or
add
mul
ins
mov
(bad)
cli
(bad)
bound
imul
stc
sub
fiadd
loope
jmp
jbe
pop
cs
fdiv
mov
fsubp
xchg
mov
sub
xchg
aad
push
jecxz
hlt
iret
fstp
fwait
dec
jbe
mov
fcom
dec
xor
in
jae
test
push
inc
push
fbld
cmps
scas
inc
add
pop
jl
push
jns
dec
cmps
adc
xor
loopne
scas
lods
xchg
cmp
inc
adc
inc
pop
mov
jmp
or
je
sahf
push
(bad)
fisttp
icebp
loopne
aam
sub
scas
leave
fiadd
and
add
adc
movs
not
movs
jp
fwait
out
clc
dec
pop
jmp
out
jns
xchg
in
sub
dec
adc
push
cdq
and
outs
push
xchg
xor
and
inc
lea
xchg
popa
std
mov
bound
ret
add
aaa
sub
or
pop
stos
scas
or
cmps
adc
fs
call
gs
pop
mov
je
and
pop
inc
cwde
iret
or
fld
mov
inc
in
pop
movs
cmp
das
pop
das
imul
sbb
or
add
sbb
add
xchg
pop
cmp
movs
out
(bad)
gs
inc
hlt
cmp
mov
retf
mov
jp
jb
xor
loope
sub
aad
pop
xlat
inc
test
sbb
cmc
adc
cmp
mov
jo
rol
retf
pushf
int3
pusha
sbb
popa
cmps
mov
mov
stc
jg
cmps
sahf
inc
jne
std
pop
sub
dec
cs
inc
ja
scas
add
inc
sbb
xchg
jg
stos
ss
push
cmps
retf
int
hlt
sbb
dec
pop
jecxz
mov
adc
add
loope
pop
and
mov
clc
loopne
xor
fnstcw
mov
push
jecxz
push
aam
mov
jl
sbb
out
push
pop
xor
mov
loopne
ffree
push
fwait
inc
jnp
(bad)
sbb
popa
lock
mov
in
pop
xchg
push
sbb
aam
mov
jmp
(bad)
fstp
and
xchg
add
(bad)
out
mov
(bad)
cld
mov
shl
inc
(bad)
jmp
iret
test
adc
mov
jns
aas
(bad)
sub
aam
mov
pop
mov
lods
push
rcr
cmp
sti
xor
in
dec
add
sub
adc
or
adc
lea
push
movs
(bad)
mov
sbb
fs
(bad)
mov
jb
cmp
jle
lods
fst
sahf
fst
cmp
call
xchg
gs
test
xor
inc
lea
lods
fwait
xor
mov
add
and
nop
cmps
imul
sbb
shr
jno
xchg
jmp
xchg
jnp
mov
cmps
or
repz
adc
div
dec
dec
js
jmp
or
mov
sub
push
scas
es
add
cs
sub
pop
ret
mov
and
xor
ret
push
inc
fdiv
jns
retf
inc
push
inc
jo
mov
jo
sub
xchg
sbb
inc
popf
or
rcr
mov
call
gs
test
mov
dec
inc
pop
jl
test
add
in
gs
stos
pop
(bad)
addr16
das
nop
push
jbe
leave
mov
mov
inc
dec
xor
pop
fidiv
sub
es
pusha
push
leave
out
sub
out
stos
mov
add
add
dec
cmps
cmps
ficom
or
in
imul
add
jmp
adc
hlt
mov
inc
hlt
cmp
leave
dec
mov
scas
shr
loope
pop
jmp
jne
pusha
test
jg
in
mov
jae
sub
cmp
xchg
jmp
adc
add
pusha
cmp
popf
sahf
sub
jbe
fnstsw
jp
movs
repnz
test
cmp
dec
xor
xchg
pop
mov
add
sbb
pop
mov
fstp
fisubr
hlt
stos
outs
hlt
jo
lds
adc
movs
pop
gs
in
jae
in
inc
pusha
sbb
mov
push
mov
xor
neg
or
sti
sub
ds
jne
sbb
nop
out
repnz
rcr
adc
icebp
cmp
mov
xor
add
or
jne
seto
fcom
aam
push
gs
mov
mov
push
repnz
fsubr
pushf
adc
sbb
test
fs
std
sahf
stos
cli
stos
pop
cli
pop
cld
rcr
scas
push
jns
adc
sbb
stos
call
mov
movs
mov
(bad)
cmp
mov
nop
into
inc
test
imul
mov
ret
test
xor
and
mov
out
pop
add
pop
scas
dec
pusha
rol
push
ins
sub
loop
js
cmps
inc
ror
fmulp
stc
loop
sbb
add
test
sub
imul
jae
arpl
aas
push
loop
dec
jg
push
mov
jns
jns
fidiv
push
jae
jbe
push
shr
mov
sub
pop
call
icebp
mov
pop
js
mov
cmp
(bad)
fstp
cmp
test
pop
fcomip
jge
(bad)
bound
cmc
cs
icebp
movs
add
repnz
pop
mov
scas
lock
les
cmp
fadd
xor
out
jmp
push
pop
sub
jge
or
lods
pop
jge
and
pop
pop
or
icebp
xor
jno
fsubr
aad
call
mov
arpl
xor
pop
push
inc
test
mov
in
aad
xor
imul
and
or
daa
mov
imul
or
or
inc
out
xor
cmp
adc
and
cs
adc
lea
into
jmp
cmp
int
jmp
mov
lods
or
rcl
out
inc
and
nop
test
test
adc
cmp
jmp
sub
iret
sub
mov
ja
xchg
and
dec
(bad)
pusha
adc
sbb
jae
test
push
je
mov
or
stos
neg
outs
mov
sti
imul
loop
movs
cmp
or
retf
unpckhps
icebp
push
pop
pop
shl
cld
cmp
(bad)
in
(bad)
ret
or
jae
mov
cmp
ss
mov
clc
jne
or
cld
aam
fisub
(bad)
jno
mov
leave
cs
int
sbb
push
xchg
mov
repz
xor
sti
ins
stos
jmp
arpl
mov
test
popf
pushf
fiadd
test
out
and
and
ins
inc
stos
or
sbb
sbb
add
in
ins
(bad)
mov
pop
xchg
add
call
jp
xchg
test
inc
sub
adc
dec
imul
in
add
or
xchg
fld
jno
add
xlat
daa
adc
repz
ds
mov
pushf
loop
jmp
dec
sub
push
lods
mov
pop
data16
popf
cmp
cdq
lds
xchg
gs
test
adc
daa
cmp
aaa
jg
mov
adc
mov
xchg
ins
lods
enter
movs
mov
loop
cdq
in
repnz
mov
fs
out
(bad)
jnp
in
sbb
add
jae
sub
sub
add
popa
mov
rcl
cmp
cmps
icebp
jp
fcmovne
fld
int3
xchg
xor
fisttp
sbb
cdq
test
push
mov
adc
lahf
pop
les
call
jmp
xchg
movs
pop
inc
push
inc
fwait
sub
xor
xchg
push
jno
fnstenv
call
sti
fs
mov
pop
sub
mov
and
cmps
xor
mov
and
retf
sub
adc
shr
(bad)
addr16
sbb
mov
(bad)
push
adc
xchg
punpckldq
sbb
aaa
sub
fsubr
inc
push
test
in
mov
repnz
fcomip
ja
outs
xor
sahf
xor
add
jge
outs
cld
jns
or
sbb
pop
(bad)
scas
push
add
movs
aam
xchg
stc
test
loop
jnp
sub
xor
int
pop
imul
ins
repz
out
mov
out
and
push
mov
inc
push
popa
fsub
dec
lds
mov
mov
ret
dec
mov
add
sub
mul
push
mov
jbe
add
cwde
cmp
es
adc
add
sbb
mov
xor
mov
jmp
push
jae
mov
add
fs
stos
xchg
ret
xchg
adc
jbe
imul
or
push
sahf
push
dec
sahf
mov
int
mov
mov
mov
cmp
mov
imul
push
rcr
mov
mov
sbb
inc
pusha
and
shr
xlat
stc
pop
sub
leave
mov
jmp
sbb
ror
cmps
data16
popa
mov
std
cwde
cmp
sbb
dec
fs
pusha
inc
and
jge
sbb
inc
mov
mov
sbb
mov
dec
mov
ffreep
ret
add
xor
hlt
ja
inc
dec
cmc
xor
mov
xor
and
dec
sub
xchg
jns
neg
and
sbb
inc
cmps
jno
xchg
das
jle
test
mov
inc
mov
mov
or
in
ficom
sbb
sbb
fxch
int3
xchg
divps
xchg
jae
fild
dec
loope
and
jmp
sub
jle
scas
outs
mov
mov
test
cmp
xor
add
mov
cmps
mov
in
mov
mov
out
test
lahf
ds
sbb
outs
outs
in
jne
jmp
cmps
out
arpl
loopne
xor
sub
adc
mov
jno
inc
(bad)
mov
sub
fldl2e
jge
arpl
pop
mov
or
adc
inc
cli
cmc
dec
aad
fadd
mov
push
movs
mov
movs
inc
sub
jns
aas
cmp
stos
mov
mov
lahf
iret
test
inc
mov
mov
adc
retf
aam
loop
dec
mov
push
cwde
in
cwde
xor
fisubr
popf
stos
cmps
mov
ins
call
cmps
xchg
(bad)
sub
lods
pusha
imul
popa
inc
push
ins
pop
mov
daa
std
jle
sti
sti
sub
into
cmps
xor
(bad)
iret
cdq
jl
mov
pop
cs
xor
pop
jp
inc
pop
mov
rcr
mov
(bad)
dec
(bad)
add
push
pop
fdivr
jbe
mov
call
mov
xor
and
or
jl
jo
das
je
cld
ins
mov
cmp
mov
cmps
test
cwde
sahf
cmp
or
mov
(bad)
jecxz
loope
fisubr
adc
mov
push
enter
pop
or
stos
mov
rcr
jno
mov
add
(bad)
cmp
out
inc
cld
jae
and
jmp
jle
ret
sub
adc
jbe
mov
shl
sub
push
rcl
pop
xor
pushf
cmp
imul
je
into
fdiv
jbe
shr
(bad)
cmp
dec
sbb
jge
sets
dec
stos
repnz
push
inc
xchg
pushf
or
bound
push
imul
mov
jp
add
gs
xchg
js
(bad)
(bad)
lahf
sti
sti
(bad)
cdq
(bad)
je
int
cmp
xchg
fistp
xor
dec
arpl
pop
xchg
outs
inc
and
pop
cmp
or
xor
ss
std
imul
jns
mov
cs
repnz
xor
aas
sbb
les
pusha
cli
pop
xor
loop
or
ins
repz
in
mov
xchg
ja
push
jecxz
push
test
gs
scas
in
movs
add
cmp
test
(bad)
aaa
imul
sar
mov
jg
outs
xchg
xchg
fs
(bad)
push
mov
arpl
int3
out
push
icebp
push
sbb
sar
mov
dec
test
lods
xchg
sub
push
int
pushf
mov
call
inc
and
sbb
mov
fcom
sbb
dec
xchg
cmp
xor
cli
icebp
lock
test
lahf
dec
call
cli
in
ja
iret
add
dec
test
cmp
in
cmp
dec
outs
call
jne
adc
ins
test
pop
push
sbb
add
arpl
retf
fsub
out
jl
cld
dec
sbb
xor
test
and
dec
ds
adc
je
mov
popa
pop
cs
adc
daa
or
jmp
jge
xchg
pop
mov
inc
adc
mov
popa
mov
jb
add
nop
lea
lods
or
in
xchg
xor
sub
cdq
pushf
in
(bad)
retf
xchg
dec
jecxz
push
test
clc
out
mov
dec
mov
inc
les
das
push
dec
adc
data16
loope
(bad)
sahf
inc
jbe
(bad)
mov
out
pop
cwde
inc
jecxz
in
stos
mov
imul
sbb
jo
(bad)
adc
inc
imul
mov
pop
xor
aam
xlat
adc
(bad)
dec
and
ficomp
xor
jmp
pop
popf
pop
aad
addr16
fstp
imul
cmc
add
int3
jp
ret
popf
mov
sar
xchg
aad
xchg
pushf
into
aam
fsub
loope
sbb
aad
pop
fdiv
repnz
jne
leave
test
jle
push
add
(bad)
js
scas
clc
dec
(bad)
clc
or
pop
jmp
std
aad
xchg
movs
adc
out
gs
adc
mov
jne
mov
sbb
mov
add
xchg
mov
rcl
pop
push
fild
out
add
gs
inc
cmps
xchg
lds
iret
dec
push
ss
ins
int3
cmp
sub
ja
loope
outs
mov
(bad)
add
int3
es
in
pop
mov
das
mov
jmp
jecxz
inc
enter
out
je
xchg
jg
mov
out
ret
mov
sub
shr
jmp
stos
hlt
sbb
popf
push
mov
inc
cdq
fsubr
xchg
das
xor
inc
xlat
cmp
xchg
adc
mov
sar
or
dec
or
fild
call
dec
push
jns
mov
sbb
dec
push
sub
mov
ins
sahf
je
or
pop
iret
add
(bad)
push
xor
(bad)
repnz
pop
xor
dec
pop
mov
call
std
into
jb
add
les
(bad)
push
inc
or
mov
stos
jp
mov
in
adc
lds
stc
sub
pop
icebp
sbb
or
pushf
mov
mov
jecxz
sar
mov
mov
adc
mov
mov
stc
call
idiv
mov
mov
js
jmp
and
lods
sub
mov
ret
test
ins
int3
push
sbb
dec
ret
xor
xchg
mov
cmp
sbb
nop
(bad)
scas
adc
std
jno
arpl
mov
sbb
int
cmp
lock
jmp
push
mov
or
mov
inc
cvtps2pd
pop
retf
jbe
add
jge
sub
mov
stc
fs
jbe
sbb
sbb
ficom
mov
inc
pusha
int
dec
inc
and
int
push
out
adc
xchg
shl
fsub
sub
scas
lock
xor
mov
cmp
push
test
sbb
cmp
mov
mov
cmp
cmps
sub
push
or
xor
in
call
and
call
icebp
call
cwde
jnp
ins
fmul
ss
into
aad
pusha
cmp
lods
(bad)
cmp
sub
lods
retf
sbb
xchg
gs
push
lahf
or
pusha
arpl
pushf
mov
mov
xlat
xchg
sbb
xlat
xor
std
push
pop
inc
mov
jo
mov
jge
inc
add
inc
push
call
sti
pop
or
lds
xor
(bad)
movs
in
daa
xchg
pop
jle
push
fld
push
pop
scas
pop
jno
out
pop
add
mov
xchg
int3
jns
sti
ins
pop
lahf
arpl
push
popa
push
aas
pop
je
push
scas
mov
(bad)
xor
mov
xor
add
iret
xchg
(bad)
sti
xchg
clc
movs
mov
arpl
fst
repnz
jle
repnz
test
movs
out
popa
bound
jg
xor
pop
mov
push
lock
mov
loope
fisubr
fsubp
mov
push
nop
repz
inc
push
cmps
adc
sub
mov
fsub
adc
fist
aad
xor
dec
push
dec
(bad)
ror
lods
in
rcr
jnp
imul
inc
(bad)
sub
xchg
pop
and
lods
loop
in
ret
jo
push
mov
cmp
in
adc
scas
pop
adc
test
inc
and
test
shl
inc
pop
dec
fsub
int3
outs
retf
cmp
dec
mov
rcr
inc
pop
jo
cdq
imul
add
dec
test
push
or
cmp
aad
or
loope
or
ror
cli
push
cdq
jmp
call
mov
inc
sahf
sbb
sbb
push
fsub
cmp
push
pusha
stc
les
add
mov
sbb
and
pop
pushf
or
jno
push
push
frstor
jns
xor
cmp
int
mov
fstp
mov
fcomp
mov
adc
dec
leave
je
movs
push
mul
cmp
xchg
shl
fmul
out
mov
inc
mov
xlat
mov
out
pop
xor
cs
aam
div
ret
outs
mov
retf
push
or
cmp
jo
pop
sbb
mov
(bad)
aad
dec
lods
mov
fcmovu
mov
dec
(bad)
sub
pop
mov
shl
or
add
adc
jle
mov
xchg
fdiv
inc
mov
push
push
js
add
(bad)
mov
(bad)
or
or
lock
add
fist
jns
aad
inc
dec
mov
ds
lock
mov
xor
push
sahf
jmp
or
cmp
shl
movs
test
pop
jne
test
loopne
pushf
ins
or
fst
push
mul
and
or
out
adc
aas
inc
jmp
and
add
pop
test
ins
xor
(bad)
pop
aaa
pop
adc
cmp
or
out
(bad)
out
cld
cmc
lds
inc
out
das
sbb
mov
test
ja
inc
sub
dec
jno
jmp
jp
scas
sbb
xor
test
and
xchg
cmp
xchg
(bad)
out
repz
hlt
xor
and
(bad)
pushf
jo
cmp
xchg
icebp
movs
mov
pop
(bad)
sti
loopne
push
xor
sub
sub
jge
popa
sub
inc
retf
stos
sti
aaa
add
mov
jns
add
ins
das
xchg
xchg
dec
scas
mov
popf
push
or
pop
mov
repnz
js
inc
cmp
pop
dec
fcmovnu
dec
mov
cmc
xchg
loop
retf
add
pop
mov
inc
ins
xor
in
leave
cwde
add
add
(bad)
mov
fisttp
cld
test
inc
pop
adc
ja
hlt
add
xchg
xor
shr
loop
pop
repz
pop
push
arpl
xchg
inc
out
in
adc
loope
jb
sbb
fwait
ror
mov
inc
imul
popf
or
push
push
mov
fnstsw
jmp
hlt
sub
add
outs
cmps
lds
xchg
aas
pop
fldcw
retf
scas
mov
or
out
add
rcl
jae
add
and
dec
stos
mov
sbb
xor
es
aad
fwait
lods
fiadd
add
push
mov
add
jle
dec
add
jae
pop
mov
(bad)
(bad)
dec
xchg
ja
mov
jne
aas
jge
adc
cmps
sub
mov
xchg
(bad)
dec
sub
hlt
leave
sti
add
enter
adc
sub
dec
(bad)
movs
mov
jmp
mov
sub
xchg
and
pop
ffreep
fist
call
cdq
push
or
xchg
cmps
inc
mov
and
mov
(bad)
imul
or
(bad)
pop
cmp
xor
lds
nop
fidivr
jle
or
xor
push
imul
mov
cmps
xor
pop
dec
pop
cmps
pop
and
cmp
xor
xor
out
lea
or
xor
loop
sbb
push
or
add
sbb
push
cwde
dec
test
add
scas
sti
imul
add
mov
je
fwait
push
es
push
into
(bad)
dec
in
fwait
push
rcr
and
cmps
jne
mov
xchg
and
(bad)
cmp
cmps
lock
and
test
jbe
lock
jmp
cmps
or
push
cmp
xlat
sub
or
push
cmps
jno
jge
pop
adc
xor
(bad)
mov
retf
gs
paddusb
hlt
add
(bad)
push
jmp
fstp
mov
xlat
hlt
push
push
icebp
sub
sub
inc
sti
fstp
popa
sub
iret
(bad)
fnstsw
push
xor
pop
stos
das
cmp
std
adc
aad
adc
add
in
adc
fiadd
cmps
lahf
mov
jns
sub
pop
popf
sbb
cmp
add
sub
jnp
imul
jae
mov
push
cwde
hlt
aad
lea
std
rcr
adc
add
cdq
push
fbld
or
cmc
xchg
ror
jmp
push
cmps
fdiv
cwde
mov
ret
cwde
clc
xchg
jbe
fbstp
xchg
cdq
sar
hlt
xor
xchg
lods
(bad)
jb
outs
out
pop
pop
cmps
xchg
xchg
xchg
or
ins
mov
pop
inc
fstp
mov
cmps
daa
aad
(bad)
rcl
mov
(bad)
pop
and
pop
das
lds
adc
enter
jl
movs
into
cmp
(bad)
std
test
fs
test
push
test
add
mov
push
ds
repz
adc
mov
cmp
jl
dec
push
int
pop
test
jp
into
add
into
inc
ret
cs
mov
repz
push
adc
call
jle
xor
or
pop
pop
(bad)
mov
jnp
aad
(bad)
in
pop
stos
cdq
push
sbb
mov
(bad)
xchg
das
and
xchg
sub
das
mov
xor
jg
lods
xchg
test
ins
mov
fbstp
scas
add
sbb
scas
push
push
cmps
sti
addr16
mov
mov
ss
inc
push
mov
jne
(bad)
push
in
fucomp
mov
cld
sbb
sbb
xor
jnp
inc
jae
loope
mov
daa
jl
mov
jmp
cli
test
mov
jbe
mov
ret
jno
(bad)
nop
sub
clc
imul
cmp
mov
sar
ins
loop
fist
je
push
mov
nop
mov
sti
out
jg
push
fs
(bad)
push
out
add
mov
or
pop
jae
mov
out
sbb
mov
es
push
out
out
push
in
push
shr
fldenv
or
ret
les
mov
(bad)
jg
xchg
push
dec
jmp
mov
jo
mov
lock
adc
and
mov
imul
xlat
in
mov
and
arpl
jae
dec
xchg
push
addr16
fcom
mov
fwait
mov
je
xchg
mov
stos
lods
movs
ss
push
mov
mov
out
lds
iret
aad
mov
ror
xchg
lods
sub
push
clc
sahf
push
xchg
(bad)
cmp
loop
push
jno
dec
rol
out
(bad)
nop
mov
popf
mov
push
nop
push
cwde
xchg
inc
ja
mov
(bad)
cmc
out
cmp
repnz
arpl
pushf
seta
test
ja
aaa
inc
sbb
dec
add
push
mov
xor
inc
cmp
inc
loopne
fsubp
lods
sub
add
(bad)
imul
stc
leave
cmp
int3
mov
fstp
cmp
pop
aaa
je
fld
ja
ss
xor
mov
pop
push
fsub
jno
(bad)
cmc
mov
sub
sub
dec
rcr
adc
adc
sub
jnp
mov
jecxz
ret
loop
jns
mov
xchg
jns
jb
stos
jo
xchg
lods
arpl
mov
test
inc
mov
add
imul
or
push
mov
pop
aam
pop
movs
sbb
daa
and
pop
dec
mov
inc
cmps
cs
fwait
jmp
adc
pop
xchg
sbb
mov
ins
fwait
mov
test
push
test
test
mov
push
in
arpl
jne
lahf
(bad)
mov
retf
je
int3
jmp
adc
movs
adc
outs
cld
inc
outs
fistp
pop
bound
jnp
loop
test
mov
test
push
dec
cdq
and
dec
in
cmps
dec
sbb
mov
mov
pop
clc
and
inc
out
or
xor
push
pop
jno
pop
test
into
loopne
outs
adc
rol
cmp
leave
iret
pushf
scas
or
jno
xor
icebp
test
mov
in
pop
out
stos
inc
retf
mov
mov
mov
je
push
push
loope
cmp
mov
push
repz
and
adc
push
xchg
shl
add
push
je
adc
inc
and
cmp
rcr
inc
retf
dec
sti
cmp
pop
mov
or
inc
leave
pop
loope
call
paddusw
sbb
rep
push
xchg
je
add
test
icebp
out
mov
jge
sbb
mov
ficom
movs
hlt
es
sti
fistp
js
push
push
arpl
scas
mov
xchg
fucom
pop
jmp
cli
sbb
(bad)
xchg
sti
enter
call
clc
cli
adc
add
arpl
inc
push
adc
ror
sub
mov
push
mov
stos
ins
dec
outs
popa
sar
loopne
out
mov
(bad)
das
add
jno
std
rcl
jle
inc
clc
push
dec
shl
icebp
sbb
cmp
xchg
repnz
and
repz
sbb
inc
aas
mov
das
mov
daa
mov
inc
retf
cmp
inc
inc
or
clc
sbb
mul
lods
jo
pushf
loop
dec
mov
in
push
ins
in
pushf
pop
push
inc
mov
daa
adc
fs
repz
and
aad
mov
add
ss
lock
ja
pop
or
and
cld
inc
cmc
hlt
js
adc
repnz
xchg
inc
push
iret
dec
out
mov
xchg
fst
mov
sbb
js
push
add
sub
ss
cdq
inc
loope
hlt
mov
mov
xchg
cmp
dec
call
jg
pop
push
and
jmp
inc
and
cs
test
pushf
cmp
mov
ja
pop
add
movs
dec
and
outs
xchg
xchg
cmp
cmp
jne
test
loope
std
dec
or
or
mov
mov
push
and
lea
cmc
jge
jle
jbe
dec
mov
jnp
mov
aaa
cmp
cmps
push
inc
adc
lahf
sbb
mov
daa
inc
dec
jne
in
mov
pop
dec
arpl
sbb
pushf
clc
cmp
adc
jmp
pop
mov
mov
in
cs
out
rcr
xor
pusha
pop
pop
gs
adc
jno
adc
inc
repz
sub
int
adc
div
or
cmp
lea
push
fwait
xor
imul
lods
repnz
pop
test
mov
sbb
not
ja
sbb
scas
sbb
adc
or
fild
xor
call
xor
mov
cmp
xor
in
adc
push
push
mov
cmp
imul
jnp
std
cmp
sbb
sti
push
(bad)
popf
sub
not
inc
sbb
ins
pusha
std
repz
lahf
(bad)
imul
inc
jge
push
ds
dec
mov
add
test
test
adc
cmps
sub
mov
call
inc
mov
jle
xor
sbb
loope
ins
inc
call
jno
out
(bad)
xchg
sar
fisttp
or
adc
shl
fist
sbb
stos
test
test
add
adc
(bad)
push
fst
or
outs
jns
mov
push
in
jl
push
or
out
sub
sub
addr16
loop
ret
inc
shr
sub
mov
cdq
mov
adc
sub
sub
out
fiadd
xchg
sub
cmp
pop
xchg
or
movs
lea
stc
or
jb
scas
(bad)
scas
leave
dec
mov
jecxz
neg
push
shl
cli
cmp
inc
or
pop
cmps
and
sar
add
mov
shr
and
shl
(bad)
imul
in
xor
mul
add
test
ins
cs
xchg
and
mov
push
loop
pop
fnstsw
inc
push
pusha
lods
xor
xchg
cmp
push
ror
jmp
lods
sbb
xchg
mov
jns
xor
adc
aad
pop
loop
pop
psubsw
xor
and
inc
imul
xlat
arpl
mov
ja
aam
mov
sbb
popa
xchg
lods
sbb
cmc
mov
repnz
js
call
dec
cli
pushf
in
stc
mov
inc
loope
sub
in
cmps
and
lods
es
push
call
hlt
out
push
nop
retf
int
sbb
xor
jno
adc
dec
sbb
mov
arpl
ss
add
aas
pushf
push
lds
jmp
mov
ret
mov
enter
movs
movs
movs
movs
popa
fadd
fadd
or
fdivr
sti
jnp
cdq
and
leave
inc
(bad)
int
mov
daa
mov
leave
pop
dec
in
or
xchg
push
mov
retf
call
or
add
int3
fisubr
jno
sbb
adc
and
adc
push
sar
adc
inc
ffree
pusha
push
das
or
scas
adc
push
jns
rol
pusha
lock
sub
shl
and
int
int3
push
jne
and
in
cmps
jmp
shl
fsubr
mov
add
arpl
pop
int
jb
clc
jns
inc
movs
or
shl
(bad)
add
push
loope
xchg
mov
retf
fadd
inc
pop
xchg
cmp
xchg
lods
pop
xchg
es
iret
pop
mov
xchg
dec
pop
das
xor
imul
xchg
jecxz
lahf
xor
or
out
fs
movs
push
xchg
stos
dec
rcr
fild
sbb
xor
sub
or
stos
push
sahf
lock
pusha
dec
adc
xor
nop
fcomp
push
jmp
xchg
(bad)
mov
xchg
and
add
shr
outs
rcr
retf
repz
sbb
(bad)
lods
daa
and
jecxz
sbb
lds
add
and
sub
je
xlat
ins
cmp
retf
in
add
popf
dec
repnz
mov
jge
ror
push
movs
scas
movs
xchg
pushf
push
cmps
sbb
and
ror
daa
adc
imul
pop
loop
xor
std
xchg
cmp
adc
sbb
aas
lods
jbe
out
icebp
imul
add
jb
aad
(bad)
mov
outs
add
es
popf
mov
jle
dec
pop
xchg
scas
cmp
sahf
test
and
pop
xor
mov
dec
fistp
pop
jb
gs
and
enter
leave
fwait
pusha
mov
outs
lock
(bad)
ror
test
pop
enter
pusha
cld
repz
je
das
fwait
js
cmp
rcl
inc
xor
cmp
inc
xchg
add
es
mov
je
dec
cmp
xchg
add
mov
jmp
pop
pop
push
pop
enter
ret
sub
pop
(bad)
test
ja
fwait
jg
push
cmc
sbb
std
mov
dec
repz
mov
std
bound
jo
jne
adc
shl
push
push
jle
shl
push
je
mov
ds
pushf
rol
mul
cdq
mov
ret
imul
and
mov
gs
inc
mov
out
adc
mov
idiv
or
fsub
popa
dec
dec
dec
add
mov
ret
ja
(bad)
shl
popa
loope
stos
in
pop
xor
mov
scas
push
lods
mov
dec
push
lahf
mul
call
mov
leave
sahf
shr
and
aas
push
cmp
cdq
daa
xchg
add
pop
aaa
retfw
ins
xchg
mov
mov
sub
sbb
shr
xchg
(bad)
xor
in
ret
pop
xor
out
loope
jb
xor
inc
fsubr
sub
pusha
std
or
fcomp
and
shl
neg
dec
and
and
jmp
add
jb
xor
and
(bad)
and
cmp
pusha
je
xchg
mov
xor
adc
jb
cmc
dec
mov
nop
push
rcr
adc
sti
xchg
pop
in
iret
test
mov
leave
mov
call
mov
cmp
sub
mov
push
pop
hlt
mov
xor
scas
sbb
je
(bad)
sub
push
out
pop
add
movs
std
or
imul
lods
jle
mov
das
dec
sub
and
(bad)
imul
push
stc
jmp
sbb
lock
test
scas
fwait
jbe
call
ja
cwde
pusha
int
mov
ret
add
inc
in
jns
dec
adc
pop
addr16
call
cmc
ret
mov
ins
mov
jnp
out
adc
hlt
outs
in
inc
addr16
int3
mov
inc
out
pop
push
mov
imul
cmp
cmp
mov
jne
jnp
jo
mov
mov
stos
imul
pop
rol
gs
pop
xchg
call
xchg
sub
in
push
or
pop
sbb
xor
shl
les
shr
add
in
or
movs
test
sahf
push
clc
cmp
mov
jmp
mov
xor
shl
movhps
aam
mov
mov
ret
movs
inc
push
sbb
fistp
cwde
inc
push
add
call
cmp
ret
sbb
ret
pop
ins
out
jne
lahf
adc
mov
mov
loop
std
ja
rcl
mov
or
sbb
int3
sar
mov
jo
sahf
pop
fcomp
mov
pushf
lods
es
(bad)
leave
xchg
xor
out
lock
mov
sbb
adc
addr16
repz
arpl
mov
pop
addr16
pop
pop
cmp
xlat
fcom
stc
xchg
ds
jns
dec
add
cmp
push
add
or
or
inc
mov
mov
sbb
mov
les
mov
xchg
cmp
ss
mov
aas
xor
and
or
pusha
enter
sahf
(bad)
or
dec
fs
xchg
adc
popa
jns
cmp
lods
sbb
test
sub
xor
js
push
add
aam
std
fild
push
ss
mov
pop
fild
fmul
arpl
sub
pop
sbb
push
enter
jge
jmp
sub
ret
push
mov
std
cmps
clc
jmp
int
iret
outs
mov
es
pop
xor
(bad)
sbb
add
jge
jne
(bad)
cmc
mov
js
imul
fs
pop
push
jge
mov
inc
pop
inc
cmc
cwde
and
aam
je
int
inc
sbb
pushf
loopne
or
jg
aaa
jne
mov
jno
push
mov
xor
inc
xor
int
add
lods
test
ret
out
shl
or
gs
mov
cld
sub
div
call
fstp
jecxz
mov
out
dec
sahf
push
cs
imul
rcl
out
into
xchg
cmp
imul
mov
mov
in
and
mov
xchg
sub
mov
(bad)
xor
add
ins
and
jmp
xchg
or
cmp
pop
cdq
out
xchg
repz
adc
sub
mov
(bad)
or
xchg
lahf
inc
sbb
push
mov
jmp
pusha
jns
jg
and
sub
mov
sbb
addps
and
sbb
loop
xchg
cmp
mov
in
adc
imul
add
std
inc
inc
fidivr
fld
push
cmp
jo
xor
pop
test
scas
mov
or
out
lahf
stos
fld
sub
repz
fimul
xor
jno
fwait
out
lock
pop
jnp
sbb
mov
sub
lods
and
lock
dec
popa
inc
loop
fcomip
out
and
push
mov
cmp
mov
mov
into
js
popf
jne
mov
les
xchg
pop
or
in
dec
mov
or
pop
gs
popa
push
cwde
mov
fs
sbb
sub
jno
adc
sti
(bad)
rcl
push
fistp
pop
or
test
or
xchg
and
mov
xchg
in
inc
mov
repz
mov
inc
stc
mov
pop
mov
push
add
pop
(bad)
cmp
sbb
sub
les
push
popa
addr16
fcmovnb
popf
int
ja
jae
js
mov
clc
cli
jmp
pop
pop
mov
scas
or
inc
jg
jl
call
mov
pushf
bswap
out
sar
inc
fucom
dec
enter
pop
cmp
pop
pop
fisub
cmp
xchg
out
mov
cdq
jno
fnstcw
push
push
cli
mov
jb
mov
rcr
icebp
or
sbb
aad
xchg
push
push
or
nop
jmp
inc
sub
in
cwde
jl
xor
leave
and
jae
push
call
jg
rcl
and
mov
icebp
nop
fcmovu
retf
cmp
mov
pushf
daa
outs
in
ss
arpl
jecxz
mov
ins
push
sbb
(bad)
pop
and
out
inc
push
or
out
xor
or
test
and
cmc
ffree
sbb
mov
int
mov
pop
imul
jecxz
ret
push
in
rcl
ins
inc
bound
scas
lds
ss
cmps
or
xor
add
jb
mov
pop
out
mov
jne
and
or
fld
out
stos
ds
dec
mov
push
pop
jns
xchg
sbb
pop
cmc
push
mov
pop
xor
add
jmp
pop
imul
jecxz
js
mov
ins
aad
scas
bound
mov
jbe
xchg
inc
cmp
call
aas
xchg
ja
adc
cmps
outs
data16
push
xchg
push
inc
(bad)
push
icebp
ror
push
nop
push
into
xor
and
(bad)
cs
(bad)
hlt
outs
xchg
iret
pop
jbe
cmps
sar
mov
fcomp
sub
sub
mov
std
sbb
lahf
push
add
out
ss
out
push
and
mov
(bad)
xchg
or
push
fwait
call
bound
xlat
stos
aas
and
jge
sahf
dec
movs
or
lods
daa
pop
lock
xchg
ss
popf
jmp
xchg
out
and
out
hlt
ret
jns
jb
xor
mov
jp
dec
jb
(bad)
mov
sbb
retf
pop
mov
call
ja
push
mov
mov
lods
xchg
mov
mov
mov
add
mov
mov
push
daa
cmp
lods
inc
(bad)
mov
shl
mov
and
int3
imul
and
mov
popf
xchg
les
repnz
cmps
cmp
add
rcl
sbb
(bad)
xor
mov
aaa
cmps
jge
jmp
and
ins
idiv
sub
mov
test
and
stos
popa
rol
mov
(bad)
cmp
cmp
sbb
cmp
imul
mov
loope
scas
call
nop
into
test
xchg
sub
(bad)
outs
(bad)
push
outs
sahf
not
cmp
inc
inc
jno
bswap
mov
sbb
mov
rcr
fst
in
in
test
push
cmp
sub
pop
sbb
add
push
cwde
enter
inc
mov
sub
in
pop
mov
cmp
shl
push
jne
jge
jae
jmp
int
dec
jmp
cli
inc
add
aaa
aas
xor
add
xchg
int3
ficomp
(bad)
and
jecxz
mov
mov
out
cmp
outs
movs
cmp
push
mov
inc
cmp
inc
test
das
mov
push
inc
xor
inc
lods
and
lea
jle
mov
push
mov
call
outs
lds
jno
outs
ins
bound
(bad)
fcomp
xchg
nop
inc
(bad)
aaa
outs
sub
repz
mov
(bad)
xlat
addr16
add
in
mov
jecxz
repz
pop
xchg
fwait
(bad)
mov
mov
sbb
enter
(bad)
xor
das
mov
rcl
sbb
pop
xchg
repz
int3
fbstp
ret
xor
xchg
sub
push
mov
not
into
movs
jg
cmc
retf
sub
jno
add
pop
es
loopne
push
cmp
inc
pop
out
add
sti
adc
add
mov
loope
ds
shl
or
adc
in
(bad)
in
jecxz
xchg
imul
xchg
inc
and
dec
push
cmps
(bad)
jecxz
stos
cdq
test
jmp
mov
inc
xchg
push
js
rep
pop
xlat
gs
ss
xchg
push
jo
lea
mov
mov
adc
loopne
and
jmp
sbb
icebp
adc
mov
out
in
je
xor
inc
adc
pushf
sub
in
sub
fwait
cmc
std
cmp
movs
xor
sbb
dec
(bad)
push
scas
mov
mov
gs
mov
(bad)
outs
addr16
rcr
xor
dec
movs
xchg
pop
inc
inc
or
clc
cmp
xor
push
rol
or
jmp
ffree
sahf
jmp
push
fist
mov
sub
sbb
shr
xchg
xchg
push
push
jbe
fnstenv
cmovns
repnz
dec
pop
sub
lahf
in
sbb
loop
mov
pop
int3
cwde
jmp
add
or
adc
cdq
ja
xchg
mov
jp
xor
sbb
mov
sbb
push
(bad)
inc
push
fwait
and
mov
add
adc
les
dec
push
xor
and
xchg
mov
icebp
fld
fcomp
in
test
add
scas
sub
lock
pop
xor
mov
leave
mov
xchg
jmp
mov
push
stos
clc
jmp
adc
sub
pop
mov
aaa
pop
mov
xchg
dec
(bad)
int3
retf
cmps
cld
sbb
mov
outs
not
mov
jmp
sbb
jge
inc
in
mov
loop
mov
sar
add
mov
sub
stc
mov
sbb
mov
dec
xlat
mov
das
(bad)
xor
mov
test
out
ja
mov
int3
xor
add
sub
jbe
sbb
jae
call
rcr
stos
icebp
cmp
scas
lods
fdiv
ja
rol
xor
ja
test
mov
shl
fidiv
call
pop
mov
xor
mov
pop
(bad)
fwait
movaps
in
cmc
push
ret
push
pop
js
pop
jo
sbb
loop
cmp
hlt
dec
push
in
int
or
sub
xchg
add
xchg
push
add
addr16
sbb
nop
outs
xchg
jg
scas
fistp
test
mov
mov
dec
add
mov
ins
dec
retf
out
leave
ret
in
xchg
cmp
(bad)
popf
aaa
dec
add
imul
mov
scas
dec
mov
cmps
data16
stos
imul
mov
fidiv
add
repz
shl
mov
rol
xor
int3
inc
jmp
jo
mov
xchg
(bad)
cmc
pop
rcr
fcomp
int3
mov
push
push
cmp
push
dec
push
inc
sub
pushf
dec
nop
jne
ret
sub
or
ins
fidiv
aad
pop
call
sbb
sub
sub
and
ins
jbe
mov
mov
ss
lea
ins
and
push
(bad)
scas
jbe
rol
cwde
sub
and
and
xchg
daa
or
(bad)
nop
mov
cmp
lock
cmc
xchg
stos
pop
jecxz
xchg
xor
dec
jl
add
or
add
in
mov
and
lods
mov
add
jmp
jb
ja
jnp
xchg
pop
pop
dec
call
sar
fcom
jg
jl
mov
shr
mov
jge
gs
and
arpl
jecxz
loope
popf
mov
xor
add
mov
imul
mov
and
mov
(bad)
jns
ins
hlt
add
xchg
sbb
les
add
test
int
scas
add
add
push
ffreep
dec
jp
push
gs
push
cmp
pop
data16
xchg
dec
jge
mov
lods
rcr
cmp
xchg
pop
mov
js
inc
mov
fsub
out
(bad)
sar
jle
rcl
(bad)
push
(bad)
sub
(bad)
fdiv
adc
push
fwait
test
in
xchg
push
(bad)
mov
es
jl
gs
cmp
(bad)
fadd
mov
pusha
lahf
arpl
dec
icebp
imul
cmp
in
and
jmp
gs
(bad)
test
fcomi
jae
mov
mov
add
push
retf
movs
(bad)
inc
mov
or
movs
jl
(bad)
iret
push
adc
(bad)
adc
and
call
xchg
jle
inc
jno
retf
jmp
pop
mov
or
nop
jne
sbb
leave
jo
scas
sub
(bad)
pop
cmps
je
jecxz
data16
mov
jmp
inc
xor
mov
add
xchg
push
cmp
jle
mov
mov
mov
dec
cmc
nop
test
sub
mov
jae
ds
inc
or
sbb
add
push
js
push
xor
inc
cmp
jge
call
ret
mov
mov
rcl
jo
mov
mov
jmp
xchg
cs
cld
lods
mov
xlat
movs
cmp
loop
mov
xchg
sti
push
mov
and
add
sbb
xor
outs
ins
ret
dec
push
or
inc
sub
add
jns
fdiv
ins
jnp
movs
or
cmps
add
call
fsub
and
pop
enter
mov
into
clc
adc
sub
loope
popf
jo
inc
mov
test
xchg
xlat
int
(bad)
icebp
iret
test
arpl
or
movs
out
repnz
xor
(bad)
xlat
inc
adc
retf
inc
arpl
add
mov
xchg
iret
loop
hlt
sbb
jb
xchg
xor
cmp
mov
pop
inc
mov
cmp
xchg
fnstcw
imul
inc
mov
dec
or
loop
lods
or
fisub
ja
adc
mov
sbb
fwait
sub
add
mov
adc
xchg
jae
cld
outs
sbb
aam
loopne
movs
jge
shl
and
lods
call
popf
mov
enter
mov
inc
in
stc
xchg
stos
inc
and
lahf
(bad)
push
out
xor
mov
jb
or
test
adc
cs
sar
push
inc
pop
das
xor
sbb
add
test
pop
sbb
pop
jmp
xchg
pushf
test
push
(bad)
push
mov
test
in
(bad)
mov
(bad)
dec
or
push
add
add
push
or
mov
(bad)
aam
mov
sub
push
xor
mov
add
mov
in
xor
pop
add
imul
cmp
inc
jmp
rcl
hlt
xchg
fsub
test
rol
add
(bad)
mov
fisub
pusha
dec
push
addr16
je
lds
fcomip
fadd
lahf
repnz
cmc
fmul
sub
cmp
sub
or
cli
fld
add
lds
repz
aam
cli
or
stos
aas
ja
push
in
out
dec
dec
pop
jmp
pushf
fild
(bad)
adc
lods
inc
fucomip
pop
xor
adc
dec
cmc
in
(bad)
dec
push
inc
std
stc
dec
popa
clc
mov
add
or
mov
mov
(bad)
xchg
add
or
adc
sbb
retf
out
lock
fidiv
clc
adc
mov
inc
add
shl
mov
xor
popf
xor
mov
fxch
lods
pop
in
push
into
sbb
xchg
scas
mov
int3
nop
sti
dec
dec
arpl
fiadd
sub
xlat
pushf
shr
sbb
add
jno
int
daa
out
jmp
xchg
test
out
ja
mov
pop
mov
push
or
repnz
cmp
or
cmp
push
xchg
mov
pusha
test
push
fcomip
and
loop
mov
inc
pop
fidiv
cdq
fwait
inc
mov
pop
and
adc
push
xchg
mov
fisubr
dec
in
out
fidiv
sub
outs
jmp
lahf
div
outs
(bad)
shl
xchg
inc
add
and
pop
mov
mov
outs
int3
push
fwait
push
popf
div
mov
xor
addr16
or
push
pusha
test
addr16
cli
mov
inc
push
xchg
xchg
sub
arpl
movs
xor
es
pop
sti
and
xor
mov
cli
cdq
jno
daa
pop
and
sbb
in
cs
test
push
cmp
retf
cmps
lea
ins
data16
in
push
test
enter
ret
sbb
lods
rcl
ss
sub
pop
addr16
add
lock
mov
jo
push
mov
and
adc
or
sub
test
fs
push
call
fmulp
rol
xlat
xchg
in
out
sbb
js
pop
pop
xchg
xor
cli
or
cld
das
mov
mov
inc
and
adc
js
stos
xor
xlat
enter
add
in
sahf
pop
xor
rcl
cmps
cld
push
shl
sahf
dec
enter
cmc
popf
repnz
jmp
shl
fst
out
or
mov
(bad)
jnp
cmp
imul
(bad)
shl
imul
xchg
mov
out
cmp
fiadd
(bad)
movs
fs
aaa
fmul
push
pop
mov
jl
mov
in
push
xchg
fwait
retf
dec
adc
sbb
add
movs
sub
xor
fld
sbb
and
fmul
leave
fwait
sbb
movs
mov
mov
xor
leave
jecxz
dec
repnz
cmp
movs
int3
ret
jge
add
inc
in
xchg
pushf
sub
push
pushf
sbb
pop
xchg
(bad)
fistp
shl
(bad)
jmp
jnp
scas
push
stos
push
mov
jns
js
push
cli
js
mov
cmp
add
leave
sbb
cmp
sti
pop
fdivr
std
sub
js
cld
out
es
fild
(bad)
std
or
shl
jmp
aam
out
das
mov
hlt
lods
cwde
mov
mov
out
enter
adc
std
push
jmp
aaa
push
xchg
into
scas
fadd
les
jge
pusha
mov
pusha
dec
ret
xchg
ins
and
inc
and
inc
and
je
aam
jl
imul
out
mov
test
dec
(bad)
in
jp
es
mov
push
sbb
mov
ret
call
dec
xchg
xor
(bad)
jo
cmp
test
retf
mov
jge
stc
sub
add
and
mov
mov
pop
pop
pop
mul
call
ret
mov
outs
ins
or
add
mov
call
sub
shr
sbb
mov
aas
fnsave
mov
jnp
lods
leave
sbb
jmp
add
outs
or
sub
jno
add
adc
pop
pop
bound
in
mov
jmp
es
or
dec
imul
outs
mov
popa
jne
pop
cli
dec
lock
mov
and
or
call
jb
jp
dec
lds
aaa
test
das
sub
shl
call
daa
pop
cmp
aam
xor
stc
jmp
out
sbb
in
xor
xchg
add
cmp
repz
pop
or
sub
call
iret
xor
dec
pushf
fisttp
mov
lock
and
outs
jo
or
pop
pop
outs
adc
sbb
inc
dec
sub
(bad)
out
outs
retf
xor
(bad)
xor
mov
cli
pop
dec
loopne
out
mov
(bad)
call
inc
stos
xor
jnp
mov
dec
in
inc
push
inc
xor
ss
push
dec
int3
push
jg
mov
jne
(bad)
rcl
iret
out
dec
mov
or
jbe
pop
cmp
cmps
inc
cs
mov
lea
sub
fidivr
imul
loopne
popf
jae
rcl
cli
(bad)
jb
nop
inc
arpl
out
pop
jns
dec
rcr
xchg
(bad)
icebp
sub
or
and
test
mov
pop
pushf
cs
scas
mov
retf
es
or
xor
or
call
(bad)
sti
dec
ins
ins
pop
xchg
dec
test
dec
push
outs
imul
cmp
cmp
adc
mov
push
(bad)
loop
fadd
and
mov
daa
and
add
jmp
mov
jae
rcr
pop
sar
push
sbb
mov
sbb
sbb
push
movs
icebp
sub
mov
xlat
and
ins
call
mov
mov
push
fcmovnb
ss
mov
sbb
fld
out
lods
sbb
fisttp
sbb
sbb
test
frstpm(287
in
cmc
jae
push
pop
jmp
add
imul
jb
sahf
mov
sbb
jg
fs
(bad)
std
xchg
and
movs
mov
mov
imul
cmp
sahf
repz
out
cdq
cmps
mov
mov
add
dec
xchg
mov
je
aam
xor
imul
or
add
jb
std
stos
add
sbb
push
or
sbb
pop
iret
(bad)
mov
and
cmp
or
ins
stos
ja
mov
retf
leave
and
inc
test
cs
stos
jle
cmc
jecxz
sub
ror
pop
mov
sub
scas
mov
jecxz
cs
es
es
dec
jmp
dec
lods
lahf
ins
aam
xor
stos
ins
jge
imul
sub
sahf
adc
adc
inc
xchg
pop
fstp
sbb
push
aad
ret
stos
cmp
data16
xchg
in
std
pop
jno
inc
sbb
push
dec
cmp
or
test
add
xor
sar
ja
js
(bad)
dec
or
daa
and
xadd
shr
jae
pop
xor
mov
push
mov
leave
mov
pusha
sbb
out
(bad)
jg
sbb
xchg
aaa
push
ret
adc
jp
add
ffreep
(bad)
(bad)
loopne
adc
jg
jge
daa
xchg
jp
cmp
fbstp
mov
enter
and
mov
(bad)
fwait
js
ins
jmp
jmp
mov
fwait
jns
cmp
sub
mov
mov
lahf
nop
pop
jecxz
jnp
pop
push
js
sbb
js
ficom
push
(bad)
cmps
cmp
mov
cld
or
sti
xor
jg
test
fstp
cmp
push
xchg
and
loop
test
sub
addr16
test
nop
jnp
sti
idiv
mov
pop
fidivr
out
in
(bad)
push
inc
mov
lods
test
hlt
loop
jb
(bad)
fsubr
or
jmp
cmps
int3
mov
call
mov
xchg
mov
das
dec
repnz
add
cmp
scas
int3
int
jl
inc
inc
pop
add
pop
mov
aad
and
fld
cli
xchg
loop
inc
and
jge
stos
nop
jl
out
jae
movs
jno
shr
sbb
xor
mov
jno
(bad)
daa
and
and
push
in
adc
inc
rcl
inc
mov
nop
jb
inc
bound
jecxz
push
ins
pop
aas
adc
and
cmp
adc
mov
rcl
cwde
mov
mov
jecxz
lock
xchg
sub
std
mov
xchg
int3
sbb
addr16
shl
xor
(bad)
ret
mov
popa
jmp
xchg
pop
mov
fmul
jl
ret
jns
iret
icebp
xchg
and
dec
adc
cmc
dec
repnz
add
sbb
gs
int3
dec
xchg
push
sbb
outs
xchg
daa
xchg
mov
test
sub
fstp
clc
push
pop
out
pop
mov
cmp
mov
es
jnp
adc
inc
and
(bad)
lock
in
cdq
(bad)
fdivr
gs
sub
dec
cmps
cs
or
pop
test
fisub
pop
cmp
idiv
(bad)
fcom
or
nop
daa
mov
push
push
movs
push
shr
jo
jns
adc
mov
in
loop
(bad)
(bad)
lods
loopne
fwait
test
gs
sbb
int
push
les
jae
pop
xchg
popf
mov
dec
call
repnz
ret
dec
inc
sahf
inc
ins
daa
inc
push
dec
mov
or
scas
mov
or
xor
add
rol
stos
shr
in
loope
mov
jmp
cdq
cmc
add
jne
hlt
int
cmp
jmp
fimul
sbb
popa
sbb
adc
cwde
xor
xchg
fsincos
call
jmp
movs
mov
pop
out
rcr
xor
enter
in
aaa
jmp
mov
repnz
add
xor
pop
call
jo
xor
cwde
add
push
and
out
xor
test
sub
adc
mov
mov
cmp
inc
sub
mov
lods
sbb
mov
outs
adc
fdiv
sub
sbb
movs
add
pop
pop
sub
mov
mov
outs
arpl
mov
push
xchg
ror
mov
jnp
in
mov
jp
xchg
faddp
or
movs
fxtract
cmp
pop
lock
fdivr
inc
mov
sub
ret
ret
inc
mov
scas
xchg
or
dec
xchg
dec
and
mov
jae
lods
retf
fwait
mov
das
add
popa
fldenv
pop
loopne
cmp
mov
push
sbb
(bad)
cld
jp
cmps
or
jge
retf
cdq
aad
jae
movs
xchg
dec
je
mov
(bad)
scas
fwait
cwde
(bad)
mov
sbb
fbstp
jge
pusha
mov
in
xor
call
push
or
sub
jge
mov
add
xor
and
repz
jmp
sub
pop
dec
pop
sub
mov
adc
aad
and
int3
pop
cwde
push
add
(bad)
neg
(bad)
jge
jb
ret
jp
jb
aas
dec
bound
aad
repz
out
dec
ss
jg
mov
mov
and
mov
mov
xchg
mov
jmp
iret
mov
sti
adc
jbe
call
dec
call
jb
int
add
mov
xchg
icebp
stos
aam
push
mov
imul
add
aad
xor
sahf
call
jmp
leave
cli
std
xor
fldcw
fdiv
test
rep
xchg
mov
stos
enter
(bad)
cmp
iret
xor
mov
cli
std
or
aam
mov
dec
stos
cmps
jecxz
xchg
pop
xchg
aas
push
test
inc
xor
jge
mov
pop
adc
pop
and
mov
xchg
ins
mov
aam
dec
dec
cmp
cmps
mov
jo
pop
loop
adc
das
xlat
mov
mov
mov
inc
ds
loop
jmp
loop
sub
sbb
imul
xlat
ins
xchg
ror
addr16
ja
cli
repnz
mov
aaa
jecxz
out
and
das
inc
cmp
ss
in
add
mov
adc
iret
inc
mov
push
sbb
push
fisub
push
ds
int3
mov
pop
and
pop
pop
imul
nop
jl
cmp
ret
imul
mov
cwde
je
add
xchg
out
loop
hlt
jecxz
inc
mov
call
add
nop
ja
fs
and
push
je
or
aam
jg
ins
in
inc
div
xchg
mov
push
pop
xor
and
xchg
dec
movs
or
retf
pop
or
xor
and
mov
pop
out
ror
mov
test
inc
iret
jmp
push
pop
clc
jge
jg
mov
test
sbb
xchg
jle
(bad)
mov
cmps
les
inc
push
mov
(bad)
out
xlat
mov
repz
or
sub
xor
xchg
dec
loop
push
mov
imul
sbb
jns
sbb
cmp
and
cmp
ret
xchg
call
mov
ret
test
div
pop
inc
ins
sbb
loopne
jns
bound
out
pop
push
rcl
sub
ret
fs
dec
jmp
out
cmp
add
daa
xchg
sub
bound
pusha
test
loop
call
adc
data16
pop
mov
xchg
dec
cmp
mov
popa
pop
stos
sub
dec
dec
pop
pop
mov
dec
xor
mov
aam
push
jl
push
push
int3
inc
int
dec
xor
add
or
xor
xchg
xchg
int3
fwait
inc
data16
mov
pop
ins
add
scas
fisttp
and
iret
sbb
fistp
xor
inc
or
cmp
mov
dec
sbb
mov
loopne
pop
scas
mov
add
pusha
sar
sbb
in
xchg
inc
iret
imul
inc
pop
ins
push
inc
call
xchg
adc
adc
jne
sub
mov
adc
psubusw
les
in
mov
adc
aam
call
fimul
stos
add
jbe
out
jnp
popa
hlt
test
dec
test
nop
mov
mov
ja
mov
inc
repnz
mov
mov
push
repz
sar
adc
jecxz
cmp
add
sub
cmc
cmp
int3
(bad)
or
js
sub
pop
cld
sbb
jno
adc
ret
fs
push
dec
pop
stos
(bad)
int
pop
mov
and
imul
fst
fsubr
imul
add
sbb
dec
jnp
mov
sbb
add
imul
jecxz
xor
aam
ins
mov
dec
add
jns
mov
(bad)
mov
xchg
in
push
inc
xor
stos
arpl
jo
ficomp
scas
stos
push
(bad)
rcr
cmp
movs
es
and
xor
xor
mov
cld
int
scas
inc
jecxz
dec
mov
add
scas
cmc
and
adc
rol
ror
xor
pop
sti
or
adc
cmp
fisub
stos
jbe
fld
addr16
pop
cmp
xchg
aaa
jae
adc
(bad)
int3
jecxz
cmp
das
dec
rcl
inc
jg
push
jo
or
fist
xor
(bad)
(bad)
xchg
fisttp
adc
jne
sbb
dec
js
sub
mov
mov
and
or
stos
jle
adc
xchg
add
fdiv
push
sub
or
loope
or
pop
and
adc
mov
jbe
cdq
mov
out
dec
add
je
and
cmp
mov
sub
add
cmps
rcl
xor
push
push
loopne
xchg
xor
push
dec
pop
fcomi
lods
sub
mov
sahf
adc
mov
cmp
pop
ret
gs
xor
sbb
fdiv
sbb
dec
jno
dec
fsubp
add
mov
add
inc
sbb
mov
ret
in
pop
xchg
pop
call
scas
std
mov
inc
icebp
pushf
sbb
jno
cmp
push
push
adc
jge
stc
jns
mov
push
ss
repnz
lock
adc
iret
push
js
and
adc
retf
fwait
setl
add
mov
dec
cmp
lods
mov
xlat
js
retf
mov
xor
imul
mov
outs
sbb
mov
int
sbb
fdiv
nop
adc
scas
sub
daa
repz
pop
or
imul
or
test
mov
(bad)
imul
xchg
out
gs
push
pop
imul
cld
cmp
nop
dec
js
cli
bound
outs
lahf
fcom
stc
(bad)
pmulhw
loop
lock
std
mov
or
jno
xchg
or
pushf
fmulp
mov
add
jl
xchg
mov
loop
mov
mov
push
idiv
fcomip
mov
adc
retf
loopne
repnz
fstp
dec
xchg
outs
cli
(bad)
inc
push
dec
addr16
and
dec
cdq
jnp
sar
cmp
xor
jle
movs
pop
xchg
call
div
aas
in
sub
jge
and
inc
sahf
jnp
sub
or
outs
mov
int3
std
not
scas
inc
ret
xor
mov
in
jmp
jo
or
mov
fdivr
inc
jl
out
mov
jmp
(bad)
add
dec
xchg
push
mov
sbb
pop
es
into
sbb
jne
movs
sbb
jbe
retf
add
jnp
push
icebp
rcr
int
in
icebp
xor
dec
jp
out
dec
cmp
movs
push
cmp
jns
cs
(bad)
fs
inc
or
jmp
fdivrp
in
inc
(bad)
and
jae
das
inc
out
repnz
and
mov
mul
mov
mov
mov
mov
ficom
pop
aad
mov
and
std
movs
test
jle
enter
xor
and
scas
out
push
ror
lds
sbb
in
mov
jmp
push
adc
test
sbb
cwde
gs
inc
leave
icebp
mov
inc
inc
adc
ja
dec
cs
add
gs
adc
lock
and
lock
dec
jns
inc
dec
rol
repnz
ins
sub
pop
stos
repz
sub
cli
adc
xor
or
mov
dec
sbb
push
pop
stos
pop
out
dec
mov
add
in
inc
pop
mov
sub
lods
test
sbb
stc
fidivr
(bad)
(bad)
xor
xor
push
mov
jg
xor
mov
fld
dec
mov
sub
cmp
scas
dec
mov
out
loopne
cmp
popa
add
sub
je
out
and
adc
jnp
rcr
std
xor
mov
repnz
int
iret
fcmovnbe
and
or
dec
(bad)
outs
mov
inc
repnz
out
je
cmc
imul
add
lods
dec
push
add
mov
inc
out
and
pop
fcom
mov
into
retf
fmul
hlt
fimul
imul
sub
and
shl
mov
daa
xchg
ret
or
fild
push
or
enter
jecxz
bound
dec
mov
pop
xchg
in
lea
pop
cmps
sahf
icebp
nop
and
cwde
stos
mov
mov
mov
into
stos
call
sbb
push
jp
hlt
jmp
push
outs
outs
mov
dec
and
xchg
scas
mov
push
mul
push
push
dec
push
cmp
arpl
mov
dec
sub
repnz
add
pop
sar
jbe
pop
test
or
test
push
hlt
mov
aad
ds
aas
inc
sub
repz
mov
repz
int3
lods
pop
jno
jg
xchg
jae
cmps
imul
lods
push
sub
retf
cmp
mov
mov
sbb
sub
cmp
int3
mov
cmc
jmp
jmp
sub
int
sbb
inc
hlt
dec
sbb
retf
js
xor
jae
fadd
(bad)
mov
fmul
fst
cmp
test
hlt
cmps
(bad)
stos
and
(bad)
jbe
sub
retf
mov
xchg
jae
mov
cmps
adc
push
xor
ins
cs
lds
sub
dec
jne
pop
call
movs
inc
lahf
push
rcr
adc
arpl
sub
clc
scas
or
mov
sub
adc
adc
icebp
jmp
fild
adc
ret
mov
xchg
(bad)
pop
jae
xor
push
mov
jge
sahf
inc
inc
xor
test
mov
rol
mov
outs
jl
je
js
mov
and
jp
icebp
fwait
mov
(bad)
inc
fsubr
sbb
sub
das
repnz
mov
inc
pop
xchg
adc
push
inc
cmp
mov
call
out
je
sahf
or
cmp
dec
adc
pushf
sbb
iret
cwde
pop
push
rcr
lahf
cs
mov
fdiv
inc
jmp
mov
shr
xchg
add
hlt
in
pop
xor
movs
test
loope
movs
dec
sub
push
xchg
xchg
jg
loopne
mov
fs
sub
dec
test
xor
sti
push
adc
cmp
xchg
adc
daa
or
sub
sub
dec
mov
dec
sub
addr16
jns
mov
cld
das
enter
sahf
in
movs
shl
out
dec
mov
enter
fwait
mov
movs
sbb
out
push
(bad)
dec
mov
adc
or
or
fs
cs
mov
dec
sub
jge
pop
jge
xor
outs
test
je
sub
jle
xchg
cli
fisttp
add
mov
into
icebp
daa
xchg
mov
and
adc
pushf
cmp
mov
adc
jl
out
dec
pushf
ss
push
ja
and
in
loope
adc
mov
sbb
je
fucomi
xor
sbb
ja
xchg
jle
dec
mov
cmp
popa
mov
stos
inc
mov
mov
mov
jb
(bad)
(bad)
jp
sub
rcr
ret
inc
xlat
iret
pop
push
sub
jne
aaa
fisub
jo
jg
pop
nop
push
dec
fimul
pop
fwait
mov
retf
pop
arpl
push
xchg
mov
into
adc
push
jae
xchg
(bad)
fisub
pop
jnp
push
test
fbld
mov
ins
xor
out
adc
in
push
adc
popf
popa
sub
(bad)
jle
mov
xchg
sub
push
xchg
inc
jl
pop
adc
or
sahf
jnp
sbb
clc
sub
pop
mov
int
mov
ja
int
add
sub
or
cmovle
xchg
inc
jl
popa
cmc
test
aam
ins
lahf
(bad)
out
mov
cdq
mov
and
nop
mov
test
fstp
enter
fldz
movs
cld
mov
in
mov
adc
fidiv
push
inc
mov
add
mov
xor
test
push
fisubr
test
pusha
fisttp
in
push
test
sub
ret
xchg
std
ret
xor
mov
sub
(bad)
push
dec
xchg
movs
sbb
push
mov
repz
lahf
cmp
mov
xchg
out
das
mov
hlt
sub
adc
dec
mov
div
adc
sbb
imul
jns
popf
cli
ins
test
pusha
in
xchg
mov
mov
in
jns
pop
ret
xchg
sbb
push
dec
mov
mov
jbe
aad
push
pop
push
push
call
jmp
jmp
out
mov
call
ror
pop
data16
cs
or
pusha
shl
out
push
ss
mov
mov
push
sbb
fldcw
cmp
ret
mov
scas
lds
push
dec
outs
dec
cmp
jo
adc
dec
retf
mov
cdq
jne
jge
xor
jae
sti
clc
mov
sub
xchg
sar
lods
jecxz
leave
and
cmc
jle
call
pop
mov
mov
jecxz
inc
add
mov
ret
inc
idiv
ret
neg
pop
movs
jmp
pop
jl
pop
sub
rcpps
mov
(bad)
das
hlt
(bad)
(bad)
xchg
pop
test
fwait
jge
sub
sub
mov
pop
mov
stos
out
adc
imul
and
mov
aaa
jecxz
cs
ja
jmp
xchg
ds
movs
dec
cwde
mov
sbb
sbb
pop
jno
ret
rcl
outs
jp
sub
lock
or
and
test
std
rcl
test
ins
rcl
xor
sti
aam
sahf
or
mov
adc
rol
out
pop
cmps
adc
xchg
push
out
js
cmps
mov
jle
cmps
mov
push
repnz
lea
xchg
(bad)
pop
inc
mov
popf
mov
js
sti
cmp
xor
jl
jmp
rcl
ror
jno
inc
adc
stc
icebp
jp
iret
(bad)
xchg
sub
xchg
add
lock
cwde
xchg
add
int
mov
(bad)
loopne
mov
cmp
push
sahf
stos
hlt
pop
sub
or
push
push
mov
cmp
add
ins
dec
jo
xlat
cmps
jl
lds
mov
rol
add
inc
movs
into
sub
sti
aad
jne
cld
cld
sbb
inc
imul
pop
sbb
jg
xchg
aad
and
retf
xchg
lock
repnz
es
pop
mov
add
xor
mov
inc
aaa
sub
jo
xchg
and
int
adc
jp
pop
shl
(bad)
int3
out
cs
mov
js
popf
push
fbstp
call
aam
add
cmp
cmp
test
push
add
shr
test
fisubr
dec
aas
xor
movs
out
cmp
hlt
ins
adc
loope
int
xchg
jmp
ds
ret
scas
pusha
pop
and
push
cmp
push
xchg
push
cmp
ret
push
sbb
loopne
jmp
sub
mov
dec
xchg
imul
mov
mov
adc
pop
mul
data16
into
outs
or
cli
and
jns
and
mov
outs
aam
dec
dec
and
in
and
aaa
or
sbb
adc
sbb
cmp
xor
push
jp
cmps
jne
push
retf
inc
sbb
mov
cmp
out
psubsb
xchg
cmps
adc
sbb
adc
adc
jno
shl
pop
or
pop
dec
mov
mov
sbb
push
push
pop
pop
and
ins
repz
sbb
je
dec
call
add
outs
call
xchg
mov
sub
pop
jno
aas
push
retf
imul
and
lods
pop
lahf
test
jae
clc
iret
mov
enter
test
aaa
bound
sub
adc
fistp
add
push
sub
(bad)
jmp
sbb
(bad)
outs
daa
jb
or
iret
push
xor
dec
fdiv
sar
and
rcl
shl
sbb
adc
pop
cmp
stos
cmp
addr16
jg
sbb
outs
xor
xor
popf
sbb
or
(bad)
xchg
pop
push
fld
xlat
test
push
data16
jb
xchg
sbb
adc
adc
cmp
outs
loop
sub
into
mov
stos
jle
push
sbb
adc
push
imul
inc
(bad)
out
bound
js
dec
xchg
pop
pop
lahf
mov
fiadd
sbb
push
retf
cwde
xor
test
ja
sub
fist
aam
inc
cld
out
dec
cmovs
xchg
and
adc
inc
jne
and
add
mov
xor
mov
(bad)
lds
xchg
je
ja
cdq
pop
add
or
shr
cmc
and
or
mov
in
inc
out
xor
push
(bad)
(bad)
ds
mov
jne
cwde
idiv
dec
or
lea
sbb
mov
push
cmc
mov
push
cmp
jle
shl
pop
cmp
sahf
pop
xchg
fiadd
or
adc
inc
sbb
sar
and
mov
std
stc
mov
outs
iret
sub
test
jge
sar
js
lods
adc
mov
fs
mov
shr
push
add
and
aaa
enter
cmc
fidivr
dec
nop
adc
push
jl
mov
push
test
mov
fwait
inc
xchg
and
movs
call
lds
in
mov
loop
into
scas
fwait
into
mov
sub
xor
or
push
mov
ins
ret
mov
into
mov
jl
sbb
mul
int
xchg
jmp
jl
sub
jg
fild
xlat
fld
and
sbb
mov
aaa
mov
adc
push
fsubr
pop
push
mov
repnz
jbe
cmp
add
outs
popa
lock
pop
loope
mov
xchg
sub
popf
lods
out
call
xchg
mov
jl
add
fcmovnbe
push
mov
loopne
sbb
in
repnz
jmp
dec
sub
add
ret
(bad)
(bad)
jmp
int3
mov
mov
out
jbe
inc
fldcw
push
fistp
not
sti
mov
test
cmps
nop
nop
mov
mov
mov
in
jmp
xchg
mov
pop
js
out
jbe
push
xchg
xchg
mov
call
and
popf
daa
repnz
aas
faddp
lods
pop
fdivp
fnstsw
ins
shl
cs
repnz
in
cli
jg
icebp
cdq
aaa
sbb
movs
add
ins
mov
mov
xor
push
paddsw
jmp
mov
enter
cmp
or
dec
and
dec
out
adc
leave
lods
mov
push
js
and
mov
mov
fadd
mov
inc
fisubr
arpl
mov
sbb
mov
dec
dec
fimul
mov
cmp
mov
(bad)
inc
arpl
mov
inc
sbb
ror
sti
mov
icebp
adc
mov
ja
mov
pop
cmp
shl
mov
int
aad
lahf
(bad)
push
dec
pop
pop
lds
xor
mov
in
lock
cdq
sbb
inc
mov
movs
in
std
dec
add
push
lods
inc
jecxz
sub
jecxz
scas
jp
popf
sub
leave
mov
mov
das
loope
mov
push
cmps
sub
mov
fcomi
int3
pop
inc
mov
and
in
mov
clc
mov
xor
nop
inc
icebp
stos
sub
push
adc
xchg
(bad)
aad
and
mov
dec
mov
hlt
mov
fsubr
shl
dec
fiadd
jo
pushf
sub
pusha
fucomp
inc
mov
add
sbb
ret
fidiv
pop
xor
inc
xor
pop
xchg
in
pop
div
push
mov
mov
jnp
(bad)
adc
sbb
or
sti
jp
push
aaa
dec
xor
repnz
test
addr16
bound
mov
xchg
movs
xor
jne
adc
je
dec
mov
sub
call
aaa
push
xchg
sbb
test
ja
xlat
jecxz
arpl
stos
mov
rol
hlt
in
xchg
fld
xor
jl
or
(bad)
mov
test
clc
iret
test
(bad)
in
loope
adc
jl
mov
add
loope
push
arpl
jbe
loopne
inc
lahf
aad
adc
repz
out
sub
test
scas
inc
test
adc
sbb
enter
cdq
clc
cwde
sbb
jg
loope
ds
cmp
jg
sub
xchg
jo
mov
int
sar
push
cmp
mov
pop
adc
pop
jle
rep
jbe
movs
adc
cli
lahf
or
or
in
mov
mov
jbe
sar
repz
dec
enter
add
sahf
retf
neg
hlt
inc
int3
test
ja
mov
pop
movs
aas
js
sbb
lds
pop
stos
and
hlt
out
mov
cmc
sar
(bad)
fstp
mov
push
and
fld
push
cld
cmps
mov
cld
into
xchg
xchg
mov
shr
adc
inc
arpl
retf
mov
stos
mov
inc
fldenv
and
or
mov
cmp
push
mov
jb
add
jecxz
(bad)
or
movs
clc
pop
jne
push
scas
jge
imul
xchg
jge
lahf
(bad)
icebp
add
mov
fistp
sbb
popa
test
jecxz
in
cmp
lods
cmp
test
(bad)
adc
jg
pop
sub
es
xchg
mul
jae
ret
sub
sub
mov
in
dec
les
fs
sti
add
xchg
loope
ins
das
movs
fcomip
jge
call
nop
push
loopne
fwait
int
cwde
test
fsub
ds
out
xor
pop
jae
mov
aas
stos
adc
stos
lahf
xchg
sub
jmp
movs
aaa
cmc
mov
or
scas
pusha
aad
icebp
ret
bound
xor
jmp
(bad)
fdiv
(bad)
test
fwait
mov
push
mov
cmp
xchg
jmp
or
mov
aas
ins
mov
inc
mov
jb
pop
pop
(bad)
repnz
ds
fsub
xchg
jmp
pop
mov
or
dec
and
js
stos
int3
jecxz
mov
test
test
or
pop
fdivrp
inc
adc
jmp
lods
movs
fcomp
dec
movs
dec
mov
cli
mov
push
ret
aas
push
and
jae
es
adc
xchg
jne
xchg
repz
lea
mov
nop
adc
hlt
idiv
xlat
lods
addr16
and
mov
or
retf
jne
sbb
loop
dec
inc
(bad)
fbld
das
add
cdq
cmp
mov
jle
hlt
ret
sbb
mov
(bad)
in
hlt
retf
aad
mov
cmps
cmp
mov
fbld
shr
rol
inc
je
(bad)
out
mov
pop
inc
pop
cmps
jns
bndstx
hlt
dec
pop
xchg
dec
adc
push
dec
sub
(bad)
in
and
repz
sbb
lds
cwde
mov
mov
adc
fisubr
rol
adc
fwait
sbb
push
sub
and
sub
adc
imul
cwde
push
inc
jp
je
xor
mov
stos
jge
sub
clc
repz
test
cwde
adc
icebp
sahf
mov
lods
stos
adc
sbb
call
cli
sub
loop
or
js
cmc
or
lods
gs
fistp
retf
fwait
pop
sub
out
ins
jmp
xor
fdiv
push
scas
iret
imul
add
enter
pushf
hlt
test
jge
loope
pop
outs
mov
sti
adc
shl
dec
cmc
xchg
jg
mov
jmp
sbb
sbb
jae
push
inc
sbb
xor
mov
(bad)
aam
cli
in
addr16
imul
nop
loop
in
cwde
loopne
mov
or
test
int3
xchg
fwait
mov
int3
and
or
dec
xor
arpl
test
pop
jo
loop
push
xchg
sahf
pop
mov
rcr
inc
in
(bad)
adc
lahf
das
enter
in
outs
loope
pop
sbb
add
or
dec
xchg
aam
sub
xlat
data16
sub
stos
jl
lods
dec
(bad)
js
out
scas
imul
inc
addr16
enter
shl
inc
fs
ret
inc
dec
dec
sbb
jmp
adc
and
add
inc
cld
sub
lds
imul
ror
jns
adc
fisub
int3
xor
fst
push
in
pushf
cmp
mov
imul
or
mov
dec
popa
cmp
inc
sbb
xchg
pushf
(bad)
hlt
mov
fnstcw
push
ins
cs
mov
shl
add
and
dec
pop
retf
and
call
cmp
(bad)
retf
inc
push
iret
dec
xchg
retf
jp
scas
mov
xchg
mov
xor
call
or
mov
adc
(bad)
cmps
prefetch
sbb
call
cwde
or
cmp
sahf
pop
mov
mov
push
cwde
jbe
or
mov
and
or
sbb
xchg
imul
stos
out
ret
idiv
push
lods
repz
iret
dec
les
xchg
clc
xor
dec
sub
xor
inc
xor
jge
rol
or
push
add
fcmovnb
mul
xchg
mov
call
(bad)
mov
cmp
push
and
mov
mov
in
call
push
push
cmp
(bad)
jl
in
jecxz
retf
iret
into
dec
mov
gs
in
leave
xchg
mov
and
jg
mov
sbb
sbb
fadd
in
sbb
push
(bad)
jecxz
ret
sub
fild
ficom
fisub
sub
ret
ins
out
inc
hlt
jecxz
sub
mov
(bad)
aad
int
mov
retf
xchg
out
stc
mov
aam
adc
arpl
and
pop
mov
add
cwde
sbb
popf
lock
test
div
push
in
loop
and
add
xchg
mov
xchg
dec
pop
add
push
sbb
push
inc
sub
jo
repnz
push
mov
shl
je
test
sbb
pop
cmp
repnz
xor
aaa
aas
inc
dec
cmp
jo
js
sbb
pop
or
adc
mov
sub
push
or
mov
push
pop
ret
pop
outs
or
and
sbb
and
push
(bad)
mov
sub
sub
nop
test
imul
mov
xchg
js
pop
ins
push
push
xor
inc
sbb
pop
sub
mov
movs
int3
cwde
aas
sub
add
pop
icebp
shl
fst
pop
pop
push
test
sub
nop
jbe
adc
stos
iret
fisub
imul
out
das
sub
mov
xchg
mov
xor
inc
sbb
xchg
and
ret
dec
cmps
test
aad
in
mov
add
cli
or
neg
add
inc
rol
pop
adc
cmp
ins
push
test
jge
stos
xor
scas
shl
lds
xor
jae
lahf
pop
mov
and
add
cmp
repz
xchg
call
aas
inc
sub
cli
iret
cs
jns
daa
ror
add
stos
inc
mov
arpl
jnp
les
push
adc
pusha
sub
mov
sti
inc
sbb
pop
push
push
xchg
sub
mul
cmc
mov
test
rol
pop
popa
sub
mov
aas
ins
out
arpl
dec
cmp
adc
test
or
pop
sar
mov
xchg
mov
sti
stos
add
fisttp
and
dec
add
mov
imul
imul
ds
xor
fwait
mov
push
xchg
xchg
loopne
jbe
in
sub
rcr
into
test
out
aam
mov
jb
fdivp
aam
adc
test
cmps
movq
and
inc
test
xor
push
lahf
fs
fucomi
dec
push
jbe
(bad)
fild
inc
inc
push
mov
outs
ja
rcr
adc
in
test
clc
or
fstp
movs
sub
pop
push
pop
rol
cs
mov
shl
xchg
or
les
mov
ins
inc
sar
clc
push
cs
neg
push
test
ror
shl
repz
xor
adc
mov
xor
fmul
adc
sbb
out
(bad)
sti
pop
cwde
in
jae
mov
aam
xor
fidivr
lock
mov
or
out
ret
push
je
cmc
adc
daa
or
and
and
and
in
sub
out
sub
dec
push
push
pop
xor
sbb
lahf
inc
add
mov
call
(bad)
dec
dec
cmp
movs
pop
push
mov
mov
es
idiv
mov
(bad)
mov
add
ds
outs
mov
daa
das
inc
sub
daa
dec
aas
push
mov
jmp
scas
retf
xor
and
jmp
fs
xor
sbb
mov
push
and
push
push
nop
push
neg
(bad)
out
jecxz
mov
iret
or
int
or
dec
mov
cmp
add
into
mov
cmp
cs
jnp
xchg
xchg
xlat
mov
sub
test
addr16
clc
adc
xor
call
aam
cmc
and
add
inc
xor
mov
into
ret
push
sbb
out
arpl
stos
inc
dec
in
jno
test
xor
mov
cmp
movs
mov
cmc
dec
out
mov
cs
mov
adc
test
test
dec
dec
inc
mov
in
sub
enter
jbe
retf
sub
(bad)
push
mov
add
sub
mov
ror
mov
mov
shl
push
stc
icebp
jmp
adc
rcl
or
mov
imul
inc
xchg
xchg
aas
mov
dec
call
(bad)
adc
sub
xchg
push
(bad)
ins
xchg
cmps
xchg
xor
popa
mov
imul
mov
push
push
jecxz
popa
mov
cmp
movs
or
cdq
popa
out
into
daa
adc
or
fcomip
inc
or
arpl
jns
inc
mov
jp
popa
cmp
ins
ret
lods
fincstp
jmp
into
cmp
test
jae
cmp
in
and
dec
clc
mov
mov
(bad)
jmp
adc
add
push
mov
(bad)
mov
add
jae
movs
or
or
add
or
sahf
dec
aad
or
repnz
xor
mov
adc
fild
pop
lock
jmp
fisttp
mov
and
mov
adc
aad
xor
mov
mov
pop
sub
stos
fs
rcl
sub
sar
inc
(bad)
and
pushf
call
mov
mov
aam
test
imul
and
inc
push
js
pop
sti
or
jl
or
and
je
clc
inc
stos
inc
pop
or
adc
fsubr
sub
loop
ds
jle
popf
out
pop
mov
sbb
lods
xchg
test
pushf
jge
mov
sbb
loope
pop
mov
sbb
dec
imul
cmps
imul
loopne
push
sbb
adc
push
fs
mov
dec
cmps
adc
xlat
loope
and
dec
pop
bound
dec
js
mov
lea
out
fstp
aaa
add
push
xor
sar
mov
push
sub
pop
jb
cmc
rol
jo
adc
idiv
add
and
and
push
add
sbb
or
sub
or
cmps
and
fwait
jb
cwde
cmp
inc
sub
mov
sti
(bad)
xchg
mov
test
push
dec
fisub
mov
and
inc
jle
xchg
mov
and
into
nop
addr16
inc
push
cmp
clc
inc
dec
jmp
pop
mov
scas
lods
xor
mov
es
into
repnz
repz
cdq
mov
xlat
daa
repnz
add
fadd
mov
das
xor
bnd
cwde
(bad)
cwde
push
sub
aam
movs
in
(bad)
nop
aad
or
ins
pop
adc
xor
sbb
mov
ror
xor
rol
dec
in
in
sub
mov
ins
jbe
push
inc
fiadd
data16
fsubr
sbb
sub
pop
adc
outs
cs
fisub
xchg
cmp
test
int
and
loopne
popa
ret
(bad)
sti
mov
push
out
ss
mov
mov
jno
cmp
cmc
out
push
(bad)
jl
cmp
ret
mov
loop
imul
add
icebp
fxch
rcl
push
lods
ds
cmps
adc
lds
inc
in
mov
pop
mov
leave
data16
cmp
clc
inc
idiv
jo
in
jecxz
inc
dec
jno
fistp
mov
movs
(bad)
pusha
mul
sti
and
les
jo
and
jg
lods
jl
imul
adc
jge
mov
and
xor
or
adc
lock
add
fimul
ds
aas
stc
jecxz
out
loopne
add
sbb
std
and
shr
dec
call
mov
xchg
ret
mov
jae
aam
xor
das
inc
sub
repz
mov
retf
and
pop
pop
cmp
push
and
mov
xor
lds
outs
jl
ds
in
ss
add
scas
loopne
call
add
out
jnp
mov
ss
call
adc
cwde
jge
cld
out
pop
push
mov
(bad)
xchg
outs
add
inc
dec
lahf
jae
mov
dec
repz
outs
nop
fnstcw
rol
ret
div
ret
jns
cmp
ins
sub
cld
arpl
arpl
loop
pusha
icebp
cli
(bad)
frstor
pop
movs
lods
test
mov
dec
adc
cwde
inc
int3
add
or
stos
in
pop
xlat
cs
add
out
add
pushf
mov
mov
shl
inc
mov
cld
popf
outs
mov
jnp
or
mov
cmovno
push
mov
call
fsubr
cwde
or
(bad)
pusha
adc
mov
test
jg
push
pop
push
push
aad
(bad)
data16
cdq
xor
js
jmp
fwait
jmp
adc
ror
sbb
lock
xor
icebp
dec
mov
add
loop
imul
repnz
jle
pop
ror
ror
adc
inc
xchg
lods
fwait
xor
dec
inc
cmp
or
adc
push
adc
mul
dec
test
fist
fcom
push
mov
mov
cmp
cs
bound
dec
push
xlat
mov
out
cs
(bad)
bound
mov
stos
xor
inc
xchg
add
popf
pop
cwde
cdq
mov
or
push
and
pop
arpl
mov
cs
adc
mov
aaa
or
bswap
mov
push
jge
dec
popa
inc
cmp
xchg
jo
push
std
mov
(bad)
mov
fwait
stos
mov
aad
dec
dec
pusha
ds
adc
cmp
mov
pop
adc
mov
mov
loope
xor
xchg
sub
xchg
inc
lea
mov
scas
test
cdq
adc
pop
fld
xchg
or
loopne
and
das
pop
fdiv
jns
shl
cmc
xor
int
loop
adc
mov
fsub
inc
je
call
add
push
jno
hlt
push
mov
cli
dec
pop
inc
das
int
out
nop
mov
or
scas
int3
enter
push
fwait
(bad)
push
pop
ror
inc
mov
push
out
jno
mov
inc
stc
scas
data16
jns
pop
in
inc
xchg
jb
push
jp
cdq
sahf
in
sbb
rcl
sbb
xchg
lock
ds
int3
stc
pop
inc
xchg
test
push
xor
sub
adc
jmp
jp
clc
push
mov
enter
mov
cmp
pop
scas
sbb
retf
and
xor
push
fnstcw
adc
ins
push
pop
mov
cmp
pop
enter
jle
xor
in
jnp
addr16
mov
cs
pop
dec
les
shr
sub
sub
sub
(bad)
jp
mov
clc
mov
mov
in
xor
fs
cmp
lahf
ds
sub
jecxz
sbb
fcmovbe
and
add
sbb
hlt
fistp
mov
dec
ret
fcmovnbe
sub
out
jp
cmp
lds
ror
aam
retf
xchg
xor
xchg
push
cmp
test
mov
aas
aad
fcom
imul
pop
ds
popf
mov
mov
ret
add
ins
push
js
add
imul
adc
in
adc
push
fadd
ja
daa
sti
shr
inc
jnp
loopne
push
pushf
js
push
xchg
sbb
jb
sbb
jecxz
xchg
in
sub
pushf
xor
cmps
inc
jl
push
mov
pop
or
push
and
sbb
and
mov
or
outs
mov
call
dec
ret
icebp
(bad)
pop
lea
lods
popa
fimul
rcr
push
mov
sbb
and
push
and
pushw
cdq
int
int3
shl
arpl
out
push
mov
and
sbb
pushf
fist
mov
add
jns
pushf
push
jmp
fmul
test
inc
and
inc
sbb
loope
jb
adc
dec
aaa
aas
jge
dec
lahf
repz
push
or
xor
lea
pop
mov
add
or
or
lea
sti
scas
mov
scas
jns
inc
mov
mov
add
sub
call
scas
rol
in
mov
es
lods
adc
or
inc
scas
pop
fidiv
xor
adc
call
ret
daa
ins
mov
enter
sbb
dec
cmp
pop
mov
fadd
outs
mov
div
mov
push
pop
pop
xchg
jl
(bad)
xor
rcl
das
sub
outs
lock
fist
pop
push
retf
xchg
pop
dec
jmp
jmp
mov
fidiv
cli
push
mul
mov
dec
dec
test
fild
cmp
mov
fcmovnu
add
and
out
pusha
sbb
pop
push
shl
std
or
inc
imul
pop
sub
imul
xlat
add
dec
jmp
ror
ja
stos
sub
(bad)
jecxz
mov
dec
dec
shl
mov
std
in
test
sbb
sbb
mov
nop
dec
pop
dec
jle
test
add
push
cmps
or
mov
pop
jp
dec
es
xchg
ds
mov
aas
jmp
repz
sub
dec
mov
fidiv
iret
or
test
jne
cmp
dec
mov
int3
addr16
arpl
cwde
daa
repz
call
sbb
je
sub
xor
fldcw
call
in
movs
(bad)
jmp
cmp
sbb
push
cmps
movs
pushf
pop
cmp
daa
xchg
adc
cld
mov
ror
mov
pop
pushf
scas
adc
fcom
nop
xor
xchg
xchg
mov
adc
in
mov
(bad)
fstp
adc
jp
lock
mov
push
repnz
loopne
sbb
cdq
js
ja
xchg
js
jnp
nop
es
mov
add
dec
jae
pop
retf
add
or
cmovae
lea
xor
xchg
jns
add
jno
mov
xor
jmp
ret
adc
pop
adc
cmc
pop
cmps
popa
ror
add
mov
inc
lahf
or
scas
ins
dec
jne
cmps
inc
sub
sub
and
jle
lock
sar
and
scas
add
outs
out
mov
or
jne
cmp
adc
pusha
aad
iret
inc
add
mov
ja
dec
imul
(bad)
mov
adc
out
mov
aam
mov
loopne
mov
mov
dec
imul
jp
dec
mov
jge
mov
(bad)
inc
mov
mov
sbb
shl
ficom
xchg
cmps
fwait
dec
stos
jle
mov
and
sbb
mov
mov
stos
sub
fdiv
pop
test
mov
(bad)
scas
pop
xor
jmp
in
pop
call
pushf
xor
lock
jbe
sar
lea
scas
cs
xor
in
add
mov
les
movs
jg
mov
mov
retf
jo
gs
sbb
and
xchg
add
inc
mov
push
mov
fbld
cld
pusha
sub
adc
cmp
xor
js
imul
jnp
mov
outs
cld
xchg
sub
mov
and
mov
pop
inc
aas
adc
dec
push
iret
jge
fadd
je
rcl
loop
push
in
(bad)
stos
ror
jmp
cld
(bad)
out
call
jle
ins
mov
outs
xchg
sub
sbb
in
fwait
push
jge
aas
inc
jle
add
add
data16
shl
mov
retf
xchg
clc
mov
scas
add
(bad)
and
push
cmps
xor
aas
sti
dec
mov
pop
mov
pop
xor
repnz
jmp
push
cmp
rol
jge
push
adc
inc
push
dec
cdq
leave
adc
popa
push
pop
ret
pop
pop
and
clc
cld
dec
dec
inc
jbe
add
enter
fstp
sbb
sbb
inc
pop
aam
dec
sbb
aad
data16
fs
test
push
(bad)
scas
adc
xchg
and
mov
add
mov
push
mov
(bad)
cmp
js
cmc
rcr
mov
pop
add
test
mov
pop
xor
cmc
adc
jns
jmp
je
add
lods
mov
mov
push
pushf
popf
in
inc
xor
rcl
mov
cmc
push
popf
jne
ss
dec
clc
inc
xor
sub
ds
out
rol
lock
popf
leave
in
cmp
fist
mov
cmp
push
pop
imul
mov
xchg
push
sbb
dec
push
push
rcr
fdivr
cdq
dec
mov
scas
or
fs
std
aad
stos
in
stos
in
int3
sub
or
pop
add
pop
xor
stos
test
mov
push
and
mov
aad
leave
xor
cmp
(bad)
adc
xchg
xchg
das
jmp
jmp
dec
stos
lods
call
cld
test
xor
aas
stos
pop
xor
addr16
or
pop
sbb
in
mov
push
jecxz
in
popaw
dec
dec
fsub
xchg
mov
repz
xlat
movs
dec
ror
mov
sbb
push
mov
jmp
(bad)
call
mov
inc
int
push
or
addr16
push
push
popf
movs
fnstsw
mov
test
iret
pop
pop
adc
and
dec
sub
or
jae
mov
retf
jmp
lea
add
mov
ror
inc
addr16
push
iret
push
fst
pop
xchg
jno
mov
in
fisubr
jnp
js
add
mov
or
adc
pop
rcl
pop
cmc
dec
jnp
sub
ret
jmp
call
and
push
and
jb
or
xlat
add
cdq
outs
sti
imul
xor
xor
pushf
test
mov
and
hlt
into
bound
push
sar
mov
pop
popf
scas
add
or
mov
pop
pop
rcr
aas
add
loopne
test
xchg
ins
ss
mov
aaa
loop
popfw
data16
ret
push
sbb
out
pop
and
sbb
aaa
inc
cwde
pop
jns
or
pop
cmp
scas
lock
std
push
jne
fwait
mov
sbb
push
mov
xor
cmp
push
js
dec
push
jle
adc
sub
stc
je
in
out
cmps
sbb
pusha
jecxz
dec
cmps
vmulss
xchg
inc
dec
frstpm(287
xor
mov
inc
sar
cmp
pop
and
ds
adc
pop
fst
jp
cs
xor
outs
lods
shl
xor
stc
mov
bound
repz
jg
dec
int
fwait
in
add
loop
daa
xchg
pop
mov
scas
pop
out
or
adc
xchg
xchg
movs
jecxz
mov
mov
daa
pop
xor
dec
jo
push
fstp
xchg
xchg
xchg
fild
aam
mov
rcl
mov
scas
ds
xchg
hlt
pushf
out
sub
pop
das
int
xor
nop
sub
movs
inc
ror
in
sahf
jle
in
xor
movups
ret
outs
mov
pop
ins
fnstenv
lahf
lods
pop
cli
inc
shl
aas
cmc
mov
adc
jecxz
inc
push
(bad)
pop
or
lock
sti
leave
call
pusha
jmp
adc
push
push
js
fbld
xlat
call
fwait
jne
adc
mov
inc
xchg
adc
hlt
(bad)
js
dec
adc
loopne
nop
fadd
dec
mov
or
enter
push
movs
cmp
imul
mov
inc
or
adc
sub
xor
stos
mov
stc
arpl
add
addr16
inc
js
push
jnp
jbe
sbb
in
jecxz
jne
in
and
adc
loop
mov
mov
cmp
jg
scas
pop
cmp
sti
push
sbb
daa
inc
fcmovbe
out
xchg
jl
add
or
ja
push
lock
js
add
sub
dec
jnp
push
leave
dec
in
xchg
mov
jmp
xor
and
mov
or
mov
xor
sub
mov
fnstenv
shl
sub
loop
imul
jle
jnp
test
rcl
inc
xchg
xor
mov
pop
clc
call
in
cmp
xchg
jl
loopne
mov
add
adc
jne
sbb
mov
pop
leave
adc
pop
shl
pop
and
adc
fnstsw
mov
sub
pop
xor
mov
ins
mov
pop
adc
mov
loopne
je
sub
sbb
(bad)
sahf
test
pop
cdq
sbb
bnd
push
mov
gs
fistp
(bad)
jns
test
retf
cdq
push
xchg
mov
ficom
jecxz
(bad)
ds
pop
dec
pop
mov
cld
test
out
inc
jno
and
(bad)
into
fwait
rol
push
cli
xlat
pop
dec
jbe
pop
mov
dec
call
pop
or
retf
adc
push
(bad)
jl
sbb
in
lds
pop
adc
out
cmp
sbb
popa
jmp
xor
sub
mov
mov
cmc
(bad)
movs
aaa
mov
dec
xor
loopne
sub
ror
jno
dec
push
shl
out
ret
mov
add
jle
int
push
cdq
int3
mov
int3
push
mov
inc
sar
aaa
push
adc
(bad)
pop
jl
or
shl
int3
lahf
xor
xchg
add
scas
das
(bad)
fld
xchg
std
in
sahf
xlat
jb
dec
jl
int3
and
xchg
add
xchg
sub
mov
push
pusha
xor
inc
mov
xchg
out
sbb
into
xlat
loop
shr
cs
cli
push
or
and
int3
mov
pop
jge
mov
mov
adc
imul
cmp
xchg
lock
pop
push
mov
pop
popa
dec
sub
xor
out
jmp
ret
sti
sub
jle
in
je
mov
into
div
fsubr
and
jmp
pop
(bad)
inc
loop
jmp
call
sbb
arpl
xchg
sahf
stc
sbb
mov
popf
enter
xchg
out
adc
jns
push
repnz
(bad)
sti
mov
push
cmp
test
(bad)
ficomp
in
pusha
js
daa
dec
sub
repz
xor
cmps
xor
out
cdq
inc
mov
push
retf
movs
sub
adc
(bad)
jns
jno
fild
out
bnd
add
and
cwde
sbb
mov
sbb
xchg
jge
dec
pushf
mov
xor
jnp
cli
pop
mov
(bad)
leave
rcl
push
mov
push
mov
push
mov
xchg
dec
lods
mov
mov
pop
cmp
push
cmp
add
and
loope
outs
aaa
stc
jnp
adc
xchg
cmp
adc
pop
jae
mov
test
inc
sbb
jne
aam
cs
jmp
inc
or
pop
clc
ja
ins
xor
xchg
inc
adc
bound
(bad)
cmp
pop
movs
mov
ret
out
(bad)
ret
mov
pop
pop
shl
xor
fmul
xor
int3
jp
sahf
mov
daa
adc
pop
(bad)
mul
cmc
shl
pop
pop
pop
shl
cld
jmp
mov
or
rol
mov
popf
adc
xor
test
shl
aad
call
cld
mov
shl
mov
mov
pop
inc
es
mov
cmps
adc
inc
or
cmp
cmp
jns
inc
adc
jl
or
xchg
cmps
and
jb
or
add
pusha
add
pop
pcmpgtw
push
or
outs
stc
std
pop
outs
in
jnp
xchg
jae
ret
sub
in
(bad)
sub
push
outs
out
push
push
add
mov
aam
ja
dec
ret
cmp
mov
inc
in
adc
sub
push
int
cmps
mov
cmc
and
xchg
inc
ret
fsubr
std
xchg
ficom
icebp
dec
sub
aaa
cld
(bad)
out
pop
cld
pushf
inc
imul
push
add
retf
dec
sub
adc
sbb
pop
adc
imul
fisttp
mov
mov
push
call
outs
pushf
xor
fimul
mov
and
pop
lea
test
stos
adc
and
ins
js
nop
lea
push
in
push
mov
jmp
cmps
mov
fnstenv
adc
repz
fs
cmps
add
rcr
add
test
and
sti
clc
jle
adc
push
and
dec
ret
ret
pusha
lods
fst
add
mul
pushf
adc
es
aas
out
xchg
data16
or
xor
jno
pop
jnp
sahf
loope
ds
cmps
mov
xor
aas
ret
imul
push
ficom
fild
out
pop
fdiv
cmp
inc
xchg
jl
popa
mov
in
jne
pop
out
mov
(bad)
int3
push
data16
xor
push
ror
ret
outs
out
fdiv
xor
xor
mov
icebp
add
adc
and
xor
cdq
pop
cmc
adc
xchg
gs
enter
mov
jns
ins
test
shl
call
out
call
call
inc
jbe
aad
loope
add
lahf
nop
dec
rol
or
pop
scas
call
mov
push
xchg
or
pushf
or
mov
mov
inc
jmp
retf
or
not
mov
xor
xchg
sbb
and
gs
enter
out
aad
lock
sbb
sub
imul
mov
shl
or
dec
and
pusha
jnp
xchg
pushaw
scas
imul
cmps
clc
bound
sub
fs
ja
push
push
shr
cdq
inc
or
xor
xchg
cli
xchg
mov
pop
pushf
out
adc
mov
mov
rol
dec
or
ja
adc
xor
and
es
mov
adc
enter
or
pop
into
nop
iret
pop
stos
icebp
cmps
sbb
fucomp
inc
xchg
cwde
lods
ds
es
aaa
sbb
loopne
lods
mov
jecxz
sbb
das
rcr
inc
xchg
aas
or
mov
(bad)
pop
inc
xchg
jp
mov
adc
add
jge
mov
add
cmp
mov
pand
xlat
scas
rol
push
(bad)
jg
add
je
mov
stos
(bad)
stos
push
mov
lods
cld
cmp
rcr
pop
jae
sbb
ss
push
mov
jmp
inc
xor
jns
dec
pop
sub
in
mov
call
pop
dec
mov
push
mov
xlat
je
sbb
jnp
push
xor
cmp
mov
pop
push
aaa
jg
popf
dec
outs
push
push
fnstsw
cmc
bound
jle
xor
invd
(bad)
mov
xchg
sub
sub
jge
inc
cmp
in
das
aad
sub
jmp
push
push
cmp
test
mov
aaa
adc
mov
jmp
leave
xor
push
and
add
pop
outs
std
mov
in
mov
push
in
mov
pusha
repnz
or
cmp
in
fs
xor
mov
sub
and
mov
lahf
clc
push
inc
stos
pushf
aas
xchg
icebp
mul
xor
jg
jno
xchg
stos
xchg
retf
and
aas
lods
xor
xcrypt-ctr
cmps
pop
mov
push
and
dec
aaa
xchg
das
xchg
or
add
int3
xor
ret
aaa
repz
dec
push
and
arpl
call
rcr
adc
and
mov
push
test
fsub
push
sti
les
cmp
mov
out
jmp
fwait
jle
inc
push
fs
add
das
push
repnz
bound
in
mov
loop
or
call
dec
cmp
sub
stos
dec
gs
dec
mov
fdivr
loope
iret
jnp
jb
gs
cli
leave
pop
pop
mov
(bad)
cli
dec
dec
mov
push
dec
adc
fmul
xor
jae
cmps
shl
(bad)
xchg
cdq
scas
mov
fcmovnu
cmp
xor
push
cmp
inc
sub
nop
fist
(bad)
push
fld
cmp
lea
faddp
fiadd
imul
xchg
loopne
cmp
outs
inc
push
(bad)
test
fcom
les
gs
mov
adc
jecxz
ret
jmp
das
sub
cwd
jne
loop
xchg
xor
fisttp
imul
add
inc
or
loope
je
pop
outs
push
push
(bad)
ffreep
push
push
cmc
sti
test
mov
jp
or
sbb
or
mov
shl
in
xor
push
mov
gs
jmp
cmp
sti
cmp
push
jg
retf
cwde
inc
cli
ret
jo
pop
dec
mov
test
imul
inc
push
loop
xchg
rcr
cmp
fst
jg
push
frstor
movs
jo
or
gs
xchg
movs
ins
daa
cld
fnsave
daa
scas
push
adc
mov
nop
add
dec
popa
nop
jnp
and
or
div
cmp
lods
jl
fcom
cmp
pop
(bad)
pop
cmc
push
pop
dec
dec
fnsave
jmp
and
sar
jl
inc
in
das
pop
in
jmp
dec
dec
lods
pop
popa
push
in
rol
int3
clc
in
cdq
cmps
xor
adc
rcr
lock
out
add
int3
jl
ret
cmps
stos
rol
sbb
in
popa
shrd
mov
mov
jp
jg
mov
sub
(bad)
sbb
pop
setb
push
popf
mov
hlt
in
call
cmp
in
enter
sub
xchg
lock
sub
sub
xor
xchg
xor
call
mov
mov
sub
dec
adc
(bad)
fs
ret
push
fisub
mov
sub
sahf
xor
pop
enter
sub
inc
mov
push
repz
add
pop
jecxz
inc
iret
mov
mov
cmp
or
xchg
push
not
aaa
add
xchg
loopne
test
add
sbb
mov
aad
and
mov
mov
mov
loop
fsubr
xchg
fs
fcmovne
ret
dec
sub
loopne
lods
in
xor
leave
mov
adc
or
xor
scas
xchg
movs
std
cmps
xor
test
inc
push
add
add
mov
and
movs
mov
sub
pop
adc
jno
push
in
push
ret
dec
cdq
aam
inc
cmp
and
sub
mov
push
std
and
inc
in
mov
fnstcw
js
mov
jle
sub
xchg
pop
jno
inc
lods
repz
lock
loop
(bad)
mov
pop
cld
scas
and
movs
ret
mov
hlt
mov
lds
jp
arpl
ins
cli
loop
or
hlt
(bad)
sbb
rol
icebp
cmps
cmp
jecxz
in
inc
movs
jns
sub
movs
pop
nop
add
xor
sub
addr16
jecxz
je
inc
xor
stos
or
fadd
mov
icebp
scas
pop
xor
xchg
mov
clc
mov
push
mov
push
jp
pop
(bad)
mov
loopne
stos
enter
jb
mov
scas
mov
and
ja
sbb
(bad)
push
dec
repnz
jle
clc
sub
inc
outs
dec
dec
jbe
inc
loope
cmp
xchg
jo
pop
cmova
or
adc
retf
(bad)
nop
test
mov
cmp
sub
adc
mov
bound
fxch
pop
ds
loope
jns
xchg
push
leave
fldcw
cmc
ficomp
addr16
or
inc
pop
lea
ret
add
in
adc
scas
add
icebp
inc
lods
lock
mov
scas
fsub
cmc
jle
repnz
adc
add
call
pushf
out
or
cmp
jl
jne
sbb
jp
push
mov
gs
xor
adc
dec
push
pop
ins
push
imul
xchg
jmp
cmps
fadd
out
aad
mov
enter
movs
call
jmp
add
popf
mov
xor
ins
and
or
add
mov
push
push
and
pop
cld
cmp
aam
jne
add
loopne
inc
push
xlat
push
pop
rcr
cli
mov
add
jge
mov
fmulp
adc
mov
cdq
nop
retf
or
ror
xchg
push
xchg
jb
adc
mov
aad
cmps
pop
mov
xchg
jne
loop
inc
enter
sub
cmp
sub
mov
fcom
adc
lock
xchg
out
sbb
jae
sbb
popf
scas
and
pop
lock
mov
push
xlat
das
(bad)
jge
mov
arpl
xchg
dec
dec
cmp
(bad)
fs
stos
or
ins
in
xor
inc
xchg
jmp
jne
mul
mov
cs
fisttp
add
xchg
fsubp
adc
jae
and
popa
jmp
jne
cdq
rol
push
aas
movs
jb
je
jp
fsubr
ret
jb
dec
pop
xor
std
call
in
xchg
jg
punpcklbw
jl
or
ins
(bad)
cmp
ficomp
or
out
loope
out
les
mov
add
fdivr
inc
or
xlat
cmp
push
enter
fsub
push
ret
dec
sar
test
scas
mov
inc
cmp
das
mov
out
xor
outs
mov
push
xchg
aad
ds
into
pop
out
push
push
fwait
push
xlat
mov
mov
in
pop
sti
in
xor
test
pop
ja
in
aas
sbb
xor
add
scas
dec
and
mov
pop
shr
push
fmul
shr
cli
mov
push
out
sbb
mov
fstp
jns
xor
sbb
dec
xchg
mov
pop
pop
fdivr
push
scas
xor
adc
iret
hlt
fldenv
and
xchg
loope
ficomp
in
inc
jno
and
mov
mov
aam
dec
dec
dec
repz
js
sti
out
aas
dec
mov
pop
adc
into
sub
jne
mov
dec
fs
xchg
and
mov
ins
adc
in
mov
add
inc
outs
popa
fadd
mov
es
inc
lahf
sbb
and
add
retf
mov
xchg
xor
pop
mov
or
xchg
mov
(bad)
fmul
mov
arpl
dec
sub
fsubp
sbb
jle
add
inc
pushf
sar
push
out
xchg
pop
mov
jge
jge
shr
inc
cmps
jb
mov
or
cmps
jae
and
or
cmc
inc
mov
in
call
ins
(bad)
std
xor
aas
ror
dec
jb
cmp
xchg
hlt
movs
retf
xor
bound
pusha
mov
cmps
out
dec
mov
inc
push
pop
cmc
xchg
lods
in
(bad)
push
aas
sub
pop
movs
and
mov
mov
jnp
mov
cmp
jb
les
cs
adc
mov
les
xchg
cli
lods
cmp
pusha
inc
xor
aad
ret
inc
shl
pop
or
nop
scas
int
jp
add
xchg
and
sub
mov
pop
popa
lock
xchg
daa
jne
loope
xor
loopne
cmp
enter
and
clc
inc
fadd
lods
loop
gs
xchg
scas
push
sbb
fld
inc
std
cmp
sbb
pop
ins
sbb
mov
add
ret
jge
and
sbb
sbb
stc
jno
inc
xor
or
mov
cld
push
cmp
inc
xchg
push
pop
pop
mov
bnd
mov
push
aam
xchg
xor
fistp
adc
push
xlat
jno
sbb
clc
ret
clc
adc
or
lea
mov
or
es
gs
div
scas
lds
mov
cmp
iret
xor
rcr
mov
aad
adc
and
mov
push
test
push
jb
add
int
mov
sub
int3
jae
sub
xchg
test
inc
in
out
cmp
pusha
call
add
adc
and
out
bound
sti
shl
movs
ja
lea
or
adc
dec
cmps
cmp
popa
fstp
sbb
(bad)
aam
shl
cmp
and
sub
inc
mov
loop
scas
cmps
in
out
call
push
leave
sbb
pop
ins
push
adc
and
mov
or
pop
cdq
or
push
ja
pusha
dec
test
stos
cs
aaa
xor
add
cmp
inc
pop
adc
(bad)
call
mov
lldt
and
xor
adc
cmp
sbb
in
dec
(bad)
jmp
sbb
movs
repnz
adc
mov
mov
add
test
test
add
mov
add
xchg
rcl
push
(bad)
push
shl
and
cmp
(bad)
mov
lods
push
sbb
pop
das
pop
inc
scas
stos
int3
and
call
or
jecxz
inc
jmp
jmp
ja
mov
xchg
mov
int
in
sub
rcr
adc
movs
jno
xchg
cmp
aaa
cmp
dec
or
popa
mov
jmp
cs
and
(bad)
sub
dec
js
sbb
fldcw
imul
xor
lock
jl
or
iret
cs
cwde
dec
gs
mov
xor
xor
xchg
call
repnz
inc
dec
add
cmp
fs
cdq
test
lock
xchg
and
leave
mov
adc
or
cld
inc
pop
stc
fidivr
dec
es
outs
cld
jl
jge
fnstenv
and
lods
xchg
mov
mov
pop
jmp
inc
(bad)
cmps
push
inc
dec
mov
mov
or
cmps
in
dec
mov
mov
test
xor
dec
jl
xchg
in
jg
jl
adc
sub
movs
sub
and
out
cmp
sub
mov
aad
rcl
inc
ja
clc
fwait
xchg
mov
mul
outs
std
mov
add
mov
call
ficomp
or
xchg
jno
movs
push
arpl
(bad)
ret
call
shl
cmp
adc
sbb
nop
jmp
in
adc
jbe
fst
out
std
pusha
and
jo
pop
cli
mov
mov
stos
test
mov
sub
cld
and
cmc
es
push
xchg
repnz
ret
hlt
icebp
cmp
outs
inc
cmps
pop
ret
sar
mov
data16
xor
outs
jg
out
pop
jae
stos
xlat
jmp
test
mov
aam
jmp
adc
xchg
jp
xor
movs
repz
lods
fsqrt
dec
push
(bad)
sbb
inc
cwde
push
fiadd
pushf
push
push
sub
fs
mov
sahf
pushf
mov
adc
arpl
fisubr
jp
mov
into
cmp
inc
cli
adc
out
retf
rol
scas
jmp
es
aam
inc
sbb
dec
jle
ins
bnd
je
ins
push
inc
pushf
mov
push
in
in
daa
retf
mov
mov
arpl
jae
int3
lea
shl
mov
sub
sub
sbb
pop
or
jns
scas
(bad)
repz
mov
hlt
xchg
test
in
leave
pop
cmc
and
lahf
repz
adc
lahf
push
mov
cdq
mov
mov
jg
xchg
mov
out
mov
mov
inc
scas
mov
cmc
xor
mov
bnd
dec
sub
xchg
xchg
and
dec
xchg
jns
pushf
ret
or
lods
push
cmc
ins
repnz
movs
xchg
jno
dec
push
retf
cmp
cmps
cmp
out
inc
push
and
add
stos
pop
test
adc
fimul
and
icebp
or
xor
aam
stos
pop
fstp
push
push
dec
cmp
jg
(bad)
cmps
add
mov
mov
jno
adc
or
fs
and
cmp
stos
push
mov
xlat
out
or
std
jmp
dec
es
pop
(bad)
mov
popf
push
and
dec
cmc
or
mov
inc
in
test
push
enter
pcmpeqw
push
mov
pop
addr16
inc
das
call
pop
cmps
test
inc
mov
cmp
ffree
or
mov
fcom
fisub
add
or
jmp
cmp
inc
(bad)
push
in
push
inc
or
cld
cmp
inc
or
cmps
dec
in
xchg
cmp
pop
stos
movs
out
out
test
stc
mov
stos
call
xchg
sbb
dec
fmul
adc
xchg
sahf
(bad)
cdq
cmps
movs
int
lahf
leave
(bad)
push
xchg
adc
xor
(bad)
jle
div
inc
jo
in
dec
popf
push
mov
dec
scas
inc
call
iret
int
out
mov
xor
cmps
jle
pop
cmps
mov
jl
xor
jmp
ja
lods
scas
cmp
push
pushf
and
push
sub
out
dec
xchg
mov
lds
(bad)
and
mov
sbb
jo
aam
jg
pushf
cli
adc
ja
pop
paddw
add
cmp
in
sub
sahf
arpl
jge
adc
dec
in
sub
ins
cmp
adc
xchg
out
pop
dec
leave
and
ja
jns
mov
pmaxub
push
mov
bound
stos
mov
pop
mov
shr
lahf
push
hlt
ja
dec
outs
fsub
cld
inc
test
es
mov
jnp
idiv
xchg
hlt
sahf
fsincos
and
test
daa
push
fbld
(bad)
dec
sub
daa
out
jb
data16
das
pop
xchg
jp
sub
xchg
ret
xchg
push
fidivr
xor
inc
movs
sub
and
ss
movs
and
add
mov
sub
arpl
arpl
push
mov
dec
pop
push
iret
push
sbb
retf
or
out
mov
outs
clc
sbb
int
cwde
pop
mov
and
xor
mov
mov
mov
int3
int3
cmp
clc
leave
pop
add
adc
loopne
ror
lods
sub
jns
cmp
les
mov
mov
jmp
and
inc
sbb
inc
ficomp
mov
ror
mov
shr
xchg
frstor
inc
mov
aam
addr16
pop
inc
repz
xchg
pop
pop
mov
push
mov
jnp
mov
or
cdq
jnp
and
fist
push
out
xor
xor
xchg
jg
xor
dec
idiv
cli
xchg
dec
push
push
movs
lods
xor
lock
imul
pushf
ret
ret
push
aad
out
fsubr
inc
dec
jge
cld
inc
scas
xor
pop
in
adc
mov
and
pop
push
add
cmp
xchg
inc
cmc
or
pop
popf
cmps
aaa
mov
pop
xchg
sub
pop
inc
cmp
ja
mov
shr
mov
add
xchg
push
or
pop
mov
adc
inc
(bad)
inc
repnz
ins
jmp
jg
mov
pop
inc
ror
mov
fisubr
pop
push
adc
pop
adc
cmp
push
mov
jp
sub
mov
repnz
dec
cs
inc
lea
scas
shl
sub
rcl
es
push
in
enter
cmp
rcl
and
ds
cs
imul
or
mov
cmps
jp
retf
sbb
imul
push
out
aas
sub
xchg
in
jmp
mov
fcmovu
inc
aaa
dec
(bad)
gs
scas
inc
ins
xchg
cs
dec
enter
mov
adc
and
ins
adc
dec
dec
out
shl
sbb
stc
xchg
cmp
mov
sbb
or
inc
jmp
out
ret
and
mov
push
mov
mov
aaa
stos
(bad)
ins
popf
into
(bad)
das
fstp
loop
or
add
cmp
(bad)
inc
dec
js
inc
mov
cmp
pop
clc
adc
adc
mov
outs
loopne
(bad)
loope
push
daa
mov
jp
cmp
mov
clc
inc
dec
int
dec
sbb
in
pop
mov
lea
ficom
adc
jmp
rol
ficom
lock
outs
and
int3
add
fdiv
cwde
xor
stos
dec
inc
dec
test
sub
xchg
xor
stos
(bad)
and
mov
pop
in
fdiv
lds
cmp
in
cwde
jle
fs
sahf
gs
push
push
xor
das
pop
xchg
ja
(bad)
test
int3
enter
inc
push
test
mov
out
adc
mov
push
mov
jns
lahf
out
ins
daa
cwde
out
inc
test
sbb
xchg
mov
dec
pusha
call
jecxz
push
(bad)
sahf
out
pop
push
scas
push
imul
push
cmp
fdivr
into
fcmovnb
idiv
cmp
cli
xlat
outs
push
(bad)
pushf
imul
dec
ret
daa
adc
adc
or
push
ret
bound
sub
bound
inc
xchg
xchg
pop
adc
test
(bad)
cdq
mov
imul
adc
call
xchg
(bad)
xor
add
fwait
cmps
lea
stc
push
ja
loopne
adc
ret
dec
mov
mov
jle
sar
jne
add
movs
outs
xor
dec
mov
inc
popa
outs
sub
xor
xchg
ins
test
xor
cmps
out
outs
scas
fwait
rcl
jge
cwde
push
inc
int
lods
scas
clc
sbb
mov
jl
test
jb
mov
ins
outs
lods
dec
or
push
outs
xchg
movsx
ret
cmp
inc
or
mov
(bad)
das
fwait
bound
mov
movs
jb
dec
ret
jmp
es
xor
push
pushf
and
in
pushf
or
jge
mov
and
push
jb
pusha
xchg
div
out
aad
(bad)
nop
push
cmp
fidivr
pop
jmp
push
xchg
add
lods
mov
push
or
cmp
jae
je
and
jbe
stc
repnz
push
sub
add
in
inc
sub
jmp
xor
or
dec
pop
inc
fdivrp
int3
loope
or
push
add
ins
rep
mov
or
adc
fcom
or
xchg
ins
adc
popa
push
jl
mov
xor
pushf
sbb
loop
fst
adc
mov
movs
jbe
int
mov
shl
and
sbb
in
mov
les
xor
inc
cmps
daa
pop
add
fstp
scas
sub
add
cld
mov
pop
out
lods
out
jecxz
jmp
loopne
cmp
mov
cli
pop
pop
out
hlt
movs
push
pop
or
test
dec
arpl
popw
adc
xlat
ja
sbb
(bad)
mov
inc
test
adc
js
fadd
sbb
sti
xchg
add
ret
mov
cmp
add
xchg
ss
xchg
mov
fwait
pusha
mov
mov
ds
pop
leave
scas
hlt
jmp
and
mov
out
test
ins
outs
cmp
movs
(bad)
push
dec
dec
pop
mov
add
pop
mov
fldenv
scas
pop
lea
sbb
lods
mov
jp
lods
int3
xchg
daa
jb
push
pushf
xchg
outs
jo
mov
xor
mov
fisttp
or
sub
inc
adc
dec
or
inc
sub
ficomp
mov
mov
sbb
sub
fstp
push
adc
outs
push
sahf
call
pop
test
mov
push
fstp
shl
mov
in
xlat
xchg
loope
icebp
sbb
ds
jmp
push
pop
data16
xor
leave
pop
jb
add
inc
ins
hlt
lods
add
enter
cmps
fwait
or
int3
mov
int3
add
das
mov
pop
or
rol
in
fdivr
dec
sbb
mov
aad
cld
xor
bound
mov
mov
enter
or
adc
call
jae
std
push
mov
cmp
(bad)
scas
cmc
iret
cmp
popa
outs
gs
jp
loop
xchg
fdivr
repz
pop
adc
(bad)
jg
stos
xor
pop
lock
scas
cmp
xchg
xor
scas
pop
cmp
mov
inc
push
jmp
lahf
in
and
jns
sbb
(bad)
cs
and
clc
pop
imul
test
mov
adc
in
adc
scas
sbb
sub
pop
push
ins
xchg
lea
or
sbb
or
out
std
xor
in
mov
push
xor
xchg
sbb
cmp
adc
popf
cmc
jge
fcomp
cli
call
xchg
cmp
jae
sub
cmps
sub
xlat
in
stos
aaa
in
inc
jge
ins
aad
cmp
std
dec
pop
inc
fimul
clc
pop
in
mov
push
in
(bad)
shl
xchg
outs
xor
into
clc
dec
inc
cmp
push
imul
mov
std
pop
in
mov
jns
aad
push
mov
outs
ja
aaa
(bad)
jbe
rol
test
in
and
mov
sbb
mov
ins
xor
and
enter
or
dec
ins
pop
rcr
add
mov
scas
fistp
ja
mov
push
ret
call
sbb
adc
or
mov
cdq
(bad)
xchg
cdq
bound
int
aad
pop
into
add
add
out
inc
or
stos
adc
xor
inc
sub
mov
push
cmp
(bad)
lods
mov
cmp
jbe
inc
mov
mov
test
je
jecxz
mov
dec
xor
dec
nop
icebp
stos
mov
inc
xchg
xchg
cmp
adc
push
mov
and
popa
xor
test
fs
sub
std
shl
add
inc
pusha
inc
pop
shl
mov
add
or
test
outs
into
mov
adc
jmp
sub
div
imul
mov
icebp
pop
push
mov
xchg
ins
pop
adc
outs
imul
arpl
add
mov
jecxz
faddp
sbb
mov
push
jg
repz
and
ja
fld
pop
addr16
mov
movs
inc
fwait
int
(bad)
lods
ficomp
pop
mov
cwde
jmp
cmps
(bad)
loop
pop
inc
iret
loopne
sub
add
push
push
push
xchg
or
bound
or
or
sbb
rcr
xchg
cmps
into
stos
enter
inc
pop
and
jle
call
push
movs
jae
movs
push
das
iret
cmps
cmp
das
dec
jp
fist
fadd
sar
sbb
je
ds
fsub
inc
out
pop
loope
call
clc
mov
lock
test
hlt
and
jmp
(bad)
loopne
push
ins
cmp
es
push
mov
push
imul
pop
adc
cmc
fist
cdq
cmps
loopne
and
es
repnz
or
adc
push
movs
jl
mov
push
adc
loope
xchg
test
xor
js
sub
push
adc
adc
ja
movs
mov
test
mov
data16
xor
inc
dec
push
sub
adc
mov
inc
mov
sub
das
lock
and
ins
mov
xor
mov
cmp
jge
icebp
pop
das
and
cmp
pop
in
cmp
xchg
in
push
mov
xlat
push
mov
cwde
data16
mov
pop
(bad)
out
jle
add
repnz
push
dec
js
and
cmps
test
mov
adc
not
test
(bad)
outs
lahf
pop
sub
sub
xchg
daa
or
push
xchg
push
dec
adc
sub
(bad)
int
ror
ins
lods
fwait
std
push
lods
cli
push
lods
pop
dec
test
sbb
xchg
xor
dec
pop
mov
add
cdq
push
div
sub
inc
jbe
mov
mov
jge
ins
pop
out
das
pop
and
repnz
mov
dec
xchg
sbb
jmp
iret
aas
jne
push
arpl
inc
or
jbe
xchg
popf
or
cmps
or
add
rcr
hlt
ss
movs
jg
pop
lea
push
jl
adc
add
arpl
call
mov
sub
fsubr
aam
je
push
mov
adc
mov
inc
repz
cmps
shl
pop
mov
and
cld
out
pop
ins
push
in
in
mov
xor
jle
rcl
push
adc
jbe
out
aam
jge
bsf
in
cmp
fwait
push
iret
xor
sbb
cmp
push
sbb
(bad)
mov
iret
mov
scas
push
imul
(bad)
mov
(bad)
cmps
sub
mov
dec
stc
loope
icebp
out
or
cs
mov
or
loope
ins
cmp
dec
fs
ja
jg
jecxz
inc
pop
cmp
add
sub
mov
fistp
jae
push
sahf
xlat
(bad)
int
sti
add
cmp
ss
mul
dec
or
fbstp
je
into
push
push
popf
jns
pop
out
jo
add
jl
push
mov
jb
int3
mov
mov
mov
dec
call
mov
sub
bound
cli
aas
add
fucom
pop
mov
mov
add
inc
push
rcr
pop
retf
cmp
mov
jnp
push
fnsave
movs
not
jb
clc
or
aaa
imul
pop
cmp
retf
xor
sbb
out
(bad)
call
jg
ret
or
push
xor
sub
adc
inc
fnstenv
mov
std
(bad)
fstp
push
loope
jmp
mov
sub
jb
inc
xchg
retf
sub
and
xchg
pusha
ss
mul
popf
push
pop
inc
les
clc
test
xchg
fnstenv
cmps
loop
pop
mov
fs
sti
xor
adc
hlt
fistp
mov
hlt
out
pusha
add
push
aad
jp
and
dec
shl
adc
out
fbstp
(bad)
std
stos
clc
lea
xchg
dec
scas
mov
pop
test
aaa
pop
push
jnp
test
xor
mov
ret
mov
xchg
xchg
inc
xor
adc
lahf
push
jbe
retf
(bad)
std
imul
mov
imul
out
ins
xor
mov
scas
sti
sbb
das
dec
pop
dec
stos
ret
dec
sbb
fimul
sub
sbb
sti
adc
jne
add
scas
not
xor
ret
repz
pop
jns
cmp
sti
sbb
mov
icebp
loope
push
push
in
sbb
out
push
aad
sahf
inc
dec
(bad)
and
pop
repz
mov
fisttp
adc
or
fldenv
sub
cs
and
mov
scas
shl
mov
mov
or
and
and
mov
and
push
sbb
loop
pop
mov
popa
jnp
add
jmp
js
or
sbb
dec
mov
arpl
push
dec
cmp
cli
push
mov
pop
stc
xlat
ja
aas
mov
push
lea
pop
inc
enter
jbe
sti
jg
dec
mov
mov
jge
pusha
imul
mov
cdq
(bad)
cld
popf
inc
retf
fadd
loopne
jl
pop
inc
sub
and
jae
aad
xchg
or
pop
in
(bad)
mov
comiss
pop
xchg
test
push
(bad)
ss
push
test
or
pop
mov
daa
and
lds
jne
gs
outs
jge
mov
cs
arpl
aaa
dec
mov
inc
xor
mov
imul
xchg
and
add
rcl
movs
or
loopne
mov
leave
inc
shl
pushf
mov
rcr
clc
stos
int
mov
xchg
jge
mov
mov
clc
add
dec
cmp
inc
push
push
dec
xchg
sub
(bad)
fcmovnb
dec
pop
loopne
or
mov
pop
mov
inc
jp
mov
sub
dec
sub
inc
or
pop
xchg
pop
mov
xor
push
lods
push
arpl
add
lods
cmp
jnp
jp
std
mov
repz
mov
scas
cld
dec
pop
aam
inc
pop
imul
pop
jne
xor
push
dec
cli
out
test
in
nop
mov
mov
(bad)
jmp
inc
outs
gs
mov
push
dec
cmp
push
stos
es
xchg
jne
mov
pop
mov
out
pop
xchg
mov
imul
add
dec
fst
out
adc
je
out
pop
inc
arpl
inc
mov
xor
cmp
or
and
jmp
mov
adc
(bad)
pop
inc
mov
fstp
sub
ja
stos
mov
jle
pop
mov
aad
imul
inc
pop
jp
mov
cmp
dec
push
adc
scas
cdq
lods
lahf
mul
popa
mov
adc
inc
jne
cmps
push
sbb
stc
xchg
rcr
add
sti
xchg
and
lock
cmp
inc
out
sahf
sbb
mov
pop
rcl
ret
sub
push
cmp
xchg
test
(bad)
aad
in
mov
mov
out
sar
sub
jmp
nop
jbe
pop
and
cwde
ins
not
lahf
xchg
std
dec
xlat
test
sub
ret
popa
xchg
repz
frstor
mov
xchg
push
dec
mov
popf
xchg
outs
jb
pop
in
test
and
mov
jne
nop
int
mov
ret
xor
inc
and
(bad)
out
rcl
or
or
jo
mov
sub
sbb
lahf
popf
sar
mov
(bad)
std
sub
out
data16
jb
clc
push
aas
ja
mov
mul
jg
jl
les
(bad)
rcr
jns
iret
cmps
pop
xor
call
fnsave
push
aad
into
scas
iret
repz
test
mov
das
jge
std
dec
fcmovnu
mov
push
and
xor
arpl
jecxz
and
call
sbb
shl
xchg
out
sbb
jbe
loopne
pop
mov
jne
push
cmp
jbe
jmp
push
gs
adc
inc
or
push
ja
or
mov
sbb
shl
clc
inc
ins
xor
(bad)
jg
mov
jne
mov
ror
lods
pop
cli
pop
fst
inc
cli
int
bound
aam
ds
xor
and
adc
sub
inc
call
test
pop
call
jg
pop
push
jo
inc
test
cmp
lods
adc
inc
in
mov
xchg
and
nop
ds
inc
in
push
sbb
jecxz
outs
push
es
mov
cmp
dec
sub
dec
mov
into
(bad)
das
call
std
sub
mov
add
popf
jne
fwait
jge
sahf
jle
adc
inc
dec
retf
jnp
std
push
iret
jge
jp
retf
add
out
movs
xchg
fsubr
push
pop
mov
aam
mov
cmp
cmp
jp
daa
inc
clc
rcr
data16
inc
xchg
mov
jmp
mov
lea
fist
push
(bad)
dec
call
pop
pop
sub
xchg
outs
imul
mov
in
hlt
mov
xchg
stos
push
push
dec
sub
push
popf
sub
inc
mov
inc
in
cli
mov
xor
push
adc
sub
call
jb
fcmove
stos
pop
js
jno
pop
push
add
mov
xor
cdq
lahf
and
jmp
movs
add
js
xchg
sbb
cmp
push
add
stos
push
dec
xchg
xchg
xor
push
push
loope
xchg
push
push
je
inc
xor
pop
lods
jmp
sbb
into
cmp
and
sub
(bad)
imul
cmps
lea
lock
xor
push
out
mov
(bad)
test
in
jg
les
jl
fs
movs
arpl
sbb
scas
mov
xchg
inc
xor
mov
imul
aas
mov
arpl
and
pop
out
mov
sbb
pusha
or
mov
xchg
add
xchg
repz
test
xor
not
pop
sbb
or
jl
push
sbb
ret
data16
loope
jne
pusha
pop
jae
adc
and
push
lahf
jbe
sti
sub
out
jge
xchg
xchg
mov
cmps
scas
inc
test
in
outs
jge
(bad)
push
xlat
(bad)
mov
mov
cmp
out
mov
ror
mov
fild
sub
sbb
inc
push
cmp
rol
jo
imul
ret
mov
pop
inc
loopne
(bad)
and
and
push
push
or
adc
in
in
inc
mov
ret
je
pop
stos
popa
sar
add
mov
cmp
movs
cmp
(bad)
loope
clc
push
xchg
jge
rol
lahf
pop
jnp
aam
inc
mov
mov
mov
add
cwde
pusha
add
mov
inc
xchg
(bad)
std
dec
pushf
repnz
dec
inc
dec
cmc
sub
es
(bad)
sub
dec
loopne
inc
adc
sti
mov
pop
and
in
clc
push
inc
sar
ror
pop
dec
push
sub
shl
cmc
aad
into
stos
mov
dec
into
and
fild
loop
hlt
std
xchg
ins
push
or
sub
movs
pop
xchg
jbe
(bad)
mov
sbb
sub
dec
inc
and
shl
cwde
das
inc
gs
std
repnz
push
mov
and
sbb
mov
(bad)
mul
cmp
ins
aam
adc
xchg
pushfw
cwde
pop
loop
dec
rcl
sbb
clc
addr16
mov
rol
inc
cmp
mov
xor
icebp
pop
sahf
stos
jge
sbb
ret
in
xchg
popf
and
int
xor
xchg
int3
sub
jnp
mov
push
add
cld
out
jge
pop
gs
or
int3
fild
inc
in
pop
out
retf
fimul
iret
xchg
and
(bad)
add
jle
pop
sbb
das
push
mov
add
inc
push
add
or
cmp
mov
nop
retf
or
fchs
mov
or
or
js
ret
mov
xor
dec
loopne
xchg
repnz
mov
sbb
cmc
add
fnstsw
and
adc
fdiv
xchg
(bad)
mul
sub
cmp
jecxz
js
sub
stos
mov
fadd
fcomp
sbb
add
add
add
inc
and
jns
iret
int3
scas
pop
inc
mov
xor
lock
fwait
inc
aam
sbb
cmps
mov
loope
adc
or
mov
dec
fst
cmc
aam
or
in
(bad)
pushf
dec
and
lods
out
dec
add
xchg
bnd
ss
(bad)
(bad)
out
jl
sbb
fwait
(bad)
ja
aas
mov
jnp
mov
cmp
aaa
push
pop
jmp
iret
mov
loopne
aam
sub
outs
mov
mov
(bad)
push
xor
rol
in
lock
mov
cmp
outs
xor
in
stos
cdq
test
call
(bad)
pop
pop
mov
mov
je
mov
nop
or
into
xor
bound
mov
cmp
jmp
cdq
pop
aas
(bad)
in
int3
mov
(bad)
repz
pop
xor
fadd
mov
xchg
add
rcr
mov
imul
pop
mov
add
aad
pop
test
loopne
add
adc
dec
mov
nop
outs
pop
rcr
ds
das
into
stos
leave
(bad)
addr16
mov
(bad)
mov
outs
cmp
enter
test
xchg
jbe
sbb
test
call
mov
rcl
mov
sub
mov
sbb
inc
fidiv
jmp
into
mov
daa
adc
das
repz
lods
jge
dec
ja
repnz
enter
and
stos
xchg
push
mov
push
shl
ss
cmp
std
test
xor
sbb
neg
icebp
in
mov
and
xchg
mov
mov
and
out
xor
rcl
call
repz
jb
xor
loop
mov
sbb
cmovno
push
icebp
add
cmp
jg
push
mov
repnz
push
lds
out
arpl
add
mov
xor
sahf
ficom
(bad)
fs
push
adc
xor
adc
sub
ret
or
dec
outs
xor
jge
scas
sub
test
fist
lock
hlt
add
dec
add
dec
push
outs
fistp
popa
imul
push
data16
jbe
(bad)
push
sbb
mov
mov
scas
push
sub
and
lods
dec
cmc
outs
icebp
movs
push
imul
fidiv
inc
cwde
push
vpcmov
enter
jge
jne
cmps
or
cmp
jnp
adc
mov
fistp
inc
jne
mov
pop
xchg
repnz
xor
test
pop
xor
sti
arpl
ja
sub
and
pop
sub
xchg
iret
xor
pop
sub
and
dec
jne
sub
pop
retf
ret
sbb
sahf
jg
loop
push
imul
mul
and
adc
jo
cld
xchg
mov
cmp
aaa
das
pop
inc
js
pop
outs
inc
pop
jmp
call
push
pop
sub
xor
push
gs
xor
push
pop
jno
je
rcr
sbb
rep
imul
xchg
jno
mov
xor
cdq
repnz
fcmovbe
sub
lock
loopne
aas
xor
inc
push
or
fdiv
movs
add
xchg
mov
fsubp
mov
jne
push
cmp
adc
fdiv
xlat
cmp
fistp
pop
cwde
mov
jge
sbb
lock
mov
outs
mov
sbb
sar
jno
or
ror
push
in
rcr
rol
xchg
jns
jle
add
dec
les
jle
hlt
in
cmp
mov
mov
shl
lahf
call
rcr
cmps
lods
mov
cmp
add
mov
sub
or
jmp
push
stc
movups
add
xlat
push
nop
inc
dec
and
sub
outs
mov
test
aas
push
jl
mov
scas
test
movs
fild
sub
mov
sbb
aas
dec
mov
cld
or
mov
adc
je
(bad)
ss
and
mov
jle
push
(bad)
sti
cmp
adc
cmp
jo
sahf
cmp
(bad)
lds
cmps
dec
int
sub
scas
fidiv
mov
pushf
and
pop
jl
sub
mov
(bad)
adc
enter
in
inc
call
rcl
dec
mov
mov
loop
popa
mov
jmp
mov
mov
inc
xor
in
pop
(bad)
enter
cvtps2pd
or
sub
jecxz
dec
sti
in
(bad)
(bad)
add
loop
adc
ins
adc
dec
inc
enter
push
js
stos
arpl
pop
shl
test
mov
adc
inc
call
jo
ds
mov
or
push
jnp
aam
xchg
xchg
jle
jbe
fimul
mov
stos
ja
dec
sbb
add
imul
cmp
lea
xchg
sbb
mov
ror
retf
inc
xchg
adc
dec
push
loopne
mov
(bad)
sbb
pop
push
sub
call
add
cs
xchg
or
lods
bound
xor
inc
mov
mov
sub
mov
aas
fst
lods
dec
jns
cwde
jg
popf
ja
xor
jle
cli
iret
push
imul
inc
out
addr16
cmp
push
and
stos
in
fsub
mov
mov
call
mov
pop
sbb
ja
pusha
inc
shl
fnstsw
dec
mov
outs
bound
out
out
(bad)
js
loope
jecxz
cmp
pop
adc
xchg
test
lds
pop
stc
mov
sahf
mov
pushf
mov
add
dec
push
pop
mov
inc
push
mov
xchg
loopne
push
add
data16
dec
jle
and
sbb
loope
sbb
lock
sbb
popf
sub
mov
or
push
xor
mov
into
inc
pusha
fnstenv
in
ror
mov
mov
gs
dec
xchg
cld
in
jmp
pop
in
jp
mov
pushf
jae
and
fistp
push
fcompp
nop
inc
rcr
adc
push
xchg
mov
test
lock
pushf
add
cmps
or
ret
leave
xchg
shr
sub
fs
pop
xchg
mov
push
rcr
(bad)
fbld
data16
daa
jle
push
rcl
cdq
aad
or
xor
and
out
cmc
(bad)
mov
neg
cmps
cmp
jge
pop
inc
adc
adc
shr
dec
gs
loope
or
pop
add
mov
jp
pop
movs
pusha
or
adc
fwait
cmp
mov
push
sub
add
mov
shl
not
sahf
add
mov
jl
jmp
test
sti
push
lahf
jno
fnstcw
in
push
pop
daa
fmul
push
jg
ds
cmp
mov
jle
cmp
cwde
and
loope
or
mov
movs
je
lods
sbb
sub
test
test
inc
(bad)
dec
cmc
aas
cdq
add
fcomp
loope
pusha
aas
mov
lods
sbb
pop
jg
call
inc
pop
ins
fmul
push
clc
(bad)
(bad)
pop
or
es
cs
rcr
jmp
xchg
jnp
enter
or
je
adc
jae
jno
mov
ja
mov
lods
shl
pusha
jns
and
jg
ret
aam
test
add
lock
leave
jmp
into
jbe
aas
ror
sbb
dec
inc
imul
pop
jg
loope
test
pusha
sub
inc
inc
or
mov
cdq
sar
push
or
jno
mov
or
inc
or
mov
sar
and
fisub
call
pop
push
repnz
inc
pop
aam
lods
push
test
retf
bound
gs
ret
cmp
lods
mov
dec
cdq
or
mov
fstp
imul
or
add
inc
cdq
add
aaa
imul
jns
adc
ficom
mov
mov
cmp
aam
ror
push
call
cli
ins
nop
fdiv
ins
add
cli
fprem1
and
pop
test
push
and
pop
xchg
pop
enter
dec
cmp
cld
sub
dec
int
push
cmp
aas
ss
sbb
and
push
xor
hlt
int3
cmp
sahf
jae
jecxz
push
mov
jbe
cs
test
xchg
ret
pop
and
adc
xor
icebp
out
jmp
ins
out
pop
adc
pusha
push
mov
movs
dec
into
ja
dec
jnp
sti
xchg
ret
sti
idiv
clc
out
sbb
or
in
mov
jecxz
cmp
jg
pop
fcmovne
scas
sub
loope
movd
pushf
lods
(bad)
ret
jb
sar
sbb
adc
pop
test
cld
dec
in
sub
ret
ficom
mov
aad
jmp
fld
ds
mov
sbb
push
pop
push
stos
dec
data16
frstor
xor
test
gs
lock
fisubr
and
or
cli
adc
xchg
cwde
out
jg
push
loopne
xchg
pop
inc
push
out
dec
mov
int3
ins
dec
loope
test
and
fcmovnu
or
cmp
sub
fmul
mov
mov
mov
sbb
pop
neg
jmp
mov
dec
jmp
je
or
xchg
test
mov
mov
ffree
fwait
or
inc
sbb
or
mov
xchg
pop
icebp
popa
adc
repz
mov
jo
jmp
std
sahf
mov
ja
jmp
movs
xchg
cli
dec
dec
retf
cmps
mov
lock
mov
shl
cli
fstp
mov
mov
and
xchg
adc
jg
(bad)
pusha
xchg
loope
out
pop
xor
or
pop
test
cmp
(bad)
sbb
push
aad
mov
xor
and
pop
enter
sub
sub
ins
or
pop
scas
inc
mov
test
mov
test
sub
jmp
jecxz
cmps
jmp
mov
cmps
push
adc
push
rcr
js
stos
add
adc
rcr
es
sbb
es
popa
test
sbb
in
popf
mov
sub
xchg
mov
pop
add
lods
cmps
loopne
(bad)
inc
xchg
mov
enter
inc
pop
adc
dec
icebp
retf
out
xor
jmp
test
pop
daa
call
lods
lods
pop
int3
div
loop
loopne
and
adc
aas
sbb
call
pusha
stos
pop
sbb
popf
imul
lahf
cmp
xlat
mov
cmc
loopne
clc
xor
and
or
icebp
hlt
or
fnstcw
pop
leave
sbb
and
ror
add
cmp
test
jo
call
xor
aad
mov
xor
mov
mov
ror
sbb
into
add
adc
sub
adc
xchg
mov
push
sub
loope
popa
les
sub
movs
sbb
retf
aas
bndstx
test
cmc
popf
xchg
aas
aas
stc
enter
push
out
icebp
xor
and
cmp
fld
cmp
loop
mov
stc
mov
adc
jae
jo
xor
(bad)
jp
xchg
pop
outs
sub
sbb
inc
cmc
and
mov
add
daa
cmp
loope
data16
xchg
adc
xchg
pop
or
call
jb
cmp
xor
xor
add
ja
push
inc
xchg
in
jle
icebp
cmps
(bad)
mov
dec
inc
xor
xchg
push
daa
fwait
jecxz
data16
inc
lods
aaa
mov
int
popf
inc
cmp
pop
and
and
sub
or
push
add
in
push
jbe
inc
pop
push
xor
ret
xor
inc
in
add
inc
icebp
or
loop
movs
(bad)
cwde
xchg
loope
int3
sbb
adc
mov
add
jo
(bad)
stc
(bad)
je
test
and
out
call
scas
cli
xor
shl
lods
sbb
pop
push
fnstcw
movs
fild
push
cdq
mov
dec
fisttp
fsub
mov
fisubr
xor
lea
mov
sbb
test
mov
cwde
out
add
dec
sbb
and
and
inc
and
ret
mov
or
mov
push
pop
lock
mov
mov
mov
or
ds
push
mov
mov
and
pop
sub
stos
mov
sbb
out
lahf
in
or
test
icebp
das
cmp
xchg
sbb
popf
push
xchg
adc
fwait
pop
or
std
dec
push
mov
retf
jae
xchg
outs
cs
enter
dec
pop
xor
cmp
add
jo
(bad)
sbb
retf
rcl
cli
lock
jg
push
push
mov
fimul
fistp
lods
push
inc
lea
cmp
ss
mov
push
push
and
(bad)
and
iret
dec
sub
fmul
jns
rol
add
mov
or
fs
xor
call
retf
and
jae
rcr
inc
sbb
and
inc
ss
adc
add
xchg
aam
fidivr
mov
add
std
xchg
test
jnp
push
jp
cs
lock
loop
mov
sub
adc
inc
outs
call
loopne
std
jne
dec
mov
aaa
adc
dec
je
mov
outs
test
js
cmps
arpl
adc
xlat
inc
jg
ret
in
movs
jns
and
arpl
jne
jmp
jnp
fadd
sbb
mov
in
xchg
jno
add
push
rcl
(bad)
push
lods
jae
jge
js
lea
pop
and
cmp
nop
or
inc
dec
(bad)
mov
cmp
push
ins
cmp
inc
jb
mov
ret
call
inc
inc
pop
setg
in
scas
xchg
inc
aaa
inc
popf
cmp
cwde
jl
fild
stc
jp
xchg
sub
(bad)
dec
out
lahf
jmp
hlt
cmps
dec
gs
ficomp
jne
add
pushf
jno
adc
sbb
sbb
fsub
sbb
or
mov
dec
fs
mov
cmp
adc
or
push
imul
into
sahf
push
in
(bad)
add
cmp
jmp
jmp
push
cmp
and
adc
das
pusha
sub
push
pop
int3
push
push
cmps
push
and
cwde
fadd
in
xchg
push
(bad)
retf
add
sbb
mov
arpl
dec
int
sub
(bad)
into
fwait
popf
and
mov
add
in
xor
(bad)
scas
sahf
mov
pop
iret
hlt
hlt
push
pop
fucomi
lea
jle
(bad)
mov
(bad)
stos
fs
pushf
sbb
add
cli
or
dec
cmp
xchg
or
mov
add
outs
mov
int
mov
dec
outs
add
(bad)
mov
fnstcw
loope
push
iret
cmc
repnz
cmp
jo
mov
dec
vphaddwd
nop
mov
jbe
inc
repnz
jmp
inc
add
mov
sbb
jle
jns
adc
adc
jno
adc
push
xlat
sbb
leave
mov
data16
(bad)
int
and
or
add
std
loopne
cmps
dec
xchg
cmp
fadd
fisub
jmp
fcom
mov
popa
xchg
cli
add
xchg
call
jmp
adc
mov
jmp
clc
jns
push
sti
lods
cmp
dec
iret
(bad)
das
jns
es
and
sbb
sti
dec
call
std
lods
iret
sahf
push
jg
pop
arpl
mov
mov
mov
dec
jmp
test
jae
daa
push
xchg
pop
lods
xchg
cdq
mov
mov
cmp
jl
adc
and
inc
sar
(bad)
push
sti
xchg
or
xchg
push
movs
inc
cs
cmp
cmp
(bad)
loope
pop
or
outs
mov
ficom
hlt
popa
dec
cld
fstp
sti
mov
fwait
lods
cmps
push
xchg
stos
xchg
(bad)
not
das
push
aam
(bad)
(bad)
push
sub
and
(bad)
xchg
(bad)
sbb
push
jb
mov
or
adc
add
loope
nop
add
fistp
mov
repnz
pop
out
movs
daa
xor
push
fwait
jecxz
fsubr
daa
push
ficom
bound
in
sbb
rcr
add
retf
out
loopne
clc
cmc
fsubrp
add
or
mov
adc
bound
pop
leave
pop
and
lods
xchg
repz
jmp
dec
test
jmp
jmp
pop
es
pop
push
inc
ficom
popf
mov
stc
cmp
push
repnz
sbb
(bad)
ins
xor
dec
aad
sbb
jl
mov
jae
data16
lock
nop
mov
std
pop
pop
mov
dec
and
sub
cwde
dec
stos
mov
pop
sbb
icebp
pop
jp
inc
push
(bad)
scas
cld
fisttp
jae
stos
clc
(bad)
(bad)
add
mov
cmp
dec
inc
push
(bad)
ficomp
pop
daa
add
cmp
test
mov
pop
lea
xlat
div
xor
fwait
cmp
cmp
daa
icebp
jbe
ja
pop
adc
jne
xchg
push
xor
repz
sbb
repnz
pop
enter
mov
cmps
mov
dec
pop
mov
fist
test
fidiv
loope
push
fisttp
jae
sbb
stos
sub
dec
push
cld
xor
les
paddd
sbb
push
pop
dec
and
int3
in
jbe
sti
mov
inc
mov
and
xor
jns
stos
enter
jbe
jecxz
add
in
xor
hlt
adc
pop
mov
xor
das
repz
hlt
inc
stc
or
call
outs
pop
mov
adc
out
jp
mov
inc
push
inc
mov
cmp
addr16
setg
ret
or
mov
mov
in
cmp
imul
xchg
mov
cmp
imul
jbe
rcr
fs
mov
fwait
int
int3
aaa
shl
mov
(bad)
cli
scas
retf
add
and
loop
mov
push
or
js
fld
add
add
stc
or
adc
cmp
fiadd
add
scas
push
call
add
dec
(bad)
ss
push
aaa
leave
mov
jge
(bad)
(bad)
or
add
dec
mov
adc
add
and
xchg
inc
xlat
movs
jg
gs
jmp
cdq
push
and
pop
inc
xchg
lods
jg
das
inc
mov
ret
aas
(bad)
movs
add
cmp
scas
cmps
iret
mov
jnp
cmp
xor
inc
adc
cmp
int3
mov
aad
sbb
fst
jmp
pop
fist
xchg
cli
bound
(bad)
stc
and
and
mov
hlt
pop
repnz
loop
add
adc
rcr
mov
mov
ret
es
(bad)
test
sbb
mov
or
dec
scas
cld
loopne
sbb
xor
mov
or
jecxz
mov
cvtdq2ps
adc
adc
mov
sub
add
and
sbb
cmps
cmp
mov
aas
adc
(bad)
scas
xchg
jns
mov
je
lock
pop
ja
inc
jb
mov
dec
adc
ds
jno
test
dec
imul
(bad)
add
shr
inc
ja
adc
jnp
repz
and
dec
inc
xchg
loop
fldcw
push
cmc
scas
xchg
test
or
mov
aas
les
xchg
xor
cld
js
xchg
cmp
in
mov
add
mov
add
pop
dec
imul
jne
das
inc
pusha
adc
es
sti
push
ins
ja
(bad)
div
mov
movs
adc
fisttp
lods
xchg
and
jge
scas
inc
fimul
push
xor
push
cmp
xor
fist
jo
clc
and
(bad)
dec
sub
fmul
mov
iret
fdivr
push
lods
movs
rcl
sbb
call
imul
fcom
dec
adc
sbb
and
scas
cmp
sbb
xchg
ds
dec
xchg
cmp
adc
mov
sbb
cmc
or
arpl
ins
repz
ret
fsubr
popf
or
in
sub
mov
jl
dec
movs
jmp
pop
and
add
or
xchg
sub
push
dec
icebp
jns
xchg
pop
xchg
shr
dec
cdq
sub
sar
dec
aas
cmp
xchg
push
cmp
add
adc
jne
lods
icebp
fdivr
xor
inc
push
xchg
sub
(bad)
sbb
shl
int
into
in
jnp
jecxz
add
les
xchg
lods
cld
int3
jbe
inc
xor
call
cmps
jmp
mov
data16
icebp
dec
and
sar
cwde
pop
retf
sub
adc
push
adc
aaa
lea
mov
push
add
and
sbb
push
xchg
sar
xor
push
inc
setae
xor
lds
pop
aas
jno
mov
mov
mov
add
pop
in
movs
pop
movs
or
inc
fwait
repz
(bad)
mov
pop
hlt
and
dec
aaa
ins
fst
push
or
mov
fstp
mov
push
out
daa
aad
xchg
pop
pop
neg
test
adc
mov
test
ror
xor
xor
call
retf
es
adc
stos
jb
scas
sbb
mov
test
lea
aas
scas
dec
jb
dec
xor
in
mov
jno
cmp
mov
sbb
aad
mov
data16
(bad)
in
ss
sub
shr
sbb
(bad)
in
mov
inc
mov
sbb
add
mov
aaa
hlt
aas
cmc
jle
sub
jne
push
xor
stos
or
adc
dec
jb
(bad)
cli
add
aam
movs
cmp
(bad)
cmc
and
jnp
aaa
push
mov
lock
and
cmp
push
pop
(bad)
pop
push
mov
jmp
cmp
(bad)
mov
pop
and
stos
sub
mov
xchg
mov
fdiv
inc
scas
mov
aad
ins
mov
mov
sub
sbb
outs
clc
fcomp
or
pop
leave
cmp
sub
hlt
push
push
cld
mov
pushf
or
or
loopne
js
js
pop
xchg
dec
lea
dec
fist
aad
push
loopne
repnz
add
addr16
ja
or
sahf
sbb
fdiv
rcl
push
mov
iret
mov
jae
mov
enter
jecxz
cmp
xor
arpl
inc
dec
aam
loop
and
clc
stc
mov
dec
jns
jmp
out
stos
sub
mov
iret
ss
adc
pop
leave
mov
in
cmp
inc
inc
adc
stos
sbb
add
clc
fcom
sbb
jbe
out
icebp
out
pop
fnstenv
shl
movs
push
jg
(bad)
xchg
pop
adc
jb
pusha
dec
sbb
loopne
sub
bound
stos
mov
xchg
xor
add
call
sub
cld
adc
sbb
push
mov
adc
lods
adc
lea
xor
inc
mov
jmp
scas
dec
pop
mov
sti
dec
popf
mov
push
adc
aam
daa
add
sub
jecxz
scas
aas
add
cld
xchg
pushf
add
sbb
rol
mov
jmp
repnz
test
pop
(bad)
and
inc
sti
push
jbe
daa
and
aad
add
adc
das
xchg
add
mul
and
push
aad
stc
adc
add
mov
push
imul
xchg
js
xlat
mul
mov
aas
pop
fincstp
pop
out
inc
pop
pop
fcmovu
mov
neg
pop
cmp
add
mov
mov
(bad)
mul
sbb
push
jl
popf
fsub
(bad)
pop
imul
mov
(bad)
jmp
dec
loope
xchg
outs
jbe
sbb
xor
ret
pop
retf
(bad)
sub
push
pop
pop
(bad)
xchg
inc
pop
in
inc
mov
push
dec
cmps
mov
cmp
cmp
mov
jecxz
push
shl
adc
push
arpl
call
lds
enter
mov
jmp
add
sub
dec
jl
mov
and
shr
jg
sub
jo
jp
popa
clc
or
stos
mov
dec
and
sub
pop
push
push
push
jno
adc
or
dec
push
add
int3
rcl
mov
call
sar
push
retf
fisub
pushf
je
jns
and
pop
jmp
test
jbe
push
adc
clc
inc
mov
pop
test
sbb
jecxz
outs
ins
loopne
int
jp
xor
clc
cmps
inc
inc
imul
pop
scas
inc
push
seta
pop
jl
jmp
scas
ja
ins
xchg
mov
iret
mov
sbb
dec
push
add
outs
cmp
and
adc
jp
mov
cld
push
dec
add
adc
(bad)
out
jae
ror
(bad)
pop
dec
fmulp
add
jb
inc
mov
add
popf
int3
xchg
lods
mov
je
ror
jnp
mov
scas
xor
mov
add
mov
mov
in
sub
cmp
dec
xlat
shl
inc
push
mov
xchg
add
adc
ins
mov
movs
xchg
mov
push
add
and
fbstp
push
mov
push
inc
(bad)
push
add
xchg
add
pop
mov
xor
adc
shr
and
xor
nop
jmp
jb
test
add
lds
push
mov
cmp
and
or
add
mov
loope
push
retf
ins
shl
or
fstp
ret
and
sahf
or
pop
xor
retf
out
add
cmps
jbe
stos
sbb
jnp
fucomip
(bad)
xchg
and
sub
or
mov
div
movs
jnp
inc
push
inc
sbb
mov
sahf
xor
ss
addr16
std
dec
jg
pop
pop
dec
push
sub
sub
jg
inc
dec
test
xor
xor
sbb
or
push
adc
push
leave
imul
pop
cmp
xchg
xor
call
loop
mov
add
jnp
daa
out
vpshaw
inc
stc
inc
or
mov
je
push
or
clc
mov
ja
cli
sbb
fadd
daa
pop
(bad)
xor
jmp
rcr
addr16
test
mov
setns
pushf
xchg
leave
add
push
rol
xchg
mov
rol
sahf
sub
dec
gs
sti
shl
jmp
mov
jg
mov
sbb
sub
inc
mov
(bad)
clc
jns
in
mov
mov
mov
jecxz
dec
loop
and
pop
scas
stos
iret
mov
ds
repnz
cld
fadd
sub
daa
pop
jae
add
dec
in
sbb
int3
arpl
push
mul
push
adc
test
pop
sub
adc
lock
jmp
shr
mov
fadd
aam
dec
mov
mov
jmp
pop
arpl
aas
imul
cmp
jno
pop
in
xchg
in
fisttp
mov
sbb
and
(bad)
jae
cmp
inc
pusha
cli
or
xor
inc
push
mov
add
xor
jmp
xchg
jmp
bound
loope
dec
cmp
ja
pop
xor
mov
shl
movs
jg
loopne
adc
push
xor
jp
or
out
in
mov
mov
mov
into
test
dec
(bad)
xor
add
call
fs
retf
jno
pop
test
out
mov
pop
cmp
or
pusha
les
or
jbe
mov
push
enter
enter
daa
ss
xchg
sti
and
punpcklbw
mov
push
add
xchg
dec
shr
push
jbe
repz
mov
mov
shl
mov
mov
mov
sbb
lods
xchg
or
mov
jecxz
sub
jns
add
or
fidivr
push
and
sbb
scas
sbb
cs
dec
in
adc
mov
aas
scas
movs
xchg
mov
sub
sbb
int
ja
test
or
aas
jp
mov
cwde
inc
mov
call
and
sbb
and
mov
dec
scas
dec
adc
les
int3
in
pop
add
mov
stos
inc
cli
retf
push
cli
push
sub
dec
imul
mov
mov
shl
add
es
dec
jmp
jb
pop
and
inc
sbb
je
lea
push
push
adc
addr16
push
pop
data16
xchg
xchg
or
lock
sbb
ret
inc
mov
mov
imul
push
daa
or
stos
xchg
cmp
cmp
mov
enter
adc
out
ret
ss
xor
and
push
adc
shr
cmp
ss
leave
mov
jb
imul
stc
(bad)
arpl
stc
jg
lock
aam
mov
daa
sahf
loopne
inc
ret
nop
jle
inc
jmp
dec
sub
adc
push
mov
and
test
sub
repnz
xlat
aam
pop
nop
lds
or
and
adc
mov
jo
lods
sahf
cwde
int
push
mov
or
and
add
pop
(bad)
rdmsr
std
dec
cmp
jp
faddp
jle
lods
mov
arpl
movs
pop
sub
fs
ds
add
push
mov
rdpmc
pusha
loope
shl
out
jne
aam
mov
mov
inc
and
(bad)
clc
data16
jmp
or
adc
cmps
scas
inc
sti
push
pop
jmp
aas
fsubr
cmps
add
test
pop
add
fstp
mov
ds
arpl
mov
cld
sub
(bad)
xchg
add
popa
retf
sub
int3
push
push
sti
and
sub
push
fsubr
mov
push
ja
outs
inc
cdq
jae
ret
(bad)
sti
jmp
xchg
int
mov
xchg
pop
stc
sbb
pushf
dec
inc
dec
jno
mov
fwait
pop
daa
mov
into
mov
ja
dec
ficomp
icebp
mov
push
and
and
clc
adc
rol
(bad)
test
data16
jnp
sbb
xchg
or
xor
push
sbb
(bad)
jmp
retf
adc
out
call
fcomp
inc
fwait
lods
mov
xchg
pop
idiv
add
int3
push
mov
cmps
and
push
adc
icebp
movs
sbb
xor
xor
cmp
aas
sub
sar
ins
sub
hlt
inc
rcr
ins
nop
cmp
dec
adc
xchg
add
ret
add
sbb
or
xor
sub
in
mov
cmp
push
in
jl
xchg
sub
fchs
mov
push
(bad)
bound
call
gs
dec
jae
ror
pop
pop
sub
addr16
lds
push
imul
dec
and
or
popf
daa
sub
cmp
or
mov
ja
popa
jbe
iret
mov
inc
and
fmul
popf
sbb
mov
and
pop
or
lock
out
repz
repnz
mov
(bad)
xchg
inc
or
les
lods
mov
jb
fsubr
push
add
sbb
ret
not
jo
cmp
pop
dec
push
sar
jnp
mov
adc
fild
pop
jb
loop
dec
popf
fiadd
mov
adc
jecxz
rcl
push
pop
das
popa
mov
cmp
and
out
mov
pusha
jg
sub
mov
fs
repz
adc
adc
das
add
mov
push
mov
les
shl
das
or
dec
sbb
out
pushf
pusha
leave
mov
iret
aad
or
add
test
pop
xor
ins
mov
lea
popf
mov
jl
(bad)
rol
inc
data16
in
or
cdq
(bad)
(bad)
or
xor
push
jae
loopne
inc
pop
cmp
scas
scas
add
cmp
cmp
push
add
jmp
add
icebp
out
or
dec
cli
xor
gs
push
add
aad
or
ss
push
sbb
call
xchg
sbb
cmp
xchg
aas
psllw
adc
ja
enter
mov
jo
dec
lahf
jae
leave
xchg
out
jle
shl
xchg
dec
mov
or
dec
add
mov
cmps
mov
xor
lds
add
or
sub
pop
pop
mov
(bad)
pop
movs
push
mov
sbb
xchg
mov
clc
imul
or
fwait
mov
(bad)
and
or
xor
pop
adc
or
(bad)
push
xor
rcl
ret
inc
inc
push
xor
arpl
push
pop
popa
fs
movs
je
dec
aaa
mov
jae
and
mov
ficom
into
cld
(bad)
jns
jb
sbb
xchg
stc
jp
movs
(bad)
fild
or
cmp
in
aad
mov
aaa
fstp
aad
movs
and
in
fbld
add
fisttp
mov
xchg
xor
push
iret
add
xor
aam
shl
mov
jmp
and
out
aad
lods
jle
adc
xchg
pop
pop
xchg
jg
push
jge
lds
mov
test
out
pop
inc
push
mulps
popa
pop
mov
adc
adc
pop
inc
mov
ss
sub
jecxz
mov
frstor
jmp
in
ficomp
adc
xchg
cdq
popf
test
jg
lods
mov
mov
fmul
mov
fs
jnp
push
arpl
daa
(bad)
cld
pop
cwde
adc
and
xor
ja
stc
(bad)
retf
mov
ss
test
adc
or
fcmovu
shl
mov
jl
add
enter
out
sbb
xor
(bad)
cli
ror
and
call
adc
mov
mov
mov
jo
jge
xor
stos
aam
and
sbb
je
clc
and
in
push
clc
test
cdq
gs
mov
ds
cmps
fld
out
in
retf
fimul
mov
outs
test
pop
add
ficom
mov
mov
rcr
xchg
and
aam
jbe
cmc
pop
aam
cli
outs
mov
inc
push
or
jmp
les
out
fdivr
test
add
in
fistp
cmp
test
dec
fs
and
and
xchg
dec
pop
xor
push
and
test
fcom
addr16
adc
jno
sbb
inc
jae
xchg
fiadd
(bad)
idiv
stos
mov
frstor
aad
and
test
fiadd
add
jmp
sub
imul
aad
mov
inc
outs
mov
inc
jge
jmp
ss
dec
mov
out
inc
push
mov
sar
push
popa
add
mov
retf
pop
out
dec
mov
mov
pop
jg
push
inc
mov
hlt
adc
cmp
cmp
xchg
stos
out
add
in
inc
xor
cld
xchg
in
sub
mov
jmp
or
xor
cmc
or
stos
outs
mov
pop
pop
in
mov
xchg
jb
and
push
mov
jge
stc
sbb
cwde
out
inc
arpl
xchg
fimul
adc
mov
repnz
mov
dec
mov
jb
adc
add
or
inc
repz
xor
dec
sbb
mov
mov
push
pop
pop
xor
inc
hlt
or
mov
cs
fs
push
mov
push
jmp
mov
arpl
mov
mov
mov
xchg
stc
out
jg
shl
jp
out
pop
retf
(bad)
adc
ss
es
sahf
(bad)
jo
cmpxchg
xchg
cmp
into
xlat
push
add
jmp
xor
dec
add
xor
hlt
fwait
or
xor
pop
jg
cmps
or
or
pop
frstor
mov
popa
jg
push
(bad)
imul
pusha
pop
int3
mov
add
data16
mov
xor
retf
adc
pop
jnp
or
add
jbe
mov
push
inc
sbb
jmp
(bad)
call
mov
pop
movs
jno
and
jmp
movs
fdiv
into
in
adc
jl
adc
in
jns
daa
pop
and
or
cmc
fsub
repnz
lea
add
iret
(bad)
std
mov
scas
xchg
inc
rol
stos
repnz
stos
std
(bad)
cld
in
ds
adc
cmps
rcl
pop
cli
cmc
fsubrp
test
inc
pop
ja
and
(bad)
sahf
(bad)
pop
mov
inc
sbb
dec
fadd
sbb
xchg
fisttp
cmp
ja
test
mov
in
jmp
movs
inc
out
mov
inc
add
inc
mov
dec
addr16
adc
and
sub
pop
adc
or
mov
shl
cli
or
imul
int
sbb
inc
or
js
sub
push
fisubr
(bad)
ror
inc
mov
and
pop
mov
sbb
jbe
loop
xor
movs
xor
mov
dec
push
loopne
ficomp
push
aam
or
mov
in
rcr
jg
call
inc
sar
sbb
dec
sbb
rcl
xchg
dec
dec
pop
das
inc
jmp
mov
jb
jb
push
(bad)
adc
js
push
fs
jbe
adc
and
dec
sbb
or
mov
bound
cmc
cmp
adc
es
dec
loopne
xchg
cmc
ins
push
or
and
jns
repz
retf
jp
jl
jo
popa
daa
neg
imul
and
dec
fsub
test
nop
xor
and
int3
(bad)
mov
lock
sbb
cmp
xor
dec
jb
pop
or
addr16
xchg
sar
sbb
mov
stos
push
je
jecxz
jge
push
in
pop
cdq
ror
xchg
jae
enter
and
rcr
shl
daa
inc
les
mov
outs
js
mov
xor
xchg
loope
jae
mov
push
cdq
and
ret
jge
imul
fistp
jns
test
pop
stos
call
shr
in
adc
fadd
jbe
lods
add
into
cmp
dec
fldcw
jle
xchg
jno
jl
fdiv
pop
jnp
mov
mov
or
adc
xchg
in
es
push
aaa
push
loope
pop
(bad)
sbb
dec
inc
stos
push
cdq
bound
test
push
aaa
lods
xchg
add
pop
lock
scas
push
mov
and
cld
fldenv
xchg
xchg
scas
(bad)
sub
cmps
xchg
jp
mov
jbe
idiv
sub
popa
mov
ds
leave
scas
pop
je
push
test
pop
mov
mov
retf
mov
stos
dec
(bad)
not
cmps
lock
shl
sub
inc
fistp
pop
jnp
mov
sbb
std
fs
adc
mov
adc
jbe
push
and
sbb
mov
push
push
jnp
xchg
retf
ret
inc
mov
mov
or
xchg
jle
sbb
repnz
pop
pop
dec
mov
sbb
jbe
inc
loop
sub
lods
or
xchg
jmp
outs
push
outs
pop
into
dec
xchg
mov
add
or
add
(bad)
std
mov
int3
lods
mov
sbb
in
js
sbb
push
test
bnd
jle
sub
jecxz
imul
jbe
dec
stos
jge
dec
shl
lds
push
cmp
mov
push
jl
sbb
cwde
or
mov
dec
push
paddq
mov
ret
(bad)
sub
and
fst
dec
lock
mov
dec
cmp
jbe
adc
loope
sahf
out
add
dec
sbb
cs
xchg
sub
movs
sub
pushf
adc
xchg
adc
scas
gs
add
sti
jmp
mov
rcl
add
dec
mov
add
and
mov
pop
and
mov
mov
lods
inc
jae
dec
dec
mov
mov
add
(bad)
in
xchg
xor
into
shl
mov
test
ret
cwde
or
ja
loop
fstp
je
movs
ins
adc
push
(bad)
jno
aaa
sbb
push
leave
popa
pop
pop
in
and
sub
or
imul
fs
dec
xchg
fdivr
in
mov
ins
and
clc
pop
bound
jp
mov
fisubr
push
xor
sbb
push
jp
or
adc
or
push
in
push
or
enter
aad
push
adc
jbe
cmps
fdivr
and
and
xchg
inc
pop
mov
in
jb
leave
dec
loop
out
(bad)
cld
mov
and
jnp
add
jae
mov
les
dec
add
retf
xchg
sar
rol
adc
mov
fild
test
ins
lods
out
lahf
sbb
adc
in
fistp
out
(bad)
je
adc
mov
pop
stc
pop
pop
adc
xchg
or
pop
or
stc
arpl
pop
scas
data16
cmp
jmp
add
push
xchg
rol
push
add
bound
nop
sti
push
cwde
pop
lods
mov
push
(bad)
arpl
sar
jo
(bad)
cmovl
xchg
int3
jb
fidiv
mov
xlat
dec
add
add
pop
(bad)
jnp
mov
mov
es
aas
mov
cmp
in
aad
ins
je
idiv
cmc
shl
(bad)
out
js
adc
add
inc
pop
jge
adc
and
xchg
push
stc
jo
inc
paddusw
fstp
hlt
mov
or
out
pop
lock
add
mov
rcr
and
lea
in
or
fidiv
fstp
mov
(bad)
cdq
shl
(bad)
pop
ss
xchg
nop
mov
adc
loope
dec
fst
sub
scas
sbb
inc
inc
ds
imul
fist
loopne
dec
push
in
push
rol
pushf
pop
fist
push
add
fiadd
jmp
cmp
jmp
stos
int
daa
aas
sub
push
scas
push
nop
mov
in
out
leave
push
cwde
push
mov
adc
loope
mov
outs
jne
in
movs
repnz
and
bound
or
cs
jbe
inc
ret
int3
fsubr
inc
fadd
in
jp
movs
cld
out
xor
std
shl
stc
retf
push
(bad)
aam
push
push
lea
sbb
in
xlat
ss
cmc
addr16
cmp
adc
je
call
cmc
loopne
add
fst
stc
xchg
loop
je
dec
leave
sub
fxch
add
fs
push
retf
push
stos
hlt
xlat
mov
cmp
push
sbb
lock
pop
retf
dec
mov
xor
popa
cli
int3
hlt
repz
fdiv
or
imul
ins
jmp
mov
pop
adc
cwde
outs
dec
iret
pop
mov
iret
fimul
sbb
pop
je
xlat
adc
add
mov
ins
movs
sbb
adc
and
movs
inc
aas
sub
adc
jp
sbb
scas
aas
push
adc
push
stc
sbb
xor
cdq
xlat
cmp
out
jle
shl
dec
mov
inc
das
test
ins
inc
lahf
ror
pop
xchg
cmp
and
mov
addr16
xchg
lods
cmp
push
dec
push
add
stc
pop
jae
(bad)
(bad)
aad
cmps
mov
nop
jmp
fisub
pop
mov
int
scas
push
or
cwde
sbb
push
mov
enter
push
inc
aam
push
or
cmp
sbb
imul
mov
dec
mov
test
loopne
call
pop
or
je
aam
dec
xor
es
lods
add
sar
(bad)
mov
or
push
in
stos
iret
bound
or
mov
xchg
or
repnz
stc
cmp
ret
sbb
jg
int
popa
mov
push
jmp
inc
fbstp
mov
cdq
test
pop
aaa
imul
test
pop
in
fnstenv
xor
mov
adc
mov
ins
push
mov
jl
jnp
jne
add
(bad)
mov
stos
cmp
data16
mov
xor
jb
nop
shl
push
pop
je
leave
cli
loop
push
push
mov
jae
loope
ins
aas
or
(bad)
mov
outs
enter
mov
mov
adc
shl
pop
sbb
or
sub
adc
xchg
ret
loop
sahf
pop
and
xlat
nop
fucomi
ss
and
add
sbb
lahf
lods
sar
mov
ret
dec
xchg
cli
cmps
inc
mov
int
rcr
pop
dec
cmps
mov
(bad)
sub
and
into
ins
pushf
cli
push
shr
lock
repnz
sbb
push
test
adc
push
fdiv
add
fidiv
in
jmp
into
push
and
fs
je
xlat
fld
loope
out
mov
nop
mov
pop
lds
into
bound
jg
addr16
mov
dec
sub
scas
mov
fisubr
sub
add
jp
js
and
jp
push
enter
sahf
ss
int
push
ins
sar
mov
pop
and
adc
mov
(bad)
xor
popa
es
cld
arpl
or
pop
ja
pop
std
es
ja
sub
lea
cmp
inc
nop
xchg
sub
mov
ins
adc
mov
movs
into
call
push
and
outs
jne
(bad)
fcom
pop
adc
adc
ror
shr
loop
xor
mov
stos
shl
push
fsub
dec
aam
not
call
das
retf
pop
cdq
pop
sub
pop
push
dec
adc
ja
sahf
mov
retf
fist
ret
jge
int3
and
mov
pop
dec
lods
xchg
test
mov
hlt
jmp
dec
mov
and
nop
mov
push
inc
pop
nop
loope
add
mov
cmp
fcmove
in
mov
or
das
mov
mov
fsub
not
jecxz
into
arpl
sahf
cmp
jno
bound
enter
xchg
and
sar
push
arpl
in
aad
or
(bad)
push
sbb
push
pop
movs
mov
mov
mov
add
es
and
push
jg
adc
or
mov
movs
or
sbb
xor
cs
sbb
mov
ins
xor
xor
xchg
fsub
in
into
cdq
dec
dec
sub
(bad)
in
pop
sbb
mul
ins
dec
js
adc
ins
test
jge
pop
retf
in
sub
call
add
inc
mov
sahf
(bad)
push
ins
es
repnz
jecxz
lods
movups
inc
mov
std
push
mov
pop
pop
mov
dec
test
cs
stos
and
inc
or
cwde
dec
mov
dec
cwde
mov
stc
jg
push
aaa
rol
imul
or
stc
into
popf
cmc
call
pop
je
mov
xchg
pop
push
mov
dec
or
loopne
stos
push
cmps
shr
push
sti
pop
inc
aas
mov
lea
and
jmp
aas
cmp
jmp
stos
and
cmp
xchg
inc
xchg
mov
cwde
icebp
les
outs
jle
rcl
sbb
fbstp
mov
pop
pusha
ins
lods
pushf
add
adc
mov
imul
mov
fs
pop
cwde
and
lods
mov
pop
push
sbb
ret
mov
mov
xor
repnz
repnz
ja
sahf
mov
in
xchg
jb
mov
push
or
hlt
je
bound
fucomi
dec
clc
jecxz
fyl2xp1
cmp
fbstp
push
mov
neg
outs
or
loop
sub
imul
mov
jne
jg
shr
xchg
push
inc
and
mov
xor
pop
into
rcr
adc
dec
sbb
jmp
mov
cdq
jge
retf
push
adc
test
lds
mov
ds
js
dec
xchg
inc
xchg
xlat
lock
sub
xchg
adc
jg
inc
adc
jl
sub
push
movs
push
jl
dec
ins
mov
inc
lds
repz
dec
jle
fstp
add
(bad)
xchg
sub
sub
cmp
pop
sbb
loope
movs
nop
xchg
jge
test
xor
movs
pop
aad
loope
push
popf
arpl
xchg
mov
cmc
dec
mov
mov
arpl
dec
adc
loop
out
int
adc
gs
dec
or
leave
inc
dec
jmp
nop
and
stos
cmps
mov
xor
clc
push
sbb
jnp
push
adc
bound
jmp
ror
mov
jno
cmps
pop
(bad)
ret
sub
jp
xchg
std
dec
cmp
jmp
jne
ficom
mov
sar
and
nop
cs
sub
push
mov
cmps
push
mov
cli
xor
in
cmps
nop
mov
aaa
or
loopne
test
push
hlt
pop
jo
push
stc
fldcw
cmp
adc
fcom
ficomp
add
sub
xchg
push
dec
jmp
retf
cmc
jnp
jp
std
mov
in
mov
shl
lahf
test
adc
sbb
in
cmp
mov
test
test
test
push
push
sub
sbb
and
add
jnp
ja
jmp
mov
int3
std
sub
lahf
cs
mov
imul
clc
int3
xor
xchg
dec
out
sbb
inc
inc
pop
and
push
std
nop
inc
sub
popa
cmc
in
cmp
ret
add
aad
mov
xor
lock
or
lock
ret
ins
push
nop
push
xor
jp
int3
fnstenv
and
retf
mov
rep
imul
xchg
push
sti
mov
pop
inc
mov
pop
stos
mov
mov
(bad)
pop
xchg
push
je
nop
mov
das
pushf
push
or
mov
push
xlat
cmp
sub
das
jbe
nop
push
mov
dec
jne
iret
mov
and
movs
and
add
sar
push
add
repnz
aaa
dec
pop
cmp
in
(bad)
push
adc
cmc
jb
stos
sahf
add
sar
push
push
or
retf
mov
add
std
jmp
std
pop
sbb
test
mov
sbb
xor
sbb
sub
or
stc
icebp
mov
mov
adc
sbb
adc
or
scas
stos
mov
in
(bad)
pop
mov
add
push
mov
aaa
add
jl
add
jnp
call
sub
(bad)
loopne
or
pop
ins
aas
dec
jge
arpl
fs
cmp
add
mov
xchg
xchg
adc
dec
cld
cmp
pop
and
add
mov
ss
les
dec
mov
jae
retf
xlat
cdq
std
inc
sub
jne
add
pop
xchg
in
mov
pusha
push
or
xlat
jnp
cmps
pop
sahf
test
push
imul
cmp
push
adc
leave
hlt
cmps
jns
pop
or
pop
cmps
iret
sbb
and
mov
hlt
call
ds
call
fs
out
mov
dec
xor
jle
push
retf
into
repz
mov
or
add
pop
je
fld
push
dec
je
icebp
sbb
xchg
inc
leave
and
fst
mov
push
mov
inc
jbe
jbe
aaa
and
sub
(bad)
xor
fnstsw
(bad)
xchg
mov
or
popf
and
sub
pop
fs
ret
or
sbb
inc
loop
push
inc
inc
aas
cmp
sub
gs
cld
test
inc
mov
rcr
mov
xchg
daa
dec
and
ds
popa
inc
out
cld
mov
cld
sub
sbb
add
test
cmp
xor
pushf
daa
sub
ja
cli
pop
js
fisubr
sbb
ret
ss
adc
xor
sbb
in
adc
(bad)
dec
jmp
xor
push
sub
call
cld
sub
xchg
or
push
dec
stos
cmp
inc
and
add
sbb
jae
jb
hlt
aaa
stc
mov
sar
adc
cdq
rcr
sub
stos
mov
loopne
ret
mov
mov
lock
ret
nop
jnp
lea
xor
retf
xor
mov
or
xor
jp
int3
pop
faddp
inc
inc
jbe
cwde
leave
mov
mov
call
js
ror
enter
fwait
xor
mov
je
mov
push
dec
leave
fst
cmp
mov
push
cmp
scas
inc
sti
mov
add
sub
aaa
retf
sub
mov
out
mov
xchg
mov
sbb
pop
(bad)
push
xchg
pop
dec
sbb
mov
addr16
mov
add
pushf
and
pop
add
inc
add
(bad)
push
repz
jl
push
scas
clc
test
inc
fs
shr
out
pop
cmps
mov
mov
popa
rcl
cwde
xor
pop
clc
mov
out
lods
lds
push
mov
fnstenv
mov
stos
stos
enter
mov
push
sub
mov
or
ret
jmp
push
(bad)
cmp
pop
pop
cs
xchg
nop
xor
sub
popf
jmp
dec
jp
adc
jg
and
mov
push
dec
mov
outs
jmp
js
je
clc
movs
and
mov
and
adc
fimul
arpl
mov
fldenv
je
jp
dec
fnstenv
mov
retf
xor
call
dec
jecxz
stc
shl
sbb
push
fisttp
push
ds
pop
xchg
sub
adc
jg
xchg
(bad)
(bad)
hlt
jb
push
mov
mov
pop
and
div
out
(bad)
push
lds
add
pop
jmp
pop
clc
iret
and
sbb
jmp
ret
fs
inc
or
inc
vpextrw
jecxz
inc
idiv
test
push
mov
jle
cmp
jo
in
inc
rcr
loop
repnz
push
jecxz
pop
push
sub
mov
dec
retf
fild
ss
daa
in
and
jl
gs
bound
or
rol
aad
cmp
ss
ss
leave
pop
test
ret
jne
cmp
push
aas
mov
shl
out
sbb
push
jle
inc
inc
jmp
cmc
popf
mov
cs
cmp
mov
jns
mov
data16
test
fnstenv
mov
pop
aas
jae
jmp
jo
and
test
pop
fbstp
out
je
or
jnp
adc
xlat
xchg
pop
es
cs
jae
popa
dec
(bad)
(bad)
push
fwait
sbb
jg
leave
out
aam
sub
sbb
(bad)
shl
cmc
lds
mov
test
adc
inc
push
mov
leave
sar
mov
test
inc
inc
xor
ja
or
int3
inc
retf
mov
movs
pop
mov
outs
das
pop
sbb
sbb
lock
idiv
jg
fsubr
xchg
arpl
sub
scas
outs
mov
mov
jne
xlat
push
push
aas
leave
push
sbb
into
(bad)
mov
scas
push
and
sahf
and
jne
jge
fcmove
imul
adc
cmp
cli
adc
inc
clc
mov
(bad)
aad
mov
adc
mov
repz
(bad)
(bad)
cmp
mov
or
xchg
(bad)
ja
pop
mov
pop
mov
fs
pop
pop
inc
sub
in
push
pop
sti
int
lea
adc
mov
sbb
addr16
push
add
push
adc
push
pop
mov
cmp
sbb
rcr
cmp
push
push
mov
sbb
push
rcl
inc
outs
movs
scas
imul
sbb
cmc
fsub
cmp
daa
and
and
scas
fdiv
pop
dec
jae
push
jb
xor
(bad)
mov
pop
clc
cmc
fld
imul
mov
sub
call
and
push
dec
mov
xchg
mov
inc
push
dec
or
push
into
in
mov
xor
jg
mov
sbb
sub
cmps
enter
adc
fist
das
mov
sbb
dec
adc
mov
sti
pop
jo
xlat
xchg
add
sahf
imul
or
aas
and
enter
mov
adc
ror
(bad)
pop
mov
sbb
(bad)
jbe
cmc
aas
mov
and
cmp
adc
fwait
in
cmps
xor
dec
cdq
cmps
ins
mov
(bad)
xor
leave
pushf
xchg
lahf
es
jo
aaa
into
push
adc
(bad)
call
(bad)
push
test
sbb
rcl
imul
adc
mov
bound
sub
dec
xor
call
int3
in
xchg
add
mov
leave
push
shl
fwait
mov
les
rcr
and
int3
inc
repnz
cwde
cmp
call
add
loop
inc
cmp
xchg
jnp
data16
pop
cld
add
mov
jnp
out
xchg
data16
xor
outs
inc
jle
pushf
or
add
and
aaa
add
xor
sbb
mov
sub
test
jle
arpl
add
cmps
pop
mov
adc
or
enter
fwait
add
syscall
sub
sbb
inc
icebp
pop
in
ja
pop
dec
aad
mov
push
or
test
or
repnz
inc
imul
not
and
iret
or
retf
jl
fld
xchg
pop
jno
sbb
cli
xor
sbb
mov
repz
push
loope
mov
mov
push
sbb
int
or
je
cmp
and
fcomi
adc
adc
fs
arpl
js
push
jg
or
add
fidivr
aaa
pop
ds
in
xor
adc
xchg
jl
push
sbb
sbb
add
pop
push
add
ret
test
rcr
push
add
call
scas
inc
add
xor
pop
jns
xor
add
mov
ror
cwde
fcomp
sub
iret
pop
xlat
mov
pop
icebp
data16
and
sub
push
pop
lahf
icebp
or
inc
js
cmps
jb
fsubp
es
mov
xor
pop
ins
in
jb
fmul
ss
imul
rcr
out
sub
aam
cmc
clc
add
sahf
add
add
inc
sti
mov
sub
scas
xor
ds
xchg
pop
adc
out
leave
ins
loop
test
add
loope
test
mov
add
ja
popf
cli
inc
add
or
push
or
ret
sub
call
pop
out
and
xchg
scas
inc
jmp
es
sub
cmc
movs
pop
loope
in
jge
push
xlat
sbb
cmc
inc
and
(bad)
mov
xor
mov
adc
push
push
fwait
mov
dec
outs
jno
icebp
pop
cmp
xor
mov
das
cld
push
call
loop
cmp
std
cdq
ror
(bad)
mov
aas
inc
jb
dec
popa
push
outs
mov
mov
je
sbb
xor
sub
imul
jne
jmp
jp
jbe
out
jno
add
xchg
or
push
inc
adc
dec
or
fiadd
and
lahf
push
jg
xor
xor
cmp
xchg
das
aam
jp
push
jge
std
jb
and
cmps
pop
xchg
imul
or
out
pop
loop
gs
sbb
mov
push
add
dec
push
out
inc
(bad)
ror
lock
imul
lds
cmc
call
out
out
xchg
jae
icebp
push
cmp
shl
test
shr
cmps
adc
push
jmp
hlt
in
js
ins
push
sub
jl
call
pop
rcr
cmc
retf
push
mov
out
icebp
add
stc
mov
and
test
jns
std
(bad)
pushf
jmp
out
cli
inc
mov
dec
sub
stc
repnz
jae
movs
and
stos
jl
sbb
leave
in
movs
xor
sub
out
fcomp
xchg
and
retf
push
cmp
aas
mov
loopne
add
(bad)
sub
call
add
jnp
in
mov
movs
xchg
ds
in
out
pop
add
cmp
jae
fiadd
lea
jl
and
push
cld
add
push
jp
sbb
shr
pop
push
cwde
dec
add
mov
nop
cmp
rcr
imul
jmp
push
fldenv
int
mov
sub
in
dec
sti
ja
add
inc
out
in
(bad)
pop
pusha
sub
mov
sbb
push
outs
xchg
loope
pusha
mov
int3
sbb
enter
and
idiv
pavgw
dec
jno
mov
cmp
ja
es
imul
dec
cmps
or
and
push
jo
sbb
xchg
fisttp
pop
push
dec
mov
iret
dec
test
mov
or
cmp
mov
bound
sbb
cli
rol
(bad)
jae
hlt
lds
pushf
push
push
sbb
out
sub
pop
inc
or
test
jle
aaa
inc
cmc
mov
add
add
std
cwde
ins
inc
mov
jnp
xor
lods
push
xor
add
movs
(bad)
mov
movs
xchg
jns
cmp
cmp
test
push
xchg
repz
xchg
and
pop
xor
imul
mov
dec
cmp
mov
call
into
(bad)
out
or
pcmpeqw
ins
div
lahf
pop
push
fisttp
cmps
lods
arpl
shr
fisub
push
(bad)
dec
cmc
pop
loop
and
mov
mov
daa
inc
mov
movs
mov
xchg
jmp
xchg
test
add
push
jg
sub
cs
mov
sbb
adc
push
pop
xor
push
jle
mov
fisttp
pop
ins
push
dec
cmc
inc
imul
add
cli
jbe
jne
cmps
(bad)
ror
(bad)
pop
and
inc
aad
es
mov
sti
jg
pop
xchg
sbb
fldl2t
mov
push
jl
pushf
call
and
jns
jmp
out
icebp
cmp
stos
cdq
sbb
and
retf
xor
cmp
push
xchg
inc
int
data16
dec
mov
(bad)
sbb
mov
fld
fs
inc
jecxz
and
inc
dec
ins
xchg
fmul
sbb
mov
pop
ja
out
jno
add
inc
movs
pusha
adc
popf
pop
xor
jle
mov
jp
xchg
in
pop
stc
ds
inc
clc
cmp
shl
sbb
add
sub
push
jnp
xchg
jmp
call
cmp
adc
js
xchg
aas
stos
xlat
leave
push
inc
add
ins
loope
ficom
pop
ins
pop
inc
jbe
test
push
imul
cld
sbb
add
inc
stc
mov
and
dec
xchg
fs
add
pop
mov
mov
xchg
sbb
ret
popf
mov
mov
cmp
mov
sti
jmp
ja
push
xor
add
push
xor
dec
mov
ret
sub
shr
add
pop
mov
pop
in
cdq
rcr
icebp
sti
push
iret
add
mov
stc
iret
imul
or
sub
(bad)
std
xchg
lea
aam
into
sub
dec
xor
gs
scas
ins
out
fsubrp
lods
sub
jg
sub
outs
stc
sub
fcom
cmps
pop
shl
cmp
sbb
mov
push
mov
mov
cli
sti
(bad)
sbb
jo
mov
ins
dec
pushf
adc
push
repnz
out
mov
ror
ret
ins
xchg
inc
mov
xchg
inc
mov
aaa
cmps
aaa
xchg
mov
test
std
xchg
inc
sti
ret
push
push
std
push
out
fmul
int3
ins
pushf
adc
lahf
enter
mov
mov
adc
clc
cs
stc
sbb
dec
fsubr
ja
mov
sub
add
inc
push
test
jbe
mov
xlat
(bad)
jns
daa
xchg
xor
sahf
push
or
leave
jl
rol
fistp
push
stos
and
cmp
or
adc
fld
jo
mov
push
cmp
out
inc
shl
fisub
(bad)
in
jo
nop
hlt
std
cmp
pop
inc
jae
aam
dec
and
mov
(bad)
in
dec
movs
or
or
stos
xchg
fisttp
push
scas
(bad)
stos
shr
push
imul
inc
sbb
bound
call
xor
push
aaa
xor
mov
add
aas
sub
jp
dec
clc
dec
push
mov
mov
xor
jecxz
jp
inc
fistp
lds
outs
inc
push
stos
push
cdq
xor
sub
add
push
das
mov
retf
cmp
test
dec
lods
sbb
sub
int3
xor
push
xor
sbb
jg
add
and
push
mov
movs
cmp
movs
(bad)
xor
out
(bad)
dec
xlat
push
mov
mov
in
clc
mov
push
iret
stos
push
lea
and
mov
cmp
sub
jmp
outs
fnstcw
fs
add
repz
lds
xlat
outs
ins
ins
jp
adc
mov
xor
cmps
mov
push
icebp
test
into
scas
jl
cmp
in
and
xor
sub
pop
xchg
das
mov
sub
mov
cs
(bad)
out
arpl
cmp
and
fnsetpm(287
and
push
nop
fucomip
cmp
jnp
ds
mov
pop
retf
lods
xchg
cmp
pop
push
cld
gs
cmps
cld
mov
jg
cmp
inc
aam
sbb
push
(bad)
lahf
stos
sub
outs
add
push
sti
or
arpl
and
mov
out
xchg
cmps
sbb
jecxz
and
jb
and
dec
cdq
add
mov
adc
cld
or
add
push
jne
not
mov
mov
xchg
out
pop
int3
sti
fild
in
ja
sbb
or
inc
retf
cmps
loope
add
out
imul
push
cmp
cmp
add
pop
or
fld
fadd
xor
mov
das
push
xor
sbb
pop
sahf
and
popf
or
mov
imul
fcom
js
mov
stos
shl
jno
(bad)
fisubr
int3
push
test
adc
movs
aaa
inc
(bad)
movs
mov
test
or
out
imul
jbe
or
inc
(bad)
mov
sub
dec
adc
aaa
ins
xchg
inc
stos
jns
stos
dec
es
out
les
lods
sbb
loop
adc
into
aas
jnp
ins
imul
inc
pop
jb
fucomp
hlt
xchg
sbb
loope
sti
dec
repz
pop
lods
retf
xchg
call
repz
outs
add
in
dec
mov
push
mov
jnp
mov
mov
loopne
xlat
jnp
pushf
push
push
xchg
mov
sub
shl
add
cmp
mov
jle
xlat
inc
ins
test
outs
xchg
cs
or
imul
xor
mov
mov
loopne
dec
cmp
mov
cld
imul
adc
test
mov
test
or
adc
mov
mov
js
add
sub
mov
cmps
add
movs
cld
stos
aas
pop
mov
inc
or
jge
xchg
push
sti
xchg
inc
imul
fdivr
or
or
shl
ffree
arpl
(bad)
pop
jno
sahf
into
and
push
mov
xchg
inc
add
push
in
xchg
mov
into
adc
cli
dec
jne
ss
inc
fld
mov
popa
and
xor
aas
fst
xor
push
fwait
sub
add
xchg
stos
and
xor
hlt
movs
xchg
push
pop
gs
inc
sahf
add
loope
test
aad
(bad)
out
jmp
dec
sbb
jmp
fs
cmps
sar
hlt
cmps
cmp
or
and
mov
cld
dec
call
sbb
mov
add
pushf
mov
fld
add
ror
inc
rol
inc
jecxz
sub
imul
cmp
and
pop
push
add
xlat
inc
mov
rcl
mov
sbb
jns
test
test
mov
std
test
jmp
call
sbb
cmp
xor
lds
imul
jnp
adc
mov
enter
push
nop
es
test
shl
mov
outs
cmp
test
dec
sub
out
aad
fwait
imul
gs
jg
mov
cld
fist
jb
mov
aam
pop
xchg
or
or
imul
jmp
sbb
ins
das
add
out
stc
(bad)
inc
mov
fadd
gs
sar
fs
nop
cmp
fbstp
pop
enter
jge
out
out
sub
xor
loopne
test
leave
repz
lahf
mov
rol
sub
cmp
enter
popa
add
mov
push
cs
loope
frstor
int
adc
loope
hlt
lds
mov
jmp
shr
leave
retf
xabort
cmp
adc
mov
cmc
dec
adc
or
push
fisubr
adc
sub
mov
pop
stos
jg
aad
popa
neg
inc
xchg
sub
ret
jb
das
add
out
pop
mov
imul
add
das
jg
out
test
mov
xchg
ror
sub
pop
jbe
push
in
mov
mov
int3
ss
or
sbb
movs
and
mov
add
arpl
fisttp
adc
and
and
call
cdq
cld
cli
test
fdivr
movs
xchg
push
xchg
movs
push
xchg
div
in
dec
jl
and
inc
dec
fndisi(8087
jmp
retf
scas
ja
pop
mov
jle
popf
js
(bad)
jl
add
jns
popa
and
fisubr
add
std
repnz
ins
fwait
ret
fnsave
sub
ds
add
clc
lahf
dec
push
dec
jae
(bad)
lea
mov
xor
mov
pop
pop
xor
jb
jns
arpl
enter
lock
scas
push
enter
daa
xchg
mov
sub
inc
in
lods
add
movs
pop
bound
icebp
xchg
mov
stos
ja
out
call
scas
jecxz
iret
mov
and
cmp
dec
ja
push
mov
cwde
call
in
sahf
mov
add
leave
add
ins
xchg
stos
push
or
dec
loop
or
div
mov
outs
stc
icebp
add
mov
shl
jmp
push
retf
push
fwait
mov
ja
repz
loope
(bad)
push
addr16
dec
jle
xlat
gs
mov
rol
shl
outs
or
hlt
cmp
xor
lods
call
(bad)
push
or
jb
pop
ret
add
pop
add
mov
jnp
push
sbb
dec
and
es
mov
in
mov
sbb
es
adc
cmps
bound
sbb
mov
push
retf
pop
in
mov
rol
push
or
cmp
mov
and
adc
mov
jbe
mov
jecxz
das
ret
cs
test
or
adc
add
pop
xchg
clc
(bad)
add
daa
imul
sub
js
imul
push
sub
adc
retf
inc
aas
jecxz
sbb
mov
repnz
fnstsw
fstp
inc
xchg
lea
jns
dec
stos
mov
out
and
adc
in
push
arpl
test
sub
push
fwait
xor
xor
cmc
pusha
out
push
fild
test
xchg
inc
or
scas
cmp
ror
lea
cmc
not
dec
mov
add
mov
mov
pop
and
cld
ret
cwde
aas
xchg
push
push
retf
call
mov
lea
pop
inc
mov
mov
mov
cld
sti
xor
das
in
sub
fwait
cs
jnp
nop
add
mov
test
movs
stos
sub
pop
xchg
xor
sub
xor
scas
jns
icebp
jne
movs
out
repz
sbb
xchg
add
add
sub
stc
les
stos
add
clc
dec
nop
and
out
loopne
mov
jmp
cld
loop
sub
cmp
fcom
fwait
mov
jmp
or
add
je
dec
dec
fnsave
xor
pop
jne
adc
and
div
pxor
fistp
mov
je
xor
aaa
jb
jle
add
sub
xor
ficomp
ins
dec
arpl
jae
sti
fs
mov
dec
gs
sbb
and
or
bound
sub
jo
fs
jmp
gs
xchg
and
in
out
mov
out
push
cs
hlt
or
rol
mov
adc
push
pop
test
push
outs
popa
adc
dec
mov
jg
push
icebp
(bad)
js
xor
fwait
out
jae
out
push
and
ror
fiadd
test
shr
sub
inc
hlt
pop
clc
adc
daa
dec
pop
lds
popa
push
or
mov
jae
les
(bad)
sahf
shl
ror
(bad)
or
std
adc
cmp
adc
(bad)
mov
rcl
imul
outs
fldcw
or
xor
push
mov
adc
pop
xchg
dec
jmp
xchg
ret
push
jp
mov
nop
sbb
sahf
jp
xchg
inc
sub
dec
add
cwde
scas
pop
retf
jmp
xlat
fisttp
push
call
pop
lock
les
sub
or
add
mov
(bad)
jne
loopne
inc
jmp
fsubr
cld
movs
fbld
mov
fsub
pusha
add
mov
loopne
popf
shl
cdq
dec
push
fisubr
xchg
popa
pop
inc
jae
pop
(bad)
pop
int3
loop
test
add
in
sub
jmp
xor
adc
ror
push
jecxz
pop
inc
loope
sbb
jl
lods
sahf
jns
fwait
test
mov
push
cmp
cwde
cmps
dec
ins
mov
inc
sub
and
push
cwde
call
push
lahf
lds
sbb
xchg
ins
ins
or
fs
adc
aad
sbb
pusha
sbb
dec
xchg
mov
cwde
push
inc
nop
jo
xlat
loopne
or
xchg
fsubr
mov
pusha
ss
dec
daa
push
icebp
add
enter
(bad)
sbb
mov
sahf
clc
jno
cmps
cmp
sub
jp
mov
loopne
out
pusha
xchg
popa
clc
aad
sbb
out
adc
xchg
jno
xchg
fst
imul
lods
nop
push
cmp
dec
mul
ds
mov
inc
dec
pop
repnz
cwde
push
outs
ficomp
xor
xor
mov
push
mov
jae
rcl
adc
inc
sahf
mov
neg
jp
mov
scas
cmp
cmp
and
lea
lock
dec
pop
add
xor
gs
cwde
cmp
mov
sahf
arpl
cmps
repnz
aam
into
or
out
ins
nop
and
int
bound
(bad)
dec
mov
or
cld
push
and
ja
lea
add
jns
mov
xor
scas
sbb
leave
mov
sub
pop
inc
jl
pusha
push
data16
adc
xchg
inc
add
sbb
call
sub
repz
sub
push
cmp
call
std
mov
outs
sbb
or
xor
out
rol
out
fwait
enter
cmp
daa
add
(bad)
(bad)
and
push
mov
jmp
(bad)
xor
dec
arpl
aas
std
and
mov
xor
pop
add
stc
cli
adc
dec
adc
push
ins
sub
inc
sbb
js
jge
xchg
call
mov
adc
lahf
(bad)
and
jmp
and
inc
sti
loop
nop
fdivr
out
sbb
loope
fwait
or
push
jg
fstp
sbb
or
inc
push
ficomp
push
pop
push
push
mov
xor
call
das
mov
ss
mov
pusha
mov
push
fimul
cmps
mov
fisubr
ds
ffreep
fcomp
sub
shl
repnz
cmp
add
and
push
jnp
icebp
cmps
(bad)
push
xor
sbb
add
stos
iret
pusha
enter
retf
dec
jo
(bad)
mov
or
or
(bad)
clc
mov
loop
jecxz
push
clc
lds
push
shr
push
ins
sbb
mov
cmp
movs
cmc
mov
(bad)
call
dec
arpl
jl
push
es
and
add
sub
xchg
enter
fcomp
mov
push
or
cmp
jbe
mov
je
jae
int3
xor
add
pusha
(bad)
test
add
das
add
ror
xchg
push
fsubrp
mov
cld
aam
xchg
enter
imul
bound
mov
sti
scas
jne
mov
int
in
jl
out
or
call
mov
stos
mov
pop
fist
xor
sub
in
sub
mov
adc
mov
or
pop
xchg
out
sub
fcom
inc
je
lea
out
imul
mov
fild
mov
inc
gs
sbb
ja
aaa
dec
sahf
dec
or
or
cmp
aam
es
add
lds
cmp
sbb
and
mov
and
xchg
fisttp
enter
add
xor
(bad)
jle
arpl
xor
jo
js
out
sub
les
xor
(bad)
jmp
imul
out
mov
cmps
mov
imul
loope
stos
push
mov
push
mov
add
xlat
hlt
pop
cmc
sbb
(bad)
daa
int3
(bad)
adc
jp
adc
fst
pop
imul
ret
sbb
movs
jbe
outs
inc
into
outs
inc
ds
mov
out
aam
cmp
test
in
and
int
das
inc
addr16
sub
aas
stos
adc
daa
retf
dec
dec
cmp
sub
adc
mov
and
pop
mov
scas
sbb
dec
push
inc
cmps
outs
out
xchg
imul
sub
pop
pop
xchg
cmp
popa
(bad)
ret
mov
pop
fmul
icebp
nop
out
sub
jle
pop
or
and
dec
arpl
fcmovnbe
push
mov
loop
jnp
push
jnp
add
push
jmp
and
push
xchg
popa
es
iret
jecxz
mov
lahf
dec
lea
and
fst
cmp
xlat
cmp
lds
loope
in
fs
xor
add
mov
jae
and
adc
jne
adc
sbb
dec
lock
mov
add
jns
pusha
test
sbb
fwait
jo
loop
sbb
mov
mov
lods
ja
in
cmps
sub
push
adc
std
movs
pop
retf
xor
adc
cmp
(bad)
and
inc
push
es
cmc
push
test
neg
inc
pop
cmp
mov
(bad)
sub
call
jno
mov
dec
pop
sbb
es
jmp
(bad)
and
loopne
add
enter
or
push
xor
mov
sub
add
inc
pop
retf
data16
leave
sbb
idiv
cdq
in
daa
or
loope
mov
jg
sbb
mov
arpl
and
xchg
clc
test
arpl
xor
xchg
push
psrld
cs
push
int3
and
fdivr
xchg
and
mov
or
std
adc
stc
sbb
push
adc
loop
out
pop
cmp
add
lahf
inc
sti
inc
pop
sbb
aam
icebp
mov
jle
outs
cmp
cmp
dec
pop
push
inc
sahf
icebp
cmps
cmc
or
movs
lock
jns
sub
mov
shl
out
inc
sub
xor
scas
(bad)
pop
dec
mov
(bad)
mov
shr
pop
jle
cmp
cs
pop
test
cmps
in
std
fcmovne
xchg
ret
pop
mov
lods
jecxz
cmps
call
js
push
ror
mov
daa
sbb
jb
xchg
jmp
dec
stos
sbb
dec
mov
inc
adc
retf
sti
dec
jbe
gs
sub
pop
mov
call
cli
ss
xchg
push
or
xor
fstp
vpsubd
xor
fnstenv
mov
(bad)
cmp
jecxz
ret
cs
mov
fwait
retf
xchg
jge
push
xor
int3
loopne
jge
scas
mov
push
stos
dec
iret
sbb
dec
pop
repz
sahf
mov
push
adc
sub
xor
mov
shr
cs
gs
inc
jb
jno
lods
idiv
stos
or
movs
lods
mov
cdq
sahf
pushf
pop
in
mov
push
xlat
or
out
(bad)
clc
cmps
mov
inc
fwait
out
push
xchg
call
in
or
xchg
lods
adc
les
and
sub
enter
mov
scas
mov
mov
sub
mov
pusha
repz
or
pop
or
aad
cmp
add
sbb
cmp
imul
sub
dec
lods
inc
ja
loope
pop
addr16
outs
sub
nop
jbe
push
xor
fs
push
jns
xchg
and
push
and
hlt
jne
fadd
add
out
movs
pop
retf
fucomi
xchg
nop
xchg
or
loopne
add
and
mov
arpl
add
pop
add
xor
inc
movs
add
cmp
imul
xor
imul
mov
dec
std
shl
repz
xchg
mov
jle
mov
fstp
sub
cwde
loop
jb
adc
dec
repz
lahf
jae
jns
sub
in
sub
out
cmp
xor
daa
popf
jbe
dec
pop
mov
sahf
or
mov
fnstenv
pop
int
repnz
push
fdiv
add
ja
cmc
fbld
and
inc
pop
cmps
aad
cmps
push
dec
cwde
shr
sti
mov
xchg
rcl
sub
xlat
and
out
out
pop
pop
dec
jne
mov
in
lea
jmp
mov
adc
adc
sub
enter
test
pop
test
jmp
imul
aam
inc
lods
mov
dec
xor
push
mov
sub
add
push
movs
inc
ror
add
sub
pop
jbe
shl
jmp
inc
dec
loop
pop
fnstenv
dec
mov
fwait
xchg
out
xor
add
dec
aam
dec
les
push
push
cmc
aad
push
(bad)
neg
push
adc
jns
sub
xchg
xchg
xchg
sub
pop
int
sub
or
mov
mov
test
inc
sti
jle
shr
inc
mov
add
sbb
je
pop
push
push
xchg
add
push
mov
iret
fwait
inc
push
iret
jbe
(bad)
cs
jo
sbb
nop
lds
imul
mov
push
cwde
data16
lahf
xlat
adc
out
(bad)
outs
mov
lea
js
mov
movs
mov
inc
es
jnp
fs
adc
fbstp
push
sbb
lds
iret
push
ficom
(bad)
push
lea
add
lock
mov
mov
cs
int
call
or
mov
(bad)
out
sub
leave
cld
mov
inc
cmp
pop
int
add
pop
pop
aaa
pop
pushf
idiv
imul
dec
shl
jecxz
ja
push
cmc
xchg
les
lods
xor
repz
mov
sbb
jb
scas
test
inc
mov
dec
stos
popa
lahf
jb
mov
stos
add
mov
scas
mov
dec
jae
mov
out
ret
neg
std
leave
(bad)
cmp
shr
jbe
cmp
mov
fcom
sbb
mov
mov
mov
add
push
pop
ja
xor
fwait
mov
test
push
retf
mov
fistp
xchg
mov
cmp
lea
jg
icebp
imul
mov
sub
fdiv
sbb
lods
cmp
cmp
in
jmp
sub
inc
cmc
mov
inc
push
sbb
imul
xor
outs
or
dec
cwde
dec
loopne
out
push
mov
gs
das
mov
xchg
fmul
adc
shl
xchg
sbb
dec
loop
sub
arpl
bound
adc
ret
add
das
push
(bad)
fcomp
lods
loop
push
adc
fdivp
sti
outs
pop
push
(bad)
adc
imul
or
out
jge
popf
adc
sub
out
stos
call
adc
sbb
pop
mov
mov
ret
sbb
pop
push
and
call
jmp
lock
(bad)
test
xor
mov
dec
mov
lock
push
fdivr
sub
int
rcr
push
or
mov
nop
(bad)
lea
jae
sbb
jo
hlt
retf
mov
in
out
rcl
clc
sbb
cld
jecxz
outs
jo
mov
imul
lahf
lods
cli
js
loope
and
mul
xor
fld
push
push
dec
mov
add
into
hlt
minps
test
icebp
aaa
pop
push
mov
(bad)
fsubr
push
sti
call
cdq
mov
pop
rol
hlt
and
add
std
(bad)
add
mov
aas
adc
adc
push
pmaxsw
ss
adc
jo
pop
sub
dec
adc
int3
dec
das
mov
bound
pushf
jo
cmp
aaa
inc
outs
pop
xor
mov
xor
dec
in
hlt
in
stos
xor
in
and
inc
pop
mov
pop
daa
sub
loope
rcr
call
xchg
mov
xchg
aaa
movs
mov
or
mov
mov
push
and
mov
scas
mov
imul
leave
retf
iret
fld
xor
div
(bad)
dec
mov
fistp
and
stos
std
rol
mov
mov
pop
test
iret
lods
(bad)
push
js
loop
cmp
mov
cmp
push
mov
out
ins
and
lods
and
frstor
(bad)
mov
retf
stc
sbb
fdiv
cmps
into
jo
jmp
imul
rep
pop
imul
ja
push
enter
cmp
arpl
mov
sub
test
xlat
push
pop
xor
addr16
mov
(bad)
xchg
mov
enter
or
jp
mov
xor
scas
ins
push
mov
jno
imul
mov
rcl
inc
inc
call
ret
movs
push
and
in
mov
pop
inc
test
fucomp
xchg
lods
xabort
mov
and
int
push
adc
std
ret
popf
xchg
mov
outs
sub
add
sar
(bad)
gs
jmp
int
loopne
sub
test
popf
inc
das
xlat
cmp
jae
js
shr
mov
retf
retf
gs
das
sahf
popa
fdiv
test
mov
cdq
pcmpgtb
push
(bad)
shl
cmp
push
mov
mov
xor
aaa
(bad)
push
clc
jno
xor
pusha
fdivr
sub
es
dec
call
(bad)
dec
gs
clc
es
mov
xchg
stc
mov
(bad)
clc
clc
stos
push
cmp
faddp
mov
and
aas
pop
and
mov
lds
stos
jmp
int3
enter
repnz
lock
dec
mov
retf
dec
cmps
sar
cmp
push
sti
das
retf
pop
scas
jno
push
shld
inc
jnp
out
xor
cdq
outs
vmovupd
push
cmps
out
aam
sbb
je
dec
mov
icebp
mov
or
push
(bad)
mov
aad
xlat
push
stos
add
jnp
xlat
outs
jge
mov
test
adc
xchg
cmp
add
repnz
pop
ror
outs
pop
push
and
scas
and
xor
adc
dec
cwde
sub
ret
xchg
lods
outs
js
fs
adc
in
or
sub
clc
cmp
ja
dec
mov
ret
pop
and
in
push
cld
push
dec
cmp
jmp
shr
loope
pop
push
fisttp
push
call
int
addr16
sub
sbb
nop
fwait
sbb
stos
nop
mov
das
icebp
(bad)
in
aad
movs
daa
aaa
lods
mov
lahf
sub
jnp
pop
mov
in
and
pop
(bad)
popa
inc
xchg
cmp
icebp
pop
jne
popf
movs
push
scas
xchg
call
(bad)
stc
das
idiv
outs
fisttp
mov
pop
gs
(bad)
call
sub
xchg
test
fbld
fmul
adc
fs
add
sub
movs
mov
arpl
xor
dec
mov
dec
adc
inc
mov
sahf
push
inc
adc
mov
mov
fwait
mov
adc
push
leave
xchg
cmp
xor
inc
pop
sbb
mov
cli
pop
popf
out
pop
stos
cmp
sti
sbb
(bad)
jp
sbb
ds
dec
mov
mov
stos
sahf
sbb
push
jbe
test
pop
pop
and
pop
js
and
rol
je
xchg
or
rcr
arpl
mov
mov
inc
dec
sub
into
aaa
jo
lods
mov
(bad)
daa
cmp
fisttp
or
into
leave
jmp
and
xchg
and
test
jmp
cmp
xchg
mov
push
gs
pop
sbb
iret
outs
adc
and
aaa
out
cli
pop
mov
jle
in
addr16
sbb
test
clc
and
xchg
loop
jb
mov
lds
sub
idiv
arpl
cmp
(bad)
jecxz
loop
xchg
aaa
fnsave
mov
inc
pop
add
xor
out
ins
xchg
mov
inc
sbb
adc
leave
sub
sub
jae
imul
(bad)
jmp
xor
cmp
or
sub
sub
cmp
jmp
or
iret
shr
mov
aaa
xchg
xchg
jo
pop
cmc
das
out
dec
leave
gs
mov
sahf
cmp
in
jmp
mov
or
fnstcw
retf
sbb
push
sub
mov
clc
loop
jle
jbe
gs
inc
mov
jb
pop
scas
aas
adc
and
push
push
shr
jns
xchg
mov
(bad)
js
jecxz
and
and
out
xchg
adc
or
(bad)
mov
xchg
sub
cmp
or
jge
or
mov
and
sti
jae
sub
imul
ds
push
pop
push
clc
div
loop
iret
fist
xchg
mov
loope
add
popf
xor
mov
loopne
ins
xor
jbe
jle
cld
ins
inc
leave
mov
ja
and
xor
in
outs
jns
test
push
outs
lahf
fisttp
cmc
sbb
and
mov
shl
xlat
jne
shl
push
inc
jne
movs
pop
ret
jbe
mov
js
gs
lahf
cwde
jmp
cmp
rcl
lock
add
pop
aam
test
test
enter
fadd
int
mov
popa
xchg
std
lds
xlat
enter
inc
retf
(bad)
xor
or
mov
loop
push
aas
loop
ret
add
or
dec
xlat
sar
xor
call
loope
push
inc
push
test
inc
sub
and
inc
dec
out
xor
dec
fmul
scas
pusha
inc
and
test
test
inc
mov
lea
(bad)
int
push
inc
fsubr
jmp
xchg
repz
(bad)
inc
sub
push
sub
push
sbb
xchg
hlt
jnp
adc
or
cmp
inc
inc
adc
mov
jbe
xchg
div
ret
outs
inc
push
pop
popf
xchg
inc
pop
sub
cwde
(bad)
in
stos
stos
shl
nop
(bad)
or
popf
mov
(bad)
sahf
jo
inc
add
sbb
or
pop
sub
cmp
ss
xchg
(bad)
lahf
add
dec
fsubp
xchg
jno
scas
rol
push
retf
call
cmp
pop
ja
lods
test
xor
pop
lods
pop
shr
lahf
push
sbb
adc
inc
adc
push
arpl
fldenv
cdq
cld
into
out
enter
adc
in
mov
loopne
adc
and
icebp
jg
movs
and
test
jmp
in
dec
jmp
jmp
push
dec
push
fnstcw
xor
test
loopne
in
data16
stos
pop
jo
std
bound
add
popa
in
xchg
aad
movs
and
mov
(bad)
sbb
in
mov
or
test
jbe
cmp
xor
mov
std
mov
pop
push
add
mov
(bad)
push
ror
pop
ds
dec
outs
pop
adc
shl
test
adc
jo
xor
sbb
xor
pop
mov
shl
xlat
popa
lea
jmp
xor
jns
xchg
jg
adc
je
adc
inc
fcomp
pushf
sbb
scas
pop
test
shl
enter
xchg
and
popa
scas
(bad)
pop
sbb
popf
xchg
mov
ja
fsubr
jno
(bad)
hlt
add
and
out
adc
fs
sub
dec
loopne
call
pop
js
sbb
and
mov
mov
hlt
and
jnp
fbstp
sahf
add
or
sbb
test
cmp
iret
sbb
test
rol
dec
pop
cmp
mov
retf
jmp
stos
aam
add
repnz
xor
inc
pushf
cmp
cli
sub
clc
jmp
xchg
pusha
add
rcr
test
add
int3
or
leave
mov
or
push
xor
sbb
(bad)
stos
fcomp
inc
pop
mov
retf
cmc
cmps
sub
fwait
(bad)
mov
jl
push
cmc
mov
call
xor
aad
push
pop
aaa
adc
sub
mov
add
mov
sbb
aad
icebp
stos
mov
mov
xor
push
push
mov
mov
ret
jl
shl
enter
fsub
ror
sub
or
jnp
lahf
push
mov
jbe
jne
cmc
shl
test
imul
retf
adc
or
or
mov
cmp
pop
jmp
cmps
adc
sbb
adc
pushf
pop
fld
fld
or
fucomp
sbb
or
pop
dec
cmp
cmp
cld
xchg
pop
repz
sbb
and
cmps
and
lods
push
add
and
mov
push
(bad)
mov
mov
push
(bad)
or
jae
push
mov
xor
mov
xchg
sbb
inc
fisttp
push
mov
in
inc
stc
movs
cld
mov
or
daa
mov
icebp
js
leave
pushf
xchg
js
inc
lahf
shl
push
(bad)
fxch
sub
je
push
ja
in
mov
aad
inc
add
inc
jnp
clc
push
clc
call
or
sub
icebp
xchg
mov
scas
ror
mov
rcl
pop
sub
cld
xchg
adc
es
and
les
xor
push
dec
nop
mov
aaa
pop
stos
dec
mov
xchg
jne
rcl
adc
xchg
ja
add
or
xor
push
repz
cmc
dec
sbb
mov
and
call
movs
fld
push
test
mov
nop
sbb
mov
adc
stc
dec
pop
jmp
mov
jmp
xor
mov
lods
cmps
das
jmp
out
movs
repnz
mov
dec
mov
and
int
pop
push
ret
adc
sub
leave
xchg
enter
jge
fisub
adc
mov
and
jg
dec
mov
fild
aam
cmp
mov
pop
(bad)
lods
cdq
rol
and
or
add
adc
pusha
add
sbb
test
sahf
push
or
(bad)
das
pop
rcr
and
je
jnp
add
and
fnstenv
xchg
test
pop
js
adc
xchg
jae
movs
add
or
push
ret
mov
leave
inc
mov
push
push
movs
or
mov
sub
or
cmp
(bad)
ds
mov
repz
push
loop
stos
(bad)
call
pop
cmp
mov
fdiv
pop
popa
inc
and
retf
push
int
inc
dec
jge
js
daa
jno
fbstp
pop
pop
xchg
mov
ds
lods
sti
pop
out
mov
js
adc
mov
add
pop
das
hlt
movs
stos
lds
pusha
shr
inc
pop
xchg
jb
loop
out
adc
inc
div
shl
repz
inc
cs
jmp
pop
in
sbb
out
push
dec
add
or
dec
ja
cli
inc
nop
jb
jae
sbb
in
push
(bad)
jmp
push
mov
icebp
mov
imul
pop
aam
mov
adc
ffreep
sub
cwde
push
lahf
call
pop
pop
ret
stos
xchg
or
sbb
retf
pop
or
mov
cmp
ret
jg
fcmovnu
cmp
adc
std
adc
and
movs
jb
mov
mov
or
cmps
nop
xchg
cmp
fldcw
cli
shl
fldl2e
pop
jne
retf
in
gs
sbb
dec
in
(bad)
sbb
xchg
push
pop
mov
out
fild
mov
cmps
dec
sti
push
call
hlt
push
(bad)
dec
jbe
and
mov
pop
xlat
call
lock
mov
and
vaddps
dec
fucompp
lods
jno
dec
pop
mov
(bad)
pop
cmp
lods
xor
je
jno
adc
inc
fcom
dec
sub
mov
mov
fs
(bad)
jmp
add
(bad)
fwait
ror
pop
mov
popf
sbb
inc
mov
sub
out
sub
mov
rol
pop
mov
sub
jg
mov
(bad)
in
push
fnstcw
(bad)
pop
(bad)
(bad)
lahf
fimul
cmp
jne
fmul
sar
jns
mov
fcom
push
dec
pop
adc
dec
in
push
call
lds
mov
ds
mov
je
dec
push
sub
daa
push
xor
sbb
daa
fisttp
sbb
jp
stos
push
dec
iret
icebp
div
scas
mov
outs
aas
aas
test
js
rol
jg
mov
pop
stos
sbb
push
mov
dec
adc
sbb
pop
je
push
add
repz
mov
in
inc
cmps
mov
loope
jmp
dec
aas
dec
jecxz
sbb
pop
xor
data16
xor
xor
push
lods
mov
lods
dec
rol
test
cld
cmc
dec
mov
sbb
call
mov
xchg
out
in
xor
clc
dec
xor
mov
add
xchg
fistp
js
test
cwde
mov
sbb
jo
mov
test
jae
into
scas
stos
cmp
cmp
loope
cld
pushf
js
xor
pop
mov
mov
test
and
cmp
(bad)
sahf
push
dec
test
dec
stos
outs
xchg
or
fnstsw
dec
imul
mov
iret
(bad)
and
sub
rcr
(bad)
sub
in
clc
(bad)
cmp
gs
jmp
cld
jle
sbb
or
pop
fbld
jge
pop
pop
cmps
adc
mov
pop
adc
pop
repz
sub
jmp
push
cwde
jnp
lods
push
push
dec
add
xchg
(bad)
popa
mov
jbe
add
sub
lods
popf
xor
loopne
shl
shr
or
add
lods
mov
dec
mov
dec
ret
lds
push
js
jb
je
pop
test
xor
ret
inc
sbb
fmul
mov
pop
push
lds
xchg
xlat
dec
mov
push
test
add
mov
fwait
adc
xchg
sti
mov
dec
mov
test
push
push
repz
pshufw
iret
std
aad
add
add
lds
or
and
adc
retf
pop
mov
(bad)
das
adc
adc
repz
inc
jp
sbb
inc
add
sub
jge
ins
movs
jmp
dec
pop
mov
lds
xor
data16
bound
cdq
mov
ins
scas
xchg
dec
pop
(bad)
mov
ins
pop
clc
enter
cmp
adc
retf
mov
bound
cwde
les
sbb
lahf
pop
adc
adc
not
inc
push
pop
scas
mov
mov
inc
inc
push
daa
inc
fidiv
cdq
adc
xchg
cmps
arpl
sar
mov
shr
cmp
push
data16
scas
lods
lahf
movs
push
sahf
in
stos
dec
icebp
jp
enter
xlat
test
aad
cdq
pop
mov
cmp
push
xor
(bad)
repnz
jg
adc
fmul
lea
jmp
mov
push
mov
dec
xchg
xor
pop
jnp
sub
dec
push
fmul
adc
push
in
and
dec
jge
jb
aam
and
mul
mov
out
xchg
lea
nop
in
mov
les
mov
les
(bad)
sub
mov
jae
retf
sub
in
push
jp
pusha
ds
mov
xor
cdq
xlat
hlt
lea
into
ss
jge
mov
add
retf
iret
and
popf
fstp
sub
pop
mov
mov
cmc
enter
neg
imul
loope
nop
daa
loopne
jmp
pusha
ins
addr16
mov
adc
xor
mov
cmps
jmp
dec
mov
add
inc
cmp
arpl
test
add
xchg
xchg
popf
sub
out
push
test
loop
pop
iret
cdq
(bad)
mov
xor
xchg
pop
add
loope
or
or
push
and
sub
mov
lds
scas
(bad)
jmp
jb
std
jb
cmc
push
dec
loopne
sti
mov
lods
adc
cmp
jecxz
ins
fadd
push
popa
in
mov
into
sbb
xlat
es
cmp
push
cli
repnz
and
pop
mov
xlat
mov
sub
test
scas
js
dec
xchg
in
ret
shl
out
pushf
daa
mov
ins
inc
imul
inc
out
mov
rol
div
push
xchg
adc
ds
jp
cmp
loope
lea
mov
xchg
and
ret
pusha
jae
out
ins
jge
cmps
mov
mov
sbb
ds
(bad)
mov
jbe
ins
test
jno
mov
daa
stos
xor
pusha
faddp
add
sub
and
ficomp
xchg
xchg
js
add
and
fdiv
xor
push
dec
xchg
and
push
repz
jnp
ret
je
inc
jg
loope
imul
xchg
dec
(bad)
jnp
push
js
xchg
retf
cwde
cmps
cmp
jp
std
std
aaa
aaa
enter
xchg
push
jmp
mov
and
movs
fdivr
or
mov
into
jp
jae
mov
test
lods
jbe
lods
out
xchg
call
inc
(bad)
in
leave
fidiv
in
aam
retf
push
cli
shl
sub
arpl
ins
jo
dec
in
inc
loop
adc
push
cmp
test
les
or
cmp
call
pushf
and
fadd
adc
mov
and
jge
es
bound
inc
and
sbb
cmc
push
mov
outs
data16
jecxz
pusha
xchg
in
adc
jo
xchg
mov
sti
add
mov
dec
xlat
(bad)
lds
xchg
mov
dec
dec
dec
sbb
add
mov
and
imul
dec
jge
and
jo
loopne
and
push
or
mov
lahf
add
dec
add
xchg
or
popf
sub
xchg
inc
cs
or
popf
dec
and
inc
int3
movs
sbb
cmp
fucom
push
adc
sahf
sbb
fwait
jb
fs
fsub
xchg
aas
cmp
xor
stos
sub
pop
jno
jns
stos
iret
in
pop
ds
outs
or
lea
push
mov
cwde
push
jecxz
jp
mov
adc
in
clc
imul
jno
sbb
imul
inc
add
call
jge
or
dec
stos
stos
stc
pop
jge
push
ret
push
adc
hlt
ja
xor
sbb
in
ss
(bad)
sbb
push
adc
popf
icebp
inc
arpl
inc
lods
pop
not
cmp
or
outs
mov
xor
add
scas
push
(bad)
dec
cmp
movs
mov
mov
jb
xor
inc
or
add
es
fwait
add
mov
outs
neg
xchg
repnz
test
mov
cmp
jg
adc
mov
jne
fs
(bad)
out
mov
ret
push
dec
xor
sti
xchg
bts
shl
jg
adc
rol
popa
leave
mov
pushf
test
es
loope
adc
jecxz
or
mov
adc
xor
imul
ret
popf
mov
sub
cld
cmp
dec
ja
xor
push
xchg
pop
jmp
mov
arpl
into
retf
xor
mov
or
pop
pop
jp
pop
add
and
fmul
fwait
call
hlt
xchg
sar
adc
cwde
jge
or
sbb
mov
mov
frstor
pushf
lock
leave
pop
(bad)
ins
add
notrack
idiv
sti
leave
ja
push
out
cdq
mov
ret
test
ror
mov
mov
mov
ret
cmp
jge
mov
hlt
xchg
lds
mov
xor
icebp
lds
mov
fsub
stos
movs
mov
movs
cmp
adc
adc
pop
(bad)
repz
xor
xchg
sub
mov
not
(bad)
(bad)
out
add
test
mov
pop
add
sahf
jne
popa
push
xchg
mov
aaa
xchg
int
xchg
mov
adc
mov
sub
(bad)
fcmovnbe
fistp
mov
mov
adc
stos
pop
xchg
or
push
fimul
mov
push
jbe
je
int3
mov
test
add
scas
ja
push
fs
cld
inc
into
push
mov
cmp
cmp
push
imul
xchg
ss
or
call
push
cmp
movs
sub
push
sahf
or
jmp
pop
jno
cmp
adc
sti
ret
mov
std
mov
jge
and
xor
(bad)
cmp
icebp
neg
or
enter
fwait
scas
sbb
rcl
cmps
mov
int3
sbb
lods
in
std
pop
lods
(bad)
cmps
repnz
push
sbb
adc
imul
gs
push
add
enter
and
inc
inc
cwde
or
sbb
inc
out
in
push
push
out
jnp
adc
icebp
dec
outs
in
lods
jbe
data16
and
or
out
cld
rcl
mov
lock
inc
in
and
sar
in
sub
ja
inc
nop
jae
imul
push
stos
out
mov
test
clc
xor
adc
daa
retf
adc
enter
out
sbb
or
loop
pushf
ja
std
fcomp
cmp
fisub
push
clc
arpl
fwait
dec
add
inc
or
dec
mov
in
cs
(bad)
jae
lahf
cdq
fmul
sbb
pop
pop
mov
inc
mov
inc
std
icebp
push
and
xor
xchg
mov
cmp
mov
inc
xchg
dec
xor
stc
add
xchg
test
dec
mov
dec
mov
mov
sbb
xor
sbb
xchg
ret
clc
popf
cmps
dec
fisttp
aam
add
sub
fstp
fbstp
mov
repz
push
jge
pop
jne
add
aaa
cmp
js
adc
js
hlt
cli
xor
mov
fmul
cli
and
add
out
xor
loop
jae
dec
out
or
push
arpl
enter
jl
in
and
shr
inc
pop
gs
sub
xchg
sub
test
pop
xchg
jb
cmp
jo
jns
sbb
ror
jg
dec
push
call
push
fwait
sbb
jmp
mov
imul
lods
jo
or
jbe
(bad)
je
mov
in
stos
mov
pop
adc
xchg
out
mov
out
ins
lahf
mov
retf
and
inc
cmp
add
popf
mov
rcl
popf
popf
push
es
out
mov
pop
push
cmps
jne
(bad)
dec
pop
mov
imul
fadd
xor
xor
movs
xchg
mov
call
dec
ins
imul
out
out
xchg
out
enter
mov
xor
out
in
stos
ss
and
stos
out
mov
mov
call
ds
and
push
mov
dec
xor
jg
rol
jo
shl
bnd
loope
das
fidivr
mov
out
sub
cs
and
jae
loopne
pop
push
and
cld
mov
mov
and
push
jb
aam
inc
into
xchg
out
hlt
sub
adc
scas
xchg
nop
jns
adc
mov
mov
mov
mov
jne
cdq
daa
shr
lods
mov
xchg
cld
add
sub
in
sub
xchg
pop
xchg
hlt
lods
out
jmp
(bad)
pop
inc
cmc
sbb
xor
push
clc
jmp
in
clc
movs
fdiv
cli
xlat
or
and
cmp
adc
or
mov
xor
cmp
js
adc
sub
sar
jge
enter
bound
call
adc
(bad)
cld
add
xor
shr
mov
mov
inc
sub
xchg
jl
ja
cmp
ds
jge
cmp
jl
jo
(bad)
adc
out
cmp
jmp
adc
cmp
cmps
mov
push
adc
or
push
retf
push
mov
ret
mov
adc
in
jp
mov
inc
cmps
aas
xchg
mov
ror
test
cwde
sbb
cld
push
call
pushf
mov
inc
fs
fdecstp
test
sub
retf
jne
(bad)
fwait
ja
aas
inc
inc
ins
test
cmp
fist
xor
pop
mov
pop
xor
je
fldln2
cmp
inc
movs
mov
push
cmps
dec
xchg
das
jge
xchg
cmp
pop
sbb
out
fild
pop
jl
and
xor
and
sub
and
xchg
stos
sub
inc
xor
cld
fsub
stc
sub
retf
(bad)
jbe
les
in
mov
fnstcw
rol
dec
and
fld
sub
xor
pop
retf
scas
in
ins
push
and
adc
xor
and
mov
cmc
xlat
mov
test
lea
lds
mov
mov
pop
shl
xchg
cmps
sub
cli
(bad)
pop
pop
ins
push
in
inc
scas
mov
imul
push
sar
rcr
in
std
ins
loop
fadd
not
ss
in
stos
sbb
loop
loope
mov
jns
mul
inc
sahf
cmp
test
ins
adc
(bad)
adc
jnp
ins
ja
(bad)
in
inc
sbb
mov
and
and
loop
add
movs
mov
hlt
xchg
sar
int
ins
dec
nop
push
or
fs
or
rcl
pusha
in
into
dec
mov
sar
sub
(bad)
sbb
cld
mov
pop
mov
loop
jg
mov
mov
pop
add
push
adc
cwde
or
mov
sbb
mov
iret
mov
add
jae
inc
mov
or
sahf
hlt
and
jg
ins
or
and
xor
adc
dec
dec
icebp
or
jae
jo
mov
rcl
ficom
ret
imul
sbb
cmp
js
lds
pop
enter
jmp
lods
call
add
call
jg
lahf
add
push
jnp
int3
dec
ins
sbb
jg
lock
je
shl
cmp
cmps
mov
cmc
jns
xor
push
xor
xchg
cmp
(bad)
mov
fldcw
jb
test
nop
xchg
push
mov
in
mov
pop
add
xchg
add
push
jb
xor
repnz
outs
loopne
repnz
cdq
or
jmp
sub
fdiv
cmp
cmp
dec
cmp
push
fild
sbb
inc
push
pop
cli
xchg
mov
push
stos
jmp
(bad)
sub
dec
dec
std
loopne
ror
out
inc
mov
test
loopne
in
inc
xor
mov
adc
inc
inc
das
sar
xchg
add
or
push
leave
test
(bad)
bound
hlt
imul
clc
popf
mov
js
pusha
add
cmp
in
dec
fadd
cwde
add
mov
push
loopne
inc
mov
cs
sbb
sub
adc
dec
xchg
mov
popf
add
cmps
int
aaa
xchg
mul
xchg
in
dec
push
movs
xor
(bad)
push
jnp
push
ds
jmp
fsubr
xor
cmps
jg
mov
nop
ret
dec
jp
inc
das
jmp
sbb
aaa
out
adc
cmp
inc
mov
sahf
lea
ins
jns
mov
and
sar
cmp
(bad)
ins
or
cmp
test
jb
or
push
movs
mov
mov
test
fnsave
and
add
icebp
arpl
xchg
movs
xor
mov
lidtd
js
inc
inc
mov
adc
(bad)
test
inc
mov
cmps
sub
pop
pop
add
add
pop
inc
sbb
mov
add
xor
and
adc
scas
or
int3
dec
data16
jne
push
jns
std
adc
cmp
inc
mov
(bad)
retf
xchg
mov
mov
mov
cmc
fild
and
sti
arpl
jne
or
push
sub
test
xchg
jne
(bad)
sub
xchg
mov
sahf
xor
loope
rol
mov
xlat
je
pop
cmp
int
in
sbb
xchg
xchg
pop
push
cli
push
pop
es
mov
pop
cwde
sti
retf
sar
jp
das
dec
gs
mov
cmc
inc
jle
les
and
or
jb
mov
fdiv
fwait
je
inc
hlt
push
adc
push
addr16
push
push
loope
hlt
out
hlt
jmp
into
arpl
push
and
jmp
sahf
jg
cmp
pushf
lahf
cmp
addr16
jmp
mov
mov
pop
dec
sti
inc
stos
xchg
dec
leave
jne
pop
xchg
jmp
inc
add
je
cmp
add
faddp
adc
retf
movs
add
jo
dec
das
mov
inc
push
fs
jo
je
mov
scas
dec
mov
and
mov
adc
push
aad
push
sub
pop
and
cmp
test
adc
pop
dec
push
sub
cdq
or
or
xchg
ret
xor
push
fist
cmp
retf
inc
sub
jg
pop
xor
jl
xchg
xor
xlat
sbb
dec
push
imul
stos
dec
sbb
ret
cdq
jno
xor
dec
push
lods
gs
shl
or
in
bound
inc
cmp
sbb
cdq
dec
mov
pop
push
sbb
inc
adc
rsm
out
mov
and
mov
adc
or
es
ret
in
test
mov
xchg
and
mov
mov
imul
cwde
jo
repz
cmps
jle
addr16
xor
xlat
lds
push
loopne
sub
inc
dec
cdq
test
mov
leave
xor
dec
cs
xchg
cs
dec
sbb
bswap
inc
std
jno
sti
js
mov
gs
inc
mov
inc
xchg
shr
inc
hlt
add
jo
xchg
mov
jp
rcl
xor
scas
dec
xor
xchg
add
fwait
push
scas
mov
int3
sub
xchg
call
jge
(bad)
mov
push
shl
out
cwde
cdq
call
fdiv
lock
pop
(bad)
cmc
push
push
xchg
xchg
and
inc
jmp
or
or
and
xor
fisub
pusha
jnp
out
cld
cwde
dec
push
mov
in
out
cmc
or
mov
mov
push
sub
sbb
in
int3
add
pop
js
jbe
rcr
pop
push
addr16
daa
(bad)
pop
xor
pop
mul
jecxz
sbb
in
mov
inc
inc
pop
pop
adc
(bad)
mov
push
test
add
iret
loope
jp
mov
xchg
xchg
ret
fs
jg
lea
lahf
aas
sahf
or
loop
pushf
cdq
stos
jne
sbb
fisubr
ds
cli
or
aaa
or
scas
test
lahf
add
stos
call
or
xor
faddp
add
fcmovne
sub
add
lahf
popa
aas
or
imul
fs
mov
fcomp
popa
(bad)
mov
inc
aad
adc
cdq
mov
or
dec
xchg
arpl
loop
and
call
jmp
mov
enter
movs
pop
fnstsw
(bad)
sbb
jns
das
pop
lock
stos
xchg
xor
inc
jbe
(bad)
scas
ins
jl
movs
mov
in
out
pop
loopne
pop
xchg
mov
inc
adc
mov
mov
loope
mov
gs
push
sbb
cmp
pop
mov
or
shr
les
fstp
pop
mov
loopne
fdiv
add
dec
and
test
test
int3
cld
adc
ins
mov
xor
test
inc
mov
bound
pop
aam
nop
arpl
push
stc
push
cmp
xchg
(bad)
and
jmp
jecxz
nop
and
pop
mov
mov
int
lea
(bad)
(bad)
rol
test
imul
mov
jecxz
call
push
aaa
mov
dec
jecxz
mov
inc
jne
mov
ja
fcom
dec
aaa
inc
xor
mov
es
enter
xchg
dec
in
pop
rol
es
and
aam
xor
test
ds
inc
xchg
cmp
div
cmp
popf
cli
iret
movs
movs
mov
jmp
adc
jmp
shl
pop
pop
dec
scas
sub
cdq
push
xlat
xlat
in
cli
jae
in
movs
into
mov
jno
call
cdq
pusha
xor
es
jne
add
or
jl
dec
in
adc
or
cmp
mov
push
aam
das
fsub
push
outs
mov
hlt
outs
cmp
lea
(bad)
stos
bound
idiv
out
jno
xor
pop
fst
nop
arpl
fs
or
aaa
sbb
pushf
push
jnp
jmp
aaa
mov
out
fcmove
mov
(bad)
mov
cmp
inc
dec
mov
inc
push
jno
cmps
int3
and
xchg
mov
sbb
std
mov
movs
lock
loop
mov
cmp
(bad)
pusha
test
dec
loope
shl
dec
cmps
mov
inc
xchg
scas
push
cmp
push
jmp
push
xchg
cmp
xor
rep
(bad)
xlat
mov
fdiv
sbb
mov
mov
sbb
push
xchg
mov
jle
xchg
fidivr
cmc
mov
in
xchg
jle
xchg
ins
pop
imul
gs
rol
jmp
cdq
in
sub
mov
mov
cmp
loope
mov
test
shr
adc
inc
pop
mov
into
inc
xor
xor
jns
std
inc
mov
sbb
sbb
xchg
push
imul
cmp
mov
push
call
jmp
std
mov
inc
mov
cmp
inc
jecxz
shr
mov
inc
sub
inc
test
loope
retf
nop
loopne
nop
and
popf
enter
imul
fyl2xp1
pop
mov
inc
pusha
repnz
pusha
cmp
div
loope
jae
sar
inc
xchg
out
(bad)
mov
addr16
adc
push
jmp
push
xor
jb
not
pop
dec
rol
repz
fld
cmc
(bad)
scas
cdq
pop
push
mov
int
aam
sub
clc
fstp
or
mov
push
inc
push
cld
cmovns
inc
(bad)
xor
adc
lock
sbb
or
jae
daa
lods
popf
test
rcl
push
push
push
push
mov
cmp
(bad)
pop
fldcw
cmp
mov
add
aas
xor
push
repz
add
pop
int
ins
aad
sbb
test
das
push
out
mov
aam
stc
(bad)
add
xor
sahf
jo
stos
jne
inc
mov
into
je
jne
xchg
mov
xor
inc
push
stos
call
fld
cmc
and
mov
push
aaa
push
pop
imul
loopne
aam
in
mov
add
fcmovb
sti
mov
adc
adc
shl
pop
inc
je
and
lock
inc
cmp
mov
mov
sub
xchg
xor
xor
out
push
pop
out
mov
out
jno
repnz
es
sub
popf
sbb
jns
(bad)
push
call
pop
(bad)
mov
sub
daa
push
cmp
mov
rcr
jmp
sbb
push
test
icebp
call
mov
lods
div
ins
push
sbb
xor
xor
ficomp
or
mov
push
push
mov
mov
push
or
jo
test
dec
outs
dec
int
lahf
mov
ror
je
jg
rcr
pop
sub
sub
mov
sub
cmc
mov
in
sbb
inc
xchg
ret
leave
pop
mov
push
inc
retf
inc
or
mov
dec
std
add
dec
shr
jo
outs
mov
and
int3
and
dec
add
jnp
aas
mov
dec
ret
cld
fdivr
inc
xchg
push
xlat
int3
jno
mov
jl
(bad)
lock
pop
(bad)
stc
aaa
out
jbe
jge
jmp
fwait
mov
retf
cmp
test
push
call
jecxz
dec
xor
mov
dec
(bad)
cmp
es
rcr
ja
xor
(bad)
xor
out
leave
pop
or
hlt
pushf
pop
jo
lock
jg
inc
sub
iret
mov
jmp
shr
rcr
cwde
and
adc
push
xor
pushf
xchg
lds
inc
mov
xchg
cmp
bound
fistp
mov
arpl
test
data16
inc
fwait
addr16
mov
out
(bad)
loopne
outs
imul
mov
addr16
movzx
sbb
repz
push
pop
sub
arpl
das
int
dec
pop
sub
xchg
daa
cmp
add
repz
mov
enter
sub
jecxz
ror
ret
or
dec
in
in
xor
rcr
out
test
movs
loope
popa
nop
jbe
clc
pop
sbb
dec
fdivr
inc
test
xor
lahf
jmp
outs
inc
pop
jmp
(bad)
sub
jns
mov
or
mov
xchg
int
retf
push
or
stos
ss
push
stc
ds
dec
cmp
nop
jns
pop
push
out
pop
mov
(bad)
cmps
xchg
ins
sub
mov
mov
mov
clc
add
dec
xchg
retf
mov
add
out
movs
jne
add
mov
adc
lahf
les
jmp
in
sbb
xchg
mov
cmp
pop
jp
and
mov
sbb
jno
js
stos
cmps
adc
ds
in
ds
outs
lods
sub
lods
imul
rcl
cmp
test
lock
add
mov
bound
fnstsw
or
repz
pop
ret
dec
iret
and
fdivr
mov
(bad)
hlt
push
ins
mov
jns
jle
push
jecxz
fs
pop
xchg
inc
aas
out
jne
call
sti
and
icebp
test
or
sti
ins
je
enter
mov
mov
out
nop
adc
mov
pop
xor
push
xchg
inc
outs
push
ret
(bad)
cmp
aas
pop
fmulp
mov
pop
push
scas
xchg
out
iret
jae
jg
cmp
in
frstor
inc
push
mov
lahf
fld
fist
add
bound
or
cld
shl
idiv
dec
xchg
pop
pop
je
mov
mov
push
jmp
push
clc
sti
mov
or
pop
inc
xchg
(bad)
fadd
mov
fist
xlat
push
dec
je
push
mov
xor
xor
or
dec
jp
jb
in
(bad)
or
cmp
repnz
xor
mov
jae
lods
xchg
mov
outs
dec
cld
pop
xchg
stos
or
scas
or
pusha
jle
scas
jl
retf
pushf
xor
and
push
sbb
xchg
dec
xor
cmp
mov
mov
jmp
mov
fistp
fcomp
aas
push
pusha
jg
push
sbb
lahf
into
mov
xor
sbb
sub
rol
js
cmp
jge
push
dec
ror
jmp
imul
inc
jg
int3
xor
(bad)
pop
lods
std
sbb
rcl
or
sbb
pusha
sbb
add
sub
stos
fs
cld
adc
(bad)
rcl
cmp
cmc
sbb
mov
dec
clc
add
mov
push
dec
add
movs
arpl
jl
and
arpl
stos
mov
(bad)
cmp
push
sub
xchg
add
stos
data16
call
pusha
rcl
inc
fisttp
or
es
push
jmp
jg
(bad)
stc
sub
rcl
mov
add
daa
repnz
mov
add
shl
mov
or
lods
fwait
lock
out
adc
out
test
inc
jb
sub
pusha
arpl
inc
test
jmp
(bad)
sti
test
add
aas
sbb
push
loop
mov
(bad)
jge
or
sub
aad
fiadd
dec
adc
add
outs
repz
or
shl
lock
sub
aam
pop
neg
ins
ret
bound
out
and
loope
mov
pop
jno
mov
outs
sub
mov
es
mov
xchg
enter
test
or
imul
pop
pushf
es
out
dec
aaa
mov
enter
push
mov
adc
and
and
sbb
sbb
cwde
cmp
cli
mov
cmps
add
mov
outs
jbe
and
lds
les
dec
repz
sahf
dec
xor
jae
mov
fist
pop
call
sbb
xchg
or
mov
pop
test
sub
out
cs
sub
xchg
shl
cmps
dec
adc
test
adc
pop
leave
pop
or
and
outs
cwde
sub
jle
sbb
rol
scas
mov
and
sub
add
jmp
xchg
imul
push
(bad)
popf
scas
mov
jl
push
adc
rol
add
iret
pop
and
push
ds
out
ja
repz
jl
mov
mov
call
inc
call
mov
(bad)
inc
mov
fcom
xchg
mov
push
jmp
ret
dec
std
(bad)
bound
or
aas
mov
jo
daa
imul
retf
cmp
(bad)
repnz
xchg
ins
xchg
stc
cs
pop
pop
cld
cmp
dec
popa
sbb
jo
sbb
call
xchg
mov
cmp
scas
aad
lods
ret
shl
jl
cs
dec
add
sub
cdq
in
test
mov
loopne
add
mov
out
sti
dec
jle
mov
xor
xlat
mov
jle
retf
inc
retf
movs
out
sub
dec
or
push
push
dec
dec
es
and
cwde
jnp
dec
lods
mov
rcl
xchg
sub
daa
xchg
inc
mov
inc
sti
sbb
lds
sbb
add
(bad)
stos
add
ror
iret
pushf
arpl
int3
test
and
(bad)
bound
imul
jl
mov
test
dec
jae
inc
push
xchg
into
scas
rcl
aaa
dec
fnstenv
(bad)
lds
dec
outs
enter
dec
push
or
pop
xchg
pop
pop
int
sub
mov
adc
popa
add
rol
call
adc
stc
dec
(bad)
movs
mov
mov
mov
cmps
add
icebp
out
cmp
push
mov
fst
add
cwde
xor
cmp
inc
(bad)
adc
push
cmp
adc
call
bound
hlt
aaa
(bad)
mov
sbb
pop
dec
push
add
dec
mov
lds
jmp
(bad)
push
cmc
fwait
ins
aas
jb
test
pop
push
es
mov
sub
imul
fsub
ror
cmp
call
add
(bad)
push
mov
mov
cmp
push
jo
test
sahf
cdq
es
mov
bound
out
adc
mov
loope
js
icebp
mov
nop
push
jmp
mov
push
and
jo
sahf
mov
pop
(bad)
mov
cdq
push
aad
sbb
mov
cld
sub
aas
out
pop
mov
test
sub
or
imul
stos
popa
shl
inc
std
or
mov
push
mov
fidiv
ins
xlat
xchg
and
push
int3
jl
mov
mov
xchg
adc
iret
sar
in
aam
mov
rcr
lods
push
fdivrp
shl
xor
ins
ds
dec
cmp
(bad)
cmps
(bad)
outs
aam
xor
mov
mov
nop
or
pop
add
dec
cmps
ins
ror
mov
fmul
inc
mov
xchg
fdiv
imul
jle
add
pop
(bad)
sti
sub
xchg
mov
mov
jmp
scas
push
(bad)
stc
cmps
fimul
jo
fwait
inc
or
cmpps
cwde
cmps
imul
add
push
dec
mov
call
je
add
add
clc
and
(bad)
and
sbb
add
dec
and
or
pop
cmp
inc
lods
push
sahf
add
dec
imul
in
mov
push
sub
imul
ret
sbb
out
and
les
xchg
stos
ret
mov
out
mov
pop
clc
jecxz
pop
xor
das
pop
mov
mov
push
sar
je
mov
fmul
mov
inc
aaa
popa
pop
jnp
lods
push
popa
inc
outs
test
push
cmp
shl
ja
imul
pop
mov
sub
mov
and
dec
fwait
(bad)
clc
cmp
les
mov
clc
fldenv
cmc
jae
bound
imul
and
iret
movs
add
iret
int3
jge
add
adc
lock
pop
aad
or
sbb
or
xor
push
pop
(bad)
add
aam
nop
cdq
pop
retf
repz
push
ror
rcl
xchg
loop
mov
mov
rcl
mov
out
cs
rol
pop
cmp
push
mov
fwait
jbe
mov
(bad)
fadd
aam
pop
adc
xlat
dec
cmps
xor
xor
stos
cmp
lds
sbb
dec
xchg
fisub
pop
data16
sbb
retf
mov
jnp
sub
and
aam
push
push
mov
xchg
pop
inc
in
xchg
cmp
pop
jmp
aas
add
ror
xchg
dec
push
cmp
and
imul
pusha
inc
gs
pop
rcl
loopne
fs
retf
xor
enter
dec
scas
hlt
push
sbb
add
push
or
daa
jl
lea
aaa
out
add
sbb
and
mov
inc
sub
repz
loop
cmc
jecxz
xor
test
xor
add
inc
gs
dec
imul
pop
inc
inc
in
fldenv
ss
sti
enter
rcr
cmp
cwde
inc
daa
and
xchg
push
ffreep
out
pop
adc
mov
sbb
jl
nop
pop
and
aam
int3
test
add
int3
cmp
outs
pop
gs
cwde
sbb
xor
enter
hlt
pop
(bad)
or
sub
popa
js
pop
into
retf
jo
aam
fs
inc
xchg
scas
mov
and
clc
push
ja
adc
loop
mov
cmp
mov
dec
push
hlt
mov
js
into
jmp
adc
out
sbb
lods
cli
push
mov
out
hlt
xchg
jo
inc
mov
ins
push
cmp
(bad)
push
aas
adc
lods
out
push
jge
cmp
mov
jns
jle
push
pop
mov
and
out
aad
test
repz
inc
ins
pop
xchg
push
pop
popa
pop
mov
and
das
out
jge
dec
stos
shr
sahf
(bad)
xor
inc
bound
(bad)
xchg
fisubr
inc
jmp
clc
xlat
lea
inc
pop
ins
aaa
push
mov
(bad)
adc
lahf
scas
fisttp
test
inc
fcmovnu
push
sbb
jnp
repz
out
pop
popa
fbstp
cwde
pop
cmps
jmp
add
test
ficomp
daa
mov
add
mov
or
add
ds
and
mov
xchg
pop
mov
pop
adc
mov
lods
xor
jg
xchg
xchg
pop
inc
(bad)
pop
push
inc
fdiv
or
sub
adc
inc
jg
lods
fdivr
or
and
ins
arpl
int
jne
test
xchg
scas
pusha
mov
pop
inc
mov
pavgw
mov
dec
mov
movs
add
push
jbe
cld
xchg
movs
sub
movs
push
sub
pusha
cld
imul
cmp
xor
(bad)
in
ja
jns
sti
mov
mov
dec
sti
das
jb
and
xchg
push
(bad)
sbb
mov
sbb
ret
je
ror
add
xor
jns
xor
mov
stc
nop
repnz
sub
fidivr
mov
xor
gs
mov
inc
fcmove
xchg
pop
rcr
inc
lahf
xor
mov
xor
sar
ror
dec
std
ins
icebp
mov
psrad
aad
push
add
sbb
adc
imul
push
imul
adc
movs
mov
sub
push
fdivrp
mov
mov
test
xchg
mov
aaa
call
jp
mov
stos
xchg
pop
cmp
adc
add
adc
ss
hlt
add
out
jg
jb
and
popa
or
(bad)
and
sub
mov
and
cmp
daa
pop
imul
pop
adc
mov
pop
fistp
stc
inc
out
div
fs
hlt
cmp
(bad)
mov
adc
jg
or
mov
in
jo
inc
mov
movs
dec
pop
ror
xor
mov
sub
ins
call
jnp
xor
dec
lods
call
lods
test
int
adc
inc
sbb
mov
aam
push
cdq
add
fnstsw
arpl
mov
call
outs
addr16
sub
xchg
repz
in
push
das
fild
xchg
shl
aad
das
hlt
neg
fwait
mov
or
movs
jae
in
inc
std
ss
inc
push
xchg
das
mov
pop
rcl
cli
outs
inc
push
and
test
test
xchg
fisubr
call
pop
cmps
push
out
cmp
in
and
jb
fmulp
xchg
pop
inc
popa
cli
mov
je
or
mov
cmp
pop
dec
xor
test
das
sub
or
cmp
iret
or
sub
pop
test
push
jge
xor
loop
(bad)
dec
neg
jns
xchg
pop
cmp
cwde
jg
test
int
push
or
push
fidivr
and
xor
xor
cmp
stos
adc
inc
add
pop
out
neg
and
cmp
call
sbb
xor
loope
sub
dec
xchg
repz
jns
inc
aam
mov
lock
add
aaa
jbe
nop
imul
jecxz
sub
ss
adc
and
lods
and
mov
loopne
mov
push
shr
cmp
cmp
cs
xchg
sbb
popa
mov
mov
or
int
xchg
add
(bad)
lds
or
sub
dec
fdiv
dec
sub
adc
(bad)
mov
pushf
pop
jae
std
push
sub
mov
mov
and
pushf
push
sar
repz
pop
aas
sub
sti
inc
mulps
(bad)
sub
push
ret
adc
das
cmp
test
cmp
xchg
stos
mul
leave
sub
jge
xor
push
sbb
pop
add
xchg
dec
jns
jb
pushf
pop
mov
fnsave
xchg
and
sub
pop
outs
out
jb
es
stos
cmp
sbb
stos
std
pop
rcr
fisubr
(bad)
ss
shl
mov
fwait
push
adc
push
and
sub
sbb
jae
(bad)
lock
or
movs
ficom
jno
out
lock
shr
aad
fs
in
or
neg
mov
fwait
push
(bad)
or
jle
mov
sub
nop
dec
dec
jae
mov
clc
sub
mov
movs
pushf
call
aam
xchg
add
xchg
repnz
ins
or
push
ss
lods
adc
lea
sbb
(bad)
jmp
cmc
push
clc
mov
mov
sti
lods
js
ins
in
cmp
or
xchg
cmp
in
mov
mov
pop
cs
mov
inc
xchg
test
es
cmps
push
adc
dec
dec
add
xor
(bad)
jmp
dec
mov
fcmovnu
fistp
in
or
popa
loop
inc
mul
push
sub
xor
mov
push
test
mov
leave
jae
xor
cmp
scas
push
sbb
dec
fidivr
lea
and
push
mov
inc
mov
dec
xchg
mov
ret
ins
mov
retf
pop
and
clc
mov
fisubr
(bad)
into
push
aad
imul
lea
ret
and
mov
icebp
jle
jo
mov
fadd
ror
leavew
scas
fld
jb
ror
adc
jle
scas
shr
pop
xchg
mov
retf
sbb
mov
out
outs
lods
cmp
push
cmc
call
repnz
xchg
add
inc
xchg
jmp
or
and
lods
sub
sar
sbb
sar
in
outs
or
xlat
stos
or
dec
push
add
or
push
mov
lahf
mov
sub
sub
jb
popa
ror
arpl
mov
(bad)
cmp
ret
mov
or
lds
pop
push
rcl
xor
mov
jge
sbb
dec
mov
push
pop
fnstenv
test
fcomp
jp
test
inc
cmp
cmps
lahf
test
adc
imul
inc
mov
jns
loope
movs
aas
(bad)
retf
cwde
push
mov
aas
adc
xor
jno
fild
cmp
mov
test
jecxz
push
jl
push
and
or
mov
sar
shl
pop
ret
cmp
mov
pop
adc
and
sbb
fdiv
add
sub
popf
nop
mov
push
scas
mov
call
in
outs
lds
lods
rcr
mov
mov
adc
push
jne
int3
loope
pop
popa
stos
or
sbb
test
stos
jmp
push
jp
out
xor
(bad)
xor
or
sub
js
and
cmp
out
cmp
sbb
js
cwde
xor
mov
dec
in
fnstsw
out
stc
out
xchg
ret
mov
sub
cmp
mov
shr
test
mov
clc
(bad)
pop
adc
out
xlat
mov
fisttp
dec
adc
or
sub
js
retf
ins
aas
nop
std
out
and
jno
sub
sub
call
jmp
ss
mov
add
sbb
cld
or
add
or
repz
out
push
or
sub
(bad)
cmp
retf
retf
pop
xchg
push
das
sti
enter
movs
jno
mov
es
jnp
ret
xchg
outs
or
leave
mov
jb
pop
xor
data16
arpl
fldcw
jns
mul
xor
ss
xchg
or
enter
and
mov
sbb
push
mov
cmp
cwde
test
inc
leave
jae
call
(bad)
ds
dec
dec
jg
sub
mov
pushf
mov
jb
aas
mov
idiv
arpl
stos
lods
shr
cmp
int3
pop
mov
dec
push
and
ror
icebp
push
out
sti
jnp
aad
cmps
nop
and
sub
adc
xchg
clc
lods
ja
movs
test
pop
jg
xchg
les
daa
or
inc
sub
dec
sub
test
cmp
sbb
sub
rcl
dec
mov
scas
pop
das
test
and
mov
retf
pushf
in
pop
mov
aam
test
popf
pop
push
fwait
inc
icebp
ins
mov
ja
cmp
add
out
mov
xchg
cmps
push
xor
cmp
leave
cwde
std
imul
ror
mov
out
add
adc
imul
sahf
retf
sub
cdq
movs
(bad)
cmc
adc
nop
fs
into
scas
lea
test
sub
aas
iret
stc
stc
fcmovne
push
push
mov
loope
ins
add
mov
push
inc
jnp
std
ss
pop
push
inc
sub
call
jle
dec
add
mov
shl
mov
sbb
out
sub
dec
rcl
pop
adc
sub
push
pop
int
cdq
adc
mov
pop
cmp
xchg
push
ja
hlt
lea
inc
pushf
mov
adc
mov
jns
dec
xchg
int
or
ds
xor
mov
mov
push
test
mov
ror
push
pushf
fisttp
fistp
inc
fdiv
mov
push
mov
dec
in
lods
sbb
dec
int3
push
sub
add
js
in
inc
test
lahf
cs
stc
adc
ret
iret
int
or
and
sbb
cli
icebp
aam
xchg
mov
psrlw
imul
adc
cli
outs
mov
add
leave
daa
and
sub
aaa
push
inc
aaa
push
into
stc
mov
sahf
or
imul
fadd
jo
push
aam
mov
and
dec
xchg
addr16
push
scas
sbb
and
ds
push
cmc
loope
cmp
rcl
ins
jmp
fwait
adc
fcmovu
jle
push
lods
cmp
leave
ins
xor
mov
inc
jno
mov
adc
shl
fidiv
xchg
sub
bound
inc
and
push
adc
sbb
sub
mov
jecxz
adc
xchg
or
leave
stos
lea
loope
pop
adc
pop
es
ja
(bad)
in
dec
jb
pop
pop
std
mov
test
lahf
aad
lods
ins
or
dec
mov
jmp
addr16
xchg
cmp
ins
jg
int
or
pop
loop
rcr
sbb
mov
inc
cli
cmc
(bad)
repnz
(bad)
(bad)
and
xchg
cmp
lods
std
imul
bound
rol
aad
mov
xor
pop
adc
hlt
rcl
mov
std
push
nop
mov
inc
ss
enter
cmps
cmp
mov
fstp
cmp
imul
mov
add
je
loop
pop
mov
in
retf
push
ficomp
lock
adc
mov
or
lods
adc
cmps
mov
out
aam
scas
and
adc
sub
and
retf
loopne
repz
ja
(bad)
mov
cdq
cmps
ins
popa
adc
jno
xchg
xchg
in
imul
(bad)
jle
das
pop
or
bound
lahf
(bad)
out
sbb
repz
das
aaa
sar
inc
mov
pop
je
mov
jno
pop
out
mov
jns
push
push
cmps
out
push
and
xor
push
sbb
in
cmps
dec
add
pop
or
ins
add
mov
and
jbe
dec
xchg
sub
call
sbb
jbe
ficom
jmp
ds
mov
mov
and
daa
pop
std
loopne
adc
imul
imul
ds
push
int3
leave
and
or
cs
inc
outs
mov
jmp
ds
aas
jle
jo
cs
call
mov
enter
mov
outs
push
jl
jg
jne
lds
add
push
jmp
cli
dec
addr16
scas
ret
or
sahf
call
adc
fidivr
push
sbb
adc
cmp
(bad)
fmul
cmps
dec
ins
jg
adc
dec
mov
fcmove
xlat
inc
mov
xor
sbb
outs
add
cmc
jg
adc
jg
push
shld
test
push
fcomp
ficomp
movs
mov
js
arpl
and
sub
xchg
mov
mov
mov
inc
fisttp
shl
xor
sub
and
inc
fcomp
ins
and
(bad)
ror
les
jge
sub
rol
and
sbb
xor
add
mov
mov
or
ret
xchg
sbb
shr
sub
dec
call
sub
and
popf
jl
daa
jnp
inc
xor
mov
sub
in
retf
ret
cmps
xchg
sti
data16
out
xchg
mov
ins
scas
and
add
dec
jmp
cmp
les
pop
ins
and
cmps
fld
stc
pushf
ds
mov
pop
mov
mov
adc
lock
rcl
push
test
arpl
out
pop
inc
addps
add
lods
dec
(bad)
movs
nop
and
sbb
aas
cmps
loop
push
push
out
imul
leave
nop
rcr
sub
pop
lock
mov
pop
xchg
(bad)
mov
imul
das
pop
mov
lahf
lea
xchg
adc
mov
dec
sets
gs
cmp
call
fstp
stos
xor
mov
popa
sar
or
(bad)
sbb
stc
out
xchg
stc
cmps
inc
jbe
adc
inc
idiv
shl
sbb
jae
and
arpl
aam
aaa
aad
in
bound
fadd
neg
inc
mov
and
mov
test
fsub
sub
fild
scas
movs
fidiv
imul
or
xor
xor
mov
or
add
inc
stos
cmp
or
mov
es
mov
sub
dec
xchg
stos
or
xor
fsubp
jnp
lea
jge
push
jp
xchg
sbb
mov
ret
repnz
stos
mov
mov
je
push
or
push
inc
sub
mov
ins
adc
jne
sbb
ds
mov
jle
push
aas
std
loopne
call
aas
jl
push
and
jge
shl
loop
inc
adc
inc
loop
fcomp
or
sti
in
sbb
lds
loope
xchg
sub
nop
fistp
or
jae
inc
xor
aam
dec
or
jge
in
add
sub
mov
(bad)
cli
outs
imul
lock
and
push
adc
sbb
mov
push
ds
pop
fist
loopne
loope
test
hlt
mov
shl
mov
repz
sar
push
cmc
in
dec
or
les
push
pusha
sub
fcom
mov
mov
mov
in
mov
fadd
sbb
outs
or
mov
loop
mov
ss
ror
ins
mov
jns
or
sbb
pushf
mov
adc
leave
repnz
mov
cld
mov
enter
add
sbb
inc
loopne
adc
mov
xor
jmp
cli
movs
imul
repnz
push
aaa
test
mov
hlt
ret
(bad)
stc
jnp
inc
rol
mov
repz
xchg
sbb
pop
mov
jnp
daa
call
cmp
sahf
pop
xlat
(bad)
(bad)
jbe
sbb
mov
(bad)
jle
or
xor
mov
jnp
xor
data16
dec
retf
ret
cmp
into
pop
in
adc
in
push
sub
or
scas
pop
inc
enter
inc
push
int3
pop
xchg
xlat
mov
loopne
push
pop
sar
daa
adc
push
pop
sbb
iret
pop
stos
push
xchg
dec
or
and
and
adc
ja
call
add
aad
xchg
mov
popa
or
and
add
ss
bound
inc
cmp
adc
mov
mov
mov
pop
and
nop
and
sbb
pushf
enter
xor
leave
es
push
adc
cmp
in
data16
repnz
imul
out
enter
fnstsw
scas
and
pop
pusha
cld
loope
pop
imul
inc
shl
push
mov
and
cmc
shr
icebp
test
ficomp
or
arpl
add
add
mov
fstp
cdq
mov
adc
enter
in
sbb
inc
pop
add
cs
into
dec
xor
cmp
or
dec
ret
ins
jp
push
lock
sti
jle
(bad)
push
mov
test
mov
inc
pop
iret
clc
and
jne
cmp
mov
xor
out
dec
aaa
and
and
scas
mov
xor
xor
popa
dec
inc
ins
jnp
mov
mov
shl
xchg
hlt
idiv
pop
push
sub
mov
sub
cmps
movs
add
lea
mov
lds
or
add
push
iret
or
ins
add
jmp
sbb
push
jle
data16
pusha
jge
sahf
jmp
jg
jnp
imul
jmp
gs
idiv
or
dec
scas
jp
daa
stos
in
out
rcr
xchg
cli
ja
push
test
mov
adc
sub
dec
xchg
enter
fsubp
cmps
cld
shl
adc
push
in
movs
das
xchg
or
push
cld
int
mov
adc
rol
or
rcr
daa
out
cmc
jb
inc
cwde
stos
gs
xor
or
xor
arpl
sti
jnp
adc
cmp
adc
loop
bound
inc
inc
outs
add
stc
or
outs
and
shl
inc
mov
add
fs
push
add
adc
sub
push
call
dec
xor
fwait
(bad)
out
mov
jb
mul
add
jge
xlat
scas
dec
pop
and
pop
and
sub
push
call
mov
test
pusha
xlat
jbe
daa
or
ins
std
pop
inc
cld
mov
nop
into
and
out
outs
jle
(bad)
shl
jle
rcl
cmp
mov
pop
aam
mov
(bad)
push
out
mov
or
and
fucomp
in
ins
inc
push
dec
ins
or
daa
push
xor
rcl
push
int
sahf
(bad)
jnp
imul
cmp
jne
shl
push
sti
inc
int
mov
or
sbb
sar
mov
xor
(bad)
call
xchg
arpl
jle
into
ja
add
jno
xor
pop
xor
fs
or
adc
push
int3
test
sbb
cmp
sbb
sub
data16
mov
lods
neg
push
(bad)
push
ins
sub
jmp
jne
in
stos
cmps
fwait
int
jns
neg
xchg
sub
push
lods
outs
fs
mov
add
hlt
xchg
mov
ja
iret
dec
inc
and
add
leave
or
outs
mov
jb
adc
rdtsc
add
mov
mov
loopne
js
aas
push
adc
mov
jae
lds
mov
push
arpl
push
push
and
or
in
lds
push
cmp
sub
jo
sbb
cwde
scas
xchg
mov
mov
mov
push
lds
scas
xchg
push
sub
add
mov
inc
(bad)
aas
loope
cld
int3
xlat
sub
shl
movs
clc
out
xor
sbb
sub
pusha
jecxz
sahf
aam
mov
outs
mov
sbb
fmul
mov
sbb
push
scas
adc
int3
pop
jbe
push
adc
adc
pop
out
clc
ret
fs
dec
out
gs
sub
and
xchg
jbe
xor
xor
mov
fcom
ror
xor
cmp
xchg
inc
in
ins
stc
arpl
mov
fcomp
adc
sbb
dec
pop
retf
adc
and
sub
retf
sub
jno
in
test
hlt
int3
pop
mov
pop
sti
or
cdq
bound
or
mov
fidivr
iret
repnz
leave
mov
xor
test
jne
lock
ror
test
dec
sbb
mov
shl
in
mov
std
das
fwait
cmps
dec
xchg
sbb
mov
push
clc
xchg
jae
call
in
add
push
(bad)
stc
fdivr
jle
xor
fistp
popf
adc
jl
cmova
sti
cmps
sub
pop
adc
test
pusha
fs
sbb
dec
(bad)
lock
push
pop
add
or
fmulp
pop
cmp
and
pop
movs
inc
mov
rcl
xor
jns
mov
mov
xchg
cmc
xchg
sub
mov
sbb
jnp
and
mov
adc
pop
test
mov
xchg
mov
ins
(bad)
mov
addr16
in
push
xlat
xlat
sbb
cwde
inc
and
jl
xchg
aad
cwde
rcl
jmp
xchg
(bad)
dec
jo
push
xchg
sub
inc
fidivr
ror
jl
loopne
ror
out
push
push
mov
int
mov
dec
nop
out
arpl
lods
push
sub
jle
ror
hlt
or
inc
shl
pop
xor
ret
jmp
mov
mov
outs
cmps
pop
sbb
test
xchg
and
aas
dec
sub
fiadd
(bad)
sbb
movs
push
xchg
pushf
jmp
sub
add
sbb
stos
sub
xchg
dec
retf
cli
cmp
iret
or
xchg
retf
mov
adc
sbb
retf
iret
mov
ret
mov
mov
and
and
in
ins
movs
mov
pop
dec
clc
add
jge
add
push
mov
push
cmp
dec
and
pop
ds
mov
out
xchg
cli
outs
fsubr
xchg
add
les
imul
add
data16
call
add
pop
sbb
inc
mov
add
mov
movaps
and
js
xor
stos
leave
jl
arpl
popf
arpl
stos
jae
ret
and
sbb
xchg
xchg
lahf
cwde
mov
adc
test
fist
data16
ja
test
int
adc
sti
dec
xchg
sbb
sub
xchg
push
out
push
and
mov
sbb
sbb
pop
mov
scas
addr16
out
jns
pop
test
les
jne
inc
shl
mov
lods
ja
test
pop
fsubr
sbb
in
pop
adc
inc
cmp
jecxz
inc
imul
in
enter
pop
mov
(bad)
das
outs
cmc
fmul
jbe
jp
adc
das
call
punpcklbw
mov
adc
iret
xchg
push
loop
jle
fstp
loope
das
out
inc
mov
jl
jp
call
jb
daa
cmps
xor
(bad)
or
dec
(bad)
xchg
test
sahf
call
dec
sub
xor
add
jbe
fiadd
push
sbb
call
lock
add
add
repnz
cmp
loope
mov
arpl
fwait
jge
xchg
dec
in
mov
lods
cwde
aad
outs
test
cmp
aas
sbb
(bad)
mov
jge
fistp
sbb
int3
jmp
mov
xchg
and
sahf
ror
mov
jb
inc
sbb
and
repnz
add
mov
out
ret
(bad)
lock
shl
sbb
and
sbb
push
shl
iret
adc
dec
das
int3
scas
pusha
outs
(bad)
jecxz
and
or
mov
dec
sub
adc
push
shl
mov
xor
mov
loop
test
outs
sub
bound
dec
ss
or
push
ins
js
adc
sub
xchg
pop
xor
ret
cmps
mov
pop
scas
mov
fnstsw
push
xchg
dec
jno
sbb
dec
jl
jmp
std
popf
push
(bad)
imul
adc
mov
mov
cmp
ins
jp
cli
xchg
outs
cwde
push
dec
add
and
sti
dec
dec
cmp
add
push
cdq
adc
lock
out
pop
aaa
out
leave
loopne
inc
cmps
inc
xor
push
and
add
jb
push
loop
sbb
mov
hlt
into
lock
js
(bad)
(bad)
cmps
out
add
push
pop
or
mov
ds
ficom
cmp
mov
mov
ins
aad
stc
or
jg
or
jne
sbb
pop
aas
sbb
xchg
int
mov
or
dec
jle
leave
mov
leave
cmp
inc
mov
xchg
stc
sbb
outs
retf
and
scas
ud2
arpl
aam
mov
js
mov
call
lods
mov
ds
ins
stos
dec
repnz
ret
lea
test
inc
and
and
aaa
sahf
jmp
mov
push
and
ror
pop
sub
fld
rcl
mov
inc
repnz
out
pop
jne
sbb
mov
(bad)
fsubr
jl
mov
pop
fwait
sbb
inc
out
add
pop
sti
fld
dec
cdq
ret
and
ss
adc
xor
cwde
and
cmc
xchg
in
push
not
sub
test
out
jo
popf
add
xor
jl
xor
fld
cmp
mov
shl
xchg
int
call
add
jne
or
cmp
in
xchg
pop
push
leave
pop
int3
add
mov
pop
jo
xchg
sub
xor
or
(bad)
adc
int
xchg
(bad)
retf
nop
and
dec
lods
xchg
mov
jns
jecxz
inc
xchg
inc
imul
push
idiv
ds
push
js
mov
pop
xchg
push
dec
jnp
iret
sub
xchg
bound
jne
fstp
rsqrtps
xchg
push
and
or
add
mov
mov
cmps
mov
inc
jge
and
in
in
jmp
xchg
stos
xchg
or
(bad)
sbb
mov
adc
jmp
scas
cmps
mov
out
pop
rcr
xchg
add
or
jle
sar
retf
addr16
mov
xor
cmp
cs
mov
push
cmp
in
mov
loop
fsubr
inc
pop
sti
in
xor
scas
pushf
movs
cs
movs
or
test
sbb
test
push
or
cdq
mov
addr16
hlt
xor
repnz
das
inc
sub
xchg
out
in
push
loopne
mov
push
movs
inc
outs
loopne
push
std
mov
mov
mov
ins
mov
pop
aaa
adc
fs
(bad)
pop
hlt
out
mov
fcom
sbb
shl
aas
xchg
out
mov
push
push
or
ret
jnp
ds
pop
xchg
fwait
fs
mov
imul
mov
in
mov
lods
sbb
inc
pop
jb
shr
mov
js
xchg
hlt
outs
(bad)
fild
jnp
aam
bound
cmp
cmp
fwait
ret
adc
ror
xor
imul
cmps
cmc
retf
shr
pop
ds
movs
push
sub
adc
push
jns
xor
(bad)
rcl
aas
test
sar
iret
pop
outs
dec
inc
jbe
lods
(bad)
jmp
mov
rcr
cmp
arpl
les
jns
lods
fmul
ins
fld
scas
mov
mov
jno
stos
sbb
mov
addr16
(bad)
mov
cmp
mov
inc
push
lds
add
test
jnp
std
nop
cmps
push
sbb
test
push
push
adc
jecxz
dec
pop
xor
icebp
sbb
adc
daa
xor
stos
sbb
sbb
int3
(bad)
dec
test
mov
or
popf
xchg
fdiv
pop
mov
cs
icebp
xchg
retf
push
loop
dec
cld
pop
push
inc
mov
ja
adc
sub
xchg
mov
and
mov
aad
and
dec
lods
xor
mov
pop
or
dec
ja
push
in
xor
push
les
jp
mov
jl
(bad)
sub
jecxz
pushf
push
xchg
mov
xor
loop
(bad)
int
ins
pop
xor
fistp
mov
jmp
test
cmp
mov
mov
gs
jg
jne
test
movs
inc
push
inc
(bad)
fs
dec
sub
adc
imul
sbb
cmp
jnp
cmc
pushf
or
ins
or
loopne
lods
loope
or
jns
das
in
mov
ins
cmp
jecxz
or
and
xchg
in
push
xor
fdivr
mov
addr16
fwait
sahf
sub
rcl
imul
cmps
push
icebp
push
sbb
xor
adc
or
mov
shl
aas
je
push
and
inc
or
in
cmp
xor
rol
jmp
rcl
aad
sbb
in
mov
add
pushf
jle
sub
scas
push
(bad)
push
sbb
jmp
std
arpl
dec
enter
jmp
mov
(bad)
arpl
(bad)
aas
idiv
jae
imul
retf
ds
jmp
push
jae
sahf
imul
retf
push
movs
inc
enter
cmps
fist
jo
cmp
jb
lds
dec
pop
push
pop
cmps
jns
and
out
int3
fcom
cdq
add
inc
mov
and
adc
inc
adc
pop
fldenv
jno
sti
stos
cli
clc
out
test
xchg
and
clc
ins
scas
lods
jmp
loopne
mov
xchg
dec
adc
neg
test
xchg
pop
push
mov
out
jp
cli
aad
inc
loope
loop
push
cmps
push
mov
out
and
add
les
pop
pop
dec
cmp
jns
mov
cmp
mov
popa
sti
ficom
xchg
outs
nop
jmp
xchg
test
add
nop
bound
dec
pop
cld
into
sub
xlat
mov
push
(bad)
jns
test
ja
mov
and
add
mov
xchg
push
js
int
sub
lds
arpl
inc
or
xor
cmp
xor
sar
outs
cmp
dec
mov
lds
lea
lock
adc
mov
and
enter
adc
sbb
add
mov
xor
mov
or
mov
pop
outs
or
push
cmps
push
mov
adc
js
jne
add
jge
pop
jmp
mov
inc
popa
call
outs
das
mov
lods
xor
dec
into
sbb
jge
xchg
cli
adc
dec
xchg
lea
push
hlt
dec
inc
mov
loope
out
push
dec
aas
shl
sbb
mov
xor
daa
push
or
ror
or
and
int
fsub
mov
mov
sub
lock
ds
repz
mov
loopne
pop
jmp
aam
aam
and
add
ds
pop
clc
(bad)
mov
or
dec
fiadd
xchg
jle
mov
pop
aam
cld
push
push
sahf
mov
pop
or
in
mov
mov
xor
xchg
jle
arpl
dec
mov
aad
or
add
outs
loop
and
stos
jnp
ret
(bad)
fcomi
mov
cmp
enter
pop
jbe
arpl
or
mov
data16
retf
jae
shl
(bad)
outs
pushf
imul
mov
movs
dec
and
adc
pop
pop
jmp
pop
sti
cli
imul
jmp
hlt
call
pcmpeqw
lods
cdq
jnp
jge
and
fnstenv
sbb
pop
adc
xor
cmp
or
stos
fwait
inc
and
(bad)
mov
inc
ins
mov
mov
(bad)
shr
mov
xor
cmp
les
mov
or
sub
je
leave
mov
sbb
mov
mov
aam
sbb
push
cwde
cmps
inc
or
mov
inc
xchg
mov
in
scas
rol
cmc
push
pop
ret
idiv
mov
ror
retf
shr
sar
mov
xchg
or
mov
in
psubb
pop
adc
push
mov
fstp
xor
jge
mov
jnp
jne
adc
ficomp
pop
push
and
repnz
gs
jbe
loope
test
adc
xor
jge
adc
jmp
mov
adc
inc
in
(bad)
movs
scas
es
outs
or
je
pop
push
or
dec
adc
push
xchg
jmp
rcl
rol
scas
dec
ds
sti
jae
or
ja
int3
js
sbb
leave
sbb
push
aam
stos
cmp
test
pop
repnz
pop
xchg
(bad)
int
dec
xchg
int
push
mov
mov
leave
(bad)
mov
dec
sbb
push
pop
push
leave
and
into
cmp
add
sbb
aad
and
adc
mov
pushf
mov
dec
jge
ret
and
clc
xor
js
mov
jmp
mov
daa
mov
shl
jge
jns
cmp
or
fmul
dec
hlt
rol
sbb
jle
test
ja
fdiv
nop
and
movs
daa
sbb
(bad)
(bad)
jo
js
ss
call
in
lods
mov
mov
aaa
adc
inc
enter
pusha
out
xchg
mov
and
xlat
adc
mov
jmp
(bad)
lahf
push
xor
jbe
inc
scas
paddusw
jmp
imul
fldenv
in
(bad)
xor
mov
sub
cmp
xor
cld
arpl
stos
call
adc
jns
hlt
je
adc
icebp
xor
adc
cwde
mov
fist
ror
test
lea
cmc
lods
mov
adc
fucomp
inc
mov
(bad)
cmp
push
mov
mov
fimul
retf
jmp
pop
push
enter
ficom
xchg
push
sub
ja
mov
ds
mov
mov
pop
icebp
fwait
mov
call
xor
push
sbb
jno
fimul
mov
push
sbb
or
aas
loop
jbe
adc
cmps
or
popa
pushf
jge
scas
das
(bad)
out
cmps
cmc
fdiv
add
pusha
pop
xor
mov
fiadd
jns
data16
pop
(bad)
jmp
mov
jb
pop
jecxz
test
jns
and
mov
loopne
sbb
xchg
pushf
xchg
and
ret
or
(bad)
dec
jmp
dec
push
jo
sub
push
cmps
sub
xchg
xchg
push
aas
pop
dec
or
hlt
pop
inc
hlt
mov
sbb
push
call
jmp
sub
rcr
sub
in
xor
jecxz
and
jbe
popa
pusha
dec
imul
mov
cli
cwde
jnp
cwde
pop
add
adc
jae
or
xor
inc
and
jg
dec
fmul
mov
add
ja
out
outs
mov
mov
repnz
cmp
jo
inc
adc
or
mov
call
fwait
add
std
pop
xchg
mov
dec
push
cmp
xchg
xor
(bad)
pop
movs
outs
or
dec
retf
ret
inc
add
enter
sahf
aam
iret
rcl
in
or
retf
daa
push
ror
cs
and
inc
pop
std
sti
inc
ret
retf
sbb
pop
xor
scas
jge
inc
sbb
mov
and
dec
out
lods
jno
adc
push
jo
popf
add
jae
fcmovnb
fldcw
adc
mov
(bad)
movs
mov
mov
pop
jge
int3
mov
cmp
fsubr
cs
pop
or
cwde
lods
std
and
cdq
outs
jo
push
mov
cwde
dec
aaa
stc
dec
sbb
popf
(bad)
(bad)
mov
mov
rcr
test
or
pop
jno
mov
loopne
in
sub
retf
test
sbb
push
push
in
inc
(bad)
push
mov
pop
int
pop
sbb
sbb
std
je
inc
mov
imul
sbb
imul
in
jns
mov
mov
(bad)
xor
sub
in
repnz
add
jae
cmp
and
rcl
push
aas
jbe
js
xchg
push
stos
imul
sti
mov
xchg
pop
xor
fmul
add
es
mov
cmp
cmp
jg
push
push
push
(bad)
jge
std
repnz
outs
sub
pop
dec
movs
push
inc
push
and
cmp
mov
inc
cmp
mov
fisubr
aam
push
jae
jno
outs
mov
sbb
and
pop
sbb
lahf
cmp
loop
loop
js
loope
xchg
inc
adc
lea
into
or
in
pop
dec
scas
sar
movs
and
fiadd
ins
push
and
lea
dec
sub
(bad)
xchg
cmps
int3
sub
adc
addr16
lods
mov
fcomp
push
dec
sub
hlt
das
dec
popa
stc
imul
(bad)
cmps
push
mov
iret
sub
sbb
aad
(bad)
(bad)
(bad)
xor
out
ins
scas
mov
out
or
rcr
popf
pop
sbb
cmp
les
lea
test
(bad)
mov
hlt
repz
icebp
loope
dec
loopne
(bad)
xor
outs
ss
sub
mov
and
stos
mov
add
ret
inc
mov
pop
lahf
xor
jle
xchg
adc
inc
js
inc
dec
pop
out
xchg
adc
shl
jo
js
jmp
inc
cmps
and
ds
jp
or
shl
mov
clc
shl
jg
sub
sub
push
xchg
fwait
sbb
stos
(bad)
jge
push
mov
cmp
and
push
mov
iret
test
ret
outs
and
repz
cmp
inc
and
inc
test
test
cdq
movs
ds
xor
sbb
out
stos
cmp
mov
stc
pop
jns
mov
cwde
pop
cs
in
mov
sbb
in
jno
jnp
loop
dec
lods
push
mul
retf
loop
lods
sbb
push
jae
cld
inc
mov
retf
mov
and
loop
dec
out
jmp
jns
inc
ins
jb
stos
cs
int
in
xchg
pop
cwde
ins
push
xor
mov
jnp
call
jnp
call
retf
jns
retf
adc
dec
sub
out
repz
pop
ficom
clc
mov
jmp
das
out
adc
out
push
dec
or
pop
mov
jge
dec
xor
je
mov
arpl
in
ret
mov
xor
js
sahf
arpl
xor
test
sbb
pop
adc
xor
fcmovb
sub
int
addr16
aad
lds
mov
ins
daa
and
xor
sub
out
push
(bad)
clc
scas
jbe
xchg
aas
int3
lea
stos
mov
bound
lods
xchg
dec
(bad)
imul
rcl
shl
mov
test
(bad)
rcr
inc
mov
push
rcr
jmp
lods
es
fsub
fwait
adc
push
inc
idiv
pop
or
aam
test
pop
adc
jo
mov
cmc
or
call
bound
retf
mov
nop
cmp
or
xchg
call
and
pushf
mov
ror
cli
add
jns
xchg
sub
pop
sub
mov
and
mov
not
inc
outs
xchg
nop
dec
jmp
arpl
fxam
in
imul
cmp
pop
out
mov
shl
add
inc
xlat
jbe
mov
shl
gs
jae
pop
js
or
cdq
(bad)
dec
fist
xchg
or
icebp
and
in
mov
clc
add
cmp
inc
cmp
pop
pop
jae
pusha
mov
pusha
cs
push
and
lds
iret
fisubr
pop
sti
pop
rol
es
push
pop
or
push
popa
ins
pop
xchg
imul
fwait
dec
dec
ins
shl
fiadd
div
pop
dec
cmp
add
retf
lods
fcom
loop
(bad)
data16
shl
call
pop
ja
cld
dec
clc
sub
xchg
adc
sbb
lods
xor
addr16
int
pop
xor
inc
pop
mov
sbb
stos
test
jae
loope
mov
and
add
adc
xor
sbb
adc
mov
cmp
cmps
jmp
xchg
into
daa
fs
jbe
mov
mov
inc
mov
call
rcr
sub
push
scas
cmps
popf
fstp
pop
inc
inc
sbb
rcr
push
test
dec
stc
ins
and
push
popa
jmp
add
in
mov
loopne
fbld
iret
push
xor
mov
xor
add
jbe
ja
(bad)
sub
mov
cmps
sahf
(bad)
addr16
add
pop
xchg
(bad)
(bad)
xchg
jns
jmp
imul
mov
enter
ins
mov
push
fbstp
mov
les
nop
mov
add
leave
dec
jecxz
mov
pop
cwde
xor
aad
js
test
jbe
(bad)
repz
or
inc
lock
cld
lods
or
add
mov
imul
jno
jns
lods
leave
dec
jae
sbb
sbb
xor
fwait
test
in
pop
cmps
cmp
jp
cmp
lahf
sub
pop
aaa
movs
add
arpl
mov
and
adc
aad
or
es
fdivr
jae
ror
xor
bound
cmp
inc
xchg
pop
int
aad
pushf
or
dec
into
cmp
inc
push
jmp
jmp
pop
fistp
scas
rcl
xor
jae
jno
ins
dec
push
aam
mov
dec
iret
aam
mov
cld
xchg
nop
xchg
mov
aaa
(bad)
mov
retf
mov
sub
xchg
shl
aam
mov
cmp
add
adc
rol
js
aad
addr16
or
cdq
iret
sub
jnp
and
xchg
pop
jle
push
mov
push
imul
sub
test
(bad)
bound
mov
jbe
jmp
push
cmps
mov
lock
jmp
aad
loopne
call
(bad)
movs
dec
and
mov
pop
ret
aam
std
push
lods
(bad)
fs
inc
push
push
pop
dec
xor
mov
fmul
fisttp
or
mov
popa
test
sub
bound
in
dec
adc
lea
xor
push
dec
(bad)
mov
xor
adc
and
cli
jecxz
and
sub
jle
shl
cmps
inc
pop
push
push
dec
ret
es
bound
push
shl
retf
cmp
push
pop
imul
(bad)
xchg
dec
sub
cmp
mov
stos
in
dec
pop
add
mov
cmp
hlt
xchg
inc
repz
in
enterw
cmp
pop
or
add
mov
sub
pop
data16
jp
(bad)
xor
mov
popa
cmp
pop
mov
mov
stos
adc
inc
sbb
sbb
outs
test
xchg
dec
outs
jnp
setg
xor
inc
inc
mov
sub
imul
xchg
cmp
sbb
retw
xchg
mov
gs
sti
std
add
sti
dec
popa
push
jne
lea
js
add
ficomp
repz
fdiv
and
das
sbb
arpl
sbb
mov
call
xchg
mov
jl
and
mov
inc
(bad)
lsl
das
test
xor
cmc
and
sbb
into
repz
(bad)
fcmovnb
sbb
mov
dec
push
rcl
mov
cmps
jp
xor
ja
and
cmps
popf
idiv
jg
inc
in
cs
pop
jae
xchg
lahf
and
and
mov
dec
(bad)
neg
xchg
(bad)
mov
push
cmp
jns
jnp
or
or
mov
dec
push
ret
out
enter
inc
sub
pop
mov
jns
outs
inc
adc
dec
mov
(bad)
cmp
or
sub
pop
(bad)
bswap
stos
ins
jge
retf
xchg
mov
push
retf
sbb
cmp
cs
sbb
mov
popa
neg
pop
retf
int
fldenv
push
shl
hlt
mov
dec
pop
ds
scas
rol
in
mov
repz
inc
cld
xor
sbb
dec
push
mov
jmp
pusha
loop
dec
int3
xchg
adc
pop
jns
mov
xor
or
in
pop
cmp
std
jmp
daa
mov
xor
ins
push
jns
fs
dec
sub
test
lods
bound
(bad)
(bad)
rol
pop
jecxz
adc
out
int
xor
inc
lods
ret
xchg
fild
pop
jbe
jns
add
inc
inc
push
push
rol
push
or
mov
jnp
mov
ret
movs
test
clc
inc
pop
test
mov
jmp
jne
les
xor
jl
dec
stos
sbb
sahf
and
cmp
or
push
xchg
push
adc
and
(bad)
cwde
mov
jl
sbb
sbb
dec
cdq
stc
mov
or
or
rol
lods
fcompp
test
int
or
adc
pop
scas
cdq
cmp
mov
push
pop
sbb
or
shl
jle
dec
int
and
mov
pop
cwde
xchg
inc
mov
jge
shl
ins
sub
mov
dec
fdiv
mov
xchg
jb
mov
outs
call
std
xchg
pop
dec
jg
sbb
mov
not
cmp
mov
bound
shl
or
mov
retf
xchg
cdq
add
jmp
nop
(bad)
in
shr
sub
xchg
pushf
daa
sti
cmc
cmp
mov
sub
cmp
push
mov
sub
test
and
xor
xchg
adc
fmul
int
dec
das
mov
std
ins
sbb
push
sbb
cmp
xchg
jae
inc
pop
loopne
pop
jg
(bad)
arpl
jno
mov
or
xchg
or
adc
inc
repz
add
pop
addr16
enter
das
movs
mov
gs
popa
xchg
sub
test
inc
retf
inc
test
xchg
push
sub
mov
jecxz
mov
das
inc
push
dec
addr16
adc
mov
push
in
lock
loope
mov
pop
fidiv
pushf
(bad)
cmps
fidiv
shl
mov
data16
xlat
adc
(bad)
shl
cli
sub
jns
shl
pop
jecxz
pushaw
fstp
sub
gs
outs
cmp
inc
sub
les
mov
mov
push
je
ss
cmp
jo
or
fldz
mov
jo
clc
xchg
add
mov
mov
mov
mov
pop
or
sbb
in
sub
hlt
pushf
jp
(bad)
jne
push
test
xchg
cmp
xor
and
and
dec
add
cwde
int3
jae
out
mov
push
pop
cmp
mov
fisttp
mov
adc
into
sub
xlat
cmp
and
sahf
or
ffree
pop
mov
jns
imul
pushf
rol
lods
jl
mov
rcr
mov
aaa
push
add
out
ret
cdq
jp
jmp
dec
test
push
and
add
dec
in
pop
inc
xor
das
mov
cmp
ds
lahf
leave
cmp
stos
fwait
xchg
int3
bound
mov
jmp
pop
loopne
(bad)
sti
(bad)
jecxz
pop
or
cwde
in
fcom
scas
cmps
sbb
and
neg
shr
repz
sbb
fld
ret
push
dec
add
inc
das
dec
and
cmp
scas
jae
sub
dec
and
push
sub
push
test
call
push
mov
push
in
adc
sub
cli
popa
dec
inc
loop
les
or
adc
or
shr
cmp
inc
fbld
dec
in
add
mov
sbb
rcl
xor
in
(bad)
xor
or
mov
cmps
scas
jnp
mov
jb
sub
and
ror
add
mov
movs
push
cs
sbb
sub
es
jp
xchg
sbb
xchg
and
leave
int3
pop
lods
outs
adc
fdiv
imul
scas
sub
fs
lea
jns
jmp
sub
adc
jmp
xchg
ins
pop
inc
sahf
mov
fisubr
iret
shr
clc
aaa
mov
mov
push
out
pushf
pop
or
mov
sar
cwde
push
outs
scas
enter
loopne
mov
or
gs
add
xchg
adc
mov
stos
jb
xchg
or
push
inc
add
mov
popf
and
pop
repz
jge
and
sub
add
mov
leave
mov
(bad)
out
mov
xor
test
test
mov
sub
cmc
scas
pop
mov
jo
scas
into
call
std
into
stos
push
int3
jns
call
imul
push
addr16
mov
test
(bad)
jo
cmp
mov
jg
ins
stos
fcom
inc
xchg
pop
cmovle
mov
mov
inc
and
and
mov
popa
jmp
jmp
pop
cmp
push
xchg
mov
mov
pop
xchg
inc
cmp
ja
loope
sar
cmps
cmps
add
xchg
in
out
sbb
and
test
je
es
mov
pushf
sub
or
sbb
jp
ror
mov
xor
cwde
and
mov
iret
and
cli
nop
cmp
movs
lock
push
xchg
push
sbb
dec
sbb
int3
add
push
jmp
or
sbb
dec
fldenv
add
jbe
inc
paddsw
cmp
xor
in
mov
repz
mov
or
fadd
mov
mov
add
repnz
cmp
bound
enter
xchg
nop
push
cmps
dec
(bad)
test
test
jnp
sahf
push
jle
pop
ins
lock
add
push
cmp
adc
cmps
dec
mov
pusha
inc
xchg
cmp
lds
fsub
inc
jb
aas
in
inc
daa
cmp
(bad)
retf
test
gs
mov
sbb
and
cmp
xor
les
ja
lods
adc
into
leave
out
test
(bad)
fdiv
sub
pop
lock
movs
test
in
adc
gs
dec
in
or
jae
sbb
sbb
mov
outs
enter
lock
push
jg
sub
call
ss
inc
lds
dec
cmc
jae
aas
xchg
adc
dec
fimul
or
jbe
mov
jle
cmps
(bad)
xor
mov
lahf
jne
fistp
push
add
fwait
sub
inc
dec
push
jp
scas
and
adc
push
or
in
(bad)
retf
jl
ja
shl
xor
jmp
mov
nop
or
data16
loopne
ret
dec
jo
out
jmp
pop
jmp
sahf
push
call
mov
into
lods
cmc
mov
loopne
das
int3
mov
fsubrp
cli
xchg
or
xor
push
sub
dec
out
(bad)
sub
mov
xchg
lods
test
dec
fidivr
dec
mov
enter
clc
xchg
cmps
ret
xchg
mov
std
sbb
sbb
shr
icebp
lea
sbb
test
mov
jns
mov
jecxz
paddq
cld
test
int
xor
cld
jae
push
xchg
(bad)
hlt
cwde
test
das
es
sahf
mov
(bad)
icebp
fcmovnbe
pop
repnz
in
(bad)
jne
scas
jae
jmp
mov
mov
repz
jns
push
and
in
mov
sbb
push
lock
loope
adc
push
call
fsub
jmp
push
pushf
les
out
stc
leave
push
jmp
cmp
mov
call
or
jns
(bad)
(bad)
in
adc
pop
(bad)
pushf
and
sub
lods
xlat
push
lods
ja
out
mov
leave
and
mov
mov
or
mov
jne
test
icebp
test
inc
bound
jge
add
fcomp
push
out
push
push
pusha
inc
push
sahf
mov
push
inc
(bad)
mov
je
add
test
fs
and
adc
lds
scas
cmp
scas
retf
mov
or
div
cmp
mov
lods
sahf
addr16
sub
adc
adc
add
in
dec
add
jmp
icebp
xchg
and
lods
(bad)
mov
jns
aam
sbb
lock
and
(bad)
mov
xchg
popa
sbb
jmp
xor
push
adc
mov
dec
outs
or
and
mov
and
fisub
das
es
loope
aad
cmp
cs
popf
in
dec
aad
out
and
push
int3
mov
(bad)
sbb
mov
fcomi
xor
div
mov
mov
and
mov
in
mov
ins
into
retf
mov
lds
cmp
adc
push
add
inc
lods
inc
mov
sbb
pop
fld
mov
dec
call
ret
mov
ret
xlat
call
pop
push
popf
pop
push
shl
jge
fs
cmp
outs
test
mov
call
adc
lods
ret
stc
lock
cs
lock
movs
or
dec
jg
bound
ror
mov
push
ret
jo
aam
dec
cmp
add
jge
sar
cwde
mov
xor
int3
adc
pop
mov
div
jmp
pop
inc
mov
mov
rcr
cwde
out
call
mov
add
pop
lahf
push
xor
sub
add
xchg
push
mov
popa
mov
aad
lahf
dec
movs
xor
stos
das
loopne
inc
imul
xor
out
jmp
cmp
fdiv
test
jno
cmp
repnz
jbe
or
add
loope
jmp
shl
cmps
xlat
jmp
push
outs
cmp
aad
push
xor
sar
and
pop
cld
push
fnstenv
loope
jg
and
mov
mov
loope
aaa
movs
popa
sbb
mov
push
pop
mov
jmp
mov
aaa
adc
popa
adc
xchg
sbb
ror
cmp
scas
push
or
retf
pop
dec
xchg
mov
loope
shl
stc
and
es
sbb
push
mov
push
clc
jge
or
adc
out
dec
bound
into
lahf
mov
rol
aaa
dec
add
scas
push
adc
pop
into
nop
std
cmp
stos
dec
data16
inc
mov
inc
scas
sti
(bad)
ffreep
dec
cwde
(bad)
sub
call
or
inc
aam
fwait
sub
inc
pop
(bad)
fistp
xchg
into
dec
and
sbb
add
xchg
fiadd
lea
(bad)
cmp
inc
push
shl
sbb
inc
cmp
dec
dec
adc
cmp
mov
xlat
jb
xchg
ret
adc
and
movs
mov
push
xchg
add
loopne
ss
movs
jae
cmp
popa
gs
mov
(bad)
cmp
or
sbb
in
mov
jp
fs
dec
in
ins
arpl
sbb
in
sub
push
xchg
cmp
sub
loope
mov
outs
inc
mov
adc
fwait
push
mov
out
mov
div
jmp
mov
(bad)
test
jp
mov
fcomi
aas
vmovntpd
jnp
xor
out
and
cmp
xchg
cmps
jp
leave
jle
out
lods
mov
aam
cs
mov
dec
cmp
test
inc
mov
lea
out
in
pop
dec
sub
and
sbb
js
imul
adc
rol
sub
pop
icebp
dec
mov
dec
std
fisttp
xchg
aas
mov
fmul
cli
ins
cwde
ins
or
xchg
cmps
and
pop
pop
xor
mov
dec
js
rcl
jmp
push
adc
icebp
cwde
mov
lods
sub
mov
cmc
push
pop
scas
mov
call
test
push
sbb
sar
mov
jo
aas
fidiv
xchg
jb
test
stos
xchg
and
adc
out
jl
fcom
jnp
mov
and
lahf
int
ror
dec
mov
mulps
fmul
sbb
movs
push
daa
ins
loope
xor
dec
adc
rol
aaa
cmp
sbb
xor
setle
js
adc
push
sub
fadd
adc
jnp
div
jnp
mov
cmp
mov
mov
jmp
cwde
inc
mov
addr16
addr16
mov
inc
pusha
adc
fwait
aas
dec
loope
mov
cli
and
fcom
dec
shl
in
xchg
mov
sub
dec
push
cdq
cmp
jp
dec
and
xchg
pop
or
pop
gs
or
inc
popf
mov
mov
fcmovu
aad
push
push
jne
ss
out
scas
xor
retf
and
out
mov
loop
push
xchg
rcl
sbb
xor
call
sbb
or
fstp
adc
add
int3
movs
sbb
stos
mov
inc
sar
out
jg
mov
int3
fwait
inc
sub
mov
into
cmp
in
add
add
(bad)
iret
mov
dec
call
mov
icebp
dec
test
sbb
sub
cmp
fsub
ins
inc
fcomp
push
retf
popa
dec
add
imul
adc
shl
out
jmp
adc
xchg
mov
mov
stc
rcl
aad
ud2
add
rcl
(bad)
int
pop
loope
push
pusha
fstp
push
ss
imul
(bad)
push
inc
mov
popf
loope
add
cdq
mov
add
dec
dec
pop
pop
and
mov
lods
inc
out
dec
shr
xlat
add
sbb
sub
pop
jne
lahf
nop
scas
ret
jo
xchg
sub
pop
xlat
or
lods
inc
push
push
bound
(bad)
std
in
sar
jecxz
(bad)
dec
pop
mov
mov
or
sahf
sub
mov
push
adc
and
(bad)
cs
sar
inc
dec
mov
vcvtsd2ss
xchg
scas
inc
mov
cmp
adc
jmp
sbb
clc
int3
test
mov
repnz
loopne
cmps
mov
aad
or
fimul
mov
xor
aam
inc
dec
mov
int3
out
sub
ds
cmps
je
or
mov
mov
cld
retf
shl
stos
cmc
jg
jb
mov
push
sbb
inc
jle
sub
push
pop
fsub
sbb
mov
jns
xor
test
out
jmp
ds
je
mov
jno
mov
or
sub
xchg
pop
pop
mov
push
and
jge
add
mov
or
dec
scas
rcr
and
cmp
jo
inc
add
fstp
popa
add
rcl
and
dec
push
add
lods
call
sub
cdq
sbb
scas
xor
push
xlat
sub
test
(bad)
bound
sahf
fldenv
inc
setbe
jmp
xchg
dec
sbb
jmp
push
lods
gs
cmc
int3
test
push
cmp
iret
push
mov
cmp
cli
mov
add
pop
rep
div
push
out
cwde
leave
popa
out
and
xor
inc
adc
xor
fild
adc
call
aaa
aas
xor
sbb
or
mov
sbb
inc
cli
pushf
popf
jmp
pop
(bad)
shr
test
mov
or
in
mov
dec
or
adc
sub
sub
in
inc
push
mov
mov
mov
mov
cmp
jle
mov
cli
and
pop
cmp
lock
std
xchg
test
in
push
rcr
je
and
stc
retf
xor
test
mov
jmp
xor
pop
adc
les
push
push
loop
xchg
cmp
les
dec
fdivr
in
shl
shr
sbb
add
xchg
jmp
add
pop
push
adc
inc
jmp
cmps
inc
or
or
test
mov
mov
push
arpl
stos
mov
mov
jl
add
in
mov
xor
xor
mov
fidivr
mov
xchg
mov
outs
shr
shr
pop
jmp
mov
jle
int3
cdq
ret
mov
dec
mov
mov
push
iret
js
mov
std
aaa
popa
or
into
bound
sbb
sbb
mov
adc
leave
stos
enter
ins
xchg
scas
out
sbb
loop
and
mov
ja
lea
mov
xchg
(bad)
loop
jne
xchg
adc
es
xor
xchg
xor
stos
repz
mov
scas
out
loope
push
inc
bound
dec
or
int3
out
pushf
cmp
sub
xor
int3
cs
inc
mov
inc
test
cmp
nop
data16
mov
mul
movs
movs
dec
mov
call
es
pusha
and
fs
xchg
and
xchg
fnstcw
popa
mov
push
push
adc
adc
ja
jno
push
inc
xchg
in
lods
cmp
cmp
into
loop
sub
xchg
loopne
mov
dec
cmc
or
movs
imul
jl
(bad)
lods
xchg
mov
in
jge
js
sbb
mov
aas
pop
movs
adc
je
push
cs
xchg
sub
(bad)
mov
adc
lea
mov
cmps
push
inc
add
imul
sub
mov
xchg
(bad)
adc
cmps
shl
ret
fdivr
xchg
rcl
xchg
sbb
pop
leave
cs
cmp
jo
jno
lods
iret
adc
dec
pop
loopne
cmp
jmp
cmps
test
jb
mov
mov
into
push
repnz
xor
shr
pop
push
xchg
cmc
push
(bad)
mov
sub
sub
push
mov
add
lea
nop
hlt
fst
mov
daa
fadd
test
add
jecxz
sbb
nop
xchg
stos
movs
mov
outs
mov
(bad)
cmp
clc
or
std
dec
push
jae
dec
and
pushf
cmps
mov
jns
jmp
and
je
test
inc
jmp
lea
out
mov
push
bound
out
sbb
mov
pop
mov
xlat
xor
stos
mov
lahf
(bad)
push
xchg
ja
xor
or
mov
hlt
mov
push
cwde
push
jo
xor
xor
lods
sub
loopne
repnz
scas
stc
scas
das
cdq
les
mov
xchg
dec
(bad)
cmp
icebp
jae
adc
jge
add
ins
mov
aad
and
iret
repnz
cwde
repz
loope
push
fbstp
loope
inc
in
fdiv
data16
sub
dec
retf
repz
sar
mov
sub
(bad)
or
inc
mov
out
pop
in
xchg
lods
popa
pop
inc
aaa
das
outs
out
outs
mov
aam
sbb
inc
mov
into
add
pop
add
jmp
or
adc
and
shl
sub
cmp
dec
dec
ror
dec
xor
dec
shl
repz
js
cmp
pusha
aad
dec
fwait
pop
sbb
mov
std
push
les
mov
push
push
dec
nop
fld
ins
adc
jle
dec
nop
dec
scas
pop
xor
cld
int3
push
mov
inc
fild
call
xchg
in
mov
(bad)
jmp
xchg
push
xor
xchg
xlat
mov
(bad)
mov
ret
xchg
(bad)
jb
pop
loope
sub
ja
(bad)
icebp
cmps
cmp
xor
jb
icebp
mov
movs
cmp
or
fs
push
jle
inc
mov
add
pop
inc
cwde
fldcw
inc
mov
jo
fld
xchg
inc
sbb
and
mov
adc
jge
dec
sbb
ror
xlat
cmc
clc
lock
dec
jmp
xor
mov
fldenv
xor
fcmovnbe
inc
popa
push
ficom
cmp
mov
pop
jl
in
ins
lds
push
shr
mov
inc
lahf
ss
adc
dec
push
xchg
pop
dec
pop
push
sub
jg
(bad)
sti
mov
push
add
and
xor
fbld
cmp
xlat
cli
sub
and
or
mov
cmp
sub
ds
xchg
push
fnstsw
adc
xchg
(bad)
rcr
xchg
ret
scas
dec
add
fisub
jno
aad
stos
push
push
and
mov
rol
cmp
mov
push
jp
adc
icebp
retf
inc
fiadd
sysexit
cli
ja
mov
sbb
mov
sub
adc
jg
outs
sub
mov
or
sbb
push
outs
push
rol
or
stos
mov
repz
iret
arpl
loopne
fcmovu
cmp
jle
gs
cmp
test
mov
test
int
mov
cmc
fstp
jae
test
ror
ror
adc
in
xchg
sub
sti
xchg
sar
xchg
mov
ins
ins
sbb
repz
or
and
std
mov
lock
call
mov
in
inc
cmp
cmc
and
ins
mov
jmp
dec
in
ficomp
ss
loopne
ins
or
in
movs
pop
in
pop
dec
lock
shl
pop
addr16
das
stc
fsub
or
cmp
cmps
stc
aaa
inc
jbe
ror
addr16
popf
mov
add
(bad)
lods
xor
inc
aam
cmps
cmp
scas
out
mov
fcom
in
add
popa
repnz
pop
jmp
shl
add
cmp
ss
stc
pop
xchg
popa
cmp
hlt
push
lds
pusha
jno
adc
out
pusha
and
leave
pusha
fsub
cmc
int3
xchg
adc
pop
lahf
icebp
xchg
not
inc
aam
jg
mov
push
js
inc
iret
in
jae
cdq
inc
(bad)
push
cdq
out
mov
and
fisub
pop
dec
push
lea
cmp
add
xor
add
dec
fist
dec
cmp
add
outs
inc
cmp
pop
movs
mov
idiv
popf
sar
inc
and
stos
push
cdq
cdq
xor
(bad)
xchg
(bad)
lock
loop
xchg
xor
sub
test
mov
dec
xchg
pop
xchg
sbb
mov
out
adc
fistp
ins
push
sub
popa
and
loop
sbb
xchg
scas
mov
jae
mov
jbe
mov
jnp
daa
dec
jge
push
and
stos
jge
mov
add
sbb
cmps
stos
and
cmps
mov
movs
inc
xchg
xchg
xor
scas
cwde
and
mov
xchg
aam
cmp
pop
sbb
icebp
fcmovbe
jle
sub
test
pop
sar
lods
cmp
in
cmp
pusha
and
mov
setge
and
das
movs
stc
push
shr
lods
(bad)
jnp
cwde
in
mov
adc
ss
lods
lods
out
ds
xor
cmc
pushf
not
sub
int
jne
mov
mov
xor
mov
cld
jns
mov
imul
jge
movs
in
fisub
rcl
bound
inc
je
fimul
cmp
ret
sar
sub
mov
dec
mov
mov
and
cmp
xchg
sbb
xor
(bad)
fistp
mov
popf
push
inc
xor
ret
imul
aaa
mov
mov
xor
pop
sbb
push
(bad)
arpl
add
fistp
inc
ins
xchg
adc
xor
retf
pop
push
cwde
adc
mov
jne
and
jbe
jge
loope
in
add
es
clc
fwait
jbe
or
lods
jns
add
pop
mov
push
iret
test
mov
out
fs
pop
or
jbe
sbb
es
test
jmp
cmc
push
sbb
or
cmp
push
nop
out
adc
sbb
mov
or
pop
call
aas
mov
pop
sbb
mov
inc
sbb
mov
or
nop
jg
arpl
shr
data16
loopne
mov
or
inc
nop
dec
dec
cmp
and
je
ja
(bad)
dec
xchg
fisub
ins
fnstsw
cwde
sti
dec
inc
addr16
jmp
inc
lock
dec
fsubp
push
xor
jle
mov
(bad)
inc
or
xor
mov
xlat
ins
or
push
push
inc
dec
sub
sbb
inc
adc
and
loope
loopne
sbb
add
push
mov
sub
add
shl
sahf
mov
jmp
dec
inc
mov
hlt
ins
inc
xor
sahf
aam
pop
rol
bnd
xlat
mov
shl
not
push
mov
loope
shl
jnp
and
pop
ins
ins
in
lods
call
inc
aas
jns
bound
xchg
inc
out
dec
dec
(bad)
cmp
ror
jp
imul
dec
es
stos
ror
ficomp
xchg
jle
push
xchg
cmps
push
scas
in
sub
push
xchg
stc
leave
adc
mov
loopne
out
mov
movs
or
and
les
sbb
ins
push
cmp
jb
imul
jp
js
enter
test
movlps
inc
sbb
xor
push
add
imul
ss
mov
adc
mov
jo
xor
xlat
pop
mov
push
mov
pusha
cwde
sub
retf
call
or
lahf
push
and
xchg
icebp
push
cdq
inc
mov
push
loop
and
call
retf
jle
jmp
mov
mov
mov
cmps
mov
clc
xchg
jmp
xchg
xlat
push
or
enter
fadd
ret
and
xchg
inc
arpl
inc
push
pushf
push
or
cwde
icebp
mov
movs
fwait
xor
ins
lds
adc
xchg
fdiv
mov
ret
jge
and
adc
mov
test
lock
dec
mov
push
enter
push
not
inc
push
mov
mov
popa
shr
(bad)
popa
imul
adc
std
mov
jo
mov
jno
inc
fidiv
sti
and
mov
fisub
retf
mov
jno
push
pop
out
popf
movs
mov
ror
sub
imul
int3
jo
in
fdiv
sub
das
enter
imul
sbb
pop
jge
mov
mov
mov
jnp
push
add
outs
jne
fist
xchg
dec
jmp
aad
jg
test
pop
lds
aad
mov
cmps
pop
loopne
mov
or
int3
enter
icebp
dec
leave
sub
jle
jl
lds
std
jae
xor
(bad)
loop
and
les
cli
push
fisttp
and
mov
fdivr
aaa
inc
movs
sbb
and
fcom
sbb
(bad)
pop
jbe
and
jle
repz
xchg
(bad)
scas
adc
ss
sbb
sbb
das
and
mov
mov
xor
fsub
xchg
repnz
pushf
push
mov
mov
dec
mov
add
out
shl
popf
cmp
(bad)
fcomp
scas
sar
mov
pushf
icebp
pop
xchg
shl
clc
sar
push
jg
inc
add
mov
(bad)
movs
and
xchg
(bad)
(bad)
jae
mov
inc
and
mov
push
xor
mov
inc
mov
lds
call
ss
loopne
xchg
cmovbe
xor
sbb
mov
or
out
out
ja
push
iret
xchg
neg
shl
std
push
mov
out
fldlg2
aad
repz
jbe
jns
dec
ficom
hlt
in
rcr
cmp
fistp
mov
inc
out
cmp
pop
sbb
out
aam
cmp
pop
jne
xchg
ja
les
nop
and
test
pop
cmp
retf
mov
loop
in
xor
jmp
imul
scas
lds
pusha
push
push
dec
sub
mov
test
mov
fnstenv
or
in
data16
lock
fs
lea
cmp
jecxz
repnz
push
dec
add
push
xchg
lock
or
arpl
jl
stos
xchg
pop
scas
adc
jmp
cmp
cmp
mov
push
lds
cmp
in
xchg
pop
out
jmp
sbb
cmps
lea
rcl
ret
(bad)
lods
xlat
icebp
cli
pop
mov
push
push
test
inc
or
mov
push
lahf
addr16
rcl
or
dec
mov
in
push
mov
push
push
mov
into
dec
retf
sbb
sub
es
imul
fidiv
test
cmp
js
not
(bad)
pop
into
sahf
ret
sbb
mov
and
(bad)
mov
jbe
cmp
mov
sti
pop
xchg
sub
lahf
lock
mov
add
xchg
call
retf
xchg
push
dec
loope
sub
xlat
mov
sub
mov
sar
dec
xor
inc
mov
xor
xchg
cmp
(bad)
ins
(bad)
retf
xor
sub
pop
stc
mov
push
ds
in
jl
out
pop
mov
jo
loopne
add
mov
adc
loop
sub
mov
jne
adc
ds
push
xchg
test
mov
ins
inc
outs
cmps
sti
mov
fwait
xor
lods
(bad)
sbb
xchg
fcom
cli
add
fs
jbe
mov
adc
fwait
loop
jae
pop
ret
idiv
jl
clc
mov
fidivr
push
out
es
cmp
pushf
push
push
dec
aam
gs
rol
(bad)
sti
(bad)
jmp
test
sbb
dec
test
lds
daa
mov
call
inc
push
add
add
dec
out
mov
(bad)
adc
push
popf
add
sbb
cmc
or
iret
add
pop
bound
adc
push
(bad)
not
lahf
sub
stos
push
addr16
icebp
sub
ret
adc
and
mov
dec
mov
xor
push
shl
outs
mov
ret
inc
cmp
pop
ror
imul
mov
push
xchg
xchg
dec
in
jnp
loop
inc
jg
in
inc
and
ret
cmp
add
cmps
scas
jno
dec
mov
sub
iret
xchg
jmp
es
fst
push
jmp
adc
out
pop
pop
hlt
xchg
fbld
aad
jecxz
cdq
or
mov
pop
cmp
sbb
xor
mov
add
jge
pop
popa
out
or
es
or
stc
sbb
mov
and
rcr
or
cmp
cmp
cmp
mov
stos
ret
mov
fidiv
cs
xor
jg
repnz
test
stos
arpl
push
sub
mov
icebp
addr16
cli
jns
test
push
sub
and
sar
(bad)
jae
inc
inc
sub
or
popf
jbe
nop
mov
adc
cmc
mov
and
clc
pop
ja
icebp
push
mov
push
xchg
mov
and
imul
in
xor
jo
mov
test
adc
in
aam
stc
cdq
cdq
mov
scas
stc
bound
cmp
mov
cld
cmps
mov
cmps
lods
mov
jmp
sbb
sbb
adc
pop
push
mov
popf
push
dec
test
dec
arpl
jge
and
jno
jnp
mov
mov
xor
and
sub
ror
mov
out
in
dec
adc
fnstenv
psadbw
xor
in
outs
int
sub
(bad)
jp
xchg
mov
add
or
and
mov
pop
test
push
jne
ja
lahf
mov
push
loope
nop
pop
or
test
push
test
sub
sub
mov
mov
and
mov
adc
xor
sbb
pop
js
scas
xchg
cmp
cmp
adc
mov
sbb
jns
jns
jmp
call
(bad)
js
cmp
pop
dec
loope
xchg
inc
adc
sub
(bad)
lock
dec
je
outs
push
dec
ffreep
ss
add
inc
imul
pop
jecxz
inc
and
push
fwait
pop
add
ret
xchg
xor
mov
xor
test
jno
jg
sub
dec
aaa
mov
jnp
cmp
push
xor
test
push
sub
jge
addr16
push
ret
jbe
push
js
inc
aaa
sub
add
jno
in
fwait
test
lds
movs
sti
shl
sub
(bad)
jmp
jge
or
mov
xchg
jmp
xchg
and
cs
push
mov
stos
into
lods
sbb
jo
loope
call
sub
ds
mov
mov
idiv
pop
mov
sub
pop
xlat
push
ficomp
mov
fcomp
xchg
inc
lock
pop
retf
imul
repz
mov
ret
out
and
and
aaa
ror
js
pop
into
jl
movs
sbb
mov
dec
cmp
gs
and
retf
gs
ret
mov
ret
popf
cmps
test
lock
sub
ror
or
imul
out
std
(bad)
jge
or
mov
mov
fild
xor
jmp
or
mov
test
inc
sbb
sbb
or
fisub
(bad)
push
jnp
cmc
adc
and
lock
cmps
pop
xchg
inc
and
(bad)
or
jle
sbb
push
lds
mov
mov
loopne
or
or
cmp
add
add
or
rcl
xchg
neg
mov
lock
fsubr
pop
push
jg
mov
cmps
adc
pop
and
xor
int3
or
dec
jp
and
stmxcsr
out
retf
mov
cli
retf
cmp
imul
xlat
mov
enter
mov
jno
aas
mov
jle
out
nop
dec
ret
dec
jge
outs
(bad)
int3
push
mov
popf
adc
scas
int
jne
pop
ds
jmp
retf
mov
fld
cmp
inc
xchg
(bad)
bound
mov
pop
sub
aas
out
pop
jmp
lods
push
dec
mov
push
sub
jnp
imul
pop
idiv
cld
sub
push
ret
xor
es
hlt
into
jb
out
xor
fistp
jae
out
or
and
cmp
mov
inc
xchg
dec
imul
fucomp
xor
lahf
push
push
or
outs
dec
cmp
jmp
cmps
jne
inc
jp
mov
dec
sahf
rcr
xchg
mov
fucom
cmps
pop
sbb
call
(bad)
mov
and
jne
sbb
mov
mov
fwait
push
mul
push
aam
sub
int
fcmovbe
mov
mov
mov
adc
add
es
jae
mov
jne
fild
inc
not
mov
inc
jo
sti
push
in
pop
cs
mov
sbb
jae
xchg
pusha
and
sub
imul
jmp
outs
fstp
inc
cmp
aas
ins
dec
daa
inc
stos
dec
test
xor
call
xchg
cwde
xor
dec
sbb
add
stos
sub
fwait
sti
push
in
cmc
cli
pop
lods
xchg
and
daa
popa
sahf
enter
sbb
sub
cld
jmp
mov
mov
int3
movs
and
jbe
xlat
stc
add
enter
or
push
imul
mov
jg
jg
test
mov
jp
adc
push
push
or
jns
and
(bad)
fcomi
xor
push
and
rcr
pop
inc
(bad)
out
repz
ret
retf
adc
ja
adc
sbb
out
mov
push
js
and
nop
loopne
pop
push
test
out
dec
aam
das
adc
ins
cmp
fcomp
push
dec
aad
ret
fs
test
mov
mov
sbb
jl
cwde
inc
bound
inc
or
movs
mov
daa
adc
sbb
jle
jmp
mov
out
fs
jnp
pusha
sbb
loope
in
ins
push
mov
cmps
jbe
jnp
xor
pop
mov
je
jns
adc
les
shr
sub
hlt
gs
mov
mov
pop
jle
retf
leave
sbb
aad
cmc
push
adc
popa
(bad)
and
inc
and
and
xchg
push
mov
adc
lods
add
xchg
lea
inc
sbb
cwde
ret
(bad)
into
test
pop
dec
rcl
mov
cwde
jae
addr16
addr16
sahf
xchg
leave
jne
dec
test
xchg
rcl
pop
dec
sub
mov
pop
popa
xor
scas
enter
cmp
pushf
mov
mov
dec
mov
add
cmps
mov
(bad)
icebp
popf
mov
add
cs
into
xchg
outs
iret
enter
cmp
int3
in
rcr
pushf
mov
xchg
jo
mov
mov
dec
blcfill
or
hlt
fucomp
pushf
and
and
test
pop
pop
cs
addr16
jnp
mov
and
add
or
test
pop
push
or
cmp
rcr
lea
push
nop
pop
push
push
jnp
sahf
pop
(bad)
dec
bound
mov
repz
imul
xchg
sbb
arpl
arpl
lods
pop
int
jge
cmp
sub
sbb
not
jno
sahf
pop
push
pop
sbb
sahf
test
sbb
mov
outs
or
pushf
pop
add
mov
jg
scas
jmp
je
push
dec
inc
lock
xlat
cmp
ins
adc
cmp
inc
jmp
or
ds
push
add
fwait
icebp
enter
neg
pushf
cs
int
sbb
cld
push
loope
push
jmp
int
mov
jns
pop
ja
sub
mov
inc
pop
xchg
jae
loopne
loope
push
adc
sub
aaa
cld
es
outs
rcl
pop
nop
xchg
pop
or
(bad)
fnstsw
xlat
or
inc
add
imul
arpl
push
adc
pop
(bad)
aaa
test
ds
xchg
popa
add
xchg
ror
stos
adc
dec
inc
inc
mov
sbb
ret
adc
or
mov
sbb
sub
mov
mul
fbld
scas
adc
out
pop
pop
mov
add
stos
push
je
ds
lods
xchg
std
iret
sub
sbb
jbe
call
call
mov
out
pop
fdivr
adc
lods
loope
jmp
ds
(bad)
inc
je
and
fst
call
adc
mov
adc
dec
adc
or
daa
aas
cld
or
or
push
stc
std
sub
inc
(bad)
mov
xor
and
retf
xchg
rol
jne
add
ret
lods
cld
sbb
inc
or
or
cs
sub
aam
shl
add
retf
push
je
lea
(bad)
sbb
mov
add
jnp
sbb
call
jle
xor
add
sbb
pop
lds
sub
mov
cmp
pop
ds
push
scas
or
repnz
fist
daa
adc
or
out
mov
xor
adc
dec
dec
add
or
xor
daa
sbb
ret
xchg
mov
cmp
cmp
sti
jp
xchg
test
fbstp
mov
movs
jecxz
ficom
xchg
(bad)
iret
int3
cwde
ror
cmp
jne
push
(bad)
(bad)
or
ret
lock
sbb
sbb
sub
leave
test
push
test
xor
and
cmps
or
leave
pop
cld
xor
and
cmp
cmp
lock
mov
fstp
arpl
inc
add
das
ins
leave
push
(bad)
cs
sub
adc
clc
lock
leave
fucomp
push
pop
adc
mov
dec
cmp
cmp
push
jmp
jg
bound
inc
int
nop
mov
adc
mov
(bad)
adc
and
jnp
jnp
mov
in
stos
pop
scas
and
dec
cld
or
das
out
fst
jl
adc
out
les
mov
push
out
pop
cmc
aad
mov
xor
push
inc
adc
icebp
(bad)
not
add
mov
test
sbb
xchg
mov
jns
cs
dec
pop
call
cs
repz
rcr
shl
push
gs
pop
call
sbb
xchg
adc
mov
add
or
ds
jmp
push
(bad)
or
mov
push
dec
xchg
sbb
and
mov
iret
movs
add
lock
hlt
test
adc
xchg
inc
xor
out
and
stc
add
push
jge
ficom
push
xor
dec
fwait
loopne
je
fs
imul
fstp
jns
ja
loope
mov
retf
outs
mov
adc
fxch
outs
cmp
and
and
fsub
test
cmp
dec
push
outs
jl
es
(bad)
xchg
cmp
jns
fwait
pushf
daa
call
add
lods
cli
(bad)
js
push
out
jge
xchg
enter
sub
jmp
sti
test
pushf
sbb
fucomi
jnp
sub
scas
js
inc
push
dec
mov
in
movs
mov
stc
adc
hlt
dec
push
pop
add
pop
(bad)
fdivr
xchg
gs
(bad)
sbb
lock
jecxz
sbb
inc
repnz
repz
dec
fistp
cmc
shr
test
mov
push
gs
push
xor
push
xlat
pushf
cmp
push
dec
leave
neg
mov
xchg
cmps
int3
movs
cmps
clc
fiadd
and
mov
in
stos
push
jb
cmp
outs
retf
jno
inc
icebp
mov
add
in
cli
add
ss
aam
mov
nop
adc
xchg
retf
xchg
and
dec
pop
pop
push
dec
rol
mov
inc
sub
loope
add
push
mov
jge
sub
ins
inc
loopne
fstp
lahf
dec
loopne
fadd
loope
pshufw
pop
cmps
(bad)
mov
sbb
ret
data16
stos
jnp
shl
adc
mov
dec
arpl
in
inc
mov
das
jns
and
scas
test
xchg
inc
js
pusha
pusha
pop
fcmovnbe
test
pop
jp
xchg
arpl
and
fist
sub
imul
jae
adc
sub
jge
mov
dec
test
pop
xchg
aam
mov
pop
aad
popa
fmul
mov
and
xor
or
and
cmps
call
(bad)
lds
call
stos
cmps
call
out
cmp
daa
and
int
sub
es
and
movs
cmps
push
rcl
mov
xor
mov
mov
ins
int3
xchg
cmp
cmp
lods
cmp
fmul
pop
cmp
call
gs
mov
dec
inc
test
mov
add
dec
outs
ret
pop
ret
push
ds
dec
int
aam
jp
jmp
pusha
xchg
iret
push
xor
xor
adc
fimul
jecxz
fistp
fdiv
outs
shl
jge
rcl
stos
sub
loopne
mov
arpl
stos
pop
ret
popf
add
icebp
jae
jne
dec
das
data16
retf
mov
xlat
inc
pavgw
movs
adc
in
mov
lock
int
lahf
(bad)
mov
cli
nop
xor
mov
inc
adc
add
and
ins
stc
stos
retf
rol
jle
cmp
xchg
pusha
std
mov
add
mov
(bad)
push
leave
dec
neg
xor
jbe
sahf
pop
stc
sbb
xlat
ja
out
mov
dec
loop
dec
mov
jmp
jo
or
scas
inc
sub
sub
ret
pop
xor
mov
sub
jl
pop
push
repnz
cmp
jl
icebp
imul
fnstcw
pushf
mov
bound
movs
cmp
mov
clc
js
loope
pop
dec
dec
jmp
jnp
xchg
xchg
xchg
and
pop
shl
(bad)
xchg
fild
inc
data16
shl
adc
or
jp
es
ss
jmp
and
sbb
leave
sub
cmp
xor
adc
sahf
aad
retf
sub
sahf
dec
xchg
test
dec
je
inc
push
imul
arpl
pop
mov
loopne
mov
push
lds
into
cmps
push
inc
inc
repz
aaa
cmp
cwde
mov
sahf
dec
push
cmc
sbb
inc
inc
out
adc
jno
sub
dec
pop
jle
and
jo
xor
and
cmp
mov
sbb
inc
in
pop
jno
inc
xchg
mov
pop
mov
aas
jne
xchg
jle
(bad)
sti
xchg
jb
fwait
jmp
mov
xlat
or
leave
mov
scas
inc
repnz
mov
aam
and
stos
arpl
inc
aam
sub
pop
movs
add
arpl
sub
fsubr
mov
xchg
in
cmps
test
ror
fsub
or
xor
inc
ror
xchg
jl
sub
dec
leave
std
out
sub
pop
fsubp
xor
pop
mov
lods
cmc
push
dec
sbb
dec
aad
dec
add
or
push
popa
mov
xor
in
add
mov
inc
cmp
dec
xchg
xchg
sub
dec
es
cs
xor
push
adc
retf
out
pushf
xchg
or
sbb
add
ins
repz
mov
in
jg
les
pop
aas
mov
inc
sbb
stc
nop
fdiv
xchg
sub
sbb
out
hlt
jle
fistp
xor
scas
mov
cli
adc
sbb
jg
cmp
cmp
ror
mov
mov
enter
idiv
push
mov
or
xchg
mov
pusha
add
inc
in
movs
mov
and
sub
sti
mov
mov
aam
jno
add
gs
jmp
retf
adc
dec
lock
gs
mov
repnz
mov
outs
dec
jbe
popf
mov
fwait
call
mul
push
cmp
adc
stc
out
xor
das
sti
push
push
aas
fbld
pop
loopne
pop
mov
jecxz
inc
jne
dec
aad
push
and
adc
das
(bad)
cmp
xor
ss
mov
imul
addr16
daa
call
pop
(bad)
sbb
movs
inc
scas
inc
cmp
ret
mov
jecxz
pop
jge
popa
jg
xor
pop
ss
and
mov
pop
add
fs
dec
fidivr
jae
adc
call
mov
retf
rol
repnz
lea
ror
push
mov
jns
and
pop
sbb
jmp
jae
xchg
xor
(bad)
mov
aaa
xchg
call
hlt
mov
stc
pop
mov
pop
cmp
pop
cmps
test
inc
xor
out
ds
cmps
call
call
dec
dec
pop
cwde
or
or
psrlw
push
or
sub
(bad)
dec
cwde
mov
clc
push
dec
loopne
(bad)
mov
mov
in
sub
or
cmp
jecxz
sahf
or
out
xchg
jmp
and
cmp
inc
mov
mov
add
or
inc
scas
mov
mov
out
add
and
sub
and
sub
or
aas
mov
sub
(bad)
iret
popa
add
dec
mov
mov
jo
fld
push
xor
jo
aam
xlat
dec
push
out
sbb
inc
sbb
or
jp
sub
mov
xor
(bad)
cwde
call
add
(bad)
xlat
out
clc
test
add
xor
or
sub
cmps
jnp
call
mov
mov
fistp
sbb
lds
div
push
(bad)
jp
xchg
xchg
in
sub
inc
mov
fnstenv
push
push
push
pop
add
jge
(bad)
inc
sub
gs
das
mov
sbb
sar
jns
sub
jle
push
icebp
sysexit
stc
push
dec
data16
mov
inc
pop
jp
inc
pop
jae
push
jecxz
sub
(bad)
int
fs
leave
mov
and
pop
add
std
xor
jnp
adc
dec
ficomp
nop
cdq
test
sbb
mov
and
scas
lds
xchg
cmp
inc
sub
xor
xchg
jno
das
repz
and
sahf
(bad)
stos
xchg
pop
cli
sub
cdq
mov
es
cld
push
aam
mov
stos
dec
gs
sti
mov
je
push
fs
lock
inc
mov
cli
jecxz
(bad)
fchs
scas
nop
js
mov
mov
ret
mul
pop
jp
jae
jge
jg
xchg
push
sbb
test
sub
sahf
call
or
leave
out
ficomp
in
inc
sub
shr
retf
cwde
add
or
push
mov
jl
in
cmps
mov
mov
xor
das
xchg
fisub
lods
push
xchg
cmps
xchg
add
mov
in
cs
dec
loopne
pop
(bad)
fdiv
les
into
je
aam
xor
int
adc
rcr
out
mov
(bad)
mov
adc
and
int3
call
mov
das
outs
and
or
push
or
jbe
ret
xor
mov
cmps
jnp
jb
jbe
mov
int
fst
les
call
loopne
ins
pop
push
sbb
pop
daa
cdq
inc
int3
mov
push
adc
ds
pop
pop
sub
imul
dec
cld
or
xchg
xor
int
repz
dec
xor
fdivr
int
mov
add
mov
cmp
movs
scas
xor
xchg
repz
in
pushf
aaa
push
in
mov
xor
jmp
lods
xchg
mov
fwait
popa
mov
push
lea
ror
xchg
or
ja
lods
ja
adc
and
cs
movs
enter
inc
cwde
cli
mov
adc
in
mov
and
pop
xor
pop
xchg
ds
scas
and
fstp
ds
bound
and
jb
xchg
stc
jbe
pop
retf
adc
jnp
popa
test
cld
or
sub
popa
mov
sub
outs
fnsave
push
and
and
leave
shl
jnp
xor
aas
xor
scas
(bad)
xchg
add
hlt
jl
ret
fcom
in
lock
add
add
cmc
cmp
or
fadd
xchg
or
add
sbb
lea
add
xchg
inc
(bad)
add
sub
je
out
mov
repz
repz
push
pop
lea
outs
or
mov
sub
(bad)
pop
push
das
(bad)
mov
mov
mul
pushf
ins
retf
fnstsw
pop
mov
punpcklbw
(bad)
ds
jecxz
xchg
adc
out
mov
jo
out
iret
ret
push
std
mov
push
pop
mov
add
mov
and
icebp
dec
dec
lods
jle
or
or
lock
ins
cmps
mov
je
mov
jg
loope
mov
inc
ret
sbb
mov
test
frstor
enter
dec
enter
call
dec
in
and
(bad)
nop
imul
in
and
(bad)
push
mov
mov
mov
or
add
mov
cdq
int3
mov
or
push
stc
(bad)
fild
mov
inc
push
pop
cwde
or
xor
arpl
adc
jae
dec
call
(bad)
push
cmp
sbb
fbld
out
dec
dec
in
int3
bound
dec
ja
rcr
xor
cld
xor
test
daa
popf
pop
mov
cmp
stos
jge
mov
push
fbstp
repnz
(bad)
inc
rol
or
adc
lods
mov
jae
sub
or
(bad)
(bad)
aaa
in
in
xchg
fwait
add
gs
or
pop
(bad)
and
outs
cs
xor
dec
cmp
test
or
or
stc
dec
cmp
xchg
inc
xchg
scas
mov
iret
jp
or
repz
rcr
scas
das
xor
cmp
inc
jo
loopne
mov
jge
and
int3
xor
push
dec
test
jmp
sbb
jne
sub
ret
shr
cmp
fwait
ror
int
in
and
mov
sub
repnz
or
jg
xchg
or
jns
out
fwait
xlat
push
retf
sbb
fimul
in
mov
fs
sub
jle
mov
mov
leave
inc
lock
jmp
mov
(bad)
inc
jge
adc
sbb
xor
pop
push
fstp
out
int3
push
jb
in
mov
js
sbb
sub
imul
xchg
mov
fucomp
pop
or
xor
pop
movs
rcr
jne
ins
jnp
mov
(bad)
xor
mov
dec
cwde
sub
sub
xlat
je
dec
jo
and
fisubr
mov
xchg
not
adc
lods
outs
daa
xchg
loop
shr
aaa
test
and
xor
dec
inc
shl
jle
ja
test
ret
xor
loopne
fdivr
in
inc
adc
nop
cmp
ror
adc
sar
mov
stos
rol
daa
sub
cmp
fstp
fisubr
test
popa
push
jg
or
and
repz
sub
addr16
jmp
js
cmp
pusha
cmp
data16
loope
sub
hlt
lods
xor
dec
jnp
adc
pop
dec
(bad)
jp
gs
push
loop
xor
xlat
faddp
jl
mov
sti
test
in
jb
mov
adc
fst
ss
inc
xchg
adc
fscale
fbld
mov
add
into
fdivr
push
das
mov
lahf
(bad)
pop
sub
or
lods
add
sub
arpl
mov
cwde
and
pop
pop
retf
jl
(bad)
and
ds
xchg
mov
movs
retf
xor
icebp
test
mov
pop
test
xchg
add
in
popf
in
aaa
nop
cmp
cmp
dec
xchg
sbb
inc
cmp
(bad)
pop
fs
xor
adc
and
xchg
clc
std
fnsave
int3
xchg
(bad)
imul
pop
adc
sbb
cmp
(bad)
(bad)
fcmovnbe
and
sub
mov
dec
push
test
icebp
test
clc
loope
xchg
push
jp
ror
mov
pop
mov
enter
add
jmp
mov
jge
repz
dec
rcl
loope
(bad)
sbb
inc
(bad)
mov
inc
cmp
and
cwde
xchg
(bad)
xchg
inc
gs
mov
inc
test
and
sbb
xor
push
fs
jne
call
jne
sti
push
sbb
es
dec
jbe
xor
push
add
fcom
mov
das
mov
pop
xchg
sub
xor
push
inc
adc
iret
xlat
pop
aas
into
push
arpl
sbb
xchg
inc
stc
idiv
and
cmp
xlat
arpl
test
stos
or
or
or
add
add
mov
xor
push
push
bnd
call
xor
mov
dec
mov
sbb
pop
je
ret
fistp
add
push
enter
loop
mov
gs
ficomp
fs
sub
and
pop
jmp
lea
cli
test
inc
shl
test
pop
jmp
sbb
and
stc
test
add
rol
xchg
xor
sbb
push
fistp
int
xchg
pop
push
add
xor
fild
or
pop
fdivr
pusha
jbe
xchg
mov
fwait
movs
(bad)
fnsave
cld
jecxz
and
shl
lahf
xor
and
fcomp
in
jge
push
imul
adc
jmp
enter
fstp
push
mov
mov
iret
addr16
jle
xchg
mov
cmps
push
cmp
lahf
test
pop
lods
dec
popa
movs
fstp
and
imul
add
mov
neg
mov
sub
inc
and
mov
xchg
scas
ins
test
inc
push
stos
scas
dec
mov
jp
mov
repnz
cld
dec
ret
ret
mov
jae
lods
cmps
hlt
cmp
push
xchg
sub
mov
in
rcr
xchg
shr
lock
outs
lea
leave
inc
sbb
sub
cmp
ins
cmc
jmp
and
in
es
hlt
mov
das
pop
int
push
inc
mov
out
daa
mov
imul
or
iret
fsub
inc
mov
jge
sub
aas
jg
push
enter
xor
movs
rcl
pop
cdq
jno
inc
clc
xor
out
aas
inc
inc
lock
das
aaa
imul
out
sbb
xchg
daa
xor
push
std
inc
mov
fist
mov
xchg
shl
ds
mov
xchg
mov
dec
sahf
adc
cs
repnz
and
mov
jmp
add
(bad)
outs
mov
and
mov
popf
push
cmp
push
or
rol
pop
ss
cwde
or
ja
xor
or
add
jle
and
loopne
cmp
adc
mov
or
addr16
aad
loop
add
(bad)
sti
adc
bound
scas
fcomip
(bad)
sub
lds
sub
dec
test
sbb
int3
xchg
or
les
aad
jg
xor
dec
in
les
mov
dec
iret
sbb
xor
fstp
jae
shl
push
jbe
cmps
mov
and
dec
xor
sti
push
push
push
and
pop
push
push
and
jne
loope
(bad)
jecxz
lods
sub
push
loope
popw
dec
cmp
test
adc
popf
sub
aaa
mov
xchg
fisubr
fiadd
popf
cwde
dec
pop
jmp
and
add
rcr
sbb
sub
adc
and
mov
cmps
push
push
jg
mov
in
adc
lds
push
adc
movs
mov
je
xor
stos
pop
inc
adc
les
jae
pop
mov
test
mov
lock
(bad)
loop
dec
mov
or
adc
jo
out
mov
jae
sbb
push
(bad)
add
mov
adc
mov
(bad)
rol
jmp
xor
mov
xor
test
in
xor
popf
pop
mov
jmp
dec
shr
jg
fwait
cmp
xor
(bad)
pop
mov
adc
push
lods
xchg
sbb
inc
push
push
ins
ins
sbb
sub
sub
cmp
pop
(bad)
or
and
pushf
jae
and
(bad)
mov
push
mov
dec
mov
mov
fwait
pop
xchg
test
jmp
xchg
mov
int3
jle
adc
sbb
stos
push
xlat
xchg
fs
pop
icebp
test
dec
jb
ret
sahf
mov
sub
pop
gs
dec
xor
xchg
ret
mov
lock
nop
sub
xchg
inc
scas
shl
mov
xor
imul
sahf
xor
mov
popf
xor
push
ss
mul
xor
leave
aaa
mov
push
mov
loopne
pop
call
push
dec
fadd
rol
repz
out
push
rol
mov
xchg
rol
call
push
call
xbegin
js
dec
inc
or
and
cs
lods
sbb
stos
(bad)
into
jmp
clc
jbe
xchg
push
xor
mov
cmp
movs
shl
lahf
xor
push
(bad)
shr
adc
xlat
js
mov
aam
add
adc
mov
cmp
outs
add
inc
xchg
add
ret
and
int3
xor
jne
jp
icebp
out
dec
idiv
mov
stos
bound
add
fwait
mov
push
dec
push
into
adc
leave
setns
adc
sar
scas
sub
or
lds
nop
mov
out
movs
inc
in
ins
or
push
rol
dec
or
(bad)
cs
lock
pop
push
jmp
or
push
repnz
cwde
push
cld
ds
test
fmulp
movs
push
jb
ror
mov
jo
jp
mov
and
movs
jo
jge
lods
mov
sub
xor
nop
mov
aaa
cwde
cmps
jnp
dec
sbb
loope
ret
jmp
xchg
std
jns
mov
xchg
sahf
cmp
das
push
call
jne
xor
fcom
pop
or
or
push
call
xor
jnp
cmps
nop
fldenv
inc
ficomp
sti
cmp
jg
(bad)
int3
push
out
mov
and
dec
inc
pop
push
inc
sub
pushf
and
adc
and
xchg
repz
and
aam
mov
inc
pop
pop
arpl
cmps
and
inc
lods
cmc
push
dec
mov
int3
cwde
inc
out
jne
mov
pop
jno
retf
pushf
(bad)
cwde
sub
adc
jle
inc
dec
pushf
jmp
mov
fs
pop
ins
pop
adc
jp
arpl
and
mov
sahf
and
and
stc
aas
mov
mov
push
ins
xchg
mov
jl
sbb
adc
sub
jg
sbb
daa
iret
mov
add
call
aas
pop
sub
mov
ja
fnsave
xchg
xchg
xlat
mul
push
push
loope
or
sbb
das
out
dec
test
rol
sub
xchg
mov
mov
pop
xlat
lock
sub
out
adc
(bad)
mov
push
std
fsubr
scas
cdq
rol
push
retf
jp
jo
ja
stos
ret
mov
or
and
mov
sbb
push
or
lods
inc
and
mov
fistp
xchg
ret
hlt
loop
out
mov
mov
loop
pop
push
ss
pop
(bad)
gs
(bad)
(bad)
adc
push
scas
lods
dec
dec
inc
stc
leave
mov
icebp
scas
mov
push
leave
adc
retf
ss
or
pop
push
ss
jno
xor
and
sbb
(bad)
ds
in
call
fisubr
sbb
scas
add
add
xor
mov
xchg
mov
and
popf
jmp
les
je
adc
sub
dec
cmps
pop
push
adc
mov
pop
mov
push
ds
in
iret
fidivr
and
in
(bad)
or
push
jne
push
movs
pusha
stos
lea
or
or
xchg
dec
xor
(bad)
sub
fist
cmp
out
jge
pusha
inc
mov
sub
cli
cmc
sbb
popa
add
js
pop
push
test
sub
fwait
popa
(bad)
pop
adc
adc
popa
xchg
movs
stos
enter
shr
in
pop
fidivr
in
es
mov
mov
sub
aas
pop
icebp
mov
inc
xchg
fist
rcr
mov
es
pop
adc
aas
inc
int
ins
movs
dec
add
scas
xchg
mov
push
jmp
aas
pop
mov
dec
(bad)
lock
lods
cmp
or
int3
sub
mov
mov
jne
or
cmp
sub
cmp
mov
xor
mov
sub
mov
pop
not
mov
lds
xchg
dec
push
(bad)
mov
(bad)
sub
mov
add
xor
pop
ror
pop
retf
icebp
pop
mov
pop
xchg
jbe
out
cmp
leave
mov
push
jo
dec
sti
sub
or
in
les
sti
sub
jle
jae
int
xchg
pop
fimul
retf
xor
add
in
(bad)
rcr
mov
xchg
int
xchg
or
cmp
jmp
retf
and
sub
dec
rcl
cmp
std
push
pop
push
imul
jge
mov
lds
jae
sbb
scas
and
mul
xor
inc
or
push
dec
ds
mov
and
aam
shl
stos
shl
movs
jno
enter
rep
jae
pop
cdq
jg
jecxz
cwde
push
mov
dec
xor
dec
xor
das
pop
in
lock
mov
not
mov
add
adc
inc
inc
jns
out
ins
push
xchg
loope
mov
dec
mov
fimul
outs
cmp
mov
cmc
loop
mov
and
xor
jne
mov
out
cwde
sahf
ret
and
mov
dec
cmc
frstor
and
mov
les
adc
pop
mov
add
scas
loop
xchg
push
xor
pop
fldpi
loopne
cld
jmp
in
inc
sahf
in
jle
outs
cmp
test
fisttp
mov
cli
cmps
les
jmp
outs
cdq
loop
shr
pop
outs
outs
mov
icebp
dec
jge
clc
push
inc
sub
mov
rcl
xor
sti
cmp
outs
add
sahf
mov
push
jl
dec
or
sbb
cdq
mov
enter
sbb
call
add
mov
loop
push
cmp
pushf
(bad)
jnp
out
add
add
outs
(bad)
imul
push
mov
mov
cmc
xchg
(bad)
aad
cmp
push
jns
add
cmps
pop
je
ins
mov
(bad)
push
mov
xor
shl
lahf
ins
fiadd
gs
sbb
fisubr
add
cmps
inc
xchg
sti
add
mov
div
pop
or
test
and
dec
fwait
repz
inc
ins
loopne
mov
jge
jae
mov
jmp
xchg
dec
fwait
stos
pop
push
mov
or
jno
xor
or
(bad)
loope
xor
scas
mov
xlat
xlat
inc
xor
imul
sbb
and
xchg
dec
lea
daa
ret
lods
pop
xchg
bound
pop
jb
xchg
retf
int
adc
sbb
out
and
test
ret
sti
(bad)
jmp
lahf
jmp
jp
dec
rol
das
repnz
mov
outs
test
sub
and
or
add
rcl
adc
xchg
out
mov
and
icebp
mov
or
or
ja
sub
dec
iret
cmps
xchg
add
outs
ficom
mov
jo
cmc
stc
mov
outs
in
jne
and
enter
dec
add
inc
jmp
pop
fwait
stc
jb
inc
push
int3
ins
xchg
inc
sub
jecxz
fcom
(bad)
push
xchg
in
or
ds
sbb
rcl
xor
popa
mov
push
push
sbb
iret
mov
mov
les
jge
aaa
sahf
xchg
pop
lea
and
cs
ins
cmp
ins
push
(bad)
sbb
xchg
ins
add
mov
jo
adc
outs
lods
mov
inc
add
div
out
mov
js
fidiv
and
jns
ret
ins
mov
test
das
and
test
in
jno
dec
icebp
add
pusha
adc
in
inc
mov
jle
imul
(bad)
std
vpinsrw
test
cwde
add
xor
pop
mov
and
ror
push
sbb
test
jae
jmp
cmp
mov
sbb
and
scas
dec
out
sti
out
test
jnp
jno
mov
or
cmp
xor
mov
dec
dec
dec
dec
or
rcr
push
mov
shl
mov
dec
fist
pop
lods
sub
mov
int
shl
push
sub
mov
imul
ja
ret
ficomp
cmp
cmp
retf
jecxz
cmp
aad
jne
dec
add
cmps
mov
add
out
or
fdivr
mov
sub
lds
add
push
dec
das
xchg
fdivr
pop
pop
push
(bad)
loope
and
es
cdq
push
xchg
aam
push
sahf
out
(bad)
jecxz
mov
lods
mov
jmp
fisubr
pop
imul
cmp
inc
mov
cli
pop
mov
push
inc
cmp
pop
xor
jl
xchg
popa
aad
mov
popf
shl
jb
les
hlt
mov
out
fidivr
and
dec
cmp
pop
fnstenv
movs
and
fcmovne
clc
dec
mov
popf
mov
xor
int3
add
in
mov
and
jo
jecxz
fs
cmp
call
xchg
mov
push
imul
mov
cmps
mov
lock
mov
inc
aad
pop
shl
add
fs
push
lods
imul
xchg
add
aad
into
cmp
popf
enter
or
push
je
test
addr16
adc
and
stos
jae
sar
ss
jmp
ss
cmp
jo
xchg
jb
jmp
jge
fisub
jg
mov
pop
sbb
xor
mov
mov
sar
add
pop
push
(bad)
fnstcw
mov
movsx
xchg
sbb
ins
arpl
or
sub
mov
repz
fsubr
scas
test
mov
push
or
scas
mov
jle
call
and
fdiv
and
sti
push
adc
xor
dec
out
dec
dec
jno
or
push
push
mov
push
add
rcr
cmp
xor
ins
mov
mov
pop
sub
jns
shl
sbb
adc
in
sbb
lahf
sbb
mov
sahf
adc
pop
bound
add
cmc
js
push
outs
cmp
push
ins
cwde
jne
ds
jb
(bad)
and
cmps
imul
jbe
cmp
arpl
mov
mov
pop
push
adc
xor
cld
cdq
mov
lods
test
das
outs
and
sbb
adc
and
leave
movs
xchg
loop
sbb
pop
push
dec
adc
adc
stc
cs
cmp
jo
xor
cmps
or
ins
add
push
sbb
inc
dec
push
inc
jb
lods
or
or
xchg
inc
jmp
in
xchg
mov
mov
jnp
bound
shr
out
xor
stos
inc
mov
add
dec
mov
aam
add
and
pushf
fnsave
scas
popaw
sub
clc
add
jle
add
mov
push
clc
sbb
mov
and
test
mov
outs
(bad)
jbe
fsub
pop
stos
call
loopne
dec
jno
xchg
in
movs
lods
dec
jmp
daa
xchg
(bad)
xlat
movs
out
daa
xchg
sub
outs
mov
adc
sbb
pop
cwde
aam
cmp
mov
iret
push
mov
ins
int
jne
cmp
jno
adc
mov
mov
push
add
dec
xchg
outs
mov
or
outs
or
pop
jo
pop
mov
dec
icebp
sbb
(bad)
les
shr
call
cdq
mov
or
rcr
mov
mov
mov
aam
dec
icebp
cmc
ds
mov
(bad)
(bad)
int
adc
pop
out
call
xlat
jmp
add
and
out
ins
jmp
lods
(bad)
jmp
dec
sbb
mov
mov
jno
add
dec
hlt
or
inc
fdivr
pminub
fstp
xor
xor
stos
and
adc
mov
vmread
push
int
or
inc
adc
div
pop
in
xor
sub
inc
push
out
ss
xchg
aaa
adc
leave
jmp
add
mov
test
and
fwait
and
pop
push
(bad)
test
out
cmp
rcr
(bad)
fimul
js
adc
or
sub
pop
(bad)
jae
jp
adc
push
test
fnstenv
and
pop
push
sub
ror
in
mov
dec
enter
pop
jns
sub
and
dec
push
cmp
adc
clc
push
push
xor
jle
jo
(bad)
inc
(bad)
fld
lock
call
adc
and
dec
mov
sbb
xchg
fldcw
das
arpl
out
inc
mov
ss
call
xor
arpl
pop
imul
xor
mov
lock
int
or
imul
ucomiss
adc
mov
test
pop
mov
test
or
sar
ins
jns
fucomp
jge
mov
or
mov
popa
das
fisubr
mov
jmp
push
inc
add
sahf
sub
jne
push
sbb
jo
sar
or
rol
out
mov
sbb
cmp
lods
dec
dec
or
sbb
test
call
pop
fisub
nop
and
cmp
jmp
adc
mov
fidiv
inc
dec
cmp
icebp
(bad)
jo
inc
(bad)
jae
out
cld
nop
lods
or
and
mov
jne
outs
je
dec
push
call
fisubr
xor
jnp
adc
(bad)
repz
cmp
in
rol
inc
aam
pushf
sub
dec
les
into
cld
xor
sub
dec
lods
xor
sti
outs
push
dec
pop
push
cdq
repz
pushf
(bad)
pop
ins
sub
mov
or
icebp
call
cmp
adc
pop
das
ret
adc
adc
fcomi
out
ss
nop
jo
jl
(bad)
jp
cs
movd
inc
(bad)
jmp
cli
ins
ja
pop
test
sub
aas
call
popa
inc
dec
push
aas
push
mov
movs
fbstp
mov
sub
cld
cmp
adc
out
inc
sar
outs
movs
xchg
jl
sub
std
jnp
xchg
repnz
fwait
xchg
pop
xchg
cmps
cmc
ja
aas
adc
out
jbe
sbb
or
test
pop
jb
sar
jnp
icebp
jecxz
mov
push
int
(bad)
jmp
hlt
(bad)
arpl
outs
inc
xor
pop
sbb
sub
sti
hlt
lods
test
push
enter
sub
push
fcmovnbe
dec
dec
and
lods
cdq
fisttp
mov
push
or
aas
xchg
stos
cs
out
ret
enter
mov
dec
xchg
push
into
sub
sub
shl
nop
cs
aam
push
rcr
jo
pop
or
retf
dec
adc
and
scas
jmp
pop
fwait
lahf
dec
in
sbb
sub
xchg
ja
clc
mov
mov
lea
cmps
mov
test
test
in
aam
ror
shl
into
mov
pop
iret
push
aam
pop
jmp
xor
push
mov
in
or
mov
fisttp
mov
xor
call
mov
mov
jno
sti
dec
pop
dec
xor
xor
cld
dec
mov
test
fcomi
in
cmp
sbb
pop
fwait
out
or
fsub
xchg
cmp
pop
adc
(bad)
add
mov
fs
je
dec
(bad)
jbe
add
stc
rol
push
sbb
sbb
add
pop
into
fild
xchg
adc
jmp
fisttp
fs
in
mov
push
mov
inc
push
add
rcl
adc
(bad)
pop
shr
dec
xchg
(bad)
adc
xchg
push
dec
pushf
pmaxsw
(bad)
sbb
das
repz
jl
push
and
out
mov
lock
test
jge
cmp
rol
imul
xlat
xchg
dec
mov
sbb
cmp
mov
mov
into
jno
std
mov
inc
in
cmps
retf
jp
xchg
dec
inc
cmp
mov
aas
add
xchg
xor
cdq
mov
int3
outs
test
sub
test
call
gs
mov
cmc
jns
rcl
shr
mov
inc
lock
mov
out
pop
and
cmp
or
jmp
mov
pusha
mov
lods
jb
cmp
mov
mov
ds
jns
dec
dec
cwde
test
inc
int3
mov
xchg
aaa
xchg
cld
je
in
jecxz
lock
addr16
cmp
movs
xchg
fstp
cmps
mov
clc
repz
clc
leave
mov
into
outs
cmc
pop
jmp
sub
push
test
and
jp
imul
mov
ins
pcmpeqw
add
cli
and
ins
and
imul
aam
cwde
inc
dec
adc
pop
mov
cmc
inc
xchg
lods
sub
dec
inc
into
ret
cwde
adc
(bad)
jecxz
arpl
inc
aad
add
rcr
ds
scas
jae
(bad)
xor
shr
mov
retf
in
jae
pop
enter
cmps
add
lahf
das
hlt
pusha
loopne
push
clc
pop
enter
arpl
dec
add
push
sub
rcl
into
rcr
jmp
xor
jnp
and
in
icebp
retf
test
pushf
in
das
push
retf
push
push
iret
gs
out
push
imul
int
mov
add
sbb
dec
in
mov
shl
ds
ss
or
add
retf
pushf
inc
mov
add
bound
(bad)
out
cmps
inc
fld
mov
lahf
mov
fidivr
xor
jmp
lds
(bad)
xor
retf
push
xchg
xchg
xchg
test
test
jae
jb
add
mov
push
cmp
repz
ds
scas
push
repnz
pop
fcmovu
fdiv
push
in
lahf
leave
stos
ds
arpl
inc
add
lahf
fistp
pop
mov
xor
mov
dec
dec
jno
cmp
xchg
cli
shl
loope
dec
xchg
ror
mov
(bad)
pushf
add
clc
pop
in
ror
out
xor
nop
mov
test
mov
lds
fst
js
fisttp
xor
adc
bound
repz
cmp
pop
xchg
push
lea
inc
mov
cmc
push
ds
cs
push
mov
addr16
pushf
repnz
cli
mov
xchg
retf
iret
arpl
enter
adc
(bad)
and
or
jl
loop
inc
data16
test
dec
aaa
pop
lods
pop
inc
and
(bad)
imul
xlat
fld
jge
pop
xchg
cmp
and
icebp
mov
and
out
and
sub
dec
or
push
fst
cmp
lock
inc
dec
mov
inc
iret
xchg
cmps
shl
sbb
retf
test
sbb
and
sub
mov
adc
aam
xchg
adc
into
mov
movs
push
add
mov
jmp
scas
je
xor
jl
add
dec
xor
or
cwde
cmps
xchg
dec
pop
dec
in
rcl
sar
add
jb
test
test
test
mov
ret
test
xor
daa
movs
jp
mov
sbb
fcomp
xor
fnstsw
shl
and
mov
mov
js
add
jmp
mov
mov
pop
sub
in
ss
mov
add
mov
jp
mov
in
sbb
cs
test
inc
movs
neg
std
jl
pop
add
loope
cmp
shr
dec
xchg
ja
movs
jo
push
out
ds
in
es
test
jecxz
shl
loope
pop
imul
jae
cmp
mov
iret
jl
test
ds
push
cld
iret
mov
js
sysexit
sub
movs
xchg
pop
aas
sbb
cmovno
stc
out
out
ror
push
pop
mov
mov
ja
std
ins
mov
fidiv
add
(bad)
mov
add
cdq
les
jnp
loope
cmps
mov
ret
mov
sbb
outs
push
jnp
stos
push
mov
xlat
scas
sub
pushf
call
int3
std
ret
cld
sub
push
and
cld
push
in
je
stos
int
outs
add
(bad)
aaa
dec
push
arpl
fs
add
in
popa
ins
dec
mov
call
adc
adc
mov
cmp
out
mov
movs
(bad)
(bad)
pop
lahf
push
push
sbb
mov
icebp
sbb
call
push
push
leave
outs
sbb
add
ds
int3
inc
adc
pushf
or
in
aaa
shl
mov
inc
aam
xchg
pop
out
(bad)
pop
mov
out
test
pop
popf
out
push
retf
(bad)
shl
adc
mov
cmp
or
cmc
pop
push
inc
sub
fcomp
ror
jb
jo
jns
xor
in
xchg
aam
pop
int3
xor
retf
add
in
mov
(bad)
loopne
cmps
mov
sub
in
scas
mov
inc
jnp
cwde
(bad)
dec
fisub
mov
std
cmp
cmp
dec
mov
mov
fstp
xlat
scas
sub
ins
pop
and
or
arpl
mov
sub
jns
pop
stos
lahf
pop
pop
iret
std
call
call
cmp
inc
mov
fimul
inc
pop
pop
jp
jle
cmp
fdivr
push
mov
sbb
xor
fisubr
inc
stos
mov
sub
das
pop
(bad)
mov
sar
sub
jmp
lock
mov
jge
in
xchg
cmp
mov
push
in
outs
and
inc
ror
pop
aad
shl
inc
fidiv
das
or
std
jbe
arpl
cmc
int3
imul
call
mov
addr16
xor
lds
outs
jno
mov
retf
mov
cld
sbb
test
cmp
mov
push
mov
push
add
out
aaa
pop
aas
push
sti
stos
idiv
xor
add
pusha
retf
pop
mov
mov
mov
popf
fnstcw
and
mov
cdq
adc
xor
out
mov
cmp
xchg
fs
sbb
mov
and
ja
and
data16
idiv
pop
enter
dec
ins
imul
push
faddp
jno
dec
xor
mov
and
jmp
aad
or
cmp
xchg
xor
and
rcr
out
std
adc
inc
(bad)
mov
xchg
fcmovnbe
or
popa
or
mov
xchg
sbb
retf
rcl
and
stc
xchg
push
mov
jb
add
leave
xchg
sub
shl
push
mov
mov
sub
cmp
mov
stos
clc
dec
xchg
jmp
jecxz
cmp
retf
push
cmp
sub
mov
stos
imul
js
fs
sar
lock
or
or
movs
inc
js
cs
mov
push
mov
int
imul
mov
dec
or
movntq
or
div
pop
std
cmp
loop
push
push
stos
adc
aas
call
jns
js
mov
test
icebp
nop
mov
loop
pop
cld
xchg
dec
push
jecxz
je
pop
retf
jae
mov
aaa
or
or
lods
ds
xor
ds
cli
adc
cmp
in
hlt
adc
test
mov
dec
cmp
dec
dec
sti
push
push
mov
retf
dec
adc
pusha
mov
sti
arpl
(bad)
fadd
push
ret
mov
rcl
pop
lods
bound
dec
adc
jns
ret
xchg
pop
push
out
mov
ss
imul
xchg
push
loopne
inc
mov
push
outs
push
push
lahf
call
push
lds
adc
or
ds
daa
dec
scas
dec
div
pop
faddp
test
imul
ss
repz
sub
sbb
add
les
cmp
add
dec
fcmovu
lea
jne
push
icebp
adc
xlat
aas
push
ss
dec
sub
lock
in
(bad)
lds
call
jle
gs
daa
jmp
and
dec
call
push
js
push
aaa
cmp
frstor
mov
nop
xchg
call
mov
jnp
rol
xchg
sub
xor
cwde
xor
sub
cmc
call
sub
dec
sbb
jmp
or
cmp
push
push
pusha
inc
pop
ror
out
fnstcw
inc
add
mov
sub
es
cli
stos
push
pop
pop
push
jb
pop
mov
adc
cmp
test
pop
in
jae
out
inc
sti
out
retf
cmp
mov
dec
and
cmps
imul
add
bound
fld
xor
mov
in
dec
push
dec
push
push
adc
push
or
pop
pop
ins
lds
dec
sub
xchg
loop
pop
pop
inc
in
pop
jmp
adc
xchg
mov
cdq
aad
pop
fidivr
movs
jecxz
mov
sbb
and
aad
pusha
retf
les
neg
mov
pop
xchg
(bad)
pop
cli
push
jmp
movs
iret
pop
cmp
ja
int3
fild
or
inc
push
outs
push
dec
or
(bad)
push
jmp
outs
push
xchg
jl
ret
dec
scas
jbe
jo
or
push
dec
in
cmp
leave
sti
push
and
pusha
lods
adc
lock
lahf
pop
(bad)
push
stos
xchg
mov
xor
and
or
popa
add
push
add
mov
int
shl
xchg
mov
mov
cli
inc
pushf
mov
addr16
or
cmps
rol
imul
iret
cmp
jecxz
xchg
rol
out
and
repz
inc
in
push
dec
jo
cmp
inc
ss
mov
dec
mul
fdiv
add
mov
push
imul
scas
mov
mov
fist
inc
mov
out
psadbw
aam
or
fs
fmul
je
idiv
dec
inc
mov
cmp
xchg
fcom
dec
mov
psrlw
cmp
cwde
pop
sbb
jge
test
push
sbb
mov
sub
jne
ror
leave
clc
cmp
add
and
sub
inc
jno
jnp
nop
out
in
xor
adc
jl
loop
sub
sbb
sar
xadd
push
mov
aas
js
cmps
push
fs
jnp
push
(bad)
sub
ret
mov
movs
out
adc
ret
push
daa
sub
push
enter
inc
in
or
xor
xor
cmp
add
xor
sahf
movs
and
mov
push
ret
push
add
nop
mov
neg
fwait
add
jno
jmp
ins
int
pop
xlat
sub
pop
movs
movs
sub
and
retf
repz
pop
pop
ins
in
pop
mov
sbb
cmp
lahf
jp
(bad)
pop
out
jmp
xor
les
xor
dec
mov
jo
xchg
dec
scas
mov
cmp
inc
imul
cs
fstp
cdq
push
jbe
dec
xchg
add
std
je
push
iret
mov
in
add
dec
fmul
nop
mov
fisubr
mov
cli
cwde
or
movs
jge
test
add
jmp
and
sbb
mov
call
loope
cmps
jmp
sub
jmp
scas
or
sub
or
bound
enter
and
jge
nop
test
imul
and
mov
jbe
dec
ins
mov
dec
je
sbb
mov
mov
les
and
xor
xchg
xchg
lock
jns
pcmpgtb
sbb
retf
and
xor
xor
cwde
push
fistp
inc
(bad)
lods
sbb
loop
daa
dec
imul
pop
inc
jo
int3
push
sub
iret
push
loope
pop
sbb
(bad)
dec
jle
mov
movs
or
mov
cmc
fstp
pop
xor
ins
mov
test
ffreep
inc
js
mov
cmps
leave
and
sub
push
mov
out
push
add
lods
sub
cmp
sahf
mov
pop
mov
and
add
data16
(bad)
push
and
std
pop
pop
ret
push
test
icebp
mov
and
adc
aaa
pusha
adc
and
(bad)
lahf
mov
enter
or
cmps
clc
test
cmp
jecxz
sbb
xchg
ficom
jbe
jb
ficomp
mov
outs
bound
dec
jge
popf
out
cwde
jmp
leave
mov
sub
mul
push
addr16
pushf
in
dec
or
dec
mov
pop
pop
add
adc
icebp
add
hlt
inc
jae
shl
jmp
xchg
psubsb
lea
ret
cmp
xchg
(bad)
push
add
sbb
fidivr
xchg
adc
rol
pushf
(bad)
push
fs
and
or
add
fldcw
mov
ins
fadd
xchg
pop
xlat
retf
mov
jecxz
fsubr
jge
fwait
stos
cdq
in
jmp
push
out
pushf
cmp
add
data16
cld
add
out
push
aas
cmp
stc
mov
xchg
gs
jbe
test
mov
and
cdq
and
cld
cmp
fild
fstp
in
loope
outs
xchg
lds
adc
out
aas
or
dec
stc
xor
mov
adc
sbb
adc
mov
ja
xchg
jae
xchg
push
test
adc
test
mov
xchg
lods
test
xchg
sub
test
stos
pop
dec
out
jnp
cwde
js
ja
sub
or
lds
mov
lods
not
cld
mov
enterw
fs
mov
inc
mov
xor
in
or
inc
jg
inc
mov
mov
mov
xchg
xchg
out
sar
daa
rcl
mov
jp
aaa
imul
out
call
xchg
adc
repnz
inc
leave
xor
out
mov
aam
iret
jo
fdiv
add
imul
dec
xor
shr
lods
jle
pop
sbb
jae
(bad)
out
sbb
mov
and
pushf
(bad)
adc
jbe
repz
data16
fimul
call
xchg
xor
call
lock
dec
pop
call
push
mov
jo
ins
bound
cli
pop
ror
lods
stos
in
sub
mov
lahf
cmp
aaa
push
push
(bad)
jb
adc
mov
bndstx
add
aas
sbb
push
fsub
inc
mov
dec
mov
movs
jo
jne
add
mov
push
sti
mov
xchg
sub
sbb
icebp
mov
test
push
mov
dec
repnz
sub
dec
pop
mov
xor
push
jo
inc
js
jne
not
cld
add
(bad)
sbb
fidiv
mul
mov
xor
fadd
aam
jle
xor
loopne
jne
adc
push
repz
sbb
sbb
jne
aaa
mov
out
xor
rcr
out
data16
dec
jae
idiv
inc
mov
cmp
jecxz
jae
add
adc
test
push
and
stos
imul
push
adc
int3
ret
sub
clc
lods
ins
pop
or
call
aam
jmp
add
mov
pusha
mov
jno
lock
mov
mov
mov
idiv
movs
movs
or
xor
or
push
mov
dec
scas
hlt
dec
push
int
cmp
outs
jo
xchg
popf
pusha
add
cwde
aad
ja
pop
imul
dec
cmovp
loope
xchg
cmp
cdq
mov
or
sub
icebp
icebp
cmps
je
pop
push
pop
xor
jp
jge
mov
fwait
adc
mov
sbb
inc
jge
jge
cli
cmp
or
pop
cmp
or
test
cld
pop
iret
mov
std
cdq
xchg
fwait
into
enter
cmp
pop
push
fild
repz
sti
fcmovne
xlat
mov
scas
pop
(bad)
push
popf
test
outs
pop
inc
jns
lods
stos
add
pop
jle
inc
ss
dec
mov
mov
and
sahf
mov
push
jecxz
loope
jg
lock
xchg
je
xor
lods
cmp
jl
jg
sbb
cmc
jae
mov
sub
jae
sub
sbb
jo
adc
arpl
xor
(bad)
sub
push
and
pop
sub
into
adc
ret
dec
(bad)
jae
(bad)
in
movs
jbe
out
mov
cmp
or
mov
xchg
inc
push
cmps
inc
mov
and
cmps
mov
jnp
std
in
daa
and
xchg
xchg
bound
inc
test
fwait
stc
inc
fwait
mov
jmp
fs
xchg
aad
add
mov
mov
jmp
in
popa
cmp
add
pop
cli
mov
mov
cli
adc
push
push
mov
inc
movs
xor
mov
sahf
or
aam
fisttp
inc
jl
or
popa
mov
test
shl
ins
ja
mov
fwait
ins
dec
daa
push
push
dec
pop
adc
cmp
mov
jae
push
or
jp
jno
in
loopne
mov
add
fild
lahf
cmp
and
sbb
adc
das
rol
add
lods
jae
xchg
sbb
and
pop
pop
pusha
push
(bad)
and
mov
mov
adc
repnz
xchg
or
jle
mov
iret
into
jb
mov
xchg
xchg
or
add
adc
sub
imul
jno
repnz
add
stos
xor
push
mov
xchg
mov
fist
inc
xlat
add
mov
pop
fistp
aas
hlt
dec
mov
fsub
clc
push
add
pop
cdq
ret
or
cmc
cmp
mov
mov
in
out
cmps
jb
mov
(bad)
push
test
iret
rcr
add
(bad)
aam
or
ja
pop
jne
dec
jp
adc
adc
call
jmp
and
push
add
std
shl
push
cmc
fisubr
dec
jmp
imul
push
push
pusha
sahf
(bad)
mov
es
pop
cmp
mov
or
std
jp
mov
fwait
out
xchg
jmp
push
fsub
test
mov
sub
inc
mov
pop
fnstenv
and
mov
lods
and
dec
data16
scas
sbb
lods
in
lods
lahf
mov
enter
or
(bad)
aam
and
sub
cmps
pop
jg
xchg
mov
push
add
sar
mov
cmp
(bad)
push
(bad)
jnp
add
dec
mov
stos
movs
xchg
aam
mov
fwait
cmp
fisubr
rol
mov
bound
sbb
fidiv
dec
add
mov
out
movhps
add
je
call
mov
fdiv
ins
mov
je
ins
xor
iret
adc
cmc
add
lock
in
mov
lock
dec
add
arpl
inc
xchg
or
idiv
sbb
int3
(bad)
aas
jne
mul
(bad)
add
mov
xchg
ins
in
loopne
les
cmp
movs
loope
pop
cwde
push
mov
jge
xor
stos
iret
pop
and
sub
xchg
sub
jl
inc
call
sub
shl
out
fdiv
shr
xchg
call
(bad)
je
out
or
out
jle
cmp
lahf
push
and
add
rol
in
(bad)
jbe
stos
inc
add
sahf
call
jecxz
pusha
je
cmp
jno
pop
cmp
adc
movs
loopne
fld
out
pop
mov
cmp
sbb
mov
sub
add
xchg
data16
cmp
jbe
in
mov
pop
clc
test
sub
add
pop
inc
pop
jle
mov
push
sbb
jl
xor
es
sbb
xchg
and
daa
and
jns
hlt
mov
stc
dec
jg
int
popf
cmp
inc
test
add
push
inc
test
jno
aam
cwde
arpl
mov
sbb
dec
cmp
or
xchg
dec
ds
das
or
outs
push
xchg
dec
clc
out
sub
pop
sbb
les
pusha
mov
and
out
dec
inc
mov
popa
mov
sub
(bad)
retf
ror
xchg
arpl
cmp
xchg
push
jno
dec
jns
sub
in
xchg
add
in
sbb
lods
in
nop
retf
outs
jl
fbstp
sub
and
adc
push
xchg
int3
loop
in
nop
int3
mov
sti
cli
jle
mov
outs
scas
pop
inc
retf
and
inc
inc
cmp
loopne
push
adc
add
xor
hlt
mov
loopne
fcomp
or
sub
jecxz
aas
iret
mov
xchg
cmp
pop
ja
push
div
cmps
shl
jp
cmp
pop
or
sbb
lods
add
popf
aaa
or
das
(bad)
retf
(bad)
xchg
adc
sub
(bad)
adc
pop
sub
clc
inc
jo
jb
mov
in
sbb
adc
pop
dec
mov
js
mov
push
hlt
dec
or
fcomp
inc
fcomip
xor
xchg
cdq
adc
jle
scas
loopne
xchg
retf
mov
sub
mov
loope
or
(bad)
fdiv
sbb
xchg
pop
cmc
ret
mov
pop
(bad)
in
mov
xchg
imul
je
pop
jbe
outs
adc
jmp
xor
mov
pushf
sub
push
add
push
lahf
cwde
adc
pop
imul
out
call
push
and
mov
xlat
jp
cmp
aad
jnp
scas
inc
dec
cli
adc
js
add
test
add
xchg
push
adc
fst
call
aas
jne
btr
mov
dec
daa
lock
popf
sub
sub
dec
mov
ja
mov
dec
imul
ret
std
mov
mov
les
fsub
push
mov
inc
mov
int
or
adc
pop
loopne
sbb
scas
cmp
addr16
cmp
push
xchg
pop
in
add
jae
ds
fucomip
int
lods
inc
adc
cmps
cmc
iret
ror
mov
aas
fadd
adc
fbld
dec
and
test
xor
sahf
clc
dec
outs
inc
lock
leave
mov
dec
mov
xor
adc
mov
xchg
and
sbb
push
sub
push
fisub
xchg
outs
(bad)
retf
repz
push
mov
mov
inc
mov
(bad)
ficom
pop
loope
popf
scas
fisttp
lock
js
in
test
pop
lds
push
or
stc
fstp
mov
jo
and
sbb
cmps
jge
sbb
loop
push
jae
cmps
mov
stos
or
lods
shl
jmp
int3
cmp
pushf
xor
lock
add
mov
push
ror
icebp
mov
mov
pop
add
imul
je
hlt
fcmovnb
inc
outs
add
into
stos
sbb
fcomp
ds
and
pop
popf
inc
mov
mov
push
or
mov
ins
cmps
lahf
aad
repz
dec
adc
movs
xor
pop
das
lock
call
mov
or
aaa
add
sub
rcl
ins
pushf
pop
sar
jge
test
xor
dec
sbb
mov
aad
xchg
adc
jmp
test
pop
icebp
push
mov
stc
ja
mov
cmp
mov
mov
arpl
call
mov
or
push
add
fcom
loop
adc
aam
jmp
jl
test
jle
lds
loope
sbb
xchg
push
sti
sbb
and
add
movs
call
les
adc
(bad)
call
xor
fs
add
(bad)
hlt
pushf
xor
jno
pushaw
lds
pop
sub
cmp
sbb
pop
mov
mov
fisubr
cld
sub
repnz
cld
xor
out
cld
addr16
push
cmp
mov
push
lahf
mov
jb
jge
int
jmp
dec
sbb
out
scas
cld
(bad)
ins
pop
std
test
ret
retf
pop
pop
movs
arpl
shr
mov
dec
mov
retf
mov
idiv
clc
and
xor
and
mov
jge
lea
mov
sti
inc
cmps
adc
sbb
xchg
mov
(bad)
out
iret
jne
lods
retf
xchg
in
push
adc
adc
ins
jle
add
mov
js
ins
or
ds
inc
or
shl
pop
and
int
push
ja
mov
add
push
ins
enter
cmp
aam
mov
xchg
pop
icebp
mov
jne
or
or
pushf
into
into
sbb
push
xchg
lea
out
push
xor
sub
rsqrtps
mov
sub
add
imul
adc
fiadd
aam
pushf
jnp
or
xor
xchg
push
call
dec
ret
mov
jg
sar
inc
out
cld
mov
das
movs
pop
ds
adc
out
loopne
add
retf
dec
jge
jp
pop
imul
mov
rcl
test
scas
cmp
jno
sub
jle
adc
inc
adc
xchg
imul
cmc
jecxz
push
and
push
sbb
cdq
mov
(bad)
push
xchg
adc
xchg
idiv
aad
into
stos
icebp
dec
shl
xchg
(bad)
scas
mov
loop
sbb
add
sub
add
pop
sub
cs
push
outs
mov
stos
sahf
pop
jmp
scas
mov
push
pop
jnp
lods
mov
adc
mov
mov
fstp
mov
mov
(bad)
cmc
jne
dec
ins
js
sar
mov
test
outs
mov
or
sbb
inc
or
lahf
push
pop
mov
cmp
gs
add
out
outs
adc
add
adc
pmulhw
jns
push
popa
pushf
or
jne
mov
xor
or
sub
test
sbb
call
dec
xor
pop
jg
mov
pop
and
outs
jae
and
inc
rcr
aad
out
xchg
dec
mov
sbb
daa
ss
imul
mov
push
push
mov
adc
and
scas
clc
push
or
mov
cmp
dec
and
jno
cld
leave
pop
adc
sub
fnsave
fnstenv
lds
add
inc
push
sbb
dec
in
nop
shl
inc
mov
les
jmp
stc
in
push
mov
xchg
mov
(bad)
mov
shl
pusha
call
lods
adc
dec
or
cmp
rcr
cmps
iret
call
nop
leave
inc
add
mov
cmp
cmp
mov
rcl
jo
and
out
adc
mov
ret
sbb
jae
add
jl
enter
lock
mov
mov
and
pop
ret
stos
hlt
push
or
sar
xlat
xor
inc
and
jns
cld
dec
leave
xchg
pop
cli
pop
in
inc
retf
xchg
mov
mov
jne
mov
inc
mov
sub
pop
push
nop
loopne
shr
and
stos
mov
inc
movs
mov
and
pop
cmp
fstp
mov
cmp
pusha
cli
ja
mov
mov
mov
mov
or
jecxz
mov
hlt
and
js
in
popf
jge
mov
sbb
out
xor
out
rol
mov
xchg
popa
jle
and
adc
xor
add
pop
cs
pushw
scas
into
or
sub
je
and
add
jg
inc
call
sbb
sar
mov
jg
jns
and
xor
push
loop
or
test
popf
imul
je
pop
loope
push
cmps
iret
sbb
lods
jbe
adc
sub
and
xlat
popa
lods
sbb
stos
xchg
jns
bound
inc
test
xchg
sub
(bad)
aaa
adc
retf
push
add
jns
test
xlat
pop
add
xor
scas
jge
cmp
pop
les
scas
outs
cli
xchg
stc
mov
push
nop
mov
mov
or
pop
pop
mov
sbb
outs
rol
test
call
adc
xchg
movs
gs
js
mov
inc
inc
icebp
push
xor
popf
out
jno
retf
mov
imul
shl
je
adc
push
mov
call
sub
fstp
and
pop
ss
outs
xchg
enter
and
scas
and
sub
je
test
into
dec
cmp
stos
(bad)
ins
out
clc
ja
in
in
xchg
inc
inc
dec
jg
iret
cdq
pushf
lock
sbb
cwde
arpl
mov
cmps
pop
lahf
in
pop
test
cs
jne
pusha
loopne
iret
fcomp
mov
or
push
iret
xchg
adc
dec
int
test
pop
shl
mov
daa
adc
test
pop
sbb
movs
jo
pop
pushf
sub
push
aam
mov
pop
xlat
stc
ja
pop
lock
or
mov
(bad)
xchg
or
popa
inc
imul
jp
arpl
fwait
cmp
jae
push
int3
loopne
push
pop
je
test
mov
xor
int
jo
pop
inc
jae
out
add
movs
xchg
cs
out
pop
rcr
push
int
ins
test
push
ret
(bad)
call
aas
retf
pop
mul
js
inc
je
or
sbb
push
sub
call
mov
fcmove
mov
(bad)
lods
mov
push
popf
dec
hlt
xchg
sahf
jp
and
or
int3
and
fidiv
cmp
cmc
or
test
mov
xchg
jecxz
cmp
push
in
nop
adc
int
dec
add
cmp
int
mov
sar
mov
loopne
aam
stos
retf
scas
mov
dec
cmp
fnstenv
sahf
addr16
js
pop
xchg
mov
lock
mov
push
movs
sbb
cwde
dec
mov
add
cmps
pushw
out
dec
push
xor
std
xor
push
repz
sbb
inc
iret
adc
cmp
int3
jge
push
sbb
jnp
(bad)
call
sub
sbb
neg
adc
clc
int
mov
pushf
mov
push
mov
dec
mov
loope
cdq
sub
cmp
fcomp
psllw
lea
js
push
popa
sub
movs
xor
add
loop
cdq
repz
lock
in
mov
sub
xor
xchg
repz
xor
pop
stc
xor
push
ret
mov
mov
xor
add
ins
mov
outs
pop
iret
add
not
push
and
addr16
lds
push
mov
mov
pop
xchg
ret
pop
push
les
add
ins
cdq
push
inc
and
outs
addr16
sti
mul
retf
xor
mov
pop
data16
xchg
pop
fdivr
pop
sub
cmp
mov
dec
sbb
xlat
add
adc
mov
add
outs
push
jne
ret
stos
(bad)
int3
test
xor
xor
mov
loope
or
jle
aas
lea
rcr
xchg
adc
xchg
leave
and
loop
out
scas
dec
inc
xor
jmp
mov
je
cmps
sbb
jecxz
mov
push
enter
retw
pop
xor
cmps
nop
in
pop
repnz
imul
add
scas
mov
add
or
repz
mov
sbb
or
jnp
out
mov
jae
data16
(bad)
ins
xor
pop
mov
adc
adc
cli
mov
inc
into
rcl
mov
jo
pop
jecxz
leave
(bad)
shr
jp
mov
xchg
xor
fsub
xchg
mov
div
mov
idiv
in
cli
shr
(bad)
xor
jne
cwde
scas
cld
(bad)
jmp
daa
test
(bad)
(bad)
jns
jo
add
aad
push
lods
fiadd
ror
repnz
dec
(bad)
adc
ret
fadd
enter
popa
out
inc
dec
je
mov
es
(bad)
iret
call
inc
add
push
test
inc
fwait
inc
fld
cli
mov
test
sub
sahf
sbb
imul
mov
adc
mov
cdq
fisubr
retf
leave
xchg
test
pop
out
ds
push
ret
jmp
adc
test
mov
into
mov
pusha
cli
add
mov
lods
js
jge
pop
(bad)
int
repz
or
mov
xchg
pop
xchg
xor
xor
test
xchg
aad
sbb
ss
mov
inc
dec
fs
adc
or
adc
clc
pop
xchg
dec
in
cmps
fimul
jne
sub
js
push
repz
dec
and
imul
mov
mov
bound
sbb
pop
mov
mov
push
xlat
pop
cwde
data16
push
aas
cmps
retf
repz
fs
and
test
cs
xchg
jns
call
xchg
cmp
and
arpl
and
cwde
sub
cmps
ret
lock
dec
mov
js
xchg
xchg
jnp
xchg
(bad)
enter
ret
scas
xor
dec
sub
(bad)
mov
jno
stos
pushf
pop
lea
int
call
mov
and
pop
retf
cmp
into
adc
psubw
mov
popf
push
adc
cmp
dec
xchg
loope
and
xchg
repz
xor
mov
addr16
jnp
imul
in
in
jo
stos
ror
jmp
and
add
scas
jo
jbe
jge
jb
mov
mov
arpl
out
xchg
scas
adc
or
outs
xor
fucom
pusha
fld
scas
or
jbe
pop
sbb
jae
stc
lea
inc
dec
hlt
in
sbb
mov
sub
mov
mov
arpl
icebp
gs
(bad)
pop
fisub
pop
cli
and
test
rcl
inc
iret
mov
(bad)
out
mov
stos
inc
sbb
fcom
retf
out
jbe
jmp
cwde
pop
push
adc
nop
(bad)
dec
jae
movs
inc
sti
or
pop
(bad)
lods
cmp
out
sub
mov
cmps
hlt
and
mov
mov
add
imul
shr
ret
fwait
ror
inc
cli
cmc
pop
loop
mov
popf
dec
lea
jae
mov
mov
cmp
arpl
mov
dec
mov
mov
mov
add
bound
call
mov
and
push
jp
cwde
jbe
fdivrp
mov
stos
fistp
cmp
pop
call
in
mov
jmp
jo
inc
jmp
mov
out
push
pushf
cmp
mov
mov
jb
push
cmps
jge
lds
jge
xor
dec
fadd
(bad)
rol
jmp
pop
fbld
bound
pop
cmc
mov
pusha
xchg
cmp
test
ins
fsubr
scas
pop
gs
stos
and
xchg
ins
cmp
jns
leave
ss
aas
pop
leave
mov
scas
push
aam
pop
daa
cld
int3
pop
imul
popa
movs
mul
inc
call
mov
mov
outs
lods
xor
pop
jmp
xor
loope
adc
mov
xchg
mov
cld
loope
xor
pop
sbb
repz
add
mov
inc
xor
mov
inc
mov
into
push
pop
inc
and
out
xor
js
out
dec
add
or
jmp
jo
sub
and
xchg
ror
cmps
or
scas
xor
xor
data16
sub
shl
mov
stos
mov
repz
pop
sar
test
or
ja
aad
jecxz
push
std
add
sbb
pop
jb
push
stc
cmps
push
mov
rcl
cmp
dec
adc
lea
sub
lds
push
lea
adc
cmp
or
xchg
pextrw
fwait
push
adc
push
xor
sar
push
leave
adc
dec
xchg
push
cmps
dec
xor
mov
lea
fisttp
hlt
push
inc
dec
pop
les
adc
loope
push
leave
add
pop
ret
push
mov
out
into
jle
add
cdq
sbb
sbb
sahf
dec
ficomp
pop
arpl
pop
cmp
jecxz
push
push
pusha
popa
leave
xlat
xor
inc
jl
pop
shl
add
push
add
cld
mov
inc
cli
out
shr
inc
(bad)
scas
ss
pop
or
(bad)
int
cmp
xchg
mov
dec
in
test
xchg
out
iret
les
push
add
mov
cld
sbb
sbb
ret
mov
(bad)
call
xchg
push
or
jne
int
mov
xor
jno
out
loopne
sbb
fs
dec
fdiv
inc
bnd
out
test
and
jns
ja
xchg
dec
int
lock
sbb
outs
aas
retf
outs
add
sbb
test
mov
inc
sub
mov
aaa
adc
inc
xchg
retf
mov
xor
sbb
movs
fist
xor
pop
ret
cmc
mov
addr16
pusha
pop
out
sbb
cmp
mov
data16
xor
scas
adc
sbb
xlat
xchg
call
push
xchg
sbb
or
or
test
sar
cmps
add
push
jno
jl
mov
sbb
add
ret
xor
shr
inc
movs
dec
jle
sub
and
enter
fsub
int
pop
mov
xor
sub
(bad)
(bad)
lock
sbb
call
and
in
pop
cmp
add
jnp
in
int3
mov
es
cdq
cmp
gs
sbb
mov
cmps
stos
mov
aaa
add
into
pop
int3
adc
xchg
inc
jns
xor
das
bound
push
popa
mov
int
fiadd
push
adc
mov
inc
in
fs
call
xchg
jnp
vmovupd
add
test
inc
in
sbb
push
push
(bad)
dec
in
dec
mov
xor
cmps
test
jg
or
or
pop
popa
jb
mov
outs
das
int3
add
test
jns
loope
mov
adc
cmp
adc
mov
xor
movs
xchg
ins
gs
pop
outs
mov
add
int
xor
sub
cwde
in
adc
mov
add
sti
cmp
loope
cmp
loopne
fidivr
ins
mov
dec
inc
outs
sub
rol
dec
outs
pop
jl
pop
xor
loopne
jmp
stos
jp
test
fwait
call
cmps
cmp
mov
mov
jne
cmp
mov
jne
inc
(bad)
fld
mov
sub
sub
retf
mov
push
(bad)
loopne
cmc
lds
lods
mov
cmp
aad
mov
addr16
push
add
jp
sub
mov
lock
jo
call
ss
inc
adc
xchg
pop
dec
pop
cmp
fst
and
adc
jge
pandn
push
rol
nop
les
cmp
mov
stos
ins
xchg
cld
pop
aad
sub
int3
stc
aad
cmps
scas
inc
jne
fs
stos
sub
xor
and
das
out
xor
inc
adc
mov
cli
jmp
out
cmp
retf
and
jb
xor
inc
jae
pusha
rol
call
ins
add
xchg
inc
cmc
in
popa
jmp
inc
ds
push
push
jns
vpshuflw
fadd
iret
mov
push
push
pop
xor
and
out
mov
cmp
xor
popa
pop
adc
adc
fcomp
shl
add
or
push
outs
or
or
rcl
out
push
clc
jae
sbb
aaa
xor
daa
mov
jo
cmp
call
adc
aam
cmps
push
cmp
sbb
sub
inc
in
pop
inc
scas
xor
(bad)
mov
mov
pop
jnp
fistp
mov
sub
imul
mov
dec
push
es
xchg
dec
pushf
push
pop
dec
or
adc
popf
sbb
or
xchg
icebp
dec
gs
xchg
inc
(bad)
(bad)
outs
in
leave
(bad)
aad
push
shl
xchg
icebp
add
icebp
xchg
into
arpl
(bad)
cmp
in
mov
xor
dec
test
sbb
lea
xchg
fist
mov
loop
mov
jae
cmps
scas
icebp
inc
sbb
mov
ror
xchg
test
sar
into
sbb
mov
ds
shl
and
or
pushf
inc
push
mov
push
or
adc
inc
scas
pusha
test
push
add
pop
mov
add
je
or
stos
mov
test
fs
sbb
into
sbb
jmp
or
mov
arpl
adc
dec
push
in
mov
(bad)
int3
fwait
inc
dec
sub
cmc
or
retf
shl
pop
das
frstor
shl
mov
cmp
test
dec
outs
mov
rcr
xchg
test
xchg
shr
aam
push
lods
cmp
adc
iret
and
adc
je
dec
mov
fcomip
jo
rcr
nop
mov
pop
sbb
xlat
shr
mov
cmp
mov
xchg
arpl
out
xchg
mov
(bad)
nop
ja
in
repnz
movs
int
adc
in
cmps
inc
jbe
sbb
dec
fist
fsubrp
std
pushf
adc
mov
or
das
inc
les
xchg
mov
test
movs
mov
dec
jg
test
adc
jb
jo
(bad)
mov
out
pop
fwait
ja
into
into
(bad)
and
push
jno
sub
cdq
hlt
adc
and
(bad)
nop
(bad)
cmp
icebp
cmp
sub
push
out
cmp
cmp
fs
jp
or
cs
jnp
pop
or
push
inc
imul
xchg
sub
inc
push
add
pop
inc
test
jp
or
jae
(bad)
push
js
xor
pop
fst
cwde
ins
bound
lods
sbb
icebp
fidivr
and
xor
mov
sbb
cmp
add
aas
aad
pusha
jecxz
mov
sbb
js
jg
icebp
push
leave
mov
movs
xchg
jnp
push
xchg
loope
lds
daa
pop
mov
jae
xchg
inc
pushf
mov
iret
cmova
add
loopne
xor
(bad)
jmp
shr
jne
repnz
into
cmp
sbb
adc
xlat
cmc
pop
pop
pop
imul
pushf
inc
push
sub
xor
add
movs
ds
stc
dec
or
das
jo
lods
add
test
cmps
mov
mov
sub
push
adc
mov
xlat
loope
push
outs
retf
xor
test
mov
push
jle
jno
clc
pop
pusha
cmps
call
ds
jne
cmp
sub
shl
mov
fsub
stc
jb
dec
jp
ins
ja
scas
mov
int3
pop
addr16
lods
lds
fmul
call
imul
sub
jle
jg
mov
fimul
not
movs
call
xor
pop
jp
lods
gs
push
pop
mov
push
(bad)
adc
cmp
sbb
dec
cwde
pusha
xlat
aad
adc
mov
adc
outs
mov
push
pop
cmp
or
in
dec
retf
and
les
push
push
add
xchg
test
lock
(bad)
xchg
mov
ret
aam
rcl
push
pop
xchg
pop
jle
hlt
jg
mov
mov
mov
and
dec
test
and
sub
and
inc
dec
adc
sbb
mov
jge
xchg
dec
cmp
das
mov
push
ins
mov
cmp
xchg
cmps
inc
sub
out
outs
jge
add
rcr
cdq
data16
ret
and
rcl
leave
lahf
cmp
loop
sub
or
out
jl
inc
or
scas
fild
lods
ret
fist
sbb
push
mov
dec
sahf
sub
jg
leavew
fbld
cmp
sbb
fild
loop
outs
les
ror
icebp
clc
fld
ss
push
xchg
jno
and
inc
push
pop
dec
enter
stc
jp
pop
leave
pop
add
or
retf
lock
cli
jg
push
mov
xchg
(bad)
jp
inc
stc
fwait
js
loope
lock
xchg
pop
cmps
test
loope
(bad)
sbb
push
scas
fidiv
shr
(bad)
std
mov
gs
add
aaa
clc
enter
pop
push
jg
and
popf
std
or
leave
gs
xor
ds
adc
out
push
aam
push
movs
add
jmp
ret
add
inc
out
ret
xor
mov
int3
xchg
and
jne
mov
loope
aaa
or
mov
adc
imul
hlt
inc
and
fsubrp
mov
aas
div
mov
mov
adc
icebp
lods
clc
adc
cmp
lar
cwde
pop
jmp
cmp
pop
adc
nop
sub
addr16
adc
test
jmp
dec
and
addr16
shr
cdq
jmp
inc
lods
sbb
les
pop
aam
xlat
adc
das
dec
mov
cmc
sub
sbb
daa
cs
inc
xor
rcl
and
pop
add
dec
cmps
je
lods
pop
retf
sub
into
jle
ret
icebp
neg
pop
aam
mov
scas
repnz
add
inc
lahf
call
adc
gs
aaa
bound
js
mov
or
pop
dec
and
add
mov
sahf
movs
mov
test
dec
sub
ret
mov
push
xchg
dec
cmp
cli
in
push
shl
stos
scas
push
loope
jmp
stc
scas
in
jmp
repnz
sbb
cmc
mov
aad
dec
and
lahf
call
fxch
int3
nop
jo
pop
outs
mov
dec
in
daa
xchg
mov
and
jnp
mov
jmp
cmp
sub
fst
ror
ins
jle
in
out
shl
push
hlt
xchg
rol
add
jp
jns
test
daa
push
imul
pop
xchg
adc
add
sar
aas
in
aaa
adc
(bad)
lahf
mov
inc
(bad)
ins
mov
and
xor
and
into
pop
ins
not
and
data16
test
mov
pop
jp
jmp
jmp
gs
mov
mov
jns
movs
sahf
je
inc
push
sub
pop
add
mov
xchg
xchg
mov
cmps
lods
icebp
adc
mov
mov
pop
iret
jb
xor
arpl
pop
mov
add
inc
add
jnp
mul
sbb
add
and
jge
(bad)
sbb
cmps
mov
mov
imul
cli
arpl
out
cmp
(bad)
adc
jbe
rol
inc
push
mov
test
xchg
mov
pop
clc
jmp
inc
dec
xor
sbb
adc
mov
dec
in
dec
xor
movs
inc
in
dec
add
sub
cdq
and
scas
push
cs
out
ror
sar
and
lods
mov
sti
clc
retf
addr16
lea
jnp
pushf
xchg
mov
ins
mov
ins
pop
dec
jmp
jne
leave
sbb
addr16
out
mov
(bad)
xlat
stos
mov
lock
sub
aad
test
js
inc
and
mov
in
mov
jecxz
int
(bad)
stos
mov
jge
mov
in
inc
dec
xor
test
xchg
add
fwait
(bad)
fst
cs
pop
xor
mov
and
scas
sub
outs
inc
dec
icebp
and
ret
fbstp
in
cmp
cmps
jbe
add
dec
cmc
and
mov
pop
(bad)
sbb
pop
mov
fs
cs
(bad)
stos
xor
test
cmc
mov
stos
ror
loopne
cwde
gs
cmc
arpl
data16
add
mov
int
aad
ins
sbb
push
push
xchg
cmp
ret
mov
outs
adc
scas
test
xchg
gs
ds
scas
and
out
inc
xchg
mov
push
(bad)
cmp
mov
out
retf
inc
mov
dec
sti
aas
jg
cmps
iret
dec
dec
jecxz
or
sub
lock
cmp
mov
jno
cdq
xor
push
into
mov
dec
nop
enter
pusha
sub
xchg
sub
pusha
pop
dec
add
shl
cwde
mov
or
fsubp
cs
jmp
xchg
fwait
dec
or
xchg
lods
data16
scas
sub
mov
imul
or
shl
rol
fild
sub
iret
push
push
cmc
dec
(bad)
stos
push
and
cs
jge
inc
xlat
sbb
cmp
test
sbb
jge
repz
and
cmp
sbb
push
sbb
jo
pop
push
jno
push
ins
mov
shl
xlat
cmps
retf
xor
test
xchg
ds
nop
jge
push
sbb
adc
xchg
sub
int3
mov
mov
xchg
jo
fstp
add
mov
pop
out
clc
icebp
or
xchg
push
inc
push
aad
jmp
sbb
jp
test
in
inc
das
jmp
mov
cwde
repz
call
add
ret
ret
cmp
aaa
or
call
sub
mov
push
sar
xor
jg
push
shl
or
scas
jmp
xchg
push
add
fist
and
aaa
arpl
jae
stos
dec
ja
mov
adc
mov
(bad)
sahf
cdq
loope
cli
jmp
push
and
and
popf
dec
mov
inc
push
gs
mov
neg
jnp
mov
push
sbb
call
addr16
xchg
loopne
leave
xchg
or
pusha
test
mov
lock
mov
xor
or
mov
sub
sub
push
cmp
mov
dec
mov
rcr
call
ret
fisttp
retf
sub
inc
addr16
or
imul
fmul
dec
fdivr
out
retf
(bad)
jl
sub
lods
shl
cli
mov
in
sbb
inc
popf
xor
xor
mov
xor
mov
(bad)
jmp
inc
cmp
cs
mov
lods
push
ins
(bad)
iret
adc
popa
or
cmp
cs
xchg
inc
xor
dec
push
jecxz
lods
ins
or
mov
fist
and
lods
(bad)
fild
add
xchg
cld
imul
mov
loope
mov
inc
mov
fcomip
cmps
and
sub
mov
sbb
adc
inc
sbb
sub
ror
mov
rep
lock
push
add
fstp
idiv
push
mov
mov
and
pop
fcom
retf
(bad)
xor
out
xchg
into
js
cs
adc
sub
fiadd
push
shl
inc
cmp
xchg
xor
outs
sbb
and
out
ds
mov
inc
add
lahf
add
adc
retf
adc
jb
pop
pop
stc
loopne
pop
inc
js
xor
mov
inc
xchg
mov
xchg
pop
sbb
xchg
xor
xchg
mov
xchg
fldcw
xchg
dec
xchg
inc
(bad)
and
or
add
xchg
ret
adc
mov
jmp
cmp
in
adc
enter
jmp
stos
mov
inc
adc
es
loopne
shl
add
push
lds
call
dec
push
std
dec
pop
lds
in
mov
shl
movs
add
dec
fnstenv
cld
sbb
sbb
add
gs
jge
xchg
add
fs
out
inc
icebp
dec
dec
popf
sbb
stos
jg
cmp
loop
dec
daa
fild
xor
adc
mov
out
pop
adc
popf
jno
xor
pop
mov
xchg
jmp
dec
add
nop
push
mov
mov
mov
fist
add
data16
imul
ret
sar
adc
lods
hlt
xlat
aam
and
repnz
fs
sbb
gs
repnz
push
inc
movs
pushf
(bad)
fs
jo
xor
fisubr
mov
mov
push
pop
dec
es
adc
mov
loope
(bad)
leave
mov
mov
je
sub
scas
cdq
sar
in
fiadd
adc
mov
xchg
je
mov
add
inc
cdq
mov
pushf
push
cld
mov
pop
sub
dec
push
mov
outs
push
test
sbb
fcom
rol
push
mov
and
jge
add
cmp
mov
xchg
pop
(bad)
sub
hlt
imul
out
jecxz
mov
or
dec
dec
inc
ins
popa
sar
mov
rol
push
mov
ins
sub
xchg
xchg
ja
sub
xor
js
cli
out
inc
push
or
inc
xchg
popf
lods
mov
and
cmp
aad
push
dec
adc
pop
test
sub
test
scas
call
jno
loope
por
jb
rol
adc
fcmovbe
xchg
dec
lahf
inc
jg
jmp
pop
mov
pop
inc
mov
and
add
and
rol
hlt
cs
pop
test
inc
or
mov
ret
loope
lds
xor
push
add
dec
stos
movs
cld
cld
mov
mov
das
add
xchg
pop
imul
retfw
in
scas
mov
sbb
daa
and
(bad)
push
mov
mov
mov
dec
repnz
xor
cmp
into
and
and
test
jge
mov
mov
cwde
pop
mov
sti
jle
cmp
cmp
push
inc
mov
test
mov
(bad)
push
shl
lods
or
sub
cmp
or
aaa
call
inc
xor
dec
inc
out
pop
add
(bad)
pop
not
fucomi
xlat
and
mov
xchg
lea
sub
lods
xor
mov
add
outs
xchg
nop
call
sar
and
stos
(bad)
fisttp
call
ficom
pop
(bad)
mov
add
frstor
in
xchg
cdq
icebp
cmp
dec
movzx
sub
mov
pop
inc
je
iret
std
les
lahf
popf
out
ret
lds
in
push
pusha
xor
ss
arpl
dec
mov
retf
movs
out
pop
jecxz
adc
bound
fdivr
out
push
jnp
xor
lahf
test
dec
pushf
shr
jbe
hlt
movs
mov
push
or
mov
mov
in
cmp
(bad)
div
sub
mov
jb
pop
sbb
iret
es
test
cmp
push
(bad)
jl
mov
jmp
jne
add
pop
inc
xchg
pop
out
popf
loop
mov
cli
ja
into
ret
shl
inc
addr16
adc
stos
pop
add
fisubr
push
and
cmps
mov
mov
scas
test
push
mov
rcr
jl
dec
loop
xlat
mov
pop
int
mov
or
cli
dec
loop
pop
cmp
rcr
sahf
and
or
iret
mov
push
mov
or
aam
dec
xchg
fucomp
xlat
mov
das
loop
mov
rcl
mov
cmp
imul
dec
dec
push
es
(bad)
push
ret
test
inc
xchg
add
inc
addr16
fmul
mov
or
clc
xchg
(bad)
dec
pop
neg
xchg
stos
cmp
retf
dec
or
xchg
lods
mov
mov
xlat
adc
cmp
repz
fs
push
dec
pop
add
adc
mov
pop
ins
mov
ins
pop
adc
pop
retf
shl
cmp
xchg
jno
fcmovnbe
adc
gs
adc
rcl
in
mov
cmp
aam
jp
(bad)
in
jecxz
xchg
fdivr
in
call
xor
sub
push
xor
push
pop
xor
cmp
mov
jge
shl
mov
or
mov
dec
daa
pop
adc
or
das
jmp
adc
push
pop
xchg
xor
mov
mov
adc
cli
jno
mov
xor
out
add
sbb
test
sub
jno
sbb
or
dec
pop
lods
aas
test
adc
mov
ins
enter
cmp
clc
pop
pop
mov
ss
fisttp
sub
retf
adc
test
or
or
or
arpl
push
adc
inc
out
lock
pop
push
cmp
and
inc
popf
mov
aas
xchg
scas
sbb
xchg
push
cmc
aad
xor
rcl
ss
add
shl
cmp
mov
repz
je
jle
or
push
dec
es
xlat
push
jg
push
jne
shr
movs
mov
mov
repz
enter
xor
jo
pop
in
push
cmp
int3
and
fwait
ja
loope
or
push
fdivr
xchg
ror
or
pop
jg
pop
add
test
out
inc
add
das
cmc
fsub
inc
mov
pusha
cmp
and
push
jp
fisubr
and
add
fldenv
and
mov
and
and
mov
fld
cmp
mov
sbb
sti
add
mov
aaa
les
out
test
arpl
mov
cmp
sub
xor
mov
mov
imul
jmp
fisubr
jb
call
movs
inc
pop
xor
add
cmp
outs
cdq
adc
inc
adc
jne
xchg
mov
cmps
adc
mov
mov
push
xlat
push
cmp
mov
inc
inc
test
fld
pop
cmp
add
jo
loope
mov
ret
push
cli
cmp
adc
in
rcl
int3
(bad)
pop
inc
hlt
enter
imul
test
sub
xchg
pop
test
mov
adc
xor
dec
icebp
xor
jbe
mov
cmp
aas
mov
add
pushf
inc
jle
sbb
or
push
mov
ds
sar
fild
arpl
test
cli
retf
in
xor
xchg
stos
sub
or
or
(bad)
jp
inc
mov
ins
loop
cdq
pop
push
inc
mov
lea
js
xchg
mul
jae
pop
aas
adc
fs
xor
cdq
sub
not
lds
scas
xchg
xchg
int3
dec
ds
jmp
mov
(bad)
xor
adc
cmp
cmp
add
dec
jo
dec
adc
cmp
ret
pushf
and
clc
std
mov
out
fidivr
add
test
cmp
mov
aad
dec
aas
push
jmp
repnz
loopne
mov
loop
jns
adc
rep
into
add
push
js
mov
je
inc
pusha
fild
scas
push
mov
mov
push
xchg
xchg
xchg
dec
fbld
mov
sar
xor
inc
xchg
cs
mov
out
jge
popf
scas
xchg
or
movs
sar
stc
shl
or
sbb
jbe
dec
xchg
rcr
or
cmps
xor
xor
js
mov
popa
in
mov
add
fsubp
mov
(bad)
push
cmc
add
cdq
out
jmp
adc
mov
leave
or
xchg
iret
adc
and
addr16
xchg
test
fs
mov
ss
retf
add
and
xchg
clc
jno
lock
push
lahf
jb
pop
nop
xor
dec
pop
das
cmp
xchg
out
mov
xchg
pop
aaa
adc
pop
push
cmps
inc
outs
inc
test
in
adc
inc
jae
mov
icebp
sub
push
adc
cmc
stos
sub
(bad)
jp
iret
and
cmps
das
xor
mov
sbb
pop
(bad)
ins
scas
leave
(bad)
jge
sbb
test
xor
sbb
mov
nop
shl
inc
int3
je
dec
jbe
sub
push
push
pop
xchg
outs
fisttp
jno
inc
or
jle
cmps
dec
test
scas
add
xor
adc
outs
or
mov
leave
test
jle
pop
inc
xchg
jns
push
pop
pop
fwait
loopne
addr16
add
dec
push
bound
test
push
retf
cmp
and
dec
xor
xchg
inc
out
loop
inc
xchg
je
jnp
pop
adc
xchg
ss
cdq
adc
cdq
dec
xchg
repz
inc
lock
sbb
lds
aad
lods
mov
adc
test
mov
xchg
fcomp
and
(bad)
mov
adc
test
push
movs
or
lods
pop
aaa
movmskps
jbe
sbb
push
mov
ins
rcr
fimul
fist
clc
out
hlt
and
or
mov
pop
add
sbb
inc
scas
jecxz
add
outs
cld
push
or
imul
repnz
js
loope
cmc
push
pop
jae
inc
pop
cmps
dec
jge
jmp
hlt
sbb
pop
push
or
nop
xor
sub
sbb
jb
dec
cmp
push
and
mov
sub
hlt
mov
sub
and
cmps
push
cli
fimul
shl
pop
adc
jno
cmps
jp
pusha
jnp
iret
adc
sbb
mov
leave
(bad)
and
inc
inc
sub
and
daa
jecxz
cmp
sub
cld
mov
mov
push
pop
and
xor
add
loope
das
cmp
lods
ret
aaa
cdq
sub
sti
out
inc
dec
sbb
es
enter
adc
enterw
mov
cdq
loop
in
outs
loop
inc
in
pop
hlt
hlt
xor
or
xor
inc
push
nop
or
(bad)
ja
xlat
mov
cdq
test
or
dec
fisttp
cmp
and
sbb
jl
xor
lahf
adc
lds
inc
data16
test
bound
add
push
sbb
add
push
inc
enter
gs
add
or
leave
nop
pusha
ins
stos
enter
mov
loope
stos
fiadd
inc
fild
push
retf
pop
mov
es
test
and
mov
xor
lods
data16
pop
mov
in
lea
lods
jecxz
shl
jnp
outs
inc
test
rcr
or
push
dec
xchg
fistp
xchg
inc
adc
cmp
add
mov
in
mov
mov
sub
cmp
and
or
test
push
ds
jg
cmps
and
sub
stos
sub
jne
loope
inc
mov
dec
jbe
sub
mov
stc
fstp
push
adc
stos
mov
xchg
leave
pxor
inc
inc
test
stos
sbb
sbb
push
data16
pop
mov
mov
movs
inc
cmp
xchg
inc
ins
xchg
dec
ja
cdq
pop
inc
fist
mov
in
(bad)
clc
(bad)
addr16
cwde
jmp
add
pop
add
lock
sub
hlt
and
shr
xchg
mov
ret
scas
mov
ret
fdivr
int3
mov
(bad)
fistp
xchg
lock
pop
dec
inc
addr16
outs
jecxz
leave
cmp
add
cmp
das
icebp
push
push
sub
xlat
retf
fdiv
xchg
sbb
lds
int
cmp
xlat
sahf
leave
jl
(bad)
call
push
push
add
inc
enter
pusha
cmp
add
xchg
(bad)
fdiv
sbb
shl
inc
sub
imul
fldenv
shr
shr
jecxz
lea
dec
cli
xor
inc
xchg
and
rol
and
in
mov
aam
loopne
into
div
push
mov
inc
shr
cmps
loop
mov
dec
mov
jbe
not
les
pop
push
or
and
ror
fld
ss
mov
mov
dec
dec
ins
cmc
xor
or
dec
inc
(bad)
out
cmp
mov
cmps
cs
jb
or
mov
mov
xlat
or
xchg
xchg
mov
push
outs
in
movs
aas
out
lods
fs
pop
sub
dec
rcl
cmp
cmp
iret
mov
sbb
stos
inc
loopne
cwde
mov
das
jnp
xchg
cmp
lods
lods
outs
ins
cli
fsub
mov
jbe
aaa
dec
je
inc
and
cwde
rol
xchg
xor
inc
(bad)
cmp
sub
retf
sub
ret
pusha
repz
add
je
(bad)
and
jge
or
or
add
retf
je
popa
push
and
xlat
shr
addr16
push
(bad)
fsubp
sbb
sbb
cmp
icebp
jo
gs
add
ror
outs
cmp
sbb
add
outs
mov
pop
dec
iret
add
sub
arpl
sahf
aad
cmp
popf
adc
test
adc
mov
fldenv
push
inc
sahf
xchg
sub
inc
cmp
sahf
pop
dec
jne
mov
ins
sbb
(bad)
icebp
(bad)
popa
pop
int
and
jecxz
mov
mov
movs
fs
cwde
das
ror
jbe
push
push
stc
jno
test
mov
dec
frstor
jl
xor
add
js
in
je
inc
test
popf
inc
inc
push
sbb
push
inc
retf
inc
gs
inc
movs
adc
sbb
cli
mov
xchg
dec
pushf
jecxz
loop
popa
loop
nop
bnd
cmp
inc
dec
das
jnp
(bad)
push
sbb
mov
sti
mov
and
push
stos
xor
jle
iret
ret
push
sub
hlt
xor
sub
add
xchg
add
mov
sbb
addr16
xchg
mov
or
ret
clc
push
es
or
ins
ror
cmp
inc
pop
int
aad
push
inc
cli
add
cmp
sahf
mov
add
and
out
and
add
adc
and
pop
hlt
iret
gs
sbb
dec
mov
sbb
jge
adc
mov
popf
ss
sbb
ror
cmp
stos
pop
jg
(bad)
mov
lods
dec
add
or
xchg
or
add
cmp
push
or
push
and
mov
sti
leave
fidivr
mov
aas
or
and
pmuludq
sti
or
ror
xchg
dec
arpl
lds
adc
jno
enter
xor
xor
adc
lds
jg
iretw
inc
pop
or
mov
push
mov
movs
fcomp
jmp
push
cmp
xor
sub
pusha
xchg
iret
ret
gs
lods
int3
lods
xor
mov
lds
aas
lods
cmp
dec
into
(bad)
cli
jns
inc
movs
pop
mov
add
or
jne
mov
mov
pop
xor
mov
xchg
mov
mov
mov
cwde
ret
sti
test
loopne
push
sahf
mov
test
inc
mov
out
mov
inc
out
repnz
aad
xchg
jbe
mov
imul
jns
movs
rcr
(bad)
loopne
addr16
je
sbb
dec
int
jb
scas
mov
not
stos
and
and
stos
pop
aad
hlt
mov
(bad)
dec
shl
mov
mov
lds
and
jle
inc
sbb
jecxz
push
push
sub
cwde
xor
leave
mov
adc
dec
xor
jae
mov
jns
pop
pop
ins
cmc
in
mov
xor
pop
sub
test
test
dec
test
imul
sbb
cmp
mov
mov
imul
jne
movs
xchg
cli
xchg
sahf
in
scas
sahf
mov
movs
xchg
sbb
mov
retf
cmps
mov
cmc
mov
push
dec
mov
imul
xor
add
inc
ins
xor
xor
sub
mov
add
and
mov
shr
pop
sub
sbb
mov
push
xchg
fmul
xchg
mov
jle
fistp
arpl
sbb
dec
mov
xchg
xlat
and
push
adc
call
loopne
push
add
pop
or
adc
rol
fdiv
or
pusha
bound
pop
and
dec
add
or
push
sbb
mov
mov
(bad)
dec
es
out
pop
jb
and
out
cmovp
out
sub
out
ficom
sub
(bad)
or
sub
xor
xchg
pop
push
inc
mov
cmp
jns
xlat
rcl
out
dec
pop
shl
push
push
les
mov
or
push
fld
shr
rcl
dec
pusha
mov
mov
pop
mov
in
sub
push
cmp
pop
add
imul
and
push
adc
xchg
sub
or
jbe
out
cwde
mov
cmps
dec
pop
pushf
add
xchg
pop
icebp
cmc
ret
fdiv
(bad)
or
movs
lods
les
xchg
xchg
cmps
idiv
pop
inc
lahf
sub
sbb
call
mov
cwde
inc
ficom
les
mov
mov
cmc
out
xor
stos
push
fld
mov
cmp
mov
shr
rcr
lods
shl
push
xor
adc
pop
loopne
and
loop
dec
push
xchg
mov
push
mov
jle
push
lods
sahf
xor
inc
cmp
neg
movs
in
jae
jns
out
mov
inc
xor
sbb
shl
dec
call
out
or
add
and
jnp
jp
mov
data16
int3
sub
in
inc
jl
mov
jmp
lods
fsub
pop
lds
ins
ds
outs
lock
fdivr
xor
lods
add
xchg
push
jp
adc
pop
ret
sub
jns
out
pop
cdq
test
inc
stos
or
mov
mov
cmp
nop
adc
jne
repz
sbb
push
(bad)
out
call
inc
ja
mov
out
jl
mov
leave
xchg
loopne
pop
adc
mov
fwait
lods
jbe
push
ds
shr
fwait
sub
jmp
lods
test
pop
or
push
xchg
xor
lea
mov
inc
lsl
shl
dec
jns
ss
test
mov
sar
(bad)
ficom
bound
adc
lea
loop
fnstsw
add
add
jmp
pop
xchg
sub
sti
adc
adc
adc
mov
nop
mov
sub
pop
retf
cld
cs
sbb
jo
nop
leave
cmc
scas
fs
inc
sahf
add
lods
call
adc
push
lods
mov
rcr
add
sbb
adc
into
mov
lods
aas
mov
in
test
mov
mov
out
sar
or
xlat
lahf
mov
adc
fcom
jle
add
dec
call
and
gs
popa
test
popf
sbb
jae
adc
lock
xchg
mov
cmps
mov
xchg
sbb
mov
dec
push
pop
fdiv
ins
shl
push
xchg
sub
test
ins
shl
add
mov
call
mov
imul
in
push
int
out
aaa
push
je
dec
cld
popf
xor
int
mov
mov
jg
shl
imul
cli
cmps
ss
cmps
mov
cmps
loop
pusha
sub
or
adc
data16
test
sar
addr16
jno
dec
inc
xor
in
push
mov
(bad)
mov
or
and
push
or
dec
push
addr16
jb
dec
iret
int3
xor
sbb
add
add
adc
gs
mov
adc
test
and
mov
jle
fld
push
hlt
mov
mov
add
sbb
and
jmp
call
mov
push
aas
ret
cdq
sub
imul
cmovae
(bad)
hlt
fcomi
fsub
xor
mov
push
ret
test
xchg
movs
cmps
push
jmp
fwait
aaa
cmp
sbb
cs
(bad)
push
movs
in
mov
mov
mov
in
mov
(bad)
into
push
jns
mov
mov
push
dec
inc
mov
lahf
push
popf
push
rcl
jb
adc
add
jb
cmp
fimul
add
jne
mov
sub
add
loope
mov
mov
add
test
dec
xchg
fcmovnu
jg
das
sti
push
call
push
adc
scas
sub
aaa
ret
push
xchg
jne
sbb
push
mov
inc
(bad)
dec
push
out
shl
jb
cmp
xchg
adc
int3
dec
rcl
in
pusha
stos
add
mov
test
push
cmp
cmp
cmc
push
sub
arpl
enter
(bad)
mov
movs
jnp
fbstp
aad
inc
mov
test
pop
push
daa
xchg
mov
out
jb
push
jmp
mov
or
cmp
retf
inc
xchg
push
fsubr
mov
or
ins
or
sub
and
xchg
jns
xchg
push
mul
cmp
jo
stos
xor
loop
xchg
sbb
dec
mov
sbb
adc
sti
ja
adc
inc
jg
mov
sub
pop
and
imul
in
adc
pop
int
xchg
cmp
cmp
adc
es
test
pop
(bad)
(bad)
movs
jnp
mov
mov
into
clc
adc
adc
lea
and
add
cmp
pop
mov
mov
sub
jmp
xlat
mov
loope
pop
jmp
xor
push
sahf
les
mov
pusha
sahf
add
xor
add
out
mov
es
sub
nop
mov
pop
dec
xor
cmp
ins
and
call
add
add
jge
push
fild
dec
lds
mov
pop
into
add
cmp
popf
jp
or
js
outs
out
ss
ins
in
mov
mov
sbb
lods
popa
or
idiv
repnz
(bad)
fist
aad
or
xchg
push
imul
fisub
or
lods
fimul
dec
pushf
and
sbb
and
mov
mov
rol
dec
mov
repz
push
rol
sbb
mov
cdq
call
outs
push
cmps
js
add
cs
xchg
cli
dec
repz
mov
pop
data16
xor
(bad)
mov
pop
movs
lds
(bad)
popa
gs
pop
mov
sti
or
aad
(bad)
jmp
iret
mov
cmp
in
mov
cli
xor
jmp
jecxz
out
mov
fsubr
inc
push
cmps
and
mov
cmp
ja
adc
push
adc
jne
test
dec
dec
lahf
mov
test
fstp
xor
cld
fidiv
aaa
retf
sub
adc
push
push
fs
(bad)
punpckhdq
js
jmp
mov
xor
dec
sahf
jmp
call
xchg
rol
cs
aaa
stc
mov
and
movs
adc
in
push
sub
inc
xchg
setl
xor
fcmovne
add
int3
pop
js
iret
retf
iret
int
aad
mov
enter
jmp
jmp
mov
mov
mov
sub
retf
sub
test
pop
mov
xor
and
jp
nop
jnp
jg
mov
cmp
ins
pop
sbb
cmp
out
sbb
cld
mov
loop
mov
add
(bad)
or
loopne
mov
mov
nop
test
push
cmp
dec
and
repnz
loop
sti
dec
mov
iret
cmps
aas
mov
loope
loope
xchg
mov
sub
mov
sub
stc
outs
in
jg
xchg
not
mov
stc
cwde
cmps
and
xchg
je
test
sbb
mov
jmp
movs
lods
fld
mov
les
rol
movs
hlt
dec
adc
jmp
adc
lods
hlt
and
ins
mov
mov
inc
pop
sub
out
mov
out
fiadd
mov
xchg
call
push
pop
movs
test
jg
out
inc
dec
gs
inc
dec
cmc
xor
mov
daa
push
sar
sbb
daa
lock
xor
je
xor
lock
and
dec
sub
stc
ins
sub
push
nop
sahf
pop
mov
add
fld
in
push
movs
test
jmp
jns
(bad)
cld
dec
fisttp
add
(bad)
nop
das
pop
sub
mov
fcmovu
cmp
test
retf
pop
xor
xchg
cmp
aaa
push
ret
sub
rcl
aaa
cmp
leave
in
jp
or
cmp
sub
into
pop
cmp
leave
int3
push
mov
iret
daa
pop
pop
mov
out
push
in
jb
aas
and
fdivr
(bad)
jnp
or
cmp
and
test
pop
inc
cmp
xor
das
mov
rol
mov
bound
or
jno
xchg
add
int
add
(bad)
jne
cmp
ret
out
or
cmp
fsub
xor
popa
mov
nop
stos
cmps
cmps
hlt
push
in
shr
cdq
(bad)
aas
mov
cmp
sub
scas
jnp
adc
push
or
adc
lods
cmp
xor
jnp
fs
push
out
jmp
data16
out
jae
ret
cmp
aam
or
outs
add
push
push
jl
mov
loop
mov
out
sub
xchg
popf
fstp
inc
mov
xor
pop
not
push
jns
mov
push
aam
retf
enter
jmp
push
inc
jb
push
pop
pop
push
jge
adc
inc
mov
dec
aad
out
scas
icebp
ret
xor
imul
mov
lds
jg
mov
pushf
inc
jg
dec
std
dec
bts
inc
adc
fisub
popa
mov
cmp
sahf
std
or
retf
ret
aam
cmp
xor
es
adc
and
stos
push
jecxz
hlt
std
retf
fsub
lds
push
mov
dec
mov
cmc
xchg
mov
inc
mov
pushf
in
mov
pop
cmp
push
dec
cmps
xchg
cs
enter
test
mov
xor
jbe
fwait
call
cmps
mov
mov
cmp
mov
addr16
(bad)
daa
scas
enter
movs
and
xlat
xor
inc
add
mov
jae
(bad)
fwait
lea
sub
xor
xchg
xchg
push
jbe
cmovne
mov
xchg
imul
jmp
or
jae
add
mov
sar
dec
fdiv
pop
jl
mov
movs
jne
mov
push
pop
mov
(bad)
pop
pop
popa
out
push
mov
sbb
jns
imul
je
push
aam
push
arpl
stos
pop
icebp
dec
xchg
shl
pop
jno
jno
mov
fimul
push
sbb
xchg
pusha
ret
loopne
outs
retf
cmp
jmp
les
popa
add
mov
jno
cmp
mov
jae
pop
pop
push
sbb
gs
jg
inc
sahf
dec
fidivr
jo
adc
repnz
cmps
inc
js
mov
jno
mov
scas
stos
push
retf
ret
lods
in
add
and
aam
xor
cmp
mov
push
jne
push
lds
test
push
out
nop
push
sbb
call
xchg
push
iret
jo
inc
fld
xchg
retf
cld
xchg
push
jmp
dec
bound
xor
add
xchg
xchg
xor
mov
in
cmps
push
(bad)
loop
xchg
adc
ret
jle
(bad)
cmp
icebp
aas
mov
sar
test
scas
ret
fidivr
jl
adc
mov
pop
pop
das
mov
in
jecxz
(bad)
in
xchg
imul
adc
out
push
pop
or
jbe
aas
pushf
xchg
xor
jle
mov
push
push
lea
push
test
inc
mov
daa
das
xchg
jo
pushf
or
mov
fs
arpl
sub
stos
sub
test
shl
rcl
mov
push
into
clc
mov
xor
xchg
dec
inc
or
inc
test
fild
mov
cs
cwde
js
shl
jmp
mov
out
repz
mov
int
mov
mov
int
or
sbb
mov
or
mov
rcl
add
dec
pushf
popa
inc
xor
jae
ror
mov
xchg
sar
out
mov
adc
cmp
pop
adc
jbe
das
sbb
lock
cli
jge
mov
sub
mov
mov
sahf
cld
aas
jne
loopne
xchg
rol
popa
jmp
inc
imul
sub
pop
mov
idiv
xor
or
jge
test
xchg
mov
addr16
mov
sub
call
push
jmp
add
sti
push
or
xor
cmp
out
retf
int
jecxz
mov
loop
jno
(bad)
clc
sahf
lock
cmps
inc
cmp
ja
mov
xor
mov
sbb
jbe
sbb
dec
int
and
int3
or
call
cld
mov
add
cmp
push
mov
das
xor
nop
ins
dec
push
(bad)
ja
aad
sub
pop
pop
jmp
fistp
je
(bad)
mov
xor
jno
mov
sub
sti
rcr
out
jae
pop
shr
push
inc
and
push
adc
dec
inc
pop
xchg
out
or
ret
(bad)
fidivr
dec
clc
aas
inc
outs
stos
mov
lock
cmp
clc
inc
dec
inc
sbb
cmp
hlt
xchg
mov
rol
mov
test
xchg
sti
loope
pop
xor
cmps
xchg
add
mov
ja
ja
xor
push
lea
out
or
or
in
push
inc
pop
push
jo
repnz
shr
dec
push
jmp
mov
ds
pusha
in
and
jle
inc
or
ds
inc
mov
mov
push
mov
dec
cmp
cmps
fcmovbe
cli
jo
jg
stos
stos
and
dec
mov
or
scas
and
push
or
inc
out
push
and
mov
fs
adc
xor
pop
ins
pop
lahf
fisttp
fs
test
pop
pop
pop
iret
shl
popf
mov
mov
scas
test
push
dec
(bad)
fidivr
ds
loope
mov
pop
mov
into
add
sbb
sbb
push
call
jl
xchg
pop
(bad)
jle
lahf
jl
jnp
or
inc
dec
loopne
repz
add
loope
mov
add
fstp
mov
or
aas
cmc
shl
inc
and
xor
jp
scas
fcom
adc
shl
inc
not
cmp
mov
xor
test
and
mov
mov
stc
xor
cld
or
mov
mov
jae
inc
xchg
mov
cmp
fimul
pop
inc
ins
mov
clc
adc
or
ja
int
sub
cmp
ffreep
xchg
or
mov
mov
call
(bad)
mov
test
pop
adc
xor
cdq
adc
iret
cmp
and
retf
mov
add
ror
cmps
movs
stos
jecxz
push
dec
jmp
and
inc
cdq
loopne
outs
xchg
pop
xor
sub
shr
int3
jb
addr16
in
jg
(bad)
int3
ror
mov
leave
enter
jmp
push
cmp
dec
sub
repz
cmp
and
outs
fsub
xchg
pushf
jmp
fdivr
js
sbb
push
push
pop
xchg
movntq
out
or
das
mov
test
fwait
jl
enter
xor
stc
cmp
and
shr
xchg
stos
retf
push
adc
dec
and
pusha
mov
shr
push
lds
push
loopne
ss
imul
(bad)
cwde
test
hlt
add
test
cmp
leave
bound
mov
or
lahf
jp
or
js
pop
adc
inc
call
push
iret
(bad)
mul
inc
inc
jge
mov
retf
or
enter
xor
pop
and
or
add
inc
sbb
popf
pop
or
ds
and
add
add
push
jb
xor
in
jmp
aad
rcl
stos
inc
hlt
sub
cs
dec
ins
cmp
int
ror
adc
jnp
imul
dec
fldenv
and
cmp
lods
xchg
ror
call
stc
push
mov
aaa
out
fidivr
into
cmp
aam
inc
xor
jnp
retf
and
sbb
mov
cwde
mov
pusha
mov
add
in
mov
push
pop
pop
mov
mov
pop
popa
mov
repz
jo
ror
jmp
and
jns
aas
cmp
enter
mov
rcr
and
cld
mov
fidiv
inc
and
test
stc
xchg
cld
adc
repz
cmp
mov
retf
sbb
sbb
out
and
into
imul
setl
mov
repz
mov
dec
sub
inc
test
imul
jbe
sub
clc
fs
js
mov
leave
push
jb
ret
call
movs
mov
retf
ret
into
jo
(bad)
call
push
scas
pop
movs
das
sub
rol
inc
(bad)
inc
test
out
int3
rcr
adc
or
pop
fwait
push
ins
fdivr
pop
lea
push
mov
(bad)
push
inc
sbb
out
or
push
lods
pop
js
xlat
dec
lods
and
add
dec
outs
mov
and
pop
inc
push
sti
sub
cmp
movs
cmc
push
mov
jge
cmc
xor
inc
stos
gs
je
cmc
scas
or
jo
into
cs
rol
outs
mov
xor
fbld
and
fcmovnb
mov
outs
mov
imul
inc
dec
adc
pop
enter
hlt
xchg
pop
or
mov
mov
ret
add
or
das
adc
aas
(bad)
rcr
xor
call
lock
jp
test
xor
lea
xlat
test
mov
loop
push
dec
sbb
leave
jno
ja
retf
sub
repnz
fnsave
imul
int3
and
sbb
sahf
cmp
call
ss
ror
inc
(bad)
movs
rcr
jne
push
sbb
mov
dec
stos
sbb
inc
jle
xlat
pop
ds
dec
cmp
dec
push
push
xchg
cmps
gs
dec
stos
jle
test
sub
rcl
adc
mov
shl
movnti
gs
inc
mov
(bad)
popf
add
pop
sub
out
rcr
bound
sbb
mov
xchg
add
dec
call
sti
and
in
inc
xchg
xor
or
adc
cmp
idiv
pop
popa
pop
fwait
and
sub
jge
adc
adc
cmp
and
inc
push
scas
sahf
repnz
mov
out
pushf
cmp
rcl
or
pop
jae
call
cmp
rol
pop
cdq
shufps
xchg
aam
out
xchg
xor
push
rcl
adc
shl
sub
sbb
and
pop
pop
clc
xor
retf
stos
jp
jo
icebp
scas
leave
call
mov
xchg
rcr
jno
xchg
jg
cmps
repz
push
push
mov
gs
mov
mov
push
mov
mov
sbb
pop
dec
mov
and
mov
clc
bound
stos
(bad)
ffree
jne
jmp
or
bound
int3
mov
xlat
pop
ficom
es
mov
cmp
pop
or
rcr
pop
cmp
arpl
ret
adc
aad
inc
hlt
scas
daa
frstor
adc
sub
xchg
xchg
dec
shl
in
das
pop
pop
aas
and
shr
shl
into
fisub
neg
test
jno
cwde
daa
cmp
xor
xor
cmp
sar
xchg
test
push
std
adc
xor
mov
(bad)
cmp
arpl
pop
adc
mov
fisubr
out
or
pop
mov
(bad)
xchg
cmps
aad
xor
sbb
jle
mov
jae
xor
push
rol
jnp
mov
std
xchg
cmp
push
imul
inc
add
mov
and
jecxz
int3
inc
(bad)
out
test
loop
push
inc
fmul
or
shl
outs
aam
mov
jg
jg
cmps
das
cmp
int3
sub
(bad)
adc
jge
imul
mov
jmp
pop
loope
pop
outs
sbb
in
jbe
fiadd
aad
test
xchg
ret
pushf
jp
das
nop
adc
dec
adc
jnp
adc
and
out
retf
dec
dec
jle
test
xor
inc
test
jge
jge
test
adc
mov
jnp
mov
sti
(bad)
adc
jge
push
mov
mov
mov
pusha
lods
nop
cmp
shr
icebp
call
adc
inc
mov
jp
outs
mov
cmp
call
ret
addr16
(bad)
aad
add
xchg
fistp
cs
xchg
in
les
ror
in
int
ja
(bad)
xchg
fld
cmp
(bad)
jnp
(bad)
bnd
psubd
inc
or
std
cmps
and
into
ja
jo
cmp
add
add
repz
push
loop
aaa
lds
push
xor
(bad)
and
adc
test
out
jb
inc
adc
xchg
push
icebp
out
mov
sub
cmp
(bad)
bound
jbe
cli
fadd
das
sahf
(bad)
ins
adc
sub
dec
std
jl
outs
xchg
xchg
in
add
shr
sbb
out
jae
inc
in
and
mov
inc
mov
loop
stc
ds
pop
aas
mov
retf
retf
pop
in
sub
xchg
push
sub
dec
idiv
sub
sbb
and
mov
sub
out
ret
fnstcw
ret
div
add
xor
push
cwde
xchg
aaa
and
movs
out
and
out
push
sahf
push
push
inc
cmp
push
scas
fdivr
fld
dec
xlat
xchg
sub
ficomp
pop
(bad)
movs
and
inc
es
cmps
and
and
(bad)
push
jl
sbb
sti
pusha
(bad)
push
movs
add
jmp
pop
call
xor
das
(bad)
cld
mov
and
cmp
dec
push
neg
add
fcom
cmps
dec
inc
idiv
pop
xchg
inc
cwde
mov
xchg
inc
and
cmp
sub
into
or
push
pop
pop
(bad)
xchg
sbb
xor
mov
push
xchg
je
data16
cmps
inc
xor
or
inc
dec
leave
mov
mov
jmp
jmp
mov
adc
jmp
rol
stos
dec
sub
push
mov
out
pop
dec
mov
aad
fcmovu
push
cld
push
jbe
in
addr16
jno
data16
mov
je
call
mov
in
(bad)
adc
fcomp
inc
mov
and
cwde
test
test
into
jno
iret
les
sub
xchg
fldenv
retf
mov
add
pop
adc
inc
mov
aas
gs
jo
push
les
jp
adc
mov
sbb
mov
push
repnz
xchg
inc
mov
in
sub
dec
test
cmp
push
neg
push
xor
jbe
mov
dec
push
idiv
pop
push
sub
test
stos
js
dec
inc
std
das
enter
jle
push
mov
(bad)
mov
repnz
inc
inc
mov
xchg
pushf
std
mov
push
stos
push
movs
push
movs
jge
adc
add
sub
jae
ss
jnp
add
into
outs
fld
push
push
and
movs
leave
test
jmp
loopne
out
push
mul
in
loop
call
sub
and
pop
cs
sbb
leave
adc
repnz
mov
rcr
push
push
ds
dec
mov
retf
adc
retf
mov
sbb
and
dec
pop
xchg
mov
pop
(bad)
xchg
imul
pop
hlt
cwde
jecxz
out
inc
adc
push
sub
pop
and
fabs
shl
loope
je
gs
sbb
call
inc
movs
ja
retf
cmp
fdivr
jne
pop
test
inc
(bad)
bound
sbb
jecxz
fs
cdq
xchg
fidiv
inc
ins
mov
rol
ret
inc
dec
dec
out
push
ret
js
scas
mov
aaa
ret
fwait
movs
mov
and
pop
aas
imul
jle
adc
mov
mov
aaa
daa
dec
into
hlt
fisub
jecxz
faddp
mov
pop
and
mov
test
test
(bad)
in
and
and
push
stos
jecxz
and
adc
mov
je
ds
mov
jmp
dec
mov
pushf
scas
mov
(bad)
movs
cmp
clc
inc
jo
pop
add
cmps
xchg
mov
ins
std
into
shr
inc
adc
inc
out
(bad)
std
push
add
mov
or
lds
mov
cld
add
jb
xchg
js
pushf
adc
sahf
cwde
outs
loopne
repnz
push
pusha
cmps
push
jb
and
cmps
icebp
es
repz
mov
rol
test
into
pop
fucom
mov
pop
dec
xor
jns
jp
sti
ss
ror
add
aad
mov
cmp
aam
mov
retf
mov
jbe
adc
or
mov
push
push
enter
or
test
mov
ins
push
stc
mov
xchg
xchg
or
cwde
jo
cld
std
adc
enter
mov
and
sub
sbb
jge
mov
call
clc
fdiv
add
in
ffreep
fist
lods
xor
xchg
dec
pusha
fisub
mov
retf
repnz
sub
mov
das
movs
push
mov
pop
cmp
in
sti
test
add
pop
js
adc
shl
mov
(bad)
(bad)
imul
adc
mov
adc
arpl
mov
adc
dec
push
sbb
jp
iret
mov
add
mov
adc
jecxz
outs
dec
(bad)
idiv
mov
sti
loope
dec
stos
mov
cld
xor
les
jmp
adc
mov
mov
je
rcr
loope
pop
cmp
jns
jo
mov
(bad)
fwait
sbb
dec
mov
push
jo
test
jp
(bad)
cdq
cld
mov
in
mov
sub
mov
inc
imul
(bad)
cmp
push
arpl
mov
cmp
leave
jge
jbe
test
cmp
cmc
arpl
pop
adc
xor
mov
pop
add
and
mov
ja
cld
add
pop
inc
dec
dec
inc
sub
popa
add
add
xchg
or
popf
movs
cmp
mov
sbb
push
cmp
and
sbb
cmp
call
fwait
scas
push
sub
pusha
xor
daa
imul
les
mov
call
adc
cmp
jnp
cdq
xor
aas
pop
out
(bad)
loop
fbld
pop
fisub
test
cmp
cmps
sti
push
outs
push
pop
sbb
pop
mov
imul
movs
movs
retf
ds
fs
test
sbb
push
lock
fwait
xchg
xor
and
bound
and
mov
(bad)
mov
or
mov
je
inc
js
in
fcomp
das
cmp
aad
iret
push
shr
sbb
sbb
pop
arpl
jne
fcomip
test
(bad)
mov
mov
cs
js
arpl
les
mov
pop
out
aaa
scas
inc
xor
mov
sub
(bad)
out
inc
retf
jmp
inc
and
jle
adc
outs
and
sub
xchg
push
cmps
and
pop
add
pop
clc
in
shl
iret
test
or
and
adc
sbb
retf
ret
ror
cwde
fnsave
lahf
test
and
cs
add
or
push
ins
pop
js
mov
bound
jmp
or
mov
pop
xor
lds
xor
xor
loope
cli
xor
adc
outs
mov
cli
cli
add
in
test
stos
cmps
jle
xchg
adc
and
test
enter
inc
ins
aaa
cmp
pop
jo
idiv
mov
rol
push
jb
clc
leave
shr
xlat
pop
jo
jle
daa
or
loopne
sbb
jecxz
sbb
clc
(bad)
mov
jns
adc
call
aam
retf
fcmovu
rcl
add
std
std
mov
mov
and
stos
sbb
sti
push
rcr
cmp
mov
aam
(bad)
in
xor
into
(bad)
cli
outs
jbe
sbb
jecxz
cmps
mov
xchg
cmp
pop
pop
inc
shl
inc
pop
stos
call
add
hlt
adc
xchg
in
pop
popa
dec
mov
jno
jp
movs
push
cmp
out
adc
(bad)
aas
xor
dec
jb
rcl
inc
jmp
pushf
mov
movs
scas
mov
sbb
imul
movs
out
pop
or
fcomp
(bad)
movs
mov
xor
retf
cmc
(bad)
and
cmp
daa
movs
(bad)
mov
push
(bad)
(bad)
adc
aaa
adc
fadd
and
inc
icebp
inc
jmp
and
jge
(bad)
in
mov
test
adc
inc
ror
cmp
push
ins
inc
fst
stc
jbe
cmps
or
mov
add
call
xor
jecxz
xor
bound
xchg
cmp
inc
loop
mov
mov
es
rol
mov
push
iret
mov
and
mov
xchg
movs
rol
xor
cmp
dec
ret
ins
mov
(bad)
mul
rcl
mov
add
das
xlat
pop
push
mov
xchg
cmp
lods
xor
repnz
xchg
jle
jp
jp
cmp
adc
mov
pop
mov
int
mov
fld
nop
mov
push
ja
mov
push
or
mov
bound
sbb
mov
mov
in
fbstp
int3
jns
out
and
dec
icebp
sbb
jge
ins
ror
pop
shl
aaa
push
stc
cwde
sbb
adc
lods
movs
loopne
das
retf
push
pop
mov
xlat
sub
add
sar
mov
mov
(bad)
repz
int
sub
loope
mov
lods
mov
dec
pop
aad
add
repz
adc
outs
js
jae
sub
bound
pop
jg
popa
cmp
inc
stos
push
repnz
ds
cmp
pop
xchg
pop
in
imul
ret
mov
retf
(bad)
mov
xchg
pushf
loopne
rol
add
jg
lock
dec
dec
push
int
sti
ins
xor
gs
adc
xchg
call
or
pop
retf
stos
add
leave
xchg
popf
mov
adc
jnp
out
(bad)
fiadd
jge
sub
jge
loopne
sbb
lock
lods
scas
inc
jle
mov
xchg
call
cli
ret
cmps
push
adc
jecxz
rol
dec
xchg
xchg
mov
hlt
int3
stos
add
out
adc
fisubr
pop
mov
test
jns
cmp
ins
push
test
jb
lds
repz
pop
jbe
push
or
add
jp
lods
xchg
push
cmp
mov
(bad)
jnp
or
out
sbb
icebp
mov
push
sub
push
sub
inc
leave
sbb
outs
clc
into
jns
or
fwait
iret
inc
pop
(bad)
cmp
(bad)
ret
scas
scas
sub
adc
xchg
push
mov
and
jmp
aaa
ret
xor
push
push
pusha
les
or
test
nop
xor
popf
sub
xor
scas
cmp
push
inc
jnp
inc
mov
test
mov
push
scas
inc
cdq
or
je
mov
inc
je
sbb
cwde
ficom
sub
jns
out
push
xor
mov
in
pop
jnp
les
pushf
jge
add
sub
add
int
dec
mov
pop
loope
in
in
push
aam
xchg
dec
pushf
outs
ret
and
xchg
pop
in
push
daa
fs
sub
mov
cmp
jp
sub
cmp
pop
fild
div
retf
push
mov
sub
xlat
push
pusha
add
or
mov
mov
push
and
jbe
xor
js
mov
mov
adc
xchg
mov
rol
in
jne
mov
jl
add
sub
stos
inc
icebp
xchg
and
xchg
jmp
in
or
or
sbb
jmp
rcl
imul
sbb
stos
dec
jo
fmul
lods
jle
movs
retf
in
push
jbe
stos
jb
test
aaa
icebp
sbb
ror
repnz
shl
outs
and
mov
call
inc
test
mov
frstor
dec
inc
mov
mov
push
jp
cmp
push
inc
jecxz
inc
xchg
mov
aad
pop
or
lea
sbb
pop
xchg
fcmovnbe
lods
sub
push
adc
mov
mov
inc
push
out
push
and
mov
and
aaa
push
xchg
mov
ins
test
int
xchg
pushf
sbb
out
cmp
fisttp
mov
or
and
or
pop
mov
arpl
jmp
pop
movs
jbe
fild
gs
cmps
fisub
pusha
adc
retf
inc
retf
xor
mov
jo
pop
test
out
inc
mov
out
cmp
retf
test
mov
mov
adc
mov
and
xchg
loop
int3
sbb
or
fs
mov
mov
ds
jmp
mov
js
xchg
pop
retf
xor
or
das
lods
pop
inc
lock
cmp
mov
cmp
retf
rcl
out
add
rol
or
push
scas
pop
xchg
add
cli
ja
mov
or
xor
xor
imul
fld
adc
iret
ds
sub
js
in
mov
icebp
xchg
je
ds
imul
cmp
adc
sbb
lds
test
mov
into
dec
xchg
int
outs
and
jmp
jecxz
dec
inc
mov
dec
arpl
stos
(bad)
fiadd
mov
xchg
sbb
mov
sub
mov
dec
push
jge
push
or
in
mov
addr16
and
pop
xchg
rcr
hlt
pop
mov
push
fsubr
pop
stos
aas
scas
mov
jb
sub
dec
mov
or
es
ret
mov
call
ss
mov
push
lods
xchg
jno
je
fwait
dec
pop
jp
outs
rol
js
xor
aad
xchg
push
xor
les
mov
pop
and
fwait
aaa
mov
mov
neg
xchg
enter
push
pop
adc
out
xchg
out
inc
in
pop
fldenv
fild
xor
jp
xchg
or
shl
and
aam
enter
pop
fldenv
aam
cmps
sub
aas
inc
pop
mov
test
rcr
add
jecxz
and
jmp
(bad)
cmp
xor
out
pop
(bad)
sbb
mov
outs
xchg
mov
fild
test
jne
jns
loop
cmps
imul
ret
pop
repz
aad
xor
je
and
sti
mov
out
mov
mov
cdq
sbb
xchg
mov
popa
mov
jmp
jne
dec
ss
jne
inc
sbb
test
jecxz
idiv
fisub
dec
lods
or
sub
xchg
jb
fcmovu
mov
cmps
lods
push
pop
js
mov
inc
pop
rcl
scas
push
iret
and
fdivp
mov
loope
ret
xor
fcmovne
cmc
fsub
sub
mov
mov
cmps
fst
xor
jg
jae
and
or
add
lea
jno
sub
dec
out
or
fsubr
inc
xor
aaa
pop
int3
ror
mov
popf
pop
push
mov
aad
add
repnz
lods
cmps
pop
cmp
imul
mov
push
out
pop
inc
and
mov
push
leave
dec
pushf
and
dec
fsub
fldl2e
cmps
(bad)
and
addr16
comiss
je
mov
adc
dec
mov
pop
mov
nop
movs
std
pop
arpl
shl
sub
fwait
rcl
ins
fadd
dec
adc
sahf
mov
jo
(bad)
les
sub
pop
dec
fidivr
cmp
cdq
js
push
lods
ds
dec
cs
cmp
sub
mov
push
(bad)
out
add
fnstcw
popa
cmp
adc
mov
test
test
xchg
pop
mov
add
push
lahf
repz
jnp
push
in
ins
aaa
mov
push
movs
repnz
loop
lds
add
xchg
jo
and
and
fld
pusha
add
mov
mov
mov
xor
int
inc
dec
(bad)
pop
fidivr
mov
cld
xchg
test
dec
sbb
cmc
or
ins
inc
stos
jno
not
and
mov
cld
push
xchg
adc
les
or
mov
in
push
mov
mov
neg
loopne
xchg
pop
mov
cdq
dec
pop
push
call
popf
mov
sub
imul
(bad)
xor
fldcw
jnp
adc
xchg
das
xor
in
(bad)
xor
cmp
push
out
push
jmp
cmp
jnp
push
fnstcw
inc
repz
mov
stos
xchg
retf
mov
sub
pop
mov
leave
adc
pop
ds
jnp
cmp
scas
ins
jge
or
pop
paddq
add
jne
pop
push
jne
and
mov
cmps
repz
loop
out
jmp
adc
jge
or
outs
fdiv
(bad)
push
jb
aas
mov
xor
idiv
pop
jmp
xor
push
es
repnz
call
push
jmp
mov
cwde
pushw
shl
sub
push
push
shl
dec
jns
xor
cmp
fwait
cmc
inc
or
js
and
dec
and
cmp
sub
stos
push
out
mov
sbb
sbb
mov
fwait
cmp
(bad)
sub
in
fild
push
arpl
cmps
pop
jecxz
(bad)
push
aaa
sbb
stos
fsubr
mov
jl
jmp
sbb
xor
pop
bound
dec
inc
scas
loopne
pop
iret
lods
fdiv
(bad)
es
mov
loope
(bad)
mov
push
popf
cmp
add
arpl
fld
das
bound
cdq
in
rcr
(bad)
jno
push
call
cld
fmul
scas
push
dec
mov
aaa
sub
mov
out
sub
mov
retf
fdiv
bound
loope
shl
aad
push
mov
cld
shl
or
sub
jns
aad
and
jmp
retf
xchg
cmp
cmp
bound
xchg
mov
call
sahf
inc
adc
cmp
pushf
xor
pop
mov
mov
mov
push
fcom
and
adc
jge
(bad)
and
jnp
into
fidivr
xor
retf
jle
test
popa
cmc
cld
enter
dec
mov
xchg
loope
inc
adc
rcr
fsub
ja
lods
jne
inc
inc
js
jmp
les
jge
(bad)
jnp
pop
sar
rcr
leave
cmps
pop
(bad)
rol
test
mov
pushf
push
push
arpl
addr16
add
inc
pop
scas
inc
imul
mov
or
pop
pop
push
aam
in
add
add
cmc
rcr
adc
popa
mov
xor
(bad)
and
test
mov
hlt
(bad)
fisttp
mov
fimul
aas
int3
jnp
adc
popf
inc
jae
aad
pop
add
push
push
ss
inc
or
push
imul
add
mov
cli
(bad)
dec
sub
xor
aas
push
pop
xlat
push
(bad)
jmp
fbld
push
mov
ds
lods
jne
into
hlt
arpl
mov
(bad)
into
pop
and
xchg
xor
outs
lock
jae
xchg
and
add
adc
pop
neg
clc
mov
adc
cmps
dec
out
loope
dec
ins
icebp
mov
lods
adc
or
mov
sbb
iret
loop
out
mov
push
lahf
adc
sub
in
cmp
in
aaa
sbb
ret
lods
mov
jae
and
into
sti
mov
xlat
dec
(bad)
lock
mov
inc
fwait
inc
adc
adc
mov
out
push
mov
pop
pop
imul
scas
les
inc
dec
push
sub
cmp
rcr
ins
fcomp
cli
out
out
ins
in
push
das
fwait
xor
add
aad
and
repz
push
arpl
retf
adc
jne
ins
mov
xor
test
jp
pushf
in
add
daa
mov
in
pop
es
and
stos
inc
dec
jg
sbb
ret
(bad)
ins
adc
inc
cdq
jmp
adc
xor
adc
js
push
cmp
aaa
jecxz
das
addr16
aad
idiv
dec
dec
cmps
inc
imul
imul
fsub
enter
fcom
adc
cld
idiv
loopne
or
mov
mov
aaa
mov
xor
mov
loope
iret
ficom
and
fisttp
cmp
and
in
aas
test
pop
test
jmp
mov
aaa
inc
aam
sbb
inc
mov
sub
jge
sbb
adc
cmp
jbe
mov
push
sbb
push
or
jecxz
or
mov
jnp
dec
in
sub
int
mov
shl
xchg
nop
mov
clc
adc
popa
xchg
sbb
repnz
pusha
je
jbe
call
cmp
mov
sbb
or
cmp
ret
dec
pop
jl
mov
push
or
jle
ja
(bad)
jne
push
sbb
hlt
ja
mov
adc
enter
xchg
mov
mov
sbb
ror
push
fwait
in
shr
rol
(bad)
mov
clc
imul
xchg
push
sbb
jp
xchg
lea
into
or
add
in
mov
test
stos
mov
rcr
sub
(bad)
push
jmp
arpl
and
cmp
mov
sub
push
ds
sub
sub
sti
jmp
cs
cmps
push
ss
add
in
and
pop
sbb
push
sbb
pop
mov
enter
dec
sub
idiv
mov
mov
sbb
scas
sar
mov
(bad)
ins
nop
iret
cld
iret
mov
dec
ins
data16
aam
mov
mov
pop
dec
shr
movs
dec
lods
ds
wrmsr
xor
push
dec
(bad)
rcl
add
cli
js
pusha
cmps
(bad)
and
mov
add
pop
jmp
jle
mov
popf
add
pop
test
xchg
ins
inc
cmp
push
clc
jae
mov
mov
fs
rol
mov
pop
mov
enter
xor
push
jl
inc
(bad)
pushf
jmp
jge
sahf
push
idiv
push
and
into
add
pushf
jl
imul
loopne
call
push
xchg
mov
adc
sbb
push
test
stos
mov
mov
jge
into
push
jno
cwde
lds
test
pushf
cli
(bad)
mov
and
fs
push
xchg
mov
push
mov
sbb
fmul
mov
sbb
leave
retf
xor
jmp
jp
cs
push
push
ret
fimul
(bad)
xor
loop
lock
pop
and
nop
mov
xor
mov
add
fdivr
aam
(bad)
retf
aas
cmp
stos
mov
dec
outs
fnstenv
xchg
cmps
pop
sbb
popa
push
aam
data16
jg
dec
jne
inc
cmps
popf
add
dec
add
push
adc
in
out
pop
push
call
and
loop
lock
sar
mov
fdiv
jbe
mov
out
into
movs
sbb
fnstsw
(bad)
loop
mov
loopne
arpl
pop
nop
add
or
sbb
xchg
jle
fstp
push
adc
nop
icebp
mov
dec
cmp
cmc
adc
mov
outs
cmp
or
add
push
push
mov
loop
movs
dec
rol
jecxz
jle
or
popw
cmp
xchg
iret
adc
call
mov
jp
push
stos
sti
das
dec
data16
jns
jmp
data16
imul
push
or
push
jnp
stos
xlat
mov
mov
sub
mov
ja
in
rcr
push
mov
fidivr
(bad)
sbb
test
and
(bad)
aam
xor
aam
inc
mov
loopne
ja
push
repnz
lea
cli
in
add
jp
xchg
push
jge
sub
ror
pop
dec
bound
stc
out
push
mov
mov
mov
cs
mov
cmc
xchg
daa
pop
pop
fistp
pop
ss
test
xor
and
stos
mov
dec
scas
sbb
cmp
xchg
pop
retf
pop
adc
shl
in
jbe
adc
dec
bound
adc
push
xchg
stos
out
call
test
sbb
popa
in
cs
repz
cmps
lea
dec
in
lods
test
mov
mov
and
dec
pop
in
xor
in
adc
(bad)
call
sbb
imul
jns
sub
aad
sbb
(bad)
outs
(bad)
pop
ret
(bad)
rol
ret
into
leave
int3
xor
cdq
inc
adc
enter
sub
adc
sbb
lahf
mov
cmp
xchg
cli
test
inc
cmps
mov
leave
mov
pushf
fisttp
jno
cs
mov
dec
mov
shl
push
jp
pop
pop
out
jmp
add
push
mov
sbb
stc
sbb
lods
or
inc
daa
enter
mov
xor
and
dec
nop
scas
and
jb
pop
dec
adc
or
and
clc
lods
out
xor
repnz
mov
push
dec
inc
fist
and
add
lahf
test
add
fnstsw
int3
adc
mov
cwde
mov
add
dec
fadd
or
aaa
mov
fdiv
pop
push
mov
int3
xchg
call
jae
cmp
nop
inc
xchg
popf
out
or
jae
addr16
pop
jge
add
cld
loope
nop
stos
mov
mov
mov
cmp
repnz
mov
ror
or
adc
mov
test
and
mov
push
xchg
mov
les
les
cdq
jns
inc
xchg
xlat
cmp
cmc
jge
sbb
addr16
push
sub
jno
sbb
xor
loope
pop
inc
adc
cmp
sbb
movs
inc
bound
xchg
(bad)
cmp
aad
outs
mov
xor
sbb
sti
sub
sbb
movs
shr
sahf
mov
mov
clc
fs
repz
sar
gs
out
test
pop
(bad)
es
ins
mov
mov
rol
shr
sbb
xor
jno
(bad)
cli
add
dec
fucom
rol
xor
dec
gs
rol
fs
ret
cwde
imul
iret
sti
repnz
xacquire
sbb
mov
popa
push
pop
call
aam
cmp
add
adc
mov
pop
out
or
xchg
jno
lods
mov
jmp
pushf
jecxz
push
xor
jle
sbb
jp
sahf
push
les
push
add
jg
jecxz
imul
js
or
arpl
mov
fmul
aas
mov
and
adc
and
jb
jecxz
retf
pop
sub
push
add
sub
mov
inc
push
(bad)
inc
(bad)
fnsave
in
add
push
test
repnz
retf
sbb
push
cdq
lods
mov
xchg
loop
add
jae
(bad)
data16
dec
not
call
mov
aas
iret
pop
and
dec
mov
or
xor
mov
cs
test
pop
pop
sbb
cwde
add
push
jno
push
mov
inc
and
adc
out
in
xchg
jnp
popa
xor
mov
push
or
cmp
push
lods
das
adc
mov
fst
pop
cbw
lock
push
movs
xchg
leave
clc
mov
inc
je
(bad)
ja
dec
gs
xchg
(bad)
aam
pop
(bad)
mov
cmp
adc
(bad)
push
inc
lods
cmps
addr16
mov
mov
dec
in
call
(bad)
cmp
shl
xor
rol
mov
mov
sbb
inc
hlt
dec
push
mov
pusha
sbb
out
dec
lods
xlat
or
aaa
retf
movs
int
sbb
(bad)
not
sub
test
shr
sbb
imul
fisub
xchg
std
mov
sbb
inc
in
addr16
fadd
clc
or
call
cmps
ss
inc
xor
adc
push
sub
mov
out
imul
(bad)
pop
out
xchg
out
push
sub
xlat
cmp
sub
scas
ror
pop
dec
stos
int3
cmp
ret
sub
lods
xchg
jmp
in
mov
add
jmp
loope
add
push
xor
mov
iret
cmps
loop
add
cmps
and
and
cmp
(bad)
fcmove
hlt
xor
lea
enter
inc
mov
jp
add
and
lahf
mov
(bad)
cmc
std
out
pop
ss
mov
arpl
lods
or
rol
cs
push
leave
add
out
std
(bad)
stc
sub
or
stos
sbb
stc
call
dec
inc
mov
xchg
loop
sar
mov
xor
sar
scas
or
nop
cmps
xchg
inc
inc
and
test
(bad)
mov
jno
mov
mov
(bad)
in
sub
test
dec
out
push
rcr
dec
sub
cdq
call
stos
shr
les
cmps
nop
test
mov
push
sbb
inc
(bad)
addr16
adc
mov
call
stos
mov
adc
popf
lds
lahf
imul
das
nop
push
mov
rcr
add
(bad)
test
inc
sahf
dec
mov
mov
div
aam
mov
cmp
cmp
cmp
scas
mov
sbb
mov
sub
mov
fldl2t
ret
mov
(bad)
stc
out
mov
push
xabort
xchg
leave
(bad)
sar
aad
jl
and
and
mov
arpl
sbb
out
mov
push
gs
bound
int3
stc
movs
mov
pop
inc
push
stos
mov
sub
popf
outs
cmp
xor
(bad)
sbb
(bad)
scas
call
mov
cld
(bad)
cmps
and
add
ss
push
loopne
mov
out
jg
cmp
lea
lds
out
push
ret
into
xor
and
popa
inc
and
cs
data16
push
mov
or
jg
sub
cmp
xchg
fisttp
xor
pop
jmp
(bad)
outs
sub
aaa
jmp
neg
dec
fs
aad
imul
xlat
dec
fldcw
out
jg
int
gs
mov
iret
or
push
push
dec
and
and
mov
stos
or
call
stc
adc
scas
push
mov
jb
sbb
out
push
mov
mov
and
sbb
es
mov
stc
int
mov
mov
call
dec
mov
mov
inc
xchg
mov
fs
push
dec
xchg
(bad)
xchg
popf
mov
lahf
es
test
in
ror
pop
or
xchg
fs
cmps
jmp
ins
fild
in
movs
xor
xor
jb
mov
hlt
push
aad
repz
dec
jmp
pop
in
cmp
push
sbb
in
scas
movs
aaa
cdq
popf
sbb
int
popa
mov
xor
inc
std
ss
or
sbb
jno
push
dec
and
add
inc
push
jmp
das
jb
movaps
cmp
cmp
scas
mov
das
push
and
aad
fisttp
pusha
and
sub
pop
xchg
out
xchg
push
jnp
xlat
xchg
jne
mov
test
add
inc
(bad)
std
xchg
mov
cmp
inc
mov
aad
dec
dec
xchg
push
jp
or
test
mov
(bad)
leave
jl
pusha
call
int
and
js
repnz
sar
push
jae
fild
out
fisttp
push
xchg
and
push
jae
mov
ins
cmp
int
pop
(bad)
addr16
mov
ror
scas
repnz
nop
adc
inc
mov
add
adc
push
mov
in
xor
movs
mov
fist
or
and
test
inc
stc
stc
movs
stos
in
out
(bad)
sbb
or
ins
xor
mov
stos
and
ret
pop
ins
(bad)
xchg
inc
push
jmp
xlat
xlat
and
popa
sbb
bnd
fs
pop
jmp
addr16
cmps
xchg
loopne
es
rcl
jmp
dec
and
sub
cli
or
shr
cmp
cmps
out
jmp
out
out
(bad)
clc
inc
xchg
cmp
iret
movs
sub
in
push
bound
pop
cld
in
ja
and
pop
ins
pop
jp
enter
out
fcmovnu
add
adc
movs
loopne
jecxz
cmp
inc
aaa
test
neg
popa
mov
dec
and
call
mov
jg
or
retf
xchg
sub
and
xchg
xchg
aaa
inc
cli
xlat
mov
mov
fadd
mov
dec
and
push
out
into
fiadd
xor
mov
outs
(bad)
push
mov
xor
iret
inc
sbb
jmp
jbe
pop
dec
and
sbb
icebp
cmp
(bad)
dec
push
icebp
into
inc
mov
shl
adc
test
pop
lock
cmp
ja
sbb
mov
mov
xchg
xor
sti
lock
fwait
cmp
add
nop
pop
sysexit
(bad)
aas
in
pop
rcl
or
popf
push
jmp
movs
jne
mov
cmp
pop
mov
or
xchg
(bad)
jb
xchg
pop
mov
icebp
cmp
(bad)
xlat
fsub
jb
cmc
dec
ret
and
mov
lea
faddp
je
inc
jb
in
and
ret
fucompp
add
dec
jle
xchg
cs
out
shl
fistp
fidivr
adc
mov
lods
cmp
mov
aaa
sbb
loopne
or
pop
lock
ss
out
jp
mov
sub
sub
(bad)
fnsave
aam
scas
or
cld
les
imul
cmps
in
jae
cmps
movs
jl
pop
xor
ds
push
das
sbb
and
add
push
or
jl
mov
mov
loopne
add
cmp
dec
jbe
shl
inc
pop
jmp
pusha
pop
xor
pop
lea
lods
shr
js
adc
dec
pop
data16
mov
sbb
rol
sti
mov
rcr
jg
cmc
sub
sbb
xchg
xor
imul
in
aaa
sbb
clc
and
imul
sub
test
sub
add
and
mov
mov
mov
(bad)
fstp
scas
call
sbb
int
cli
cmp
cmp
ins
call
jne
daa
pop
aam
push
call
xlat
cbw
ficomp
xor
add
inc
pusha
in
or
(bad)
imul
mov
dec
mov
div
cli
cmp
and
leave
push
adc
outs
xor
mov
sbb
mov
and
ret
mov
cmp
pop
dec
adc
leave
iret
add
stos
xchg
je
lods
in
fs
loope
push
inc
xor
je
fnstcw
or
dec
cmp
neg
int3
mov
(bad)
repnz
add
clc
arpl
popa
sub
xchg
test
sub
lahf
or
jb
add
in
cmp
mov
enter
cdq
ret
xchg
inc
dec
xor
sahf
add
cmp
arpl
cmp
push
lods
dec
ja
dec
mov
xor
test
dec
aam
sub
pop
and
iret
jnp
xlat
cmp
cli
in
retf
enter
stos
movs
push
cmp
arpl
mov
jns
mov
cmps
push
and
dec
leave
pop
aaa
xor
mov
ret
cmc
pop
jl
jmp
data16
sbb
mov
jmp
mov
out
jb
mov
shl
and
(bad)
movs
test
int
inc
jp
sahf
int3
(bad)
in
add
stos
mov
xor
mov
push
in
call
push
adc
out
cmps
mov
adc
fs
outs
sbb
inc
xchg
ret
jo
sbb
inc
inc
jge
mov
out
les
ss
dec
shl
cmc
je
cmp
push
out
and
movs
sub
sahf
retf
(bad)
in
enter
inc
adc
jp
mov
dec
ret
call
push
stos
enter
cmp
pop
outs
jmp
fs
out
xchg
mov
xchg
out
fisub
sub
pushf
sub
rcl
cdq
cmc
ja
cmps
add
pushf
test
aam
es
cdq
xchg
mov
or
pop
add
pop
test
sub
test
pop
pop
je
sub
sub
mov
(bad)
pop
retf
cmps
add
mov
push
xor
lods
fnstenv
test
aaa
pop
mov
outs
and
adc
scas
jbe
scas
add
sub
gs
cwde
dec
imul
adc
fstp
or
inc
daa
loopne
ds
iret
xor
retf
add
lock
pop
ds
aaa
in
dec
(bad)
pop
fidivr
pop
(bad)
loope
int
enter
sub
jecxz
jmp
mov
jle
sbb
add
mov
(bad)
aaa
sub
shr
xchg
jo
pusha
std
cmp
retf
lods
mov
sbb
rcl
(bad)
mov
or
fsubr
(bad)
xchg
loopne
xchg
div
add
aam
add
mov
push
cmps
xchg
and
dec
push
sbb
mov
mov
and
inc
test
dec
pop
xor
fmul
or
xchg
xchg
scas
xchg
int
jl
push
jmp
into
adc
rol
sub
xchg
sbb
xor
cwde
cmp
add
cld
lahf
dec
mov
and
cs
jno
scas
pusha
sub
push
xor
jae
jecxz
xchg
rcr
retf
pop
(bad)
jl
mov
inc
sbb
mov
xlat
push
xchg
(bad)
and
test
inc
adc
test
les
(bad)
outs
mov
lods
cdq
lods
pop
inc
mov
popf
ins
jnp
sbb
xor
in
mov
call
cld
test
add
xchg
aaa
mov
jmp
mov
call
push
xor
adc
cmp
mov
into
xchg
fstp
mov
mov
ss
repz
repz
fdivr
mov
xchg
sub
into
jbe
adc
push
mov
xor
fincstp
inc
es
outs
xchg
(bad)
add
xchg
in
inc
lods
(bad)
rol
push
jns
rcl
shr
mov
not
outs
mov
outs
ds
adc
dec
jle
or
dec
sbb
sbb
mov
mov
xor
cwde
and
mov
pop
in
sub
mov
jge
jmp
jno
mov
daa
add
imul
cmp
or
add
dec
xchg
lods
test
ins
inc
mov
stos
test
pusha
cmp
push
scas
jle
xchg
cmp
xchg
jb
out
retf
mov
das
dec
mov
rcl
or
mov
xchg
cmp
pop
xchg
and
xchg
adc
jne
mov
push
fbld
sahf
fcomp
out
ds
outs
or
fistp
or
push
fld
shl
inc
xchg
aam
das
add
sub
aam
inc
fist
pop
rcr
xor
in
cmp
xchg
and
push
imul
add
pop
xor
mov
cld
cmp
add
(bad)
test
mov
int
pop
push
enter
test
data16
mov
imul
into
dec
adc
cmp
aaa
cmp
in
jmp
pop
push
stos
sbb
mov
sub
fwait
js
add
inc
jae
and
xor
das
jo
pop
mov
stc
(bad)
ja
ror
rol
dec
mov
and
and
lea
cwde
push
dec
scas
fcomp
push
iret
mov
repz
cwde
jge
jge
xchg
repnz
in
mov
jmp
sbb
sbb
jo
pop
retf
popa
and
xchg
ja
int3
aam
push
xor
addr16
mov
or
pop
cmp
push
pop
shl
push
stos
div
adc
repz
(bad)
adc
popf
push
push
enter
cli
loope
add
push
dec
adc
pop
test
xor
sub
sub
mov
js
scas
mov
inc
cmp
fcos
aam
aad
movs
sbb
int3
inc
rol
retf
outs
sti
rcl
xchg
pop
das
test
xchg
pusha
add
lahf
sbb
mov
fxam
gs
mov
loop
sbb
sub
scas
idiv
stos
leave
mov
iret
mov
fadd
icebp
sbb
jmp
mov
sbb
adc
xor
inc
mov
and
jne
nop
(bad)
xchg
stc
fsub
(bad)
jmp
adc
movs
jno
add
shl
mov
and
(bad)
gs
loopne
sbb
cmps
push
mov
or
push
cwde
dec
(bad)
mov
mov
shl
ret
cld
dec
repnz
hlt
cs
cmps
dec
push
jp
adc
and
or
out
and
in
sbb
pushf
jo
cmps
jge
sbb
mov
adc
adc
mov
outs
test
adc
sbb
iret
sub
movs
ds
pop
xchg
adc
and
add
iret
addr16
pop
mov
jbe
xor
push
imul
sub
fsub
fcomp
out
ins
xor
(bad)
and
ret
hlt
mov
sub
mov
(bad)
ret
cmps
cs
mov
xchg
xchg
sbb
hlt
pop
cdq
mov
fsubr
gs
mov
lea
pop
mov
xor
cmp
xchg
out
mov
test
scas
dec
pop
push
mov
mov
daa
sub
enter
dec
pop
ins
enter
adc
mov
jg
leave
jp
loope
inc
adc
and
ror
fcomp
lds
and
fsubr
add
in
adc
rcl
sar
dec
push
and
xchg
out
aad
xor
(bad)
xor
test
and
mov
repz
aas
adc
mov
rol
or
inc
movs
xchg
cli
gs
(bad)
fiadd
sbb
xor
aad
dec
scas
pop
idiv
pop
sub
pop
pushw
int
ret
inc
and
push
sbb
jg
add
sub
mov
inc
(bad)
sub
in
add
mov
shr
push
in
repz
jae
push
lahf
mov
mov
test
jge
iret
ss
add
sti
data16
les
imul
(bad)
in
push
(bad)
xor
xor
xchg
test
xchg
sahf
mov
adc
mov
je
mov
sbb
outs
cli
and
xchg
mov
jg
or
and
add
enter
mov
int3
pop
fucomip
add
mov
cld
ins
sbb
ja
mov
pop
or
fsub
xor
repz
call
call
movs
leave
hlt
fidivr
cmps
shld
sti
(bad)
fst
mov
out
addr16
pop
lods
xor
imul
div
ja
mov
imul
lods
scas
dec
in
nop
cmp
rcl
cmp
stos
dec
pop
mov
dec
sti
ja
inc
and
(bad)
xor
push
jo
sub
iret
jns
popf
cmp
jg
sub
arpl
mov
inc
xchg
call
lock
movs
repnz
add
jnp
xchg
sbb
or
mov
loopne
sbb
fdivr
aas
pusha
cmp
mov
jp
sbb
inc
adc
iret
push
retf
mov
cmp
sub
fwait
out
stc
cld
cmps
js
into
scas
add
out
dec
mov
mov
xchg
loop
jmp
aad
mov
dec
hlt
out
or
mov
xchg
movs
outs
scas
and
pop
or
sbb
sbb
push
jmp
mov
jl
xlat
mov
pop
add
lds
shl
mov
stos
add
jmp
or
mov
test
or
fst
pushf
(bad)
ss
cld
adc
cmp
fdiv
dec
jo
rol
test
mov
jne
loopne
lock
inc
gs
pushf
mov
mov
push
jb
or
ja
xchg
call
ins
pop
ret
cmps
inc
or
push
mov
inc
pop
jmp
ret
add
popa
sar
fistp
mov
mov
xor
fisubr
jae
rcl
sub
push
stos
mov
jae
int
jl
adc
in
cmp
call
into
mov
daa
aam
ins
retf
(bad)
repz
push
cmps
cmp
dec
(bad)
cmp
mov
and
inc
jge
xor
retf
ins
lods
mov
mov
(bad)
retf
adc
pop
jp
je
cmp
add
inc
dec
leave
popa
jp
(bad)
ja
add
test
test
pop
ja
enter
daa
rcr
jnp
ins
mov
loopne
inc
mov
mov
retf
test
fidivr
pop
sub
push
movs
rcl
cmp
stos
imul
bound
imul
mov
ds
dec
dec
push
fmul
ja
cmps
cs
imul
and
hlt
cdq
push
ins
jb
pushf
je
out
xchg
in
scas
mov
clc
das
(bad)
xchg
or
xchg
pop
fisubr
mov
sbb
(bad)
cld
xchg
fcmovb
je
out
sub
fld
cmp
out
stos
jmp
cmp
adc
xchg
or
lods
nop
mov
and
cmps
in
pushf
inc
cwde
pop
sbb
fld
mov
xchg
nop
fwait
mov
or
in
add
xchg
addr16
cmp
dec
aaa
out
sahf
dec
jl
and
mov
pop
add
jb
mov
jp
pusha
in
lods
push
xchg
mov
inc
ret
jecxz
inc
adc
push
or
xor
fild
push
fcmovu
retf
sbb
dec
add
pop
xor
xchg
mov
or
out
mov
out
cmc
mov
and
mov
dec
sbb
adc
stos
icebp
xor
add
in
retf
lods
test
imul
xor
push
mov
xlat
sti
push
div
hlt
xchg
inc
in
rcl
loope
dec
lock
mov
mov
lahf
enter
mov
out
pop
call
pusha
mov
mov
lds
in
push
dec
cwd
popf
loop
clc
les
repz
shl
mov
mov
adc
ins
aad
into
push
int
pushf
outs
push
out
mov
jbe
and
(bad)
xor
and
ins
jecxz
int
cmps
out
out
ret
retf
sub
cs
pop
or
cmp
push
cdq
or
sub
pop
cmp
xor
arpl
dec
fcmovb
push
and
out
sub
mov
inc
loopne
mov
inc
jecxz
cwde
inc
mov
adc
loopne
xchg
adc
ror
jo
into
je
cli
push
loopne
jl
jo
and
sahf
out
pop
in
pop
stos
movs
mov
pushf
bound
mov
loope
(bad)
stos
fcomp
(bad)
mov
add
and
outs
inc
sbb
das
pop
jmp
in
nop
xchg
adc
mov
add
mov
fistp
xor
inc
into
fdiv
mov
mov
clc
push
xor
int3
rol
mov
sub
mov
sahf
out
rcl
and
push
mov
call
pop
adc
aad
and
out
into
or
mov
cmp
push
inc
push
jns
add
dec
enter
push
cmp
out
adc
pushf
jge
xor
xchg
shr
iret
jo
sbb
fadd
out
rol
xchg
xor
call
mov
sub
push
jo
push
push
push
add
sar
ins
ins
push
cmp
push
sbb
mov
mov
leave
add
(bad)
and
ret
loopne
pusha
mov
and
inc
mov
loope
fild
ins
sahf
clc
inc
push
out
and
fcmovnbe
dec
into
retf
lods
and
cmps
addr16
out
or
les
es
jno
jge
not
dec
loopne
mov
in
std
out
cmp
je
imul
ss
ja
sar
adc
adc
push
ins
and
xor
fidivr
and
pop
mov
mov
movs
int3
dec
add
fisub
jle
pushf
outs
out
dec
(bad)
ds
out
inc
sbb
inc
inc
pop
das
imul
in
lea
cmp
adc
cmp
mov
ds
ret
popf
jge
iret
mov
adc
mov
out
cmps
mov
mov
pop
jbe
mov
jo
xor
lods
mov
and
add
sbb
mov
cwde
(bad)
sub
mov
loop
pop
cwde
mov
xchg
jecxz
popf
movs
mov
lea
adc
mov
sub
add
push
cli
sahf
cmps
mov
pop
pop
mov
rcr
inc
jmp
lods
test
jge
mov
std
data16
push
in
outs
fadd
dec
dec
inc
add
pop
fadd
and
scas
(bad)
lock
push
inc
shr
(bad)
stos
cmp
xchg
adc
nop
rcr
clc
outs
jp
push
ins
mov
das
sbb
xchg
int
js
and
test
adc
popf
cdq
aam
int
cmp
adc
rcl
les
loope
(bad)
jmp
ret
sbb
lahf
mov
jle
test
mov
cmp
or
ret
mov
inc
xchg
out
stc
push
xchg
call
dec
ins
icebp
mov
nop
add
mov
lds
cld
(bad)
xchg
lods
jmp
pop
cdq
fsubr
ds
mov
add
aam
push
and
mov
clc
fsubr
jnp
bound
(bad)
stc
addr16
repz
xor
dec
mov
jmp
jae
ret
movs
cmp
mov
es
mov
jmp
and
dec
iret
rol
and
pop
rol
popf
je
retf
jae
retf
push
ins
call
out
psrld
xchg
loop
add
add
jne
add
dec
or
xor
mov
lds
lea
push
inc
adc
std
std
lods
push
(bad)
mov
push
cs
mov
les
ja
fsubr
pop
sahf
jae
or
iret
dec
and
inc
enter
aaa
in
mov
movs
call
mov
mov
fcom
xor
mov
(bad)
inc
xor
mov
les
(bad)
push
jae
cmc
je
and
push
mov
inc
or
sub
fsubr
pop
jmp
jle
into
cmps
lock
xchg
jno
popf
dec
loopne
daa
scas
push
test
inc
inc
mov
inc
push
xchg
and
sub
fnsave
sub
sti
sbb
aam
out
adc
add
mov
jbe
pop
and
test
add
pop
and
mov
call
jb
in
(bad)
mov
cmps
mov
mov
ret
pop
pop
loop
mov
and
jno
fdiv
repnz
sub
pop
lds
cmp
mov
hlt
xor
add
stos
xchg
pop
stos
fsub
mov
mov
mov
or
or
ds
enter
pop
cs
out
cmps
lods
sbb
inc
push
cmp
nop
xor
out
jmp
mov
and
sub
and
outs
and
ins
dec
nop
scas
aas
pop
add
push
fwait
jae
push
(bad)
cli
into
jmp
pop
xchg
lock
out
test
nop
jns
xor
scas
mov
inc
mov
pusha
data16
add
push
mov
es
ds
mov
aad
jno
add
jno
jp
aaa
out
ret
and
mov
imul
lods
ret
jecxz
jno
sub
out
cld
fs
in
xchg
dec
cld
mov
cwde
mov
std
mov
iret
pop
mov
(bad)
xchg
or
dec
sbb
fbld
mov
test
pop
dec
adc
outs
fcomp
mov
sti
stos
jge
jno
loope
push
rsm
mov
sbb
aam
scas
dec
cmp
or
pop
movs
popf
repz
cmp
cmp
pop
ret
cmp
retf
mov
pop
and
iret
or
mov
aas
or
sbb
shr
(bad)
cmp
jo
iret
cmp
cs
mov
add
push
xor
cwde
aas
pop
dec
cmp
inc
stos
loopne
out
ret
push
mov
pop
cmp
mov
leave
or
jnp
aaa
push
mov
repnz
sar
fcom
or
fcomp
pop
push
pop
std
retf
aaa
ret
push
sbb
daa
(bad)
loop
fcomi
loopne
xchg
cli
mov
pause
inc
lahf
(bad)
shr
xchg
jle
mov
dec
repz
mov
test
adc
cmp
add
or
dec
aaa
xchg
(bad)
cld
inc
pop
dec
fldcw
mov
loop
ret
out
rcr
and
xlat
(bad)
cmps
xchg
popf
out
and
jbe
sub
(bad)
and
fwait
mov
nop
inc
cmp
popa
and
sub
fucomp
call
inc
jmp
xchg
into
jns
cdq
push
and
fs
xchg
adc
adc
out
test
loopne
std
push
push
adc
mov
stc
test
test
out
loope
rol
push
xchg
xor
out
out
int
mov
add
dec
icebp
push
test
jae
jecxz
mov
inc
mov
stos
cmp
push
rcr
lods
inc
or
cmp
fistp
js
addr16
stc
mov
call
sbb
in
sahf
stos
dec
adc
xor
movs
mov
mov
daa
sbb
sbb
std
mov
into
stos
in
dec
xor
(bad)
mov
xor
push
imul
fnstsw
xchg
pushf
leave
imul
fist
push
imul
mov
or
jmp
cdq
sti
ins
test
das
cli
aaa
push
jle
xor
xor
or
fcmovne
cmp
in
xchg
inc
jge
fidivr
lea
cmp
(bad)
xor
xor
dec
das
and
push
sub
and
fild
pop
movs
repnz
lods
mov
push
jnp
mov
out
mov
(bad)
dec
hlt
jno
mov
or
dec
sub
loopne
bound
pop
jns
add
and
push
lahf
mov
jb
stos
mov
sub
sbb
lea
jns
mov
gs
adc
fldenv
push
enter
adc
popa
pushf
add
jno
in
cli
dec
mul
fidiv
inc
pop
icebp
clc
retf
xchg
or
jmp
mov
movaps
cli
retf
test
mov
sub
ror
les
rcl
mov
and
out
ins
lods
icebp
test
jp
in
test
repz
jnp
jbe
movs
xchg
cmp
retf
xchg
mov
and
mov
push
gs
in
inc
mov
repnz
ror
mov
pop
das
mov
iret
mov
sbb
hlt
jo
out
inc
add
es
inc
popf
fsub
ja
out
push
cmp
and
es
push
pusha
sbb
push
int
sub
sub
jnp
ss
pop
mov
in
pop
cmp
xor
and
aam
test
push
mov
xlat
mov
dec
xchg
jno
fbstp
popf
ins
dec
iret
(bad)
std
(bad)
imul
outs
adc
jecxz
xchg
push
mov
pop
hlt
add
ds
mov
sbb
xor
jl
lock
sbb
out
loop
iret
jb
je
mov
sub
inc
leave
iret
iret
adc
dec
and
and
inc
and
psllq
mov
xlat
jns
adc
cmc
je
pop
xchg
inc
and
repz
jne
(bad)
xchg
push
push
xsha1
cmps
into
test
sub
sub
icebp
into
pop
add
scas
es
retf
into
fidiv
inc
pop
jno
or
pop
aam
mov
cmps
jmp
xlat
(bad)
pop
fdiv
or
cmp
pop
adc
add
pop
jmp
adc
lea
inc
add
lds
lds
push
jno
dec
iret
push
push
xchg
xor
outs
cs
loope
clc
add
pop
retf
jno
sbb
mov
mov
aad
xor
push
push
xchg
sahf
sahf
add
sub
lea
adc
cmp
xchg
sbb
cmp
retf
mov
push
jecxz
and
xlat
movs
adc
pop
mov
sub
or
bound
adc
sub
loope
push
outs
ficomp
mov
mov
ss
xchg
ins
mov
stos
adc
imul
ret
xchg
(bad)
adc
inc
adc
jno
aad
adc
jmp
pop
outs
mov
pusha
mov
pop
cmc
test
push
inc
test
stos
push
and
dec
pop
rcl
and
mov
xchg
adc
sub
movs
xchg
bound
fwait
sbb
xor
pop
sbb
outs
outs
xchg
loopne
mov
movs
mov
jmp
int3
lahf
jmp
dec
sbb
mov
cld
jb
mov
adc
loope
inc
mov
stos
cdq
dec
call
add
call
pop
movs
out
push
test
add
adc
ins
outs
inc
(bad)
sbb
ss
xchg
xchg
ja
adc
mov
or
sti
xor
call
sbb
and
add
loopne
in
aas
dec
jo
push
pop
outs
bound
xor
xor
cli
repz
inc
mov
push
jb
jns
imul
loop
retf
or
mov
jle
fcmovnbe
adc
gs
dec
fnsave
sbb
push
jge
(bad)
dec
(bad)
push
sub
cmp
inc
out
mov
mov
xchg
inc
call
ret
jns
in
outs
push
popa
cmp
leave
add
cs
or
mov
popa
js
or
sub
mov
std
in
adc
in
xor
cdq
call
shl
pop
ror
popf
dec
imul
push
aam
xor
and
add
mov
pop
sar
outs
iret
and
jne
lds
in
push
(bad)
pop
cmc
inc
cmp
cmp
sub
jecxz
dec
adc
lahf
repz
mov
(bad)
jns
push
push
ret
add
hlt
lock
gs
dec
rol
or
push
mov
ret
jmp
les
fidiv
call
pop
fsubrp
repnz
mov
cmps
xchg
xor
or
stc
push
adc
mov
or
les
push
add
and
dec
lds
mov
test
push
int
fadd
jmp
dec
and
mov
dec
fcmovu
stos
mov
in
movs
adc
xor
cmp
or
shr
sahf
lds
cmps
not
mov
sub
rcl
add
dec
xor
push
rcr
sar
and
mov
add
sub
jbe
cwde
pushf
ret
and
jmp
int3
mov
cmps
jle
mov
loopne
ja
arpl
push
test
sub
adc
ret
sbb
ss
cmp
out
xor
jne
mov
jo
push
add
jbe
test
div
pop
mov
mov
loope
jne
fwait
fs
cwde
sbb
outs
out
inc
imul
aam
out
nop
or
inc
test
jns
mov
stos
adc
mov
jno
xlat
adc
fcmovnb
push
jmp
icebp
imul
xor
rcr
jmp
fs
cwde
(bad)
cs
jae
(bad)
imul
pushf
loop
lea
and
pop
iret
add
add
pop
cmp
mov
int
add
ds
fist
jnp
pop
fisttp
xor
mov
push
outs
(bad)
aam
adc
outs
push
rcl
test
jge
call
int3
sahf
mov
dec
jae
jecxz
loopne
xchg
adc
cmc
sub
or
add
xchg
xor
pop
in
clc
jmp
pop
pop
pop
fwait
mov
fld1
repz
call
add
in
addr16
inc
push
stc
scas
push
sub
cdq
and
sbb
repz
jmp
(bad)
sub
sbb
or
out
cli
ds
clc
jle
test
jbe
out
pop
inc
call
inc
adc
cmp
mov
dec
mov
les
jmp
movs
push
call
leave
neg
addr16
int
in
test
xchg
mov
popa
xor
or
mov
or
add
inc
jg
xchg
arpl
hlt
jmp
ins
pusha
test
lods
repz
ret
sbb
ins
fiadd
jns
jmp
sbb
loope
scas
push
sbb
clc
cdq
aas
aaa
mov
mov
sar
mov
xchg
(bad)
cmp
jge
or
pop
or
adc
fwait
push
ret
sbb
call
ins
push
pop
mov
add
repz
ret
in
mov
daa
push
cli
data16
jnp
cld
scas
test
jno
adc
stc
cdq
mov
push
les
pop
adc
not
push
adc
test
xchg
clc
(bad)
lods
dec
data16
aas
cmp
imul
addr16
ret
mov
outs
(bad)
mov
mov
xchg
enter
imul
xor
les
add
pop
cmp
pop
scas
push
jmp
cmp
das
cmp
ret
ret
push
fwait
xchg
sub
cmps
cmp
add
push
sub
shl
cmp
add
xchg
inc
int3
inc
hlt
sbb
jbe
out
or
push
dec
mov
adc
lods
adc
cmps
xor
int3
pop
outs
std
xchg
or
ja
out
arpl
test
sti
mov
mov
movs
and
daa
pop
ror
outs
sbb
dec
icebp
pop
dec
inc
scas
inc
and
cmp
or
xor
xor
jne
aas
outs
(bad)
mov
cdq
pop
dec
(bad)
push
jbe
sbb
xor
mov
mov
inc
mov
add
ss
xor
cld
das
loope
mov
and
sbb
sbb
adc
or
cmp
jge
or
lods
ins
ds
adc
clc
aam
mov
xchg
imul
pop
inc
sahf
mov
adc
jp
push
imul
(bad)
cmps
jmp
and
mov
movs
mov
and
repz
mov
repz
add
cmp
push
pop
lock
add
das
ds
js
(bad)
aad
call
inc
in
icebp
mov
stos
adc
fcmovnu
ror
shl
scas
int
cmps
cdq
and
ins
cmp
cmp
neg
mov
jl
xlat
cmp
fidivr
jae
arpl
enter
div
and
add
mov
pop
or
int3
xor
mov
psrlw
push
pop
stc
jo
jnp
mov
or
(bad)
aas
out
cmp
cs
outs
mov
je
ja
call
scas
repz
sbb
aaa
pop
test
arpl
rcl
out
sbb
mov
pusha
mov
add
ficom
xlat
xor
pop
pop
mov
jbe
mov
adc
and
loop
xchg
in
cwde
mov
xor
sbb
adc
adc
in
adc
scas
call
shl
sub
xchg
mov
jmp
mov
xchg
fcmovnbe
test
mov
stos
rol
or
cmp
cmp
fstp
inc
pop
jmp
js
popa
push
or
adc
test
adc
imul
add
popa
adc
xchg
mov
pop
push
scas
arpl
movs
push
sub
inc
aam
cdq
xor
ficom
xchg
rol
ret
sar
mov
ficom
in
pop
cs
xchg
sbb
xor
dec
rcr
aad
out
sub
sub
popf
jmp
test
fistp
inc
in
(bad)
mov
fimul
loopne
ficom
pop
in
or
cmp
add
adc
test
jmp
push
xchg
cli
fadd
dec
sub
in
mov
add
cwde
xor
push
repz
and
or
iret
jae
pop
neg
fidiv
or
aas
js
jns
fbld
adc
jo
sub
mov
fidivr
outs
add
test
retf
hlt
gs
mov
ret
cld
add
adc
scas
and
scas
jne
mov
inc
push
scas
aad
ins
mov
inc
pop
sub
jno
loopne
pop
and
and
cmps
jmp
fld1
cmp
data16
je
iret
and
mov
push
xchg
jp
add
xor
stos
loopne
scas
or
mov
repz
mov
cmp
add
jno
stos
mov
mov
adc
dec
mov
xor
xor
enter
retf
call
or
fadd
fstp
outs
fdivrp
ds
mov
retf
inc
xor
mov
jno
jmp
fnstcw
mov
fisubr
fstp
fadd
mov
test
pushf
jmp
dec
mov
pop
pop
pop
inc
enter
sti
ficom
xchg
push
add
and
sbb
jae
pop
into
nop
xchg
popf
sar
mov
ja
aad
mov
aam
add
popa
jecxz
lds
loopne
cmp
ret
dec
dec
mov
add
nop
dec
mov
mov
clc
sub
mov
test
mov
fst
fsub
rcl
(bad)
push
(bad)
xor
adc
inc
or
or
sbb
test
push
cld
dec
sub
jge
add
adc
popa
int3
mov
sub
sub
ins
popa
lea
rol
sub
scas
inc
inc
out
inc
sar
or
(bad)
int3
jle
aad
sbb
pop
fs
push
call
xor
cdq
mov
pop
mov
dec
leave
clc
push
(bad)
cmp
cmc
js
int3
mov
pop
(bad)
inc
jae
inc
test
pop
push
or
and
stc
inc
out
mov
in
xchg
or
pop
inc
or
push
inc
mov
add
ins
imul
push
jnp
mov
pop
mov
inc
enter
sbb
popa
and
lock
add
ins
mov
sub
add
xchg
sub
mov
add
fisub
loope
out
xchg
push
retf
jge
xchg
nop
xor
popa
sub
or
cwde
dec
pop
fwait
and
mov
mov
mul
(bad)
loope
loop
lea
mov
stos
inc
test
jnp
clc
pop
ins
popa
jmp
and
inc
outs
je
or
push
cmps
mov
pushf
pop
cmp
dec
(bad)
mov
stc
cli
inc
mov
aad
mov
jle
sbb
ins
mov
fdivr
cmp
mov
inc
out
jmp
jns
mov
sysret
out
and
test
cld
mov
push
div
sub
ins
stc
mov
jne
(bad)
fistp
cmp
inc
in
mov
jg
inc
push
loope
pop
in
add
inc
lds
xor
jle
sub
add
cmc
add
bound
jmp
mov
or
ja
jecxz
push
into
scas
dec
jo
retf
inc
lods
inc
cmp
lock
mov
pop
sti
inc
and
push
ds
xor
xrelease
adc
test
std
rcr
push
xor
pop
inc
ins
in
inc
push
fist
leave
mov
aam
mov
and
cmp
cld
sbb
sub
pop
inc
jo
jmp
xor
iret
out
mov
pop
dec
stos
mov
ins
adc
sub
ds
lds
dec
retf
in
pcmpeqd
and
and
or
test
pushf
or
jp
push
shr
sub
cmp
aas
pusha
jge
pusha
inc
mov
cmp
lods
int3
adc
in
adc
add
adc
fdivr
loop
mov
push
push
retf
or
std
mov
jl
nop
(bad)
jno
dec
fdivr
bound
rcr
call
add
sti
inc
cmp
ror
or
scas
loop
mov
fistp
out
into
ror
cmp
cwde
adc
retf
rcl
xchg
mov
imul
out
push
adc
(bad)
and
dec
fild
imul
push
inc
leave
das
jmp
inc
ja
pop
add
xchg
fimul
add
or
jge
pop
xchg
mov
push
or
mov
adc
daa
cwde
fsubp
cwde
inc
hlt
cmps
mov
cwde
rcr
or
sbb
sbb
outs
in
push
push
iret
mov
inc
adc
sbb
aaa
cmc
xchg
or
enter
bound
inc
adc
pop
pop
push
pusha
fld
cmps
cmovbe
ins
inc
mov
outs
sbb
loopne
sub
rcl
dec
adc
inc
mov
cmps
hlt
inc
ror
(bad)
out
test
dec
cwde
test
in
sbb
jle
mov
adc
movs
push
mov
inc
inc
and
dec
mov
mov
aad
sbb
push
pop
retf
mov
stos
xchg
mov
cwde
lods
(bad)
aas
dec
sub
bound
jl
xchg
push
cmps
das
xchg
in
push
or
xor
push
aad
cmp
fidivr
retf
adc
sub
or
jge
or
inc
adc
leave
out
gs
fadd
int
test
and
jo
mov
mov
test
xchg
fwait
data16
sub
cmp
mov
in
mov
xchg
loop
mov
add
and
fwait
adc
ds
call
add
cwde
out
scas
cld
jbe
inc
aas
mov
in
sahf
xchg
daa
call
add
sub
and
xchg
push
leave
mov
add
fcmovnb
pop
(bad)
aad
lea
sahf
out
push
cmp
imul
add
loop
cmps
sbb
fstp
sbb
int3
int3
sub
test
push
inc
sbb
sub
mov
dec
adc
std
push
mov
mov
mov
sbb
or
xor
mov
cmp
or
push
cmps
dec
dec
sub
add
popa
mov
cmp
into
push
ss
xchg
cs
mov
inc
rol
inc
icebp
femms
jmp
imul
pop
pop
and
xchg
xor
cmp
push
xor
fs
sbb
test
(bad)
push
xchg
mov
inc
nop
push
mov
loope
xor
jl
pushf
out
ja
xor
jl
dec
fwait
and
js
imul
push
popa
mov
lds
icebp
mov
fs
inc
ss
xor
sbb
mov
imul
call
ret
imul
hlt
mov
jmp
ror
xor
and
aas
clc
jnp
in
aaa
aaa
shl
fistp
jmp
and
jae
ficom
cmp
sbb
les
pop
xor
jmp
das
outs
adc
stos
test
or
call
ffreep
repnz
jbe
pop
pop
mov
dec
xchg
mov
test
xlat
imul
fistp
mov
and
popa
dec
sub
jmp
inc
mov
adc
jne
repz
cwde
push
stos
(bad)
adc
push
mov
outs
ss
stos
or
dec
lods
adc
inc
outs
add
or
mov
rep
fidiv
mov
bound
xchg
adc
repnz
into
sub
fldenv
imul
sub
pop
sbb
call
or
pop
or
mov
loop
test
dec
xor
(bad)
lock
aas
loope
sub
mul
(bad)
fiadd
sahf
call
lea
cmps
in
sbb
cmp
(bad)
cld
retf
mov
dec
sub
in
push
push
pusha
add
out
loopne
xchg
mov
jno
outs
or
and
bound
movs
loop
or
push
outs
pop
ins
add
jl
jae
movs
scas
fadd
xchg
inc
xor
mov
xchg
xchg
pop
fsubr
sbb
xchg
lds
cmp
adc
int
out
dec
sbb
jbe
hlt
pmaxub
and
sub
call
or
inc
push
imul
push
xchg
repnz
and
push
cmps
fs
movs
pop
mov
mov
pop
pop
mov
and
push
in
aam
adc
pop
clc
xchg
fisub
xchg
cmp
addr16
rcr
rcr
push
stos
fidivr
pushf
xlat
in
ins
adc
mov
mov
inc
push
sbb
rcl
shl
mov
ror
in
popa
dec
sub
arpl
xchg
cmps
sbb
push
repnz
pushf
inc
mov
cdq
(bad)
push
movs
aad
das
(bad)
fst
jb
or
mov
lahf
call
iret
shr
mov
or
xor
mov
pop
sbb
xchg
sub
pop
rcr
daa
or
mov
fnstsw
inc
(bad)
xor
mov
sar
push
nop
mov
cmp
popf
push
inc
shr
mov
push
inc
lock
mov
or
mov
mov
imul
retf
sbb
add
inc
mov
push
ret
xchg
xchg
adc
(bad)
sar
sbb
inc
loopne
mov
mov
jae
hlt
pop
cmp
(bad)
sbb
jb
push
aaa
sub
push
jne
stos
jb
mov
fisub
int3
mov
or
jo
jb
xchg
add
inc
jmp
push
push
mov
or
xchg
or
dec
xchg
ins
sub
pop
inc
mov
les
(bad)
idiv
out
dec
mov
out
cmc
jge
aas
(bad)
sbb
je
dec
xchg
pop
stos
xor
mov
inc
push
dec
mov
push
mov
(bad)
not
mov
add
add
cmp
lock
das
(bad)
cmp
mov
mov
pop
sub
add
sub
or
getsec
xchg
ret
pop
lahf
ins
(bad)
mov
inc
fbld
std
mov
jns
out
jl
jecxz
pop
xor
push
inc
mov
push
je
sbb
call
int
sub
clc
pop
(bad)
aam
iret
sahf
cmps
add
addr16
pop
add
mov
and
sti
nop
rol
loopne
cmp
mov
enter
in
add
(bad)
(bad)
(bad)
mov
add
dec
cmp
add
scas
leave
in
cmp
add
js
stos
out
and
cwde
shl
outs
and
jl
add
jne
imul
rcr
repnz
sar
(bad)
and
repz
jg
mov
jge
mul
inc
bound
sbb
or
bound
nop
loop
mov
jno
xor
fdivr
inc
jg
loopne
lods
push
sub
fwait
lods
inc
fcomp
jecxz
xor
iret
pop
push
add
mov
xor
pop
dec
sub
mov
cmp
addr16
cli
inc
test
or
jns
mov
retf
or
or
fsubr
cmp
and
adc
push
dec
add
in
repz
sub
ret
jo
jle
cld
fnop
sub
inc
mov
jae
add
les
mov
pop
cdq
cdq
mov
inc
fsubr
add
mov
sbb
push
lock
adc
inc
or
fiadd
mov
pop
mov
jmp
xor
mov
xor
xchg
and
or
xchg
sbb
sbb
cli
pop
xor
(bad)
std
pushf
sbb
aam
popf
jbe
inc
aas
jge
xchg
mov
mov
pop
jno
mov
jne
dec
test
xchg
es
push
mov
ficomp
aas
test
push
clc
mov
ret
mov
aad
sbb
adc
mov
lea
jnp
bound
cld
inc
mov
in
out
fsub
mov
or
fidiv
dec
mov
aad
retf
mov
xor
aas
jmp
pop
xlat
(bad)
cmc
xor
mov
bound
je
jle
inc
mov
push
movs
xchg
push
scas
sbb
aad
les
cmps
jp
adc
clc
sbb
mov
push
jne
push
or
js
hlt
inc
cli
or
adc
push
mov
xor
jl
jne
push
mov
cwde
dec
in
mov
clc
and
addr16
add
hlt
inc
les
data16
gs
sub
popf
mov
sti
pop
pop
mov
push
popa
scas
mov
jl
pop
daa
mov
mov
mov
lock
sbb
call
aad
dec
add
idiv
push
int3
sbb
fmulp
mov
jp
jge
mov
mov
ficomp
loope
in
in
sbb
iret
sbb
cli
std
xchg
fst
or
icebp
mov
pop
pop
aas
jle
dec
repz
and
pop
into
sbb
inc
pop
les
jb
mov
ins
es
scas
mov
cmp
sub
mov
shl
clc
xor
push
icebp
aaa
sub
mov
fdivr
mov
test
add
(bad)
fwait
mov
and
push
push
test
popf
xchg
pop
add
out
mov
xchg
shl
cwde
stos
add
aam
(bad)
fbstp
pop
fcom
aad
je
xchg
dec
sub
imul
push
or
xchg
jb
mov
in
gs
shr
mov
das
data16
lock
add
mov
xchg
jb
loop
xchg
(bad)
pop
lea
movs
push
fs
mov
aaa
mov
xor
add
and
add
mov
lock
xcrypt-ctr
cmps
pop
aas
xlat
ds
push
sbb
das
push
mov
jb
mov
xor
scas
scas
neg
pop
adc
mov
dec
mov
loop
sbb
xor
scas
cmp
cmp
mov
cmc
or
loopne
hlt
in
xchg
xchg
mov
jle
dec
inc
push
sti
or
mov
movs
int
add
jae
xor
sub
ror
or
pop
loopne
jmp
(bad)
out
jno
or
lock
xchg
dec
int
in
push
repz
add
jg
cs
cmps
cmc
mov
lods
loopne
aam
(bad)
mov
xchg
fisttp
mov
jbe
mov
jo
out
and
adc
inc
call
push
data16
pusha
fwait
nop
(bad)
js
add
xchg
mov
dec
popf
jl
mov
mov
xchg
pusha
in
adc
jno
shr
pop
or
jmp
scas
jo
sbb
scas
mov
push
pop
hlt
cmp
rcr
hlt
xchg
int
enter
int3
sbb
mov
jns
fisubr
add
mov
adc
sub
aas
(bad)
stos
jmp
ins
mov
xchg
push
push
hlt
fcom
mov
lea
popa
fnstcw
inc
xchg
pop
cli
sbb
cs
pop
xor
sub
call
pop
sbb
sub
nop
mov
and
lahf
fisub
sbb
and
and
mov
ds
adc
hlt
jo
enter
lods
push
mov
mov
adc
ins
iret
lods
retf
mov
les
fistp
movs
test
mov
push
stc
pop
add
and
daa
mov
ja
aaa
adc
jecxz
or
std
aam
push
out
pop
ror
mov
out
scas
lods
rcr
push
call
fadd
pop
popf
mov
cmp
mov
xlat
aaa
pop
xor
xchg
call
push
sub
fcomp
scas
cmp
or
mov
in
out
add
arpl
pop
loop
mov
add
lods
imul
or
aad
pop
jno
add
popa
int3
rcl
test
ret
pop
sbb
sbb
rcr
ficomp
mov
fwait
and
dec
and
mov
push
adc
sub
jmp
loop
daa
mov
pop
mov
imul
inc
mov
xchg
ds
ins
hlt
cmp
aaa
mov
cmp
in
movs
out
out
in
lock
into
mov
jne
pop
outs
and
cmps
pushf
jbe
enter
jno
xor
inc
xor
xchg
and
cmc
les
jb
mov
dec
(bad)
(bad)
mov
add
test
in
inc
test
jmp
fstp
(bad)
sahf
fidivr
sub
test
jno
mov
sub
es
cs
dec
loopne
pop
or
cwde
(bad)
and
mov
cli
test
pop
and
add
data16
and
xlat
mov
clc
int3
mov
sub
cmp
cmp
in
jne
xor
sub
out
jne
fimul
(bad)
sub
ds
add
jl
shl
inc
cmps
cli
cmp
sub
or
and
test
sub
or
and
jmp
dec
mov
xchg
fimul
jno
inc
push
xchg
int
mov
xchg
cli
dec
cld
mov
stos
into
ret
jp
mov
xchg
xor
cmp
or
add
xor
call
arpl
or
jg
call
movs
ins
push
in
pop
xor
mov
mov
call
dec
cld
sub
dec
div
or
int3
stos
push
adc
adc
rol
mov
test
aad
lock
mov
push
ret
pusha
cld
outs
cmps
pop
xor
jge
adc
stos
jecxz
xor
sbb
pop
fnstsw
leave
jge
retf
pop
jmp
sbb
jbe
fdiv
push
cmp
in
pop
enter
call
xor
icebp
dec
mov
lods
and
std
jne
pop
lds
pop
out
inc
loop
adc
add
scas
lea
int
and
stos
loopne
test
sub
out
fld
push
mov
fnsave
xchg
rol
sub
sahf
fistp
push
call
push
ret
jle
pop
popf
test
mov
ud1
inc
sbb
ss
fld
(bad)
lods
jp
jns
imul
das
gs
fimul
adc
cs
push
ror
push
push
jecxz
ret
push
inc
pop
pusha
shl
jb
fdiv
push
cmp
cmp
popa
jp
push
(bad)
popa
mov
sub
aas
push
add
pop
dec
mov
(bad)
aaa
dec
fwait
mov
jge
push
push
rcr
xor
mov
or
pop
shl
xor
outs
(bad)
mov
pop
mov
pop
push
ret
int3
aaa
lahf
lock
repnz
jmp
push
add
hlt
jmp
mov
jno
xor
(bad)
out
out
sti
test
loop
scas
lea
call
pushf
retf
in
jmp
shr
xor
sbb
jp
add
retf
and
sbb
cwde
lods
lea
sub
popa
shl
sub
jae
test
or
xchg
daa
stos
ficomp
xor
xchg
cs
test
jge
ja
js
push
jle
loope
rol
jne
out
popf
add
loop
xchg
pusha
inc
push
aad
mov
leave
bound
pushf
rol
jl
push
shr
xchg
call
xchg
mov
mov
jecxz
push
aam
test
je
mov
inc
cmps
add
mov
jo
mov
fiadd
mov
and
aad
scas
fwait
mov
mov
sub
loop
int3
and
dec
test
pop
rol
clc
cmps
or
cmp
rcr
mov
int3
rcr
test
ss
xchg
rcl
jae
fsub
ret
mov
nop
sub
fild
loopne
fldcw
fld
iret
xor
push
xor
js
jo
push
dec
or
inc
jno
aad
aaa
gs
jno
test
test
inc
es
ds
jle
retf
pop
(bad)
add
sbb
imul
(bad)
cmps
xchg
ss
icebp
adc
xor
inc
cwde
xchg
ss
and
fbld
ret
cwde
xchg
inc
out
bound
ret
mov
lods
sbb
mov
cmp
sub
pop
sbb
fdiv
mov
jmp
and
pop
repz
pop
ja
sub
mov
mov
cmp
push
cmps
xchg
cmps
pop
loopne
or
mov
and
out
ja
shl
push
push
in
pusha
jmp
dec
jmp
jns
and
call
loopne
cmps
stc
jns
xor
xchg
retf
cmp
rcl
sub
sar
push
in
test
and
imul
pop
add
loop
aas
ret
jp
mov
arpl
(bad)
fwait
test
push
test
push
inc
das
out
pop
outs
add
fs
xchg
add
add
out
ins
push
(bad)
gs
and
and
xor
cmp
mov
pop
test
inc
push
sar
adc
fdiv
cmp
(bad)
push
sbb
repnz
add
jns
pop
add
fadd
xor
mov
mov
in
mov
add
xor
out
push
sub
retf
mov
mov
cmp
push
shr
retf
or
(bad)
mov
sahf
xor
imul
pop
dec
jmp
ja
dec
xchg
and
xor
push
or
cmps
dec
adc
outs
lods
mov
xchg
sahf
pop
adc
mov
mov
aam
dec
fcom
int
out
pop
adc
adc
retf
xchg
imul
scas
es
mov
fild
cdq
sub
out
jae
mov
int3
or
sbb
add
dec
sahf
pusha
mov
ins
loop
cmp
sub
outs
aaa
pusha
xchg
(bad)
fsub
out
jo
retf
mov
push
jp
jp
repz
sub
dec
out
enter
cmp
push
jb
ficomp
movs
jb
loope
arpl
ficom
loopne
jae
jne
(bad)
mov
scas
bound
push
adc
adc
or
sub
retf
sar
push
loope
mov
fsub
lods
test
xchg
xchg
jp
test
cld
test
or
dec
pusha
sub
and
movs
cmp
mov
mov
sti
imul
aaa
loope
mov
mov
adc
mov
ins
push
aaa
jmp
xor
fxch
scas
adc
outs
sub
in
int3
imul
push
in
mov
push
xor
mov
adc
inc
mov
fist
mov
es
shl
cmp
add
arpl
dec
rol
fnsave
xchg
mov
ret
aad
mov
inc
loope
sbb
shl
pop
ins
cmp
jo
cdq
lds
dec
mov
iret
xchg
das
pusha
cmp
ins
pop
test
xchg
xor
out
stos
adc
sti
hlt
pop
cmp
cmc
mov
adc
dec
jmp
xchg
arpl
test
clc
cwde
jp
scas
ficom
pop
imul
xchg
rol
sub
imul
(bad)
sub
mov
int
pop
outs
cmp
dec
push
mov
movs
xchg
cmp
push
iret
cmps
test
int3
sbb
sti
hlt
push
add
lahf
mov
jno
sub
hlt
rcl
push
sub
dec
movs
ret
clc
add
cmps
into
push
sbb
je
mov
sbb
mov
mov
in
rol
xor
add
fstp
arpl
ret
stc
or
test
or
punpckhwd
repz
ja
movs
rcl
cmp
jle
das
xor
push
aas
scas
shr
jl
gs
ss
cmp
or
test
cmp
(bad)
mov
cmc
ret
es
push
fsub
jp
and
or
xchg
xsaves
add
push
sbb
add
push
in
int3
jne
(bad)
sbb
jle
or
dec
push
inc
jmp
(bad)
test
sub
pushf
rol
dec
pop
int3
pop
pop
fiadd
adc
shr
cmp
scas
cmps
add
inc
sbb
cmp
push
inc
pop
push
or
in
xchg
je
aas
dec
sub
dec
mov
out
fbld
add
test
loop
xchg
test
test
ja
mov
(bad)
mov
xchg
sbb
lock
fidiv
pop
fild
pop
xchg
cs
inc
xchg
dec
pop
adc
mov
add
cmp
mov
test
lods
imul
inc
lods
cs
lahf
dec
mov
jmp
imul
stos
mov
ins
add
call
imul
nop
pop
pop
(bad)
sub
mov
js
add
(bad)
pop
jp
sbb
xchg
inc
aad
jo
ret
push
int
adc
repz
adc
clc
and
mov
movs
inc
lds
dec
scas
mov
mov
int
rcl
sar
add
sbb
push
inc
xchg
push
mov
xchg
fidiv
fs
es
jbe
les
stos
add
mov
add
cli
leave
xor
or
pop
stc
xor
loope
cmp
mov
adc
mov
xchg
test
jge
mov
out
mov
mov
mov
jl
push
fisttp
and
sub
inc
mov
add
ins
pusha
cmp
hlt
jp
mov
push
xchg
and
add
in
(bad)
ret
dec
cli
jo
rcl
push
push
loop
test
test
ret
xor
test
call
sbb
xor
push
xchg
scas
imul
and
dec
int3
cmps
cmp
mov
jb
mov
jno
dec
mov
push
loopne
mov
(bad)
push
mov
popf
in
aas
ins
in
ds
xchg
or
popf
inc
pop
pop
ror
(bad)
shl
push
repnz
inc
nop
arpl
adc
jecxz
sbb
pop
adc
out
jbe
xchg
fisubr
jg
add
aaa
in
aam
jo
xor
pop
mov
sub
mov
xchg
inc
icebp
mov
adc
sahf
adc
and
(bad)
lock
cdq
and
sbb
popf
cwde
inc
and
push
or
sbb
adc
outs
stos
or
loop
mov
add
shl
fnstcw
dec
dec
data16
mov
or
pusha
and
dec
jne
push
add
dec
cmp
cli
xor
mov
jmp
xor
mov
popa
out
popf
cs
push
dec
iret
mov
dec
pusha
movs
cmp
inc
fldlg2
shl
out
lods
xchg
mov
(bad)
(bad)
sti
cmp
repz
mov
shl
dec
sbb
and
js
cmp
retf
loopne
jns
mov
push
ret
ss
in
cmp
adc
es
push
jo
and
dec
aad
cmp
fiadd
and
(bad)
fld
sub
jp
scas
cld
and
mov
adc
jb
mov
xchg
jg
jno
mov
mov
stc
aad
ret
cmp
jbe
jge
jbe
cmp
mov
push
(bad)
xchg
pop
dec
sub
and
and
jecxz
and
popa
mov
push
inc
sbb
sbb
or
aas
rol
sub
pop
dec
ret
stc
push
push
repz
rcl
or
xchg
and
das
sbb
nop
mov
mov
jmp
pushfw
or
adc
sbb
test
(bad)
in
cmp
sub
xchg
adc
addr16
arpl
inc
add
addr16
in
lock
mov
cmps
sub
ss
aas
fld
xchg
sbb
aam
mov
inc
dec
adc
mov
ret
pop
jae
mov
mov
mov
ss
pop
add
pop
out
or
(bad)
fld
jge
cmp
mov
popf
mov
jl
jae
lods
ja
loop
imul
(bad)
mov
sbb
mov
loope
stos
loop
dec
jae
dec
test
inc
sub
loopne
ja
inc
xor
adc
or
jmp
ds
pop
hlt
popf
mov
pop
adc
sub
mov
xchg
das
inc
or
mov
sub
cmp
and
fcom
dec
sub
push
xchg
add
sbb
pop
addr16
nop
adc
jp
dec
mov
int
push
lahf
add
stos
inc
mov
loope
ss
cmps
sbb
loope
aaa
mov
test
in
mov
adc
sub
cmp
mov
loop
shl
cdq
sbb
enter
mov
mov
jno
fwait
hlt
stc
out
stos
aam
out
outs
sub
or
cwde
test
les
adc
int
and
jb
cdq
mov
cs
test
ins
jl
cmps
pop
jecxz
push
jmp
bound
cmc
xchg
cld
jne
jo
jl
ror
push
xor
jmp
mov
sbb
inc
clc
xlat
in
loop
sub
(bad)
cmp
scas
stos
ror
jmp
je
ds
inc
stos
ss
in
mov
mov
dec
neg
stos
fwait
jl
mov
dec
xchg
arpl
add
mov
fstp
hlt
sbb
enter
xor
xchg
xchg
mov
inc
stos
adc
idiv
pop
sub
outs
lods
mov
pop
out
outs
cmps
push
xchg
scas
and
(bad)
jae
jge
dec
jmp
pop
ror
mov
push
rol
iret
data16
popa
pop
gs
test
pop
pop
loop
movs
dec
jnp
adc
cmps
cmp
scas
lods
push
inc
mov
or
jns
add
and
xor
push
inc
mov
ins
adc
jno
into
or
sbb
test
dec
cli
push
xlat
mov
pop
shr
pop
jae
adc
out
paddb
stos
cmc
mov
repz
js
mov
or
mov
adc
jle
shl
repnz
jae
jb
les
bound
jl
xor
movs
or
enter
fst
ror
jbe
movs
sti
leave
cmp
shl
pop
pop
pop
mov
dec
xor
aad
mov
mov
cdq
in
out
adc
ins
ss
xchg
pop
lahf
pop
(bad)
ja
pusha
inc
pop
jg
cmp
adc
xchg
jae
cmc
call
js
mov
xor
ja
cmp
xchg
fisub
repz
adc
out
sbb
icebp
mov
xor
xor
pop
or
dec
clc
and
in
xchg
aam
popf
enter
aad
dec
jl
push
call
dec
int3
call
je
dec
xor
push
daa
adc
sti
jge
xor
fidiv
call
xchg
sbb
sbb
xchg
and
nop
inc
nop
ja
rol
call
dec
adc
xchg
adc
les
ret
sbb
push
test
mov
adc
sbb
jle
cmp
popf
pop
sti
lahf
jg
xor
or
sahf
aas
push
dec
and
out
push
lods
enter
daa
mov
adc
mov
add
test
adc
(bad)
pop
lahf
enter
stos
cs
mov
or
mov
sbb
ret
xor
pushf
cmp
push
pop
loope
dec
jno
jge
push
(bad)
int
enter
jl
(bad)
sub
mov
retf
push
sub
out
xchg
ja
shl
xchg
je
adc
ins
scas
fdiv
stos
push
cmp
mov
ret
push
rol
fld
mov
adc
sub
push
sbb
sbb
out
pop
lds
adc
xchg
inc
xchg
imul
sub
test
xchg
jp
iret
jge
jg
mov
test
ins
pop
cmp
jmp
pop
enter
sub
add
adc
jbe
sbb
push
pop
jns
push
xlat
xchg
hlt
mov
push
ret
(bad)
cmps
and
mov
retf
xor
mov
sbb
mov
jmp
icebp
or
push
jno
xor
mov
mov
mov
or
xchg
mov
pushf
(bad)
enter
push
mov
inc
hlt
into
fwait
xor
mov
nop
jne
fistp
jl
test
mov
cmp
sub
bound
mov
xor
mov
sbb
fist
hlt
mov
pop
sbb
inc
rcl
jae
push
mov
mov
loopne
lahf
mov
rcl
sbb
xor
push
popf
push
shr
pop
mov
movs
stos
adc
dec
adc
call
aam
cmps
pop
daa
lea
mov
inc
and
arpl
jnp
fld
std
xchg
xchg
call
imul
ret
push
fidivr
push
jne
jl
ret
sub
lods
lahf
and
icebp
stos
xlat
outs
cmp
in
ss
mov
pop
fwait
dec
leave
ds
ret
lea
mov
sahf
sub
out
hlt
rcr
fcomp
mov
inc
add
imul
push
stos
scas
int3
fucom
clc
pop
mov
dec
(bad)
inc
and
rcl
js
aas
sahf
mov
mov
xor
test
mov
jmp
jno
mov
lods
or
sbb
mov
retf
jns
jb
(bad)
(bad)
scas
ins
dec
jecxz
push
jge
fmul
pop
dec
jo
outs
int3
pop
xor
inc
ret
sahf
jnp
(bad)
mov
mov
mov
inc
push
enter
sbb
jmp
inc
stos
dec
sub
push
fmul
adc
fimul
xor
inc
jg
mov
mov
mov
xor
or
(bad)
lods
out
add
cmp
jle
cmp
lahf
popa
mov
xor
movs
sti
addr16
or
add
inc
jle
mov
mov
lods
(bad)
cli
test
and
loope
sub
aad
cld
jne
gs
mov
stos
xor
mov
scas
and
clc
jno
sub
sub
jmp
(bad)
fdivr
les
jmp
(bad)
(bad)
sub
xlat
mov
and
push
inc
movs
faddp
imul
add
out
test
push
mov
test
add
sbb
and
je
or
popf
or
mov
fst
pushf
dec
sbb
lock
xchg
shr
retf
je
repnz
inc
or
push
lods
cli
out
fcomp
aam
xor
js
repnz
xchg
ins
mov
pop
cli
push
pop
add
ja
mov
in
cmps
jl
retf
xor
xor
sbb
dec
mov
stc
adc
jnp
sbb
add
mov
ficom
push
lahf
push
mov
leave
in
gs
adc
fnstcw
test
adc
jno
mov
push
mov
jge
call
in
pop
ret
(bad)
addr16
imul
test
jp
and
daa
jle
loope
in
int3
mov
or
jecxz
mov
dec
jp
pop
mov
ja
aam
sbb
les
mov
jae
test
sbb
(bad)
in
jne
mov
xor
nop
(bad)
daa
int3
sbb
or
jmp
xor
retf
int
xor
inc
add
enter
push
or
push
pop
shl
jo
arpl
sub
das
mov
mov
sbb
pusha
jne
imul
push
add
outs
(bad)
mov
mov
sub
adc
mov
sub
xchg
sub
std
rol
and
clc
mov
xchg
inc
dec
lock
loope
lods
jge
pop
pushf
sar
inc
mov
pop
in
cmp
xchg
xchg
sbb
cmps
into
cmps
lock
(bad)
cld
nop
in
pop
pop
stc
icebp
movs
(bad)
fdiv
(bad)
sub
dec
(bad)
or
xlat
mov
sub
push
adc
add
out
xchg
imul
shr
mov
mov
push
dec
retf
nop
mov
jl
lahf
add
repz
hlt
xchg
(bad)
and
and
jo
cmps
add
outs
hlt
and
mov
ss
push
cmp
(bad)
js
adc
jg
push
push
push
sub
mov
(bad)
sub
mov
cmp
fnstcw
jp
fwait
push
pop
and
int
mov
mov
push
cmp
xlat
mov
in
daa
push
aaa
mov
das
out
mov
lock
fstp
scas
cdq
not
sub
out
into
xchg
ins
sbb
imul
and
aam
shl
sti
fisttp
out
sub
pop
mov
mov
hlt
das
jno
mov
sbb
xchg
sbb
or
mov
loopne
mov
(bad)
int
dec
pop
leave
mov
mov
xchg
shl
push
cmp
jbe
push
push
js
fisubr
outs
out
dec
lahf
sar
scas
mov
xchg
xchg
inc
jecxz
pop
inc
stc
push
push
aam
or
not
dec
xchg
push
stos
pop
ins
mov
adc
cmp
xchg
mov
jo
fmul
jb
sub
jae
xor
pop
test
jg
and
aaa
fwait
xor
mov
imul
in
inc
adc
or
ss
fwait
adc
je
fwait
mov
add
scas
outs
xchg
inc
pusha
(bad)
and
cmp
mov
loope
pop
push
shr
ins
test
scas
pop
or
and
dec
mov
(bad)
retf
retf
pop
(bad)
pop
ins
les
outs
(bad)
enter
arpl
or
stc
adc
shl
sti
mov
daa
mov
mov
pusha
push
popf
mov
sub
(bad)
jecxz
push
cmps
pop
sub
mov
or
mov
(bad)
push
fnstcw
call
in
jno
sub
push
sbb
iret
out
call
sbb
es
adc
test
mov
adc
sub
aam
or
into
mov
or
dec
jg
in
sub
xor
add
pop
imul
adc
or
sar
pop
pop
(bad)
enter
xchg
mov
out
outs
or
mov
jnp
popf
push
into
jns
xchg
mov
arpl
mov
femms
pop
mov
xor
loop
xchg
das
neg
fiadd
scas
dec
mov
cdq
pop
cwde
sbb
retf
jbe
inc
movs
ror
stos
stc
jno
outs
shl
add
jne
neg
mov
test
mov
push
xchg
cmp
dec
(bad)
mov
lahf
test
push
icebp
mov
mov
push
pushf
jne
mov
ins
mov
sub
sub
cmps
mov
les
test
sbb
ja
into
ja
pop
je
movs
mov
das
mov
sbb
sub
and
scas
scas
out
in
ds
(bad)
cmp
adc
mov
fs
and
cmp
gs
mov
pop
cwde
call
adc
jbe
pop
sbb
movs
movs
(bad)
mov
mov
lea
jmp
sbb
(bad)
ja
cmp
(bad)
sahf
dec
imul
mov
retf
adc
and
int
movs
push
xor
xchg
imul
arpl
inc
fidiv
lods
ds
cmp
out
dec
mov
add
test
push
adc
jbe
sar
aas
mov
pusha
rol
ss
mov
imul
imul
push
dec
adc
push
xor
(bad)
jmp
(bad)
push
xchg
xchg
ja
(bad)
daa
inc
sub
aas
cmp
mov
cmps
mov
xchg
icebp
sar
jne
sar
mov
xchg
mov
fild
lds
or
mov
in
pusha
cmp
mov
adc
sub
push
addr16
sbb
push
dec
adc
loope
push
mov
and
push
add
sub
mov
xchg
hlt
mov
inc
pop
push
icebp
sar
sub
aas
xor
add
std
loope
mov
sub
mov
pop
inc
sub
mov
shl
inc
leave
xchg
test
push
mov
dec
pop
das
xchg
test
jecxz
out
add
jno
popa
jo
arpl
js
fmulp
dec
xchg
push
sar
je
out
fcmove
or
maxps
sub
dec
jmp
scas
pop
inc
or
or
mov
mov
add
(bad)
je
pop
scas
mov
push
or
fisubr
jnp
fisubr
test
into
ret
pushf
aas
jmp
ja
mov
ss
cmp
shr
rcr
xor
sub
pop
jne
xchg
xchg
jno
in
sbb
sub
sub
push
push
pop
jb
sub
xchg
or
loope
push
mov
push
out
jle
mov
imul
imul
cmp
xor
and
or
lea
mov
mov
sub
sub
daa
xlat
jmp
je
shl
add
jo
inc
js
mov
lock
xchg
push
mov
adc
retf
es
cmp
mov
in
mov
mov
movs
xchg
inc
jge
xchg
cmc
ins
or
pop
popf
mov
cli
retf
jmp
or
xor
mov
es
ds
dec
or
or
jl
fsubr
js
sbb
pop
pop
mov
sub
retf
fstp
jl
(bad)
scas
pushf
mov
je
imul
dec
pushf
xor
mov
sub
push
or
and
movs
jp
iret
inc
and
sub
in
lock
xchg
and
add
adc
xor
mov
pop
and
inc
pop
lods
leave
adc
popf
(bad)
fnstenv
fwait
retf
mov
pop
mov
and
test
out
adc
ret
sbb
push
int3
jmp
jns
jecxz
mov
call
nop
imul
popa
push
rcl
outs
xlat
adc
lock
or
es
add
sbb
cmp
idiv
out
in
mov
in
popa
cli
dec
je
lods
mov
push
sbb
jmp
repnz
mov
mov
inc
mov
inc
push
and
retf
pop
hlt
popf
push
xchg
aam
fcmovnu
fidiv
adc
movs
(bad)
icebp
movs
sbb
mov
xor
lds
pop
stc
sub
cwde
and
or
ins
mov
cdq
add
cmp
test
dec
jbe
outs
mov
outs
mov
out
sbb
pop
ret
lods
popf
fsub
rcl
adc
fmul
lods
int3
call
hlt
mov
push
idiv
and
add
adc
push
out
mov
ds
mov
je
call
push
or
xchg
loope
mov
inc
in
int3
push
imul
cmp
daa
jg
pop
aaa
push
mov
ror
jmp
fnstsw
mov
sub
in
xor
mov
and
iret
pop
pop
push
dec
addr16
mov
push
jmp
(bad)
shl
sub
retf
dec
cmp
pop
in
pop
int
and
push
sbb
xchg
lea
fisttp
mov
pop
and
cld
or
and
out
lds
adc
mov
mov
aaa
and
cmp
(bad)
pop
push
rol
pop
mov
stos
lods
aaa
sbb
dec
test
retf
push
and
int
in
retf
call
and
mov
jmp
mov
jle
mov
sbb
call
jbe
push
push
dec
ds
xchg
jl
xchg
(bad)
int3
enter
movs
shl
call
jge
into
cwde
jmp
fcomp
jnp
inc
cmp
sbb
jo
in
frndint
pushf
fucomi
bound
sti
sub
cli
push
add
dec
sbb
scas
xor
dec
lea
mov
pop
inc
cmps
sbb
sub
fst
sbb
out
rcl
add
daa
pop
xor
mov
call
xchg
fidiv
mov
aas
pop
loopne
dec
cdq
inc
lods
xchg
pushf
fstp
loop
sbb
jbe
lds
mov
adc
cmp
jp
pop
je
xchg
jo
xchg
ja
stc
push
add
sub
ret
jl
imul
hlt
push
mov
arpl
xchg
call
push
jb
pop
inc
or
ss
cmp
(bad)
das
add
sti
xchg
cld
inc
nop
imul
outs
cmp
push
mov
hlt
mov
stos
inc
cmps
push
enter
dec
sub
fidivr
jmp
jg
lods
sbb
cmp
and
repnz
pop
and
mov
ins
es
push
xor
test
mov
inc
call
fld
jecxz
jns
cmps
lea
jae
inc
jl
jne
push
rcr
cmp
add
dec
das
aaa
mov
jmp
push
fnstenv
lock
scas
pop
(bad)
lods
cmp
and
dec
jmp
js
xor
inc
dec
pop
jnp
push
inc
sbb
mov
and
xchg
test
cmps
loopne
shl
jmp
ja
push
and
mov
cmp
push
das
sub
cmps
mov
outs
jmp
lea
in
pop
int
loope
pop
pop
adc
fld
aas
les
push
pop
sbb
shr
ret
cli
sub
call
mov
and
add
adc
cdq
jmp
rol
retfw
repnz
leave
push
in
sbb
mov
jecxz
sahf
xor
sbb
push
loope
or
clc
inc
mov
fsubr
pop
in
mov
dec
jmp
xchg
mov
xchg
iret
ret
ja
(bad)
and
imul
cli
rcl
int
sbb
push
stos
pop
stos
neg
adc
push
pop
ins
pop
es
sahf
ins
push
int
inc
adc
jae
pop
es
xor
repnz
pop
mov
push
jne
arpl
popf
inc
or
scas
mov
cmps
pop
push
iret
jo
ret
ins
sub
mov
mov
jne
or
mov
adc
cmc
dec
dec
or
or
mov
jne
repz
sbb
addr16
mov
sbb
cmp
and
adc
std
not
leave
mov
dec
sahf
dec
popa
mov
xor
inc
rcr
adc
jg
ret
in
xchg
fs
dec
clc
cli
loop
pusha
push
xchg
(bad)
push
push
std
test
push
cmc
pop
adc
push
stos
sbb
inc
mov
outs
es
jno
inc
ror
adc
mov
xchg
or
fsqrt
call
int
arpl
cdq
dec
jmp
movs
pop
outs
pop
mov
imul
das
inc
cli
xor
cli
data16
jecxz
fidiv
cmp
add
scas
xchg
bound
xchg
pop
cwde
sti
enter
sub
lock
xor
aam
sub
sub
rcr
loope
ss
sbb
daa
sub
and
icebp
lahf
add
jb
mov
inc
iret
in
pop
jle
jmp
mov
das
pop
nop
jnp
je
test
xlat
sbb
iret
or
sub
retf
outs
repnz
sub
push
ror
inc
pop
aas
retf
pop
out
sti
cmps
pop
ins
jecxz
movs
iret
cmps
popf
aas
fnstcw
xor
jmp
cmc
mov
dec
mov
adc
stos
push
pusha
xchg
shl
test
arpl
lock
call
or
outs
and
ror
or
stos
inc
dec
xchg
mov
add
sbb
movs
sbb
retf
shl
retf
mov
inc
ds
repnz
pop
mov
retf
and
push
adc
stos
xlat
mov
jne
cli
pop
push
test
jbe
mov
pop
push
and
lahf
cld
lods
icebp
pop
jge
ins
popf
call
std
iret
lds
or
jae
aam
pop
arpl
nop
nop
push
adc
sub
frstor
xchg
in
out
mov
sub
push
(bad)
aas
jl
stc
test
clc
xchg
(bad)
out
fmul
ja
xlat
xchg
jmp
mov
sbb
int
stos
outs
popf
shl
leave
(bad)
loopne
mov
sbb
push
popa
xchg
hlt
ret
inc
(bad)
mov
mov
stos
and
add
je
dec
push
dec
out
pop
jae
dec
jns
ins
xor
in
xor
cli
(bad)
jle
call
lea
adc
sbb
push
push
cld
push
mov
jbe
mov
cmps
retf
fsubrp
mov
or
int3
mov
lods
or
stos
pop
rcr
clc
dec
sub
xchg
mov
ds
retf
add
rcl
fldcw
pop
push
push
in
fdiv
mov
das
ret
cmps
pushf
sub
and
outs
xchg
rcr
cmps
inc
adc
jno
cdq
scas
cmp
mov
retf
push
es
fld
mov
inc
shl
pop
push
out
inc
mov
dec
pop
cmp
test
mov
out
ss
fild
jae
(bad)
xchg
and
cmc
xchg
sub
mov
sbb
fimul
pop
aam
sub
mov
xchg
ins
sbb
stos
adc
dec
out
inc
data16
add
aaa
sbb
sbb
das
ret
ds
div
jg
jle
fcomp
ja
mov
xchg
aad
cmp
out
nop
out
addr16
jge
xchg
rcl
lods
add
xor
jns
adc
mov
in
pop
lahf
xor
xchg
push
int3
or
cmp
into
gs
inc
push
inc
lods
fdiv
dec
mov
sahf
push
dec
push
jae
mov
pop
or
adc
ficomp
test
into
fwait
push
sub
shl
lahf
inc
rcr
stc
pop
clc
adc
fld
sub
mov
jnp
stos
lods
out
fwait
ret
inc
jo
mov
adc
pop
and
repnz
call
(bad)
cmp
mov
cmp
sub
push
xchg
cmp
jae
xchg
adc
sub
lods
enter
mov
push
xchg
shl
adc
fld
add
int3
adc
xchg
fs
nop
in
fisttp
scas
jmp
outs
push
stos
adc
daa
cmps
or
int
fiadd
mov
add
and
jp
rcl
sti
pusha
(bad)
stc
popa
imul
dec
mov
xchg
cmp
inc
aas
loop
or
sub
fcmove
ret
js
mov
xchg
and
lock
adc
addr16
pop
stos
(bad)
mov
sub
pop
fnstenv
jnp
fcmovnu
jbe
xchg
mov
mov
pop
xor
cli
adc
mov
adc
mov
mov
cmp
add
jbe
xchg
inc
or
and
xor
and
add
addr16
xlat
mov
pushf
addr16
icebp
leave
adc
push
int3
les
and
adc
mov
mov
xlat
dec
dec
(bad)
ds
out
push
inc
lock
jecxz
or
or
sbb
push
sub
mov
fistp
xchg
mov
je
rcl
adc
sahf
std
xchg
movs
push
sbb
scas
rol
in
cli
dec
in
pop
or
pop
ins
jnp
fimul
int3
ins
in
stos
ja
add
test
jns
daa
mov
loopne
xchg
ja
bound
push
test
xor
jmp
adc
ins
mov
out
movs
cmp
sub
dec
xchg
pusha
xchg
xchg
xchg
cmp
ja
sbb
or
(bad)
outs
mov
in
mov
gs
hlt
cs
lea
in
sub
sbb
out
or
sti
jg
mov
and
pop
(bad)
(bad)
cmp
sub
scas
inc
(bad)
(bad)
repz
or
outs
retf
inc
sub
ds
out
dec
mov
out
push
ins
and
sahf
inc
jl
dec
iret
pop
mov
mov
pop
test
push
xor
sbb
mov
xchg
scas
push
cmps
push
sbb
shl
jnp
scas
mov
push
iret
daa
les
sub
xor
dec
iret
std
xchg
jmp
add
loope
or
cmps
shl
and
push
popa
pop
dec
lock
and
mov
cmp
punpckhwd
push
das
in
xor
adc
cmp
push
pop
sub
and
(bad)
in
adc
cld
ror
fcomip
xchg
or
adc
sbb
push
je
test
sub
cwde
movs
mov
adc
cmc
mov
lahf
push
mov
imul
fiadd
mov
mov
dec
ds
loop
popa
loopne
cmps
retf
xor
and
mov
inc
out
aaa
xchg
push
sub
mov
cmps
les
lahf
xor
push
call
and
cmps
cmps
in
sub
pop
out
ror
push
mov
xchg
comiss
ficomp
sbb
aad
ret
aaa
shr
sub
aam
dec
rcl
shl
xchg
lahf
mov
xchg
js
data16
adc
lock
or
mov
std
(bad)
daa
sub
add
imul
fwait
dec
lock
jmp
pop
sahf
jne
jmp
jmp
addr16
or
mov
shl
pushf
mul
jo
mov
(bad)
push
adc
sti
nop
add
inc
cs
mov
sar
das
sbb
jo
inc
mov
jo
gs
or
ret
fidivr
add
add
mov
xlat
stos
sub
push
clc
mov
sbb
sub
pop
xchg
int3
pop
sbb
sub
je
in
int3
push
cwde
into
dec
(bad)
hlt
outs
xor
idiv
or
outs
pop
or
shl
inc
cs
cs
aad
jg
xor
adc
jno
enter
stc
push
in
fimul
es
fcmovne
out
aaa
adc
mov
or
test
leave
push
sub
out
pop
cmp
fs
push
in
test
lahf
add
inc
ss
jmp
jnp
mov
or
bswap
push
mov
lea
cs
sub
sub
in
pop
imul
jecxz
icebp
inc
(bad)
repnz
cs
sbb
arpl
hlt
jbe
sar
repnz
leave
xor
test
jbe
cmp
push
out
pop
mov
loop
test
push
sbb
mov
loope
lea
or
jge
or
test
dec
jmp
aam
sub
in
or
in
loopne
jl
mov
push
pop
xor
cmc
sub
out
push
mov
sbb
in
loope
push
fnstsw
or
repnz
out
hlt
jmp
fsubr
push
xchg
je
mov
mov
xor
arpl
stc
popf
ret
push
ja
(bad)
lods
sti
push
sbb
sub
cld
push
sub
cmp
push
icebp
jne
adc
jne
sahf
jb
popa
add
xor
repz
arpl
sbb
xchg
inc
cmp
loope
xchg
sub
loopne
xchg
lea
add
ret
stos
nop
fsubr
cmp
dec
call
lock
xchg
bound
popf
lock
aas
adc
mov
ins
push
movs
or
stos
inc
stc
pop
mov
into
xor
or
in
adc
shl
adc
outs
rcl
xchg
mov
(bad)
lock
mov
jb
lea
js
lods
cvtps2pi
test
xor
mov
test
dec
xor
adc
sub
jno
popa
dec
inc
mov
mov
(bad)
fisubr
icebp
leave
sbb
inc
movs
(bad)
clc
in
mov
fstp
ins
push
das
pop
icebp
das
mov
popa
xor
test
or
add
mov
push
jmp
leave
push
rcl
hlt
sub
xor
daa
add
out
sub
xchg
adc
cmps
in
cmp
xlat
mov
fdiv
mov
mov
(bad)
xor
les
xchg
call
and
cmps
cmps
mov
aam
mov
dec
sti
mov
(bad)
mov
mov
pop
test
xchg
(bad)
out
std
push
scas
push
cdq
ins
and
mov
or
rsqrtps
xlat
push
dec
jle
pop
stos
rol
cwde
inc
mov
pop
pop
mov
mov
xor
pusha
jne
xchg
or
fiadd
lahf
dec
ins
mov
jmp
pusha
mov
in
jg
enter
mov
sti
lods
xor
retf
or
add
lods
adc
sti
lock
stc
xchg
xchg
jo
scas
add
test
dec
jne
sbb
add
add
stos
leave
sti
inc
sub
mov
push
dec
push
xor
fmul
(bad)
xchg
ficomp
mov
fadd
dec
jo
fiadd
mov
or
xchg
add
add
arpl
push
in
and
in
mov
push
cli
in
pop
cwde
mov
mov
sbb
add
imul
aad
sub
pushf
adc
and
inc
stc
shl
add
in
aaa
xor
ins
adc
retf
aam
bound
inc
dec
jg
mov
ja
repz
mov
movs
push
pushf
adc
cmp
mov
fcmovnbe
sbb
enter
icebp
sub
dec
sub
data16
jge
pushf
inc
mov
xchg
into
push
jae
addr16
das
jge
jnp
outs
sbb
xor
ins
paddusw
nop
or
aad
in
xlat
or
aam
pop
sub
cmc
rol
sahf
repnz
mov
push
sub
sbb
cmp
jecxz
xor
pop
push
fprem1
mov
pop
ror
int3
cmp
sbb
pushf
cli
sub
cmps
les
cmp
xchg
or
mov
sub
in
jge
xor
imul
int
xor
xor
xor
mov
pop
popa
or
daa
sbb
imul
and
lods
jno
sbb
leave
aaa
sbb
fsub
call
dec
out
add
inc
sbb
mov
ss
fs
sub
jb
sti
mov
cmp
(bad)
data16
cmp
push
inc
in
test
(bad)
mov
dec
ss
xlat
shr
int
repnz
or
xchg
xchg
popa
add
loop
xor
(bad)
retf
dec
ins
jmp
aam
jne
add
jcxz
int
loopne
xor
loopne
xor
add
outs
mov
cs
test
mov
and
add
aas
ss
and
je
or
xchg
(bad)
in
xor
xchg
retf
sbb
sbb
movs
pop
mov
xchg
inc
dec
xor
and
mov
inc
popf
dec
sub
jns
popa
outs
sbb
jmp
cmp
sbb
xor
dec
pcmpgtd
and
pop
clc
jg
xor
mov
into
add
cmc
mov
xchg
neg
aaa
push
test
call
icebp
jle
loopne
clc
jb
ins
jmp
mov
mov
inc
jecxz
mov
cld
cmp
inc
sub
into
movs
stos
movs
in
mov
stos
stos
aad
xchg
mov
nop
inc
call
or
call
dec
xor
ins
push
xchg
push
call
mov
aas
push
(bad)
retf
inc
je
adc
dec
icebp
enter
fwait
mov
jp
jo
dec
push
mov
lods
inc
cmc
pop
sub
cli
sbb
call
int
jae
ror
add
add
mov
adc
and
outs
out
fwait
push
adc
popf
inc
sub
pusha
push
inc
cmps
lahf
les
popf
ins
sub
out
cmp
cmps
(bad)
sub
retf
test
pop
scas
xor
xor
sub
cdq
cmps
dec
(bad)
push
cmc
jmp
xchg
mov
es
jg
xor
imul
outs
ss
stos
adc
(bad)
loopne
mov
aas
mov
cmp
pop
xlat
and
rcl
(bad)
rcr
add
sbb
ins
add
add
cmp
repnz
xlat
aad
xchg
rcr
jno
retf
(bad)
out
jge
popf
loope
js
inc
xchg
and
dec
je
int3
neg
adc
or
inc
movs
jg
mov
scas
out
jl
outs
outs
xor
and
and
dec
aam
sub
adc
fucomip
dec
dec
sbb
mov
es
fdivr
outs
mov
movs
dec
adc
neg
jge
mov
rol
je
inc
or
sti
shl
(bad)
dec
das
mov
mov
jmp
jo
or
pop
push
out
cmp
xor
(bad)
mov
push
mov
xor
shr
inc
ds
inc
shl
sbb
xor
inc
push
cli
sbb
ret
out
inc
aad
shl
cmp
push
or
add
jle
xor
fcomp
and
mov
cmp
dec
cld
push
out
pop
push
sub
pop
fbstp
or
(bad)
fidivr
pop
add
cmp
jne
aam
inc
test
lahf
pop
add
dec
not
and
adc
push
test
leave
(bad)
aam
call
mov
inc
out
aam
mov
jbe
jg
xor
dec
xchg
mov
pop
push
dec
mov
lods
pop
sub
or
pop
outs
not
add
adc
push
loope
addr16
cmp
cmp
mov
adc
adc
lods
loopne
icebp
adc
sahf
(bad)
cmp
dec
pop
xchg
data16
xor
std
mov
test
(bad)
xchg
shl
rcl
inc
sbb
outs
fcomi
test
sub
les
sub
cmps
and
pop
scas
addr16
rcl
add
adc
jle
fucomp
in
ss
fs
es
mov
xor
ss
outs
adc
jb
das
enter
clc
es
repz
call
push
ds
jne
xchg
add
test
jnp
loop
fisubr
adc
pop
rol
iret
es
cmps
pop
mov
rcr
leave
je
jns
lea
mov
jle
and
push
cmp
xor
pop
add
sbb
hlt
mov
hlt
inc
call
jae
push
mov
mov
inc
mov
inc
jp
loope
pop
dec
outs
movs
mov
loope
pop
mov
arpl
inc
mov
in
cmp
inc
mov
mov
sub
sbb
push
scas
movs
aaa
pop
ret
add
or
daa
and
push
ds
popf
cwde
popf
inc
bound
jmp
adc
dec
arpl
shr
push
jae
jne
mov
push
movs
cmp
sub
cmc
pushf
jno
mov
sbb
cmp
xchg
and
fadd
add
in
sbb
in
pop
adc
mov
cmc
cs
arpl
mov
jne
pop
mov
dec
dec
out
xor
lahf
pop
out
and
jp
(bad)
mov
(bad)
in
hlt
call
pop
mov
cmp
dec
mov
push
mov
pop
mov
mov
xor
pusha
xchg
push
out
pushf
jns
inc
inc
lock
add
mov
jns
bound
mov
jnp
dec
xor
adc
gs
enter
aad
ins
or
out
neg
ins
aad
in
jg
arpl
test
and
push
(bad)
push
and
pop
int3
push
std
ja
sub
bswap
xor
jns
stos
mov
add
inc
jmp
pop
sbb
mov
movs
jmp
div
push
jp
aaa
scas
or
mov
mov
adc
lahf
cmp
xchg
lds
xchg
popa
mov
test
outs
sub
outs
rcr
retf
sbb
hlt
fimul
mov
cs
dec
rol
jmp
out
mov
jae
pop
mov
mov
ins
jge
scas
fisttp
sahf
dec
xor
or
test
cs
sbb
lods
shl
jnp
inc
shl
into
out
and
cmp
ret
mov
enter
dec
xchg
jecxz
retf
movs
mov
les
(bad)
addr16
xor
push
rcl
adc
adc
cmps
mov
movs
and
pushf
fcom
in
cmp
rcr
jecxz
xor
mov
jl
imul
dec
ds
push
les
loopne
rcr
mov
sbb
leave
aad
xor
add
adc
stos
jne
push
pop
pop
xor
xor
xlat
loope
adc
xchg
test
mov
xchg
or
ficomp
mov
pop
fistp
mov
mov
mov
icebp
jo
add
push
mov
mov
add
js
xor
mov
repz
cmp
je
fbld
or
jp
bound
mov
add
and
mov
test
aaa
add
(bad)
and
sbb
imul
xor
fiadd
ret
sbb
add
or
cwde
sub
stos
hlt
fisttp
mov
inc
mov
bnd
sub
iret
or
pop
push
in
ins
lea
add
and
mov
cs
inc
movs
dec
lea
fst
mul
mov
jmp
aam
scas
retf
jge
xchg
lahf
dec
stos
test
add
cmp
push
mov
push
cmp
sub
(bad)
pop
ret
cmp
inc
xor
add
movs
aas
jecxz
into
scas
fist
mov
cs
movs
xchg
fst
xchg
xor
clc
shr
push
lahf
out
aam
stc
inc
into
fdiv
call
fimul
div
and
cmp
xor
imul
iret
mov
mov
repz
loopne
(bad)
sub
cmps
jmp
addr16
and
test
pusha
jg
daa
push
mov
inc
test
xchg
mov
sbb
xor
pusha
add
add
xchg
das
xchg
inc
xor
addr16
test
popf
stos
fwait
and
adc
sub
push
aas
ret
xchg
repnz
jmp
rcl
adc
aas
test
pop
inc
push
jne
cld
push
push
aaa
movs
and
pop
jl
or
inc
or
je
xor
xor
push
xor
out
jecxz
aas
fld
ror
mov
and
int3
xor
lods
pop
xchg
dec
pushf
mov
pop
ror
adc
fstp
pop
mov
cwde
aam
enter
sub
push
sti
lods
mov
test
mov
pop
dec
sub
dec
jmp
or
mov
call
jmp
in
sbb
adc
arpl
inc
sbb
fucomp
cmp
cwde
imul
test
mov
mov
and
jae
lds
jae
xchg
sbb
fwait
xchg
(bad)
and
shl
data16
mov
(bad)
dec
nop
call
icebp
inc
xlat
adc
push
inc
mov
pop
out
or
call
mov
pop
test
and
sar
leave
hlt
aaa
xchg
sahf
aam
mov
fcmovnb
and
les
mov
or
stos
jo
add
dec
loope
cwde
xor
lahf
sbb
inc
jg
xchg
not
outs
push
xchg
lock
push
repz
cmc
pop
movs
pop
enter
rcl
mov
adc
mov
cmp
js
into
or
imul
inc
repnz
dec
and
add
pushf
add
pop
inc
js
movs
fisttp
mov
dec
inc
cmp
sbb
inc
pop
push
es
daa
arpl
pop
mov
push
bound
mov
push
or
popf
pop
inc
inc
mov
sahf
jns
jno
xchg
in
mov
add
mov
dec
fdiv
mul
sbb
retf
dec
mov
outs
add
mov
rol
movs
lds
jmp
cld
in
add
pop
adc
sub
shr
jmp
(bad)
repz
mov
pop
retf
out
xor
adc
adc
inc
lock
data16
or
xchg
sbb
xchg
cmps
xor
icebp
(bad)
and
pop
ret
out
enter
cwde
jg
repz
out
push
xchg
ins
aaa
jecxz
rcl
or
les
aam
shl
sbb
psllw
movs
test
lahf
pmaxsw
adc
or
xchg
adc
idiv
mov
mov
mov
dec
pop
sahf
cwde
pushaw
adc
sub
retf
fcmovnb
ja
arpl
push
inc
add
test
jmp
push
aad
or
in
rcr
mov
lahf
xchg
jns
push
out
lock
sbb
mov
loop
iret
adc
cwde
in
cdq
addr16
aad
inc
outs
out
pop
fs
mov
jo
test
out
cmc
dec
in
and
add
add
dec
shr
jle
(bad)
and
dec
sub
cld
fcomp
pop
push
imul
aam
lods
dec
dec
mov
xchg
mov
sbb
mov
ss
enter
test
fild
jbe
adc
iret
leave
cmps
(bad)
cld
ds
mov
mov
retf
data16
dec
mov
sbb
pop
outs
ds
jle
push
add
mov
push
test
fsub
pop
ret
mov
push
scas
mov
mov
addr16
mov
pop
and
jbe
push
mov
push
jns
(bad)
stos
mov
cmc
mov
xor
jmp
mov
push
aad
sub
inc
fdiv
jb
stos
out
sti
mov
add
sbb
mov
test
xchg
fs
xor
inc
test
sub
sbb
cmc
sbb
lahf
pavgw
mov
inc
add
shl
push
imul
ret
xor
sti
and
jmp
jns
push
jns
pop
sub
dec
outs
fwait
sbb
xchg
cdq
pop
jp
jmp
mov
pop
movs
fs
push
lds
push
add
cmps
in
fisttp
dec
or
xchg
lods
sub
mov
cli
cmps
dec
(bad)
enter
jne
mov
out
ss
jl
mov
adc
jo
mov
lods
push
ds
pop
test
jne
cwde
leave
sub
call
iret
jge
iret
fdiv
out
ins
les
mov
lods
adc
pop
ret
pop
or
shl
mov
arpl
or
ret
ret
in
(bad)
cmp
sbb
jb
cmp
in
out
fcmovu
ja
cs
jne
pusha
xlat
mov
push
loop
push
mov
in
mov
pop
add
pop
cmc
lea
cmp
xchg
aaa
fdivr
xor
push
iret
mov
test
test
(bad)
cdq
dec
stos
test
cmp
daa
mov
aam
mul
inc
mov
inc
push
adc
or
cmp
inc
std
fldcw
xor
mov
jmp
inc
inc
lahf
and
movs
out
push
ret
fstp
xchg
sbb
mov
jg
inc
out
ja
sbb
mov
and
mov
or
aas
out
mov
loop
dec
xlat
mov
bound
jno
xchg
daa
jg
pop
and
jmp
push
jo
xchg
adc
sbb
pop
sub
test
imul
outs
sub
jl
jle
das
mov
adc
jl
mov
push
(bad)
ss
sar
int3
jo
in
xchg
mov
mov
icebp
jno
gs
mov
in
cwde
inc
mov
push
shr
aaa
inc
fisttp
fadd
lods
jmp
add
fwait
xor
push
movs
mov
mov
clc
mov
adc
gs
out
inc
pop
aaa
enter
(bad)
mov
pop
clc
or
aam
and
clc
jge
cmp
rcl
and
movs
(bad)
not
xchg
test
mov
into
aas
pop
mov
syscall
call
cmps
pop
dec
les
(bad)
out
pushfw
jl
add
imul
mov
cmp
clc
or
cdq
inc
inc
pop
lods
(bad)
cld
add
(bad)
cmp
popa
dec
fs
arpl
bound
mov
xor
push
mov
mov
adc
and
aad
movs
mov
pop
xchg
dec
sub
xchg
fcmovnu
ja
iret
in
int
mov
mov
sub
repz
xor
dec
inc
push
push
sbb
push
data16
mov
inc
clc
(bad)
stc
push
fdivr
das
jmp
dec
adc
xchg
cmps
loopne
dec
in
into
stos
data16
adc
bound
and
sub
jae
fstp
imul
cmp
push
add
inc
arpl
or
enter
sbb
xchg
jbe
ins
and
in
gs
popa
loope
adc
leave
lods
je
add
jnp
(bad)
adc
inc
ror
cmp
mov
inc
loopne
call
cmp
stc
fwait
jne
stc
fadd
fild
stos
movs
aad
retf
jge
cld
test
add
fbstp
(bad)
add
push
xor
ftst
and
mov
jbe
dec
icebp
gs
fild
jge
sub
cdq
popa
dec
push
out
pop
gs
(bad)
in
or
pop
or
pop
add
js
inc
sbb
inc
fimul
pusha
mov
(bad)
stos
in
jo
pop
movs
dec
pop
clc
inc
cmp
dec
mov
jo
bound
inc
fcomp
mov
mov
xchg
bound
mov
adc
jecxz
addr16
shr
loop
cld
imul
sub
and
xchg
rep
fdivr
cmps
xchg
aas
push
mov
das
add
test
sbb
sub
test
loope
jno
jmp
dec
retf
mov
out
inc
jns
push
cmp
jle
iret
jae
push
div
sbb
mov
xchg
pop
pop
inc
mov
hlt
push
bound
stc
div
sbb
sbb
xchg
(bad)
or
pusha
dec
cld
mov
fsubr
call
push
jb
rol
movs
xlat
xor
sbb
ja
iret
js
int3
test
test
cmp
ins
add
cs
mov
aam
xor
mov
sbb
repnz
adc
lahf
nop
stos
add
pop
int3
lock
loopne
cmp
dec
jns
outs
rcr
inc
add
lds
rcr
and
icebp
dec
fsqrt
gs
sti
pop
pop
mov
(bad)
push
inc
stos
pop
cmp
lods
clc
lds
mov
ja
or
mov
xor
mul
mov
ficom
mov
xchg
enter
push
fadd
div
xchg
pop
stc
ds
movs
cmps
retf
lds
fist
pop
mov
pushf
arpl
(bad)
adc
das
clc
or
in
sub
pop
jge
dec
xchg
mov
push
repnz
cmps
xor
sub
pop
adc
test
sub
jle
dec
sub
rol
retf
xchg
mov
add
cmp
inc
mov
ins
fbld
sbb
cmp
jae
push
(bad)
jne
mov
dec
pop
in
movs
adc
xor
add
xchg
(bad)
push
mov
add
or
mov
test
ret
mov
scas
inc
pop
ror
adc
inc
mov
hlt
push
cli
aam
lock
data16
sbb
cwde
aad
xchg
fs
std
mov
jle
xchg
inc
add
xor
arpl
ins
scas
cdq
pop
ss
cmp
popa
outs
sub
mov
call
(bad)
repnz
lahf
and
icebp
movs
ja
and
sub
loop
mov
neg
xor
xchg
popa
xchg
xor
pop
shl
and
jecxz
fs
call
jmp
scas
adc
mov
jmp
cmp
adc
test
call
jge
cmp
xor
ins
loope
popf
rcr
test
repnz
mov
or
sti
mov
(bad)
sbb
mov
xor
test
xlat
aaa
pop
cmps
mov
je
cmp
adc
sbb
stos
aas
add
lods
mov
jecxz
(bad)
clc
mov
mov
adc
dec
enter
adc
repz
jbe
aaa
xchg
mov
sar
or
mov
pop
scas
mov
scas
cmp
push
cld
fwait
xchg
mov
fidivr
es
push
push
fwait
mov
dec
mov
mov
jmp
push
pop
popf
out
(bad)
in
add
jmp
dec
mov
movs
fdivr
outs
in
test
xchg
mov
xchg
xchg
cmp
and
dec
(bad)
arpl
pop
call
sbb
fptan
and
sbb
dec
clc
inc
test
mov
inc
sar
mov
ja
inc
add
es
jo
inc
dec
adc
dec
leave
dec
(bad)
(bad)
cmp
dec
dec
(bad)
enter
mov
mov
mov
mov
push
dec
cmp
pop
adc
and
test
mov
jmp
xchg
das
ins
dec
jmp
mov
sti
scas
fst
in
ror
dec
in
xchg
loop
(bad)
sbb
push
xor
ret
outs
or
cmp
or
pop
xor
and
adc
test
mov
sbb
(bad)
test
je
dec
iret
mov
fwait
push
jmp
idiv
inc
call
vpmullw
cdq
mul
into
mov
dec
push
js
ret
xor
xchg
mov
ins
jne
fiadd
jmp
add
xlat
mov
retf
mov
pop
test
or
aas
stos
daa
adc
(bad)
jmp
jb
and
mov
xor
aad
fucomp
mov
add
loop
or
dec
nop
mov
stc
add
pop
pop
jl
leave
mov
sub
push
jmp
das
sbb
in
rcl
cwde
aad
xchg
and
test
movs
jbe
cwde
xchg
rcr
jnp
or
mov
fst
xor
push
sub
jae
mov
in
xchg
xchg
add
inc
scas
mov
repz
aam
lea
iret
gs
pop
je
jge
jp
add
ror
(bad)
idiv
cs
inc
pop
shr
cld
jmp
(bad)
pusha
movaps
in
out
push
and
ret
and
test
or
mov
dec
bound
jae
push
xchg
jge
enter
repz
rol
sub
adc
mov
xchg
xchg
push
cmc
cdq
sbb
lods
jp
xchg
mov
push
loope
sbb
jne
xchg
std
movs
ins
out
jmp
xor
adc
and
cli
push
mov
jge
xchg
dec
pusha
repz
jnp
div
neg
and
jae
mov
pop
sahf
les
pop
push
in
jns
ins
adc
cmps
ins
xchg
sub
adc
pop
mov
ficomp
pop
fisttp
dec
div
and
mov
sbb
mov
jne
pop
push
fiadd
xchg
mov
or
popf
out
jmp
dec
(bad)
imul
push
pop
jo
xor
mov
cs
dec
xchg
imul
and
ins
mov
pop
pop
sub
mov
int
mov
jne
xchg
aad
in
fwait
enter
daa
imul
pop
sub
ins
or
fnstsw
(bad)
bound
dec
sbb
stos
xor
or
or
sub
fs
push
jns
pop
inc
jl
pusha
fwait
outs
dec
mov
pop
or
pop
cmp
push
xchg
push
push
or
mov
inc
dec
ins
mov
icebp
sub
nop
fbld
fcomp
fidiv
pusha
les
popf
jne
inc
jo
xchg
push
fsubp
out
cmp
out
add
cmp
dec
inc
addr16
and
ror
outs
pop
fistp
(bad)
push
inc
push
push
xchg
mov
cwde
in
inc
(bad)
lods
push
in
push
and
movs
or
ja
inc
mov
loope
push
xor
out
lahf
cmp
pop
and
inc
fist
popa
pop
xchg
mov
std
adc
fs
push
paddsb
fist
scas
dec
daa
out
outs
rcl
retf
xchg
mov
lea
dec
mov
nop
mov
arpl
test
addr16
test
out
aam
dec
xor
es
das
mov
sbb
adc
xor
mov
sub
es
leave
mov
push
(bad)
in
mov
cmp
fsub
and
xchg
repz
(bad)
push
in
cwde
ins
adc
fdivr
dec
movs
pop
or
outs
les
jnp
ret
xor
imul
(bad)
push
lods
sbb
fucomi
jecxz
xor
push
ficom
dec
push
jg
sbb
cdq
and
mov
pop
xchg
or
in
pop
mov
mov
ins
into
repz
push
sar
mov
xchg
inc
fcomp
xchg
dec
ss
and
movs
add
out
aas
popf
or
cwde
push
in
(bad)
(bad)
ja
repnz
mov
jb
adc
jp
jne
cmp
leave
inc
dec
sbb
(bad)
push
sub
imul
add
add
xor
arpl
push
mov
int
adc
sbb
inc
mov
in
rol
mov
fs
inc
jnp
inc
fisubr
outs
movs
dec
push
lods
outs
push
repnz
ss
or
pop
xchg
mov
push
sti
jg
pop
int
or
pop
pop
ja
pop
sar
adc
adc
or
add
bound
cmp
mov
cmp
pushf
sahf
adc
inc
xlat
jmp
cmp
xchg
push
push
repnz
and
mov
dec
dec
aas
popf
jb
push
pop
cmc
inc
in
repnz
mov
out
enter
movs
mov
iret
in
ss
fwait
hlt
jo
xchg
shl
or
ficom
mov
pop
or
(bad)
jmp
fisttp
lods
outs
add
out
mov
movs
imul
fwait
cwde
int
cmps
xlat
sbb
pushf
jnp
dec
dec
mov
mov
or
(bad)
inc
int3
sbb
mov
mov
imul
sbb
add
pusha
into
int
pop
repz
cs
xor
cmps
mov
adc
sub
or
adc
pop
movs
xchg
das
mov
(bad)
int3
out
fs
lds
(bad)
out
enter
inc
push
loopne
xchg
add
inc
(bad)
mov
mov
in
inc
in
out
mov
aas
int3
dec
pop
xchg
jecxz
mov
push
nop
pusha
daa
ret
cmc
sbb
movs
in
mov
push
xchg
push
adc
mov
cmps
mov
in
mov
jge
mov
mov
push
ficomp
or
(bad)
ja
stos
or
add
call
gs
les
pop
jg
ffree
xor
in
sub
cmp
cld
xchg
jg
movs
inc
or
fcomp
fdiv
(bad)
mov
jb
rol
(bad)
loop
call
xchg
push
inc
popf
adc
mov
mov
and
dec
or
rcr
ja
push
xchg
sahf
mov
dec
sbb
and
xchg
push
push
mov
sbb
shl
push
add
ss
imul
cwde
retf
sbb
or
mov
add
sbb
icebp
xor
xor
ret
inc
add
cmps
fild
idiv
pushf
jns
cmc
out
in
cmp
mov
(bad)
xor
(bad)
xor
inc
pop
test
adc
dec
pop
test
imul
int
inc
aam
cmp
inc
cli
dec
cs
push
sar
ds
xor
mov
ficom
jo
test
fcomi
add
and
or
lock
(bad)
imul
sbb
loop
or
loopne
xchg
psubb
jmp
fdiv
fcom
lods
xchg
sbb
mov
stos
cli
mov
(bad)
int3
cli
out
mov
or
pop
cmps
mov
mov
push
test
xor
neg
cmc
dec
xor
dec
xchg
xlat
inc
xchg
jnp
sbb
cmp
jnp
or
inc
repz
sbb
add
xor
ds
inc
aad
hlt
sbb
adc
add
or
cmp
inc
dec
pop
out
mov
jmp
shl
jg
test
clc
adc
inc
lods
cmps
ja
or
dec
sbb
or
popw
mov
mov
or
imul
outs
and
mov
push
aad
fcmovu
loope
aam
imul
lods
dec
scas
xchg
jno
pop
pop
cli
push
inc
push
lock
fsub
retf
cmp
ret
mov
mov
movs
cmp
outs
adc
jmp
sub
adc
xchg
imul
inc
sub
mov
xchg
pushf
inc
clc
pop
inc
xor
push
icebp
fiadd
cmp
or
cmps
push
stos
ins
fdiv
xor
cmps
rol
out
loope
dec
xchg
fs
out
dec
nop
xor
into
inc
sahf
adc
cwde
mov
mov
cmps
xor
adc
in
adc
scas
inc
xchg
fchs
bound
mov
lods
pop
lahf
jge
dec
push
xchg
rol
xor
jae
push
mov
aam
(bad)
push
hlt
push
mov
pop
push
pop
push
dec
sub
imul
repnz
or
push
das
(bad)
hlt
dec
cmps
repnz
loope
adc
jno
cmp
or
shl
ss
add
sub
into
cmp
test
sar
mov
pushf
push
test
mov
pop
mov
cmp
shl
shl
push
daa
enter
pop
rcr
sbb
xchg
cmp
xchg
jg
jmp
inc
mov
adc
stos
pop
adc
jns
ins
dec
fstp
jp
shl
cs
mov
repz
scas
jge
mov
add
xchg
push
jmp
aad
adc
fsub
or
sbb
mov
mov
ins
stc
das
mov
mov
xor
das
mov
xchg
rcr
sbb
cmp
js
into
sbb
lock
push
leave
and
div
adc
mov
data16
adc
sub
pop
ins
dec
fdivr
mov
add
mov
repnz
and
add
jbe
imul
mov
push
(bad)
test
daa
(bad)
add
pop
in
stc
xor
lahf
xor
mov
mov
and
jae
mov
ins
mov
enter
mov
rol
push
push
mov
and
push
inc
test
dec
cmp
int3
sar
sub
sar
fs
aaa
gs
xchg
or
lock
push
mov
and
push
jns
int
lahf
cld
pop
xchg
leave
xor
sahf
pushf
mov
outs
ja
adc
jne
mov
stos
cmp
mov
cli
pop
fstp
idiv
stos
mov
sub
cmps
xchg
or
jns
mov
ds
dec
test
dec
mov
sbb
mov
aaa
dec
adc
xchg
ds
xchg
fwait
leave
add
loopne
imul
or
xor
loope
inc
hlt
cmps
add
loope
jno
int
mov
mov
xchg
inc
mov
outs
mov
sub
enter
cmp
mov
clc
shl
in
mov
data16
xor
out
es
cmp
lahf
ret
ss
add
into
nop
adc
add
ficomp
pop
jno
test
ins
mov
jno
scas
pop
push
xor
enter
push
cmp
or
aam
int3
out
push
sub
ds
dec
ror
dec
repnz
xchg
cmps
sub
loop
inc
cmp
aam
push
in
pop
push
test
push
add
and
stc
cmp
dec
(bad)
cwde
hlt
in
inc
dec
sbb
test
and
loop
jp
out
pop
jmp
hlt
mov
adc
pop
fnstenv
inc
mov
fcomp
pop
popa
add
fdivr
stos
loope
fmul
outs
push
mov
ret
pop
cli
fisubr
retf
pop
or
pop
or
xchg
cwde
rcl
std
mov
ror
cs
jmp
ins
fldenv
rcr
dec
test
ins
sbb
pop
add
pop
mov
pop
fst
pop
call
aaa
lock
sbb
xchg
pop
inc
ins
mov
mov
mov
js
daa
iret
mov
cmp
and
(bad)
xchg
adc
cmp
int
jl
ins
fild
fstp
das
jmp
shr
and
push
test
xor
cdq
stc
ss
pop
mov
punpckhbw
std
mov
cmp
mov
int3
cs
shl
fisttp
in
push
sub
jae
(bad)
cmps
push
mov
hlt
xchg
or
ror
add
mov
mov
mov
xchg
sti
arpl
ror
sbb
in
cdq
sub
test
dec
scas
push
aas
sbb
pop
add
pushf
pop
(bad)
test
jmp
jae
retf
xchg
test
(bad)
ror
mov
ins
les
sub
mov
lahf
aad
cmp
leave
adc
mov
outs
test
cmp
jecxz
pop
ins
xor
in
inc
loopne
setnp
push
mov
pop
lahf
arpl
aam
mov
jmp
sti
leave
test
sbb
pushf
add
(bad)
icebp
xchg
outs
es
std
gs
js
sbb
jo
jnp
and
outs
add
pop
js
adc
push
xchg
or
(bad)
mov
add
jae
mov
gs
mov
pop
xchg
inc
gs
add
pop
push
xchg
and
add
jmp
sub
cmp
pusha
pop
inc
push
or
aas
sbb
int
xchg
mov
cdq
cli
jmp
xor
loop
sbb
jp
pushf
sub
jmp
mov
loop
iret
sub
aas
(bad)
dec
aas
test
or
test
movs
push
ret
jne
pop
sahf
sbb
cmp
push
xchg
sub
in
push
mov
add
jns
fsubr
xor
pusha
adc
push
mov
and
inc
jle
jl
mov
xchg
or
imul
push
mov
or
loopne
add
mov
(bad)
sti
push
and
or
adc
sub
mov
into
rol
jo
mov
loop
mov
mov
push
and
adc
push
xor
int
jmp
and
mov
mov
sub
jns
push
fnstcw
repz
enter
outs
out
int3
loopne
ficomp
add
fisub
adc
mov
in
mov
fnsave
loop
or
aam
int3
dec
sti
sub
rcr
sbb
sbb
mov
adc
lods
cmc
jae
jle
mov
shr
repz
pusha
mov
out
inc
in
or
sti
sub
inc
out
push
imul
sbb
lods
inc
pop
sub
inc
lahf
cmp
call
stos
icebp
adc
mov
xchg
push
mov
push
inc
repz
test
cmc
ss
aas
imul
mov
inc
mov
fld
scas
push
xchg
lahf
and
push
in
jb
push
test
pop
mov
(bad)
mov
pop
fdivr
pop
test
cmp
or
cmp
push
nop
mul
in
enter
mov
mov
and
pop
dec
(bad)
lods
cdq
or
cmps
mov
cmps
mov
mov
lods
push
or
sahf
jne
(bad)
cmps
jb
add
or
test
mov
cmps
cmp
das
xor
ins
sti
mov
fisub
jge
pop
out
sub
rcl
cwde
sub
adc
mov
cli
adc
call
popf
add
mov
xor
mov
imul
sbb
daa
(bad)
ds
adc
mov
push
sub
lods
dec
mov
adc
xor
into
push
gs
dec
rcr
adc
js
pop
sbb
test
stos
mov
bound
(bad)
pusha
adc
xor
mov
loope
les
mov
icebp
jmp
cmp
daa
loopne
rcl
fnstenv
div
jnp
pop
loop
dec
push
mov
pop
clc
cmp
cld
dec
fdiv
dec
imul
xchg
sbb
add
jmp
inc
xlat
jb
es
loope
adc
mov
in
outs
jns
add
pop
int3
push
pushf
bound
mov
sub
mov
data16
pop
int
xchg
test
imul
xchg
add
xlat
mov
push
xchg
or
(bad)
jmp
pop
inc
and
aas
outs
outs
ror
outs
jns
jp
adc
pop
std
sbb
push
add
add
shl
in
pop
pop
test
or
out
das
outs
loop
addr16
pushf
mov
xor
into
dec
or
sbb
outs
xchg
sub
sbb
imul
jmp
xor
stos
inc
inc
mov
inc
call
nop
les
jmp
xchg
jg
pop
lds
int
jo
xor
das
cmp
pop
dec
and
out
rol
ret
in
loop
out
out
repnz
mov
jl
ror
fmul
push
loop
in
leave
sahf
std
rep
into
or
xlat
xchg
cmp
xor
jmp
pop
mov
push
mov
mov
cmc
mov
cmps
mov
lods
sub
outs
sub
pop
xor
xor
retf
mov
push
imul
add
push
push
or
fcomp
pop
xchg
xchg
add
mov
cmc
mov
mov
push
mov
dec
cmc
sub
fcmovbe
dec
outs
cmp
cmp
add
inc
jp
mov
iret
mov
jmp
sti
dec
adc
retf
adc
inc
les
sub
aas
xor
ds
xchg
adc
nop
(bad)
push
and
lea
iret
add
pop
(bad)
dec
outs
push
or
aam
jae
ror
dec
retf
movs
mov
dec
sti
jecxz
mov
sbb
jle
and
cmp
and
fcomp
ret
jecxz
jmp
or
(bad)
int
xchg
push
sbb
push
fs
popa
sub
jg
add
sbb
xchg
(bad)
cmp
loope
shl
push
pop
aam
outs
push
loopne
cld
push
aas
inc
aas
fs
mov
leave
int
jo
call
mov
mov
push
(bad)
push
aad
jnp
das
lods
pop
adc
(bad)
xor
pop
adc
sub
mov
sub
mov
inc
jns
or
jmp
mov
shr
retf
ret
fs
and
ins
and
inc
dec
dec
lahf
xchg
jo
push
inc
add
ds
cmp
xchg
xlat
loop
or
inc
pusha
push
jmp
inc
stc
add
jmp
rcl
rcr
dec
repnz
pop
xchg
mov
cmp
aam
stos
push
into
mov
cwde
and
pop
jbe
xchg
test
icebp
and
sti
sar
dec
or
cmp
jne
mov
stos
(bad)
out
fist
mov
push
xlat
push
inc
(bad)
enter
add
shl
aas
out
cld
fld
pop
pop
jmp
nop
loop
push
adc
add
or
and
call
test
sub
sbb
out
add
iret
dec
mov
and
dec
sbb
xchg
xor
pop
cmp
inc
fiadd
push
sti
sub
pop
rol
ins
pop
outs
call
div
mov
and
ret
hlt
jl
jmp
xor
(bad)
push
out
jae
lock
push
cld
sbb
imul
adc
or
fadd
jno
ficom
push
fdiv
ldmxcsr
pop
or
(bad)
je
cmps
aaa
add
jge
loopne
sbb
xchg
add
cli
movs
idiv
push
cmc
rol
cld
ficom
rcl
mov
ret
push
psrlw
sub
pop
sbb
push
cmp
cmp
mov
push
(bad)
pushf
call
sub
add
and
int
xchg
arpl
adc
mov
cmc
cmp
sbb
mov
into
das
stos
xor
or
fs
cld
std
popa
aad
add
inc
std
dec
mov
sbb
shl
sti
or
in
jg
rcr
cmp
ret
jp
sahf
inc
or
jmp
pushf
popf
xchg
mov
std
push
cmps
and
mov
add
push
cmp
add
sub
popa
cli
xor
add
aad
mov
(bad)
lahf
cmp
test
cmp
pop
xor
xor
(bad)
push
in
sti
mov
fwait
jno
jb
in
jg
pop
cmp
ins
jo
pop
out
fnstcw
fbstp
inc
repnz
leave
int
jo
lock
js
test
ja
inc
xor
cmps
xor
ror
dec
cmp
sbb
mov
(bad)
cli
sbb
mov
cmc
mov
sub
jae
stos
hlt
fisttp
jb
js
aas
sbb
mov
adc
sub
sti
cmp
or
lahf
test
jb
retf
jnp
push
call
ret
or
xor
jmp
or
mov
pop
pop
sbb
fsub
jmp
cmps
mov
shl
xchg
pushf
inc
repnz
test
xchg
call
inc
pop
sub
sbb
enter
dec
and
xor
xor
xchg
xchg
scas
push
loop
fist
xchg
(bad)
sbb
scas
add
ss
fwait
push
das
call
jl
std
cmp
and
pop
enter
gs
jmp
cdq
inc
hlt
mov
icebp
retf
les
mov
push
loope
div
xchg
loop
imul
push
dec
pop
push
stos
push
push
iret
mov
outs
js
jge
test
test
fild
cmp
call
jge
pop
sub
push
mov
sbb
(bad)
add
imul
fadd
dec
inc
push
fisttp
push
mov
pop
out
lods
mov
and
pop
sub
repnz
pop
xchg
xor
xchg
fild
iret
pop
mov
sar
adc
cmps
ds
ins
mov
sub
je
push
int
dec
ftst
cld
push
push
or
sub
outs
push
adc
dec
jb
clc
mov
inc
mov
fwait
jmp
outs
xchg
not
retf
lock
pop
xlat
cdq
inc
(bad)
adc
dec
push
push
mul
fdiv
adc
(bad)
sti
sti
sar
cwde
cmp
pop
push
mov
shr
inc
outs
push
mov
pop
pop
cmc
add
loopne
arpl
xchg
mov
shl
loopne
jbe
movs
add
(bad)
mov
sbb
push
aas
fimul
cli
mov
pop
or
add
jno
fs
mul
(bad)
pop
scas
jno
push
or
sbb
sbb
pop
or
stos
jle
inc
xor
jbe
push
pusha
pop
jo
push
cld
and
push
jae
pop
mov
mov
push
mov
or
xchg
push
aam
jl
and
pop
mov
mov
xlat
jmp
pop
(bad)
mov
aam
dec
(bad)
ins
dec
or
lds
and
inc
aas
fld
push
xchg
xor
nop
xor
(bad)
or
(bad)
leave
arpl
ss
sbb
or
dec
mov
xor
js
push
pop
cdq
sub
inc
iret
mov
(bad)
push
adc
jmp
push
addr16
dec
scas
clc
iret
and
pop
lods
jecxz
cmp
push
or
mov
js
cmc
ret
xchg
mov
and
and
add
mov
sub
daa
mov
fstp
push
fadd
retf
fwait
jns
mov
test
shl
aas
data16
sbb
and
icebp
cli
ror
loope
jl
mov
ss
and
test
je
push
je
jns
cwde
mov
xchg
lahf
ins
in
pop
push
push
or
mov
popa
push
pop
out
frstor
sub
mov
movs
imul
dec
adc
fsubr
cmc
jae
ins
not
pop
xchg
dec
lahf
stc
xchg
xor
fmulp
fistp
push
repnz
adc
sti
jae
mov
add
fsubrp
jae
push
rol
(bad)
clc
cmps
inc
shr
mov
jno
outs
pop
adc
jg
loopne
lods
cmp
inc
pop
in
xchg
bound
stos
dec
jecxz
les
retf
push
aam
push
repnz
jae
xchg
aad
jnp
sub
frstor
test
stos
test
pop
xchg
mov
gs
loopne
jecxz
pop
push
cmp
aas
shl
mov
xchg
jb
(bad)
ins
mov
xor
mov
mov
fs
mov
xor
mov
mov
into
rcl
mov
(bad)
arpl
sbb
aas
or
lock
xlat
das
adc
outs
or
inc
shr
jg
sbb
cmc
mov
pop
xlat
adc
jg
mov
and
shl
outs
push
push
dec
movs
pop
cmp
push
aam
fucomp
aam
adc
mov
gs
xlat
add
pop
mov
fmul
js
retf
add
adc
add
pusha
jb
ret
cmp
pop
lods
(bad)
out
aaa
(bad)
ins
cmp
ds
imul
aad
aam
mov
pop
imul
(bad)
gs
out
cwde
out
std
adc
(bad)
fcomp
adc
sbb
sbb
fucomi
jo
or
mov
in
mov
ss
scas
icebp
sbb
lods
cmp
xor
lds
xor
pop
arpl
(bad)
jmp
sbb
int
mov
mov
test
imul
(bad)
adc
outs
mov
leave
inc
pop
xor
add
lods
std
inc
loop
in
sbb
dec
sar
and
loope
setbe
inc
shl
loop
push
lahf
in
scas
adc
ins
test
call
popa
nop
leave
fst
popa
or
mov
adc
cwde
popa
xor
clc
sub
mov
and
or
add
std
cmps
aam
jne
adc
or
inc
mov
in
fcmove
lock
outs
(bad)
sti
push
pop
addps
pop
lods
adc
xchg
dec
sub
popa
movs
push
pop
outs
jns
pusha
add
cdq
pop
cmp
bound
jecxz
dec
out
retf
out
xchg
jp
sar
dec
popf
adc
retf
fdivr
adc
cmps
jno
inc
gs
pop
jns
ret
fistp
in
loopne
or
rdtsc
mov
or
xchg
in
in
movs
mov
mov
out
pop
in
cli
mov
pop
es
mov
add
dec
pop
iret
js
stc
adc
enter
ins
pop
aam
push
stos
daa
push
arpl
gs
xor
lock
ror
and
arpl
mov
jae
ret
pop
das
test
std
inc
or
pop
fnstcw
aad
inc
fcomp
lea
sub
repz
ds
cmp
pop
xadd
inc
mov
sub
repz
ss
mov
les
mov
loope
or
aad
jo
sbb
fidiv
fwait
push
push
jge
add
sbb
nop
push
mov
pop
mov
mov
xor
cmps
test
cmp
popf
loopne
ror
loop
or
sub
xor
stos
or
mov
jp
(bad)
retf
ret
mov
adc
pop
lock
lds
mov
mov
addr16
pop
sub
inc
push
in
test
sbb
push
sahf
jl
repz
int3
mov
arpl
dec
scas
jmp
add
das
push
jne
pop
cvtpi2ps
adc
rcl
dec
nop
pop
jecxz
mov
jecxz
mov
ret
hlt
mov
inc
pushf
lahf
dec
mov
pusha
add
mov
push
dec
(bad)
ds
push
(bad)
(bad)
pop
getsec
jg
jo
xchg
xchg
push
mov
and
xlat
cmp
dec
mov
adc
mov
out
dec
ins
xor
xchg
cmp
sbb
pop
jmp
(bad)
push
mov
mov
sbb
ja
outs
std
lods
lahf
cmp
clc
(bad)
cmp
pop
cmc
inc
mov
jne
inc
retf
cmp
aaa
lea
adc
out
aam
mov
cmps
cmp
jnp
inc
out
mov
aad
cmp
cs
out
(bad)
jns
and
pop
lods
lahf
inc
or
in
scas
pop
into
das
shl
call
jg
loopne
jmp
call
mov
or
jns
retf
or
pop
popa
or
add
aad
jns
fisub
fdiv
pop
mov
push
shl
xchg
inc
aaa
into
enter
in
call
ret
and
pop
out
fisub
push
sub
jecxz
mov
sti
xor
jns
mov
nop
dec
test
cmps
retf
xor
mov
xor
pop
xchg
(bad)
int
sbb
fisub
(bad)
push
mov
mov
push
pop
retf
shr
jle
(bad)
mov
(bad)
and
cmp
in
push
cmp
cmp
cmp
jmp
and
push
add
inc
inc
fsubr
adc
sub
mov
fcmovne
jmp
jmp
(bad)
adc
mov
cmp
fidiv
pop
sub
xlat
xor
mov
loopne
dec
enter
inc
dec
ins
pop
rol
fsub
shl
push
rep
jb
mov
pop
push
repz
outs
pop
popa
repnz
push
dec
sbb
sbb
es
mov
cdq
imul
jle
aam
inc
icebp
(bad)
out
enter
inc
ja
or
or
push
or
imul
dec
adc
add
gs
adc
and
inc
outs
sti
or
test
ss
fdivr
shr
sbb
adc
xor
or
aaa
scas
pop
jb
ds
cs
inc
mov
fcomi
adc
not
cmp
out
das
in
xor
mov
cmps
adc
inc
clc
cmps
mov
in
dec
dec
enter
retf
jo
add
ja
icebp
into
scas
jae
stos
jecxz
cld
lods
xchg
xchg
dec
push
dec
jns
std
sahf
jecxz
mov
sbb
lahf
adc
pop
rcl
pop
(bad)
out
dec
addr16
cmp
sbb
adc
fst
push
psrad
push
sub
test
mov
sub
jmp
jl
test
inc
or
sbb
mov
loopne
cmp
idiv
mov
push
pop
ss
push
sbb
fsub
mov
dec
enter
sbb
(bad)
repnz
mov
test
mov
push
out
aas
inc
push
inc
rol
ins
pusha
xchg
jb
fist
mov
jns
jns
aam
pop
test
inc
cdq
fcom
fsubr
add
call
pop
lahf
ret
mov
fwait
pop
inc
sub
sbb
xchg
sbb
pop
xor
mov
mov
push
lds
mul
daa
stos
ins
pop
out
in
pushf
adc
xor
dec
popf
fwait
inc
add
call
ja
mov
enter
or
adc
mov
dec
xchg
imul
push
sub
inc
call
test
dec
cmp
add
pop
mov
lahf
neg
div
stos
(bad)
popa
mov
(bad)
cmp
test
rcl
ror
jmp
mov
mov
adc
inc
ja
cmp
cli
xchg
jae
test
adc
movs
cmp
dec
add
sbb
clc
clc
call
test
mov
data16
addr16
iret
xor
cld
js
clc
push
std
xor
dec
xchg
dec
mov
mov
push
neg
jo
push
mov
dec
js
(bad)
fsub
(bad)
into
pop
pop
outs
add
icebp
sbb
cmp
outs
inc
and
bound
cmp
fdivr
and
nop
test
xchg
into
jge
ret
addr16
mov
pop
leave
push
movs
jae
ins
sub
scas
xor
or
mul
popa
test
imul
adc
jae
or
jle
(bad)
xchg
xchg
mov
outs
add
pop
int3
pop
mov
in
cmc
cli
pop
ss
mul
shr
das
out
inc
mov
ins
(bad)
out
scas
add
jecxz
movs
stos
adc
mov
movs
and
add
dec
fcmovbe
addr16
retf
cmps
(bad)
xchg
mov
mov
jge
mov
mov
push
enter
xor
push
dec
sub
ficomp
sbb
cmp
mov
jnp
shl
and
jb
loope
sub
or
dec
nop
add
add
outs
imul
test
fidiv
rcr
or
fidiv
or
stc
iret
stos
lahf
inc
push
lods
(bad)
lods
lods
pop
ret
and
in
push
fisubr
out
cmp
or
rcr
int3
mov
aad
jnp
scas
adc
icebp
mov
mov
mov
xor
dec
ins
inc
mov
repnz
pop
std
lea
mov
mov
lods
mov
mov
js
jmp
call
adc
cld
lods
(bad)
add
sbb
push
cmc
fcom
push
pop
jb
inc
mov
enter
movs
inc
fwait
mov
adc
(bad)
mov
cwde
mov
scas
cmps
mov
pop
lea
fisubr
push
push
push
jp
dec
or
fisubr
outs
addr16
js
add
mov
mov
popa
out
leave
sub
pop
jl
jne
jno
(bad)
fcomp
(bad)
imul
xchg
sbb
push
fst
xchg
test
fsubp
scas
pushf
adc
sub
loop
sub
addr16
pop
ss
test
movs
xor
rcl
outs
adc
repz
sbb
movs
iret
imul
lock
fild
std
mov
sub
jmp
jbe
test
cld
or
cmp
and
hlt
jg
dec
inc
fmul
gs
cmp
xor
pop
dec
les
dec
retf
xchg
add
push
bound
pop
dec
leave
cdq
enter
jg
pop
mov
push
repz
lahf
icebp
or
or
repz
jle
mov
push
fiadd
mov
dec
xor
(bad)
stc
cdq
xchg
adc
mov
mov
mov
push
or
adc
push
mov
inc
mov
nop
inc
hlt
test
outs
and
pop
test
(bad)
fsubr
movs
sbb
pop
clc
mov
cwde
outs
push
mov
adc
cmp
cmp
and
enter
jae
ficom
iret
out
fstp
fsubr
push
call
add
stos
adc
aad
jmp
and
mov
cmp
fld
and
mov
jb
pop
stos
pusha
sub
clc
popf
in
pop
cmps
test
sbb
in
test
movs
out
test
das
adc
jns
cmps
adc
js
out
push
xlat
or
fisub
cld
cmps
dec
jl
inc
iret
pop
mov
hlt
mov
mov
add
hlt
jp
ret
mov
sbb
retf
loopne
les
in
mov
sub
pop
and
sbb
xchg
int
push
jg
jl
xchg
push
cwde
(bad)
jecxz
dec
jle
mov
sbb
jmp
fiadd
jecxz
pop
jmp
dec
push
sbb
loopne
lea
push
mov
movs
fdiv
mov
sub
xlat
or
rcr
jl
or
jbe
and
push
push
in
clc
and
push
xchg
ja
cmps
xchg
pop
outs
mov
dec
mov
xchg
sar
pop
dec
xchg
add
(bad)
imul
div
sub
fsubr
jno
test
mov
aad
inc
stos
jge
pusha
or
or
or
aam
add
inc
inc
outs
pusha
mov
mov
push
fldlg2
mov
int
imul
in
adc
ret
sub
pusha
push
test
jne
icebp
shl
fadd
jnp
stos
cld
jmp
js
movs
jbe
or
mov
mov
movs
pop
mov
cmp
add
inc
adc
js
sbb
daa
popa
data16
hlt
and
gs
in
mov
add
jo
mov
call
mov
hlt
jg
mov
jbe
pop
cmp
xor
in
cmp
retf
mov
adc
in
dec
push
xor
shl
and
push
mov
std
push
sub
rol
fmul
pushf
cmc
icebp
not
sbb
dec
jns
ss
test
jp
add
shl
or
shl
shl
jmp
gs
js
ins
outs
xchg
sub
ret
test
push
mov
dec
or
aad
mov
imul
movs
stos
mov
mov
cmc
pop
fistp
mov
xor
inc
retf
nop
push
out
dec
jg
mov
mov
cld
mov
fild
dec
inc
pop
sahf
jns
inc
scas
out
jbe
dec
es
sbb
test
push
mov
std
outs
sbb
ss
movs
mov
dec
movs
nop
cli
pushf
adc
div
gs
retf
add
mov
shl
mov
pop
nop
sbb
push
xchg
clc
xor
or
clc
xchg
mov
lahf
mov
jo
out
dec
not
fs
add
test
(bad)
jns
cli
pop
retf
pop
cmp
movs
jmp
fsubr
sbb
rcl
xchg
in
retf
lods
int
or
push
inc
xchg
pop
sbb
fsub
push
leave
fucomip
or
xchg
xor
mov
ret
add
imul
cmps
inc
cs
xor
and
int3
add
push
cmp
pop
mov
arpl
cmp
mov
fidivr
sbb
mov
int
neg
fdivp
cmps
ds
xchg
adc
jge
out
leave
(bad)
lock
lahf
scas
xchg
rcr
jge
xchg
dec
mov
pop
pop
ret
hlt
xchg
jl
and
pop
js
and
jmp
adc
adc
pop
xchg
mov
or
jb
icebp
mov
div
xor
arpl
aaa
ja
jl
jnp
mov
xchg
movs
xor
adc
pop
and
adc
fwait
ja
sbb
shl
push
cmp
sub
ror
es
repz
mov
movs
rol
jnp
or
sti
add
loop
rol
loop
(bad)
push
imul
or
xchg
cli
dec
jnp
fcom
iret
leave
or
inc
(bad)
mov
repz
fmul
bnd
icebp
arpl
add
cmc
adc
xchg
xor
mov
jp
std
nop
xchg
je
out
jmp
push
ret
cld
stos
mov
sar
cmp
and
cmp
xchg
mov
inc
ret
push
(bad)
xlat
pop
outs
jno
ret
std
sub
fisub
nop
adc
dec
pop
jbe
cmp
or
iret
fiadd
mov
outs
or
adc
addr16
mov
xor
(bad)
or
mov
dec
or
repnz
test
jne
mov
and
mov
pushf
lahf
xor
shr
call
test
movs
call
dec
in
cmp
xchg
stc
leave
push
cs
in
sbb
jg
mov
jl
out
dec
adc
out
ins
cmp
jle
js
push
pop
bound
aad
ror
xor
mov
adc
aad
and
cmps
and
in
inc
push
mov
ror
(bad)
push
jmp
add
push
test
mov
shr
push
jp
pop
mov
retf
xlat
sbb
jecxz
repnz
add
dec
loop
adc
xchg
jle
in
xchg
fld
cmp
into
adc
mov
push
xchg
cdq
out
xchg
ins
sub
stc
mov
bound
cmp
push
and
push
icebp
sbb
sbb
dec
out
lods
push
test
lahf
and
add
(bad)
mov
mov
neg
iret
loope
inc
and
cmp
icebp
mov
std
xor
lds
mov
adc
lds
cwde
pop
movs
cmc
xor
shl
test
neg
xchg
add
jmp
je
cmp
test
push
sub
repnz
dec
xchg
in
call
repz
lahf
and
mov
aad
mov
sbb
leave
mov
mul
push
and
xor
test
stc
sub
and
push
pop
add
pop
mov
cmps
lods
push
dec
jmp
inc
jne
(bad)
sbb
les
xchg
pop
shl
pop
ins
outs
pop
out
jle
pusha
push
(bad)
mov
sub
loope
repnz
push
test
mov
enter
push
xchg
mov
cwde
call
lods
lock
push
adc
test
mov
adc
aad
pop
dec
inc
cmp
push
jo
adc
xchg
inc
jmp
add
jle
ds
push
add
add
push
xchg
push
gs
xor
pop
arpl
cmp
mov
add
(bad)
dec
xor
cli
push
cmp
ja
stos
mov
jmp
pop
loop
rcl
or
mov
ins
shl
shl
xlat
push
inc
inc
jmp
stos
popa
(bad)
jno
nop
rol
(bad)
lods
or
pop
jecxz
and
jae
cmps
sbb
adc
clc
frstor
mov
and
lea
ss
mov
or
daa
mov
sar
dec
movs
xchg
in
mov
pop
xor
sbb
xlat
sti
inc
xor
push
jne
call
and
clc
int3
xchg
loop
pop
cmp
fwait
sub
call
mov
adc
(bad)
imul
pop
mov
dec
pop
dec
jle
fnstenv
fisttp
push
pop
xor
mov
in
movs
jns
(bad)
xchg
sbb
xor
xor
adc
in
std
dec
add
(bad)
in
sub
shl
retf
call
loope
add
inc
pop
ja
pop
icebp
sahf
add
int
push
pop
fdivr
in
sahf
mov
out
pop
pop
pop
mov
jmp
fld
mov
imul
push
int
(bad)
std
sbb
fwait
(bad)
mov
bound
mov
cdq
mov
rcr
xor
push
out
retf
sbb
fisubr
into
pop
fbstp
or
cmp
xor
pusha
cmp
jns
xor
in
or
cmc
adc
jp
jp
call
jge
mov
add
call
rcr
int
out
and
mov
or
sar
addr16
xor
xchg
aam
jnp
jb
pop
sti
(bad)
xchg
push
push
cmp
div
mov
mov
mov
mov
outs
in
push
xor
ins
jae
mov
add
ins
inc
(bad)
fild
sub
push
sbb
mov
fwait
call
sub
push
js
xor
pop
push
mov
jne
jge
out
dec
mov
push
outs
or
sub
dec
bound
mov
jg
push
jnp
pause
mov
and
cmps
mov
mov
je
sahf
aam
xchg
jns
inc
push
sahf
rcr
fadd
push
test
mov
or
pushf
fprem
mov
addr16
movs
sbb
jmp
fimul
sub
or
lea
std
sbb
popf
inc
jb
jecxz
pop
(bad)
popf
iret
adc
pusha
je
sahf
and
inc
(bad)
sub
pop
and
sahf
sub
retf
adc
or
int3
aam
push
adc
shr
pop
sub
icebp
daa
mov
inc
add
mov
jg
fdiv
repnz
mov
retf
sub
push
(bad)
adc
pop
imul
aas
neg
iret
inc
scas
mov
pop
pop
xchg
cmc
mov
js
fst
jnp
dec
mov
pop
arpl
cmp
jb
xchg
xor
jns
dec
mov
sahf
out
push
pop
xor
std
cdq
int3
mov
repnz
jo
in
mov
ret
xor
dec
hlt
inc
fnstcw
sbb
mov
(bad)
jmp
pop
out
push
sub
mov
jge
mov
sbb
test
lds
push
int
pop
int
movs
repnz
push
(bad)
cld
outs
leave
adc
push
pop
outs
inc
es
mov
xor
stos
jne
mov
rcr
clc
mov
cmp
mov
push
retf
jb
xchg
mov
lock
into
sbb
repz
mov
loope
adc
arpl
icebp
fucom
cmp
jne
add
scas
je
(bad)
pop
push
fsubr
xchg
dec
mov
sub
cdq
ror
xchg
and
sub
out
test
ror
mov
mov
mov
into
repz
in
mov
mov
(bad)
rol
cld
cmp
and
push
mov
call
or
enter
(bad)
or
add
repnz
int
sub
mov
mov
iret
mov
mov
push
imul
pop
xor
and
jns
rcl
js
mov
cmp
dec
shl
in
popa
dec
xlat
rol
pop
add
(bad)
adc
popf
mov
sub
in
test
and
outs
dec
imul
add
dec
dec
mov
lea
sbb
mov
ja
int3
cmc
adc
mov
xor
pop
xor
push
mov
rcl
inc
rol
push
ret
or
add
or
jmp
pop
(bad)
jecxz
mov
retf
js
rcl
jecxz
jnp
in
scas
std
xor
sahf
push
repnz
inc
xor
push
dec
mov
mov
int3
stos
xchg
sbb
out
sar
push
outs
repz
loopne
stc
test
loopne
xchg
push
ja
mov
arpl
xchg
sahf
ret
xor
in
adc
cld
ins
jae
pop
fld
imul
aas
(bad)
mov
push
push
lds
std
push
cld
cmp
pop
iret
push
jmp
repz
out
add
xlat
into
mov
dec
ins
xor
es
hlt
xchg
xchg
jp
adc
retf
es
(bad)
in
cmp
jmp
je
inc
jl
int3
aad
and
dec
add
popf
cli
jmp
dec
push
push
jno
mov
bound
mov
test
jg
cmp
mov
cmp
mov
pop
enter
lds
jmp
(bad)
cmp
pop
sub
call
(bad)
and
out
fnstcw
xor
and
or
push
lods
lahf
jge
pop
dec
lods
pop
push
retf
ins
(bad)
aad
cmp
int3
fwait
inc
inc
dec
mov
jmp
cmp
cmovp
add
cs
pop
fnstcw
and
push
mov
jnp
scas
xchg
fcomp
and
jg
cs
es
addr16
push
test
mov
je
test
test
inc
dec
popa
mov
std
rcl
inc
imul
sbb
jmp
add
sbb
cli
mov
add
xor
xchg
dec
push
or
add
xchg
jae
(bad)
dec
push
in
mov
mov
enter
arpl
dec
push
or
adc
add
aad
loop
xor
loop
mov
ss
xor
lock
pop
cld
jae
pop
int
mov
jp
loope
jo
xlat
cwde
push
sub
call
mov
fiadd
mov
(bad)
jge
lods
sbb
mov
mov
retf
sbb
adc
push
loope
pop
and
loop
and
imul
sahf
sar
(bad)
clc
cs
push
in
test
cmp
or
mov
retf
retf
push
push
jne
jp
pop
rcl
and
movs
pushf
and
push
arpl
mov
add
leave
xchg
clc
lea
nop
ret
lock
mov
pop
jg
and
adc
or
cmc
adc
aam
and
and
sbb
les
ret
scas
adc
mul
imul
push
pop
jae
retf
mov
vucomiss
push
popa
jmp
add
test
xor
cwde
adc
les
scas
cwde
mov
cld
outs
and
loop
adc
cmps
dec
ins
into
jns
(bad)
cdq
mov
das
lock
call
cmp
and
ss
mov
enter
jp
(bad)
stos
xor
jecxz
in
jl
repnz
xor
mov
in
fldenv
jp
movs
mov
je
cmp
test
cld
inc
fucomp
adc
mov
mov
or
xchg
push
sbb
stc
(bad)
mov
jp
adc
pop
popf
mov
mov
(bad)
ss
adc
cmp
cwde
int
add
fst
xchg
mov
cld
mov
sub
push
popf
retf
and
sbb
dec
adc
mov
pop
mov
push
rcl
das
cmps
cmp
sub
(bad)
sti
push
jne
xchg
sub
scas
pop
mov
cmps
mov
test
ret
ins
mov
jns
adc
out
mov
test
pop
cmp
sahf
cmp
sub
lods
mov
out
adc
lock
mov
push
xor
rol
out
movs
xchg
jo
pop
test
popf
or
sbb
shl
push
fbstp
leave
loop
dec
call
dec
pop
in
or
or
shl
retf
cmps
fstp
jno
(bad)
jnp
mov
popa
jno
mov
cmp
push
xor
and
pop
rcl
ja
loopne
addr16
lods
adc
fs
outs
mov
push
lahf
mov
pop
cmps
in
repz
(bad)
and
rcl
or
iret
shl
mov
sub
hlt
int3
stos
inc
ds
sbb
push
leave
stos
add
int
and
and
xlat
lock
shl
sahf
sub
imul
jecxz
pop
dec
lods
cli
jmp
out
xchg
push
retf
mov
dec
lahf
jge
test
popf
mul
lahf
das
icebp
pop
pop
add
je
mov
xchg
sub
and
pop
cmp
mov
stos
clc
pop
push
lods
out
sbb
imul
out
in
mov
mov
out
enter
and
cs
idiv
fidiv
(bad)
adc
retf
mov
sbb
repz
jg
nop
add
dec
or
lock
sbb
je
nop
add
mov
xchg
cmps
mov
jg
dec
cld
in
jge
jl
fstp
repz
fndisi(8087
mov
jp
xor
ins
hlt
fiadd
jns
mov
bound
repnz
add
or
inc
sbb
xchg
fisub
repz
and
add
jbe
pop
mov
inc
popf
or
push
sbb
pop
or
xchg
mov
fcmovb
mov
inc
(bad)
push
es
inc
sub
cmp
or
push
dec
pop
int3
xchg
enter
dec
mov
inc
or
add
ret
(bad)
out
sbb
sar
movs
sbb
lods
jne
(bad)
mov
test
int3
pop
loope
xchg
(bad)
lods
inc
mov
mov
imul
test
sbb
or
div
test
mov
std
push
jle
inc
outs
scas
xchg
(bad)
aam
aad
pop
outs
jp
loopne
push
shr
rol
sbb
xchg
mov
jno
push
push
sbb
xchg
add
into
jl
mov
lea
retf
pop
mov
inc
jb
jmp
stos
xlat
wrmsr
cs
mov
rcl
sti
mov
push
jbe
(bad)
jl
or
mov
push
jmp
jmp
pushf
xchg
out
mov
std
popf
jbe
cmp
xchg
mov
sti
mov
dec
xor
jb
(bad)
test
or
push
movs
bswap
sbb
mov
pushf
push
push
push
inc
aas
ja
movs
dec
or
(bad)
rcr
adc
push
xor
xchg
lock
or
cli
dec
es
das
test
cmps
in
add
push
ins
mov
cmps
dec
add
push
leave
jbe
or
push
xor
clc
int
repnz
ds
mov
mov
rol
js
jp
cmp
sbb
retf
xchg
(bad)
fcom
ds
and
adc
mov
das
mov
loope
dec
mov
mov
cmp
mov
mov
fmul
iret
pop
dec
jecxz
mov
sbb
xchg
dec
xor
test
cmp
push
xchg
out
pushf
sahf
pop
jns
jg
xor
xor
repz
push
jecxz
shl
adc
lods
and
cmp
mov
and
dec
or
or
std
clc
mov
cmp
jo
int3
mov
cld
imul
mov
add
scas
or
push
push
sar
cmc
mov
shr
stos
fwait
xlat
or
push
aam
mov
fcomp
mov
shr
xchg
in
pop
xlat
xchg
into
clc
leave
ret
call
(bad)
stos
cmps
dec
rcl
jo
shr
into
jmp
idiv
mov
or
ret
pushf
retf
arpl
(bad)
push
in
shl
jmp
mov
sub
cs
cmp
xchg
js
sbb
cmp
(bad)
sbb
push
mov
stc
sbb
(bad)
out
fsub
xchg
icebp
mov
popa
test
ror
or
pop
xor
and
lock
add
and
xchg
jle
push
add
jmp
ss
fiadd
add
mov
push
jno
jno
push
cmp
pop
xlat
call
pop
sub
mov
fidiv
jns
call
pop
xor
mov
sbb
les
mov
pushf
out
xlat
add
inc
jns
pop
jl
(bad)
fimul
jne
or
lock
in
xor
pushf
jae
dec
mov
inc
loopne
inc
ffreep
inc
sbb
pushf
sub
add
iret
clc
loop
and
jp
call
adc
mov
jecxz
movs
daa
or
fsub
and
jmp
sub
xchg
div
jb
lock
adc
sub
retf
(bad)
lea
cmp
pop
jb
dec
adc
xchg
sahf
inc
xchg
int3
push
mov
cmp
pop
sbb
lea
(bad)
cmp
add
push
lods
fisttp
and
test
mov
xor
loope
jmp
cmp
jne
int
xchg
xchg
dec
pop
jecxz
add
adc
test
push
aam
push
loop
mov
inc
(bad)
pop
dec
or
movs
dec
and
mov
fwait
lahf
sub
(bad)
xor
sub
fbstp
xor
pop
(bad)
pop
pop
push
and
mov
or
aad
sub
imul
enter
xchg
cs
xor
fidiv
adc
cmc
jns
pop
pop
mov
cmp
das
cmps
cmps
in
jb
sub
(bad)
push
dec
push
cli
xlat
pop
(bad)
jae
and
popa
cmc
cmp
out
sub
mov
add
adc
mov
test
ror
es
pop
ins
stc
push
xchg
sbb
and
lods
jae
pop
add
out
push
or
cmps
push
idiv
sbb
xor
pop
or
or
mov
mov
push
inc
rcr
and
sti
aam
push
aas
(bad)
mov
cmps
retf
imul
lahf
push
inc
xchg
out
xor
out
mov
or
xchg
sub
and
push
or
gs
xor
pop
push
adc
mov
jno
adc
dec
push
imul
xchg
mov
mov
push
dec
ret
out
sbb
sbb
inc
sub
call
movs
cmp
inc
dec
lods
mov
les
and
outs
xchg
sbb
sub
in
push
je
(bad)
aad
xor
jle
inc
jg
imul
pop
dec
add
out
xchg
test
daa
jae
faddp
xchg
sahf
scas
push
cmc
or
pop
ret
inc
call
outs
push
mov
ror
push
test
sub
sahf
je
cmps
sbb
adc
(bad)
cmps
and
les
mov
loopne
outs
daa
or
mov
add
push
int
shl
sti
add
ficomp
jns
push
js
ja
push
mov
mov
dec
or
add
es
pop
cdq
xchg
xchg
fld
movs
jmp
xchg
jle
nop
jo
pushf
repz
push
mov
mov
std
jno
add
mov
pop
push
push
inc
pop
sbb
mov
outs
xor
xor
(bad)
shl
js
adc
adc
add
es
es
push
inc
adc
es
loop
(bad)
mov
mov
imul
sbb
test
xchg
imul
imul
push
xor
pop
jns
shr
mov
or
or
rol
push
(bad)
ror
aam
fiadd
es
out
enter
test
cmps
push
push
add
sub
jmp
outs
mov
enter
jns
xor
dec
mov
dec
sub
jo
mov
and
cmps
cmp
sbb
xchg
js
jl
inc
(bad)
shl
out
mov
mov
(bad)
pop
push
fisubr
fimul
stc
or
mov
and
mov
scas
cmc
fs
and
push
jecxz
mov
xor
(bad)
cmp
aas
popf
repnz
fwait
mov
mov
mov
adc
pop
out
es
int3
repnz
lahf
int
cmp
ror
mov
sub
rol
pop
and
push
lock
ds
and
and
loope
cs
mov
sti
and
and
popf
outs
xchg
and
jecxz
mov
mov
gs
mov
daa
inc
rcl
out
push
call
sbb
gs
jecxz
and
(bad)
adc
scas
pop
and
bound
pushf
push
adc
ret
cmp
inc
sub
in
mov
sbb
retf
pusha
and
aad
xor
xchg
adc
in
sbb
dec
cmp
repnz
hlt
addr16
jbe
ror
arpl
jl
stos
xchg
ins
sbb
mov
rol
adc
xor
mov
or
fld
sbb
cdq
pop
shl
test
call
inc
gs
cmp
je
sbb
or
sti
push
xchg
inc
xor
sbb
popa
lods
jno
jecxz
pop
jg
xchg
xchg
sub
or
sub
adc
out
xor
sub
pop
xchg
mov
mov
dec
sbb
dec
mov
xor
addr16
sub
push
xchg
shr
dec
adc
ja
sbb
jbe
addr16
add
or
jns
sbb
adc
xchg
mov
into
xor
mov
addr16
retf
pop
ret
in
dec
cmp
jp
adc
fdivr
xchg
subps
fstp
outs
dec
ins
shl
xchg
js
test
js
out
ja
add
jb
(bad)
mov
bound
int
ret
cmp
xchg
or
push
push
hlt
add
std
xchg
fld
mov
inc
jl
mov
not
and
sub
dec
bound
xor
in
xor
bswap
pop
mov
in
lahf
dec
dec
cdq
xor
add
iret
cld
push
sbb
sbb
repnz
pop
push
add
sub
lods
aas
xchg
add
pop
mov
lock
fnstsw
arpl
clc
fild
ss
jl
lock
ret
xor
call
and
cmp
mov
js
mov
push
cwde
(bad)
sbb
mov
mov
mov
pop
aaa
sub
adc
jno
bound
and
mov
push
lea
xchg
lods
adc
cmp
mov
ret
and
xchg
fcom
mov
gs
int
jno
mov
std
mov
push
sbb
(bad)
ds
out
xor
fcmovu
lods
std
mov
add
int
lds
or
imul
xchg
call
and
push
and
sub
repz
mov
jne
mov
js
xor
xchg
test
iret
cmp
sar
jne
cmp
and
jns
(bad)
leave
lods
das
push
scas
ja
push
movs
(bad)
or
lods
test
xor
or
mov
scas
mov
inc
push
into
(bad)
shr
int
(bad)
out
mov
pop
dec
xor
inc
out
call
sbb
hlt
lea
div
imul
loopne
es
jns
das
adc
in
inc
add
and
and
inc
loopne
mov
dec
cmps
cmp
rol
aad
lock
mov
lock
dec
movs
push
std
or
es
loope
and
lock
xor
or
jb
sub
and
das
jbe
push
imul
xor
(bad)
mov
xchg
imul
cmp
xchg
jle
outs
xor
pop
jecxz
push
inc
sub
stc
jle
ror
pop
sbb
jbe
(bad)
shl
cmp
jecxz
inc
mov
or
sbb
test
pop
mov
dec
stos
xchg
dec
and
pop
sub
stos
mov
jnp
aas
das
faddp
cwde
and
arpl
repz
sbb
fcmovnbe
cwde
inc
push
in
xchg
daa
mov
enter
loop
js
sbb
dec
lock
add
jno
mov
aam
(bad)
pop
pop
push
pop
aaa
jg
jb
add
test
les
pop
retf
retf
enter
test
das
push
jmp
mov
adc
ror
xor
xlat
jp
xor
leave
ins
push
gs
jmp
or
xchg
into
push
imul
ins
lds
jmp
pusha
add
and
cmp
cmp
sbb
push
mov
loopne
mov
aaa
mov
pop
pop
nop
icebp
fsub
sbb
scas
adc
xor
jnp
icebp
jo
aas
enter
push
mov
adc
retf
sub
ror
push
loop
xlat
ja
sub
adc
dec
xchg
fdiv
fs
jl
adc
sbb
pop
push
pop
inc
sbb
pop
mov
int
sbb
in
repnz
test
jmp
lock
call
retf
mov
or
xchg
fisub
outs
gs
pusha
dec
sbb
xchg
pop
fild
xor
xchg
jmp
push
cld
adc
mov
push
xlat
std
sub
loopne
xor
rcr
add
jmp
gs
shl
sbb
fwait
iret
cmps
cmp
fmul
jo
movs
sub
mov
and
mov
sub
pop
pushf
mov
adc
xchg
inc
jl
stos
movs
push
mov
jmp
movs
dec
dec
outs
jb
mov
popa
in
xchg
or
test
xor
pop
outs
punpckhbw
pop
dec
cmp
jnp
lods
inc
push
sbb
ret
aam
in
aas
add
test
and
lods
push
mov
xchg
imul
loop
popa
mov
pop
das
and
pop
jns
ins
push
mov
jns
arpl
adc
dec
dec
shl
fs
imul
cld
sub
and
sbb
sar
pop
cs
fwait
and
mov
pushf
and
cmps
fldcw
ret
fidivr
(bad)
jg
icebp
aas
out
mov
cdq
imul
loope
ror
out
dec
aad
pop
(bad)
mov
add
popf
sbb
cmp
inc
mov
push
loope
stos
cmc
test
inc
iret
cmp
add
arpl
and
dec
inc
dec
sub
mov
mov
jg
fidivr
xor
mov
pop
outs
cmp
stc
ret
push
jbe
add
sub
add
or
dec
(bad)
cli
int
cmp
je
push
jg
inc
mov
cmp
nop
adc
mov
sbb
pop
push
lods
or
iret
iret
jle
dec
inc
mov
mov
hlt
lods
packssdw
out
outs
xchg
lahf
stos
sbb
mov
rcr
pop
jnp
loopne
pop
adc
mov
sar
xchg
inc
mov
jp
addr16
sub
das
fxtract
fisubr
push
test
jne
inc
xor
cld
jbe
aas
cld
scas
dec
jo
dec
shr
and
pop
pop
pop
mov
cmp
push
mov
mov
stos
jne
and
retf
jge
in
outs
mov
outs
mov
nop
jg
into
xchg
mov
out
adc
inc
hlt
xchg
aad
sbb
inc
data16
js
leave
and
pop
push
mov
xor
jae
sbb
sub
adc
fld
aaa
mov
std
or
cwde
xchg
add
jnp
ja
gs
add
pop
adc
pusha
loope
js
imul
int
mov
cmps
dec
cmp
lods
xor
ja
jmp
sti
(bad)
mov
pop
mov
stos
and
mov
shr
xchg
cli
inc
out
dec
inc
mov
out
push
jo
sbb
dec
repnz
mov
popa
sbb
in
inc
popf
popa
jnp
icebp
cmp
addr16
stc
ins
call
cmp
pop
push
push
ja
sbb
jno
mov
ret
add
and
jns
int3
sbb
jnp
pop
xchg
or
sbb
cld
pop
pusha
jp
inc
mov
cmp
adc
jno
ret
sbb
inc
cmp
push
loop
in
imul
retf
ss
push
mov
iret
mov
loopne
call
icebp
aaa
outs
aam
jmp
cmps
(bad)
jmp
clc
jmp
or
test
out
pusha
dec
or
cld
aas
mov
pop
push
mov
test
call
jmp
test
mov
ins
lds
ffreep
xor
sahf
test
jno
mov
test
mov
in
aam
nop
jbe
xchg
add
shr
iret
popf
mov
add
nop
mov
iret
(bad)
cli
push
loop
loopne
mov
cs
xchg
push
push
push
pop
ins
xchg
daa
into
mov
mov
add
and
icebp
mov
mov
dec
and
std
in
jp
cmp
pop
(bad)
(bad)
sti
xor
or
cmp
pop
neg
jno
mov
jns
sbb
mov
push
inc
mov
jp
mov
xor
adc
sub
outs
test
add
out
jmp
push
out
adc
fisubr
cmps
add
(bad)
add
dec
jbe
pop
std
sub
jb
hlt
hlt
and
mov
pushf
cmp
jbe
xor
and
(bad)
pop
dec
or
test
aas
nop
rol
mov
mov
scas
and
mov
add
jl
add
cs
xchg
imul
xor
inc
push
cmp
dec
daa
mov
sub
sti
mov
dec
sahf
out
arpl
push
sbb
jmp
aam
and
sahf
mov
scas
sub
clc
pop
xlat
aam
xor
pop
ss
xor
dec
dec
adc
cmp
jl
lods
sbb
daa
(bad)
lock
mov
out
and
xchg
outs
mov
pushf
push
inc
shl
add
dec
(bad)
sbb
addr16
dec
push
ins
sbb
aam
and
aam
fist
mov
jle
nop
pushf
mov
mul
movs
fiadd
aam
cmp
call
sub
and
aam
das
mov
cmps
add
xchg
out
gs
rol
cmps
stos
shl
mov
mov
test
mov
test
nop
mov
fild
fincstp
sbb
loopne
mov
or
xchg
pop
into
or
jge
das
popa
mov
shl
ret
dec
cmps
jle
jle
xchg
cli
sbb
lds
pop
sti
out
or
xor
adc
int
cmc
cmp
adc
inc
mov
pop
jecxz
popf
and
jg
jp
and
inc
lahf
bound
cmp
lahf
jae
add
mov
mov
push
ret
jmp
cmp
or
inc
push
mov
inc
daa
gs
inc
ds
movs
ret
push
sbb
mov
dec
addr16
push
idiv
js
cmp
mov
jae
ret
xchg
xchg
add
pusha
gs
add
adc
or
ja
mov
sub
sub
retf
inc
mov
loope
je
rcr
xor
mov
imul
inc
stc
in
inc
add
or
sbb
cmc
pop
dec
jo
mov
push
fiadd
cmps
jl
dec
loope
and
scas
mov
adc
inc
pop
push
push
ror
or
sbb
cmp
stos
sbb
pop
pop
push
cmc
out
push
les
repnz
imul
lock
adc
ss
jp
push
clc
or
stos
ret
cmps
and
popf
add
jb
cmp
pop
popa
das
or
and
ins
cmp
test
cmc
js
fdiv
mov
push
sub
mov
or
push
jo
sub
cmc
addr16
xchg
cwde
dec
or
adc
pop
dec
push
shr
xor
jl
mov
push
mov
mov
fwait
xor
leave
push
mov
pop
je
popf
sub
pop
xor
xor
int
pop
cmp
xor
adc
mov
scas
je
adc
mov
pop
push
jno
hlt
adc
aam
push
cmp
push
dec
cdq
fwait
adc
sbb
(bad)
call
test
ins
mov
repz
pop
jle
leave
jg
dec
and
cli
mov
(bad)
out
cmp
inc
mov
push
xchg
leave
cmp
into
mov
cmps
arpl
sti
shl
jb
out
popa
push
aam
adc
mov
and
mov
sbb
cs
inc
push
daa
mov
jns
test
mov
or
jge
rcl
pushf
das
sub
pop
cld
mov
or
adc
into
add
push
mov
xor
sub
in
lds
sub
push
fimul
mov
xor
inc
and
mov
and
mov
add
imul
mov
xor
mov
ret
inc
mov
pop
sub
lock
push
test
loopne
les
stos
hlt
fsubrp
sbb
popa
cmp
inc
nop
and
aam
sub
movs
xor
lock
fimul
push
mov
ret
in
and
xor
mov
stos
fwait
pop
inc
mov
int3
retf
xchg
push
dec
cmp
cmp
and
dec
xor
add
fwait
mov
in
(bad)
fsubr
adc
pop
sahf
mov
xor
mov
and
jp
enter
jp
cmps
xchg
cmp
movs
pop
enter
or
(bad)
rcr
push
jg
mov
add
xchg
dec
mov
add
sahf
or
stos
and
lods
or
cmp
les
mov
enter
mov
jne
out
imul
cmc
dec
sub
push
mov
cs
jns
jo
xchg
outs
dec
push
mov
inc
into
es
call
push
dec
jmp
loopne
mov
inc
lahf
jle
scas
int3
mov
pusha
xor
stos
or
or
div
out
fstp
sub
pop
mov
jg
ins
jp
je
adc
sbb
push
out
gs
lods
adc
in
(bad)
ins
ss
cdq
inc
rol
(bad)
aaa
ret
idiv
or
loop
les
cdq
es
adc
aas
sbb
shr
jae
enter
arpl
popa
jp
pop
push
clc
(bad)
mov
fcomp
or
adc
stc
sub
xor
jb
xchg
and
test
dec
mov
and
add
fst
add
add
jmp
jnp
mov
or
inc
mov
das
movs
add
mov
rcl
int3
add
or
loope
mov
pop
sub
fistp
dec
out
mov
xchg
and
push
sbb
test
pop
cld
cld
les
aaa
(bad)
jge
jecxz
or
scas
cmp
jbe
lea
mov
fwait
repz
add
imul
repnz
jo
retf
bound
js
fisub
mov
imul
in
fs
add
push
push
sub
fild
cmp
add
sbb
shl
jno
repnz
mov
push
ins
cmp
aam
dec
ss
aaa
sbb
sbb
add
xchg
les
cwde
arpl
dec
push
dec
sti
xchg
xor
push
(bad)
daa
rcr
jbe
xchg
pusha
pop
stos
lds
push
mov
push
mov
test
jg
scas
shl
bound
sub
test
xor
cdq
(bad)
cmp
jmp
aaa
loopne
in
jmp
ins
or
sbb
mov
scas
rcl
call
mov
mov
push
sub
sub
outs
mov
inc
rol
xlat
imul
or
ror
fistp
jg
hlt
addr16
rol
rcl
inc
scas
push
mov
int3
jl
xchg
xchg
sahf
ficom
pushf
call
repnz
mov
xchg
lea
adc
(bad)
fldenv
pop
cmps
mov
add
dec
mov
ins
adc
adc
aam
jge
out
pop
mul
rcl
std
push
lods
dec
stos
adc
mov
xchg
push
add
nop
fidivr
ret
movs
repnz
pop
jge
shr
mov
aad
pop
sahf
hlt
pusha
push
lds
enter
aas
cld
mov
cmp
bound
pop
cs
adc
xor
and
mov
out
stos
cmc
retf
xchg
leave
leave
pusha
out
sub
xor
cmp
jo
dec
pop
jl
pop
sub
push
lock
jl
and
movhps
or
adc
sbb
mov
lock
daa
fiadd
mov
xchg
pop
jns
into
call
cmp
rol
std
daa
xchg
xchg
cdq
adc
sbb
jbe
call
mov
stc
dec
adc
cmps
out
and
and
xchg
adc
dec
inc
out
ret
daa
addr16
test
mov
dec
fdivrp
cmp
sbb
mov
jne
dec
gs
pop
out
adc
pop
imul
fistp
lods
inc
idiv
xor
cli
es
jl
inc
pop
adc
fs
std
pop
inc
test
dec
mov
mov
inc
jbe
out
xor
push
or
or
les
fwait
xchg
mov
push
xor
inc
mov
in
mov
ret
mov
xchg
push
les
daa
iret
movs
movs
es
mov
fsub
push
jge
test
cwde
outs
mov
add
dec
cmp
mov
ja
xchg
push
shl
popf
cmp
sbb
outs
test
xchg
sbb
aaa
ds
gs
push
leave
pop
xchg
pop
or
mov
lahf
jno
or
jg
std
mov
xor
mov
frstor
imul
int3
push
daa
je
push
xchg
mov
push
adc
jge
js
(bad)
sbb
nop
sbb
gs
retf
xchg
test
(bad)
and
test
movs
dec
hlt
mov
pop
jnp
ret
add
inc
inc
call
and
dec
ins
mov
push
fwait
push
xchg
pop
bound
mov
or
mov
and
jnp
shr
mov
and
fdiv
jnp
popa
mov
dec
add
int3
xchg
mov
adc
pop
pop
retf
retf
mov
xchg
cmp
or
aaa
and
arpl
cmp
push
cld
mov
cmp
dec
mov
or
xchg
sub
ret
ins
inc
jns
xor
repnz
cmc
pop
rcr
mov
into
mov
dec
or
lock
lea
stos
dec
sbb
lods
inc
icebp
arpl
mov
bound
xor
jns
into
cdq
imul
ficom
push
pop
movs
and
mov
movs
mov
sbb
pop
stos
dec
(bad)
loopne
jecxz
out
mov
sub
aad
mov
sbb
and
xchg
dec
dec
adc
lock
(bad)
icebp
mov
ja
ret
xlat
or
or
sub
xchg
popf
test
ds
test
adc
add
xor
inc
mov
push
loope
shr
test
jne
je
mov
adc
push
sub
and
push
ret
push
inc
or
jecxz
pop
in
cmp
aas
inc
push
push
(bad)
(bad)
rol
clc
xchg
inc
stos
cmp
dec
cmp
sbb
leave
int
call
fldcw
std
imul
pop
stos
and
mov
leave
(bad)
hlt
repz
ins
dec
aam
cmps
loop
leave
cmp
in
dec
and
dec
pop
inc
retf
xchg
adc
cli
mov
aaa
fs
or
or
test
movs
xchg
dec
icebp
loopne
mov
into
pusha
lea
cmc
pop
hlt
jnp
pushf
int3
es
pop
cmp
dec
jns
sbb
push
or
jle
pop
in
xchg
fdivr
mov
frstor
ins
aaa
stos
xchg
js
mov
xchg
enter
popa
sti
rcr
and
cli
adc
das
pop
mov
xchg
inc
xor
mov
je
mov
xchg
adc
push
push
in
mov
dec
mov
mov
sub
jo
sbb
cmps
add
outs
mov
pop
pop
push
mov
xlat
aas
fs
pop
inc
mov
sbb
mov
push
out
xor
push
mul
clc
sbb
mov
mov
sub
pop
or
push
not
pop
inc
xlat
xchg
outs
adc
rol
dec
mov
cmp
sbb
and
jp
dec
cmp
inc
pop
retf
mov
xchg
pop
mov
adc
je
loope
xchg
fistp
enter
inc
add
mov
lds
push
mov
je
mov
out
jge
std
ret
stos
fwait
rcr
dec
jmp
mov
retf
leave
test
or
jo
xor
mov
aaa
adc
sbb
jmp
cmps
mov
fwait
call
push
push
fcmovnb
dec
mov
mov
repnz
(bad)
cs
xor
jp
xchg
sahf
pusha
xchg
test
std
push
lds
sub
mov
lock
neg
retf
mov
jge
mov
add
mov
idiv
ins
xchg
hlt
cs
xor
js
in
ret
cdq
jmp
mov
cmp
in
sbb
add
stc
bound
out
sub
mov
jbe
out
fs
mov
das
push
je
adc
shl
xchg
add
lahf
fcmovb
sub
std
dec
xchg
or
lock
ss
je
add
cs
shl
sub
add
xchg
or
outs
jmp
or
add
push
adc
xlat
pop
sti
or
dec
or
cmp
jb
enter
xor
data16
add
jecxz
loope
repz
or
ss
sbb
mov
cli
push
dec
and
mov
mov
cmp
ss
xchg
call
xlat
sbb
into
jmp
inc
and
cli
cdq
test
add
scas
mov
movs
rcr
or
add
js
inc
ror
aad
cld
stc
jg
cmp
(bad)
(bad)
adc
mov
and
pop
push
out
jge
push
jae
jl
repnz
cmp
test
int
loope
fstp
add
mov
je
cmps
data16
or
jmp
loope
cs
(bad)
mov
fs
sub
sub
pop
sti
jecxz
mov
jbe
iret
cmps
sbb
(bad)
(bad)
mov
jb
xor
jno
shr
fwait
dec
mov
test
xchg
(bad)
mov
add
stos
jno
and
lea
(bad)
(bad)
scas
xchg
in
pop
into
add
pop
test
push
movs
push
je
jl
cmp
adc
dec
push
pop
xor
inc
mov
std
call
ret
es
test
(bad)
loop
js
xchg
mov
xchg
cli
inc
mov
fsubr
adc
aas
sub
sub
xchg
push
dec
sub
fld
fidiv
nop
aas
sub
out
out
sbb
mov
call
in
xchg
cdq
mov
into
loop
out
out
push
push
mov
out
out
es
shr
sub
cdq
xchg
rcr
or
push
repz
cwde
(bad)
mov
pop
fst
jge
inc
mov
mul
test
daa
jb
cld
push
lahf
aaa
stos
clc
sar
jle
cmps
or
fsub
fcom
je
and
test
aad
cmp
jnp
mov
fxch
aam
add
(bad)
mov
iret
out
jb
ret
pop
push
(bad)
lahf
push
cli
xchg
outs
and
pop
and
iret
dec
adc
jg
dec
pop
cmp
mov
push
pop
mov
sbb
cmps
add
pop
ss
out
in
mov
je
js
fsub
hlt
jl
xchg
and
out
cli
dec
sbb
pop
mov
and
outs
push
mov
and
leave
mov
loopne
in
int
fstp
xor
xchg
bound
and
les
nop
icebp
dec
sub
fcom
push
rol
mov
sbb
add
push
jg
pop
mov
push
test
adc
ja
push
(bad)
iret
test
movs
xchg
push
dec
aaa
mov
pusha
cld
in
sub
out
inc
fst
das
retf
or
rcl
sbb
jne
push
imul
fadd
xchg
addr16
xlat
fdivrp
test
in
push
xchg
add
xchg
xlat
add
pop
aaa
push
fs
inc
add
or
xor
fcom
test
mov
sbb
rep
js
mov
xor
jg
mov
fs
adc
cmp
jmp
addr16
pop
cmp
or
(bad)
arpl
xchg
arpl
cs
cmp
pop
sub
ror
xor
pop
sar
or
jnp
je
sub
nop
xlat
scas
into
lods
bound
sbb
mov
add
aas
mov
sbb
or
je
jne
repz
daa
push
push
xor
pop
dec
inc
in
ins
mov
xlat
ret
inc
bound
fist
sbb
adc
test
mov
(bad)
leave
sti
or
test
jnp
loop
xchg
mov
test
add
push
retf
icebp
aam
cmp
and
cs
jmp
jbe
aaa
xchg
jb
ret
rcl
enter
(bad)
jge
adc
iret
ja
(bad)
sbb
or
cmps
fs
bound
cmp
stc
jo
fimul
in
gs
fmul
lock
mov
nop
adc
mov
push
rcl
bt
sub
in
xor
dec
sbb
cmp
xor
push
addr16
jp
nop
popa
ja
stos
cmps
pop
hlt
out
push
fmul
aaa
ret
cmp
das
cmp
cmp
mov
or
push
cmp
jb
sub
mov
jb
in
dec
mov
dec
test
push
int
pop
retf
cmps
jg
push
je
cmc
sub
repz
(bad)
cmp
loope
mov
sbb
pusha
cli
data16
popa
out
mov
adc
or
loop
lods
sub
or
and
adc
(bad)
repnz
and
lds
xchg
adc
adc
add
popf
fdivr
fmul
inc
retf
mov
sbb
jnp
adc
fisubr
movs
(bad)
mov
xor
je
pop
dec
imul
shr
cdq
cmp
gs
push
loopne
outs
add
mov
lahf
xor
dec
sbb
xor
and
and
leave
emms
mov
cmps
es
movs
pop
neg
out
jmp
sbb
mov
push
out
pop
jp
and
test
lods
(bad)
pop
pusha
(bad)
cmp
jle
cs
xor
sahf
shl
jbe
adc
mov
call
add
xor
aas
and
inc
or
sbb
jbe
aaa
arpl
fwait
jmp
jnp
movs
lahf
ss
jne
dec
and
data16
mov
add
popf
jl
fdiv
out
mov
movs
je
fistp
xchg
(bad)
in
ficomp
ins
aad
pop
ins
push
mov
push
xlat
xchg
inc
icebp
inc
div
shl
out
mov
fstp
nop
data16
or
xor
out
pop
sbb
pop
mov
xchg
test
cmc
cmp
loope
or
fwait
cmp
push
aad
aas
mov
repnz
cli
sub
push
enter
in
mov
mov
mov
and
mov
es
mov
sbb
adc
inc
retf
push
push
stc
mov
aas
addr16
fnsave
fisttp
pop
mov
inc
jecxz
cmp
sbb
adc
push
in
sub
xchg
mov
aaa
movs
adc
pop
std
mov
jnp
fistp
pusha
test
out
dec
or
dec
fiadd
lock
(bad)
sub
adc
jecxz
adc
(bad)
sbb
push
scas
xor
shr
les
movs
jmp
dec
mov
sbb
sbb
push
ror
lock
(bad)
fwait
aam
or
push
(bad)
jmp
jno
(bad)
dec
inc
xor
fcomp
js
add
movs
(bad)
xchg
adc
mov
stos
rcr
ins
cmp
xchg
pop
loopne
int
cmp
out
imul
aaa
out
es
xor
lds
inc
inc
dec
cmp
(bad)
leave
fwait
arpl
and
mov
push
test
(bad)
jnp
(bad)
loope
jmp
(bad)
push
fidivr
sub
sti
inc
xchg
or
push
add
mov
cmp
icebp
aas
test
fcomp
sub
lods
sahf
cmp
imul
pop
mov
hlt
out
adc
pusha
dec
arpl
xor
gs
in
push
mov
push
cmp
mov
pushf
mov
(bad)
mov
xor
dec
iret
jne
ins
xor
outs
test
pop
in
adc
stos
aam
mov
mov
movs
dec
fsin
pop
arpl
sub
movs
pop
xor
out
push
mov
enter
mov
push
xchg
add
and
xchg
cld
ja
adc
or
add
mov
add
(bad)
inc
fwait
xor
das
in
dec
jmp
inc
pop
retf
or
lahf
mov
dec
nop
sbb
mov
sbb
sahf
xor
mov
popf
sbb
xchg
scas
imul
mov
mov
xchg
jb
loope
call
xchg
pop
push
mov
sbb
test
add
out
movs
out
stos
jl
nop
lods
mul
sbb
in
cs
adc
les
mov
or
stos
and
or
stc
push
ins
xchg
ret
dec
rcr
and
pop
ja
call
mov
dec
test
(bad)
(bad)
push
mov
sub
xchg
fidiv
inc
cmps
mov
dec
(bad)
sbb
add
inc
cmp
fs
sub
cmp
out
add
arpl
add
sub
lods
enter
adc
mov
and
push
outs
pusha
jge
sar
cld
lahf
add
adc
rcr
retf
xor
cmp
(bad)
aad
and
test
mov
sbb
xchg
data16
xor
lods
mov
enter
cld
outs
inc
xor
push
jg
push
call
xchg
push
shl
sbb
mov
mov
inc
mov
jmp
pushf
aad
stc
out
pop
icebp
inc
add
sub
mov
std
sub
pop
scas
fisttp
mov
stos
mov
imul
cdq
adc
pop
(bad)
jle
mov
cmp
jbe
pop
mov
xor
dec
add
xchg
popf
clc
mov
loop
mov
daa
push
add
push
loope
cmps
and
jle
mov
jbe
xchg
lods
jl
fisttp
imul
popf
push
outs
or
popf
cwde
mov
add
mov
(bad)
or
loope
mov
add
out
push
out
(bad)
mov
add
stos
loopne
push
mov
outs
add
stos
push
push
in
mov
add
(bad)
mov
out
push
jne
js
xchg
and
ror
iret
mov
cmp
idiv
scas
lea
xlat
dec
stc
jae
frstor
dec
(bad)
jl
cmp
mov
add
sbb
imul
jae
ins
push
call
or
iret
mov
pop
ins
mov
jp
repz
(bad)
add
mov
call
or
push
div
js
cmp
mov
clc
jns
xchg
jb
push
add
arpl
xor
imul
xchg
hlt
xor
sbb
jmp
inc
xor
test
pop
div
mov
pop
and
mov
add
sbb
sub
and
mov
push
jno
cmps
sub
add
ja
add
cmp
mov
cmp
dec
pop
mov
test
cmp
adc
(bad)
out
xor
vandnps
out
adc
mov
xchg
out
jne
sti
dec
jnp
pop
stos
arpl
mov
and
ja
dec
xchg
imul
das
or
xor
rol
or
lahf
mov
or
inc
in
or
mov
sub
cmp
mov
inc
fidiv
movs
mov
adc
dec
(bad)
mov
adc
mov
call
mov
push
aad
pop
inc
adc
and
mov
dec
shl
adc
lds
and
mov
mov
data16
add
push
(bad)
mov
lea
cmp
add
jmp
in
sbb
pop
mov
iret
mov
mov
mul
fld
aaa
mov
lahf
inc
xor
cmp
mov
(bad)
adc
loopne
sahf
jmp
mov
sbb
cmp
dec
scas
repnz
mov
or
jae
movs
dec
mov
or
fcmovnu
and
cmp
popa
bound
xor
mov
pop
pop
sub
jbe
add
adc
std
jmp
loop
nop
cmp
mov
daa
int
loope
push
aaa
xor
inc
cmp
call
or
push
pop
sbb
or
dec
in
sub
je
adc
sub
loope
jg
test
or
cmp
popf
or
cmp
dec
push
test
imul
ja
mov
pop
jecxz
or
jmp
(bad)
xchg
mov
arpl
cdq
gs
jbe
mov
lods
loopne
add
pop
popf
xchg
fs
js
out
adc
xor
mov
pop
(bad)
sub
cwde
shr
scas
jp
lock
ds
stc
or
dec
push
addr16
adc
pop
lods
popf
jle
adc
popf
mul
or
pusha
rol
js
cli
lock
push
data16
jmp
and
fld
inc
test
pushf
add
retf
mov
push
push
retf
test
xchg
add
adc
pop
mov
and
test
push
mov
call
scas
push
jnp
push
pushf
in
mov
mov
sbb
(bad)
xor
add
cmp
jns
and
repnz
cmps
cld
jno
leave
sbb
mov
pop
dec
int
dec
ret
repnz
mov
push
repz
push
icebp
sbb
xchg
pop
jle
mov
in
jnp
lods
add
xchg
mov
sub
ret
cmps
aas
jle
(bad)
daa
pop
(bad)
rcr
clc
sub
and
imul
sbb
jne
and
inc
out
test
adc
and
pop
and
cmp
xor
mov
mov
mov
and
add
ror
(bad)
and
pop
cs
cmps
xor
in
jge
adc
shr
mov
xchg
clc
inc
cmp
sub
int
jne
sbb
pop
je
mov
sbb
sub
enter
pop
adc
lea
(bad)
in
sub
push
sub
cmps
shr
dec
mov
leave
mov
xlat
js
and
adc
mov
push
jge
and
pop
inc
sub
add
and
dec
aaa
lods
mov
jmp
xor
jno
push
adc
mov
mov
mov
ss
push
lds
ror
push
rol
loopne
lods
cmps
add
cmp
fdivrp
push
ins
pop
or
pop
int3
sbb
jae
fcmovnb
mov
fisubr
jp
(bad)
xor
mov
stos
into
fistp
out
pop
mov
repnz
or
inc
cli
jno
cdq
(bad)
imul
push
mov
xor
jo
push
mov
lds
mov
pop
in
ins
(bad)
out
add
inc
jmp
pusha
push
mov
xchg
pop
inc
imul
or
cmps
data16
outs
and
inc
adc
in
retf
gs
ins
dec
or
push
fiadd
mov
std
loop
pop
les
mov
dec
frstor
xor
iret
and
dec
jno
push
mov
add
out
pop
jno
test
test
and
fdecstp
dec
popa
push
xor
xchg
mov
ins
adc
push
ja
hlt
cmps
or
(bad)
not
mov
in
and
das
outs
into
imul
jae
cli
sar
idiv
and
ret
ins
xchg
mov
cli
popf
in
ins
in
add
test
sbb
dec
jle
retf
mov
(bad)
sti
push
xchg
jge
adc
and
sbb
loop
inc
jns
add
pop
add
inc
xchg
js
xchg
add
dec
jb
in
pop
jmp
sub
std
psadbw
int
mov
dec
and
inc
ret
jne
sbb
adc
and
loope
xchg
call
aam
sbb
push
cwde
(bad)
dec
inc
in
clc
jge
cmp
jp
out
icebp
mov
cmp
sbb
add
adc
cdq
ds
inc
dec
dec
cmc
mov
gs
push
call
cmp
arpl
cmp
push
and
push
pop
sub
inc
retf
imul
repz
mov
add
clc
aaa
cmps
jns
retf
xchg
das
inc
jmp
ja
(bad)
(bad)
fst
xchg
fcmovu
sar
imul
jle
adc
pop
mov
nop
(bad)
loope
cmp
and
inc
jecxz
push
cld
(bad)
out
inc
mov
rcr
jecxz
lods
cdq
leave
popf
and
lea
popa
xchg
sub
inc
mov
lock
aas
or
mov
mov
and
popf
and
aas
jecxz
pop
or
add
ja
add
pop
cli
and
dec
addr16
mov
pop
fchs
dec
mov
pop
pop
inc
aas
cmp
arpl
sub
cmp
fbstp
js
add
mov
cmp
mov
push
mov
gs
imul
adc
cli
pop
cmp
pop
mov
daa
ds
ret
inc
jge
cmp
or
cmps
cmp
ret
xor
std
xchg
js
mov
or
sbb
popa
leave
xchg
mov
sub
cwde
jo
cdq
test
dec
mov
into
xchg
hlt
lds
clc
shl
ds
fisubr
fst
(bad)
sub
add
cmp
dec
rol
or
int3
sti
loopne
jle
dec
and
inc
fdiv
paddsw
out
adc
sub
adc
inc
xchg
daa
push
sbb
jge
mov
das
jmp
out
movs
push
mov
ins
ins
xchg
stc
mul
loope
xchg
mov
sub
jbe
add
ins
xor
add
out
jno
adc
dec
pop
adc
jbe
xchg
xchg
cmp
dec
pop
xor
xor
pop
out
arpl
and
pop
dec
and
shr
mov
jp
and
xor
cs
dec
or
push
mov
inc
sbb
pop
and
push
and
push
into
push
out
cmp
push
jno
jp
cmp
mov
retf
pop
in
sub
(bad)
sbb
jns
test
pop
add
mov
loope
out
mov
mov
sbb
loop
jae
mov
in
enter
mov
sldt
jmp
mov
mov
out
lods
ja
mov
rol
mov
dec
push
mov
leave
push
stos
jg
test
and
inc
lea
dec
ins
xchg
hlt
sbb
mov
fisubr
movs
cmp
pop
loope
or
sub
out
or
add
clc
xchg
stc
jg
or
and
rol
add
dec
in
stos
daa
add
cmc
xchg
hlt
mov
outs
sub
adc
pop
pop
pop
cmc
jl
pop
push
jbe
test
dec
in
mov
(bad)
jp
push
inc
mov
leave
outs
hlt
mov
pop
(bad)
cmc
pop
add
or
jmp
ins
and
iret
push
repnz
mov
mov
jle
lea
int
call
or
int
fidivr
cmp
or
push
jge
inc
adc
test
push
fild
mov
out
imul
sbb
sti
rcl
jo
cmp
and
nop
les
bound
sbb
sbb
stos
pop
lods
hlt
dec
mov
push
mov
test
aaa
xchg
ret
sub
das
std
jae
icebp
in
add
in
add
add
xor
lods
fcmovne
sbb
aam
out
and
cdq
sti
jecxz
pop
mul
cwde
adc
sbb
mov
inc
dec
sub
in
push
jmp
adc
dec
pop
aad
pop
aaa
(bad)
pusha
cmp
jnp
push
shl
ror
inc
xchg
retf
xor
jne
mov
stc
je
test
push
retf
push
call
xor
jp
xchg
cmps
cli
push
jl
movs
shr
imul
inc
fcomp
or
bound
sahf
cmp
cmc
adc
lds
mov
out
cld
fisttp
adc
call
fwait
jl
dec
outs
xor
call
ss
loopne
js
out
movs
xchg
mov
jne
ror
adc
push
inc
loopne
pop
dec
enterw
rcr
cmp
loope
repz
jp
push
rcl
xlat
sar
mov
nop
icebp
icebp
dec
pop
ins
sub
inc
call
inc
data16
cmp
sub
sbb
mov
loopne
int3
add
adc
call
mov
repnz
adc
adc
mov
and
out
call
push
ret
mov
mov
fstp
mov
add
bound
into
mov
jns
pop
cli
ror
out
dec
xchg
pop
lock
dec
mov
mov
jmp
(bad)
jp
xor
mov
test
ins
xchg
xchg
in
iret
dec
(bad)
mov
push
mov
fisubr
and
imul
ins
ins
cs
and
xor
or
mov
jp
or
xor
(bad)
and
adc
fnstsw
scas
ss
mov
jae
push
adc
aaa
call
push
stc
out
dec
lock
test
(bad)
(bad)
icebp
and
push
das
xchg
stc
stc
in
pop
add
sbb
(bad)
mov
pop
mov
cld
addr16
iret
call
mov
fs
mov
rol
sbb
outs
fistp
pop
jg
lds
popf
int
sub
enter
rcl
and
cmp
cwde
push
adc
push
add
mov
ins
ret
xlat
sahf
ds
add
stos
pop
into
jmp
clc
int
dec
jge
jge
xor
ds
int
mov
pop
inc
or
pop
outs
loop
stc
pop
adc
push
inc
sub
pop
shl
and
fidiv
adc
dec
or
shl
aam
clc
dec
push
out
int
dec
push
rcl
pop
xor
lods
xchg
fcomp
cmp
retf
outs
mov
loopne
repnz
int
lods
push
or
mul
loopne
pop
fcmove
lods
out
push
repz
inc
adc
sub
xor
fwait
push
push
adc
add
inc
add
dec
and
mov
(bad)
inc
or
mov
not
sahf
push
xchg
mov
or
inc
in
pop
hlt
test
dec
dec
cmp
popf
je
movs
test
cld
fnsave
mov
data16
fnstsw
add
(bad)
in
int
mov
nop
(bad)
repz
push
ret
test
ins
je
jb
add
icebp
stc
aad
out
inc
jmp
sbb
push
out
jbe
aaa
stos
call
mov
(bad)
push
push
push
adc
xor
cwde
std
push
sbb
inc
cmps
mov
fidiv
xchg
test
bound
(bad)
mov
test
loopne
daa
xor
inc
out
xchg
dec
pop
sub
inc
pop
fldcw
cmp
outs
retf
(bad)
fwait
retf
xor
pavgb
(bad)
fldln2
pop
pushw
aas
xor
ins
inc
inc
mov
es
push
clc
mov
test
ret
inc
loop
mov
jle
loop
out
movs
out
jp
sti
sbb
xor
or
mov
and
popf
push
and
sub
inc
pop
sub
or
adc
ret
stos
dec
mov
add
popa
mov
cmp
and
test
xchg
xchg
mov
jae
mov
outs
stos
arpl
mov
push
ret
cmp
popa
fcmovu
add
inc
push
call
dec
stos
sub
and
les
pop
out
out
sub
mov
cld
add
fcomp
push
sbb
push
sbb
mov
and
enter
mov
dec
dec
(bad)
clc
push
call
cdq
inc
movs
dec
rcl
adc
sahf
fist
dec
mov
je
fldenv
add
scas
pushf
mov
dec
and
add
scas
dec
dec
jo
sub
or
push
push
inc
push
push
pushf
ds
push
sub
clc
push
out
add
repz
sahf
sub
mov
daa
mov
jge
test
shl
sub
mov
mov
pop
jns
push
xor
and
scas
sub
jno
scas
mov
jne
sbb
(bad)
pop
test
inc
xchg
int3
sbb
inc
test
xor
jnp
(bad)
ss
xchg
imul
nop
cmc
mov
or
neg
inc
hlt
and
loope
xor
mov
test
and
xor
jmp
jnp
xlat
mov
les
dec
repnz
sbb
fsub
lock
inc
mov
jb
dec
push
addr16
sub
retf
pushf
xor
fisubr
aaa
mov
sbb
nop
xchg
mov
push
(bad)
mov
rcr
fwait
jbe
std
cmp
sub
pop
lods
das
ret
scas
ja
or
js
push
sub
repnz
adc
scas
leave
enter
cmp
rcl
cdq
(bad)
cli
adc
inc
std
or
jl
in
xchg
add
fcmovne
mov
loopne
outs
pushf
add
int
or
xor
and
push
nop
ja
lock
shl
outs
fsubr
dec
mov
aam
scas
test
xor
add
xor
add
out
pop
aad
jl
and
ja
in
fadd
ror
sahf
sub
jnp
and
(bad)
ror
hlt
in
lock
in
in
xor
mov
cmp
push
push
lods
sbb
js
jb
test
les
pushf
pop
lea
and
pusha
aas
sub
rcr
test
retf
mov
jnp
cmp
mov
pop
jmp
or
retf
lea
(bad)
js
add
jge
addr16
push
jge
xchg
push
into
add
inc
cmps
out
cmc
hlt
mov
fwait
data16
stos
leave
mov
cmp
pop
ins
push
addr16
in
aaa
add
ins
push
jb
xchg
icebp
rcl
push
das
(bad)
lahf
(bad)
mov
int3
cmp
sbb
pop
or
xchg
fwait
movs
add
js
pop
ss
(bad)
and
fld
retf
xchg
and
lods
mov
test
movs
imul
inc
jo
ins
dec
or
icebp
lds
xchg
div
mov
imul
lahf
repz
mov
dec
and
dec
mov
mov
les
outs
dec
xchg
jp
mov
and
push
xchg
enter
dec
rol
enter
enter
ds
cmp
mov
cld
mov
in
retf
adc
push
pop
lods
sbb
dec
inc
cwde
and
fwait
add
ja
jmp
xor
shl
lods
pushf
jle
cld
aas
lods
or
jle
adc
dec
pop
ins
cmp
sub
inc
inc
jg
jl
xchg
addr16
xlat
mov
xchg
push
fcomp
aaa
fimul
cmc
fs
ss
movs
dec
(bad)
stc
xchg
lods
push
imul
pop
(bad)
pop
and
scas
and
adc
fild
aaa
and
jns
and
sahf
test
sbb
pop
dec
sbb
lods
and
les
adc
push
ins
mov
jecxz
jo
ds
sub
pusha
xchg
(bad)
sbb
and
or
add
mov
xchg
fldcw
pusha
out
in
adc
neg
push
pop
and
cmp
add
fwait
into
add
fmul
push
int
xor
mov
jg
and
dec
jge
fdiv
xor
xor
sub
cmp
sub
inc
or
hlt
(bad)
arpl
lds
and
or
ret
and
shl
lock
int
mov
xor
dec
test
ins
and
mov
jl
sbb
xlat
jmp
retf
imul
je
in
push
mov
je
loope
or
not
inc
rcl
push
xor
lods
ror
push
inc
or
mov
sub
sbb
mov
outs
shr
mov
in
inc
fiadd
inc
xchg
adc
mov
cmp
pop
dec
ins
(bad)
cli
arpl
mov
(bad)
repz
dec
repnz
jb
inc
jge
stos
in
imul
mov
inc
daa
cmp
mov
ret
iret
cdq
mov
push
cmps
add
mov
aam
sub
and
imul
push
xchg
lods
adc
lock
inc
int3
cmp
loope
or
or
adc
pop
xchg
dec
es
push
data16
imul
cmps
sbb
dec
cmp
stos
shl
xor
jo
jl
pushf
sbb
rol
pop
pop
cmps
sub
fnstenv
dec
in
sti
sbb
dec
hlt
es
jns
in
mov
sbb
out
sahf
ds
sbb
mov
not
cmp
stc
lahf
out
popf
gs
sub
jg
mov
aad
int3
and
in
cmp
stc
and
outs
dec
dec
scas
inc
adc
mov
dec
push
xor
jnp
and
and
dec
jmp
mov
repnz
mov
xor
mov
es
repnz
movs
stos
icebp
stc
mov
cmc
sub
lea
mov
or
jmp
cwde
test
push
outs
dec
push
stos
into
pop
add
add
jne
or
retf
jae
fnstsw
enter
mov
pop
ds
or
ficomp
adc
pop
lds
pushf
adc
mov
std
movs
dec
mov
mov
sbb
(bad)
mov
push
in
inc
mov
fiadd
dec
push
mov
enter
pop
push
adc
movs
or
(bad)
pop
test
inc
mov
cwde
cmps
sbb
mov
and
and
cmp
jno
(bad)
(bad)
outs
or
add
and
outs
or
int
out
outs
mov
aaa
bound
mov
jmp
add
idiv
das
sbb
dec
lods
mov
icebp
(bad)
jmp
loope
jge
xor
pop
inc
dec
int
push
jp
pop
cld
and
nop
jle
mov
jno
retf
inc
xlat
aam
or
repz
dec
rol
mov
ins
pop
stos
push
fdivr
sahf
call
pop
iret
xor
adc
push
mov
leave
into
dec
imul
adc
and
and
sub
test
xchg
sub
outs
pop
jb
js
jge
adc
push
cmps
adc
rcl
scas
dec
ss
push
add
push
(bad)
lds
out
push
jmp
jmp
into
mov
adc
cmp
loope
mov
(bad)
jmp
out
sbb
test
test
inc
jmp
push
cli
loop
push
lea
or
push
adc
adc
mov
in
dec
xor
xlat
or
sbb
push
mov
dec
or
ja
push
hlt
test
and
jg
das
cmp
test
es
add
xchg
cmp
mov
cdq
add
add
ret
ret
inc
add
mov
clc
rcl
pop
test
retf
mov
mov
mul
pop
in
cld
adc
aam
adc
and
push
inc
mov
and
nop
popa
push
add
sbb
xchg
or
in
sub
fwait
jge
pushf
jge
addr16
sbb
das
jle
pushf
jmp
and
clc
pop
and
add
ja
push
(bad)
push
sub
push
cdq
mov
pop
rol
add
xchg
cmp
out
fisttp
push
cdq
ds
xor
jp
xchg
retf
fsubr
add
lods
mov
add
sti
push
xchg
adc
cmp
movs
dec
leave
sbb
jae
test
jae
loop
mov
mov
dec
clc
dec
fucomi
dec
nop
leave
and
add
cmp
cli
clc
adc
mov
mov
call
cmp
push
mov
pop
dec
addr16
mov
or
inc
xchg
cmc
dec
xchg
sub
mov
mov
xadd
mov
sub
cmc
mov
repz
or
jae
movs
add
jbe
ret
fwait
add
addr16
pop
cwde
movs
push
or
jge
arpl
mov
xchg
arpl
(bad)
sti
adc
jp
(bad)
sub
shr
clc
sti
mov
call
cmp
and
stos
sbb
mov
adc
fild
mov
xchg
std
and
daa
(bad)
sub
dec
jl
pop
xor
mov
jae
or
stos
sbb
jl
xchg
int3
mov
adc
in
mov
pop
outs
mov
dec
imul
retf
and
sbb
xchg
fldcw
xchg
test
data16
xlat
repz
out
retf
jae
pushf
pushf
int3
repnz
xchg
mov
sub
mov
cmp
ret
xchg
dec
movs
fstp
loop
lods
xor
xchg
lahf
imul
and
mov
push
js
aad
sti
jl
iret
(bad)
push
xor
push
pop
jp
movzx
icebp
cmp
into
sub
mov
and
cmp
mov
stos
dec
test
(bad)
rcr
pop
jmp
(bad)
rcl
dec
std
test
add
cmp
and
mov
mov
push
retf
mov
cmp
rcl
dec
mov
mov
cvtpi2ps
sub
pop
inc
jns
push
fwait
sub
xchg
movs
popf
jb
in
cs
ja
or
hlt
mov
adc
dec
pop
mov
push
inc
mov
fnsave
sub
pushf
sub
jae
xor
push
std
mov
push
pop
push
xor
call
push
jg
fsubp
daa
iret
pop
scas
inc
loop
pop
push
ss
int
or
mov
push
dec
or
xor
push
dec
fld
add
dec
rcr
inc
dec
in
xor
lock
je
mov
scas
lods
js
in
clc
(bad)
mov
jb
cmps
cs
js
dec
lea
or
mov
cmp
shl
push
aad
sub
in
leave
xchg
lods
iret
std
mov
and
data16
daa
mov
and
lahf
push
shl
mov
outs
jno
(bad)
or
mov
in
sbb
frstor
adc
mov
(bad)
jecxz
fcmovb
retf
pop
mov
dec
ret
pop
pop
addr16
out
inc
pop
mov
mov
and
outs
sti
add
pop
sbb
popa
dec
outs
fisttp
int3
pusha
cmp
fcmovnu
lds
dec
xlat
add
push
popa
mov
scas
push
rol
mov
mov
rcr
cmp
inc
cmp
adc
add
or
test
mov
mov
or
inc
mov
(bad)
xchg
out
fimul
lods
scas
jl
mov
int3
pop
xchg
in
sbb
xchg
or
imul
mov
fld
mov
shr
bts
or
outs
lahf
fwait
in
pushf
lea
mov
es
mov
mov
addr16
pop
jnp
fdivp
push
outs
xchg
mov
xchg
mov
dec
inc
sub
push
mov
sbb
js
in
adc
pop
sbb
pop
and
pop
mov
lods
ret
cld
mov
push
cli
cmp
ja
stos
inc
std
add
scas
sbb
inc
xor
mov
xchg
in
out
and
iret
mov
push
imul
sub
in
push
xchg
mov
loope
loop
pop
sbb
mov
pop
cld
out
fwait
pop
(bad)
jl
and
mov
gs
dec
sbb
pop
mov
mov
jbe
rol
sub
repnz
cmps
jle
push
mov
or
sbb
inc
int3
sbb
ds
mov
or
fcom
mov
popa
jecxz
repz
out
pop
(bad)
retf
test
xor
jle
jecxz
xlat
dec
out
call
push
dec
jb
into
mov
imul
mov
fld
inc
mov
xor
xor
xchg
xor
mov
sbb
cmp
outs
jle
sub
sub
js
pop
ja
or
mov
add
or
mov
push
jb
mov
cmp
test
pop
lods
sub
push
adc
dec
push
je
lock
shl
mul
retf
sar
loop
pop
mov
mov
add
jmp
jmp
jne
push
test
push
fdiv
cli
mov
jmp
in
(bad)
pop
les
in
std
nop
daa
xchg
xchg
fimul
cmp
je
jp
iret
shl
add
add
(bad)
mov
push
pop
shl
mov
and
cld
data16
jae
nop
sub
outs
test
ret
sub
test
sub
jo
jl
push
pop
in
adc
stc
inc
(bad)
cld
jg
test
sub
ds
scas
mov
or
mov
pop
cmps
daa
cmp
icebp
adc
xchg
xchg
adc
arpl
fistp
jecxz
in
xor
sbb
outs
sahf
sbb
xlat
(bad)
jne
sub
ret
mov
pop
mov
scas
jo
stc
or
rol
and
sub
ror
in
dec
fdiv
mov
dec
dec
cmc
pop
push
das
loop
(bad)
out
mov
xchg
add
fdivr
add
repz
add
leave
stos
jnp
pop
ins
mov
jg
and
ds
jnp
adc
cmps
ret
xlat
adc
dec
xor
cmp
pop
lea
pusha
test
aam
dec
mov
sub
in
adc
clc
mov
out
mov
call
cmps
push
lods
cmps
call
lea
je
mov
mov
pop
popf
stos
push
xor
sub
aas
ja
xor
sub
popa
sbb
int3
iret
stos
in
mov
call
pop
hlt
jmp
scas
jp
arpl
jge
cli
in
mov
es
xchg
test
xchg
(bad)
mov
pusha
mov
sbb
sub
push
inc
adc
repnz
movs
ror
or
inc
jns
(bad)
in
jnp
ins
cmc
jo
cdq
dec
xchg
adc
test
cdq
pop
cmc
std
adc
movs
push
test
push
pop
aam
out
push
mov
fisttp
inc
dec
cdq
pop
popa
cmp
out
push
mov
aad
sbb
ret
out
(bad)
jno
sbb
mov
(bad)
xlat
or
xchg
jo
xor
in
pop
outs
cld
ret
push
add
test
xchg
dec
out
adc
push
sbb
retf
(bad)
dec
push
(bad)
sub
xchg
push
scas
aaa
sbb
(bad)
xchg
inc
pop
add
aaa
sub
adc
jbe
lods
sub
jnp
cmp
jg
adc
dec
jl
mov
mov
xchg
and
mov
xchg
sahf
dec
mulps
jmp
movs
mov
scas
ror
xchg
int
mov
ins
mov
fs
jp
push
or
sub
pushf
inc
sahf
mov
mov
mov
mov
push
jns
xchg
and
movs
pop
push
in
(bad)
cmp
ret
inc
addr16
jecxz
pop
(bad)
push
ins
jg
rcr
nop
in
pop
popa
inc
pop
mov
xchg
and
nop
mov
mov
inc
mov
sbb
repnz
ja
shr
and
jmp
xchg
in
loopne
cli
pop
dec
jl
jnp
sub
mov
and
mov
dec
sbb
inc
lahf
and
mov
cwde
popa
or
sbb
add
lods
sub
mov
cmp
mov
and
mov
xadd
push
movs
js
aam
cmps
dec
sbb
cmp
fimul
cmp
mov
mov
and
push
add
dec
fisttp
ins
int
mov
dec
inc
push
xor
xchg
(bad)
xchg
jns
push
mov
fistp
aam
sbb
mov
out
inc
shl
mov
mov
ret
xor
xor
sub
xor
sub
ret
lods
lea
sub
in
inc
dec
pop
mov
push
ds
jns
mov
ret
movs
sbb
in
xchg
outs
xchg
and
jl
mov
jle
add
es
cmp
mov
ins
inc
jbe
aas
out
(bad)
dec
and
retf
cmp
mov
xchg
loopne
arpl
sub
das
pop
je
pop
(bad)
and
ss
(bad)
bound
jecxz
cli
xlat
adc
dec
jge
or
push
and
cwde
cmp
sub
stos
(bad)
gs
pushf
mov
jne
out
jecxz
push
shr
mov
mov
mov
aad
and
shl
aas
inc
pusha
pusha
or
ins
rcr
gs
cs
push
push
mov
adc
mov
les
test
lock
mov
je
jne
sbb
outs
jmp
xchg
rcr
hlt
cmp
lahf
push
adc
shl
jmp
cmp
scas
outs
mov
(bad)
cld
outs
clc
mov
adc
sbb
(bad)
lgs
lds
sbb
pusha
shl
push
jmp
xchg
imul
cmp
push
gs
ss
repz
adc
aam
cmp
shr
inc
sahf
cmp
add
div
imul
add
cmps
js
aaa
jnp
(bad)
inc
cs
in
adc
stos
jb
enter
jmp
mov
push
pop
inc
cld
push
fcom
shr
jl
mov
dec
and
and
outs
popa
jae
xchg
icebp
outs
mov
inc
fldenv
(bad)
pusha
pushf
pop
sbb
ds
mov
mov
add
fisttp
out
jge
add
mov
lods
hlt
jl
rcl
popf
cdq
inc
dec
sub
test
mov
sbb
xlat
out
popa
imul
fdivrp
mov
sahf
pop
jge
pushf
test
dec
loope
mov
push
mov
aas
xchg
fwait
xor
iret
scas
xor
mov
dec
fidiv
int
push
xor
adc
inc
cmp
push
sub
(bad)
mov
sbb
or
xchg
jb
(bad)
dec
test
mov
hlt
popa
push
mov
push
and
xchg
cdq
cli
inc
push
lods
mov
lock
test
addr16
mov
xchg
out
call
repz
inc
dec
mov
sar
adc
fidiv
nop
add
mov
cmp
out
into
mov
jmp
leave
jg
(bad)
shl
and
xor
fsub
pop
dec
add
and
or
pop
xchg
imul
mov
(bad)
ror
rcl
dec
scas
hlt
pop
std
jge
retf
or
(bad)
mov
adc
jno
and
or
rcr
xchg
push
cmc
mov
dec
mov
add
sub
popf
pop
push
adc
sub
mov
push
div
push
adc
(bad)
cwde
push
es
jb
aad
xchg
mov
pop
inc
arpl
inc
imul
test
jnp
retf
loop
xchg
mov
adc
or
imul
push
in
inc
(bad)
jle
jg
inc
imul
xor
clc
stos
stos
mov
jg
jae
and
xor
mov
xor
jmp
push
fdivr
push
and
fiadd
popa
xchg
pusha
sbb
sbb
push
clc
xor
in
fst
test
xchg
mov
clc
inc
std
mov
gs
cmp
cs
outs
or
out
scas
fs
add
pop
sbb
sub
adc
arpl
(bad)
jmp
xchg
shr
fadd
sub
pop
out
in
jmp
(bad)
stos
outs
call
pusha
icebp
icebp
or
aaa
jp
xor
(bad)
enter
retf
imul
xchg
push
xchg
xchg
int3
pop
in
aas
gs
in
nop
dec
sub
rol
adc
push
cli
test
mov
es
sbb
mov
mov
and
xchg
retf
cdq
in
rcr
inc
das
in
dec
fst
mov
inc
jae
clc
cmp
ins
out
sbb
jno
push
add
movs
mov
cs
fidivr
in
aas
jo
cmp
push
in
shr
mov
fldenv
cmps
dec
(bad)
das
arpl
xor
mov
daa
dec
push
dec
push
loop
sub
pop
cmp
sub
push
inc
mov
(bad)
loope
pop
dec
js
mov
mov
sbb
int
add
dec
inc
jns
push
or
mov
ret
fwait
je
xor
int
stos
and
scas
call
cmps
es
push
aas
push
inc
push
fisub
push
fnsave
lea
(bad)
retf
sub
mov
dec
shr
inc
xchg
xchg
push
sbb
push
mov
mov
push
in
xchg
mov
(bad)
jg
mov
fs
cmp
jno
sbb
inc
stc
iret
mov
call
dec
andps
ja
and
mov
ret
nop
sti
sub
xchg
shr
pop
into
je
imul
shl
jl
mov
rcl
jne
xchg
idiv
cmp
(bad)
in
scas
outs
ss
dec
jbe
(bad)
repz
sbb
cli
pop
xor
leave
popa
dec
mov
push
add
or
loopne
sub
mov
mov
pop
xchg
push
mov
mov
push
adc
(bad)
mov
jno
pushf
cdq
jg
pushf
test
in
repnz
lea
xor
call
or
fwait
test
push
inc
cmp
mov
sbb
jecxz
inc
ja
pop
push
push
sub
sbb
sbb
scas
cs
jb
push
iret
adc
jno
retf
sub
adc
inc
push
jne
mov
mov
mov
fwait
shr
mov
mov
pusha
stos
loopne
repnz
mov
popf
xchg
cld
in
pop
sub
push
(bad)
cli
data16
not
loope
fs
repz
out
(bad)
pop
sub
bound
jo
je
ret
jmp
int
push
in
in
adc
jmp
stos
(bad)
call
xor
int
inc
mov
mov
sbb
stc
int
dec
and
icebp
ja
ss
xor
shl
nop
rol
mov
lods
aas
xor
sbb
push
fcom
call
jno
adc
push
mov
push
xchg
push
push
pop
xchg
sub
mov
inc
sub
ds
and
jo
push
jg
rcl
shl
clc
push
sub
aaa
add
(bad)
and
xchg
out
shl
mov
xor
cdq
cmps
inc
jl
mov
repz
mov
dec
inc
loopne
aad
add
(bad)
cmc
inc
jle
xor
xchg
inc
cs
push
icebp
inc
rol
(bad)
rcr
daa
or
ins
cmp
sti
xchg
pop
loope
xchg
test
loop
popf
and
mov
int
nop
mov
pop
sub
(bad)
sub
call
mov
jp
stos
mul
or
push
(bad)
das
jo
out
icebp
outs
fnstenv
cmps
retf
sub
cmp
and
jp
xor
lss
xchg
les
or
push
dec
mov
or
icebp
nop
pop
push
and
pop
les
aaa
mov
mov
lods
dec
cmps
pop
or
call
or
test
nop
icebp
push
mov
add
dec
sub
jmp
xchg
jecxz
cs
lods
cmc
sbb
cli
(bad)
adc
xor
and
add
pop
jmp
jmp
mov
xchg
jbe
xor
xor
jl
stos
mov
lahf
push
add
sbb
stos
neg
(bad)
jecxz
cmps
cld
mov
pushf
xor
fadd
daa
inc
ret
shl
(bad)
adc
adc
fiadd
xchg
xor
jnp
imul
xor
push
push
xchg
loopne
and
bound
mov
outs
out
ror
call
imul
in
sub
mov
or
fist
pop
sub
cmps
xchg
mov
adc
and
and
rol
push
sbb
out
fs
jb
call
(bad)
pop
icebp
int
xor
and
mov
aam
sar
test
(bad)
popf
jbe
mov
repz
outs
xlat
retf
mov
xor
pop
mov
inc
ins
test
outs
xchg
rol
push
out
add
mov
mov
fnstsw
inc
or
(bad)
cmp
sbb
icebp
(bad)
cli
add
sub
das
ds
shl
inc
inc
hlt
xor
ror
shl
fisub
loopne
sbb
gs
mov
sub
data16
sbb
push
dec
sbb
enter
push
mov
lods
lock
leave
or
inc
enter
jno
mov
call
(bad)
push
das
stos
aad
nop
mov
popf
adc
bound
pop
shl
stos
lods
popa
pop
retf
mov
cmc
ror
popf
jns
ss
adc
(bad)
loopne
inc
mov
inc
rcr
mov
push
je
add
adc
clc
sub
mov
fsubr
fsubp
mov
scas
sbb
sub
loopne
ds
cmp
fst
in
lods
mov
fsubrp
in
mov
(bad)
xor
mov
xor
pop
and
fst
loope
pop
sub
repz
xchg
hlt
icebp
and
aam
int3
(bad)
retf
sub
mov
xchg
cmp
scas
push
push
das
inc
sahf
mov
xor
stc
mov
cdq
push
pop
jmp
inc
div
(bad)
push
sub
jne
jle
mov
aas
pop
rol
(bad)
sbb
adc
sub
in
xchg
outs
icebp
dec
or
push
dec
call
sbb
jnp
or
dec
popa
ins
mov
int3
sbb
xchg
data16
stc
test
sbb
outs
clc
xor
mov
sbb
out
push
call
(bad)
shr
pop
mov
inc
int
popf
pop
(bad)
ds
mov
loope
(bad)
loopne
pop
inc
js
dec
xchg
frstor
push
or
push
xchg
out
test
lock
inc
stc
retf
fnsave
xor
mov
(bad)
sub
sbb
mov
out
jns
pop
or
ins
outs
xchg
adc
mov
mov
push
and
mov
js
add
hlt
xor
push
sub
and
(bad)
pop
jnp
test
sahf
pop
mov
in
sti
sub
mov
or
pusha
jp
retf
lods
mov
not
sbb
les
mov
add
xor
cmc
neg
clc
xchg
jg
dec
xchg
addr16
outs
xchg
jmp
scas
jg
das
cmps
adc
fist
dec
cmp
mov
sub
int
dec
jmp
inc
mov
dec
cdq
mov
add
mov
inc
add
(bad)
xchg
retf
pop
xchg
mov
push
xor
(bad)
ins
fwait
lahf
les
xchg
imul
sar
adc
arpl
dec
stos
gs
leave
sbb
jmp
mov
xchg
jg
ror
cld
mov
imul
mov
pop
retf
daa
dec
mov
aam
dec
lds
icebp
ins
push
aaa
jecxz
mov
cdq
mov
mov
sub
aam
sub
sti
inc
in
and
stos
ss
mov
ins
pop
in
mov
adc
cmp
rcl
aaa
mov
loope
cdq
push
add
loop
int3
xchg
js
mov
and
mov
lock
mov
dec
aaa
xchg
or
jmp
inc
gs
xchg
ret
cmc
fbstp
or
je
mov
ds
jmp
and
push
mov
push
loope
lods
mov
std
int3
add
scas
fcom
dec
mov
adc
imul
aam
inc
jmp
adc
sub
jae
jmp
and
mov
inc
outs
push
cdq
inc
xor
les
add
pop
xchg
inc
mov
repz
repz
fwait
cdq
add
fsub
jne
mov
jbe
adc
inc
adc
call
and
mov
sub
sahf
push
mov
inc
inc
dec
lods
mov
call
mov
popa
or
or
sti
cs
mov
repz
and
mov
sbb
pop
retf
or
and
shl
out
xchg
push
pop
js
pop
xor
ins
test
inc
fcmovbe
adc
dec
mov
dec
outs
add
push
(bad)
cmps
sub
sbb
popa
les
test
adc
push
pushf
das
cmp
ret
es
pop
hlt
scas
stc
xchg
adc
jmp
dec
aas
(bad)
mov
push
fstp
int3
jns
xchg
xor
push
aam
add
aad
out
in
pop
sbb
jl
push
xchg
retf
fisub
scas
gs
jbe
popa
jmp
repz
aam
xor
into
stos
repz
imul
cmc
clc
or
loope
push
adc
in
inc
mov
inc
fcom
mov
jno
add
stc
mov
cmps
ja
jmp
xchg
jl
inc
and
push
dec
(bad)
movhlps
hlt
pop
call
pop
push
aas
stos
push
sahf
lods
mov
scas
dec
adc
jo
int
fistp
ret
cmp
xchg
cdq
fistp
cmps
sub
mov
fld
pushf
sub
das
movs
in
xchg
cmp
pop
mov
and
pop
mov
(bad)
enter
bound
daa
cmp
fdivrp
daa
ret
adc
scas
adc
bnd
jno
arpl
dec
lods
mov
fistp
xor
jecxz
jge
adc
ds
out
push
out
out
mov
cli
mov
retf
sbb
dec
jl
add
push
and
xchg
in
jnp
pop
daa
pcmpgtb
or
cmp
jno
push
jbe
mov
fiadd
out
pushf
gs
mov
fdiv
xchg
test
jae
jne
test
movs
sub
ins
xchg
xchg
out
aam
inc
sbb
(bad)
jnp
and
jecxz
sti
pop
jmp
outs
sti
xlat
push
shr
pop
loope
sbb
rcr
or
outs
pop
mov
jle
push
dec
adc
xor
jae
repnz
into
mov
cld
sub
cld
lods
dec
sub
sti
cmc
and
cs
scas
mov
push
mov
inc
jp
in
sbb
ret
test
shr
or
pop
sbb
or
push
sbb
jns
jnp
sbb
jp
push
dec
push
pop
pusha
mov
dec
jns
popa
ds
dec
xor
jg
mov
shl
dec
(bad)
jno
push
dec
or
shl
repnz
ror
repnz
sbb
lds
and
push
ret
cld
add
retf
fldz
sbb
retf
add
push
fiadd
or
leavew
je
or
sub
add
mov
or
(bad)
ds
fld
loopne
fidiv
sbb
xor
or
arpl
inc
das
int3
pushf
dec
dec
(bad)
repnz
mov
popa
cmps
sub
dec
shl
and
movs
mov
nop
adc
jmp
neg
xchg
inc
das
je
xchg
nop
aaa
std
xor
out
ja
sbb
adc
lods
xchg
lahf
xchg
jns
inc
mov
in
shl
jecxz
mov
mov
dec
jbe
fs
pop
pop
mov
jno
adc
popa
not
jnp
jg
mov
out
cmp
cmp
xchg
ins
sub
and
das
mov
adc
jg
mov
aam
mov
xor
dec
in
out
popa
arpl
sbb
fs
xchg
jo
cs
push
test
sbb
(bad)
xlat
faddp
jb
sbb
scas
dec
int3
aam
outs
add
xlat
clc
or
jae
xlat
(bad)
mul
xchg
push
sbb
mov
adc
cs
cld
xor
sbb
xchg
repnz
mov
retf
push
inc
pop
and
adc
mov
inc
in
dec
fist
inc
inc
lds
add
stos
push
push
sub
and
adc
xchg
std
cmp
mov
lock
pop
fidiv
push
jl
jnp
inc
or
ret
cmp
js
sbb
push
dec
jbe
dec
mov
ins
push
sahf
sub
add
rep
popf
push
sub
jne
aam
sub
test
lods
push
jecxz
icebp
cmp
mov
call
cld
aam
test
(bad)
mov
cmp
fldcw
and
push
dec
aaa
jp
pop
pop
movs
stc
daa
mov
pop
jge
out
sub
mov
pop
sub
sbb
and
inc
mov
push
and
mov
push
ret
test
mov
ficomp
fistp
and
dec
and
cvtpi2ps
call
xchg
pop
hlt
icebp
out
fistp
xor
add
or
sub
cwde
aad
push
loope
push
lock
rcr
xor
test
movs
dec
loop
xchg
fidiv
or
arpl
rcl
(bad)
(bad)
jne
dec
dec
fwait
lahf
mov
xor
cmp
test
lahf
dec
ins
fisttp
or
and
push
dec
jnp
push
cmp
push
(bad)
jb
cld
div
mov
in
add
cmp
jmp
outs
xchg
and
jae
add
outs
aaa
mov
retf
pusha
retf
jns
nop
or
sub
jecxz
adc
sahf
daa
out
adc
repnz
int
inc
ins
mov
lahf
inc
pop
sub
dec
pop
add
mov
fstp
je
sub
adc
xchg
dec
inc
and
mov
and
in
aas
inc
cmp
xchg
aad
outs
stos
and
(bad)
enter
mov
(bad)
fsubr
mov
int
dec
cmps
test
stc
div
(bad)
aaa
cmp
(bad)
ss
addr16
in
retf
dec
int3
mov
adc
movs
cmps
(bad)
jmp
cmp
shl
in
push
sbb
inc
and
jl
fldln2
jo
push
cmc
sbb
mov
sbb
jnp
outs
es
and
add
sbb
xchg
sbb
xor
jo
pop
scas
and
mov
stc
jb
(bad)
jmp
mov
aaa
neg
jb
ret
add
sub
jmp
vpermt2b
sbb
push
inc
stos
sub
mov
inc
pop
add
clc
std
mov
stc
sub
dec
adc
(bad)
sbb
and
xchg
(bad)
dec
retf
je
mov
or
(bad)
and
call
iret
arpl
cli
jg
jbe
iret
jge
inc
outs
test
scas
stos
mov
mov
call
mov
or
and
or
stc
push
mov
fild
mov
fstp
shl
cmps
mov
sbb
mov
nop
clc
cmp
mov
xor
sub
add
jno
ins
jge
ja
pusha
or
cmp
popf
call
jo
push
or
or
mov
sbb
sub
ja
add
ins
fisubr
inc
sbb
ret
jmp
test
mov
loop
mov
cli
icebp
je
cmps
cmp
mov
mov
jle
sub
mov
adc
lods
stos
pop
les
and
inc
mov
fwait
int3
out
ficomp
cld
cs
call
cli
xchg
(bad)
retf
aad
push
(bad)
int
and
imul
jnp
and
inc
cmp
fsubp
sbb
cli
xor
jmp
hlt
pusha
arpl
or
adc
movs
stc
push
ds
adc
pop
sub
pop
popa
pop
ror
js
fidivr
add
jmp
iret
jo
ret
(bad)
fimul
mov
fwait
repz
cwde
pop
jbe
xchg
sti
push
rcl
add
push
enter
xor
lods
mov
cdq
loop
and
xlat
mov
in
mov
les
loope
ins
in
jg
js
clc
and
push
push
loopne
sbb
push
gs
pop
xor
pop
lss
pop
das
jbe
and
push
or
lahf
cmp
pop
or
jg
fxch
rcl
inc
test
xchg
add
mov
test
outs
cli
lahf
nop
addr16
sub
sbb
cmc
mov
mov
adc
push
(bad)
jae
cmc
jnp
(bad)
ret
int
and
(bad)
jp
mov
(bad)
xlat
stos
icebp
xlat
xlat
stos
mov
and
stc
or
sbb
retf
ds
lock
jo
imul
arpl
mov
je
iret
shl
rcr
sbb
mov
push
cli
jb
sub
(bad)
sbb
cld
jo
(bad)
and
fmul
dec
imul
xchg
pop
mov
out
adc
xor
mov
sbb
cdq
mov
mov
sub
in
jns
jl
pop
pop
popa
in
data16
scas
imul
out
and
or
clc
stos
mov
add
mov
jg
xor
sub
dec
pop
add
adc
xor
(bad)
je
push
popa
xchg
push
gs
mov
pusha
je
inc
mov
cmp
pop
bound
dec
jne
sub
or
(bad)
outs
pusha
sahf
cmp
neg
out
xor
cs
inc
outs
sar
jge
(bad)
aas
retf
dec
scas
les
and
add
lock
or
lea
cmc
rol
cmp
sub
push
mov
mov
idiv
xchg
inc
sub
ret
push
mov
cwde
xor
inc
cwde
fdivrp
test
dec
jmp
mov
cmps
dec
popa
push
or
xlat
mov
ins
jle
in
pop
lock
sahf
sub
stc
call
mov
or
push
fidivr
mov
scas
outs
add
imul
in
retf
js
nop
mov
(bad)
cld
xor
(bad)
jbe
cwde
inc
jp
std
jns
xor
jmp
into
jbe
(bad)
lods
sti
seta
add
lods
xlat
sbb
ret
(bad)
dec
rcl
leave
jecxz
int3
lahf
mov
push
add
dec
or
scas
jmp
pop
je
or
fistp
sub
mov
mov
pop
cmp
jle
inc
nop
sbb
test
out
jcxz
repz
into
sbb
(bad)
cld
adc
sbb
not
jae
cwde
cdq
ds
mov
pushf
mov
pop
xchg
jno
leave
dec
jle
inc
shl
icebp
fwait
loopne
sti
stc
sub
and
(bad)
add
and
pop
imul
clc
adc
jmp
ficomp
dec
enter
inc
mov
cmp
pop
in
fsub
ret
lahf
std
push
push
iret
cmp
sbb
inc
pop
inc
mov
in
xor
std
data16
jg
retf
mov
dec
pusha
cmp
pop
xor
cmp
jp
or
fs
mov
imul
div
stos
sbb
cs
jne
inc
xchg
and
jno
jg
aaa
cld
xor
jle
and
lods
les
leave
test
stc
shl
cmc
(bad)
cmps
(bad)
xchg
mov
popf
aad
push
ret
dec
mov
not
mov
and
stos
jne
xlat
fstp
retf
xchg
sub
outs
and
daa
dec
jmp
xor
add
pop
ss
imul
push
push
mov
aas
add
pop
(bad)
clc
sub
ss
test
js
add
pop
repz
ins
fidiv
mov
in
repnz
push
scas
or
fiadd
inc
push
mov
dec
mov
mov
mov
add
aad
push
test
pushf
int
loop
rol
xchg
jb
dec
js
dec
les
mov
adc
sbb
add
sbb
push
rol
sbb
dec
pop
cmp
jp
dec
leave
pop
ficom
int3
mov
dec
fstp
into
xor
jae
xacquire
mov
xor
mov
add
das
dec
and
sub
(bad)
leave
in
mov
sar
shl
scas
in
pop
sbb
or
hlt
jb
enter
mov
stos
das
inc
dec
fs
and
loope
xor
inc
ffreep
push
adc
ret
mov
loopne
loopne
stos
mov
outs
sbb
in
in
aam
lock
imul
repz
out
dec
stos
xchg
jbe
add
cli
mov
enter
lea
(bad)
in
cmp
pop
cwde
fcom
ja
mov
fisub
jg
mov
int
das
div
int3
pop
scas
mov
cli
add
addr16
(bad)
mov
lock
jecxz
nop
sub
inc
cmps
add
out
std
jle
outs
sbb
fisub
lock
or
pop
ret
scas
jbe
(bad)
fist
call
fdiv
outs
fldpi
ja
dec
imul
sub
sbb
jp
les
dec
sub
in
pop
dec
pop
inc
cmp
jp
js
ins
mov
mov
in
enter
(bad)
jp
xchg
gs
in
adc
mov
movs
jge
fild
mov
lods
js
ror
nop
scas
push
mov
ins
jle
scas
out
sub
cmp
inc
into
imul
(bad)
enter
mov
or
or
sahf
inc
bound
mov
(bad)
jp
scas
sbb
xchg
call
mov
push
xchg
cmp
mov
fadd
dec
inc
xchg
sub
add
popf
add
sub
sub
xchg
jg
outs
into
fldcw
xchg
pop
test
stc
data16
dec
xchg
leave
in
retf
inc
sub
xor
imul
xchg
ins
ja
in
nop
aad
ret
ret
mov
cld
out
lds
int
and
push
pop
loop
cld
arpl
push
and
(bad)
xor
add
retf
sbb
nop
jmp
cld
mov
outs
or
jl
lods
ss
fs
cdq
std
mov
bound
and
stc
push
scas
sbb
pop
pop
lock
loopne
pusha
fild
jg
lods
cmp
xchg
sbb
std
xchg
xchg
jle
xor
mov
mov
cmps
bound
xchg
sub
test
mov
adc
enter
xor
popf
sti
sub
push
or
ret
rcl
out
out
pushf
push
test
dec
sub
rcr
cmp
ins
test
sub
inc
or
cmps
and
or
sahf
iret
mov
jno
inc
out
mov
sti
add
xor
mov
popf
push
pop
repz
or
or
jle
cmp
call
push
std
ss
test
sbb
test
cli
popf
jns
aaa
inc
cmp
arpl
add
sub
xor
cmps
dec
dec
mov
sub
sbb
cmp
xor
repz
out
sub
sub
sbb
repz
dec
and
add
push
(bad)
test
sbb
mov
jb
lock
dec
push
std
pop
mov
test
jge
sahf
sub
fwait
ins
sub
pop
ins
dec
dec
or
mov
add
ja
sub
push
scas
mov
jbe
or
pop
popa
shl
sbb
jmp
or
clc
retf
and
fst
mov
pop
push
(bad)
test
cs
mov
add
mov
xor
and
test
jp
mov
cwde
dec
mov
(bad)
mov
mov
xchg
cmp
outs
push
pusha
fstp
add
addr16
cmp
push
in
add
or
dec
cwde
adc
inc
mov
in
xor
pop
fadd
mov
add
dec
cmp
(bad)
jb
ds
pop
(bad)
xchg
cwde
mov
sar
pop
jg
adc
and
or
add
cli
js
ret
repnz
jl
sbb
ins
ja
mov
fnsave
(bad)
cmps
jno
push
push
cmp
or
jnp
pop
jne
push
dec
jmp
inc
stos
lods
mov
jmp
fsubrp
jo
mov
or
jno
and
xchg
cdq
fcom
dec
lds
sbb
mov
add
mov
ja
mov
mov
push
xchg
ret
fld
jecxz
shl
push
sub
repz
sub
push
sub
cmp
loop
cmp
mov
jmp
adc
jno
out
daa
pushf
cld
in
sysret
push
and
iret
jge
jge
pop
inc
nop
iret
adc
push
jg
scas
add
cmps
and
adc
cmp
lahf
cmp
out
ror
repnz
imul
sbb
sar
dec
ja
mov
push
cld
scas
mov
push
mov
add
pop
cmp
fld
xchg
add
fdecstp
in
mov
(bad)
xor
icebp
adc
addr16
cli
ret
leave
push
ror
enter
lock
cmp
xchg
adc
es
outs
(bad)
std
dec
(bad)
inc
xor
jbe
add
jl
cmp
push
dec
pop
loopne
mov
das
xor
stos
xchg
adc
push
sbb
inc
cmp
inc
cmp
and
pop
inc
aad
or
daa
mov
and
or
add
jg
adc
jge
and
sbb
mov
enter
xchg
mov
les
pop
inc
shl
adc
push
pop
sub
mov
mov
fsubrp
mov
cmp
mov
ins
ins
iret
pop
in
aaa
loope
les
aaa
jb
mov
push
mov
jecxz
ret
fistp
jp
mov
imul
popa
loope
ds
test
out
pushf
add
shl
cmc
jmp
and
loopne
jbe
mov
dec
jbe
xchg
xchg
jl
push
cmps
pusha
(bad)
push
and
mov
arpl
and
mov
ins
jae
loopne
shr
ins
hlt
data16
(bad)
mov
cdq
jne
aaa
and
out
inc
sub
clc
sar
pop
aas
pop
sub
icebp
(bad)
fmul
pop
and
loop
rcr
repnz
mov
fdecstp
aaa
jne
cmp
ins
inc
add
es
add
cmp
lds
les
dec
shr
mov
aaa
repz
test
mov
or
in
push
enter
dec
push
test
loope
inc
sub
adc
mov
mov
test
shl
dec
dec
cld
mov
push
dec
nop
dec
xor
push
(bad)
push
or
dec
(bad)
movs
sub
mov
adc
push
mov
icebp
aas
xchg
ins
fcmove
ja
add
push
mov
push
xchg
sahf
bound
out
mov
lds
add
cmp
jmp
adc
movs
emms
sub
inc
out
xor
push
jb
repnz
shl
out
jb
mov
aas
xor
sub
mov
dec
mov
push
(bad)
retf
or
mov
sub
mov
sub
in
cmps
or
aad
fiadd
cmps
test
push
mov
cs
adc
pop
jno
call
cwde
pop
mov
push
iret
cwde
xchg
mov
das
pop
cmps
or
jbe
mov
adc
(bad)
fcom
add
loop
mov
jno
cmc
dec
das
sbb
(bad)
jge
int
mov
jle
sub
push
arpl
pushf
popf
sbb
das
cmp
lds
jp
pop
into
add
ret
or
dec
aam
or
mov
push
cld
inc
cmps
jno
(bad)
push
cmc
into
inc
push
test
je
mov
imul
imul
iret
mov
inc
add
ins
cmc
mov
pusha
das
sbb
inc
pop
rcl
push
adc
loop
ss
std
push
jl
leave
push
and
or
push
mov
mov
pop
imul
neg
dec
dec
xor
push
ja
cld
push
dec
div
jle
cmp
and
fmul
not
or
xchg
(bad)
retf
or
loopne
(bad)
loopne
out
cmc
jnp
out
mov
(bad)
loope
adc
xor
jb
out
pushf
(bad)
xchg
rcr
jg
jb
into
cmps
sti
repz
adc
push
scas
jae
lds
es
mov
test
movs
jbe
adc
mov
mul
test
popa
pop
(bad)
lock
and
inc
inc
test
adc
inc
adc
loopne
and
cmp
mov
cmp
sub
xor
xor
pop
aad
loop
cmc
sbb
rcr
mov
hlt
(bad)
repnz
push
jno
adc
int3
or
adc
inc
and
xchg
push
fisub
scas
inc
mov
jns
mov
mov
aam
in
test
and
xchg
in
imul
add
sub
xor
xor
and
and
std
jmp
mov
les
test
sti
cmp
popf
test
stos
popf
in
addr16
sub
mov
push
arpl
cmp
popf
frstor
aad
push
call
pop
std
outs
leave
jno
inc
push
sar
idiv
cld
out
jns
dec
lock
repz
xchg
aaa
cld
mov
sub
sub
mov
gs
call
add
xchg
xor
pop
push
mov
outs
je
sub
mov
push
xor
cmp
cdq
push
cmp
arpl
or
lds
mov
sbb
push
(bad)
call
mov
jo
sub
call
push
sub
mov
xor
(bad)
jmp
inc
mov
cmc
std
add
dec
neg
inc
ins
cmpxchg
(bad)
cmp
push
push
jp
cdq
xchg
jbe
in
jns
test
sub
adc
mov
js
mov
add
mov
push
inc
and
xor
jnp
xchg
push
mov
(bad)
aas
lods
and
sti
adc
and
in
sar
fnstsw
add
lock
jp
xor
cld
xor
inc
push
mov
(bad)
test
inc
lods
retf
mov
sub
push
and
pop
mov
inc
mov
std
xrelease
mov
cmps
jmp
sbb
jae
pop
adc
test
xor
mov
out
fdivr
cmps
sub
xor
stc
mov
int
push
mov
mov
jge
fstp
jl
inc
movs
cmp
pop
mov
cwde
inc
addr16
mov
sbb
test
adc
out
(bad)
mov
aam
xchg
call
ja
mov
dec
mov
jmp
cmp
and
cmp
neg
xor
test
mov
jle
icebp
daa
lods
adc
push
add
cmps
fwait
dec
or
inc
cwde
xchg
sar
call
push
cmps
cdq
rol
dec
leave
push
test
shl
mov
in
push
fisub
dec
cmp
or
movs
repnz
cmp
rol
dec
pushf
mov
push
lock
(bad)
shl
movs
in
test
xchg
pushf
fdivr
xlat
es
sbb
movs
aam
xlat
in
fistp
jge
fwait
mov
sti
cmp
in
pop
and
js
scas
lods
mov
loop
adc
in
jb
ss
xor
leave
or
sub
dec
fcmovne
xor
cmp
adc
fdivr
adc
fmulp
push
fld
push
ins
punpcklbw
mov
push
add
int3
cli
cmp
dec
xchg
jle
mov
leave
shl
jg
and
dec
add
inc
jnp
sub
ret
scas
pop
pop
jmp
lods
jge
(bad)
mov
std
ins
bound
xchg
jmp
fild
mov
pop
bound
sub
js
pop
mov
rol
sub
out
add
push
addr16
adc
xchg
iret
mov
fs
inc
arpl
clc
dec
xlat
cmp
xor
adc
addr16
pushf
pop
shl
popf
es
mov
retf
test
rcr
fsub
sbb
int
pop
imul
out
scas
add
fimul
shr
jle
dec
in
jecxz
je
paddd
jge
cdq
leave
test
stc
adc
jb
test
pop
jecxz
stc
and
adc
cmp
xor
sahf
mov
dec
jbe
sbb
add
(bad)
popa
mov
into
call
dec
push
out
cmps
gs
pop
mov
fisub
add
scas
jge
dec
jge
inc
jbe
push
jge
icebp
xchg
add
cmp
mov
cmp
hlt
into
xor
rcl
rol
add
xor
jle
push
inc
adc
or
mov
shr
mov
in
jo
and
(bad)
jmp
rcr
and
into
sub
mov
aas
dec
in
out
push
adc
aaa
mov
lds
xor
in
mov
jb
mov
push
jnp
rol
imul
push
ret
push
repz
dec
(bad)
ins
test
adc
dec
aad
add
adc
lea
popf
test
push
stos
sub
xchg
jns
fdivrp
xor
mov
mov
loop
add
movs
retf
ins
and
xor
lock
push
scas
mov
cmp
out
in
stos
aas
inc
mov
push
out
pop
xchg
sub
xlat
cmp
clc
push
xchg
(bad)
in
dec
xchg
inc
popa
cs
jp
lods
fucomi
mov
fs
mov
mov
rol
jne
shl
popa
jno
and
sub
dec
repz
out
adc
jb
and
push
(bad)
fild
push
addr16
fwait
stos
rcl
dec
fidiv
les
daa
sub
gs
jl
nop
jecxz
(bad)
ret
mov
mov
test
stos
shl
mov
call
sbb
xchg
repnz
popf
ret
or
aad
rcpps
retf
xor
in
stos
push
adc
cwde
or
aaa
fidiv
pop
xchg
inc
mov
clc
in
ins
cld
call
jns
cdq
jmp
push
dec
mov
mov
xor
pushf
xchg
sbb
and
jne
mov
xchg
and
test
(bad)
push
fisubr
leave
adc
xchg
pop
and
push
enter
mov
adc
xor
aas
ds
call
adc
mov
clc
inc
int
cdq
popf
adc
popa
jo
sar
mov
pop
mov
std
inc
cvtpi2ps
rcr
out
iret
aas
gs
and
xchg
test
adc
adc
into
lods
push
int
inc
shr
into
adc
stc
sbb
cmp
cs
mov
mov
lods
xor
dec
jae
cmp
je
dec
cmp
mov
cmps
or
inc
ins
mov
mov
fwait
(bad)
and
fwait
loope
adc
add
leave
cwde
(bad)
mov
jno
inc
jo
les
(bad)
sbb
push
xor
mov
into
adc
sbb
pusha
les
cmp
(bad)
bound
push
and
push
inc
push
sub
dec
(bad)
push
mov
cli
movs
call
loope
sub
xchg
popf
mov
data16
add
sahf
test
outs
test
push
cdq
xchg
data16
out
jmp
push
xchg
mov
ins
scas
and
mov
cs
mov
movs
push
or
and
repnz
and
es
jmp
xlat
mov
inc
cli
rep
movs
loop
dec
push
and
pop
leave
ins
jmp
pop
sbb
lods
popf
sub
or
jno
mov
ss
in
and
rcr
imul
push
(bad)
repz
mov
xor
push
add
iret
xor
daa
sub
out
push
sub
sbb
inc
stos
mov
stos
dec
jo
hlt
int
in
dec
pushf
pop
(bad)
sti
mov
xchg
adc
iret
inc
call
or
mov
jne
push
lods
jg
stc
scas
dec
jl
inc
inc
mul
ja
jmp
and
leave
xchg
cmp
fild
mov
lea
inc
rcr
shl
mov
dec
(bad)
idiv
imul
test
and
mov
popa
add
cmc
es
sub
nop
mov
dec
xchg
sub
iret
leave
neg
jmp
repnz
push
mov
ret
ror
push
arpl
push
cwde
push
mov
cdq
cld
movs
jp
sahf
xor
and
cli
jecxz
cmp
xchg
sbb
mov
pop
sub
cld
add
dec
inc
cmps
frstpm(287
xchg
in
sbb
pop
retf
imul
pop
push
dec
ret
add
xlat
jge
clc
xchg
lods
mov
xchg
push
inc
jl
xor
or
outs
adc
or
jg
test
shl
pop
std
popa
out
pop
and
sub
mov
inc
test
repz
pop
push
add
adc
stos
leave
imul
outs
inc
jb
sub
into
sub
xchg
dec
jae
std
mov
test
and
push
mov
mov
add
pop
inc
sub
mov
int
fwait
cmc
and
daa
mov
sub
mov
clc
shl
popa
jo
das
pop
(bad)
je
dec
imul
xor
add
rol
mov
mov
add
pop
xchg
(bad)
inc
sbb
pop
sub
mov
pop
call
int3
cmp
fsub
push
repnz
sbb
jno
lods
iret
jae
mov
cli
rcl
sbb
sub
test
sub
ins
mov
(bad)
adc
push
push
fs
iret
in
test
xor
pop
in
xor
repnz
ficomp
cli
scas
mov
jb
cld
rol
es
jbe
cld
aas
mov
push
xchg
sub
mov
pop
loopne
(bad)
jne
sar
fcmovnbe
dec
push
push
pop
push
lock
sbb
xor
push
scas
dec
cmp
mov
xchg
jnp
nop
mov
mov
push
jb
mov
pop
push
push
call
dec
mov
aaa
leave
shl
arpl
dec
jge
cmc
and
stc
or
jle
test
sbb
jns
imul
adc
in
inc
cs
stc
fimul
test
or
fidivr
mov
adc
call
popa
mov
add
scas
movs
test
popf
mov
sub
in
dec
xchg
lds
shl
adc
fisubr
sub
add
fisttp
popa
jle
inc
movs
jge
push
repnz
loopne
jg
popf
jb
or
add
cmp
fwait
das
push
outs
scas
cmps
pusha
push
pop
pop
pop
idiv
test
dec
scas
shl
lods
inc
jne
imul
and
mov
sub
icebp
daa
xor
xor
pop
push
call
arpl
mov
imul
cld
xor
movs
add
hlt
xchg
cmp
stos
xchg
int3
dec
repnz
pop
movs
sti
gs
add
enter
xchg
leave
xchg
in
test
dec
loopne
xor
and
mul
xor
push
data16
xchg
push
movs
jecxz
and
inc
mov
(bad)
jbe
pop
pop
jmp
outs
cmp
outs
inc
(bad)
loop
jns
xor
js
movs
cmp
jb
(bad)
stc
pop
fwait
jmp
aaa
inc
jae
(bad)
cmp
or
inc
mov
mov
ror
daa
mov
mov
sbb
push
xchg
and
mov
test
mov
ja
mov
push
imul
sub
and
or
test
ror
dec
out
loop
push
mov
sub
dec
test
nop
jge
cmp
outs
xchg
sbb
cld
mov
inc
dec
mov
dec
mov
or
mov
clc
sahf
sar
xchg
xchg
test
shr
(bad)
push
fidiv
sub
push
cmp
inc
jmp
xchg
push
jb
sub
imul
retf
pop
popf
cmp
imul
stos
test
je
cmps
adc
lds
jne
sbb
mov
dec
addr16
adc
outs
(bad)
shl
or
mov
add
lock
hlt
or
daa
sub
xor
adc
(bad)
mov
jle
aas
fidiv
mov
sbb
scas
push
fild
pop
mov
test
dec
imul
movs
jbe
adc
int3
sub
sbb
ret
and
fistp
ss
sub
es
jne
je
mov
ins
jo
les
mov
or
cld
xchg
pop
pop
jecxz
retf
repnz
cmp
rcl
jg
xchg
test
stos
push
jmp
push
inc
cmc
imul
out
xchg
mov
(bad)
mov
xchg
inc
movs
shl
push
mov
(bad)
int
jp
adc
rcl
es
int3
test
and
adc
push
in
repnz
jmp
sbb
rol
cdq
add
into
xor
mov
or
imul
push
sub
add
mov
cmp
sbb
cwde
repnz
(bad)
cmps
frstor
fisttp
repnz
push
jl
in
call
mov
or
mov
add
not
mov
mov
sub
loopne
call
sti
mov
adc
dec
in
inc
dec
out
jl
in
sub
push
loop
test
mov
das
mov
mov
xor
mov
mov
dec
mov
jb
js
cmp
rsqrtps
push
(bad)
jmp
adc
dec
dec
aaa
out
mov
mov
adc
jg
out
mov
aam
neg
jg
shl
in
dec
repz
push
jne
loop
inc
outs
cld
inc
scas
mov
jo
fsubr
mov
push
jp
outs
outs
mov
mov
adc
pop
icebp
scas
enter
out
jb
pop
jae
mov
or
mov
fcomp
and
sub
lods
cmp
out
pop
cmp
mov
push
cmp
(bad)
ins
pop
jns
jb
pop
mov
dec
les
aaa
jmp
mov
mov
push
push
ret
and
fldcw
pusha
push
xchg
push
and
sub
aaa
test
imul
push
adc
pop
add
mov
pop
and
and
js
cmp
aam
je
(bad)
or
imul
add
and
(bad)
mov
mov
jl
dec
push
imul
add
loopne
cs
or
repnz
push
ficom
mov
sub
std
mov
repz
in
fsub
ja
sub
add
fimul
xchg
call
enter
aas
jns
push
adc
(bad)
mov
aaa
jmp
cdq
adc
out
inc
mov
pop
pop
sub
fsub
test
xor
and
popa
icebp
mov
cmp
push
pop
das
call
je
mov
jne
mov
dec
jp
popa
imul
inc
xchg
pop
in
scas
xchg
or
xlat
jno
mov
mov
(bad)
fidiv
cmp
jo
js
or
jbe
call
mov
or
stos
inc
out
ficom
jae
pop
ja
stos
xchg
loopne
enter
dec
fwait
leave
fstp
adc
lock
fistp
pop
cmp
xchg
rcl
mov
pop
out
jge
pop
add
adc
retf
out
(bad)
bound
mov
aas
lahf
mov
test
ss
pop
mov
popf
aam
(bad)
sbb
popa
(bad)
outs
adc
pop
ret
les
dec
int
mov
jns
or
repnz
mov
sahf
sbb
mov
xchg
sbb
pop
inc
mov
and
push
std
or
xor
jg
sub
call
jmp
cmp
outs
bound
add
inc
mov
sub
dec
push
mov
xchg
rcr
cmp
inc
in
lods
sub
pop
push
mov
or
into
sub
rol
pop
mov
add
inc
std
arpl
ret
pop
jecxz
std
outs
mov
cdq
xchg
(bad)
xchg
cmp
sub
inc
out
lahf
push
jno
es
movs
(bad)
ins
(bad)
push
xor
sub
pop
or
inc
test
test
pop
jb
aaa
and
push
mov
(bad)
out
jg
dec
addr16
fcmovne
sbb
dec
xlat
add
adc
cmc
je
mov
mov
xor
fsub
mov
push
jge
fs
cld
rcl
and
inc
pop
lods
adc
cmc
add
or
sub
int
test
and
adc
inc
int
bound
cmp
ss
shl
mov
imul
push
inc
nop
rcr
xchg
div
cwde
xchg
cmps
fwait
arpl
cmp
mov
push
outs
push
scas
mov
repnz
test
push
ins
fsubr
das
xchg
adc
sbb
mov
(bad)
(bad)
mov
or
gs
cld
add
sbb
pop
ins
push
inc
arpl
xchg
mov
inc
imul
or
cmp
data16
mov
mov
cmp
js
retf
adc
rol
loope
sub
adc
cmps
mov
inc
stos
sub
xchg
fucomip
sbb
jnp
cmp
(bad)
call
lock
mov
or
push
sub
aad
xor
sbb
push
mov
(bad)
outs
dec
mov
mov
repnz
test
loopne
jo
int
sahf
sub
cmc
inc
repz
stos
das
jb
lds
adc
lods
sub
test
cs
test
and
add
mov
cmps
inc
cmc
dec
cld
inc
fmul
test
add
dec
addr16
sub
mov
arpl
cmp
je
(bad)
cli
test
pop
(bad)
mov
repz
stos
pop
test
xchg
stos
cs
aaa
mov
adc
or
ins
pop
pop
jge
fbstp
sbb
inc
pop
mov
mov
jg
mov
sub
leave
mov
adc
xlat
mov
icebp
repz
pop
lds
out
push
lods
xlat
iret
fild
imul
dec
jle
ds
repz
sbb
adc
imul
push
repnz
shl
imul
ret
mov
iret
or
out
inc
add
or
and
jle
ja
sub
(bad)
sub
sub
xchg
fmulp
push
add
cmp
or
xchg
push
cld
lods
fs
xor
jo
(bad)
and
aaa
mov
pop
gs
add
or
xchg
adc
pop
fdivr
test
xor
add
or
aaa
and
push
and
sub
mov
cmp
sbb
mov
shl
mov
mov
(bad)
lea
dec
aaa
cwde
jecxz
test
dec
push
cmp
jecxz
inc
lods
cmp
jmp
xor
loope
in
jns
jnp
cmp
mov
inc
sub
mov
pusha
icebp
push
or
xlat
je
dec
jmp
sar
in
mov
pop
mov
or
sbb
mov
sub
aad
ret
push
dec
push
xlat
jae
mov
push
adc
dec
or
jmp
mov
dec
stc
les
mov
retf
shr
sbb
pop
ficom
inc
jmp
and
inc
jmp
add
rcl
daa
mov
dec
cmp
vpcmpgtd
push
xchg
mov
cmp
fldcw
pop
ficom
clc
les
cmps
adc
sbb
out
jmp
jno
(bad)
jecxz
push
push
daa
inc
jae
xchg
cmps
not
lods
jb
jge
cmp
and
call
gs
sub
int
rol
sub
cmps
int
out
inc
push
stc
xchg
bound
movs
sub
dec
fsub
sub
xor
call
rcl
mov
xor
stos
xchg
lds
movs
mov
repnz
aas
arpl
jmp
mov
inc
push
pop
and
xchg
jg
push
jmp
scas
adc
pop
mov
loop
jl
sar
movs
daa
imul
dec
pop
or
in
ins
jbe
popa
dec
out
pop
stos
or
fimul
cdq
test
jecxz
and
clc
call
les
pop
test
mov
ins
call
dec
in
or
or
push
inc
dec
jnp
call
sbb
jmp
push
in
jmp
jecxz
out
imul
jle
xchg
dec
loope
xor
movs
mul
add
sub
fidivr
jge
cld
test
sub
lahf
cmp
popf
je
or
inc
ror
ror
fst
cmp
lods
retf
push
rcl
shr
hlt
or
cmp
sti
fs
and
or
add
ret
xor
out
xchg
sub
add
lock
mov
or
dec
out
sub
jp
push
loopne
stc
stos
hlt
xor
popa
xchg
jmp
test
(bad)
mov
mov
push
cmc
jg
stc
loop
aad
scas
sub
adc
outs
mov
rcl
loope
das
sub
and
mov
mov
add
bound
add
int
jbe
dec
stos
int3
das
dec
cdq
addr16
pop
idiv
sub
nop
mov
sahf
fild
in
xchg
iret
mov
(bad)
mov
(bad)
gs
mov
test
jae
movs
cmp
imul
cdq
fldenv
shl
xor
dec
shr
mov
cmp
mov
push
test
test
mov
out
push
fmulp
dec
daa
arpl
in
add
xor
push
inc
(bad)
in
jg
cmp
fstp
out
sbb
add
and
add
bound
lahf
xchg
(bad)
dec
sub
std
pop
lds
fcom
push
aaa
cmps
sub
fild
fild
sub
popw
adc
mov
(bad)
leave
and
(bad)
into
push
dec
fbstp
movs
sub
push
sub
push
xchg
retf
push
xchg
in
inc
std
or
pop
ja
call
sub
jmp
mov
and
xor
pop
mov
push
pop
adc
mov
das
push
out
jno
fdivr
daa
pop
fmul
movs
add
push
add
xchg
xor
dec
pop
dec
sti
fisttp
ret
cmp
loopne
inc
adc
repnz
stos
(bad)
call
jl
adc
mov
pusha
cmp
imul
mov
sub
retf
or
repz
mov
jge
in
mul
hlt
rol
jge
or
and
lods
xchg
in
xchg
mov
aad
xchg
out
xchg
inc
push
xchg
add
das
int3
cmp
inc
cmc
test
sub
ret
iret
fneni(8087
cmp
inc
pop
sbb
sub
mov
jno
nop
fadd
aaa
pop
cmp
push
mov
inc
dec
sbb
mov
adc
adc
pusha
xchg
mov
addr16
add
mov
xchg
jne
out
mov
mov
cmps
mov
call
call
pop
mov
rol
enter
pop
enter
arpl
or
not
test
xchg
mov
test
inc
fidivr
jae
mov
aaa
and
test
or
cli
divps
into
cs
retf
jne
dec
ins
sti
cmp
pusha
inc
cmps
(bad)
out
je
in
shl
or
jno
adc
jne
mov
fdiv
ffree
loope
test
xchg
int3
cmp
push
(bad)
lods
or
jmp
ror
stos
stos
dec
shl
xor
shr
jo
xchg
nop
xor
popa
jo
and
std
out
aam
xor
push
sti
in
retf
lock
mov
mov
push
test
enter
cmp
xchg
in
push
call
inc
or
out
xchg
xchg
mov
push
(bad)
dec
mul
and
and
fcmovne
dec
xchg
inc
pop
sahf
neg
mov
and
imul
repnz
sub
(bad)
and
jle
mov
or
out
pop
(bad)
xor
add
daa
test
mov
(bad)
xchg
push
aad
outs
call
inc
ss
outs
les
ds
lock
bound
add
inc
xchg
call
push
sub
fsub
jecxz
and
std
adc
adc
mov
or
ss
add
dec
adc
mov
mov
dec
and
les
sbb
or
mov
int3
mov
jp
mov
pop
xchg
mov
stos
cvtdq2ps
loop
sbb
jmp
sub
cmp
gs
imul
iret
add
aam
jne
ror
jp
jno
dec
push
push
pop
sahf
pop
mov
cmps
mov
mov
cdq
loopne
xor
fstp
mov
aas
xor
popf
prefetchwt1
or
fiadd
push
add
inc
(bad)
cmc
push
aaa
je
sbb
iret
stos
mov
(bad)
in
mov
inc
fdiv
fwait
mov
jo
jnp
in
fadd
sbb
xchg
scas
mov
or
mov
lods
ins
sub
fld
inc
adc
or
(bad)
xor
or
and
jmp
add
sbb
mov
cmp
dec
test
dec
pop
cmps
int
jg
sub
xchg
jae
push
fcom
repnz
mov
and
aaa
mov
push
(bad)
fcom
mov
mov
loope
daa
jb
pop
or
adc
aas
retf
lahf
mov
mov
mov
rol
fs
fist
repz
shl
jns
and
jp
repz
cmp
pop
imul
inc
aaa
sub
in
add
xchg
cs
shl
push
inc
es
in
xchg
cmp
(bad)
rcl
jmp
arpl
adc
jne
ds
inc
prefetchw
xchg
leave
jle
mov
pop
push
ret
aas
in
dec
sub
jg
ror
mov
lahf
push
or
in
(bad)
leave
inc
stos
jbe
jb
or
xchg
loope
mov
fnstsw
jbe
jae
xchg
jmp
mov
fsubr
sbb
push
mov
xor
scas
push
stc
pop
adc
fld
jnp
and
adc
mov
push
add
imul
sbb
xchg
jp
cmps
lods
stos
cmp
mov
jae
das
retf
lods
sub
ins
clc
mov
mov
fs
mov
push
pop
test
xchg
mov
jbe
xor
or
inc
jne
mov
lods
bound
inc
arpl
ja
cmp
sub
daa
ror
push
mov
sti
pop
add
retf
add
cmps
xchg
dec
into
in
push
push
sub
jmp
adc
repnz
jno
je
and
mov
inc
cwde
shl
fcom
mov
mov
cld
cmp
jg
adc
mov
lock
jle
repnz
add
jp
mov
xchg
(bad)
inc
jnp
sbb
jmp
xor
push
mov
xchg
jns
lahf
(bad)
push
sub
xor
rol
retf
shr
or
pop
into
test
mov
loope
fdiv
sahf
fistp
ret
fist
sub
rcl
xor
inc
lahf
ds
fwait
and
add
(bad)
hlt
cmp
pop
jge
loop
ins
es
jmp
ds
jns
mov
test
pop
std
jmp
adc
loopne
push
push
sub
sub
stos
call
push
mov
inc
sub
popa
mov
sti
push
les
lods
test
lods
pop
sub
pop
loopne
int3
ss
and
push
je
inc
adc
mov
add
cmp
test
mov
push
sub
cmc
lods
in
loop
(bad)
or
in
xchg
icebp
mov
adc
enter
push
arpl
xor
int3
cmp
ss
push
sub
sti
xchg
xor
in
inc
xor
scas
push
add
cmp
aam
stc
test
(bad)
cmp
jl
(bad)
xchg
add
retf
arpl
cmc
mov
push
mov
or
fiadd
and
mov
mov
cmp
cmp
pusha
pop
xchg
(bad)
cmp
xor
sar
inc
loope
bound
loope
into
dec
cwde
mov
aam
cmp
fisubr
pop
out
repnz
inc
lds
cmp
push
xor
lds
jne
mov
stos
dec
mov
sub
jp
xchg
mov
movs
mov
inc
and
out
ins
mov
jae
pop
aas
push
lahf
ins
push
jns
out
sub
jle
imul
(bad)
inc
push
pusha
lds
aaa
loopne
mov
xor
lea
(bad)
jbe
ficomp
mov
pop
ficom
mov
or
test
xor
rcl
push
mov
and
pushf
les
sub
imul
stos
cld
aaa
sti
test
pop
dec
shl
mov
add
mov
xchg
mov
mov
enter
es
and
pop
or
das
ds
pop
cwde
cmps
test
sub
sbb
les
inc
sub
js
inc
dec
mov
nop
push
push
or
movs
cmp
add
mov
or
jg
or
fstp
outs
jle
addr16
ja
mov
xchg
lods
(bad)
push
xor
xchg
pop
mov
imul
pop
das
sbb
in
sar
xor
inc
inc
(bad)
xchg
loope
inc
addr16
cli
dec
mov
add
sub
(bad)
sub
mov
sbb
enter
shl
clc
test
call
mov
xchg
out
xchg
xchg
inc
cmp
or
(bad)
fadd
out
dec
or
das
pop
cs
and
sbb
out
or
(bad)
mov
pushf
js
test
and
leave
adc
sbb
test
push
aad
out
(bad)
xor
test
hlt
push
or
iret
sbb
arpl
cmp
push
dec
mov
mov
pop
xor
(bad)
xchg
mov
int3
cmp
mov
data16
pop
mov
and
lds
pushf
add
or
repz
mov
dec
sbb
fs
jb
push
movs
fs
sbb
out
xchg
lock
dec
cmp
jne
jmp
xor
aam
sbb
ins
std
cs
sbb
sti
dec
popa
adc
jp
jnp
rcl
ss
dec
aad
or
push
fcomip
pop
rcr
mov
mov
pop
and
loope
jo
lea
ret
(bad)
or
xor
add
int
mov
pop
ds
jmp
icebp
sub
xor
mov
std
xchg
sub
imul
push
push
xchg
retf
push
test
mov
dec
rcr
jl
xchg
std
shl
mov
mov
mov
inc
jnp
das
lahf
inc
in
jg
test
cmp
sbb
mov
int
inc
xor
sub
mov
xor
cmp
not
xchg
stos
btc
dec
cwde
mov
mov
cmps
pop
sub
lock
fcom
std
jle
jo
cld
xchg
(bad)
pop
sbb
(bad)
sbb
stc
sbb
xor
mov
xchg
sub
mov
out
dec
inc
gs
mov
sbb
movs
mov
in
mov
iret
sub
scas
cmps
push
hlt
aam
mov
cmc
jge
(bad)
aaa
pop
cmp
mov
cmc
mov
cmc
jae
ja
jmp
or
dec
xchg
and
jb
mov
add
aam
jo
(bad)
xor
ret
sub
mov
or
mov
enter
jns
inc
mov
cdq
and
or
outs
nop
stc
into
cmps
(bad)
xchg
jecxz
stos
out
xchg
cmps
xchg
lds
sub
popa
pop
ja
jne
or
int
mov
out
(bad)
int
mov
pop
ins
dec
xchg
imul
mov
aad
lahf
cmp
cmc
inc
adc
mov
xor
pop
add
lods
xor
es
inc
mov
adc
jg
fcom
jnp
stos
cmp
pop
pop
xor
popa
jp
iret
jne
mov
rcr
mov
pop
in
or
jns
adc
jnp
sahf
xchg
xor
cmp
cli
or
mov
inc
pusha
mov
adc
add
ficomp
mov
into
js
push
lods
pop
mov
inc
mov
imul
ss
sbb
xor
cli
jp
cmp
pop
arpl
and
lahf
(bad)
mov
imul
push
jnp
jb
lea
dec
es
xchg
xor
adc
cmp
push
(bad)
out
arpl
pusha
fwait
cmps
les
jo
repz
sub
test
adc
add
shl
cwde
mov
push
outs
lods
xchg
fld
call
into
cmp
loopne
jne
sub
jbe
jae
mov
adc
push
push
push
mov
daa
add
sbb
sub
jmp
jnp
cwde
ret
add
mov
push
fstp
out
(bad)
ss
adc
mov
push
cmp
adc
xor
test
into
mov
mov
sbb
jo
(bad)
fcom
leave
or
sub
dec
sub
fimul
rol
cmps
cwde
ds
adc
push
mov
mov
rcl
cmps
or
sti
out
or
mov
sahf
jns
and
mov
sbb
call
fnstenv
cmp
(bad)
icebp
jnp
or
test
jmp
mov
cmps
jp
jns
inc
jecxz
xlat
jmp
mov
mov
cmp
xchg
fs
imul
xor
fmul
xchg
or
ins
sbb
add
idiv
sub
cmp
pop
std
cmc
sbb
fcomp
(bad)
jl
push
push
lods
pop
xchg
enter
cmp
loope
inc
pusha
pop
jno
in
icebp
push
lea
test
popf
iret
pop
sub
push
cmps
push
sbb
js
jmp
(bad)
pop
icebp
cli
and
dec
and
inc
idiv
add
sbb
jmp
xchg
icebp
outs
xor
xchg
pusha
mov
pop
movs
xchg
xor
and
repz
rol
push
or
xor
scas
xor
mov
push
lahf
cwde
jnp
aas
mov
mov
mov
cmps
inc
sbb
stc
xchg
add
mov
mov
ficom
cmp
jbe
sub
rcr
mov
aas
pop
out
out
call
xor
xchg
fcom
out
or
jne
imul
lods
ret
int
or
xor
sbb
arpl
mov
and
int
sub
push
sar
pushf
sahf
cmp
jg
mov
pop
add
cmp
pop
cmc
push
les
jmp
retf
fdivr
call
jnp
(bad)
sbb
std
or
adc
push
test
push
out
js
sbb
aad
(bad)
mov
ds
test
pop
sbb
fs
push
(bad)
sub
jo
xchg
sbb
inc
enter
mov
mov
cmp
sub
pop
push
call
das
push
into
xor
jecxz
pop
pop
xor
and
ret
ins
mov
xchg
add
retf
add
adc
xchg
es
or
push
popf
stos
pop
cmp
and
sub
sti
(bad)
add
dec
mov
sar
test
mov
cmc
retf
adc
mov
cmp
jne
inc
jnp
xchg
daa
sub
es
jns
xor
fidiv
and
and
ds
leave
inc
outs
out
adc
xchg
iret
sbb
fwait
cmps
pop
dec
mov
inc
mov
sbb
(bad)
push
aam
or
and
in
out
hlt
sub
fsub
pop
sbb
jle
repz
mov
add
add
inc
lods
sub
and
in
ins
or
xor
ins
mov
jnp
dec
inc
and
dec
mov
bnd
jns
out
sub
add
movs
and
iret
jno
mov
jmp
mov
xchg
push
mov
cli
test
and
dec
movs
dec
outs
sub
mov
or
sub
push
ret
cmps
mov
lods
mov
aas
sub
lahf
jmp
mov
inc
clc
inc
push
mov
jp
xchg
retf
fs
cmp
cmp
dec
js
call
jecxz
mov
sub
jmp
scas
cmp
lea
rcr
mov
sar
inc
faddp
sub
xor
push
add
outs
dec
adc
mov
je
jbe
movs
or
dec
aaa
lds
mov
jno
das
sar
add
add
dec
ficom
call
inc
dec
sub
loope
mul
sbb
daa
jae
mov
scas
int3
adc
mov
sbb
loopne
sub
cdq
ror
xchg
mov
in
lahf
jmp
addr16
(bad)
mov
cmp
imul
xor
jae
cmps
xor
test
mov
nop
add
cmps
lods
pop
lods
call
test
mov
and
test
mov
stos
xchg
lods
ficom
imul
rcr
add
mov
jg
xchg
push
sti
xor
and
mov
mov
sbb
jnp
iret
adc
call
jbe
aas
lods
loopne
pop
sbb
leave
xchg
fadd
in
jecxz
push
(bad)
test
dec
adc
pop
pop
push
in
sub
xchg
test
lds
out
call
mov
(bad)
rcl
gs
and
ret
scas
fwait
mov
or
jae
mov
pop
pop
cld
call
jg
jnp
or
mov
adc
jae
dec
and
jmp
or
or
jb
pop
hlt
stos
mov
mov
aad
sbb
mov
inc
xchg
cmp
call
or
xor
fild
loop
sub
mov
xchg
mov
mov
cmp
test
call
or
ins
das
leave
adc
sti
outs
cmps
inc
mov
outs
mov
aad
leave
or
arpl
fmul
fisub
call
(bad)
leave
sbb
inc
repz
sbb
mov
mov
mov
jns
jnp
retf
push
jb
jp
pop
jg
lahf
lods
sti
stos
movs
pop
jg
(bad)
not
adc
cmps
cmp
and
mov
test
adc
cwde
ret
and
sub
add
jb
std
mov
(bad)
call
cld
dec
adc
dec
div
sar
pushf
xor
xor
and
into
add
adc
ss
test
push
int3
mov
sahf
push
xchg
cmp
stos
or
mov
(bad)
push
push
test
test
sub
jne
cmps
mov
add
dec
add
iret
(bad)
fmul
stc
pop
inc
xchg
test
xchg
fisub
jg
or
loop
out
xor
cmp
xor
pop
test
cmp
adc
mov
cmp
mov
and
xlat
or
add
lds
sub
sub
cmp
test
je
and
jae
mov
gs
sahf
shl
out
fidivr
mov
outs
cmc
out
repz
mov
lods
mov
add
aam
int
pop
push
aas
fld
dec
lock
mov
ret
fcomp
add
jle
outs
bound
(bad)
cmc
mov
push
dec
loope
icebp
sbb
adc
xchg
shl
shr
pop
adc
outs
scas
mov
aam
fild
mov
(bad)
and
mov
clc
cmp
retf
lods
pop
pop
xchg
ss
jmp
pop
and
ins
xor
mov
cld
dec
loopne
sub
or
cmp
inc
aaa
mov
adc
mov
adc
pop
pop
fild
add
sbb
mov
aaa
ror
pop
and
pop
js
ss
test
push
xchg
hlt
adc
sbb
aaa
cmp
mov
pop
arpl
sbb
ss
cmp
test
test
mov
pop
jecxz
push
in
cmp
les
adc
mov
inc
ss
cmp
xlat
out
xor
fiadd
sbb
(bad)
pop
int3
jnp
inc
pop
in
sub
xchg
xchg
ins
(bad)
imul
cmp
cli
mov
jge
inc
add
sub
xchg
(bad)
mov
sti
cmp
outs
sbb
fiadd
lds
push
mov
dec
das
imul
mov
or
inc
jecxz
imul
jae
movs
mov
xchg
imul
or
fdivp
js
loopne
mov
repnz
fs
jecxz
dec
inc
push
adc
mov
lahf
xor
stos
adc
cmp
xchg
push
retf
(bad)
sub
hlt
push
jg
mov
scas
jne
pop
jno
test
repz
mov
es
jns
cdq
adc
daa
or
mov
mov
cmp
push
pop
mov
pushf
push
es
in
int3
push
sub
js
aaa
adc
movs
jl
push
cmp
xchg
mov
retf
loopne
rcr
or
push
pop
mov
mov
mov
push
mov
sub
xor
cmp
push
ror
not
js
imul
push
frstor
pop
jns
cmc
pop
stc
inc
(bad)
jecxz
scas
cwde
and
inc
mov
lods
outs
outs
enterw
das
test
cmp
lds
outs
jl
rcl
pop
test
mov
out
aam
fst
imul
sub
mov
cmp
ins
dec
mov
push
sub
mov
shr
mov
outs
jnp
sub
movs
push
lods
jb
mov
adc
aas
xchg
imul
or
cwde
cmp
ins
xor
fwait
mov
mov
adc
dec
icebp
inc
in
mul
pop
sub
sub
shl
pushf
inc
loop
jo
cmp
adc
inc
je
jp
and
sbb
ss
aaa
popf
mov
push
mov
(bad)
jnp
mov
pop
cmp
or
cmp
xchg
hlt
int
or
cmps
inc
fisubr
scas
leave
cs
aas
pop
lahf
mov
cs
xchg
sub
pop
ins
cmp
xor
inc
das
xor
push
into
mov
inc
call
movs
sahf
cld
add
mov
into
push
(bad)
in
mov
test
sub
add
shl
outs
je
inc
inc
int
arpl
push
pushf
icebp
scas
sbb
inc
xor
bound
fdiv
jns
jo
repz
(bad)
xlat
xchg
inc
imul
inc
in
retf
jae
cmps
mov
mov
lea
fnstenv
push
and
arpl
mov
push
add
daa
push
mov
(bad)
add
ins
sahf
loop
inc
inc
in
jge
cld
loopne
ins
push
jle
fcom
ret
cmps
inc
mov
nop
add
mov
lahf
cmp
push
shl
stos
inc
xchg
inc
inc
ror
and
nop
mov
rcr
and
cmc
push
xlat
(bad)
cmps
sbb
enter
cmps
int3
push
sbb
sbb
mov
in
fmulp
inc
sbb
pop
sub
sbb
jb
imul
shr
sti
nop
test
into
inc
sbb
cdq
out
ds
addr16
cmp
rol
jb
xchg
ins
push
sti
ret
pop
pop
mov
maxps
dec
shl
into
add
push
mov
(bad)
fiadd
fs
(bad)
leave
adc
gs
mul
pop
sub
repnz
xor
imul
into
cdq
add
retf
mov
pop
pop
(bad)
push
arpl
pusha
nop
mov
sti
xchg
pop
adc
sub
adc
sbb
xchg
outs
imul
adc
mov
into
in
jmp
enter
add
adc
and
(bad)
lock
imul
pop
daa
mov
pop
rcr
mov
mov
adc
pushf
js
iret
xchg
test
imul
loop
xor
push
bnd
(bad)
(bad)
pushf
aas
adc
jge
cmp
sbb
sub
push
push
neg
je
xchg
push
inc
popa
sbb
xor
jmp
xchg
inc
scas
lea
stos
(bad)
aaa
in
cmc
mov
cli
push
inc
xor
or
push
test
sbb
mov
xlat
daa
xchg
or
jg
ficom
test
or
inc
aas
fisttp
in
dec
adc
jg
cmps
push
jle
add
hlt
cmp
ret
jno
in
or
mov
in
xchg
sti
xchg
pop
hlt
outs
std
adc
stos
mov
movs
xor
push
jne
jge
jge
dec
adc
popf
sbb
xchg
cmp
mov
mov
out
nop
push
push
cwde
imul
in
std
test
mov
mov
dec
pop
pop
(bad)
ins
adc
mov
sbb
int3
xchg
loopne
sti
and
add
xor
nop
xchg
fadd
(bad)
pop
cmc
adc
pop
cmp
icebp
or
push
mov
sub
jl
jg
ret
jns
movs
mov
test
cmp
int
xor
sbb
scas
(bad)
sub
rcr
out
inc
fs
ds
ins
ret
jg
xor
jmp
mov
(bad)
cmp
dec
xor
pop
daa
add
(bad)
xor
jbe
sub
xchg
xchg
mov
xlat
lods
(bad)
sbb
int3
test
das
push
dec
cmps
std
stc
or
jge
or
out
sbb
movs
fld
and
hlt
imul
push
mov
jmp
add
imul
cmc
push
xor
mov
mov
popf
xor
adc
lahf
dec
or
nop
or
loop
scas
gs
aaa
xchg
dec
outs
out
bound
xchg
sahf
sbb
jns
das
mov
mov
inc
fiadd
ins
mov
add
mov
fcom
jo
and
das
test
inc
repnz
(bad)
xlat
out
jmp
(bad)
push
add
mov
ins
push
fucomip
scas
or
mov
and
stos
pop
pop
inc
xchg
dec
sub
xchg
dec
xor
pop
out
mov
and
into
sahf
pusha
jg
(bad)
ror
loopne
sub
pcmpgtw
jmp
aas
nop
mov
add
in
add
ins
mov
jns
sub
xor
cmp
pop
mov
sub
inc
jae
retf
fild
neg
test
(bad)
xchg
inc
push
pop
cmp
add
jmp
repnz
push
into
xor
add
fnstcw
xchg
cmp
mov
shr
retf
mov
xor
les
pop
ins
in
xchg
mov
cmp
je
icebp
push
test
ss
imul
call
lea
loopne
sub
imul
cli
and
xchg
in
jb
inc
ffreep
dec
sub
or
sbb
mov
(bad)
pop
dec
out
enter
xor
aam
add
leave
jg
mov
into
xchg
bnd
cmp
xor
pop
push
int
outs
xchg
jecxz
xor
call
xlat
add
lods
xchg
in
push
cdq
xor
or
out
and
in
mov
sub
aaa
push
jae
xor
lds
ror
xor
ds
push
mov
pop
inc
lods
out
std
stos
jg
pop
jns
retf
das
push
mov
pop
fst
bound
in
pop
imul
xlat
out
cmps
ret
sbb
dec
scas
inc
cdq
pop
mov
icebp
mov
cmp
push
fcomp
mov
hlt
push
and
test
out
mov
inc
xor
xchg
jp
mov
sub
and
and
push
scas
ja
dec
jle
push
push
jmp
fsub
shl
(bad)
cld
call
mov
out
push
ins
sbb
jmp
cmc
in
pop
add
inc
lods
hlt
(bad)
cmp
aad
xchg
jb
movs
mov
jbe
push
mov
sub
xchg
mov
jb
std
lock
sbb
jae
sbb
stos
mov
sti
mov
test
in
call
int
or
jno
mov
cmp
div
lock
test
test
pop
out
ret
cdq
mov
bound
scas
imul
jb
(bad)
mov
repnz
cmp
push
(bad)
cs
shl
dec
les
inc
retf
cmp
adc
nop
(bad)
sti
jle
add
les
movs
stos
ret
mov
push
inc
cdq
or
and
or
repnz
add
inc
retf
cmp
pop
pop
sub
mov
and
xchg
adc
mov
xchg
fs
mov
cli
lock
mov
adc
jmp
movs
sbb
das
jl
scas
fnstsw
pop
sbb
sub
xchg
cmps
leave
adc
push
mov
dec
mov
add
js
popa
ins
cmp
dec
xchg
(bad)
neg
xchg
dec
je
push
sub
fisttp
pop
sub
sbb
xchg
inc
jbe
pop
movs
lahf
test
(bad)
call
and
bound
sub
adc
ss
cmp
xchg
aaa
pop
add
test
pushf
aad
scas
jae
out
adc
ja
movs
mov
fs
cmp
add
jmp
out
pop
pop
pop
adc
add
pop
ss
movs
cdq
icebp
lock
mov
jge
push
mov
push
xlat
aam
rol
xor
stos
mov
adc
add
cs
adc
inc
inc
sbb
cmp
popa
lock
loopne
add
js
cmps
cmp
cmp
jl
fist
add
aaa
inc
inc
(bad)
test
pop
pushf
mov
movs
jmp
shr
or
xchg
sub
mov
add
mov
and
xchg
mov
lock
push
push
and
clc
sbb
das
xlat
push
add
jmp
or
daa
push
mov
inc
fcom
xlat
cs
cmp
or
pop
mov
movs
mov
inc
dec
(bad)
xchg
dec
call
xor
push
xor
stos
add
fs
repz
int
inc
outs
mov
repz
push
in
ja
adc
sub
or
fprem
lds
dec
test
mov
jb
xchg
test
push
(bad)
fwait
ja
xor
adc
jl
mov
xor
xchg
enter
les
into
dec
shl
add
xchg
sti
aaa
xchg
sbb
in
stos
(bad)
stos
test
(bad)
pop
fmul
xchg
ds
xchg
sbb
(bad)
dec
or
jmp
mov
dec
sub
mov
inc
rcr
adc
jb
inc
adc
push
outs
dec
arpl
adc
int
inc
nop
iret
repnz
lds
mov
ins
pop
add
js
xchg
and
stos
out
and
push
shl
cmp
movs
and
add
retf
dec
mov
test
fld
test
or
lods
dec
adc
push
retf
or
js
(bad)
and
xchg
xor
pop
adc
adc
xchg
dec
(bad)
clc
add
addr16
stos
sub
fild
cwde
adc
xor
pop
test
or
data16
add
cdq
fidiv
fist
jmp
fadd
mov
mov
test
cmp
or
test
hlt
xchg
mov
push
repz
hlt
stos
sbb
test
and
mov
stos
(bad)
pop
mov
adc
pop
retf
push
sbb
push
pop
adc
loope
dec
xchg
jp
fidivr
mov
dec
xor
cmp
pop
into
xor
xchg
scas
sub
call
test
inc
mov
ins
mov
cmp
add
lahf
(bad)
dec
lds
sub
mov
sbb
das
sbb
dec
bound
in
xchg
repnz
mov
mov
fistp
dec
hlt
ror
adc
xor
sub
es
pop
xor
dec
or
cmp
pushf
test
dec
xchg
push
mov
mov
add
stc
dec
add
sar
in
inc
ss
pop
pushf
xchg
and
pop
aam
std
push
dec
sbb
adc
xchg
jbe
nop
mov
ret
mov
dec
cwde
loop
fcom
inc
push
fldlg2
mov
icebp
(bad)
mov
outs
push
and
sbb
push
sar
xor
repnz
out
xor
ds
and
cmp
push
cmovb
aaa
scas
xchg
aas
rcr
enter
fistp
xchg
xchg
repnz
test
jle
push
pop
ja
stos
mov
cld
fstp
ja
(bad)
fstp
in
daa
iret
push
push
je
mov
jl
xchg
xor
mov
loop
imul
inc
jge
sbb
loope
inc
and
mov
or
or
xor
push
add
pop
in
pop
in
out
ror
shl
or
repnz
sbb
jne
outs
dec
mov
std
cmc
mov
cld
adc
(bad)
sbb
mov
sbb
and
fwait
pop
push
test
pop
fs
jle
push
sbb
popf
and
jmp
iret
aaa
pop
loop
out
popf
cmp
sbb
add
jmp
stos
arpl
inc
sbb
das
in
inc
clc
pop
js
dec
jecxz
adc
cmps
nop
pop
gs
dec
idiv
(bad)
sbb
inc
push
test
data16
jmp
jp
(bad)
mov
adc
stos
mov
(bad)
cmp
dec
mov
into
pop
(bad)
jne
int3
aas
mov
inc
push
cld
js
sahf
inc
outs
dec
push
movs
push
jmp
ins
aas
inc
fld
pop
arpl
dec
lods
push
add
inc
fstp
(bad)
fst
test
jle
add
add
retf
shl
xor
mov
add
arpl
and
mov
jmp
loope
mov
addr16
stos
pop
or
pop
and
cmp
je
pop
sbb
pop
jae
outs
icebp
fist
out
aaa
fsub
sub
push
loop
dec
hlt
inc
loop
aad
enter
outs
mov
jg
xor
out
push
mov
and
stos
sub
dec
fdivr
fwait
dec
mov
imul
call
xchg
or
push
add
call
adc
push
sbb
xor
mov
or
xchg
inc
xchg
add
je
out
adc
and
rcl
outs
data16
cmp
cmovs
mov
jb
(bad)
jne
aad
into
rcr
cwde
jae
ds
outs
call
push
jecxz
mov
ret
sub
sbb
and
aas
or
mov
jb
push
repnz
fs
sub
dec
jecxz
test
pop
or
lahf
jns
in
mov
movs
jno
pop
jns
mov
xchg
mov
sbb
outs
loop
adc
retf
jp
xchg
neg
(bad)
dec
push
ret
(bad)
push
dec
call
and
imul
cdq
test
idiv
fcmovnbe
cmp
sar
jns
dec
into
je
mov
hlt
xor
daa
test
push
dec
mov
shl
cmc
dec
paddsw
push
push
nop
repnz
dec
jmp
add
inc
(bad)
fnsave
aam
and
loop
rol
gs
mov
rcl
bound
jbe
cmp
inc
(bad)
sub
lea
pop
jno
out
add
mov
jno
mov
call
sbb
enter
cld
les
cs
jge
les
mov
loop
push
ins
mov
cmp
jl
rcr
sub
push
or
das
mov
dec
mov
test
adc
in
pop
out
or
test
gs
dec
pusha
ins
jle
in
es
ret
loope
sbb
xchg
mov
sbb
lock
push
or
dec
(bad)
(bad)
in
std
jo
jmp
ret
mov
leave
ins
movs
outs
clc
dec
(bad)
xor
in
lods
addr16
push
shl
and
xchg
sub
xor
cmp
sub
sbb
cdq
dec
call
rcr
mov
jge
ret
int
xor
adc
loop
pop
aaa
push
sbb
fs
call
repnz
push
mov
hlt
and
mov
sbb
mov
dec
sbb
in
jnp
daa
and
stos
inc
(bad)
fmul
je
pinsrw
jp
or
jne
imul
inc
dec
mov
stos
pop
mov
shr
mov
jle
jns
mov
add
int3
push
sub
out
aaa
stos
lahf
je
in
stos
xchg
hlt
shl
repnz
in
test
adc
retf
cmp
jmp
sahf
out
or
aas
test
and
enter
push
or
loopne
dec
mov
xor
add
lea
repz
jbe
jmp
dec
pusha
pop
sbb
loope
push
add
mov
cmp
jg
xchg
loope
rcpps
xor
xor
clc
bound
stc
cmp
xor
mov
or
mov
and
and
xor
dec
nop
jno
inc
cmp
sbb
jno
xlat
pop
xchg
outs
test
mov
push
xchg
or
ror
call
out
and
loope
mov
pop
xor
sar
mov
cmp
cmps
rol
inc
sbb
loopne
mov
nop
int3
pop
sbb
sub
lods
fldenv
lods
push
push
stos
loopne
xor
jmp
cmp
xchg
dec
mov
ja
(bad)
xor
aas
cmp
dec
(bad)
dec
mov
sub
pop
sub
sub
or
cmc
loopne
add
enter
out
add
or
fisttp
addr16
and
push
ins
mov
sbb
push
xlat
(bad)
iret
(bad)
iret
and
inc
and
adc
xor
stc
jmp
add
mov
mov
fs
test
add
dec
mov
fsub
(bad)
cdq
sahf
cmp
mov
mov
and
xlat
xchg
jmp
loop
mov
jbe
cmp
mov
xchg
(bad)
and
icebp
push
xlat
stc
popa
scas
mov
xchg
pop
not
sti
icebp
push
retf
js
jecxz
popa
jp
inc
add
jb
(bad)
fld
push
mov
pop
test
mov
push
clc
dec
ins
xchg
xchg
pop
neg
pushf
cld
sbb
fwait
hlt
fbld
or
ins
or
mov
dec
scas
adc
int3
sub
pop
fucomip
movs
mov
es
test
test
push
mov
outs
mov
call
js
out
(bad)
hlt
out
mov
xor
inc
outs
jge
jmp
mov
dec
(bad)
ret
push
loope
adc
cdq
adc
loop
imul
sbb
jnp
sub
xchg
or
mov
lock
mov
movs
or
xor
lea
imul
cmp
xchg
inc
jb
mov
adc
dec
mov
pop
cli
lock
lahf
cwde
pop
dec
cmp
xor
test
mov
and
int
call
sbb
push
add
mov
xor
jo
lds
loope
mov
outs
scas
mov
mov
hlt
xchg
popa
and
add
adc
fsub
mov
(bad)
pop
push
sbb
popf
movs
or
int
jb
sbb
pusha
jp
sub
in
push
mov
or
dec
mov
pop
cmp
loop
or
push
jmp
pop
jb
mov
int
pop
stos
xor
fidivr
div
inc
cmp
xchg
and
mov
scas
inc
nop
mov
gs
retf
mov
mov
ins
jg
mov
out
dec
or
pop
imul
push
jmp
fisttp
inc
pop
jns
retf
imul
inc
into
or
loop
retf
test
adc
dec
inc
outs
mov
iret
push
sbb
fstp
pop
out
pop
dec
inc
inc
shl
or
imul
xchg
into
adc
mov
call
pop
pop
push
sub
pop
xor
xlat
or
imul
xor
adc
(bad)
xor
pop
scas
add
inc
xchg
jle
push
jbe
out
adc
lods
ret
xchg
(bad)
shl
add
xor
js
xchg
aam
inc
adc
out
xchg
dec
mov
movs
(bad)
and
lods
mov
jg
adc
pop
xchg
mov
test
aad
pusha
nop
sbb
fwait
add
retf
xor
sbb
leave
jmp
mov
(bad)
or
jae
or
aaa
push
push
or
das
sub
sub
cmp
(bad)
xchg
dec
cmp
or
cwde
adc
jg
push
jae
repz
mov
jb
xor
jb
ins
ss
aam
mov
push
adc
cmp
mov
add
(bad)
(bad)
data16
frstor
loopne
xchg
hlt
jg
pop
cwde
jle
mov
test
mov
outs
xchg
xchg
xchg
js
sub
out
sbb
rcr
push
mov
xchg
in
add
pushf
sti
cmp
fst
xlat
scas
and
and
int3
mov
ins
fwait
inc
aaa
cmp
pusha
jno
xor
cmp
arpl
cdq
sti
push
mov
jnp
dec
sbb
test
mov
movs
jg
sbb
outs
(bad)
jmp
cmc
cmovl
les
dec
inc
fist
push
test
dec
in
mov
rcl
popa
sbb
imul
ficom
or
cld
out
add
dec
push
sti
adc
push
jne
xchg
or
mov
cmp
and
xchg
cli
and
pop
in
call
aas
test
mov
test
imul
adc
xchg
aad
adc
add
sbb
dec
sub
shr
or
or
pop
jb
xor
cld
jg
or
and
ins
mov
pusha
sub
add
aam
popa
out
stc
mov
lods
pop
adc
fs
stos
jno
xchg
pop
dec
popf
mov
cmp
in
retf
add
adc
movs
test
push
(bad)
xor
add
pushf
adc
xchg
cmp
sbb
cmps
jge
mov
push
jbe
or
cmps
popa
out
data16
mov
jnp
sbb
rcr
xchg
cli
mov
movs
(bad)
repz
gs
jg
xchg
or
xor
bound
push
push
jo
in
dec
xor
stos
mov
lahf
dec
fcomp
sub
pop
xor
call
push
pop
fwait
dec
adc
data16
or
add
nop
repz
(bad)
or
jg
test
cmp
in
cmp
stos
pextrw
pushf
inc
and
gs
idiv
mov
aam
pop
outs
fadd
pusha
adc
mov
adc
xor
loop
shl
dec
xor
aas
cmp
add
mov
pop
stc
jmp
mov
sub
sub
fld
mov
into
add
add
add
pop
sbb
cmp
dec
aas
mov
or
mov
inc
out
pop
enter
add
xchg
mov
sbb
xlat
fs
inc
jbe
pop
xchg
mov
call
or
pop
push
jnp
aad
sahf
mov
lds
xchg
sbb
and
inc
bound
xchg
scas
in
xor
out
jl
je
mov
mov
push
sub
call
test
leave
not
mov
lds
mov
je
xor
lea
jle
arpl
ret
pusha
mov
mov
cmp
call
cmp
mov
cwde
inc
inc
sub
sbb
(bad)
shl
shr
sbb
fimul
inc
or
aaa
xchg
fcom
inc
retf
pop
sub
ficomp
aaa
aas
sub
int3
sbb
dec
xchg
ins
ret
pop
ss
mov
repnz
mov
or
inc
push
lahf
push
inc
cld
or
std
psubd
retf
push
mov
sbb
mov
jmp
dec
shl
into
(bad)
dec
popa
fs
and
daa
push
clc
jp
inc
pop
pop
inc
out
scas
les
clc
stos
loopne
jmp
cmp
mov
dec
loopne
cmps
xor
setbe
loope
lahf
fst
vpsrlw
mov
xchg
aas
retf
cmps
popf
fstp
jmp
dec
mov
add
jl
inc
fwait
ret
mov
in
sbb
pop
scas
inc
(bad)
or
ins
(bad)
push
xlat
shl
shl
push
xor
mov
repnz
push
pop
or
sbb
jno
mov
ins
mov
sub
in
std
mov
shr
jle
(bad)
fmulp
xchg
das
aad
gs
xor
adc
and
pop
sub
dec
adc
nop
push
add
lahf
push
pop
mov
stc
jne
cld
pushw
movs
mov
cli
or
hlt
fdivr
and
test
aad
stc
push
aaa
jg
inc
movq
jmp
loope
dec
push
(bad)
lock
and
xchg
add
ins
enter
adc
adc
not
mov
rcl
mov
icebp
retf
mov
mov
lahf
loop
xchg
mov
cmp
add
xor
rol
enter
inc
lahf
add
rcr
out
stos
(bad)
xchg
mov
xchg
pop
xchg
rol
ror
dec
pusha
cld
lea
pusha
add
repnz
mov
cmp
xchg
cli
iret
dec
and
jmp
adc
xor
xchg
mov
addr16
adc
cmp
out
test
imul
lock
movs
outs
jmp
jne
pop
outs
xchg
in
dec
out
jmp
pop
adc
jns
or
mov
ror
push
mov
jbe
inc
pushf
std
inc
sbb
sub
dec
fsub
cmps
xchg
xchg
test
sar
push
mov
mov
cmps
(bad)
mov
adc
xor
jbe
aam
push
test
neg
cwde
sbb
add
and
mov
(bad)
adc
outs
div
xor
xor
movs
adc
or
push
shl
rol
dec
xchg
pop
sbb
sbb
add
dec
test
clc
jbe
shl
enter
push
and
lods
inc
mov
jns
aas
lahf
mov
pop
in
inc
mov
loope
retf
test
pusha
sbb
sahf
sbb
adc
mov
in
jb
cmp
cmps
push
mov
cmp
cs
mov
cmp
and
or
jae
jge
xchg
add
les
mov
ret
jo
add
cmps
xchg
pop
pop
icebp
or
dec
push
adc
fsubp
cwde
mov
sbb
add
lahf
mov
mov
and
lea
ins
data16
retf
(bad)
mov
movs
les
mov
fcom
push
push
es
cdq
xchg
lea
fdivp
daa
adc
fwait
push
sbb
push
repz
ins
and
in
dec
bound
jne
int
mov
pop
imul
sub
mov
(bad)
out
mov
pushf
push
fild
in
or
std
xchg
repnz
scas
mov
mov
sub
stos
movs
cli
scas
cdq
adc
mov
jno
mov
pop
in
jg
pop
(bad)
pop
push
xchg
push
jb
cmps
xchg
aam
outs
bound
int3
push
cmp
ficom
xacquire
and
sbb
data16
and
mov
fldcw
adc
push
lock
mov
sub
lods
loope
ss
or
inc
lods
cmp
ins
dec
cmp
stos
mov
aad
mov
out
out
and
loop
retf
jmp
fldenv
mov
sbb
push
pop
mov
out
mov
(bad)
retf
add
sub
imul
retfw
daa
repnz
inc
jmp
jnp
xchg
pop
repz
sbb
adc
imul
fistp
shr
xchg
add
mov
xchg
jnp
mov
js
sub
adc
jecxz
call
cwde
mov
popa
and
and
and
in
cmp
and
je
sti
jecxz
dec
ror
shl
jne
aam
cli
cli
add
push
cmp
jmp
aas
int
sbb
mov
mov
cmp
test
or
inc
push
push
pop
mov
mov
rol
push
data16
and
adc
vandps
push
mov
xor
popf
mov
jmp
add
add
inc
inc
mov
jp
and
fnstsw
push
push
push
push
or
add
sbb
loope
pop
pop
sub
jbe
mov
ja
scas
idiv
(bad)
mov
lods
gs
popf
push
and
(bad)
xchg
out
lock
call
test
push
push
cwde
into
mov
pop
in
sub
ret
dec
test
jbe
(bad)
int3
push
outs
cmp
pop
sub
pop
fstp
inc
lock
fldz
xor
add
inc
sbb
xor
hlt
dec
iret
shl
iret
fcom
and
cmp
xlat
push
xchg
rcl
fwait
xor
dec
push
(bad)
ret
mov
outs
push
fsubrp
fstp
iret
aaa
mov
in
outs
stos
and
lock
jmp
xor
xor
and
mov
lods
or
pop
idiv
cmp
ds
add
mov
mov
cmp
inc
repz
jmp
loopne
mov
leave
aad
sbb
or
xchg
mov
jecxz
jmp
pop
mov
jno
fwait
xchg
pop
daa
cld
mov
call
aaa
mov
enter
(bad)
sbb
dec
sub
xchg
cmp
loope
add
xor
lods
mov
cmp
sub
lea
xor
dec
dec
loop
jo
jae
jmp
iret
mov
dec
loope
jecxz
pop
aam
jne
mov
push
adc
cmp
(bad)
pop
(bad)
push
mov
add
repnz
std
or
call
mov
jge
cmp
loopne
xor
mov
mov
out
inc
xchg
inc
rcl
arpl
in
mov
aad
sbb
es
shr
rcr
out
fist
jno
and
imul
div
dec
int
loop
std
stc
das
push
jmp
and
jecxz
push
out
movs
es
jmp
not
mov
push
inc
mov
dec
nop
stc
mov
sbb
(bad)
call
loopne
add
cmp
test
jl
jp
push
ret
add
hlt
aam
xchg
sbb
fwait
push
loop
and
add
sub
sbb
js
enter
call
push
(bad)
test
lahf
inc
ds
jbe
jecxz
xchg
hlt
inc
int3
sbb
pusha
mov
inc
mov
loop
dec
fwait
inc
movs
and
adc
out
or
call
popa
shr
push
jbe
shl
cmp
jmp
stos
mov
cmp
or
mov
rol
shl
jb
lods
mov
nop
dec
pop
pop
or
loope
fwait
(bad)
jp
test
shl
or
cmc
sub
sbb
inc
push
hlt
(bad)
sub
and
xchg
pop
xchg
das
stos
retw
xor
xlat
sbb
addr16
pop
sti
adc
lahf
ficomp
mov
je
call
cmp
call
jae
pop
xchg
cli
cmps
sub
and
xchg
push
test
xlat
stos
repnz
jle
sbb
xchg
ret
loop
gs
lock
loope
les
add
dec
xchg
add
xor
sbb
cmp
cld
movs
xchg
adc
retf
in
adc
inc
call
stos
stc
arpl
xor
adc
cmps
sub
fbstp
xchg
inc
ret
test
dec
or
in
xchg
in
mov
cmp
xor
push
aad
cld
cmps
dec
lods
adc
mov
test
and
aaa
loop
std
dec
jmp
dec
pop
ror
int
lahf
es
mov
jecxz
int
out
in
(bad)
shr
sbb
jmp
outs
cmp
ficom
jns
enter
or
bound
or
fistp
mov
jmp
out
out
jle
cmc
xor
call
mov
push
push
mov
dec
cld
inc
es
pop
sub
pusha
jp
dec
mov
stc
cli
push
imul
jle
scas
fucomp
mov
jbe
outs
xor
es
cli
adc
ins
dec
jns
lds
mov
and
inc
sbb
add
jae
repz
stc
icebp
inc
mov
or
nop
add
test
dec
mov
mov
lock
sti
cli
nop
push
lahf
gs
xchg
or
popf
inc
aam
xchg
push
sbb
(bad)
xlat
xlat
cmps
and
test
cmp
xor
adc
nop
mov
addr16
mov
or
push
or
sbb
scas
ins
(bad)
fcom
repz
lds
cmp
daa
mov
nop
adc
add
jns
xchg
mov
jge
ja
in
adc
cld
in
or
adc
push
idiv
jecxz
jmp
data16
adc
daa
mov
adc
xor
mov
add
mov
ss
call
xchg
jecxz
mov
in
pop
aam
(bad)
cld
adc
hlt
dec
adc
test
out
es
lods
in
imul
sahf
mov
add
adc
pop
js
or
xor
loope
aas
mov
cwde
out
sti
inc
add
fnstcw
ficom
rcr
and
xor
scas
cmps
icebp
into
jg
dec
jmp
xchg
jmp
and
xor
icebp
push
mov
adc
mov
popf
jae
test
call
jl
(bad)
arpl
icebp
rcr
dec
aad
ja
xchg
dec
test
pusha
sti
and
inc
outs
mov
js
inc
rol
push
dec
shl
and
mov
jp
inc
cli
(bad)
loop
push
fbstp
retf
aaa
test
jle
rol
fmul
add
test
adc
loope
add
add
mov
fcomp
into
jg
xor
test
sbb
push
push
pop
test
cmp
adc
cmp
mov
retf
psubusb
fistp
push
int
rol
daa
data16
mov
xchg
adc
cmp
arpl
cld
lods
adc
jbe
mov
cmps
movs
out
scas
scas
cmc
mov
aad
in
inc
inc
lods
mov
cmc
repnz
xrelease
(bad)
mov
imul
call
mov
(bad)
stc
pusha
push
stc
mov
xchg
call
call
adc
test
add
cli
dec
scas
(bad)
pop
movs
or
pop
movs
std
ins
(bad)
sti
scas
push
lahf
or
push
popa
xor
xchg
dec
call
mov
sub
jbe
js
hlt
mov
ret
adc
adc
js
jmp
xor
cmps
xchg
fwait
and
sahf
ins
jbe
or
or
jo
cli
pop
pusha
push
mov
imul
xor
dec
loope
dec
and
push
push
addr16
iret
hlt
pop
iret
push
std
retf
lods
in
add
shr
xor
jg
ret
dec
loop
loope
test
and
push
enter
outs
sub
mov
adc
sbb
jmp
jmp
add
push
fcomip
cmps
mov
add
ins
mov
stc
std
push
into
sub
sbb
retf
or
dec
rol
add
popa
psraw
add
mov
sahf
push
jmp
test
cmc
inc
leave
lahf
repz
add
fucomp
icebp
push
repz
push
pop
out
mov
cmp
ins
mov
shl
dec
mov
out
jmp
data16
adc
dec
jae
dec
cdq
out
aaa
out
or
cmp
std
les
jle
mov
(bad)
stc
scas
dec
xlat
dec
pop
fbld
loop
xchg
fisttp
jmp
neg
das
les
iret
xchg
sti
gs
fs
mov
cmps
outs
dec
jecxz
cmp
xor
mov
mov
jb
xor
aaa
lods
push
mov
xchg
scas
adc
cmp
aam
and
lock
in
ds
sub
lods
fimul
mov
imul
xor
mov
add
xor
adc
fcomp
push
jmp
pop
mov
mov
movs
mov
das
fcomp
push
fwait
adc
mov
out
pop
sub
lea
mov
lods
add
dec
sub
mov
add
sbb
xchg
test
jmp
(bad)
fcomp
mov
jbe
cmps
adc
outs
push
jge
pop
jmp
mov
test
jmp
movzx
cmp
rol
rcr
add
stc
jbe
stos
adc
jbe
xlat
pop
push
push
xor
dec
stc
or
sbb
xor
ret
adc
mov
dec
retf
(bad)
mov
and
xlat
(bad)
jp
push
xchg
add
cmp
jle
jmp
icebp
jb
and
scas
or
cmps
add
mov
inc
add
inc
add
mov
jo
mov
mov
jae
retf
rcr
cmp
jl
xchg
ror
repz
icebp
mov
aaa
into
ins
repz
ss
or
fwait
or
sbb
imul
push
sbb
adc
(bad)
fndisi(8087
vdivss
xchg
ins
(bad)
icebp
sub
lahf
or
leave
aas
lahf
mov
adc
or
cmps
fisubr
push
lea
sbb
fnsave
mov
loopne
xchg
scas
sub
xchg
and
hlt
cmp
sub
inc
aad
adc
fcom
inc
cmp
test
lods
mov
push
lods
cmp
adc
cmp
sbb
mov
test
sar
xlat
pop
push
dec
in
popa
cmp
je
inc
mov
(bad)
aam
inc
call
pusha
adc
out
(bad)
in
fbstp
fcmovnbe
pop
add
mov
pop
cmp
mov
dec
fisubr
lods
mov
pop
pop
ficomp
data16
mov
in
cmps
xchg
imul
ret
(bad)
pop
ret
into
les
xchg
les
pop
shl
(bad)
xor
add
(bad)
fadd
sbb
out
jecxz
test
sub
lods
push
fild
dec
push
outs
fistp
(bad)
(bad)
lahf
xchg
aaa
out
cs
dec
inc
retf
add
jb
dec
xor
mov
push
push
xor
div
sti
stos
in
fst
call
push
pop
cmp
mov
neg
xchg
fisub
std
out
fs
adc
jns
mov
lock
pusha
jae
aam
mov
push
retf
mov
dec
js
repnz
js
cmp
es
arpl
imul
repnz
mov
retf
movs
iret
ss
push
rcr
sbb
adc
js
imul
outs
mov
sbb
cli
add
cld
loop
pop
mov
popf
jecxz
arpl
stc
xor
retf
mov
jle
jg
je
adc
mov
je
out
int
pop
in
inc
ss
psubusw
cmp
inc
std
mov
imul
sub
jge
mov
push
mov
(bad)
aaa
shl
lods
cmp
cli
dec
sub
call
fcom
aaa
pop
or
cmps
sbb
out
mov
xlat
sub
(bad)
and
or
sub
sub
test
adc
movs
or
or
stos
cwde
xlat
mov
data16
movs
mov
ins
push
xor
inc
inc
leave
out
call
sub
jmp
es
xor
xor
push
cmps
add
dec
inc
jbe
pop
inc
jnp
pusha
inc
pop
cmp
in
in
ror
(bad)
xor
add
(bad)
xchg
ror
sbb
xchg
lods
clc
enter
push
stos
sub
and
add
fild
outs
sub
cmp
loopne
stos
push
popf
mov
jmp
xchg
popf
retf
xor
(bad)
fadd
xchg
shl
cmps
es
ror
imul
fs
(bad)
adc
out
mov
push
mov
cmp
scas
int
dec
xchg
(bad)
cmp
rol
xor
push
sub
rcr
pop
inc
adc
push
jns
sbb
cli
sbb
std
adc
fcmovne
xchg
mov
adc
repz
push
iret
test
lods
out
in
movs
pmaddwd
mov
rol
loop
jae
xchg
fsubr
xchg
push
pop
loop
xor
sub
gs
movs
(bad)
in
repz
cmps
repnz
daa
sar
aad
ds
pop
out
jmp
int3
or
ins
fimul
stc
fs
imul
and
and
mov
repnz
jnp
cmp
mov
call
and
fwait
or
mov
mov
(bad)
imul
and
in
cmp
jp
dec
js
adc
push
mov
cmp
push
mov
std
out
mov
fiadd
dec
mov
out
push
cmp
jo
(bad)
pop
mov
push
mov
or
clc
je
mov
mov
xlat
add
jmp
push
mov
pop
pop
(bad)
std
sub
xlat
adc
mov
cwde
retf
jbe
or
mov
push
aam
repz
push
std
and
dec
xchg
sbb
fld
mov
xor
jnp
imul
sub
add
pop
(bad)
sbb
mov
repz
outs
jno
jmp
(bad)
sbb
add
inc
xor
aad
imul
(bad)
test
push
ret
add
mov
movs
imul
pop
pop
dec
out
out
dec
(bad)
sbb
push
dec
test
sahf
add
shl
dec
add
das
inc
(bad)
sti
cmp
ds
ficomp
mov
dec
ja
stc
pusha
retf
push
xchg
aad
neg
dec
aad
push
or
aad
lahf
xchg
das
add
inc
mov
and
int
movs
xchg
cmp
icebp
and
stos
std
out
je
jmp
(bad)
cmps
xchg
in
ja
xor
nop
ja
push
push
test
or
fild
mov
and
push
pop
or
jg
mov
mov
shr
push
push
stos
push
sbb
iret
js
(bad)
popa
push
in
sub
pop
pop
nop
push
jbe
push
outs
pop
call
sbb
js
out
inc
xchg
cdq
add
rol
inc
in
icebp
xchg
shr
fiadd
mov
out
dec
xchg
movs
push
stc
and
sub
enter
shl
sbb
jnp
xchg
xor
cmp
mov
lds
shl
jnp
dec
pop
sub
push
mov
inc
stc
jno
xchg
inc
jns
adc
jge
xor
inc
mov
jb
xchg
movs
mov
pop
xlat
lahf
das
pop
mov
dec
daa
push
sbb
adc
sub
or
xchg
retf
push
inc
inc
jo
mov
xor
into
push
ins
fidiv
jo
dec
sub
cmp
add
mov
pop
hlt
fcomp
jle
jg
mov
cmp
mov
aam
push
xor
add
add
sti
mov
loop
in
xchg
adc
and
and
lods
pop
jne
nop
call
aam
leave
pop
add
xchg
retf
pushf
pop
test
movs
hlt
mov
push
jmp
jge
addr16
inc
push
icebp
push
mov
das
fwait
clc
into
aaa
outs
push
jno
in
repnz
arpl
cmp
loope
jecxz
and
mov
call
pop
cli
and
lock
sahf
push
mov
add
xchg
jge
adc
inc
sbb
retf
mov
icebp
and
lods
lods
xchg
sbb
ja
(bad)
xchg
or
mov
add
inc
mov
sub
ja
stc
inc
call
retf
pushf
pop
adc
pop
add
sbb
loope
into
jl
push
dec
sub
not
movs
aas
push
adc
iret
push
mov
push
js
jle
mov
inc
test
and
cmp
das
mul
adc
sub
mov
inc
adc
lahf
dec
fsubr
add
and
std
mov
cmp
jae
hlt
jmp
pop
mov
xchg
and
adc
out
push
add
xchg
lds
shr
pop
push
lahf
or
cmp
add
fnsave
or
adc
cld
fnstsw
xor
jl
sub
sub
adc
dec
sahf
mov
cmps
sar
bound
mov
mov
popa
out
test
inc
and
push
and
ja
mov
scas
pop
or
in
mul
jmp
hlt
aas
and
daa
push
cmp
xor
cwde
pop
test
sti
out
lds
loope
loopne
jge
in
arpl
das
cmovnp
neg
and
iret
clc
jecxz
and
sti
inc
dec
enterw
(bad)
xor
std
cs
cdq
jmp
leave
outs
dec
mov
dec
daa
lock
aad
jge
mov
and
sbb
sbb
push
outs
xchg
cmc
lds
mov
mov
jle
mov
mov
fsubp
sahf
(bad)
pop
adc
xchg
lds
retf
idiv
loopne
adc
sub
dec
shl
cmc
daa
das
push
sbb
inc
inc
mov
por
into
pushf
test
xor
pop
fdivr
test
dec
cdq
mov
or
pop
add
cmp
mov
fsub
mov
test
scas
test
imul
lahf
add
retf
lock
sub
lahf
xchg
inc
sbb
pop
imul
and
(bad)
adc
and
xchg
sti
inc
movs
test
daa
loope
sub
or
imul
inc
fisttp
jecxz
jle
imul
gs
stos
mov
mov
rcr
jno
ret
xor
hlt
and
dec
push
adc
xchg
cmc
mov
dec
push
stc
or
xor
lds
imul
add
fcomp
nop
iret
popf
and
jbe
ret
lock
jb
push
jle
lods
arpl
inc
ins
sar
sub
push
mov
not
movs
cld
pop
test
fld
push
add
mov
out
and
jbe
rol
arpl
cdq
sbb
fimul
cmc
push
test
mov
cmp
add
cmp
xchg
hlt
mov
ins
inc
cmps
in
add
pop
test
jmp
pop
mov
mov
push
cdq
push
jle
jle
dec
rcl
push
lahf
test
sbb
or
sbb
or
stc
xlat
in
mov
pop
hlt
std
cld
call
mov
pop
js
in
push
xor
loopne
aaa
pop
or
addr16
fisub
test
push
ss
inc
ficom
fld
sub
sbb
pop
jnp
add
pop
sub
or
lahf
in
sub
adc
ret
dec
in
sub
daa
sbb
aad
add
jle
scas
dec
out
ret
xor
sub
movs
push
jge
xchg
dec
xor
xor
cmp
(bad)
sub
test
ds
ficom
push
and
ja
bswap
and
mov
inc
or
dec
jo
mov
xor
jmp
sub
(bad)
mul
mov
(bad)
sti
aas
pop
sti
dec
pop
add
mov
add
mov
adc
push
push
mov
in
in
cmp
out
pop
mov
cmps
push
lds
cwde
inc
dec
xlat
sub
push
add
jne
inc
adc
pop
nop
pop
xchg
les
(bad)
mov
mov
jle
(bad)
outs
movs
cmp
lods
movs
adc
stos
loope
mov
push
(bad)
into
add
test
or
(bad)
bound
sbb
in
mov
popw
aaa
mov
cmps
xor
pop
add
mov
jge
push
mov
mov
cmp
fcomp
das
stc
movs
imul
adc
mov
not
dec
aaa
(bad)
xor
addr16
mov
mov
mov
aas
sub
mov
cli
xchg
mov
es
mov
and
dec
add
jge
adc
int3
and
cmc
sti
das
call
movs
mov
cmp
pop
ins
pop
ins
mov
mov
push
bound
test
and
dec
pop
pop
adc
jbe
je
fidivr
cmp
or
mov
pop
jnp
fnstcw
add
xchg
loope
xor
push
mov
mov
cmp
sbb
or
enter
xchg
fsubrp
bound
call
jecxz
adc
lahf
sbb
mov
sti
cmc
retf
in
les
pop
xor
daa
add
outs
shl
out
lea
clc
jg
out
dec
xchg
jmp
lds
fiadd
shl
sbb
dec
pop
jmp
push
call
xor
aam
pop
stos
inc
sub
xchg
sbb
ins
push
ja
movs
cmps
arpl
retf
mov
addr16
pop
retf
xor
add
pop
mov
dec
ins
(bad)
dec
int3
fstp
lods
jno
daa
mov
xchg
das
adc
fstp
out
pushf
sbb
mov
cdq
cmp
mov
and
rcl
mov
mov
fcmovu
test
push
mov
xor
dec
fwait
push
and
cmp
lds
js
int
scas
inc
add
mov
(bad)
pop
push
shl
sub
mov
cmp
dec
shr
add
ins
sub
mov
mov
nop
and
retf
dec
add
cmp
retf
or
not
imul
(bad)
loope
loop
sbb
jmp
push
pop
mov
sahf
mov
xor
lock
loopne
mov
sbb
pop
fist
outs
jmp
ss
push
iret
inc
ficomp
jmp
cwde
mov
cmps
outs
sub
sbb
repz
lock
mov
or
inc
cmp
fs
aam
mov
mov
sub
xor
popa
or
adc
test
aad
stos
jmp
jmp
js
es
stos
idiv
mov
ret
jge
or
lods
aam
ficom
push
pop
push
(bad)
mov
mov
in
jno
xor
and
dec
dec
(bad)
jecxz
mov
dec
idiv
ret
scas
repz
inc
out
test
cmc
push
adc
dec
fiadd
add
sbb
js
aas
push
cdq
rcl
psadbw
je
shl
enter
lock
movs
lea
in
mov
cmp
popa
stc
fmul
into
push
in
pop
cs
sbb
in
xlat
or
jns
inc
or
shl
inc
test
sub
sahf
push
sub
fucomi
test
cmp
ror
mov
lods
fmul
push
mov
add
dec
xchg
data16
pop
push
push
jae
jbe
xchg
sbb
sub
mov
mov
xchg
clc
mov
jge
dec
push
mov
mov
lock
sub
pusha
mov
sahf
and
pop
rcl
shl
adc
xor
pop
sub
or
inc
mov
nop
addr16
retf
in
inc
xchg
icebp
inc
fwait
retf
mov
arpl
push
enter
lahf
das
sub
lock
push
mov
mul
sub
rol
fild
outs
ins
cdq
mov
jl
adc
and
clc
pop
outs
cmp
sahf
lock
retf
add
cmp
test
xchg
lea
or
inc
dec
sahf
sbb
xchg
dec
jnp
div
ss
push
pusha
loop
jno
in
sar
sbb
out
xchg
aam
jae
dec
dec
ins
add
or
xor
cmp
xor
jecxz
dec
fisttp
xor
je
cmp
and
fdivr
pminsw
ja
out
(bad)
int
movs
jne
lock
mov
push
pop
adc
adc
hlt
sbb
jno
xchg
push
fs
dec
xchg
arpl
mov
out
cld
nop
and
add
sbb
fisub
enter
jno
mov
lea
enter
fisttp
and
test
xor
sbb
pop
inc
cmp
dec
sbb
int
xchg
mov
pop
and
xor
jle
loop
icebp
je
and
jb
and
xlat
daa
dec
push
aaa
into
and
push
and
fnsave
xor
cld
fmulp
mov
push
mov
fs
sbb
jmp
and
xchg
ss
xor
stc
loope
repz
mov
in
mov
dec
scas
stos
xchg
daa
test
dec
mov
lock
push
or
push
inc
adc
mov
aaa
mov
fwait
movs
fmulp
push
mov
dec
sbb
adc
xor
gs
sbb
cmp
push
pushf
and
aas
inc
mov
js
ds
push
pop
add
dec
adc
or
xchg
rcr
fwait
add
fwait
inc
out
fnsave
xor
or
(bad)
imul
ror
les
test
mov
mov
clc
outs
add
fcom
mov
sub
imul
lahf
out
arpl
out
cmc
out
in
aad
add
sbb
adc
pop
sbb
fwait
xor
arpl
jbe
sar
jecxz
leave
popf
mov
inc
call
movs
push
sbb
jle
or
push
jl
mov
adc
pop
pop
pop
add
sub
inc
jb
push
inc
aaa
mov
push
test
movs
sbb
ficomp
jne
sub
(bad)
retf
push
mov
xchg
pushf
jnp
xor
call
cwde
repnz
call
test
call
(bad)
clc
ret
out
test
in
adc
cdq
mov
jbe
popf
pop
and
int
call
daa
pusha
(bad)
hlt
pusha
mov
jmp
dec
mov
outs
lea
(bad)
sbb
push
mov
jae
jecxz
mov
mov
outs
mov
iret
mov
xor
pop
stc
jg
(bad)
sti
in
ja
dec
cmp
push
mov
mov
movs
fs
xor
std
mov
inc
mov
cmp
lods
lahf
mov
hlt
jmp
push
fcmovu
adc
mov
jg
dec
in
sbb
lods
mov
mov
outs
adc
clc
sub
iret
add
mov
and
stos
mov
out
out
cmp
lock
dec
pushf
movs
leave
xor
mov
jl
dec
xchg
lock
dec
loopne
popf
pop
jecxz
jmp
adc
(bad)
sti
icebp
and
inc
imul
nop
imul
push
xor
jb
fiadd
sti
pop
out
inc
jb
add
adc
fcmovnbe
and
dec
xchg
push
inc
mov
mov
mov
cs
cmps
inc
jp
sub
cmp
popa
aas
data16
out
xchg
or
dec
ficomp
sub
mov
ss
lds
nop
(bad)
(bad)
xchg
ins
sbb
imul
les
cmp
xor
fcom
rol
xchg
loopne
push
add
mov
xor
jae
inc
ret
dec
fcom
jle
add
add
pop
or
ja
xor
repz
fucom
sub
jge
loope
sar
jmp
popa
pop
les
mov
adc
and
pop
jns
and
(bad)
sahf
cmc
and
sub
sbb
out
fcmove
mov
popa
sub
imul
xchg
mov
push
push
int
pop
add
stc
add
outs
inc
mov
retf
add
mov
and
pop
mov
lods
jae
inc
cmp
push
frstor
dec
jnp
sub
ficomp
push
stos
call
imul
xchg
inc
ins
jle
int
adc
int3
sub
fwait
cmp
(bad)
lods
pop
add
and
neg
popa
leave
lods
adc
ja
loopne
retf
jmp
pop
ss
shl
pop
or
mov
jnp
cmps
jno
dec
or
outs
cdq
dec
dec
enter
xchg
leave
out
bound
test
mov
sub
jmp
int3
sub
dec
or
cmp
mov
adc
stos
inc
push
repz
icebp
adc
ds
(bad)
retf
jge
cli
jns
daa
ret
fisubr
leave
add
adc
je
hlt
adc
cmp
and
mov
inc
jmp
xchg
bound
fnsave
pop
cmp
jge
sbb
sbb
call
test
in
cmps
cmp
hlt
call
adc
fstp
clc
jo
int3
scas
test
inc
fcomip
scas
cmp
add
xchg
mov
sub
mov
xchg
mov
ficomp
and
pop
inc
xor
add
push
add
adc
mov
out
sub
mov
adc
ins
mov
jo
dec
scas
push
fistp
fcomp
(bad)
push
stos
add
jmp
mov
cs
xchg
stos
jae
push
mov
lds
sahf
jge
ins
mov
or
rcr
xchg
jmp
pop
dec
cmp
mov
imul
iret
xor
pop
or
xchg
test
jnp
call
inc
cli
jb
sti
pop
(bad)
push
jmp
adc
mov
mov
std
push
push
jmp
adc
pop
adc
pop
xor
mov
out
or
stc
jb
aad
mov
jnp
pushf
mov
push
inc
les
add
pop
cmp
xor
xlat
icebp
xor
and
pushf
aas
(bad)
jp
int
pop
mov
jp
mov
jp
mov
scas
dec
(bad)
mov
and
mov
xchg
repnz
push
jle
xchg
into
sbb
mov
dec
fimul
das
push
mov
adc
pop
cmp
inc
cs
mov
fsub
cmp
stos
jmp
or
call
bound
sar
ret
arpl
cmp
jge
out
sub
test
adc
cmp
jne
cmps
loop
icebp
fwait
pop
test
repz
push
call
imul
mov
sub
pop
nop
repz
push
cmp
setnp
xor
inc
fmul
ror
or
ret
jp
xlat
adc
mov
jnp
in
pop
sub
sti
mov
je
test
jno
fld
mov
fcomp
aad
cmp
mov
mov
loop
sbb
sbb
out
mov
push
adc
adc
pop
dec
add
sbb
or
jg
lock
mov
cmp
mov
lds
sub
mov
(bad)
mov
xor
pop
dec
fistp
push
mov
rcr
popa
movs
movs
out
mov
stc
push
hlt
xchg
int
or
mov
pusha
xadd
sbb
inc
mov
icebp
inc
xchg
push
jnp
fdiv
aad
cmp
adc
dec
sahf
sub
cmp
or
cmps
in
push
lock
shl
mov
add
into
sub
add
das
test
jo
stos
pop
pop
fwait
mov
or
xor
cmp
sbb
ret
and
jmp
xchg
add
or
add
imul
or
pop
shl
sbb
rcl
or
icebp
shr
mov
push
prefetchw
xor
inc
sub
outs
std
pop
xor
or
add
call
inc
push
cmp
cmp
loopne
sbb
dec
test
adc
xor
sar
iret
stc
cld
inc
pop
mov
jno
jl
loop
sar
jns
clc
jnp
dec
outs
cmp
mov
push
mov
aaa
pop
ss
mov
add
rcl
lds
mov
fisub
pop
or
cmp
movs
push
sub
jns
call
add
dec
nop
xchg
cwde
inc
and
out
enter
or
lock
xchg
fucomp
push
pop
jp
and
sub
inc
xor
enter
rol
jle
add
popf
stos
rol
adc
cld
das
cld
arpl
pushf
test
mov
inc
push
jmp
mov
repnz
(bad)
cmp
and
or
add
and
ffreep
mov
push
test
inc
shr
sahf
scas
(bad)
sbb
icebp
or
dec
stc
movs
imul
fist
xor
fadd
hlt
dec
cmc
dec
xchg
cmc
pavgw
leave
aas
test
and
sub
dec
inc
sbb
mov
jecxz
pop
mov
push
or
(bad)
int
push
cmps
aam
and
sti
sub
(bad)
inc
sub
xor
dec
sub
in
(bad)
leave
xor
and
aas
cmps
das
push
inc
fld
mov
call
cmps
mov
gs
add
aam
or
int3
cs
sub
daa
lods
ret
and
dec
fwait
in
dec
pushf
lea
jg
js
xchg
and
(bad)
in
data16
sub
mov
cld
add
pop
es
and
push
mov
outs
cmps
sbb
sbb
fdivrp
adc
fwait
dec
aam
add
sbb
xor
dec
sub
inc
xchg
in
pop
mul
mov
in
pop
ret
loopne
jbe
mov
repnz
and
mov
dec
iret
mov
fld
jae
jae
ds
pushf
mov
cmps
mul
retf
jecxz
retf
xchg
inc
add
xchg
mov
(bad)
pushf
fs
jle
sub
cmp
pop
(bad)
jo
cmovae
adc
or
call
inc
es
mov
fwait
rcl
sub
fxam
xlat
xchg
push
inc
test
jns
pop
pop
test
xor
fist
sub
pop
addr16
dec
das
js
popa
pop
in
push
inc
mov
repz
(bad)
mov
scas
adc
pop
les
popa
sbb
dec
out
hlt
xchg
dec
cli
stc
in
push
sti
out
jns
inc
or
inc
jg
lods
pop
bound
call
mov
icebp
pop
and
cmps
xor
push
inc
imul
mov
aam
popa
xor
shl
fsqrt
sub
das
pop
fwait
jp
push
mov
xor
add
add
ret
push
mov
in
test
test
dec
jb
fiadd
popa
jns
inc
pop
aas
sub
fstp
cld
inc
sar
push
pushf
iret
addr16
stos
xchg
push
call
out
into
or
gs
ficomp
lea
jecxz
lods
sub
add
jno
inc
jae
adc
scas
in
popa
jp
mov
adc
inc
cmp
dec
dec
push
shl
add
dec
mov
jbe
ficomp
dec
mov
and
cwde
out
sti
in
cmp
in
mov
pcmpgtb
addr16
adc
sub
ret
add
push
add
sbb
jecxz
std
dec
mov
pop
gs
cmp
mov
mov
(bad)
cmp
(bad)
test
sub
mov
sub
sub
int3
dec
and
enter
add
dec
jnp
rcr
and
ret
xchg
mov
pop
jno
or
fbstp
loop
(bad)
add
pop
sbb
or
mov
retf
xor
sub
ds
dec
sub
xor
push
add
adc
ins
mov
stos
out
shr
mov
je
mov
pop
cmp
add
or
mov
ja
push
lahf
ins
mov
jg
dec
dec
mov
pop
je
mov
inc
cmp
pop
test
sti
lods
pop
mov
fist
repz
pop
repnz
shl
rcr
cmp
repnz
out
sbb
ja
jge
ret
enter
in
push
pop
stos
mov
pop
add
xor
push
(bad)
push
push
enter
push
and
test
cld
xchg
mov
in
push
es
fimul
fld
push
or
xchg
xchg
leave
ss
jg
pop
push
or
xor
pop
sub
mov
retf
mov
fild
xor
cmp
mov
add
mov
pop
and
test
loopne
pop
jg
loopne
pop
jp
out
sar
jno
mov
lods
mov
dec
shl
add
and
in
sbb
gs
call
pushf
daa
std
xor
and
mov
cdq
xor
loopne
dec
xchg
ins
jmp
push
push
js
jmp
enter
inc
ss
add
(bad)
cli
std
ds
stc
inc
ret
inc
pop
imul
leave
jo
xor
(bad)
mov
inc
pop
cdq
fisubr
arpl
push
xor
pop
stos
add
dec
xchg
(bad)
cmp
mov
fxch
int
push
call
pop
or
ins
xchg
pop
cmp
jp
xor
jne
adc
lods
js
and
popa
jl
retf
mov
ds
inc
outs
cmps
jp
rcr
imul
mov
cmp
cmp
xor
repnz
loope
dec
fistp
enter
cs
sbb
or
int
jne
jl
je
jg
fnstcw
push
pop
sub
aam
cmp
mov
sbb
jb
call
sahf
push
ror
cmp
shr
call
sar
mov
jns
cmp
xor
daa
imul
cmp
inc
xchg
jbe
dec
dec
push
stos
jg
dec
or
and
jns
imul
xchg
dec
cmp
(bad)
fstp
(bad)
neg
dec
mov
mov
add
js
or
div
fist
push
iret
mov
lea
cmp
jne
sbb
movs
push
xchg
stos
dec
mov
cmps
xor
call
cmc
bnd
mov
pop
std
out
test
mov
es
pop
pusha
mov
sti
ja
fs
mov
aaa
nop
mov
rcl
cmp
enter
aam
cmp
adc
mov
xor
pop
not
fbstp
fist
daa
xchg
mov
sub
and
(bad)
mul
inc
jne
jecxz
pop
xchg
inc
icebp
inc
xor
dec
mov
push
scas
ds
dec
loopne
sbb
imul
pop
xchg
sbb
sub
call
(bad)
repz
loop
inc
sub
(bad)
enter
add
mov
in
repnz
sub
mov
mov
mov
nop
enter
push
pop
pusha
mov
or
shl
movs
jb
sar
addr16
inc
add
pop
aas
pop
aaa
cli
mov
gs
int
call
adc
inc
adc
ret
jbe
ds
dec
mov
dec
out
and
ins
adc
in
je
std
scas
idiv
xchg
sahf
ffreep
pushf
mov
stc
lahf
and
(bad)
pop
in
push
out
jmp
bound
sbb
sub
imul
mov
sbb
arpl
jmp
pop
sub
out
push
fstp
pop
xchg
cs
add
mov
shl
dec
out
aad
int
mov
adc
movs
(bad)
mov
lea
inc
(bad)
and
leave
push
add
push
clc
add
pop
out
mov
sbb
hlt
icebp
add
dec
daa
jbe
jbe
push
das
repz
jb
addr16
adc
push
fs
arpl
push
out
push
(bad)
xlat
mov
stos
cwde
hlt
sbb
(bad)
ficom
mov
or
and
jp
mov
xchg
cmp
cmp
xchg
stc
sbb
fsubp
and
mov
xchg
clc
cmp
(bad)
(bad)
pop
inc
jg
mov
cmp
and
cli
push
js
cmp
adc
fs
sbb
push
and
pop
mov
stos
jbe
push
fs
repz
cdq
addr16
xor
mov
sbb
mov
jmp
inc
not
mov
neg
jmp
xor
cmps
add
shl
jmp
inc
push
test
adc
adc
cs
mov
inc
sub
and
div
daa
test
adc
mov
cmp
es
clc
(bad)
push
push
adc
pop
icebp
jns
sahf
sub
test
ret
xchg
das
or
pop
dec
jge
ret
push
test
dec
jg
xchg
add
in
sub
xor
mov
scas
mov
dec
add
retf
and
aaa
and
nop
test
mov
bound
pop
cli
sub
sbb
cmp
and
mov
add
movs
mov
cmp
das
adc
sub
enter
arpl
in
je
cli
mov
popf
mov
movs
call
scas
sar
ja
pop
dec
sbb
and
test
push
in
shr
inc
ins
adc
or
jl
es
test
mov
cmp
cmp
and
movs
mov
push
aam
cmp
xchg
and
fsubr
dec
fimul
fbld
not
xchg
add
mov
js
hlt
(bad)
rol
sub
mov
mov
sub
call
mov
pop
cmp
inc
push
hlt
cwde
xchg
xchg
mov
and
or
mov
cmp
dec
mov
in
js
jmp
sbb
pop
and
mov
pop
adc
out
out
mov
loop
pop
popa
dec
sbb
lods
lock
addr16
ror
idiv
xchg
jno
test
ficomp
lods
and
mov
add
sti
retf
fcmovbe
mov
sbb
out
pushw
out
pushf
xchg
popa
es
in
mov
push
mov
aam
push
pop
sbb
push
jp
inc
sub
sub
pop
adc
adc
or
add
enter
cdq
gs
btc
je
jmp
sbb
xlat
cld
and
movs
retw
retf
call
int
aas
mov
push
ret
xor
and
cmp
xor
aam
(bad)
call
call
pop
mov
cdq
xor
mov
in
fs
xchg
add
dec
mov
jg
mov
outs
test
mov
mov
push
dec
push
xchg
mov
pop
retf
push
fnstenv
sbb
add
adc
sbb
test
xor
test
jge
loop
ins
adc
dec
cs
push
inc
(bad)
sti
pop
jo
jl
in
test
mov
(bad)
fdivr
scas
xor
cmc
out
xor
js
pop
scas
cmp
imul
lds
or
in
cmp
nop
mov
retf
fdivp
jg
pop
pop
jae
mov
inc
sahf
xor
xlat
clc
dec
mov
cdq
xor
dec
je
repnz
cmp
mov
int
xchg
xor
inc
fild
xchg
out
mov
mov
jns
mov
loopne
(bad)
pushf
adc
in
push
mov
dec
mov
test
mov
mov
inc
gs
cmps
or
lods
pop
sbb
icebp
push
jle
jno
push
xor
jge
cmp
outs
inc
inc
push
aad
jns
sbb
stos
jae
icebp
mov
loopne
loopne
test
(bad)
sti
aas
inc
mov
ins
ret
mov
jbe
push
repz
out
test
mov
jno
xchg
add
push
xlat
sar
mov
and
stc
sbb
mov
inc
(bad)
clc
imul
or
fiadd
or
js
movs
cli
fnstcw
stc
add
int3
icebp
sbb
leave
jg
mov
inc
mov
mov
jae
mov
xchg
adc
leave
push
sahf
imul
(bad)
or
inc
or
xchg
and
out
rcl
es
adc
fistp
dec
in
arpl
(bad)
fxch
inc
add
dec
xor
pusha
inc
test
dec
sub
cmps
push
pop
push
outs
mov
cmp
test
jl
mov
inc
and
mov
stos
popa
cmp
jns
cmp
mov
test
mov
xchg
inc
es
jmp
scas
sub
mov
mov
adc
push
loopne
loopne
xchg
(bad)
int
out
inc
or
and
xchg
mov
stos
sahf
dec
popf
add
add
in
repz
and
cs
repz
jbe
dec
and
(bad)
gs
lock
daa
test
outs
dec
neg
jns
repz
fisubr
jecxz
in
sbb
push
ret
push
das
cmp
fs
adc
nop
xor
cld
jmp
push
pop
mov
pusha
mov
sti
shl
(bad)
fwait
fwait
cmp
rcl
jge
outs
xchg
repnz
fsubr
adc
pop
inc
imul
mov
out
ret
xor
xchg
pop
xor
mov
mov
iret
out
neg
adc
loop
nop
loope
cmp
(bad)
xchg
in
scas
or
or
movs
fcom
or
scas
mov
dec
ficom
fcmovnu
iret
test
mov
mov
ins
pop
mov
push
arpl
cmp
lods
adc
and
jecxz
imul
retf
out
in
xchg
sub
pop
aam
mov
push
fadd
loope
cmp
shl
movs
push
or
mov
jg
add
stc
dec
addr16
sub
add
cmp
pop
(bad)
jmp
xchg
mov
out
call
sbb
cmp
or
sbb
xchg
jl
pusha
jp
test
movs
test
fcomip
sbb
mov
pusha
and
mov
in
or
xchg
cmp
sub
cmp
jmp
out
mov
test
rol
int3
cmp
stos
xor
fisttp
sbb
out
inc
push
pop
imul
es
jmp
push
loope
icebp
adc
outs
or
call
mov
pop
movs
daa
clc
cmp
dec
mov
mov
jle
mov
aas
or
inc
sub
inc
fist
sub
hlt
das
xor
add
imul
clc
cmp
test
stos
arpl
pop
pop
jmp
mov
in
inc
xchg
pusha
inc
sub
add
and
jp
push
out
add
adc
imul
gs
ret
call
push
mov
jae
stos
push
fstp
retf
push
and
and
rcr
cmp
cmp
sbb
cmc
test
and
(bad)
xor
loopne
xchg
sub
aam
dec
pop
add
jmp
push
aam
test
inc
mov
fdiv
call
outs
xor
dec
call
or
add
mov
pop
jmp
push
xor
pop
or
movs
add
cmc
imul
mov
icebp
in
(bad)
popa
(bad)
call
call
pop
dec
aam
or
mov
push
xchg
jp
dec
mov
imul
jle
(bad)
fwait
push
dec
adc
sub
jae
stos
rol
gs
mov
test
(bad)
jecxz
jg
push
rol
cmp
out
mov
mov
iret
pop
icebp
sahf
call
mov
and
call
jb
sbb
xchg
(bad)
push
rol
mov
clc
rcr
xchg
mov
fdivr
jns
jo
add
gs
dec
jmp
test
pop
xchg
aas
movs
test
mov
(bad)
mov
or
xor
inc
adc
push
inc
adc
dec
pop
pusha
add
je
fcomp
pop
sub
neg
inc
add
add
or
gs
shl
fild
dec
bound
xchg
pop
sub
outs
into
out
stc
fidivr
push
rsm
jae
pushf
movs
and
dec
mov
jmp
popf
leave
popa
sbb
inc
mov
jge
xor
mov
gs
push
and
dec
mov
mov
jno
ss
out
and
out
mov
xor
and
adc
cdq
ins
out
inc
sub
popf
cmp
sub
mov
daa
out
dec
xchg
jnp
or
fnstsw
loope
cmps
clc
mov
mov
push
inc
xor
(bad)
icebp
sub
sbb
or
adc
or
das
fwait
test
cmp
pop
mov
pusha
js
xchg
out
and
dec
imul
pushf
dec
jnp
dec
les
lds
sbb
fild
cwde
pop
pop
leave
xor
out
out
sbb
std
mov
popa
jnp
(bad)
loop
sti
push
(bad)
and
ss
call
sub
push
lods
or
dec
mov
cmps
ret
addr16
jne
xchg
pop
icebp
pop
xchg
mov
shl
in
xchg
push
cmp
movs
mov
jns
push
xor
jl
daa
cdq
inc
push
pop
cmps
hlt
inc
or
mov
adc
dec
ja
arpl
movs
pop
rol
xchg
or
mov
fnstenv
nop
int
sub
ss
daa
rol
pop
xchg
into
push
add
xchg
push
(bad)
mov
jecxz
push
dec
dec
mov
sub
repnz
mov
sub
nop
push
and
imul
pop
mov
xchg
sub
jb
jge
adc
sub
cdq
cmp
popa
sbb
outs
push
dec
push
push
sub
ret
test
or
imul
hlt
or
xor
(bad)
jl
(bad)
inc
int3
and
mov
imul
pop
jp
inc
test
and
cld
and
out
add
xor
mov
fist
jge
cmps
or
inc
xchg
sub
movs
sbb
push
push
out
addr16
mov
aam
mov
xor
sub
addr16
loope
xchg
mov
adc
pop
test
cli
cmp
jecxz
loope
ins
repz
daa
sar
pop
push
dec
xor
ins
pop
adc
or
loopne
mov
fcomp
or
retf
es
jmp
imul
pop
xchg
inc
add
fcompp
aam
dec
out
cmps
inc
das
xor
out
jmp
cli
or
mov
xchg
jne
xor
sar
das
dec
idiv
imul
add
test
mov
call
lock
les
lea
lock
div
aam
cmps
push
scas
mov
lds
shl
test
aaa
loop
leave
clc
mov
xchg
push
(bad)
push
setg
call
leave
imul
push
add
push
cmp
push
cdq
icebp
out
mov
add
cmp
push
mov
push
jns
test
dec
pop
push
popf
ret
loopne
sub
pusha
cmp
xor
repnz
hlt
and
cmp
mov
adc
xchg
test
mov
(bad)
push
(bad)
jmp
call
(bad)
lahf
jp
and
call
inc
mov
scas
xor
xchg
sbb
(bad)
(bad)
mov
fadd
cmp
call
jno
and
and
das
add
adc
dec
stos
das
sub
jb
js
int
aam
cs
ror
xchg
mov
add
mov
push
adc
daa
xchg
push
aaa
and
fsubr
loope
aaa
int3
jmp
cmp
pop
and
jg
jl
push
xor
dec
ss
ficomp
das
push
nop
cmps
rcl
push
sbb
fucompp
into
pop
sbb
popaw
shl
cs
adc
xchg
loop
test
es
fsub
jmp
sub
js
mov
(bad)
cli
addr16
push
mov
push
and
sub
nop
jge
scas
xchg
call
neg
inc
jl
cmp
es
adc
fdivr
mov
jb
imul
xchg
inc
ja
movs
(bad)
cmp
es
shl
or
pop
(bad)
stc
imul
push
or
stc
sbb
xor
arpl
sti
fs
dec
aam
cmps
test
or
push
movs
or
sti
push
fsubr
frstor
loope
pop
mov
mov
sbb
xor
cdq
call
pop
lock
xlat
(bad)
js
pushf
and
dec
in
fxam
add
(bad)
movs
mov
inc
lods
jne
addr16
in
dec
adc
enter
xchg
and
icebp
daa
pop
push
and
inc
push
xor
nop
push
adc
dec
shl
fisub
pop
test
jne
inc
mov
jns
cld
jge
div
into
mov
adc
in
and
cmp
inc
xor
mov
pop
ja
lock
adc
call
sub
xchg
(bad)
mov
icebp
mov
inc
jno
loop
jg
mov
xor
int3
pop
jmp
movs
aas
(bad)
outs
add
dec
pop
pop
pop
sub
or
stos
push
cmp
stc
jns
and
xchg
mov
pop
or
push
leave
xor
ffreep
in
lahf
dec
cmp
inc
das
cdq
(bad)
into
adc
gs
push
ins
fwait
mov
mov
push
scas
clc
push
out
nop
cmp
add
dec
fs
(bad)
push
push
add
cmp
ror
jns
dec
sbb
pusha
ror
pop
mov
and
fwait
cld
int3
xor
int
jnp
mov
retf
dec
ret
gs
rcr
or
pusha
jle
(bad)
mov
xor
lods
(bad)
loopne
int3
fcom
jl
rcl
sbb
cmp
sbb
mov
add
out
mov
xchg
stos
cmps
push
cmps
leave
popf
repnz
fcomp
es
aam
adc
push
gs
loopne
shl
push
xchg
push
cmps
scas
xor
fldenv
pushf
ins
dec
add
repnz
mov
or
mov
fisttp
cwde
or
fcmovb
rol
push
xchg
inc
push
popf
adc
cmp
les
fld
icebp
out
xchg
mov
add
push
sub
adc
imul
push
dec
mov
jns
stc
out
pop
cmp
mov
mov
mov
mov
icebp
scas
cmp
icebp
dec
push
mov
in
in
cmps
sti
cwde
stos
add
scas
sub
clc
or
fld
pop
ret
in
jb
repz
clc
fnstcw
sbb
sub
(bad)
jmp
outs
cmp
lahf
jnp
sahf
shl
jae
ss
pop
ret
push
je
(bad)
movs
jmp
push
jl
xlat
xlat
out
daa
hlt
lds
cmps
imul
lock
dec
test
sbb
cmps
dec
stc
fcomi
aam
in
xchg
cmp
cdq
adc
jmp
xchg
js
jp
(bad)
dec
pop
leave
lahf
pop
out
lods
jp
or
adc
stos
dec
cmp
sub
fnstenv
mov
sub
jnp
rcl
aaa
xchg
aad
xor
push
(bad)
mov
cmp
mov
cld
sti
sbb
cmp
in
imul
jge
adc
lea
(bad)
push
jp
arpl
or
pusha
loopne
add
(bad)
rol
mov
cmp
pop
xchg
ret
outs
cmp
pop
or
out
je
sbb
mov
call
ins
sbb
xchg
mov
or
test
cmp
push
in
repz
push
dec
scas
ins
mov
mov
inc
adc
fisttp
sbb
ds
sub
sahf
xlat
cmps
sbb
xchg
push
retf
enter
cmp
ss
add
xchg
sub
je
xchg
test
xchg
jmp
movs
mov
pop
jp
int3
pop
xchg
xchg
sbb
aad
adc
mov
or
outs
in
enter
cmp
fsub
sub
lods
cmp
xchg
cwde
add
jmp
lahf
scas
sub
xchg
pop
out
idiv
or
pop
mov
arpl
enter
rcl
dec
rcr
and
mov
mov
fnstsw
jmp
dec
sub
mov
sbb
adc
daa
movs
sub
or
mov
push
pop
cdq
sub
mov
lock
mov
inc
loope
scas
cmp
pop
or
scas
mov
repnz
dec
dec
lods
jmp
mov
test
scas
jb
mov
imul
xor
lods
pusha
sbb
loop
into
out
mov
cwde
xchg
mov
mov
mov
mov
out
add
push
inc
(bad)
jl
das
popa
xor
mov
mov
movs
push
enter
ins
outs
or
mov
jae
loopne
adc
(bad)
mov
ins
dec
test
xchg
ret
inc
dec
in
(bad)
sub
scas
mov
mov
cmp
sbb
(bad)
fs
sbb
aad
(bad)
adc
push
cld
leave
sar
dec
sbb
mov
in
mov
xchg
lods
mov
cmp
lods
add
mov
cld
inc
nop
push
arpl
out
ins
dec
gs
mov
inc
pop
ret
jb
shl
loope
jle
in
xchg
pop
iret
sub
cld
push
push
leave
popa
and
ins
dec
adc
in
rcl
popf
aaa
add
pop
fs
out
dec
loop
mov
adc
push
jmp
loope
adc
cmp
cmp
fs
test
mov
fwait
jae
sbb
mov
scas
mov
ds
lahf
ficomp
cmp
shl
or
sbb
xor
aam
sti
push
jb
stos
addr16
mov
clc
das
addr16
and
in
cmp
adc
mov
add
pop
mov
sub
into
xor
retf
nop
gs
jnp
fdivr
cmp
or
mov
cmc
int
or
mov
outs
aas
push
jbe
dec
xchg
jecxz
adc
fwait
xor
(bad)
pop
add
into
nop
pop
dec
ret
dec
dec
mov
inc
mov
aam
mov
retf
mov
adc
xchg
sub
fdiv
jnp
xchg
(bad)
fmul
mov
pop
sbb
imul
push
lahf
lods
scas
(bad)
mov
mov
adc
push
lods
popf
int3
(bad)
inc
adc
movs
adc
add
xchg
aas
(bad)
sub
mov
push
aas
fstp
cmc
into
ss
in
inc
push
sbb
jl
and
js
xchg
test
out
cli
call
mov
inc
inc
(bad)
dec
retf
int
jne
iret
xchg
xchg
mov
jo
cmp
out
sbb
mov
sbb
mov
mov
sbb
sar
sbb
std
xchg
jl
pop
cmp
shl
inc
inc
add
adc
out
aas
xchg
pop
movs
sar
mov
cmp
mov
push
add
in
mov
xlat
into
mov
sub
jbe
mov
pop
push
lods
push
cmp
adc
dec
scas
adc
sbb
retf
sbb
sub
scas
(bad)
jno
dec
push
xlat
mov
sbb
lods
jg
imul
in
scas
das
ins
movs
rcr
xchg
add
xchg
test
or
call
fadd
shr
jo
push
cmps
out
pop
shl
cs
dec
je
adc
and
stos
cmp
xlat
sub
jb
in
dec
add
cmp
xchg
loope
cdq
add
cmp
repz
inc
push
sub
das
aas
aam
push
mov
jae
cmp
lea
and
repnz
and
inc
adc
pushf
xchg
jge
jmp
add
stos
pop
or
pop
mov
fild
outs
mov
add
int
je
xchg
cmp
outs
aad
cmp
mov
jne
and
push
retf
scas
xor
test
(bad)
out
cli
pusha
jge
push
test
test
cmp
pop
dec
adc
push
jmp
mov
sub
mov
js
sub
sub
(bad)
bound
div
mov
jmp
jne
jnp
sub
xchg
fisub
stos
inc
sar
xlat
sbb
cmc
mov
dec
mov
into
jno
xor
mov
and
dec
cmp
popa
cmp
mov
or
fist
xlat
call
out
xchg
inc
mov
dec
(bad)
js
adc
retf
mov
fwait
popa
lods
sahf
cwde
fldenv
inc
aad
(bad)
mov
mov
hlt
jns
punpckhbw
cmps
cmp
push
inc
dec
pop
into
jge
sub
aas
push
mov
mov
xor
mov
jg
cmps
sub
outs
je
gs
push
arpl
mov
cdq
mov
push
retf
mov
retf
push
cmp
popa
stos
(bad)
mov
cwde
or
mov
popaw
(bad)
mov
ins
lods
aas
iret
mov
inc
jmp
adc
or
jno
call
outs
std
fcomp
dec
gs
daa
push
sti
xchg
jnp
aaa
cmps
pop
sub
dec
inc
inc
dec
push
add
popf
jmp
and
jg
xchg
js
adc
fst
push
cmp
and
mov
aas
call
test
add
popa
sbb
inc
fadd
jo
shr
mov
push
cmps
cmp
adc
gs
mov
push
push
das
cmp
jae
jg
adc
mov
mov
add
add
mov
mov
popa
pop
adc
inc
adc
pop
mov
and
fnstsw
xchg
bound
sbb
xor
xchg
xchg
add
sti
ja
jmp
jbe
mov
or
dec
and
cmps
ins
popf
in
gs
adc
cmp
hlt
and
sub
cdq
leave
jmp
pop
push
outs
cmp
arpl
inc
or
test
inc
mov
call
fwait
outs
inc
and
xchg
dec
aas
inc
retf
xor
sub
mov
jecxz
push
leave
jmp
sub
mov
lods
lods
stc
pusha
adc
cmp
mov
inc
mov
jge
(bad)
fdiv
fmul
jle
test
cmp
inc
mov
and
cs
sub
aas
in
pop
or
sbb
dec
pop
fsub
xlat
inc
pop
sar
rol
pop
mov
or
aaa
fmul
jp
or
mov
test
adc
repz
mov
push
mov
arpl
jbe
adc
dec
dec
add
dec
push
xor
add
inc
jnp
fwait
stos
sub
add
push
ss
mov
or
in
and
icebp
gs
or
xor
mov
mov
and
mov
aaa
jbe
mov
lea
shl
mov
scas
mov
inc
mov
into
retf
pop
cwde
popa
mov
and
mov
ret
out
pop
dec
lahf
cmp
xchg
movs
sbb
cdq
cmp
shl
push
mov
ja
sti
mov
jno
xor
adc
pop
pop
pop
jg
int
aad
sbb
mov
(bad)
jmp
mov
pop
(bad)
bound
outs
icebp
movs
cmps
outs
sub
fsubrp
pop
dec
lods
sub
test
fild
movs
movs
enter
or
into
sub
sub
lods
add
loop
es
in
or
cwde
mov
inc
mov
ja
jmp
inc
push
jns
test
jo
mov
and
and
inc
xchg
push
jmp
cmc
push
or
aaa
mov
dec
push
out
adc
add
or
push
js
xor
imul
dec
or
push
inc
xor
enter
(bad)
xchg
lea
mov
(bad)
je
dec
inc
inc
cmp
dec
call
and
mov
lds
mov
cmp
aas
lods
cli
adc
mov
inc
clc
pop
cmc
mov
sub
test
jno
clc
sub
hlt
jns
repnz
imul
ja
xchg
pop
sbb
retf
hlt
mov
mov
jl
popf
mov
lock
sub
push
dec
bound
cmp
fld
stc
inc
hlt
rol
push
or
push
loopne
adc
fiadd
movs
hlt
or
cmp
jae
cmp
pop
jb
xchg
dec
add
test
pop
xor
jl
icebp
jns
xchg
imul
ins
mov
ins
iret
push
push
(bad)
repz
cmp
movs
(bad)
pop
das
adc
mov
push
or
mov
imul
loop
and
mov
clc
xor
mov
jg
sub
lea
lds
mov
sub
outs
pop
add
add
mov
ins
xchg
cmp
mov
xchg
arpl
retf
xchg
or
pushf
out
leave
mov
ds
mov
repnz
xchg
mov
(bad)
(bad)
jg
je
sbb
lahf
and
mov
cs
xor
sbb
inc
or
loopne
adc
xchg
shr
lea
mov
push
out
mov
ds
mov
add
shl
sub
inc
sti
jp
scas
addr16
push
mov
pop
cmp
fcmovbe
xchg
cmps
adc
scas
movs
std
lods
out
fisttp
or
jbe
icebp
retf
pop
cmps
dec
lock
inc
or
or
pop
sub
in
call
xor
push
movs
imul
jmp
icebp
out
inc
cmp
aaa
mov
mov
out
imul
scas
popa
add
jbe
dec
out
mov
xchg
mov
std
xchg
test
dec
jmp
cmps
sbb
mov
clc
ror
push
stos
out
call
leave
clc
retf
cmps
add
(bad)
hlt
mov
pusha
iret
dec
scas
outs
and
daa
lds
mov
jae
mov
sub
jnp
(bad)
xchg
cmp
jns
popa
cmp
cmps
pop
cs
test
(bad)
and
in
and
fcomi
jmp
bound
leave
mov
push
bound
js
shr
jmp
jg
cmps
enter
jmp
clc
cmp
or
js
xor
and
cmp
jge
cs
jno
mov
xor
pop
cwde
pop
jo
mov
cmp
shl
stos
popf
adc
retf
add
jge
stc
fucomp
aaa
mov
jbe
dec
jge
push
out
sbb
xor
pusha
push
dec
pop
pop
rcr
cmp
daa
mov
outs
pop
fdivr
cwde
xor
cmps
jbe
mov
xor
mov
(bad)
clc
push
add
push
mov
add
xchg
xchg
xchg
das
iret
inc
mov
mov
cmps
or
mov
outs
jbe
or
cli
mov
ja
push
cmp
test
pusha
inc
xor
bound
dec
pop
xor
out
add
cwde
cmp
xchg
adc
xchg
(bad)
clc
mov
jmp
or
loop
ins
int3
push
jno
(bad)
jg
adc
inc
(bad)
jmp
test
ficom
cld
mov
jge
push
data16
or
out
mov
test
mov
in
out
or
adc
mov
shr
push
sahf
or
mov
pushf
repz
cwde
push
or
cwde
mov
mov
pop
xlat
nop
jp
das
adc
fdivp
mov
fmul
add
ins
int3
and
aam
nop
lock
xor
cmp
outs
cwde
ds
bound
repz
push
mov
and
test
sti
mov
ja
hlt
sub
pop
jnp
sbb
popf
adc
fs
mov
add
ficomp
shl
xchg
add
ret
xor
cmp
pop
xchg
add
leave
inc
sub
in
ins
sub
mov
inc
mov
xor
cli
cmp
sub
xor
out
push
addr16
jnp
scas
push
jnp
xor
xchg
mov
and
ror
test
(bad)
les
jae
ret
movs
xor
retf
push
cmp
add
ffreep
inc
into
push
clc
add
test
and
hlt
mov
add
jno
adc
lock
fcomp
and
and
pop
adc
addr16
sub
enter
mov
mov
xchg
xlat
pop
cs
push
cdq
into
(bad)
jle
and
add
jb
mov
repz
cmp
mov
fist
lods
nop
pop
push
pop
pushf
xchg
stc
das
stos
cmp
jecxz
xor
rcl
pop
rcl
xchg
cld
shl
inc
xor
(bad)
cmp
or
addr16
sar
aam
cmc
xor
pop
aam
mov
popf
test
mov
cmps
mov
mov
and
je
shl
sbb
dec
jle
scas
pop
cmp
dec
fnstenv
sbb
mov
cmp
mov
std
lods
push
imul
call
and
popf
rol
dec
mov
ss
push
aas
loope
sub
mov
test
add
aas
and
inc
inc
ins
xchg
and
les
(bad)
scas
and
out
xchg
je
mov
cmp
fistp
push
cs
xchg
out
test
daa
add
cmp
pop
mov
xchg
stc
xor
xchg
inc
fild
inc
std
sub
scas
das
pop
add
fwait
ror
bound
inc
add
prefetch
dec
sbb
out
inc
int
sub
fnstenv
ss
xchg
adc
sbb
xor
leave
std
mov
je
aam
daa
movs
pop
inc
cmps
iret
iret
in
jecxz
mov
rcr
aas
xchg
repz
rcr
inc
xor
mov
jbe
xor
neg
(bad)
xchg
add
xchg
mov
movs
or
jbe
mov
retf
(bad)
pop
add
leave
xlat
test
das
sub
add
jge
movs
mov
sub
retf
popf
push
jnp
inc
sbb
xchg
mov
daa
and
(bad)
xchg
mov
xor
pcmpgtw
push
sbb
mov
daa
jae
inc
jne
push
sbb
retf
cwde
ret
jmp
push
clc
fldln2
push
fs
fcomp
shl
and
in
out
lahf
jl
cmp
mov
jns
ret
sbb
(bad)
scas
mov
les
stos
mov
das
test
les
add
pushf
fwait
hlt
icebp
cmps
fimul
repz
xor
mov
lds
lods
dec
cmp
scas
push
mov
mov
clc
jmp
mov
and
sub
out
lock
daa
scas
adc
pushf
xchg
sub
mov
aad
cmp
push
ds
(bad)
sub
sar
add
rol
cmp
cli
cmp
add
test
mov
std
ds
jne
sub
daa
sbb
xchg
movs
(bad)
xor
cli
sub
(bad)
into
dec
cwde
add
sbb
sbb
popf
ror
retf
int3
call
ins
push
pop
xchg
shl
mov
shr
jg
clc
lock
push
outs
sbb
mov
fbstp
push
ins
sub
and
add
fdivr
add
sub
in
dec
mov
sbb
loop
adc
mov
push
scas
or
xchg
cdq
pop
(bad)
lea
xor
inc
or
shl
dec
jle
movs
mov
add
(bad)
cmp
sub
je
or
shl
fwait
sub
out
mov
ror
or
and
lea
jmp
xor
mov
loopne
cdq
mov
add
nop
test
pop
add
fcom
in
cwde
mov
js
popf
je
cmc
or
call
xchg
inc
call
fidivr
xor
add
ins
mov
es
jb
or
sub
fadd
pop
ins
lahf
sbb
mov
mov
sub
fdivr
xchg
mov
fldcw
cmp
lea
pop
stc
js
or
sub
movs
lock
inc
pop
test
mov
call
adc
pop
jecxz
fadd
lods
inc
push
sub
jbe
ror
adc
add
mov
ds
jns
pop
imul
mov
dec
ja
sbb
inc
stos
xchg
ret
(bad)
sahf
pushf
or
lahf
scas
cmp
mov
jnp
cmp
test
xor
add
jp
adc
(bad)
cwde
xchg
mov
or
and
jne
scas
cdq
xchg
in
ficom
aad
outs
mov
and
inc
xchg
mov
pushf
sub
fs
jmp
fstp
iret
aam
or
pop
(bad)
adc
inc
(bad)
cld
add
cmp
add
shl
mov
in
add
sub
scas
xor
in
in
cmps
lods
leave
stos
fsub
sbb
ret
push
test
inc
ret
mov
icebp
call
outs
mov
popf
inc
dec
xor
inc
outs
cmp
xchg
mov
add
jl
bound
retf
dec
add
mov
or
es
jl
sbb
pop
test
sbb
pop
and
jmp
xor
rol
out
push
mov
(bad)
mov
dec
adc
jmp
push
xchg
cli
(bad)
daa
dec
inc
out
sahf
mov
out
mov
add
fldenv
jmp
xchg
les
xchg
pusha
ins
and
mov
jmp
xor
push
and
pop
lock
retf
and
xor
push
inc
(bad)
out
out
stc
xchg
or
inc
inc
pop
pop
xor
pop
aas
jae
cmps
cdq
scas
xlat
inc
gs
stc
ficom
ins
inc
push
test
scas
lds
repz
mov
xlat
and
mov
out
or
pop
jmp
add
ins
enter
jno
push
dec
adc
(bad)
or
or
xchg
sbb
sub
or
fs
call
and
icebp
je
sahf
cmc
push
cs
es
dec
test
xchg
jmp
add
mov
dec
push
jg
test
mov
push
sbb
lea
cmp
ret
dec
mov
push
jne
xchg
fstp
mov
icebp
or
pop
fiadd
inc
jle
outs
fnstenv
mov
outs
pop
int
adc
mov
repnz
lahf
dec
add
(bad)
jl
mov
int
pushf
outs
outs
xchg
push
pushf
test
inc
mov
data16
nop
mov
test
xchg
dec
js
xlat
cmp
mov
mov
or
jge
jno
mov
stos
in
sub
xor
cmp
add
dec
mov
lock
std
cdq
sub
dec
stc
jge
jmp
adc
sub
push
mov
inc
jae
lock
test
not
movs
cmp
call
outs
ret
mov
mov
je
gs
(bad)
sti
xchg
dec
or
pusha
mov
sbb
ret
jmp
jge
add
jle
xlat
das
mov
fwait
retf
cmp
daa
jle
inc
push
test
pop
imul
ins
ja
(bad)
mov
jnp
jp
and
and
bound
(bad)
pop
mov
loop
mov
fwait
xchg
dec
int
cli
jmp
jge
pop
sub
enter
add
pop
push
xchg
mov
fistp
in
movs
outs
or
dec
fild
pop
stc
retf
pop
pop
pop
or
inc
repz
icebp
arpl
jg
add
popa
sub
loope
lds
mov
movs
push
sbb
sub
and
mov
jno
test
gs
push
jp
jbe
xchg
(bad)
jnp
sub
(bad)
shl
jg
in
loopne
jmp
cdq
ret
fs
das
loop
sti
(bad)
retf
lea
mov
xor
xor
sub
jns
fdiv
ins
lds
aam
inc
not
push
jne
push
jb
lock
ret
mov
lock
ds
and
jbe
es
ror
inc
dec
nop
mov
lds
mov
outs
in
gs
outs
pop
xchg
pop
leave
pop
pop
or
clc
jecxz
movs
cdq
retf
sar
mov
sub
jae
outs
sub
jmp
mov
stos
fisttp
ror
mov
popf
mov
xor
enter
jg
mov
add
xchg
loop
dec
(bad)
loope
aaa
aad
sub
stos
pusha
jmp
div
inc
pushf
sub
inc
loop
jno
add
push
xchg
lahf
in
inc
jmp
jae
adc
pop
fwait
ins
mov
cmps
push
or
mov
xchg
jmp
daa
popf
mov
imul
pop
jmp
ror
pop
sub
mov
pop
fild
jmp
es
dec
xor
stos
and
pusha
es
add
pop
jl
push
sub
mov
mov
mov
inc
lods
sahf
and
cs
sbb
sub
repz
lock
dec
pushf
mov
xchg
add
hlt
les
imul
fist
fwait
call
jg
add
jg
dec
xor
mov
push
sti
push
xor
imul
dec
jo
lods
pop
enter
rcl
pop
lea
sub
jbe
fist
loop
les
(bad)
adc
add
inc
or
mov
out
xchg
mov
scas
jno
mov
mov
xlat
jg
or
cwde
lahf
mov
dec
mov
xor
ins
retf
push
add
xchg
retf
fisttp
test
call
fisttp
inc
js
pusha
xor
add
call
mov
outs
in
icebp
(bad)
sub
mov
(bad)
cwde
stos
scas
cmps
addr16
pop
cmps
cmp
rol
das
mov
dec
fild
mov
out
movs
pop
sub
jnp
pop
pushf
or
xchg
mov
outs
pop
bound
retf
mov
into
jno
retf
sbb
inc
fcom
fld
and
adc
out
mov
or
and
lock
jbe
mov
inc
fsubr
push
lds
mov
inc
push
into
cmps
and
data16
or
mov
mov
sub
dec
shr
add
xor
xchg
xor
popf
arpl
test
stos
icebp
xor
lods
add
jecxz
mov
xchg
jge
inc
push
mov
mov
mov
es
xchg
mov
aaa
push
jo
add
das
out
ins
(bad)
les
fistp
xchg
jmp
(bad)
adc
jne
loop
inc
popf
mov
pop
or
cs
adc
sbb
mov
std
dec
rol
sbb
mov
mov
mov
lock
ror
lods
push
dec
xor
fimul
in
cmps
rcr
mov
pop
es
test
sbb
mov
mul
mov
sbb
mov
(bad)
adc
adc
adc
jg
sahf
fisub
mov
in
jno
fcmovnu
imul
out
mov
pop
jb
movs
add
jecxz
xchg
and
mov
in
fucomip
sub
mov
movhps
outs
scas
pop
mov
adc
arpl
inc
aas
outs
mov
adc
aad
and
jb
ins
xchg
xchg
test
mov
call
mov
push
mov
repz
jp
repz
mov
sub
stc
push
push
mov
dec
add
inc
jmp
or
cmp
arpl
es
mov
pop
pop
sbb
pop
xor
dec
push
pop
test
jmp
ja
das
sbb
push
cdq
pop
inc
repnz
push
shl
ret
sub
mov
ss
popf
rcl
fnstenv
loope
loop
lods
mov
sahf
pop
ins
cs
jmp
retf
in
mov
lods
cmps
pop
cli
jnp
xor
(bad)
inc
xor
push
mov
jmp
cmp
(bad)
fsubr
mov
ins
jnp
sub
pop
xor
jnp
sub
pusha
pop
and
mov
mov
mov
add
dec
mov
fwait
push
idiv
in
mov
cs
in
(bad)
pop
aas
sub
and
jg
cwde
adc
mov
(bad)
retf
add
jae
(bad)
cmps
push
sub
cwde
ds
sbb
xor
enter
xchg
test
ins
pop
shl
pop
mov
into
pop
and
mov
shl
jl
addr16
pop
scas
stos
push
pop
cmp
and
mov
add
mov
dec
aaa
outs
push
sub
ins
pusha
mov
ror
cmp
mov
repz
(bad)
jbe
xchg
faddp
mov
scas
cmp
mov
mov
jo
dec
mov
in
lea
fisubr
outs
cli
dec
mov
cmps
inc
scas
jp
dec
aaa
cmps
movs
stc
dec
and
aas
repnz
aaa
call
xchg
outs
add
leave
enter
xor
fldenv
xchg
mov
lea
jmp
cmps
div
aas
dec
int3
lods
aas
sub
fidivr
test
fcmovne
(bad)
mov
(bad)
loope
div
pushf
adc
sti
call
outs
cmp
pop
xchg
stc
inc
movs
or
sbb
aam
(bad)
sbb
mov
pop
mov
(bad)
sub
repnz
mov
(bad)
and
sahf
fisttp
push
pop
shl
shl
stos
shr
sar
mov
pop
sub
ins
rcr
das
call
add
ret
aas
not
xchg
sub
jg
dec
subps
mov
xchg
pop
aaa
and
pushf
mov
sbb
jne
stos
stc
call
cdq
and
xor
cwde
in
aam
xor
icebp
push
add
dec
mov
cmp
enter
xor
sub
popa
jno
add
push
xchg
xor
arpl
xchg
stos
test
cmps
aam
mov
add
stos
xchg
sar
hlt
adc
scas
fst
nop
fucomip
fincstp
pushf
push
test
and
mov
ss
dec
jmp
bound
push
cmp
xlat
in
and
shl
ins
push
mov
jne
leave
sub
sub
imul
pop
into
dec
push
mov
pop
mov
pop
inc
(bad)
adc
cwde
fiadd
sbb
or
repnz
cmp
pop
xchg
pop
mov
add
and
inc
js
cmp
dec
popf
jmp
mov
mov
xor
movs
cmps
mov
xlat
jmp
and
adc
ret
retf
push
push
out
cmps
adc
mov
and
fdivr
push
push
adc
jns
adc
jmp
pop
in
xor
loope
fs
jg
cmps
add
hlt
mov
cmp
add
aaa
push
sub
jnp
or
sahf
push
ins
adc
or
pushf
sar
or
xchg
mov
inc
lahf
and
mov
xor
jno
out
xor
out
mov
jmp
mov
add
pop
and
jnp
cwde
mov
scas
into
inc
mov
adc
push
jp
jns
cmovae
cmp
dec
dec
jl
adc
fcomp
aas
shl
push
sbb
push
adc
test
and
pop
pop
(bad)
scas
mov
adc
mov
arpl
pop
mov
mov
fsub
jne
sub
into
shr
mov
fiadd
jnp
adc
mov
shl
inc
idiv
pop
jno
xchg
cs
ins
mov
int
cwde
lods
mov
hlt
mov
or
push
jg
lock
mov
movs
xchg
jle
aad
aaa
sub
push
jp
sub
into
das
shl
daa
mov
ins
inc
cwde
xlat
repnz
test
push
je
xlat
int3
mov
sbb
sub
push
jg
enter
sbb
sub
(bad)
movs
jmp
xor
xor
data16
out
pusha
int
xlat
pop
push
sar
sub
es
pop
mov
lds
dec
bound
xchg
fisttp
clc
jb
cmps
shl
xchg
mov
sbb
sub
imul
ss
or
jbe
ds
or
retf
arpl
push
push
push
inc
fcomi
daa
rep
test
jbe
es
push
push
or
mov
add
sub
leave
fisttp
push
xlat
xor
jbe
shl
inc
cmp
and
xchg
sbb
cmc
out
mov
mov
mov
outs
stos
push
pushf
test
cli
(bad)
shl
call
push
lds
or
mov
mov
and
xchg
fld
in
push
(bad)
jmp
xchg
push
pop
lock
push
pop
push
in
push
adc
int3
adc
daa
addr16
push
stos
ds
(bad)
push
sti
jmp
mov
jg
hlt
bound
xlat
sub
jne
inc
imul
pop
mov
int3
call
in
xchg
(bad)
dec
aam
fs
les
sbb
cmpps
inc
clc
dec
adc
iret
mov
mov
cmp
cs
movs
vaddss
jge
fwait
or
xchg
not
push
dec
into
test
scas
pop
xor
xchg
sti
cmp
inc
retf
mov
push
dec
xor
pop
cmp
or
mov
test
ja
arpl
loop
inc
mov
xor
out
jecxz
fdiv
sbb
mov
adc
fwait
push
sbb
xor
test
adc
push
sbb
sbb
ins
inc
scas
es
std
bound
stos
test
test
cmp
pop
pop
fdiv
clc
pop
sub
sub
(bad)
sub
pop
fadd
jmp
mov
add
pusha
push
retf
shl
jns
mov
lds
mov
jl
or
cmp
adc
popf
jns
je
jbe
pop
jb
jbe
jne
dec
mov
and
ss
inc
into
add
push
pop
mov
iret
cmp
xchg
pop
cmp
inc
adc
fiadd
xchg
mov
arpl
adc
pop
fcmovu
jno
mov
leave
jnp
xchg
xor
sahf
jmp
mov
xor
cmps
adc
or
push
mov
sub
(bad)
stos
or
ficomp
mov
inc
stc
pop
repz
pop
or
fdivr
mov
mov
sti
mov
xchg
inc
(bad)
in
jl
pop
xchg
rcr
retf
ret
dec
xchg
in
xchg
sbb
les
jle
sahf
pop
retf
in
cmp
mov
jmp
test
sub
gs
lods
rol
outs
mov
sub
jnp
ss
jl
scas
push
test
(bad)
and
push
test
push
loop
inc
sbb
add
adc
dec
inc
sti
mov
dec
inc
popf
push
dec
scas
addr16
jmp
cs
jmp
push
jno
and
push
fbstp
dec
mov
out
xchg
sub
jno
dec
int
mov
xchg
jb
pop
fwait
pop
nop
neg
aad
mov
mov
ret
jns
add
jo
sub
mov
iret
mov
nop
mov
inc
scas
pop
gs
jmp
jno
push
inc
xor
sub
popf
cmps
cli
lods
push
push
add
push
imul
bound
lods
push
mov
add
and
outs
xor
clc
(bad)
pop
fwait
xchg
(bad)
sbb
loope
pop
push
and
and
aam
mov
cmc
outs
add
mov
inc
sub
rol
sti
push
cwde
pop
mov
adc
xor
lods
pop
sbb
xor
das
and
(bad)
cli
mov
pop
or
jae
push
cmp
mov
les
loopne
pop
xchg
or
xchg
aam
push
jecxz
add
or
jb
les
inc
mov
jle
aad
pusha
mov
and
pop
cmp
mov
mov
sub
push
cmp
inc
packssdw
jge
clc
cmp
adc
sbb
inc
(bad)
cmp
fs
out
loopne
adc
dec
cmps
sti
and
(bad)
(bad)
pop
mov
cmc
jns
pop
enter
pusha
loopne
or
mov
out
(bad)
mov
fisubr
push
icebp
pop
adc
sub
cmovge
pop
in
xchg
mov
mov
cmp
mov
sti
sbb
repnz
div
or
sub
and
dec
mov
and
pop
jg
and
sub
lea
imul
je
pop
adc
imul
xor
add
inc
aaa
add
lods
sbb
xchg
dec
adc
and
push
inc
sub
enter
xchg
sub
jbe
pop
push
xchg
clc
inc
mov
jle
movs
xor
xor
fldenv
(bad)
cmp
inc
popf
add
sbb
test
pop
fidivr
mov
xor
add
rcl
daa
iret
or
fbstp
jo
rol
push
xlat
out
sar
push
xor
iret
jb
sub
dec
jmp
inc
retf
popf
jae
imul
shl
mov
xlat
push
dec
push
jmp
xor
int3
ss
or
or
xchg
pop
and
jge
dec
xchg
iret
jbe
lea
add
mov
sbb
add
add
xor
adc
retf
stos
movs
outs
inc
retf
xor
xor
add
mov
sbb
popf
neg
test
fnsave
mov
inc
lea
out
push
fldenv
mov
icebp
outs
je
pop
xchg
pop
loope
and
sbb
icebp
xchg
add
add
jmp
mov
pmaxub
pcmpeqd
aas
ins
scas
fimul
push
cmps
rcl
push
pop
push
inc
shl
adc
retf
arpl
das
repz
aaa
mov
xchg
sub
cs
mov
bound
in
xchg
stc
pop
aaa
enter
jmp
cmps
add
push
mov
adc
mov
push
push
icebp
cmp
icebp
jbe
jae
pusha
cmps
xor
loope
fdiv
int3
ror
mov
test
imul
mov
xor
xchg
je
add
ins
xor
sub
popf
cdq
jbe
idiv
(bad)
out
jl
mov
outs
or
adc
enter
or
fadd
rol
in
std
std
arpl
sbb
push
mov
test
std
lock
fisubr
xchg
dec
jmp
sub
std
fist
sub
jge
mov
je
(bad)
mov
xchg
imul
push
xor
(bad)
pop
cwde
jge
push
xchg
jnp
mov
mov
jo
inc
and
jo
sar
je
or
xor
xchg
mov
jecxz
(bad)
mov
xor
clc
(bad)
xlat
sub
mov
push
mov
adc
sub
int
das
jae
xchg
(bad)
jns
icebp
push
into
lds
or
and
lods
xor
sbb
inc
mov
in
fsubr
loope
scas
and
idiv
xor
mov
push
push
ss
or
arpl
pop
cmps
sbb
gs
movs
fdivrp
cmp
std
cdq
cmp
int
xchg
ins
inc
xor
and
or
and
pop
lds
add
test
mov
movs
(bad)
and
popf
fcmovbe
dec
std
stos
cmp
add
mov
push
mov
or
or
mov
imul
out
add
stc
adc
jae
mov
(bad)
ins
int
mov
jmp
std
sbb
inc
mov
sti
fwait
je
sbb
push
pop
cmp
push
sub
push
pop
lock
(bad)
dec
icebp
and
sub
out
cdq
ror
jl
cmp
xchg
ins
(bad)
pop
test
in
sub
xchg
mov
(bad)
(bad)
pushf
and
pop
push
aam
lods
xchg
adc
outs
in
jne
mov
gs
inc
fidiv
imul
jns
pop
sub
sub
mov
hlt
adc
adc
gs
mov
mov
sbb
mov
fstp
aam
push
cmc
and
sti
xor
les
fimul
test
dec
pop
adc
jo
dec
mov
push
sbb
mov
imul
es
cwde
(bad)
cmp
dec
(bad)
mov
dec
leave
inc
jne
js
cdq
outs
cld
bound
xchg
mov
test
movs
pop
(bad)
mul
call
stos
shr
sar
rcl
push
push
je
popf
arpl
bnd
pop
mov
jp
(bad)
sbb
adc
mov
retf
sbb
sub
jge
jg
test
sub
loopne
dec
aad
call
mov
ins
or
xchg
stc
imul
xchg
push
sar
clc
rcr
push
push
sub
scas
hlt
mov
pop
xchg
or
mov
test
and
ds
fcmovu
add
xor
sub
loop
pop
lods
mov
out
daa
jle
xchg
ins
fneni(8087
xchg
fadd
popf
fild
jge
dec
in
and
pop
iret
xlat
aas
hlt
nop
inc
rcr
mov
mov
pop
mov
icebp
jge
or
sar
imul
pop
sub
xchg
mov
ret
mov
mov
popf
jmp
imul
cmp
cmps
and
push
out
cmp
mov
leave
and
adc
or
mov
mov
sbb
retf
icebp
loopne
xor
mov
mov
push
mov
mov
cmps
pop
push
sub
xchg
pop
jbe
dec
cmc
xchg
sub
and
sbb
shr
mov
dec
pop
jns
jns
jmp
mov
mov
jnp
in
push
inc
and
pop
jl
push
mov
test
or
outs
cwde
nop
push
call
sub
or
int3
lahf
ins
je
or
jp
push
pop
add
sahf
mov
xchg
jae
mov
cld
ror
(bad)
out
neg
fs
pop
jae
add
xlat
xchg
fcmovu
push
ret
out
stos
jge
xor
dec
or
lahf
test
mov
cmp
cld
ins
mov
fld
inc
adc
pop
mov
rcl
out
ins
jle
out
in
test
cdq
push
inc
aas
cs
(bad)
addr16
sub
int
pcmpeqd
jae
jae
jae
cmp
xor
addr16
shl
sub
out
pop
xlat
pop
jecxz
fiadd
sbb
push
sar
sub
xchg
sub
scas
xchg
das
push
sbb
lea
mov
leave
mov
mov
cmp
inc
cmp
adc
push
sub
and
mov
mov
aad
push
sbb
sahf
test
or
mov
leave
in
dec
call
jb
sub
mov
mov
sbb
mov
call
inc
fisubr
and
jl
rcr
ret
loop
mov
pop
div
jmp
pop
out
(bad)
iret
push
hlt
das
push
scas
mov
mov
rcr
add
or
shl
or
js
test
cmp
js
mov
pop
add
ins
mov
xchg
jg
xchg
ret
aaa
pop
in
add
inc
add
rcl
mov
push
lea
or
jmp
lods
sub
les
or
adc
(bad)
adc
add
sub
fstp
int
dec
jmp
mov
fadd
dec
ret
pop
es
xchg
cmp
scas
mov
cs
cmps
jnp
test
sbb
mov
sub
mov
ins
ja
ficom
dec
pop
mov
push
repnz
lds
enter
xchg
popf
movs
pop
js
mov
mov
int3
push
pop
sub
jl
movs
mov
enter
sbb
mov
sub
in
int
mov
xchg
in
jl
rol
mov
ins
fisttp
mov
sbb
in
mov
sahf
xchg
js
mov
push
sub
(bad)
jb
pop
mov
add
adc
(bad)
inc
hlt
aad
xor
xchg
adc
mov
stos
mov
es
mov
mov
popa
lods
pusha
sar
and
and
add
cmps
dec
(bad)
adc
xchg
es
sbb
ror
fsubr
pop
inc
test
dec
(bad)
cli
push
sbb
add
movs
ret
mov
sbb
push
arpl
into
or
pusha
ins
mov
nop
stos
xchg
addr16
jg
sub
js
cmp
cs
mov
or
jge
pop
cmp
les
adc
mov
push
sub
jmp
shl
popf
and
mov
sub
outs
and
movs
sti
push
dec
pop
push
or
mov
pop
pop
adc
shr
sbb
jmp
push
inc
ror
cmc
loopne
xor
retf
jo
ins
jo
add
test
imul
jne
cmp
int
fild
inc
dec
aam
mov
mov
adc
std
shr
xchg
ins
ret
shl
mov
xchg
mov
and
mov
mov
add
out
push
or
scas
push
fcomp
addr16
or
jns
not
xchg
jge
inc
push
gs
repnz
or
ss
enter
push
xchg
pop
xchg
out
jecxz
movs
jno
xor
xchg
ins
adc
(bad)
mov
jnp
lea
jle
enter
push
adc
imul
repz
jae
xor
or
jg
sbb
sub
push
jp
dec
push
mov
mov
stc
adc
imul
(bad)
repz
js
lahf
popf
mov
add
js
setl
je
cmp
inc
fmul
retf
fisub
ss
movs
fild
mov
jne
mov
cmp
in
adc
out
mov
push
xchg
dec
aad
aaa
iret
mov
sbb
nop
dec
dec
push
loopne
and
test
jo
imul
aaa
call
lea
sbb
hlt
movs
lods
mov
adc
jmp
loope
stos
cmp
xchg
pop
fsub
sti
fs
pop
stos
pop
jmp
inc
iret
push
scas
jg
popa
push
inc
(bad)
mov
cmp
mov
adc
lock
push
dec
jbe
mov
cmps
les
inc
(bad)
pop
push
dec
cmp
sub
cmps
push
stos
cmps
popa
xor
sbb
imul
adc
and
xchg
adc
aam
push
cmp
pushf
jnp
gs
je
enter
push
cmps
push
mov
gs
mov
mov
frstor
add
pop
dec
xchg
mov
aad
sub
and
pushf
aam
cmp
mov
xor
lods
popf
add
int
lods
inc
sub
stos
cmp
xchg
fs
mov
push
fisubr
repz
test
xchg
lods
(bad)
lods
mov
mov
jg
call
dec
adc
add
lea
mov
ins
pop
pop
push
jno
daa
cmp
mov
jge
push
cmps
stos
and
add
ficom
shl
cli
sub
stc
stc
imul
mov
cmp
lods
jns
sbb
mov
call
(bad)
or
add
in
nop
sub
add
xor
scas
mov
inc
iret
test
xchg
jecxz
adc
or
out
mov
cdq
mov
dec
or
stos
mov
psadbw
push
outs
clc
sub
push
add
loopne
sbb
imul
cmps
adc
into
sbb
xchg
pop
call
popa
out
test
or
retf
out
jne
push
adc
call
out
stos
test
jmp
sbb
mov
(bad)
sahf
fabs
cmp
loopne
and
call
cwde
jmp
arpl
push
add
lahf
adc
fs
push
ds
into
add
and
mov
inc
jbe
sbb
mov
xor
fld
test
mov
fimul
mov
stos
xor
nop
mov
push
nop
mov
mov
dec
pop
sti
and
stos
or
xlat
es
cli
cmps
sub
loopne
mov
xchg
add
adc
jl
movs
jo
leave
pop
adc
mov
mov
adc
mov
hlt
aas
xor
inc
retf
data16
cmp
rcl
bnd
mov
int
mov
(bad)
inc
or
inc
or
ins
int
sahf
xor
inc
mov
pop
sub
icebp
inc
jno
int
jne
mov
outs
call
ficom
jae
fiadd
mov
jnp
mov
push
rcl
mov
lds
int
mov
and
jl
mov
outs
sub
inc
nop
cmp
jle
(bad)
fcomp
jg
(bad)
mov
scas
mov
in
dec
ret
or
mov
ja
ins
stos
pushf
sub
pusha
cs
loop
rol
adc
push
sbb
cmp
or
pop
mov
sub
ss
xor
sub
sub
dec
inc
iret
punpckhdq
aaa
jno
sub
sahf
imul
sub
jle
iret
(bad)
xor
xor
inc
mov
mov
in
ret
test
test
cmp
cmp
clc
loop
lea
xor
stc
fs
fcmovne
jl
mov
into
das
ja
jae
push
ins
in
stos
stos
arpl
in
push
sbb
stc
jle
push
jmp
xchg
nop
dec
jecxz
inc
and
movs
pop
and
mov
and
add
(bad)
push
test
jle
test
mov
pusha
leave
sbb
dec
repz
(bad)
aad
lahf
mov
mov
xor
aas
sbb
out
sbb
xor
cmc
cmp
out
fsubp
pop
sub
aad
adc
int
aas
pop
pop
mov
push
and
adc
add
not
push
mov
pop
cs
push
mov
outs
dec
xchg
xchg
pushf
and
push
loop
dec
mov
mov
lds
jns
xor
cs
pop
xchg
xor
ss
(bad)
push
sbb
cmp
mov
push
mov
and
mov
into
cwde
mov
mov
mov
lock
push
inc
stos
add
movs
test
fdiv
lea
push
cmp
push
inc
movs
pop
push
lods
mov
(bad)
cmp
pop
push
cld
adc
ret
scas
and
jge
pop
push
mov
aas
stos
sar
retf
stos
enter
mov
fcom
je
inc
mov
ds
jecxz
mov
jo
dec
or
push
icebp
xchg
fwait
xor
and
add
xor
es
inc
cdq
call
cmp
in
daa
ja
mov
mul
sbb
jo
dec
inc
mov
jnp
cld
fcomp
(bad)
mov
mov
fs
data16
push
xor
iret
in
sbb
inc
dec
xor
fisttp
inc
cmp
mov
mov
mov
lea
fs
bound
mov
rcl
lahf
dec
lds
xor
mov
add
(bad)
cld
cmp
enter
aas
aad
push
pop
or
pop
add
pop
cli
(bad)
imul
xor
lahf
sar
pop
mov
push
xchg
add
cmp
ins
push
mov
lods
mov
test
out
ins
mov
sub
cmp
pop
aad
and
push
ret
outs
lea
fisubr
xlat
mov
add
dec
mov
call
sub
dec
enter
lds
mov
cmp
pop
jle
setae
fisttp
dec
js
nop
aad
lahf
movs
mov
cmp
sub
or
adc
rcl
xchg
jge
int3
popf
nop
pop
inc
int
pop
cs
std
je
or
lock
pop
adc
and
and
push
push
xor
xor
mov
call
mov
add
rcl
in
movs
outs
pop
(bad)
pop
inc
cmp
xchg
sti
xchg
loope
out
cld
scas
inc
ret
leave
xchg
imul
ins
jb
jb
das
add
push
sub
jbe
mov
sbb
lods
jns
sahf
fnstcw
js
adc
pusha
retf
ret
ins
or
add
lahf
jg
add
mov
scas
push
pop
mov
lock
mov
mov
jl
push
cmp
push
aad
sbb
xor
lods
xlat
cmp
out
push
leave
cmp
cmp
test
outs
pop
cmc
inc
clc
cmp
cmp
jae
sbb
jae
mov
movs
inc
jp
adc
mov
push
or
fwait
out
call
div
shl
jge
shl
arpl
stos
jge
out
cmp
mov
bound
xchg
aas
add
cwde
je
arpl
pop
xor
in
out
out
pop
inc
pop
nop
sbb
cmp
mov
(bad)
outs
mov
pop
adc
out
jmp
(bad)
aas
scas
pop
xchg
pop
repz
push
pop
jae
inc
xor
imul
test
mov
adc
jp
mov
mov
shr
pop
fisttp
push
mov
mov
add
mov
lock
mov
pop
lahf
repz
or
fmul
inc
aaa
addr16
add
in
loop
add
cmp
out
and
jnp
cmp
cmp
sub
mov
outs
mov
push
xchg
mov
push
jnp
jmp
jmp
sti
(bad)
and
enter
fisttp
jg
sbb
arpl
adc
retf
(bad)
(bad)
pop
scas
out
clc
push
jp
hlt
stos
adc
scas
xchg
stc
arpl
ret
xor
in
in
adc
jb
out
jo
imul
fcmovbe
cdq
rcr
sub
loop
add
sahf
add
in
fdivr
xor
nop
cmp
dec
pop
sbb
cmps
sub
push
call
out
repnz
xchg
inc
es
ret
add
pop
add
imul
jle
fimul
inc
ins
jp
pop
mov
shl
pop
fisubr
ins
push
fwait
or
mov
push
ror
pusha
or
inc
fcmove
fidivr
push
add
or
retf
add
lds
or
test
out
mov
lods
and
mov
xchg
ficom
sbb
cmp
popa
jl
imul
cmp
mov
scas
mov
mov
cmps
mul
aas
lock
xchg
in
push
movs
adc
das
movs
(bad)
xchg
inc
jb
mov
xor
fcomip
rol
inc
pop
retf
mov
jns
adc
test
mov
pusha
adc
mov
mov
cmp
cli
dec
dec
and
xchg
mov
dec
xor
out
cmp
imul
xor
ins
shl
mov
mov
movs
dec
add
mov
les
jecxz
lock
pop
dec
out
inc
rcl
jl
pushf
add
mov
js
mov
xchg
jge
xchg
xchg
sbb
cmp
xchg
daa
mov
mov
or
ret
sbb
push
sub
sbb
and
or
add
out
popa
dec
adc
sub
mov
cmps
outs
mov
jge
(bad)
scas
dec
mov
lahf
dec
or
neg
sub
jns
addr16
pop
popf
push
xor
popf
mov
jg
in
scas
(bad)
mov
data16
add
lods
mov
mov
shl
movs
jl
inc
adc
neg
mov
and
scas
inc
cli
enter
in
jge
scas
or
hlt
(bad)
(bad)
jnp
dec
icebp
inc
lahf
sbb
cmp
imul
jmp
inc
jl
fs
jnp
pop
rcl
sbb
and
mov
leave
fdivr
rcl
adc
into
dec
or
pop
push
inc
lea
fwait
xor
ds
(bad)
in
xchg
es
mov
ficom
pop
add
xchg
sbb
jns
loope
inc
pusha
cld
fild
daa
and
and
pusha
enter
add
push
imul
scas
sub
pop
call
add
sub
inc
sub
inc
leave
outs
js
out
test
add
cdq
int3
inc
in
data16
clc
add
mov
inc
outs
std
xchg
dec
aaa
and
movs
sti
stos
aad
or
xor
pop
lahf
hlt
icebp
(bad)
fild
adc
retf
pop
dec
fiadd
int
push
rcl
cmp
test
jno
mov
pop
jmp
dec
jnp
mov
fidivr
or
mov
inc
xchg
nop
xor
jo
add
lock
xchg
add
fcmovb
and
xor
jg
jne
nop
xchg
mov
mov
mov
mov
jp
ret
adc
(bad)
cmp
dec
cmp
jns
inc
int3
lods
push
int3
xor
clc
push
retf
jb
xchg
dec
popa
pop
mov
or
je
int
fiadd
cmp
fdiv
lods
and
enter
or
cdq
std
call
cld
scas
adc
cmc
push
lahf
daa
imul
ds
add
cmp
(bad)
xlat
sbb
push
outs
adc
mov
cmps
inc
jle
test
leave
cmp
cmps
lds
jl
adc
dec
imul
cld
adc
jmp
out
jg
js
inc
or
mov
and
dec
jae
add
inc
xor
mov
inc
fmul
pop
adc
cmc
pop
rcl
mov
cmps
and
mov
xlat
inc
in
cdq
pop
data16
sub
pop
adc
loope
inc
(bad)
gs
sbb
or
stos
cmp
pushf
daa
pop
mov
or
dec
imul
inc
mov
loop
shl
cmp
fisub
stos
mov
inc
add
or
push
inc
mov
clc
sbb
ret
mov
inc
push
stos
iret
fisttp
cmps
daa
xor
(bad)
or
aam
adc
mov
push
out
out
adc
add
cmp
repz
pop
and
popf
mov
dec
data16
push
es
ds
mov
mov
and
mov
and
cmc
mov
xlat
mov
int3
call
mov
add
pushf
xchg
enter
mov
sbb
xchg
movs
call
movs
cs
mov
call
and
jno
add
repnz
ins
xchg
cwde
fwait
dec
and
mov
retf
mov
pop
gs
ret
int3
out
mov
and
fstp
sbb
loope
jno
ss
enter
fstp
test
mov
rcl
adc
and
dec
je
cmp
gs
push
cmps
inc
cmp
adc
and
push
movs
adc
jg
std
mov
cdq
and
jge
pop
arpl
mov
icebp
mov
lods
xor
mov
sahf
cmps
std
aaa
inc
inc
fsub
call
out
in
xor
(bad)
jl
pop
sub
mov
mov
outs
fisub
mov
cmp
mov
mov
cld
(bad)
bound
add
sub
mov
repz
push
lock
test
xchg
inc
mov
outs
adc
adc
dec
adc
call
mov
inc
sub
fistp
loope
sahf
dec
jbe
leave
or
stc
cmp
jge
movs
jns
dec
addr16
retf
fwait
into
out
pop
out
lods
jge
sar
or
add
mov
pop
shl
movs
(bad)
nop
das
(bad)
ss
adc
jecxz
stos
stos
sti
les
inc
fwait
dec
mov
cld
sbb
mov
and
push
test
cwde
iret
fnsave
cwde
rol
movs
or
dec
jge
cld
pop
nop
cwde
dec
xchg
add
test
mov
or
cmps
cs
call
cli
nop
push
inc
cdq
sahf
xor
cmp
cwde
pop
fld
fwait
neg
add
sub
inc
push
jecxz
ret
xchg
sbb
jb
and
aad
leave
cmp
jne
inc
add
push
iret
push
pop
aam
xor
lahf
pop
jbe
dec
pop
push
mov
push
or
xor
shl
(bad)
test
stos
jmp
inc
push
fisubr
mov
out
frstor
fwait
dec
push
in
push
out
xchg
ror
sub
mov
jns
push
stos
add
repz
nop
inc
enter
imul
xor
(bad)
xchg
(bad)
cdq
outs
fs
test
cmp
fwait
sub
(bad)
push
cmc
inc
test
test
cld
cs
add
in
js
sbb
jnp
mov
mov
or
shl
sub
movs
(bad)
ret
mov
pop
xchg
xchg
inc
cmps
mov
cmp
cdq
outs
lds
sbb
loopne
sbb
(bad)
inc
lods
mov
ins
mov
adc
mov
pop
sbb
inc
inc
xchg
mov
shl
adc
adc
jmp
(bad)
jp
pop
adc
cmc
std
ss
out
(bad)
nop
push
mov
(bad)
lds
add
hlt
lods
pusha
outs
and
lahf
imul
loop
bound
loopne
int
jo
xor
jge
sub
jle
loopne
in
in
daa
inc
stos
xor
fistp
push
xchg
dec
mov
xchg
adc
mov
push
mov
pop
ss
push
loop
retfw
cs
mov
jb
test
xchg
cmps
sbb
aaa
mov
in
in
pop
xor
call
lds
xor
and
lods
fdiv
int3
adc
sub
mov
stos
push
xchg
mov
ror
sbb
aaa
div
leave
enter
shl
fwait
rcl
sti
and
fadd
and
es
imul
mov
stc
cmps
mov
rol
sub
sahf
jecxz
cmps
popf
ins
cmp
sar
and
(bad)
aas
push
fcmovu
aas
fimul
scas
mov
sbb
pusha
inc
mov
outs
ss
pop
dec
jmp
mov
and
jmp
mov
mov
loopne
popa
cmps
cmps
std
cld
gs
and
into
clc
adc
mov
aad
push
popf
fdiv
push
or
pop
outs
mov
popf
push
push
cmp
nop
sbb
mov
ret
pop
or
mov
cmp
scas
popa
mov
lahf
push
cmp
xchg
dec
cmp
aam
sub
fdiv
and
inc
pushf
test
lods
jg
push
ins
lea
xor
adc
mov
mov
gs
leave
and
jne
in
cdq
loope
or
dec
scas
test
les
sahf
inc
les
(bad)
jp
add
sub
pop
mov
xchg
callw
daa
jno
adc
das
inc
xor
jnp
shl
je
mov
inc
sub
add
outs
loop
cmp
xchg
sub
je
mov
cdq
mov
(bad)
xchg
dec
cmps
sub
pop
mov
cs
ret
cmc
and
push
or
xor
cmp
xchg
mov
fld
rcl
std
pop
(bad)
add
jmp
push
adc
mov
outs
out
cmc
jmp
out
lahf
stos
aaa
push
or
cmp
(bad)
adc
inc
fnstcw
shl
jmp
or
sub
fcomp
aam
sub
(bad)
bound
mov
xor
inc
or
ret
imul
push
mov
mov
mov
adc
cwde
jle
in
in
stos
sbb
(bad)
call
add
test
mov
retf
(bad)
call
out
inc
pop
jae
in
(bad)
iret
push
fs
mov
outs
xchg
add
xchg
ret
jo
sar
imul
add
ret
xchg
sbb
add
scas
adc
cmc
cli
ret
fimul
pop
mov
xor
mov
mov
gs
mov
js
mov
lods
in
leave
movs
clc
mov
jp
mov
call
(bad)
jns
popa
mov
sub
daa
(bad)
jle
lods
mov
rol
dec
push
fdiv
loopne
jnp
stc
mov
nop
push
inc
stos
out
mov
ss
push
cdq
jmp
cmps
push
ret
xchg
sub
cmp
sbb
jbe
xchg
jmp
dec
pop
inc
jmp
aaa
adc
in
pop
lods
inc
pop
and
sbb
gs
(bad)
fiadd
retf
xor
fsubr
scas
(bad)
lock
adc
push
mov
loop
jecxz
adc
lods
inc
pop
test
aam
sbb
dec
jmp
mov
(bad)
cmp
popf
iret
xchg
xor
pop
(bad)
mov
mov
stc
pop
mov
adc
pop
mov
and
fucomip
int3
ins
adc
cld
push
aad
enter
push
jp
ss
mov
inc
rcr
ja
shl
(bad)
inc
test
pop
movs
push
jb
addr16
pop
xor
mov
push
shl
jnp
das
lods
push
das
cmp
into
push
push
mov
jne
ds
xor
neg
ja
cmc
lahf
jp
mov
jl
fsub
cmp
jmp
xchg
jnp
or
loop
cmp
rep
ja
(bad)
adc
adc
movs
xchg
out
ins
or
in
dec
sahf
dec
fiadd
ds
jno
jle
sbb
mov
lods
mov
mov
ret
push
mov
lea
cmp
mov
cs
push
adc
adc
cs
mul
nop
fnstcw
rcr
push
xchg
or
mov
loope
push
or
mov
xor
dec
outs
adc
ja
inc
sub
mov
ror
mov
push
test
adc
mov
inc
cdq
mov
add
iret
jg
jns
fdivr
sub
or
jl
nop
or
test
aad
sbb
push
push
add
mov
dec
jp
and
push
pop
and
add
fild
jle
add
test
int
xor
je
push
hlt
enter
cwde
(bad)
cmp
pop
inc
jo
or
div
cwde
lahf
or
cmp
sbb
cmp
(bad)
jge
out
adc
jno
or
cmp
ds
mov
pop
(bad)
mov
imul
and
repz
jbe
jp
mov
mov
arpl
jne
daa
or
xor
test
or
lods
cmps
mov
cli
leave
fnstenv
sub
fwait
jmp
lods
xchg
idiv
aam
mov
cmp
sbb
gs
sub
out
retf
dec
cmp
inc
jle
in
cli
mov
push
sbb
movs
mov
fmul
loop
or
aam
xchg
cmps
or
add
ins
popf
fadd
and
mov
cmp
movs
out
add
mov
and
dec
cmps
sub
xchg
call
nop
sub
adc
pushf
sar
stos
xor
cdq
gs
mov
dec
std
arpl
popf
sub
repnz
xchg
pushf
and
and
jp
int
mov
cmps
push
push
cmps
test
cmps
test
imul
out
xchg
lods
adc
push
push
sbb
stc
inc
push
mov
ret
rcr
cmp
inc
mov
xchg
jge
movs
(bad)
fiadd
xchg
jns
sti
es
and
in
sub
and
sub
cmp
out
xchg
mov
push
out
nop
(bad)
pushf
inc
pop
sub
sbb
fs
inc
ins
(bad)
jo
push
xchg
or
adc
cdq
sub
ins
sub
test
adc
neg
rcr
dec
outs
into
mov
mov
jnp
lock
push
lods
xchg
std
clc
push
xor
adc
cmp
sahf
into
mov
mov
push
or
bnd
sbb
xchg
sbb
outs
pushf
mov
into
push
in
and
int3
nop
iret
push
xchg
add
loopne
jno
je
repnz
and
ja
inc
sub
test
sub
mov
mov
mov
pop
loopne
std
dec
imul
ror
sbb
daa
(bad)
int
adc
fnstcw
inc
daa
pop
or
cmp
jl
mov
xchg
mov
(bad)
jmp
dec
dec
cmp
pop
add
xchg
sub
clc
sub
pusha
movs
and
(bad)
int
xor
mov
xlat
push
or
iret
or
pushf
xlat
adc
mov
xchg
mov
jmp
iret
xchg
xchg
push
dec
stos
call
and
shl
pop
and
jecxz
pop
dec
out
mov
loopne
jmp
cmp
(bad)
aas
repz
pop
xchg
outs
and
fld
or
ja
sub
jne
jb
adc
sub
cmp
nop
iret
sbb
test
stos
mov
mov
inc
mov
adc
mov
jns
ficom
xchg
mov
xchg
dec
outs
test
pop
and
mov
retf
push
adc
jnp
movs
push
mov
rol
inc
sub
add
jge
(bad)
pop
mov
adc
cmp
and
(bad)
stos
fmul
adc
out
add
push
test
fsubr
inc
xchg
ret
jp
rsm
sbb
imul
or
sar
hlt
pusha
add
test
ror
in
xchg
adc
mov
or
add
movs
ror
lods
icebp
addr16
xor
and
cmp
iret
pop
or
bound
adc
movs
in
sar
scas
xor
cld
movs
and
adc
out
in
sub
dec
enter
sti
dec
out
call
sub
jae
mov
cmps
stos
jp
push
xchg
shl
mov
adc
mov
inc
mov
jb
add
push
sti
adc
scas
xchg
jl
repnz
stc
mov
and
jle
or
sub
cmps
mov
shl
jge
adc
xchg
pop
loopne
adc
add
sbb
pop
mov
jbe
mov
retf
loop
stos
xchg
mov
ins
les
xor
cmps
ds
mov
jne
adc
adc
push
ror
dec
aam
fidiv
les
out
jmp
add
and
call
jns
cmp
call
dec
jbe
mov
or
jg
add
sbb
test
xchg
pop
(bad)
pop
sbb
dec
mov
aaa
cmps
sub
popf
mov
mov
and
loope
mov
int3
imul
dec
imul
add
fidivr
push
cmp
ja
mov
cli
add
bound
fsub
xchg
xor
pop
mov
aad
stc
pop
and
push
stos
push
movs
in
cmp
call
push
les
pop
ins
outs
leave
cmp
addr16
scas
sahf
add
lahf
and
mov
sbb
jmp
sbb
test
in
or
cmp
sub
and
fadd
movs
nop
sbb
js
or
xchg
sub
inc
in
and
push
arpl
mov
mov
push
xchg
xchg
and
add
stos
cmp
bswap
(bad)
sbb
ss
imul
clc
pushf
pop
adc
xchg
ss
jne
(bad)
enter
mov
mov
mov
dec
cmps
hlt
aaa
mul
pop
imul
ret
es
dec
adc
xchg
iret
and
xlat
lods
adc
dec
and
rcr
sar
sbb
pushf
sbb
aas
nop
loop
inc
pop
lahf
addr16
or
ja
xlat
dec
push
dec
cmp
pop
hlt
test
push
in
jmp
xchg
push
out
mov
movs
mov
mov
aad
mov
addr16
mov
inc
stc
xchg
xchg
mov
jl
cmp
ins
jo
or
sub
xchg
push
push
sub
xor
rcl
cld
ja
cmp
inc
sahf
jmp
xor
mov
retf
xchg
adc
imul
mul
stos
pop
call
aaa
or
adc
fwait
call
jns
push
inc
mov
rol
jle
into
sbb
dec
sbb
ss
and
sub
inc
cmp
and
cmp
fstp
rcr
add
add
dec
ds
cmps
call
jo
xor
adc
shl
ror
int3
(bad)
cdq
push
xor
jb
fistp
out
xchg
cdq
add
inc
push
xchg
out
jp
cmp
inc
es
js
not
pop
pop
(bad)
out
or
shr
xor
test
sub
ret
xchg
jno
fcmovnu
int
sub
xchg
mov
xchg
scas
xchg
dec
sub
mov
add
jno
addr16
and
stos
jl
xchg
iret
jmp
fisubr
mov
xor
inc
xchg
rol
retf
movs
cmp
add
pop
stc
and
pop
add
and
xchg
push
stc
mov
adc
ins
xchg
sub
mov
inc
das
call
mov
jmp
std
cmp
je
arpl
pop
(bad)
lods
xchg
push
mov
lahf
aas
dec
in
and
fdivr
dec
scas
mov
cmp
push
in
dec
cmp
adc
dec
bound
rol
xchg
cmp
mul
idiv
mov
inc
cmp
pop
test
hlt
fbstp
mov
or
stc
std
inc
push
stos
(bad)
jne
ret
gs
add
and
xchg
and
mov
xor
(bad)
nop
lock
hlt
icebp
cmp
out
cs
and
(bad)
mov
cmp
(bad)
sahf
push
xchg
ror
xchg
xor
mov
fmul
sbb
xor
sub
ins
push
xor
dec
cld
adc
(bad)
iret
xchg
fld
fcom
add
jg
rcl
push
out
mov
ficomp
popf
adc
inc
fist
jge
shl
mov
mov
adc
out
push
xchg
jno
les
pop
hlt
nop
or
pusha
int
xor
mov
or
out
add
(bad)
push
mov
and
sub
(bad)
xor
shl
cmp
push
ins
xchg
lods
mov
movs
pop
xchg
pop
sub
push
push
in
and
jno
and
stos
sub
jmp
jae
mul
sahf
fsubr
jl
mov
sti
adc
xor
adc
add
push
push
xchg
fwait
dec
repz
push
clc
repz
movs
and
cmp
in
adc
cld
push
imul
push
mov
add
pop
push
out
imul
fldcw
xchg
dec
lods
cmps
inc
int
cmp
push
bswap
dec
lea
dec
xchg
xor
dec
or
sub
retf
loopne
(bad)
retf
icebp
or
daa
outs
mov
pop
mov
hlt
data16
jns
pop
adc
fistp
(bad)
ds
popa
test
or
lea
cmp
push
jle
sbb
js
lds
je
mov
xor
mov
int3
and
mov
mov
sbb
or
adc
or
mov
jecxz
jmp
adc
jmp
into
shr
fisttp
xchg
and
dec
pop
std
jl
out
call
jge
aaa
ins
or
pop
ja
sbb
sbb
add
push
(bad)
lods
push
and
daa
or
cli
push
jb
das
sub
sub
hlt
mov
lds
pop
push
jge
push
inc
pop
cmp
in
test
cmp
jle
inc
add
in
and
pop
mov
mov
loop
or
or
sub
adc
push
mov
(bad)
imul
push
shl
fld
loopne
mov
inc
retf
div
mov
xchg
mov
adc
mov
and
cmps
es
xor
dec
jmp
and
or
cli
fucomp
in
xchg
push
pushf
rcl
cmc
test
lea
sub
adc
add
add
inc
mul
int3
or
test
mov
or
pop
ss
fwait
stc
repnz
stc
jmp
inc
cmp
mov
in
dec
out
ds
add
movs
bound
hlt
sahf
jo
fadd
xor
pop
lahf
mov
mov
dec
fcomip
jl
jle
call
sbb
xchg
push
add
mov
dec
outs
push
pop
dec
(bad)
dec
xchg
and
adc
gs
cmps
arpl
pop
or
dec
std
ror
mov
push
push
in
ins
xor
nop
hlt
popa
pop
mov
test
inc
aam
call
loope
jle
jbe
scas
sub
shr
inc
xchg
jecxz
cdq
inc
lods
scas
lock
(bad)
into
fild
ins
in
out
push
mov
or
outs
repnz
jg
mov
xchg
shr
imul
mov
mov
adc
test
pop
or
into
dec
scas
pop
cmp
sbb
icebp
imul
repz
sub
jmp
jne
(bad)
push
xor
cmp
sti
jecxz
in
cmp
mov
push
cmp
sub
adc
ret
imul
push
inc
adc
xor
push
mov
mov
mov
cmp
cmp
bound
push
retf
adc
mov
xor
fdivrp
repnz
push
xchg
aad
inc
outs
xor
cs
and
cmp
mov
cmp
faddp
and
add
test
mov
(bad)
pop
das
inc
loopne
(bad)
mov
sub
gs
dec
imul
add
dec
xchg
(bad)
dec
loopne
pusha
push
push
mov
les
jecxz
fcomp
mov
and
mov
jne
adc
jno
fiadd
and
repz
inc
push
mov
adc
mov
ror
in
mov
fadd
retf
xchg
dec
lea
test
fs
test
pop
jl
inc
xchg
(bad)
fistp
xchg
test
not
mov
mov
mov
adc
(bad)
rcl
or
pop
pop
or
(bad)
mov
mov
ret
xchg
fldcw
push
aad
mov
ficomp
fstp
mov
ret
ds
sbb
ret
je
add
xchg
popa
add
addr16
inc
xchg
scas
mov
mov
xor
jb
mov
hlt
and
xor
or
outs
cld
sbb
dec
push
(bad)
cld
into
jnp
add
add
or
jae
inc
in
mov
call
or
xchg
cli
mov
call
xor
ret
push
fwait
push
dec
mov
push
jle
out
aaa
in
xchg
pop
push
push
scas
or
sbb
jne
in
loop
fwait
sbb
or
jns
repz
jecxz
cli
xchg
add
stos
pop
pop
das
test
mov
pop
mov
or
jg
xchg
sub
in
sbb
icebp
or
es
inc
push
pop
stc
xchg
dec
inc
pop
mov
jecxz
addr16
adc
mov
mov
enter
test
cld
mov
dec
outs
xor
inc
ror
mov
inc
(bad)
call
cmp
and
and
nop
mov
(bad)
pop
mov
add
hlt
and
daa
push
push
push
and
pop
mov
adc
lea
clc
dec
push
rcr
mov
cmp
test
cmp
sub
xchg
mov
cmp
adc
inc
adc
fsubr
neg
outs
fsubr
xor
pop
pushf
ss
xor
arpl
cld
test
je
mov
ins
cmp
dec
in
fs
je
mov
loope
retf
bound
stos
test
movs
movs
aaa
push
cmp
mov
repnz
push
test
jg
das
cli
xchg
fwait
loope
stc
add
sahf
aad
lgs
mov
in
sub
rol
mov
retf
pop
fbstp
daa
ror
fs
cmp
mov
fld
mov
call
adc
sub
push
inc
int3
sar
fsubrp
js
int3
ret
cmp
mov
xor
je
scas
ins
pop
push
lods
out
icebp
(bad)
or
inc
inc
cmp
or
imul
stos
ror
sbb
aas
push
jne
ds
sbb
or
pop
arpl
(bad)
cmps
rcl
xchg
adc
mov
and
(bad)
push
sub
bound
pop
ret
push
ss
inc
push
add
and
pop
(bad)
dec
jae
mov
mov
and
popf
adc
test
(bad)
cs
add
or
loopne
out
into
fld
hlt
push
(bad)
add
fmulp
inc
or
push
rol
pop
mov
and
pop
mov
test
jo
js
adc
mov
fs
mov
cdq
test
in
(bad)
cmp
inc
fcmove
mov
push
push
js
std
xchg
mov
repnz
nop
sbb
mov
dec
inc
push
loope
cmp
cmps
mov
test
xor
out
sbb
mov
jb
lds
es
or
retf
xchg
add
jne
and
les
cmps
ds
xchg
jle
push
test
mov
inc
adc
jb
loop
loopne
cmp
push
cmp
push
pusha
mov
jno
mul
push
cmp
mov
inc
in
sbb
fcomp
call
cmp
stos
mov
inc
xchg
fisttp
inc
aas
mov
clc
fnstcw
mov
add
add
repnz
push
nop
int3
cli
push
imul
add
(bad)
mov
sub
sub
cs
jbe
add
movs
xchg
mov
fwait
movs
mov
ror
pop
repz
daa
mov
sbb
and
fstp
dec
into
mov
pop
int3
or
test
mov
mov
(bad)
popf
div
scas
loop
mov
movs
mov
add
into
pop
sahf
dec
scas
pop
in
mov
and
or
hlt
pop
int3
fstp
jl
retf
xchg
sbb
std
out
add
std
inc
retf
scas
add
loope
mov
imul
push
mov
pop
arpl
popf
outs
mov
sbb
ins
ds
pop
outs
sbb
cmp
mov
or
adc
jge
add
leave
jbe
addr16
jg
jmp
std
mov
out
sub
pop
dec
add
lock
mov
dec
dec
jge
jp
mov
mov
outs
js
xor
(bad)
(bad)
ds
hlt
sbb
lock
and
push
sub
rol
das
outs
cmc
cmp
xchg
fist
xlat
dec
mov
jae
bound
push
shl
dec
xchg
shl
js
js
jp
push
and
xchg
push
add
xchg
pop
inc
lods
popa
xor
sbb
fs
adc
cmp
into
xchg
fld
xor
aad
retf
xchg
or
shr
cmp
mov
in
and
imul
es
sbb
cmp
scas
add
out
adc
sbb
movs
stos
mov
arpl
sub
nop
dec
(bad)
mov
shl
dec
mov
rcr
fmul
add
outs
test
xor
retf
sub
jbe
mov
int3
xor
mov
test
in
cmp
push
jb
daa
inc
push
sub
adc
mov
xchg
loop
outs
mov
lahf
int
cmp
fucomi
je
jo
or
popa
lods
mov
dec
pop
dec
xor
pop
and
not
and
psubsw
call
jmp
retf
test
cld
lahf
hlt
sbb
popw
sub
dec
call
dec
xor
xchg
int
mov
fmul
fdiv
sub
jno
mov
enter
xchg
pop
int3
jno
xchg
imul
push
mov
aaa
mov
aad
cdq
rcr
fdivr
ds
xor
fild
cmps
rcr
mov
dec
mov
inc
pusha
xchg
lock
mov
jns
pusha
(bad)
out
jmp
je
pop
(bad)
punpckhwd
ins
cmp
dec
xor
add
test
push
sub
adc
pop
addr16
std
enter
imul
and
mov
and
test
enter
pop
xor
adc
or
pop
bound
sub
xchg
lods
jo
sahf
or
jmp
(bad)
enter
dec
jbe
inc
inc
add
adc
xchg
das
mov
sbb
ss
sub
pop
aas
sbb
(bad)
jb
mov
ja
sub
scas
sub
int3
lea
mov
xor
or
push
xchg
icebp
ds
adc
or
sbb
or
fiadd
jg
or
fidivr
mov
and
ror
retf
bound
hlt
rol
loop
pop
push
lahf
pop
sbb
or
mov
mov
cmp
sub
mov
push
dec
div
mov
or
sbb
cmp
or
sub
adc
adc
push
push
es
push
jg
lea
fldenv
sbb
or
scas
pop
jle
adc
ds
sub
add
out
arpl
sahf
pop
or
inc
call
cmp
push
mov
ins
adc
(bad)
addr16
cmp
mov
pop
fild
ins
in
sub
mov
test
and
retf
inc
mov
mov
(bad)
sahf
test
and
sub
xor
push
or
sub
into
adc
ret
inc
(bad)
jle
ins
mov
sub
mov
push
daa
xor
cs
cmp
or
arpl
fidiv
cmp
pop
call
pop
cld
cwde
xor
clc
sbb
xchg
sti
dec
nop
add
or
sti
call
mov
sbb
popa
movs
mov
frstor
imul
scas
int3
test
mov
dec
pushf
cmp
dec
clc
cmp
stos
repz
and
dec
mov
hlt
dec
dec
jecxz
jmp
jmp
inc
loopne
cli
mov
lea
cmp
in
sub
jns
adc
pop
and
or
nop
mov
dec
add
and
in
je
push
adc
sbb
adc
xor
bound
es
aaa
mov
mov
add
test
add
ss
icebp
adc
pop
data16
mov
jmp
dec
pop
loope
icebp
std
call
and
outs
cmp
(bad)
cwde
mov
mov
sub
hlt
into
jbe
jmp
(bad)
adc
mov
icebp
int3
push
call
enter
ficom
loope
mov
stos
das
sbb
rcl
enter
cmp
inc
xchg
xor
adc
les
repnz
rcr
ds
mov
and
add
push
xlat
mov
dec
pop
and
repnz
push
jmp
lock
cmp
and
jmp
mov
pop
mov
hlt
mov
out
into
jno
loopne
jp
test
pop
adc
adc
jne
pop
ret
add
adc
imul
jnp
(bad)
lods
sub
int3
loope
push
dec
(bad)
jg
pop
std
jmp
repnz
lea
mov
call
lods
outs
mov
inc
cmp
into
pop
dec
cmp
retf
mov
push
jmp
gs
xchg
cmps
movs
mov
or
or
xchg
mov
or
inc
dec
stos
cmps
add
mov
into
push
and
inc
inc
push
inc
mov
xchg
jo
mov
outs
jecxz
loopne
xchg
push
test
clc
xor
xor
mov
and
sbb
push
adc
mov
outs
out
cwde
inc
mov
jae
cs
in
lea
inc
sub
cli
pop
outs
mov
clc
ds
xor
data16
or
push
repz
mov
ficom
cmc
dec
test
fnstcw
sub
cmc
(bad)
cdq
xchg
int
leave
push
cmps
and
shl
sbb
out
adc
pop
ins
aad
in
outs
and
std
in
fdivp
mov
xchg
pusha
nop
(bad)
sti
cli
arpl
jo
cmp
push
inc
push
cwde
(bad)
loopne
lods
add
mov
and
jl
pop
neg
sbb
jle
mov
push
es
adc
add
int
(bad)
mov
scas
inc
test
adc
in
sar
mov
add
loope
xchg
jmp
mov
xor
or
shl
adc
mov
inc
pop
icebp
fcomp
xor
cmps
push
push
outs
mov
sub
cld
ins
cmps
inc
call
sbb
jbe
shr
pop
jle
loope
pop
add
dec
push
pop
xor
mov
push
retf
cmp
hlt
jmp
sub
xadd
mov
daa
fnstcw
das
mov
inc
or
ret
adc
mov
inc
add
xor
sahf
fwait
and
xchg
fnstenv
je
mov
or
jp
lock
repnz
pop
inc
(bad)
inc
aad
aaa
test
popa
rol
or
or
jle
add
daa
div
push
cmp
mov
dec
aaa
adc
in
xor
mov
sbb
sub
(bad)
fsub
rol
aad
or
ins
jl
and
cmp
dec
sti
xchg
stc
xor
xchg
popf
and
mov
mov
loopne
mov
push
mov
inc
outs
sbb
sbb
(bad)
jmp
inc
mov
mov
mov
je
jecxz
mov
jle
aas
dec
ret
jmp
add
test
das
ja
mov
rcr
int3
ja
sub
fsubr
loope
(bad)
cdq
std
push
cmp
push
lock
ss
adc
cwde
sbb
das
adc
dec
pop
fist
xchg
repnz
(bad)
aaa
retf
test
mov
xchg
loope
push
xor
xchg
dec
bound
cwde
int
dec
cmp
dec
jmp
pushf
sahf
sub
call
push
cmp
xchg
fadd
add
xchg
cmp
pop
add
dec
and
pop
test
scas
mov
test
cmp
fcom
test
gs
cmps
nop
popf
enter
cwde
mov
nop
fs
xchg
mov
push
push
imul
dec
(bad)
bound
(bad)
fmulp
rcr
(bad)
cli
dec
dec
mov
fimul
push
mov
mov
sar
mov
push
mov
push
jnp
cmp
mov
inc
movs
xchg
pop
pushf
repz
in
shl
jmp
adc
cmp
push
pop
retf
jle
push
jmp
rcl
stos
movs
(bad)
das
adc
sub
enter
push
shl
pop
mov
mov
push
ror
cmp
add
mov
push
mov
jecxz
sbb
add
mov
test
adc
sub
out
dec
pop
fldenv
pop
lds
push
sub
dec
ret
ja
pop
push
sti
jb
jl
(bad)
push
mov
dec
shl
xchg
mov
sbb
dec
in
shl
pminsw
ins
sbb
add
jne
xor
jo
push
jae
in
ds
fsubr
out
jbe
out
ins
sub
fiadd
sub
bound
xchg
aam
jo
push
ins
dec
bound
shl
fsubp
or
add
mov
aad
and
inc
aad
fld
cwde
sbb
inc
mov
inc
inc
leave
sbb
fwait
sub
jmp
gs
xchg
shl
ja
mov
cdq
dec
gs
ds
inc
fldenv
push
shl
jne
jbe
jno
ins
movs
jp
aaa
call
dec
out
and
pop
popf
mov
in
inc
sub
arpl
repz
add
stos
ss
or
outs
fwait
xchg
jmp
fcom
cmps
dec
xchg
sub
mov
sub
(bad)
mov
test
out
xchg
lds
inc
pop
int3
les
lods
sahf
fwait
mov
(bad)
adc
pushf
rcl
addr16
stc
and
pop
adc
cmc
(bad)
push
es
outs
fcmovu
mov
(bad)
sar
enter
inc
out
jb
pop
jns
xchg
dec
shr
jmp
pop
bound
xor
and
ins
xchg
jns
lds
mov
in
sbb
(bad)
mov
lods
cdq
test
add
not
repz
mov
int3
enter
lods
and
stc
sbb
sbb
lods
mov
dec
pop
ja
ret
push
movs
mov
push
cmp
jnp
stos
mov
(bad)
inc
lods
xor
add
and
mov
push
in
add
push
inc
test
jl
push
push
sti
xor
sbb
rol
push
jo
xchg
enter
cmp
inc
imul
add
test
mov
mov
rcr
pop
hlt
jne
xor
xchg
jl
cwde
dec
add
(bad)
inc
jns
mov
mov
sbb
cmovnp
add
clc
and
aas
ficom
or
xchg
pusha
pop
ret
xchg
arpl
ss
xchg
mov
(bad)
cmp
sub
ret
pop
ret
and
sbb
jne
inc
cwde
ror
and
and
mov
inc
xchg
cmp
outs
pop
aam
arpl
cwde
lea
pop
adc
inc
push
and
xlat
xor
jp
dec
inc
pop
imul
test
enter
and
outs
loopne
movs
mov
sbb
pop
retf
adc
lock
sti
push
test
xchg
add
push
dec
test
fild
xor
xchg
inc
ret
mov
out
ja
gs
adc
int3
enter
ss
aaa
call
push
mov
movs
dec
push
push
add
or
sub
jmp
jb
pop
retf
ins
cmps
stos
mov
je
addr16
mov
add
jb
pop
sub
dec
retf
(bad)
mov
jnp
jmp
sbb
(bad)
mov
fsubr
clc
fst
xor
inc
inc
popf
loopne
ret
jo
mov
jmp
sbb
push
dec
gs
cli
int
sbb
fisubr
jnp
xor
push
dec
or
inc
add
cmp
push
jl
push
inc
xchg
mov
mov
leave
and
cwde
sti
(bad)
mov
loop
adc
or
pop
pop
dec
mov
mul
xor
jecxz
fiadd
mov
in
xchg
(bad)
pop
cmc
push
(bad)
mov
(bad)
cdq
or
frstor
retf
mov
out
addr16
sbb
(bad)
and
or
add
movs
dec
shl
jge
inc
mov
or
out
in
sbb
xor
inc
mov
cmp
int
push
sub
mov
call
inc
es
jb
shl
scas
push
jbe
popa
test
in
call
sbb
sbb
(bad)
dec
sub
aam
mov
call
retf
xchg
es
sbb
push
and
add
mov
xor
test
jl
xchg
out
xchg
or
imul
add
jmp
adc
adc
test
jmp
in
jno
and
sbb
js
and
xchg
jbe
cmp
sar
mul
mov
push
cdq
fmul
mov
out
aam
inc
pop
stos
pop
enter
daa
movs
les
sub
mov
sbb
mov
retf
or
pop
jp
jle
jle
imul
xor
leave
xchg
mov
pop
adc
mov
jle
push
jb
loope
iret
iret
shl
fcomi
stos
imul
sub
xchg
pop
fdiv
lds
rcr
sub
mov
loope
xchg
jg
sub
add
mov
jmp
stc
push
cdq
inc
push
adc
mov
jmp
pushf
out
(bad)
ss
push
fnstenv
dec
adc
adc
cmp
push
pop
jno
rcr
icebp
xchg
pop
repnz
adc
cmps
dec
push
fs
loop
xor
lods
mov
sbb
jb
or
mov
retf
dec
cs
js
shr
add
adc
jne
push
inc
arpl
les
aas
mov
sti
jb
(bad)
dec
les
adc
test
sar
out
sbb
push
inc
xchg
and
inc
mov
or
mov
les
mov
inc
int
stos
pop
dec
mov
shr
or
sub
arpl
xchg
test
or
test
ins
les
pop
call
or
lea
and
jbe
xor
push
loope
add
aaa
mov
int3
push
mov
push
sbb
adc
dec
rcl
jno
add
push
sub
sbb
jae
jbe
test
xchg
jle
push
mov
sti
rcl
(bad)
jno
call
inc
mul
enter
into
bound
mov
dec
sbb
movs
push
xchg
mov
xor
xchg
dec
xchg
stos
fs
push
in
sbb
sar
ss
ror
leave
and
retf
mov
sar
(bad)
xor
mov
inc
jge
loop
retf
push
pop
dec
lahf
mov
dec
sbb
adc
or
mov
call
dec
test
aam
or
add
gs
hlt
sar
dec
ds
sub
int
mov
mov
sub
dec
sbb
mov
pop
fsub
outs
in
(bad)
mov
jl
push
cmps
jg
outs
mov
xchg
cmps
rcr
xor
call
adc
pop
adc
inc
mov
and
and
dec
mov
clc
jbe
jge
lock
movs
and
push
pop
inc
popf
mov
mov
popa
enter
push
cmp
mov
test
mov
aam
mov
mov
pusha
sub
out
icebp
call
add
ins
xor
xchg
cmc
retf
gs
(bad)
cli
add
xchg
xchg
xchg
pop
das
mov
mov
sbb
xlat
dec
sti
dec
scas
out
daa
fwait
jl
sbb
mov
or
xchg
sbb
bound
cmps
popa
mov
sbb
cmpxchg
cld
repz
jbe
fldcw
pop
mov
push
pop
(bad)
in
fs
(bad)
or
and
and
xchg
cmps
rcr
imul
stos
ds
lds
push
(bad)
in
lahf
and
sbb
xor
sbb
(bad)
xchg
mov
cs
mov
loopne
jbe
call
rcr
jecxz
sub
das
jmp
adc
xchg
movs
stos
jo
int
push
xchg
dec
adc
(bad)
dec
sti
test
mov
sti
je
pop
aaa
(bad)
pusha
adc
sub
xchg
inc
cmps
inc
sbb
jns
stos
iret
mov
mov
adc
(bad)
pop
pop
in
ror
aad
ds
cmp
mov
mov
stc
sub
outs
and
dec
pushf
mov
push
cmp
dec
mov
push
inc
mov
cmps
iret
js
mov
adc
xor
dec
outs
(bad)
jp
in
xchg
cmp
cdq
aam
call
mov
cwde
add
adc
pop
jecxz
add
push
test
sub
adc
mov
cmps
shl
and
dec
adc
push
mov
pop
push
cmc
dec
and
lods
movs
popf
add
imul
xor
mov
pop
fimul
std
sbb
push
cmps
or
clc
mov
fmul
pop
sahf
inc
pop
mov
jp
cld
jne
in
scas
cmp
xchg
dec
fdivr
(bad)
adc
loop
scas
xor
mov
mul
adc
cmc
sbb
(bad)
aad
je
dec
sub
mov
aam
pop
(bad)
stc
mov
mov
fisub
clc
into
sbb
enter
pop
fcom
fcomip
xor
pop
dec
adc
adc
dec
stos
xchg
sub
sar
stos
xor
mov
pop
aam
and
imul
lods
sahf
ds
imul
test
retf
jns
push
or
imul
adc
(bad)
aam
xlat
lods
jnp
fwait
ins
lea
fnstenv
cvtdq2ps
test
test
jmp
ficomp
push
inc
lds
cs
push
jmp
xor
jl
pop
out
or
stc
out
lahf
inc
pop
repz
pop
or
out
sub
jg
data16
pop
sbb
mov
arpl
mov
loope
shl
retf
repnz
cwde
cmp
scas
clc
push
mov
dec
stos
inc
xor
pop
sbb
aam
(bad)
rcr
sbb
push
mov
shl
dec
pop
cmp
cmovbe
loope
test
pop
inc
xchg
add
dec
(bad)
rcl
repnz
test
ins
xor
jg
add
add
lods
divps
jmp
mov
(bad)
loopne
sub
leave
(bad)
(bad)
hlt
mov
sub
add
mov
push
cmp
sbb
stos
aaa
jmp
(bad)
bound
xchg
mov
int3
cmps
mov
inc
into
xor
int
cli
mov
pusha
push
or
adc
jmp
lods
bound
sub
(bad)
scas
ss
jns
out
retf
pop
(bad)
cmp
(bad)
shl
mov
test
es
test
cmc
sbb
out
or
xchg
loopne
fstp
mov
inc
aam
test
and
cs
xor
mov
test
jno
data16
jle
inc
mov
and
ins
pop
ins
jl
jne
dec
cmps
jns
out
test
movs
fwait
mov
aas
int
int
adc
mov
push
test
push
shr
cmp
sub
mov
sbb
sub
shl
mov
sbb
shl
lds
inc
mov
mov
xchg
jl
sbb
imul
test
movs
cmp
add
sub
dec
cmp
into
xor
pop
or
enter
cmps
push
inc
cdq
ja
push
and
ins
aam
pop
xor
sub
add
xchg
mov
pop
xchg
jo
pop
adc
sti
add
outs
inc
push
les
into
inc
out
call
mov
rcl
lock
dec
fdivr
aaa
fsubr
jle
ja
out
and
inc
cmp
jne
outs
(bad)
sbb
cmp
fdivr
imul
fcmovnu
movs
ins
in
into
inc
jmp
fist
ja
sub
dec
xchg
dec
mov
mov
mov
mov
xchg
(bad)
mov
aad
cmp
cli
sub
aam
and
push
mov
mov
xor
jle
(bad)
cmps
xor
jmp
adc
push
mov
push
daa
out
in
jb
in
or
je
xchg
in
mov
sub
test
or
mov
mov
jnp
cmps
imul
push
xor
and
or
sub
cmp
in
movs
dec
push
push
jl
push
xchg
in
aam
push
jp
sbb
mov
jg
mov
cmp
enter
(bad)
out
(bad)
or
movs
xlat
mov
jmp
outs
test
push
shl
sbb
mov
jmp
loope
cmp
or
sub
jmp
push
cs
test
mov
push
ins
pop
xchg
and
inc
imul
test
dec
jnp
inc
inc
mov
jne
fsub
xchg
cmp
icebp
ja
jns
inc
popa
aam
push
mov
mov
leave
or
jo
leave
call
push
adc
cmp
rol
or
cld
xor
stos
and
mov
(bad)
out
test
dec
cmp
ds
ret
pop
das
retf
pop
jb
test
push
lahf
std
ins
pusha
test
dec
les
cld
je
jge
jo
xor
mov
call
cmc
imul
xor
add
adc
mov
shrd
xchg
out
cs
pusha
jmp
cmp
jg
xchg
out
xor
mov
addr16
leave
push
push
add
jle
repnz
fs
out
jl
lods
test
inc
inc
repz
call
cmps
pop
xor
xchg
out
and
mov
jo
xchg
int
mov
add
aad
sbb
inc
xchg
add
in
pushf
retf
popf
xchg
inc
pushf
adc
mov
dec
jae
int3
add
push
pop
mov
mov
adc
sub
push
hlt
xchg
ficom
sub
mov
inc
test
xlat
cmps
sbb
lods
(bad)
div
ja
jp
daa
and
in
jo
cs
mov
lds
cs
das
les
dec
cmps
movs
aam
(bad)
mov
cmp
fsubr
and
or
movd
cld
mov
pusha
mov
(bad)
push
sahf
push
cdq
xor
mov
dec
les
mov
gs
inc
xchg
pushf
mov
mov
ror
stos
cdq
pop
adc
movs
(bad)
mov
lahf
cmp
pop
and
sbb
adc
pop
scas
xlat
test
mov
jmp
pop
(bad)
lods
(bad)
dec
addr16
cld
pop
mov
fwait
inc
lea
sbb
cdq
in
push
sbb
jnp
mov
sub
sahf
cli
dec
int3
dec
mov
fwait
dec
das
pop
les
mov
fmul
lahf
(bad)
sub
jmp
mov
xchg
loopne
sahf
scas
pop
stc
inc
push
push
sub
mov
mov
dec
cmp
stc
pop
lahf
stos
jge
inc
add
mov
inc
aam
popa
rcr
push
inc
retf
ret
les
or
push
sbb
ss
adc
inc
(bad)
cdq
or
lods
adc
(bad)
mov
stos
mov
repz
imul
jno
lods
mov
or
retf
outs
ins
out
ror
outs
retf
(bad)
pop
inc
jno
add
pop
nop
in
lea
loop
adc
ins
xlat
movs
adc
aas
pusha
mov
mov
ret
retf
or
sbb
mov
mov
sub
movs
gs
cmp
adc
jno
xchg
sbb
cmp
popa
sbb
(bad)
les
mov
jg
mov
cmp
mov
stos
mov
add
neg
pop
jmp
scas
int3
cld
fs
cs
sbb
daa
fcomip
out
push
xor
jno
aam
add
fmul
pop
fdivr
mov
bound
mov
sahf
push
bound
cwde
inc
and
cmp
loope
ds
and
gs
xchg
pop
mov
jno
paddusw
nop
call
lods
loop
out
ret
test
sbb
loop
test
test
stc
cmp
push
addr16
cmps
ins
jp
rcr
xchg
pusha
cmps
push
xchg
pop
pop
push
adc
pop
mov
call
cdq
xchg
dec
xor
in
aam
lea
cmp
retf
pop
inc
imul
(bad)
sbb
cld
pop
mov
ror
push
mov
fist
mov
xor
fisub
sub
xor
into
or
dec
adc
test
mov
(bad)
xchg
mov
loopne
adc
mov
sbb
hlt
mov
cli
add
inc
out
repnz
pop
out
mov
sar
dec
mov
cmp
dec
mov
pop
sub
sub
mov
cmc
pop
mov
mov
fild
and
leave
shl
test
cld
out
mov
or
mov
sub
mov
imul
stc
je
iret
inc
aad
push
sub
xchg
fbstp
int
test
std
add
mov
clc
push
call
popf
stos
inc
outs
popa
push
int
and
out
leave
sbb
imul
jge
mul
inc
dec
sub
cmp
(bad)
rcl
hlt
test
or
and
cmp
ins
je
push
mov
imul
fmul
sbb
mov
mov
in
enter
mov
adc
adc
outs
cmp
mov
in
popa
out
xchg
or
cmps
fistp
cwde
data16
push
in
pop
inc
inc
inc
fmul
(bad)
das
jbe
pop
pop
fadd
mov
pop
data16
mov
bound
and
je
mov
dec
cld
xchg
sbb
push
clc
aaa
dec
jo
or
pushf
pusha
mov
mov
dec
mov
cmp
lahf
push
jne
xor
je
(bad)
loopne
push
mov
push
xchg
or
xor
popf
mov
cwde
mov
mov
test
les
ffreep
js
jns
das
cmps
mov
cld
mov
mov
push
xchg
or
mov
push
xor
jae
mov
stos
sub
in
fld
xlat
pop
lods
loop
out
(bad)
aaa
dec
imul
inc
(bad)
jns
enter
mov
add
xor
or
fsubr
dec
inc
mov
pop
push
xchg
mov
repnz
inc
inc
mov
imul
jmp
mov
shr
mov
mov
mov
shl
xchg
call
mov
in
cmp
ret
fldenv
jp
pop
mov
mov
xchg
xor
and
push
aaa
daa
les
enter
sbb
iret
push
stos
rol
or
dec
xchg
dec
test
movs
mov
jo
and
popa
cs
mov
pop
lea
push
mov
retf
dec
icebp
push
xchg
das
pop
cmps
dec
cmp
fdiv
loop
xor
add
adc
sub
(bad)
dec
mov
shl
pop
and
cmps
jmp
(bad)
adc
mov
and
xchg
mov
inc
mov
inc
lods
jb
addr16
mov
mov
outs
js
mov
push
cmp
dec
push
mov
repz
cmp
add
fs
dec
adc
pusha
xchg
xor
inc
xchg
pop
neg
dec
fs
movs
mov
sub
fmul
jns
cdq
loop
mov
xor
cmp
rol
idiv
iret
sbb
mov
fsubr
or
in
(bad)
call
stos
xchg
push
jnp
in
stc
and
push
repz
jle
aam
ins
jmp
fiadd
sub
add
shr
sbb
push
pextrw
lods
std
sub
imul
iret
mov
push
dec
xor
(bad)
sbb
push
push
sbb
mov
and
xchg
popf
cmp
leave
iret
ja
data16
pop
mov
mov
pop
jmp
and
xchg
jg
ret
clc
sbb
cmp
lock
cmps
lds
mov
pop
pop
hlt
mov
pop
mov
mov
dec
xchg
inc
push
jae
loopne
aaa
xchg
jmp
addr16
enter
push
daa
push
add
and
or
jne
mov
mov
jl
addr16
nop
cwde
sahf
mov
out
push
mov
rol
aam
cmp
push
pop
stos
mov
cmp
mov
scas
pushf
adc
test
mov
cmc
pop
or
push
jl
mov
jmp
shr
neg
mov
mov
inc
fcmovbe
fld
mov
adc
out
ror
jnp
cmps
fidiv
mov
(bad)
js
xlat
jb
mov
or
movs
add
xor
jecxz
icebp
enter
cmp
mov
fwait
stos
or
mov
test
cs
div
mov
ret
ins
aaa
retf
cmp
jno
ret
fadd
cwde
inc
ror
(bad)
call
mov
or
mov
cmps
cmp
jae
in
push
or
mov
dec
jge
dec
push
in
xor
out
das
sub
fcmovnu
loopne
jle
mov
(bad)
fistp
fdivr
out
add
sub
dec
and
stos
movs
aaa
mov
hlt
inc
rcr
jle
fdivr
xchg
sbb
test
add
adc
mov
(bad)
ds
mov
frstpm(287
xchg
test
mov
jno
test
and
dec
and
call
cmps
or
fwait
(bad)
js
jp
adc
dec
push
pop
sub
xchg
repz
xor
pop
xor
xor
test
mov
xchg
mov
xor
cld
bound
aaa
sub
jle
pop
lods
xor
ins
adc
jns
psubw
or
sbb
dec
sub
push
push
push
repz
test
mov
fwait
es
mov
push
scas
xchg
out
jl
in
add
lods
call
push
mov
nop
fwait
movs
jl
push
mov
mov
scas
loope
stos
pop
fisubr
or
xchg
or
push
je
nop
sahf
dec
rcr
ffree
cmp
jecxz
jl
shl
jbe
(bad)
or
mov
lea
inc
push
mov
sbb
jne
movs
fnsave
push
cs
fstp
jmp
dec
mov
mov
stos
(bad)
lahf
add
mov
jg
movs
daa
retf
test
ret
xor
fcmovb
and
sbb
push
or
lea
inc
scas
dec
popa
imul
lea
cmp
cs
push
and
call
(bad)
lea
shr
fdivr
dec
imul
adc
jmp
shl
xchg
mov
es
dec
daa
xchg
or
out
jl
push
gs
xor
add
ss
cmp
out
jl
gs
fwait
mov
div
jecxz
sbb
add
ds
sbb
xchg
in
stos
mov
lods
jb
inc
inc
aaa
pushf
xchg
jmp
ins
test
xchg
sti
test
call
jmp
(bad)
lods
fcmovu
mov
add
xor
or
retf
in
dec
ds
jb
adc
fistp
and
es
into
loope
adc
test
adc
mov
adc
or
push
daa
int3
or
xor
push
adc
bound
jg
dec
test
retf
(bad)
pop
adc
ss
popf
push
jno
xchg
cmp
lods
push
add
add
add
add
pop
or
push
gs
mov
cmp
test
xor
or
jle
pop
enter
fidiv
(bad)
fdiv
mov
jnp
mov
adc
es
push
xor
or
xchg
add
cdq
and
fwait
push
xor
push
cmp
jo
in
adc
ficomp
adc
sbb
dec
xlat
mov
xchg
jbe
out
das
mov
popa
mov
hlt
icebp
movs
sub
fimul
pop
sbb
adc
or
addr16
cmps
xchg
xchg
pop
test
dec
xchg
pop
jmp
xchg
xchg
loope
vmptrld
mov
jg
scas
dec
inc
xor
loope
(bad)
mov
ja
scas
lock
rcl
sbb
movs
dec
jne
test
inc
push
xlat
dec
lock
dec
ficom
mov
dec
sbb
pop
std
(bad)
(bad)
fsub
sbb
daa
int
sub
test
push
push
add
add
or
int
pop
inc
xor
inc
retf
lahf
mov
fimul
dec
push
or
repnz
and
xchg
inc
and
test
adc
mov
mov
aas
push
psubusw
dec
cmps
dec
mov
inc
xchg
mov
loop
xor
in
pop
mov
jmp
mov
dec
fmulp
mov
cmp
cmp
cdq
sbb
iret
ja
jae
jae
cmp
jne
popa
arpl
ficom
les
data16
lahf
dec
inc
sbb
out
test
scas
xor
nop
hlt
adc
mov
pop
and
jmp
mov
inc
pop
push
test
inc
popf
xchg
sbb
xchg
ror
adc
das
int3
push
jns
bound
int3
ins
adc
or
pop
push
movs
mov
dec
mov
int
inc
inc
cmp
rcr
mov
shl
pop
jbe
fstp
push
pop
jecxz
imul
push
(bad)
jbe
scas
pop
mov
iret
xchg
fild
jne
into
(bad)
mov
repnz
xor
call
jb
add
mov
dec
xor
mov
add
and
je
fdiv
scas
sbb
mov
adc
mov
push
xchg
int
dec
cs
aas
aam
cmps
rcl
fnstcw
and
pop
test
movs
imul
pop
fwait
cwde
xchg
mov
rol
fist
jmp
je
test
out
(bad)
in
lods
nop
or
mov
adc
mov
pop
cs
dec
xor
test
dec
inc
mov
les
sbb
jnp
ja
jae
add
pop
adc
xchg
int
xor
mov
not
lods
or
sub
mov
pop
std
push
cmc
inc
cmp
dec
int
push
fmul
in
inc
cmp
dec
int
sub
and
lock
push
pop
nop
outs
das
push
inc
push
lahf
lock
adc
movs
xor
mov
out
jb
sbb
mov
jg
adc
fwait
(bad)
int3
inc
cwde
imul
loop
fstp
ss
mov
fwait
adc
dec
mov
push
push
imul
inc
retf
mov
call
in
in
mov
cmc
pop
cmp
stc
inc
bound
(bad)
push
ret
jae
sar
sbb
hlt
fsub
(bad)
leave
movs
pushf
cdq
sub
mov
loope
arpl
cdq
leave
pop
dec
lea
cmp
(bad)
shr
jo
push
ds
sbb
add
or
shl
pushf
inc
aaa
cmp
rol
icebp
les
(bad)
lea
adc
dec
add
fwait
add
bsf
pop
pop
loop
jae
add
push
push
retf
test
dec
hlt
ss
aad
cs
dec
or
sbb
les
adc
call
leave
test
and
and
cmc
pop
mov
ins
lods
lds
push
dec
sbb
add
and
int
cmp
repz
(bad)
pushf
test
ret
loopne
add
pop
mov
(bad)
mov
es
cmps
push
cmps
(bad)
loope
and
fwait
push
dec
cmps
ins
jne
jno
adc
push
inc
imul
sub
(bad)
icebp
sbb
shl
out
retf
neg
jae
imul
ret
cli
movs
xchg
cmp
and
retf
pop
js
icebp
push
aam
pushf
jne
out
out
cmp
add
mov
fsubr
mov
icebp
push
stos
sbb
test
sub
cwde
test
in
mov
pop
cmps
push
jmp
adc
sti
es
cmp
inc
and
jno
mov
push
fdiv
xchg
ss
xor
cld
(bad)
jb
dec
xchg
jbe
pop
imul
std
dec
leave
push
inc
mov
sub
fidivr
or
in
xchg
pop
out
pop
fmul
cmps
mov
or
mov
sub
mov
fiadd
mov
xchg
jne
or
enter
pop
jecxz
fs
jmp
adc
(bad)
(bad)
out
cld
ss
xchg
mov
pushf
inc
sbb
mov
movs
or
or
(bad)
cmp
add
daa
mov
out
add
inc
(bad)
mov
pop
ret
inc
or
cs
mov
shr
cmps
les
out
pop
enter
xchg
test
xchg
daa
adc
ins
mov
mov
outs
xchg
test
dec
adc
adc
into
mov
aaa
pushf
icebp
(bad)
retf
lahf
fstp
mul
jp
sub
mov
mov
and
or
aad
sbb
inc
cwde
not
mov
adc
(bad)
sar
cmp
mov
inc
jl
lea
push
lods
and
jne
mov
jge
jg
loopne
xor
sti
and
mov
je
ins
fcmove
mov
sub
push
or
mov
pushf
sbb
sub
bound
mov
shl
sbb
fst
shl
dec
aam
lods
in
sti
xor
xchg
imul
or
jmp
(bad)
adc
push
icebp
scas
into
pop
(bad)
sbb
or
mov
adc
inc
mov
mov
retf
test
push
pop
ss
aad
lds
add
lock
repz
sahf
or
push
add
ds
popa
and
mov
inc
jecxz
sub
xor
adc
lds
dec
mov
ins
adc
push
mov
(bad)
pop
jns
jb
fidivr
aad
add
(bad)
arpl
push
lea
mov
cmp
fs
inc
jmp
out
std
bound
mov
popa
mov
das
mov
mov
std
pushf
aam
ins
enter
fadd
(bad)
cmp
int3
std
ins
push
nop
sahf
lds
xor
call
test
pop
popa
adc
add
(bad)
es
sbb
push
and
jge
cli
in
jne
cmps
inc
xor
mov
and
dec
(bad)
sar
jge
xor
dec
push
test
sti
mov
cwde
hlt
js
ret
xchg
jle
pushf
jbe
fisttp
int
sbb
aad
mov
ret
adc
dec
sbb
push
and
cwde
and
or
lahf
js
sbb
in
scas
push
sbb
stos
push
scas
and
(bad)
test
xlat
ret
and
pop
nop
inc
cs
in
enter
dec
stc
dec
lods
lods
stos
mov
in
ret
sbb
int
push
repz
repz
lea
das
xchg
dec
call
and
aaa
xor
repnz
add
lods
xor
test
sub
loop
ret
cmp
sbb
movs
inc
xor
sbb
jl
cmc
js
jno
out
push
pop
shr
jns
lock
iret
pop
fwait
cmps
mov
outs
push
inc
out
outs
mov
stos
scas
xchg
(bad)
fcomip
sbb
mov
jecxz
outs
cmp
mov
repz
stos
mov
push
fisub
xchg
mov
std
jbe
xor
jl
mov
shl
cmp
lods
fisub
push
xor
(bad)
stc
loopne
push
(bad)
daa
ret
xchg
jno
mov
not
into
dec
das
test
lds
add
les
mov
movs
dec
xlat
adc
push
call
iret
xor
iret
mov
push
mov
in
inc
adc
imul
sar
dec
sahf
int3
mov
xchg
cmps
jb
add
mov
jge
or
popf
sti
pop
sbb
mov
js
retf
fild
cdq
out
ss
loopne
rol
lahf
jne
inc
nop
dec
sbb
aas
xchg
dec
dec
and
imul
dec
rcr
imul
or
and
adc
or
push
xchg
js
push
inc
adc
push
out
cmp
cwde
sub
leave
(bad)
inc
adc
add
ins
adc
mov
jg
sbb
out
and
mov
(bad)
pop
inc
lods
dec
push
add
adc
push
into
cli
mov
std
fucomp
cmp
xor
jmp
lods
pop
pusha
aas
and
inc
lock
mov
je
mov
mov
jp
mov
outs
dec
xchg
dec
(bad)
pop
rol
add
mov
dec
pop
mov
dec
mov
popf
and
(bad)
dec
inc
inc
and
jb
cmp
imul
mov
(bad)
adc
fnstsw
lods
xchg
pop
std
cmps
pop
jne
adc
xor
hlt
push
mov
(bad)
jmp
push
mov
and
or
clc
imul
mov
les
inc
add
dec
loopne
test
xchg
inc
push
int3
sbb
mov
or
push
imul
shr
lock
(bad)
push
mul
ins
cs
bound
test
mov
sar
push
outs
lahf
and
shr
(bad)
xchg
adc
or
xchg
imul
cmps
in
out
jecxz
(bad)
in
push
movs
push
popw
int
popa
xchg
aas
mov
imul
ja
dec
mov
xor
xor
sub
std
xchg
dec
mov
rcl
jp
and
data16
sub
mov
push
push
jmp
sub
inc
add
(bad)
int
scas
in
mov
or
popf
ds
push
in
(bad)
fs
test
mov
push
cmps
retf
add
fucom
pop
adc
outs
int3
mov
inc
fidivr
xchg
je
loope
(bad)
ds
cs
mov
shl
(bad)
xor
inc
xchg
jmp
rcl
pop
das
mov
out
nop
es
adc
in
xchg
jg
mov
aam
das
iret
sbb
mov
sub
push
xor
mov
push
xchg
sbb
and
inc
xchg
test
mov
mov
mov
adc
sub
mov
or
or
mov
mov
pop
jmp
fist
(bad)
push
sbb
and
loopne
(bad)
push
mov
xchg
mov
push
daa
or
and
out
pop
faddp
xor
mov
jle
inc
(bad)
mov
mov
retf
lea
xchg
(bad)
lahf
int3
mov
sub
mov
mov
clc
dec
xchg
mov
pop
or
les
test
out
mov
fwait
popa
mov
stos
shl
push
dec
mov
imul
sbb
into
in
xor
call
jmp
push
add
push
add
adc
sbb
xor
adc
fild
addr16
mov
jmp
xor
hlt
add
adc
xchg
dec
mov
push
adc
push
ss
lods
fiadd
sub
repnz
push
mov
lea
mov
add
shr
mov
(bad)
lds
outs
or
pop
movs
ret
jge
ss
loop
(bad)
push
leave
iret
pushf
jbe
xor
xchg
loope
sbb
pop
test
cmps
cs
lock
les
pushf
dec
or
sub
mov
jb
movs
mov
std
(bad)
loopne
mov
push
pop
jmp
cs
aad
fabs
push
addr16
mov
pop
pusha
test
neg
test
or
jns
sbb
retf
inc
out
(bad)
sbb
stc
bound
sahf
int
mov
imul
mov
adc
test
stos
mov
mov
cmps
mov
js
dec
add
test
jp
pop
jnp
out
daa
jnp
inc
inc
jecxz
retf
mov
das
pushf
sbb
xlat
cmp
xchg
ins
mov
or
jmp
outs
jge
pop
inc
imul
push
xchg
cld
inc
inc
loope
outs
and
inc
jg
out
fs
scas
mov
ja
mov
jb
jb
jmp
imul
sub
adc
test
xor
test
jmp
aas
ins
mov
aas
js
call
jl
xchg
push
cmp
cmps
ror
push
fisubr
ins
sbb
jnp
cmp
and
inc
ds
xor
movs
add
cmc
test
lahf
fimul
mov
popf
leave
ror
pop
dec
pop
xchg
addr16
pop
lods
jnp
xor
outs
ins
dec
add
jecxz
mov
int
dec
add
mov
pop
mov
retf
inc
(bad)
mov
imul
xor
std
mov
enter
dec
fbld
outs
cmp
mov
in
pop
outs
pusha
add
scas
jbe
cmp
pop
xor
imul
mov
lods
jp
lock
and
dec
fstp
mov
(bad)
adc
cmp
dec
imul
call
cmp
jae
scas
xlat
jg
sbb
xchg
movs
xor
repz
sbb
and
mov
xor
mov
data16
pop
sti
jecxz
lods
idiv
inc
cmp
ret
dec
scas
hlt
arpl
add
xchg
fiadd
cmp
mov
mov
sub
cs
push
xor
lds
int
or
xor
out
sar
ficomp
mov
pop
mov
leave
das
and
mov
sub
(bad)
in
xor
int
pop
inc
dec
or
push
push
jl
loop
aam
or
pop
inc
(bad)
dec
hlt
cmp
lds
into
mov
aad
enter
pop
cs
das
loope
mov
cld
(bad)
jmp
dec
sub
or
or
shl
push
and
xchg
dec
outs
in
shl
enter
mov
outs
adc
push
inc
cmp
cmp
mov
add
lds
xor
or
mov
adc
pop
inc
pusha
xor
retf
ret
fldenv
or
mov
or
and
inc
jbe
stc
sbb
jge
rol
jb
sbb
xlat
sbb
or
and
stos
mov
fistp
push
add
fisubr
imul
sub
and
popf
add
sbb
scas
xchg
adc
outs
call
pusha
hlt
aam
cmps
test
enter
mov
movs
out
pusha
push
cdq
ret
jb
je
clc
push
shr
test
pop
inc
mov
enter
sub
push
(bad)
mov
mov
jge
out
rcl
xchg
aad
push
dec
stos
adc
mov
pop
dec
adc
or
aas
imul
mov
sub
cmps
aad
test
push
push
in
test
call
sub
xor
mov
xchg
std
test
or
mov
(bad)
mov
pusha
fistp
in
loopne
mov
or
js
js
movs
mov
in
stos
jns
nop
gs
push
fnsave
xor
les
xor
cmp
xor
movs
xchg
fsubr
fnstcw
dec
pop
nop
push
call
adc
mov
cmp
fadd
xchg
inc
fisttp
jl
bound
scas
mov
jle
and
mov
jb
jmp
aad
mov
test
xor
inc
bound
outs
popa
pushf
shl
pop
add
jle
pushf
popf
shl
or
lods
clc
in
cld
pop
or
mov
mov
push
dec
jbe
adc
mov
add
jg
and
cmp
dec
fist
pushf
sahf
in
or
xor
cmp
loopne
out
iret
fs
mov
and
ins
outs
(bad)
aad
and
sbb
pop
jmp
cmp
jo
ret
or
jo
or
or
inc
xor
imul
js
arpl
jae
mov
(bad)
mov
lods
imul
ror
inc
(bad)
mov
scas
xor
outs
add
fwait
scas
gs
pop
sbb
(bad)
cmp
mov
and
mov
in
mov
jl
shl
(bad)
cwde
ret
pop
dec
sub
jo
pop
push
loope
daa
mov
or
test
xor
add
mov
xchg
or
push
push
sbb
pop
xor
mov
fistp
xor
xor
cwde
xchg
push
cmc
sub
or
and
aaa
cmp
adc
and
das
out
add
js
push
pusha
fdiv
jbe
sub
outs
adc
push
(bad)
(bad)
mov
stos
sub
xor
push
jne
push
sub
mov
test
bound
and
dec
lahf
xchg
jmp
cmp
mov
and
aam
rol
mov
fmul
lds
or
mov
ret
mov
xor
lahf
jg
pop
rcl
(bad)
ds
out
mov
cmps
add
add
adc
stos
mov
add
mov
hlt
xchg
enter
jle
and
les
mov
mov
sar
mov
mov
pop
clc
push
adc
add
mov
add
iret
sub
mov
or
fwait
push
fyl2x
push
std
sub
push
cmp
mov
mov
stos
mov
(bad)
in
mov
(bad)
loope
and
hlt
mov
and
xor
movs
adc
jns
cmp
push
clc
int
and
xor
sub
adc
cmp
outs
leave
lea
or
mov
or
and
fnstenv
pushf
jecxz
cli
loopne
add
pop
hlt
iret
stos
lahf
movs
loopne
icebp
xor
aam
into
push
mov
fdivp
mov
sub
ret
mov
pop
inc
push
push
inc
mov
xor
pusha
inc
adc
ins
in
out
sub
mov
and
jno
mov
push
arpl
retf
mov
or
(bad)
jge
cmp
je
mov
adc
adc
push
(bad)
lea
fisttp
das
es
sar
sbb
ds
or
or
jp
xchg
retf
push
fdiv
mov
or
(bad)
dec
push
aaa
and
inc
dec
das
test
nop
fist
mov
push
repnz
add
mov
shl
and
sub
ror
add
data16
xchg
leave
jb
and
inc
lock
xor
push
mov
xor
fmul
stos
mov
aam
test
mov
push
fistp
mov
ret
xchg
daa
fs
mov
stos
je
in
mov
and
loope
inc
xchg
cdq
js
cli
test
cmp
fdiv
aam
jle
dec
dec
clc
sub
push
inc
or
or
lock
stos
(bad)
aas
push
sbb
mul
mov
and
pop
in
mov
sbb
stc
jno
or
or
icebp
test
(bad)
mov
pop
sub
mov
(bad)
sbb
add
push
popa
imul
daa
pushf
jle
push
push
mov
pop
xchg
data16
and
in
cdq
test
data16
in
popf
xchg
or
pop
push
jg
push
or
iret
pop
add
cmp
shufps
cmp
fsub
jbe
push
push
xchg
popf
ret
push
sar
repnz
lods
pushf
push
xchg
inc
stos
cmp
mov
rcr
clc
shl
dec
xchg
cmps
push
and
inc
iret
iret
mov
je
imul
dec
add
cmc
jp
fwait
cdq
ins
lods
scas
xor
stc
fst
add
xchg
dec
loopne
lds
dec
ret
sahf
xor
mov
sbb
mov
cs
int
xor
xchg
jnp
loope
lds
mov
leave
out
nop
shl
es
clc
ror
loope
jp
(bad)
and
xchg
dec
sti
test
mov
mov
ret
cs
cdq
std
pop
out
(bad)
pushf
gs
(bad)
fwait
into
(bad)
pop
sbb
sahf
mov
mov
cmp
push
xlat
ret
bound
adc
jecxz
pop
int3
push
sbb
imul
cmp
retf
xor
xor
xor
push
pop
fwait
inc
sbb
cmps
test
push
pop
add
pop
retf
retf
mov
iret
dec
pop
sub
fsubr
xlat
fnstsw
sub
cmp
fld
xor
inc
pop
adc
in
or
jmp
mov
or
repz
mov
cmps
jnp
mov
sti
cld
mov
and
pop
add
lds
or
mov
cwde
setno
or
test
inc
mov
in
fadd
(bad)
cmp
push
xor
(bad)
fnstenv
aad
(bad)
xor
xor
fdiv
dec
jmp
jle
adc
mov
std
cmp
push
mov
in
mov
and
shl
pop
ret
lea
bound
jl
inc
inc
add
mov
leave
(bad)
hlt
out
sub
popf
cmp
cdq
mov
inc
in
scas
sub
xchg
xlat
cmc
push
mov
hlt
xor
stc
pop
hlt
push
inc
xchg
sub
push
loopne
sub
aam
fisub
xchg
les
lods
xor
sbb
xor
cld
xchg
mov
push
(bad)
retf
cmc
dec
js
or
movs
or
sbb
out
cli
je
mov
or
call
or
rcl
sbb
sti
xchg
int
pop
das
not
into
sbb
adc
pop
mov
jle
mov
and
mov
xchg
jg
or
cs
adc
mov
push
in
xchg
or
rcl
js
enter
inc
fidivr
sti
mov
das
clc
imul
movs
cld
or
dec
bound
xchg
inc
add
mov
retf
ss
fst
test
jno
adc
sbb
push
test
mov
cmp
xchg
cmp
into
xor
(bad)
(bad)
pop
push
(bad)
ins
in
mov
ret
push
enter
xchg
adc
add
inc
lds
arpl
sub
dec
mov
cmps
fld
xor
out
mov
js
dec
pop
cmp
mov
adc
jns
in
and
sbb
out
fistp
inc
imul
dec
test
sbb
push
jmp
fimul
fbstp
dec
add
enter
ror
mov
ud1
repnz
inc
cwde
mov
pop
repnz
test
mov
int
or
gs
or
push
retf
mov
mov
pop
stos
and
ret
dec
je
arpl
pop
ss
sub
lea
ss
rol
mov
pop
int3
xlat
xchg
mov
fisttp
clc
jmp
sti
daa
arpl
jnp
lea
arpl
repz
daa
dec
cdq
sub
rcr
rcr
push
addr16
mov
jbe
fstp
(bad)
adc
jmp
push
mov
xchg
int
scas
inc
loop
jmp
sqrtps
jae
mov
mov
sub
sar
std
(bad)
mov
cmps
xchg
add
dec
outs
sub
pushf
ja
or
mov
data16
movaps
jp
xchg
dec
rcl
in
pop
sbb
mov
sbb
ror
dec
add
inc
add
mov
arpl
dec
sub
test
sbb
test
add
xor
mov
cmc
cmp
xchg
js
leave
jmp
addr16
out
jb
jo
pop
xor
jnp
pop
outs
push
xchg
mov
add
jmp
leavew
test
in
repz
out
mov
pop
nop
lock
mov
and
cmc
inc
(bad)
jb
push
push
jmp
fisttp
scas
add
push
sub
mov
sub
and
pop
pop
jp
mov
js
adc
retf
pop
sahf
mov
retf
jo
adc
outs
jle
jo
rol
rol
int
and
jbe
(bad)
add
icebp
push
xchg
jmp
iret
in
loope
lods
loopne
cmp
lahf
fmul
add
sbb
xchg
jecxz
pop
clc
jb
mov
sub
movs
lds
mov
(bad)
sti
adc
and
pop
pusha
out
sbb
movs
das
les
popf
xor
inc
das
test
addr16
mov
xchg
adc
dec
jb
cmp
fsubr
fs
jbe
adc
(bad)
sub
mov
loopne
rcr
inc
ret
stos
xor
dec
mov
sub
xchg
mov
mov
xchg
test
pop
shl
and
pop
add
xor
popa
jno
push
sbb
and
jne
lahf
sti
xchg
sbb
cwde
pop
ret
ret
mov
je
int3
mov
sbb
fnstsw
lods
xchg
fld
dec
jnp
ror
jmp
sar
fwait
sub
pop
and
jb
cdq
xchg
jno
cmp
adc
or
mov
sahf
jge
cmp
(bad)
fldcw
mov
and
add
mov
cmp
mov
inc
and
push
or
xchg
cli
cwde
push
jl
jno
pop
xor
test
movs
js
cmp
inc
call
mov
iret
addr16
or
test
push
mov
push
ins
and
pop
xchg
mov
loop
sub
mov
in
add
push
and
add
fcmovnb
mov
xlat
xchg
cmp
pop
sahf
cmp
out
jmp
pop
xor
fwait
int3
test
mov
lds
daa
add
test
test
adc
jb
mov
daa
gs
mov
cmp
cdq
fcom
(bad)
aas
jne
and
mov
adc
cmp
jo
lods
sub
mov
xchg
mov
pop
arpl
hlt
xor
pop
lods
add
pop
call
test
mov
xor
ret
(bad)
pop
aad
cmp
sbb
sti
pusha
retf
mov
xchg
pop
and
lds
pop
sbb
mov
and
adc
sbb
(bad)
popa
(bad)
call
fiadd
jne
inc
(bad)
test
mov
mov
sbb
and
add
out
and
push
sub
pop
xchg
and
push
cli
cmp
(bad)
in
in
sti
pop
mov
push
cmp
mov
xor
or
stc
add
ret
inc
lods
(bad)
jl
or
inc
shl
adc
adc
cmp
or
div
dec
mov
mov
pop
fiadd
dec
div
popf
sub
or
or
aam
nop
jge
xor
jl
fld
ins
in
or
jno
mov
(bad)
cli
push
push
and
mov
ss
dec
pop
outs
inc
jbe
mov
sti
rol
pop
ss
mov
or
lahf
sub
pop
das
movs
scas
push
loope
or
xor
mov
hlt
fs
bound
xchg
dec
stos
nop
mov
aas
pop
dec
test
test
shl
or
sar
jns
mov
retf
retf
adc
retf
(bad)
cli
inc
pop
pop
pop
cmp
mov
mov
mov
ret
call
mov
mov
sub
mov
mov
ins
(bad)
mov
int
push
aam
mov
lds
or
scas
xchg
jle
int
adc
mov
aas
dec
pushf
jmp
fwait
or
and
ins
xlat
push
jae
dec
das
mov
bound
popf
(bad)
push
sbb
add
shr
into
push
push
out
jmp
jns
imul
aas
mov
mov
jb
mov
jb
mov
movs
icebp
mov
lods
fcom
int
pop
sub
lods
sahf
outs
dec
dec
fld
inc
repz
sub
out
stos
mov
jge
aam
adc
ret
push
gs
xchg
imul
pop
aaa
jb
ficomp
mov
mov
jne
imul
mov
xor
inc
push
arpl
dec
xor
or
jecxz
mov
jns
or
jmp
js
ret
mov
add
(bad)
in
bound
xor
jg
mov
cmps
jmp
mov
in
push
sub
sti
xor
jecxz
mov
mov
jo
mov
je
test
ror
out
cmc
mov
push
sub
scas
fmul
repz
sub
fisttp
push
icebp
scas
sub
outs
shr
test
fs
js
jae
mov
gs
cld
imul
cli
stc
dec
cmp
mov
das
xchg
jle
mov
repnz
les
pop
nop
xor
fstp
stos
(bad)
sbb
xchg
pop
call
sbb
mov
push
pop
jg
ds
mov
cmc
pusha
xor
pop
sahf
inc
cmc
loop
mov
jg
bnd
and
ins
cmps
ja
adc
or
mov
dec
xchg
enter
adc
scas
adc
sahf
sbb
adc
outs
xlat
(bad)
inc
and
pop
les
das
repnz
aas
sub
out
xor
jo
mov
fcmovne
pop
mov
mov
mov
inc
scas
pop
imul
into
push
pop
push
stos
pop
fwait
sub
push
fsubr
xor
aaa
mov
sbb
inc
data16
inc
enter
pop
fwait
pop
jo
and
movs
jle
jmp
in
shl
jo
sub
inc
(bad)
movs
adc
sub
loope
dec
test
sub
mov
fs
popa
mov
dec
out
xchg
push
push
fisubr
mov
mov
cmps
out
daa
push
or
ja
hlt
cmp
lock
pop
mov
jb
dec
sti
mov
mov
mov
mov
push
rcr
inc
jl
or
test
sub
in
dec
movs
adc
call
jg
pop
movs
mov
push
mov
dec
sub
(bad)
push
call
push
pusha
rcl
or
sub
inc
sub
inc
rol
push
inc
in
je
cli
pop
(bad)
add
into
mov
shr
jns
sahf
call
jbe
xchg
inc
repz
cmp
sub
xor
dec
sbb
mov
ret
ret
les
push
mov
pop
cli
retf
push
jmp
jp
mov
and
dec
test
ja
aad
loop
push
(bad)
rcr
inc
cmp
es
popf
sbb
ja
cmp
xchg
retf
inc
push
cdq
or
dec
addr16
pop
jno
(bad)
scas
mov
mov
or
mov
jns
jmp
stos
pop
mov
aaa
mov
push
push
push
dec
sbb
mov
mov
cmp
pop
(bad)
lock
lods
push
mov
jmp
cmp
jbe
push
fimul
mov
and
clc
mov
ret
les
ds
popf
pop
mov
lahf
(bad)
fmulp
dec
xor
pop
pop
cmp
lods
enter
add
shr
cwde
es
fisttp
jno
fld
rol
sbb
or
in
xchg
addr16
push
sub
cld
push
fst
aam
stc
push
aaa
mov
xor
sbb
imul
retf
stos
and
out
adc
fadd
and
jbe
sub
dec
stos
div
sbb
and
call
loope
scas
rcr
nop
sbb
sub
add
cmc
push
ret
aas
xor
popf
push
stos
xchg
mov
nop
add
test
jmp
cli
or
sub
lds
clc
mov
sbb
mov
sbb
and
bound
inc
xchg
xchg
movs
xor
daa
pop
fld
mov
ss
ror
jne
(bad)
cli
mov
push
lods
xor
leave
push
cmp
xor
xor
mov
jmp
cmp
fisub
addr16
jbe
popf
pop
add
mov
call
pop
or
jno
jmp
clc
inc
out
pop
push
rcr
mov
adc
fidiv
jae
xchg
clc
mov
fld
fcmovnu
sub
sub
repz
rcl
or
dec
mov
fnstcw
not
mov
ret
loope
adc
sar
mov
enter
and
aad
adc
push
cmp
jp
aaa
push
mov
pop
mov
xchg
rol
test
cmp
(bad)
bound
jns
push
mov
mov
add
inc
jns
(bad)
jmp
ret
xor
xchg
nop
fstp
in
dec
repnz
mov
jae
jl
arpl
inc
xchg
jns
sub
mov
inc
aas
stc
jp
add
xchg
push
shl
stc
loop
ins
inc
jmp
jl
int
dec
frstor
xchg
stc
sub
std
pusha
xor
xchg
add
push
or
adc
retf
addr16
ror
ins
scas
pop
pop
js
(bad)
or
pop
test
mov
and
adc
call
mov
dec
ss
ins
adc
inc
mov
xchg
sub
lock
pop
lds
jbe
cld
dec
lea
in
xor
mov
inc
pop
int
push
call
xchg
and
mov
push
lahf
(bad)
adc
mov
in
imul
sub
lds
push
mov
nop
or
lods
pusha
ins
fwait
xor
pusha
sub
nop
dec
xchg
dec
or
call
test
or
or
movs
sub
(bad)
add
int
jo
add
inc
dec
xchg
lods
retf
xchg
xchg
sub
aam
mov
jmp
imul
mov
sbb
xor
cld
aad
add
js
div
into
and
jmp
inc
jno
ror
pop
cmps
or
pop
push
and
mov
out
retf
test
pop
dec
test
inc
sbb
cwde
jnp
inc
(bad)
xor
dec
ds
fisubr
add
es
dec
jno
sub
les
jnp
(bad)
loope
lea
out
and
cmc
mov
mov
gs
sbb
xchg
int
scas
push
inc
das
sbb
mov
cdq
and
add
jb
addr16
(bad)
scas
or
aaa
je
inc
and
fdiv
test
dec
pusha
jne
xor
rol
clc
mov
mov
xlat
push
adc
imul
jbe
cdq
lahf
arpl
push
shl
push
push
xor
push
dec
or
sar
adc
inc
daa
aas
xor
test
or
dec
and
shl
pop
gs
int3
js
add
fst
loopne
jmp
cmp
test
(bad)
ins
or
or
pop
xchg
cmp
push
pop
call
sub
inc
or
fucomi
aas
aaa
cli
test
push
aas
and
cli
pop
outs
fmulp
pcmpeqb
and
daa
cdq
sbb
xchg
mov
scas
cmps
mov
addr16
mov
inc
pop
inc
or
pop
and
jmp
sub
rol
mov
xor
pop
add
cmp
add
fcom
pop
(bad)
inc
mov
mov
adc
mov
lods
sbb
iret
add
dec
sbb
enter
jecxz
jg
or
sbb
mov
sbb
scas
xchg
adc
mov
pushf
jb
sbb
mov
or
and
xor
cs
mov
ja
sahf
mov
mov
movs
ins
jns
push
repz
mov
jne
mov
adc
or
lds
mov
clc
movs
mov
in
add
xchg
mov
dec
mov
in
daa
pop
push
clc
sub
add
or
pop
arpl
int
ins
shl
aas
stc
scas
hlt
or
xchg
loop
add
ret
daa
mov
jle
pop
pop
pop
pusha
push
xchg
mov
lods
out
jb
mov
mov
clc
and
cmps
fnstenv
sti
pusha
push
push
xchg
add
aam
sbb
movs
mov
mov
adc
pop
xor
(bad)
int3
cdq
xchg
in
cmc
loopne
movs
ja
xor
jbe
mov
test
mov
dec
xor
je
mov
and
mov
ins
sub
mov
cmp
pusha
sub
adc
in
aad
push
inc
cmp
dec
cmp
jle
sbb
repnz
mov
pusha
js
scas
outs
lea
mov
ror
test
cmp
in
push
jmp
dec
xchg
jno
repz
cmp
pushf
add
ror
cmp
scas
xchg
data16
loop
cmps
cmp
fs
mov
enter
sub
prefetchwt1
or
leave
in
mov
cmp
loope
mov
sub
ror
dec
xor
cmc
cmp
xor
adc
clc
sbb
push
xor
stc
push
xchg
jmp
add
jle
sbb
mov
(bad)
sar
jl
adc
jp
pop
sti
pop
shl
retf
cwde
pop
sahf
jecxz
inc
hlt
cmp
shr
sbb
cld
cld
jle
int3
inc
or
popa
mov
popa
cmps
or
das
or
add
cs
pop
sub
pop
leave
xchg
mov
ret
pop
and
add
dec
sub
mov
outs
jmp
sub
mov
bound
test
and
adc
rol
add
gs
outs
fld
mov
push
dec
pop
adc
add
adc
ins
inc
add
adc
enter
ficom
je
scas
add
leave
jne
(bad)
fimul
inc
rcr
and
rcr
enter
bound
ficomp
mov
aad
cmc
rol
sbb
add
ins
leave
jmp
mov
int
bound
fs
jg
cmps
mov
call
mov
loopne
cld
das
aas
jle
rol
jl
add
fnstsw
stc
iret
pop
gs
out
inc
dec
xchg
add
push
xchg
out
ins
ret
jae
mov
fidivr
sbb
mov
sar
jmp
jmp
sub
jnp
mov
stos
jae
cwde
rcr
push
addr16
retf
call
xor
dec
mov
mov
rcl
inc
xor
sbb
popa
push
xor
inc
pop
ins
cmp
push
icebp
mov
and
dec
jle
retf
stc
xchg
das
jmp
sahf
fyl2xp1
mov
push
daa
into
cld
sbb
ins
push
jmp
pop
loope
sbb
sbb
push
sub
jns
stos
outs
inc
les
dec
out
gs
dec
dec
ret
fcom
push
jo
lods
fwait
sub
mov
fistp
enter
fstp
adc
das
or
pop
push
jg
push
in
hlt
jnp
ror
adc
jne
adc
sub
cld
mov
movs
stc
cmp
fisttp
repz
shr
(bad)
lods
scas
cld
push
add
or
les
jae
leave
cdq
push
fadd
push
jno
add
out
xor
jp
sub
sbb
pop
cmps
mov
adc
pusha
dec
test
cmc
retf
xchg
xor
xor
inc
jmp
cmp
or
and
into
js
jl
or
cld
psubb
movs
gs
cmps
lods
sbb
int3
out
push
xlat
and
mov
cmp
js
addr16
push
adc
and
cmps
jnp
mov
jmp
mov
jge
pop
inc
jae
lds
mov
xchg
fldcw
fadd
mov
dec
ins
ins
pop
add
ret
sbb
pop
fild
out
or
jne
fist
or
mov
cmps
scas
nop
lods
inc
outs
ins
inc
scas
jnp
sbb
lea
cmc
ret
and
adc
dec
cwde
mov
push
pop
push
push
xor
jmp
mov
loop
and
loop
mov
call
sbb
scas
mov
cmp
enter
fidiv
pop
in
pop
cmp
fxch
add
js
cmp
loope
mov
inc
(bad)
xor
adc
movs
push
in
add
scas
jmp
xlat
pop
or
clc
lea
hlt
das
lds
int
retf
inc
and
(bad)
aam
(bad)
nop
sub
aas
cmps
rcr
or
ins
cld
cmp
add
and
adc
push
xchg
push
fsub
sub
sub
sub
jbe
fisttp
inc
mov
dec
mov
push
xchg
lds
int
in
je
xor
pop
scas
push
loopne
and
je
popf
not
imul
imul
pushf
inc
or
lea
xor
push
mov
sar
push
daa
and
stos
out
or
(bad)
cmp
sti
test
imul
push
dec
dec
jle
les
pop
mov
dec
jbe
xchg
xor
pop
xlat
cli
add
push
call
lock
pop
test
leave
arpl
pop
fwait
mov
inc
pop
cmp
fcom
inc
xor
fistp
adc
inc
div
out
ficom
(bad)
sbb
sahf
fstp
mov
into
(bad)
xchg
jmp
movs
or
je
sub
dec
mov
cmp
jge
lods
mov
push
sbb
es
hlt
dec
cli
xlat
cmc
xchg
mov
cmp
mov
gs
sbb
or
cld
lods
jae
jl
or
and
sub
cmps
push
jns
dec
xchg
or
jae
ss
sbb
and
mov
out
popa
(bad)
cmp
add
test
cmc
xchg
test
mov
lahf
ret
scas
fs
xor
dec
push
fnstenv
mov
xchg
cs
jno
enter
test
in
push
mov
into
fucom
(bad)
cmp
aaa
cdq
mov
xchg
aam
shr
xor
(bad)
mov
outs
inc
scas
xor
cmp
int
pop
or
mov
pop
xchg
sbb
fidiv
adc
cld
js
push
cmp
pop
scas
and
cmp
sub
dec
mov
scas
lea
mov
iret
push
pop
(bad)
push
cli
imul
mov
nop
jae
dec
out
scas
rcr
cmp
or
push
call
push
mov
sti
or
dec
mov
mov
mov
sbb
mov
stos
bound
dec
mov
jp
hlt
push
sar
stc
into
and
outs
enter
sub
xchg
sub
add
adc
pusha
repz
mov
sub
jo
in
mov
mov
adc
aad
fwait
pop
push
rcr
sbb
xor
mov
test
cmp
push
mov
(bad)
(bad)
jg
jg
adc
pop
adc
mov
ds
pop
mov
mov
popf
push
pop
out
in
leave
mov
sub
leave
pop
and
int3
ret
jno
dec
and
shl
dec
int
ret
std
dec
mov
cli
adc
and
dec
lock
mov
or
scas
int3
in
bound
je
add
adc
into
xchg
mov
and
cmps
xor
and
push
(bad)
fld
lods
(bad)
sub
inc
je
xchg
stos
push
jmp
mov
lock
sbb
jbe
jae
pushf
mov
ror
ds
inc
dec
or
pop
jb
pusha
loope
mov
sbb
cwde
mov
shl
fld
(bad)
cmp
adc
mov
jne
jmp
icebp
scas
jle
push
or
outs
dec
mov
sbb
adc
mov
inc
dec
int3
fidivr
push
lock
cld
inc
dec
jecxz
(bad)
sub
fistp
test
and
jb
and
jge
xchg
push
dec
xchg
inc
lods
mov
fisub
fs
sbb
sub
ret
inc
les
mov
iret
(bad)
retf
jnp
daa
cmp
mov
popf
sub
stos
dec
xchg
and
ds
lock
iret
test
mov
mov
lock
fwait
leave
and
adc
inc
shr
out
hlt
repz
stos
pop
adc
push
add
pop
adc
sar
push
test
in
xor
sbb
loopne
push
jl
repz
and
(bad)
jl
xchg
jmp
mov
sub
retf
push
stos
xor
lock
aaa
shl
(bad)
imul
rol
xchg
outs
in
cmp
sbb
retf
xchg
dec
xchg
cmp
dec
inc
push
mov
and
cmps
sub
mov
cmp
ja
inc
xchg
sti
ret
fist
xchg
stc
xchg
adc
inc
and
aas
inc
inc
(bad)
mov
(bad)
and
ret
movs
add
mov
test
call
pop
cmp
fsub
xchg
push
(bad)
jg
iret
pushw
cdq
sbb
test
mov
int
sbb
ins
mov
sahf
sar
cs
inc
in
frstpm(287
adc
xor
aaa
mov
fwait
cld
addr16
dec
inc
cmp
ja
movs
mov
jns
gs
cmps
popf
pusha
test
out
xchg
jle
jmp
imul
xchg
pop
out
sbb
adc
in
lds
push
mov
add
leave
push
je
les
xor
test
push
or
inc
test
push
popf
mov
xor
add
mov
fistp
jno
add
lock
xlat
clc
and
(bad)
sub
jno
push
outs
sar
ins
jo
and
or
scas
and
or
jp
clc
aad
leave
dec
and
xor
outs
(bad)
add
and
and
and
sbb
in
mov
xchg
sbb
scas
push
shr
xchg
xor
stos
xchg
add
es
sub
jbe
mov
arpl
pop
aad
pop
sbb
cli
pop
mov
iret
fs
test
shl
jl
not
out
das
dec
push
scas
or
xchg
jne
mov
push
retf
not
sub
pop
inc
sub
push
mov
lock
cmp
adc
les
xor
movs
mov
pop
or
fwait
push
and
pusha
dec
lds
xlat
jo
xor
and
dec
ret
mov
out
mov
adc
ja
jge
clc
jmp
mov
inc
repnz
mov
cmp
mov
mov
enter
mov
iret
pop
mov
hlt
add
aam
cmp
sub
(bad)
iret
loopne
push
out
add
jmp
sbb
out
mov
cdq
pop
mov
aas
fwait
jbe
adc
popa
(bad)
aam
xor
stos
movs
fwait
add
dec
(bad)
(bad)
test
mov
ret
lods
addr16
adc
lock
fs
hlt
sub
scas
aas
and
movs
ja
sti
jae
addr16
sub
aas
int3
pusha
or
cmp
push
cmps
add
leave
nop
lods
(bad)
dec
push
inc
adc
test
mov
pop
repz
bound
mov
outs
mov
xchg
ret
mov
jo
or
dec
mov
in
dec
add
fidivr
xor
xchg
mov
shl
fistp
outs
sub
out
ins
shr
pop
popa
inc
test
gs
dec
jae
lods
sbb
or
xchg
sub
push
arpl
pop
mov
aam
mov
scas
pop
arpl
repz
ja
rcr
out
jae
call
pop
dec
cmps
jne
mov
pop
mov
enter
out
hlt
inc
fild
dec
inc
fwait
pop
retf
mov
retf
cmp
xchg
push
(bad)
cld
dec
call
and
fist
pop
pshufw
dec
imul
inc
xor
(bad)
je
and
cmp
mov
out
cli
mov
cmp
fmulp
cmps
mov
out
cmp
fdiv
push
xchg
out
imul
push
loopne
bound
mov
jnp
xchg
cmps
mov
lds
sbb
mov
out
xchg
out
sub
mov
aaa
pop
repz
aas
fld
cli
inc
sbb
dec
mov
aad
and
or
add
inc
xchg
(bad)
jge
movs
or
fldcw
das
mov
(bad)
out
cmp
and
inc
jl
fld
mov
cmp
ror
jmp
sub
icebp
pop
pop
fwait
and
mov
jge
mov
shr
stc
ret
sbb
jae
fcmovne
stos
jge
sahf
call
sbb
jge
push
inc
mov
sub
xor
ror
test
or
aam
and
mov
mov
cwde
fldz
ror
jb
add
jmp
jnp
fwait
sti
repz
jle
push
inc
dec
push
inc
test
add
loopne
xchg
xchg
sub
nop
cmp
into
loopne
sbb
push
mov
dec
jp
(bad)
sar
jl
xor
sub
pop
push
clc
sbb
mov
cmp
xor
or
aaa
int
sub
or
(bad)
mov
and
push
cmp
jne
inc
xlat
hlt
movq
stos
dec
ud1
dec
xchg
ret
fistp
fcmovbe
jmp
scas
xchg
aaa
xlat
(bad)
cmp
out
add
xchg
lock
inc
mov
cs
in
adc
scas
(bad)
push
cmc
cwde
push
out
cmp
pusha
icebp
push
stc
das
add
pushf
pusha
push
ins
or
inc
into
xchg
clc
lea
dec
adc
mov
sbb
and
ins
(bad)
pop
add
inc
xor
repz
inc
fcomp
lock
xchg
jge
push
mov
xchg
adc
cli
add
jno
call
mov
jmp
cmp
sbb
cmp
jecxz
dec
inc
fnsave
(bad)
jbe
aam
(bad)
mov
das
adc
and
pop
pop
add
outs
pushf
pop
je
or
cmp
mov
clc
add
push
push
xchg
sub
jg
cmp
mov
add
inc
test
aaa
je
mov
pop
sbb
xor
jp
ret
(bad)
popf
mov
xor
cld
std
clc
xor
test
inc
and
adc
into
aad
scas
jmp
cmp
lods
mov
xor
ss
sub
mov
sbb
mov
pop
sbb
and
and
jp
scas
adc
nop
ret
mov
mov
mov
jg
pusha
test
push
pop
inc
mov
push
les
jnp
not
sbb
fcomp
push
xchg
mov
mov
cmc
dec
xchg
cmp
test
xchg
(bad)
(bad)
add
sbb
mov
mov
in
push
ret
mov
fbstp
inc
xchg
leave
add
sahf
cmp
pushf
mov
xchg
sti
cmp
test
inc
mov
retf
dec
inc
dec
mov
mov
pop
sbb
(bad)
iret
sub
dec
push
inc
les
pop
jno
mov
lds
int
popf
add
fild
lods
das
ret
in
push
adc
cmp
cmp
ss
xor
inc
mov
stc
pop
repz
inc
(bad)
jecxz
push
xor
or
cmp
cmp
xchg
imul
cmp
jecxz
mov
fucomi
add
repnz
fild
jo
(bad)
das
jne
jne
fdivr
popa
inc
fucomp
call
in
sub
xor
cmp
gs
adc
jnp
jne
outs
sbb
inc
fsubr
add
dec
add
xchg
lods
and
xlat
pop
into
jmp
mov
sbb
sub
or
inc
loope
push
ror
pop
inc
add
mov
mov
push
mov
xchg
dec
in
cdq
pop
fcomp
cwde
adc
push
sub
ss
lea
sub
fld
dec
mov
aam
jl
inc
lods
and
loopne
in
add
ret
xor
adc
jecxz
fisubr
inc
push
mov
sub
std
mov
fsubr
lea
out
push
pop
pop
sbb
pop
popf
mov
sbb
push
loopne
fidiv
inc
inc
sbb
mov
add
imul
outs
cwde
std
ret
aam
mov
arpl
push
adc
cwde
icebp
pusha
jns
fwait
cmp
cmps
imul
mov
inc
cmp
xchg
fistp
dec
jno
mov
sbb
xor
or
sub
cmp
xor
push
in
rcr
inc
sbb
and
ins
test
inc
(bad)
dec
push
jmp
(bad)
scas
(bad)
cs
cmc
arpl
mov
adc
push
iret
sub
out
rcr
out
loope
sbb
loopne
icebp
cmp
jg
cmp
rcl
xlat
movs
ret
hlt
pop
int
dec
sti
push
je
and
retf
fadd
sub
push
fmul
popa
lock
pop
pop
icebp
and
mov
(bad)
sub
in
fisttp
jle
shl
(bad)
jae
xchg
sub
lock
iret
xor
inc
into
dec
mov
cdq
adc
dec
jo
pusha
mov
dec
jmp
sub
inc
sbb
mov
jmp
cmp
adc
loop
push
adc
sub
and
hlt
pop
(bad)
ja
rcl
inc
jmp
dec
dec
adc
in
push
mov
add
jle
jecxz
cs
retf
std
jmp
adc
and
(bad)
jecxz
mov
inc
or
push
push
push
and
inc
lahf
xor
test
ror
mov
and
(bad)
push
andnps
or
inc
sahf
enter
cmp
xor
pop
mov
pop
gs
cmp
in
cmp
sbb
jbe
xchg
add
xchg
sbb
test
mov
jl
pop
repz
mov
adc
ins
aad
mov
and
out
mov
jae
xchg
cmp
push
dec
pop
mov
xor
test
xchg
jge
movs
or
xor
icebp
jl
loope
iret
rcl
retfw
(bad)
cs
dec
cmp
pushf
iret
scas
fsubrp
push
or
xor
sar
mov
stos
jge
data16
mov
mov
xor
pushf
js
ret
lea
or
mov
pop
cmps
data16
fsub
adc
sbb
or
xor
gs
mul
mov
sbb
jp
imul
test
mov
idiv
cmc
mov
cmp
lea
sar
push
inc
xor
out
cs
aad
hlt
cdq
ds
pop
inc
jecxz
lods
cmps
out
aad
jae
jmp
xor
lahf
or
cmp
ret
leave
jle
mov
inc
add
or
mov
sbb
sbb
mov
pop
xchg
dec
das
repz
or
mov
adc
inc
popf
popf
mov
and
cmp
scas
adc
cmp
lahf
and
stos
inc
pop
out
dec
xchg
push
mov
dec
jmp
les
or
add
fldz
push
in
and
dec
std
ins
xchg
hlt
xchg
jne
dec
aam
sub
popf
dec
sub
es
(bad)
call
in
jl
test
push
and
xchg
popf
mov
lds
mov
hlt
jp
sbb
and
cdq
lods
mov
mov
nop
or
inc
xchg
mov
xchg
and
pop
loopne
rol
xchg
ret
add
mov
inc
cmps
jbe
shl
push
mov
xor
xchg
sub
mov
retf
pop
cmp
push
jbe
mov
adc
mov
xor
and
push
test
jbe
mov
pushf
jl
imul
mov
in
push
aad
pusha
inc
xchg
jl
sub
les
sub
call
pop
sbb
stos
aam
dec
xor
fwait
pop
xor
jne
xchg
test
lock
jno
add
cmp
add
xor
inc
test
pop
adc
stos
add
jle
dec
ins
pop
xor
xlat
fwait
sbb
lds
xlat
lods
adc
jl
xor
dec
jo
xchg
js
push
dec
shr
popa
jbe
push
nop
imul
loope
aas
pusha
push
nop
sub
ins
mov
aad
inc
pop
xor
(bad)
mov
mov
aas
xor
mov
xor
imul
stos
jg
sahf
imul
jp
hlt
aaa
mov
lock
imul
shl
adc
inc
je
sub
int3
xchg
and
push
and
ins
pushf
fstp
movs
fcomp
pop
mov
dec
pop
cwde
shl
mov
push
ins
and
or
shr
pop
mov
movs
xchg
and
inc
cmp
mov
cmp
add
mov
pop
imul
mov
(bad)
cmp
jnp
out
mov
dec
push
pop
loop
arpl
call
or
rcl
mov
dec
imul
inc
inc
es
jnp
loopne
inc
test
add
sbb
loopne
jg
pop
jmp
lods
or
call
outs
ret
test
ins
sahf
adc
jp
lea
(bad)
xchg
loopne
test
fst
jecxz
addr16
pop
sbb
in
add
pusha
gs
mov
jle
and
imul
and
and
cmp
jae
cmps
jge
and
cdq
jg
mov
mov
push
pop
adc
mov
cmp
iret
xchg
ins
jmp
sub
cmps
cmps
sbb
cdq
repz
mov
add
add
sbb
in
fimul
sahf
pop
push
retf
mov
mov
mov
sbb
push
lods
sub
mov
iret
out
or
jo
clc
pop
pusha
inc
out
out
push
movs
inc
sub
cmps
loope
jno
sub
js
pop
mov
inc
cmp
add
jl
or
push
inc
leave
adc
xor
or
push
jle
mov
sub
fcmovne
add
or
data16
pushf
into
inc
stos
and
push
iret
push
scas
xchg
adc
fwait
or
add
push
pop
(bad)
sub
test
test
mov
stos
and
push
jp
or
inc
pop
push
cmp
fiadd
cmps
dec
fiadd
xor
pop
mul
adc
xchg
mov
in
cdq
sub
or
mov
pop
pop
mov
xor
aam
sub
lods
(bad)
push
loope
mov
pushf
lahf
ins
dec
nop
push
push
loopne
fist
mov
push
cmp
out
icebp
shl
test
dec
adc
in
mov
ja
sub
xor
inc
xchg
dec
dec
mov
dec
loop
mov
data16
cli
mov
add
pop
dec
es
adc
inc
pop
mov
and
icebp
std
mov
cmp
(bad)
sbb
cmp
push
loop
imul
out
dec
rol
push
sti
test
aam
aas
cli
mov
adc
inc
fist
jnp
jns
adc
sbb
mov
push
push
pop
push
retf
xchg
leave
add
sar
pushf
call
test
fdivr
inc
sbb
fs
(bad)
cdq
aas
inc
fimul
mov
mov
push
cmp
xor
cdq
mov
xor
push
bound
add
ja
bound
test
sub
adc
adc
or
adc
inc
jmp
push
test
push
jns
test
loopne
pop
int
dec
pop
xor
pop
or
sub
repz
cmp
pop
ins
sbb
sbb
add
dec
cdq
movs
dec
pop
popa
shl
xor
lea
mov
or
fdiv
mov
dec
mov
test
(bad)
dec
add
sbb
cmp
dec
imul
aaa
add
or
adc
test
pop
(bad)
daa
dec
xchg
hlt
xor
std
out
and
cmp
mov
cmp
and
loopne
mov
cmp
inc
test
sub
test
(bad)
jp
xor
fdivrp
popa
loopne
sbb
loop
adc
adc
loopne
xchg
mov
fistp
sub
aas
mov
out
xchg
add
cli
add
sub
xor
or
jl
(bad)
dec
loop
pop
sbb
xchg
jmp
push
rol
sub
mov
mov
lock
pop
test
popa
out
icebp
inc
popa
sub
mov
cmps
test
and
(bad)
push
mov
cmp
mov
ins
sub
outs
inc
cwde
push
adc
xlat
sub
push
xlat
sub
mov
mov
and
addr16
mov
fcom
scas
dec
addr16
or
lahf
add
addr16
pop
pusha
lock
(bad)
fisttp
mov
(bad)
jnp
sbb
ins
mov
mov
data16
mov
add
mov
jno
jbe
retf
aaa
addr16
mov
hlt
jnp
mov
xor
pop
push
pop
sbb
pop
mov
cwde
adc
xchg
adc
mov
xchg
mov
test
adc
lock
sbb
dec
dec
push
jp
mov
jge
jo
inc
scas
aas
repz
mov
mov
js
fstp
xor
xor
jp
pop
fisubr
sbb
rcr
daa
test
adc
jne
jp
mov
test
(bad)
pusha
jge
jnp
adc
shl
mov
and
or
adc
in
cdq
mov
and
in
pop
sub
and
pop
js
(bad)
outs
or
push
fdivr
in
pop
adc
scas
int3
movs
popa
out
mov
dec
inc
data16
in
mov
xor
jmp
stc
stc
(bad)
pop
imul
in
rep
sbb
xchg
and
cli
mov
xchg
push
js
arpl
movs
jbe
call
xlat
mov
pop
sbb
shr
dec
dec
cmc
adc
cwde
and
inc
retf
popa
and
aam
sub
or
jo
sbb
pop
psubusb
ret
pop
push
ins
push
jbe
jmp
sbb
repz
or
ins
fsubr
cmps
sub
std
inc
test
imul
pop
cmc
xor
fidivr
lods
into
mov
aaa
pushf
sar
inc
cmp
ds
inc
mov
push
sub
jge
repnz
add
push
inc
aas
mov
xor
jmp
shl
jae
sbb
mov
xor
or
jno
push
cdq
mov
push
push
pop
cli
call
data16
jmp
iret
pop
imul
dec
fwait
or
ret
pop
inc
and
cmps
cmp
dec
mov
pusha
aad
ds
lea
push
popf
xchg
clc
repnz
std
in
fcomp
fisub
inc
call
push
push
push
rol
and
imul
jp
repz
jns
sub
int
push
sbb
es
lahf
imul
dec
push
lods
shr
or
xchg
stos
aam
sbb
lahf
sbb
fsubr
adc
or
cmps
jbe
into
mov
pop
ins
push
int
or
cmp
ins
pop
imul
mov
rcr
xchg
jle
inc
jge
push
(bad)
popf
xchg
pop
mov
les
in
js
cmp
popf
pop
add
int
add
inc
fiadd
xor
mov
movs
inc
lahf
mov
retf
inc
jp
adc
cmp
adc
pushf
inc
idiv
cs
pushf
retf
xlat
sbb
dec
xor
or
push
inc
mov
sar
inc
pop
stos
in
fadd
mov
cmp
and
and
lahf
add
cld
mov
adc
xchg
out
imul
and
mov
aad
sbb
ficom
cmp
cmp
test
adc
out
in
lods
outs
adc
loope
push
cmp
push
adc
mov
mov
rol
es
inc
out
inc
fisubr
or
out
mov
or
arpl
push
cs
(bad)
loopne
mov
stc
cmp
pop
(bad)
sti
ds
retf
cmp
pop
adc
jno
and
lods
sar
cmp
dec
adc
xchg
ret
mov
or
push
adc
out
jbe
and
fistp
sbb
mov
push
mov
ja
(bad)
xchg
stos
jl
mov
pop
dec
sbb
aas
mov
cwde
inc
dec
out
xlat
(bad)
push
(bad)
sbb
(bad)
aaa
sbb
clc
and
jmp
movs
std
mov
inc
add
ffree
mov
cli
inc
adc
mov
popa
add
js
xchg
adc
add
into
mov
dec
jp
stos
xor
es
push
mov
pusha
sub
addr16
cmp
mov
mov
aam
les
push
pop
test
mul
mov
xor
xor
in
sub
sahf
mov
sbb
call
lds
inc
and
dec
in
sbb
cmp
retf
dec
and
stos
ror
lea
in
stc
cmc
pop
test
jae
pop
(bad)
xchg
out
aaa
std
or
dec
push
mov
mov
push
cmp
xor
scas
outs
dec
ins
pusha
jae
push
jo
cmp
xchg
or
out
sbb
ret
test
in
lds
retf
fidivr
cmc
cmc
ds
addr16
or
xor
jl
pop
sahf
ins
ds
sub
mov
lds
cld
sbb
xlat
cmp
stc
lds
push
bound
xchg
in
add
retf
jns
aaa
pop
push
and
lods
cmp
shr
lds
dec
leave
ss
(bad)
xor
test
je
xchg
daa
outs
mov
sub
and
mov
mov
fwait
es
cdq
rcr
mov
movs
push
sbb
loopne
pop
pop
mov
ja
aaa
sbb
push
xchg
cmp
int
xchg
outs
cmp
sbb
mov
retf
test
xchg
or
hlt
and
push
shr
icebp
inc
mov
cmps
add
dec
test
or
mul
fs
pusha
mov
loop
or
inc
out
mov
mov
sbb
fnsave
sub
push
sub
ja
inc
jmp
jecxz
mov
cmps
aas
sbb
daa
adc
jmp
les
xor
test
mov
jl
or
jno
cmps
dec
xchg
xor
cdq
mov
sbb
mov
scas
mov
clc
mov
fmul
jbe
xchg
out
or
mov
pop
inc
xchg
jbe
push
sub
pop
aam
(bad)
jnp
pop
out
inc
and
add
js
jb
fidiv
mov
mov
dec
mov
and
dec
cmp
mov
aaa
inc
inc
xchg
pop
ds
cli
mov
sub
dec
add
sbb
adc
xor
push
cmp
and
pop
lds
hlt
xchg
ja
sub
dec
stos
sbb
pop
sbb
sbb
repz
xchg
dec
cmp
std
mov
sbb
xchg
cmc
jg
add
inc
fnsave
lds
mov
sbb
or
inc
xor
sti
daa
std
cmp
sbb
dec
sub
sub
scas
enter
jae
push
mov
lock
(bad)
(bad)
jmp
movs
cli
adc
arpl
adc
retf
jo
(bad)
mov
xchg
clc
mov
in
jle
adc
fcomp
adc
or
ret
push
cmp
or
adc
xchg
jge
inc
aas
arpl
inc
mov
ret
xchg
or
mov
sub
test
mov
xor
idiv
scas
push
sub
adc
inc
movs
sub
sub
and
push
(bad)
fiadd
lea
mov
jg
cmp
dec
stos
push
push
inc
or
stos
cmps
std
dec
dec
push
jp
or
dec
jmp
sub
mov
xchg
xchg
jo
push
call
mov
ds
int
sahf
sub
aad
pusha
cld
push
lods
xchg
(bad)
and
push
clc
push
pop
sbb
hlt
cmp
dec
(bad)
cld
ret
rcr
sbb
imul
adc
cli
cdq
or
movs
test
leave
out
pop
cmc
xor
shl
out
jp
mov
or
in
mov
jg
mov
inc
mov
sub
fdivr
imul
ror
mov
pop
push
icebp
fucomp
in
mov
addr16
mov
ror
xchg
jns
mov
loopne
call
add
out
pop
push
imul
leave
frstor
call
into
inc
inc
test
hlt
imul
ror
push
cmp
cmc
jbe
jl
shl
pop
dec
jno
in
ret
aas
ins
(bad)
xor
popf
pushf
xor
test
gs
mov
movs
jp
in
imul
ins
jecxz
jno
test
and
repz
jle
sahf
(bad)
js
int
outs
mov
mov
call
xor
add
out
in
imul
push
mov
int
es
(bad)
loop
retf
popf
push
sbb
dec
jo
dec
push
scas
dec
add
add
mov
xor
dec
inc
aas
mov
inc
ss
ins
inc
mov
cmp
push
and
daa
stos
icebp
sub
movs
cmp
push
gs
push
outs
xlat
push
(bad)
sbb
pop
dec
sub
and
adc
mov
jmp
mov
mov
sub
pop
jle
pop
xchg
pop
add
inc
jecxz
sub
mov
xlat
stos
jmp
sub
pop
adc
add
or
mov
xor
inc
test
dec
lds
enter
adc
cmc
mov
popf
lds
in
xchg
sbb
lahf
ins
dec
mov
and
(bad)
cmp
mov
cmps
xor
loop
jns
enter
int
cmp
sub
mov
pusha
loop
jmp
test
mov
add
fcmovu
outs
std
stc
call
sbb
in
test
jp
mov
dec
fcomip
les
fs
(bad)
or
in
sahf
inc
mov
mov
fucomi
mov
cmc
bound
jle
leave
jecxz
pop
call
stc
cmps
outs
and
add
add
mov
cmc
xor
and
retf
jbe
sbb
es
fdivp
nop
addr16
inc
jle
hlt
(bad)
pop
(bad)
in
or
mov
sar
push
pusha
fistp
fs
mov
push
pop
(bad)
jle
jnp
les
pop
(bad)
arpl
loop
and
nop
cmp
xchg
dec
ins
jmp
inc
mov
nop
sub
push
inc
imul
stc
and
test
xor
pop
push
or
ret
gs
lods
adc
jle
pushf
gs
int3
xor
and
jnp
cmc
jl
ja
in
test
clc
dec
cld
mov
adc
ror
bound
sahf
mov
jo
shl
sbb
adc
push
fcmovb
adc
xchg
and
mov
mov
add
test
mov
mov
shl
aas
pop
sub
mov
dec
push
scas
sbb
cmc
gs
inc
push
pop
pop
adc
aas
ret
or
(bad)
sub
add
cs
and
xchg
add
bound
imul
aam
jmp
(bad)
fdivr
jne
add
pop
ins
mov
push
aas
or
in
cmp
repz
and
push
shl
jge
jne
lods
test
mov
hlt
in
in
sar
sahf
test
test
sub
mov
add
call
pop
sub
jp
push
std
call
push
or
fldcw
sbb
push
push
loop
push
or
fild
mov
mov
pop
(bad)
retf
dec
aas
fbld
icebp
daa
xchg
dec
sub
sub
mov
dec
mov
or
test
movs
xchg
xchg
pusha
addr16
inc
fsubrp
mov
nop
jge
dec
dec
cmps
nop
popf
je
jle
aam
ins
fisub
je
je
sti
and
inc
shl
lds
mov
outs
push
pop
int3
mov
in
sbb
cmp
adc
pop
mov
call
sbb
mov
xor
scas
cmc
mov
shr
in
mov
ds
push
cmc
jb
out
add
bnd
push
pop
cmp
(bad)
fdiv
in
push
push
push
add
add
or
jnp
jae
pop
addr16
sub
int3
adc
fwait
pusha
inc
pop
cli
fwait
mov
lods
sub
sbb
int
cmp
mov
lods
xlat
test
cdq
loop
and
sbb
lock
mov
sbb
ds
dec
push
mov
rcl
jmp
cs
fild
push
cdq
js
xlat
aas
inc
inc
cmp
popf
pop
ret
je
pop
daa
pop
sar
and
popa
loope
mov
movs
mov
idiv
into
ins
iret
out
out
cmc
jg
dec
xchg
mov
fwait
xchg
mov
cmps
mov
xchg
add
fnstcw
clc
xor
push
cdq
or
out
xchg
inc
xchg
aam
daa
int3
aad
push
xchg
add
movs
mov
push
adc
inc
cmps
and
mov
push
mov
call
aam
mov
leave
dec
in
xchg
ficomp
shr
dec
lods
loopne
cmc
add
fmul
or
stc
jb
mov
int3
ds
ins
cmps
inc
dec
lahf
mov
dec
call
sbb
push
mov
sub
mov
dec
dec
adc
mov
and
aam
mov
test
xor
cwde
xchg
push
mov
mov
test
pop
or
lock
ins
pop
push
mov
js
jb
shl
and
cmp
add
iret
adc
inc
pop
cli
(bad)
pop
jge
(bad)
sti
push
dec
fst
jnp
cmps
dec
pusha
push
push
pop
inc
dec
lock
inc
mov
dec
popf
sub
and
fnstsw
and
sbb
call
repz
jne
pop
aas
pop
or
call
retf
jl
call
repz
popf
out
mov
jo
fcomp
nop
xor
mov
neg
fidiv
scas
xchg
cli
inc
cmp
sub
add
or
jns
inc
fs
add
sbb
mov
mov
pop
push
mov
(bad)
mov
sbb
push
sti
mov
sbb
sbb
xchg
mov
sbb
pop
fucomp
xchg
xchg
jl
xor
or
jl
jecxz
push
dec
xlat
xchg
add
jnp
push
fcomp
fistp
mov
imul
dec
jo
and
iret
das
mov
outs
sar
dec
pop
push
push
inc
into
sar
stos
pop
arpl
lahf
aad
sahf
sub
cdq
neg
repnz
cmps
pop
fldenv
or
ja
mov
fidivr
cmp
(bad)
dec
pop
in
stos
shl
mov
add
push
lods
xchg
adc
push
fwait
call
dec
mov
neg
(bad)
in
int3
mov
add
mov
cmp
and
fidiv
ret
fisub
ja
push
adc
clc
xor
movs
add
fsub
jecxz
test
loope
(bad)
xor
jp
xchg
cmp
movs
mov
dec
imul
es
scas
pop
inc
rcl
cdq
movs
xchg
test
mov
retf
xchg
or
sbb
push
xchg
lods
sub
lds
js
cdq
loop
aad
xchg
adc
retf
(bad)
hlt
fidivr
mov
push
sbb
pusha
sbb
scas
mov
ds
test
mov
xchg
std
rol
rol
pop
or
shl
xchg
jle
pcmpgtd
in
fbstp
ret
push
stos
dec
cmp
pop
(bad)
in
nop
ins
retf
xchg
sbb
mov
stos
jecxz
pop
jmp
lock
push
inc
data16
dec
jg
push
pop
popa
nop
inc
ja
mov
inc
inc
jb
mov
out
(bad)
fcomip
mov
int3
pop
sub
in
xor
ins
or
jmp
add
imul
outs
jecxz
mov
or
xor
pop
fist
fldcw
xor
pop
jmp
adc
jl
lods
int3
test
push
repnz
cmp
or
pop
(bad)
fs
pop
sub
repz
pop
mov
mov
adc
jl
out
and
stos
jnp
add
xchg
sbb
jp
ds
repnz
xchg
pushf
lock
mov
or
sub
shr
and
jmp
xlat
mul
sub
in
cmc
sar
data16
icebp
cmps
mov
das
scas
or
mov
retf
lea
sbb
add
jnp
xchg
int3
mov
or
push
or
inc
stos
jecxz
movs
loop
test
inc
jns
or
push
adc
inc
fild
fnsave
mov
add
inc
or
and
inc
outs
ret
mov
addr16
es
gs
(bad)
jnp
rcr
and
leave
jmp
rcl
(bad)
cli
mov
mov
sbb
sbb
mov
out
push
cmc
jo
xor
push
rcl
ins
rcr
sbb
mov
inc
fstp
or
mov
pop
aam
inc
push
push
mov
test
mov
cmp
jl
jbe
or
xor
push
mov
rol
out
cmc
ins
pcmpeqd
jecxz
xchg
pmaxub
xor
push
rcl
push
xchg
js
mov
fdiv
push
jl
ins
mov
stos
stos
xor
mov
into
inc
mov
sub
les
mov
xchg
xchg
pop
inc
ins
fnstcw
push
loop
gs
xor
mov
mov
in
outs
call
jp
cdq
fisttp
jge
dec
push
es
adc
jmp
outs
sahf
mov
in
in
sahf
cwde
cdq
cld
or
call
movs
dec
adc
repz
mov
ins
ror
addr16
daa
mov
mov
addr16
add
cmps
fsubr
push
and
inc
xor
mov
daa
nop
cmps
iret
scas
(bad)
in
(bad)
pop
inc
sub
jne
cmc
mov
pop
push
scas
mov
xor
js
mov
xchg
dec
jnp
hsubpd
jg
dec
and
pop
popa
mov
inc
cmp
pop
in
aas
pop
push
into
add
mov
xor
and
sahf
cmp
pop
neg
les
jecxz
cmps
xchg
fild
(bad)
in
and
fld
adc
dec
mov
add
inc
cld
aaa
pop
test
mov
jmp
mov
and
dec
and
(bad)
es
adc
cmp
fdivr
sbb
out
push
jns
adc
mov
and
or
xor
aas
xor
les
dec
leave
xor
sbb
push
or
or
dec
mov
push
mov
inc
cmp
leave
cmp
jno
ins
std
cdq
ins
ror
loopne
scas
int
push
jp
or
and
ret
sti
mov
leave
movs
je
or
dec
sbb
mov
scas
or
jne
push
pop
stc
mov
add
std
pop
aas
fimul
mov
push
adc
shr
leave
dec
mov
call
(bad)
aam
jae
cwde
jecxz
lods
ret
fild
dec
jmp
mov
nop
and
dec
popa
push
les
stc
xlat
jae
add
adc
sbb
cmpxchg
sub
sbb
or
jecxz
retf
mov
jae
and
push
(bad)
ds
adc
repnz
int
retf
aam
dec
or
push
lock
xchg
pop
(bad)
xor
pop
push
xlat
jle
cld
fs
jno
mov
sti
dec
sbb
call
sbb
push
mov
push
aad
aaa
jae
int
ror
xchg
push
sti
inc
dec
push
xchg
jae
lahf
dec
(bad)
push
add
inc
icebp
inc
mov
and
xchg
or
sbb
mov
jns
and
inc
sub
xchg
xchg
or
in
fstp
adc
push
xor
shl
cmp
jl
aas
outs
dec
iret
inc
imul
dec
pop
mov
dec
ficomp
xchg
mov
popf
mov
fidiv
imul
outs
gs
shl
push
aad
jae
mov
sbb
inc
test
scas
(bad)
aaa
xchg
push
dec
xor
iret
ins
repnz
mov
retf
mov
dec
cmps
inc
leave
mov
xor
push
jle
fwait
lds
in
ins
sbb
pop
jl
push
jb
xchg
or
scas
rcr
movs
pop
pop
pop
clc
mov
mov
lahf
or
das
jg
or
dec
push
jl
pop
mov
fstp
adc
pop
fldenv
mov
stos
addr16
and
pop
iret
mov
cmp
mov
xor
out
popf
and
xlat
xchg
dec
jecxz
xchg
sbb
dec
test
and
cli
adc
jle
xor
ds
adc
jmp
ins
xor
mov
and
mov
fadd
out
retf
xchg
cmps
xlat
mov
ja
(bad)
xchg
sub
jge
pusha
and
mov
in
jmp
gs
mov
sbb
mov
sbb
aas
add
dec
stos
int
scas
mov
add
bound
cdq
dec
shr
dec
loop
stos
fimul
inc
pop
imul
dec
cmp
and
and
shl
dec
retf
xchg
imul
inc
test
or
stos
aam
mov
loop
push
ret
add
push
sbb
sub
jno
or
inc
lock
repnz
add
dec
repz
ins
shl
xchg
(bad)
mov
inc
ss
cwde
cdq
push
cmp
sub
pop
aas
xchg
xchg
rol
(bad)
jmp
cwde
add
xchg
data16
fstp
push
xor
fdivr
jbe
ret
inc
mov
lea
jecxz
(bad)
jle
sti
sub
jne
rcl
fs
out
arpl
clc
mov
mov
dec
mov
call
cmp
(bad)
sub
out
jb
adc
mov
and
call
dec
fucomi
add
and
repnz
ins
xor
iret
or
retf
inc
adc
dec
enter
lock
and
(bad)
(bad)
fiadd
jae
mov
push
mov
hlt
mov
xor
xlat
in
test
and
or
jno
call
fxtract
int
xchg
cmp
or
popf
push
mov
sbb
and
sets
ret
int
push
or
add
stos
sub
push
sub
jno
xlat
fs
sub
inc
or
popf
xchg
add
lock
in
push
out
inc
jae
in
jne
mov
movs
dec
xchg
les
outs
push
xor
dec
sub
ret
ret
and
(bad)
xor
dec
scas
loop
gs
js
push
mov
fmul
out
dec
ja
mov
push
xchg
or
inc
mov
push
inc
fadd
mov
push
fadd
rol
enter
sbb
lock
push
out
inc
pop
fwait
and
arpl
and
addr16
addr16
cmp
xchg
outs
popf
ja
gs
jnp
push
push
mov
aas
push
aas
jbe
xchg
test
cmps
(bad)
iret
outs
rcl
dec
mov
inc
pop
cmp
retf
mov
(bad)
fwait
mov
lods
pushf
shl
sbb
lea
ja
or
fstp
adc
ret
jmp
sbb
jmp
mov
dec
test
push
mov
push
fucomip
into
cdq
cs
dec
jns
int3
xor
int3
test
push
cmc
mov
push
sbb
push
xchg
dec
jb
push
pop
aaa
or
les
daa
pop
jb
dec
mov
xchg
(bad)
dec
outs
bound
mov
gs
or
jecxz
cmp
xor
push
std
stos
leave
jbe
mov
pop
xchg
dec
das
push
push
lock
(bad)
jbe
add
aam
sbb
lea
test
rcr
ret
mov
mov
adc
xor
pop
push
rep
rcl
jmp
sbb
push
shl
sbb
cmp
arpl
xlat
pop
xchg
test
ret
pop
sbb
(bad)
lock
dec
pop
lods
lock
mov
xor
in
out
and
jecxz
dec
loopne
xor
mov
in
lea
pop
push
sbb
dec
add
nop
popf
outs
cdq
xchg
gs
outs
inc
push
fisub
sbb
ja
push
cmp
movs
enter
jne
xor
mov
xchg
mov
outs
sar
pop
inc
xchg
pop
fwait
mov
cmp
dec
mov
data16
fldcw
cmps
xor
icebp
xchg
js
xchg
lahf
pop
jno
stos
sub
pop
sub
adc
adc
in
in
lahf
dec
or
push
loope
movs
xor
or
mov
sub
sbb
out
popa
sub
fild
jns
push
pop
daa
adc
push
mov
push
test
xlat
mov
xchg
jle
pop
fld
out
or
mov
dec
jmp
scas
loop
das
inc
imul
mov
inc
fld
fisubr
enter
xchg
xchg
data16
imul
cmp
and
(bad)
aad
mov
sbb
dec
in
push
push
add
stos
bound
inc
fwait
pop
jb
mov
jo
jmp
adc
jbe
or
mov
or
dec
and
out
xchg
cwde
out
inc
sbb
xor
cdq
xor
icebp
(bad)
cmp
xchg
mov
dec
sub
aaa
call
mov
movs
in
in
dec
cmc
xor
xor
sbb
bound
(bad)
xlat
adc
out
ins
push
stos
neg
rcl
xor
scas
enter
xor
jbe
cmp
or
sub
das
inc
scas
xor
ret
ret
je
stos
adc
mov
mov
or
(bad)
sub
inc
inc
mov
fadd
in
in
rol
loope
test
mov
push
in
fnstsw
push
xor
dec
jbe
in
push
(bad)
xchg
call
add
xchg
push
loop
and
not
mov
cmps
push
retf
test
(bad)
sub
cmp
mov
imul
daa
sbb
or
xor
repnz
and
mov
or
test
enter
mov
gs
leave
ss
aam
lods
js
xor
out
inc
adc
sahf
mov
add
mov
test
jnp
ins
lea
call
and
adc
xchg
aas
imul
jp
xor
enter
(bad)
(bad)
adc
mov
mov
and
push
pop
ja
lock
jg
mov
movs
loop
sub
hlt
xchg
jo
inc
dec
aaa
in
fmul
mov
mov
mov
dec
(bad)
(bad)
arpl
mov
out
test
repz
sar
push
movs
mov
cmc
dec
push
push
push
dec
loope
add
mov
mov
and
adc
fstp
inc
cmp
inc
mov
out
(bad)
les
jno
add
cmps
mov
or
xor
pusha
loopne
mov
retf
enter
sbb
mov
and
shl
ss
mov
add
sub
stos
xchg
adc
xchg
sbb
scas
mov
ss
mov
jnp
add
fimul
repz
pop
in
scas
cmp
cmp
dec
and
xchg
in
inc
fcom
std
aas
mov
retf
iret
lock
les
ds
daa
ror
rcl
dec
jle
inc
jnp
xchg
add
xor
shl
cld
sub
std
lahf
jmp
das
jmp
clc
push
push
push
lock
fcom
mov
in
test
aad
pop
xor
mov
xor
pop
dec
inc
ins
jo
shl
in
mov
xchg
daa
ss
outs
dec
mov
inc
sub
test
lahf
pusha
push
cmp
xlat
call
inc
push
add
retf
adc
xor
pop
frstor
enter
xchg
push
shr
jbe
xor
mov
sar
and
call
and
ins
jne
cmc
adc
(bad)
sar
aad
dec
pop
add
int
mov
add
mov
scas
jmp
jge
add
cmp
in
dec
mov
fbstp
mov
add
addr16
outs
adc
ja
jo
cmp
imul
sbb
pop
and
movs
(bad)
out
repz
xchg
stc
mov
pop
mov
cmp
cmp
sbb
pop
add
mov
dec
mov
or
and
daa
lss
fsubr
repnz
arpl
sbb
das
sbb
fisub
cmps
xor
jg
shl
or
xor
jno
sub
cdq
push
sub
aaa
ret
test
enter
nop
and
push
jg
call
lods
jns
mov
out
cmp
sub
sar
repz
push
sbb
inc
fs
aam
clc
xchg
mov
xor
pusha
or
xlat
jns
xor
mov
xchg
je
mov
lods
dec
xchg
mov
inc
test
dec
rcr
jmp
jbe
loop
xor
or
scas
cli
fisttp
mov
mov
ds
movs
(bad)
cmp
sar
xor
pop
pop
jnp
int3
or
adc
xor
cmps
(bad)
arpl
mov
icebp
(bad)
xchg
xor
pop
pop
repnz
sti
retf
cmc
icebp
jg
movs
jg
int3
pusha
mov
fisttp
jo
xor
movs
or
mov
outs
fs
xchg
mov
fucomip
or
add
xchg
call
rcr
stos
sub
pop
dec
fdivr
data16
sbb
icebp
and
repnz
xchg
push
push
jmp
popa
add
fnsave
sub
in
xor
mov
int
in
push
xchg
add
loope
outs
mov
cmp
nop
dec
les
rol
add
rcl
movs
lock
jge
push
loope
sub
inc
dec
mov
pop
dec
or
cmps
pushf
xchg
push
add
test
push
adc
data16
stos
repz
cld
mov
test
mov
jbe
cs
imul
sar
outs
loope
push
pop
ins
cmp
imul
out
aas
xor
sbb
test
in
mov
jnp
mov
cli
xchg
cdq
pusha
mov
lea
(bad)
outs
mov
adc
lods
xlat
ror
add
jmp
or
add
jo
sbb
mov
pop
xor
cdq
jbe
fiadd
(bad)
lahf
sub
sahf
mov
jmp
(bad)
fwait
repnz
jns
add
or
das
(bad)
int3
fsubr
add
xchg
test
push
xchg
jb
adc
sbb
mov
cli
(bad)
xor
mov
xor
adc
ins
dec
loope
sub
sbb
sbb
jg
and
mov
adc
es
aas
je
cs
and
adc
cmp
popf
sbb
xchg
addr16
(bad)
ffree
jp
test
push
inc
or
cld
fstp
dec
dec
repz
jns
mov
lahf
inc
stos
js
and
not
out
test
nop
or
add
not
or
or
das
and
sahf
mov
xchg
push
and
ret
sbb
and
xor
xchg
call
sub
mov
jb
xchg
pop
pop
in
or
cwde
pop
daa
mov
test
dec
sub
repz
adc
xor
mov
sub
adc
(bad)
xchg
cmc
push
cli
xor
test
dec
xlat
call
or
dec
scas
and
imul
and
sti
sbb
in
gs
out
jmp
push
bound
bound
mov
leave
mov
xchg
lock
lods
and
xchg
and
or
dec
test
lock
aad
cld
sbb
inc
ret
push
mov
pop
adc
dec
hlt
xor
cwde
add
adc
shl
dec
sbb
and
mov
cmc
push
fistp
lock
sbb
dec
and
sar
xor
scas
rcr
loopne
or
cmp
scas
mov
(bad)
ins
daa
inc
dec
sbb
int
mov
xor
push
mov
mov
and
out
dec
lahf
sbb
clc
icebp
outs
push
iret
pop
push
mov
add
cmp
jmp
xchg
call
adc
mov
pop
xchg
test
out
inc
sbb
mov
xor
dec
out
inc
cmp
enter
xlat
loopne
fsubr
jbe
mov
jo
adc
pop
repz
sub
push
jns
jns
cwde
sbb
shl
jo
mov
addr16
inc
xchg
jg
(bad)
(bad)
les
or
test
xlat
cs
sti
bound
(bad)
and
push
movs
movs
push
loope
sti
cwde
mov
lds
les
and
ja
sbb
fbstp
sub
div
mov
xchg
and
cmp
mov
stos
int3
cmp
test
adc
push
enter
pop
cmp
mov
or
push
fisubr
lock
mov
in
sub
and
imul
xor
jnp
shr
sub
dec
jmp
enter
out
mov
xor
jmp
(bad)
push
mov
scas
mov
enter
xchg
mov
(bad)
call
ja
mov
ins
mov
(bad)
jo
sar
adc
ss
and
mov
pop
movs
and
jmp
pop
mov
jbe
xor
mov
cmp
or
dec
cmp
jmp
faddp
mov
xor
int3
pop
shl
movs
push
div
test
dec
popa
(bad)
aad
test
xor
mov
or
or
movs
rcl
xchg
(bad)
mov
add
jge
ins
fadd
inc
dec
jp
in
add
popa
fist
xor
jmp
imul
stos
jno
loopne
or
mov
push
in
test
inc
adc
or
sbb
dec
jne
push
cwde
(bad)
jmp
inc
dec
jl
inc
(bad)
test
daa
mov
mov
aam
xor
xor
or
push
mov
test
push
test
push
xor
or
xor
lahf
(bad)
lea
sbb
outs
xor
inc
and
jo
mov
or
ror
dec
ret
sbb
cmp
push
xor
or
test
nop
dec
bound
jnp
push
(bad)
mov
jne
bound
mov
cmc
xlat
imul
in
push
cmp
rol
enter
nop
int
jns
inc
sahf
cwde
jbe
add
test
cmp
adc
sbb
pop
imul
test
test
dec
jnp
(bad)
rol
bound
cmp
cmp
je
mov
fldcw
xlat
in
pop
mul
jmp
ret
xlat
jmp
call
scas
and
outs
ins
cmp
ficomp
jecxz
xchg
call
add
jle
aad
mov
fld
retf
dec
jbe
adc
sbb
movs
dec
sub
nop
push
push
cmove
jo
sub
xor
mov
xchg
scas
ret
scas
out
out
jl
lea
cmp
add
and
jge
sub
sub
push
or
test
test
mov
into
aas
ins
mov
(bad)
retf
push
jl
xor
pop
xlat
in
adc
jno
inc
adc
loop
inc
fcom
cmp
hlt
xchg
leave
(bad)
cmp
ja
pop
mov
aad
xchg
shl
out
inc
jae
mov
xor
dec
xor
test
scas
(bad)
inc
mov
popf
jae
xor
xchg
adc
and
mov
outs
inc
pop
xor
mov
mov
and
mov
test
mov
cvtps2pi
inc
mov
scas
jb
cmp
cli
fwait
loop
mov
(bad)
jle
(bad)
push
inc
das
jne
lahf
scas
push
adc
cmp
push
in
sbb
inc
pop
loopne
pusha
rcr
ss
mov
shr
std
outs
push
das
push
sub
sub
push
out
sub
int3
sbb
mov
adc
scas
pop
rcl
adc
mov
or
adc
and
and
inc
mov
mov
xchg
ss
xor
inc
inc
cmps
mov
cmp
adc
(bad)
or
inc
cmps
out
cli
mov
lods
mov
mov
push
sar
cs
pop
ins
shrd
xlat
repnz
call
dec
and
mov
fnsave
push
pop
jge
mov
xor
stos
jmp
loope
call
out
shr
xor
or
into
hlt
push
push
push
mov
in
(bad)
sbb
fs
(bad)
sti
sub
lock
push
and
mov
dec
jmp
lock
inc
into
sar
loop
loope
imul
ret
cmps
(bad)
jns
scas
xchg
std
jg
or
pop
aas
dec
in
cwde
ins
sbb
mov
js
and
enter
movs
xchg
outs
add
mov
xchg
adc
nop
(bad)
lea
js
xchg
out
cld
stos
adc
cmps
(bad)
jp
in
mov
movs
outs
and
fstp
mov
xchg
mov
push
or
or
mov
mov
or
cld
(bad)
gs
pop
ins
out
mov
sub
pop
std
ror
or
arpl
add
ja
pop
jp
les
(bad)
sbb
popf
test
jmp
dec
push
adc
cli
sbb
add
nop
cmps
(bad)
mov
jno
test
jnp
shl
jg
cmp
sub
fs
mov
sub
sbb
ror
fimul
sub
lea
or
inc
pushf
mov
outs
js
add
and
pop
push
or
adc
out
arpl
stc
push
mov
xor
(bad)
ins
pop
xchg
adc
ret
out
dec
mov
dec
inc
or
std
mov
hlt
loop
bound
int
mov
jnp
cmp
xchg
aam
inc
arpl
rol
outs
arpl
mov
lahf
xchg
fld
adc
adc
imul
sahf
sub
sub
xchg
lods
xchg
xor
jno
jle
pop
pop
jp
ja
dec
out
das
movs
sub
mov
adc
xchg
mov
mul
push
movs
and
mov
fidiv
push
out
or
out
push
push
mov
sti
sti
addr16
in
and
sub
fs
addr16
add
stos
fs
jmp
or
loop
adc
mov
cmp
adc
lahf
outs
or
mov
xor
xor
sub
call
faddp
mov
push
pop
or
xor
and
adc
das
inc
add
out
xchg
mov
jmp
dec
push
mov
sub
movs
xlat
or
lods
adc
jge
sbb
adc
dec
mov
push
retf
pop
test
mov
xchg
(bad)
fcomp
adc
popf
ins
addr16
push
ins
enter
xor
adc
jl
in
sub
sbb
pop
and
out
dec
push
std
fcomp
or
mov
cdq
xor
pandn
mov
push
repz
sbb
das
ins
ret
xor
push
shl
daa
jbe
xlat
dec
or
cs
out
dec
paddusw
sub
add
addr16
fcmovnb
int3
(bad)
mov
outs
ss
in
mov
lods
mov
jo
jbe
sahf
or
cmc
jp
inc
push
mov
aad
in
ret
loopne
sbb
sub
dec
test
add
sbb
std
sbb
push
jnp
daa
adc
(bad)
jo
mov
xor
loope
nop
dec
std
cs
popf
retf
inc
mov
cmp
push
fiadd
test
dec
cmps
push
or
push
nop
(bad)
std
stos
push
adc
imul
pop
or
adc
or
xchg
xor
enter
jle
mov
xor
popa
pop
xchg
fldenv
sbb
add
cmp
sub
cmp
jnp
and
outs
clc
mov
sub
call
or
xor
xchg
cmp
push
enter
mov
aas
inc
repz
cmc
mov
and
sti
dec
pop
(bad)
mov
leave
jecxz
push
scas
xor
lods
push
aaa
xor
mov
add
in
aas
xor
enter
out
in
or
nop
lods
jge
push
cmc
cmp
push
in
lods
sub
mov
aas
retf
lds
rcr
addr16
hlt
jne
in
sub
or
cmp
ret
aas
pushf
jo
adc
icebp
sub
int3
jne
dec
in
fcmovnb
test
jge
je
and
inc
dec
dec
rcl
arpl
in
push
call
push
jl
push
xor
mov
mov
and
xchg
pop
fcomp
movs
mov
loop
js
inc
mov
aam
cmp
add
call
ret
stos
popf
cmp
xor
cmp
pop
div
or
mov
in
xlat
inc
(bad)
out
pop
mov
mov
in
in
mov
in
xor
stos
jl
cmps
or
stos
test
cmp
scas
repz
xchg
pop
shl
and
mov
push
lock
push
pop
leave
dec
cmc
xor
jb
cmps
push
inc
mov
aad
jle
jb
jb
(bad)
cmps
out
icebp
sbb
push
clc
mov
mov
mov
mov
fmul
jecxz
loop
mov
xchg
push
and
shl
sub
sti
xchg
loopne
(bad)
or
xchg
and
push
sbb
mov
es
sbb
sbb
pop
lock
sub
ins
cmp
dec
sbb
(bad)
pop
test
in
stos
jno
ins
hlt
mov
xlat
mov
and
cli
push
movs
jecxz
mov
hlt
fmul
xchg
out
out
xlat
pop
fdiv
pop
push
fcmovnu
daa
jo
xchg
test
push
retf
xor
pop
mov
rol
pop
fstp
out
popa
xor
xchg
leave
adc
addr16
(bad)
sar
xchg
lods
fld
cwde
cmp
cmp
icebp
ins
icebp
ror
push
dec
popf
push
mov
imul
push
mov
ins
add
mov
das
push
mov
xor
jnp
test
add
jmp
add
push
iret
pop
mov
inc
fist
ficomp
pop
lods
pop
(bad)
fdivr
mov
sub
outs
test
mov
xchg
test
and
add
das
add
test
mov
int
scas
sbb
bound
adc
test
and
mov
xchg
test
test
push
out
dec
mov
xchg
dec
shl
fwait
xchg
and
xchg
ins
stos
and
sar
loop
mov
sbb
pop
push
ret
adc
pop
lea
mov
adc
cmp
fwait
and
fnsave
fcmovb
clc
dec
push
stos
sub
mov
pushf
cmp
stos
and
div
mov
sbb
xor
mov
in
lods
lea
dec
shl
das
or
sub
test
loope
or
mov
fistp
sbb
sub
and
add
std
test
or
in
mov
jmp
inc
mov
push
inc
cwde
leave
or
out
jecxz
ja
aas
imul
push
fcom
fild
or
pop
clc
js
push
mov
and
push
dec
fcom
call
push
shr
out
std
pusha
clc
xchg
inc
pop
in
jo
push
js
sub
sbb
idiv
out
dec
xor
mov
push
rcr
mov
fist
hlt
sub
jbe
(bad)
pop
repz
rcl
add
dec
iret
cdq
cmps
jmp
sbb
jno
push
xchg
inc
xor
(bad)
not
sbb
pushf
stc
in
(bad)
cmps
mov
ins
ds
mov
cs
pop
adc
cs
push
jb
dec
shl
xor
test
cmps
das
pop
mov
push
scas
scas
test
lock
shl
lock
stos
dec
(bad)
cmp
adc
inc
mov
jmp
stos
push
mov
je
or
daa
and
stos
out
jle
das
add
dec
xchg
test
push
push
out
scas
ins
fs
das
xor
je
mov
ins
sbb
inc
pushf
adc
sub
fcomp
test
push
push
test
mov
imul
ins
jecxz
push
mov
aad
nop
cmp
and
push
jnp
cli
pop
loopne
sbb
out
into
add
jp
pop
or
xchg
sti
mov
push
mov
xor
inc
adc
ins
or
sbb
(bad)
pushf
mov
fldlg2
in
cmps
sub
dec
in
or
cmp
mov
fistp
push
pop
dec
push
aam
dec
jo
mov
jmp
(bad)
cmps
xor
push
cmp
inc
xchg
test
lock
sbb
out
in
pop
jl
cmp
push
retf
es
scas
mov
loope
jmp
div
gs
lahf
popf
movs
stos
out
and
gs
aad
fmul
ja
arpl
sub
pop
pushf
cdq
jae
sbb
mov
xchg
sbb
imul
xchg
popf
fldenv
aaa
xchg
sbb
dec
call
sub
mov
ja
mov
adc
bound
mov
int3
adc
cmp
push
pop
aaa
ins
dec
add
addr16
shl
in
popa
mov
add
add
icebp
cmp
xchg
rcl
in
cwde
call
xor
iret
lods
mov
(bad)
test
fimul
jno
pusha
mov
leave
popf
adc
xor
cli
loope
push
mov
(bad)
jns
das
je
cmp
adc
jmp
push
lods
sbb
xchg
sbb
(bad)
fs
bound
mov
inc
fst
xor
mov
out
cli
in
push
jno
mov
and
sbb
hlt
ds
mov
mov
bound
pop
es
lock
fadd
ss
cmps
add
fdivr
fiadd
jge
lods
push
cld
out
ins
sahf
xchg
dec
pop
stos
xchg
mov
push
fs
adc
adc
push
push
add
jns
push
retf
pop
adc
enter
cmp
hlt
cwde
repz
stos
adc
rol
data16
add
mov
jg
pushf
popf
sbb
js
sub
fdivr
imul
rcr
jg
cmc
sub
mov
int
out
jecxz
adc
jmp
ret
out
sar
jmp
xchg
call
inc
call
mov
mov
add
xor
loope
push
lock
popf
daa
retf
div
mov
(bad)
cmp
pusha
inc
sub
add
push
pop
retf
jecxz
cmp
and
cdq
stos
ins
dec
pop
in
jmp
add
mov
mov
loop
sbb
xchg
int3
mov
fcomi
std
in
cmps
push
or
pusha
ja
nop
jg
sub
ds
sub
mov
sti
ret
cld
cmp
mov
jno
pop
cmp
xchg
(bad)
lahf
pop
cdq
mov
jl
add
push
adc
fldcw
cmp
mov
arpl
xlat
(bad)
jp
out
loopne
lea
xor
cli
bound
stos
lds
rol
je
scas
xchg
in
adc
test
lds
div
inc
sbb
xchg
sbb
loop
int
add
(bad)
(bad)
cmp
sti
xchg
ins
jb
aas
cmp
fldcw
in
jnp
mov
retf
xor
shl
jg
inc
int3
(bad)
aas
dec
retf
push
push
imul
cmp
and
mov
sbb
jo
mov
dec
cmp
xchg
arpl
xchg
add
loop
xchg
stos
mov
pop
jb
jmp
inc
arpl
scas
inc
add
fdivr
repz
jne
(bad)
cmps
int
sbb
jge
cmc
(bad)
and
mov
pcmpeqd
push
imul
(bad)
sbb
pop
out
cmps
or
xor
call
stos
sahf
iretw
daa
fdiv
mov
lods
movs
aam
pop
or
arpl
pop
scas
dec
movs
inc
fadd
pop
out
idiv
mov
mov
popa
adc
jns
outs
std
(bad)
inc
inc
test
jecxz
(bad)
pop
mul
cmp
sbb
retf
neg
icebp
and
mov
jbe
push
scas
sub
mov
cdq
sahf
cmp
jl
sbb
pop
fcomi
arpl
(bad)
int3
pop
and
mov
xchg
inc
test
jecxz
sahf
mov
shl
mov
mov
sti
mul
sahf
jbe
cmp
ja
inc
fld
rcr
ins
(bad)
and
xchg
test
cmp
cld
mov
sub
mov
cmp
mov
or
mov
mov
cwde
inc
jmp
vmread
inc
xor
dec
ss
ror
nop
ins
sbb
(bad)
and
loop
jmp
je
movs
(bad)
lock
pop
loope
push
xor
jno
mov
adc
mov
mov
jmp
jb
mov
popa
call
and
aam
mov
pop
js
dec
xlat
out
add
mov
jnp
pop
ror
mov
cmp
test
daa
pop
jbe
or
sbb
cwde
lods
mov
sbb
sub
adc
in
xor
push
loope
adc
pop
pop
stc
repz
lea
add
cmp
sbb
push
ss
sub
mov
sar
lahf
adc
aam
sbb
arpl
xlat
gs
popa
sub
in
fst
scas
daa
cdq
mov
mov
hlt
xchg
hlt
bound
(bad)
out
ins
add
ss
or
retf
sahf
dec
add
outs
shl
scas
rol
(bad)
cmp
adc
sub
jno
mov
cmp
lea
push
(bad)
stc
retf
das
mov
shl
lods
sahf
adc
aaa
jecxz
lea
(bad)
test
lea
inc
(bad)
mov
or
cmp
jmp
push
mov
inc
mov
mov
jns
mov
cmp
enter
cmp
iret
sbb
in
imul
mov
inc
mov
lea
push
mov
fisub
cld
push
dec
jecxz
std
(bad)
stc
or
outs
fist
mov
fs
pop
aaa
js
jle
mov
cs
loope
test
(bad)
push
mov
and
push
popa
clc
fistp
lea
xchg
add
fst
lods
shr
out
stc
repnz
je
jg
push
mov
inc
cmps
adc
mov
inc
push
dec
push
push
loop
rcl
mov
jg
or
and
pop
imul
(bad)
call
cmp
loope
outs
or
xor
gs
outs
or
in
and
lds
and
pop
into
or
xchg
(bad)
ret
or
push
add
out
pop
bound
mov
xor
mov
add
mov
push
xor
sub
inc
jmp
int
rcr
mov
cmp
test
dec
xor
adc
setge
shl
xor
sbb
ja
imul
pushf
addr16
and
pop
loop
(bad)
sbb
iret
je
xchg
mov
xchg
xchg
outs
xor
cmps
loopne
pop
cmp
xor
lea
sub
mov
(bad)
int
int3
or
(bad)
lea
mov
mov
xlat
jb
dec
cmp
inc
mov
fdivr
imul
add
outs
pop
adc
pop
es
mov
int3
push
rcr
(bad)
icebp
loope
retf
cmp
je
sub
mov
and
pop
xchg
adc
enter
and
jmp
cdq
jge
movs
push
xor
jp
mov
adc
jmp
js
add
mov
push
dec
out
ss
pop
mov
push
inc
add
push
stos
mov
leave
jmp
and
ror
stos
addr16
jae
std
rep
pop
ins
sar
mov
fisttp
cmp
mov
inc
ret
jne
xchg
lods
out
add
or
mov
cld
in
mov
pop
mov
(bad)
cmp
gs
xchg
adc
add
lods
pop
scas
xchg
repnz
sub
adc
and
mov
cld
and
int
jmp
pop
sbb
loop
mov
jle
jnp
add
ins
int3
mov
lock
ss
sbb
out
loopne
nop
movs
mov
ficom
(bad)
pop
push
loop
sbb
out
xor
or
repz
loop
xor
xor
push
imul
pop
rol
repnz
and
cld
add
pusha
in
test
icebp
and
scas
xchg
jmp
sub
lods
mov
mov
cwde
xchg
not
mov
inc
adc
je
mov
(bad)
mov
mov
imul
jbe
xchg
xor
pop
pop
push
mov
jp
adc
push
loop
cmp
xchg
fs
std
jmp
icebp
in
or
sahf
jl
in
cmp
pop
jne
fistp
test
mov
sbb
shl
loopne
iret
jne
push
push
es
imul
jmp
push
sbb
cmc
iret
(bad)
adc
in
rcr
dec
inc
and
js
push
jp
test
ficomp
dec
add
daa
fiadd
out
and
pop
popf
mov
mov
jg
cmp
mov
add
pop
stos
inc
leave
inc
sbb
sbb
rol
pop
loopne
jmp
outs
into
mov
sbb
retf
imul
test
out
fisttp
cmc
ds
mov
and
cmp
cdq
jne
fnstcw
jne
cmp
icebp
jge
jp
xchg
jle
pop
mov
std
test
push
repz
xchg
fadd
dec
loopne
aam
repz
mov
jp
sbb
out
out
sbb
adc
ins
or
jl
or
in
loope
cli
jno
lea
shl
pop
aas
mov
inc
jp
ss
test
imul
imul
xchg
das
mov
xor
mov
mov
push
push
jb
pop
loope
xchg
(bad)
and
mov
mov
fidivr
cmp
xchg
ins
cmps
inc
and
push
xor
pop
mov
ror
push
mov
ja
ss
jl
add
jmp
jbe
xchg
inc
lock
js
sbb
pushf
pop
push
cmc
mov
test
fsubr
aam
(bad)
ficomp
push
pop
add
sbb
jle
aaa
sub
xchg
xchg
jns
mov
sub
or
dec
pop
cmp
gs
sub
inc
ja
inc
setle
lds
and
mov
rol
mov
enter
dec
and
add
int
mov
rol
fs
xor
aas
sbb
mov
or
dec
sbb
movs
cmps
mov
imul
mov
rcr
shl
sbb
and
int
scas
add
loopne
int
fdiv
and
movs
call
jbe
jns
inc
pusha
outs
add
lock
push
add
out
jg
adc
fldcw
ins
pop
sub
push
int
ds
mov
jge
sub
pop
dec
sbb
xor
in
es
ret
inc
push
aad
mov
or
cmp
lock
shr
in
adc
int
aaa
add
push
in
adc
mov
inc
fsub
fnsave
retf
into
push
jecxz
mov
mov
inc
mov
jmp
addr16
sahf
mov
femms
mov
outs
ror
dec
and
push
movs
cmp
xchg
xchg
push
das
adc
and
inc
lea
push
push
movs
or
in
sub
pop
into
mov
aaa
inc
test
mov
loopne
stc
lds
and
jp
movs
sbb
repnz
sti
xchg
out
mov
adc
or
adc
cmp
ret
out
cmps
sbb
movs
mov
call
sub
enter
fidiv
ret
mov
dec
add
mov
arpl
mov
cmp
lods
jg
enter
inc
pop
jbe
jmp
xchg
adc
or
mov
cmps
mov
icebp
xchg
pushf
jbe
cmp
xchg
inc
mov
repz
bound
adc
and
jecxz
cmp
clc
imul
mov
mov
jp
call
loope
leave
sbb
ret
iret
fild
sbb
jle
push
pop
inc
mov
push
retf
call
jmp
sbb
js
and
mov
add
xchg
in
mov
jo
mov
add
push
imul
jmp
aam
mov
in
fisub
(bad)
pushf
cmp
push
fucomi
add
jbe
fs
sbb
pushf
cmps
popw
les
inc
push
pop
mov
xor
ins
mov
stos
lahf
cmp
or
sbb
dec
fst
jae
ficom
sbb
jg
push
leave
jo
cs
dec
and
pop
mov
cs
xor
mov
inc
inc
call
cmps
sbb
stc
hlt
jg
loop
dec
adc
pop
mov
div
mov
dec
fnstenv
inc
mov
sub
movs
xchg
rcl
enter
arpl
mov
mov
pop
cmps
and
adc
fistp
iret
xchg
pusha
in
int3
jae
dec
std
cmps
sbb
or
gs
(bad)
out
pop
popa
leave
and
clc
push
jecxz
cwde
mov
leave
mov
jno
xchg
neg
fisubr
fisttp
ror
adc
in
xchg
push
scas
pushf
retf
ins
lds
cmp
mov
sub
pop
in
mov
dec
pop
adc
das
mov
jecxz
push
pop
test
scas
xor
mov
aam
cmp
push
ror
ficomp
jl
push
mov
pmuludq
(bad)
(bad)
out
push
mov
movs
rcl
mov
mov
outs
out
(bad)
cmp
xor
jp
xchg
adc
or
cmovg
mov
outs
sar
pop
mov
in
push
(bad)
add
adc
mov
lahf
jmp
xchg
mov
mov
mov
out
imul
mov
sub
and
mov
xor
fidivr
mov
xor
jl
fucomp
and
out
jmp
and
retf
mov
cmps
or
inc
outs
div
dec
fisttp
scas
push
or
adc
and
push
mov
mov
lock
dec
fnstsw
mov
mov
xor
ds
add
data16
xchg
adc
stos
push
xlat
pop
fisttp
inc
test
mov
jne
push
jmp
fs
cmp
add
hlt
outs
dec
fbstp
cmc
pop
xchg
xor
ins
pop
mov
mov
les
mov
jo
ret
or
jnp
pop
jmp
push
lea
(bad)
jmp
or
test
and
shl
mov
in
(bad)
popf
and
js
jp
sahf
add
mov
hlt
daa
out
push
mov
pushf
into
pusha
(bad)
adc
call
ins
jns
cdq
arpl
aas
and
clc
sbb
int3
sub
clc
or
push
push
xchg
cmp
xchg
cwde
stos
mov
(bad)
cmp
xchg
jne
jnp
mov
push
push
std
xor
mov
dec
loope
repz
scas
call
scas
fcmovnu
in
test
mov
lods
push
and
ret
cmps
cmp
movs
and
jb
add
gs
scas
cmp
movs
(bad)
mov
jne
adc
pop
push
jecxz
rcl
cmp
aad
cmp
inc
icebp
je
scas
adc
lds
sub
enter
cmp
push
bound
call
jmp
lds
popa
mov
ds
jb
jl
lods
mov
arpl
mov
out
inc
pop
aad
dec
sar
cmc
inc
(bad)
movs
push
arpl
mov
int
push
cld
inc
adc
mov
dec
push
aad
pushf
dec
call
imul
jae
sbb
jns
mov
inc
out
dec
jecxz
and
pushaw
lods
mov
mov
sub
mov
div
into
mov
frstpm(287
rol
or
scas
cmps
fld
imul
dec
jge
fdiv
pop
pop
stc
iret
mov
mov
into
pushf
cmc
push
dec
inc
out
push
push
mov
push
imul
mul
ins
pop
mov
les
les
retf
nop
in
cmp
inc
lods
xchg
fnstsw
pushf
mov
mov
aas
push
mov
mov
dec
popa
and
xor
adc
stc
sub
pop
retf
dec
dec
cmp
imul
aas
jg
arpl
or
pop
mov
lock
aad
rol
adc
nop
add
(bad)
push
sub
jns
ffreep
xchg
inc
stos
nop
fnstsw
push
jne
sbb
cmp
push
div
and
pop
movs
jbe
jl
test
mov
ret
dec
xchg
xor
stos
add
jle
inc
cmp
cmp
add
cmp
ds
push
dec
and
stos
rcr
dec
jecxz
or
stos
jno
xor
mov
or
sub
and
adc
mov
ror
mov
add
adc
xchg
inc
loopne
cmc
or
sbb
xchg
int3
jecxz
retf
add
retf
mov
pop
adc
xor
repnz
es
push
jno
sub
call
or
frstpm(287
jecxz
cmp
add
pop
mov
pop
fiadd
cmp
xchg
idiv
xor
push
sub
popf
stos
mov
xchg
into
mov
sbb
add
cmc
fs
add
enter
pushf
sahf
pop
add
pop
push
jg
hlt
aaa
nop
pop
and
adc
or
scas
pop
mov
pop
movs
jae
int3
mov
mov
aad
js
mov
pop
lods
push
jae
lods
jle
jmp
imul
mov
test
ins
or
aas
aam
cmp
dec
mov
int3
dec
jl
stc
sahf
dec
stos
xchg
push
cmps
and
add
pop
call
xor
aam
sub
test
inc
cs
cmp
dec
sub
in
fisttp
scas
and
dec
iret
gs
or
imul
imul
fwait
add
jnp
jp
hlt
dec
mov
out
xor
fisttp
loopne
and
add
shl
rcl
data16
inc
add
ret
ror
add
out
push
sahf
jns
into
mov
fadd
call
gs
pop
dec
dec
out
cwde
add
mov
inc
jo
cdq
mov
das
sahf
popf
jb
push
jg
pop
das
mov
ins
lds
aaa
xor
push
or
int3
xchg
inc
ins
rcr
mov
mov
jp
sub
xchg
push
sahf
add
mov
inc
jge
mov
adc
add
in
or
pushf
imul
sbb
xchg
xchg
scas
ss
ds
pop
test
or
outs
pop
xlat
ds
inc
mov
cmps
stc
push
add
add
mov
push
sub
das
test
dec
jle
imul
ret
pop
and
stc
sub
mov
pop
test
jecxz
cmps
movs
mov
cmps
jecxz
ds
sahf
cmp
pop
cli
ret
mov
das
xlat
sub
mov
(bad)
or
adc
and
sub
jp
fld
jge
xchg
xchg
enter
sbb
push
mov
jo
dec
dec
xor
dec
xlat
mov
pop
mov
pop
ss
push
arpl
mov
cmp
xchg
or
and
sub
rcr
shr
jmp
(bad)
mov
mov
cmps
out
mov
xchg
out
push
xchg
fbstp
shl
cs
fbstp
add
mov
bound
xchg
in
and
(bad)
repz
repz
inc
mov
mov
xchg
movs
xor
xchg
je
pop
jmp
fisttp
dec
xchg
sub
xchg
bound
out
lea
lahf
pop
mov
xor
fimul
xchg
in
loop
push
adc
mov
push
das
cmps
xor
daa
loop
add
lea
or
sub
pop
xor
sub
jge
push
sub
int
adc
xchg
mov
xor
and
stc
mul
in
rcl
jle
(bad)
fs
fcmovne
icebp
jns
add
mov
cmp
pop
mov
(bad)
cmc
data16
scas
lods
lock
push
addr16
mov
in
jmp
mov
lods
push
fstp
or
retf
xlat
push
repz
cs
or
push
adc
adc
cli
lock
mov
loop
mov
pop
hlt
neg
dec
fild
dec
push
cmp
mov
bound
out
xchg
add
ds
outs
jb
push
outs
push
mov
and
idiv
scas
jb
inc
xchg
push
test
push
add
mov
add
adc
or
sahf
outs
pop
cmp
movs
sar
mov
cld
push
sbb
sar
lods
pop
dec
out
mov
retf
pop
imul
mov
push
pop
pop
data16
jl
out
test
scas
inc
ror
loop
jb
or
push
cmps
and
jg
xchg
aas
mov
pop
add
sub
xor
inc
xchg
out
add
mov
mov
cmp
(bad)
retf
add
inc
sbb
mov
or
and
jmp
mov
sub
(bad)
mov
cli
and
cmp
cmp
call
pop
xchg
test
std
pop
movs
xor
pop
neg
dec
push
lods
sub
cmp
retf
jmp
sahf
loope
imul
pop
ja
mov
pusha
data16
mov
dec
test
std
add
cmp
cmc
sub
in
jge
mov
and
fcom
and
aaa
int3
xor
jnp
pop
mov
adc
cli
pushf
jge
jnp
addr16
loopne
push
jg
dec
fadd
enter
outs
cmps
clc
and
outs
popa
jecxz
repz
mov
stc
sbb
cmp
mov
scas
cwde
adc
lds
jmp
dec
add
imul
in
out
nop
mov
sub
ss
data16
inc
movs
loop
sub
(bad)
retf
out
stos
push
enter
das
xchg
xor
xchg
fadd
popf
jecxz
pop
push
xor
les
dec
(bad)
retf
jmp
and
dec
mov
jbe
fcomp
sar
pusha
js
cmp
shl
aad
add
or
add
mov
(bad)
gs
inc
cdq
xchg
(bad)
fbld
cmp
inc
cmp
adc
xchg
cmc
ror
mov
jnp
stos
and
fstp
daa
push
and
int3
sub
mov
shr
retf
mov
jmp
in
cmps
jmp
gs
mov
repz
jle
push
add
jo
xchg
adc
outs
sar
push
jge
xchg
sub
(bad)
fistp
mov
ror
je
push
das
pop
popa
sub
jns
add
inc
push
mov
or
mov
outs
(bad)
clc
data16
sbb
in
(bad)
les
fstp
xor
dec
and
inc
fsub
cli
mov
jmp
mov
and
mov
adc
mov
or
mov
push
lds
movs
or
dec
cmc
push
leave
test
jae
pop
or
setnp
test
xchg
dec
mov
mov
adc
test
mov
scas
fld
mov
mov
fwait
fwait
push
jp
mov
push
and
adc
vprotw
dec
dec
inc
fisttp
outs
and
call
jae
xor
push
jno
sbb
pop
ret
push
scas
jge
inc
cmp
dec
add
ret
pop
jnp
not
not
mov
inc
push
aad
aad
inc
in
adc
or
jno
into
(bad)
cwde
pop
mov
call
pop
sub
cmp
mov
sbb
stos
lea
test
mov
ss
lahf
enter
es
cmp
daa
daa
ja
mov
pop
and
mov
sub
mov
adc
add
adc
pop
das
inc
into
add
icebp
and
nop
add
das
ins
xchg
and
xabort
jl
xchg
pusha
cmp
and
stc
mov
aad
sahf
ja
mov
idiv
push
ins
popf
fstp
js
sbb
adc
repnz
xor
mov
retf
mov
pop
push
xor
retf
cmp
movs
dec
aad
and
cmps
inc
js
and
fwait
mov
mov
jno
mul
xor
out
stc
or
(bad)
adc
ins
das
aad
lahf
jg
push
ret
repz
sbb
sti
jno
sahf
lahf
jle
add
cmps
dec
pop
lds
jl
and
sbb
or
mov
cmp
lds
sar
scas
fsub
sbb
ja
ret
out
dec
inc
xchg
loope
fbld
mov
dec
loopne
sub
xchg
mov
adc
and
add
rcl
mov
not
lods
jmp
popa
repz
cmp
repnz
push
jo
pmaxub
mov
cmc
jne
ins
sbb
sub
jmp
bswap
push
push
cmc
xchg
imul
mov
rcl
push
scas
ins
imul
push
mov
ds
sbb
(bad)
pop
lea
push
inc
push
pop
pushf
fcom
mov
(bad)
popf
addr16
mov
push
pop
sbb
stos
mov
icebp
push
daa
xchg
inc
sub
fmul
add
xor
or
sbb
out
adc
mov
adc
jl
inc
mov
out
cmp
inc
aaa
test
test
add
and
sbb
ret
xchg
outs
popa
sub
fcomp
idiv
adc
xor
or
push
cwde
add
jle
mov
cmp
ins
pop
sub
jp
xor
inc
arpl
push
push
popa
clc
xor
sub
pop
push
jae
call
mov
test
loop
xchg
push
jmp
shl
jle
inc
mov
out
dec
sti
sub
fmul
mov
aam
jns
mov
loope
fwait
retf
repz
data16
inc
add
cmp
or
push
fist
(bad)
repz
jmp
test
fsub
sbb
ror
into
xchg
(bad)
jge
imul
into
stos
sub
lods
dec
jecxz
adc
cs
dec
jg
mov
mov
test
rcl
in
rcl
xchg
push
pop
mov
mov
div
fisub
jmp
scas
push
scas
ss
stos
test
push
inc
dec
movs
jmp
inc
jne
ja
popf
mov
movs
test
fnsave
repz
aaa
xchg
into
ret
cmp
lods
pop
mov
scas
xor
pop
fistp
rcr
inc
add
ds
xchg
inc
and
mov
dec
hlt
add
sub
push
jcxz
xor
xchg
inc
clc
fst
cmp
xor
jnp
mov
cdq
(bad)
popf
jg
js
mov
pusha
je
fwait
inc
adc
mov
or
dec
adc
inc
inc
or
std
add
jo
ins
jge
cwde
inc
fidiv
repnz
inc
retf
push
clc
dec
jbe
ss
aaa
xor
pop
out
pushf
xchg
ror
mov
inc
xor
xor
ffree
call
gs
mov
mov
das
int3
(bad)
sbb
popa
popf
arpl
mov
stos
xchg
mov
sub
mov
retf
shl
enter
jns
sub
mov
sar
outs
cmp
stc
test
jmp
push
hlt
adc
fild
mov
cmc
pop
add
int3
stos
repz
xchg
sbb
fnstcw
mov
fcmovu
sbb
movs
lods
pop
lds
xchg
xor
pop
fistp
adc
in
jb
inc
cli
or
(bad)
jp
pop
in
add
test
mov
ins
fcom
pop
scas
and
and
and
call
and
fs
sub
mul
nop
mov
sbb
add
inc
dec
daa
repz
and
cwde
inc
adc
mov
add
movs
movs
pop
xor
int
xor
pusha
cmp
inc
jno
jae
int
enter
jne
xor
mov
imul
or
or
adc
mov
xchg
mov
mov
cdq
fs
push
adc
push
imul
sbb
sub
mov
arpl
in
sub
pop
jmp
xor
push
jmp
pop
test
mov
dec
sub
sbb
popf
pop
mov
scas
scas
push
push
stos
idiv
push
imul
and
mov
aas
mov
or
mov
adc
xchg
mov
sbb
gs
ins
fcomp
xor
push
cmp
jmp
(bad)
lods
int
das
add
sahf
xlat
mov
(bad)
out
sub
outs
add
popa
inc
shl
shr
hlt
adc
dec
or
call
push
popf
jne
stos
aam
xchg
push
mov
inc
adc
call
outs
cdq
cmp
push
push
(bad)
cmp
loop
into
arpl
pop
(bad)
imul
lock
lods
mov
dec
xchg
sub
and
inc
or
arpl
rcr
xlat
cmps
cmps
cmp
push
push
js
xchg
jmp
fcmove
pop
inc
fist
imul
call
pop
mov
sbb
jl
inc
fsubr
test
sub
out
mov
mov
iret
jmp
pop
imul
cli
enter
inc
xor
pushf
jo
aas
mov
jecxz
and
(bad)
icebp
ss
and
scas
popf
pop
pop
jae
cmps
aas
dec
movs
xlat
fimul
sbb
stc
sub
fidivr
mov
fwait
xor
pop
rcr
adc
adc
xor
pop
dec
dec
pop
scas
mov
pop
mov
jmp
mov
shr
and
mov
rol
leave
inc
jno
pusha
cdq
mov
sbb
xchg
gs
repnz
dec
mov
jg
rol
inc
mov
dec
and
push
cmp
mov
dec
push
adc
stc
arpl
arpl
jns
arpl
mov
push
and
add
add
jns
(bad)
mov
push
inc
xor
jmp
stos
dec
sbb
xabort
sbb
xor
sbb
test
xchg
sbb
jmp
inc
cli
outs
jnp
stc
hlt
not
lock
movs
mov
das
call
or
outs
pop
sub
adc
dec
push
fimul
enter
popf
jnp
cmps
(bad)
rol
mov
loop
mov
xchg
fstp
xchg
xchg
sub
imul
in
out
inc
jb
shl
add
out
push
idiv
aas
xor
div
or
xor
mov
lods
lahf
pop
mov
push
cs
fidiv
inc
jns
push
fldcw
mov
adc
push
leave
mov
xchg
jbe
add
mov
and
outs
push
jo
mov
mov
adc
mov
inc
jge
into
std
sub
test
mov
inc
sub
mov
mov
xor
inc
repz
jo
push
(bad)
shl
gs
dec
jmp
je
popf
lock
popf
test
push
sahf
sbb
sbb
adc
aad
pusha
or
popa
arpl
or
fdivr
mov
retf
fild
fcom
ficomp
push
xor
popa
stos
std
test
lea
dec
sar
add
test
sub
ins
dec
loopne
fldl2e
xchg
ror
cmp
adc
movs
mov
adc
out
mov
jecxz
aas
sub
outs
shl
adc
or
sub
inc
mov
call
aad
pop
out
inc
fxam
scas
mov
mov
add
push
and
mov
push
pushf
rol
leave
cmps
imul
cli
or
es
ins
das
sub
mov
fldenv
xor
aaa
aas
pop
outs
xchg
add
inc
in
or
retfw
sbb
sbb
loopne
cmp
(bad)
xchg
jae
lea
or
mov
aam
dec
push
pop
jmp
pop
inc
pop
sub
dec
mov
push
add
icebp
jmp
lock
in
xchg
sbb
cmp
lea
lods
ret
bound
in
sbb
aad
jns
fldenv
push
inc
std
push
hlt
lods
retf
in
iret
data16
inc
and
repnz
(bad)
cli
sbb
movs
dec
jnp
pop
inc
fimul
push
push
cmps
movs
hlt
dec
adc
fdiv
in
pop
lahf
xlat
call
imul
jl
jae
dec
inc
xor
push
shl
(bad)
jns
xor
sti
push
lods
pop
jb
push
in
push
jmp
mov
aad
mov
xchg
jecxz
adc
sub
and
fs
add
mov
xchg
jmp
retf
fadd
outs
or
cdq
sbb
xor
ret
pop
addr16
rcl
cmp
jbe
jbe
outs
and
xor
ror
(bad)
push
xor
popa
xor
arpl
fadd
cmp
div
mov
adc
aaa
xchg
test
leave
mov
sub
xchg
sbb
sbb
jne
ret
pop
cmp
lods
sar
jno
sub
cli
lods
mov
repnz
pop
lahf
xchg
(bad)
mov
and
or
inc
dec
jle
pusha
xchg
cli
push
add
mov
inc
mov
mov
daa
stc
out
shr
rcl
inc
jecxz
xor
repz
mov
sbb
mov
adc
ins
into
inc
xchg
add
stc
mov
call
stc
aad
mov
mov
dec
daa
sub
or
je
push
sbb
ja
xor
dec
test
cmp
(bad)
clc
xchg
es
in
aaa
adc
sbb
clc
cwde
mov
icebp
mov
cmp
jle
ds
lods
jns
jae
retf
lods
rcr
fmul
adc
sbb
(bad)
out
push
cli
inc
mov
jmp
xchg
jl
push
mov
pop
inc
sahf
pop
std
jbe
out
jl
cli
mov
addr16
dec
jb
dec
jle
jmp
aam
daa
push
jl
mov
in
mov
dec
add
cmp
int
xchg
xor
push
jnp
ins
pop
push
or
ror
(bad)
pop
pop
retf
xchg
out
and
mov
aam
push
popa
stos
dec
retf
jno
push
or
xor
fisttp
imul
lock
sbb
cmp
xchg
jmp
hlt
add
jbe
mov
cdq
inc
movs
repnz
test
ds
add
fsubr
sub
test
aas
outs
add
push
cmp
jle
and
imul
sbb
outs
test
jns
push
cld
(bad)
dec
(bad)
jmp
sbb
sub
and
out
and
inc
xchg
pop
lahf
cli
les
and
(bad)
into
jp
dec
fwait
cld
inc
js
push
daa
push
movs
popa
or
lods
test
xchg
push
jns
(bad)
or
sbb
dec
dec
fmul
dec
mov
lea
inc
and
repnz
out
and
sub
pop
cld
and
sub
addr16
mov
xchg
or
lods
scas
repnz
pop
push
push
ja
jmp
ins
inc
add
int3
in
fidiv
movs
loope
icebp
scas
xor
inc
mov
loop
xchg
es
sahf
add
nop
sub
add
jb
es
jmp
mov
push
(bad)
loopne
(bad)
push
mov
or
fchs
mov
in
or
in
ins
daa
jmp
mov
add
pop
pop
push
xchg
and
in
or
int3
sub
stos
mov
jle
xor
mov
movs
(bad)
jg
ja
repz
js
inc
and
pop
mov
xor
test
inc
mov
in
sbb
ja
mov
pop
push
scas
add
cs
pop
xchg
sbb
fadd
fstp
pop
or
push
adc
lock
pop
jbe
ja
loopne
cmp
idiv
sub
retf
ds
std
dec
push
mov
inc
mov
xchg
das
out
dec
sub
mov
int
lds
cld
cmps
push
xlat
es
add
hlt
push
and
and
xchg
adc
xchg
jg
fcom
and
lods
jmp
jbe
(bad)
pop
mov
jns
xor
mov
out
ds
aas
xchg
mov
das
sbb
test
movs
xchg
xchg
pop
loopne
jmp
aaa
adc
or
cs
jecxz
fild
jp
scas
retf
xor
fsubr
push
ja
das
inc
cmp
stos
enter
in
das
and
mov
call
mov
sbb
jp
fcomp
mov
lea
rol
mov
mov
sbb
sub
repnz
dec
pop
adc
adc
call
push
movs
sub
ret
aam
pop
push
rcl
sub
popf
push
sbb
scas
ret
jbe
xor
sub
popa
repnz
jnp
jae
mov
inc
push
jmp
adc
or
jp
add
je
pop
(bad)
(bad)
cli
bound
adc
push
lahf
push
push
mov
lea
js
mov
jno
pop
xchg
dec
(bad)
test
inc
test
mov
and
cmp
adc
mov
sar
push
cdq
add
mov
repnz
adc
and
call
jae
js
nop
sub
ret
pop
arpl
gs
int3
add
mov
clc
cmp
push
fcmovb
neg
ins
rcr
loop
aad
imul
mov
mov
dec
hlt
push
(bad)
inc
cmps
int3
frstor
sbb
jns
scas
ret
or
outs
cli
jg
pusha
push
push
xchg
popf
test
popf
icebp
or
fucom
adc
or
jbe
repz
add
and
sub
sbb
pop
adc
xabort
xchg
out
sub
aaa
fwait
ss
inc
bound
cmps
mov
addr16
sbb
jmp
imul
stos
jp
test
arpl
add
adc
inc
pop
mov
aam
mov
test
outs
out
jb
or
(bad)
cmp
pop
sbb
test
les
ror
sti
in
fcomp
mov
cdq
mov
call
(bad)
call
iret
push
in
fwait
in
lock
jb
jmp
movs
adc
cmp
mov
xor
sbb
iret
movs
cmps
or
cmc
ins
or
push
ror
jl
test
(bad)
test
inc
cmp
xchg
mov
inc
push
jbe
dec
cmps
out
retf
mov
dec
dec
push
or
xor
sbb
mov
add
push
scas
jnp
push
pushf
(bad)
add
enter
bound
or
mov
test
sub
inc
ret
dec
pop
mov
test
imul
in
and
call
add
sbb
daa
or
add
jg
xor
fst
jge
retf
out
pop
xchg
cwde
imul
aad
pop
mov
test
iret
add
push
(bad)
div
or
or
popa
lods
xor
fiadd
pop
or
sub
cmp
mov
adc
xor
pop
into
inc
(bad)
sar
gs
iret
xor
mov
iret
dec
repz
movs
mov
dec
xor
cmps
add
xchg
push
jmp
xor
mov
repz
xchg
sub
cmps
in
sbb
xchg
xor
in
outs
pop
adc
xchg
and
jg
fisubr
mov
dec
xor
retf
xchg
fist
sub
imul
mov
aaa
out
push
cmps
(bad)
out
dec
fiadd
adc
out
out
pop
push
(bad)
pop
inc
mov
jp
(bad)
mov
enter
jp
out
add
mov
hlt
mov
adc
sbb
xchg
jns
scas
daa
jne
inc
lock
cmc
rol
loopne
or
sub
loope
pop
inc
arpl
jle
add
add
repnz
pop
cmps
out
mov
sub
cmc
pop
jns
inc
lods
ja
xor
and
in
push
or
inc
sbb
fistp
dec
mov
sbb
sub
mov
jb
mov
push
mov
lock
pop
pop
fld
xchg
and
or
fsub
pushf
jnp
hlt
ret
cmp
mov
ror
popa
arpl
xchg
mov
ret
adc
aam
sti
adc
addr16
shl
das
in
add
(bad)
mov
mov
addr16
into
xchg
cs
push
inc
jns
xchg
mov
call
mov
dec
push
push
fnstsw
popf
add
pop
adc
(bad)
cmps
or
pop
cdq
sbb
mov
fs
push
mov
loopne
xor
ret
pop
scas
dec
sub
sbb
dec
sahf
or
dec
mov
shr
ds
mov
sub
mov
adc
jle
dec
cmp
cmp
scas
ficom
ret
xchg
call
mov
out
xor
dec
(bad)
(bad)
sti
bound
jecxz
and
dec
int
aad
push
loop
push
push
push
mov
imul
push
call
ficom
xchg
jmp
pop
mov
sub
loope
xor
sbb
dec
js
ins
aam
xor
push
daa
pop
xchg
mov
xchg
aas
mov
add
lds
aad
dec
out
mov
pop
fwait
jl
test
push
dec
addr16
jmp
inc
pop
imul
jmp
ins
mov
xchg
sub
jb
pop
adc
ins
(bad)
pop
pop
push
movs
enter
loop
pushf
adc
imul
pop
inc
xor
adc
(bad)
(bad)
shl
mov
cmp
sbb
mov
mov
lea
std
mov
mov
and
(bad)
sub
lods
push
rcl
out
pop
push
sti
pop
dec
fnstcw
xor
cmp
aad
mov
add
(bad)
jecxz
mov
cmp
mul
jmp
and
inc
std
test
punpcklbw
inc
stos
fwait
pop
jno
jge
stos
(bad)
cmps
inc
mov
mov
and
push
push
jae
sub
dec
loop
mov
mov
into
sub
mov
lahf
ficomp
dec
ret
ror
repz
mov
into
mov
jb
xchg
jae
pop
jne
dec
(bad)
and
push
jmp
(bad)
loop
mov
cs
sar
sar
sub
or
sub
outs
out
out
inc
mov
mov
dec
(bad)
clc
xor
call
repz
(bad)
xchg
bnd
repz
ds
add
push
(bad)
mov
xor
lds
mov
sbb
inc
outs
jno
xchg
lea
scas
(bad)
dec
mov
inc
cmp
or
or
mov
mov
loope
es
dec
inc
scas
mov
jg
inc
jb
xlat
pop
mov
int3
popf
xchg
stc
and
int3
pop
std
mov
js
movs
sub
aas
imul
inc
dec
ins
cmp
inc
dec
mov
fidiv
pop
fdivr
shl
add
(bad)
in
bound
sbb
ret
inc
mov
mov
xlat
cmps
repnz
in
xchg
out
dec
imul
jmp
stos
into
gs
push
mov
mov
or
xor
leave
lds
jl
mov
mov
mov
sub
rcl
pop
fldpi
mov
(bad)
jns
add
ins
ret
or
xchg
sbb
pop
je
mov
and
in
pop
std
arpl
xor
xor
pop
lds
push
push
pop
pop
and
jp
ror
bound
fwait
cli
mov
pop
pop
and
out
xor
frstor
dec
dec
loop
aas
mov
inc
push
je
leave
pop
int
add
mov
test
rcl
hlt
and
push
cmc
push
jb
mov
push
stos
pusha
xor
fstp
inc
mov
fadd
xor
push
imul
mov
fs
mov
push
push
sti
xor
inc
xor
mov
mul
adc
cmp
cmc
pop
sub
imul
popa
or
setno
bound
gs
adc
in
add
push
fmul
fmul
inc
push
jle
cdq
dec
hlt
jecxz
mov
stos
in
push
lods
mov
cli
mov
mov
enter
xchg
cdq
mov
add
div
mov
sbb
sub
lock
idiv
out
inc
xor
call
fs
jno
mov
jle
xlat
mov
ins
adc
mov
cld
dec
adc
mov
sub
loopne
or
jmp
mov
ror
cwde
ss
xlat
push
dec
jecxz
adc
outs
out
jp
sub
rcl
pusha
xchg
mov
xlat
in
jp
stos
inc
xchg
out
and
call
pop
dec
pop
mov
in
cdq
sbb
push
ins
mov
mov
mov
js
mov
data16
fs
popf
loopne
sub
dec
(bad)
cvttps2pi
xchg
std
or
jmp
ret
add
push
sbb
retf
test
sub
adc
sbb
outs
retf
adc
pop
xchg
shr
aas
rcl
pusha
sbb
std
sti
ins
ret
xchg
push
test
movs
cmp
mov
jmp
add
movs
or
mov
sbb
sub
xchg
lahf
add
or
(bad)
mov
mov
cwde
xlat
bound
sub
dec
adc
cmps
arpl
sahf
add
sub
sti
xor
pop
cmp
push
repz
mov
std
jb
inc
out
iret
nop
sub
adc
mov
ds
push
mov
add
xor
movs
mov
test
loope
sbb
mov
shl
imul
call
push
sbb
in
sub
inc
push
sub
loop
hlt
mov
mov
xchg
adc
int3
ret
sbb
cmp
and
sbb
sub
sbb
aas
lods
xor
cli
iret
test
dec
jmp
ins
cmp
fld
pop
or
push
jnp
xor
hlt
cli
mov
sar
out
div
cs
imul
pop
repz
int
mov
xabort
stos
xchg
push
(bad)
fsubrp
dec
jge
(bad)
jbe
movs
jno
fadd
(bad)
mov
mov
sbb
mov
in
cmp
xor
sbb
mov
inc
scas
cmc
cwde
push
mov
xor
xor
xchg
inc
(bad)
xchg
out
loop
and
xor
xor
popa
fldcw
cs
lea
jmp
mov
cmp
dec
jmp
cld
aad
mov
jmp
xchg
add
test
jge
xchg
jo
cmp
leave
call
jmp
retf
cmp
cmp
pop
and
jne
cli
sahf
or
fsubr
adc
cmc
mov
push
mov
cmc
mov
mov
clc
or
ss
das
xchg
xor
jae
inc
fmul
sbb
not
xor
xor
fs
std
jns
dec
adc
mul
out
sbb
scas
pop
xchg
push
push
sub
psubd
jp
sbb
xchg
or
mov
jecxz
xor
cli
fmul
ja
lds
(bad)
(bad)
or
sbb
mov
adc
adc
cmp
jno
iret
les
inc
xchg
xchg
repz
add
pop
ret
data16
mov
ret
jg
push
mov
not
ins
call
dec
icebp
pop
not
fs
fs
int
or
mov
int
or
jmp
ret
or
pop
dec
scas
stos
out
shl
mov
(bad)
add
js
int
mov
jle
out
shl
shr
ins
mov
jae
fimul
int
gs
push
dec
jp
dec
popf
adc
push
mov
jno
push
(bad)
stos
mov
in
xor
xor
idiv
dec
sub
loop
cli
rcr
push
push
push
add
inc
add
add
pop
and
jbe
cmps
mov
lea
mov
(bad)
mov
lods
pop
mov
xchg
push
xchg
cli
loope
in
mov
cmp
std
mov
and
xor
cmc
xor
ins
jge
es
add
inc
cwde
gs
test
push
xchg
cdq
sub
mov
mov
mov
lahf
rcl
ret
jno
or
popa
ins
mov
sbb
shr
mov
sbb
cmp
pop
addr16
(bad)
add
cmps
cmp
xor
and
inc
lock
xchg
imul
test
out
jecxz
add
bnd
push
push
mov
stos
imul
scas
stos
loop
sbb
fisub
sar
std
xor
push
sub
sbb
repz
mov
mov
ja
clc
inc
push
dec
jnp
adc
jmp
mov
mov
pushf
push
mov
push
jmp
mov
scas
pop
sahf
sub
or
inc
cmp
pop
xchg
push
mov
enter
push
test
pop
lods
js
out
popf
test
cs
fs
test
int3
or
mov
push
std
dec
dec
or
and
aad
pop
or
jae
outs
mov
pop
mov
ss
sub
mov
adc
clc
pop
cdq
stc
dec
sub
ds
pop
mov
stos
iret
dec
jbe
enter
inc
sahf
scas
bound
and
into
dec
dec
test
leave
in
popf
push
mov
xchg
es
sti
push
retf
es
inc
or
xchg
push
cmc
mov
push
and
xchg
and
add
daa
std
lods
test
push
mov
in
ret
or
push
add
xor
add
popa
retf
es
cmps
test
(bad)
iret
movs
ins
xchg
retf
push
mov
mov
jbe
iret
ds
mov
int3
cmp
es
sbb
mov
les
mov
dec
fisubr
add
xchg
mov
mov
jbe
pop
mov
lods
sahf
push
cmp
icebp
xor
xchg
push
pop
inc
inc
sub
aaa
test
jnp
xchg
push
popa
fiadd
and
add
cmp
jmp
sbb
test
xchg
js
xor
and
das
mov
div
test
jge
cmp
inc
shl
stos
ss
mov
mov
xor
movs
sbb
mov
pushf
cmp
outs
push
cmp
cmps
jbe
jae
sbb
pusha
jno
sbb
scas
aam
je
cld
xchg
outs
call
adc
dec
jmp
in
cli
repnz
dec
xor
dec
xchg
sbb
push
pop
and
out
fild
lods
out
push
mov
mov
add
(bad)
and
dec
jae
mov
sbb
loopne
stos
in
dec
retf
sti
add
movs
shl
cmp
mov
mov
ins
and
and
lods
shl
jne
repnz
aam
sahf
jnp
ss
inc
addr16
adc
lahf
adc
movs
mov
cmp
xchg
mov
pop
adc
xchg
fstp
mov
lods
jmp
mov
stos
cmps
mov
pop
xor
push
sbb
push
icebp
arpl
inc
mov
xor
scas
jmp
pop
call
popf
(bad)
loopne
mov
(bad)
jb
into
repz
add
in
fldenv
outs
pop
pop
xchg
push
pop
or
push
pop
sub
xchg
rcl
jae
inc
scas
add
inc
ins
and
sub
or
dec
jbe
push
push
into
test
nop
sbb
lock
mov
into
cmp
cmp
rcl
nop
aam
push
out
sub
mov
mov
icebp
xchg
xor
inc
sub
sti
loop
jg
les
in
stos
and
cmp
sub
jmp
mov
xor
jecxz
test
retf
mov
jp
call
sbb
leave
fwait
inc
lds
cmp
inc
mov
xchg
push
repz
imul
add
(bad)
fmul
cmp
jno
pop
test
mov
inc
jg
dec
jo
push
imul
mov
xor
int3
pushf
pop
mov
mov
lock
or
pop
fcomi
jle
pop
pop
inc
sbb
cwde
sahf
xor
jmp
js
xchg
sub
cmp
jmp
xchg
push
xchg
xchg
pop
scas
aam
sti
inc
sbb
xchg
cwde
jno
mov
jo
jno
xchg
jns
(bad)
mov
or
jne
in
and
mov
fist
shl
jg
jbe
pushf
lods
lea
xor
jecxz
int3
or
jle
add
int3
fisubr
fist
add
push
test
pop
cdq
dec
mov
and
out
shr
sbb
pop
adc
je
js
push
sub
sbb
fstp
push
push
or
neg
push
or
add
jmp
out
push
xor
int3
cmp
mov
popa
lods
fisttp
and
add
leave
out
push
xor
idiv
pop
inc
test
add
dec
pop
(bad)
fdiv
outs
xor
inc
(bad)
out
add
sub
in
xchg
std
sbb
mov
shl
push
xor
pusha
std
fisttp
sbb
pushf
xchg
jo
es
mov
pusha
repnz
retf
fmul
adc
fcom
das
loope
cmp
xchg
cmp
daa
imul
jmp
ror
cmps
(bad)
push
xchg
arpl
mov
xchg
in
movs
stos
adc
and
int
pop
(bad)
pop
nop
sub
xchg
and
lea
dec
shl
sbb
pop
popa
outs
xor
dec
fdivrp
mov
dec
pop
and
movs
icebp
xor
sahf
sti
in
out
lock
out
pushf
movs
inc
xor
aas
add
hlt
in
movs
(bad)
xchg
ret
movs
sub
inc
add
mov
push
jl
ret
sar
mov
sbb
and
sub
in
mov
inc
fwait
sub
icebp
xchg
addr16
sub
ja
stos
pop
adc
gs
mov
sub
cwde
data16
push
(bad)
(bad)
sahf
jmp
rcr
push
xor
adc
jns
mov
lock
test
repnz
pop
retf
stc
into
mov
or
mov
jp
lds
xchg
popf
jne
push
add
shl
dec
jge
adc
sti
mov
cmp
neg
test
xor
daa
mov
dec
aas
xor
out
js
mov
leave
sbb
das
lock
sbb
pop
nop
or
fdiv
cdq
(bad)
pusha
cmps
sti
adc
push
add
retf
fwait
pop
and
pop
add
xor
dec
push
sub
fnstenv
jns
xor
fsub
push
and
sti
sub
cmp
mov
lods
jbe
aad
pop
clc
ss
cmc
or
icebp
inc
clc
mov
outs
pop
(bad)
cmp
hlt
sahf
(bad)
outs
fcomi
aad
mov
jge
adc
sub
push
pop
cmp
jg
push
data16
ret
out
mov
mov
hlt
push
sti
inc
mov
rcl
inc
xchg
adc
xor
xchg
sub
mov
inc
inc
adc
xchg
sub
cmps
pushf
dec
add
add
and
xor
mov
sbb
push
push
mov
mov
sbb
xchg
iret
mul
mov
in
fimul
mov
mov
pop
mov
pop
dec
out
imul
mov
or
int
jg
pop
sub
out
sahf
scas
bnd
adc
hlt
inc
in
xor
outs
inc
jmp
lock
inc
retf
pop
loopne
sti
jmp
idiv
(bad)
sub
(bad)
imul
div
or
mov
lds
pop
sub
and
adc
out
rcr
cld
sar
push
push
das
bound
adc
sub
sub
lock
xchg
dec
mov
stc
ja
les
xchg
inc
add
shl
inc
cmps
cmps
movs
movs
and
xchg
jmp
cdq
pop
dec
out
shl
jbe
cmp
ss
aaa
xor
arpl
push
add
inc
pop
scas
cli
cmp
lea
or
mov
add
outs
jnp
mov
dec
sub
adc
mov
adc
das
mov
or
xchg
pushf
dec
jecxz
test
std
cmp
push
mov
cmp
add
mov
mov
xor
push
fsub
and
sbb
call
les
mov
xchg
and
cwde
loope
fisubr
add
and
iret
sub
mov
jge
pop
pop
(bad)
or
stc
outs
pusha
stc
add
and
lea
xchg
int
xchg
not
xor
dec
icebp
xchg
sub
div
and
mov
movs
mov
rol
repnz
bound
(bad)
clc
icebp
sbb
adc
lock
jge
and
sub
nop
jl
lock
adc
add
inc
inc
add
into
fdiv
xor
mov
not
mov
or
and
cmp
push
fbstp
sbb
(bad)
cmc
adc
(bad)
icebp
out
or
(bad)
dec
scas
das
pop
mov
stos
stc
xor
imul
leave
add
call
or
outs
das
cmc
outs
enter
mov
lds
repnz
ja
sbb
int
adc
dec
mov
sub
fstp
nop
lea
or
cmps
mov
and
popf
or
sub
xchg
sahf
sbb
mul
ret
jg
sub
popf
push
mov
dec
out
inc
mov
jbe
gs
pop
aaa
xor
aas
retf
jg
fsub
add
mov
test
mov
cmps
xor
std
add
ret
and
pop
add
cmp
dec
xchg
push
es
aas
jb
pop
and
iret
push
fsub
mov
dec
mov
push
in
xchg
les
std
stos
pop
test
jmp
cmp
stos
ss
dec
xlat
popa
jmp
cmc
out
jns
sbb
ret
pop
in
leave
aaa
add
dec
cs
jo
inc
(bad)
and
push
adc
sbb
stc
ret
(bad)
cvtps2pd
gs
gs
aas
mov
test
nop
xor
enter
pop
out
xchg
lea
sub
mov
add
in
aam
ins
aaa
jg
movzx
ficom
movs
cli
mov
add
mov
jae
or
adc
scas
sub
arpl
sbb
sbb
hlt
jne
mov
fadd
xchg
inc
cmp
pop
cwde
fwait
dec
pop
push
fs
pop
xchg
jp
sbb
mov
aad
movs
data16
and
or
mov
fincstp
pushf
stc
adc
mov
lods
mov
shl
dec
std
add
xor
sub
retf
or
add
push
sbb
repnz
pop
jmp
mov
enter
fist
outs
fwait
pusha
or
icebp
pusha
pop
dec
shl
dec
fdivrp
test
out
or
adc
in
retf
out
mov
out
cmp
gs
jecxz
call
ss
mov
fld
out
or
sbb
mov
xchg
adc
ffreep
add
cmp
in
cmp
test
adc
test
sub
mov
fimul
mov
imul
call
les
ret
outs
in
mov
test
dec
call
popa
rcl
lods
lods
outs
lods
loope
dec
jmp
loop
sbb
sub
repnz
leave
ds
fidiv
(bad)
mov
retf
push
retf
out
cs
xlat
call
aas
sar
pop
adc
pop
dec
int3
push
push
jmp
cli
jae
ror
fsubr
push
sbb
cmps
adc
iret
pop
sbb
sbb
jmp
dec
xor
pop
jle
js
jo
mov
cmp
mov
xchg
outs
mov
out
sbb
sbb
xchg
push
arpl
inc
cli
mov
into
outs
ror
pushf
test
daa
inc
push
mov
repnz
sub
push
xor
jne
es
(bad)
mov
jne
out
jnp
dec
or
jge
fdiv
sbb
pop
xor
arpl
call
sbb
sub
mov
and
addr16
fld
sbb
ja
movs
aas
aaa
cwde
enter
repnz
cli
push
xor
icebp
sub
xor
call
retf
and
js
inc
mov
xor
popf
push
(bad)
rcl
or
cmp
call
out
mov
sub
mov
cmps
push
sub
dec
or
push
scas
push
push
dec
cmc
cdq
pop
fld
dec
ret
jo
mov
fs
mov
hlt
mov
loopne
mov
sbb
xchg
xchg
call
cmc
sbb
pusha
xchg
or
jmp
mul
xchg
push
push
fistp
cmp
cld
sub
cdq
je
xchg
aaa
mov
mov
or
jg
mov
push
xor
(bad)
xchg
int3
mov
mov
pop
ror
mov
pop
and
(bad)
das
pop
mov
mov
movs
cmp
xchg
dec
pop
inc
jmp
inc
test
xchg
jmp
sti
jg
and
and
bound
out
aad
xor
lods
bound
inc
push
pop
retf
shl
repnz
xor
aaa
xor
push
ss
mov
xlat
jno
fsubr
add
pop
inc
sbb
xchg
adc
xchg
sbb
lods
sub
cli
pop
test
mov
in
pop
push
repnz
pop
push
loop
hlt
leave
jmp
cmps
ror
add
sar
imul
gs
push
push
imul
daa
rol
and
fsubr
adc
or
mov
out
or
xchg
xor
or
or
add
add
mov
dec
lds
add
jbe
std
sub
lods
rcr
or
xchg
sbb
and
aas
mov
lahf
xchg
je
(bad)
into
scas
mov
cmp
push
adc
retf
cdq
dec
jo
pushf
enter
pop
jp
pusha
xor
lahf
inc
call
mov
jle
es
xor
pusha
pop
sbb
inc
outs
dec
adc
mov
out
sbb
jae
clc
fsubr
xor
dec
(bad)
xor
sar
call
adc
scas
sub
pop
pushf
mov
or
in
lahf
pusha
add
rcl
popa
dec
gs
xor
mov
xor
add
push
sub
mov
cmp
mov
xchg
icebp
xor
mov
push
xchg
mov
nop
and
mov
lahf
pop
sbb
xchg
ret
je
shl
adc
dec
add
inc
and
call
xlat
push
and
pop
ins
push
icebp
xchg
xor
dec
iret
les
mov
nop
aas
push
dec
xor
jecxz
push
xor
sub
nop
mov
sub
adc
cmps
fwait
jne
arpl
addr16
popf
cmps
jp
hlt
imul
clc
es
adc
inc
or
xchg
mov
leave
jo
loopne
lods
enter
jo
or
lock
scas
jno
pop
add
shl
jae
inc
ja
mov
jo
lock
lds
dec
jl
jl
sbb
inc
sub
dec
pop
add
mov
dec
cmp
pop
rcl
stos
es
and
mov
lds
int
int3
cmc
push
push
add
jbe
jle
inc
add
xor
add
(bad)
rol
jmp
cmp
mov
mov
das
stc
xor
(bad)
mov
mov
rcr
jp
mov
cmp
pop
pop
ss
xor
ficomp
jo
cli
xor
push
out
dec
cmp
inc
add
add
retf
add
cmps
fcmovb
xchg
(bad)
jno
mov
sub
shl
daa
mov
xor
imul
mov
pop
adc
xor
clc
mov
add
bound
fwait
jbe
mov
call
setg
daa
mov
xchg
sbb
scas
les
test
sub
add
push
inc
mov
(bad)
out
pop
pop
cld
cmp
xor
shr
(bad)
pop
xor
test
rcl
pop
push
not
xchg
and
mov
xor
cwde
rcr
lods
leave
dec
inc
cs
enter
mov
je
inc
test
add
mov
jmp
test
mov
push
push
adc
fsubr
lods
mov
pop
xchg
mov
jge
shr
in
xchg
test
ret
jmp
imul
loopne
test
jnp
sar
aas
xchg
sbb
xor
push
or
cmp
jmp
inc
or
dec
xor
xor
pop
pop
adc
xchg
mov
fcom
sub
in
sbb
and
xor
stos
xor
xchg
fwait
and
pop
int
and
or
or
aam
adc
jge
xor
mov
aad
repnz
xchg
gs
stos
push
pop
mov
xor
out
inc
jnp
mov
mov
inc
sub
rcr
pop
adc
xor
mov
sahf
nop
adc
jno
out
enter
push
push
rep
add
jmp
in
(bad)
cmp
xchg
xchg
aad
push
or
xchg
mov
pop
pminsw
adc
and
sbb
es
dec
pop
mov
or
or
sbb
shl
cmp
lods
es
jmp
push
cs
out
(bad)
cmc
stos
and
push
or
(bad)
(bad)
pusha
mov
jmp
(bad)
push
cmp
cmp
pop
mov
movs
mov
push
mov
movs
call
icebp
inc
mov
dec
scas
and
push
mov
xchg
aad
dec
mov
dec
mov
dec
bound
and
push
and
cld
fiadd
or
imul
(bad)
dec
jnp
add
push
sbb
inc
mov
shl
cmc
jbe
loop
rcl
fldln2
je
call
mov
pusha
add
jne
fldcw
adc
dec
addr16
mov
sbb
outs
into
aad
cdq
push
jae
and
inc
push
sbb
xchg
repz
mov
and
hlt
dec
push
jmp
push
ror
jmp
and
push
sub
add
and
rcl
loopne
or
dec
and
pop
mov
in
ja
daa
cwde
test
and
mov
mov
das
and
add
mov
jnp
add
and
in
sahf
(bad)
popf
adc
jne
xor
lock
xorps
nop
icebp
je
in
mov
inc
mov
rcl
lds
jle
cmp
mov
add
cdq
mov
aaa
jp
sbb
in
cmp
push
repz
push
inc
retf
shl
out
ins
ror
jb
push
test
add
adc
jecxz
and
inc
cmp
xor
ss
add
xchg
mov
inc
shr
(bad)
mov
pop
and
xchg
cmp
push
push
hlt
xchg
test
dec
add
push
push
push
hlt
fwait
test
cli
xor
repz
pop
ds
inc
or
push
test
mov
mov
jae
cli
jle
ret
xchg
mov
sub
sbb
jo
stos
test
out
(bad)
push
dec
and
out
mov
cs
mov
xchg
fcmovnbe
sub
sub
jmp
or
out
into
(bad)
test
adc
fild
test
fsub
dec
stos
movs
mov
retf
cli
mov
sti
sar
xor
in
jmp
xchg
or
pop
inc
cld
mov
mov
and
inc
outs
inc
sbb
xor
adc
jae
in
xor
aaa
jmp
fs
mov
(bad)
xchg
arpl
je
retf
lahf
cmp
push
push
jmp
pop
mov
jns
or
addr16
fistp
mov
fadd
ja
scas
mov
dec
stc
mov
xchg
movs
jns
mov
mov
adc
fbstp
jns
out
mov
or
das
cmp
push
in
adc
sahf
adc
les
inc
push
add
aam
sbb
mov
sub
xchg
out
iret
inc
es
or
addr16
push
cmp
test
mov
mov
push
xchg
inc
push
xchg
neg
xchg
push
cmc
lds
ja
jae
inc
sbb
xchg
sub
xchg
cwde
fimul
retf
push
sbb
cld
loopne
pop
mov
mov
push
mov
push
sbb
scas
adc
repz
fstp
lods
test
sti
clc
repz
stos
repz
mov
icebp
jb
jge
adc
jns
call
push
jmp
ins
call
or
bound
xchg
dec
cmps
fsubrp
add
xchg
mov
das
fdiv
(bad)
sub
xchg
xor
dec
lock
add
jns
cli
sbb
fisttp
cmps
xchg
icebp
jle
jo
xor
setns
adc
mov
cmp
dec
addr16
sbb
aad
cmps
aaa
jge
jb
xchg
aas
ror
sub
push
dec
imul
sbb
aas
lea
add
cmps
xchg
mov
sub
test
xlat
dec
js
sar
lods
inc
inc
cmps
jmp
int3
adc
bnd
inc
or
push
outs
adc
xor
jl
rcl
xor
mov
xchg
inc
pop
xchg
inc
inc
addr16
sbb
sbb
into
add
mov
test
jo
sbb
cwde
xlat
sbb
mov
cdq
outs
push
jns
cwde
mov
fldcw
add
cmc
lods
icebp
and
xchg
sti
adc
ins
test
(bad)
sub
push
adc
fisub
xor
mov
movs
fwait
mov
sbb
retf
clc
xchg
retf
leave
mov
mov
dec
adc
jb
lahf
inc
push
add
sub
(bad)
and
mov
enter
xchg
ja
js
test
outs
(bad)
adc
sbb
xlat
xlat
jmp
mov
pop
aas
mov
ret
pushf
test
cmc
stos
pop
(bad)
mov
loop
sub
loop
loop
fs
sub
jne
push
shl
add
mov
push
push
pop
pop
sub
pop
mov
mov
xor
sub
push
inc
rcl
sub
mov
neg
shr
cmps
popf
and
(bad)
test
retf
bound
xchg
xchg
push
inc
xchg
sub
mov
out
inc
repnz
mov
mov
jae
scas
das
test
xor
pop
cmp
hlt
push
sub
jns
and
jb
mov
out
loope
dec
(bad)
push
xor
pusha
xor
stc
pusha
test
into
cmps
je
ret
test
test
pop
cdq
pushf
movs
push
std
ror
(bad)
jae
jge
push
mov
add
mov
xchg
lock
cmp
jne
test
xchg
xchg
jmp
sbb
mov
cmps
leave
push
ret
xchg
jae
shr
cmp
jno
enter
lock
outs
and
mov
inc
pusha
sbb
(bad)
xor
shr
cli
repnz
ret
xor
retf
das
sub
mov
(bad)
push
pop
pop
jge
stos
mov
cmp
sub
sbb
push
inc
enter
and
test
das
jmp
into
fsubp
and
pop
pop
clc
clc
ins
pop
cmp
mov
adc
pop
mov
mov
cwde
pop
dec
mov
test
push
jae
push
std
pusha
jne
sahf
out
ss
xchg
add
out
xchg
subps
mov
jle
aas
arpl
cmp
sar
repz
mov
jne
push
mov
mov
movs
jne
call
retf
into
bound
iret
mov
neg
pop
(bad)
call
jecxz
stos
out
shl
mov
push
sub
mov
icebp
push
inc
and
enter
repnz
dec
xchg
mov
xchg
jb
inc
test
ret
dec
xor
dec
rcr
adc
rcr
(bad)
cmps
loop
in
inc
mov
add
jae
ins
add
xor
fdiv
mov
stc
(bad)
cmp
les
xchg
dec
neg
fdiv
jmp
ret
adc
sti
stc
jmp
dec
int3
outs
fidiv
cmp
jbe
cdq
ins
loopne
xor
out
xor
xchg
lea
push
in
push
daa
icebp
fist
jb
pop
xchg
adc
out
add
or
or
aam
adc
lds
arpl
dec
adc
mov
dec
dec
jmp
scas
popf
adc
bound
movs
mov
or
sbb
xchg
mov
cld
ins
dec
ror
jb
retf
pop
xchg
lods
shl
or
jmp
or
(bad)
sub
xchg
inc
mov
or
cmp
cmp
inc
cmc
mov
cmp
addr16
call
adc
pop
out
xor
jns
xor
push
test
test
or
mov
iret
mov
mov
sbb
jmp
xor
rcl
or
fisub
mov
mov
push
cmp
sub
into
jmp
and
sub
xor
pushf
mov
cmp
push
pop
lds
lock
dec
test
int3
push
faddp
push
or
aad
mov
pop
fidivr
dec
nop
loop
mov
sub
mov
xchg
xor
mov
xchg
mov
aam
test
arpl
test
retf
js
and
dec
jg
pop
shr
lahf
jo
mov
hlt
mov
aas
pop
jp
mov
ss
jecxz
(bad)
add
xor
fadd
push
mov
mov
stc
sub
inc
fstp
jle
aas
adc
das
or
or
push
pushf
mov
push
push
jecxz
lea
and
xor
popa
cmp
stos
imul
pusha
add
xchg
ret
iret
mov
pop
xchg
xor
cli
jmp
sub
add
out
pushf
jecxz
push
inc
lock
movs
test
push
shl
in
outs
in
jge
or
mov
outs
mov
rcr
aam
(bad)
movs
inc
inc
aas
adc
add
sub
fisub
mov
xor
stos
and
inc
push
push
sub
sti
add
xor
adc
fcmovb
xchg
(bad)
and
pop
pop
mov
pop
xchg
ror
push
aaa
scas
in
pop
sahf
cmp
adc
test
das
ja
inc
iret
add
add
xchg
sub
cmp
(bad)
mov
out
sbb
loopne
ds
or
bswap
aas
in
ret
jb
cmp
test
loopne
or
jl
jge
add
icebp
pop
push
cmps
ins
(bad)
sbb
xchg
mov
retf
inc
mov
gs
cmp
push
fsubr
ss
mov
dec
push
push
mov
or
outs
push
repz
test
push
dec
xor
pop
scas
mov
sbb
leave
xchg
outs
mov
mov
ins
fs
psubusw
cmp
xor
lds
sti
add
mov
std
addr16
mov
lods
movs
stos
xchg
xlat
outs
icebp
or
sbb
pop
retf
jb
pop
movs
mov
xchg
rol
dec
pop
xchg
lods
es
jmp
and
push
frstor
movs
test
xlat
inc
push
add
mov
je
and
repnz
mov
inc
mov
jns
sbb
and
outs
arpl
test
(bad)
cmc
cmp
inc
movs
pop
outs
js
jmp
sbb
mov
cmps
and
push
add
xor
cmc
lods
stos
out
fidiv
push
fsub
xor
xchg
xchg
push
rcl
mov
jnp
mov
fcomp
int3
mov
pop
jo
pushf
es
aaa
mov
xor
sub
in
push
sbb
sub
fistp
es
pop
pop
in
cwde
adc
sbb
cmp
hlt
into
inc
sbb
fs
div
xchg
xchg
leave
jg
xor
lahf
push
cmovb
iret
mov
in
in
sub
push
sub
shr
push
nop
movs
fcmovne
scas
adc
and
push
outs
pop
data16
push
dec
nop
cld
daa
xor
push
loop
ror
or
or
shl
inc
clc
jmp
movs
sub
(bad)
scas
and
cmps
inc
out
fisubr
into
shl
or
cmp
movs
push
jno
cmp
arpl
into
mov
inc
lea
mov
pop
pop
add
out
pop
add
rcr
push
cmp
inc
jae
cli
xor
inc
imul
or
out
cmps
jne
adc
iret
pop
out
(bad)
(bad)
pop
add
dec
adc
test
std
loope
add
pop
outs
pop
test
aad
sub
loopne
js
push
das
sub
sub
rcr
fild
not
mov
push
mov
cli
scas
dec
pop
jmp
inc
push
pop
hlt
mov
cmp
cmp
dec
sbb
imul
retf
mov
std
sbb
fistp
(bad)
hlt
sbb
jne
dec
mov
(bad)
pop
stos
dec
cmp
nop
cmp
cld
ret
jno
(bad)
fucomi
pop
jp
pop
fstp
pushf
jmp
call
cdq
mov
or
cmp
sbb
sbb
fucomp
retf
test
dec
pop
push
loope
dec
call
jae
call
test
inc
fdiv
jae
push
aam
mov
and
inc
rdmsr
add
les
xor
ins
lock
or
xor
jmp
dec
retf
lods
rol
inc
pop
pop
pop
cmp
lds
out
mov
in
add
push
inc
sub
add
ror
xchg
inc
cmp
shr
in
mov
add
jnp
fldcw
xchg
add
xor
jb
or
loope
f2xm1
xchg
adc
(bad)
mov
daa
ror
call
retf
lds
xchg
xchg
add
dec
shl
mov
gs
or
retf
test
and
dec
ins
mov
pusha
sbb
aas
adc
outs
ds
push
loopne
das
aaa
jecxz
and
mov
jbe
mov
shl
pop
mov
inc
fsubr
cmp
cmp
add
ja
sub
and
dec
fstp
push
repnz
outs
lea
fstp
aas
pop
mov
mov
push
shl
loopne
inc
jg
dec
mov
inc
mov
cld
int3
jo
xchg
outs
sahf
sub
out
ins
call
add
inc
or
(bad)
mov
std
adc
jecxz
iret
das
xlat
cmp
adc
stc
and
shr
jbe
xor
sahf
clc
mov
jns
(bad)
jne
jl
leave
ficomp
int3
retf
or
call
pop
(bad)
lods
sar
xor
mov
xchg
push
sub
xor
cmc
inc
out
mov
scas
fmul
cmps
pop
push
fdivr
ret
jmp
mov
add
test
ss
xor
xor
test
jno
outs
enter
jmp
ficom
xchg
bound
ret
dec
daa
pushf
hlt
xchg
ins
push
or
mov
sahf
out
jge
nop
das
sbb
xchg
(bad)
sub
fild
or
xor
xchg
sbb
jmp
push
inc
cmovle
add
adc
dec
xor
xor
mov
sub
xchg
push
pop
cmp
jo
mov
and
and
push
mov
and
pop
mov
out
imul
sbb
xchg
pop
push
(bad)
(bad)
jnp
ins
movs
ja
xor
mov
xlat
pop
ins
push
mov
bound
xor
cli
jne
inc
imul
jb
cmps
cli
inc
xchg
cmp
xor
imul
retf
jle
in
mov
jmp
mov
cmp
and
test
add
lock
dec
sub
ja
xor
sbb
jmp
cmp
fadd
add
gs
mov
inc
pop
cld
xchg
sbb
mov
xchg
cmp
and
mov
dec
ins
cld
sar
aas
in
dec
ficomp
mov
dec
out
pop
bound
push
cld
and
leave
or
jmp
into
add
sub
sbb
mov
clc
imul
mov
or
mov
cmp
test
rcr
popf
cwde
cmp
pop
rcr
ja
retf
inc
pop
mov
mov
out
xchg
jne
push
rcl
mov
movs
leave
fwait
mov
retf
xchg
and
sub
fdivr
repnz
int
or
sbb
jl
ins
pop
stos
stos
mov
jp
stc
shl
push
aaa
daa
jle
cdq
adc
jg
push
or
pop
pop
and
pop
inc
push
mov
and
jmp
xchg
(bad)
pop
mov
sub
shl
(bad)
jae
pop
pop
out
imul
push
push
add
aas
sub
push
(bad)
sub
aaa
jmp
and
fdiv
inc
fbld
and
cli
daa
dec
jge
ja
adc
pop
(bad)
mov
rcl
adc
xor
mov
loope
cmp
test
mov
in
loop
xchg
cmp
and
pusha
(bad)
fiadd
jnp
lods
mov
ror
leave
dec
stos
nop
and
mov
test
jbe
cmp
jle
outs
mov
das
sub
movs
sub
rol
mov
xchg
pop
sub
inc
js
stos
nop
pop
mov
adc
dec
xor
pushf
mov
ret
mov
jns
cmc
ret
inc
(bad)
cdq
jo
mov
xchg
repz
jg
cmps
sbb
stos
or
lds
xor
xor
(bad)
cmp
stc
call
call
mov
sbb
or
leave
fsubp
and
mov
repz
adc
push
sbb
pop
jno
fstp
shr
push
mov
pop
or
dec
push
iret
(bad)
mov
inc
les
mov
pop
jns
es
inc
lods
xchg
adc
sti
mov
cld
sub
(bad)
dec
fistp
scas
mov
shl
dec
pop
adc
repnz
idiv
aam
dec
xor
jne
xchg
lods
sbb
mov
mov
ja
in
aam
pop
cmps
sub
and
and
fs
loope
push
fwait
and
mov
cdq
stos
or
xchg
ja
nop
dec
(bad)
(bad)
lods
out
xor
dec
in
sbb
dec
fsub
loop
fisub
icebp
lahf
ins
setae
iret
add
nop
inc
cwde
icebp
mov
pop
and
xlat
(bad)
das
lods
movs
(bad)
mov
dec
ret
lea
mov
ins
stc
xor
imul
jbe
mov
enter
or
or
inc
mov
scas
push
add
and
bound
or
add
xchg
or
jge
mov
jbe
add
cmp
aaa
sar
icebp
cld
dec
adc
add
repz
pop
and
sbb
mov
jle
sahf
ins
neg
jb
in
push
aad
sub
int
push
mov
push
cld
mov
ja
sbb
je
add
push
(bad)
xchg
retf
je
dec
mov
ror
dec
ror
dec
sbb
scas
adc
mov
cmps
in
addr16
daa
inc
jno
lods
lea
mov
test
dec
in
ret
std
push
mov
outs
jnp
(bad)
(bad)
lahf
repnz
mov
push
inc
push
popf
and
push
imul
inc
jnp
and
out
sub
icebp
dec
call
push
es
push
mov
loop
jne
push
loopne
fistp
dec
ss
fstp
outs
mov
(bad)
ffreep
pop
arpl
sub
ja
sbb
push
mov
sbb
mov
cmps
enter
inc
xor
icebp
add
and
stc
imul
fidivr
in
aad
je
(bad)
inc
imul
retf
dec
and
jnp
mov
jl
push
cmp
sbb
push
call
jl
sub
iret
add
jmp
mov
add
stos
push
imul
mov
mov
sbb
int3
sti
imul
push
es
mov
test
stos
jmp
mov
or
(bad)
sub
rcl
sti
sbb
push
cmp
(bad)
cwde
sub
dec
push
mov
cwde
fdivr
fld
std
push
movs
xor
lss
mov
cmp
xchg
(bad)
mov
mov
lods
fmul
test
aas
mov
dec
jg
popf
xchg
stc
not
int
and
rcl
xchg
mov
and
xchg
xchg
loope
scas
mov
xchg
cmps
ins
push
xchg
add
cmp
dec
mov
ss
jno
xchg
adc
sar
outs
lds
pop
call
jecxz
mov
sub
push
or
mov
adc
scas
sub
inc
push
jb
ins
mov
xor
stc
cwde
aad
arpl
pop
rcl
mov
jmp
or
push
cdq
adc
cwde
hlt
sbb
aas
in
cmp
cwde
test
xchg
aam
pop
mov
movs
cs
jle
rcr
ds
ror
xlat
(bad)
and
mov
pop
jb
js
mov
ss
test
cld
(bad)
jmp
mov
jmp
lds
stos
jno
repz
mov
div
in
inc
add
jb
push
add
xor
sti
adc
mov
out
jp
mov
pop
repz
sbb
ds
movs
cmp
int
pop
lock
mov
fwait
sub
and
push
into
movs
and
add
jmp
mov
mov
pop
dec
loop
dec
jecxz
cmp
adc
sbb
mov
(bad)
sbb
fbstp
pop
fld
xchg
jl
pop
aad
push
fwait
out
push
or
mov
in
xlat
jl
xchg
cmp
fistp
outs
lahf
call
mov
movs
lea
outs
pop
sub
mov
pop
pop
shr
or
xchg
aas
mov
hlt
sbb
and
test
ret
movs
test
adc
pop
ret
or
dec
add
and
pushf
mov
mov
push
(bad)
or
xchg
les
fcmovnbe
cwde
mov
sahf
xchg
dec
test
cli
call
xor
push
mov
jns
frstor
sbb
xlat
add
add
xchg
pusha
mov
lods
adc
dec
or
adc
sub
dec
and
dec
sahf
xchg
pusha
xor
bound
in
mov
(bad)
push
xor
fdiv
xchg
xor
cmc
jle
xchg
mov
int3
lahf
or
ficom
push
add
stc
iret
into
add
nop
dec
retf
arpl
mov
pop
mov
daa
retf
mov
iret
jo
leave
or
lock
in
int3
inc
pop
or
jl
or
jmp
inc
inc
mov
jae
loope
cmp
and
cdq
xchg
ins
mov
adc
shl
pushf
call
hlt
rol
sub
sbb
in
jnp
push
cmp
outs
sahf
loope
mov
aas
daa
test
loopne
cmp
or
sub
and
mov
cwde
je
in
push
sahf
adc
jp
push
int
sbb
loopne
(bad)
and
fwait
stos
adc
adc
out
loope
adc
test
xor
sahf
fisttp
push
leave
pop
jg
in
clc
adc
xor
xchg
cmc
in
push
test
sub
cmp
jp
mov
cmp
dec
mov
or
pop
jl
sbb
mov
push
mov
pop
xchg
jle
je
add
enter
sti
fstp
cmps
mov
(bad)
xor
outs
leave
pop
neg
lds
add
aaa
cmc
pop
mov
push
imul
call
pusha
mov
pushf
ror
retf
jbe
pop
pop
loop
and
jns
push
ds
inc
cmps
out
fild
addr16
add
inc
retf
xor
adc
mov
jne
cmp
sub
adc
outs
ret
inc
in
xchg
jmp
mov
pop
stos
int
mov
dec
les
fwait
push
repnz
push
push
jl
clc
cwde
sbb
sahf
call
int
cmp
stos
jmp
or
adc
cdq
fild
ss
mov
jge
cmp
fisubr
jae
mov
or
or
add
mov
div
jecxz
shl
scas
pop
mov
test
adc
retf
jmp
push
imul
xchg
mov
and
cmp
sub
lods
mov
mov
push
mov
fcmovnb
test
jmp
pusha
call
ds
push
test
mov
in
dec
or
(bad)
rcr
pop
fcomp
mov
fld
inc
mov
push
movs
sbb
mov
or
dec
jbe
or
pusha
jb
sub
adc
aam
movs
scas
xchg
mov
or
(bad)
in
fild
jge
sbb
int
mov
idiv
es
lahf
or
jg
test
add
jge
arpl
cdq
scas
movs
dec
movs
pusha
std
adc
rol
inc
mov
inc
int3
into
lods
fwait
add
add
sbb
mov
cld
mov
in
fsubr
icebp
adc
sbb
ins
aas
jbe
js
adc
add
dec
push
lea
and
sbb
test
pop
ja
sbb
mov
scas
in
or
jl
jmp
fdivr
call
jb
sbb
out
pop
xlat
fldenv
push
(bad)
mov
pusha
retf
cmp
loopne
cdq
lods
xchg
xor
iret
push
inc
sbb
call
test
fistp
xchg
movs
ja
stc
shl
out
in
es
outs
adc
fiadd
pushf
lods
sbb
rcr
sub
mov
mov
lods
in
pop
sub
xor
push
mov
sbb
mov
adc
lds
inc
aad
xor
xchg
xchg
jnp
adc
sbb
cmps
or
inc
ficomp
sbb
xchg
cmp
jns
cwde
mov
sbb
push
popa
mov
and
outs
outs
cwde
ins
sub
or
xor
or
ins
outs
imul
fcom
fistp
es
dec
pop
loope
lds
scas
jmp
inc
inc
fwait
jno
sbb
sub
and
xlat
mov
stos
(bad)
pop
hlt
jae
inc
and
pop
adc
pop
xchg
cmc
adc
repnz
xor
sub
(bad)
in
mov
ja
sub
dec
shl
mov
cmc
jg
xor
adc
stos
cmp
pop
cmps
std
jl
inc
in
(bad)
fidiv
fld
dec
sub
dec
xor
arpl
push
mov
arpl
pop
outs
sbb
retf
add
mov
outs
xchg
push
out
mov
xor
push
xchg
inc
pop
pusha
push
in
sub
adc
mov
pop
in
fild
out
nop
jne
xchg
out
mov
loope
dec
iret
jb
lods
inc
ins
xor
stos
daa
aas
jb
push
sub
lock
mov
in
mov
mov
xor
outs
add
mov
dec
dec
aaa
mov
pop
sbb
mov
sar
movs
shl
seta
mov
popf
pop
sbb
cmp
fidiv
mov
(bad)
pop
add
sub
dec
jmp
pop
sahf
mov
xor
inc
or
jle
lahf
std
mov
loopne
out
aam
(bad)
mov
mov
int3
ret
push
stos
arpl
jno
por
mov
mov
or
or
or
ret
xchg
adc
adc
jl
mov
rcr
or
mov
dec
mov
leave
fist
retf
arpl
mov
jmp
je
xlat
js
mov
cmps
mov
or
test
inc
shl
mov
lahf
sub
cmp
sub
and
push
js
push
xchg
rcr
xchg
xchg
pusha
pop
and
(bad)
mov
jno
add
in
repz
jne
dec
mov
pop
lock
dec
pop
add
into
xchg
mov
sub
and
adc
adc
dec
std
dec
jge
pop
aaa
inc
xchg
lock
hlt
jns
mov
inc
pop
cld
xchg
mov
jns
xor
push
inc
jae
xchg
mov
jg
push
sbb
push
adc
mov
cmp
dec
(bad)
int3
cmp
mov
pop
mov
(bad)
pop
(bad)
dec
sbb
xchg
call
mov
test
lods
inc
mov
fstp
pop
arpl
stos
xor
xchg
mov
jecxz
pop
cmp
cmp
hlt
and
sub
es
xlat
mov
popf
xchg
add
pop
push
inc
or
jo
add
repz
rcr
(bad)
outs
dec
sbb
cmp
mov
fstp
fsubr
pop
imul
mov
jl
stc
sahf
cdq
sbb
arpl
ficomp
ins
rol
jne
jmp
mov
add
(bad)
js
cmc
int
iret
addr16
loopne
jmp
outs
xor
(bad)
mov
cmp
and
jp
leave
mov
into
repz
sbb
cli
mov
cmps
sub
pop
sub
ss
fsub
pop
dec
fisttp
fwait
pop
pop
ret
mov
dec
(bad)
es
fcomp
adc
js
(bad)
dec
add
mov
push
cli
pusha
xchg
and
add
neg
inc
jge
or
mov
mov
xlat
popf
test
scas
sbb
fwait
sar
or
adc
xchg
sub
ins
out
push
xor
pop
jno
xor
out
xchg
(bad)
aaa
xchg
int
pop
test
sar
sub
dec
jns
addr16
(bad)
jl
mov
std
cmps
jl
adc
mov
mov
pop
sti
push
loopne
and
mov
sahf
sbb
jl
and
(bad)
and
jo
mov
or
scas
stos
sbb
jmp
push
push
xchg
pop
cmp
lock
mov
stc
adc
sti
call
push
ds
ja
rcl
dec
push
js
pop
fs
fdiv
rep
adc
retf
pop
outs
jnp
(bad)
mov
popa
into
add
sbb
adc
repz
nop
push
enter
out
sub
jbe
retw
(bad)
test
popa
sbb
cmps
jbe
bound
sbb
and
lds
xchg
dec
cmp
or
sub
js
sbb
in
pop
aad
idiv
aaa
and
adc
inc
cwde
cmc
retf
shr
inc
mov
inc
dec
sahf
pop
xchg
popw
sbb
jl
out
mov
call
mov
popa
cmp
adc
(bad)
mov
lods
sub
cdq
clc
mov
hlt
scas
ins
(bad)
adc
out
dec
dec
inc
or
ss
jle
in
pop
shr
mov
(bad)
jl
sbb
jmp
fs
cld
cwde
or
jae
test
cmp
pop
mov
icebp
jae
jmp
fisub
arpl
sbb
mov
push
pop
ror
inc
xor
sti
pop
or
mov
lock
ficom
inc
inc
mov
jg
scas
cs
xor
inc
and
daa
aaa
dec
repnz
lods
jae
jo
sbb
arpl
cwde
xchg
lods
es
outs
sar
scas
mov
int
add
jecxz
xor
or
mov
sbb
movs
scas
lds
fwait
mov
ret
dec
cmp
pop
sahf
popf
mov
retf
push
(bad)
repz
(bad)
fwait
leave
fs
es
inc
sbb
ror
lahf
retf
movs
add
sub
xchg
jmp
pop
icebp
iret
and
cwde
dec
bound
movs
mov
loop
or
in
add
sahf
and
push
fbld
and
ret
outs
js
mov
xchg
mov
(bad)
pop
ds
fincstp
jne
je
imul
fwait
xchg
dec
dec
scas
jae
imul
in
std
out
aam
add
(bad)
std
movs
leave
fs
mov
shl
jae
pop
jb
dec
loopne
lea
jno
rol
vmaxpd
pop
mul
push
(bad)
jmp
fwait
not
pop
mov
shl
(bad)
int3
pop
verr
mov
es
int3
out
inc
push
imul
mov
mov
add
dec
mov
mov
push
mov
pop
ins
call
jno
aaa
out
mov
pop
push
arpl
neg
adc
sub
bound
test
xor
lods
int3
push
adc
cmc
stos
sbb
lea
jns
dec
or
dec
aaa
xor
lods
sub
mov
arpl
sub
out
push
es
push
xlat
pop
rol
setne
sub
ficomp
cmp
ret
sbb
dec
cwde
sbb
repnz
stc
jnp
and
cwde
jge
pusha
push
repnz
jl
arpl
xor
rol
mov
(bad)
std
out
push
mov
pop
push
sbb
ins
leave
sahf
add
mul
dec
jge
(bad)
aas
jnp
clc
or
jge
pop
pop
inc
jge
sub
push
push
sti
bound
pop
dec
mov
cmp
cmp
xchg
jge
pop
pusha
jl
mov
aas
scas
jns
add
int3
loopne
xchg
loop
cmp
int
addr16
das
sub
cmp
add
xlat
(bad)
loope
fs
jp
jne
mov
pop
scas
ja
or
mov
rol
call
popa
shl
xor
and
arpl
sub
addr16
fs
das
int
loope
lahf
push
xor
(bad)
mov
repz
adc
and
jmp
mov
jecxz
mov
cmps
rcr
jge
adc
xchg
add
in
retf
mov
xchg
leave
xchg
jge
aam
mov
inc
jmp
or
adc
mov
call
(bad)
mov
paddusb
pop
or
xchg
and
retf
iret
jno
shl
data16
pop
mov
out
clc
das
cwde
fwait
or
xor
leave
gs
ja
mov
je
add
lea
neg
fucomp
cld
(bad)
rcl
mov
add
(bad)
add
test
xchg
cld
mov
jns
hlt
pop
sub
jl
loope
pop
jo
mov
inc
jne
popa
in
push
mov
dec
ja
cmp
dec
rcr
stc
sbb
jl
call
jg
fistp
test
cli
dec
pop
outs
dec
adc
shr
jne
sbb
(bad)
inc
lahf
jne
fst
ret
out
scas
adc
ja
cmp
jge
and
sub
cwde
ja
iret
std
push
inc
pushf
mov
mov
sar
cmps
push
hlt
inc
lock
js
mov
mov
addr16
ficom
jbe
add
mov
pop
add
add
stos
int
sub
push
movs
es
(bad)
sub
cmps
mov
out
pop
push
loopne
cmc
int
fsub
rcl
jge
out
into
jmp
jp
shl
pop
outs
test
inc
bnd
sahf
mov
push
add
mov
fs
jg
and
dec
shl
fisubr
mov
popa
mov
or
mov
repnz
pushf
mov
mov
cmp
shl
xor
inc
scas
not
ins
sub
fiadd
(bad)
cdq
lock
push
es
sbb
xor
mov
mov
dec
pop
and
enter
fdivr
mov
cmp
ja
push
add
aad
std
test
and
lock
scas
loope
call
test
or
xchg
stc
inc
icebp
mov
fwait
jmp
daa
retf
push
addr16
sub
xor
leave
loop
idiv
push
mov
in
mov
popa
sbb
or
mov
retf
lock
(bad)
std
cmc
je
dec
inc
ss
push
pop
iret
mov
stos
cmp
inc
lock
fdivr
jecxz
xor
in
dec
loop
out
xor
out
in
adc
and
cmp
dec
dec
push
sti
and
and
movs
loop
and
es
pop
and
mov
aas
stos
mov
push
and
shl
xchg
xchg
dec
jg
jbe
sub
jle
sub
cmp
retf
cmp
arpl
xor
jae
mov
enter
inc
cwde
add
(bad)
movs
jle
fadd
push
fsubr
repz
call
imul
push
ins
imul
hlt
dec
cmp
mov
lods
xchg
mov
iret
fidivr
jae
sbb
sbb
fild
sbb
js
fstp
or
push
outs
out
pop
add
mov
sbb
repnz
fadd
addr16
fild
out
jb
cwde
dec
lods
inc
mov
nop
out
sub
out
jl
iret
out
fist
cmp
or
dec
and
add
adc
test
fnstcw
xor
push
fsubr
aas
xor
into
cmp
mov
mov
and
cmp
adc
jmp
in
call
inc
shr
dec
cmp
ins
or
adc
les
mov
mov
xchg
sub
jge
jnp
xchg
sub
cmp
aaa
into
add
pop
mov
sub
retf
inc
cmps
sub
mov
jge
jne
imul
mov
jbe
pop
clc
push
rcr
pop
or
mov
adc
jo
lahf
mov
lock
imul
ja
mov
cmp
sbb
aas
jp
xor
rcr
retf
dec
ins
xchg
and
dec
jbe
sar
pop
add
les
std
test
addr16
jbe
ins
push
add
fwait
jbe
mov
jne
sbb
repz
mov
adc
jns
pop
cmp
add
call
cmp
mov
out
xor
sti
mul
rol
cwde
inc
pop
mov
shl
hlt
pop
leave
jno
cmps
pop
xor
repnz
stc
push
loop
push
xor
sbb
lea
test
test
adc
add
mov
cmp
add
test
jle
jl
pop
js
dec
mov
out
mov
aam
into
and
jl
and
or
fst
or
lods
inc
test
(bad)
jo
fstp
ss
push
nop
mov
lds
mov
and
mov
jge
jno
int3
(bad)
mov
(bad)
int
mov
lea
add
fld
int3
pop
mov
je
(bad)
jb
pop
movs
dec
push
cmp
out
push
(bad)
xor
out
ss
xor
(bad)
cmps
jae
xor
add
push
cmps
ret
imul
adc
jb
pop
gs
xor
jge
add
sub
xchg
pop
test
sbb
mov
xor
push
mov
rol
mov
pop
add
cmc
jae
loope
mov
or
push
jns
pop
jns
lds
ss
(bad)
stos
imul
sub
mov
add
adc
xor
dec
cmps
sahf
dec
mov
xor
jne
(bad)
adc
rcr
add
aad
cwde
dec
cmp
xor
(bad)
push
or
movs
sub
mov
popa
or
ret
les
fs
push
sahf
jg
adc
mov
int
mov
pop
fsub
push
jl
xchg
(bad)
mov
inc
fsub
add
pop
pop
sbb
pop
sub
lahf
push
mov
pop
mov
movs
dec
mov
adc
mov
mov
sub
mov
add
loop
mov
fabs
sbb
pop
les
ins
xchg
or
(bad)
mov
sbb
fimul
mov
(bad)
test
addr16
(bad)
fdiv
cmp
xor
and
pop
or
pop
jae
sbb
stos
movs
mov
aas
(bad)
ins
mov
jmp
loope
mov
mov
std
out
pop
dec
xchg
jle
int3
xchg
shl
cmp
and
sbb
or
ffree
jae
xor
sub
cdq
sub
pop
in
mov
(bad)
mov
or
add
lea
ret
adc
sub
and
popf
adc
movs
ret
or
push
mov
movs
fnstcw
cmps
sub
push
popf
mov
imul
cwde
test
pop
test
add
pushf
out
pop
scas
loope
inc
mov
mov
mov
clc
push
imul
cmp
ds
sub
dec
push
int3
inc
shl
jmp
retf
push
or
enter
imul
ja
mov
nop
pop
enter
push
lea
jo
xchg
sbb
push
push
xchg
xlat
jp
mov
test
fiadd
fmul
add
mov
(bad)
cmp
sahf
sub
jp
inc
pop
shr
outs
lods
std
test
xchg
test
mov
mov
adc
inc
retf
dec
dec
out
pop
inc
cmp
std
cmp
fsubr
inc
shr
jge
mov
(bad)
lods
or
mov
and
ss
sbb
pusha
jg
(bad)
cmp
xor
adc
movs
push
mov
stos
mov
cmps
iret
mov
in
outs
test
jmp
fnstenv
clc
imul
dec
fsub
xor
fcom
fild
mov
cmp
mov
(bad)
daa
cmps
push
fcmove
adc
std
ss
sbb
mov
into
movs
xchg
push
cmps
bound
lea
fsubr
cmp
inc
nop
inc
jo
std
imul
ror
push
xor
sbb
test
mov
cmc
mov
cmp
xor
xchg
push
cmp
ret
aas
scas
mov
adc
add
fucomp
xchg
or
lock
sub
scas
push
and
cmps
cmp
pop
clc
dec
jnp
add
adc
ds
rcl
ja
stos
in
mov
mov
mov
in
mov
ins
sbb
pop
dec
push
lock
popf
loop
jno
adc
cdq
iret
mov
daa
dec
les
dec
jae
ss
xchg
adc
jno
push
push
cli
jno
xchg
jbe
cs
pushf
std
or
push
sub
sub
sub
inc
xchg
inc
fdivr
ds
aaa
fiadd
adc
test
imul
mov
xor
jns
or
jns
shl
mov
add
or
test
push
test
or
jecxz
mov
int3
push
(bad)
lock
dec
fcmovnu
inc
imul
mov
pusha
loop
enter
lock
scas
mov
je
icebp
test
mov
fimul
mov
xchg
addr16
(bad)
xchg
js
jmp
xchg
rcr
mov
(bad)
xlat
out
in
pop
sti
or
data16
test
jb
dec
cmps
sahf
loopne
pop
pop
pop
xchg
jb
adc
cmp
xlat
fiadd
stc
xor
add
jl
iret
lock
rdtsc
ret
loopne
sub
out
xor
xchg
cmp
outs
call
lods
scas
push
fs
dec
cmps
leave
adc
inc
in
pop
mov
mov
scas
loope
jo
sti
ret
mov
push
movs
mov
repnz
shl
push
or
xchg
ret
test
(bad)
push
outs
loop
mov
mov
clc
sbb
xchg
xor
dec
jns
or
jle
xor
out
mov
stos
jmp
lea
ret
add
pop
sbb
ss
xchg
adc
push
mov
ret
mov
dec
xchg
pop
push
in
jbe
add
jb
ficomp
push
mov
ins
pop
dec
shr
clc
sub
stc
sbb
pop
or
sbb
pop
stc
add
mov
adc
jl
cmp
imul
sbb
pop
cli
cmps
push
gs
lock
dec
cs
pop
add
jg
jmp
ficomp
outs
ret
or
ins
or
inc
mov
or
mov
movs
out
inc
xchg
mov
jne
push
xor
or
fild
fmulp
pop
mov
ja
fcomp
and
pop
push
iret
test
pop
test
fdivr
rcr
out
scas
loop
clc
(bad)
loopne
push
fcomip
out
mov
add
fadd
call
xor
push
aam
jg
fild
and
sub
pop
outs
mov
push
fistp
mov
imul
lods
cmp
ret
sahf
xor
stos
mov
dec
xor
jp
fnstcw
cmp
in
dec
or
retf
fmulp
sub
push
daa
add
(bad)
fild
rcr
aad
cmps
add
and
shl
mov
sub
sub
dec
into
jnp
sub
push
lods
sti
aam
rcr
stos
mov
or
sbb
push
dec
movs
int3
in
dec
inc
and
dec
out
loope
or
pop
or
ins
xchg
mov
jmp
sbb
lds
mov
hlt
dec
push
mov
loop
xlat
(bad)
sbb
clc
jb
addr16
fisttp
cmp
xlat
inc
outs
std
arpl
and
or
inc
(bad)
sub
inc
sahf
xor
jp
aas
fstp
pop
inc
adc
jo
das
add
arpl
sub
xchg
dec
dec
and
xor
and
sbb
(bad)
sti
push
adc
out
stos
add
and
inc
mov
sbb
and
xchg
rcr
sbb
and
sbb
mov
repnz
idiv
push
mov
hlt
add
lock
dec
(bad)
fsub
popa
cmps
leave
mov
dec
xor
sub
sbb
jbe
xchg
cdq
cld
cmp
mov
inc
mov
xchg
cdq
jg
adc
pusha
add
mov
cmps
call
inc
jne
push
sbb
fimul
jle
out
pop
pop
and
test
idiv
clc
sbb
pop
jecxz
shl
mov
and
dec
jle
stc
or
loop
mov
ins
xor
and
(bad)
shl
jo
into
push
in
push
mov
mov
and
pusha
sti
repnz
pop
repz
and
not
stc
hlt
jnp
jg
cmp
pop
int
dec
pop
ja
aam
xchg
xchg
hlt
pushf
cs
xchg
inc
outs
add
es
iret
imul
(bad)
push
push
mov
push
daa
push
arpl
pop
dec
xchg
add
jnp
stos
xchg
mov
lods
jbe
or
mov
or
outs
sbb
dec
cmps
js
repnz
gs
mov
mov
mov
jmp
jno
jne
sar
ins
pop
pop
stos
xchg
lahf
jbe
jge
cmp
out
mov
lds
or
pop
in
adc
into
push
mov
pop
and
inc
jne
loopne
jbe
bound
adc
sub
adc
add
fdivr
gs
xchg
mov
pop
ret
data16
es
loop
cvtpi2ps
pop
adc
inc
xchg
sub
rol
jp
push
pusha
das
shl
repnz
hlt
adc
fdivrp
push
sbb
ja
scas
test
or
xchg
mov
ja
enter
inc
adc
inc
call
push
or
xor
or
lds
in
jle
scas
outs
arpl
mov
rcl
hlt
dec
shl
inc
inc
movs
aas
stc
mov
sub
ja
test
xor
sub
int
shl
loop
adc
test
and
push
mov
(bad)
neg
adc
or
(bad)
adc
mov
movs
fwait
pop
sub
xor
pop
lahf
inc
xor
mov
jae
in
jge
(bad)
mov
imul
arpl
xor
or
addr16
xchg
pop
inc
cmp
rcl
cwde
adc
mov
mov
popa
push
scas
int
and
xor
mov
add
sbb
leave
in
mov
imul
iret
ins
mul
bound
out
call
xor
movq
inc
cdq
stos
sub
mov
mov
cmp
mov
xchg
add
sar
fnstenv
cli
ja
or
mov
xchg
cmp
cdq
adc
jb
push
mov
inc
imul
(bad)
fidiv
adc
movs
cmp
mov
jl
or
jo
std
or
adc
frstpm(287
ins
in
je
inc
add
or
imul
jmp
movs
sti
push
icebp
inc
mov
mov
push
movs
test
inc
fisubr
test
sahf
jle
or
ins
test
fs
and
add
push
and
jl
das
add
int
scas
scas
pop
int3
and
mov
dec
das
adc
mov
(bad)
cmp
mov
nop/reserved
add
stc
hlt
mov
mov
cmp
mov
test
sub
mov
cmp
push
pop
repnz
out
sbb
and
or
inc
icebp
add
cmp
stc
loopne
mov
mov
sbb
dec
test
and
mov
rcr
pushf
aad
movs
mov
fcom
mov
jnp
out
dec
cmp
mov
push
scas
mov
jae
loope
mov
sbb
add
push
lea
scas
outs
mov
outs
xchg
and
pop
(bad)
ja
ins
pop
jae
xchg
sub
jmp
dec
cwde
add
inc
adc
and
outs
cdq
sub
fs
sbb
add
jmp
stc
jl
movs
jne
nop
adc
mov
push
clc
sub
jp
call
icebp
jmp
inc
adc
ss
aam
ret
test
(bad)
mov
ret
jge
sub
ins
cmp
add
mov
jg
popa
cmc
cmp
dec
outs
xlat
lods
pop
jno
push
fist
ret
mov
mov
add
xchg
js
add
and
ins
cmp
inc
xchg
jo
(bad)
int3
xlat
call
mov
add
add
loopne
fsubr
mov
inc
lods
in
inc
scas
mov
in
cmp
loopne
neg
out
mov
es
shl
fimul
and
daa
es
imul
push
je
or
cmps
sub
pop
adc
test
jno
mov
add
hlt
push
sar
add
ror
add
jge
adc
mov
cmp
add
lds
sbb
scas
mov
jo
xchg
dec
pop
mov
enter
add
fs
mov
cld
jbe
fld
fstp
adc
or
ror
aad
sbb
loope
jmp
icebp
mov
sub
adc
mov
sub
sbb
fwait
movs
sbb
rcl
xlat
jg
inc
inc
lods
pop
neg
outs
mov
fsub
loope
ss
xchg
in
faddp
dec
jecxz
das
mov
scas
xor
jnp
and
fisubr
push
fs
js
xchg
lea
jo
jns
fcmovu
in
mov
xchg
rcr
adc
call
enter
mov
imul
jl
jp
daa
loope
push
lock
lahf
stos
je
ret
outs
test
dec
pop
cmp
cld
test
retf
paddsw
stc
(bad)
lock
add
mov
mov
jp
loopne
fwait
add
(bad)
enter
push
pushf
xor
daa
movs
jl
fldln2
daa
sub
adc
(bad)
jmp
add
ret
inc
loopne
push
or
adc
dec
out
out
jge
retf
test
dec
sub
retf
cld
push
test
lods
mov
call
xchg
data16
cld
(bad)
sub
scas
lahf
ja
test
add
cmps
lahf
jne
jmp
ins
fnsave
push
or
dec
push
stos
fldcw
sbb
add
sbb
xor
loop
push
daa
movs
les
test
inc
dec
cmp
movs
pop
nop
and
aad
or
push
adc
retf
pop
push
jno
ins
pop
add
cmp
inc
push
push
out
(bad)
jg
sbb
das
pop
sbb
sub
icebp
gs
mov
es
xor
push
enter
stc
inc
dec
jmp
mov
mov
fdivrp
adc
mov
mov
pop
cmps
fdiv
stc
call
push
xchg
stc
imul
xchg
stos
mov
outs
or
and
pop
push
les
fsubr
xchg
xor
and
dec
ds
mov
neg
(bad)
not
xchg
cmp
push
dec
(bad)
enter
jne
stc
mov
repz
push
frstor
adc
loope
pop
lea
dec
or
scas
mov
and
(bad)
jl
add
ret
mov
jle
pop
pop
data16
loope
add
(bad)
or
cmp
loop
cmps
in
sahf
push
adc
jl
rcr
or
jmp
lea
retf
fmul
jge
ds
push
xchg
dec
data16
(bad)
jmp
lahf
pop
sub
jmp
adc
inc
sahf
out
in
mov
stc
int
adc
loopne
sbb
push
gs
retf
(bad)
jp
jno
push
ret
stc
push
test
ss
jmp
push
and
sbb
and
mov
inc
sub
rol
inc
push
or
and
jns
jg
adc
mov
lods
rcr
adc
enter
cld
mov
ss
adc
aad
xor
gs
and
loopne
push
mov
pusha
sub
outs
adc
movs
outs
sub
and
cmc
pop
retf
dec
sahf
(bad)
jle
push
xor
jg
and
add
cmc
lods
fucomi
out
repz
pop
jmp
clc
inc
shr
cmp
adc
dec
mov
xlat
inc
push
xchg
and
hlt
push
aam
hlt
mov
repnz
dec
cmp
xchg
sbb
lds
cs
push
imul
or
or
(bad)
ror
mov
sbb
lahf
sahf
sub
pop
dec
sub
mov
xchg
cwde
arpl
outs
and
mov
in
jmp
sub
imul
aaa
inc
es
loope
imul
outs
test
imul
loop
scas
aaa
mov
scas
fisttp
ret
shl
xchg
or
adc
xchg
dec
sub
push
jae
mov
lea
in
jl
adc
push
mov
mov
call
mov
mov
shr
mov
loopne
cmp
mov
sti
js
fwait
push
add
scas
out
jmp
pop
or
jmp
or
lods
jne
and
mov
aad
xchg
outs
loopne
jae
push
push
loop
push
mov
inc
in
fild
jae
add
sub
adc
xlat
push
pop
mov
jnp
nop
sub
lods
gs
rcr
call
sbb
mov
gs
sar
sbb
inc
mov
or
clc
jp
scas
mov
ja
mov
popf
sbb
xchg
xor
xor
jne
sub
cli
dec
ja
mov
fidivr
pusha
pusha
call
dec
addr16
retf
mov
dec
stc
cmp
lock
fs
and
jg
adc
popa
aad
xor
cmp
mov
(bad)
pop
ins
pop
jae
pop
inc
aas
out
and
fwait
nop
mov
shl
and
xor
adc
ffreep
(bad)
sti
mov
sub
sbb
sahf
xlat
push
pop
fwait
push
push
inc
pop
or
xor
pushf
cmp
and
jp
jbe
loopne
enter
int3
into
inc
popf
nop
mov
push
cmp
in
mov
adc
jge
(bad)
xlat
es
pop
xor
stos
test
push
mov
sub
cli
iret
mov
out
cmp
div
xor
dec
adc
pop
in
xor
hlt
cmp
fucomip
sub
and
imul
push
lods
daa
or
cld
xor
lahf
lds
mov
shl
mov
pushf
in
jle
imul
sar
movs
lods
dec
cmps
xchg
es
sbb
call
shl
jno
ret
mov
stos
rol
mov
add
mov
(bad)
xor
xchg
xchg
(bad)
rcr
pop
sub
ret
movs
or
popa
cmp
(bad)
rcl
add
or
(bad)
clc
xchg
add
and
pop
xchg
loope
sbb
push
mov
mov
xor
adc
push
push
push
or
icebp
mov
rol
std
sahf
and
lods
adc
je
adc
push
fsub
jmp
(bad)
push
fnstcw
int3
imul
cmp
xchg
fsubrp
sbb
jle
and
push
jbe
mul
jge
jmp
push
inc
inc
repnz
jno
fistp
pop
sahf
mov
xor
adc
retf
enter
mov
ror
test
lods
xchg
sbb
adc
aam
in
inc
xchg
cmp
adc
ins
push
leave
mov
xor
jmp
ins
sti
cmp
and
dec
fucomi
out
ret
push
mov
lock
sahf
push
jecxz
push
cs
dec
test
dec
ret
dec
(bad)
into
int3
ror
xchg
fidivr
out
fwait
push
stc
inc
xchg
int3
push
or
mov
and
push
inc
dec
dec
test
inc
lods
dec
sub
loope
cmp
push
jb
push
aaa
mov
ds
ins
iret
sti
popf
or
xor
jne
out
aas
bound
pop
js
mov
mov
inc
xor
lahf
jbe
cmc
jbe
push
fdivr
jb
mov
and
mov
test
jo
cld
call
xchg
retf
mov
and
clc
ja
jnp
ja
jns
adc
lods
mov
dec
adc
jp
inc
xchg
push
pop
add
xor
jp
cmps
pop
hlt
dec
mov
pop
(bad)
mov
pop
in
ja
imul
das
and
aad
data16
jle
cwde
adc
lds
pop
in
(bad)
(bad)
jne
fcmovbe
jg
into
mov
inc
movs
mov
lock
or
dec
mov
inc
into
cmp
jmp
sti
jmp
adc
dec
jb
push
cmc
sub
retf
adc
xchg
xchg
xor
enter
scas
dec
(bad)
ins
retf
icebp
mov
in
sub
or
mov
ret
mov
mov
gs
out
jl
enter
and
sub
sub
sbb
add
add
mov
popf
jecxz
mov
dec
stos
call
add
xchg
adc
enter
aaa
(bad)
xor
dec
in
cli
sbb
xchg
and
test
call
in
push
cmps
(bad)
cmp
adc
ret
mov
xlat
popf
or
in
jg
push
and
mov
sbb
fs
dec
jmp
into
push
cli
retf
aam
push
mov
or
cdq
scas
stc
icebp
js
leave
inc
cmp
test
cmp
(bad)
jle
xchg
xchg
adc
sub
xchg
lods
dec
sub
lea
bound
xchg
or
out
jmp
xchg
mov
ins
mov
dec
sub
test
and
and
sbb
inc
ja
loopne
dec
popf
mov
movs
sub
dec
xor
outs
lock
cmc
out
stos
stos
jmp
mov
aam
sub
add
idiv
or
mov
out
aas
test
popa
cmp
fst
lods
inc
shl
imul
pop
(bad)
mov
jmp
shr
or
shl
in
mov
sub
sahf
je
data16
pushf
sub
in
or
aam
ror
adc
jl
div
aaa
sahf
cs
lods
loop
inc
int
xadd
sbb
cdq
fsubp
js
pop
movs
pop
dec
and
adc
cmp
pop
imul
sbb
icebp
jae
sbb
sar
sub
xchg
lea
inc
adc
je
inc
sub
ss
or
and
aas
sbb
add
data16
mov
(bad)
int
int
adc
inc
and
sbb
cdq
mov
jae
out
addr16
sbb
pop
xchg
xchg
fcomp
fnsave
jmp
ins
jmp
ins
sub
sbb
add
inc
in
retfw
ins
cmp
popa
(bad)
jmp
mov
call
int
push
lods
inc
scas
mov
mov
and
push
es
dec
(bad)
jns
std
dec
fs
sahf
retf
shl
ds
je
pop
mov
call
push
mov
ins
and
pop
lock
xor
das
sub
mov
daa
ret
push
push
ficom
add
stos
sbb
ret
cmp
xor
dec
sbb
pop
dec
ins
cmp
jae
aaa
or
neg
mov
sub
sbb
mov
int
and
mov
pop
in
xor
push
pushf
(bad)
xor
xlat
and
and
pop
sub
mov
jmp
pop
pop
add
cwde
fisub
inc
mov
loop
pop
popf
sub
stos
xchg
dec
pop
or
ds
pop
mov
xor
add
mov
pop
jo
aas
mov
mov
fdiv
frstor
jno
push
jp
ja
popf
shl
mov
push
ds
loope
test
lahf
jo
pop
mov
cld
xchg
ds
dec
test
leave
or
lods
movs
dec
fcomi
ds
jge
mov
cmps
fwait
or
or
repz
js
fdiv
movs
gs
push
jae
stos
cmps
push
xchg
dec
push
xchg
inc
ror
inc
xchg
or
addr16
mov
jno
xchg
sar
jae
dec
inc
ret
mov
cld
jl
mov
hlt
jl
mov
ss
rcr
fist
mov
jbe
adc
push
mov
mov
sub
inc
sbb
inc
or
adc
or
push
hlt
mov
gs
nop
or
xchg
aas
cmp
sbb
ins
pushf
xchg
mov
pop
mov
inc
(bad)
mov
fist
sub
xchg
pop
push
add
mov
pop
popa
ins
into
push
mov
into
adc
lods
jecxz
mov
jnp
sub
fnstsw
mov
or
mov
scas
xor
jg
jbe
xchg
mov
out
jg
push
pop
mov
push
hlt
outs
push
cmp
repz
rol
add
sti
loopne
shl
add
add
mov
sar
cmp
int3
adc
mov
mov
add
repnz
mov
and
jecxz
je
ret
add
xor
or
xchg
pop
bound
mov
xchg
sub
add
sbb
mov
add
inc
jns
sbb
pop
stos
push
push
rol
cwde
adc
mov
repnz
pop
mov
jne
cmp
and
imul
pop
cld
arpl
pushf
xor
ins
adc
dec
rol
cmp
sbb
or
cwde
mov
ds
fwait
add
push
cmc
stos
mov
mov
das
movs
lock
jecxz
fwait
(bad)
shr
inc
data16
xchg
sahf
xchg
cmc
jbe
loop
aad
fstp
cld
dec
sbb
aas
xchg
arpl
cmp
jno
xor
retf
ds
fs
hlt
dec
aaa
call
push
cmp
xor
cld
cmp
mov
inc
sbb
add
push
rcr
(bad)
out
mov
clc
or
add
addr16
bound
arpl
aas
jno
ret
popa
push
mov
sub
loop
sub
std
aas
add
adc
push
jnp
mov
mov
jne
test
jo
out
pop
ficom
push
adc
mov
inc
retf
sar
lea
test
ficom
fisttp
ja
cmc
jecxz
cmp
lods
mov
push
out
rcl
cmp
mov
inc
or
int3
cs
inc
sti
pop
enter
fdiv
pop
cmp
shr
enter
add
mov
xor
push
leave
out
xor
xchg
ror
pop
dec
and
and
pop
outs
mov
mov
mov
mov
cmp
jp
pop
mov
int
xchg
mov
nop
scas
icebp
mov
clc
mov
xlat
pop
cwde
mov
aaa
outs
jmp
xlat
or
xchg
ins
pop
in
cdq
jp
or
stos
add
pop
call
sbb
and
sub
movs
sbb
mov
fwait
test
neg
cwde
fs
sub
dec
pop
rol
or
cwde
add
jmp
out
inc
scas
jb
mov
or
xchg
xlat
jmp
xor
sub
inc
xor
push
lea
loope
mov
xchg
out
lea
mov
fcmovne
std
and
add
adc
int
lahf
aaa
arpl
pop
sar
fistp
push
aad
jecxz
mov
jno
jbe
inc
sbb
out
mov
and
dec
cmc
mov
and
lods
leave
sbb
daa
mov
mov
cmp
adc
data16
aas
xchg
dec
ret
push
and
movs
lea
enter
jae
repnz
ret
mov
add
sub
jle
imul
aas
add
sldt
pop
jne
cmp
jmp
repz
cs
inc
mov
shr
xchg
inc
mov
clc
mov
and
xchg
(bad)
fsub
xchg
pop
mov
mov
cli
or
aaa
cmp
sub
imul
sbb
or
and
cmp
fisttp
fstp
fidivr
push
mov
clc
shl
xor
push
out
sbb
int
loope
aam
hlt
ss
nop
mov
sbb
mov
cdq
sbb
add
in
psrlw
mov
data16
movs
ins
mov
mov
addr16
out
leave
push
jno
(bad)
rcr
cld
ret
mov
in
fbld
inc
inc
mov
jmp
mov
fsubr
retf
mov
adc
popf
cmp
pop
mov
les
test
movs
call
or
mov
cwde
add
dec
pop
fisub
imul
pop
mov
cli
push
out
or
out
or
jp
cmp
mov
(bad)
popa
push
inc
dec
and
push
mov
fst
inc
push
fisubr
bound
(bad)
mov
pop
fmul
jp
(bad)
sub
pushf
fxch
inc
mov
adc
mov
adc
add
repz
dec
data16
and
bound
sahf
sub
ins
aad
fidivr
or
pop
out
push
(bad)
je
adc
pop
mov
xchg
cmp
das
mov
fld
cld
or
sbb
sar
mov
test
push
js
(bad)
fcomp
add
add
retf
cld
jmp
imul
xchg
mov
sub
mov
sub
loope
adc
nop
fiadd
repnz
xchg
(bad)
mov
fcomp
add
push
outs
or
xchg
cmp
push
or
jp
je
xor
repnz
out
pop
mov
adc
test
stos
adc
push
sub
cld
lea
jns
push
scas
xchg
mov
cmp
push
jmp
xchg
dec
push
test
pop
sahf
mov
add
(bad)
pop
cmp
popa
sub
and
inc
pushf
or
push
in
cmp
loope
adc
loop
lds
mov
js
push
sub
mov
sbb
sti
inc
into
in
std
out
sbb
inc
lahf
adc
xchg
add
pop
int3
cs
aaa
sahf
and
bound
repnz
jle
jle
adc
ds
push
xor
pop
jmp
in
dec
pop
shr
(bad)
repnz
dec
and
push
enter
test
je
and
xchg
pop
loopne
call
(bad)
mov
mov
sbb
add
ficom
stc
fcomp
mov
jl
iret
push
lea
das
add
xchg
mov
(bad)
add
dec
cmp
and
mov
int
dec
mov
dec
push
mov
imul
aad
push
sbb
fmul
jg
cwde
cwde
mov
fcmovnbe
inc
imul
stc
shr
clc
push
lahf
jecxz
pop
fst
xchg
jbe
jmp
push
lods
inc
popf
adc
jmp
add
sbb
jl
cwde
sub
lds
ffreep
jnp
iret
(bad)
mov
out
cmp
in
xor
int3
bound
dec
les
cmp
fcmovu
mov
pop
ret
lds
or
je
imul
pop
xor
cmp
sbb
cmp
pop
sahf
lock
cmp
int
lea
ret
test
and
jne
(bad)
pop
out
lods
into
or
fsub
nop
out
and
or
dec
xchg
into
pop
repz
(bad)
mov
sbb
(bad)
cmps
loop
xchg
fistp
nop
sbb
push
mul
mov
sbb
leave
inc
adc
lea
mov
xchg
dec
jp
xor
push
xchg
mov
dec
push
retf
mov
popf
jbe
hlt
imul
cmp
inc
sbb
test
jae
dec
test
sbb
lahf
sbb
jae
fld
mov
jecxz
pop
sbb
lods
lahf
add
aam
sbb
leave
dec
xchg
pop
adc
jo
sub
pop
inc
pop
pop
dec
neg
jbe
or
pavgw
jge
in
(bad)
jmp
pop
jmp
cmc
(bad)
mov
inc
das
fdiv
mul
dec
adc
sbb
inc
push
mov
movs
push
dec
pop
fwait
je
or
lods
movs
fiadd
mov
ror
dec
lahf
or
jno
xor
fidiv
inc
in
sbb
xchg
pop
arpl
jo
pop
add
and
rol
bound
pop
nop
mov
clc
cmp
fwait
add
fadd
jg
add
ins
(bad)
imul
jno
jmp
xchg
into
iret
push
mov
sti
retf
mov
cmps
and
add
or
dec
cmp
or
imul
adc
dec
loopne
xchg
std
pop
and
adc
inc
xchg
(bad)
cld
lds
call
mov
(bad)
xor
hlt
lea
and
std
inc
cwde
xor
outs
dec
mov
outs
push
mov
xchg
loopne
push
sbb
mov
push
or
add
lahf
jle
imul
pop
push
stos
sub
cmp
out
das
enter
pop
leave
pushf
dec
fbstp
or
out
cmp
mov
in
xchg
ret
dec
clc
mov
sub
xchg
mov
arpl
cmp
das
mov
ins
out
cmp
loope
xor
mov
aas
pop
mov
int
sbb
mov
mov
and
dec
call
sub
push
pop
push
mov
cmp
or
loopne
mov
popa
add
dec
xchg
push
cwde
movs
sti
mov
scas
dec
jno
ret
out
xchg
jge
repnz
fidiv
mov
cwde
std
mov
jg
popf
sbb
cmp
jmp
test
into
lock
and
inc
fs
ds
xchg
(bad)
ret
inc
pop
adc
test
in
int3
mov
lods
sub
push
aam
(bad)
mov
push
data16
psubq
add
mov
sub
fwait
cmp
aad
mov
ds
into
jo
inc
cs
mov
dec
(bad)
jb
ret
scas
test
push
mov
ds
enter
sub
scas
inc
mov
sbb
retf
mov
dec
nop
mov
dec
lods
push
loope
jo
pushf
push
call
(bad)
dec
mov
dec
adc
es
lods
(bad)
jle
jo
mov
cld
mov
ficom
dec
stos
(bad)
scas
in
inc
retf
push
add
xchg
sub
or
push
jb
(bad)
push
sbb
mov
push
cdq
pop
mov
pop
packuswb
cdq
je
fnstsw
push
push
je
xchg
dec
imul
add
sahf
mov
sti
ins
adc
stos
jnp
xchg
adc
push
xor
cmps
jb
mov
jns
and
cli
or
aas
jge
add
repz
fadd
dec
xlat
(bad)
cmp
sbb
pusha
push
fcmovb
xchg
or
mov
dec
sbb
lods
aaa
mov
in
lahf
xchg
cmps
xchg
out
inc
add
jge
and
and
enter
cmp
sub
ret
mov
repz
mov
jno
push
add
out
or
in
jp
(bad)
(bad)
rcl
cmc
mov
out
mov
xchg
and
ficomp
js
(bad)
mov
xor
js
outs
dec
pop
jle
in
xor
and
sub
stc
sbb
outs
sub
mov
jno
ror
cwde
bound
ret
inc
mov
int
enter
jnp
retf
out
jecxz
out
jbe
cmp
enter
cli
test
fcom
xchg
fstp
sbb
imul
aas
cmp
popa
fidiv
push
ja
(bad)
xor
jg
jb
mov
dec
daa
sbb
pushf
or
pop
nop
shr
push
stc
cmps
out
jne
xchg
jbe
mov
hlt
inc
std
in
add
adc
pop
cmps
les
push
in
(bad)
and
cmp
lods
inc
out
or
frstor
jge
xor
inc
and
rcr
ja
sub
dec
xchg
and
leave
mov
out
inc
xor
pop
cmps
dec
inc
dec
out
cmp
push
mov
test
pop
arpl
or
xor
sbb
ss
and
sbb
ja
fsub
jl
cmp
fisubr
push
sbb
(bad)
or
jmp
(bad)
fmul
outs
outs
out
pop
or
mov
xor
and
es
or
stos
mov
xchg
(bad)
es
les
sub
inc
mov
dec
in
cli
lds
retf
int
idiv
in
sub
push
(bad)
std
hlt
mov
or
cmp
xor
cmp
sahf
xor
push
dec
jp
xor
hlt
shl
sub
lock
icebp
and
push
pop
mov
enter
dec
lock
cmp
or
dec
mov
idiv
mov
xchg
ja
retf
xchg
or
and
jne
retf
ds
mov
icebp
inc
sub
cwde
pop
jbe
sbb
sti
jl
xchg
xchg
(bad)
in
lds
aad
in
cld
out
repz
add
xor
mov
jmp
xor
fild
pop
inc
xor
cmp
push
sbb
push
in
ins
fldenv
xchg
inc
gs
xchg
(bad)
jo
cmp
inc
inc
adc
and
in
sbb
stos
ss
mov
ds
sub
xor
nop
xchg
jo
sub
call
xchg
xchg
jge
cmps
sbb
adc
push
loope
sar
jae
jge
dec
out
push
fsqrt
(bad)
add
cmp
in
and
addr16
cli
repz
jno
aad
add
xor
outs
jmp
or
test
mov
pop
cmp
fstp
push
jne
push
aas
xor
xchg
sar
test
loope
cmps
in
arpl
test
clc
xor
sub
mov
xor
jne
ret
sub
mov
push
push
in
adc
xor
dec
xchg
sub
xlat
push
rcl
pop
in
mov
in
mov
ins
nop
push
mov
and
mov
ins
push
xor
xor
mov
add
dec
pop
mov
dec
xchg
add
mov
jmp
loop
shr
(bad)
rol
(bad)
jbe
fcom
test
sar
daa
jge
stc
pop
jns
cli
pop
in
sbb
je
sub
jmp
jle
xlat
mov
outs
mov
cmp
push
les
push
ins
jno
push
(bad)
mov
hlt
cmp
mov
in
mov
call
pushf
jmp
dec
xor
pusha
sub
push
add
test
addr16
jns
and
in
and
mov
sahf
int
cmps
ret
cld
jp
pop
cwde
lods
xor
mov
cmps
pop
push
push
fcomp
inc
push
xchg
cdq
retf
add
popf
sub
call
int3
ins
fild
sub
cmp
and
sub
pop
hlt
std
or
getsec
aad
les
mov
retf
jae
loope
mov
jb
rol
mov
pop
pop
mov
pop
int3
enter
xchg
(bad)
in
and
and
adc
test
in
shr
sbb
and
jmp
pop
mov
inc
lahf
inc
shr
or
nop
fadd
push
(bad)
(bad)
fadd
ficom
mov
das
js
in
pop
(bad)
sub
jbe
jp
pop
int
adc
jns
mov
lods
jo
pop
dec
fiadd
arpl
int
mov
xchg
pop
pop
xchg
mov
pop
fadd
mov
push
movs
aad
ret
jno
addr16
cs
add
enter
aam
xchg
cmps
xor
outs
pusha
and
jmp
sub
cmp
inc
xacquire
sbb
cmp
sub
es
std
add
test
xor
out
cmp
pushw
ror
cli
mov
out
in
xchg
cmc
out
jns
cmps
or
mov
add
push
call
dec
jb
cmps
mov
int3
(bad)
mov
mov
dec
dec
cmp
scas
inc
push
and
icebp
push
mov
cmp
int
pop
lea
out
jo
ficom
xchg
push
ret
clc
pusha
push
arpl
fnsave
push
nop
xor
mov
adc
test
inc
test
or
mov
adc
push
cmp
jmp
rcl
std
sub
xor
pop
aas
leave
push
dec
iret
test
fsub
pusha
jl
xchg
shl
inc
bnd
mov
mov
mov
dec
hlt
mov
inc
(bad)
push
push
cld
mov
xchg
cli
mov
sbb
dec
scas
ins
jno
shl
imul
jmp
dec
inc
shl
inc
mov
push
push
sub
pop
sahf
inc
add
mov
std
aad
das
and
jb
cmc
mov
cld
fnstenv
pop
inc
js
xchg
sub
dec
sahf
outs
inc
xchg
mov
enter
fwait
mov
pop
fdivr
mov
mov
(bad)
pop
leave
js
push
push
into
and
jl
jno
or
pop
push
lahf
dec
dec
and
shr
or
jae
mov
fistp
jge
pop
xlat
and
or
add
aad
ja
imul
mov
cmps
mov
mov
mov
xchg
repz
pop
sbb
jg
fsubr
or
clc
scas
xchg
popf
cmp
adc
cmps
and
jne
les
xor
mov
push
dec
cmps
cmp
out
dec
xchg
cmps
and
clc
jl
xchg
pop
adc
pop
sbb
pop
jno
and
push
add
(bad)
mov
mov
pop
jecxz
mov
lea
mov
div
test
pop
shl
sbb
bound
sbb
inc
sub
movs
xchg
inc
pop
adc
neg
sub
mov
scas
mov
sbb
test
rol
ins
sbb
popf
jnp
sub
je
retf
inc
pop
ins
fldcw
call
movs
addr16
pop
outs
sub
repnz
aam
sub
jne
ror
out
test
imul
push
xchg
in
je
(bad)
jecxz
or
inc
sub
pop
cld
and
adc
imul
xchg
movs
or
inc
cmp
jle
stos
cwde
cli
inc
xchg
rcr
xor
xchg
mov
jb
xchg
mov
in
push
push
or
mov
jne
shr
inc
mov
jmp
(bad)
inc
ins
loop
pop
and
adc
inc
and
jmp
xchg
lods
mov
dec
stos
sbb
out
adc
pop
cmc
fyl2xp1
lock
rcr
int3
and
jbe
(bad)
in
push
push
dec
rcl
jae
mov
pop
bound
adc
iret
mov
or
hlt
les
(bad)
fldenv
or
adc
xchg
adc
and
sar
ss
(bad)
add
das
cmps
xor
enter
cmps
dec
(bad)
(bad)
scas
sahf
xor
dec
(bad)
shl
xor
aad
imul
mov
out
xor
cmp
inc
or
push
repnz
pop
cwde
jns
mov
in
and
lods
adc
stos
xchg
int
sbb
or
jns
ins
repz
out
push
dec
add
adc
or
iret
mov
(bad)
inc
jo
lock
stos
mul
cmps
enter
dec
cdq
add
mov
popf
repnz
inc
rcr
sbb
sahf
test
mov
lock
je
and
sbb
jbe
dec
lahf
cmp
lea
lods
int
xchg
and
into
or
loopne
out
push
fsubrp
je
cdq
push
cld
adc
cmc
cmps
les
push
jo
in
aaa
leave
scas
sbb
or
test
jno
jnp
cmc
sar
inc
and
xor
push
xor
mov
mov
out
shr
add
adc
out
rcr
jl
jb
push
out
or
(bad)
mov
repz
les
jne
sbb
mov
int
fcomi
fsub
shr
fsub
js
aas
daa
mov
mov
retf
cmps
fst
mov
cld
mov
xchg
jns
into
lods
mov
cs
adc
dec
retf
and
inc
push
sbb
repz
retf
loope
push
scas
or
sbb
lock
into
fimul
addr16
or
push
mov
retf
out
jmp
sub
mov
sar
xor
adc
icebp
push
lods
out
sbb
mov
mov
test
cmps
mov
std
add
or
repnz
pop
sub
lea
sub
repnz
clc
push
aas
xor
(bad)
out
test
loope
out
data16
mov
cmps
loopne
mov
sbb
sub
or
lods
pop
int
loop
cli
mov
mov
pop
jmp
sbb
jp
xor
fadd
icebp
das
gs
fsubr
jge
out
stc
dec
dec
int3
inc
(bad)
mov
xchg
pusha
push
cmp
bound
(bad)
fs
lea
cmc
adc
pop
js
sbb
(bad)
mov
(bad)
fucom
inc
ss
scas
mov
jnp
fisttp
or
inc
shl
xchg
sub
or
hlt
cmc
shr
cdq
cdq
cmps
push
int
ja
shl
mov
cmp
and
adc
hlt
mov
mov
cmp
jle
and
fcompp
mov
fwait
dec
adc
xchg
mul
imul
add
loopne
push
cdq
hlt
dec
retf
jle
(bad)
pop
sbb
xchg
mov
jmp
arpl
inc
bnd
adc
aas
(bad)
or
mov
xchg
test
pop
mov
test
clc
pop
(bad)
(bad)
jp
sub
sti
ds
fnstsw
sub
pop
jae
or
mov
clc
sbb
jmp
call
add
outs
je
or
and
pop
bound
cmps
movs
sub
xchg
inc
je
sahf
outs
icebp
inc
inc
fsincos
stos
(bad)
or
imul
daa
cmp
(bad)
pushf
out
pop
or
xchg
jne
fnstcw
stos
pop
outs
jno
test
in
add
and
jns
int3
mov
sqrtps
mov
ins
xchg
repz
jb
adc
(bad)
push
add
cmp
gs
vmwrite
jmp
add
cwde
and
mov
(bad)
mov
(bad)
(bad)
aas
xchg
out
sub
outs
adc
pusha
rcr
and
dec
in
jnp
xchg
pop
mov
clc
mov
lock
mov
ret
push
fnsave
aaa
rcr
sub
mov
ret
adc
cmc
sahf
shl
pushf
xor
lahf
sub
aam
jmp
scas
retf
rol
mov
adc
mov
or
int
sub
pop
into
inc
adc
nop
(bad)
(bad)
cmp
inc
xor
add
dec
sub
xchg
dec
popf
dec
iret
pusha
fsubr
loope
pop
mov
das
lea
mov
mov
or
fldcw
fdivr
fisub
dec
jo
and
and
push
dec
nop
bound
sub
fild
dec
mov
mov
add
adc
loope
loope
mov
jns
xor
xchg
fisttp
ror
sub
outs
jb
xor
push
mov
jnp
aam
inc
enter
adc
pop
or
or
mov
not
ret
leave
adc
outs
sub
repnz
jnp
retf
test
fwait
xor
shl
mov
xor
sub
ins
retf
test
pop
test
and
push
sbb
push
mov
dec
mov
and
push
aad
dec
stos
fldcw
cmp
cld
inc
add
lods
jle
daa
mov
stos
and
addr16
push
dec
adc
test
mov
cmp
ss
pop
inc
ror
push
mul
and
push
mov
iret
mov
ja
mov
int
(bad)
inc
mov
rcr
pop
cmps
call
cvtdq2ps
(bad)
pop
sahf
popa
pop
bound
inc
es
add
sub
outs
mov
mov
pop
or
daa
sub
data16
cwde
ins
add
jno
add
jl
add
dec
cmps
xchg
in
pushf
inc
push
or
mov
or
or
cli
sub
por
pshufw
sbb
inc
mov
cmp
cs
mov
arpl
jno
dec
push
and
dec
and
jne
cmp
clc
sbb
mov
xchg
movs
out
push
cli
xor
xor
cmp
adc
aas
daa
mov
xchg
inc
mov
inc
jle
mov
pop
cwde
xchg
pop
in
sbb
add
leave
bnd
jmp
hlt
mov
test
jo
xorps
mov
jne
in
xor
cmps
fnclex
pop
fcomp
jne
les
xlat
pop
xchg
xor
int3
pushf
test
mov
(bad)
push
mov
ret
fcom
cmp
jae
popa
mov
lods
cmp
and
cmps
nop
cld
imul
imul
or
imul
adc
mov
cli
imul
(bad)
into
icebp
lods
cld
push
shr
std
jb
jne
fist
sti
movs
or
pop
imul
jmp
mov
sbb
movs
mov
cwde
idiv
out
and
add
icebp
loopne
call
or
pop
retf
leave
sub
inc
ds
call
ret
popa
mov
pop
aad
int
inc
inc
cmp
out
mov
cs
(bad)
xchg
out
xor
jl
add
cmp
add
icebp
mov
push
mov
out
scas
sbb
adc
xchg
adc
push
inc
loope
sbb
scas
outs
iret
daa
xor
rcr
call
jnp
mov
jne
mov
loopne
loopne
(bad)
aaa
mov
cwde
jmp
outs
jmp
(bad)
sbb
cmp
repz
push
call
mov
push
pop
stos
jo
mov
jnp
pop
cmp
xchg
mov
ror
enter
fisub
jge
sbb
scas
aaa
and
(bad)
shr
sbb
cmp
iret
mov
call
aas
mov
out
mov
push
(bad)
popf
cmp
ja
fiadd
cmp
inc
sub
xchg
scas
xchg
cmp
jg
aas
push
adc
add
es
xchg
inc
adc
or
mov
js
cs
rcl
cmps
gs
inc
pop
mov
jge
mov
xor
in
pop
les
xlat
push
repnz
stos
push
sbb
inc
movs
sbb
and
int3
cmp
mov
push
aas
fstp
out
leave
and
push
cmps
or
and
mov
mov
mov
pop
cmp
dec
pop
(bad)
sub
or
sbb
aaa
shr
xor
sti
mov
out
push
pop
aas
inc
adc
mov
aad
enter
div
fst
sbb
mov
sub
push
scas
mov
inc
rol
jmp
cli
sub
fmul
sbb
(bad)
pop
mov
scas
inc
sar
dec
jecxz
(bad)
and
push
clc
xor
movs
mov
idiv
pop
mov
ins
dec
aad
mov
push
lods
dec
and
pop
cmps
into
cmps
push
cld
jmp
sub
or
and
mov
loopne
mov
retf
xchg
mov
ins
and
push
or
rcr
shl
or
cdq
mov
mov
out
loopne
cmp
sub
or
and
and
fs
in
push
push
iret
mov
add
jmp
int
bt
dec
inc
or
mov
fist
jns
es
adc
mov
inc
cmp
sbb
repz
or
lea
xchg
sbb
fisttp
ds
mov
mov
and
out
popf
jg
and
dec
stc
aad
cmp
stos
inc
mov
ins
inc
sbb
rcr
je
repnz
jle
push
jbe
push
(bad)
fidiv
pop
rol
cmps
jnp
cmp
ss
mov
int
mov
imul
or
push
push
mov
push
add
fadd
dec
fisub
xor
or
adc
in
popa
sbb
mov
stos
mov
aad
xor
in
dec
pop
inc
push
les
stc
repnz
ffree
out
pusha
mov
push
sub
and
lahf
and
inc
bound
pop
xor
mov
ficomp
jecxz
push
dec
ja
mov
pop
mov
jecxz
push
movs
or
cli
fnsave
sub
xor
cmps
arpl
xor
cmps
inc
mov
mov
jmp
loopne
arpl
(bad)
out
adc
and
ss
add
jb
out
or
and
shl
inc
out
xchg
cmps
mov
in
je
mov
lds
mov
pop
add
out
push
mov
mov
pop
cld
aad
(bad)
fs
(bad)
push
xchg
fbstp
cwde
outs
jns
add
sub
das
sbb
mov
push
mov
push
shl
call
fist
test
imul
scas
mov
fnsave
popf
sbb
mov
shl
pop
ins
inc
cmp
xchg
pop
mov
add
mov
mov
mov
mov
js
pop
push
xchg
sahf
(bad)
mov
inc
pop
adc
inc
sar
lock
mov
cli
sbb
mov
stos
and
aaa
add
stos
cmc
or
clc
mov
push
dec
aas
add
add
scas
idiv
sub
popa
pop
pop
jne
inc
ret
stos
xor
test
add
int3
fs
fldenv
mov
out
mov
sub
sub
fnstcw
push
adc
sbb
sbb
(bad)
mov
fsub
dec
out
jge
jb
ss
ds
inc
push
outs
imul
cmps
pop
gs
icebp
retf
nop
(bad)
nop
cmp
and
aam
sub
push
pop
(bad)
push
mov
test
push
push
inc
pop
jle
xchg
xchg
stos
jns
inc
mov
inc
push
xchg
fsub
dec
cmp
dec
jmp
mov
cmp
xor
sub
cmp
mov
sbb
add
in
into
je
test
jo
sub
cmp
(bad)
hlt
or
jo
jp
ins
loop
push
out
out
fnstenv
push
add
out
xor
dec
das
jecxz
dec
inc
(bad)
pop
pop
push
sub
mov
mov
mov
mov
inc
cdq
jno
aaa
das
ins
lock
das
(bad)
or
or
jge
inc
mov
xor
sar
jae
or
cli
inc
or
cld
dec
jecxz
push
mov
mov
out
mov
icebp
lods
or
fcom
mov
(bad)
fdiv
popf
adc
push
int3
cmp
int
icebp
xor
or
lahf
in
push
push
ins
ret
jmp
inc
push
sub
cdq
ins
jl
fild
stos
(bad)
std
lods
pop
imul
popf
mov
adc
push
dec
xchg
dec
adc
lahf
add
outs
adc
or
or
sbb
scas
or
rol
and
icebp
xor
mov
gs
dec
test
das
inc
out
fsubr
pop
pop
arpl
arpl
icebp
add
sub
add
in
mov
xor
stos
lds
push
retf
dec
lahf
arpl
loope
jl
jg
fwait
das
jmp
(bad)
pop
sub
out
pusha
cld
out
xchg
ret
or
push
pop
aam
sub
das
jnp
cmc
repz
fwait
std
xor
ins
outs
test
(bad)
je
cmp
aad
cmp
fadd
jmp
push
xor
jp
sub
test
push
or
xchg
sbb
repz
test
mov
sub
or
and
mov
movs
test
and
out
cmp
neg
out
sub
xrelease
aam
rcr
cli
sbb
les
cmps
xor
scas
pop
outs
pop
mov
or
mov
adc
jns
icebp
pop
movs
scas
xor
inc
ror
shr
push
push
pop
lea
mov
ret
shr
gs
test
ror
inc
and
repz
add
into
xchg
jo
mov
xchg
jl
fstp
add
aam
add
xlat
daa
imul
scas
mov
mov
in
xor
push
jp
push
push
stos
pop
xchg
mov
ficomp
outs
ins
loop
push
sub
and
out
xchg
retf
mov
jp
inc
mov
pop
(bad)
mov
aad
sti
movs
add
mov
push
in
sub
adc
sti
mov
and
xchg
mov
fdivrp
xchg
(bad)
adc
lds
xor
pop
ins
add
dec
outs
xor
clc
iret
inc
add
mov
mov
hlt
fidiv
xor
cdq
and
sbb
push
inc
cmp
xchg
pop
add
dec
adc
mov
sub
mov
sti
and
ins
popa
clc
gs
aam
pop
xchg
push
dec
xchg
call
or
inc
push
mov
lds
push
push
dec
out
push
push
leave
jp
xlat
hlt
jp
and
cmp
jmp
out
push
imul
dec
mov
pop
hlt
sbb
mov
rol
icebp
fidiv
and
mov
mov
lods
sub
ret
inc
adc
mov
or
cld
or
test
ret
pop
add
jecxz
fwait
add
gs
les
jecxz
pop
push
mov
mov
cmc
ins
or
mov
pop
pop
jae
jle
push
pop
pop
dec
outs
lock
mov
and
cld
and
lods
sub
cmps
pushf
rcr
inc
cwde
mov
call
jmp
sahf
sti
fiadd
fdiv
aas
dec
leave
fs
cs
call
jmp
xchg
or
dec
push
ret
bound
lock
sbb
dec
push
xchg
xor
stos
mov
movs
pop
repz
adc
mov
xor
mov
fs
sub
pop
lods
push
inc
mov
movs
push
adc
loope
out
xor
or
lods
div
xchg
jmp
call
mov
inc
loopne
out
adc
hlt
retf
fidiv
cwde
fmul
ror
cli
movs
mov
mov
add
and
idiv
imul
outs
inc
inc
les
push
scas
mov
sahf
iret
lods
call
pop
mov
pop
sbb
lods
mov
int
nop
adc
pop
add
and
jo
and
repnz
dec
xchg
inc
das
inc
sbb
xchg
ret
pop
jecxz
dec
es
sub
cli
sub
sub
out
cli
xchg
into
xor
mov
int3
rcr
and
cli
inc
add
out
ins
pop
ja
pop
xchg
adc
aaa
lock
fcom
cmc
or
adc
call
cmp
or
and
(bad)
hlt
add
inc
cmp
ror
call
shl
push
and
daa
mov
push
inc
mov
cmps
sbb
cmp
sub
shr
lods
and
sar
mov
push
cmp
fld
or
cmp
aaa
add
inc
and
jl
mov
and
sub
or
mov
(bad)
in
int3
jle
xor
adc
lds
cmp
mov
mov
inc
in
or
je
inc
sti
popa
sbb
cmp
fwait
mov
pop
xchg
xor
add
std
pop
in
or
sub
add
daa
xchg
es
inc
je
push
dec
stos
out
sbb
add
aad
xchg
mov
or
imul
push
xchg
or
pop
mov
retf
sub
gs
add
out
(bad)
mov
mov
xor
mov
dec
and
in
xor
mov
xor
cdq
mov
and
xchg
xchg
mov
js
xchg
dec
nop
sbb
retf
push
pop
add
neg
pop
enter
in
mov
push
ins
ret
(bad)
int
mov
ss
push
clc
(bad)
mov
mov
xchg
scas
(bad)
add
lock
daa
sub
test
cld
inc
popa
fnstenv
retf
call
add
pop
in
fadd
in
xor
xor
icebp
repz
add
and
fmul
or
xor
fisubr
inc
or
loop
push
in
sbb
fimul
mov
and
mov
jmp
push
in
pop
mov
mov
dec
push
cmp
jb
repnz
pushf
pop
xor
(bad)
pop
mov
inc
(bad)
rcr
pop
sub
cmp
stos
xchg
cwde
(bad)
xor
or
(bad)
into
dec
jp
pop
push
sbb
aaa
ss
enter
mov
cmc
or
push
int3
xchg
push
jecxz
inc
push
fdiv
sub
cmc
arpl
dec
or
sbb
les
sbb
mov
ja
es
stos
jge
xor
aaa
mov
shl
sbb
retf
pop
movs
add
xor
dec
in
push
int3
pop
dec
mov
xchg
ss
adc
int
pop
(bad)
inc
out
xchg
in
stos
cdq
cmp
adc
out
pop
dec
dec
(bad)
mul
cmps
xchg
inc
(bad)
ret
adc
rol
imul
mov
fmulp
ror
scas
adc
sub
cmp
cmps
fidiv
call
xor
es
outs
mov
xchg
pop
mov
cmp
inc
xor
sbb
pop
cmps
push
cmp
(bad)
jno
lds
pusha
pop
fcom
jns
mov
sar
mov
dec
xor
xchg
cwde
inc
xchg
add
retf
cmp
icebp
jmp
retf
dec
popa
add
push
jbe
ss
leave
inc
ficomp
pop
fcmovnbe
mov
dec
mov
mov
xor
in
adc
int3
push
mov
sbb
rol
ficom
enter
pop
dec
adc
jg
pop
rcl
lock
pop
fild
aad
pusha
add
push
jb
pop
inc
pop
imul
pop
cmp
iret
lods
mov
xchg
sbb
gs
or
mov
outs
js
fsub
movs
sub
cmc
mov
cmp
ins
sub
frstor
mov
xchg
jg
int3
xor
adc
or
jle
pop
xchg
(bad)
fmul
cmp
add
in
and
addr16
jge
and
xor
mov
inc
or
pop
xchg
pop
jecxz
adc
ja
outs
dec
dec
dec
mov
repz
sahf
int
add
xchg
(bad)
fwait
shl
ins
mov
pop
mov
lahf
ins
pop
xor
icebp
sub
mov
xor
jno
outs
shl
xchg
mov
pop
int3
push
mov
data16
retf
popf
(bad)
jno
adc
ins
cmp
fldenv
pop
popf
adc
retf
jge
push
push
popf
into
cmp
cmp
test
(bad)
mov
xchg
mov
ficom
mov
test
dec
sub
stc
jnp
scas
add
mov
or
mov
ja
je
in
push
add
cmp
stc
adc
sub
aad
mul
pop
repz
test
mov
mov
lds
fs
xchg
js
pop
adc
in
fs
ror
push
dec
loopne
aas
cdq
pop
dec
shl
clc
ds
fs
jecxz
dec
pop
nop
xor
jle
or
adc
cs
sbb
mov
mov
fwait
dec
bound
repz
loopne
and
cmps
nop
test
jnp
mov
sub
femms
jmp
xchg
add
push
dec
ror
cmp
sub
mov
jns
clc
or
enter
fisub
sbb
adc
xchg
mov
and
ss
sbb
(bad)
loopne
mov
es
int3
jo
jnp
scas
and
loope
dec
pop
xor
nop
cmp
into
jg
jnp
aas
out
cmp
xchg
int
xor
xor
aas
dec
and
mov
xchg
xor
sbb
scas
(bad)
cmc
fimul
(bad)
sbb
or
jns
fcomip
les
in
iret
enter
frstor
sub
(bad)
hlt
ins
jo
mov
adc
in
adc
xor
mov
dec
mov
mov
sbb
and
(bad)
(bad)
ret
push
cs
dec
arpl
or
lods
or
sub
cmps
push
jge
pop
retf
inc
stc
dec
stos
pop
leave
out
mov
(bad)
pop
pusha
ss
cmps
int
cli
and
jbe
cmp
push
cdq
rcl
xor
inc
xor
push
xor
cwde
int
cmp
jb
mov
cmps
iret
jmp
daa
mov
rcl
mov
mov
repnz
jp
test
jns
mov
xchg
data16
xchg
lea
or
fnsave
xchg
daa
aaa
cld
xor
push
movs
and
aam
jp
xor
or
sub
es
shl
(bad)
out
enter
jp
ss
mov
cmp
(bad)
iret
shr
inc
out
jo
(bad)
mov
or
pushf
movs
sbb
out
ret
or
fstp
xchg
pop
mov
aad
(bad)
xlat
aam
leave
xchg
dec
mov
xchg
stos
adc
stos
cdq
outs
popa
xor
inc
int3
and
xchg
call
pop
cmc
call
pop
shr
dec
gs
adc
adc
inc
lods
mov
mov
adc
sbb
xchg
outs
imul
push
push
shr
ja
leave
xchg
or
mov
mov
daa
ins
das
das
push
repnz
dec
out
fld
mov
xchg
dec
aaa
pop
jge
inc
mov
fdiv
out
fld
jne
fs
or
out
mov
outs
sub
add
in
in
mov
loopne
sbb
das
mov
std
jle
jb
ror
sar
mov
test
push
or
sub
and
std
into
loopne
mov
test
movs
dec
stos
dec
stos
mov
xor
mov
inc
fisttp
out
icebp
xchg
and
pop
xchg
cmp
into
cmps
ret
rcr
cwde
mov
cmp
inc
sbb
imul
jmp
push
rcl
(bad)
inc
bound
adc
or
ficomp
enter
stc
out
fdiv
jbe
nop
mov
aas
bound
add
push
mov
sahf
push
in
inc
cmps
and
cli
jmp
cld
jl
jl
pop
push
pusha
mov
mov
and
mov
jnp
jg
scas
pop
mov
bswap
popf
es
cld
and
or
add
dec
stos
sub
xchg
repz
fild
stos
scas
push
mov
jnp
inc
popf
dec
sub
mov
or
int
and
xchg
jecxz
jl
stc
pop
(bad)
movs
xchg
add
jle
lock
scas
data16
and
div
ja
push
fcmovnbe
sub
aad
jo
jmp
mov
dec
inc
retf
jo
cmp
inc
retf
(bad)
scas
addr16
mov
and
inc
mov
sar
or
iret
push
popf
xchg
std
pop
cs
icebp
sub
add
mov
jle
dec
inc
mov
mov
repz
mov
or
jle
sbb
mov
mov
push
mov
dec
or
inc
jns
xchg
outs
loope
mov
push
mov
mov
int
and
outs
sub
std
lods
xchg
mov
dec
xor
xchg
(bad)
jnp
mov
imul
stos
bt
jb
add
mov
adc
out
(bad)
push
lods
dec
cs
cmp
mov
retf
test
sub
adc
test
repnz
or
jmp
std
mov
add
pop
and
mov
pop
sub
dec
cmp
adc
cmps
xor
push
adc
mov
xchg
jbe
push
and
loopne
idiv
imul
pop
jl
out
movs
ret
in
or
adc
cmc
ja
cmp
ucomiss
ds
hlt
out
outs
and
call
mov
jl
dec
ret
inc
cdq
scas
rcr
mov
cmp
or
xchg
call
inc
dec
sub
sbb
sahf
xchg
cwde
mov
(bad)
fstp
ins
and
xor
jecxz
mov
ins
add
pop
mov
imul
xchg
mov
pop
ds
(bad)
xchg
(bad)
sub
fild
mov
pop
push
xchg
fdivr
out
(bad)
ror
(bad)
ffreep
sar
repz
fild
in
sub
sbb
sub
push
scas
or
pop
rcl
pushf
pop
aam
mov
ret
popf
jno
sbb
fadd
cmp
icebp
xchg
pop
lock
push
pop
bound
xchg
xchg
lock
in
pop
push
test
cmp
je
xlat
das
cmp
das
neg
out
movs
cdq
fwait
sbb
dec
test
adc
out
mov
mov
ror
in
pop
push
inc
adc
xor
scas
or
xor
not
cmp
sar
add
jecxz
jbe
ret
add
jne
lods
loope
repz
jg
sub
dec
nop
mov
jns
cwde
and
mov
in
aas
cmp
fs
dec
inc
repnz
scas
add
sti
pop
pushf
cli
dec
jmp
pop
(bad)
stc
hlt
cmp
lock
dec
inc
scas
sub
mov
sub
imul
cdq
test
dec
mov
sub
shr
icebp
adc
in
jno
and
mov
xor
and
xor
mov
mov
sub
xor
loope
dec
in
out
(bad)
or
nop
mov
sub
pop
pop
test
aad
lock
xor
jns
sub
or
jl
sub
jmp
in
xchg
stos
xchg
sbb
add
dec
sub
pushf
add
jmp
pop
fldenv
ret
or
sub
jle
sbb
sar
in
bound
cmp
hlt
ss
(bad)
test
push
mov
scas
mov
stos
out
mov
and
cmp
retf
sbb
inc
or
pushf
inc
call
push
es
(bad)
cmp
pushw
push
ret
adc
cmp
xchg
js
(bad)
push
mov
sbb
xchg
sub
cld
popa
sar
out
cmp
xchg
test
xor
xchg
mov
pop
hlt
retf
dec
xor
shr
cmp
jae
movs
and
pop
or
inc
pop
clc
fld
mov
fstp
push
cdq
ret
jp
cmp
sar
mov
add
inc
test
jl
loop
or
mov
lahf
mov
mov
outs
pop
in
imul
repnz
retf
xlat
add
das
imul
jbe
xchg
sbb
movs
lahf
std
push
(bad)
bnd
sbb
dec
(bad)
push
adc
jne
dec
rol
push
sub
pop
xchg
ret
aad
mul
lods
adc
(bad)
mov
pushf
pop
loop
loope
test
mov
ror
retf
mov
in
dec
xchg
fstp
dec
test
pop
mov
in
and
retf
push
shr
int
push
out
pushf
mov
push
xchg
fdivr
cld
loope
ja
and
cmp
cmp
pop
xor
push
and
mov
(bad)
loop
lea
cs
call
adc
rcl
js
jnp
xor
in
das
mov
mov
mov
stos
jbe
mov
(bad)
rcl
or
add
jge
mov
sbb
xor
movs
mov
cmp
int
add
adc
adc
jo
jg
pop
adc
mov
clc
mov
mov
lods
pop
xchg
sti
pop
or
add
bnd
pop
mov
mov
xor
pop
paddb
mov
mov
xor
push
dec
mov
mov
cmps
xchg
and
enter
int3
jne
out
cmp
addr16
pop
dec
bound
cdq
and
dec
mov
ret
ins
jns
fsub
inc
movs
and
fs
xlat
pusha
rcl
cmp
das
fcmovnu
pop
sbb
or
sbb
mov
dec
and
cmps
xchg
or
xor
rcl
and
test
imul
jo
and
addr16
icebp
nop
pop
mov
sbb
aad
pop
jmp
test
mov
bound
xchg
cmp
je
pop
or
sar
xchg
fs
mov
cdq
and
dec
push
mov
adc
cmc
and
xor
xor
jmp
(bad)
pop
in
push
sub
daa
adc
inc
out
and
pop
jge
pusha
test
clc
or
(bad)
push
pop
pop
lods
enter
iret
or
push
jl
xchg
das
outs
jnp
adc
out
cld
loopne
retf
fstp
cdq
sub
pop
(bad)
div
sbb
dec
push
sbb
pop
das
mov
fsub
xor
xchg
xchg
ja
push
or
pop
mov
int3
movs
mov
add
in
movs
sub
and
lds
aam
out
cmp
and
dec
ss
dec
(bad)
call
call
cdq
inc
popf
ret
xor
xor
pop
mov
xlat
les
mov
scas
xchg
int
add
sbb
mov
adc
pop
scas
xor
add
sahf
mov
mov
adc
sar
or
icebp
push
adc
ins
adc
add
mov
jp
scas
mov
clc
sbb
ins
ja
je
int
fadd
pushf
fsubr
mov
cwde
in
push
stos
dec
imul
das
pop
jo
mov
mov
js
fmul
iret
lock
mov
(bad)
jg
(bad)
or
ja
sbb
das
cmp
sub
mov
pusha
pop
jecxz
arpl
inc
inc
das
sbb
xchg
dec
push
inc
test
iret
(bad)
jmp
jbe
in
iret
dec
movs
xchg
retf
inc
test
js
jns
ins
push
xor
xor
ret
pushf
dec
adc
pop
xchg
or
into
popf
scas
(bad)
mov
sahf
adc
ror
es
rol
cmp
int
jnp
imul
mov
sbb
lahf
push
lea
out
sub
jp
sub
vmwrite
into
sbb
push
adc
(bad)
out
pop
dec
sbb
or
cld
mov
imul
test
xchg
arpl
fwait
cmc
add
pop
or
or
xchg
dec
mov
int3
outs
xlat
(bad)
mov
in
mov
aaa
pop
stc
mov
dec
adc
xchg
lods
push
retf
fwait
in
fisttp
arpl
cmp
call
loopne
ret
test
pop
jp
mov
les
sbb
sbb
mov
jmp
jmp
xchg
cmp
and
icebp
add
xor
stos
fld
adc
mov
cwde
shr
inc
push
mov
data16
xchg
and
sbb
inc
retf
jmp
fsubr
adc
mov
pop
mov
in
fdivr
lods
mov
icebp
and
imul
outs
cmps
add
xor
dec
xchg
sub
xchg
add
and
cmp
push
sub
sti
cmp
stos
pop
not
jge
pop
push
retf
pop
mov
adc
pop
fstp
sbb
dec
or
cwde
in
push
mov
out
ror
movs
sbb
inc
cld
outs
pop
lods
xchg
xchg
and
ret
mov
mov
shl
cld
inc
adc
and
sub
dec
mov
mov
loope
or
xor
or
pusha
movs
jae
lds
loopne
or
popf
xchg
push
dec
jbe
scas
add
and
lahf
add
fistp
mov
or
and
jae
xchg
movs
mov
sub
cdq
dec
leave
pushf
pushf
cmps
rol
repnz
imul
test
sbb
test
pop
or
jns
popa
out
sub
sub
mov
pusha
dec
push
repnz
or
loop
add
mov
add
call
mov
cmp
loop
out
pop
dec
shr
jmp
pop
push
mov
pusha
outs
scas
xlat
dec
push
shl
xlat
stos
jo
popa
or
neg
mov
pop
mov
cmp
inc
cmp
hlt
jle
dec
sub
dec
in
rol
lock
sbb
movs
push
mov
inc
sbb
and
mov
push
int3
cmp
hlt
pop
rcl
ins
or
and
dec
mov
and
aad
mov
mov
xor
fnstsw
sbb
ret
cs
mov
dec
mov
(bad)
int3
ins
mov
call
jmp
xchg
je
(bad)
(bad)
cmp
or
sub
mov
push
popf
adc
out
adc
add
scas
add
shr
pop
add
clc
test
jecxz
push
repz
popa
stos
dec
mov
cmc
scas
mov
push
loope
and
adc
fsubr
shl
pop
inc
(bad)
and
mov
add
das
xlat
xchg
mov
pop
cmp
sbb
popa
test
add
xchg
rol
adc
dec
scas
fwait
jle
fild
xor
mov
pop
(bad)
jno
and
xlat
psubusb
adc
loop
fwait
push
jge
add
and
dec
nop
mov
adc
cmp
mov
jno
push
iret
mov
sar
sbb
or
stos
pushf
addr16
int
outs
sbb
rcl
int
pop
inc
mov
(bad)
pop
fprem1
cmp
mov
add
inc
and
push
sbb
inc
push
jle
mov
push
mov
out
ss
xchg
fcomp
sbb
test
xor
xchg
rol
or
cli
(bad)
pop
ins
outs
in
add
adc
pop
loopne
jecxz
enter
xchg
mov
jle
xchg
adc
xchg
mov
mov
sti
mov
jmp
cmp
mul
sbb
dec
add
lods
sub
imul
and
test
sar
(bad)
call
dec
push
sub
adc
stos
int3
rcr
fistp
adc
mov
push
mov
mov
popa
adc
and
xchg
mov
call
xor
adc
lea
repz
dec
hlt
jmp
jns
daa
sbb
jmp
out
inc
ficomp
(bad)
pushf
jnp
and
xchg
test
sub
sar
adc
inc
test
and
mov
retf
mov
mul
aam
jns
ja
jb
ret
add
fwait
xor
add
inc
mov
mov
inc
in
inc
mov
ja
push
dec
sbb
or
in
fldenv
push
je
mov
xor
add
mov
mov
cmp
xchg
ficom
jecxz
adc
mov
xor
xchg
jle
jne
test
inc
push
cmp
jecxz
popf
add
cmps
jmp
and
push
xlat
into
arpl
and
pop
ret
xlat
imul
cmps
add
mov
dec
jae
pop
inc
sub
dec
and
or
loopne
out
leave
jge
int3
mov
dec
stos
pop
mov
mov
dec
cmps
and
adc
push
mov
xor
outs
mov
std
rcl
and
adc
mov
mov
fpatan
xchg
out
pmaxsw
inc
es
shl
fcos
shl
cwde
ins
inc
inc
outs
pop
jle
js
out
sub
adc
fsub
lods
push
repnz
fst
mov
les
(bad)
mov
cmp
cmps
or
jmp
pop
fwait
into
cmp
mov
cmps
or
and
cli
sbb
xchg
mov
sub
inc
adc
addr16
sub
leave
inc
call
jae
cmp
add
inc
push
xlat
mov
repnz
sub
mov
arpl
and
mov
jb
popa
xchg
int3
mov
xor
push
pcmpgtd
pop
movs
das
push
push
cli
jg
sar
add
clc
lea
push
imul
stc
pop
add
call
sbb
ins
pop
mov
cli
sti
div
mov
test
and
ret
adc
jg
adc
mov
dec
xchg
aaa
sbb
jb
jb
mov
adc
ins
test
add
ret
arpl
loopne
pop
jb
lahf
pop
popa
xrelease
cmp
push
(bad)
and
sub
push
mov
mov
fcmovbe
rcl
inc
bnd
sti
ss
fld
jmp
add
in
inc
lods
push
adc
adc
loop
fcmovnb
or
sbb
stos
shr
push
nop
push
cdq
test
push
inc
outs
int3
mov
mov
adc
int3
iret
add
inc
jo
push
hlt
inc
jle
pop
jle
out
clc
jo
imul
jb
add
pop
je
add
in
inc
cmp
(bad)
sub
cmp
hlt
dec
cmp
arpl
sub
push
(bad)
(bad)
push
xchg
mov
cmp
sbb
inc
sub
repz
sbb
xchg
mov
mov
icebp
and
mov
int
int
aas
jmp
xchg
cmp
jbe
push
push
cmp
jle
cmp
or
out
cmp
inc
xchg
add
adc
cmp
jns
mov
pop
cmp
pusha
(bad)
call
dec
inc
ret
jle
ret
out
xchg
sbb
fwait
into
(bad)
dec
pop
push
xchg
call
xchg
aaa
cmps
imul
lods
push
mov
mov
jno
pushf
mov
mov
add
pop
and
call
add
sbb
cs
js
shr
cmp
retf
xlat
arpl
fldenv
push
iret
int
inc
add
sahf
popa
mov
clc
adc
pushf
mov
imul
ret
fdiv
in
push
pushf
pop
push
inc
repz
lods
xor
int
push
xchg
icebp
arpl
xchg
mov
xor
fwait
add
cmp
push
adc
add
cmc
add
(bad)
js
(bad)
fisub
(bad)
neg
xchg
cmc
push
call
dec
adc
test
call
jno
inc
xchg
mov
popf
xor
(bad)
(bad)
push
imul
lahf
adc
cdq
adc
jecxz
jo
mov
mov
cmps
xor
out
mov
(bad)
fst
pop
cmp
xor
push
test
jnp
sqrtps
(bad)
and
sbb
xor
add
xor
ins
xchg
xchg
repnz
movs
loope
or
xchg
adc
rcr
add
out
int3
bound
(bad)
shl
push
mov
xor
sbb
movs
xor
jmp
xchg
(bad)
jnp
js
inc
out
xchg
adc
mov
add
dec
add
mov
sbb
mov
mov
xor
(bad)
jg
dec
mov
and
or
jecxz
rol
dec
and
or
ltr
loopne
xchg
(bad)
int
cld
push
pusha
sub
iret
and
neg
jg
cmc
inc
jmp
mov
add
fcmovnbe
loope
ror
int3
xchg
rcl
bound
ins
imul
(bad)
pop
scas
xchg
dec
jle
sub
jno
pop
leave
ret
rol
xchg
or
scas
lea
jo
jno
cmp
xor
push
cmp
popf
test
pop
sbb
cs
sub
loopne
arpl
push
and
mov
(bad)
imul
shl
scas
(bad)
stos
push
outs
pop
sbb
mov
lea
into
jno
(bad)
push
fidiv
scas
sbb
jge
ins
repnz
pop
repnz
hlt
les
outs
outs
pop
and
cli
fmul
and
in
jbe
pop
aam
cmp
push
mov
push
je
je
adc
inc
mov
add
sub
stc
dec
cmp
fist
push
pushf
in
mov
out
mov
jb
push
mov
(bad)
loop
or
mov
fwait
jmp
out
mov
outs
push
lods
mov
imul
mov
lahf
(bad)
sahf
pop
dec
fisubr
cmp
jmp
or
fcomp
adc
add
adc
call
cmp
pop
pop
lahf
mov
stc
xchg
fdivr
mov
imul
dec
inc
bound
stos
dec
rcl
inc
call
cmps
push
(bad)
lock
mov
inc
nop
int
movs
xor
jg
push
(bad)
add
mov
pop
cmp
fiadd
loop
cwde
icebp
sbb
or
or
cmp
jae
xor
jecxz
sbb
inc
fcmove
movs
adc
(bad)
cmps
data16
inc
test
mov
sub
or
inc
add
add
adc
fild
mov
ficomp
xlat
(bad)
js
stos
xor
test
sbb
mov
rol
or
xchg
ins
and
repnz
cwde
out
xchg
xchg
adc
fincstp
scas
iret
mov
push
add
lea
jbe
stos
xchg
sub
les
arpl
repnz
mov
nop
or
add
fimul
mov
les
ror
cdq
test
(bad)
mov
cmp
inc
out
outs
and
ror
adc
and
ja
pop
sbb
xor
push
xor
test
add
push
hlt
xchg
dec
fcmove
ja
in
xchg
and
mov
or
mov
dec
imul
popf
dec
clc
xlat
xchg
mov
imul
loopne
lods
ss
push
not
adc
inc
es
test
xchg
push
and
adc
jge
jno
int
fstp
cmp
mov
mov
cmp
in
gs
ficom
adc
push
cmp
inc
(bad)
dec
cmp
dec
push
jl
cmp
pop
push
push
mov
xchg
or
ins
mov
repnz
xor
add
aam
imul
xchg
sahf
pop
vmovaps
retf
out
(bad)
and
add
popa
(bad)
cmp
and
stos
push
sub
mov
cs
xor
test
ret
rcl
pop
loop
rol
fs
in
mov
es
add
push
mov
xor
push
push
xchg
(bad)
push
sbb
cmp
inc
sbb
and
hlt
mul
(bad)
into
shl
xchg
or
mov
cmp
popa
les
push
loopne
mov
push
or
leave
add
xchg
xchg
retf
lahf
das
jb
nop
repz
(bad)
pop
loope
inc
mov
in
gs
aaa
or
dec
dec
in
jns
xchg
in
dec
dec
or
movs
out
sbb
cmps
xor
mov
push
dec
xor
adc
fadd
cli
dec
mov
mov
inc
outs
bnd
aas
inc
sti
mov
stc
mov
cld
fwait
pop
mov
mov
or
aas
and
cli
fs
push
push
mov
sbb
test
mov
xchg
jnp
pop
mov
jle
jne
inc
ficomp
(bad)
into
sub
das
push
dec
fs
push
leave
add
jne
jnp
jg
shl
jp
daa
sub
xchg
sbb
lods
sti
or
ss
xchg
dec
addr16
mov
aaa
dec
cmc
movs
rcr
mov
dec
js
mov
jmp
mov
pushf
pop
inc
ret
(bad)
vpmacssww
cmp
jno
mov
and
mov
enter
dec
(bad)
cmp
pop
sub
bound
in
repz
xor
lods
jb
sub
arpl
add
pop
les
jg
jmp
add
sbb
cmp
xchg
dec
push
ins
pop
std
imul
mov
or
loopne
adc
adc
les
test
fimul
sbb
or
add
aas
mov
cmp
test
out
scas
or
jne
sub
aaa
retf
pushf
(bad)
mov
lahf
daa
pop
adc
pop
xchg
in
push
in
je
jb
xchg
ret
fadd
add
push
int3
cmp
(bad)
pop
pop
clc
sbb
mov
test
mov
xchg
xlat
mov
xor
mov
fsub
sbb
das
lods
dec
sar
cmp
jecxz
ins
mov
lds
aad
jns
call
popf
mov
lods
jecxz
push
mov
(bad)
not
push
fisttp
pop
dec
repnz
sub
mov
retf
jg
cmp
xor
data16
cs
out
lds
loopne
mov
data16
xor
fdiv
sbb
cld
xchg
pop
retf
mov
sub
cmp
ins
in
scas
cmp
push
(bad)
ins
and
add
mov
jbe
and
jns
repz
pop
out
scas
shl
rcl
mov
(bad)
and
(bad)
loop
js
cmp
dec
scas
neg
out
rcl
sbb
mov
ret
mov
jp
add
out
test
mov
pop
loopne
(bad)
inc
les
xor
loopne
scas
mov
lds
out
enter
movs
das
sub
mov
ins
stos
stos
cld
in
mov
mov
les
js
push
cmp
inc
dec
into
inc
jnp
sti
xor
pop
lds
jl
mov
dec
imul
sub
div
or
add
inc
or
mov
into
call
xor
in
pusha
pop
or
pop
sti
xor
hlt
popf
fnstsw
cmp
sbb
pop
adc
test
retf
adc
mov
int
mov
inc
retf
test
mov
fs
cmc
mov
call
bound
mov
inc
in
xchg
enter
outs
xor
mov
dec
mov
lods
(bad)
leave
ror
push
inc
dec
jg
or
cld
aas
mov
bound
mov
outs
or
push
xor
sbb
scas
adc
stos
sub
div
fs
inc
sbb
xchg
mov
mov
mov
push
xor
int3
cmp
cmp
push
rcl
retf
jle
stc
lahf
adc
shufps
inc
movs
mov
pop
addr16
scas
mov
stos
jno
and
lahf
jns
clc
pusha
xchg
mov
in
inc
cld
ins
outs
ret
mov
loope
neg
pop
cwde
inc
jle
sub
adc
push
ret
lods
lea
lods
cld
pop
pop
cwde
and
inc
push
das
pop
gs
ss
fimul
inc
imul
popf
xchg
ficomp
dec
sbb
popa
push
pop
or
ins
push
(bad)
jle
shl
sbb
pop
arpl
inc
iret
mov
cmps
add
or
pop
mov
xlat
and
mov
mov
(bad)
jmp
push
jecxz
sbb
xchg
jp
leave
push
icebp
into
jb
repnz
or
outs
mov
or
icebp
mov
cmps
mov
xor
pop
retf
push
mov
sbb
retf
movs
xor
data16
aaa
aaa
sbb
xor
in
icebp
push
repnz
xor
xor
push
retf
shl
push
fdivrp
xchg
push
pop
dec
adc
inc
push
enter
cmps
mov
inc
cmps
mov
ins
and
xchg
pop
dec
cwde
fiadd
loope
push
mov
mov
sbb
sbb
arpl
es
inc
jg
out
dec
(bad)
(bad)
call
fst
push
les
push
mov
pop
jp
xchg
jae
(bad)
pop
movs
jg
pop
in
push
sub
test
loope
ss
xor
dec
cmps
push
fucomi
pusha
xchg
mov
test
and
and
jg
inc
movs
mov
push
push
mov
dec
fcmove
jmp
stc
ror
lea
loope
and
pop
xor
and
push
mov
and
nop
cwde
lahf
sbb
xlat
or
mov
js
neg
je
je
aam
jae
stc
cli
(bad)
or
imul
outs
cmp
addr16
cwde
ret
dec
(bad)
mov
arpl
repz
fdiv
fild
mov
jae
add
jle
add
fistp
pushf
inc
mov
xor
xlat
or
xor
call
mov
mov
pop
push
add
push
pop
push
dec
ja
pop
(bad)
xor
loope
push
(bad)
cmp
mov
(bad)
and
mov
add
dec
and
ret
std
add
loopne
pushf
stos
mov
add
in
xchg
mov
pusha
pushf
out
loope
cmp
icebp
(bad)
(bad)
mov
int3
sti
mov
adc
or
and
call
retf
pop
ins
mov
cwde
push
push
call
mov
adc
sub
pop
ficom
and
or
xchg
int
mov
scas
push
or
inc
cmp
sti
clc
das
iret
mov
inc
js
jae
jl
fisttp
fwait
pop
les
call
nop
xchg
inc
jg
push
jno
sbb
xchg
repz
(bad)
fisttp
adc
xor
data16
dec
xor
pop
adc
test
jp
xchg
pop
sbb
scas
test
push
addr16
scas
pop
or
movs
and
sbb
std
sub
aad
stos
mov
jl
fwait
or
sbb
leave
add
movs
js
call
inc
dec
jne
shl
cmp
imul
sbb
mov
jmp
outs
into
aaa
and
mov
jle
mov
or
lahf
mov
pop
(bad)
sub
imul
cld
inc
sar
leave
adc
xchg
sbb
test
pop
ret
mov
and
pop
jnp
mov
mov
int
and
xchg
sbb
imul
mov
sub
pop
fcomi
repnz
and
mov
int3
adc
loop
call
pop
dec
add
out
and
mov
xor
add
addr16
add
repz
(bad)
dec
jbe
pop
lea
and
loop
cmp
pop
scas
jmp
cmp
mov
or
shl
inc
mov
idiv
outs
ds
xor
in
lods
and
xlat
dec
nop
in
push
mov
lahf
jae
scas
imul
push
ds
ins
(bad)
sub
mov
loop
adc
mov
inc
mov
mov
push
sbb
not
loop
shl
xchg
stc
mov
cmp
dec
loope
jmp
test
xchg
cmp
xlat
fstp
js
or
inc
leave
push
in
jmp
add
pop
jb
scas
lods
xor
cmps
rcl
add
jl
lods
popa
mov
mov
ret
adc
fbld
iret
icebp
xor
xor
mov
jo
fnstenv
leave
or
rcl
push
popf
pop
xor
dec
pop
inc
leave
push
adc
adc
dec
inc
dec
jp
xor
push
mov
retf
pop
mov
mov
mov
(bad)
or
aaa
jl
ds
xchg
dec
test
sahf
mov
sub
cld
push
jp
sub
inc
adc
xchg
jmp
cmps
and
xlat
hlt
dec
sub
loop
sbb
ja
mov
mov
test
(bad)
sar
std
jno
mov
xor
mov
push
add
mov
jbe
adc
xor
mov
add
adc
jne
sti
sbb
dec
in
sbb
jge
and
test
push
inc
(bad)
dec
stos
out
stos
into
bound
jg
inc
push
leave
or
ret
fnstenv
ret
and
cwde
dec
repz
xchg
rol
fcomp
(bad)
aam
mov
cmp
cld
pop
iret
and
sbb
or
sub
imul
or
imul
inc
and
pop
inc
ret
mov
sbb
add
cmp
xor
lods
je
cmp
out
loope
inc
push
mov
call
xchg
cmc
mov
retf
pushf
loopne
jl
call
mov
sahf
fild
adc
inc
sahf
stc
dec
shr
pop
inc
(bad)
jle
sbb
jle
add
pop
xchg
pop
pusha
cmp
xchg
or
sub
cwde
in
jmp
push
jb
push
bound
(bad)
mov
xlat
mov
mov
cmp
(bad)
and
inc
pop
fisub
pop
inc
das
mov
sbb
or
jne
or
out
cli
sub
retf
(bad)
fnstenv
xchg
(bad)
ror
xor
inc
jmp
(bad)
js
aaa
ds
jnp
outs
sahf
pop
jg
(bad)
fs
int3
cmps
pop
leave
inc
shr
out
sub
cmp
addr16
xor
lea
jmp
mov
mov
icebp
daa
arpl
and
nop
popa
fdivr
lea
test
bound
and
repnz
iret
jl
mov
add
outs
clc
loope
sbb
jo
scas
pop
or
lea
push
aas
gs
xchg
mov
dec
imul
aas
cmpneqps
mov
in
ins
pop
out
add
sub
inc
sub
clc
jmp
repz
ins
test
dec
call
push
inc
sbb
jmp
and
dec
xchg
fbld
dec
pop
sub
mov
fld
mov
adc
lods
nop
mov
add
add
icebp
mov
lds
push
fisubr
cmp
stc
lea
xor
push
cmp
cmp
push
div
xchg
test
mov
(bad)
cmp
in
je
lea
ins
imul
int
push
fdivr
sbb
aam
ret
add
add
ret
inc
call
lods
nop
sahf
out
(bad)
mov
es
push
stos
adc
or
pop
(bad)
mov
cmp
dec
pop
mov
and
jne
outs
jmp
cwde
jmp
jnp
mov
sbb
mov
xor
mov
inc
sub
(bad)
jno
cwde
frstor
and
mov
repnz
jne
sbb
and
jl
push
push
les
popf
mov
aas
fs
mov
cmps
in
jns
xlat
sahf
leave
je
add
xchg
xor
bound
mov
lahf
pop
jne
add
jmp
jle
xor
loop
sbb
cld
fs
sbb
fldenv
inc
aas
sbb
xchg
mov
mov
push
or
test
inc
(bad)
adc
stos
cmp
lahf
sti
das
lods
xor
pusha
dec
add
add
jns
xor
inc
out
add
(bad)
rol
(bad)
scas
addr16
pop
popf
or
cmps
push
jb
retf
aam
(bad)
push
mov
cmc
push
jl
sbb
or
test
xchg
out
dec
mov
mov
jmp
nop
xchg
sbb
cli
inc
sub
jns
mov
jo
cmps
mov
sbb
sti
xchg
stos
stc
clc
mov
fdiv
cld
retf
push
or
add
xchg
and
std
dec
cmp
daa
push
ins
push
xor
and
hlt
pop
push
push
in
mov
imul
ss
leave
dec
and
push
test
xchg
shl
and
jmp
mov
js
jmp
ds
pop
rcr
sub
outs
dec
pop
push
daa
jae
xlat
daa
xor
idiv
jecxz
mov
ss
in
xchg
loope
xchg
or
xor
outs
inc
ror
stc
mov
stos
(bad)
movs
cli
jb
mov
mov
stc
mov
lods
sbb
xchg
ret
(bad)
jnp
sbb
dec
cmp
fwait
push
lods
dec
out
cmp
cmp
inc
sti
dec
rol
call
inc
(bad)
test
not
fidivr
add
push
and
xchg
lahf
daa
(bad)
fisttp
fnsetpm(287
loopne
fs
sbb
daa
cmp
sub
push
lods
iret
aaa
add
xor
std
bound
mov
lahf
stos
ret
xor
mov
cmps
jge
pushf
int3
pop
aam
mov
push
std
mov
push
pop
dec
outs
sbb
std
cmps
and
cld
cwde
pop
mov
sub
sub
cmp
xchg
cmp
fnsave
call
pusha
imul
xlat
vmovsd
(bad)
fiadd
jp
retf
adc
pop
xor
or
ja
mov
popa
dec
xor
mov
xchg
xchg
cs
or
cmp
xchg
push
sub
mov
lea
or
neg
fisubr
int
fmul
mov
es
mov
dec
cmp
das
scas
adc
js
test
imul
xchg
adc
cmp
ins
mov
xchg
xlat
aaa
mov
jno
push
push
stc
ja
xchg
mov
fild
mov
xchg
push
push
adc
sbb
addr16
push
inc
push
ret
mov
mov
cdq
or
retf
mov
add
xor
adc
mov
mov
push
cmp
push
and
add
out
xchg
inc
imul
xor
ret
push
imul
cmp
xchg
movs
call
jp
sbb
dec
pop
fadd
cmp
jge
mov
pop
daa
fiadd
sub
aaa
rcr
rcr
and
popf
sub
and
jne
xchg
mov
lea
xchg
adc
ror
or
xor
in
popf
neg
jmp
jecxz
das
adc
inc
ds
fist
lds
and
mov
in
xor
mov
fnstenv
cmp
(bad)
mov
shl
xor
es
or
aad
faddp
repnz
mov
std
cmps
outs
loope
xchg
push
mov
xchg
out
adc
and
bound
xchg
loop
addr16
aas
cmps
(bad)
dec
idiv
hlt
or
bound
dec
mov
sar
or
xor
(bad)
and
call
imul
ret
cmc
jb
in
fstp
stos
leave
xchg
xchg
xchg
jp
xchg
sbb
and
and
mov
xor
sub
lahf
pop
add
test
sub
gs
jne
jb
jbe
dec
retf
dec
jnp
test
and
fwait
aaa
or
adc
ret
in
xor
shr
enter
mov
cmp
cmp
outs
gs
ror
fld
fisubr
bound
fnstenv
pop
jmp
or
addr16
inc
mov
aaa
xchg
inc
(bad)
fidivr
push
(bad)
mov
pop
(bad)
lods
and
(bad)
jb
push
xor
movs
push
adc
dec
mov
lds
into
inc
ins
jne
add
fstp
(bad)
xor
retf
xchg
ss
mov
add
test
in
mov
xlat
ret
mov
cmc
cmp
(bad)
mov
mov
nop
cmp
jmp
inc
shl
retf
(bad)
mov
mov
(bad)
push
into
push
adc
std
imul
pop
fstp
jb
or
mov
in
rol
cld
in
push
add
jge
enter
loop
out
or
sar
stc
mov
mov
ror
loope
rol
push
fld
dec
mov
jmp
call
rcr
pop
push
add
nop
mov
push
push
adc
jmp
test
mov
fcmovu
test
stc
cdq
in
stc
inc
int
xor
fs
push
inc
outs
jmp
push
mov
mov
xor
scas
xor
pop
arpl
rol
push
ror
add
cli
push
sub
adc
in
in
loop
pop
es
adc
ja
imul
movs
(bad)
adc
cmc
scas
inc
pusha
or
(bad)
icebp
xchg
mov
call
aad
push
ror
je
outs
lods
fs
test
mov
xchg
adc
loopne
mov
pop
xor
arpl
cmp
test
pop
fmul
jb
(bad)
dec
xor
stc
push
popa
aaa
fld
retf
test
dec
test
popa
cmps
jbe
outs
stos
sub
cld
mov
cmp
push
xchg
and
mov
stos
xchg
jge
lods
sbb
(bad)
cmp
mov
ins
repnz
add
enter
test
sbb
sbb
bound
and
je
aad
mov
mov
(bad)
mov
mov
and
xchg
shr
imul
aaa
cdq
xchg
jmp
out
jnp
pop
jbe
clc
ret
lock
ffreep
shr
fist
push
movs
or
test
cmp
sub
jmp
sub
jle
push
cmp
or
pop
(bad)
jmp
sahf
ficom
jl
outs
sub
ret
cmps
cmp
dec
rol
int3
scas
mov
mov
bnd
xor
dec
xrelease
ror
xor
fmul
mov
dec
push
dec
cmp
or
hlt
jnp
push
mov
jnp
jge
push
jl
mov
dec
pop
fwait
push
(bad)
xchg
xor
std
clc
jnp
(bad)
ds
xchg
addr16
and
adc
xor
(bad)
pop
out
mov
ins
les
pusha
popa
sbb
mov
xchg
adc
in
jge
int
mov
xor
and
fldenv
pop
push
lea
and
repz
pop
adc
push
and
(bad)
clc
in
(bad)
fistp
lea
sub
cmp
sahf
cld
stos
fdiv
xor
add
xchg
and
(bad)
das
daa
jl
xchg
push
ins
jmp
call
(bad)
jns
pop
jno
push
mov
mov
cmp
arpl
jnp
je
pop
gs
test
sahf
add
cmc
aaa
shr
fmulp
cmp
outs
sbb
mov
mov
movs
jmp
xchg
je
call
xchg
add
mov
movs
cs
(bad)
lods
sbb
jbe
cmp
nop
mov
pop
mov
(bad)
xor
in
sub
in
fs
clc
popa
sti
int3
fsub
movs
test
lea
je
popf
fld
add
inc
push
pop
repz
sar
ret
call
pop
pusha
sub
xor
sbb
mov
lods
and
pusha
sub
in
xchg
xor
lea
je
sub
xor
fnstenv
inc
sar
in
pop
ss
xchg
push
call
inc
mov
hlt
mov
xor
outs
adc
jg
sbb
leave
or
in
in
fwait
jo
ror
es
test
sub
aaa
or
inc
jns
ins
ret
mov
inc
jge
xchg
adc
data16
xchg
xor
call
pop
mov
or
movs
sub
fimul
(bad)
call
sti
ror
test
sahf
mov
and
mov
mov
dec
div
pop
adc
cmp
xor
mov
add
and
retf
xchg
cmp
out
clc
mov
xchg
sub
add
cmps
imul
xchg
in
xchg
loopne
repz
mov
pushf
pop
sbb
pop
cdq
leave
push
icebp
cmps
xchg
mov
jae
and
data16
lahf
(bad)
fnsave
lds
mov
adc
hlt
ja
inc
movs
retf
xor
jmp
pop
add
add
pop
mov
xchg
push
pushf
movs
push
mov
push
neg
or
mov
pop
jmp
in
dec
pop
or
mov
adc
dec
out
jno
rcl
push
xchg
lods
sbb
sub
loop
adc
mov
stos
pop
ins
jg
add
in
sbb
jne
cs
push
ffree
mov
cld
cli
jg
aam
cmps
sbb
jg
fnsave
in
call
shl
adc
xchg
jb
in
pop
and
ret
shr
cs
add
outs
jge
mov
daa
repz
retf
stc
and
inc
mov
aam
nop
out
ror
cwde
xchg
test
leave
inc
mov
mov
and
mov
adc
out
jge
dec
addr16
inc
and
in
je
xchg
stos
retf
mov
dec
cmps
xor
cmc
inc
cld
sbb
xchg
cmp
fdiv
push
pop
(bad)
ret
sub
lahf
mov
rcl
xlat
imul
push
xchg
sahf
test
loopne
fild
in
pusha
pop
fwait
add
stos
mov
add
movs
sbb
or
es
stos
sbb
and
scas
jns
call
xchg
sti
shl
dec
cmp
or
jge
rcl
sbb
cli
mov
jae
call
pop
mov
fstp
pusha
stos
push
xchg
sub
je
loop
movs
or
fisttp
(bad)
jecxz
pushf
pop
mov
ror
call
mov
push
mov
jecxz
rcl
push
pop
xchg
or
jge
test
rol
arpl
and
dec
les
outs
arpl
sbb
pop
imul
add
inc
sub
xor
xor
int
fiadd
(bad)
sbb
xor
popf
sbb
pop
fild
mov
push
(bad)
aaa
(bad)
in
bound
pop
dec
ror
xchg
xor
push
movs
mov
mov
scas
jp
stos
push
or
jmp
dec
add
cli
mov
ins
jge
xor
jne
adc
push
or
sbb
dec
test
jmp
mov
es
int3
pop
fld
mov
pop
xor
fs
out
mov
cmps
and
test
test
mov
popa
hlt
int3
cli
dec
jmp
aam
mov
cmovg
dec
shl
jns
sub
lods
add
push
imul
add
aad
repnz
das
jle
or
(bad)
stc
jge
ins
pand
push
jmp
test
sar
sbb
data16
push
sbb
lds
cs
xchg
stos
xor
push
cmp
mov
fwait
add
xor
out
leave
movups
pop
pop
push
test
xchg
push
imul
aam
pushf
dec
pushf
dec
jge
int3
ja
adc
stos
in
sub
mov
add
sbb
stc
mov
sahf
out
xchg
jge
mov
fild
inc
mov
jb
call
(bad)
pusha
idiv
sti
les
je
cwde
sub
xor
sbb
pop
aas
mov
jno
lock
repz
add
out
mov
lods
cmp
icebp
iret
sbb
or
adc
sbb
and
pop
ins
cmp
stc
(bad)
jb
cmc
xchg
push
jp
xor
je
movs
rcr
dec
loopne
iret
scas
int
mov
jle
call
neg
daa
xchg
mov
cmp
fimul
inc
push
xchg
xchg
out
aaa
movs
movs
mov
repnz
je
lock
inc
mov
cwde
rcr
jp
xchg
stos
imul
pop
mov
(bad)
lods
in
sbb
pop
out
shl
hlt
or
cmps
stos
or
pop
mov
ret
mov
cmp
mov
xchg
out
cmps
jg
adc
test
outs
pop
lods
out
call
jae
jbe
scas
xor
adc
lahf
cmp
mov
cmp
inc
sbb
shl
shr
mov
rcl
add
cmps
retf
and
add
mov
scas
movs
mov
push
int3
in
sahf
mov
pop
es
and
add
push
mov
retf
push
pop
ds
lds
aaa
imul
sbb
jo
and
repz
inc
inc
cmp
adc
inc
das
test
vcvtps2pd
sbb
inc
xor
sbb
fisttp
inc
ins
mov
cmp
test
pop
mov
ja
mov
(bad)
or
adc
mov
dec
xchg
pop
and
test
mov
add
fcmovnu
aad
mov
and
xchg
sar
aad
arpl
jl
call
ins
mov
in
fld
out
in
dec
mov
imul
jl
sbb
xor
rcr
mov
aam
sbb
mov
lock
adc
jl
mov
movs
mov
jecxz
shr
add
(bad)
repnz
mov
xchg
sti
jmp
repnz
ins
adc
mov
sbb
fidivr
sti
push
xor
jl
or
js
cmp
jg
cld
mov
xchg
inc
fimul
jb
sahf
jp
lods
push
je
jb
inc
xor
pop
sub
arpl
and
mov
push
xchg
jmp
stc
pop
xchg
xchg
jnp
je
out
xor
lock
aaa
fs
test
jb
dec
repz
push
sbb
pop
or
mov
test
dec
loope
push
scas
leave
adc
xchg
sbb
repz
stc
mov
fadd
sti
jbe
cs
adc
call
xchg
sbb
mov
mov
cdq
stos
in
scas
retf
cmc
iret
(bad)
cmp
(bad)
adc
adc
sahf
cdq
sub
pop
xor
sub
(bad)
sub
not
sub
inc
add
lds
cmp
push
xor
in
push
popa
mov
xor
pusha
frstor
out
lock
inc
jmp
xor
dec
and
mov
in
inc
sub
(bad)
pop
popf
lahf
xor
fs
stc
in
mov
fcmovnbe
fidiv
jge
mov
and
lods
aaa
and
jl
mov
out
cld
lea
stos
push
retf
mov
loop
scas
aam
mov
iret
out
scas
shl
pop
sub
and
push
and
test
not
arpl
mov
xor
or
push
test
mov
mov
iret
jo
adc
in
pop
lds
inc
rcl
movs
pusha
pop
add
dec
xchg
(bad)
into
mov
add
cmp
jg
dec
cmps
push
dec
lods
mov
push
cmp
nop
jmp
sub
das
cmp
sub
add
lock
xchg
mov
inc
idiv
pop
lock
aas
add
out
sbb
inc
shr
js
js
push
or
loopne
in
xchg
pushf
mov
mov
loopne
dec
or
adc
cs
aaa
scas
lods
xchg
sbb
mov
adc
pop
mov
out
fs
test
and
fadd
xor
xor
xchg
fst
mov
xchg
jae
pop
jmp
mov
out
jno
mov
stc
cli
loopne
sub
fsubrp
nop
ins
gs
xchg
pop
push
and
jnp
dec
rol
arpl
xor
outs
mov
xchg
sbb
rcr
push
sbb
inc
popf
pop
xchg
jns
mov
pop
(bad)
popa
dec
out
add
or
jbe
leave
call
aad
fdivr
mov
pop
fadd
sti
inc
xchg
out
cdq
cmps
jecxz
mov
cmps
shl
dec
xor
movs
jns
fstp
jle
fwait
popf
mov
sub
mov
outs
cmps
sbb
cmp
xor
test
out
lock
out
jl
add
xor
lock
fld
imul
sub
pushf
out
mov
xor
pop
cdq
xchg
rol
push
pop
push
(bad)
push
cmp
dec
pusha
enter
push
je
scas
pop
pop
jmp
jns
retf
mov
push
sub
mov
adc
(bad)
out
in
lahf
js
pop
in
(bad)
mov
stc
in
sbb
lds
in
rcr
cmp
(bad)
dec
add
xor
mov
or
sahf
xor
inc
arpl
inc
addr16
cli
and
out
cmps
jge
ret
scas
sub
jmp
and
scas
add
adc
fnstsw
push
in
sahf
adc
xchg
shl
stos
test
xor
rcl
mov
add
fnstsw
ja
inc
cmc
mov
lds
push
shl
loopne
or
jecxz
(bad)
iret
sahf
test
(bad)
lds
dec
sahf
div
push
pop
mov
xor
and
push
(bad)
sti
inc
mov
sub
(bad)
(bad)
dec
lds
ja
ins
std
adc
inc
jnp
retf
add
in
sub
sub
push
pop
sbb
mov
adc
lock
jo
rol
mov
xchg
mov
sbb
ss
rol
hlt
xchg
jmp
mov
(bad)
cmp
pop
inc
xor
in
push
data16
xchg
ss
mov
jge
xlat
sbb
mov
ss
sub
inc
push
fcomp
pop
pusha
not
call
push
xchg
add
sub
into
inc
mov
stos
mov
lock
nop
dec
(bad)
aaa
cmp
mov
cmps
enter
xchg
sub
nop
mov
or
sbb
adc
push
sub
call
cmps
mov
test
jmp
(bad)
dec
inc
sbb
nop
pop
mov
sub
mov
test
lds
and
xor
leave
int3
xchg
aam
sti
xor
test
mov
repz
push
jno
xchg
sbb
scas
add
sub
pop
sbb
idiv
push
sbb
cmovns
ret
dec
mov
dec
clc
and
dec
mov
shl
in
retf
(bad)
mov
xchg
mov
xor
and
xor
mov
int3
enter
rcl
retf
dec
int
pop
imul
fdivr
jl
push
(bad)
fsub
add
jg
(bad)
outs
push
int
and
cmp
test
repz
lods
imul
pop
pop
sbb
jo
xor
mul
fist
mov
add
xchg
retf
jecxz
and
sbb
cmc
test
push
fst
xor
test
mov
mov
or
jno
movs
push
iret
adc
adc
out
pop
dec
pop
jo
or
in
mov
push
std
imul
jnp
call
bswap
cld
and
cs
xor
in
ror
out
push
xchg
ret
rol
mov
jg
les
movs
jp
shl
sub
movs
or
sub
out
test
pmullw
jns
mov
or
adc
out
push
xor
mov
(bad)
add
lods
xchg
xchg
test
sub
push
inc
(bad)
jl
das
xchg
inc
inc
mov
mov
mov
mov
inc
test
dec
pop
cmp
mov
repz
fwait
mov
fisub
jns
push
pop
adc
push
jle
adc
retf
xor
(bad)
pusha
rcl
test
mov
ss
push
test
mov
loopne
push
outs
icebp
pop
fcom
sub
cdq
icebp
daa
adc
xor
add
outs
mov
in
fnstenv
loop
pop
jecxz
outs
inc
adc
outs
aam
loopne
adc
stc
push
jnp
mov
inc
sbb
cmp
mov
jmp
or
hlt
sub
mov
fsub
idiv
je
add
stos
mov
jo
retf
dec
dec
ss
mov
scas
mov
popa
xor
out
pop
cmp
mov
cmc
mov
pop
mov
pop
inc
and
or
sbb
fs
(bad)
ror
xchg
fwait
call
je
stc
es
cwde
ds
iret
mov
fst
cmp
inc
out
cwde
inc
loopne
jmp
ret
sbb
jmp
fwait
xor
push
add
ins
sbb
push
sar
mov
cmp
stc
pop
jne
inc
cmps
or
iret
loope
push
dec
stos
cmps
cli
call
sub
mov
pop
push
fiadd
jns
(bad)
inc
xchg
pop
cmps
mov
scas
data16
pushf
movs
adc
rol
idiv
adc
sahf
or
es
retf
dec
popa
or
stc
mov
lss
fcomp
adc
mov
and
xchg
cs
cmps
scas
pop
icebp
sbb
in
getsec
aas
sahf
xchg
dec
cdq
(bad)
xor
adc
mov
out
push
cli
repz
outs
pop
popa
(bad)
hlt
jo
mov
ret
mov
loopne
mov
cmp
repz
cs
lods
lahf
les
and
test
iret
push
jmp
mov
jl
lods
inc
jle
pop
test
ficom
xchg
mov
push
sti
adc
fidivr
sub
ret
push
cdq
pop
mov
pop
dec
fs
lock
sub
aas
dec
(bad)
pop
push
jnp
inc
sub
mov
retf
std
retf
retf
mov
jae
xchg
daa
xchg
adc
in
stos
mov
div
dec
stos
out
pushf
xchg
push
popa
push
dec
inc
xor
adc
mov
repnz
xrelease
sbb
imul
cmp
sub
pop
repnz
imul
xchg
mov
adc
lds
or
and
adc
loope
inc
repz
out
push
xchg
mov
inc
jmp
sub
xchg
imul
mov
push
fwait
and
add
out
pop
fucom
push
gs
and
push
lods
xor
jo
(bad)
and
outs
mov
and
push
sub
inc
sub
(bad)
cmp
in
rcl
aad
inc
shl
mov
mov
jmp
ret
mov
je
bound
arpl
xor
cmps
ins
stc
ret
in
call
push
jo
and
inc
sub
arpl
stos
leave
loopne
shr
pop
pushf
push
sbb
nop
or
sbb
pop
mov
xor
dec
movs
out
add
and
ret
dec
leave
retf
mov
dec
ins
aam
(bad)
aas
iret
(bad)
and
pop
pop
out
lahf
stos
push
arpl
stc
inc
sar
(bad)
fidiv
leave
pause
xchg
outs
aas
sbb
cmc
inc
mov
scas
cs
sub
hlt
bound
outs
shl
pop
mov
js
and
scas
dec
xchg
sub
clc
sbb
push
mov
or
and
leave
jbe
pop
gs
xor
and
stc
dec
(bad)
lds
mov
int3
in
jp
mov
sub
js
adc
in
mov
or
(bad)
test
enter
stos
imul
adc
test
and
and
cli
cmp
(bad)
fidiv
arpl
mov
aaa
jg
(bad)
loopne
aad
test
gs
push
das
repz
dec
(bad)
xor
sahf
cmc
xor
movs
stos
aas
iret
jp
sub
ja
repnz
jns
fprem
dec
dec
jmp
shl
repz
lock
cmp
add
ficom
fdivr
test
out
(bad)
in
js
jbe
outs
cmp
stc
stc
sahf
out
xchg
cli
movs
popf
mov
xor
fwait
test
loop
mov
push
mov
pop
cwde
sub
retf
mov
stc
push
xchg
pop
inc
xchg
add
int3
shr
mov
push
add
ins
pop
push
mov
or
test
pop
dec
mov
cmps
movs
lahf
mov
push
xchg
mov
rol
outs
mov
sbb
cdq
cli
std
mov
adc
repz
mov
leave
mov
cmp
scas
clc
pop
pop
cmp
repnz
sub
retf
xchg
mov
push
cmc
mov
inc
cdq
cmp
jecxz
mov
sbb
movs
push
xchg
fcom
jne
not
push
(bad)
cmp
cmp
pop
mov
sub
or
push
sub
mov
and
jno
sub
sti
cs
test
push
shl
and
dec
arpl
in
cmovno
lea
mov
cmp
call
call
inc
test
into
pop
xchg
in
dec
mov
inc
out
in
pushf
xchg
outs
retf
int
bound
xchg
mov
int3
xchg
ss
inc
fs
push
rcr
mov
or
and
jno
add
mov
mov
sub
lods
out
int
push
out
xchg
jno
pop
stc
push
xor
retf
jo
ret
pop
sbb
(bad)
test
push
(bad)
jae
sbb
cmp
sbb
int
retf
sbb
mov
xchg
sahf
fs
and
jge
shr
ror
mov
adc
inc
jge
xor
xchg
dec
dec
jle
daa
ja
retf
fld
retf
inc
mov
mov
mov
sub
xor
scas
adc
js
pop
mov
enter
mov
cs
pop
ret
imul
ins
loop
je
dec
jno
cmc
xchg
das
fs
xchg
adc
ret
inc
gs
mov
clc
mov
bnd
mov
mov
test
aad
lods
mov
in
xchg
add
(bad)
in
cmp
xchg
test
jle
adc
movntps
jecxz
push
sbb
lods
outs
popa
fiadd
xchg
lods
int
xchg
mov
cli
(bad)
pop
fcmovb
cmp
stos
imul
sar
mov
mov
push
lods
imul
sub
(bad)
fwait
or
imul
das
fistp
pop
or
out
dec
sub
imul
sbb
in
jle
test
add
mov
jmp
inc
sbb
rcl
and
pop
mov
fist
fsincos
jecxz
retf
mov
ss
push
fwait
xchg
pop
xor
into
push
gs
ins
call
xchg
mov
jo
mov
iret
inc
cmp
push
mov
or
add
pop
scas
xor
es
call
push
push
fst
mov
sub
(bad)
push
ins
js
clc
sub
retf
rol
xlat
mov
retf
and
ss
aas
in
sbb
and
loope
jbe
ret
je
ror
xor
popf
out
in
xchg
mov
xchg
movs
leave
test
fcomp
jbe
or
jmp
fnstenv
jbe
inc
or
sub
mov
jb
add
test
cmps
sub
xchg
pop
fcmovnb
shl
add
xchg
cmp
rcr
jle
sub
dec
mov
sbb
cmp
or
test
xchg
int
shl
mov
adc
icebp
add
push
sbb
xor
jne
test
pushf
fs
rol
cwde
call
ins
or
fcmove
fnstenv
xor
add
and
das
addr16
sub
lock
inc
scas
cmps
sub
sti
mov
cmc
or
sub
cdq
xlat
imul
adc
push
add
jae
cmp
stc
sti
push
lock
xchg
dec
ror
push
mov
arpl
imul
xor
cwde
aad
add
in
dec
gs
mov
xor
add
mov
mov
repnz
and
or
ret
jmp
lds
hlt
cmp
pop
shl
popa
and
call
push
add
ret
jmp
fidiv
inc
pop
pop
outs
fstp
ins
out
push
fwait
sub
je
das
movs
xchg
pop
scas
test
nop
iret
adc
in
enter
push
fwait
(bad)
popa
movs
push
sti
iret
jnp
fisttp
cmc
inc
inc
mov
in
dec
dec
push
or
or
test
mov
(bad)
std
mov
inc
repz
retf
xchg
and
js
cs
push
dec
icebp
pop
dec
xor
test
and
retf
(bad)
retf
and
inc
dec
dec
sbb
mov
xor
loopne
or
popa
into
fs
cmc
xlat
in
or
data16
jo
mov
icebp
movs
mov
inc
cmps
xchg
(bad)
cmc
repz
cmp
int
in
out
loope
xlat
mov
or
shr
and
popa
and
cs
inc
push
jp
dec
inc
sub
cmp
xchg
test
repnz
aam
lahf
inc
(bad)
sahf
lods
mov
inc
adc
cdq
mov
pop
imul
rcl
xlat
mov
out
xchg
call
jmp
xchg
out
ins
(bad)
fmul
pusha
mov
mov
cwde
sub
test
xor
mov
mov
cmps
mov
add
add
inc
les
inc
xchg
or
imul
dec
and
or
in
pop
jo
lock
imul
in
out
jbe
add
push
push
in
lock
loope
icebp
push
xor
std
mov
jmp
lods
nop
sahf
pop
fcom
sbb
adc
sub
jg
mov
and
inc
inc
cmc
outs
cmc
mov
ret
adc
xchg
idiv
or
lock
push
pop
sbb
clc
pop
shl
hlt
loopne
cmp
call
jae
cwde
cmp
push
pop
shr
push
(bad)
jl
or
pop
push
mov
jge
fucom
cmp
adc
movs
imul
add
and
mov
(bad)
loope
test
fstp
push
cld
ss
in
repz
push
xchg
je
xor
inc
lds
imul
push
(bad)
xchg
or
leave
in
jne
lahf
push
cwde
sbb
out
mov
dec
inc
ficom
xchg
fstp
out
mov
daa
iret
and
lods
cmp
and
rcr
cmp
and
(bad)
aam
mov
and
iret
rcl
mov
mov
jmp
xchg
pop
push
cmp
push
loopne
test
xchg
aad
and
fstp
fneni(8087
iret
loop
sub
rol
call
sub
inc
lahf
stos
inc
stos
adc
pushf
jae
and
adc
das
loope
stos
std
and
mov
mov
pop
js
or
sbb
arpl
in
pop
or
out
push
jp
arpl
mov
cmp
jns
dec
or
lea
loopne
shl
daa
jp
sar
mov
push
movs
rcl
cmp
adc
das
cmp
mov
(bad)
mov
test
push
xor
mov
mov
ins
adc
lods
inc
fnstsw
test
adc
fwait
add
test
mov
xchg
cld
cmp
sbb
jnp
jmp
xor
arpl
dec
and
sbb
ins
mov
loope
xchg
sbb
rcl
dec
ja
cmc
adc
ds
cmovl
out
popa
adc
xchg
push
ins
and
pop
jmp
xlat
and
loop
pop
xchg
mov
scas
daa
scas
std
shr
cmp
pop
js
ins
xchg
cmp
clc
loop
fbld
or
test
outs
dec
sub
jp
adc
lods
inc
xchg
pop
loop
cli
sti
mov
and
int
mov
arpl
push
sar
jge
jno
aad
fisttp
fisttp
clc
out
xchg
rol
enter
inc
imul
or
nop
mov
mov
jle
push
inc
cmp
ret
imul
pop
mov
mov
es
mov
jg
out
in
or
in
ret
jnp
je
mov
pop
test
jecxz
sar
or
clc
mul
(bad)
xlat
jle
or
out
mov
stc
push
xchg
les
emms
pop
(bad)
cmp
xor
dec
ins
or
movs
inc
push
std
inc
push
pop
ret
pop
ds
jle
test
mov
mov
es
adc
test
dec
enter
sub
daa
inc
cmps
gs
cmc
jb
mov
retf
adc
into
clc
inc
nop
repz
mov
add
mov
sahf
and
adc
mov
retf
ror
push
sbb
aas
jmp
frstor
shl
sub
pop
pop
and
ins
das
clc
push
pop
iret
aaa
xchg
sbb
push
mov
out
jbe
adc
ja
xor
cmp
xchg
adc
and
int3
mov
icebp
imul
retf
jno
dec
(bad)
mov
mov
(bad)
or
jp
mov
stos
mov
pop
cmps
int3
push
adc
jl
xor
repnz
(bad)
cmp
cli
pop
in
imul
jb
adc
inc
mov
fild
jnp
mov
or
or
test
pop
sahf
(bad)
in
xor
int
and
(bad)
or
jae
jle
dec
add
mov
dec
xor
pop
adc
cmp
mov
mov
cdq
mov
inc
jo
mov
xchg
adc
mov
add
and
pop
out
or
daa
scas
outs
es
in
xsha256
cmps
xchg
and
pop
xor
imul
cmc
cmp
lods
push
movs
mov
mov
cmc
ins
adc
fcmovnbe
xchg
(bad)
or
ret
mov
aas
mov
xor
mov
test
(bad)
sub
es
mov
add
(bad)
mov
add
dec
sub
in
call
adc
jmp
xchg
retf
ins
mov
mov
add
cwde
sub
ins
popa
mov
les
(bad)
mov
bound
mul
dec
js
xchg
pop
std
call
sub
imul
add
les
icebp
das
mov
or
int
hlt
aad
sti
adc
pusha
(bad)
fisttp
int3
mov
outs
mov
add
add
sbb
cmps
xor
adc
pop
shl
mov
stc
sbb
adc
and
and
cmps
ins
mov
sub
push
adc
pop
or
not
push
lahf
arpl
int
push
xchg
fsub
jl
ret
retf
sbb
lods
adc
sbb
int
pop
fstp
ja
and
stc
mov
scas
xlat
aad
jmp
inc
push
or
leave
jo
addr16
jle
mov
sti
xlat
push
or
pop
xchg
xchg
xchg
jg
adc
aaa
rcl
xchg
fwait
lods
es
leave
and
and
jbe
fiadd
clc
lods
bound
rcr
pop
(bad)
pop
(bad)
adc
pop
inc
xchg
cmp
add
popa
lds
nop
inc
neg
out
nop
push
add
adc
(bad)
pop
loop
and
xor
mov
in
add
push
xchg
retf
adc
iret
int
cdq
mov
test
jmp
(bad)
push
sbb
test
cmps
mov
push
and
cmp
pushf
and
out
mov
ins
mov
das
pusha
inc
push
ret
inc
inc
pop
(bad)
and
fistp
push
mov
jg
retf
arpl
sbb
xchg
xchg
nop
dec
dec
aaa
push
cmp
jl
mov
cmp
lods
and
ja
stos
sub
or
dec
add
sbb
stc
(bad)
mov
inc
fdiv
lds
pop
fimul
mov
xchg
or
(bad)
aaa
fs
test
add
sub
idiv
sahf
sbb
arpl
jns
push
xor
dec
sahf
(bad)
inc
or
and
repnz
daa
jbe
push
(bad)
fxch
jnp
jne
sbb
lock
pop
mov
pop
sub
movs
clc
or
add
mov
or
or
push
mov
call
dec
hlt
idiv
and
mov
paddusb
sar
cwde
adc
lds
adc
mov
rcl
iret
fdiv
sub
inc
mov
dec
and
fs
sbb
push
stos
loope
mov
mov
mov
push
(bad)
imul
call
add
fsub
xor
adc
sub
inc
sbb
icebp
stc
das
and
fisttp
cmp
jne
push
mov
arpl
mov
dec
movs
popa
push
or
ret
jg
push
les
out
inc
in
sbb
push
cli
in
ret
outs
mov
push
xchg
inc
gs
dec
add
push
ret
dec
push
mov
repz
xchg
cld
push
ss
in
mov
or
xchg
test
push
je
push
pusha
ficom
mov
test
out
cmp
jbe
movs
out
dec
outs
clc
rcr
mov
ins
jecxz
in
cmc
jbe
mov
xlat
jg
cmps
pop
mov
inc
inc
jns
mov
add
pop
cmp
sbb
push
js
test
movs
xchg
sar
dec
pusha
sub
xchg
push
push
lods
cmp
or
lods
dec
jl
lahf
daa
test
(bad)
lods
adc
jnp
retf
jmp
mov
mov
mov
xchg
and
dec
dec
leave
and
repz
jl
int3
data16
cli
sbb
icebp
(bad)
out
mov
popf
retf
cmc
cmc
es
fild
enter
inc
les
mov
stos
cmps
lea
add
loopne
xchg
mov
(bad)
not
pusha
sub
push
jae
cmp
add
mov
xor
xor
outs
mov
mov
gs
inc
mov
dec
(bad)
data16
fsubp
je
mov
sub
dec
sbb
in
pop
mov
or
add
jmp
call
push
cwde
pop
pop
inc
add
sub
mov
push
pop
aas
cmp
mov
fldenv
repz
dec
lea
lds
mov
test
dec
lock
sbb
(bad)
bswap
stc
int3
test
adc
xor
leave
rcr
xchg
pop
inc
mov
mov
paddd
pop
mov
jb
or
ret
call
inc
shl
inc
bound
jno
mov
sub
imul
cdq
(bad)
mov
in
movs
dec
inc
inc
push
cmp
mov
stos
ins
rcr
and
clc
fs
mov
mov
sub
test
fcmovbe
cdq
fwait
outs
sub
pop
fadd
sahf
add
or
lods
sbb
ret
cmp
lea
jae
jp
imul
fnstcw
mov
mov
pop
out
cmc
daa
shl
popa
ret
jp
jb
push
push
inc
cli
lahf
pop
and
jmp
jns
dec
sbb
(bad)
int3
xchg
xor
clc
pop
pop
sub
shl
clc
mov
cld
into
mov
jg
out
jmp
xor
or
outs
aas
das
(bad)
jmp
xor
sub
cmp
or
out
xor
rol
cmp
dec
sahf
fdivr
inc
stos
xchg
sub
adc
inc
sub
push
mov
pop
adc
lods
jmp
adc
dec
pop
stos
pop
dec
ret
push
mov
jo
sbb
out
jae
sub
(bad)
fwait
adc
jae
and
scas
mov
iret
cs
ins
test
dec
cdq
xchg
mov
das
or
icebp
inc
sahf
push
stos
scas
inc
pop
enter
mov
sub
mov
mov
and
add
(bad)
pop
and
jp
test
outs
and
add
mov
iret
xchg
xlat
or
xor
push
pop
inc
adc
jne
xchg
jbe
xchg
fcmovnb
or
pushf
pop
lds
mov
je
sub
je
neg
cmps
sub
xchg
and
dec
aas
arpl
fcomp
stc
and
inc
imul
xor
fdivr
imul
ret
stos
inc
sbb
and
add
mov
sbb
inc
hlt
jns
mov
mov
lock
add
mov
and
dec
mov
scas
lods
sub
sbb
add
fcom
es
pop
ss
mov
lock
push
dec
push
repz
xchg
scas
sbb
mov
xor
jnp
xor
xchg
or
mov
mov
xchg
dec
addr16
mov
sbb
sbb
adc
std
mov
inc
outs
data16
(bad)
xor
sub
call
sbb
sahf
pxor
xor
add
rcr
nop
mov
sbb
or
adc
ss
push
mov
jns
sub
loop
test
pop
cmp
daa
sub
data16
inc
jg
idiv
dec
fadd
dec
mov
loop
ins
in
dec
cmp
jmp
and
mov
sub
xor
dec
xlat
xor
add
mov
sbb
mov
inc
stos
repnz
mov
xchg
sti
shl
and
rcr
push
pop
mov
sbb
mov
sbb
jle
adc
mov
pop
or
push
mov
pop
ror
pop
mov
cmp
cld
out
jno
push
popa
ds
(bad)
movs
push
jle
loope
mov
(bad)
adc
pushf
push
mov
in
ror
mov
retf
dec
and
and
fisttp
mov
jbe
fisttp
push
dec
xchg
bound
sbb
test
neg
fsubp
in
inc
enter
xchg
push
movs
out
dec
jl
iret
int
push
ret
lods
jge
in
cmps
push
add
jb
push
cwde
test
nop
push
sbb
retf
cld
xchg
push
fnstcw
fs
push
jmp
data16
jl
lds
mov
(bad)
cld
pop
lahf
adc
jb
pop
scas
inc
ds
nop
arpl
lds
ss
pop
clc
adc
jmp
sbb
push
inc
ffreep
jp
out
retf
test
mov
push
sar
push
jg
push
and
retf
cmps
push
jg
xchg
lock
scas
push
out
pushf
fwait
stos
pop
jbe
mov
and
sahf
retf
mov
add
ds
add
jae
pop
adc
xchg
out
pop
sbb
xor
ret
adc
xor
xor
test
mov
sub
test
mov
and
movs
mov
push
jb
adc
sub
xor
jmp
and
ins
push
sub
jne
stos
dec
fwait
sbb
pop
mov
in
addr16
cmp
dec
adc
(bad)
dec
jne
mov
and
mov
mov
and
cld
fldcw
or
in
enter
ret
shl
pushf
add
fcomp
xchg
inc
mov
xor
fwait
sbb
adc
into
xor
test
scas
push
data16
cmps
popa
xchg
stos
and
vmovaps
fst
inc
bound
imul
cld
fdivrp
jmp
and
push
lock
pop
or
push
push
imul
sar
adc
sbb
into
mov
ficomp
and
push
push
shl
(bad)
fiadd
jl
adc
and
je
mov
and
scas
ret
adc
xchg
push
cdq
jp
and
scas
and
je
sub
dec
movs
lea
jmp
retf
add
ja
sar
and
leave
adc
(bad)
mov
inc
push
cwde
mov
scas
fst
mov
inc
ret
js
add
mov
fdiv
cmp
inc
lods
mov
push
call
(bad)
jb
loopne
mov
cwde
js
sbb
jl
jle
mov
xor
or
xor
and
(bad)
clc
gs
jae
inc
cmp
ja
mov
push
xchg
loopne
in
adc
out
cmps
add
aas
popf
int
jne
movs
in
cmc
out
popf
or
ins
jne
in
sti
aam
sub
adc
clc
cli
test
mov
pop
push
dec
pop
push
or
in
jmp
in
or
xchg
retf
cs
inc
jae
or
sti
loope
movs
xor
imul
sbb
adc
xor
sub
(bad)
inc
stos
shl
lods
movs
jmp
mov
shl
sbb
imul
jecxz
mov
dec
fst
sbb
pop
sub
stc
add
pop
mov
adc
add
repz
sub
cs
bound
nop
neg
jnp
mov
clc
dec
ja
(bad)
mov
(bad)
and
add
inc
mov
int3
fwait
jo
jmp
cmp
mov
mov
sbb
push
imul
movs
mov
jmp
jmp
add
cmp
add
fistp
retf
push
int3
js
je
mov
xor
dec
cld
mov
js
in
dec
popa
pop
cmp
xchg
xor
dec
mov
mov
nop
xchg
outs
mov
lock
pop
xchg
fcom
das
pop
xor
jnp
ret
scas
and
push
pusha
test
cmp
inc
mov
movs
dec
scas
mov
xor
mov
sbb
ins
fs
and
pop
mov
out
add
dec
or
lods
inc
jno
mov
(bad)
mul
inc
cmc
or
in
xor
inc
cmp
js
out
push
imul
js
xchg
movs
mov
xchg
and
xchg
popf
test
outs
push
(bad)
jge
jne
call
test
mov
sbb
xor
jne
pop
dec
jb
and
sub
call
popa
xchg
xchg
dec
mov
push
mov
lods
stos
adc
into
aas
jmp
fldenv
xor
clc
stc
cmp
ins
sbb
cdq
fwait
out
pop
xchg
jecxz
mov
mov
repnz
ret
imul
mov
aas
or
xor
mov
test
fbld
jbe
xor
and
sub
mov
lea
push
xchg
cwde
dec
xchg
mov
mov
clc
or
fcmovnbe
inc
scas
les
sahf
xchg
inc
jge
dec
push
pop
mov
pop
vunpcklps
icebp
cmp
dec
test
jmp
adc
jnp
cs
fild
addr16
test
sub
loope
push
enter
fmul
dec
lods
sbb
stc
mov
popf
ja
xor
call
jle
test
popa
out
mov
jns
lods
push
loope
mov
in
cmp
nop
dec
mov
or
movs
or
jo
fcom
cmovbe
cmp
movs
jmp
jb
jge
mov
arpl
int3
mov
rol
xchg
push
sbb
xchg
mov
xchg
int3
and
and
fwait
out
add
in
pop
jmp
xor
pushw
aaa
inc
mov
mov
mov
sbb
xchg
mov
(bad)
pop
adc
stc
hlt
pushf
repnz
xor
push
xchg
jl
add
adc
cmp
stos
add
ja
shr
pop
enter
mov
xchg
mov
enter
jmp
jmp
outs
out
xor
cdq
xor
pop
xchg
add
lahf
mov
and
inc
fidiv
bound
daa
repnz
mov
push
mov
or
fcomp
int3
lock
or
ss
push
(bad)
or
lods
adc
out
lock
mov
mov
je
(bad)
std
inc
sub
sar
(bad)
inc
adc
xor
pop
retf
dec
dec
imul
out
xchg
jmp
ins
add
popf
shl
dec
jne
dec
pop
pop
adc
xchg
xchg
push
ret
loope
gs
and
imul
bswap
inc
adc
dec
stos
xchg
cmp
setnp
mov
mov
xchg
push
cmps
sbb
sub
mov
mov
(bad)
mov
jmp
sub
sar
push
icebp
call
fsubr
xor
xlat
adc
sar
adc
jmp
jnp
xchg
lock
xor
dec
das
(bad)
sub
das
and
or
jno
inc
(bad)
and
mov
test
int
xchg
mov
pop
test
jl
dec
pushf
mov
shr
sub
sub
push
adc
inc
mov
(bad)
push
xchg
push
pop
adc
xchg
sbb
icebp
mov
cmp
mov
int
mov
cmp
or
dec
mov
and
stos
scas
lock
cmp
movs
sbb
sub
loope
sbb
sahf
test
scas
and
scas
sub
push
add
shl
sbb
arpl
(bad)
sahf
shl
or
jae
dec
popf
inc
mov
outs
mov
push
cmp
dec
and
hlt
es
add
jl
push
imul
stos
cdq
push
stc
(bad)
push
xchg
jg
rcr
inc
into
sub
mov
sub
ret
cwde
dec
(bad)
std
test
inc
or
(bad)
push
out
(bad)
add
push
xchg
xchg
or
stos
pop
push
dec
(bad)
inc
loope
in
repnz
fld
test
cmp
or
mov
gs
pop
adc
fsubrp
mov
mov
mov
cli
cdq
pop
pop
jle
nop
pop
test
xor
ins
and
cmp
repnz
add
sub
lds
dec
cmp
retf
clc
mov
mov
stos
xchg
xor
inc
loope
cmp
(bad)
in
cmps
mov
xchg
movs
jbe
mov
xchg
repnz
dec
das
addr16
outs
jl
inc
dec
jecxz
mov
call
or
dec
jmp
dec
add
mov
movs
jmp
ja
ja
cmp
bsr
fisub
test
(bad)
jo
and
xor
and
sbb
shr
sub
icebp
sbb
dec
jmp
out
cmc
xor
outs
inc
cmp
add
(bad)
and
dec
mov
rcl
adc
sbb
mov
push
movs
mov
in
mov
inc
fs
jnp
pop
cmp
cmp
and
sbb
cdq
and
mov
push
ins
and
out
jge
and
add
ret
movs
or
adc
xor
enter
mov
lea
fidivr
inc
jns
add
cli
pusha
ins
cmp
gs
mov
jl
lods
shl
adc
mov
jns
imul
test
mov
movs
sub
inc
mov
and
dec
nop
pushf
push
cmps
inc
lods
pop
mov
ret
stos
cmps
sbb
out
repz
test
jmp
enter
sbb
and
and
adc
and
call
movs
sub
leave
pusha
sub
out
loopne
jae
or
dec
mov
repnz
and
xchg
sub
fcmovbe
push
xchg
dec
mov
jno
jle
in
adc
push
cmp
inc
fdivr
mov
leave
dec
ins
cmp
call
xor
ficomp
stos
push
push
sub
pop
std
ins
and
jo
fnstenv
push
aam
sahf
call
test
movs
pop
cld
into
loopne
int3
push
and
test
mov
fsubr
xor
mov
push
ret
add
repnz
or
into
sub
ins
test
mov
sbb
jo
lds
test
test
arpl
jns
xor
push
dec
xchg
repnz
fs
out
jno
jle
rcl
aas
mov
xor
sti
and
daa
dec
in
xor
int
shr
sub
ret
mov
lock
jge
sub
pop
test
pop
and
pop
inc
mov
mov
lea
fidivr
aad
lahf
cmp
icebp
into
and
xchg
cmp
shl
and
ret
mov
idiv
popa
dec
mov
xadd
imul
fisub
fwait
shr
pop
mov
sub
cmp
faddp
mov
nop
inc
jb
mov
repz
mov
cmp
jmp
dec
mov
out
nop
push
push
sub
iret
lea
xchg
push
dec
dec
jp
pop
or
scas
sbb
mov
jmp
icebp
mov
addr16
in
jmp
jbe
sub
shl
pop
inc
pop
pop
add
pusha
sub
pop
xor
ret
and
cmps
xchg
call
jg
test
cmp
imul
addr16
scas
add
or
out
cmps
pop
ins
mov
and
adc
les
stos
int3
pop
pop
out
cmp
dec
mov
pop
aaa
js
or
jecxz
or
adc
inc
inc
mov
sub
mov
pushf
cwde
and
lahf
mov
xchg
leave
inc
lds
sbb
inc
inc
xlat
or
add
pop
es
inc
data16
jl
cld
dec
dec
stos
ficomp
xchg
sbb
call
sbb
cmp
call
ret
or
and
jecxz
mov
ret
sbb
enterw
mov
das
mov
push
dec
mov
inc
scas
sti
repnz
cli
aaa
adc
xchg
jle
ret
or
jne
mov
adc
js
int3
and
pop
scas
xor
mov
into
ds
mov
cmps
adc
push
mov
pop
daa
add
dec
or
dec
inc
mov
icebp
retf
mov
mov
dec
mov
jno
jg
int
movs
cli
stos
sub
ret
les
xor
(bad)
leave
inc
dec
loope
jmp
jnp
pop
mov
daa
dec
int3
push
sbb
dec
jnp
out
das
clc
pop
adc
pop
jnp
push
(bad)
pop
retf
adc
pop
retf
add
int3
bnd
sub
or
add
sbb
push
xchg
pop
cli
sub
ret
xchg
cdq
mov
fld
jmp
lods
dec
(bad)
jo
sbb
sub
adc
out
or
std
stos
adc
mov
popf
mov
dec
lods
pop
in
xchg
in
xor
arpl
adc
xchg
repz
adc
pop
retf
cmp
leave
add
mov
push
popf
push
pushf
in
fucomip
jmp
shl
mul
and
in
push
(bad)
fistp
push
test
mov
popf
mov
sbb
fninit
fs
nop
add
xor
add
sub
mov
lock
es
pop
out
xchg
xor
ret
leave
scas
pop
or
test
ins
jo
popf
lods
mov
jg
mov
xchg
push
and
xchg
in
sub
data16
arpl
adc
adc
or
aas
mov
int3
mov
push
xchg
jno
jge
sar
inc
cld
or
xchg
xor
mov
pop
retf
jbe
les
sub
rcl
push
push
int
and
(bad)
popa
and
xchg
push
xor
std
es
mov
jns
arpl
das
xchg
cs
mov
and
sbb
rcl
mov
fnstsw
scas
sbb
xor
sbb
sub
jno
fild
fwait
pushf
lods
pop
adc
fimul
mov
loope
mov
nop
or
jl
fisubr
(bad)
dec
inc
popa
popa
xchg
lods
adc
cmps
push
xor
addr16
lock
mov
jl
adc
sti
test
adc
and
retf
jp
inc
xchg
mov
adc
pop
and
in
push
pop
out
mov
cmp
jp
mov
push
sub
ins
sahf
shr
dec
xrelease
sbb
mov
js
call
mov
mov
nop
cmp
ror
push
add
gs
jge
test
push
sbb
js
xchg
pop
bound
cmp
iret
stc
add
repz
jge
mov
mov
xor
ja
outs
jl
sub
dec
dec
pop
lea
das
shl
sub
jp
fcmovnu
push
shl
xor
bound
inc
out
inc
jno
mov
rol
xchg
cmp
sbb
inc
imul
retf
cmp
or
cld
jae
cmp
(bad)
push
push
lea
nop
lea
icebp
mov
pop
push
je
arpl
enter
lods
cmp
sar
and
popf
mov
xchg
sub
pop
mov
sbb
inc
test
or
pop
scas
inc
lock
ret
mov
mov
and
orps
mov
mov
xchg
pop
neg
leave
movs
stc
pop
ds
jmp
loop
leave
popf
aad
mov
sar
addr16
sbb
fwait
aaa
mov
jg
shl
xchg
adc
sub
es
inc
adc
pop
sub
mov
add
cld
or
iret
retf
sbb
fisubr
imul
sbb
dec
mov
repz
add
cld
loopne
(bad)
xor
hlt
mov
jmp
xchg
popf
xor
popa
cmp
jg
mov
cwde
mov
jge
ja
add
or
adc
mov
das
enter
nop
ja
sub
js
cli
push
jo
xchg
cmp
sbb
fsubr
mov
jno
sub
test
sbb
pop
ins
pop
into
jmp
push
sub
sar
cwde
nop
xor
shl
cmps
sbb
stos
cld
es
jae
cmp
add
ret
mov
aam
fs
mov
push
cmps
cmp
call
cmp
push
dec
pop
call
inc
or
jge
mov
pushf
int3
inc
cmp
push
push
stos
ficom
ins
cwde
dec
(bad)
sub
adc
sbb
xchg
inc
mov
test
movs
les
les
push
and
mul
cmp
pop
add
addr16
push
into
or
fwait
cli
test
stos
push
test
pop
xchg
icebp
outs
mov
mov
rcr
lea
test
cmp
pop
test
push
jmp
sub
loop
cwde
dec
push
in
xchg
iret
fstp
mov
pop
adc
pop
retf
std
jns
xor
icebp
cmp
pop
ins
dec
cmp
or
sbb
add
and
adc
and
jo
xchg
jg
es
mov
pop
cmp
dec
test
inc
ins
jmp
dec
add
pop
in
cdq
sbb
shl
cmp
mov
(bad)
ds
mov
or
dec
sub
jp
sbb
out
xor
sub
push
pop
popf
sbb
test
out
data16
leave
ret
xor
dec
pushf
mov
(bad)
div
cmps
inc
jne
inc
std
daa
add
mov
cmp
sbb
push
sub
mov
(bad)
mov
les
adc
push
dec
jmp
aam
repz
movs
and
sub
scas
pop
ret
sub
dec
lds
lods
out
add
cmc
scas
or
mov
mov
ret
sub
or
jp
mov
mov
retf
pop
test
sbb
push
aam
and
idiv
xchg
xchg
cli
and
sbb
div
push
loop
sub
xchg
fld
xchg
cmp
pop
mov
jl
test
inc
pop
mov
push
push
out
addr16
stos
xchg
stos
push
push
icebp
popf
mov
lds
mov
repz
jle
add
mov
mov
and
int
arpl
or
xchg
xor
inc
cmps
jno
(bad)
in
nop
jmp
jmp
lds
outs
mov
mov
sti
fwait
xor
sbb
repz
jle
dec
movs
int3
jle
mov
sub
fdiv
stos
out
sbb
mov
mov
xor
fdiv
sub
mov
rcr
test
(bad)
push
in
or
pusha
fwait
popf
inc
hlt
adc
pop
push
inc
cmp
mov
out
aas
and
xor
out
push
faddp
xchg
pusha
js
push
test
xchg
mov
jb
cmp
rol
jo
rol
(bad)
clc
dec
loop
sbb
sub
out
push
add
jnp
fistp
jne
mov
push
sub
(bad)
jne
cld
cwde
cmp
sar
cwde
cmps
jo
data16
int3
jl
jmp
stos
adc
mov
sub
sbb
push
push
dec
xchg
int
repz
out
mov
inc
or
pop
inc
jne
xor
pop
add
adc
sar
cmps
dec
or
dec
imul
mov
adc
jae
mov
pop
cwde
cmp
pop
sub
lds
call
push
enter
loope
in
mov
out
inc
inc
fidivr
lock
ja
mov
mov
push
cs
xchg
test
outs
adc
dec
inc
scas
mov
xor
in
ds
jp
outs
push
push
inc
lds
xor
jmp
stos
mov
out
add
pop
repnz
xchg
add
hlt
add
xchg
xchg
add
dec
lock
push
repnz
cmp
jmp
rol
cld
mov
add
ror
jp
or
push
sbb
scas
retf
(bad)
jae
mov
add
pop
pop
push
push
gs
outs
cmp
push
cmps
out
jp
jae
sub
les
scas
sub
jp
nop
je
mov
adc
push
mov
jp
pop
dec
fidiv
xchg
int
icebp
sub
sbb
mov
retf
dec
test
cld
aam
jae
(bad)
or
jb
cmps
jmp
or
mov
or
push
outs
(bad)
cmp
xchg
or
std
and
jmp
xchg
mov
pop
test
jmp
stos
stos
pop
scas
mov
aaa
rcr
lods
(bad)
dec
mov
mov
jmp
pop
sub
cmp
add
imul
push
mov
enter
call
push
movs
sti
mov
pop
jg
push
pop
popa
and
cmps
mov
sar
jne
cmps
push
in
aam
mov
jne
xor
and
pushf
xchg
shl
jp
aam
ins
inc
je
ins
(bad)
mov
fstp
and
sub
mov
dec
or
cmp
add
push
aas
test
into
xor
xchg
data16
cmp
mov
out
push
pop
pop
inc
pop
shr
mov
cmps
mov
mov
cli
mov
(bad)
daa
js
gs
(bad)
cs
icebp
dec
adc
jecxz
std
inc
jno
jb
ins
push
fstp
dec
je
cld
js
ins
call
test
stos
clc
push
and
jge
mov
imul
fisubr
leave
les
stos
out
mov
rcr
popf
push
icebp
shr
ins
js
push
fwait
shr
jecxz
and
test
adc
adc
xchg
ss
add
popa
xchg
jns
cwde
(bad)
sub
mov
fst
repz
frstor
pop
and
inc
test
(bad)
out
stc
jo
xchg
sub
or
mov
jp
dec
cs
inc
adc
shl
sbb
dec
mov
add
shr
or
sbb
adc
inc
test
pop
add
jl
inc
ja
inc
cmp
out
add
rcl
clc
aaa
and
adc
ds
sbb
jns
sti
cmp
push
stos
sub
mov
jae
adc
ins
sub
mov
push
out
mov
jge
iret
(bad)
(bad)
sub
inc
mov
popa
iret
sbb
leave
pusha
stos
xchg
(bad)
and
xchg
je
aas
imul
jbe
pop
add
test
ss
cmp
xchg
mov
lock
inc
in
arpl
dec
pop
push
pop
icebp
call
(bad)
jbe
push
aaa
add
clc
imul
test
xor
movs
imul
leave
cmp
push
push
lds
pop
fnstcw
out
mov
sbb
push
es
add
loopne
xor
cmp
stos
(bad)
cld
scas
jp
lods
lea
mov
sbb
adc
call
add
and
pop
mov
sti
push
or
clc
jbe
clc
push
dec
dec
ds
dec
scas
rol
rcl
xchg
dec
mov
push
cmp
push
push
mov
addr16
push
xchg
and
push
push
dec
movs
outs
imul
pop
and
sbb
or
std
add
jp
jno
push
(bad)
(bad)
pop
xchg
push
sub
jmp
and
pop
in
add
cs
popa
push
or
mov
and
jne
jbe
rcr
dec
add
mov
lods
sub
and
imul
mov
lods
inc
add
add
sahf
or
jmp
dec
inc
xchg
mov
pop
repz
in
cld
xchg
int3
scas
cmps
push
fmul
aaa
mov
(bad)
mov
call
mov
jl
dec
stos
fild
iret
xchg
sahf
xor
add
cmp
lea
xchg
ret
scas
call
pop
cmp
sbb
jnp
sbb
cwde
sbb
pushf
test
aad
mov
jno
add
push
loop
and
leave
or
dec
aaa
cli
and
jnp
aam
xor
movs
inc
and
or
ins
loop
push
mov
mov
inc
mov
out
in
add
add
fwait
int
mov
loopne
imul
pop
pushf
pop
push
fist
call
cmp
sbb
inc
repz
repz
jno
mov
add
enter
inc
mov
add
(bad)
and
loopne
movs
test
gs
sbb
and
(bad)
sar
ds
call
in
add
sub
push
mov
fcomp
scas
cdq
mov
(bad)
xor
aaa
jg
jmp
stos
fcomp
jb
enter
push
pop
mov
push
pop
out
repz
xchg
inc
adc
clc
mov
push
pushf
sub
mov
xchg
adc
pop
sub
jp
jae
out
std
xchg
or
popa
xor
dec
push
xlat
loopne
xchg
lock
sub
or
add
dec
test
xor
outs
aad
jns
outs
push
mov
push
shl
xor
add
mov
push
in
mov
xor
jmp
stos
cmp
dec
mov
int
(bad)
pusha
dec
or
btc
sbb
pop
movs
sbb
es
mov
xor
jle
push
loope
add
sahf
xor
jl
sbb
call
jle
loopne
mov
pop
adc
daa
adc
daa
maxps
adc
lahf
xor
sub
mov
push
cmps
movs
sbb
mov
sub
enter
sub
cmps
push
sub
pop
and
xor
add
repnz
sub
sub
inc
xchg
inc
cmc
jbe
scas
inc
mov
xchg
repnz
lds
dec
das
sbb
jmp
mov
push
xor
cli
inc
or
push
mul
in
das
icebp
sti
mov
push
fldenv
lock
out
call
je
hlt
xor
pop
cmp
fst
popa
xlat
or
enter
neg
mov
sbb
mov
add
and
sbb
inc
mov
outs
cld
xor
das
xor
inc
inc
addr16
in
icebp
into
retf
push
mov
ror
dec
inc
and
jle
pop
aam
xor
inc
and
test
ror
loopne
repnz
xor
(bad)
mov
inc
dec
xchg
or
jge
data16
jp
mov
fbld
mov
push
add
dec
out
xchg
mov
call
sub
jno
adc
dec
aam
jmp
inc
div
cmc
(bad)
push
loope
(bad)
sar
and
pusha
push
adc
mov
ds
into
ss
imul
and
dec
inc
inc
xor
adc
loope
out
dec
mov
rep
cmp
pop
icebp
mov
test
xor
loopne
popa
jns
test
and
push
lods
dec
xor
and
ins
(bad)
dec
repnz
aas
xor
popa
inc
mov
jno
lea
call
xor
sbb
dec
ss
inc
and
js
lods
jp
mov
stos
je
aad
je
sub
test
push
mov
sahf
mov
push
push
je
xor
dec
adc
stc
or
rep
dec
jge
or
sbb
pop
shl
sbb
movs
inc
mov
mul
cmp
and
test
cli
jl
xor
and
(bad)
jmp
rcl
pusha
pusha
clc
mov
mov
sbb
jmp
sub
dec
movs
sub
xchg
pop
dec
out
scas
lahf
cmp
ss
(bad)
dec
push
ret
add
sti
cwde
dec
or
mov
sub
in
pop
jae
jmp
sub
xchg
mov
add
sahf
mov
push
mov
and
inc
test
fnstsw
cmps
inc
sbb
inc
leave
fcmovne
(bad)
mov
sub
add
jmp
sub
sub
in
data16
ins
inc
sti
cmp
inc
aad
adc
lds
push
mov
inc
mov
xor
mov
ror
cmp
add
icebp
xor
xor
sbb
push
mov
mov
pop
stc
rol
pop
push
icebp
xor
pop
or
movsx
sbb
cmp
add
sbb
call
in
xlat
pop
push
call
xchg
test
lock
ins
div
nop
fbld
(bad)
xor
imul
rcl
sti
cmc
pop
retf
pop
xor
jg
mov
int
leave
xchg
mov
je
icebp
sbb
ds
jno
push
pop
cmp
outs
dec
daa
das
inc
retf
jnp
and
jmp
and
retf
mov
mov
fwait
mov
and
sar
mov
mov
sbb
xchg
dec
mov
jge
cdq
push
sbb
and
and
ret
cmp
mov
add
out
and
and
mov
xlat
rol
mov
push
mov
aam
dec
jno
test
cmp
bound
pop
mov
imul
fisubr
pop
mov
in
jno
(bad)
daa
das
retf
rcl
mov
pop
outs
xor
stc
inc
xchg
cwde
pop
bound
push
sub
jmp
mov
mov
stos
mov
mov
cmp
loopne
jae
rcr
rol
jge
xor
je
add
movs
push
pop
mov
dec
jae
adc
loope
inc
test
repz
jmp
sub
mov
stos
xor
inc
dec
lods
outs
push
mov
mov
gs
fcom
mov
and
rol
test
adc
push
(bad)
xchg
fldl2t
not
mov
xor
lea
xchg
dec
and
mov
push
cmps
outs
mov
dec
add
scas
icebp
dec
or
jo
jb
jns
sub
js
push
or
or
mov
mov
fdivr
dec
pusha
mov
outs
push
adc
lock
push
pop
into
outs
(bad)
push
sub
test
bound
pop
(bad)
mov
aaa
push
push
mov
call
pusha
aam
add
cmp
cmp
cli
dec
fisubr
jmp
stc
arpl
pop
push
(bad)
cmp
loop
add
pop
inc
cmp
pop
adc
sub
or
ja
pop
jns
adc
dec
adc
fistp
or
cmp
mov
push
test
jle
and
pusha
xchg
xchg
add
mov
inc
sbb
sub
sahf
add
ja
sbb
gs
not
pop
push
jb
xchg
je
adc
call
call
stos
jb
xchg
push
pop
retf
jmp
jg
das
mov
fstp
out
fstp
cmp
js
cmc
cmp
sbb
fld
outs
pushf
pop
jmp
call
pusha
std
mov
(bad)
mov
mov
sub
aam
add
int3
pop
add
sbb
ins
fcmove
repz
sub
lahf
ins
push
ficom
pop
cwde
movs
int3
adc
aam
pop
cs
xchg
cmp
scas
imul
ins
inc
in
rol
sub
daa
cdq
das
cwde
xor
outs
mov
mov
inc
dec
jnp
mov
fwait
outs
rol
lock
or
dec
fwait
jle
or
push
fadd
xlat
in
and
jo
sbb
ds
call
ins
jge
mov
inc
aas
hlt
inc
cwde
retf
jecxz
mov
ins
and
mov
lods
sbb
aam
mov
and
hlt
push
addr16
into
cmp
pusha
mov
mov
pop
push
add
outs
shl
pop
shr
cmp
int3
sub
retf
add
cpuid
pop
dec
adc
(bad)
(bad)
cdq
into
dec
sbb
mov
push
pop
sbb
add
movs
push
jmp
pop
repz
test
popa
cdq
inc
cwde
imul
pop
push
sbb
mov
add
sbb
(bad)
mov
inc
ror
dec
sub
add
sbb
push
xchg
lods
sub
jl
xlat
dec
pop
popf
or
stc
pop
out
adc
loop
ss
mov
out
stos
retf
mov
sahf
das
add
mov
adc
psraw
push
xchg
jno
jns
push
cmp
ins
aaa
in
in
das
xor
mov
int3
jne
and
aas
pop
push
rcl
xchg
jle
adc
jmp
sbb
es
js
adc
mov
ins
xor
call
xchg
inc
mov
push
inc
sub
mov
push
rcr
hlt
add
mov
je
dec
scas
xor
daa
adc
dec
sbb
adc
retf
mov
and
and
ret
push
clc
leavew
enter
mov
nop
retf
lahf
cli
pop
mov
jnp
adc
inc
mov
arpl
xor
int3
popa
inc
add
(bad)
push
sahf
loop
sub
daa
fimul
enter
cs
rcl
in
mov
pop
js
ret
adc
add
(bad)
dec
ja
or
repnz
scas
out
jle
add
and
out
mov
call
cdq
or
imul
cmp
int
iret
dec
dec
outs
or
clc
cli
(bad)
rcl
dec
mov
enter
retf
and
sub
xchg
and
adc
les
shl
js
xor
cmp
fimul
lods
pop
dec
push
sahf
push
push
jmp
(bad)
scas
inc
and
dec
push
inc
cmp
rcr
cmc
mov
push
int3
fsub
ficomp
cld
cmp
xor
ja
movs
pop
movs
xor
mov
cmp
nop
(bad)
rcr
cwde
mov
fimul
fs
jns
int3
xchg
dec
mov
mov
pop
jne
dec
out
cmp
popa
jmp
scas
out
dec
sbb
es
push
loope
adc
add
inc
inc
xchg
and
cld
adc
xchg
addr16
sub
cmp
pop
fdivr
xchg
push
xor
popa
cmps
test
leave
test
movs
outs
sbb
cmp
pop
das
bound
fcom
(bad)
ss
xchg
cli
lods
fistp
xchg
adc
hlt
xor
pop
or
retf
rcl
fld
imul
push
xchg
pop
push
cmp
sbb
mov
cmps
jecxz
add
or
mov
cwde
xchg
push
inc
sbb
pop
std
dec
mov
adc
or
scas
je
add
or
add
sbb
and
jbe
test
sub
adc
add
repnz
pop
jg
inc
es
adc
adc
jmp
lock
movs
pop
sahf
les
xchg
jp
ret
fcmovnu
or
aad
fwait
sbb
lods
shl
cdq
shl
pop
lods
repz
add
jo
dec
retf
add
data16
lds
stc
pusha
bound
jno
out
cmp
adc
add
or
into
retf
push
cmp
imul
push
add
dec
jecxz
jmp
jp
push
gs
adc
sbb
lock
icebp
fsubr
fcom
xchg
ja
hlt
into
adc
ds
call
rcr
(bad)
neg
mov
cmp
arpl
shl
mov
iret
out
xchg
(bad)
inc
jg
add
stos
sbb
fadd
push
mov
sar
out
push
jp
in
mov
ins
stos
ror
or
xor
pop
add
ficomp
sub
mov
cmp
aam
sub
xchg
adc
dec
ds
xchg
mov
add
lods
test
pop
movs
fs
out
out
fchs
fs
out
pushf
dec
scas
mov
fwait
jmp
cli
fs
cmp
push
cmp
clc
cmps
xchg
inc
mov
cmp
stos
push
lods
leave
mov
cmp
cmp
test
mov
cmp
or
loop
cmc
ins
xor
aas
sub
inc
ja
popa
ins
fcomp
mov
aad
popa
adc
push
cmc
push
sub
dec
icebp
mov
cmps
aaa
stos
mov
jmp
jecxz
inc
and
or
mov
je
leave
test
cld
mov
inc
fld
test
repnz
lods
add
std
repnz
xor
push
call
std
pop
jl
(bad)
pop
pop
icebp
test
int3
xor
in
sar
lahf
push
ins
cmp
test
adc
inc
push
adc
xor
push
and
inc
sbb
adc
push
mov
mov
sar
test
jnp
sub
inc
popa
jnp
aad
mov
imul
ins
sbb
clc
cmp
inc
pop
jle
jno
inc
push
lahf
jno
mov
adc
dec
loope
add
inc
jbe
sahf
add
iret
clc
test
mov
(bad)
stos
jne
or
fwait
mov
out
mov
adc
not
add
(bad)
xrelease
and
test
not
add
xchg
and
sub
(bad)
mov
pop
push
mov
cli
stos
xchg
test
or
dec
ret
les
jmp
lods
ret
sub
ins
test
pushf
ror
mov
inc
cmp
js
leave
add
xchg
adc
xchg
inc
add
cld
mov
mov
loop
jl
cli
shl
or
ret
or
(bad)
(bad)
loop
fwait
inc
es
scas
call
pop
jge
sar
jg
ret
mov
mov
xor
push
hlt
mov
cmps
stos
xlat
loop
and
mov
mov
jnp
push
xor
imul
(bad)
dec
mov
lds
cmp
mov
cmp
sar
sub
mov
test
cmp
fst
mov
dec
adc
je
push
xchg
jp
int3
hlt
adc
xor
out
iret
out
cli
dec
fsub
and
int
inc
sub
xor
adc
inc
sbb
popa
sti
inc
push
xor
pop
xor
fwait
inc
pop
arpl
imul
fisttp
sbb
jl
neg
movs
(bad)
sbb
inc
inc
mov
sbb
xchg
xlat
push
sub
add
das
lahf
sub
cs
jmp
out
bound
mov
push
scas
enter
cmps
mov
dec
adc
mov
ret
sub
xchg
dec
and
sub
aad
or
cmp
ror
aaa
add
sbb
cwde
mov
dec
nop
sbb
or
fldenv
ins
jl
imul
mov
mov
xchg
mov
scas
adc
mov
mov
lahf
mov
mov
jns
out
les
call
outs
jp
les
call
mov
add
add
adc
mov
and
add
mov
mov
sub
inc
dec
jns
adc
dec
or
cdq
mov
mov
dec
and
fwait
mov
fld
popa
daa
retf
hlt
enter
scas
push
or
or
rcr
jns
lds
xchg
mov
xchg
repnz
movs
xor
adc
sbb
push
add
fwait
xor
sub
dec
and
xor
pop
and
in
into
push
test
fld
push
sbb
bound
adc
add
adc
sbb
xlat
cmp
call
dec
adc
xor
add
mov
jmp
aam
cmps
and
cmc
imul
push
jb
jmp
arpl
and
cmps
popa
test
jg
and
gs
xchg
js
cs
ffreep
push
int
xor
cmc
mov
pop
popa
dec
push
test
inc
mov
cmp
push
jbe
push
cld
es
test
sbb
inc
cmp
push
and
add
mov
inc
inc
jbe
cs
(bad)
popa
xchg
out
data16
xor
xor
stos
inc
popf
push
scas
bnd
cmp
je
cmps
add
pop
stc
xchg
dec
shr
repnz
push
sahf
or
pop
fstp
pusha
adc
test
cld
pop
pop
mov
xchg
xor
das
push
neg
loop
inc
and
in
dec
push
pop
ret
sub
inc
adc
out
pushf
nop
sar
cmp
jo
mov
scas
mov
lods
loope
les
add
retf
ret
sub
jmp
(bad)
fst
cs
cmp
leave
mov
xchg
pop
sbb
jno
cdq
leave
add
push
mov
js
jmp
add
ror
and
sub
cmp
sub
(bad)
ins
sbb
dec
cs
mov
xchg
and
cmp
push
jmp
mov
scas
push
jle
inc
addr16
adc
shl
mov
adc
push
inc
(bad)
fadd
stos
iret
dec
in
inc
mov
mov
xor
jl
out
sbb
cmps
(bad)
not
nop
(bad)
shl
mov
mov
and
cdq
adc
xor
mov
lock
xchg
int3
xchg
outs
sbb
and
dec
js
popa
into
xor
addr16
mov
push
bound
cs
adc
les
sbb
push
cli
mov
ins
push
das
ret
mov
adc
lahf
xor
xchg
sbb
jo
xor
dec
sti
aas
scas
or
mov
call
mov
ss
std
xor
push
mov
adc
xchg
mov
or
fmulp
das
lods
fnsave
mov
mov
cmc
imul
es
ins
or
(bad)
mov
aad
pop
push
leave
outs
and
push
das
and
int3
push
sbb
pop
jno
js
(bad)
aaa
push
mov
or
(bad)
fldenv
fs
cmps
inc
ds
int3
jae
fsubr
jle
aad
dec
int
aas
std
pop
xchg
push
ja
(bad)
xchg
in
mov
xchg
jmp
add
les
pop
dec
xor
push
pop
add
push
adc
xor
sbb
inc
pop
mov
push
xchg
sub
xchg
aas
cmps
mov
and
or
xlat
out
add
fcmove
mov
xchg
and
mov
mov
dec
retf
add
push
jns
cmp
fcomp
adc
lea
xor
fidivr
aam
xor
mov
or
xchg
int3
jae
test
stc
stos
mov
push
pop
shl
repz
xchg
dec
push
push
cwde
cmp
jo
sub
gs
scas
xchg
xor
add
enter
sub
test
jnp
cwde
or
inc
repnz
xchg
mov
lds
repnz
test
pop
(bad)
loope
test
sub
add
pop
xlat
xchg
mov
adc
jecxz
retf
dec
xchg
cs
ins
pushf
pop
push
and
fnstenv
adc
nop
push
and
pop
outs
mov
rcr
dec
icebp
jge
and
stos
iret
push
je
movaps
and
call
and
mov
mov
xchg
push
out
mov
mov
lock
shl
pushf
xchg
sbb
dec
ror
in
test
push
pop
xor
ds
cmp
mov
mov
adc
adc
mov
in
imul
jp
and
pop
mov
hlt
mov
outs
add
jo
push
and
xchg
outs
xor
ds
xchg
add
sti
xor
sti
lods
push
pop
mov
stos
fisttp
sub
push
pop
and
mov
xchg
in
bnd
dec
pop
fistp
sbb
push
pop
pop
mov
mov
enter
inc
jmp
pop
or
leave
or
rcl
adc
mov
sbb
(bad)
loop
gs
pop
cli
cmp
inc
popf
cs
sbb
sub
pop
and
out
iret
shl
popf
not
call
mov
and
cwde
cdq
sub
pop
stos
add
fidivr
jae
jns
jl
and
sahf
mov
test
movs
mov
fneni(8087
jg
mov
js
loopne
out
mov
scas
fidiv
mov
icebp
outs
cwde
sub
repz
call
dec
aas
inc
(bad)
cmp
jne
mov
popa
pop
pop
or
cmp
cmc
inc
mov
out
jmp
leave
jp
cmp
sbb
int3
inc
sahf
dec
aas
mov
cmc
stos
pop
into
in
sub
sbb
and
push
fistp
mov
retf
int
adc
gs
mov
fnstcw
cmp
sar
test
mov
sbb
repz
sub
sub
cdq
lock
in
mov
cmp
mov
jmp
xor
ret
test
(bad)
and
in
je
add
lods
shl
int
popf
sub
outs
add
(bad)
xchg
dec
repnz
das
test
jno
pop
inc
fs
test
xor
xor
or
cdq
es
shl
sbb
add
mov
or
stos
imul
mov
cmp
push
push
xor
clc
sub
lea
outs
pushf
ins
sbb
sti
and
cmp
aaa
sub
test
or
fisub
mov
dec
pusha
(bad)
xchg
in
cmp
loope
in
jo
lods
ret
mov
mov
mov
test
dec
mov
jo
lds
and
nop
jmp
retw
and
loop
sbb
cwde
test
push
movs
or
xor
imul
xchg
inc
pushf
rol
xor
je
mov
mov
lods
inc
mov
fmul
jae
scas
push
jecxz
cmp
fcomip
fisttp
ins
jbe
(bad)
sahf
sti
or
call
out
repnz
nop
or
and
cmp
jb
aas
je
jo
xchg
push
add
push
add
fldenv
std
out
mov
push
mov
xchg
sahf
test
jnp
cmp
push
jle
icebp
pop
sbb
stos
jbe
mov
sbb
mov
addr16
cmps
aad
inc
inc
push
and
je
inc
call
xchg
cmp
inc
lock
jge
mov
rcr
add
les
adc
pop
nop
mov
fisub
leave
imul
push
fnsave
in
inc
mov
popf
pop
retf
mov
push
jge
lahf
mov
mov
iret
sbb
ret
or
das
sbb
fidivr
or
cmp
mov
jns
ss
and
xlat
sar
inc
dec
push
arpl
pushw
(bad)
jg
fs
jns
ds
sbb
int
push
xchg
ins
rdtsc
outs
rcl
push
std
pop
push
aaa
loope
sub
adc
ds
cmps
pusha
pop
fdiv
push
inc
test
int3
inc
cmp
shr
add
aas
or
cwde
ret
loopne
div
pop
push
jge
sub
mov
mov
std
pop
pop
mov
das
dec
or
push
mov
imul
cli
mov
ja
or
sub
push
jmp
jne
sbb
or
ins
xor
xor
dec
and
adc
sbb
call
int3
mov
loop
xor
out
and
mov
(bad)
in
sbb
dec
or
out
mov
push
fxch
popa
xchg
mov
pop
push
mov
dec
ins
cmp
je
add
inc
adc
adc
pop
inc
loope
and
loop
outs
les
outs
arpl
mov
sub
push
or
lahf
inc
and
xchg
mov
test
ja
outs
ds
and
xchg
ins
cli
adc
inc
push
xor
sub
pop
jg
pop
mov
push
jecxz
mov
aaa
out
adc
cmps
popa
adc
out
jg
push
mov
pop
jno
pop
mov
pop
push
in
sub
arpl
fidivr
push
pop
and
fldcw
pop
cs
movs
xlat
repz
mov
jnp
test
xchg
jb
imul
sub
pand
sbb
mov
jmp
fldcw
jne
lock
(bad)
adc
mov
movs
enter
inc
je
mov
inc
mov
aas
cmp
mov
xor
or
cmc
xchg
(bad)
in
jno
pop
or
push
nop
add
ins
xor
mov
sbb
add
sti
add
bound
xchg
iret
inc
ret
pop
xchg
in
sub
test
lock
aaa
jno
enter
ja
call
cmp
inc
fnclex
icebp
push
bound
and
push
add
push
push
adc
push
xchg
aad
test
push
sbb
fist
push
clc
(bad)
mov
mov
out
int3
sub
fs
xor
test
mov
ret
and
xchg
jecxz
loop
mov
inc
xor
pusha
xchg
jns
inc
jp
cmp
out
clc
mov
xor
add
mov
loope
add
psrad
out
pop
arpl
sub
pop
pop
cmp
jg
sub
and
stc
rcl
lock
pop
call
mov
pusha
jmp
fisubr
push
aam
inc
repnz
adc
pop
loop
add
movs
adc
jae
mov
repz
sub
popa
iret
adc
and
retf
retf
xor
mov
sub
push
cmp
sub
xor
fadd
loopne
ud0
mov
(bad)
add
mov
std
xchg
push
jecxz
cmps
mov
frstor
sub
call
cld
mov
ds
push
dec
inc
jae
rcl
repnz
jge
stc
test
mov
mov
adc
inc
repz
pop
and
ficomp
dec
shl
ret
jnp
mov
nop
jge
js
sub
dec
into
ins
aad
mov
imul
call
inc
or
pop
int3
xchg
mov
and
push
sti
dec
dec
xchg
es
xor
scas
pop
jge
jp
mov
push
cmps
sbb
jmp
clc
xor
das
pop
inc
or
(bad)
movs
stos
xor
pop
and
popa
push
repnz
pushf
jb
js
into
sbb
adc
movs
push
jne
out
out
push
cmp
addr16
pop
cmps
shl
mov
mov
imul
pop
imul
lods
fadd
mov
lods
mov
pop
out
stos
dec
jg
imul
or
xlat
jb
scas
xchg
mov
das
pop
lods
push
fldenv
pop
mov
daa
jle
sub
iret
jb
jmp
sbb
(bad)
adc
neg
pop
call
or
bnd
ret
xchg
stos
mov
sbb
pop
sub
aaa
mov
pop
inc
mov
adc
jns
fadd
and
dec
ss
and
test
sub
outs
shl
call
xchg
cmp
mov
in
adc
addr16
call
mov
mov
add
hlt
inc
jecxz
sub
stc
pop
shl
loopne
jl
(bad)
jle
jl
(bad)
cmps
push
nop
call
jns
mov
(bad)
popf
mov
or
xor
jns
out
jg
in
jmp
sar
test
ret
test
sbb
mov
(bad)
jecxz
mov
pop
xchg
push
leave
repnz
adc
movs
popa
jmp
sahf
pusha
mov
xor
lock
lds
scas
inc
popa
mov
or
popf
jge
clc
data16
dec
ror
repz
pop
pop
mov
sub
dec
push
imul
adc
jbe
sub
jmp
sub
aaa
push
cmp
pushf
aad
stc
fcompp
add
mov
dec
outs
xor
or
call
sbb
icebp
cmp
or
sti
js
out
mov
arpl
push
jb
mov
or
xchg
clc
xchg
stos
mov
add
popa
lock
sub
push
outs
cwde
call
cmp
cmp
mov
pusha
cdq
pusha
fimul
int
add
repnz
ficom
xchg
outs
(bad)
pop
jmp
xor
out
inc
mov
cmp
adc
je
pop
scas
push
push
or
rol
mov
inc
call
adc
fwait
and
cmp
es
mov
ss
ret
dec
aam
dec
and
mov
push
stos
iret
std
fs
lsl
push
mov
xor
ins
xchg
jmp
fild
cld
xor
cmc
jnp
outs
pop
add
cmc
pop
or
enter
add
addr16
inc
and
lods
jae
jmp
mov
leave
inc
cmp
or
or
pop
iret
xchg
and
shl
push
mov
(bad)
cmp
inc
aaa
mov
inc
or
retf
es
cmp
int3
push
xor
ja
aas
mov
sbb
(bad)
out
enter
push
sub
mov
add
ffreep
mov
sbb
cwde
add
(bad)
jl
xor
sub
adc
sub
adc
xchg
stc
ins
imul
cs
cmp
std
sub
or
sub
movq
ret
sti
shr
xlat
outs
test
xor
in
outs
movs
std
jne
xor
xchg
fmul
and
lds
mov
adc
ss
mov
leave
(bad)
mov
mov
inc
sub
push
jns
lock
pushf
inc
adc
pop
jno
dec
dec
push
push
jg
fdivr
or
fiadd
je
mov
jo
and
stos
fidiv
movs
mov
nop
das
dec
cs
out
mov
gs
mov
mov
sbb
scas
pop
ret
stos
test
out
sub
seta
and
jl
xchg
add
mov
test
lahf
xchg
out
div
adc
stos
jg
cs
adc
adc
jb
inc
adc
mov
nop
shl
or
ds
or
and
aad
mul
xor
pop
das
xor
lds
pop
dec
in
popf
pop
pop
js
sbb
into
ret
mov
fmul
imul
les
lahf
mov
inc
test
jmp
jp
adc
das
adc
cli
xchg
push
popa
fsubr
aam
je
xor
mov
mov
dec
mov
and
mov
loop
in
(bad)
ficomp
test
retf
xor
retf
retf
mov
and
adc
(bad)
and
or
add
adc
sti
dec
ins
jb
imul
fs
pop
jno
mov
leave
jno
imul
mov
cmp
pop
xor
push
sbb
xchg
lahf
daa
iret
jb
lods
mov
scas
test
sbb
outs
adc
sub
inc
jge
mov
ja
mov
cli
repnz
shr
xor
mov
add
clc
pop
fbld
(bad)
outs
push
hlt
cli
sbb
jo
rcl
inc
mov
add
in
sbb
jne
adc
test
inc
jecxz
mov
dec
xchg
imul
pop
dec
mov
loopne
test
adc
fimul
ret
dec
jbe
inc
and
jbe
cmps
jnp
sbb
cmp
cmp
loop
rcl
pop
mov
add
clc
test
push
call
xor
push
aam
push
es
or
inc
jge
xchg
adc
and
fcom
pop
mov
mov
mov
pushf
nop
in
push
lea
push
fbstp
movs
xchg
test
mov
dec
(bad)
or
pop
mov
xchg
cmp
das
enter
daa
push
(bad)
es
xor
mov
in
ror
aam
and
jmp
cmp
fild
pop
inc
and
das
mul
retf
xchg
dec
loopne
retf
xor
or
sbb
nop
adc
adc
jmp
or
into
cmps
or
(bad)
(bad)
bnd
call
outs
movs
ja
add
and
stos
xrelease
adc
add
in
call
mov
xchg
aam
je
(bad)
loopne
xor
add
or
(bad)
retf
sub
movs
test
pop
outs
or
inc
mov
or
(bad)
xor
shr
(bad)
lock
inc
les
dec
leave
arpl
inc
dec
pop
dec
add
jmp
in
and
cmc
cmp
or
out
mov
repnz
jbe
rcl
mov
clc
xchg
mov
xchg
pop
push
cdq
ins
test
and
sti
repz
ss
sub
retf
rcr
iret
mov
pop
sub
adc
rcr
cld
xlat
and
inc
out
(bad)
arpl
cmc
or
add
or
jmp
hlt
iret
cdq
and
jg
dec
leave
(bad)
mov
xchg
mov
or
stc
mov
mov
xchg
cdq
mov
mov
mov
sub
dec
xchg
sti
leave
pop
ja
cs
or
push
xchg
xlat
imul
mov
jmp
(bad)
ficomp
jne
loope
lds
in
call
inc
sub
stos
adc
adc
adc
jp
sahf
lea
cmp
jmp
ret
mov
jbe
mov
fcomp
outs
dec
repnz
cli
dec
test
aaa
jl
jo
sbb
mul
and
or
or
ret
imul
lds
add
std
clc
jecxz
pop
xchg
ins
cmps
push
pop
pop
clc
int3
std
pop
pop
std
jecxz
cdq
pop
aaa
inc
pop
dec
inc
nop
sbb
jnp
aaa
xchg
sbb
stc
scas
mov
or
jg
sahf
in
stc
out
inc
out
rdmsr
loopne
mov
sub
lds
dec
mov
mov
xor
and
pop
and
fldenv
adc
add
jle
xchg
pop
or
ror
cdq
pop
rcr
shl
cmp
movs
iret
imul
mov
push
sti
cmp
rol
fsubr
xchg
cmps
adc
cwde
cs
sbb
add
jmp
cli
xor
mov
(bad)
xchg
hlt
jno
jne
inc
jno
fs
cmp
loope
xor
lahf
arpl
pusha
in
movs
push
fdivr
and
mov
pop
and
lahf
mov
loop
add
call
test
push
mov
cmp
xor
or
inc
into
lods
imul
mov
jle
sub
ds
outs
std
pop
sub
loopne
sbb
mov
push
js
cs
fcompp
jmp
into
xor
or
aad
sbb
mov
add
push
fisttp
dec
adc
movs
fmul
inc
xchg
clc
push
sbb
loope
jae
xchg
inc
mov
ds
rcl
test
dec
sub
jns
xchg
leave
xchg
addr16
pop
lahf
pop
outs
jge
xor
jns
mov
mov
movs
mov
mov
xchg
aas
push
ins
jecxz
dec
and
fisttp
lds
pop
mov
cmp
mov
out
pop
das
and
sub
jmp
mov
mov
retf
jne
std
retf
sbb
mov
fimul
stos
div
sub
mov
push
inc
jge
les
repz
add
adc
mov
cmp
mov
mov
mov
sbb
retf
rcl
shl
retf
cmc
sbb
and
xchg
inc
mov
or
rol
sub
into
pop
jae
aad
in
repnz
inc
mov
cmp
aaa
jl
mov
call
es
pop
loopne
and
ret
inc
repnz
jl
int
lds
scas
leave
mov
ss
addr16
cs
sbb
aad
loop
inc
(bad)
mov
pop
inc
icebp
fdiv
inc
lds
fcmovu
cwde
pop
ds
adc
cmp
xchg
dec
lea
push
cmps
sub
jae
scas
inc
add
jns
mov
out
nop
outs
imul
fcom
int
fidivr
sub
pop
or
stos
les
cmp
in
mov
mov
arpl
jae
xchg
fnsave
mov
iret
pop
ss
out
cmp
dec
(bad)
cmp
jns
bndldx
sub
adc
dec
add
mov
adc
and
or
fimul
inc
(bad)
pop
adc
or
cld
stos
xchg
mov
jg
mov
mov
icebp
xor
mov
mov
scas
ret
add
aad
in
xor
jns
ficom
addr16
ret
cmp
iret
retf
and
mov
call
cld
push
lahf
jnp
xchg
lods
out
test
mov
mov
ret
test
call
sbb
mov
dec
or
and
dec
xor
imul
push
es
movs
jb
or
(bad)
movs
jmp
sbb
addr16
enter
retf
adc
dec
sbb
inc
fldcw
jnp
adc
mov
retf
push
add
loop
adc
daa
(bad)
push
repz
mov
data16
lahf
test
dec
ss
movs
sbb
and
push
add
fwait
cmp
sti
mov
inc
jle
dec
mov
loopne
out
mov
adc
ja
mov
sub
dec
mov
or
mov
mov
xchg
shr
mov
cld
ficomp
xchg
inc
or
das
mov
cmp
adc
out
xchg
(bad)
icebp
ins
and
into
xchg
push
push
(bad)
cmp
in
cmp
inc
popf
ins
cmps
in
scas
inc
or
mov
lods
mov
jl
jmp
sbb
rcr
rcr
lods
call
pusha
inc
inc
xor
rcr
adc
pop
or
xchg
mov
xchg
sbb
scas
scas
aaa
jo
jbe
jno
and
sbb
in
pop
rol
ins
and
in
movs
xchg
pusha
aaa
add
ror
inc
popa
(bad)
loop
jae
mov
adc
cdq
xchg
mov
aad
or
mov
scas
mov
mov
dec
pop
std
iret
push
loop
jge
imul
push
retf
inc
pop
aad
ins
test
push
xchg
(bad)
aam
mov
ret
cmp
pushf
mov
out
repnz
cli
cs
adc
push
data16
test
pop
(bad)
push
fxch
mov
xchg
dec
mov
xor
push
fisub
xchg
jmp
in
push
jmp
pop
pop
stos
cmp
sbb
pop
sub
cmc
stos
mov
sub
and
inc
xchg
loopne
jl
call
call
jl
ret
sub
std
aaa
mov
ja
call
push
mov
inc
lds
fiadd
pop
xlat
mov
pop
xchg
stc
and
jnp
in
repnz
fdivr
sbb
ror
xchg
inc
aam
fimul
xor
enter
xchg
dec
pop
out
daa
mov
lods
or
dec
jmp
adc
inc
xchg
sub
not
je
(bad)
adc
and
pop
mov
lea
fsub
pop
movs
jp
mov
adc
call
stc
jno
xchg
jmp
shr
cmp
out
ja
iret
dec
out
shl
sbb
rcr
xchg
outs
out
or
sahf
jnp
or
aam
sti
nop
xchg
pop
xchg
fst
stos
mov
jns
or
inc
push
and
xor
inc
addr16
jae
pushf
adc
into
lods
mov
xor
sub
arpl
dec
data16
imul
inc
jmp
sbb
pop
arpl
jl
push
cmp
and
popf
xchg
ins
inc
out
mov
push
(bad)
sub
enter
ficomp
mov
adc
std
retf
movs
pushf
in
cmp
mov
repnz
ret
(bad)
ins
and
mov
enter
popa
fsub
aam
fistp
or
test
push
cwde
and
push
(bad)
jle
loope
mov
lods
adc
cmp
sar
ror
mov
std
enter
js
ins
fist
and
push
pop
or
cmp
mov
cmp
in
mov
fist
xor
cmp
jmp
sub
outs
fcomp
push
(bad)
adc
mov
or
ficomp
aas
repz
and
jno
sahf
or
sub
adc
sti
dec
leave
and
outs
pop
mov
lods
cs
jb
sbb
fiadd
in
push
or
dec
and
loopne
sbb
push
ret
shl
dec
sub
dec
std
hlt
lahf
sub
int
jae
sahf
or
int
gs
(bad)
daa
cmp
div
cdq
and
fdivr
inc
mov
or
adc
out
stos
mov
xor
mov
pminsw
inc
loop
jmp
sbb
push
xor
popa
xchg
push
shr
pop
das
mov
or
jge
xchg
fwait
leave
iret
pop
ja
mov
sbb
sbb
test
pop
or
rep
pop
cmps
inc
jg
push
adc
push
and
aas
mov
jle
dec
ss
ja
in
sbb
and
fcomp
arpl
loope
sbb
jne
mov
mov
repz
push
sub
div
xor
fld
icebp
add
sbb
dec
fmul
xor
scas
lods
repz
lods
xor
retf
ds
hlt
clc
dec
scas
test
paddb
(bad)
call
(bad)
lock
and
cli
cmp
and
imul
sub
mov
adc
pop
rcr
test
or
into
xchg
xchg
jb
fcmovne
push
shl
popf
sbb
pop
adc
ja
and
into
sbb
aaa
sbb
sti
in
cwde
mov
dec
jle
sub
push
enter
test
dec
mov
mov
lock
push
mul
mov
test
add
add
dec
and
pop
outs
and
icebp
loope
cli
cld
popf
icebp
jo
adc
popa
push
in
adc
and
idiv
sahf
das
(bad)
pusha
or
scas
push
jp
inc
and
or
out
jmp
out
adc
ins
(bad)
cdq
movzx
add
sub
jp
test
pop
icebp
sub
addr16
call
lock
push
or
rol
std
ror
loope
mov
inc
mov
fisttp
push
ins
fwait
test
mov
mov
fnsave
or
mov
adc
sub
pop
xor
imul
and
pop
push
rcr
xchg
xor
or
scas
add
es
enter
push
push
in
pusha
xchg
push
fld
rol
xor
and
out
pop
push
test
and
mov
jnp
mov
lock
mov
int
stos
js
int
pusha
add
repnz
(bad)
cmp
adc
mov
ins
retfw
mov
repnz
enter
inc
mov
jbe
imul
ins
rol
(bad)
fs
jecxz
lock
(bad)
mov
sbb
popf
fnstsw
sub
cdq
xchg
push
jmp
fcomip
fdivr
stc
dec
pop
mov
mov
or
mov
in
test
(bad)
dec
and
lahf
leave
jo
jmp
fisubr
mov
mov
cmp
adc
repz
call
xchg
dec
shl
lods
ds
xchg
cmc
test
pushf
sub
jp
sub
outs
pushf
loopne
jmp
sahf
pushf
pop
test
dec
sar
xchg
adc
inc
sbb
sbb
loopne
sbb
xchg
imul
fwait
ret
test
sub
mov
cs
test
push
dec
sub
loope
aam
(bad)
mov
(bad)
test
ds
idiv
jbe
mov
jmp
and
in
add
jnp
(bad)
lods
adc
xor
(bad)
adc
clc
aad
xchg
jnp
std
rcr
retf
mov
jmp
add
xchg
das
jo
call
jne
stos
jbe
sub
cmps
or
(bad)
dec
dec
movs
push
jno
shl
jo
ret
push
dec
jae
aad
push
mov
popf
xchg
push
pop
leave
push
in
mov
outs
stos
rcr
push
mov
js
repz
loop
in
(bad)
pop
mov
(bad)
cmc
scas
adc
or
mov
bound
shr
adc
call
inc
adc
cmps
mov
popa
sbb
and
mov
mov
ror
popf
shl
add
xchg
mov
sbb
cmp
shl
jb
leave
mov
xchg
add
xor
mov
dec
inc
push
outs
mov
mov
sti
jne
inc
es
inc
ss
clc
in
fidiv
cmps
in
sbb
ficomp
shl
leave
outs
icebp
pop
or
call
pop
loope
push
popa
mov
dec
pop
imul
imul
push
pop
mov
mov
sub
stos
icebp
shl
stos
(bad)
(bad)
add
add
inc
(bad)
(bad)
push
xor
in
(bad)
lahf
fild
mov
mov
xchg
fsubrp
inc
inc
int
clc
lds
cwde
fldcw
retf
mov
mov
pop
lods
inc
cmc
in
fidiv
les
mov
and
cwde
mov
mov
sub
adc
popa
popf
lock
les
push
popa
xchg
push
repz
sahf
mov
pop
popf
inc
sub
add
stos
in
sub
pop
jbe
mov
call
or
imul
ror
fiadd
fdiv
je
pop
inc
scas
jmp
bound
repz
loope
and
or
jne
jb
lea
pop
sbb
shl
jmp
lods
jns
fwait
pop
lock
fisttp
jbe
mov
aad
adc
add
(bad)
jmp
jmp
or
(bad)
cli
iret
jae
lock
jl
cmp
in
xchg
imul
outs
(bad)
cmp
lahf
mov
mov
cs
lahf
mov
mov
mov
sbb
sbb
lock
mov
std
movs
jnp
fsubr
loopne
aam
mov
sbb
out
lea
ins
mov
inc
and
repz
sbb
repz
xchg
popa
pop
jmp
repz
and
add
sbb
mov
jmp
clc
inc
xchg
mov
sbb
xor
clc
push
aas
xor
mov
xchg
mov
adc
xor
push
mov
stos
inc
push
inc
ja
sahf
cmp
paddsw
mov
shl
test
in
mov
jae
dec
mov
inc
adc
push
fwait
pop
ret
hlt
cmp
and
or
ja
adc
mov
mov
dec
fild
push
bound
ror
out
pop
fdivr
jmp
fcomp
fisttp
into
mov
cli
(bad)
cld
xchg
pop
dec
repz
pushf
adc
dec
xor
adc
mov
bound
test
pop
lahf
fs
adc
(bad)
mov
(bad)
mov
add
push
add
pop
js
mov
push
leave
jmp
mov
jmp
fdiv
xchg
fild
sar
sbb
enter
outs
test
test
adc
shl
sub
shr
shl
inc
shl
je
pop
rcl
or
xor
je
mov
sub
daa
cmp
pop
out
mov
xchg
mov
mov
add
xchg
sbb
mov
pop
or
div
pop
iret
ja
out
pop
sub
int
xor
and
and
dec
stos
mov
jge
mov
je
inc
outs
mov
xor
adc
fcmovnbe
vmovups
jno
cmp
jne
cmp
sub
jl
add
test
mov
in
not
or
ins
fadd
add
cmc
pop
cwde
mov
aam
in
hlt
ret
jp
dec
xchg
jle
jns
inc
push
leave
icebp
iret
dec
int
sbb
inc
popf
idiv
add
sahf
mov
xchg
push
or
mov
sbb
mov
adc
loope
movs
adc
je
stos
(bad)
jge
mov
cs
aam
pop
mov
push
pushf
outs
lock
into
dec
aas
repnz
out
rcl
mov
dec
shl
jmp
jle
scas
mul
jmp
das
xchg
sub
jl
jne
inc
mov
retf
(bad)
ds
mov
and
xor
push
or
movs
lods
mov
jno
and
add
push
cmc
push
movs
push
push
cwde
xor
inc
hlt
in
lahf
jp
ins
inc
(bad)
dec
js
jo
inc
dec
sbb
mov
leave
jne
xchg
lea
jnp
arpl
cmp
pop
ror
pop
retf
ins
inc
xor
dec
mov
cld
mov
cmp
out
call
xchg
fsub
retf
xor
popf
jmp
mov
cmps
jecxz
push
(bad)
(bad)
jns
es
jmp
cmp
mov
push
adc
sub
and
dec
(bad)
jns
jge
gs
push
aas
inc
mov
xor
mov
inc
push
fist
cwde
pop
adc
loop
pop
rcl
cwde
retf
or
jle
sub
jecxz
or
adc
jnp
loop
pop
fist
jae
lods
bound
add
cwde
fcom
dec
idiv
sbb
gs
xchg
test
imul
lahf
mov
jl
or
sbb
pop
xchg
mov
mov
add
and
loope
popa
test
inc
mov
cwde
add
lahf
mov
rcl
or
add
outs
inc
mov
out
adc
sbb
mov
mov
mov
jbe
dec
push
loope
dec
ins
bnd
nop
hlt
xchg
clc
mov
out
push
pop
jle
jmp
fist
mov
fsub
out
aam
arpl
(bad)
sbb
mov
not
mov
mov
out
xlat
push
pop
and
jae
bound
xchg
adc
sub
inc
adc
outs
sbb
cwde
rcl
popf
inc
fnsave
and
(bad)
jmp
leave
mov
mov
mov
add
mov
mov
lahf
xor
fdiv
dec
jge
outs
les
dec
call
sbb
test
push
mov
push
add
fld
inc
repnz
repz
call
cdq
and
and
not
ds
test
xor
loope
shl
test
pop
stos
test
int3
pop
push
xor
daa
lahf
pop
ret
hlt
scas
sub
sub
jmp
ja
push
cmp
sbb
stc
jne
mov
out
and
cmps
pop
lea
push
out
outs
cmps
add
fnstenv
(bad)
pop
dec
(bad)
mov
fdivr
icebp
xchg
loopne
(bad)
ja
arpl
xor
jge
lds
pop
mov
add
test
pop
mov
test
lock
xor
push
dec
mov
jno
(bad)
mov
bound
pop
sbb
jno
test
adc
cld
sar
test
sbb
loop
and
pusha
cmps
mov
add
das
mov
retw
call
or
out
(bad)
push
test
ja
mov
lock
ins
jge
sti
mov
or
pusha
ds
add
sti
gs
push
mov
jmp
or
xor
mov
adc
fsub
xchg
inc
pop
pusha
xchg
inc
sbb
mov
xchg
add
or
mov
mov
sbb
mov
dec
inc
push
sub
jmp
cmp
push
push
icebp
arpl
les
(bad)
xchg
inc
mov
push
aas
les
lds
mov
aas
cli
and
cmp
pop
sbb
lea
mov
jbe
dec
icebp
lahf
xor
cwde
repnz
jb
jbe
jo
or
inc
adc
into
mov
and
(bad)
xchg
pop
xor
aam
call
int3
xchg
add
cmp
jno
cs
xor
sub
jo
lods
mov
cmp
mov
mov
push
retf
aaa
pop
mov
jae
push
jno
dec
jbe
jo
(bad)
gs
mov
dec
cmc
pop
push
jmp
and
(bad)
imul
add
pop
pop
push
mov
cbw
mov
xchg
movs
xchg
push
jecxz
lds
dec
(bad)
push
sub
cmp
arpl
arpl
movs
cmp
aad
int3
fidivr
int
mov
popf
sub
lods
std
clc
pop
push
fdiv
enter
add
inc
and
ret
or
adc
retf
les
mov
dec
jae
addr16
retf
push
xor
jge
in
dec
sub
aaa
xchg
popf
jbe
inc
neg
sbb
dec
or
fiadd
xchg
sbb
mov
push
pop
jno
rol
add
stc
cmps
mov
add
and
or
scas
(bad)
dec
push
add
xor
adc
in
ins
cmps
mov
psraw
cmc
in
out
mov
pop
aam
fisubr
mov
bound
dec
retf
fdiv
aas
ss
clc
push
and
pop
push
in
jno
xchg
mov
cmp
repz
mov
in
mov
imul
add
dec
packuswb
ins
jae
add
cmp
or
add
stos
retf
sub
push
loopne
sub
and
dec
fcom
ror
sahf
dec
or
pop
(bad)
sar
adc
les
ud0
outs
cmp
loop
mov
js
sbb
mov
cmc
sub
push
jbe
mov
enter
hlt
mov
mov
pop
cwde
fs
fs
mov
push
imul
dec
sar
pop
frstor
add
fsub
mov
rcr
jp
pop
stos
xor
pop
adc
or
xchg
cmp
mov
cmp
add
jbe
jp
push
or
and
xchg
leave
xor
loop
mov
out
hlt
(bad)
mov
push
ins
rol
repz
mov
xor
xchg
pop
es
lods
sub
cmp
adc
and
or
pusha
sbb
shl
pop
aaa
in
in
push
bound
int
aam
loope
pusha
add
aam
cmp
xor
add
fdiv
sbb
shl
not
adc
out
shl
cmp
dec
and
outs
mov
retf
in
adc
neg
(bad)
jo
ds
pop
sbb
mov
ja
stos
out
xor
fcom
push
pop
push
push
or
jns
cmp
or
or
sbb
dec
xor
xor
pop
ret
cmps
(bad)
loope
loop
xor
adc
push
mov
sbb
mov
ins
xchg
jno
mov
loope
into
push
fistp
data16
ror
xor
loopne
add
fidivr
or
xor
iret
sbb
lahf
push
(bad)
mov
popf
cmc
aas
mov
add
clc
add
rol
into
jl
cmp
and
push
sbb
xor
dec
push
jae
mov
retf
lods
xor
inc
push
mov
rol
call
icebp
sbb
jle
imul
(bad)
call
mov
mov
int3
xor
retf
push
mov
in
mov
xchg
sbb
dec
xor
mov
jg
test
rcr
push
pop
in
shl
cmps
sbb
or
xchg
ds
fcomip
(bad)
xor
loop
push
jl
dec
lds
lock
cmp
movs
cmp
pop
sbb
scas
adc
sbb
cmps
loope
fld
test
pop
repnz
shr
push
xor
lahf
inc
addr16
dec
sub
repnz
add
and
sub
mov
add
cmps
mul
mov
repnz
icebp
sar
jle
mov
shl
arpl
inc
jae
sub
stc
into
adc
pop
xchg
adc
jmp
cmps
push
cwde
push
jae
xor
ror
push
mov
rcl
out
ficom
xor
sub
jbe
mov
fcom
pop
jmp
mov
fidivr
sub
xlat
sbb
test
retf
jb
cdq
pop
imul
shl
and
in
icebp
mov
int
in
dec
xadd
push
mov
stc
adc
das
nop
lods
je
gs
nop
mov
sbb
jbe
ins
xchg
jns
int3
dec
es
imul
mov
inc
add
(bad)
cmp
cmp
xor
repz
or
mov
dec
mov
jb
jecxz
cmp
add
xchg
adc
outs
(bad)
lock
jnp
push
dec
adc
add
sub
mov
pop
mov
or
sti
rcl
xchg
aad
or
pop
jns
sar
mov
dec
jns
cld
cmp
les
int3
jne
adc
dec
and
test
and
jae
push
inc
push
sub
outs
add
movs
mov
mov
inc
jmp
push
loop
push
fisub
repz
mov
mov
pop
dec
stc
fstp
mov
adc
inc
inc
call
das
test
(bad)
jne
mov
fidivr
xor
xchg
pop
in
mov
int
popf
sbb
or
pop
mov
movs
sub
pop
push
add
push
jne
or
mov
jg
lods
ret
mul
mov
jp
mov
jnp
lahf
mov
sbb
(bad)
call
jns
popa
adc
dec
inc
aam
out
aad
push
shl
movs
xchg
lea
adc
icebp
pop
mov
sbb
lods
jge
lock
popa
jmp
movs
dec
sti
add
xchg
adc
jle
mov
loope
cmps
aam
inc
sbb
ins
lds
cmp
mul
mov
(bad)
cmp
mov
cdq
shl
xlat
ins
pop
push
jl
cld
xlat
je
sub
in
out
mov
dec
xchg
jl
add
in
or
mov
mov
arpl
mov
repz
or
repnz
shl
inc
dec
or
push
xchg
mov
mov
sub
fidiv
sub
sbb
inc
sub
cmp
pop
(bad)
cmp
sbb
(bad)
leave
fcomp
push
jmp
in
dec
nop
cmps
ret
inc
jo
jno
cld
mov
sahf
sbb
scas
test
xchg
not
scas
and
das
mov
or
(bad)
sbb
or
loope
mov
cs
pop
jne
jl
js
loope
cmp
or
and
xchg
dec
adc
or
pop
mov
push
pop
les
leave
dec
retf
fist
out
jp
mov
push
in
mov
lods
mov
mov
xchg
cmp
repnz
mov
xchg
stc
cmp
xchg
nop
add
test
cwde
jmp
adc
scas
lock
enter
cmp
popa
and
ins
ins
aas
xor
jae
sbb
mov
mov
mov
bound
ss
mov
into
mov
sub
cli
repnz
mov
mov
retf
xchg
loopne
or
retf
jmp
mov
add
push
stos
inc
xlat
cmc
dec
add
pop
sub
movs
pop
lock
adc
(bad)
cmp
sbb
jmp
imul
xor
sahf
sub
mov
xchg
xor
and
or
mov
or
je
(bad)
mov
lahf
sahf
pop
dec
xor
pop
sbb
into
fcmovbe
mov
aam
fdivr
fild
outs
cmp
push
jge
jb
call
xor
daa
xor
lods
xor
mov
daa
pop
dec
in
pop
repz
mov
jecxz
rcl
pop
pop
push
sbb
xlat
iret
lods
lods
jle
pop
xor
push
hlt
cli
dec
iret
push
cmp
int
xor
in
jbe
add
fnstsw
push
dec
jmp
pushf
outs
push
icebp
sbb
cmc
mov
out
scas
lock
iret
lock
(bad)
mov
mov
sbb
iret
stc
int3
cmp
push
push
push
imul
lock
add
cmp
cmc
push
stos
xchg
push
rcl
pop
cwde
shr
(bad)
nop
mov
(bad)
fist
cld
lds
mov
xchg
sub
cmc
xchg
fcomp
inc
sahf
std
in
in
mov
push
dec
ss
shl
fmul
js
call
repz
ins
mov
mov
popf
fmul
gs
out
add
jbe
pop
lahf
es
mov
cs
jp
push
in
dec
mov
push
ja
cmps
idiv
ror
sub
inc
pusha
outs
mov
fstp
xor
les
xor
add
pusha
push
adc
jae
cmp
clc
(bad)
repnz
xchg
dec
xchg
add
xor
popf
push
xor
std
sub
or
jecxz
adc
cld
mov
inc
aaa
icebp
shr
sub
and
or
and
int
inc
jle
sbb
xchg
xor
int
shl
fidiv
and
(bad)
adc
test
dec
mov
jmp
mov
push
clc
fs
call
xchg
es
pop
inc
inc
fwait
jno
loopne
fwait
dec
dec
mov
add
jmp
fwait
addr16
sti
lods
loope
xchg
loop
mov
inc
or
inc
in
es
cmps
sub
repnz
mov
dec
out
sbb
lods
cmp
fsubp
lea
ds
dec
xor
test
adc
mov
add
inc
mov
cmp
mov
dec
adc
push
fwait
add
mov
mov
push
aaa
into
in
mov
inc
cmp
dec
in
ss
and
pop
lds
mov
sti
and
and
jns
mov
ja
xchg
sub
shl
adc
shr
jl
xchg
sub
pop
adc
dec
retf
js
dec
fs
das
and
dec
add
pop
dec
js
jae
pop
dec
pop
retf
adc
cmps
mov
loope
clc
sub
mov
stos
cmp
push
(bad)
push
ror
dec
fsub
clc
push
bound
pop
scas
clc
jp
idiv
in
jp
(bad)
jmp
mov
sbb
scas
xchg
outs
xor
jb
pop
fsubr
push
sub
rol
lock
push
cmp
jae
jae
stos
test
stc
cli
cmp
aaa
push
fidivr
adc
and
mov
test
mov
mov
out
outs
adc
mov
add
mov
dec
pop
jns
xlat
call
push
and
out
(bad)
jp
rcl
imul
clc
adc
and
addr16
rcr
es
mov
mov
sbb
shr
cmps
mov
mov
adc
cmp
push
and
aas
pop
es
sets
pop
mov
inc
stc
stc
pop
cmp
pop
cmp
ficom
cld
outs
jecxz
ss
not
repz
jbe
sti
pop
je
adc
add
hlt
pop
xchg
loop
cmp
inc
js
sbb
aad
mov
ins
cmp
mov
push
or
mov
dec
inc
sbb
mov
cli
or
pop
add
mov
jge
or
repz
mov
cmp
imul
mov
adc
in
sti
mov
pop
loope
ins
push
rol
jge
mov
aas
ds
in
jnp
pop
push
movs
mov
inc
mov
cdq
add
xor
(bad)
retf
mov
fwait
mov
xor
pop
movs
scas
cmps
cdq
out
or
outs
xlat
mov
mov
jnp
gs
test
movs
fs
ds
mov
cmp
repnz
dec
test
cmps
mov
das
jae
mov
sub
cdq
mov
push
fucomi
jge
push
jo
pop
movs
stos
xor
lods
call
inc
stos
ja
enter
xor
inc
inc
(bad)
mov
imul
movs
cmp
mov
sub
ds
sbb
jae
clc
pop
mov
jge
inc
jne
(bad)
jle
mov
add
push
sbb
loope
or
xchg
dec
mov
pop
add
mov
mov
outs
(bad)
jb
xlat
das
xchg
cmc
outs
adc
loope
popa
sbb
(bad)
shl
cmp
add
xchg
mov
js
stc
add
rcr
cmps
adc
inc
pusha
push
sub
pop
test
arpl
rcr
(bad)
push
adc
iret
aaa
inc
inc
pop
gs
(bad)
in
sar
or
xor
retf
das
or
add
mov
and
clc
sahf
cmp
mov
ficomp
inc
push
(bad)
jnp
jmp
mov
add
fild
dec
in
stos
inc
xor
add
hlt
in
push
xchg
xchg
jmp
mov
mov
call
or
imul
std
mov
arpl
cmp
les
push
loope
mov
std
jp
add
les
repnz
sub
adc
inc
xor
sub
es
ds
xchg
xor
test
hlt
cmc
pop
cld
mov
sti
imul
xchg
jns
(bad)
out
inc
out
dec
inc
cld
inc
lods
pusha
fimul
stc
cmp
dec
loop
push
inc
inc
mov
repnz
mov
cmps
jmp
push
rol
jne
das
xchg
pop
mov
lods
lahf
(bad)
in
pop
je
inc
ja
xchg
outs
push
cmp
cmc
fpatan
sbb
mov
fdivr
jnp
mov
lea
jle
mov
dec
xor
sbb
lods
sub
xor
mov
out
inc
inc
les
xchg
dec
sub
pusha
mov
pushf
mov
pop
jle
jl
int
mov
dec
imul
out
add
jno
fcomp
jmp
jecxz
mov
jecxz
xchg
retf
cmp
shl
rcr
retf
push
punpckhdq
xor
imul
test
cmp
or
stc
jp
lock
jge
add
dec
jnp
mov
cmps
and
mov
test
jp
mov
mov
test
jno
mov
inc
in
call
sub
sbb
mov
repz
scas
adc
aaa
mov
jns
cdq
in
std
mov
xchg
jbe
aad
sub
sub
mov
and
mov
xor
fmul
vcmpltpd
shl
out
cmp
add
ror
pusha
jbe
iret
cli
sub
mul
sbb
inc
lods
xor
jmp
or
daa
jle
xor
pop
(bad)
and
fwait
or
jge
std
sahf
aas
jle
sbb
and
adc
cmp
sbb
div
xchg
pop
(bad)
repnz
fiadd
sbb
shl
mov
cmps
add
stc
sti
int3
push
js
cs
cmp
enter
mov
xor
rep
mov
bound
pop
pop
mov
aad
movs
inc
add
jmp
test
cmps
(bad)
mov
jl
push
(bad)
cmps
test
cmp
ror
mov
ret
and
stc
cmp
fwait
xchg
rol
not
mov
jp
mov
inc
(bad)
ins
lds
jns
sbb
and
sahf
fadd
push
sbb
dec
imul
push
pop
rcr
sub
or
push
out
or
cmp
into
xor
xor
sub
in
and
sub
stos
scas
fbstp
pushf
pxor
sahf
mov
clc
inc
(bad)
sar
jno
gs
dec
mov
pop
jnp
test
mov
push
call
loop
ret
or
movs
fcom
sti
(bad)
imul
sar
and
mov
mov
or
add
in
lods
xchg
cmps
jae
scas
shl
jecxz
rcl
push
xchg
mov
sbb
imul
pop
dec
sbb
test
adc
loope
and
cli
stos
dec
jno
push
add
ja
add
jp
test
mov
jno
cmps
lods
sub
inc
retf
scas
pushf
fsub
inc
ins
pushf
outs
gs
lock
and
cmp
add
and
fs
mov
ds
call
(bad)
pop
inc
ret
out
adc
push
push
jg
dec
sbb
popa
mov
push
cmp
popf
pop
cmovle
fcmovnu
xchg
(bad)
hlt
nop
not
enter
rcl
cmc
or
movs
(bad)
or
out
lods
lods
aam
and
lahf
jne
mov
pop
xlat
dec
mov
stos
inc
ss
jb
lds
out
mov
sbb
ins
cmp
fnsave
clc
jnp
pushf
push
sbb
pop
ins
push
mov
les
lock
jg
xchg
mov
stos
mov
and
call
mov
mov
add
jg
add
(bad)
or
mov
hlt
mov
ins
bound
sub
add
pop
cdq
cmp
cmp
and
retf
loop
xchg
es
inc
adc
bound
sub
outs
fs
mov
mov
(bad)
pop
and
(bad)
pop
dec
in
lds
and
into
rcl
cmp
adc
mov
scas
sbb
in
imul
push
pushf
cmp
popa
adc
gs
dec
push
cmc
mov
jl
(bad)
xchg
ror
movs
jmp
pop
mov
cdq
loop
mov
hlt
mov
add
jle
jno
shl
xor
sub
pop
xchg
test
hlt
dec
sub
(bad)
gs
sbb
add
and
or
adc
std
inc
dec
arpl
ja
jo
mov
mov
push
repnz
in
push
js
sbb
pusha
mov
jns
cdq
retf
(bad)
mov
ja
pop
imul
adc
imul
int3
jnp
rcl
cld
sub
cwde
inc
inc
retf
mov
add
int3
push
jle
out
jne
test
mov
std
pop
jmp
nop
pop
out
jns
adc
jecxz
inc
push
add
sbb
mov
push
jbe
xchg
or
sub
add
(bad)
retf
jne
std
fldenv
adc
pop
sub
xchg
js
cdq
and
pop
sub
call
neg
pop
sti
imul
lods
cmp
(bad)
pusha
aad
jno
fwait
adc
rol
cld
push
rcr
outs
into
or
fwait
retf
push
out
cmp
cmp
les
sbb
das
pusha
push
mov
cmp
mov
test
inc
es
adc
imul
dec
fs
sti
(bad)
nop
xlat
repz
aas
pop
leave
fs
and
cmp
inc
ror
sar
movs
in
jns
ins
dec
repnz
xor
cwde
gs
bound
sub
xchg
sbb
int3
loope
xchg
sbb
fsubr
cli
xchg
or
adc
ja
xlat
add
stc
shl
add
xor
cmc
ds
jo
popa
int
dec
add
jae
pop
jge
jle
jbe
mov
xchg
fdiv
xchg
xor
mov
xchg
aaa
inc
fistp
or
mov
in
fcomp
sbb
ret
in
sub
inc
mov
and
mov
pop
ret
dec
imul
jp
scas
add
inc
jle
cmp
pop
aam
(bad)
sbb
push
xor
dec
lahf
add
pop
pop
sti
pop
ins
stc
jae
jne
inc
inc
jnp
push
xchg
frstor
sbb
push
fdiv
int3
pop
scas
push
mov
aas
cld
sub
push
jg
adc
push
mov
stos
shl
push
rcr
clc
jg
cld
test
shl
int
jp
add
adc
mov
add
cmps
in
pop
mov
pop
adc
pop
mov
(bad)
aad
push
add
jecxz
jmp
pop
call
ins
imul
test
popf
and
mov
cmps
add
daa
das
loope
inc
xchg
sbb
adc
out
les
cmps
mov
adc
sub
add
call
loop
push
pop
dec
imul
js
out
sbb
retf
inc
pop
ins
daa
sbb
pushf
and
fstp
mov
adc
(bad)
js
inc
lds
das
adc
lods
cld
push
mov
mov
dec
adc
xor
bound
add
cmp
movs
retf
out
push
inc
and
dec
aas
xchg
inc
add
cmp
push
test
call
sub
inc
(bad)
dec
lahf
jnp
lahf
sbb
pop
or
sbb
ins
mov
pop
daa
shl
push
sbb
in
adc
ja
or
leave
pop
xor
test
jae
xchg
ret
dec
sbb
dec
enter
mov
(bad)
scas
xor
cmp
(bad)
daa
xchg
mul
xchg
push
outs
xchg
sahf
push
lahf
push
mov
dec
dec
ds
int3
fucomi
je
les
sti
add
test
pop
in
bound
movs
fsincos
shl
cmc
stc
adc
imul
mov
or
cwde
ficomp
leave
adc
xchg
test
aaa
cmc
dec
icebp
icebp
push
stos
leave
sbb
pop
mov
and
das
dec
xor
cs
jp
pop
pusha
test
and
mov
ds
aas
mov
popf
cmp
call
sbb
mov
mov
push
call
pop
or
mov
cmp
fisubr
fistp
pop
mov
repnz
scas
repz
mov
loopne
cmps
push
mov
imul
adc
push
and
xor
js
cli
stc
cwde
adc
pop
inc
cwde
outs
out
into
adc
pop
imul
scas
pusha
dec
push
cwde
pop
mov
sub
ret
add
rol
add
ret
stos
xor
aad
mov
(bad)
mov
out
scas
dec
adc
mov
es
and
push
inc
adc
call
dec
or
push
sub
daa
fistp
aas
leave
xlat
xchg
mov
mov
xchg
mov
in
inc
or
sub
mov
in
mov
inc
jne
inc
das
jp
mov
cmp
cmps
addr16
cmp
es
and
ins
pusha
inc
adc
jb
jns
and
rol
jbe
mov
les
mov
xor
and
jnp
jne
mov
dec
add
imul
push
jecxz
add
in
sub
jl
ds
call
xchg
arpl
sub
stos
mov
sub
sbb
adc
inc
pushf
sar
iret
jp
dec
jg
rcr
fist
in
push
js
or
pop
inc
jo
jns
mov
push
jae
jp
sub
cmp
jmp
dec
data16
test
push
lock
movs
mov
dec
loope
popf
xor
add
scas
dec
js
jo
mov
sti
in
lods
push
jo
mov
ror
cmps
repz
mov
loopne
adc
aad
fdiv
(bad)
mov
(bad)
mov
xchg
ja
sti
hlt
xchg
adc
retf
addr16
pusha
outs
mov
pop
or
push
mov
cmps
xor
mov
clc
inc
mov
movs
and
iret
loope
xchg
or
jmp
(bad)
pop
xchg
xor
ins
gs
jb
shl
pop
sub
add
out
lahf
jo
add
imul
mov
mov
fldenv
jge
fs
inc
push
dec
sbb
into
in
add
pop
xor
je
leave
xchg
loop
test
mov
dec
xchg
lods
fstp
ret
cmp
lock
aaa
sub
and
rol
mov
mov
cmp
test
inc
push
push
push
cmp
mov
inc
fsubp
jg
imul
jmp
cmp
bound
sbb
fcomip
inc
fmul
stos
pop
mov
ja
dec
stos
jmp
sub
paddq
rcr
shr
dec
aaa
dec
icebp
and
or
add
add
lds
sub
(bad)
iret
or
(bad)
jmp
fsub
xchg
sub
adc
cmp
jecxz
xchg
cdq
fidivr
and
adc
(bad)
scas
mov
retf
daa
pop
test
jbe
hlt
inc
sub
nop
fucomi
shl
(bad)
lods
scas
call
dec
and
add
loope
jns
add
jge
popf
mov
jle
cmp
std
scas
mov
mov
pop
sahf
ss
push
mov
add
pop
push
dec
data16
sub
rcr
jge
jnp
cmps
sbb
pop
push
push
or
mov
inc
sub
cdq
sbb
pop
sub
cwde
inc
addr16
lods
enter
pop
(bad)
loop
lock
sub
sub
rol
xor
retf
add
cdq
push
outs
es
or
cmc
sub
test
or
es
or
xor
hlt
sti
xchg
das
sbb
imul
add
jle
pushf
push
hlt
test
xchg
(bad)
dec
sbb
cld
fisub
pop
in
test
add
xchg
xchg
pop
ss
out
aad
aas
mov
jns
aam
jge
mov
jge
mov
ret
jns
pop
lds
(bad)
loopne
repz
mov
loopne
xchg
iret
in
fdivrp
mov
imul
pop
sub
and
mov
fldenv
xor
or
stos
mov
ror
imul
and
fld1
add
fistp
pop
std
mov
iret
mov
jecxz
imul
add
cld
or
inc
pop
pushf
rcr
lock
aaa
cwde
xchg
ja
push
xchg
sbb
mov
je
sub
push
mov
std
out
or
mov
fwait
iret
sar
ret
jle
adc
xor
aad
out
lods
inc
(bad)
push
fstp
pop
out
mov
add
in
shl
dec
inc
aam
push
xor
imul
pop
ds
clc
pop
push
lock
pop
and
jns
pop
sbb
ret
push
push
sbb
loop
repz
jl
inc
shr
cwde
out
cmps
sbb
jmp
push
fwait
ror
test
not
dec
mov
data16
(bad)
cwde
push
pop
push
repnz
mov
jmp
push
xor
fs
jmp
mul
nop
loopne
rol
inc
push
cmp
pop
xor
je
les
inc
mov
xor
daa
ret
cmc
adc
pop
mov
sar
mov
push
jns
dec
retf
jmp
mov
stc
in
sub
rcr
dec
add
fstp
cmps
das
mov
cs
mov
push
mov
push
sbb
push
jne
pop
push
(bad)
inc
add
jmp
add
pop
lahf
lock
xchg
data16
inc
mov
cwde
adc
lds
loopne
stos
adc
(bad)
cld
pop
or
aad
push
imul
cli
jb
div
popa
call
pop
sbb
mov
ins
addr16
add
push
xchg
or
push
test
add
cmp
mov
cs
retf
arpl
rcr
or
adc
mov
div
popf
pop
mov
jbe
mov
sbb
or
mov
lods
bnd
or
test
pop
jo
sbb
js
stos
repz
adc
ret
nop
iret
xchg
cmps
jae
and
icebp
jbe
jecxz
push
push
pop
pop
pop
jecxz
imul
mov
in
jmp
repnz
and
rcr
and
sub
cmc
jmp
mov
cmc
push
int
shl
mov
(bad)
dec
jb
cmp
inc
mov
pop
add
mov
das
xchg
fs
pop
xchg
and
push
sahf
stos
cmp
cmps
lahf
inc
adc
cmp
push
mov
ja
in
aaa
dec
or
fstp
mov
inc
xor
pop
push
and
stos
fist
sti
jns
xor
and
cmp
or
add
mov
mov
jle
cmp
add
push
ss
xchg
ja
fiadd
das
js
movs
xchg
jae
outs
pop
xor
or
mov
cmp
sub
out
push
fwait
xor
jne
mov
xor
pop
jp
in
dec
pop
retf
adc
push
pop
enter
fdivr
jo
stc
mov
mov
sbb
dec
adc
xor
cmp
mov
pop
ins
cmp
stc
imul
es
mov
dec
or
jns
xchg
ins
out
push
fst
ret
push
jne
stc
pop
mov
dec
ret
lea
repz
bound
xor
in
adc
pop
out
mov
dec
add
push
xor
shl
sbb
scas
and
sbb
mov
add
in
jmp
xchg
mov
fs
test
or
jne
les
xchg
neg
(bad)
and
loop
enter
or
pop
fs
jle
dec
mul
add
or
mov
xchg
xor
and
call
ds
mov
pop
cli
test
imul
popa
fcomp
out
xor
pusha
mov
not
mov
jne
mov
lds
int
mov
sbb
mov
je
fsubr
cld
ss
cmc
loop
into
inc
push
and
xchg
sub
mov
(bad)
popf
mov
cwde
into
pop
(bad)
pop
adc
cmc
test
mov
pop
adc
aam
or
adc
test
(bad)
into
push
call
dec
ret
xchg
mov
jmp
push
(bad)
iret
sbb
jne
sub
rol
cmp
js
clc
xchg
xchg
mov
xlat
dec
enter
pop
stos
repz
jmp
rol
daa
adc
in
and
adc
pop
stos
mov
cmp
rcpps
sahf
movs
repz
pushf
lds
int3
movs
add
mov
cmp
xchg
push
push
mov
sar
jle
sub
stc
mov
xchg
push
(bad)
loopne
xchg
outs
xor
test
inc
inc
or
mov
mov
sub
enter
dec
push
daa
gs
pop
lea
inc
dec
or
xchg
pop
mov
mov
inc
add
stc
(bad)
sub
or
sub
jl
out
clc
cmp
scas
sub
lds
(bad)
xor
cli
xchg
cli
push
fstp
leave
mov
mov
repz
into
add
mov
push
mov
inc
outs
loopne
(bad)
call
imul
mov
retf
cmp
(bad)
and
and
pop
cmp
pop
push
adc
cmp
aad
rcr
lds
test
jecxz
cli
push
and
sar
mov
pop
jb
pop
gs
popa
outs
mov
fcom
stos
out
pusha
xor
pushf
lds
fild
and
(bad)
mov
push
cmp
in
cs
icebp
test
add
das
xchg
dec
mov
mov
test
in
dec
cmp
(bad)
add
sbb
(bad)
push
ins
xchg
mov
aaa
mov
jl
in
inc
cmp
and
shl
aaa
test
mov
aad
loope
add
add
pop
adc
dec
jmp
inc
mov
mov
or
cmps
mov
mov
adc
sbb
out
sub
push
gs
shl
mov
shr
add
sub
or
stos
int
bound
push
sbb
or
jb
and
outs
sti
pop
push
pop
mov
sub
or
fwait
cmps
leave
movs
xor
sbb
sahf
fisub
xor
xchg
ins
mov
inc
ja
movs
mov
mov
cwde
std
dec
inc
dec
mul
jmp
jbe
mov
cdq
int
jp
or
xchg
jns
cmp
adc
sub
jp
(bad)
std
test
adc
leave
xchg
das
pop
and
sub
sti
push
lahf
test
sbb
aaa
movs
je
push
lock
in
mov
mul
push
add
pop
rol
mov
push
mov
jo
inc
stos
scas
push
out
(bad)
sti
fs
xchg
enter
jp
jb
cmc
cld
test
pop
rcl
jmp
and
test
push
neg
inc
mov
fsubr
and
mov
or
pop
mov
adc
mov
test
xor
mov
push
push
cmp
mov
mov
xchg
cdq
dec
mov
jae
call
mov
mov
dec
(bad)
fcmovu
jnp
xor
in
pop
popf
jo
aaa
arpl
daa
xchg
pop
daa
cmps
lods
sbb
push
test
pop
inc
xchg
fdivr
(bad)
imul
ins
(bad)
or
rcl
add
jg
iret
lock
add
test
push
shr
jo
jl
addr16
aad
outs
ins
adc
fnstsw
call
cmc
ficom
rcr
push
popf
xor
add
push
gs
ret
and
push
xchg
mov
adc
adc
icebp
sbb
popa
mov
cmp
sub
lds
dec
(bad)
jle
pushf
sub
jno
xor
sub
pusha
inc
sbb
and
or
mov
push
push
xor
cmp
aas
imul
dec
jbe
sub
hlt
(bad)
dec
xchg
mov
sbb
adc
es
push
cmp
shr
clc
inc
out
push
repnz
dec
arpl
lock
ins
jne
pop
push
fdiv
ja
pop
xchg
push
jno
sbb
scas
(bad)
xor
jbe
pop
cmp
repnz
int
cwde
add
xchg
sbb
std
shr
icebp
xchg
pop
(bad)
sbb
adc
sahf
sti
sbb
or
out
push
or
cwde
shl
sub
call
dec
pop
cmp
or
add
sub
dec
mov
std
cwde
daa
or
addr16
mov
add
xor
sub
jnp
dec
fdiv
in
outs
daa
add
call
xlat
jo
cmp
dec
fdivr
mov
push
mov
cmc
(bad)
ror
aaa
and
push
jns
imul
(bad)
lock
test
mov
push
ror
adc
dec
iret
add
hlt
nop
(bad)
in
sbb
dec
fnstsw
sub
push
mov
push
cmp
mov
push
loope
jne
imul
call
fnstenv
test
lea
fs
scas
pop
xor
adc
aad
pop
mov
in
push
and
jmp
test
push
fst
gs
cmp
rcl
mov
cmp
cli
mov
outs
call
jbe
cld
jp
cmps
mov
jbe
out
daa
mov
jp
sbb
pushf
je
sub
jbe
nop
mov
loope
fistp
add
and
or
and
sbb
mov
jmp
test
cmp
sub
or
out
(bad)
shl
rol
mov
push
sbb
jb
xchg
jmp
aam
icebp
test
imul
or
fnstcw
dec
(bad)
dec
test
xchg
lods
jno
jge
pop
fbld
add
jb
ror
mov
dec
push
xchg
sub
fs
inc
jp
ja
and
outs
xchg
inc
pusha
fmul
jl
jle
adc
pop
jl
repnz
cwde
bound
push
xor
movs
mov
xchg
and
aaa
call
push
cmp
js
mov
data16
in
dec
data16
mov
jecxz
xor
out
xor
jge
push
adc
in
inc
cmp
test
in
cmp
fmul
int3
jne
clc
dec
aas
jne
or
int
and
mov
out
loope
(bad)
mov
addr16
mul
bound
jnp
mov
aam
mov
xor
pop
cld
push
pop
out
mov
cmp
jecxz
fsub
and
add
push
movs
xor
and
mov
out
scas
dec
nop
or
pop
sub
xor
repnz
ins
mov
mov
aas
sub
arpl
dec
in
or
and
push
inc
js
jbe
jl
into
xchg
cmp
push
mov
add
pop
out
inc
push
adc
pop
inc
lods
loopne
dec
(bad)
bound
mov
addr16
cdq
xchg
inc
int
jne
mov
in
sub
je
jno
pusha
ffreep
pop
aam
adc
and
jne
div
inc
test
call
je
xor
sub
add
dec
inc
mov
rcr
mov
das
ror
pusha
adc
shr
call
shl
cmc
jno
mov
call
outs
mov
cmps
jg
pop
ror
dec
pop
mov
jmp
cmp
cmp
cmps
in
push
adc
add
or
int3
dec
and
pop
leave
mov
repz
sbb
xor
dec
inc
mov
imul
arpl
cmp
lea
inc
hlt
and
and
sub
push
cld
or
outs
sbb
cli
lahf
pop
(bad)
test
sbb
mov
and
adc
jb
jmp
push
push
test
cli
xor
pop
xchg
cmp
shr
xor
jno
test
xor
in
shr
inc
mov
mov
add
int3
fadd
jmp
mov
push
pop
adc
push
(bad)
and
xor
xor
push
pop
sti
adc
jbe
add
out
cmp
aam
leave
(bad)
jne
repnz
cmp
and
jns
(bad)
outs
mov
pop
mov
jecxz
retf
sbb
mov
fbstp
or
and
cdq
mov
enter
jecxz
adc
enter
clc
rcr
sahf
inc
push
or
mov
cs
pop
cld
pop
mov
in
mov
or
out
sbb
nop
mov
push
out
or
mov
xchg
jb
shl
pop
imul
push
xor
mov
sub
pop
mov
mov
mov
lea
out
out
sbb
cmc
inc
push
imul
jge
sbb
dec
(bad)
rsm
pop
or
push
pop
pop
js
adc
adc
ret
mov
in
jmp
in
test
les
in
pop
js
pop
add
setg
and
icebp
inc
sub
dec
frstor
pop
dec
xor
outs
mov
mov
(bad)
ins
cdq
sahf
cmps
push
xchg
stos
stos
div
call
leave
mov
daa
and
rcl
mov
mov
cmp
call
xchg
mov
inc
jne
outs
std
js
lods
pop
dec
imul
hlt
pop
cld
fwait
mov
mov
mov
xlat
mov
fwait
xchg
cmp
into
jp
int3
mov
mov
xlat
(bad)
jo
mov
sbb
out
stos
dec
ins
call
xor
movs
out
push
push
fcom
enter
lods
jmp
js
repnz
and
or
hlt
fdiv
ins
xor
adc
xor
sbb
jnp
(bad)
shr
push
pop
xor
cmps
lods
sbb
mov
push
mov
sbb
shl
out
sar
cmp
inc
sub
aas
out
add
stc
inc
dec
xor
je
jecxz
mov
mov
cs
int
mov
push
test
and
mov
neg
jle
popa
inc
mov
pop
pop
mov
jg
adc
inc
xlat
jp
cmp
repnz
iret
aad
iret
mov
scas
pushf
pop
ds
ins
dec
loope
mov
test
loop
test
sbb
sbb
or
imul
nop
pushf
mov
cmc
sar
pop
fist
xchg
scas
adc
mov
sub
cmp
dec
add
nop
mov
push
pop
clc
push
push
test
cli
leave
mov
ja
gs
test
cwde
mov
stos
inc
cmc
outs
addr16
(bad)
cmp
shr
cdq
es
enter
push
xor
adc
addr16
cwde
jp
dec
add
(bad)
call
je
movs
push
pop
xchg
out
pop
mov
and
aad
pusha
lahf
bound
ja
xor
mov
scas
sar
mov
or
call
jo
xor
aas
push
cmps
sbb
fcmovne
aaa
mov
adc
mov
xor
and
int3
pushf
mov
mov
adc
test
dec
imul
out
sti
imul
retf
sub
pop
jb
jne
cwde
stos
xchg
jmp
movs
push
mov
out
pop
inc
xor
pop
add
mov
xchg
leave
ficomp
and
fnstsw
mov
xchg
in
sti
iret
inc
jmp
cmp
mov
cmp
mov
adc
sub
(bad)
clc
cmps
lea
rcr
lea
dec
ds
adc
add
or
add
mov
fistp
into
inc
jo
out
loop
(bad)
test
push
cmp
(bad)
aaa
aaa
scas
xchg
pop
push
cmp
sub
outs
dec
push
lock
ja
mov
loope
ds
mov
sub
lea
jnp
cmp
shl
and
or
or
scas
popa
adc
leave
or
lods
shld
jne
rol
rcl
mov
pop
mov
dec
int3
or
sub
imul
rcl
xor
jno
imul
aas
fnstsw
(bad)
dec
pop
add
and
push
inc
arpl
or
es
jne
in
jne
outs
cmc
loop
loope
ds
js
xor
pop
dec
mov
sbb
mov
add
into
dec
push
jp
sub
mov
sbb
pop
mov
or
test
xchg
pusha
jg
inc
push
pushf
popf
mov
xchg
mov
mov
hlt
rcr
jge
outs
xchg
sahf
aam
cmps
inc
retf
adc
xor
mov
scas
aad
adc
sbb
(bad)
add
jle
mov
outs
dec
jne
mov
mov
pop
sahf
xchg
stos
stos
pop
ror
cmps
dec
sahf
in
adc
cmp
xor
or
in
fdivp
jno
cmps
mov
pop
les
or
sub
cdq
test
or
add
mov
mov
or
push
cmp
loopne
and
aam
cpuid
leave
sahf
pop
jmp
sbb
icebp
in
jp
mov
pusha
sbb
mov
dec
and
jmp
bound
xchg
test
dec
pop
add
dec
mov
sahf
pop
xlat
pop
xor
leave
cmp
push
inc
loope
sbb
repnz
pop
push
int
ror
push
adc
or
mov
or
add
std
ret
xor
push
les
ror
adc
jg
lods
gs
cld
loop
sub
xor
sub
into
outs
aaa
rcl
sbb
(bad)
cmps
fst
adc
push
mov
in
(bad)
(bad)
call
fisubr
aas
jp
add
aam
call
je
xchg
ret
dec
or
xor
lahf
add
cli
aas
xchg
add
cmp
loope
ret
pop
sub
jo
pop
mov
ss
xchg
aam
loopne
cmp
mov
(bad)
fbstp
rcr
test
aad
retf
out
inc
sbb
in
int3
inc
xchg
hlt
dec
dec
test
cmp
mov
(bad)
mov
sub
(bad)
imul
stos
adc
cmp
mov
iret
int
jle
fisttp
adc
int3
or
sbb
and
xchg
mov
out
movs
sub
loope
int
dec
and
mov
cmp
std
push
adc
inc
xlat
mov
mov
nop
sub
and
sbb
and
es
in
lods
dec
je
mov
stc
pop
mov
das
jae
jbe
push
cmp
xchg
lock
retf
xor
xchg
sbb
call
jecxz
pop
or
and
and
(bad)
jle
loopne
xor
dec
jo
mov
add
aam
mov
fs
outs
iret
outs
sbb
outs
push
pusha
push
mov
lahf
push
mov
js
jge
adc
mov
sti
and
clc
js
ins
or
or
loope
add
div
in
cmps
in
fisttp
fs
sub
add
jecxz
add
dec
rcr
mov
mov
shl
or
adc
push
or
xchg
out
mov
xchg
shl
mov
and
out
ds
sub
ins
adc
call
outs
inc
std
rol
out
test
xchg
jmp
mov
(bad)
mov
mov
xor
cmp
cdq
repz
mov
inc
mov
(bad)
idiv
adc
call
jecxz
push
jge
xor
xor
jne
mov
push
mov
mov
out
adc
in
cmp
adc
das
in
pop
pop
scas
es
cmp
imul
popa
ror
cli
int
add
mov
sub
test
sub
mov
scas
push
pop
sti
inc
enter
das
pop
push
inc
mov
out
mov
enter
cmps
shl
stos
shr
sbb
fadd
loope
ret
jp
scas
(bad)
push
mov
mov
push
movs
xor
inc
call
movs
push
and
adc
mov
sub
and
sbb
lea
mov
cld
mov
mov
mov
mov
cld
or
or
or
stos
ja
clc
pushf
xor
scas
in
inc
aaa
outs
inc
cmp
mov
popf
xor
(bad)
pop
or
mov
xchg
fsubr
repnz
call
and
mov
dec
jg
xchg
dec
mov
pop
psrlw
aas
cmove
sbb
add
mov
push
add
psadbw
cmp
(bad)
pushf
add
repnz
cli
leave
cwde
jns
test
and
xor
ja
lods
dec
sar
ins
jmp
fist
jmp
popf
dec
ins
xchg
pop
call
fnsave
popf
shl
icebp
call
cmc
fisttp
mov
mov
mov
and
ja
pop
aaa
mov
stos
mov
leave
cmps
popa
dec
mov
imul
pop
dec
icebp
and
mov
pop
or
and
das
dec
jae
nop
sub
sbb
push
jp
pop
stos
add
repz
repz
add
pusha
rol
cmp
movs
stos
idiv
sbb
or
xor
je
int3
fucomi
add
(bad)
mov
pusha
cmp
pusha
cmc
in
mov
mov
mov
sbb
mov
or
push
dec
mov
mov
rcr
dec
add
lahf
push
jl
sti
xchg
cld
add
lds
add
jle
xchg
mov
inc
fnstcw
xchg
aas
or
rcl
cmp
repnz
aaa
sub
xchg
fbld
push
mov
call
(bad)
sub
pop
lahf
add
sub
mov
sub
jg
int3
sbb
call
test
cld
mov
fcom
clc
mov
clc
sub
cmp
faddp
adc
ds
hlt
mov
loop
lods
xlat
pop
ds
push
mov
rol
push
fptan
mov
adc
call
ret
push
test
std
mov
jmp
pop
das
inc
add
inc
sbb
add
push
push
push
xchg
scas
jnp
sub
mov
movs
xor
sbb
aas
mov
or
sub
imul
ret
jge
push
test
out
sub
xor
les
sub
(bad)
or
ror
fiadd
(bad)
sbb
ds
jmp
or
scas
jmp
cmp
push
cmp
xchg
xchg
mov
add
loop
dec
(bad)
mov
inc
sbb
sub
sbb
fcmovbe
push
imul
stos
sub
and
adc
dec
or
aas
and
push
sti
inc
add
xchg
in
pop
je
push
bound
dec
enter
lods
popf
scas
xor
mov
nop
and
dec
mov
mov
leave
adc
loopne
jecxz
call
test
fistp
mov
mov
mov
in
out
lods
mov
loopne
mov
mov
mov
sbb
fwait
jnp
add
push
fisttp
push
mov
mov
call
mov
repz
psubusb
or
nop
xchg
(bad)
pop
jno
add
adc
cmp
pop
outs
fs
retf
cwde
cmc
and
jb
jmp
(bad)
xor
xchg
std
and
shl
sbb
push
retf
inc
neg
adc
mov
mov
pop
aaa
loope
push
imul
pop
retf
cmp
clc
xchg
mov
xchg
ins
bndldx
cwde
ins
mov
inc
jne
and
mov
xlat
stc
(bad)
add
mov
call
mov
mov
stc
dec
jns
and
mov
cmp
cmp
jl
push
aad
and
retf
mov
(bad)
mov
jge
cmp
sbb
je
jne
cmp
sub
rol
sti
push
lods
in
xor
outs
mov
sbb
push
test
pop
cmp
sub
movs
fwait
in
cmp
pop
ret
push
ja
fs
test
inc
pushf
adc
lahf
loop
cmp
mov
lea
add
mov
adc
sbb
inc
shl
repz
xchg
add
cld
fs
pop
mov
cmp
cs
or
inc
in
ret
rcr
retf
push
lods
jnp
test
jle
rol
pop
jmp
xor
fadd
rol
stc
mov
xor
sub
and
retf
hlt
jae
ins
ror
mov
aad
xor
outs
lock
dec
test
jns
mov
nop
ja
nop
dec
sar
call
cmp
int
xor
jmp
ins
bsr
jbe
adc
sahf
adc
mov
ret
js
xchg
ret
out
pop
adc
idiv
sbb
movs
jae
fcomp
aam
movs
add
leave
jae
pop
rcr
movs
jecxz
adc
test
jg
rol
fstp
mov
inc
jae
add
push
fimul
mov
push
pop
pop
or
imul
push
das
inc
jp
pushf
popa
sbb
iret
pop
pop
aad
push
and
into
imul
jle
dec
(bad)
rol
stc
loope
xchg
dec
addr16
mov
call
dec
mov
loop
sbb
(bad)
mov
pushf
ds
mov
pop
xor
loopne
xchg
cmp
in
ja
aad
fstp
jg
aas
cmp
inc
stos
mov
(bad)
cmp
ret
jae
aam
cmp
mov
cmp
frstor
icebp
stos
mov
xor
test
jmp
daa
jl
retf
pop
in
ja
fs
and
sbb
ja
mov
test
push
sub
mov
pop
ja
push
fdiv
(bad)
pop
push
outs
fwait
push
ret
mov
pop
cmp
push
fcom
out
xchg
xor
and
call
adc
dec
push
je
pusha
mov
int
fnstenv
sbb
mov
push
jb
(bad)
and
test
cmp
stos
ja
cmp
add
ja
push
dec
pop
sub
cmp
out
test
test
js
jnp
pop
add
ins
loope
cwde
clc
and
sbb
repnz
(bad)
sub
or
lods
cmc
jo
loope
xlat
add
inc
arpl
pop
and
scas
push
xor
das
nop
sub
mov
xor
jo
dec
(bad)
lock
or
sbb
pop
sub
mov
mov
push
call
add
(bad)
shl
ds
outs
or
mov
cmps
cmps
test
cwde
push
cmp
pop
out
lods
sti
in
shl
sbb
lock
das
stos
shl
mov
hlt
in
ins
aam
mov
xchg
push
push
lods
add
mov
in
inc
or
int
adc
jbe
(bad)
xchg
inc
add
mov
sti
xor
xor
call
(bad)
ficom
popf
ins
xchg
sub
rcl
push
jbe
or
pop
imul
jge
shl
mov
inc
and
add
sbb
test
adc
jl
dec
dec
cmp
enter
push
push
pop
pushf
mov
ror
or
jl
jmp
adc
inc
sub
popa
cmp
cmps
nop
mov
std
push
and
ins
and
das
push
cmp
pop
mov
mov
in
pop
outs
jb
dec
or
xlat
mov
xor
sub
push
pop
xchg
ins
call
push
inc
adc
call
in
(bad)
mov
daa
pop
test
xor
cmps
dec
pop
jnp
(bad)
sti
dec
jb
mov
nop
dec
mov
jle
stos
and
int
mov
outs
push
or
and
jl
cmp
cmc
push
mov
imul
cmp
nop
push
dec
cdq
fld
test
dec
(bad)
add
pop
dec
(bad)
out
jp
push
call
mov
sub
push
imul
test
bound
push
call
fcom
sub
and
mov
lahf
jmp
test
ins
jge
hlt
adc
rcr
dec
scas
(bad)
pop
push
test
mov
pop
push
cli
add
jmp
mov
jp
fucom
repz
dec
ret
clc
and
jno
repz
cwde
mov
jp
jb
xor
fstp
je
das
cmp
icebp
and
mov
mov
fsubp
jns
jle
xchg
or
dec
sub
pop
in
cmp
mov
xchg
mov
cmc
cmp
aaa
pop
cmp
sub
jnp
push
push
and
leave
dec
div
shl
das
ror
aam
mov
lods
not
mov
sub
test
enter
fcom
imul
jp
test
iret
push
jp
push
loop
(bad)
xchg
jns
jne
nop
(bad)
push
push
and
mov
fs
push
add
ficomp
gs
sub
lock
loopne
iret
xchg
sbb
fistp
adc
cmp
add
ins
fcmovbe
scas
scas
add
popf
push
ja
sub
outs
mov
push
jecxz
or
daa
gs
jo
je
xchg
dec
call
outs
js
sbb
dec
mov
movs
mov
lds
or
test
leave
cld
fmul
fidivr
call
int
mov
pop
mov
mov
push
mov
in
mov
pushf
add
retf
jmp
lods
nop
(bad)
jle
ret
dec
pushf
fild
pop
mov
std
mov
fisttp
or
loop
addr16
jle
arpl
inc
pusha
add
icebp
ret
cmp
xor
xchg
inc
int3
repnz
mov
adc
cmp
xor
cmp
and
test
pusha
cmp
mov
repnz
fdivrp
mov
pop
lods
xor
push
inc
out
pusha
inc
jecxz
sti
dec
in
in
jnp
mov
fmulp
sub
mov
add
cmp
daa
cwde
loopne
(bad)
jbe
int
dec
or
mov
push
mov
add
add
jne
outs
or
dec
pusha
(bad)
push
(bad)
(bad)
ret
rol
and
xor
ret
enter
addr16
fwait
mov
pop
mov
pmaddwd
dec
mov
cdq
add
test
(bad)
into
push
push
scas
retf
ror
hlt
sbb
mov
jo
and
ret
push
(bad)
mov
lea
lahf
call
sub
in
dec
popf
adc
add
imul
and
sbb
not
jecxz
dec
in
ficomp
sub
xchg
js
xchg
js
add
mov
lods
dec
sub
aaa
xor
dec
adc
leave
stos
test
jae
add
mov
cmp
sub
div
or
mov
inc
jne
(bad)
out
inc
icebp
cmp
outs
fcom
xchg
jl
ins
in
test
inc
inc
(bad)
outs
sar
mov
test
mov
not
cmps
push
int
sub
push
scas
push
mov
sub
add
dec
(bad)
mov
xor
test
inc
mov
pop
enter
inc
mov
jne
jp
scas
xor
jae
movs
or
cmp
add
movs
cmp
in
inc
add
inc
mov
xchg
mov
repz
nop
mov
dec
fwait
jae
cmp
cwde
das
push
and
add
cmps
shr
ds
add
pusha
and
cmp
pop
pop
and
fwait
adc
mov
inc
mov
cwde
adc
dec
test
xchg
(bad)
imul
lds
cs
and
cmp
xchg
cld
(bad)
xlat
test
test
jecxz
push
jno
hlt
pop
pop
jo
out
and
popa
aas
xchg
cmp
or
mov
mov
cmps
fnclex
adc
std
add
addr16
in
call
test
push
inc
daa
push
scas
ret
push
(bad)
icebp
jle
addr16
mov
lods
bsr
ror
outs
mov
mov
inc
jmp
xor
pop
pop
jl
mov
stos
rcr
mov
stos
lods
push
mov
mov
in
pop
icebp
mov
pop
sti
or
inc
(bad)
pop
cmps
mov
in
add
and
dec
js
stos
push
jg
shl
loop
test
sbb
sbb
test
js
fprem
fbstp
adc
out
sub
in
pop
daa
dec
aaa
mov
cmc
icebp
xor
(bad)
repnz
mov
outs
pop
jno
dec
dec
jne
mov
mov
jb
out
into
push
cmp
lea
sti
pop
xlat
add
sahf
dec
arpl
xchg
add
movs
push
out
sub
inc
jmp
stc
sbb
mov
inc
(bad)
sub
xchg
lahf
push
dec
lahf
ss
mov
rol
fnstenv
add
mov
nop
sub
push
and
xchg
lahf
cmp
std
lods
sbb
jnp
push
and
mov
jno
jbe
cmp
das
loope
fiadd
add
dec
push
ins
int3
dec
ret
movs
push
aam
scas
sahf
jp
mov
les
jbe
inc
mov
fild
repz
inc
repnz
dec
mov
in
scas
adc
rol
dec
or
or
jp
pop
out
stc
mov
xor
fstp
add
imul
lods
jp
test
mul
stos
fwait
mov
mov
enter
xor
push
inc
cwde
gs
outs
pushf
mov
and
cmps
cli
push
cmp
cmc
inc
jbe
push
iret
ror
mov
stos
fistp
mov
cmps
cld
push
pusha
outs
in
pop
and
in
dec
cmc
push
pop
pop
fild
daa
imul
sub
fidivr
add
or
imul
mov
cmc
sbb
push
cmp
mov
ja
arpl
or
js
shl
xchg
cmp
imul
inc
test
fwait
ret
pop
aad
out
pop
int3
sbb
enter
mov
mov
out
jno
jo
movs
push
sbb
dec
push
adc
jb
push
sub
and
add
aaa
mov
in
dec
dec
xor
(bad)
dec
dec
and
sub
xchg
mov
loop
adc
pusha
data16
add
xchg
add
mov
and
inc
dec
fmul
shr
add
call
push
lods
dec
pop
jmp
inc
and
sbb
shl
push
and
popa
cmps
ret
out
dec
inc
(bad)
pop
mov
add
nop
xchg
std
cdq
mov
mov
jae
ins
cmp
jo
ret
adc
out
mov
loope
sar
ins
not
repnz
in
dec
in
pop
fwait
adc
inc
test
outs
arpl
sti
gs
cmp
sti
xchg
(bad)
push
add
out
das
inc
inc
jns
xor
jl
mov
mov
inc
sub
xlat
jo
pushf
frstor
enter
push
in
mov
mov
cdq
iret
xor
jae
mov
sti
or
rol
pop
test
and
jecxz
or
and
jge
push
stos
movs
iret
push
mov
mov
sub
int
stos
stos
jge
xchg
js
sub
jmp
pop
sbb
icebp
retf
call
stos
ins
pop
push
pop
sbb
ds
jne
rol
out
pop
pop
adc
outs
cmp
xlat
test
lds
mov
or
xchg
push
inc
xchg
jge
mov
fld
mov
outs
lods
mov
jmp
cmp
sbb
xor
xchg
sub
je
mov
and
loop
nop
jnp
jno
and
jle
and
xchg
lds
jmp
(bad)
xor
and
outs
cli
and
fs
xor
adc
daa
cmp
xor
pop
stc
stc
shl
dec
or
rcl
sahf
nop
jge
inc
frstpm(287
stos
push
int
push
xor
adc
in
push
mov
push
fs
sti
xor
retf
xchg
cmp
daa
outs
scas
push
mov
jg
lea
jno
xchg
push
les
jecxz
sbb
mov
sbb
xchg
sub
fisttp
not
inc
fisub
mov
sbb
jne
ror
pop
and
loopne
lea
in
and
data16
mov
loope
or
mov
lods
adc
cmps
sub
push
jl
bound
aam
jecxz
leave
pop
adc
xchg
retf
xchg
mov
mov
ret
es
(bad)
or
outs
pop
adc
xchg
mov
in
retf
xor
sub
outs
dec
xlat
outs
imul
pop
xchg
(bad)
rcr
xchg
cmp
call
gs
(bad)
or
inc
std
push
adc
scas
xchg
add
stos
test
adc
ins
push
pushf
or
ins
out
ss
aad
(bad)
sbb
rol
sti
dec
repnz
pop
cmp
or
cwde
and
mov
aad
in
cmp
popa
xchg
add
pop
and
pushf
(bad)
into
dec
loope
push
mov
dec
and
and
or
add
into
jg
xchg
cmc
leave
ss
into
ins
ins
or
icebp
sar
sbb
imul
and
add
dec
push
inc
popf
and
jo
xor
or
or
dec
mov
hlt
int3
mov
inc
stc
repz
scas
enter
loopne
das
out
cmc
daa
mov
shr
mov
jecxz
xor
arpl
(bad)
clc
mov
pop
in
aad
sbb
cmp
les
jb
(bad)
cmp
dec
sbb
cmp
(bad)
stc
(bad)
mov
daa
jae
stc
push
loope
adc
dec
scas
sti
sub
popf
test
stos
cmp
lods
xchg
lods
test
cmp
mov
(bad)
pop
adc
fcmove
adc
cmp
into
cmp
pop
sbb
repnz
xor
int
and
sub
xchg
repnz
mov
outs
add
iret
sbb
shr
cmp
movs
scas
xor
and
test
retf
fimul
repz
jmp
movs
push
cmps
test
inc
es
inc
imul
hlt
and
sub
lahf
outs
inc
sbb
mov
cwde
mov
movs
cmp
sub
mov
inc
add
nop
mov
(bad)
lahf
retf
movs
pop
sub
and
scas
xchg
in
stos
mov
shl
inc
sub
push
cmps
and
(bad)
fisub
fist
gs
or
and
jns
jmp
sbb
xor
and
js
mov
or
xchg
outs
mov
fistp
cmp
mov
cli
sub
in
dec
push
psubq
adc
dec
ficomp
sub
add
push
sub
push
test
out
pusha
test
add
in
dec
cmp
xchg
xlat
enter
and
scas
and
out
or
sbb
retf
or
pop
fdivp
mov
mov
jno
mov
jl
gs
outs
add
mov
rcr
jnp
imul
add
retf
adc
loopne
cwde
int3
ins
cmp
push
test
jae
or
xor
rcl
pop
xchg
lahf
jp
pushf
mov
in
ret
cmp
cmp
jbe
jbe
icebp
or
cmp
jg
add
out
ja
push
sti
adc
cld
imul
clc
cdq
jp
push
push
stos
hlt
push
jecxz
xor
xchg
fbstp
xchg
mov
rcr
imul
outs
xchg
icebp
icebp
fcmovne
les
sbb
sbb
mov
mov
jmp
fist
or
movs
pop
dec
bound
cwde
imul
std
or
adc
int3
mov
imul
in
pop
adc
dec
xchg
movs
enter
ss
jecxz
sbb
es
adc
out
sbb
pop
and
pop
mov
les
dec
idiv
ret
int3
push
fild
or
sub
xor
sub
loopne
or
(bad)
call
(bad)
jbe
cmp
cmp
(bad)
jle
xchg
mov
popf
pop
pop
prefetcht0
jle
popf
nop
push
popa
icebp
movs
outs
and
enter
pop
lods
push
adc
mov
adc
push
retf
mov
push
add
pop
push
xchg
push
xchg
jo
std
ins
or
fnstenv
nop
add
repnz
(bad)
cmp
mov
js
std
pop
and
cmc
shl
daa
push
int3
gs
in
or
xor
sbb
iret
inc
sub
(bad)
es
hlt
jmp
cmp
jmp
inc
fxch
jecxz
sbb
jo
xlat
popf
jmp
ss
mov
and
push
fsubrp
loopne
enter
mov
(bad)
xchg
cld
cmc
jmp
pop
retf
add
inc
xor
xor
and
jmp
adc
add
xchg
sti
mov
xchg
xor
stos
cwde
cli
lea
pop
daa
and
hlt
mov
sub
loope
aaa
or
mov
sub
loop
mov
out
mov
cmp
iret
fs
and
xor
das
out
ss
dec
xchg
imul
dec
mov
sti
cmp
inc
icebp
cmc
mov
sbb
ins
mov
rol
push
jae
sub
push
mov
shl
(bad)
pop
and
jmp
(bad)
adc
imul
int3
inc
inc
lds
sub
into
xchg
or
xor
jo
push
aas
(bad)
push
jmp
in
adc
outs
or
push
in
dec
and
fistp
inc
dec
fs
dec
es
dec
cld
xor
add
dec
mov
cmp
mov
loope
cmp
enter
retf
std
pop
sahf
ins
sbb
add
or
jo
mov
cmp
cmp
fstp
pushf
mov
test
push
test
inc
and
dec
adc
cli
inc
cmc
cmp
dec
jne
jb
adc
xor
mov
test
into
pushf
xor
sub
ins
jmp
loopne
stos
adc
aam
mov
and
mov
jae
sbb
push
jmp
xor
mov
das
adc
idiv
add
call
mov
mov
sbb
jecxz
lds
pop
(bad)
xor
pop
mov
popa
cmp
mov
call
push
dec
add
clc
push
ja
dec
clc
sbb
pop
add
cmp
test
mov
mov
nop
mov
xchg
cmp
mov
movs
mov
push
push
xchg
loopne
leave
or
mov
outs
test
jbe
cli
js
push
pusha
jo
mov
lock
sub
sub
shl
ja
xor
mov
pop
daa
out
lock
or
addr16
dec
int
fist
jnp
or
lds
call
aaa
dec
mul
mov
cmps
cmps
mov
jmp
jnp
(bad)
jns
jmp
fistp
push
daa
daa
ja
outs
add
add
outs
push
inc
dec
cmp
pop
xor
pop
imul
jg
ins
jle
add
pop
sub
ins
inc
je
or
sbb
lock
(bad)
ror
mov
push
sub
ins
cdq
pop
or
fcom
and
add
add
call
mov
inc
lock
mov
aam
xchg
clc
push
add
fldlg2
mov
retf
push
scas
ret
pushf
test
mov
outs
inc
dec
(bad)
mov
iret
pusha
or
cmps
mov
mov
jae
neg
jno
jns
popf
mov
mov
outs
mov
add
push
xor
pop
(bad)
sub
cli
in
out
(bad)
push
stc
mov
sbb
popa
test
repnz
jbe
gs
push
retf
add
adc
test
or
dec
nop
in
add
mov
sub
nop
push
les
pop
shr
push
scas
int3
retf
aam
jg
lahf
js
xlat
push
cmps
int3
inc
outs
movs
cmp
scas
movs
pusha
ffreep
inc
cmp
call
es
shl
sub
or
pusha
and
pop
cwde
mov
(bad)
outs
push
cmp
pusha
mov
jge
es
add
(bad)
jae
or
addr16
push
pop
jb
loopne
xor
add
sub
inc
shl
mov
call
gs
jl
addr16
and
pop
or
test
imul
(bad)
mov
sbb
in
outs
lahf
in
fadd
inc
sbb
popf
pop
xlat
(bad)
sbb
inc
dec
mov
sub
mov
push
test
inc
clc
inc
mov
jmp
inc
mov
ins
mov
xor
test
outs
mov
xor
in
es
ss
add
pop
rcl
dec
sub
jae
cmps
clc
push
push
cmps
sub
std
inc
sub
sub
scas
hlt
inc
faddp
push
das
mov
fistp
xchg
mov
inc
push
jns
add
test
and
jns
sbb
and
sbb
stos
pop
retf
mov
push
fsub
pop
mov
pop
cli
mov
cs
or
xchg
jb
icebp
scas
jmp
or
and
xchg
pop
and
out
mov
loope
sub
push
mov
into
cmp
push
or
and
inc
cmps
push
loopne
jmp
mov
rcr
imul
call
inc
xchg
and
xchg
xor
aas
pop
push
hlt
and
mov
test
xor
(bad)
adc
pop
imul
cs
inc
mov
ficomp
icebp
inc
or
and
cmps
out
jge
or
cld
mov
(bad)
ins
mov
lar
ss
out
push
sbb
rcl
aaa
inc
icebp
mov
fisub
jl
cmc
push
dec
cmp
jl
movs
sub
jb
push
mov
int3
iret
pushf
out
retf
pop
shl
es
ret
xor
in
mov
jne
mov
popa
inc
jmp
jne
pop
test
mov
aam
mov
cmp
call
jle
dec
sbb
xor
enter
lahf
mov
push
adc
xchg
xor
xchg
js
test
push
scas
pop
bound
lods
dec
jle
addr16
cmp
outs
xor
pop
retf
shr
mov
cdq
xlat
mov
test
cmp
(bad)
daa
ja
cmps
arpl
adc
or
retf
push
cmps
inc
push
jne
sub
mov
jg
and
mov
pop
inc
jecxz
xor
stc
arpl
mov
outs
mov
push
cmp
cmps
mov
sub
daa
mov
mov
mov
mov
rcr
dec
test
addr16
cmps
xchg
sbb
jmp
sar
fwait
sub
jmp
mov
sbb
or
push
aaa
outs
sbb
jge
loop
add
jns
xor
loopne
and
out
loopne
call
mov
mov
adc
call
jno
pop
mov
inc
add
in
mov
(bad)
out
fdivr
or
add
ins
mov
sbb
imul
cmps
mov
loope
clc
cs
mul
mov
scas
mov
not
mov
pop
call
dec
xor
sbb
clc
sbb
mov
and
add
(bad)
sbb
add
out
dec
pop
repnz
ret
lods
push
add
mov
icebp
jo
es
dec
lds
add
dec
(bad)
jge
mov
test
iret
xchg
jl
mov
retf
pop
ficomp
xchg
cmps
dec
pop
push
adc
mov
mov
in
into
pop
add
jae
pop
sub
icebp
push
(bad)
xchg
mov
dec
out
jnp
dec
xchg
cmps
(bad)
add
or
jne
popa
jne
shl
scas
jne
jge
and
add
xchg
ret
dec
fild
movs
scas
sub
or
push
retf
or
(bad)
jns
add
retf
cmc
mov
(bad)
or
fstp
adc
xlat
dec
jns
aam
scas
mov
out
jnp
cld
lods
xchg
sahf
sub
pop
outs
mov
test
pop
bound
inc
push
jno
lahf
call
lahf
ins
adc
lock
dec
scas
repz
mov
lods
jl
inc
test
test
dec
pop
dec
stos
xchg
out
jmp
inc
xor
aam
(bad)
mov
sub
cld
pushf
sbb
jmp
push
int3
jmp
push
stos
clc
and
loope
sub
pushf
and
inc
imul
sbb
cld
sub
scas
aad
add
bound
or
mov
add
repnz
out
dec
mov
add
or
fucomp
loop
clc
adc
sbb
dec
daa
mov
data16
or
lds
nop
aam
loopne
xchg
in
arpl
push
dec
jecxz
arpl
push
stos
inc
xchg
mov
xor
loope
das
and
imul
mov
enter
and
adc
xor
sbb
aaa
xchg
or
mov
jg
shl
or
ins
sub
ins
mov
nop
mov
ins
jecxz
(bad)
lods
mov
fmul
adc
sbb
jb
jecxz
movs
xchg
or
pop
sbb
sub
mov
xor
jmp
inc
or
sbb
rcl
es
mov
sbb
enter
imul
add
ret
shl
inc
adc
sahf
xchg
retf
sti
test
or
push
psadbw
jl
(bad)
rcl
pushf
jge
mov
(bad)
into
imul
and
dec
mov
add
add
gs
add
cmp
inc
mov
es
sub
out
dec
mov
adc
adc
sti
pop
pop
(bad)
push
movs
data16
out
cmp
push
cs
xlat
jmp
xlat
loope
jo
dec
mov
adc
aam
dec
mov
dec
pop
jb
ins
jnp
bnd
(bad)
test
test
and
sub
cmp
pop
jl
int3
ins
sub
inc
jnp
mov
and
mov
adc
or
jecxz
rcl
aad
fwait
add
mov
std
push
rol
repz
ins
or
call
jp
mov
push
and
xor
(bad)
xchg
cmp
or
xchg
jmp
pop
jno
lock
xchg
pop
cmps
mov
stc
test
inc
int
jmp
xor
pop
int
mov
xchg
cmp
xchg
sub
mov
mov
or
movs
mov
loop
or
jo
ja
cmp
inc
mov
or
into
push
pop
mov
inc
push
xchg
aaa
fistp
(bad)
jp
aas
imul
adc
xchg
fidivr
jns
(bad)
cmp
sub
xchg
inc
jmp
add
sub
outs
dec
dec
or
jp
dec
mov
dec
(bad)
cmp
hlt
sbb
fadd
sbb
mov
adc
les
xchg
cli
cdq
xor
mov
or
(bad)
sti
and
das
outs
aad
sbb
add
mov
rcr
lock
out
mov
shl
(bad)
stos
and
pop
rcr
cmp
rcl
or
pushf
mov
adc
lock
cmovb
bound
sar
or
dec
jbe
mov
mov
ins
jns
inc
aam
movs
xchg
xchg
mov
mov
inc
jne
nop
add
and
scas
das
movs
enter
push
cmp
scas
sub
cmp
rol
push
add
xchg
cmp
jle
add
xchg
ja
(bad)
jle
cdq
ret
call
sbb
pop
ins
aaa
rol
mov
add
rcl
sbb
adc
fwait
mov
and
and
xchg
push
xchg
cmp
gs
pop
cmps
stos
pop
push
out
in
fcomp
xchg
push
cwde
sub
test
add
pop
mov
imul
ds
xchg
mov
test
adc
push
bound
pop
mov
clc
js
invd
out
in
bound
nop
pop
xchg
rcl
aas
leave
shl
call
or
jmp
mov
shl
add
ds
sti
(bad)
mov
xchg
pop
pusha
stos
outs
pop
test
cmp
xor
jl
into
mov
and
into
std
xchg
sbb
les
pop
xor
jg
test
push
xor
mov
mov
push
push
sbb
add
cld
and
test
or
repz
xor
sbb
fmul
nop
adc
test
shr
xchg
aaa
jmp
out
adc
or
data16
test
aaa
cmp
icebp
enter
xchg
xor
into
xchg
mov
sub
jge
push
call
pushf
sub
(bad)
inc
or
(bad)
mov
push
daa
sbb
jmp
scas
repnz
jle
shl
dec
int
xchg
lods
jecxz
pop
inc
bound
icebp
dec
push
je
in
jmp
shr
ss
sbb
mov
xchg
in
mov
dec
lock
fdiv
inc
retf
dec
xchg
push
fwait
cdq
jb
out
iret
aaa
loope
test
iret
adc
movs
imul
mov
sbb
loopne
push
fdiv
xchg
popa
outs
daa
loop
pop
scas
xlat
adc
jb
and
outs
js
push
pop
push
lods
mov
call
jl
fs
add
rol
push
mov
ret
sub
retf
sahf
ret
sbb
sbb
mov
out
mov
push
adc
ds
mov
mov
mov
xor
(bad)
hlt
adc
adc
outs
test
inc
push
xor
retf
pop
fs
add
ins
data16
and
xor
adc
out
inc
push
test
jns
cwde
cmp
inc
xchg
call
in
inc
movs
test
dec
add
aas
xor
inc
mov
push
and
dec
aam
call
mov
dec
inc
fcomp
ins
sbb
xlat
call
mov
jb
sbb
mov
inc
pop
cld
mov
nop
mov
push
and
mov
or
test
ja
scas
loopne
xchg
fidiv
push
push
jmp
adc
add
sbb
mov
pop
mov
imul
sub
fst
mov
sbb
movs
push
scas
cmp
aad
test
push
and
sub
push
cdq
mov
push
adc
cmp
fdivr
dec
and
cmp
test
arpl
push
jmp
lea
repz
dec
out
cmp
adc
psubw
inc
add
js
mov
pop
push
fsub
or
ds
jmp
or
cmp
(bad)
jle
stos
sub
inc
rcr
or
jns
cwde
and
fcomip
cli
adc
arpl
loop
lods
cwde
pop
xor
mov
pop
jl
mov
test
mov
and
scas
cmps
adc
xor
sub
aas
mov
jl
jb
mov
adc
sub
int3
jno
xchg
inc
xor
xchg
pop
push
xlat
pop
or
cmp
fisub
mov
mov
pop
jae
dec
pop
cmp
or
xor
inc
add
adc
lods
aaa
imul
dec
aaa
stc
(bad)
lock
test
mov
xchg
push
out
mov
or
xchg
sub
into
xchg
pusha
jmp
sbb
jno
mov
inc
sahf
xchg
jl
loope
or
cli
jae
(bad)
fsub
(bad)
jecxz
test
mov
(bad)
leave
inc
or
xor
gs
xchg
(bad)
repnz
sub
sub
in
and
ins
dec
dec
add
push
inc
pop
xor
adc
mov
adc
loopne
aaa
mov
or
adc
mov
aad
leave
jns
and
push
jbe
push
inc
sub
cld
sub
and
call
daa
jmp
shl
aam
outs
push
xchg
cmp
fcomp
ret
ficom
int
rol
sub
cdq
xchg
test
out
je
sbb
mov
mov
mov
shl
aaa
mov
adc
dec
jno
jae
or
call
and
clc
fadd
scas
fdiv
push
sub
repnz
and
xlat
in
js
adc
pusha
js
stos
test
adc
push
and
dec
mov
xchg
dec
retf
pop
sub
or
sub
and
mov
mov
leave
(bad)
jmp
sbb
pop
iret
mov
xchg
in
mov
jno
mov
and
popa
js
lea
popf
push
jnp
push
xor
gs
or
dec
push
push
ror
outs
xchg
outs
mov
inc
pop
sub
inc
(bad)
push
push
sub
sub
cmc
mov
fdiv
js
imul
push
das
jae
mov
mov
jae
xor
clc
int3
shl
sbb
sub
out
xchg
inc
add
pop
sahf
pushf
add
outs
inc
loope
loope
imul
mov
retf
and
or
add
mov
xor
(bad)
cmp
pop
iret
out
ins
bound
pminub
imul
xlat
inc
add
xor
jo
or
or
mov
inc
call
ds
imul
cmp
imul
jns
(bad)
jo
mov
aad
mov
inc
push
retf
dec
inc
adc
(bad)
push
jp
dec
gs
out
outs
add
stos
mov
mov
sti
sub
dec
cmps
mov
adc
enter
add
jnp
inc
pop
xor
dec
pop
sub
lahf
jg
jo
(bad)
mov
in
mov
dec
cmps
es
sbb
inc
xor
rcl
leave
add
adc
push
jmp
iret
ret
sub
inc
jmp
xchg
mov
push
scas
inc
mov
jl
mov
das
add
push
mov
jo
sti
jecxz
pop
fxch
in
jle
xchg
loope
pop
push
into
hlt
cli
xor
lahf
adc
or
into
mov
sbb
adc
cmps
xlat
ins
repz
inc
sbb
and
adc
xchg
push
dec
mov
cmp
leave
ret
ret
(bad)
dec
xchg
cmp
jg
js
inc
inc
clc
dec
in
mov
movs
ret
std
test
inc
test
test
inc
pop
and
inc
jl
cmps
push
(bad)
cmp
dec
ror
mov
mov
jmp
scas
dec
and
or
iret
fs
push
loop
mov
add
fisub
push
dec
inc
les
mov
lds
les
push
pop
mov
jnp
in
lock
mov
or
sbb
les
and
enter
fwait
xor
ss
sar
mov
sbb
push
(bad)
and
ror
jo
call
sub
push
imul
push
loop
popf
stos
cmps
push
cmp
lahf
xor
retf
mov
mov
shr
sbb
xor
and
cmp
lds
dec
ret
ins
add
fnstcw
mov
out
sahf
mov
mov
push
scas
pushf
mov
sbb
mov
mov
repnz
mov
jo
adc
ins
push
cmp
or
xchg
xor
add
add
fistp
mov
addr16
arpl
clc
into
and
jp
fwait
inc
mov
sub
xlat
push
sub
sbb
jns
mov
jno
push
call
jbe
retf
fiadd
inc
push
mul
fnstcw
loopne
js
or
pop
adc
rol
cmps
pop
fistp
pusha
scas
jg
bound
dec
popf
xor
dec
jno
jmp
pop
stos
repz
push
jl
xor
lds
xor
mov
mov
(bad)
pop
xor
jle
xor
mov
push
adc
aad
(bad)
lock
mov
ja
aam
ss
js
jno
nop
dec
in
xor
adc
fldenv
sub
(bad)
xchg
lods
fs
xchg
pusha
stos
push
fldcw
dec
into
std
jo
cs
dec
fs
fwait
or
in
stc
or
and
mov
ret
jmp
add
and
aaa
jmp
shl
das
cmp
sub
inc
cmc
outs
scas
pop
jg
dec
in
adc
pop
xlat
mov
push
mov
add
test
inc
ficomp
xor
adc
enter
pop
aaa
dec
call
out
pop
mov
imul
popa
jb
push
cdq
test
and
adc
inc
jns
pop
pop
sub
fadd
push
jae
test
jbe
ficom
dec
dec
mov
inc
mov
cwde
xchg
jle
hlt
in
dec
clc
stc
xlat
in
in
idiv
and
xor
aaa
ret
cs
add
and
data16
add
and
cdq
das
scas
retf
add
add
adc
jle
mov
mov
ss
mov
pop
pop
ds
fsubr
fmul
or
xchg
out
mov
and
stos
es
adc
fwait
cmp
fisubr
pushf
cmp
sbb
shl
mov
sbb
jle
dec
out
jno
movs
cmp
ja
in
movs
(bad)
jmp
out
adc
das
mov
cmp
sub
mov
imul
sub
pop
jl
(bad)
pop
stos
xchg
es
mov
test
sub
cmps
xlat
outs
xchg
les
mov
data16
mov
mov
push
cli
xchg
stos
es
mulps
sbb
stos
pop
hlt
adc
data16
ins
icebp
rcl
dec
and
dec
fdivr
ret
dec
lahf
adc
int3
movs
sar
loop
rcl
jb
inc
mul
out
adc
mov
rol
sahf
ret
(bad)
inc
fbstp
test
sar
sbb
dec
jge
pop
(bad)
push
xchg
inc
sahf
mov
cmp
shr
sbb
sub
test
cli
push
dec
pop
int3
mov
jae
push
sub
xor
clc
scas
les
lock
jmp
test
mov
fwait
dec
hlt
jne
jmp
add
dec
mov
repz
and
sub
mov
pop
jge
lods
idiv
data16
retf
inc
jbe
mov
adc
out
ror
mov
cmc
mov
test
aaa
add
xor
(bad)
stos
cld
lds
icebp
scas
or
jl
dec
sub
push
sahf
pushf
jmp
jns
das
popa
add
or
adc
fldcw
mov
xchg
stos
cmc
and
test
dec
fs
or
lahf
loopne
or
mov
xchg
jp
lods
pop
out
inc
cmps
mov
les
mov
adc
xor
cmp
xchg
gs
test
jg
pop
push
icebp
adc
jo
ja
xchg
inc
push
outs
addr16
rcr
or
js
outs
sbb
test
test
adc
sub
jl
push
bound
fidiv
ja
movs
mov
xor
sar
mov
push
cs
retf
mov
iret
and
popa
je
push
push
xchg
daa
mov
jmp
mul
cli
out
push
mov
ja
sub
ror
and
mov
push
push
pop
test
or
mov
test
aad
fcomp
je
jne
ror
adc
xchg
call
imul
mov
or
add
sbb
loop
stc
pop
dec
dec
cmp
cwde
sbb
xchg
es
sub
fucom
sub
test
idiv
and
pop
sbb
es
je
pop
cmp
sub
xor
sahf
sub
cmc
push
leave
mov
mov
lods
es
fistp
mov
jbe
push
lahf
cmp
pop
in
mov
dec
aam
jp
add
mov
fnstenv
push
ins
add
dec
inc
mov
ja
sbb
cmp
loope
mov
movs
rcr
scas
pusha
lods
pop
cmp
nop
(bad)
fcom
repz
push
adc
push
sub
xor
mov
test
jmp
ss
jnp
push
dec
aam
and
iret
(bad)
xchg
xor
and
bound
mov
fistp
xor
cld
ret
stos
into
inc
sbb
mov
je
xchg
sar
in
aad
inc
call
pop
movs
cmps
pop
es
rol
fadd
mov
cmp
jg
adc
in
popa
hlt
jo
in
push
jecxz
sti
dec
call
sub
jp
xchg
add
cmp
adc
jp
frstor
mov
xor
loope
sbb
test
mov
inc
sub
(bad)
mov
pop
mov
xchg
lds
stc
outs
je
aam
inc
fwait
(bad)
add
push
test
pop
sar
sti
push
inc
retf
and
(bad)
dec
jmp
jmp
int
es
call
xchg
sti
inc
rcr
call
push
cmp
popa
outs
in
dec
fadd
pop
out
out
mov
jg
xor
inc
push
cmp
dec
lahf
push
cmps
lds
jge
or
sbb
idiv
inc
mov
ss
or
push
mov
push
scas
pop
mov
mov
push
mov
inc
inc
pusha
mov
jle
cmp
mov
inc
push
push
retf
xor
fwait
sbb
sbb
neg
outs
cmps
sbb
mov
xchg
test
and
sub
dec
mov
or
mov
pop
push
and
sub
retf
in
popf
test
cmc
(bad)
xor
retf
push
call
mov
or
add
add
push
adc
stos
or
add
(bad)
xchg
jle
or
shl
(bad)
dec
push
mov
das
popf
out
push
add
adc
ds
pop
movs
jle
retf
add
dec
inc
pop
lock
gs
mov
dec
aad
test
nop
mov
inc
and
outs
shl
mov
dec
xchg
dec
repz
adc
pop
in
leave
lock
popf
xchg
sbb
mov
push
fnsave
imul
sub
(bad)
mov
push
and
ss
lock
stc
shl
outs
jg
sti
adc
pushf
inc
push
call
jb
sbb
mov
pusha
push
pop
adc
das
mov
pop
jbe
or
lahf
sub
mov
dec
inc
addr16
sbb
dec
jg
stos
sbb
xchg
sub
movs
fwait
stc
inc
xlat
daa
neg
daa
mov
outs
push
inc
or
inc
imul
test
mov
sar
adc
ror
sbb
repnz
shl
gs
jp
mov
xchg
xchg
int3
(bad)
jl
retf
movs
pop
aam
fidivr
repnz
(bad)
mov
out
out
dec
cmp
adc
ins
cmp
push
sbb
out
add
scas
sbb
mov
(bad)
int
dec
push
jmp
mov
shr
mov
mov
push
(bad)
call
jbe
(bad)
cmps
xchg
or
in
xchg
imul
pusha
mov
add
pop
xor
inc
aad
stc
sub
jmp
dec
xor
sub
mov
jecxz
cld
jo
push
xchg
adc
loop
fldenv
(bad)
ja
jecxz
out
cmp
mov
or
hlt
and
add
jns
jge
into
(bad)
aas
popa
sub
mov
add
ss
mov
and
jge
imul
xlat
scas
outs
fcmove
xchg
fwait
pop
xor
jp
add
jbe
pop
std
mov
int
push
dec
mov
adc
pop
rol
xchg
mov
pop
pop
movs
or
outs
(bad)
ds
pop
(bad)
(bad)
mov
arpl
or
cmp
scas
mov
(bad)
cmp
sub
ja
arpl
jge
fmul
xchg
pop
dec
mov
mov
mov
cmp
jb
retf
or
push
push
rol
outs
loop
sbb
mov
sahf
outs
dec
add
cmp
add
daa
test
push
shl
push
add
inc
jmp
dec
ins
pusha
push
dec
adc
xor
sbb
cld
arpl
das
je
call
nop
pop
in
jg
gs
retfw
imul
adc
fsub
or
cmp
int
aaa
and
dec
sbb
xchg
std
pop
inc
scas
jne
push
xchg
call
mov
cmp
jmp
pop
mov
mov
in
sub
xor
ss
jle
mov
in
xchg
dec
dec
fwait
inc
inc
jecxz
test
cld
or
ds
jmp
imul
out
adc
jns
mov
test
push
pop
(bad)
xchg
sti
scas
jne
mov
adc
shr
xor
clc
adc
push
icebp
jmp
and
jmp
les
stc
gs
idiv
cmp
xchg
push
jecxz
inc
ds
movs
call
retf
sbb
mov
jle
mov
jae
int
shl
call
push
or
in
das
jb
pop
or
stos
pop
push
call
mov
and
and
cdq
dec
or
push
cli
movs
test
lea
dec
push
mov
lahf
stc
aaa
das
adc
int3
js
int3
rcr
imul
inc
push
js
adc
and
lock
cmc
dec
push
mov
jbe
sub
mov
sbb
int3
shl
clc
sub
inc
mov
push
rcl
lods
cmp
sbb
mov
cwde
dec
movs
cmp
push
cmp
(bad)
(bad)
cmp
mov
sub
gs
cmp
and
(bad)
jno
out
push
or
inc
enter
mov
ret
inc
stos
scas
data16
scas
neg
lahf
ret
and
retf
sbb
sbb
(bad)
sbb
adc
and
cmp
sbb
inc
iret
data16
js
setbe
jge
shr
jae
jle
push
shl
mov
dec
ins
outs
jmp
push
and
cmp
lahf
ret
jnp
pop
jno
mov
xor
jecxz
int3
scas
cdq
cmc
ins
shr
movs
or
xchg
jmp
cmp
stos
retf
push
in
in
jb
jbe
scas
xor
dec
jmp
or
inc
jbe
push
aad
sbb
popf
mov
cwde
push
mov
outs
pop
jne
sbb
jnp
fmul
hlt
xor
xchg
sbb
mov
sets
jbe
clc
adc
cmps
xchg
outs
add
leave
cdq
ja
arpl
cli
inc
add
rcr
or
out
push
lds
rcl
jecxz
ret
xchg
test
lds
out
sbb
pop
sub
xchg
push
or
std
retf
jl
in
jg
clc
inc
movs
sbb
push
jge
jns
fxch
inc
sub
and
xchg
xor
neg
or
xor
adc
call
push
jno
inc
ror
jecxz
push
or
adc
icebp
or
push
dec
fst
ja
bound
imul
leave
scas
aam
push
or
mov
mov
push
mov
jmp
pop
mov
in
jmp
and
jmp
xor
dec
cmps
and
mov
xchg
cmp
stos
mov
xchg
ficomp
(bad)
pop
dec
cmp
xor
sahf
leave
mov
call
mov
adc
test
mov
pop
mov
lods
inc
jmp
jl
mov
imul
or
xchg
dec
jns
mov
stos
jmp
mov
mov
pop
sbb
outs
je
jl
call
inc
ins
push
add
fwait
es
(bad)
dec
pushf
jmp
pop
dec
cmps
stos
jecxz
mov
or
pop
loopne
pop
jmp
or
xchg
in
add
xchg
lahf
pop
mov
cmp
mov
in
mov
rol
outs
adc
mov
imul
mov
mov
push
ds
mov
jo
enter
icebp
popa
and
aas
test
mov
pop
ficomp
sub
jnp
cmps
mov
push
jnp
sbb
int3
mov
adc
push
jnp
push
xor
jae
icebp
xor
stc
das
shr
mov
inc
test
pop
gs
or
sahf
mov
nop
jb
pop
sbb
mov
icebp
xchg
es
lds
xchg
loope
rcl
cmp
push
arpl
mov
in
adc
pop
scas
clc
or
and
mov
dec
ins
mov
jne
pusha
mov
cmps
cwde
aas
imul
aas
(bad)
and
es
aas
push
xchg
in
gs
dec
jb
test
icebp
or
jp
xchg
jge
mov
dec
aam
(bad)
pop
call
push
ret
(bad)
mov
movs
outs
int3
mov
add
jae
sti
sbb
dec
in
cmps
(bad)
dec
jg
add
mov
scas
add
xor
push
scas
leave
jbe
data16
sub
ror
inc
jecxz
dec
std
out
jb
out
frstor
retf
mov
xchg
cmp
dec
movs
int
sbb
jl
xchg
mov
inc
loope
repz
out
sahf
data16
or
push
add
out
mov
push
stos
test
and
push
xchg
xchg
es
or
pop
idiv
(bad)
jmp
push
xchg
fmul
dec
push
push
retf
sti
sub
and
jbe
cmp
fild
(bad)
jmp
mul
std
popf
and
jg
leave
sbb
stos
jb
and
je
into
dec
not
and
add
mov
ror
inc
int
pop
xchg
or
jmp
clc
push
repnz
test
sahf
sbb
in
add
adc
dec
je
test
data16
bound
and
pop
and
out
jno
dec
mov
into
mov
xor
fidivr
inc
repz
std
dec
loope
daa
test
xchg
dec
mov
out
push
test
ror
mov
dec
sbb
jge
inc
fsubr
int
cmps
test
je
(bad)
push
out
repz
sub
rol
add
popa
addr16
call
rcr
jnp
es
adc
cmps
adc
inc
cmps
pusha
sub
sbb
lds
mov
jns
mov
test
fwait
aaa
ret
sub
test
and
(bad)
dec
es
rcl
xchg
out
mov
and
mov
push
jbe
lds
addr16
lock
ja
movs
mov
lds
imul
fst
or
xor
into
aam
add
fs
mov
mov
cmps
jp
aad
or
lock
push
adc
add
jmp
push
in
ret
xchg
pushf
mov
mov
in
cld
mov
mov
dec
rcl
fild
mov
in
fisttp
mov
call
mov
sub
jg
in
mov
add
xor
rcl
mov
add
mov
cli
bound
lods
xchg
fs
pop
imul
cld
cmp
inc
sbb
sub
push
fsub
outs
hlt
iret
mov
fdivr
out
les
pop
sti
sbb
imul
jge
clc
enter
mov
cdq
gs
and
or
sahf
or
mov
fadd
movs
dec
jno
xchg
push
cmc
(bad)
fiadd
xchg
mov
xchg
inc
xor
in
mov
dec
movs
push
(bad)
lock
retf
inc
not
repz
mov
popa
xor
cmp
sbb
add
jle
and
test
sahf
xlat
xor
cmp
popa
enter
jg
mov
pop
lahf
pop
inc
ret
mov
xchg
into
sbb
add
or
lods
push
inc
jmp
adc
mov
mov
imul
gs
sbb
sub
jb
adc
(bad)
and
ja
mov
xor
ja
push
fwait
outs
div
dec
int
in
nop
in
mov
es
lds
push
inc
jl
gs
pop
add
fcomp
outs
dec
mov
ds
jne
popa
cmc
bound
add
jg
bound
sbb
mov
adc
pop
lds
fcomp
sbb
push
scas
arpl
jo
repz
lea
jmp
repnz
test
lock
enter
int3
or
xor
xchg
out
pop
mov
dec
cmp
xchg
aaa
out
mov
mov
cmp
dec
mov
pop
or
ret
fldenv
and
or
xchg
arpl
jo
les
ror
adc
inc
test
cwde
aad
push
icebp
scas
sbb
outs
test
cmp
mov
cs
(bad)
mov
push
mov
scas
movs
xchg
inc
mov
nop
xchg
or
mov
pop
je
fwait
jmp
lds
mov
push
pop
imul
cmp
pop
icebp
std
sub
shl
sbb
and
pop
ds
mov
loopne
dec
test
jae
sub
lea
adc
pushf
enter
stos
sub
mov
or
jmp
movs
mov
mov
jae
push
imul
cmp
call
cmp
cmc
mov
enter
inc
out
and
sbb
cmp
add
or
and
pop
fs
call
retf
lock
loop
fld
pop
push
dec
int
bound
shl
xchg
aad
push
dec
out
repnz
mov
dec
lods
or
pop
pop
add
adc
(bad)
dec
mov
sbb
addr16
lods
movhps
div
jae
lods
ret
xor
fs
int
fst
fisttp
int3
sahf
bound
lahf
push
retf
adc
cmps
pop
sar
out
nop
fild
cmp
std
cli
(bad)
(bad)
neg
sub
pop
fisubr
out
stc
loopne
jg
add
jo
push
enter
scas
inc
addr16
shr
xor
es
rcr
and
dec
and
test
or
fs
cmp
mov
std
repz
psubd
sub
sub
mov
push
in
shld
rcl
mov
push
adc
sahf
mov
sub
adc
scas
call
ds
adc
or
jbe
scas
push
xor
dec
sub
sub
js
pop
gs
sbb
mov
and
add
mov
inc
cwde
xchg
test
bound
jmp
mov
arpl
or
out
add
ins
mov
and
retf
mov
callw
shl
inc
xor
inc
mov
arpl
sbb
sub
ja
pop
out
mov
or
(bad)
cmc
xor
pop
ins
inc
inc
or
ret
cli
or
rol
lods
stc
cmp
ja
retf
hlt
cmp
xchg
mov
packssdw
adc
jmp
outs
popa
(bad)
aad
frstor
add
jnp
(bad)
out
pop
(bad)
add
sbb
dec
cwde
ja
push
pusha
adc
cli
mov
int
scas
daa
add
pop
aaa
(bad)
jno
jp
aad
fdiv
xchg
or
fnstenv
out
pop
adc
sub
xchg
mov
or
imul
fldl2e
xchg
sub
xor
repz
cmps
xor
push
ins
loop
add
call
cwde
mov
mov
movs
xchg
mov
sysexit
pop
stc
xchg
and
test
push
lahf
movs
xlat
sub
(bad)
push
shl
push
cmp
mov
idiv
cwde
jns
and
aad
or
cmp
in
dec
jb
cmp
jle
pop
mov
xor
retf
out
popf
and
mov
mov
and
cs
add
fld
push
fwait
aaa
icebp
adc
xor
mov
iret
cmps
mov
mov
retf
into
inc
out
mov
xor
std
mov
dec
sahf
cmps
nop
loopne
pop
xchg
fwait
int3
xchg
mov
bound
push
shr
ficom
aas
adc
jl
push
mov
add
jle
dec
jmp
cmp
inc
lods
iret
fcom
movs
sbb
lods
adc
inc
jns
xchg
mov
jbe
jmp
pop
in
scas
popa
daa
mov
mov
mov
inc
enter
(bad)
jnp
les
int3
mov
hlt
mov
or
mov
ins
(bad)
adc
fistp
aaa
(bad)
stc
aad
cmp
cmps
inc
retf
mov
fisubr
icebp
movs
data16
lahf
add
int
ja
push
mov
jo
mov
push
sbb
shl
icebp
mov
mov
sub
in
ja
mov
ret
mov
outs
or
and
adc
cmp
outs
dec
mul
test
cdq
call
or
aaa
push
mov
sti
jl
cmp
xchg
xor
bnd
xchg
out
pop
jns
in
out
dec
stos
(bad)
scas
cmp
sbb
sbb
cmp
sbb
pop
and
add
popa
das
mov
dec
nop
setb
imul
dec
xchg
gs
push
(bad)
push
mov
and
xchg
dec
sti
clc
sar
xor
ins
dec
jp
daa
imul
repz
cmps
push
dec
jno
pop
mov
test
pop
imul
test
in
lods
fisttp
and
loopne
fbstp
and
pop
sbb
scas
jnp
mov
mov
xor
jge
loopne
mov
hlt
ins
outs
rol
jmp
loope
jecxz
or
int
xor
inc
cmp
not
or
and
xor
mov
xor
cmp
sub
pop
fmul
jle
pop
cmps
xor
movs
mov
jne
imul
shl
movs
cmp
cmp
inc
xor
retf
scas
mov
xchg
adc
mov
loopne
push
xor
lods
push
scas
xchg
xchg
lea
lahf
ins
test
inc
ins
jle
adc
out
xor
fdivp
push
xor
sub
sub
xchg
and
lods
mov
cmp
pop
sub
cdq
mov
sub
adc
(bad)
or
enter
jp
jecxz
sub
hlt
or
imul
aam
or
fnstsw
pop
pushf
mov
frstor
or
inc
daa
cdq
scas
mov
add
pop
shr
xor
xor
enter
nop
je
or
(bad)
jne
adc
sbb
or
(bad)
pop
adc
and
fcom
mov
sbb
pusha
jl
lds
or
add
inc
cdq
daa
pop
movs
push
(bad)
ins
jecxz
mov
jl
cdq
cli
adc
sub
fwait
mov
xor
or
andps
dec
cdq
(bad)
std
(bad)
retf
mov
sbb
dec
sbb
ds
jb
fisub
push
iret
add
jb
je
and
pushf
dec
mov
pop
pop
stos
mov
mov
sbb
sbb
mov
icebp
xchg
mov
sbb
mov
pusha
xchg
ret
push
out
scas
out
stc
imul
call
push
stos
call
ds
pusha
(bad)
sub
pop
aad
bound
jecxz
and
(bad)
mov
inc
mov
mov
ds
or
(bad)
popa
mov
iret
shl
adc
popf
test
int3
adc
inc
mov
cmp
cdq
jo
(bad)
sbb
sub
add
sub
mov
sub
xor
inc
fwait
adc
imul
nop
xchg
mov
shl
clc
xlat
mov
lods
mov
and
and
push
push
mov
mov
in
push
mov
mov
jecxz
inc
test
inc
shr
add
jp
mov
popa
cmp
or
pop
cmp
neg
mov
mov
int
jbe
add
in
lock
xlat
mov
out
arpl
les
adc
and
mov
mov
sub
inc
cmp
aam
xor
call
xchg
add
fsub
jmp
and
mov
retf
push
mov
(bad)
aaa
jnp
jge
stos
push
jmp
loop
movs
jp
std
xchg
out
inc
(bad)
adc
mov
icebp
xchg
jns
cld
dec
dec
in
fisub
lods
mov
xchg
adc
(bad)
aas
in
cwde
outs
inc
scas
jno
daa
out
mov
xchg
xchg
and
add
std
add
in
fwait
mov
movs
out
daa
cmp
mov
jo
jno
pop
adc
inc
daa
bound
pop
sbb
in
cmp
adc
test
cwde
movs
mov
jmp
mov
add
pop
pusha
std
in
ins
ja
lods
mov
inc
and
push
icebp
xchg
(bad)
or
stc
daa
dec
(bad)
cmp
test
jge
daa
mov
mov
jl
sti
jge
ins
cmp
sbb
sub
into
mov
mov
js
addr16
mov
fistp
or
push
jle
dec
xlat
add
scas
xchg
add
cmp
cdq
sub
or
push
jbe
mov
sbb
call
push
lock
inc
(bad)
add
xchg
pop
push
adc
or
es
pusha
cmp
das
mov
fst
aas
call
pop
dec
call
(bad)
jp
mov
int3
push
iret
inc
xor
movs
cdq
jmp
rcr
pop
sub
jle
mov
mul
icebp
ins
leave
in
aas
es
aam
mov
jne
test
sub
scas
jne
jge
ins
jo
loope
cmp
int
push
xchg
sub
add
adc
cmp
icebp
call
mov
lahf
mov
fnstcw
xchg
add
iret
call
mov
push
das
jle
popf
or
stos
push
movs
rcr
fdivr
fwait
and
(bad)
stos
adc
jne
mov
adc
push
xchg
dec
in
jne
xchg
xchg
jp
and
bound
mov
mov
mov
xchg
adc
int3
xchg
mov
push
push
push
xor
push
scas
jle
and
pop
xacquire
xchg
out
jg
ds
or
xchg
push
les
ret
mov
push
and
xchg
lds
shl
adc
icebp
jmp
ficom
sbb
in
cmp
outs
adc
loope
mov
and
sbb
cld
fisubr
push
push
call
sbb
arpl
stc
aas
adc
adc
mov
and
fsubr
mov
mov
out
outs
sub
pop
sbb
repnz
mov
sbb
push
aas
fimul
mov
mov
daa
out
cmp
mov
mov
cmp
idiv
bound
nop
push
shr
nop
inc
call
add
retf
hlt
ds
push
mov
push
or
add
sub
nop
retf
iret
xchg
sbb
shr
repz
popa
jg
cld
adc
mov
mov
stos
(bad)
out
mov
cmp
mov
mov
cmp
lock
inc
or
cmp
add
lds
retf
(bad)
(bad)
push
pusha
cmp
xlat
fld
jp
pop
lahf
mov
mov
inc
js
outs
fdiv
stos
loopne
fxch
mov
(bad)
popf
xor
and
push
inc
mov
inc
test
pushf
das
sub
arpl
mov
add
pop
cmp
and
cmp
retf
jnp
scas
add
adc
outs
jo
gs
mov
sub
fild
outs
aad
cwde
ror
imul
inc
cmp
pop
ss
pushf
dec
(bad)
les
sub
pop
adc
iret
shl
xchg
and
scas
sub
pusha
sbb
nop
push
xchg
mov
mov
dec
int
sar
stos
xchg
adc
xchg
and
lods
lds
mov
fnstsw
xchg
loope
out
jle
push
scas
test
push
or
sti
xchg
(bad)
nop
adc
dec
imul
mov
inc
js
adc
xchg
loop
cmp
daa
call
xchg
pop
pop
adc
or
pop
add
inc
mov
push
shl
leave
fsubr
(bad)
xor
xchg
mov
push
cwde
fsubr
mov
stc
and
adc
jbe
iret
push
mov
and
or
add
loopne
mov
int3
clc
ja
stc
jb
out
sbb
loopne
ds
movaps
aam
loopne
pushf
loopne
mov
sub
call
xlat
ja
lods
hlt
sbb
out
sub
jae
(bad)
ret
das
aad
clc
push
call
imul
mov
fisub
pop
jae
add
dec
repz
xor
scas
adc
shl
sti
dec
hlt
adc
or
ds
leave
das
pop
fcmovne
fs
adc
dec
pop
stos
or
data16
cmc
sbb
pushf
add
test
pushf
call
sub
stos
sub
pop
ficom
movs
sbb
ret
xchg
fistp
in
dec
rol
inc
arpl
jb
(bad)
mov
mov
mov
jns
dec
pop
inc
or
ret
das
sbb
popf
mov
es
push
add
stos
sub
cmps
lahf
or
(bad)
cmp
or
in
mov
mov
pop
dec
mov
loope
aaa
das
cmc
jo
cdq
xor
fstp
cmps
sbb
jmp
mov
jne
pop
cs
outs
je
pop
and
sbb
cmp
aam
mov
dec
pop
sbb
xor
dec
mov
sbb
mov
push
fwait
xor
or
imul
cmc
aaa
es
sub
or
das
mov
xor
ficomp
jmp
and
clc
movs
outs
lods
xchg
push
xor
xchg
test
out
loope
add
or
scas
outs
retf
mov
fistp
in
aaa
lea
dec
lds
adc
and
mov
jmp
pusha
mov
test
mov
and
add
jne
mov
and
adc
call
in
push
add
mov
xor
outs
(bad)
adc
adc
sahf
mov
push
loop
stc
xchg
jecxz
pop
lahf
jecxz
je
sub
xchg
mov
pop
sti
sub
and
test
pop
mov
iret
cmp
jne
lods
and
call
imul
pop
xchg
mov
push
mul
loop
popf
aad
data16
push
imul
sub
es
sbb
enter
mov
(bad)
in
arpl
add
sub
mov
jnp
dec
ins
jmp
jns
inc
pop
cmc
or
aaa
out
push
mov
clc
jno
and
jae
dec
sbb
add
push
push
cdq
mov
stos
sbb
cmovno
add
dec
mov
or
xchg
scas
les
sbb
fwait
dec
jmp
fisub
dec
pop
mov
cmps
loope
cmps
pushf
mov
cmps
xor
mov
cs
inc
movs
(bad)
loopne
sahf
retf
loopne
iret
and
push
sub
xchg
fucom
je
fldcw
mov
cmp
inc
mov
mov
mov
jmp
add
lods
sar
loope
push
ret
inc
or
add
sub
mov
outs
retf
out
scas
jo
stos
mov
and
cmp
cdq
jmp
ins
je
add
stos
jmp
or
loopne
aaa
mov
data16
push
and
retf
sub
mov
jmp
jl
paddq
inc
retf
inc
mov
inc
mov
outs
jg
ins
or
(bad)
mov
mov
icebp
pop
xor
sub
push
popf
je
or
js
and
sbb
fisubr
and
scas
or
test
push
jo
mov
xchg
sub
and
dec
movs
mov
jae
jp
fldcw
ins
retf
mov
stc
daa
xchg
or
sbb
fstp
mov
or
dec
dec
ins
add
push
xor
movs
ja
shl
stc
int3
fmul
pop
or
popa
jmp
leave
xchg
add
daa
scas
rol
dec
in
fwait
out
shr
jp
sbb
rcr
sbb
cmp
add
xchg
jmp
jecxz
or
cmps
icebp
mov
pop
mov
xor
loope
xor
ins
sbb
mov
pop
mov
lods
cmp
(bad)
out
add
icebp
sbb
mov
add
arpl
xchg
jl
test
xor
cs
loop
and
std
test
jbe
test
ja
and
mov
leave
pop
cmp
push
and
or
push
iret
pusha
push
adc
jno
jno
popa
or
mov
xchg
cmp
xor
(bad)
shl
in
popa
(bad)
rcr
push
push
sar
pusha
sub
lea
mov
in
retf
xor
popa
in
push
dec
lds
mov
loopne
mov
cmc
pop
dec
cli
mov
adc
and
cmp
sbb
push
int3
adc
inc
jns
imul
inc
sbb
push
arpl
jecxz
mov
xchg
xor
push
xor
js
jb
adc
imul
or
mov
sbb
and
les
repnz
add
rol
dec
pop
frstor
xor
scas
(bad)
jb
cmp
jl
sbb
aaa
mov
cdq
icebp
ret
stos
mov
jge
(bad)
loope
ret
shl
mov
lods
add
jno
sbb
add
xchg
mov
xlat
mov
imul
sbb
jmp
(bad)
call
outs
int3
js
cmp
imul
call
iret
(bad)
imul
loope
fcomp
xor
xor
das
inc
js
mov
daa
sbb
movs
pop
sti
data16
outs
jmp
sbb
scas
int
mov
clc
sti
pop
into
jp
sub
scas
fstp
mov
ds
es
cli
jns
or
pop
ror
or
xor
mov
cmp
retf
loope
or
stos
outs
int3
icebp
and
fiadd
cli
sub
add
xor
(bad)
fdivr
bswap
icebp
sbb
scas
mov
and
addr16
imul
mov
inc
push
push
je
test
xchg
adc
mov
enter
mov
test
(bad)
stc
or
inc
xlat
ror
xchg
jmp
icebp
push
xor
xor
jecxz
xor
xchg
push
cmp
retf
or
jne
cld
dec
cdq
dec
aad
mov
push
je
xchg
shr
pushf
add
bound
pop
jae
jmp
daa
out
or
rol
stos
js
add
or
xchg
mov
push
shl
pop
aas
dec
hlt
jnp
adc
sbb
call
sahf
in
mov
lods
loop
inc
(bad)
in
xchg
in
xlat
ins
lahf
or
fdivp
push
or
mov
pop
pop
push
xor
jnp
dec
cmp
cli
sub
jbe
aas
jbe
xor
ja
xchg
ret
pop
xchg
mov
push
xchg
fild
rcl
push
jno
test
dec
jnp
test
jbe
xchg
popa
pop
sub
in
ins
sub
jge
pop
rol
cs
mov
rcl
inc
ss
push
ss
or
mov
fcom
mov
mov
or
mov
mov
mov
bound
pop
xor
jns
pushf
pop
gs
xchg
or
or
or
test
inc
mov
cmp
lock
mov
test
sbb
dec
jb
sub
push
jbe
sub
cmc
cmp
shr
sbb
pop
mov
mov
jg
bound
sub
(bad)
fisubr
loopne
sbb
mov
rol
enter
lods
pop
push
push
sub
sbb
push
cmc
and
dec
adc
and
mov
add
xlat
not
push
test
cmp
leave
ins
xor
jnp
stos
scas
or
cmp
add
mov
mov
aam
and
sbb
sub
scas
mov
jbe
sub
ret
jl
inc
sbb
lods
ret
clc
or
jnp
dec
push
arpl
in
xchg
pop
push
es
sub
lods
(bad)
jns
arpl
add
(bad)
mov
pop
pop
stos
lea
cmp
pop
shr
pcmpgtd
jns
or
mov
add
lods
sbb
retf
mov
push
rol
inc
and
(bad)
stc
mov
sbb
jne
push
xchg
push
sbb
(bad)
adc
ficom
ret
adc
out
ret
xchg
pop
mov
mov
std
int3
cmp
sbb
adc
(bad)
fwait
test
xchg
and
test
xchg
dec
dec
push
je
les
ret
adc
dec
xchg
push
adc
push
dec
mov
mov
out
lods
mov
(bad)
mov
sti
call
cli
ins
je
xor
adc
pop
mov
(bad)
push
push
and
popf
cmp
mov
fs
xor
and
adc
mov
int
adc
outs
ret
lods
mov
lock
xor
jnp
inc
and
cmp
pop
aaa
mov
aas
mov
sysexit
not
mov
fimul
inc
xor
leave
push
(bad)
stos
push
push
xchg
ret
xor
adc
sbb
cwde
push
mov
xor
fcomp
fadd
dec
pushf
mov
sub
cmp
mov
sbb
dec
push
adc
mov
scas
dec
xchg
dec
push
and
aas
jno
in
cdq
push
loop
cmp
or
push
fs
mov
dec
gs
push
shl
push
js
dec
sub
mov
into
cmp
xlat
inc
cmp
sbb
es
inc
ds
outs
jne
(bad)
xor
pop
ds
xchg
scas
(bad)
cmp
stos
xchg
mov
push
xchg
inc
jp
retf
jmp
(bad)
nop
cmp
lea
jno
sbb
lahf
xor
fadd
icebp
cmp
sbb
jmp
test
cmp
bound
stos
test
cmp
xchg
ins
xchg
nop
xor
and
nop
ja
(bad)
mov
not
mov
mov
ret
lea
and
ss
out
out
not
inc
add
add
jmp
adc
inc
mov
ret
leave
outs
add
inc
lods
lods
or
iret
jge
aam
mov
pop
pusha
lds
daa
cdq
mov
jmp
aas
jo
push
push
(bad)
cmp
call
push
nop
cmps
movs
adc
dec
cwde
inc
and
imul
jae
mov
pushf
add
xlat
rol
test
add
fild
push
sbb
out
cwde
inc
loop
cmp
mov
mov
nop
and
out
shl
pop
cli
dec
inc
xlat
std
cmp
xchg
sbb
add
int
in
(bad)
jge
adc
sbb
dec
jge
xor
rol
cmp
dec
out
out
cmp
pop
cmp
out
pusha
cld
std
stos
mov
cmps
dec
rcl
div
imul
sub
pop
mov
sti
in
mov
fidiv
int
add
loope
jp
add
dec
cmp
and
ins
rcl
sbb
mov
mov
in
(bad)
(bad)
fmul
jecxz
sbb
pop
mov
xlat
push
lods
pop
sub
ret
dec
mov
movs
fs
neg
mov
div
xor
cli
ja
adc
or
xchg
cmp
pop
jno
data16
xor
jbe
jno
ins
inc
popf
fmul
pop
in
jne
xchg
cli
out
pop
div
aas
ins
enter
jecxz
sbb
retf
aam
and
mov
xchg
sar
xchg
dec
xchg
fs
xchg
cmp
fwait
dec
clc
mov
scas
add
sar
ret
inc
add
aam
fisttp
cmp
retf
push
call
sar
clc
or
fs
jbe
(bad)
mov
fdiv
imul
shl
dec
repnz
xchg
fcom
mov
push
loope
jbe
xor
call
mov
test
sbb
inc
cmp
icebp
lods
xlat
fbld
or
pop
jg
rol
pop
ins
repnz
sar
mov
mov
cld
xchg
add
jno
inc
pop
popf
xor
or
mov
retf
mov
dec
push
pop
add
push
jmp
sub
retf
aad
jl
push
mov
push
call
inc
mov
addr16
mov
adc
sub
mul
mov
xchg
(bad)
mov
mov
fcmovne
shl
pop
ja
in
imul
mov
pop
clc
and
xor
and
fidiv
nop
sub
inc
inc
out
int
sti
ror
and
xor
and
xchg
dec
dec
shl
call
mov
cmp
or
mov
or
push
(bad)
div
sub
ror
imul
jg
push
jg
stc
sar
mov
rcr
clc
fwait
sub
ss
ret
out
jg
sub
pop
cwde
out
idiv
sub
xlat
add
sbb
or
loopne
pop
in
pusha
and
pop
mov
(bad)
fcom
arpl
rdtsc
rcl
xchg
aam
mov
lea
mov
jae
mov
addr16
(bad)
rol
push
mov
(bad)
sub
pop
add
(bad)
(bad)
clc
mov
or
sbb
sub
xchg
and
mov
xor
cmp
fcmovnbe
scas
mov
out
jnp
and
test
jne
cwde
sub
aam
jecxz
cmp
movq
call
sub
lea
push
push
leave
adc
sti
pop
mov
iret
mov
sbb
test
test
bound
push
scas
out
or
xchg
cmp
and
jns
push
repz
stos
enter
cmps
jno
mov
adc
push
push
pop
and
xor
xchg
cmp
xchg
out
jns
mov
xor
int3
inc
call
(bad)
mov
xor
push
dec
test
cli
les
jo
inc
lock
lds
(bad)
jmp
cmp
mov
xchg
in
xor
test
loopne
jno
jp
pop
mov
sub
mov
into
cli
mov
pop
sub
icebp
push
cmp
jecxz
jns
movs
and
jb
iret
out
in
loope
cmp
pushf
fcom
push
cld
jecxz
gs
daa
icebp
fmul
call
clc
int3
ja
pusha
addr16
fdiv
stos
scas
mov
data16
sub
(bad)
xchg
cmp
push
jg
xchg
mov
lods
mov
out
adc
ins
in
xor
ja
retf
dec
mov
fcom
js
test
(bad)
xchg
push
add
xor
(bad)
call
das
jmp
xlat
sbb
add
ja
xchg
mov
call
repnz
xchg
into
cmp
icebp
adc
push
in
inc
loopne
(bad)
push
call
outs
mov
adc
pop
pop
je
stos
sbb
int3
lahf
mov
mov
sub
nop
retf
jnp
cmp
jbe
mov
xchg
push
adc
push
sbb
ret
xlat
xchg
mov
cmp
and
je
mov
and
dec
sub
aam
pop
scas
push
test
adc
jmp
(bad)
(bad)
cld
jmp
pop
pop
scas
mov
aaa
sub
jo
dec
mov
add
sub
(bad)
jge
call
mov
xchg
and
push
sbb
mov
mov
fsubr
scas
or
mov
out
pusha
lods
xchg
add
xchg
shl
adc
sbb
fsubp
push
xlat
int3
into
ret
out
cmp
shl
push
cdq
push
dec
jmp
out
pop
in
rcr
lahf
(bad)
dec
mov
pop
adc
loope
push
(bad)
sub
lahf
dec
aaa
(bad)
inc
bound
enter
jecxz
ret
pusha
out
cmp
cmp
ins
mov
sbb
cmp
(bad)
mov
xchg
mov
test
fwait
rol
inc
xchg
xor
xor
nop
aas
sbb
dec
xchg
jg
and
je
fnclex
cmps
mov
fwait
aad
mov
call
nop
in
das
fild
enter
sub
out
cmps
pop
leave
pop
je
outs
push
popf
xchg
dec
pop
call
test
lock
mov
dec
call
jnp
pop
loope
push
mov
fimul
jge
(bad)
push
push
scas
js
push
mov
adc
mov
mov
xchg
loopne
(bad)
sti
arpl
add
add
jno
lods
gs
outs
ss
aaa
push
push
call
test
pusha
xor
cld
sub
push
test
popa
mov
push
cmp
inc
pop
aam
mov
(bad)
out
hlt
xchg
ds
enter
xchg
jne
adc
or
es
lods
lds
and
iret
adc
retf
das
(bad)
in
jae
loopne
popa
cld
hlt
xor
inc
sbb
mov
test
inc
outs
pop
jl
cmp
in
shl
xchg
mov
cs
push
mov
test
fdivr
jecxz
pop
jo
inc
pop
inc
enter
mov
jle
cmp
push
sar
and
ret
inc
loope
sti
mov
icebp
sbb
jne
into
jmp
and
loopne
lods
fldenv
mov
sub
mov
pxor
enter
in
sbb
mov
adc
mov
mov
pop
pop
es
or
push
(bad)
mov
mov
iret
xchg
cwde
rcr
fldenv
jne
call
fs
stos
clc
arpl
pop
stos
mov
xor
mov
mov
stc
xchg
jg
jmp
dec
sbb
sub
cmp
ins
sub
arpl
push
aaa
pop
add
loopne
lea
ins
ficomp
inc
nop
pop
shr
inc
adc
inc
and
enter
repnz
lock
sub
push
push
pop
and
pusha
fld
(bad)
je
inc
pop
hlt
retf
xchg
idiv
fstp
xchg
ret
in
iret
std
ror
pusha
std
xchg
gs
adc
daa
in
movs
push
(bad)
xchg
jle
push
imul
shr
pop
sub
jbe
int
pop
scas
in
btc
mov
mov
test
push
pop
mov
rcl
xchg
adc
xor
sbb
dec
mov
inc
pop
mov
sar
pop
int3
popf
vpunpcklbw
adc
dec
data16
push
out
fwait
dec
sbb
or
inc
sub
ss
mov
rcl
or
push
movs
cmp
cmp
add
nop
sub
mov
lahf
mov
jbe
inc
push
loope
fwait
mov
jp
push
es
sahf
jnp
sbb
sub
jns
pop
in
inc
(bad)
push
mov
cvttps2pi
addr16
sbb
(bad)
(bad)
mov
inc
test
xchg
mov
sbb
mov
ss
fmulp
popf
int3
mov
pop
inc
jnp
cmps
xor
or
sub
add
adc
fnstsw
in
pop
jge
cmp
jp
push
dec
lahf
sub
cmp
jns
test
rol
retf
(bad)
jp
ror
(bad)
add
out
push
mov
stc
sbb
jecxz
fnsave
or
(bad)
test
push
or
stos
jne
mov
js
enter
pop
pushf
shl
dec
stos
dec
adc
cdq
test
dec
(bad)
cmp
ins
and
or
es
nop
dec
and
cmp
in
not
call
cmp
mov
push
sub
adc
out
inc
cmp
aam
ss
shl
je
xchg
or
test
rol
(bad)
mov
nop
in
ja
push
mov
shr
leave
rol
dec
xchg
out
mov
(bad)
fild
pop
arpl
les
push
sub
ins
sub
js
mov
add
mov
retf
pop
xlat
push
xchg
sar
push
inc
and
mov
mov
xor
fs
jg
mov
and
dec
arpl
ret
inc
cdq
hlt
add
dec
test
push
ds
add
stos
ds
movs
push
add
jmp
int
and
and
mul
xor
fxch
sbb
push
mov
jno
and
ret
shr
or
clc
jae
in
inc
xchg
cmp
repnz
jbe
hlt
push
jg
push
and
loopne
pop
mov
xlat
pop
xor
push
push
pop
xor
cli
sbb
xchg
outs
add
pop
mov
scas
sahf
and
ror
popa
mov
imul
push
fmul
neg
cdq
mov
adc
scas
scas
add
pushf
xor
ins
xchg
xor
test
xchg
loop
mov
inc
arpl
add
retf
or
inc
xor
inc
jno
fistp
sub
icebp
shl
jecxz
bound
aaa
mov
repz
into
ins
jl
mov
mov
xchg
movs
mov
cwde
outs
fnstsw
test
pop
and
stos
aad
pusha
jge
xor
call
out
nop
and
push
or
xchg
scas
pusha
hlt
fs
jge
or
pop
retf
cmp
lods
mov
sbb
cmc
or
add
and
repz
xchg
(bad)
lods
add
je
xchg
push
xchg
fs
repz
sub
dec
sub
jne
sub
pop
and
add
pop
jo
das
sub
call
jecxz
or
fadd
sub
or
fld
lock
sar
mov
adc
fimul
adc
mov
sub
sub
movq
scas
mov
xchg
mov
fidiv
movs
shl
adc
jl
les
shr
iret
or
pusha
or
aam
xchg
aas
int3
popa
pusha
jmp
loop
outs
fs
cs
push
ret
xor
push
imul
aaa
pop
pop
outs
xchg
gs
lock
cmp
lods
cld
add
fist
mov
das
aaa
hlt
dec
and
jae
fisubr
xlat
cmp
in
js
and
shl
fsub
mov
xchg
nop
jge
dec
inc
mov
pop
pop
ror
push
pop
shl
popf
xchg
sbb
or
cmp
mov
out
sbb
ror
mov
sub
cmp
aas
ret
mov
add
out
xchg
pop
gs
or
push
mov
mov
dec
mov
lods
mov
fwait
mov
aaa
loopne
scas
test
inc
xor
cld
push
popa
cwde
dec
cmp
sbb
imul
fdiv
mov
out
fild
mov
jmp
add
or
adc
dec
ret
int
dec
test
and
sbb
aas
movs
ret
je
pushf
jg
mov
and
xchg
les
loope
add
dec
test
push
into
cwde
push
sar
jp
imul
xchg
lods
retf
xor
pop
fiadd
mov
xor
ds
fnstcw
shl
xchg
cmp
pushf
aad
jp
sbb
into
mov
xchg
leave
jnp
pushf
int3
std
xchg
aam
out
add
jg
sbb
mov
out
out
sti
mov
add
dec
sbb
call
call
mov
stos
jae
(bad)
js
popa
in
pop
xor
mov
pop
stos
fisub
mov
cwde
aam
call
jbe
cli
jnp
push
hlt
sbb
push
data16
arpl
or
pop
cdq
cmp
rcl
clc
std
push
ds
mov
and
inc
adc
and
iret
add
inc
push
xchg
hlt
pushf
mov
imul
fadd
popa
mov
push
sbb
push
add
out
mov
push
mov
and
inc
jo
sub
xlat
add
push
inc
cmc
xchg
fidivr
push
in
idiv
inc
mov
nop
rcr
lods
add
jge
(bad)
ins
xor
mov
pop
dec
pop
add
jbe
into
ss
add
xchg
test
mov
iret
pop
fcmovnb
push
and
pop
mov
mov
xchg
push
inc
std
jle
dec
imul
add
mov
loop
jge
les
mov
xor
out
cmp
cs
push
loop
popf
mov
pop
sub
outs
pop
mov
loop
das
sub
data16
int
loopne
or
pusha
pop
addr16
fistp
arpl
sub
and
(bad)
mov
dec
pop
leave
addr16
push
and
cld
mov
mul
(bad)
stc
mov
cs
pop
add
jnp
jnp
sub
push
or
data16
pop
cmp
addr16
pop
nop
enter
dec
push
adc
mov
jbe
ins
cmp
test
sub
inc
loop
stos
(bad)
jle
mov
ret
in
push
pop
or
dec
lods
sbb
loop
cmp
lahf
jbe
cmps
xchg
xchg
dec
jmp
cmp
pop
enter
jno
jp
add
push
or
sbb
scas
push
xchg
loop
cmc
outs
lock
test
fdivr
lahf
pop
mov
sub
ins
adc
push
test
mov
mov
stos
cmps
and
jo
cmp
and
and
jl
cmc
sub
xlat
xlat
retf
scas
jb
push
gs
(bad)
(bad)
xchg
inc
cmp
adc
div
and
retfw
cdq
rol
loop
mov
adc
xor
sub
jle
adc
das
stc
jmp
mov
(bad)
pop
arpl
jl
jno
sahf
pop
mov
xor
je
and
call
sbb
xchg
loop
jg
lock
xor
mov
cli
dec
pop
adc
test
je
or
pop
push
std
mov
and
repz
std
xor
int3
sbb
cmps
clc
arpl
lahf
inc
pop
popa
iret
jmp
dec
cmp
fcomp
jle
movs
add
loop
adc
popa
and
inc
ret
dec
popa
jns
xchg
daa
arpl
cmps
pop
inc
xor
xor
mov
int3
jbe
add
out
xor
cmp
push
fs
rcl
dec
push
into
not
cli
mov
add
std
ror
xchg
jbe
out
cmp
in
fs
out
xchg
add
push
cwde
cld
and
jmp
sub
lock
push
and
ds
push
add
and
sbb
mov
retf
(bad)
cmc
call
push
call
sar
dec
mov
push
xlat
mov
xlat
xor
loop
push
div
pop
sti
cwde
test
sahf
mov
in
es
bound
loope
nop
jge
mov
in
xchg
jp
int
xor
xor
mov
es
out
scas
mov
lea
sub
or
sub
arpl
fidiv
add
addr16
jecxz
inc
add
in
jp
popf
xor
jle
push
or
repz
call
sbb
ds
test
(bad)
dec
fsub
cmp
in
ror
inc
mul
mov
sar
in
mov
popa
ja
jl
or
lss
add
adc
imul
sbb
mov
lahf
jno
pop
lock
xor
inc
xchg
adc
stc
ins
ret
adc
stos
out
add
call
scas
int
jmp
xor
mov
iret
arpl
lea
sbb
(bad)
adc
cdq
popf
cmp
pop
and
repnz
retf
cmc
adc
call
pop
cs
pop
push
pop
inc
add
lods
bnd
xor
or
test
pop
inc
jge
jg
imul
out
mov
inc
jae
imul
pop
int
sbb
push
repnz
arpl
test
test
lds
sbb
aad
lods
jmp
(bad)
mov
xor
push
imul
in
mov
xchg
(bad)
cmp
adc
cwde
xchg
loopne
lea
mov
loopne
xchg
mov
fstp
lock
push
clc
add
in
mov
pop
out
sbb
mov
test
cmc
test
jg
and
lahf
movs
mov
and
ds
add
cmp
ins
gs
mov
gs
mov
stc
leave
push
mov
cmp
inc
shr
sbb
cmp
mov
in
xor
lods
xor
mov
out
and
es
ja
fiadd
adc
pop
stc
push
test
loop
ins
inc
inc
inc
cmp
push
aam
add
xor
fld
ror
into
inc
jmp
iret
mov
and
adc
fmul
shl
jmp
mov
frstor
in
jecxz
out
add
mov
cmp
jmp
mov
add
data16
pop
aas
cmc
pop
cmp
sub
in
(bad)
pusha
out
loope
jmp
test
mov
imul
outs
xchg
cmps
jmp
lahf
bound
int3
mov
(bad)
dec
jge
inc
test
outs
xchg
clc
std
nop
fcmovnb
cmp
aas
mov
cwde
mov
xor
mov
aad
out
sub
sbb
loopne
not
jb
jbe
sbb
nop
sub
(bad)
call
push
fwait
imul
mov
adc
mov
popa
and
jmp
push
cmp
repnz
(bad)
out
jno
clc
leave
adc
and
push
and
push
int3
inc
mov
fdivr
fiadd
add
test
inc
fdiv
cld
xor
adc
xchg
mov
inc
cli
xchg
cwde
xor
addr16
cdq
jl
cmp
pop
mov
rol
iret
pop
psrad
push
(bad)
jae
add
mov
test
outs
cli
lock
adc
ret
and
inc
retf
or
std
movs
push
or
retf
mov
xor
cmp
sub
arpl
(bad)
int
mov
stos
dec
jmp
lahf
inc
sbb
push
sti
retf
pop
mul
movs
addr16
or
das
pop
shl
jmp
jns
jbe
repnz
imul
sbb
sub
jnp
xor
pop
push
sub
mov
inc
cmc
rcl
pop
loope
adc
inc
(bad)
inc
and
jge
mov
fidivr
scas
(bad)
mov
sbb
add
movs
mov
xor
dec
mov
repnz
mov
test
mov
setl
xchg
int3
movs
rcr
adc
cmp
jle
fiadd
xchg
inc
(bad)
sti
mov
ret
xor
and
add
inc
fstp
xchg
and
(bad)
inc
sar
dec
js
xor
cli
out
dec
rcl
retf
cld
sbb
sub
add
lods
xchg
mov
jmp
mov
mov
xchg
cdq
jp
ins
sub
test
rcl
jns
fs
ins
stos
add
fcomp
dec
movs
fwait
scas
inc
nop
arpl
std
mov
mov
out
out
pop
ss
cmp
jge
mov
mov
and
pop
add
sub
aas
cwde
dec
jo
ins
xor
sahf
bound
inc
jbe
push
inc
clc
retf
and
test
repnz
inc
xchg
aas
frstor
inc
inc
sub
or
jge
or
xor
mov
pop
fstp
loopne
mov
jno
aam
ret
sub
cdq
add
adc
pop
lods
loop
or
repnz
xchg
push
retf
mov
rol
cmp
pushf
pop
cmps
fsub
xor
sbb
mov
dec
std
int
nop
adc
dec
data16
and
or
add
fwait
xchg
cli
test
sbb
dec
loop
pop
aaa
pop
popa
push
scas
xchg
sub
mov
or
(bad)
out
lock
adc
in
in
rcl
lds
dec
je
fwait
or
push
scas
(bad)
bound
sbb
fbstp
add
mov
ss
and
mov
retf
xor
mov
adc
adc
add
icebp
fsubr
pop
cmp
and
dec
sti
data16
add
cdq
iret
int
int
fisttp
cli
and
xor
jmp
fdiv
ins
test
inc
rcl
lahf
(bad)
fidiv
js
jecxz
cwde
jge
(bad)
inc
punpckhwd
jmp
lahf
push
push
inc
and
jl
fstp
loope
in
mov
xchg
sub
retf
push
pop
clc
imul
inc
enter
aad
hlt
movs
dec
cmp
cmps
ss
mov
mov
fs
popa
add
cmp
add
test
(bad)
icebp
mov
sub
cdq
outs
push
cmp
or
sti
fistp
xchg
mov
or
add
push
call
in
repnz
(bad)
stos
mov
mov
adc
or
pop
das
inc
sub
scas
dec
mov
mov
pop
int
jo
pop
lods
dec
mov
jb
mov
sbb
stc
inc
mov
iret
stc
sub
sbb
sub
adc
pop
sbb
and
adc
cwde
mov
rcl
aas
mov
test
pop
test
cmp
mov
mov
dec
test
(bad)
scas
jl
dec
inc
and
loopne
shl
repnz
xor
pop
ja
mul
sub
push
loop
(bad)
jmp
scas
jmp
daa
loop
push
sub
mov
aad
inc
add
icebp
lea
or
inc
lods
cmp
es
jmp
dec
mov
(bad)
into
out
retf
mov
mov
xchg
cmp
cmp
fisttp
pop
aaa
mov
das
cli
ss
gs
and
xchg
pop
cmp
xchg
in
fwait
addr16
mov
jl
add
mov
jg
or
in
inc
lods
or
xor
sub
xor
or
rol
add
mov
pop
sbb
pminsw
aad
je
and
je
add
jge
xchg
aaa
push
jmp
mul
imul
or
lahf
lahf
mov
movs
add
mov
sub
into
jg
inc
scas
loop
push
push
mov
jle
test
push
push
mov
ins
mov
int
xchg
mov
mov
inc
fimul
sub
fsubr
es
or
cs
inc
inc
sub
gs
inc
mov
cld
xor
std
imul
addr16
and
loop
js
mov
shl
arpl
pop
mov
fidiv
dec
mov
and
(bad)
mov
sub
pop
push
adc
fcmovb
push
cmp
mov
mov
pop
mov
je
push
ss
inc
inc
(bad)
pop
in
test
jb
inc
js
(bad)
popf
push
das
inc
mov
sbb
mov
call
jmp
push
mov
mov
(bad)
push
repz
data16
gs
mov
mov
out
stc
icebp
lea
push
aaa
(bad)
(bad)
imul
cmp
inc
cli
fld
arpl
lods
clc
mov
push
jb
pop
out
out
sub
movs
xor
mov
xor
jno
addr16
mov
pop
fstp
jp
mov
call
sbb
pop
xchg
dec
xchg
push
dec
mov
imul
add
sub
adc
mov
(bad)
mov
xchg
pop
push
ret
out
ds
out
jnp
adc
(bad)
popa
adc
xor
add
pop
mov
clc
mov
outs
sbb
mov
cld
inc
mov
xchg
push
pop
xchg
jns
xchg
or
cs
(bad)
leave
stos
fst
dec
inc
cmps
arpl
cmps
test
jg
or
xchg
mov
xor
fisubr
out
sub
push
inc
inc
lock
popa
in
adc
inc
xchg
fwait
jbe
fdivr
loope
cmp
cmp
cmps
icebp
and
aam
cmp
loope
retf
jne
pop
fadd
xchg
inc
shl
jb
in
leave
adc
mov
stc
fsubr
retf
dec
add
xchg
(bad)
popf
rol
dec
punpckhwd
pop
adc
adc
pop
xlat
aaa
mov
mov
imul
lds
or
mov
cmp
push
dec
aad
fwait
and
scas
push
setg
jo
push
loope
stos
mov
fstp
scas
mov
popa
or
push
mov
inc
jecxz
dec
jmp
sub
jmp
jg
and
inc
(bad)
jle
mov
imul
je
push
fsub
and
in
cmps
or
jnp
lds
adc
loopne
add
mov
movs
lds
mov
mov
jmp
sub
shl
xchg
and
enter
sbb
in
dec
xchg
jge
(bad)
in
and
jge
cmp
xor
jecxz
outs
sub
sbb
pop
sub
shl
int
(bad)
and
push
pushf
pop
bound
xchg
fwait
ds
inc
lock
inc
mov
fadd
mov
lahf
mov
enter
mov
cmp
adc
push
lods
mov
mov
iret
or
leave
fsubr
adc
mov
add
inc
aaa
add
test
call
(bad)
and
cwde
test
and
sbb
inc
mov
inc
and
sbb
cmps
out
cld
adc
fst
in
push
aaa
adc
cmp
stos
and
nop
pop
pop
packsswb
rcl
ds
es
sti
cmp
xor
jl
nop
(bad)
fisubr
stc
push
or
into
mov
or
xchg
shr
jae
jb
(bad)
pusha
inc
pushf
sub
loope
dec
bound
rol
sbb
fsubr
adc
dec
sti
mov
sti
mov
inc
(bad)
retf
pop
sahf
loopne
loope
pop
ds
mov
ja
xor
jb
data16
(bad)
and
xchg
nop
add
fdiv
inc
mov
test
pushf
xchg
aam
ins
retf
pusha
nop
mov
mov
popf
(bad)
mov
mov
test
popf
mov
pop
push
gs
das
xor
push
popf
ror
sbb
ins
pop
mov
fistp
fld
add
jmp
(bad)
or
jmp
cmp
lahf
add
pop
inc
daa
neg
jne
call
inc
jnp
into
nop
sub
lss
mov
fsqrt
aam
push
mov
inc
mov
mov
xchg
fadd
xchg
and
jp
and
pop
out
aad
mov
popa
fnsave
lea
js
sbb
fidiv
popf
inc
xchg
jg
sbb
dec
xchg
dec
jnp
ins
cdq
xor
xchg
(bad)
push
adc
xchg
jne
xor
(bad)
repz
jnp
xchg
cmp
or
mov
imul
dec
xor
(bad)
pop
shl
aaa
leave
cmp
mov
jns
mov
jecxz
cmp
fstp
push
cmps
sbb
rcl
js
or
lods
cmp
cli
imul
add
jecxz
stc
mov
ja
xchg
ret
sbb
loope
jb
or
adc
call
jb
stos
imul
pop
adc
mov
rcl
cmp
mov
pusha
xchg
sti
mov
add
mov
test
push
jo
mov
cmp
xchg
ja
jge
fldcw
rol
adc
repnz
dec
cdq
dec
aad
cmp
(bad)
nop
add
cmc
push
adc
inc
sbb
dec
ffreep
syscall
call
out
jo
in
xlat
mov
into
mov
or
mov
fs
mov
sub
gs
das
lods
mov
mov
nop
fimul
cdq
xor
aad
add
adc
adc
dec
fld
mov
loopne
xlat
movs
sbb
inc
inc
jecxz
fistp
inc
out
in
mov
out
and
dec
push
sub
and
popf
pop
adc
pop
gs
cmps
lods
sub
ins
sub
cmps
nop
test
pop
sub
movs
out
mov
dec
imul
or
inc
push
mov
fdiv
lahf
push
add
pop
add
jecxz
push
sbb
dec
cmp
sub
jge
inc
inc
mov
fucomip
inc
mov
fcomi
in
lea
dec
test
add
push
test
aad
or
mov
call
push
mov
mov
ds
mov
xor
(bad)
lods
adc
loop
pop
inc
cli
ja
shl
das
mov
mov
xchg
add
int3
rcr
jl
repz
imul
push
push
fisub
dec
ins
inc
push
cmp
leave
fcomp
cmp
mov
les
mov
mov
or
ins
and
pop
inc
pop
mov
(bad)
ins
inc
pusha
imul
in
sbb
cs
aam
ret
add
pop
ins
aam
dec
push
add
sub
mov
in
sub
mov
inc
sub
test
sub
aad
or
out
cmps
mov
push
les
(bad)
fsub
or
xor
gs
ins
adc
add
mov
xor
lahf
xlat
xchg
sar
mov
fmul
mov
dec
pop
lock
jnp
sti
add
push
movs
cmp
fmul
inc
aam
xchg
jmp
ins
mov
retf
push
mov
or
or
xor
lahf
mov
mov
adc
mov
jnp
sub
or
sbb
aas
repnz
sub
retf
jbe
lock
ins
cmps
mov
(bad)
or
xchg
pop
out
adc
fistp
addr16
pop
inc
add
mov
and
(bad)
gs
cwde
inc
xor
push
xchg
pop
movs
jne
aas
mov
mov
ja
inc
mov
mov
fucomip
test
pop
push
ret
inc
call
adc
dec
outs
mov
ret
push
sbb
into
mov
and
arpl
outs
mov
jmp
inc
out
imul
adc
mov
or
sahf
inc
mov
xor
adc
and
dec
add
repz
in
jne
jle
sbb
(bad)
stos
sub
(bad)
int3
daa
and
ins
jbe
test
loop
mov
jle
daa
xor
or
test
call
fist
jmp
mov
and
imul
lea
hlt
popa
pop
test
add
lea
ins
push
js
mov
jecxz
lods
je
cmp
jo
mov
in
scas
sub
or
mov
cmp
mov
xor
arpl
dec
in
vpcompressb
dec
inc
ret
or
test
adc
imul
dec
add
test
daa
ror
neg
data16
fucomip
test
add
inc
pop
es
call
fcomp
hlt
popa
cmp
mov
inc
cmps
push
out
addr16
into
and
or
sbb
movs
inc
imul
les
jge
dec
inc
repnz
ss
xchg
push
mov
push
out
in
rcl
push
mov
mov
jae
jmp
ins
xchg
dec
movs
in
arpl
mov
ins
or
adc
sbb
xchg
cmp
xor
push
test
daa
shl
shr
int
or
gs
aam
or
clc
pushf
inc
pusha
bound
jle
cmp
dec
jnp
xchg
sub
icebp
add
push
cmps
lods
or
inc
(bad)
inc
js
push
cmp
mov
sub
aaa
xchg
(bad)
rcl
out
push
dec
ja
mov
cmp
fist
mov
mov
dec
cmc
fld
lods
or
mov
jecxz
iret
retf
hlt
and
inc
xchg
sbb
mov
call
les
add
sahf
pop
sahf
mov
data16
inc
jmp
retf
mov
or
dec
popa
mov
stc
into
jle
push
mov
into
imul
fdiv
xor
jnp
add
popf
retf
clc
mov
adc
leave
and
xor
add
mov
dec
sub
shr
ficom
dec
and
ret
dec
push
jl
cmps
aaa
and
jg
mov
pop
add
inc
fcomp
jge
scas
mov
fstp
dec
jmp
dec
inc
out
nop
int
enter
sub
stc
and
test
push
xor
and
xchg
call
xor
shr
inc
dec
cmp
std
cwde
push
sbb
stc
push
mov
pop
rcr
loop
jmp
movlps
stc
adc
popf
fisubr
mov
xchg
into
dec
fwait
jle
add
mov
add
add
mov
fbstp
mov
mov
repz
call
xchg
cwde
repnz
xor
push
mov
cli
lods
imul
mov
inc
jg
aas
push
add
push
pop
bound
mov
dec
ror
rcl
jle
(bad)
repnz
pop
push
xchg
jl
xchg
lods
(bad)
inc
cmp
in
xchg
mov
mov
push
pop
mov
das
sahf
sbb
mov
mov
jnp
(bad)
push
scas
clc
adc
dec
xchg
test
rcl
inc
sbb
test
pop
std
jl
je
cs
adc
dec
push
aad
repnz
mov
add
xor
inc
xchg
cmp
or
sub
and
lods
dec
mov
adc
dec
dec
pop
add
mov
pop
inc
(bad)
dec
cmps
fwait
add
pushf
loop
jl
mov
push
pushf
dec
movs
mov
fld
sbb
sub
xor
inc
or
andps
push
push
sahf
sbb
add
nop
mov
xchg
cs
imul
mov
or
mov
popf
mov
mov
int3
inc
and
les
mov
xlat
(bad)
in
push
jp
pop
inc
jecxz
pop
shr
ins
lea
xchg
js
mov
enter
xchg
scas
dec
daa
push
(bad)
loopne
cld
jne
out
je
rcl
or
xor
loopne
jae
gs
adc
mov
mov
clc
cmp
pop
jo
dec
adc
jb
mov
aad
xor
adc
jns
mov
call
adc
sbb
mov
stos
inc
adc
(bad)
add
jle
dec
fild
push
pop
add
mov
inc
xor
loope
out
mov
sbb
dec
stos
loope
push
jae
imul
xchg
or
test
enter
and
xor
daa
xor
push
push
and
sub
loopne
dec
lds
sbb
jecxz
cmp
dec
mov
retf
test
mov
rol
mov
sub
xchg
mov
xor
test
jecxz
or
ja
lea
mov
je
sbb
out
xchg
imul
dec
dec
add
xchg
or
pmulhuw
jle
mov
mov
adc
mov
aam
mov
mov
push
mov
mov
movs
mov
out
or
mov
or
push
jnp
inc
les
jl
pop
retf
mov
pop
mov
inc
and
leave
xlat
das
aad
sub
push
scas
dec
jmp
mov
push
pop
adc
jne
retf
mov
shl
sahf
out
xchg
inc
or
xor
and
js
pop
mov
inc
sti
fld
das
out
(bad)
inc
mov
in
stos
cmp
or
jnp
mov
cwde
or
out
jle
jp
jge
inc
out
(bad)
in
mov
mov
cld
adc
hlt
test
mov
inc
lods
inc
inc
and
shr
ret
pushf
mov
and
popa
mov
cs
xor
rol
xchg
cli
es
test
popa
in
pop
inc
test
jp
mov
mov
fs
sbb
add
fs
or
aas
shl
lahf
(bad)
adc
xor
sub
movs
loope
dec
call
push
jbe
arpl
mov
push
cmp
daa
pushf
jge
sar
mov
inc
xor
ss
sub
retf
inc
fbld
xor
ins
(bad)
sub
lock
icebp
ins
xchg
popf
mov
jbe
pop
out
push
std
sub
add
dec
add
mov
jne
repnz
and
fcmovnu
mov
in
dec
push
pusha
(bad)
(bad)
gs
sbb
jno
push
add
adc
fisub
or
scas
(bad)
in
(bad)
imul
adc
imul
adc
mov
inc
call
stc
push
ins
pop
fisubr
cmps
inc
sti
in
sub
jns
int3
add
iret
rol
and
cmps
movs
loop
cmp
lods
ja
sbb
addr16
leave
push
jbe
dec
add
fsubr
jmp
jp
pushf
fbld
cli
fbstp
mov
popf
push
xchg
mov
loope
(bad)
(bad)
add
jns
push
mov
in
lods
call
aam
stc
fwait
sar
sahf
xor
or
rol
push
mov
mov
ss
sbb
dec
into
sbb
imul
pop
mov
sbb
xor
inc
cmp
jb
push
jae
call
add
xchg
inc
xor
xchg
in
ss
loopne
cmps
or
add
aad
addr16
outs
fstp
cwde
aas
dec
cmps
push
imul
cmps
xor
test
xor
add
call
jge
je
test
mov
adc
in
xor
sbb
dec
(bad)
frstor
add
jmp
call
inc
mov
jmp
cdq
ss
fistp
mov
jge
(bad)
(bad)
aam
adc
add
push
into
mov
stos
cmp
xor
in
jmp
xchg
cmc
adc
fdivr
(bad)
mov
stos
mov
scas
xor
imul
call
cmc
imul
fisub
(bad)
push
aaa
imul
cmp
and
arpl
mov
dec
daa
push
cmp
jmp
pop
mov
jg
jle
sub
dec
cmc
cmp
inc
lock
ret
call
pop
add
ss
push
dec
aas
jl
stos
sub
push
mov
sub
scas
sbb
call
cmp
lods
lock
cs
aad
fwait
ss
(bad)
in
cmp
lds
cmps
(bad)
fiadd
xchg
xor
mov
iret
mov
sbb
push
pop
add
sbb
frstor
sbb
int
lods
rcl
call
sbb
mov
lock
sub
push
std
mov
jle
and
push
xchg
push
mov
and
popf
imul
mov
ins
pop
xor
inc
loope
xchg
(bad)
fcom
jb
imul
xor
xchg
jge
dec
imul
xchg
ret
dec
fist
arpl
jecxz
inc
xchg
sbb
pushf
sbb
pop
xor
fsubr
sbb
sbb
push
dec
out
xchg
pusha
ja
les
ret
xor
cmp
pop
mov
stc
xchg
cmp
push
xchg
dec
cmp
push
out
push
mov
data16
es
jno
or
out
add
jmp
add
inc
lea
xor
stos
mov
xchg
pop
loop
inc
xor
sub
mov
fnstenv
(bad)
cmp
aaa
cmp
or
daa
jnp
aam
test
add
mov
inc
inc
outs
sub
jge
mov
dec
sbb
outs
test
iret
cmp
push
and
in
test
sbb
rcl
inc
fwait
push
xchg
retf
mov
and
(bad)
mov
pop
jnp
pop
xchg
mov
clc
adc
mov
sahf
jb
rol
sbb
call
xchg
movs
ins
xchg
jmp
xlat
arpl
mov
data16
pop
movs
pop
jno
jmp
icebp
mov
jmp
cwde
dec
mov
add
cmp
mov
pop
(bad)
aad
leave
popa
sbb
adc
and
out
sbb
sbb
mov
dec
xchg
mov
cmp
lods
pop
mov
scas
es
mov
pop
nop
mov
jnp
daa
push
jns
lods
pop
xchg
mov
les
out
mov
rol
aad
pop
sub
mov
dec
ds
adc
je
mov
fs
in
cmp
push
retf
test
pop
sub
gs
in
mov
cs
aaa
les
pop
sbb
mov
or
mov
sub
push
xor
jle
repz
mov
sbb
pop
ret
xlat
push
add
jns
es
xor
jg
int
or
jmp
popa
adc
add
jae
(bad)
(bad)
mov
adc
mov
and
iret
repnz
xor
ja
mov
or
ins
int
mov
mov
dec
adc
or
test
mov
test
gs
mov
daa
add
lods
aaa
xchg
add
xlat
mov
das
lea
jmp
or
adc
jle
mov
dec
mov
xor
movs
sti
out
xor
mov
adc
adc
sub
clc
loopne
sbb
push
(bad)
rol
xchg
popa
pop
std
mov
ret
mov
lods
sbb
jo
sbb
mov
retf
push
std
adc
arpl
xchg
pop
test
push
imul
ss
and
iret
rcr
outs
(bad)
and
in
call
jmp
pop
stos
sbb
jb
stc
das
adc
sub
mov
fst
xchg
sub
jnp
popf
cli
dec
add
ja
push
cs
push
inc
lds
push
adc
nop
fwait
lds
xchg
sbb
pop
pop
repnz
push
arpl
fldcw
out
push
inc
jmp
sbb
push
sub
pusha
jg
addr16
(bad)
or
popf
xor
mov
sahf
(bad)
pop
sbb
mov
out
lods
icebp
into
pop
aam
jbe
fimul
adc
pop
fisttp
cmp
call
and
xchg
cs
call
inc
ins
xor
inc
movs
jne
aad
sar
test
add
or
mov
push
adc
xlat
push
jecxz
pop
xchg
shr
add
cmc
mov
cmps
dec
sbb
fld
mov
and
push
xor
mov
jl
stc
cdq
imul
fsubr
jbe
aam
fcom
out
add
ror
adc
fs
add
push
xchg
xlat
daa
or
outs
mov
fwait
lock
or
cmc
push
sbb
mov
in
lahf
sbb
cdq
pop
or
mov
iret
jae
jge
xlat
sub
popa
lods
xchg
jp
or
pop
sar
pop
and
dec
popa
sbb
push
mov
pop
and
rol
xchg
inc
sbb
mov
push
repnz
les
push
loop
xlat
mov
aad
sbb
xor
jbe
sub
add
inc
mov
push
rcl
movs
imul
and
cmps
iret
jo
pop
dec
cli
pusha
mul
inc
mov
in
stc
cdq
jle
sti
xchg
ror
scas
pop
add
loop
mov
js
and
mov
popa
shl
pop
adc
fbld
xchg
in
mov
adc
mov
jbe
ret
sub
out
mov
cs
pop
xlat
jecxz
jp
add
lea
imul
es
test
xor
mov
popf
or
jnp
cmps
inc
daa
mov
sub
fimul
gs
inc
mov
xor
cmp
sar
popf
cmp
jg
mov
cs
jbe
push
ficom
and
int
es
vfmadd231sd
ins
gs
and
jle
push
data16
test
or
fs
cli
inc
push
les
ds
cmp
cmp
(bad)
outs
add
mov
aas
mov
push
mov
jmp
cwde
enter
test
inc
fistp
or
inc
mov
(bad)
pop
add
jns
imul
add
push
jne
push
aaa
push
retf
popa
data16
loope
je
pop
lock
loope
mov
test
sub
stos
xor
sbb
pop
inc
xchg
clc
std
or
movs
mov
jbe
inc
cmp
push
sbb
mov
and
repnz
leave
(bad)
inc
xor
rcr
cmp
ret
mov
popa
shl
or
fisubr
and
adc
add
gs
push
fcomi
arpl
jne
inc
pop
pop
xchg
mov
lods
adc
push
bound
pop
and
pop
je
repz
cmp
nop
retf
jns
pushf
dec
xor
pop
pop
push
shr
stos
xor
fsubr
pop
mul
adc
sub
call
add
inc
push
lock
shr
jmp
lods
mov
(bad)
pop
pop
xor
xchg
(bad)
stc
mov
into
(bad)
jb
mov
ins
lods
arpl
push
push
sub
fwait
stc
and
shl
mov
shr
jmp
adc
adc
hlt
inc
repnz
pop
xor
stos
inc
sti
cmc
sub
data16
ja
dec
dec
adc
jle
mov
sub
neg
rcr
into
cmp
xor
inc
cmp
mov
dec
ficom
pop
adc
imul
jg
push
push
fs
or
in
aad
mov
add
pop
dec
sbb
mov
pop
repz
dec
(bad)
mov
sti
cli
pop
mov
mov
xchg
movs
cmp
sub
int
mov
and
adc
xchg
pop
(bad)
not
int
cmp
sbb
add
fcom
hlt
scas
cmp
shufps
fstp
add
inc
pop
test
mov
data16
mov
jns
mov
cmp
pop
cmc
in
push
mov
fisub
cli
dec
xchg
pop
cdq
push
jb
cmova
push
adc
mov
add
repnz
xor
mov
in
mov
hlt
lods
outs
cmp
(bad)
(bad)
bswap
and
loopne
mov
(bad)
push
enter
(bad)
ins
adc
in
mov
xchg
pusha
pop
test
loopne
cmp
push
pop
and
mov
dec
mov
mov
pop
ficom
mov
pop
jae
js
daa
int
and
mov
mov
cmp
jae
sti
fisttp
retf
mov
in
jge
mov
aam
movs
rcl
mov
cld
(bad)
adc
add
adc
es
adc
mov
and
daa
mov
(bad)
lea
pop
xor
(bad)
clc
sub
pop
fistp
scas
aad
cwde
dec
jl
pop
xchg
mov
sub
(bad)
pushf
adc
pop
int
adc
stos
xor
cdq
dec
imul
(bad)
cmc
les
add
xchg
xchg
mov
pop
rcl
inc
xor
mov
add
(bad)
adc
stc
sub
ja
jl
je
repnz
push
mov
ror
jge
aad
call
into
and
rcl
outs
jbe
cmps
push
jb
jnp
jmp
shr
loopne
sbb
pop
int
and
push
fucomp
dec
add
add
cmp
data16
add
dec
add
add
push
and
xchg
mov
daa
pusha
sbb
(bad)
xor
je
mov
push
or
mov
aad
inc
mov
fnstenv
mov
push
pop
mov
repz
xlat
(bad)
push
iret
test
outs
mov
xchg
test
ret
test
mov
leave
push
and
cmp
imul
mul
rol
push
jp
test
sbb
mov
xor
unpcklps
movs
(bad)
inc
nop
pop
test
call
test
xchg
in
inc
fsubr
mov
dec
add
cmp
cmps
xor
inc
or
push
cmp
push
or
div
push
imul
or
or
in
push
mov
jne
outs
pop
rcr
imul
repz
sbb
leave
movs
xor
(bad)
xchg
sbb
stos
clc
int
fdiv
pop
neg
jecxz
adc
cmpxchg
xchg
cmovne
inc
xor
jnp
gs
add
mov
push
enter
xchg
call
cli
jae
ret
and
cmp
aad
cmp
enter
jle
and
mov
push
dec
lea
mov
je
cmc
test
div
xor
in
pop
jno
mov
fs
mov
xlat
loope
jbe
xchg
push
mov
mov
movs
pop
retf
mov
rcr
pop
push
mov
mov
push
in
call
in
jge
ins
add
in
or
jp
cmp
std
dec
stos
mov
add
xchg
nop
test
aaa
push
mov
mov
test
jbe
aam
push
inc
fdiv
cmp
dec
popa
or
xor
mov
adc
(bad)
or
inc
ret
push
or
xor
in
or
sub
mov
push
add
and
mov
(bad)
jecxz
and
aaa
aam
test
lods
push
ror
xchg
lods
out
dec
xchg
fs
mov
pop
cli
unpckhps
std
cld
mov
dec
stc
nop
xor
or
lea
inc
mov
test
enter
int3
mov
pop
es
jne
sbb
xchg
jle
cwde
sub
jo
cwde
lahf
int3
int
ret
test
sbb
jge
fistp
jle
js
jecxz
mov
loop
cmps
dec
(bad)
dec
mov
(bad)
lahf
push
pop
adc
and
mov
jecxz
sbb
jbe
jno
aaa
cmp
xor
(bad)
adc
popf
imul
mov
aad
and
sbb
xchg
xor
sti
or
cmps
rcl
test
std
xor
or
fdivp
aad
add
or
cmp
imul
cli
xor
jb
(bad)
xchg
dec
test
loopne
(bad)
rcr
call
jae
sbb
cmp
dec
pop
dec
pushf
xor
and
imul
out
lods
scas
ret
mov
mov
sbb
push
cmps
cmp
push
out
and
mov
mov
adc
fs
out
shr
push
xchg
adc
dec
xor
(bad)
cmp
fs
in
cli
fs
outs
imul
xchg
inc
pop
or
test
fld
inc
jp
pop
imul
xlat
hlt
xchg
mov
in
push
sbb
mov
lods
rcl
retf
inc
aad
rcl
movs
dec
mov
cmovge
mov
int
xchg
lods
adc
jmp
inc
mov
add
jl
mov
iret
das
mov
cmps
fnsave
jl
inc
pop
clc
js
or
iret
cmp
mov
cli
dec
cmp
hlt
add
cmp
mov
das
fucomp
addr16
mov
jecxz
repnz
jmp
cli
xor
stos
inc
gs
mov
or
(bad)
adc
mov
stc
inc
sub
xor
shl
scas
xor
jmp
add
ins
leave
icebp
repz
or
jl
(bad)
pop
inc
add
imul
cmps
pop
cdq
inc
add
jae
inc
sbb
aad
cmps
ins
ja
xchg
sbb
outs
xchg
xchg
dec
cld
clc
cmp
xor
xchg
ds
sbb
int3
popw
pop
sub
mov
data16
and
movs
jmp
cmp
mov
push
add
mov
int3
push
xchg
cwde
mov
(bad)
jl
nop
rcr
pop
dec
jae
gs
cli
je
xchg
pop
inc
mov
sbb
stos
pop
outs
sub
xchg
(bad)
dec
jo
out
sub
movs
cmp
add
adc
mov
test
mov
cli
jb
jl
sbb
fnstenv
mov
mov
sahf
and
xchg
pop
add
repz
sub
adc
(bad)
clc
lods
or
inc
nop
fistp
jns
cmp
cmp
xchg
ret
stc
shl
add
push
and
jns
mov
sub
jne
jle
inc
cmc
mov
mov
pop
popa
mov
dec
callw
fld
and
or
pusha
repz
test
gs
push
adc
or
je
jb
add
cmc
dec
jo
add
add
popf
push
pop
lahf
lock
mov
adc
xchg
jecxz
or
pusha
popa
cmps
adc
mov
jge
ret
mov
cwde
(bad)
lds
dec
ins
das
or
fdiv
jne
cmp
mov
lea
inc
add
sbb
inc
dec
jne
scas
mov
adc
int3
lock
jmp
jne
retf
(bad)
adc
mov
outs
cmp
pusha
imul
movs
sub
nop
mov
add
cmps
dec
push
push
into
das
xchg
dec
scas
or
and
pop
mov
les
pop
push
int3
pop
in
jne
jmp
mov
js
dec
xchg
je
push
push
sti
retf
je
or
cs
push
dec
cmps
dec
test
test
pop
mov
bswap
jmp
out
pop
jmp
lahf
inc
push
in
push
mov
adc
xor
imul
and
push
cmps
push
dec
add
jno
push
add
out
adc
or
std
lods
add
call
outs
fs
ret
pop
sbb
je
outs
fs
mov
cmc
(bad)
jns
cmp
mov
test
call
dec
pop
jne
in
std
in
adc
cli
sbb
fistp
sub
adc
mov
les
int3
xchg
pop
ds
jp
lock
clc
fcomp
xchg
pusha
retf
jo
sub
pop
jns
push
cdq
daa
inc
mov
pushf
ins
push
outs
(bad)
int
scas
gs
xchg
dec
clc
loop
stos
cld
mov
es
sbb
test
in
xchg
dec
aad
jno
sahf
xor
xchg
cmps
int
dec
sahf
fs
dec
dec
sub
sar
cmp
cli
mov
dec
retf
ins
pusha
test
mov
mov
je
stc
dec
(bad)
jmp
cmp
fiadd
imul
xor
rcr
pop
sbb
xchg
jg
inc
loop
dec
daa
cmp
lahf
mov
cmc
test
add
jecxz
adc
push
lock
or
xchg
in
dec
pop
sub
and
loop
pop
sti
xchg
aas
pop
mov
enter
mov
xor
mov
sti
mov
mov
fimul
mov
das
adc
xor
or
retf
xchg
outs
icebp
cmp
movs
or
stos
retf
hlt
pop
mov
or
mov
dec
xor
add
xchg
mov
dec
adc
or
inc
push
sub
cmp
sti
aas
or
ins
mov
pop
jmp
(bad)
mov
add
xchg
inc
js
mov
retf
xchg
in
push
mov
popf
or
lahf
jp
icebp
shr
or
jb
jnp
cmp
and
in
mov
inc
push
jbe
fidivr
mov
xchg
push
fwait
enter
test
outs
test
pop
pop
lods
pushf
dec
push
popa
cs
stos
sub
repnz
shl
cmp
loope
rcl
leave
inc
inc
int3
loopne
(bad)
add
sbb
std
test
bound
bound
sub
cmps
sbb
pop
sbb
outs
ins
aam
cmc
mov
cmp
ins
jae
ffreep
jbe
fstp
xlat
dec
xor
xchg
je
jmp
ret
imul
call
or
in
mov
int3
sbb
clc
jp
push
test
retf
nop
push
jg
mov
jp
(bad)
(bad)
outs
jle
ds
(bad)
sbb
out
inc
loope
fisttp
and
in
lds
gs
test
or
call
(bad)
mov
pop
shr
rcl
pop
aaa
jl
test
add
mov
aad
mov
push
mov
or
or
cli
or
pop
xchg
ss
lahf
into
in
adc
dec
xor
sti
stos
jge
jns
sub
jne
shr
clc
ja
jmp
sub
fsub
in
ja
sub
and
jno
pop
test
gs
repnz
fwait
inc
and
fbstp
ror
sbb
mov
in
fsubr
and
inc
stos
jae
mov
xor
sub
out
push
mov
mov
in
dec
add
ja
test
dec
out
cld
(bad)
(bad)
leave
sbb
adc
loope
or
retf
ss
xchg
mov
xor
push
mov
mov
push
jo
and
dec
dec
xlat
test
push
ficom
test
sahf
stos
daa
mov
inc
test
mov
or
and
(bad)
test
out
gs
ins
cmp
mov
push
push
sti
scas
sub
pop
fwait
sahf
add
pop
or
ja
cmp
dec
push
and
or
les
inc
xchg
sub
enter
pop
xchg
call
dec
cdq
mov
jmp
int
in
mov
xlat
jmp
jle
pop
fistp
add
nop
fmul
add
call
mov
in
pop
iret
mul
jo
mov
outs
js
das
add
in
cli
(bad)
cmc
scas
outs
or
stos
repz
lds
mov
movs
cmp
daa
push
mov
mov
mov
retf
sbb
or
fnsave
jge
lahf
stos
adc
push
mov
imul
lea
int
popf
xor
in
mov
cmp
(bad)
imul
imul
jmp
xor
jecxz
retf
ins
and
and
(bad)
shl
cmp
mov
scas
aad
cs
add
cmps
adc
push
sbb
mov
mov
lock
sbb
jmp
and
hlt
fidiv
std
add
and
mov
adc
xor
lods
add
dec
dec
shl
int3
dec
adc
sub
xor
(bad)
xor
popa
sbb
mov
mov
ins
call
xchg
test
shl
push
push
aam
adc
aad
cmp
inc
xchg
loop
xchg
jmp
push
xchg
nop
in
es
call
aad
jmp
push
pop
push
jmp
push
mov
je
les
lahf
adc
pop
ret
sbb
and
dec
mov
lods
push
out
add
mov
loope
sbb
lods
jo
in
ins
dec
rol
inc
and
(bad)
cs
mov
mov
in
stos
sbb
xor
sbb
jge
scas
mov
in
hlt
sar
mov
std
pop
mov
inc
sub
loope
sbb
test
hlt
adc
mov
pop
in
mov
stos
leave
add
dec
inc
mov
mov
pop
lods
bound
push
and
lahf
adc
dec
lahf
lods
xchg
mov
ret
inc
addr16
(bad)
cmps
rcl
inc
into
addr16
jmp
jg
ins
mov
cld
mov
ss
cmps
jg
aam
inc
dec
ja
pushf
xchg
aad
cmp
stos
push
clc
mov
and
repnz
dec
cs
pop
int
mov
xchg
adc
in
sub
jnp
push
pop
retf
call
jne
into
in
mov
mov
sub
dec
addr16
sub
xchg
ins
pop
cmps
xchg
iret
add
xchg
adc
xchg
icebp
mov
sbb
ja
movs
test
and
and
call
jnp
fdiv
ss
into
or
jmp
aam
and
mov
push
in
bound
pop
fcomp
xchg
sbb
sti
das
xor
lds
outs
jne
pop
js
(bad)
nop
pop
mov
mov
xor
cmps
sbb
(bad)
adc
jns
xchg
jmp
js
mov
pusha
mov
add
js
add
add
and
push
pop
mov
fild
and
cld
inc
aaa
es
shl
xlat
or
fnstcw
add
or
mov
(bad)
enter
je
arpl
push
into
stc
mov
cmps
aaa
inc
hlt
out
movs
sar
lods
call
inc
shr
add
inc
ds
mov
mov
cmp
test
xchg
out
dec
jbe
movs
pop
or
(bad)
(bad)
leave
cmp
or
pop
jo
pop
sbb
dec
and
pop
mov
not
enter
ret
loope
add
(bad)
out
and
mov
and
push
pop
push
adc
cmp
inc
and
dec
sub
cmp
(bad)
inc
movs
xchg
jmp
out
dec
aam
jb
jo
hlt
mov
xor
cmp
pusha
rol
(bad)
imul
or
and
xor
rcl
dec
pop
mov
push
sub
out
test
pop
aad
xchg
jo
lock
popf
test
fidiv
or
cwde
mov
pop
dec
inc
adc
pop
cmp
adc
jmp
ror
icebp
outs
lea
cmp
fwait
and
cli
pushw
inc
pusha
fmul
lds
push
jbe
pop
inc
xor
xchg
cmp
scas
sub
popf
xor
inc
out
enter
cmps
cwde
daa
in
and
and
adc
sbb
xchg
cmp
mov
call
mov
mov
imul
or
es
pushf
xchg
jo
rol
push
xor
in
push
sbb
cmp
push
push
std
ins
gs
sub
es
daa
inc
lea
adc
(bad)
popa
add
(bad)
mov
cmp
pop
mov
into
add
call
sar
or
shl
out
pop
int3
(bad)
jge
push
pop
fcomp
jmp
adc
jge
int
loop
push
stc
sub
sub
loope
scas
out
mov
lods
(bad)
daa
clc
icebp
lods
(bad)
adc
(bad)
daa
jb
or
xor
fwait
mov
data16
add
or
sub
dec
aam
mov
add
adc
pusha
mov
cmovnp
and
xchg
push
pushfw
sar
cmp
cmp
mov
(bad)
xchg
sub
fsub
push
pop
cwde
pushf
sbb
addr16
mov
int
and
or
jl
bound
add
jno
mov
out
or
out
xchg
aaa
ret
adc
pop
pop
out
retf
xchg
jg
sbb
mov
mov
pop
ss
add
sub
iret
fisub
push
mov
cdq
outs
cmp
popf
(bad)
sbb
stos
pcmpgtb
cld
jo
rol
cmp
ret
xchg
and
push
pop
retf
shl
daa
sti
cmps
cmps
push
fcomp
sbb
mov
js
inc
push
xchg
pop
(bad)
dec
inc
test
push
sbb
dec
fisubr
push
(bad)
loopne
call
xor
cmp
jns
pusha
push
lds
in
out
push
cdq
mov
sub
sub
lods
jecxz
fstp
xor
lahf
jo
or
cmp
call
call
inc
test
jmp
sbb
and
fcom
pop
fst
inc
test
fucom
jne
sar
or
inc
adc
inc
and
sub
or
pusha
outs
icebp
iret
sbb
and
adc
fadd
pop
jmp
ftst
pop
and
rol
leave
ss
loop
pop
adc
stos
repz
jecxz
sub
adc
xchg
jl
cmp
push
dec
mov
nop
arpl
fiadd
add
repz
rcl
nop
add
ins
das
inc
mov
dec
in
iret
add
or
imul
xchg
test
mov
call
dec
pusha
add
xor
data16
sub
mov
repnz
fistp
mov
std
adc
fild
pop
pop
xlat
(bad)
loopne
lahf
test
loop
sub
push
mov
jmp
jnp
xor
mov
in
sahf
fwait
mov
push
xchg
mov
outs
sbb
(bad)
jmp
test
sub
xchg
aaa
test
bound
sub
xlat
push
jbe
xchg
test
pop
(bad)
fs
sub
add
xor
out
popf
aaa
xchg
jb
inc
shl
test
sbb
mov
cmps
jnp
xor
int3
ret
sub
mov
xchg
fcmovne
push
cmovle
aaa
jae
popf
lods
mov
stc
jl
push
ret
out
retf
or
or
popa
or
mov
jmp
jge
nop
pop
adc
jbe
xchg
jecxz
cwde
pop
mov
xchg
stos
and
test
push
cmps
enter
sbb
pushf
and
add
mov
(bad)
xor
fcom
sbb
jge
xlat
jns
inc
nop
mov
(bad)
nop
loop
jb
adc
data16
inc
ja
xor
cld
sahf
cdq
test
pushf
(bad)
mov
popa
adc
sti
cmc
or
jns
push
fisub
es
or
mov
aaa
or
jnp
das
jbe
inc
xlat
std
or
and
iret
or
shr
in
xchg
pop
mov
outs
jns
imul
mov
xchg
inc
in
dec
(bad)
cs
jbe
sub
pop
imul
dec
(bad)
mov
repz
shl
lods
nop
cdq
or
push
or
add
mov
ds
or
jg
sub
xor
cmps
xchg
mov
rcr
fucomip
xor
scas
(bad)
dec
(bad)
test
scas
lods
add
inc
rcl
push
inc
ins
xor
sbb
pop
clc
pop
mov
es
and
mov
and
mov
jl
or
mov
ss
out
loopne
scas
int3
outs
icebp
push
inc
out
cmp
pop
ret
pop
dec
sub
cld
xchg
in
lds
mov
xor
neg
xor
cmp
mov
les
and
ret
mul
icebp
push
xchg
inc
push
pop
inc
shr
retf
in
mov
jl
aad
cmc
loope
add
pop
jle
das
xor
ja
or
dec
fistp
sar
mov
jno
push
arpl
fist
adc
pop
xor
add
mov
outs
mov
inc
fild
jg
and
sbb
cli
pop
scas
leave
xchg
pop
outs
sub
adc
not
pushf
xchg
xchg
dec
pushf
mov
push
adc
push
adc
outs
cs
ret
jle
push
mov
pop
sbb
out
retf
and
sbb
pop
dec
mov
mov
loop
pop
xor
pushf
push
pusha
pop
repnz
cdq
dec
loope
out
sub
jno
mov
inc
cwde
mov
call
pushf
call
imul
outs
cmp
in
out
paddd
mov
push
jmp
ja
mov
shl
xchg
mov
push
dec
icebp
push
enter
fbstp
jae
aas
pop
shr
add
dec
jns
shr
and
arpl
sub
xchg
clc
in
dec
les
pop
cli
xchg
clc
jle
mov
aad
xor
call
push
inc
pop
mov
mov
dec
(bad)
es
ror
ds
cmp
pop
pop
mov
mov
std
inc
inc
retf
pop
or
inc
in
inc
pop
rol
push
(bad)
out
dec
push
dec
por
sub
add
push
adc
inc
retf
(bad)
mov
xchg
inc
jbe
hlt
lds
dec
retf
and
inc
mov
mov
push
mov
clc
inc
dec
clc
popw
lock
cmp
daa
or
jns
push
fiadd
pop
jle
fmul
jnp
mov
fcomi
in
mov
push
mov
(bad)
cld
jle
lahf
clc
pop
fsubr
ret
mov
jle
fs
loop
out
mov
clc
push
outs
pop
int3
inc
mov
cs
mov
inc
jno
pop
lock
push
jmp
inc
sti
int3
es
and
jns
mov
mov
arpl
cli
lock
xchg
cmp
mov
out
and
xchg
xor
push
xor
fnstcw
inc
clc
jle
sub
or
outs
les
mov
jg
in
cmp
and
sbb
popa
xor
bts
(bad)
jns
rcl
xchg
movs
dec
push
int3
cs
mov
lock
jno
sbb
mov
push
pop
pop
sbb
lods
mov
sub
cs
mov
aaa
xor
mov
inc
cmp
mov
repz
mov
mov
rcl
hlt
add
test
or
adc
in
mov
dec
fs
adc
aam
mov
push
sbb
or
js
neg
std
inc
mov
push
imul
stos
cmp
loopne
leave
pop
sti
sahf
add
dec
pop
fs
iret
in
sbb
daa
xor
add
add
pop
arpl
rcr
mov
sub
out
imul
fimul
cmp
retf
push
add
sbb
cmc
push
aad
stos
push
ja
cli
mov
xor
mov
outs
std
mov
mov
mov
or
movs
jecxz
(bad)
push
cdq
dec
mov
and
and
inc
(bad)
sub
lock
mov
xor
dec
cdq
es
nop
pop
add
loop
in
push
pop
stos
mov
cmp
mov
pop
movs
add
ficomp
sbb
cli
pop
lods
pop
mov
addr16
xor
call
into
fisubr
mov
inc
mov
es
movs
ins
into
cmps
xchg
adc
sbb
cmp
jmp
adc
mov
and
hlt
jnp
leave
cmp
xor
pop
fstp
add
mov
mov
test
xchg
aas
movs
cs
test
and
mov
scas
mov
mov
ja
inc
pop
pop
call
cmp
in
cmp
jne
pop
dec
add
int3
ret
in
ins
lods
mov
lahf
stos
cmp
in
std
test
inc
js
dec
adc
mov
xchg
pop
loopne
int3
popf
add
fs
jne
ret
jb
rcr
cmc
(bad)
mov
fsubr
or
dec
xchg
pop
jbe
or
jmp
and
(bad)
das
lods
in
cmp
mov
cmp
fwait
(bad)
sub
inc
inc
inc
int3
mov
aam
cli
nop
mov
xchg
mov
mov
ins
int3
or
and
(bad)
gs
scas
retf
add
xchg
jo
jmp
imul
adc
fs
mov
fisub
ss
int3
stos
xchg
mov
dec
mov
add
pop
ins
add
mov
sub
sbb
repnz
xchg
lods
imul
mov
adc
dec
and
pop
add
sub
sub
int
jle
lock
pop
pop
or
mov
aaa
xor
adc
jmp
shr
into
or
add
call
mov
adc
sbb
imul
push
mov
dec
leave
inc
hlt
ds
fld
pushf
test
movs
pop
mov
lock
push
pop
push
ret
sahf
push
shl
dec
xchg
cmps
cmp
xor
or
mov
call
test
dec
cmp
add
inc
push
stc
out
jbe
mov
jmp
in
aas
jg
repz
xchg
add
jne
and
inc
push
movs
xchg
and
mov
push
push
add
jp
(bad)
mov
and
loop
pop
adc
jo
setne
rol
xor
or
xchg
cmp
push
push
pop
xor
cwde
shl
jno
call
loopne
mov
stos
push
cld
adc
pusha
mov
(bad)
jle
push
nop
fs
aad
cmps
rcr
mov
mov
push
xlat
getsec
pushf
fild
sbb
out
sub
xor
cmc
inc
adc
cld
out
fcmovb
ins
or
and
push
add
push
xor
popa
fisub
(bad)
sar
push
mov
inc
ret
call
clc
sbb
adc
mov
clc
push
cs
mov
popf
adc
fcomp
inc
out
data16
push
in
scas
xchg
sahf
adc
xchg
mul
pushf
dec
loope
rcr
aam
cmp
test
in
cmp
scas
out
pop
dec
mov
push
scas
ins
aad
jo
daa
fsubr
movs
lods
movs
or
mov
retf
daa
push
mov
sbb
and
cmp
ins
jp
enter
ja
pmaxub
inc
jo
sti
mov
inc
adc
sbb
inc
clc
mov
lock
cmp
xchg
jbe
fiadd
test
(bad)
jb
int3
sar
cs
pusha
cmps
aam
mov
stos
rcr
jmp
aaa
mov
clc
bound
pop
mov
cdq
mul
hlt
rcr
mov
and
lock
adc
jns
test
inc
daa
data16
in
loope
sbb
inc
int
into
sub
shl
nop
lods
mov
(bad)
mov
jle
pop
mov
sbb
mov
push
push
adc
mov
dec
cmc
fdiv
mov
sti
cmp
cmp
xchg
push
icebp
mov
adc
and
dec
inc
mov
jae
fistp
das
jb
in
pop
sahf
and
or
sub
mov
data16
sub
mov
bswap
aas
ret
jbe
repnz
lock
xor
retf
xor
mov
mov
idiv
ja
pop
bnd
fstp
dec
add
jecxz
data16
mov
test
mov
not
pop
dec
rcr
rep
mov
pop
sar
xor
dec
dec
push
rcl
test
shl
mov
in
loopne
sbb
mov
ret
inc
sbb
test
iret
(bad)
mov
dec
mov
push
xor
jmp
(bad)
popa
jne
cmps
aas
ret
mov
xchg
cmp
lea
das
mov
jne
jb
dec
fild
jbe
test
iret
jo
test
dec
mov
aaa
mov
data16
fwait
stc
cmps
in
or
add
mov
xchg
and
dec
xor
ret
jo
scas
pop
ret
stc
stos
movs
push
cwde
jo
adc
shl
sub
or
inc
mov
out
inc
jbe
(bad)
adc
push
ret
xor
and
clc
dec
push
and
xlat
jns
cmovl
dec
xor
add
movs
pop
iret
ret
or
(bad)
sbb
mov
gs
out
call
into
fld
mov
clc
pop
mov
and
pcmpgtb
add
cmp
jbe
mov
xchg
enter
cmp
popf
dec
dec
add
retf
adc
push
mov
arpl
mov
inc
pop
imul
sbb
dec
adc
xlat
add
jg
iret
mov
or
push
inc
scas
inc
inc
ins
pop
outs
or
and
mov
test
jmp
mov
test
lods
std
pop
movs
push
cwde
and
pop
dec
push
sbb
jne
shr
outs
(bad)
sahf
cmps
jnp
cmp
push
mov
jmp
ficom
bound
or
movs
jle
je
ret
and
cmp
(bad)
cdq
xchg
pop
pop
jns
popa
push
mov
adc
lea
aad
(bad)
jle
sub
inc
and
repz
sub
or
push
popa
push
jns
mov
and
cmp
fcmovne
lahf
scas
jp
movs
bound
pop
arpl
imul
jno
dec
xlat
sbb
(bad)
xor
lods
loope
mov
inc
imul
sbb
(bad)
stc
popf
mov
imul
xor
mov
lods
mov
inc
call
inc
dec
or
sub
aas
ins
xor
push
sbb
jle
xchg
int3
mov
inc
cmps
pop
mov
loop
dec
adc
mov
ss
dec
pop
mov
push
sbb
mov
pop
adc
pusha
ins
xchg
jb
mov
and
xchg
mov
push
sub
or
aam
scas
ret
std
xchg
adc
cmp
jb
mov
call
or
sti
dec
outs
call
mov
fabs
in
or
or
ret
push
xchg
jne
mov
inc
sbb
mov
sbb
inc
ins
jp
mov
(bad)
addr16
xchg
iret
push
(bad)
sub
neg
addr16
rcr
and
es
mov
sbb
mov
add
jne
pop
popf
into
push
call
adc
je
xor
int3
jmp
sub
and
pop
xchg
in
push
dec
push
pop
or
mov
sub
jl
jmp
mov
push
mov
out
aam
mov
mov
je
rcr
out
(bad)
in
sub
outs
stos
or
sub
jno
mov
lea
push
scas
fdiv
and
fsubr
ja
pop
and
jns
push
and
pushf
stos
pop
mov
inc
in
adc
xchg
cmp
and
rcl
xchg
cwde
pop
leave
jae
das
mul
das
push
clc
inc
movs
dec
or
cmps
sbb
jns
test
in
out
leave
into
pushf
inc
paddq
mov
test
pop
dec
add
cmp
dec
scas
jg
je
mov
mov
dec
js
(bad)
ror
addr16
cli
in
mov
jmp
nop
repnz
jmp
or
mov
fwait
outs
mov
popf
mov
hlt
jb
out
inc
push
mov
fist
sub
frstor
jnp
ja
ja
mov
push
inc
dec
adc
xchg
or
test
add
or
int
mov
sbb
jp
dec
cwde
push
sbb
jne
sbb
sbb
sub
lock
mov
in
push
test
add
mov
adc
rcr
mov
js
sbb
mov
shl
loop
ja
pop
pop
sbb
dec
mov
dec
lahf
in
pop
add
dec
stos
inc
mov
or
push
sbb
in
mov
push
mov
pop
xor
cmp
mov
pop
jns
mov
xor
aaa
call
mov
or
inc
pop
mov
dec
dec
sbb
out
xor
xor
lds
aad
and
fild
int
jns
mov
mov
xchg
pusha
addr16
and
fisubr
iret
test
in
push
jle
xor
stos
lods
mov
push
leave
xor
hlt
fs
cmp
aaa
sbb
sar
icebp
sbb
scas
sahf
aam
jg
arpl
mov
inc
jae
test
imul
xor
pop
hlt
das
push
sbb
mov
enter
(bad)
jae
mov
outs
and
in
mov
mov
jl
fistp
pop
aaa
pop
clc
mov
aam
xchg
xchg
test
fs
jo
sub
add
dec
lods
into
out
out
stc
adc
sbb
inc
nop
mul
inc
mov
fucom
into
push
and
and
lock
(bad)
out
sub
inc
jmp
das
div
mov
jmp
movs
pop
xchg
or
and
mov
(bad)
repz
enter
add
xor
and
xor
jne
jle
loopne
or
dec
jmp
inc
test
mov
std
and
and
repnz
cmp
and
and
lahf
jnp
mov
push
mov
mov
enter
jbe
(bad)
std
mov
mov
dec
xchg
pop
stos
and
cmovge
scas
(bad)
in
test
cmp
sub
pushf
gs
jns
call
test
mov
in
test
out
fild
or
or
ret
mov
jg
retf
pop
push
rcl
push
mov
xchg
mov
es
and
or
jne
cmps
sbb
jg
rcr
and
mov
loopne
sbb
jo
mov
cwde
or
and
(bad)
cs
addr16
or
mov
adc
pop
rol
scas
xor
jmp
adc
xchg
xchg
dec
pop
jnp
mov
dec
mov
inc
xor
pop
mov
adc
jae
cmp
ret
pop
dec
cld
xor
outs
es
retf
add
add
inc
push
mov
adc
es
pop
daa
mov
dec
mov
cmps
rcl
mov
in
sahf
xlat
pop
(bad)
scas
movs
add
mov
loop
inc
push
mov
and
ins
scas
bound
sbb
addr16
repnz
addr16
mov
xchg
call
sub
outs
xchg
dec
ins
jge
es
push
and
sbb
mov
add
(bad)
cwde
mov
add
cmp
repnz
rcr
mov
adc
mov
mov
das
jg
in
daa
and
jp
pop
lock
xchg
sahf
int3
inc
ret
xor
push
rcpps
stos
nop
add
lock
mov
mov
shl
xchg
inc
xchg
fistp
lock
mov
movs
cwde
adc
sbb
scas
push
xchg
mov
sub
push
xor
movs
jmp
mov
mov
xchg
adc
out
jmp
(bad)
mov
fisub
push
pcmpeqd
movs
cld
fcom
push
in
(bad)
enter
add
or
dec
cmc
mov
ret
sbb
xchg
cmps
push
sub
jo
movs
xchg
mov
xor
pop
adc
adc
xchg
cmp
pop
mov
je
and
add
dec
adc
gs
jno
inc
pop
inc
mov
out
test
ins
fsub
or
mov
add
hlt
and
mov
fnstenv
shl
pop
test
push
ret
ficomp
dec
inc
movs
add
dec
cwde
ret
jmp
or
fimul
int
xchg
xchg
loope
add
mov
cld
cwde
sub
lahf
outs
cld
push
dec
xlat
jno
ret
pop
addr16
lods
mov
int
add
push
ins
dec
inc
pop
cs
lock
xchg
push
push
scas
mov
arpl
fwait
add
xor
stc
adc
push
jne
jle
ins
sbb
dec
and
push
inc
jne
xchg
push
fwait
repnz
sub
mov
xor
aam
adc
jle
add
movs
mov
cdq
sub
inc
popa
movs
push
dec
stos
dec
retf
int
leave
mov
pusha
pop
(bad)
ds
mov
ficom
xchg
cmp
xlat
xor
sbb
dec
and
test
adc
xor
adc
test
xchg
adc
add
fdiv
ja
int3
mov
sub
mov
xchg
je
jle
scas
aas
(bad)
mov
gs
sub
inc
popf
gs
test
shr
sbb
icebp
xchg
mov
cmps
mov
push
mov
push
and
and
je
xor
sbb
gs
xchg
cmp
loopne
out
and
dec
xchg
add
push
popf
xor
or
push
and
mov
mov
scas
(bad)
jns
gs
dec
iret
jnp
mov
stos
inc
loop
cmp
xor
add
xchg
in
jns
xchg
mov
mov
fiadd
pop
xchg
bound
cmpxchg
std
sbb
cli
ret
mov
mov
addr16
jle
cld
loope
pop
out
sub
push
xor
or
rcr
cmp
sti
xchg
fcmovb
lods
mov
(bad)
and
jge
bound
loop
inc
aad
sbb
scas
sbb
or
gs
dec
jo
lods
rol
addr16
jmp
rol
adc
xchg
loopne
mov
jecxz
mov
inc
jbe
daa
jmp
xchg
adc
dec
rcl
mov
popa
mov
in
int
cwde
cmp
xchg
in
add
sub
pushf
std
xor
aam
mov
jne
mov
jecxz
xchg
es
cmps
imul
sbb
out
cmp
xlat
adc
mov
aas
das
adc
mov
and
ja
jg
mov
pop
jne
stc
pop
mov
adc
(bad)
adc
push
out
mov
lods
cmps
dec
mov
push
push
aas
xchg
jo
add
or
or
and
aam
sub
mov
outs
push
mov
xchg
gs
repz
mov
cmps
xor
xor
and
out
and
fsub
mov
fwait
aad
xchg
div
fistp
mov
xchg
add
pop
out
fist
cmp
cli
fstp
out
dec
and
in
outs
idiv
jge
jbe
int3
add
mov
xlat
push
mov
mov
jmp
fdivr
adc
dec
and
ds
xchg
(bad)
adc
add
fild
jge
rcr
jg
cli
mov
mov
inc
(bad)
ja
ins
and
rcr
xor
add
es
loopne
jle
ficom
mov
sahf
push
mov
fist
adc
scas
ffree
ret
(bad)
icebp
jl
lds
add
loop
mov
pop
push
mov
push
pop
iret
nop
adc
shl
mov
sbb
mov
dec
xor
dec
neg
inc
and
jns
rcl
mov
test
(bad)
hlt
cmp
fdiv
mov
pop
(bad)
call
sar
and
cs
leave
aad
movs
cmp
xchg
sar
pop
push
add
addr16
push
imul
cmp
clc
and
push
jmp
loope
mov
retf
fisub
mov
adc
ins
ja
fnsave
stos
jmp
inc
sbb
js
cmp
cwde
enter
fcomp
pushf
adc
(bad)
call
push
adc
rcr
loopne
(bad)
div
pop
cmovle
loopne
test
push
adc
cld
and
cmps
cmc
jno
loop
scas
adc
(bad)
ficomp
in
(bad)
sub
ror
adc
mov
xor
loope
popf
adc
jmp
inc
cmp
rol
das
xchg
(bad)
bnd
or
mov
mov
imul
push
scas
lods
scas
sbb
cmps
fidivr
mov
mov
push
push
cmp
int3
cmps
mov
arpl
sar
jbe
repnz
pop
stos
aad
lds
loope
fistp
icebp
mov
mov
fiadd
pop
cmp
sub
inc
jns
jp
into
das
sub
js
ror
pop
iret
test
ficom
pop
xor
loope
(bad)
icebp
pop
ror
outs
or
cmp
shr
sub
mov
add
imul
jne
inc
dec
es
cmp
jbe
scas
aaa
inc
xor
sbb
je
adc
movs
loop
mov
jmp
out
or
inc
sub
addr16
ins
fnstenv
aas
jmp
das
ror
push
pop
xor
sub
mov
pop
xchg
mov
clc
addr16
sbb
xor
aam
outs
std
(bad)
cld
sbb
in
shl
jbe
popa
dec
dec
gs
(bad)
aas
in
inc
fs
inc
out
push
sti
adc
push
out
int3
add
mov
mov
sbb
jbe
mov
sbb
xchg
movs
xor
mov
sub
test
addr16
(bad)
inc
adc
adc
into
cmp
push
out
sub
cmp
fld
in
stos
jnp
xchg
adc
call
xchg
cmp
imul
adc
call
mov
movs
mov
call
cwde
outs
cmp
sbb
push
mov
add
ror
sti
dec
pop
sbb
fdiv
stos
xor
mul
sar
cmp
imul
out
cmp
mov
mov
inc
je
ins
mov
or
scas
cld
(bad)
loopne
shl
arpl
mov
outs
sbb
jmp
mov
cmp
das
pop
mov
mov
sub
mov
adc
(bad)
fisubr
ins
mov
out
jb
in
cdq
loop
mov
sbb
loope
or
shufps
add
inc
dec
mov
add
pop
out
into
adc
cli
push
loop
fwait
clc
sbb
loope
mov
pop
fcmovnbe
test
xor
jne
jae
xchg
(bad)
out
ins
cmp
dec
daa
out
push
retf
int
outs
sbb
jge
and
scas
mov
inc
jnp
or
nop
cmps
cli
mov
push
stos
mov
sbb
push
add
mov
xor
inc
in
mov
aam
jge
xlat
fs
sbb
jmp
or
pop
mov
arpl
cmps
movs
into
loope
hlt
pop
nop
cmp
cs
inc
push
and
fs
mov
push
outs
or
js
sbb
mov
(bad)
(bad)
xchg
(bad)
repnz
push
(bad)
pop
imul
xlat
dec
cmp
cmps
(bad)
js
repnz
call
xor
xor
cmp
and
jle
inc
and
xchg
dec
cli
pop
xchg
xchg
int3
sbb
lahf
das
push
iret
ficom
xor
jle
xchg
mov
cdq
jmp
cmp
(bad)
push
sti
mov
dec
adc
jae
es
jo
adc
lahf
ret
(bad)
cwde
bnd
fimul
pop
mov
or
adc
inc
imul
cwde
js
(bad)
sti
dec
and
dec
pop
jae
cld
adc
jmp
mov
shr
sti
jge
ror
sub
push
inc
xor
mov
(bad)
por
mov
pop
jo
loop
clc
jne
int
pop
(bad)
mov
push
out
loope
sub
aas
sub
pop
mov
inc
in
fsubrp
fcomp
xor
retf
xchg
cmps
jge
push
pushf
hlt
sub
rcl
sbb
dec
inc
mov
(bad)
in
icebp
ja
xor
pop
shl
sbb
adc
and
xor
shl
aaa
and
popf
push
nop
ds
push
mov
fcom
inc
lea
call
cmp
and
or
in
pop
aad
mov
lds
(bad)
lods
push
jmp
into
fidivr
lods
xchg
stos
mov
(bad)
dec
and
dec
rol
inc
idiv
movs
add
adc
scas
sub
and
mov
ja
push
sbb
xchg
jae
cmps
sbb
ds
stc
fidiv
jecxz
mov
addr16
or
sar
cmp
mov
ret
xlat
mov
pop
xchg
mov
pop
enterw
vxorps
sbb
sbb
xchg
add
adc
in
sti
jecxz
mov
sbb
outs
cmp
into
data16
fdivp
lods
xor
mov
call
push
mov
xchg
cmp
jg
and
cld
mov
jmp
jle
popf
fs
adc
jnp
mov
pop
pop
imul
shl
(bad)
es
push
stos
outs
aad
xchg
push
test
and
pop
sbb
mov
dec
and
std
adc
int3
je
cmp
xchg
addr16
or
popf
inc
add
dec
add
jg
sub
and
sub
outs
push
adc
test
pop
mov
jecxz
sbb
test
adc
shr
sub
or
jb
fwait
(bad)
shl
sahf
das
mov
out
lds
mov
js
xchg
mov
bswap
pop
mov
lock
push
add
stos
fadd
cmp
mov
loope
mov
inc
mov
into
icebp
push
jg
aaa
push
test
out
test
add
add
(bad)
dec
retf
xor
ja
pushf
sbb
xor
adc
add
mov
(bad)
xor
jmp
scas
xchg
and
sbb
pop
inc
and
xchg
xor
daa
mov
hlt
xchg
cmc
mov
adc
test
or
sbb
sub
fs
dec
ja
sbb
inc
jle
jnp
jae
cmps
in
xchg
int3
lods
cmps
add
xchg
sti
mov
pop
ins
cmps
mov
push
pop
bts
add
hlt
cli
push
jmp
lock
pushf
mov
out
cdq
mov
les
adc
sub
enter
je
cdq
sbb
or
jle
push
mov
pop
shl
and
add
mov
outs
push
lock
(bad)
and
push
lods
rol
xchg
mov
retf
mov
and
dec
(bad)
stos
sbb
sbb
dec
xor
xchg
sti
inc
(bad)
(bad)
cmp
dec
cmps
mov
pop
aam
xchg
scas
jne
and
sbb
pop
repz
add
pop
jecxz
(bad)
mov
add
sbb
jle
sbb
add
out
rcr
cmp
pop
mov
es
sub
push
ins
adc
hlt
mov
rcr
iret
sub
sbb
movs
pop
jbe
xor
or
mov
xor
aad
adc
push
rcl
jns
mov
repnz
mov
add
rol
push
or
daa
jae
js
fs
idiv
mov
movs
std
lock
jmp
xchg
into
(bad)
jnp
adc
push
or
mov
retf
fistp
add
out
cli
jne
inc
test
inc
leave
ftst
adc
add
fstp
jns
lock
retf
ds
dec
xchg
in
out
ins
add
sub
call
add
into
inc
inc
inc
hlt
call
sub
dec
dec
pop
xchg
adc
push
xchg
mov
inc
ja
and
sbb
js
dec
push
pop
or
cld
ret
add
mov
fistp
cmp
pop
mov
xchg
jo
test
stos
jg
adc
popf
mov
cmps
lds
and
es
(bad)
push
cwde
clc
push
jle
adc
cmp
stos
inc
cli
or
push
sub
push
movs
jge
fbstp
imul
xor
adc
adc
and
lea
in
fld
sub
fmulp
in
(bad)
(bad)
pop
jnp
dec
loop
in
add
scas
(bad)
pop
mov
(bad)
dec
aam
movs
stc
inc
(bad)
(bad)
jmp
pop
lods
jge
mov
sbb
dec
sbb
loope
div
aad
ficomp
xor
mov
jo
mov
sub
pop
shr
jno
push
pop
push
cmp
and
not
repnz
mov
fild
add
test
outs
pop
and
pop
bndldx
push
and
test
xor
mov
mov
repz
out
wrmsr
(bad)
pop
jp
add
and
popf
xchg
adc
or
cdq
cmp
fs
stos
pop
(bad)
aam
sbb
pop
cs
mov
out
inc
push
(bad)
in
cmp
xchg
inc
push
shl
out
ins
cld
push
movs
test
mov
mov
shl
in
cli
xor
ins
and
je
or
lods
sti
adc
imul
(bad)
cld
les
xor
movs
mov
adc
fs
int
daa
xor
push
push
sti
mov
push
push
fstp
pop
pop
cmp
movs
outs
xlat
pop
cmc
dec
cmp
sub
cmp
pushf
mov
add
jmp
push
mov
call
inc
and
add
pop
lods
ins
sbb
jns
nop
pop
fs
and
test
movs
(bad)
and
aas
inc
fcomp
fcomp
sub
jb
test
pop
and
inc
xor
ins
jb
sub
sub
adc
pop
enter
js
repnz
popa
out
xchg
jmp
(bad)
sbb
bound
inc
ja
sbb
mov
aam
fisttp
adc
xchg
jmp
sti
cld
lods
jl
sbb
or
imul
pop
mov
fdivr
pop
sbb
mov
es
sub
dec
push
jno
pop
add
pop
or
div
sbb
and
xor
fwait
jmp
pushf
jmp
call
or
adc
into
push
jbe
cdq
rcl
cdq
sub
pop
cmp
mov
inc
scas
pusha
cwde
sub
mov
pop
(bad)
mov
hlt
enter
xchg
fsubr
pop
mov
lds
bswap
loopne
mov
pop
inc
xchg
mov
jne
dec
cmp
pop
jne
inc
mov
cmp
(bad)
jle
fidiv
cmp
call
cli
pop
push
aad
mov
dec
loopne
jo
cmp
mov
inc
mov
inc
leave
jb
retf
(bad)
jb
jno
xchg
ss
int
sub
push
cli
or
out
pop
push
and
mov
push
lds
jle
repz
(bad)
lds
push
mov
mov
push
fadd
mov
ffree
out
xchg
(bad)
jl
and
sahf
and
push
add
push
and
or
ins
mov
fdivp
xchg
xchg
fadd
retf
fsub
(bad)
adc
lahf
lock
cmp
jg
jle
fwait
adc
in
aad
pcmpgtw
outs
daa
int
inc
add
inc
mov
xor
call
pop
add
or
xor
push
das
jne
out
mov
(bad)
adc
and
sub
and
arpl
jmp
push
jle
shl
mov
in
aaa
stc
push
fadd
dec
mul
add
dec
mov
sbb
cwde
pop
repnz
sub
cmp
shr
loop
cmc
sar
fidivr
sbb
pushf
ret
sub
and
retf
mov
ds
jle
or
fxch
sbb
jno
retf
and
jmp
inc
cmp
cs
adc
cs
mov
sub
ret
lahf
das
(bad)
mov
pop
xor
pop
cmp
pop
frstor
call
call
jbe
shr
mov
sti
fwait
push
and
mul
sub
pop
test
call
push
sbb
sub
add
sbb
pop
sar
inc
jmp
jl
xchg
jg
outs
xor
and
fcom
dec
mov
dec
test
or
call
std
adc
mov
and
mov
lods
xchg
loopne
ret
sub
xchg
arpl
pop
in
cmp
mov
add
repz
adc
mov
fisttp
cwde
adc
dec
mov
out
mov
push
stos
addr16
mov
cdq
sbb
xchg
shl
stos
je
sar
hlt
jo
sbb
jg
mov
sbb
lods
gs
cmps
and
test
jle
mov
cld
inc
jmp
cmp
add
jl
push
add
push
popa
std
or
push
mov
loop
push
int
out
inc
in
out
(bad)
mov
retf
jmp
loopne
fcomip
sbb
in
push
push
inc
int
sbb
movs
inc
and
lahf
(bad)
out
retf
cmps
sub
(bad)
aas
(bad)
sub
fdivr
adc
xchg
adc
xor
jae
mov
aas
lahf
sub
fwait
pop
scas
pop
mov
ins
ds
pop
cmp
push
jmp
xchg
lods
or
xor
xor
es
add
jbe
lods
cmp
sub
sbb
jbe
jbe
stos
shl
das
push
mov
xchg
sahf
int
pop
cmp
(bad)
arpl
ret
sub
sbb
jge
mov
(bad)
in
mov
mov
xchg
cmp
cmps
pushf
shr
push
mov
xchg
mov
xlat
xchg
rcl
(bad)
rol
test
fwait
push
leave
das
inc
cmp
jle
test
out
jns
mov
mov
push
xchg
xor
mov
inc
lahf
dec
push
(bad)
movs
or
jg
pushf
cmp
add
xchg
cmps
je
shr
or
js
pop
pop
xor
jp
mov
outs
inc
mov
jmp
xchg
or
out
sar
mov
dec
dec
mov
jb
cmps
mov
dec
test
leave
movs
sub
jnp
xor
out
xchg
sub
mov
cmp
add
jbe
pop
je
xor
repnz
dec
aam
pop
stc
xor
mov
call
adc
repz
retf
pop
fild
add
sbb
sub
sub
push
and
fistp
out
mov
icebp
fild
aaa
hlt
(bad)
stc
inc
(bad)
mov
mov
and
mov
test
jb
aam
jno
lods
loopne
cmps
push
add
sti
and
call
xchg
adc
add
pop
aas
outs
shl
jmp
jmp
cmp
out
cmp
jecxz
push
xchg
out
out
stos
iret
cmps
shr
push
imul
xlat
test
loop
int3
xor
ja
cmp
jmp
push
(bad)
icebp
out
icebp
add
jmp
xlat
mov
xchg
push
sub
jne
fidivr
xor
mov
into
or
mov
jge
imul
bound
push
imul
push
out
fmul
mov
adc
ja
push
repz
lods
push
iret
enter
in
jg
pop
clc
inc
push
(bad)
sahf
jne
fiadd
sbb
je
dec
iret
add
inc
jg
cmp
les
cmc
mov
(bad)
xor
sub
mov
icebp
test
ins
pop
outs
scas
inc
scas
and
aam
(bad)
pop
retf
faddp
imul
popw
add
mov
xchg
int
imul
sbb
push
mov
jle
ret
dec
push
aam
and
xor
lds
push
mov
cmp
out
cmps
out
and
arpl
jmp
push
jmp
rcl
pop
xor
(bad)
test
add
mov
js
xchg
aaa
mov
push
mov
adc
aas
mov
repz
mov
sbb
mov
mov
ds
js
jg
outs
(bad)
retf
scas
mov
cmovg
mov
mov
cmp
add
sbb
push
stc
xchg
jne
inc
mov
(bad)
(bad)
stc
into
mov
dec
stos
lods
enter
enter
aas
fldpi
(bad)
xor
leave
or
fnstenv
push
xchg
and
loop
xchg
mov
mov
adc
icebp
cli
sub
add
aad
and
loope
mov
into
jg
(bad)
clc
call
dec
jo
xchg
cwde
fs
rcl
test
nop
(bad)
sbb
out
and
js
mov
sti
or
xor
push
in
out
sbb
ja
stos
mov
(bad)
push
cmc
jno
sbb
adc
sub
add
call
mov
push
cmp
scas
jecxz
fadd
adc
int3
jo
cmp
jns
pop
jno
pushf
xor
jecxz
outs
jl
ins
mov
jne
mov
in
imul
ja
cmp
lods
inc
in
lds
lock
and
ja
or
dec
ds
mov
add
and
add
imul
iret
es
int3
sbb
xor
lahf
jns
dec
cmp
aam
xchg
xchg
pop
jg
push
das
inc
mov
add
call
les
jnp
mov
dec
jne
outs
adc
jbe
movs
mov
and
or
les
mov
xchg
fucomp
lock
cdq
jmp
out
imul
cmc
pop
mov
cwde
pop
xlat
(bad)
jbe
or
mov
adc
mov
in
cdq
inc
jecxz
(bad)
rol
push
imul
test
pop
retf
test
jmp
std
outs
enter
or
push
ret
and
cs
cwde
out
(bad)
sbb
div
push
pop
mov
push
lock
jl
addr16
sub
push
cmps
or
mov
dec
in
pusha
ja
jecxz
cmp
and
out
push
ret
pop
(bad)
fdivr
fmul
cmp
mov
xor
fnstsw
(bad)
lods
xchg
jns
fsubp
adc
mov
cmp
push
push
push
movs
les
jl
inc
cld
sub
mov
mov
fs
sbb
arpl
xor
stc
xlat
dec
in
cmps
std
jp
pusha
adc
scas
out
jbe
mov
push
test
sbb
xor
idiv
pmullw
pop
jecxz
rcr
popa
retf
int3
xor
out
gs
clc
icebp
sub
mov
(bad)
push
push
sub
shl
ret
lods
out
bound
sahf
sub
sbb
fisub
cmps
movs
mov
push
stos
push
push
and
push
cdq
mov
std
xchg
xor
es
ror
stos
jg
sbb
and
(bad)
lock
pusha
call
call
pop
pop
stc
pop
pop
pop
pop
cdq
xlat
lea
cmp
inc
repnz
sub
sar
gs
outs
test
push
jb
mov
jl
sbb
sub
fistp
popf
dec
icebp
mov
aaa
lock
jmp
xchg
inc
xor
xchg
dec
retf
mov
xchg
dec
mov
out
push
call
xor
mov
xor
rcr
jle
xchg
repz
in
ss
or
cmp
out
pop
mov
retf
test
xchg
(bad)
out
jns
jmp
adc
xor
sbb
mov
fucomp
test
adc
call
shl
(bad)
pop
ret
loope
add
pop
add
es
xchg
add
add
enter
mov
pop
ins
mov
(bad)
adc
xor
or
mov
test
(bad)
xchg
xor
mov
mov
sub
xor
and
(bad)
mov
and
ins
jo
das
mov
repz
popf
dec
xchg
or
pop
call
jb
fwait
push
int
bound
fldenv
xor
add
cli
mov
xchg
int
cld
inc
cwde
mov
xchg
add
adc
dec
cmp
push
gs
retf
push
jbe
(bad)
and
out
sub
jg
xchg
call
sbb
push
cmp
sbb
xor
mov
(bad)
inc
push
pop
jbe
mov
ffreep
and
fnstcw
lea
rcl
es
push
cld
dec
mov
popf
in
aas
aas
(bad)
jmp
mov
and
loop
mov
adc
sub
xor
add
push
shl
lods
push
xor
mov
jo
movs
lods
jnp
mov
popf
ds
cmp
pop
pop
inc
clc
pop
ins
mov
jnp
imul
or
mov
jmp
shl
test
js
pop
dec
add
adc
adc
popa
xor
into
es
ja
fwait
inc
sub
push
fdiv
(bad)
xchg
fstp
sbb
popa
into
push
test
push
int
xchg
dec
fsub
mov
mov
push
xchg
(bad)
mov
bound
fdiv
ss
inc
or
pop
cmp
add
inc
sbb
xchg
pop
xor
fabs
rcl
daa
cld
mov
sti
mov
xchg
dec
jp
adc
arpl
cmc
sbb
cli
shr
dec
adc
stos
mov
cwde
inc
psrlq
das
neg
scas
call
dec
call
xor
cs
int3
movs
mov
enter
jmp
pop
lock
push
pop
shl
nop
or
mov
add
mov
gs
ins
and
into
sub
es
push
inc
cmc
push
mov
stos
mov
add
call
xor
enter
data16
dec
sbb
sbb
pop
stos
cmp
xchg
test
push
popf
frstor
cmps
adc
arpl
mov
lods
rcl
dec
and
(bad)
jmp
les
lahf
push
cmp
cli
cmp
fidivr
cmps
add
hlt
rol
add
push
out
movs
repnz
(bad)
in
sbb
mov
mov
ins
jnp
sti
das
xor
jl
dec
xor
(bad)
lahf
repz
or
popa
pavgb
out
mov
or
inc
mov
stos
cmps
icebp
inc
fwait
repz
fwait
sbb
mov
mov
int3
and
ror
addr16
hlt
cmc
push
mov
hlt
sbb
lds
leave
sahf
(bad)
adc
outs
and
adc
sbb
sbb
fldcw
jnp
push
jae
lods
push
(bad)
mov
push
imul
(bad)
xlat
xor
cmp
add
repnz
repz
or
ds
mov
and
jnp
or
fcmovnbe
sub
jbe
leave
stc
cwde
mov
cwde
pop
fisttp
pop
std
pop
cmp
aam
push
push
xchg
push
in
jge
cmp
cwde
jne
jecxz
ins
cmps
jbe
cmp
mov
(bad)
icebp
pop
test
out
(bad)
in
adc
xor
leave
outs
sets
or
adc
push
jns
inc
jae
stos
and
ror
xor
cmp
add
pop
fld
(bad)
test
out
repz
jnp
ins
fxch
mov
aam
jmp
mov
push
dec
mov
pop
mov
das
inc
clc
gs
push
lahf
jo
cmp
push
cmp
int3
call
(bad)
popa
call
sub
xor
push
iret
xor
iret
mov
and
sub
bound
push
mov
dec
bound
cmps
jb
pop
fcom
sub
adc
mov
add
xchg
out
mov
int3
cmps
sub
nop
sar
inc
push
aas
jo
sub
into
sbb
xchg
shl
test
ret
and
add
enter
mov
adc
and
dec
jg
pop
inc
movs
jp
in
xchg
push
shl
sub
mov
mov
lea
jae
pop
or
push
cs
lods
sub
xchg
add
jb
fwait
mov
add
xor
sbb
or
lock
mov
sar
lds
xor
add
fadd
add
cmp
pop
retf
loop
inc
ins
cmp
or
and
jns
push
imul
out
call
push
fwait
les
daa
sub
or
arpl
jo
int3
xor
mov
cmp
jmp
idiv
pusha
sbb
mov
out
scas
mov
cmps
call
pop
repnz
xchg
mov
(bad)
mov
xchg
ja
sub
mov
repz
test
and
pop
(bad)
out
xchg
add
inc
adc
mov
sahf
sti
or
mov
add
pusha
mov
loopne
iret
ficomp
mov
and
xchg
inc
lock
lahf
dec
pop
cmps
sahf
mov
popa
not
enter
inc
dec
add
sti
icebp
movs
jno
sub
xchg
mov
lods
jl
push
test
adc
lea
mov
dec
jno
pusha
aam
mov
xor
enter
xchg
jmp
fs
mov
cmp
jmp
or
or
inc
xor
outs
repnz
sti
xchg
jns
jge
cwde
sbb
btr
mov
stc
fxch
dec
repz
cmc
xchg
adc
or
xor
cmp
mov
pop
rep
outs
adc
cwde
int3
out
aas
ror
daa
retf
hlt
arpl
push
ins
xchg
test
jg
test
ins
jo
mov
or
ins
ja
daa
cmc
inc
outs
leave
sti
out
mov
sub
rcr
jmp
aam
push
bswap
xchg
leave
fidiv
or
and
mov
add
sub
jmp
cmp
js
sbb
sub
int3
push
inc
scas
dec
mov
test
xchg
fidiv
sar
call
in
xchg
leave
addr16
or
add
cmc
icebp
aas
pop
lock
push
cs
lahf
sbb
pop
add
(bad)
push
dec
push
retf
jmp
fsubr
enter
stc
hlt
shr
mov
stc
out
xchg
xchg
push
ficom
add
pop
mov
jmp
sbb
pop
and
daa
dec
adc
or
push
in
addr16
xor
xchg
mov
out
xchg
and
test
pop
or
mov
into
add
push
shl
loopne
cmp
ficom
dec
jns
std
mov
jmp
adc
pop
sub
and
push
movs
xlat
lar
ror
sub
xor
dec
in
aaa
sbb
sbb
pmaddwd
mov
mov
out
adc
inc
in
out
out
dec
sub
push
out
ret
add
(bad)
retf
inc
fisub
into
or
(bad)
jmp
jae
js
dec
jne
arpl
mov
mov
adc
push
das
cmp
mov
in
mov
sti
ds
(bad)
retf
call
jnp
int
jae
leave
sub
das
mov
push
adc
jle
jmp
test
in
lods
in
push
inc
push
cdq
inc
ss
int
aad
or
xor
jno
mov
fdiv
mov
test
dec
nop
out
sub
inc
adc
(bad)
int3
mov
jecxz
int
push
addr16
cli
add
cmp
popf
or
mov
imul
jmp
xchg
nop
fs
pop
xchg
cmp
cs
(bad)
jbe
outs
pop
dec
pop
jg
xchg
xor
(bad)
(bad)
mov
xor
add
sub
(bad)
out
sahf
or
popa
push
test
or
add
push
mov
or
jo
mov
cmp
sub
push
dec
clc
cmps
sub
js
repnz
sbb
mov
(bad)
lahf
outs
cld
shl
inc
mov
and
adc
ins
enter
add
icebp
shr
xchg
(bad)
pop
stc
test
je
push
jae
je
sbb
ins
xchg
adc
add
in
inc
stos
xchg
inc
ins
scas
pusha
mov
xchg
adc
sub
dec
sbb
rcl
mov
mov
mov
dec
data16
(bad)
test
sub
ret
fsub
and
dec
inc
xor
mov
push
es
mov
fdivp
sahf
xchg
sbb
pop
(bad)
mov
pop
xor
pop
(bad)
pop
inc
mov
lock
push
add
adc
push
jle
pop
in
xor
mov
xor
out
push
pop
(bad)
push
add
mov
in
jge
dec
sub
sbb
dec
or
lods
jbe
ds
mov
mov
inc
add
repnz
sbb
jge
lods
xor
push
pop
and
ror
in
mov
pop
mov
stos
nop
cmp
jns
sub
out
xchg
test
mov
lds
shl
sbb
jbe
call
sbb
ins
mov
push
jne
cmp
rcl
data16
gs
xor
mov
jo
pop
inc
test
mov
and
movs
inc
sub
inc
xor
fwait
imul
les
mov
fnsave
inc
mov
iret
add
mov
or
movs
jle
sahf
outs
cmps
cld
call
mov
add
inc
and
retf
dec
rol
mov
pop
into
in
outs
(bad)
add
inc
in
inc
test
dec
cmp
dec
sbb
cmp
pminub
dec
loop
sub
mov
sub
mov
xlat
jp
lahf
lds
dec
sbb
aam
movs
loope
adc
aas
push
mov
call
(bad)
fstp
cmps
xchg
neg
mov
xchg
mov
ds
bound
es
mov
es
popf
push
xchg
rcl
xor
mov
or
sbb
xchg
imul
pop
push
mov
dec
and
adc
pop
sti
imul
push
xor
mov
push
ror
or
jb
mov
ud1
jecxz
aad
jle
mov
and
and
push
retf
lea
xchg
or
repnz
imul
inc
js
stos
push
es
(bad)
jl
pop
mov
sub
les
loope
and
jle
sahf
add
rol
push
and
(bad)
pop
pop
(bad)
retf
int3
jae
jle
not
test
cmc
out
test
add
sar
add
fld
clc
xchg
cmps
push
dec
(bad)
or
sbb
loopne
xchg
repnz
mov
imul
jno
das
cmp
mov
mov
dec
pop
or
mov
jmp
test
jae
pop
jae
call
ret
inc
(bad)
cmp
movs
imul
pop
cmp
mov
push
or
sub
jge
xchg
fcomp
retf
js
(bad)
sbb
in
ds
test
cmp
inc
sub
cmp
scas
shl
sbb
xchg
fnstcw
daa
jno
push
jmp
inc
mov
jge
pop
and
jo
mov
sub
dec
sub
sub
or
cmp
jl
adc
rol
sbb
fld
mov
popf
xchg
addr16
and
shl
lahf
or
add
jecxz
pop
(bad)
out
retf
mov
sub
ret
cmp
mov
rcl
cmps
ret
cmp
int
sahf
rcr
out
aad
dec
xchg
add
push
push
push
ret
sub
in
lock
push
loopne
push
hlt
ins
and
int3
jbe
cmp
fs
dec
mov
fld
in
inc
mov
psllq
xchg
xor
xor
mov
or
int
sub
xor
in
inc
mov
push
in
inc
add
lods
bound
sub
jb
loope
push
pop
and
fcom
loopne
jle
imul
div
and
xor
jno
jo
dec
push
push
icebp
pop
mov
push
sub
std
jge
push
mov
pop
loop
cmp
mov
jle
pop
movs
mov
rcl
loop
mov
lods
lock
mov
jb
mov
shl
fisttp
xchg
adc
or
cld
push
xor
pusha
mov
or
(bad)
fbld
ins
or
and
fisttp
pop
mov
xor
push
sbb
dec
mov
fdivr
(bad)
mov
cmps
retf
sbb
mov
xchg
aas
in
dec
cmp
or
inc
aam
push
ret
sub
cs
and
sub
inc
xor
ret
cmps
imul
inc
add
and
imul
sar
jge
and
aad
lods
(bad)
inc
xchg
out
inc
test
cmp
push
(bad)
out
test
(bad)
out
jp
sbb
and
push
add
push
xor
shl
and
fucomip
xor
adc
adc
cmp
aas
fisttp
or
adc
shl
jmp
adc
out
xlat
dec
call
pop
das
push
xchg
push
or
or
sbb
fmul
mov
pop
imul
cs
repnz
(bad)
out
sbb
jb
pop
shl
push
jbe
inc
(bad)
mov
out
ret
xchg
jns
out
or
sub
ins
mov
int
dec
add
setne
sahf
aas
cmc
sbb
sub
mov
sbb
mov
jmp
mov
out
fdivr
ss
bound
xor
popf
dec
stos
retf
scas
lds
leave
push
ins
daa
mov
sub
lds
jge
faddp
cmps
rol
jbe
scas
imul
mov
pop
fld
leave
ficomp
test
push
jge
cmp
xchg
adc
sti
out
leave
dec
in
dec
movd
adc
cwde
jmp
in
xor
int
imul
jp
xchg
adc
sbb
pop
add
inc
xor
dec
push
jno
int
push
push
(bad)
cmps
jbe
cdq
push
rcr
fs
ss
sub
xchg
adc
js
pop
(bad)
cli
retf
(bad)
inc
cmps
mov
pop
adc
adc
imul
jge
xchg
push
add
mov
out
jbe
inc
jecxz
and
xor
xchg
jne
lahf
pusha
pop
into
xchg
cld
cmc
retf
retf
push
rcr
fsubp
scas
sti
test
cdq
mov
jl
and
and
outs
stos
push
enter
dec
(bad)
cld
test
xor
imul
(bad)
je
in
and
jmp
leave
push
outs
sysret
push
cs
mov
xor
pop
push
pop
not
adc
jmp
lods
jmp
push
cdq
addr16
or
add
dec
pop
ja
inc
and
loope
popa
mov
jne
test
(bad)
mov
dec
mov
adc
ror
inc
xchg
dec
in
or
imul
or
ss
push
pop
lock
add
and
jmp
ror
jl
shr
icebp
xor
mov
cmp
push
hlt
jecxz
pop
ins
icebp
cs
xor
sub
push
mov
inc
ja
xchg
and
shl
test
lock
dec
mul
pop
lahf
idiv
pop
arpl
push
sbb
mov
mov
dec
jbe
scas
xchg
xchg
inc
ins
push
jge
neg
xor
mov
sbb
xor
push
adc
cmp
repnz
sbb
push
(bad)
fsub
clc
(bad)
js
in
fsubr
gs
or
sub
out
ror
into
add
mov
sbb
outs
and
out
ficomp
scas
inc
mov
push
pop
imul
mov
mov
xchg
retf
leave
sahf
push
sbb
lahf
jle
movs
push
mov
leave
pop
test
enter
xor
pusha
mov
and
dec
push
inc
(bad)
fcom
jecxz
and
or
jns
pop
in
repz
push
ret
shl
push
dec
mov
(bad)
movs
dec
mov
sub
call
scas
fiadd
stos
cmp
dec
shl
xchg
call
sti
or
repnz
into
clc
push
mov
mov
cmp
cli
ret
or
xor
(bad)
ds
jmp
lea
mov
ret
in
call
outs
or
push
xchg
xchg
out
stos
aad
push
test
ret
xor
movs
adc
sar
pop
cmps
fmul
pop
mov
pop
jb
mov
inc
and
fldcw
xor
iret
mov
jnp
xor
inc
xchg
outs
call
movs
cmp
add
idiv
jg
cmp
mov
pop
(bad)
nop
mov
fptan
aad
jnp
inc
push
jp
std
dec
retf
out
xchg
cmp
mov
cmp
scas
and
jns
mov
mov
ret
mov
xor
mov
inc
repz
sbb
xchg
loop
leave
neg
mov
ffree
bswap
outs
push
xlat
adc
cmps
in
outs
adc
xchg
cld
(bad)
pop
rep
mov
outs
psubsw
cmps
popa
pop
aas
and
rcr
cmp
jp
inc
mov
adc
ss
pop
out
sub
mov
or
cld
fisttp
xor
idiv
jecxz
sbb
mov
cmp
lahf
mov
sti
rcl
(bad)
std
into
xor
sub
cdq
imul
int3
push
clc
lods
adc
sbb
cmps
mov
rcr
or
adc
mov
imul
daa
je
dec
pop
sahf
sbb
mov
push
ss
add
pushf
pop
sub
rep
and
inc
jo
fsubr
adc
fwait
push
into
pusha
and
cdq
pop
mov
(bad)
in
adc
sti
icebp
mov
adc
jle
call
(bad)
std
xchg
sub
push
ret
aam
rcr
or
icebp
in
movs
(bad)
ds
mov
pop
xlat
ds
xchg
sar
dec
out
dec
leave
add
mov
push
dec
pop
jno
sub
push
sub
das
idiv
popa
mov
sti
adc
cmp
movs
sub
into
mov
cli
test
sbb
push
mov
pop
mov
retf
mov
xchg
push
cld
mov
js
xchg
hlt
out
add
dec
movs
xor
mov
pushf
jmp
jp
popa
repnz
pushf
pushf
outs
jnp
loop
adc
pop
and
add
push
mov
(bad)
inc
ficom
inc
out
aam
(bad)
lds
in
sar
push
mov
lahf
test
pop
xchg
dec
pop
leave
add
dec
and
xchg
int3
jle
movs
into
xchg
pop
jmp
or
mov
aaa
mov
jb
or
addr16
test
push
or
jnp
retf
push
(bad)
jb
cmp
fadd
add
xor
add
stc
sbb
xchg
and
push
xchg
mov
out
dec
fadd
xor
out
cmp
and
dec
outs
cmc
sub
push
not
or
push
xchg
hlt
icebp
xchg
dec
lods
jmp
inc
fadd
mov
cmps
or
xchg
dec
mov
push
xor
pusha
jle
mov
aam
xchg
xlat
add
fsub
or
mov
adc
and
enter
xchg
cwde
ins
sbb
pop
lahf
mov
or
psllq
sub
sbb
jg
std
ret
fdiv
jl
fild
pop
jne
adc
sub
shl
mov
jge
jle
ficomp
cmps
aas
mov
(bad)
shr
out
mov
push
shl
popa
inc
dec
cmp
enter
sbb
jl
das
xor
sbb
add
out
cmp
clc
add
xlat
sti
dec
dec
jmp
push
lods
gs
dec
inc
leave
enter
push
push
and
mov
jno
aad
int3
push
lods
and
dec
scas
(bad)
ffree
adc
ficom
xchg
add
jne
cli
ss
xchg
mov
mov
xchg
lahf
dec
idiv
push
sti
stos
stos
pop
fsub
xchg
mov
dec
cli
mov
je
js
jl
jle
inc
lods
and
pop
add
push
push
(bad)
mov
cdq
adc
dec
ret
popf
dec
xchg
jmp
(bad)
mov
ins
addr16
call
(bad)
push
lds
frstor
out
sub
cmp
ror
mov
xchg
inc
fwait
inc
fbstp
shl
xlat
add
inc
pop
mov
mov
sub
fwait
mov
xor
jp
xchg
retf
movs
pop
les
in
cmps
aad
mov
jb
(bad)
jle
shr
add
stc
jbe
inc
sub
imul
add
test
call
std
int
pushf
std
push
in
pop
jns
cwde
lock
int
int3
push
into
mov
iret
pop
add
dec
je
mov
mov
fstp
aam
imul
sbb
fst
adc
and
(bad)
xor
test
mov
cwde
adc
mov
imul
xchg
cld
repnz
daa
scas
(bad)
dec
dec
stc
jns
int
or
jo
int
dec
dec
leave
xor
cwde
add
addr16
or
jbe
cmp
xor
mov
add
dec
clc
ds
mov
ret
mov
cmp
xchg
xor
xor
and
or
fstp
repz
sbb
lds
jbe
cdq
mov
out
loop
add
pop
push
js
add
add
stc
enter
push
cmp
fidiv
sub
retf
repnz
jns
push
push
paddusw
push
mov
pop
add
add
or
call
xor
jp
pop
aas
std
scas
jae
imul
pop
or
ins
lods
test
push
icebp
cmp
and
icebp
rcr
jge
pop
outs
es
xor
cmp
dec
scas
aam
pop
aad
lahf
push
test
int
popf
pop
push
jb
aaa
cmp
cmp
sub
or
ror
aad
cli
inc
neg
or
push
jno
retf
sar
leave
fst
into
mov
ss
jge
inc
shl
test
(bad)
call
xor
push
test
repnz
or
pop
repnz
jo
sub
inc
mov
cdq
ret
sbb
test
int
inc
sbb
lea
pop
adc
retf
jge
pop
dec
dec
xor
test
mov
and
lahf
mov
xchg
jmp
or
and
and
les
push
iret
fcmove
sub
mov
hlt
sbb
inc
push
add
ja
and
mov
ins
inc
mov
(bad)
in
push
fsubr
rol
leave
call
add
hlt
mov
movs
sub
(bad)
lods
stc
push
aas
push
into
sbb
ret
xor
nop
and
and
inc
inc
idiv
lock
mov
in
ret
enter
push
inc
test
mov
mov
jmp
mov
push
ins
aas
cmc
inc
dec
fmul
fisub
dec
(bad)
loopne
sbb
push
pop
cmp
or
jb
inc
mov
inc
ror
cmps
jbe
mov
mov
mov
mov
loop
mov
and
xor
cmp
pusha
or
add
setns
fst
dec
test
popf
jg
ret
ss
xor
or
add
ret
div
int
inc
pop
jbe
mov
add
shl
icebp
mov
out
mov
jge
or
bnd
fstp
scas
fsubr
mov
fsub
push
and
cli
mov
push
xor
bswap
inc
xchg
xor
jg
mov
in
aas
das
jns
int
cli
icebp
out
mov
(bad)
jae
int
push
fdivr
and
or
xor
pop
ins
sub
fcom
ret
jb
dec
cmp
mov
pop
mov
dec
test
mov
xchg
jo
add
sti
std
pop
dec
jmp
retf
jne
xchg
push
jb
jnp
mov
sbb
lods
fstp
cmp
dec
dec
mov
adc
clc
xchg
out
xchg
xchg
enter
fbld
jno
cmp
lods
push
mov
inc
lods
mov
cmp
dec
jns
push
or
mov
nop
mov
call
pop
sub
dec
lds
cmps
mov
add
xlat
jnp
push
jns
lods
pop
icebp
hlt
jp
stos
jne
ret
mov
mov
mov
xchg
pop
push
addr16
(bad)
push
imul
ds
sahf
outs
scas
stos
outs
jo
mov
sub
push
lock
jns
cdq
or
xchg
out
fsub
xor
add
add
mov
test
jmp
retf
(bad)
or
inc
jle
jecxz
adc
pop
ret
mov
fdiv
daa
pop
mov
xor
push
xchg
jae
enter
ins
das
xchg
cwde
jle
xchg
and
add
int3
cmps
gs
sbb
jle
sete
in
lock
mov
or
or
jb
cmp
mov
std
add
cs
push
push
ror
lock
(bad)
xchg
mov
dec
jmp
sbb
jg
int
scas
dec
lahf
pusha
ret
xchg
addr16
pop
jecxz
pop
add
das
rcr
mov
imul
fadd
fcmovne
out
fnsave
push
(bad)
daa
mov
inc
movs
push
scas
stc
jl
cdq
cmp
push
clc
mov
(bad)
pop
rcr
daa
jp
inc
lds
mov
(bad)
daa
pop
dec
pop
sbb
cmp
icebp
dec
popf
stos
pop
push
ss
push
clc
mov
adc
push
pusha
sub
xor
xor
test
call
push
or
mov
adc
gs
push
mov
loope
inc
push
dec
test
push
mov
mov
sub
jle
mov
xor
sti
mov
jns
push
ror
sub
(bad)
loope
inc
pop
sbb
push
cmp
cmps
adc
push
jge
fs
jg
sub
es
push
hlt
nop
aad
stos
mov
lock
shl
cmp
and
and
or
bnd
adc
int
rol
loop
js
jle
daa
jle
in
scas
pop
(bad)
ret
fiadd
loop
xchg
loop
inc
pop
lahf
arpl
sbb
test
jne
mul
scas
out
call
sub
scas
ret
pop
and
push
xchg
aam
sub
fadd
push
popf
out
ja
cmp
aam
inc
je
add
and
xchg
push
xor
sub
pop
mov
loope
cld
je
arpl
mov
loope
or
pop
push
(bad)
test
ret
add
fwait
jecxz
pusha
or
addr16
hlt
xchg
cli
repnz
mov
(bad)
xchg
sti
in
jp
xchg
mov
mov
loop
rol
iret
sub
sub
les
enter
iret
xor
(bad)
nop
pop
iret
out
add
popa
inc
in
jg
ja
fadd
adc
jns
add
fild
xchg
xor
test
and
retf
ficomp
xor
movs
dec
test
ret
or
in
in
or
out
lods
dec
jae
cmp
in
adc
pop
sbb
bnd
imul
dec
popf
cmps
or
xor
sti
movs
add
sti
push
sar
xchg
pop
pusha
arpl
popa
test
inc
mov
push
out
mov
sbb
std
jnp
mov
mov
push
mov
dec
xor
mov
push
fdiv
std
mov
out
(bad)
and
sbb
arpl
aas
aad
ss
add
pop
rcr
sahf
mov
mov
push
data16
sub
sbb
call
dec
mov
les
cmp
dec
push
cld
mov
pop
dec
in
retf
imul
test
jne
ins
xchg
outs
bound
in
cmp
and
pop
lods
out
pop
or
jbe
scas
loop
cmp
ror
jge
sar
sub
(bad)
cmp
sar
(bad)
pop
mov
jae
out
jbe
xchg
ficom
inc
sar
push
mov
xchg
loopne
out
aam
push
push
shr
push
in
out
dec
pop
cmp
and
sldt
mov
int3
xor
popf
retf
push
sahf
es
add
in
in
cmp
fs
ja
xchg
jmp
adc
xchg
jns
outs
adc
cwde
xor
jmp
or
push
iret
pop
stos
xlat
inc
retf
cmp
das
retf
or
lahf
ret
xchg
fwait
call
mov
(bad)
xchg
imul
movs
outs
push
fneni(8087
inc
les
mov
(bad)
fistp
icebp
ins
sbb
std
pop
jge
fsub
fisub
into
loopne
outs
sub
(bad)
push
cmp
hlt
push
popa
pop
push
shl
mov
push
mov
or
test
xor
retf
mov
andps
push
inc
(bad)
push
ret
dec
inc
addr16
out
enter
jge
ret
mov
pop
sbb
nop
scas
cmp
cmc
dec
jnp
clc
xor
adc
jl
loopne
js
lahf
dec
mov
and
iret
add
out
cmp
sbb
xchg
dec
nop
icebp
cdq
out
push
xlat
cmc
and
inc
(bad)
xor
repnz
dec
add
adc
les
movs
loope
stos
(bad)
sub
js
jp
jae
jmp
in
sti
movs
enter
jb
lods
les
mov
pop
lods
push
cmp
fneni(8087
es
test
or
xor
in
ret
cld
pusha
(bad)
fcom
dec
cli
add
sub
in
xchg
or
hlt
pop
test
das
ret
mov
mov
jno
aas
movs
movs
je
and
xor
(bad)
(bad)
outs
icebp
and
out
clc
cmp
dec
stc
jmp
icebp
push
xor
ror
adc
inc
inc
sbb
test
pop
mov
sbb
mov
jmp
sbb
fimul
fsub
xlat
out
ret
xor
fadd
inc
int3
loopne
mov
out
cdq
inc
ud0
xchg
cmp
push
aaa
add
add
jns
scas
xlat
dec
pop
mov
aam
inc
fisttp
call
adc
cmp
(bad)
push
enter
lods
sub
push
mov
loop
bswap
mov
add
pop
cwde
xchg
mov
mul
sbb
xor
ror
dec
cmp
pop
push
aam
or
sub
sbb
lods
cli
aas
jmp
pop
arpl
xor
sbb
je
les
hlt
out
jb
mov
mov
mov
mov
mov
cmp
xchg
sbb
or
mov
sub
shr
ror
add
xchg
test
xchg
cmp
aam
xchg
xor
jmp
cmp
push
clc
fisttp
retf
adc
shr
out
push
call
aaa
pop
data16
mov
pop
retf
leave
imul
xchg
rcl
bnd
push
jmp
push
mov
leave
sub
fstp
cld
cmc
ret
inc
test
inc
lahf
std
rcl
ins
int
fild
mov
mov
xor
sbb
into
mov
adc
xchg
lods
add
outs
cmps
call
adc
jmp
shr
mov
pop
push
sub
sub
xchg
(bad)
movs
adc
xchg
mov
(bad)
and
ret
cmp
inc
ja
fwait
cmp
cli
fsubp
js
jge
sbb
mov
mov
cli
fldenv
(bad)
lds
cmp
push
mov
and
lea
stos
mov
sbb
je
mov
and
push
cmp
inc
fidiv
and
dec
sbb
fnstenv
movs
sub
jne
pop
std
fdiv
push
pmulhuw
(bad)
out
jne
lods
and
mov
inc
fstp
popf
pop
inc
cmp
out
xchg
sub
add
mov
pop
lds
cmp
ins
lds
inc
sbb
xor
out
cmp
mov
dec
test
loop
add
test
jle
outs
mov
xchg
ficom
jae
test
daa
cmp
mov
gs
in
lods
and
stc
xor
or
pop
sub
outs
aam
fmul
popf
and
dec
pop
es
les
pop
call
je
repz
test
sub
arpl
aaa
jno
pushf
ins
and
inc
sub
ins
xchg
mov
cwde
and
fbstp
mov
sub
out
dec
rol
or
lods
xchg
ins
push
xor
outs
mov
dec
loop
out
test
stos
xchg
push
xchg
cmps
fwait
xor
or
inc
cmps
push
mov
mov
jmp
std
sbb
rol
je
inc
push
ret
fwait
iret
push
xchg
adc
xor
inc
or
cwde
cmp
jmp
movs
cmp
pop
dec
cli
jmp
mov
nop
jo
mov
pop
std
jmp
outs
xor
mov
xor
dec
sbb
adc
cld
and
or
mov
add
repnz
hlt
mov
pop
jb
xchg
pop
out
mov
lods
test
scas
xlat
js
xor
leave
cwde
or
lods
in
fidiv
pusha
xor
or
aaa
scas
cmp
cmc
add
test
or
dec
and
mov
nop
add
ret
or
jne
fcmovnbe
jg
mov
test
xchg
sbb
sub
enter
mov
(bad)
daa
jbe
push
jae
cdq
popa
dec
(bad)
jmp
dec
inc
push
jne
mov
jl
push
(bad)
js
int
jo
and
retf
jbe
add
sub
push
push
pop
fucomp
test
pop
pop
out
test
cmc
inc
push
cmp
inc
cmps
pushf
pop
and
rcr
mov
outs
mov
jg
lock
in
fs
popa
sahf
retf
jecxz
por
cmps
xchg
dec
test
pop
or
inc
sbb
xlat
(bad)
out
out
rcl
jge
pop
add
ins
jle
mov
mov
mov
adc
aam
std
mov
outs
mov
inc
push
inc
into
aas
and
or
(bad)
jo
leave
add
xchg
push
dec
push
dec
movd
mov
test
mov
adc
cmps
lods
popa
les
int3
mov
leave
sub
cmps
fidivr
stos
into
fistp
push
and
or
jl
in
mov
mov
(bad)
push
cmp
sbb
adc
popf
jbe
pop
inc
data16
idiv
ins
and
into
mov
test
aam
pushf
and
sar
add
push
sub
cmps
push
call
shr
or
shr
and
or
mov
mov
push
popa
push
add
xchg
fcomp
into
pop
xor
xchg
lock
fwait
and
and
or
or
xchg
jp
sar
popf
leave
stos
or
movs
addr16
add
and
pop
cli
inc
(bad)
dec
cmc
jle
rol
cld
daa
mov
lea
jae
fcmovnb
out
or
inc
pop
jns
pop
cmp
mov
call
loopne
jno
loop
or
adc
mov
aas
xor
inc
and
ret
clc
push
into
cmp
fnsave
pop
retf
inc
mov
arpl
pop
pop
lods
or
sub
int
stos
hlt
inc
inc
or
mov
pop
add
test
jp
das
sbb
adc
lahf
inc
or
push
js
or
imul
push
inc
out
hlt
push
lahf
jns
mov
test
mov
lods
xchg
jg
(bad)
adc
ss
or
jle
lfs
popa
and
push
cwde
aad
je
enter
ins
ins
test
repz
dec
test
xor
jbe
(bad)
js
cmp
retf
or
dec
inc
fadd
mov
sar
push
dec
stos
or
mov
adc
mov
int
inc
fs
ret
lds
dec
and
xchg
sbb
aaa
fstp
sahf
inc
and
and
gs
test
shl
add
xchg
push
dec
and
arpl
inc
sbb
ror
inc
sub
xchg
cli
mov
cdq
fcom
xchg
jnp
in
jmp
push
mov
inc
(bad)
arpl
scas
pop
pop
jae
rol
or
lea
adc
addr16
push
call
or
push
push
dec
adc
dec
and
loopne
mov
in
add
imul
sahf
aad
sbb
cmps
pop
jns
and
std
aad
into
popa
loop
sub
cmovge
or
and
cli
push
movs
stos
iret
idiv
xchg
in
ret
into
push
dec
in
jmp
adc
test
mov
in
xchg
mov
jae
add
dec
in
fsub
add
jbe
bound
call
retf
aam
xor
repnz
cs
enter
fisttp
call
jne
movs
xchg
icebp
adc
inc
xrelease
dec
ins
mov
les
das
inc
push
inc
or
lds
jle
mov
retf
(bad)
mov
xchg
jp
retf
addr16
jno
pop
push
xchg
jmp
mov
cmp
icebp
ja
xor
leave
sahf
pop
add
sub
push
push
sbb
pop
fistp
cli
loop
idiv
xor
mov
leave
test
mov
mov
bound
xchg
outs
lahf
dec
adc
add
js
pushf
and
and
bound
add
dec
push
sub
movs
push
mov
loope
dec
lds
xchg
in
mov
jb
call
ret
sub
ins
pop
rcl
out
inc
mov
cmps
sub
cmps
push
mov
test
stos
es
or
icebp
mov
add
and
aaa
inc
xchg
neg
ja
int
mov
mov
test
inc
sahf
fwait
pop
dec
movs
fsubr
xor
xchg
fsubr
ret
add
cmp
inc
movs
inc
and
aad
fidivr
movs
cli
das
jae
adc
mov
adc
out
mov
cli
aas
add
push
arpl
sub
ret
mov
mov
adc
mov
das
push
loopne
arpl
stc
pop
xchg
mov
js
adc
mov
mov
(bad)
out
loopne
js
mov
xlat
fcomp
cmp
jne
(bad)
in
icebp
pop
std
dec
js
lods
mov
inc
mov
xor
cmps
lods
push
(bad)
les
cmp
not
sub
add
movs
sbb
xchg
jns
push
xchg
loope
imul
jbe
xchg
cs
in
sahf
ss
cmp
popa
adc
cmp
je
fistp
xor
enter
dec
sbb
iret
ds
(bad)
test
push
add
shr
xchg
fmulp
dec
push
add
jmp
push
cdq
fld
pop
jg
or
les
jb
sub
call
sub
popa
in
adc
loopne
push
push
xlat
or
jecxz
lods
cmc
add
cmp
stc
mov
push
jge
shl
pop
movs
pusha
mov
and
ja
das
retf
mov
jmp
push
je
pop
mov
jbe
push
fs
and
sar
push
ret
arpl
iret
lahf
mov
std
mov
test
test
cmp
add
dec
ret
js
call
js
imul
fisubr
test
push
adc
fldcw
jno
imul
pop
add
inc
stc
fucompp
daa
push
mov
jmp
push
xchg
pop
repz
push
xor
xor
es
cmps
in
mov
pop
shr
inc
mov
lods
dec
pusha
arpl
pop
xor
push
mov
scas
aaa
or
cmp
lea
rcr
sub
add
sbb
add
idiv
mov
or
sub
pusha
loopne
pop
push
and
pop
pop
pop
jns
pop
out
push
sbb
push
fstp
(bad)
iret
cmp
fisubr
xor
push
xchg
pop
popa
xchg
daa
lods
rcr
nop
into
dec
out
(bad)
inc
mov
dec
mov
bound
sub
fadd
cdq
enter
(bad)
sbb
repz
jne
inc
mov
mov
test
xchg
jo
xchg
(bad)
xchg
mov
fucom
cmp
xor
bound
jbe
test
mov
repz
sbb
jecxz
cmp
mov
add
lea
push
cmp
or
out
jmp
fimul
sub
pop
loope
inc
ins
adc
jmp
or
mov
fnsave
clc
daa
sub
jmp
push
hlt
call
es
and
stos
(bad)
jae
jle
jp
movs
lock
stc
ss
shl
stos
cmp
or
sub
cmp
xchg
dec
jge
fdivr
ror
(bad)
aaa
add
dec
pop
jle
mov
mov
mov
mov
mov
cmps
pop
jb
pop
int
add
sbb
mov
xchg
push
dec
test
mov
pop
bound
dec
sub
add
stos
pop
push
rcr
retf
(bad)
mov
pop
jae
mov
add
pop
movs
push
pop
mov
dec
sub
sbb
xor
ins
shl
aaa
out
push
dec
das
js
cmc
sbb
cmp
add
bound
fcmove
aam
stc
bound
jg
js
shr
shr
fbld
repnz
add
adc
jmp
pop
xchg
pop
sar
jge
mov
jg
out
pop
repz
out
jne
dec
das
dec
shl
bound
dec
in
push
xor
stos
adc
dec
loopne
movs
mov
mov
sar
fdiv
stos
dec
push
or
in
xor
mov
inc
das
and
sbb
adc
jo
adc
sub
test
mov
jmp
jl
inc
sub
jae
leave
ins
jbe
lds
cwde
pop
mov
das
dec
mov
cdq
addr16
xchg
out
in
mov
and
add
dec
pushf
xor
retf
xchg
adc
rcr
outs
mov
out
xchg
sub
das
add
(bad)
ss
call
dec
or
pushf
mov
sub
cmc
lea
(bad)
ss
jnp
call
in
or
adc
(bad)
stos
mov
(bad)
jmp
or
dec
int3
dec
adc
fnstcw
xlat
jge
or
into
mov
cwde
vhsubps
and
movs
sbb
nop
ret
add
push
xor
jns
cmp
ss
inc
push
push
adc
xor
loope
movs
dec
out
push
xor
(bad)
jg
lock
or
out
xor
jno
push
mov
pop
scas
mov
sub
bound
aad
int3
rcl
push
mov
sub
stc
and
mov
cdq
mov
push
movs
pop
xor
add
adc
neg
xchg
out
fs
lods
push
sti
inc
ror
hlt
loop
adc
cwde
and
ja
mov
mov
cmps
pop
arpl
xor
ud1
push
add
cld
je
and
ins
cs
inc
loope
jae
pop
push
jns
jp
push
pushf
push
mov
pop
xor
pop
mov
xchg
xchg
inc
repz
adc
lock
push
inc
or
gs
sbb
jmp
push
aad
jbe
je
ss
fld
(bad)
imul
mov
call
imul
inc
sbb
aaa
fistp
mov
sti
icebp
push
jge
add
mov
test
or
mov
rcr
repz
mov
sub
push
fwait
mov
idiv
out
or
push
mul
and
mov
cmc
leave
add
out
aad
out
pop
icebp
lods
mov
push
popf
mov
add
jp
dec
or
cld
jmp
add
arpl
sete
push
in
arpl
jge
mov
loope
adc
pop
popf
or
int3
sub
add
aas
jle
movs
fisub
jmp
enter
loop
call
fld
mov
xchg
aam
add
lds
inc
jmp
mov
(bad)
cmc
cmps
pop
mov
jle
add
aam
xchg
jecxz
sbb
mov
call
or
mov
xchg
sbb
cmp
int3
mov
dec
sub
pop
and
xchg
and
push
mov
ret
in
xor
add
dec
popa
ret
adc
movs
add
shl
cmp
std
jno
(bad)
dec
jo
mov
fs
les
jns
add
pop
scas
mov
cmp
fld
out
pop
aad
out
inc
push
pop
hlt
mov
ins
adc
test
data16
pop
mov
cmp
sub
push
pop
retf
ss
(bad)
push
xchg
adc
mov
loop
cdq
mov
repnz
mov
xchg
hlt
out
stos
pop
sahf
or
inc
inc
push
mov
add
fs
mov
sub
ret
ja
push
sbb
imul
dec
mov
enter
jmp
xchg
adc
sbb
xor
jle
in
sbb
jmp
lods
pop
mov
gs
sub
sbb
sub
mov
sub
fbld
test
test
hlt
neg
lea
rol
test
cs
add
or
icebp
jbe
jo
(bad)
ret
cld
jle
es
push
push
sub
pop
or
test
xchg
call
sub
or
rcr
(bad)
xor
scas
arpl
shr
in
sbb
test
xor
repnz
cs
fdiv
nop
mov
and
icebp
movs
pop
xor
pop
xlat
push
enter
and
cmp
pop
mov
sub
and
xor
scas
aas
adc
sbb
je
in
jge
cmp
movs
stos
out
mov
in
inc
repnz
icebp
mov
jl
pop
sbb
es
jns
sbb
push
sti
mov
dec
fs
pop
ja
or
adc
mov
pusha
dec
xchg
data16
mov
jbe
add
sub
mov
sub
xchg
aam
dec
loope
inc
(bad)
lea
push
or
ins
pop
out
dec
adc
ret
add
cmp
ret
pop
mov
inc
cs
gs
cmp
mov
inc
add
mov
cmc
cdq
movs
dec
je
aas
sbb
call
pop
mov
cs
push
mov
cmc
cmp
jecxz
sti
sbb
jp
pop
or
jmp
cmp
push
loop
dec
dec
arpl
pop
dec
stc
ja
pop
nop
or
mov
xor
icebp
or
popf
test
xor
mov
add
sti
pop
mov
aad
cmps
aad
push
sub
sbb
loopne
in
int
push
pop
jecxz
ret
(bad)
das
fidiv
leave
enter
xlat
fldenv
js
mov
jmp
(bad)
xchg
jle
jne
bound
cmp
sbb
stc
and
xlat
mov
mov
pusha
fcom
jmp
add
xlat
cmc
add
or
xchg
test
xor
loop
lods
or
pushf
xchg
sbb
mov
xchg
(bad)
dec
fmul
ins
cmp
add
dec
pmullw
xchg
outs
(bad)
mov
mov
or
pop
in
rcl
pop
mov
add
gs
fmulp
adc
cmp
push
inc
repnz
dec
push
mov
mov
out
lods
mov
xchg
bnd
fwait
arpl
xchg
in
js
cmp
mov
pop
jmp
pop
and
xchg
sti
push
jecxz
jmp
xor
adc
dec
or
stos
sbb
data16
iret
dec
xchg
or
inc
mov
scas
xchg
or
sub
jl
sub
and
cmp
jg
repnz
and
pop
popf
mov
push
xor
jns
adc
cmp
sub
mov
clc
dec
xchg
jb
hlt
stos
addr16
shrd
out
inc
mov
adc
fmul
jl
cmp
out
aad
mov
cmc
je
fs
mov
ds
dec
pop
or
ret
push
icebp
scas
out
push
push
popf
and
ins
arpl
lods
stos
push
pop
sbb
cmps
mov
fstsw
shl
call
lea
add
mov
popf
jg
sar
mov
add
daa
mov
out
fstp
sbb
mov
out
mov
ret
xlat
pop
or
retf
jge
mov
scas
fimul
shr
test
pop
pop
es
loopne
add
sbb
cmp
in
and
pop
fadd
cmp
stos
ins
cmp
cli
or
adc
cli
dec
add
inc
jecxz
arpl
fcom
pop
xor
loop
cmp
inc
dec
cdq
cmps
jmp
xchg
in
pusha
sbb
(bad)
add
stos
div
add
mov
frstor
cmc
sbb
sub
and
xor
in
in
icebp
add
cmp
xchg
enter
mov
xchg
rol
dec
xchg
repnz
loopne
push
movs
nop
inc
xchg
jno
and
cdq
shl
adc
in
lods
icebp
enter
or
push
cmc
loop
aad
mov
jnp
push
(bad)
hlt
push
push
fisub
mov
enter
cmp
or
cmc
aam
pop
adc
mov
ja
loopne
mov
iret
and
mov
sahf
scas
and
adc
mov
xor
pop
nop
sahf
imul
fisub
jmp
cmps
movs
mov
adc
(bad)
cdq
xchg
stos
inc
dec
cmp
in
xor
pop
ja
inc
adc
loope
fsubr
rcr
pop
inc
inc
push
mov
sub
dec
pop
fucomp
out
and
stos
cwde
inc
mov
pop
adc
inc
push
test
imul
in
fstp
aas
dec
sbb
cmp
mov
repz
and
(bad)
push
fisttp
sar
dec
lahf
adc
cld
es
xor
ret
inc
ss
cmp
outs
inc
ret
lods
pop
std
jns
jbe
sub
push
repz
push
lods
neg
retf
sbb
call
add
adc
or
sbb
xchg
loop
arpl
mov
adc
cmp
cmp
or
mov
repnz
and
imul
fidivr
stos
(bad)
aam
out
mov
add
sbb
jbe
stos
outs
ror
jns
jecxz
inc
mov
ret
push
repz
ficomp
mov
push
div
rcr
inc
bound
cmps
inc
popf
pop
pop
sbb
(bad)
jne
mov
jg
mov
daa
dec
xor
jge
out
mov
(bad)
ja
sub
mov
inc
sbb
mov
lds
ins
mov
push
lahf
fidivr
aam
dec
cmp
int
cli
jle
cwde
add
std
xlat
je
aam
dec
jae
rcl
leave
lods
in
pop
pop
popa
adc
add
es
adc
out
or
pop
sub
xlat
sub
jp
in
xchg
add
push
xchg
xor
(bad)
jmp
push
push
jl
out
mov
div
dec
jg
std
xor
outs
inc
popf
xchg
pop
loope
or
mov
outs
test
out
test
imul
inc
inc
or
inc
seto
push
xchg
dec
cmp
je
mov
call
xlat
ror
xor
fsubr
mov
mov
inc
enter
retf
pop
stos
cli
data16
push
(bad)
adc
jge
out
push
add
sbb
or
push
xlat
push
in
jno
icebp
icebp
outs
nop
sbb
push
sbb
js
test
fwait
mov
pop
and
or
push
js
pop
push
mov
fs
in
sbb
xchg
pop
nop
and
adc
fwait
je
pop
test
add
and
fdiv
in
jb
jg
adc
mov
adc
mov
dec
and
push
and
leave
xor
arpl
add
mov
sahf
mov
repnz
loopne
fnstcw
xchg
adc
out
repnz
push
add
xor
scas
rcr
jne
mov
int3
dec
xor
or
push
int
aas
(bad)
nop
ss
rol
retf
stc
ins
es
fiadd
or
popf
and
mov
fwait
mov
iret
dec
mov
adc
popa
push
fnsave
push
and
ficomp
mov
sbb
jl
scas
inc
aad
mov
dec
js
fucomip
loopne
pusha
jnp
cmp
pop
pop
aam
cmp
push
(bad)
and
test
(bad)
(bad)
jg
and
repnz
lahf
mov
cmps
mov
fwait
clc
push
in
or
(bad)
loopne
dec
xchg
or
sub
je
cmp
dec
mov
xchg
mov
sbb
or
dec
cmps
push
mov
nop
add
dec
pusha
jp
fimul
push
xchg
mov
sahf
mov
out
outs
push
cmps
and
dec
es
retf
push
fisttp
rcr
ror
sti
dec
mov
jge
pusha
aam
dec
aas
push
push
cmp
xchg
push
xchg
aad
xchg
mov
int
jns
icebp
push
push
and
nop
mov
cmps
in
loope
loope
jne
mov
adc
push
iret
lods
je
cli
test
cs
fisttp
test
call
pop
add
dec
out
jge
pop
test
pop
pop
rcl
or
or
mov
fs
rol
sbb
mov
mov
mov
dec
xchg
lods
paddsb
pop
not
adc
fild
enter
sub
mov
cli
data16
cld
dec
jp
mov
jl
jp
push
jno
pop
mov
xchg
cmova
daa
test
mov
neg
jno
sbb
sub
jmp
add
jnp
ror
mov
scas
inc
(bad)
inc
ja
jge
xchg
fcomp
sbb
pop
(bad)
int3
xor
mov
adc
sbb
jmp
stos
or
out
jnp
jge
sbb
pop
call
fidivr
push
xor
pusha
jge
xchg
add
sbb
mov
add
ret
sub
daa
fldlg2
push
rcl
lds
ficom
loope
sbb
lock
and
in
arpl
sbb
pop
or
cmp
js
adc
scas
pop
mov
ins
mov
and
mov
jo
int
in
pop
mov
popa
idiv
(bad)
mov
lods
sbb
test
inc
adc
fidiv
dec
mov
and
lods
and
pusha
cmp
add
pop
xlat
jmp
jae
cmc
(bad)
jle
add
add
outs
mov
cmp
and
rcl
call
ss
lods
test
repz
shl
enter
fxch
xor
shl
pop
inc
pop
arpl
xor
das
push
shr
dec
jp
inc
dec
cld
pop
inc
push
push
mov
adc
fimul
aad
shl
and
mov
das
loope
xor
pop
jmp
sahf
not
jns
add
push
add
(bad)
popf
fnstcw
add
pop
sbb
xchg
(bad)
push
lods
jns
sbb
mov
into
pop
call
ja
mov
(bad)
pop
xor
in
adc
dec
ret
or
xor
mov
or
adc
inc
lea
or
pop
sti
stc
cmc
mov
adc
daa
adc
sub
push
aam
jl
xor
push
mov
jmp
mov
in
jo
into
jl
stos
aas
xchg
pop
sub
dec
test
fisub
jnp
int3
int
call
test
add
popf
scas
aad
scas
ret
mov
jno
out
mov
xchg
jl
pop
cwde
int
loopne
cmc
rcl
xchg
jne
aad
inc
pushf
repz
sahf
daa
cs
push
loop
icebp
jle
mov
test
rep
or
fsubrp
push
mov
es
jbe
inc
popf
sbb
nop
shr
mov
cmps
xchg
outs
int
xchg
sub
test
mov
int
or
jge
test
fst
dec
adc
cdq
sub
int
sub
movs
rol
adc
int
test
pop
enter
sub
pop
mov
push
outs
pop
(bad)
dec
imul
enter
(bad)
into
and
jg
jne
inc
aam
lods
ds
mov
and
push
jmp
sahf
popf
ins
loop
aaa
adc
retf
xor
dec
add
push
daa
js
fistp
and
mov
or
pop
mov
adc
sahf
mov
in
add
shl
out
jo
stos
adc
jg
fdivr
mov
popa
inc
imul
mov
repnz
push
fild
std
xchg
mov
push
or
adc
push
or
lds
mov
cmps
dec
jns
std
mov
stos
or
loope
add
push
ss
mov
test
inc
inc
pushf
pushf
cwde
lock
xchg
mov
pop
mov
mov
pop
xor
dec
fst
xchg
jne
add
mov
fsubr
test
gs
fs
pop
jae
jb
mov
icebp
fst
add
cmp
rcr
add
sbb
cmp
or
scas
or
aam
and
cmp
mov
xchg
fnstcw
(bad)
retf
in
lods
dec
pop
cdq
inc
outs
imul
mov
xor
not
or
dec
push
popa
or
call
mov
mov
mov
push
push
movs
in
sbb
rol
es
mov
shl
bound
cmc
xor
fsub
cmp
xor
nop
xchg
sbb
xchg
ss
fsubr
xchg
sub
rcl
sub
xchg
je
or
test
fdiv
push
(bad)
push
mov
mov
cmp
or
xchg
and
push
ins
out
(bad)
push
out
pop
jg
ror
mov
test
add
sub
xchg
ret
loopne
mov
inc
add
(bad)
jnp
pop
bound
mov
xchg
jns
pushf
addr16
or
enter
aas
ds
scas
add
ret
cmp
and
mov
rcr
sub
lea
retf
pop
(bad)
fimul
aam
push
xchg
loope
pushf
xchg
jno
pextrw
add
shl
outs
cmp
neg
pop
mov
loopne
sub
mov
pop
movs
leave
mov
(bad)
stos
jle
fs
push
dec
aam
pop
idiv
je
pop
add
sbb
push
imul
jge
cs
dec
fucom
or
lahf
inc
je
js
push
sti
cld
and
mov
gs
jne
mov
pop
pushf
fldl2e
and
mov
xchg
mov
xchg
mov
lods
sbb
mov
add
neg
mov
(bad)
xchg
mov
mov
pop
cmp
sub
dec
add
mov
add
fstp
jg
ins
(bad)
cmp
or
inc
outs
loopne
xlat
dec
xchg
jl
sub
jle
inc
cmc
cmp
out
pop
(bad)
or
jp
mov
ret
dec
jmp
push
xchg
jo
and
sbb
fcom
xor
mov
add
add
jbe
xchg
pop
test
jl
sbb
loope
jns
mov
leave
xchg
and
xlat
push
mov
retf
mov
adc
lods
pop
mov
jg
dec
mov
cmp
and
jne
mov
add
lea
mov
aad
adc
sbb
and
fnstsw
test
sahf
cli
sbb
jne
scas
scas
test
xchg
(bad)
push
scas
add
leave
mov
jle
ins
lods
xor
pop
scas
inc
xor
aad
repnz
cmps
jecxz
mov
ret
movs
adc
cli
loope
or
add
cwde
icebp
lahf
cmps
rcr
adc
adc
dec
lea
sbb
cmp
popf
clc
mov
and
or
stos
(bad)
(bad)
aad
inc
inc
or
jle
xor
(bad)
mov
and
sbb
dec
test
data16
pop
mov
cmps
cli
push
movs
push
scas
mov
sahf
fiadd
mov
pop
mov
xor
jp
fwait
pop
mov
add
sahf
pushf
adc
imul
iret
add
jg
inc
jbe
mov
(bad)
or
dec
add
test
pop
ins
stos
pop
int3
ret
inc
or
sub
ret
dec
stos
mov
(bad)
into
inc
imul
out
lsl
sahf
pop
imul
psrad
and
xchg
gs
ret
jae
cmp
sbb
ins
rcl
int
js
cdq
popa
mov
ss
xor
call
mov
out
mov
ins
push
retf
adc
mov
clc
pop
std
mov
and
sysexit
jo
(bad)
aad
xor
dec
retf
xchg
xchg
rcr
dec
mov
jae
add
mov
pushf
push
push
cli
fbstp
(bad)
popa
dec
mov
iret
and
in
dec
push
xor
jnp
add
int
imul
test
push
test
xchg
aas
inc
icebp
push
imul
jns
pop
inc
ret
mov
mov
out
push
enter
outs
push
sub
in
jb
or
mov
loope
mov
xchg
shl
add
pop
or
jmp
mov
add
out
mov
ret
ss
das
ins
and
ins
stos
in
mov
jne
xchg
dec
or
adc
mov
cmps
adc
inc
or
mov
mov
adc
cli
push
scas
or
cmp
xchg
aad
xor
in
jle
sub
add
sub
aaa
cmp
sahf
mov
mov
xchg
and
jbe
mov
mov
xchg
enter
outs
out
daa
nop
jle
xchg
ficom
xchg
es
rol
cmp
ret
enter
mov
adc
inc
scas
adc
mov
mov
pop
ins
xlat
mov
adc
add
dec
leave
and
loope
cmp
push
push
(bad)
pop
nop
mov
out
inc
mov
fld
outs
xchg
je
inc
rcl
cmp
outs
jp
jbe
cmp
jecxz
xor
xchg
arpl
mov
mov
xor
or
cmp
pusha
dec
lods
xchg
in
jno
push
(bad)
icebp
in
fstp
dec
scas
mov
retf
mov
mov
xchg
clc
mov
xchg
jle
jno
mov
xchg
aas
(bad)
lea
jns
loopne
and
mov
pushf
loopne
adc
inc
fld
inc
jne
xchg
(bad)
cmc
mov
fild
or
xchg
adc
sar
mov
mov
pop
push
(bad)
retf
out
fnstenv
cmp
pop
adc
cmp
sub
inc
add
xchg
add
pushf
mov
ins
push
lods
loop
das
(bad)
push
cli
test
ret
ret
out
jp
xchg
mov
int3
(bad)
add
mov
out
iret
arpl
mov
lods
mov
jecxz
imul
or
jo
mov
outs
pusha
and
outs
retf
mov
push
cmp
jmp
aam
movs
sbb
mov
pop
out
call
xchg
int3
out
inc
push
pop
and
xor
cmps
(bad)
pop
pop
stos
and
adc
das
ja
cld
iret
dec
rol
mov
mov
ins
lods
or
xor
push
mov
ins
fsubrp
in
cmp
test
dec
or
lahf
or
cmc
cs
jge
shr
(bad)
in
cmp
mov
test
(bad)
lds
ins
push
add
shl
daa
dec
imul
pop
or
icebp
dec
(bad)
in
(bad)
out
cmps
pop
cmps
out
pop
cmp
loope
arpl
mov
cmp
xchg
inc
dec
adc
mov
xchg
dec
jmp
pop
mov
mov
sub
(bad)
pop
jne
rcl
mov
fsub
loop
inc
outs
mov
add
xchg
inc
lock
daa
xor
pop
inc
add
addr16
adc
mov
pop
cdq
mov
mov
jnp
out
inc
adc
fs
fnstcw
push
lock
sub
call
scas
cli
adc
pushf
mov
shl
loopne
cmp
jne
iret
and
add
xor
cmp
cdq
mov
mov
push
retf
pushf
stos
jo
jmp
aaa
repnz
mov
mov
mov
sar
(bad)
xor
and
leave
push
nop
inc
mov
aas
adc
pop
cdq
fcomi
into
std
push
outs
aas
add
dec
dec
aam
push
or
add
pop
dec
(bad)
loopne
aam
push
in
cs
jecxz
mov
xor
mov
xchg
mov
xchg
data16
test
fisttp
call
jnp
or
in
push
sbb
lds
xor
xor
adc
push
push
arpl
mov
sub
test
sbb
lods
mov
push
movs
xchg
and
cdq
out
pop
in
fild
pop
lock
pop
mov
xchg
int3
sbb
loopne
pop
adc
push
xchg
int3
push
sub
out
movs
add
sbb
xchg
cdq
in
adc
fsub
xor
in
inc
xchg
inc
bound
lea
mov
inc
repz
pop
and
add
sbb
mov
call
out
pop
or
mov
mov
mov
mov
je
lods
mov
inc
neg
xor
into
xchg
add
imul
(bad)
sub
cmp
test
adc
xchg
dec
push
lea
gs
push
or
bound
imul
cmps
ret
das
mov
les
leave
jle
adc
or
fnsave
aaa
add
jns
hlt
scas
shl
mov
jmp
scas
xor
sub
push
cmp
and
out
dec
xchg
sbb
(bad)
div
or
aad
inc
pop
mov
mov
outs
leave
push
(bad)
xlat
inc
fnstsw
and
out
sbb
call
outs
cwde
and
pop
xchg
in
sbb
lds
jne
rcr
jns
dec
jno
data16
outs
cmp
dec
xchg
pop
pop
es
dec
jg
addr16
addr16
pop
jmp
adc
mov
mov
xchg
sbb
lds
pop
mov
or
add
test
in
mov
jmp
mov
mov
xchg
mov
pop
push
inc
mov
xor
xchg
int3
adc
adc
hlt
sub
jbe
sbb
jbe
push
retf
mov
imul
jl
dec
data16
mov
enter
ror
adc
loopne
mov
xchg
sahf
jl
mov
adc
(bad)
pop
js
ins
stos
loopne
push
mov
or
mov
pop
cmp
xchg
and
mov
aaa
dec
inc
sbb
and
popa
mov
sti
icebp
lods
sub
push
out
inc
add
cmp
mov
in
cmp
dec
pop
mov
ds
daa
pop
stos
test
mov
mov
cmp
mov
jbe
fsubr
xchg
cmp
out
bound
test
stos
xchg
and
push
iret
repnz
jecxz
push
xlat
iret
mov
mov
adc
retf
pop
sub
aad
sbb
stc
lahf
mov
xor
je
xor
mov
xor
pop
mov
inc
das
xchg
inc
daa
(bad)
push
xchg
xchg
push
pop
cwde
daa
ins
cdq
je
pop
inc
cmp
in
in
dec
fbld
adc
stc
fild
jp
addr16
out
jo
xor
aad
push
cli
rol
or
mov
leave
mov
int3
loope
in
(bad)
xor
sbb
push
int3
xchg
inc
clc
ret
push
push
add
outs
bound
or
sbb
(bad)
and
pusha
mov
xor
stos
aaa
loop
adc
pop
rcl
shr
pop
jl
mov
dec
mov
gs
outs
out
push
adc
outs
push
les
jmp
cmp
out
mov
cs
jmp
and
lock
mov
cmc
cdq
inc
cmp
push
sbb
arpl
fidivr
fadd
popa
dec
pop
(bad)
je
xor
mov
shr
and
mov
jne
xor
out
jle
cmps
imul
ror
scas
leave
lods
push
jmp
cli
inc
pop
lock
xchg
rcr
pop
and
stos
rcr
(bad)
dec
outs
scas
lahf
cmp
xor
lds
jle
xchg
mov
test
dec
add
or
push
rol
loopne
adc
inc
cmps
jb
mov
mov
in
neg
add
je
in
push
gs
jmp
mov
jnp
in
or
and
cmp
mov
fidiv
cmp
lahf
inc
inc
call
ret
mov
(bad)
and
(bad)
jns
jns
sti
test
dec
jae
fcmovnb
jmp
sti
cmc
or
sub
dec
pusha
gs
out
push
adc
xor
mov
(bad)
mov
mov
push
sub
jmp
pop
(bad)
xor
in
(bad)
loopne
cmp
cli
cs
push
xor
movs
push
mov
scas
xchg
mov
das
ret
jg
adc
dec
xor
or
int
push
movs
xor
aam
dec
sar
jne
add
enter
xchg
cdq
imul
jmp
rcl
pause
inc
push
int
in
sub
mov
cmp
jecxz
std
mov
xchg
mov
mov
(bad)
mov
jo
push
fisub
or
mov
pause
outs
mov
adc
push
jp
ins
cs
adc
mov
jno
ds
iret
bound
cld
push
call
and
add
je
jmp
ds
dec
mov
jne
push
retf
jne
cwde
jmp
je
popf
ins
xchg
out
mov
sub
jmp
xor
scas
pop
inc
mov
scas
pop
mov
adc
inc
xor
cmps
add
mov
mul
in
stc
jo
xchg
pop
loop
pop
inc
fld
sbb
mov
xor
mov
add
jb
dec
dec
hlt
rol
retf
lahf
leave
test
out
fwait
push
inc
adc
sbb
stos
pop
iret
aaa
pop
in
inc
jmp
mov
rcr
inc
sub
repz
mov
aaa
push
pop
push
sub
adc
pop
xchg
repnz
bound
test
cmps
push
pop
test
dec
lds
cld
stos
xchg
mov
movs
jmp
ins
fwait
or
loop
je
push
sbb
rcl
bound
mov
cmps
gs
idiv
adc
sbb
mov
in
push
iret
pop
sbb
mov
int
pop
sbb
push
out
into
or
(bad)
and
mov
les
inc
(bad)
test
(bad)
mov
and
push
test
out
adc
fadd
cmc
dec
mov
popf
retf
les
into
arpl
in
or
push
add
mov
ins
cmp
(bad)
jb
and
sbb
jl
lea
jge
fstp
lea
xor
daa
fs
cmp
and
xor
push
mov
(bad)
pushaw
cld
sub
push
imul
imul
xchg
adc
mov
sbb
test
mov
jmp
(bad)
jge
retf
sbb
fist
popa
fwait
pushf
cli
pop
mov
cmps
jecxz
pop
outs
cmp
push
xchg
ror
sub
ret
cmp
pusha
or
test
int
add
ret
push
mov
or
fmul
mov
mov
cmp
mov
mov
ret
and
iret
mov
test
rcl
repz
call
lock
sbb
je
rcr
imul
sar
aam
ret
or
ss
pop
jbe
cs
mov
and
pop
(bad)
mov
xchg
dec
into
fiadd
jae
sbb
add
mov
test
and
push
cmp
hlt
jnp
jno
dec
cmp
(bad)
test
cmp
sbb
xor
mov
xor
ja
mov
and
imul
retf
lea
outs
jmp
dec
jmp
and
add
jl
or
jg
into
dec
adc
push
mov
(bad)
rcr
ds
fs
mov
xchg
cdq
or
or
adc
loope
sbb
mov
dec
or
xchg
jge
lods
push
int
sbb
fldenv
mov
icebp
stc
icebp
daa
push
mov
cmp
cmps
out
aaa
and
aam
cli
scas
add
loop
and
hlt
jp
dec
leave
loop
add
and
std
stos
imul
and
push
push
leave
div
and
in
fstp
shl
xchg
dec
xchg
sub
movs
stc
xor
icebp
mov
cmp
in
and
pop
rcr
mov
outs
pop
xchg
aad
adc
daa
popf
scas
iret
dec
add
adc
mov
jbe
mov
mov
jae
fs
sub
das
xlat
emms
xor
mov
cmp
fldenv
sti
cmp
mov
adc
xlat
jmp
cmp
push
sub
adc
syscall
fucompp
mov
aad
mov
addr16
cmp
xlat
dec
pusha
mov
cmp
cmp
mov
sub
stos
sbb
fucom
pop
sahf
test
ins
pushf
(bad)
xchg
mov
iret
xor
jae
cmp
fidiv
mov
retf
xor
ret
xor
stc
pop
test
xchg
lahf
fnstcw
mov
ja
cmc
mov
pop
dec
shl
in
and
test
pusha
repz
ret
xchg
arpl
mov
outs
stos
mov
lds
(bad)
xor
inc
loope
cs
push
sbb
fldcw
movs
loop
cmp
xchg
and
loop
mov
and
mov
bound
movs
adc
cli
lea
stc
cld
push
pop
retf
pop
fnsave
mov
cld
dec
xor
and
jno
out
mov
addr16
fs
add
sub
jmp
pop
jno
push
mov
mul
into
stc
pop
lds
ins
lahf
dec
jb
enter
cmp
ficom
pop
adc
nop
dec
push
jmp
retf
jl
(bad)
xor
data16
test
dec
xor
pop
and
scas
sbb
mov
xlat
pop
mov
jp
push
mov
mov
push
shl
lds
jno
push
call
or
stos
xlat
mov
pop
mov
je
xlat
mov
pop
dec
sub
call
loope
jo
(bad)
call
imul
outs
fiadd
(bad)
fcmove
sar
pop
cmp
inc
cld
jp
push
and
push
sbb
add
es
cli
inc
(bad)
in
adc
(bad)
fcom
hlt
cmp
js
xor
sbb
mov
daa
repz
stc
push
imul
jg
(bad)
data16
xchg
ror
je
add
cdq
jl
dec
xor
mov
pop
jecxz
ins
mov
add
lahf
ret
lock
and
sbb
sub
neg
mov
pop
rcl
ret
lods
jmp
pop
(bad)
inc
ins
or
mov
out
push
xchg
adc
movs
cdq
sbb
jge
jg
inc
imul
push
sti
in
pop
mov
dec
in
ret
push
rcl
jmp
dec
mov
or
out
pop
test
jne
in
idiv
adc
stos
leave
xor
sbb
xor
sti
mov
jo
adc
dec
(bad)
cdq
imul
cmp
mov
fnstsw
jle
fistp
mov
and
add
ins
cmp
movs
sbb
jno
in
mov
pop
ret
sub
inc
inc
xor
fcmovne
inc
repnz
sahf
xor
xor
add
test
stc
test
lods
xchg
pop
int
(bad)
lock
and
jne
add
push
aad
movs
(bad)
sub
dec
xchg
lock
std
inc
in
push
mov
add
push
sub
jno
mov
dec
(bad)
xor
cmps
sub
ds
adc
jecxz
inc
fimul
pop
cmps
and
(bad)
cmp
and
xchg
inc
cwde
jnp
cmp
pop
jmp
xor
mov
mov
daa
div
mov
mov
pop
dec
sub
test
push
(bad)
in
sar
add
les
sub
sti
popf
or
cli
loop
fs
cmc
mov
inc
sub
fidivr
imul
add
sti
push
pop
inc
cmp
push
mov
jmp
lock
aas
xor
outs
in
cmp
rcl
xchg
(bad)
pop
dec
jge
in
sub
sbb
call
dec
push
adc
je
fiadd
jge
mov
jo
int3
lea
adc
mov
add
mov
pop
xchg
jmp
ins
arpl
and
push
shl
clc
jmp
imul
sbb
out
dec
pop
out
or
add
sub
cmc
cmp
xchg
cmps
sub
cmps
xor
call
cmp
mov
stos
repnz
and
test
jno
mov
jmp
inc
cmc
dec
(bad)
call
adc
mov
mov
cmc
jg
test
je
jl
popa
ja
cld
ss
jmp
nop
out
sbb
pop
adc
sahf
mov
cmc
sahf
in
dec
adc
sbb
int
cmp
and
not
mov
loope
loop
pop
pop
dec
inc
cmp
into
lods
cmp
and
sub
and
inc
sbb
pop
xor
or
jno
retf
loopne
mov
cmps
sub
xor
(bad)
std
dec
xor
mov
movs
call
jb
scas
mov
inc
cli
rol
pop
(bad)
jg
ins
cmps
dec
das
retf
cmp
call
lahf
adc
in
pop
and
jne
sub
out
int3
lods
dec
mov
jl
mov
dec
in
shl
xor
loop
adc
ins
ficom
scas
sub
je
inc
fwait
es
into
sar
fsubp
xor
ins
jne
es
movs
rol
sub
iret
popa
xor
jl
test
pushf
push
or
aaa
and
addr16
sub
retf
or
sub
in
xchg
aad
cmps
and
sbb
out
imul
sti
inc
pop
(bad)
dec
lods
inc
mov
into
fisttp
add
mov
push
cmp
dec
cmp
imul
inc
inc
dec
fdiv
fs
and
add
lock
sub
pushf
mov
mov
push
imul
add
sbb
push
adc
shr
lds
lods
jmp
rcl
mov
fbstp
loop
inc
lods
mov
xchg
xchg
jns
cdq
dec
push
cmc
movups
xor
ins
sbb
test
ret
fistp
add
xchg
pop
test
dec
pop
mov
jmp
div
pusha
ret
sti
sub
aas
and
mov
mov
dec
and
xchg
(bad)
mov
aad
pop
das
inc
lea
mov
aam
xchg
ret
pusha
inc
push
or
ficom
jns
shl
call
(bad)
aam
adc
cli
test
push
push
mov
push
lock
out
jle
scas
inc
inc
pop
sbb
int
outs
sbb
add
add
daa
rcl
cmp
fst
addr16
imul
jbe
clc
dec
add
mov
jno
xor
fs
cmps
lock
test
lock
outs
mov
pop
lahf
push
hlt
or
dec
and
mov
iret
push
sbb
sub
loope
and
(bad)
fnstsw
inc
mov
add
push
jbe
and
add
outs
pop
mov
icebp
jne
dec
clc
adc
xor
adc
out
je
loope
inc
adc
xchg
dec
or
iret
cmp
rcr
mov
leave
lock
icebp
sub
mov
lods
fistp
outs
fisttp
jle
or
pop
mov
pop
sbb
iret
out
arpl
in
jp
lods
lahf
jbe
jle
stos
sub
push
loopne
mov
mov
inc
pop
inc
xchg
push
das
sub
popf
add
push
dec
adc
sub
aaa
sar
mov
rcl
mov
mov
and
jl
mov
retf
repnz
(bad)
data16
cwde
cmp
sub
(bad)
mov
add
pop
cli
cmp
jno
adc
daa
sti
test
jge
inc
mov
jbe
push
dec
retf
cli
pushf
jo
sub
ds
sub
int3
call
(bad)
ins
inc
clc
out
sub
int3
les
test
xchg
and
inc
inc
xchg
in
or
adc
xor
mov
sub
(bad)
leave
push
mov
call
pop
dec
mov
(bad)
mov
jp
test
xor
lods
sub
xchg
fstp
repz
add
xor
mov
inc
cmc
cmp
mov
sub
mov
add
ret
jge
mov
ret
(bad)
cld
cmps
ror
sbb
fbstp
adc
scas
(bad)
inc
into
push
xchg
gs
pushf
bound
int
dec
jge
lock
cdq
sub
xor
fbstp
in
xchg
mov
pop
ret
or
jne
test
fcomp
cmp
sbb
(bad)
cmp
cmps
test
inc
and
pop
fwait
sbb
cmp
sub
inc
psrlq
mov
(bad)
fsub
out
(bad)
push
scas
xchg
xchg
lea
aas
inc
gs
adc
mov
retf
cli
xchg
push
lds
sub
mov
jbe
push
or
test
test
pop
push
aad
inc
mov
jmp
mov
lahf
scas
aad
pop
jae
xchg
xlat
(bad)
mov
lahf
mov
xor
mov
rcr
jnp
xor
test
cmp
cmp
jno
ins
sub
cmp
out
xor
sbb
xor
imul
jbe
loope
push
sub
mov
jno
outs
mov
retf
add
in
fiadd
sub
shr
jb
pop
fwait
inc
(bad)
outs
test
mov
inc
mov
(bad)
js
movs
jmp
ja
mov
and
ret
fucom
pop
call
icebp
sahf
enter
outs
loope
pop
inc
xchg
mov
pop
stos
out
push
sbb
icebp
cwde
mov
push
arpl
cs
cli
ret
ror
(bad)
xor
(bad)
xchg
pop
push
into
adc
jmp
mul
sbb
adc
xchg
(bad)
adc
shl
les
aaa
aad
mov
mov
je
sub
jg
push
add
sub
mov
add
pop
aam
push
xchg
je
shl
hlt
mov
mov
popa
call
xchg
mov
lahf
aaa
mov
or
in
push
fwait
add
mov
add
xchg
mov
repz
push
dec
mov
outs
xor
pushf
push
mov
out
popf
ret
pop
mov
xlat
sbb
push
mov
add
cld
or
(bad)
sub
mov
mov
aad
push
mov
mov
push
cmp
nop
ins
sub
or
push
mov
xchg
movs
sub
xchg
fisub
pop
(bad)
(bad)
and
jns
add
aas
pop
enter
xchg
lea
mov
loopne
ds
xlat
mov
jne
pop
jne
cmp
popa
mov
les
cmps
imul
inc
scas
mov
dec
jo
retf
jb
mov
or
dec
clc
dec
mov
push
inc
imul
inc
or
and
and
mov
and
inc
shr
loope
dec
loopne
aad
scas
or
outs
aam
cmc
sbb
fisttp
imul
js
nop
push
(bad)
xchg
imul
sbb
test
xlat
addr16
pop
push
xchg
sub
inc
inc
xor
and
sbb
in
setg
mov
push
push
ss
hlt
outs
scas
retf
bound
pop
jecxz
pop
fs
leave
dec
lods
lea
out
mov
rol
mov
jge
mul
sub
xchg
ss
mov
pop
push
das
cmps
fs
mov
xor
fs
jl
push
or
ja
pop
jmp
out
cmps
cld
push
ffreep
or
or
jge
out
push
imul
test
mov
sbb
mov
mov
sar
std
push
lea
je
push
out
shl
test
add
clc
cli
push
adc
outs
cmp
and
pop
push
pop
jg
push
adc
cmps
pop
test
ret
mov
ins
mov
or
imul
aad
in
out
add
lock
and
ins
ja
sbb
es
sbb
int
(bad)
mov
fs
arpl
mov
and
out
inc
in
sbb
lock
jp
dec
rcr
or
mov
jnp
push
(bad)
push
inc
cs
adc
pop
mov
pop
push
xlat
fstp
adc
and
nop
loop
out
in
jge
pusha
sbb
add
ins
scas
inc
cmp
ror
xchg
js
fs
sbb
xor
in
inc
leave
pop
imul
ret
inc
popf
mov
cmovg
das
adc
das
and
and
(bad)
data16
push
jo
sar
cwde
cmp
cmp
add
arpl
das
mov
mov
xlat
icebp
retf
stos
push
or
adc
ror
fcmovnbe
mov
lea
sbb
or
outs
ret
outs
(bad)
je
js
jae
fwait
add
(bad)
fcomp
lds
jno
xor
mov
imul
xchg
xor
call
push
dec
es
call
pop
test
outs
or
adc
ins
in
sub
add
fild
push
clc
repz
fidiv
sbb
mov
imul
push
and
outs
pop
outs
pmaddwd
jp
leave
mov
and
sbb
push
in
push
fwait
jmp
cmc
sbb
(bad)
outs
repz
sbb
jp
cli
mov
mov
adc
repnz
ret
(bad)
aaa
shr
xor
mov
idiv
pop
aam
jle
sar
inc
add
out
sub
mov
cmp
(bad)
repz
inc
jmp
mov
jne
cmps
jne
push
adc
inc
mov
ins
dec
pop
sub
mov
xor
je
xchg
cmp
fwait
out
pop
out
sub
les
and
ja
jmp
pop
shl
mov
and
cmp
dec
shl
repz
jmp
sbb
ins
aaa
outs
add
inc
xchg
pop
bound
fidivr
int3
mov
(bad)
mov
push
mov
outs
test
pop
mov
push
clc
idiv
add
adc
mov
outs
dec
and
xor
pop
aaa
jo
xchg
adc
add
lods
xlat
ins
jno
sahf
(bad)
iret
ds
sub
outs
retf
(bad)
cmp
out
mov
(bad)
(bad)
sub
or
fs
mov
mov
and
sub
mov
xchg
fwait
pop
(bad)
push
aaa
adc
push
lahf
jp
adc
clc
lock
retf
pop
ret
mov
fsin
xor
xchg
mov
and
into
sbb
dec
cwde
jp
lock
sbb
lds
les
movs
jns
in
pop
sti
dec
or
test
jecxz
cmp
mov
inc
es
jg
inc
cmps
and
loope
sub
(bad)
xor
stos
pop
ret
jb
sbb
ret
inc
mov
xchg
cmpps
dec
je
or
mov
shl
into
fld
cmps
stc
inc
leave
sub
cwde
arpl
mov
sbb
pop
sbb
mov
ror
push
or
std
dec
lods
test
sub
cmp
fistp
jl
fidivr
add
jno
mov
ficom
movs
xchg
test
imul
fidiv
push
mov
pop
js
mov
dec
xor
pushf
xchg
mov
data16
mov
ret
in
push
iret
sbb
aaa
hlt
and
data16
daa
inc
jbe
xor
int
jmp
and
vdivpd
xor
xchg
mov
lea
and
ret
xchg
js
call
sbb
std
push
pop
jge
jg
pop
pop
sbb
sub
xchg
jle
nop
add
dec
retf
jb
xlat
(bad)
stc
ins
hlt
test
pop
sar
or
push
add
fcom
into
or
mov
ret
sub
pop
dec
inc
mov
out
das
(bad)
jnp
movaps
inc
push
mov
and
fldcw
xor
test
mov
mov
mov
fild
jl
cmps
mov
xchg
loopne
test
cmp
fdivr
pop
(bad)
cwde
div
movs
pop
inc
mov
mov
inc
(bad)
sub
sub
dec
imul
inc
test
xchg
xor
xchg
test
fisub
cli
hlt
imul
adc
add
xchg
or
rcr
and
jno
xchg
mov
sbb
mov
daa
jmp
(bad)
scas
mov
push
out
popa
sbb
(bad)
sbb
add
jbe
cmc
shr
fistp
int
fmul
fld
ja
mov
xor
cmps
mov
adc
test
inc
sbb
push
xchg
sti
ja
adc
cmps
mov
cmc
mov
call
imul
sub
or
sbb
sbb
inc
xor
push
pop
pop
jns
cmp
add
fidivr
adc
int3
sahf
sbb
jge
cmp
cmp
and
(bad)
(bad)
cwde
cli
mov
xchg
pop
call
mov
mov
dec
adc
sahf
adc
add
mov
out
pop
push
loop
and
lahf
xchg
inc
mov
mov
outs
retf
mov
pop
mov
cmp
iret
(bad)
dec
imul
ds
in
mov
pop
dec
sar
das
aad
in
je
push
repz
into
sub
jmp
sub
test
jmp
imul
push
data16
or
xor
sub
mov
mov
cmp
in
add
mov
fnstenv
sbb
jl
fxch
shl
adc
addr16
ret
imul
sub
dec
add
add
mov
or
add
sub
inc
or
in
ret
lods
fdivr
jno
ins
mov
ror
in
cmps
loope
mov
loopne
inc
call
ins
jns
imul
scas
and
mov
sbb
sbb
jno
xlat
cmps
into
inc
mov
pop
es
jp
scas
mov
mov
jns
mov
fstp
add
lar
aam
in
int3
sub
inc
sti
mov
adc
test
iret
out
int
adc
scas
fsub
enter
ins
test
mov
mov
sbb
dec
aam
jecxz
in
jbe
fldenv
(bad)
mov
dec
gs
repnz
sbb
adc
test
adc
(bad)
mov
cmp
jae
xchg
ins
adc
xchg
scas
ins
aad
sbb
dec
cmp
xchg
cmp
stos
call
push
test
xchg
(bad)
std
jg
sub
shl
xchg
push
sub
std
div
ror
dec
cdq
dec
dec
shl
cmp
sub
sbb
jg
hlt
imul
mov
jnp
pop
out
cli
jmp
inc
cmc
stos
movs
fcomp
push
(bad)
popa
inc
hlt
sahf
add
aam
ins
jae
add
sub
mov
jnp
mov
sbb
cwde
les
dec
push
adc
cmps
ret
xchg
xor
cvttps2pi
loopne
jns
jbe
retf
pop
mov
or
in
jne
add
cmp
ja
in
mov
jo
(bad)
sub
jecxz
push
sbb
add
push
jnp
jb
push
adc
test
adc
pop
ja
add
out
adc
sti
test
idiv
sub
mov
lds
sbb
adc
sti
or
data16
sbb
sub
movs
stos
iret
nop
mov
dec
leave
pop
fist
jmp
rcl
mov
adc
sub
xchg
pop
out
jae
xchg
dec
jno
dec
sbb
cmp
inc
jns
enter
jnp
sbb
movs
and
retf
dec
sub
mov
lock
add
cmp
cmp
test
repnz
xchg
lock
xor
cmps
inc
sbb
mov
or
xor
inc
mov
mov
mov
int
xor
dec
idiv
push
and
je
scas
cld
je
ins
xor
inc
mov
or
push
cmps
call
call
pop
or
cmp
xchg
fcom
shr
std
mov
xchg
mov
fwait
or
push
mov
in
pop
xor
ins
mov
pop
dec
fist
mov
xchg
and
aad
xchg
jae
rcr
sub
mov
pop
imul
xchg
and
fwait
pop
push
and
push
(bad)
xor
pop
(bad)
icebp
(bad)
or
cdq
pop
les
fstp
inc
arpl
inc
dec
jb
and
mov
sub
(bad)
mov
loope
sbb
sub
das
and
mov
xchg
mov
icebp
and
add
xchg
xor
(bad)
sti
int
cs
sub
in
in
das
jns
and
pop
dec
ret
out
cmc
cmp
xor
or
leave
add
jb
sbb
sbb
cmc
add
mov
mov
loope
neg
xor
add
cmp
sub
mov
sbb
jmp
ds
sti
das
popa
cmp
add
jp
mov
and
out
fiadd
jbe
or
fldenv
jmp
jae
popa
ins
int3
ja
lods
ret
pusha
mov
inc
sahf
sbb
mov
outs
sbb
adc
push
pusha
xlat
test
ret
pop
cli
adc
fsubr
stc
mov
xchg
clc
js
jnp
sbb
ret
popf
out
mov
add
inc
test
test
xor
pop
pop
sbb
addr16
dec
inc
adc
js
xchg
mov
cmp
push
pop
pop
mov
cmp
add
retf
mov
or
cmp
xchg
aaa
and
imul
mov
xchg
addr16
dec
xchg
mov
or
pop
pop
inc
xchg
fdiv
clc
enter
scas
cmc
push
stc
movs
sub
mov
push
pop
inc
inc
out
nop
mov
adc
dec
ss
and
rcr
int3
out
push
push
retf
or
adc
xor
cmps
xchg
(bad)
pop
imul
cmps
imul
dec
jp
stos
mov
jecxz
mov
mov
outs
loope
cmp
dec
rcl
out
inc
stc
shl
daa
push
call
outs
sub
pop
push
add
mov
pop
inc
cmp
mov
fld
lock
fldenv
jb
stos
or
mov
adc
arpl
jns
jl
sbb
xchg
cld
cli
sti
into
push
xchg
cdq
adc
call
lods
outs
loope
retf
sbb
ret
or
sbb
cmp
inc
pushf
stos
ret
mov
fwait
adc
jnp
add
mov
call
xchg
pop
jae
mov
jo
lods
push
repnz
xor
xchg
jo
lods
xchg
xor
ja
in
inc
add
sbb
jge
je
mov
xchg
jge
push
mov
sbb
cmc
dec
js
xchg
cld
jnp
in
jge
mov
sub
dec
addr16
iret
into
out
movs
fisttp
xchg
and
mov
and
xor
int3
xchg
ret
pusha
and
push
mov
test
loope
bound
ds
call
rcr
loopne
pop
push
rcr
or
lods
loope
mov
nop
cmps
cmps
imul
jno
call
in
cmp
mov
mov
pop
cmp
ss
movs
and
jbe
iret
add
ins
inc
out
inc
fimul
add
fst
in
hlt
xchg
(bad)
push
mov
or
mov
pop
xchg
stc
test
popa
mov
pop
addr16
aas
test
and
xor
mov
cmp
in
cmp
xor
addr16
popf
mov
sub
push
mov
ss
call
mov
into
mov
jnp
jb
aad
xor
int3
push
dec
and
nop
out
call
out
cmps
dec
push
pop
add
clc
sbb
add
repz
cld
xchg
mov
add
jae
pop
repz
test
and
pop
sti
mov
adc
cli
mov
dec
push
or
dec
mov
jbe
pop
or
or
aaa
mov
rol
mov
inc
push
popa
add
scas
pop
shr
sbb
pop
mov
aad
arpl
jns
mov
xchg
xor
iret
xchg
lods
pop
sub
add
loopne
ss
out
push
imul
mov
fisubr
mov
xor
xchg
mov
repz
cli
mov
dec
lea
lods
push
dec
jnp
lods
pusha
fiadd
mov
xchg
xchg
std
add
cmc
aaa
imul
lds
jb
test
test
outs
jb
cwde
mov
push
mov
les
dec
retf
inc
(bad)
mov
int
(bad)
pop
xchg
bound
aad
inc
xchg
adc
loop
cwde
push
jmp
or
in
xchg
pop
loop
adc
stos
xor
adc
mov
mov
fdivr
xchg
cmc
fwait
lahf
push
ss
cmp
fbstp
test
mov
inc
out
test
fild
leave
and
imul
jae
jmp
arpl
pop
bsf
add
lea
pop
push
fisub
icebp
ror
nop
out
cmp
add
daa
mov
fistp
sub
pop
add
mov
xor
xor
shr
cdq
push
or
mov
mov
mov
jle
movs
push
rcl
xchg
sub
lods
jmp
mov
call
mov
dec
jbe
sub
jmp
cs
mov
mov
xchg
mov
test
pop
mov
fistp
stos
pop
fstp
lea
movs
sbb
jns
xchg
icebp
push
jl
adc
xor
push
ret
ins
jmp
ret
retf
lahf
dec
pop
mov
test
jmp
fcmovu
xor
jle
out
sar
bound
mov
sub
ficom
xor
xchg
cwde
or
shl
data16
inc
xchg
hlt
fidivr
js
inc
or
push
fnsave
lock
push
pop
mov
adc
int
mov
cwde
sub
iret
mov
cmp
xchg
xchg
(bad)
xor
gs
lods
std
mov
fst
sar
sbb
inc
push
sahf
sbb
push
xor
(bad)
in
(bad)
mov
jmp
sub
fmul
dec
out
or
loope
fistp
jno
xor
jecxz
add
pop
inc
stc
cdq
in
cmp
out
or
mul
repnz
ds
call
xor
xchg
or
push
xchg
sbb
and
dec
add
mov
inc
repz
retf
sub
dec
retf
cmp
movs
dec
adc
rep
retf
or
add
or
(bad)
or
adc
xor
add
sbb
fisub
adc
jno
test
jge
push
stc
repz
mov
cmps
je
xchg
adc
call
push
push
cmp
cs
jbe
pop
fistp
je
inc
out
out
(bad)
sbb
sbb
or
mov
pushw
in
push
fild
inc
jae
pop
test
jp
call
retf
mov
int
stos
fisttp
or
mov
in
adc
push
ret
dec
outs
fs
adc
fsub
mov
imul
pop
xchg
repnz
or
jmp
pop
pop
movs
mov
ja
and
or
push
and
jmp
cmps
inc
adc
push
pop
icebp
repnz
sbb
fnstcw
mov
push
inc
dec
cmp
stc
lods
push
sbb
loop
jmp
cmps
sub
icebp
dec
daa
sbb
fmul
pop
ret
scas
or
mov
out
and
das
movs
fcom
jae
shl
pusha
icebp
cmps
jl
jno
mov
in
mov
cmp
inc
gs
jmp
inc
xlat
mov
sub
fmul
push
shr
and
xlat
xchg
xchg
jecxz
add
scas
retf
popa
mov
imul
and
cdq
std
sub
or
xor
les
pop
movs
movs
aas
(bad)
fdiv
push
xchg
movs
xchg
mov
adc
or
push
adc
pop
call
mov
ss
mov
pop
inc
retf
inc
jae
dec
or
loope
cmp
ret
xchg
(bad)
scas
xchg
retf
cld
ins
mov
mov
ins
iret
pop
enter
ss
mov
xchg
iret
add
std
xchg
in
out
xchg
mov
fidivr
inc
gs
repnz
les
sbb
sbb
neg
ret
repz
jle
fiadd
stc
xor
push
(bad)
mov
scas
scas
icebp
icebp
mov
imul
daa
sbb
ficom
lds
add
mov
jne
adc
jae
adc
xchg
mov
div
lahf
bound
ficomp
pop
sub
(bad)
lea
dec
stc
mov
jge
and
sub
mov
mov
inc
mov
imul
and
addr16
xchg
cs
add
aad
fwait
test
and
or
mov
sbb
stos
sahf
cmp
add
cwde
ins
sbb
or
mov
sbb
je
sub
daa
sbb
xchg
inc
dec
adc
jge
test
push
cdq
shl
sbb
mov
inc
pushf
add
outs
(bad)
sub
inc
xchg
cmp
push
inc
sub
xor
mov
jb
(bad)
fcom
xchg
mov
mov
mov
(bad)
sbb
and
xchg
ins
dec
xchg
add
xchg
xchg
outs
test
pop
imul
fisttp
sbb
ret
dec
dec
dec
pop
(bad)
dec
inc
leave
movs
repz
out
je
jl
inc
or
sub
(bad)
mov
inc
dec
mov
or
lock
push
sub
retf
fs
and
push
fld
test
and
dec
scas
jl
rcl
pushf
shr
cmp
ins
jo
in
pop
mov
test
push
aam
jle
jl
in
in
mov
pop
loop
out
in
shr
push
cmp
push
adc
rcr
pop
neg
adc
ret
lock
push
btr
cmp
or
clc
sbb
int
pop
xchg
fs
repz
mov
mov
jns
lods
enter
fld
jns
sbb
frstor
jae
setp
mov
test
mov
rol
dec
sahf
xchg
cdq
fcomi
jae
mov
dec
das
adc
les
mov
jge
cmp
inc
ja
in
dec
outs
sbb
inc
ror
push
xchg
imul
in
push
lahf
es
lahf
mov
loopne
xor
sti
je
and
popf
retf
mov
loop
cmp
mov
mov
jle
bound
jge
or
sti
ret
aaa
lods
in
loopne
ss
aaa
test
xor
mov
outs
loop
xor
popa
xor
sub
xchg
lods
ret
push
in
inc
int
movs
xor
test
ret
sbb
jnp
rcl
sub
pop
sar
jno
xchg
adc
add
outs
fisub
push
into
stc
sub
dec
(bad)
pusha
xlat
data16
fisubr
xor
mov
xchg
push
rcr
cmp
(bad)
sub
jmp
sbb
and
movs
aad
xchg
jne
iret
mov
sar
cdq
cmps
loopne
(bad)
test
fadd
enter
movs
out
int3
fs
stos
sbb
lahf
popf
mov
pop
xchg
rcl
xchg
aas
jae
xor
pop
mov
clc
push
imul
sub
push
loop
(bad)
in
cmp
iret
inc
sbb
jne
ds
dec
leave
sub
jnp
sbb
xchg
mov
xchg
lods
out
pop
add
cdq
bound
or
out
inc
sub
mov
stos
push
lods
test
inc
mov
push
popa
sbb
cli
xor
in
pushf
adc
out
mov
xchg
icebp
aaa
arpl
pop
sub
lea
gs
inc
and
jle
mov
xchg
int
mov
or
mov
sub
add
test
xor
scas
jp
mov
sub
dec
sub
sti
fldenv
popa
fs
adc
mov
daa
ins
xor
sub
push
add
push
in
fbld
movs
lea
popf
xchg
sahf
gs
sbb
nop
retf
mov
inc
sar
ror
cmp
imul
icebp
add
jb
stc
inc
imul
sub
pop
dec
(bad)
push
lods
aam
push
aas
call
pop
push
xchg
push
dec
retf
jle
sar
fnsetpm(287
xchg
dec
pop
sbb
inc
lods
mov
cdq
sbb
psubusw
jmp
sti
aas
jo
(bad)
or
sahf
cmp
fmul
fcom
(bad)
xlat
jecxz
je
and
sub
mov
jbe
push
mov
lock
shr
hlt
mov
outs
ret
xchg
retf
jmp
mov
and
seto
mov
jecxz
jae
jge
movs
shl
cmp
sub
ret
add
(bad)
dec
inc
or
pop
into
cli
sub
sub
mov
rcl
cmp
stos
fstp
xchg
test
imul
and
xor
add
out
mov
js
out
out
es
neg
addr16
dec
ror
mov
cmp
jmp
icebp
xchg
mov
xchg
push
mov
inc
shl
push
sti
adc
fwait
sbb
ins
icebp
cld
ss
adc
inc
sub
ss
fs
xor
in
nop
mov
push
dec
icebp
sbb
jns
add
scas
mov
mov
and
cmp
xor
test
cli
add
sub
(bad)
mov
cmp
mov
aam
pop
clc
add
cmp
cs
clc
jae
jmp
inc
enter
mov
or
xlat
jno
sbb
or
sbb
not
mov
gs
in
(bad)
shl
mov
push
inc
(bad)
mov
aad
pop
cmp
xchg
and
fstp
loope
scas
test
mov
ror
lock
int
add
test
repnz
mov
adc
dec
outs
mov
mov
outs
xor
jb
rol
lods
rcr
sbb
cs
and
mov
int3
mov
ins
xchg
movs
rcr
inc
scas
and
scas
inc
pop
dec
jmp
ret
pop
mov
sub
jmp
jl
add
ja
out
in
jmp
scas
push
xchg
ja
punpckhbw
ins
popa
movs
fcomp
jo
xor
inc
sub
pop
cli
dec
cmps
fmul
adc
xchg
retf
mov
jno
bound
xlat
mov
push
adc
and
or
(bad)
sub
fwait
sahf
shl
ja
movs
push
inc
loope
dec
jmp
pop
rcr
fidiv
fs
sub
push
sbb
rcl
push
iret
push
into
mov
rcl
out
out
call
sub
or
cmps
fwait
ror
sbb
(bad)
push
fldenv
inc
cs
lods
and
xor
adc
cmp
mov
or
push
mov
mov
ret
add
adc
aam
or
lock
mov
mov
dec
lods
mov
dec
popf
xchg
jbe
mov
xchg
cmp
sahf
loopne
(bad)
out
sub
test
push
cmps
push
pusha
es
mov
pop
mov
jnp
xchg
mov
push
mov
(bad)
or
fcmovbe
cld
bound
jle
xchg
scas
popa
sub
push
retf
fs
jl
dec
ds
adc
jmp
or
mov
jmp
xor
jne
mov
es
mov
adc
ds
mov
mov
mov
sbb
cmp
push
mov
and
movs
loope
pop
rol
inc
and
sbb
(bad)
jns
clc
sahf
mov
cld
jnp
cmps
test
pop
shl
lock
shl
pop
jb
inc
(bad)
jb
add
cli
test
test
adc
iret
or
inc
mov
cs
int
sbb
data16
sbb
mov
addr16
test
xlat
mov
add
xchg
scas
popa
dec
inc
int3
rcl
jge
aaa
(bad)
in
or
xlat
mov
pop
xchg
mov
inc
mov
mov
or
and
cdq
cmp
add
jnp
push
ja
je
push
test
pop
call
jecxz
pop
xchg
(bad)
div
ds
fwait
ds
sub
cs
retf
div
in
pop
xchg
out
cld
icebp
jbe
add
mov
jp
mov
cmp
outs
and
fwait
(bad)
jb
push
xor
test
jle
inc
movs
mov
test
mov
(bad)
adc
jmp
je
test
les
fiadd
adc
mov
shr
sbb
pusha
jecxz
jmp
test
cmp
pop
mov
data16
ret
iret
mov
out
pop
adc
mov
(bad)
repz
popa
lock
mov
dec
repz
pop
fdiv
xchg
mov
out
push
pop
or
cmp
jne
add
fild
sub
mov
and
jne
sub
shl
add
add
push
inc
aas
push
test
out
lds
mov
sub
cmp
or
push
jecxz
xchg
cdq
ins
add
push
fs
ins
es
adc
cmc
add
std
aas
call
xchg
out
in
xchg
jle
pop
ror
mov
fnsave
pop
sbb
or
aas
into
jl
ret
test
add
(bad)
sub
scas
shl
push
(bad)
dec
or
or
ss
mov
retf
push
lods
sar
out
sub
pop
mov
test
ins
loop
inc
mov
push
sbb
aas
in
lods
mov
sti
or
pusha
fsub
sbb
pop
xor
xchg
cli
dec
add
stos
ja
ins
fbstp
dec
icebp
lea
fs
hlt
mov
je
dec
mov
ret
pop
pop
ss
scas
fisubr
gs
jbe
add
jge
repnz
cmp
daa
pop
inc
les
ins
ins
rcl
add
std
div
int3
cld
fxch
int
inc
repnz
push
loope
push
ret
movs
lods
mov
aaa
push
lods
mov
mov
idiv
mov
fincstp
mov
ret
push
pop
(bad)
repnz
(bad)
iret
xchg
lea
and
cld
or
aad
out
dec
add
sti
(bad)
xor
xor
inc
dec
mov
xchg
fst
jl
pop
jge
cmp
sbb
mov
mov
imul
or
ds
or
ins
mov
aad
cld
and
jecxz
pusha
or
jmp
sub
dec
xchg
icebp
leave
out
push
mov
push
sub
xor
dec
clc
xchg
and
int
cmp
mov
cmpxchg
push
adc
out
adc
add
mov
repnz
shl
arpl
push
push
cmps
mov
push
or
(bad)
div
cmp
and
push
(bad)
(bad)
std
jmp
ret
ret
inc
fs
ss
adc
sub
mov
sbb
push
mov
fcomp
cwde
or
pop
test
pop
idiv
mov
scas
mov
cld
sbb
push
fsubr
aaa
jo
adc
xchg
xchg
xchg
cli
lahf
push
ja
repz
in
inc
cmp
xchg
mov
loope
call
fcom
inc
mov
sar
cld
inc
sbb
push
sbb
jne
sub
rol
(bad)
in
dec
inc
sbb
mov
hlt
xor
repz
mov
sub
push
sbb
lods
cmps
cmp
pop
in
xor
imul
sbb
in
jecxz
add
cmps
rol
and
ins
push
gs
lds
pusha
cwde
mov
rcl
push
sub
icebp
cmp
pop
lods
sub
sti
idiv
sti
push
aas
fs
mov
mov
loopne
dec
sub
cld
pop
sbb
popa
fsubrp
test
adc
(bad)
(bad)
pop
cmp
leave
xchg
inc
out
stc
push
jecxz
aaa
or
test
inc
imul
in
in
scas
(bad)
repnz
scas
scas
add
repz
cmps
jb
xor
into
push
ficomp
sbb
sar
pop
mov
mov
mov
inc
dec
add
and
lds
inc
mov
icebp
xchg
iret
xchg
push
pop
or
pop
adc
(bad)
mov
jbe
nop
add
mov
mov
jnp
ficom
pusha
ret
(bad)
push
pusha
push
add
repz
in
adc
cmp
xchg
leave
or
pop
push
or
scas
jbe
mov
out
or
fcomp
pop
mov
retf
push
jp
xlat
xchg
mov
sub
xor
leave
pop
stos
jo
sub
jmp
cli
(bad)
addr16
jmp
mov
xchg
sar
cmps
inc
sbb
call
sbb
lock
pop
xchg
mov
jae
or
(bad)
addr16
sti
fisttp
mov
mov
call
call
clc
sbb
rcr
xchg
pop
xor
mov
cmps
nop
es
mov
popf
or
and
mov
or
mov
cs
outs
cmps
dec
jmp
dec
std
mov
cs
or
sub
fld
cwde
mov
in
inc
sbb
sub
sub
pop
jl
cmp
(bad)
mov
cmps
push
addr16
adc
cmps
sub
jmp
cmp
mov
cmp
inc
jl
xchg
aas
add
jbe
dec
cs
lods
cmp
pop
adc
test
aam
sar
inc
sub
adc
aas
enter
(bad)
mov
cmp
stos
sub
scas
fwait
in
cs
inc
sahf
aam
cmp
jae
retf
mov
mov
xor
mov
jae
or
mov
xchg
jae
out
mov
out
gs
lahf
cmp
inc
mov
jp
cmp
mov
adc
int
js
shl
adc
cmp
add
pop
and
or
scas
pop
stos
out
or
cmp
out
les
outs
add
aas
adc
ja
inc
retf
xlat
(bad)
test
adc
xchg
sub
pusha
jae
xor
mov
dec
stc
(bad)
out
mov
mov
push
ret
push
add
sub
pop
xchg
push
(bad)
aam
mov
aad
jmp
in
or
imul
adc
pop
jns
pop
jmp
mov
out
push
cmp
int
inc
jb
mov
loope
aam
es
loope
stc
jo
adc
je
fsub
ins
popf
repnz
bound
(bad)
fbstp
ins
mov
pop
mov
ror
test
cwde
inc
inc
add
jo
enter
jnp
ret
add
sahf
and
rcl
popa
cmp
adc
scas
loopne
stc
mov
jmp
sub
and
push
inc
dec
dec
jp
sub
outs
push
das
pop
xor
mov
pusha
inc
mov
sbb
jmp
repnz
push
adc
pop
addr16
jle
fadd
adc
daa
fsincos
loopne
mov
stos
sti
shl
fldcw
sbb
or
gs
arpl
lea
arpl
pop
popa
mov
or
stc
cmp
outs
dec
(bad)
retf
push
pop
ins
outs
jg
mov
aas
sub
and
mov
aaa
dec
sahf
out
ds
jo
jl
addr16
mov
gs
add
dec
jg
out
cli
in
das
pop
pop
mov
repnz
scas
push
sbb
iret
dec
sbb
cs
dec
add
ins
cmp
stc
xchg
scas
pushf
inc
loopne
je
sbb
push
add
or
int3
ret
(bad)
pop
(bad)
jecxz
fs
lods
movs
inc
mov
enter
pop
stos
mov
adc
dec
aaa
sbb
dec
shr
lahf
sbb
or
mov
rcl
fisttp
cmp
sub
in
pushf
movs
pop
jbe
les
mov
add
cs
adc
xor
test
dec
dec
cdq
call
idiv
or
fidivr
fimul
sbb
test
jle
mov
sti
test
out
addr16
ror
in
pushf
inc
push
dec
mov
jp
adc
or
mov
sub
xlat
into
stos
xchg
(bad)
pushf
jo
hlt
into
lahf
pop
call
aaa
loop
sbb
rcl
iret
inc
sti
mov
push
cli
mov
test
lds
pop
add
cmp
dec
dec
cmp
ins
nop
aam
cmps
fidiv
push
mov
icebp
sub
(bad)
pop
push
(bad)
push
dec
cmp
jg
ins
jbe
inc
icebp
arpl
adc
inc
or
pop
add
jmp
xchg
stc
idiv
xchg
adc
jmp
in
pop
jle
retf
rol
not
push
inc
mov
sub
adc
(bad)
(bad)
mov
mov
pop
outs
or
lods
xchg
inc
push
cld
pop
test
or
pop
push
mov
mov
jne
mov
shl
sub
call
mov
jmp
das
push
test
ins
movs
sbb
sub
(bad)
cmp
test
gs
push
aaa
(bad)
sti
xor
test
iret
(bad)
fnstcw
jns
daa
cmp
in
shl
dec
into
in
push
popa
dec
rcl
xchg
(bad)
into
dec
jno
(bad)
gs
pop
rcl
lods
retf
inc
aaa
ja
sub
pop
mov
ds
pop
xor
mov
mov
fisttp
les
push
or
in
add
mov
popf
ret
and
push
sub
ja
icebp
aad
push
xor
mov
fs
cs
push
and
mov
je
rcl
xor
dec
sbb
sub
jl
(bad)
int3
jae
inc
pop
pop
(bad)
push
or
retf
push
(bad)
mov
mov
fist
cmp
jno
rcl
(bad)
xor
jmp
mov
and
jmp
or
inc
mov
shl
cmp
mov
hlt
(bad)
mov
jnp
int
sub
(bad)
add
mov
add
adc
mov
mov
push
gs
mov
addr16
lds
outs
in
mov
imul
mov
nop
call
inc
aaa
xchg
jno
mov
rcl
dec
push
fwait
add
pusha
dec
inc
mov
mov
add
cmp
scas
mov
and
adc
cli
mov
adc
(bad)
nop
mov
jg
pop
adc
jb
ins
(bad)
(bad)
dec
lods
pop
rol
mov
arpl
test
sbb
test
xchg
push
aad
cmps
mov
xor
stos
nop
add
ins
and
mov
outs
add
inc
inc
mov
cmc
test
or
cmp
in
(bad)
dec
and
push
push
inc
sbb
daa
inc
pop
dec
ror
or
fcmovnbe
xchg
add
xchg
ret
nop
frstor
xchg
mov
mov
scas
iret
test
add
cmps
cmp
mov
push
aas
outs
mov
jp
push
inc
int
jnp
cmp
mov
(bad)
out
jg
jne
out
pop
cmp
jnp
(bad)
mul
or
jne
dec
sbb
mov
lahf
jmp
sub
mov
or
cmc
adc
sbb
repnz
int3
and
das
pavgw
sbb
(bad)
fcom
jnp
jb
stc
es
out
mov
outs
jno
add
inc
sbb
and
test
arpl
je
imul
mov
daa
sbb
es
jo
test
jns
arpl
push
ja
or
push
xchg
jmp
or
in
jg
daa
jne
popf
fs
mov
cdq
push
jl
xchg
jge
push
sub
fwait
sti
in
daa
js
pop
fsubr
lods
dec
std
xchg
jmp
add
sbb
aad
sar
and
aas
pop
jnp
cli
scas
out
xor
or
jp
xor
sbb
xchg
jmp
xor
dec
fidiv
sub
sbb
add
fs
(bad)
cld
mov
fdivrp
(bad)
ss
in
adc
cmp
or
lds
js
dec
je
jmp
enter
cmp
mov
pop
jae
dec
and
rol
jae
aad
popa
movs
add
xchg
cmp
or
test
neg
lods
dec
adc
inc
inc
pop
push
mov
mov
lods
retf
jmp
out
dec
mov
xchg
mov
pop
stos
sbb
pop
sbb
adc
push
mov
outs
mov
cmp
jnp
cmp
scas
dec
sbb
ja
or
out
(bad)
loope
mov
jmp
mov
mov
div
fidiv
mov
inc
(bad)
mov
mov
repz
mov
fbld
or
test
out
cli
and
sub
adc
cmp
or
sub
push
sar
cmp
imul
or
stos
sti
xor
inc
xchg
mov
cmp
je
push
divps
(bad)
xchg
mov
ja
out
jne
popf
lock
pop
mov
scas
dec
cmp
adc
fisub
dec
dec
mov
mov
inc
xor
or
test
mov
jecxz
ret
dec
pushf
push
(bad)
(bad)
inc
jmp
pop
cld
cmp
push
test
out
shl
adc
and
push
pop
sbb
popa
sar
mov
ins
and
das
mov
push
xchg
sub
pusha
and
dec
(bad)
jmp
out
lods
in
std
inc
movs
dec
xchg
outs
lock
xchg
outs
(bad)
(bad)
shr
movs
(bad)
shl
popa
pop
cdq
sub
adc
mov
cwde
enter
fst
xor
loopne
call
icebp
push
not
mov
(bad)
push
test
call
pmaxub
fcomp
fst
retf
int3
sbb
xchg
push
xor
mov
push
xor
mov
dec
inc
or
mov
scas
in
mov
mov
add
xor
xchg
imul
hlt
and
mov
jns
nop
add
inc
adc
sub
loop
inc
push
add
xor
scas
sub
mov
std
enter
dec
arpl
sub
repz
cdq
push
inc
imul
retf
enter
sbb
sti
pusha
cmp
cdq
dec
push
push
leave
ss
xor
xor
jge
out
pop
mov
aam
mov
adc
inc
iret
mov
das
push
or
cmps
test
(bad)
aaa
inc
push
icebp
lea
mov
lds
add
dec
in
in
sub
push
cmp
shl
fmul
jmp
aas
dec
sub
adc
movs
dec
clc
outs
xor
stos
jae
outs
enter
js
add
cmc
sbb
lea
xor
push
lock
jecxz
inc
test
jne
aas
sub
ins
retf
dec
cs
stc
rcr
mov
jae
std
dec
call
(bad)
mov
xchg
fs
mov
mov
cli
sahf
imul
retf
fist
out
repnz
pop
mov
aaa
jl
mov
pusha
ror
fucomip
test
retf
cdq
add
loopne
pop
cli
mov
mov
mov
fisub
out
push
inc
out
fs
dec
int
(bad)
push
or
movs
add
xlat
or
fscale
ins
ins
pop
gs
mov
xlat
lea
mov
shl
clc
mov
jg
(bad)
fsubr
or
mov
add
ds
pop
push
pop
mov
push
mov
inc
push
push
inc
mov
js
int
cli
pop
sub
mov
xor
xor
ss
push
pop
pextrw
cmp
cdq
ins
int3
(bad)
jmp
fsub
retf
int3
mov
icebp
test
lds
inc
inc
push
jle
outs
adc
into
nop
push
xchg
xchg
ins
jb
cmp
pop
jnp
cmp
iret
cdq
mov
or
mov
and
mov
je
std
ins
inc
test
jmp
or
sbb
xchg
test
fstp
pop
adc
or
in
inc
mov
mov
int
xchg
shl
in
mov
inc
out
or
mov
scas
aad
lock
lds
push
push
xrelease
movs
test
ss
push
sub
cmp
ja
mov
movs
fsub
out
mov
lods
jg
xchg
pop
clc
jbe
cwde
pop
xor
cmps
jnp
out
cmp
mov
movs
call
adc
cmps
sti
fwait
sar
jg
mov
pop
shld
and
push
lods
push
or
fwait
lds
sar
mov
stos
scas
inc
mov
cmc
test
cmp
jp
jmp
pushf
sbb
sbb
(bad)
in
fadd
loopne
outs
scas
xlat
sub
xchg
add
push
nop
sbb
int3
push
and
cld
sub
std
mov
int
add
and
sar
aas
inc
scas
adc
sbb
sbb
(bad)
adc
jle
mov
jo
jge
add
aad
sahf
popf
dec
pop
mov
push
int3
xor
or
fs
retf
cmps
add
retf
jns
xchg
jecxz
ss
mov
fst
cmp
shl
xlat
mov
mov
inc
lock
cmps
cs
repnz
out
loop
iret
(bad)
pop
sub
shr
push
push
(bad)
mov
dec
sub
cmps
dec
fwait
inc
pop
sahf
pop
aaa
fadd
jb
sar
in
not
adc
scas
ror
jo
cmp
das
add
cmp
inc
(bad)
js
xchg
ins
lock
ror
icebp
mov
mov
dec
jecxz
add
push
push
adc
add
out
and
aam
and
cdq
lds
cdq
(bad)
fwait
xchg
ret
xchg
cmp
and
enter
mov
iret
bound
in
xchg
jecxz
sbb
mov
pushf
(bad)
jmp
(bad)
(bad)
movs
and
sub
ins
pop
bound
and
or
xor
cdq
jg
dec
repz
stc
movs
nop
jbe
ret
arpl
into
cmp
dec
cmp
dec
rcl
or
and
or
outs
cli
sub
rcl
sbb
cmp
mov
push
mov
jecxz
in
dec
xchg
xchg
pushf
jmp
pop
ins
push
xchg
lea
movs
cld
arpl
mov
dec
std
push
pop
mov
or
fmul
adc
cmp
jp
iret
mov
outs
push
mov
test
pusha
ja
jge
mov
repz
fnsave
pop
fsubr
aaa
loop
jg
and
and
shr
jo
xchg
push
pop
jnp
dec
jmp
or
jmp
sub
into
inc
pop
sbb
movs
bound
push
mov
pop
inc
push
push
outs
push
dec
xchg
ret
clc
and
into
dec
(bad)
test
mov
loope
or
mov
xchg
retf
dec
pop
mov
cmp
sti
adc
stos
pop
mov
mov
test
fs
push
retf
adc
dec
inc
arpl
cli
mov
inc
je
jle
clc
in
xchg
push
inc
fstp
and
movs
jno
(bad)
add
out
pop
inc
loopne
adc
xor
adc
sbb
fidiv
pop
mov
repnz
mov
dec
loop
sbb
dec
shr
das
in
or
ja
mov
pushf
push
lods
adc
das
arpl
jb
popa
pop
out
inc
mov
jmp
sub
into
popa
mov
jb
mov
jnp
xchg
repnz
xchg
sub
scas
aam
inc
push
cmp
cld
shr
jl
pop
lahf
adc
mov
inc
hlt
sub
cmps
aad
in
call
into
test
movs
data16
imul
add
jo
sub
test
add
push
mov
sub
and
jp
je
fld
sbb
cli
mov
add
push
lahf
ins
clc
inc
sbb
push
retf
loopne
lods
mov
sbb
cmp
add
pop
lods
jp
les
mov
popa
and
dec
rcl
or
(bad)
rcl
test
mov
push
push
hlt
add
and
cmc
or
sbb
(bad)
fiadd
sahf
imul
imul
pop
out
fild
xor
ds
dec
push
retf
push
sbb
ja
inc
xor
push
cmc
or
test
arpl
call
shl
iret
aas
bnd
or
scas
aas
std
add
adc
xchg
mov
mov
xchg
shr
mov
jp
xor
enter
rcl
cmp
mov
cmp
sub
in
inc
cmp
dec
lea
movs
and
push
sub
test
xchg
jmp
mov
sbb
call
stos
movs
popf
dec
pop
cdq
cmp
sbb
ja
(bad)
xchg
into
fistp
ret
hlt
int
cmp
add
out
mov
mov
fisubr
inc
bound
out
jne
jo
leave
aaa
std
dec
stc
ret
xor
and
outs
out
cli
cli
or
ror
bound
scas
jnp
pop
adc
sub
push
jmp
sub
lods
jecxz
icebp
pop
sbb
adc
push
push
mov
dec
sub
fldln2
xchg
cmp
ret
int3
pop
mov
fcompp
fchs
mov
mov
jge
push
loop
push
stc
mov
pop
mov
in
fist
lods
les
push
xchg
outs
push
cwde
ja
push
mov
lods
test
retf
aaa
adc
cmc
cmp
mov
jmp
or
sub
push
fisub
into
dec
cli
mov
fyl2xp1
stc
mov
int
jecxz
adc
adc
repz
mov
icebp
jg
mov
or
push
icebp
cmp
cmp
(bad)
adc
cmp
daa
jb
dec
and
fcmove
dec
push
leave
mov
arpl
mov
inc
add
addr16
adc
pop
add
mov
loopne
mov
inc
fucomip
mov
push
sub
daa
and
outs
ins
adc
push
(bad)
gs
sahf
shr
pop
sbb
fistp
and
sbb
xor
repz
dec
inc
scas
push
push
shl
sub
xchg
xor
lock
inc
scas
fcomi
and
xor
push
lahf
jmp
sbb
lds
icebp
stos
xor
test
push
retf
fmul
cmp
push
pop
mov
outs
sub
mov
mov
scas
jmp
daa
scas
pop
jne
sbb
jp
lock
inc
jmp
icebp
jb
lds
ins
fild
daa
or
push
xor
jne
sahf
jl
xor
mov
in
loope
push
pop
mov
push
xadd
xchg
mov
dec
mov
outs
inc
cmp
adc
test
outs
pusha
das
out
out
sub
mov
das
iret
or
int
mov
pop
mov
call
mov
jb
das
mov
push
stos
add
lods
jge
or
lods
adc
loop
pop
mov
and
pop
jmp
stc
imul
jb
ss
daa
inc
push
cwde
daa
mov
sbb
(bad)
fcom
repz
inc
mov
dec
and
sahf
nop
pop
movs
xor
out
out
inc
pop
das
icebp
jnp
fidiv
faddp
pop
bound
xor
xor
popa
and
dec
mov
bound
mov
(bad)
int
mov
xchg
stos
mov
cmps
or
repnz
popf
mov
je
cs
dec
xor
movs
out
inc
fwait
fwait
ret
jb
xchg
jae
push
jl
cmp
loope
jmp
fcmovnb
movd
sbb
in
hlt
xchg
and
jmp
push
(bad)
xchg
stc
into
push
or
mov
xchg
loopne
mov
pop
es
cmp
shl
inc
imul
sub
idiv
push
push
add
pop
add
inc
mov
lea
jp
fisttp
mov
(bad)
or
xchg
mov
stc
or
cmp
pop
pop
dec
jmp
pop
xchg
jns
(bad)
std
sbb
idiv
cdq
sub
punpckhwd
inc
jmp
adc
inc
push
push
rcr
call
out
dec
adc
aad
imul
cld
es
jecxz
or
xor
inc
mov
mov
in
mov
xor
lods
mov
rcl
sub
aas
dec
mov
loopne
jb
dec
cli
xchg
mov
mov
mov
inc
sub
or
fwait
cmp
arpl
sahf
shl
in
popf
mov
fldlg2
shl
(bad)
mov
data16
add
dec
fwait
mov
jb
xchg
jmp
or
push
ret
popf
cmps
das
add
and
mov
mov
push
in
stc
xor
mov
(bad)
in
dec
aam
or
or
dec
mov
and
dec
dec
cli
or
and
jnp
jg
push
jo
imul
ins
xor
jbe
pop
cmps
mov
aas
adc
int3
push
mov
xor
inc
cmp
xchg
(bad)
push
test
jle
aas
xchg
test
(bad)
mov
sbb
inc
jl
retf
jae
or
sar
add
mov
xchg
cmp
neg
ins
hlt
ds
fmul
jg
push
dec
clc
mov
inc
loope
pushf
repz
cdq
aam
adc
mul
ds
bound
or
cmp
mov
add
xchg
push
add
int3
sub
cmc
dec
imul
jmp
daa
clc
sahf
adc
fadd
jle
jbe
test
xchg
and
fisub
pop
mov
adc
xchg
ins
xor
or
movs
xor
retf
mov
fild
lods
xchg
mov
pop
mov
and
inc
or
mov
xchg
hlt
pop
movs
in
add
or
mov
js
cmp
imul
add
dec
add
or
adc
or
xlat
sbb
mov
rcr
cmp
push
sar
and
push
xor
popf
aas
arpl
aas
dec
adc
push
mov
les
mov
cld
cmps
in
push
int
test
or
push
sbb
mov
jg
repnz
(bad)
mov
retf
inc
dec
lock
lods
pusha
enter
stos
mov
lahf
rcl
inc
pop
loope
(bad)
stos
outs
cmc
addr16
inc
dec
mov
iret
cli
push
add
push
retf
(bad)
xchg
lds
data16
in
mov
call
ss
mov
popf
pop
sub
gs
or
js
call
stos
aad
push
jl
push
jmp
movs
mov
ins
into
jae
ins
pop
das
sub
jmp
pushf
int3
jl
fimul
inc
mov
adc
xor
xor
mov
jg
ret
(bad)
(bad)
es
out
ret
out
movs
sbb
retf
sub
adc
adc
frstor
hlt
retf
pop
pop
jne
pop
mov
adc
nop
adc
mov
xchg
lldt
pop
add
push
mov
mov
arpl
repz
outs
out
jmp
add
js
and
xor
cmp
dec
cmp
paddsw
jp
or
scas
xor
mov
fwait
stos
mov
inc
retf
pop
inc
out
je
test
xchg
push
or
arpl
push
mov
cmp
pop
cs
(bad)
cli
push
shl
xchg
pop
stos
mov
out
std
mov
push
call
mov
repnz
dec
sub
cmp
push
mov
ins
push
imul
and
mov
call
pop
inc
(bad)
push
imul
jb
cli
sbb
mov
inc
or
pop
and
cmp
pop
jge
movs
cdq
fnstenv
jecxz
xchg
aam
inc
fcmove
cwde
ficomp
jnp
adc
xor
retf
dec
shr
stos
mov
daa
jge
(bad)
not
shl
dec
jle
rol
mov
push
jl
push
nop
jge
sti
retf
jno
pusha
adc
popf
adc
push
in
mov
cmp
out
dec
cmp
call
lods
sub
fsubrp
and
mov
out
clc
fstp
jbe
fisttp
push
inc
and
mov
xchg
repz
retf
das
in
aaa
push
sub
mov
sub
fcomp
mov
call
outs
fild
add
inc
push
or
in
stos
arpl
add
dec
aad
add
imul
cmp
aam
in
push
xlat
sub
jno
pop
lods
add
int
adc
adc
scas
sbb
ds
ret
xchg
inc
int3
cli
lock
out
cmp
cmc
inc
test
or
out
or
(bad)
repnz
sub
push
scas
scas
sub
mov
jmp
out
mov
or
ja
jnp
sbb
jle
or
sti
sti
(bad)
cli
enter
add
test
sbb
add
xchg
sbb
outs
add
inc
push
dec
dec
sbb
pop
cmp
inc
neg
inc
xchg
cmp
adc
in
aad
in
push
ja
mov
sbb
jl
lahf
and
and
mov
pushf
xchg
dec
and
sahf
nop
cmp
mov
out
jne
push
mov
mov
xlat
jno
mov
push
dec
sbb
inc
data16
cmps
call
mov
sbb
push
xchg
jbe
out
cld
(bad)
call
test
nop
call
ror
out
xchg
and
add
jg
inc
ror
inc
mov
dec
das
pop
and
inc
mov
icebp
popa
sar
fwait
mov
ja
inc
inc
ins
(bad)
dec
jl
cmp
add
or
jb
push
ds
scas
lods
xchg
inc
or
test
cmp
lds
or
mov
or
out
jns
fwait
sbb
jmp
mov
jecxz
adc
or
xchg
int3
pop
jns
leave
pop
add
pop
rol
mov
and
sbb
sbb
vcvtdq2ps
mov
sbb
xchg
mov
xchg
inc
int3
(bad)
outs
push
sbb
(bad)
adc
xchg
scas
mov
mov
retf
loope
test
or
mov
sbb
xchg
jno
mov
jmp
movs
sbb
and
mov
out
jns
fmul
sbb
iret
arpl
fisttp
add
inc
and
sub
sub
xchg
stc
popf
xor
in
mov
jno
inc
das
stos
(bad)
aas
add
xchg
dec
das
in
popf
icebp
cld
push
jmp
fidivr
daa
add
aas
aas
ins
rol
jl
push
inc
fadd
push
mov
or
jo
adc
ins
(bad)
xchg
inc
int3
jecxz
push
and
(bad)
cmp
or
lods
mov
das
inc
fs
int3
jp
arpl
mov
xor
retf
or
fidivr
mov
xchg
rcr
out
outs
mov
retf
jecxz
loope
mov
aad
cmps
out
icebp
or
movs
cmp
and
mov
pop
add
xor
cmp
cmp
mov
dec
pop
je
xchg
dec
xor
inc
add
and
mov
dec
add
rol
cmp
cs
out
(bad)
sahf
sbb
mov
cli
jge
fwait
mov
sub
lods
push
and
and
sub
push
and
inc
ret
mov
call
cmp
xchg
push
(bad)
data16
mov
call
xor
int3
into
mov
aad
dec
sub
shl
mov
retf
sub
mov
sti
jecxz
add
jns
inc
mov
push
cmc
push
jge
cwde
ja
scas
push
pushf
test
fwait
outs
arpl
lahf
adc
idiv
call
xor
sbb
mov
pop
hlt
adc
jo
(bad)
mov
cmp
imul
(bad)
(bad)
call
les
inc
inc
sub
inc
cmps
outs
aad
sti
jae
fild
dec
aam
rcr
mov
adc
push
jmp
sub
or
jb
sahf
pop
jmp
dec
popf
inc
sbb
jnp
mov
dec
fild
ja
pop
xor
sub
or
jne
adc
sahf
gs
add
(bad)
repnz
aaa
loopne
in
neg
push
fcomi
cmp
stos
cli
mov
(bad)
xchg
sbb
in
ror
add
pop
out
and
mov
fidiv
sbb
push
sub
ja
test
loopne
nop
mov
inc
gs
loope
gs
hlt
jbe
xchg
daa
in
jmp
inc
mov
adc
push
lods
ins
ret
jbe
cmp
ins
cmp
mov
je
adc
sbb
push
jmp
arpl
mov
scas
(bad)
fcom
je
sahf
push
mov
add
arpl
and
enter
ins
pop
out
mov
push
xlat
fwait
sbb
shl
push
push
ins
add
jb
xchg
popa
xor
jno
push
imul
(bad)
shr
xor
outs
mov
faddp
icebp
das
pop
nop
test
push
mov
rcl
sbb
sub
mov
cmp
bound
ins
arpl
xchg
jb
movs
(bad)
nop
xchg
mov
call
cld
mov
add
repnz
mov
pop
mov
mov
cdq
movzx
pop
adc
mov
or
icebp
(bad)
leave
dec
add
jnp
pop
ins
aaa
xor
fst
pushf
mov
jbe
sub
push
xchg
mov
into
and
out
mov
mov
dec
mov
fistp
shl
fucomi
add
(bad)
das
hlt
mov
fld
call
add
(bad)
or
ror
pop
mov
sbb
rol
call
fld
daa
jl
pop
jecxz
lahf
and
sbb
cli
and
push
sbb
popa
xor
in
jbe
stos
add
movs
pop
int3
mov
sbb
inc
popa
sbb
test
inc
in
mov
mov
xchg
mov
inc
lods
ret
pushf
daa
mov
mov
jge
popa
add
les
mov
ins
out
pop
fistp
popf
out
loope
dec
mov
test
nop
add
push
fmul
ror
cdq
repnz
sbb
xchg
pusha
jle
in
repz
mov
popf
inc
cmp
ficomp
hlt
(bad)
enter
into
outs
icebp
ins
jbe
cmp
push
repz
push
rcl
ins
mov
sbb
mov
inc
pop
aas
fnstenv
scas
(bad)
neg
mov
cmp
arpl
out
push
jecxz
mov
cmps
push
cli
addr16
cli
sub
inc
jle
loope
fcmovnu
sbb
(bad)
jp
enter
add
mov
adc
popa
sub
adc
adc
xchg
dec
inc
imul
test
rcr
popa
mov
push
dec
(bad)
bound
mov
push
lods
add
ds
cmp
adc
sub
out
iret
cmp
jp
dec
scas
or
scas
mov
sbb
jb
in
in
cmp
scas
loopne
retf
aad
jbe
test
push
jp
mov
(bad)
xlat
pop
(bad)
cmp
outs
cmp
and
mov
test
in
mov
rol
movs
cmps
dec
jp
cwde
out
fst
not
lods
xchg
cli
dec
dec
mov
dec
fld
adc
movs
cmp
dec
scas
loope
adc
push
adc
or
enter
lods
(bad)
jge
sub
xor
cdq
dec
xchg
(bad)
int3
aam
mov
jbe
inc
cld
cmc
in
sbb
cmp
lahf
mov
repz
xchg
adc
push
nop
movs
popa
mov
and
sbb
cdq
mov
sahf
retf
xchg
jmp
pop
jl
sub
ret
idiv
jnp
ror
xor
pop
cmp
xor
popf
cmova
xor
mov
shl
and
inc
add
sub
cmp
adc
mov
daa
lods
clc
data16
inc
movs
retf
mov
in
jmp
pop
xor
dec
test
test
or
loop
mov
mov
xchg
in
loope
jns
stos
and
sbb
mov
nop
inc
lods
out
pushf
mov
(bad)
push
pop
cld
jne
xchg
loope
mov
xchg
sbb
leave
jmp
sahf
in
retf
popf
arpl
mov
lahf
je
cs
or
xor
mov
test
test
jo
out
retf
cmp
and
(bad)
out
push
inc
push
adc
jp
or
dec
cmc
sub
mov
pop
dec
push
xchg
cmp
cmc
add
mov
push
jno
add
or
pop
xor
mov
stos
or
mov
lods
sbb
mov
ins
test
pop
in
add
loop
call
pop
rcl
jno
in
mov
add
lods
or
jbe
nop
sbb
and
into
pop
pop
mov
jmp
cs
pop
add
or
sti
fnstsw
sub
clc
(bad)
int3
inc
push
inc
pusha
iret
sub
aad
xchg
sbb
retf
sbb
loop
jo
test
cmps
ficom
fstp
aas
xchg
sbb
sbb
dec
pop
imul
mov
iret
adc
inc
sbb
retf
mov
add
mov
mov
fbstp
es
stc
cmps
pop
int3
aam
in
mov
int
dec
cli
mov
stc
or
mov
loopne
addr16
push
push
(bad)
aad
add
push
addr16
test
loop
mov
rcl
or
cmp
inc
aam
icebp
mov
pop
aad
das
mov
mov
cmc
inc
test
dec
sbb
xchg
push
mov
push
mov
or
ficomp
lods
push
mul
pop
ret
mov
dec
inc
jnp
mov
jne
or
xor
push
inc
mov
and
js
in
sbb
dec
in
push
test
mov
(bad)
cld
repnz
mov
mov
mov
out
mov
mov
mov
ds
pop
jbe
imul
xor
int
push
call
jae
push
in
(bad)
iret
or
sub
xchg
fsub
pop
in
xor
xchg
loopne
call
mov
push
js
mov
neg
adc
pop
pop
cmp
es
jecxz
movs
into
ficom
inc
into
cmp
mov
mov
sahf
cmps
movs
jae
es
or
shl
sbb
(bad)
cli
dec
fisttp
popa
or
pop
xchg
or
pushf
push
mov
(bad)
jl
ja
scas
lds
cdq
ret
mov
add
pushf
das
mov
pop
stos
sbb
jl
pop
xor
add
jl
call
in
xchg
xor
stos
les
or
es
mov
test
sub
cmps
mov
mov
xor
mov
ss
xchg
in
scas
jb
cwde
jmp
xchg
mov
mov
cmp
stc
arpl
fcmovnbe
pop
xor
jnp
neg
push
in
loop
js
mov
int
jge
(bad)
push
xor
jo
and
add
loope
and
add
xrelease
(bad)
fcom
or
dec
push
mov
pop
repz
jp
jl
pop
dec
sbb
(bad)
fcomi
fstp
fnstenv
hlt
test
push
push
push
and
inc
dec
fiadd
ret
ja
pushf
lods
xor
xlat
enter
jno
pop
adc
push
mov
adc
ss
stc
sar
loop
inc
push
icebp
cmp
or
hlt
cmp
push
cmp
sbb
(bad)
push
mov
shl
std
push
pop
das
(bad)
rol
adc
nop
cmp
cld
fwait
imul
adc
adc
pusha
test
sub
and
(bad)
loopne
xchg
mov
xchg
lock
xor
es
stc
fldenv
pusha
dec
or
lock
mov
adc
lds
test
add
fmul
stc
dec
inc
adc
fist
inc
mov
push
and
jno
repnz
and
xchg
ds
mov
and
enter
cmp
mov
shl
(bad)
jo
jmp
add
sbb
leave
push
sub
jg
(bad)
xlat
les
outs
cmp
shl
nop
stos
add
test
jb
xchg
and
mov
test
movs
xchg
call
pop
inc
jae
(bad)
hlt
jmp
sti
push
pushf
mov
fist
and
scas
out
call
mov
and
cli
addr16
inc
jnp
mov
inc
inc
mov
cs
rcr
xor
add
cld
daa
hlt
and
out
repnz
xchg
(bad)
(bad)
out
mov
sub
fst
(bad)
pop
adc
fwait
mov
aam
xlat
jmp
cmps
repnz
(bad)
xchg
push
icebp
clc
or
loop
inc
lods
dec
imul
call
push
xchg
dec
fdiv
jnp
xchg
jne
ja
nop
adc
lock
xchg
mov
mov
inc
jmp
dec
or
sub
lods
in
addr16
dec
mov
mov
daa
fbld
(bad)
jne
int
fisub
frstor
outs
or
push
push
xchg
psraw
xlat
aad
std
mov
inc
jge
out
lods
dec
jmp
inc
sahf
aaa
in
in
inc
xchg
and
push
(bad)
stc
cmp
ja
hlt
jbe
sbb
loop
jge
arpl
cdq
pusha
neg
add
sub
adc
mov
cmp
ret
jge
push
jp
movs
sub
fs
das
xchg
and
shr
int3
in
pushf
dec
add
mov
fisub
fdivr
pop
test
sbb
pop
xor
add
popa
xor
sti
ds
sbb
or
mov
loopne
jle
add
les
inc
retf
jp
add
out
or
movs
mov
sub
outs
lods
inc
mov
lds
ds
inc
mov
loope
in
out
inc
aas
div
int
popf
jp
test
in
jae
adc
dec
test
hlt
imul
lock
or
dec
in
pop
or
out
out
add
leave
das
movs
xor
push
pop
add
push
(bad)
adc
xchg
pop
and
pushf
mov
push
push
and
xor
daa
xor
push
adc
out
(bad)
sbb
stos
pop
add
out
jmp
cmp
fwait
shr
push
add
xlat
cdq
xor
mov
repnz
pop
(bad)
xor
fnsave
mov
push
inc
xor
fs
jge
and
mov
dec
loopne
sbb
ret
jg
jp
pop
rol
sub
jmp
aaa
(bad)
hlt
shl
push
xor
and
test
xchg
mov
outs
into
or
std
sahf
les
adc
out
jle
jbe
adc
shl
push
shrd
es
mov
mov
daa
mov
mov
adc
push
neg
add
ins
and
jle
cmp
and
cmps
sub
div
lahf
es
push
scas
jp
cmp
das
jmp
or
adc
jno
aam
dec
rcl
lahf
out
or
lahf
arpl
sti
pop
fild
xchg
cwde
adc
dec
aaa
sbb
inc
clc
ds
and
and
into
mov
dec
and
mov
test
aam
scas
jne
push
scas
out
push
test
test
jle
inc
mov
cmp
pop
mov
adc
lods
and
inc
sti
fisttp
and
push
in
mov
scas
hlt
mov
sub
xor
jg
(bad)
jnp
push
in
jecxz
xchg
push
out
inc
mov
mov
jo
mov
call
and
push
loop
dec
inc
sbb
adc
adc
mov
sbb
dec
and
pinsrw
or
lock
sbb
sub
xor
jl
mov
repnz
test
in
cmp
mov
mov
xor
hlt
adc
xor
fs
pushf
outs
fnstcw
in
push
mov
test
ret
pusha
dec
cwde
or
and
retf
mov
stc
cmc
push
rol
mov
lock
(bad)
stos
sbb
push
jnp
outs
sbb
xchg
sub
fwait
mov
inc
jg
int3
or
jbe
out
outs
jl
cmps
xchg
dec
jo
int
pop
jbe
imul
sbb
rcr
mov
(bad)
mov
adc
sar
into
xchg
push
pop
fs
xor
mov
push
out
or
pop
js
in
cmp
push
mov
or
mov
push
idiv
pop
fs
das
mov
bound
nop
cwde
push
pop
fs
xchg
jp
push
loopne
mov
lods
jl
retf
mov
xor
rcl
adc
xor
inc
sbb
div
test
inc
mov
adc
ins
lods
sbb
data16
test
pushf
ss
push
sahf
jno
mov
inc
jne
cmc
sbb
or
cs
sbb
cmc
(bad)
mov
jne
(bad)
rol
popa
(bad)
mov
fnstsw
cmc
mov
pop
pop
pop
(bad)
pushf
out
mov
push
retf
popa
jge
xchg
fisttp
movs
sbb
(bad)
add
fmul
outs
loop
xchg
hlt
pop
in
push
mov
aas
push
and
inc
mov
push
dec
adc
push
lods
lods
rol
dec
ds
je
addr16
call
out
sbb
leave
lea
pop
cwde
stc
mov
pop
dec
pop
xor
pop
add
add
fild
sub
add
cld
or
(bad)
iret
sub
jp
sbb
xchg
aaa
jl
repz
xchg
jmp
sub
cmc
mov
lock
jne
inc
pop
out
psubsb
pop
mov
mov
sbb
pop
pusha
or
jnp
mov
cdq
mov
dec
xchg
pop
enter
out
mov
je
push
sub
mov
mov
jle
and
sahf
shl
(bad)
push
arpl
icebp
xor
push
outs
lods
loopne
dec
shl
mov
dec
jmp
mov
jmp
sahf
xchg
inc
push
(bad)
and
adc
mov
shl
clc
add
je
hlt
ret
mov
jl
dec
xchg
inc
mov
cdq
xor
push
pextrw
es
mov
stc
cmps
arpl
fld
aam
mov
inc
das
jecxz
fabs
dec
(bad)
mov
cli
mov
loop
mov
rol
dec
mov
sbb
inc
lods
fadd
arpl
sub
add
addr16
adc
test
push
int3
shl
or
mov
fisttp
push
and
pop
or
iret
ror
rcr
xchg
cli
movs
stc
mov
imul
cwde
(bad)
in
push
xlat
add
pop
pushf
cdq
mov
(bad)
popa
and
fwait
jge
sub
pop
fs
icebp
inc
push
ja
imul
fisttp
mov
xchg
inc
imul
and
xchg
jae
popf
mov
push
mov
and
sti
dec
push
xchg
jmp
push
cs
call
jle
and
mov
cli
(bad)
jae
inc
clc
cmc
jno
call
mov
sbb
jne
(bad)
dec
dec
mov
pop
pop
(bad)
inc
xor
jmp
cmps
jp
ja
shl
ja
or
test
popa
and
pop
pop
push
das
push
pushf
jg
daa
leave
pusha
pop
add
mov
mov
mov
pop
jecxz
test
and
rcl
pop
xlat
mov
sub
xchg
int3
in
pop
ins
(bad)
mov
push
mov
jns
stc
mov
fistp
cld
add
repz
popa
push
aas
in
jp
loope
pop
pop
bound
mov
pop
xlat
iret
aam
in
stos
sti
js
inc
cdq
ds
xchg
push
jo
imul
pop
mov
das
push
fwait
loope
shl
jp
pop
mov
out
pop
jae
cwde
fwait
adc
inc
sahf
imul
hlt
stos
dec
pop
mov
mov
es
loopne
xchg
cmps
sub
push
jb
adc
into
jmp
loop
out
push
mov
cmp
lahf
cmp
jb
int3
push
sti
cli
in
jns
mov
sbb
xchg
sbb
sub
popf
cmp
mov
dec
pop
pop
retf
dec
mov
dec
cdq
das
jns
fstp
pop
add
adc
cdq
movd
popa
mov
push
(bad)
cmp
sbb
cmp
cwde
iret
ret
add
sub
out
lock
mov
xor
sub
cmps
sbb
je
and
es
ins
jb
jp
jnp
dec
(bad)
stos
pop
pop
(bad)
lds
popf
stos
push
xor
push
mov
inc
popf
add
aaa
sbb
dec
aas
outs
push
lock
addr16
push
mov
stos
push
rep
rol
xor
fldenv
xchg
cmps
in
push
inc
inc
lods
sbb
xchg
arpl
pop
movs
out
cli
mov
test
pop
add
repz
addr16
cmps
pusha
sub
jmp
dec
xchg
inc
loop
mov
pop
and
add
aad
jns
lahf
std
xchg
nop
ret
or
imul
mov
mov
mov
xor
mov
cmp
enter
pushf
xor
xchg
jmp
pop
dec
repnz
xchg
scas
xor
iret
into
loop
sbb
mov
push
mov
sub
cli
jl
mov
sub
pop
test
adc
inc
cld
add
popa
ja
retf
jmp
cmp
and
xchg
pop
adc
add
mul
aaa
jmp
test
cmps
frstor
or
jl
pop
lds
scas
arpl
or
imul
test
cmp
bound
sar
arpl
lock
popa
inc
dec
jmp
fldenv
mov
aaa
hlt
and
pop
mov
adc
push
icebp
das
and
mov
mov
(bad)
sbb
adc
je
mov
aas
mov
mov
rol
xchg
retf
xchg
jge
mov
test
cmps
add
xor
dec
scas
int
cli
adc
inc
push
mov
lods
out
cli
movs
aaa
imul
fisubr
imul
imul
cli
mov
dec
and
movs
cli
push
sub
jmp
xor
inc
or
push
rcr
push
xchg
cwde
mov
inc
xchg
mov
mov
pop
shl
loop
sub
sbb
push
xchg
mov
add
sub
aaa
(bad)
movs
movs
xor
loop
adc
inc
pushf
sub
push
xchg
aam
data16
xor
fisttp
mov
xchg
outs
in
leave
cdq
xchg
xchg
pop
xor
push
repnz
pop
adc
pop
and
mov
push
mov
mov
fisttp
mov
fistp
rcr
sub
adc
enter
out
test
sbb
fnsave
(bad)
cmp
ss
popa
xchg
push
add
xchg
xchg
daa
mov
cmps
cmp
mov
ins
mov
xchg
xchg
push
xchg
lods
dec
or
xlat
sub
pop
ror
push
xchg
mov
jp
add
out
clc
sub
add
sbb
adc
cmp
data16
imul
arpl
out
mov
hlt
dec
ins
imul
call
sub
or
sti
ja
retf
mov
mov
sbb
pop
int3
sbb
pushf
frstor
scas
add
dec
neg
test
nop
mov
cdq
mov
ret
pop
popf
fild
(bad)
sub
popf
pushf
or
lock
scas
pop
sbb
call
fnclex
xchg
in
mov
fbld
adc
cli
jno
add
fistp
mov
(bad)
pop
ficomp
push
es
sbb
ins
cmp
cmp
inc
cmps
jmp
xor
xchg
xor
ins
pop
cdq
or
clc
fwait
sbb
inc
mov
sub
xchg
hlt
cmp
test
cmp
enter
(bad)
cwde
cdq
mov
inc
mov
test
cmp
lods
sbb
inc
pop
aad
cmp
push
push
push
(bad)
std
popa
aaa
sub
inc
jg
jecxz
push
or
dec
js
inc
test
ficom
sub
jbe
jo
idiv
or
arpl
inc
pop
icebp
call
popf
or
call
jp
lahf
outs
mov
dec
in
jp
stos
dec
mov
mov
cmps
add
adc
jb
push
jge
and
sbb
aas
shl
push
shl
in
inc
in
inc
push
sahf
jecxz
outs
or
dec
test
ss
xor
or
popa
inc
out
call
jmp
inc
ja
add
daa
adc
cmp
scas
(bad)
outs
pushf
sbb
xor
imul
movs
adc
or
ss
jno
inc
test
push
daa
pop
mov
imul
inc
jmp
loopne
xchg
add
mov
js
(bad)
out
adc
xor
mov
lock
hlt
cmp
push
imul
pop
popa
inc
add
dec
and
mov
test
out
xchg
rcl
mov
adc
sbb
push
inc
xor
daa
inc
(bad)
dec
xchg
sbb
aam
stc
pop
cdq
test
xchg
dec
sub
push
push
aam
lock
xor
push
in
shl
jne
inc
repnz
retf
sub
jp
sbb
xchg
sbb
push
inc
clc
sub
xor
cwde
mov
mov
add
lods
and
mov
jno
add
jg
push
mov
loopne
sbb
mov
cmps
push
call
pop
jge
xchg
cmc
enter
addr16
inc
test
shl
add
xchg
test
je
sbb
or
out
jo
push
mov
mov
cdq
repz
lahf
mov
ret
jg
in
mov
push
(bad)
ds
xor
cmps
pop
add
and
es
cmp
loope
dec
shr
ds
add
jb
rcr
aas
pop
pop
popf
jecxz
lea
add
cmps
stos
jns
aaa
jmp
jmp
push
pop
pop
or
push
arpl
mov
cdq
jo
push
sbb
jnp
push
xchg
xor
add
cmp
or
pop
push
xchg
sbb
sub
(bad)
jl
(bad)
call
mov
in
(bad)
jno
jno
xchg
lock
ja
mov
lock
scas
ss
xchg
ror
retf
mov
fild
jmp
setae
xchg
out
fistp
jno
dec
fs
jg
test
pop
test
push
push
push
cdq
scas
mov
test
pop
push
test
iret
(bad)
sbb
and
nop
adc
inc
fisttp
loopne
arpl
jo
cmp
ins
sahf
js
outs
sbb
out
test
out
mov
cmp
leave
or
jb
stos
sub
leave
fst
xor
xchg
adc
push
retf
pop
pop
cmp
sub
loope
sbb
in
mov
inc
or
pop
dec
pop
ret
mov
pop
push
loope
cld
sub
sub
adc
std
sub
dec
lahf
imul
dec
cmp
cwde
push
cmp
shl
mov
xchg
and
outs
push
mov
cs
pop
cmc
dec
addr16
xor
push
pop
and
pop
cmp
and
les
mov
jno
cmp
cmps
or
stc
aas
pop
mov
push
sub
in
sbb
dec
test
sahf
shr
mov
xor
add
cld
lock
icebp
or
fst
inc
rcl
xor
daa
mov
popf
jg
push
jecxz
mov
sub
sbb
in
mov
inc
bound
adc
icebp
mov
cmp
jl
and
push
jmp
fist
or
inc
xchg
push
push
sbb
mov
scas
mov
mov
mov
clc
cmc
xchg
shl
int3
adc
adc
in
mov
loop
int3
dec
sbb
ins
add
pop
jecxz
enter
dec
loopne
lea
and
loopne
repnz
leave
sbb
idiv
div
pushf
std
and
pop
jl
stos
cmc
neg
je
stos
and
dec
enter
sub
inc
push
xor
inc
pop
and
mov
out
test
imul
scas
jne
mov
inc
dec
jl
jle
gs
push
mov
bound
push
jae
and
sbb
dec
mov
aad
adc
ss
and
adc
bound
mov
push
(bad)
add
mov
adc
les
cmp
add
dec
and
and
movs
xchg
mov
mov
sub
jae
call
rcr
pop
sub
js
dec
sub
jecxz
dec
ds
xor
pop
ficomp
sahf
push
(bad)
in
dec
xlat
lock
adc
unpckhps
lock
cwde
jmp
call
iret
push
pop
ret
mov
retf
cld
inc
jbe
push
pop
popf
pop
and
popf
lea
(bad)
cmp
xlat
push
sub
in
and
sub
sub
adc
stc
mov
mov
adc
shr
mov
push
cmp
lods
jmp
(bad)
rol
outs
mov
rcl
test
cli
ins
stc
mov
outs
xor
jb
add
call
cmp
add
stos
and
pop
pop
dec
mov
cmp
and
xlat
pop
std
xor
xchg
clc
jge
mov
mov
nop
out
daa
ja
popf
stos
dec
and
imul
call
and
ins
mov
arpl
lahf
ins
inc
mov
mov
(bad)
fidivr
in
jl
or
mov
pop
or
jg
mov
mov
je
add
mov
hlt
std
aas
enter
or
jnp
in
and
cli
fst
psrld
dec
dec
adc
out
jmp
rol
cmps
or
mov
push
sbb
gs
fnstcw
cmp
call
fidiv
fisubr
cmp
or
inc
ins
es
jno
fst
add
xchg
mov
jno
pmaddwd
jecxz
or
add
es
xchg
test
and
push
ds
out
add
clc
xchg
mov
cmp
icebp
mov
fs
push
or
retf
dec
jg
inc
dec
pusha
mov
push
adc
outs
adc
pop
adc
retf
ins
sbb
mov
mov
dec
jae
jle
lahf
loopne
imul
sub
and
outs
xor
or
cmps
ins
mov
inc
sub
cmp
data16
cmp
add
pop
iret
pop
ds
sub
mov
imul
cmp
mov
ss
dec
pusha
imul
mov
xlat
jmp
xchg
sar
xchg
lds
jp
cmp
loop
test
repz
int
mov
pop
jecxz
test
and
fsub
push
sub
pop
sbb
dec
lea
xchg
push
adc
add
icebp
mov
scas
mov
mov
in
popa
icebp
in
or
hlt
loope
push
dec
pop
mov
pusha
mov
icebp
inc
pop
cmp
jge
fmul
adc
cmp
dec
pop
(bad)
std
jle
inc
in
sbb
enter
sar
pop
adc
add
xor
test
idiv
ja
sbb
push
jnp
scas
push
mov
cmp
sbb
inc
ins
push
es
or
cwde
inc
pop
mov
and
cmps
push
pop
leave
mov
rcr
mov
cmc
push
push
push
cmp
shl
mov
dec
ror
jb
sub
in
aas
dec
pop
or
mov
stos
shl
(bad)
add
xchg
in
dec
mov
mov
add
aam
sahf
push
sub
adc
mov
jns
leave
and
sar
maxps
aad
shr
xor
loop
sub
sub
jns
lods
rol
loope
das
cmc
arpl
push
mov
ins
aas
jmp
mov
(bad)
in
ror
loop
bound
fdiv
mov
cmc
or
pop
inc
inc
and
and
or
packuswb
test
loope
scas
mov
jmp
push
ja
ret
hlt
les
or
stos
iret
mov
fs
(bad)
scas
(bad)
out
out
mov
cmps
mov
mov
loop
mov
adc
dec
cmp
aad
add
sbb
add
cmp
cwde
push
dec
mov
cwde
mov
mov
pop
mov
or
jl
push
cmp
xor
cs
dec
jne
sub
or
pop
mov
clc
adc
dec
pop
lahf
cmp
fimul
std
pop
xchg
pop
xchg
xchg
dec
and
xlat
fdivr
xor
fwait
pusha
and
xchg
out
cmp
sub
ins
and
iret
mov
cmp
sub
mov
cmp
inc
xchg
xchg
pop
jo
mov
into
int3
mov
call
mov
or
xchg
stos
scas
xor
test
add
sahf
sti
inc
in
cli
or
jbe
jecxz
into
div
and
xor
cwde
mov
fs
rol
fcomp
mov
cli
out
mov
ja
das
push
std
xchg
fincstp
push
(bad)
cmps
jns
das
xchg
dec
ficomp
arpl
pop
sbb
test
cmp
repz
fsubr
mov
mov
imul
aas
dec
and
or
add
ret
shl
xor
(bad)
lock
mov
xchg
pushf
cmp
push
in
fcomp
cmp
sub
fild
fmul
das
clc
mov
jl
or
pop
mov
cdq
iret
in
mov
mov
(bad)
int3
mov
inc
add
(bad)
hlt
jo
pop
stos
(bad)
push
push
leave
shr
arpl
test
mov
pop
ret
mov
(bad)
icebp
ss
stos
retf
lahf
sbb
cli
ror
xchg
dec
mov
dec
cmp
leave
ins
fcmovnu
xchg
mov
ret
push
pop
not
cdq
sub
in
mov
lods
push
jmp
mov
or
cmp
stos
js
js
ret
retf
repnz
pop
fnstcw
push
es
sub
(bad)
pop
xlat
addr16
jne
xchg
rcl
cmp
rcr
sub
xor
fst
sti
lahf
sahf
xor
push
push
xlat
jns
into
arpl
cmp
lea
int
rol
or
cdq
fst
(bad)
push
or
dec
ret
pusha
loope
aam
movs
sub
psubb
fistp
loopne
je
mov
pop
sub
and
(bad)
cmp
sub
ss
push
daa
cmp
retf
scas
cwde
psubw
stc
int
inc
jge
call
aaa
jmp
inc
movs
cmps
push
test
aas
daa
pop
cdq
aad
adc
mov
js
or
sar
jl
cwde
imul
outs
test
mov
mov
je
dec
add
fild
lock
push
lock
sub
add
mov
mov
push
out
nop
jbe
in
sar
push
adc
xor
ror
out
and
sub
sub
(bad)
mov
(bad)
and
pusha
cmc
inc
pop
inc
lock
ins
or
and
test
test
in
sbb
cmp
dec
inc
push
or
stos
sbb
repz
cli
(bad)
outs
adc
imul
and
mov
push
hlt
cdq
cmp
mov
es
das
pusha
add
shr
stos
and
cmps
cmc
sub
and
xor
cmp
jg
loopne
(bad)
stc
add
sahf
pop
sti
imul
mov
jmp
inc
or
jno
pop
inc
mov
mov
xchg
pusha
int3
add
push
cmp
popa
movs
frstor
(bad)
mov
push
mov
xchg
dec
xchg
cmp
lahf
in
push
jp
aaa
mov
mov
inc
mov
jmp
cmp
sar
mov
cs
xor
jbe
cwde
int3
pop
add
xor
cmp
fmul
pusha
mov
(bad)
fwait
mov
cmp
arpl
imul
sub
adc
adc
or
xchg
out
ss
or
not
jnp
and
and
xchg
gs
push
sbb
pop
call
mov
mov
xor
adc
adc
mov
push
cmp
mov
sbb
cmp
stos
rcr
jbe
inc
fsub
cmps
cmp
test
std
jnp
(bad)
xor
add
sbb
cli
out
outs
or
add
in
mov
in
repz
out
test
jo
jb
test
out
aas
push
mov
jmp
and
dec
mov
data16
adc
pop
dec
iret
jo
cli
jbe
jns
and
xor
pop
mov
inc
xor
sahf
repz
sbb
xchg
xchg
leave
jp
enter
mov
jl
cmps
mov
cmps
loopne
aad
sub
push
pop
mov
mov
push
test
mov
push
hlt
or
popf
inc
repz
pusha
loop
sbb
jmp
lds
repnz
jo
push
sub
imul
cmc
xor
mov
sti
daa
stc
pop
jae
and
inc
popf
xlat
mov
arpl
mov
in
cmp
loop
test
inc
cld
test
popa
cmp
iret
cmp
out
push
push
call
jge
mov
(bad)
cmp
xor
mov
jmp
int3
cld
lds
les
gs
movs
mov
popf
add
xlat
retf
mov
test
lds
jmp
mov
jo
pop
mov
sbb
and
or
pop
jmpw
icebp
add
sbb
fwait
nop
gs
pop
cmps
mov
test
mov
or
and
and
std
neg
cmc
in
(bad)
call
adc
inc
mov
pxor
ins
push
sahf
and
push
rcl
mov
je
rcl
rol
adc
xchg
sub
and
pop
cs
jl
mov
xchg
xor
xor
mov
cs
pop
sahf
test
iret
sti
js
movs
out
mov
lea
pop
adc
sub
sub
ja
rcr
repnz
clc
push
loopne
push
(bad)
push
loop
cmp
adc
jne
ins
cs
push
dec
out
cmp
mov
leave
outs
bound
sbb
mov
xchg
mov
xchg
push
or
repz
jno
xchg
outs
xor
loope
dec
sbb
sti
ds
in
clc
inc
mov
inc
nop
fstp
call
cli
in
xchg
iret
adc
push
inc
xchg
add
jb
mov
fwait
leave
inc
mul
cmp
cmc
dec
shl
mov
shl
xor
mov
cdq
fidivr
add
outs
dec
mov
retf
xchg
outs
(bad)
lods
inc
cwde
outs
std
leave
fwait
cmp
push
retf
popa
mov
cmp
loope
stc
aam
fucomi
cmp
test
bnd
(bad)
inc
mov
mov
lods
pop
call
je
rol
cmp
ds
push
lods
jmp
inc
pop
ret
jns
xchg
loope
sti
fcmove
sbb
mov
sub
jg
mov
add
iret
int
lock
jb
(bad)
(bad)
loop
into
(bad)
adc
fwait
out
sbb
popa
jmp
jle
lods
ds
pop
adc
pop
inc
dec
ds
mov
lds
mov
or
and
adc
rcr
xor
outs
dec
stc
cli
pop
call
inc
ror
call
add
ror
mov
dec
jne
std
push
sbb
fsub
jbe
imul
or
or
leave
iret
dec
pushf
push
or
pusha
inc
pop
xchg
mov
push
sbb
outs
scas
sub
mov
shl
dec
jg
retf
jg
xlat
inc
int
push
push
out
sub
cmp
ds
lods
rcr
in
sub
mov
cmp
sub
xchg
or
(bad)
mov
xchg
jp
add
and
adc
aad
fs
es
jp
ins
dec
fdivr
xor
mov
add
and
fidivr
nop
adc
dec
sub
push
mov
xchg
cmp
mov
ss
test
test
aaa
jo
xchg
xchg
jae
mov
jo
add
aad
and
daa
inc
test
pop
sahf
fcom
iret
xlat
ins
mov
scas
push
out
push
cmp
call
rol
cwde
stos
loopne
mov
leave
inc
les
(bad)
add
push
fcmovnb
cmps
cmp
retf
sub
mov
enter
js
ud1
fsubr
or
mov
(bad)
jns
ds
pop
sbb
jmp
push
retf
(bad)
js
aam
popf
aad
jo
pop
sbb
out
mov
or
ror
jne
sti
cmc
(bad)
in
cmp
scas
and
or
xlat
mov
pop
mov
cmps
jl
sub
sbb
ins
outs
rcr
cmps
stos
lock
mov
popf
sbb
repz
xlat
cli
shr
mov
jmp
das
dec
cli
das
and
mov
jge
inc
or
mov
sub
cmp
push
aam
test
mov
in
cmc
cmp
sbb
clc
ja
in
mov
call
mov
and
pop
add
xor
xor
mov
and
js
cmp
pop
push
inc
cmovge
jle
scas
test
popf
fistp
cmc
aas
jecxz
repnz
or
and
sbb
xchg
inc
es
dec
fisubr
sub
out
push
loop
lds
adc
mov
jb
test
aad
and
push
(bad)
pusha
out
repnz
lods
jg
mov
lods
mov
push
fsubr
sahf
mov
sbb
mov
pop
pop
cmp
std
addr16
mov
push
in
sub
add
pop
out
jg
sub
mov
mov
sub
in
cmp
lock
js
inc
(bad)
push
push
mov
add
(bad)
cmc
push
test
sti
scas
mov
jg
jle
out
mov
test
fcom
add
sub
(bad)
push
add
jb
bound
in
mov
jb
add
pop
not
leave
ret
scas
sub
cmp
or
retf
movs
iret
nop
cld
pop
xchg
push
enter
mov
mov
xlat
mov
or
xchg
cmp
vpmacssdqh
jns
popf
adc
cmc
push
cmp
cmp
fwait
clc
test
scas
test
inc
and
mov
repz
xchg
in
sub
stc
ror
sbb
out
sbb
repz
loopne
bound
adc
lods
aas
ins
mov
dec
lods
cdq
fld
rcr
retf
mov
jb
(bad)
fadd
mov
adc
push
aas
outs
les
mov
lahf
mov
or
mov
mov
mov
sbb
int3
or
adc
sub
in
cmp
sub
xor
jge
sbb
xor
test
(bad)
fcomp
mov
inc
jecxz
js
push
lods
jp
int3
out
push
add
jnp
retf
mov
and
into
call
out
mov
sub
mov
in
add
xor
mov
xor
mov
ret
adc
popf
lea
arpl
jmp
into
retf
pop
test
pop
sub
adc
jle
cmp
dec
mov
or
cmp
into
or
je
test
jl
lods
lods
ds
adc
sub
mov
dec
sahf
fld
imul
lods
jmp
arpl
cmc
gs
ror
dec
das
jb
jmp
cdq
jnp
or
leave
push
mov
leave
cs
idiv
push
cld
(bad)
pop
dec
jmp
push
and
dec
dec
mov
sbb
gs
mov
test
js
sub
fsin
mov
push
mov
push
xchg
movs
test
push
xchg
mov
test
xor
push
jbe
mov
loop
shl
cmp
jmp
dec
dec
cli
fcmovnbe
mov
and
dec
cli
or
repnz
mov
cwde
push
sub
outs
pop
fst
hlt
fistp
mov
cmp
cwde
outs
sub
mov
jo
les
leave
jb
ins
scas
test
std
mov
dec
mov
das
sbb
arpl
mov
in
(bad)
jp
push
ror
call
inc
pop
mov
cmps
push
mov
cmps
xchg
call
icebp
pop
mov
daa
and
push
aad
loop
add
nop
mov
jae
dec
repnz
outs
sti
lds
fnstenv
retf
cmp
jo
mov
mov
or
(bad)
inc
pushf
cs
retf
ja
je
lds
(bad)
mov
(bad)
jmp
xchg
dec
enter
mov
(bad)
sub
shl
(bad)
sti
dec
add
mov
imul
cmp
loop
jp
push
mov
fidiv
xchg
jge
ins
xor
or
sbb
xor
mov
aam
jecxz
inc
push
aaa
cdq
neg
push
call
shl
stos
test
inc
and
loop
jmp
push
cdq
pop
sar
mov
mov
bound
movs
icebp
pushf
(bad)
sar
and
bound
(bad)
aam
add
xchg
rcr
sub
xchg
mov
pop
and
inc
cmovae
sbb
ret
ja
iret
lahf
jo
adc
or
aas
sbb
repnz
xchg
dec
test
mov
cs
and
mov
and
and
shr
sub
jmp
adc
inc
ds
fwait
dec
inc
stc
arpl
daa
cmp
or
push
je
loope
push
in
or
int3
dec
mov
pop
hlt
je
stc
sub
lock
cmp
fmul
push
in
dec
or
xchg
fwait
xchg
xor
aaa
lahf
sbb
pushf
loope
push
ret
fisubr
xor
xchg
add
pop
sub
scas
dec
add
sub
mov
mov
xor
retf
stc
sahf
push
sbb
sub
movs
cs
jns
or
cmps
ins
dec
pop
jnp
push
dec
xor
out
xor
mov
cmps
or
jg
mov
inc
stc
loopne
jne
push
dec
out
fwait
mov
imul
xchg
inc
je
dec
pusha
jg
xor
sub
adc
inc
cmp
lea
mov
sbb
adc
cli
adc
movs
dec
lahf
adc
repz
xor
movs
inc
pop
loop
mov
push
push
add
int3
fistp
movs
fs
mov
fnstenv
sbb
test
adc
bound
ret
xor
jno
adc
push
or
ret
or
(bad)
fsub
fadd
adc
pop
outs
sbb
push
out
mov
ret
xchg
jg
dec
jecxz
fistp
sbb
xchg
cs
movs
push
fdiv
call
fist
icebp
add
and
(bad)
clc
pop
sub
test
pop
fld
cld
scas
mov
sbb
xor
fwait
nop
inc
sub
xor
jb
fsub
or
lea
nop
or
movs
enter
enter
inc
addr16
sub
xchg
dec
xor
pop
fwait
hlt
out
push
sahf
dec
pop
add
jnp
cdq
daa
into
jae
xor
pop
into
push
push
add
mov
push
sbb
push
pop
fdiv
repnz
imul
fcomp
xor
jmp
mov
cli
jnp
pop
jge
in
mov
cmp
aaa
mov
cmp
cmp
mov
cli
or
jns
not
arpl
out
xchg
repz
push
or
mov
or
aam
adc
mov
push
es
mov
cs
xchg
pop
mov
pop
dec
xchg
or
add
in
xchg
bound
enter
mov
bound
xchg
sbb
mov
les
int3
fsub
fwait
xchg
jmp
int3
jecxz
cmp
mov
mov
push
jo
mov
mov
dec
pop
call
cld
mov
mov
aad
js
std
dec
push
pop
test
xchg
ds
push
std
inc
cdq
outs
(bad)
cld
cmp
(bad)
cli
scas
push
sahf
imul
ins
or
push
aas
out
fcmovnb
sbb
fst
cmc
fs
cmps
mov
lahf
mov
mov
jb
popf
test
(bad)
imul
mov
inc
mov
int
test
mov
pop
ins
movs
pop
retf
cwde
(bad)
lea
mov
stc
mov
into
jecxz
ss
(bad)
fnstenv
push
into
inc
sub
dec
inc
cmps
shr
mov
dec
(bad)
xchg
cdq
addr16
cdq
sbb
mov
movs
out
xchg
xchg
sbb
dec
mov
xor
mov
cmp
mov
aas
dec
test
pop
lock
add
jmp
out
mov
sahf
cli
push
or
jns
jo
inc
(bad)
fidivr
shr
add
and
mov
cli
fst
in
nop
movs
mov
and
xchg
push
bound
sbb
ret
inc
add
es
xor
gs
test
jbe
xchg
imul
push
adc
shl
xor
jecxz
jae
or
add
jecxz
test
mov
out
cwde
or
sbb
fstp
sbb
jecxz
add
add
lahf
xor
jae
jp
mov
or
dec
out
sar
in
cmps
aad
gs
ret
sbb
(bad)
test
das
shl
call
icebp
cmps
fistp
xchg
(bad)
inc
push
cmp
pop
mov
sbb
fidivr
fild
shl
mov
push
mov
cmp
jmp
test
fld
push
push
jno
jmp
leave
loopne
sti
jmp
xor
add
shl
mov
cmp
jns
dec
sbb
inc
mov
jle
dec
jle
push
mov
stos
sub
mov
das
mov
lock
gs
xor
clc
cmc
mov
push
nop
in
jecxz
dec
call
xor
sub
call
outs
ins
fcomi
pop
aad
xchg
jo
enter
dec
xchg
retf
int3
push
and
adc
xor
pop
add
nop
ss
dec
lea
out
xchg
add
rcr
ss
loope
ins
add
mov
shr
dec
xor
mov
and
mov
fucom
stos
adc
inc
mov
jo
bnd
(bad)
jle
mov
inc
inc
push
or
mov
int
jl
mov
retf
imul
push
mov
stos
pop
xchg
lods
(bad)
shl
pusha
mov
cmp
inc
fnstenv
push
mov
sbb
push
inc
inc
mov
cmp
mov
xchg
inc
sar
cmps
jle
mov
xchg
dec
popf
xchg
daa
jb
rol
aam
mov
xchg
or
fdivp
(bad)
xchg
out
pop
in
xchg
out
aas
hlt
dec
inc
or
jno
mov
push
mov
cmps
xor
sub
mov
(bad)
bound
sbb
(bad)
mov
fidivr
adc
dec
mov
ret
loope
scas
and
cmp
cmp
movs
sub
dec
mov
nop
div
bound
mov
and
enter
in
lods
sar
(bad)
neg
cmp
add
pop
xor
es
xchg
dec
dec
inc
jb
outs
dec
add
cmp
das
sbb
cwde
sahf
cmp
jo
mov
fnstsw
jne
je
sqrtps
mov
mov
mov
cmp
mov
inc
add
arpl
adc
pop
iret
sub
sub
shl
push
mov
adc
inc
div
lds
jno
popf
not
jl
int
mov
std
mov
inc
fisub
je
loopne
sbb
cs
mov
fwait
out
jns
movs
inc
pop
enter
pop
xchg
sub
lods
mov
mov
jecxz
ja
repz
test
xor
les
aam
xchg
pushf
cdq
clc
sti
or
adc
add
push
inc
adc
lahf
push
shl
inc
pop
sbb
dec
cli
clc
mov
jle
in
nop
jl
mov
xor
retf
jnp
adc
dec
and
out
fiadd
jecxz
push
daa
hlt
and
je
int
int3
lods
das
retf
ss
jmp
cmp
pop
mov
retf
pop
setl
test
inc
popa
mov
popf
lock
repz
loopne
fisttp
adc
xchg
lea
daa
xor
rol
jo
adc
mov
sub
scas
adc
cmp
or
adc
mov
pop
inc
dec
mov
cmovno
inc
xchg
pop
and
iret
push
in
inc
mov
aaa
mov
ror
cwde
enter
in
shl
int
mov
cwde
mov
call
inc
jnp
jecxz
daa
repz
adc
xchg
xor
or
ficom
jnp
cbw
cmp
idiv
push
and
ins
aaa
out
out
icebp
clc
lods
lods
xchg
inc
popa
mov
sbb
adc
and
push
shld
dec
scas
cmp
hlt
adc
sub
mov
imul
mov
out
enter
add
fsub
mov
sub
in
fst
add
int
sub
xor
mov
mov
(bad)
sahf
(bad)
xor
stos
ss
movs
mov
or
fadd
sbb
jnp
in
sub
adc
mov
movs
or
dec
mov
repz
in
add
scas
test
popf
or
inc
or
addr16
cmc
or
or
pop
repnz
scas
push
pop
add
int3
sub
je
mov
jne
add
pmaxub
cld
fisubr
mov
lahf
jne
in
pop
(bad)
xor
clc
xor
xor
(bad)
out
adc
inc
mov
sbb
aaa
jns
cdq
lea
aad
fs
cmp
dec
iret
push
mov
int3
pop
push
iret
test
mov
pop
ficom
xchg
adc
push
mov
xchg
les
stos
and
popf
pusha
sub
add
cmps
data16
fdivr
xor
mov
les
in
mov
xchg
repnz
mov
pop
sbb
jno
add
pop
sbb
adc
mov
cmps
or
inc
inc
mov
jae
xlat
loope
imul
rcr
or
jg
mov
cmc
out
das
sub
sub
std
push
(bad)
inc
push
data16
inc
fisub
ror
add
sub
inc
iret
push
rcr
rcl
lds
sub
mov
cmp
sbb
jp
arpl
sahf
push
fsubr
fst
xchg
push
xchg
imul
cmp
cmp
sbb
sahf
rol
frstor
sub
call
and
or
push
inc
add
and
cmp
fwait
mov
cld
push
neg
cmp
xchg
dec
fbld
int
daa
xchg
adc
fmul
jmp
test
pop
mov
xchg
dec
daa
(bad)
movs
mov
xchg
mov
mov
retf
xor
xchg
popa
(bad)
lea
mov
dec
sbb
jns
div
jnp
jle
sar
sub
pop
popa
inc
pop
jb
xchg
dec
pop
xor
pop
popa
xor
adc
aaa
inc
adc
sub
xlat
mov
or
movs
popf
inc
dec
adc
call
mov
and
lahf
aam
sub
dec
das
popf
jbe
push
int
jmp
or
div
inc
out
push
cwde
xor
in
push
ret
int
cmc
sti
add
push
pop
sbb
cli
push
les
sub
jecxz
xor
gs
and
aas
ins
xor
xchg
in
mov
cmps
fwait
lock
jnp
mov
push
dec
das
ds
clc
dec
add
pop
xchg
dec
sbb
ss
cmp
push
mov
movs
inc
fsubr
and
cmps
or
cwde
fld
ins
push
les
and
lea
or
ficomp
jne
sbb
sub
out
jns
xor
push
jge
fnop
push
xchg
pop
push
push
cmc
fdivr
mov
sub
std
iret
mov
inc
mov
movs
loop
ins
sbb
push
retf
mov
(bad)
ss
cmp
fiadd
scas
out
mov
mov
test
inc
jo
inc
rol
inc
ret
adc
movs
leave
ret
inc
mov
dec
pop
push
mov
jo
lock
xor
aam
in
sbb
lock
rol
ins
mov
adc
sbb
pop
xor
jle
cld
ds
js
or
push
sbb
dec
cmp
dec
mov
ret
test
dec
outs
cmp
mov
inc
jp
inc
add
mov
ret
lods
dec
cmp
ds
push
mov
lea
out
xor
xlat
pop
bnd
cld
lahf
pop
out
addr16
mov
outs
les
(bad)
in
out
inc
mov
int3
cmp
mov
fld
cld
arpl
not
mov
dec
xchg
and
sahf
int3
cwde
dec
sbb
add
push
fsub
cmp
pushf
(bad)
push
pop
imul
push
rcl
outs
aas
fmul
fs
(bad)
mov
dec
or
push
pop
add
push
sub
dec
cli
std
popf
bound
adc
out
cmp
mov
jg
ret
imul
push
pop
sbb
hlt
dec
push
addr16
xor
mov
clc
jle
jnp
ret
cwde
je
mov
clc
push
sti
leave
push
push
bsr
popf
add
popa
push
mov
cmp
call
sub
adc
out
sbb
pop
outs
pop
fsubr
mov
dec
fwait
push
loope
pop
jae
in
inc
shr
fs
xor
push
pop
je
dec
fwait
inc
into
rol
jmp
xchg
imul
cdq
fwait
jp
(bad)
sbb
sbb
xchg
push
push
and
sub
lock
mov
aas
mov
lds
lods
sbb
sub
daa
or
mov
fadd
retf
mov
adc
repz
dec
or
push
mov
mov
cdq
aad
lahf
jmp
ds
mov
jns
outs
call
mov
jmp
ficomp
xchg
mov
jo
dec
nop
fwait
movs
(bad)
push
inc
sub
leave
scas
call
push
sbb
push
lods
fstp
ds
mov
push
stc
xchg
and
sbb
xchg
out
and
cmp
(bad)
push
sti
jmp
jns
lock
fbld
push
scas
sbb
jne
sub
push
sar
jmp
cmp
sub
pop
dec
adc
pop
push
add
and
gs
push
jbe
push
shl
xchg
pop
pop
mov
cmp
enter
push
ret
xchg
rol
mov
inc
shl
ret
cli
int
mov
wrmsr
loopne
div
dec
test
pop
out
jmp
cmc
jp
jno
sahf
fiadd
mov
cmps
or
call
(bad)
pusha
and
(bad)
mov
mov
pop
div
cmp
icebp
mov
(bad)
and
mov
and
sbb
lock
pop
ja
lahf
sub
mov
adc
jmp
sub
xor
outs
push
and
sbb
leave
test
push
je
and
jo
(bad)
aam
retf
xor
sbb
and
jp
ficom
dec
aaa
pop
add
jbe
sub
dec
push
cmp
jmp
push
push
fimul
pop
rcl
sbb
fidiv
mov
mov
lds
clc
sub
sub
push
push
sbb
in
add
mov
mov
pop
out
out
loope
imul
fwait
mov
fidiv
sbb
sub
fdivr
ror
rcr
inc
push
mov
push
or
jle
or
jne
mov
inc
cwde
sub
fwait
push
mov
mov
adc
or
jmp
js
jae
pop
mov
or
shr
xchg
jns
mov
push
in
shr
das
retf
idiv
retf
push
adc
and
(bad)
in
or
into
mov
retf
xchg
ret
lds
sahf
inc
jle
in
sahf
addr16
imul
pop
aam
idiv
pop
cld
ffree
sub
adc
inc
cli
jp
dec
cmp
dec
mov
cdq
mov
pop
clc
xchg
xlat
push
fwait
sub
fmul
sub
xchg
int3
or
in
(bad)
mov
aaa
push
aas
pop
int
adc
jbe
stos
add
cmp
push
movs
push
rcl
dec
add
xchg
movs
xchg
inc
retf
dec
pushf
push
mov
xor
lock
push
sbb
fld
jo
fadd
sbb
retf
je
inc
push
or
ficomp
xchg
push
inc
(bad)
mov
lahf
push
or
in
mov
inc
sub
ins
adc
in
sbb
je
out
and
loopne
mov
sub
mov
xchg
inc
push
data16
sub
test
push
xchg
jnp
mov
inc
sbb
(bad)
(bad)
jno
retf
dec
inc
jne
in
mov
mov
inc
mov
out
mov
cmps
pop
sbb
jne
push
jo
ret
in
call
aaa
stc
mov
and
pop
loopne
cld
retf
xlat
push
in
jmp
cdq
pushf
imul
mov
and
fdivr
sub
inc
ins
cs
sbb
push
adc
push
add
add
nop
rol
pop
rcl
cmc
out
add
stos
lock
push
ficom
cs
fld
pop
test
push
push
leave
inc
or
dec
dec
jge
dec
es
cmp
scas
push
jbe
sbb
out
pop
(bad)
int
dec
fs
out
inc
stc
mov
adc
push
sar
pop
stos
test
repnz
push
pop
push
movs
jno
inc
adc
add
clc
xor
xchg
fbld
(bad)
dec
iret
test
xor
test
xor
jmp
jmp
mov
push
stos
ret
inc
adc
sub
lds
pop
add
or
sbb
mov
scas
aaa
xor
cmovbe
and
cli
mov
jbe
add
js
mov
ins
sbb
mov
test
dec
hlt
add
xor
mov
xchg
cmps
(bad)
and
dec
cs
push
sub
jle
jl
(bad)
sbb
cmp
dec
call
xor
mov
sub
mov
out
mov
aam
mov
mov
push
shl
add
popf
(bad)
shl
dec
mov
pop
add
(bad)
pop
add
fiadd
cld
adc
cmp
fs
mov
xchg
inc
cld
pop
mov
shl
inc
call
mov
sub
xchg
xchg
repnz
mov
mov
cmp
test
outs
and
cmp
push
leave
adc
cmp
xchg
test
push
fwait
or
neg
shl
push
call
or
enter
sub
add
pusha
xchg
in
pop
mov
(bad)
aad
sub
pop
adc
fsubp
pop
xor
cmp
push
dec
gs
pop
pop
ja
fnsave
fldcw
cmp
dec
add
test
or
lds
clc
imul
or
fiadd
add
jecxz
cs
inc
push
imul
pop
scas
es
les
outs
outs
mov
stos
sub
push
idiv
les
les
inc
sub
loop
xor
es
jge
mov
idiv
cmp
inc
jns
cmp
push
jb
mov
lahf
jae
es
add
sbb
call
movs
push
push
scas
fadd
add
xchg
push
es
jo
add
mov
enter
mov
cmps
jo
cli
daa
mov
push
jle
inc
mov
dec
mov
mov
jp
mov
inc
(bad)
lock
push
push
in
jp
add
jmp
aad
pushf
dec
or
outs
mov
ja
clc
out
adc
add
sbb
(bad)
enter
dec
mov
loope
inc
cmp
adc
addr16
add
lock
add
leave
out
test
inc
sbb
jae
fwait
or
arpl
nop
mov
out
pop
fsubp
stc
ja
dec
pop
or
add
mov
shr
pop
or
inc
mov
test
cmc
mov
mov
lds
add
into
leave
das
enter
sub
jecxz
sub
icebp
jnp
outs
outs
sbb
xor
push
sub
call
ja
mov
mov
sub
and
in
repnz
cdq
cmp
xchg
scas
xchg
daa
sahf
add
push
pop
mov
mov
ins
jmp
cli
(bad)
in
adc
jg
leave
ret
xor
mov
adc
lds
xchg
adc
pop
bound
xor
push
jne
pop
fcomp
aaa
jne
sub
xor
ds
and
test
jle
cwde
mov
mov
sar
out
pop
xor
mov
clc
mov
cmp
cmp
and
push
aad
cmps
hlt
mov
cmp
std
test
adc
stos
cmp
push
retf
icebp
jnp
(bad)
dec
xchg
mov
or
or
mov
dec
pop
jle
ins
push
sbb
cmps
ficom
movs
xchg
popf
in
jmp
popf
movs
dec
sbb
dec
add
cmp
pop
push
jle
stos
(bad)
mov
xchg
js
in
adc
in
cmp
out
mov
xor
push
and
(bad)
xor
add
pop
cmp
mov
xor
in
(bad)
retf
and
mov
xor
adc
pop
sub
dec
inc
(bad)
or
jge
mov
jbe
mov
and
dec
hlt
arpl
into
cmps
stc
cmp
add
jecxz
int
sahf
inc
int3
add
stc
loopne
dec
adc
push
sahf
in
rcr
mov
jg
push
movs
add
inc
inc
jb
jbe
pop
sub
pushf
jnp
ins
inc
jg
mov
call
scas
push
add
add
shr
or
dec
sbb
jo
je
fwait
add
xlat
ds
xor
xlat
int
dec
je
std
leave
mov
mov
mov
adc
jbe
adc
aas
fstp
xchg
js
test
mov
adc
enter
jo
outs
xor
add
xor
pop
push
adc
scas
test
lods
adc
add
jg
in
xchg
pop
sub
sub
ins
xchg
inc
ret
repz
addr16
mov
(bad)
fistp
push
imul
mov
das
cmp
(bad)
push
les
dec
pop
mov
sbb
js
jecxz
pushf
jge
mov
fadd
out
pushf
mov
jae
rol
ret
ss
and
fst
jo
ins
add
mov
inc
pop
xor
lock
movs
dec
ficomp
psrlq
enter
lock
dec
adc
nop
xchg
je
sbb
mov
movs
ror
lock
(bad)
jno
xchg
jg
pop
jge
icebp
lods
loop
sub
inc
loopne
adc
inc
mov
mov
movs
jmp
addr16
adc
das
lds
jle
mov
and
push
sbb
pop
int3
cs
test
dec
inc
or
cmp
inc
adc
pop
adc
sub
(bad)
jno
inc
gs
mov
dec
dec
push
add
and
fldcw
mov
test
sub
add
test
jge
pop
jge
je
sbb
div
or
into
jbe
outs
addr16
movs
pop
movs
and
jl
les
push
pop
xchg
pusha
stos
adc
ds
mov
mov
test
mov
mov
jmp
sub
jmp
sbb
hlt
fs
push
adc
jge
mov
cdq
call
xchg
jnp
pop
mov
add
mov
push
or
mov
push
mov
dec
adc
cmps
daa
mov
adc
fdivr
cmp
adc
cmp
sub
jbe
in
call
sub
shr
lock
jp
sbb
cld
pop
shl
test
dec
lods
mov
mov
(bad)
dec
mov
or
jo
and
cld
mov
or
cmp
adc
xor
call
mov
ret
fild
mov
int3
daa
cmps
jmp
lea
jmp
sub
gs
repnz
sub
test
mov
addr16
xchg
arpl
mov
enter
sbb
sub
fwait
jge
sbb
out
and
(bad)
(bad)
mov
ins
jb
add
jne
mov
lea
dec
loop
dec
cmp
sub
adc
enter
stc
inc
dec
imul
mov
jmp
or
sbb
cmps
ds
mov
add
(bad)
into
add
fwait
or
push
cwde
adc
xchg
mov
push
sub
push
xchg
jne
or
sbb
dec
cmps
test
mov
loopne
or
movs
daa
sub
jmp
in
neg
sub
cmp
scas
mov
mov
cli
ret
fwait
loop
xchg
push
inc
mov
cmp
mov
jecxz
mov
sbb
push
ins
shl
ror
aaa
adc
imul
hlt
inc
in
fisttp
rcr
inc
mov
ror
(bad)
dec
adc
xchg
sub
and
inc
dec
popf
in
stos
sar
repz
add
lock
lea
loope
aas
mul
loope
retf
outs
sti
out
sahf
(bad)
lods
out
or
add
xor
out
outs
nop
sub
aad
inc
fisttp
pop
gs
lock
arpl
stos
dec
aam
xchg
test
jne
sub
fadd
sub
pop
pop
jmp
cmp
addr16
add
add
pusha
iret
fdivr
push
mov
cld
add
add
mov
mov
sbb
add
hlt
pushf
xchg
inc
movs
hlt
mov
sbb
(bad)
push
jge
add
sub
pop
imul
rcr
pushf
pop
pop
pop
push
lahf
xchg
sbb
popf
rcl
xor
jge
jp
inc
pop
adc
stc
int3
(bad)
and
stos
mov
test
sbb
int
ds
cwde
(bad)
mov
or
int3
and
fild
mov
sahf
dec
inc
jle
outs
inc
sbb
les
scas
dec
jb
mov
sbb
xchg
and
(bad)
(bad)
(bad)
mov
pushf
jp
cmovnp
je
ins
mov
fs
pusha
cmc
ret
cmp
outs
jp
test
mov
(bad)
push
dec
mov
jae
arpl
outs
aam
xor
add
sub
adc
pop
jmp
xchg
add
popf
adc
mov
popf
sub
push
dec
push
jae
les
les
xor
jmp
test
mov
mov
(bad)
rol
mov
xchg
xchg
gs
cs
push
mov
jl
or
xor
fadd
cdq
push
and
sahf
jmp
in
movs
add
in
pop
inc
call
mov
push
in
mov
bound
and
repz
sub
daa
and
adc
arpl
or
dec
xchg
xchg
push
ficomp
in
popa
sub
mov
pop
nop
popa
lods
add
neg
and
rcr
addr16
lods
jl
aaa
scas
mov
lahf
(bad)
leave
dec
pop
jge
(bad)
popa
dec
pop
sub
cs
mov
push
inc
pushf
xchg
mov
jo
retf
jns
mov
mov
lea
sti
fsubr
into
dec
mov
jle
dec
(bad)
iret
pop
inc
mov
hlt
rcl
(bad)
xchg
or
cmps
xchg
sbb
das
mov
inc
sub
sub
xor
imul
lea
repz
addr16
cmp
inc
xchg
xchg
out
jecxz
cwde
movs
fist
xor
imul
cmp
sbb
leave
mov
pop
ret
dec
mov
push
xor
add
sahf
or
jnp
mul
js
nop
lods
mov
jmp
in
ret
push
inc
fisttp
add
movs
ror
ret
test
ror
out
mov
mov
pop
and
mov
mov
adc
jb
dec
mov
cmp
xor
pop
in
inc
xlat
cmp
mov
das
xor
fndisi(8087
or
xor
dec
pop
add
and
adc
cmps
out
lea
jecxz
mov
push
sahf
or
in
jo
add
add
jbe
std
sar
push
test
add
jg
cmps
int
out
enter
xor
(bad)
pop
cmps
push
and
add
stos
rol
leave
movs
xchg
pop
push
push
adc
xchg
xchg
mov
xor
mov
inc
cld
pop
iret
xor
call
mov
fdivr
add
gs
add
jg
cmp
retf
ds
int3
in
mov
pop
rcl
pop
or
aad
(bad)
add
or
sbb
frstor
out
sub
xchg
popa
je
add
imul
jno
aas
ret
xor
mov
popf
mov
pop
rcl
xor
dec
jbe
or
pop
inc
mov
xchg
ud0
add
push
or
mov
fwait
xchg
in
mov
cld
jg
dec
xor
int
mov
dec
mov
xor
adc
inc
push
movs
adc
fisttp
xor
paddusw
dec
cld
(bad)
fs
loop
push
inc
sti
xor
mov
cpuid
jae
mov
stos
dec
xlat
push
mov
hlt
pop
push
cmps
std
push
retf
mov
clc
xchg
fistp
out
sub
fiadd
into
lods
xor
or
mov
push
or
push
cdq
inc
sbb
cmps
pop
mov
xchg
ds
leave
inc
xchg
push
imul
fst
mov
out
adc
fisub
dec
popa
add
into
mov
lods
out
cmp
sbb
arpl
pop
xchg
ret
mov
xlat
push
mov
nop
mov
pop
adc
xchg
sahf
or
retf
jae
leave
push
pop
dec
mov
jae
sub
imul
or
jo
push
lods
fimul
jmp
rcr
add
sbb
mov
push
fwait
mov
mov
push
fwait
cmp
aam
xchg
nop
outs
imul
dec
dec
psubb
arpl
nop
scas
and
fsubr
nop
xor
adc
push
mov
mov
jmp
fstp
push
lahf
sub
sbb
adc
mov
arpl
jns
sti
cmp
cmp
lds
mov
mov
xchg
jne
or
retf
cmp
sub
sub
cmp
xor
rol
sbb
adc
mov
es
lock
rcr
xor
pop
outs
xchg
les
push
add
je
sbb
out
pop
mov
rol
repz
mul
aaa
ror
pop
mov
cdq
add
fwait
sub
push
xchg
enter
inc
or
sub
and
push
stc
cmp
in
cmp
std
cmc
cmps
mov
inc
xchg
jns
mov
inc
and
jmp
cmp
pusha
movs
outs
add
aaa
xor
retf
and
popa
and
and
sti
out
test
jecxz
dec
(bad)
retf
mov
inc
nop
and
mov
add
pop
mov
rol
mov
in
lods
cmp
xchg
mov
popa
push
fisttp
imul
ret
rcr
call
sahf
lds
in
add
sub
fcom
fild
pop
pop
rol
scas
push
push
xchg
cmc
scas
sub
or
mov
lahf
push
sub
mov
jmp
repz
mov
test
adc
jne
cdq
dec
leave
stc
dec
mov
sub
sti
iret
mov
ret
fmulp
fdivr
push
xchg
xlat
cmp
mov
mov
loop
ficomp
(bad)
dec
pusha
jmp
cmps
cmps
push
pushf
cmp
iret
pcmpeqd
fisubr
jae
ja
(bad)
cs
inc
ss
lds
fld
retf
xor
jae
or
fdivr
aas
in
out
mov
cmps
xchg
mov
mov
and
pusha
fisub
dec
push
ror
jnp
pop
(bad)
sldt
dec
and
mov
and
or
call
pushf
mov
lahf
jns
das
retf
jle
retf
jmp
ins
sub
or
inc
pushf
pop
add
cmp
pop
mov
(bad)
pop
scas
cld
cmps
and
jns
pop
fidiv
loope
adc
inc
pop
jne
rcr
sub
mov
pop
mov
mov
cs
jno
sub
jne
xlat
add
or
push
fcom
add
or
imul
stos
mov
(bad)
retf
cmc
jg
pop
jbe
ja
imul
fdiv
inc
out
add
sub
add
push
inc
test
jnp
push
xchg
inc
mov
sub
jp
xchg
mov
mov
mov
jp
jbe
mov
or
jo
gs
xchg
mov
xor
and
les
pop
mov
pop
out
test
and
jmp
scas
cli
xchg
mov
sub
movs
mov
ret
fs
mov
test
sbb
stos
aaa
xor
dec
fsubr
sbb
mov
xor
adc
imul
inc
pop
mov
lods
dec
mov
mov
repz
cld
jp
adc
cmps
sub
sbb
cmp
mov
sbb
or
inc
and
jp
or
bound
rcr
int3
mov
outs
push
xchg
fsubr
out
add
(bad)
or
cwde
xor
mov
mov
jb
call
fwait
dec
mov
cmps
inc
out
movs
or
mov
mov
inc
dec
xchg
sub
xchg
das
stos
jae
xchg
pop
aas
and
pop
fld
mov
or
cmp
clc
call
xlat
sub
jmp
int3
cmp
or
xchg
imul
jl
stos
jo
mov
and
xor
pusha
cmps
xor
jp
scas
sahf
mov
enter
js
push
pop
inc
mov
or
rcl
cld
xor
sub
(bad)
in
ins
int
enter
push
xchg
jo
mov
scas
push
xchg
mov
ja
jo
sub
cmp
mov
into
jg
jo
xchg
mov
xor
sub
data16
ror
and
jb
add
inc
or
mov
jge
add
rcr
shr
or
jne
adc
dec
shl
adc
jmp
dec
sbb
test
pop
pushf
add
gs
xor
sti
xor
call
iret
idiv
ds
pop
inc
retf
mov
sub
sbb
cmp
cli
and
popa
adc
mov
loop
adc
sub
dec
mov
push
push
ja
xchg
pop
push
cmp
mov
push
mov
inc
loopne
push
ficomp
jmp
(bad)
ficom
adc
outs
jae
jb
jge
pop
cmp
loop
pop
frstor
jg
sbb
sbb
and
pusha
fist
push
rcr
dec
js
sbb
pop
pop
sbb
fst
clc
imul
adc
fist
mov
xor
and
mov
pop
mov
pop
sbb
fild
ficomp
shl
and
cmps
loop
mov
mov
out
push
cmc
cmp
sub
sub
adc
call
mov
mov
inc
pushf
fild
fwait
or
call
movs
dec
lock
or
sub
xlat
fisttp
and
int
loope
test
xor
mov
mov
push
inc
mov
sahf
mov
stos
xchg
scas
and
jnp
add
out
xor
inc
or
jmp
fld
mov
adc
pop
(bad)
mov
outs
cs
xlat
jp
mov
(bad)
jnp
inc
movs
mov
int
dec
or
push
lock
or
jb
xchg
movs
or
sti
xchg
sub
or
hlt
(bad)
xor
mov
mov
repz
dec
xor
jl
in
test
clc
mov
ret
xlat
das
cmp
dec
push
pop
add
es
cli
scas
ins
imul
test
imul
fmul
rol
bound
aaa
mov
xor
scas
fdivrp
cmp
mov
jecxz
fld
call
ja
sub
dec
in
(bad)
sub
push
adc
pushf
sub
dec
dec
push
out
cwde
and
stos
sbb
or
pop
and
cmps
mov
and
dec
sbb
xchg
add
fwait
jmp
mov
test
pop
and
and
js
out
sbb
imul
rcr
mov
pop
(bad)
scas
pop
sbb
loope
icebp
sti
rcr
dec
xchg
sub
ins
cmps
jecxz
and
inc
jge
pop
cmp
aaa
cmps
jno
or
push
mov
cmp
mov
mov
cld
loope
fcom
in
mul
into
or
addr16
loop
jo
cmp
pusha
int
ja
dec
or
inc
push
dec
mov
test
imul
out
mov
neg
lea
das
clc
cwde
pop
test
popf
fwait
iret
gs
pop
popa
pusha
mov
pop
shl
mov
sar
add
pop
jbe
stos
popa
pop
fcom
call
pop
mov
push
clc
or
shl
ror
fld
dec
push
fidivr
repz
sbb
(bad)
call
push
stos
out
adc
push
inc
jo
movs
scas
loopne
pop
jecxz
sbb
int3
js
js
pop
jp
and
jecxz
pop
jmp
adc
jnp
movs
or
adc
out
cmps
inc
inc
int3
xor
jmp
inc
adc
mov
jmp
sbb
lea
mov
sbb
xor
xor
inc
pop
test
inc
xchg
bswap
shl
or
fisubr
sub
jbe
aaa
add
stos
fst
add
mov
pop
rol
(bad)
test
mov
test
pop
sahf
mov
xor
dec
aas
adc
push
(bad)
dec
lods
dec
test
cmp
cmc
pop
xchg
jg
push
fcomip
pop
adc
idiv
mov
mov
dec
xor
mov
aaa
nop
sbb
jmp
ja
add
loop
ja
jae
rol
mov
xchg
pop
inc
mov
outs
rcr
les
pop
sub
lods
dec
push
int
ror
sar
mov
loopne
and
or
loope
test
icebp
jne
lds
push
lds
iret
into
mov
in
aaa
or
jnp
fld
daa
call
test
pop
scas
ret
push
xchg
jno
sahf
and
sbb
mov
imul
xor
mov
mov
outs
(bad)
dec
mov
and
ins
mov
leave
pop
push
push
lahf
xchg
jbe
add
sbb
(bad)
retf
(bad)
sbb
and
hlt
pop
pop
ret
les
loopne
mov
daa
int3
dec
xor
rcl
call
pop
jb
jns
fnstenv
(bad)
inc
in
fnstsw
jo
xor
pop
mov
repz
repnz
jmp
push
out
adc
rol
or
int3
fdivr
daa
retf
dec
or
adc
mov
jbe
outs
stos
dec
icebp
leave
out
sub
and
mov
rol
add
push
fucomi
jmp
not
and
cs
push
xlat
mov
inc
mov
pop
push
imul
inc
js
std
(bad)
out
jp
cmp
mov
xlat
sub
sub
scas
loopne
call
add
(bad)
cdq
xchg
test
mov
pop
mov
into
lahf
or
outs
stos
xchg
dec
add
push
push
stos
test
mov
and
enter
scas
mov
inc
shr
sub
scas
jbe
retf
mov
popa
imul
jg
call
jne
rol
mov
inc
call
lahf
lods
dec
ins
aam
in
or
shl
(bad)
and
ror
add
fs
dec
and
ja
jp
xchg
jle
pushf
sub
add
adc
xor
xchg
mov
dec
neg
pusha
mov
outs
xor
cdq
mov
daa
sub
jmp
push
lahf
lea
popf
jmp
(bad)
popf
cmp
repz
jne
das
out
retf
ror
mov
xor
push
jg
jne
scas
fs
fdiv
xabort
pop
mov
cmc
sbb
mov
or
add
and
inc
jae
add
mov
push
scas
test
div
leave
jecxz
sub
es
mov
xor
pop
es
mov
sbb
jno
gs
sub
mov
xchg
mov
stos
pop
sub
fistp
xchg
or
ret
cli
shl
dec
pop
gs
int
sbb
jl
sub
cli
xchg
call
(bad)
jmp
(bad)
cmp
sahf
mov
clc
mov
mov
mov
sbb
sti
pop
aad
loopne
dec
mul
jmp
adc
mov
jge
push
aam
pop
adc
xchg
and
cmp
mov
pop
mov
or
repnz
sbb
in
sub
dec
pop
punpckhwd
cs
add
bnd
dec
jp
jno
stos
scas
(bad)
sbb
mov
scas
jmp
call
xor
dec
loopne
push
shl
xchg
stos
pushf
or
or
mov
imul
(bad)
cs
cli
cmp
push
inc
jp
in
xchg
or
or
mov
fnstsw
sbb
jle
or
adc
stc
ss
cdq
push
imul
adc
stc
lock
add
sub
mov
push
mov
loopne
loop
inc
push
test
push
sub
pop
(bad)
add
stos
popa
pop
arpl
cwde
out
adc
mov
leave
jl
or
test
(bad)
xchg
lods
push
push
popf
jle
retf
(bad)
mov
int3
mov
mov
mov
les
ret
xchg
fwait
inc
jle
xor
stos
les
aaa
mov
(bad)
hlt
pop
test
jns
mov
neg
push
sbb
or
mov
sar
push
es
fucomip
das
hlt
cmp
mov
dec
pop
enter
cmp
jno
adc
jle
jb
and
int
mov
push
pop
das
fist
mov
cmp
adc
lea
mov
dec
dec
inc
into
and
and
mov
inc
pop
push
mov
call
imul
dec
mov
add
in
ret
pop
stos
mov
test
xchg
rcr
sahf
in
int
pop
jge
cld
and
and
sbb
ror
jne
mov
nop
js
movs
mov
inc
xor
hlt
mov
adc
out
ret
outs
stos
xor
dec
outs
cmp
in
adc
sub
cmc
pop
in
sbb
xchg
jno
or
call
and
cld
clc
push
push
repz
es
mov
dec
(bad)
cmps
dec
fxch
adc
fwait
out
arpl
inc
mov
mov
or
(bad)
out
sahf
test
dec
lods
out
add
or
xchg
rcr
bound
jne
jne
nop
dec
(bad)
jne
dec
shl
push
mov
pop
gs
mov
test
call
test
xchg
jg
or
aam
pop
jecxz
mov
shr
retf
jnp
fsub
push
daa
push
cmp
popf
pop
sub
xor
xor
inc
xchg
jae
dec
xlat
shl
bound
(bad)
mov
mov
mov
movs
mov
push
mov
out
cmp
icebp
lods
inc
dec
jae
mov
xor
enter
xor
jle
aad
inc
push
rol
cmp
xor
xor
fwait
sbb
xor
mov
push
adc
rcl
fcmovne
adc
pop
jns
add
or
xor
jmp
sbb
pop
pop
cmc
fdiv
loopne
fcomp
adc
lea
push
call
pop
sti
add
jmp
iret
pop
mov
repnz
retf
or
loop
out
rol
or
lds
add
dec
mov
mov
aas
add
(bad)
(bad)
pop
ret
cwde
aaa
out
sti
popa
cmp
retf
xor
add
or
and
aaa
xor
adc
add
fldenv
out
push
xchg
add
movs
xchg
retf
iret
stc
mov
dec
sub
xchg
std
enter
(bad)
add
dec
add
popa
inc
aas
repnz
sahf
sar
and
pusha
call
jno
scas
cmp
and
dec
scas
daa
(bad)
lock
outs
sub
inc
out
lods
push
add
sub
cdq
js
mov
cmp
rol
enter
inc
pop
push
imul
mov
mov
stos
les
xlat
or
pop
test
mov
mov
jmp
in
mov
(bad)
fsubr
xor
and
pop
add
xor
rcl
test
mov
int3
and
mov
jg
mov
daa
push
cwde
xchg
mov
stos
(bad)
and
add
fsubr
out
cli
xor
push
popf
mul
pop
repz
outs
push
enter
in
(bad)
dec
ret
jp
call
xor
stc
pop
sub
popf
pusha
inc
cs
shr
sub
cli
loopne
jbe
jne
icebp
inc
out
push
mov
jne
cli
inc
sub
xchg
sahf
fisubr
add
dec
lods
retf
push
add
(bad)
aam
xor
xor
dec
sbb
fwait
add
cmps
hlt
pop
xor
add
mov
push
mov
test
jae
aam
lahf
jnp
dec
int
xchg
dec
cmp
cld
dec
jbe
pop
iret
cmp
and
add
lahf
cmp
pop
or
cmp
pop
mov
mov
push
call
das
mov
sub
jp
sub
call
lods
mov
ins
and
adc
cmp
mov
out
push
scas
xor
ja
mov
jg
into
xchg
push
rcl
pop
das
dec
jns
scas
call
int3
xchg
dec
outs
push
inc
and
jne
out
mov
xchg
pop
or
mov
pop
es
std
pop
(bad)
push
sub
cmp
out
push
ret
loop
ret
repz
mov
pshufw
(bad)
repz
push
in
data16
sbb
xchg
inc
mov
in
inc
daa
(bad)
xchg
shl
jp
and
mov
call
sbb
std
fwait
push
jne
push
in
xor
hlt
push
mov
repnz
and
(bad)
in
test
mov
in
jns
(bad)
mov
(bad)
adc
loope
scas
xor
push
xor
scas
xor
fnstcw
nop
addr16
pusha
jecxz
sbb
cmp
push
add
jne
in
sbb
ds
and
inc
jns
mov
dec
jmp
push
fsubr
and
mov
je
and
inc
shr
sub
push
fistp
aad
sub
lds
push
pop
pop
push
hlt
pop
(bad)
cs
sub
xchg
and
jo
(bad)
(bad)
jne
rol
cmps
sbb
mov
fisttp
mov
adc
xchg
aaa
aad
pop
fs
stos
mov
pop
dec
or
imul
jae
jbe
xchg
fs
sbb
lods
lahf
jp
fstp
mov
mov
aam
cmp
cmps
xchg
lock
mov
ss
fwait
aaa
ret
mov
pop
icebp
fimul
jmp
lea
inc
popa
sbb
mov
inc
sti
push
xor
push
leave
add
imul
inc
and
call
movs
mov
xchg
shr
in
push
mov
es
ins
aad
push
sbb
sar
mov
add
jecxz
add
out
popf
scas
enter
inc
call
add
ds
aas
lods
ins
push
pop
mov
cmp
call
test
xor
scas
pop
dec
stos
rol
sub
mov
js
pop
mul
dec
cmp
add
je
dec
pusha
(bad)
or
push
(bad)
or
xchg
loop
rcl
jle
cmp
(bad)
push
sbb
ins
pop
inc
leave
and
xchg
ins
sahf
into
dec
idiv
ret
pop
pmulhuw
push
test
push
ja
ins
jbe
pop
pop
push
dec
in
mul
ja
shl
sbb
sub
je
dec
ret
cdq
sbb
push
ret
push
jl
rcr
xor
sub
mov
test
in
arpl
out
ret
fsubr
and
(bad)
jge
loop
arpl
lock
or
retf
mov
xor
push
or
jo
fs
fld
lods
imul
pop
sub
mov
add
stos
and
pusha
dec
ret
std
push
test
imul
(bad)
mov
sbb
or
xor
(bad)
js
and
dec
imul
(bad)
sbb
mov
(bad)
xchg
sub
xlat
and
aam
dec
imul
lock
pop
(bad)
leave
pop
pop
test
sub
std
data16
cs
dec
and
mov
xor
test
adc
sbb
xchg
jmp
mov
sti
ja
dec
and
xchg
sbb
les
jmp
sbb
and
push
xchg
aam
bnd
add
int3
shr
scas
mov
and
sbb
pop
mov
enter
fstp
push
jp
fnstcw
push
clc
or
inc
inc
dec
in
sar
pop
jmp
in
in
xchg
xor
pop
mov
dec
cmps
mov
fld
bswap
stos
scas
and
pop
into
jge
dec
jecxz
push
inc
xchg
mov
xor
mov
pop
sub
and
xor
pop
data16
out
xor
push
lods
cmp
push
outs
test
int3
push
imul
xor
adc
cld
jb
(bad)
sbb
add
cwde
jnp
pop
jl
ja
(bad)
leavew
rol
fild
jmp
adc
jmp
shr
test
jmp
imul
lock
jle
fstp
fmul
test
push
dec
adc
mov
mov
xchg
jg
out
xchg
mov
sbb
mov
loop
addr16
dec
or
stos
int3
sub
xlat
pop
push
ins
jecxz
call
add
je
cmc
inc
imul
pushf
sbb
fldcw
mov
jne
sbb
rcr
leave
push
mov
mov
or
out
loope
mov
test
cmc
call
stc
xchg
ins
fnstenv
mov
or
inc
data16
cmp
mov
imul
les
jnp
cmps
rcr
cmc
xchg
fild
repz
mov
sti
mov
cmp
pusha
in
cdq
adc
repz
fadd
fisttp
call
or
push
xchg
jg
add
in
out
sbb
inc
xchg
enter
mov
jmp
mov
push
(bad)
fs
icebp
mov
jecxz
data16
mov
aaa
(bad)
pop
mov
fadd
dec
out
jp
inc
rcl
jb
sub
add
and
lahf
add
push
test
rcr
repnz
icebp
mov
popa
jecxz
cmps
push
dec
fwait
mov
retf
mov
int
sbb
push
cwde
mov
hlt
mov
fs
mov
cmp
cmp
cmp
xchg
sub
mov
into
hlt
pop
adc
dec
mov
jno
es
lock
adc
jl
adc
push
shr
push
pop
cmc
arpl
out
out
cmps
popf
retf
out
sub
push
xchg
daa
inc
out
push
add
inc
push
sub
xor
repnz
fld
xchg
iret
sar
pop
(bad)
sbb
test
movs
mov
enter
xchg
jbe
inc
es
mov
dec
rol
in
retf
jge
mov
or
cdq
dec
ins
popf
pop
imul
push
and
mov
sahf
ret
adc
inc
in
cmp
inc
(bad)
mov
push
aaa
push
dec
mov
push
inc
fsubr
xchg
push
and
mov
mov
inc
push
repnz
cwde
scas
and
cld
xchg
dec
outs
dec
mov
movs
push
test
add
or
push
data16
ins
or
push
mov
pop
pop
test
push
add
or
leave
(bad)
adc
xor
xsaveopt
ret
pop
push
jle
jp
mov
xchg
sub
sub
dec
xchg
pop
jb
xchg
retf
add
mov
push
mov
in
cmp
outs
push
cld
inc
push
repz
xchg
xchg
pushf
je
pop
mov
jge
cmps
aad
cmp
inc
mov
mov
push
jecxz
xor
pop
es
sbb
int3
mov
js
jmp
or
std
sub
sub
sub
ss
inc
std
add
iret
jmp
mov
or
xor
xor
jle
out
jbe
test
push
test
jns
mov
xlat
add
stos
shufps
shl
jle
inc
ret
sub
mov
cmps
push
push
push
cmps
xchg
sbb
sub
adc
mov
dec
inc
dec
loop
popf
xchg
loopne
dec
or
xlat
shr
inc
stos
pushf
sub
jae
mov
xor
sub
and
nop
xchg
inc
and
push
sub
push
sbb
cmp
and
dec
std
(bad)
movs
jg
gs
aas
in
fld
mov
mov
sbb
cdq
inc
mov
mov
lahf
les
push
int
sub
and
shl
mov
int
loopne
js
xchg
dec
jnp
(bad)
mov
jmp
xchg
ret
call
jns
loop
cmp
jg
leave
ins
jno
pushf
sbb
mov
outs
mul
mov
(bad)
jecxz
loopne
push
mov
jbe
leave
ins
das
mov
mov
xchg
mov
jnp
pop
pop
pop
jmp
mov
cmp
rcl
jo
stos
sub
retf
adc
add
(bad)
shr
pop
mov
adc
cmp
cmps
(bad)
sbb
rsqrtps
fsubr
scas
call
popa
cmp
inc
sub
mov
jmp
mov
imul
sahf
in
fdivr
pushf
cmp
sbb
movs
lock
aad
sub
jmp
dec
div
sub
shl
shl
xchg
sub
lea
in
sub
jp
xor
add
cmp
pop
jle
jno
sub
sbb
leave
dec
and
scas
movs
jp
add
gs
ror
jl
jle
cld
push
ds
xor
ret
popa
movs
or
mov
mov
cmp
sbb
leave
pop
push
les
mov
das
rol
and
xchg
cmc
push
inc
pop
mov
dec
ret
lahf
test
adc
adc
xchg
mov
clc
jno
push
mov
(bad)
aad
add
or
cmp
mov
pop
rcl
test
sbb
cmp
arpl
adc
jp
push
xor
sbb
daa
mov
xchg
cmps
dec
pop
imul
inc
dec
push
xchg
xor
ds
mov
or
mov
sti
mov
mov
dec
dec
xor
stos
push
push
cmp
test
test
cmp
pop
scas
sar
dec
jne
sub
stos
test
xor
or
bound
lahf
add
jmp
(bad)
das
sbb
mov
int
push
and
fpatan
xor
je
stos
pop
mov
add
mov
xor
cwde
xor
in
cmp
xchg
mov
test
adc
aam
push
sti
imul
mov
dec
or
imul
mov
mov
into
in
ins
(bad)
jle
push
mov
jbe
pop
jmp
add
mov
data16
add
xchg
bound
or
int
dec
rcr
mov
add
std
lods
pop
push
mov
cmps
jno
inc
pop
fbstp
icebp
jmp
cmc
push
or
repnz
ds
leave
xor
push
stos
ja
jmp
loop
std
add
into
mov
mov
jb
movs
aas
je
mov
fdivr
jg
aad
stos
movs
pop
ss
add
xchg
and
les
(bad)
nop
jno
jmp
jnp
push
mov
xchg
aam
cli
call
pop
mov
xor
out
ins
std
push
cwde
and
push
es
and
leave
mov
sub
(bad)
jecxz
das
mov
fimul
sbb
push
pop
fcomi
scas
mov
pop
int
mul
icebp
xchg
outs
cmp
mov
fistp
shl
mov
jns
push
push
pop
pop
ret
cli
enter
lds
lock
jne
mov
adc
fucompp
arpl
xchg
cmps
dec
lock
cmp
dec
pop
gs
and
sbb
push
sbb
mov
xchg
neg
mov
in
mov
mov
xchg
(bad)
cld
ins
lahf
outs
or
inc
in
xchg
add
push
mov
(bad)
das
test
mov
pop
or
enter
ret
mov
(bad)
(bad)
dec
mov
and
sbb
mov
jno
pop
mov
push
sbb
mov
(bad)
(bad)
pop
cmp
add
adc
push
ins
mov
fmul
xchg
jb
mov
cmp
int
or
lods
dec
movs
mov
lds
sti
sti
stc
in
cmps
mov
gs
add
cmp
pop
push
pop
mov
inc
cmp
push
hlt
mov
inc
pop
mov
xor
xor
sub
cmp
or
stos
mov
dec
out
test
retf
jmp
call
add
jle
leave
add
mov
or
and
iret
dec
mov
xchg
lods
jae
hlt
sahf
addr16
nop
mov
push
jae
sbb
not
and
push
inc
jne
mov
cmp
sahf
inc
bnd
cmps
or
addr16
push
sti
stc
push
test
dec
adc
xchg
add
repnz
pushf
or
bound
mul
pop
push
loope
sbb
cmp
fs
enter
or
jnp
add
bound
dec
dec
adc
xchg
dec
clc
(bad)
or
mov
or
or
jge
push
test
jno
dec
xor
nop
popf
sub
xor
into
xor
retf
hlt
adc
mov
jbe
pop
bound
inc
test
xor
xchg
pop
pop
mov
mov
imul
adc
lahf
adc
adc
add
out
(bad)
inc
and
xchg
push
mov
mov
cli
pop
inc
dec
cmps
aad
mov
pop
lods
das
dec
pushf
sti
and
mov
adc
pop
add
and
push
jns
pop
test
xchg
jg
inc
int
cmp
mov
out
ss
xor
jb
int
jns
mov
add
out
cmp
jecxz
cmps
cmp
sub
pop
xchg
in
imul
popf
lods
or
jmp
xlat
adc
or
xor
add
jmp
(bad)
pop
sbb
bound
movs
dec
ss
fld
mov
add
inc
fistp
(bad)
xor
sbb
fistp
js
(bad)
sti
mov
jo
mov
add
xor
mov
in
sub
lea
enter
jo
add
xchg
retf
stos
xchg
add
stc
inc
jecxz
sub
loopne
daa
xchg
adc
or
cli
pushf
adc
idiv
das
movs
push
sub
or
or
mov
out
jmp
movs
imul
xchg
retf
push
retf
pop
outs
cld
jae
xchg
mov
aaa
popf
push
and
cmp
aam
outs
jge
xor
inc
mov
mul
mov
mov
xchg
fsub
xchg
cmp
cmp
adc
stos
fadd
js
mov
sbb
xchg
sub
mov
mov
mov
xchg
data16
pusha
pop
es
mov
das
sbb
mov
data16
dec
dec
mov
fdiv
xchg
cmps
fcom
popa
in
call
mov
loopne
lods
rcr
std
pusha
fld
fs
sub
outs
sti
fwait
pop
xchg
push
pop
sar
outs
sbb
ins
dec
xchg
pop
dec
(bad)
xor
gs
and
sti
pop
mov
imul
push
stos
pop
pop
cmp
(bad)
jmp
inc
adc
jp
dec
push
imul
inc
add
cmp
ss
(bad)
dec
mov
xchg
nop
sub
rcl
sbb
stos
pop
pop
pop
dec
push
(bad)
hlt
cld
nop
popf
inc
es
fwait
jmp
mov
data16
stc
adc
xor
pop
test
fs
fs
mov
fiadd
outs
pop
push
pop
jmp
js
jl
sub
dec
ja
and
sbb
out
cwde
popa
sub
inc
ins
mov
mov
stc
pop
adc
nop
int3
lods
call
sub
jb
pop
jmp
aaa
xchg
mov
sbb
in
pop
cld
stc
sbb
dec
jno
aaa
scas
mov
hlt
mov
aas
mov
in
xchg
xchg
nop
shl
push
adc
sbb
mov
xor
adc
add
aaa
and
cmp
cmps
in
jnp
(bad)
dec
hlt
mov
test
ins
loopne
shl
xor
adc
gs
imul
push
pop
inc
or
mov
ins
icebp
shl
popf
cmp
mov
or
lods
push
lock
in
adc
xchg
inc
int3
or
shl
xor
fdiv
shl
fisubr
retf
movs
in
int
mov
inc
in
push
ret
jnp
push
test
in
mov
or
nop
lods
pop
sub
add
fist
mov
loopne
sbb
dec
mov
hlt
popa
repz
fld
sub
call
push
xlat
loop
sbb
aad
movs
out
in
out
dec
icebp
and
pop
fnstsw
pause
pop
cmps
add
add
inc
or
scas
pop
mov
mov
aaa
cld
ins
pop
(bad)
popf
movs
ins
dec
or
daa
cmps
dec
pop
stos
icebp
cmp
xchg
arpl
das
imul
sti
fimul
mov
inc
jne
mov
aaa
fs
pop
cmp
shr
inc
xchg
mov
(bad)
mov
add
repz
or
(bad)
mov
repz
loopne
scas
cmp
xor
nop
add
xor
call
cld
or
cs
xchg
push
dec
(bad)
bound
sete
mov
int3
cmp
rcl
push
js
cmp
mov
or
inc
(bad)
mov
lea
add
add
fsub
lock
xor
pushf
dec
cs
adc
mov
push
dec
icebp
xchg
retf
mov
pop
pop
push
cmp
cwde
push
cmc
(bad)
ret
mov
into
mov
dec
add
out
imul
aad
in
scas
push
outs
dec
add
jp
movs
cmp
mov
sub
adc
(bad)
les
loop
arpl
(bad)
out
mov
inc
ins
fdiv
inc
inc
sub
jge
cmp
dec
inc
mov
jbe
mov
in
imul
adc
scas
sub
dec
out
inc
sub
adc
stc
movs
jmp
sbb
sti
aam
xchg
fwait
cmc
daa
xor
pop
icebp
or
ds
aaa
call
(bad)
out
in
cli
mov
push
ja
and
sahf
xlat
jge
mov
or
xor
call
jp
xchg
xchg
and
jmp
add
aad
aad
mov
in
(bad)
push
fidiv
shl
ins
and
cli
mov
push
outs
out
sbb
mov
dec
sub
imul
(bad)
shr
cmp
dec
retf
sbb
int
int
jns
cmp
scas
pop
out
push
(bad)
(bad)
movs
inc
sti
push
pop
add
out
cmp
enter
pushf
stc
popf
or
sbb
sbb
aad
cmp
aam
fisubr
lods
int
push
out
xchg
mov
cli
and
and
imul
mov
push
push
fnsave
pop
(bad)
inc
fld
popa
loopne
iret
inc
out
jg
es
jmp
jp
sar
sahf
nop
jnp
nop
out
pop
cdq
or
(bad)
cmps
imul
push
jmp
mov
aaa
add
fsubr
ja
fnstsw
test
inc
cmp
inc
xor
call
xor
lahf
clc
psubsw
mov
push
xchg
fldenv
movs
mov
cmp
xor
es
fdiv
(bad)
cmp
(bad)
retf
das
or
push
mov
mov
inc
pusha
mov
sbb
push
and
jp
fs
pop
push
or
test
int3
xchg
cli
fisubr
xor
imul
cdq
cmp
(bad)
fadd
daa
add
dec
fld
jnp
jp
out
scas
push
sbb
and
sub
out
fld
mov
cmp
das
arpl
ffreep
loope
push
scas
or
mov
shl
jle
mov
mov
jbe
xchg
leave
cmp
pinsrw
loopne
out
movs
dec
in
call
or
movs
push
mov
out
mov
add
retf
stos
adc
retf
nop
sbb
sbb
add
sbb
cmc
pop
sahf
push
inc
scas
sti
sub
dec
pop
in
cld
adc
fld
dec
push
dec
arpl
pusha
dec
sbb
dec
fimul
xor
es
jp
push
lock
pushf
cmp
mov
xor
loope
pushf
push
lods
lahf
popf
mov
and
lods
sub
jb
sahf
mov
fld
scas
imul
jno
retf
lock
shr
xchg
mov
mov
idiv
adc
pop
scas
sbb
(bad)
jg
js
dec
jle
push
and
inc
popf
cdq
les
push
sbb
xor
fbld
sub
add
mov
movs
adc
inc
add
aas
push
adc
cmp
pop
sub
jg
loop
shl
ror
cmc
dec
les
cmp
sti
mov
sti
inc
stos
lahf
adc
jl
pop
mov
jae
add
outs
loopne
mov
jle
xchg
cmp
push
mov
je
pop
push
rol
dec
lds
cmp
or
or
(bad)
push
scas
mov
jnp
not
mov
jns
inc
int
adc
jl
not
sbb
outs
xor
outs
popf
xor
int
adc
push
or
shl
fdivrp
inc
test
das
xor
ins
lods
pop
in
test
ficom
sbb
add
or
ja
sub
mov
iret
scas
pop
sbb
cmp
xchg
pop
mov
cmp
mov
hlt
bound
sub
dec
in
cli
sahf
(bad)
ds
and
pop
mov
dec
sti
push
push
out
dec
mov
push
call
outs
jge
jae
leave
inc
data16
neg
pop
outs
sbb
ds
add
push
aad
iret
inc
add
nop
pop
setb
clc
ret
dec
adc
xor
call
sbb
loope
mov
jb
out
imul
mov
pop
xchg
test
daa
mov
add
xchg
push
mov
xchg
iret
(bad)
mov
mov
push
push
outs
cmp
push
dec
xchg
adc
adc
pop
test
fdivp
retw
pop
inc
sub
or
in
leave
push
repnz
cld
mov
mov
pushf
xchg
movs
rol
sbb
rol
and
jmp
fldenv
mov
rol
xchg
inc
aam
sub
sti
cmp
mov
(bad)
(bad)
hlt
jmp
or
(bad)
lods
outs
aad
daa
mov
ins
stc
test
lods
(bad)
ja
mov
loop
dec
mov
fs
cli
hlt
mul
cmp
das
pop
mov
aaa
pop
jle
cmp
sub
mov
and
sbb
js
jecxz
pop
dec
xchg
xlat
adc
jmp
push
xor
mov
mov
pop
cdq
inc
adc
nop
sbb
or
test
gs
mov
and
repnz
sbb
stos
xchg
loopne
aaa
aad
test
and
or
mov
dec
aaa
sub
sbb
jg
iret
push
xor
jo
and
dec
xor
lods
add
aaa
xchg
les
pop
pop
sub
add
aad
cdq
push
and
mov
scas
push
(bad)
adc
push
xor
mov
repnz
imul
aas
lods
sub
cmp
dec
imul
pushf
mov
inc
aaa
das
pop
add
fiadd
add
push
lea
ins
sub
dec
cmpxchg
jnp
sti
repnz
xor
sub
repnz
shr
cmp
test
(bad)
loopne
sti
cli
adc
and
sub
sbb
fcom
dec
cld
sub
xor
xchg
test
retf
and
dec
pop
gs
cmp
or
test
dec
cmps
mov
ss
pusha
inc
shr
pop
ret
mov
(bad)
mov
sub
ret
sub
xchg
movs
dec
pop
cmps
xor
cmc
or
sti
retf
jmp
mov
inc
scas
ja
fld
es
fcomp
cmp
add
xchg
in
dec
ficom
push
clc
retf
movs
push
adc
dec
shr
mov
sbb
jp
add
in
mov
xor
push
imul
add
and
das
add
std
test
xchg
inc
das
rcr
int3
mov
xchg
(bad)
fiadd
scas
inc
xchg
add
adc
cmp
retf
jmp
xor
punpcklwd
js
in
fucomi
jno
xchg
mov
out
cdq
sub
fcomp
cmp
and
adc
dec
xor
jno
out
dec
jle
mov
cmps
add
(bad)
hlt
gs
sbb
and
mov
xor
jg
or
fwait
mov
jge
mov
cmp
sahf
stos
xchg
scas
movs
jmp
pop
dec
or
push
mov
xchg
mov
sar
outs
test
mov
jns
imul
fst
daa
jmp
or
lea
mov
jns
fst
das
dec
sbb
pop
jl
push
cmp
jg
pop
dec
mov
mov
out
mov
push
es
clc
imul
mov
adc
jecxz
mov
push
ja
aaa
es
rol
sbb
pop
mov
cs
adc
xchg
cwde
out
mov
lods
jmp
dec
js
data16
sbb
lods
dec
pop
dec
cmp
out
inc
std
sub
in
dec
and
(bad)
jl
mov
mov
mov
sar
pop
sub
lds
stc
cmp
jmp
xlat
aas
sub
(bad)
in
adc
out
int3
pop
aas
push
enter
adc
pop
sub
jp
adc
rcr
js
adc
jne
mov
xchg
and
jbe
xchg
loop
std
cmps
stc
sbb
cmp
and
enter
repz
ficomp
cmp
dec
and
sbb
jl
sub
mov
test
addr16
xor
leave
ja
cmp
xor
test
test
mov
mov
cmps
push
cmp
repz
loopne
jno
(bad)
dec
dec
push
mov
enter
retf
sahf
or
popf
xchg
pop
xchg
frstor
outs
cmps
cmp
dec
cwde
sbb
nop
imul
shr
mov
data16
cmp
mov
sub
cmp
inc
popa
sub
test
sbb
or
aam
adc
sbb
icebp
add
mov
jp
sub
xchg
stos
inc
sub
outs
inc
push
repnz
xchg
repnz
or
xor
cmp
xchg
mov
mov
mul
xchg
xchg
and
(bad)
movs
(bad)
jl
into
aas
ret
sbb
dec
jns
mov
fsubr
push
addr16
jb
clc
(bad)
retf
push
cld
outs
lds
retf
mov
test
and
or
imul
or
out
and
jge
(bad)
lahf
add
repz
adc
add
pop
daa
jnp
sub
push
sub
and
(bad)
mov
mov
inc
mov
fidiv
scas
cmovo
lea
sub
ins
rcl
mov
retf
pusha
or
repz
or
mov
data16
enter
movs
and
dec
and
call
mov
dec
pop
test
fisub
lods
mov
inc
(bad)
mov
mov
aad
psubd
scas
nop
scas
jmp
sti
adc
clc
pop
mov
fsub
ror
mov
pop
cld
xchg
mov
pop
shl
fisubr
shr
fistp
in
leave
or
jno
jmp
dec
jbe
aam
and
int
sbb
adc
scas
jp
in
(bad)
fld
rcr
adc
xchg
ss
jbe
jo
xor
dec
pop
test
or
sbb
test
and
xor
sub
shr
jne
mov
in
int3
loopne
mov
hlt
repz
dec
push
outs
data16
aas
lea
inc
out
into
hlt
imul
or
xor
lods
xor
outs
inc
movs
cs
arpl
xchg
test
xor
jae
jl
popa
jle
mov
mov
cmps
repnz
jnp
stos
sidtd
fsubr
jbe
sbb
sbb
mov
pushf
scas
mov
xchg
and
je
adc
mov
pop
dec
inc
pop
sbb
pusha
jmp
ins
pop
inc
xor
add
lods
(bad)
fs
jne
mov
jno
or
loopne
lock
sbb
aad
jg
fucomi
cs
cdq
mov
lods
call
rcr
fst
repz
cwde
mov
lea
stc
lea
(bad)
rep
cmp
mov
push
scas
ror
outs
push
frndint
repz
test
jmp
rcr
les
push
adc
pop
scas
jmp
(bad)
fdiv
test
jg
xchg
sti
and
pshufw
jmp
imul
lahf
movs
mov
out
and
pop
cmp
pushf
adc
sbb
mov
gs
scas
pop
jl
sub
and
mov
mov
rcr
xchg
cmp
mov
inc
imul
repnz
stc
jbe
test
mov
xlat
or
ins
fs
cmps
xor
jmp
je
out
jne
ja
pop
xchg
rcr
xchg
lahf
xor
jl
add
mov
add
stos
sub
adc
sbb
mul
mov
dec
mov
or
and
xchg
imul
repnz
mov
fs
icebp
adc
jge
ss
mov
sub
fwait
sub
xchg
call
addr16
jp
sbb
sbb
mov
daa
or
clc
(bad)
sbb
jnp
out
mov
pop
adc
in
fdiv
inc
xchg
stos
jae
out
js
ins
stos
mov
aad
mov
mov
les
xchg
sub
out
mov
cli
push
neg
pop
or
add
dec
and
hlt
mov
push
mov
adc
sbb
adc
cwde
les
cmp
jg
fcomp
pushf
(bad)
test
nop
mov
call
ret
fst
mov
out
nop
leave
jge
lods
test
cdq
lods
arpl
dec
test
popa
xor
sub
aad
mov
and
fwait
in
daa
xor
cmps
xchg
icebp
mov
xlat
sbb
xchg
inc
adc
dec
mov
sbb
sub
mov
mov
mov
adc
lahf
or
das
push
push
shl
adc
mov
icebp
scas
scas
cmp
nop
sub
sbb
fisttp
xlat
sti
les
and
jo
mov
gs
into
mov
adc
jecxz
cmp
xchg
(bad)
(bad)
rcr
ror
inc
sbb
adc
pop
daa
push
js
add
xor
leave
idiv
mov
fcmovnu
mov
dec
and
add
dec
mov
and
bound
xor
jmp
movs
ja
stos
sbb
mov
cmc
mov
call
out
into
ret
mov
scas
into
push
push
sub
clc
push
xchg
sub
lds
cdq
aam
and
cmps
jge
push
inc
lahf
loopne
mov
pop
shl
lock
xor
cmp
mul
movs
lahf
mov
scas
push
inc
imul
(bad)
mov
pushf
mov
call
mov
inc
adc
mov
cwde
lock
and
and
loop
dec
sbb
in
sti
mov
cdq
sbb
mov
gs
adc
stos
inc
sub
bound
retf
sub
add
je
jno
add
sbb
pop
inc
mov
pop
push
jle
sub
cs
iret
in
cmp
aas
push
neg
cvtps2pi
scas
movs
mov
mov
fmul
mov
jg
outs
dec
push
fimul
xlat
les
jp
jns
sub
pop
test
jns
setnp
sub
test
lahf
outs
movs
not
mov
inc
outs
sbb
mov
icebp
test
mov
cmc
mov
inc
jge
and
(bad)
out
cld
ss
cmp
jmp
je
loope
sub
add
nop
ret
aas
xor
push
cmp
cmp
sbb
test
and
loopne
cmps
adc
int3
or
int
dec
cmp
push
cmps
jne
or
inc
or
sub
(bad)
out
pop
jnp
and
mov
jmp
jbe
fnstcw
pop
cmc
gs
cmp
test
sbb
mov
inc
(bad)
int3
jb
sbb
inc
retf
xor
jge
adc
imul
cmp
sub
leave
mov
jbe
xchg
add
retf
test
loopne
mov
test
adc
pushf
push
pop
test
shl
dec
xlat
es
fsubr
stos
cmp
aas
shl
mov
mov
mov
pop
fdiv
sub
test
stc
ror
fnstcw
push
dec
xchg
push
xor
mov
dec
rcl
mov
out
daa
imul
pop
sub
outs
sti
fsubr
add
clc
jg
gs
cmp
test
lds
int3
ss
fdiv
pop
(bad)
in
repnz
dec
mov
inc
mov
outs
jae
call
xchg
add
loopne
popf
add
xchg
es
gs
lock
inc
aaa
out
jle
adc
pusha
or
das
jle
retf
rcr
fisttp
fld
popf
mov
sbb
std
enter
lods
mov
gs
stos
pop
xchg
cmp
retf
xchg
jle
dec
jmp
jbe
pop
inc
mov
aas
adc
dec
cs
(bad)
dec
(bad)
mov
fbld
mov
test
sahf
and
sbb
scas
fs
(bad)
sub
mov
(bad)
jmp
mov
bound
fld
in
mov
mov
inc
pop
mov
into
inc
cmp
inc
aam
adc
inc
ret
xchg
test
mov
std
jns
enter
addr16
xchg
ffree
mov
jg
jns
pop
jge
cmps
mov
push
ss
xlat
in
ror
inc
push
mov
js
mov
popa
pop
std
das
mov
and
jle
dec
ins
data16
test
cmp
lea
aaa
test
call
inc
mov
pop
sub
xor
lock
repnz
stc
imul
mov
jo
cmp
xchg
outs
xchg
in
lds
sub
mov
jg
call
iret
xor
lock
je
add
sbb
push
loopne
out
sub
test
and
xchg
sub
or
pop
aad
sbb
mov
jne
cmp
out
int3
sub
mov
sbb
adc
mov
fiadd
loop
test
or
icebp
xchg
and
ja
jmp
push
jge
mov
inc
retf
pop
cmp
(bad)
jae
xchg
test
std
or
mov
cmc
mov
je
push
ud0
add
cli
adc
pop
adc
push
or
mov
(bad)
test
adc
sbb
fs
dec
jecxz
dec
fsub
add
mov
mov
mov
movs
cmps
jne
sahf
jns
jne
inc
mov
xchg
jno
fs
mov
std
inc
inc
shr
mov
or
xor
dec
sub
fs
add
jle
push
add
adc
pop
adc
jecxz
nop
in
in
mov
scas
jle
xchg
push
cmc
mov
pusha
mov
mov
mov
mov
sub
loopne
mov
retf
mov
jge
(bad)
ficomp
sbb
loop
aad
nop
push
addr16
mov
adc
and
adc
gs
cld
jmp
call
push
(bad)
in
add
ret
xor
jae
rcr
addr16
jmp
or
movs
push
out
mov
cdq
in
xchg
mov
out
push
fcomp
gs
in
repnz
adc
and
mov
mov
xchg
js
xchg
jo
ja
dec
frstor
inc
jmp
jae
jmp
hlt
pop
ror
sub
pop
xchg
(bad)
pop
mov
jno
enter
adc
lods
rol
sbb
clc
mov
mov
xor
xchg
jmp
jge
sbb
scas
mov
cmp
ins
fnstenv
aaa
lds
xor
jb
xchg
ret
mov
cmc
clc
adc
xor
push
jmp
jne
movs
xor
mov
pop
cmp
pop
in
pop
aas
daa
imul
mov
jl
call
mov
mov
jo
xchg
pop
fst
imul
mov
jp
int
and
popa
rcl
pop
or
and
inc
and
pop
fimul
push
ficomp
inc
cmp
pop
pushf
clc
(bad)
imul
adc
loop
outs
mov
mov
cmp
popa
cli
test
icebp
push
mov
mov
jl
xchg
sub
int
xor
or
xor
lock
cmc
bound
mov
jo
int
lods
xor
scas
add
sbb
ret
inc
push
xor
pop
add
jmp
es
into
dec
inc
iret
dec
inc
pushf
(bad)
fldenv
hlt
sbb
pop
aad
int3
sub
dec
mov
out
mov
dec
aam
inc
sbb
test
into
dec
and
icebp
sub
in
je
xor
sub
dec
cmp
push
adc
dec
enter
add
push
jmpw
scas
(bad)
sti
pop
mov
out
cmps
pop
ret
sub
cmp
add
mov
sti
lods
cmp
in
adc
xlat
sbb
rol
sahf
add
leave
(bad)
cmp
scas
(bad)
repnz
mov
adc
inc
pop
fmul
sbb
lock
popa
jp
movs
xor
or
add
rcl
dec
jns
cld
int3
mov
add
jle
mov
sub
std
xchg
cmp
ds
iret
ret
push
jle
enter
loop
daa
cmp
jnp
outs
fcom
push
shr
loope
and
adc
xchg
(bad)
dec
stos
mov
mov
cdq
xor
xchg
int
pop
dec
push
test
pop
mov
xor
adc
test
sub
aad
inc
les
and
add
cmps
xchg
cdq
mov
stos
das
ror
arpl
inc
cs
sbb
lods
mov
sbb
leave
mov
shr
shl
leave
fwait
add
stos
sub
adc
into
mov
sub
adc
imul
push
mov
aam
je
mov
mov
sbb
repz
jmp
popa
sbb
pop
xlat
cmp
sti
bound
cmp
mov
cmp
sar
xchg
mov
rcr
add
sbb
cmp
mov
pop
push
jb
pop
shl
mov
iret
add
les
adc
pop
adc
cmp
je
loopne
(bad)
pop
xchg
sbb
or
sub
retf
xchg
add
call
pop
out
jg
addr16
arpl
mov
sub
jle
or
jno
sub
dec
sbb
test
pop
aad
lds
stos
adc
inc
(bad)
dec
outs
pop
pop
mov
outs
rol
add
test
mov
shr
sub
dec
outs
mov
jge
imul
push
sahf
clc
mov
sbb
sbb
je
mov
ds
xchg
pop
pop
jl
stc
data16
es
inc
or
arpl
sub
(bad)
test
xor
pop
push
push
icebp
pop
in
js
mov
das
test
hlt
(bad)
lods
inc
mov
loop
jne
mov
or
xor
inc
in
test
xor
jp
and
xor
and
jl
pop
xor
inc
mov
xor
div
scas
pop
cld
jge
or
jbe
inc
xlat
shl
(bad)
cmp
dec
add
dec
out
mov
and
test
xchg
mov
(bad)
outs
shl
sub
enter
cmc
sub
jns
push
or
pop
and
shr
pop
mov
ret
ret
xor
push
xchg
test
xchg
push
and
pusha
lea
cmp
cld
mov
repz
or
(bad)
nop
mov
mov
(bad)
fisttp
jge
(bad)
dec
push
pop
jae
mov
xchg
out
dec
retf
and
xor
or
gs
aad
pop
call
adc
fcomp
inc
call
xor
fstp
fcomp
and
fidivr
sbb
mov
add
sub
xchg
outs
mov
ds
lea
loop
xor
push
add
adc
push
or
xlat
push
cmp
add
loop
movq
xor
mov
stc
shr
test
mov
ss
aam
or
lds
ds
inc
data16
or
sbb
and
xchg
xlat
pop
in
mov
inc
mov
sbb
ficomp
pop
sub
sub
jbe
and
mov
icebp
push
add
mov
jb
stc
and
mov
or
gs
stc
xchg
jle
lods
and
mov
aas
pop
fdivr
aas
jp
cs
push
or
fistp
sbb
nop
jle
adc
mov
stc
adc
in
mov
call
jbe
lock
hlt
mov
not
(bad)
and
jnp
and
gs
into
fisttp
fimul
mov
div
enter
push
mov
movs
rcr
loope
sbb
(bad)
shl
inc
xchg
push
jae
sbb
repz
jl
cmp
scas
sbb
daa
fwait
shl
xchg
pushf
dec
mov
js
mov
push
les
aam
mov
jbe
dec
imul
aaa
ins
popf
fucomi
jl
in
fisttp
sbb
add
sub
push
push
sub
fstp
out
pushf
stos
aaa
out
xchg
sub
xchg
ins
or
ds
jp
xor
push
lock
call
and
out
adc
ja
mov
loope
adc
cmc
stos
rol
icebp
or
jb
(bad)
cli
adc
das
int
xor
push
fadd
push
cmp
xor
inc
ror
repz
repnz
lods
fwait
adc
mov
jl
mov
xor
lahf
jmp
adc
ret
pop
std
movs
sbb
add
pop
pop
pop
push
mov
int
add
cmc
fsub
add
sbb
stos
ss
sbb
mov
or
push
mov
jb
push
movs
sub
xchg
ds
movs
adc
popf
mov
inc
mov
clc
in
bound
adc
mov
push
dec
adc
mov
push
jecxz
shr
adc
add
push
mov
shr
lea
loop
jmp
ret
push
jbe
test
rcl
sbb
pop
mov
repz
out
push
(bad)
dec
retf
hlt
or
in
mov
leave
icebp
mov
in
sbb
mov
pusha
mov
push
sahf
pop
dec
lods
movs
repnz
div
mov
jbe
or
pop
in
in
and
ja
daa
je
jnp
adc
inc
es
jnp
jnp
inc
in
scas
add
or
dec
es
cmp
retf
mov
inc
pop
cmp
std
jp
shl
mov
jp
sar
cwde
mov
inc
and
ret
ins
xchg
mul
shl
mov
xchg
and
loop
push
and
mov
and
jmp
fisubr
xlat
cwde
fsub
or
cmps
cmp
inc
loope
rcl
call
mov
dec
jns
outs
mov
mov
dec
sbb
xor
sub
jnp
jmp
cwde
jge
and
and
imul
mov
ins
pop
cmp
sub
loope
jmp
pop
xor
fistp
adc
fs
jmp
pop
dec
in
daa
xchg
cmp
push
loop
and
and
js
lahf
push
es
mov
(bad)
sub
in
in
into
push
sahf
xor
cmp
lahf
pop
sar
call
nop
ja
jo
ficomp
sub
imul
fidiv
loopne
mov
cmp
ror
in
das
sbb
popw
rcl
lock
nop
lea
repnz
das
ret
iret
and
lods
sub
or
adc
shl
leave
adc
or
retf
jnp
int3
xchg
stos
lea
das
mov
cwde
loop
xor
ret
int
rcl
test
fwait
fwait
pop
mov
call
lods
rcr
cwde
pop
out
mov
aad
aad
pop
pop
inc
xor
and
cmp
pop
aaa
cmp
adc
rol
outs
add
push
adc
sub
adc
add
push
pop
jge
fldcw
mov
adc
adc
add
xor
sbb
push
xor
pause
jle
mov
inc
xchg
mov
cmc
push
ret
xor
popa
jp
cmp
bound
cld
aaa
arpl
mov
arpl
xchg
bound
test
fwait
icebp
fistp
xor
xor
js
sbb
or
sub
nop
dec
mov
std
dec
dec
inc
shl
outs
adc
dec
pop
pop
dec
mov
dec
aam
repz
cmp
push
inc
adc
scas
movs
pop
shl
sbb
cmp
mov
out
dec
mov
push
mov
test
test
stos
ror
loop
out
adc
mov
xor
push
inc
fstp
push
lds
enter
clc
jge
test
frstor
ret
xor
mov
cmc
mov
imul
lahf
mov
xchg
push
jge
cmp
sub
adc
cdq
int3
jns
jle
or
xor
shl
addr16
sub
dec
cmp
fistp
ror
cli
jbe
push
xor
and
in
adc
add
fs
das
dec
outs
inc
ins
scas
sar
mov
push
ins
addr16
scas
call
jmp
neg
out
jl
jmp
movs
mov
shl
pop
cmp
int3
gs
mov
daa
cmp
pop
xchg
mov
xor
(bad)
push
inc
cmp
bound
scas
add
sar
fwait
icebp
xchg
push
mov
cmc
and
icebp
and
js
test
lahf
int3
in
pop
adc
push
pop
outs
push
push
hlt
rcl
xor
and
sub
ror
cmp
lods
add
add
jl
jecxz
dec
jmp
loop
repnz
push
fldln2
scas
repnz
or
aad
jmp
sub
out
(bad)
fsubr
push
jmp
fmul
mov
jecxz
adc
(bad)
jb
sbb
xchg
pushf
adc
dec
mov
addr16
ss
icebp
fcomp
(bad)
lock
adc
inc
scas
fisubr
add
fcom
xor
test
xchg
sahf
in
stc
inc
and
aad
std
pmaxub
movs
push
movs
fiadd
cmc
daa
jmp
pop
mov
add
daa
push
jmp
jl
mov
retf
jno
xchg
jp
mov
or
fdivr
(bad)
int3
retf
push
sub
adc
shl
fwait
jns
jecxz
jl
fs
mov
mov
movs
xchg
repz
aas
xor
rcr
pop
pop
mov
mov
jecxz
shr
jecxz
dec
popf
dec
mov
ffreep
sbb
push
xchg
sbb
add
mov
cmp
in
xchg
ds
lea
xchg
push
mov
enter
xor
push
push
mov
xchg
sbb
dec
and
jmp
ret
mov
dec
mov
jno
dec
xchg
lods
imul
cwde
mov
pop
sbb
in
sub
sbb
mov
push
inc
push
push
aad
mov
xchg
dec
xchg
cdq
iret
jmp
repz
ret
pop
in
inc
pop
sbb
and
inc
and
int3
test
sbb
fld
out
adc
inc
out
inc
xor
jg
mov
inc
xchg
outs
ror
inc
sbb
cmp
cld
int3
into
mov
clc
or
mov
inc
aam
mov
test
cmp
mov
sbb
aaa
or
add
stos
lds
das
pop
out
jmp
in
dec
popa
ror
ins
mov
hlt
int3
iret
enter
pop
hlt
rcl
pop
in
sbb
or
cmp
out
or
and
aad
jp
je
adc
stc
cmp
mov
in
out
sub
daa
arpl
push
mov
sub
push
add
mov
pop
sub
mov
jle
mov
aas
xchg
cdq
pop
not
in
push
outs
mov
(bad)
aad
mov
iret
pop
(bad)
fstp
dec
inc
loop
sub
popf
sub
push
pushf
and
jmp
shl
and
mov
cli
or
call
dec
shr
sub
fsub
pop
push
(bad)
loop
(bad)
scas
xor
add
sub
pop
ret
pop
pop
and
xor
jl
push
mov
call
push
ror
ret
ja
mov
jmp
ret
repnz
sub
lds
pop
ret
sbb
shl
mov
sbb
shl
jae
(bad)
jp
or
adc
mov
xlat
imul
jns
fmul
inc
add
dec
in
retf
repz
xlat
sub
stos
pop
cdq
xchg
xor
sbb
dec
push
lea
stos
push
sbb
or
mov
pop
push
push
outs
les
daa
adc
mov
loope
and
pop
lods
sub
jnp
and
test
shl
inc
mov
dec
adc
ficomp
cmps
das
dec
jmp
sti
sbb
les
sub
out
jbe
pop
cmp
mov
adc
inc
jnp
mov
push
adc
mov
fldenv
ret
aas
xchg
in
push
add
aad
xor
or
mov
repnz
fisttp
mov
push
ss
sub
or
push
or
jae
ficomp
stos
xchg
mov
aaa
mov
(bad)
repnz
and
ret
std
enter
bound
mov
sahf
loopne
dec
inc
jo
jle
adc
fbld
push
mov
test
ja
stos
jno
jp
jo
xor
mov
cmp
push
aas
lods
ja
imul
jecxz
inc
push
sahf
repnz
outs
jmp
add
inc
test
cmp
js
cwde
pop
mov
or
pusha
frstor
adc
push
in
xor
leave
add
outs
ror
mov
jb
sub
jge
and
in
adc
test
pop
pop
arpl
stc
fcomp
aas
in
cmp
popa
add
or
and
call
test
jmp
dec
and
mov
adc
push
xor
mov
and
ins
and
(bad)
lods
cmp
mov
call
cdq
add
fild
sti
mov
ret
out
ins
outs
xchg
jnp
rol
imul
dec
cmp
add
jg
shl
cmc
pop
adc
pop
scas
mov
cmc
std
mov
daa
dec
int
stc
fwait
push
ds
das
(bad)
push
mov
retf
xchg
inc
sub
and
shl
mov
push
movs
inc
xor
xor
jmp
sti
mov
push
adc
in
int3
push
pop
nop
mov
and
loop
lds
pusha
mov
loope
loopne
loopne
pop
fwait
mov
cmp
(bad)
imul
shl
hlt
div
cmc
xchg
pop
mov
popf
ds
int3
fldenv
pop
lahf
mov
inc
and
out
inc
fbstp
jge
push
push
sub
sbb
jp
ret
gs
and
cmps
ret
add
in
aad
lds
cmc
je
js
inc
sub
adc
xchg
fmulp
xchg
push
shl
ins
mov
pop
dec
adc
daa
test
cs
dec
jge
aas
adc
sub
enter
xchg
pop
popa
call
push
adc
add
(bad)
xchg
cli
out
retf
dec
lds
pop
adc
mov
rol
sub
adc
cli
(bad)
lds
ins
adc
pop
mov
loope
push
clc
std
sub
mov
sub
mov
add
aam
iret
mov
adc
hlt
(bad)
mov
popf
mov
add
int3
leave
push
mov
mov
push
inc
xchg
inc
scas
push
jns
(bad)
stc
sub
push
lahf
js
popa
es
xor
push
sub
dec
cld
pop
sbb
mov
sub
cmp
push
in
xor
cmp
xor
dec
cwde
or
retf
and
inc
dec
dec
cmp
sbb
sub
xor
and
cmp
mov
ficom
cmps
leave
mov
pop
mov
loope
inc
xor
arpl
xor
xor
jne
xor
jmp
ins
xchg
push
dec
in
inc
addr16
fldenv
ins
clc
int3
pop
loope
xchg
js
mov
push
ds
xchg
mov
je
js
outs
jnp
jo
cmp
xor
pusha
pop
xchg
imul
jns
test
mov
ficomp
sbb
inc
cmp
jp
mov
sub
mov
call
and
add
sbb
push
pusha
xchg
mov
jns
je
xchg
and
loope
jnp
jno
ror
xor
stos
mov
call
xchg
ror
mov
std
sahf
(bad)
jp
inc
push
mov
dec
push
sub
add
dec
test
xor
mov
outs
daa
mov
jmp
into
mov
aas
xor
cs
push
mov
outs
clc
test
jb
sti
add
in
test
repnz
popa
ins
sub
or
xor
mov
jp
jmp
shl
sar
test
sub
arpl
or
or
and
cmc
fcom
sqrtps
mov
rcl
cs
aas
xlat
out
inc
not
cmc
test
(bad)
push
pop
mov
or
into
fs
xchg
and
arpl
push
js
inc
push
in
jp
dec
mov
jecxz
std
nop
imul
inc
cs
push
test
out
mov
push
add
fild
cmps
xchg
leave
or
dec
or
dec
lods
cs
inc
xchg
ret
or
js
jecxz
adc
xor
pop
mov
pop
daa
jecxz
lahf
add
pop
sahf
rcl
cwde
or
adc
adc
or
add
xor
pop
lods
loop
and
(bad)
jns
mov
cdq
xchg
cmp
jb
adc
test
dec
xor
jmp
sbb
sbb
icebp
xchg
(bad)
adc
jb
and
inc
ret
std
sahf
mov
int
mov
dec
in
arpl
nop
sbb
xor
adc
lahf
test
mov
pop
inc
js
addr16
test
mov
xor
aad
sbb
int
popa
mov
jge
jecxz
sbb
add
test
fwait
mov
bound
into
push
sbb
push
ror
shl
test
or
mov
(bad)
scas
mov
xor
jmp
int3
loopne
outs
push
shl
(bad)
in
enter
(bad)
or
test
xchg
push
mov
retf
dec
xor
mov
mul
out
movs
pusha
arpl
jne
and
jnp
pop
mov
cmps
rol
and
rcr
and
sti
or
cs
dec
xchg
push
sub
cmps
cli
sbb
or
mov
ficomp
lea
jp
test
repz
or
push
fwait
sbb
les
mov
pop
pusha
cmps
inc
jbe
cmp
cwde
sar
fs
ja
adc
bound
jmp
(bad)
mov
cmp
mov
cli
int
sar
dec
jge
add
inc
inc
adc
xchg
dec
(bad)
adc
test
sar
fwait
mov
pop
mov
jno
or
aaa
jb
adc
pushf
clc
(bad)
in
mov
mov
shl
push
shl
mov
fstp
loop
lock
loop
mov
lahf
iret
mov
or
pop
cmp
fs
out
mov
inc
pop
(bad)
(bad)
cld
mov
cli
shl
jne
jbe
jp
add
retf
pop
call
xchg
outs
aam
(bad)
sbb
xchg
xor
and
sbb
pop
or
jb
xchg
fsub
mov
rol
or
adc
xor
jno
sub
(bad)
mov
inc
test
add
or
adc
test
xchg
dec
addr16
xchg
inc
pop
pop
inc
int3
pop
lock
in
inc
bnd
sbb
inc
shr
imul
cmp
jne
enter
mul
pop
pop
adc
aam
mov
push
mov
not
sub
sar
shl
mov
push
cmps
loope
mov
mov
inc
jge
adc
sbb
aas
pop
xor
shl
jg
lods
lds
(bad)
mul
adc
movs
data16
mov
aam
(bad)
out
jp
xchg
xchg
mov
dec
push
sub
das
inc
je
pop
dec
pushf
loopne
inc
mov
shr
(bad)
mov
push
ds
(bad)
and
dec
mov
sub
aaa
js
fisubr
mov
mov
mov
add
inc
out
cmp
imul
hlt
add
aas
test
in
xor
add
retf
not
into
loopne
inc
loop
fwait
mov
daa
in
test
push
push
jle
xor
into
xor
or
cmp
sbb
pop
xor
outs
jae
and
mov
pop
aad
ror
mov
dec
jbe
in
and
(bad)
shl
out
and
jbe
pop
dec
mov
adc
or
or
ja
cmps
pop
in
pop
jne
xor
ss
adc
jge
or
jno
inc
pop
pop
mov
movs
out
adc
in
or
in
push
iret
stos
into
adc
rol
cmp
and
fmul
pop
mov
rcl
add
lods
(bad)
fmul
mov
in
cmps
push
int
mov
dec
push
mov
mov
idiv
fidiv
das
(bad)
sbb
clc
and
or
fcmove
jle
mov
arpl
mov
fsub
sub
aas
mov
in
daa
mov
loopne
jbe
mov
xchg
jg
lds
leave
xor
sbb
sub
mov
adc
mov
test
and
ror
daa
push
stos
and
loope
add
stc
jae
cmc
fnstenv
pop
repz
out
rcr
mov
cmp
aam
mov
lods
xchg
mov
sbb
das
inc
push
and
retf
and
cmp
jb
dec
mov
mov
repz
add
add
movs
in
mov
lods
dec
aam
jle
test
jmp
add
sub
retf
pop
aam
test
fldcw
inc
enter
and
pop
or
mov
fild
sub
test
inc
gs
ror
add
sbb
dec
call
push
xor
inc
or
mov
pop
lds
fisub
fiadd
repz
imul
xchg
jp
sar
dec
int
or
icebp
out
or
fs
xor
ds
sbb
in
cmp
int3
xchg
add
lahf
push
imul
add
xor
mov
dec
dec
xlat
gs
inc
cdq
xchg
push
or
in
cld
int3
jns
test
les
push
push
mov
xchg
dec
mov
jns
nop
mov
inc
sbb
add
or
(bad)
das
cmp
dec
jp
dec
pop
loopne
popf
(bad)
loop
data16
leave
mov
shl
out
or
dec
xchg
lock
pop
push
pop
loope
cli
ins
in
in
push
fdivr
aas
and
jmp
cwde
fwait
push
or
and
fcomip
xor
jbe
das
mov
stc
leave
adc
and
in
dec
inc
pop
int3
cmps
outs
inc
retf
jecxz
and
das
cmp
add
cli
cs
int
adc
pop
push
pop
mov
ss
adc
mov
push
and
push
xchg
jmp
outs
test
scas
dec
das
xor
sbb
mov
enter
mov
fisttp
std
loop
xchg
mov
sub
mul
xor
sbb
xchg
mov
fisub
aam
call
sbb
xchg
xchg
nop
cmc
mov
test
pop
dec
adc
std
call
fadd
fbstp
shl
outs
les
xchg
and
test
mov
lds
aas
or
popf
ret
shl
mov
mov
fdiv
mov
les
mov
push
bound
and
call
mov
add
or
jb
xor
ds
(bad)
cmc
push
cld
mov
ret
fwait
pop
sbb
and
pop
sub
mov
(bad)
div
rol
mov
lea
inc
jns
sub
dec
mov
push
clc
pop
cmps
sahf
push
pop
add
cdq
pop
mov
pop
adc
repnz
push
ror
and
add
or
or
fidivr
jb
xlat
pop
mov
mov
retf
xor
jb
cmp
das
and
jmp
adc
fstp
imul
cli
mov
mov
dec
cmps
ja
movs
mov
popf
stos
jo
inc
enter
test
and
cli
push
add
(bad)
cld
sbb
outs
mov
pusha
add
jmp
bound
imul
inc
xchg
pop
jns
sar
push
imul
jmp
stc
fwait
pop
ins
out
pop
push
dec
mov
mov
aam
xchg
inc
stos
add
add
hlt
shl
push
test
(bad)
int
in
cmp
out
and
or
sbb
dec
jp
int3
dec
scas
xchg
jge
fisub
push
jge
add
sbb
or
adc
cli
mov
lock
or
push
xor
xor
push
idiv
enter
ret
jmp
add
jbe
or
fwait
mov
mov
and
cwde
pop
inc
rcl
call
push
push
es
hlt
inc
mov
sub
jbe
pushf
retf
sub
mov
imul
xor
outs
jns
adc
inc
inc
dec
dec
std
adc
mov
add
in
push
sub
inc
int
mov
sub
in
movs
mov
mov
jno
xor
retf
add
jl
shr
add
fstp
pushf
imul
mov
inc
retf
sub
mov
mov
jb
out
push
inc
cdq
push
(bad)
push
push
lods
mov
mov
repnz
cld
mov
adc
or
lahf
mov
xchg
xchg
jmp
xchg
sbb
and
popa
jmp
(bad)
test
shr
lahf
sub
sahf
fsub
push
pop
push
mov
cmc
or
sbb
sar
or
sahf
sbb
in
loope
icebp
and
ds
mov
xchg
add
in
jae
jmp
cs
xchg
and
xor
cmp
movs
outs
test
int3
mov
push
mov
test
xchg
jnp
mov
dec
lods
inc
je
add
pushf
mov
or
xlat
jno
add
jmp
lods
jae
mov
sbb
icebp
int
xchg
inc
mov
fs
ja
(bad)
jns
pushf
mov
outs
retf
xor
push
jnp
inc
aas
(bad)
imul
int3
adc
mov
cwde
add
sub
jmp
mov
jmp
adc
mov
mov
jne
add
and
ss
enter
push
lahf
test
push
fisttp
sar
adc
cmps
or
fidivr
xchg
mov
scas
push
xor
inc
es
sbb
push
sub
or
addr16
test
push
xacquire
inc
sahf
callw
(bad)
cli
stos
fld
xor
mov
add
sbb
iret
dec
sub
cmp
in
iret
push
pop
dec
outs
test
mov
aam
aas
out
scas
div
stos
dec
sub
push
retf
jl
std
sub
(bad)
shl
cmc
in
ret
cmp
push
retf
fwait
ins
mov
push
mov
test
push
lds
or
scas
mov
in
sti
fadd
push
stos
mov
mov
inc
fstp
mov
dec
or
push
adc
push
or
inc
xlat
jns
scas
scas
clc
mov
lods
xor
test
push
mov
mov
scas
mov
ret
stc
cwde
add
xlat
add
pop
inc
or
jno
repnz
mov
mov
sbb
cdq
pushf
inc
repnz
adc
pop
pop
into
mov
test
movs
jae
xchg
sbb
stc
dec
mov
bound
inc
sbb
ins
rcl
pop
loopne
rcl
stos
mov
jmp
mov
addr16
aas
sub
icebp
in
add
fimul
loop
push
push
ds
addr16
bound
lock
cmc
stc
push
mov
dec
aam
cmps
aaa
xor
repz
call
mov
in
jmp
xchg
and
sbb
sub
dec
seta
xchg
or
jo
jmp
jae
cmp
dec
movs
fucomp
loop
loopne
mov
in
sub
lds
fisub
push
rol
fisttp
int
xchg
call
xor
sub
bound
jb
nop
add
and
xchg
jns
pop
imul
sub
jmp
add
mov
bound
call
in
pop
xchg
jb
repnz
das
xchg
sbb
aad
test
out
std
dec
sub
adc
aam
into
inc
leave
aaa
(bad)
jecxz
ror
and
(bad)
xchg
pop
inc
les
(bad)
mov
push
fcomp
cli
cmps
pop
adc
jb
mov
jns
popa
push
test
sub
repz
pop
iret
dec
lods
(bad)
je
ds
or
xchg
pusha
or
jle
stos
dec
push
scas
or
pop
lock
inc
dec
std
xlat
xchg
sub
sbb
xchg
mov
inc
mov
jb
int3
retf
add
jle
or
bound
mov
pop
jnp
ds
jmp
ret
mov
ins
fwait
and
ret
push
test
mul
mov
call
pop
ss
(bad)
fld
test
add
int3
mov
pop
int
push
jmp
xor
or
jb
js
sbb
sbb
std
push
in
js
mov
(bad)
call
and
ret
scas
mov
clc
js
xor
sub
lea
add
and
movs
into
jb
adc
jmp
jg
cmp
out
sbb
mov
xor
push
cmps
add
in
and
mov
int3
mov
pop
sub
rcl
in
mov
adc
pop
mov
sahf
lods
out
outs
(bad)
dec
push
cmc
push
in
xchg
and
xor
inc
retf
clc
hlt
adc
sbb
pushf
out
jmp
pop
push
push
cmps
shl
adc
and
inc
call
fsub
sbb
mov
test
and
cmp
fld
lock
bound
mov
inc
sub
inc
pushf
pop
push
es
into
ror
and
push
lds
mov
pop
dec
xchg
mov
call
mov
xchg
addr16
fsubr
add
inc
mov
lock
lods
pop
stos
inc
add
pop
inc
aaa
push
(bad)
or
sub
mov
ja
add
loopne
cmp
add
(bad)
or
and
fadd
aas
lock
aas
pushf
jle
cmp
imul
pusha
or
cld
stc
add
stos
in
shl
or
jns
add
jmp
push
cmp
popf
pop
js
xchg
in
pop
push
jecxz
mov
or
daa
cmp
loop
bound
mov
ret
scas
ds
adc
adc
shr
repz
dec
jo
sahf
push
inc
or
push
pop
pop
mov
or
fld
xchg
nop
and
cld
push
xchg
jp
jnp
outs
or
ins
push
sub
cmps
adc
daa
mov
cli
xor
mov
mov
and
dec
cld
xor
dec
cmp
xchg
test
enter
cli
repz
add
jp
xlat
test
push
push
ins
leave
aas
xchg
pop
pop
in
mov
inc
lds
jecxz
xchg
jecxz
popf
sub
push
cmc
cld
mov
test
jb
xchg
add
imul
adc
mov
dec
push
lds
sbb
xchg
sub
sub
sub
fs
cmp
xor
fmul
(bad)
sub
in
sbb
call
dec
(bad)
pop
in
add
cli
add
(bad)
push
mov
inc
jg
push
mov
jmp
(bad)
scas
jmp
inc
and
fist
fsubrp
je
jne
mov
imul
push
sbb
sbb
ror
loop
aas
loope
jbe
and
push
lea
je
in
cmps
(bad)
xor
(bad)
js
das
lds
cmp
xlat
lea
pusha
pop
xor
fdivr
enter
xchg
adc
lahf
rcl
fwait
mov
scas
dec
test
lds
leave
pusha
sbb
sbb
mov
mov
loopne
in
sti
repz
xor
cmp
loop
xor
cmp
xchg
jae
pop
or
push
xchg
outs
inc
mov
xchg
test
jns
inc
xchg
dec
rcr
(bad)
aaa
mov
cwde
mov
in
sbb
push
aaa
jnp
cmp
retf
rol
jl
and
shr
push
shr
loop
retf
and
ret
in
dec
dec
xchg
jecxz
int
xor
sub
shr
jmp
jp
sub
imul
stos
and
call
sbb
(bad)
adc
dec
arpl
inc
xlat
sbb
pop
lea
sub
inc
fcomip
or
add
xchg
jle
inc
int3
shr
imul
and
mov
test
in
in
push
mov
mov
in
push
push
sub
pop
mov
fmul
in
cmp
test
mov
cli
(bad)
aaa
pop
or
mov
sar
bound
imul
lea
dec
cmc
sub
popa
dec
pop
repz
inc
sub
in
push
mov
ret
sbb
pushf
cmp
popa
xor
stos
mov
or
sub
sub
aad
fs
or
scas
mul
xchg
pop
fwait
xor
popa
hlt
cdq
rol
out
lea
sbb
xchg
dec
test
ja
and
out
scas
ja
xchg
push
dec
xor
jp
push
mov
adc
fdiv
ret
cmps
outs
cwde
adc
jg
mov
(bad)
mov
add
pop
mov
xchg
push
dec
ror
loopne
sar
cwde
jne
mov
pop
test
iret
ss
xor
and
(bad)
out
jecxz
aas
stc
or
adc
push
or
add
inc
inc
(bad)
sub
es
rcr
int3
fstp
ja
(bad)
mov
scas
fisubr
dec
addr16
jmp
mov
mov
mov
xor
and
jg
dec
cmp
or
jmp
adc
or
loop
inc
lahf
mov
mov
cmp
adc
jae
cwde
sbb
movs
sbb
fnstenv
aas
dec
clc
mov
pop
loopne
pop
push
pop
adc
mov
mov
cdq
adc
aas
xchg
dec
xchg
lods
mov
xchg
fcmovu
mov
(bad)
push
and
sub
out
int3
mov
hlt
cmp
pop
mov
(bad)
mov
icebp
pop
out
stos
arpl
push
adc
call
scas
mov
lods
push
(bad)
in
push
scas
xchg
mov
out
shl
inc
in
gs
mov
jmp
shr
or
(bad)
or
add
push
xlat
jle
or
loope
cmps
ds
call
into
mov
push
cli
xchg
add
or
arpl
sub
popa
ss
mov
bound
mulps
je
imul
inc
push
mov
imul
icebp
adc
fst
mov
xor
or
cmp
lea
adc
test
imul
movs
cld
cmp
pop
rcr
mov
js
mov
in
sub
imul
add
movq
std
xor
push
js
aam
jmp
aas
repz
xchg
add
loope
sbb
int3
mov
xchg
dec
setbe
mov
loop
and
mov
or
push
xor
nop
jle
clc
xor
dec
les
inc
mov
inc
dec
sbb
sbb
mov
(bad)
retf
inc
or
mov
pop
cmp
mov
enter
cmps
cmp
or
pop
aas
jmp
scas
retf
xchg
lock
jge
or
outs
dec
push
sbb
aas
jp
jge
outs
pusha
and
add
cmp
fst
into
outs
inc
mov
outs
adc
cmp
xchg
jmp
in
xchg
mov
push
lods
mov
repz
cmp
js
jg
nop
cwde
mov
in
test
shl
mov
out
mov
adc
mov
std
and
lods
push
movs
mov
pop
jl
call
shl
xchg
xor
xchg
lds
pop
cmc
std
fs
pop
ret
mov
push
mov
dec
shr
mov
cdq
sbb
addr16
jecxz
je
scas
sub
stc
js
push
leave
xchg
ss
dec
into
ja
enter
repz
lods
jns
inc
adc
add
aam
dec
cs
cmp
shl
lahf
sti
and
sub
pop
and
ficomp
pop
in
int3
cs
and
adc
aam
adc
xor
out
add
cmc
xchg
xor
push
add
jns
pop
int
cmp
int
pop
sub
xor
or
cmp
cli
and
or
call
push
push
ja
fwait
sti
sub
mov
cmp
imul
push
mov
fistp
and
mov
or
adc
cmps
xchg
sbb
push
ds
sub
iret
dec
mov
cdq
test
push
jno
xchg
cmp
(bad)
in
int
and
and
daa
inc
mov
mov
add
sub
adc
xor
xor
cwde
jb
ret
mov
call
(bad)
and
push
addr16
mov
pop
sbb
test
cdq
jne
fidiv
push
xchg
imul
jge
cmp
xor
sbb
mov
inc
dec
inc
xor
mov
daa
or
dec
adc
push
push
mov
sbb
frstor
mov
ins
jecxz
cmps
mov
mov
sbb
jg
shr
ds
xchg
xor
sub
das
mov
cwde
push
outs
arpl
test
lock
inc
lods
or
push
test
jge
sub
xchg
inc
pop
imul
add
jp
sti
cld
pop
sub
shr
pop
add
fsubr
xchg
jns
les
into
stc
cli
add
pushf
dec
dec
ficomp
mov
cmps
leave
and
add
cmp
(bad)
cs
jo
repz
or
pushf
adc
ret
and
ret
or
pop
cld
and
and
sub
bound
fidiv
dec
stos
cmp
add
xor
sbb
out
mov
bswap
into
or
cdq
mov
jno
ds
or
int3
int
iret
dec
jns
push
dec
cmc
cmp
outs
sub
and
add
push
out
mov
sub
dec
pushf
xchg
(bad)
int3
pop
sub
sub
jecxz
les
mov
mov
sbb
ror
add
mov
jle
push
cmps
out
jo
loop
inc
or
fmul
into
fadd
push
sub
or
mov
cmp
sbb
retf
scas
mov
out
(bad)
and
dec
or
lods
sub
ds
les
sbb
and
dec
dec
pop
arpl
in
dec
pop
retf
mov
adc
mov
out
push
les
leave
push
ins
xchg
(bad)
loop
and
hlt
lahf
ss
cmps
cmps
rol
(bad)
pop
xor
jns
xor
xchg
xor
and
xor
pop
pop
in
cmp
sbb
cmps
adc
push
lods
iret
push
bound
ds
mov
(bad)
adc
jl
pop
ja
aad
jp
jg
stc
add
cmp
push
(bad)
push
push
aad
ins
stc
in
dec
fstp
test
outs
(bad)
popf
xor
ins
retf
inc
xor
mov
cs
leave
adc
popa
pop
push
xor
fsubr
shl
xchg
fwait
push
fsub
and
inc
inc
mov
loop
or
js
std
mov
scas
loop
dec
mov
mov
pop
mov
lods
out
pop
jnp
jle
and
push
jmp
popa
cdq
cmc
cwde
int
shl
mov
and
push
push
inc
loop
xor
pop
adc
xor
add
sub
(bad)
aaa
lea
fsub
pop
push
daa
xor
cmp
not
jl
leave
mov
je
outs
popf
addr16
cwde
sub
js
mov
lods
mov
mov
in
cdq
or
loopne
adc
xor
arpl
cmp
or
stos
cs
cwde
xlat
ins
sahf
ror
push
test
jb
imul
out
add
pusha
push
push
imul
xchg
add
retf
inc
mov
or
or
push
sahf
call
xchg
jg
pushf
fisubr
jle
rol
leave
fnsave
mov
test
fwait
je
rcl
popa
dec
jno
mov
and
pop
dec
inc
mov
ins
cli
dec
fdiv
push
mov
bound
rol
or
xchg
fcom
xor
dec
rcl
leave
(bad)
jle
outs
pop
pop
dec
out
adc
ret
neg
bound
movs
jns
rol
mov
adc
cmc
sub
into
jo
cmp
pop
dec
mov
and
ret
mov
xlat
ds
sar
(bad)
jns
pop
push
mov
repnz
lock
mov
jg
lods
push
xor
ss
and
xchg
fild
mov
ins
add
and
xchg
sti
into
pop
repnz
xchg
xor
xchg
lea
in
jmp
lods
fs
sbb
and
sub
cmp
scas
in
xor
js
das
jbe
dec
iret
inc
outs
fsubrp
jle
dec
loopne
pop
cmps
ds
sub
xchg
test
cdq
cmp
mov
cmps
jmp
in
add
pand
jmp
in
push
mul
ins
mov
push
imul
int3
scas
pop
cmp
cs
or
inc
pop
ins
sbb
mov
movs
sbb
xor
loope
mov
enter
xlat
cld
ror
out
(bad)
lea
cwde
dec
add
or
sti
mov
movs
push
add
cmc
test
sub
aad
pop
pop
outs
fdivr
mov
ins
and
dec
sub
mov
cs
aaa
adc
cmp
sub
sahf
xchg
retf
hlt
pop
xor
sub
fmulp
dec
inc
dec
out
xor
mov
jg
jno
stos
lods
mov
movs
xor
call
outs
sub
adc
xor
pop
inc
cmp
mov
and
pop
dec
inc
lahf
inc
push
jbe
or
aaa
outs
add
mov
scas
mov
cmp
es
or
xor
and
lea
xor
jl
fwait
or
into
mov
jl
or
mov
shl
jno
std
and
out
inc
fistp
jns
push
and
(bad)
sub
inc
ret
imul
das
dec
sbb
mov
xchg
push
mov
xlat
mov
mov
mov
or
mov
lods
in
dec
dec
mov
and
cmp
xlat
daa
rcl
sub
mov
xor
pop
lea
jge
push
outs
mov
leave
stc
outs
aas
rcr
scas
mov
cmp
sub
arpl
mov
mov
or
sbb
stos
or
std
mov
hlt
test
std
sub
call
imul
pop
out
bound
inc
mov
push
pop
pop
shl
(bad)
mov
loope
repz
inc
jp
mov
pop
push
imul
dec
push
cmp
inc
sbb
cmps
(bad)
cmps
jmp
dec
ret
add
lds
push
xchg
mov
mov
sar
(bad)
aad
pop
or
xor
ja
loop
fild
icebp
call
data16
cmp
popf
retf
cmp
pop
mov
jge
cmp
dec
cmp
fdiv
push
and
xchg
lods
outs
lods
push
pop
xor
call
hlt
pop
adc
dec
mov
xor
test
fld
(bad)
jecxz
jnp
sub
lods
sti
xchg
adc
mov
push
cmp
pop
(bad)
mov
and
cmp
pop
push
add
xchg
push
in
pop
iret
xchg
mov
mov
mov
and
pop
fucomp
enter
xchg
std
js
jb
jmp
and
adc
and
hlt
pop
push
repz
and
not
imul
scas
mov
push
inc
sub
ins
(bad)
je
out
jae
xor
cmp
into
sar
mov
(bad)
(bad)
sub
xchg
jne
loope
cdq
cmp
jp
add
sbb
movs
pushf
fsubr
adc
sub
pop
dec
rcr
arpl
jae
into
cld
mov
aad
xor
adc
ror
mov
popf
(bad)
fsubp
movs
jp
xchg
sar
lds
pop
sub
icebp
jg
outs
fstp
push
xchg
cmc
cmp
stc
adc
inc
mov
jne
int
cmp
dec
dec
xchg
sub
sbb
sbb
shl
jbe
push
pop
adc
fstp
and
movs
push
cld
mov
add
push
xchg
and
iret
mov
pop
fidiv
or
into
lock
dec
fstp
sub
mov
in
dec
sbb
and
fnstcw
jmp
fwait
leave
and
xchg
xchg
and
push
and
or
jmp
out
jle
in
int3
shl
pop
adc
sbb
lahf
pop
pop
sub
sbb
inc
jecxz
mov
mov
popa
push
push
outs
loope
inc
dec
xor
xchg
pushf
dec
fisubr
pushf
clc
sub
jecxz
dec
imul
movs
sbb
sbb
push
fcomp
jne
jl
sub
inc
es
mov
bound
ret
push
movs
dec
sahf
pop
pop
imul
push
and
retf
jno
test
sahf
shl
outs
stc
test
pop
lahf
push
mov
cmps
push
loopne
mov
pop
adc
or
and
or
cmp
sub
retf
adc
imul
aad
addr16
sub
cmp
fadd
push
push
jbe
mov
loopne
push
mov
test
clc
pop
mov
xchg
stc
aaa
aas
sub
mov
pushf
dec
adc
pop
retf
out
out
js
lods
into
dec
push
bnd
mov
jmp
sub
push
adc
adc
(bad)
movs
and
out
pop
dec
pop
mov
inc
call
mov
popa
mov
jmp
aas
pop
pusha
test
pop
in
loop
cwde
sub
jae
leave
fcomp
out
push
dec
test
aam
mov
lea
data16
mov
retf
mov
mov
and
imul
(bad)
sti
lahf
xor
test
add
add
mov
cmp
icebp
cmps
and
add
(bad)
add
test
jl
loope
mov
dec
mov
fdivr
mov
jl
push
add
test
cwde
ret
aas
push
fstp
not
daa
jle
push
mov
nop
inc
lods
mov
int
retf
data16
(bad)
xchg
cdq
mov
or
hlt
inc
call
and
test
lock
popa
push
ret
mov
ja
invd
das
xchg
push
int3
jg
fnsave
daa
cmp
fidiv
cmps
or
xchg
test
shr
mov
lahf
jl
inc
mov
mov
cli
movs
pushf
xor
std
ss
pop
and
(bad)
bound
pop
xchg
adc
dec
xchg
mov
or
xor
jo
out
mov
jmp
push
daa
dec
scas
test
xor
cdq
add
mov
ins
pop
adc
sub
dec
sbb
mov
xchg
xchg
fst
cmps
xchg
add
dec
in
hlt
mov
mov
ret
and
push
je
mov
in
inc
fistp
lahf
test
cwde
stos
dec
(bad)
jns
int3
jnp
cdq
adc
add
rol
repz
mov
sub
or
or
lock
inc
outs
xor
add
fsub
inc
movs
js
push
ds
and
mov
inc
ret
ror
mov
fisttp
mov
(bad)
arpl
xlat
sub
xchg
jg
inc
ret
mov
js
movs
retf
jo
push
sbb
rcr
test
(bad)
xor
in
nop
nop
add
(bad)
mov
xchg
pop
push
stos
retf
pop
ins
and
push
push
jo
fidivr
dec
popa
and
fnstcw
or
cmp
mov
add
fcomp
push
pop
fidiv
test
jno
std
das
lods
push
inc
pop
int
mov
push
pop
pop
ror
bound
jg
ss
or
aam
and
and
cmps
xor
push
push
pop
push
or
jb
push
cmp
xchg
lock
jbe
xchg
fstp
pushf
and
add
cmc
mov
jl
xor
leave
out
(bad)
or
cwde
dec
or
fdivp
add
jo
out
xchg
(bad)
jbe
mov
jnp
inc
add
mov
rcl
lahf
popf
jnp
cmc
test
xlat
pop
mov
call
call
xor
add
push
jno
push
pop
test
outs
cmp
dec
imul
out
pop
clc
jmp
scas
pop
xchg
push
stos
test
sbb
in
daa
sbb
push
xchg
add
sub
std
pusha
shl
xlat
push
mov
lock
mov
pop
adc
xchg
ins
sub
push
mov
test
repz
mov
inc
outs
je
adc
in
pop
inc
sahf
adc
and
or
and
(bad)
sub
lea
das
add
sbb
fld
call
test
xchg
into
loope
imul
or
in
jno
les
ficomp
fld
dec
xor
sbb
or
popf
adc
js
stos
in
jnp
les
loop
sbb
xor
sbb
jmp
das
pop
xchg
cmp
sti
pusha
loope
movs
ret
outs
out
pop
push
pushf
cmps
sahf
ja
mov
fmul
cmp
test
mov
pushf
sub
cdq
mov
pop
jbe
popa
push
inc
sub
in
add
sti
push
inc
push
xor
jecxz
or
xchg
xchg
push
xchg
imul
inc
(bad)
fist
mov
mov
mov
dec
cmps
jno
test
js
dec
imul
pop
jg
cmp
adc
pop
or
iret
jmp
retf
cmp
jmp
aad
stos
push
and
pop
sbb
xor
sar
in
inc
lods
jp
dec
jg
xor
imul
and
fucom
push
popf
movs
xchg
out
sub
cmps
jne
js
add
pusha
clc
jl
das
int3
rcr
mov
pushf
pop
or
inc
xor
pop
push
retf
and
adc
arpl
arpl
lahf
fld
mov
mov
push
pop
(bad)
mov
mov
aad
rcl
inc
sub
mov
pop
add
jae
mov
data16
(bad)
sub
jns
ret
xlat
cmc
sti
call
outs
shl
aad
xchg
inc
es
mov
mov
ins
shl
xor
add
in
movs
data16
arpl
sub
sbb
pop
call
xchg
mov
fwait
ins
(bad)
sbb
inc
aad
daa
or
mov
add
push
idiv
leave
jbe
mov
adc
or
ror
add
mov
mov
mov
push
dec
jb
jno
je
cmp
call
sbb
pusha
neg
cmp
lea
(bad)
mov
fsubr
movs
and
idiv
out
clc
rol
push
push
ins
or
sbb
mov
mov
push
test
xchg
inc
cs
dec
out
(bad)
xchg
or
out
dec
push
fucom
fs
pop
dec
scas
sbb
adc
imul
std
ss
mov
mov
mov
outs
push
fnsave
popf
movs
je
or
jp
pop
pusha
test
scas
ja
ins
and
sbb
mov
into
int3
jbe
sti
mov
popa
fimul
and
or
mov
or
rcr
dec
mov
js
outs
pop
loop
mov
add
sbb
(bad)
lods
sub
mov
add
ins
sub
das
mov
push
jmp
pop
mov
call
dec
lock
not
cwde
out
cmp
mov
inc
clc
pop
cli
and
mov
test
cmp
aas
repnz
push
ret
js
pushf
sbb
jg
xlat
xor
es
push
div
pop
popa
xor
cmp
xchg
pop
ins
jne
mov
call
sbb
sub
cdq
addr16
ins
cs
pop
jnp
aad
adc
pushf
shr
(bad)
jnp
mov
stos
push
jne
cli
inc
mov
jae
push
jnp
inc
adc
stos
into
sbb
push
test
dec
lds
mov
and
jno
lea
ret
lods
sbb
push
cmps
xchg
or
and
lock
pop
outs
dec
movs
js
inc
out
imul
sbb
lods
xor
test
out
cmc
push
in
das
loopne
xor
xor
cs
push
hlt
push
mov
or
mov
and
jmp
add
aam
cmp
jp
fimul
lods
cmps
adc
ins
jp
enter
jo
scas
pop
pop
rcl
jnp
es
into
jge
or
ret
stos
cli
sar
js
fst
mov
push
mov
and
mov
test
stos
jae
mov
cmp
sbb
fidivr
jnp
daa
sahf
xor
cdq
jl
jle
in
push
mov
arpl
outs
movs
repz
sahf
mov
xor
mov
(bad)
xor
lock
(bad)
js
mov
out
das
xor
sti
(bad)
sbb
ret
jp
mov
nop
cmp
daa
mov
inc
aaa
pop
push
leave
ins
mov
leave
dec
je
jnp
dec
push
scas
sbb
push
push
sub
stc
inc
outs
nop
xlat
add
ins
enter
xchg
pop
in
fist
retf
push
jecxz
dec
dec
and
iret
out
pop
xchg
add
jb
(bad)
outs
retf
sub
lods
in
push
cmp
movs
lods
or
loope
mov
xor
test
ret
movs
jecxz
pusha
and
pop
mov
dec
xlat
xchg
or
hlt
sbb
adc
cs
es
add
rcl
push
jb
cli
dec
mov
daa
adc
lods
xor
adc
shl
loop
push
xchg
inc
inc
leave
push
fcomp
lahf
fild
ja
daa
cs
sub
stos
fs
pop
(bad)
and
cmc
jbe
fwait
iret
cmp
push
test
ja
cdq
inc
fst
sub
fnstenv
bound
xchg
test
sbb
dec
pop
fsubr
lods
and
nop
test
(bad)
out
or
lock
ror
xor
fadd
mov
inc
push
xor
jecxz
fwait
imul
push
jg
jo
into
push
dec
loop
mov
dec
push
popf
shl
and
les
les
add
stos
mov
xchg
fucomip
cmps
shl
imul
xchg
pop
in
mov
xchg
pop
ror
les
scas
fnstenv
retf
mov
and
test
fcom
mov
pop
sahf
and
jmp
(bad)
cmp
shl
cs
or
mov
inc
and
hlt
or
(bad)
in
lds
dec
xor
popf
aam
call
push
cmp
aam
sbb
inc
inc
lock
cmp
imul
sub
dec
jmp
mov
cmps
dec
jmp
mov
hlt
xor
es
ins
imul
test
into
jns
pop
xchg
rcr
cmp
in
call
mov
or
push
cmp
mov
sub
shr
xchg
sti
call
mov
inc
xchg
popa
jmp
rol
(bad)
call
loop
test
neg
stos
mov
jne
stc
jb
adc
sbb
lea
lods
out
les
and
rcr
pop
fdivr
sbb
mov
daa
rcl
add
inc
in
inc
loope
fcomip
cmps
cmp
test
inc
dec
mov
test
(bad)
push
iret
stos
call
fsub
xor
cdq
imul
jne
addr16
jmp
or
add
shl
or
fwait
jl
leave
hlt
icebp
xor
daa
cmp
inc
fwait
mov
xor
rol
and
ror
ins
lock
push
add
push
adc
fisub
mov
test
jge
loop
add
sub
and
in
adc
pop
shl
pop
or
add
loopne
jae
inc
test
out
test
gs
cmps
(bad)
jae
inc
adc
fs
mov
mov
(bad)
xlat
or
cwde
push
and
imul
rcl
sub
int
push
daa
xor
scas
jge
aas
mov
es
cmc
les
test
jge
inc
test
fidiv
xor
push
fstp
and
(bad)
call
fimul
and
icebp
xor
in
les
mov
fisttp
add
xor
xchg
sbb
jns
lods
mov
addr16
in
leave
xchg
xor
mov
hlt
sub
leave
push
cmp
add
sbb
ins
popa
push
fisttp
lods
xchg
pop
enter
push
aas
les
jb
push
mov
xor
out
repz
sti
jmp
out
stos
js
ss
test
jl
sbb
movs
push
jb
sbb
stos
jo
xchg
jecxz
popf
mov
dec
test
sub
or
ret
add
mov
jne
jmp
push
xchg
xchg
hlt
int
js
out
push
xor
adc
xchg
hlt
adc
mov
sbb
pop
and
jb
out
fbstp
out
rol
xchg
xchg
add
pop
sbb
sbb
mov
xor
fdivp
mov
add
jne
mov
mov
pop
or
test
push
inc
sub
aas
xor
sbb
jp
xchg
(bad)
test
loop
push
mov
popa
not
out
xor
adc
cmp
sbb
xor
pushf
lods
jge
sub
mov
sub
movs
sar
out
add
xchg
call
fnsave
inc
push
scas
and
inc
dec
inc
jns
sbb
pop
cwde
sub
(bad)
adc
iret
pop
test
adc
cmps
loopne
mov
aad
pop
mov
push
les
push
cmps
loopne
adc
jg
das
mov
add
add
loop
push
test
ret
and
setle
test
pop
dec
js
sub
cmp
xchg
jg
repz
mov
and
sbb
cmps
in
out
daa
pop
jp
fdivp
jle
in
loopne
in
std
mov
stos
inc
stc
shl
sub
mov
inc
cmps
sub
xchg
mov
div
mov
lods
sub
jmp
pop
xchg
xor
sub
push
ret
pop
lds
daa
lahf
dec
(bad)
in
fnsave
(bad)
fadd
pop
dec
int
push
push
xchg
mov
dec
retf
pop
pusha
mov
mov
fdiv
xor
call
jb
dec
cld
or
cmp
arpl
xchg
adc
test
dec
cmc
mov
inc
add
daa
inc
mov
dec
jmp
push
pop
fwait
scas
add
dec
jg
pop
mov
cmp
add
jl
xlat
inc
push
sbb
addr16
repz
repz
cmp
imul
ror
mov
bound
sbb
cs
in
jp
ins
push
mov
mov
cmc
dec
call
xchg
mov
out
push
and
dec
jecxz
push
sti
cwde
sbb
test
mov
or
daa
inc
push
and
cwde
stos
outs
cmp
fs
aas
mov
dec
pop
jecxz
scas
cmps
test
aam
test
nop
mov
dec
jl
jl
enter
stc
test
mov
dec
dec
cli
imul
sub
or
cmp
je
test
retf
out
sbb
es
popa
and
call
push
fistp
movs
in
movs
xor
xchg
in
std
out
and
xchg
pop
rol
sub
sbb
iret
pop
cmp
fcmovbe
mov
fcomp
dec
retf
test
mov
inc
lds
pop
jmp
jecxz
sbb
push
add
outs
mov
and
loopne
jl
fidiv
scas
jp
shl
outs
dec
or
pop
dec
jle
sbb
test
rcr
push
in
cmp
sti
mov
pushf
test
es
dec
xchg
aas
mov
dec
out
xlat
lods
loop
sbb
push
xchg
pop
loopne
cmp
call
(bad)
sub
out
mov
sbb
cmps
or
retf
icebp
push
aad
jmp
js
inc
sbb
in
sbb
into
mov
imul
add
ss
sub
loop
mov
pop
and
push
out
or
adc
xchg
mov
retf
out
xor
pop
inc
cwde
lds
sar
in
pop
xchg
pop
out
jmp
lods
daa
xor
xchg
das
ja
adc
push
fimul
dec
sahf
sar
jge
out
aad
or
test
cmp
call
jle
mov
add
mov
icebp
fwait
in
jge
mov
fmul
ret
sub
test
(bad)
shr
repnz
scas
(bad)
out
and
je
(bad)
out
mov
jbe
add
loopne
std
out
xor
(bad)
jg
push
add
fcomp
dec
loope
xor
mov
cmp
mov
push
(bad)
dec
cmp
dec
sub
mov
loopne
jmp
or
sbb
mov
pop
pushf
std
sbb
std
out
xchg
mov
sbb
inc
or
ja
xor
int3
and
rcr
enter
mov
out
mov
ins
test
out
stos
mov
lds
cmps
mov
lahf
jmp
or
dec
or
dec
cmps
test
sbb
dec
mov
rol
dec
push
(bad)
dec
sub
xchg
xchg
mov
sub
sub
dec
mov
in
out
jns
mov
dec
(bad)
sub
(bad)
cs
je
loopne
and
add
mov
aas
jg
xchg
adc
dec
dec
inc
cmp
xchg
mov
lods
outs
movs
push
faddp
call
mov
push
inc
mov
push
js
test
xchg
pop
pop
dec
test
xor
xor
test
jo
xchg
sub
xchg
les
imul
(bad)
ins
cmc
mov
adc
or
jne
imul
xlat
in
dec
and
nop
mov
add
mov
test
dec
and
pop
popf
mov
adc
xchg
jle
add
xchg
dec
pop
scas
cmp
pop
xchg
in
lea
pop
xchg
xor
mov
lds
scas
(bad)
mov
sub
repnz
sub
dec
les
xchg
and
push
adc
ret
enter
cmp
fidivr
adc
mov
push
sub
imul
add
xor
or
dec
add
mov
mov
call
scas
dec
inc
js
dec
gs
inc
jecxz
in
push
mov
pushf
adc
outs
or
lahf
push
cli
push
and
mov
adc
jno
into
xchg
in
adc
fidiv
mov
mov
sbb
pushf
pop
jne
mov
pusha
xchg
popa
mov
xchg
dec
lock
in
imul
pop
mov
mov
movntps
mov
mov
aam
xlat
pop
xor
mov
pop
jno
mov
retf
dec
sbb
outs
pop
lods
add
stc
xor
mov
xor
rol
cmp
and
add
sub
mov
adc
mov
js
sub
dec
mov
push
retf
cmps
mov
mov
call
imul
jl
mov
add
cli
push
(bad)
lods
adc
and
jns
mov
in
or
xchg
shr
sub
cs
imul
aaa
out
jmp
jp
outs
mov
mov
hlt
pop
inc
xchg
pop
repnz
(bad)
jno
cmp
(bad)
(bad)
mov
retf
je
stc
(bad)
dec
out
xchg
rcr
shl
daa
fnstenv
xchg
pop
stc
cmp
retf
jecxz
mov
loope
iret
lea
rol
sub
call
test
out
dec
lods
dec
adc
imul
jmp
repnz
mov
mov
aad
pop
cmp
xor
jmp
outs
jo
lds
sti
pop
scas
ss
aaa
xor
das
dec
sbb
(bad)
iret
lock
push
scas
neg
adc
in
out
pop
gs
ret
mov
dec
sbb
xchg
jne
dec
sbb
gs
enter
popf
mov
out
leave
test
cmps
mov
jge
rcr
mov
jmp
call
dec
pop
jp
fnsave
(bad)
enter
into
inc
call
push
mov
(bad)
stos
add
inc
in
repnz
sub
push
shr
push
xchg
xchg
mov
int
dec
xchg
retf
popf
jg
retf
jle
pop
push
mov
adc
dec
cmp
fwait
test
shl
shr
xchg
pop
clc
imul
sbb
test
jo
jecxz
sbb
xchg
push
fwait
les
sti
outs
and
add
inc
test
hlt
xchg
cmp
data16
cs
iret
jno
fdivr
push
shl
push
cmp
jno
or
add
lahf
fadd
cmp
cmp
xchg
fwait
or
sub
fsubrp
jmp
imul
xlat
push
pop
push
sub
fdiv
mov
inc
repz
nop
pop
retf
and
enter
xchg
cmps
neg
lods
nop
test
adc
xchg
test
(bad)
test
sub
jl
(bad)
sub
rcl
or
jmp
mov
inc
pop
jmp
and
movs
and
ret
shr
push
sbb
jb
mov
cwde
dec
and
fcmovnbe
mov
inc
sbb
scas
movs
mov
dec
cmp
xlat
xor
fdiv
pop
enter
pop
mov
push
imul
adc
loope
arpl
pop
push
or
bound
dec
ja
pushf
aam
sbb
daa
mov
cs
pushf
in
dec
mov
push
inc
movs
loopne
enter
js
mov
push
repz
cmp
shl
leave
dec
cmps
fcomp
xor
push
dec
loop
test
push
(bad)
lock
cmp
popf
iret
xchg
lock
fucomp
or
xor
neg
shl
jns
test
jnp
ins
mov
push
xor
fistp
mov
mov
aad
scas
pop
mov
ss
movs
push
hlt
ds
std
sub
sbb
out
jge
adc
je
push
rcr
movs
and
inc
neg
sbb
push
cmps
jp
nop
pushf
lods
adc
scas
hlt
sbb
jnp
ror
out
stos
add
(bad)
and
ja
popa
push
in
xchg
sahf
push
inc
jg
cmp
rcl
imul
dec
and
dec
jmp
inc
imul
xor
adc
fstp
sbb
lock
aad
pop
in
pusha
mov
dec
pop
pusha
scas
sbb
or
sbb
dec
xchg
jl
sub
into
outs
push
icebp
in
adc
dec
lods
aaa
adc
jns
aaa
push
add
(bad)
loope
shl
and
rol
cli
dec
mov
leave
movs
xor
inc
pusha
call
imul
push
mov
pop
cmps
pop
xor
and
xor
xchg
and
xor
repnz
mov
lahf
into
pop
push
ins
sbb
pop
int3
arpl
test
dec
test
sbb
cdq
mov
dec
(bad)
mov
movs
and
inc
sbb
jmp
mov
(bad)
popf
out
aam
repnz
inc
push
pop
mov
out
inc
inc
in
mov
xchg
jmp
dec
lock
in
dec
cmp
push
bound
dec
es
fist
mov
ret
rcpps
nop
push
in
sub
mov
adc
(bad)
retf
mov
sbb
daa
mov
mov
pop
(bad)
jns
ja
xchg
mov
das
nop
cmps
pop
jbe
inc
cwde
pop
leave
gs
jbe
mov
mov
mov
cwde
retf
call
adc
sub
and
inc
add
mov
or
mov
pop
(bad)
in
repz
mov
popa
test
adc
in
in
or
and
aas
push
hlt
(bad)
mov
les
push
cmp
pop
pop
pop
imul
pushf
call
aaa
dec
mov
(bad)
out
inc
mov
xor
adc
ss
ss
std
cmps
dec
inc
sub
xchg
stos
sahf
cli
jae
outs
sbb
push
adc
or
xchg
sbb
stos
repnz
mov
pop
xor
pop
call
jo
push
add
add
and
aas
mov
test
outs
jp
jnp
in
xchg
cpuid
dec
adc
jae
mov
setp
rol
js
mov
int
inc
out
or
inc
or
inc
inc
cli
mov
lds
test
outs
outs
aas
pop
cmps
jmp
outs
shr
and
inc
xchg
ins
cli
dec
jnp
mov
pusha
popf
mov
push
ins
xor
repnz
jge
iret
loopne
std
adc
scas
xor
mov
jno
cmp
jecxz
popa
jl
cmp
outs
add
in
stos
aas
push
sub
mov
sahf
call
xor
dec
gs
cmp
clc
prefetch
dec
and
je
arpl
or
int
xchg
lock
mov
gs
xchg
mov
dec
cmp
jl
cmp
mov
push
push
leave
jmp
xor
fdivr
pop
jecxz
call
adc
jno
add
cmp
(bad)
(bad)
push
inc
sub
sub
lock
jmp
cmp
add
(bad)
daa
sbb
mov
hlt
dec
xchg
push
arpl
sub
and
cmp
mov
fwait
push
dec
pushf
sub
loope
sub
cmps
jb
push
xchg
mov
sbb
js
dec
and
cmp
mov
add
xchg
push
ja
fisubr
js
retf
test
cld
aaa
sbb
pop
retf
clc
mov
xlat
or
sub
jne
mov
call
sub
es
fcomip
add
sub
jecxz
ds
in
jmp
fdivr
xor
add
adc
push
jns
sbb
cwde
inc
mov
sbb
cmps
inc
fstp
add
mov
in
fdiv
gs
cmp
jmp
inc
and
dec
cmp
or
out
jns
mov
or
jae
std
jb
(bad)
(bad)
fdivr
fwait
mov
push
mov
pop
mov
and
jnp
fild
sub
neg
mov
in
lods
dec
fs
movs
stos
stos
and
sbb
and
mov
lds
jns
push
popa
add
out
cli
or
jg
mov
mov
sub
je
test
leave
div
jmp
daa
add
lds
mov
xlat
mov
mov
arpl
rcl
gs
inc
imul
xor
dec
push
mov
sbb
sbb
mov
push
mov
or
fwait
ret
pusha
and
sub
push
dec
(bad)
mov
aas
cs
in
xor
mov
pop
inc
aad
mov
test
popf
jge
mov
(bad)
adc
mov
cld
fwait
pop
pop
pop
sub
jge
cmp
(bad)
push
ror
jbe
xchg
xor
(bad)
lahf
jo
not
dec
out
push
pop
dec
cli
push
adc
sti
into
xchg
ret
rol
mov
mov
mov
lock
stc
inc
cmp
mov
ds
xor
mov
jns
mov
pop
jle
inc
dec
adc
adc
outs
pop
cmps
xor
retf
inc
mov
mov
cmp
and
stc
je
xchg
cmp
(bad)
in
sahf
out
ins
fidivr
push
jmp
leave
stc
outs
sub
mov
scas
loope
test
mov
out
retf
cmp
ret
fistp
push
or
lock
lods
mov
pop
cwde
daa
ins
outs
and
(bad)
ja
mov
dec
xchg
ds
cwde
or
fcomp
mov
sub
out
xchg
imul
iret
dec
je
and
cmp
mov
ja
stos
outs
xchg
and
mov
xchg
add
push
push
sub
or
fadd
and
add
es
cdq
add
dec
cdq
(bad)
je
xchg
das
pusha
repnz
pushfw
addr16
clc
addr16
jno
sub
lods
int
fs
aaa
push
pushaw
jns
aas
cmp
sub
jmp
push
(bad)
push
sbb
cli
(bad)
jle
fistp
hlt
es
push
xchg
inc
jecxz
and
add
cld
cmp
push
js
cli
xchg
push
sub
jb
rcl
sahf
and
mov
pop
push
test
rep
pop
call
std
stc
int3
sbb
fistp
sbb
fstp
mov
inc
sbb
mov
les
pextrw
mov
lods
cmc
cmp
aaa
adc
shl
fist
and
pop
lods
sbb
mov
push
and
mov
sti
sbb
jbe
sub
push
cmp
int3
xchg
and
popa
cmp
mov
scas
inc
dec
xor
mov
push
jmp
jmp
or
addr16
ss
in
lods
jbe
inc
fadd
add
or
ins
fs
push
ror
and
and
add
sbb
sbb
adc
push
daa
inc
sbb
call
iret
push
add
lds
xor
xchg
xchg
add
mov
in
mov
test
sbb
cmc
cmps
sbb
inc
fidivr
adc
fmul
leave
dec
push
inc
fstp
xchg
pop
movs
jge
lods
cmps
pop
inc
mov
xchg
das
and
jl
add
or
dec
push
sbb
pop
div
jae
add
xchg
int
mov
lods
rcr
add
mov
ret
stc
pop
out
push
cmps
mov
sbb
sbb
cmps
mov
in
or
(bad)
cs
sub
push
(bad)
rdmsr
(bad)
lea
cmp
mov
jo
inc
jecxz
xchg
or
imul
mov
mov
fcom
lahf
pushf
fwait
std
std
cld
sahf
xor
adc
shl
dec
lea
mov
or
lods
push
clc
lock
repnz
xlat
fucom
ja
(bad)
sub
cmp
sub
int
(bad)
repz
push
mov
out
mov
aad
pop
inc
sub
repz
mov
xor
fsubrp
mov
sub
call
jmp
cmp
add
repnz
pop
test
xchg
test
out
push
mov
int
and
xor
add
mov
mov
add
push
jns
push
fucomp
cmps
out
or
scas
mov
iret
jp
add
cmp
sbb
add
(bad)
out
push
inc
sbb
push
cmp
jge
inc
out
sbb
cmp
sub
and
xor
outs
dec
test
stos
push
or
cli
stos
cdq
add
mov
das
and
bound
mov
mov
js
lahf
mov
inc
dec
pushf
and
enter
cmp
jae
and
push
cmp
pop
jmp
push
xchg
pop
or
push
adc
jmp
movs
shl
push
lods
mov
call
(bad)
(bad)
fstp
movs
mov
lock
(bad)
daa
(bad)
movs
cmp
mov
xlat
int3
add
div
cmps
xor
jne
xchg
int3
lock
sbb
jg
xchg
js
dec
aaa
repz
pop
or
xchg
cli
xor
and
test
sbb
and
aam
outs
push
jp
les
push
in
push
lahf
inc
stos
call
cmc
mov
inc
inc
stos
and
out
stc
adc
(bad)
push
cwde
add
xor
jl
pop
jecxz
cmp
test
scas
xchg
sub
pop
push
test
imul
sub
push
add
dec
xchg
(bad)
pop
je
dec
cld
dec
or
out
mov
jg
dec
movs
inc
clc
arpl
push
cmps
pop
xor
xchg
ins
lock
int3
push
push
outs
mov
sbb
shl
mov
rcl
cmc
xchg
pop
gs
je
sub
aas
lock
sbb
daa
(bad)
sahf
adc
cli
pop
mov
outs
jle
addr16
cmps
pop
xor
sbb
andnps
lds
mov
enter
xchg
loope
bound
retf
repz
fst
mov
gs
lods
leave
mov
je
sub
adc
pusha
cmc
fs
mov
push
jne
or
(bad)
cmp
add
mov
xor
jbe
ret
or
mov
call
test
pop
int3
scas
test
pop
out
sbb
loopne
sbb
sti
mov
mov
dec
xor
scas
xchg
add
sub
inc
sbb
sub
retf
and
jg
sysenter
daa
inc
adc
dec
sti
inc
mov
fstp
or
lods
stc
adc
sbb
cmps
inc
in
xor
sub
std
sub
cwde
fwait
sub
out
jmp
push
lea
pop
and
xchg
xchg
inc
and
fidiv
dec
pop
pop
xor
in
and
jle
aas
int3
imul
enter
ja
dec
mov
cld
jmp
mov
inc
jecxz
mov
pusha
addr16
adc
and
call
test
ret
aam
jecxz
jmp
or
aad
ins
inc
add
sbb
dec
addr16
(bad)
push
sahf
mov
add
mov
enter
pop
adc
mov
lahf
jae
test
arpl
ins
stos
adc
xchg
das
stc
mov
addr16
sub
cmp
push
daa
out
push
call
pop
addr16
xlat
(bad)
xor
out
dec
ins
inc
call
fnstsw
xchg
and
push
and
imul
gs
in
fiadd
adc
mov
cli
aas
popa
je
(bad)
sbb
inc
adc
int
outs
(bad)
mov
in
mov
iret
cmps
mov
cmps
shl
sbb
and
add
adc
push
xchg
repnz
imul
cmps
scas
or
fstp
fiadd
rcr
mov
xchg
push
inc
movs
fild
jmp
ja
hlt
in
pop
xchg
cmc
stc
lock
std
and
and
sub
add
bound
loope
out
fistp
jmp
mov
(bad)
mov
push
mov
(bad)
jmp
inc
push
xchg
adc
sahf
std
sbb
mov
enter
fsub
icebp
jmp
outs
stos
sbb
ret
pop
(bad)
inc
loope
(bad)
inc
js
scas
sbb
jnp
add
or
jmp
jecxz
mov
leave
sti
jecxz
or
out
xchg
add
xor
mov
mov
sub
shl
sbb
outs
mov
(bad)
call
inc
inc
xor
push
js
(bad)
fnstenv
cmc
mov
das
jp
mov
or
ja
and
push
mov
sbb
movs
mov
test
jo
xchg
mov
or
fwait
inc
enter
clc
(bad)
loope
inc
pop
push
mov
dec
imul
ins
int3
sub
lds
mov
ds
xor
sbb
outs
push
jmp
lahf
mov
scas
imul
fs
loopne
imul
ret
dec
cmp
jno
or
pop
xor
(bad)
popf
out
pop
test
in
pop
popf
pop
xchg
lods
mov
jo
xchg
mov
(bad)
mov
xor
(bad)
inc
pop
cmp
loope
cmps
loope
call
push
inc
ins
inc
and
aam
mov
jns
retf
cmp
fst
add
xor
sbb
jo
add
inc
stc
std
hlt
push
repnz
mov
loope
rcl
rcl
daa
shl
in
mov
in
arpl
xor
das
mov
mov
or
mov
adc
cmp
push
cmp
into
sbb
div
ret
pop
jns
ret
fmul
mov
dec
push
lahf
cmp
xor
in
push
xlat
and
push
pushf
mov
rcr
dec
push
gs
rep
cmps
mov
and
loope
(bad)
stc
add
mov
fs
imul
xchg
mov
aaa
cdq
cmps
sbb
das
mul
jo
sub
popf
or
test
push
ror
jns
push
lods
addr16
fs
jb
ret
mov
push
sub
call
cwde
xor
pop
aad
loop
cdq
loop
and
jbe
push
xchg
out
sbb
dec
icebp
jg
add
ja
int
fwait
out
add
cmps
aas
jb
sar
fs
cdq
pop
pop
or
rcr
adc
xchg
push
push
jg
leave
dec
jmp
fstp
test
sub
pop
(bad)
push
das
rcr
cwde
jmp
cmp
jo
sub
aas
fisttp
shl
jecxz
dec
retf
inc
retf
jecxz
loop
pushf
aam
outs
aas
pop
stos
(bad)
jnp
jg
fs
nop
add
xor
mov
push
out
jge
clc
not
jge
nop
sub
shl
je
jmp
push
push
test
es
mov
(bad)
inc
and
jo
mov
inc
xchg
xor
stos
cmp
xchg
call
dec
adc
push
shr
xor
mov
or
cmp
inc
ds
jp
dec
sbb
push
scas
push
fwait
ret
add
push
imul
retf
pusha
in
jle
(bad)
dec
in
push
loope
jg
(bad)
lods
jge
xor
imul
fwait
popf
add
pusha
xchg
inc
xor
mov
or
popa
sub
xor
mov
inc
outs
ficom
loopne
ss
mov
sub
adc
push
outs
scas
jnp
or
jmp
add
(bad)
mov
pop
xor
lock
fdivr
frstor
push
pop
jg
ins
pop
mov
shr
rcl
jmp
xor
dec
and
je
lods
mov
aas
out
aam
dec
fnstenv
pop
inc
cmc
js
fstp
bnd
rcr
scas
dec
cwde
pop
fwait
retf
loope
sbb
lea
xor
(bad)
bound
stos
sub
jo
call
rol
stc
mov
inc
ins
shl
xchg
mov
lods
fild
jle
push
clc
call
jmp
scas
ja
push
idiv
adc
add
dec
push
cmp
or
adc
sbb
test
inc
in
int
jge
outs
cmp
test
sbb
mov
push
or
pop
(bad)
in
pop
retf
jne
imul
and
dec
push
jb
and
add
sub
sub
xchg
xor
or
sbb
repz
jle
push
xlat
mov
inc
xchg
or
xor
xchg
xor
cmp
or
pop
lods
(bad)
das
stos
inc
pop
sbb
push
gs
mov
xor
mov
out
xchg
ret
scas
xor
pop
repnz
jl
ins
aad
inc
inc
lods
mov
es
shl
out
fldcw
xor
lods
sbb
aas
das
xchg
cwde
adc
fld
(bad)
ja
jb
sub
push
jnp
add
outs
push
fs
bound
adc
shr
and
xlat
sbb
mov
push
mov
stos
lea
mov
push
add
and
add
jmp
inc
push
les
xor
inc
xor
ins
mov
int3
clc
cmc
lods
fadd
repz
sub
fidivr
mov
xor
aas
mov
add
pop
mov
nop
add
push
xchg
jg
cmps
(bad)
aam
cmp
les
bound
daa
adc
ins
(bad)
cld
in
mov
rcr
sbb
dec
inc
not
push
jg
dec
int
pop
mov
mov
jp
mov
ror
cmp
cmp
icebp
bound
sbb
scas
retf
mov
lods
in
test
cld
jmp
sbb
mov
push
jge
movs
aaa
xchg
imul
les
push
(bad)
(bad)
xor
jo
mov
dec
lea
fsubr
cmps
cmp
in
in
lock
and
dec
add
pushf
xchg
mov
fistp
xchg
sub
retf
jbe
shl
inc
mov
fisttp
test
sub
and
test
push
xlat
or
dec
add
adc
ret
mov
push
sub
cdq
cmc
in
sub
xchg
cmp
dec
lea
xchg
pop
xor
mov
jne
sbb
add
lea
std
jmp
mov
(bad)
je
jnp
imul
or
fdiv
mov
mov
and
hlt
mov
(bad)
fcomp
cdq
push
adc
cmps
push
out
pop
jg
pop
mov
sbb
movs
push
push
cs
dec
cld
pusha
add
jle
inc
fcom
jg
arpl
outs
sbb
push
(bad)
xor
jnp
(bad)
loope
test
into
pop
aam
out
add
pop
cmc
sub
pop
pop
btr
xchg
(bad)
leave
cli
rcl
(bad)
cli
and
fcom
and
ins
fcomi
push
mov
sub
mov
dec
sbb
jg
and
mul
call
fnstenv
(bad)
arpl
dec
add
icebp
imul
add
in
(bad)
int3
sbb
push
and
imul
jno
test
(bad)
dec
stc
outs
and
fiadd
aas
push
sbb
in
out
jno
movs
push
sub
pop
fwait
movs
setg
in
jecxz
loope
mov
std
xchg
sbb
outs
test
sbb
pushaw
(bad)
xchg
retf
fdivr
adc
dec
scas
xor
aam
mov
rcl
push
inc
enter
iret
pop
out
das
fisubr
imul
xor
or
xor
sub
or
jle
ret
and
or
add
arpl
sbb
shr
rol
data16
dec
into
mov
and
mov
jnp
xchg
pop
adc
inc
and
cmp
js
movs
push
sti
xlat
ret
push
sbb
nop
push
mov
xchg
aad
popf
cld
lock
mov
dec
out
pop
out
jl
jbe
sbb
mov
mov
adc
xor
add
stos
sub
sub
ja
into
mov
xor
mov
adc
dec
fxch
mov
dec
inc
cmp
mov
cmc
mov
pop
clc
add
fwait
lods
jle
inc
or
stc
or
push
(bad)
or
mov
ret
hlt
or
jp
adc
pop
mov
sub
shl
push
cmp
mov
std
or
dec
lock
mov
mov
(bad)
dec
inc
jecxz
pusha
outs
movs
fmulp
mov
call
jmp
clc
adc
sbb
in
mov
sub
test
inc
sub
mov
and
arpl
sbb
(bad)
fisttp
in
adc
scas
mov
fnstcw
sbb
xor
(bad)
or
push
es
stos
jne
out
cli
retf
add
add
into
stos
add
inc
das
xor
or
outs
lahf
or
adc
call
ins
(bad)
pushf
mov
out
loop
mov
pusha
jmp
(bad)
stos
sub
jnp
sub
add
xor
sahf
inc
neg
dec
sbb
sub
adc
or
pop
pop
not
in
or
cwde
push
je
adc
xchg
imul
add
dec
inc
mov
xchg
imul
push
fwait
add
xor
jge
xor
enter
mov
aas
in
sbb
(bad)
jg
or
cmp
xchg
lods
mov
push
sub
das
jnp
jmp
mov
ret
mov
pop
scas
les
dec
jbe
inc
les
mov
out
mov
mov
pop
and
ins
mov
adc
ret
inc
pop
xor
pop
movs
add
mov
push
add
xchg
popf
mov
ja
call
sbb
mov
push
and
loopne
adc
xor
std
dec
add
sbb
mov
js
jmp
xchg
mov
leave
dec
sub
out
xchg
mov
retf
out
mov
push
dec
mov
or
loope
outs
and
sbb
shr
repnz
jge
jle
mov
sub
pusha
aas
mov
dec
push
mov
and
cmp
inc
fsub
int
sbb
addr16
cmps
dec
scas
in
imul
mov
stos
add
pushf
jg
(bad)
mov
fs
pop
mov
rcl
(bad)
hlt
dec
adc
inc
repnz
push
jno
mov
push
sub
sti
pop
call
and
xor
ins
mov
jns
in
retf
mov
outs
outs
retf
aad
mov
xor
iret
arpl
inc
pop
(bad)
adc
ins
and
add
inc
stos
xchg
es
mov
push
mov
mov
jno
sub
nop
(bad)
fld
ss
adc
push
shl
outs
stc
retf
daa
mov
jbe
push
mov
sub
test
or
mov
sub
inc
test
aad
or
fs
jae
cmps
in
jmp
mov
mov
mov
ja
notrack
lea
jmp
test
and
jl
outs
dec
je
jns
xor
push
ins
(bad)
jle
cmc
inc
or
pop
daa
gs
mov
dec
ror
xchg
xor
adc
pop
inc
cdq
inc
jmp
fwait
mov
cdq
addr16
int
dec
lods
(bad)
adc
test
push
xor
ret
inc
in
mov
add
sahf
lea
or
and
inc
and
out
xchg
cdq
adc
jo
cld
inc
(bad)
imul
mov
cmp
outs
cwde
arpl
mov
jecxz
(bad)
mov
cmps
or
mov
lahf
or
push
repnz
popf
ss
test
mov
sbb
scas
ss
jp
push
inc
loopne
fdiv
stc
jae
xchg
pusha
lea
adc
push
aas
scas
jecxz
xchg
pusha
push
jle
das
test
stc
ds
sbb
fist
je
aaa
mov
add
dec
(bad)
jmp
ja
repnz
mov
call
mov
jp
or
les
dec
add
push
push
(bad)
shr
xchg
out
jb
sbb
jmp
sbb
fadd
sbb
cmp
(bad)
retf
cmp
pop
sub
add
adc
xchg
mov
sbb
sbb
rcr
cmp
dec
call
jbe
pop
cmp
cli
in
sbb
and
xlat
jge
in
or
js
mov
call
xchg
pop
loop
out
xchg
retf
xor
push
jl
and
(bad)
std
sub
fwait
(bad)
xlat
cld
adc
ins
ins
pop
xchg
xor
and
ss
repz
xchg
pop
aam
inc
lods
into
(bad)
sub
pop
iret
cmp
adc
mov
retf
cmp
jne
hlt
add
leave
xchg
nop
div
(bad)
inc
pop
ret
fcmovnb
adc
lea
jb
jb
sub
cmps
sbb
pop
cmp
push
pop
or
inc
push
push
daa
mov
loopne
loop
das
dec
mov
ficomp
aad
or
pop
ss
fdiv
fnstsw
sbb
push
clc
adc
scas
rol
mov
sahf
pop
push
popa
add
aad
shl
jae
cdq
jp
into
push
inc
loopne
popa
sbb
shr
retf
aas
mov
sub
add
pushf
cmp
stc
lock
mov
jge
(bad)
and
(bad)
xor
aam
jmp
adc
jmp
dec
adc
sti
test
loope
das
(bad)
pop
mov
pop
es
cmp
cli
pushf
add
inc
cmp
mov
loopne
mov
add
mov
xchg
es
inc
stos
outs
repz
popf
sub
add
sbb
or
sub
cld
stos
iret
dec
dec
iret
imul
outs
bound
shl
inc
js
in
mov
and
pop
inc
(bad)
lea
xchg
pusha
xchg
retf
addr16
ror
(bad)
jmp
dec
(bad)
dec
adc
and
mov
pop
push
xchg
pop
(bad)
cmp
imul
mov
dec
mov
pop
inc
jmp
push
sub
push
out
ret
test
imul
in
adc
jbe
inc
sub
or
and
jno
rcr
pop
popf
push
add
cmp
call
out
pusha
inc
cs
xchg
call
arpl
out
xor
sbb
inc
dec
arpl
sbb
lds
movs
sahf
dec
add
add
addr16
push
inc
cmps
sub
movs
out
ja
inc
cmps
loope
pusha
(bad)
punpcklbw
mov
ss
imul
dec
sub
push
push
mov
addr16
aas
or
out
dec
test
popa
ja
inc
dec
sar
mov
inc
sar
sbb
fcmovb
ins
out
fucom
sub
mov
test
pop
sub
mov
(bad)
out
lock
xchg
push
mov
or
pop
jne
arpl
xchg
pop
cmc
inc
js
add
fistp
mov
dec
push
and
aad
call
push
jbe
enter
dec
fcmovnu
xchg
or
les
loope
or
jbe
cmps
push
lods
mov
ror
fucomp
xchg
mov
sub
stos
dec
arpl
sub
retf
or
pop
enter
xor
int
int
stos
sbb
mov
int3
loopne
inc
jae
ja
bound
push
sbb
xchg
cld
shl
retf
xor
sbb
fadd
(bad)
cmp
mov
ja
fidivr
sub
dec
popa
jno
fcmove
les
push
push
sahf
adc
enter
movs
ror
lea
les
cs
(bad)
xlat
test
loopne
push
test
sbb
sti
adc
jl
std
popf
inc
shl
loop
inc
fdivr
repz
mov
mov
(bad)
dec
jg
in
cmp
inc
sar
aas
mul
test
sbb
cmp
xchg
cmp
mov
jne
in
call
cwde
sbb
push
pusha
mov
mov
div
ss
out
xchg
shr
cs
idiv
push
ret
add
sbb
test
bound
dec
scas
icebp
leave
xor
adc
lahf
xchg
jge
cli
adc
pop
test
xchg
pop
push
leave
jge
or
cmc
cwde
jmp
mov
in
xchg
mov
retf
(bad)
mov
cmp
out
pop
ins
aas
xor
addr16
lds
xor
dec
sub
pop
in
jecxz
mov
iret
jle
and
int3
push
or
daa
mov
xchg
add
or
jae
dec
test
ins
adc
mov
add
sub
xchg
outs
jno
cmp
mov
mov
ja
adc
lods
inc
popa
mov
mov
jl
mov
push
mov
lock
aas
ins
imul
stos
mov
jb
cs
mov
fcomp
add
fs
jmp
nop
pop
fwait
cli
jno
retf
fcomp
shr
or
clc
movs
pusha
aam
hlt
jns
stc
adc
pop
pop
js
call
sub
ins
int3
test
shl
icebp
outs
push
repnz
and
mov
sub
lds
jne
mov
inc
mov
cmps
inc
mov
call
jnp
xchg
pop
loop
ss
test
cmp
bound
jge
fsub
outs
mov
arpl
xchg
ss
cmp
adc
pop
inc
push
xchg
(bad)
pop
sar
int3
pop
scas
fs
jae
push
jb
pop
sbb
pop
push
push
pop
ins
ss
imul
mov
in
xchg
mov
push
push
mov
mov
(bad)
sahf
imul
sbb
lahf
bound
add
ret
hlt
dec
pop
inc
pop
add
xor
sti
and
add
popa
retf
xor
push
dec
movs
xchg
loopne
dec
or
ins
pop
or
add
inc
(bad)
jns
repnz
adc
jge
cli
cmp
fcomp
mov
mov
fwait
cmp
xor
mov
pop
xor
int3
dec
or
push
rcl
mov
dec
inc
sbb
in
fcom
inc
addr16
fcomp
jle
stos
mov
pop
or
sbb
or
popf
sbb
daa
mov
inc
sbb
ror
movs
add
jmp
retf
mov
das
sub
pop
xlat
ja
adc
mov
push
iret
data16
fst
dec
mov
or
mov
mov
lock
pop
and
mov
mov
jmp
sub
sbb
push
mov
inc
push
add
ins
dec
ss
fist
retf
popa
jno
sar
push
xor
xchg
mov
scas
xor
test
cmp
loope
mov
not
push
cwde
ins
hlt
sbb
jp
push
and
cmp
lock
mov
call
pop
and
xor
sbb
popa
mov
movs
pop
nop
ds
pop
sbb
fimul
ja
push
mov
ins
xchg
inc
aad
pop
xchg
mov
cwde
sbb
(bad)
fld
outs
sub
movs
cmp
(bad)
pushw
push
scas
or
(bad)
lock
push
(bad)
int
jo
cmp
and
retf
(bad)
rcr
cli
push
cli
ins
leave
test
repz
das
lds
cmp
mov
cwde
xor
mov
jmp
add
ret
push
dec
add
jp
cs
inc
addr16
cmps
fwait
je
adc
outs
je
shl
xor
stos
sbb
into
ins
sbb
push
scas
(bad)
fchs
adc
nop
mov
jns
dec
icebp
fwait
inc
adc
es
fnstsw
mul
mov
sub
inc
pop
aad
push
sub
inc
and
push
test
fs
loopne
aaa
push
cmp
idiv
fild
inc
aaa
adc
repnz
mov
inc
mov
mov
mov
js
or
pop
jo
sub
das
movs
and
and
leave
icebp
frstor
sub
jg
pushf
out
adc
push
dec
aas
(bad)
popa
sbb
fwait
jnp
mov
mov
or
lock
enter
pop
mov
retf
les
ja
xor
data16
cwde
cmp
adc
shl
and
mov
lea
out
mov
cdq
fnstsw
aad
push
leave
neg
xor
sbb
or
jne
jnp
or
lock
sti
popa
sti
out
sub
sbb
xchg
mov
mov
add
mov
sbb
pushf
test
daa
push
(bad)
movs
pop
jge
(bad)
sbb
jns
test
das
or
xor
push
leave
inc
es
rol
add
mov
add
mov
jl
jmp
sbb
data16
pushf
mov
xor
adc
mov
cmc
cmc
dec
sahf
out
loope
pop
cmp
pop
dec
push
or
dec
stos
je
cmp
ins
jbe
sar
stc
clc
push
cmps
(bad)
pop
and
aad
mov
or
push
dec
mov
cmp
fs
es
pusha
stos
out
cs
int
mov
adc
mov
push
jb
jae
test
fmul
jmp
iret
cmp
inc
sub
cld
cmp
ror
gs
and
add
imul
sub
add
jmp
xor
lods
int3
lods
fadd
push
into
mov
aaa
dec
iret
xor
loope
cmp
dec
das
mov
dec
mov
sbb
mov
xchg
pushf
movs
outs
cmp
pop
or
jne
mov
cmps
dec
sbb
push
push
pop
xchg
sub
pop
xchg
not
mov
int3
inc
(bad)
das
cmp
xchg
ss
push
lahf
dec
adc
xchg
cwde
ret
outs
ja
jmp
jecxz
dec
push
adc
movntq
int
int3
lahf
fsub
in
icebp
push
or
imul
imul
ficomp
jo
sub
bound
(bad)
adc
jo
lock
inc
and
shr
sbb
clc
rcl
or
jae
cld
hlt
sub
test
adc
or
out
outs
lods
std
(bad)
aas
mov
inc
test
les
and
xchg
cmc
cmc
daa
mov
jge
xchg
movs
loopne
popa
es
sub
and
dec
push
and
ins
test
push
lds
cld
mov
sti
fmul
mov
pop
sahf
sub
nop
adc
pop
out
cmp
pop
add
lock
loop
push
cmp
add
xchg
gs
ror
aas
add
push
cmps
loope
mov
pop
xchg
and
loopne
out
ja
xlat
sbb
ror
(bad)
inc
sub
(bad)
sbb
jl
and
outs
inc
aas
mov
int
dec
inc
ret
sbb
add
mov
sub
imul
push
push
es
dec
adc
push
jb
cwde
mov
mov
xchg
nop
imul
popa
into
dec
mov
xor
push
aas
jp
enter
pop
push
or
neg
aad
cmp
dec
xlat
push
std
sbb
push
mov
push
xor
xchg
pop
les
mov
imul
ds
out
fisub
lods
add
out
ret
adc
push
mov
push
xor
xor
dec
xor
cmp
popa
mov
cmp
pop
(bad)
mov
std
(bad)
cmc
ds
mov
sbb
std
push
cdq
das
mov
push
jne
addr16
(bad)
adc
mov
mul
sub
inc
sar
xchg
dec
pcmpgtw
stc
dec
cli
fs
push
xchg
mov
test
sub
sub
xchg
mov
punpcklwd
and
int3
fwait
das
inc
leave
lock
adc
icebp
inc
dec
jmp
cwde
retf
mov
loopne
xchg
out
adc
out
(bad)
and
push
push
xchg
dec
mov
js
iret
dec
add
pop
pushf
and
icebp
loope
adc
push
sub
pop
dec
push
retf
push
cmp
sbb
xchg
(bad)
adc
mov
xor
enter
or
sub
int3
loope
push
adc
or
sbb
dec
les
jae
xlat
mov
test
out
add
lods
mov
jbe
std
add
dec
xchg
ins
cmps
pop
cmp
dec
lahf
cmp
mov
inc
mov
repnz
lods
add
outs
or
(bad)
std
loopne
add
mov
jmp
repz
mov
ja
inc
sub
shl
xchg
add
cmc
mov
jge
xor
mov
dec
xchg
sar
cs
and
clc
cld
and
mov
cmps
cmp
mov
or
loopne
(bad)
cmp
jl
out
push
in
cmp
or
and
sti
cli
pop
inc
mov
(bad)
jb
mov
xchg
pop
or
mov
ds
cmps
call
icebp
push
inc
jb
ficomp
cmp
test
push
jno
test
mov
xor
or
mov
(bad)
push
mov
call
inc
aam
add
adc
xor
sti
mov
sbb
xchg
fsub
mov
iret
xchg
add
shr
push
imul
and
stc
fidiv
test
inc
pop
ds
push
push
add
cmp
test
stc
push
pop
sahf
push
add
ins
adc
pusha
lock
popf
ss
ja
or
imul
cmps
ja
fistp
sub
ja
sbb
jmp
push
jl
call
cdq
mov
sti
jecxz
cmc
popf
das
sub
in
dec
(bad)
and
mov
cmps
idiv
ret
repnz
add
jae
push
pop
test
jmp
sub
push
sti
loope
loopne
sbb
xor
xor
repnz
add
xor
push
leave
ds
push
mov
cli
jmp
jg
jge
xor
test
push
push
int
(bad)
sbb
test
mov
mul
pop
or
mov
sbb
cmp
jmp
ja
adc
hlt
adc
sbb
imul
pusha
fmulp
dec
xchg
outs
dec
(bad)
jl
ds
add
mov
sbb
adc
arpl
imul
js
jnp
dec
jbe
scas
leave
cmp
fimul
inc
cdq
loopne
pop
mov
ret
add
lods
dec
lods
adc
mov
ds
mov
and
hlt
fisttp
stc
test
(bad)
adc
sbb
lods
push
push
sti
imul
icebp
imul
and
jb
xor
mov
add
(bad)
in
push
pop
xlat
cmps
push
sbb
std
xchg
ret
fidivr
adc
popf
push
mov
dec
adc
movs
xchg
repz
call
dec
ss
es
in
scas
xchg
ss
xchg
xor
pop
adc
mov
cmp
ss
pop
or
mov
sti
shl
dec
rcl
ins
adc
sub
cmps
daa
aam
dec
clc
mov
call
popf
push
push
retf
cmps
push
jp
sbb
xchg
sar
aad
mov
xchg
pop
push
pushf
add
cld
stc
fs
outs
xor
outs
fisttp
test
call
jno
jae
jbe
push
jl
xchg
out
inc
xor
cwde
in
push
sti
sub
stos
pusha
(bad)
adc
push
aaa
gs
(bad)
(bad)
out
stos
push
push
xchg
jae
xor
lds
loop
sub
or
push
mov
adc
or
pop
add
lods
push
(bad)
push
push
int
dec
cli
mov
lods
ror
mov
pop
cwde
and
js
or
fld
call
and
cmp
sbb
jne
dec
pusha
push
mov
daa
nop
lahf
push
dec
mov
in
cmp
outs
mov
cmps
dec
in
jno
and
cmp
push
aad
push
xchg
jmp
mov
lods
cmp
pop
pop
loope
ret
cmp
movs
mov
cmp
xchg
add
gs
imul
sub
faddp
cwde
aaa
sbb
mov
(bad)
pop
xor
outs
sahf
in
inc
inc
jns
in
adc
mov
pop
rol
adc
pop
xor
push
push
push
jp
xor
sbb
scas
mov
imul
sti
mov
xor
fldenv
pushf
mul
pushf
mov
sub
or
push
retf
mov
ret
add
je
push
test
std
sbb
cmp
jp
test
push
xchg
or
cmp
aam
loopne
dec
dec
jae
call
outs
imul
sbb
jg
dec
sub
je
push
jnp
lock
mov
sub
xchg
(bad)
into
cld
ins
into
fmul
mov
pop
cmc
lock
dec
popa
imul
xchg
outs
pop
pop
jp
lds
lds
push
mov
das
mov
jns
push
pusha
mov
and
push
outs
into
pop
out
dec
and
fisttp
ret
or
jae
fdivr
icebp
dec
aam
fwait
rol
ror
jecxz
xor
cmp
cmp
iret
pushf
in
ja
xchg
dec
loop
mov
icebp
loope
xor
mov
xchg
xor
mov
mov
and
rol
pop
sbb
xchg
ins
pop
out
inc
inc
repz
cmp
int
mov
xchg
or
test
cmp
lahf
adc
adc
xor
jo
inc
ins
imul
cmc
out
jl
pop
inc
repnz
fsubr
addr16
nop
dec
sti
sbb
ja
cli
lods
cmp
(bad)
cli
nop
shl
dec
test
fcom
add
cmp
pop
mov
retf
adc
mov
out
push
scas
xor
ret
mov
mov
or
mov
fistp
in
adc
mov
xchg
fs
bnd
mul
bound
jae
jno
and
stc
mov
adc
cdq
and
fucom
cs
inc
adc
scas
pop
cs
add
jecxz
inc
test
or
and
mov
push
adc
sar
call
push
test
stc
scas
mov
addr16
aaa
or
pop
je
and
mov
popf
pop
ss
fdiv
lods
test
jmp
push
mov
cmp
loop
xchg
adc
sub
pop
imul
pop
ror
jb
ficom
lahf
daa
fwait
mov
std
inc
loopne
imul
sbb
fistp
add
je
sub
push
aad
test
std
jecxz
mov
fwait
hlt
scas
hlt
mov
pushaw
dec
pop
adc
cmp
in
adc
or
call
mov
push
loop
aas
inc
xchg
push
stos
pop
aad
cmps
xor
mov
add
ins
dec
imul
sub
push
outs
nop
mov
mov
add
aam
outs
xor
mov
and
mov
out
loopne
cmp
xchg
js
pop
fwait
adc
cmp
sbb
adc
jmp
xchg
sub
test
lods
cmp
call
cld
std
js
sub
cmps
and
test
stc
push
xchg
inc
fstp
call
jmp
inc
mov
imul
add
scas
and
add
daa
dec
out
mov
stos
push
out
dec
dec
les
dec
mov
cwde
scas
sbb
jns
popf
pop
or
addr16
push
xlat
movs
inc
inc
arpl
mov
mov
push
mul
daa
out
nop
je
push
dec
xor
push
daa
xor
lods
jns
(bad)
mov
cld
push
lahf
cmc
dec
outs
div
cwde
movs
dec
and
(bad)
sbb
pop
out
dec
or
add
push
jge
scas
bnd
outs
or
sbb
jo
nop
dec
shl
inc
lahf
aaa
clc
test
(bad)
xchg
push
fld
cs
into
mov
xchg
int3
stc
dec
mov
neg
cs
(bad)
out
fwait
aam
cdq
xor
(bad)
cmc
sub
movs
repz
inc
aam
push
movs
inc
pop
sar
mov
push
push
sub
push
push
mov
cld
pop
pusha
leave
retf
sbb
ffreep
cmp
dec
add
xchg
icebp
mov
fnsave
shl
cmp
xchg
cmp
sub
arpl
test
inc
mov
add
xor
scas
retf
(bad)
test
mov
jp
rcl
jmp
push
aas
call
pop
push
enter
loope
mov
js
and
les
outs
fsubr
pusha
or
push
jns
jns
mov
sub
fidivr
xor
inc
arpl
adc
mov
fs
cmp
add
retf
push
sub
jmp
test
stc
or
std
movs
sub
inc
fmul
lock
aas
fidiv
xor
xchg
mov
add
add
stos
ja
jb
aad
sub
daa
call
not
push
sbb
movs
inc
out
jp
add
jbe
je
and
or
(bad)
xchg
into
jl
icebp
sbb
add
mov
jp
xchg
add
pusha
mov
mov
add
inc
jg
inc
loope
jmp
add
movs
jmp
pop
outs
mov
inc
or
xor
cmps
mov
xchg
dec
jnp
pop
mov
xor
mov
mov
mov
push
dec
adc
test
arpl
cmps
sbb
mov
mov
out
rcl
push
dec
adc
xchg
mov
cmp
push
xchg
mov
(bad)
hlt
xchg
push
pop
fiadd
jp
sahf
cdq
call
pop
jnp
dec
mov
inc
inc
push
into
out
out
loope
popf
xor
rep
mov
int3
dec
adc
(bad)
out
aaa
pop
ret
sti
sbb
cmp
push
movzx
or
or
sbb
loopne
mov
xchg
mov
outs
dec
inc
mov
push
lahf
ins
inc
or
shl
hlt
lock
mov
xor
mov
pop
pop
push
inc
or
cld
call
and
retf
mov
pop
jle
push
add
cmps
std
xor
adc
lahf
xchg
mov
mov
dec
jecxz
dec
cmps
jb
push
std
mov
scas
sub
lock
mov
cmp
retf
in
stos
jne
mov
mov
test
fst
lock
js
add
sbb
push
mov
ror
sti
addr16
dec
jmp
xchg
rcl
add
loopne
push
jne
pushf
fimul
int
not
cmps
cmps
cmp
pop
or
fstp
pop
dec
pop
std
push
mov
push
ds
mov
cmp
mov
xor
fwait
movs
inc
hlt
retf
jo
out
inc
inc
(bad)
pop
dec
sub
xor
lea
mov
repnz
or
mov
lods
pop
add
inc
sub
ins
mov
mov
mov
push
mov
xchg
cmp
jmp
dec
mov
dec
mov
xor
arpl
loopne
stos
pushf
stos
das
repz
retf
loop
mov
cmp
test
ret
imul
pop
(bad)
cmp
or
xchg
push
shl
jmp
rcr
lods
out
mov
and
mov
or
mov
and
mov
pusha
stos
and
je
test
pop
imul
aam
dec
sub
mov
js
adc
or
test
push
sub
lds
enter
pushf
push
xchg
sbb
retf
or
outs
sub
test
mov
mov
out
jmp
xchg
data16
ss
(bad)
out
enter
mov
fsub
dec
and
lea
sub
add
add
stos
xor
stos
sbb
int
popf
loop
fiadd
sub
or
mov
daa
push
imul
mov
xor
add
sub
xchg
xchg
inc
sub
jae
cdq
hlt
ret
push
push
cli
sbb
sbb
ficomp
mov
mov
mov
push
lock
repnz
jmp
lds
fwait
jle
jmp
imul
fsubp
in
push
dec
inc
arpl
(bad)
ds
(bad)
fcomp
sub
mov
scas
js
push
data16
push
dec
dec
sbb
fs
push
or
cwde
test
arpl
shl
jl
cmp
xor
arpl
cmc
pop
xchg
and
stos
and
or
adc
jmp
add
test
and
jmp
cmp
sbb
sahf
pop
cmp
in
ins
and
mov
daa
jecxz
mov
icebp
test
pusha
adc
sbb
jns
xchg
dec
mov
lods
mov
inc
xchg
ins
cmp
push
mov
xor
push
pop
pop
fild
mov
pop
scas
aaa
es
into
cmp
fcomi
sbb
scas
xchg
xchg
mov
jle
mov
pop
ror
dec
jb
clc
mov
call
out
mov
lock
lods
daa
pop
push
test
daa
int3
lds
sti
fdiv
mov
inc
adc
push
fwait
mov
lahf
scas
cdq
jns
mov
xchg
xchg
pushf
test
xchg
rol
ins
lock
aam
mov
outs
adc
stos
jae
fisub
shr
arpl
div
sbb
popa
xchg
call
xchg
jge
mov
push
inc
das
inc
dec
sub
xchg
cmp
sub
ror
add
(bad)
rcr
leave
mov
data16
push
mov
dec
jge
sbb
fidiv
lea
inc
inc
add
cli
or
sub
cmp
xchg
call
retf
mov
sbb
or
dec
and
or
push
cmp
jno
test
imul
pushf
push
shl
mov
sub
sub
inc
cmp
leave
popf
jae
rcr
scas
xchg
loope
scas
mov
cdq
mov
ins
in
or
dec
(bad)
and
(bad)
std
pop
cmp
jle
add
popa
icebp
lahf
inc
adc
mov
outs
jle
out
push
or
push
jl
xor
pushf
out
retf
(bad)
xor
pop
sbb
mov
mov
dec
iret
jp
scas
or
mov
imul
stos
jg
push
jo
loope
push
mov
repz
pusha
stos
cmp
pop
jl
or
movs
or
sbb
mov
push
dec
or
aam
(bad)
pusha
push
xchg
and
pop
not
jo
dec
jecxz
retf
retf
pop
and
push
pop
fbld
fdivp
adc
mov
dec
xchg
int3
ja
add
pop
xchg
xor
out
push
push
ror
movs
test
inc
mov
rol
repnz
call
popf
xchg
stos
dec
idiv
xor
outs
or
movs
fld
or
and
out
lahf
mov
shl
loopne
(bad)
mov
mov
jns
hlt
sub
test
dec
int
sub
scas
xchg
cdq
cmps
inc
or
int
and
jl
call
pushf
or
int3
adc
pop
fwait
jns
xchg
popw
push
stos
icebp
lods
enter
cmc
xor
lods
jbe
inc
(bad)
rcr
mov
(bad)
int
stos
(bad)
sbb
mov
pop
ror
ret
push
pop
push
or
jp
mov
xor
dec
test
jmp
cmp
pusha
(bad)
jmp
faddp
ds
mov
pop
jecxz
inc
leave
ds
push
pop
and
ret
inc
nop
icebp
call
jecxz
pop
xchg
cmp
loope
inc
leave
xor
pop
xchg
sbb
dec
sub
les
or
cmp
fisttp
into
pop
cdq
addr16
int3
add
(bad)
retf
test
clc
pop
sbb
xor
cmc
and
in
xchg
mov
or
dec
xchg
jno
aad
ss
dec
(bad)
mov
lds
xchg
mov
popa
les
mov
push
out
xchg
cdq
aaa
adc
adc
cli
pop
adc
and
push
jp
rol
mov
lahf
cwde
movs
aas
mov
int
add
and
test
int3
fldcw
mov
xor
(bad)
retf
into
lea
clc
pop
in
adc
mov
es
fadd
mov
leave
fs
mov
outs
fist
inc
or
(bad)
loop
adc
fmul
xchg
call
jecxz
jmp
inc
cwde
or
xchg
outs
pop
call
cmp
out
test
cmps
sbb
shl
mov
mov
adc
jns
pop
sbb
test
clc
outs
jg
sub
pop
mov
xchg
std
into
aad
cld
bound
jmp
sub
mov
and
cmovbe
(bad)
cmp
bound
cmp
push
sar
dec
pop
pop
(bad)
and
pop
and
jo
fcomp
out
not
cmp
int3
and
std
mov
push
or
mov
fwait
sub
mov
adc
cwde
cld
imul
into
pop
lods
das
inc
jle
arpl
ret
pop
fchs
jmp
addr16
jmp
push
test
imul
repz
(bad)
fisttp
iret
outs
aad
inc
lods
(bad)
enter
stos
mov
push
mov
add
(bad)
ror
sub
push
std
adc
test
mov
jno
mov
aam
mov
cmps
and
and
sbb
in
out
add
xor
sbb
xor
mov
jp
fsubr
xchg
mov
xlat
aaa
or
enter
shl
sbb
jle
stos
add
sti
out
mov
clc
adc
je
xchg
mov
es
cmp
cld
imul
pop
add
fnsave
jmp
call
retf
in
dec
inc
inc
mov
inc
sub
push
scas
(bad)
mov
in
lea
mov
jmp
mov
out
mov
dec
push
rol
adc
add
pop
imul
lock
mov
mov
mov
idiv
repz
pop
cld
int
lods
cdq
or
daa
xchg
cmp
ins
popa
push
push
cmps
push
xchg
mov
int
fcom
into
addr16
xor
sar
jg
or
clc
cli
loopne
jmp
or
outs
movs
jne
mov
pushf
mov
fldenv
dec
mov
pop
mov
in
jns
fsubr
fcom
xor
out
push
out
adc
jecxz
jecxz
retf
rol
into
adc
dec
les
pop
adc
test
push
or
xchg
test
rol
dec
fild
jmp
pushf
sar
adc
jecxz
inc
popa
mov
int3
lods
div
retf
cmp
loopne
sahf
fild
aam
cwde
and
gs
or
mov
mov
pop
dec
aam
int
xor
push
scas
and
(bad)
sbb
mov
call
in
and
dec
inc
pop
jmp
and
jns
sub
repnz
jmp
cs
dec
jbe
cmp
hlt
pop
and
and
repnz
inc
daa
jle
sub
loopne
cli
sbb
inc
xchg
ficom
dec
test
out
ins
cmps
pop
hlt
adc
test
jbe
push
test
sbb
ds
out
into
in
(bad)
iret
dec
mov
sbb
cwde
jge
scas
sub
dec
add
dec
sbb
add
stc
jl
cmps
fnclex
ja
pop
xor
jg
std
mov
cmp
sub
push
mov
push
int
scas
scas
in
movs
fwait
mov
inc
jmp
push
mov
addr16
sbb
jecxz
push
push
inc
loop
call
in
jb
mov
nop
mov
pop
fsub
aaa
test
das
lods
mov
cmp
jecxz
(bad)
pop
add
gs
jae
push
in
icebp
xchg
call
mov
test
xor
xor
mov
mov
test
lahf
lea
lds
dec
push
mov
sbb
lock
mov
add
enter
inc
jb
add
sub
stc
push
(bad)
sti
add
addr16
out
pushf
mov
es
gs
cs
xchg
cmp
mov
scas
bound
dec
push
arpl
ja
popa
(bad)
test
div
call
xor
retf
daa
rcl
jmp
(bad)
retf
lods
mov
ret
fstp
and
lods
push
dec
popf
jg
add
fidivr
fdivr
lds
xor
lahf
push
and
xchg
xlat
and
ret
xchg
int3
jl
cwde
sub
push
test
pop
xrstor
jnp
jnp
pop
sbb
or
cmp
loope
dec
mov
inc
in
push
gs
inc
test
mov
call
dec
cmp
and
neg
ins
aad
xor
jecxz
and
nop
xor
xchg
inc
pusha
mov
push
pop
test
retf
mov
stc
push
push
icebp
xor
dec
fcomp
and
mov
add
rcr
mov
(bad)
jge
popa
fbld
fst
mov
lahf
jo
(bad)
mov
push
stc
push
mov
pusha
shr
pop
jnp
push
sbb
sbb
js
fcmovu
add
data16
mov
test
jle
imul
leave
sub
and
cs
mov
fsubr
mov
es
mov
movs
add
sar
xor
arpl
xchg
push
movs
lds
clc
mov
dec
push
and
xchg
xlat
retf
pop
sar
fneni(8087
cld
loope
xchg
int3
push
pop
dec
inc
dec
inc
stos
adc
xchg
dec
mov
test
dec
jle
out
gs
inc
inc
jne
inc
inc
pop
inc
jg
lahf
sub
mov
aam
ss
dec
xlat
jno
mov
add
push
repnz
xchg
pop
mov
pop
adc
shr
sbb
add
pushf
das
mov
retf
shl
pop
push
dec
mov
jecxz
stos
popa
loop
pop
sbb
cmp
push
std
loopne
lock
push
imul
inc
xchg
imul
rcr
(bad)
ficomp
add
(bad)
pop
xor
movs
out
add
xor
fistp
sub
mov
lods
dec
ins
mov
rcl
cwde
cmp
fbld
inc
pop
in
push
cmps
dec
xor
push
adc
div
imul
imul
jne
or
mov
popf
cli
sbb
push
jo
inc
loope
icebp
leave
imul
or
sub
sbb
xchg
and
push
push
cmp
sti
push
imul
dec
mov
mov
cmp
arpl
bound
ficomp
pop
xchg
sbb
bound
imul
ret
jb
cmps
test
pop
fs
jno
leave
in
mov
scas
sar
add
xchg
gs
jb
enter
sub
es
movs
sbb
push
or
cmp
pop
jnp
dec
scas
mov
cdq
pop
mov
call
fsubr
in
sub
or
aaa
rcr
adc
ret
inc
or
aad
push
fnsave
das
into
repnz
mov
add
test
cmp
adc
inc
nop
retf
lahf
aam
xchg
mov
out
sub
inc
in
and
aam
push
(bad)
lock
xor
mov
je
mov
xchg
leave
gs
(bad)
and
fbld
dec
push
add
inc
mov
sub
xor
stos
jle
jl
cwde
cmc
movs
cmps
aas
fiadd
aam
xchg
cmp
cmp
add
cmp
lahf
add
jmp
dec
sar
test
sub
add
xchg
and
fcomp
(bad)
loopne
cli
xchg
jnp
pusha
xchg
dec
push
int3
gs
je
cmp
mov
shr
or
mov
mov
mov
loope
je
cmps
sub
mov
cld
std
das
call
dec
dec
mov
cmp
dec
jne
jae
mov
jg
sub
pusha
mov
cmp
xchg
push
jb
add
pop
and
mov
pusha
inc
pop
bt
test
mov
or
pop
or
jbe
adc
aad
pop
mov
adc
jge
inc
ror
or
das
xor
dec
and
fist
fldcw
cwde
icebp
lock
jl
push
mov
repnz
lea
daa
xor
push
scas
ret
jcxz
cld
cs
adc
scas
mov
jl
cmps
jg
std
fdivr
jbe
das
into
clc
aam
inc
push
in
add
(bad)
or
lods
stc
push
adc
xchg
nop
sub
test
push
pop
mov
jbe
inc
inc
jge
daa
rcr
mov
movs
jle
lahf
popa
je
inc
les
pop
add
jl
dec
add
push
imul
ja
pop
out
inc
push
sbb
repnz
push
ficomp
jae
or
ins
push
int3
fcomip
loop
jne
lods
mov
adc
cmp
adc
jno
xor
mov
(bad)
vorpd
lds
mov
pushf
cs
push
mov
push
pop
les
xor
call
cmps
fldcw
mov
sahf
scas
sbb
out
shl
dec
pop
retf
ja
mov
int3
mov
mov
inc
out
test
aas
idiv
add
icebp
mov
jg
xor
int3
dec
adc
adc
inc
and
sti
push
xchg
inc
ds
or
push
jae
sbb
cmp
cwde
sub
jl
mov
sbb
jg
xchg
ret
add
(bad)
cmc
loope
sbb
pop
sbb
xor
retf
cld
dec
mov
pop
mov
push
stos
pop
cmc
(bad)
out
pop
pop
and
fwait
in
cmps
lods
js
xlat
add
aaa
adc
or
mov
fnstcw
mov
stos
cmp
jbe
cmps
lock
outs
or
dec
xchg
sub
cwde
sub
mov
jb
mov
loope
mov
es
sub
fs
push
push
pop
and
mov
ret
ror
sub
dec
test
dec
pop
jmp
shr
mov
daa
mov
lods
jp
and
mov
rol
lock
idiv
rsm
jno
cmp
push
jo
aaa
repz
pop
test
or
pop
mov
xor
push
ds
cli
out
cmovo
mov
fcomp
jp
mov
add
inc
je
(bad)
jmp
fimul
rcl
inc
xchg
mov
(bad)
pop
fldcw
sub
pop
push
xor
xchg
(bad)
test
shl
mov
stos
mov
inc
(bad)
cmp
loopne
bound
mov
mov
xchg
mov
mov
mov
retf
vcmpss
iret
fdivr
out
arpl
mov
das
pushf
into
rol
adc
mov
movs
loop
sbb
push
push
mov
adc
or
xor
xor
jno
xchg
pop
inc
adc
sar
pusha
push
adc
data16
mov
mov
out
dec
sub
dec
sub
mov
es
or
push
and
das
fisttp
mov
in
cmp
adc
jb
xor
test
retf
mov
iret
xchg
int
jge
enter
dec
sbb
dec
push
cmp
idiv
lock
sub
add
pop
cdq
inc
and
adc
test
rol
and
aad
and
mov
xlat
mov
xor
pop
fadd
add
adc
nop
adc
fstp
jno
retf
jns
lahf
dec
add
mov
popa
or
shl
xor
retf
frstor
jge
or
jp
push
mov
pop
dec
pop
cmp
jns
mov
pop
dec
pop
pushf
jge
mov
mov
xlat
xchg
pop
sub
pop
test
inc
ja
repz
push
repnz
(bad)
bound
stc
in
mov
sub
and
sub
jns
iret
lds
fdiv
pop
sub
jbe
gs
movs
les
mov
std
jno
sti
aaa
packuswb
xchg
xor
sub
fbld
ins
adc
test
pushf
nop
mov
ins
cmp
push
mov
or
pop
jne
fiadd
fucom
(bad)
popa
(bad)
lahf
ror
push
pop
ror
adc
sub
pop
pop
out
xchg
scas
dec
inc
cmp
call
push
mul
adc
jge
mov
xor
(bad)
dec
mov
xchg
arpl
cmps
pushf
pop
xor
cmps
pop
cli
xchg
loopne
dec
cmc
xchg
xchg
mov
jne
mov
call
cmp
mov
and
ins
sbb
push
bound
sti
call
scas
or
mov
popa
add
fisubr
daa
aam
add
das
mov
pop
and
movs
cli
push
or
out
or
push
cmp
shl
pop
inc
imul
mov
loop
sbb
and
and
jb
and
xor
das
out
jae
mov
inc
in
and
push
fwait
sub
lds
loope
in
mov
sub
sub
add
dec
(bad)
push
mov
jnp
mov
jae
jne
hlt
aad
daa
ror
lock
cmp
sub
mov
int3
mov
mov
pop
push
mov
enter
and
jle
dec
fld
xor
xor
push
xchg
dec
test
int3
mov
cmp
xor
arpl
sti
stc
cmp
ins
push
movs
repz
xchg
fistp
or
sub
sbb
addr16
and
inc
jmp
sub
outs
mov
imul
jns
ror
xor
pop
cdq
cld
in
retf
dec
pop
and
push
(bad)
push
xchg
xchg
sub
xchg
sub
xor
(bad)
adc
sar
pop
enter
fdivr
fistp
bound
and
movntq
aaa
sti
mov
aas
mov
add
imul
gs
mov
das
xchg
dec
mov
add
push
inc
stc
into
and
lea
test
bswap
lahf
push
retf
mov
sti
jle
sub
loop
out
mov
mov
out
fsubr
inc
jnp
retf
mov
stc
mov
(bad)
cdq
cmp
xor
push
lahf
xor
xchg
dec
push
xchg
or
test
xchg
test
push
mul
xor
or
loopne
push
addr16
addr16
int
cmp
popa
jmp
sahf
ret
mov
pop
popa
mov
dec
pop
mov
fstp
jnp
cli
stos
sbb
pop
push
and
aad
inc
dec
test
int
inc
sbb
shl
(bad)
fdivr
inc
add
mov
popf
adc
push
add
or
jo
hlt
add
data16
bound
push
xor
aam
mov
inc
loop
test
sar
lods
jmp
retf
loop
popf
gs
xchg
add
sahf
lods
add
xchg
mov
xchg
sbb
sub
xchg
mov
nop
fidiv
call
xchg
and
adc
inc
mov
rcr
clc
xchg
sbb
int
ficom
xor
pop
or
out
ret
pop
ds
outs
dec
jnp
xchg
sbb
jl
cmp
jbe
add
out
ror
jmp
in
jae
dec
xchg
adc
stc
cmp
add
jl
daa
pushf
jp
aas
mov
enter
(bad)
mov
test
in
pop
test
jo
(bad)
adc
jno
fdivr
stos
fs
cmp
ss
fdiv
int
xor
and
into
fiadd
fdivr
jp
mov
aad
fcomp
cmp
int3
xchg
pop
(bad)
and
(bad)
std
fdiv
mov
or
popa
popf
imul
add
out
xor
sub
stos
mov
mov
in
jmp
mov
movs
into
mov
mov
icebp
cs
push
outs
xor
sbb
lods
xchg
test
out
dec
fucomi
adc
push
xchg
mov
test
xor
pop
jg
or
jmp
icebp
in
test
les
inc
test
inc
xchg
cmp
ds
(bad)
ins
lahf
mov
not
sbb
je
push
pop
cwde
frstor
dec
dec
or
clc
pop
repz
or
cmp
enter
xchg
cli
mov
inc
out
movs
inc
ss
aam
inc
sub
pop
xchg
sub
pop
mov
scas
mov
add
retf
pop
leave
retf
and
push
dec
nop
jb
sar
sahf
cli
jle
jecxz
cmp
out
test
xor
icebp
popa
sti
ret
jg
or
shr
std
stos
movs
dec
mov
mov
(bad)
cmp
addr16
jns
pop
jge
inc
in
outs
inc
ins
inc
pop
cld
sub
xchg
lock
sbb
scas
dec
jo
fst
mov
dec
ins
xchg
push
jns
retf
jmp
test
jmp
xchg
daa
pusha
fidivr
mov
jmp
mov
adc
sub
in
stos
loop
push
lahf
mov
ins
out
(bad)
out
in
aad
test
cld
lock
rcl
jne
movs
aad
or
mov
(bad)
stc
arpl
cdq
scas
dec
in
add
and
lods
dec
das
lds
test
sub
sub
sahf
ror
dec
sub
hlt
stos
stos
stos
sti
nop
sti
shl
or
aad
mov
repz
mov
push
outs
xchg
inc
xchg
aas
jns
outs
or
fist
movs
in
inc
cmp
pushf
fld
lock
int3
cmp
(bad)
lahf
repnz
mov
pushf
xchg
push
fisubr
and
adc
das
and
les
mov
cmp
add
cmps
jbe
adc
fidiv
jle
add
in
icebp
pop
add
pop
pop
lea
sbb
push
cmps
jbe
or
xchg
lds
cmp
sahf
push
sbb
xor
xor
ror
xchg
(bad)
stos
and
xchg
ss
out
adc
xchg
pop
adc
adc
(bad)
popf
pop
jae
popa
inc
repnz
sub
jg
bound
in
xlat
dec
idiv
imul
mov
cmps
out
push
test
lock
or
mov
cmp
frstor
je
sbb
fst
popa
ins
xchg
mov
and
push
cmps
dec
ins
retf
jge
push
call
or
dec
mov
adc
mov
aam
add
xchg
(bad)
fisttp
std
xchg
add
dec
jae
adc
inc
rcl
sub
fsubr
xor
stos
mov
push
adc
xchg
aad
mov
lods
movs
mov
outs
adc
pop
call
push
les
mov
or
sbb
(bad)
push
outs
clc
cmp
push
sbb
sub
(bad)
imul
(bad)
push
sbb
sar
add
int3
aaa
(bad)
loope
sar
push
retf
xchg
out
jno
pushf
push
cdq
lock
scas
repnz
or
inc
rcr
gs
add
es
fcmovnb
mov
out
pop
mov
cmps
movs
pop
fcmovne
(bad)
pop
ror
sti
pop
adc
inc
inc
pop
adc
dec
xchg
xor
inc
inc
adc
cmps
mov
mov
cwde
fucomp
retf
sar
popa
out
ret
call
lods
sbb
xchg
iret
repz
test
push
push
(bad)
xchg
adc
lahf
push
(bad)
jge
adc
mov
jo
cmp
fwait
aas
add
pop
adc
xor
sub
push
mov
sti
cld
aam
jmp
into
outs
daa
call
cwde
mov
push
mov
iret
test
lock
or
aam
and
mov
add
and
pusha
jae
lds
test
or
pop
and
or
add
daa
adc
fwait
sub
dec
stos
cdq
and
mov
pop
ret
out
loopne
pop
jg
add
xor
test
sbb
in
imul
jl
fidivr
aam
aaa
pusha
in
jmp
movs
fist
dec
jo
jbe
xor
jl
push
nop
mov
(bad)
adc
jp
dec
in
lock
fcomi
sub
mov
add
push
xchg
addr16
push
lds
jno
rcr
popa
sub
sti
xchg
in
sbb
xchg
imul
test
leave
test
popa
fmul
aam
sti
popf
xor
push
push
arpl
lahf
js
movs
rcl
ins
jbe
mov
cli
pushf
bound
int3
mov
cmp
fimul
pop
inc
pop
xchg
imul
mov
xor
fisttp
inc
add
call
sub
scas
iret
push
out
sub
and
aaa
dec
ret
jmp
(bad)
and
mov
imul
ja
(bad)
fwait
mov
loop
addr16
rcl
xor
idiv
fisttp
and
inc
stos
xor
jns
inc
sub
adc
std
mov
daa
cli
xor
test
xchg
mov
xchg
mov
jbe
and
adc
inc
les
loopne
xchg
mov
int
clc
cmp
(bad)
sbb
mov
xor
inc
call
ins
mov
jecxz
sub
(bad)
(bad)
enter
cmp
adc
push
jno
out
ins
and
inc
cmp
mov
(bad)
adc
fcmove
aas
stos
pop
jae
jo
bound
dec
jmp
sbb
stos
shl
sub
sub
out
lock
stc
mov
pop
or
cld
xchg
mov
test
mov
and
in
dec
mov
pop
xlat
mov
jge
imul
and
jns
cdq
add
mov
arpl
sbb
sahf
popa
sbb
jae
jne
push
and
push
inc
cmp
xor
test
(bad)
int3
cmps
inc
xchg
cmp
push
movs
imul
inc
(bad)
fnsave
jnp
sub
cmc
mov
cmp
js
jle
push
ins
or
and
xor
mov
mov
add
sub
aad
imul
(bad)
in
inc
dec
pop
pop
dec
movs
lock
sbb
repnz
shr
cmp
xor
inc
fnstcw
sahf
jnp
pop
cld
out
out
dec
loopne
mov
ret
xchg
fwait
mov
push
mov
push
jle
movs
movs
pop
ss
pop
(bad)
cdq
in
movs
rep
mov
ror
pushf
jp
xchg
inc
aas
int3
adc
cmps
cmp
jmp
sti
sbb
cmps
sbb
cmc
fld
ds
dec
fild
mov
call
pop
mov
js
shl
loop
stos
std
add
or
es
sub
sbb
(bad)
aas
cmps
push
sub
inc
aam
mov
inc
in
movs
mov
mov
test
push
shr
inc
fidiv
(bad)
(bad)
stc
fst
into
leave
sbb
or
mov
in
bound
enter
retf
xlat
or
fdivr
jnp
cmp
int3
push
xchg
imul
sub
mov
hlt
push
push
xchg
and
sbb
inc
aas
(bad)
mov
push
jmp
mov
(bad)
aam
lock
test
push
jmp
or
mov
shl
adc
pop
mov
popf
rcl
(bad)
iret
jne
loop
dec
push
adc
loopne
jge
pop
stos
sbb
jge
in
aaa
sub
push
mov
and
xor
inc
add
mov
mov
inc
je
and
rcr
mov
or
cmps
dec
jae
cmp
int
outs
add
call
pop
js
add
mov
sbb
in
mov
xchg
jo
(bad)
sbb
mul
ins
shr
xchg
adc
int3
sub
popa
nop
dec
rcr
sub
int3
mov
nop
or
sbb
pop
pop
je
pop
adc
add
push
dec
xchg
fnstcw
or
in
aam
sub
movs
sub
cli
int3
jae
repnz
jmp
push
adc
mov
push
popf
xchg
popf
icebp
push
das
cmp
and
and
push
dec
outs
sar
mov
and
cmp
dec
out
xchg
cmp
stos
or
jnp
or
jnp
adc
jle
loopne
nop
scas
repnz
mov
aaa
mov
jmp
or
pop
cs
xor
pop
jg
cmps
or
jge
fistp
xor
inc
inc
fdiv
hlt
lahf
lods
iret
movs
mov
pop
and
ins
mov
loop
fstp
inc
add
cdq
jo
test
les
popa
scas
mov
add
ret
popf
mov
retf
dec
sahf
xchg
push
and
add
(bad)
pop
fisub
jle
dec
aam
lahf
fwait
test
and
push
dec
clc
mov
xchg
mov
loop
jle
outs
fidivr
imul
f2xm1
mov
cmps
sbb
ret
push
push
cwde
ss
adc
xlat
rcl
test
fmul
mov
outs
leavew
xor
(bad)
lahf
popf
jmp
jno
cld
mov
xor
nop
out
jne
js
mov
inc
dec
jo
mov
dec
sub
cmps
add
jno
cmp
les
fidivr
or
ror
xchg
xor
imul
mov
enter
lahf
or
cmp
xchg
mov
mov
dec
xchg
pop
loope
cdq
sub
pop
adc
xchg
cli
cld
cld
adc
test
or
adc
mov
sbb
repz
mov
inc
pop
ins
and
mov
sbb
shl
inc
cwde
and
pop
aam
sti
loopne
imul
in
test
cmp
cmp
(bad)
aaa
inc
push
push
adc
dec
addr16
fcom
fcmovnbe
mov
into
sbb
and
mov
pusha
adc
clc
shl
add
shl
xor
jbe
sbb
into
jp
(bad)
cmp
fnsave
out
xor
jb
add
push
jl
mov
(bad)
arpl
add
mov
and
hlt
dec
sbb
mov
call
ror
cmp
mov
inc
je
js
pop
movs
sbb
mov
(bad)
movs
cdq
lock
push
and
movs
xchg
mov
call
add
mov
inc
(bad)
fdivr
scas
js
jmp
loop
aam
shl
cmps
cld
mov
retf
lds
dec
(bad)
stos
or
mov
(bad)
sbb
push
lahf
iret
and
fwait
add
xlat
stos
add
and
repz
mov
or
inc
dec
push
pushf
push
cli
sti
dec
jg
xchg
mov
leave
xchg
fistp
shr
cmp
sbb
pop
and
aaa
outs
es
or
test
push
xchg
inc
hlt
xor
call
cmp
iret
mov
jp
out
xchg
mov
mov
stc
cmp
test
xchg
(bad)
pop
jp
inc
fadd
es
(bad)
cwde
sub
aad
gs
sub
int
and
mov
aas
jo
sub
movs
inc
xchg
loop
cld
lods
dec
leave
in
mov
and
xor
dec
dec
cmp
inc
retf
mov
daa
xor
enter
xlat
xchg
push
lds
jns
inc
mov
xor
push
sub
in
ins
leave
int
and
sbb
dec
mov
sbb
in
fwait
mov
or
add
add
rol
ror
or
cmp
mov
pop
dec
sahf
rcr
cmp
pop
cwde
fidiv
sbb
retf
stos
arpl
std
out
inc
adc
es
pop
pop
sbb
sti
pop
movs
cmp
int3
hlt
pop
sbb
sbb
aaa
std
ss
and
xor
pop
xor
sbb
icebp
xor
loop
ret
ret
add
and
lods
jae
sbb
push
or
js
call
mov
iret
int
shl
or
mov
sub
push
jne
loope
les
sbb
sub
mov
loop
in
popa
retf
lock
in
sub
adc
call
xchg
into
sub
inc
or
call
mov
(bad)
bound
cmps
ret
test
xlat
mov
jle
jnp
or
jmp
mov
pop
dec
jmp
jns
mov
jo
inc
leave
add
or
jl
out
mov
add
fs
jmp
enter
loopne
jp
in
and
iret
sbb
inc
in
cmp
mov
inc
retf
xor
cmp
cld
and
inc
test
test
lahf
psraw
loope
clc
daa
nop
push
sbb
imul
mov
outs
mov
xchg
or
pusha
pusha
xchg
enter
xchg
push
mov
repz
and
push
add
push
mov
ins
adc
and
mov
jl
xchg
add
movups
retf
sbb
sbb
sahf
add
or
mov
(bad)
jo
or
mov
or
xor
je
pop
push
inc
dec
dec
in
mov
cmp
add
enter
in
jmp
dec
aam
stos
add
sub
popf
frstor
(bad)
jmp
test
add
dec
(bad)
mov
xor
cmp
shr
icebp
jno
mov
lock
repnz
jne
or
sub
or
push
cdq
lea
jnp
fcom
mov
aas
push
nop
cmp
cmp
loop
ja
rcr
cmp
mov
(bad)
std
mov
adc
outs
pop
js
rcr
fldenv
jecxz
add
mov
push
mov
xchg
and
mov
and
in
fmul
sub
jbe
jge
jl
mov
ret
inc
or
out
inc
(bad)
pop
adc
lock
aas
push
fstp
iret
xchg
dec
pop
dec
iret
inc
iret
and
sbb
mov
or
xchg
adc
inc
push
add
outs
or
pop
cmps
pop
arpl
jno
cdq
push
and
out
in
mov
cdq
sbb
jne
push
jne
icebp
outs
inc
dec
(bad)
xor
movs
paddb
lea
push
popf
sar
out
sbb
sub
or
fld
jnp
icebp
scas
xlat
pop
dec
lea
sbb
xor
push
ror
jns
dec
outs
in
lods
jmp
mov
push
or
push
lods
movs
jne
push
pop
xchg
sbb
test
es
in
shl
mov
cmovo
jb
mov
sar
jbe
add
and
jle
outs
leave
cmp
mov
xor
sbb
ins
adc
add
xchg
jae
inc
push
jae
pop
jne
or
lods
push
xchg
leave
mov
xor
sub
sbb
test
dec
push
push
lock
push
inc
jno
inc
adc
dec
arpl
push
leave
jnp
movups
xor
ins
nop
cmp
lock
or
pop
adc
repnz
xchg
test
lahf
lea
push
hlt
ins
loope
inc
pop
push
stc
xor
mov
pop
mov
test
mov
js
push
cld
sub
xor
push
ret
push
pop
sub
fidiv
cmp
into
xchg
test
pop
rcr
cwde
das
dec
movs
add
iret
imul
push
stc
outs
test
out
cmp
dec
mov
sbb
imul
mov
sbb
lea
icebp
mov
xchg
cmp
mov
and
jmp
shl
loopne
mov
or
jge
lds
(bad)
repnz
fs
mov
xor
and
les
lahf
inc
leave
pusha
dec
push
pop
enter
sar
(bad)
mov
mov
cmps
lahf
sahf
and
dec
mov
call
or
and
pop
pop
repz
and
jmp
pop
mov
inc
dec
cmp
scas
fst
out
(bad)
dec
pushf
pop
push
inc
lea
mov
das
ds
call
mov
mov
sub
sar
xchg
inc
pusha
sub
mov
push
ja
lock
in
out
push
fwait
(bad)
cmp
add
scas
sub
or
pusha
mov
daa
adc
cmp
std
(bad)
arpl
retf
ins
mov
(bad)
fs
clc
sub
rcr
sbb
cmp
(bad)
cmps
and
shl
cs
push
sbb
cmp
shr
push
sub
and
je
dec
and
sbb
pop
pop
and
jbe
xlat
lea
sbb
cwde
jmp
dec
ret
pop
js
inc
call
aas
aam
xchg
pop
xlat
mov
in
js
nop
cli
push
aad
inc
cwde
jge
fwait
hlt
and
fidivr
adc
sub
nop
ror
sub
fwait
push
mov
jno
pop
mov
lock
pop
sub
in
(bad)
pop
sbb
loopne
mov
add
pop
mov
cld
mov
adc
in
aaa
jno
cmp
or
dec
push
cmp
mov
jle
push
cli
xchg
pop
frstor
movs
xor
es
rcr
pop
mov
je
and
lds
shl
bound
sti
lock
sar
cmp
mov
mov
mov
jg
sub
out
ja
es
push
mov
nop
xor
arpl
movs
xchg
fld
or
mov
les
mov
jmp
jecxz
idiv
imul
mov
push
cld
lods
push
inc
cld
or
mov
stos
xor
dec
in
stc
cmp
rcl
xor
xchg
clc
mov
fdivp
push
and
sub
mov
test
push
cmc
inc
ror
xchg
test
xor
sub
push
repnz
adc
add
fadd
sbb
ret
ficomp
inc
loopne
loop
js
cmps
pop
hlt
fisub
mov
hlt
outs
add
shr
sbb
cmp
(bad)
jmp
arpl
cmc
mov
add
push
(bad)
fcomp
outs
fbstp
scas
dec
xor
jne
test
dec
xor
ret
clc
loopne
xchg
loope
inc
cld
call
stc
jg
dec
xchg
pop
imul
xchg
outs
shl
add
mov
sub
mov
clc
mov
or
cwde
in
retf
sbb
cmp
jle
adc
dec
and
pop
sbb
ds
push
push
test
or
js
jb
mov
dec
pop
xchg
inc
mov
and
mov
cmps
jb
dec
dec
in
retf
in
sub
loopne
lea
and
push
popf
push
ja
(bad)
test
sub
clc
ret
inc
mov
or
xchg
push
and
addr16
ret
lock
and
les
push
adc
pop
jo
into
jno
xor
hlt
test
and
inc
les
nop
jecxz
push
adc
xchg
ror
cmps
mov
mov
push
mov
in
mov
inc
int
dec
jle
ret
out
mov
jne
mov
ds
mov
inc
daa
ss
cs
jo
add
sub
pop
add
daa
push
pop
in
adc
cli
shr
xor
mov
in
xchg
cmps
(bad)
inc
dec
scas
data16
sbb
pop
push
mov
mov
stos
or
jle
mov
nop
dec
emms
ss
rol
repnz
mov
dec
pop
ficom
mov
mov
mov
js
movs
test
mov
dec
cli
jns
sti
mov
push
push
mov
push
pop
loop
push
popf
in
mov
mov
add
nop
movs
pop
in
ja
cmp
sbb
cwde
loop
out
xchg
icebp
jmp
push
or
cmp
pop
repnz
std
xchg
mov
sbb
test
in
hlt
rol
cmps
test
gs
adc
mov
push
ins
addr16
cmp
inc
and
xchg
adc
mov
xchg
mov
sbb
inc
clc
fsub
adc
retf
repz
sti
fisub
lahf
in
jae
push
fild
mov
mov
jo
jge
outs
jo
add
jno
inc
test
inc
sub
call
addr16
push
sub
xor
pop
jnp
lods
push
push
mov
xchg
popf
sbb
nop
mov
or
jo
inc
push
xor
pop
in
mov
inc
fcmovne
jo
and
loopne
dec
stc
xor
call
cmc
push
xchg
mov
mov
test
xor
in
ds
pusha
bnd
inc
lahf
arpl
inc
cmp
sub
pop
std
jnp
fnsave
sub
enter
rcl
xchg
mov
and
xchg
sub
and
fwait
arpl
rol
bound
lods
shr
aas
sub
cmp
icebp
add
popf
pop
sahf
xor
pop
add
fild
inc
xor
xor
add
mov
pusha
fcom
inc
inc
in
daa
jecxz
or
and
add
and
sub
sbb
mov
mov
jno
dec
stos
jmp
adc
shr
jl
cmp
les
dec
xchg
bound
adc
rol
fisub
sub
xchg
pushf
xor
and
leave
xchg
in
(bad)
mov
adc
mov
push
inc
push
lods
mov
pushf
mov
push
test
repz
pop
in
pop
mov
daa
dec
inc
test
mov
sub
dec
mov
add
jno
aam
jbe
xchg
and
repz
fsubr
fcmovne
outs
push
sub
into
or
mov
and
je
iret
hlt
add
sbb
mov
push
das
jmp
ret
sbb
into
js
add
nop
test
xchg
mov
mov
dec
sbb
(bad)
aaa
out
movs
scas
popf
(bad)
call
movs
push
out
fnsave
repnz
cs
inc
out
mov
fsub
pop
or
push
cmc
xchg
or
push
and
push
scas
pushw
fsubr
add
cmp
dec
xchg
iret
cmp
cs
jmp
jle
iret
test
dec
mov
push
aam
mov
scas
mov
pop
cs
imul
sbb
cmp
bound
inc
es
ja
stos
jmp
push
dec
nop
xchg
fstp
into
js
mov
sbb
push
jl
mov
cmp
sbb
inc
dec
mul
mov
cmps
ds
adc
pushf
push
popa
mov
pop
xchg
test
and
pusha
mov
into
lock
cmp
pop
jl
lds
push
xchg
pushf
stos
xchg
in
imul
test
xchg
scas
fidivr
movs
xchg
pop
out
mov
mov
in
outs
lahf
push
dec
sti
sbb
or
mov
push
jg
pusha
jns
cmp
mov
sar
pusha
xchg
mov
add
loope
push
push
xor
retf
xor
stos
sub
xor
inc
data16
mov
push
cmp
pop
mov
cs
mov
adc
sahf
xor
lea
and
aad
jo
pop
push
add
inc
cmp
cs
mov
jmp
inc
and
fwait
jmp
mov
(bad)
imul
add
cmp
dec
sub
dec
mov
sub
xor
out
ficomp
rol
xchg
into
and
push
inc
sahf
xchg
call
test
out
(bad)
out
jne
das
xor
add
mov
in
or
dec
cmps
push
jo
jo
bound
push
loope
mov
sbb
cdq
push
dec
ins
mov
or
imul
and
je
dec
std
inc
mov
mov
fs
jnp
push
cmp
mov
dec
push
mov
add
(bad)
mov
push
mov
hlt
sbb
into
test
adc
xor
mov
adc
mov
add
jbe
cli
scas
pop
int3
outs
mov
dec
je
push
push
iret
mov
pop
movs
in
sbb
xchg
fcomi
cmc
or
pop
cld
inc
mov
test
dec
dec
js
adc
out
push
jge
dec
dec
mov
popa
inc
out
mov
imul
das
ret
clc
sub
nop
les
mov
ret
aas
(bad)
lods
mov
pop
adc
jae
test
add
and
add
lods
jnp
repnz
movs
cmp
out
vmread
cmp
inc
pop
push
ror
pop
pop
call
popf
xchg
mov
mov
or
inc
cmp
fidiv
repnz
stos
in
mov
and
ins
push
fimul
imul
inc
jmp
or
and
inc
xchg
shr
inc
adc
sbb
loop
out
ficom
fdiv
sub
fldenv
and
js
call
in
arpl
ja
push
inc
xor
cmp
dec
mov
rcr
push
mov
cmp
pop
sahf
jmp
sub
xor
mov
mov
out
push
leave
outs
jmp
push
and
mov
inc
lahf
arpl
xchg
push
shl
aam
pop
ror
retf
test
cld
lea
and
lods
lds
out
data16
push
or
daa
mov
lahf
jle
ss
idiv
pop
call
pop
mov
test
loop
xlat
xchg
shl
mov
mov
aaa
gs
int3
cs
stos
dec
or
(bad)
jmp
mov
xchg
retf
popa
and
or
mov
cwde
cmps
lods
lock
iret
cld
mov
sub
lods
fidiv
dec
xchg
push
(bad)
xor
push
(bad)
pushf
adc
mov
xchg
dec
mov
pop
std
sbb
cdq
popf
add
push
enter
jmp
ins
scas
xchg
leave
pop
mov
sub
ins
adc
cmovle
push
push
push
cmp
popa
pop
ret
pop
xchg
dec
jecxz
lea
mov
nop
mov
push
inc
daa
cmp
pusha
xor
adc
test
scas
js
jbe
xchg
or
fnstsw
or
popa
inc
mov
or
imul
int3
inc
fwait
out
mov
jmp
loopne
lods
push
sub
punpckhdq
pmuludq
xor
push
adc
retf
push
jmp
retf
push
mov
mov
jo
sub
(bad)
out
xchg
xor
push
mov
jmp
(bad)
pop
add
mov
ja
loope
pop
ins
pusha
mov
mov
pop
pop
out
xor
pop
loope
lea
mov
jae
pop
cmp
fld
shl
aam
lods
mov
hlt
or
add
jg
out
mov
jns
pop
jmp
fisttp
loopne
jmp
jo
xchg
push
jb
inc
xchg
sbb
push
aaa
sar
mov
retf
nop
push
jo
add
jne
inc
and
push
les
jge
push
sar
add
xor
test
xchg
sub
and
mov
add
dec
pop
jo
adc
push
es
ins
sub
jmp
xchg
and
fs
and
or
jmp
retf
ss
add
mov
push
(bad)
cli
inc
inc
and
mov
push
mov
stos
arpl
push
inc
inc
inc
inc
aaa
mov
dec
mov
movs
xchg
jne
and
sahf
push
sbb
pop
hlt
fwait
mov
iret
cdq
jae
dec
(bad)
outs
rol
mov
mov
jae
pop
cld
jmp
adc
dec
push
rcr
jge
test
jmp
les
xor
int3
test
xchg
pop
fsubr
and
push
jnp
outs
mov
push
test
scas
int
dec
push
jle
les
repz
push
push
and
mov
sbb
stos
push
push
lahf
sahf
mov
pop
add
cwde
dec
cmp
or
in
jns
jmp
ret
dec
ins
fdivr
aas
call
stc
lods
nop
sbb
cdq
push
sbb
bound
or
or
sahf
push
jecxz
push
mov
jecxz
in
mov
pop
(bad)
jl
cmp
rcl
test
outs
stos
test
mov
ss
sbb
cmp
daa
inc
ins
dec
jmp
out
aas
call
into
stos
test
dec
ins
and
rol
and
jae
jbe
xor
push
xor
mov
dec
call
mov
jle
loop
adc
cld
pop
and
cs
jl
jmp
push
mov
(bad)
xor
(bad)
jg
mov
outs
jbe
fsubp
jns
mov
scas
sbb
and
call
mul
ins
fimul
inc
pop
daa
mov
sar
jmp
fistp
cwde
loop
mov
cdq
test
adc
in
sar
fnsetpm(287
dec
inc
fsubr
fwait
cli
arpl
cmp
jmp
dec
jge
jmp
mov
stos
xor
mov
xchg
inc
add
mov
lock
rol
push
call
call
jp
mov
cmp
jnp
outs
stos
xabort
add
mov
jne
push
push
add
push
mov
fsub
call
pop
pushf
or
aas
push
loopne
sar
jg
pusha
(bad)
in
push
dec
mov
sbb
adc
inc
push
retf
fstp
add
test
and
adc
fmul
sub
bound
loop
pop
mov
jns
push
test
lods
xlat
pop
div
pushf
daa
jl
movs
inc
sbb
rol
dec
add
lods
inc
add
popa
rcr
inc
jg
scas
popf
or
rcr
idiv
push
mov
call
push
fld
cmp
cmp
sahf
mov
out
cmps
adc
add
dec
test
inc
dec
lahf
popa
sbb
mov
outs
cs
mov
jmp
(bad)
mov
clc
std
sbb
jno
enter
(bad)
mov
ja
rcl
jge
xlat
mov
or
ss
xchg
mov
imul
xchg
mov
mov
jge
and
xor
xchg
rcl
cmp
fimul
outs
mov
add
mov
movs
push
cs
dec
adc
push
and
shl
imul
call
and
and
pop
enter
jns
adc
jb
bound
mov
pop
test
push
call
test
test
std
mov
lea
in
cmp
retf
iret
sub
mov
cli
shl
popa
rol
retf
dec
in
push
jmp
int3
add
jae
jns
push
hlt
rcr
and
push
add
repz
xor
sbb
mov
push
(bad)
nop
sub
jno
sbb
iret
aam
xchg
push
dec
movs
dec
fucomp
push
sub
mov
xor
loop
and
mov
popf
push
test
(bad)
jb
adc
in
nop
xchg
adc
xlat
push
pop
xchg
xchg
loope
test
sar
pop
pop
adc
mov
jae
fidivr
inc
add
inc
jp
jecxz
xor
ret
ins
mov
inc
xchg
cmps
pop
mov
adc
inc
sbb
pusha
cmps
ja
mov
adc
add
dec
or
xchg
sub
adc
mov
arpl
fwait
inc
addr16
or
ret
(bad)
cmps
push
shl
(bad)
cli
adc
ret
push
mov
jmp
(bad)
xor
das
sbb
ja
loopne
adc
dec
fwait
xor
ins
pop
mov
es
inc
iret
cmp
jne
push
mul
not
jo
inc
aam
int
(bad)
pusha
pop
mov
clc
int3
pop
shl
(bad)
pop
les
sub
sbb
int3
lods
push
aam
or
enter
leave
jb
push
mov
outs
add
push
or
sbb
push
xchg
shl
inc
adc
stos
dec
das
pop
adc
data16
mov
sar
loop
sub
dec
fcomp
movs
adc
popa
das
xor
popa
fdiv
pop
sbb
imul
int3
jns
cmc
lea
cdq
pop
jl
jmp
lea
das
out
push
test
jecxz
ret
cs
mov
jns
or
inc
in
sar
loopne
jns
sbb
ins
ret
das
mov
rol
sub
xchg
jnp
stc
lea
xchg
lock
xchg
fimul
outs
scas
inc
xchg
inc
push
sbb
idiv
inc
push
dec
sbb
add
in
or
inc
inc
out
sub
fst
ret
(bad)
cld
cmp
xor
sahf
push
jge
sub
mov
inc
pop
repnz
jbe
shr
pusha
mov
outs
xchg
fisubr
clc
cmp
mov
int
clc
add
imul
(bad)
es
stc
push
mov
jo
adc
mov
iret
mov
pop
cwde
dec
hlt
ins
xchg
out
jmp
lods
inc
cmp
or
pushf
mov
out
jg
dec
jge
push
xchg
test
ins
fadd
fistp
mov
sti
push
enter
outs
(bad)
or
jge
shr
add
sbb
mov
mov
or
sub
div
pushf
stos
add
(bad)
ss
pop
cmps
inc
fdiv
aam
ds
push
fdecstp
or
mov
addr16
pop
or
cld
fs
mov
mov
std
cmp
and
or
jno
mov
aad
and
sbb
jnp
pop
inc
int
inc
popf
(bad)
cmc
data16
neg
inc
scas
imul
ret
push
scas
test
pop
imul
and
jno
jg
out
jae
push
aaa
pop
fsubp
adc
or
popa
dec
jo
inc
ror
fnstcw
add
dec
int3
cdq
push
pushf
iret
mov
xlat
or
jmp
push
cmps
jg
cdq
test
pop
dec
mov
pop
or
sti
sub
push
mov
leave
push
mov
sbb
and
inc
cld
pop
mov
cwde
cmps
daa
sub
aas
(bad)
movs
test
xchg
push
aas
call
bound
adc
jmp
push
mov
stos
leave
inc
sahf
and
inc
mul
push
fisubr
sbb
mov
pop
aam
jl
jnp
jmp
(bad)
xchg
es
lods
arpl
adc
push
and
mov
dec
lods
push
cli
jl
ret
shl
and
cmp
movs
add
dec
jb
leave
aas
test
xor
mov
fs
sbb
sar
xlat
mov
jae
pusha
pop
and
clc
fidiv
shr
cmps
(bad)
nop
sub
jae
(bad)
cmp
inc
sbb
mov
aas
cmp
pop
push
ror
pop
and
jg
test
or
mov
cmc
and
mov
push
dec
rcl
in
sub
push
cmps
adc
mov
fmul
or
lds
into
and
enter
(bad)
xlat
sbb
outs
icebp
add
lods
and
gs
push
add
and
arpl
or
mov
in
mov
je
movs
psubusw
push
and
sbb
xor
retf
popa
(bad)
mov
jmp
into
pop
mov
in
pop
std
push
jl
(bad)
pop
(bad)
pop
data16
in
shr
sbb
jne
les
sub
xchg
adc
mov
js
loop
fwait
adc
sahf
mov
pop
stos
mov
ds
cli
sbb
or
cdq
(bad)
xchg
test
sar
push
add
int3
or
mov
jno
and
sub
xchg
jbe
xor
adc
pop
lods
add
push
mov
test
push
sbb
jne
push
es
not
pushf
add
cmc
enter
push
in
xchg
test
mov
mov
push
xor
xchg
ds
out
shr
movq
cwde
clc
push
popa
outs
cli
push
or
xchg
jne
push
xchg
cmps
icebp
loop
ficomp
pmullw
movs
sbb
fisttp
xor
inc
mov
shr
fucomip
imul
sbb
cmc
sbb
dec
xchg
lock
pop
mov
cmp
mov
(bad)
data16
mov
jl
adc
jg
and
adc
(bad)
xlat
test
cmp
pop
test
ins
dec
jbe
out
fist
test
inc
outs
mov
pop
(bad)
jns
cmps
aam
cmc
mov
sub
dec
mov
dec
cmp
sbb
test
mov
add
xor
mov
loop
clc
retf
xchg
(bad)
stc
js
into
cdq
or
xchg
push
aas
adc
pop
popa
sub
add
shl
sub
jp
xor
pop
test
es
cwde
shl
fmul
nop
inc
adc
mov
or
push
cli
sti
test
sub
xchg
test
shl
adc
xlat
jmp
or
inc
shr
mov
mov
inc
cmp
js
out
pop
xor
retf
outs
sbb
mov
xchg
xchg
mov
nop
push
pop
or
ja
pop
outs
push
add
sbb
sbb
dec
mov
mov
ror
lahf
test
adc
in
aam
or
das
jmp
outs
pop
push
daa
inc
loop
stos
fild
and
pop
add
mov
int3
sbb
mov
xor
jmp
add
addr16
push
jo
lea
stos
ss
lods
or
mov
js
(bad)
and
mov
xchg
inc
jmp
pop
sub
ja
or
or
daa
add
push
pop
push
shr
jae
jle
push
test
push
add
xlat
jecxz
aas
or
jg
push
dec
lock
movs
stos
rcl
adc
loope
mov
je
(bad)
out
data16
jmp
mov
clc
test
sbb
lea
scas
cld
pop
stos
gs
sti
jno
lods
outs
(bad)
in
outs
push
jae
sbb
mov
fild
stos
and
sbb
pop
dec
mov
jb
sti
imul
into
mov
mov
jmp
add
sub
sub
in
in
fist
fs
in
xchg
std
(bad)
test
ds
mov
int3
mov
lock
cmps
aam
jmp
sbb
mov
lods
xchg
mov
add
or
push
jns
dec
mov
das
mov
test
mov
mov
dec
add
sub
dec
(bad)
imul
retf
mov
mov
adc
lea
shl
div
and
and
mov
das
inc
pop
cmp
pop
out
cmp
jp
jp
xor
mov
and
retf
fisub
mov
jmp
loop
aam
mov
popa
pop
adc
mov
jo
cmp
or
or
and
jecxz
dec
inc
fldenv
lock
or
imul
xor
(bad)
rol
pop
jl
repnz
(bad)
hlt
xor
cmps
icebp
sub
adc
sti
rcr
ins
cmp
arpl
xchg
or
push
inc
and
test
adc
enter
ret
fmul
in
call
dec
cli
cmps
adc
add
pop
outs
in
js
pop
mov
adc
in
jns
inc
mov
nop
xor
js
mov
adc
pop
aas
mov
cmp
xor
(bad)
lods
mov
xor
rol
fistp
dec
cld
std
pop
sub
pop
cmps
cmp
jmp
jae
push
mov
mulps
xchg
ret
sbb
stos
xchg
xlat
popf
jl
jle
push
xor
arpl
cmp
mov
or
lock
or
mov
jg
xchg
push
lds
adc
lea
daa
jns
xor
in
sbb
sub
test
shl
or
pop
cmp
mov
movs
fs
push
frstor
sbb
(bad)
mov
(bad)
(bad)
and
mov
int
fisttp
pop
lods
mov
mov
ret
sar
in
xor
pop
mov
xchg
loopne
adc
daa
loopne
popa
mov
les
mov
mov
nop
inc
sbb
bnd
mov
in
inc
(bad)
xor
jne
(bad)
mov
xchg
jg
dec
pop
mov
mov
mov
mov
aad
xor
push
sub
and
(bad)
stos
outs
inc
xchg
or
repz
jo
movs
rcr
(bad)
shl
jae
cmp
adc
test
mov
xchg
shr
stc
call
mov
jecxz
mov
fnstcw
daa
pop
sbb
jmp
gs
and
push
mov
fistp
out
into
cmp
cmc
or
sub
xchg
mov
int
movs
ins
repnz
imul
pop
xor
mov
cld
stos
xor
(bad)
fistp
mov
call
dec
sub
test
xchg
mov
or
dec
inc
ss
push
pop
dec
sub
sbb
std
push
sub
push
add
sahf
mov
inc
jb
push
(bad)
hlt
into
sbb
scas
lea
mov
and
add
sub
push
xchg
mov
test
test
inc
frstor
pcmpgtd
aad
ret
sbb
jp
cmp
push
adc
data16
ror
in
clc
mov
xlat
pop
imul
fcomp
in
ret
mov
ret
pop
xor
int
int
data16
adc
and
pop
jecxz
sub
fistp
mov
pminub
pop
mov
mov
mov
sbb
retf
xor
or
gs
push
xchg
ins
ins
lods
add
and
adc
ins
jge
cli
aaa
retf
xor
out
aad
dec
(bad)
push
mov
dec
call
cmp
into
pop
inc
jmp
(bad)
retf
adc
aam
or
pop
pop
stos
mov
loopne
bswap
xor
out
mov
and
xor
adc
(bad)
call
xor
popf
test
(bad)
push
mov
xchg
mov
pop
xchg
test
ja
push
into
mov
jle
call
sub
scas
xchg
cmp
cld
in
ja
je
mov
sbb
adc
ja
retf
inc
inc
mov
jecxz
gs
mov
outs
enter
xor
ds
lock
mov
cmp
iret
cmp
hlt
into
mov
scas
into
ss
mov
sbb
mov
jmp
dec
mov
movs
adc
leavew
inc
sub
push
into
mov
aas
xor
push
mov
and
scas
lods
sub
repz
mov
ds
push
loope
(bad)
mov
mov
sti
or
adc
arpl
mov
(bad)
enter
jp
mov
dec
pop
sbb
xchg
inc
sub
popf
add
pop
push
mov
daa
call
loopne
call
clc
ret
xor
inc
test
mov
js
jg
and
and
mov
movs
xchg
and
clc
aam
cwde
mov
mov
jge
ja
aam
inc
or
cwde
shr
mov
sub
fwait
cld
sar
add
cmp
and
sbb
jns
daa
cmp
cli
sbb
sti
stos
pop
in
call
inc
inc
lahf
xlat
mov
sbb
pop
inc
pshufw
les
or
push
ds
jns
loop
gs
loop
scas
mov
adc
xor
aad
add
add
cwde
test
int
out
mov
outs
ds
mov
mov
leave
jg
les
iret
or
mov
neg
lds
and
enter
pusha
inc
push
cmp
dec
sbb
addr16
enter
fld
jo
and
adc
add
out
dec
mov
test
aad
cmp
aad
seto
jo
test
push
add
jg
and
arpl
push
pop
clc
mov
add
retf
jmp
call
xchg
(bad)
out
and
push
add
cmc
repnz
(bad)
pushf
mov
data16
addr16
and
mov
aad
test
mov
retf
push
pop
sub
leave
fdivr
adc
and
out
dec
mov
out
jno
out
in
ficomp
ins
add
xor
icebp
xchg
rol
in
ja
ins
pop
inc
aaa
jne
movs
enter
xchg
sbb
jecxz
dec
std
dec
push
scas
out
pop
(bad)
movs
rcl
(bad)
das
dec
fmul
in
inc
xchg
and
mov
fbld
push
and
mov
movs
outs
and
test
pop
cmp
in
shl
push
inc
out
retf
inc
jle
pop
or
xchg
lds
and
dec
arpl
lock
xor
ror
add
in
cdq
jmp
js
mov
inc
cmps
push
xchg
gs
sar
cmp
iret
xchg
aaa
push
pop
into
repnz
xchg
adc
rcl
pushf
jg
cmp
jg
in
push
dec
dec
and
push
mov
pop
push
in
pop
push
mov
xchg
fld
icebp
outs
mov
or
out
mov
(bad)
mov
outs
pusha
out
movs
(bad)
jecxz
das
outs
in
or
and
xor
les
cmp
pop
sbb
mov
mov
pusha
push
sbb
lahf
(bad)
call
repz
test
sbb
adc
addr16
dec
push
shld
xchg
clc
jg
call
push
ds
sbb
add
or
push
jns
lock
int3
outs
fsubr
pop
jo
jns
repz
sub
and
dec
frstor
cmc
je
and
aad
xchg
ds
lods
(bad)
pop
dec
push
sub
fisttp
retf
aaa
push
dec
jg
mov
outs
es
adc
mov
mov
pop
cli
in
pusha
jg
(bad)
iret
test
xor
mov
pop
sahf
ds
bound
xlat
xor
or
bound
pop
out
dec
retf
fiadd
inc
int3
adc
fld
in
adc
sub
nop
je
push
imul
xor
adc
push
retf
mov
in
cmc
xlat
ror
cmp
in
dec
xchg
out
retf
dec
imul
in
retf
test
cld
xchg
ret
mov
mov
dec
lahf
leave
cli
mov
scas
mov
imul
jl
lods
xchg
cmp
mov
push
jg
ins
fs
daa
adc
mov
icebp
xor
lods
inc
ds
mov
sub
popa
popf
dec
loopne
cmps
out
loope
test
dec
push
pop
lahf
ret
or
clc
(bad)
in
lea
scas
or
jno
push
adc
cmp
dec
dec
xchg
int
push
mov
push
iret
or
mov
push
sbb
call
sub
or
pop
sbb
rcr
pop
imul
adc
or
and
xchg
ins
mov
sbb
push
lods
jnp
stos
out
mov
push
and
loop
nop
inc
scas
sti
retf
sub
and
mov
rol
repz
xchg
daa
push
clc
ins
repz
push
adc
inc
cwde
mov
push
bound
jp
jecxz
jle
fst
add
pusha
test
xor
cdq
jmp
(bad)
clc
movs
and
mov
into
cli
cmp
dec
xchg
adc
jge
aam
(bad)
add
xchg
aaa
xchg
daa
adc
mov
je
mov
scas
addr16
mov
cmps
test
cli
adc
pop
add
leave
in
and
mov
inc
je
leave
jo
shr
imul
out
jns
lods
xchg
imul
ficomp
pop
(bad)
and
out
sbb
int3
fsub
inc
cmc
lds
push
sbb
in
gs
jmp
xchg
push
js
push
jp
xchg
xor
xor
inc
loop
and
pushf
or
stos
jnp
jb
retf
or
js
jb
xchg
cs
icebp
ja
add
push
jae
mov
mul
mov
sub
jno
test
sbb
ret
out
nop
and
or
cmp
inc
fmul
inc
mov
in
out
jp
stos
(bad)
fdiv
aaa
scas
mov
mov
icebp
outs
aas
lahf
call
or
inc
movs
lds
cmp
scas
hlt
mov
lahf
push
rcr
dec
out
xor
ror
adc
xor
in
int
scas
dec
rcl
std
mov
cmps
mov
mov
dec
repnz
movs
lahf
jp
xchg
out
repz
mov
sti
inc
pushf
scas
movs
add
inc
xor
cmp
xchg
push
jl
xor
dec
arpl
mov
xor
xor
aas
or
shl
and
xchg
sub
imul
(bad)
mov
shl
imul
outs
ficomp
aaa
xor
sbb
mov
pusha
stos
mov
shl
adc
retf
sbb
jmp
jp
jmp
in
cld
arpl
les
jne
push
(bad)
call
mov
lods
scas
jb
stos
aas
nop
mov
idiv
pop
dec
imul
or
mov
popa
jnp
(bad)
repz
mov
add
es
xor
out
sahf
mov
pusha
jge
jo
nop
call
es
sbb
push
mov
repnz
cmp
mov
sbb
xchg
inc
mov
cld
adc
cmp
jns
out
push
lock
sbb
and
pop
out
ins
test
mov
xchg
mov
push
mov
ins
mov
inc
(bad)
adc
pop
jno
neg
pop
pop
popa
test
in
xchg
adc
cmc
and
mov
es
cs
push
ffree
(bad)
js
out
jae
addr16
aaa
ds
push
inc
aam
pop
lea
(bad)
jae
call
(bad)
jmp
out
lahf
or
les
mov
scas
dec
sub
add
xchg
dec
xor
popf
dec
xchg
fwait
(bad)
outs
std
jp
and
or
addr16
adc
(bad)
loop
dec
and
jne
or
adc
(bad)
mov
xchg
pusha
and
add
sbb
dec
cmp
xchg
es
or
(bad)
je
cdq
loop
and
out
push
xchg
jne
(bad)
stc
jl
imul
mov
dec
mov
nop
test
adc
add
sub
pop
dec
jnp
out
popf
xchg
pop
imul
pop
mov
lds
adc
lods
and
into
cmp
cwde
test
mov
and
je
mov
icebp
fidivr
xchg
lea
xchg
stc
pop
aaa
sbb
mov
cmc
push
loope
shr
lods
mov
repnz
add
bound
aad
sbb
inc
loope
dec
loope
out
scas
mov
dec
inc
dec
movs
or
pop
into
arpl
imul
cld
dec
push
pop
(bad)
cmp
add
cmp
jl
pop
scas
loop
add
out
add
pop
jg
mov
push
sbb
rol
jmp
and
in
call
repz
stc
fwait
scas
push
pop
dec
inc
(bad)
cmc
dec
test
sbb
jnp
rcl
scas
stos
jle
adc
out
retf
sub
jne
out
mov
rcl
or
dec
lods
pop
push
push
dec
sbb
push
pop
bsf
and
dec
and
or
lods
sub
jmp
add
pop
stos
xor
test
aad
in
movs
repz
fidivr
pop
push
xlat
rol
mov
jnp
pop
icebp
push
push
cmp
stos
aaa
fxam
(bad)
push
jnp
mov
loopne
add
mov
retf
maxps
adc
arpl
jmp
loop
clc
int3
and
xchg
fcom
cmp
cdq
aad
mov
sub
je
movs
dec
fistp
sbb
mov
fwait
fwait
cmp
cmc
push
cmps
pushf
out
rcr
add
(bad)
in
adc
add
xchg
xor
jns
add
inc
dec
aaa
or
pusha
push
jae
jb
or
dec
mov
sub
pop
cmp
jp
xchg
cmc
retf
out
ja
push
call
jl
add
loop
mov
jns
jnp
pop
xchg
xchg
jmp
mov
out
mov
stos
mov
cmp
pop
fstp
sub
sahf
daa
and
add
sbb
jb
ins
mov
fist
mov
sbb
arpl
jmp
sub
inc
arpl
lods
jb
push
mov
push
aas
aam
pop
cmp
mov
jmp
fbstp
or
xchg
inc
jg
loop
out
outs
dec
(bad)
sbb
js
cmc
into
adc
sbb
jno
div
mov
inc
jmp
add
ror
fs
inc
data16
inc
inc
inc
enter
or
jb
call
mul
(bad)
sbb
loope
mov
out
jp
aas
cmps
jg
sub
fisttp
in
dec
int3
jnp
daa
add
jae
push
movs
mov
or
xchg
push
mov
inc
push
and
hlt
jno
dec
pop
call
test
cld
add
fbstp
sti
outs
jnp
sar
jg
add
and
mov
aaa
jecxz
cmp
cmps
repz
cmp
pop
jbe
retf
add
push
push
ins
aas
bound
push
shl
jne
jl
test
mov
mov
cwde
lds
sbb
xchg
idiv
jbe
mov
arpl
add
add
retf
cmc
shl
mov
les
xor
hlt
dec
rcr
push
sbb
push
jmp
push
jb
(bad)
cmp
bswap
mov
cmp
mov
fwait
sub
mov
es
ja
js
sub
popa
and
sub
jnp
imul
mov
pop
mov
into
jmp
(bad)
xor
mov
xchg
and
cmp
pop
enter
fcomp
out
cmps
call
add
fist
rcr
rcl
sub
sub
cwde
xor
int
pop
sti
xchg
inc
push
add
add
or
clc
out
add
mov
jnp
push
pop
cdq
out
int
sbb
xor
test
repnz
mov
xor
push
push
or
cmp
sub
mov
ds
mov
lods
add
fnstcw
cli
jno
mov
jbe
(bad)
cdq
(bad)
push
jbe
imul
pop
push
push
inc
ret
out
xor
and
rcr
adc
or
pop
ficom
push
sbb
dec
cld
sub
repz
nop
dec
mov
dec
mov
lods
sbb
push
sbb
jae
inc
xchg
clc
sub
out
(bad)
imul
dec
xor
ja
(bad)
xchg
out
adc
pop
clc
lods
stos
xchg
psrlw
fmul
push
inc
bound
into
imul
push
ret
pop
inc
arpl
sbb
inc
inc
xchg
loope
hlt
test
data16
mov
lods
lock
lock
ins
or
push
ret
adc
add
jl
sub
jp
(bad)
(bad)
dec
fmul
out
and
jae
jo
jb
inc
sbb
ret
inc
(bad)
push
or
in
cli
lods
mov
inc
add
popa
(bad)
(bad)
div
dec
gs
pop
cmps
sar
daa
push
inc
cdq
aas
adc
aad
fwait
loop
lahf
test
fcom
mov
xchg
cmc
jb
arpl
dec
call
mov
outs
int
xchg
xchg
xor
xchg
jno
(bad)
jp
es
inc
cmps
pop
test
and
pusha
adc
jg
inc
leave
dec
jg
mov
jle
outs
test
adc
pop
div
icebp
sbb
mov
cmc
cmp
rcr
leave
in
push
aad
jp
xlat
push
push
cmps
mov
mov
cmp
les
mov
jmp
dec
xchg
pop
jo
clc
pop
cmps
add
push
and
rol
mov
movs
mov
cmps
jecxz
sar
xchg
pusha
cli
out
cmp
dec
mov
mov
imul
adc
pop
stos
sbb
fisttp
lock
mov
jl
add
mov
jmp
jp
(bad)
std
das
dec
leave
xchg
pop
jmp
(bad)
lods
adc
sbb
(bad)
sbb
fimul
dec
mov
xor
sbb
xlat
xchg
outs
mov
xchg
test
or
ror
cs
jmp
mov
mov
fbld
mov
int3
or
or
pop
sub
xchg
sbb
popa
jl
mov
dec
mov
pop
or
je
adc
mov
retf
popf
aaa
ret
ret
pop
cmp
movs
cdq
or
jg
or
rcl
inc
and
jle
inc
aad
sti
add
iret
xchg
mov
lock
push
jl
inc
adc
fsub
xchg
std
sbb
mov
push
jne
mov
iret
or
or
mov
les
push
xchg
and
pop
scas
sbb
dec
add
cli
std
jl
push
out
es
jnp
and
xor
cmps
mov
sbb
and
mov
lods
mov
inc
ss
xor
cmc
(bad)
jb
imul
jle
or
and
fmul
add
cmp
mov
(bad)
leave
aas
pop
add
aad
ja
jl
adc
imul
inc
ret
adc
aas
jge
fucomp
int3
cld
fisttp
cli
ret
in
mov
icebp
mov
repnz
test
out
mov
jl
sar
popf
and
enter
fld
jmp
clc
push
and
push
fdivr
(bad)
push
fxch
jmp
aaa
je
mov
sbb
pop
fisub
mov
jbe
push
mov
jno
jl
je
fadd
xchg
push
mov
fstp
fild
imul
jmp
sbb
bound
jmp
mov
sar
leave
pop
sti
sbb
xchg
cmp
cwde
test
dec
ret
div
sbb
retf
mov
inc
mov
or
mov
cs
popa
fadd
fild
adc
dec
test
and
xor
mov
adc
iret
xor
fwait
or
pop
hlt
add
sub
fmul
shr
xchg
push
mov
cmc
sbb
in
and
aas
xlat
sub
push
sti
test
push
sbb
(bad)
call
rcl
fisubr
hlt
not
or
xchg
call
add
push
lods
sub
(bad)
es
sbb
sub
push
pop
lods
icebp
mov
pushf
and
dec
jbe
pop
cmc
xor
pop
add
xor
or
cwde
ficomp
mov
pop
jns
jg
dec
cmp
aas
mov
or
mov
push
imul
sub
xchg
sub
stos
add
loop
xlat
pushf
pop
cs
es
icebp
loope
sbb
dec
mov
pop
add
icebp
push
jb
xchg
inc
fcmovb
add
inc
or
stc
adc
dec
add
icebp
or
mov
sbb
iret
cld
ja
dec
dec
outs
gs
adc
mov
pop
mov
imul
mov
add
xchg
(bad)
call
rcr
sbb
lock
not
adc
div
cmp
add
shl
leave
dec
or
inc
cmp
jg
add
and
loop
xor
sti
(bad)
push
and
lods
lods
sbb
push
pop
mov
add
mov
inc
adc
cdq
(bad)
mov
sbb
lea
mov
sub
aaa
mov
add
popf
xlat
pop
leave
jg
jecxz
inc
mov
jmp
test
push
jl
pop
mov
outs
pop
or
cmps
rcl
call
pop
aam
sub
call
rol
or
stc
addr16
stc
pop
cli
jae
xor
xchg
sbb
repnz
inc
pop
int
(bad)
sti
pop
aam
or
sub
ret
xlat
mov
push
lahf
mov
jns
jecxz
adc
mov
pop
cmp
xor
int
test
inc
push
pop
sub
cwde
outs
and
xchg
pop
add
enter
arpl
mov
in
jg
xor
pop
call
in
push
pop
and
cmps
out
or
xor
loopne
cmp
movs
sbb
mov
aad
or
out
pop
and
sete
inc
inc
xchg
mov
or
or
imul
scas
sbb
add
pop
stos
inc
xchg
pop
mov
sub
imul
adc
dec
xor
push
jns
cmp
repz
xor
xchg
cmps
xchg
ret
and
test
xchg
push
fwait
and
or
push
cmp
test
and
jge
cmps
inc
xor
jle
sbb
and
daa
mov
dec
sub
jnp
(bad)
xchg
mov
(bad)
mov
lds
ret
pop
pop
call
(bad)
imul
cmp
mov
int
lods
add
dec
pop
adc
mov
retf
cmp
icebp
shl
or
je
or
dec
adc
mov
ds
push
in
div
mov
fiadd
adc
or
pop
and
and
inc
mov
scas
mov
push
and
aad
cmp
(bad)
xor
fmul
adc
sub
pop
sbb
mov
mov
push
int3
es
call
jle
jge
clc
repz
push
pop
js
out
js
mov
pop
inc
mov
dec
push
mov
mov
dec
sub
std
xlat
or
sub
inc
jo
cli
dec
adc
sub
or
xor
test
cs
mov
pop
aaa
dec
jnp
pop
mov
xor
pop
das
test
fdivr
bound
xchg
inc
mov
sub
in
or
dec
(bad)
sub
inc
out
cmc
stos
(bad)
movs
fwait
sub
push
aam
nop
scas
gs
mov
ins
add
dec
mov
adc
pop
push
jmp
in
xchg
push
pop
adc
mov
xchg
xor
loopne
xchg
jnp
cmp
add
jmp
gs
jecxz
jo
fadd
dec
cli
pusha
jb
(bad)
aam
leave
mov
pusha
iret
mov
xchg
bound
retf
fstp
aam
call
adc
add
outs
dec
inc
pop
cwde
cmps
bound
cs
xor
ficomp
retf
cdq
stos
ss
(bad)
(bad)
popf
daa
pop
mov
repz
imul
repz
stos
mov
xor
dec
stos
(bad)
loopne
mov
xchg
add
pusha
and
lock
cli
pushf
gs
pop
mov
les
jle
dec
add
fwait
sbb
cld
dec
sbb
add
xchg
dec
push
inc
fdivr
or
es
push
popa
or
outs
and
adc
xchg
neg
and
sbb
jmp
xor
inc
cmc
(bad)
aam
fs
out
sbb
push
push
dec
ret
or
push
and
cmp
adc
sub
daa
adc
fnsave
mov
daa
adc
xor
in
lods
mov
jo
push
mov
cdq
push
push
cmp
into
inc
mov
pop
sub
push
or
bound
ror
mov
jae
dec
pop
shl
jp
ins
hlt
push
push
pop
call
test
aam
or
inc
pop
call
sbb
cwde
cmp
pop
mov
cmps
inc
pop
jae
fwait
hlt
jne
xchg
fsubr
cwde
jg
stc
outs
pop
loopne
mov
rcl
pop
push
loope
ficom
jns
xchg
sub
in
ins
retf
call
(bad)
xor
mov
arpl
sub
xchg
push
cdq
jmp
adc
adc
aam
scas
addr16
fcom
popf
mov
add
pusha
cmp
or
call
adc
(bad)
cmp
test
dec
cmp
or
fisttp
mov
lds
adc
retf
jge
sub
add
out
jbe
lods
adc
inc
clc
adc
pusha
mov
push
daa
add
inc
div
adc
scas
inc
mov
jmp
lods
push
dec
push
jmp
movs
or
add
out
(bad)
sbb
mov
and
nop
inc
mov
in
call
push
jge
inc
dec
inc
jne
xor
or
xor
mov
inc
jge
mov
add
lds
aad
xor
jg
xchg
stc
add
in
cmp
jns
xchg
add
push
gs
xchg
jg
test
aaa
cld
jg
popf
and
push
mov
adc
lea
or
out
add
adc
ret
push
movs
mov
mov
ja
jmp
mov
pop
in
jb
lahf
enter
mov
pop
aad
jns
jmp
(bad)
mul
arpl
xchg
loopne
scas
fild
push
fisttp
rcl
leave
inc
into
sbb
add
mov
shr
fst
push
xchg
cmp
adc
rcl
jb
movs
inc
or
dec
loopne
clc
and
mov
outs
pop
cdq
fldcw
sub
fnstsw
dec
not
iret
imul
adc
sbb
imul
jl
call
jns
mov
es
jp
sub
(bad)
mov
loopne
inc
loope
jns
mov
mov
es
jne
nop
das
int3
lea
stos
bound
add
add
dec
jg
imul
cmp
rcl
dec
loop
push
outs
stos
xor
ds
lods
and
into
push
aad
dec
retf
dec
sub
mov
pop
(bad)
push
pop
out
and
dec
sbb
ror
jecxz
jmp
addr16
adc
test
cmp
jecxz
pop
ficomp
inc
or
mov
cmc
std
popf
int3
add
xchg
add
push
sub
sub
cmp
sti
mov
pop
ret
xor
mov
fwait
ins
data16
stos
cmp
scas
stos
adc
arpl
inc
xor
sbb
ret
cmp
dec
loop
inc
adc
stos
or
mov
add
mov
fwait
gs
cmp
adc
mov
jle
add
scas
retf
push
adc
loopne
sub
sub
and
into
cdq
retf
aas
popf
sub
icebp
xor
jb
push
icebp
inc
(bad)
push
int3
pop
adc
adc
cwde
xor
or
fidivr
cmp
scas
add
push
jbe
clc
dec
mov
adc
xor
ror
sub
jae
xchg
xor
jne
sbb
test
xchg
aaa
dec
(bad)
lss
jo
dec
sbb
mov
int3
ss
mov
add
or
pop
fwait
jmp
rcr
in
sub
pop
loopne
aas
push
icebp
je
sub
fxch
mov
pop
fsub
add
inc
adc
cmp
jmp
xor
aas
clc
dec
cmp
adc
xor
int3
inc
jns
fsubr
mov
xchg
(bad)
xlat
test
ficomp
jg
fs
dec
sub
add
cmp
loopne
sub
push
aam
mov
cmp
(bad)
adc
mov
xor
or
div
pop
loope
ja
in
sbb
dec
mov
jb
out
in
xchg
and
je
xchg
mov
mov
push
sub
icebp
ja
leave
xchg
and
call
xchg
pop
cmp
sub
xlat
nop
mov
fdiv
xchg
xchg
adc
mov
pop
cmp
fcmove
push
push
cmp
hlt
xchg
inc
pop
stos
out
fs
stc
iret
sub
aad
add
or
pop
jmp
pop
inc
mov
push
fbstp
and
cld
sbb
jg
inc
xchg
adc
das
stos
dec
ds
mov
dec
dec
cs
add
in
inc
lahf
das
aam
aaa
call
out
lock
adc
mov
hlt
or
ja
dec
cmp
outs
loope
pop
addr16
dec
inc
mov
fnsave
jl
stos
jae
push
dec
aaa
test
jp
push
sbb
mov
xchg
pusha
jns
nop
sahf
adc
xor
in
cmc
lahf
push
push
in
rcr
lds
mov
fcomip
call
cmp
ss
out
fcmovu
mov
ins
mov
adc
push
call
mov
add
adc
shl
cwd
fs
fnstenv
ds
jbe
add
cdq
pop
das
xchg
pop
mov
jmp
xchg
mov
cli
or
aaa
iret
dec
push
mov
push
repz
sbb
add
bswap
jnp
outs
cmp
(bad)
jb
sbb
repz
xchg
fldcw
ret
ds
jnp
sub
xchg
xchg
into
pop
test
out
and
lods
xor
in
cwde
xchg
shl
push
test
push
pop
mov
or
jne
mov
cmp
mov
fistp
ret
pop
mov
mov
pop
inc
mov
push
cmp
in
cmps
inc
xchg
push
mov
neg
daa
adc
xchg
xchg
sub
hlt
ins
sbb
sub
xchg
adc
jmp
sahf
add
jo
hlt
rcl
mov
sub
mov
cmp
aam
pop
(bad)
jmp
mov
sbb
lds
movs
mov
popa
jnp
push
addr16
mov
shr
rol
push
mov
pop
iret
cli
xchg
mov
scas
sbb
pop
pop
jmp
leave
js
mov
and
shl
add
fidiv
or
sahf
jns
shl
loope
pop
dec
xchg
dec
jmp
fisubr
pop
ss
in
inc
bnd
mov
in
jns
out
mov
jl
call
(bad)
test
adc
or
aad
mov
and
adc
xor
sub
xchg
adc
sbb
push
movs
les
mov
mov
retf
fsubr
sahf
sbb
adc
(bad)
sub
rcl
adc
mov
mov
in
dec
xchg
pop
push
sbb
or
sub
add
rcr
sbb
enter
sub
aas
or
or
jmp
out
sbb
(bad)
jg
cmps
hlt
push
nop
fnsave
call
adc
enter
or
xchg
or
push
sub
fidiv
fnsavew
jne
push
pop
jno
mov
test
pop
int3
xchg
pop
and
mov
pop
push
hlt
pop
sbb
icebp
movntq
mov
out
(bad)
xchg
(bad)
stc
stos
mov
cli
push
hlt
sti
sbb
cmps
retf
popa
dec
sar
jl
cs
retf
mov
ja
jg
fstp
adc
shl
inc
stos
xor
repz
aas
data16
es
or
mov
push
fdivr
jnp
mov
cmps
cmps
aad
gs
rol
and
sub
icebp
cmc
mov
out
aas
ss
iret
jbe
fnstsw
mov
imul
xchg
in
imul
leave
pop
fcom
and
push
shr
call
xchg
ja
lahf
xor
sbb
or
mov
out
mov
jmp
cmp
outs
push
std
cwde
mov
stc
cld
aam
call
in
(bad)
std
and
shl
test
(bad)
fxch
sbb
xor
cs
test
outs
lods
cmp
outs
out
sub
lea
push
sub
mov
loopne
leave
pop
pop
popa
and
aaa
add
enter
push
je
sbb
ds
mov
sahf
adc
daa
(bad)
out
push
mov
lds
int
shl
movs
xor
in
ret
cmc
or
add
stos
add
inc
mov
fwait
and
jne
(bad)
aas
fmul
popf
or
inc
mov
xchg
jge
stos
dec
or
test
icebp
std
retf
retf
pop
(bad)
retf
sub
dec
mov
ins
shr
xor
inc
shr
sub
cli
stc
test
adc
test
adc
pop
mov
xor
aas
mov
pop
call
adc
pop
inc
lods
rcr
sbb
push
scas
pusha
mov
jp
das
(bad)
inc
(bad)
into
(bad)
cmp
aaa
pop
adc
push
outs
sub
mov
inc
jns
add
sbb
ds
pusha
inc
jmp
mov
mov
hlt
pop
pop
sahf
cs
test
jge
cmp
dec
fidiv
loope
call
adc
lock
or
jo
sub
lds
movs
fs
sub
sub
and
les
jns
push
push
jmp
and
add
add
imul
and
ja
push
cdq
push
push
inc
dec
dec
fnstsw
mov
(bad)
pop
pop
js
fst
push
inc
inc
je
shl
hlt
inc
cmp
sbb
add
xchg
fcomp
movs
jmp
test
push
xor
pop
nop
ins
and
jmp
sub
adc
push
lods
sub
push
mov
leave
push
or
ror
pop
fdiv
out
daa
mov
adc
mov
adc
rcl
inc
loopne
xchg
jno
inc
mov
(bad)
rcl
jge
ficom
push
(bad)
sti
mov
mov
mov
out
and
repnz
jmp
and
cwde
jo
mov
mov
mov
pushf
pop
retf
neg
addr16
dec
aas
ror
ja
sbb
add
rcl
daa
in
ins
sbb
scas
dec
push
sahf
mov
pop
pushf
mov
sub
push
pop
inc
mov
cmp
jo
sub
pop
mov
mov
cdq
pop
pop
jecxz
sub
pop
and
add
stos
ja
xor
cmps
cmc
jne
pop
push
fisttp
xchg
mov
ret
test
in
pop
lods
inc
and
call
jmp
rol
nop
or
cmp
inc
jae
cmps
jns
jnp
ret
(bad)
push
fcom
stos
push
push
iret
dec
push
ret
mov
(bad)
(bad)
push
sub
adc
out
fmul
inc
or
(bad)
cwde
mov
sti
call
mov
dec
retf
sbb
(bad)
fsubp
into
push
sub
xchg
outs
mov
jb
lods
(bad)
jbe
out
dec
push
add
scas
xchg
(bad)
inc
mov
add
push
pop
out
cmc
ja
fistp
ss
dec
inc
mov
adc
inc
push
or
lods
inc
into
fild
fistp
dec
lods
lock
lea
jmp
cmps
imul
loope
sub
bound
jp
adc
cmp
and
mov
push
(bad)
cmp
jmp
mov
cs
ss
push
cld
ds
fs
stos
push
mov
ss
ror
adc
or
adc
push
sub
ins
int3
dec
fcom
jns
dec
inc
ret
and
xchg
and
mul
ret
mov
mov
xchg
pop
adc
cmp
add
jmp
push
std
jno
xchg
xchg
out
cmp
cmp
out
push
(bad)
cmp
in
mov
sar
shr
sbb
mov
imul
ja
xlat
fisub
fwait
test
sub
enter
sub
push
int3
add
sti
xchg
pop
std
jnp
repnz
in
mov
pop
xor
imul
mov
(bad)
dec
xor
xor
clc
fwait
nop
ficomp
cwde
in
test
sbb
mov
in
or
mov
cmc
pusha
retf
sub
std
add
aas
lock
sub
xor
repz
loop
adc
adc
inc
sub
popf
jno
jo
pushf
mov
xlat
jle
inc
outs
sub
movs
sub
fild
retf
pop
stc
fs
lds
jl
mov
push
lds
cli
ficomp
scas
ficom
xlat
and
pmaxub
ja
pop
pop
jl
loop
pushw
ret
frstor
cmp
dec
sbb
cli
sub
mov
enter
push
movs
stos
int
rcr
in
or
shr
xchg
mov
inc
scas
xchg
mov
in
push
jns
push
loope
jp
call
push
push
in
fimul
and
outs
fisubr
jae
add
lock
sub
stc
mov
stos
mov
aaa
mov
sbb
jmp
cmp
das
push
mov
inc
cmp
lods
mov
push
les
and
cmc
mov
and
sub
add
pop
movs
mov
pop
in
sti
dec
cmps
in
ror
daa
(bad)
(bad)
(bad)
pop
ins
(bad)
adc
and
lods
loope
jbe
mov
jge
nop
mov
std
pop
add
dec
xchg
dec
fldln2
inc
mov
cmp
in
cmps
idiv
cld
call
vsubps
pop
fcomp
sti
sbb
sub
and
mov
pop
shr
adc
test
xor
push
pop
or
push
fst
repz
and
push
cmps
out
push
pop
pop
inc
nop
btr
pop
aas
nop
xor
(bad)
cmp
or
sub
ficomp
sub
pop
adc
add
bound
out
cmps
xor
mov
pop
push
sub
sbb
push
mov
test
pop
adc
test
jge
das
adc
xchg
data16
imul
addr16
das
or
lahf
stos
mov
pop
idiv
arpl
aas
pop
int
mov
stos
fisub
cmp
push
(bad)
repnz
add
pop
and
sbb
fstp
rcl
mov
and
out
in
jp
pushf
sub
lahf
pop
js
cmp
xchg
mov
ror
outs
icebp
mov
inc
xchg
or
outs
xor
fnstsw
xchg
rcr
repnz
mov
test
je
jns
sub
cmp
and
ins
test
jne
cmp
sar
scas
js
test
sbb
or
iret
push
inc
fsubr
daa
push
iret
cmp
not
sbb
jl
cmp
jbe
cmc
mov
imul
ret
add
cmp
jo
pop
lea
arpl
cmp
out
mov
movs
pop
enter
inc
mov
sub
and
hlt
inc
sub
dec
jmp
popf
pusha
xchg
aas
push
pop
das
or
ror
test
ficom
mov
push
cli
stos
add
jnp
mov
mov
(bad)
cmp
std
rcl
call
mov
mov
clc
lds
(bad)
mov
test
and
inc
and
cmp
jbe
clc
rol
or
call
jp
cmc
xor
mov
xchg
mov
iret
add
mov
ret
jp
shl
out
sub
mov
add
enter
or
sub
shl
dec
fcomp
push
cmp
pop
stos
out
les
cmp
dec
cwde
push
fnsave
add
nop
cli
xchg
sbb
test
inc
dec
ret
cmp
and
cli
mov
mov
fucom
add
push
or
das
int
xchg
pop
retf
and
std
and
add
adc
jp
adc
adc
ins
jmp
movs
and
mov
stos
lods
pop
jbe
or
pop
into
inc
jo
jnp
int3
outs
push
fcom
jne
test
in
addr16
retf
in
fsubr
mov
leave
in
jle
cmp
push
es
rcr
fldcw
(bad)
xchg
cmc
fild
retf
dec
jp
fwait
into
jg
outs
and
and
cmp
inc
or
fisttp
add
popa
test
adc
xor
xchg
rcl
xor
jbe
in
pushf
push
cwde
int
push
cwde
outs
fwait
mov
xchg
ins
mov
cmc
aam
xchg
mov
ja
xor
into
in
push
inc
jmp
add
mov
inc
or
push
mov
mov
push
cmp
mov
je
inc
das
push
xchg
in
gs
(bad)
cmps
xchg
ret
rol
sub
pop
retf
mov
ficom
push
hlt
and
leave
sub
inc
gs
add
popf
pop
add
retf
pop
jmp
iret
cmps
shl
lods
leave
adc
shl
gs
jnp
out
adc
repnz
push
or
push
mov
adc
js
mov
xor
jmp
xchg
mov
and
inc
or
fucomi
clc
and
ret
in
adc
rol
xlat
movs
jmp
mov
aad
bound
push
out
icebp
popa
pusha
pop
in
shl
or
dec
lods
fst
mov
in
dec
scas
pop
jl
(bad)
ja
scas
dec
adc
fwait
arpl
sub
jge
icebp
addr16
imul
xchg
dec
stc
add
and
int
dec
cmp
mov
mov
xor
jbe
and
fiadd
loopne
xchg
movs
cmps
mov
or
jnp
outs
arpl
push
out
sahf
loop
aas
or
xor
mov
nop
dec
cwde
mov
and
(bad)
shl
dec
test
xlat
and
sbb
iret
jl
sysenter
add
lahf
mov
sahf
fidiv
xor
mov
or
add
loopne
dec
test
sub
sbb
lea
xchg
mov
shl
jbe
push
or
aaa
out
pop
cs
push
push
fstp
aaa
mov
or
jo
xor
mov
adc
or
(bad)
popf
(bad)
push
jae
stos
or
sbb
fs
hlt
mov
cmp
popf
mov
push
repnz
aaa
push
lahf
rcr
mov
sbb
in
dec
sbb
int3
out
sub
dec
xchg
call
sub
push
iret
in
ss
inc
jne
dec
push
sub
xchg
adc
pop
cmps
shl
mov
call
repnz
(bad)
and
jecxz
dec
pusha
or
jle
xor
ud0
(bad)
jo
jb
pop
mov
or
or
pop
xchg
add
cmp
sub
mov
mov
add
xor
sbb
inc
lods
lods
ret
pop
pusha
test
jge
das
jo
rol
pop
arpl
mov
push
inc
and
hlt
pop
(bad)
vmovupd
mov
xor
inc
dec
mov
pop
movs
cmc
sbb
into
push
inc
jae
out
test
arpl
mov
fiadd
shl
cmps
inc
nop
lahf
adc
scas
pop
loope
jmp
inc
mov
cmps
into
mov
inc
jge
popa
sub
outs
inc
push
pop
(bad)
ror
mov
rol
inc
pushf
(bad)
ret
or
bound
jmp
cmp
pop
daa
fdivr
fdiv
inc
scas
and
push
jmp
nop
mov
add
repz
push
mov
or
pmullw
arpl
jnp
mov
cmp
push
cmp
or
mov
mov
mov
shrd
mul
dec
ins
aam
mov
push
xchg
sub
and
inc
or
sbb
mov
ins
sbb
push
cmp
or
movs
loopne
pop
(bad)
inc
mov
xchg
mov
dec
sub
into
call
cmp
add
and
cmp
bound
inc
aas
lods
test
in
xor
dec
and
jnp
daa
ja
fmul
repz
xchg
mov
test
rcr
and
xor
mov
ins
push
imul
int
jno
xchg
and
cmps
loopne
adc
hlt
xchg
and
jo
or
mov
in
ss
dec
lea
out
or
sbb
xchg
xchg
fs
mov
adc
push
and
inc
jb
out
sti
nop
jno
push
sub
sub
sub
(bad)
adc
pushf
shr
ds
xlat
jmp
mov
fild
pop
call
stos
jnp
sub
jecxz
adc
into
je
mov
mov
daa
test
inc
es
(bad)
(bad)
or
cmp
push
(bad)
iret
das
adc
cmp
pop
cld
les
imul
stc
pop
or
jno
retf
repz
adc
clc
add
push
push
sub
call
add
xchg
mov
lahf
inc
xchg
mov
mov
aas
sbb
pop
rol
mov
(bad)
push
mov
(bad)
jns
(bad)
dec
push
stos
dec
retf
aam
or
jp
mov
mov
sbb
xchg
xchg
aam
inc
or
fcmovnbe
cmp
adc
xchg
std
cmp
jle
lds
out
jae
sub
sbb
xor
xor
scas
movs
dec
or
les
add
(bad)
jmp
sti
sub
mov
mov
inc
mov
xor
xchg
mov
call
dec
ja
and
and
shr
lahf
jb
movs
inc
fbstp
sub
fucomp
add
cwde
add
cwde
popa
pop
dec
arpl
xor
in
push
inc
xor
or
dec
adc
sbb
xor
dec
and
fcomp
xchg
push
out
(bad)
js
jnp
imul
lock
pop
ret
fstp
mov
stos
ja
xor
test
nop
mov
mov
imul
push
arpl
jmp
ds
loop
and
xchg
dec
xchg
shl
(bad)
or
pop
jmp
mov
cmp
ins
lock
outs
mov
xlat
mov
test
ret
dec
push
sub
add
jmp
cmp
loop
xor
test
cmps
and
nop
or
sbb
jmp
cmps
cmp
fs
dec
push
loope
mov
shr
das
daa
push
cmp
loope
jmp
push
mov
xchg
xchg
add
rcl
lea
leave
xor
add
not
idiv
mov
retf
add
push
nop
bound
pop
imul
dec
out
cmp
jns
pushf
adc
es
movs
push
or
rol
jge
repnz
xor
and
(bad)
popa
push
ds
out
(bad)
jge
inc
sub
sbb
push
in
test
xor
pop
mov
jle
dec
sbb
mov
lods
fstp
sbb
push
imul
aas
jmp
xor
jns
push
xchg
add
out
fsub
sbb
loope
sbb
and
stos
mov
repnz
jge
mov
inc
pop
or
lahf
inc
mov
and
popf
xchg
cmp
ret
cwde
jl
mov
and
cmps
fistp
mov
mov
mov
mov
cli
cmp
stos
mov
mov
jns
mov
out
push
xchg
inc
sub
push
call
sub
cmp
outs
push
popf
dec
sbb
sahf
pop
mov
inc
lods
mov
inc
js
xor
repnz
shr
(bad)
js
sar
pop
das
test
pop
mov
int3
bound
add
cdq
pop
jne
sub
adc
xor
repnz
inc
mov
sub
clc
mov
cli
fidivr
aaa
adc
adc
dec
mov
lahf
xchg
jmp
mov
(bad)
loop
push
pop
int3
sbb
ss
(bad)
arpl
push
or
cdq
sbb
push
add
jmp
mov
inc
fstp
jge
or
fsub
xchg
jne
fs
fwait
cmp
inc
push
nop
(bad)
and
out
pusha
nop
data16
or
mov
xor
or
outs
mov
pop
jns
add
loopne
or
push
inc
and
cmps
js
aad
adc
cli
mov
jae
imul
add
add
mov
sbb
add
dec
dec
dec
cdq
jmp
aad
sbb
in
dec
das
push
cmp
pusha
das
iret
stc
lds
sysret
jbe
mov
outs
xor
mov
scas
popf
(bad)
sub
jl
push
sub
aam
mov
lahf
sbb
lds
pop
and
adc
call
popa
mov
mov
and
inc
push
je
repnz
out
in
and
retf
jb
add
cmp
jmp
or
cmp
mov
pop
push
add
xchg
daa
dec
pop
pop
inc
ds
mov
xor
out
xchg
repnz
imul
dec
fst
sbb
sub
iret
inc
mov
dec
xchg
aad
rol
fidivr
dec
cmp
aad
std
movs
dec
aaa
retf
ret
sub
inc
lea
dec
lods
lods
xchg
mov
add
cmp
push
mov
iret
adc
or
aas
ror
cmp
sbb
loopne
mov
pop
cmp
mov
(bad)
shl
test
xor
nop
mov
pop
or
sar
pop
mov
ins
enter
imul
loop
fwait
sbb
xor
and
mov
push
neg
sbb
sbb
and
jecxz
sbb
push
pop
jl
sbb
ss
cmp
mov
push
adc
jecxz
pop
ins
stos
fsub
call
dec
jo
fst
sti
ret
mov
xor
mov
add
push
fisubr
inc
dec
aam
in
loopne
xlat
mov
leave
mov
push
dec
(bad)
push
and
and
cld
inc
inc
fs
adc
cmc
inc
cmp
push
loope
mov
and
fmul
mov
sub
mov
jge
lods
jns
jno
mov
mov
out
adc
and
cmps
inc
add
fwait
xor
pop
sbb
pushf
pop
aam
xchg
push
rol
xchg
pusha
ficomp
or
pop
push
push
add
xchg
mov
or
out
lds
mov
mov
pushf
lahf
sub
sbb
mov
sar
jns
or
and
lahf
and
ret
or
cdq
inc
les
arpl
mov
aam
dec
mov
out
dec
rcr
mov
(bad)
jne
enter
stos
outs
cmp
and
lock
mov
lahf
sbb
inc
mov
push
inc
xchg
outs
inc
dec
mov
mov
loopne
(bad)
lds
aam
or
fistp
(bad)
adc
xchg
(bad)
push
mov
and
in
fwait
shl
xor
jmp
dec
in
(bad)
retf
imul
repnz
fnstcw
clc
repz
mov
cmp
jnp
repz
adc
adc
adc
lds
js
push
push
push
es
pop
scas
fcmovnu
dec
lods
and
ret
rcl
jnp
ins
test
mov
call
out
mov
in
cmp
push
addr16
js
cmc
out
std
add
push
js
add
std
mov
scas
inc
inc
pop
cmp
xchg
repz
mov
lods
in
shr
pop
mov
int3
arpl
loopne
dec
cwde
mov
mov
push
imul
push
mov
ja
dec
and
jnp
rcr
inc
pop
sbb
test
in
ds
sub
xchg
add
in
pusha
or
retf
sbb
jnp
or
je
dec
les
shl
movs
rcl
mov
pop
pop
adc
(bad)
push
outs
leave
movs
mov
sub
dec
arpl
inc
adc
cmc
jge
(bad)
stos
dec
adc
adc
lea
out
mov
cmps
stc
fwait
xor
test
sti
and
mov
jnp
xchg
(bad)
out
cmc
outs
push
addr16
in
mov
lods
mov
push
mov
test
rol
leave
xchg
sbb
fnstsw
sub
(bad)
xchg
push
(bad)
shr
pop
pushf
pop
inc
icebp
sti
fcmovu
sahf
xchg
loop
or
and
fbld
fstp
xchg
retf
dec
ret
(bad)
xor
xchg
cdq
retf
jbe
sub
iret
adc
bound
jmp
sti
mov
(bad)
sub
(bad)
push
push
paddw
xchg
sub
int
push
lods
jo
add
arpl
mov
cmp
imul
aas
jl
jle
or
adc
xchg
mov
inc
mov
call
xchg
pop
repnz
not
cmp
sbb
inc
dec
and
ins
ins
dec
pop
or
xor
fiadd
mov
mov
push
xchg
xchg
cmc
out
mov
adc
xacquire
test
jb
dec
test
add
dec
xchg
inc
add
ss
ret
add
das
push
shl
mov
fs
push
(bad)
repnz
xchg
push
sbb
pop
pop
add
enter
jmp
sub
inc
and
push
add
add
jae
jmp
nop
rol
jle
dec
out
test
call
pop
or
mov
loopne
shl
pusha
outs
xchg
pop
ja
fisttp
mov
pusha
jmp
das
cmc
mov
mov
pop
mov
retf
or
test
sbb
mov
test
fisubr
or
out
js
(bad)
xor
dec
in
xor
and
mov
pop
and
mov
push
int
add
xor
jl
call
gs
popf
(bad)
jp
shl
xchg
js
ins
dec
mov
cmp
mov
pop
jle
xchg
push
sbb
or
mov
mov
sub
das
adc
loope
stos
xor
pslld
fisttp
push
jae
xchg
out
dec
jmp
rol
js
pop
pop
sub
int
addr16
in
mov
push
mov
push
pop
or
sub
mov
fs
daa
jno
sub
cmp
pop
mov
ror
mov
repz
jecxz
aaa
(bad)
mov
leave
jle
pop
add
sar
jl
cmps
(bad)
or
push
ds
jg
fidiv
call
adc
push
add
inc
in
mov
pop
sub
into
mov
mov
into
movs
xchg
je
mov
jecxz
xchg
in
aam
jbe
xor
(bad)
pop
mov
test
jnp
jne
pop
dec
jp
mov
sbb
data16
movs
fstp
rcl
pop
or
xchg
daa
out
aad
pop
ret
add
push
test
xor
stos
cmp
mov
jge
inc
pusha
push
enter
and
adc
jbe
xlat
cmps
mov
inc
mov
mov
gs
pop
dec
fist
inc
add
jge
sub
inc
dec
or
pop
mov
or
jae
retf
sbb
mov
int3
push
addr16
inc
jb
loope
jo
dec
and
outs
lock
out
(bad)
std
push
call
popa
pop
in
mov
es
out
aad
inc
dec
cdq
dec
stos
fwait
mov
jns
mov
inc
push
dec
idiv
div
mov
and
dec
in
into
mov
adc
(bad)
sbb
shr
mov
fldcw
es
or
faddp
or
aas
adc
(bad)
pusha
mov
loopne
pop
mov
(bad)
adc
add
jae
sub
mov
out
imul
or
cmps
cs
dec
aaa
out
mov
and
push
shr
cld
je
dec
xchg
inc
ds
mov
aam
sahf
pop
jg
or
out
and
push
std
out
movs
adc
test
les
cmp
test
or
inc
adc
(bad)
jnp
mov
cmp
shl
adc
mov
push
cmp
and
xlat
xchg
aad
or
xlat
(bad)
xchg
adc
mov
push
push
test
test
inc
xor
addr16
jp
inc
cmp
rcr
and
rol
xchg
sub
push
inc
lods
xchg
xor
jo
pop
cli
cmp
jae
je
mov
les
add
mov
mov
call
ret
in
dec
pop
mov
rol
inc
add
adc
xchg
xchg
mov
push
add
sub
in
sbb
fldenv
loopne
xchg
cmp
xchg
pop
hlt
cmp
jbe
add
scas
dec
jno
pop
jp
or
dec
dec
lods
push
jno
sub
xlat
outs
cmp
sbb
dec
or
pop
(bad)
jge
or
or
loopne
inc
fdiv
ins
scas
cld
repnz
loope
adc
dec
dec
enter
js
push
retf
fs
test
ffreep
popf
repnz
addr16
enter
pop
outs
(bad)
xlat
mov
lods
cmps
dec
fistp
pop
int
icebp
fld
lahf
sti
ins
sub
je
int
sbb
pushf
xchg
add
inc
out
fisttp
test
cs
mov
mov
push
movs
pop
stc
push
mov
loope
dec
bound
mov
jecxz
call
clc
inc
add
sub
leave
aad
jle
and
pusha
jp
pop
mov
dec
cmp
push
mov
cmp
rcl
loopne
adc
mov
nop
pusha
js
test
pop
in
pushf
jns
adc
test
mov
test
adc
adc
jo
mov
js
push
pusha
imul
inc
mov
mov
or
rcr
ins
jno
jle
retf
dec
mov
push
or
rcl
inc
adc
sub
xchg
cmc
pushf
mov
push
push
or
jl
jl
pop
int
movs
or
xchg
lahf
imul
test
stos
lods
cmp
jne
and
loop
mov
les
pop
mov
(bad)
jno
int
fdivr
lock
pop
in
mov
fmul
(bad)
xlat
inc
sti
mov
aam
xchg
ret
in
dec
in
inc
ror
ficom
mov
addr16
rcr
push
fistp
dec
mov
mov
lods
js
cld
in
jp
inc
dec
loopne
clc
daa
and
xchg
ret
push
fadd
aaa
mov
add
xor
mov
jns
xor
inc
in
cmps
mov
cmp
jmp
retf
pop
inc
popf
mov
cmp
ins
mov
sub
movs
sahf
jmp
outs
adc
push
imul
into
xor
jle
jno
imul
in
pop
mov
in
mov
ja
inc
inc
inc
mov
retf
add
mov
mov
inc
inc
add
pop
xchg
dec
outs
stc
cmps
fcomp
push
fiadd
test
pop
bound
cmc
or
push
push
popf
enter
sub
stos
lods
neg
jmp
repz
ret
cmp
gs
aam
dec
mov
and
add
xchg
pop
les
jmp
sbb
sbb
inc
sbb
jecxz
jp
iret
and
scas
pusha
mov
jmp
sub
jg
les
(bad)
jmp
call
iret
retf
arpl
jbe
inc
repnz
jno
jne
push
rcr
mov
inc
aas
not
por
fadd
mov
mov
xchg
or
ja
hlt
cmp
add
and
add
movs
pop
mov
push
leave
adc
mov
jecxz
jmp
imul
pop
pop
call
xor
xor
sub
movs
je
xchg
push
mov
inc
dec
out
retf
cld
lea
jp
xchg
xchg
(bad)
mov
push
ss
lods
dec
mul
ror
jne
push
enter
or
fdiv
sub
push
xor
mov
pop
sub
std
ret
mov
addr16
stos
hlt
icebp
shr
mov
call
fsub
sbb
test
aas
xchg
jno
inc
dec
sbb
jl
lock
jbe
inc
imul
mov
in
test
add
jle
leave
in
push
out
and
sbb
stos
cmp
xchg
aam
sub
(bad)
sbb
sub
push
add
stos
xchg
lods
pop
or
loop
fld
jns
adc
out
sub
lock
sbb
mov
mov
add
int3
mov
dec
test
pop
cmp
xor
jecxz
call
dec
(bad)
pusha
pop
pop
pop
and
enter
or
test
dec
push
jle
push
xchg
sub
and
xor
adc
push
inc
mov
ins
push
sbb
aaa
lock
jle
and
mov
lods
pop
jmp
adc
xchg
das
sbb
fimul
or
loopne
not
movs
pop
ja
jb
test
jmp
loopne
xor
(bad)
cmp
dec
xor
les
arpl
les
dec
mov
aas
bound
push
jb
addr16
or
cmps
mov
push
pop
ins
add
mov
sub
mov
or
dec
xchg
lahf
dec
or
adc
pop
and
pop
in
fs
mov
dec
xor
(bad)
icebp
popfw
adc
imul
cmp
cwde
test
inc
adc
add
in
and
fs
pop
and
shl
or
adc
sub
sar
jle
xlat
out
pop
or
lahf
dec
jb
daa
leave
sub
test
add
(bad)
cmp
ins
add
lods
sbb
pop
jbe
es
mov
daa
sub
cdq
push
mov
inc
sbb
ss
ret
test
ds
lods
jbe
xchg
and
sbb
mov
or
sbb
outs
call
push
inc
cs
or
inc
stc
xchg
retf
hlt
out
xor
pop
cmp
movlps
cmp
loop
push
stc
dec
test
inc
ror
mov
sbb
jnp
repz
cmp
cli
jns
js
inc
cld
xchg
mov
(bad)
sbb
out
pop
jecxz
mov
cs
and
or
inc
mov
xchg
in
add
test
test
sahf
adc
jns
push
pop
pop
add
and
sub
cmp
pop
fiadd
arpl
cdq
push
out
out
adc
cmp
(bad)
jg
out
data16
int
ret
and
dec
sbb
add
in
lods
push
mov
jmp
popf
out
cmp
mov
movs
xlat
ja
div
arpl
fdivrp
jle
pushf
cmps
sahf
pop
inc
xchg
bound
push
(bad)
jnp
pop
mov
dec
cmps
sub
push
and
dec
cdq
inc
adc
movs
sbb
std
hlt
sub
cmp
shl
mov
pop
rcr
test
hlt
jo
xchg
popf
cmp
loopne
pop
sub
mov
lds
add
adc
fucomip
daa
fsub
test
mov
in
push
jge
ins
mov
fnsave
cmp
push
mov
es
mov
jle
in
mov
and
add
frstor
dec
ror
jns
adc
mov
push
or
in
xchg
push
lods
aad
das
mov
or
loope
fstp
cmp
scas
xchg
pushf
jb
mov
inc
lea
add
fwait
in
inc
imul
adc
adc
cmps
shr
push
iret
(bad)
fadd
test
sub
retf
lea
imul
pushf
xlat
cmp
stos
sar
mov
sub
mov
sbb
add
push
fdiv
div
movs
ret
mov
leave
sub
inc
dec
dec
shr
(bad)
call
call
out
lea
sbb
ss
lahf
jb
popa
test
jae
push
leave
push
mov
bswap
ror
add
adc
and
out
outs
pop
dec
lds
adc
dec
mov
and
leave
dec
mov
cmc
adc
pop
stos
jmp
sbb
outs
aaa
test
out
mov
pop
pop
rcr
dec
sbb
test
outs
pushf
or
adc
(bad)
cld
in
xor
fdiv
sbb
push
popf
xlat
push
or
cmps
dec
js
stc
push
aad
jecxz
xchg
outs
nop
enter
dec
and
pusha
icebp
xor
fsub
xor
sar
or
into
nop
out
data16
addr16
ins
(bad)
shl
call
mul
js
dec
inc
mov
es
pop
(bad)
mov
xor
repz
punpcklbw
push
push
pushf
cmp
mov
cmp
add
or
lahf
or
mov
and
push
and
imul
sbb
adc
xor
repnz
retf
sbb
push
loope
cmp
out
out
add
fisub
stc
inc
dec
sbb
leave
mov
inc
shl
dec
push
js
outs
js
xor
adc
add
(bad)
push
pop
adc
shr
mov
pusha
test
mov
(bad)
jno
inc
lds
jg
xor
sbb
aas
dec
push
int3
push
jp
pop
jl
cmp
inc
ins
int
cmp
jmp
dec
push
xchg
mov
in
imul
pop
outs
jns
mov
addr16
xchg
jnp
xor
scas
stos
push
or
imul
pop
cmps
rcl
cmc
dec
test
dec
xchg
jmp
loopne
push
dec
out
adc
dec
xor
cdq
push
add
ins
(bad)
fsubr
cwde
mov
xor
popa
popf
cmc
pusha
stc
stc
mov
push
dec
test
test
sbb
mov
mov
(bad)
jmp
loopne
test
loop
data16
iret
call
dec
mov
cld
into
fcomi
loope
cs
mov
sbb
lods
ja
dec
iret
or
sub
(bad)
retf
push
mov
arpl
div
outs
xor
inc
nop
xchg
mov
dec
out
clc
pop
or
lahf
mov
sub
outs
shl
cmp
sub
sar
(bad)
ror
fdivr
into
aad
mov
jb
test
sub
ret
adc
lods
adc
popf
inc
mov
sub
repnz
fld
rol
in
out
xchg
add
xlat
push
loop
je
rcr
outs
xchg
sub
adc
ins
cmp
sub
xchg
jmp
call
imul
rcl
imul
(bad)
xor
push
nop
push
jb
mov
sbb
and
mov
cmps
loope
lock
inc
aaa
or
push
adc
jp
dec
mov
jl
jbe
das
mov
mov
xor
mov
sbb
xor
mov
or
pusha
shl
mov
mov
aam
or
push
inc
stos
(bad)
cmp
popa
test
push
mov
aas
mov
mov
push
jg
xchg
mov
mov
add
inc
test
fiadd
pop
jb
ds
inc
dec
or
sub
cmp
adc
mov
pop
test
fs
xor
sti
retf
cmps
mov
mov
mov
(bad)
sub
fs
test
add
mov
fild
ja
int3
icebp
aas
add
push
xor
retf
imul
out
cmp
out
test
dec
mov
and
out
sub
fild
dec
adc
ret
sti
jno
pusha
mov
mov
(bad)
(bad)
(bad)
lahf
jg
xchg
mov
mov
retf
jmp
mov
mov
xchg
mov
and
out
pop
ds
sub
jl
movs
xchg
pop
inc
mov
(bad)
lods
fist
scas
out
adc
cwde
sub
mov
dec
jae
push
mov
clc
int
fistp
lds
fwait
leave
mov
ja
fstp
jle
cdq
mov
dec
fs
mov
aaa
cmp
jb
out
push
push
pop
push
mov
popf
test
add
sti
icebp
movs
push
aad
dec
push
inc
call
xchg
jno
(bad)
out
mov
dec
rcr
xchg
inc
jae
cs
push
dec
pop
jle
mov
dec
pop
pushf
jmp
imul
push
sub
sub
fwait
movs
nop
in
jp
je
dec
test
cmp
and
xchg
inc
mov
pushf
call
mul
cld
xor
fwait
xor
fadd
pop
push
sub
ficom
stc
mov
scas
movs
stos
jle
jbe
xor
jns
sar
adc
aaa
cmp
xchg
mov
sbb
lahf
ror
pop
ret
mov
inc
sbb
or
pop
mov
cmp
pop
je
scas
fdiv
xchg
test
pop
add
pushf
or
xchg
test
test
jnp
mov
je
adc
ret
mov
push
hlt
mov
lahf
arpl
stc
sub
shl
and
movs
and
mov
mov
jo
dec
pop
out
jno
pop
sub
dec
ret
mov
inc
mov
add
cmp
std
pusha
xchg
popa
mov
pop
out
cld
push
dec
aas
gs
into
jae
xlat
cmp
sti
adc
enter
pusha
ds
arpl
pop
in
gs
mov
sbb
outs
jmp
mov
inc
push
lahf
(bad)
fdiv
je
push
imul
jns
push
(bad)
jbe
sar
cdq
pop
cli
int3
mov
cmp
lods
jno
sbb
cmp
ret
sub
mov
fnstsw
mov
ret
movs
dec
push
in
repz
inc
push
retw
xlat
xor
mov
xchg
loope
jg
stc
in
jae
popf
test
ret
and
dec
bnd
or
pusha
mov
retf
xor
mov
mov
pop
sub
cmp
pop
jmp
pop
cmps
jmp
in
div
ds
xlat
jns
vmovsd
pop
mov
shl
scas
shr
cmp
push
mov
stos
cmp
mov
mov
daa
dec
std
cmp
add
push
iret
ja
in
stos
sub
sbb
push
push
jge
and
scas
test
(bad)
cmc
mov
xchg
mov
or
and
jo
mov
ins
push
add
repz
or
mov
ja
movs
sbb
or
bound
pusha
jg
outs
mov
retf
(bad)
xor
(bad)
mov
rcl
call
dec
cmc
mov
retf
inc
xlat
pop
xor
pop
inc
mov
hlt
push
cwde
xor
or
dec
mov
jp
icebp
int3
lods
sahf
test
push
sbb
sar
mov
mov
pop
nop
jb
mov
(bad)
dec
mov
fistp
fisttp
cld
jno
or
inc
bt
jbe
js
pop
imul
or
out
pop
leave
or
mov
outs
push
loop
shl
sbb
mov
fsub
sar
push
xchg
xchg
jnp
icebp
mov
cmp
and
scas
inc
cmp
push
js
sbb
out
jmp
test
jge
xor
jo
inc
sub
xor
(bad)
addr16
(bad)
(bad)
cmps
push
add
rcl
sbb
fstp
jno
into
popa
cli
and
sub
jge
and
jbe
sub
mov
out
cmps
xchg
mov
fstp
idiv
mov
cmp
test
loopne
mov
scas
shr
popf
mov
test
in
mov
xor
cmc
out
xchg
int3
outs
js
xor
hlt
mov
inc
imul
cmp
add
cld
or
test
dec
dec
jb
and
(bad)
mov
test
jae
jecxz
inc
bound
jge
sub
fldlg2
repnz
inc
dec
push
dec
adc
mov
outs
pop
aas
inc
mov
mov
or
aas
mov
addr16
dec
cmc
or
mov
ror
adc
push
sub
scas
inc
jae
movs
cmp
nop
out
jmp
call
cmp
popa
loopne
arpl
and
pop
repz
lahf
and
mov
fs
sub
dec
adc
inc
sub
dec
stos
xchg
xor
xchg
lsl
add
xor
nop
pop
cmp
push
add
cmps
xchg
sbb
adc
outs
aaa
push
mov
mov
int
pop
jne
leave
push
ins
add
shl
cmps
mov
or
ja
xor
mov
fnstenv
xor
cs
movs
imul
aaa
push
inc
fbld
jns
daa
mov
sti
xor
mov
xor
push
xchg
loop
xor
and
add
pop
xlat
call
pop
lahf
sub
jnp
fidiv
and
dec
and
sub
data16
data16
or
and
dec
xchg
mov
call
dec
arpl
pushf
outs
nop
adc
and
xchg
ins
sub
loopne
sub
ins
ja
popf
xchg
aaa
bound
and
or
jp
stos
push
and
mov
pop
dec
imul
jno
jmp
imul
xchg
jmp
cmp
mov
cs
clc
pop
xchg
lahf
mov
pop
xchg
pop
adc
in
and
inc
scas
mov
(bad)
ds
push
pop
in
test
jno
sub
or
sub
in
aad
movs
mov
xor
stos
loopne
clc
sbb
jl
iret
cwde
xchg
jle
scas
adc
cmp
inc
xchg
sub
or
inc
pop
pop
fnstenv
jl
xor
cmp
mov
ins
and
shl
sar
movs
push
into
aaa
clc
sub
pop
xor
sub
movs
cmps
sahf
or
lods
mov
xor
jecxz
cmc
mov
icebp
mov
xor
fwait
pop
mov
jb
shl
out
push
xchg
inc
fsubr
std
sbb
jne
mov
xor
adc
push
mov
jnp
ror
(bad)
dec
stos
mov
movs
adc
push
in
mov
ffreep
jo
adc
gs
dec
dec
jb
xchg
jne
inc
les
and
cmps
pop
ficomp
fwait
cmp
stos
out
sbb
cmp
int3
aad
rol
xchg
addr16
imul
jp
cmp
xor
iret
icebp
mov
jo
xor
bt
push
popa
out
xchg
fs
movs
in
mov
sub
xor
jg
sub
xor
dec
and
jle
push
ins
nop
mov
jne
add
jg
jle
dec
add
mov
push
or
stc
mov
push
jbe
rol
dec
push
cmp
pop
stos
out
shl
iret
jp
xchg
inc
push
sar
mov
cmp
push
jle
mov
xor
retf
inc
cmp
(bad)
out
and
dec
aaa
retf
dec
xor
push
sbb
dec
pop
imul
rcl
test
add
arpl
mov
push
mov
jno
inc
or
jae
(bad)
jnp
jb
mov
mov
adc
mov
aad
mov
pop
cmp
icebp
(bad)
jp
das
xlat
push
stc
(bad)
xor
push
jecxz
popf
lods
adc
les
adc
or
ss
adc
pop
lods
call
jno
push
call
mov
iret
push
pop
mov
pop
cmp
mov
cld
fs
pop
fsubr
ja
rcr
mov
push
popa
and
mov
and
and
mov
mov
jge
jge
pop
call
lods
int
push
sbb
pop
push
iret
xchg
lock
mov
lock
cdq
iret
fcom
scas
push
mov
imul
xor
dec
mov
bound
data16
bound
cmp
push
ds
loop
stc
sbb
cwde
mov
dec
ins
inc
test
ins
cmp
pop
es
and
bound
mov
xor
or
inc
add
xor
jns
or
xchg
cmp
cs
inc
movs
scas
ins
adc
(bad)
iret
ins
in
hlt
fmul
mov
jl
cwde
xor
sbb
retf
shl
cmp
xor
mov
hlt
aaa
ret
jno
sbb
adc
mov
in
adc
int3
ror
xchg
ins
add
sbb
mov
stos
test
fs
call
or
or
ds
inc
xchg
push
xlat
pop
iret
test
and
adc
xchg
mov
pushf
enter
xor
mov
test
movs
(bad)
das
mov
fadd
in
and
(bad)
jle
sbb
cmp
inc
sar
adc
addr16
daa
pop
ret
xor
int3
das
test
sbb
cwde
mov
adc
push
pushf
popf
push
sbb
and
pop
ins
fdivr
pop
dec
in
pop
les
test
mov
hlt
call
in
vmwrite
jnp
inc
test
out
sbb
call
sub
in
stos
test
pop
mov
push
sub
out
fnsave
pop
and
fst
ja
in
jmp
mov
js
ret
add
pushf
es
xchg
xor
addr16
(bad)
pop
fldcw
aaa
dec
jnp
or
pusha
and
lock
call
out
sub
ins
add
xor
push
stos
mov
sar
mov
jo
shl
xor
dec
xchg
cmc
out
jbe
test
pop
lods
js
out
repz
jmp
repz
push
enter
clc
call
test
push
inc
pop
in
or
xor
pushf
pop
repz
sbb
lahf
xlat
mov
data16
jl
test
jecxz
mov
out
popf
das
sbb
inc
jae
dec
push
out
mov
out
push
cmp
lods
sub
jns
lds
ss
scas
adc
outs
mov
movs
sub
ds
xlat
xor
add
push
rol
sbb
pop
push
scas
or
xchg
mov
xlat
iret
xchg
cmp
xchg
mov
out
call
dec
mov
arpl
mov
aaa
jns
(bad)
inc
rcl
or
loope
sub
repnz
test
dec
loopne
repnz
xchg
mov
sbb
stc
adc
add
pop
jmp
movs
dec
(bad)
into
std
mov
in
mov
adc
mov
add
rol
fcomp
sbb
jmp
jge
xlat
mov
cmp
cmp
in
adc
shl
mov
popf
in
jb
mul
xor
pop
sar
push
div
push
mov
push
pop
xor
xchg
shr
in
(bad)
fs
fcomp
sbb
cmps
arpl
push
push
mov
sub
pop
xchg
dec
cwde
cmps
push
inc
push
fcomi
jecxz
or
sbb
cdq
inc
fsubp
je
dec
dec
imul
mov
mov
lahf
xor
ds
ret
push
xchg
sub
arpl
das
xlat
xor
stos
ja
xchg
sar
xor
mov
out
ret
mov
(bad)
pop
ins
xor
outs
mov
xchg
push
cmp
pop
xor
xchg
jle
mov
mov
sub
les
icebp
sub
in
sub
iret
jbe
stos
inc
and
inc
in
addr16
in
ror
das
int
jle
fdiv
push
or
add
xchg
mov
jg
sar
sbb
(bad)
sub
je
or
add
mov
(bad)
fsubr
mov
inc
fistp
adc
into
pop
mov
stos
aad
cmc
sbb
scas
(bad)
hlt
jo
in
scas
xor
jecxz
fimul
pop
repz
xchg
ret
ror
inc
daa
cwde
mov
fs
jns
stos
sbb
jb
dec
ss
add
mov
xchg
(bad)
sahf
xor
out
clc
aas
add
and
push
sbb
xor
or
sub
test
fmulp
push
and
fisubr
daa
or
inc
jnp
cmp
movs
in
fs
pop
loopne
repnz
mov
and
jae
adc
push
pusha
test
dec
cmp
pop
dec
repz
jne
mov
mov
cdq
or
inc
push
jmp
repnz
jno
mov
jne
sbb
je
xchg
mov
das
xor
add
cli
lds
inc
(bad)
sti
xchg
push
sbb
movs
and
int3
inc
mov
test
out
aas
xchg
xor
dec
outs
aas
inc
test
cwde
ret
stos
mov
out
dec
mov
jae
mov
rcr
lods
xchg
mov
cmovs
pop
imul
xor
hlt
push
popa
xchg
push
mov
pop
and
mov
lock
push
loopne
loopne
push
iret
aas
jle
loop
cld
popa
mov
adc
sub
xchg
jae
out
scas
js
xchg
cmp
neg
pop
jmp
sar
popa
mov
sbb
leave
adc
push
mov
inc
add
add
adc
jl
mov
and
inc
daa
dec
add
out
or
loopne
cwde
lahf
mov
gs
mov
jg
xor
xor
fxch
push
cmp
fistp
or
mov
mov
mov
xchg
mov
std
sar
adc
pcmpgtw
mov
je
mov
push
inc
dec
push
stos
stc
cmps
pop
sar
pop
out
dec
in
call
cmc
ds
mov
retf
or
add
and
lahf
jl
dec
mov
in
out
xchg
pop
mov
sub
bswap
mov
bound
aad
clc
idiv
and
push
add
fld
jl
add
add
sbb
in
fist
cmps
in
es
lahf
imul
retf
aas
(bad)
je
mov
mov
pop
mov
pop
add
lahf
inc
mov
test
retf
movs
push
inc
push
cmp
lds
add
test
push
data16
and
xor
sub
mov
cmp
jnp
js
cli
cmp
jnp
sub
test
push
sub
in
cmp
jns
fsubr
into
add
ins
sar
and
ret
push
adc
std
std
jg
(bad)
(bad)
push
in
(bad)
mov
xchg
aaa
inc
pop
fsubr
scas
into
bound
test
aad
std
rcl
mov
adc
(bad)
cmp
mul
pop
xor
inc
mov
push
rcr
jnp
(bad)
movs
jae
hlt
mov
or
fldcw
push
sbb
sbb
icebp
jbe
cmps
cmc
cmps
stc
int
arpl
mov
xor
mov
outs
push
xchg
lds
cmp
cli
imul
jae
mov
sbb
mov
lock
add
in
pusha
mov
push
(bad)
repnz
daa
cmps
cmp
inc
jp
arpl
lahf
fisub
pop
stos
fistp
cmps
cli
retf
or
push
mov
push
jno
adc
xchg
add
jae
or
idiv
cmp
lahf
fwait
popa
sbb
(bad)
retf
mov
mov
cmp
ins
dec
hlt
sub
int3
lahf
data16
mov
add
loop
addr16
popf
mov
cmps
push
mov
jmp
call
add
lahf
sub
sbb
inc
cli
push
popf
sbb
add
fimul
mov
das
jp
inc
sub
sar
mov
mov
dec
sub
xor
cdq
aam
push
pop
movs
push
fild
and
dec
shr
pop
outs
add
lods
loop
cld
loop
pop
call
xor
fst
call
xchg
gs
mov
adc
cmps
aaa
call
inc
lds
add
(bad)
adc
push
dec
nop
xor
sub
and
arpl
inc
ds
xor
adc
push
sti
pop
pop
inc
mov
mov
shl
sbb
mov
mov
dec
sub
(bad)
pushf
cmc
in
sbb
js
bnd
fucomip
pop
fld
and
pop
jmp
sbb
inc
repz
pop
sbb
lods
pushf
lea
push
fimul
or
xchg
addr16
dec
mov
pushf
int3
xchg
fs
or
cli
fwait
cmc
out
jb
adc
sub
cdq
add
inc
popf
xchg
cs
shl
adc
cmps
add
fidiv
fdivr
jle
sbb
push
or
and
mov
and
sub
sub
es
inc
jno
stos
and
mov
clc
xor
xlat
sub
sahf
and
mov
cld
mov
cdq
stos
frstor
in
add
scas
inc
push
leave
dec
(bad)
pushf
or
out
pop
scas
cmp
pushf
int
je
pop
ret
jnp
xor
lods
je
push
inc
mov
dec
arpl
daa
push
stos
and
mov
call
xchg
dec
jb
sub
lea
mov
call
dec
std
adc
mov
inc
fs
shr
aad
mov
pop
jecxz
push
dec
push
sahf
mul
fldcw
mov
cdq
pushf
lds
shl
cmps
inc
test
mov
lahf
push
das
sub
inc
std
retf
xchg
or
pop
push
xor
fld
ja
and
and
dec
pop
push
in
mov
lahf
sbb
int3
repz
cmp
adc
js
ja
inc
add
idiv
pop
xchg
mov
and
cdq
das
or
int
(bad)
leave
jb
xchg
sti
mov
jmp
enter
sti
shr
js
pop
sbb
sbb
mov
push
jl
push
test
ret
outs
aaa
stos
outs
ret
jmp
(bad)
das
xchg
test
xchg
cmp
inc
std
pop
push
push
or
cmps
test
movs
add
cmp
rcr
inc
test
cmps
and
mov
sub
sbb
js
push
mov
retf
adc
xor
add
repnz
xchg
es
or
(bad)
jg
repz
(bad)
jo
jle
mov
sub
sahf
fucomip
adc
mov
inc
adc
fmul
sbb
lahf
pop
shl
dec
enter
sbb
mov
sar
add
push
jne
iret
pop
or
add
sub
cmp
and
ss
push
adc
jo
popf
xchg
adc
sbb
nop
aas
fdiv
int3
xchg
int
or
jge
push
shl
mov
jl
jae
or
push
pop
in
sbb
das
gs
loopne
and
or
inc
xor
push
cld
xor
dec
jge
ret
call
outs
jnp
xor
sbb
pop
xchg
add
shr
mov
enter
xchg
push
push
push
cmps
cmc
enter
mov
sbb
cmp
shl
cmp
mov
lea
shr
lods
xor
xchg
stos
xor
pusha
cmp
cmp
je
(bad)
push
mov
inc
xchg
cli
mul
loopne
adc
loop
mov
and
xchg
out
pusha
fsub
retf
adc
fsub
ficomp
xor
js
adc
push
mov
inc
jns
movs
or
iret
xchg
xchg
xor
in
mov
push
mov
dec
pop
or
mov
aad
aam
bound
shr
jge
mov
ficomp
pop
(bad)
push
mov
push
and
cwde
icebp
cmps
call
(bad)
ffree
sbb
jnp
ja
mov
fimul
mov
fimul
aas
ret
test
daa
pop
mov
cmp
mov
xchg
cdq
lods
clc
retf
dec
scas
jnp
mov
add
call
mov
(bad)
xor
imul
pop
jl
daa
mov
push
test
(bad)
fs
popa
sbb
push
icebp
cmps
mov
mov
ss
test
sub
lock
or
pop
mov
cdq
adc
ror
sar
dec
add
fdivr
mov
fimul
cld
mov
fsubr
adc
add
leave
pushf
iret
sub
fcom
adc
cmp
inc
pop
push
xor
jg
mov
adc
dec
popf
ins
out
push
sbb
mov
lods
add
ss
xor
mov
das
pushf
adc
push
lods
aas
mov
pop
iret
push
sub
lods
add
jae
inc
mov
mov
popf
dec
daa
push
pop
xor
sub
mov
fwait
cmc
push
ret
inc
adc
test
sbb
inc
xchg
test
popa
pop
test
pop
ret
arpl
pop
push
int
add
cli
sbb
mov
stc
jmp
aam
xchg
emms
rol
pop
add
das
jbe
retf
jmp
es
sub
movs
pop
mov
hlt
gs
dec
cli
imul
sub
mov
mov
dec
and
push
arpl
iret
inc
lds
mov
xchg
repnz
sti
(bad)
cmp
popa
dec
pop
loope
fsubr
add
test
fmul
aad
test
(bad)
je
add
out
inc
jg
inc
pop
jnp
inc
enter
es
ror
pushw
test
xchg
mov
rcl
mov
sub
xor
(bad)
mov
cdq
xchg
pushf
call
ins
cmps
mov
push
int3
stc
mov
das
cmp
repz
lds
pop
mov
imul
cdq
cwde
bound
data16
vphaddubw
neg
inc
ror
pushf
xchg
mov
mov
ja
xchg
push
and
rcr
fmul
cdq
and
in
aas
add
sbb
xor
mov
arpl
jb
je
cmp
cmp
push
out
xchg
pop
ret
jns
adc
dec
inc
push
add
and
xchg
js
sub
fcomp
xor
popa
loopne
or
mov
dec
in
mov
cmp
sub
daa
mov
call
mov
cmp
jae
adc
rcr
jge
dec
xchg
call
aad
jecxz
add
nop
xchg
dec
adc
aas
adc
aam
mov
loope
adc
or
gs
pop
pushf
jo
push
lahf
jmp
stc
ds
dec
mov
pop
inc
adc
or
jbe
xchg
int
sahf
sti
sbb
bound
scas
fwait
pop
jg
inc
call
push
xchg
not
mov
in
test
fimul
ds
dec
aam
or
or
dec
dec
cwde
and
jge
and
jecxz
in
jecxz
cmp
add
push
mov
shl
rol
jb
xchg
das
xchg
mov
jne
jle
data16
shl
ins
sub
test
dec
mov
in
sahf
shl
mov
adc
dec
jl
mov
test
lock
pop
sbb
movs
fwait
sub
push
fadd
or
xor
adc
jne
sar
adc
out
and
adc
adc
mov
lea
cmp
(bad)
stc
neg
les
addr16
stc
xor
ror
(bad)
sub
pop
pop
fnstcw
xor
enter
pop
stos
push
push
jp
mov
mov
xchg
mov
mov
sub
cs
mov
ds
adc
mov
or
mov
adc
iret
inc
cmp
addr16
push
xor
jp
jb
sub
std
out
jbe
(bad)
pop
sbb
cmp
outs
inc
or
test
pop
sbb
jbe
leave
rol
jmp
ror
xchg
mov
push
add
mov
mov
dec
inc
cmp
imul
mov
and
in
mov
test
aad
sahf
or
addr16
inc
mov
or
dec
xchg
out
adc
test
pop
or
jno
into
nop
sahf
jmp
pop
mov
call
pushf
int3
pushf
iret
scas
dec
push
cmp
mov
xchg
push
cld
ss
xchg
dec
dec
or
arpl
fisttp
or
dec
add
(bad)
iret
add
loopne
mov
stc
daa
push
adc
or
retf
outs
xchg
mov
cmp
pop
mov
push
jns
pop
jns
aam
movs
pop
(bad)
aas
inc
mov
dec
and
xchg
int3
and
hlt
sbb
cmp
out
fxch
adc
jl
push
pop
xor
mov
cmp
fnstenv
sbb
push
cld
in
mov
add
mov
jmp
(bad)
mov
adc
loope
mov
mov
int
hlt
mov
and
and
int
xor
jns
xchg
clc
xchg
sub
add
in
std
dec
sub
pop
cli
sub
rcl
pop
or
jae
int
mov
repz
push
pop
adc
(bad)
mov
retf
imul
sub
(bad)
or
add
loopne
mov
aas
mov
jg
jo
rol
xor
add
sbb
jbe
jle
imul
sub
(bad)
dec
jmp
jp
or
movs
rol
in
mov
in
es
xchg
jg
inc
aas
popa
call
push
into
mov
add
nop
sub
fld
pop
cmp
or
ins
xor
mov
mov
xchg
test
mov
sub
sbb
or
sbb
pop
mov
pop
ret
cmp
dec
jno
loope
aam
aam
(bad)
js
pop
adc
dec
mov
xchg
outs
add
sbb
cmp
pop
xor
std
mov
pop
stos
mov
cmp
adc
push
pop
pop
mov
xchg
(bad)
pop
retf
out
mov
cdq
jecxz
xor
xlat
sub
fbstp
jg
(bad)
adc
and
or
pop
mov
mov
pop
add
push
cmps
sbb
imul
and
fs
std
test
(bad)
aas
outs
or
test
sti
rol
and
jb
mov
scas
pop
sti
fistp
fbld
enter
lahf
retf
dec
push
aad
(bad)
cli
sub
lock
sbb
pop
loop
ror
mov
pop
addr16
push
out
xchg
out
ror
fs
dec
or
xor
mov
aad
ja
sub
inc
inc
imul
pop
xchg
dec
addr16
sbb
push
ins
repnz
push
mov
cwde
push
sbb
imul
and
mov
fimul
add
outs
adc
gs
mov
mov
inc
mov
sub
ins
addr16
ds
sti
jle
xlat
test
add
repz
cld
fimul
fbstp
mov
mov
or
push
and
xchg
jns
mov
std
add
and
inc
int3
retf
call
mov
dec
punpcklwd
add
sub
(bad)
or
mov
xchg
dec
in
mov
push
xor
mov
sbb
in
or
or
jle
fld
lds
dec
aam
and
xlat
pusha
fwait
pop
push
or
ja
or
xor
enter
rol
mov
out
jge
dec
(bad)
mov
mov
icebp
mov
nop
lea
sub
clc
test
mov
lds
mov
lahf
iret
imul
push
pop
icebp
inc
xor
sbb
out
xchg
and
and
js
(bad)
fiadd
outs
xchg
div
or
retf
sbb
(bad)
imul
cwde
mov
imul
pop
call
inc
ret
out
je
xor
pop
out
push
xchg
mov
push
pop
mov
repz
or
lea
sub
gs
adc
fnstenv
pop
xchg
mov
mov
jl
ss
push
dec
movhps
stc
pop
loopne
jb
jecxz
pop
sar
dec
add
jb
lods
push
test
mov
jge
mov
rcl
or
addr16
mov
adc
out
std
pop
jg
dec
cmp
scas
and
stos
mov
sahf
(bad)
sub
adc
jns
inc
adc
xor
dec
nop
xor
xor
(bad)
or
out
pop
mov
mov
hlt
aaa
mov
pop
adc
(bad)
pop
aas
out
call
pop
mov
rol
bswap
stc
fst
pop
test
dec
jge
lahf
sub
xchg
fnstenv
sbb
cld
push
pop
push
cdq
test
jmp
call
jmp
jp
bound
stos
jno
cmp
loope
ret
dec
clc
imul
std
push
(bad)
rol
cli
cmp
cdq
cmp
and
jns
add
cs
jns
rol
sbb
imul
fld
mov
sbb
mov
enter
sub
jmp
xchg
sub
mov
ret
mov
les
int3
js
retf
movups
and
scas
enter
stos
add
dec
jmp
int3
outs
cs
jnp
sub
mov
out
add
xor
mov
imul
push
add
enter
jp
jns
mov
int3
stos
or
pop
pop
ret
inc
(bad)
dec
loopne
cmp
push
int
xor
jge
pop
mov
cmp
pop
shr
test
sub
mov
mov
add
inc
or
int
jae
shl
pusha
jae
daa
movs
(bad)
fmul
repz
imul
pop
jge
pop
pop
in
add
push
daa
sbb
adc
stc
push
fmul
jbe
and
jns
out
xor
mov
call
lea
(bad)
push
aam
mov
mov
dec
and
mov
xchg
xor
shr
sbb
push
mov
mov
mov
xchg
jne
adc
jns
daa
adc
inc
jno
add
enter
mov
test
dec
in
sub
push
call
cmps
outs
cs
mov
dec
arpl
js
(bad)
xchg
sbb
pop
fwait
or
not
jns
test
add
inc
push
mov
inc
jp
xor
sub
sub
and
sub
and
data16
(bad)
jbe
outs
ss
ret
gs
aad
imul
fiadd
dec
mov
adc
jb
xchg
cmps
mov
in
inc
clc
enter
ss
dec
out
mov
pop
sub
cli
push
fwait
dec
inc
rcr
test
pusha
retf
call
repz
aad
fstp
stos
dec
leave
lea
mov
stos
(bad)
dec
mov
mov
jge
mov
inc
push
or
shl
push
aad
mov
and
imul
xchg
mov
push
mov
das
out
dec
mov
pop
cmp
xor
dec
fidiv
arpl
fwait
arpl
stos
pop
fucom
jle
out
int3
mov
cmp
repnz
ret
test
mov
rol
std
jl
aad
rcr
push
mov
imul
mov
adc
arpl
test
out
repnz
add
lds
(bad)
and
or
popf
js
fsubr
jbe
sbb
xchg
or
cmp
dec
popf
sbb
jecxz
sub
fidiv
stos
jp
cmps
jae
imul
leave
mov
ins
sub
js
ja
add
dec
adc
lahf
and
shr
xlat
mov
(bad)
not
inc
push
inc
aaa
outs
fnstcw
cwde
fs
inc
and
mov
pushf
fist
jmp
rol
add
mov
lea
sbb
jg
rcr
sbb
adc
pop
pop
imul
pop
ja
add
jg
push
(bad)
out
sub
(bad)
scas
ins
retf
sub
or
out
cmc
mov
ja
test
jge
mov
mov
icebp
daa
cdq
shl
clts
stc
pushf
(bad)
loop
ja
stc
cli
jmp
pop
loopne
imul
sub
push
or
adc
add
inc
out
sub
imul
dec
lods
imul
leave
add
and
jle
jno
popa
cmp
inc
sbb
push
mov
clc
mov
cmp
repz
jl
shr
cmp
xchg
adc
stc
popa
dec
scas
jnp
cmp
mov
and
out
adc
je
aad
stos
mov
push
out
jg
cmp
dec
inc
lods
lea
repz
pop
fadd
cmp
movs
jecxz
ja
jl
es
sar
rcl
fwait
loopne
xor
xlat
jmp
xchg
xor
pop
push
ret
shr
das
add
xor
push
in
sub
dec
fs
div
and
xchg
jmp
repz
nop
pop
push
(bad)
sti
push
dec
movs
loope
mov
cmp
mov
pushf
out
or
xor
sub
and
xlat
(bad)
pop
mov
sbb
cwde
aaa
push
fcomi
inc
dec
add
loope
cmps
and
pop
inc
add
sbb
push
jmp
push
sbb
movs
push
retf
loop
in
adc
xor
dec
pushf
out
mov
mov
ror
outs
jae
inc
mov
xchg
mov
in
outs
sahf
jb
movs
add
stos
cmps
adc
add
inc
push
pop
retf
jecxz
aad
aaa
inc
push
mov
(bad)
pop
rcr
in
xchg
(bad)
xchg
and
stc
popa
jae
mov
in
cmp
mov
push
jle
jae
jb
jno
cmps
mov
mov
mov
xchg
fcomp
movs
xchg
pop
jmp
aad
xor
into
call
outs
mov
jmp
mov
inc
or
mov
inc
xor
rol
lods
(bad)
(bad)
aam
sahf
mov
sub
mov
pushf
inc
jmp
aaa
or
jl
fwait
inc
jp
mov
sbb
aam
inc
mov
sub
fs
pop
sub
mov
imul
inc
bnd
mov
push
pop
or
gs
pop
xor
nop
dec
add
and
pop
xchg
add
dec
add
out
mov
push
lods
aaa
cmp
mov
fucom
icebp
adc
mov
push
mov
ret
sub
dec
pusha
rcr
push
dec
icebp
push
mov
(bad)
ins
and
mov
in
jae
xchg
in
xchg
inc
jmp
clc
imul
mov
in
add
dec
adc
repnz
push
or
pop
in
and
jbe
push
push
mov
scas
mov
push
sub
ror
and
cmc
es
lahf
ins
aam
push
inc
pop
cs
outs
mov
jne
fld
cmp
or
mov
aaa
hlt
lds
and
add
sbb
test
ja
sbb
(bad)
sbb
sub
push
lahf
je
repz
push
mov
xchg
sub
pop
shr
in
cli
fld
pop
stos
push
stc
lods
pop
sbb
lock
mov
pop
lahf
cld
cmp
dec
add
aaa
dec
stos
sub
out
sub
push
test
and
sbb
and
or
mov
pop
xchg
sbb
add
popf
call
jl
test
push
addr16
and
sar
or
pop
imul
mov
or
pop
xchg
pop
out
(bad)
int
xchg
loope
xchg
sbb
mov
add
movs
cld
sub
cmp
inc
dec
lea
or
sbb
xor
in
pop
arpl
aaa
hlt
rol
pop
push
push
clc
push
rol
add
repnz
or
cmc
(bad)
pop
shl
push
adc
sar
inc
ins
loope
push
sub
dec
jg
xchg
adc
mov
aad
jb
std
push
sub
sub
jmp
xor
mov
pop
sti
sbb
and
jg
icebp
mov
xor
mov
inc
test
fidivr
push
aas
push
and
call
sub
sahf
inc
sbb
jo
sbb
add
or
or
inc
sub
add
mov
div
xchg
fisttp
(bad)
sub
(bad)
pop
in
retf
icebp
out
mov
cs
movs
mov
jp
pop
jp
test
inc
xchg
iret
div
push
inc
sub
in
adc
jle
popf
jmp
nop
xchg
ins
neg
jl
loopne
or
mov
push
shl
mov
pop
push
test
push
ss
and
xchg
cmc
pop
xor
dec
jg
push
xor
cmove
hlt
xchg
hlt
int
jns
out
xor
not
push
add
mov
xor
mov
das
popf
std
xchg
int3
add
inc
jecxz
and
jno
dec
and
xor
push
pop
cs
(bad)
pop
adc
gs
call
mov
add
ins
jmp
and
retf
push
bound
fld
std
or
dec
dec
pop
xchg
jnp
in
mov
xor
cwde
jbe
mov
xchg
sub
xchg
not
cli
stos
sbb
push
scas
add
xor
push
xlat
sub
inc
(bad)
sbb
jmp
iret
xor
cmp
pusha
cmps
pop
inc
mov
xchg
or
sbb
mov
cmp
outs
xchg
cmp
cwde
aam
cmp
loop
movs
xor
int
test
sub
imul
sbb
ss
vdivss
(bad)
push
movs
jns
mov
out
das
push
js
jb
or
fwait
(bad)
mov
sti
lea
pop
cwde
fcmovbe
pop
cmp
fdivr
cli
lds
pop
pop
cmp
pop
stos
xchg
pop
xchg
pop
xchg
in
in
jmp
and
jb
retf
cmps
or
jns
add
fdivr
scas
sbb
in
pop
mov
enter
ror
xchg
push
aas
mov
pushf
add
sub
mov
jbe
ds
mov
scas
arpl
cdq
scas
mov
mov
movs
mov
jl
lds
movs
adc
add
lds
jge
mov
ins
sub
call
nop
fisubr
pop
pop
mov
pop
aad
mov
adc
loop
iret
mov
fs
dec
sahf
push
test
inc
pop
dec
not
mov
in
push
bound
dec
sahf
fxch
sub
scas
dec
out
popf
mov
or
repnz
cwde
adc
xor
mov
clc
ins
push
dec
movs
cwde
mov
aaa
(bad)
out
jno
sbb
adc
pop
pop
inc
mov
call
push
in
movs
mov
hlt
inc
sbb
jo
in
jecxz
push
addr16
es
int
dec
call
sub
mov
jmp
clc
ret
mov
ficomp
int
ds
lods
mov
rol
mov
lock
(bad)
xchg
jbe
ror
sub
cmp
mov
iret
enter
lods
lods
enter
sbb
test
sbb
lods
xchg
std
pop
pop
frstor
mov
mov
les
xlat
xor
fadd
ins
mov
test
jp
ret
fld
mov
retf
xlat
scas
mul
cmps
pop
shl
das
mov
cmps
je
push
jl
out
call
bound
sub
push
nop
cdq
add
pop
loope
out
(bad)
cmp
mul
fst
jb
jne
scas
clc
(bad)
cld
mov
fstp
sbb
add
mov
stos
pop
inc
loope
retf
cmp
mov
cmp
in
cdq
mov
das
add
inc
mov
mov
jns
mov
push
(bad)
adc
add
sub
ror
mov
sub
dec
ins
cmps
adc
inc
sub
rol
cli
out
hlt
push
mov
mov
push
and
mov
sub
jo
sub
jb
ss
out
fadd
jg
add
jle
lock
inc
inc
mov
jns
cmp
xchg
push
out
jp
out
lods
adc
adc
pop
enter
mov
and
cbw
jecxz
mov
dec
and
repnz
jmp
repnz
(bad)
movs
clc
dec
nop
mov
cmp
sbb
(bad)
cmp
jno
xchg
or
add
cmc
cli
cld
push
scas
lock
inc
mov
movs
pop
sbb
ds
pop
jo
mov
ror
out
pop
nop
(bad)
mov
pop
aad
mov
sub
push
call
adc
mov
ja
aam
and
mov
cmc
inc
in
test
imul
mov
sbb
inc
dec
fadd
out
mov
dec
je
clc
rcl
(bad)
sbb
cmp
push
(bad)
cmp
fcomp
stos
xchg
push
or
pop
pop
mov
xor
push
into
jbe
(bad)
dec
test
fiadd
addr16
fninit
xchg
sub
std
mov
sub
enter
inc
mov
push
hlt
sub
aad
xor
aam
push
mov
mov
ds
sar
and
mov
fidiv
ret
sbb
push
adc
out
add
xchg
out
push
sbb
movs
dec
sub
cmps
gs
add
jl
push
jnp
cld
sti
int3
fwait
cmp
shl
std
pop
mov
or
outs
jecxz
movs
imul
xor
inc
outs
test
mov
stc
shl
jnp
jg
es
jbe
int
and
retf
jg
ror
int
pop
sub
es
shr
push
inc
repnz
(bad)
in
cld
(bad)
je
ffree
or
enter
inc
stc
ja
rol
in
push
lods
lods
push
and
idiv
mov
dec
add
xchg
sub
mov
lock
xor
ret
and
push
sub
and
fdiv
inc
sti
jecxz
xor
(bad)
ins
enter
(bad)
retf
test
call
aam
fist
push
mov
jmp
jl
dec
mov
or
jge
ja
sbb
and
inc
or
bound
dec
jp
jo
and
std
push
and
mov
jp
mov
leave
loop
adc
aaa
inc
and
pop
sbb
daa
pop
jg
(bad)
test
jno
sub
(bad)
scas
jl
mov
retf
push
imul
fnstcw
ins
rcl
cwde
mov
call
and
popf
mul
arpl
mov
xchg
or
ret
es
or
stos
vpsubq
jmp
cwde
push
xchg
cs
pop
push
sahf
pop
retf
pusha
xor
jns
lds
jp
ja
pop
fwait
mov
sbb
add
dec
push
add
sbb
popa
leave
lds
cmc
mov
inc
ins
leave
sbb
les
jp
push
pop
inc
sbb
jbe
pop
nop
js
dec
loop
ins
or
and
outs
and
add
(bad)
mov
or
mov
mov
fs
dec
push
jle
push
jnp
xor
fdiv
mov
rol
mov
lea
jmp
mov
imul
mov
ficomp
xchg
stos
icebp
push
jno
cmp
dec
jmp
add
push
push
or
movs
retf
(bad)
adc
into
lods
mov
movs
in
sbb
repnz
or
mov
xchg
pop
sub
and
lods
cld
cmps
ror
movs
cmp
pop
fwait
jo
fdiv
(bad)
mov
sub
ds
sahf
fmul
xchg
mov
sub
and
mov
pop
imul
cmp
push
lahf
mov
mov
movs
sub
lods
mov
jnp
mov
xor
xor
adc
(bad)
dec
lahf
in
cmp
mov
mov
dec
js
jge
mov
xor
push
push
add
imul
add
inc
pop
ret
add
add
xchg
inc
call
sbb
xchg
mov
dec
iret
call
mov
adc
and
jg
jb
cmps
mov
pop
mov
fld
cmp
sbb
cmp
xor
into
jns
loopne
scas
jmp
jo
or
cmps
outs
out
cli
pop
push
sub
push
mov
xor
jae
enter
push
icebp
add
call
push
inc
stc
mov
sbb
test
jo
cmps
outs
aas
jg
adc
mov
or
ja
jns
mov
lahf
sbb
and
nop
mov
lock
addr16
or
jnp
xchg
jno
and
ret
imul
pop
lea
(bad)
loop
push
test
pop
call
or
loopne
xchg
dec
ja
test
inc
mov
mov
or
out
ficom
or
inc
xor
and
cs
ja
sbb
pop
inc
cmp
push
fisubr
loop
jns
je
mov
jae
enter
mov
in
mov
call
inc
out
out
push
xor
push
call
je
and
jb
adc
out
sar
js
out
mov
(bad)
jg
cs
and
stos
xor
sub
or
sbb
xchg
int3
mov
add
hlt
dec
addr16
sub
test
imul
adc
ins
push
aam
hlt
pop
push
fidiv
jae
movs
popa
scas
pushf
popf
and
test
mov
inc
mov
stos
mov
movs
or
jnp
cmp
in
jge
repz
xchg
aad
idiv
xchg
out
sbb
or
ins
(bad)
js
push
ret
fisubr
push
fisttp
cwde
and
mov
xchg
inc
xlat
lods
push
xchg
sti
mov
mov
(bad)
mov
imul
or
add
retf
add
clc
sbb
xor
stos
pop
es
mov
add
jl
fadd
sub
cmp
sub
(bad)
mov
rcl
push
mov
cmps
aas
test
mov
and
repnz
fisub
(bad)
in
push
xor
movs
loopne
xchg
dec
(bad)
sti
inc
jns
lahf
(bad)
ficomp
pop
int
lock
jo
sbb
nop
ins
xchg
(bad)
movs
ins
ins
out
sbb
and
out
retf
mov
sub
dec
test
pop
cs
cld
int
test
maxps
imul
scas
cmps
cdq
test
xchg
pushf
fwait
loopne
enter
pop
lea
dec
xchg
jbe
inc
add
sbb
mov
add
div
push
jle
mov
or
cmp
pop
pop
loope
imul
cmps
jg
pushf
dec
xchg
pop
jno
std
mov
movs
sub
fistp
shr
pop
mov
xchg
add
repz
or
lahf
xchg
dec
sahf
add
popa
and
sub
aas
sub
rol
add
lods
jbe
aas
scas
xchg
add
fnsave
loopne
call
jns
pop
xchg
sub
xchg
inc
mov
pop
mov
mov
dec
jb
dec
mov
mov
push
lock
addr16
and
loope
add
mov
fwait
retf
jns
inc
xor
dec
pop
adc
je
rcr
lods
cmps
jb
cmp
addr16
mov
and
nop
test
mov
adc
jns
aaa
jbe
std
fld
mov
sbb
repnz
(bad)
aaa
mov
int3
jmp
arpl
push
inc
lahf
clc
call
cmp
inc
stos
jp
bound
and
pusha
push
add
cmps
mov
and
stos
adc
(bad)
fld
call
out
sbb
xchg
in
ror
cmp
pop
aas
dec
push
in
mov
and
push
dec
scas
enter
xor
retf
out
leave
(bad)
retf
push
mov
mov
or
push
mov
retf
cmp
adc
ins
jns
js
test
sbb
xor
fst
jmp
xchg
shr
xor
clc
loope
push
loop
enter
jnp
dec
mov
cmps
in
pop
cmps
call
or
xor
not
and
dec
mov
test
pop
rol
mov
or
sub
sbb
add
out
fisubr
cmp
inc
outs
pop
aaa
repnz
shl
test
pop
popf
sub
or
xchg
xchg
js
(bad)
movs
loop
shr
and
rol
mov
ficom
or
sahf
es
add
movs
pusha
sub
push
mov
push
and
push
sbb
ins
int3
loop
outs
mov
push
push
pop
add
clc
mov
dec
fdivr
mov
rcl
sub
fnstenv
mov
retf
hlt
imul
xchg
call
loope
push
shr
mov
fadd
cmps
ja
mov
or
mov
jbe
mov
(bad)
fcomp
ja
mov
pop
dec
test
sbb
cmp
jl
mov
rol
mov
and
and
mov
jp
cmps
int
or
mov
les
mov
iret
xchg
and
sub
push
push
cld
scas
mov
mov
mov
add
ins
dec
call
enter
jmp
xchg
into
out
pop
outs
lahf
fistp
xor
mov
sbb
dec
pop
stc
mov
aam
jns
adc
or
mov
or
lods
int3
lods
in
xor
sahf
xchg
dec
sbb
cmp
clc
enter
inc
enter
pushf
pop
inc
push
repnz
popf
clc
shl
fcomip
xchg
(bad)
out
inc
mov
jg
ins
imul
push
push
adc
xchg
sbb
leave
dec
call
jmp
or
ret
scas
xchg
outs
jae
(bad)
lea
hlt
push
xor
hlt
xor
add
push
ins
sbb
xchg
jp
rcl
int
lea
jo
clc
int3
mov
lock
shr
xchg
cmp
in
sbb
xor
in
inc
je
es
inc
stos
push
pop
pushf
fld
mov
xchg
mov
sub
pop
cli
es
ds
sbb
and
mov
outs
sub
cmp
fucomi
sub
and
cmp
xchg
nop
pop
jg
inc
out
dec
add
or
pop
sbb
shl
and
lods
mov
daa
pusha
dec
cvtpi2ps
jg
push
push
mov
jb
add
inc
jge
pop
paddq
mov
mov
inc
rcl
(bad)
lds
into
test
inc
fsub
call
retf
mov
out
repnz
push
enter
ins
enter
or
shl
pop
(bad)
arpl
iret
add
add
in
xor
ja
jnp
rcr
sbb
mov
push
xor
mov
icebp
xlat
repnz
ror
sub
adc
pop
arpl
loop
aam
add
rol
cwde
div
pop
push
mov
pop
sti
mov
jae
cmp
int
push
sbb
inc
in
mov
outs
ins
bound
jns
push
std
arpl
and
push
in
lods
cmp
ficom
inc
out
xlat
jecxz
mov
out
cmp
pusha
mov
cmps
leavew
push
cmp
lods
push
push
jge
arpl
outs
inc
push
rcr
fsubr
fcom
xchg
sbb
lock
inc
dec
or
mov
jp
mov
mov
mov
in
sub
mov
inc
or
retf
mov
loope
movs
mov
cmp
in
add
mov
mov
psadbw
cmc
sub
push
sub
stos
mov
test
mov
call
popf
mov
call
test
lods
in
in
lods
leave
jmp
mul
cs
jae
out
dec
addr16
gs
ins
push
lea
and
es
jmp
es
push
dec
into
inc
or
mov
mov
aas
sub
and
fwait
cmp
(bad)
jmp
nop
(bad)
mov
add
clc
sub
(bad)
sar
fidivr
dec
retf
(bad)
popf
data16
push
xor
jnp
xor
xchg
and
inc
xchg
or
mov
adc
cmp
push
xor
call
out
inc
pop
shl
or
cli
push
outs
inc
push
mov
mul
ins
xor
call
or
ins
dec
xlat
xor
cmp
pop
jmp
sub
jg
enter
sar
loopne
inc
(bad)
push
pop
sbb
movs
popa
xor
mov
sbb
fld
jl
cs
shl
cmp
movs
popa
leave
adc
out
out
add
or
mov
mov
clc
inc
pop
jmp
leave
retf
cmps
inc
loopne
cmp
pushf
jo
scas
push
inc
cmp
not
sub
out
lds
xchg
out
aaa
jecxz
or
ins
xlat
xchg
push
adc
fistp
push
cli
push
jnp
pop
fs
and
push
(bad)
and
call
sub
add
in
xchg
int3
bound
inc
jmp
fwait
pop
push
xchg
cld
mov
mov
jb
xor
add
mov
xor
out
xchg
imul
cli
pop
(bad)
(bad)
push
rcr
aam
dec
(bad)
test
test
inc
push
adc
xchg
inc
cwde
fbld
mov
jmp
leave
or
ins
sub
ins
in
xchg
repz
and
mov
pop
mov
and
test
xchg
sub
dec
xor
or
aas
dec
ror
daa
jge
mov
ins
sub
dec
imul
sbb
(bad)
fadd
cmp
cmp
in
dec
int
dec
inc
push
sub
popf
push
mov
sbb
pop
das
mov
fwait
or
stos
stos
push
rol
ficom
jb
add
imul
aas
cmp
adc
inc
add
shl
jnp
push
inc
mov
add
ins
ja
xor
fdiv
cdq
inc
jecxz
aaa
or
pop
ret
or
cs
lea
sahf
out
mov
cmp
mov
test
ret
cmp
and
mov
add
dec
and
or
ror
fs
dec
fimul
xbegin
inc
cmc
sub
aad
cmp
dec
push
cmc
ds
(bad)
repnz
popf
add
push
mov
sub
pop
in
lock
xchg
sbb
dec
mov
jecxz
sub
push
scas
les
jle
mov
adc
pop
cmp
xchg
or
cli
sbb
pop
out
pop
or
xchg
stos
cmps
loopne
cmp
sbb
dec
mov
mov
mov
mov
sub
mov
sbb
aaa
shl
inc
mov
dec
mov
adc
inc
inc
cmp
jmp
mov
leave
push
fisubr
xchg
cmp
stc
ss
in
outs
mov
inc
or
in
scas
xchg
(bad)
pop
fmul
cmp
mov
or
shl
repz
nop
cvtps2pd
sahf
leave
int3
mov
mov
mov
icebp
std
outs
out
call
sub
lds
cmc
in
cs
add
jo
js
stos
dec
cld
ret
sbb
xor
rol
movs
pop
mov
xchg
sub
cli
ins
jae
mov
jmp
imul
sbb
retf
sbb
mov
jl
fwait
mov
mov
push
mov
mov
inc
mov
ins
cmp
lea
retf
inc
mov
fwait
sub
inc
scas
lahf
sbb
(bad)
pop
scas
call
das
or
adc
xor
push
and
lds
fwait
adc
(bad)
xor
cwde
(bad)
pop
cmp
mov
mov
out
jns
pop
pop
nop
sub
outs
imul
mov
dec
sub
and
mov
out
aaa
mov
jnp
jmp
ins
jno
sti
mov
or
jne
(bad)
das
add
dec
dec
rcl
jb
cld
aaa
sub
cmp
pop
popf
xor
inc
iret
jecxz
imul
gs
mov
(bad)
jp
dec
xor
push
clc
sub
push
lahf
jnp
lds
dec
push
loop
pop
adc
push
dec
sub
pop
lahf
outs
jno
dec
arpl
ss
(bad)
loop
data16
retf
add
pushw
lds
push
adc
shl
aas
cmp
push
loope
sub
jl
mov
stos
mov
and
lods
ja
mov
push
pop
rcl
int3
inc
or
and
shl
mov
mov
pop
dec
inc
out
in
push
push
fdivp
mov
sbb
aam
ins
sbb
push
ss
mov
adc
out
iret
add
scas
cdq
mov
stos
cld
adc
addr16
fdivr
sub
jb
scas
add
add
xchg
(bad)
in
adc
ss
ret
test
cli
call
lock
cmp
jae
fxch
retf
mov
xchg
mov
push
mov
and
mov
outs
arpl
push
adc
jbe
(bad)
retf
arpl
call
xchg
jmp
dec
imul
xchg
add
jno
pop
ret
in
xor
int3
rcl
imul
dec
push
rcr
sbb
stc
jno
sub
mov
loopne
cs
(bad)
imul
mov
push
sub
and
or
mov
lock
or
mov
jmp
iret
push
push
sbb
push
test
nop
jmp
dec
enter
xor
push
pop
sbb
cwde
jns
jno
mov
lea
add
pop
int
sbb
imul
lods
inc
and
pop
repz
ins
fiadd
aaa
push
adc
add
jno
mov
ins
pop
jge
push
aam
cli
pop
adc
pop
shl
cmps
gs
idiv
inc
fbstp
cmps
fidiv
xchg
call
test
movs
popa
std
out
arpl
into
mov
xlat
mov
sub
jmp
add
mov
and
gs
fbstp
mov
imul
jnp
mov
cmp
push
cmp
cmp
pop
shr
(bad)
test
mov
mov
cmps
xchg
add
(bad)
sbb
ret
ret
sub
stos
mov
(bad)
ror
adc
stos
pop
fsubr
bound
xchg
jne
(bad)
jns
rcr
stos
sub
jmp
cmc
add
lods
es
mov
jbe
or
add
jg
pusha
xor
test
iret
mov
loopne
mov
xor
mov
jmp
mov
add
pop
movs
xor
jbe
inc
xchg
or
sbb
mov
pop
jnp
sub
shl
iret
popf
call
dec
push
xchg
jbe
and
cli
mov
push
loope
test
sahf
adc
xor
sbb
dec
xor
or
addr16
and
fidivr
mov
mov
inc
and
lods
jb
mov
jl
or
pop
cmc
das
aaa
push
cmp
push
mov
adc
push
xor
imul
ja
fistp
fsub
adc
mov
(bad)
and
cmp
cld
shl
out
add
mov
aam
adc
(bad)
in
pop
sbb
test
xor
ja
js
movs
stc
jbe
loope
push
push
ds
aaa
push
jae
inc
xor
icebp
add
jo
cmp
mov
aaa
push
jl
mov
xchg
cmp
or
clc
mov
or
in
scas
pushf
into
out
out
jmp
mov
test
add
xchg
pop
mov
push
sbb
sbb
lds
dec
xchg
jg
hlt
xor
aad
sbb
outs
ins
cmps
jecxz
loope
dec
sub
lea
cmp
in
sbb
push
cmps
lods
out
mov
mov
(bad)
leave
xchg
outs
fs
xlat
pop
mov
popa
xchg
jno
xor
dec
pop
pop
xchg
push
es
xor
mov
dec
bound
jge
data16
(bad)
scas
and
add
cmp
(bad)
or
jge
sub
sub
cmps
aas
and
fst
jge
scas
jp
movs
lahf
pop
sbb
cwde
or
jl
xchg
push
jo
in
test
sub
cmp
out
inc
adc
mov
mov
and
cmp
imul
inc
loopne
and
ficom
push
test
xchg
jmp
mov
sub
mov
sbb
and
pop
and
test
sbb
cvtdq2ps
ins
adc
and
movs
jmp
iret
mov
xor
dec
imul
xor
cmovae
stos
dec
les
es
iret
push
(bad)
(bad)
or
cmp
inc
dec
in
jecxz
sub
mov
movs
aam
inc
leave
enter
hlt
std
or
std
ja
push
das
xor
repz
pop
mov
mov
and
das
xchg
call
sub
adc
pop
ds
xor
dec
jno
pop
xchg
in
xchg
sub
jp
mov
inc
(bad)
in
ffreep
push
fs
pop
int3
ja
dec
add
push
jecxz
call
mov
xchg
mov
or
xor
mov
fs
jb
int
shr
xlat
leave
xor
xor
mov
sub
inc
loopne
push
movs
mov
jae
or
out
ins
cmps
stc
or
pop
push
rcl
sub
pop
int
leave
xchg
and
sbb
test
daa
iret
stc
sbb
data16
in
add
push
pusha
or
mov
(bad)
adc
aaa
and
popf
adc
jecxz
stos
test
shl
dec
jle
out
cmp
cmp
scas
cmp
shl
ficom
xlat
pop
rcl
cmp
mov
or
movs
loopne
lahf
shr
in
sub
outs
xor
aaa
daa
stc
or
fimul
out
nop
stos
cdq
inc
add
movs
mov
mov
stc
ret
pop
loope
pop
mul
inc
jl
cld
mov
fnsave
sbb
pop
je
cdq
cmp
shl
in
outs
push
inc
fwait
cmp
std
push
push
xchg
jle
(bad)
shl
fsubr
and
mov
(bad)
lods
mov
movs
mov
movs
cmc
ja
dec
xchg
int
or
cdq
test
push
ja
fimul
and
mov
xchg
aad
addr16
cmovg
add
xchg
xchg
sub
into
lahf
and
fist
mov
dec
push
test
movs
jmp
mov
or
xchg
sub
out
sub
xchg
jo
dec
dec
mov
xor
out
test
and
(bad)
fisub
js
sti
inc
and
xchg
aas
inc
call
test
lea
rcr
jns
cmp
outs
jecxz
iret
xchg
or
(bad)
push
lock
lods
rcl
sub
jmp
jo
xor
ror
jle
add
loope
cwde
test
jmp
push
aad
jle
inc
and
push
jbe
pop
rcl
sbb
push
push
cli
cmp
cmp
ret
mov
dec
es
inc
pop
fmul
(bad)
ret
xor
push
add
mov
and
out
hlt
pop
clc
out
cmp
push
add
dec
and
sub
(bad)
jnp
lds
or
xor
in
push
das
xor
add
out
mov
fnstcw
into
cmp
movs
mov
jge
add
dec
aaa
xchg
js
xchg
and
add
sti
adc
mov
mov
jle
std
ins
and
mov
push
neg
push
inc
bound
ret
icebp
mov
out
xlat
xor
or
jbe
xor
fst
add
push
loope
push
ins
jecxz
pop
dec
or
lahf
cwde
retf
popf
mov
mov
popf
popa
pop
dec
scas
xlat
cmp
pop
imul
enter
fsubr
outs
outs
jae
fadd
aas
in
lods
leave
lea
mov
adc
jecxz
ror
bound
add
xor
ret
adc
mov
xor
sar
inc
pop
(bad)
mov
aas
inc
imul
hlt
add
cmp
out
push
loope
adc
and
pop
jle
int
popf
repnz
aaa
xchg
into
jb
pop
(bad)
dec
cs
pop
(bad)
cli
pop
leave
das
dec
adc
ins
(bad)
cmp
aad
das
sub
sbb
(bad)
cmc
in
data16
sub
(bad)
and
cmp
test
mov
push
leave
daa
mov
repnz
movs
jnp
daa
popf
sbb
sub
mov
xor
loopne
jns
std
mov
push
dec
(bad)
cmp
mov
cli
in
arpl
adc
mov
xor
inc
jns
js
cld
div
fwait
jns
sub
fs
aas
movs
(bad)
int
jmp
and
xchg
cmps
dec
pop
pop
add
addr16
(bad)
cwde
pop
dec
mov
dec
xchg
inc
test
and
cmp
jl
xor
stc
mov
stos
push
mov
sub
fbld
dec
xchg
mov
sub
inc
daa
ja
push
neg
add
dec
pop
or
scas
xchg
sbb
mov
ficomp
mov
mov
dec
(bad)
push
or
lods
push
shr
into
sbb
std
mov
and
mov
xchg
push
add
repnz
mov
cmp
push
mov
cmp
sub
sti
sbb
pop
leave
shl
loop
movs
or
pushf
cmp
push
sub
push
cmps
push
(bad)
mov
scas
out
mov
mov
mov
add
inc
adc
push
jne
xor
out
push
pop
pop
dec
repnz
gs
and
cmp
hlt
jne
out
outs
outs
jns
jmp
cld
xor
outs
loope
rol
push
mov
add
gs
sub
inc
in
xchg
scas
and
shl
shl
pop
ins
pop
popf
xor
dec
jmp
sbb
xor
push
neg
aaa
mov
test
adc
and
pop
push
jb
in
mov
iret
xor
add
or
adc
enter
xchg
and
cmps
push
xor
es
cmc
mov
or
jmp
xchg
adc
lods
push
adc
sbb
jp
loop
sahf
fmul
scas
ins
jle
fcmovbe
cdq
mov
les
cmp
xor
cdq
xchg
icebp
mov
imul
in
ds
cwde
adc
push
int
sub
jb
push
push
xchg
add
mov
inc
in
jo
and
adc
(bad)
cli
mov
(bad)
xor
hlt
scas
fst
les
fisttp
adc
(bad)
cmp
and
xchg
jbe
mov
cmc
or
add
gs
leave
aas
into
sub
mov
jp
or
pop
repnz
mov
fistp
inc
lahf
stos
or
scas
fcomp
pop
cdq
cmps
lods
xor
mov
hlt
mov
mov
cmp
mov
jmp
mov
xchg
pusha
ret
mov
in
mov
int3
fisub
cmc
fldcw
cmc
jmp
test
xchg
(bad)
xor
or
pop
or
inc
push
mov
sbb
jo
nop
cwde
xor
loopne
cmp
inc
mov
mov
jo
xchg
add
(bad)
aas
adc
popa
out
std
push
enter
xor
mov
movs
je
mov
inc
cmp
ins
add
mov
lahf
pop
retf
dec
inc
xlat
cdq
fiadd
fmulp
(bad)
pop
in
imul
ss
jb
sub
sti
xor
clc
(bad)
stos
cli
and
retf
into
fisttp
xchg
sar
adc
scas
inc
aaa
push
xor
gs
popf
add
pop
push
hlt
cdq
dec
mov
mov
cmps
out
lods
pop
ret
inc
ficom
sbb
in
mov
push
push
sub
and
jecxz
mov
or
xchg
mov
jl
out
mov
pop
xor
xchg
xor
xchg
loopne
cwde
aaa
and
inc
test
outs
jns
jge
sahf
dec
mov
hlt
mov
push
dec
leave
push
mov
pop
fs
push
adc
or
adc
jle
(bad)
cli
stc
jmp
mov
call
sbb
cmp
das
mov
lods
lods
push
xchg
xor
pop
loop
mov
cld
cmp
and
mov
mov
pop
xor
cmp
cmps
mov
sub
lea
sbb
xor
cmp
(bad)
xchg
xchg
xchg
push
xchg
ss
mov
loope
inc
and
and
test
movs
call
cmp
mov
sar
aad
add
repnz
popf
shl
addr16
sbb
stos
push
mov
rcr
test
fild
mov
cld
gs
pop
shr
ja
shl
or
dec
scas
jne
sti
les
sbb
cli
das
pop
pusha
pop
dec
pop
inc
cmp
jge
add
movs
rcr
mov
mov
arpl
jnp
lds
sub
ss
jle
fidiv
cmps
push
jge
add
jmp
cli
mov
sub
jle
jne
ret
sbb
arpl
inc
jecxz
outs
push
cmp
sub
fs
mov
scas
or
pop
jle
inc
mov
(bad)
push
or
sub
or
shr
add
clc
call
js
fwait
push
fs
adc
jb
and
sub
or
jns
add
cld
dec
and
mov
cmp
and
mov
and
pop
add
push
xchg
stos
cmp
lods
lahf
not
addr16
(bad)
repz
scas
fild
sbb
gs
call
cmp
cmp
xor
dec
xchg
repnz
mov
cmp
ss
icebp
rcr
arpl
in
imul
cmp
mov
and
adc
out
out
fstp
xchg
call
div
pop
cmp
ror
add
repnz
stos
jae
jmp
shl
jmp
in
out
xchg
jae
scas
xor
dec
mov
dec
stos
sbb
xchg
pop
and
push
jne
mov
sbb
dec
aaa
sub
inc
add
loopne
cmps
cmp
xlat
sbb
mov
out
lds
pop
repnz
inc
ja
popf
adc
imul
(bad)
(bad)
mov
jno
lahf
sbb
push
(bad)
stos
sbb
pusha
cwde
push
xchg
xchg
adc
add
or
and
jnp
cmp
std
jns
popa
and
mov
sub
fist
addr16
cmp
or
mov
and
iret
jmp
push
stc
pop
inc
js
sub
adc
sbb
stos
mov
cmps
cmc
and
pop
jbe
inc
fsubr
fcmovne
cmps
pop
mov
xchg
shl
sbb
cmc
pop
add
jns
pop
sub
add
dec
call
xchg
es
mov
leave
push
test
sbb
les
ins
cmp
test
pop
cli
(bad)
add
mov
or
iret
aad
sub
in
push
in
cdq
pop
sub
shl
das
nop
mov
call
jecxz
pop
cmps
xchg
test
push
xlat
mov
xchg
and
mov
jl
dec
retf
pop
mov
ins
add
mov
je
jle
fsubrp
xchg
mov
and
adc
ins
xor
lock
mov
pop
(bad)
data16
call
enter
xor
pop
inc
jmp
outs
inc
dec
mov
es
cmp
dec
imul
aam
cmps
mov
mov
push
mov
adc
jmp
movs
push
push
jne
stc
pushf
nop
sbb
mov
aaa
cli
inc
int
push
fyl2xp1
(bad)
cmps
adc
push
stc
pusha
or
pop
test
mov
(bad)
inc
and
movs
popf
repz
inc
in
mov
push
or
aam
(bad)
setae
mov
dec
ror
std
and
adc
inc
xor
mov
loopne
fimul
out
cmp
push
call
push
lahf
fcom
pop
scas
mov
pushfw
mov
inc
into
or
push
stos
idiv
fnstcw
or
jo
lock
mov
adc
sar
and
dec
mov
(bad)
push
xchg
bound
arpl
retf
je
das
push
pop
ja
mov
call
mov
dec
and
pop
das
rcr
adc
mov
mov
fnstsw
loop
xchg
ss
jae
lock
adc
std
std
mov
mov
sbb
and
inc
mov
add
and
loopne
cmp
sbb
push
push
fdivrp
inc
or
popf
xchg
mov
sub
dec
mov
add
push
fidiv
scas
je
mov
fs
jmp
adc
push
pop
add
sti
fimul
sub
movs
mov
inc
fld
sub
lods
sbb
xchg
add
arpl
(bad)
push
movs
push
loopne
inc
adc
jecxz
mov
xor
pmullw
inc
in
into
cmp
ins
inc
xchg
mov
push
mov
push
cmp
sahf
mov
and
pop
push
xchg
sbb
or
jmp
sub
dec
xchg
sub
or
imul
sbb
sub
aaa
enter
pop
push
mov
adc
call
(bad)
out
shr
mov
rol
cmp
dec
pusha
add
leave
imul
mov
mov
mov
cmp
pusha
dec
mov
arpl
adc
mov
in
jmp
add
pop
outs
sbb
push
add
popf
or
arpl
cmc
dec
fld
mov
imul
(bad)
sub
pusha
aaa
ror
cmp
daa
jle
dec
or
cs
je
fcom
into
bound
nop
add
shr
into
adc
pop
retf
dec
xor
(bad)
das
iret
seta
fwait
adc
int3
dec
inc
mov
out
push
fcomp
scas
call
aaa
call
fisub
(bad)
(bad)
rol
jecxz
jmp
mov
test
imul
jne
lods
sti
cs
jns
stc
repnz
int3
adc
sub
icebp
jne
mov
call
fs
xor
loopne
jae
test
cwde
ret
out
loop
rcl
fsub
ret
mov
cli
daa
ror
aas
jmp
add
mov
sti
jl
pusha
fs
(bad)
in
sub
xchg
cwde
outs
loopne
mov
and
test
mov
jge
xchg
pop
out
sub
test
jecxz
out
inc
test
jge
xchg
sbb
and
jecxz
mov
repz
inc
push
xor
adc
pop
mov
cmp
out
imul
movs
les
fxch
sub
test
xor
cmp
dec
cdq
hlt
es
mov
fcom
or
in
std
add
pop
and
lahf
xor
not
cwde
mov
xor
(bad)
pop
mov
inc
cmp
(bad)
div
push
jp
hlt
mov
call
aad
dec
ins
sbb
and
test
add
pop
pop
push
pushf
pop
mov
add
cmp
ds
xor
dec
rcr
fisttp
xor
daa
(bad)
repz
xchg
dec
pop
pop
mov
(bad)
or
and
shr
fnstsw
ret
shr
fbld
mov
cld
lahf
adc
sbb
xor
inc
mov
pop
out
mov
dec
shr
aad
xor
and
dec
jno
inc
lods
dec
stos
pop
imul
push
sbb
js
pop
cmp
pop
call
dec
add
jae
push
cmp
dec
and
cmp
sub
xchg
cmps
cs
xor
sar
lock
arpl
fnstenv
xor
sbb
sub
mov
mov
popw
push
data16
cmp
inc
dec
out
mov
mov
jne
sar
or
inc
or
sar
fistp
cmp
arpl
dec
std
popf
mov
sahf
xchg
inc
ds
loopne
repnz
cmc
mov
and
rcr
jbe
xchg
xchg
xor
loope
aad
jnp
ja
enter
dec
das
fnstsw
ret
jns
fdiv
xor
stos
pop
pop
sub
or
mov
(bad)
rol
aas
pop
add
aaa
pop
mov
cmp
xchg
pop
loopne
cwde
repz
clc
push
jno
push
repz
lods
sub
jge
sbb
stos
imul
scas
loop
aad
xchg
(bad)
inc
xchg
xchg
es
xlat
lahf
aas
or
sar
push
cmp
out
fs
sub
sbb
lods
sbb
jle
mov
push
jne
sub
loop
pushf
jbe
std
push
jl
xor
sbb
mov
or
mov
mov
cmp
lods
sbb
xor
add
(bad)
mov
mov
cld
cmp
jl
push
aam
xor
push
push
div
sbb
mov
sbb
inc
mov
sub
not
dec
jmp
js
mov
xchg
cmp
sub
and
(bad)
loope
mov
ret
(bad)
imul
dec
xor
sti
lods
call
add
push
mov
add
je
je
fwait
pop
xchg
and
fs
push
dec
loop
pop
outs
sub
jnp
jge
xchg
jmp
stos
(bad)
jae
repz
into
cmp
dec
or
push
in
test
mov
shl
xchg
imul
in
data16
(bad)
and
stos
fiadd
(bad)
pop
rcl
pop
ins
test
push
inc
pop
add
loopne
icebp
push
mov
jmp
ficomp
and
pop
mov
xchg
ror
inc
xchg
cmp
mov
mov
mov
mov
icebp
dec
cld
dec
dec
jl
cwde
movs
adc
sbb
popf
jle
and
or
fmulp
adc
xchg
test
fstp
inc
push
pop
sub
retf
mov
push
cmps
test
mov
mov
leave
jecxz
aam
push
lods
mov
repz
inc
dec
movs
stos
jb
js
sbb
mov
in
and
mov
fst
shl
sahf
les
mov
stos
mov
or
xor
dec
mov
dec
jmp
mov
(bad)
dec
add
inc
cmp
fdiv
cwde
sub
push
test
pop
adc
les
scas
cmp
jp
pop
mov
cdq
and
xchg
adc
mov
call
push
xchg
pushf
ins
cmps
adc
xor
repnz
jp
pop
imul
jmp
jle
jae
mov
inc
sub
in
cmps
push
(bad)
or
jmp
mov
adc
mov
mov
push
jae
mov
imul
rcl
(bad)
push
in
pop
lock
jmp
pop
aaa
pop
gs
sbb
adc
xchg
clc
jecxz
mov
mov
fwait
sub
ins
or
movs
mov
dec
fnstsw
sub
add
cmps
lahf
or
enter
jmp
and
jmp
sbb
shr
push
daa
repnz
test
mov
pop
es
movs
sub
dec
inc
mov
dec
ins
int3
xor
dec
pop
(bad)
or
dec
aaa
leave
jge
xor
xor
(bad)
jnp
jle
adc
test
and
cmps
adc
int3
jmp
nop
loopne
pop
bound
mov
mov
push
loopne
or
mov
sbb
test
sahf
mov
and
in
outs
mov
lods
ins
add
mov
pop
inc
pop
(bad)
outs
sbb
jbe
in
test
mov
mov
fdivr
mov
mov
(bad)
mov
or
into
cmp
adc
cwde
xchg
ret
fstp
dec
sbb
arpl
mov
cmp
mov
or
out
sub
jae
and
mov
js
xchg
cmps
mov
push
push
enter
std
and
test
sub
fcom
retf
pushf
(bad)
pop
dec
gs
pop
arpl
add
dec
aam
inc
mov
mov
mov
add
add
pop
mov
inc
dec
hlt
xchg
inc
xor
sti
out
jl
(bad)
jge
add
xor
(bad)
sbb
nop
and
popa
inc
jbe
lods
add
or
test
xchg
sti
cs
movs
mov
test
mov
mov
mov
xchg
mov
xchg
mov
cmp
scas
aam
loopne
dec
mov
pop
inc
frstor
mov
mov
pop
into
movs
jmp
in
setne
xchg
and
add
into
xchg
dec
push
mov
inc
xchg
mov
add
mov
imul
xchg
out
or
cmp
mov
hlt
les
retf
jmp
pop
pop
mov
push
mov
cmp
cmp
movs
frstor
and
push
js
fwait
xor
imul
ffree
les
fmul
movs
in
out
pusha
mov
xchg
pop
mov
inc
lea
fcmovb
mov
or
cmp
cmp
jae
popa
and
jg
pop
fwait
adc
scas
mov
shl
dec
adc
dec
dec
add
xor
loope
movs
pop
sbb
ret
scas
test
xor
(bad)
int
xor
fstp
bound
int
inc
fisubr
or
push
cmc
or
retf
loopne
mov
add
neg
jmp
mov
lds
mov
out
cmp
das
imul
aas
ja
sub
test
es
cmc
cmp
out
pop
fadd
dec
lds
dec
cmp
jne
xor
jmp
jne
aaa
inc
ret
ficom
in
lahf
outs
iret
data16
cwde
dec
and
gs
mov
lahf
ins
out
push
xor
push
sbb
mov
iret
sub
movs
sbb
in
jne
add
das
cmps
adc
nop
mov
popf
dec
cmp
jg
pop
jbe
fiadd
mov
retf
in
hlt
in
xchg
cmp
int
jb
ins
push
or
pop
std
test
ret
add
les
dec
shl
cmp
mov
mov
xchg
add
imul
mov
mov
cld
pop
popf
jo
jg
call
loop
mov
ror
sti
mov
mov
call
nop
mov
and
movs
sub
sub
mul
and
push
push
test
loope
rcr
jp
fcom
mov
sahf
or
adc
cmps
cmps
enter
sub
mov
mov
ret
pushf
add
ds
lahf
(bad)
lahf
call
cmc
test
xchg
neg
outs
shl
test
jb
mov
xchg
cmp
and
push
into
icebp
outs
addr16
test
jnp
imul
push
pop
vpshlw
ss
test
mov
ss
mov
pop
js
mov
mov
or
mov
lods
mov
js
xor
rcr
ds
or
xchg
stc
out
out
lock
mov
subps
dec
rcr
xchg
mov
and
dec
in
fld
and
jmp
dec
add
adc
mov
daa
retf
adc
mov
leave
popf
add
dec
jb
shr
rcl
cs
(bad)
sub
mov
mov
test
lock
in
mov
call
loopne
mov
inc
pop
(bad)
xor
mov
(bad)
std
jnp
fdivp
dec
mov
stos
mov
dec
in
popf
xor
push
jg
mov
cdq
jbe
lds
mov
repz
cmp
dec
ret
(bad)
leave
jae
mov
jne
xchg
and
push
mov
pop
xchg
pop
clc
pop
inc
in
add
jp
pop
pop
movs
add
mov
fstp
add
add
mov
test
out
shl
cmp
sub
and
pop
(bad)
leave
into
dec
cdq
xor
pop
inc
jecxz
mov
dec
adc
in
in
out
mov
adc
outs
jnp
movs
jp
mov
xor
mov
jae
stc
push
push
(bad)
jno
repz
sar
imul
fwait
and
(bad)
mov
xor
or
lds
adc
or
add
mov
xor
sbb
pop
test
xor
adc
cmp
mov
mov
(bad)
ins
(bad)
jge
fdiv
jo
mov
push
lea
add
xor
mov
test
pusha
das
mov
movs
push
iret
mov
out
cwde
(bad)
cdq
jmp
dec
sbb
adc
aad
push
jne
add
arpl
mov
popa
cdq
mov
call
outs
das
dec
(bad)
leave
in
clc
push
sbb
xchg
enter
inc
dec
stc
adc
sbb
outs
mov
push
sbb
sbb
cld
mov
(bad)
inc
fbstp
mov
es
test
stos
sbb
jp
lea
cmp
xchg
jle
push
add
mov
inc
mov
lods
test
xchg
jns
sti
pusha
add
ins
jmp
mov
rcr
ins
es
pop
in
mov
in
mov
lods
mov
out
xchg
scas
inc
pop
push
outs
fimul
fimul
pop
mov
sbb
add
xor
push
std
pusha
aas
cmp
fcomi
ds
lods
cwde
lods
adc
add
lods
xchg
cmp
jl
push
enter
aas
stos
xor
imul
pop
lea
sub
xor
gs
outs
cmp
pushf
mov
dec
js
imul
sbb
mov
bound
jns
jbe
or
push
vrsqrt14ss
shl
retf
out
shl
adc
loope
arpl
inc
imul
and
outs
push
ins
lea
out
(bad)
push
mov
dec
int3
inc
mov
ret
cmp
push
aas
xlat
ja
out
jg
in
cmp
sub
lods
dec
xchg
pop
clc
sub
bound
pop
adc
add
xor
pop
mov
or
hlt
mov
sub
or
lock
js
sub
mov
push
call
aas
aaa
(bad)
stos
adc
out
nop
js
pusha
jb
jae
inc
ja
sbb
movs
adc
(bad)
push
(bad)
mov
push
sub
mov
dec
ja
xchg
dec
popa
inc
sbb
sub
or
sbb
inc
aam
dec
sbb
jg
int
in
loop
inc
ins
pop
and
jmp
jg
shl
pop
shr
dec
aad
mov
es
fdiv
ja
adc
or
push
mov
cwde
mov
adc
mov
mov
in
or
lea
pusha
xchg
xchg
aaa
jmp
in
jne
xchg
pop
lock
fild
and
aad
dec
pop
aas
lds
xchg
xlat
or
push
stc
or
jmp
dec
sar
in
cmps
outs
mov
cdq
sub
xchg
out
push
or
xchg
xchg
mov
or
stc
xchg
es
xchg
pop
ret
inc
mov
idiv
mov
das
jno
daa
daa
xor
dec
mov
bound
mov
push
stos
adc
out
adc
arpl
mov
bound
aaa
sbb
mov
mov
xor
movs
loope
imul
xchg
jae
mov
push
pop
scas
mov
call
jl
push
adc
int
push
leave
and
and
pcmpgtd
test
xor
enter
retf
test
ins
pop
test
cmpps
add
mov
fldenv
rol
push
ret
ins
dec
push
push
xchg
inc
jns
div
mov
and
xor
test
xor
jno
aaa
mov
xchg
mov
xchg
mov
push
fidivr
mov
jno
std
dec
lock
push
pop
jle
mov
popa
out
sbb
int
mov
xor
sub
popa
add
add
add
fnsave
jbe
dec
mov
fsub
inc
inc
mov
pop
ins
push
popa
lds
daa
xchg
test
mov
adc
inc
cmps
mov
push
aam
mov
jo
add
ins
movs
mov
lds
pop
aaa
xchg
movs
aaa
shl
loop
retf
add
out
(bad)
fisub
push
sbb
pop
pop
dec
popa
mov
scas
lods
or
jmp
lods
pop
sbb
aam
mov
lea
in
or
sub
js
pop
aam
adc
mov
ja
scas
movs
push
retf
hlt
mov
in
retf
lods
sbb
jb
es
mov
xlat
pop
fcom
mov
dec
xchg
xchg
test
push
bound
xor
fdivr
add
fdiv
das
in
rcl
xchg
mov
ja
inc
(bad)
jle
xchg
gs
nop
adc
fdivr
retf
jmp
jg
pop
sub
fistp
push
out
outs
push
or
sahf
pop
rcr
imul
xchg
pop
add
pop
adc
(bad)
mov
stc
dec
call
adc
push
sar
cmp
dec
push
jns
mov
mov
fstp
pop
xchg
and
mov
adc
(bad)
xor
cmps
les
popa
add
pop
ins
sub
push
adc
cmps
cld
mov
jb
jg
xchg
jecxz
loope
(bad)
cmps
fmul
fs
xchg
push
add
in
test
push
and
push
pop
dec
lods
pop
and
or
bound
mov
mov
loopne
pop
mov
enter
push
jne
sub
pop
cld
pop
jp
adc
stc
ret
sbb
movs
call
or
push
popa
das
sbb
clc
pusha
out
mov
jg
mov
and
int3
int3
std
dec
pop
lods
push
push
outs
cmc
in
mov
sub
add
dec
jmp
popa
fiadd
inc
mov
fnstsw
mov
je
bound
pusha
adc
mov
fwait
xor
or
pop
outs
imul
stc
pop
stc
push
xor
pop
inc
cwde
adc
inc
jb
push
in
jmp
push
cmp
add
xor
es
out
inc
scas
jp
mov
ret
aaa
test
ret
mov
xchg
in
and
aad
sub
push
dec
clc
pop
inc
jbe
rol
out
mov
test
data16
imul
ret
call
popa
xor
outs
push
jmp
xor
(bad)
jp
les
pusha
js
inc
push
inc
or
add
add
int
xchg
leave
mov
sbb
in
shl
pop
clc
sti
mov
add
cmp
xor
jge
mov
outs
xor
sbb
fmul
inc
mov
cmp
es
(bad)
fiadd
retw
out
in
ins
int
call
or
inc
imul
jmp
jb
dec
mov
jae
mov
je
fisubr
retf
adc
xchg
or
push
icebp
into
mov
clc
pusha
out
cld
jno
push
xor
outs
pop
lods
rcl
lahf
and
xchg
mov
push
jmp
sbb
sbb
xchg
xor
mov
aad
repnz
jl
sbb
shl
test
pop
xor
jno
sbb
shl
inc
movs
popf
mov
xacquire
mul
nop
mov
and
xchg
push
pop
push
call
neg
daa
inc
cmps
je
ja
mov
adc
or
jp
and
cs
and
mov
xchg
popf
sbb
stos
pop
sbb
fcmovnu
add
leave
pushf
hlt
int3
pop
scas
push
pop
cmp
mov
test
cmp
add
outs
push
push
outs
mov
jl
or
dec
inc
sahf
push
adc
jecxz
xor
pop
or
dec
shl
inc
das
sub
leave
pop
aad
fwait
jae
cmp
dec
mov
test
jmp
sub
dec
das
add
stc
add
push
push
dec
loopne
mov
inc
rcr
jmp
or
mov
pusha
pop
movs
push
dec
pop
push
daa
mov
adc
retf
sub
adc
lahf
mov
xchg
mov
and
pushf
jmp
xchg
(bad)
sbb
pop
and
push
pushf
icebp
cwde
daa
add
in
ins
lahf
fcomip
jo
lahf
pop
mov
pop
cmp
xchg
pop
sbb
lods
mov
std
cwde
cmps
xchg
(bad)
pop
mov
push
sahf
stos
int3
mov
xchg
mov
push
dec
popf
lds
sbb
mov
imul
jmp
inc
outs
xor
cmp
xor
jnp
outs
and
(bad)
pop
in
dec
jne
data16
shr
jl
popa
mov
ja
std
fdiv
adc
aad
cdq
je
jge
call
jg
stc
push
xlat
inc
mov
mov
test
out
ins
jge
ss
pop
test
cmps
sar
in
data16
sub
xor
dec
lods
mov
gs
ret
scas
dec
sub
test
push
sub
pop
cmp
adc
jecxz
mov
mov
and
jno
ds
ror
stc
cmp
fcomp
cdq
je
push
inc
dec
sub
mov
fiadd
mov
adc
mov
je
enter
cmp
inc
mov
push
xchg
cmc
mov
mov
push
dec
test
daa
cwde
xchg
add
mov
dec
or
or
pop
mov
jno
pop
pop
cli
or
rcl
pop
daa
(bad)
mov
inc
movs
(bad)
bound
or
pop
pop
adc
int
call
xor
jne
sub
mov
xchg
xor
in
and
or
add
inc
mov
fsubr
adc
cmp
cmp
sbb
mov
jae
inc
imul
es
and
sahf
cmp
aas
or
ja
neg
inc
jnp
pushf
out
push
test
int
add
jle
mov
fidivr
bound
dec
sub
lahf
pop
popa
jl
jne
cli
inc
push
popa
adc
jl
mov
dec
in
pushf
xchg
push
mov
(bad)
mov
sbb
popa
sub
pop
xchg
and
aam
cmp
add
aas
mov
pshufb
xor
mov
and
add
les
jb
pop
rcr
xor
pop
leave
xchg
fst
and
ror
clc
xchg
std
add
in
dec
retf
enter
nop
adc
movs
sub
adc
les
stc
arpl
pop
out
push
xchg
dec
mov
mov
pop
shl
jo
inc
pusha
lea
xor
ja
mov
pop
ret
cmps
or
inc
jno
lds
imul
mov
xlat
or
add
bound
dec
aam
js
inc
ins
mov
or
xor
mov
and
jp
lea
or
or
or
icebp
test
mov
pop
ror
jne
xchg
mov
data16
clc
adc
push
mov
sbb
sub
aas
int
inc
in
pop
dec
jecxz
jl
lahf
icebp
mov
mov
scas
imul
rcr
mov
push
stos
pop
popa
pushf
stos
mov
dec
mov
retf
adc
inc
es
out
xlat
fwait
jo
shl
xchg
(bad)
and
cmps
in
shr
fnstenv
jge
mov
call
or
shr
imul
adc
push
sub
cdq
xchg
daa
mov
dec
rcl
mov
sub
mov
cmps
push
loop
mov
scas
inc
push
inc
dec
scas
inc
mov
(bad)
out
mov
mov
mov
and
xchg
cmc
pop
fadd
add
push
pusha
es
adc
push
mov
retf
aaa
fbstp
or
mov
xchg
cmp
shl
cmp
xchg
mov
fsubr
mov
nop
dec
cmps
je
xor
(bad)
fcomi
pop
imul
or
ret
pop
fdiv
jp
mov
add
sub
pusha
pop
push
gs
jns
and
mov
cmp
lea
daa
mov
(bad)
lock
inc
xchg
(bad)
sub
fwait
jbe
inc
fistp
jmp
test
ret
shr
jnp
mov
xchg
sub
dec
pop
into
dec
ror
bnd
jmp
pop
pop
and
cmps
pushf
jg
xlat
aaa
sbb
fist
push
pop
xor
stc
ins
dec
iret
sbb
push
or
jbe
ds
fnstenv
sub
or
leave
lock
adc
loop
fwait
mov
push
daa
pusha
pusha
mov
ret
push
add
mov
mov
dec
pop
stos
inc
rcr
xchg
test
xor
pop
mov
sub
adc
mov
add
cdq
mov
repnz
clc
jne
imul
add
xchg
sbb
lods
xor
arpl
mov
or
ins
pop
mov
loope
in
mov
add
pusha
jb
mov
sbb
and
cmp
ror
xchg
ror
rcr
sbb
cmp
stos
aam
psubsw
pop
cmc
cmp
lds
mov
pop
xlat
ss
mov
sub
stos
stos
inc
sbb
mov
and
(bad)
pop
or
sbb
xchg
fdiv
scas
and
movs
leave
outs
int3
push
scas
pop
cmps
and
cdq
mov
xchg
lods
jb
stos
clc
hlt
rol
pop
add
call
sub
je
jmp
mov
fdivr
lds
mov
in
xchg
pop
(bad)
mov
mov
add
xchg
cli
retf
outs
dec
push
jp
arpl
retf
mov
shl
or
add
(bad)
adc
pop
dec
sti
out
xchg
mov
jno
inc
inc
movs
movs
retf
mov
jmp
lahf
je
nop
jne
sub
fld
scas
ss
and
pop
jae
stos
inc
retf
mov
xchg
sub
retf
xor
jmp
shl
in
inc
test
dec
xor
lea
fiadd
adc
pop
inc
ins
js
push
pop
adc
into
sbb
jb
xchg
jmp
and
jmp
add
cmp
mov
and
test
jns
mov
lea
inc
push
in
dec
pop
fiadd
cli
inc
fld
(bad)
jg
mov
pop
xchg
adc
mov
jge
mov
jbe
cwde
loope
stc
scas
inc
les
test
xor
stos
xchg
mov
jbe
std
(bad)
call
mov
fistp
jmp
pop
mov
mov
and
inc
cs
icebp
sahf
into
mov
mov
loope
imul
cmc
popa
icebp
mov
sbb
imul
and
loop
cmp
cld
push
add
movs
add
add
lea
fnstenv
sbb
leave
aas
mov
inc
mov
ds
clc
jb
jmp
cmp
mov
ror
fwait
call
fwait
jne
push
lahf
pop
sub
xor
sbb
loope
movs
add
rcr
mov
bnd
add
push
dec
sti
stc
jg
gs
xor
and
arpl
lds
js
stc
jb
dec
push
xlat
fnstcw
xor
scas
mov
xchg
movs
(bad)
xor
or
push
push
lods
in
dec
ror
ficomp
xchg
sbb
in
(bad)
imul
push
jbe
test
mov
push
cmp
dec
or
pop
dec
pop
inc
dec
bound
add
ficomp
into
in
loop
ins
sub
hlt
push
stc
sub
and
push
neg
lds
mov
jae
xor
sub
xchg
cmp
adc
jl
xchg
std
jo
in
sbb
frstor
xchg
sahf
shl
test
fst
ret
dec
and
sub
fnstsw
adc
ficom
popa
dec
and
popa
mov
pop
je
stc
fdivr
icebp
mov
cmp
in
adc
out
lods
sahf
xor
cmp
mov
shl
xchg
inc
inc
outs
dec
and
and
mov
dec
iret
loopne
fprem
fdiv
push
aaa
mov
or
repz
xchg
sub
push
sub
outs
outs
pop
dec
adc
fistp
xor
push
ss
and
xchg
sti
jnp
mov
ins
std
movs
leave
inc
ror
mov
or
ffree
or
sti
cdq
jl
pop
adc
sub
das
xchg
cmc
dec
push
movs
mov
pop
and
or
leave
(bad)
ja
jl
lock
fmul
ret
int3
ja
xlat
dec
sbb
xchg
pop
jmp
daa
pusha
jecxz
pop
cld
icebp
ds
adc
mov
lods
shl
push
mov
adc
xchg
lods
and
jo
pop
cmp
in
mov
int3
or
push
adc
and
and
into
inc
iret
aaa
mov
test
mov
pop
lds
push
cmp
cmp
jb
out
imul
mov
fbstp
pop
jns
push
mov
xlat
sbb
in
pop
pop
inc
in
jns
jecxz
popa
aam
(bad)
xor
out
cmp
pop
pop
pop
test
dec
sub
xlat
xor
xchg
fist
pop
fsubr
sbb
inc
pushf
xlat
sbb
shr
add
and
mov
test
mov
in
ret
dec
add
xor
inc
push
popa
hlt
in
mov
movs
inc
popf
cmp
es
sub
and
das
pop
mov
int
xlat
cmp
imul
movs
mov
or
mov
push
in
test
loopne
jp
clc
hlt
ror
dec
ins
sar
pop
fldenv
fs
xchg
clc
(bad)
enter
int
lods
mov
and
loope
mov
or
xor
lods
lock
inc
mov
inc
inc
cs
pop
dec
movs
lock
mov
out
inc
stos
mov
rol
add
add
xchg
lods
test
call
mov
dec
loope
xchg
out
mov
xchg
btr
fbstp
or
aam
pop
leave
pop
(bad)
call
jp
es
xor
dec
loopne
pop
imul
loopne
xor
jmp
pop
mov
cmp
rcr
mov
fst
in
sub
or
fs
mov
out
mov
leave
mov
push
pop
movs
movs
mov
cli
cmc
fidivr
pop
xor
sub
scas
sbb
xor
cdq
stos
fsubr
jbe
jp
shr
pop
fiadd
sahf
bound
and
dec
push
add
xchg
xchg
dec
add
push
mov
sbb
mov
dec
ins
pop
jecxz
aad
(bad)
push
daa
sbb
inc
les
test
sub
mov
cwde
scas
xchg
ja
push
ins
outs
es
fs
push
mov
xchg
inc
and
mov
imul
cmps
xor
mov
xor
test
scas
popa
jnp
mov
push
and
movs
add
shr
mov
mov
xchg
sbb
rcr
movs
cmp
fild
xor
outs
popa
in
mov
retf
xor
mov
fbld
stc
xor
add
jp
push
inc
ret
pop
xor
xor
out
int
mov
lods
or
sbb
test
cld
movs
aad
unpckhps
popf
cmps
bound
inc
push
mov
aad
in
sub
cs
mov
push
add
imul
fcmovb
(bad)
in
shr
fnstenv
mov
popa
loope
xchg
mov
sub
mov
and
add
dec
shr
xor
push
das
jle
cmps
hlt
leave
lock
and
sbb
pop
xchg
sbb
dec
and
loop
das
or
xor
mov
push
loope
ins
adc
sbb
int3
stc
das
das
fdivr
mov
and
xchg
sub
dec
mov
lock
rcr
jnp
loope
in
xchg
jecxz
ins
inc
sbb
add
arpl
jnp
bound
retf
ins
cmp
pop
pop
cmp
shl
das
inc
jne
mov
(bad)
retf
jbe
inc
and
pusha
loope
jb
addr16
mov
mov
cdq
sub
les
sub
movs
inc
aaa
lods
pop
sbb
int
fld
xchg
mov
xor
mov
sbb
fadd
test
aad
push
push
imul
cmps
(bad)
xchg
pop
test
lea
daa
mov
xor
add
mov
addr16
mov
push
or
mul
loopne
pop
into
fidivr
or
popa
in
jmp
js
js
or
mov
int
dec
imul
pop
or
or
dec
out
cmp
xchg
jge
mov
arpl
push
add
cmp
mov
movs
(bad)
cdq
cmovbe
mov
jns
or
clc
lods
jp
adc
clc
add
pop
les
mov
mov
cmp
inc
pop
std
retf
lods
mov
xchg
imul
outs
jb
add
or
pop
nop
xchg
sahf
push
mov
push
add
int3
push
pusha
cld
fnsave
mov
ror
add
pop
cmp
mov
cmc
mov
sub
aaa
pop
iret
out
bound
cmp
mov
lahf
mov
shl
push
(bad)
jg
jae
push
add
adc
(bad)
faddp
xlat
mov
push
cmp
test
rol
sbb
(bad)
outs
and
dec
popf
jae
nop
mov
lock
repz
cmps
std
mov
mov
test
cmps
outs
xor
fwait
dec
add
test
cmp
retf
push
ror
jecxz
iret
out
mov
ror
nop
add
xchg
inc
pop
mov
call
inc
bound
inc
mov
push
adc
ret
iret
mov
dec
test
fldenv
shr
pop
lods
imul
add
inc
add
stc
inc
shl
cmp
push
mov
data16
adc
pop
inc
or
mov
mov
fadd
or
out
or
imul
(bad)
sahf
cmp
ja
push
jno
adc
pushf
sub
pop
inc
mov
or
or
cmp
retf
iret
retf
sar
(bad)
xor
adc
aad
mov
jno
push
(bad)
dec
movs
arpl
aad
jp
push
std
dec
cs
js
test
sub
add
sub
jle
sti
cwde
mov
movzx
xchg
sbb
xchg
test
sub
jns
fs
jmp
mov
cmp
jp
fcom
outs
cmp
mov
xchg
mov
mov
call
mov
test
iret
loop
jno
mov
movs
aad
xchg
icebp
(bad)
mov
add
or
out
nop
gs
fld
xchg
shl
icebp
xor
in
inc
inc
neg
fidiv
pop
movd
rol
mov
jne
push
bnd
mov
imul
add
sub
inc
jnp
pop
movs
jnp
or
add
cld
pop
loop
test
(bad)
rcr
mov
pop
fs
mov
jo
sub
sbb
(bad)
movs
loop
add
adc
aam
cwde
xchg
pop
xchg
xchg
jne
pop
scas
retf
dec
mov
test
retf
add
pusha
push
bound
lahf
cmc
call
stos
aad
or
mov
cmps
cmps
call
(bad)
fadd
mov
push
sub
and
adc
jnp
mov
pop
lods
jno
push
and
scas
jp
mov
cmps
add
fiadd
add
cmp
ins
and
xchg
push
in
stos
xchg
mov
mov
ds
mov
lahf
stos
inc
in
sbb
or
dec
add
sbb
pop
push
imul
xor
imul
aaa
or
mov
push
cmp
sbb
ret
ja
test
fimul
pop
retf
adc
or
sbb
movs
shr
vpunpckldq
das
or
push
and
into
jns
fiadd
(bad)
call
sub
adc
sar
in
add
mov
jmp
inc
call
xor
mov
inc
in
daa
push
push
inc
ret
pusha
popa
sahf
push
jbe
hlt
and
push
(bad)
rcl
pop
sti
xchg
jae
inc
mov
inc
shl
push
clc
test
adc
sub
(bad)
mov
sbb
cmp
retf
xor
push
or
jns
dec
test
icebp
mov
outs
sub
in
ret
mov
fnstsw
add
mov
jmp
cmp
inc
outs
mov
adc
stos
fiadd
rcr
sub
jmp
in
fbld
in
and
xor
or
in
push
xlat
out
or
mov
lea
js
lds
xor
or
inc
xor
jge
test
shr
mov
cmp
cmp
pop
cmp
sbb
mov
push
fstp
add
mov
popf
jae
stc
fscale
addr16
pop
mov
shr
jne
or
shr
rcr
sbb
out
jnp
sti
adc
fdivr
jns
pop
aaa
in
adc
add
mov
add
add
mov
ret
sbb
and
sbb
or
inc
or
out
cld
adc
and
mov
rcr
out
adc
movs
out
stc
sbb
push
gs
outs
xor
outs
dec
jne
pop
fstp
ins
cmp
sbb
dec
adc
mov
pop
push
pusha
mov
xchg
push
je
mov
ds
lahf
sbb
dec
popf
pop
shl
sbb
iret
pop
popf
xchg
retf
outs
cmc
add
lods
xchg
cmps
mov
push
sub
je
nop
sub
sahf
dec
mov
std
mov
icebp
jns
adc
jnp
dec
adc
mov
jge
enter
stc
mov
aaa
retf
xchg
xor
ret
mov
jge
retf
jp
cs
adc
xor
mov
out
mov
(bad)
test
ror
inc
lods
mov
shr
popf
pop
pusha
or
push
add
popa
mov
inc
test
sbb
repnz
lds
adc
movs
mov
cmps
shl
push
xchg
mov
xchg
xor
js
jecxz
add
or
ror
adc
retf
mov
(bad)
repnz
cmp
movs
pop
mov
fcmovnu
mov
and
sar
adc
and
inc
aaa
test
mov
addr16
in
inc
push
mov
push
sbb
ds
adc
fisttp
(bad)
rol
dec
mov
push
js
jecxz
push
push
in
jbe
or
inc
dec
scas
out
iret
mov
dec
int3
mov
or
movs
push
mov
mov
or
push
ins
lds
mov
mov
dec
jmp
in
mov
das
push
addr16
xor
push
add
jecxz
sbb
mov
test
and
sar
inc
push
and
or
mov
gs
imul
xlat
or
or
inc
movs
adc
ret
mov
or
sub
mov
les
inc
push
aas
mov
ins
cmc
pop
fstp
stos
movs
sbb
data16
lea
les
lods
loopne
add
jno
and
jecxz
dec
outs
sahf
shl
mov
xor
push
mov
jae
sbb
and
lea
jns
test
push
xchg
and
cmp
jns
mov
loope
pop
xchg
loopne
jae
nop
mov
cmps
test
mov
(bad)
xchg
fnstsw
jle
imul
and
or
(bad)
std
call
cmps
xchg
add
out
jne
sub
rcr
call
inc
push
imul
mov
int3
sbb
scas
aad
pop
pop
xchg
sbb
dec
mov
cmp
mov
stc
push
stc
adc
out
daa
add
out
pop
and
addr16
pop
dec
mov
sbb
fisubr
test
xor
push
jne
jmp
fst
mov
jno
push
std
add
ins
jle
repnz
div
jno
mov
adc
inc
and
adc
inc
or
mov
cwde
push
call
test
call
pop
jns
stos
xchg
mov
adc
inc
mov
mov
sub
es
jecxz
fstp
add
fwait
imul
pop
ss
out
xor
rcl
inc
in
jle
dec
rol
hlt
fwait
mov
xchg
inc
ret
not
sub
xor
fimul
and
mov
cwde
loope
cli
inc
aas
and
bound
mov
inc
inc
jle
dec
jg
scas
adc
jg
das
pop
clc
test
cmp
inc
out
test
loop
add
add
cld
(bad)
adc
xor
xchg
push
xchg
mov
push
or
stc
loope
hlt
dec
mov
or
xor
mov
mov
mov
rcr
(bad)
sub
push
dec
mov
enter
test
inc
jb
push
mov
in
xor
js
shld
cmp
sbb
lds
out
(bad)
aaa
push
repnz
mov
mov
jge
push
push
popf
mov
inc
gs
inc
pop
or
inc
hlt
(bad)
cmp
cdq
data16
not
movs
loop
sub
test
lahf
adc
pop
sahf
fidiv
lds
add
jge
xchg
dec
and
ficom
cwde
fdivr
(bad)
or
xor
sub
xchg
mov
ss
push
int
pop
mov
faddp
push
dec
and
out
scas
in
xchg
sbb
fld
data16
push
pop
pusha
mov
nop
sub
mov
je
fld
jge
xlat
and
pop
sbb
mov
dec
cmp
(bad)
and
ja
mov
mov
fadd
lods
jne
xlat
sub
sub
cmc
aas
iret
inc
pop
jnp
cmp
xchg
aas
and
ins
add
inc
mov
imul
repz
inc
add
leave
xor
fs
jo
mov
outs
(bad)
aaa
jns
out
out
dec
xchg
hlt
xor
je
push
ret
shr
inc
shr
aad
and
sbb
fstp
xchg
lds
mov
stc
hlt
enter
movs
lock
repnz
sbb
ror
xor
sahf
shl
push
or
rol
mov
rcr
mov
jne
and
dec
xlat
ror
xor
fcom
test
fwait
cld
stc
popf
add
cmc
mov
push
out
jmp
fs
adc
mov
dec
or
or
sub
or
pop
(bad)
arpl
or
mov
call
cmp
test
shl
cs
daa
xchg
ds
or
push
and
adc
mov
or
cmp
xchg
ret
nop
push
mov
(bad)
jmp
adc
mov
or
pop
add
pop
cdq
cmp
mov
cmps
(bad)
jmp
jae
cmp
lahf
pop
inc
inc
and
dec
sub
(bad)
push
int3
mov
add
nop
cmp
popa
xor
movs
ins
add
ss
sub
sub
scas
(bad)
not
or
cmp
mov
out
ret
loope
xor
xchg
loopne
jmp
mov
adc
dec
es
xor
dec
xchg
sbb
jmp
fiadd
mov
mov
xchg
jae
mov
les
lods
sub
out
xor
ds
jns
xor
cmp
pop
jmp
mov
sub
lock
fld
dec
aaa
cmc
pop
dec
mov
test
mov
cmps
mov
jmp
bound
enter
sbb
loopne
adc
dec
cmp
jns
dec
retf
inc
aad
mov
enter
mov
mov
push
jmp
mov
stos
loopne
outs
add
leave
dec
nop
push
int
ret
std
ret
pop
(bad)
loopne
in
ret
dec
outs
outs
or
scas
nop
sbb
loopne
pop
imul
jmp
mov
test
aas
fcom
daa
cmp
or
std
sub
mov
stc
shl
lods
jnp
add
mov
pop
cld
xor
sbb
xor
mov
jl
jb
imul
jmp
pop
outs
mov
xchg
xchg
cli
mov
or
adc
mov
add
ficom
xlat
xchg
ror
sub
cli
pop
jb
lds
inc
movs
add
sbb
push
ja
sahf
push
lods
cmp
dec
xchg
inc
cld
mov
adc
arpl
push
sbb
or
xor
inc
ret
or
sbb
pop
jo
rcl
pushf
call
pop
shr
xchg
int
icebp
dec
push
daa
pop
pushf
jmp
imul
ja
addr16
into
pop
jge
mov
cdq
fcom
sub
or
dec
nop
loopne
pop
test
inc
or
dec
inc
inc
adc
enter
int3
dec
inc
mov
mov
out
mov
inc
xor
clc
mov
(bad)
pushf
jp
and
inc
jns
imul
inc
and
pop
jle
push
inc
ins
sbb
out
adc
push
(bad)
cld
xor
or
cli
push
retf
inc
out
jg
arpl
or
mov
scas
loop
in
lahf
and
jbe
hlt
pop
mov
add
out
sahf
xor
ss
adc
rol
add
or
hlt
mov
add
push
outs
in
add
mov
fild
cmp
sub
jmp
jmp
fdiv
mov
add
es
addr16
adc
cld
mov
loope
sub
add
aad
adc
mov
mov
test
mov
dec
jo
stc
pop
int
and
test
fcomp
shl
xchg
test
bound
outs
test
jle
nop
cld
repz
mov
stos
int3
xchg
sub
sbb
movs
push
or
or
js
shl
dec
cmp
mov
add
sbb
cmc
sbb
xchg
dec
sbb
xor
push
mov
jb
and
aam
aas
cmp
jae
stc
pop
push
std
(bad)
js
and
lods
or
adc
loop
div
scas
adc
jecxz
dec
repnz
scas
adc
pop
mov
mov
and
lods
les
call
cmps
and
pushf
mov
pop
cmps
dec
push
hlt
loop
push
mov
stos
movs
xchg
arpl
sub
mov
xchg
fidivr
or
mov
add
fucomi
mov
dec
fsubr
retw
sbb
out
push
lahf
mov
(bad)
cli
push
outs
xlat
shl
rcl
ins
jecxz
mov
(bad)
je
int3
call
push
push
rcr
or
int3
or
inc
xchg
fistp
nop
or
fldcw
js
ss
fsubrp
mov
iret
cdq
lock
sub
mov
add
lods
popa
ret
call
sbb
out
xlat
sar
aas
stos
adc
dec
cwde
sti
jno
mov
dec
xlat
sub
jl
cmp
xlat
jmp
pop
xchg
mov
cld
xor
aam
loope
mov
sub
xor
jmp
in
mov
inc
adc
adc
ss
popa
std
cmp
add
test
and
add
imul
ins
mov
sub
jecxz
dec
and
outs
mov
clc
cmp
es
pop
inc
xchg
jb
movs
add
out
call
adc
loop
push
mov
lock
lahf
jbe
gs
pop
dec
cmps
xchg
call
shl
cmp
test
data16
in
push
scas
adc
or
stc
pop
sbb
push
mov
sbb
int
push
adc
adc
js
add
xchg
sbb
pop
(bad)
push
popf
add
lods
ret
repz
jge
sbb
test
imul
rcr
jmp
sub
xor
push
dec
and
mov
dec
dec
xchg
cs
(bad)
std
push
jg
add
in
clc
push
push
ret
pop
(bad)
cmp
adc
mov
sar
push
dec
icebp
xor
scas
jmp
js
(bad)
ds
and
in
mov
nop
jg
mov
jo
push
test
in
out
(bad)
sub
(bad)
(bad)
sub
or
cmc
iret
int3
mov
jne
inc
jecxz
hlt
adc
call
ficomp
xchg
popa
mov
mov
xor
jecxz
mov
repz
ret
inc
lea
leave
gs
stos
pop
xchg
pop
(bad)
stc
mov
cwde
mov
ret
mov
add
adc
popf
lds
mov
push
add
dec
lods
add
daa
test
mov
inc
ins
(bad)
imul
repz
pop
movs
xlat
out
enter
mov
mov
ficomp
jp
loop
add
nop
retf
xchg
pushf
sti
int3
outs
es
(bad)
shl
mov
push
cmp
repnz
jg
mov
cli
mov
js
mov
imul
add
into
sar
ins
je
push
retf
and
cwde
push
mov
lock
iret
xchg
in
lds
popa
mov
dec
gs
lock
into
imul
loop
dec
push
add
in
lods
scas
out
push
or
adc
outs
push
adc
sub
les
or
cmp
push
repnz
pop
ret
cmps
mov
out
loope
cwde
or
in
pop
std
(bad)
cli
(bad)
jbe
fldcw
out
xor
rcl
and
sbb
push
repz
jbe
ret
stc
into
xchg
stos
mov
(bad)
xchg
pop
push
xor
sub
cmp
jae
sbb
or
and
je
mov
push
out
jb
sbb
popa
jecxz
jae
or
pop
adc
das
jnp
je
pop
xor
add
not
mov
push
fst
das
stos
xchg
sbb
xchg
or
lock
fwait
inc
movs
mov
inc
dec
mov
mov
dec
out
dec
mov
int
loope
call
xor
mov
dec
pop
cmp
and
push
ret
mov
jno
cdq
test
jecxz
aaa
add
jb
sub
mov
sbb
ins
fsub
fnstcw
jl
sub
lahf
cwde
pop
shl
test
fistp
push
mov
cmp
adc
sub
out
sahf
pushf
xchg
bound
xor
cwde
test
sub
inc
mov
cmp
sub
movs
jg
and
rcl
loope
push
xor
xor
cmps
mov
fcomp
sbb
jae
pop
add
ja
jbe
popa
lds
or
cmps
in
clc
shl
dec
jl
jno
aas
enter
into
and
hlt
mov
pusha
sbb
lock
pusha
mov
(bad)
cmp
mov
pop
jnp
js
mov
dec
add
icebp
stos
(bad)
call
xor
xor
nop
jns
xor
xchg
pop
dec
dec
aad
(bad)
out
repz
sbb
cmp
and
xchg
pop
mov
mov
popa
jmp
iret
xor
and
or
out
ror
sub
xchg
int3
fwait
movs
and
retf
int
push
mov
mov
dec
pop
xor
fadd
add
push
cli
mov
gs
push
jno
movs
imul
rcl
mov
js
inc
pusha
cmp
lods
sbb
jnp
add
xor
movs
jecxz
adc
sub
retf
mov
es
inc
punpckhbw
xor
inc
cmp
repnz
mov
ret
scas
mov
mov
xor
sbb
cmps
mov
push
push
xor
or
test
and
sahf
pop
adc
cmp
div
add
jo
mov
mov
dec
imul
cmps
scas
aad
movs
jge
inc
xlat
in
js
mov
call
sbb
and
inc
mov
pop
stos
mov
and
xor
inc
sbb
jno
or
adc
xchg
jnp
pop
in
aaa
lods
ins
add
jge
xchg
movs
add
pushf
xchg
inc
test
bound
ins
pop
jae
and
mov
in
es
movs
mov
addr16
pushf
repz
sub
and
or
and
sub
not
jbe
das
cli
lea
push
dec
ja
fcom
mov
rcr
lea
out
or
and
scas
pusha
into
pop
les
imul
inc
lea
xlat
dec
shl
jns
xchg
es
sar
push
jecxz
mov
sub
mov
lds
adc
or
nop
sub
jp
je
cmp
and
mov
lods
adc
lods
pushf
dec
xor
pop
jae
stos
jle
xchg
xchg
or
and
test
(bad)
aad
test
dec
xor
clc
sahf
xchg
leave
fabs
(bad)
mov
std
dec
stos
and
loope
pushf
repnz
xlat
loopne
cli
fisttp
call
test
xor
mov
fs
imul
int3
mov
sbb
mov
jl
fisub
pop
(bad)
int
fdivr
and
(bad)
mov
and
scas
sbb
mov
xchg
mov
stos
or
sub
xchg
mov
fucomip
ficom
mov
inc
sub
mov
add
fnsave
leave
(bad)
and
pop
cmp
jmp
pushf
pop
sbb
data16
jne
lods
call
retf
pop
fnstsw
add
cmp
mov
and
push
dec
call
jo
sbb
retf
mov
fwait
into
(bad)
adc
outs
jne
xor
xchg
je
pop
lea
xchg
push
out
fnstenv
and
cmovl
retf
fs
sbb
adc
loop
push
add
iret
xchg
jns
imul
aas
cdq
mov
mov
imul
data16
jl
jge
push
loop
cmp
jae
cmc
sub
pop
push
test
dec
iret
xor
iret
aam
pop
mov
pop
lea
js
shl
sub
jle
dec
xor
cs
test
int
dec
push
dec
xor
popf
and
xlat
or
jbe
icebp
xchg
hlt
inc
call
cmp
mov
xlat
sbb
push
add
mov
jg
rcr
mov
adc
aaa
cmp
xor
mov
dec
sti
scas
div
push
jmp
mov
xor
dec
inc
mov
cmp
scas
stos
mov
cmp
icebp
bnd
je
(bad)
push
pushf
push
mov
push
mov
jno
mov
push
jmp
and
xor
xchg
retf
(bad)
aaa
mov
aas
test
push
scas
sub
ret
mov
push
dec
or
mov
or
sub
mov
cs
scas
sub
push
aad
(bad)
sub
addr16
popa
popa
js
fst
mov
sbb
pop
mov
fcomp
cld
cli
(bad)
jle
jge
or
xchg
ficomp
mov
sbb
rol
cld
lods
pop
cli
push
jne
jnp
jae
lock
(bad)
cmp
ja
out
inc
mov
sub
xchg
sbb
aam
dec
xchg
push
sub
repnz
mov
sar
outs
push
sub
sbb
fs
pop
cld
shl
mov
push
fwait
retf
and
mov
xchg
dec
mov
inc
inc
pop
inc
dec
mov
pop
in
dec
repnz
in
mov
bound
mov
ror
js
in
push
inc
jle
mov
inc
cs
sub
sub
loope
add
addr16
out
retf
pop
daa
(bad)
xchg
cmp
or
in
ins
inc
fisubr
mov
out
clc
lods
mov
call
and
mov
push
xchg
inc
xor
mov
popf
pop
cli
jbe
and
nop
sub
rcl
test
cmp
inc
push
shr
cmp
imul
sbb
add
imul
(bad)
sub
inc
jae
aam
mov
jle
mov
leave
call
pop
test
mov
mov
enter
inc
dec
mov
push
or
dec
retf
test
scas
aam
loope
mov
push
aad
mov
jbe
inc
cmp
xchg
call
push
int3
std
mov
movs
mov
fisttp
or
out
fcmovnbe
add
jmp
cmp
int3
sar
(bad)
cmp
mov
pop
mov
(bad)
imul
div
neg
sbb
cmp
fdivr
inc
mov
lock
mov
fcomp
inc
mov
inc
pop
xchg
movs
daa
pop
or
popa
dec
fs
and
cld
mov
push
cmps
push
std
dec
jle
add
add
loope
push
add
and
idiv
jle
in
ds
ss
mov
sub
xchg
iret
inc
rol
out
imul
mov
cmp
(bad)
mov
pop
sbb
hlt
pop
gs
mov
outs
dec
adc
xchg
cmp
pop
xor
call
push
mov
repnz
inc
nop
popa
mov
mov
(bad)
mov
mov
retf
xor
arpl
push
out
or
pop
cwde
jbe
and
in
outs
add
mov
xchg
(bad)
pop
pop
sub
inc
inc
cmp
fs
mov
dec
mov
xchg
(bad)
fidiv
nop
retf
and
push
outs
sub
jbe
jmp
sub
cmp
bound
addr16
sbb
or
jns
lods
pop
mov
mov
loopne
mov
sub
xchg
test
cmps
adc
rol
dec
shl
pushw
ret
mov
shl
enter
jle
sub
rcr
rol
pop
stos
retf
outs
inc
adc
sbb
data16
gs
(bad)
popf
cld
dec
sub
(bad)
sbb
or
fmul
in
dec
adc
pop
jle
mov
adc
mov
sbb
cmp
cmp
mov
adc
pop
and
stos
or
lods
sub
addr16
test
lfs
xchg
jp
lahf
sbb
jecxz
hlt
lods
pop
in
in
sbb
mov
jno
dec
jae
cli
sar
enter
xchg
fstp
inc
mov
adc
leave
sub
jno
jmp
sti
(bad)
fisttp
adc
xchg
rcr
pop
test
xchg
pushf
and
(bad)
loop
imul
cmp
loopne
mov
push
dec
mov
inc
imul
std
adc
pop
add
popf
mov
pop
imul
neg
jp
lods
mov
js
shl
mov
pop
jle
jmp
xor
inc
jle
push
movhlps
popf
inc
dec
les
lahf
lods
test
cmp
(bad)
dec
cmp
pop
push
push
xchg
sbb
adc
int
mov
inc
sub
push
xor
call
cmps
js
push
shl
mov
icebp
mov
push
lahf
add
pop
ret
je
xchg
test
jmp
cmp
push
clc
push
xor
xchg
adc
push
push
bound
gs
fistp
push
xlat
test
mov
jno
inc
ins
or
pop
pusha
into
xchg
push
(bad)
cmp
xor
dec
scas
ja
inc
js
sbb
xchg
mov
movs
dec
sar
shl
sbb
sbb
push
imul
jecxz
adc
cmp
(bad)
iret
pop
push
adc
jne
push
(bad)
xor
jmp
mov
stos
jnp
outs
jmp
pop
inc
loop
(bad)
lock
scas
xlat
jb
inc
xchg
daa
cwde
popa
jbe
es
mov
rcr
ret
ins
push
dec
add
ficom
fcmovu
(bad)
mov
mov
fucomp
je
push
cmp
(bad)
pop
jg
sub
in
sbb
jmp
jns
(bad)
retf
test
pop
mov
mov
mov
dec
cs
add
scas
nop
inc
jb
push
add
popf
pop
pop
fist
mov
pop
jmp
(bad)
call
data16
int3
inc
hlt
xor
lods
cmp
inc
dec
push
dec
sbb
and
in
pop
add
xchg
pop
ins
ins
ja
mov
hlt
sbb
push
pop
inc
and
add
ret
sbb
or
adc
push
jmp
jmp
jb
stc
int3
pop
jbe
mov
inc
adc
jle
xchg
xchg
mov
or
dec
test
arpl
aas
pop
mov
jno
es
or
cwde
or
outs
test
and
mov
pop
xor
pushf
push
sti
jmp
fisub
mov
cmp
cli
lahf
test
not
in
push
mov
js
stos
mov
rcr
or
xchg
lds
xchg
test
test
xchg
test
test
xor
xchg
repnz
mov
les
mov
pop
xor
fdiv
leave
inc
cwde
or
xor
cwde
add
xlat
ins
lahf
ins
pop
xlat
mov
push
fsub
mov
outs
sti
mov
adc
xchg
hlt
push
stos
inc
in
enter
pop
sbb
sbb
jbe
ror
sub
scas
rcr
inc
pop
sbb
push
dec
lar
and
cdq
or
stos
and
fdivr
inc
fxch
(bad)
aaa
xor
jnp
mov
cli
mov
popa
in
xor
dec
cmp
mov
xchg
js
fldcw
imul
fxch
inc
pushf
aad
(bad)
sbb
in
ds
rcr
push
xor
inc
xchg
into
and
rcr
and
cmp
xor
repnz
sub
data16
pop
pop
jge
mov
lds
leave
mov
jo
in
in
jecxz
or
inc
inc
push
jg
and
mov
test
repz
sub
out
mov
scas
jmp
fwait
mov
sub
lods
push
mov
cs
jmp
adc
push
jg
mov
sub
push
loopne
(bad)
std
pop
xchg
cwde
mov
retf
loopne
cmp
inc
or
pusha
hlt
or
dec
shr
sbb
aas
jl
add
rcl
in
imul
jmp
in
jns
jb
in
mov
and
int
push
cdq
ror
mov
jnp
xlat
add
add
loop
sar
das
lods
scas
sub
out
icebp
cli
xchg
adc
jle
jle
jl
je
test
push
push
mov
scas
cmps
dec
jne
mov
pop
les
cmp
pop
and
mov
or
lods
rcr
call
into
or
rcl
sub
outs
mov
gs
shl
dec
mov
fstp
in
imul
leave
push
repz
xchg
mov
ficom
ins
mov
xor
inc
adc
or
and
data16
das
xor
cmp
xchg
sub
pop
xor
je
inc
sahf
jns
mov
adc
and
and
rcl
mov
mov
add
add
and
or
xchg
fsub
sti
in
out
push
mov
pop
adc
push
push
jno
push
inc
pop
imul
in
std
aad
loope
sbb
mov
rcl
es
dec
in
out
push
addr16
mov
cmp
sub
test
enter
or
sub
out
push
es
imul
shr
mov
pop
imul
(bad)
call
xchg
adc
into
retf
push
test
shl
int
retf
mov
push
dec
xchg
cwde
jae
xor
jae
cmp
sub
jae
mul
cmp
dec
add
fld
sbb
dec
inc
inc
mov
dec
cdq
mov
pop
js
lods
clc
cmp
and
nop
ja
retf
dec
neg
cmp
jne
outs
ficom
int
aam
out
jbe
ins
cmp
xchg
pop
lods
stc
out
xor
aas
inc
jmp
les
or
ja
xchg
xor
mov
xchg
xor
push
pop
jae
mov
mov
mov
es
mov
add
rcr
sti
scas
std
int
push
popa
pop
add
bound
mov
fisub
cmps
enter
push
mov
adc
dec
adc
movs
cli
lds
aad
ins
in
popf
push
or
mov
fmul
(bad)
jecxz
sub
adc
push
fidiv
jle
das
std
mov
mov
es
retf
push
sbb
(bad)
jl
xor
inc
sub
pop
inc
fiadd
push
add
mov
nop
xor
mov
daa
daa
retf
movs
and
shr
test
inc
sbb
stos
dec
adc
js
scas
retf
repz
popf
scas
pop
test
jle
gs
push
mov
inc
or
adc
mov
js
pop
dec
cmp
dec
or
jmp
mov
add
and
(bad)
retf
loope
out
jne
mov
ret
mov
jbe
(bad)
leave
pop
mov
out
popa
pop
lods
inc
xchg
call
fs
popa
daa
or
xchg
call
push
dec
loop
lods
and
aad
push
repnz
fs
xchg
fcomp
cmp
cmp
adc
mov
aas
dec
pop
push
in
sub
retf
push
gs
push
mov
add
retf
leave
bound
jbe
shr
and
inc
mov
movs
jno
and
cmp
sahf
or
push
in
and
stc
bound
cld
mov
lahf
movs
add
mov
stc
fs
call
cli
mov
sbb
jne
fcmovne
stos
inc
cli
mov
retf
in
sbb
(bad)
cmps
fdiv
daa
test
mov
in
sbb
push
adc
int3
fcomp
sar
repz
aad
lods
popf
(bad)
retf
jb
or
jp
inc
xlat
xor
pop
inc
push
dec
outs
das
xor
test
add
mov
sbb
jbe
pushf
loope
sub
pop
out
fs
je
cmp
cmp
xchg
dec
add
enter
inc
sbb
gs
push
and
add
(bad)
mov
lahf
pushf
push
fnstcw
xchg
mov
sar
outs
jb
leave
loopne
and
mov
hlt
stc
cli
mov
test
(bad)
mov
jge
aad
out
xchg
(bad)
xlat
fistp
lods
outs
nop
jno
pop
pop
dec
(bad)
jno
das
push
ret
and
or
adc
inc
ds
mov
imul
jp
dec
or
fwait
sbb
inc
xchg
mov
in
fst
loop
push
loope
les
scas
jns
(bad)
mov
adc
fldcw
jnp
call
mov
fild
pop
mov
xchg
adc
loope
add
pushw
out
cs
stc
retf
push
sbb
xchg
in
xor
(bad)
je
pop
hlt
mov
and
xor
mov
das
cld
lds
std
xor
sbb
inc
retf
mov
and
mov
repnz
lods
(bad)
xchg
test
mov
push
retf
or
adc
sahf
jbe
retf
je
test
xor
mov
iret
sub
sahf
mov
stos
fldenv
and
sbb
or
iret
int
inc
fwait
retf
lahf
out
or
adc
ds
int
les
call
lods
push
scas
loop
stc
mov
and
out
neg
cld
mov
sub
outs
clc
xchg
jecxz
mov
jle
mov
dec
add
jno
jle
(bad)
mov
push
push
jl
js
mov
mov
cmc
cmps
mov
scas
in
retf
imul
or
inc
(bad)
mov
movs
inc
and
in
cmp
dec
jb
xor
cmp
push
call
xchg
test
xor
mov
out
push
aam
dec
(bad)
std
scas
dec
mov
add
fs
mov
stos
in
mov
ret
dec
sbb
arpl
(bad)
fnstenv
arpl
sbb
jl
push
mov
aad
pinsrw
sahf
jle
sub
popa
test
mov
fcmovnb
pop
lods
or
int3
div
xchg
int3
test
call
pop
popf
inc
add
pop
push
inc
shr
fsubr
sahf
pop
cmps
push
xchg
je
jbe
sbb
add
aad
loopne
sbb
pushf
mov
fdivr
es
shl
cmps
cmc
or
(bad)
lods
xchg
sti
sub
adc
std
push
mov
push
xchg
or
cmp
inc
or
ss
outs
pushf
pop
ja
mov
add
sub
cmp
sub
xor
(bad)
int
or
ret
cmp
jns
(bad)
dec
stos
jp
retf
retf
or
xchg
hlt
adc
xchg
leave
gs
xor
adc
mov
shr
sub
sbb
pop
sub
push
mov
sbb
pusha
sub
je
xor
test
outs
(bad)
jns
ror
add
pusha
push
jge
in
jle
(bad)
int
jbe
fmul
jnp
dec
aaa
xor
inc
pushf
dec
sub
push
xor
mov
inc
pop
xor
sbb
fcomp
adc
sub
or
mov
xchg
add
in
imul
push
mov
test
jg
sahf
xor
pop
jnp
and
in
neg
call
jnp
ds
fmulp
fsubr
int3
cmp
sub
mov
dec
fild
push
dec
mov
push
push
iret
lahf
inc
cmp
add
sbb
adc
jecxz
iret
ficomp
aaa
xor
frstor
adc
xchg
dec
inc
xchg
aaa
retf
and
lds
pushf
inc
xor
and
or
ins
clc
cld
xor
sti
and
cmp
push
mov
sub
shrd
popa
cmp
ins
lock
ret
xchg
iret
inc
pushf
xchg
fild
mov
gs
adc
out
push
data16
fsub
inc
inc
pop
adc
cmp
cmp
or
daa
stos
dec
bound
pop
sbb
ins
xchg
mov
pop
call
pop
mov
mov
call
fisttp
cmp
int
clc
dec
jo
mov
xchg
xchg
movs
mov
daa
repnz
fld
jl
mov
test
retf
outs
ret
and
jmp
test
cwde
adc
retf
and
sub
(bad)
fidivr
and
mov
inc
push
push
enter
jmp
ins
dec
adc
out
ret
iret
xchg
js
xor
mov
dec
adc
xchg
push
pop
rcl
push
out
lods
mov
mov
mov
ds
and
arpl
mov
in
fsubrp
jnp
das
jge
push
popa
es
test
xor
iret
dec
int3
or
nop
push
jmp
jns
mov
jo
adc
sbb
std
inc
test
and
push
cs
jecxz
rcr
int
lock
mov
add
sbb
and
in
aaa
adc
fsub
aas
fxch
mov
dec
lea
in
test
inc
adc
out
icebp
xchg
jnp
mov
push
sahf
xor
fadd
js
or
jnp
sbb
stc
fbld
imul
in
mov
call
inc
push
ret
pop
imul
adc
sbb
outs
sbb
ret
push
cmps
add
and
fnstcw
cmp
jbe
xchg
xchg
and
(bad)
cmc
cmp
or
movs
add
std
iret
jnp
jb
in
pushf
mov
and
outs
sbb
fstp
add
arpl
out
xchg
xor
add
adc
xchg
xchg
xor
sbb
in
dec
dec
inc
xor
ja
out
mov
not
dec
mov
jbe
mov
jmp
and
stos
fsubp
cmp
jno
push
push
pop
push
push
cmps
fwait
mov
fs
sub
cmp
dec
dec
repnz
not
shr
cmp
mov
jge
add
mov
add
push
mov
and
pop
out
sbb
and
sub
mov
or
popf
push
repz
xchg
or
cmp
dec
in
push
std
iret
shr
mov
sbb
mov
push
lock
lods
add
xor
bnd
out
stos
xchg
arpl
add
push
sbb
and
jne
daa
in
push
(bad)
jne
mov
fist
scas
mov
mov
mov
mul
(bad)
pop
push
pop
loop
int3
jp
xchg
(bad)
in
pop
lahf
in
popf
pop
mov
and
adc
movs
sub
pop
xlat
adc
int3
xchg
das
and
movs
and
cs
sub
push
lea
xor
retf
cmp
das
push
jae
scas
jmp
push
add
dec
test
pop
retf
and
inc
cmc
mov
retf
shl
adc
mov
push
pop
push
cli
lods
push
gs
test
dec
push
mov
xor
xchg
ja
xchg
fs
fstp
pusha
movs
mov
and
fwait
sbb
call
dec
pop
adc
xor
retf
mov
push
add
aam
add
inc
scas
test
inc
cmp
xchg
cwde
xchg
adc
stos
in
xchg
adc
rol
and
mov
sub
iret
add
pop
fwait
mov
push
push
es
and
pushf
test
call
popf
test
push
mov
arpl
mov
jbe
movs
xchg
jns
add
retf
sub
(bad)
cmp
and
sbb
adc
mov
dec
je
add
cmps
fs
les
add
jbe
add
adc
inc
and
mov
xor
ds
jns
inc
enter
enter
data16
(bad)
xchg
and
mov
xchg
scas
mov
pop
les
xchg
cwde
push
(bad)
pusha
mov
push
sbb
sub
movs
mov
push
scas
gs
jmp
inc
dec
mov
pop
(bad)
sar
sahf
inc
mov
sub
sub
and
jno
xchg
lds
or
int
adc
mov
xor
sbb
mov
add
enter
xchg
out
add
(bad)
std
push
xchg
xor
mov
int3
ret
push
inc
xchg
cmc
sub
jmp
fld
sub
test
xchg
sub
(bad)
mov
rcl
and
sub
in
stos
xchg
mov
call
call
push
sbb
add
cmp
int3
stc
or
cmps
jmp
jge
rol
(bad)
ss
scas
xchg
mov
pushf
div
mov
(bad)
push
mov
add
pop
call
jl
lock
lahf
ja
(bad)
mov
fnstcw
retf
mov
(bad)
cdq
ffree
lea
cmps
in
push
cmp
or
aas
out
jmp
xor
repnz
xor
sub
or
cmps
nop
adc
sbb
mov
(bad)
cs
adc
jns
daa
mov
mov
fnstcw
cmps
cmp
add
nop
shl
pop
(bad)
das
mov
ins
lahf
sub
in
pop
ret
stc
jge
mov
sbb
repnz
inc
xor
pushf
sub
cwde
jbe
or
dec
movs
cmp
fs
cmp
pop
mov
or
mov
jb
sub
mov
add
dec
aaa
cmp
es
xchg
cmp
test
bsf
lds
mov
xchg
mov
lea
dec
xlat
fldenv
or
sti
mov
xor
fwait
popa
out
xor
scas
cmp
mov
sub
cwde
loopne
(bad)
sbb
dec
outs
mov
cwde
cmp
jmp
pmaxub
mov
pop
push
sub
lods
inc
and
or
sbb
popf
push
stos
stos
ins
repz
xor
cmp
mov
inc
mov
mov
repz
in
sub
xchg
jecxz
mov
les
mov
popa
add
pop
dec
dec
fwait
mov
mov
jmp
dec
cs
adc
movs
jbe
push
xlat
mov
sub
or
jp
imul
shl
mov
retf
mov
in
sbb
mov
aad
add
adc
mov
pop
shr
loope
mov
push
fstp
in
sub
bound
pop
xchg
(bad)
mov
and
mov
sbb
cs
(bad)
jmp
xor
xchg
inc
pop
xor
fwait
dec
xchg
cmp
test
add
gs
inc
sbb
out
movs
invd
mov
cmc
xlat
sbb
add
and
sahf
add
movs
movs
in
cmp
stos
pop
icebp
or
fstp
lods
push
sbb
jnp
jbe
mov
push
add
loopne
jecxz
mov
call
add
movs
out
movs
dec
pop
and
sbb
mov
xlat
ficom
sub
jg
sbb
jb
daa
or
jmp
xor
xchg
out
ja
retf
mov
mov
jl
pop
xchg
sti
imul
fsubr
xchg
cmp
cwde
jecxz
std
call
sbb
daa
mov
addr16
clc
arpl
dec
sub
not
sahf
adc
sbb
stc
pop
call
push
clc
push
ret
push
sahf
adc
xchg
pop
xor
or
lds
cli
in
lds
cmp
shl
mov
inc
xchg
adc
mul
lea
xor
shl
pop
scas
out
icebp
or
bnd
dec
and
adc
lds
jl
clc
int3
fimul
icebp
shl
push
xchg
lock
int3
add
addr16
arpl
jge
mov
pop
ins
lahf
ja
xor
cld
std
or
int
sbb
stos
out
or
sub
mov
dec
pop
cmp
stc
popf
lds
test
std
xchg
jg
pop
jne
cld
clc
dec
(bad)
sti
or
sub
mov
fisttp
inc
rcr
call
pushf
int3
fidivr
or
push
jmp
dec
shr
dec
iret
ret
aaa
ins
bnd
or
leave
cdq
retf
out
scas
cmp
jle
jbe
pop
sub
icebp
cmp
add
ins
lock
aaa
add
jmp
xchg
lahf
jne
js
dec
int3
pop
adc
cli
cld
jmp
sub
pop
add
sbb
sub
std
(bad)
hlt
test
add
es
popf
adc
and
jge
cmps
enter
cmp
mov
lods
dec
lods
(bad)
sub
mov
(bad)
popf
jb
xchg
xor
test
pop
lods
sar
clc
or
mov
es
cwde
sub
cmp
dec
sbb
pop
dec
push
dec
and
xor
popf
jmp
jmp
jnp
xchg
inc
pushf
fldenv
push
in
(bad)
fwait
jb
loop
sbb
jmp
sbb
retf
in
or
movs
in
leave
push
inc
inc
cs
push
jae
ds
mov
test
or
pop
or
fnstenv
jbe
xor
xor
sbb
(bad)
ins
xor
ins
and
add
jg
hlt
dec
adc
mov
dec
pop
sub
or
and
pop
mov
xlat
das
jnp
xchg
shr
call
mov
xchg
push
shl
pop
fwait
xchg
sub
pop
imul
jns
push
mov
and
or
arpl
ret
fs
les
ja
xchg
adc
inc
sti
sbb
mov
aas
aaa
dec
sub
cmps
mov
push
leave
jmp
and
pop
inc
cwde
pop
hlt
cmps
mov
jmp
test
xchg
mov
jp
pop
loopne
sub
add
push
(bad)
xor
int
out
loop
inc
enter
arpl
sbb
sbb
and
fsubr
jp
push
adc
std
push
xor
pushf
xchg
daa
inc
xchg
sub
mov
and
inc
push
sbb
retf
ret
test
or
jge
sub
(bad)
push
mov
fdivr
sbb
push
sbb
mov
inc
sbb
and
neg
and
adc
dec
hlt
shl
pop
ins
mov
pop
dec
fistp
std
popf
cmc
scas
xchg
scas
jg
adc
push
adc
sbb
add
pop
outs
push
mov
xor
and
pop
ror
xor
js
sbb
sub
xchg
mov
test
ins
(bad)
bound
int3
ror
cmp
mov
sbb
sub
pop
xchg
lds
xchg
adc
or
aad
out
mov
in
or
int
cdq
fwait
fs
into
mov
and
cmp
cdq
movs
cmps
jl
inc
inc
push
pop
pop
mov
jbe
ja
inc
cdq
fs
xor
in
sub
mov
or
fstp
fcomp
push
pop
aam
fistp
das
jns
and
or
mov
mov
out
xchg
ret
push
mov
add
inc
and
dec
data16
cmp
test
jmp
test
jno
jns
jge
push
adc
cmc
cs
(bad)
sti
mov
inc
jb
das
jo
es
daa
mov
shl
cwde
fbstp
mov
cmp
stc
jns
push
popf
pushf
mov
mov
pop
lock
mov
mov
imul
mov
xor
movs
(bad)
jmp
mov
movs
call
cmp
pushf
int3
inc
adc
add
dec
loopne
or
pop
into
addr16
dec
sub
cmp
out
mov
mov
mov
mov
fist
les
dec
dec
mov
jmp
js
popf
pop
cmp
sbb
aaa
or
xchg
xchg
pushf
jbe
mov
call
scas
pop
xchg
add
cmp
jmp
or
push
mov
(bad)
aas
adc
xor
xor
sbb
daa
cmc
nop
xor
inc
mov
jo
jmp
popf
stc
xor
dec
adc
push
xor
mov
nop
xor
cmp
add
push
adc
cmp
jno
inc
or
xchg
jge
pop
into
pop
adc
adc
sahf
and
addr16
nop
dec
xor
repz
sbb
ds
sub
lods
xor
fdivr
add
cmp
sahf
add
lods
inc
call
add
sbb
(bad)
call
and
das
dec
xchg
pop
mov
call
xchg
or
mov
add
out
sbb
xchg
push
int
scas
daa
sbb
mov
mov
(bad)
scas
sbb
outs
xchg
or
test
dec
add
jecxz
stos
add
jnp
xchg
xor
sbb
es
fsub
not
mov
daa
xchg
iret
fs
mov
push
jb
mov
movs
pop
test
pop
xchg
jne
(bad)
mov
jb
ins
popa
push
pop
or
(bad)
cli
cmp
pop
ja
cmp
js
inc
and
sub
jne
mov
adc
(bad)
ins
sub
std
inc
daa
add
mov
call
clc
xchg
jo
aaa
mov
push
xor
dec
jne
sub
jmp
fcmovnb
xchg
retf
cmps
(bad)
inc
std
push
ret
cmp
push
sbb
push
and
out
es
xlat
mov
stos
dec
xchg
(bad)
les
sub
mov
mov
loop
aad
adc
push
mov
or
and
hlt
out
jecxz
mov
outs
sub
sbb
xchg
cwde
retf
xor
adc
mov
(bad)
jmp
out
arpl
loop
mov
and
or
(bad)
aad
xor
jmp
fs
mov
test
add
sbb
cmp
cli
cmp
adc
inc
cmp
retf
fcmovbe
adc
cmp
movzx
push
add
outs
sbb
in
jno
ror
scas
xor
(bad)
rcl
repz
enter
mov
xor
mov
push
fs
push
mov
mov
retf
pusha
jns
out
pop
sbb
inc
fwait
pop
pop
(bad)
xchg
imul
jbe
stos
push
retf
test
mov
mov
shr
dec
dec
xor
retf
in
mov
jmp
inc
es
mov
pop
xchg
dec
mov
pop
(bad)
push
add
pushf
sub
inc
or
ins
out
outs
adc
pushf
jmp
cs
cmp
push
sub
aas
ins
mov
xor
mov
repz
cmp
jle
sbb
push
loope
add
mov
mov
pop
test
sbb
stos
loop
jle
push
mov
fcom
inc
pop
mov
dec
xor
dec
test
sti
popf
iret
pop
js
cmps
das
mov
jg
lods
fisttp
sbb
js
imul
xchg
xchg
xchg
xlat
mov
(bad)
ror
mov
jo
sar
cmp
imul
test
ret
cld
push
in
add
pop
mov
mov
push
je
jns
pop
add
out
std
scas
aam
jg
out
push
lock
enter
test
fidivr
add
outs
(bad)
loop
pop
pop
cli
add
jnp
les
mov
call
lods
inc
test
mov
fdiv
mov
repnz
clc
fdiv
xchg
imul
cli
jno
arpl
imul
lahf
inc
sahf
adc
gs
adc
mov
fsub
ja
scas
stos
ss
ins
call
(bad)
test
add
test
int
pop
jo
mov
mul
or
jle
dec
imul
cmps
mov
aas
push
mov
fimul
scas
adc
gs
push
adc
jo
adc
rol
imul
xchg
stc
imul
mov
popf
pop
cmp
xchg
adc
fcomip
add
add
or
sub
clc
ins
test
and
adc
fld
and
fild
sbb
jnp
add
xchg
and
mov
je
sbb
sub
jbe
and
imul
sub
mov
push
xor
std
mov
loopne
je
fsubr
add
adc
cmp
out
cdq
or
je
les
pop
mov
cs
push
jne
in
shr
and
pop
xchg
enter
arpl
xchg
pop
das
inc
cdq
les
push
mov
pop
pop
movs
lods
loope
jns
gs
call
jp
sbb
mov
enter
mov
sbb
gs
and
mov
pop
cmp
pop
lahf
add
mov
inc
popa
(bad)
jl
les
mov
xchg
ret
sub
enter
push
jns
sbb
cs
(bad)
loopne
cdq
repz
loope
loop
mov
cli
xchg
xchg
mov
ficom
ret
fsub
inc
xlat
push
js
and
popa
stc
addr16
cmps
into
xor
je
arpl
into
mov
xlat
mov
push
xchg
sbb
imul
inc
rcr
aam
loop
mov
pop
test
mov
mov
in
popa
push
pop
jle
jmp
fcompp
movs
lods
int
jbe
aas
(bad)
out
add
ins
lea
not
sub
popa
sub
jmp
dec
add
nop
imul
mov
pusha
test
aam
xchg
inc
xchg
dec
popf
cmp
and
sub
jno
mov
inc
shl
and
pop
mov
xchg
bnd
jecxz
or
cmp
inc
xor
int
cmc
test
adc
add
xchg
verw
mov
pop
aas
inc
push
cmps
push
div
idiv
cmp
call
add
sbb
mov
imul
data16
mov
clc
cmp
in
dec
lahf
inc
cmc
pop
xlat
ss
loop
pop
imul
fs
repnz
jae
jle
and
int
push
movs
movs
inc
pop
call
and
push
adc
in
xor
mov
fadd
mov
in
inc
daa
fild
jo
js
cmp
cmp
bound
inc
pop
xchg
(bad)
and
clc
mov
out
aad
aad
xchg
mov
adc
ins
in
les
sti
cmps
and
out
and
sbb
xor
out
sahf
mov
jo
popf
imul
int
(bad)
repz
and
xchg
jns
(bad)
mov
and
mov
cmp
test
cmp
mov
pop
inc
(bad)
fisttp
mov
push
and
daa
add
bound
data16
sub
mov
movs
or
mul
jae
dec
mov
div
xor
sti
in
aaa
fisubr
call
push
add
out
nop
leave
mov
mov
sbb
mov
scas
mov
add
push
push
sbb
lock
and
jp
or
xchg
cmps
enter
cmp
mov
add
clc
(bad)
xchg
int
in
dec
or
cmc
pop
cmps
mov
push
retf
loop
loopne
mov
into
outs
jno
int3
push
cmp
out
dec
(bad)
loope
aam
sub
xor
jne
fimul
fdiv
sub
pop
jle
sub
mov
ins
sub
mov
sbb
pop
mov
mov
xchg
pusha
mov
addr16
(bad)
movs
retf
push
and
outs
mov
pop
mov
repz
mov
push
sbb
dec
stos
pop
jmp
shr
sbb
xor
retf
shr
cli
bound
out
call
(bad)
enter
sub
cmps
loop
je
in
mov
jne
sahf
sahf
clc
mov
outs
lods
test
int3
popa
lods
jno
rcl
xchg
cli
inc
sbb
sbb
xchg
stc
add
sub
sub
imul
jns
pop
cwde
sbb
and
aam
scas
clc
mov
icebp
popa
pop
(bad)
xlat
shr
loop
sub
movs
jno
and
int3
sahf
int3
jne
jb
cwde
test
cmps
jae
mov
jg
stc
sti
inc
test
mov
pushf
not
sbb
add
repnz
jne
push
mov
pop
lea
rol
fdivr
or
jne
cmp
pop
leave
imul
fldenv
lods
ss
neg
cmp
pop
lahf
loopne
repz
adc
(bad)
and
ret
enter
div
xor
les
lahf
fidiv
jne
cmc
cmp
and
xchg
xchg
in
std
mov
inc
in
bt
leave
sub
out
call
sbb
int
popf
or
call
push
pusha
pop
jge
cmps
sbb
push
cwde
iret
mov
xor
inc
cmc
push
cmp
lods
push
pop
xor
test
mov
push
sbb
inc
cld
call
jno
stos
ins
retf
data16
test
jmp
mov
mov
mov
popa
loop
and
pop
push
xor
xor
pop
clc
out
xor
xchg
hlt
stos
inc
aam
mov
dec
movs
cmp
xchg
test
into
icebp
lgs
cmp
stos
mov
push
(bad)
not
leave
push
mov
aas
das
push
cli
in
and
dec
or
popa
pop
iret
dec
pop
xchg
in
or
out
scas
add
sbb
loopne
repz
sar
cmp
jmp
xor
imul
push
shl
popa
sub
jecxz
sub
out
and
jns
push
les
xor
push
sub
ret
xchg
xchg
addr16
cs
mul
push
cld
mov
xchg
in
gs
clc
add
loope
adc
shl
in
and
loopne
xor
sbb
mov
aam
xchg
addr16
gs
mov
hlt
jno
dec
fist
pop
sbb
push
sub
sub
or
popa
pop
cmp
shl
jle
jmp
adc
in
aas
imul
call
jns
mov
fsubr
mov
dec
add
or
repnz
je
xchg
pop
inc
sbb
fcom
mov
cmps
ret
sbb
xchg
fisubr
pop
cmp
mov
repnz
test
cdq
mov
jp
or
cli
aad
inc
push
out
pop
sbb
xchg
inc
cmp
adc
punpckldq
jmp
ins
test
jne
outs
call
mov
(bad)
push
das
jb
sub
cwde
and
and
and
dec
stc
mov
jns
call
and
jmp
adc
or
push
sub
hlt
lods
sbb
int3
fcmovnbe
jp
push
push
cs
xor
bnd
and
mov
push
xor
aad
cwde
cli
std
dec
push
cmps
js
and
or
jle
cld
lds
mov
xchg
sub
cdq
int
fcmovnb
lock
jo
pushf
loopne
in
xor
inc
dec
popf
(bad)
and
jmp
mov
or
jb
mov
in
sbb
pusha
mov
pop
mov
leave
aas
sbb
retf
outs
mov
xchg
cmc
or
aaa
mov
xor
jns
sbb
inc
retf
sahf
sub
shr
cmp
inc
mov
jne
mov
repz
aam
clc
jno
aaa
xor
xchg
aas
(bad)
mov
xlat
es
aad
cmc
test
cmp
repnz
mov
scas
aaa
jmp
dec
in
(bad)
cmp
inc
cmp
sti
mov
mov
or
xchg
xor
xchg
add
xchg
lods
mov
inc
adc
xchg
add
pushf
fdiv
push
mov
mov
mov
inc
in
shl
lods
inc
mov
cmps
retf
push
iret
xchg
hlt
out
push
bound
cmp
inc
les
mul
(bad)
fs
mov
call
test
aaa
sbb
pop
cmp
mov
xchg
sub
sub
cmp
inc
xchg
adc
fsubr
mov
lea
fmul
adc
outs
xchg
jg
clc
test
repz
push
inc
inc
fnsave
mov
push
loope
sub
dec
(bad)
pushf
out
mov
(bad)
nop
std
and
mov
(bad)
mov
mov
icebp
sub
sub
cmp
sub
or
mov
sar
xlat
mov
lock
rcr
retf
retf
dec
pop
dec
jecxz
jbe
mov
pop
mov
and
mov
mov
jmp
rcr
mov
clts
outs
mov
push
test
push
add
dec
xchg
lods
add
les
inc
lods
xchg
rol
mov
cmps
test
cdq
and
sub
dec
pop
lock
ins
pop
stos
and
sbb
mov
or
jecxz
aaa
sub
into
lods
inc
cwde
cmp
cmps
push
(bad)
ds
jle
stos
movs
cmps
and
(bad)
nop
mov
scas
pop
jle
mov
cmp
enter
jnp
mov
jo
mov
repz
mov
repnz
cwde
pushf
xchg
jecxz
sub
jbe
mov
jne
fsubr
daa
cmps
sbb
mov
mov
in
pop
repnz
push
int
adc
mov
mov
adc
dec
popf
mov
xchg
xor
sub
xchg
xchg
lods
fsubr
xchg
imul
mov
in
pushf
jl
loopne
xor
rol
adc
sbb
jp
sub
add
push
pushf
push
(bad)
popf
and
fmul
shl
dec
(bad)
pop
push
sbb
stos
mov
push
adc
pop
(bad)
bound
mov
out
mov
jl
adc
js
jno
jb
jg
or
mov
sti
jb
mov
pop
retf
jb
icebp
pop
pop
adc
mov
jbe
pop
xchg
mov
icebp
xchg
push
pop
popa
lahf
inc
cwde
movs
movs
mov
inc
dec
inc
dec
shl
jo
movs
mov
jnp
xchg
push
aad
cmp
dec
sbb
icebp
or
int
loopne
mov
(bad)
outs
call
out
test
add
fiadd
sahf
xchg
inc
and
xor
push
std
jb
jne
fadd
imul
cs
push
push
sti
add
mov
inc
pop
lock
cmp
jb
pop
dec
sbb
push
add
retf
pop
mov
arpl
mov
lea
mov
sbb
cmc
dec
shr
outs
inc
popf
ss
push
dec
repz
icebp
mov
cmp
mov
push
ja
xchg
les
xlat
(bad)
outs
sub
test
fiadd
and
push
jnp
stos
rol
fwait
sbb
mov
push
xor
js
xchg
repz
int
add
dec
mov
jle
pop
mov
fwait
adc
mov
movs
and
push
scas
icebp
mov
inc
cmp
neg
add
xor
cmp
mov
add
loopne
xor
or
out
mov
movs
dec
cmps
jnp
pushf
add
sbb
scas
cmps
push
xor
gs
fs
(bad)
jnp
mov
sub
sbb
mov
retf
nop
adc
xchg
mov
rcl
lods
add
jg
stos
sar
mov
add
sti
adc
jae
cmps
push
add
inc
jae
cdq
fcomp
push
jecxz
jge
fsub
ja
ja
das
xor
lds
int
shr
adc
adc
cmovg
push
push
add
xchg
sti
pop
xchg
push
pop
adc
dec
cmp
leave
jbe
stos
cmc
push
ins
repnz
adc
je
jo
dec
in
lods
sbb
jp
mov
inc
shl
jl
xchg
push
dec
adc
mov
push
mov
pop
mov
or
inc
add
adc
or
and
jae
push
in
gs
cld
push
pop
push
mov
fiadd
sbb
push
pop
clc
fst
outs
fbstp
stos
es
adc
iret
fnstcw
sub
nop
xchg
test
out
out
mov
fcomp
jae
test
in
cld
dec
sahf
in
sbb
adc
xchg
stos
ret
mov
movs
mov
push
mov
adc
mov
test
hlt
mov
and
mov
lods
adc
ds
mov
dec
dec
pop
out
int
add
aam
int3
jae
xlat
sub
or
mov
xchg
inc
sub
push
loope
aad
xlat
les
int3
jmp
fsubrp
xor
cld
cmp
xor
nop
cmp
ror
(bad)
sub
out
xchg
call
xchg
movs
dec
test
jecxz
push
pop
imul
fcom
pusha
enter
cmp
out
popa
arpl
adc
jbe
xor
setae
jo
cmp
push
rcl
xor
in
les
xchg
and
adc
mov
sahf
int3
ins
pop
aam
cmp
int3
jb
mov
lahf
arpl
(bad)
jle
or
jl
inc
cmc
and
movs
in
jge
daa
imul
mov
jmp
pop
jbe
jbe
mov
call
or
js
imul
add
stos
mov
scas
jmp
fist
mov
adc
xchg
test
xchg
mov
push
cmp
aas
ins
daa
push
scas
xchg
cmp
or
jl
or
in
outs
xor
outs
outs
pop
or
ja
dec
mov
push
cmp
clc
pop
pushf
call
(bad)
inc
(bad)
hlt
push
dec
mov
cmp
pop
sahf
ffreep
pop
mov
in
in
das
mov
dec
mov
xor
jmp
jle
xor
jmp
sub
lahf
ror
movs
out
adc
popa
and
popa
inc
ja
xor
mov
das
sub
push
aam
xor
or
jp
mov
(bad)
imul
pop
mov
retf
std
dec
fild
js
shr
mov
fstp
aas
adc
adc
add
fild
into
push
sti
js
push
dec
pushw
push
jmp
adc
sbb
push
sahf
pusha
push
aam
ss
cmc
cmc
fadd
sti
inc
mov
cdq
hlt
push
inc
mov
cli
rcl
ss
scas
rcr
cmp
imul
and
ss
jg
subps
lock
mov
jge
gs
lahf
call
in
popf
mov
dec
test
adc
add
dec
mov
pop
cdq
sti
push
pop
dec
retf
outs
(bad)
cmps
push
imul
daa
mov
dec
jmp
stc
or
test
repnz
out
inc
xchg
stc
jmp
fbstp
lea
or
jg
outs
add
dec
jle
fsubr
arpl
jmp
loop
movs
push
lahf
mov
outs
xchg
test
iret
mov
imul
out
add
sub
cmp
inc
and
fs
movs
gs
icebp
push
or
ficomp
sbb
pop
pop
xchg
es
out
fst
mov
add
popf
xor
aam
loop
xchg
imul
retf
(bad)
push
push
push
mov
das
adc
jo
xor
mov
and
add
xchg
in
push
pop
gs
mov
and
jge
sbb
in
cs
ds
pop
mov
cld
mov
lods
retf
mov
push
cmp
pop
xor
ret
mov
push
das
outs
cmp
imul
pop
dec
js
or
mov
stc
iret
movs
jl
mov
leave
push
inc
inc
xchg
jo
sbb
ret
mov
or
je
out
inc
out
in
jb
clc
or
fwait
call
in
add
inc
scas
mov
dec
mov
mov
dec
shr
or
retf
fild
imul
ins
imul
pop
or
repz
push
mov
sub
enter
sub
test
es
mov
out
repz
sub
in
jbe
add
mul
pop
pshufw
std
arpl
js
jne
test
xchg
shl
repnz
std
popa
xor
(bad)
cmp
push
vmaxpd
in
fidiv
ror
fldenv
dec
add
xor
(bad)
cmc
div
ret
out
loopne
aam
call
cwde
mov
mov
js
stc
jo
mov
push
(bad)
pop
and
ror
adc
test
sbb
sbb
lods
call
shl
scas
mov
in
int3
cdq
(bad)
push
shr
hlt
mov
xchg
scas
rcr
or
mov
xor
cld
das
dec
out
inc
repnz
inc
xchg
xor
jae
in
call
mov
loop
mov
xchg
mov
jne
loopne
into
fwait
arpl
hlt
add
mov
fiadd
adc
int
lea
adc
mov
lds
cmp
jl
jo
add
pop
pop
inc
scas
retf
(bad)
shl
enter
or
dec
(bad)
or
inc
test
fadd
call
push
jno
icebp
fcomi
jl
test
sbb
or
mov
enter
mov
inc
ffree
ret
sbb
push
cmps
inc
inc
(bad)
leave
jmp
mov
jge
adc
push
add
sbb
xchg
fs
or
repz
adc
(bad)
nop
cli
in
push
mov
cmp
xlat
shl
push
out
ins
addr16
lds
cli
daa
mov
sti
adc
(bad)
jecxz
cmp
push
mov
cmps
lock
fdiv
lods
es
cmc
fstp
or
dec
add
xlat
jb
es
test
dec
add
push
adc
mov
mov
and
int
scas
cmps
jnp
jns
jae
pop
fisub
aaa
and
out
or
stos
xor
add
or
mov
retf
mov
xchg
mov
lds
dec
or
jmp
xor
xor
mov
add
jmp
movs
sar
test
(bad)
mov
adc
pop
in
and
mov
or
cmp
xor
pushf
popa
dec
(bad)
mov
into
mov
cmp
in
cmps
movs
lock
pop
rcr
xchg
sti
xlat
mov
pop
js
xor
popf
test
mov
jbe
test
inc
pusha
cmp
jecxz
jno
fld
inc
(bad)
fs
and
push
cmp
mov
sub
pop
mov
shl
dec
fild
fstp
data16
dec
cwde
ins
inc
dec
dec
cmps
or
mov
jecxz
rcr
add
aad
imul
mov
out
and
and
into
int3
xchg
icebp
fcomp
fnstenv
add
and
dec
pop
cdq
les
stc
mov
sub
jns
jge
and
cmps
add
push
ret
pushf
mov
pop
call
jge
jbe
je
jge
add
jmp
mov
mov
push
jge
ja
mov
mov
cmp
xlat
aaa
lods
stos
scas
adc
and
loop
mov
ins
lea
xor
jecxz
cmp
cmc
stos
aad
retf
cmps
ror
ss
lds
movs
mov
or
cs
popa
stos
fneni(8087
out
(bad)
cmp
add
int3
jno
fistp
hlt
stos
jae
cmc
and
movs
inc
je
pop
push
cmp
mov
scas
or
add
pop
aam
adc
scas
pop
fild
pusha
adc
or
in
popf
or
sar
add
inc
mov
mov
ficomp
inc
and
call
and
(bad)
push
leave
xchg
push
mov
xchg
in
scas
mov
test
das
out
aam
xor
popf
cld
jns
mov
dec
mov
std
dec
jbe
adc
xor
retf
fwait
mov
mov
retf
xor
inc
and
mov
in
pop
jecxz
push
das
mov
aam
stc
and
mov
lea
mov
cmps
lock
cmp
hlt
pusha
std
xchg
das
sub
jl
test
jge
(bad)
nop
mov
enter
imul
dec
je
xor
(bad)
mov
push
lods
les
mov
inc
rcr
xor
add
test
jmp
scas
jp
mov
test
imul
rdtsc
(bad)
or
es
cmp
mov
fsubr
pop
mov
cld
cmps
cmp
(bad)
shl
out
xchg
inc
mov
pop
xchg
pop
inc
sbb
mov
cdq
jmp
jl
in
mov
sub
scas
out
dec
imul
cmp
xchg
(bad)
mov
pop
jne
mov
mov
(bad)
fcom
test
scas
xor
push
mov
fstp
xor
mov
or
lock
xchg
dec
cld
enter
int3
mov
mov
mov
mov
mov
addr16
and
retf
ret
(bad)
aad
or
int3
jecxz
enter
(bad)
neg
shr
call
mov
movs
xor
adc
popf
jo
ret
int
sbb
rol
scas
das
inc
xchg
pop
bound
shl
jge
cld
out
dec
cmp
fwait
pop
out
je
push
test
pop
cmps
pop
lea
adc
jbe
ins
mov
es
loop
imul
outs
loop
pop
cmp
in
mov
fld
or
scas
movs
retf
mov
mov
jno
loopne
in
(bad)
push
jmp
mov
mov
data16
push
push
adc
(bad)
dec
addr16
sub
icebp
neg
mov
out
fwait
movs
mov
in
and
(bad)
scas
push
imul
dec
ror
xchg
or
xchg
jecxz
mov
mov
mov
xor
ds
xchg
push
and
push
clc
jnp
xchg
mul
xchg
push
call
jnp
addr16
shl
mov
out
push
inc
pop
or
adc
mov
(bad)
fist
cmps
cs
sub
mov
sub
add
aaa
mov
mov
scas
pushf
pop
and
and
test
xor
push
cmp
fistp
mov
cld
or
cs
jmp
ja
dec
into
(bad)
pop
add
xchg
jmp
add
aam
cmp
popa
mov
adc
loopne
or
add
xor
xchg
int
test
sub
mul
add
(bad)
retf
jbe
add
je
outs
scas
dec
in
or
mov
(bad)
int3
and
pop
pop
ror
mov
ja
cdq
mov
leave
cmc
cmps
and
(bad)
je
sbb
das
push
int3
sub
or
stos
fwait
in
in
test
inc
cmp
sub
add
retf
mov
xor
rcl
push
dec
retf
and
xchg
es
retf
div
into
sbb
fbstp
aam
out
fmul
aaa
movs
mov
cmp
xchg
ins
mov
data16
shr
adc
(bad)
aaa
(bad)
inc
sub
(bad)
jb
outs
xchg
mov
iret
jg
ret
(bad)
retf
loop
sbb
pop
cmp
das
scas
jl
push
mov
into
push
rcr
aad
mov
std
jnp
fiadd
je
aas
call
lahf
mov
cmp
pop
retf
mov
dec
mov
into
push
adc
mov
loope
push
hlt
push
scas
icebp
xchg
cwde
push
push
pop
add
(bad)
out
arpl
shl
mov
ss
jp
jbe
aaa
jecxz
add
je
inc
or
mov
into
jns
dec
push
std
sti
xchg
mov
jno
sbb
mov
test
sub
and
cld
iret
out
pop
test
retf
imul
(bad)
repnz
fsubr
mov
fs
adc
les
xor
pusha
mov
jecxz
fwait
dec
dec
cmp
das
inc
adc
xchg
sub
mov
sub
mov
leave
adc
sub
mov
add
jae
popa
loopne
xor
push
fnstsw
mov
out
add
push
dec
pop
and
mov
sub
adc
rol
jecxz
dec
loopne
mov
sbb
scas
mov
leave
mov
out
push
add
sub
outs
add
stos
mov
lods
pop
popfw
sub
push
fcomp
cmps
call
movs
add
push
movs
dec
retf
xor
fimul
sahf
mov
sbb
in
add
popa
push
ins
push
inc
mov
mov
in
sub
pop
into
dec
add
sti
mov
repnz
scas
pop
inc
int3
push
js
mov
pop
cmp
jae
or
jnp
dec
mov
xor
jmp
outs
xor
pop
les
repz
icebp
cdq
mov
cdq
popa
lods
dec
lods
mov
jge
leave
xchg
loopne
les
repnz
cmp
cmp
or
in
mov
ins
xchg
jmp
in
mov
stc
in
mov
add
hlt
fimul
sar
pusha
dec
adc
dec
xchg
dec
or
pushf
inc
das
pop
jno
jp
out
std
je
pop
cs
jne
mov
sbb
js
movs
and
imul
xlat
movs
jge
mov
add
inc
xchg
dec
cmp
call
mov
cmp
pusha
inc
pop
arpl
push
sbb
pop
cwde
mov
(bad)
mov
dec
mov
fsub
xor
in
sub
mov
add
loopne
cli
inc
mov
fimul
rcl
ret
(bad)
icebp
xlat
adc
and
or
xor
or
or
fucomp
inc
shl
or
or
fwait
sub
shl
movs
in
popf
fild
fstp
ins
mov
cmps
int
mov
(bad)
rcl
lods
scas
(bad)
sub
inc
dec
ja
mov
gs
xor
dec
xor
and
test
sub
xor
dec
sbb
mov
out
jp
imul
and
icebp
dec
ror
sub
push
cmc
movs
sub
and
out
sbb
data16
inc
adc
shr
xchg
xchg
lods
inc
addr16
cmps
(bad)
or
xchg
sbb
addr16
dec
push
push
std
or
jp
xor
dec
dec
add
das
cmps
jbe
adc
fbstp
(bad)
push
mov
jno
out
push
xor
pop
lea
sahf
xchg
mov
dec
rol
add
ror
xlat
pop
sbb
xlat
mov
xor
lock
loop
rol
sub
sub
pusha
add
ja
sub
je
add
into
xchg
mov
ss
pusha
jo
push
xor
sub
sub
jg
xchg
mov
mov
scas
pop
dec
mov
shl
popf
rcr
hlt
aad
sub
cdq
daa
inc
push
adc
add
push
mov
into
enter
inc
xor
xchg
pop
fisttp
jae
jb
call
pop
repnz
arpl
lea
cmps
dec
or
dec
sbb
jl
add
jmp
into
in
mov
pop
add
ds
mov
fcmove
stc
dec
jae
aas
dec
ret
fsubr
inc
sub
and
aad
xor
jp
ficomp
out
mov
test
pusha
cld
rcl
adc
dec
and
xor
push
xor
(bad)
out
sbb
loope
(bad)
jge
popa
stc
lods
mov
mov
xchg
pushf
ja
fwait
cmp
imul
push
or
or
cwde
and
aas
cwde
fiadd
std
in
popa
jns
or
sub
mov
arpl
sbb
cmp
xor
into
cwde
pop
stos
xchg
daa
jno
out
shr
mov
adc
lods
fcmovnu
sub
retf
add
scas
test
outs
mov
cmp
mov
mov
jmp
push
xor
mov
imul
iret
daa
aas
mov
test
xchg
icebp
mov
in
xor
mov
addr16
push
sub
pop
push
in
mov
shl
mov
test
clc
jg
call
ret
xor
xlat
in
dec
and
push
adc
mov
jbe
push
pop
es
(bad)
push
inc
fdivr
bound
ins
sbb
sahf
test
ret
xor
test
mul
outs
cmc
neg
ficom
outs
enter
xchg
and
iret
inc
mov
scas
xchg
and
std
fiadd
aaa
jecxz
into
xchg
lods
inc
pop
jae
iret
loopne
or
pop
(bad)
repz
mov
jns
loop
ss
push
sbb
cmps
add
movs
fcomp
imul
and
ret
mov
popaw
sbb
mov
int3
pop
adc
add
add
mov
sub
neg
cld
(bad)
clc
into
lock
mov
stos
fs
mov
stc
and
in
inc
cmps
fmul
xor
sbb
push
iret
sbb
add
enter
mov
cmp
into
mov
stos
add
jo
xor
dec
push
sti
js
stos
pop
cld
sbb
clc
call
jg
out
std
es
cmp
mov
scas
mov
xchg
movs
inc
ret
repnz
xor
jo
dec
jne
or
push
adc
add
jge
sbb
cmp
lds
mov
xchg
mov
ficom
and
pop
and
sbb
sbb
pop
and
jg
test
pop
dec
stc
xor
or
pop
and
aaa
jge
fst
mov
shl
ret
popa
ficomp
mov
xchg
ins
idiv
mov
jns
iret
daa
bound
push
pop
jb
(bad)
les
cmp
and
mov
jnp
inc
pop
in
std
imul
dec
not
fcmovnb
mov
push
mov
mov
mov
jno
cli
jns
aaa
dec
loop
and
jle
pushf
sbb
dec
sbb
lods
fwait
xchg
xor
pop
rcl
sbb
clc
mov
lahf
iret
adc
inc
pop
fild
inc
sub
xchg
js
mov
div
enter
pop
lods
ret
out
mov
(bad)
retf
fild
sub
movs
xlat
xchg
adc
loop
sub
lock
les
pop
adc
outs
mov
ret
stos
xlat
inc
push
sbb
in
(bad)
fsubr
stos
xchg
inc
jl
mov
xchg
test
sti
xchg
fucomp
pop
out
pop
and
cmp
mov
pop
jmp
icebp
mov
in
and
mov
cdq
out
or
je
dec
mov
ins
inc
popa
dec
outs
in
out
pop
fiadd
push
adc
xor
(bad)
aas
jg
shr
icebp
in
push
mov
cmp
push
jp
dec
inc
cwde
dec
nop
(bad)
in
pop
mov
and
retf
dec
scas
fs
rol
sti
retf
sahf
inc
dec
adc
mov
cmps
xchg
imul
sbb
std
repnz
(bad)
fmul
inc
jnp
pop
pavgb
or
fs
cmp
ror
jecxz
dec
les
push
hlt
fcomp
data16
sahf
sub
(bad)
sbb
rol
xor
xor
jge
mov
das
(bad)
fwait
jb
pop
jns
mov
mov
cmp
mov
fidiv
mov
jbe
rcl
xchg
shl
fwait
test
adc
repnz
in
push
jl
loope
xor
std
rol
adc
cmp
push
rol
call
pusha
xchg
mov
xor
pop
xor
jge
das
add
daa
rcl
or
xchg
pop
les
jge
dec
add
or
pop
fidivr
(bad)
fcomp
cmps
ss
out
hlt
ss
nop
sbb
jmp
inc
mov
cmps
push
fadd
sbb
es
mov
lods
push
or
inc
dec
cmp
jmp
lods
sub
xchg
test
xor
jecxz
mov
cmp
xchg
xor
xchg
and
add
xor
lahf
adc
mov
mov
lods
and
sub
mov
cdq
adc
push
stos
mov
dec
popf
xor
or
or
dec
jne
sbb
xchg
add
mov
repz
pop
sets
pop
push
pop
aaa
adc
div
popa
jb
(bad)
test
jnp
push
les
lock
mov
mov
fs
shl
aad
push
mov
mov
(bad)
fsubr
(bad)
xchg
cmps
pop
pop
dec
push
data16
jmp
jb
outs
in
mov
lock
pop
mov
outs
pop
mov
in
retf
jno
retf
in
adc
sub
gs
dec
test
sub
mov
or
sti
xchg
or
add
sar
push
jmp
shl
inc
mov
lea
and
loope
xor
and
push
test
sub
jne
xchg
outs
xchg
jae
loop
xor
sahf
jge
add
mov
xchg
push
mov
and
cld
stos
aas
xor
xchg
push
ja
push
cwde
mov
out
enter
xchg
cmps
push
dec
sub
xchg
repnz
movs
leave
data16
icebp
std
push
aad
or
xchg
and
cmps
cmps
jno
out
test
outs
push
xchg
xlat
pusha
pop
lods
lods
adc
fld
out
dec
inc
movs
dec
mov
nop
push
call
mov
fdivrp
mov
sbb
vmread
int3
lods
shl
outs
push
inc
dec
jge
popa
test
retf
sub
mov
test
push
mov
sti
gs
and
and
(bad)
(bad)
cld
shl
frstor
mul
out
(bad)
jnp
mov
data16
cmp
mov
dec
inc
pusha
test
jno
fdivp
xor
je
jmp
dec
ins
loope
sub
add
or
test
out
or
dec
xchg
rol
push
or
dec
les
fst
cmps
inc
cmp
fsub
pop
or
inc
aad
xchg
jb
sub
pop
hlt
jbe
sub
neg
mov
dec
fist
out
sbb
call
je
aas
jge
or
mov
lds
imul
pop
dec
push
(bad)
inc
jns
repnz
loopne
pop
repz
inc
fdivp
sub
and
repnz
pop
idiv
(bad)
stos
mov
repnz
retf
int
xor
dec
(bad)
ins
cmp
dec
pop
adc
sets
dec
pop
std
mov
rcr
enter
mov
mov
cli
das
xchg
test
pop
sub
push
daa
pop
fld
(bad)
dec
xor
jmp
add
loop
inc
out
sub
scas
loope
icebp
cmp
push
(bad)
call
xor
ins
fld
xor
(bad)
fwait
xor
sahf
mov
repnz
imul
retf
adc
cdq
xlat
ret
pop
data16
loopne
dec
das
add
lahf
jp
aas
adc
xlat
(bad)
fisttp
adc
push
pusha
sbb
push
sti
scas
xor
sub
or
icebp
and
int3
stos
scas
in
push
(bad)
(bad)
leave
sub
nop
sub
sub
test
repnz
aaa
add
call
fwait
push
push
inc
(bad)
cmps
and
jle
sub
test
add
jg
xlat
sbb
inc
xchg
nop
xchg
dec
push
jne
pop
fdivrp
(bad)
aad
sbb
dec
sub
hlt
stos
jae
lods
push
add
lock
scas
retf
ret
inc
xchg
fisub
and
xchg
cmc
jmp
cmc
xchg
cmp
xchg
pop
push
xchg
lock
mov
push
jns
mov
lods
sub
cmp
xchg
pop
push
pop
sbb
xchg
and
pop
das
imul
mov
jo
adc
pop
(bad)
pop
mov
inc
cmps
dec
popf
orps
mov
sub
lds
cmps
sbb
mov
test
mov
pop
cmp
pop
mov
mov
std
enter
inc
dec
or
lods
nop
jbe
pop
repnz
pushf
xchg
jle
mov
dec
and
jge
jnp
adc
call
or
jmp
js
test
mov
xchg
and
pop
and
jbe
(bad)
push
out
and
jbe
sar
ins
push
or
test
or
out
sahf
pop
and
(bad)
jle
xor
in
sahf
fisub
stos
mov
add
adc
push
int3
inc
push
hlt
lock
sub
in
jle
into
lods
sub
imul
sbb
xchg
punpckldq
push
ins
add
mov
dec
sahf
jg
adc
or
mov
rol
mov
aam
add
cmp
mov
mov
and
(bad)
dec
mov
mov
jnp
adc
sahf
pop
in
call
dec
das
lods
cmps
xor
repz
or
pop
add
cwde
stos
mov
jno
mov
test
xchg
sbb
in
les
in
ret
and
cmp
inc
push
test
jns
sbb
(bad)
push
mov
inc
pop
jg
in
inc
mov
mov
xor
cld
repz
mov
test
mov
pop
inc
push
ins
je
sub
pop
pop
and
cmp
ret
pop
xor
inc
lea
push
jge
cmp
mov
adc
dec
mov
mov
xchg
mov
js
out
jmp
ins
or
xchg
xor
lds
pop
xor
test
call
(bad)
push
or
sub
xlat
(bad)
dec
mov
inc
ror
int
mov
xor
data16
xchg
jecxz
xchg
aam
js
push
cmp
fst
mov
push
sub
test
jne
pushf
ss
push
lock
lock
(bad)
mov
add
xchg
mov
arpl
sbb
xchg
sahf
mov
pop
out
pushf
pushf
ficom
or
into
cli
cmp
inc
sub
xchg
aaa
ret
cmc
out
popf
jge
jb
jmp
push
push
push
add
call
in
cmc
cmps
scas
and
pop
jmp
sub
adc
fs
xchg
dec
xor
adc
aad
sub
scas
pop
sbb
aas
mov
and
out
test
dec
les
pop
cmp
mov
cld
lods
jmp
in
pop
fldenv
cmp
add
cmp
sub
sbb
outs
pop
out
aam
push
imul
inc
inc
push
(bad)
sub
cdq
push
loopne
pop
jne
add
or
fisubr
mov
push
repz
xchg
jle
push
fsubrp
shl
jne
sahf
fld
adc
stc
or
inc
sbb
cmp
fs
enter
sub
sub
mov
mov
iret
jnp
adc
add
xlat
int3
inc
pop
sbb
adc
(bad)
aaa
push
cmp
adc
or
dec
and
div
xchg
mov
in
pop
cmp
cmp
cmps
dec
cs
add
div
sub
mov
leave
fild
add
in
gs
into
cmove
and
mov
sub
aaa
addr16
scas
add
inc
adc
xor
je
push
fsub
mov
dec
push
je
je
out
xchg
es
cmps
out
and
pop
div
adc
cdq
lds
xor
sub
cmp
inc
pop
jecxz
and
stos
sti
mov
adc
jmp
jb
fs
cmp
lahf
mov
xor
(bad)
scas
sbb
cmp
sbb
xchg
nop
stos
call
sbb
leave
jne
mov
mov
xor
(bad)
and
sar
cmp
test
push
lods
cmp
ja
js
cmps
pop
loope
call
cmp
pop
imul
inc
mov
and
idiv
cdq
rol
xchg
shl
sti
sbb
(bad)
icebp
xchg
mov
fisttp
push
mov
xchg
out
mov
daa
jo
aam
push
fld
retf
sahf
sbb
or
sbb
dec
sar
jg
shr
mov
mov
xchg
cmp
jg
scas
sahf
shl
sti
outs
mul
(bad)
pop
int
jp
jle
xchg
ret
xor
addr16
mov
hlt
mov
notrack
loopne
in
and
lahf
(bad)
in
mov
out
jnp
aaa
or
sub
push
jmp
sub
push
push
add
in
imul
dec
push
jne
xor
call
test
mov
or
leave
addr16
pop
imul
or
cmc
and
mov
sub
mov
sahf
pinsrw
outs
mov
test
pop
push
mov
inc
adc
mov
jno
outs
cmp
out
or
addr16
sbb
jnp
jge
je
in
jge
push
xchg
(bad)
push
jns
aaa
es
mov
fisubr
or
sub
test
xchg
int
movs
sbb
inc
jmp
rol
cmp
(bad)
(bad)
xlat
sub
sti
loop
mov
lods
push
aaa
fsub
cmps
fs
push
lock
aam
mov
ds
stos
jo
mov
daa
mov
ja
shr
push
mov
outs
lods
mov
dec
push
add
jae
call
pop
xchg
inc
fsubp
or
in
jecxz
and
push
xor
fisttp
jae
into
loope
pop
sbb
xchg
ja
cmp
and
ret
imul
out
pusha
inc
into
mov
sub
in
fld
or
jle
sub
and
repz
call
ret
repnz
xor
mov
fwait
ss
inc
xchg
push
sub
inc
shl
jb
fild
aad
xor
pusha
aam
xor
(bad)
pop
jmp
pushf
and
rcr
aam
loop
adc
pop
and
or
leave
pop
test
mov
jp
mov
sti
or
into
ror
scas
out
push
fstp
xor
jbe
cmp
or
das
shr
shr
add
aaa
and
push
dec
sbb
adc
pusha
rol
dec
lea
push
lea
mov
mov
push
mov
mov
sbb
sub
shl
call
aaa
jecxz
cmps
push
sar
ret
xor
outs
pop
mov
jmp
adc
inc
mov
jl
jmp
(bad)
xor
in
jb
pop
call
xor
mov
cmp
dec
or
loopne
ja
shl
ja
mov
mov
push
(bad)
mov
pop
es
push
fdiv
or
jno
(bad)
cld
gs
jo
into
call
jno
sbb
faddp
jecxz
test
hlt
into
and
call
retf
movs
pop
push
lods
imul
fiadd
test
lea
sub
int3
mov
jno
sti
sbb
dec
(bad)
js
jno
xchg
jmp
test
adc
lock
ins
bound
mov
popf
push
mov
jns
(bad)
faddp
fnsave
mov
inc
or
pop
push
sbb
jno
cli
adc
cmp
adc
jb
mov
outs
pop
adc
in
ret
cmc
outs
lods
retf
xor
xchg
(bad)
cmp
push
jae
aam
lds
pop
dec
sbb
pop
xchg
and
sbb
test
add
push
out
and
or
ins
mov
stos
dec
adc
lea
push
mov
sbb
fwait
mov
fistp
push
call
ret
clc
out
xor
subps
fscale
movs
inc
fld
mov
push
xchg
mov
enter
aas
mov
retf
mov
push
xchg
pop
ds
sub
enter
adc
jmp
dec
jecxz
(bad)
xor
xchg
fadd
(bad)
mov
popf
cmc
data16
inc
fcmovbe
mov
(bad)
adc
xchg
sbb
mov
add
mov
sbb
aaa
xor
push
fs
call
sbb
mov
push
push
push
inc
jmp
les
movs
icebp
sbb
bound
popf
jecxz
sbb
out
cmp
dec
push
fsub
lods
cmps
sbb
inc
js
cmp
sar
sub
sub
icebp
sbb
dec
mov
nop
sub
mov
cwde
imul
pop
popf
call
cmp
jmp
aaa
dec
mov
movs
inc
enter
ror
and
inc
dec
inc
sbb
inc
into
int
dec
(bad)
imul
mov
out
push
in
jbe
mul
jns
mov
push
enter
ins
sti
lea
inc
mov
sbb
clc
add
pop
cmp
cmps
and
cmps
jno
out
or
in
mov
aam
ja
scas
push
lahf
add
xor
out
mov
jnp
loope
cmp
scas
xor
shr
cmps
fldcw
jge
scas
sub
outs
aad
add
xchg
and
loope
mov
clc
in
adc
lds
add
imul
mov
sbb
fsub
(bad)
nop
cmps
xor
mov
mov
xor
mov
lds
mov
xchg
repz
retf
and
jne
push
data16
ficom
mov
mov
mov
je
xor
call
daa
cmps
enter
inc
ds
pop
dec
fsubr
or
test
jl
ret
xchg
lea
xlat
popf
xor
mov
xor
lds
cmp
sbb
out
fcomip
add
xchg
cmp
mov
fdivr
mov
icebp
js
imul
add
call
call
push
ss
xor
int
add
sbb
frstor
sbb
sbb
cdq
xlat
dec
cmp
and
sub
idiv
sub
mov
mov
call
add
gs
lods
(bad)
adc
je
nop
ins
xor
sub
scas
ins
call
movs
test
pop
xchg
dec
xor
jbe
xchg
push
and
add
test
imul
mov
mov
jecxz
ja
shr
sub
xchg
sub
sar
call
cmp
std
into
aaa
je
mov
mov
sub
xor
sub
jmp
and
retf
xor
pop
push
or
xor
push
push
and
retf
inc
jnp
mov
daa
out
rcl
iret
ja
rcr
(bad)
es
sahf
mov
popa
push
jae
ja
mov
fst
mov
sub
xchg
sub
pop
lahf
dec
sub
xchg
int
mov
out
mov
(bad)
mov
xor
xchg
test
jns
mov
cmp
shl
mov
jecxz
in
(bad)
aam
les
in
les
xor
fidiv
dec
fcmovnb
setl
mov
and
xor
das
inc
stc
fidivr
or
sbb
fcom
jl
cmp
pop
cdq
call
xor
pop
mov
cs
jo
loop
test
inc
lock
cmp
lahf
or
in
test
ficom
push
xor
ins
or
push
popf
mov
or
(bad)
shl
ror
std
add
pop
fist
push
push
xchg
out
ja
test
cs
or
test
fcmovnb
mov
add
push
movs
sub
inc
adc
int
aaa
imul
pop
nop
xchg
daa
jmp
push
(bad)
push
in
jg
sbb
jmp
(bad)
cli
jbe
retf
sbb
(bad)
aaa
dec
and
sub
repnz
xchg
outs
or
(bad)
retf
in
test
and
ror
xchg
sub
adc
push
jae
test
dec
fscale
cmp
and
loopne
dec
fadd
out
jns
jno
sbb
lock
fwait
mov
lahf
fcmovbe
dec
enter
pushf
pcmpgtw
out
sbb
aam
xchg
pop
arpl
(bad)
shr
push
sbb
out
mov
sbb
iret
push
cmp
xchg
jbe
(bad)
push
std
and
repz
data16
stos
jl
repnz
push
cld
ret
ins
imul
pushf
les
push
xchg
jmp
inc
xchg
pop
mov
movs
adc
mov
sahf
inc
sbb
outs
jb
ins
jo
or
aad
jg
cmp
dec
push
push
lock
cmp
pop
shl
push
sbb
fdivr
stos
xor
push
jge
stos
add
aam
jmp
mov
(bad)
adc
push
ret
daa
xor
daa
fs
popa
push
loopne
movs
icebp
pop
out
xchg
inc
ss
cmp
xchg
imul
jge
popa
lods
aam
push
push
and
(bad)
dec
outs
lea
pop
or
fstp
add
mov
jl
and
fnstcw
ins
inc
cmp
int3
cs
imul
mov
pusha
xchg
das
hlt
ins
ret
enter
in
lods
fs
pop
dec
pop
sub
push
fisub
jns
inc
fadd
or
jge
mov
ficom
mov
push
rcl
sahf
mov
hlt
inc
adc
pop
js
jbe
adc
xchg
mov
daa
fwait
imul
clc
and
hlt
scas
xor
and
sti
pop
add
add
retf
fstp
mov
das
and
into
dec
mov
or
arpl
push
jb
icebp
or
or
imul
cmp
jae
and
mov
stos
mov
fidivr
add
ret
out
pop
push
in
cmps
cmpxchg
cmp
pusha
inc
scas
cld
imul
adc
adc
ret
mov
cmp
outs
into
sub
push
or
jecxz
retf
in
jno
xchg
cmp
jnp
in
sub
push
and
push
js
lahf
adc
std
add
and
loope
jmp
stos
aaa
outs
jns
sti
mov
inc
ins
popa
cmp
jns
fadd
cld
mov
sub
mov
push
lods
sti
xor
mov
jne
xchg
repz
or
push
aam
sbb
inc
jmp
xlat
fidivr
jb
daa
xlat
mov
lods
adc
mov
ins
sbb
inc
and
push
push
fisubr
sbb
xchg
repz
mov
int
dec
retf
retf
inc
lock
dec
inc
cdq
pushf
shl
aam
lahf
iret
lea
cmp
call
or
rcr
fwait
sbb
sbb
ret
xchg
cmps
push
sub
push
pop
test
test
imul
retf
mov
dec
mov
mov
and
in
je
lods
inc
mov
adc
inc
add
retf
iret
cmp
aam
hlt
mov
scas
imul
jmp
cmp
lds
lods
out
test
sbb
mov
mov
daa
dec
mov
lds
adc
mov
je
dec
dec
movs
jecxz
xchg
call
lock
push
in
add
hlt
jae
je
loopne
xor
addr16
jbe
rol
sbb
fidivr
call
fadd
out
inc
push
pop
scas
jle
push
into
or
pop
xchg
rcl
mov
mov
vpunpckldq
cmp
stos
add
push
or
adc
ja
iret
scas
ins
mov
push
mov
or
mov
inc
out
cmp
scas
out
jge
dec
sbb
add
push
push
add
call
(bad)
inc
gs
push
mov
loope
(bad)
cmp
shl
jae
(bad)
push
shl
iret
sub
ror
sbb
xor
fs
jmp
mov
out
sub
mov
and
mov
mov
mov
pushf
stos
dec
mov
test
or
xor
inc
shl
mov
ds
mov
pop
push
sahf
jge
stos
pop
mov
into
push
ins
dec
int3
nop
test
add
xor
pushf
lods
test
mov
out
(bad)
fisttp
xlat
add
ja
lahf
xchg
mov
adc
out
jg
fwait
xchg
dec
mov
sbb
xchg
ficomp
adc
lahf
inc
and
lods
int
loope
mov
and
scas
xchg
push
mov
push
loopne
in
mov
fadd
and
add
lock
mov
inc
das
push
imul
dec
arpl
dec
cli
aad
mov
inc
inc
or
and
push
cwde
jge
push
or
or
lock
jne
(bad)
dec
ret
mov
add
cs
out
in
inc
adc
aas
cmps
add
fmul
mov
and
adc
dec
(bad)
mov
ficom
rcl
ret
mov
sar
pop
dec
dec
and
push
cmp
mov
popa
xchg
fild
inc
inc
mov
add
test
dec
adc
xchg
mov
(bad)
ins
in
adc
jg
ja
es
icebp
addr16
(bad)
test
sbb
sub
pop
inc
mov
pop
loop
mov
cmp
or
push
add
ds
jbe
out
fs
or
aas
mov
idiv
cmc
fcomp
inc
(bad)
ds
ret
int3
xor
iret
xchg
mov
pop
cmp
inc
loopne
lahf
sbb
sbb
pop
sti
adc
mov
(bad)
out
jns
cld
ror
mov
cs
cmp
loopne
sub
push
sbb
ror
push
dec
shr
aaa
mov
sar
jp
or
jae
out
fild
inc
sub
cmp
or
ds
adc
jge
into
aam
push
adc
cmp
mov
dec
cmp
jns
sub
(bad)
fcom
jmp
std
xor
pop
into
xchg
(bad)
cdq
iret
into
shl
movs
pusha
lds
out
shl
adc
push
mov
mov
pop
jg
pop
sbb
xor
aaa
jecxz
stos
aaa
cmp
popa
mov
test
mov
dec
loopne
sub
ja
or
test
push
repz
push
aad
jg
das
out
cdq
or
(bad)
loop
inc
xchg
into
inc
retf
inc
sub
add
jne
retf
xchg
sub
or
ss
sbb
jecxz
lods
fsub
outs
inc
adc
or
jge
mov
cmps
and
stos
mov
xor
ja
loopne
outs
fimul
mov
fdivr
sahf
fnstenv
je
cmp
pop
(bad)
pop
and
xor
ret
out
push
mov
push
or
sub
dec
outs
(bad)
popa
dec
bound
out
mov
cmp
cmp
pop
sub
push
pop
add
dec
jno
fcom
cld
dec
inc
scas
pop
cmps
jl
popf
ja
in
dec
sbb
rcl
mov
aad
aas
clc
orps
repnz
ins
add
adc
or
out
ins
mov
jnp
pop
push
jecxz
stos
aaa
push
push
test
jecxz
pusha
out
xchg
pop
mov
xchg
test
(bad)
(bad)
adc
outs
push
test
mov
aam
bound
int
cdq
jo
jl
outs
retf
or
nop
dec
popf
das
and
loope
call
sbb
push
pop
cmp
dec
rcl
ja
xchg
push
scas
ret
fs
pop
inc
pusha
repnz
data16
push
push
or
mov
clc
data16
sbb
adc
pop
jmp
je
dec
gs
(bad)
lahf
or
mov
cmp
dec
frstor
cmovl
inc
aam
or
and
popf
xchg
fs
sti
jp
pop
xchg
movsx
pop
inc
cmc
adc
icebp
mov
in
push
in
sub
test
xor
add
ins
fs
xchg
mov
fcom
xchg
dec
xchg
test
add
aas
xchg
mov
and
sahf
jae
neg
loopne
pop
sub
shl
cmps
inc
out
lahf
mov
pop
cmc
dec
call
aas
or
cwde
es
je
nop
lods
xor
add
cmp
dec
adc
pop
add
push
lahf
xchg
xlat
adc
popf
pushf
xchg
mov
xor
inc
aad
pushf
pop
loope
aad
out
lahf
js
(bad)
mov
xchg
repz
jne
ins
mov
fnstcw
or
push
mov
arpl
loop
sbb
aad
lock
not
push
sti
scas
adc
rcl
clc
pop
std
mov
out
pop
cmp
lods
mov
push
push
jns
adc
xchg
adc
xor
push
pop
je
mov
adc
jno
and
das
sub
dec
rol
and
iret
xchg
js
xadd
ins
pusha
aas
xor
pop
fist
addr16
dec
or
dec
sbb
pop
mov
mov
push
sub
add
into
movs
test
fs
push
mov
lahf
mov
lock
dec
and
pop
and
popf
dec
cmp
push
jns
jb
out
movs
push
loope
loope
mov
push
cmp
fstp
int
xchg
jmp
pop
icebp
inc
jb
js
stos
add
jne
sub
outs
lea
inc
and
outs
leave
sub
push
repnz
(bad)
inc
push
test
inc
imul
cmp
push
add
adc
cli
cs
cmp
jle
das
dec
cwde
out
enter
(bad)
lods
mov
xor
enter
jp
inc
mov
push
dec
sbb
sub
std
sbb
mov
adc
jno
fldcw
in
xor
ins
jmp
dec
mul
ror
cli
out
xchg
inc
fsub
push
push
popa
mov
pop
sbb
xlat
mov
push
sbb
retf
int
inc
mov
inc
fstp
es
mov
pop
ds
cs
loop
mov
gs
(bad)
or
mov
dec
pop
lods
frstor
sub
cwde
popa
sbb
loopne
scas
pushf
daa
cmp
mov
push
jmp
ds
mov
or
popa
cs
xor
int3
rcl
iret
rcr
pop
(bad)
loop
cmps
cmc
imul
ja
mov
call
and
jmp
mov
js
frstor
adc
push
push
lahf
(bad)
arpl
nop
mov
adc
jmp
pushf
std
cmp
(bad)
push
sub
in
int
sbb
shl
xor
inc
cdq
pop
stc
sbb
push
cmp
outs
aaa
inc
bound
int3
cli
push
rol
push
mov
call
arpl
aaa
jecxz
dec
popa
scas
and
cmp
gs
add
sub
icebp
adc
add
push
sub
arpl
jecxz
scas
ins
mov
or
out
les
(bad)
(bad)
pop
inc
and
popa
enter
xchg
ins
sti
add
call
mov
lahf
and
inc
jbe
idiv
aaa
pop
or
rcr
sahf
pop
lock
daa
xchg
add
fist
jl
add
and
mov
sbb
mov
inc
or
sub
in
(bad)
inc
jns
push
mov
nop
pop
sub
lock
frstor
lds
or
fwait
add
xchg
not
sbb
(bad)
lock
loope
popf
int
inc
retf
repnz
cli
mov
mov
out
push
mov
in
pop
push
daa
(bad)
sbb
leave
shl
push
ror
xchg
pop
push
mov
push
test
rol
xchg
ss
(bad)
cwde
popa
jmp
stc
ret
in
and
jnp
out
sub
pop
xchg
cmp
inc
setns
mov
push
add
xor
push
sar
cmp
pusha
xchg
jp
and
pop
cmp
or
push
push
add
and
inc
xchg
ret
out
mov
stc
adc
push
jecxz
mov
rol
test
adc
ss
cmp
imul
bound
icebp
scas
xlat
iret
test
mov
pop
mov
gs
adc
pop
inc
lahf
mov
sbb
pop
lahf
add
aaa
and
mov
(bad)
stc
push
popa
push
aas
xor
das
sar
mov
int
pop
jb
ret
cdq
xor
sbb
xchg
add
je
jle
sti
mov
loop
pop
or
adc
adc
mov
or
sub
call
enter
jp
mov
aas
lea
cmp
jle
dec
inc
sub
lds
inc
cdq
retf
sub
and
jnp
pop
ja
stos
or
mov
lods
push
pop
gs
push
sbb
lahf
push
cdq
enter
xchg
inc
dec
xor
pop
movs
pop
mov
push
xor
clc
sub
jns
pusha
xor
popa
loope
mov
test
outs
sub
or
pop
lea
jmp
and
out
pop
cmp
enter
aad
push
test
add
push
loop
xor
arpl
in
ins
loopne
mov
loope
test
jle
cmp
fldz
xchg
imul
mov
fcomp
or
je
js
mov
faddp
inc
shr
mov
sub
dec
inc
adc
cld
outs
cmp
pop
mov
sti
ja
and
mov
xor
pop
jb
shr
fucomp
push
leave
adc
scas
rol
xor
adc
pop
lods
outs
dec
cmc
and
mov
xor
repz
mov
outs
mov
xchg
cmp
stos
xlat
out
jge
mov
stos
sbb
and
mov
aaa
inc
dec
inc
cld
aaa
fst
ret
das
and
mov
fwait
xor
push
mov
sub
mov
push
jne
hlt
daa
enter
or
add
ja
inc
add
adc
fwait
pop
jbe
out
and
xchg
xor
pop
lock
mov
out
jle
add
mov
sar
xchg
mov
mov
inc
test
hlt
scas
icebp
jb
frstor
xchg
dec
xchg
(bad)
rol
test
mov
aas
pop
cmp
hlt
and
ror
mov
adc
xor
mov
pop
sub
test
lods
fld
adc
sub
and
ja
push
sbb
addr16
lock
add
pusha
shl
inc
mov
ret
lahf
in
sub
jo
push
bound
pop
xor
jl
cmps
jmp
out
jno
inc
pop
jns
xor
lods
xor
sahf
int
mov
and
js
pop
in
test
pushf
sbb
outs
and
outs
push
adc
js
mov
xor
shl
gs
mov
nop
inc
popa
fld
inc
sub
mov
loopne
ins
shr
popf
mov
mov
mov
mov
add
xchg
lea
ins
mov
gs
div
dec
rol
lods
lahf
xchg
xchg
(bad)
xor
or
test
xchg
outs
mov
out
sub
test
dec
cli
mov
fild
retf
mov
fstp
in
cmp
int3
dec
out
sti
sbb
lahf
mov
pop
or
or
add
jnp
cmps
inc
inc
rcr
add
ret
pusha
and
outs
fdivr
(bad)
je
not
int
cmp
cld
outs
loop
mov
mov
adc
addr16
sub
push
pop
inc
sbb
ins
cmp
fstp
push
inc
retf
cmps
or
push
dec
inc
pop
(bad)
adc
sub
and
dec
loop
sub
daa
out
shl
jb
xchg
push
test
ja
dec
fisttp
dec
jno
pop
dec
es
lods
mov
xor
jne
les
addr16
dec
cmps
adc
les
adc
or
in
xlat
xchg
mov
ret
stos
popf
inc
ins
jo
mov
dec
(bad)
mov
ficom
(bad)
push
jne
inc
gs
mov
push
inc
pop
mov
cmps
sbb
adc
dec
fs
mov
inc
stc
push
sub
dec
lock
(bad)
adc
cmp
iret
push
mov
mov
pushf
xchg
es
call
lods
into
clc
push
mov
sahf
mov
into
xchg
adc
xor
dec
loopne
movs
ins
icebp
sub
sbb
cmps
cdq
or
and
shl
mov
mov
ja
mov
jnp
imul
sahf
jmp
aaa
fdiv
add
dec
adc
mov
fdivr
stc
push
add
cs
outs
mov
pop
ficom
dec
in
push
std
adc
and
(bad)
aad
bound
jae
mov
fcomp
inc
fisub
cwde
jmp
lahf
mov
add
mov
lods
lahf
scas
mov
jo
imul
loope
mov
sbb
push
scas
sbb
cld
pop
mov
or
mov
adc
push
xor
iret
ret
jo
data16
(bad)
loopne
jns
push
cmp
loope
enter
add
xchg
mov
mov
stos
sbb
add
and
sbb
xor
xor
pop
xchg
lock
xor
cmps
sbb
pop
mov
add
inc
les
sub
sbb
mov
iret
jnp
xlat
cmp
mov
repz
mov
repz
retf
adc
or
movs
in
jg
mov
sbb
je
(bad)
movs
call
pop
scas
mov
fst
retf
data16
adc
push
daa
imul
jle
ret
imul
ins
leave
mov
and
pop
add
imul
pop
pusha
mov
cmps
cmp
push
mov
xchg
stc
cmp
pop
scas
loope
call
dec
cmp
out
or
hlt
arpl
sbb
imul
adc
cmp
dec
xchg
es
xchg
icebp
sub
nop
aaa
popaw
shr
and
push
pop
push
add
enter
adc
addr16
test
es
dec
fs
in
inc
pop
ret
pushf
push
adc
pop
fxch
mov
arpl
jecxz
inc
push
loopne
jno
adc
ret
adc
iret
loop
mov
jnp
fdivrp
data16
out
mov
shr
in
pop
in
icebp
gs
ss
mov
xlat
xor
ins
data16
mov
(bad)
push
fwait
and
push
jne
xchg
push
loope
lea
movs
std
mov
mov
xchg
mov
jge
rcl
jmp
loopne
fistp
int3
out
outs
xor
scas
inc
fcmovu
loope
inc
pop
jg
cmc
jb
xor
scas
add
popa
stc
repz
ror
push
lods
test
mov
repnz
mov
daa
test
or
jecxz
xor
jmp
call
bound
xchg
pop
in
mov
outs
ss
xor
ins
gs
and
sub
scas
jl
(bad)
lods
inc
rcl
mov
hlt
mov
test
popf
xor
je
fsub
push
repz
push
xor
dec
shl
(bad)
push
(bad)
dec
(bad)
push
cmp
(bad)
add
pushf
fdiv
pop
jbe
xlat
fwait
and
xlat
jmp
ja
adc
stc
imul
sub
push
jge
cld
sbb
mov
popa
lds
and
cmp
dec
jmp
mov
xchg
push
fwait
jmp
in
lahf
pop
dec
mov
and
jp
cmp
scas
dec
scas
or
mov
mov
aaa
shr
dec
inc
mov
mov
ins
sbb
ret
and
jae
pop
jmp
jecxz
adc
sbb
push
into
adc
aas
push
and
(bad)
dec
mov
jmp
and
sub
lahf
dec
es
sti
mov
lock
pop
les
test
push
ins
aam
pop
imul
mov
cmp
sub
push
or
rcr
lds
stos
outs
sbb
pop
sti
jae
iret
push
dec
adc
cmps
inc
pop
js
sar
sbb
setae
adc
pop
and
mov
inc
xlat
sbb
push
xchg
jecxz
push
test
push
inc
or
pop
cs
and
push
push
or
jl
pop
sbb
inc
out
(bad)
cmps
aad
adc
jno
in
test
jnp
neg
inc
movs
push
je
imul
sahf
les
fs
fdiv
push
ja
add
mov
imul
sbb
mov
mov
or
mov
push
xor
sub
scas
inc
add
pop
cdq
fst
imul
cmps
out
mov
mov
pusha
shl
fsub
pop
mov
mov
pop
das
push
and
mov
pop
stos
jp
and
mov
stc
outs
test
lahf
pop
inc
inc
mov
jo
aam
sbb
push
lods
retf
mov
je
fbstp
jbe
push
jecxz
movs
sbb
jecxz
jmp
mov
jmp
or
pop
mov
rcl
sbb
cli
clc
dec
sub
jl
inc
add
mov
les
mov
jecxz
das
pop
aam
mov
les
push
pop
or
mov
cmc
sar
push
ror
imul
xor
jb
push
(bad)
mov
stos
xchg
mov
push
out
enter
ja
lock
mov
popa
sar
(bad)
xchg
repz
mov
xor
mov
enter
out
mov
sahf
adc
in
ins
scas
gs
dec
ins
js
arpl
mov
or
mov
push
mov
in
sub
ret
and
jae
sbb
mov
inc
stc
imul
sbb
ja
mov
sub
test
inc
out
jmp
retf
pop
sbb
push
adc
outs
sahf
mov
ins
dec
jo
dec
ins
inc
cmp
xor
pop
aas
dec
out
jmp
jmp
es
xchg
mov
stos
cmps
xchg
jp
pop
dec
and
or
sbb
pop
fadd
imul
ffree
bound
ds
lods
or
icebp
dec
loop
push
cmp
fist
push
push
jmp
movs
xchg
add
shl
pop
jnp
sbb
test
dec
cli
lds
aad
in
clc
ins
fidiv
hlt
or
dec
or
lods
stos
cld
mov
fcomp
and
cmps
jmp
cmp
pop
(bad)
xchg
lahf
jp
or
rcr
pop
sub
push
sub
ja
mov
clc
mov
push
mov
ror
add
dec
movs
add
stos
pop
mov
test
adc
mov
arpl
xchg
cmps
mov
cmp
sub
in
xor
adc
fadd
xor
or
push
mov
out
dec
or
xchg
push
lock
pop
mov
imul
cmp
cld
repz
test
clc
test
int3
mov
out
jp
mov
lods
cld
dec
lods
or
pushf
sub
inc
xchg
add
aad
sbb
sbb
or
push
(bad)
inc
pop
dec
jae
mov
pop
pop
mov
hlt
mov
lods
test
div
(bad)
xchg
out
push
retf
mov
imul
retf
pop
pop
aad
mov
fsub
call
or
pop
xchg
fs
movs
and
xchg
popa
scas
fild
mov
dec
mov
mov
cs
in
mov
sub
bound
cmps
push
(bad)
jae
dec
cmp
in
mov
jl
adc
cmovnp
dec
lods
dec
mov
mov
add
jo
nop
cmp
inc
pop
sub
das
xor
or
pop
(bad)
and
add
loope
mov
sbb
jp
cld
or
adc
movs
scas
xor
add
jnp
adc
cdq
out
jmp
push
pop
add
dec
repnz
test
pop
(bad)
mov
mov
shl
push
fadd
sbb
push
dec
retf
cmp
int
test
bound
ret
test
ds
jmp
mul
nop
and
sub
or
mov
out
push
pusha
test
fist
mov
mov
adc
cmp
rol
fcom
jno
cwde
inc
sbb
inc
jno
arpl
sub
add
sbb
test
daa
fldl2t
pop
dec
jnp
sbb
or
or
mov
mov
cmp
aaa
mov
scas
jae
retf
(bad)
movs
inc
mov
call
stc
in
inc
test
popa
pop
(bad)
shl
sbb
mov
int3
xor
cmp
leave
int
xchg
mov
mov
jae
adc
mov
mov
(bad)
mov
stos
xchg
ds
test
xchg
retf
push
data16
mov
cmps
pop
scas
fistp
lds
daa
dec
pop
xchg
ror
rcr
and
inc
cmp
iret
arpl
(bad)
inc
(bad)
jmp
push
sub
sti
bound
adc
dec
rcr
scas
adc
jge
jmp
xchg
inc
loop
loop
lds
pmullw
add
pop
adc
and
inc
add
adc
mov
mov
movntps
pop
push
outs
ins
cmp
push
xor
test
add
arpl
jmp
sbb
sub
ret
aad
xlat
adc
xor
(bad)
int
test
and
mov
mov
(bad)
call
xchg
sbb
xor
lods
sub
call
jle
push
cld
scas
push
stos
rcl
add
and
mov
adc
cmp
dec
pop
and
jecxz
addr16
movs
xchg
into
push
jp
push
add
dec
cmp
mov
sbb
dec
aam
jg
xor
dec
dec
mul
mov
jmp
jo
(bad)
outs
rol
stos
cmps
stos
fsubr
mov
clc
jmp
lods
fnstenv
fld
out
xchg
in
popf
fwait
jg
cli
in
jle
add
imul
in
pop
jmp
sbb
mov
js
mov
in
dec
adc
pop
(bad)
jo
test
xchg
xchg
mov
sub
lock
addr16
arpl
imul
jbe
and
call
outs
push
test
and
pop
jg
add
in
clc
cmp
xlat
jo
movs
inc
ins
push
loope
and
bound
fadd
(bad)
jo
sbb
push
push
and
or
push
xchg
push
cdq
pop
xchg
loop
hlt
jl
add
and
push
js
mov
arpl
jge
mov
jecxz
in
sbb
fst
loopne
adc
mov
sub
sbb
retf
ds
sub
xchg
mov
sti
(bad)
mov
or
lock
sub
or
out
lock
test
cmp
add
sar
out
stos
hlt
mov
gs
adc
xor
cmp
mov
mov
js
fcom
mov
out
push
(bad)
dec
(bad)
push
jnp
jecxz
push
sub
jnp
xor
es
jle
dec
retf
data16
ins
sub
sbb
cmc
mov
jnp
and
jnp
in
ds
cli
test
sub
add
cld
cdq
dec
movs
jns
push
add
xor
test
fwait
int
mov
rol
mov
test
adc
imul
inc
fist
les
mov
xor
pop
and
jmp
cli
ss
pop
cmp
popf
jnp
push
mov
outs
sbb
mov
mov
xor
mov
push
test
mov
mov
mov
pop
mul
push
test
fwait
sbb
push
lea
and
aad
(bad)
ins
cmp
movs
adc
pop
xchg
xchg
sub
jle
in
jbe
stos
sbb
mov
push
push
in
fcmovb
nop
ins
stos
and
shl
push
sar
aas
dec
and
out
xor
aaa
into
pop
or
aaa
pushf
aam
sbb
mov
mov
push
or
mov
adc
mov
pop
cmp
dec
aad
aaa
jmp
scas
add
dec
dec
push
xchg
push
push
inc
fsubr
xchg
sahf
mov
daa
icebp
push
leave
fidiv
repz
(bad)
ret
or
jmp
xchg
gs
adc
xchg
repnz
jae
cli
inc
inc
hlt
std
xor
mov
aas
es
mov
shl
stos
call
stos
ins
outs
mov
or
loopne
aas
sub
xor
xchg
int
cmova
jbe
mov
pop
movs
inc
loopne
and
push
arpl
lahf
xchg
dec
ucomiss
and
fs
and
daa
pusha
fld
mov
xor
jae
push
pop
xlat
in
cmps
loop
test
sti
cmp
adc
mov
lds
cli
cmps
sub
dec
fiadd
adc
iret
dec
ja
int3
sub
popa
lea
xor
inc
rol
dec
pop
dec
retf
repz
push
test
mov
out
stos
cdq
sbb
push
xor
or
or
xchg
in
lock
(bad)
(bad)
pusha
inc
inc
inc
es
jo
fild
push
and
adc
pop
mov
sbb
adc
mov
imul
dec
sub
add
ror
clc
popf
mov
jb
enter
cmp
or
jns
retf
int3
stc
pop
xchg
hlt
in
push
xor
les
lods
rol
push
cmc
adc
inc
cmc
mov
out
lods
dec
retf
add
int3
xchg
outs
fild
sahf
into
pop
jmp
cmp
lock
mov
mov
cmp
mov
add
jns
add
adc
adc
loope
sbb
and
cmp
sbb
call
test
div
push
jl
xchg
mov
(bad)
push
cmps
cmps
jne
in
mov
xchg
jge
cld
push
dec
mov
aad
outs
push
dec
outs
dec
mov
test
add
mov
aad
sub
js
aaa
pop
stos
retf
pop
or
inc
xor
add
pop
das
ficomp
cwde
jne
add
push
xchg
arpl
xor
ja
out
lods
mov
scas
iret
rcl
sbb
das
jns
mov
lea
into
adc
inc
fist
dec
sar
xchg
dec
rep
push
fcomp
pushf
dec
lods
das
aaa
cmp
add
cmc
jns
repz
leave
out
lods
or
adc
stos
sbb
mov
outs
in
push
hlt
dec
jmp
shr
sbb
push
xor
(bad)
jns
mov
scas
retf
jge
out
sbb
sti
xor
repnz
mov
mov
cli
xchg
rol
pop
inc
mul
enter
repnz
ja
mov
cli
adc
sbb
jp
jo
stc
xor
xchg
ds
dec
pop
jno
jnp
push
jp
sahf
jne
jg
or
imul
mov
adc
sbb
cmc
pop
mov
lea
ds
mov
int3
add
dec
push
(bad)
cmp
jo
mov
in
or
jne
xchg
and
add
and
and
fdiv
sahf
xchg
lea
adc
cwde
call
pop
sti
sti
sub
movs
aas
daa
and
pop
lea
ins
movs
push
scas
(bad)
xchg
test
cmp
clc
xchg
jl
mov
mov
sbb
cmc
push
add
fcomp
in
jno
shl
and
(bad)
mov
lods
sub
pop
sbb
aad
dec
test
mov
into
fsub
mov
push
add
sub
adc
imul
xor
inc
push
xchg
dec
out
sub
daa
mov
push
test
or
test
push
xor
add
arpl
in
jns
mov
sub
(bad)
mov
ja
cmovg
add
pop
test
mov
stc
test
and
mov
lds
mov
or
inc
jae
mov
loop
mov
xlat
push
dec
stos
popf
sub
mov
mov
mov
mov
xchg
inc
sub
pushf
adc
not
jbe
mov
pop
test
mov
push
adc
ins
push
jne
pop
sub
or
push
movs
dec
inc
in
cmp
push
int3
sub
or
popa
mov
xor
jmp
mov
(bad)
xchg
mov
loop
fnstsw
push
jle
jmp
mov
je
shl
xor
cmps
imul
pop
in
cmp
shr
adc
in
call
fisubr
inc
arpl
test
mov
push
xor
dec
fnstenv
ja
rol
ficom
lods
cmp
sbb
ja
jmp
stos
sbb
push
inc
inc
mov
in
xchg
cmp
inc
cmps
mov
sub
pop
mov
scas
jecxz
sub
daa
pop
hlt
xchg
sbb
xor
mov
das
pusha
vsubss
mov
mov
adc
dec
xchg
out
mov
or
push
sti
out
push
lock
adc
nop
jo
fstp
sub
xlat
jecxz
sub
ja
mov
dec
test
cmp
sti
sahf
push
adc
out
(bad)
(bad)
xor
ins
sub
push
aam
jo
sub
mov
lods
inc
add
push
jge
leave
cmp
adc
inc
(bad)
(bad)
sub
add
arpl
imul
aam
pop
mov
and
push
adc
pop
frndint
into
outs
mov
xor
sub
jmp
retf
pop
sub
in
mov
dec
cmp
inc
data16
push
mov
pop
std
jl
aam
dec
imul
inc
cmp
mov
add
add
dec
xor
sub
xor
data16
pop
(bad)
into
mov
lods
test
outs
out
sahf
mov
fist
jmp
fwait
push
inc
xchg
scas
mov
fdivr
lahf
jo
and
dec
mov
aas
sbb
das
loop
pop
enter
call
rcr
mov
lds
xchg
xor
push
sub
repnz
jle
not
or
mov
mov
cmp
movs
ret
shr
mov
push
cmp
mov
clc
xor
cs
shl
sbb
cli
adc
dec
das
icebp
js
mov
repnz
jno
push
add
inc
jmp
xor
jg
adc
popa
ret
mov
jne
and
(bad)
mov
jecxz
dec
xchg
test
or
pop
fistp
arpl
ret
fld
push
or
inc
pop
mov
xchg
sub
add
aam
adc
(bad)
pop
mov
xor
popf
leave
pop
push
sub
and
punpcklwd
leave
scas
lods
imul
dec
pop
loopne
and
jge
sbb
cmp
loop
jno
mov
push
sub
inc
jp
(bad)
cmp
addr16
and
aas
xchg
js
pop
aas
sbb
stos
cmp
mov
mov
(bad)
and
pop
(bad)
push
cmp
dec
sbb
(bad)
sbb
and
sub
pop
or
jne
outs
jp
dec
gs
pop
lock
mov
add
shl
mov
and
mov
dec
push
fsub
cmc
(bad)
cli
jnp
(bad)
lock
and
fistp
sbb
cmp
test
fld
mov
js
pop
pop
lea
lock
jbe
jbe
ret
(bad)
movs
stos
imul
inc
push
sahf
xchg
imul
push
data16
imul
retf
and
adc
sub
(bad)
out
sar
pop
adc
retf
adc
mov
into
jmp
pop
sahf
ror
ja
and
mul
mov
inc
adc
mov
push
sti
cdq
ret
jnp
add
lods
in
(bad)
ffreep
jbe
leave
xor
daa
sti
and
fist
mov
lahf
sbb
inc
sbb
rcl
push
or
jg
sub
cmp
clc
mov
fwait
cmp
xchg
lahf
mov
sub
(bad)
or
and
loop
pop
or
and
pop
push
mov
or
mov
dec
pushf
jmp
ror
(bad)
pushf
fnstenv
sar
xchg
out
add
repnz
test
mov
inc
cmp
into
lods
(bad)
cmp
aam
lock
adc
dec
fistp
jp
push
jp
lahf
ins
or
adc
or
dec
nop
pop
mov
push
push
xlat
jbe
stos
icebp
call
adc
out
mov
outs
test
push
loopne
repnz
push
push
add
xor
pusha
js
adc
xchg
pusha
jnp
outs
xor
(bad)
aas
pop
(bad)
mov
mov
push
adc
arpl
pop
sbb
(bad)
outs
sub
arpl
adc
idiv
repnz
and
add
sub
mov
ds
test
in
inc
cmps
(bad)
jg
push
cmp
fsub
and
jmp
ret
pop
dec
pop
sub
and
add
outs
dec
daa
or
pop
js
and
dec
push
jmp
push
add
lods
mov
sbb
fsubr
test
jge
mov
lock
ret
outs
js
loop
push
mov
mov
pop
push
mov
pop
xchg
dec
int
xchg
aaa
pusha
push
xchg
mov
cld
ret
faddp
xor
sbb
test
pop
and
and
cmp
inc
repnz
lods
mov
adc
mov
add
add
scas
fild
mov
test
jno
or
and
js
cld
nop
gs
sub
in
cmp
(bad)
retf
mov
pushf
pusha
sub
mov
jl
icebp
cmp
ins
into
jae
scas
adc
mov
jns
jp
ja
icebp
jle
push
cmps
adc
pop
in
xor
mov
xchg
daa
cmc
mov
cmc
jg
je
jmp
xchg
cmp
clc
jne
cmp
mov
cs
xchg
jae
pop
push
xchg
jle
inc
pop
in
int
pop
retf
jnp
data16
pop
xor
das
push
push
pop
fcom
cmp
mov
test
nop
popf
or
sbb
aaa
pop
lods
add
std
adc
fs
push
shr
dec
add
fist
jae
sahf
lahf
jmp
pushf
jg
je
lock
adc
sub
call
and
cmp
ja
sub
mov
je
scas
adc
mov
loope
loopne
jb
inc
call
cmc
fwait
and
inc
push
call
add
arpl
std
js
jne
xchg
out
inc
sbb
(bad)
(bad)
cwde
xchg
fidivr
in
jecxz
inc
jmp
ret
mov
in
push
xor
sbb
cmp
hlt
dec
inc
push
xchg
sbb
dec
lahf
rcl
rol
xchg
out
mov
mov
or
std
adc
xor
mov
xor
xor
cmps
test
test
pop
sti
aaa
popf
cmp
pushf
mov
data16
pop
or
sbb
loope
or
dec
jmp
and
(bad)
call
jge
jge
stos
(bad)
cmp
mov
nop
js
arpl
jae
lahf
cmp
jmp
test
ins
ins
fstp
and
fild
sti
lahf
data16
dec
adc
loop
jle
hlt
mov
sbb
xchg
lahf
and
fadd
mov
fld
xor
cmp
xchg
jbe
jb
inc
enter
out
xchg
cwde
mov
dec
mov
cmps
imul
cmp
xor
adc
mov
sbb
push
mov
jge
movs
inc
aad
add
cld
jp
push
es
inc
push
pop
xchg
test
and
sub
mov
sti
jb
jnp
je
inc
inc
sbb
shl
jmp
inc
dec
jno
ins
std
add
into
clc
push
jmp
and
dec
loopne
push
xlat
mov
sub
pand
jl
mov
loop
fild
mov
jae
sub
popf
loope
jno
push
ins
add
or
mov
in
xlat
outs
fs
sub
xor
and
pop
or
ror
lods
xchg
ja
nop
push
push
mov
mov
adc
imul
pop
or
cmp
pop
bound
ja
js
fmul
push
js
jo
cmp
mov
das
mov
pushf
xor
push
shr
repnz
(bad)
sub
push
mov
not
cmp
daa
add
nop
(bad)
(bad)
sub
and
cdq
pop
sub
cmp
shl
mov
xchg
add
call
pop
repnz
mov
fld
popf
mov
sub
je
movs
add
int
test
mov
push
inc
xor
lods
lahf
push
jbe
stos
enter
aad
pop
cmp
pop
arpl
in
scas
mov
mov
test
sahf
cmp
mov
xor
lds
fwait
bnd
push
pop
sbb
aaa
sar
aad
pop
cwde
push
pop
aas
aam
add
ds
dec
sub
and
aas
xchg
mov
aad
aad
cmp
mov
cmp
aam
pop
sub
rcr
fwait
xchg
or
test
pop
and
sub
sti
mov
arpl
push
mov
add
std
pop
movs
fdivr
dec
call
int3
mov
lods
and
sub
push
inc
push
dec
add
adc
or
ret
outs
sar
sbb
loope
call
mov
(bad)
jp
add
lods
aas
(bad)
fs
movs
aam
or
outs
jnp
add
sub
call
mov
ins
retf
or
adc
js
imul
out
xor
jp
fisubr
retf
inc
jno
lods
retf
push
push
pop
vcvtdq2ps
pop
adc
xlat
aad
int3
dec
sbb
int
mov
dec
push
dec
jb
dec
or
pusha
je
scas
leave
jbe
std
pop
mov
(bad)
test
movs
mov
stc
clc
out
int3
mov
stos
lds
addr16
sub
neg
cs
sub
mov
cmp
fwait
cmp
add
adc
add
test
int
adc
lea
hlt
mov
push
cmp
stc
idiv
or
mov
js
mov
xchg
or
mov
or
xchg
xor
inc
out
cmps
xor
push
mov
dec
ja
inc
test
pop
int3
pop
rcl
inc
and
xor
not
ins
(bad)
adc
xor
pop
mov
ja
or
test
hlt
out
inc
je
cmp
mov
mul
mov
mov
je
jo
repnz
or
push
sub
and
stos
jmp
test
sbb
mov
leave
or
fidivr
rcl
gs
or
pop
loope
or
and
in
and
and
adc
loop
cwde
mov
ret
push
shr
push
lods
xor
ins
cwde
xchg
cmp
add
(bad)
cmc
push
push
mov
pop
aad
dec
ror
mov
retf
daa
je
stos
shr
rol
pop
jp
mov
and
sbb
cld
cmp
mov
das
sbb
jge
stc
jo
and
dec
shr
inc
dec
push
rcr
call
inc
mov
rol
mov
jp
mov
xlat
in
mov
movs
sbb
ret
mov
jns
aas
stc
or
push
pusha
aam
push
ds
fnstcw
sub
daa
jns
lock
push
dec
mov
pop
mov
cmp
cmp
lds
xchg
cmps
cmps
pusha
jmp
div
inc
ins
out
and
pusha
fistp
ud2
sub
push
pushf
inc
adc
mov
mov
jmp
push
lods
shl
or
cmp
lea
fistp
(bad)
es
pop
xchg
push
pop
fldenv
sbb
scas
cmc
pop
xor
in
arpl
ins
dec
std
dec
outs
out
das
mov
push
test
and
jp
fstp
pop
jo
mov
xchg
inc
loopne
bound
out
jbe
(bad)
cmc
xchg
dec
scas
mov
xor
stos
pop
and
ror
int
mov
loopne
(bad)
and
mov
(bad)
inc
call
push
(bad)
rol
mov
(bad)
ficomp
pop
jge
mov
xor
jg
xchg
repnz
cmp
push
dec
and
(bad)
repz
cs
loope
pop
pushf
jnp
jg
push
and
sub
(bad)
cmp
adc
jo
push
xchg
bnd
fnstsw
sub
and
cmps
mov
(bad)
inc
cmp
hlt
adc
mov
dec
aas
cmp
mov
popf
jmp
sbb
cld
retf
jne
cmp
ret
sub
dec
lock
jae
mov
sub
(bad)
repnz
mov
rcr
lea
int3
and
pop
push
outs
inc
add
push
repz
dec
test
jno
mov
addr16
fwait
mov
int3
xor
ficomp
fisub
push
or
(bad)
jmp
and
xchg
ror
clc
lds
repz
jo
xchg
inc
mov
mov
push
push
jecxz
sbb
sub
adc
mov
and
and
push
and
repnz
scas
mov
mov
sbb
sbb
test
xlat
imul
adc
sbb
pop
in
out
cli
(bad)
retf
jmp
loop
scas
popf
or
adc
bound
xchg
in
pop
jecxz
jo
push
mov
lds
in
sahf
or
call
dec
adc
test
inc
ja
xchg
shl
pop
and
and
cmp
ss
out
lahf
mov
pop
(bad)
push
idiv
add
stos
jl
xchg
adc
and
retf
cmp
lods
pop
mov
push
lds
repnz
inc
lock
aaa
jle
into
dec
imul
inc
cdq
cld
mov
dec
jge
imul
push
ret
fadd
mov
lahf
jno
jg
mov
fdivp
pop
push
pop
jnp
xchg
mov
jl
fdiv
into
(bad)
fadd
aas
jmp
dec
aaa
mov
daa
jns
out
sti
inc
mov
popf
pop
shl
mov
retf
fld
enter
mov
mov
call
int
mov
in
and
mov
loopne
je
and
jno
lea
scas
push
sub
aam
neg
(bad)
and
jbe
ja
daa
inc
retf
dec
fcom
loop
sbb
sahf
and
push
xchg
lahf
in
adc
jp
sbb
mov
in
cld
mov
popa
movs
inc
arpl
sbb
push
xlat
sub
cmp
jmp
(bad)
scas
scas
pop
sbb
les
std
mov
in
dec
sahf
cmp
clc
push
inc
sub
iret
out
add
pushf
xor
push
call
out
mov
jmp
pop
pop
js
mov
mov
inc
test
int3
aad
pop
mov
xchg
xor
or
repnz
mov
and
(bad)
jp
icebp
out
out
xor
push
addr16
mov
lock
js
addr16
xor
fild
inc
fsubrp
sbb
sbb
ret
fiadd
ss
xchg
ins
cwde
xchg
jne
adc
inc
shr
cwde
out
fild
pop
sbb
jno
sub
sbb
mov
or
lea
mov
ss
sub
mov
sub
fiadd
jecxz
ds
xlat
cmp
cs
sbb
adc
sbb
push
es
push
iret
(bad)
scas
sar
adc
jg
dec
pslld
leave
out
in
outs
icebp
inc
add
gs
repnz
xor
sbb
pushf
jb
outs
loopne
cld
addr16
in
addr16
fimul
clc
movhps
adc
aas
sub
(bad)
jmp
in
push
sub
sbb
inc
es
fwait
retf
sar
imul
push
cmp
mov
daa
ror
outs
retf
(bad)
shr
fsub
fwait
jo
inc
lea
test
dec
daa
dec
test
movs
mov
cdq
pop
inc
mov
test
gs
push
mov
add
add
shl
pop
mov
pop
mov
jp
pop
sbb
shr
fcom
(bad)
fldenv
test
xchg
outs
or
scas
addr16
xlat
inc
outs
dec
ja
jns
pusha
cmc
std
or
ss
retf
jmpw
push
inc
pop
mov
out
sub
fdiv
jle
stos
jnp
ins
mov
addr16
add
dec
cmps
jns
sub
ss
xchg
call
js
into
(bad)
lds
adc
xchg
mov
mov
arpl
sub
ret
movs
push
sbb
fistp
sub
mov
ret
daa
fs
test
cmps
fstp
je
mov
mov
lods
ins
mov
xchg
retf
in
fisttp
stc
inc
dec
psllq
lods
fwait
gs
in
inc
jp
inc
test
mov
xchg
add
in
je
mov
mov
out
pop
dec
xor
popf
inc
arpl
push
outs
sbb
push
adc
rol
and
and
aad
iret
and
nop
(bad)
call
sbb
or
and
sub
xchg
loopne
aas
cmps
cmp
jbe
call
sar
cmp
cmps
rcr
mov
cld
lods
gs
es
neg
arpl
pop
ja
pop
pop
(bad)
cmp
inc
movs
pop
movs
stos
(bad)
mov
push
xchg
mov
cmp
ret
sub
dec
xchg
js
or
xor
iret
push
call
xchg
cli
add
icebp
pop
sbb
adc
xchg
add
xor
jmp
jmp
mov
xchg
outs
mov
cmp
jmp
shl
jb
std
cmp
lahf
mov
(bad)
pop
cmp
cmp
arpl
aaa
dec
leave
inc
cmp
xor
les
pop
lea
xor
mov
retf
cmc
jo
lods
aad
fistp
ret
jb
in
xchg
push
fisub
cmps
jae
xchg
xlat
clc
ficom
cmp
jl
jmp
jl
pop
movs
mov
(bad)
in
sub
out
repz
rol
add
ja
les
sti
clc
dec
bound
sbb
clc
cmp
outs
popf
adc
outs
icebp
jmp
dec
test
mov
xchg
mul
popa
cld
cwde
pop
ss
sub
and
lahf
pop
hlt
or
and
push
rcr
push
sahf
imul
fisub
xor
xchg
pop
in
aad
sub
cmovne
pop
xchg
xor
xchg
mov
mov
or
mov
gs
inc
mov
jmp
fcmovbe
cmp
cmp
and
pop
mov
data16
(bad)
hlt
int
inc
mov
into
mov
jp
(bad)
call
shl
mov
fdivr
in
popf
outs
jbe
inc
fisttp
dec
push
lock
repnz
mov
popa
push
cmp
jge
fcmovu
or
pop
pop
arpl
mov
dec
loopne
rep
cld
push
stos
retf
loope
push
mov
push
cdq
mov
shr
mov
pop
je
xor
adc
xchg
popa
jno
fs
fwait
test
fcom
sbb
pop
mov
dec
jb
dec
ficom
push
jg
sti
mov
mov
pop
dec
cwde
gs
jo
stc
add
std
call
jno
loopne
ss
mov
mov
mov
les
popf
dec
pop
lea
call
mov
xchg
arpl
xchg
mov
(bad)
fsubr
mov
jp
outs
stc
or
push
adc
fwait
std
dec
jmp
das
sub
sub
jp
sbb
mov
mov
add
movs
shl
cmp
jae
dec
add
bound
sbb
or
lahf
add
pop
inc
and
retf
pop
push
nop
pop
dec
(bad)
jmp
add
jae
aam
es
lock
call
sbb
pop
mov
and
mov
adc
call
mov
xchg
push
sub
xchg
sbb
into
les
cmp
xor
aas
sbb
pop
out
or
movs
inc
(bad)
repnz
js
cmp
sub
ss
or
aas
xchg
in
xor
jae
ror
sar
(bad)
mov
enter
pusha
jecxz
idiv
mov
aad
ss
clc
out
jno
(bad)
movs
inc
or
mov
rol
in
sti
and
cwde
mov
add
or
mov
mov
repnz
ss
cmps
mov
or
mov
fptan
push
mov
xchg
jmp
cmc
pop
or
xor
cmp
fstp
mov
rol
in
add
push
inc
xor
daa
push
adc
and
lock
leave
out
push
std
outs
dec
pop
into
mov
lock
xchg
jecxz
cmp
(bad)
(bad)
mov
mov
sahf
jge
iret
inc
mov
inc
push
adc
ror
cmps
retf
sub
retf
mov
ja
test
int3
push
retf
mov
sbb
shr
lahf
psllw
cmps
jg
daa
mov
add
push
and
sub
push
mov
enter
iretw
popa
or
stos
mov
push
clc
addr16
jle
mov
lock
(bad)
mov
enter
xor
and
test
test
scas
mov
inc
(bad)
or
lods
fistp
lahf
inc
(bad)
pop
xor
mov
sub
xchg
fmul
loopne
out
hlt
out
repnz
or
call
mov
pop
in
and
ss
mov
mov
gs
jbe
call
push
push
scas
inc
push
(bad)
xor
xchg
or
add
int
cwde
pop
aam
out
dec
pop
mov
out
mov
cld
pop
out
fstp
arpl
(bad)
lock
mov
sbb
sbb
jae
arpl
jno
scas
dec
adc
cmp
jne
imul
in
jae
cli
iret
sub
pop
(bad)
and
repnz
jp
mov
push
adc
retf
movs
dec
int3
or
dec
xchg
or
(bad)
fs
xor
je
jge
retf
cmp
cmp
inc
sbb
or
arpl
or
adc
inc
add
push
cmps
(bad)
in
dec
stos
fwait
cld
inc
in
loopne
arpl
jmp
inc
pushf
push
cmc
clc
adc
xchg
stos
shr
jle
xchg
out
push
je
fwait
in
or
add
in
outs
movs
mov
mov
add
mov
mov
out
dec
rcl
hlt
sub
and
leave
sbb
ss
add
mov
cmp
xchg
retf
cs
jb
jno
adc
adc
xchg
xchg
cmp
xchg
jae
inc
sbb
push
jb
enter
popa
push
in
push
push
mov
sbb
add
jl
popa
out
sub
inc
mov
xchg
xor
stos
int3
and
cmp
ret
xchg
pop
sub
dec
pushf
adc
xchg
rcl
fprem1
pop
inc
cld
stos
lds
mov
test
repz
fiadd
pusha
int
sub
push
aam
dec
gs
inc
sbb
push
xchg
adc
jl
pop
scas
not
jmp
sub
(bad)
shl
push
mov
xchg
pop
cmc
inc
repnz
mov
or
cmps
adc
push
jmp
rol
repnz
pushf
sub
jg
daa
stos
jecxz
fsub
loope
pop
jmp
push
pop
push
ret
sbb
outs
adc
cmp
xchg
push
jbe
or
mov
lods
sbb
cmp
ja
mov
gs
pop
xchg
sub
adc
jbe
mov
sub
push
dec
mov
lock
xchg
pshufw
aad
pushf
add
sub
gs
clc
icebp
aad
outs
inc
xor
shr
mov
cli
mov
fisttp
retf
test
cld
cmp
mov
cmps
jo
sbb
(bad)
repnz
loop
popf
das
push
mov
push
mov
popa
iret
xchg
push
cmp
or
daa
pop
out
arpl
sub
jl
repz
in
mov
add
movntps
cld
repnz
xor
lods
addr16
ja
int
add
sbb
sbb
mov
js
or
lahf
adc
bound
cmps
rol
shl
jecxz
mov
cmp
(bad)
push
cmp
cmp
cmps
jmp
stc
ret
pop
cmp
xchg
push
xchg
div
cs
mov
loop
dec
jl
jg
jae
add
sub
sti
dec
cmp
cld
ds
call
mov
jp
ds
jae
cli
add
xor
and
cdq
fwait
cmps
xchg
sbb
xor
mov
push
test
test
push
out
pop
(bad)
dec
in
inc
leave
or
cmp
loope
push
out
inc
shl
sub
pop
cmp
test
shl
cli
push
gs
scas
test
cld
mov
mov
add
sbb
cs
push
pop
and
dec
loopne
retf
retf
cs
aas
dec
pop
in
or
jmp
nop
mov
arpl
cli
sbb
adc
cmps
dec
int
and
aaa
jg
push
das
and
mov
retf
sti
inc
in
sti
push
fstp
ss
pop
retf
rcl
iret
jne
rcl
pop
les
in
adc
sbb
retf
jne
movs
and
cmps
push
ins
aad
ins
jge
jb
mov
push
enter
mov
test
loopne
in
fld
push
pop
retf
test
xor
jo
jnp
loop
add
fs
or
outs
push
xchg
dec
dec
cmp
bound
mov
std
sub
xor
ss
pop
sbb
jl
cwde
pusha
fwait
bound
out
dec
add
mov
retf
in
push
lock
repz
cmp
jnp
cmc
xor
je
push
xchg
stos
cdq
sahf
pop
xsha1
cmps
int
out
push
cmp
adc
mov
adc
jne
js
cs
movs
sti
into
pushf
mov
add
je
mov
sahf
jne
jns
lods
fucomip
xchg
or
jmp
cmps
call
pop
cs
ror
hlt
call
imul
iret
xchg
adc
leave
xchg
mov
cmp
scas
dec
call
lds
in
scas
into
arpl
and
in
js
aad
xchg
jb
(bad)
mov
add
aaa
jb
in
mov
mov
retw
xor
inc
adc
add
push
into
cwde
int3
xlat
xchg
sbb
xchg
and
inc
push
pusha
test
sbb
std
cmps
jmp
cmp
jl
dec
(bad)
outs
neg
test
dec
mov
pushf
mov
aas
pop
xchg
fidivr
and
iret
pop
cdq
clc
inc
cld
pop
fidivr
cdq
jmp
jl
jecxz
loopne
retf
rcl
ds
dec
fmul
push
rcr
push
repnz
xchg
sbb
sub
push
popa
and
xor
adc
adc
dec
dec
ss
nop
imul
mov
push
xchg
cs
mov
push
mov
imul
mov
imul
push
inc
xor
jno
in
mov
icebp
pop
push
lds
nop
pushf
pop
les
jg
movs
aam
mov
fs
inc
dec
es
or
push
pop
mov
dec
adc
nop
mov
repz
gs
dec
xchg
inc
leave
fmul
rcl
xchg
inc
or
sbb
cmps
xor
pop
and
mov
bound
je
push
ss
cmp
(bad)
ja
outs
mov
xor
cwde
and
pop
aaa
mov
push
jge
hlt
sbb
mov
and
mul
cdq
mov
adc
dec
(bad)
rol
xlat
jne
or
pop
and
mov
mov
pop
das
xchg
outs
mov
mov
in
ja
sti
das
sbb
mov
xchg
in
adc
pushf
(bad)
inc
les
mov
(bad)
ja
hlt
shl
shr
mov
js
cmp
add
and
xchg
push
inc
popa
sahf
xor
or
inc
xchg
out
pop
xor
imul
adc
rcl
add
pop
pop
inc
sti
cwde
movs
xchg
dec
nop
xor
cmp
arpl
cmp
xchg
pop
jl
mov
(bad)
mov
nop
cld
sub
movs
push
cmp
pop
cmp
mov
sub
hlt
bound
nop
add
jl
mov
(bad)
cmp
push
int3
mov
jo
jge
pop
repnz
sub
pmaxsw
inc
neg
jmp
cs
cmps
scas
adc
lods
pop
lock
outs
adc
mov
(bad)
adc
mov
or
mov
stos
pop
lahf
lods
fdivr
stos
addr16
and
rcl
and
out
xor
fdivr
dec
mov
movs
xchg
or
test
dec
sub
xor
inc
pop
add
out
mov
test
pop
xor
pop
mov
mov
retf
arpl
cmps
inc
movs
fst
mov
sbb
dec
aaa
add
jmp
dec
cwde
sub
(bad)
adc
jns
imul
inc
cld
sub
add
lea
call
dec
stos
xor
hlt
or
test
mov
(bad)
add
fs
test
in
loopne
clc
xchg
leave
retf
or
add
jle
xchg
fisttp
retf
adc
jle
pcmpeqb
add
jmp
rol
xor
lock
in
jge
clc
loopne
rol
stos
call
push
mov
or
retf
shl
xchg
arpl
push
inc
xor
in
ror
xor
and
inc
xchg
dec
xchg
jp
cmp
push
das
jl
leave
push
movs
push
or
cmps
(bad)
loopne
fadd
xchg
inc
fisubr
sub
sar
xor
enter
and
push
out
data16
in
call
pushf
pop
xchg
scas
mov
cmp
les
mov
lahf
stos
push
xchg
and
xor
push
mov
arpl
pop
(bad)
cmps
push
jge
mov
movs
dec
sub
sub
pop
cmps
retf
cmps
pop
ss
push
cmps
add
idiv
push
jp
and
dec
pusha
dec
cdq
mov
push
fsub
add
adc
push
les
inc
mov
test
mov
dec
(bad)
pop
jl
cmp
(bad)
pop
mov
push
or
xchg
test
cmp
pushf
in
test
dec
fld
call
loopne
leave
xor
sub
in
mov
in
mov
and
addr16
or
icebp
cli
mov
or
cmp
ds
cs
pop
pop
cli
or
mov
jb
add
fst
xchg
arpl
inc
mov
add
pop
aas
ins
imul
cdq
ds
scas
fsubr
mov
in
push
mov
cmp
push
jnp
inc
lgs
test
std
cmc
repnz
out
cdq
ss
mov
cmp
aam
sbb
lods
cld
or
jne
pop
ins
mov
call
pop
mov
mul
in
mov
and
dec
pop
add
cmp
sti
push
and
xchg
sub
lods
fstp
jb
int3
push
retf
fdivr
mov
gs
(bad)
or
jo
inc
or
add
xchg
sar
test
gs
sub
ds
test
fcmovne
or
js
stos
loop
dec
mov
inc
pop
data16
test
and
outs
pop
jge
mov
aam
inc
inc
lock
out
ins
test
call
aas
stos
sub
call
cmps
dec
push
call
cmps
cmc
sbb
mov
jo
mov
(bad)
repz
pop
sbb
adc
pop
test
sbb
inc
xchg
daa
or
push
or
arpl
jp
sbb
arpl
mov
mov
rcr
dec
xchg
inc
sub
ror
test
push
xchg
cmps
arpl
sbb
es
lahf
add
cmp
dec
pop
pop
add
jge
sbb
add
inc
outs
ficomp
mov
cmp
cmp
inc
cmps
dec
or
sub
mov
inc
ficom
call
rcr
or
stc
jmp
retf
test
(bad)
fs
in
fidivr
loope
mov
ret
sbb
adc
xchg
aas
push
test
mov
arpl
cwde
push
adc
rol
jp
imul
push
adc
cdq
pand
push
jecxz
adc
mov
jle
or
mov
fs
mov
inc
mov
mov
cmp
aad
in
sbb
ja
loope
mov
(bad)
and
pop
push
stc
inc
call
imul
(bad)
xchg
loop
adc
add
mov
inc
cli
(bad)
stc
(bad)
repnz
jle
shl
mov
pause
push
mov
imul
outs
cmc
mov
sub
in
cli
loop
loope
lahf
mov
jne
shr
cmp
add
sbb
(bad)
push
pop
mov
or
pusha
or
push
jns
int
and
sub
and
jne
sbb
push
out
adc
fcom
push
xor
and
cmc
sub
stos
dec
jecxz
and
mov
push
int3
mov
push
fs
not
lea
mov
shl
push
stc
sbb
ja
jl
(bad)
mov
inc
xchg
mov
push
push
test
sahf
repz
lahf
and
xchg
xchg
cmp
je
inc
and
xor
movs
aaa
test
adc
(bad)
aas
mov
pop
mov
daa
leave
bound
xor
ror
lea
mov
or
lea
out
push
pop
cmp
sbb
mov
sub
pop
(bad)
shl
jae
mov
dec
mov
jns
xchg
xor
mov
cwde
mov
sub
mov
pop
jmp
scas
and
jp
push
push
repz
mov
in
aaa
adc
repnz
jno
sbb
mov
and
push
repnz
inc
shl
and
lahf
pop
dec
pop
sbb
or
(bad)
pop
adc
out
ss
adc
push
and
add
sub
loop
test
int
out
mov
sub
mov
hlt
push
inc
fimul
dec
es
out
push
dec
mov
sbb
add
jns
jp
mov
shl
fcomp
repz
adc
in
ins
dec
mov
add
adc
nop
adc
push
mov
push
lods
and
fnstsw
jg
dec
arpl
or
mov
sbb
or
dec
sbb
sbb
adc
mov
adc
push
stos
retf
inc
hlt
xchg
pop
js
jno
(bad)
jmp
addr16
mov
pusha
ror
mov
cld
pop
hlt
ret
xchg
xor
out
and
rcl
mov
loope
gs
enter
push
add
in
arpl
cmp
(bad)
cmp
jg
or
dec
sub
call
retf
sub
in
loopne
dec
lahf
mov
stc
jmp
scas
stc
add
in
and
add
jmp
push
aas
xor
mov
test
ret
aaa
xor
test
sti
(bad)
sub
inc
mov
mov
add
daa
ret
paddd
fst
arpl
lods
enter
sar
dec
mov
shl
imul
call
push
xlat
imul
mov
add
aad
into
mov
shr
fsubr
pop
js
xor
push
jns
or
mov
test
pop
jmp
jle
push
int3
adc
xor
mov
mov
inc
push
pop
inc
jp
mul
cmc
add
lods
(bad)
push
dec
out
repnz
pusha
pop
mov
sbb
(bad)
push
mov
and
repnz
icebp
cmp
or
pop
test
sahf
lea
ret
mov
jge
ds
mov
jmp
jge
sub
push
imul
mov
(bad)
in
lods
movs
fwait
mov
or
xor
push
clc
ror
fisttp
bnd
mov
bound
mov
push
fild
cmp
push
adc
mov
jno
(bad)
jno
mov
gs
xchg
cmp
cli
cmp
jne
push
push
cmp
cld
jp
sbb
and
pop
push
add
lahf
mov
xor
xor
jbe
xchg
xlat
addr16
xchg
sbb
les
stc
inc
jecxz
retf
ins
mov
mov
pop
pop
jle
lods
mov
in
mov
dec
out
ins
out
ins
adc
pop
mov
pop
add
outs
add
xchg
aas
push
fs
sub
lock
scas
cdq
test
sbb
add
mov
push
imul
fwait
push
fild
xchg
sbb
cmp
cmp
and
add
or
js
cdq
lods
and
xchg
push
loop
outs
icebp
test
nop
out
cmc
aaa
jg
mov
in
aam
aad
add
mov
(bad)
sub
repnz
in
xchg
or
pop
loopne
enter
cmp
sub
sub
jmp
xchg
outs
bound
jns
or
mov
out
mov
dec
inc
scas
mov
pop
cmc
pop
sbb
or
arpl
out
cmp
sbb
mov
es
xchg
cli
mov
cmp
push
jecxz
push
fwait
dec
xchg
mov
ss
les
jae
shl
dec
lahf
xor
adc
mov
adc
add
mov
movs
jle
xchg
scas
inc
call
call
je
loop
sbb
scas
add
rcr
mov
push
sbb
rcl
outs
ret
repnz
and
sub
cdq
loop
xor
popa
fild
movs
pop
lea
add
stc
and
test
cmp
jnp
sub
in
shr
bound
test
dec
je
mov
(bad)
adc
(bad)
push
ins
movs
add
stc
ins
adc
bt
ja
jl
loopne
pop
inc
adc
fadd
pop
sar
or
mov
call
fisttp
mov
retf
test
dec
fild
push
pop
aas
sbb
push
pop
pushf
jle
xor
lods
and
and
push
mov
mul
pop
clc
nop
mov
cmps
in
cmc
fdivrp
stos
mov
jmp
xchg
cdq
xor
scas
retf
(bad)
loop
sbb
mov
sti
dec
xor
inc
add
aas
push
cli
jp
stos
inc
or
loope
and
popf
sbb
fcmove
scas
cmp
adc
ins
retf
and
mov
jmp
push
or
scas
jmp
mov
popf
add
callw
fisttp
mov
sub
cmp
push
in
mov
ds
mov
cmp
mov
jmp
imul
ins
xchg
xor
(bad)
not
push
jno
sub
push
pusha
scas
adc
daa
pop
jo
dec
imul
sub
inc
sub
pop
std
outs
cdq
pop
dec
jmp
ss
imul
inc
xor
aaa
mov
pop
dec
movs
loop
mov
and
dec
(bad)
pop
mov
sbb
ret
ficomp
add
jge
std
cmp
inc
daa
pop
ficom
xchg
les
outs
(bad)
call
fmul
sub
imul
inc
add
mov
push
xor
sub
(bad)
stc
shl
jmp
sub
jge
or
lds
xor
cwde
iret
jne
pop
push
jecxz
mov
adc
movs
pop
test
ja
and
test
xchg
lds
adc
and
loop
in
push
cmc
sub
mov
out
xchg
adc
adc
(bad)
pop
inc
hlt
aaa
dec
cmp
and
sbb
out
pop
loope
mov
mov
pop
lods
sti
mov
cmp
popa
push
dec
lods
ja
stos
test
push
or
xor
enter
adc
jecxz
iretw
sub
mov
jg
(bad)
call
cmps
loopne
fwait
in
or
pop
loop
inc
pop
test
xchg
mov
add
ret
inc
pop
sbb
popf
ret
add
in
test
xor
bound
and
pop
mov
sbb
or
sub
mov
fcomp
jo
clc
xchg
xchg
stos
jle
cmps
jbe
mov
sahf
xor
inc
mov
dec
mov
inc
jbe
sbb
add
movs
sti
jne
aam
cmp
es
movs
xchg
loop
ss
scas
mov
shr
xchg
inc
popf
arpl
mov
jle
loope
sub
sar
jle
scas
inc
sti
push
mov
cwde
and
inc
push
pop
rcl
adc
cmp
and
mov
imul
cmp
and
neg
das
inc
adc
sub
(bad)
dec
pop
and
cwde
and
pop
repz
fadd
sub
(bad)
fwait
ins
call
sbb
sub
pop
pop
mov
test
sar
and
jbe
lds
sbb
jg
lahf
sbb
loopne
gs
icebp
fdiv
inc
inc
je
dec
in
popf
adc
sbb
push
and
imul
push
dec
(bad)
lahf
cmp
xchg
xchg
cld
scas
and
daa
fs
stc
stos
stos
jmp
lods
jge
ror
sub
cmc
jl
mov
gs
xchg
(bad)
cmps
fwait
dec
sbb
pop
cs
int3
adc
rcr
pop
pop
push
adc
mov
scas
cmp
pop
popa
into
mov
add
stos
repz
pop
inc
call
out
int
pop
adc
fwait
cmps
outs
push
mov
xor
popf
(bad)
sbb
or
cdq
jge
outs
int
pop
push
fild
jbe
jmp
fst
mov
adc
imul
jb
jge
mov
ja
cmps
add
mov
pushf
into
das
movs
pop
cdq
rcl
push
mov
addr16
(bad)
(bad)
push
inc
adc
xchg
and
or
cmps
(bad)
stc
lahf
(bad)
jg
repz
push
cmp
xchg
(bad)
(bad)
push
rcr
loope
push
cmp
(bad)
daa
xchg
mov
cld
push
pop
in
push
or
sub
(bad)
mov
and
jg
jecxz
cmp
scas
cmp
push
adc
xor
jecxz
scas
lock
jecxz
arpl
pop
rol
dec
jno
(bad)
adc
cmp
dec
mov
pop
(bad)
adc
dec
add
clc
xchg
mov
and
and
ror
mov
pop
cwde
sub
test
jnp
aad
adc
jnp
inc
push
stos
pop
cld
test
fs
or
pop
test
dec
push
push
(bad)
daa
add
xor
inc
sub
inc
adc
dec
jae
pop
je
clc
sti
adc
pop
or
sti
xchg
inc
cmps
mov
enter
adc
fcom
pop
inc
push
pop
and
in
out
outs
dec
cs
push
int3
popf
mov
popa
ror
arpl
es
lds
xchg
fld
adc
or
sbb
sar
xlat
aam
xchg
push
jecxz
sahf
in
add
aad
aas
test
shl
mov
leave
jnp
fistp
dec
out
out
mov
imul
out
cmps
jns
mov
sub
pop
sar
(bad)
jp
leave
ficomp
pop
ret
popa
pop
adc
ja
mov
dec
test
retf
dec
jg
packsswb
xor
sbb
cdq
test
jmp
(bad)
daa
(bad)
int
push
cli
sbb
jbe
xchg
imul
push
cwde
adc
ret
stos
rcr
dec
xchg
mov
xchg
push
bound
imul
fnstenv
(bad)
pusha
popf
mov
sbb
push
xor
jns
add
movs
popa
pushf
lss
xchg
adc
add
fisttp
sbb
adc
test
add
push
xor
cmp
adc
outs
outs
lods
ins
loop
pushf
adc
ret
sbb
lea
arpl
das
mov
leave
push
dec
inc
push
aaa
or
push
mov
mov
call
nop
add
sbb
test
stos
(bad)
loope
jo
mov
mov
(bad)
ds
cmp
test
jno
cmps
xor
inc
sbb
lahf
shl
repz
iret
cmp
xchg
or
(bad)
sar
push
mov
out
call
xchg
add
sub
or
hlt
dec
les
pop
sub
inc
mov
and
mov
push
adc
inc
cs
ins
jo
fidivr
and
xor
cmp
lds
out
sbb
out
dec
lahf
mov
xchg
dec
xor
fild
in
daa
neg
cmp
mov
mov
add
fmul
jmp
lock
inc
retf
pop
imul
mov
inc
cmp
cmp
ret
retf
adc
adc
jp
test
out
daa
add
retf
add
cmp
xchg
mov
mov
in
xchg
xor
jecxz
add
mov
jmp
cmp
pop
rcr
dec
jmp
sbb
pusha
test
loop
loope
pop
movs
cmp
(bad)
repnz
cmp
fcmovnbe
sbb
push
div
js
mov
or
retf
shl
push
fiadd
stc
xlat
out
dec
add
sahf
add
stos
call
dec
or
push
mov
push
in
xchg
cmp
idiv
add
push
out
dec
or
jge
jge
push
rcr
jbe
and
hlt
ins
dec
in
lods
aaa
nop
call
add
int
mov
movs
rol
sahf
adc
hlt
jg
ja
pop
push
in
push
add
js
test
hlt
je
mov
push
push
push
rcr
iret
imul
mov
mov
pop
xchg
dec
stos
cbw
rcl
test
push
or
jg
mov
movs
stos
jl
inc
mov
aad
mov
xchg
outs
sbb
ja
mov
(bad)
cmp
and
lea
cmp
dec
nop
mov
sbb
mov
inc
pop
mov
add
jmp
cmp
imul
sahf
lock
mov
and
and
(bad)
(bad)
xlat
shl
pop
xchg
stos
or
inc
cmps
add
shr
mov
out
jmp
cmps
adc
push
shr
dec
aad
cmp
(bad)
ja
xchg
pop
nop
in
add
ss
cmp
xor
in
xchg
xchg
dec
add
jae
and
sbb
mov
ins
das
add
stos
add
mov
or
lock
jne
jns
lahf
cmp
out
cmp
pusha
mov
push
stos
pop
inc
adc
rol
jae
test
cmp
cmp
aas
mov
jae
xchg
jo
ds
scas
or
icebp
and
mov
jae
loop
aas
test
test
jae
sbb
sub
sub
and
or
aad
dec
sahf
push
fcom
cmc
pop
es
sahf
imul
rol
rcr
inc
ds
xor
mov
ret
ins
xchg
int3
(bad)
mov
in
pop
mov
push
inc
lds
je
and
push
mov
sbb
jl
fdiv
add
mov
cmps
enter
pusha
ds
sti
shl
jb
out
into
inc
jp
test
jmp
push
jbe
adc
out
sub
iret
ret
jns
enter
mov
and
and
shl
sbb
rcl
mov
pop
and
sub
pop
test
icebp
pop
inc
stc
call
mov
dec
fsub
mov
popf
fcomp
ins
aas
mov
inc
jae
cmps
pop
gs
adc
xlat
aaa
mov
iret
dec
rol
pop
test
pusha
fisttp
aad
jg
daa
mov
mov
test
retf
(bad)
pushf
movs
loopne
cwde
adc
dec
popf
xchg
mov
and
cld
push
sub
adc
jno
imul
add
ret
mov
mov
lds
(bad)
cli
cmp
inc
fs
nop
jmp
data16
mul
int
shl
pop
imul
xchg
mul
and
inc
rcr
or
mov
mul
jg
pop
cmps
mov
mov
mov
add
in
repnz
fisttp
ret
clc
sbb
xchg
dec
lea
and
retf
pop
sbb
(bad)
jecxz
test
std
test
repnz
ret
mov
pop
data16
movs
jbe
and
cwde
das
repnz
cmp
push
lds
inc
or
inc
pop
adc
in
jge
pop
push
ret
les
mov
shl
aad
mov
mov
fucomp
jno
sbb
dec
dec
jbe
and
inc
fstp
sbb
cmc
dec
jecxz
mov
gs
fwait
jnp
leave
xor
das
sahf
loope
push
mov
out
xchg
mov
(bad)
or
mov
add
dec
xor
test
xchg
shl
mov
loop
cdq
ins
repnz
idiv
scas
daa
ret
ret
jb
pop
xchg
das
xchg
popa
imul
fidivr
fldenv
cmp
xchg
inc
xchg
imul
adc
aad
aad
and
xchg
cli
cwde
lock
das
leave
out
mov
mov
jp
cmps
inc
mov
pop
fsub
adc
mov
sbb
push
leave
pushf
cld
mov
jg
call
cs
cmp
pusha
xchg
or
sbb
outs
jle
pop
stc
dec
test
cs
or
pop
(bad)
call
ss
test
in
mov
xor
mov
mov
mov
ret
sub
pop
popa
out
adc
ret
jmp
mov
sub
dec
out
(bad)
mov
cmps
mov
cmp
add
cmps
sub
and
mov
aas
aaa
push
leave
jno
push
dec
outs
test
pop
jmp
daa
cdq
test
shl
mov
into
cmps
xchg
xlat
into
push
dec
out
adc
rcl
outs
add
pop
sub
retf
pop
ds
data16
int
xor
cdq
cmps
cld
lds
sbb
aas
outs
jmp
mov
sti
adc
dec
les
sbb
div
xchg
enter
repnz
out
add
mov
pop
enter
in
icebp
pusha
outs
aaa
xchg
mov
pop
dec
adc
ret
pop
outs
les
push
pusha
adc
scas
test
mov
not
jecxz
jmp
xchg
outs
in
shl
pop
pop
xor
push
and
js
xor
dec
add
fwait
hlt
or
pushf
mov
dec
pop
adc
js
mov
add
es
ret
xchg
cld
pop
(bad)
dec
mov
push
popa
mov
(bad)
popf
stc
dec
mov
shr
add
inc
mov
mov
push
adc
dec
setb
scas
jo
xor
xchg
push
cli
in
mov
call
xor
ins
dec
fnsave
inc
cs
ds
push
aaa
push
popf
outs
outs
sub
cwde
jge
repnz
adc
jecxz
pop
cwde
or
imul
jno
sub
call
arpl
mov
inc
sbb
add
xchg
sbb
or
int
cmps
call
cmp
cmps
fsub
test
sbb
mov
(bad)
xor
lods
add
mov
loopne
inc
jne
repnz
out
arpl
pop
jle
(bad)
(bad)
add
call
pop
cwde
fs
std
jmp
daa
aas
and
and
mov
xlat
icebp
dec
(bad)
mov
xor
mov
daa
(bad)
popa
push
sar
mov
sub
xchg
test
mov
fld
call
or
sbb
xor
ins
xchg
or
ja
and
lock
ror
lds
add
add
push
mov
cmp
push
adc
pop
push
xlat
mov
stos
xchg
push
pop
pop
dec
(bad)
or
arpl
loope
mov
mov
push
push
add
push
inc
push
jb
nop
lods
xor
mov
sub
mov
aam
cld
mov
les
inc
inc
call
ins
cwde
jns
dec
sub
fucom
push
call
lds
lea
mov
pusha
repz
push
lock
jo
pop
xchg
outs
fcmovnu
leave
sbb
sub
or
xlat
es
mov
mov
jns
lods
jbe
stos
sbb
nop
movs
mov
and
adc
js
push
xchg
xchg
xor
std
pop
cdq
and
cmp
adc
add
out
movs
mov
mov
cmp
cs
dec
mov
mov
fadd
mov
sbb
xchg
mov
xlat
hlt
enter
add
retf
fwait
jg
jmp
std
lds
mov
out
jmp
pop
dec
add
rol
ss
lahf
(bad)
mov
xor
add
out
lods
jae
xor
movs
mov
and
retf
in
(bad)
dec
adc
aam
clc
cmps
dec
or
xchg
jno
mov
cdq
mov
inc
dec
mov
ret
ret
jno
mov
fsub
shr
lahf
push
std
cmp
add
out
dec
imul
xor
rol
and
and
mov
shr
dec
sub
xchg
sbb
jnp
dec
out
or
push
movs
fld
add
lea
aam
push
outs
ss
cmp
pop
nop
mov
into
popa
or
push
push
scas
sahf
adc
shr
jle
adc
sub
fst
sub
jecxz
shl
xchg
push
enter
and
fld
xchg
push
xrelease
add
(bad)
in
or
and
fsub
in
mov
fisttp
stc
sub
push
adc
mov
and
and
or
push
in
aam
mov
(bad)
xor
shl
push
pop
cmps
adc
inc
sahf
or
push
aas
sahf
jbe
call
enter
mov
sub
dec
sub
dec
bound
aam
pop
dec
iret
mov
imul
push
xchg
or
inc
sbb
hlt
fild
lods
(bad)
jb
xlat
add
or
add
jle
mov
mov
inc
test
or
push
jno
xor
inc
cld
xor
xchg
adc
mov
cdq
rcl
pop
push
xchg
out
jnp
push
jmp
xor
sbb
sbb
frstor
(bad)
icebp
adc
test
pushf
mov
in
dec
rol
or
push
push
dec
jmp
arpl
lea
shl
adc
sbb
aam
mov
ins
leave
lock
adc
mov
jp
pop
jecxz
stc
push
pushf
xchg
xlat
pop
out
fcmovne
sub
pop
cmp
mov
mov
xor
mov
xchg
xchg
pop
neg
sti
lods
push
dec
mov
out
push
inc
mul
adc
jne
cmp
pop
adc
scas
aam
popa
in
enter
lock
sbb
push
pop
leave
movs
call
pop
pop
scas
sub
lahf
not
jbe
inc
xor
ja
sbb
repz
enter
icebp
mov
push
or
out
jno
cmps
aaa
sub
xchg
push
adc
in
loope
test
out
cmps
mov
or
ret
(bad)
xor
stos
mov
dec
hlt
iret
mov
sbb
nop
cmp
or
xor
outs
cmp
(bad)
out
in
cmp
outs
cs
push
push
sbb
xor
inc
push
int3
mov
push
xor
push
dec
pushf
add
test
mov
aaa
mov
addr16
cmp
(bad)
mov
and
xor
add
test
mov
or
lahf
jno
aam
movs
dec
mov
mov
mov
push
imul
ss
stos
cmp
test
jbe
int3
mov
dec
cdq
cdq
sbb
push
test
stos
push
dec
enter
leave
dec
mov
cs
push
cmp
retf
lods
push
ret
pop
mov
pushf
inc
xchg
outs
adc
push
fadd
push
icebp
mov
jnp
aam
mov
mov
xchg
pop
mov
hlt
mov
xchg
mov
les
add
(bad)
outs
or
pushf
ret
movs
and
popf
rol
imul
aaa
cld
addr16
dec
add
not
sar
and
test
addr16
xor
nop
pop
or
add
cwde
dec
dec
cmp
mov
add
mov
mov
adc
adc
out
retf
imul
pop
xlat
cmp
jecxz
(bad)
sbb
xor
leave
pop
pop
adc
cmp
stos
xor
sbb
sbb
xlat
test
xchg
out
(bad)
dec
bound
dec
pop
leave
xor
ret
sbb
aas
(bad)
mov
ins
out
into
daa
std
inc
mov
cmps
sbb
clc
loop
inc
or
stos
pop
add
or
movs
mov
sub
pop
(bad)
xchg
or
jmp
not
and
cli
pop
mov
sub
shr
je
xor
fcmovb
cmp
lea
and
stos
test
pusha
jns
inc
adc
pop
loop
test
cmp
pop
push
rol
leave
stos
inc
call
jle
or
sbb
ins
adc
xor
retf
fwait
lea
mov
push
and
test
pop
out
mov
(bad)
xchg
fdiv
rcl
(bad)
fstp
sub
jmp
push
fisubr
fstp
or
jle
pop
adc
and
pop
stos
sbb
ja
cmp
sub
mov
cmp
or
retf
and
mov
jb
cdq
lods
int3
sub
out
sub
mov
and
repz
xor
jmp
sbb
and
(bad)
pop
mov
rol
jmp
jo
das
jecxz
daa
push
jge
pop
lea
dec
lds
aam
jne
das
cs
jl
xchg
lods
in
xor
sbb
dec
call
lea
xchg
dec
fild
push
int
and
fistp
addr16
sub
mov
stos
mov
mov
fstp
dec
mul
fcom
mov
push
mov
jle
add
aaa
push
add
popaw
in
fisubr
rcr
pusha
sub
add
jnp
leave
mov
sub
push
sub
cmc
pushf
or
or
adc
shr
dec
xor
cmps
adc
and
lock
dec
inc
retf
cmps
ss
jp
xchg
cmps
sti
pop
in
xchg
loope
add
add
scas
fwait
popf
mov
in
cld
mov
cmps
xchg
mov
sbb
or
and
fstp
adc
or
sahf
aad
mov
adc
aas
retf
rcl
mov
sbb
jge
fmulp
cmps
mov
push
push
adc
mov
pusha
hlt
cmp
sbb
pop
lea
jecxz
scas
ret
adc
in
jae
mov
dec
mov
ret
cmps
ror
aaa
sub
fs
add
test
dec
ror
icebp
pop
imul
inc
pop
sub
add
or
pop
imul
in
dec
cmp
xlat
sbb
or
push
and
and
addr16
and
pop
hlt
jns
or
aaa
adc
sub
push
add
inc
sub
push
cwde
cmp
or
jecxz
out
shl
mov
ins
sub
or
fnstsw
adc
and
data16
mov
push
mov
outs
in
sub
mov
add
add
add
test
inc
sub
lahf
lods
das
mov
and
dec
pop
test
cmps
into
push
sub
jnp
xchg
inc
std
shl
mov
arpl
scas
fsubr
and
mov
in
mov
jno
pop
xchg
add
jp
adc
outs
fstp
call
sub
dec
dec
mov
lahf
jge
hlt
push
fdivp
mov
loope
call
ret
popa
imul
mov
and
loope
jg
sbb
push
add
sub
add
cmp
pushf
push
mov
dec
push
or
mov
mov
fstp
rol
adc
push
pop
xor
in
add
sbb
stos
ja
jg
fs
imul
mov
mov
cmps
lock
and
or
out
in
addr16
(bad)
lahf
fsub
sub
inc
xchg
push
(bad)
stc
pop
mov
ret
(bad)
pop
sub
mov
pop
and
test
jae
enter
push
sub
gs
call
ja
imul
jg
adc
jmp
sahf
push
out
call
jne
push
sti
add
movs
sub
mov
xchg
(bad)
jg
xchg
lahf
(bad)
inc
out
push
jp
pop
(bad)
jmp
adc
dec
(bad)
test
push
add
mov
or
and
jno
mov
mov
iret
xchg
jo
jb
inc
xchg
nop
test
jnp
push
xchg
xchg
dec
fmul
js
xor
adc
shl
jle
and
mov
sti
adc
in
leave
aam
sub
pop
pop
inc
repnz
mov
pop
test
add
sub
js
and
push
out
sti
jae
pop
out
movs
clc
dec
int3
lea
pusha
outs
xlat
pop
mov
add
popf
js
mov
aaa
bound
add
cld
fdiv
out
add
adc
mov
pop
pop
pop
jbe
cdq
addr16
xor
jl
test
and
cmps
popf
ins
ficom
jno
add
xor
cmp
into
bound
call
clc
mov
adc
scas
mov
pop
mov
mov
mov
xchg
int3
pushf
push
jnp
sbb
call
iret
sub
(bad)
iret
inc
push
jno
push
mov
repz
rcl
and
jp
mov
add
in
pop
addr16
adc
mov
adc
mov
push
dec
jmp
inc
xor
mov
xchg
mov
ins
pop
jb
cmp
imul
fwait
(bad)
cld
stos
inc
mov
mov
and
xor
xchg
xchg
push
ja
adc
jno
out
push
out
in
and
inc
jp
push
mov
mov
dec
inc
adc
cmpps
mov
push
push
aam
rol
dec
stos
or
jae
gs
cmps
and
bound
imul
fldcw
mov
stos
mov
jmp
fnstsw
sub
mov
fst
test
ret
or
ror
pop
scas
idiv
imul
jo
imul
dec
ret
clc
pusha
sbb
pop
loop
in
cld
and
out
retf
pop
mov
cmp
(bad)
add
nop
mov
adc
enter
scas
push
jno
dec
loop
ret
jno
cli
jne
xchg
or
pop
ins
pop
mov
ret
push
dec
dec
fwait
shr
xor
mov
sub
xor
scas
iret
(bad)
mul
enter
pop
test
or
inc
xlat
add
test
jnp
dec
sbb
hlt
test
mov
adc
addr16
dec
nop
inc
pxor
ja
loop
add
pop
xor
inc
inc
add
adc
pop
mov
pop
pop
ss
sub
mov
repz
sub
pop
lds
pand
popa
out
mov
add
xchg
sbb
aas
iret
hlt
enter
mov
out
iret
mov
and
fidivr
or
sub
dec
lds
cdq
pushf
or
xchg
dec
mov
mov
fisttp
xchg
pop
daa
push
aam
lods
adc
mov
call
ins
jae
sub
jl
je
ins
lods
jecxz
(bad)
repnz
retf
and
movs
lods
(bad)
jne
push
call
call
pop
sub
sub
je
xchg
leave
jmp
dec
pop
xor
les
sbb
cmp
mov
sub
xor
xor
scas
std
xchg
fsubr
mov
in
out
dec
push
fisttp
mov
cdq
mov
xlat
mov
or
jno
pop
add
ret
inc
ret
imul
je
xor
pop
imul
jmp
fistp
jge
aaa
sub
in
xor
pop
movs
cmp
push
scas
and
ret
pop
jnp
popa
sti
div
inc
aas
icebp
adc
jmp
movs
aaa
call
(bad)
mov
push
retf
push
loopne
cmc
lock
mov
(bad)
fistp
jns
push
cmps
shr
xor
dec
bound
and
add
movs
stos
mov
mov
ins
sub
inc
adc
sub
cld
(bad)
add
ss
nop
add
ret
pop
mov
mov
(bad)
outs
mov
sbb
shl
add
fcmove
jg
sti
sub
loop
mov
ss
dec
jno
xchg
jg
push
out
ins
(bad)
jne
cmp
aas
scas
(bad)
rcl
jmp
jns
test
or
push
dec
cmp
pop
les
scas
or
cmc
and
fcom
jno
sub
aad
(bad)
sti
sbb
js
leave
scas
mov
jge
cmp
add
or
push
mov
fwait
je
xchg
sub
cmp
les
xchg
dec
popa
dec
pushf
stos
ins
(bad)
push
cmc
pop
mov
pop
cmc
out
das
lods
ss
js
call
mov
stc
in
pop
jo
inc
rcl
mov
cmp
xor
sbb
adc
sbb
aaa
stos
mov
stos
retf
mov
mov
mov
dec
sbb
cwde
xchg
push
jmp
in
dec
or
inc
jl
loopne
mov
mov
jo
sbb
not
pcmpeqb
adc
aaa
in
popa
xchg
mov
sub
pop
ins
pop
or
adc
mov
les
xchg
in
xor
nop
cmp
out
fcom
or
fcomp
jb
xchg
arpl
xchg
movs
scas
dec
cwde
mov
es
jbe
int3
test
es
test
es
push
mov
in
adc
addps
adc
loope
loop
pushf
in
push
mov
jmp
mov
test
scas
sbb
loopne
lahf
out
adc
enter
add
std
out
push
scas
mov
addr16
xchg
and
pushf
daa
cmp
ret
gs
cmp
les
inc
push
out
loop
lea
imul
lock
addr16
js
add
adc
dec
(bad)
not
ss
xchg
xchg
push
pop
pop
mov
jp
dec
hlt
clc
xchg
xchg
rcl
fwait
and
in
rcr
inc
jmp
push
arpl
inc
rcl
and
mov
xor
ins
call
ja
push
or
jb
outs
pop
enter
sub
or
popf
mov
pop
imul
lds
pusha
push
cld
mov
fs
mov
stc
ror
mov
js
and
lods
push
popa
push
xchg
and
xchg
sbb
mov
ror
jle
sbb
dec
sar
call
jle
sbb
sbb
jle
dec
sbb
pushf
jne
push
push
dec
repz
mov
outs
imul
mov
scas
gs
cmp
aaa
es
mov
jb
call
rcl
iret
out
jno
mov
aaa
imul
sbb
je
jmp
push
dec
pusha
mov
mov
leave
push
mov
xchg
dec
ret
outs
scas
or
mov
and
push
and
lds
popf
inc
lahf
pop
cmp
mov
(bad)
loopne
push
mov
sar
cmp
push
cmps
cmp
cmp
mov
shr
sub
pop
cs
sar
retf
pop
mov
jo
or
popa
fwait
mov
xor
iret
pop
lock
sub
mov
add
bound
inc
das
retf
xor
xor
push
(bad)
movs
pushf
or
test
pcmpeqw
fnstenv
jnp
pop
xchg
out
clc
mov
stos
inc
push
push
fsub
xchg
inc
out
sbb
mov
xchg
jo
jge
(bad)
loop
or
fdivr
and
mul
pop
mov
xchg
test
pop
nop
loopne
leave
push
and
lahf
inc
not
addr16
xor
test
ins
jge
(bad)
pushf
sbb
sub
cmc
pop
sub
mov
ret
xchg
add
fild
inc
sbb
jle
rol
hlt
mov
adc
mov
(bad)
cmp
add
(bad)
leave
mov
jmp
cmp
rcr
adc
repz
call
xlat
jbe
jo
sti
mov
or
test
push
push
cmps
ins
mov
pushf
dec
in
fadd
mov
dec
test
in
cmps
mov
in
dec
loop
rol
pop
dec
push
sbb
mov
or
inc
in
jae
jae
dec
or
rol
retf
ins
stos
jne
xor
popa
fdiv
fs
popa
fisub
inc
(bad)
cwde
out
inc
out
xor
jae
(bad)
jl
jecxz
jp
repnz
stos
adc
(bad)
dec
loop
shl
mov
das
xor
out
fwait
mov
jnp
xchg
ins
cdq
adc
imul
call
inc
(bad)
lock
aas
or
lods
pusha
rcr
sbb
jno
ret
outs
mov
(bad)
push
cli
xchg
adc
mov
sahf
mov
dec
add
mov
pop
dec
pop
(bad)
sub
js
ss
mov
push
xchg
in
inc
cmps
mov
or
(bad)
jns
xor
sti
xor
outs
jo
or
cmp
add
rcl
fstp
bound
xchg
dec
in
or
das
or
mov
jmp
mov
sub
inc
das
push
jl
adc
mov
movs
mov
sbb
and
xchg
add
inc
daa
jecxz
add
xchg
cld
lock
mov
in
loop
cmp
add
(bad)
pop
xchg
(bad)
mov
stos
popf
gs
fs
mov
mov
mov
sbb
push
ins
adc
cmc
pop
add
out
add
jge
mov
int3
or
test
cmps
adc
jp
aam
sub
sub
push
push
into
bound
test
fldcw
mov
leave
fcmove
and
push
sub
icebp
clc
(bad)
xchg
push
retf
in
jg
sbb
xchg
(bad)
and
jg
or
sub
adc
dec
jnp
js
fisttp
in
popf
xor
retf
sbb
push
inc
and
sbb
adc
popa
mov
mov
test
push
sbb
xor
or
in
mov
mov
bound
cmp
shl
sub
lods
xor
movs
cmps
and
loop
cld
fmul
and
adc
xor
sub
fmul
lahf
ins
and
inc
jae
loop
jo
mov
call
or
jmp
add
mov
xor
loopne
mov
scas
pop
sbb
inc
mov
or
dec
ret
fnsave
mov
xor
pop
mov
icebp
or
into
cdq
sub
(bad)
fst
(bad)
xchg
or
shr
repnz
loop
cmps
bnd
jae
or
jbe
pop
cmp
sub
push
push
pop
jle
mov
in
fidiv
or
or
mov
jns
fwait
je
and
retf
xchg
add
dec
jp
push
mov
in
pop
dec
cdq
enter
jo
cmc
add
mov
dec
sbb
cwde
push
or
aas
inc
ds
mov
int
dec
sub
and
leave
sti
(bad)
das
mov
mov
das
adc
add
sahf
out
push
daa
and
sti
sub
jge
mov
pop
arpl
fsubr
ss
inc
xchg
outs
sub
in
cmp
loop
xor
call
cmps
int
cmps
movs
mov
push
leave
jbe
clc
jmp
pop
and
loope
movs
in
(bad)
mov
dec
sar
icebp
in
xchg
jo
and
fisttp
in
adc
les
mov
mov
sbb
ds
and
popf
hlt
or
sbb
(bad)
retf
jbe
pop
xchg
mov
pop
cmp
and
imul
xchg
es
mov
xchg
push
movs
jae
jg
dec
and
aam
push
ins
cli
ficom
and
sbb
jg
dec
jle
(bad)
sub
mov
pop
mov
xchg
dec
ror
xchg
pop
mov
fisttp
nop
ret
mov
dec
inc
mov
inc
into
push
clc
push
das
out
stos
sub
jbe
push
push
fs
gs
repz
dec
je
das
mov
push
and
ins
push
jecxz
jmp
pop
cmp
ja
push
xchg
push
fsubr
movs
inc
jl
rol
sub
rcl
cmp
ds
dec
arpl
xchg
add
cli
mov
mov
call
sub
push
fcmove
test
jle
call
adc
cmp
aam
adc
cmc
or
int
mov
sbb
or
je
sbb
push
inc
cs
(bad)
shl
aas
add
cmps
sbb
scas
push
inc
sub
inc
adc
mov
push
sub
enter
and
push
mov
mov
out
dec
cmp
inc
shl
mov
lea
dec
cmc
in
cmps
jno
pop
or
pop
scas
int
psrld
or
dec
and
inc
test
lock
push
push
stc
idiv
enter
sub
adc
fdiv
mov
lock
outs
inc
hlt
mov
aam
push
je
inc
mov
jmp
sahf
icebp
or
int3
push
enter
xchg
hlt
mov
cli
test
xlat
and
push
cli
arpl
xchg
cmp
sbb
iret
mov
arpl
sub
(bad)
dec
add
sbb
sbb
push
push
(bad)
sub
aam
sub
jmp
cmp
cmp
or
sub
test
cmc
xchg
jne
dec
pop
shl
adc
sub
xor
pop
cmp
sub
out
sub
rol
leave
ret
mov
or
shl
fistp
inc
pop
dec
das
cmps
jbe
inc
sbb
hlt
xlat
addr16
stos
cld
sbb
jnp
jb
sbb
adc
iret
das
sub
idiv
repnz
cmp
push
(bad)
push
xor
pop
and
mov
mov
adc
loopne
mov
ror
inc
cmc
aad
jmp
pop
push
pusha
push
adc
pop
inc
imul
sbb
pusha
stc
jo
shr
prefetch
or
lods
cmc
fwait
xchg
std
push
dec
popf
iret
mov
rcl
in
and
and
jmp
inc
sbb
mov
mov
jg
(bad)
mov
out
push
outs
out
mov
rol
in
popa
add
and
mov
sbb
mov
xchg
mov
mov
push
add
xor
mov
in
sub
ds
add
dec
cmp
push
xchg
loop
pop
or
dec
popf
mov
ss
add
jmp
xlat
xlat
adc
push
gs
repz
dec
jmp
jns
mov
int
sahf
movs
mov
and
cmp
sub
lods
adc
add
lea
adc
or
movs
mov
mov
clc
loop
pop
or
sub
sahf
cmp
jmp
(bad)
out
test
and
fdiv
jmp
add
xor
rcl
mov
ins
mov
ds
pop
mov
cmp
adc
pop
ror
push
gs
fidiv
sar
cs
(bad)
(bad)
dec
test
xor
pushf
add
xchg
out
fcom
dec
push
in
or
loope
xor
add
cmc
imul
pop
add
fisubr
mov
mov
outs
lds
jb
test
(bad)
(bad)
int3
ror
std
dec
pop
imul
leave
jno
push
jl
cli
popf
push
in
into
sbb
lea
fs
add
jecxz
xor
sar
mov
cld
in
sbb
dec
sbb
stos
std
test
mov
sub
dec
xor
mov
mov
xor
std
fadd
xor
fcom
pop
xchg
nop
je
sbb
add
iret
dec
(bad)
mov
je
jno
mov
gs
push
and
jb
push
mov
dec
retf
(bad)
xor
cmps
sahf
mov
into
mov
xor
jae
sbb
sbb
mov
jnp
mov
(bad)
cdq
dec
mov
cmp
(bad)
jle
ret
jnp
out
cmc
jbe
imul
pusha
mov
add
pop
jl
lods
shl
aaa
cmp
retf
shl
sbb
push
rcl
cmp
out
out
fucomp
stc
jmp
mov
mov
mov
mov
sbb
fadd
add
dec
cmps
jg
mov
int3
mov
mov
cmps
fcmovnu
push
neg
test
ror
imul
adc
mov
call
dec
push
dec
jno
cmps
pop
push
cld
loope
xor
into
out
sbb
or
(bad)
sar
sti
fnstsw
mov
push
or
retf
es
mov
gs
sub
pop
mov
ror
mov
shr
dec
out
and
mov
sub
add
jnp
jmp
xchg
sahf
push
inc
mov
dec
cmps
mov
cmp
(bad)
inc
cli
movs
dec
add
mov
mov
sub
and
mov
dec
mov
inc
jmp
in
mov
adc
stos
movs
imul
les
or
mov
sub
fwait
or
lods
push
dec
mov
aaa
xor
cdq
mov
iret
mov
loope
stos
cwde
jmp
add
ss
retf
jg
push
cmps
mov
lss
ret
sbb
mov
(bad)
(bad)
fmul
xor
data16
cli
inc
jl
std
mov
inc
and
ret
enter
sahf
adc
mov
jae
icebp
cmp
or
inc
jb
xchg
sbb
push
mov
jns
pusha
ret
popf
sub
das
cmp
fcomp
xchg
add
ss
retf
cmp
dec
mov
out
es
sbb
addr16
test
sub
and
mov
add
jle
popf
loope
adc
pop
fist
pushf
sub
push
rol
cmp
or
add
icebp
repz
cld
rcl
jmp
cli
ret
xor
add
jp
dec
fisub
(bad)
not
mov
mov
add
lds
mov
and
pop
test
addr16
rol
jmp
add
add
add
ret
in
jb
leave
mov
sub
inc
inc
lahf
push
adc
(bad)
mov
jg
xchg
into
or
fwait
pop
push
inc
scas
pop
imul
xor
cmp
xchg
mov
sbb
lds
sbb
sbb
sub
jp
adc
imul
sahf
aaa
xor
jmp
test
mov
xchg
scas
inc
mov
mov
pop
push
xchg
inc
or
fs
or
mov
jno
cld
lods
jae
and
loop
push
jae
stc
cwde
cmps
mov
mov
mov
imul
(bad)
xchg
loope
jge
and
mov
test
data16
cld
dec
icebp
xchg
je
stc
rol
lock
add
es
push
cmp
inc
call
std
push
push
jne
in
dec
push
dec
rcl
push
clc
or
xor
iret
out
xlat
or
loop
or
jp
jb
push
mov
push
mov
and
das
jmp
inc
leave
inc
mov
mov
mov
mov
mov
xchg
test
pcmpeqd
into
call
sub
xor
xor
mov
out
pop
(bad)
mov
movs
xchg
shr
int
mov
inc
jae
mov
in
push
xchg
int3
jl
dec
pop
call
push
and
(bad)
adc
push
inc
clc
add
pop
pop
push
push
test
push
loop
sbb
sbb
xor
mov
addr16
dec
in
int3
imul
outs
fild
pusha
jns
mov
sar
adc
arpl
(bad)
in
sbb
sub
fadd
xchg
jnp
mov
test
adc
cs
xchg
repz
push
pop
lods
rcl
popf
xor
ins
sub
inc
mov
pop
push
or
sbb
or
mov
jecxz
adc
jmp
dec
ds
mov
sub
lea
sub
pop
ins
and
mov
mov
pushf
aas
rol
inc
int
and
in
jnp
gs
cmp
rol
push
das
adc
push
pop
jb
in
rol
loopne
std
sar
enter
aad
div
jg
push
inc
(bad)
sub
das
jmp
enter
lock
out
mov
enter
imul
adc
hlt
imul
repnz
cmp
push
cmp
xor
popa
push
test
or
mov
mov
jo
ins
(bad)
mov
fsubp
push
ja
mov
cmc
mov
pop
inc
xchg
popa
outs
xor
push
hlt
aas
aad
inc
push
adc
and
std
jg
sub
add
sbb
push
jmp
popf
lods
mov
push
cmp
jl
add
pushf
daa
add
jne
sub
cmp
cmp
push
ror
sbb
inc
out
lds
sbb
popf
push
out
in
or
je
shr
nop
mov
ret
sub
imul
push
sbb
imul
ret
dec
inc
adc
ins
je
mov
stos
enter
mov
cmp
js
jl
xor
and
jns
adc
adc
loopne
pop
(bad)
cld
shr
stos
loopne
mov
and
mov
into
push
and
mov
fistp
fwait
data16
push
sldt
outs
xor
mov
jge
mov
lods
sub
inc
cwde
lahf
pop
into
pop
pop
cmp
mov
pop
jae
dec
inc
mov
mov
call
mov
enter
test
enter
mov
pop
daa
add
repz
int
scas
xor
inc
xchg
and
inc
js
loopne
adc
ins
cmp
add
pop
mov
mov
out
jmp
or
neg
ja
rcl
cld
ds
xchg
xchg
jnp
xchg
mov
retf
jecxz
ss
into
cld
xchg
in
sar
push
fs
jmp
movs
icebp
jns
mov
mov
jp
dec
lea
(bad)
fidiv
mov
icebp
jae
movaps
and
or
xchg
inc
xchg
call
fisub
or
add
fstp
sbb
push
lds
retf
adc
jg
jmp
add
adc
jl
or
jbe
test
aaa
cmc
call
icebp
cmp
clc
shr
inc
cli
pop
jns
popa
and
rcl
jno
xchg
loopne
push
mov
mov
icebp
add
jo
loopne
in
movs
(bad)
and
inc
mov
inc
mov
mov
pop
add
hlt
jp
dec
mov
sbb
daa
jg
sbb
hlt
cmovl
in
not
pop
push
mov
rcr
add
fwait
sub
jae
add
pop
leave
mov
jae
pop
rcl
aaa
pop
mov
arpl
movs
sub
seta
jb
jmp
dec
stos
add
lock
jae
dec
shl
mov
jle
clc
ins
data16
inc
(bad)
retf
sbb
cmp
inc
and
push
jb
stos
sub
mov
jl
jns
std
mov
sbb
add
addr16
pop
pop
mov
outs
or
mov
jns
(bad)
xor
dec
add
(bad)
fmul
dec
mov
rol
(bad)
jbe
not
xchg
mov
mov
lahf
call
dec
mov
lock
adc
(bad)
movlps
jecxz
iret
rol
pop
dec
pop
mov
div
aaa
mul
and
jb
nop
clc
repz
in
stos
xor
cli
push
pop
pop
mov
push
lods
xor
and
ins
push
test
mov
lahf
stc
paddq
cmp
sub
mov
add
xor
push
rcr
mov
arpl
mov
push
add
pop
mov
gs
mov
sub
stos
mov
sub
aam
icebp
and
dec
daa
mov
adc
jno
cmp
pop
xchg
or
xor
(bad)
je
das
sbb
jl
retf
jb
and
xor
stos
repz
and
mov
lea
mov
sub
in
fwait
jno
int3
or
push
xor
cwde
add
je
icebp
pop
dec
push
xor
add
test
in
outs
push
data16
and
cmp
mov
jl
dec
scas
inc
loop
xchg
inc
lods
stos
(bad)
out
mov
pop
pushf
pushf
xchg
lods
vprotq
fisubr
xchg
fsub
pop
dec
jb
cmp
icebp
(bad)
mov
and
mov
je
inc
mov
shr
pop
pop
mov
cmps
out
mov
loop
lods
arpl
jp
lods
les
mov
ss
xchg
aad
inc
push
sbb
mov
and
loop
sbb
push
and
push
outs
and
sbb
pushf
fild
out
push
sbb
jmp
hlt
jo
loopne
inc
mov
sub
sub
or
std
push
or
stos
inc
pop
cmp
pop
adc
cmc
mov
cmp
pop
mov
out
push
adc
aas
stc
inc
gs
jns
pop
pop
test
loopne
and
push
in
cmp
pop
sub
sub
mov
pop
add
fwait
mov
shl
cmp
dec
push
shrd
(bad)
xchg
jp
aad
lahf
xchg
sbb
enter
out
lds
test
push
xchg
add
cmp
dec
pop
stos
nop
inc
and
retf
mov
dec
inc
mov
push
loope
test
lahf
adc
ror
sub
inc
lods
ret
sbb
ss
sub
pop
call
(bad)
ds
pushf
pop
mov
lea
in
add
mov
pop
dec
fs
mov
and
pop
outs
dec
mov
add
lock
and
rcl
jae
jne
adc
scas
xor
out
mov
clc
out
or
inc
lds
fst
pusha
push
jnp
xchg
pop
cli
repnz
mov
mov
enter
pop
add
add
data16
push
out
ds
pop
sbb
arpl
cmps
sti
xchg
mov
add
hlt
and
aas
pop
xor
mov
and
mov
lods
and
pop
lods
ds
pop
adc
push
adc
jns
jns
movs
xor
push
push
pushf
movs
jno
jmp
clc
cli
(bad)
jp
ja
cdq
mov
pop
jns
(bad)
shl
popf
mov
movs
jno
or
gs
dec
adc
or
xor
or
dec
push
adc
daa
aad
cwde
xor
aaa
daa
mov
xchg
sahf
or
mov
mov
mov
and
jns
mov
jns
in
inc
les
xor
pusha
jne
push
push
fucomip
fwait
cmp
(bad)
pop
mov
bound
fild
and
dec
imul
xor
lea
inc
mov
daa
inc
pop
jle
mov
ins
push
jge
mov
push
inc
xchg
cmp
mov
adc
jne
ror
or
jg
mov
out
cmps
mov
mov
test
cmp
inc
dec
fadd
adc
mov
pop
mov
jge
loope
mov
pop
imul
mov
mov
call
js
xor
mov
fld
int3
dec
in
xchg
dec
pop
idiv
cmc
sub
adc
mov
jl
cwde
in
ins
stc
jp
mov
pop
aad
adc
repz
xor
jae
push
jbe
push
daa
(bad)
out
mov
fs
ss
ret
pusha
fsubr
arpl
xchg
xor
in
outs
cmc
hlt
adc
test
std
aaa
mov
sbb
xor
sbb
fwait
(bad)
and
mov
mov
les
cmp
sbb
sbb
pop
ds
mov
(bad)
fucom
mov
imul
sbb
push
push
and
shr
sbb
push
push
das
xor
lods
rcl
xor
mul
add
adc
fs
call
std
pop
dec
retf
sbb
and
sub
adc
sbb
dec
cmp
fist
fbld
mov
(bad)
xor
or
test
jmp
push
clc
pop
jno
dec
ja
adc
iret
mov
dec
inc
inc
sub
(bad)
fistp
outs
mov
ret
xor
xor
mov
test
xchg
xor
cs
ss
jmp
ret
mov
lods
jg
add
loopne
mov
push
jp
dec
mov
sbb
adc
in
mov
pusha
cmp
fsubr
mov
mov
in
and
ret
pop
adc
sbb
imul
popf
cli
mov
ret
ins
nop
mov
sbb
cli
add
fcmovbe
fnop
pop
fs
mov
cmp
fild
mov
pop
or
jecxz
jb
mov
dec
push
push
aas
icebp
sub
sti
and
mov
mov
jge
sub
inc
leave
jl
vprotd
mov
not
stos
add
in
add
cmp
pop
(bad)
jg
cwde
shr
jmp
xor
(bad)
in
mov
pop
lods
dec
jp
push
shl
mov
sub
aad
rcl
xchg
into
popa
out
es
jnp
shl
fidiv
int
aaa
dec
push
js
inc
in
mov
push
arpl
ret
movs
cmc
or
test
stos
fiadd
push
fisttp
cmp
aam
sub
cmp
mov
and
mov
retf
xchg
dec
inc
pop
xchg
mov
das
xor
xchg
sbb
stos
xchg
jecxz
mov
push
cmps
xor
jno
daa
movs
cdq
(bad)
ficomp
sub
rcl
jmp
dec
xor
mov
and
mov
enter
(bad)
xor
fwait
jp
or
pushf
adc
push
pop
inc
fcomi
test
add
lods
sbb
and
aaa
cmps
lea
push
or
je
pop
dec
xor
add
push
pop
dec
push
addr16
jne
jge
aas
pop
lds
(bad)
jbe
mov
xor
cdq
mov
fwait
xor
inc
xor
inc
aad
inc
enter
inc
aad
cmp
ins
lods
movs
out
push
cdq
int3
dec
add
sbb
xchg
je
push
cmps
and
(bad)
mov
adc
enter
add
jae
jno
test
add
lods
int
sub
call
sbb
sbb
fcomip
popf
mov
jmp
adc
sbb
in
pushf
mov
push
pop
add
mov
sub
(bad)
mov
jae
add
jp
xchg
sbb
rcl
xchg
add
out
xchg
(bad)
jmp
adc
inc
xor
jmp
cli
js
cmps
push
hlt
int
ss
enter
repz
mov
sbb
mov
out
mov
or
retf
mov
rol
cmc
sub
sub
jnp
sbb
or
and
lea
pop
bound
or
sbb
and
popa
sbb
adc
out
jno
inc
mov
and
push
cs
outs
test
imul
bound
sbb
mov
int
mov
dec
dec
xchg
pop
rcr
cmc
pop
stc
inc
ficom
sbb
sub
push
pop
cmps
adc
adc
ss
jg
das
xchg
sahf
sbb
ret
sbb
xchg
jae
jae
sbb
mov
out
mov
stos
mov
ja
mov
call
out
hlt
adc
or
mov
add
mov
or
clc
adc
jmp
cmps
inc
cli
dec
(bad)
call
es
push
aas
icebp
stc
sbb
push
imul
add
pop
repz
sar
icebp
and
shl
mov
and
xchg
cmc
nop
std
jne
call
jmp
addr16
cmp
scas
sub
retf
jbe
push
callw
in
pop
movs
sti
dec
dec
fcomp
mul
call
adc
jne
dec
jp
lods
push
js
xchg
mov
xor
mov
push
dec
xchg
xchg
ja
outs
push
ror
and
loop
cmp
pop
inc
jecxz
sbb
adc
je
fiadd
xchg
mov
pusha
shl
clc
add
out
pop
mul
inc
dec
mov
popa
cmp
mov
retf
outs
test
mov
std
xchg
jae
push
in
or
xchg
movs
mov
inc
jbe
in
and
jp
add
aas
add
jbe
ss
sub
je
(bad)
movs
gs
mov
test
mov
adc
arpl
imul
mov
cdq
jno
pop
enter
pop
mov
sub
push
jecxz
movs
in
cmp
into
hlt
and
loopne
popa
pushf
mov
mov
idiv
aad
jmp
pop
sub
dec
ins
das
es
adc
popa
adc
add
mov
sti
xchg
sbb
ret
in
ror
cli
je
and
shl
dec
fild
push
sub
out
sbb
push
inc
gs
mov
ret
or
les
push
fwait
inc
imul
and
and
adc
pop
leave
hlt
adc
movs
je
mov
mov
int
fistp
retf
or
pop
stos
adc
dec
push
into
stos
stos
dec
mov
out
cmp
mul
fnstsw
jmp
lahf
shr
not
push
js
push
movs
push
scas
ja
push
cmps
cmp
cs
inc
int3
xchg
jnp
xchg
mov
xchg
xchg
ja
push
sub
scas
xor
push
int
push
bound
test
or
or
enter
cdq
jb
xor
rol
dec
mov
cmp
(bad)
arpl
daa
or
jns
mov
push
dec
push
mov
cld
(bad)
adc
mov
and
adc
inc
fwait
mov
jg
scas
dec
dec
lea
dec
fistp
xor
xchg
das
or
and
(bad)
(bad)
cmps
dec
hlt
sar
xchg
mov
sbb
test
mov
mov
push
test
ds
ja
or
lods
hlt
or
mov
outs
push
aas
sub
loopne
setp
rol
push
test
aas
adc
shr
stos
sub
inc
mov
rcl
cmc
sub
movs
sar
mov
fimul
sub
add
mov
dec
mov
arpl
test
adc
scas
sub
and
add
jle
jle
xor
adc
shl
adc
xor
mov
cld
je
jno
add
in
stos
aam
(bad)
jmp
sbb
push
cld
mov
sub
mov
test
jnp
cmp
jno
sti
gs
(bad)
std
pop
push
shl
jmp
jecxz
xor
dec
mov
enter
and
retf
(bad)
pop
xor
push
cmp
xor
mov
xlat
shl
int
cmps
fistp
cli
dec
jb
mov
ins
in
cmp
add
pop
aad
jb
fist
out
in
inc
inc
adc
push
dec
jmp
mov
in
dec
fwait
add
imul
lahf
mov
add
inc
pop
bound
outs
jmp
daa
ins
lods
imul
jno
pop
cdq
sbb
cmp
sub
and
int3
gs
shr
ja
and
cmp
pop
or
cmp
add
sub
push
lds
(bad)
not
sbb
(bad)
push
out
ss
mov
inc
popf
mov
(bad)
shl
xor
inc
ds
cmp
push
outs
pop
into
xchg
push
ficomp
jmp
sub
movs
sbb
int3
push
mov
dec
push
xchg
pop
dec
scas
xor
inc
xor
arpl
mov
cmp
xor
adc
mov
fcomp
add
jb
fisttp
pop
xchg
mov
push
adc
leave
ret
sbb
jmp
call
test
xchg
out
push
xchg
fisub
jne
jmp
aaa
in
pusha
test
out
push
xchg
sub
xchg
xchg
push
pushf
lods
xchg
xor
in
stos
retf
rol
mov
jne
fwait
mov
in
mov
mov
mul
pop
sub
in
test
pop
inc
or
dec
dec
push
mov
ins
outs
xchg
out
add
fidivr
and
(bad)
jmp
retf
sub
jbe
push
mov
clc
jmp
sbb
or
popf
ror
adc
jne
jg
dec
inc
cmps
pusha
and
xlat
mov
movs
pop
fs
cli
lds
in
jp
jns
std
push
fcmovnu
nop
ins
mov
lods
pop
repz
scas
xchg
scas
adc
sbb
adc
mov
push
cld
dec
jl
leave
jge
ficom
pop
pop
popa
(bad)
call
mov
sub
sahf
inc
sub
ret
out
cmps
mov
out
push
int3
clc
outs
and
test
ror
inc
pushf
and
jae
cmp
pusha
fist
stc
imul
push
lock
cmp
push
cld
cmp
shr
fnstenv
push
push
jl
xlat
(bad)
jb
push
jmp
sahf
scas
cld
or
pop
rol
pop
ins
xchg
cmp
jbe
pop
xchg
stos
push
sbb
push
addr16
mov
nop
enter
cld
cmps
pop
mov
inc
pop
pop
lods
dec
fsubr
test
gs
jmp
popa
mov
xor
(bad)
mov
xchg
inc
pop
bound
pusha
std
int
mov
dec
sub
pop
outs
aas
and
es
es
add
stc
ror
push
add
push
repz
clc
sub
adc
sbb
dec
test
and
mov
mov
push
das
xor
loopne
sub
cld
push
add
sbb
dec
jns
and
jmp
imul
jmp
sbb
iret
sbb
push
xchg
xchg
test
push
stos
inc
inc
bound
sbb
xlat
scas
rol
test
or
pushf
xchg
(bad)
push
ins
cmps
and
pop
sub
rcl
or
aam
push
pop
outs
pop
mov
xor
mov
inc
mov
mov
stos
and
add
imul
(bad)
out
pop
sbb
stc
dec
fiadd
pop
sbb
cmp
pop
and
lea
dec
ret
xchg
mov
pop
leave
push
and
xchg
mov
mov
fwait
xor
jbe
ins
mov
pop
cmp
push
stos
retf
adc
rcr
bswap
mov
ins
out
push
cmp
pop
or
jbe
cmp
test
push
jg
push
movntq
or
mov
stc
fdiv
mov
or
test
pop
pop
(bad)
cmp
and
hlt
pop
jmp
out
sub
in
aaa
dec
dec
sub
ror
repnz
aad
(bad)
push
jnp
sub
imul
inc
pop
push
jo
pop
push
imul
scas
xchg
cmp
inc
sets
adc
add
mov
data16
or
and
adc
jg
stos
xor
enter
ret
pop
loop
and
or
std
push
adc
(bad)
xchg
adc
and
or
and
push
jmp
mov
movs
jo
mov
cld
call
sbb
sub
xchg
das
mov
add
scas
fs
dec
addr16
dec
in
jmp
or
pop
ins
sbb
arpl
pop
push
neg
sbb
stos
in
in
frstor
adc
mov
or
mov
test
ja
cmp
and
das
xchg
lea
dec
cmp
inc
adc
cmp
mov
push
xor
rcr
adc
xchg
xlat
mul
inc
jmp
cs
cli
jne
adc
xchg
pop
pushf
push
cmp
loop
sub
inc
sbb
loope
mov
sbb
jb
push
retf
lea
ret
data16
dec
mov
sbb
stos
cli
out
xchg
enter
icebp
mov
outs
imul
inc
cmp
add
push
in
push
or
adc
mov
adc
out
pusha
sub
cld
pop
add
mov
ins
ins
pusha
loope
sbb
pop
push
fisttp
dec
sub
sbb
dec
jmp
sbb
imul
mov
fnsave
sub
cmp
add
mov
add
mov
cmp
xchg
and
inc
rcr
xlat
into
mov
push
(bad)
and
cli
addr16
jl
cwde
das
aam
repnz
jmp
push
sub
or
loopne
and
stc
fisttp
aad
test
data16
and
add
xlat
cmp
pop
adc
stos
push
stos
cmc
xor
test
add
mov
(bad)
ret
sahf
ss
add
and
popa
dec
inc
movs
int
retf
push
(bad)
jle
pop
xchg
ins
jl
pop
hlt
js
in
mov
or
repnz
fcmovne
add
sub
aas
mov
shl
cmp
ror
ret
call
mov
lock
xor
add
xor
dec
xor
dec
les
in
les
dec
xchg
call
ret
jl
pushf
xor
mov
in
dec
and
jecxz
xor
jne
xor
inc
outs
stos
das
mov
adc
adc
mov
cmps
mov
and
pop
mov
and
adc
jnp
loop
jg
outs
arpl
data16
popa
push
stc
ds
mul
fwait
(bad)
fs
leave
dec
pop
bound
enter
jp
(bad)
push
jae
mov
cmp
dec
call
dec
bound
pop
(bad)
out
leave
push
mov
(bad)
cmp
in
out
imul
and
pop
adc
arpl
xor
inc
addr16
or
pop
jns
imul
fs
ret
push
jp
dec
in
add
sbb
mov
jmp
loop
mov
mov
push
not
inc
pop
xchg
mov
repz
stos
xor
(bad)
jmp
jmp
(bad)
fdiv
xchg
jmp
xor
arpl
pop
call
pop
xchg
mov
dec
jge
and
test
xor
add
dec
hlt
mov
retf
dec
xor
push
lea
mov
mov
ins
xchg
adc
push
pop
ja
jl
addr16
xchg
out
fld
cmp
xor
add
xchg
cmp
popa
bound
es
xchg
push
in
out
jle
xlat
adc
add
aaa
sub
xchg
pop
jb
loope
arpl
cld
sbb
pop
sub
dec
push
leave
mov
and
mov
mov
cs
inc
pop
scas
(bad)
pop
sub
sti
mov
cmc
or
dec
ins
xchg
scas
sub
loope
mov
push
int
xor
cmps
sar
frstor
cld
push
and
inc
iret
retf
pop
dec
xchg
mov
test
cmps
mov
adc
mov
xor
push
sbb
mov
sub
xchg
dec
sti
iret
test
jg
xchg
inc
sbb
xchg
mov
push
mov
dec
jecxz
nop
jbe
sbb
mov
or
xorps
pop
sbb
test
out
sbb
and
add
xor
shl
sub
out
nop
push
adc
add
data16
mov
scas
ins
repnz
rcl
rcr
inc
mov
call
pop
dec
sub
(bad)
ins
sahf
dec
popf
fwait
sub
ficomp
sti
fsub
scas
xor
push
pop
sbb
popf
sahf
hlt
mov
or
pop
fcom
xchg
or
repz
sbb
jae
das
jae
repz
jmp
cmp
ficomp
fcom
ror
xchg
adc
and
fst
pop
in
xchg
fiadd
jp
lds
mov
cmp
add
iret
lods
stos
inc
stc
jp
(bad)
clc
mov
lods
xor
std
jle
cmp
or
fxch
or
popa
fldcw
sbb
xor
cvttps2pi
pop
dec
movs
mov
inc
xor
sub
and
push
jmp
add
pop
into
adc
in
add
dec
xor
mov
movs
data16
nop
fbstp
(bad)
sub
fisttp
xchg
or
jb
in
cmps
fst
(bad)
int
daa
mov
xor
in
pop
sub
xlat
and
sub
cwde
mov
clc
adc
or
shl
xchg
ins
call
in
and
cld
popf
and
sbb
es
push
dec
xchg
mov
test
arpl
jl
fadd
xor
xor
xchg
jo
mov
stos
dec
imul
mov
ja
or
jae
xchg
add
push
call
and
fst
lods
xchg
or
sub
imul
xor
add
adc
xor
jo
jle
imul
inc
or
in
mov
movs
xchg
pop
test
mov
aad
pop
pushf
push
mov
mov
popa
or
inc
in
cmp
lahf
std
mov
call
push
in
cmp
into
popa
cmc
sub
aaa
cwde
js
mov
and
inc
mov
cwde
xchg
pop
movs
lods
xor
jbe
in
sti
ret
into
push
repnz
adc
push
outs
aad
pop
pop
xchg
cmp
cmc
cwde
and
in
es
dec
dec
mov
or
les
scas
sahf
outs
popf
rcl
loope
fs
xchg
dec
cli
ins
sbb
rep
mov
add
inc
push
ins
shrd
cld
xor
inc
cmp
pop
sub
jo
cmp
aaa
push
push
nop
(bad)
sbb
mov
hlt
fs
dec
out
add
popa
or
mov
in
jne
mov
aas
out
jno
and
sahf
sbb
mov
repnz
mov
xor
and
push
adc
repz
push
aas
sub
xchg
ss
dec
call
adc
outs
adc
adc
sbb
(bad)
jns
mov
retf
add
mov
fsubr
mov
jne
ss
or
popf
xchg
push
or
or
adc
test
arpl
mov
cmp
add
push
call
rol
push
shr
sub
out
adc
xor
lods
xor
in
je
aaa
sbb
bound
mov
cmp
retf
xchg
movs
mov
adc
and
lds
jecxz
or
loop
fist
pop
push
cmp
push
or
sbb
ret
add
cmc
dec
outs
push
and
xor
or
or
es
sbb
retf
push
stc
dec
loop
pop
lea
push
daa
add
mov
daa
(bad)
outs
cwde
addr16
cld
retf
movs
pop
shr
lock
mov
and
cmp
push
xor
in
bound
jns
aas
fwait
outs
jg
(bad)
adc
push
fs
fild
xor
mov
(bad)
retf
push
mov
pop
cmc
in
nop
inc
aad
rcr
(bad)
pop
mov
mov
leave
in
mov
in
add
xchg
xor
into
retf
mov
add
fcmovb
gs
add
add
enter
fistp
jae
icebp
outs
push
add
mov
cmps
inc
sti
call
mov
ds
scas
fist
sub
jl
jbe
in
push
sbb
fistp
cmps
sub
mov
stc
cmps
std
dec
test
in
sub
stos
jne
mov
repz
add
mov
pop
out
adc
ins
cmp
into
sahf
mov
retf
pop
sbb
xor
mov
ret
sub
inc
cld
sub
shl
lock
in
test
sbb
inc
adc
(bad)
test
sbb
mov
(bad)
cwde
or
cmp
push
mov
jge
sub
xchg
(bad)
inc
test
jle
int3
bswap
aad
push
sbb
cmp
ror
(bad)
es
fnsave
les
aaa
and
cli
jp
mov
push
int
adc
lock
mov
lods
dec
adc
sub
mov
add
(bad)
fild
lea
pop
pop
mov
dec
xlat
shr
adc
add
fnstcw
pop
add
sbb
arpl
cmp
fist
shl
mov
xor
cmp
push
rcr
jl
and
inc
adc
loop
cmc
fimul
test
icebp
scas
sbb
addr16
add
mov
test
loop
(bad)
sbb
cmp
test
ins
cs
test
lahf
scas
push
dec
pop
jmp
lds
push
pop
shr
xor
push
add
mov
or
and
or
add
inc
jge
rcl
xchg
test
cs
gs
push
dec
add
adc
sub
and
pop
cli
add
(bad)
outs
retf
push
sub
sub
jl
int
mov
aaa
iret
pop
ds
enter
xchg
inc
hlt
mov
movs
sahf
jae
mov
shr
mov
mov
jmp
push
mov
jmp
sub
pop
push
fisub
or
and
(bad)
into
les
mov
pusha
mov
sbb
pop
enter
xor
pop
mov
xchg
add
mov
popf
(bad)
push
shl
mov
adc
jge
push
in
cmc
stos
cmp
push
pop
(bad)
mov
sbb
xor
retf
ss
rcl
fisub
jge
lds
out
adc
adc
add
stos
sbb
sub
out
sub
adc
into
fwait
and
sbb
rcl
(bad)
test
cmp
out
cmps
sub
push
xor
scas
and
xor
and
outs
pop
mov
inc
adc
jg
retf
add
pop
out
cld
mov
mov
mov
cmc
dec
push
cmp
push
adc
rol
mov
cmp
mov
daa
pop
mov
add
push
and
push
inc
popa
or
mov
and
pusha
adc
(bad)
dec
fcom
jg
dec
push
push
cmp
adc
pushf
shl
nop
push
(bad)
or
sub
test
xchg
imul
mov
pop
xor
in
mov
xchg
jmp
popa
or
movs
retf
int3
adc
bound
mov
inc
je
js
xchg
iret
and
xchg
aas
imul
or
(bad)
pop
sbb
out
fnstcw
ss
sub
in
scas
push
xchg
test
or
push
xchg
js
ret
mov
sub
push
jle
cs
das
dec
inc
and
sub
add
daa
xchg
sbb
imul
add
and
jg
add
jp
dec
add
cmp
retf
(bad)
dec
sti
mov
mov
push
adc
adc
fdivr
bnd
mov
and
xchg
push
jb
mov
mov
dec
mov
lahf
inc
fstp
xor
movs
fstp
std
add
xor
outs
mov
xor
fwait
ins
add
test
inc
cdq
int3
push
cs
pushf
or
xor
pop
mov
mov
ds
imul
hlt
lea
adc
test
mov
inc
mul
fwait
or
sti
popa
mov
inc
adc
mov
mul
push
leave
fadd
cwde
cmp
daa
adc
mov
(bad)
in
movs
mov
ss
cmp
xlat
retf
lds
stc
mov
mov
mov
dec
inc
dec
or
cdq
int
jp
sbb
jnp
cmp
or
movs
add
jno
int
cmc
or
lds
retf
scas
xchg
lea
adc
fcom
or
mov
(bad)
pop
imul
addr16
retf
sub
mov
push
pop
adc
(bad)
popf
(bad)
(bad)
sub
pop
inc
sub
stc
test
fld
arpl
sbb
mov
gs
dec
cli
loop
fsqrt
popf
jbe
popf
ds
in
dec
mov
jb
sbb
dec
ins
or
shl
or
adc
mov
pop
pop
jae
sub
das
inc
inc
(bad)
clc
mov
sbb
cwde
jecxz
push
dec
xor
pop
sub
xor
dec
frstor
fcomp
ins
dec
fwait
or
or
inc
sahf
mov
in
mov
jmp
lds
inc
push
std
aad
sub
xor
daa
cwde
push
cmp
in
mov
and
dec
arpl
js
sbb
lahf
xchg
leave
fimul
mov
or
mov
jns
lea
(bad)
and
mov
stos
daa
in
mov
mov
or
icebp
popf
dec
retf
mov
mov
out
add
out
dec
icebp
dec
fwait
out
stc
inc
pop
hlt
xchg
or
aas
pop
stos
sub
or
jp
xor
cmps
xor
add
loope
pop
sti
push
pushf
ss
adc
mov
fbstp
sahf
cmp
bound
or
push
je
das
dec
xadd
jp
and
sahf
icebp
out
mov
inc
lods
push
jno
lods
test
imul
iret
lahf
pop
into
pop
scas
add
jmp
aas
sbb
mov
int3
imul
ins
imul
xor
call
imul
stc
in
test
pop
enter
push
adc
fiadd
aad
sbb
inc
add
pop
jnp
or
cmp
jae
icebp
cwde
inc
mov
ror
cs
cmp
or
(bad)
sbb
dec
xchg
pop
sbb
not
sub
adc
add
sbb
jnp
mov
ins
pop
add
add
in
loope
(bad)
jno
mov
aam
rcl
mov
js
or
mov
clc
shl
out
xor
scas
fdivr
ror
ror
mov
int
mov
add
xor
cmc
adc
inc
jg
jp
pop
and
and
mov
xor
xchg
les
lahf
xchg
or
(bad)
aam
sti
xchg
dec
dec
pop
icebp
and
mov
ins
pop
dec
int3
imul
cmp
pop
or
test
jmp
div
mov
mov
push
imul
(bad)
and
hlt
sub
ins
mov
mov
hlt
sbb
jb
addr16
jae
(bad)
pop
pop
nop
mov
push
cmps
fldenv
(bad)
mov
movs
mov
xchg
ins
jbe
inc
and
lods
into
mov
sahf
(bad)
push
nop
cmp
popf
or
loope
adc
and
sbb
cld
fcom
out
mov
iret
imul
dec
data16
test
add
iret
pop
or
int
dec
cmp
sub
sbb
js
push
ins
mov
sbb
xchg
jbe
out
aam
adc
fstp
mov
pop
inc
dec
cmp
xor
es
mov
add
xchg
dec
jg
pop
lock
mov
dec
xor
sbb
dec
xchg
mov
sbb
retf
inc
test
xchg
push
ss
xchg
cmp
pop
adc
add
jo
pop
iret
xor
ins
ret
add
mov
inc
fcomp
xchg
cdq
or
mov
and
push
mov
movs
cmp
mov
add
mov
fwait
cwde
sbb
inc
and
xchg
repz
cs
mov
movs
dec
rep
lds
mov
adc
sbb
ret
jb
push
and
mul
xor
cs
cmp
in
lea
jo
imul
mov
sub
sbb
scas
jne
mov
imul
cmpps
fcomi
mov
mov
enter
(bad)
jmp
push
popa
(bad)
xchg
jmp
test
dec
sbb
sbb
add
push
(bad)
scas
jo
inc
add
sub
sbb
inc
mov
pop
mov
inc
(bad)
xchg
rcl
imul
in
cmc
cmps
add
sahf
ja
inc
push
adc
pop
jb
rcr
dec
adc
jmp
mov
in
pusha
jp
adc
adc
cld
jmp
mov
(bad)
js
sbb
sub
rcr
mov
ret
nop
addr16
xchg
inc
lock
and
xor
xchg
pop
icebp
shl
mov
leave
loop
js
dec
inc
iret
(bad)
(bad)
cmp
sbb
fldln2
mov
cli
jno
mov
xor
push
mov
je
or
das
xlat
(bad)
add
in
mov
int3
repnz
enter
dec
shl
push
and
xor
mov
mov
cmc
mov
sbb
dec
pop
cmc
or
cmp
xchg
sbb
imul
fdiv
popf
imul
scas
enter
test
mov
in
push
into
pop
ficomp
or
push
mov
add
add
mov
pop
shl
or
jmp
xor
jge
jmp
arpl
cs
(bad)
sbb
stos
jbe
sub
cmp
add
stos
call
les
jnp
into
pop
data16
cmp
fistp
icebp
fstp
not
inc
ds
push
lahf
xchg
pop
cmp
pop
mov
or
out
add
sar
js
push
pop
mov
in
ss
enter
dec
mov
test
pop
add
dec
hlt
out
cmp
and
jg
nop
fimul
mov
sbb
pop
fwait
dec
je
adc
dec
scas
jle
jmp
jo
(bad)
cli
add
mov
dec
ret
sbb
call
pop
sbb
test
dec
out
loope
jmp
bound
sub
xlat
push
in
sbb
repnz
mov
pop
sub
stc
pop
or
and
lahf
inc
ins
lods
mov
jne
nop
not
imul
test
inc
loop
inc
scas
repz
or
cmps
daa
sub
sti
adc
push
leave
ror
aam
sbb
mov
sub
movs
js
xor
xchg
jne
pop
test
icebp
cmp
jmp
mov
sub
push
push
out
pop
add
call
and
iret
mov
and
aad
mov
arpl
sub
shl
xchg
add
enter
cmp
pop
mov
test
mov
xlat
cli
jnp
xchg
or
and
cmp
fs
lods
mov
pop
jmp
ret
jnp
dec
sub
imul
cmp
xchg
out
xchg
add
mov
or
or
aad
push
cmp
jl
fisub
add
and
jmp
lds
ret
add
jmp
ror
inc
mov
mov
push
push
ret
mov
mov
dec
push
mov
jl
cmps
jmp
inc
add
sub
push
stc
data16
pop
sub
dec
xchg
outs
mov
dec
call
mov
xchg
and
mov
test
sbb
lods
bound
mov
pop
xchg
outs
mov
xchg
popa
dec
or
fld
dec
test
xchg
mov
and
add
jp
mov
jnp
xchg
or
pop
jbe
and
mov
or
ja
ja
jno
push
test
jbe
mov
(bad)
(bad)
mov
std
jle
xchg
dec
pop
stc
jmp
xchg
mov
(bad)
scas
loop
add
add
and
sbb
loopne
inc
mov
cwde
movs
fimul
aam
jo
and
gs
in
cld
fisub
mov
dec
pop
mov
sub
jo
mov
add
stos
cmp
gs
xlat
dec
sub
fdivr
test
mov
scas
stos
scas
dec
(bad)
cdq
imul
and
ret
nop
dec
in
call
push
sub
xor
and
outs
add
int3
jne
int
mov
pushf
sub
out
fwait
imul
jne
mov
push
xchg
lods
xlat
pop
mov
leave
out
cmps
inc
js
shl
mov
sar
push
retf
enter
pusha
cmp
mov
adc
gs
rcr
test
jg
xor
mov
fnsave
jne
jecxz
xchg
mov
imul
hlt
cdq
outs
sar
add
aaa
lods
mov
dec
push
xor
or
xor
in
inc
mov
test
inc
push
jae
pop
repz
icebp
call
(bad)
test
call
lods
cmp
jg
cmp
push
pushf
cmp
cmp
push
int
lock
mov
xlat
mov
jmp
cmp
inc
xchg
jbe
nop
jno
ds
cdq
mov
std
cs
popa
inc
imul
xchg
pusha
adc
sahf
push
dec
je
adc
mov
jnp
scas
ja
or
adc
jns
(bad)
jecxz
fldenv
je
push
pop
scas
div
mov
fs
(bad)
add
dec
mov
inc
lahf
cdq
xor
push
sub
cmps
loopne
pop
mov
(bad)
cdq
mov
(bad)
ds
pop
in
call
addr16
pop
jo
call
test
mov
arpl
jle
movs
in
push
std
jmp
(bad)
out
call
les
cli
clc
pop
fidiv
in
mov
test
cwde
mov
scas
and
pop
cmp
ins
mov
retf
add
sbb
imul
sbb
sub
test
dec
ss
or
push
data16
std
and
sub
mov
jns
mov
dec
adc
xchg
cmc
sub
(bad)
into
jle
lea
pop
jns
inc
shr
dec
mov
lock
aad
mov
and
fld
aad
add
cmp
ret
sub
xchg
push
fnstcw
les
movs
mov
mul
or
jp
dec
movs
or
mov
jmp
cmp
fs
pop
mov
movs
ds
mov
in
adc
(bad)
stc
into
mov
call
retf
or
cli
sbb
pusha
neg
inc
pop
aas
sub
xchg
cmps
ret
sub
adc
jmp
push
cdq
dec
sets
rcr
jmp
pop
sub
jb
lods
cmps
outs
cmp
fdivr
pop
stc
pop
int
call
jne
aas
daa
dec
out
mov
cld
push
imul
sbb
fldenv
jmp
inc
push
fld
retf
jae
jmp
ror
push
lock
fisub
shl
leave
bound
add
in
mov
test
cmps
aaa
mov
shl
sbb
(bad)
out
test
(bad)
aas
xchg
cmp
jbe
pop
lods
jl
ret
fldenv
lock
ins
shl
adc
pop
cs
dec
nop
fiadd
inc
or
fstp
je
xchg
pop
repnz
in
xchg
xchg
inc
pop
jl
bound
ret
mov
data16
fldenv
push
sbb
xor
loopne
sub
pusha
add
sub
test
ins
rcr
push
jb
test
dec
aas
into
jbe
lods
jno
xchg
fsub
add
stc
repz
jnp
jo
cmp
repz
imul
inc
out
mov
mov
cmp
push
nop
(bad)
sahf
scas
dec
sbb
shr
(bad)
inc
adc
push
mov
add
push
pop
jmp
dec
add
ror
popa
sbb
xchg
xor
or
ret
lods
xlat
or
push
dec
test
jns
or
adc
icebp
add
dec
ja
mul
pop
repnz
test
xchg
icebp
dec
add
lds
idiv
add
dec
and
int
or
fs
(bad)
push
jecxz
pop
retf
xchg
call
les
cmp
pop
call
pushf
(bad)
retf
fwait
sbb
les
xchg
mov
xchg
ss
dec
push
cmp
aas
scas
inc
add
in
ins
add
test
inc
add
fwait
pop
push
sub
xor
jmp
(bad)
xchg
mov
dec
cmc
or
cdq
pop
popa
scas
data16
push
mov
popf
dec
(bad)
js
add
call
xchg
test
sbb
ins
xchg
jb
mov
jno
popf
jle
je
(bad)
out
ja
jb
aam
loope
mov
push
push
scas
ret
pop
daa
mov
ret
pop
xchg
mov
fisub
out
shl
jge
fstp
stc
repnz
xor
mov
push
sub
add
in
xor
push
push
mul
push
rep
sar
cmp
out
repz
dec
scas
mov
call
ins
js
or
xchg
scas
inc
imul
in
pop
mov
(bad)
mov
das
cmps
aam
inc
(bad)
push
pop
and
inc
mov
push
mov
add
(bad)
jns
movs
lea
mov
imul
test
ret
popf
cmps
in
cli
movs
dec
enter
dec
dec
sar
cmps
nop
cmp
(bad)
adc
mov
cmps
ins
shl
adc
arpl
pop
jae
push
mov
ds
sbb
inc
int
dec
dec
stc
sti
data16
push
mov
push
jmp
or
sti
sbb
cli
sub
loopne
ds
rcl
lock
out
ins
cmp
fistp
or
mov
bound
movs
push
stos
jae
sub
cwde
int
xor
add
mov
jmp
pushf
inc
cmps
push
out
jae
pop
ret
inc
pop
int3
loope
test
fsub
rcr
adc
and
lds
arpl
push
add
je
pop
cwde
(bad)
inc
lahf
cdq
push
mov
mov
(bad)
mov
int3
push
loope
pop
push
sbb
mov
mov
or
and
popa
dec
add
adc
mov
int
pusha
pop
test
pop
daa
sub
mov
adc
cmp
mov
xchg
aas
jno
mov
cdq
jae
outs
adc
cmp
sbb
mov
xlat
(bad)
sti
(bad)
jl
popf
cmp
test
pop
outs
sub
pop
mov
jno
mov
push
dec
cmp
push
mov
cmc
adc
test
push
jp
popf
pop
sub
pop
add
push
adc
rcr
jmp
sbb
ins
ins
sahf
xor
dec
scas
mov
xchg
imul
ret
in
xchg
fisttp
sahf
dec
pop
adc
bt
sub
ror
xor
mov
pop
aas
outs
repnz
icebp
mov
fcmovnb
out
das
fstp
xor
ds
popa
mov
inc
dec
dec
or
addr16
shr
je
fwait
mov
inc
(bad)
and
fadd
mov
lods
cmp
pop
and
mov
xchg
jl
retf
sbb
hlt
repnz
fcom
into
fwait
sbb
test
les
mov
pop
mov
push
fwait
pop
(bad)
hlt
cdq
adc
jo
lock
push
jns
out
and
out
or
xor
cdq
mov
loope
xlat
lea
mov
xor
adc
outs
push
mov
jnp
dec
or
push
test
sahf
sbb
jns
and
xchg
push
cmps
sub
push
adc
and
mov
jne
pop
fdiv
jecxz
cdq
mov
arpl
dec
inc
cmps
ret
mov
adc
ret
and
pop
test
enter
inc
(bad)
pop
or
not
mov
xor
push
out
cmp
repz
out
push
mov
adc
out
repnz
pop
mov
mov
dec
test
jge
xchg
jo
xchg
push
xlat
lea
push
sbb
cmc
sub
hlt
jo
mov
xchg
jg
popa
int3
and
out
pop
in
into
lods
cmp
push
pop
rcl
cmp
out
mov
(bad)
imul
cmp
jns
ret
lods
sub
jae
mov
adc
rcr
push
jne
cmova
jmp
dec
vminss
(bad)
push
sub
pop
cmc
and
ret
sbb
test
pop
lock
dec
in
ins
adc
es
and
or
mov
xor
ret
cwde
or
cmp
cli
cmp
loope
aaa
in
retf
pop
cmps
fcom
inc
aam
jne
mov
mov
repz
pop
repz
cmp
fiadd
jmp
adc
xchg
dec
jecxz
sub
inc
inc
iret
pop
or
fcomp
mov
add
mov
call
or
shl
shr
std
xor
cmp
ret
inc
dec
jecxz
sahf
mov
out
rcr
out
pop
sbb
mov
adc
inc
mov
in
sbb
sbb
(bad)
fild
push
pop
bnd
and
add
pop
sub
loopne
into
pusha
inc
inc
xchg
hlt
mov
push
in
mov
cmp
jb
shl
xchg
aad
inc
cmp
xchg
mov
jmp
push
mov
fcomp
test
jo
cdq
cmp
or
and
add
push
clc
cmp
jecxz
xor
sar
inc
inc
mov
shl
adc
mov
mov
mov
imul
pop
jecxz
or
ins
nop
jno
push
test
int
lahf
inc
fsubrp
push
ret
add
fs
pop
(bad)
jmp
push
test
imul
push
mov
aad
or
aaa
test
retf
and
je
sbb
sbb
mov
jmp
inc
inc
push
es
fld
in
adc
jne
adc
inc
mov
iret
(bad)
nop
sbb
add
and
and
jae
sub
cmp
jge
cmp
(bad)
mov
retf
pop
mov
test
ret
mov
dec
push
mov
sub
popf
rcr
test
out
fwait
add
push
mov
xchg
(bad)
sub
das
pusha
mov
gs
clc
cmps
dec
sub
mov
call
loop
add
push
and
das
pusha
adc
or
repz
inc
dec
inc
shl
popa
js
or
pop
jecxz
nop
(bad)
sub
sbb
mov
mov
pop
je
or
xchg
fwait
outs
cmp
jno
add
repnz
lock
push
ds
or
or
(bad)
call
aas
push
pop
inc
ss
mov
inc
push
pop
jl
or
nop
std
cmp
mov
out
jp
add
inc
cwde
xor
arpl
adc
sub
mov
fsub
shl
fadd
add
in
jns
mul
sbb
pop
and
ror
lods
or
ror
cmps
add
cmp
aam
mov
pop
popa
out
aam
sti
push
or
xor
xchg
push
add
fdiv
imul
test
sub
sbb
enter
jmp
add
mov
gs
leave
mov
mov
test
mov
adc
or
out
dec
sub
push
les
mov
lods
mov
(bad)
into
int
mov
cmp
cs
xor
push
sbb
xor
inc
in
test
loope
mov
movntq
mov
popa
ins
pop
pop
xlat
and
inc
je
and
push
add
jno
jle
and
mov
hlt
jle
cmps
in
cli
shl
xlat
jecxz
cmps
(bad)
or
adc
lea
loop
nop
adc
pushf
ins
into
xchg
dec
inc
xchg
or
sub
dec
(bad)
and
std
and
fstp
cdq
mov
jo
int3
adc
scas
xor
sbb
mov
imul
xor
adc
push
jge
add
sub
call
mov
dec
test
scas
int
sub
xchg
in
or
and
sub
js
js
pop
or
xchg
add
imul
cld
and
or
xor
rcr
imul
push
cmp
mov
out
xchg
cmp
not
mov
jecxz
sub
push
arpl
cmps
pop
or
xchg
loope
out
ret
sbb
adc
add
jle
fsub
pop
ret
push
lds
mov
mov
inc
sbb
inc
jns
add
push
sub
cmp
or
inc
add
int3
xchg
add
and
xor
adc
jmp
add
int3
sub
mov
mov
lods
loope
add
call
dec
xor
dec
jge
pop
inc
sub
jnp
fidiv
push
outs
xchg
aam
add
test
dec
fwait
push
adc
mov
jmp
mov
or
(bad)
jle
xor
push
addr16
call
sub
jl
mov
xor
push
ror
inc
push
adc
pop
mov
(bad)
cs
mov
xlat
retf
pop
cvtdq2ps
sub
sbb
mov
arpl
xor
add
je
or
sbb
movs
bnd
sti
mov
shl
loop
hlt
out
push
sub
movs
jnp
loop
(bad)
push
dec
push
data16
and
cmp
addr16
fwait
leave
loope
test
scas
fisub
inc
push
jge
adc
leave
popa
mov
inc
mov
pop
pop
sbb
xchg
and
lods
rol
mov
inc
icebp
adc
xchg
outs
test
aas
sbb
and
retf
rcl
xor
sub
push
cmp
mov
inc
ret
sahf
add
shr
pop
push
sub
std
push
(bad)
in
sbb
dec
add
into
jmp
fld
in
xchg
fadd
inc
jo
jmp
call
pop
or
cdq
add
aam
mov
hlt
xchg
pushw
test
and
jmp
jbe
mov
mov
fstp
cmp
jmp
jo
shr
lahf
jb
cmp
xchg
mov
mov
popf
add
add
dec
mov
mov
or
add
dec
add
dec
es
lock
(bad)
xchg
stos
xor
push
sbb
dec
dec
movs
adc
lock
xchg
push
inc
sub
mov
sub
xchg
dec
jl
push
sub
lods
std
call
mov
sub
xchg
push
push
sub
inc
push
call
cmc
not
popf
sbb
push
xlat
aam
mov
dec
pop
mov
in
xlat
sbb
loope
fdivr
in
add
jmp
jbe
out
mov
jge
adc
(bad)
or
int3
dec
sub
cli
add
fwait
in
add
out
sbb
fisttp
add
pop
dec
test
push
inc
lea
mov
add
mov
scas
mov
mov
out
lahf
pop
sub
cmp
push
adc
inc
pop
push
jb
pusha
mov
cmps
mov
mov
mov
addr16
xchg
push
aad
rol
cmps
sub
add
imul
jmp
(bad)
out
(bad)
mov
xchg
iret
div
in
enter
ins
cmp
add
push
push
pop
lock
mov
adc
iret
mov
add
dec
jl
xor
fiadd
add
sub
push
idiv
stos
aad
scas
movs
xor
outs
xchg
sbb
cwde
cwde
movs
jo
pop
rol
lock
test
adc
mov
int3
xor
pop
stc
movs
cmp
es
xor
sbb
mov
in
adc
dec
or
pop
aaa
jmp
(bad)
mov
pop
xchg
push
ret
jo
imul
xor
popf
mov
lea
fsubr
shr
fs
jge
in
mov
xor
jnp
call
pusha
sub
xchg
(bad)
mov
mov
cdq
xor
jbe
dec
je
add
push
daa
adc
xchg
pop
pop
jns
mov
clc
sub
stos
test
pop
in
push
cmp
cmp
(bad)
clc
out
xor
mov
dec
(bad)
or
inc
adc
in
in
jecxz
je
popa
lods
data16
sbb
jge
pop
daa
addr16
test
jno
cmp
shr
xor
add
push
mov
lods
inc
popa
xor
cld
ins
mov
sbb
mov
pop
stos
rcr
ss
mov
jg
test
aaa
in
int3
scas
add
inc
imul
call
xchg
stos
xor
xor
mov
fcom
push
ret
pop
hlt
call
test
data16
sbb
ds
jns
and
pop
xor
lea
popf
daa
push
jnp
add
sub
call
(bad)
in
mov
div
pop
add
add
inc
pop
cmp
xchg
push
repnz
repnz
cdq
mov
pop
out
sbb
sar
clc
xor
push
xchg
fisttp
dec
bound
cmp
repz
xor
jno
jmp
cwde
ftst
daa
jb
and
ss
(bad)
dec
shl
adc
js
addr16
jne
aad
ror
mov
call
fs
popa
dec
and
add
mov
int3
jmp
sub
or
inc
fistp
xor
and
mov
push
push
in
mov
xchg
neg
push
xor
inc
jmp
das
les
shl
jae
in
idiv
jp
jle
out
imul
movs
out
cmp
sub
mov
sbb
gs
mov
sbb
dec
fisub
je
aad
aas
add
pop
into
and
je
sub
retf
lods
and
stos
push
cmps
pop
and
add
pop
pop
and
mov
jl
lods
sbb
xor
inc
ja
jl
repz
ins
test
(bad)
dec
jmp
sahf
stos
psllw
lea
mov
out
ret
mov
sti
lock
retf
adc
cmps
sbb
(bad)
xor
cmp
xor
outs
lods
sbb
mul
inc
cmps
out
mov
adc
mov
in
xor
jns
mov
int
sahf
dec
rol
inc
cld
pushf
pop
out
or
ins
lea
iret
mov
and
xchg
xchg
lock
dec
nop
sahf
icebp
nop
sbb
popa
xchg
ret
les
mov
(bad)
test
adc
cmps
addr16
jb
sub
ins
adc
aas
adc
mov
xchg
out
mov
es
push
cmp
mov
xchg
xchg
and
mov
aad
test
mov
cmp
push
sbb
pop
sbb
fmul
cmp
jne
pop
sbb
aas
stc
mov
jno
fsub
in
pushf
or
mov
sbb
(bad)
xchg
inc
adc
mov
mov
jmp
sbb
xor
inc
hlt
xchg
or
jmp
mov
mov
mov
aad
cli
out
jmp
sahf
cdq
rcr
loopne
push
call
pop
aad
and
not
mov
push
jmp
pop
or
mov
jnp
dec
inc
(bad)
js
mov
ins
jge
das
cmp
inc
test
outs
aaa
xchg
(bad)
mov
push
retf
mov
cmc
pusha
jge
pop
pop
adc
xor
push
addr16
in
cmp
sahf
inc
xchg
or
push
addr16
retf
add
cmp
into
lahf
add
repz
and
or
aaa
cdq
jmp
push
bound
sub
in
xor
or
push
mov
dec
dec
dec
dec
inc
xchg
push
mov
into
add
sub
jbe
fwait
dec
mov
mul
mov
xchg
fisttp
push
(bad)
int3
xchg
pop
adc
movs
jns
xor
jo
mov
cmp
data16
lds
repz
mov
push
rol
pop
mov
or
ja
pop
push
push
or
adc
pop
out
cmp
fnsave
mov
popf
call
cmp
mov
xchg
fstp
js
add
adc
sbb
xchg
dec
inc
(bad)
stos
in
push
add
das
inc
enter
pop
mov
retf
dec
mov
das
dec
push
xchg
adc
nop
lds
push
cs
jg
xchg
cmp
adc
or
mov
inc
sub
cmp
(bad)
push
sub
fbld
es
jg
add
and
sub
xchg
inc
jge
cmp
mov
sub
imul
je
outs
rcl
ret
icebp
pop
jge
pop
adc
or
sub
cmp
mov
mov
imul
repnz
sti
int
mov
mov
xchg
test
hlt
mov
and
dec
push
push
jns
call
dec
rcl
cmp
sbb
jbe
in
dec
sub
adc
call
loope
adc
popf
(bad)
mov
pop
loope
sbb
jne
lock
mov
adc
imul
out
rcr
push
std
das
or
inc
dec
out
loopne
bound
sti
cmp
add
pushf
add
sub
popa
bound
stos
and
inc
scas
leave
jmp
inc
cmp
sbb
jecxz
push
movs
imul
push
sahf
not
adc
mov
jnp
mov
mov
mov
or
sub
push
in
inc
inc
adc
pop
push
jnp
cli
shl
lahf
push
scas
sbb
jnp
jge
psubsw
xchg
or
add
aaa
ss
sbb
repz
loop
jg
imul
push
test
lods
xchg
mov
popf
(bad)
xlat
test
idiv
out
fdiv
dec
inc
push
ror
mov
pop
outs
mov
inc
jg
dec
add
fwait
test
sub
fs
(bad)
cmp
test
jnp
retf
pushf
int
cwde
jmp
test
bound
jmp
and
loop
ror
mov
js
add
adc
fdiv
xor
mov
int
inc
outs
imul
add
inc
cmp
push
dec
std
mov
jbe
pop
pop
ins
into
add
repnz
mov
ds
out
sbb
lea
jmp
cmp
mov
gs
ss
inc
pop
mov
lods
leave
loopne
lea
sbb
inc
sub
push
jg
dec
inc
mov
xchg
sbb
xchg
adc
ds
ss
xor
jne
or
movs
sbb
call
sbb
mov
shl
mov
mov
mov
rcl
push
(bad)
retf
mov
xchg
add
xchg
cmp
and
inc
or
fistp
(bad)
push
or
ret
sbb
jp
retf
out
xor
out
(bad)
hlt
lds
outs
push
or
ja
popa
fisttp
arpl
(bad)
dec
sti
mov
mov
adc
jp
sbb
add
inc
sub
in
and
and
pop
pushf
aad
ret
das
icebp
pop
xchg
xlat
popf
sbb
add
es
adc
inc
inc
ss
lock
bound
dec
add
outs
es
hlt
inc
mov
mov
or
inc
nop
(bad)
inc
js
int3
or
stos
pop
icebp
dec
xchg
out
sub
pop
or
test
sar
cmpxchg
jl
push
fstp
sahf
sti
push
xchg
pop
pop
repz
jb
sbb
sar
pop
jle
fsub
hlt
jb
push
repnz
sahf
push
xchg
test
dec
loop
cdq
mov
jge
test
fisubr
xchg
mov
cmp
xor
push
pop
inc
xor
mov
cmp
inc
nop
ret
enter
jno
xor
pushf
mov
in
das
mov
out
or
jae
sahf
xor
out
int
or
ja
dec
aam
jne
ins
cmp
dec
mov
pop
lock
ret
cli
cmp
push
mov
xchg
outs
sub
cld
mov
xor
sti
loop
popf
jb
cli
xor
retf
imul
lea
jmp
add
sbb
pusha
mov
push
add
inc
xchg
inc
in
in
mov
dec
retf
and
mov
out
jmp
gs
shr
adc
jg
adc
sbb
movs
std
push
in
jb
mov
push
jp
adc
xlat
int3
bound
add
fsin
dec
gs
or
push
mov
inc
inc
push
mov
add
out
sub
leave
xor
mov
gs
loope
fisttp
retf
push
xchg
mov
shl
dec
das
leave
ss
dec
jno
mov
aam
jecxz
mov
dec
mov
fstp
xor
cmp
or
sbb
mov
inc
add
dec
cmp
xor
(bad)
(bad)
mov
xor
pop
add
shl
adc
ss
adc
mov
xchg
int
xchg
loop
jmp
push
pushf
je
push
sbb
(bad)
fwait
xchg
rol
add
fnstenv
xchg
adc
clc
pop
push
mov
add
mov
pop
push
retf
stos
not
lahf
stos
sti
pop
cwde
cs
stc
push
(bad)
ror
std
xor
test
cwde
push
sar
sub
mov
sahf
cwde
(bad)
int3
cmp
rcr
or
fs
test
cwde
add
not
sub
cmc
outs
fsubr
dec
dec
out
add
nop
inc
repnz
lahf
lock
jmp
rcl
adc
ror
dec
fst
ins
mov
push
shl
inc
pop
dec
xor
ss
fimul
sti
and
pop
push
loope
into
push
sub
sti
xchg
lahf
es
jl
movs
jle
cmps
out
lds
sub
movs
leave
clc
icebp
pop
repnz
or
or
call
pop
test
std
mov
dec
bound
inc
fmulp
pop
aad
or
sti
sbb
xchg
add
sbb
rcr
in
xchg
clc
lds
push
outs
call
push
data16
js
xchg
inc
out
dec
xor
por
inc
stos
into
sti
shl
sbb
add
cmp
in
mov
push
popf
xchg
pop
enter
jo
shl
(bad)
cmp
fnsave
cmp
pop
sub
(bad)
fwait
push
shl
push
dec
ins
loop
jmp
inc
xor
mov
jbe
cdq
mov
jmp
push
push
mov
ss
sahf
je
mov
xchg
rcr
out
or
push
movs
ret
jmp
dec
aas
pop
dec
mov
scas
and
mov
mov
jmp
mov
cdq
aad
in
imul
mov
das
dec
dec
lds
retf
sub
cmp
sub
ja
inc
test
jmp
push
xor
jno
(bad)
rcl
sbb
inc
jg
cdq
hlt
fs
mov
stc
fcomi
lahf
out
push
mov
push
neg
call
icebp
inc
mov
(bad)
fwait
dec
cmp
pop
and
mov
shl
arpl
test
and
jb
or
add
adc
fnstsw
stos
iret
jl
je
inc
rcl
fwait
(bad)
imul
repz
add
adc
jns
lahf
outs
mov
push
mov
and
cmp
xor
ret
out
sbb
stos
dec
push
add
je
repz
mov
inc
jmp
push
mov
enter
into
int3
in
cmc
adc
push
xlat
sub
mov
jno
inc
movs
xor
daa
mov
sbb
mov
jecxz
call
(bad)
mov
imul
rol
and
retf
inc
repz
call
je
pop
fucomp
pop
push
cmps
xor
mov
dec
je
sar
adc
mov
xor
inc
xor
(bad)
fimul
mov
mov
cmp
push
mov
pop
call
es
add
cld
dec
cmc
cmp
add
sub
sub
test
gs
out
test
xchg
test
ror
je
retf
ds
int
dec
call
movs
aaa
xor
xor
retf
in
push
pop
test
loop
bound
or
cmp
cmp
cli
fdivr
mov
adc
imul
stos
mov
mov
lods
mov
out
xlat
mov
sub
cld
mov
popf
mov
and
push
mov
and
cmp
sbb
cs
into
xchg
out
pop
test
mov
mov
and
mov
add
xchg
movs
mov
xchg
jle
mov
add
mov
xchg
test
or
iret
in
loop
stos
mov
inc
out
push
hlt
mov
aaa
sahf
(bad)
(bad)
xchg
add
(bad)
mov
shr
movq
pop
fcmovbe
loope
lock
mov
xchg
mov
dec
dec
mov
repz
fs
add
cmp
mov
mov
jmp
dec
sti
test
cwde
sub
aaa
lock
jmp
cmp
mov
jle
sub
lds
test
xchg
pop
cdq
mov
in
jns
push
push
std
sub
jecxz
xor
mov
cmp
fwait
imul
sbb
fstp
fistp
mov
cli
add
add
movs
push
popa
cmps
cwde
std
push
dec
(bad)
cwde
in
loopne
sub
gs
adc
mov
jl
mov
movs
outs
sub
dec
aam
xor
popa
jbe
shl
pop
shl
aad
ja
dec
fisttp
add
sub
sbb
sub
in
popf
retf
sti
ins
into
mov
jne
arpl
pop
xor
bound
jle
and
mov
push
jp
(bad)
push
inc
add
leave
xor
imul
int3
sbb
adc
das
imul
fs
imul
push
sbb
adc
pop
addr16
cmp
cmps
dec
test
scas
fldlg2
cmps
rcl
push
push
add
mov
in
inc
hlt
mov
sbb
mov
fdivr
repz
aas
fadd
popa
or
fnstcw
addr16
inc
je
aad
mov
jbe
ficomp
inc
or
sahf
lock
pop
cmp
push
add
xor
dec
(bad)
mov
mov
ins
cmc
xchg
xor
and
xor
ret
push
sub
add
stos
(bad)
pop
xlat
dec
ror
repnz
test
pop
inc
dec
pop
das
push
js
std
lock
mov
repz
dec
mov
cmp
add
imul
mov
pop
daa
push
and
stos
test
dec
and
shl
push
cli
scas
out
xchg
xchg
fld
xchg
push
sar
inc
out
repnz
xor
jl
(bad)
fcmovnb
jp
jnp
push
lods
ins
pop
(bad)
int3
sbb
dec
aad
scas
adc
jo
push
scas
sbb
and
jno
add
es
adc
mov
ja
sbb
adc
in
inc
mov
push
call
lds
ret
mov
nop
push
adc
jae
inc
repz
iret
dec
ins
pusha
push
jno
in
adc
jmp
(bad)
std
jno
in
or
xor
in
jge
mov
inc
aam
sbb
out
xchg
cmp
fwait
idiv
pop
adc
pop
mov
gs
xchg
add
sbb
leave
push
repnz
in
fs
dec
and
dec
push
xchg
outs
cdq
pop
sbb
pop
cmps
repnz
fistp
fwait
std
pop
add
inc
dec
lods
and
cmc
popa
stc
mov
fdiv
aaa
in
call
outs
mov
call
fldcw
add
jne
sbb
jno
jo
mov
and
int3
lods
(bad)
mov
sti
faddp
bound
fidivr
mov
stc
fmul
inc
lea
mov
nop
sub
fldenv
xor
xor
or
add
cmc
xchg
mov
xchg
xlat
dec
mov
mov
popf
xor
mov
rcr
cmp
adc
pusha
lock
sub
ins
or
mov
pop
js
sahf
cmp
retf
and
jg
loope
xor
bound
pushf
dec
mov
mov
mov
enter
push
lahf
xchg
pop
loope
lock
mov
sub
xchg
fdivr
stos
sti
sahf
ss
imul
ror
sub
fsub
dec
test
cmps
out
out
clc
jnp
fisubr
sbb
jmp
out
xchg
jecxz
cmps
jmp
sub
lahf
xor
neg
jns
dec
adc
sub
inc
inc
sti
(bad)
jmp
xor
dec
mov
sub
cld
push
jnp
and
std
fadd
movs
imul
test
mov
mov
sub
or
cmp
test
xor
das
lods
xchg
jno
xlat
pop
sbb
movs
xlat
jae
add
sub
fild
test
and
inc
cmp
(bad)
inc
inc
test
cs
aam
pop
sbb
xchg
es
out
inc
pop
cs
add
icebp
imul
imul
cmp
sbb
loopne
fbstp
bound
cmp
scas
adc
mov
lds
outs
adc
jp
cmp
fisttp
pop
push
mov
push
mov
je
outs
in
cld
mov
lea
movs
and
push
sbb
dec
inc
popa
arpl
pop
cs
mov
and
mov
cwde
aas
test
cld
pop
ror
inc
sub
inc
js
pop
push
clc
inc
nop
lods
inc
idiv
dec
cdq
popf
push
icebp
sbb
jmp
lahf
shr
call
cmp
or
xor
mov
inc
dec
fs
mov
sub
cs
lods
lock
rol
es
in
adc
fisttp
arpl
mov
ja
ins
retf
aad
add
in
fsubr
fsub
lods
xor
rcl
in
mov
push
xor
and
xchg
(bad)
pushw
inc
dec
jge
std
lods
push
cli
imul
lahf
in
loopne
clc
sbb
xor
adc
push
mov
pop
in
sbb
or
cmp
jmp
loop
or
sub
loop
pop
xor
pushf
mov
nop
loopne
xchg
fs
cmps
push
idiv
rcr
dec
jg
imul
push
pop
inc
jo
jmp
int
sbb
test
xchg
or
cmps
or
(bad)
mov
imul
in
mov
sti
sbb
sub
xchg
(bad)
xor
imul
mov
cmp
fwait
sub
ss
push
jle
or
ins
les
icebp
and
inc
enter
xor
xor
cli
jne
shl
ins
inc
pop
sbb
jg
xor
retf
dec
ja
push
hlt
push
jnp
jae
sub
pop
clc
not
ret
adc
ins
xchg
lock
xchg
int3
jecxz
jns
mov
in
push
mov
pop
push
test
xor
test
pusha
lds
jg
cmp
nop
dec
out
mov
pushf
cmp
fistp
adc
push
jae
stc
fld
hlt
ror
fs
pop
pop
aaa
mov
or
add
xchg
ret
cmp
in
push
(bad)
xchg
mov
xchg
mov
xchg
dec
cs
mov
data16
xchg
mov
and
cmp
or
and
sub
jle
sub
xchg
retf
xor
and
psubw
call
mov
xchg
pop
test
push
push
pushf
repz
xor
sbb
add
stc
cmps
scas
xchg
fcmovnb
jecxz
daa
pop
lods
push
jecxz
rcl
or
add
push
mov
xchg
jl
jge
iret
jecxz
xor
pop
in
xor
inc
push
jnp
scas
data16
jne
ret
or
pop
shr
jmp
adc
dec
or
out
cmps
or
cmps
pop
lds
outs
fwait
iret
iret
or
repnz
call
or
aas
neg
push
lods
cmps
hlt
adc
pop
in
sahf
jp
push
jmp
jno
mov
jns
pushf
push
pop
test
adc
les
scas
sub
mov
addr16
push
mov
and
fwait
mov
jl
scas
fstp
cwde
std
dec
dec
cmps
push
fcmovnu
stos
inc
inc
clc
and
xor
sbb
cmc
xchg
(bad)
sbb
and
xor
cmp
jmp
imul
fwait
lods
dec
hlt
jno
push
pusha
loop
adc
lahf
loopne
js
pop
fnstcw
data16
add
and
inc
push
sbb
cmp
in
pop
pop
not
call
dec
int3
inc
jmp
xor
hlt
arpl
das
push
int
mov
push
and
std
and
int3
mov
bound
in
or
fnstenv
mov
not
stos
out
addr16
dec
inc
idiv
jno
xchg
and
add
xlat
ins
test
push
mov
xchg
adc
adc
sub
(bad)
not
and
paddb
xchg
adc
push
ror
jge
jle
jns
adc
fcmovne
jg
and
mov
push
add
xchg
pop
xchg
adc
mov
pop
push
add
out
out
fisub
and
fidiv
mov
outs
std
mov
cmc
xor
leave
in
sbb
mov
lahf
ret
pop
mov
cwde
xchg
in
xchg
into
cmp
xor
mov
test
mov
ret
fdiv
and
lds
(bad)
push
lea
imul
inc
xchg
pop
sar
push
sar
mov
and
lock
stc
mov
jp
adc
fst
out
ss
dec
iret
xchg
sub
xchg
sub
sub
pop
stc
cli
scas
out
inc
pop
mov
mov
mov
or
sub
outs
dec
dec
inc
test
outs
int
fisttp
mov
loopne
test
in
mov
in
imul
cmp
adc
dec
dec
jbe
sub
stc
push
push
dec
dec
mov
mov
in
repnz
inc
jp
hlt
jnp
cdq
xchg
stos
inc
addr16
pop
stos
and
loop
retf
push
pop
push
inc
pop
mov
adc
adc
jns
adc
cdq
xchg
jbe
out
popa
xlat
push
aam
sbb
gs
shr
pop
and
int3
mov
std
std
outs
mov
add
lods
cmp
xchg
rol
sub
jo
xor
mov
cmp
out
push
push
mov
cld
push
xor
jmp
cwde
sar
xchg
sub
dec
test
dec
sub
xor
push
shr
push
jnp
pop
lahf
retf
mov
adc
push
test
add
xchg
cmps
xor
xchg
jo
and
cmp
push
je
and
cmp
dec
push
adc
inc
adc
sti
stc
in
fsubr
out
jne
mov
adc
cwde
jbe
mov
jb
loope
pop
loopne
inc
addr16
push
je
mov
jecxz
jp
std
lods
pushf
adc
or
pop
repnz
imul
mov
iret
add
icebp
ins
lods
daa
aam
adc
xchg
add
add
repz
pop
push
add
jg
or
xor
inc
or
movs
push
pop
(bad)
(bad)
aaa
inc
cmps
push
pop
pop
adc
nop
loop
jae
mov
cld
ins
fcomp
dec
cmp
jmp
dec
in
inc
les
or
mov
pusha
out
mov
fldenv
aam
sbb
dec
cli
xchg
xchg
sahf
je
cmp
cmp
xlat
in
int3
mov
adc
jno
bound
fsubr
ficomp
or
xchg
jne
mov
sub
jl
jmp
mov
or
mov
sbb
out
fadd
repnz
xor
or
mov
add
or
aaa
pop
mov
sti
ja
popf
and
xchg
ds
das
lods
or
xor
adc
imul
enter
pop
sub
inc
into
in
and
sbb
arpl
add
icebp
outs
inc
push
ret
aam
rcr
jae
mov
out
rcl
(bad)
cmc
js
inc
cdq
ret
mov
mov
rcr
push
mov
jne
adc
adc
js
sub
pop
cmp
outs
and
sbb
bound
xchg
data16
in
xchg
mov
popf
cld
cli
sbb
jge
mov
ins
and
sti
int3
pusha
test
pop
js
sub
xlat
fisttp
repz
dec
mov
cmp
xor
pop
push
mov
jl
ret
ds
add
pop
mov
push
sbb
enter
clc
inc
inc
dec
dec
fistp
jne
test
daa
enter
xchg
push
je
mov
pop
jle
movs
int
push
test
push
add
imul
mov
or
aam
in
mov
and
mov
jg
(bad)
mov
push
jmp
outs
mov
sub
xor
loopne
mov
call
mov
pop
push
inc
or
and
add
inc
call
cli
out
add
(bad)
es
jmp
(bad)
jg
ins
es
jmp
faddp
jmp
add
or
into
scas
inc
sbb
outs
test
and
pushf
pop
push
add
dec
xchg
dec
dec
jmp
je
inc
jno
and
enter
mov
outs
cs
lea
cmps
inc
lods
int
sbb
adc
loop
ss
or
inc
sahf
std
cmp
cmp
loopne
xchg
lea
ret
hlt
lods
leave
rol
sbb
mov
mov
cli
mov
imul
pusha
test
mov
bound
mov
sub
or
dec
std
fdivr
gs
push
rcr
fs
les
mov
fwait
popf
sub
dec
(bad)
and
(bad)
cld
xor
in
fmul
push
sub
jnp
mov
xchg
aas
ror
xchg
(bad)
imul
jle
aad
jae
fwait
mul
xor
mov
jo
sbb
jmp
jne
and
adc
jbe
sub
scas
or
push
mov
out
add
xchg
dec
jmp
call
test
xchg
pop
jae
lock
sbb
cmp
mov
fucom
rcl
imul
push
inc
aad
jmp
mov
xor
retf
and
pop
into
pop
sub
imul
fisubr
mov
push
sbb
int
adc
aas
out
outs
fdiv
jno
adc
gs
jno
cdq
cdq
add
dec
adc
shl
jnp
ja
dec
push
int3
pop
inc
sub
scas
(bad)
cwde
xlat
je
jecxz
test
daa
mov
pop
mov
push
add
stos
stos
lock
jl
xor
sub
pop
add
lods
rol
or
pop
xchg
push
pop
repnz
aas
push
pop
mov
shl
neg
popa
sbb
pop
jnp
pushf
jg
in
mov
imul
ficomp
xor
fwait
jle
lods
xor
addr16
or
nop
push
clc
out
cmps
mov
ror
fst
fdiv
ds
mov
add
aas
popf
jb
cmp
jle
jne
stc
ret
push
sbb
push
jl
inc
and
or
add
pop
push
adc
pusha
jne
inc
add
push
pop
in
add
fldcw
fnstcw
stos
push
dec
inc
icebp
cwde
add
aas
(bad)
imul
jns
mov
popa
cmp
(bad)
jecxz
(bad)
mov
mov
mov
lds
or
shl
mov
ret
push
and
pop
add
mov
(bad)
leave
push
bound
cmp
fstp
inc
(bad)
sub
jno
mov
es
jg
paddsb
test
jns
add
mov
sub
sub
mov
arpl
idiv
dec
add
lahf
dec
movs
das
jmp
add
pop
lahf
test
pop
lahf
push
mov
mov
fucomip
inc
jae
das
inc
cmp
cld
cmp
jecxz
sbb
mov
aad
sahf
repz
ins
jnp
daa
scas
pop
imul
fs
mov
ror
jge
cmp
int3
xchg
cmp
xchg
cmc
sbb
mov
ins
pop
cmps
cmps
stc
int
(bad)
sub
cmp
jg
lea
cmc
(bad)
cli
mov
xor
(bad)
test
(bad)
mov
or
dec
cmps
aad
mov
jo
jmp
hlt
sub
arpl
inc
cmps
enter
mov
adc
out
push
movs
test
je
call
mov
inc
xor
leave
or
dec
sub
xchg
mov
pop
retf
shl
ss
inc
cmp
mov
xchg
scas
jg
and
xchg
sbb
mov
dec
xchg
stos
enter
clc
mov
lock
test
in
mov
mov
into
and
(bad)
test
ror
sbb
mov
xchg
test
dec
mov
xchg
cmp
mov
gs
xchg
push
push
xchg
fs
xchg
sahf
ror
and
dec
(bad)
and
mov
adc
mov
cld
rol
out
mov
xchg
aam
inc
gs
(bad)
jg
mov
movs
sub
call
and
mov
cmp
mov
cwde
jbe
mov
inc
loope
mov
inc
pop
shl
imul
out
inc
imul
fdivr
or
push
jnp
repnz
adc
int
inc
repnz
(bad)
loope
(bad)
push
(bad)
(bad)
ficomp
cli
push
sub
dec
cwde
xchg
leave
fsubp
ret
dec
pop
sbb
es
mov
add
out
das
xor
xchg
sub
cmp
push
bnd
in
test
push
adc
sbb
sub
and
fnstenv
data16
or
dec
dec
xor
sbb
ret
popa
retf
int3
and
jecxz
bound
mov
inc
mov
dec
std
pop
pop
lock
sub
cmp
jbe
jae
pop
mov
or
icebp
mov
or
test
dec
jne
mov
cli
mov
inc
jne
mov
dec
mov
mov
in
pop
xor
xor
cmp
je
lea
ret
in
sbb
inc
or
fadd
xor
fmul
aam
call
inc
mov
xchg
in
xchg
mov
addr16
pusha
inc
xchg
mov
dec
loope
xchg
pop
ret
mov
pushf
(bad)
dec
call
fld
xor
bound
ret
in
sub
imul
fidivr
and
inc
out
cli
in
and
rcr
add
jae
jae
add
(bad)
addr16
fild
int3
outs
add
aas
les
or
jp
fs
cmc
div
jmp
in
(bad)
in
push
sub
push
test
int3
mov
dec
outs
and
xor
rcr
xchg
xchg
leave
out
hlt
sti
movs
xchg
xor
or
lds
fs
xchg
pop
rcr
outs
stos
add
cmps
lods
push
cmp
dec
mov
and
fstp
add
xchg
pusha
mov
dec
jmp
lods
popa
js
cs
ret
jg
dec
aad
mov
shrd
mov
pop
push
push
cmp
ret
and
inc
sbb
mov
xchg
into
stc
sub
inc
add
sbb
out
pop
mov
fnstsw
lds
mov
loope
lock
dec
xor
cwde
out
popa
movs
add
popf
test
dec
pop
movs
cmp
adc
mov
(bad)
and
jmp
in
(bad)
mov
or
sub
call
sub
dec
loopne
int
xchg
mov
outs
push
mov
add
xor
outs
inc
cmps
cmp
or
ret
jbe
sti
mov
push
pop
inc
ficomp
xchg
adc
adc
jecxz
int3
push
shl
fs
xchg
xchg
cmc
imul
fiadd
das
cmp
test
fs
xlat
add
push
ins
mov
dec
call
dec
and
and
ins
clc
xor
or
into
out
imul
(bad)
jp
into
loop
mov
repz
mov
xchg
js
scas
adc
mov
ds
fwait
add
xchg
jecxz
push
or
call
pop
adc
fidivr
call
xchg
push
inc
push
in
in
xor
sub
mov
imul
loope
or
loope
out
sub
sbb
inc
bound
cmp
and
repz
jge
js
sub
cwde
outs
retf
xchg
mov
xchg
loopne
call
mov
dec
or
outs
adc
inc
daa
rol
mov
mov
iret
xor
jb
prefetch
sub
mov
sbb
or
and
sub
mov
not
ss
cmp
pop
je
sub
inc
push
(bad)
or
(bad)
xor
ret
jmp
out
les
arpl
add
popf
mov
enter
loop
stc
add
pop
mov
cmps
xor
jl
aaa
mov
scas
mov
sbb
jmp
ja
dec
sbb
push
xchg
cli
mov
shl
push
pop
clc
dec
icebp
xor
jmp
inc
add
adc
inc
or
in
mov
add
pop
pop
mov
jl
data16
sub
dec
ret
scas
call
leave
cli
loop
pop
lahf
lods
mov
sub
pop
not
mov
cmp
test
mov
mov
adc
int
out
mov
adc
inc
cmps
sti
test
mov
cmp
out
adc
daa
jmp
mov
mov
fwait
ja
dec
inc
outs
inc
jnp
dec
das
cmps
mov
jno
and
cmp
dec
cmps
dec
std
sar
call
call
enter
fwait
movs
jae
sahf
dec
outs
lock
inc
sbb
add
xor
ins
add
stos
mov
ins
or
cmp
aad
aas
loopne
les
and
into
mov
cmps
ins
sbb
cwde
stos
cmps
lods
fs
jnp
imul
cld
int3
call
dec
dec
or
xchg
arpl
daa
rcl
inc
jmp
jl
push
mov
xchg
xor
lea
add
enter
mov
out
mov
or
mov
push
xchg
shr
jmp
lock
fist
jmp
popf
jno
add
jne
int3
cmps
es
sub
jno
ds
jmp
pop
pop
and
mov
hlt
sbb
sahf
mov
inc
pop
jno
aad
out
jmp
js
aad
xchg
test
ds
xchg
movs
aam
fwait
pop
adc
out
sbb
mov
scas
dec
add
iret
inc
into
mov
xchg
mov
les
sbb
int3
jmp
aas
xchg
add
mov
xor
mov
jecxz
inc
jbe
call
stos
stos
add
mov
jg
cmp
scas
or
pop
in
push
scas
xor
mov
dec
sahf
mov
or
fisubr
fldenv
sub
pop
mov
enter
in
out
inc
mov
push
jb
scas
int3
pop
add
adc
push
cmp
sub
ss
ja
aas
xor
daa
lock
hlt
dec
and
js
adc
imul
dec
aas
popf
and
test
jmp
popa
mov
xchg
push
dec
in
push
imul
mov
arpl
sbb
cmp
or
mov
sbb
mov
aaa
push
daa
mov
mov
stos
jmp
ss
ret
xor
movs
xchg
or
xchg
push
into
push
or
sub
mov
das
inc
jno
fisttp
call
xchg
std
xchg
sbb
dec
in
xchg
imul
mov
jnp
gs
xor
lea
in
(bad)
mov
push
imul
push
lea
pop
clc
fcomp
adc
in
mov
mov
sub
sub
clc
jmp
mov
cmps
push
js
adc
pushf
out
xlat
xor
pop
mov
fistp
push
jecxz
cmps
nop
xor
hlt
adc
pop
fbstp
cs
stos
or
push
and
adc
aad
cmps
xchg
nop
adc
int
test
imul
xchg
shr
and
xor
pop
fld
test
aad
call
pop
loop
mov
not
jne
dec
inc
mov
pop
mov
push
sbb
ror
jmp
adc
les
fsub
in
add
gs
jle
int
ins
push
stos
xor
movs
repnz
pop
outs
outs
movs
std
mov
gs
dec
shl
sbb
test
test
and
(bad)
add
imul
clc
bound
and
jo
push
and
es
loop
pop
mov
out
div
jp
mov
adc
dec
inc
(bad)
arpl
frstor
push
ss
ret
(bad)
aaa
xchg
push
int3
addr16
pop
(bad)
sbb
mov
outs
lahf
jle
or
pusha
lock
xor
xor
mov
xchg
ret
xchg
aad
scas
dec
inc
sbb
pop
lods
pushf
push
push
(bad)
loop
mov
cmps
stos
mov
pop
outs
add
nop
(bad)
or
inc
arpl
xchg
cmp
cwde
ror
stc
call
stos
dec
xchg
jb
add
xchg
imul
xor
jns
sbb
outs
adc
inc
enter
mov
xchg
bnd
dec
mov
mov
add
je
jmp
std
pop
mov
push
xor
jmp
aad
mov
js
int3
xor
ret
loop
sbb
aaa
(bad)
iret
inc
ret
mov
and
and
pop
fs
dec
cmp
ds
mov
cmp
inc
pop
sub
repz
loope
push
ror
push
lods
add
in
scas
jnp
lds
jecxz
or
sbb
mov
adc
cmps
mov
popa
dec
rol
ret
adc
jno
loopne
push
xor
dec
ss
sbb
test
dec
dec
add
shr
cmp
sbb
jge
fcomp
xchg
adc
jae
shl
out
mov
lods
daa
add
inc
lea
or
fwait
mov
fnstenv
iret
and
jmp
popa
sahf
push
repz
inc
sub
adc
out
or
pop
push
lds
lea
mov
(bad)
dec
inc
out
cmp
in
jb
fild
cmps
jne
lahf
dec
mov
cmps
outs
cmp
and
clc
sbb
sbb
xor
loopne
mov
jne
cmp
dec
and
pop
fnstcw
dec
and
or
xchg
jle
sbb
mov
nop
pop
xor
adc
cdq
inc
ins
jae
and
ins
dec
pop
or
and
or
out
adc
in
sub
jle
cmc
test
dec
les
xchg
add
out
shl
das
cmps
mov
jmp
jns
(bad)
enter
bound
push
push
retf
lea
xor
popa
push
fld
and
mov
xor
(bad)
sbb
pop
xchg
mov
int3
cmp
add
xlat
outs
mov
or
adc
(bad)
idiv
(bad)
js
das
inc
cld
scas
pop
jle
push
sti
pop
adc
arpl
fdivrp
adc
dec
jns
jp
fistp
sar
push
jae
sti
ret
popf
js
outs
push
add
xchg
mov
cmp
ret
rcr
pop
(bad)
aam
sbb
dec
pop
ror
push
xor
pop
and
lea
ficom
add
xchg
rcl
jmp
leave
fsubr
fimul
iret
sub
mov
out
nop
ss
push
std
pop
xor
pop
loopne
or
shl
mov
stos
xchg
outs
dec
lahf
outs
aaa
adc
fidivr
in
cmp
jp
hlt
imul
mov
sti
sub
les
mov
cdq
fistp
pusha
fistp
mov
cmp
pop
add
inc
push
push
daa
add
aas
add
int3
cwde
cmp
fwait
inc
jg
cs
lea
and
nop
jae
jo
add
mov
or
mov
mov
stc
jo
cmps
pop
(bad)
leave
and
hlt
repnz
jp
repnz
aam
sbb
inc
adc
scas
mov
je
jae
aas
mov
jns
cmp
sysenter
fcmovne
sahf
stos
xor
mov
or
icebp
int3
and
xchg
and
(bad)
js
pop
in
cld
pop
cmp
or
mov
cmp
aas
push
or
adc
cmps
xor
je
inc
mov
lods
sbb
push
xchg
jg
dec
push
ja
cs
sub
ret
mov
xlat
inc
(bad)
pop
stos
in
xchg
push
xchg
enter
jne
pushfw
es
imul
nop
icebp
ins
mov
(bad)
shl
and
jmp
stos
in
fisttp
push
mov
gs
pop
inc
cmps
sbb
test
(bad)
shl
scas
in
and
adc
(bad)
xchg
mov
lock
rol
(bad)
push
push
pop
and
rcr
pop
hlt
in
cld
rcl
sub
pushf
fstp
mov
test
loopne
mov
das
mov
xor
in
cmp
loope
xchg
in
ss
dec
repnz
add
into
inc
xor
sar
leave
in
inc
imul
xor
mov
mov
pop
cmp
and
inc
icebp
aas
jg
les
ret
fld
in
xchg
call
leave
xchg
iret
cld
mov
div
xor
push
addr16
ret
jne
aam
pop
mov
leave
pop
sbb
test
cwde
xchg
inc
sub
inc
mov
adc
out
mov
mov
push
pop
rol
es
xlat
dec
imul
dec
mov
enter
sbb
fcomp
add
push
outs
push
out
mov
push
mov
dec
jbe
sub
mov
sbb
or
test
(bad)
sbb
mov
icebp
ja
jp
cmp
sar
mov
addr16
(bad)
dec
dec
adc
push
adc
dec
shl
dec
adc
idiv
mov
inc
sub
xor
(bad)
push
pop
inc
mov
repnz
jg
(bad)
stos
mov
std
pop
js
data16
fmul
add
cmp
push
fcmovnbe
idiv
sub
or
ficomp
xchg
jne
or
mov
pop
inc
popf
movs
xor
push
sub
test
frstor
xor
push
lahf
jae
hlt
cmp
fnstenv
in
mov
or
inc
scas
xor
push
cli
retf
movs
push
jnp
or
fldenv
add
repnz
test
jns
dec
jno
aas
stos
and
mov
aas
jg
sub
mov
shr
add
mov
in
movs
idiv
push
push
inc
adc
xor
fld
out
shl
and
or
aas
test
cmp
es
pop
adc
inc
out
cli
xchg
dec
fs
bound
sub
or
xchg
jecxz
sub
add
mov
outs
mov
or
aam
mov
mov
inc
test
in
cli
xor
mov
sbb
fmul
outs
inc
xor
mov
(bad)
repnz
sti
es
push
test
or
dec
imul
stos
mov
cmps
dec
jmp
cmp
idiv
inc
gs
adc
je
enter
leave
xor
xchg
cmp
aam
arpl
inc
mov
cmp
cmps
cmp
and
retf
ficomp
out
sub
jno
in
hlt
rcr
pop
inc
(bad)
xor
popa
push
push
pop
xor
(bad)
loopne
jo
xor
retf
retf
pop
inc
dec
fucom
sub
or
mov
cmp
mov
arpl
xor
inc
mov
pop
xchg
jne
loop
pop
fimul
push
data16
loope
xchg
ror
int
stos
xchg
mov
stos
shl
imul
add
mov
es
jl
jb
outs
cmp
pop
mov
push
sub
cld
movs
aad
pop
sbb
mov
or
int3
ret
cmc
or
dec
arpl
dec
add
lods
mov
sub
mov
inc
mov
ror
cwde
mov
adc
sbb
inc
dec
test
fild
push
in
sub
mov
sbb
test
rol
sbb
pop
xor
jne
icebp
daa
xchg
std
jl
or
test
mov
and
aam
add
fcom
aaa
out
mov
into
and
fmul
push
sub
popf
idiv
call
cli
outs
es
vfnmsub132sd
repz
call
inc
sti
push
sar
fimul
and
add
aas
jge
mov
and
add
rcr
ffree
ret
push
jns
inc
jmp
mov
outs
push
rol
int
outs
jmp
aad
pop
cs
dec
push
fldenv
(bad)
pop
or
in
add
push
ins
add
div
push
xchg
xchg
or
jl
arpl
popa
rcl
loope
addr16
ja
int3
mov
retf
call
dec
push
xlat
sbb
mov
add
rol
gs
test
add
loop
xor
xor
push
or
mov
ror
jp
cmp
mov
test
ins
ins
ins
or
jge
not
mov
mov
push
and
sub
data16
mov
dec
mov
scas
les
xchg
add
cdq
outs
jns
lods
push
mov
ficom
lods
loope
add
sub
jne
aaa
or
or
push
adc
jns
mov
fist
js
cmp
mov
mov
or
call
sub
mov
(bad)
xchg
cmp
mov
cmps
adc
(bad)
neg
jb
in
pop
jmp
pop
mov
dec
pushf
popa
out
xchg
(bad)
call
inc
leave
pop
ret
and
retf
jp
and
cld
mov
outs
inc
xor
test
(bad)
into
mov
outs
mov
enter
mov
call
pcmpgtd
cmovle
pop
push
clc
mov
inc
jge
mov
mov
add
lods
popf
imul
cmp
push
lock
xor
pusha
jae
jp
ret
or
sub
mov
arpl
lock
xchg
xchg
out
pop
push
shl
xor
inc
xlat
jnp
push
sub
jp
ja
and
push
fadd
inc
fisttp
pop
sub
hlt
bound
or
add
push
pusha
(bad)
hlt
out
dec
fidiv
jg
xor
sub
retf
int
outs
or
pop
dec
sbb
test
and
dec
(bad)
mov
mov
shr
(bad)
cmp
jns
stos
popf
push
push
push
pop
cmp
or
nop
aad
xchg
ds
dec
pop
sahf
and
outs
loopne
and
inc
retf
ret
test
pop
pop
(bad)
cld
inc
mov
sbb
lahf
in
mov
aas
inc
mov
lock
mov
(bad)
in
retf
mov
dec
xlat
xchg
dec
rcr
in
pop
in
and
aam
cmp
mov
retf
bound
test
enter
cmp
jge
push
out
xchg
push
nop
xor
popf
cli
jecxz
in
mov
dec
or
or
lahf
pusha
leave
push
fiadd
sbb
cld
mov
push
ins
pop
xchg
mov
test
ds
xchg
inc
inc
and
mov
push
addr16
adc
or
call
adc
mov
movs
sub
push
mov
lahf
xlat
and
sbb
div
pop
sub
jecxz
or
fsubr
xchg
dec
fwait
push
cmp
cmp
pop
jnp
lock
shl
cmp
add
adc
xchg
cmps
loopne
out
add
and
daa
cwde
pop
out
pop
in
inc
mov
pop
xor
add
lock
pop
cmc
sub
cdq
mov
add
mov
inc
in
loope
stos
mov
and
fwait
popf
(bad)
cmp
mov
dec
mov
mov
pop
dec
xchg
fsubr
inc
adc
call
cmp
aad
sbb
inc
xor
mov
data16
jae
repz
push
ins
mov
cli
jg
add
push
sub
push
daa
daa
jge
pop
mov
xchg
outs
js
jecxz
or
mov
ins
mov
adc
push
test
call
movs
pop
imul
cwde
pop
push
and
ret
xor
retf
jecxz
int3
add
dec
push
int
retf
pop
rcl
jnp
push
mov
addr16
out
pop
adc
and
sahf
cmp
xor
pop
cmp
fld1
xor
out
std
push
pop
mov
add
ja
shl
clc
int3
push
repz
adc
adc
(bad)
lahf
mov
stos
sbb
jne
xchg
sbb
gs
call
(bad)
jbe
push
loop
scas
cdq
(bad)
test
xchg
sbb
icebp
dec
sbb
in
arpl
(bad)
mov
ins
cwde
imul
add
cmp
or
add
push
add
xor
movs
push
cs
and
int3
cwde
arpl
cmp
xchg
gs
jmp
cmp
inc
inc
push
popa
loopne
pop
cmp
stos
pop
jo
xchg
mov
jmp
test
jg
dec
aas
nop
xchg
ins
push
idiv
call
jmp
mov
pop
leave
icebp
dec
adc
pusha
cmp
data16
outs
dec
mov
fnstsw
mov
cmps
sbb
in
fwait
in
pop
add
xchg
fimul
xchg
cli
or
jne
mov
or
cmp
aaa
pusha
sbb
push
ret
pop
jb
adc
xchg
popa
inc
sti
in
popf
ficom
cmp
inc
inc
lods
loope
iret
(bad)
mul
(bad)
xchg
mov
pop
in
aad
pop
idiv
(bad)
jno
mov
push
(bad)
inc
inc
enter
addr16
adc
inc
ja
xchg
mov
ret
fcom
enter
push
and
(bad)
xor
jmp
sar
ja
cmp
ror
add
daa
push
dec
and
in
pop
popa
cwde
call
int
mov
mov
rcr
loop
pusha
loope
in
mov
sti
jno
xor
idiv
retf
xor
xchg
xor
push
pop
cmps
call
dec
scas
inc
(bad)
or
push
adc
test
and
dec
in
loopne
xor
imul
jge
dec
cmp
sti
rcl
enter
fild
or
pop
cdq
xchg
stos
and
or
mov
add
into
sahf
loope
adc
cmp
or
out
cmps
movs
js
mov
mov
xchg
lahf
imul
sbb
aam
cmp
fidiv
xlat
(bad)
inc
icebp
adc
mov
ficom
in
dec
cdq
ficom
cmp
xor
and
ret
dec
mov
sbb
gs
push
(bad)
std
dec
mov
adc
ins
dec
sti
mov
out
mov
ret
sbb
sub
dec
mov
cmp
bts
cdq
fwait
hlt
pop
mov
ror
cmp
mov
in
into
push
adc
adc
add
rcl
push
test
loopne
mov
out
mov
ret
fdiv
inc
ins
sbb
mov
mov
jnp
jnp
bound
in
and
xchg
fld
aas
cmp
mov
push
xor
rol
in
outs
icebp
xlat
sub
outs
push
mov
inc
call
mov
(bad)
std
add
mov
xor
lods
aad
jmp
jae
jns
and
jb
lds
push
add
sbb
sti
cld
loopne
das
aaa
in
xchg
fwait
jl
cmp
xchg
sbb
fdivr
xchg
data16
fcmovnu
inc
push
jmp
xchg
push
adc
lahf
scas
xchg
ror
jle
sti
mov
lods
shl
hlt
(bad)
push
sti
jmp
mov
cmp
xor
or
jmp
push
and
jb
cmc
pushf
mov
scas
pop
sahf
xchg
sahf
pop
jg
stc
cmp
jp
jl
or
ror
lock
sub
push
loopne
gs
push
or
in
repz
ja
clc
addr16
inc
adc
xlat
xor
dec
mov
adc
vhaddps
jb
cmp
sbb
push
cmp
mov
jb
and
adc
clc
stc
xchg
rcr
mov
mov
or
xchg
shl
dec
hlt
pushf
leave
repz
push
stos
movs
lds
sahf
fcmovnbe
rcr
jge
cli
inc
fwait
(bad)
(bad)
aaa
ror
push
call
adc
xchg
mov
xchg
xchg
das
loope
fs
mov
xchg
inc
mov
idiv
loopne
bound
mov
gs
aas
xor
sbb
cmc
scas
mov
out
mov
jl
fimul
mov
inc
dec
mov
retf
in
sar
or
jge
test
je
inc
add
pop
or
jne
xchg
fdivr
sbb
jb
xor
movq
mov
out
aaa
imul
in
cmp
sbb
ret
std
fs
imul
cmp
mov
lea
ins
les
xchg
rol
xchg
stos
sub
mov
push
jge
dec
lock
stos
and
cmp
sti
sub
test
mov
cmps
xchg
xchg
retf
dec
cmps
push
loope
aad
loope
sbb
cmp
inc
inc
or
push
cmp
xchg
sbb
dec
icebp
sub
lahf
in
inc
xchg
jle
(bad)
push
fld
push
dec
sbb
dec
dec
scas
xchg
loop
jg
sub
inc
(bad)
jmp
fcomi
sub
(bad)
jl
jno
inc
xchg
idiv
icebp
lock
dec
mov
(bad)
mov
scas
jae
add
mov
cdq
shr
jbe
fucomip
aam
repz
ret
ficomp
rcr
push
mov
popa
mov
lock
inc
lods
fcomp
adc
add
div
and
in
pop
mov
int
retf
mov
dec
sub
sbb
adc
sbb
mov
jnp
aad
jge
dec
xor
test
sbb
leave
ja
mov
jmp
pop
jns
xor
lods
or
cmp
pusha
(bad)
stc
lea
sub
(bad)
pop
(bad)
cmp
inc
stos
in
adc
or
sar
add
test
mov
movs
fdivr
in
and
loope
ss
cmc
test
push
sub
mov
lods
daa
and
dec
(bad)
cmp
push
mov
int
(bad)
cmp
aas
pop
mov
xchg
mov
icebp
inc
call
sub
or
adc
mov
shl
sub
push
push
xor
adc
xchg
sbb
pusha
cmp
jnp
in
and
stc
adc
add
loope
lods
nop
adc
mov
dec
jle
inc
(bad)
loope
cwde
ficomp
cmp
mov
imul
adc
rcl
inc
push
sar
pop
cwde
xchg
(bad)
fdivr
fcom
cdq
xchg
ins
jae
aas
dec
popa
pushf
in
jp
adc
dec
jg
aas
dec
or
cmp
inc
pop
push
jge
sub
pop
mov
jg
sbb
mov
xchg
adc
and
das
fisub
addr16
lods
rol
sbb
movs
das
cld
cmp
dec
ror
daa
dec
arpl
sti
(bad)
mov
lods
jecxz
test
pop
sbb
sbb
mov
cmps
mov
and
fiadd
inc
or
imul
in
add
clc
test
cmp
or
dec
sub
ret
xor
iret
popa
test
pop
loop
pop
mov
sti
pop
rcl
add
std
inc
rcr
pop
mov
pushf
dec
cmp
lea
add
jae
or
adc
adc
fldenv
push
pop
inc
xor
loop
test
sub
and
sub
das
ds
loop
mov
ret
mov
push
adc
cmp
mov
adc
fnstsw
or
cmp
arpl
sbb
jae
mov
xchg
fwait
(bad)
or
adc
mov
scas
jno
mov
pop
cmp
jecxz
sub
sbb
adc
push
loop
inc
or
pop
loope
cmps
loopne
mov
ja
sub
jl
mov
lods
call
push
mov
test
jns
pop
jo
aas
movs
mov
sub
arpl
xchg
outs
scas
add
aas
cli
jge
imul
dec
xchg
jmp
mov
loope
dec
icebp
daa
pop
repz
or
sbb
in
push
in
stc
xor
fs
mov
jne
imul
aad
std
fidivr
jmp
sub
xor
arpl
in
add
xchg
and
icebp
mov
lock
and
call
(bad)
jnp
nop
enter
(bad)
dec
xchg
adc
aad
dec
sbb
sub
retf
push
adc
clc
aas
jge
shr
fldenv
shr
push
pop
sti
leave
in
sbb
inc
adc
sbb
xor
cmp
xchg
(bad)
xchg
cmp
xor
addr16
sbb
pop
ins
sbb
mov
dec
popf
in
inc
and
and
or
icebp
cmp
jle
repz
retf
add
xchg
mov
cmp
scas
and
push
add
jo
sub
iret
push
or
pop
stos
out
mov
push
dec
(bad)
(bad)
and
pop
cmp
(bad)
and
ficomp
imul
retf
mov
mov
sub
fwait
movs
cdq
cs
mov
add
jns
rcl
jne
fs
push
inc
mov
xchg
adc
add
xor
inc
or
pusha
jo
cmp
mov
data16
mov
dec
ss
sbb
sbb
(bad)
cmps
outs
stc
mov
out
or
or
mov
hlt
cli
mov
xor
inc
xchg
pop
dec
cmc
aaa
test
jge
cwde
scas
packuswb
arpl
aas
test
sbb
adc
mov
mov
stos
fcom
sub
retf
and
push
adc
sti
mov
stos
jnp
jmp
pop
mov
adc
sbb
aaa
add
mov
sbb
mov
inc
dec
pop
lods
or
js
das
inc
push
ins
sbb
sbb
jp
iret
repnz
sbb
dec
lea
test
adc
xor
push
xchg
sub
sbb
adc
icebp
push
sbb
call
fisubr
int3
cmp
aas
out
and
add
push
sub
inc
stos
rcr
out
in
cmp
add
sbb
(bad)
sti
dec
xchg
cld
shr
or
loop
mov
fisub
hlt
mov
jmp
out
ja
call
add
pushf
cmp
fstp
sub
xchg
pop
outs
mov
rol
dec
sahf
nop
jns
mov
in
inc
mov
or
rcl
js
mov
and
pop
ss
aaa
clc
inc
outs
pop
fild
push
xchg
std
or
mov
stc
dec
adc
pop
xchg
std
mov
and
(bad)
rcl
lods
inc
(bad)
in
push
mov
aam
stos
les
clc
inc
addr16
movs
aas
into
and
shr
jb
and
rcr
test
or
pop
outs
or
push
(bad)
test
jbe
fnstenv
lahf
jb
js
movs
jge
cmp
cmps
(bad)
sub
out
pop
aam
leave
push
stos
outs
loop
mov
hlt
sbb
ret
push
test
inc
(bad)
sub
out
lock
sub
dec
into
(bad)
jmp
xchg
mov
or
cmp
sbb
mov
ins
int
ins
dec
add
test
adc
shl
test
jns
push
inc
cmp
adc
scas
inc
(bad)
cdq
jne
inc
cs
stos
jo
mov
or
xchg
xchg
addr16
test
mov
adc
push
and
xchg
in
scas
scas
imul
sbb
xor
xchg
pop
cs
and
mov
arpl
pop
rcl
test
pop
pusha
xchg
inc
add
in
mov
xchg
mov
loop
mov
outs
shl
adc
lods
int3
repz
mov
(bad)
daa
sahf
in
push
cmp
ret
psubsw
inc
outs
mov
dec
jb
mov
push
pop
inc
sbb
int3
ror
repnz
inc
pop
push
inc
xchg
or
ret
cmp
icebp
add
push
les
sub
jo
movs
movs
push
mov
pop
ja
xchg
mov
div
dec
aas
push
aas
js
push
sub
stc
adc
push
push
push
in
(bad)
sbb
aaa
jle
pusha
je
or
lods
loopne
xchg
imul
sub
or
cmp
sub
mov
and
movs
xor
paddusw
pushf
(bad)
fisub
fcom
pop
bswap
cdq
sub
inc
mov
pop
jbe
pusha
push
scas
fdiv
mov
mov
in
and
ret
or
mov
dec
sahf
adc
outs
jl
push
in
jno
inc
loop
xchg
pop
cmps
inc
ds
mov
add
inc
pushf
out
xchg
psrlw
push
scas
pop
mov
sbb
(bad)
cmc
mov
jl
mov
mov
shl
push
jle
mov
push
and
mov
hlt
dec
rcr
mov
pop
cld
add
dec
ja
(bad)
test
imul
out
into
psrlq
xchg
sub
xchg
dec
adc
jp
mov
adc
test
jne
out
mov
mov
int
dec
mov
rol
cmp
leave
int
dec
icebp
lea
push
shr
push
pop
xor
sbb
stos
test
mov
and
add
leave
and
mov
iret
call
xchg
pop
mul
push
pop
cmp
xchg
xchg
mov
test
clc
mov
jb
dec
xchg
inc
or
xchg
pop
movs
mov
cld
cld
mov
dec
cs
dec
dec
xchg
dec
xor
into
inc
cmc
repz
jl
std
ret
outs
imul
mov
xrelease
mov
cs
dec
jmp
add
xor
test
cdq
nop
xor
push
add
mov
mov
call
jg
ins
mov
push
jge
sub
xchg
jnp
mov
(bad)
lds
xor
cli
sbb
in
rol
je
push
pop
arpl
cmp
movs
add
fistp
add
je
mov
push
adc
sub
inc
pop
push
out
in
dec
test
lahf
jnp
ins
js
cmp
movs
shl
cmp
pop
push
movaps
cwde
jmp
xor
jmp
sub
mov
enter
pop
dec
enter
adc
shr
ror
inc
hlt
xchg
push
std
lahf
loope
inc
fisubr
jle
adc
xchg
xlat
jge
mov
in
arpl
test
push
shr
xchg
xchg
sub
jbe
pusha
mov
fs
je
mov
test
stc
or
js
(bad)
inc
dec
int3
sbb
das
dec
mov
pop
std
mov
popa
cld
daa
mov
dec
leave
repnz
add
int
inc
adc
mov
test
retf
mov
outs
(bad)
cmps
xchg
dec
ret
pop
add
dec
cdq
mov
call
push
xchg
loop
xor
shl
std
stc
sbb
xchg
hlt
sbb
pop
cmp
and
shl
inc
add
ret
out
and
lods
repnz
int3
ins
jp
repz
cmps
or
add
mov
es
push
dec
adc
fsub
cdq
sub
cdq
out
out
pushf
cld
(bad)
xchg
(bad)
leave
repz
loope
push
push
mov
adc
in
repnz
call
adc
xor
and
retf
xchg
int3
mov
dec
cld
mov
push
xor
arpl
pushf
fbld
arpl
psllw
stos
jns
mov
(bad)
mov
bound
cmp
fs
rcr
sbb
or
shl
add
retf
mov
mov
fnstsw
mov
mov
mov
mov
dec
bound
add
gs
mov
push
sti
pop
mov
adc
aad
(bad)
call
aaa
in
jae
inc
es
add
or
ins
imul
jbe
mul
inc
loop
mov
sbb
cmp
leave
cld
jle
jle
popf
mov
xor
enter
or
imul
dec
mov
int3
sub
in
ds
mov
xchg
push
fcom
loope
or
jnp
pop
cmp
inc
push
mov
pop
loope
adc
int
data16
pushf
cdq
mov
jbe
fs
cmp
jl
xchg
xor
xlat
jp
in
lock
mov
adc
dec
mov
mov
ret
mov
in
pushf
retf
fistp
push
mov
fst
mov
mov
test
mov
inc
jb
fadd
mov
retf
cs
push
sub
and
pop
mov
test
jne
mov
sub
mul
aad
ror
xor
loop
enter
mov
fld
cmp
mov
outs
test
pop
cmps
dec
inc
sbb
dec
push
cmovb
sub
ins
xchg
stos
(bad)
cdq
mov
pusha
scas
jae
outs
cmp
in
pop
mov
sbb
sbb
and
fdivr
cwde
pop
or
mov
test
add
aaa
rcl
inc
jg
sbb
pop
mov
jmp
sub
add
mov
sub
mov
repz
outs
mov
outs
(bad)
xor
cmp
(bad)
push
mov
mov
arpl
(bad)
ret
imul
fnsave
mul
imul
cli
int3
mov
jle
mov
and
cwde
cmc
xchg
mov
in
pop
fsub
xchg
jo
jns
push
out
mov
jne
outs
dec
pop
les
jno
add
out
cdq
pop
dec
adc
push
stc
push
cmp
movs
mov
rol
xchg
mov
cmps
mov
pushf
adc
fwait
ret
ror
sbb
adc
pop
imul
dec
dec
mov
icebp
xor
cld
xor
out
repz
lea
xchg
jo
pop
sahf
fcmovb
movs
scas
jmp
mov
push
jg
cmp
sub
and
jno
add
aas
fnsave
daa
jns
xchg
test
xchg
xchg
aas
or
das
(bad)
into
out
add
mov
sahf
xor
je
std
loop
jl
add
mov
and
xchg
bound
int3
fdiv
dec
cmp
(bad)
push
mov
les
clc
gs
add
aaa
pop
imul
pushf
inc
fsubr
data16
outs
xchg
pop
mov
push
pop
mov
xchg
fcomp
out
cmps
push
or
xchg
jmp
pushf
aaa
scas
xor
cwde
int
sub
xor
jnp
adc
xchg
add
lods
mov
call
push
out
or
push
pop
sbb
adc
stc
cmp
pop
aaa
sahf
mov
pop
xchg
sbb
push
loop
sbb
adc
adc
push
in
(bad)
mov
cmp
cdq
icebp
mov
nop
mov
pop
in
mov
scas
jmp
adc
popa
jnp
iret
inc
iret
je
lods
mov
xor
(bad)
rcl
lahf
dec
nop
popa
aam
sub
jo
mov
xchg
push
xor
ins
fnstsw
dec
inc
cmc
addr16
sub
cmp
pop
adc
sub
std
pop
mov
(bad)
xor
jge
inc
(bad)
stos
cmp
inc
test
cmps
aad
dec
sub
int
in
nop
dec
mov
push
sbb
jne
(bad)
je
in
push
ret
clc
cmp
xchg
mov
add
sbb
inc
sbb
jmp
fadd
xchg
aad
out
mov
out
call
outs
dec
in
xor
das
inc
inc
cmps
pop
stos
xor
aaa
pop
outs
adc
(bad)
mov
mov
add
shr
fs
sbb
cmp
add
aaa
ins
and
push
mov
mov
clc
sub
clc
std
xchg
inc
cmp
jbe
xchg
sbb
cmp
xlat
adc
cld
leave
cmps
pop
and
fmulp
int
iret
ror
div
pop
das
int3
dec
inc
mov
cdq
cmp
leave
mov
adc
cmp
push
jl
mov
mov
sub
fucomi
dec
xchg
mov
mov
xor
ins
lock
or
into
(bad)
in
xor
sbb
movs
(bad)
cmps
(bad)
mov
shl
mov
loope
inc
sar
ret
test
and
cwde
inc
add
and
sti
mov
pop
loope
popa
inc
dec
les
out
xchg
out
stc
test
clc
repnz
fcmovne
jmp
iret
mov
sub
out
jo
js
dec
cmps
fs
xchg
jne
arpl
sbb
retfw
push
mov
sbb
sbb
les
pop
pop
cmps
xor
add
jl
xchg
cmps
daa
nop
push
push
in
jbe
or
(bad)
cmp
mov
scas
sub
pop
lods
out
jmp
push
into
and
mov
or
cwde
cmp
call
cmp
test
push
out
fwait
and
jle
jle
stos
movzx
push
sub
nop
ret
mov
add
(bad)
test
adc
jp
cmp
pop
sbb
and
push
sar
rcr
test
fdivr
ins
sbb
mov
mov
cmp
and
inc
jle
lahf
push
jnp
inc
push
(bad)
rcr
mov
fldenv
cmp
dec
mov
add
inc
push
mov
int
and
adc
jecxz
popf
psubusb
loop
imul
sbb
sti
loopne
mov
lods
mov
movs
repz
inc
cmp
(bad)
popa
repz
popa
pop
in
jne
jb
xor
loope
mov
and
jge
imul
pop
dec
mov
adc
movs
test
adc
ret
push
es
or
mov
test
mov
push
dec
and
out
mov
ds
cwde
jecxz
cmp
in
mov
mov
fstp
jecxz
iret
fldenv
(bad)
inc
fnstenv
sub
mov
mov
push
jp
sbb
mov
adc
add
cmps
mov
sti
inc
pop
mov
jge
scas
mov
dec
pop
test
cli
pop
mov
mov
frstor
pop
in
sbb
mov
iret
mov
(bad)
fmul
push
mov
add
or
sbb
adc
(bad)
call
dec
cmp
data16
pop
mov
lods
rol
or
adc
mov
lds
ins
dec
xchg
retf
sbb
mov
xlat
cli
push
sbb
adc
mov
pop
dec
call
jp
xchg
test
mov
stos
in
jns
sbb
gs
repnz
mov
mov
js
(bad)
aam
mov
sub
xchg
test
mov
stc
and
and
mov
fadd
dec
xchg
loope
loope
add
push
push
shl
inc
inc
scas
jb
add
pop
xchg
add
jle
jmp
loopne
jns
stc
retf
mov
or
retf
mov
(bad)
test
mov
push
adc
lds
xchg
sbb
into
xchg
scas
cli
test
movs
dec
movs
nop
or
mov
jl
mov
add
iret
sbb
mov
sbb
sbb
jge
hlt
mov
scas
sub
push
ret
add
jb
std
fisttp
iret
mov
push
dec
jb
ret
jnp
adc
add
pop
pop
out
or
xchg
ins
mov
test
in
and
(bad)
jle
xor
mov
ins
cmp
adc
sub
arpl
jmp
sub
test
dec
jle
dec
ins
fwait
(bad)
popa
or
cs
dec
sub
add
sahf
fstp
push
xchg
sub
test
aas
add
into
ficomp
pushf
jne
or
mov
adc
jbe
fst
out
cmps
rcl
ja
cmp
aad
test
pop
adc
test
mov
gs
test
mov
add
xor
jnp
adc
inc
daa
sub
fidivr
and
mov
push
int3
test
leave
in
in
pop
and
(bad)
and
dec
nop
fwait
jle
pop
or
(bad)
in
fsubr
in
int3
je
fstp
xor
inc
cmps
add
or
jle
int
aas
cmp
mov
out
test
fsub
sbb
dec
fld
sub
pop
sub
outs
int3
cs
push
cmp
fild
mov
in
cld
xchg
aad
icebp
pop
xchg
and
mov
jae
ret
inc
outs
aam
jno
mov
mov
and
fdivr
push
xchg
jne
shl
into
dec
aaa
sbb
fwait
sbb
into
stos
dec
adc
sbb
clc
(bad)
out
add
je
movs
mov
pop
ss
in
imul
mov
call
sbb
fisttp
loop
mov
dec
(bad)
xor
xor
mov
sbb
(bad)
dec
hlt
xchg
adc
cmp
ja
mov
sar
sti
sub
xor
and
inc
fimul
xor
xor
xchg
retf
test
lods
mov
into
daa
nop
push
rcl
mov
sahf
in
sti
aas
(bad)
ja
icebp
lea
and
mov
cdq
jno
xchg
jle
and
pop
jbe
rcl
sahf
aad
sub
ret
addr16
test
loop
imul
rcl
push
jmp
stos
outs
mov
pushf
xchg
push
sbb
daa
push
cld
int
xchg
sti
mov
jl
add
dec
jmp
adc
xor
jnp
and
pop
bound
mov
(bad)
sets
inc
jbe
or
add
ss
into
test
fs
int
sbb
iret
dec
stos
dec
cmc
push
push
leave
hlt
or
push
std
das
dec
pusha
lods
jne
add
mov
mov
and
test
and
into
dec
clc
mov
jbe
jmp
movs
add
rcr
jne
arpl
jecxz
xchg
lods
or
fstp
cmp
jle
test
pushf
out
inc
maskmovq
imul
shl
fxch
mov
test
cmp
jnp
das
dec
out
(bad)
cmp
cld
adc
out
sbb
xor
call
fcom
push
add
pushf
add
mov
add
ror
stc
iret
push
cmp
imul
xchg
adc
jbe
jo
addr16
pushf
cmps
mov
pop
mov
xor
pop
jl
in
mov
test
test
dec
cmp
jl
add
push
sbb
mov
mov
cmp
test
mov
pop
and
int3
pop
movs
cmp
jecxz
inc
pop
mov
adc
test
adc
sti
mov
adc
pop
ror
push
adc
bswap
scas
sub
cmp
scas
dec
jns
jne
add
int
mov
jge
rcl
cwde
ret
mov
cli
aaa
sbb
xchg
pusha
out
xor
cmp
cmps
xchg
mov
mov
sub
std
cli
lods
push
aas
cmpxchg
js
dec
les
mov
xor
dec
fwait
sbb
dec
push
out
scas
imul
fcom
inc
fisub
jns
mov
pop
call
sub
inc
and
(bad)
nop
leave
add
or
mov
xor
dec
aam
repz
das
imul
clc
mov
xchg
test
mov
imul
mov
sub
adc
movs
rdpmc
cmc
rcr
jbe
pusha
inc
jae
retf
dec
sub
shl
or
push
sahf
xor
pop
sub
xor
push
inc
or
mov
iret
(bad)
cmp
sbb
push
sbb
lock
mov
inc
mov
movs
sbb
sbb
cmp
dec
jecxz
add
jb
add
mov
add
push
adc
xchg
jp
cdq
ret
and
shl
je
loopne
shl
neg
mov
out
test
not
mov
and
icebp
cmps
pop
stc
retf
xchg
sbb
or
jmp
aaa
mov
cmps
cmp
sub
adc
xchg
push
dec
dec
fldenv
xchg
(bad)
xor
sbb
daa
mov
xchg
js
add
inc
cli
out
js
sub
pop
or
xchg
cmp
mov
mov
xor
scas
mov
xchg
sbb
arpl
inc
sub
jo
dec
aam
pop
add
clc
js
xchg
lea
gs
mov
sub
cmc
aas
xor
loop
jb
sbb
out
sub
repnz
into
xchg
ins
and
jge
sbb
mov
mov
mov
and
xchg
or
sbb
mov
mov
jno
ja
gs
jmp
cld
imul
aaa
ins
iret
jge
dec
add
jbe
adc
movs
cmps
inc
xor
ds
mov
sub
in
mov
mov
mov
js
jmp
cmp
cmps
jns
sub
retf
adc
fnsave
mov
enter
jo
jbe
shl
add
loop
xor
and
mov
movs
add
stos
xor
in
gs
mov
jmp
push
sub
cmp
sbb
push
xor
arpl
fdiv
add
push
retf
pop
gs
xor
std
std
jne
inc
pop
dec
add
mov
lea
dec
inc
push
cwde
ja
pop
add
cmp
mov
(bad)
push
(bad)
mov
or
or
dec
or
mov
clc
dec
ror
push
xchg
inc
adc
pop
fs
xchg
loope
in
jle
in
(bad)
retf
scas
push
frstor
mov
les
push
fucomp
push
js
lods
or
and
inc
gs
ficomp
pop
movs
sar
cmp
push
cmp
mov
xlat
aam
mov
pop
adc
into
and
hlt
popf
ss
movs
out
inc
in
inc
movs
jg
jmp
mov
mov
rcl
outs
add
add
pop
mov
fst
in
inc
ja
jecxz
mov
ret
les
mov
push
rol
inc
adc
adc
adc
mov
mov
add
sti
push
lds
cmps
leave
xor
ret
xor
je
push
sub
inc
loop
sbb
cmp
inc
in
dec
outs
mov
mov
daa
mov
in
loopne
xor
mov
sbb
movs
xchg
pop
push
loope
dec
push
(bad)
ficom
hlt
push
stos
gs
scas
or
push
stos
loop
cmc
sub
jge
rol
inc
sub
test
in
push
dec
fcomp
dec
loope
jg
icebp
xchg
adc
mov
or
pusha
cmps
and
adc
sub
sbb
push
aas
mov
movs
fisttp
fimul
pop
ins
bndstx
call
sbb
adc
(bad)
in
mov
pusha
inc
popf
push
ins
cmc
mov
inc
mov
shl
outs
mov
mov
mov
cmc
fadd
mov
(bad)
jge
pop
and
mov
mov
loop
out
mov
sti
ror
push
ss
mov
cmps
gs
pop
dec
sbb
and
sub
mov
push
add
lea
jl
xchg
(bad)
cmps
push
jns
jl
rcr
sti
jg
mov
pusha
push
and
mov
outs
cmp
and
pop
sub
shr
ds
imul
mov
mov
xor
popa
stos
out
xor
sub
cmp
outs
xor
jge
outs
push
mov
hlt
xor
ret
add
(bad)
lock
loope
(bad)
mov
sbb
cld
or
xor
ja
ss
dec
sub
push
or
dec
dec
mov
popa
(bad)
ins
gs
aad
ins
fisub
mov
xchg
mov
clc
adc
push
ss
mov
imul
add
cmps
xor
retf
das
repz
pop
(bad)
jecxz
pushf
mov
pop
(bad)
imul
push
inc
cmps
arpl
loope
sub
mov
repnz
stos
cdq
ins
arpl
pop
push
sub
data16
cmp
out
test
mov
das
pop
sbb
push
pop
aaa
xchg
bound
and
mov
xchg
add
test
push
pop
fisubr
stos
enter
and
int3
cmp
div
pop
inc
in
dec
fstp
cmp
push
je
push
cmps
sub
popa
xor
cmps
mov
mov
stc
fsubr
sub
adc
push
mov
je
in
stos
inc
fs
sbb
je
push
imul
mov
ja
mov
cmp
outs
mov
lahf
pop
ja
arpl
mov
(bad)
push
scas
lahf
ins
inc
sub
mov
inc
mov
repnz
dec
neg
mov
mul
scas
ja
jns
(bad)
pop
dec
jmp
mov
outs
xor
int3
cld
idiv
sbb
int
movs
(bad)
sti
ret
xor
inc
jno
lods
mov
jo
jno
jne
sbb
enter
test
push
add
retf
out
out
in
add
sub
mov
iret
mov
fsubr
pushf
adc
xor
dec
xchg
mov
stc
test
xchg
fadd
pop
dec
imul
cmp
adc
xchg
xchg
sub
int3
sbb
and
test
mov
cmps
outs
ja
ret
and
ss
or
(bad)
test
add
arpl
pop
fdiv
cmps
adc
cmp
push
retf
rcl
sub
(bad)
cmps
test
jo
add
inc
rcr
jl
or
(bad)
rcl
cmc
pop
mov
icebp
xchg
or
(bad)
dec
xchg
ins
xor
pop
dec
xchg
addr16
fst
or
pop
adc
adc
sbb
dec
out
rol
mov
xchg
pop
push
(bad)
sbb
sub
imul
and
popa
push
loope
jno
repnz
(bad)
mov
inc
nop
outs
fucomp
sbb
add
push
jb
pushf
cmp
ret
(bad)
sbb
test
adc
push
sub
outs
pop
stos
cmc
xor
nop
stc
out
in
lock
arpl
xchg
jl
cmp
dec
inc
mov
cmp
inc
popa
fs
xchg
push
lods
lods
and
ret
loop
push
dec
je
jmp
and
add
push
inc
and
aas
xchg
cld
clc
adc
cmc
or
imul
cmp
jle
jnp
pusha
imul
adc
(bad)
push
cmp
inc
fwait
mov
nop
inc
jnp
ficomp
loop
and
or
in
cmp
(bad)
iret
fiadd
scas
jl
lea
pusha
stc
xchg
push
leave
mov
outs
push
or
dec
adc
inc
cmp
xor
aam
aam
pushf
cwde
jmp
push
inc
sbb
pop
in
out
call
dec
or
stos
pop
dec
test
nop
mov
call
int
jg
push
lds
mov
or
retf
push
dec
xchg
and
xchg
fisubr
mov
mov
and
rcl
jge
cmp
inc
ss
xor
ja
rcr
in
xchg
repnz
retf
push
outs
cli
push
aam
inc
jnp
push
daa
in
or
or
sahf
sub
mov
(bad)
adc
mov
xor
xor
std
stc
test
pop
dec
fnsave
adc
std
dec
pop
pop
dec
les
add
jb
dec
mov
sub
pop
pop
fstp
ret
dec
adc
adc
jle
ins
inc
cmp
xor
lds
jno
ret
jb
add
push
xor
mov
fwait
cld
cld
jbe
sbb
neg
jg
pusha
jge
bound
clc
sbb
dec
sub
push
xchg
or
and
sbb
ss
sub
adc
xchg
inc
sbb
call
push
stos
stos
mov
sbb
push
push
int3
hlt
je
mov
pop
jb
cmp
adc
inc
adc
mov
in
mov
mov
mov
cmp
scas
xchg
adc
(bad)
out
add
pushf
mov
jne
inc
imul
add
mov
sbb
mov
jl
(bad)
out
pop
ja
ja
jnp
lods
sub
cs
xlat
aad
loope
pusha
outs
cdq
pop
daa
jle
lods
loopne
sbb
fadd
mov
ror
loopne
pop
addr16
pushf
mov
add
ins
pop
add
aam
(bad)
iret
es
in
add
xor
div
xor
das
and
popa
retf
retf
nop
sub
mov
pop
add
mov
or
inc
jb
out
lods
jg
sahf
inc
jmp
cmp
stos
push
pushf
ins
iret
pop
addr16
xchg
scas
(bad)
mov
adc
jmp
inc
push
fistp
push
mov
into
xchg
repz
movs
push
jecxz
adc
xor
inc
mul
hlt
mov
or
mov
ins
dec
sub
div
ja
rcl
push
push
jns
xchg
(bad)
lods
aam
lods
jmp
push
cmc
mov
sbb
adc
fdiv
sbb
mov
jg
leave
imul
stos
dec
in
cmp
sbb
jb
mov
mov
mov
adc
(bad)
pop
out
in
jp
shl
in
call
lods
push
outs
pop
cld
pop
pop
push
mov
xor
stos
call
push
int3
xchg
cli
js
fwait
dec
mov
fidiv
leave
cmp
es
loope
mov
gs
popf
outs
fs
cmp
out
cmp
leave
xor
sub
jbe
repnz
xchg
fstp
and
outs
push
mul
sub
enter
push
(bad)
(bad)
add
xchg
push
pop
imul
or
xchg
fstp
xchg
or
adc
adc
cmp
push
aaa
call
repz
jae
xchg
scas
jecxz
and
mov
inc
xor
call
in
lea
daa
dec
hlt
push
ja
mov
mov
or
push
pop
repz
xchg
hlt
pop
shl
mov
ins
neg
imul
xchg
pop
aaa
add
sub
out
inc
outs
lahf
lods
js
xchg
(bad)
mov
push
fld
sub
sub
mov
fst
mov
rcl
push
push
cmp
stos
jb
jg
mov
mov
add
out
lahf
and
and
mov
(bad)
xor
fsub
nop
icebp
sbb
jmp
or
daa
push
sbb
add
mov
(bad)
cmc
jb
push
or
retf
adc
cmp
test
cmps
and
je
data16
ror
aam
int3
pop
cmp
scas
std
cmp
aaa
add
movs
sub
nop
loope
xchg
daa
fstp
inc
pop
int
mov
cmp
nop
inc
dec
dec
dec
mov
and
(bad)
mov
xor
jge
push
or
out
jge
or
stos
push
sub
mov
dec
xchg
icebp
fmul
stc
mov
mov
dec
gs
psubb
stc
int
pop
pop
xor
pop
add
ror
fadd
enter
and
xor
imul
mov
mov
xor
arpl
outs
mov
xchg
imul
hlt
inc
in
cmps
inc
jl
cld
mov
adc
sahf
lods
mov
cld
outs
aad
fidiv
push
and
mov
jmp
sahf
add
sbb
outs
xor
imul
push
adc
scas
push
xchg
cmps
call
jp
lds
out
(bad)
fidivr
shl
repz
fisttp
cmps
mov
jecxz
fcmovnbe
inc
mov
out
leave
loopne
push
adc
cmp
and
jns
bswap
add
pop
popa
frstor
daa
in
dec
clc
adc
movs
pop
pop
dec
sbb
xchg
(bad)
pop
loop
neg
pop
in
xor
dec
mov
dec
push
retf
leave
in
enter
ret
adc
test
inc
(bad)
add
mov
add
cli
and
or
(bad)
cli
mov
addr16
lods
ret
ret
ds
stc
dec
sub
arpl
cmc
ss
jmp
mov
lods
mov
mov
xchg
sti
mov
fadd
popa
out
xor
aas
das
jne
test
adc
sub
push
outs
cwde
mov
bound
mov
arpl
sub
push
fisub
mov
cdq
mov
cmp
adc
out
cmp
add
(bad)
movntq
es
test
mov
push
dec
imul
scas
adc
lahf
push
mul
and
jnp
mov
movs
(bad)
sbb
je
repz
fisubr
outs
call
fs
fst
mov
sbb
imul
adc
(bad)
cmp
test
mov
btr
sub
lock
push
adc
jne
fidiv
lock
(bad)
shl
mov
pop
push
sub
add
xrelease
fucomip
bound
mov
out
inc
pop
push
mov
aas
xchg
push
mov
cmps
mov
lahf
mov
xor
jmp
mov
popf
icebp
bound
out
xchg
sub
cmp
inc
cmp
movs
jmp
stc
out
jp
push
int3
pop
or
and
cmp
inc
fstp
fnstsw
lahf
cmc
stos
or
test
xor
lahf
aad
pop
push
push
inc
int3
cmps
cmp
xchg
cmps
nop
push
push
shl
xchg
idiv
pushf
icebp
mov
dec
mov
xchg
adc
dec
repnz
pop
mov
push
xchg
scas
pop
les
enter
pop
jne
mov
sbb
sbb
xchg
arpl
(bad)
std
jmp
popa
pop
mov
xor
stos
dec
sbb
(bad)
neg
adc
data16
inc
inc
(bad)
sahf
es
(bad)
and
mov
push
push
mov
push
and
movs
in
adc
scas
and
aaa
loopne
sti
mov
sbb
lea
xchg
sub
fidiv
clc
hlt
dec
nop
mov
(bad)
cli
inc
push
lea
push
xor
inc
cli
loope
scas
aad
adc
inc
rcl
and
aad
jmp
jno
pusha
jb
pop
dec
cli
xchg
dec
(bad)
sbb
dec
dec
mov
cmp
mov
leave
call
ins
mov
test
enter
xchg
or
push
jmp
stc
rcl
jns
xor
adc
xchg
(bad)
(bad)
aad
(bad)
test
mov
in
mov
or
in
and
cdq
mov
mov
push
in
xchg
push
lods
pop
cli
xchg
loop
xor
push
and
test
push
fsubr
push
nop
fdivr
mov
xor
pop
jae
popa
xchg
pop
xchg
ret
fs
inc
mov
mov
outs
xchg
xor
data16
add
cmps
sub
dec
cdq
sti
add
dec
jo
pop
sub
test
or
or
push
fmul
dec
imul
dec
(bad)
pop
dec
xor
rcr
retf
and
sbb
lods
cmp
fcomi
jae
xor
cmp
lods
out
dec
popf
js
sbb
mov
imul
aam
fist
mov
sar
add
das
add
test
lods
bound
jg
dec
repnz
cmp
inc
mov
xchg
inc
push
(bad)
cmps
adc
aam
or
mov
stc
mov
pop
loopne
je
jae
sbb
(bad)
fidivr
mov
inc
fnstsw
cld
ins
aam
push
in
pusha
cmp
jne
(bad)
fnstsw
fs
sahf
arpl
xlat
inc
cmp
mov
jl
xor
jb
inc
mov
cmp
mov
jge
jmp
xor
jl
sub
cdq
pop
mov
mov
sbb
push
hlt
scas
dec
xchg
iret
cld
mov
std
dec
add
outs
push
push
push
jno
mov
xor
pop
jmp
jbe
call
sub
sub
(bad)
xchg
or
sub
dec
sbb
dec
add
mov
(bad)
mov
enter
and
adc
into
mov
mov
aas
ret
push
dec
add
fnsave
gs
push
inc
daa
ss
mov
shl
jl
cmp
ss
out
loop
repz
clc
cld
dec
mov
jno
mov
out
or
mov
xchg
push
xor
push
stos
dec
dec
ret
and
adc
bound
sub
loope
mov
add
mov
xchg
mov
mov
dec
mov
jo
movs
js
rcr
jns
jg
mov
ja
mov
popa
sbb
and
jne
call
fstp
xor
cmp
int
inc
xchg
repnz
pop
xlat
sub
cmp
pop
add
and
outs
mov
jmp
cmp
xchg
jge
mov
jo
test
mov
lahf
xchg
imul
pop
push
(bad)
stos
fmul
cdq
mov
cmp
adc
dec
add
add
mov
leave
mov
test
dec
sbb
in
fs
mov
hlt
stos
scas
inc
cmp
jle
fmul
jae
mov
lea
jbe
dec
push
push
push
jne
adc
fiadd
call
xor
adc
push
enter
test
xor
outs
mov
mov
xor
cwde
mov
cmp
fcom
mov
dec
xor
mov
daa
fwait
add
sar
clc
xchg
loopne
inc
ds
jae
test
test
fsub
lds
pop
ds
jo
lds
dec
xchg
dec
in
xor
mov
(bad)
out
das
gs
push
sub
xchg
fadd
pop
test
ja
and
sbb
sti
sbb
addr16
dec
mov
sbb
fst
je
pop
loop
mov
popf
xor
cmps
loope
ja
pushf
(bad)
shl
retf
push
lock
or
jne
rol
mov
lock
adc
cmp
sbb
setp
outs
and
std
jge
cmp
sbb
loope
cdq
in
ret
mov
xchg
add
pushf
xor
pop
push
pop
jle
inc
add
loope
scas
sub
sbb
inc
fsubp
or
int
add
xor
rol
jg
sbb
sub
jo
dec
pop
jle
imul
push
in
xchg
jb
and
aad
popa
cmps
jnp
addps
imul
and
and
imul
fistp
icebp
inc
lea
mul
fistp
shr
or
push
ins
pop
cmp
into
jp
mov
or
mov
cld
(bad)
(bad)
pop
(bad)
fadd
iret
cmc
movs
jp
btr
cmp
aad
inc
xchg
bnd
nop
and
aaa
mov
stos
dec
dec
sub
(bad)
or
mov
rcr
jl
add
pushf
mov
and
xor
mov
out
jmp
mov
xor
dec
push
push
daa
xchg
dec
imul
mov
pop
xor
and
shl
xchg
stos
add
ins
push
mov
(bad)
mov
sbb
push
push
jecxz
mov
aaa
call
pop
push
loope
mov
xor
pop
ins
add
scas
add
mov
int
pop
int
(bad)
xor
push
out
or
sub
or
push
or
ror
jmp
cmp
and
es
fldcw
shr
mov
es
test
adc
stc
pop
xor
cmp
mov
in
push
jl
clc
xor
inc
cmp
repz
pop
int3
mov
and
aad
add
int
inc
inc
or
xor
dec
mov
jmp
xlat
fimul
dec
call
int
add
shl
dec
adc
lods
data16
pop
adc
fwait
pop
cli
out
sbb
mov
mov
dec
ins
fcomp
mov
icebp
iret
or
cmps
ja
jnp
push
xchg
clc
mov
cmp
mov
xor
jbe
cwde
sbb
push
sbb
cld
loope
mov
repz
ins
and
outs
imul
cmc
in
mov
add
and
jns
movs
fdivr
out
add
xor
(bad)
xchg
or
xor
or
pop
jne
movs
mov
or
jne
aad
sub
je
mov
xchg
and
fnstenv
mov
in
or
cmp
scas
fisttp
pop
movs
lds
jecxz
(bad)
in
adc
bound
push
xchg
dec
mov
pop
xchg
push
and
cmps
mov
cmp
mov
mov
mov
aam
push
enter
push
mov
push
xchg
daa
or
cmp
fwait
cmp
pop
cmps
imul
fadd
dec
dec
imul
add
push
js
cmps
sbb
pusha
dec
and
inc
cdq
mov
sub
cmp
cmc
pusha
test
sbb
inc
imul
adc
das
or
fmulp
dec
xor
sub
or
push
sub
jb
int3
aas
cs
inc
inc
add
adc
cwde
imul
dec
jp
push
in
in
in
cmp
pop
mov
test
sbb
movs
sub
mov
xor
xchg
(bad)
data16
pop
retf
push
xchg
sbb
and
(bad)
(bad)
xchg
add
mov
push
push
and
lods
sub
test
scas
sbb
xchg
push
lock
jb
push
mov
pop
mov
rep
aam
popa
sahf
test
sub
imul
rcl
jle
mov
ret
push
push
cld
std
test
aaa
cmps
dec
ins
fwait
pop
sub
add
mov
add
adc
sub
mov
adc
pop
mov
pushf
mov
sub
mov
xchg
in
call
stos
test
dec
pop
sbb
add
pop
retf
mov
pop
rcr
cmp
add
or
(bad)
ficomp
fdiv
jl
pop
mov
aad
test
inc
mov
pop
hlt
inc
clc
push
and
push
fwait
js
fnstenv
mul
push
sbb
mov
dec
ret
push
push
push
mov
rol
in
out
lods
adc
mov
bound
jb
fld
sbb
icebp
fadd
sti
test
js
jae
xor
stos
jle
sub
test
mov
cmp
adc
pop
or
retf
jnp
push
ins
inc
je
int
cmps
dec
scas
adc
int3
sub
cmp
out
inc
jo
fsubr
jno
xor
arpl
mov
daa
aas
xchg
jl
lsl
pop
sub
xchg
(bad)
cmc
inc
mov
sbb
dec
pop
mov
das
sub
cmps
cmp
cmp
sahf
add
cmc
dec
ins
int
xor
sbb
pop
lods
cdq
call
cwde
xchg
stos
popa
retf
mov
pusha
adc
lahf
daa
rol
cmp
adc
popa
add
sbb
clc
iret
mov
xchg
scas
(bad)
fdivp
shl
fstp
ror
sbb
(bad)
repnz
in
outs
add
or
out
fst
icebp
xor
jne
inc
ja
ret
in
cwde
fdivr
adc
xchg
(bad)
sbb
cmp
jl
retf
xchg
and
scas
cdq
xchg
test
mul
push
fsubr
test
mov
cld
sahf
rcr
mov
fiadd
ret
mov
in
xchg
inc
xor
and
cs
test
push
jbe
nop
lahf
lds
jge
jmp
iret
push
adc
call
stos
lods
ret
pop
repnz
cmp
ss
cmp
dec
or
inc
clc
lods
rcl
imul
jmp
ins
mov
out
cmp
add
pop
ins
popf
mov
mov
fnstcw
int
fbstp
add
cmps
sbb
fst
out
inc
test
shl
sbb
dec
les
dec
enter
lea
or
js
add
in
test
push
sub
pop
mov
mov
jg
sbb
lahf
ins
jb
push
retf
or
and
outs
adc
jb
movs
mov
fst
test
adc
sub
sbb
adc
aam
mov
stos
inc
push
mov
arpl
pop
cld
sub
xor
mov
outs
iret
add
inc
pop
aad
shl
adc
adc
ret
rcl
mov
and
stos
jns
fwait
or
jnp
daa
jb
(bad)
inc
push
sbb
jmp
and
cmc
lea
add
jns
cmp
adc
mov
push
jl
add
cs
cli
add
push
outs
pop
addr16
add
(bad)
out
nop
cmps
lods
bound
cmp
or
add
repnz
enter
xor
mov
mov
push
push
bound
pop
inc
and
jmp
arpl
ss
arpl
xor
dec
(bad)
cmp
dec
adc
mov
std
je
shl
lods
int3
(bad)
ss
sbb
xchg
in
jnp
repz
out
cdq
ins
fadd
retf
rcl
out
cld
dec
jecxz
jae
scas
enter
in
xchg
lahf
jb
or
dec
sbb
in
rcl
(bad)
xor
push
jmp
sbb
inc
jo
fidivr
cld
mov
xor
ficom
sar
das
push
lods
cmp
(bad)
scas
sub
sbb
hlt
or
mov
call
jb
test
xor
push
or
stos
xlat
mov
icebp
dec
sub
mov
adc
rcl
push
imul
or
sub
xchg
ss
push
jecxz
push
push
push
fadd
or
les
scas
pushf
out
pop
std
dec
jo
cld
(bad)
mulps
sub
jb
cmc
pop
ins
mov
push
lea
dec
xchg
(bad)
xchg
pop
test
iret
dec
je
fld
push
test
add
or
adc
dec
mov
fsubr
fwait
and
jbe
aam
mov
pop
js
fdivr
cmp
loop
xor
xchg
mov
shl
fiadd
pop
inc
jae
ins
outs
cwde
sbb
xchg
ja
pop
push
int3
inc
cmc
pushf
sub
test
out
xor
cli
push
repz
lahf
loopne
or
mov
add
inc
sub
sub
sub
inc
add
(bad)
or
dec
sbb
xchg
pop
daa
or
gs
mov
shl
xor
cmp
mov
adc
sbb
xchg
push
outs
ficomp
sub
ins
std
pop
stc
adc
ficomp
mov
sahf
sbb
xchg
dec
mov
sub
inc
dec
fnsave
data16
shr
push
sti
int
dec
sub
push
dec
push
hlt
arpl
pop
test
movntq
jbe
cdq
push
ror
mov
sbb
stc
sbb
jle
fstp
sbb
or
mov
stc
adc
xor
sqrtps
ror
jg
or
add
fs
scas
call
xchg
cmp
push
cmp
pop
imul
rcl
cli
xchg
sbb
call
adc
rep
dec
add
adc
mov
dec
or
mov
or
mov
fst
pusha
movs
psrlq
push
mov
iret
in
pusha
inc
aas
pusha
xchg
jmp
add
adc
push
in
dec
cmp
dec
mov
sbb
sbb
loop
xor
into
cwde
mov
push
pushf
or
sar
gs
aam
pop
fs
xor
lods
sbb
xlat
mov
icebp
out
stc
repnz
dec
sub
push
cs
rcl
adc
and
push
adc
or
stos
(bad)
movs
cmp
add
cli
ins
fcmovnbe
add
punpckhbw
cmp
mov
loope
out
cwde
mov
in
and
xchg
bound
in
or
mov
outs
(bad)
mov
xchg
mov
cmps
adc
xchg
mov
mov
retf
ret
xchg
jmp
jae
push
ror
pop
dec
dec
add
(bad)
loopne
enter
and
(bad)
repz
fidiv
sti
imul
jle
pop
pop
ds
ja
jae
add
enter
(bad)
sti
les
sti
inc
cli
mov
in
(bad)
xor
pop
fisttp
mov
fidivr
inc
loopne
movs
sub
inc
push
xchg
ucomiss
mov
and
scas
jmp
and
call
(bad)
aad
mov
popf
sub
inc
push
std
add
xchg
and
inc
cld
in
mov
addr16
ja
dec
mov
xchg
pop
ins
add
adc
sbb
popa
retf
pop
xor
cld
hlt
or
scas
xor
out
aam
(bad)
(bad)
and
cmps
ss
inc
rol
or
mov
test
push
lods
dec
sbb
fldcw
dec
dec
cmp
call
xchg
fstp
sub
mov
movs
xor
mov
push
or
jg
jecxz
mov
jmp
xchg
daa
sti
es
out
jmp
sub
jmp
push
bound
lods
xchg
icebp
xor
push
scas
(bad)
scas
js
adc
(bad)
leave
pop
cmp
mov
mov
and
add
out
in
xchg
push
xor
xlat
add
fild
or
jns
test
xchg
cmps
xchg
stos
ret
or
in
pop
jmp
push
stc
cmp
cmps
mov
ss
push
ss
mov
fnstenv
push
test
mov
imul
inc
mov
or
aas
xchg
fs
mov
adc
add
adc
ret
push
loope
stos
push
jmp
cli
daa
xchg
stc
add
mov
cs
add
into
in
sbb
cmps
xchg
test
cmp
cmp
hlt
sahf
in
inc
es
out
adc
scas
test
and
mov
sbb
mov
int
rcl
pop
jmp
(bad)
ret
je
lods
cmp
loope
sbb
xor
test
push
nop
scas
xor
mov
rcl
inc
mov
inc
mov
and
jbe
aad
ja
sahf
mov
mov
dec
xchg
ins
mov
jl
lock
sar
jb
jmp
inc
mov
xor
and
mov
les
addr16
mov
movs
leave
(bad)
stos
mov
jle
gs
aam
fs
or
xchg
sbb
or
fadd
movs
loope
adc
sbb
pop
xor
inc
in
cmps
mov
int
cmps
mov
or
jp
neg
cwde
pop
test
lods
sbb
push
shl
lock
add
cli
jns
rcr
popf
es
push
lahf
outs
into
bound
lods
add
(bad)
cmc
into
movs
fcomp
push
pop
jmp
out
push
ror
inc
add
add
pop
ret
inc
mov
mov
dec
sub
push
push
sub
mov
call
sbb
xchg
neg
or
out
(bad)
out
(bad)
iret
and
jnp
mov
add
sti
dec
iret
out
into
das
loope
adc
mul
adc
cmps
add
stc
xor
call
jg
in
rol
push
test
pop
loopne
cwde
dec
sub
mov
addr16
push
push
sbb
jno
lods
lahf
dec
retf
out
mov
sub
sub
mov
int
repnz
cmp
sub
aam
ror
dec
sub
fld
adc
lods
jne
mov
and
adc
rcr
jbe
xlat
sbb
and
(bad)
jecxz
pusha
push
and
sub
rcr
inc
ficomp
mov
aam
lahf
ret
sbb
adc
jmp
dec
cs
sbb
mov
bound
mov
mul
lock
push
sub
jns
cwde
jmp
stc
or
mov
xchg
cwde
bound
fld
out
iret
jae
mov
shr
mov
mov
pop
add
adc
or
loope
in
mov
popa
test
push
adc
mov
clc
lds
mov
inc
ret
fnstsw
and
adc
xchg
mov
inc
jp
pushf
ficom
jg
dec
out
repnz
movs
loop
fisubr
jmp
cwde
ror
repnz
mov
jne
mov
mov
add
cs
in
add
outs
jae
inc
(bad)
sbb
dec
bound
mov
test
idiv
dec
das
adc
fstp
test
test
or
retf
orps
inc
dec
pop
inc
xlat
test
rol
arpl
xchg
mov
mov
pop
cli
cmp
and
pop
jo
add
push
clc
push
(bad)
nop
push
add
jae
push
fs
mov
dec
cmp
(bad)
mov
jmp
lahf
mov
sbb
mov
add
adc
js
inc
jno
test
xor
xchg
jo
out
inc
xor
cmp
pop
xchg
add
jl
jbe
cli
pop
(bad)
pop
mov
push
cmp
adc
cs
inc
mov
xor
in
outs
scas
and
xchg
(bad)
lods
and
ins
inc
xlat
jl
int
aad
push
in
int3
cmp
cmp
mov
cmp
fisub
adc
dec
add
ins
jnp
jecxz
shr
scas
jbe
sub
push
mov
in
xor
dec
ret
cli
call
fild
in
ret
jl
test
dec
mov
and
jle
jge
dec
loope
adc
cmp
imul
xchg
ds
xchg
fimul
cmp
cmp
pusha
inc
xor
push
into
out
sti
test
xor
jb
fwait
aad
es
repnz
pop
jb
fdivp
aaa
test
add
push
cmp
xor
out
cmp
inc
movs
dec
aas
cmp
pop
jp
pusha
scas
add
sar
fimul
lods
outs
lock
fmul
pop
cmps
or
dec
push
adc
cmp
sbb
jb
jno
mov
jl
int3
xchg
or
adc
cmp
dec
cmps
sub
xor
sidtd
ss
xchg
mov
xor
sbb
push
pushf
fwait
mov
popa
call
cmps
cld
out
(bad)
and
les
xor
jo
clc
mov
jl
mov
fist
addr16
jbe
ins
arpl
jg
or
jp
and
scas
das
into
add
in
int3
stos
jo
xchg
loopne
add
rcl
inc
out
sub
mov
sub
inc
repnz
mov
xor
dec
out
icebp
pop
out
cmps
shr
(bad)
push
loop
jns
mov
(bad)
aad
mov
or
rcl
movs
mov
and
test
and
sbb
out
xchg
stos
jmp
sbb
in
lock
popa
rol
lods
and
add
cwde
mov
(bad)
mov
pop
mov
xchg
sti
call
into
cmp
rcr
sar
mov
dec
vmovntdqa
lods
stc
sub
out
test
or
sbb
inc
add
push
outs
dec
cs
test
cmp
add
test
outs
dec
sbb
and
xor
sub
sbb
cwde
push
cmp
test
jae
push
push
in
scas
lock
fiadd
scas
lea
imul
dec
ins
xor
xor
jecxz
xchg
sahf
pop
pop
les
bts
xor
out
stos
cs
and
sbb
mov
pop
mov
mov
jae
mov
repz
mov
or
pop
rcr
cmp
xchg
lahf
ds
(bad)
lods
in
call
xchg
jnp
adc
out
mov
rcr
sub
mov
psllq
imul
out
sub
(bad)
loopne
call
dec
push
sti
add
daa
(bad)
retf
es
xchg
add
push
xchg
mov
pusha
loopne
sahf
std
xchg
or
call
adc
push
cld
popa
inc
push
dec
xchg
out
ret
mov
shl
aaa
xlat
ja
aaa
inc
loope
retf
sub
mov
fsubp
jnp
xor
aam
pop
pop
inc
cwde
aaa
repz
and
inc
movs
(bad)
pop
mov
fs
or
and
sbb
mov
push
repz
shl
add
mov
xor
iret
jae
pusha
mov
mov
add
mul
imul
cmp
ss
test
sub
or
(bad)
adc
adc
das
mov
pop
push
push
pop
inc
push
shl
sbb
out
or
icebp
(bad)
repz
or
out
data16
test
inc
mov
mov
cmp
(bad)
ss
mov
sub
xchg
cmp
jmp
xor
sub
addr16
mov
adc
adc
push
mov
pop
les
loope
leave
push
push
mov
adc
and
out
in
sbb
(bad)
pop
pop
or
mov
push
mov
sub
ror
dec
push
xchg
cli
pop
nop
movs
mov
or
add
repz
xor
cs
pop
loopne
in
push
and
and
pop
in
retf
adc
cmp
xor
xchg
pop
dec
imul
cmp
jb
push
(bad)
in
fwait
push
dec
xor
sbb
lahf
lahf
ret
imul
fmul
cld
jns
and
call
or
dec
lds
jl
sub
lods
jl
push
adc
inc
push
pop
stc
add
pop
ds
popa
daa
xor
(bad)
or
ja
stos
or
es
add
in
sub
or
push
cwde
outs
fstp
xchg
xchg
pop
jne
cmps
adc
ror
jne
pop
sub
mov
jns
adc
scas
loop
pop
adc
ficom
loopne
pop
rcr
mov
movs
adc
lods
les
mov
add
push
lea
in
mov
xor
and
jnp
loope
mov
fimul
pop
dec
shr
call
es
jmp
push
mov
mov
jge
pop
mov
(bad)
stos
gs
push
enter
icebp
hlt
test
loopne
retf
push
push
fcmovnb
pop
sbb
das
cmp
popa
cmp
lahf
mov
adc
popf
and
ror
mov
sub
mov
fmul
push
pop
fiadd
stc
or
(bad)
push
jp
fild
sub
rcr
scas
dec
cmc
jne
js
adc
push
jmp
out
mov
shl
xor
lds
out
in
and
arpl
cmp
retf
iret
jg
push
push
push
ror
add
gs
adc
add
lea
gs
outs
ja
loope
sbb
pop
pushf
pop
mov
xchg
push
mov
xor
jp
stc
fdiv
add
shl
pop
in
jb
sbb
mov
out
lock
icebp
cwde
stc
outs
shr
fdivr
xbegin
mov
mov
mov
leave
dec
and
mov
bound
cmp
inc
or
fcomp
sahf
retf
out
dec
dec
out
jno
mov
lahf
sub
sar
push
push
mov
(bad)
jmp
lock
cld
ror
add
shl
cmp
into
add
xor
icebp
fcomp
dec
pop
repz
int3
pop
jg
jge
push
repnz
adc
jl
fstp
sub
add
adc
pop
or
fld
inc
jo
xchg
cmp
bound
(bad)
or
add
jne
fs
mov
neg
cmp
add
cmps
stos
adc
or
mov
mov
inc
inc
fwait
cmp
mov
xor
or
pop
mov
dec
jecxz
hlt
jmp
imul
jp
retf
inc
ss
loopne
ss
ja
dec
pop
scas
and
test
daa
xchg
movs
xor
push
jb
out
sti
mov
rol
add
(bad)
jne
xchg
out
cs
jmp
mov
call
cwde
int
fidiv
dec
in
int
shl
sar
mov
rcl
popf
inc
cmps
retf
rcr
test
dec
lds
ja
(bad)
xor
mov
push
and
jno
mov
lods
xchg
stos
das
mov
pop
xor
or
ror
pushf
lods
clc
cmp
pop
data16
js
sar
fdiv
ins
pop
vmread
jno
pop
icebp
clc
(bad)
adc
(bad)
in
xor
repnz
test
xor
pop
in
add
mov
sub
cmp
test
inc
sbb
sahf
pop
add
lods
in
je
loope
push
jle
div
mov
xor
bound
lahf
dec
pop
retf
jae
rol
int
jmp
repz
mov
into
clc
xchg
xor
fnsave
mov
jnp
call
test
sub
pop
int
xor
inc
fwait
mov
shl
add
dec
jge
inc
lods
xchg
dec
jecxz
cs
sbb
std
pop
ins
int3
mov
repnz
xor
push
add
cmp
ficom
test
adc
lods
outs
push
mov
xchg
mov
jb
rcr
loopne
lods
adc
mov
xchg
into
inc
or
in
mov
ret
or
ret
(bad)
dec
movs
add
inc
jmp
rcr
or
push
sar
ror
aad
xchg
daa
cmc
nop
or
inc
ret
ins
inc
loop
mov
mov
or
pop
fsubr
and
icebp
and
dec
loopne
mov
movs
pop
add
aam
adc
push
ins
add
mov
sbb
cld
addr16
pop
push
xor
jge
ror
push
cmp
clc
cmps
sbb
bound
jl
jbe
xor
xor
fsub
movs
aas
hlt
shl
pop
add
cdq
dec
cmps
xor
jb
movs
jg
iret
sub
ret
dec
jne
sbb
jno
call
xlat
rcr
xchg
pop
xchg
and
and
inc
cmp
adc
je
cmp
push
stc
aas
movs
or
call
push
mov
xor
icebp
jae
jmp
mov
and
psubb
push
cmp
je
pusha
js
adc
(bad)
repnz
shl
mov
mov
js
ins
cli
or
ins
fistp
(bad)
hlt
(bad)
sbb
jl
mov
sub
iret
cwde
xchg
test
cli
fidiv
pop
pop
enter
fistp
fwait
sub
or
dec
popf
movs
pop
cmp
dec
sub
sbb
pop
jo
and
pop
mov
rol
out
xchg
nop
jnp
shl
cdq
loope
mov
inc
aad
mov
mov
push
jecxz
dec
cld
adc
or
mov
push
mov
imul
mov
mov
or
sub
(bad)
jo
rcr
adc
dec
rcl
loopne
hlt
pop
cmp
push
xor
(bad)
out
sar
add
pop
popf
cmp
(bad)
xor
mov
lods
mov
test
shl
cmc
inc
cmp
pop
xor
retf
dec
(bad)
outs
(bad)
sti
mov
or
sub
int
add
and
push
stc
or
int
(bad)
xor
fwait
adc
push
and
nop
repz
mov
(bad)
(bad)
mov
push
das
push
push
ret
pop
movs
(bad)
fld
imul
std
ds
xor
adc
cwde
fisub
cdq
mov
dec
and
mov
test
out
push
cmp
mov
shr
fdiv
sub
into
test
int
jns
jae
sbb
pop
xchg
cmps
retf
cwde
les
dec
test
fsubr
mov
cmp
adc
dec
add
adc
sbb
leave
dec
jns
mov
mov
daa
sti
movups
clc
pop
test
lahf
jbe
data16
shr
int3
mov
pusha
out
cmp
xchg
xchg
jle
or
jbe
retf
xchg
jnp
and
repz
sbb
pop
js
mov
inc
inc
dec
adc
sahf
lea
cwde
daa
jg
mov
ss
aas
fdivr
outs
sbb
mov
mov
and
mov
xchg
hlt
push
push
push
mov
fisub
push
push
mov
fcom
std
xor
sbb
clc
push
call
imul
or
inc
push
aaa
pop
pop
mov
pop
dec
add
fisttp
lahf
push
adc
test
pop
add
fucomip
imul
retf
les
imul
fsubrp
(bad)
xchg
mov
scas
inc
aas
popa
push
adc
mov
gs
jo
jmp
outs
jge
rcl
push
(bad)
aaa
dec
jmp
jnp
xor
(bad)
and
loopne
(bad)
ja
icebp
enter
adc
ret
mov
aad
add
popa
add
inc
pop
mov
repz
in
popa
(bad)
outs
inc
xor
cmp
push
sbb
push
push
lds
sbb
mov
sti
outs
repz
mov
xchg
aad
pushw
(bad)
dec
pop
lahf
pop
jns
mov
popf
out
test
xchg
call
cmp
das
mov
lods
sub
movs
xor
dec
jne
or
jns
pop
movs
mov
das
inc
stc
fdiv
inc
aaa
push
aad
or
rcr
(bad)
mov
sub
(bad)
imul
pop
jmp
mov
jno
mov
adc
xor
pop
shl
and
pop
pop
adc
pusha
or
mov
neg
scas
js
aad
push
jg
dec
push
faddp
xchg
cdq
fldcw
cmp
and
retf
mov
stos
lods
lods
pop
mov
mov
dec
shl
mov
imul
call
push
int3
or
lods
inc
repnz
lods
mov
sub
dec
cmc
push
movs
test
mov
cmp
and
cmp
push
iret
xchg
jecxz
mov
cwde
jmp
mov
leave
xlat
retf
mov
stos
out
cmp
scas
adc
stos
xor
scas
(bad)
or
in
popf
jmp
data16
cmps
cli
pop
addr16
(bad)
pushf
fimul
in
pusha
out
stc
add
fiadd
mov
jns
jmp
inc
mov
in
out
jmp
dec
(bad)
hlt
xchg
fnstcw
mov
xor
sub
test
push
aas
outs
dec
sub
int3
ficom
js
iret
mov
outs
fs
xchg
addr16
test
mov
dec
(bad)
adc
push
fisub
jno
mov
call
(bad)
iret
cmp
mov
test
push
ret
jo
jo
pop
push
mov
out
push
cmp
pusha
cmp
inc
xchg
neg
sbb
hlt
xor
sti
and
es
jbe
hlt
jg
stos
leave
and
hlt
sub
retf
inc
sbb
push
es
lods
test
(bad)
push
outs
cs
clc
sbb
mov
ret
inc
inc
test
xchg
adc
gs
div
push
dec
(bad)
addr16
clc
into
dec
setb
fs
jb
jp
imul
adc
popf
jg
dec
add
shr
pop
jno
cmp
adc
sub
sbb
xor
sub
mov
pop
add
scas
aad
cmp
shl
inc
mov
push
xor
pop
dec
fadd
mov
jmp
xchg
out
sti
aaa
call
mov
inc
nop
jl
dec
repnz
sbb
jb
mov
adc
lea
jns
adc
enter
jmp
adc
shr
in
cld
xor
jl
jbe
fcomp
(bad)
ins
fisubr
push
add
mov
or
fisub
sbb
pop
mov
ds
inc
jmp
adc
push
inc
fcmovbe
inc
add
loop
test
popf
or
or
out
fistp
or
dec
mov
jo
xchg
dec
sbb
repnz
outs
(bad)
and
adc
dec
push
test
inc
xchg
jmp
sahf
jg
mov
stc
je
fwait
inc
mov
fnclex
xchg
lods
mov
in
inc
ret
fld
mov
pushf
enter
or
cmp
inc
pop
and
sbb
xor
xchg
cmp
ret
mov
or
cdq
sahf
jmp
jne
pop
xor
mov
sbb
(bad)
sbb
ret
push
push
test
ja
call
dec
das
(bad)
mov
fcos
adc
stos
sti
pop
jns
call
cmp
mov
sub
jo
ins
dec
lods
xchg
lock
lds
push
jmp
add
into
leave
sub
inc
addr16
(bad)
rcr
mov
call
mov
pushf
and
aam
ficomp
out
or
mov
fmul
stc
ud0
jmp
loope
sbb
mov
movs
xor
test
dec
pop
aad
adc
adc
inc
cmp
sub
push
jg
pop
inc
sti
shl
push
cmp
aam
add
test
cwde
cdq
add
cmp
jno
dec
js
jb
pop
pop
jb
cmp
imul
dec
sub
and
leave
mov
scas
test
push
retf
fs
sti
imul
mov
and
xor
cmps
dec
cmps
mov
test
gs
pop
jmp
xor
jno
add
dec
lods
dec
mov
fsub
pop
inc
jmp
add
cli
call
jne
push
call
cdq
sar
pop
inc
ror
and
sub
push
shl
push
add
jae
aaa
ja
fldenv
sub
pop
aad
in
pop
imul
lock
shr
in
xchg
pop
sti
mov
inc
add
dec
mov
lods
fcos
adc
jp
or
pop
das
retf
cmc
(bad)
or
popa
xor
inc
sar
inc
cmps
push
test
inc
mov
push
pop
add
push
push
mov
pop
xchg
push
push
nop
fsubr
call
(bad)
out
jnp
stos
addr16
mov
mov
mov
iret
cmp
xchg
inc
sbb
sbb
test
dec
mov
mov
sbb
test
pop
inc
cmp
(bad)
inc
or
inc
leave
pop
adc
pop
mov
add
xlat
retf
inc
sbb
pop
inc
xor
pop
mov
sahf
sbb
sbb
in
shl
push
pop
idiv
in
out
xchg
pop
lods
xor
sub
cld
out
fucom
pop
xchg
adc
test
retf
or
xlat
inc
xchg
(bad)
pop
scas
inc
push
clc
fisubr
mov
in
sar
js
jmp
push
test
fst
enter
inc
xor
lock
fld
hlt
pushf
jp
out
jno
inc
jb
rol
xor
gs
not
add
adc
fs
xor
jo
(bad)
repnz
jne
mov
test
or
sub
mov
int
outs
jns
arpl
sti
sbb
pop
and
loop
add
movs
pop
push
cld
jb
or
dec
in
maxps
cmp
mov
and
jl
inc
das
(bad)
lds
cs
xlat
cmp
sbb
xchg
daa
(bad)
in
inc
cld
ins
fimul
rcpps
aaa
in
cmps
and
stos
sub
inc
scas
lock
jle
leave
add
pop
sbb
pop
jg
rol
iret
call
mov
push
mov
(bad)
mov
cmp
gs
sub
jmp
xchg
and
mov
sysexit
mul
inc
mov
adc
out
repz
mov
scas
push
mov
sbb
inc
ja
mov
push
idiv
mov
iret
dec
fstp
aaa
outs
xchg
cld
pop
jmp
lds
xor
jle
addr16
add
call
push
rcr
pop
call
mov
adc
mov
mov
xor
lock
adc
and
shr
popa
(bad)
dec
in
into
fstp
in
mov
test
scas
sub
cdq
or
sbb
inc
imul
xor
pusha
cmp
fcmovbe
rcr
mov
mov
add
scas
xchg
pop
xor
fadd
jp
retf
sub
stos
xchg
fnstcw
mov
shl
repz
push
and
in
mov
mov
and
clc
jle
retf
cmp
aas
in
or
pop
pusha
bswap
sbb
adc
out
add
sbb
jnp
ins
jb
jle
adc
xchg
xor
sbb
retf
xchg
cmps
(bad)
add
xchg
shl
jmp
outs
mov
adc
sbb
nop
add
adc
cmps
enter
stos
(bad)
jbe
jnp
call
inc
out
and
inc
xchg
inc
adc
outs
ret
ja
movs
aaa
inc
and
or
fucomip
gs
call
retf
mov
daa
push
and
mov
in
popa
xchg
fnstsw
lds
adc
pop
or
mov
cs
inc
out
sub
aam
out
or
daa
pop
add
fwait
pop
mov
rcl
(bad)
mov
xchg
jne
scas
in
mov
fild
xor
sbb
aam
mov
inc
xlat
adc
call
and
or
push
or
jle
push
xchg
add
cli
adc
ror
adc
sub
ret
clc
jmp
popa
dec
nop
mov
xchg
fcmovnbe
std
push
repz
sti
dec
mov
pop
(bad)
int
stos
loop
clc
dec
sub
mov
mov
push
jbe
xchg
mul
test
bound
das
jle
imul
and
sbb
mov
push
and
mov
jno
pop
retf
gs
sbb
stc
xchg
or
mov
cwde
aas
test
mov
or
data16
shl
sbb
and
(bad)
pushf
repz
and
movs
cmp
or
paddusw
cli
retf
fild
xchg
iret
mov
leave
ds
push
call
and
xor
pop
inc
aam
add
mov
retf
adc
cld
in
cli
sbb
in
mov
xchg
push
ss
mov
and
xchg
fld
xor
rcl
push
mov
mov
sbb
xchg
cwde
bound
mov
sub
pop
cmp
dec
cmps
pop
mov
inc
arpl
adc
out
push
sar
sub
rol
mov
mov
mov
lea
or
mov
fnsave
mov
js
fst
shl
cmp
pop
inc
jg
push
inc
sbb
cmps
xor
fisubr
pop
mov
movs
(bad)
fimul
prefetcht1
ins
imul
lahf
lds
mov
and
dec
mov
repnz
lahf
push
xchg
psubw
ret
add
mov
sbb
mov
test
test
sbb
pop
jg
jp
mov
jmp
or
sub
or
das
jmp
pusha
mov
je
xchg
cmp
fcmovu
jns
enter
rcr
pop
mov
test
mov
push
test
xchg
xchg
mov
scas
push
dec
jmp
mov
adc
mov
fst
dec
push
dec
cmp
xor
out
popf
xchg
out
mov
sti
jnp
push
pop
fadd
fist
out
xchg
and
rcl
in
inc
inc
int
jne
jmp
or
push
lahf
sahf
sub
xlat
das
ins
mov
sbb
cmc
ret
mov
sar
inc
aaa
fld
cmp
pop
(bad)
mov
sbb
sbb
push
test
pop
jbe
imul
fstp
ud2
sbb
cmp
int3
mov
inc
loopne
cmp
jmp
in
add
sbb
fs
call
mov
xchg
pop
ficomp
mov
in
cmp
nop
pop
push
adc
or
ins
sbb
ror
dec
aad
fstp
sbb
push
push
ret
cmps
cmps
fucomi
sub
mov
inc
loope
xor
cmc
pushf
mov
xchg
xlat
je
outs
cmp
xlat
inc
add
pop
jmp
add
jp
xlat
push
sub
cmp
bound
mov
dec
mov
and
dec
aam
cli
(bad)
sti
push
push
sub
(bad)
mov
push
(bad)
fcmovne
adc
push
inc
jnp
push
pop
icebp
pop
pop
add
cmp
and
jmp
repz
cld
cmp
hlt
cmp
mov
movs
jmp
dec
test
out
cmp
add
scas
clc
and
jae
test
int
mov
aad
scas
push
shl
jb
jl
nop
mov
repz
shr
ret
xchg
sub
cld
mov
popa
xor
out
imul
mov
push
ret
inc
loopne
fcom
leave
push
cwde
aaa
popf
add
ss
pop
mov
push
fwait
ret
jge
mov
push
fs
clc
xor
xchg
or
fsub
cmp
scas
ins
add
jae
hlt
mov
inc
and
jmp
add
retf
adc
dec
cli
xor
fwait
sbb
xor
add
mov
mov
or
pop
xchg
popf
and
lea
(bad)
jns
mov
fwait
push
shl
fcom
loop
mov
sbb
imul
xchg
push
sbb
lahf
push
jmp
mov
mov
pop
loop
clc
scas
pop
je
loope
outs
mov
lea
ficomp
sub
fidiv
int
movs
pop
test
add
dec
popf
push
inc
mov
or
jle
inc
enter
cmps
outs
ins
xchg
ds
push
dec
jle
inc
mov
sbb
sub
(bad)
jne
push
and
nop
(bad)
call
arpl
sbb
sub
fadd
iret
pop
scas
aad
out
rol
and
(bad)
lock
dec
cwde
pop
push
push
cmp
mov
pop
js
retf
push
test
movs
pop
test
lods
cmp
(bad)
lods
icebp
xchg
add
adc
cmps
dec
imul
mov
imul
sub
jmp
mov
out
sbb
cmps
fld
test
sub
cmp
mov
sti
pop
movs
sbb
push
and
mov
sub
xchg
xor
lock
fimul
mov
popf
test
in
xchg
sbb
adc
mov
(bad)
dec
out
push
inc
or
movs
mov
inc
push
add
imul
jae
ja
mov
pop
jg
jle
test
xor
les
fstp
or
and
imul
mov
pop
push
add
add
mov
push
cmps
dec
xor
fist
aas
loop
pop
dec
les
sbb
xor
(bad)
jno
mov
xor
loopne
loop
dec
cmp
(bad)
aas
inc
leave
dec
push
cmp
mov
mov
ds
call
sahf
mov
hlt
test
push
test
and
mov
test
sub
adc
retf
adc
lds
cmp
sbb
push
mov
cld
xchg
imul
(bad)
cmp
sbb
push
enter
inc
jae
mov
mov
sbb
dec
push
pop
pop
and
cli
jg
xlat
adc
sub
shl
push
je
int3
sub
pusha
mov
nop
dec
push
pop
rcl
(bad)
jp
in
out
popa
push
xor
fwait
ret
fcomp
je
nop
popf
hlt
sti
xchg
sbb
lods
jl
mov
jge
clc
push
es
cld
les
je
push
mov
push
in
dec
or
aam
add
out
mov
lods
inc
iret
xchg
pop
stos
aad
mov
add
cmp
dec
sub
add
inc
sub
pop
pop
test
ins
gs
dec
popf
or
jmp
movs
int3
cmp
addr16
retf
cli
loopne
mov
sbb
xor
sti
fistp
push
cwde
mov
and
stos
in
ins
aad
push
xchg
or
push
cmps
mov
retf
mov
xchg
in
jmp
fistp
icebp
inc
fs
sub
test
xchg
or
pop
sbb
xchg
xchg
mov
adc
adc
push
dec
jecxz
xor
pop
jg
lods
jns
shr
add
mov
adc
in
inc
in
movs
int3
fwait
ins
add
jl
xchg
cmp
mov
out
call
adc
sar
and
call
sbb
aaa
cwde
scas
xor
push
imul
or
push
les
test
rcl
sub
inc
std
ficom
dec
dec
xchg
xchg
jmp
dec
push
push
(bad)
jg
loope
lods
jle
xor
cld
bound
pop
test
cs
push
mov
sbb
(bad)
jo
(bad)
clc
sbb
pop
sub
hlt
fistp
sbb
aam
or
ret
leave
daa
jge
test
les
into
repnz
aas
pop
sbb
adc
jno
les
pop
push
dec
inc
jmp
js
xchg
inc
add
test
fbld
push
add
jnp
jecxz
xchg
out
out
std
xchg
imul
dec
cmps
xchg
ins
dec
test
mov
pop
fidiv
pop
push
adc
mov
(bad)
call
pop
cmps
shl
adc
pop
data16
out
jg
mov
mov
gs
(bad)
jmp
scas
addps
jne
inc
xchg
int3
jae
cli
hlt
pop
fld
mov
test
clc
pop
(bad)
push
cmc
cmp
out
enter
dec
dec
xchg
pop
adc
push
mov
xchg
inc
add
loop
ja
jge
aaa
ins
cs
outs
mov
add
ins
(bad)
mov
push
cmp
inc
xor
push
and
jnp
add
cmps
pop
(bad)
icebp
test
cmps
mov
adc
cmp
pop
xchg
jecxz
in
or
jecxz
and
call
fidivr
xor
sub
retf
push
cmp
int3
push
in
sub
test
nop
rcl
push
fisub
mov
fsubr
or
add
jge
pcmpgtb
fimul
add
mov
xchg
les
mov
sbb
retf
push
and
in
mov
cmp
test
cld
aam
cmp
pop
lods
pusha
ret
test
(bad)
ja
pop
jecxz
aaa
pop
push
sub
in
adc
in
fdivr
imul
sti
lods
aam
lds
sti
push
test
mov
mov
jb
movs
mov
icebp
mov
loopne
cmc
ffree
test
or
dec
fistp
dec
popf
push
inc
sbb
nop
push
call
rcr
inc
cwde
and
pop
add
aas
scas
hlt
test
pop
popf
or
loope
mov
push
fistp
js
out
jl
test
(bad)
cmp
stos
add
(bad)
sti
xchg
cmps
call
adc
hlt
repnz
mov
jp
cmp
push
enter
cli
inc
iret
mov
les
sahf
and
inc
push
push
mov
push
loopne
sbb
clc
push
inc
fwait
mov
outs
adc
inc
imul
pushf
dec
mov
add
cmps
jmp
in
test
push
push
aas
adc
xchg
les
adc
fisub
(bad)
rol
jp
in
or
pop
sbb
mov
in
sub
stos
dec
aam
mov
cdq
pop
mov
retf
cmc
or
push
cmp
ds
lds
sub
or
data16
fidivr
ins
xchg
mov
test
mov
je
pop
xchg
ja
lods
sub
fdiv
push
jp
cdq
aad
scas
dec
mov
daa
loop
xchg
outs
jo
add
mov
cmp
jno
cli
dec
mov
scas
push
es
call
mov
jbe
xchg
sub
scas
sbb
sub
push
cli
pusha
jmp
daa
adc
shl
arpl
or
(bad)
inc
mov
cwde
adc
fist
popa
adc
sub
cmp
fcom
push
sti
jmp
rcl
test
cmps
push
es
jb
out
push
mov
xchg
loopne
nop
sub
stos
cmp
pop
or
pop
repz
popf
hlt
aad
div
clc
xchg
mov
leave
out
bound
aaa
mov
jne
cmps
fnstsw
push
movs
test
shr
in
sub
stos
mov
xor
cwde
pop
mov
aad
adc
dec
imul
or
cmps
adc
in
jns
xchg
add
inc
pop
mov
dec
in
and
int
sub
loope
cmps
cwde
push
ffreep
call
jmp
loop
push
(bad)
xchg
cld
lods
cmp
add
adc
sub
mov
imul
jbe
and
adc
cmp
xor
fistp
pop
inc
(bad)
xchg
xchg
cmovae
cmps
mov
shr
inc
inc
cmp
inc
mov
test
or
daa
pop
dec
popa
and
repnz
mov
mov
mov
mov
data16
movs
sbb
pop
pop
jmp
sub
cmps
mov
sbb
adc
mov
and
and
test
sub
mov
push
(bad)
lods
fnstcw
pop
push
push
mov
mov
loope
mov
dec
sbb
fmul
cmps
cmps
cmps
stc
push
jb
je
mov
inc
pop
shr
lods
sar
fld
or
aas
sub
stos
lods
ds
adc
lock
mov
les
mov
movs
dec
jg
sub
jl
xor
ss
imul
jae
sbb
jb
test
nop
jmp
repz
jnp
add
ins
test
adc
jns
cmp
or
sub
leave
push
icebp
and
cmp
push
or
sbb
cli
mov
push
xor
(bad)
xor
loopne
xchg
arpl
adc
mov
cwde
or
cmps
(bad)
mov
inc
les
inc
rcl
xor
lock
xchg
xchg
mov
loop
js
mov
pop
and
std
adc
mov
inc
xchg
adc
push
adc
inc
rcr
mov
or
shl
aas
in
mov
mov
jmp
(bad)
movs
es
add
sub
xchg
xchg
xchg
push
pop
jbe
das
test
jge
or
scas
jb
mov
mov
je
xor
or
fsubp
add
js
jnp
xor
pop
in
xlat
loope
call
mov
shl
dec
pop
xchg
in
or
mov
and
inc
mov
inc
sahf
shl
js
std
idiv
sbb
cmp
sahf
xchg
setb
jbe
into
mov
push
mov
jge
stos
xchg
outs
mov
mov
add
inc
or
sbb
arpl
call
nop
jl
outs
lods
outs
cli
add
xchg
out
add
adc
dec
(bad)
cmp
add
repz
jl
ficom
fsubr
shl
xor
pop
enter
dec
dec
rcl
sub
(bad)
sbb
pop
cli
pop
xchg
out
push
jg
jbe
and
pop
movs
cmps
loop
in
fidiv
in
(bad)
mov
jbe
push
sbb
outs
jb
sahf
nop
or
scas
mov
cmp
jmp
mov
test
repnz
mov
mov
dec
pop
sub
(bad)
jl
push
lahf
clc
adc
mov
adc
xor
shl
in
mov
aaa
rol
jo
mov
mov
lea
outs
sbb
lea
push
jl
pop
pop
jbe
jg
in
sbb
in
sub
dec
cmp
sbb
popa
out
aam
test
mov
mov
and
dec
out
jmp
in
sub
fmul
fcom
sub
je
xchg
pop
dec
push
inc
add
xchg
call
adc
in
cmp
icebp
fcom
or
push
aad
stos
jl
pop
inc
gs
in
fiadd
dec
loope
lds
and
jmp
xchg
call
mov
sbb
into
scas
scas
nop
addr16
cmp
stos
ds
loopne
repz
loop
rol
popa
cmp
mov
or
stos
stos
int3
lods
imul
ja
add
pop
mov
jns
(bad)
mov
add
fsub
push
sub
ins
neg
mov
sub
inc
adc
add
push
repz
cmps
jg
imul
in
push
imul
push
scas
shr
jo
sar
and
xchg
mov
mov
inc
xlat
and
add
sub
cs
sbb
and
shl
fidiv
sub
mov
mov
jge
(bad)
or
mov
inc
das
cmp
mov
cmp
mov
and
push
test
xor
call
mov
and
sub
add
mov
xchg
cmp
push
js
movs
or
imul
push
ror
in
(bad)
xchg
fidiv
lds
push
mov
ret
add
(bad)
sbb
cmp
ret
vpcmpeqw
test
out
dec
stos
jns
add
(bad)
(bad)
aaa
dec
js
test
mov
inc
or
aas
(bad)
daa
sub
push
cmps
lahf
xor
sbb
adc
mov
jmp
mov
jl
cmp
or
psubusb
xor
push
popa
dec
sbb
scas
and
in
xor
iret
pinsrw
mov
les
das
jle
mov
jle
cwde
add
or
mov
retf
sar
pop
fldcw
fwait
repz
jno
xchg
xchg
add
ins
cmp
(bad)
mov
cmp
lods
and
out
loope
ds
es
outs
sahf
in
mov
jmp
arpl
sbb
add
sub
push
adc
jl
test
je
adc
test
xchg
dec
jns
xor
add
push
mov
dec
nop
clc
mov
out
ret
es
mov
fild
jae
pop
jl
call
mov
outs
aas
bound
fcmove
jns
jb
icebp
repnz
(bad)
retf
mov
jmp
mov
mov
inc
jb
adc
leave
jmp
retf
mov
xor
push
in
jmp
sbb
hlt
call
bound
arpl
add
pxor
mov
xor
(bad)
jb
adc
ds
push
inc
mov
mov
add
aas
int3
xor
sbb
push
cmp
jg
add
jae
or
push
jmp
int
adc
leave
push
mov
dec
aas
test
js
dec
sbb
(bad)
(bad)
fbld
add
push
aad
lods
icebp
inc
push
pop
mov
icebp
out
xchg
dec
cld
xchg
jmp
cld
sbb
pop
and
xchg
adc
pop
leave
sub
dec
scas
xchg
in
xor
push
or
ja
push
or
aas
push
adc
mov
fstp
ds
mov
dec
ins
sub
rep
fwait
daa
imul
movs
and
pop
bound
or
jmp
loope
enter
pop
add
into
sbb
shl
mov
cmps
cmp
sahf
bound
rcl
add
cwde
and
mov
inc
push
jge
mov
inc
sub
adc
scas
mov
sub
xchg
sub
and
xor
push
movs
test
aam
call
push
test
fisub
imul
(bad)
dec
retf
(bad)
popa
test
sbb
dec
(bad)
cmp
and
cmc
pop
xchg
xor
bound
add
or
inc
xchg
dec
and
dec
push
push
push
xchg
(bad)
xor
les
push
xchg
jb
pushw
inc
sub
ret
cmp
in
outs
ins
jmp
mov
cld
mov
mov
(bad)
ss
es
mov
(bad)
mov
sbb
mov
push
sbb
push
fs
in
or
enter
push
jge
xlat
jo
not
push
jmp
(bad)
and
mov
bnd
xchg
in
int
inc
jle
or
sbb
arpl
add
out
shr
cmps
jb
xor
cld
outs
sub
ins
out
sbb
fnstsw
add
stos
sbb
sub
retf
push
mov
movs
test
xor
stc
cmp
std
or
sub
mov
retf
cwde
sbb
pushf
fnstsw
jmp
mov
test
cmp
pop
sub
xchg
xchg
icebp
or
(bad)
cmp
loopne
jb
imul
lea
call
fdiv
xchg
fs
push
and
call
pushf
rol
push
inc
outs
mov
lods
xchg
mov
dec
das
pop
rcl
mov
jecxz
jmp
movs
(bad)
leave
mov
xchg
popa
or
jge
popa
mov
out
out
pop
inc
jl
jl
int
lock
fstp
mov
int
push
sbb
retf
cmp
out
add
ret
mov
add
push
mov
xchg
mov
sbb
into
add
dec
add
imul
les
mov
mov
int3
mov
cmp
ds
je
cwde
and
adc
mov
rcl
or
arpl
inc
mov
aaa
rcl
xor
aad
aas
mov
adc
mul
and
das
out
add
mov
out
adc
fist
or
stos
dec
push
in
push
cwde
sahf
das
cmp
adc
pop
pop
pop
loop
mov
(bad)
into
nop
xor
shl
fdivr
test
std
push
call
jno
cmp
popa
mov
mov
mov
pushf
popa
add
bound
(bad)
jg
imul
inc
in
pop
je
stc
sti
rol
(bad)
fmul
dec
jmp
inc
(bad)
push
inc
mov
cmps
xchg
cmp
outs
cmp
and
mov
rcl
stc
inc
sub
aas
push
pop
ins
aad
retf
cs
push
mov
movs
add
push
arpl
popa
out
cs
mov
add
ror
dec
lea
xor
cwde
cs
adc
lahf
mov
dec
cmp
out
or
jo
xchg
push
or
movs
pop
ret
js
push
out
sbb
les
pop
shl
pop
out
(bad)
add
sub
stos
cli
xor
pop
inc
fcomp
pop
lock
cmp
dec
cmp
jl
xlat
loop
(bad)
cwde
in
jge
fdiv
out
ss
test
cld
cld
xchg
fcmovne
mov
in
aaa
and
mov
cmp
push
push
sbb
add
jge
cld
adc
inc
call
test
pop
ins
clc
mov
adc
pusha
mov
pop
inc
sti
cwde
dec
jo
sbb
pop
ror
iret
inc
lea
fdiv
aaa
retf
inc
jecxz
call
out
sbb
in
jg
sub
inc
jns
xchg
loopne
xor
xor
mov
mov
push
inc
sbb
jno
es
sahf
lahf
xchg
pop
pop
js
cmp
enter
mov
loop
fild
(bad)
push
dec
stos
sub
or
je
lock
lds
(bad)
outs
xor
inc
and
mul
mov
cmc
jle
ja
icebp
push
cmp
push
push
fwait
cmp
xor
cmp
inc
mov
fcomp
and
mov
into
popf
and
jb
xchg
les
test
vshufpd
inc
cmp
dec
mov
sti
das
sub
pusha
test
mov
scas
adc
jmp
leave
or
imul
ins
in
push
shr
mov
int
gs
out
movs
push
in
pop
pop
or
jmp
jle
ins
stos
xor
std
jns
push
jl
lods
retf
cmc
faddp
dec
inc
out
jp
popa
push
into
dec
jp
cmp
cld
cmp
and
jge
dec
xor
push
fsubp
pusha
xor
and
and
jb
xchg
icebp
fist
sahf
gs
ret
movs
das
jle
pop
sub
xlat
xlat
push
mov
ds
pop
xor
fsubrp
push
and
xchg
inc
fcomi
xchg
dec
mov
leave
sbb
xlat
out
fwait
or
push
jmp
sbb
fidivr
imul
and
retf
ror
mov
repnz
into
sub
out
jno
push
lds
sahf
sub
cmp
pop
mov
in
shr
inc
jne
cmp
push
dec
inc
jb
dec
mov
mov
jmp
lods
loope
and
xchg
pop
sti
jae
imul
xor
push
hlt
pop
xor
std
ja
movs
mov
adc
mov
bound
jp
push
xchg
js
jno
fild
xor
mov
and
or
dec
and
loop
stc
cmps
retf
cmp
retf
dec
pushf
or
lea
sti
stos
dec
je
int3
sbb
push
out
jg
sbb
xlat
cld
cmc
mov
or
sub
je
mov
arpl
sub
in
ret
push
pop
jno
cs
dec
jno
jno
or
in
jg
rcr
gs
jne
sbb
adc
lea
xor
adc
in
les
(bad)
rcr
call
add
clc
xlat
push
fisttp
xor
or
xchg
ins
mov
out
xor
test
shl
iret
dec
out
pop
sbb
cld
pop
xchg
mov
or
inc
push
sbb
adc
push
mov
xchg
das
movs
inc
movnti
mov
idiv
imul
inc
out
pop
fisub
xchg
lods
out
sub
xchg
leave
hlt
dec
jecxz
bound
cmp
ss
rcr
ffreep
fdivrp
mov
pop
out
dec
fwait
loop
cmp
je
es
xor
test
mov
retf
shl
das
sbb
repnz
xchg
push
lods
jb
aad
sbb
and
push
(bad)
icebp
mov
pop
push
mov
jecxz
mov
pushf
test
inc
nop
call
imul
add
cli
addps
lahf
in
loop
fs
push
jge
mov
out
mov
ret
dec
dec
mov
cmp
sbb
outs
daa
or
into
push
scas
pushf
push
cmp
cli
mov
sub
push
stos
jle
adc
rol
test
das
jb
call
outs
into
mov
mov
inc
dec
sbb
stc
cmp
push
(bad)
cmp
mov
int3
mov
jge
adc
pop
and
cmp
aad
shl
xchg
rcr
shr
add
sbb
(bad)
fnstcw
push
and
mov
xchg
fdiv
inc
push
cmp
sbb
ret
push
test
outs
enter
sub
mov
or
clc
aam
dec
cmp
sub
dec
cmp
add
ror
xor
(bad)
imul
mov
or
aas
(bad)
outs
xchg
ret
adc
add
pushf
inc
cmp
inc
jge
jns
add
add
pop
mov
add
hlt
xchg
cmps
or
icebp
push
jae
clc
sbb
cmps
bound
ret
mov
push
sbb
jmp
ret
cdq
out
fsub
jmp
clc
jnp
lods
shl
jmp
stos
or
fs
dec
retf
addr16
movs
cmc
js
test
sbb
xor
jmp
xchg
xchg
inc
fidiv
adc
mov
test
pop
mov
jno
outs
xchg
jnp
gs
cmps
dec
sub
mov
adc
cmp
test
out
mov
adc
push
push
shr
daa
and
je
pop
push
sti
xchg
push
cwde
das
lea
cmps
dec
sbb
rol
xor
jae
out
and
rol
dec
dec
rcr
cmp
dec
cmp
or
aaa
in
stc
(bad)
and
in
sbb
sbb
repnz
fisubr
or
retf
movs
jecxz
fiadd
push
enter
mov
add
(bad)
jmp
inc
mov
jge
ds
jmp
rcr
fnstcw
ins
movs
mov
aas
das
adc
fadd
cli
sbb
(bad)
xlat
cwde
xchg
jno
div
mov
test
jbe
gs
je
nop
mov
popa
add
and
fnstenv
bound
xchg
xchg
fst
fimul
jmp
adc
mov
inc
inc
pop
and
add
add
ret
cmp
mov
call
test
lods
fnstenv
inc
add
mov
xchg
sbb
movs
mov
fld
xor
test
cli
xchg
jmp
retf
or
push
in
in
hlt
xchg
(bad)
sbb
in
out
sbb
inc
stos
jne
or
adc
jle
push
pushf
aas
pop
hlt
stos
pusha
jg
dec
pusha
cld
dec
sub
xchg
aaa
popa
fsubr
ins
lea
fisttp
xor
lahf
xor
ret
adc
ja
in
(bad)
retf
fadd
add
rcl
pop
dec
push
fsubr
es
int3
popf
mov
shl
and
dec
aas
pop
and
pop
jae
aaa
add
pop
fadd
cmp
test
adc
jae
lods
icebp
adc
(bad)
ret
push
mov
cwde
dec
adc
pop
(bad)
fild
mov
movs
push
mov
xchg
push
xor
retf
ret
mov
in
lods
sub
arpl
xchg
scas
in
xor
sub
xchg
out
mov
xor
sub
hlt
xchg
inc
xor
add
adc
sub
dec
push
cmps
into
stc
xor
out
movs
ficomp
push
sbb
bound
je
das
retf
out
or
push
mov
push
nop
sub
lds
push
mov
shr
jne
sub
cmp
xchg
fwait
repnz
rcl
mov
dec
movs
dec
sub
sub
push
cli
test
cmp
cld
cld
cs
jecxz
push
je
sub
mov
inc
sub
jbe
aas
lds
pop
lods
aas
pop
and
jnp
or
mov
sub
jp
adc
fsub
pop
jl
pop
pop
dec
loopne
test
pop
fldenv
and
mov
imul
je
fisub
popf
cmp
sbb
sbb
fisubr
push
dec
sbb
shr
xchg
cmp
adc
or
fsqrt
pop
rcr
fist
inc
xchg
cmp
lods
fwait
add
popa
repz
push
(bad)
add
sub
cmp
inc
or
mov
das
dec
(bad)
mov
or
add
cmp
mov
stos
push
retf
sbb
pop
jmp
out
pop
and
mov
scas
pop
and
arpl
inc
cmp
out
sar
mov
xor
mul
mov
xor
inc
retf
std
ins
push
jnp
sub
xchg
inc
pushf
lock
sub
adc
or
xchg
xchg
pusha
inc
adc
icebp
adc
push
inc
inc
jo
sbb
enter
(bad)
adc
ins
ds
into
and
jg
shr
rol
push
cmp
test
pop
clc
inc
int3
in
dec
xchg
push
movs
mov
adc
ja
fist
test
imul
cmp
push
mov
cmp
mov
cli
loope
mov
ret
sbb
mov
imul
sahf
clc
test
sbb
or
and
jle
add
or
lahf
ds
(bad)
mov
and
hlt
push
in
sahf
jp
ss
mov
pop
sar
mov
loop
add
adc
lods
scas
jno
div
popa
or
dec
movs
mov
dec
cmps
es
and
sti
ret
shr
or
jg
neg
cmp
mov
dec
into
(bad)
in
call
mov
addr16
push
mov
mov
sbb
out
xor
sub
ins
and
dec
(bad)
adc
or
fldcw
retf
inc
sub
inc
dec
mov
mov
loope
sbb
out
repz
mov
mov
or
cmp
jle
stos
leave
mov
test
imul
jae
les
jne
fs
mov
inc
pop
push
hlt
stos
mov
aad
(bad)
(bad)
cli
clc
push
jae
outs
fistp
mov
cmp
cli
mov
mov
add
mov
push
repnz
xor
mov
mov
ror
or
adc
fadd
xlat
leave
cmp
(bad)
cwde
ret
or
jmp
cdq
or
xor
loope
xor
icebp
(bad)
cmp
inc
push
in
pop
push
push
ss
pusha
jmp
cld
xor
jmp
es
out
mov
movs
xchg
jmp
repnz
call
mov
mov
and
inc
hlt
test
sahf
jg
adc
cmp
das
retf
jne
clc
sbb
dec
pusha
cwde
repz
cmp
shl
nop
mov
xor
jl
int3
mov
in
mov
adc
cld
push
outs
jns
add
xchg
xchg
jae
into
mov
inc
xor
xor
pushf
fsub
sub
jmp
sbb
hlt
mov
sbb
pop
mov
popa
cld
mov
icebp
inc
test
mov
fisubr
in
inc
mov
loop
movs
mov
adc
into
mov
sub
xchg
out
cli
int
pop
leave
mov
clc
push
cmp
push
cmp
push
in
cmp
js
shr
jbe
xchg
inc
push
leave
pop
pop
loop
push
retf
cmp
mov
js
sub
push
push
(bad)
int3
inc
in
or
cmp
daa
mov
test
imul
jbe
daa
je
ins
repz
(bad)
clc
jmp
push
loopne
call
dec
adc
dec
push
adc
push
jmp
xchg
pop
mov
inc
cmp
(bad)
int
and
retf
ret
cdq
popf
mov
mov
aaa
ret
jbe
repz
iret
mov
sbb
cmp
pop
push
sub
ud2
outs
adc
fsubr
sar
jl
or
adc
pop
enter
scas
jmp
mov
ss
pop
mov
jmp
mov
adc
mov
jmp
adc
mov
mov
pop
in
dec
inc
add
imul
repnz
lds
cmps
jo
jno
push
mov
xor
rcl
mov
(bad)
ss
xchg
push
icebp
adc
sub
and
cmp
mov
inc
je
shl
push
and
xor
outs
dec
neg
mov
jmp
pop
mov
ds
pop
pop
lea
dec
je
js
dec
das
jg
cmp
pop
inc
or
adc
pop
pop
push
mov
shl
sub
xchg
test
push
pop
cwde
int3
sub
dec
dec
fcom
imul
setnp
retf
gs
lods
inc
enter
jne
mov
dec
mov
sbb
gs
fist
leave
mov
in
cmp
and
jne
scas
in
cmp
out
je
stc
pop
dec
pop
std
mov
mov
stos
push
mov
or
and
xchg
out
sahf
mov
shl
cmp
dec
rcr
push
dec
jmp
xchg
sbb
clc
inc
in
repnz
stc
push
das
mov
test
or
cwde
xor
cmp
into
mov
and
stos
fisub
mov
cmp
add
cmp
cs
cmp
add
and
sub
cmps
push
cli
inc
push
xchg
adc
stc
jmp
xlat
fwait
out
hlt
xor
cmp
fwait
jg
mov
in
xor
xchg
enter
mov
sub
adc
lahf
jae
sbb
(bad)
out
lods
test
out
add
adc
mov
sub
add
daa
sub
jns
mov
popf
fidivr
pusha
mov
xor
mov
movs
cmp
daa
jae
fst
pop
fwait
int
out
(bad)
xchg
cmp
push
cmp
xchg
loop
addr16
pop
cli
in
xchg
adc
movs
or
jp
pusha
cmp
cdq
clc
fld
push
jmp
std
xor
mov
xor
or
ret
xchg
mov
push
jl
push
fbstp
(bad)
mov
ret
mov
test
sbb
ss
add
inc
neg
out
sub
pushf
cwde
in
sbb
loope
add
lods
das
lds
test
int3
cmc
out
rcr
mov
add
jno
das
in
sbb
sbb
and
icebp
repnz
rcr
cmp
xor
push
fwait
into
movs
(bad)
les
test
call
push
shl
in
mov
and
mov
inc
inc
rcr
into
or
in
sub
jno
mov
push
scas
add
or
push
idiv
pop
jg
rcr
xchg
out
mov
and
lea
push
rcr
mov
and
push
xchg
push
or
or
stc
xchg
mov
mov
(bad)
and
cmp
mov
cdq
shl
xchg
call
xchg
sbb
pop
jge
lods
add
push
jns
sbb
loopne
xor
lock
stc
or
out
jp
rcl
mov
push
ja
push
mov
sbb
clc
cmps
jne
aaa
sbb
mov
and
sub
xor
shl
push
nop
or
loop
add
cmp
sbb
sub
and
ins
popf
adc
or
jmp
cmps
repz
xor
in
sub
jmp
and
ja
test
imul
movs
xchg
sbb
jmp
popf
test
or
jmp
sub
jbe
cmp
cmp
fst
xchg
adc
into
or
jecxz
lahf
or
pop
mov
and
rol
fld
dec
fwait
cli
(bad)
jle
sbb
fwait
mov
sub
and
push
std
in
mov
pop
in
jg
or
push
mov
pushf
ror
retf
and
fs
and
mov
inc
test
test
pusha
sbb
sub
outs
fmul
test
aam
jecxz
or
cdq
loopne
cmp
push
and
and
jo
call
ins
lahf
out
lods
sub
in
push
ret
fstp
xchg
bswap
sub
mov
out
fidiv
sbb
dec
mov
xchg
out
mov
push
loop
sub
je
retf
cmps
pop
or
xchg
sbb
stos
pop
cwde
jno
outs
iret
lea
in
adc
dec
ret
dec
dec
dec
imul
fld
xor
lods
inc
inc
and
sbb
add
stos
loop
out
or
das
test
retf
cs
in
or
dec
sbb
sbb
rcl
inc
and
jmp
jp
imul
dec
cmp
xor
fstp
pop
xor
sub
mov
ja
inc
test
jae
inc
adc
jmp
add
push
bnd
retf
jno
jae
out
clc
mov
sub
jecxz
fadd
stc
mov
xchg
addr16
icebp
scas
outs
pop
or
nop
popf
mov
outs
in
jae
xchg
out
dec
cdq
or
es
sub
call
pop
push
rcl
adc
cmp
xlat
das
dec
stos
pusha
repnz
scas
loop
out
jge
and
in
icebp
inc
dec
js
fisttp
sti
test
xor
add
dec
in
dec
jmp
push
arpl
stos
mov
mov
ret
xlat
cmp
sahf
nop
arpl
xchg
xchg
sub
movs
jg
mov
inc
ins
mov
dec
push
pusha
jecxz
xlat
mov
mov
call
int
fs
xchg
lods
xor
int
test
inc
ja
(bad)
jne
test
ret
mov
gs
cdq
ret
les
and
vfmsub132ps
push
lahf
loope
out
cmps
or
jmp
mov
sbb
das
or
mov
jp
(bad)
lock
pop
mov
push
mov
push
lods
add
lods
jp
jnp
and
sbb
push
adc
stc
adc
ret
cs
aam
adc
inc
scas
sbb
and
mov
lahf
xchg
std
sbb
lods
mov
call
cmp
cs
push
push
aaa
pop
fcom
cli
cmc
sub
nop
adc
mov
or
das
mov
fcomp
push
in
push
xchg
and
xor
sub
cdq
lea
sub
push
neg
sub
xchg
cmc
fs
ins
inc
retf
xor
mov
fisubr
lock
mov
fdivr
in
cmp
clc
call
inc
mov
dec
cmp
adc
inc
(bad)
xor
mov
xor
jo
shr
adc
sbb
shl
into
xchg
clc
or
ror
outs
and
and
jne
int
xor
jge
cmp
fs
sar
(bad)
or
lock
adc
add
ins
pusha
aas
sub
lock
hlt
add
or
lea
or
mov
rcr
inc
retf
scas
test
inc
xor
sti
cdq
mov
cmps
movs
cmp
cld
in
sbb
jbe
aad
fbld
(bad)
sub
and
test
inc
push
repnz
jp
das
push
ret
and
popf
aam
push
mov
ds
inc
adc
mov
mov
lahf
sbb
cmp
pop
push
in
xor
cmp
imul
sar
xor
sub
call
(bad)
pop
into
xor
test
nop
sbb
outs
and
dec
iret
xor
ins
pop
stos
mov
mov
out
jb
daa
in
(bad)
stos
push
rcl
push
dec
push
inc
call
or
idiv
cs
inc
fs
pop
arpl
jle
je
bound
leave
xchg
call
cmps
and
adc
ror
fisttp
jge
mov
ss
dec
repz
int3
xchg
xor
xor
pop
mov
bnd
add
push
fsubp
and
xchg
repnz
pusha
and
cwde
xor
jo
xchg
and
jg
push
(bad)
enter
lahf
call
retf
sub
dec
pop
push
jge
push
fist
jmp
mov
aam
mov
sub
mov
(bad)
cmc
lea
loop
jmp
or
popf
inc
xlat
push
imul
test
ret
(bad)
mov
mov
inc
ins
cwde
adc
inc
or
or
mov
mov
pushf
mov
(bad)
out
push
mov
ds
sar
out
cmp
cdq
inc
sub
rol
pop
scas
xor
icebp
pop
xchg
cmp
or
ss
mov
pop
fidivr
ficom
pop
fwait
ret
sub
push
xchg
fwait
inc
rcr
jo
mov
sbb
fcom
mov
mov
and
jns
aaa
imul
test
pop
cwde
stos
data16
push
fcmove
loopne
clc
ret
jmp
out
cmps
xchg
stos
mov
mov
scas
sti
cli
es
das
stc
cmp
or
out
int
dec
jle
pop
mov
daa
or
or
xor
arpl
in
pop
fmul
xchg
adc
xlat
sub
xor
(bad)
mov
pop
inc
jae
pop
sbb
push
jl
cmps
sub
pop
inc
scas
inc
pop
dec
es
push
cmps
xchg
push
dec
sub
imul
mov
ds
jmp
mov
jg
xor
out
int
ja
sbb
push
in
xor
xor
jmp
cmp
ss
and
movs
sub
ins
pop
mov
dec
repnz
es
ret
fadd
xor
mov
jae
inc
std
ficomp
fist
sahf
pop
adc
rol
dec
or
xor
mov
test
rol
in
push
hlt
jl
test
cmp
sbb
inc
push
sub
and
daa
mov
inc
xchg
lock
and
pop
xchg
es
jns
jg
ins
das
loope
fld
(bad)
cld
test
pop
sbb
in
add
imul
addr16
fdivr
xor
neg
dec
jg
cmp
jl
xchg
cmp
and
nop
xor
mov
test
push
or
sahf
jns
add
xchg
adc
neg
retf
ds
repz
inc
xlat
ror
cmps
push
test
in
mov
jo
not
jmp
dec
mov
mov
clc
es
(bad)
mov
retf
clc
sub
dec
sbb
popf
dec
nop
or
mov
xor
stc
or
jecxz
pop
cmps
(bad)
cli
xchg
aaa
gs
adc
clc
push
xchg
xlat
inc
jle
mov
mov
cmps
xor
jp
jo
mov
pop
push
lock
pop
or
pop
pop
add
pop
pop
cld
jns
es
mov
cmp
cmp
mov
stos
je
xchg
fimul
push
pop
mov
bound
aas
or
or
bound
pop
or
xchg
cmp
push
(bad)
dec
xor
inc
stos
xor
aam
(bad)
mov
imul
or
pop
mov
jo
pushf
mov
mov
adc
mov
or
movs
inc
in
rcl
dec
fnstsw
call
jl
mov
popf
pop
(bad)
adc
jne
mul
sbb
ret
outs
rep
inc
pop
sub
inc
lds
jmp
and
adc
loope
fadd
imul
popf
inc
push
mov
sub
jbe
push
(bad)
xchg
pop
xor
scas
pop
push
jg
mov
out
pop
in
mov
fmul
loopne
push
xchg
cmp
mov
dec
into
aaa
add
rol
or
and
adc
(bad)
loop
fist
mov
xchg
movs
outs
retf
dec
ret
sub
mov
mov
loop
push
jo
or
ins
dec
add
jmp
cmp
scas
inc
mov
gs
sti
neg
jp
stos
ret
adc
mov
dec
mov
bound
nop
das
inc
jle
cmps
mov
mov
jae
pop
ror
or
cmp
or
into
sub
add
(bad)
sub
pop
std
sub
mov
nop
aas
dec
pop
cld
jno
mov
and
add
neg
arpl
jecxz
ins
add
xlat
ins
lahf
xchg
lods
cmp
ja
sub
repz
mov
add
fbstp
dec
outs
cli
push
add
cdq
out
xlat
je
jle
fsubp
repz
test
stos
dec
sti
clc
(bad)
std
xchg
mov
lods
and
gs
(bad)
adc
pop
xchg
repnz
inc
daa
(bad)
mov
mov
arpl
out
or
(bad)
or
xor
cdq
shl
cmps
scas
mov
adc
jno
sub
test
inc
jno
inc
loopne
pop
inc
shr
test
outs
xchg
out
leave
xchg
mov
shr
mov
jmp
xlat
mov
mov
shl
int3
jp
daa
outs
or
jp
sub
loopne
add
push
sti
ins
inc
cmp
inc
dec
cmp
fist
inc
mov
dec
shl
dec
mov
push
adc
xlat
inc
mov
lds
repz
xchg
cld
ja
mov
inc
(bad)
movs
ss
mov
mov
and
cld
pop
dec
hlt
jae
and
movs
adc
(bad)
in
test
xchg
dec
jns
je
cmp
repnz
add
push
add
jns
push
out
jno
lahf
xchg
std
cmp
inc
jle
xlat
jecxz
fmul
sbb
xchg
pop
repz
popa
iret
iret
lods
sbb
outs
pop
push
mov
push
rol
addr16
outs
retf
jl
fmulp
fdiv
loope
xor
pusha
xor
jp
sar
sub
dec
xchg
push
jne
xchg
and
pop
adc
lock
(bad)
test
retf
dec
pop
icebp
repz
fisttp
outs
xchg
cmps
je
js
sbb
fisubr
pop
adc
sub
aas
xlat
mov
pop
cwde
movs
sub
fmul
shl
sbb
xchg
and
cmps
jns
or
into
mov
int
xor
fsubr
gs
pop
or
clc
jae
add
mov
ja
jbe
or
sub
jns
retf
push
scas
in
pop
outs
loop
imul
mov
nop
cmp
cmp
addps
adc
xchg
scas
test
loopne
jmp
int3
mov
inc
and
or
and
or
add
inc
cmp
fwait
out
push
xor
lahf
inc
push
outs
mov
mov
pop
and
loop
sbb
xor
out
dec
int
shl
cmp
retf
sub
mov
mov
cmc
jno
aas
adc
or
add
push
mov
mov
mov
popa
cmp
xchg
xor
sub
cld
div
das
lock
inc
test
retf
xchg
sbb
mov
lods
lea
imul
push
jmp
add
inc
ins
jge
mov
hlt
(bad)
pop
sbb
or
xchg
jnp
loop
xor
daa
pop
jecxz
fnstenv
stos
call
cld
mov
pusha
clc
aam
dec
icebp
out
call
loopne
mov
xor
and
(bad)
push
pop
gs
adc
xchg
mov
xor
rol
mov
mov
pushf
test
add
shl
popf
and
(bad)
or
push
repz
scas
stos
int3
hlt
fild
cmps
xor
jno
fs
and
aaa
push
sub
or
retf
cld
jne
not
es
ror
imul
sub
stos
pop
push
repz
mov
mov
loop
cdq
mov
(bad)
jb
push
add
sbb
pop
jae
adc
rcl
xchg
cmp
movs
mov
mov
stos
fcomp
repnz
mov
inc
ja
xor
bound
icebp
cs
sahf
leave
ret
inc
or
dec
lods
or
pmullw
dec
pop
sti
cmp
fwait
jne
adc
xlat
pop
jle
out
xlat
xchg
xchg
jle
add
mov
jnp
sub
test
repz
call
jbe
jae
or
xchg
fs
xchg
popa
cmc
adc
and
xchg
or
fcmovnb
inc
mul
loope
jns
ja
test
sbb
pop
sbb
movs
adc
out
jp
dec
pop
aas
cld
jl
mov
fwait
int3
adc
icebp
loopne
call
bound
add
pop
xor
and
imul
cmps
sbb
jge
imul
push
adc
dec
lock
mov
sbb
sub
enter
cmp
jg
pmaddwd
sti
in
add
mov
jo
pop
enter
dec
inc
sub
sub
and
test
lds
xor
fst
test
arpl
adc
retf
in
mov
ins
dec
push
mov
mov
in
(bad)
adc
shl
test
push
repnz
test
pushf
pop
mov
pop
mov
ins
push
jmp
(bad)
ins
push
mov
jp
loope
push
movs
pop
push
cdq
add
mov
or
cs
iret
bound
dec
adc
imul
pop
test
mov
xchg
cwde
adc
ins
jne
dec
aaa
sbb
test
dec
out
arpl
push
jno
test
shl
sub
mov
movs
lahf
jnp
and
xor
mov
pop
mov
test
shl
lods
jl
push
and
lds
adc
xchg
(bad)
and
jmp
cdq
shl
out
data16
es
cmp
or
push
(bad)
fistp
jno
jg
mov
push
sub
jae
jmp
xor
xor
mov
add
mov
mov
mov
cmp
icebp
sbb
cmp
add
mov
(bad)
popa
sub
sbb
test
mov
into
push
stos
jns
or
or
xchg
(bad)
int
push
in
adc
lahf
or
xor
ds
int
add
aam
dec
mov
adc
xor
cmp
push
xor
out
dec
push
shr
inc
cmps
imul
in
retf
hlt
sbb
push
mov
sbb
inc
loope
cs
push
(bad)
in
jmp
mov
outs
push
out
mov
cmp
xor
lds
leave
mov
and
enter
dec
fcomp
add
sub
repnz
jle
xor
clc
inc
push
popaw
pop
sbb
sbb
pop
loopne
push
(bad)
cmp
mov
fisubr
push
xchg
enter
sbb
sbb
fstp
imul
repnz
ret
jb
sub
jne
push
cmp
shl
fisubr
adc
fisub
add
add
xor
mov
in
xchg
inc
mov
sub
cmp
in
and
arpl
jb
and
sub
push
outs
fnstcw
xor
sbb
iret
push
lds
inc
mov
mov
xor
pop
pop
jmp
mov
push
data16
aam
cmp
shr
fs
cwde
jle
sti
mov
ja
fs
cmps
div
adc
cmp
or
movs
inc
je
sahf
mov
lds
jns
jo
add
popa
test
loopne
shl
shl
xor
loop
mov
mov
dec
cs
outs
push
shl
push
pop
cli
mov
fdiv
es
fwait
in
sub
add
cmps
daa
inc
rcr
inc
xchg
pop
mov
mov
movlps
and
in
and
int
sbb
mov
inc
push
out
ss
inc
dec
in
xchg
xchg
jle
fidiv
pop
cs
loopne
and
test
fadd
loopne
das
in
cmp
sar
and
push
mov
add
in
xor
stc
pop
ss
or
cmp
mov
xchg
mov
jnp
lods
sbb
push
inc
mov
jle
leave
add
loopne
dec
push
movs
sub
lods
mov
imul
push
pcmpgtb
mov
cmp
outs
lock
and
shl
jmp
xor
and
retf
mov
mov
mov
sub
jo
ss
xor
mov
test
add
jmp
iret
xor
mov
int3
xchg
push
and
ds
pop
ret
adc
idiv
(bad)
cli
lods
jno
lock
aad
pop
xchg
push
jle
xor
or
les
push
inc
and
xchg
and
adc
fist
mov
jne
imul
ss
fwait
dec
rcr
sar
sbb
sbb
xchg
adc
jnp
jb
out
in
jns
fld
xchg
dec
(bad)
dec
jbe
mov
pop
aam
sub
mov
mov
adc
sahf
fidivr
outs
sahf
adc
movs
jmp
fst
test
clc
iret
loopne
les
xor
dec
cmps
mov
repz
add
loop
mov
pop
(bad)
jbe
xchg
(bad)
push
les
xchg
ja
(bad)
clc
sub
call
sar
add
xor
out
es
and
mov
xor
popa
inc
jmp
call
test
repnz
data16
mov
adc
fimul
pop
jle
jecxz
test
(bad)
cmp
mov
fcomp
(bad)
rcr
sti
pop
nop
add
psllw
test
jmp
adc
in
inc
pop
dec
rol
aas
outs
movs
adc
mov
mul
fldcw
xor
xchg
cmp
jns
aad
sbb
xchg
fcomp
test
dec
adc
mov
shl
pop
fwait
in
mov
add
cmp
sub
or
bound
or
rdmsr
cmove
xchg
mov
mov
pop
rcl
add
inc
xchg
push
xchg
add
das
or
cmp
xchg
stc
cmp
clc
(bad)
loope
shr
cmp
push
push
popf
cdq
sub
ret
or
push
or
inc
adc
cmps
sbb
adc
cmps
shl
sbb
hlt
jb
dec
dec
or
mov
mov
add
cmps
mov
add
add
inc
ja
jmp
mov
repz
push
popf
ds
(bad)
shr
mov
outs
xchg
mov
out
pop
imul
fidiv
push
pop
lahf
mov
pop
lock
pop
cmc
add
in
sub
push
mov
push
add
jmp
fs
add
pop
(bad)
jo
cli
push
mul
test
xor
cs
dec
add
dec
or
cmps
(bad)
fidivr
or
xchg
cld
jp
and
mov
push
inc
push
test
mov
mov
xor
out
push
int3
dec
test
neg
imul
mov
pop
jmp
jl
push
add
pop
iret
into
xor
jp
dec
sbb
add
push
mov
pop
in
xor
rcr
mov
into
outs
jge
scas
cli
(bad)
pushf
ja
cmp
jecxz
and
lods
mov
pop
ja
cmps
mov
cld
imul
xchg
pop
adc
lods
popf
stos
or
(bad)
xchg
jl
adc
jbe
fs
mov
add
(bad)
xor
mov
dec
test
shl
cmp
push
lea
dec
loopne
cmp
js
movs
mov
lods
div
xor
jo
out
mov
mov
sbb
adc
push
rcr
push
sbb
push
stos
fild
push
ds
push
(bad)
imul
mov
mov
hlt
sub
(bad)
add
out
popa
ficom
xor
mov
xchg
push
in
jmp
lock
sbb
pop
(bad)
or
add
cmp
dec
(bad)
dec
mov
ficom
psadbw
ins
(bad)
and
cdq
gs
mov
test
jae
fidivr
sub
mov
push
mov
jg
xor
enter
add
aaa
jmp
or
jecxz
jne
or
inc
cmp
sub
std
hlt
test
clc
push
mov
push
lock
es
mov
jae
clc
cmp
sub
push
mov
inc
mov
ja
xchg
mov
adc
mov
es
cld
cmp
ja
and
daa
pop
test
jmp
add
cmp
cwde
push
mov
icebp
jmp
xchg
inc
xor
add
dec
push
aas
out
outs
and
jb
mov
fidiv
pop
pop
jmp
(bad)
out
sub
cli
jle
into
or
rcl
push
inc
in
jge
not
fs
cwde
and
mov
sti
ret
mov
pop
(bad)
out
aaa
addr16
mov
dec
ficomp
push
or
jne
stos
cmp
add
mov
jns
adc
pop
in
push
jle
fimul
mov
push
dec
sbb
out
lahf
xor
adc
mov
or
imul
push
cli
adc
fs
(bad)
les
out
aam
jmp
ds
jne
ins
fstp
fcompp
or
inc
xor
cmp
jo
pop
fwait
jp
or
icebp
fst
mov
and
jo
daa
call
add
int3
and
ins
adc
dec
enter
mov
stos
xchg
(bad)
in
mov
es
(bad)
daa
in
mov
jns
inc
ja
and
sbb
popa
outs
cmp
imul
dec
imul
pop
mov
sub
(bad)
in
imul
inc
lods
ss
movs
mov
xchg
das
mov
jno
mov
sti
cmp
xchg
stos
xchg
cdq
sbb
or
lods
ds
mov
mov
je
lock
and
xor
ror
(bad)
mov
dec
dec
icebp
mov
sbb
aam
out
mov
cmp
inc
movs
icebp
sti
dec
and
and
in
popf
sbb
cmc
jns
jbe
aad
or
repz
out
sti
outs
mov
loop
lock
adc
movs
xor
sbb
(bad)
mov
movs
push
jo
adc
inc
xchg
sahf
adc
je
repz
mov
inc
xchg
imul
(bad)
sbb
adc
(bad)
popa
jb
jge
mov
out
ret
sub
loop
xor
mov
mov
pop
enter
sub
cmps
mov
pop
mov
push
xor
aas
(bad)
lds
int
dec
mov
jmp
jno
sar
(bad)
cmc
adc
sub
daa
jecxz
push
xor
adc
adc
rcl
pop
xchg
inc
xchg
mov
std
cmp
mov
repnz
rcl
xchg
jg
movs
jne
mov
shr
mov
cmc
xchg
ret
add
xchg
xor
sub
jne
xchg
lahf
sbb
mov
enter
jo
ret
sub
fnstcw
cli
stc
cmp
mov
sub
dec
cmps
dec
rcl
sbb
adc
popa
mov
dec
idiv
xchg
jp
jmp
fisubr
add
add
ins
or
add
sub
sub
js
or
imul
jbe
cli
inc
scas
les
std
adc
add
and
not
js
add
cmps
clc
sbb
push
cwde
clc
mov
pop
sbb
sbb
dec
lock
xchg
sbb
pop
js
mov
jno
sar
inc
inc
lods
push
cmp
mov
fisttp
cmp
mov
mov
std
push
jge
fwait
and
inc
add
lods
jl
jge
ja
xchg
dec
jns
adc
lods
fadd
mov
aam
mov
dec
inc
fs
gs
paddusb
push
pop
test
aas
mov
(bad)
adc
shl
out
es
mov
jmp
pop
xchg
sbb
pop
rol
pop
pop
pop
xor
push
cwde
jno
jg
adc
lods
and
outs
movs
add
xchg
pop
mov
and
enter
adc
mov
shr
repnz
push
fild
xchg
inc
clc
call
inc
hlt
std
int
sahf
fidivr
out
mov
add
adc
imul
sub
rcl
xchg
mov
cmp
call
adc
push
jecxz
xor
fnstsw
cmp
push
daa
aaa
cmp
xchg
lods
pop
retf
mov
test
inc
mov
cld
jne
add
lahf
xchg
ins
cmp
mov
mov
dec
adc
jmp
sub
add
xor
mov
mov
imul
pusha
fist
pusha
out
mov
outs
ja
les
mov
or
fld
push
mov
out
push
xor
(bad)
jle
mov
or
shr
jae
aam
and
and
por
repz
xor
gs
jmp
pop
adc
adc
inc
sub
fld
adc
(bad)
inc
in
fwait
ss
bound
and
loopne
sbb
or
call
leave
sbb
movs
movs
cmp
lahf
mov
xchg
dec
mov
stos
icebp
outs
sub
mov
push
sti
in
out
mov
mov
jne
mov
xchg
gs
cld
pop
jmp
repz
outs
pop
ret
imul
push
in
sar
or
aam
or
mov
dec
pop
cdq
mov
sub
iret
pop
jge
adc
sbb
mov
pop
into
aam
jle
sahf
mov
enter
or
mov
test
add
pop
arpl
xor
call
shl
scas
pop
mov
(bad)
pusha
sbb
scas
test
mov
lea
cmp
dec
mov
xchg
ss
add
stc
pop
or
add
aaa
adc
mov
ja
sub
(bad)
jl
jmp
fistp
(bad)
loop
ret
lods
mov
jb
mov
mov
adc
cdq
and
jp
xchg
cmps
mov
in
rol
or
jmp
out
imul
test
dec
xor
into
iret
dec
and
inc
es
adc
add
lds
pop
inc
sub
fwait
call
pop
stos
dec
jmp
lds
mov
neg
loope
fwait
mov
aaa
(bad)
mov
bound
pandn
and
ror
mov
pop
and
outs
fst
pop
jle
xchg
dec
dec
add
retf
mov
sbb
xchg
rcr
out
xor
xor
stos
ins
inc
inc
mov
dec
rcr
mov
pop
push
mov
data16
gs
mov
mov
add
clc
lods
leave
retf
or
stos
jl
sub
cmp
out
lods
or
push
cdq
in
cmp
scas
adc
xchg
add
jecxz
xlat
mov
mov
add
cmp
fmulp
loop
or
fwait
pop
aas
out
push
mov
int3
(bad)
pop
push
jne
xchg
adc
sub
jnp
mov
rol
and
popf
xchg
mov
mov
sbb
push
ss
dec
popa
sbb
mov
and
add
cmps
(bad)
cli
(bad)
(bad)
and
int3
stos
shl
pushf
jmp
ins
jmp
pop
mov
push
test
mov
int3
frstor
retf
add
inc
repz
not
lods
push
in
in
int3
fisub
cmps
aam
add
mov
sbb
cmc
test
movs
clc
retf
mov
mov
cmc
jo
push
push
out
mov
ja
jo
lock
push
or
push
xor
jns
jmp
mov
out
add
jmp
addr16
lods
add
jnp
rol
mov
dec
cli
cmp
dec
data16
fsubr
or
outs
and
or
mov
mov
aad
fstp
and
(bad)
outs
jmp
pop
sub
test
and
popa
outs
sub
leave
and
pop
shl
movs
jnp
ja
rol
aaa
sub
jmp
movs
icebp
jbe
lods
mul
or
mov
dec
mul
(bad)
stos
jb
add
outs
les
cmps
not
loopne
xchg
or
sbb
sbb
mov
and
cmp
aad
popf
std
push
and
push
out
or
mov
mov
test
iret
shr
push
div
in
mov
and
mov
xchg
and
test
mov
mov
add
sub
out
xor
inc
mov
test
cli
and
sbb
test
ds
fsubr
lods
movs
test
neg
add
dec
jl
xchg
mov
jp
pop
xchg
pushf
shr
xchg
jne
xor
jno
xchg
cmps
sbb
sub
jmp
fwait
imul
sub
inc
xchg
fisttp
scas
xchg
cld
sbb
aas
fld
cmps
addr16
imul
lahf
sub
cli
aad
iret
jl
test
xor
arpl
and
inc
in
or
aaa
fidivr
call
fwait
inc
test
es
inc
inc
mov
mov
test
mov
ja
jmp
scas
xor
sub
mov
loopne
fist
test
aaa
lock
inc
fsubr
(bad)
cmp
add
je
clc
das
pop
dec
xchg
lock
sbb
sar
(bad)
xor
in
clc
push
stc
jb
in
sub
out
pop
bound
xchg
cmp
mov
mov
ins
pushf
test
cmp
cmp
out
out
cld
mov
lds
loope
int3
jmp
sti
mov
push
xchg
sti
(bad)
sbb
adc
xchg
cs
ins
push
lea
ja
pop
sbb
sahf
les
cmp
cmp
cmp
mov
in
cmp
in
mov
inc
push
cmp
movs
xchg
test
pop
inc
sbb
pop
adc
repnz
retf
cli
pop
aas
ret
sbb
jno
test
mov
movs
ret
sti
sub
sahf
inc
bound
(bad)
rcr
in
(bad)
jb
and
sbb
jl
or
cmp
mov
in
repnz
daa
sbb
scas
loope
or
xlat
retf
mov
cmp
inc
or
call
lods
xor
pop
mov
ficom
mov
rol
pop
cmp
retf
imul
jecxz
repnz
imul
inc
nop
or
stc
add
imul
test
or
popf
and
jle
mov
inc
repnz
aas
push
xchg
test
pop
mov
pop
gs
add
cmps
out
retf
cmp
cmp
sbb
sbb
std
inc
scas
call
xchg
retf
sub
jbe
jge
repz
es
xchg
inc
aas
hlt
jnp
scas
mov
jne
adc
retf
jmp
sub
sbb
sbb
clc
repz
xor
out
shl
or
(bad)
call
cs
fadd
xor
test
jbe
loop
push
sbb
xchg
push
iret
mov
cmp
add
fst
mov
and
ins
rcr
lds
dec
call
add
sbb
fcom
sub
lods
outs
add
loopne
mov
cmp
sbb
pop
or
stos
or
div
pop
add
aad
or
cmp
cmp
inc
lods
sbb
and
cli
and
add
adc
mov
lock
movs
test
test
arpl
retf
push
add
mov
sub
xor
es
and
neg
loope
xchg
in
icebp
fwait
jl
int3
pop
push
(bad)
or
xor
jbe
cmp
pop
in
dec
mov
jns
(bad)
outs
sub
sbb
xchg
ja
jae
out
xchg
imul
mov
cmp
mov
repz
or
sbb
data16
lods
xchg
aad
adc
push
(bad)
cmp
cmp
add
out
add
and
pusha
rcr
jb
repz
cmps
aaa
xor
push
icebp
cld
mov
or
pop
gs
movs
shr
mov
lods
mov
xor
cmps
fnstsw
adc
mov
retf
imul
mov
xor
sub
aam
mov
cld
add
dec
sbb
or
(bad)
inc
cmps
sbb
mov
nop
dec
fisubr
mov
imul
add
mov
(bad)
pop
leave
aam
lea
aas
ror
inc
pop
jb
idiv
pop
in
xor
xor
xor
xchg
mov
pop
fucomip
sub
sbb
sub
push
fbld
mov
sti
scas
rcr
adc
adc
xlat
jmp
cmps
sar
shl
jne
dec
mov
xor
inc
mov
sbb
add
pop
fdivr
icebp
xchg
xchg
xchg
fstp
les
mov
or
adc
mov
mov
retfw
into
dec
pop
xchg
push
movs
test
push
test
jbe
dec
lods
mov
aam
mov
push
jb
jbe
sahf
cld
nop
cmp
enter
dec
xchg
pop
inc
addr16
xchg
fdivrp
and
sub
ret
mov
outs
inc
lods
dec
jb
push
ja
addr16
popa
fidivr
or
xor
jae
and
call
test
mov
cs
add
and
outs
scas
mov
add
shl
in
cdq
push
in
pop
add
pop
dec
and
sub
adc
and
mov
pop
rol
inc
pop
push
push
les
jl
push
pop
rcr
mov
adc
lds
movs
or
xchg
ins
xor
pop
jecxz
lods
movs
leave
repz
dec
dec
ds
jnp
outs
jae
(bad)
movs
push
cmp
cmps
push
cmp
xchg
jno
movs
mov
mov
fs
xchg
(bad)
pop
xor
cmp
xchg
xor
sbb
mov
lds
xchg
test
mov
aaa
outs
xor
jno
pop
push
outs
sbb
inc
or
sbb
js
push
push
or
stos
(bad)
fdiv
jp
mov
sub
pop
(bad)
data16
dec
scas
pop
pop
or
push
push
mov
adc
loopne
xchg
(bad)
push
adc
rol
cmp
push
movs
shr
push
mov
xor
leave
xchg
push
je
sar
out
bound
cmp
cmc
rol
inc
xor
mov
stos
lahf
sti
add
cmp
xchg
jecxz
js
mov
adc
xchg
call
xchg
jae
(bad)
fiadd
cmps
or
outs
inc
or
aad
mov
ud2
pop
add
cmps
sub
push
mov
aas
cmp
lods
sar
jno
xor
mov
jp
lods
push
and
push
bound
mov
or
adc
push
(bad)
mov
ja
in
repz
fs
clc
cli
pop
mov
dec
daa
sbb
ins
aad
xchg
or
out
mov
dec
ret
xchg
xchg
xchg
in
xchg
dec
cmp
sbb
inc
dec
shr
pop
or
rol
scas
cmc
push
lds
dec
push
nop
xor
xchg
into
shr
dec
(bad)
adc
xor
push
in
jmp
stos
adc
xchg
aaa
out
retf
push
pop
hlt
adc
and
inc
and
or
xor
inc
cld
ins
movs
aas
lea
mov
retf
inc
fstp
jbe
mov
out
dec
jno
stc
sbb
xchg
mov
dec
in
xor
sbb
enter
out
sub
cmp
fwait
xchg
cli
push
and
xor
mov
rcl
xchg
mov
mov
popa
mov
xchg
mov
and
or
(bad)
xchg
dec
xchg
nop
push
loope
fcmove
sbb
jmp
dec
pop
ss
adc
imul
xor
add
dec
mov
pop
jge
lds
in
and
in
aas
ins
outs
inc
cmp
pusha
adc
(bad)
scas
pop
sbb
fldenv
or
mov
add
mov
push
es
jmp
rol
fwait
adc
cmp
aad
jmp
or
popaw
push
test
xchg
sbb
adc
mov
movs
jecxz
bsr
dec
add
mov
cmps
iret
xchg
mov
xor
sub
rol
(bad)
dec
into
mov
(bad)
ins
enter
call
push
push
imul
jnp
pop
mov
pusha
(bad)
adc
inc
xor
add
pop
pop
cmp
shl
jecxz
pop
hlt
pusha
fsubr
fs
ret
mov
pop
mov
(bad)
retf
sbb
mov
sub
jg
xor
fisubr
mov
icebp
adc
popf
push
and
push
mov
icebp
test
in
lock
push
mov
dec
outs
popf
or
out
pop
or
cmp
and
cmps
mov
or
sbb
xor
les
xchg
cdq
fcomp
sbb
ja
fisttp
arpl
mov
imul
fadd
sbb
shr
sbb
test
pop
int3
in
dec
pop
add
lods
pop
icebp
movs
mov
out
div
sbb
ss
mov
dec
mov
push
popf
popf
hlt
mov
cmp
or
mov
lahf
sbb
int3
repnz
and
sbb
cmps
cli
shr
pop
mov
xor
cmp
lock
ja
push
mov
mov
aam
call
scas
or
inc
xchg
sti
jecxz
push
rcr
sub
int3
nop
mov
mov
jbe
jge
xor
or
mov
dec
xchg
test
or
xlat
imul
movs
xchg
xchg
fistp
movs
out
movs
dec
push
nop
push
mov
mov
test
mov
call
cmc
mov
retf
and
sti
and
pop
mov
pop
nop
sbb
je
pop
inc
or
push
sub
xor
and
dec
mov
adc
movs
and
adc
pop
mov
and
daa
mov
sbb
adc
out
or
lahf
fcomip
ret
mov
mov
mov
inc
sbb
and
movs
cli
frstor
push
mov
fnstcw
lds
in
mov
shl
rcr
ror
fcmovb
jp
cmp
iret
push
scas
or
sub
pop
sub
mov
call
mov
add
inc
xor
inc
jbe
mov
pop
stc
dec
pop
es
pop
repz
repnz
(bad)
loopne
and
cmp
loop
icebp
mov
add
stc
enter
inc
sub
jmp
mov
mov
(bad)
adc
lahf
jae
or
dec
or
inc
js
arpl
mov
scas
(bad)
enter
ret
cmp
mov
mov
add
push
pop
cld
push
or
sti
outs
arpl
cmc
add
sbb
xchg
mov
push
imul
mov
cmps
test
pop
sub
aaa
leave
loop
jl
daa
sti
mov
cli
fstp
std
dec
in
push
push
fldcw
ret
sar
push
jnp
out
data16
mov
and
clc
mov
scas
sub
mov
inc
fld
pop
cmp
xor
push
sbb
push
xchg
out
jecxz
fs
leave
pop
jmp
or
sbb
iret
mov
jp
add
ins
add
jmp
adc
aam
push
outs
ja
out
or
std
popf
repz
cmp
and
pop
push
sub
scas
leave
cmp
cmc
lahf
adc
jno
movs
out
pop
sbb
push
in
(bad)
popf
nop
push
push
repnz
scas
in
xchg
out
push
sbb
hlt
jo
xor
scas
popf
inc
bound
inc
jno
add
adc
cmps
addr16
or
aas
jb
push
(bad)
mov
mov
repnz
cmp
add
repnz
lds
jo
and
pop
or
je
xor
sbb
mov
xchg
mov
fs
add
cld
mov
jl
gs
or
cmp
das
nop
outs
mov
lock
or
push
or
fldenv
(bad)
(bad)
mov
or
jecxz
push
dec
jecxz
pcmpgtb
out
fadd
and
jnp
xchg
stos
mov
sbb
shl
dec
cmp
mov
lea
stc
jmp
cdq
add
fsubr
xor
xlat
sbb
mov
inc
mov
stos
aam
fdiv
shr
xor
cmp
inc
mov
mov
sub
fiadd
xor
push
scas
mov
enter
cwde
out
sbb
lods
shr
jns
xchg
xchg
int
outs
call
lods
outs
mov
jge
int3
jmp
movs
mov
or
bnd
mov
mov
cmps
jmp
imul
or
sbb
add
les
adc
fwait
in
pop
ss
inc
dec
push
cmp
(bad)
cmps
enter
in
xor
dec
xchg
mov
retf
xor
mov
lea
xchg
mov
lahf
xchg
inc
and
out
in
iret
lock
ins
cli
cmp
push
ins
push
push
mov
jge
rol
xchg
mov
pusha
adc
outs
adc
outs
inc
mov
clc
inc
stos
imul
daa
int3
repz
add
test
mov
repz
lods
(bad)
mov
popf
or
inc
rol
xchg
push
inc
mov
(bad)
sbb
fimul
jo
out
fnstsw
pop
adc
sbb
pop
pop
lahf
(bad)
cwde
and
retf
sub
cmp
aas
ins
sbb
out
push
add
xor
fcomi
rcl
or
inc
cmp
fdiv
int3
mov
and
test
adc
push
add
mov
jno
push
ss
(bad)
cld
mov
(bad)
repnz
add
adc
cmp
and
loope
add
xor
adc
data16
pop
dec
scas
add
stos
push
adc
cmp
cli
push
int3
stc
jl
icebp
inc
mov
and
cmp
movs
loopne
mov
mov
(bad)
(bad)
fiadd
fdiv
adc
push
mov
push
inc
push
lods
inc
jl
and
jae
sahf
push
inc
hlt
js
and
movs
jno
fisub
or
in
add
mov
pop
pushf
jg
sar
cmps
int3
in
inc
pusha
adc
pop
icebp
mov
mov
cmp
push
jge
sbb
call
ins
cwde
loopne
sbb
movs
es
xchg
fadd
jle
adc
repnz
pop
xchg
inc
hlt
push
or
xchg
mov
lahf
sbb
sub
cdq
ret
mov
lock
jmp
dec
stos
pop
mov
cmp
adc
cmc
sub
icebp
into
sub
leave
aam
jl
div
jnp
ins
fsubr
cmovp
mov
jp
mov
retf
mov
mov
dec
dec
dec
jns
xchg
in
pop
mov
jmp
and
repz
repnz
adc
inc
dec
mov
push
and
inc
sbb
in
jmp
mov
cdq
mov
loope
clc
lods
mov
shl
ficom
dec
xor
push
dec
xchg
fistp
mov
dec
repnz
lods
push
mov
push
dec
cmp
dec
aas
cmps
mov
por
repnz
loope
es
adc
push
push
jge
and
sub
xchg
popf
out
inc
(bad)
outs
test
push
xor
mov
push
hlt
add
enter
mov
or
(bad)
scas
inc
mov
sbb
sub
leave
and
lds
ss
mov
rcl
jns
cwde
xlat
cli
outs
fisubr
xchg
cld
(bad)
movs
shl
in
pop
jnp
inc
hlt
push
ins
mov
or
xchg
(bad)
cmp
dec
and
shl
mov
imul
adc
sbb
jnp
movs
cmps
or
sub
pop
in
jne
inc
or
stos
dec
popf
or
dec
je
out
pop
daa
lods
pop
add
fs
mov
stos
pushf
mov
ds
repnz
ret
inc
les
xchg
or
sbb
hlt
jl
mov
(bad)
lods
xor
xor
and
out
xchg
out
pop
scas
jmp
jmp
pop
mov
and
addr16
sub
cmp
bound
cmc
push
neg
push
inc
jnp
xchg
mov
je
sar
aad
jne
mov
push
and
enter
nop
push
(bad)
push
push
out
sti
retf
outs
out
shl
test
pop
pop
gs
imul
loopne
ficomp
bound
out
mov
scas
jae
mov
fdiv
aam
sub
sub
xchg
sub
jl
jmp
push
ror
pusha
jmp
push
push
shr
cmp
xchg
mov
dec
or
(bad)
shl
cmp
xor
or
mov
sbb
push
mov
test
or
jb
mov
dec
add
push
mov
out
push
dec
js
cmp
push
iret
inc
out
pop
push
pop
mov
mov
inc
or
test
sti
jg
pop
(bad)
xchg
or
pop
int3
mov
fld
das
mov
fsubr
mov
xchg
mov
add
data16
pop
imul
mov
inc
dec
ja
push
or
jne
int
stos
clc
inc
add
dec
mov
mov
fwait
mov
inc
in
xor
fnstsw
repz
gs
xchg
mov
rol
cdq
xor
adc
inc
outs
cwde
inc
xor
inc
push
push
or
sbb
xor
out
push
push
outs
or
sbb
xchg
fbstp
or
ret
and
jg
cmp
aaa
cli
mov
aad
sbb
pusha
(bad)
test
mov
(bad)
mov
jl
mov
repz
aaa
jnp
js
in
xor
mov
and
push
mov
push
mov
cli
xchg
ja
jmp
outs
cmp
sti
cmp
gs
outs
in
ds
popa
mov
mov
adc
das
xchg
or
add
sub
jne
lock
rcl
les
jne
adc
push
jns
fild
clc
nop
xchg
adc
pop
movaps
lds
div
mul
xor
pop
mov
push
xor
jo
jne
mov
inc
movs
es
lods
mov
retf
inc
(bad)
pop
adc
xor
adc
pop
inc
add
movs
mov
xor
or
and
ins
adc
adc
adc
and
and
mov
cmp
and
movs
xchg
out
aaa
jae
call
hlt
push
hlt
stc
pop
mov
and
into
jo
scas
test
je
stos
mov
clc
inc
xchg
cmp
xor
sti
or
xchg
inc
mov
sbb
mov
xor
into
std
mov
adc
add
imul
lock
dec
inc
cli
lock
add
sub
push
das
repz
mov
mov
ja
fdiv
stos
xchg
pop
movs
sbb
das
pop
cmps
(bad)
ja
push
dec
inc
push
icebp
retf
inc
cmp
jmp
call
sti
outs
and
pop
add
imul
leave
sti
xlat
mov
sbb
dec
sbb
push
mov
in
xchg
xchg
pop
sub
pop
lea
xchg
sbb
movs
lds
(bad)
cmps
cli
cs
outs
jle
push
(bad)
lock
imul
stos
push
lea
pusha
mov
xchg
push
and
and
je
js
and
mov
test
jne
ret
pop
rol
fstp
(bad)
mov
in
mov
sbb
mov
or
jns
xor
xchg
repnz
xchg
idiv
sbb
jnp
ficomp
push
xchg
push
popf
adc
dec
mov
int3
rol
stos
sub
lds
bound
pop
in
push
dec
mov
push
outs
pop
xchg
adc
inc
jle
adc
loope
loop
mov
mov
dec
adc
std
mov
and
push
sbb
test
xchg
test
fsubr
pop
test
enter
fnstcw
fisttp
movs
stos
sub
pop
sub
push
sbb
mov
push
inc
out
es
jg
jb
mov
dec
jae
jno
xchg
loop
mov
xchg
add
xlat
in
jae
int
arpl
iret
stos
sub
ret
scas
fsubr
ss
fcmovne
mov
shl
mov
outs
jne
sub
test
idiv
imul
outs
mov
cdq
ins
or
stos
fcomp
xchg
push
cs
xchg
call
jecxz
sub
jmp
xchg
ror
repz
stos
repnz
repnz
iret
inc
sbb
sub
cdq
sbb
add
dec
mul
(bad)
mov
iret
pop
ins
inc
adc
cmc
inc
cs
das
jo
or
cmps
or
mov
inc
push
retf
pop
jmp
cwde
in
stc
mov
pop
push
mov
das
je
jns
cmp
mov
add
dec
sahf
ins
add
mov
push
xchg
fdivrp
dec
addr16
test
popf
jmp
dec
inc
pop
or
cli
mov
dec
mov
cmp
ret
bound
or
push
jecxz
js
push
xchg
test
mov
in
xor
xor
cmp
mov
add
or
js
pop
sbb
xchg
mov
ss
pop
mov
adc
mov
mov
sbb
add
pop
sub
xor
call
cs
icebp
jmp
fmul
aaa
xor
or
push
inc
jnp
mov
call
daa
sti
fcomp
loopne
or
aaa
pop
call
dec
sbb
les
sub
push
lock
inc
add
ins
push
mov
adc
pop
push
fs
lds
lahf
xor
es
add
in
gs
mov
(bad)
push
inc
mov
inc
inc
div
push
jmp
ja
mov
jecxz
push
out
inc
dec
repnz
mov
jb
ror
and
stos
dec
imul
sub
mov
je
adc
cmp
push
sti
popa
push
stos
aam
gs
xor
adc
cmps
or
ss
push
inc
or
or
call
and
inc
inc
sahf
lea
outs
or
shl
fsubr
inc
adc
pusha
imul
pop
or
pop
jmp
inc
add
stos
or
jp
daa
lock
imul
dec
and
out
cdq
and
(bad)
addr16
sbb
sub
loop
shl
cmp
inc
(bad)
out
ins
xor
mov
and
mov
xchg
jecxz
fs
push
int
dec
cmp
int
je
(bad)
sub
or
sub
inc
and
cdq
ret
pop
fcom
add
pop
jnp
jmp
ror
or
mov
out
jmp
xor
ins
inc
adc
stos
dec
int
adc
xor
fstp
mov
xor
pop
ss
adc
rcl
mov
mov
pusha
add
push
push
js
mov
push
cmp
test
push
outs
sar
xchg
xor
jecxz
fdiv
inc
mov
jle
pop
push
mov
stc
sub
pop
ret
sbb
shl
jge
repz
cmp
sub
icebp
sbb
or
outs
clc
cmp
pusha
js
add
or
adc
imul
push
mov
jbe
mov
or
lds
fsub
test
clc
stc
jg
mov
dec
mov
pop
push
mov
sbb
pop
pop
mov
mov
nop
dec
test
rcl
int3
and
or
dec
sbb
adc
add
popa
mov
add
add
push
movs
imul
fsubp
fisttp
call
adc
lea
clc
daa
dec
jb
push
es
icebp
pop
pop
pop
adc
fcomp
jl
loope
scas
loop
(bad)
inc
xor
fisttp
out
add
movs
jg
aas
fs
pop
sbb
and
xchg
ror
adc
arpl
iret
add
shl
dec
xchg
daa
setg
jno
dec
(bad)
pop
mov
call
aaa
sti
out
mov
cmp
mov
mov
pop
cld
movs
and
xlat
jbe
cs
lock
or
sbb
dec
ret
int
push
inc
shl
xor
outs
lea
popa
retf
outs
sub
out
cmp
jns
and
fist
jmp
sub
mov
and
mov
mov
sub
and
inc
pop
(bad)
jle
jae
popa
fcmovu
test
aaa
mov
and
or
fdivp
mov
jmp
and
rcl
test
mov
xchg
cmp
test
jo
hlt
adc
data16
dec
(bad)
cld
mov
cmps
mov
jl
frstor
cdq
mov
loopne
jbe
xchg
add
inc
xchg
adc
mov
ror
out
cmp
push
pop
hlt
or
ins
jmp
call
mov
loopne
out
popf
or
mov
dec
adc
mov
push
mov
jae
lods
xchg
sti
stc
mov
xlat
mov
aam
lods
pop
and
shl
push
sahf
pop
dec
push
and
jne
mov
int
(bad)
call
xor
stos
arpl
push
add
pop
push
pop
mov
ja
stos
jecxz
inc
push
push
jle
add
mov
add
aas
pop
ret
les
fwait
mov
pop
mov
gs
mov
dec
jo
stos
(bad)
cs
sbb
mov
aad
mov
fnstsw
lods
test
add
mov
int
mov
dec
test
pop
xor
jecxz
test
sub
dec
sbb
xor
cdq
adc
test
(bad)
jge
int
aam
iret
cs
outs
out
loope
adc
push
aam
retf
pop
adc
fwait
sbb
adc
js
scas
imul
dec
jno
fucomp
xlat
out
adc
ret
call
pop
xchg
pop
mov
push
cmp
stos
mov
shl
ins
pop
fs
mov
sub
test
(bad)
push
ror
xlat
sbb
ss
out
ret
xor
test
fadd
aad
or
int3
out
or
push
loope
jnp
push
pop
and
pop
movs
in
out
mov
(bad)
jg
cmp
mov
mov
xor
iret
xor
sbb
lea
xchg
adc
stc
sub
out
dec
cdq
lods
xor
xchg
movs
(bad)
jmp
lods
pop
movs
pop
clc
dec
ja
lea
out
out
mov
test
cmps
or
xchg
dec
mov
out
push
add
lods
cwde
xchg
lock
pop
inc
sub
sbb
sub
lods
push
clc
xor
xchg
sub
cmp
push
inc
sbb
jp
fst
int
xchg
dec
shl
lea
imul
mov
icebp
or
mov
enter
int
jmp
fcomip
and
pusha
ret
jbe
push
sbb
inc
mov
mov
ds
jle
test
sbb
ffree
mov
adc
addr16
adc
adc
stos
mov
out
sub
cmp
mov
cmp
mov
aam
int
inc
dec
ret
(bad)
out
ds
pusha
mov
cs
mov
pop
mov
dec
pop
sbb
push
cmp
pusha
push
inc
xchg
ja
std
jg
(bad)
pop
lock
xchg
rcr
(bad)
test
ret
ret
push
std
sbb
cmp
inc
cmps
xchg
mov
lea
pop
adc
(bad)
add
ror
out
add
rol
and
sub
je
popf
mov
sub
out
cdq
add
jecxz
fsubr
and
stos
test
xchg
arpl
xchg
or
scas
in
mov
int3
mov
pop
hlt
je
aam
push
aam
jge
ins
rcr
push
dec
loope
cmp
sti
cmp
(bad)
mov
mov
bnd
or
cmps
inc
or
and
in
or
sub
in
out
pop
adc
jbe
pop
sbb
test
xchg
loop
cs
call
lds
pop
push
sar
mov
adc
adc
aaa
adc
pushf
lods
sub
mov
ins
mov
daa
cmp
push
stc
push
push
push
cmp
arpl
mov
test
sti
dec
repnz
int3
mov
jbe
cli
mov
xchg
mov
xlat
mov
sub
xchg
or
bnd
jl
or
movs
rol
push
sti
xor
inc
mov
dec
pop
jmp
outs
mov
ror
pop
pop
pop
mov
icebp
jecxz
ja
cli
lds
stos
sub
aas
or
rol
mov
xor
dec
js
sub
rcr
rol
xchg
shl
shr
jl
mov
leave
mov
cmps
stos
jp
js
push
mov
cmp
inc
xor
mov
or
loope
push
in
adc
or
inc
xor
dec
lea
jne
test
sub
bound
sbb
sub
inc
jnp
adc
jno
es
mov
and
pushf
lods
pop
dec
test
xor
and
push
add
js
mov
in
stos
ins
add
dec
push
add
adc
out
mov
or
(bad)
cmp
pop
sub
xor
inc
mov
jmp
mov
bound
jg
stc
stc
int3
adc
rcl
sub
jmp
arpl
inc
iret
cmps
ss
push
cwde
add
or
repnz
cmc
push
in
mov
sub
jne
pushf
adc
xlat
ss
pop
lods
ror
adc
aam
loop
mov
or
push
gs
mov
xchg
jno
jnp
aam
sub
and
pop
cdq
xchg
hlt
loope
jmp
cs
(bad)
fwait
sub
mov
cli
enter
fnsave
dec
adc
jecxz
inc
ja
nop
jo
mov
test
test
or
gs
inc
inc
bound
adc
dec
shl
test
hlt
jb
outs
push
xor
or
sub
xchg
sbb
lahf
cli
pop
dec
dec
shl
dec
or
jmp
loop
dec
dec
call
pop
or
inc
sub
jmp
xlat
fistp
pop
pop
and
inc
pop
mov
nop
push
ror
add
xchg
test
ror
ror
push
jo
pop
push
das
cmc
and
shl
pop
sar
sub
rol
xchg
scas
pop
mov
repnz
(bad)
scas
pop
stos
pushf
clc
retf
icebp
(bad)
cmp
shld
inc
sbb
outs
sub
sbb
sbb
vpsadbw
lahf
(bad)
jo
fs
leave
cmp
aaa
dec
(bad)
pushf
das
pop
cs
cmp
mov
cmp
cmp
xchg
jmp
cmc
test
xchg
or
jns
cdq
loopne
scas
int
xchg
inc
pop
arpl
mov
fst
in
clc
push
mov
and
pop
imul
out
xchg
push
stc
and
mov
bound
cld
out
dec
mov
retf
mov
retf
sbb
pop
dec
jo
iret
pop
ret
inc
mov
jns
cmp
push
ds
(bad)
or
movs
gs
popf
sbb
inc
ror
sub
inc
(bad)
jmp
fcomp
mov
stos
in
or
jnp
cld
sub
retf
fisttp
mov
pop
push
es
jno
loopne
add
aaa
aad
stos
cmps
clc
iret
jg
fmul
aas
int
stos
push
sub
std
xchg
nop
sub
jae
and
add
call
ror
and
add
(bad)
jnp
loop
and
mov
sub
sbb
sahf
mov
popf
call
mov
shl
or
mov
mov
jno
jo
push
pushf
shl
test
jns
mov
push
loopne
rcr
test
mov
sar
cmp
xor
pop
lods
arpl
dec
push
sbb
out
mov
push
or
xor
mov
ret
dec
cmp
shl
mov
add
xchg
pusha
daa
pop
pusha
pop
jecxz
mov
cmp
mov
retf
jnp
daa
adc
ins
or
mov
cmp
add
dec
cmp
aas
fisub
inc
psrad
loop
sti
cmp
shl
pushf
mov
xchg
sbb
sbb
and
sub
mov
(bad)
xchg
stos
jp
inc
adc
or
outs
je
out
pusha
mov
mov
mov
in
addr16
cmc
add
jne
dec
mov
jbe
and
jns
iret
sbb
xchg
jg
out
dec
scas
pop
nop
shr
pop
sbb
add
mov
sub
(bad)
scas
sub
mov
fidiv
ret
and
and
nop
adc
call
and
push
cmp
pop
or
push
sub
or
imul
cmc
jo
out
jp
lods
and
push
mov
shr
push
loope
ins
hlt
add
pusha
cmps
jae
dec
imul
push
jbe
adc
mov
xchg
addr16
stos
lds
stos
mov
and
mov
arpl
fadd
aaa
sbb
aad
test
outs
cdq
mov
(bad)
loop
imul
cmp
add
jmp
lock
push
shl
ins
cld
xchg
push
cmp
push
push
clc
stos
imul
ds
iret
push
inc
out
push
and
mov
mov
mov
or
dec
jmp
sti
dec
sub
stc
xchg
pop
cwde
xor
pop
sar
enter
(bad)
pushfw
push
sub
sub
in
mov
mov
mov
and
lea
add
mov
dec
movs
pop
add
jmp
lahf
xchg
ror
inc
sub
popa
mov
lods
push
movs
sbb
test
fmulp
ins
ss
add
xor
mov
sub
scas
hlt
das
cmps
fsubr
das
es
ss
dec
push
sub
inc
das
cmp
add
cmp
push
hlt
loope
push
retf
xor
sahf
das
ret
cmp
iret
jno
xor
ds
mov
int
repz
fisub
rcl
ret
push
cmp
xchg
stos
pop
push
fsubr
scas
scas
lods
dec
sub
sub
test
jge
mov
dec
mov
ins
pop
mov
cmps
fisubr
push
(bad)
out
js
adc
cmp
pop
aaa
or
imul
mov
sub
push
push
and
mov
and
ror
stos
or
nop
push
adc
push
fist
popa
push
push
push
das
fisttp
adc
sub
pop
cmp
cmp
pop
push
js
push
lods
push
(bad)
iret
test
mov
jno
outs
sbb
jb
xchg
cmp
pop
imul
into
inc
arpl
cdq
jp
std
xchg
mov
mov
test
dec
xor
subps
pop
xchg
dec
xor
lock
xchg
xor
mov
pop
cwde
ds
imul
sub
mov
pop
(bad)
call
pushf
es
cli
cmp
fisttp
xor
pop
xor
jmp
iret
xor
push
fucomi
and
ss
lds
retf
xlat
ins
push
movs
push
xchg
dec
inc
es
jno
loopne
inc
pop
(bad)
jmp
or
dec
mov
jge
stos
dec
clc
rol
outs
jg
jo
add
add
stos
(bad)
cmp
push
mov
pop
mov
sbb
rcl
retf
iret
jae
inc
enter
add
push
dec
(bad)
cmc
enter
xchg
test
dec
mov
jp
mov
fs
arpl
(bad)
ds
rol
pop
hlt
fistp
mov
xor
push
adc
in
mov
mov
aas
adc
in
push
jns
pop
push
sbb
bound
rcr
mov
enter
mov
and
jl
jecxz
mov
ret
ret
push
sub
shl
adc
daa
sub
dec
mov
inc
gs
adc
dec
jmp
rol
push
fdivp
imul
bound
(bad)
adc
cmp
cli
in
out
retf
mov
int3
daa
mov
je
cmps
mov
jecxz
add
push
fidiv
cld
cld
mov
in
jmp
dec
cs
addr16
sbb
cmps
mov
pop
push
cmc
ficom
xlat
xchg
sbb
icebp
dec
dec
or
inc
cwde
imul
xchg
mov
cmp
adc
or
imul
push
xchg
inc
nop
sub
add
pop
sbb
mov
xchg
fimul
mov
push
sbb
mov
stc
mov
dec
push
xchg
add
fdiv
loop
inc
fistp
arpl
pop
loopne
and
mov
ins
sub
sbb
add
cmp
mov
xchg
inc
lahf
or
cdq
xchg
scas
dec
jns
xchg
dec
inc
test
cmps
into
dec
ror
cmp
inc
jo
rcr
mov
jecxz
cdq
int3
sbb
adc
mov
int
mov
pusha
ins
in
and
cmps
lods
movs
sub
xchg
jmp
adc
aas
mov
in
js
outs
jle
xchg
test
cld
inc
cmc
movs
mov
jle
push
nop
jge
cmp
(bad)
xchg
popf
sub
sti
sbb
popa
jge
pop
lock
call
addr16
adc
cmc
(bad)
mov
mov
inc
into
aam
xchg
outs
sub
inc
mov
outs
in
mov
test
pop
out
sahf
fs
dec
add
xchg
mov
jl
leave
jg
push
pop
xchg
stc
lods
adc
add
stos
jbe
mov
xor
(bad)
or
ins
sti
fidivr
in
mov
adc
fist
and
inc
test
cmp
outs
cli
rol
jne
and
adc
retf
ja
ror
and
cli
jmp
pop
(bad)
pop
jp
jnp
fucomip
addr16
cli
lods
cs
xlat
pop
lea
fisubr
adc
repnz
call
int3
cdq
xchg
das
and
push
in
mov
fild
(bad)
les
gs
imul
xlat
pushf
dec
(bad)
ins
cmp
sbb
pop
outs
mov
and
pop
push
and
clc
push
pop
cdq
add
sbb
dec
int3
fwait
in
mov
inc
inc
xchg
jmp
std
shl
lahf
(bad)
xchg
in
movs
sahf
ss
aad
dec
jp
xor
lods
loope
mov
mov
in
sub
addr16
int3
ds
es
xchg
xchg
and
push
mov
adc
sbb
xchg
(bad)
dec
popa
loop
out
add
jle
xchg
rol
test
shr
push
xchg
cmovbe
hlt
test
inc
mov
jo
(bad)
ffree
inc
xchg
and
test
(bad)
xchg
dec
adc
cmp
adc
mov
mov
fs
and
jecxz
fisttp
xchg
and
das
subps
ret
retf
leave
icebp
dec
jle
xchg
inc
add
or
add
in
shl
je
in
mov
xor
icebp
or
xchg
mov
pushf
pop
retf
mov
push
sbb
pop
and
adc
mov
pop
xchg
and
push
pop
add
or
push
pushf
into
pop
mov
xor
and
ins
mov
(bad)
mov
push
jl
(bad)
in
lock
and
aaa
xchg
(bad)
adc
stos
jmp
mov
rol
mov
inc
jmp
pop
cmps
mov
or
cmp
js
dec
xor
arpl
ins
sub
cwde
in
lahf
mov
adc
das
shr
scas
mov
or
fnstcw
xchg
jb
mov
inc
mov
xchg
push
push
aaa
mov
sub
inc
lea
sbb
xor
outs
pop
pop
mov
adc
mov
sti
lds
hlt
jle
jl
mov
call
add
push
adc
mov
(bad)
adc
sub
cmps
pop
mov
in
jge
fisttp
loop
lds
hlt
mov
jecxz
jg
xor
and
cmp
mov
jle
not
pop
cld
pusha
adc
je
test
inc
and
and
out
mov
aad
xor
mov
cmp
bound
jmp
test
jmp
or
push
lods
scas
mov
cmp
mov
push
sar
leave
jp
stos
cmp
push
pop
xchg
sub
push
fistp
pop
dec
sbb
test
push
daa
fldz
clc
pop
and
les
ins
add
sahf
xor
cmp
mov
pop
jmp
jge
sets
in
stos
push
stos
and
dec
clc
cmp
add
mov
sbb
xchg
push
sub
inc
loop
adc
or
int3
call
ret
arpl
sar
mov
data16
mov
jbe
ret
or
jb
sub
fild
adc
cld
add
neg
call
movs
pusha
push
push
hlt
out
push
adc
mov
cmp
arpl
dec
test
sar
pause
push
int
push
cli
rol
(bad)
mov
stos
fnstenv
xchg
test
sbb
idiv
call
sbb
lahf
jae
xlat
sub
(bad)
add
and
mov
ja
daa
popf
xor
leave
or
or
hlt
mov
xor
test
jle
xchg
add
lds
adc
aaa
mov
dec
scas
(bad)
loope
pusha
icebp
mov
scas
imul
pushf
xchg
mov
dec
lds
push
inc
or
ss
clc
je
xchg
mov
push
outs
sub
(bad)
popa
in
and
test
mov
cld
mov
push
outs
mov
(bad)
dec
lock
movs
xchg
jmp
ss
push
lock
xchg
ret
cmp
(bad)
mov
mov
stc
(bad)
dec
push
mov
stc
sti
xor
inc
movs
xor
sub
or
jb
scas
arpl
jp
pop
inc
mov
(bad)
dec
jns
lods
sub
jb
test
(bad)
jg
mov
std
pop
adc
inc
xor
xchg
dec
aad
or
and
jnp
aaa
sbb
jmp
scas
push
jl
dec
(bad)
es
dec
loop
push
xor
dec
jno
add
xor
je
cs
int3
and
mov
add
scas
ror
jae
and
lock
add
add
mov
ins
jmp
mov
push
dec
jecxz
outs
shr
imul
mov
and
out
mov
or
xchg
rol
sub
call
call
cmps
sbb
ror
aam
aam
outs
retf
cmp
cld
stc
lods
sub
push
inc
cwde
adc
out
std
sbb
in
sti
mov
(bad)
mov
mov
dec
inc
rol
adc
push
xor
ss
enter
lods
rol
or
xchg
in
out
xor
and
mov
cmp
mov
xchg
push
bound
retf
inc
fld
les
retf
sub
cmp
leave
pcmpeqw
xchg
imul
adc
xchg
mov
and
cdq
loope
scas
enter
jg
add
retf
ss
ss
add
inc
loop
or
jmp
jp
sti
pusha
lods
ds
out
fstp
push
fcom
push
addr16
mov
xchg
lea
mov
lea
push
mov
jmp
push
repz
fsubr
sbb
repz
lods
jge
sub
dec
into
xlat
dec
xchg
outs
out
mov
push
(bad)
aad
inc
cmp
(bad)
sub
(bad)
cmp
daa
pop
in
(bad)
(bad)
inc
sahf
outs
jmp
adc
push
dec
ret
mov
pusha
xchg
sub
jg
aas
mov
daa
xor
pop
dec
xor
ret
and
sub
jb
xor
(bad)
fadd
dec
xchg
xor
pushf
xor
fstp
mov
jg
(bad)
lock
dec
xlat
sbb
mov
or
in
sub
push
ss
and
or
and
add
hlt
cmc
test
movs
add
(bad)
fcom
inc
cmp
fcomi
inc
jne
pop
ins
stos
or
pop
push
push
loope
arpl
and
fadd
or
int
rcl
ror
call
xor
ins
scas
(bad)
out
mov
adc
arpl
das
das
xor
xchg
das
fiadd
jb
adc
leave
out
jle
pop
mov
jno
jmp
fiadd
pusha
inc
add
add
sub
sbb
and
inc
or
xchg
shr
push
int3
jb
sti
mov
(bad)
sbb
mov
pop
mov
or
jne
push
stc
loopne
fisubr
lahf
inc
inc
inc
jp
mov
sub
jb
aad
aam
push
imul
(bad)
sub
pop
and
inc
movs
popf
jae
jl
cmp
cmp
loop
pop
fstp
mov
jecxz
jbe
mov
dec
fisub
div
mov
mov
adc
stc
mov
mov
into
push
aam
loope
inc
es
adc
add
pop
inc
mov
outs
xchg
mul
ret
jbe
sti
fiadd
dec
push
popf
data16
xchg
mov
adc
xchg
rol
out
inc
hlt
ret
pop
bound
pop
xchg
mov
sbb
cmps
jne
push
imul
frstor
sbb
mov
bnd
adc
sbb
xor
popa
or
mov
icebp
call
lods
mov
cmp
in
and
arpl
movs
xchg
stos
out
push
aad
mov
xor
push
xor
and
test
dec
inc
cmp
das
and
lods
xlat
cmp
fcmovne
dec
inc
ret
mov
and
add
fild
xchg
push
cs
add
repnz
dec
addr16
retf
sbb
push
enter
dec
test
outs
call
loop
ja
mov
fwait
inc
mov
xchg
mov
sti
das
push
out
push
je
jb
sub
sahf
cmp
fbstp
test
push
mov
je
xchg
stos
cmp
call
add
sahf
mov
mov
lds
out
xchg
jns
inc
and
push
daa
add
imul
sub
mov
out
loope
mov
pop
stc
cmp
iret
cmp
pop
pop
outs
inc
mov
jno
call
clc
pusha
(bad)
pop
and
shl
add
sbb
pop
fnstsw
js
movs
pop
xchg
xor
out
xor
jge
(bad)
aaa
scas
inc
jge
psubb
test
icebp
xor
js
cmp
rol
std
sbb
fs
push
pop
(bad)
cmc
test
and
ror
dec
xchg
sub
cli
test
mov
in
sbb
stc
mov
cmp
clc
or
cmp
in
sbb
fild
mov
jo
xchg
push
or
(bad)
mov
mov
sbb
mov
or
xchg
mov
repnz
jecxz
aam
mov
aam
lock
test
loopne
mov
push
nop
sbb
pop
xor
lock
and
fisubr
add
rol
test
pop
fs
sbb
and
ins
dec
push
leave
sbb
fidiv
xor
mov
mov
iret
jmp
imul
or
lods
fdivr
fyl2xp1
retf
mov
mov
add
cmps
into
dec
dec
test
push
mov
call
sub
mov
call
jns
jb
dec
xor
into
push
out
je
in
shr
add
sbb
and
xchg
sbb
inc
das
pop
iret
sub
pop
sar
mov
sub
jbe
sub
cmp
cwde
and
mov
cmp
repz
jbe
dec
mov
ja
inc
clc
mov
fsubr
adc
mov
test
sub
or
mov
je
push
jp
jae
jne
push
test
cmp
retf
or
imul
cld
jne
xor
test
neg
leave
aad
in
sar
sub
push
cld
jnp
pushf
pop
cmps
fdivp
retf
cmp
xchg
sub
movnti
mov
pushf
adc
pop
jl
or
mov
cmc
mov
stos
xchg
in
dec
push
adc
jns
pop
mov
aam
mov
sub
cmp
pusha
out
loope
dec
and
push
fs
mov
push
(bad)
xchg
jae
dec
in
push
sbb
dec
adc
mov
(bad)
xor
adc
cmps
jmp
das
sbb
(bad)
loopne
movs
ins
mov
cmc
or
out
fcomp
aad
inc
inc
xchg
rcr
cmp
lods
fstp
loopne
in
repz
sahf
outs
test
loope
xadd
sub
movs
ss
mov
shl
mov
jmp
shl
xlat
dec
cs
pop
pop
mov
dec
pop
cmp
dec
into
movs
aaa
xchg
xor
(bad)
jb
cmp
mov
or
lods
outs
push
dec
jecxz
sbb
jp
(bad)
xchg
jb
pop
ds
shr
sub
inc
(bad)
fidiv
clc
or
jecxz
jnp
mov
push
add
ret
lea
int
add
mov
ins
inc
int
test
push
and
mov
push
xlat
inc
pop
and
and
(bad)
jbe
cmps
adc
xor
mov
ror
sti
cmc
nop
cli
ja
inc
stos
mov
leave
pusha
cmps
adc
mov
leave
fs
mov
outs
movs
mov
xchg
popf
pop
push
ins
jnp
movs
repz
sbb
jbe
lods
les
rcl
or
fimul
pop
push
iret
push
mov
repz
jns
stc
inc
stos
test
loopne
(bad)
push
mov
add
popa
enter
push
mov
add
mov
push
cmps
push
aaa
sub
pop
push
or
test
and
stos
xor
pop
repnz
xor
and
sti
jne
fadd
das
outs
gs
and
jmp
arpl
retf
add
bound
mov
lds
sbb
or
das
sub
enter
test
mov
loopne
mov
add
test
or
xor
test
in
or
aas
fadd
shl
fsubr
into
cwde
adc
xchg
inc
mov
mov
sbb
add
mov
int
addr16
xor
ret
arpl
jmp
ret
daa
mov
fistp
inc
pop
and
les
sbb
bound
mov
scas
loop
adc
call
or
movs
out
or
mov
cmp
shl
jle
rep
scas
pop
fstp
jmp
mov
jge
icebp
(bad)
loopne
add
aam
push
sbb
into
or
push
fcomp
aad
mov
cs
mov
hlt
les
enter
(bad)
hlt
xchg
iret
xor
adc
stos
push
ins
pop
mov
jmp
mov
add
es
in
jae
jg
icebp
in
cmc
cs
add
test
jmp
shl
scas
fiadd
jno
pop
ret
loopne
arpl
xor
movs
mov
stos
daa
jge
jno
jae
rol
pop
fwait
mov
push
out
stos
call
mov
test
fwait
stos
(bad)
and
mov
mov
xchg
ins
out
cmc
sbb
mov
add
jmp
sbb
sbb
dec
fdivr
in
lods
mov
loopne
cmp
das
add
ret
mov
test
popa
push
(bad)
fist
out
sbb
ror
xchg
rcl
shl
jmp
les
popa
in
int3
xor
xor
jp
(bad)
fsubr
sahf
dec
xor
jl
sub
cwde
jae
fidiv
ins
xchg
mov
cmp
fsubr
hlt
inc
adc
aam
and
pushf
lds
push
(bad)
test
xchg
cld
add
ficom
addr16
mov
ja
xchg
or
push
add
jmp
xchg
cmp
stos
pop
pop
rcl
push
xor
or
stos
loopne
mov
xor
out
fistp
dec
jg
mov
mov
shl
lahf
lods
inc
pop
inc
shl
mov
or
movs
pop
(bad)
cmp
dec
jp
add
inc
mov
fsubr
sub
sub
sar
test
cmc
pop
push
or
jb
rcl
stos
out
(bad)
mov
cmp
in
sbb
mov
push
sahf
mov
mov
sbb
and
lods
lock
sbb
retf
add
xchg
and
add
(bad)
repz
push
pop
nop
lahf
sbb
cld
fistp
rol
pop
lods
inc
shr
mov
mov
ins
aad
mov
cdq
mov
or
or
test
mov
cld
xor
(bad)
cmp
inc
push
jno
sub
retf
ins
imul
xor
add
xchg
jnp
mov
ins
push
dec
jge
sbb
and
push
shl
sar
sub
sbb
aam
jnp
enter
adc
out
cmp
ror
pop
pop
rep
mov
ret
inc
mov
(bad)
(bad)
js
push
push
push
mov
popa
pop
outs
ss
mov
mov
stos
out
jo
(bad)
xor
push
inc
sbb
adc
rol
jae
xor
cli
popa
mov
mov
or
cmc
(bad)
inc
in
jne
sub
test
fsubr
stos
ins
cmp
mov
jl
add
dec
mov
repz
sar
pop
scas
mov
or
mov
test
push
fst
hlt
xor
xor
shl
xchg
(bad)
pop
cmp
mov
and
stos
mov
es
mov
shl
movs
std
push
mov
mov
xchg
int
pop
test
in
in
mov
out
jnp
jmp
outs
push
xchg
adc
jge
mov
ds
push
cwde
dec
imul
loop
sbb
js
(bad)
in
fbld
rcr
adc
jecxz
iret
icebp
push
xor
sbb
ins
mov
aam
sub
in
pop
pop
pop
fsub
rol
sar
mov
imul
bound
push
dec
icebp
pop
mov
xchg
stc
test
pop
ss
xlat
cmps
cmp
mov
jb
fistp
pop
or
or
stc
mov
rol
mov
jne
stc
dec
pop
xor
jae
jecxz
push
sub
ins
dec
jb
(bad)
xchg
xor
imul
inc
in
test
mov
hlt
imul
dec
inc
ds
xchg
adc
jmp
inc
mov
gs
jl
mov
pop
jecxz
(bad)
jno
ds
cdq
iret
sbb
jns
jmp
dec
inc
dec
mov
leave
lds
jmp
add
push
fmul
mov
scas
js
sbb
adc
mov
rcr
xchg
test
clc
call
not
int3
jns
ins
sti
or
pop
inc
xchg
bound
mov
bound
aad
cdq
fmul
push
or
jmp
jge
sub
sahf
and
or
add
(bad)
push
fsubr
jbe
icebp
mov
mov
fs
jecxz
xchg
in
sbb
cmp
rep
loope
cmp
jne
shr
jbe
cmp
repz
mov
jmp
test
pop
mov
mov
gs
mov
sbb
daa
icebp
mul
jecxz
fcmovb
and
cmp
sbb
sbb
loop
test
hlt
xchg
mov
jbe
sbb
cmps
pop
and
or
outs
inc
xchg
bnd
into
mov
in
xor
cli
lock
cmp
fdiv
mov
mov
inc
mov
stc
fist
(bad)
or
int
arpl
push
test
and
rdtsc
push
inc
aad
push
push
xchg
xor
sahf
push
mov
xchg
mov
push
dec
mov
jo
lds
je
push
outs
dec
push
push
cmp
popa
pop
and
test
out
test
stc
and
cdq
ret
xchg
into
inc
pop
sahf
mov
xchg
mov
and
shl
push
dec
add
inc
(bad)
js
or
cmps
pop
outs
test
test
(bad)
fnstsw
js
retf
in
and
jmp
xchg
lods
inc
call
mov
pop
xchg
jle
arpl
retf
call
or
scas
adc
pop
mov
inc
xchg
adc
xor
mov
std
cmp
rcl
stc
sub
stos
xchg
mov
or
inc
js
pop
sub
xlat
je
jnp
mov
mov
and
sbb
loopne
loop
sti
or
jb
js
daa
cdq
in
(bad)
cmp
xchg
fwait
mov
outs
pop
outs
mov
cli
mov
clc
cmp
mov
retf
mov
rcr
inc
out
sbb
gs
jns
es
ins
es
dec
mov
dec
bndldx
cmp
inc
pop
iret
inc
dec
push
scas
jb
cli
jecxz
mov
or
aad
inc
test
inc
pop
popa
loop
test
push
push
push
cmps
ins
pop
push
sub
(bad)
or
(bad)
and
aad
lock
ins
pusha
adc
leave
mov
fs
test
dec
pop
out
inc
(bad)
mov
inc
mov
mov
sbb
aas
std
pop
cwde
add
push
mov
mov
sbb
push
repnz
ja
imul
and
outs
repnz
cmps
lea
jns
and
jmp
cld
dec
jle
retf
inc
push
in
stos
retf
xchg
add
xchg
fimul
inc
pop
dec
sar
sahf
dec
mov
fadd
add
add
cmp
lods
aam
fdivr
cmp
in
add
int
sub
mov
jne
pop
pop
cli
push
sub
cmp
add
arpl
das
xchg
cmp
inc
test
pop
je
lock
pop
dec
dec
sub
fisubr
jb
pushf
and
jno
enter
cmps
push
adc
es
sbb
idiv
cmp
jno
inc
push
mov
cli
cmp
cld
test
adc
in
fs
fcomp
(bad)
mov
arpl
(bad)
sbb
xchg
adc
fdiv
xchg
scas
lock
dec
imul
pushf
cmp
cli
dec
dec
stos
push
dec
adc
fs
jne
inc
add
int
addr16
dec
dec
sub
add
stos
xor
test
xor
dec
cmps
xor
xchg
imul
adc
in
sbb
jg
jecxz
adc
cmp
int3
fwait
adc
mov
cs
mov
fdivrp
and
push
cmps
out
push
shr
mov
add
add
mov
out
loopne
sbb
jle
fisttp
push
cld
cmc
inc
and
lea
push
push
mov
or
inc
int3
pop
sub
out
in
jbe
push
jecxz
jb
push
add
outs
jmp
test
dec
pop
adc
hlt
cmp
aas
popa
mov
in
mov
or
xor
stc
jp
pop
and
add
dec
fst
movs
fild
test
sbb
push
pop
adc
sbb
pop
or
dec
xor
out
or
or
mov
lahf
idiv
xchg
mov
pop
iret
pop
shr
jnp
jb
cmps
jno
les
sub
das
mov
adc
test
xlat
push
int3
cmp
adc
mov
pop
bound
jns
and
and
or
add
mov
xchg
cmp
outs
pop
pop
inc
(bad)
mov
sub
clc
popf
in
jno
jno
mov
cmp
pop
loop
dec
xor
imul
repnz
outs
push
popf
movs
add
jne
out
sbb
and
cmp
cmp
stc
or
jg
scas
mov
mov
shl
push
idiv
aas
pop
cmp
stos
js
out
and
test
cwde
mov
sti
mov
rol
das
sbb
mov
in
pop
and
cmp
xor
pushf
nop
popf
sbb
jmp
cmp
sar
mov
sbb
test
adc
sbb
hlt
lds
add
sbb
push
ret
cli
or
aaa
cmp
jl
push
sahf
push
js
fwait
shl
xor
out
sbb
aad
jnp
addr16
imul
add
inc
imul
pop
out
loop
inc
dec
lea
dec
sahf
aad
xchg
mov
pusha
inc
jmp
jmp
push
mov
leave
gs
je
cmc
inc
cwde
or
(bad)
mov
adc
sub
xor
sbb
mov
jo
lahf
lea
loop
aam
pop
arpl
mov
jnp
lods
push
imul
int3
sub
cmp
push
js
stos
mov
xor
mov
(bad)
cmp
and
imul
xchg
int
mov
fldl2e
test
mov
jno
imul
js
or
sbb
aas
inc
ret
sbb
pushf
fsubr
adc
(bad)
jl
mov
add
and
mov
mov
in
nop
outs
test
retf
cmp
sbb
mov
xor
(bad)
ret
scas
mov
rol
sbb
xchg
or
xor
push
ja
aas
inc
cdq
add
std
inc
cld
sbb
scas
cmps
popa
jg
adc
adc
hlt
jmp
sub
in
out
jmp
leave
ins
push
mov
scas
into
dec
push
leave
sub
mov
add
mov
adc
cwde
lea
push
mov
or
adc
jb
cdq
ror
jne
fdiv
mov
sbb
add
pop
sahf
sbb
sti
pop
push
adc
and
mov
outs
pop
fcomp
xlat
mov
or
cli
ret
or
shl
cmp
pop
push
mov
sbb
xchg
call
aam
mov
add
in
cmp
test
adc
pop
mov
xchg
adc
fistp
push
mov
(bad)
sub
push
push
lods
cmp
retf
push
inc
cwde
and
push
loop
outs
das
repnz
les
jne
loop
mov
imul
add
dec
or
mov
cmp
push
outs
fnstenv
mov
std
xchg
mov
push
cmp
mov
repnz
ud0
mov
sbb
xchg
or
mov
js
test
in
sub
mov
pop
daa
and
jo
push
shl
jbe
mov
xchg
inc
jns
jno
sbb
mov
mov
cmp
aaa
and
iret
out
pop
push
cmps
jge
mov
or
(bad)
popf
lea
push
jl
dec
into
or
pop
sub
fadd
xor
call
inc
sub
pushf
in
mov
iret
push
sub
or
ins
clc
mov
inc
adc
sbb
dec
int3
lock
scas
inc
inc
js
push
cmp
bound
jmp
pop
xor
adc
jns
xchg
sahf
mov
jno
int3
cmp
dec
rcr
std
int3
push
cmc
je
pop
scas
gs
(bad)
or
push
outs
lahf
and
repnz
fnsave
adc
xchg
clc
clc
sti
test
push
cmps
jne
jnp
mov
scas
repz
scas
pop
(bad)
lods
jno
xlat
jp
shr
mov
jecxz
aam
or
fadd
inc
jg
sub
inc
dec
xchg
mov
sbb
mov
mov
xchg
pop
adc
imul
xlat
mov
pop
cmp
push
pop
dec
sub
mov
pusha
outs
dec
mov
pushf
adc
cmps
add
jmp
out
sbb
cwde
aas
loope
pushf
push
scas
cwde
mul
push
leave
inc
int3
push
or
dec
(bad)
ds
rol
jle
es
std
add
iret
in
aas
fdivrp
adc
in
cmp
cmp
dec
call
jmp
fisubr
sub
dec
jne
xor
out
sbb
add
loope
sbb
ins
adc
outs
mov
cmp
shr
or
mov
mov
mov
dec
pop
pop
lahf
or
push
sub
in
jecxz
ins
test
es
or
call
js
or
xor
clc
mov
outs
test
dec
mov
or
shr
(bad)
add
(bad)
sti
or
lods
(bad)
pop
fiadd
sub
mov
adc
sbb
xor
pop
add
sbb
(bad)
xlat
(bad)
int3
test
lods
retf
ffree
xor
clc
nop
int
and
push
inc
test
pushf
sub
js
sub
ret
push
ficomp
or
add
jne
pop
je
jecxz
rcr
shl
lods
mov
sub
inc
dec
xchg
aas
xchg
xor
add
leave
(bad)
in
inc
test
inc
lods
call
mov
pop
daa
sub
aad
iret
sub
pop
loope
sub
cmp
xchg
shr
retf
jmp
es
push
movs
(bad)
dec
test
hlt
xchg
fstp
mov
mov
add
fmul
scas
in
cwde
sub
adc
cdq
int3
add
mov
in
jno
mov
add
ins
push
call
pusha
cdq
aas
dec
sbb
test
mov
xor
fidivr
call
sbb
xlat
push
test
and
popf
inc
fist
pusha
ins
out
or
fs
push
and
les
jo
(bad)
loop
fsubr
aam
sub
xchg
xchg
daa
in
retf
cmp
enter
addr16
in
inc
arpl
dec
loop
test
jb
loop
cmps
adc
mov
push
data16
outs
cmps
mov
fld
xchg
xchg
ins
and
(bad)
clc
fisttp
dec
outs
jae
sahf
bound
add
dec
cmp
push
nop
in
ss
rcl
pop
adc
call
sbb
lods
pusha
pop
cmps
inc
mov
out
(bad)
stc
mov
add
rol
mov
movs
jno
or
add
and
sub
in
(bad)
aas
imul
aad
stc
inc
push
aam
cmp
inc
enter
mov
stos
lea
mov
sbb
xor
xor
cmp
mov
xchg
in
outs
xchg
sub
jmp
adc
mov
loope
outs
xor
sub
pop
dec
outs
dec
xor
int3
jmp
lea
inc
imul
jmp
add
ds
inc
sub
add
or
jmp
ins
cmp
scas
lahf
push
mov
push
ret
repnz
ret
call
mov
lods
cwde
mov
mov
ja
xchg
es
sbb
adc
mov
pop
loop
mov
fisubr
sbb
pop
xchg
jmp
loope
inc
pop
movs
sbb
dec
xchg
cli
test
movs
and
js
add
lock
or
jg
pop
fcmovnb
movs
outs
adc
ret
(bad)
and
cmp
jno
fstp
leave
add
xchg
xchg
les
aas
loop
dec
ja
mov
jmp
call
out
dec
lea
(bad)
adc
aas
xor
repz
int
inc
pop
push
into
pop
mov
sahf
jmp
cmp
lods
add
rcr
test
popa
pop
push
inc
mov
mov
push
retf
fbld
mov
enter
xor
in
cmps
push
push
in
popf
jg
stos
cmc
rcl
aaa
iret
jg
hlt
jae
push
inc
add
pusha
and
add
mov
pop
and
jp
adc
pop
jbe
cmp
adc
push
mov
mov
or
jp
pop
test
adc
outs
dec
imul
loope
sub
inc
xchg
push
test
cwde
cdq
pushf
push
lock
mov
mov
lds
lods
ins
jns
(bad)
xchg
mov
mov
stos
inc
in
add
mov
imul
mov
(bad)
fwait
pop
outs
pop
std
jb
mov
jnp
ins
stc
push
sti
out
inc
sub
jl
add
jo
xchg
cmp
jne
pop
cmp
(bad)
outs
mov
inc
xor
scas
adc
lock
mov
out
imul
xchg
test
push
jg
xchg
mov
dec
xchg
mov
rcl
sbb
mov
mov
xchg
sub
xchg
ror
jnp
sub
test
adc
mov
mov
xor
fs
rsm
outs
or
scas
loop
gs
out
jo
push
pop
iret
fisub
dec
das
bound
into
repnz
mov
pop
into
inc
fsub
cmp
nop
lea
in
cmp
jnp
or
in
mov
and
rcr
adc
ret
inc
mov
dec
push
ins
pop
mov
nop
push
push
adc
sub
mov
sub
jb
xchg
xchg
rol
inc
aad
mov
or
int3
sub
pop
idiv
aas
or
aas
repnz
movs
cs
xor
add
sbb
retf
adc
sbb
fst
fdivr
pop
mov
inc
jne
out
daa
(bad)
push
mov
dec
jge
adc
std
rol
dec
les
test
shrd
ja
mov
xchg
sahf
std
cwde
pop
and
inc
fisttp
stos
push
lock
and
fisubr
mov
inc
sbb
and
mov
iret
stc
push
or
mov
call
push
xor
stc
xor
sub
xchg
add
and
loop
mov
xor
fwait
jb
cdq
mov
nop
popf
and
mov
sbb
xor
lods
xor
fbld
cli
sub
mov
add
out
mov
jge
add
call
mov
idiv
adc
xchg
mov
jmp
shl
in
xor
cmc
or
lods
loope
push
jl
je
cwde
lds
iret
ins
in
inc
ds
lods
sbb
(bad)
loope
dec
clc
in
lahf
and
pop
pop
cmps
(bad)
into
mov
jl
mov
sar
sar
imul
scas
mov
and
xchg
inc
popf
lods
adc
je
stc
and
retw
xchg
rcr
je
xor
or
daa
dec
pop
shl
pop
fidivr
mov
and
jb
(bad)
jp
std
xlat
movs
push
and
ins
(bad)
ss
ret
mov
xchg
pushf
mov
scas
pop
sahf
mov
addr16
idiv
add
scas
mov
sub
ret
cmc
mov
jp
adc
pop
xchg
pop
out
mov
in
cmp
ror
pop
retf
(bad)
pop
scas
dec
cmp
cmp
out
inc
mov
mov
or
dec
jl
adc
xchg
mov
jge
(bad)
fwait
cmc
nop
and
jge
ds
sbb
cdq
push
inc
jmp
lods
or
fimul
add
inc
add
imul
pop
mov
sbb
sub
mov
icebp
mov
inc
aam
adc
stos
jno
and
sub
into
mov
push
fwait
out
test
mov
xor
fistp
dec
or
daa
mov
enter
outs
fldenv
ins
xor
push
sub
jno
adc
add
cdq
js
add
scas
shl
adc
mov
mov
cmp
int3
mov
xchg
mov
sbb
mov
push
inc
out
pop
scas
cld
xchg
dec
push
xor
mov
aas
cmps
mov
add
jg
movs
jg
and
into
inc
fdivr
fnsave
dec
and
xchg
gs
add
cmp
fbld
mov
sti
jmp
inc
push
sub
jnp
xor
mov
jmp
mov
or
aas
mov
xor
pop
aaa
in
sahf
cmp
aam
rol
and
into
test
clc
lods
adc
enter
mov
outs
(bad)
icebp
sub
cmc
mov
cmp
icebp
outs
xor
out
cld
test
dec
jle
push
jmp
inc
xchg
push
jecxz
int
mov
cs
outs
in
jg
cmp
mov
xor
inc
stos
jno
inc
lea
xchg
in
push
(bad)
push
push
call
je
push
xor
das
bswap
add
fdiv
iret
jb
(bad)
mov
add
pop
sbb
cmc
retf
and
mov
sub
stos
ss
adc
mov
or
push
adc
jnp
jmp
pop
leave
mov
sub
cwde
out
cli
mov
and
iret
jg
ret
nop
dec
fmul
mov
gs
aas
scas
mov
push
inc
sub
dec
cwde
fisubr
lods
xor
ret
pop
aas
or
addr16
xor
pop
test
add
sub
int
mov
out
mov
cmp
int3
and
adc
int
outs
std
or
pop
movs
xlat
jge
push
dec
sbb
or
(bad)
jmp
cmp
mul
xchg
movs
sbb
pop
leave
inc
xchg
inc
test
push
out
pop
mov
pop
outs
add
sub
and
push
pop
js
xor
cdq
scas
fwait
rol
pop
jmp
ja
mov
inc
gs
jl
cmp
xor
cld
mov
jecxz
imul
fild
mov
loopne
dec
sub
sub
push
dec
sub
add
sub
xlat
cmp
add
or
jns
out
call
pop
xchg
cmp
sbb
dec
jge
jae
outs
fcmovb
add
pop
dec
outs
cmp
icebp
repnz
es
mov
call
stc
xrelease
into
mov
pusha
mov
into
gs
sub
jae
pop
jnp
mov
retf
es
lock
push
adc
sahf
icebp
jae
ret
jb
jmp
sub
push
fisub
mov
xor
and
dec
or
and
popa
out
pop
cmps
pop
sub
mov
retf
imul
std
xchg
xchg
sbb
inc
lods
push
in
ins
xchg
fist
out
push
jb
sbb
icebp
repnz
mov
fs
aas
jnp
pop
mov
inc
cmp
adc
repz
push
and
dec
ror
cmp
xor
and
push
shl
in
ins
jge
mov
into
pop
sbb
das
sbb
scas
int3
movs
adc
bound
stc
arpl
loopne
mov
mov
lods
pushf
mov
outs
call
or
stos
pop
cmp
sbb
jge
lods
stc
mov
dec
push
(bad)
retf
rol
jmp
adc
icebp
lahf
rcl
ss
add
add
sub
pop
push
push
push
jl
xor
or
stc
loop
add
push
pop
aas
lods
add
test
cmps
jnp
aad
mov
adc
jne
push
xchg
dec
and
scas
rcr
pop
sub
lods
(bad)
stos
xor
cmp
movs
inc
sub
or
jae
test
cmp
dec
xchg
mov
jmp
pusha
adc
(bad)
xor
xor
jno
jo
pop
sbb
cli
jp
dec
outs
in
inc
push
movs
inc
arpl
(bad)
mov
(bad)
jno
cdq
(bad)
out
pushf
add
jo
or
pop
data16
ins
push
sahf
movs
(bad)
addr16
es
or
cmc
xchg
add
movs
xor
xchg
icebp
adc
add
adc
jae
jg
cmp
jbe
sub
pop
jg
idiv
mov
popf
cmps
es
xchg
jbe
jl
ret
sbb
imul
jae
inc
mov
fidivr
mov
(bad)
enter
push
push
(bad)
fstp
pushf
out
jno
adc
jae
xchg
in
adc
and
xchg
(bad)
sub
adc
(bad)
push
xchg
aad
out
xor
add
addr16
add
repz
adc
xchg
mov
pusha
xlat
mov
xchg
xor
in
popa
sbb
cmp
xor
adc
stos
in
pushf
push
and
popa
xchg
mov
pop
not
ret
dec
popf
jns
pusha
jbe
sbb
pop
ror
sub
fcom
call
cmp
push
retf
and
sub
push
icebp
or
inc
mov
xor
xor
les
aam
rcr
and
fstp
mov
sub
jns
push
pop
mov
int3
sub
mov
sbb
xchg
mov
je
shl
enter
retf
pop
inc
sub
lock
jp
mov
xchg
into
jbe
and
inc
les
mov
pushf
imul
xlat
clc
push
aas
push
mov
ins
add
mul
push
xchg
or
fwait
add
cmps
mov
mov
jg
jecxz
test
mov
dec
scas
pop
sbb
inc
repz
xor
xor
test
or
mov
cmovl
call
in
push
inc
clc
xor
add
mov
cmp
ja
in
and
or
add
daa
inc
jb
mov
sbb
test
(bad)
add
jmp
aaa
push
sbb
pop
ret
arpl
inc
arpl
retf
shl
fwait
xchg
xor
lds
inc
push
jg
clc
mov
and
mov
pop
jle
pushf
(bad)
out
pop
xor
jmp
jmp
inc
cdq
addr16
adc
pop
shl
mov
fld
cmc
add
stos
mov
mov
cmc
jge
ja
fnstsw
mov
cmps
outs
cmc
sbb
dec
and
out
mov
jl
clc
jae
fmulp
inc
push
pop
sbb
push
cmps
pop
mov
loop
movs
fimul
pop
add
sub
mov
pop
icebp
adc
out
mov
movs
retf
popa
imul
or
icebp
inc
mov
aad
xchg
cmp
inc
pop
jmp
mov
cmp
(bad)
jb
adc
test
in
pusha
mov
cmp
cmp
or
xor
cmp
inc
add
out
sub
js
mov
mov
js
push
push
retf
push
aas
or
cmp
jbe
dec
hlt
adc
xor
push
daa
xor
loope
or
and
ja
test
push
add
add
pop
lods
(bad)
mov
add
and
mov
jo
xor
inc
pop
in
or
lock
ret
xchg
mov
push
inc
ins
push
push
cwde
dec
mov
ins
or
fistp
inc
dec
fisttp
xchg
imul
ret
cs
je
jle
mov
or
adc
loope
retf
jl
into
iret
sub
dec
(bad)
adc
loope
add
(bad)
std
mov
inc
cmc
inc
mov
push
imul
add
loopne
add
fmul
pop
and
out
retf
sub
lds
sbb
ret
scas
pop
add
imul
cs
push
pop
not
cmps
push
sub
dec
jbe
(bad)
test
jno
mov
mov
xchg
sub
call
retf
sbb
xlat
lea
icebp
jmp
enter
jo
mov
mov
out
fdiv
and
stc
fs
jmp
std
lock
call
add
les
(bad)
mov
add
push
jg
js
jne
sbb
movs
cwde
adc
outs
or
adc
in
rol
out
ins
jno
mov
repnz
gs
jne
test
push
enter
stos
fsubr
adc
dec
in
adc
cmp
fwait
js
sbb
mov
and
push
jb
push
mov
out
stos
fimul
xchg
aam
jmp
(bad)
dec
dec
sub
in
xor
sbb
and
ret
pop
mov
dec
sbb
loop
mov
(bad)
jecxz
mov
inc
cwde
lea
xchg
lds
cld
push
ja
std
sbb
repz
jb
adc
cmp
xor
xchg
test
cmp
scas
popf
scas
xchg
ja
inc
jnp
scas
mov
or
fidiv
clc
scas
test
sub
and
das
push
or
or
jb
inc
and
xchg
aas
pop
in
lds
sbb
(bad)
out
pop
ins
icebp
ins
popf
in
into
rol
lock
cmp
cld
leave
mov
mov
sub
sub
xchg
xor
and
mov
pop
test
fwait
jne
addr16
jg
or
mov
repz
imul
mov
aam
bound
mov
cmps
add
movs
pop
or
jecxz
jecxz
jae
punpcklbw
cld
mov
xor
ror
cmp
push
pop
sub
aad
imul
test
mov
sbb
cmp
mov
add
pshufw
jb
push
retf
neg
cmp
push
lods
rol
pusha
or
pop
shl
inc
pop
test
and
adc
inc
cld
inc
movs
push
stc
lock
(bad)
fisttp
push
adc
mov
jno
clc
sub
sub
inc
mov
xor
inc
xor
hlt
and
loop
dec
ins
dec
xlat
test
sub
adc
dec
pop
sbb
inc
adc
push
xor
jno
inc
push
sub
push
inc
cdq
ss
jle
(bad)
jno
loope
(bad)
xor
sbb
jg
test
iret
add
cs
xchg
fistp
jmp
nop
iret
les
xchg
jmp
fnstenv
inc
cmp
in
ret
or
pop
into
adc
out
fidivr
out
cdq
pop
jns
es
ds
fstp
nop
or
ins
jbe
aas
aas
fnstsw
call
jl
xor
mov
test
sub
sbb
cli
cli
(bad)
sbb
mov
and
out
ret
(bad)
xchg
data16
cwde
xor
adc
dec
pop
mov
push
jle
sbb
cmp
add
cmc
mov
inc
and
xor
pop
daa
cli
lock
fs
mov
jl
arpl
and
sub
sti
loopne
push
mov
lods
adc
cmps
and
adc
jbe
jmp
das
or
sub
pop
inc
movs
or
cwde
sbb
popf
iret
in
sahf
lock
jmp
sahf
cmps
jns
pop
mov
inc
imul
or
mov
ret
fcom
in
lds
pop
shr
or
xchg
int3
gs
je
imul
push
push
push
sub
rcl
inc
and
stos
sbb
sub
mov
pop
mov
mov
in
(bad)
pop
mov
pop
stos
pop
(bad)
jo
mov
test
icebp
jle
dec
cmp
jecxz
and
sbb
fnstcw
fwait
xor
sub
repnz
mov
jnp
jmp
sbb
dec
mov
cmp
adc
xor
lea
xor
inc
cdq
dec
jl
sbb
push
idiv
shr
push
fild
and
add
cld
add
mov
lock
cmp
retf
inc
arpl
mov
pop
bound
popf
sahf
mov
mov
jae
dec
aam
sbb
cmp
sub
repz
lock
out
xor
into
fucomi
mov
(bad)
jp
(bad)
into
cdq
sub
cmp
cmps
ins
fwait
movs
dec
cmp
cld
lods
adc
and
fcom
inc
(bad)
out
int3
(bad)
sbb
pop
aas
cli
nop
sbb
mov
out
(bad)
std
scas
int3
or
inc
outs
or
imul
stc
int3
repz
jns
ds
pop
jbe
sbb
stc
mul
pop
jp
in
data16
das
pushf
sti
mov
mov
ret
xor
jo
lods
imul
(bad)
push
add
xlat
sbb
je
jl
out
pop
xlat
pop
js
adc
lds
rcr
or
data16
adc
and
aas
or
dec
xor
ja
jg
out
out
mov
push
jns
jae
stos
mov
je
arpl
js
push
cmp
sahf
dec
cwde
xchg
lods
fistp
mov
loope
enter
dec
stos
pop
ror
xlat
dec
xchg
mov
push
int3
sub
add
push
lods
cmp
mov
xor
fcom
jbe
cmps
or
pop
das
push
leave
inc
xchg
int3
mov
ds
push
mov
pop
pop
inc
add
mov
jne
pop
iret
jp
inc
jae
pop
add
and
xchg
fldlg2
or
mov
or
rol
scas
xchg
xchg
shl
jmp
into
fnstenv
rcl
cmps
dec
mov
addr16
pop
cmc
pop
jecxz
ja
scas
inc
sub
xor
clc
out
ja
sbb
repz
sub
add
sbb
test
cmp
mov
cmps
add
inc
clc
ds
mov
pop
das
div
cmp
retf
mov
btr
mov
adc
cmp
push
cmp
push
xchg
mov
stc
push
(bad)
sbb
xchg
out
inc
aaa
jb
adc
dec
jecxz
jae
les
cmp
push
xchg
cdq
lahf
pop
cmps
dec
into
es
adc
mov
sub
fisttp
ret
sub
add
jecxz
mov
add
dec
add
inc
leave
and
sti
mov
xchg
js
adc
test
les
push
add
and
mov
les
dec
jecxz
lds
push
dec
mov
int3
or
adc
mov
jb
pop
movs
jne
fcomip
push
add
cld
push
loop
in
out
and
sti
cmp
cdq
mov
popf
iret
and
inc
fucomip
mov
jmp
test
cld
mov
movs
cmp
mov
daa
inc
std
dec
cmps
js
sub
push
and
xor
cmps
xchg
ins
xchg
cmps
test
xchg
loopne
js
test
scas
movs
aaa
cs
xlat
lds
mov
outs
cld
adc
into
xchg
das
les
xor
pushf
fcom
push
inc
jae
or
(bad)
cmp
into
cmp
cmp
jnp
lds
dec
in
xchg
xchg
and
into
jbe
iret
mov
jno
push
jmp
inc
std
test
daa
push
dec
or
shl
push
rol
fst
fild
ja
inc
fidiv
sub
push
jp
stc
pop
call
cld
xchg
scas
xchg
jne
cmp
in
add
cmps
jae
sbb
push
mov
jl
cmp
jbe
sbb
cdq
mov
fld
mov
sub
mov
sbb
sub
cmc
je
adc
imul
xor
clc
jnp
mov
scas
sbb
sub
xchg
and
nop
leave
ins
cs
mov
pop
bound
scas
les
(bad)
cmps
and
shr
inc
mov
or
mov
imul
stc
outs
add
daa
movs
mov
jle
(bad)
mov
mov
push
lds
sbb
dec
dec
out
sti
push
xchg
imul
or
je
dec
dec
xor
(bad)
into
sub
jno
xchg
addr16
jb
cmp
mov
add
js
(bad)
push
and
mov
jge
push
dec
inc
adc
sub
mov
or
xchg
lods
mov
push
iret
scas
repz
ins
fist
imul
mov
loop
(bad)
lock
cmp
out
int3
adc
pop
inc
inc
push
push
stos
mov
lods
movs
mov
adc
and
push
pop
stos
add
add
fs
dec
jle
aaa
hlt
mov
mov
cmp
popf
mov
jecxz
(bad)
aaa
sbb
pop
loop
adc
push
je
fcom
lock
fstp
lahf
or
lock
mov
cmp
or
xor
cmc
test
cmp
ror
stos
push
ins
(bad)
mov
pop
mov
arpl
jp
sbb
mov
push
add
ja
dec
shld
and
bound
stos
popa
test
mov
mov
inc
ins
inc
add
mov
mov
mul
sub
rol
lods
ja
stos
mov
dec
lock
dec
hlt
fwait
adc
sub
mov
inc
int
mov
cmp
das
sbb
push
fild
addr16
pop
add
xchg
pop
lods
push
push
dec
repnz
and
int3
jg
out
add
sub
push
jno
retf
push
ds
and
xor
pop
dec
dec
push
in
test
out
sbb
add
fsub
mov
retf
push
xchg
arpl
xchg
test
adc
sti
sbb
lea
xor
pop
aad
movs
xchg
mov
mov
call
popa
(bad)
repnz
mov
int3
pushf
xor
xchg
js
lods
jmp
(bad)
inc
bound
pop
dec
cmp
sbb
or
lock
pop
jne
enter
cmps
push
inc
fisttp
cs
bound
and
repz
or
jmp
in
mov
sub
fs
bswap
fdiv
outs
(bad)
ja
js
outs
loope
cs
loopne
imul
jp
and
inc
test
not
jae
loope
add
retf
stc
mov
inc
cld
jecxz
inc
mov
mov
xor
pushf
inc
mov
cmp
popf
fld
pop
cld
imul
inc
(bad)
mov
push
jno
add
push
arpl
jmp
js
icebp
push
mov
sub
pop
movs
adc
ds
sbb
fcos
pop
add
rcr
nop
int3
add
lods
imul
push
push
push
pop
or
jmp
pop
inc
movs
ror
inc
arpl
movs
mov
dec
mov
icebp
idiv
jg
xor
or
inc
stos
pop
mov
adc
sti
jo
dec
arpl
adc
ds
std
aam
data16
pusha
pop
sar
mov
rol
xchg
add
inc
std
jp
or
mov
es
in
add
cmc
push
out
bound
nop
jb
xchg
adc
dec
clc
leave
fidivr
or
jb
ja
in
data16
(bad)
adc
shl
adc
sti
dec
jg
out
shl
dec
fyl2x
mov
cmp
punpckhwd
or
stc
pop
retf
ficomp
aaa
sbb
in
aad
xchg
sbb
xchg
fs
enter
in
and
pop
ret
mov
sbb
ins
ret
rcr
aam
mov
addr16
push
inc
mov
fldcw
test
cdq
test
pop
stos
jne
xor
gs
mov
sar
es
mov
xchg
aam
push
(bad)
stos
out
in
call
div
cmp
call
mov
jmp
outs
and
outs
xchg
aad
data16
add
call
call
rcl
call
(bad)
mov
jp
ret
test
or
pop
imul
rcl
aaa
or
add
rol
xchg
lea
in
ins
mov
je
add
je
inc
mov
push
jno
cmp
mov
test
(bad)
in
adc
xchg
es
pop
popf
scas
dec
pushf
pop
xlat
not
pop
jnp
push
sub
ret
fiadd
fwait
cli
mov
xor
shr
mov
pushf
out
test
sbb
or
cmp
push
pop
cld
mov
ja
loope
dec
mov
retf
lds
ds
jecxz
add
sub
push
push
ffreep
fucompp
mov
outs
add
push
rcr
adc
sub
adc
jno
sbb
push
and
loopne
or
xor
push
mov
out
sbb
cld
jp
les
push
or
lock
(bad)
dec
ins
aaa
jmp
adc
push
add
(bad)
push
add
sbb
jb
pop
test
jp
pop
cmps
das
jmp
ret
xchg
sbb
or
or
out
mov
shl
push
inc
adc
cmps
push
iret
sub
out
xchg
aaa
mov
pop
inc
push
icebp
fisub
imul
in
mov
inc
sub
retf
pop
jg
cli
adc
dec
shl
lahf
lahf
mov
xchg
cmps
fwait
aad
(bad)
adc
sub
pop
fcom
jp
push
(bad)
jp
pushf
(bad)
adc
js
sbb
pop
sbb
hlt
fs
aam
aaa
inc
dec
mov
push
xor
clc
sar
sbb
mov
lock
mov
push
fisttp
push
jmp
addr16
cmc
xchg
fdivp
retf
mov
add
ds
rol
xchg
push
adc
pop
outs
pusha
outs
mov
bound
aas
repz
in
or
push
cwde
adc
or
add
or
push
pop
fwait
pushf
in
pushf
add
mov
add
pop
jnp
xor
sahf
call
mov
aam
push
sbb
inc
mov
shl
movs
loop
ret
dec
imul
ret
(bad)
mov
push
and
xor
rol
mov
push
mov
fsubr
fwait
adc
mov
test
pop
fsubr
test
xchg
out
mov
test
sub
or
jo
inc
std
fsincos
lds
fnstsw
(bad)
in
popf
fld
cli
xchg
cmp
pop
add
and
daa
sbb
jo
int3
jns
movs
loope
sbb
sbb
lea
push
out
add
aam
mov
outs
les
push
dec
cli
mov
ficomp
mov
lods
sbb
sub
or
push
test
mul
sub
pop
mov
inc
ret
jnp
xor
fwait
mov
loop
mov
mov
inc
cmp
gs
xchg
ret
add
mov
pop
dec
pop
push
sbb
aad
ja
xchg
mov
add
mov
scas
inc
stos
sub
repnz
cs
pop
lds
mov
retf
popf
mov
sub
mov
test
pusha
cmp
xor
and
sub
js
sub
add
in
in
cmp
xor
mov
add
and
adc
mov
in
dec
dec
push
loop
sahf
ret
js
push
push
sbb
dec
sub
sti
xchg
enter
in
pop
pop
in
retf
inc
sub
jl
ds
or
jne
sbb
mov
dec
xor
out
(bad)
fwait
ins
int3
addr16
xor
fistp
out
adc
cmp
or
pop
fsubr
ja
xor
(bad)
mov
imul
sbb
ret
dec
int3
fdivr
jecxz
jp
pop
fiadd
or
outs
cmp
ss
into
sbb
pushf
ins
pop
enter
lds
mov
icebp
inc
mov
mov
pop
pop
sbb
mov
repz
test
sub
mov
inc
xchg
mov
mov
mov
dec
sub
ins
sbb
sahf
arpl
in
movs
int3
rol
cmc
shl
ret
outs
out
mov
stos
jns
jmp
dec
in
dec
and
in
mov
cs
cmp
inc
mov
fwait
pusha
loope
jbe
outs
add
ds
mov
imul
xchg
ret
jbe
sbb
dec
mov
xchg
mov
pop
mov
sub
data16
rcl
adc
icebp
and
jle
pop
sahf
mov
xor
push
or
lds
in
popa
mov
arpl
or
test
jmp
sub
dec
and
in
push
adc
fiadd
stos
(bad)
out
sbb
je
push
mov
push
adc
aad
dec
jp
mov
cmps
int
jb
cmp
push
xchg
mov
(bad)
cmp
or
jl
daa
gs
jmp
jnp
mov
mov
(bad)
nop
ins
enter
push
push
mov
inc
loopne
scas
mov
stos
out
add
add
(bad)
mov
cmp
test
in
inc
adc
cmp
outs
fstp
add
stc
int3
icebp
mov
ret
add
sub
das
hlt
jecxz
pop
adc
sub
pushf
mov
xor
and
repz
sbb
inc
mov
xchg
mov
cmp
mov
xchg
into
mov
(bad)
nop
inc
outs
push
jmp
popf
mov
xor
mov
pop
sbb
mov
in
pop
aaa
(bad)
xchg
push
in
sbb
mov
mov
cdq
mov
sub
or
xchg
or
icebp
je
retf
or
xor
fwait
mov
iret
add
jnp
dec
cmp
xchg
and
shl
sub
ror
lods
xchg
fidivr
mov
xor
mov
xchg
xchg
pop
and
ficomp
pop
out
call
sbb
imul
fcmovnbe
dec
or
(bad)
jmp
in
or
sub
pop
push
gs
sub
jbe
dec
lock
push
mov
ror
mov
retf
jmp
xor
(bad)
or
pop
loop
pop
mov
outs
nop
cmp
inc
add
into
jg
call
push
mov
pop
jmp
outs
(bad)
lock
mov
out
rol
fdiv
repnz
fs
sub
ins
adc
stos
(bad)
or
pop
(bad)
aaa
stc
retf
push
shr
rcl
inc
mov
jne
popa
push
xchg
es
loop
stc
jle
aas
out
rol
mov
add
js
lea
ret
mov
pop
aaa
pushf
xor
lods
fldcw
cmp
jp
mul
hlt
xchg
dec
jmp
psubq
add
mov
fimul
xchg
or
pusha
and
cmps
pop
mov
cwde
inc
rcl
jle
ror
jle
fld
xchg
loop
push
mov
jge
ret
mov
loope
adc
pusha
cmp
sub
(bad)
push
inc
push
sbb
jo
cmp
pop
jno
shl
sbb
fucomip
inc
lock
lea
test
mov
pop
repz
ret
adc
(bad)
arpl
inc
pop
in
xor
add
lods
retf
icebp
or
lahf
mov
ds
xor
arpl
dec
data16
xchg
dec
aad
lahf
lds
mov
and
imul
ja
es
cmp
and
hlt
pop
xchg
hlt
xor
mov
mov
jbe
dec
add
push
or
dec
loopne
jmp
js
(bad)
lods
xlat
imul
aad
xchg
not
outs
cwde
js
xchg
repnz
add
icebp
(bad)
ja
adc
je
adc
lods
dec
retf
jno
dec
dec
jmp
jbe
dec
ins
cdq
cmp
and
push
fisub
iret
(bad)
cli
fdivr
jns
pop
fsub
jnp
das
dec
fwait
xor
pop
adc
neg
add
ret
adc
push
aas
loopne
or
fs
mov
mov
cmp
push
mov
jmp
(bad)
push
xor
mov
js
(bad)
mov
dec
jg
add
clc
int3
xlat
fs
lea
(bad)
sahf
mov
push
mov
mov
inc
push
call
jb
fcmovbe
sub
xchg
call
xor
cmp
lea
mov
cmp
jecxz
arpl
pop
sub
clc
mov
imul
cmp
inc
out
mov
dec
push
out
test
inc
add
sti
retf
stos
or
loopne
sub
xor
es
add
outs
mov
cld
jo
loop
popa
dec
mov
xchg
dec
sub
or
mov
xor
jmp
pop
fwait
int
std
jle
jbe
pop
mov
or
inc
mov
inc
xlat
push
mov
push
scas
xor
xchg
sub
retf
ss
push
repnz
icebp
xchg
xrelease
push
pop
lds
mov
inc
inc
push
std
push
jmp
jne
outs
xchg
loop
add
adc
lahf
and
pop
(bad)
lahf
sub
mov
(bad)
xor
je
sbb
push
xchg
xchg
sbb
xchg
add
jbe
gs
jmp
lahf
jmp
in
push
pop
cmp
adc
and
sti
lea
pop
xor
fmul
and
cmps
fsubr
ins
xor
push
call
ret
fdivr
dec
dec
call
xchg
mov
mov
dec
mov
ins
sti
sbb
cdq
jg
dec
in
sub
sub
jo
mov
push
pop
sbb
inc
mov
add
jns
mov
loope
xchg
ret
popa
mul
sbb
repz
pushf
repnz
mov
mov
jbe
push
jbe
mov
nop
repnz
in
test
sar
lds
xor
stos
pop
mov
mov
(bad)
mov
mov
adc
or
aaa
mov
jb
cmp
push
dec
inc
out
js
xor
fst
inc
lahf
mov
dec
add
inc
jecxz
test
bound
fld
mov
push
jns
pushf
popa
add
mov
push
push
aas
arpl
iret
icebp
sbb
add
dec
mov
ss
retf
inc
ret
das
fist
out
fidiv
cmp
add
cmp
icebp
fucomi
and
scas
push
mov
mov
inc
and
das
popa
js
fwait
mov
js
ins
bound
xchg
and
inc
pop
cmps
adc
push
sub
je
pushf
xchg
xchg
(bad)
sub
add
fild
test
push
nop
jle
call
loopne
and
add
pop
stos
mov
call
daa
or
repz
sub
ficom
and
test
mov
jbe
int3
enter
jbe
sub
and
inc
das
mov
mov
mov
jp
mov
cmps
jnp
sub
adc
outs
inc
push
call
and
mov
popa
test
lds
mov
and
lods
xchg
clc
sbb
dec
test
outs
sbb
dec
sbb
jae
mov
sar
(bad)
aam
xor
mov
jp
push
jmp
sub
xchg
ds
mov
cli
push
add
mov
sahf
and
push
jle
jnp
out
push
test
xchg
(bad)
push
hlt
rcr
scas
leave
jbe
loop
jmp
mov
mov
dec
push
pop
shl
mov
cld
add
adc
jb
mov
(bad)
leave
cmp
cmps
cdq
fcmovne
adc
jmp
das
fwait
mov
test
add
mov
sub
icebp
stc
lahf
add
arpl
and
xchg
mov
rcl
or
es
add
(bad)
inc
mov
adc
out
fld
pusha
sti
xor
pop
aad
add
xchg
test
sbb
stos
sub
xor
cmp
or
jne
(bad)
and
mov
fldl2t
rcl
leave
es
mov
and
inc
adc
jae
cmp
mov
xor
jne
test
add
xlat
sub
jb
int3
mov
xchg
stos
cmc
les
mov
jge
shr
xchg
in
les
pusha
in
or
aas
aam
sti
sahf
and
je
icebp
(bad)
movs
push
ficom
push
dec
cmp
or
in
out
out
pop
pop
out
push
and
mov
mov
mov
add
sahf
lea
mov
cmc
popf
lods
mov
jge
mov
dec
stos
mov
pushf
in
add
out
cmp
mov
pop
in
call
das
out
xchg
rcl
cwde
movs
lock
pop
lock
mov
loopne
jae
stc
xor
xor
aaa
mov
or
js
mov
(bad)
push
cmp
or
push
xor
out
dec
jg
clc
test
fs
add
sub
jp
(bad)
addr16
add
das
daa
jg
inc
sbb
cmps
adc
xor
add
movs
or
adc
jp
and
mov
nop
pop
mov
jo
jmp
mov
sub
lods
xchg
(bad)
iret
xor
inc
push
outs
cmps
add
mov
or
les
add
fwait
ror
fstp
loop
rol
js
push
push
into
scas
scas
push
or
cmps
xchg
jnp
shl
or
push
xor
push
push
iret
sahf
and
cmps
and
inc
aaa
dec
sbb
cmps
jae
or
ja
jb
push
sti
ins
xchg
lock
shl
js
pop
or
popa
sub
dec
adc
rcr
sbb
loope
push
jns
lea
jmp
mov
and
loope
xor
mov
into
add
cmp
add
mov
sub
movs
out
mov
int
inc
push
je
js
inc
nop
loopne
cmps
pop
push
pop
jb
icebp
and
mov
xchg
ficom
mov
imul
aad
dec
shl
and
call
pop
inc
mov
shl
pop
jge
stos
push
push
stos
imul
push
mov
gs
shr
dec
jne
and
fild
in
sub
mov
test
aam
fst
pop
daa
ret
je
into
adc
movs
xor
inc
call
sub
(bad)
or
or
loope
inc
push
jg
pop
inc
and
cld
xor
jg
xchg
push
(bad)
or
adc
adc
sbb
das
iret
imul
xchg
cmp
ret
mov
mov
cmp
mov
gs
mov
sub
into
inc
cmp
ins
xlat
daa
cli
fist
movs
fild
aam
jnp
shl
fimul
jnp
outs
cld
pop
int
or
mov
movs
sbb
aad
mov
inc
stc
mov
sbb
iret
sar
adc
push
clc
jle
add
cmc
mov
shl
lahf
jno
lock
stos
outs
ret
sub
aas
xchg
shl
test
or
lea
pop
cmp
jmp
(bad)
fwait
mov
xor
cwde
loope
push
inc
push
ss
ret
les
mov
adc
test
rol
int3
in
int
out
add
push
data16
sbb
push
xor
pop
mov
jb
or
push
repz
sub
push
in
lds
push
std
jnp
mul
into
jge
in
test
dec
adc
ss
mov
xchg
pop
inc
or
stos
push
or
mov
mov
pop
inc
xchg
adc
mov
pop
and
ins
(bad)
push
inc
ds
cmp
out
fs
xor
inc
js
push
repnz
std
and
adc
lods
and
lods
arpl
popf
fnstsw
push
inc
iret
xchg
sub
xor
mov
pushf
add
jns
sub
(bad)
rcl
inc
(bad)
mov
stc
retfw
and
(bad)
mov
xchg
ror
ins
add
xchg
mov
mov
enter
ror
stos
test
scas
or
fcomp
pop
mov
adc
addr16
sbb
push
icebp
(bad)
lods
jg
dec
add
pop
in
and
scas
push
addr16
stc
clc
sbb
mov
mov
js
xbegin
cmp
dec
jle
imul
pop
(bad)
retf
leave
js
cmp
shl
bound
mov
or
icebp
sub
mov
sub
mov
mov
xchg
ins
mov
pushf
ja
mov
xchg
gs
adc
les
bound
cmps
stc
xor
shl
ret
xchg
or
jae
mov
xchg
mov
nop
ins
mov
lods
inc
nop
dec
call
fs
cmp
je
es
sbb
lods
outs
adc
aam
cmp
je
in
enter
mov
lds
xchg
(bad)
push
sub
push
add
pop
add
enter
xchg
test
or
psrad
ret
sahf
or
fisub
das
pushf
pop
in
(bad)
xlat
lock
test
push
(bad)
arpl
jp
push
pop
les
into
imul
cmp
cmc
(bad)
add
mov
das
xlat
loop
int
ror
fwait
(bad)
jbe
mov
add
(bad)
out
mov
sbb
and
inc
mov
out
and
loopne
stos
and
sbb
and
int
cmc
add
shl
popf
repnz
lods
mov
jp
jb
or
xchg
es
les
mov
ret
cli
cli
inc
out
dec
xor
dec
stos
mov
and
repz
pop
jns
(bad)
xchg
data16
scas
xor
and
or
test
jae
outs
or
lahf
sub
xchg
pop
push
rol
pop
ds
and
adc
inc
gs
je
cmp
out
cmps
push
jle
jl
mov
pop
iret
xchg
(bad)
movs
adc
(bad)
andps
inc
ret
or
push
rol
shl
(bad)
sub
xchg
inc
mov
xchg
enter
mov
data16
aad
jp
xor
jmp
pushf
cs
cmp
fild
or
add
push
inc
dec
int
or
fcomp
nop
aas
xor
and
std
sub
xor
dec
mov
xchg
pop
retf
pop
cld
mov
ds
(bad)
frstor
jo
sbb
data16
sub
out
xor
leave
repz
outs
(bad)
ficomp
mov
icebp
inc
jae
lds
ds
pop
cmc
ss
add
aaa
enter
sar
pushf
sub
fwait
(bad)
out
jmp
retf
outs
cmps
hlt
sub
xor
sub
mov
int
aam
cmp
fs
sub
ja
pushf
adc
xor
nop
loopne
pop
mov
(bad)
mov
pop
add
mov
push
int
inc
mov
or
cmp
xchg
sbb
pop
add
dec
test
rol
popf
bound
push
call
fcmovbe
mov
or
adc
pop
sub
js
std
mov
mov
js
pop
cwde
jl
fs
cmp
cmp
pop
inc
xchg
mov
adc
or
loopne
aas
or
jnp
test
sub
lods
ins
inc
repnz
(bad)
or
rcr
retf
mov
xchg
rcr
push
repz
mov
jno
dec
gs
add
add
jns
mov
neg
inc
xchg
lods
push
xor
mov
rcr
mov
fwait
call
imul
leave
movs
and
call
fmul
mov
rcr
push
or
or
sbb
adc
imul
sar
push
in
movs
mov
jns
outs
pop
stos
or
inc
fiadd
jmp
xor
add
xchg
sbb
out
xchg
mov
or
cmps
retf
or
les
dec
or
pop
iret
push
out
xchg
ja
mov
lahf
pop
jbe
hlt
int3
in
push
jnp
sub
jg
mov
stos
mov
mov
xchg
ins
mov
lock
shr
mov
xor
outs
retf
mov
inc
mov
dec
dec
and
ds
mov
invd
imul
jns
cmp
fwait
std
push
aas
shl
mul
sahf
ins
mov
mov
int
jmp
(bad)
xor
mov
das
dec
mov
pop
(bad)
mov
xchg
(bad)
out
or
outs
fdivr
pop
sar
pop
pop
cld
mov
(bad)
mov
cli
jnp
cli
mov
dec
inc
loopne
gs
mov
std
inc
jmp
jecxz
pop
or
mov
xor
enter
cmp
mov
jmp
or
cmps
pop
mov
and
and
mov
hlt
loop
addr16
cmc
pop
xchg
mov
and
call
add
inc
ins
cmp
lea
dec
fisttp
ins
inc
fisub
push
test
ins
test
xor
jg
les
aaa
fs
pushf
dec
pop
mov
outs
aam
pop
sub
add
sbb
and
lock
out
or
add
addr16
jp
pop
mov
xchg
daa
mov
addr16
xor
fiadd
(bad)
cmp
mov
or
pop
out
es
call
test
dec
ds
xchg
fidiv
mov
push
aam
in
xchg
aad
into
fsincos
enter
mov
or
cmp
dec
pop
cdq
pop
(bad)
call
and
(bad)
push
mov
test
sahf
mov
push
retf
jmp
sub
xor
cmp
push
or
data16
cmp
mov
es
in
inc
enterw
mov
sub
mov
ror
loope
rcl
adc
fist
gs
das
adc
arpl
xor
xchg
inc
mov
fld
mov
ret
ret
adc
mov
mov
mov
popa
xor
int
pop
or
shl
mov
sbb
push
mov
pop
in
adc
sbb
test
dec
sub
into
clc
daa
pop
cli
xor
adc
(bad)
adc
scas
pop
add
test
mov
in
test
ror
ins
into
push
xor
xchg
add
push
inc
push
icebp
shl
push
icebp
jmp
stos
sub
pusha
xor
jns
push
jmp
fwait
jno
or
sub
idiv
jl
iret
test
and
sbb
push
mov
out
adc
jno
xchg
sbb
or
sub
sbb
sbb
fimul
mov
push
(bad)
lds
(bad)
fs
inc
in
fwait
dec
pop
adc
imul
js
or
jo
jmp
ss
xor
sub
dec
xchg
jbe
lods
jb
(bad)
fnsave
rcr
test
mov
jns
push
aam
movs
hlt
ror
cmp
mov
mov
fisttp
std
xor
jns
scas
das
pop
mov
or
push
push
cmp
das
push
inc
add
fld
jmp
pop
loopne
adc
mov
lods
sbb
les
adc
inc
push
or
push
(bad)
icebp
fldcw
adc
inc
and
push
push
movs
(bad)
xchg
loop
mov
(bad)
adc
pusha
data16
mov
cwde
imul
sub
jne
jmp
and
div
rcl
sar
push
push
int
rcr
pop
xor
fsub
scas
test
pop
aad
mov
xor
(bad)
in
inc
cwde
test
neg
sub
out
repz
dec
cmc
jg
not
push
loope
jae
mov
cmp
and
adc
jbe
lods
or
jae
ins
xchg
push
inc
in
ds
jecxz
sbb
aad
into
aas
push
and
inc
mov
iret
adc
cmp
movs
pop
mov
out
cmps
xor
call
(bad)
adc
sub
in
(bad)
pop
fisttp
in
dec
gs
loopne
and
pop
jecxz
outs
stos
ds
cmps
push
xchg
inc
out
push
arpl
jg
dec
xor
or
cmp
or
xchg
movs
mov
or
jmp
test
jecxz
outs
xor
test
ds
mov
cmp
dec
pop
lea
pusha
xchg
mov
jmp
xlat
out
jle
je
mov
cmp
int
cmc
dec
cmp
dec
push
addr16
xchg
mov
ffreep
(bad)
dec
xor
(bad)
out
scas
and
(bad)
jge
sahf
test
pop
jne
pop
jle
xor
cmp
in
call
xchg
push
push
out
out
mov
ins
scas
in
jg
add
xlat
out
mov
std
jmp
stos
push
out
mov
(bad)
mov
test
icebp
mov
mov
push
aaa
dec
cld
into
push
hlt
das
stos
mov
xchg
(bad)
mov
stc
loopne
xchg
mov
xchg
jecxz
fld
sbb
(bad)
repz
push
jmp
inc
dec
enter
popf
movs
ins
outs
popf
xchg
ret
jmp
jle
xchg
inc
(bad)
sub
in
sbb
repnz
push
inc
retf
repnz
cmp
fisubr
xchg
xchg
add
cmc
fs
xchg
aas
in
fsubr
fiadd
cmp
test
stos
mov
sub
push
ret
retf
mov
xor
mov
pop
cli
add
test
push
inc
mov
dec
mov
add
jmp
pop
(bad)
push
push
pop
sub
punpckhdq
stc
xchg
cmps
sub
ss
pop
fmul
cld
and
in
out
hlt
push
jp
jo
bound
sbb
pop
mov
rcl
and
cmp
fst
int3
dec
sahf
jo
test
sub
jl
fist
pusha
inc
retf
xchg
arpl
stos
mov
fisttp
lds
cmp
enter
lahf
loopne
enter
or
ja
mul
fstp
into
pop
pop
mov
mov
mov
xlat
out
and
not
pop
fs
icebp
mov
mov
mov
mov
dec
ins
ins
mov
scas
xor
pop
jne
inc
inc
pop
bound
test
sub
out
call
pusha
pop
scas
cmps
inc
bound
test
sub
(bad)
repz
inc
loope
pop
dec
scas
push
stos
mov
out
push
inc
in
and
imul
adc
js
loopne
jb
xchg
pop
xor
sbb
sbb
mov
jnp
leave
mov
dec
inc
stc
imul
mov
lock
adc
loope
ss
push
stc
mov
repnz
dec
shr
(bad)
shl
fbstp
mov
imul
xchg
pop
out
lods
fiadd
inc
std
dec
cli
jne
lahf
call
push
jge
in
leave
mov
inc
add
dec
sbb
inc
pop
(bad)
out
sub
mov
repnz
dec
push
enter
mov
popf
dec
loopne
sar
addr16
je
mov
das
lds
cmps
test
cmps
mov
sub
mov
xor
cmp
inc
and
(bad)
pop
push
mov
mov
push
jne
dec
inc
test
lahf
rol
aaa
nop
jg
jno
mov
sub
das
inc
sbb
data16
out
inc
fistp
mov
clc
jle
ins
fwait
aaa
mov
inc
jmp
inc
jmp
xchg
mov
or
lea
jg
or
xlat
fucomp
inc
add
shl
loopne
gs
mov
or
mov
pop
test
test
push
jg
ret
xchg
cdq
cmps
xchg
test
add
push
push
shl
push
cwde
xchg
push
add
idiv
push
(bad)
xor
sub
cmp
mov
cmp
mov
xchg
lds
mov
sahf
mov
mov
mov
push
jnp
inc
cmp
test
add
nop
es
xor
enter
int3
shr
mov
and
add
cmps
jnp
push
test
repz
inc
inc
mov
add
pop
ins
adc
fld
mov
lds
push
add
mov
pop
icebp
sbb
xor
movsx
sti
inc
push
outs
jbe
jbe
add
dec
push
cs
mov
test
xor
inc
into
nop
jp
rcl
inc
iret
fsubr
dec
mov
test
mov
mov
jle
push
jp
push
xor
mov
and
and
mov
loope
push
push
jbe
stos
pop
sbb
mov
push
scas
mov
gs
outs
icebp
and
loopne
adc
mov
leave
aaa
ja
mov
out
push
mov
xlat
inc
dec
loopne
cmp
push
jge
or
mov
iret
outs
and
xor
out
adc
jo
dec
and
cmp
dec
cdq
xchg
retf
pop
addr16
shr
adc
sub
adc
adc
sub
test
mov
pop
iret
jge
mov
mov
jl
div
push
add
pop
cmps
or
fstp
xlat
mov
fdivr
add
call
pop
int
sti
sub
cmps
jge
pop
retf
retf
in
popf
(bad)
cmp
adc
(bad)
mov
cwde
(bad)
daa
imul
cwde
add
add
loopne
pop
test
push
mov
xor
dec
lods
pop
push
and
cmp
sub
inc
pop
and
dec
jo
sub
pop
sbb
push
cmp
jb
int
and
inc
and
adc
jmp
sbb
mov
adc
neg
push
pop
and
mov
jnp
inc
aaa
cmp
lea
push
jne
stos
jno
and
adc
sub
ss
movs
xchg
jg
popf
in
adc
or
mov
add
jns
mov
jg
or
jmp
loop
fist
inc
in
xor
mov
mov
(bad)
in
cs
js
pop
out
out
out
jmp
sbb
pop
jecxz
jb
sbb
lds
xor
cmp
jo
mov
adc
push
push
jne
inc
fs
push
bound
mov
imul
imul
fs
retf
frstor
jbe
xor
sbb
push
cs
sub
xchg
movs
inc
cld
inc
dec
inc
mov
inc
addr16
xchg
(bad)
mov
xchg
fisttp
test
test
inc
jl
pop
jecxz
push
xor
jmp
mov
data16
mov
arpl
mov
cwde
jae
arpl
leave
int3
pop
adc
cdq
lahf
push
or
jge
sub
into
ret
jnp
sti
(bad)
sub
loop
xchg
(bad)
int
add
sub
or
and
push
popa
cmc
mov
lods
mov
xor
loop
xchg
(bad)
cmp
adc
aas
cli
push
outs
mov
mov
push
sti
int3
arpl
add
sar
mov
mov
test
popf
add
push
mov
push
pop
loopne
push
push
fld
sbb
ret
push
sub
push
add
sar
push
loopne
push
imul
and
fwait
push
push
bound
jp
pop
repnz
ins
cmc
aaa
xor
dec
push
xor
dec
or
push
mov
arpl
push
sar
into
cmp
mov
fwait
xchg
loope
loope
and
outs
xchg
lods
test
sub
enter
mov
outs
lods
mov
shr
jmp
and
call
sub
call
lahf
ins
mov
jmp
aas
into
sbb
test
in
aas
mov
movs
fdivr
jnp
test
or
test
rol
test
test
fsubr
xchg
mov
fs
cmc
mov
lock
pop
scas
test
push
out
rcl
cmp
repnz
dec
and
les
sahf
mov
cmp
sub
dec
jne
jae
mov
ins
je
pop
and
jp
jg
imul
loop
je
repnz
sub
fstp
jnp
cmp
inc
lock
retf
or
std
scas
addr16
ret
imul
adc
pop
sbb
xchg
xchg
sbb
mov
add
test
push
xor
std
(bad)
cmp
hlt
adc
cmps
lock
js
and
(bad)
cmp
out
and
stc
pusha
dec
rol
pop
shr
pop
mov
dec
pop
adc
push
or
add
sti
in
jo
push
dec
rcl
test
push
out
and
dec
loopne
sub
xor
ins
cdq
and
adc
adc
stos
out
clc
and
xlat
retf
dec
cli
add
(bad)
add
or
cmp
jno
fnstsw
bound
mov
jns
call
mov
and
push
lea
mov
pop
call
mov
xchg
jne
enter
adc
outs
sub
lea
fldl2t
mov
pusha
div
jecxz
sbb
(bad)
outs
cmp
xchg
jle
sbb
nop
shl
pop
and
stos
and
jmp
xchg
sbb
aas
icebp
ja
retf
cdq
je
std
mov
xchg
xlat
(bad)
out
fcom
or
jmp
movs
mov
mov
pop
inc
lods
mov
clc
mov
jp
repz
mov
sub
xor
xor
repz
and
jmp
sub
xor
out
cli
sahf
scas
sbb
dec
stos
jb
mov
inc
arpl
retf
push
jg
pop
imul
cmps
pop
repz
sahf
mov
xlat
gs
ret
aas
mov
mov
mov
das
xor
sbb
pop
jbe
jo
lods
gs
(bad)
or
pop
inc
fwait
pop
add
xchg
ins
retf
jg
pop
in
sbb
imul
sub
mov
loope
dec
ret
xor
add
jp
jle
ins
aad
movs
jle
pop
cmp
or
and
fldenv
cmp
or
xchg
push
call
scas
pushf
xor
jl
aad
cmp
aas
inc
scas
add
inc
es
add
stc
enter
and
cmp
lods
adc
jp
add
cwde
mov
mov
out
pop
sub
inc
shr
sahf
sti
imul
cmp
mov
pusha
and
repnz
add
or
adc
loop
fcomp
push
inc
js
adc
rol
mov
fdiv
cmp
pop
in
in
inc
outs
(bad)
mov
outs
imul
in
stos
je
in
test
sbb
scas
add
add
or
mov
shr
sbb
jb
ja
mov
push
pop
fsubr
lahf
pop
dec
mov
mov
jnp
mov
movs
ins
stos
enter
call
xor
and
sub
(bad)
xor
pop
dec
in
sti
cmp
fsub
mov
popa
xchg
dec
inc
and
fimul
inc
(bad)
fcmove
stc
mov
cs
int3
inc
lds
xor
mov
pop
stc
vhsubps
add
aaa
iret
pop
repnz
mov
aad
fld
(bad)
push
ins
inc
push
cmps
test
xchg
add
lock
jns
(bad)
sbb
mov
arpl
inc
sbb
out
(bad)
lock
aaa
xchg
daa
dec
(bad)
mov
sub
pop
mov
(bad)
sbb
loop
push
fs
adc
div
data16
stos
ss
add
ror
out
xchg
cmp
inc
inc
imul
fisubr
(bad)
xor
mov
inc
cmp
cmps
fist
arpl
repz
cld
js
adc
xchg
cmp
push
lds
mov
test
retf
repnz
add
xchg
cmp
arpl
in
adc
je
pop
aam
shr
mov
cmp
aam
push
call
shl
adc
adc
pop
jmp
cmc
int3
out
push
sub
rcr
aas
cmc
iret
adc
ffree
push
add
inc
and
ins
or
lea
push
sub
imul
cdq
or
pop
dec
stos
xchg
out
inc
in
(bad)
pop
dec
mov
test
(bad)
cmp
mov
stc
outs
inc
add
pop
push
sub
jne
pushf
aam
std
fdivrp
mov
lock
loope
jl
loope
adc
and
inc
add
jge
mov
dec
or
mov
mov
(bad)
cmp
mov
add
inc
outs
bound
leave
and
fisttp
fwait
clc
dec
pusha
inc
cwde
dec
mov
mov
imul
dec
jo
cmp
push
lods
dec
mov
jg
mov
jo
xlat
out
popa
pop
out
arpl
int
retf
fild
test
ss
or
push
sub
mov
or
loopne
xchg
(bad)
inc
xchg
lds
pop
mov
js
push
(bad)
jnp
xor
mov
(bad)
in
retf
(bad)
push
inc
xor
mov
fcomp
mov
mov
xor
outs
mov
repnz
(bad)
push
mov
pop
mov
add
jne
lods
mov
mov
or
outs
cli
push
adc
(bad)
push
sbb
(bad)
test
in
mov
xchg
push
adc
pop
jbe
lods
dec
and
hlt
scas
daa
adc
push
or
adc
imul
mov
fisttp
mov
es
aas
test
or
ja
test
push
pop
mov
(bad)
pop
loopne
xor
mov
inc
loop
cmps
sub
xor
mov
loope
in
xor
vpunpcklwd
push
lahf
test
out
mov
test
xor
cmp
push
xor
stos
jmp
cmp
cmp
pop
add
out
or
sub
cs
or
mov
loopne
mov
jg
push
push
or
pop
xor
retf
jo
dec
dec
test
fcmovne
jae
cmps
cmp
xor
mov
sub
mov
imul
mov
imul
sbb
lods
adc
inc
sbb
mov
add
mov
xchg
adc
(bad)
xlat
push
imul
pusha
push
out
data16
movzx
sub
aaa
lods
test
jge
lods
into
dec
int3
add
out
fsubr
mov
sbb
push
ins
cmps
scas
push
jle
clc
sti
push
les
das
mov
adc
rcr
and
mov
imul
mov
jnp
and
fdivr
mov
(bad)
movs
xor
jle
push
mov
xchg
inc
(bad)
jno
cmp
stos
mov
jl
jp
add
dec
out
cmp
nop
pop
adc
es
push
adc
sub
xor
cmps
jne
mov
cld
mov
popf
data16
lahf
test
mov
adc
aas
test
and
retf
adc
or
outs
call
pop
call
cmp
frstor
out
pop
sbb
int
pop
adc
pop
jmp
push
jmp
add
cwde
mul
rcr
pop
fild
jl
push
cmp
js
mov
mov
xor
mov
cmp
fcomp
aam
fistp
fdivr
(bad)
cld
cmps
xchg
push
lods
loope
dec
pop
scas
ins
rcl
adc
mov
cs
pop
or
inc
loopne
cld
mov
xchg
jge
rol
xchg
add
adc
fsubr
add
jbe
outs
and
xchg
arpl
sub
pop
mov
mov
retf
lea
xor
scas
or
in
mov
cmc
test
and
popa
nop
jmp
sbb
or
inc
test
js
retf
pusha
scas
dec
ror
rcl
sub
or
adc
inc
dec
clc
pop
push
(bad)
inc
movs
loopne
stc
rcr
jp
cmp
jne
ret
sbb
mov
ror
pop
ror
xor
add
sti
mov
std
mov
add
shr
adc
mov
push
jbe
in
jmp
in
ficomp
or
and
mov
jle
lds
(bad)
popf
push
nop
adc
icebp
pop
mov
sbb
xchg
daa
push
test
stos
cmps
adc
lock
ss
(bad)
cmc
(bad)
add
ins
xor
xchg
std
mov
dec
dec
sub
aaa
cmp
push
jge
rol
push
pop
scas
sbb
aam
ja
(bad)
mov
fstp
push
cmp
push
movs
adc
mov
mov
cmps
xchg
imul
call
repz
or
lock
pusha
je
adc
loop
repnz
xor
add
dec
mov
retf
loope
cmp
inc
jp
test
in
loopne
mov
sahf
test
sar
jae
sub
(bad)
xchg
out
(bad)
pop
in
xor
loopne
cmp
leave
es
icebp
xor
cmps
dec
push
cmp
in
mov
movs
(bad)
imul
in
std
cmps
cdq
adc
mov
scas
add
out
mov
jle
lods
scas
sbb
btr
jmp
repz
test
push
outs
sahf
sbb
repnz
inc
shl
dec
add
stc
into
jmp
jno
jmp
das
bound
mov
push
cmp
mov
lock
int3
mov
loope
mov
in
or
(bad)
sbb
and
sub
adc
add
iret
nop
jge
loop
pop
xchg
movs
aam
fist
jbe
call
or
shl
ins
mov
lods
data16
and
mov
pop
(bad)
push
xchg
or
test
aaa
bnd
retf
ins
and
mov
push
and
int3
push
pop
out
pop
cld
leave
or
adc
mov
pop
cmc
dec
test
push
or
mov
adc
mov
adc
mov
(bad)
xor
cmc
sar
sub
cld
adc
(bad)
mov
aam
enter
xchg
dec
sbb
inc
jb
fs
aaa
sti
adc
mov
mov
das
clc
(bad)
movs
pop
sub
das
jno
fistp
mov
cmp
std
arpl
push
aad
pusha
adc
add
inc
out
mov
shl
xchg
jne
mov
aam
shl
inc
(bad)
arpl
mov
mov
nop
push
add
inc
lea
push
hlt
mov
mov
mov
aad
call
adc
mov
sbb
push
jbe
rcl
mov
in
test
xchg
iret
adc
cwde
pusha
add
(bad)
ds
xchg
fist
ror
xchg
cmps
adc
int3
cmp
mov
imul
(bad)
shl
or
bound
cs
pop
mov
inc
leave
sub
js
mov
mov
xor
das
je
jmp
movs
je
pop
or
gs
push
jl
int3
lock
mov
or
aas
xchg
test
or
ret
dec
punpckhwd
jae
mov
inc
fst
or
sbb
loope
neg
jmp
popa
dec
inc
cmc
outs
mov
sub
es
xor
enter
add
test
add
fdivp
mov
outs
jg
aad
cmp
mov
imul
leave
cmps
jae
nop
mov
test
jns
in
jb
sbb
nop
movs
aaa
gs
cli
nop
dec
jl
mov
fisubr
xchg
push
inc
jle
into
mov
in
mov
ret
mov
mov
outs
cmp
adc
(bad)
outs
pop
ds
pop
call
dec
out
dec
repz
add
cli
gs
pop
mov
add
sbb
inc
xor
enter
or
test
sbb
arpl
xchg
or
mov
les
cmp
test
inc
in
jne
mov
cmp
nop
rcl
scas
sub
arpl
push
jge
rcl
inc
xchg
pop
push
gs
sbb
or
rcl
cmps
jnp
mov
aam
mul
in
sub
mov
dec
icebp
push
sub
mov
jg
push
cmps
leave
pop
xchg
push
adc
sbb
bound
mov
lods
arpl
fs
jb
scas
push
push
xchg
adc
xor
dec
cmp
mov
inc
inc
es
repnz
dec
in
and
loope
mov
mov
aaa
sbb
and
mov
inc
dec
cld
sbb
cs
jp
test
mov
adc
mov
test
test
sub
cmp
bound
adc
mov
addr16
add
(bad)
jmp
movs
push
sahf
xchg
push
pop
xor
adc
dec
adc
arpl
scas
call
and
popa
sub
popf
lods
xor
lock
pop
inc
mov
loop
add
add
(bad)
retf
out
fild
arpl
scas
jmp
loopne
and
jl
sub
or
outs
pop
out
fdiv
jmp
and
mov
bound
push
and
mov
retf
add
mov
mov
and
xchg
jecxz
(bad)
sub
enter
ins
lds
xor
inc
or
test
arpl
aad
push
or
or
and
fxch
shl
adc
imul
dec
inc
add
jmp
lds
in
mov
mov
cli
sub
enter
add
pusha
pop
jo
inc
inc
inc
fstp
mov
xchg
xchg
pop
idiv
shl
inc
push
pop
adc
pop
fist
rep
outs
ss
jle
adc
test
repnz
enter
iret
push
dec
leave
add
ds
jle
push
shl
mov
loope
push
stos
mov
dec
test
mov
mov
jl
cmp
mov
or
xor
call
outs
jmp
sub
pop
(bad)
dec
imul
rol
pushf
dec
dec
in
and
out
inc
mov
sbb
sub
inc
lds
rcr
or
outs
hlt
js
cmp
sti
or
inc
push
sbb
leave
les
adc
push
fcomip
retf
fs
cmp
scas
ret
adc
push
cmps
test
mov
jge
pop
push
or
mov
push
je
fucomi
or
add
jl
push
pop
push
rol
jne
dec
mov
mov
lock
sub
ds
pop
and
addr16
mov
push
mov
jmp
data16
call
arpl
out
push
stos
icebp
inc
mov
rcr
pop
jecxz
dec
outs
mov
sbb
lods
in
test
xor
push
mov
adc
xchg
jecxz
inc
retf
je
sub
and
mov
dec
mov
mov
lock
fsub
outs
imul
pop
inc
add
cmp
cmp
jb
out
or
pop
lods
arpl
xor
jns
mov
outs
call
aas
mov
jmp
or
push
mov
adc
pop
rcr
and
cmps
cwde
(bad)
stos
into
inc
pop
or
sar
outs
inc
push
mov
dec
aam
mov
jl
pusha
xchg
jle
repnz
jle
cmps
mov
in
nop
fild
pop
mov
jns
data16
stos
lahf
je
mov
popa
push
outs
sahf
popf
mov
inc
dec
pop
data16
pusha
aas
iret
adc
dec
imul
daa
adc
add
fsubr
dec
sub
push
sub
or
iret
(bad)
(bad)
scas
pop
imul
in
ror
dec
jmp
pop
jns
pop
and
fild
inc
mov
fimul
fwait
cmp
es
mov
les
mov
dec
push
mov
push
and
cdq
retf
mov
(bad)
and
push
fdiv
or
in
or
xchg
pusha
lahf
pushf
pop
xchg
sub
push
gs
jg
cs
(bad)
xchg
aas
and
cmp
jg
lods
imul
xchg
mov
dec
mov
fisttp
adc
out
sahf
fwait
adc
push
mov
not
dec
dec
call
(bad)
aam
pop
gs
sbb
push
bound
(bad)
clc
jbe
popf
in
mov
aad
or
jl
adc
aad
pop
cli
add
call
mov
movs
call
mov
repnz
jnp
fldcw
popf
lods
cld
pushf
jmp
and
push
push
jno
sub
add
inc
jno
dec
sbb
push
jmp
fwait
jmp
fucomp
imul
leave
or
rol
retf
bound
jb
dec
ss
add
div
push
add
mov
add
add
or
pushf
out
mov
cs
push
enter
scas
and
mov
(bad)
jp
nop
xchg
icebp
lods
pop
push
imul
int
mov
mov
xor
push
cs
pop
call
xchg
stos
xchg
and
lods
test
ret
xchg
dec
pop
inc
ror
mov
add
xor
xchg
jbe
jge
ins
jo
add
pop
pop
sbb
cmp
scas
dec
mov
gs
fstp
jmp
sbb
shl
mov
pop
cdq
aas
ss
push
mov
push
bound
out
inc
push
xchg
jmp
arpl
clc
xor
aas
xchg
adc
enter
shr
xor
pop
xor
outs
push
dec
push
push
xor
sub
jg
daa
push
sub
out
cmp
sbb
jbe
jnp
jmp
nop
push
jo
mov
dec
sbb
retf
pop
mov
ja
fs
cld
(bad)
sub
test
in
jnp
ror
pusha
jmp
xor
add
loop
outs
js
test
aas
adc
pushf
dec
fisubr
add
hlt
pop
cmp
jno
xlat
(bad)
aam
repz
fld
cmp
add
push
mov
int3
scas
pop
or
mov
call
ret
push
stos
ins
mov
ror
add
popf
aad
push
popa
cmp
(bad)
pop
dec
test
loope
enter
(bad)
leave
push
sub
sub
test
xor
clc
aas
lods
mov
jbe
mov
and
mov
outs
add
xor
popf
xchg
cwde
mov
movs
loop
int3
add
xchg
lahf
call
jp
shr
out
mov
imul
sub
mov
call
dec
loope
or
xor
mov
xlat
add
push
xchg
hlt
xchg
nop
nop
push
sar
inc
fisttp
add
add
daa
pop
das
(bad)
repz
mov
sub
add
lock
inc
movs
and
add
cmps
jl
jne
sbb
push
loope
dec
push
and
pushf
pop
xor
sbb
shl
iret
aad
mov
lahf
mov
mov
xlat
push
ja
mov
in
cmp
jg
or
(bad)
dec
or
adc
(bad)
mov
scas
jl
and
pop
arpl
enter
cwde
xor
mov
or
data16
icebp
lods
imul
bound
jns
fucom
fild
pop
js
mov
mov
mov
clc
mov
cmp
pop
xchg
jp
and
add
ds
push
sbb
(bad)
mov
fxch
stos
lock
mov
jl
enter
loope
bound
test
inc
pop
cdq
dec
adc
jecxz
mov
js
cmp
(bad)
aad
sbb
fdivr
mov
cmp
push
dec
shl
mov
inc
aam
stc
cmp
push
aad
out
stos
add
scas
xchg
hlt
mov
or
mov
ins
push
mov
inc
and
add
sub
cwde
sti
jno
sbb
test
enter
mov
dec
icebp
inc
sbb
jecxz
aam
cmps
adc
sbb
loopne
arpl
cmp
test
fs
sbb
dec
jmp
push
ss
pop
push
and
jmp
push
fisttp
loop
jle
lds
div
pop
fcos
mov
sbb
das
mov
xor
add
lock
add
sub
sbb
mov
out
fcmovnb
adc
push
test
retf
pop
jae
mov
rol
jbe
repz
mov
push
add
xchg
data16
leave
gs
repz
(bad)
repz
mov
xchg
xchg
xchg
(bad)
(bad)
(bad)
(bad)
and
sahf
fst
add
nop
inc
push
add
popf
push
jmp
mov
es
sti
push
add
jp
pop
push
xchg
clc
out
dec
xchg
sti
in
stc
lea
mov
(bad)
lds
pop
sub
xor
inc
sub
out
push
fsubr
scas
aaa
add
mov
mov
test
aaa
fistp
mov
dec
in
ds
outs
in
mov
movs
shl
dec
pop
retf
enter
dec
movs
aad
int3
mov
out
pop
out
pop
ficomp
inc
inc
xchg
sbb
pop
push
push
or
fist
jge
mov
pop
popa
nop
or
cs
sbb
ror
mov
mov
fdivr
add
lds
sbb
mov
push
or
aas
scas
push
xor
lods
loopne
jno
retf
shl
popa
dec
inc
int
push
imul
(bad)
in
(bad)
(bad)
cmc
sbb
or
imul
add
gs
aam
jge
dec
xor
(bad)
jmp
bound
rcl
scas
jbe
push
or
xchg
iret
add
arpl
sbb
rol
pushf
and
mov
jge
pushf
and
jnp
sbb
mov
xchg
cmp
adc
sub
pop
mov
xchg
loope
inc
and
test
inc
mov
mov
push
loope
jecxz
pop
out
mov
(bad)
in
or
jl
out
push
loope
ds
sbb
xchg
outs
mov
test
fs
jmp
sbb
jns
ja
pop
mov
ins
imul
pop
jmp
cs
or
test
dec
cwde
test
jnp
cmps
add
imul
inc
ds
sub
sub
xor
loope
pusha
adc
xchg
daa
jp
rol
jmp
push
fs
syscall
push
mov
dec
jns
cmps
int3
sub
setne
jns
sub
gs
icebp
in
jge
jae
sbb
shl
fst
sbb
adc
popa
jp
or
(bad)
push
mov
fsin
jbe
sbb
je
out
loope
(bad)
sbb
stos
inc
loop
fcomp
sub
test
xchg
mov
mov
cdq
pop
jecxz
iret
in
adc
adc
aad
add
adc
das
jo
adc
jo
adc
jle
retf
xor
xlat
adc
mov
out
ins
test
fwait
dec
sbb
je
mov
aas
call
fs
iret
mov
jnp
and
jle
dec
inc
mov
jns
rcl
push
out
jg
cli
mov
out
outs
pop
mov
movs
clc
sbb
loopne
lods
mov
jl
lds
pop
dec
lods
add
loope
rcr
jo
xor
cmp
dec
je
mov
mov
sub
not
repnz
or
push
jnp
iret
sahf
pop
fdiv
gs
pop
or
sbb
es
fsubp
jo
fist
enter
cmp
(bad)
sbb
add
ror
pop
rol
aam
ret
ror
fadd
pusha
retf
or
int3
imul
jge
call
cs
add
inc
in
push
mov
mov
jmp
bound
lahf
fmul
xchg
nop
xor
jle
pop
xchg
outs
sub
xchg
sub
xlat
xor
and
sbb
jmp
inc
mov
adc
cld
inc
sub
or
sub
add
call
jl
cmps
dec
jne
inc
stc
and
pop
adc
mov
xchg
pop
cmps
add
jns
pop
stos
imul
test
cmp
sbb
fdiv
movs
mov
push
mov
xchg
ror
cmps
add
dec
mov
and
std
jno
lods
int3
test
ficomp
xlat
inc
or
mov
xor
push
stos
cs
leave
push
cs
mov
loope
bnd
mov
icebp
jge
or
xchg
xor
loop
lods
push
dec
mov
jns
pop
mov
repnz
es
mov
cmp
aaa
das
int3
cdq
es
mov
sbb
cmp
aam
imul
fidiv
(bad)
ss
out
popa
inc
or
mov
mov
loope
xchg
scas
retf
xchg
sbb
jmp
dec
fidivr
mov
fistp
cmp
add
inc
sar
adc
movs
cmps
cmp
or
mov
add
add
sub
div
dec
inc
shl
pusha
xchg
fsubrp
inc
loop
fiadd
lods
fwait
adc
enter
push
jle
rcl
loopne
cwde
jle
imul
in
call
jmp
int
ds
push
shl
hlt
cmp
adc
or
scas
ja
jo
add
ja
repnz
mov
sbb
clc
(bad)
mov
mov
push
mov
shr
pushf
add
xor
cmp
push
retf
mov
mov
in
sbb
adc
cmps
jo
stc
int3
xchg
xlat
push
push
mov
outs
xchg
sbb
or
js
in
daa
inc
xchg
mov
mov
mov
inc
jl
js
push
mov
inc
push
test
inc
fist
outs
mov
xchg
jno
push
push
jo
jb
std
push
xchg
or
mov
mov
or
fdivrp
and
pop
or
add
add
jbe
pusha
dec
lock
ds
add
push
jecxz
ins
push
adc
(bad)
push
pop
cmp
mov
jb
mov
push
sti
ja
xlat
scas
sub
xor
jb
sbb
xor
xor
dec
xchg
dec
movs
mov
movs
loopne
and
jnp
adc
sbb
add
inc
jl
push
(bad)
aas
fwait
and
rcl
push
(bad)
add
dec
adc
pop
sti
and
jb
test
test
xor
xor
fs
shl
adc
push
icebp
daa
pop
mov
sbb
dec
mov
lods
adc
jle
inc
or
sub
push
cmp
mov
add
fld
xor
sbb
inc
or
dec
fstp
stc
iret
jmp
cmp
jnp
in
add
dec
lea
mov
xor
inc
adc
outs
int
jae
jo
outs
jno
shr
jae
mov
xlat
sbb
dec
pop
in
xor
(bad)
popa
je
add
pop
dec
push
sub
mov
cmp
(bad)
cdq
jnp
adc
xchg
std
pop
ds
icebp
mov
repz
out
sub
out
jl
retf
cmps
cmp
lea
push
sub
hlt
(bad)
or
cmps
mov
cmc
xor
cli
movs
push
xor
test
cmc
xor
add
(bad)
loop
jae
mov
movs
cmc
ror
and
cmps
and
sub
pusha
out
push
aas
mov
rol
ja
push
mov
cmp
jle
cmp
leave
jns
jp
inc
sub
frstor
inc
cwde
mov
pop
movs
fadd
pop
mov
sar
rol
mov
pop
jne
cmps
sub
addr16
pop
sub
iret
mov
jne
xchg
sbb
push
retf
jmp
ins
mov
push
fidiv
mov
xchg
lds
push
ret
inc
iret
pmullw
push
int3
sub
mov
dec
adc
push
jmp
sub
sub
xor
mov
call
pusha
and
loope
leave
sub
mov
test
sar
mov
stos
aaa
sbb
jne
xor
xor
mov
jne
movs
push
fwait
ss
(bad)
inc
daa
lods
lods
pop
mov
movs
arpl
jbe
pop
and
mov
jle
pop
push
mov
(bad)
popf
mov
(bad)
inc
imul
cmp
cmps
cmc
test
sub
and
push
dec
jne
aas
mov
hlt
sbb
mov
mov
pop
mov
push
test
jmp
lds
popa
xor
sub
fstp
leave
and
loope
cmp
popf
sub
sub
and
pop
lods
jo
les
test
xor
pmaxub
push
ret
xlat
mov
inc
adc
dec
pop
or
fdiv
cmp
add
or
adc
fbstp
shl
je
loopne
je
mov
dec
outs
push
xor
repz
rcl
retf
sahf
cmp
sub
pop
mov
add
sbb
mov
xchg
sub
test
xchg
mov
dec
daa
pop
shr
fcomi
mov
sti
xchg
cwde
xchg
push
push
gs
mov
stos
add
and
arpl
int
mov
les
sti
arpl
jnp
clc
stos
dec
jg
push
cwde
adc
mov
cmp
add
xchg
xchg
ins
std
push
hlt
int
add
in
sub
or
aad
xchg
(bad)
adc
mul
mov
inc
sbb
gs
adc
(bad)
loope
dec
cmp
lahf
sbb
int3
adc
loop
mov
out
dec
fwait
in
sti
cwde
repnz
aaa
push
inc
rol
lock
ficomp
test
and
mov
aaa
mov
jecxz
ss
xor
or
xor
and
setle
mov
cld
shl
ss
sbb
adc
lea
xlat
imul
in
push
push
add
les
out
das
iret
mov
mov
inc
cdq
or
mov
cmp
inc
mov
jbe
addr16
mov
push
stos
add
push
test
sar
mov
pop
into
push
clc
fsubr
lahf
xor
add
push
pop
mov
push
imul
fstp
pop
das
inc
or
xchg
in
mov
(bad)
jns
ins
pop
btr
mov
and
pop
adc
(bad)
dec
mov
fwait
cwde
repnz
icebp
inc
cli
inc
jo
jbe
or
and
add
jecxz
in
pushf
retf
or
pop
lds
outs
je
pop
sbb
out
mov
dec
lahf
(bad)
jo
adc
out
mov
cmp
mov
xor
test
inc
and
jb
mov
loope
aas
repnz
cmp
xchg
mov
enter
(bad)
mov
aam
js
(bad)
(bad)
dec
pop
add
inc
jg
or
es
dec
mov
mov
sbb
add
test
rcl
mov
js
cmp
fwait
push
sub
mov
mov
les
imul
push
mov
outs
push
fnstenv
inc
lds
iret
cmp
dec
add
or
mov
push
dec
test
test
rcr
(bad)
ror
iret
leave
fwait
imul
iret
sahf
push
xchg
add
mov
imul
or
jno
push
lds
loop
fld
xlat
cmp
in
sub
aaa
sbb
jmp
sbb
call
pop
jae
add
mov
(bad)
lods
xchg
shl
jb
stos
in
mov
popf
push
jle
push
fcmovnu
fild
pop
stc
aas
repnz
int3
push
fnstsw
mov
or
push
dec
clc
cmp
pop
js
adc
std
mov
sbb
fiadd
retf
mov
adc
loop
fidiv
bound
daa
mov
repz
aas
fcomip
pop
mov
mov
or
out
scas
mov
dec
fimul
pushf
mov
mov
cmp
scas
data16
addr16
loope
lea
retf
repz
and
movs
les
xchg
pop
xor
test
dec
arpl
call
hlt
xchg
jae
or
pusha
jno
leave
push
in
adc
repz
into
lahf
sahf
jge
mov
inc
ret
mov
mov
add
fmulp
cli
std
push
xor
sbb
popf
ins
sar
frstor
cdq
mov
fnstenv
and
test
push
push
pop
shl
jecxz
sbb
mov
rol
fdivr
pop
adc
xor
push
mov
packuswb
int
ins
lods
mov
test
mov
jb
adc
cli
sub
push
test
mov
mov
push
fcomi
in
push
les
nop
or
je
pop
bnd
adc
shr
adc
out
lods
movs
mov
push
popa
movs
jae
mov
nop
push
xor
pop
test
sti
add
movs
inc
sub
or
xor
push
test
sbb
movs
imul
or
push
adc
mov
add
gs
pop
fcomip
inc
popf
(bad)
add
inc
xor
mov
ror
sbb
loop
rcl
std
in
or
not
or
xor
les
imul
lods
test
mov
xchg
mov
sbb
loop
push
cmp
cs
icebp
gs
and
inc
shr
jle
mov
pop
and
cmp
in
retf
std
push
jmp
xchg
xor
dec
(bad)
jp
scas
adc
mov
aas
push
push
xchg
and
adc
aam
icebp
xor
cmp
fucomi
sub
mov
aam
gs
jl
sahf
inc
push
push
cmp
dec
xchg
sbb
xchg
push
lds
mov
in
jl
adc
mov
pop
add
lahf
imul
outs
stos
aas
fistp
pop
test
hlt
cmps
cdq
xor
and
add
xor
mov
outs
mov
pop
xchg
push
icebp
xchg
retf
or
hlt
hlt
dec
ror
retf
cwde
das
cmp
cmp
aam
test
rol
inc
sahf
cmp
bound
inc
out
or
loop
push
adc
sub
xor
mov
movs
das
or
mov
sbb
xchg
mov
popf
xchg
daa
repnz
mov
xchg
xchg
leave
gs
jecxz
inc
mov
pop
mov
cs
push
pop
jmp
out
rol
mov
in
ins
cmp
aaa
xchg
arpl
icebp
cwde
jmp
movs
out
push
cs
gs
shufps
retf
rol
push
loopne
push
dec
hlt
adc
sbb
xchg
push
mov
and
aad
out
inc
xchg
imul
xchg
or
mov
ret
mov
and
test
int
inc
sbb
and
iret
lahf
(bad)
xor
mov
jnp
loopne
xchg
and
sbb
add
xchg
cmp
aas
jae
aaa
mov
call
inc
pop
aam
or
mov
pmaxub
mov
rol
cmc
aaa
popf
stc
and
sbb
xor
ds
bound
and
rol
or
int3
push
pop
ins
xor
call
push
outs
stos
sqrtps
inc
mov
dec
sub
icebp
pop
or
push
cmps
jnp
stos
(bad)
or
dec
call
cmc
ja
push
mov
in
ret
sbb
imul
(bad)
ins
and
dec
mov
fwait
div
jp
pop
and
mov
xor
retf
retf
push
push
clc
popf
mov
fild
stos
mov
inc
gs
gs
cmp
lahf
shl
cmp
mov
dec
movs
sub
sub
(bad)
and
and
lock
in
mov
mov
sbb
xor
dec
fcomip
sahf
cmp
adc
pop
mov
cs
sbb
pop
mov
dec
outs
sub
cmp
adc
shl
mov
mov
je
and
ins
gs
pop
mov
mov
stos
push
popf
(bad)
xor
xor
cmp
mov
jle
ins
sub
mov
xchg
out
call
push
jns
retf
scas
aad
push
in
in
shl
enter
xor
mov
outs
inc
sub
rcr
dec
pop
mov
jecxz
pop
ret
fistp
arpl
daa
pop
lock
push
mov
add
add
outs
stc
frstor
inc
loope
xchg
shl
(bad)
push
sub
repz
push
mov
sub
or
repz
sbb
sbb
ja
jb
pushf
inc
cs
pop
sub
loope
in
ins
mov
adc
test
sbb
push
shl
ficom
jnp
xor
out
test
cmp
mov
pusha
test
imul
add
leave
int
push
cmp
inc
stos
div
out
cdq
or
sbb
in
cmps
ins
adc
cmp
pop
aam
and
mov
push
aaa
jmp
(bad)
jne
xchg
mov
adc
enter
in
cmc
sbb
std
sbb
push
daa
push
lea
test
(bad)
popa
stos
cmp
data16
loope
ror
clc
cmps
mov
xchg
cmps
sbb
push
lods
dec
push
jb
inc
fist
lock
xlat
cmps
dec
daa
and
push
inc
fisttp
or
pushf
or
push
inc
and
xlat
pop
mov
and
sbb
int3
std
test
pop
and
arpl
rcr
jmp
mov
rcr
into
and
addr16
xchg
lods
or
cmp
mov
out
xor
sub
pop
lock
xlat
mov
fild
pop
into
add
jmp
nop
sahf
push
dec
cmp
pop
loope
int3
enter
push
add
and
or
dec
jb
out
cmp
mov
push
leave
and
mov
add
lods
sub
mov
inc
push
lahf
sub
test
aad
call
lds
mov
sbb
xchg
and
sbb
cmp
sub
dec
sub
sar
(bad)
(bad)
outs
dec
mov
xchg
pop
jl
ins
repnz
xchg
pop
stos
xchg
ror
or
(bad)
xchg
addr16
mov
and
(bad)
jnp
push
sar
push
cld
pop
iret
ret
ja
ror
iret
arpl
push
shl
sbb
xchg
aam
push
sub
popa
jmp
ds
jle
enter
jo
lds
ret
xor
arpl
sub
inc
loopne
popf
pop
mov
add
inc
mov
iret
adc
movs
and
test
push
cmps
bound
xor
mov
adc
push
in
xor
imul
sbb
fmul
addr16
stos
xor
mov
cs
mov
or
int
cs
scas
enter
dec
jne
hlt
(bad)
sbb
rcr
dec
cmp
cld
mov
popa
imul
push
sar
cmp
or
(bad)
mov
xchg
punpckhbw
pop
fcomi
adc
pop
mov
pushf
sbb
fcmovu
cmp
push
dec
enter
(bad)
sub
push
retf
icebp
vcvtsi2sd
cmps
popa
cli
dec
loope
inc
adc
inc
stos
pop
pop
fdivrp
stc
or
inc
ins
gs
dec
sub
(bad)
push
mov
std
hlt
inc
push
and
test
push
push
dec
jns
sar
(bad)
int3
add
daa
mov
add
jmp
jg
(bad)
and
test
jne
add
xchg
pop
retf
jp
sub
add
scas
mov
push
nop
fld
mov
mov
sar
xor
push
(bad)
jbe
mov
pop
sti
add
sbb
dec
lods
loopne
and
xchg
mov
adc
adc
push
inc
pop
sbb
bound
sub
xor
leave
(bad)
imul
mov
jp
xchg
lahf
imul
or
cwde
mov
repz
nop
xor
mov
shr
out
and
fisubr
call
loopne
jbe
xor
mov
mov
es
xor
lock
mov
sbb
mov
sbb
or
(bad)
cmp
outs
cmp
ja
mov
cmp
adc
loope
cmps
fadd
push
xchg
xlat
cmp
imul
push
ds
add
adc
xor
les
xchg
add
jb
sub
sub
dec
rol
mov
jnp
outs
out
jmp
jns
into
sbb
pop
jb
jmp
popf
out
ret
mov
sbb
or
mov
mov
shl
aam
mov
and
jecxz
stc
jecxz
fbstp
imul
outs
test
dec
jmp
add
jp
cmp
push
sub
xchg
push
out
push
repnz
mov
jnp
and
cmp
(bad)
fdiv
iret
scas
dec
loopne
mov
rcr
add
xor
dec
cmp
xchg
push
jmp
rcr
cmp
jns
imul
mov
mov
test
mov
shr
out
mov
dec
inc
lea
shl
data16
(bad)
dec
sub
add
pop
inc
call
inc
xor
pop
arpl
fwait
add
call
je
(bad)
cmp
fist
add
(bad)
xchg
cmp
cmp
out
or
dec
ss
js
les
and
outs
je
dec
(bad)
mov
stos
push
iret
sub
adc
jge
pop
lds
scas
adc
fbld
sbb
add
xor
xlat
pusha
dec
pop
or
inc
mov
lods
les
xchg
sar
mov
(bad)
popa
and
ror
sahf
add
outs
add
xchg
add
fcomp
je
xchg
jbe
sub
lods
lea
cmp
push
xchg
shr
jnp
jmp
cmp
adc
cmp
out
sub
lahf
(bad)
mov
(bad)
push
cmps
sub
sbb
mov
pusha
out
aas
xor
dec
ret
pop
dec
out
out
test
in
sbb
(bad)
mov
xor
out
(bad)
jo
mov
xchg
retf
sbb
call
xchg
lea
jmp
xor
fldcw
retf
adc
xor
rcl
aas
and
rcr
and
mov
ins
lock
push
in
add
jg
in
jmp
pop
sub
add
xchg
dec
cmc
int3
adc
pop
mov
(bad)
mov
sub
repz
or
jmp
mov
ret
dec
xor
mov
popa
dec
repz
movs
fwait
into
sub
lock
call
adc
fs
sub
and
sub
ds
retf
out
cmps
or
ja
cmp
gs
jl
dec
and
ret
xchg
xor
iret
call
icebp
loopne
pop
mov
jmp
fs
or
aas
and
add
(bad)
repz
mov
aas
mov
out
mov
mov
mov
arpl
xchg
cmp
jo
sbb
(bad)
mov
dec
ds
jbe
nop
fbstp
pop
push
push
cmp
adc
add
aas
dec
outs
cli
pop
sbb
ja
mov
and
in
call
bound
inc
mov
bound
int3
outs
ret
sbb
ret
jae
mov
add
inc
test
mov
ret
adc
retf
push
mov
je
xor
push
and
dec
mov
add
pop
adc
xchg
sub
add
(bad)
xchg
or
sub
jmp
dec
mov
and
dec
push
repz
push
popf
or
xor
popa
out
mov
mov
into
mov
add
ror
in
push
dec
es
(bad)
ret
aad
xchg
inc
dec
add
and
jge
in
sub
jbe
jno
xchg
je
jmp
pop
cmp
lahf
jns
mov
sti
xor
and
add
dec
or
cs
ret
and
leave
into
out
xchg
imul
les
push
dec
mov
mov
imul
pop
dec
mov
and
pop
icebp
mov
push
inc
popf
hlt
or
or
xchg
add
cmp
dec
add
addr16
push
push
cmps
and
mov
jg
pop
lahf
sub
jnp
jle
or
inc
std
(bad)
and
inc
or
or
and
pop
or
arpl
(bad)
fadd
dec
bound
imul
mov
loope
(bad)
cwde
clc
xchg
jge
or
aaa
or
ja
loop
lods
lods
shr
inc
ss
xchg
pop
sahf
aad
pop
callw
pop
mov
leavew
mov
and
je
push
je
add
add
in
push
mov
jno
dec
hlt
out
fisub
std
fcomp
mov
jecxz
lods
dec
push
nop
jle
add
imul
xchg
dec
out
mov
cdq
mov
jae
ror
pop
(bad)
(bad)
mov
jge
fdiv
adc
sbb
jo
or
sbb
in
xor
fist
jo
sub
push
pop
addr16
dec
mov
fcom
loop
outs
jp
cld
fild
add
sbb
retf
or
repnz
ss
push
jge
sub
inc
stc
(bad)
imul
imul
aad
push
push
loope
dec
jb
lds
stos
jmp
xchg
inc
leave
clc
xor
mov
pop
sub
hlt
sahf
push
sti
push
adc
push
and
cmp
call
retf
loope
jae
ficom
retf
inc
ja
hlt
jns
sbb
fdiv
mov
jnp
retf
(bad)
sbb
mov
out
call
out
or
add
or
je
fnstenv
mov
jne
adc
test
mov
sahf
pop
or
call
sub
pop
movs
or
jp
mov
(bad)
xor
xor
rcr
pusha
loop
mov
adc
inc
fild
fdivr
jnp
or
cld
ins
push
jmp
sbb
mov
addr16
pop
jecxz
mov
sub
xor
pop
sub
xchg
mov
into
push
inc
push
push
ret
adc
sbb
ror
mov
bound
pcmpeqw
cmps
bound
out
mov
lahf
mov
ins
xchg
cdq
mov
jp
dec
pop
mov
std
xor
cmp
jbe
mov
sub
add
mov
loope
ss
out
test
xor
outs
mov
cs
stos
cmps
xor
inc
jmp
pop
mov
mov
or
arpl
xlat
sbb
or
out
and
aam
inc
and
jmp
and
xchg
mov
jne
inc
jg
and
lods
jp
stos
pop
cmps
sbb
icebp
js
sub
push
adc
loop
je
sub
xlat
pand
outs
call
fimul
xchg
lock
and
or
dec
daa
sti
or
cmp
stos
int3
test
cld
add
pop
(bad)
jmp
jb
jmp
inc
xchg
add
add
pusha
adc
ret
lea
popa
mov
scas
js
stc
retf
fldenv
inc
jne
adc
bound
sahf
push
lock
int3
cwde
ret
cmps
push
movs
das
mov
jle
fimul
arpl
ja
mov
jl
sbb
imul
push
pop
imul
test
cmp
xchg
cmps
cmp
push
in
pop
mov
xchg
pop
inc
xlat
jbe
pop
cs
sub
ffreep
iret
fs
xchg
cmp
cmps
mov
test
dec
fld
cli
jns
pop
cmp
sub
ja
and
test
mov
push
pop
sti
push
push
mov
jb
mov
inc
xchg
rcl
ficom
iret
stos
retf
dec
mov
test
mov
test
(bad)
loope
int3
sbb
jno
xchg
pop
inc
mov
xchg
mov
jl
jno
mov
aaa
iret
and
sub
add
jl
dec
push
gs
and
push
push
xchg
stos
and
mov
dec
or
inc
cwde
xor
inc
(bad)
(bad)
inc
sub
test
scas
mov
adc
mov
jnp
mov
cli
sar
ss
mov
movs
mov
mov
test
xchg
jno
imul
xor
pop
popa
out
xor
in
test
inc
int
xadd
adc
repnz
jecxz
enter
jbe
movs
pushf
or
int
mov
in
enter
jmpw
jno
dec
pop
mov
cmps
mov
jmp
sbb
test
mov
dec
rcr
cmps
mov
mov
jno
neg
cmps
adc
mov
aaa
popa
jae
push
add
jb
int
add
xchg
fbld
outs
inc
repz
les
pushf
imul
pop
pop
inc
shl
int
add
add
mov
repz
adc
mov
in
pop
dec
mov
sub
out
loopne
jmp
push
test
push
pop
xor
loope
sti
pop
mov
retf
pop
dec
ret
in
lds
js
push
sub
push
inc
test
cwde
mov
xchg
scas
ins
or
mov
sar
push
or
popf
and
jb
xchg
sbb
push
sub
hlt
sbb
cmps
pop
out
aaa
js
and
or
inc
fist
inc
adc
sub
sbb
popf
sar
dec
mov
mov
pop
or
mov
in
ja
dec
sub
out
sub
in
je
outs
call
out
in
inc
adc
mov
pop
scas
xor
push
sbb
popa
dec
stos
repz
shl
jl
sbb
lahf
push
pop
std
lock
xor
fwait
add
pusha
lods
push
cmps
mov
bound
test
sub
ins
fld
jg
ja
cld
push
leave
mov
add
jmp
xlat
out
sahf
out
cwde
fsqrt
aas
aad
pop
in
sti
enter
mov
imul
mov
mov
push
dec
cmp
mov
mov
adc
inc
bswap
lods
xor
les
fdivr
out
cvtps2pd
ret
push
add
pop
or
xchg
ret
jb
jl
mov
jmp
mov
adc
iret
js
mov
adc
xlat
bound
dec
in
(bad)
fadd
sbb
cmp
jmp
ficom
sub
pop
pop
xchg
lahf
icebp
pusha
in
mov
pop
outs
and
mov
push
jnp
outs
aas
call
lds
xchg
loop
cli
loopne
push
fisttp
xor
in
mov
sbb
inc
popa
jmp
icebp
or
jno
ficomp
xchg
arpl
pop
idiv
outs
cmp
cdq
ss
add
and
mov
add
leave
xor
mov
adc
popf
clc
daa
or
ror
push
loopne
xchg
jmp
nop
jg
mov
cmp
sub
or
jmp
push
pop
fdivr
push
fimul
outs
in
xchg
inc
dec
push
in
ins
leave
and
pop
inc
mov
fldl2e
out
mov
icebp
rol
fimul
lds
sbb
les
cmp
xchg
inc
mov
pop
dec
jbe
dec
adc
icebp
sub
stc
(bad)
fldcw
leave
mov
les
jae
inc
shl
mov
inc
out
and
mov
xchg
cdq
aad
mov
inc
add
fld
and
mov
jmp
sahf
(bad)
sahf
in
jge
jle
xchg
ja
les
call
sbb
movs
push
enter
mov
and
das
and
jnp
nop
aam
nop
ret
xor
mov
mov
mov
fdiv
retf
mov
(bad)
fld
imul
gs
inc
mov
inc
fcomp
mov
arpl
pushf
dec
adc
(bad)
dec
xchg
push
mov
cmc
cmp
jmp
cmps
imul
jno
push
stos
mov
into
sti
jp
xor
adc
inc
push
scas
mov
push
jne
dec
jns
push
jp
mov
movs
mov
stos
cld
in
sbb
or
ror
mov
push
ds
jnp
mov
mov
je
fsub
sbb
adc
outs
out
push
arpl
mov
les
les
jg
mov
push
in
xchg
or
inc
cmp
iret
cmp
cdq
and
std
sar
(bad)
into
jb
xchg
call
mov
inc
cmp
fdiv
enter
data16
popa
lahf
test
jbe
arpl
and
fcom
jnp
and
push
cmp
daa
cli
arpl
sub
shl
ret
dec
scas
leave
xchg
dec
repz
cmp
add
add
and
mov
loope
pop
mov
xchg
outs
(bad)
cmp
in
adc
jne
inc
xor
xor
mov
in
jg
sbb
fucom
sar
imul
inc
push
int
cmp
push
aad
xor
push
scas
mov
pop
xlat
adc
add
or
and
or
sub
or
xor
jae
cwde
icebp
add
mov
repz
push
scas
mov
fmul
push
cmps
in
and
or
stc
loop
sti
cmc
push
fcom
push
cli
jbe
fcom
adc
loop
gs
mov
pop
adc
fs
aad
adc
cdq
pop
repz
cdq
(bad)
sbb
popf
jp
int
aaa
xchg
jnp
jnp
hlt
xchg
jmp
ds
shl
arpl
ret
push
cmps
pop
pop
push
push
(bad)
dec
out
push
jae
mov
push
repnz
(bad)
in
inc
or
div
mov
xchg
xchg
mul
push
or
retf
shr
mov
vpandn
xchg
push
repnz
dec
mov
lea
add
in
cmc
jmp
rcr
xchg
jl
pop
jnp
test
movs
data16
inc
imul
test
dec
shr
mov
push
push
mov
imul
xor
cwde
xchg
test
pop
or
mov
mov
out
mov
aas
ret
stc
xchg
loope
enter
inc
pop
xor
and
adc
jne
xchg
xor
push
mov
xchg
(bad)
xchg
(bad)
jmp
outs
xor
popa
mov
pshufw
jmp
inc
xor
sbb
lods
test
iret
cmp
shl
ret
mov
mov
sbb
jp
xlat
pop
mov
(bad)
call
xor
es
test
add
dec
or
fs
and
fstp
dec
pop
pop
les
or
jmp
movs
into
fisubr
call
jmp
gs
js
ins
repnz
jmp
cmc
dec
mov
inc
ret
mov
mov
mov
(bad)
xor
add
ins
retf
push
(bad)
sub
jbe
jnp
inc
test
or
push
cwde
pop
xor
mov
cmp
(bad)
adc
xchg
dec
lock
cs
pop
mov
or
adc
jb
add
popa
aaa
out
mov
mov
xor
loopne
out
or
sub
jmp
lea
jg
jge
ja
push
loopne
adc
je
mov
out
adc
into
mov
jbe
js
jg
pop
mov
sbb
enter
jecxz
sbb
repnz
popf
adc
mov
inc
movs
sub
or
test
cmp
sub
push
xor
loopne
or
or
xchg
clc
mov
bound
inc
add
jecxz
in
in
in
loopne
or
push
sar
leave
loop
push
movs
mov
aaa
inc
push
mov
std
enter
loop
xor
sub
pop
mov
mov
xlat
popf
jmp
fcom
in
pop
pop
cmps
mov
in
inc
and
push
dec
js
jp
jae
adc
call
retf
popf
cmp
inc
pop
fcomp
or
sahf
rcr
push
fisub
stc
jo
ss
pushf
in
cmp
cli
sub
jmp
xchg
dec
imul
bound
ss
out
add
adc
ror
push
xor
scas
ins
addr16
adc
cs
add
imul
loope
aad
movs
mov
fisttp
jb
and
retf
pop
xor
sti
test
test
jb
out
dec
cli
addr16
sbb
sub
add
cmp
stos
jmp
xchg
data16
rcr
dec
dec
adc
je
clc
sbb
out
bound
mov
mov
adc
popf
scas
das
pop
cli
jmpw
aaa
in
vandps
(bad)
jne
or
xchg
leave
imul
sub
cmp
call
mov
sti
out
mov
fidiv
(bad)
inc
outs
pushf
pop
imul
and
gs
cmp
aam
dec
xor
stc
cmps
loope
push
jbe
mov
add
movs
fisttp
mov
jg
inc
xchg
(bad)
shl
push
sub
retf
sbb
jmp
(bad)
in
mov
ficomp
fwait
test
outs
jmp
(bad)
gs
cmp
xchg
gs
cmps
add
xchg
test
push
mov
xor
sbb
add
loop
iret
inc
dec
es
mov
fs
fs
mov
(bad)
stos
out
fisttp
cld
pop
sbb
fwait
add
stc
sbb
adc
clc
call
cwde
sub
sbb
nop
leave
call
sbb
adc
dec
sahf
inc
xor
cmp
push
or
mov
push
out
je
jl
jecxz
sub
adc
cmp
mov
and
xchg
or
sar
mov
ins
dec
or
sbb
mov
mov
pop
stos
test
cmp
xlat
retf
mov
jbe
enter
inc
dec
inc
mov
add
imul
imul
stc
cs
cmc
xor
push
pop
je
push
mov
add
push
rol
ins
stos
jecxz
or
je
sub
pop
fnsave
sub
mov
xchg
sbb
shr
mov
in
cwde
and
fld
(bad)
imul
mov
jb
xchg
inc
adc
out
push
lea
sbb
lds
xchg
push
fs
icebp
jl
lea
cmc
pop
in
and
dec
or
aaa
xchg
out
push
jo
pop
repnz
sub
enter
imul
les
or
mov
icebp
and
jp
punpcklbw
je
test
fisubr
inc
jne
push
xchg
cwde
mov
fdiv
pop
xor
out
cmps
cmp
ins
les
aaa
fdivrp
sub
leave
repnz
fwait
or
out
mov
sub
pusha
cs
adc
cmp
cli
(bad)
sahf
mov
aas
cmp
dec
cs
inc
(bad)
or
repnz
jmp
xlat
les
test
mov
push
inc
out
push
daa
into
lods
lods
jge
lahf
lea
mov
aaa
push
popa
push
mov
loope
add
mov
sbb
ss
or
stos
push
int3
into
push
push
inc
jge
enter
sti
add
pusha
jmp
and
and
mov
mov
or
mov
lahf
int
mov
adc
neg
xchg
adc
mov
cmp
sub
sbb
sub
jb
pusha
mov
sub
out
lds
cmps
(bad)
add
dec
adc
cmp
mov
shl
imul
dec
xchg
mov
out
xchg
scas
jl
clc
lods
test
popa
mov
cdq
pop
movs
fdivp
xchg
adc
or
push
add
and
cmp
mov
mov
xchg
retf
fidivr
retf
call
pop
jmp
bound
mov
fld
adc
mov
scas
fst
mov
pop
pushf
ss
xor
xor
push
pop
fsub
ret
jp
mov
pop
xlat
data16
imul
popf
out
pop
and
ror
movs
fstp
jno
movs
mov
inc
sahf
std
retf
jp
dec
xor
mov
or
jg
punpckldq
and
lods
in
mov
repnz
mov
or
jo
mov
pusha
lds
or
pcmpeqd
mov
out
mov
pop
aas
xor
test
fadd
retf
imul
inc
daa
xchg
push
es
inc
mov
sub
aad
cmp
adc
imul
sbb
jns
adc
stc
(bad)
sti
pop
mov
pop
jmp
clc
sub
call
mov
mov
add
cmc
mov
enter
enter
add
mov
fcom
mov
jg
adc
jmp
cmps
push
dec
ds
iret
sti
dec
shl
(bad)
out
xor
or
mov
mov
push
test
dec
(bad)
mov
lods
inc
into
pop
pusha
add
pop
ja
mov
daa
sbb
inc
daa
or
push
xchg
add
(bad)
adc
dec
or
dec
inc
inc
add
add
add
pop
in
mov
pop
push
add
adc
fdivp
int3
ret
jne
fwait
loop
out
mov
int3
scas
mov
mov
or
imul
rcl
inc
sbb
mov
inc
pop
jg
inc
je
ficom
push
push
and
xor
sbb
sub
out
sbb
hlt
stos
ds
and
xchg
push
jl
test
add
adc
fnstenv
repnz
mov
pop
out
jb
sbb
adc
sub
scas
int
ins
mov
pop
test
mov
(bad)
stc
push
retf
mov
cld
or
xchg
pop
rep
push
arpl
cmps
push
mov
jl
mov
cmp
mov
(bad)
int3
call
outs
cmp
adc
cli
fwait
sub
mov
movs
enter
jae
or
bnd
xor
pushf
clc
call
retf
stos
xor
sar
pop
out
aad
cmps
cwde
cwde
aaa
sub
xchg
inc
sbb
or
dec
fdiv
je
or
push
cmp
fmul
fsub
das
out
push
xor
rcl
mov
shl
leave
lods
jp
pop
jle
fmul
mov
cmp
rcl
call
sub
and
fidivr
dec
adc
jge
jns
sub
push
outs
mov
or
push
inc
and
cwde
mov
jmp
adc
movs
xchg
xor
xchg
scas
lods
xchg
jne
mov
add
popfw
jb
ds
cdq
in
movs
je
ror
pop
sahf
dec
pop
hlt
add
xchg
mov
std
int
xor
mov
jge
mov
push
out
mov
rol
(bad)
movs
cmp
stos
mov
inc
das
sub
push
js
xlat
cmc
jp
ret
xlat
movs
int3
leave
fcom
out
movs
dec
retf
sahf
stos
mov
push
push
dec
imul
fistp
aaa
xchg
rcl
shl
mov
cmps
dec
call
scas
xlat
jg
out
lods
(bad)
ficom
popf
push
jne
call
call
sbb
mov
loope
adc
mov
test
mov
ins
xchg
push
inc
out
or
jo
push
stos
out
stos
mov
das
sbb
xlat
int3
mov
pop
retf
sub
sbb
pop
pop
retf
mov
mov
jns
pusha
call
leave
jecxz
cmp
push
pop
and
sbb
nop
scas
add
stos
xchg
pop
sub
ins
cld
fldcw
or
loope
ins
inc
push
dec
xor
sub
add
pusha
mov
cmp
shl
xchg
adc
dec
lock
add
xchg
int3
or
xchg
lods
jp
pop
and
or
cmc
sbb
cmc
or
fiadd
cli
push
sub
out
inc
xchg
push
or
jmp
fisttp
fisub
rcr
mov
call
xor
addr16
out
jne
enter
shl
imul
leave
aaa
out
clc
dec
dec
les
cmp
test
ret
xchg
in
mov
cmp
xchg
pop
aad
mov
cwde
cdq
mov
enter
inc
imul
and
cwde
mov
call
(bad)
popa
imul
sub
call
mov
jle
pushf
and
mov
push
sub
add
xchg
sub
mov
add
jmp
xor
mov
adc
xlat
xor
pop
add
(bad)
cmps
xor
xchg
xchg
(bad)
and
idiv
out
mov
mov
inc
dec
adc
pop
add
ja
adc
in
outs
adc
sub
xchg
hlt
fidivr
push
fdivrp
pop
retf
sbb
jns
dec
test
mov
sbb
lods
inc
adc
imul
jb
addr16
pop
and
lea
ds
push
jne
cmps
test
psubsw
mov
mov
(bad)
pop
jo
ret
add
mov
jp
adc
fld
mov
pushf
lods
pusha
out
mov
(bad)
lahf
retf
in
(bad)
push
fld
add
or
xlat
jg
mov
fisub
mov
popf
mov
mov
jbe
pop
push
xchg
out
add
les
pop
pop
xchg
sbb
(bad)
sbb
xchg
and
fisubr
loop
jge
mov
xchg
clc
movs
ret
mov
ins
cli
shl
fmul
adc
adc
inc
push
call
in
scas
jecxz
data16
neg
test
pop
jg
int3
adc
xor
mov
cmp
and
mov
inc
stos
daa
mov
js
mov
ret
add
stc
sbb
xor
sbb
das
mov
ds
ret
and
inc
jo
pusha
ins
pop
add
lahf
call
or
xchg
dec
adc
outs
cmp
and
mov
mov
push
sahf
add
mov
pusha
xchg
xadd
and
adc
pop
leave
xlat
dec
jbe
jge
add
mov
je
loopne
jecxz
cmp
fsub
mov
push
and
push
fsqrt
iret
cmp
cs
(bad)
sbb
push
jbe
push
xor
dec
jae
mov
cmp
dec
fmul
and
jmp
xchg
push
pop
outs
mov
call
fisttp
xchg
mov
inc
push
push
aam
xchg
adc
adc
and
mov
ds
into
mov
je
xor
call
or
cli
inc
mov
aaa
lahf
mov
fstp
in
sti
mov
outs
mov
cmc
push
(bad)
cli
pop
jne
in
retf
mov
out
cmp
adc
mov
pop
xlat
jecxz
mov
fs
stos
aam
sub
dec
rcr
int3
mov
lahf
jl
push
(bad)
fiadd
dec
retf
xchg
push
aad
pop
neg
xlat
test
xchg
jno
adc
arpl
and
shl
push
mov
jne
and
call
mov
popf
arpl
int
stos
iret
dec
sbb
cmp
aam
stos
nop
xchg
and
pop
mov
xor
dec
fiadd
inc
sahf
adc
sub
xchg
mov
ins
jle
out
or
jle
test
and
cmp
retf
pop
div
pop
dec
imul
jmp
sbb
ins
je
jp
sbb
mov
test
push
adc
or
add
mov
pop
xchg
push
rcr
fcom
dec
ror
jp
retf
jecxz
outs
scas
sbb
push
sti
pop
cld
stos
mov
cmp
cmps
push
or
cmc
and
mov
xchg
dec
int
pusha
pushf
aaa
adc
or
(bad)
ret
push
in
sar
andps
jae
in
inc
into
idiv
xchg
jae
retf
sub
rcl
jecxz
cmp
sbb
lods
sub
popf
lods
or
rcl
xlat
sub
sbb
xor
xchg
hlt
xchg
arpl
jbe
int3
pop
adc
fst
outs
sbb
xor
xor
adc
xchg
pop
sbb
lds
mov
push
(bad)
cmc
and
lock
lds
(bad)
mov
pushf
ret
sbb
adc
dec
(bad)
cmp
dec
dec
sub
outs
dec
shr
add
or
add
cmc
pop
mov
mov
movs
int3
mov
lea
into
jg
xchg
jl
ins
xchg
mov
add
enter
jae
or
stos
inc
arpl
in
jnp
xchg
dec
arpl
retf
cmp
inc
mov
pop
dec
xchg
outs
fnstsw
cmp
inc
mov
in
xchg
jne
push
outs
dec
xchg
sub
pop
sar
fcom
jp
or
or
jbe
xor
push
jmp
xchg
lahf
xchg
inc
cmp
ds
(bad)
jbe
push
jbe
jg
out
js
neg
mov
hlt
jmp
nop
mov
ret
scas
sbb
xchg
into
adc
add
jg
sub
add
fisttp
fdivr
adc
xor
enter
sahf
lods
push
jbe
mov
out
cmc
or
aas
inc
mov
fldenv
ins
jmp
jno
test
mov
mov
stc
call
in
jmp
in
repz
(bad)
cli
add
jnp
push
popa
fwait
into
out
mov
add
and
cdq
add
or
mov
out
mov
push
or
ins
or
shl
jae
in
aaa
in
jb
sub
jg
js
adc
hlt
ds
cmp
pop
mov
dec
into
jnp
and
in
mov
pusha
sub
jnp
pop
retf
mov
mov
sub
jo
ror
aad
cmp
(bad)
das
xchg
ja
mov
jmp
push
dec
push
(bad)
adc
sbb
mov
mov
stos
xchg
cmps
sti
mov
pop
push
cmp
mov
jns
and
sbb
movs
dec
fistp
push
push
mov
mov
rol
jo
xor
(bad)
cmc
push
push
fwait
aad
cmp
imul
jle
pop
call
js
stos
pop
mov
stos
jecxz
sub
rol
(bad)
aaa
dec
jg
jmp
sbb
ficom
inc
cmp
jne
pop
or
jmp
ss
sbb
or
and
ficomp
enter
in
ja
xchg
xchg
cmp
aas
nop
or
mov
call
xchg
push
mov
sbb
mov
add
(bad)
jmp
shl
mov
push
mov
xor
dec
rcr
cmps
iret
out
sub
pop
inc
nop
jge
rol
push
pop
mov
or
fsub
es
addr16
pop
pop
mov
(bad)
into
cmp
std
(bad)
jle
jle
pushf
scas
jns
sar
outs
and
mov
adc
fwait
cmps
mov
xchg
or
mov
or
dec
test
hlt
fild
pop
aam
icebp
mov
fidiv
and
pslld
(bad)
sub
jo
push
jle
pop
sahf
enter
xor
cmps
pop
xchg
loopne
(bad)
gs
cmc
ret
adc
es
fidiv
jnp
jo
mov
and
ja
dec
inc
cli
(bad)
jns
fistp
xchg
sbb
lods
ffree
add
jo
scas
dec
fnsave
ins
sbb
mov
xor
adc
cmp
dec
scas
imul
or
lahf
mov
es
daa
inc
les
js
call
out
xor
pop
std
push
jecxz
push
pop
stos
in
(bad)
jecxz
inc
ss
das
or
mov
xchg
dec
lock
push
cld
push
(bad)
mov
movs
imul
mov
adc
std
dec
and
xor
je
and
lahf
inc
or
or
push
inc
repnz
add
adc
icebp
cli
outs
mov
repz
test
ret
addr16
cmp
and
xor
rcr
cmp
sub
push
xor
dec
mov
je
test
adc
ds
vmwrite
sbb
xchg
retf
lods
mov
inc
push
in
lods
dec
jne
push
out
pop
or
cmp
dec
cld
mov
rol
retf
lahf
aaa
rcl
neg
retf
cdq
test
mov
xlat
sub
leave
mov
xor
or
retf
mov
fidivr
xchg
mov
dec
test
vxorps
loopne
fld
repnz
dec
ins
loopne
cs
adc
jb
cs
add
add
(bad)
(bad)
out
dec
fsubr
or
pop
xor
mov
in
dec
leave
ja
push
(bad)
iret
sbb
jl
pop
jg
mov
imul
imul
cmps
bound
mov
dec
add
aad
mov
lds
xor
inc
push
and
pop
dec
ds
add
fist
outs
mov
stos
lea
aad
inc
ficom
inc
test
ret
ror
xlat
jbe
repnz
xchg
ret
inc
cmp
pushf
fild
pushf
les
imul
gs
call
or
pusha
fadd
js
pop
adc
lods
cmp
sbb
nop
daa
or
jo
pop
dec
and
mov
jae
adc
sbb
fbld
mov
push
xchg
xor
movs
hlt
jmp
xor
mov
inc
mov
ss
inc
sbb
pop
fild
push
add
ret
out
shl
push
lods
imul
cmps
stos
pop
inc
rcl
adc
cmps
inc
into
sub
out
sbb
dec
call
adc
xchg
jns
jecxz
cmc
or
in
and
jo
or
test
popf
movs
mov
bound
jmp
inc
adc
xor
mov
and
mov
push
data16
sahf
stos
add
mov
nop
add
movs
jbe
js
into
pop
shl
or
retf
sar
xadd
cli
mov
push
mov
jnp
xchg
test
mov
pop
jns
cli
inc
cmp
add
fimul
mov
imul
fwait
(bad)
jp
cmp
mov
mov
and
pusha
xchg
mov
sub
std
mov
test
in
xchg
pushf
bswap
and
add
aaa
mov
repnz
out
mov
fcom
xor
push
adc
mov
dec
rcr
mov
mov
loope
je
dec
and
or
sub
mov
not
fsubr
dec
fdivr
scas
ret
mov
imul
sub
or
std
pop
cmc
cmp
fcmovnb
push
stos
mov
jo
push
out
mov
cmp
aad
inc
scas
lock
mov
fbstp
retf
and
mov
xchg
dec
lahf
dec
sbb
mov
repnz
push
shl
mov
sub
xchg
or
lea
les
(bad)
(bad)
fcomp
(bad)
pop
retf
jae
mov
cli
aad
xor
dec
ja
xchg
inc
xchg
adc
adc
out
push
nop
outs
cdq
pop
add
mov
lds
test
sub
aam
outs
je
pop
lea
imul
lds
stos
cmp
adc
xor
pop
pop
les
push
in
and
ficom
and
pop
arpl
enter
push
cmp
push
addr16
pop
adc
xchg
adc
cmp
nop
add
push
cmp
lods
adc
and
cmp
push
jne
dec
aam
sbb
(bad)
cmps
out
xchg
data16
push
std
imul
sub
mov
jge
enter
fcmovne
or
mov
mov
in
hlt
rcr
and
das
pop
pop
adc
in
xchg
ret
retf
dec
stos
xchg
iret
outs
in
arpl
sbb
push
sub
sti
push
adc
jno
sbb
mov
push
jae
pop
pop
adc
or
inc
dec
es
in
cmps
jb
cmp
pop
adc
test
sub
data16
popa
mov
cmp
pop
stos
mov
in
jno
enter
aaa
cmp
and
(bad)
jg
sub
shl
xchg
push
test
xor
dec
mov
nop
cmc
adc
xor
popa
repz
ret
jecxz
fisttp
add
sbb
test
xchg
jmp
ss
fcmovb
fs
xchg
leave
mov
push
jmp
es
outs
xor
pop
push
mov
mov
movs
xlat
xchg
pop
movq
cmp
jecxz
jmp
cmp
stos
cmps
sbb
fstp
push
push
cmc
pop
dec
or
ja
arpl
push
and
shl
in
adc
scas
ror
int3
mov
stc
cmp
pop
cmps
aad
(bad)
in
push
dec
jle
adc
add
dec
ins
lahf
adc
scas
js
fwait
xchg
pop
js
js
jmp
mov
push
sub
ja
adc
mov
mulps
and
adc
sbb
cmp
icebp
aas
(bad)
in
in
or
xchg
fiadd
fst
mov
add
and
enter
or
jmp
iret
jns
sbb
push
fnstsw
cmp
rol
cli
add
or
pop
xor
cmp
pop
cmp
adc
scas
nop
or
loop
pushf
adc
std
pop
and
mov
iret
mov
test
dec
mov
jno
aam
pop
cmp
gs
push
cld
xor
pop
(bad)
sbb
rol
inc
daa
sbb
dec
fdivr
int3
adc
ins
stos
lods
dec
mov
(bad)
fistp
add
sti
mov
fiadd
pop
jmp
and
xor
inc
fsubr
jle
and
sbb
popa
out
adc
sub
sbb
call
mov
add
(bad)
mov
pusha
mov
mov
adc
push
xchg
lods
mov
pop
dec
fild
adc
jae
mov
outs
test
loop
ja
mov
cmp
xor
outs
or
and
sti
adc
ja
adc
ret
dec
lock
lds
cmp
sti
mov
loope
add
and
mov
xlat
popa
cmp
mov
xlat
jmp
inc
push
scas
shr
dec
and
sti
repnz
push
add
xchg
out
jl
or
cs
jae
sub
jb
adc
rcr
or
pop
pop
adc
mov
fwait
inc
add
xchg
iret
cdq
imul
or
fist
push
aad
cmp
xor
repz
xchg
jns
xchg
add
mov
sbb
pop
pop
xchg
ja
cli
jae
dec
ds
adc
sub
imul
jmp
inc
shr
bound
sub
inc
ficomp
xlat
lods
and
aaa
data16
sub
sbb
ret
hlt
mov
test
xchg
imul
fwait
test
shl
(bad)
push
add
mov
in
xchg
push
repnz
xor
mov
out
xor
pop
(bad)
imul
and
push
adc
movs
dec
cdq
aad
mov
(bad)
mov
cwde
push
aaa
cmp
test
jbe
xor
jbe
dec
pop
retf
nop
pop
lods
jge
call
js
add
xchg
push
in
push
sub
mov
fimul
(bad)
xchg
lock
fcomp
pop
cwde
sub
push
(bad)
pop
outs
mov
pushf
sahf
jecxz
mov
mov
sub
mov
repnz
mov
inc
jb
dec
aaa
push
add
les
repnz
jmp
mov
gs
pop
imul
test
loopne
cli
jae
or
lock
test
mov
mov
sbb
add
inc
(bad)
jne
dec
xor
fild
fs
cwde
iret
mov
lock
xchg
mov
push
xor
je
xchg
jg
in
inc
and
aam
jns
jnp
push
sub
ds
dec
cmp
loopne
pop
data16
clc
adc
aam
or
jl
and
mov
movs
hlt
jmp
push
ins
xchg
(bad)
test
or
out
(bad)
mov
bound
test
and
repnz
outs
repnz
cli
aas
dec
cmp
inc
cmp
push
fisttp
jnp
add
fs
mov
ret
leave
push
sbb
test
lods
pop
sbb
fimul
adc
(bad)
repnz
inc
mov
int3
sbb
bound
js
dec
dec
jo
(bad)
cwde
pop
jge
mov
xor
xchg
pop
pop
inc
sub
cmc
cmc
sbb
cmps
out
jle
jno
scas
jmp
(bad)
out
ins
lea
movs
mov
outs
cmps
aaa
dec
jle
stc
xor
test
pop
xchg
cmp
cmps
out
inc
mov
push
data16
jno
outs
ins
daa
sub
lahf
fist
jne
sar
add
pop
cmps
mov
into
add
clc
xchg
jbe
jne
fldl2t
loop
inc
retf
cmps
popf
and
mov
sbb
adc
pop
mov
(bad)
pop
mov
fldln2
adc
add
clc
pop
jo
test
ds
mov
jge
push
ins
(bad)
jns
jmp
ret
aad
in
push
cdq
fdivr
mov
js
fsub
ret
inc
and
mov
and
dec
mov
rol
nop
ins
pushf
leave
outs
mov
sahf
dec
iret
bound
in
mov
add
add
jnp
and
outs
lock
and
jnp
stos
pop
cwde
sbb
fst
std
dec
push
mov
call
or
rcr
inc
fnstenv
sbb
punpckhdq
jmp
dec
sbb
mov
push
mov
add
mov
xlat
xchg
push
dec
lods
mov
mov
push
mov
sub
(bad)
rcl
adc
fiadd
out
cmp
mov
out
mov
pop
push
daa
test
ins
cmp
stos
cmps
mov
sub
mov
imul
jb
fidiv
mov
mov
sbb
lea
rcl
aad
adc
or
jge
(bad)
or
push
(bad)
add
pop
add
xor
jmp
pop
jo
jmp
pop
es
vorpd
ins
inc
repz
mov
mov
xchg
imul
jb
jb
push
jno
ins
and
pop
jmp
pop
mov
sub
add
clc
lahf
push
stos
or
jns
lods
aam
shl
dec
adc
sub
add
mov
in
movs
nop
adc
aam
sbb
xchg
in
loopne
add
out
and
inc
and
lods
scas
xchg
in
adc
nop
jl
adc
cmp
repz
lahf
or
add
xor
mov
sub
jno
and
std
pop
(bad)
sub
jb
mov
aad
loopne
xor
xor
lahf
fld
push
out
scas
or
icebp
ds
pop
mov
dec
mov
aaa
jne
in
xor
or
dec
movs
sub
or
xor
add
mov
hlt
pop
fst
sahf
in
rep
push
mov
sbb
mov
xchg
mov
xor
mov
sbb
cmp
mov
inc
out
adc
xor
gs
lods
mov
test
sbb
pop
ss
aaa
test
loope
mul
mov
fild
lea
jg
movs
mov
mov
out
(bad)
je
or
shl
icebp
xabort
retf
cmp
not
push
repz
inc
sub
scas
pop
lds
jp
popa
(bad)
jp
inc
scas
jns
push
cmp
out
xchg
dec
jp
cwde
movs
and
adc
or
cmps
(bad)
pop
pop
push
xchg
jne
repnz
lock
daa
out
call
push
mov
adc
fistp
and
sub
ret
icebp
jg
fistp
and
inc
mov
mov
mov
push
loopne
jecxz
inc
gs
push
pop
ins
or
aam
pop
ss
mov
shl
(bad)
shl
(bad)
push
stos
daa
iret
ret
das
mov
push
jp
or
int
sbb
push
clc
mov
sub
loopne
mov
dec
mov
retf
xor
inc
inc
pop
adc
lahf
shr
jo
dec
(bad)
cmps
adc
sub
or
lahf
sub
or
icebp
inc
jl
jp
imul
stos
fdivr
sub
cmps
cmps
sub
mov
enter
sbb
out
inc
xor
std
icebp
movs
cmps
cmp
sub
cmps
mov
xlat
xchg
loop
into
push
ret
or
aam
out
fbld
pop
nop
inc
hlt
dec
xchg
gs
movs
add
add
sub
lods
jg
jmp
xchg
mov
lds
(bad)
out
mov
popf
lock
call
popa
mov
mov
lea
in
pop
scas
push
int3
jmp
adc
mov
into
fwait
sub
pop
sbb
xchg
nop
ins
mov
fwait
sub
je
fcom
dec
(bad)
das
(bad)
shr
int3
cmps
xchg
aas
cmp
mov
adc
mov
test
add
xor
dec
and
arpl
(bad)
mov
lods
(bad)
test
pushf
bound
mov
xor
dec
mov
test
shl
sahf
inc
jae
int
mov
rol
(bad)
stc
scas
lock
or
jmp
mov
xor
out
pop
sub
jnp
xor
bound
mov
add
loop
scas
fdivr
pop
fsubr
pop
js
sbb
ds
or
ficomp
jp
in
in
lds
mov
lock
pop
leave
jmp
iret
xchg
xor
pushf
mov
imul
mov
xchg
mov
mov
hlt
cld
stos
and
outs
ja
std
fisubr
shr
jge
cdq
inc
sbb
lds
adc
rcr
or
pop
aaa
inc
shl
fwait
sub
add
or
sub
xchg
push
jnp
pushf
out
mov
loopne
lock
gs
sbb
xor
ins
call
test
jg
cwde
inc
sahf
popf
cld
pop
sbb
(bad)
sbb
outs
inc
mov
push
loope
(bad)
mov
push
mov
add
mov
inc
pop
push
fs
sub
adc
loopne
pcmpeqw
add
call
call
jnp
ins
out
cli
adc
mov
aas
rcl
mov
and
es
bound
jb
mov
xor
xchg
jne
retf
loopne
inc
jae
icebp
repz
ins
mov
sbb
aam
xor
not
adc
sbb
add
inc
loop
aaa
lea
addr16
push
push
and
out
imul
sbb
jmp
ficomp
push
call
sbb
adc
sub
push
xor
mov
cmps
es
aam
and
adc
pop
aad
mov
ret
shrd
jmp
sbb
das
icebp
neg
jae
push
lods
mov
aaa
inc
mov
adc
mov
sbb
add
sub
cwde
mov
ficom
cmc
clc
jb
neg
dec
and
xor
(bad)
sbb
xor
pop
add
call
mov
sub
push
and
add
push
dec
jge
mov
xchg
jge
jmp
mov
dec
retf
jp
xchg
lahf
into
aam
rcr
sbb
sbb
in
je
imul
aad
mov
xlat
sub
xchg
cmps
xor
sar
mov
mov
xor
ja
and
pop
imul
pop
jno
pop
push
add
lock
pop
cmp
pop
data16
stos
dec
jecxz
dec
mov
(bad)
fucomip
test
aad
pop
das
push
xor
clc
pop
xchg
enter
push
fcomp
test
test
icebp
imul
push
or
cmp
xchg
out
xchg
xchg
pop
scas
cld
or
shl
jne
mov
dec
sbb
jo
je
mov
and
ss
pop
cmp
pop
ds
popa
pop
shr
in
fdivr
pop
jmp
xor
icebp
test
xchg
mov
in
out
xchg
add
ss
out
and
out
shr
pop
xor
mov
and
xchg
jmp
iret
test
loop
inc
push
mov
movs
sti
icebp
mov
and
daa
push
xor
mov
stos
or
and
int
out
cmp
push
prefetcht0
icebp
xchg
(bad)
adc
add
or
(bad)
rol
add
outs
imul
sub
mov
ret
cmp
dec
scas
add
ss
ja
xor
shr
xchg
mov
mov
imul
add
add
and
mov
das
inc
ret
das
stos
cli
in
or
mov
stos
mov
cmp
nop
sub
mov
(bad)
call
stos
push
add
cmp
mov
lods
push
push
ret
mov
mul
pop
add
ffree
repz
call
mov
fiadd
push
imul
std
jge
dec
cmp
mov
ins
inc
pop
test
push
inc
mov
(bad)
adc
sub
(bad)
cwde
imul
les
inc
(bad)
out
hlt
jne
and
mov
jecxz
dec
xchg
mov
(bad)
movs
xchg
jbe
ins
fist
je
aaa
retf
xchg
retf
outs
mov
aad
dec
mov
lahf
test
push
cmps
cmp
gs
and
mov
jg
not
dec
outs
adc
cmp
cmp
and
jbe
inc
fstp
call
outs
dec
push
xchg
xchg
shl
add
leave
inc
cld
mov
jle
pop
jns
movs
cmp
pop
add
pusha
mov
xor
outs
mov
les
add
in
push
daa
sahf
das
ins
inc
or
xchg
and
ds
sub
adc
push
adc
add
idiv
in
shr
dec
stc
lahf
xchg
in
pop
mov
dec
inc
adc
push
push
add
xchg
cmp
(bad)
imul
or
xchg
das
or
sets
push
and
cmp
pop
jmp
adc
cld
stc
outs
mov
fild
jge
xor
mov
ja
dec
add
fnstcw
and
and
add
mov
mov
push
mov
sbb
inc
mov
mov
loopne
es
lods
add
adc
fild
stc
out
bound
aas
inc
pop
outs
gs
sti
mov
pop
sub
jae
jo
cdq
mov
mov
mov
adc
loop
sub
mov
rol
sbb
mov
dec
pop
add
repz
loop
add
inc
sbb
hlt
xchg
mov
lock
sar
stos
jg
aad
cli
(bad)
cs
sub
cli
call
adc
fwait
xchg
ds
cmp
(bad)
mov
sbb
xchg
es
pop
xchg
push
mov
push
xadd
call
jmp
ret
mov
js
mov
ds
in
mov
add
jno
pusha
rol
sahf
popf
push
adc
cwde
xor
test
dec
mov
mov
cmps
push
pop
sbb
push
outs
pusha
or
pop
shl
fs
lock
or
ss
in
call
fcmovb
cdq
jae
mov
mov
test
jmp
loop
(bad)
cmp
(bad)
lea
sahf
xchg
cmp
inc
cmp
mov
mov
js
rcr
xbegin
lds
inc
pusha
mov
outs
test
push
sub
and
dec
push
mov
jle
out
mov
sub
ja
sti
jp
aad
and
xchg
fidivr
fcom
mov
pop
not
sub
cld
xor
leave
inc
rcr
add
cmp
das
lea
out
xchg
jno
mov
loopne
fdivr
loop
mov
or
cmp
cmps
adc
mov
xor
jg
scas
shl
(bad)
jl
xor
in
retf
stos
inc
mov
dec
add
fimul
shl
add
in
je
jbe
push
inc
sub
push
sbb
(bad)
lock
bound
fadd
push
out
ins
dec
fld
pushf
into
jno
cmp
xor
(bad)
bnd
xor
arpl
jp
cmp
cld
aam
mov
cmc
adc
sahf
ds
cmp
call
push
jo
test
jb
cmp
dec
or
pop
jno
sub
adc
jecxz
pop
pop
in
sub
sub
adc
iret
ins
push
sahf
push
mov
sub
sahf
mov
mov
fwait
xlat
pop
icebp
add
addr16
mov
mov
xchg
push
mov
jo
mov
bswap
pop
push
pop
inc
stc
mov
adc
pushf
pop
stos
ins
in
mov
sbb
loop
into
and
data16
in
inc
dec
aas
push
push
pop
mov
ret
xor
adc
xchg
xchg
or
repnz
imul
mov
ret
mov
xchg
cwde
or
pushf
pop
repz
das
xor
mov
xor
loop
push
cdq
xor
sbb
jne
pop
popf
jmp
push
push
pushf
aad
mov
pop
pop
jl
xchg
rol
fild
pop
xor
stos
push
add
arpl
popa
push
add
leave
dec
scas
adc
int
cmp
lods
cs
rcl
bnd
push
push
in
call
dec
inc
mov
jecxz
pop
test
push
imul
push
sbb
jg
mov
mov
pop
mov
in
mov
imul
cmc
out
inc
shl
js
mov
push
sbb
xor
mov
xor
inc
and
ja
inc
jmp
xchg
jp
in
xchg
sbb
cli
pushf
pop
stos
pop
stos
xor
adc
out
sbb
add
repz
xlat
sti
dec
in
test
not
xchg
sbb
add
(bad)
dec
hlt
xor
out
or
jmp
adc
cmp
mov
(bad)
aas
cmp
shr
xor
or
xor
scas
pop
cmp
cs
xchg
into
retf
adc
add
pop
ins
(bad)
sbb
cli
mov
xchg
add
xor
fisttp
xchg
jns
pop
pushf
and
mov
or
sar
push
cs
push
popa
xlat
dec
pop
cmp
xchg
rcr
and
jl
push
jecxz
fisttp
out
popa
jp
ror
add
stc
fsub
std
mov
cmps
dec
movs
sbb
into
add
ror
out
outs
cmps
call
imul
adc
mov
push
out
(bad)
pop
dec
dec
inc
loope
(bad)
cmp
std
mov
sub
jb
push
or
mov
sub
aad
rol
fisub
out
adc
pop
mov
mov
retf
inc
in
lods
lahf
pop
mov
(bad)
arpl
and
cdq
push
movs
stos
sbb
push
xchg
ror
arpl
mov
cmp
fstp
push
cmps
mov
test
jo
aas
mov
push
stos
push
push
loop
xchg
jmp
pop
sbb
mov
pop
xor
jle
inc
outs
pop
dec
pusha
clc
jae
dec
sbb
jle
cdq
lods
stos
pop
pop
mov
mov
adc
inc
cwde
dec
jp
push
xchg
outs
sbb
(bad)
cmc
pop
inc
cwde
(bad)
stos
push
mov
xor
popa
stos
inc
or
dec
jbe
icebp
pop
push
mov
jae
push
out
test
jmp
sub
int
imul
xor
push
push
fimul
neg
pop
jle
loop
adc
mov
sahf
mov
adc
rol
pop
es
sbb
mov
xchg
mov
arpl
ins
adc
push
jp
mov
push
loope
sub
stos
int3
cmp
jns
sbb
jnp
cmp
and
sbb
dec
aad
sbb
(bad)
daa
aaa
lea
add
inc
addr16
fcomp
aaa
out
cmp
pop
mov
push
fwait
out
call
shl
jno
or
push
xlat
adc
sahf
retf
fild
(bad)
xchg
out
add
fs
xor
inc
jecxz
mov
adc
outs
and
hlt
sbb
jmp
mov
mov
test
cmp
repnz
retf
jae
mov
int
jecxz
ret
jbe
ins
cld
ins
enter
out
call
sbb
(bad)
outs
std
inc
mov
mov
mov
inc
adc
jmp
xor
add
xchg
mov
montmul
cmps
inc
loope
ret
sar
adc
mov
add
cmp
sar
imul
or
mov
mov
mov
gs
dec
sub
mov
cmp
and
fimul
(bad)
les
mov
out
test
js
nop
gs
pop
lods
pop
mov
rcr
push
mov
add
sbb
cmp
xor
sbb
xchg
stos
addr16
mov
(bad)
fstp
fcom
cmp
scas
xchg
movs
jno
pop
dec
add
movs
push
push
xchg
sti
test
hlt
jne
cmc
push
ja
outs
cdq
rol
mov
mov
or
push
push
(bad)
or
in
mov
mov
xchg
sbb
add
add
dec
sub
into
out
xchg
pop
mov
nop
fucom
pop
pop
aam
repz
dec
mov
scas
outs
sub
pop
retf
int
mov
adc
(bad)
call
leave
ret
jp
mov
sbb
shl
cld
pusha
jae
stos
cmp
(bad)
pop
fstp
xlat
out
test
push
mov
fistp
leave
jmp
hlt
xor
aaa
cli
mov
daa
test
dec
inc
jne
cli
mov
loopne
lahf
sub
jg
and
sbb
loope
mov
int3
cwde
in
or
clc
mov
or
aam
and
inc
inc
push
or
fisubr
es
je
or
ins
test
imul
int3
adc
into
int
mov
jns
cwde
call
push
push
js
mov
xchg
mov
ins
mov
cmp
cmc
idiv
adc
clc
retf
cdq
add
inc
mov
and
inc
add
jne
das
test
pop
jo
and
(bad)
fsub
mov
jle
push
movs
sahf
movs
xor
pop
test
nop
adc
in
or
cmp
rcr
repz
lahf
dec
pop
loop
imul
ins
adc
dec
icebp
ds
push
aad
dec
cmp
mov
pop
mov
(bad)
cld
cwde
add
jo
and
ss
dec
cmp
sbb
push
call
leave
es
pop
out
or
test
stos
push
sti
jg
xlat
les
sbb
fist
mov
or
icebp
iret
adc
repnz
jbe
mov
adc
dec
in
or
or
ret
arpl
nop
adc
cmps
mov
mov
or
adc
push
test
add
dec
pusha
pusha
inc
ins
mov
out
cli
push
push
sbb
mov
sub
stc
je
and
jmp
or
xchg
sbb
aas
sbb
pop
and
xor
jle
mov
xor
test
ret
jno
inc
gs
adc
pop
push
xchg
out
xor
sbb
pop
call
aas
dec
fwait
ret
lock
mov
mov
pop
sub
sbb
xchg
mov
out
cmc
mov
dec
mov
in
mov
sub
add
cmp
mov
or
gs
(bad)
and
outs
sahf
jns
mov
push
xlat
retf
xchg
popa
push
dec
cmc
in
mov
test
enter
xchg
ss
push
fdiv
fdivr
repnz
xchg
or
cmp
loop
fidiv
xchg
xor
mov
push
iret
aad
ja
adc
shl
jmp
mov
outs
mov
pop
pop
jne
ficomp
(bad)
ret
add
cmp
dec
adc
imul
cmc
mov
push
sbb
sahf
cwde
pop
aad
or
inc
hlt
aad
icebp
shl
push
cmp
mov
sub
xchg
ins
mov
cmp
push
gs
push
push
aad
inc
cmp
push
in
dec
ror
xchg
pop
mov
ret
jmp
aam
mov
(bad)
test
jg
push
cmps
cmp
or
xor
(bad)
gs
jl
add
iret
iret
enter
ror
sub
mul
or
(bad)
icebp
push
out
stc
data16
add
sub
call
ror
push
mov
repnz
dec
mov
mov
push
cmp
sbb
das
pop
xor
repz
call
xor
test
ret
inc
or
rcr
inc
xor
arpl
ss
inc
add
aam
dec
xlat
mov
adc
sub
sub
jno
imul
mov
inc
cmp
test
in
jecxz
in
push
fdivr
mov
out
sbb
ret
adc
out
mov
mov
cmp
jge
push
add
inc
pop
mov
xchg
xlat
test
sub
mov
ds
(bad)
call
cmp
adc
outs
pop
dec
adc
adc
jp
(bad)
jo
test
xchg
or
jle
loopne
mov
mul
push
sbb
sub
jl
(bad)
repnz
jbe
cwde
out
inc
into
addr16
jo
add
jl
or
or
cmp
ret
mov
mov
mov
xchg
cmps
mov
js
add
cmp
ins
sbb
fs
shl
out
test
inc
adc
jb
mov
pusha
fbld
sar
add
movs
xchg
test
push
std
xlat
jmp
in
rcr
push
mov
ja
cmps
add
stos
push
das
xchg
push
gs
mov
sbb
xchg
jb
xchg
pop
sub
sbb
fsub
xor
add
call
pop
xchg
xchg
repnz
add
cdq
outs
jns
jmp
jae
push
out
lods
call
and
jmp
fs
jecxz
shr
adc
out
sahf
mov
and
sahf
leave
lds
inc
inc
mov
aas
xor
xor
repnz
jmp
lods
and
sbb
mov
fstp
mov
sahf
sub
lods
cmps
hlt
jbe
push
and
out
sub
xor
(bad)
rcr
jl
lahf
stc
das
jg
adc
xchg
mov
adc
push
pop
mov
movs
fs
jge
dec
ficomp
ins
and
ds
push
mov
push
dec
cmp
inc
jle
mov
adc
les
mov
std
retf
bound
popa
sub
popa
mov
mov
sub
inc
mov
lods
or
test
cmovl
xchg
push
call
jg
cmp
lds
sub
push
inc
pop
shl
pusha
mov
and
jle
es
hlt
ficomp
aam
aaa
cmps
xor
adc
dec
xchg
or
add
je
jmp
mov
in
xchg
popf
cwde
jmp
sub
cdq
enter
pmulhuw
inc
ja
mov
cmc
inc
and
fisubr
lea
data16
and
cdq
inc
rol
imul
pop
arpl
shl
xlat
mov
xchg
mov
sbb
push
add
in
sbb
jnp
jecxz
mov
inc
mov
ror
lahf
dec
(bad)
int
data16
sbb
mov
jg
mov
push
ss
push
sbb
mov
fsubrp
retf
jb
int3
push
mov
dec
je
iret
push
in
xchg
pop
mov
dec
adc
push
shl
test
btr
and
ret
cmp
xchg
shr
ss
jle
enter
xor
mov
sub
pop
in
add
cmp
inc
imul
and
scas
and
pop
or
(bad)
adc
adc
push
rol
movs
daa
shl
hlt
sbb
inc
call
lds
sub
out
xchg
mov
dec
scas
mov
mov
repnz
je
ret
or
ja
in
(bad)
push
dec
mov
loop
inc
add
(bad)
inc
cmp
test
and
lahf
fsubr
sub
inc
dec
repz
jl
push
add
ja
sub
sbb
sbb
daa
cmc
leave
sahf
es
cmp
ret
mov
in
daa
dec
cmps
(bad)
push
mov
ins
cdq
stos
mov
(bad)
ins
jns
pop
es
arpl
and
mov
ds
test
cwde
test
fisttp
adc
data16
dec
push
ins
jno
mov
rcl
cmp
inc
inc
mov
cmp
and
lods
cs
cmp
ds
sbb
in
or
popa
or
mov
cmp
sti
pop
inc
nop
adc
(bad)
mov
cmc
pop
inc
test
jae
in
out
pop
xchg
adc
sub
and
lods
scas
adc
test
cmps
xor
pop
(bad)
jbe
add
fstp
movs
cmps
inc
mov
mov
inc
push
es
jp
aaa
aas
cmp
mov
pop
mov
cld
push
ficomp
mov
bound
mov
pop
stos
push
in
icebp
sub
mov
mov
loope
scas
sbb
or
sbb
test
lea
pop
adc
xor
out
push
adc
dec
pop
mov
outs
icebp
pop
call
out
aam
mov
bound
xlat
and
sbb
xor
popf
push
pop
inc
vpsrlw
mov
push
call
push
cmp
xchg
or
or
repz
push
jmp
push
pop
aad
jnp
jl
out
test
sbb
sbb
push
inc
jb
loop
into
in
es
mov
and
scas
sbb
mov
aad
adc
int3
pushf
sub
dec
adc
mov
ss
nop
outs
pop
hlt
mov
xor
mov
xor
and
or
stc
pop
jmp
pop
mov
ror
inc
retf
xor
ror
mov
and
dec
dec
shl
sbb
cmp
push
adc
mov
xchg
cld
ficom
cmps
or
jmp
data16
repz
aaa
mov
jle
xor
js
inc
mov
addr16
inc
jno
lods
cmp
sbb
scas
xchg
push
out
cmp
nop
fsub
sub
xor
jmp
adc
mov
mov
add
dec
xor
pop
bound
sbb
iret
stc
jl
push
add
aad
pushf
in
lock
or
cmp
movs
xor
cmp
imul
sbb
lock
xlat
jbe
cld
in
out
cld
pushf
sub
into
xor
retf
(bad)
inc
xchg
cld
push
psrlw
repnz
hlt
addr16
xchg
jl
jmp
(bad)
jne
test
xor
sub
adc
push
div
(bad)
add
sti
jae
adc
mov
jmp
jl
lahf
out
test
jmp
mov
call
jp
jb
lahf
popa
dec
fcomi
mov
or
push
cmc
push
in
jne
sbb
xchg
or
nop
sub
pop
mov
movs
mov
mov
add
jp
fsub
mov
jmp
xchg
stos
or
cmp
inc
xchg
jmp
bound
test
fnstcw
cmp
pop
rcl
dec
loop
loopne
xchg
shl
cld
(bad)
sbb
ror
jg
sbb
mov
xchg
stos
sub
aad
mov
sbb
fdiv
aas
(bad)
fs
shl
adc
xchg
stc
xor
pop
(bad)
out
enter
call
imul
mov
xchg
jmp
sti
stc
inc
xor
mov
jle
xchg
into
popa
adc
cld
addr16
popa
inc
push
(bad)
mov
jp
fs
imul
aad
jb
xchg
pop
adc
sub
sub
and
pop
push
clc
fldcw
pop
cmp
div
ffree
push
jp
mov
push
cmp
adc
push
or
jmp
scas
add
mov
dec
cmp
js
xor
pop
pop
retf
mov
cmps
mov
loopne
das
add
xchg
adc
and
(bad)
xlat
ins
sbb
(bad)
mov
repz
out
jl
push
test
dec
xchg
dec
jp
push
and
jp
and
mov
lods
xchg
out
cli
or
int3
push
fwait
popa
test
pop
push
dec
scas
test
jmp
or
ror
dec
mov
push
sub
ja
jb
jne
push
lock
inc
jns
add
outs
dec
sub
mov
xor
pop
or
sbb
out
outs
adc
mov
fneni(8087
leave
xor
adc
lods
addr16
cs
add
push
icebp
imul
cmp
inc
out
mov
cmp
push
mov
inc
das
xchg
pop
dec
es
loope
test
xor
dec
jbe
push
pushf
out
adc
pop
sub
aam
xchg
jmp
xlat
pushf
sub
and
cmp
xor
std
addr16
ds
not
inc
sar
fisttp
add
add
inc
inc
mov
inc
jp
jns
xchg
rol
push
repnz
test
xchg
pop
mov
ins
pop
add
outs
cdq
add
test
js
sbb
dec
je
cmp
and
shr
rol
push
daa
jle
mul
stc
jo
sub
xor
pop
push
(bad)
addr16
fistp
push
mov
mov
push
mov
inc
dec
xchg
push
mov
mov
mov
fyl2xp1
pop
fimul
lods
fistp
scas
jne
stc
aas
adc
rcl
fld
(bad)
push
pop
jg
addr16
les
stos
cmp
nop
enter
and
out
cmp
ss
or
dec
stos
or
cdq
inc
pop
sbb
and
les
in
(bad)
mov
int3
inc
dec
nop
add
repnz
sti
adc
sbb
sbb
dec
iret
add
pop
repz
pop
sub
sbb
cmp
dec
jb
cmp
cmp
jmp
mov
mov
ins
dec
stos
sub
clc
cli
mov
inc
cmp
adc
shl
fild
add
rcl
add
xchg
jo
jmp
mov
or
dec
sub
cmc
loop
xor
(bad)
dec
sub
pop
test
das
leave
ror
iret
jl
pop
ins
inc
cmp
hlt
ins
adc
jmp
inc
dec
jmp
pop
popf
mov
ret
and
in
fcmovu
push
mov
push
dec
ror
imul
cmps
pop
aam
xchg
inc
mov
xor
mov
dec
mov
mov
xchg
cld
mov
mov
int3
inc
pusha
or
dec
enter
outs
out
rol
das
addr16
mov
std
scas
and
mov
xor
sub
aad
cmp
(bad)
loopne
in
nop
cmc
stos
(bad)
addr16
(bad)
fmul
jg
push
pop
cmp
add
sub
push
lods
jae
xor
retf
loopne
adc
pop
ins
mov
nop
and
movs
push
repnz
rcl
fsub
shr
push
lock
(bad)
sahf
lds
scas
lods
das
dec
in
cmp
sahf
std
xchg
clc
jno
in
loopne
(bad)
mov
pop
dec
jmp
push
xchg
push
sub
mov
(bad)
aam
jb
mov
movs
jne
shr
or
mov
push
xchg
mov
out
push
stos
sub
mov
aam
iret
add
push
inc
xlat
mov
xchg
jne
push
pop
je
jecxz
and
mov
adc
cwde
sahf
mov
inc
test
addr16
cmp
fistp
out
repz
adc
sub
int
call
fistp
test
sub
adc
(bad)
call
neg
hlt
test
pusha
mov
imul
mov
ret
sar
push
movs
aad
inc
movs
hlt
jg
cs
push
push
jnp
jne
mov
and
jo
daa
mov
cmp
and
ret
jnp
neg
rol
adc
aad
xchg
push
psubw
call
pop
sbb
add
or
jae
and
pop
and
xor
jmp
pop
lods
pushf
test
cmp
lods
fst
mov
mul
(bad)
out
(bad)
mov
sub
cmp
repz
scas
cli
loopne
dec
sub
iret
lods
ret
lea
pop
cmp
inc
inc
popa
das
call
jns
cmp
rol
and
jl
loopne
enter
rol
clc
nop
pop
clc
cmp
sbb
sbb
xchg
(bad)
(bad)
leave
xor
(bad)
retf
(bad)
(bad)
xor
cmc
cs
and
mov
xor
iret
rol
(bad)
cmc
pop
pop
mov
adc
jle
jno
jp
ins
sub
out
scas
push
test
sub
cld
pop
scas
mov
bound
push
inc
inc
in
cmp
or
cs
loope
icebp
pop
push
mov
in
jae
mov
gs
fstp
das
push
inc
push
xchg
or
jne
cwde
mov
inc
cld
pushf
cmp
rcr
mov
sbb
xor
sub
push
fisubr
and
stos
inc
test
out
mov
into
push
stos
aad
push
cwde
movs
nop
cmc
call
sbb
jae
fadd
mov
test
fstp
ss
dec
mov
mov
ss
jp
mov
inc
pop
fldenv
sbb
pop
ja
pop
and
ja
int
arpl
add
jbe
fwait
xchg
mov
out
xchg
jecxz
test
add
add
or
adc
mov
inc
movs
int3
push
fimul
mov
aad
cmc
rol
pop
shr
jno
fcom
jmp
dec
mov
add
dec
inc
cli
outs
and
jo
dec
jge
push
xchg
sahf
mov
pop
call
or
jmp
sti
dec
sbb
cld
cld
call
xchg
sub
pusha
xlat
pop
and
cmp
pusha
pop
das
call
in
sbb
push
sub
movs
daa
mov
push
cli
inc
lods
push
pop
add
scas
cmp
(bad)
rol
and
test
sub
les
aad
xor
push
sahf
sub
not
js
jle
ss
pushw
add
jmp
jmp
sbb
add
enter
(bad)
shl
call
pushf
push
cmps
(bad)
dec
mov
add
pop
mov
fisub
loope
xchg
dec
pop
fiadd
add
or
xor
out
push
je
xchg
gs
hlt
sub
fwait
cwde
or
push
jmp
fsub
or
into
pushf
push
aam
and
sti
ret
push
fsubrp
jns
dec
push
pop
(bad)
cmps
dec
pop
imul
dec
imul
iret
aas
mov
nop
mov
leave
add
push
and
(bad)
push
(bad)
fdiv
push
leave
scas
jne
mov
dec
inc
dec
lds
cmp
test
mov
arpl
sub
jbe
sbb
stos
jp
bound
mov
icebp
enter
loope
(bad)
push
mov
fidivr
ins
scas
out
fild
pop
mov
cmps
out
mov
cmps
cdq
xchg
jne
imul
test
(bad)
int
lahf
ret
data16
xchg
lock
div
cmps
xor
mov
adc
iret
mov
mov
cli
add
cmp
inc
enter
mov
aad
out
dec
xchg
aaa
mov
bndldx
inc
or
gs
add
repz
jmp
fstp
in
sbb
cs
xchg
clc
stc
xor
mov
add
in
xchg
mov
adc
adc
ret
pop
jnp
mov
repz
xlat
jmp
mov
cmc
mov
repnz
xchg
loope
or
lds
mov
push
mov
add
(bad)
ficomp
mov
add
into
ins
sbb
(bad)
aaa
push
or
xor
rcl
cmp
push
add
push
loopne
mov
retf
pop
push
das
mov
cmp
dec
(bad)
sbb
jecxz
addr16
push
dec
pop
js
lock
(bad)
adc
mov
or
loop
jp
retw
scas
mov
ds
fs
push
ret
cmp
mov
mov
jno
cmp
std
dec
cmp
or
cmps
mov
cmp
mov
mov
push
outs
adc
cmp
mov
in
aam
retf
cmp
movs
jg
(bad)
fst
jnp
psrlw
mov
adc
dec
sbb
mov
sbb
cmp
enter
and
ret
scas
and
jecxz
popf
aaa
fist
daa
pop
call
jo
inc
xor
icebp
and
dec
repz
and
dec
fbstp
dec
dec
scas
inc
push
das
push
inc
xchg
push
or
add
cli
inc
inc
(bad)
jmp
sub
mov
ds
aas
mov
inc
sbb
clc
pushf
mov
(bad)
(bad)
cmps
rol
mov
sbb
cli
psrad
jmp
pop
hlt
(bad)
add
es
daa
movs
push
mov
stos
(bad)
adc
ficom
(bad)
js
cwde
movs
sbb
mov
xor
xor
dec
push
adc
imul
pushf
pop
push
mov
test
xchg
test
into
bswap
inc
inc
ja
mov
loopne
inc
mov
cmp
push
adc
mov
dec
xchg
clc
jnp
add
add
out
adc
enter
jb
and
cli
cmp
in
pushf
repz
sub
imul
sbb
iret
inc
arpl
out
and
icebp
jmp
ja
adc
adc
dec
(bad)
pop
mov
fsubr
test
mov
mov
cdq
jecxz
jbe
mov
imul
test
(bad)
fstp
and
sub
test
(bad)
outs
xchg
mov
aas
xor
jge
push
lock
retf
dec
lods
ror
xchg
test
mov
xor
sub
pop
ret
cmp
and
fwait
jle
imul
pushf
and
lock
fnstsw
sbb
(bad)
mov
cmps
sbb
cdq
jp
aam
add
add
in
xlat
cmp
push
cdq
xchg
fwait
shl
clc
pop
cld
loopne
jns
fcomp
jmp
jae
pusha
pop
mov
dec
adc
mov
jb
xor
mov
mov
test
push
movs
mov
icebp
inc
retf
pop
pop
push
xor
or
xchg
xchg
test
dec
iret
push
lahf
pop
call
sbb
xchg
(bad)
imul
imul
jle
mov
(bad)
mov
(bad)
cmc
je
je
jmp
jmp
inc
mov
push
ja
and
mov
inc
cwde
movs
ins
leave
mov
stc
je
scas
mov
sub
and
(bad)
ss
xor
jne
sbb
in
ret
push
or
jle
icebp
and
sbb
je
leave
div
dec
push
sahf
sahf
cmps
int
inc
mov
add
sets
into
and
inc
dec
(bad)
fnstsw
pop
push
out
adc
scas
and
test
push
add
sub
dec
retf
mov
pop
mov
mov
mov
add
mov
jmp
(bad)
shl
push
clc
xchg
mov
xchg
(bad)
shl
idiv
fmul
mov
clc
jbe
inc
inc
pusha
add
fnsave
sbb
int3
and
cdq
push
arpl
fucomp
push
out
std
pushf
adc
dec
mov
cmc
or
xchg
jecxz
jae
sub
fistp
and
scas
mov
and
and
push
inc
mov
or
sub
int
ins
and
xor
mov
xchg
add
movs
enter
pop
jmp
aas
test
inc
fistp
inc
mov
inc
push
pushf
loopne
(bad)
fldlg2
cmp
int
sahf
test
les
fidiv
lock
cmc
and
pop
ja
cmp
xor
inc
adc
xchg
pop
repnz
shl
arpl
call
shl
fist
add
xor
ins
xchg
add
ret
cmps
xchg
or
jns
dec
sahf
cmps
js
add
sub
push
inc
repnz
dec
xchg
pop
push
xlat
pop
jmp
(bad)
loope
push
les
jmp
cmp
jl
js
(bad)
fs
jae
xchg
xor
enter
test
loopne
loope
jp
push
outs
xchg
mov
outs
cld
in
outs
es
xchg
push
jg
popa
or
call
movs
and
add
pusha
bound
(bad)
jnp
mov
xchg
mov
jge
loope
cwde
jbe
push
imul
pop
xchg
sub
idiv
jmp
or
mov
leave
cmp
xor
add
fnstenv
mov
push
dec
xor
sbb
outs
xchg
pop
adc
aam
jmp
rcr
dec
push
jo
or
push
xchg
scas
(bad)
lock
gs
(bad)
pop
leave
dec
or
out
cwde
aam
and
jg
(bad)
and
mov
popf
outs
mov
inc
xchg
dec
pop
nop
inc
rol
pop
xchg
add
mov
mov
inc
daa
or
fbld
in
jno
loop
push
push
sub
ins
(bad)
loopne
push
fimul
push
shr
iret
add
pop
adc
(bad)
cmp
pop
mov
lds
pop
rep
(bad)
jno
pop
cdq
or
les
push
inc
jb
and
xor
dec
pop
in
clc
dec
xor
pusha
scas
mov
ret
jmp
fs
scas
mov
(bad)
fisttp
ror
aas
jno
jl
mov
push
jb
iret
loop
in
push
mov
ja
stos
dec
sahf
das
repz
mov
adc
imul
xchg
mov
pop
sub
repz
dec
mov
test
xor
xor
add
lahf
mov
inc
xor
bound
dec
sbb
add
mov
call
xor
jmp
(bad)
mov
push
rcr
in
inc
dec
sub
dec
xchg
mov
push
adc
pop
adc
sub
cmp
mov
out
loope
adc
mov
jno
mov
mov
or
add
mov
mov
cs
mov
add
cmp
in
lahf
shl
cli
xor
dec
xchg
xchg
out
jns
aad
jmp
jle
mov
xchg
(bad)
xchg
mov
fsubrp
inc
sbb
(bad)
lahf
add
pop
ror
mov
mov
xchg
add
mul
cmp
loopne
dec
pop
sub
pop
push
dec
mov
adc
jl
mov
mov
cmp
and
(bad)
mov
sub
push
or
popf
push
dec
pop
xor
outs
in
cmp
out
dec
xor
jns
mov
sub
pop
adc
mov
adc
push
mov
mov
movs
jecxz
inc
call
stc
fist
mov
inc
push
repz
dec
mov
inc
dec
scas
adc
jmp
inc
mov
inc
inc
sbb
mov
mov
bswap
ins
and
ss
movs
(bad)
xchg
push
add
arpl
fistp
ficom
or
lea
stc
pop
mov
int
push
jg
pop
push
adc
mov
sbb
jge
xor
dec
loop
cwde
inc
loope
mov
jbe
stos
jl
pop
adc
xor
mov
loope
xlat
push
and
jl
sub
ror
xchg
out
jp
lds
outs
mov
and
adc
mov
rcl
inc
ds
lods
mov
cmp
les
lods
mov
mov
push
adc
add
dec
and
ins
enter
add
sub
jbe
push
scas
add
popf
cmp
xor
mov
mov
xor
or
xlat
dec
xor
pop
in
add
sbb
pop
lods
or
adc
imul
lds
ja
jmp
pop
xchg
es
nop
nop
(bad)
cli
outs
mov
mov
fwait
cmovs
das
cmp
fsub
aam
inc
loope
fcom
sbb
jg
or
xor
fcomp
sbb
cmp
and
outs
pop
jbe
pusha
aaa
xor
or
add
and
je
outs
pushf
xchg
cld
repnz
enter
mov
scas
add
sbb
daa
fwait
ja
imul
cmps
(bad)
shr
push
inc
ret
mov
stc
jmp
(bad)
sbb
jge
movs
retf
cmp
xchg
in
icebp
addr16
pop
jae
jle
lods
call
imul
outs
leave
jae
cld
or
xor
in
movs
inc
adc
mov
(bad)
or
push
enter
sahf
loope
dec
inc
or
or
pop
add
push
pop
inc
pop
sti
jmp
stos
iret
adc
shr
mov
lods
pop
sbb
xchg
cmp
push
adc
cmp
test
sub
xchg
inc
sub
sahf
es
fistp
adc
enter
pop
in
cmp
and
rcr
jge
icebp
fdiv
inc
not
(bad)
js
call
pop
xchg
in
or
xor
ins
mov
fisttp
add
lea
gs
cmps
dec
jmp
mov
iret
mov
add
ja
icebp
cmps
mov
test
cmp
fmul
and
push
sub
mov
retf
xchg
push
mov
inc
xchg
mov
in
and
leave
out
std
cs
ja
cwde
stc
lock
sbb
lods
cwde
jg
sub
cmp
sub
addr16
jl
xchg
into
push
jecxz
fstp
clc
xor
in
push
or
push
popf
push
xor
cmp
mov
xchg
lds
xor
hlt
and
sbb
sbb
push
sbb
pushf
jecxz
lds
mov
adc
or
ficom
in
xor
nop
pop
fstp
cmps
mov
sbb
jp
in
inc
sub
and
push
ds
dec
dec
cmps
inc
or
stos
adc
lahf
fnstsw
(bad)
rcl
cmps
stos
push
cld
hlt
repz
scas
cmc
and
add
push
xchg
repnz
bound
add
fadd
sahf
frstor
lock
ja
push
xchg
test
std
imul
sbb
mov
sti
clc
es
iret
shl
sub
or
mov
leave
aad
enter
(bad)
mov
pop
add
dec
cld
xchg
pop
in
in
push
daa
jg
cmp
les
shl
add
(bad)
in
xchg
mov
aam
cmp
push
push
push
pop
lods
test
sub
add
lods
push
jmp
arpl
mov
mov
out
pushf
pop
xchg
out
outs
outs
xchg
inc
aas
and
push
sub
movs
paddq
sti
push
xchg
sub
push
xchg
(bad)
mov
fimul
jp
ins
loop
lock
dec
test
add
dec
hlt
fisttp
loopne
out
pop
cmps
jmp
and
pop
sbb
add
xor
aam
popf
int3
dec
inc
test
cmp
dec
fcomip
scas
inc
test
test
or
push
ror
ret
jp
fdivrp
jge
sbb
mov
leave
loopne
push
mov
or
loopne
enter
call
cmp
shr
out
fimul
mov
imul
pop
fcmovnu
or
cmp
sub
js
in
pop
arpl
cwde
test
xchg
add
mov
int
or
clc
adc
mov
scas
sub
or
push
or
fstp
jns
mov
lea
dec
cmc
sub
sub
cwde
(bad)
loope
mov
jmp
ret
(bad)
and
fist
aas
sub
std
sub
jge
mov
mov
adc
inc
push
pop
mov
push
int
stos
jge
jno
es
jb
sub
out
pop
hlt
and
pop
lea
cwde
jae
xor
ror
sbb
test
adc
pusha
pushf
icebp
jb
push
add
cmp
adc
mov
mov
pop
test
and
sub
lods
outs
fbld
fcmovnbe
mov
adc
(bad)
fnstcw
cmc
(bad)
add
dec
jo
cmp
popf
pop
push
fstp
and
mov
retf
dec
fisub
push
les
pop
xchg
push
retf
loop
aaa
ins
add
test
fwait
sti
or
jl
out
and
mov
scas
nop
jo
inc
repnz
retf
ret
cdq
mov
xchg
xchg
lahf
sbb
mov
pcmpeqd
push
mov
shl
ret
sbb
mov
imul
fnstenv
shl
adc
test
ss
mov
sub
retf
test
sub
out
stos
add
lahf
dec
arpl
or
stos
shr
and
push
push
sub
add
das
into
and
mov
jle
xchg
test
lea
dec
stos
and
out
xchg
mov
sar
and
outs
es
(bad)
xchg
dec
mov
push
sub
lahf
sub
xchg
add
dec
ins
cwde
mov
mov
mov
or
inc
push
inc
jmp
outs
test
cld
addr16
xchg
jbe
dec
test
jae
mov
neg
sub
movs
xchg
adc
(bad)
jecxz
mov
mov
cmp
adc
fidivr
xchg
mov
mov
(bad)
dec
scas
imul
mov
xor
xchg
sahf
mov
mov
ret
fprem
dec
sub
mov
cmp
xchg
xor
cmps
sbb
add
loopne
xor
stos
cmps
mov
in
jl
lock
out
jp
hlt
dec
jle
adc
push
es
arpl
aas
dec
(bad)
mov
pushf
fld
mov
add
mov
loop
jns
in
jecxz
push
arpl
call
push
aad
mov
inc
movs
mov
mov
sbb
jmp
sbb
pusha
dec
adc
out
pop
sbb
fild
mov
xchg
mov
mov
jae
jno
mov
push
scas
bound
jmp
mov
ficom
test
sahf
jge
cmp
js
jo
pushf
(bad)
movs
cmp
push
and
in
inc
sbb
inc
jmp
pop
cmp
mov
jp
pushf
hlt
push
cmp
adc
jns
cmps
pop
inc
aas
ret
xchg
call
(bad)
fwait
call
mov
enter
push
imul
adc
xchg
es
mov
mov
mov
in
mov
xchg
sub
jmp
xchg
iret
push
or
in
sbb
ins
xchg
jl
or
add
fistp
enter
in
pop
nop
(bad)
in
xlat
imul
sbb
inc
mov
inc
test
jne
and
jmp
call
xchg
or
sahf
in
mul
xor
mov
xor
or
adc
and
adc
std
push
push
jle
(bad)
sbb
popa
pop
add
pop
xor
push
mov
xor
les
jmp
out
pusha
xchg
daa
lds
push
xchg
cs
cld
sbb
lods
inc
lods
shr
hlt
mov
out
rcr
xor
jmp
xor
stos
push
jno
test
jnp
or
cmc
and
rol
(bad)
imul
repz
shl
jnp
das
pop
mov
nop
into
retf
push
dec
call
pop
lods
mov
sub
cli
aas
arpl
mov
and
dec
xchg
popa
and
les
movs
scas
popf
lahf
(bad)
loope
fidiv
es
sub
adc
mov
push
dec
cmps
pop
leave
xchg
sbb
das
inc
ret
gs
mov
mov
gs
(bad)
and
int3
mov
das
mov
scas
div
sahf
sub
sahf
sbb
test
mov
mov
stos
pop
xor
xor
cld
imul
movs
add
jg
jo
scas
pop
sti
push
inc
fisub
jne
adc
pop
or
cmp
shl
cmp
sbb
ud0
lea
fwait
mov
jo
call
sub
int
or
push
out
repz
movs
adc
out
adc
mov
inc
aam
dec
mov
mov
mov
push
cmp
aas
leave
cwde
lahf
jp
repz
pop
outs
fs
add
test
leave
ficomp
ret
pop
mov
jecxz
ds
and
inc
or
push
call
mov
jmp
push
outs
and
gs
mov
xor
cmp
cmp
cmc
xchg
mov
nop
lea
jl
stos
add
mov
push
imul
sahf
test
sbb
push
mov
pop
and
dec
pushf
js
stos
sub
sub
adc
in
push
sbb
and
add
jb
aam
sar
inc
dec
mov
dec
jmp
xor
ret
inc
jmp
iret
jp
sbb
xor
xor
cwde
loope
add
aad
xor
ret
leave
push
cmp
fadd
sbb
scas
shl
pop
and
sti
(bad)
cmps
js
ret
push
add
dec
mov
jbe
in
sar
cld
adc
kmovd
mov
fild
sbb
xor
ins
xor
ins
mov
mov
ds
pop
or
dec
out
mov
fldenv
inc
cwde
add
adc
push
or
xor
dec
cs
bound
mov
jb
clc
dec
mov
ja
rcl
jge
push
mov
es
cmps
xchg
jns
out
or
icebp
fstp
cmp
jo
(bad)
clc
loop
(bad)
in
add
push
sub
shr
cmps
cmc
add
cmp
mov
cmp
pop
xchg
mov
jge
jmp
icebp
call
mov
inc
fadd
iret
push
(bad)
sar
loopne
lods
mov
add
mov
test
push
stos
mov
jno
adc
mov
mov
inc
iret
fs
out
cmp
mov
mov
add
inc
dec
fist
mov
call
jo
inc
ret
or
xchg
dec
jae
call
pop
pop
pop
pop
ins
dec
sub
rcl
xor
cmc
push
mov
and
mov
mov
fbld
int3
sub
push
mov
pop
mov
jmp
add
imul
in
stc
pop
in
call
jns
pop
popa
add
mov
mov
in
cmp
sub
idiv
jns
add
push
mov
aas
sub
dec
cs
aas
(bad)
mov
cmp
repz
mov
inc
lock
cmp
frstor
aaa
mov
pop
hlt
adc
stos
or
xlat
xchg
add
xchg
and
xlat
sbb
mov
push
pop
jge
ficomp
sub
xchg
mov
sub
std
and
sub
aad
push
hlt
jo
int3
push
xchg
(bad)
pusha
sub
or
out
inc
mov
adc
sub
pusha
push
jmp
js
dec
adc
push
sub
ficomp
test
jmp
test
repz
mov
xor
mov
call
loopne
or
sbb
out
enter
sub
sahf
pop
and
ds
or
cmp
test
test
adc
inc
sub
pop
sahf
sbb
xor
push
jmp
jnp
inc
pop
(bad)
mov
dec
enter
sbb
movs
test
xchg
cwde
inc
out
dec
test
inc
scas
popa
pop
push
stos
rcl
shl
es
dec
in
or
movs
cld
mov
cmp
(bad)
bound
xor
or
cmp
sbb
pop
sub
xor
(bad)
(bad)
lahf
or
sub
aaa
loopne
outs
popf
enter
push
rol
push
jge
jo
cmp
or
add
add
jae
out
ins
enter
sub
mov
ins
dec
mov
ss
loop
imul
popa
sub
cmp
cmps
jb
or
mov
stos
stos
daa
dec
dec
leave
int
nop
pop
lahf
xchg
ret
mov
movs
dec
rol
retf
cwde
movs
jae
lea
push
sub
outs
imul
cmc
pusha
fisubr
out
movs
push
cs
push
cmc
adc
test
mov
jmp
push
xchg
mov
nop
pop
or
push
xchg
dec
das
fnstenv
es
enter
mov
mov
or
mov
sub
call
(bad)
aaa
xchg
and
in
fwait
sar
pop
icebp
mov
cmc
sub
pop
push
pop
pusha
adc
push
sti
mov
outs
into
pop
(bad)
not
mov
inc
dec
addr16
jecxz
fiadd
cmp
mov
je
in
popf
out
dec
pop
pushf
xor
es
push
cmps
jb
mov
and
out
push
test
xlat
pushf
inc
popa
stos
xchg
fild
inc
mov
enter
lods
xchg
dec
add
mov
xor
mov
ret
inc
dec
push
movs
movs
push
pop
and
sti
add
mov
add
cs
pop
mov
sbb
xor
sub
repnz
add
(bad)
jb
lods
(bad)
(bad)
jo
aas
fldenv
lock
push
inc
push
lods
push
jno
test
fidiv
sub
dec
push
xchg
pop
aas
fdivr
icebp
jp
push
pop
sub
jae
push
hlt
movs
push
xchg
fwait
jl
fnstenv
dec
stc
mov
mov
inc
mov
push
or
les
xchg
ror
repnz
scas
xor
adc
repz
fiadd
out
scas
lds
lea
cmp
sar
aam
xchg
clc
lock
dec
mov
mov
sub
stc
and
or
push
(bad)
sti
addr16
inc
pop
shl
sbb
in
aam
jge
push
(bad)
test
out
jnp
mov
cmp
pop
xor
inc
popa
or
stc
sub
pop
sub
outs
sbb
lods
xor
fimul
dec
mov
out
cmp
sbb
pop
pop
(bad)
shr
ror
imul
or
test
int
imul
xor
sbb
push
ins
cwde
fcomp
adc
fnstcw
and
xor
pop
ret
call
push
inc
retf
xchg
xchg
dec
xchg
mov
push
push
pop
test
add
rcl
(bad)
or
add
dec
jmp
sub
and
add
push
gs
jl
sbb
pop
js
movs
xchg
sbb
or
mov
in
xchg
xchg
retf
ret
mov
push
dec
xchg
inc
bound
and
xor
cmps
pop
pop
mov
aad
int
leave
ret
std
lods
out
mov
xor
xlat
xchg
inc
mov
shl
stc
inc
mov
imul
sbb
jecxz
mov
sub
inc
lds
sub
cli
adc
xchg
sub
popf
mov
icebp
dec
cdq
jne
mov
ret
pop
iret
xlat
xor
mov
ins
cli
cmp
push
retf
cmp
mov
data16
xchg
xor
aas
adc
dec
fistp
sbb
aaa
das
ret
or
and
inc
and
sahf
cli
push
mov
(bad)
cli
sub
jg
add
icebp
adc
gs
psadbw
dec
retf
repz
(bad)
fwait
or
mov
pop
xchg
lea
je
icebp
pusha
popf
sahf
mov
cdq
cmc
rcl
push
je
gs
adc
ror
pop
int3
call
mov
or
inc
dec
dec
aam
cmp
out
push
add
leave
jmp
into
ret
push
shl
into
pop
inc
call
rol
pop
inc
pop
pop
pop
push
inc
cli
pop
pop
pop
sub
aaa
and
mov
push
xor
mov
cmc
cmc
jl
cmp
lea
ins
dec
cmps
mov
imul
pop
aaa
xor
mov
jecxz
sbb
xor
and
sub
icebp
xchg
leave
mov
lock
jl
imul
cmps
daa
add
dec
rcr
dec
(bad)
pop
xor
cmp
xor
fimul
jo
adc
cmps
rcr
(bad)
adc
mov
sbb
xor
mov
or
test
dec
nop
leave
lods
(bad)
sar
ins
repz
dec
or
sbb
jg
pop
sbb
cmp
mov
sbb
(bad)
cs
add
push
push
pop
push
mov
jl
sub
test
call
clc
jmp
xchg
inc
into
or
sbb
inc
add
jl
das
adc
mov
rol
lods
xchg
sbb
jae
adc
pop
dec
sub
and
push
push
not
(bad)
retf
idiv
pusha
xor
stos
sbb
call
es
es
cwde
fadd
add
adc
add
mov
inc
dec
dec
cwde
inc
adc
add
stc
aam
xlat
push
pop
cmp
or
mov
xchg
adc
mov
out
pop
jmp
push
jns
js
jb
cmp
sbb
dec
cmp
test
jae
adc
add
loop
and
adc
retf
cmp
inc
daa
shr
addr16
or
cdq
and
das
mov
and
push
ret
sub
jg
(bad)
lahf
inc
pop
pusha
cmps
push
jno
fcomp
test
or
pop
jne
loop
in
mov
imul
cmp
jl
push
aas
cs
out
icebp
push
repnz
popa
or
sbb
adc
mov
in
ins
ror
call
ja
jge
test
inc
mov
in
cmp
popa
add
mov
xchg
adc
(bad)
fmul
std
mov
adc
cmp
fild
mov
mov
cs
xchg
mov
ret
scas
aaa
cmp
add
or
jns
daa
cmp
adc
xchg
pop
jecxz
in
retf
lock
popa
mov
jnp
sti
mov
push
adc
cmp
les
fnstsw
jmp
pop
out
push
mov
repnz
mov
out
test
outs
pop
and
call
sub
xchg
sbb
daa
lea
or
ja
dec
dec
lea
jge
pop
or
push
add
cli
ss
or
mov
mov
dec
push
jns
add
(bad)
sbb
punpcklwd
push
xchg
push
push
fs
jb
mov
loope
mov
mov
imul
xchg
lods
repz
cmp
pop
jmp
mov
or
lods
es
leave
dec
jg
push
push
jge
das
outs
pop
mov
push
aad
sbb
test
jge
xor
dec
push
adc
or
mov
scas
stos
mov
ror
cmp
pinsrw
pop
pop
push
ffreep
jge
and
test
(bad)
pusha
(bad)
cdq
lahf
jmp
xchg
fstp
jo
mov
test
fld
test
test
cmps
pop
jb
pop
cmps
daa
mov
cwde
xchg
cmp
rol
mov
test
mov
pop
jmp
ficomp
retf
add
out
in
ret
jmp
mov
movs
out
(bad)
rcl
or
outs
jl
outs
icebp
(bad)
mov
call
cmp
cmp
cmc
scas
add
push
jmp
xor
inc
adc
in
ror
call
or
cmp
sbb
and
xchg
sti
add
notrack
dec
leavew
int
(bad)
fidiv
xor
cli
add
rol
retf
mul
rol
push
push
mov
xchg
repnz
add
sti
push
push
movlps
jb
leave
pop
pop
(bad)
into
cmp
ins
sub
dec
mov
aaa
repnz
mov
xchg
les
pop
mov
sar
xor
jns
(bad)
pushf
mov
in
repz
push
(bad)
jmp
test
ds
repz
mov
cmps
push
lods
loop
(bad)
(bad)
dec
or
mov
pop
sbb
(bad)
in
gs
cmp
or
xor
sub
adc
xor
lds
mov
cmp
and
jns
bound
pop
stos
xchg
stc
pop
mov
out
add
or
mov
add
jmp
sar
jl
push
movs
mov
dec
jbe
int3
dec
retf
jp
cmovge
movs
sar
mov
cmp
mov
dec
push
dec
add
lods
pop
mov
mov
mov
(bad)
pop
jns
pop
pop
xchg
mov
cmp
test
outs
xchg
popf
(bad)
in
jg
adc
pop
inc
dec
or
lods
repnz
mov
xchg
arpl
sub
add
std
shl
out
in
data16
mov
cld
in
pop
test
cli
inc
int
fcom
dec
ds
cld
and
and
mov
cwde
xor
pop
sub
jle
cmps
and
jne
pushf
jno
movs
xchg
leave
xchg
movs
and
push
cld
pop
out
fadd
repnz
sbb
cdq
and
mov
pop
or
cwde
sbb
das
mov
lea
in
dec
out
sti
mov
adc
into
(bad)
mov
xchg
(bad)
push
pop
mov
cmp
stos
int3
cmp
pop
push
sbb
fidiv
ins
fcmove
xor
aam
cmp
sbb
push
cmps
loopne
push
mov
(bad)
sub
shl
adc
cmps
pop
test
jb
push
sbb
mov
pop
add
clc
mov
mov
imul
jg
fcom
xchg
fldenv
lds
(bad)
call
sub
mov
sub
dec
jecxz
inc
push
popf
dec
(bad)
(bad)
sbb
lods
pushf
mov
fsubrp
jne
lea
add
or
sbb
lahf
cmp
int3
cs
ds
mov
aaa
xchg
mov
sahf
pop
cli
pop
cmp
out
rcl
mov
fnstsw
loopne
test
fsubr
adc
(bad)
push
push
out
shl
pusha
mov
cmps
adc
lahf
mov
in
pop
cmp
mov
out
fdivrp
mov
adc
mov
cld
and
pop
jnp
mov
imul
movs
xchg
pop
(bad)
inc
jb
repnz
int
mov
push
(bad)
not
mov
cmc
pop
outs
push
aaa
push
xor
cld
xchg
jecxz
jns
movs
bnd
rcl
jb
xchg
dec
push
data16
outs
leave
movups
lds
push
sbb
ds
dec
jmp
mov
pop
(bad)
sahf
push
in
inc
mov
mov
jnp
rcr
fld
loopne
adc
adc
and
and
inc
adc
or
neg
cwde
and
in
aaa
push
out
test
ficomp
or
mov
inc
dec
pusha
mov
mov
xor
xsaveopt
ds
dec
mov
adc
je
mov
xor
push
test
push
inc
jo
mov
fwait
cmp
ins
ja
xor
rcl
push
call
fsubr
mov
push
push
test
push
adc
sbb
push
fmul
mov
cwde
sub
mov
out
push
pop
fsub
cmc
ror
std
retf
xor
mov
xor
mov
mov
sbb
cli
sbb
add
mov
mov
jb
stos
ds
jl
pop
dec
(bad)
mov
retf
aaa
imul
jb
pop
les
and
mov
dec
and
ret
iret
cmp
retf
retf
out
in
pop
mov
or
mov
call
push
push
fsub
cmp
iret
mov
push
sub
ds
and
iret
add
inc
test
cs
sar
jbe
jle
pop
and
and
inc
aas
mov
mov
call
inc
mov
xchg
push
adc
aad
fisub
enter
jmp
or
pop
cmp
xchg
jo
inc
int3
stc
and
jbe
das
lods
sahf
repnz
out
leave
cmps
add
retf
cmp
test
hlt
stos
cmp
adc
push
xchg
jb
das
sub
jl
arpl
inc
fdiv
inc
rcl
jae
lods
xor
add
push
cdq
mov
or
adc
ins
adc
cmp
adc
or
jnp
add
fisttp
sbb
adc
push
into
jno
or
mov
(bad)
cmps
xchg
mov
and
test
movs
pop
cmp
mov
add
lock
or
or
test
mov
popa
add
dec
add
pop
test
add
push
and
sbb
push
aaa
pop
dec
cmp
enter
in
and
mov
jns
repz
xor
jo
adc
and
addr16
sub
add
cmps
dec
xlat
aaa
xor
cmp
outs
add
sahf
(bad)
mov
or
sbb
inc
sub
or
sub
lds
push
and
fstp
fwait
bound
sbb
stos
push
cs
ret
pop
fldcw
sbb
popa
imul
outs
or
xchg
(bad)
xchg
and
fstp
inc
dec
es
pop
inc
sub
mov
inc
inc
ret
imul
add
push
mov
clc
fisubr
nop
pop
outs
cmps
sar
div
ret
paddd
pop
addr16
inc
sub
aad
mov
add
jle
or
fisub
push
sbb
sbb
lods
sbb
pop
in
gs
call
out
nop
sub
push
adc
ja
inc
dec
sbb
xlat
js
cmps
jo
mov
jle
lahf
and
xor
pop
shl
fsub
pop
push
xlat
sbb
sbb
hlt
jmp
pop
pop
out
nop
lahf
mov
adc
mov
push
ret
mov
mov
cmp
sar
jecxz
cld
push
rcr
add
popf
push
add
xchg
xor
les
and
aad
pushf
nop
hlt
jl
mov
es
aad
in
xor
mov
stos
outs
je
retf
push
daa
inc
pop
test
stc
mov
mov
pop
dec
adc
repnz
jno
cmps
lods
in
inc
and
movlps
fbstp
jecxz
pop
and
dec
jmp
push
leave
adc
dec
lods
and
addr16
push
bound
inc
addr16
mov
adc
pop
mov
mov
iret
and
or
cmp
inc
inc
cdq
cmp
and
mov
mov
lea
hlt
inc
jle
stc
out
dec
pop
mov
push
arpl
cmp
mov
xchg
pop
add
es
mov
es
rcl
jnp
ds
test
mov
ds
fiadd
dec
sub
mov
cmc
jmp
das
(bad)
pop
fidiv
pop
or
and
and
dec
xchg
ret
xchg
out
dec
je
mov
push
xchg
push
sbb
ret
and
mov
xchg
xor
fucom
push
mov
sahf
addr16
int3
mov
add
and
sub
ja
inc
cmp
mov
lea
jle
jae
int
mov
fistp
xlat
jp
mov
fucomip
shl
out
mov
mov
push
rol
jecxz
xchg
xor
push
mov
push
jmp
or
ret
mov
adc
(bad)
in
or
xchg
xchg
and
add
mov
mov
imul
clc
jbe
outs
sub
mov
stos
mov
popf
adc
inc
push
xor
sahf
test
je
mov
fsub
push
mov
mov
cs
scas
xor
push
ds
or
(bad)
fidiv
push
mov
jno
dec
fwait
(bad)
or
push
cmp
loop
sbb
sub
cmc
mov
or
pop
out
jp
scas
mov
pop
mov
out
dec
pop
push
cli
jmp
pusha
pop
imul
popf
adc
cmc
int3
test
dec
das
xor
jo
adc
mov
mov
push
outs
ss
retf
dec
xchg
inc
test
fisttp
inc
pop
enter
jge
push
shl
sbb
jo
lock
jne
out
jne
add
aad
or
es
das
cmps
ror
dec
sbb
jb
mov
gs
add
mov
test
test
mov
loopne
cmp
aaa
push
or
out
js
push
inc
mov
pop
sahf
xor
sbb
fcomp
ins
(bad)
pop
add
mov
(bad)
xor
pop
mov
(bad)
in
(bad)
cmp
add
fdivr
and
fimul
or
js
and
imul
push
cmp
mov
test
test
bound
adc
nop
dec
jmp
dec
dec
into
dec
ds
ret
fsub
dec
mov
xchg
jle
into
int
push
mov
push
jnp
into
jl
les
inc
fistp
fs
ins
sti
jb
cmp
cdq
shl
cmp
jbe
push
aam
cmps
fwait
adc
aaa
fistp
dec
fsub
xchg
and
pop
mov
mov
das
xor
fabs
ror
jmp
ror
mov
rol
sub
sbb
adc
mov
mov
xor
cwde
xchg
dec
pop
push
mov
mov
push
test
push
and
enter
inc
cmps
pop
mov
dec
out
or
inc
mov
xchg
and
(bad)
sti
jne
cmp
data16
cmc
movs
pop
mov
and
mov
fld
icebp
mov
loop
fmul
out
out
push
enter
out
popa
mov
inc
test
pop
inc
jl
cwde
lea
stos
mov
icebp
cmp
outs
dec
sub
xor
inc
or
repnz
movs
xchg
jmp
sbb
mov
jnp
pusha
dec
sub
ins
add
stos
dec
sbb
add
jnp
popa
fldenv
cmp
test
xor
mov
fcmovbe
pop
rcl
inc
push
test
or
ja
push
in
xor
xchg
movs
in
dec
adc
sub
and
pop
repz
aas
movs
test
lea
xchg
fistp
xchg
imul
jl
mov
in
ins
hlt
adc
mul
iret
int3
retf
adc
sbb
add
add
jmp
lea
les
rcl
jo
mov
adc
xchg
sub
jmp
jle
adc
push
mov
lods
orps
mov
xchg
dec
fs
sub
scas
aas
fistp
stc
shl
sar
jnp
dec
setbe
inc
leave
pop
repz
jb
dec
aad
out
sub
jmp
fild
adc
leave
push
xor
pop
gs
mov
jg
ror
stos
add
loope
in
in
jp
mov
aad
ss
and
ret
ins
or
outs
popa
push
mov
movs
fisttp
push
mov
mov
push
mov
xor
push
cli
inc
adc
sbb
sub
sub
dec
leave
ins
call
and
push
add
mov
and
xor
fldenv
or
push
cmps
and
push
fst
xchg
mov
jae
pop
fsubp
dec
jno
outs
sub
out
pop
arpl
xchg
jmp
xchg
xchg
std
pop
(bad)
xor
ror
jno
sub
mov
sti
and
arpl
inc
xchg
enter
dec
sbb
rcl
das
ret
push
sub
repz
jo
and
sbb
mov
mov
mov
out
movs
jmp
jge
mov
lea
xchg
cwde
mov
loope
mov
(bad)
add
mov
and
fwait
movs
mov
pop
inc
ret
call
mov
jl
ins
xor
outs
fucomip
sbb
mov
std
lods
inc
pop
dec
movs
or
pop
lods
sbb
in
rcr
test
mov
gs
les
fstp
cwde
bound
paddsb
ret
in
cmp
fiadd
out
adc
jns
scas
out
xchg
mov
loopne
pushf
xchg
mov
sbb
fisubr
xor
inc
xchg
test
cli
inc
outs
pushf
xor
neg
dec
push
jns
or
pop
or
xchg
cmp
and
xor
xlat
push
aam
adc
(bad)
mov
fisttp
xchg
(bad)
cli
cli
in
sbb
pushf
jbe
dec
xor
repnz
ret
sar
jmp
mov
push
adc
sbb
and
sahf
repnz
lds
dec
jo
lahf
stos
pop
clc
push
dec
in
jle
jecxz
inc
rol
cmp
sbb
popf
pop
jge
in
jge
dec
or
adc
mov
jmp
jne
dec
xchg
(bad)
out
fisubr
call
nop
sbb
xchg
stc
add
sub
fdiv
(bad)
ja
dec
loopne
add
jp
dec
fidivr
xchg
popf
jne
imul
add
sub
inc
in
or
loopne
pusha
cli
adc
mov
jnp
adc
or
push
icebp
ins
mov
imul
mov
int
dec
loopne
or
movs
xor
test
add
pop
mov
mov
jae
mov
adc
mov
ss
jns
xlat
pushf
add
iret
mov
jne
cmp
(bad)
aam
stc
mov
and
aam
dec
jmp
sub
jecxz
inc
sar
cmp
lods
inc
pop
dec
push
lock
test
dec
dec
dec
or
cld
das
mov
icebp
sbb
mov
les
popf
mov
or
add
mov
mov
xor
retf
jge
into
adc
sub
mov
stos
sbb
push
sub
adc
jae
push
js
jg
jle
adc
xor
in
pop
xchg
stc
int3
into
sub
mov
ds
mul
inc
xchg
jge
fwait
jp
or
dec
ror
ret
or
data16
stos
push
adc
pop
mov
push
xor
gs
push
repz
imul
imul
mov
rcl
sbb
(bad)
jo
pop
outs
mov
pop
scas
cmp
inc
ja
loopne
fs
inc
push
ss
std
lods
clc
inc
fnstenv
popa
cdq
or
stos
(bad)
or
sub
cmp
mov
or
xchg
mov
cdq
mov
repz
jne
inc
jle
sti
imul
movs
(bad)
int
in
adc
dec
sub
call
push
xor
dec
retf
outs
xchg
test
mov
inc
ins
mov
mov
push
ins
(bad)
retf
mov
inc
inc
lods
jmp
jp
test
mov
(bad)
push
jecxz
cmp
mov
call
inc
dec
adc
jecxz
in
add
test
call
popa
fstp
idiv
push
in
ret
inc
jp
or
fnstsw
aad
mov
ror
or
(bad)
les
mov
lock
mov
mov
dec
rcr
pushf
les
mov
inc
pop
retf
mov
fcom
lock
aad
xor
push
sub
push
push
outs
stc
adc
jg
iret
hlt
shl
sahf
repz
dec
jb
ret
retf
das
or
push
cld
popf
frstor
(bad)
lods
rol
ficom
ret
ret
and
pop
mov
ficomp
nop
add
jmp
rcl
pop
(bad)
push
sub
rcr
fcom
or
ror
icebp
pop
popf
cmp
mov
pushf
stc
and
jne
in
call
pop
lahf
fs
jne
leave
lods
jb
shl
out
mov
fist
popa
call
inc
les
pushf
repnz
inc
frstor
clc
jecxz
inc
xor
push
mov
shl
cli
inc
mov
pushf
test
cmp
fst
pop
jnp
push
and
mov
stc
adc
sub
or
fwait
repz
test
repnz
mov
xchg
inc
jnp
add
test
jns
xchg
test
in
cmp
das
xor
inc
mov
jo
push
inc
add
shld
aaa
dec
fldcw
mov
add
int3
stc
inc
add
sub
add
out
sub
retf
cdq
dec
repnz
xor
sub
(bad)
mov
jne
fnstsw
sar
fisub
(bad)
push
jo
ja
add
ins
mov
pop
shl
pop
pop
cs
sbb
xor
xor
nop
je
les
movs
movs
push
movs
jns
mov
iret
pop
gs
add
repz
push
mov
jnp
jge
shr
movs
dec
mov
xor
jo
int3
inc
loopne
repz
cli
mov
rcl
inc
clc
jmp
xchg
cmp
(bad)
adc
aad
int3
test
add
(bad)
popa
pop
cmp
lods
data16
add
es
xor
arpl
mov
dec
adc
xor
inc
in
fwait
mov
adc
xor
cmc
arpl
leave
je
jge
and
xchg
(bad)
mov
rcl
xchg
add
jno
xchg
push
shr
add
and
and
push
imul
or
movs
adc
out
sub
xchg
mov
push
or
bound
mov
push
xor
xor
add
jmp
jp
ja
jmp
out
dec
aaa
cmp
ds
inc
aam
push
mov
(bad)
in
popa
dec
xchg
rcl
sbb
mov
outs
retf
pop
jbe
and
pop
outs
pop
push
shr
or
aad
pop
push
mov
push
adc
xchg
(bad)
scas
test
pop
lea
dec
ss
cmp
xlat
xchg
xlat
retf
out
inc
in
jno
xchg
adc
test
int
jne
jge
lods
pop
lds
mov
mov
xchg
loope
shl
fcom
mov
lods
mul
pop
cmp
addr16
les
arpl
xchg
fmul
clc
daa
pushf
mov
test
int3
out
push
movs
mov
out
popa
lahf
daa
cmp
pop
cmps
ret
mov
stc
jbe
inc
and
jecxz
xor
into
data16
mov
cmc
ret
shl
cmp
scas
push
push
cmp
movs
aam
xor
mov
(bad)
sub
add
cmps
in
sar
adc
xor
ins
xchg
movs
ret
sub
mov
retf
sbb
add
push
lods
lahf
test
shr
inc
aam
xchg
pusha
pop
test
mov
cmc
push
sti
das
js
xchg
xor
mov
sub
cmp
retf
retf
adc
xlat
ret
sbb
outs
jmp
leave
scas
data16
les
dec
lods
out
(bad)
adc
jae
cmp
inc
dec
mov
ja
dec
jecxz
mov
cmp
mov
mov
ds
push
ds
xchg
fcmovb
cmp
xor
les
adc
mov
das
push
out
push
std
loop
leave
mov
or
ins
(bad)
inc
aaa
dec
xor
(bad)
jo
jno
div
mov
inc
hlt
and
jmp
pop
daa
fs
sub
and
jno
jne
out
aad
es
cwde
push
dec
lock
shr
sub
outs
cmps
or
ror
ficomp
hlt
not
dec
das
pop
mov
movs
adc
dec
not
imul
shl
and
test
jmp
ret
or
fimul
rcr
test
nop
(bad)
and
fisub
push
mov
or
jecxz
fild
adc
arpl
xchg
ret
dec
push
fstp
sahf
add
mov
sbb
mul
pop
push
stos
jmp
aam
test
mov
in
sub
in
pop
out
inc
repz
mov
gs
retf
pop
or
es
jg
sub
jmp
mov
and
stos
pop
sub
ret
or
gs
and
jo
call
xchg
rcl
outs
out
scas
pop
fwait
ss
jmp
lods
sub
mov
sub
leave
rcl
fistp
sub
push
inc
jp
ret
ja
stc
push
push
inc
aaa
pop
scas
(bad)
aam
push
enter
sbb
popa
hlt
jge
mov
js
scas
loopne
xor
jp
mov
adc
or
loopne
or
or
(bad)
pushf
or
pop
stos
dec
dec
fiadd
fadd
loope
cmp
pop
imul
pop
mov
jno
popf
mov
loope
push
mov
pop
iret
xor
inc
sti
or
jmp
or
stos
enter
leave
pop
inc
comiss
lods
dec
mov
cmp
push
jno
call
xor
dec
test
cmp
enter
cld
es
dec
das
push
xchg
inc
popf
jecxz
add
sub
out
outs
in
fs
gs
sbb
jmp
jns
push
adc
add
and
fs
(bad)
or
cmp
xchg
mov
mov
sub
sbb
add
pop
push
push
movs
jo
xor
test
fwait
ret
sbb
arpl
pop
sbb
sub
push
cwde
loopne
or
sbb
adc
or
call
das
cdq
jmp
daa
xor
repnz
jp
or
sbb
or
stos
div
in
jbe
lods
jmp
retf
mul
adc
int
jle
lods
in
stc
mov
ja
push
inc
test
add
lods
leave
fistp
outs
mov
push
stos
imul
mov
cmp
cmps
inc
pushf
dec
out
jg
or
imul
out
add
dec
shl
popa
sbb
jge
inc
push
pop
mov
inc
xlat
lods
mov
jb
std
and
push
sar
fs
sahf
hlt
add
jmp
jnp
push
add
jmp
call
dec
pop
cmps
call
cmp
or
push
cmp
sub
mov
mov
jmp
cdq
idiv
(bad)
aad
mov
inc
jnp
jne
lods
sub
stc
mov
test
pop
sti
jmp
into
cld
fcom
dec
or
mov
scas
mov
loopne
in
add
mov
add
push
push
xor
dec
jecxz
pop
(bad)
sbb
sbb
(bad)
dec
call
push
int3
sbb
or
bound
outs
mov
sbb
imul
xchg
and
pop
sbb
adc
movs
push
inc
mov
push
inc
mov
bound
inc
inc
sub
jb
(bad)
mov
pop
xchg
and
movs
adc
cmp
jle
jae
test
out
and
sub
(bad)
gs
gs
lods
xlat
mov
movs
aam
pop
imul
cld
jae
and
addr16
mov
in
loop
adc
retf
inc
scas
and
in
ret
jge
mov
sti
pushf
cmp
pop
and
pop
pop
scas
cmp
push
jge
jo
inc
sub
loope
call
ret
xchg
arpl
int3
mov
ins
push
sub
cmps
inc
cwde
pusha
out
xchg
jno
shl
sub
shl
xor
lods
pop
xor
popa
into
hlt
mov
push
or
sub
test
loope
sub
lods
jnp
add
dec
mov
fdiv
jno
cmp
stc
retf
mov
arpl
mov
add
aad
shl
mov
stc
test
cmp
fcom
jnp
jbe
ds
and
jmp
ss
shl
out
das
push
xor
add
imul
fnsetpm(287
mov
(bad)
cmp
adc
and
popf
mov
cmp
add
sbb
mov
fmul
pop
sbb
stc
mov
movs
mov
fidiv
xor
add
and
not
or
push
out
cmp
cmp
pop
and
jecxz
sub
daa
popf
mov
stos
das
xchg
mov
mov
sub
add
push
mov
mov
or
push
(bad)
ss
jo
setp
add
jg
pop
pop
pop
into
adc
and
sub
mov
push
push
cmp
jge
dec
dec
xor
shr
ror
push
sub
sub
xor
xchg
cmp
xor
cmp
xchg
add
(bad)
test
pop
shr
retf
sar
int
add
cmps
mov
ret
xor
out
sub
aad
cmp
and
rcl
mov
xor
aam
cmp
jbe
mov
xchg
dec
mov
dec
mov
data16
add
fild
ss
adc
inc
inc
xor
push
pop
add
sub
jecxz
addr16
std
jno
dec
pop
xchg
xchg
jnp
mov
gs
pushf
sti
xchg
lds
sti
or
mov
(bad)
sbb
frstor
imul
cs
mov
add
int
ins
mov
call
inc
test
gs
cdq
fcomp
mov
sbb
jns
test
add
out
test
call
push
sti
les
jbe
popa
inc
dec
test
and
jmp
mov
adc
(bad)
and
or
mov
lea
mov
(bad)
shl
jno
leave
out
cmp
inc
lea
pop
(bad)
or
mov
icebp
iret
dec
rcr
inc
imul
push
(bad)
adc
xor
cld
pop
add
loopne
js
sbb
stos
(bad)
mov
mov
movs
das
stos
jle
arpl
xor
retf
pop
lds
sbb
sub
imul
jo
jle
push
mov
lahf
mov
xchg
pop
xor
cs
(bad)
jmp
iret
out
adc
push
nop
bound
dec
dec
(bad)
out
cli
cwde
and
sbb
aam
shl
xchg
fs
push
and
mov
jge
call
push
sub
rcl
repnz
shl
mov
sahf
lods
sbb
add
in
cmps
sub
stos
cdq
mov
ret
xchg
shl
scas
ins
repnz
push
dec
cmp
aam
pop
test
jns
jbe
es
test
(bad)
adc
hlt
ret
ret
jg
loope
int3
lods
mov
(bad)
jno
adc
mov
xchg
movs
mov
inc
into
retf
add
dec
retf
pop
into
repnz
ins
push
sbb
mov
and
out
ins
xchg
or
push
sar
push
mul
rcl
xchg
push
pushf
jnp
cmp
add
cmp
icebp
sbb
lods
push
xor
test
pop
mov
rol
jp
mov
sbb
sub
fild
sti
ret
add
cmp
aas
call
jmp
out
je
xor
lock
mov
addr16
ins
sbb
stos
mov
fisttp
cwde
(bad)
or
xchg
xchg
jmp
imul
bound
call
sub
xor
es
jnp
hlt
push
pushf
iret
sti
inc
inc
ret
shl
fst
inc
pop
jl
test
sub
pop
fcmovnbe
xor
outs
(bad)
jns
mov
adc
shr
icebp
add
xchg
mov
popa
sub
cmp
cmovb
(bad)
dec
mov
adc
inc
mov
dec
(bad)
imul
jmp
(bad)
imul
scas
test
sti
xlat
dec
pop
jne
pop
retf
call
xor
pop
push
sub
adc
and
xor
enter
out
enter
mov
xchg
xchg
add
(bad)
int
cmc
push
sbb
ins
and
mov
jg
xchg
mov
pop
jno
(bad)
and
cmp
stos
mov
xchg
inc
sbb
mov
out
pop
push
iret
vpcmpgtw
pop
jmp
(bad)
scas
rol
rep
scas
inc
hlt
(bad)
(bad)
movs
xor
xor
or
push
xchg
xor
push
push
jb
mov
jo
sbb
add
arpl
mov
mov
fld
popf
sbb
add
jmp
sbb
jle
icebp
shl
and
jbe
aam
xchg
cmp
cwde
mov
mov
push
cmp
pop
test
mov
mov
iret
mov
push
scas
ins
mov
mov
jne
test
push
xor
jns
pushf
pushf
(bad)
add
movs
outs
push
mov
push
mov
adc
pushf
dec
jns
mov
loop
mov
fild
test
lods
jmp
push
mov
int3
sbb
mov
pusha
xor
call
adc
icebp
cs
sub
cmc
fsubr
xlat
jbe
dec
xor
sbb
jns
aam
xor
mov
mov
mov
leave
sahf
adc
jp
js
iret
pusha
das
and
sub
movs
mov
mov
pop
jae
das
test
repz
mov
cli
(bad)
pusha
popa
imul
jl
mov
pop
jg
je
ss
pop
call
fidivr
ds
shr
pop
inc
mov
enter
movs
das
add
imul
jno
loop
or
js
cmp
add
ins
cmp
push
stos
mov
into
xchg
mov
or
xchg
sbb
cmps
jb
sub
fs
adc
jmp
aas
add
hlt
jne
dec
fdivr
inc
loopne
inc
out
sub
clc
retf
stos
or
push
dec
jmp
ins
xchg
pop
adc
pop
push
pop
sbb
mov
cmc
sahf
pop
mov
jae
mov
sub
repz
mov
stos
xchg
mov
stos
pop
shr
inc
popf
add
cmps
adc
rcl
inc
inc
pop
fwait
out
adc
and
xor
jle
out
test
xchg
xor
push
xchg
cmp
dec
aad
xor
sub
outs
mov
cli
pop
or
inc
xchg
and
or
call
repnz
imul
out
ins
pushf
xchg
popa
dec
jnp
push
pop
pop
dec
push
int3
frstpm(287
dec
cmp
repnz
stos
jg
int
cld
jno
jp
test
mov
(bad)
mov
jbe
sti
pop
dec
out
and
shr
cdq
fild
shl
mov
stos
mov
add
ins
jg
jecxz
jnp
mov
add
xchg
mov
push
daa
es
jne
cmp
add
inc
(bad)
xor
inc
enter
push
inc
and
mov
addr16
adc
add
add
jge
sub
and
popa
add
mov
cmp
mov
jmp
fwait
xchg
add
lahf
and
mov
inc
in
push
inc
pop
jnp
test
cmp
push
repz
rcl
loope
mov
xlat
or
popa
repz
jne
jns
cld
sbb
mov
xchg
dec
inc
inc
pop
leave
outs
add
ins
dec
jmp
test
mov
stc
cmp
lea
pop
(bad)
adc
lock
scas
fmul
fwait
sub
into
ja
retf
dec
inc
add
sbb
aas
mov
mov
das
(bad)
fst
mov
(bad)
push
mov
and
mul
jmp
lods
jg
iret
ds
push
mov
jo
or
ins
mov
ja
push
pop
lds
sub
and
xchg
dec
pop
in
out
jmp
and
js
lds
jb
sbb
jmp
sbb
mov
cmp
into
sbb
cmp
sub
sahf
xor
dec
sahf
mov
js
jge
sahf
mov
xchg
sub
mov
or
push
out
mov
lds
mov
test
bound
(bad)
nop
div
adc
fiadd
mov
(bad)
pop
jo
cs
cld
cmp
sar
sti
nop
mov
jno
push
jb
loope
cmps
mov
sbb
xor
dec
jmp
add
xor
dec
pop
mov
sbb
or
jnp
loope
inc
cmp
mov
push
pop
push
push
xor
push
mov
popf
nop
pop
and
lods
and
(bad)
sub
sbb
mov
(bad)
cmps
adc
ret
push
and
adc
je
(bad)
scas
adc
add
imul
call
clc
call
fild
pop
bound
or
lock
mov
fnstsw
jle
xor
enter
push
or
popa
cmp
push
cdq
push
inc
jmp
inc
ja
in
fbstp
jb
mov
(bad)
pop
int
push
sbb
loop
inc
and
in
sbb
inc
mov
lods
scas
(bad)
mov
aas
out
inc
xor
and
jl
inc
mov
xor
sbb
mov
retf
jns
rol
mov
xchg
in
inc
sub
(bad)
popa
mov
test
nop
xor
in
sbb
mov
out
ror
xor
add
loop
or
jg
inc
adc
pop
test
sub
je
loope
mov
and
sbb
outs
pop
jg
out
mov
adc
dec
push
xor
pop
fisttp
add
xor
out
cld
mov
push
push
mov
dec
mov
les
ds
lock
js
and
aad
neg
hlt
push
sub
cli
aaa
shl
push
dec
adc
sub
sbb
mov
cmps
sub
mov
fldenv
xchg
dec
jb
loop
in
cli
rcr
cmp
jp
xchg
hlt
cmp
pop
ret
pop
das
inc
xchg
int3
sbb
mov
aam
ins
xor
js
into
xor
cmp
add
cmp
mov
aam
cmps
aam
clc
jb
ds
fwait
mov
sti
addr16
push
sbb
inc
leave
xchg
mov
dec
retf
enter
pop
mov
test
lock
cmp
aam
(bad)
in
inc
mov
sbb
fnstenv
mov
(bad)
pop
cmp
push
outs
xchg
jmp
xor
mov
jne
xchg
sar
add
cdq
pop
cmp
or
repnz
jne
jb
adc
sub
popf
cmps
xor
adc
lea
or
and
movs
cld
push
fnstsw
mov
es
jns
adc
jge
(bad)
jae
cmp
xchg
pop
mov
ins
test
push
data16
rcl
pop
or
xlat
inc
jecxz
or
inc
call
mov
xchg
fild
sub
fst
sbb
ins
pusha
mov
sub
sbb
adc
mov
add
mov
aaa
push
cmps
mov
repnz
cmp
(bad)
mov
mov
cli
push
jae
mov
ss
jne
sbb
(bad)
jmp
jmp
dec
mov
and
mov
sbb
cmp
and
movs
rol
stc
inc
loop
xchg
addr16
cmps
xor
sbb
add
mov
hlt
jecxz
or
(bad)
mov
dec
clc
cld
add
add
stos
stc
cld
add
rcr
pop
cdq
xchg
inc
push
jne
mul
hlt
cmp
jp
mov
test
xchg
das
jmp
(bad)
int3
scas
cmps
jecxz
mov
add
xor
xor
pop
mov
jns
cmp
adc
(bad)
sbb
lds
mov
or
cmps
xchg
sbb
or
shl
(bad)
pushf
inc
jne
iret
into
dec
mov
stc
out
ins
push
jae
sub
sub
js
or
(bad)
call
push
xor
rcl
cmp
fs
add
sbb
or
add
jmp
call
nop
xor
les
aad
mov
mov
ffree
gs
js
lods
cmove
es
fcomp
call
fs
push
ror
xor
and
scas
dec
bound
xor
push
dec
jbe
mov
jnp
pop
cmp
fcomp
dec
jnp
dec
in
cmp
mov
dec
shr
or
cdq
xor
clc
cmp
mov
dec
stos
fs
sbb
xchg
xchg
jns
and
js
daa
pop
mov
xchg
ret
popa
sub
ja
ss
mov
movs
jne
dec
add
jne
leave
and
inc
icebp
pop
test
pop
cdq
pop
mov
cmp
(bad)
cmp
xchg
jbe
cmps
fld
or
adc
inc
or
in
adc
shr
ins
add
stc
mov
ins
cwde
mov
ret
adc
retf
xchg
ss
into
mov
fdivrp
sub
add
cmp
and
xor
loope
test
aaa
repz
or
mov
scas
stos
mov
xchg
stc
jns
sahf
movs
fist
xor
aad
jg
aas
retf
cld
xchg
jmp
out
cli
push
mov
push
nop
shr
mov
jae
mov
mov
adc
adc
call
fdiv
pop
xor
xor
adc
cmp
out
sti
retf
inc
jmp
cmp
xor
cs
adc
fcom
pop
xor
popf
inc
pop
shr
out
icebp
mov
aam
ja
addr16
push
pop
pushf
jmp
push
dec
mov
xor
mov
pop
sti
fistp
and
adc
and
pop
and
mov
mov
fst
adc
cwde
fbld
dec
mov
add
inc
xor
test
pop
scas
iret
loopne
or
out
lock
int3
jnp
dec
shl
outs
imul
mov
mov
push
adc
cdq
ss
inc
fld
adc
ins
daa
push
fs
mov
mov
test
push
scas
std
call
test
(bad)
repz
push
cli
jbe
loop
inc
ror
mov
mov
call
lods
mov
inc
push
cmp
(bad)
adc
add
mov
test
sub
xor
jmp
inc
clc
xor
mov
js
(bad)
mov
jns
xor
les
and
mov
cwde
xor
daa
or
xor
and
out
xchg
fcom
inc
(bad)
pop
repnz
jb
cmp
call
fiadd
out
stc
add
and
sahf
mov
add
mov
aaa
cmp
mov
outs
pop
cmp
sub
mov
out
call
xchg
shl
lds
xor
and
pop
jmp
jne
mov
jge
outs
pushf
ret
jl
jbe
push
(bad)
jne
or
inc
cmps
xchg
sbb
iret
pop
loop
add
js
fdiv
test
lds
mov
cwde
fld
retf
cmp
dec
imul
dec
sub
push
jp
mov
cwde
retf
scas
cmps
pop
std
sahf
jb
dec
xchg
push
jl
add
xchg
loope
fcomp
cwde
das
xor
pop
pushf
(bad)
lea
sbb
cli
and
enter
dec
adc
stos
mov
sbb
stos
mov
ret
inc
outs
push
sar
loope
pop
mov
test
push
adc
fsub
int
outs
adc
jp
adc
dec
out
xchg
cmp
sub
jmp
xor
mov
adc
pop
in
and
sub
fld
loope
ja
inc
loope
outs
pop
push
jb
add
or
inc
dec
adc
xchg
sar
push
mov
or
int
ror
test
fisttp
xor
in
dec
xor
pusha
push
push
arpl
out
pop
or
xchg
adc
ror
xchg
and
mov
or
shr
and
mov
mov
and
push
xchg
mov
dec
in
add
fisttp
xchg
xor
bound
mov
sub
jnp
jecxz
jle
xor
or
push
dec
icebp
(bad)
ds
push
cmp
cmp
sbb
xchg
enter
aad
lods
out
(bad)
pop
lahf
sub
pusha
pshufw
mov
or
jno
call
fsub
ds
cmp
aam
aad
xchg
js
ja
mov
fcmovnbe
pop
mov
sbb
jge
xor
and
pop
push
ja
add
inc
test
push
arpl
fstp
sub
mov
fadd
in
ror
dec
(bad)
xor
popa
das
test
mov
inc
popa
adc
jmp
xchg
dec
scas
ins
push
push
ja
jne
push
sub
lahf
xor
pushf
mov
test
mov
jl
or
leave
lods
add
(bad)
sbb
les
jmp
out
mov
js
imul
leave
(bad)
mov
movs
xor
sbb
pop
mov
or
sahf
push
ins
mov
push
call
cmp
xchg
bound
(bad)
fcomp
xchg
and
dec
js
nop
add
outs
test
mov
and
retf
add
or
icebp
push
jne
adc
sub
inc
cs
pop
addr16
cdq
or
call
push
mov
pop
mov
inc
lea
or
lea
fdivrp
inc
nop
sub
lods
call
push
test
push
movs
movs
xor
das
xchg
cwde
inc
mov
or
pop
jns
fimul
push
dec
dec
push
aas
sub
adc
test
jb
inc
push
(bad)
fld
xlat
jno
fmul
movs
cmp
and
and
dec
xchg
leave
daa
pop
ds
test
xor
fwait
cmp
mov
inc
outs
add
sbb
add
test
jge
and
and
push
arpl
add
sbb
fsub
fistp
repnz
inc
push
lea
test
adc
sub
add
aad
or
pop
popw
nop
push
(bad)
jnp
jne
pushf
shr
xor
jecxz
sbb
pusha
fisub
fidiv
clc
daa
mov
mov
sbb
cmp
sbb
movs
(bad)
mov
jmp
(bad)
sbb
mov
aaa
xor
add
or
icebp
lds
addr16
push
dec
or
adc
mov
xor
repnz
mov
retf
pop
je
test
(bad)
mov
dec
sti
stos
fisub
xchg
mov
daa
adc
cdq
arpl
xlat
jmp
inc
jge
(bad)
mov
sub
sub
dec
mov
mov
outs
sbb
js
das
aad
lods
outs
repz
inc
fsubr
(bad)
call
stc
sbb
scas
lods
mov
js
ins
cdq
rcr
jmp
dec
sbb
jae
sub
cmp
push
pop
inc
mov
hlt
das
test
scas
fcomp
call
jmp
xlat
xchg
fild
dec
pop
mov
inc
mov
out
xchg
into
std
jno
data16
jge
shl
pusha
bound
dec
popa
ds
dec
sbb
sub
xchg
rcr
and
into
mov
push
cld
mov
aam
addr16
jg
xchg
cmp
push
xchg
jns
imul
mov
inc
sbb
and
fnstsw
mov
xor
mov
jae
jmp
movs
mov
adc
mov
sub
loopne
push
in
dec
into
xor
inc
mov
sub
mov
daa
cmp
(bad)
dec
xchg
aas
jge
mov
xchg
cli
pop
xor
iret
fs
mov
jmp
jno
mov
aam
adc
in
or
fiadd
repz
xchg
in
out
jae
add
ins
(bad)
adc
cmp
mov
adc
mov
lock
inc
es
in
and
movs
mov
inc
add
adc
fdivr
fistp
mov
mov
and
stc
iret
call
jmp
in
js
push
sub
inc
ja
and
stos
inc
xchg
add
lods
rcl
sub
jne
ret
fsubr
mov
adc
adc
rcl
dec
cmps
loopne
sub
pop
push
(bad)
fstp
lds
push
mov
sbb
mov
rcr
or
push
xchg
or
push
add
scas
mov
scas
fcmovbe
xchg
xchg
add
pushf
cmp
inc
ficomp
mov
sub
out
jo
popf
mov
daa
jae
jecxz
fisttp
fsub
psrld
fsubr
dec
(bad)
movs
loopne
fisub
dec
sub
sbb
les
mov
cld
(bad)
adc
popf
dec
push
(bad)
mov
imul
sbb
pop
in
inc
mov
aam
push
mov
jmp
mov
or
push
xchg
cmp
and
int3
or
cmp
sahf
xcrypt-ecb
cmps
or
sbb
or
fwait
cmp
mov
xchg
scas
cmp
aas
pop
jecxz
jno
inc
cmp
shl
jbe
hlt
sar
cli
push
in
scas
jl
mov
fst
push
jl
jl
jns
hlt
xor
imul
mov
daa
fnstenv
imul
outs
mov
scas
fwait
hlt
test
jecxz
loop
mov
movs
sub
mov
push
shl
xchg
cld
into
cmps
pop
pop
jmp
les
add
pop
mov
in
cmc
and
popf
push
push
pop
cmc
test
cmps
jge
and
jns
iret
ja
test
loope
jecxz
shr
mov
inc
loope
jmp
in
rcr
pop
movs
(bad)
sbb
push
xor
stos
inc
sbb
adc
nop
sub
out
and
mov
xchg
mul
(bad)
out
aas
sbb
mov
push
mov
mov
mov
fstp
pushf
pop
call
mov
frstor
or
pop
push
push
in
ds
fist
add
fist
out
fistp
aaa
pop
imul
xchg
nop
pop
aam
mov
ja
ror
mov
inc
and
adc
into
test
push
mov
push
pop
repz
push
cli
mov
xorps
sbb
lock
stos
and
add
inc
sub
jmp
and
out
xchg
inc
sbb
push
outs
cmp
rcl
inc
add
xor
xchg
push
mov
lds
(bad)
xor
je
dec
out
or
lock
sbb
mov
mov
push
sti
dec
scas
push
enter
push
add
(bad)
xor
xchg
test
pop
xor
repnz
sub
sti
pop
out
stos
xchg
fsub
jp
shl
mov
cmps
fcom
fistp
ficom
js
lds
rol
addr16
mov
repnz
sub
mov
div
sbb
jo
icebp
loopne
mov
jae
dec
aad
xor
or
inc
mov
or
push
das
test
and
popa
dec
(bad)
sbb
dec
sbb
loop
sbb
mov
mov
xor
ins
pop
jl
push
and
ss
and
pop
or
mov
in
leave
sbb
int3
aad
stos
and
subps
push
jne
cld
mov
or
fucom
outs
cmp
xchg
adc
fwait
mov
pop
mov
cmp
imul
cmp
lea
push
fild
sbb
xor
pushf
or
mov
lea
adc
in
adc
jle
fsub
test
outs
mov
fisttp
cmc
jle
call
sub
pop
adc
call
xor
sbb
cmp
ret
and
test
sub
leave
and
test
and
in
repnz
retf
shl
xor
or
sub
adc
sbb
lahf
dec
sbb
dec
jmp
retf
mov
leave
les
dec
cli
in
mov
xor
jl
(bad)
lea
jo
bound
daa
das
xchg
aad
movs
sbb
mov
sbb
aas
rcl
and
sbb
add
outs
xor
pop
shl
dec
clc
add
(bad)
outs
or
jo
out
int3
sbb
jb
cmp
les
js
sbb
add
mov
sbb
or
fmul
leave
retf
mov
mov
repnz
fcmovnb
loopne
ins
xchg
jl
push
out
ss
lahf
movs
ret
xor
sub
sub
or
cwde
sub
outs
lods
call
sbb
imul
mov
push
sub
stc
jp
xchg
pop
ja
ins
and
ss
mov
fdivp
cmps
mov
xchg
jmp
or
jl
scas
xor
div
shl
push
inc
mov
(bad)
xchg
inc
in
xor
or
mov
mov
enter
idiv
sub
mov
cld
out
push
int
sub
xchg
sbb
ss
outs
adc
lods
mov
sbb
retf
and
sbb
arpl
inc
sbb
push
and
add
pop
mov
adc
jne
loop
dec
in
jno
jb
call
add
imul
dec
fwait
mov
das
fisubr
ds
fsub
or
in
xor
enter
loopne
cli
pusha
fimul
adc
jne
push
mov
inc
jne
aaa
jge
sbb
ins
sbb
out
imul
and
pop
fs
test
add
pop
sbb
adc
out
dec
xlat
ror
shl
sti
add
inc
(bad)
daa
dec
mov
jno
add
mov
pop
call
push
aad
clc
fistp
lahf
into
add
aad
jl
inc
inc
mov
sbb
mov
xchg
ret
xor
bndldx
pusha
sub
(bad)
ja
gs
lods
pushf
push
pop
sub
(bad)
or
jle
sub
mov
cmp
outs
mov
push
(bad)
sbb
cmp
push
dec
or
cdq
repz
ror
cdq
neg
push
call
pushf
fnstsw
mov
pop
pop
ins
xor
jmp
xor
cmp
jge
mov
int
cmp
and
mov
arpl
sahf
add
iret
test
pushf
fwait
cmp
or
pop
mov
push
mov
ret
or
mov
das
imul
bound
xor
mov
idiv
rol
loopne
or
cld
outs
aas
cmc
sti
js
cmp
out
fwait
push
sbb
rcr
das
lods
movs
push
mov
mov
(bad)
add
push
xchg
push
sub
mov
xor
ja
sub
mov
nop
inc
lea
mov
add
fcomp
loope
push
push
mov
(bad)
pop
jb
xchg
mov
inc
dec
icebp
adc
sub
xchg
mov
and
aaa
mov
(bad)
aaa
dec
push
stos
pop
fs
fldcw
(bad)
dec
loopne
dec
adc
and
popa
jbe
hlt
jmp
mov
or
mov
mov
mov
or
mov
out
enter
dec
ret
stos
and
enter
scas
push
jg
mov
shr
cmp
cli
mov
pop
sub
inc
out
xor
push
repz
outs
jno
sub
mov
hlt
out
inc
push
ret
sub
pop
loopne
xor
iret
hlt
xchg
jnp
out
aam
mov
rol
push
repz
pusha
in
adc
lods
test
dec
mov
mov
jno
xchg
idiv
or
push
cmps
into
xchg
mov
movs
sbb
(bad)
or
sub
or
cmp
repnz
cmp
pop
push
shl
jae
cli
cmps
and
inc
ja
clc
std
aaa
dec
in
xor
mov
jmp
cs
enter
loopne
xchg
xor
fadd
dec
jg
cmp
loop
stc
mov
or
sbb
sub
pusha
dec
rol
rol
dec
mov
or
add
fimul
sbb
inc
(bad)
neg
xor
in
xchg
out
sbb
sbb
clc
inc
sbb
fs
fdivr
sbb
dec
dec
adc
sub
pop
cmps
repz
test
jne
in
leave
stos
xor
push
aam
pop
fist
addr16
pop
mov
scas
cmps
ret
xchg
retf
push
add
clc
mov
aas
xor
fmul
fisttp
test
fist
sub
adc
cmp
dec
aaa
ret
popf
cs
inc
jmp
ror
shr
shl
or
pusha
ss
ja
aas
xchg
ret
(bad)
jge
cmp
jb
pop
adc
adc
test
mov
xchg
loop
mov
std
xor
mov
mov
mov
mov
xchg
xchg
xor
call
cmps
dec
fistp
stos
pop
(bad)
fisttp
repz
aad
lea
and
dec
jns
ins
mov
test
in
sbb
inc
mov
int
ss
mov
pop
pop
(bad)
mov
dec
pop
test
imul
fsubr
fldcw
adc
mov
jbe
push
scas
sbb
inc
test
jne
imul
and
or
xlat
(bad)
cmp
das
fisubr
cmp
dec
jmp
fld
nop
imul
inc
(bad)
adc
fsub
movs
or
sub
data16
push
arpl
sbb
xor
repz
push
or
mov
xor
mov
lods
aad
or
movlps
outs
dec
lods
in
push
fistp
mov
rcl
clc
data16
je
ins
shr
ss
fcomp
test
mov
dec
inc
inc
dec
pop
rcl
fld
jbe
pop
inc
mov
in
add
aad
sub
push
pop
jns
jbe
je
call
mov
or
sub
je
fwait
xchg
mov
loopne
cmp
jg
imul
inc
cmps
and
ds
aam
xchg
sbb
imul
xor
sbb
pop
out
jb
cs
sbb
mov
ja
je
stos
pusha
div
out
xchg
mov
or
cmp
sub
xchg
movs
ret
cmp
pop
mov
stc
adc
dec
ins
jbe
addr16
test
add
xchg
and
fnstcw
mov
dec
adc
xor
adc
mov
int3
xor
sub
or
dec
aam
mov
adc
ss
gs
aad
out
loopne
fsub
inc
sub
jecxz
repnz
jge
sbb
mov
in
cwde
inc
mov
ja
fst
rcr
mov
inc
xor
xchg
icebp
fs
loopne
jge
xchg
dec
call
adc
mov
inc
push
or
mov
push
cmp
sbb
sub
pusha
pop
dec
popf
in
and
jns
leave
sub
and
cmp
mov
cmps
cs
imul
rol
ss
mov
inc
cmp
adc
cld
mov
adc
sbb
hlt
div
push
mov
test
mov
sub
push
lea
xor
pop
push
imul
dec
xchg
lahf
xchg
dec
enter
and
sbb
xchg
shl
and
fisttp
addr16
adc
jne
mov
ret
lds
(bad)
stc
adc
cmc
xchg
mov
push
xor
dec
aaa
inc
ss
pusha
movs
xor
xchg
lahf
sbb
adc
sahf
iret
inc
add
(bad)
cmp
repnz
jmp
mov
into
popf
inc
mov
call
jecxz
mov
js
cmp
nop
(bad)
popf
and
pop
sbb
icebp
push
pushf
push
dec
cld
jg
xor
mov
pusha
adc
ret
xor
repz
fist
jle
imul
inc
inc
cmc
sbb
icebp
pop
hlt
xchg
addr16
push
aam
fwait
mov
stc
push
pop
push
and
add
push
adc
xchg
pusha
xchg
and
imul
cdq
inc
in
enter
jecxz
gs
cmps
xchg
dec
jno
mov
div
in
add
add
jmp
mov
xchg
imul
cld
les
sahf
adc
pop
in
(bad)
jb
adc
call
or
push
imul
repz
mov
sub
ds
mov
movs
clc
sbb
mov
mov
mov
mov
jecxz
(bad)
push
dec
mov
cwde
add
mov
ret
pop
test
mov
or
mov
dec
jns
jnp
xchg
inc
popf
fmul
test
pop
mov
cmps
sub
int3
push
xlat
std
pop
aam
push
jmp
shl
inc
outs
jl
mov
xchg
xchg
xor
sub
adc
ret
fdiv
retf
mov
jbe
and
jne
jbe
ror
movs
xchg
xor
pop
fwait
je
shl
jne
repz
mov
cmp
add
xchg
cmps
jmp
enter
jge
popa
cmp
rcl
push
movs
mov
aad
add
sbb
jbe
mov
xchg
or
adc
sbb
jmp
mov
seto
retf
adc
scas
cmc
sub
outs
and
jmp
rcl
sub
fstp
push
pop
pop
inc
dec
mov
loop
out
or
dec
adc
sbb
xchg
push
adc
or
out
inc
leave
sbb
fild
push
xor
push
std
sub
loopne
dec
or
mov
call
fsub
loopne
xchg
xor
fild
mov
cmp
fcmovbe
leave
lahf
scas
xchg
jmp
jb
repz
fisttp
ret
dec
dec
pushf
push
call
fsubrp
push
nop
out
aam
lea
nop
clc
xlat
jae
push
add
pushf
ins
lahf
mov
xor
pop
test
sub
push
jp
fwait
pop
or
or
pop
icebp
jmp
dec
xor
push
ins
dec
loopne
fs
mov
call
sub
push
lea
mov
loop
push
push
dec
jmp
loop
fwait
movs
mov
dec
jg
popf
test
mov
and
mov
stos
addr16
jmp
loop
mov
inc
add
inc
das
ja
jo
jne
push
push
xor
lock
add
jmp
pop
shl
leave
adc
rcr
je
clc
adc
(bad)
sub
lock
sub
inc
data16
sub
mov
int
test
add
mov
add
add
add
add
add
add
rol
add
add
add
add
push
add
les
add
add
(bad)
sub
stos
popa
add
dec
mov
daa
cmc
pushf
sub
sub
aad
mov
push
aam
outs
fdiv
cmp
es
sar
pop
lahf
icebp
js
imul
movs
and
or
push
mov
mov
je
out
sub
xor
mov
(bad)
pop
mov
sti
mov
push
psadbw
mov
shl
push
cwde
mov
outs
sub
xchg
loope
(bad)
jne
push
dec
xor
or
xchg
cmp
fadd
push
aad
outs
inc
jmp
scas
shl
cmps
popf
push
je
jmp
arpl
mov
mov
(bad)
pop
int
mov
into
lahf
(bad)
mov
scas
scas
sahf
rcl
or
cmp
push
(bad)
adc
cld
(bad)
das
movs
push
(bad)
(bad)
outs
movs
sbb
dec
test
adc
jp
dec
push
and
std
rol
ficom
jne
lock
enter
mov
add
aad
and
(bad)
mov
sub
loop
jb
cmps
and
aaa
in
and
dec
in
xlat
xchg
pop
dec
sbb
cli
hlt
cmp
xchg
or
or
mov
jle
inc
mov
mov
sbb
xchg
ins
test
pop
or
out
adc
pop
ins
retf
in
gs
retf
mov
gs
movs
and
sbb
push
mov
scas
xchg
adc
fmul
or
dec
cmp
fistp
mov
dec
sbb
adc
aaa
movs
in
and
mov
mov
sub
fild
in
dec
ror
mov
pusha
ins
mov
addr16
sub
xchg
test
push
jecxz
call
retf
retf
jno
mul
loop
add
mov
les
into
xor
sbb
cld
dec
fwait
push
mov
fwait
loope
(bad)
leave
dec
fadd
in
(bad)
add
jno
xchg
cmps
retf
lahf
dec
mov
mov
add
ret
xchg
cmp
data16
ret
or
cmp
test
icebp
jge
cs
(bad)
inc
in
push
sbb
cmps
sbb
in
rol
sub
xlat
and
call
mov
add
xchg
cmp
or
shl
jge
push
pushf
ffree
ficom
mov
pusha
sbb
(bad)
jg
push
mov
jns
mov
lock
xchg
jb
push
ror
mov
pop
fs
mov
pop
pushf
call
and
outs
sub
mov
mov
sbb
push
xor
test
push
xor
scas
adc
sub
mov
cs
nop
dec
fidivr
popa
push
sbb
cmps
pop
xor
pop
mov
call
pusha
xor
sub
ss
outs
jne
imul
xchg
jno
and
retf
or
dec
repnz
fidivr
jecxz
pop
mov
push
sub
call
iret
xchg
and
lahf
cmp
inc
clc
add
mov
jge
jle
cld
lods
push
push
or
stos
hlt
test
cwde
sub
data16
xchg
rcr
push
xchg
xchg
push
je
mov
fnsave
ror
jl
add
mov
cmp
xchg
jle
push
mov
pop
lea
icebp
push
scas
jmp
jnp
cmps
pop
add
movs
mov
add
push
xchg
outs
inc
jmp
jmp
pop
dec
xchg
push
movs
cmc
and
jg
push
sbb
cli
dec
fimul
jecxz
mov
pushf
mov
jg
shl
xchg
sti
push
mov
xor
inc
daa
or
pop
mov
or
mov
sti
dec
xchg
rcl
fsub
jmp
fs
sbb
in
dec
xlat
mov
sbb
leave
in
imul
rcl
or
cmc
add
mov
mov
call
xchg
popf
jmp
fld
xchg
xchg
push
cli
out
add
mov
cmp
(bad)
sub
arpl
sbb
adc
iret
adc
jb
mov
sub
mov
shl
mov
gs
popf
jge
stos
test
mov
(bad)
mov
add
sub
xor
fistp
clc
and
add
shl
(bad)
fild
(bad)
stos
xor
out
and
push
add
xor
push
mov
aaa
icebp
mov
mov
mov
jp
push
int3
fs
(bad)
fld
rcr
add
ds
pop
loopne
nop
sub
mov
xchg
fst
repz
hlt
aam
mov
xor
loopne
ret
push
dec
int
loop
lds
in
ins
cmp
fisttp
sbb
mov
pusha
mov
test
sub
xor
nop
cmp
stos
xchg
cmps
jbe
sub
or
jl
xchg
xchg
push
mov
pop
sbb
aad
pop
int3
ret
clc
or
jmp
aas
inc
(bad)
loopne
inc
fwait
xor
mov
ficomp
stos
jo
and
jge
or
mov
adc
loopne
xor
and
jl
jmp
int
cmps
lods
sub
xor
fwait
dec
jg
jbe
push
je
mov
jl
mov
mov
and
(bad)
in
pop
hlt
mov
pushf
inc
iret
jo
sub
ins
push
mov
pop
xchg
clc
add
adc
mov
adc
jmp
mov
xor
ret
scas
xchg
xchg
cmp
mov
sub
or
jg
fisub
push
lock
mov
add
std
aas
test
or
movs
pusha
pop
cmp
mov
and
stos
lock
cmp
(bad)
stc
adc
pop
dec
mov
push
inc
jl
fdivr
jp
inc
test
and
stos
hlt
xor
xchg
nop
pop
fisubr
out
adc
loopne
xor
lea
add
pop
mov
mov
outs
je
sbb
stos
out
mov
outs
call
mov
test
xlat
pop
or
fs
mov
mov
fs
std
rcr
jl
and
es
or
call
jg
add
fbld
or
pop
arpl
jle
add
je
xor
popa
sahf
and
xchg
ins
adc
or
cmps
xchg
jmp
jo
fisttp
mov
sbb
xor
iret
mov
mov
sub
cdq
pop
cmp
xchg
ret
inc
push
xchg
xlat
jae
shr
adc
mov
loop
out
fs
imul
push
mov
or
sub
and
inc
lahf
mov
addr16
push
out
bound
div
in
and
jge
push
out
call
sub
outs
rcl
mov
das
imul
fild
pop
inc
out
aam
adc
push
cmps
in
outs
pop
xor
add
xor
cmc
outs
cmp
ret
jo
xor
jb
sbb
scas
ror
xchg
stos
mov
jl
sbb
xchg
mov
xchg
pop
imul
jmp
jbe
hlt
sbb
push
mov
shl
mov
pop
push
dec
jg
out
push
cmp
and
jge
rol
(bad)
test
add
sbb
(bad)
mov
ret
mov
jmp
push
jb
pop
movs
inc
mov
mov
enter
sbb
ret
cmp
adc
mov
loope
nop
das
inc
and
xchg
stc
mov
cmps
mov
push
mov
mov
push
ror
sar
pushf
and
jl
cs
xchg
bound
sub
fistp
fst
into
outs
fwait
dec
cli
pop
pop
jecxz
xor
test
or
out
add
xchg
or
nop
in
mov
inc
mov
or
xchg
rcr
pop
call
mov
dec
xor
xchg
fistp
les
shl
outs
cmp
or
cmp
jg
popf
cdq
jmp
jg
sbb
cld
or
movs
xchg
inc
dec
test
push
inc
mov
icebp
xor
mov
ja
das
pop
js
add
dec
xchg
and
fdivrp
clc
dec
(bad)
daa
idiv
(bad)
push
or
jp
or
std
mov
lock
mov
movs
cdq
rcl
cmps
jl
fwait
lods
inc
dec
adc
mov
cmp
jmp
call
repnz
ins
neg
adc
repz
into
mov
neg
in
jl
ja
jae
add
pop
es
or
jo
dec
cmp
js
xor
mov
dec
add
push
inc
sbb
lods
lods
xchg
(bad)
xchg
dec
outs
(bad)
cmps
ja
jmp
xlat
lock
test
cli
add
test
dec
mov
or
cwde
or
(bad)
aam
in
push
ret
popf
cli
and
add
out
jge
std
sub
cs
loop
cdq
in
in
sbb
xchg
inc
aaa
jge
adc
fs
add
dec
pop
sub
movs
cmp
dec
xchg
(bad)
aas
bound
cmp
inc
and
pop
jno
arpl
scas
push
pop
and
repnz
je
test
xchg
scas
jb
shl
sub
or
(bad)
or
into
and
xchg
and
jl
std
test
xchg
rol
or
scas
pop
push
shl
and
jmp
ja
(bad)
or
stc
movs
jnp
scas
inc
cmps
cmps
pop
lods
out
fwait
retf
pop
adc
and
lea
rcl
dec
inc
mov
mov
push
or
mov
jmp
out
dec
xor
or
jg
pop
sbb
jae
bound
xchg
mov
adc
jae
ror
mov
push
mov
sub
mov
es
les
das
mov
mov
(bad)
std
add
cmp
sub
outs
mov
push
dec
fwait
(bad)
in
fs
xchg
call
and
add
(bad)
in
or
mov
(bad)
shl
ret
ins
lea
adc
test
xchg
sub
xlat
mov
out
jle
mov
shl
add
mov
rol
shl
jp
out
cdq
daa
cmp
jg
mov
mov
icebp
push
sub
jge
idiv
cmp
arpl
or
in
xchg
movs
arpl
test
cmps
pop
and
cwde
jle
mov
xlat
dec
sahf
es
loop
adc
push
ja
mov
test
jne
clc
test
mov
xchg
inc
pushf
dec
sub
mov
nop
dec
and
cmp
push
(bad)
fld
fstp
mov
and
sub
pop
imul
inc
ds
inc
push
add
int
clc
pop
leave
adc
(bad)
cmps
xchg
push
jmp
dec
push
mov
nop
push
xor
cdq
in
and
add
je
add
adc
push
or
cld
movs
xchg
add
popa
test
mov
enter
mov
pop
mov
and
fnstsw
ror
jecxz
(bad)
aam
fcom
cmc
out
jae
loope
nop
dec
movs
mov
xchg
sbb
jns
aad
inc
cdq
xor
popa
nop
fcmovne
and
(bad)
sub
fs
test
and
push
ffreep
(bad)
xlat
inc
sbb
fisttp
ins
dec
xor
cmp
cmp
enter
cmp
jmp
rcr
out
mov
fs
out
daa
movs
sbb
add
sbb
pop
mov
enter
and
sbb
sub
inc
loopne
or
cmp
or
test
ret
idiv
pop
nop
stc
fst
sbb
inc
hlt
mov
mov
mov
call
scas
cmc
lock
sub
and
inc
test
fsub
cmc
pushf
push
dec
popf
mov
arpl
or
mov
add
test
adc
pushf
lea
adc
sbb
adc
lea
mov
in
jb
and
cdq
or
lods
and
push
int
cmp
ds
adc
jo
sbb
sahf
icebp
and
xor
mov
xor
push
inc
xor
lahf
mov
call
inc
sbb
mov
cwde
retf
call
dec
jg
ds
sti
sub
in
fisttp
(bad)
sbb
cld
ret
inc
test
out
jae
jae
adc
mov
cld
(bad)
test
dec
mov
mov
sub
std
mov
or
cmp
mov
mov
jmp
dec
mov
fs
idiv
mov
ja
test
cmp
sbb
dec
(bad)
jmp
sub
sub
je
push
pop
cs
aaa
mov
jno
inc
cwde
inc
test
mov
jg
cwde
push
push
mov
int
shl
push
ret
mov
retf
cli
mov
jp
xor
dec
xor
dec
jp
(bad)
sbb
scas
push
add
sbb
mov
hlt
movs
mov
enter
div
lods
mov
jecxz
in
xor
jmp
stos
addr16
pop
pop
xchg
retf
test
mov
movs
jmp
and
lods
mov
or
stc
jl
bound
mov
ror
xor
push
inc
mov
cmp
outs
into
fimul
or
mov
xlat
push
inc
popf
mov
xchg
and
and
xor
call
fst
and
sbb
jae
int3
push
cli
cmp
test
in
outs
outs
xor
sti
fimul
(bad)
retf
push
in
lock
ret
lods
xchg
imul
jne
jnp
add
imul
ror
lahf
jge
rcl
sub
push
into
mov
inc
retf
test
stos
inc
aad
pop
mov
mov
xchg
cwde
push
ja
adc
addr16
pshufw
addr16
enter
add
(bad)
mov
pop
sbb
test
xor
daa
mov
push
jp
mov
or
xchg
mov
mov
fbstp
mov
repnz
mov
popf
pop
movs
lock
bound
mov
inc
mov
add
add
push
cs
iret
add
jl
dec
sub
cmp
and
or
cli
fcmovne
imul
and
add
(bad)
fwait
test
sub
das
rcl
pop
js
or
mov
and
mov
inc
mov
or
and
loopne
frstor
popa
fcomp
mov
mov
jp
sbb
ficom
pop
cmps
dec
push
push
sub
jecxz
std
jbe
cwde
cld
sbb
inc
push
ins
int
test
adc
sub
pop
xor
mov
in
jle
lods
(bad)
std
jae
add
test
sub
mov
je
jnp
stc
xchg
pop
adc
xor
daa
cmc
aaa
mov
add
daa
inc
mov
pop
dec
pop
add
inc
enter
scas
(bad)
or
lea
xchg
movs
jne
inc
mov
imul
enter
in
adc
add
mov
pop
mov
into
mov
ficomp
add
push
push
adc
popa
imul
xchg
pop
(bad)
stos
mov
(bad)
push
into
std
popa
jns
pop
fldenv
xlat
mov
das
jmp
bound
shl
cmp
aas
or
neg
fbld
jl
pop
push
rcl
cli
(bad)
addr16
push
fs
imul
mov
test
stos
or
sahf
pop
mov
lds
inc
mov
lods
sub
sub
dec
add
mov
jge
and
push
xor
mov
leave
sbb
jnp
sub
mov
adc
and
jecxz
jbe
mov
lahf
ja
test
adc
(bad)
ins
(bad)
fmul
mov
mov
shl
pop
mov
ret
mov
cs
mov
call
lods
xor
pop
test
into
jle
or
and
adc
jnp
outs
aam
stc
jo
jo
out
stos
sbb
test
xchg
pop
(bad)
mov
adc
push
das
pop
fimul
in
rol
loopne
in
outs
cmps
adc
sahf
pop
leave
pop
(bad)
ins
cs
daa
(bad)
add
xor
test
(bad)
movs
sbb
dec
jg
and
cmp
jmp
pop
mov
jae
ret
xchg
lods
addr16
sub
sub
or
and
stos
mov
cmps
out
repz
iret
ret
mov
sub
or
jecxz
cmp
add
loopne
in
(bad)
xchg
pop
stc
mov
sbb
fwait
push
sar
xor
inc
fisub
xchg
xchg
not
dec
movs
dec
in
cmp
mov
loope
inc
icebp
mov
adc
loope
imul
push
jg
fist
add
push
aam
push
push
xor
inc
dec
xlat
std
ficom
add
sub
call
fcomip
sti
mov
call
adc
add
sub
in
inc
cdq
hlt
push
pop
lods
or
mov
and
jp
pusha
xor
idiv
out
fidivr
dec
imul
or
imul
jnp
pop
inc
pusha
mov
call
inc
bound
and
int3
pop
add
adc
jno
imul
add
sbb
jmp
mov
repnz
jmp
mov
loopne
ror
sbb
repnz
mov
stos
retf
jecxz
sub
inc
mov
mov
sahf
out
int3
mov
mov
push
fnstenv
pop
scas
mov
or
lds
cmp
mov
test
mov
mov
ret
mov
inc
retf
mov
mov
imul
add
mov
inc
or
psllq
test
xchg
sub
dec
pop
sbb
inc
popf
ins
in
sbb
ins
das
mov
push
inc
mov
retf
pop
fstp
adc
jl
icebp
cmp
adc
inc
idiv
rol
imul
and
cmp
push
inc
jmp
shr
or
add
ret
mov
pop
ret
mov
mov
dec
pusha
jb
cs
adc
and
loope
(bad)
out
mov
fisub
fucomip
je
jae
outs
jno
pop
mov
sub
sub
mov
movs
jle
mov
lahf
dec
retf
xchg
push
jle
and
sub
jp
mov
mov
lods
pop
jmp
mov
jmp
add
les
fcom
mov
mov
daa
out
push
add
or
sub
xchg
push
not
in
mov
push
cmp
mov
aam
push
lea
jns
xchg
inc
in
xchg
out
ins
les
mov
shl
push
mov
int3
rcr
jl
xor
mov
cmps
cmp
mov
ins
aad
mov
cmp
xchg
dec
mov
mov
and
mov
mov
stc
fcmove
sub
hlt
fs
cld
rcl
cmp
(bad)
fcmovnbe
mov
js
xchg
adc
dec
xchg
lds
mov
jle
pop
test
lods
inc
xchg
leave
dec
sbb
ja
adc
mov
pop
pmulhw
add
xchg
into
or
xchg
cwde
pop
int
push
jbe
pop
fdiv
scas
in
inc
in
or
sbb
pop
popa
mov
loop
mov
(bad)
push
pop
scas
dec
data16
xchg
bound
mov
repnz
iret
pushf
in
or
rol
cmp
stos
lds
mov
lahf
cs
mov
mov
mov
bnd
cwde
fadd
aas
lods
dec
xor
call
in
adc
icebp
xchg
sbb
outs
pop
std
ror
xchg
inc
in
jecxz
outs
iret
mov
push
push
pop
stos
lds
adc
adc
ins
leave
or
inc
or
xchg
or
ret
dec
lock
idiv
bound
daa
jecxz
scas
ds
imul
and
dec
cmp
cmp
dec
(bad)
mov
enter
or
cmp
or
movs
stos
xchg
push
cmps
inc
loopne
mov
hlt
test
in
ja
or
jo
xchg
adc
xor
test
arpl
test
retf
iret
cmc
jle
nop
enter
std
xchg
ret
sub
jp
fucomip
pop
adc
add
pop
or
mov
std
dec
xor
imul
shl
fld
ins
pop
es
or
jl
sbb
mov
jecxz
mov
mov
ret
test
push
(bad)
dec
mov
ja
mov
sar
mov
add
icebp
push
leave
mov
lahf
leave
add
icebp
mov
test
fbld
cld
retf
nop
add
sub
aaa
loopne
sub
cmc
sub
cld
push
scas
dec
jl
xchg
inc
jecxz
jb
sub
mov
sub
aad
mov
jb
add
pushf
test
pop
jg
(bad)
int3
clc
imul
cmp
icebp
and
jge
sbb
jb
xlat
fldenv
scas
xchg
jns
mov
daa
mov
pop
sub
sbb
jae
popa
movs
jge
xor
test
dec
cmps
test
cmp
pop
mov
add
sub
fisubr
in
xchg
lahf
adc
cmc
jbe
and
or
ret
jl
outs
jno
(bad)
das
jnp
dec
xor
sbb
stc
adc
xchg
mov
mov
loop
cld
inc
dec
cli
sti
jbe
jno
iret
pop
daa
movs
lds
ss
sbb
imul
xchg
(bad)
cli
js
jae
sti
jo
push
inc
inc
dec
shl
and
inc
cmc
push
bound
jns
sub
fmul
outs
sub
or
movs
mov
and
pop
fisub
shl
and
mov
sti
fbstp
repz
mov
xor
out
in
and
mov
sub
dec
test
ja
imul
retf
dec
in
hlt
sbb
mov
test
not
push
lods
push
and
scas
push
sub
(bad)
test
sub
xor
cs
cmps
push
sbb
add
cs
and
les
inc
or
test
(bad)
fisub
add
sub
icebp
mov
pop
push
data16
mov
dec
aaa
push
jmp
scas
sbb
out
mov
push
mov
xchg
pushf
pop
dec
and
push
push
iret
adc
fdivr
popf
cld
push
mov
fild
stos
jp
hlt
popf
mov
ins
lahf
lds
pop
jno
inc
add
or
mov
sbb
xchg
mov
mov
add
adc
xor
adc
loop
ret
sub
ja
xchg
test
call
pop
cdq
xchg
aaa
jg
repnz
not
push
pop
mov
das
add
jno
je
and
push
imul
or
xor
jl
or
sbb
arpl
popf
fiadd
push
sub
test
pop
mov
pop
stos
xlat
loopne
xchg
cdq
dec
sub
repnz
lods
inc
lods
and
mov
mov
test
pusha
fadd
rcl
cmps
and
ror
cmc
push
pop
xchg
daa
inc
je
add
inc
jecxz
cmp
mov
bound
push
aaa
mov
push
loop
mov
out
dec
inc
js
(bad)
or
ja
jmp
dec
jae
xchg
adc
cmp
(bad)
rcl
test
into
(bad)
mov
mov
mov
dec
jo
aam
jae
add
adc
(bad)
out
imul
pop
sbb
sbb
cmp
imul
adc
inc
lds
adc
sbb
mov
pop
inc
xor
mov
push
stos
sahf
fld
sahf
xchg
and
mov
jb
repz
mov
xor
push
jp
and
xchg
and
add
icebp
popa
jno
push
inc
nop
neg
mov
stc
jecxz
xor
mov
pop
cs
inc
call
(bad)
in
jnp
mov
repnz
xor
mov
rcr
mov
push
mov
fcmovnu
xor
and
loop
push
mov
sub
sbb
or
stos
out
or
dec
nop
repnz
mov
add
mov
mov
sar
repnz
test
call
mov
ror
and
shr
pop
adc
push
jmp
inc
repnz
inc
(bad)
repnz
xlat
jns
jmp
sar
cdq
jp
mov
cmp
or
repz
mov
add
xor
ins
sti
retf
mov
sub
js
sub
ss
std
sbb
inc
cmp
ss
imul
xchg
mov
push
pop
ss
jp
push
shl
imul
cmp
jmp
xchg
js
cmp
outs
ins
fistp
jg
fisttp
dec
jb
stos
push
push
fiadd
mov
push
cmps
or
or
push
or
imul
retf
ss
cmps
pop
enter
addr16
xor
fstp
ins
ss
es
fs
test
cld
imul
xor
popa
popa
loope
mov
xchg
iret
mov
jge
pop
addr16
aaa
xor
(bad)
imul
(bad)
out
dec
pop
dec
pslld
pop
js
aas
pop
inc
ret
adc
jae
mov
mov
retf
outs
or
mov
push
push
or
stos
cs
push
mov
jle
stos
dec
aas
push
das
(bad)
dec
rcl
mov
daa
jg
mov
out
jb
pushf
cwde
leave
dec
retf
cdq
daa
mov
sbb
sbb
aam
pusha
sbb
dec
xor
pusha
pop
fcomp
test
and
xor
popa
sub
jbe
add
imul
inc
adc
mov
mov
jmp
mov
sbb
in
call
or
mov
fisttp
mov
jns
pushf
push
sbb
lds
cmp
push
mov
push
or
ret
loope
retf
cmp
mov
add
dec
ror
push
ins
or
fisttp
push
inc
mul
inc
push
push
pop
sti
outs
push
cmps
sti
sub
xlat
and
push
mov
xor
mov
push
adc
shl
pop
mov
into
sub
bound
(bad)
xor
xchg
or
mov
shl
jne
xchg
push
dec
add
push
pop
gs
xchg
(bad)
mov
pslld
hlt
popa
shl
push
add
mov
pop
inc
adc
mov
pusha
test
xor
(bad)
aad
test
jae
cdq
or
cwde
mov
mov
daa
xlat
jmp
xor
hlt
(bad)
faddp
or
or
jl
add
in
pop
lods
in
nop
daa
shl
push
mov
push
cmp
repz
or
std
call
call
adc
dec
adc
mov
mov
ret
xchg
pop
mov
lea
int3
aad
lds
push
push
jp
mov
(bad)
ins
(bad)
xlat
jno
sbb
adc
pop
sub
dec
mov
rcr
addr16
jns
push
stos
inc
add
pusha
aaa
jp
push
mov
inc
mov
pop
jo
ins
adc
retf
xor
cmc
outs
jecxz
call
lahf
ret
mov
div
popf
dec
dec
cmp
mov
push
iret
adc
mov
imul
jnp
in
xchg
ss
int
shl
adc
rcr
es
sub
ds
and
stos
dec
cdq
cmps
jp
ret
stc
dec
push
or
cmps
and
pop
aam
dec
adc
movs
stos
mov
cs
popa
cmc
sub
pop
push
xchg
loop
sub
(bad)
jg
push
data16
mov
and
test
psadbw
sbb
or
push
mov
mov
sbb
shr
cld
data16
mov
mov
push
pop
(bad)
or
lahf
loopne
(bad)
jmp
push
cs
lea
out
pop
out
(bad)
cli
loop
sub
cmp
xor
jb
nop
and
jp
out
sub
add
js
stos
pop
jmp
adc
mov
push
(bad)
pop
push
jp
shr
fiadd
enter
mov
icebp
cmp
rcr
xor
jns
or
aam
push
iret
pop
sub
cs
mov
inc
and
pop
sub
xchg
mov
xor
cs
shl
cli
(bad)
sbb
push
enter
inc
jecxz
shl
sbb
add
pop
mov
aam
cmps
int
xor
add
adc
cmps
xor
adc
pop
and
mov
pop
stos
and
sub
jno
inc
adc
aad
fwait
mov
outs
jb
sar
(bad)
fucomip
sub
ja
test
aaa
sub
lock
sbb
addr16
cmp
sahf
sahf
in
cmp
rcr
mov
cmp
pop
inc
out
push
pop
ror
adc
ret
lds
mov
jae
arpl
(bad)
mov
pop
sub
xor
jle
(bad)
fist
shl
or
push
jmp
(bad)
mov
inc
lods
fcom
and
xchg
mov
fmul
or
or
dec
mov
jnp
mov
gs
cmps
mov
pusha
and
cmc
(bad)
std
jmp
xor
or
and
mov
jo
sbb
sub
(bad)
jmp
sbb
push
adc
mov
pop
inc
mov
xor
dec
call
sbb
loope
scas
mov
jne
cmp
add
push
cld
jns
or
leave
mov
inc
aad
mul
sahf
jno
push
jmp
pop
sub
mov
jb
shr
xchg
mov
push
loopne
out
dec
push
test
mov
fistp
imul
ja
(bad)
lds
ds
loopne
sub
lds
sar
jbe
sbb
sub
sbb
sbb
pusha
ins
and
jp
ins
sub
mov
xor
add
add
icebp
jne
pop
mov
pop
adc
push
addr16
xchg
mov
retf
cmp
jle
adc
lahf
enter
out
aam
push
adc
sbb
sbb
mov
(bad)
cmp
xlat
stos
jecxz
ss
cli
(bad)
scas
cmps
cmps
outs
ficom
icebp
cmp
fsub
cmc
rol
(bad)
lea
add
add
call
jmp
out
shr
cs
out
adc
mov
jmp
jmp
(bad)
ror
(bad)
and
outs
ficom
inc
cmp
jae
jb
jns
je
jnp
data16
pop
outs
loop
jmp
jae
inc
gs
and
in
push
push
pop
mov
outs
adc
and
xchg
and
or
mov
or
jl
adc
lock
cmp
mov
cmp
xor
and
sbb
mov
sbb
pop
imul
jbe
ret
test
test
or
je
repnz
cmp
cmp
cmp
or
pop
pop
push
pop
xor
push
imul
ins
das
bound
sbb
sbb
adc
xlat
loope
cld
idiv
cli
cld
jno
in
pop
retf
add
iret
shl
int3
mov
add
xor
sbb
(bad)
xor
push
ins
push
bound
js
mov
cdq
xchg
dec
call
mov
cwde
retf
xchg
mov
repnz
inc
jmp
fs
jno
jo
jnp
jbe
mov
movs
jle
jg
ins
dec
cmp
jge
push
mov
mov
movs
inc
js
add
xor
sbb
sbb
push
sub
sbb
sbb
sbb
sbb
lahf
and
aas
ds
aaa
imul
sub
and
aas
ds
aaa
mov
dec
xchg
dec
and
outs
push
jns
or
arpl
mov
ja
dec
push
jg
bound
push
outs
pop
outs
add
xchg
inc
xchg
pop
xchg
or
js
test
xchg
and
stos
sub
mov
xchg
fwait
push
call
cwde
jns
dec
in
loop
les
inc
cmp
dec
pop
inc
or
jge
jge
inc
rcl
lock
jg
mov
dec
out
jns
fs
mov
or
mul
das
pop
inc
jne
jne
jne
pop
sbb
sbb
cmp
out
pop
and
and
add
cmps
adc
inc
jb
jb
jb
pop
cmp
cmp
push
aam
push
add
sbb
and
adc
push
leave
or
call
(bad)
(bad)
call
out
xor
cmp
xor
hlt
mov
mov
mov
mov
scas
push
xchg
shl
mov
call
fucomip
fisttp
xchg
jp
pop
xor
or
adc
(bad)
loopne
cmp
xchg
enter
pop
shr
shr
xor
cmp
mov
loope
in
test
repnz
movs
sub
lods
test
pop
leave
mov
xlat
(bad)
stc
test
fistp
jnp
(bad)
rol
ss
lods
sub
jecxz
ret
shl
sub
ror
mov
test
ret
repz
cli
or
mov
sbb
test
les
pop
pop
retf
xor
xor
into
mov
shl
shl
and
gs
inc
pop
aam
pop
sti
adc
sbb
jnp
(bad)
les
je
jno
lahf
sbb
movs
cmp
push
push
push
ret
aaa
retf
mov
dec
sub
icebp
dec
pushf
pop
(bad)
or
mov
mov
mov
ins
mov
adc
pop
(bad)
(bad)
lds
fld
mov
and
enter
je
rcr
popf
sub
sbb
stc
cmp
jg
ins
(bad)
adc
mov
xor
mov
shl
je
inc
pushf
stos
sub
mov
xchg
stos
or
jne
pop
das
pop
out
cmp
push
fld
dec
out
dec
mov
test
jno
(bad)
popf
mov
in
inc
jne
test
mov
sub
mov
daa
aaa
lahf
cmps
xor
out
mov
sbb
pusha
stos
imul
out
mov
stos
or
ds
popa
rol
adc
fldenv
inc
cli
xor
xchg
div
jnp
inc
xor
pop
test
pop
and
cwde
test
sbb
add
sar
add
sbb
cld
loope
daa
pop
xlat
jle
(bad)
daa
std
adc
fcom
lods
outs
jp
jae
inc
mov
mov
mov
test
(bad)
(bad)
imul
add
and
fild
(bad)
xchg
(bad)
fs
jle
lock
stos
or
cwde
jnp
xlat
jle
jne
push
(bad)
in
add
cmc
sar
push
dec
inc
ja
or
mov
lds
stc
lahf
daa
nop
test
retf
xchg
stos
mov
icebp
dec
jmp
xchg
jle
sub
lods
sbb
js
lods
and
repnz
shr
loope
icebp
mov
(bad)
adc
or
adc
cmp
mov
fstp
(bad)
ret
mov
mov
sti
pop
cmps
in
shr
lahf
mov
push
xor
push
adc
in
ja
inc
loope
xchg
aaa
ja
jae
xchg
push
retf
out
vmread
pop
pop
(bad)
jne
add
sbb
scas
shl
or
sub
bound
inc
call
xor
adc
sbb
pop
shr
cdq
mov
ins
jo
loopne
sbb
and
mul
cdq
mov
and
or
push
ins
pop
add
add
sub
movs
jmp
outs
daa
scas
icebp
js
mov
pop
dec
adc
cmp
dec
out
bswap
lahf
jmp
jne
fs
add
cwde
sahf
mov
lock
fs
mov
sub
ja
cmp
leave
jmp
int
adc
ja
jg
pop
pusha
(bad)
fyl2xp1
test
inc
cmp
shl
retf
adc
popf
add
lods
xchg
pop
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
push
adc
add
jle
add
adc
add
or
add
push
je
imul
add
sbb
add
add
add
inc
push
dec
inc
add
add
sbb
add
add
and
outs
bound
add
add
add
push
xchg
mov
add
cli
add
add
add
add
add
dec
add
add
add
sub
add
pop
add
add
add
add
add
cmp
add
add
add
sbb
add
add
add
or
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
push
add
add
add
add
add
add
add
or
and
and
or
xor
and
push
add
add
or
pusha
add
push
add
add
add
add
add
add
or
add
and
push
add
add
or
dec
add
or
push
add
or
add
or
outs
add
or
jns
and
or
test
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
push
add
cmp
adc
lea
add
add
mov
and
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
es
sub
and
or
addr16
xchg
add
mov
add
push
and
or
pop
push
and
push
add
add
add
add
push
aam
push
add
add
add
pop
out
pop
push
add
or
add
add
push
push
add
add
add
or
push
add
or
push
add
or
pushf
add
add
dec
add
add
dec
add
add
add
add
dec
add
add
add
add
or
push
add
or
add
add
add
add
add
add
add
add
adc
icebp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
movs
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
add
add
add
repz
add
add
add
add
add
repz
add
add
add
add
add
adc
xor
add
adc
stos
add
add
add
add
add
adc
ja
repz
add
add
add
add
add
repz
add
cmp
add
adc
jle
repz
add
add
add
add
add
add
add
add
add
adc
mov
add
add
add
adc
scas
add
add
sbb
dec
add
push
repz
add
add
add
adc
mov
mov
add
adc
add
leave
add
add
add
add
add
add
add
add
daa
add
mov
add
push
add
add
nop
add
add
xchg
add
add
xchg
add
add
xchg
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
and
add
add
add
nop
add
add
add
add
ja
push
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
push
add
add
and
add
add
add
add
add
add
add
add
xchg
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
xchg
add
add
add
add
and
xchg
add
add
add
add
add
add
xchg
arpl
cmp
add
cmp
add
add
adc
cmp
aam
add
push
daa
add
add
adc
pop
add
add
add
add
add
adc
lea
cli
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
adc
leave
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
pop
add
add
cmp
add
add
sbb
add
add
add
add
add
xchg
add
add
add
add
xchg
arpl
cmp
add
movs
das
add
add
adc
ja
test
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
xchg
arpl
cmp
add
mov
add
add
adc
and
add
add
add
add
xor
add
add
add
add
xor
add
add
add
xor
add
adc
adc
push
add
add
add
add
add
xchg
sbb
add
add
add
aaa
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
add
xchg
arpl
cmp
add
test
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
xchg
arpl
cmp
add
and
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
rol
add
sub
add
add
adc
ret
add
add
add
cmp
add
add
add
add
add
hlt
cmp
add
add
add
add
xchg
arpl
cmp
add
inc
cmp
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
cmp
xchg
arpl
cmp
add
jl
add
add
adc
lea
inc
add
add
add
add
xchg
arpl
cmp
add
nop
add
add
xchg
add
add
add
add
add
add
add
add
add
add
les
or
les
add
add
add
add
add
add
and
add
xchg
add
add
pop
add
add
xchg
or
add
pop
add
add
xchg
jmp
xor
add
nop
pop
add
add
xchg
test
call
add
add
add
add
add
add
add
pop
add
add
xchg
sbb
add
add
add
add
add
add
add
add
pop
add
add
xchg
inc
pop
movs
add
add
add
add
xchg
push
pop
xor
add
test
add
add
add
add
xchg
imul
add
add
add
add
xchg
js
movs
add
add
add
add
xchg
mov
push
add
add
xchg
cwde
pop
inc
add
add
popa
add
add
xchg
arpl
cmp
add
fsub
add
add
add
add
add
add
adc
inc
add
add
add
cmp
sub
add
add
jb
dec
add
arpl
cmp
imul
jno
jmp
add
add
add
xchg
add
jmp
add
cmp
sahf
add
add
lods
add
add
mov
add
add
mov
add
xchg
add
movs
add
add
add
add
add
cmp
sub
ss
add
add
add
inc
add
add
add
add
add
retf
add
add
imul
jno
movs
add
add
add
arpl
jo
jns
or
or
arpl
cmp
leave
add
cmp
rol
arpl
cmp
fld
arpl
cmp
pop
add
cmp
loope
arpl
cmp
popa
add
cmp
cdq
add
cmp
jmp
add
add
cmp
inc
add
stos
add
arpl
stos
add
add
add
add
add
test
mov
add
add
add
fld
in
add
std
add
or
jo
mov
push
push
jo
mov
sub
clc
add
add
add
rol
add
push
add
add
add
add
add
add
add
cmp
rol
arpl
cmp
loope
arpl
movs
add
add
cmp
icebp
add
cmp
stc
add
jns
add
arpl
cmp
or
arpl
movs
add
add
movs
add
add
movs
add
add
inc
add
add
cmp
xor
arpl
movs
add
add
movs
add
arpl
movs
add
arpl
movs
add
arpl
cmp
pop
add
movs
add
arpl
movs
add
arpl
jo
add
ffreep
add
call
add
enter
add
(bad)
add
fld
add
fld
add
pop
enter
add
add
add
add
add
add
add
add
add
add
add
add
imul
imul
imul
add
add
add
add
(bad)
mov
xor
pop
add
add
add
add
(bad)
test
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
xor
pop
add
add
add
add
add
add
add
and
xor
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
cmp
jg
add
add
add
add
add
mov
add
add
add
pop
xor
pop
add
or
add
or
add
or
add
add
add
ins
add
add
add
add
add
pop
add
add
jg
xchg
stos
add
add
add
add
or
cmp
add
add
jae
mov
nop
add
add
add
add
add
add
or
add
das
or
add
cmp
pop
add
add
pop
add
add
ins
mov
add
add
add
add
add
add
add
pop
add
add
or
add
push
add
add
add
or
add
push
add
add
add
or
add
add
add
add
sldt
add
adc
add
pop
add
add
xchg
add
add
sub
push
add
add
add
add
add
adc
add
add
add
add
sbb
add
add
add
add
add
and
add
add
add
add
add
cmp
add
add
add
add
or
inc
add
add
add
add
mov
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
or
add
add
mov
add
popf
or
add
add
popf
or
add
add
mov
add
movs
or
add
add
popf
or
add
add
popf
or
add
add
popf
or
add
add
add
add
add
add
add
add
add
add
add
add
mov
js
mov
add
jl
add
add
add
add
cmps
add
add
add
add
sbb
xor
add
add
sub
push
add
add
add
add
add
xchg
add
add
pop
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
adc
add
add
add
add
add
add
xchg
add
push
je
ins
ins
jns
gs
add
jae
imul
jae
outs
jb
imul
gs
cs
imul
inc
outs
jb
jae
push
jns
je
ins
add
jae
gs
cs
jb
ja
outs
add
jae
imul
outs
jb
xor
jb
jae
jne
arpl
add
ins
imul
cs
jae
jne
arpl
add
gs
je
add
outs
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
popa
jb
arpl
outs
jb
ja
popa
add
push
arpl
outs
arpl
imul
je
ins
cs
gs
add
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
gs
outs
add
je
outs
fs
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
arpl
add
gs
jo
outs
add
outs
ins
push
arpl
fs
imul
jb
je
push
popa
gs
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
jb
ins
add
je
inc
jne
outs
push
imul
add
je
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
je
dec
je
ins
add
inc
jne
je
outs
inc
popa
jae
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
jae
add
add
jo
imul
add
outs
add
jb
add
push
popa
imul
add
jae
gs
cs
push
imul
je
outs
add
dec
imul
add
je
push
jae
inc
outs
ins
jo
je
bound
je
je
dec
ins
popa
addr16
gs
jb
js
pop
add
dec
inc
ins
outs
outs
gs
bound
addr16
inc
gs
jne
je
outs
add
jae
outs
fs
popa
jns
jne
add
push
jns
arpl
outs
outs
imul
pop
push
jns
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jae
ins
bound
inc
gs
jns
add
imul
jb
ins
add
je
inc
outs
jb
popa
je
imul
ins
gs
outs
add
outs
outs
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
arpl
outs
js
inc
add
arpl
fs
imul
inc
outs
ins
bound
outs
js
inc
add
gs
add
push
add
outs
jne
je
imul
jae
gs
gs
inc
outs
js
jae
je
dec
popa
ins
add
je
push
gs
add
push
add
dec
jne
je
arpl
je
gs
gs
je
add
jbe
imul
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
outs
fs
outs
jbe
imul
add
gs
je
add
gs
je
inc
gs
gs
je
add
inc
add
dec
inc
outs
ins
jo
jb
bound
push
je
imul
imul
fs
inc
jo
outs
add
je
imul
gs
push
popa
bound
fs
inc
add
push
popa
ins
jne
push
jns
add
bound
inc
outs
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
pop
dec
outs
arpl
imul
outs
je
jae
je
push
imul
add
imul
gs
dec
je
ins
add
jb
xor
inc
jne
je
outs
add
popa
imul
outs
add
dec
imul
add
inc
gs
add
outs
jne
ins
push
gs
je
jbe
outs
je
inc
jbe
outs
je
popa
imul
add
imul
ins
add
jo
jae
add
inc
jbe
outs
je
jb
jae
imul
add
jp
inc
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
jae
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
arpl
gs
outs
fs
je
inc
ins
imul
add
je
inc
outs
outs
je
outs
ins
jae
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
jb
inc
outs
jb
gs
je
ins
add
je
dec
popa
imul
je
imul
dec
popa
js
ins
imul
jae
je
dec
imul
inc
outs
js
jae
je
dec
jo
arpl
jns
jae
je
push
push
outs
outs
add
je
push
push
push
popa
jae
bound
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
imul
popa
je
add
jb
push
imul
popa
je
add
outs
je
popa
outs
fs
gs
popa
fs
dec
outs
popa
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
push
add
inc
push
push
inc
je
jb
bound
add
je
imul
jae
imul
jb
jo
jb
imul
ins
imul
push
gs
imul
add
je
push
gs
imul
pop
push
gs
imul
pop
push
gs
imul
je
push
gs
imul
je
push
gs
imul
je
push
gs
imul
je
push
gs
imul
je
push
gs
imul
je
push
gs
imul
je
push
gs
imul
je
push
gs
imul
je
push
gs
imul
je
xor
addr16
push
gs
imul
je
push
gs
imul
popaw
jne
je
push
gs
imul
popa
jne
je
gs
imul
gs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jb
arpl
gs
gs
imul
imul
gs
imul
je
imul
je
imul
je
imul
je
imul
je
imul
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
and
add
and
add
and
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
je
je
jb
bound
add
imul
jne
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
add
sar
outs
retf
mov
nop
xchg
call
pop
push
sbb
mov
mov
pop
jg
aad
cmp
add
add
or
add
push
pop
add
or
adc
adc
sub
sbb
add
sub
and
add
pop
or
adc
or
add
adc
adc
add
add
or
or
or
or
sbb
push
add
add
add
adc
add
push
add
or
pop
pop
add
or
sbb
or
or
push
add
push
add
sbb
adc
add
add
add
add
pop
pop
or
or
or
adc
add
push
add
push
add
add
push
add
add
or
add
and
inc
or
add
add
add
add
pop
pop
or
or
or
and
add
sub
add
add
sub
add
push
add
or
add
sbb
or
adc
or
or
add
adc
sbb
or
or
or
sbb
or
adc
add
push
add
or
pop
push
or
or
add
adc
adc
or
add
adc
push
add
add
push
or
or
sbb
and
adc
push
or
add
and
add
add
add
adc
add
push
add
or
add
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
and
add
or
add
push
add
add
add
push
adc
pop
or
adc
push
adc
add
sbb
and
adc
sbb
and
add
add
adc
add
mov
add
adc
sub
add
or
add
push
adc
push
adc
add
adc
pop
adc
or
or
or
or
or
sbb
push
and
adc
add
or
add
add
pop
or
or
push
or
or
and
add
or
add
push
add
or
or
add
sbb
pop
pop
or
push
or
or
add
adc
adc
push
adc
add
add
add
add
or
push
sbb
sbb
sub
and
push
or
add
add
pop
and
sbb
add
adc
push
sbb
adc
or
push
or
pop
or
or
add
add
add
sbb
add
and
add
and
push
add
and
or
or
or
or
and
add
and
push
add
and
and
pop
push
and
adc
add
add
sbb
and
adc
add
push
or
or
and
sbb
or
add
push
add
add
add
adc
sub
add
adc
pop
add
or
add
sbb
adc
or
adc
and
add
add
pop
add
or
sbb
cmp
sbb
adc
sbb
or
adc
or
add
xor
cmp
pop
add
add
dec
add
or
and
add
add
and
add
or
and
adc
add
xor
adc
add
jne
and
add
adc
add
sbb
and
add
and
pop
push
or
or
sbb
adc
and
push
adc
add
add
add
add
or
push
adc
add
inc
add
adc
add
adc
or
adc
push
push
or
sbb
cmp
add
add
add
add
cmp
add
push
rol
mov
add
add
lods
inc
push
jp
fs
push
gs
js
inc
dec
inc
push
push
xor
xor
outs
aaa
xor
imul
inc
fs
xor
push
push
push
inc
inc
inc
xor
das
dec
imul
dec
arpl
xor
inc
inc
ins
push
inc
ins
xor
xor
dec
ins
push
ss
jne
outs
jbe
aaa
cmp
js
push
fs
xor
bound
push
push
dec
outs
pop
jno
dec
pop
imul
ins
ins
outs
gs
inc
pop
dec
inc
jp
inc
jb
inc
cmp
pop
push
push
imul
je
fs
cmp
inc
push
push
push
inc
push
push
xor
dec
push
jbe
push
ins
dec
popa
addr16
fs
inc
bound
push
dec
push
inc
ins
dec
fs
xor
dec
inc
push
push
fs
data16
xor
ins
js
xor
push
inc
arpl
jp
xor
push
push
inc
pop
inc
fs
fs
xor
push
dec
inc
aaa
xor
inc
dec
push
xor
addr16
dec
dec
pop
push
dec
inc
push
jne
xor
push
push
push
dec
inc
xor
aaa
inc
addr16
push
dec
pop
addr16
gs
inc
ins
dec
imul
push
dec
push
xor
bound
inc
dec
push
pop
push
cmp
dec
xor
gs
fs
imul
arpl
aaa
xor
imul
push
jae
push
xor
ja
ins
jne
ss
inc
arpl
jp
xor
inc
dec
inc
pop
push
dec
inc
fs
cmp
inc
push
push
ins
dec
gs
imul
push
push
push
push
inc
dec
pop
addr16
inc
fs
js
inc
je
ins
push
inc
xor
inc
inc
fs
push
xor
jb
push
push
fs
das
dec
dec
js
ins
je
imul
outs
push
cmp
inc
pop
dec
push
inc
dec
xor
sub
arpl
addr16
jo
jp
xor
inc
outs
aaa
xor
imul
dec
fs
das
gs
dec
imul
push
inc
das
inc
inc
xor
push
dec
imul
dec
gs
inc
xor
inc
inc
ins
inc
inc
xor
xor
ins
push
xor
bound
inc
ins
jae
xor
push
jo
inc
ins
inc
dec
xor
inc
inc
imul
xor
addr16
inc
inc
pop
inc
fs
gs
xor
cmp
ins
pop
push
xor
push
imul
aaa
xor
push
push
je
fs
cmp
inc
push
push
inc
inc
cmp
das
gs
jbe
xor
inc
dec
addr16
dec
xor
gs
inc
dec
imul
jae
push
xor
pop
inc
push
push
fs
dec
outs
xor
ins
js
xor
push
inc
arpl
jp
xor
push
push
inc
pop
inc
fs
fs
xor
push
dec
inc
aaa
xor
xor
arpl
inc
addr16
dec
pop
pop
push
dec
push
push
push
inc
push
dec
push
ss
push
dec
push
inc
imul
push
push
jb
imul
dec
dec
imul
imul
jb
imul
dec
push
inc
dec
ja
push
cmp
dec
xor
imul
push
dec
arpl
bound
push
xor
pop
inc
outs
dec
push
push
xor
sub
pop
jo
imul
push
jp
xor
push
dec
push
xor
popa
js
push
inc
push
push
ins
dec
push
xor
pop
push
push
push
inc
dec
pop
addr16
inc
push
jae
push
push
ins
push
inc
xor
inc
imul
data16
xor
push
fs
dec
push
inc
inc
ins
je
dec
pop
js
ss
push
dec
push
pop
ins
bound
pop
dec
xor
inc
addr16
dec
push
js
push
inc
push
sub
jb
xor
outs
aaa
gs
push
jb
dec
jp
push
push
je
dec
inc
outs
xor
xor
push
push
inc
dec
inc
inc
xor
das
dec
imul
dec
arpl
inc
outs
inc
inc
inc
dec
inc
inc
imul
dec
inc
ins
push
bound
push
jae
push
cmp
js
outs
ins
push
push
outs
push
inc
inc
inc
imul
xor
aaa
bound
inc
gs
xor
xor
xor
push
xor
inc
dec
popa
xor
push
ss
push
push
je
dec
jbe
cmp
inc
push
inc
inc
inc
arpl
dec
imul
inc
push
addr16
pop
xor
gs
dec
jo
dec
pop
push
ss
outs
jno
xor
push
dec
push
inc
ins
dec
push
pop
popa
pop
cmp
outs
xor
outs
js
xor
inc
arpl
jp
je
jp
inc
push
inc
js
jo
dec
gs
xor
push
dec
imul
dec
push
dec
ins
bound
inc
dec
aaa
xor
dec
inc
imul
inc
push
inc
push
ins
push
dec
dec
jne
arpl
inc
dec
gs
xor
xor
push
xor
ins
dec
ins
dec
jo
ss
xor
pop
outs
fs
pop
ins
xor
inc
pop
push
cmp
jne
cmp
popa
fs
push
pop
arpl
aaa
xor
inc
ins
inc
js
inc
cmp
push
xor
addr16
inc
dec
ins
jo
sub
inc
arpl
push
push
push
jns
inc
dec
inc
ja
xor
cmp
fs
push
popa
sub
inc
imul
ja
dec
push
inc
inc
dec
arpl
inc
fs
push
addr16
sub
ins
push
inc
push
ins
js
jo
push
xor
push
push
arpl
bound
js
inc
pop
inc
popa
ins
js
sub
dec
gs
ins
popa
imul
inc
push
je
inc
push
jb
dec
jne
ss
inc
outs
aaa
xor
dec
imul
inc
fs
pop
imul
inc
push
inc
inc
push
inc
inc
ins
sub
das
dec
imul
arpl
pop
xor
inc
jae
cmp
cmp
inc
push
ins
push
xor
dec
xor
je
jns
xor
dec
ss
push
inc
fs
addr16
push
gs
inc
inc
popa
gs
jo
arpl
imul
fs
dec
push
xor
inc
xor
pop
das
dec
imul
inc
jae
popa
push
je
js
cmp
push
inc
push
push
inc
dec
imul
pushw
push
dec
outs
popa
addr16
fs
ins
imul
ins
push
xor
dec
inc
push
push
fs
dec
push
outs
xor
ins
sub
push
push
inc
outs
inc
jp
dec
push
inc
outs
inc
push
inc
inc
inc
inc
xor
push
xor
push
dec
push
dec
dec
xor
dec
inc
xor
xor
addr16
dec
jbe
xor
imul
ins
push
inc
imul
xor
jns
outs
arpl
jp
addr16
xor
xor
push
gs
outs
jne
dec
push
inc
jo
push
xor
imul
gs
dec
dec
xor
bound
dec
imul
arpl
dec
inc
popa
arpl
inc
outs
push
je
push
arpl
dec
cmp
inc
dec
fs
data16
inc
inc
inc
inc
inc
outs
xor
dec
inc
push
push
jbe
dec
dec
ins
pop
inc
xor
jo
das
arpl
dec
das
inc
inc
dec
fs
dec
inc
fs
push
das
inc
ins
inc
ins
push
xor
push
push
fs
push
data16
jb
push
push
fs
xor
push
fs
je
sub
xor
xor
jb
xor
data16
inc
pop
dec
push
dec
xor
inc
dec
ins
push
jo
aaa
jno
dec
xor
aaa
bound
dec
imul
inc
fs
dec
dec
dec
pop
ins
push
jb
inc
dec
inc
sub
dec
dec
jne
inc
inc
ins
push
sub
inc
xor
dec
dec
inc
ins
inc
push
inc
outs
xor
jae
inc
jo
popa
imul
ins
js
dec
xor
xor
jp
push
xor
inc
inc
xor
push
xor
arpl
pop
dec
pop
cmp
push
push
imul
dec
inc
addr16
inc
bound
aaa
xor
dec
jae
xor
fs
push
jae
push
inc
push
push
inc
inc
xor
inc
push
xor
push
ins
dec
jns
addr16
jbe
inc
dec
imul
dec
xor
inc
das
pop
dec
push
inc
push
bound
jb
imul
pushw
dec
addr16
xor
push
inc
arpl
push
xor
push
push
dec
je
pop
ins
inc
gs
jo
inc
jae
addr16
dec
jp
addr16
inc
xor
jp
fs
ja
inc
push
jb
push
push
ins
inc
jne
js
js
ins
xor
push
dec
xor
inc
ss
push
addr16
push
jae
ins
je
gs
das
inc
dec
inc
ins
dec
ss
push
inc
gs
xor
arpl
fs
dec
inc
pop
push
xor
sub
gs
fs
imul
cmp
aaa
fs
dec
ss
inc
ins
inc
ja
push
jbe
gs
pop
dec
popa
jns
inc
popa
jo
ss
imul
js
dec
dec
inc
push
push
dec
inc
js
inc
cmp
ins
push
push
push
das
arpl
cmp
inc
dec
js
fs
fs
push
xor
imul
pop
imul
ja
cmp
imul
jbe
pop
pop
dec
push
dec
dec
js
dec
jae
sub
dec
ss
pop
outs
inc
push
pop
dec
push
inc
push
pop
inc
data16
je
dec
pop
xor
dec
dec
push
xor
aaa
xor
inc
imul
dec
outs
jae
inc
xor
inc
fs
bound
dec
js
ins
xor
xor
inc
xor
cmp
imul
dec
arpl
inc
dec
inc
xor
inc
inc
push
dec
jne
inc
ins
push
xor
cmp
imul
inc
arpl
dec
dec
push
xor
inc
inc
push
pop
xor
inc
jp
fs
js
inc
dec
outs
xor
fs
gs
push
inc
inc
inc
ins
cmp
outs
gs
inc
pop
aaa
xor
push
pop
je
imul
push
jne
ins
pop
inc
xor
inc
inc
sub
push
push
jae
ss
dec
fs
jne
jns
inc
dec
xor
dec
ins
dec
fs
xor
inc
xor
pop
fs
inc
imul
dec
jp
xor
push
push
jbe
push
push
ins
jp
push
inc
pop
bound
dec
inc
gs
xor
cmp
addr16
bound
inc
pop
push
dec
push
pop
das
xor
push
xor
pop
dec
inc
pop
ins
push
xor
inc
pop
ins
push
arpl
aaa
data16
js
pop
jo
xor
pop
push
ins
imul
outs
cmp
dec
push
jno
xor
xor
arpl
dec
bound
xor
gs
xor
push
jno
bound
ins
push
pop
dec
inc
jae
jae
aaa
fs
push
xor
push
outs
push
je
sub
inc
xor
inc
dec
xor
jo
ins
pop
dec
dec
xor
addr16
inc
dec
push
xor
jne
dec
dec
inc
push
ins
xor
push
addr16
dec
dec
jne
dec
push
dec
jns
inc
push
push
push
push
xor
dec
push
dec
xor
push
jb
je
jo
sub
inc
bound
xor
push
imul
inc
push
popa
ss
inc
inc
dec
js
push
pop
inc
fs
push
dec
push
push
outs
jne
inc
push
inc
xor
jno
je
pop
inc
popa
jne
bound
dec
xor
gs
push
push
je
cmp
push
push
inc
bound
sub
ja
dec
imul
fs
inc
imul
dec
dec
inc
dec
ins
xor
xor
cmp
xor
dec
aaa
inc
ja
js
arpl
jae
xor
inc
xor
bound
dec
push
push
xor
jae
inc
push
cmp
dec
popa
push
inc
cmp
jno
outs
push
sub
ss
fs
sub
inc
dec
addr16
pop
push
js
je
ss
imul
push
das
pop
imul
jb
dec
popa
xor
aaa
inc
xor
pop
gs
dec
jo
inc
push
push
gs
pop
je
sub
ja
imul
gs
jns
bound
push
jne
pop
jne
dec
dec
dec
push
xor
pop
push
inc
inc
push
jno
outs
dec
inc
dec
ja
push
outs
fs
pop
push
push
dec
inc
push
xor
inc
dec
jns
aaa
dec
push
ja
dec
dec
pop
push
dec
inc
fs
js
ins
push
dec
pop
ins
xor
dec
inc
jne
cmp
jae
addr16
pop
jae
xor
jne
js
inc
ins
dec
dec
ins
push
ss
xor
push
popa
jp
push
bound
xor
push
pop
push
push
cmp
cmp
push
dec
cmp
aaa
fs
dec
jo
inc
ins
inc
pop
outs
dec
jbe
gs
arpl
inc
push
ins
inc
inc
cmp
jp
imul
inc
dec
inc
pop
push
dec
push
xor
dec
fs
imul
popa
jbe
dec
jne
data16
jne
addr16
jp
addr16
inc
xor
push
push
push
ins
inc
addr16
xor
dec
ins
xor
data16
cmp
sub
pop
inc
pop
dec
dec
js
xor
ins
cmp
dec
popa
inc
push
pop
jno
jne
push
xor
dec
push
arpl
push
fs
fs
xor
dec
inc
dec
dec
cmp
xor
inc
jae
dec
popa
push
xor
inc
jbe
push
xor
pop
dec
das
jno
das
outs
push
inc
push
inc
inc
push
xor
data16
xor
inc
push
inc
js
dec
cmp
inc
pop
inc
push
push
inc
inc
jp
inc
xor
js
cmp
dec
fs
pop
ins
inc
fs
popa
popa
xor
jns
push
cmp
push
dec
inc
jae
inc
inc
xor
dec
jns
fs
push
cmp
pop
inc
data16
xor
xor
dec
dec
inc
inc
das
dec
js
jp
dec
pop
aaa
data16
dec
push
dec
je
inc
ja
cmp
gs
push
dec
popa
ins
xor
inc
inc
fs
dec
jbe
push
push
bound
push
imul
jp
inc
push
inc
ins
dec
xor
push
push
jbe
push
imul
dec
push
dec
xor
bound
jo
imul
inc
inc
push
dec
addr16
dec
imul
push
xor
dec
dec
fs
bound
jno
outs
addr16
je
push
ins
pop
push
imul
dec
dec
pop
popa
inc
imul
push
push
xor
cmp
jb
ins
jne
jae
das
inc
dec
push
pop
push
js
xor
jns
imul
popa
jne
ins
xor
outs
imul
inc
pop
ins
aaa
aaa
dec
jns
push
jno
xor
xor
gs
pop
jno
dec
jbe
dec
push
ins
dec
arpl
jne
ja
push
aaa
dec
push
outs
push
fs
dec
sub
xor
cmp
xor
sub
push
xor
xor
push
push
cmp
xor
cmp
xor
pop
inc
xor
pop
ins
jne
das
dec
ss
data16
push
addr16
inc
pop
dec
push
push
pop
dec
push
dec
push
xor
fs
push
inc
push
ss
push
dec
jb
popa
push
fs
push
cmp
arpl
inc
push
ins
js
push
xor
ss
ins
pop
inc
imul
push
pop
ins
outs
pop
pop
fs
push
push
jno
push
bound
jno
dec
das
dec
pop
inc
outs
aaa
xor
ss
dec
je
popa
popa
imul
jno
ss
push
inc
dec
inc
cmp
xor
imul
das
dec
imul
pushw
xor
inc
inc
inc
xor
xor
js
xor
cmp
inc
push
jbe
outs
bound
push
cmp
inc
inc
inc
pop
je
xor
pop
inc
das
push
jp
das
fs
jae
inc
inc
inc
ins
dec
das
inc
push
xor
xor
je
dec
inc
addr16
inc
xor
bound
fs
push
xor
xor
je
pop
pop
inc
ss
inc
xor
push
dec
xor
dec
bound
sub
pop
ins
aaa
das
imul
jbe
ins
xor
outs
fs
push
ins
das
outs
dec
inc
push
push
fs
xor
dec
inc
aaa
dec
dec
push
push
push
inc
imul
arpl
inc
push
push
inc
inc
push
bound
je
push
xor
jne
push
dec
imul
xor
dec
push
inc
xor
bound
addr16
das
imul
imul
ins
push
inc
dec
aaa
xor
dec
outs
inc
je
imul
push
jo
jae
ins
je
gs
jbe
push
inc
xor
inc
outs
je
fs
push
data16
xor
xor
bound
push
das
jo
push
xor
inc
aaa
fs
inc
jb
push
push
ins
dec
xor
popa
pop
xor
dec
push
popa
addr16
xor
fs
arpl
push
pop
inc
cmp
dec
xor
ins
push
xor
data16
inc
push
push
pop
dec
push
fs
pop
cmp
ins
xor
jp
dec
gs
addr16
cmp
push
dec
ins
inc
dec
inc
js
gs
arpl
jae
pop
ins
bound
inc
inc
inc
xor
xor
jns
push
push
jbe
ss
inc
push
sub
imul
dec
push
pop
outs
jbe
jb
jne
dec
push
push
inc
pop
dec
arpl
dec
push
push
push
jo
ss
push
bound
inc
je
bound
push
push
push
inc
push
aaa
push
push
inc
imul
popa
das
dec
imul
arpl
inc
ins
push
dec
inc
inc
imul
pop
xor
xor
push
popa
bound
inc
jb
popa
push
cmp
dec
xor
arpl
ins
gs
push
push
inc
inc
dec
jp
inc
push
jb
ins
pop
push
inc
inc
pop
inc
pop
dec
dec
gs
xor
ins
inc
xor
push
xor
gs
push
arpl
jb
push
push
je
dec
inc
imul
ins
push
outs
pop
ins
push
jb
push
push
inc
outs
inc
inc
das
inc
das
jbe
push
ins
push
popa
addr16
fs
ins
push
xor
inc
ins
pop
js
push
dec
fs
dec
inc
push
push
pop
arpl
outs
xor
jo
js
xor
ins
inc
jp
popa
dec
inc
push
pop
push
jo
dec
fs
push
dec
jns
jae
gs
dec
inc
aaa
jno
inc
ins
inc
dec
jp
xor
dec
pop
pop
addr16
jp
jne
js
dec
fs
xor
push
push
dec
gs
dec
arpl
push
pop
jno
aaa
jno
imul
jno
outs
imul
fs
inc
bound
push
inc
pop
outs
dec
das
jb
imul
jb
push
xor
cmp
dec
pop
imul
cmp
pop
dec
push
inc
dec
cmp
dec
xor
outs
ins
jae
fs
xor
imul
das
push
push
fs
data16
push
xor
push
ins
xor
push
imul
pop
push
dec
push
inc
push
push
pop
addr16
push
arpl
inc
outs
ins
inc
ins
xor
inc
inc
inc
ins
push
xor
xor
inc
jbe
jns
data16
xor
inc
das
jne
inc
dec
je
ss
pop
jae
imul
das
push
pop
inc
xor
inc
inc
inc
cmp
js
push
inc
inc
das
dec
ins
dec
aaa
xor
jns
aaa
gs
pop
dec
data16
inc
popa
popa
push
dec
gs
pop
ins
cmp
inc
push
pop
push
jno
jbe
bound
xor
inc
dec
outs
xor
dec
xor
pop
cmp
inc
addr16
outs
push
inc
xor
push
push
outs
imul
popa
push
xor
push
ins
dec
bound
jp
js
push
inc
inc
xor
inc
inc
xor
dec
dec
inc
outs
xor
fs
gs
push
inc
ss
jb
push
push
dec
push
xor
dec
ins
dec
inc
bound
js
arpl
je
popa
popa
imul
cmp
push
outs
dec
ins
xor
inc
inc
das
gs
jbe
push
xor
dec
xor
ss
gs
dec
outs
jbe
dec
inc
ss
outs
jne
bound
data16
jae
js
push
pop
push
data16
dec
je
dec
jb
push
inc
bound
xor
dec
xor
inc
jp
push
push
outs
fs
push
inc
pop
dec
push
pop
inc
js
jo
inc
jbe
xor
aaa
jp
xor
jo
inc
arpl
pop
outs
push
dec
push
dec
jne
js
push
push
inc
push
push
push
push
pop
inc
imul
fs
inc
addr16
push
push
push
je
gs
push
dec
dec
ins
xor
jp
pop
push
aaa
xor
cmp
push
push
inc
cmp
inc
dec
inc
js
cmp
dec
sub
push
xor
xor
sub
fs
jo
inc
jbe
fs
pop
jbe
pop
xor
cmp
dec
das
sub
imul
bound
pop
push
dec
imul
push
ins
xor
inc
imul
arpl
push
pop
addr16
imul
arpl
outs
jne
push
inc
xor
dec
pop
pop
jb
pop
gs
ja
xor
push
jp
arpl
dec
dec
inc
cmp
dec
imul
dec
xor
xor
pop
dec
dec
js
push
pop
inc
fs
xor
push
aaa
dec
jae
aaa
xor
pop
je
push
bound
push
outs
addr16
xor
xor
bound
xor
ins
xor
imul
aaa
dec
imul
dec
push
fs
xor
inc
inc
imul
inc
xor
ins
push
xor
inc
imul
inc
arpl
bound
fs
addr16
sub
inc
inc
xor
jp
je
push
pop
inc
data16
inc
xor
inc
cmp
jne
jo
ja
inc
gs
pop
dec
dec
jbe
inc
ins
inc
je
jns
je
inc
xor
ss
ins
push
inc
dec
dec
pop
ins
xor
jo
das
gs
je
push
pop
ins
ins
xor
je
fs
imul
ins
push
inc
push
dec
outs
inc
outs
dec
ins
cmp
inc
push
das
xor
dec
jno
inc
push
dec
outs
outs
dec
xor
push
pop
xor
inc
dec
xor
xor
inc
arpl
gs
xor
dec
ins
push
jp
xor
inc
dec
jns
addr16
inc
inc
inc
dec
dec
dec
inc
push
imul
push
outs
inc
ja
dec
xor
inc
bound
data16
inc
addr16
push
jb
outs
fs
pop
ins
ins
imul
inc
fs
push
xor
cmp
imul
push
gs
outs
jae
ins
fs
jns
jb
popa
push
ins
dec
xor
jb
jns
addr16
inc
ins
inc
ja
aaa
data16
push
inc
imul
push
push
xor
push
push
pop
inc
das
jae
inc
push
inc
dec
push
push
ins
dec
inc
je
das
ins
xor
inc
ins
dec
ins
dec
push
push
push
popa
jne
addr16
inc
xor
push
ins
arpl
jbe
inc
ja
inc
addr16
dec
push
outs
push
jno
push
dec
outs
je
push
popa
ja
ins
push
inc
fs
jbe
jne
ja
sub
xor
inc
xor
dec
push
push
pop
bound
dec
fs
inc
dec
inc
outs
xor
das
ins
ja
fs
outs
aaa
popa
xor
outs
dec
sub
popa
push
jae
pop
outs
jno
xor
xor
ss
push
dec
pop
dec
jne
inc
sub
ss
pop
inc
cmp
arpl
xor
inc
ins
inc
xor
push
xor
ss
xor
push
jno
outs
jno
push
xor
je
gs
ins
inc
dec
cmp
inc
ins
ins
inc
jp
pop
pop
addr16
inc
inc
fs
popa
ss
gs
inc
cmp
xor
js
inc
push
dec
xor
push
inc
jo
js
sub
ins
push
inc
js
pop
pop
cmp
inc
arpl
inc
das
gs
das
dec
inc
popa
ins
dec
popa
ins
jo
je
outs
aaa
jno
inc
xor
push
dec
ins
dec
imul
push
push
dec
dec
das
push
outs
xor
push
xor
dec
push
push
xor
inc
outs
xor
jp
push
inc
dec
push
ins
push
gs
inc
je
aaa
dec
dec
imul
xor
xor
inc
push
dec
pop
dec
inc
dec
inc
jae
dec
xor
ins
push
inc
dec
xor
jb
inc
push
pop
jns
ins
xor
xor
push
fs
inc
addr16
xor
push
dec
push
ins
pop
xor
dec
bound
xor
jae
inc
push
push
push
push
popa
dec
inc
xor
addr16
gs
arpl
pop
popa
jne
je
sub
dec
ins
imul
ins
push
pop
jns
addr16
fs
pop
jne
dec
xor
imul
bound
arpl
jns
xor
dec
push
dec
xor
xor
xor
inc
push
inc
jbe
popa
dec
push
cmp
das
pop
push
inc
push
inc
xor
ja
push
inc
addr16
dec
xor
jns
cmp
dec
je
push
xor
inc
outs
xor
jne
popa
push
arpl
dec
push
push
cmp
jne
dec
xor
popa
dec
push
dec
gs
push
push
jo
push
push
inc
ins
outs
dec
inc
cmp
js
push
dec
js
xor
dec
imul
push
jb
popa
jp
ss
push
jne
gs
aaa
dec
ins
outs
sub
ins
push
inc
js
xor
pop
dec
push
inc
inc
push
outs
push
inc
xor
sub
pop
addr16
push
cmp
inc
xor
inc
push
jae
inc
outs
push
dec
jb
push
push
pop
push
imul
inc
push
sub
inc
ins
inc
xor
inc
push
inc
jae
inc
pop
xor
ja
push
dec
je
fs
inc
jns
push
inc
jbe
jo
cmp
aaa
dec
popa
jns
push
bound
outs
dec
dec
inc
bound
je
cmp
xor
ins
pop
inc
jo
dec
ins
push
jb
data16
jbe
inc
push
ins
dec
popa
jno
xor
arpl
dec
dec
inc
dec
imul
pop
js
push
xor
dec
jo
dec
dec
push
pop
push
pop
dec
dec
outs
xor
ins
jp
popa
dec
push
inc
arpl
imul
dec
xor
jp
jo
xor
ins
push
inc
xor
addr16
dec
push
ja
popa
xor
dec
dec
pop
popa
push
jae
jne
js
jp
imul
push
dec
pop
inc
addr16
push
cmp
push
inc
push
jo
ins
js
jno
imul
das
imul
jb
ins
inc
xor
xor
dec
inc
popa
inc
arpl
inc
xor
inc
cmp
inc
js
imul
arpl
dec
inc
imul
ins
ins
ins
pop
inc
fs
imul
push
arpl
push
bound
arpl
jns
jp
inc
je
dec
inc
inc
cmp
jp
cmp
ins
inc
data16
inc
jne
dec
push
push
push
aaa
outs
inc
addr16
cmp
fs
popa
push
pop
inc
imul
push
inc
ja
jbe
inc
xor
inc
js
jae
push
pop
push
push
dec
push
fs
imul
ins
ja
dec
push
dec
jp
ins
imul
push
push
pop
xor
inc
push
push
push
js
push
js
inc
dec
push
inc
dec
push
aaa
xor
inc
xor
xor
dec
das
jae
gs
jno
arpl
jno
inc
ins
push
inc
dec
xor
push
jo
push
inc
imul
dec
imul
cmp
popa
inc
xor
inc
ja
inc
push
cmp
inc
fs
push
xor
inc
inc
jbe
dec
popa
push
xor
jae
xor
push
das
inc
xor
bound
jns
inc
jp
js
imul
pop
ja
push
gs
inc
xor
jbe
dec
push
js
inc
jno
inc
inc
jb
jb
dec
das
jbe
xor
dec
fs
je
push
pop
inc
pop
xor
inc
arpl
jbe
ins
dec
pushw
outs
addr16
jae
gs
imul
outs
push
inc
sub
dec
cmp
dec
push
dec
ins
je
dec
jne
inc
pop
cmp
jae
jo
dec
inc
inc
dec
jae
xor
pop
push
xor
pop
xor
ja
fs
inc
inc
fs
xor
dec
dec
push
jne
data16
inc
popa
pop
xor
dec
dec
inc
dec
imul
jns
pop
push
fs
inc
fs
addr16
ja
inc
ins
js
bound
bound
sub
das
inc
addr16
pop
arpl
ss
gs
ins
jne
push
pop
jae
jbe
push
ins
popa
xor
push
bound
outs
dec
imul
dec
gs
ins
arpl
popa
xor
dec
inc
push
dec
pop
imul
addr16
js
gs
push
cmp
cmp
xor
bound
arpl
jns
jns
ins
inc
push
dec
ja
inc
dec
inc
cmp
cmp
push
xor
sub
push
outs
je
inc
addr16
dec
inc
dec
inc
je
xor
push
addr16
dec
inc
push
imul
dec
push
inc
push
jbe
jbe
inc
bound
imul
inc
dec
jae
xor
js
jno
push
outs
sub
gs
pop
dec
xor
pop
inc
xor
inc
ja
dec
inc
jp
outs
jo
inc
xor
inc
push
dec
inc
cmp
inc
jbe
jns
jp
js
addr16
push
push
ins
push
bound
gs
arpl
bound
arpl
xor
popa
inc
inc
addr16
inc
outs
inc
xor
dec
xor
fs
pop
ins
ss
outs
ins
imul
arpl
inc
dec
ins
inc
inc
outs
dec
push
push
ja
push
arpl
push
inc
addr16
inc
inc
pop
inc
fs
imul
outs
push
addr16
inc
jns
pop
aaa
data16
push
xor
jo
jne
xor
dec
ins
pop
inc
jo
inc
ins
push
aaa
inc
data16
bound
inc
ins
dec
push
dec
ins
dec
fs
imul
jbe
cmp
ins
dec
xor
dec
push
dec
inc
pop
dec
dec
push
pop
push
pop
jno
ja
xor
dec
aaa
js
xor
push
inc
arpl
push
xor
push
push
imul
dec
pop
jne
je
jns
push
outs
dec
inc
dec
jp
jne
addr16
fs
popa
fs
pop
jne
push
push
push
push
dec
dec
xor
arpl
jns
addr16
outs
inc
addr16
gs
ins
data16
dec
imul
push
pop
push
xor
inc
addr16
jns
imul
push
fs
ss
dec
inc
je
push
push
inc
dec
inc
imul
dec
pop
jo
inc
je
dec
push
fs
arpl
push
xor
cmp
ins
push
push
dec
inc
pop
jp
ins
inc
ja
inc
push
inc
dec
push
dec
inc
push
jae
aaa
addr16
push
inc
push
push
ins
dec
push
inc
imul
inc
imul
addr16
inc
imul
inc
addr16
push
push
xor
inc
inc
js
push
xor
jb
push
push
fs
dec
dec
dec
js
dec
je
imul
popa
ins
imul
xor
push
push
inc
pop
inc
fs
je
push
js
inc
dec
inc
push
jo
aaa
xor
inc
outs
aaa
gs
dec
imul
inc
push
jne
xor
push
push
push
inc
bound
xor
das
dec
imul
dec
dec
gs
xor
inc
inc
ins
inc
inc
aaa
xor
xor
push
xor
inc
ss
inc
dec
dec
xor
jp
dec
das
je
inc
data16
ins
xor
jo
dec
jns
ins
aaa
push
js
pop
inc
xor
dec
push
dec
ins
data16
gs
dec
push
pop
xor
inc
dec
push
inc
inc
pop
aaa
inc
push
jo
xor
xor
inc
jne
je
inc
pop
push
xor
xor
inc
inc
inc
jbe
dec
je
aaa
inc
dec
outs
dec
das
jbe
inc
gs
dec
push
pop
ss
jns
push
inc
outs
dec
inc
ins
js
dec
ja
xor
push
arpl
dec
sub
imul
ins
inc
jns
push
pop
inc
inc
ins
push
inc
aaa
inc
arpl
fs
inc
gs
dec
dec
je
dec
ins
jo
ins
push
inc
jp
xor
jae
push
pop
ja
dec
inc
inc
jne
push
jbe
push
inc
xor
push
pop
dec
outs
inc
xor
cmp
inc
jno
js
je
ins
gs
ins
jno
ins
outs
dec
ins
push
dec
dec
xor
inc
ins
js
xor
xor
js
cmp
ss
dec
das
dec
pop
sub
ss
imul
outs
dec
inc
ins
jno
inc
jo
xor
dec
dec
data16
gs
inc
dec
dec
das
ja
ins
inc
data16
outs
push
xor
inc
dec
ins
dec
ja
inc
jp
dec
inc
dec
js
jne
fs
imul
ins
jae
sub
jno
inc
aaa
push
pop
push
dec
jbe
inc
push
outs
push
dec
push
bound
addr16
bound
xor
addr16
ins
inc
dec
bound
xor
push
inc
dec
dec
jne
cmp
dec
ss
dec
dec
jp
pop
dec
inc
ins
xor
dec
xor
aaa
inc
fs
ja
dec
inc
gs
inc
inc
inc
push
inc
aaa
ins
push
dec
jns
xor
inc
xor
dec
ss
jp
bound
inc
inc
jne
pop
dec
imul
ins
arpl
push
pop
inc
dec
inc
push
dec
push
push
cmp
pop
push
inc
push
dec
push
fs
dec
inc
xor
pop
ins
xor
ins
ja
arpl
inc
ss
push
aaa
pop
push
das
inc
inc
dec
jns
das
push
fs
xor
xor
push
inc
imul
pop
inc
xor
push
ins
arpl
data16
xor
push
push
dec
das
xor
ins
ins
das
ins
das
dec
xor
inc
jb
inc
jb
xor
addr16
inc
jne
je
push
push
inc
xor
push
dec
inc
inc
inc
inc
jbe
dec
je
dec
inc
popa
pop
jae
jne
inc
gs
push
xor
dec
ins
imul
dec
xor
xor
dec
inc
dec
inc
das
jbe
cmp
xor
pop
das
dec
dec
dec
pop
ins
push
jns
pop
push
imul
push
push
push
inc
dec
xor
pop
cmp
dec
dec
ins
push
inc
ja
xor
inc
ja
xor
pop
inc
xor
inc
xor
inc
jne
inc
cmp
xor
push
pop
dec
dec
inc
pop
pop
ins
push
cmp
inc
dec
js
jne
inc
xor
sub
xor
ins
cmp
inc
xor
inc
ins
dec
pop
cmp
xor
inc
push
xor
popa
push
dec
bound
arpl
ss
jae
xor
inc
ins
gs
arpl
ss
inc
inc
push
jo
gs
gs
xor
cmp
ins
dec
jbe
ja
xor
pop
push
ins
dec
js
inc
pop
push
push
jne
fs
push
ins
xor
push
outs
dec
gs
imul
ss
push
push
inc
dec
pop
push
inc
js
push
ins
dec
xor
ins
imul
inc
pop
ins
push
outs
push
jb
push
push
arpl
dec
dec
js
imul
push
push
push
inc
push
pop
dec
dec
inc
xor
push
fs
js
xor
xor
inc
dec
ins
jbe
xor
inc
push
aaa
xor
popa
aaa
push
inc
jbe
popa
jns
inc
fs
xor
push
jo
push
xor
inc
inc
pop
popa
push
das
inc
inc
push
push
inc
pop
jo
dec
outs
gs
inc
arpl
push
ins
xor
inc
xor
ins
push
outs
imul
pop
pop
cmp
bound
fs
cmp
cmp
push
jne
inc
jp
xor
inc
dec
inc
dec
xor
fs
xor
cmp
ins
dec
jbe
pop
inc
inc
popa
inc
push
dec
inc
outs
jb
ins
inc
inc
jo
inc
je
pop
jne
dec
bound
push
ins
ins
xor
dec
inc
jp
inc
dec
jbe
push
jbe
outs
inc
inc
pop
ja
je
pop
gs
xor
imul
inc
ins
xor
ja
xor
xor
dec
xor
dec
dec
xor
das
jns
cmp
inc
ins
inc
jp
bound
aaa
inc
jae
push
jne
xor
jns
pop
xor
ins
outs
inc
cmp
ja
inc
je
inc
dec
bound
inc
dec
jo
push
dec
pop
pop
jne
push
xor
pop
ins
ins
jne
xor
pop
bound
dec
popa
xor
js
inc
inc
dec
pop
dec
je
popa
cmp
jb
ss
ins
xor
xor
pop
ins
je
xor
bound
xor
dec
inc
push
sub
xor
push
dec
fs
cmp
xor
ins
inc
aaa
bound
xor
inc
jns
cmp
push
push
gs
cmp
ins
jno
push
ins
ins
push
pop
inc
push
push
ja
push
ins
push
push
js
js
jp
jne
cmp
xor
ins
inc
sub
inc
das
push
imul
cmp
xor
ja
dec
xor
js
inc
ins
dec
xor
push
xor
inc
ja
ins
jns
push
jb
push
xor
xor
dec
dec
push
pop
ins
dec
imul
push
outs
push
bound
pop
inc
inc
ins
push
inc
pop
inc
fs
inc
inc
gs
inc
dec
inc
jbe
jae
das
xor
inc
dec
bound
popa
outs
ss
je
popa
xor
jne
xor
xor
imul
push
das
inc
ss
xor
dec
push
gs
push
inc
inc
inc
ins
ins
bound
jbe
ins
push
dec
data16
inc
imul
inc
addr16
ss
pop
push
inc
inc
xor
inc
dec
popa
ins
jb
inc
sub
ja
inc
dec
dec
inc
fs
gs
fs
gs
dec
push
xor
dec
push
gs
pop
aaa
fs
dec
ins
inc
jbe
gs
je
cmp
cmp
dec
ins
ins
dec
push
bound
dec
inc
dec
cmp
jbe
push
inc
pop
pop
push
jae
push
fs
xor
imul
dec
imul
push
dec
inc
pop
outs
dec
push
pop
push
fs
bound
xor
ja
push
inc
arpl
push
pop
push
fs
inc
push
ins
bound
pop
fs
xor
dec
jb
inc
xor
inc
fs
dec
jp
xor
imul
sub
xor
ins
push
inc
push
inc
pop
pop
jbe
ins
dec
fs
xor
inc
push
dec
bound
dec
arpl
dec
ins
inc
push
dec
push
dec
pop
ins
jo
sub
push
inc
inc
push
imul
gs
pop
arpl
dec
data16
ss
imul
ins
imul
imul
dec
outs
xor
push
arpl
xor
cmp
inc
push
dec
push
ins
xor
pop
jp
xor
inc
jo
popa
inc
dec
push
fs
push
inc
push
inc
je
ss
ins
jbe
push
push
push
push
inc
dec
popa
addr16
dec
pop
sub
addr16
imul
push
inc
xor
inc
dec
fs
xor
outs
xor
inc
ins
popaw
push
fs
dec
outs
js
xor
jae
jno
xor
gs
imul
xor
outs
ins
imul
imul
arpl
dec
push
dec
pop
xor
inc
push
cmp
imul
dec
pop
outs
jae
dec
dec
push
inc
push
push
push
dec
popa
ins
cmp
je
dec
ins
inc
push
inc
pop
addr16
inc
arpl
push
push
inc
xor
xor
xor
ins
ja
inc
inc
dec
popa
dec
jae
dec
je
inc
arpl
cmp
fs
ins
inc
jb
inc
push
inc
inc
imul
dec
addr16
push
jbe
popa
inc
ins
gs
cmp
ins
jo
ss
inc
dec
dec
bound
dec
xor
push
push
je
pop
dec
xor
inc
inc
ins
pop
inc
xor
inc
addr16
push
je
jb
xor
addr16
fs
xor
sub
ins
jb
ins
dec
fs
push
xor
dec
imul
aaa
arpl
dec
bound
pop
ins
dec
dec
ins
push
imul
imul
push
push
inc
bound
dec
js
inc
pop
push
arpl
dec
dec
inc
aaa
xor
gs
jp
jp
inc
push
inc
dec
dec
dec
push
dec
inc
fs
inc
sub
addr16
jne
xor
inc
imul
inc
cmp
inc
inc
bound
je
push
jb
xor
ins
inc
jne
jno
jb
xor
ins
gs
dec
push
bound
inc
jo
xor
cmp
jbe
gs
fs
imul
cmp
arpl
dec
imul
inc
inc
data16
push
push
inc
cmp
ins
jo
ss
inc
push
inc
jo
pop
dec
dec
ins
xor
push
dec
inc
fs
dec
gs
data16
inc
ins
outs
jns
dec
gs
imul
dec
jbe
inc
inc
pop
pop
push
dec
push
arpl
push
ins
push
push
xor
inc
push
fs
push
pop
gs
xor
je
popa
ins
fs
dec
dec
push
imul
gs
imul
xor
push
push
push
popa
jno
xor
push
push
jo
xor
inc
outs
jb
das
pop
outs
imul
xor
pop
gs
push
inc
push
dec
push
inc
inc
inc
xor
cmp
push
push
pop
inc
dec
dec
arpl
push
bound
ins
inc
xor
xor
ins
push
xor
pop
xor
jbe
pop
push
das
push
arpl
arpl
push
ins
inc
push
aaa
bound
gs
inc
push
push
push
push
popa
dec
fs
push
arpl
sub
ins
dec
data16
inc
push
gs
pop
bound
outs
pop
push
jno
jo
jne
cmp
push
ins
push
imul
inc
inc
jbe
push
jae
push
ins
outs
popa
xor
imul
dec
outs
imul
fs
push
outs
xor
push
push
bound
outs
pop
cmp
ins
js
xor
push
jns
ins
inc
push
arpl
push
push
push
xor
arpl
fs
xor
push
dec
push
xor
inc
dec
push
inc
bound
inc
dec
pop
pop
ins
dec
xor
push
arpl
ins
push
ins
push
popa
inc
imul
das
jp
inc
push
jb
addr16
gs
ins
dec
imul
fs
push
outs
xor
addr16
dec
push
dec
sub
xor
jb
ins
push
xor
ins
arpl
jb
xor
imul
data16
ins
dec
cmp
ins
jo
xor
ins
imul
push
sub
inc
dec
push
fs
je
jne
push
push
jno
jno
inc
imul
push
pushw
inc
outs
popa
popa
dec
push
arpl
push
ins
push
ins
xor
inc
push
fs
push
dec
gs
imul
push
pop
inc
arpl
dec
dec
push
imul
gs
imul
push
pop
push
push
xor
data16
fs
js
push
dec
addr16
outs
bound
inc
outs
jb
xor
imul
push
fs
jo
push
push
xor
xor
push
inc
inc
dec
data16
aaa
imul
dec
arpl
ins
gs
inc
push
ins
inc
push
xor
xor
fs
push
outs
arpl
xor
je
popa
pop
cmp
dec
xor
arpl
ins
inc
inc
aaa
inc
inc
imul
push
js
inc
inc
ins
pop
dec
fs
gs
inc
gs
pop
push
js
imul
jb
inc
jno
push
inc
jne
fs
fs
push
ins
push
jns
jns
inc
inc
data16
push
ins
pop
pop
push
jne
xor
inc
inc
dec
ins
ins
bound
inc
ins
dec
xor
dec
inc
inc
inc
dec
push
xor
dec
bound
xor
inc
ins
aaa
inc
push
inc
push
inc
pop
ins
dec
jp
ins
pop
inc
dec
inc
inc
xor
inc
pop
gs
dec
ins
inc
inc
pop
ja
inc
pop
inc
inc
jp
bound
inc
dec
dec
xor
inc
pop
jne
js
xor
ins
ins
jp
push
push
push
dec
bound
xor
das
inc
inc
inc
dec
xor
je
popa
data16
jns
ins
dec
inc
imul
xor
outs
push
xor
bound
inc
outs
inc
push
jae
dec
popa
push
pop
cmp
fs
inc
ins
jb
push
push
ins
inc
xor
jne
ja
pop
push
inc
inc
jbe
xor
dec
pop
xor
cmp
imul
xor
dec
dec
jp
jp
dec
inc
inc
addr16
je
dec
dec
xor
inc
push
inc
inc
imul
xor
inc
jne
ja
push
dec
dec
inc
inc
outs
push
push
dec
inc
je
ja
pop
sub
outs
bound
push
inc
inc
xor
dec
jb
inc
inc
outs
push
xor
inc
push
dec
inc
js
push
dec
inc
ins
jno
imul
das
push
pop
dec
jp
push
dec
xor
xor
xor
xor
inc
jbe
xor
inc
inc
inc
push
inc
inc
popa
je
xor
jb
push
inc
ins
dec
jns
inc
push
dec
aaa
inc
jp
push
dec
das
inc
inc
inc
dec
push
popa
cmp
xor
arpl
imul
ins
push
aaa
ins
xor
ins
inc
dec
push
cmp
inc
inc
imul
cmp
dec
addr16
fs
inc
ins
xor
ins
inc
inc
imul
dec
pop
dec
inc
inc
pop
xor
fs
dec
gs
ins
inc
cmp
imul
arpl
push
ss
bound
sub
inc
inc
push
xor
xor
cmp
ins
outs
bound
dec
inc
push
xor
dec
jbe
xor
outs
dec
inc
dec
push
jno
inc
pop
sub
ins
outs
push
inc
jb
ins
arpl
aaa
dec
push
inc
dec
jne
ins
push
push
aaa
push
cmp
dec
dec
pop
inc
imul
popa
push
dec
xor
xor
pop
push
dec
dec
ja
aaa
inc
bound
push
dec
inc
push
je
dec
ins
dec
jp
jno
dec
xor
ja
arpl
jno
ins
pop
dec
push
pop
jae
push
ins
outs
jne
outs
pop
push
arpl
inc
jne
ja
das
dec
inc
inc
dec
xor
dec
arpl
pop
dec
ins
arpl
dec
push
xor
xor
xor
bound
dec
sub
cmp
dec
pop
je
dec
fs
outs
dec
xor
inc
ins
gs
imul
ins
pop
pop
inc
inc
push
ins
imul
pop
pop
arpl
inc
jne
cmp
ins
das
push
inc
das
ins
pop
pop
inc
jno
jb
dec
pop
inc
dec
cmp
xor
xor
push
push
push
ins
outs
inc
xor
fs
inc
xor
jo
push
pop
outs
dec
ins
dec
dec
addr16
push
pop
arpl
push
ins
inc
ins
imul
dec
inc
pop
pop
imul
push
jb
inc
inc
inc
fs
arpl
dec
xor
jno
je
push
ins
aaa
dec
push
push
push
inc
imul
ins
pop
inc
dec
dec
cmp
jbe
pop
pop
gs
push
jp
dec
gs
ins
outs
dec
inc
pop
xor
inc
ins
aaa
cmp
fs
dec
jae
inc
push
je
xor
jbe
dec
push
ins
dec
imul
inc
popa
outs
outs
js
inc
inc
dec
inc
push
dec
ins
dec
push
jae
xor
inc
jbe
ins
dec
inc
dec
pop
xor
ins
push
dec
inc
inc
dec
bound
cmp
dec
jns
ja
outs
imul
push
cmp
popa
imul
inc
pop
push
dec
jb
sub
arpl
dec
inc
cmp
outs
inc
push
push
ins
inc
inc
ss
js
fs
dec
inc
dec
dec
pop
jb
je
pop
jae
cmp
push
outs
inc
outs
push
xor
inc
jae
inc
dec
das
jns
jbe
outs
dec
popa
dec
xor
pop
arpl
arpl
ins
outs
inc
push
jp
ins
outs
pop
imul
dec
imul
inc
cmp
push
xor
popa
dec
pop
imul
imul
jp
ins
pop
push
outs
pop
outs
pop
gs
je
outs
ins
inc
inc
pop
dec
xor
inc
ja
ins
inc
bound
inc
ja
outs
push
dec
imul
inc
dec
jbe
push
push
inc
push
jno
dec
jno
jb
das
imul
je
arpl
xor
ins
je
ins
cmp
xor
ins
popa
xor
bound
inc
fs
jbe
cmp
jbe
jno
fs
outs
dec
ins
imul
aaa
arpl
inc
inc
gs
imul
xor
imul
imul
dec
push
ins
xor
inc
cmp
dec
dec
cmp
push
outs
jbe
cmp
push
inc
inc
ins
xor
xor
ss
xor
cmp
dec
inc
inc
pop
xor
dec
dec
xor
outs
ins
ja
imul
jp
jns
ins
dec
dec
dec
jno
ins
inc
js
popa
dec
arpl
dec
dec
inc
data16
inc
popa
ins
xor
xor
push
dec
ins
ins
imul
xor
arpl
gs
dec
dec
inc
bound
xor
xor
inc
ins
dec
cmp
popa
inc
cmp
jno
dec
ins
jne
dec
fs
dec
pop
ins
je
ss
push
inc
outs
inc
push
dec
fs
inc
dec
jp
inc
dec
push
imul
arpl
push
ins
xor
xor
ins
xor
imul
inc
js
popa
dec
cmp
dec
imul
arpl
ins
ins
xor
push
imul
data16
outs
xor
arpl
gs
inc
gs
cmp
push
inc
push
gs
inc
dec
outs
jno
push
dec
jae
fs
dec
fs
pop
push
dec
inc
arpl
popa
push
gs
jne
push
aaa
xor
jae
bound
dec
gs
inc
arpl
push
xor
imul
dec
dec
dec
dec
push
je
jo
push
ss
jb
xor
xor
js
xor
push
inc
xor
inc
push
xor
push
pop
ins
pop
inc
fs
fs
xor
outs
ins
dec
inc
aaa
xor
inc
inc
inc
cmp
arpl
dec
dec
dec
push
push
push
push
je
outs
push
dec
jns
push
jne
inc
imul
das
inc
addr16
gs
inc
inc
je
push
imul
dec
jno
push
push
dec
imul
inc
inc
dec
inc
pop
push
cmp
dec
xor
gs
fs
push
ins
dec
push
ins
addr16
xor
jno
ins
ins
pop
inc
fs
push
gs
push
arpl
inc
xor
ss
ins
inc
inc
inc
pop
push
inc
dec
inc
cmp
push
xor
dec
push
xor
inc
aaa
push
ins
inc
inc
inc
push
das
data16
xor
dec
arpl
inc
push
fs
push
jae
jo
dec
inc
inc
inc
outs
outs
fs
outs
imul
push
outs
fs
aaa
inc
dec
push
fs
je
inc
ins
imul
push
dec
outs
jno
push
push
xor
cmp
pop
push
inc
arpl
push
data16
pop
aaa
inc
imul
jb
dec
bound
inc
jae
push
je
pop
imul
cmp
inc
push
push
inc
dec
push
outs
arpl
jb
inc
push
inc
arpl
dec
xor
inc
push
arpl
push
push
ins
outs
inc
inc
inc
xor
outs
inc
dec
arpl
xor
je
inc
cmp
inc
xor
arpl
jae
push
inc
arpl
outs
push
push
jns
push
arpl
inc
ins
push
push
gs
fs
push
addr16
inc
gs
pop
aaa
xor
push
push
jae
fs
fs
push
inc
push
push
inc
inc
arpl
push
push
jne
pushw
ins
dec
popa
imul
inc
inc
dec
imul
pop
jne
xor
dec
inc
jo
dec
push
pop
push
fs
dec
outs
xor
ja
ja
inc
push
push
inc
arpl
push
arpl
pop
inc
push
push
inc
pop
inc
fs
fs
push
dec
inc
aaa
outs
xor
inc
dec
jp
xor
addr16
dec
dec
popa
push
dec
jp
jbe
js
ins
push
inc
jo
xor
dec
inc
imul
push
das
inc
dec
inc
sub
je
gs
inc
ins
dec
ins
ins
push
xor
xor
inc
inc
inc
dec
push
pop
popa
cmp
ss
gs
dec
push
ins
ins
ss
outs
jb
sub
imul
dec
push
jb
inc
addr16
pop
xor
dec
pop
inc
dec
push
dec
inc
push
pop
outs
jp
pop
dec
push
arpl
inc
dec
inc
je
pop
inc
ja
cmp
push
xor
push
push
inc
ins
xor
imul
push
inc
js
xor
inc
fs
inc
push
push
push
jns
ss
cmp
dec
inc
ss
xor
xor
pop
jbe
imul
dec
dec
dec
jbe
push
inc
push
pop
ss
ins
xor
push
jo
jns
je
dec
push
jp
dec
inc
push
dec
push
xor
das
sub
inc
popa
cmp
dec
push
ja
jb
inc
imul
inc
push
push
dec
xor
dec
jb
inc
fs
dec
dec
dec
js
push
js
push
xor
push
push
arpl
imul
ja
outs
inc
outs
dec
inc
xor
je
inc
xor
popa
inc
jae
inc
dec
pop
push
push
arpl
dec
cmp
inc
imul
push
pop
inc
ins
push
outs
dec
imul
dec
je
push
ja
dec
dec
imul
push
das
outs
gs
arpl
jp
push
addr16
ja
ss
push
inc
push
push
xor
push
jno
arpl
aaa
bound
ja
push
ja
dec
jp
fs
dec
inc
push
jbe
dec
inc
dec
dec
ja
arpl
ja
cmp
inc
imul
das
inc
cmp
jp
pop
inc
arpl
push
jo
xor
inc
push
xor
push
push
imul
push
arpl
jne
imul
push
xor
je
dec
inc
push
imul
inc
js
push
push
arpl
push
push
dec
bound
dec
push
push
jo
jo
cmp
inc
xor
push
xor
inc
je
dec
cmp
xor
fs
inc
jbe
cmp
push
aaa
push
dec
jne
xor
dec
push
inc
ins
dec
dec
je
ins
cmp
imul
dec
bound
push
xor
je
cmp
arpl
push
das
push
push
push
dec
dec
xor
dec
imul
inc
jo
outs
inc
xor
push
inc
push
push
arpl
pop
dec
push
pop
inc
push
inc
pop
dec
dec
push
dec
js
inc
pop
inc
imul
push
data16
dec
push
ja
xor
dec
bound
dec
dec
push
outs
pop
xor
js
xor
inc
xor
push
dec
push
outs
xor
push
inc
inc
sub
push
outs
pop
inc
je
outs
inc
outs
dec
aaa
pop
dec
je
inc
xor
jbe
push
das
dec
addr16
inc
pop
outs
inc
push
dec
inc
inc
inc
dec
jae
inc
imul
ins
sub
outs
xor
jns
gs
push
ss
push
xor
jp
dec
push
push
push
jae
dec
inc
gs
pushw
push
xor
xor
push
fs
cmp
inc
xor
xor
xor
dec
dec
inc
dec
push
inc
jns
js
das
data16
push
jb
outs
push
outs
inc
xor
pop
arpl
jp
push
data16
push
inc
pop
ins
jb
push
inc
ins
inc
dec
pop
aaa
dec
inc
push
push
dec
xor
inc
push
inc
dec
dec
push
jb
inc
outs
xor
xor
push
addr16
ss
outs
dec
dec
inc
xor
inc
cmp
push
push
dec
push
cmp
xor
dec
inc
je
push
xor
das
addr16
jae
dec
dec
inc
jne
xor
inc
dec
push
dec
dec
push
push
jae
push
dec
je
inc
dec
dec
dec
ss
inc
push
js
ins
push
inc
pop
push
outs
dec
dec
push
xor
dec
push
ins
fs
pop
ja
das
aaa
push
xor
inc
push
push
jbe
imul
popa
ins
ins
inc
inc
xor
dec
dec
push
xor
xor
push
outs
ins
push
dec
jp
inc
xor
fs
xor
inc
push
xor
push
addr16
dec
push
push
xor
das
xor
dec
xor
jbe
jae
dec
dec
dec
push
push
xor
inc
addr16
inc
inc
dec
xor
jbe
xor
xor
dec
dec
push
xor
push
imul
gs
inc
dec
js
dec
inc
push
ja
push
sub
dec
inc
ins
ins
push
push
inc
xor
inc
push
das
push
xor
arpl
inc
dec
push
dec
inc
push
xor
xor
dec
outs
xor
pop
jns
fs
push
gs
cmp
inc
push
inc
js
xor
dec
push
inc
xor
xor
xor
ss
dec
jae
je
jp
jno
jbe
dec
gs
push
das
cmp
inc
push
inc
js
inc
dec
inc
inc
js
jno
inc
jo
pop
push
popa
outs
jns
jno
jne
dec
inc
cmp
pop
popa
inc
sub
xor
jbe
xor
inc
xor
jp
outs
imul
ss
outs
data16
arpl
inc
ins
cmp
pop
ins
das
pushw
inc
push
xor
push
push
push
jne
inc
addr16
inc
push
xor
inc
push
bound
fs
push
jae
dec
ss
xor
inc
popa
push
jae
fs
push
xor
push
push
js
gs
dec
inc
pop
jb
push
jp
addr16
arpl
push
jo
inc
arpl
dec
fs
pop
jns
addr16
xor
inc
js
addr16
xor
push
jae
dec
push
inc
js
push
dec
inc
pop
bound
imul
inc
xor
xor
cmp
push
fs
push
inc
jp
ins
ins
dec
push
dec
dec
push
ja
pop
pop
push
push
push
push
cmp
dec
push
dec
jns
imul
jns
dec
inc
dec
inc
inc
js
jno
dec
push
ja
push
jns
push
ins
jbe
jo
dec
jns
dec
push
inc
inc
dec
js
push
jbe
push
push
push
bound
pop
dec
jp
ins
imul
dec
fs
push
jp
xor
push
push
dec
dec
js
data16
inc
dec
inc
xor
dec
cmp
je
push
push
inc
js
xor
push
inc
dec
push
jae
push
outs
ins
aaa
push
dec
jae
dec
cmp
js
jae
inc
ja
dec
push
dec
push
xor
inc
dec
jae
pop
dec
aaa
push
js
jno
pop
addr16
jns
jbe
xor
outs
inc
imul
inc
xor
push
dec
imul
dec
fs
inc
push
inc
cmp
push
outs
push
xor
push
xor
jo
addr16
dec
xor
js
dec
push
push
push
das
pop
xor
xor
fs
dec
push
cmp
pop
dec
push
push
dec
push
dec
push
xor
ins
inc
xor
push
push
imul
xor
fs
dec
cmp
xor
inc
dec
jbe
outs
dec
push
dec
ins
fs
dec
aaa
dec
push
dec
imul
jne
outs
push
dec
xor
pop
inc
inc
dec
xor
pop
dec
xor
ja
pop
dec
dec
jns
inc
push
push
dec
jns
push
aaa
xor
jp
push
dec
push
push
push
pop
inc
xor
xor
imul
jns
push
push
push
dec
js
push
dec
push
jbe
xor
ins
inc
xor
dec
inc
pop
ins
push
arpl
xor
fs
xor
addr16
push
jae
popa
push
jae
push
ins
imul
cmp
inc
pop
jbe
arpl
jns
addr16
js
pop
xor
push
inc
sub
dec
dec
inc
xor
push
ja
push
push
push
xor
dec
inc
je
pop
je
push
dec
outs
fs
arpl
dec
jne
jne
inc
dec
addr16
xor
inc
jno
jb
imul
outs
ja
dec
push
push
pop
push
xor
push
dec
popa
outs
dec
push
dec
xor
push
push
pop
xor
addr16
jne
js
jne
dec
push
push
jno
xor
jo
imul
ins
js
data16
sub
dec
inc
pop
ins
cmp
inc
inc
dec
imul
sub
imul
push
xor
cmp
jns
push
xor
push
xor
ins
push
dec
push
dec
push
xor
inc
push
js
dec
dec
fs
cmp
bound
dec
cmp
das
push
jp
cmp
cmp
jae
inc
dec
jbe
outs
xor
dec
ins
fs
pop
je
inc
dec
outs
ins
ins
push
arpl
inc
pop
outs
inc
outs
popa
inc
push
dec
outs
jae
ins
dec
imul
cmp
push
push
push
push
inc
dec
ja
cmp
jo
cmp
inc
js
push
fs
push
inc
push
xor
dec
js
push
push
ja
ins
dec
push
dec
inc
dec
aaa
ja
imul
dec
xor
push
push
xor
push
je
imul
xor
jne
js
push
pop
push
inc
push
pop
ss
inc
push
cmp
xor
jne
jae
push
das
xor
dec
xor
outs
jo
pop
dec
push
sub
xor
push
push
dec
imul
dec
xor
push
inc
push
cmp
xor
imul
jb
jae
inc
xor
push
jo
xor
dec
js
jbe
push
push
xor
xor
jae
xor
inc
inc
inc
ins
js
push
push
addr16
push
ins
dec
pop
pop
imul
push
aaa
push
outs
outs
push
outs
push
outs
inc
push
pop
jo
imul
ja
ja
xor
push
xor
aaa
dec
dec
gs
imul
jo
xor
xor
bound
sub
jb
data16
jae
jne
ins
inc
push
push
dec
push
ss
push
xor
push
ss
imul
addr16
arpl
push
push
je
outs
push
dec
sub
push
dec
pop
inc
xor
imul
dec
inc
addr16
dec
xor
gs
dec
push
ins
jne
push
inc
xor
push
xor
dec
xor
pop
fs
js
inc
dec
push
ja
jno
inc
jp
arpl
cmp
cmp
inc
inc
jb
je
inc
ja
aaa
js
push
imul
ins
ja
jbe
addr16
dec
dec
dec
jns
xor
inc
inc
arpl
dec
imul
imul
outs
push
aaa
inc
aaa
cmp
dec
imul
push
dec
jbe
js
inc
pop
push
inc
jo
gs
inc
inc
push
jae
push
cmp
addr16
pop
ins
inc
inc
xor
inc
jb
xor
push
dec
jae
pop
jb
dec
push
inc
jae
inc
inc
dec
jns
arpl
ss
outs
pop
pop
popa
xor
ins
push
push
push
inc
xor
pop
jo
ins
push
dec
dec
jp
inc
push
push
pop
push
dec
inc
sub
ja
addr16
xor
xor
dec
je
outs
outs
inc
xor
xor
xor
arpl
xor
pop
dec
push
gs
push
xor
addr16
outs
jae
pop
xor
pop
jns
jne
xor
cmp
bound
imul
dec
inc
jb
push
dec
dec
inc
addr16
imul
dec
inc
ins
imul
dec
jo
inc
pop
imul
jns
imul
pop
push
cmp
inc
push
dec
inc
outs
inc
inc
inc
jb
xor
jne
dec
push
dec
push
arpl
js
pop
push
cmp
inc
inc
inc
inc
pop
xor
dec
dec
xor
inc
push
xor
push
ins
push
push
push
dec
push
pop
jo
push
push
dec
inc
cmp
xor
js
push
jne
das
push
pop
fs
arpl
push
outs
xor
push
fs
pop
pop
aaa
xor
dec
inc
inc
xor
push
addr16
xor
bound
sub
dec
dec
push
inc
xor
inc
dec
outs
push
jns
dec
push
pop
addr16
dec
je
jbe
cmp
push
js
inc
jo
inc
push
inc
inc
push
pop
dec
pop
ins
jb
inc
push
xor
inc
dec
pop
jae
push
jns
push
push
je
pop
push
xor
inc
push
dec
ins
cmp
push
das
push
ins
arpl
pop
dec
dec
jp
outs
dec
outs
xor
push
jbe
inc
imul
xor
arpl
sub
jb
dec
das
inc
cmp
jo
inc
dec
outs
dec
push
inc
js
inc
ins
ins
addr16
dec
xor
dec
inc
cmp
ss
aaa
inc
aaa
fs
push
cmp
inc
fs
jp
je
dec
push
aaa
dec
inc
push
jae
xor
xor
push
cmp
xor
bound
arpl
push
pop
imul
inc
inc
xor
arpl
ja
inc
push
inc
pop
sub
imul
je
push
jo
js
push
ins
dec
dec
inc
xor
pop
xor
cmp
push
dec
push
inc
jne
inc
imul
ins
xor
push
addr16
xor
outs
dec
xor
push
outs
push
push
xor
dec
js
push
das
dec
jae
push
das
dec
pop
cmp
dec
addr16
jns
jo
js
gs
inc
xor
dec
imul
push
dec
push
arpl
popa
inc
sub
sub
push
inc
dec
aaa
jbe
dec
dec
inc
arpl
imul
inc
push
jo
js
ja
cmp
dec
xor
bound
fs
dec
push
push
pop
inc
arpl
jne
arpl
js
ja
inc
jp
xor
imul
aaa
je
dec
imul
inc
inc
xor
push
push
pop
push
dec
cmp
xor
xor
pop
jno
imul
dec
dec
jo
pop
imul
arpl
xor
push
aaa
jbe
arpl
dec
arpl
dec
ja
push
pop
inc
xor
gs
inc
push
pop
push
push
jp
outs
xor
push
xor
jne
cmp
xor
inc
outs
ins
xor
dec
push
dec
push
imul
pop
jns
arpl
xor
ja
dec
je
xor
outs
pop
xor
inc
outs
xor
inc
push
outs
inc
push
push
gs
data16
jb
data16
fs
jne
jae
dec
xor
jo
push
push
je
push
gs
imul
dec
arpl
dec
dec
jp
xor
ins
push
arpl
xor
fs
jne
je
dec
jae
push
ja
push
cmp
jp
gs
xor
jbe
imul
push
jp
addr16
xor
js
push
dec
push
inc
jb
outs
cmp
xor
fs
ins
cmp
push
dec
jbe
xor
ins
inc
dec
push
jno
pop
outs
inc
ja
push
inc
sub
push
pop
push
xor
push
xor
push
xor
inc
xor
imul
dec
xor
je
dec
cmp
ja
xor
push
arpl
push
push
xor
aaa
pop
push
fs
sub
pop
inc
inc
push
push
jne
push
xor
je
pop
jo
xor
push
push
ins
xor
inc
addr16
dec
cmp
push
dec
das
jae
arpl
xor
push
inc
push
jo
inc
push
js
push
inc
addr16
outs
jns
xor
xor
jae
xor
dec
bound
js
inc
push
imul
jb
dec
push
inc
addr16
dec
xor
dec
dec
arpl
ja
cmp
dec
imul
popa
push
das
pop
jp
xor
cmp
inc
je
outs
push
outs
inc
dec
push
pop
push
ins
je
imul
dec
jp
push
inc
inc
inc
fs
inc
inc
xor
push
bound
outs
dec
push
push
xor
pop
inc
dec
jbe
jbe
pop
push
push
push
push
addr16
jo
fs
push
pop
inc
dec
jb
dec
arpl
cmp
sub
xor
fs
arpl
ja
inc
push
inc
inc
pop
push
ins
jns
jo
ja
jb
jb
inc
push
push
xor
arpl
jne
jp
gs
dec
xor
dec
das
gs
push
dec
inc
push
ss
push
jb
jo
push
fs
imul
jae
push
inc
xor
ins
dec
push
jno
push
push
push
ins
inc
xor
dec
jne
js
gs
dec
imul
inc
xor
push
push
push
xor
jo
push
addr16
dec
arpl
dec
dec
jp
push
xor
cmp
das
ins
ins
dec
ins
push
je
dec
arpl
xor
xor
xor
xor
jne
inc
push
dec
dec
js
outs
inc
inc
inc
addr16
js
inc
imul
ins
jno
inc
inc
arpl
cmp
push
cmp
cmp
inc
pop
dec
jp
cmp
outs
inc
xor
jo
imul
jo
outs
dec
ja
inc
dec
dec
ins
dec
gs
ins
xor
pop
xor
dec
dec
pop
jno
ins
push
push
pop
dec
inc
push
ja
xor
das
outs
das
pop
dec
xor
push
js
push
pop
inc
push
js
dec
dec
xor
inc
jo
pop
ins
dec
dec
dec
jp
push
xor
imul
dec
pop
pop
xor
xor
jae
jp
dec
je
push
cmp
xor
jno
jp
jp
jp
jno
xor
push
outs
xor
arpl
addr16
jae
inc
dec
jne
outs
ja
dec
xor
arpl
xor
imul
inc
xor
pop
js
push
imul
dec
push
dec
inc
push
cmp
imul
xor
dec
dec
js
ss
addr16
jo
fs
push
inc
push
xor
dec
inc
inc
push
pop
jns
push
inc
xor
inc
push
push
pop
inc
popa
dec
outs
push
xor
push
jbe
outs
push
das
dec
push
xor
dec
push
inc
push
xor
inc
arpl
inc
inc
dec
sub
xor
js
das
push
je
arpl
dec
push
ins
inc
jns
inc
inc
push
outs
xor
push
jo
dec
dec
ins
jp
imul
gs
jae
jbe
js
push
jb
dec
jp
jp
xor
push
dec
push
imul
dec
dec
inc
xor
imul
push
js
je
je
dec
jns
inc
arpl
push
dec
pop
jns
dec
push
jp
xor
dec
das
push
xor
data16
dec
dec
jno
je
addr16
xor
dec
xor
gs
ins
jp
js
dec
xor
inc
push
pop
dec
imul
ss
dec
fs
push
dec
push
cmp
push
cmp
ins
dec
push
das
inc
jbe
imul
dec
push
push
imul
xor
jb
push
push
outs
inc
arpl
jns
jp
cmp
push
imul
push
dec
dec
data16
das
push
push
push
fs
dec
push
imul
dec
ja
inc
push
xor
jae
ins
push
inc
dec
inc
arpl
outs
dec
jp
inc
arpl
bound
dec
push
jae
pop
inc
imul
dec
push
outs
push
push
push
push
push
aaa
pop
js
pop
cmp
inc
dec
inc
xor
push
push
jns
xor
ja
xor
push
inc
inc
ss
xor
js
dec
dec
jo
jp
dec
cmp
aaa
data16
ins
jo
jp
push
inc
push
push
jb
xor
gs
jne
xor
jne
xor
je
inc
bound
addr16
push
cmp
arpl
dec
inc
inc
inc
imul
pop
js
xor
jbe
imul
dec
push
bound
push
dec
inc
push
outs
xor
fs
push
dec
dec
dec
push
xor
inc
jns
outs
xor
cmp
ins
bound
dec
pop
push
inc
imul
inc
pop
xor
dec
push
jo
arpl
fs
data16
push
js
dec
ja
push
xor
pop
pop
inc
dec
inc
dec
cmp
dec
jns
imul
dec
js
jne
jne
dec
addr16
dec
push
pop
inc
inc
xor
pop
inc
dec
push
pop
data16
imul
gs
jne
jne
inc
push
gs
dec
push
inc
ins
aaa
push
dec
ins
inc
inc
ss
push
inc
xor
jno
xor
dec
cmp
push
inc
imul
push
jo
push
inc
push
inc
arpl
dec
xor
dec
push
xor
fs
inc
js
dec
inc
js
sub
push
arpl
push
jae
pop
imul
xor
push
dec
pop
jp
jp
popa
pop
ins
cmp
inc
jae
imul
xor
dec
ins
jo
dec
imul
xor
xor
push
jp
jb
arpl
inc
inc
pop
inc
jp
inc
pop
inc
ins
push
push
je
js
das
jbe
xor
je
dec
ss
inc
dec
gs
xor
xor
dec
inc
dec
ins
push
pop
xor
xor
imul
xor
ins
xor
pop
gs
ss
push
dec
jns
push
cmp
pop
je
push
dec
sub
inc
dec
dec
push
inc
push
outs
push
ins
push
xor
push
push
dec
dec
inc
arpl
ins
jae
dec
inc
jns
ja
cmp
inc
imul
imul
inc
ins
ins
jae
js
push
push
das
dec
push
push
dec
sub
dec
push
jae
inc
addr16
jae
inc
xor
xor
jae
push
xor
je
pop
inc
das
jb
je
dec
xor
push
bound
gs
dec
dec
push
xor
push
ja
dec
xor
pop
push
ss
jbe
jb
dec
push
dec
inc
arpl
fs
js
xor
inc
inc
ins
ins
outs
inc
xor
push
push
xor
xor
push
inc
xor
pop
fs
pop
inc
push
push
pop
push
dec
push
dec
dec
xor
pop
jbe
dec
push
dec
imul
xor
inc
push
inc
fs
inc
xor
jo
gs
jo
dec
push
pop
cmp
inc
dec
pop
pop
xor
xor
xor
arpl
popa
ja
inc
jb
js
dec
jp
sub
inc
dec
imul
xor
imul
push
push
pop
ins
fs
bound
jo
push
dec
inc
ins
cmp
addr16
inc
outs
ins
dec
jp
inc
pop
inc
inc
inc
dec
push
pop
je
inc
xor
cmp
ins
inc
push
aaa
push
xor
inc
push
inc
bound
inc
xor
cmp
push
js
xor
push
sub
sub
xor
inc
outs
inc
dec
aaa
pop
push
je
imul
dec
push
ins
xor
aaa
jo
inc
ins
ins
dec
xor
bound
push
jp
push
aaa
gs
addr16
fs
inc
ins
cmp
aaa
xor
ins
xor
push
xor
inc
pop
ins
fs
arpl
inc
xor
inc
js
jns
aaa
inc
ins
inc
dec
inc
dec
push
outs
dec
inc
push
inc
push
js
xor
push
jne
arpl
inc
je
inc
push
xor
inc
ss
fs
push
push
dec
outs
pop
ss
dec
push
ins
inc
pop
ins
inc
push
xor
ins
dec
pop
gs
xor
xor
push
push
fs
outs
ja
ins
jae
aaa
jp
dec
sub
dec
inc
pop
dec
jp
gs
pop
ins
fs
cmp
push
outs
ins
xor
xor
inc
ja
inc
bound
inc
xor
xor
dec
ins
jne
jo
fs
inc
xor
inc
ins
push
inc
pop
inc
arpl
aaa
das
dec
xor
inc
pop
inc
dec
dec
arpl
ins
cmp
xor
inc
inc
xor
ins
dec
dec
arpl
bound
inc
cmp
inc
cmp
dec
imul
fs
outs
ins
arpl
xor
fs
xor
ja
fs
pop
jb
dec
push
gs
xor
cmp
ins
push
push
xor
inc
inc
dec
inc
inc
aaa
gs
jb
addr16
dec
je
js
arpl
inc
js
push
inc
xor
inc
inc
dec
inc
pop
push
data16
jb
das
pop
bound
dec
dec
sub
jno
dec
popa
ins
pop
inc
aaa
inc
ins
dec
push
ins
inc
dec
gs
dec
inc
push
xor
imul
dec
inc
arpl
xor
ins
fs
popa
pop
inc
jbe
dec
xor
fs
dec
gs
pop
data16
dec
push
ins
push
inc
ss
xor
inc
dec
jns
js
inc
xor
xor
push
jne
push
js
push
xor
push
dec
outs
inc
imul
push
inc
inc
inc
dec
jb
push
je
dec
cmp
ins
dec
jno
xor
xor
inc
fs
dec
dec
arpl
inc
imul
pop
xor
dec
ss
addr16
push
fs
imul
pop
ins
xor
arpl
push
xor
ins
pop
inc
popa
pop
inc
gs
ins
fs
inc
ins
ins
xor
inc
ins
inc
arpl
inc
gs
dec
inc
cmp
push
pop
ja
dec
xor
ins
pop
jns
ins
inc
push
xor
inc
cmp
fs
dec
dec
inc
pop
dec
pop
dec
dec
dec
push
xor
ins
dec
xor
inc
inc
fs
dec
xor
jb
inc
inc
xor
popa
push
inc
pop
dec
inc
inc
fs
je
jns
js
push
push
dec
popa
ins
das
bound
pop
push
jb
dec
xor
fs
xor
xor
push
js
ss
xor
inc
outs
ss
inc
bound
inc
xor
xor
cmp
jo
addr16
xor
push
inc
pop
pop
outs
data16
das
dec
popa
inc
dec
push
dec
dec
dec
dec
gs
inc
fs
inc
imul
jno
inc
inc
ins
dec
dec
arpl
inc
sub
dec
xor
inc
ja
xor
fs
fs
outs
ins
inc
inc
xor
inc
gs
inc
arpl
inc
cmp
ins
pop
dec
fs
dec
gs
xor
cmp
ins
fs
xor
inc
inc
aaa
gs
jb
jo
ja
bound
cmp
dec
push
inc
jo
inc
push
xor
inc
inc
addr16
pop
jbe
outs
jbe
jbe
cmp
push
je
fs
inc
js
dec
xor
push
dec
je
imul
push
push
dec
push
dec
ja
bound
outs
dec
fs
dec
pop
xor
push
cmp
push
dec
inc
inc
push
aaa
push
inc
push
push
push
push
inc
push
dec
push
pop
pop
ins
inc
ins
dec
outs
imul
inc
xor
inc
dec
push
arpl
inc
outs
ins
push
xor
dec
inc
pop
gs
push
je
dec
ss
xor
inc
xor
xor
bound
dec
jno
arpl
ins
xor
ins
pop
jno
inc
dec
sub
push
imul
dec
popa
ins
addr16
dec
push
push
push
push
bound
xor
push
jae
popa
outs
ins
push
push
jns
inc
inc
dec
push
aaa
xor
inc
push
cmp
push
imul
ja
outs
jne
jne
imul
outs
gs
xor
push
arpl
push
cmp
jbe
imul
addr16
push
xor
dec
ins
je
pop
push
gs
inc
push
push
push
inc
push
xor
imul
inc
dec
inc
pop
outs
push
dec
push
push
push
push
popa
push
dec
inc
dec
inc
fs
je
jne
js
inc
push
fs
gs
imul
dec
ins
inc
push
push
addr16
jo
arpl
push
dec
jns
ins
outs
dec
xor
dec
inc
inc
addr16
gs
jbe
push
ja
inc
js
outs
xor
push
push
pop
imul
dec
jns
push
push
outs
dec
cmp
inc
ins
push
inc
inc
push
inc
push
jno
dec
inc
push
xor
fs
jne
je
ss
cmp
sub
cmp
ja
jb
ins
inc
gs
imul
push
inc
inc
dec
inc
ins
push
inc
fs
push
push
push
push
dec
cmp
jb
jbe
outs
inc
imul
bound
outs
outs
jo
jne
imul
cmp
imul
fs
inc
push
dec
dec
inc
jbe
push
jae
ins
imul
jne
ins
push
ins
xor
popa
push
inc
sub
popa
xor
pop
dec
imul
push
pop
push
fs
dec
jo
ins
ins
dec
dec
addr16
addr16
push
push
dec
xor
xor
bound
pop
inc
fs
ins
inc
push
jo
inc
je
jno
dec
push
xor
dec
pop
push
aaa
pop
ins
inc
dec
push
fs
dec
push
fs
push
jae
push
ins
push
inc
push
popa
push
inc
imul
sub
push
bound
jae
gs
pop
xor
outs
xor
jp
xor
inc
push
outs
push
fs
xor
inc
dec
push
push
dec
cmp
arpl
arpl
xor
xor
imul
arpl
dec
imul
dec
push
inc
ins
dec
ins
cmp
jb
push
ss
push
jp
xor
push
dec
dec
ins
jo
inc
popa
jo
push
push
push
je
dec
inc
dec
push
dec
fs
push
jp
inc
pop
dec
outs
push
inc
push
pop
dec
js
inc
push
cmp
imul
push
jo
cmp
ss
arpl
dec
push
imul
jb
outs
ss
push
popa
dec
aaa
ins
jb
xor
outs
pop
xor
dec
pop
jbe
jbe
js
inc
inc
inc
outs
imul
xor
inc
jae
pop
xor
imul
push
cmp
pop
inc
addr16
push
xor
push
inc
pop
push
push
dec
push
inc
xor
das
popa
imul
cmp
inc
ins
inc
inc
inc
push
dec
inc
xor
ins
push
bound
xor
je
imul
je
je
inc
imul
arpl
push
popa
jae
jp
imul
imul
push
popa
push
sub
inc
push
inc
pop
push
addr16
push
outs
ins
inc
arpl
pop
jo
xor
outs
pop
jbe
popa
push
je
bound
jae
imul
inc
pop
xor
outs
push
popa
dec
jae
pop
push
inc
gs
inc
push
pop
ss
pop
inc
push
dec
dec
dec
dec
jns
push
push
sub
jno
outs
push
ins
push
push
jo
push
inc
dec
jbe
gs
pop
das
pushw
je
pop
inc
je
inc
pop
pop
push
imul
ja
inc
inc
dec
pop
inc
xor
gs
pop
ins
dec
jno
aaa
ins
dec
push
bound
dec
dec
inc
dec
jp
cmp
outs
inc
dec
dec
inc
push
dec
xor
push
imul
jo
sub
pop
push
popa
dec
push
dec
fs
cmp
dec
push
jns
xor
pop
outs
dec
inc
je
inc
popa
inc
xor
addr16
outs
dec
fs
inc
inc
dec
push
inc
jae
cmp
dec
xor
sub
dec
ins
je
push
jne
ins
dec
push
outs
inc
jb
push
pop
outs
push
dec
push
inc
inc
imul
ja
push
jb
ss
addr16
je
xor
push
push
push
dec
addr16
dec
inc
dec
inc
xor
jo
pop
ins
xor
jno
inc
ins
outs
push
push
jbe
dec
inc
dec
inc
jns
dec
pop
popa
inc
push
push
inc
inc
push
outs
push
push
jae
inc
push
pop
xor
dec
xor
push
pop
jno
dec
push
fs
dec
dec
push
outs
je
push
addr16
imul
jb
jns
dec
jb
push
push
je
outs
xor
inc
dec
outs
push
imul
bound
inc
xor
push
inc
jo
pop
push
jo
imul
jb
inc
inc
outs
aaa
push
pop
gs
inc
bound
xor
sub
dec
push
imul
fs
inc
addr16
inc
xor
xor
push
push
cmp
xor
dec
ss
cmp
sub
cmp
inc
push
inc
inc
inc
ins
inc
inc
push
aaa
push
addr16
inc
inc
push
pop
dec
fs
push
push
xor
dec
das
pop
inc
jb
dec
cmp
inc
popa
jno
aaa
data16
outs
pop
dec
jno
dec
push
jae
fs
push
imul
ins
fs
dec
inc
imul
dec
data16
ins
ins
ins
push
je
jae
inc
ins
jb
inc
inc
pop
jb
push
xor
ins
outs
dec
jne
xor
jb
xor
dec
push
push
bound
outs
xor
addr16
dec
imul
push
push
inc
arpl
push
pop
xor
imul
push
push
cmp
inc
push
push
ss
jbe
outs
xor
dec
inc
xor
xor
xor
dec
inc
push
jne
js
ins
push
inc
push
imul
inc
inc
xor
inc
ins
jp
inc
push
bound
dec
gs
jae
dec
cmp
jns
push
inc
dec
dec
xor
js
ins
inc
addr16
push
jns
popa
ins
push
dec
ins
push
xor
sub
pop
dec
data16
inc
push
push
popa
outs
outs
inc
inc
ja
fs
popa
ins
inc
cmp
push
xor
jae
inc
cmp
ins
push
addr16
inc
push
push
push
push
dec
jns
inc
dec
das
ins
push
gs
push
push
ins
dec
gs
xor
pop
push
inc
ss
pop
ja
inc
push
push
imul
push
jno
pop
jo
dec
push
xor
inc
addr16
dec
ja
aaa
das
jp
xor
xor
ss
push
ins
arpl
inc
jb
je
dec
ins
dec
jae
inc
xor
arpl
jns
dec
ins
inc
xor
fs
jp
xor
push
push
push
bound
inc
ins
dec
push
inc
ins
xor
imul
inc
jae
sub
push
dec
push
push
dec
je
jae
dec
xor
arpl
ins
xor
addr16
xor
push
jb
aaa
push
push
dec
imul
pop
dec
dec
xor
dec
dec
push
jae
inc
ins
push
ins
xor
push
imul
outs
pop
push
addr16
dec
inc
inc
addr16
inc
data16
pop
ins
jae
dec
push
jo
dec
push
ins
inc
pop
push
jae
push
jo
dec
addr16
push
jo
dec
fs
push
jne
popa
js
xor
push
outs
addr16
pop
bound
dec
push
pop
push
inc
push
push
inc
je
dec
inc
xor
push
dec
aaa
ins
jns
xor
imul
push
addr16
bound
dec
push
inc
xor
outs
inc
inc
push
dec
ins
push
jp
xor
dec
inc
inc
arpl
outs
xor
ins
js
xor
push
inc
xor
dec
ins
dec
push
jns
pop
xor
xor
gs
xor
push
dec
outs
das
addr16
arpl
xor
inc
push
push
push
gs
arpl
dec
ins
dec
ins
addr16
xor
ss
xor
das
inc
ins
push
push
xor
inc
inc
xor
ins
dec
imul
imul
inc
addr16
dec
inc
pop
push
cmp
dec
xor
gs
fs
imul
arpl
aaa
xor
imul
push
arpl
xor
cmp
ins
jo
ss
dec
arpl
jp
aaa
dec
aaa
dec
dec
dec
dec
dec
pop
sub
inc
jo
outs
fs
ja
inc
push
xor
dec
pop
jo
dec
push
xor
imul
xor
arpl
ins
xor
inc
fs
inc
dec
jo
inc
gs
jns
ins
jbe
fs
dec
js
ins
je
imul
jne
imul
jbe
push
push
inc
pop
inc
fs
fs
js
ins
dec
inc
jb
jb
das
outs
xor
outs
aaa
xor
imul
dec
imul
xor
push
push
push
inc
inc
push
xor
xor
push
inc
push
addr16
dec
dec
gs
xor
inc
inc
ins
inc
inc
xor
xor
ins
push
xor
inc
imul
inc
arpl
cmp
fs
imul
inc
xor
xor
addr16
inc
inc
pop
inc
fs
gs
xor
cmp
ins
dec
push
xor
inc
inc
gs
pop
aaa
fs
inc
xor
dec
arpl
cmp
inc
push
push
inc
inc
arpl
das
gs
jbe
push
ins
dec
popa
addr16
imul
ins
push
inc
ss
ins
dec
fs
push
xor
dec
inc
push
push
fs
dec
outs
xor
ins
js
xor
push
inc
arpl
jp
xor
push
push
inc
pop
inc
fs
fs
xor
push
dec
inc
aaa
xor
inc
dec
jp
xor
addr16
dec
dec
pop
push
dec
inc
cmp
js
je
inc
push
push
push
dec
inc
imul
aaa
imul
addr16
dec
imul
inc
je
imul
imul
push
bound
inc
dec
inc
pop
push
cmp
xor
gs
fs
push
jno
jp
xor
aaa
xor
imul
push
arpl
xor
jns
push
ins
inc
arpl
jp
xor
inc
fs
pop
push
fs
imul
jae
dec
xor
popa
inc
xor
inc
imul
push
push
jbe
inc
inc
inc
inc
addr16
inc
fs
js
inc
ins
inc
ins
push
inc
xor
inc
inc
fs
push
jp
push
jb
push
push
fs
dec
dec
js
ins
je
imul
gs
imul
cmp
push
push
ins
pop
inc
fs
fs
dec
push
push
jo
aaa
xor
inc
outs
aaa
inc
dec
push
pop
imul
inc
fs
xor
push
push
push
inc
inc
inc
xor
das
dec
imul
dec
arpl
xor
inc
inc
ins
inc
inc
xor
xor
ins
push
xor
push
inc
ss
je
pop
cmp
xor
dec
xor
ins
inc
inc
pop
push
inc
inc
gs
jns
xor
ja
xor
pop
inc
fs
jno
push
xor
xor
xor
xor
push
inc
popa
inc
pop
aaa
xor
jbe
push
push
je
push
jae
push
xor
pop
popa
xor
jne
gs
je
jb
outs
outs
popa
addr16
xor
xor
imul
inc
cmp
cmp
inc
push
je
push
fs
inc
imul
ins
ins
push
xor
push
inc
pop
ins
inc
jns
dec
push
push
jo
xor
push
pop
gs
je
dec
ins
dec
inc
aaa
xor
inc
inc
push
arpl
bound
inc
dec
dec
pop
xor
fs
push
arpl
pop
imul
dec
jae
ja
das
inc
imul
dec
dec
ins
dec
js
addr16
data16
imul
xor
push
bound
push
dec
jp
aaa
push
dec
xor
cmp
push
dec
ss
jp
ss
ins
dec
arpl
aaa
gs
push
xor
xor
push
push
imul
arpl
dec
popa
inc
ins
inc
arpl
jb
ins
dec
inc
push
inc
dec
push
cmp
inc
push
dec
push
dec
push
inc
imul
cmp
push
dec
je
inc
dec
dec
fs
inc
js
inc
jbe
xor
push
imul
xor
jb
push
push
fs
jp
dec
js
outs
je
imul
push
dec
dec
xor
outs
pop
dec
push
push
push
push
push
push
push
dec
ins
arpl
ins
dec
bound
dec
fs
jp
sub
bound
push
jno
jno
cmp
jne
xor
push
push
push
inc
jp
inc
xor
das
dec
imul
dec
ja
inc
xor
inc
inc
ins
inc
imul
bound
dec
inc
pop
inc
dec
pop
outs
xor
dec
pop
xor
arpl
push
ins
inc
inc
jo
dec
push
gs
inc
push
dec
outs
pop
inc
addr16
dec
push
cmp
xor
push
push
push
jns
xor
jns
ja
gs
imul
cmp
jb
push
push
je
dec
push
push
inc
outs
pop
inc
xor
push
inc
push
dec
inc
jne
xor
popa
addr16
fs
inc
inc
dec
imul
outs
fs
push
xor
dec
inc
push
push
arpl
pop
outs
xor
dec
jae
js
inc
push
xor
inc
push
aaa
popa
dec
arpl
ins
xor
gs
dec
fs
dec
jns
imul
ins
addr16
bound
push
ss
addr16
inc
outs
ins
jne
push
arpl
inc
push
xor
pop
push
imul
das
inc
addr16
push
dec
pop
je
inc
xor
ins
dec
imul
push
je
push
xor
inc
addr16
push
imul
xor
dec
imul
ss
push
jb
xor
imul
push
arpl
push
arpl
inc
push
ins
inc
arpl
push
bound
dec
inc
js
jae
pop
push
dec
inc
inc
ins
dec
inc
cmp
push
push
inc
addr16
ins
xor
inc
imul
push
inc
dec
pop
addr16
inc
dec
gs
js
inc
ins
inc
ins
arpl
inc
inc
inc
cmp
push
xor
push
push
ja
push
push
das
dec
ja
aaa
dec
pop
push
dec
inc
bound
jb
ins
push
fs
push
inc
push
inc
js
pop
pop
dec
sub
arpl
dec
outs
xor
inc
dec
push
fs
jb
ss
inc
jae
pop
jo
jo
ins
push
inc
push
push
push
inc
inc
inc
xor
das
dec
imul
dec
arpl
xor
push
inc
jae
inc
inc
push
xor
aaa
imul
inc
imul
inc
inc
inc
xor
push
xor
imul
push
inc
inc
ins
ins
inc
jp
xor
addr16
popa
imul
push
dec
push
push
push
jns
jae
xor
xor
inc
inc
gs
dec
bound
jb
xor
push
je
fs
cmp
inc
pop
outs
pop
inc
xor
inc
inc
push
gs
jne
jbe
ins
dec
popa
ins
xor
imul
push
xor
xor
ins
dec
imul
je
dec
inc
aaa
push
outs
xor
ins
jp
pop
push
inc
aaa
pop
inc
jno
arpl
pop
inc
bound
inc
pop
inc
push
dec
inc
gs
xor
push
dec
inc
xor
inc
jae
je
pop
jns
push
dec
dec
inc
push
dec
inc
inc
inc
inc
js
xor
jo
imul
inc
imul
jb
push
addr16
push
dec
outs
gs
gs
xor
outs
xor
addr16
dec
dec
ins
push
xor
inc
addr16
dec
inc
pop
push
cmp
xor
gs
imul
arpl
aaa
xor
sub
ja
push
cmp
push
imul
push
dec
push
jo
push
jbe
inc
arpl
inc
push
dec
inc
js
dec
inc
inc
bound
jo
dec
inc
xor
xor
inc
outs
jb
ss
ins
xor
push
inc
outs
push
dec
dec
push
fs
push
xor
inc
xor
ins
push
dec
inc
inc
inc
dec
ins
push
xor
jne
push
pop
inc
imul
jbe
gs
ss
inc
pop
dec
dec
pop
imul
xor
das
inc
push
inc
ins
inc
fs
arpl
push
arpl
inc
xor
das
imul
aaa
xor
inc
je
sub
inc
dec
imul
ins
xor
inc
fs
inc
outs
gs
fs
inc
push
inc
push
outs
inc
ins
arpl
inc
cmp
push
dec
xor
push
push
pop
fs
inc
xor
je
inc
bound
inc
data16
xor
arpl
ins
inc
dec
pop
push
inc
inc
gs
inc
push
xor
xor
inc
dec
dec
fs
data16
inc
gs
dec
dec
jo
dec
dec
inc
push
inc
gs
pop
aaa
xor
inc
inc
je
jns
je
gs
push
xor
pop
inc
inc
gs
inc
das
gs
outs
das
jp
ins
inc
imul
inc
outs
dec
ins
push
dec
ss
ins
dec
gs
push
dec
push
jns
dec
inc
dec
dec
push
pop
fs
gs
jo
fs
jp
jae
js
push
push
push
inc
fs
js
push
push
dec
js
fs
fs
push
dec
gs
xor
jbe
dec
inc
push
xor
bound
arpl
push
ja
inc
dec
dec
push
bound
gs
inc
arpl
ins
ins
xor
dec
gs
ins
dec
arpl
push
inc
push
dec
js
je
arpl
dec
jbe
xor
xor
addr16
xor
bound
xor
inc
pop
push
cmp
cmp
ins
data16
je
inc
ss
imul
push
ins
fs
imul
push
inc
ja
cmp
push
ins
inc
arpl
push
js
push
ja
push
dec
inc
xor
fs
push
inc
fs
xor
push
xor
push
push
ins
dec
jbe
inc
dec
addr16
dec
inc
fs
inc
push
push
push
ins
inc
addr16
push
push
inc
inc
inc
dec
imul
push
jb
dec
dec
jp
ins
push
fs
push
inc
push
ja
ins
je
outs
pop
xor
dec
popa
jbe
ss
xor
push
inc
fs
arpl
inc
cmp
pop
pop
popa
push
aaa
jns
jp
fs
jno
jno
bound
inc
je
push
dec
je
imul
jno
push
inc
js
ins
jp
push
push
inc
xor
imul
push
xor
dec
pop
push
inc
arpl
inc
imul
ss
jp
js
push
xor
aaa
imul
je
push
dec
cmp
cmp
gs
ins
inc
dec
cmp
inc
jns
inc
jp
dec
gs
addr16
inc
inc
push
jp
das
gs
push
push
inc
push
fs
dec
push
outs
js
push
dec
ins
pop
aaa
data16
popa
xor
dec
dec
push
jne
push
ins
jne
push
pop
jno
outs
inc
xor
inc
inc
xor
dec
gs
jne
jno
imul
pop
ss
imul
imul
push
ins
dec
push
dec
inc
js
inc
jne
pop
push
dec
inc
jp
inc
push
ins
js
jo
fs
arpl
xor
pop
inc
push
push
outs
xor
push
push
gs
je
push
pop
js
xor
push
push
inc
xor
dec
popa
dec
outs
push
pop
inc
dec
inc
push
das
dec
outs
dec
xor
dec
outs
jb
dec
inc
ins
xor
push
addr16
push
dec
ja
ins
fs
push
pop
sub
imul
imul
jae
inc
inc
xor
cmp
push
push
ins
fs
dec
xor
inc
ss
bound
jno
inc
dec
outs
xor
aaa
xor
push
dec
ins
arpl
arpl
inc
arpl
sub
je
arpl
push
push
dec
inc
push
dec
inc
fs
push
fs
push
inc
js
inc
xor
dec
xor
jne
fs
dec
ja
ss
imul
bound
jae
push
inc
xor
gs
ins
push
xor
pop
xor
inc
inc
je
dec
dec
pop
inc
pop
xor
push
pop
outs
inc
ins
ins
js
push
fs
ins
ins
popa
popa
cmp
pop
inc
push
inc
bound
xor
push
inc
cmp
xor
popa
push
aaa
jns
xor
inc
jo
push
arpl
popa
push
jbe
push
jbe
imul
push
xor
inc
xor
aaa
bound
pop
ss
push
dec
xor
inc
xor
das
ss
popaw
inc
imul
push
push
dec
xor
jne
imul
dec
push
inc
ins
fs
dec
outs
data16
inc
inc
push
fs
push
xor
arpl
inc
pop
dec
outs
jns
push
xor
ins
ss
ins
dec
push
push
ss
xor
sub
jae
push
xor
sub
popa
push
jae
js
cmp
dec
xor
ins
pop
inc
push
push
bound
inc
inc
das
push
ss
push
push
outs
outs
push
bound
fs
sub
inc
dec
imul
dec
xor
dec
jp
dec
inc
ja
dec
push
pop
push
data16
push
jae
cmp
push
popa
dec
jns
jb
jns
ins
inc
xor
pop
inc
push
dec
xor
fs
xor
dec
imul
push
xor
jne
jp
das
arpl
push
push
dec
xor
jns
imul
inc
push
push
push
dec
dec
jo
dec
arpl
push
sub
pop
addr16
imul
ins
jbe
jno
inc
ss
jb
pop
ins
push
xor
inc
arpl
js
push
cmp
ja
gs
data16
jae
xor
inc
je
ins
imul
jae
xor
xor
imul
arpl
dec
dec
inc
jo
imul
ins
popa
push
outs
inc
inc
inc
imul
push
push
jp
jne
cmp
ss
xor
dec
dec
jb
xor
ss
addr16
push
push
jns
dec
pop
pop
addr16
inc
gs
inc
js
inc
imul
xor
dec
ins
push
data16
dec
dec
je
popa
push
inc
js
dec
dec
js
cmp
xor
ins
js
push
push
push
dec
push
jne
cmp
outs
xor
dec
xor
dec
dec
ins
arpl
inc
dec
inc
ss
push
aaa
xor
cmp
xor
dec
imul
jb
dec
dec
push
push
xor
inc
inc
xor
ja
inc
inc
xor
dec
js
jne
bound
bound
arpl
xor
inc
inc
ja
inc
xor
jo
fs
push
xor
ss
push
imul
push
arpl
cmp
push
inc
ins
inc
ins
dec
xor
push
gs
inc
push
push
push
inc
push
js
push
ins
popa
inc
bound
push
das
dec
inc
imul
push
push
pop
aaa
data16
sub
outs
dec
push
jp
dec
imul
dec
ins
push
inc
dec
outs
dec
xor
inc
dec
arpl
dec
push
jbe
dec
popa
jae
push
outs
push
ins
imul
dec
bound
ins
push
inc
jno
imul
imul
popa
fs
inc
outs
xor
ja
das
jne
inc
popa
inc
cmp
jp
jp
jp
inc
push
inc
js
ins
addr16
ja
fs
dec
push
push
xor
dec
push
cmp
dec
xor
dec
inc
dec
dec
dec
push
push
push
addr16
arpl
push
inc
dec
dec
ja
xor
cmp
arpl
inc
inc
jno
bound
jbe
imul
aaa
pop
dec
popa
xor
xor
ins
push
xor
push
imul
push
jb
aaa
gs
xor
aaa
imul
arpl
ss
ins
ins
inc
pop
dec
inc
cmp
push
xor
push
das
push
push
jo
ss
push
gs
jp
xor
dec
inc
inc
das
jno
sub
gs
js
push
inc
js
arpl
xor
push
ss
pop
push
push
push
ss
outs
pop
addr16
push
arpl
inc
fs
ja
jp
ja
ins
push
push
push
jb
push
inc
inc
das
dec
xor
popa
je
dec
jne
dec
ss
push
dec
imul
push
dec
push
inc
pop
inc
inc
xor
push
js
push
push
jns
ins
jo
push
js
jo
push
dec
pop
jne
push
cmp
ss
ins
push
inc
ja
js
xor
dec
inc
inc
das
ins
xor
pop
ins
ins
inc
dec
dec
arpl
push
ja
inc
inc
addr16
xor
aaa
push
xor
xor
outs
dec
gs
cmp
ja
arpl
arpl
xor
push
xor
dec
push
js
inc
inc
inc
xor
push
gs
push
inc
inc
popa
sub
inc
dec
push
xor
xor
pop
aaa
xor
xor
inc
je
dec
jb
jo
jne
cmp
arpl
ins
bound
inc
dec
inc
cmp
addr16
dec
ins
dec
popa
imul
imul
ins
push
inc
push
inc
aaa
xor
ins
push
xor
inc
imul
dec
xor
dec
outs
dec
jae
je
inc
pop
ins
ja
inc
xor
arpl
inc
cmp
inc
inc
xor
ins
das
fs
push
xor
dec
dec
inc
aaa
jno
outs
js
dec
jp
js
push
arpl
aaa
pop
push
dec
inc
xor
push
fs
ss
outs
pop
xor
cmp
push
dec
inc
xor
fs
jne
je
imul
fs
push
js
bound
inc
dec
js
push
sub
je
cmp
inc
xor
push
push
jno
push
jne
xor
outs
xor
aaa
xor
fs
dec
dec
push
dec
dec
inc
cmp
outs
xor
dec
ins
inc
dec
arpl
outs
aaa
js
xor
dec
inc
inc
inc
dec
fs
pop
imul
cmp
push
dec
jno
inc
je
ja
dec
bound
jae
dec
inc
dec
dec
inc
push
push
ins
ins
inc
addr16
xor
inc
inc
inc
xor
dec
jb
jb
js
outs
dec
bound
pop
jns
jp
ins
je
aaa
dec
xor
jb
jae
dec
jae
push
xor
ss
imul
arpl
inc
gs
ss
push
cmp
inc
jno
imul
ins
xor
fs
jbe
inc
push
inc
push
inc
pop
inc
sub
xor
jno
jae
dec
push
inc
pop
imul
push
pop
push
pop
dec
inc
inc
inc
inc
inc
xor
jne
inc
ins
push
xor
pop
inc
xor
je
dec
dec
ins
js
dec
xor
xor
push
fs
ins
pop
inc
ja
push
push
jne
jns
dec
outs
sub
bound
ins
inc
fs
push
ins
arpl
inc
cmp
aaa
push
cmp
inc
inc
xor
jb
xor
outs
sub
popa
push
jae
js
cmp
push
push
js
inc
xor
inc
cmp
das
gs
xor
jb
ins
dec
jns
jo
cmp
xor
ss
gs
xor
inc
imul
push
xor
dec
ja
popa
dec
xor
jp
dec
inc
jp
dec
ins
dec
dec
dec
outs
jbe
inc
push
push
inc
dec
fs
inc
arpl
push
inc
dec
jno
push
pop
inc
ins
push
cmp
cmp
jp
bound
ja
inc
dec
xor
bound
inc
dec
dec
dec
ja
jo
cmp
cmp
inc
push
push
push
dec
xor
inc
push
fs
jp
jno
ins
imul
push
sub
ins
addr16
outs
jbe
push
fs
push
pop
push
jne
xor
dec
inc
xor
cmp
das
dec
gs
dec
jne
push
xor
ins
imul
imul
arpl
inc
xor
inc
gs
jb
je
outs
dec
je
popa
aaa
addr16
inc
inc
push
dec
inc
ja
inc
inc
pop
push
dec
inc
je
dec
sub
ins
push
dec
push
push
xor
imul
dec
cmp
dec
inc
xor
ja
imul
inc
addr16
inc
inc
dec
xor
xor
je
je
jp
push
inc
dec
dec
push
push
gs
imul
imul
push
push
push
js
cmp
gs
xor
popa
pop
ins
dec
xor
pop
inc
dec
outs
imul
jp
dec
push
je
dec
ja
aaa
push
ins
xor
jp
cmp
inc
inc
jo
pop
gs
cmp
jne
jp
pop
imul
sub
ins
inc
inc
push
imul
imul
imul
inc
arpl
push
dec
ins
fs
ja
dec
dec
inc
dec
pop
ja
ins
inc
jp
popa
push
addr16
dec
imul
sub
ss
ss
xor
gs
das
xor
inc
inc
jns
pop
aaa
data16
pop
js
xor
push
inc
imul
dec
xor
pop
inc
push
push
inc
inc
push
dec
dec
xor
dec
aaa
xor
je
dec
ins
je
gs
inc
dec
inc
push
xor
je
fs
push
push
push
dec
inc
push
fs
dec
xor
dec
dec
ja
jno
jae
push
inc
xor
pop
inc
ja
jno
ins
inc
inc
xor
xor
inc
push
js
xor
jo
push
xor
jo
dec
jo
push
dec
inc
inc
ss
xor
outs
push
ins
push
dec
js
xor
imul
data16
inc
push
pop
dec
xor
push
ins
dec
imul
push
push
inc
push
xor
xor
dec
inc
ja
push
ins
dec
xor
dec
xor
xor
push
push
jo
push
jne
xor
outs
xor
aaa
xor
push
dec
ins
fs
arpl
inc
xor
ins
inc
xor
push
xor
outs
sub
pop
push
dec
inc
js
inc
cmp
xor
arpl
jp
dec
gs
das
dec
imul
dec
pop
inc
xor
jno
dec
push
ins
ja
ins
push
inc
push
ins
inc
inc
imul
jo
imul
dec
push
inc
push
ins
je
dec
ss
xor
dec
xor
imul
push
inc
dec
aaa
push
outs
fs
jp
das
dec
inc
push
push
dec
arpl
addr16
xor
gs
je
js
addr16
xor
dec
dec
ja
inc
inc
xor
dec
xor
dec
bound
push
jns
arpl
arpl
inc
addr16
inc
inc
xor
dec
push
xor
dec
imul
js
das
xor
arpl
push
xor
dec
inc
dec
outs
inc
jp
inc
data16
inc
dec
outs
xor
push
push
imul
dec
inc
push
xor
imul
xor
xor
inc
je
dec
jb
jo
jne
aaa
push
jbe
imul
inc
arpl
pop
jns
jbe
push
sub
ss
xor
bound
dec
imul
fs
inc
ins
push
fs
dec
push
js
ja
push
pop
dec
inc
dec
outs
xor
arpl
jo
arpl
ins
inc
xor
pop
inc
push
push
outs
xor
push
push
gs
je
push
pop
js
xor
jo
jp
xor
arpl
xor
dec
push
das
inc
push
dec
arpl
push
jb
ss
ins
ja
xor
inc
addr16
dec
xor
xor
xor
ins
dec
dec
outs
das
xor
xor
dec
popa
xor
ins
imul
dec
push
cmp
das
dec
dec
bound
imul
arpl
popa
dec
xor
jns
addr16
arpl
push
popa
js
js
das
outs
push
ins
ins
inc
xor
inc
push
dec
inc
ja
inc
push
pop
push
dec
dec
push
jbe
outs
inc
inc
pop
inc
xor
dec
imul
push
push
cmp
dec
ja
dec
addr16
push
dec
ja
js
das
arpl
dec
imul
xor
dec
push
jb
ja
ins
push
popa
push
arpl
ins
dec
js
jbe
ins
ss
cmp
ss
pop
jb
jae
dec
push
imul
push
pop
inc
ss
xor
push
inc
inc
push
jb
jp
das
dec
dec
inc
outs
aaa
xor
fs
jns
dec
je
inc
imul
push
dec
jo
xor
imul
push
bound
arpl
xor
push
inc
inc
ins
inc
inc
xor
xor
dec
fs
fs
pop
imul
dec
inc
push
cmp
cmp
fs
addr16
outs
imul
gs
inc
push
pop
das
push
cmp
inc
bound
ss
push
xor
push
inc
xor
dec
jbe
gs
imul
pop
aaa
inc
inc
ins
outs
push
jb
dec
imul
jno
inc
push
push
inc
inc
dec
push
dec
jne
jbe
dec
bound
ss
xor
bound
sub
imul
imul
dec
dec
je
jae
dec
inc
outs
bound
pop
dec
dec
addr16
imul
inc
jp
dec
pop
inc
push
push
push
pop
inc
pop
push
ins
dec
push
xor
push
jne
xor
xor
inc
arpl
xor
push
inc
dec
dec
pop
ins
dec
inc
fs
push
arpl
xor
xor
inc
xor
push
push
das
inc
ss
push
jb
addr16
jno
jae
inc
dec
push
push
ss
xor
ins
push
xor
inc
jae
dec
inc
inc
das
xor
xor
dec
imul
popa
arpl
jb
push
fs
ins
inc
ins
dec
arpl
cmp
xor
cmp
dec
ins
das
outs
imul
jb
xor
inc
dec
inc
dec
js
jne
cmp
inc
push
push
ins
dec
inc
jne
jbe
push
dec
outs
jp
inc
dec
pop
imul
outs
jp
dec
jne
dec
das
inc
js
dec
inc
pop
push
jo
cmp
inc
xor
ins
inc
push
inc
ins
js
ss
xor
ins
imul
pop
dec
push
push
xor
fs
push
inc
dec
inc
push
xor
xor
push
jo
inc
ins
popa
dec
ins
inc
cmp
push
je
fs
xor
push
push
push
inc
data16
inc
xor
aaa
aaa
imul
dec
arpl
xor
inc
outs
dec
xor
xor
xor
push
xor
popa
push
inc
je
popa
push
das
jp
aaa
xor
push
dec
push
inc
xor
dec
ins
dec
push
jp
xor
jo
inc
inc
pop
inc
arpl
jb
ins
gs
cmp
push
dec
data16
inc
ins
sub
aaa
data16
dec
push
jae
xor
dec
jb
cmp
jns
addr16
inc
xor
push
inc
push
dec
sub
outs
inc
je
push
push
push
jns
xor
xor
inc
ins
inc
dec
ins
push
xor
dec
inc
push
push
fs
push
fs
ins
ja
dec
addr16
push
jns
xor
dec
jns
inc
push
push
xor
fs
push
inc
je
push
push
jp
xor
inc
dec
jp
xor
gs
push
push
inc
js
ins
push
inc
dec
sub
ss
push
outs
arpl
push
inc
dec
bound
je
push
fs
inc
inc
ins
dec
dec
push
addr16
ss
xor
imul
push
bound
dec
push
inc
dec
push
cmp
ins
je
ins
fs
jno
push
xor
ins
jo
pop
pop
dec
imul
das
jne
inc
imul
xor
push
push
jne
ins
inc
push
inc
inc
jp
xor
xor
arpl
ja
das
dec
push
jae
push
xor
inc
pop
inc
jbe
aaa
jns
pop
xor
push
jp
arpl
addr16
inc
cmp
ja
dec
xor
inc
push
ins
push
xor
jne
push
sub
pop
inc
bound
js
jbe
xor
js
jno
dec
bound
imul
dec
push
jo
inc
push
inc
push
outs
dec
xor
push
push
dec
dec
inc
jbe
jo
push
jb
push
inc
outs
aaa
dec
jns
bound
je
data16
push
fs
xor
xor
addr16
push
inc
inc
push
push
bound
dec
imul
cmp
inc
push
addr16
inc
inc
addr16
ins
xor
xor
ja
xor
bound
dec
jp
push
push
cmp
das
arpl
je
inc
inc
xor
push
imul
jne
inc
outs
inc
jo
pop
inc
fs
ss
xor
xor
push
dec
gs
push
gs
pop
aaa
jb
jo
cmp
dec
popa
push
je
fs
cmp
inc
push
push
inc
dec
dec
inc
inc
das
gs
push
push
ins
dec
popa
addr16
xor
xor
imul
imul
ja
data16
push
data16
dec
xor
ins
dec
dec
js
xor
push
push
inc
push
das
gs
dec
sub
inc
xor
xor
inc
inc
ss
aaa
xor
ins
jb
arpl
bound
dec
dec
ja
pop
inc
inc
jo
inc
js
xor
arpl
jp
cmp
aaa
inc
imul
ss
inc
push
jb
dec
outs
fs
pop
ins
inc
jae
popa
ins
outs
imul
js
dec
push
outs
fs
bound
inc
dec
inc
pop
push
cmp
xor
gs
fs
imul
arpl
bound
dec
imul
dec
dec
push
push
xor
cmp
imul
imul
arpl
fs
push
push
dec
dec
inc
outs
dec
xor
dec
push
push
outs
pop
inc
je
dec
inc
arpl
dec
pushw
inc
ins
ja
dec
inc
imul
inc
imul
push
inc
xor
push
push
inc
push
jb
dec
jbe
cmp
fs
dec
dec
dec
js
jbe
dec
imul
inc
popa
inc
ins
imul
xor
push
pop
inc
pop
inc
fs
fs
js
inc
dec
inc
push
jno
aaa
xor
inc
outs
aaa
dec
outs
imul
ins
js
push
dec
inc
dec
jb
jo
xor
inc
inc
inc
inc
xor
sub
inc
pop
ins
imul
push
pop
inc
imul
dec
ins
inc
ins
xor
xor
je
dec
push
jb
imul
dec
jns
cmp
ja
dec
arpl
dec
ins
inc
ins
jns
inc
jns
ins
inc
js
ins
bound
inc
dec
push
push
inc
fs
jns
push
xor
xor
push
jbe
ins
push
inc
pop
aaa
push
ins
jbe
dec
bound
push
jo
fs
aaa
push
ins
push
inc
addr16
pop
push
xor
inc
inc
xor
imul
pop
pop
imul
inc
inc
dec
push
inc
dec
xor
ins
push
xor
dec
inc
push
dec
push
pop
push
jns
dec
outs
xor
dec
dec
addr16
push
xor
push
jns
ins
inc
cmp
pop
inc
push
inc
dec
dec
pop
gs
xor
je
push
inc
imul
pop
dec
inc
imul
ja
jo
push
inc
inc
inc
pop
jae
push
push
pop
dec
dec
bound
xor
sub
dec
push
jno
xor
cmp
inc
sub
jb
arpl
inc
das
jno
xor
xor
bound
inc
dec
jp
dec
xor
imul
outs
inc
inc
gs
addr16
bound
xor
ins
push
ins
xor
data16
addr16
inc
addr16
push
je
ss
push
xor
jp
xor
aaa
dec
inc
pop
push
dec
inc
dec
jbe
cmp
imul
push
inc
outs
jb
push
push
jae
addr16
push
xor
inc
js
push
imul
dec
push
cmp
inc
js
push
sub
push
ins
push
ja
gs
fs
jp
dec
ja
cmp
ins
addr16
xor
aaa
xor
cmp
ins
arpl
push
push
jo
dec
inc
push
push
push
push
data16
xor
dec
xor
inc
das
dec
inc
push
inc
dec
jne
jo
ins
ja
ins
fs
ja
xor
inc
xor
inc
jbe
push
dec
pop
dec
jns
xor
push
xor
js
cmp
cmp
bound
xor
das
aaa
dec
xor
push
push
ja
gs
cmp
data16
das
dec
jns
inc
jae
ins
xor
push
fs
xor
push
cmp
imul
dec
xor
cmp
jb
xor
xor
arpl
jno
inc
ins
push
jne
pop
data16
fs
outs
xor
push
ins
jo
jbe
push
dec
jp
push
gs
jbe
outs
inc
push
pop
fs
cmp
pop
inc
sub
push
inc
push
push
dec
inc
push
inc
gs
das
push
jae
cmp
push
inc
push
xor
cmp
inc
inc
arpl
push
inc
imul
das
imul
sub
pop
bound
dec
bound
jbe
xor
popa
jp
dec
dec
xor
gs
inc
sub
dec
xor
imul
bound
push
gs
jo
push
jae
bound
imul
push
ins
dec
imul
inc
imul
dec
inc
push
push
dec
inc
cmp
push
arpl
popa
cmp
ins
ja
dec
push
push
jno
outs
xor
pop
inc
fs
xor
js
je
jno
sub
inc
jae
pop
jns
dec
push
addr16
jne
push
fs
cmp
push
inc
push
je
push
pop
push
ins
dec
outs
imul
push
inc
jbe
inc
inc
inc
addr16
inc
fs
js
inc
push
ja
ins
push
dec
xor
inc
inc
fs
push
xor
cmp
push
ins
fs
dec
jb
fs
je
ins
inc
inc
dec
push
push
push
dec
dec
dec
imul
push
push
pop
inc
popa
jbe
gs
js
inc
push
addr16
jo
aaa
addr16
je
pop
dec
imul
ins
dec
jns
je
data16
outs
jp
ins
push
inc
cmp
dec
push
ins
push
dec
inc
xor
ss
pop
addr16
inc
jno
ins
arpl
js
inc
ss
addr16
xor
aaa
push
xor
jne
aaa
fs
dec
push
cmp
sub
bound
ins
ins
push
push
ins
inc
inc
js
dec
jp
inc
inc
dec
je
gs
das
inc
jb
push
imul
aaa
inc
ins
sub
xor
xor
je
popa
push
jb
cmp
sub
dec
push
xor
inc
js
push
gs
xor
xor
push
xor
gs
inc
xor
push
inc
ins
inc
jo
pop
data16
dec
inc
push
push
fs
push
dec
xor
dec
ins
xor
push
push
inc
xor
dec
push
arpl
push
push
jbe
imul
gs
data16
je
push
js
dec
pop
push
push
jne
push
xor
fs
dec
dec
pop
popa
push
inc
push
jne
js
push
push
inc
push
dec
push
dec
arpl
push
jo
inc
imul
inc
push
xor
imul
jbe
dec
imul
fs
push
push
xor
xor
dec
inc
inc
xor
aaa
gs
ss
dec
jae
dec
imul
dec
dec
dec
imul
jb
jb
inc
ins
inc
pop
dec
pop
jne
arpl
inc
inc
cmp
push
inc
push
ss
dec
outs
dec
push
outs
xor
inc
jo
pop
push
dec
dec
jae
gs
push
dec
push
push
dec
dec
addr16
sub
dec
xor
dec
dec
ins
inc
jno
addr16
js
push
push
outs
push
aaa
push
pop
dec
imul
xor
dec
xor
dec
dec
push
jne
jp
push
ins
xor
push
imul
jo
ins
imul
dec
inc
addr16
data16
xor
gs
popa
push
ins
inc
push
dec
jae
outs
jae
inc
inc
imul
cmp
xor
popa
inc
sub
jb
pop
push
outs
addr16
bound
dec
push
pop
push
inc
push
xor
bound
ins
push
inc
aaa
ins
imul
inc
push
aaa
push
addr16
jns
xor
inc
xor
outs
inc
inc
push
dec
ins
inc
jp
xor
cmp
imul
xor
arpl
ins
inc
inc
xor
inc
inc
data16
dec
ins
dec
push
js
outs
inc
pop
inc
fs
dec
gs
xor
ins
bound
xor
inc
dec
popa
inc
pop
aaa
gs
das
das
inc
xor
push
cmp
push
dec
cmp
dec
push
inc
inc
xor
arpl
jo
outs
pop
xor
popa
jno
cmp
inc
js
je
das
jne
ins
gs
jb
dec
push
jns
je
inc
inc
dec
push
push
cmp
pop
xor
je
addr16
outs
imul
inc
fs
dec
jae
je
dec
push
jo
imul
outs
ins
jo
dec
pop
push
inc
push
push
jns
jbe
dec
xor
js
xor
jne
outs
imul
push
push
push
jae
inc
jno
jo
xor
dec
jns
arpl
arpl
xor
ins
push
cmp
imul
dec
xor
jp
outs
cmp
cmp
xor
push
inc
inc
inc
dec
push
dec
inc
pop
push
cmp
xor
gs
dec
push
outs
push
js
dec
ins
imul
dec
push
imul
push
dec
imul
fs
ja
js
jno
pop
inc
arpl
cmp
cmp
dec
sub
dec
jno
jb
inc
xor
inc
dec
pop
jb
xor
outs
push
dec
jo
xor
push
dec
jno
jne
jne
aaa
inc
cmp
imul
inc
outs
outs
push
ins
inc
bound
dec
jp
ins
ja
js
je
ins
push
jns
push
data16
inc
dec
xor
push
inc
push
push
cmp
ins
push
jne
je
cmp
ss
push
data16
xor
pop
xor
inc
dec
push
popa
jae
xor
dec
xor
pop
pop
push
outs
jae
data16
pop
jo
push
aaa
das
pop
jns
imul
ins
push
aaa
dec
dec
jb
xor
je
sub
push
inc
pop
inc
push
imul
dec
push
push
dec
ss
cmp
dec
inc
dec
xor
dec
push
gs
push
xor
dec
jo
bound
ja
outs
push
dec
js
inc
push
sub
gs
dec
dec
dec
cmp
inc
bound
jns
sub
dec
dec
push
ins
push
popa
xor
imul
cmp
jo
jne
addr16
pop
ss
pop
arpl
xor
push
inc
bound
xor
ss
push
inc
dec
jns
dec
jno
js
popa
xor
cmp
js
das
ja
inc
dec
addr16
jns
cmp
dec
dec
jo
xor
imul
sub
arpl
cmp
ins
addr16
dec
dec
push
dec
push
push
bound
cmp
inc
push
jb
push
inc
ss
cmp
xor
push
fs
dec
inc
ss
sub
imul
arpl
jns
outs
pop
dec
dec
push
xor
dec
push
dec
pop
dec
ins
outs
xor
push
das
jns
xor
jae
push
jbe
xor
pop
inc
push
push
dec
push
push
imul
pop
jo
imul
inc
dec
inc
bound
je
inc
inc
push
aaa
pop
push
sub
xor
push
pop
push
js
inc
inc
imul
jno
jbe
ins
jno
jo
xor
inc
jo
sub
xor
xor
dec
cmp
xor
gs
inc
dec
ss
jno
dec
push
js
bound
inc
inc
sub
jne
cmp
pop
jae
je
push
xor
pop
push
cmp
das
xor
ja
push
ja
xor
inc
jae
push
push
push
push
xor
dec
push
pop
jo
pop
pop
inc
outs
aaa
dec
outs
das
push
inc
dec
je
push
inc
xor
push
push
imul
imul
ja
pop
jns
xor
dec
imul
imul
xor
dec
jno
arpl
addr16
push
xor
sub
push
jns
je
dec
dec
xor
gs
push
dec
inc
push
dec
inc
dec
dec
push
js
xor
bound
inc
ins
cmp
pop
inc
inc
das
push
push
push
pop
imul
outs
inc
jno
xor
imul
jo
dec
jb
jp
fs
xor
xor
ins
ins
dec
jns
push
popa
dec
ss
jne
push
push
push
push
inc
outs
inc
xor
dec
push
outs
dec
js
push
push
dec
das
jb
push
xor
das
xor
dec
bound
push
push
inc
js
inc
push
ja
push
imul
jae
dec
ss
ins
dec
xor
pop
jae
jno
jb
dec
xor
ins
push
push
push
outs
xor
imul
ins
xor
inc
push
imul
bound
dec
outs
addr16
push
push
dec
xor
dec
je
push
dec
je
xor
cmp
gs
imul
inc
inc
jp
popa
imul
push
jo
push
push
push
bound
gs
das
jb
push
popa
aaa
xor
js
ss
aaa
xor
inc
imul
push
jbe
imul
das
jno
js
aaa
addr16
jno
pop
popa
je
xor
push
outs
push
inc
xor
pop
dec
jo
push
cmp
dec
jne
xor
je
outs
jns
cmp
sub
push
ins
cmp
ins
aaa
inc
inc
ins
das
das
dec
jns
bound
jae
jbe
push
je
jb
push
push
xor
jns
das
jo
das
sub
dec
jae
xor
dec
ja
bound
gs
jne
aaa
push
das
bound
bound
fs
inc
addr16
popa
sub
jb
inc
cmp
dec
dec
dec
inc
addr16
jns
dec
ja
bound
inc
pop
cmp
inc
cmp
ja
dec
ss
imul
xor
push
xor
xor
jbe
dec
xor
jo
js
jbe
push
dec
dec
push
push
inc
sub
cmp
aaa
pop
dec
inc
push
jne
push
je
dec
arpl
push
imul
ins
xor
pop
push
push
dec
dec
js
dec
inc
imul
inc
push
pop
dec
dec
addr16
jp
addr16
pop
js
xor
imul
dec
dec
cmp
dec
push
dec
inc
inc
je
push
push
push
pop
dec
pop
inc
jae
cmp
push
dec
inc
jne
push
gs
cmp
outs
addr16
jns
inc
ins
jno
xor
push
xor
dec
ins
xor
pop
ins
arpl
dec
xor
jbe
dec
jae
inc
ins
imul
xor
inc
sub
jae
outs
push
push
push
aaa
inc
ins
jbe
aaa
dec
pop
pop
fs
inc
inc
ins
imul
jno
dec
je
xor
jno
dec
push
push
imul
js
xor
push
dec
jp
jno
pop
xor
jno
jno
jb
dec
inc
inc
xor
outs
sub
dec
inc
inc
push
inc
push
das
inc
das
pop
ja
ins
aaa
arpl
xor
imul
push
inc
imul
bound
push
jbe
jns
jae
jno
push
jns
xor
push
aaa
inc
arpl
imul
outs
js
ja
pop
jae
inc
outs
dec
jns
ss
addr16
sub
jbe
addr16
dec
dec
jb
jno
jne
ss
inc
jp
aaa
xor
push
jae
pop
dec
ins
xor
push
addr16
dec
xor
arpl
jp
imul
inc
cmp
dec
dec
xor
bound
sub
jbe
push
imul
inc
push
ja
aaa
xor
xor
sub
inc
push
popa
xor
push
ins
jp
ss
push
popa
push
inc
outs
dec
jns
dec
aaa
push
sub
je
inc
push
dec
xor
popa
sub
ss
dec
xor
pop
jae
xor
jno
addr16
jp
arpl
jp
push
pop
inc
inc
dec
push
pop
xor
xor
xor
jae
sub
ja
gs
imul
xor
dec
dec
push
xor
cmp
jb
dec
fs
ss
dec
push
pop
jbe
dec
push
addr16
inc
dec
jo
ss
dec
inc
ins
outs
aaa
push
push
push
xor
ja
dec
je
popa
push
cmp
xor
arpl
inc
ins
arpl
dec
inc
ins
push
dec
ja
dec
popa
js
inc
inc
inc
pop
inc
fs
dec
gs
xor
das
outs
push
addr16
dec
sub
aaa
cmp
push
imul
inc
xor
inc
push
push
inc
inc
jae
inc
das
xor
popa
jbe
ss
dec
addr16
fs
jae
inc
ss
ins
inc
je
push
xor
dec
inc
push
cmp
pop
dec
outs
xor
ins
js
xor
push
inc
arpl
jp
xor
push
inc
cmp
pop
pop
xor
inc
push
outs
outs
push
dec
inc
push
xor
inc
dec
jp
bound
inc
dec
xor
inc
jne
js
dec
push
inc
push
push
push
dec
dec
inc
imul
inc
das
inc
addr16
push
aaa
pop
addr16
jne
imul
dec
ins
dec
imul
inc
ins
push
xor
inc
addr16
dec
jp
push
cmp
xor
gs
imul
inc
ins
imul
xor
imul
push
pop
gs
xor
cmp
ins
inc
jbe
push
inc
inc
inc
jns
fs
dec
inc
xor
push
dec
inc
inc
jne
cmp
push
inc
dec
ins
fs
cmp
ins
dec
xor
jbe
aaa
push
push
dec
inc
dec
dec
arpl
inc
xor
js
jb
inc
dec
ins
inc
xor
jne
inc
xor
outs
bound
jb
dec
inc
xor
sub
dec
push
push
pop
dec
je
ss
jbe
cmp
bound
inc
jb
push
pop
pop
aaa
inc
je
gs
pop
inc
gs
pop
inc
dec
inc
aaa
ins
je
jns
xor
inc
addr16
pop
xor
ss
outs
push
inc
jne
dec
pop
push
ins
xor
push
push
inc
dec
inc
pop
pop
push
das
das
bound
jns
push
inc
dec
je
cmp
push
dec
inc
push
xor
sub
js
xor
ins
push
dec
push
aaa
bound
inc
ins
jb
sub
inc
xor
fs
dec
fs
dec
ins
dec
push
xor
inc
inc
xor
push
push
bound
dec
inc
push
xor
fs
xor
ins
push
jb
dec
dec
ins
push
data16
inc
xor
aaa
push
bound
dec
inc
dec
jo
sub
jne
cmp
push
inc
xor
ja
dec
ja
xor
push
push
jbe
dec
inc
xor
dec
je
inc
gs
push
ins
inc
dec
dec
ins
js
jno
ins
dec
xor
xor
dec
inc
dec
inc
xor
sub
dec
sub
dec
dec
dec
xor
jno
je
push
inc
imul
dec
push
pop
push
dec
inc
fs
inc
outs
dec
dec
inc
je
jbe
dec
push
push
xor
inc
inc
jp
xor
xor
pop
inc
push
dec
inc
inc
jne
push
inc
ins
push
inc
xor
push
push
popa
dec
inc
dec
outs
inc
imul
xor
imul
fs
gs
inc
inc
dec
ins
pop
ss
push
xor
xor
ins
push
xor
bound
inc
dec
push
push
cmp
jns
inc
arpl
ss
jns
outs
dec
imul
ins
aaa
bound
pop
jo
inc
dec
push
dec
pop
arpl
inc
gs
inc
inc
cmp
ins
dec
push
ins
js
xor
push
ja
inc
jns
inc
inc
push
inc
inc
jne
je
ins
push
inc
pop
ins
push
xor
outs
dec
ins
inc
inc
cmp
push
bound
outs
xor
gs
push
pop
ins
pop
ins
push
inc
ja
ins
bound
jbe
inc
xor
jno
inc
dec
dec
push
push
ss
push
dec
push
push
jno
ins
dec
jb
jp
jo
inc
ins
inc
cmp
outs
inc
imul
ins
push
jb
ins
xor
inc
jb
xor
outs
ss
outs
inc
jns
jbe
inc
jne
dec
xor
ins
xor
push
push
imul
das
dec
imul
dec
pop
gs
ins
arpl
inc
dec
imul
push
xor
ins
push
pop
fs
bound
inc
ins
jb
push
cmp
dec
cmp
arpl
inc
imul
sub
gs
push
ins
pop
inc
addr16
inc
ins
fs
fs
jno
push
xor
dec
js
dec
jbe
addr16
push
gs
outs
bound
jno
push
inc
outs
dec
popa
dec
je
fs
cmp
jns
push
push
xor
inc
inc
push
popa
push
jbe
push
dec
ins
dec
popa
js
pop
je
jae
gs
inc
pop
imul
dec
outs
pop
xor
dec
inc
push
push
arpl
jae
pop
xor
inc
inc
ins
xor
push
push
inc
cmp
jp
imul
inc
inc
pop
inc
fs
fs
jo
inc
je
pop
ins
dec
push
aaa
dec
xor
dec
dec
jp
xor
push
addr16
gs
pop
dec
dec
dec
cmp
push
jo
xor
dec
jb
jne
arpl
push
addr16
inc
aaa
fs
jno
push
gs
dec
ins
ins
imul
xor
ins
push
dec
pop
xor
imul
arpl
cmp
dec
sub
inc
fs
ins
ins
ins
push
sub
ins
dec
pop
ins
push
pop
arpl
ins
inc
je
fs
fs
pop
arpl
outs
cmp
ins
ins
jbe
push
ins
inc
pop
inc
dec
push
bound
inc
ins
inc
gs
arpl
inc
pop
jne
dec
pop
pop
push
inc
ins
ins
dec
xor
push
ins
dec
popa
inc
sub
pop
push
push
push
outs
inc
pop
xor
inc
pop
gs
push
inc
cmp
imul
cmp
push
ins
dec
pop
inc
push
jb
ins
inc
jp
inc
push
fs
push
push
inc
inc
pop
imul
js
imul
popa
ins
imul
inc
inc
inc
inc
pop
imul
inc
inc
bound
outs
ins
jae
das
sub
jb
inc
pop
bound
bound
inc
xor
xor
jne
xor
je
xor
cmp
push
inc
push
dec
popa
jp
dec
jne
inc
inc
push
push
dec
cmp
inc
inc
pop
jns
ja
ins
popa
ins
push
ins
dec
pop
inc
jno
xor
ins
aaa
push
cmp
jp
xor
ins
xor
sub
push
ins
pop
jp
cmp
ins
inc
inc
pop
inc
fs
popa
inc
push
inc
popa
cmp
ins
jb
xor
inc
inc
gs
xor
arpl
je
pop
xor
jne
cmp
push
dec
je
data16
ins
inc
das
gs
jbe
aaa
inc
push
pop
gs
je
pop
gs
popa
inc
inc
dec
imul
jo
push
outs
gs
dec
push
popa
inc
fs
xor
dec
imul
dec
js
xor
push
dec
inc
ins
ja
push
jne
inc
outs
inc
dec
dec
push
inc
fs
fs
xor
push
ins
dec
push
xor
cmp
inc
dec
jp
js
dec
outs
dec
addr16
pop
push
dec
inc
dec
dec
inc
js
ins
push
dec
ins
ins
gs
jae
push
dec
pop
inc
xor
pop
push
das
inc
addr16
js
xor
imul
ins
dec
imul
dec
outs
xor
inc
addr16
dec
inc
pop
push
cmp
push
xor
bound
push
dec
push
ins
push
bound
push
jbe
inc
ins
ins
pop
inc
fs
arpl
inc
inc
cmp
push
sub
inc
jae
pop
jp
xor
dec
pop
js
ins
dec
push
push
jne
sub
push
inc
push
inc
ins
push
inc
dec
imul
inc
das
push
inc
dec
popa
ins
dec
inc
dec
pop
push
push
push
push
inc
xor
inc
dec
push
ins
pop
pop
inc
dec
jb
jo
push
dec
push
push
fs
dec
jae
cmp
pop
jno
js
xor
ins
imul
xor
push
inc
inc
push
pop
inc
fs
fs
js
inc
dec
dec
aaa
cmp
bound
dec
xor
inc
outs
aaa
xor
jne
arpl
ins
jae
jo
addr16
gs
push
inc
push
push
push
push
jb
xor
dec
imul
inc
inc
xor
inc
push
outs
ins
jbe
outs
inc
xor
ins
xor
pop
popa
xor
dec
je
pop
inc
ja
arpl
cmp
inc
pop
push
push
ja
inc
dec
gs
inc
jp
xor
imul
inc
bound
gs
dec
inc
cmp
ins
jo
pop
push
inc
push
jno
pop
bound
ins
dec
push
inc
jbe
push
outs
push
inc
inc
push
pop
inc
xor
dec
ins
push
inc
pop
jbe
jb
cmp
addr16
fs
dec
sub
cmp
push
ins
aaa
outs
outs
pop
fs
push
xor
dec
dec
push
inc
push
jbe
push
fs
push
xor
dec
dec
imul
jns
dec
push
inc
push
ins
xor
xor
push
ja
aaa
dec
dec
je
push
pop
fs
push
push
dec
inc
xor
dec
pop
push
pop
xor
cmp
pop
push
dec
dec
inc
ins
ja
das
dec
push
inc
jo
aaa
dec
fs
push
dec
inc
inc
push
cmp
pop
push
inc
push
jb
ja
fs
push
push
jne
outs
xor
inc
xor
push
xor
dec
jae
push
push
fs
xor
ss
fs
imul
outs
ins
imul
pop
dec
ins
inc
outs
push
push
push
fs
xor
inc
arpl
dec
xor
data16
dec
ins
dec
push
dec
dec
push
inc
dec
dec
push
inc
dec
js
push
dec
dec
push
imul
outs
inc
inc
xor
ins
dec
inc
inc
aaa
push
imul
dec
ins
xor
dec
dec
xor
jae
dec
outs
outs
inc
push
ss
xor
jae
dec
dec
dec
inc
jbe
push
fs
dec
push
imul
imul
xor
dec
aaa
data16
dec
dec
inc
push
pop
jo
dec
push
arpl
dec
xor
bound
push
xor
dec
aaa
jb
inc
bound
inc
sub
jo
inc
dec
jbe
jo
imul
imul
pop
push
inc
dec
dec
pop
outs
fs
dec
xor
push
pop
js
dec
dec
pop
ins
arpl
xor
push
xor
xor
inc
outs
arpl
bound
sub
pop
cmp
push
jb
arpl
fs
ja
push
push
xor
inc
popa
ins
ins
jo
fs
pop
push
xor
ins
pop
push
fs
xor
gs
cmp
jp
xor
inc
push
dec
dec
jbe
imul
inc
push
dec
popa
inc
je
ins
je
dec
xor
dec
ins
push
xor
inc
aaa
das
imul
inc
ins
outs
fs
je
inc
popa
dec
xor
jne
cmp
push
ins
bound
cmp
gs
dec
inc
cmp
push
pop
jo
pushw
inc
xor
dec
push
push
push
dec
outs
inc
push
cmp
jb
push
xor
fs
pop
popa
jae
inc
dec
push
xor
inc
push
push
arpl
push
inc
addr16
pop
xor
je
arpl
inc
push
addr16
cmp
dec
xor
das
inc
xor
xor
pop
dec
je
sub
ins
bound
data16
inc
ss
inc
xor
inc
bound
inc
addr16
pop
inc
cmp
jb
arpl
inc
gs
cmp
inc
pop
push
aaa
pop
inc
pop
push
popa
inc
xor
fs
dec
bound
popa
inc
cmp
cmp
js
inc
ja
dec
inc
popa
dec
dec
pop
dec
inc
jb
gs
jo
pop
arpl
pop
push
inc
das
dec
ins
dec
dec
dec
xor
push
push
pop
xor
xor
dec
data16
pop
xor
popa
cmp
push
xor
push
inc
push
fs
jb
xor
pop
push
fs
bound
push
push
inc
je
xor
dec
js
push
fs
outs
xor
dec
pop
push
jbe
push
xor
dec
xor
push
pop
dec
dec
outs
xor
aaa
jp
xor
dec
inc
jb
inc
bound
dec
push
push
popa
push
arpl
dec
push
imul
push
xor
jae
inc
inc
push
pop
push
sub
push
inc
outs
xor
xor
outs
inc
outs
arpl
bound
inc
pop
aaa
bound
inc
dec
fs
imul
aaa
xor
outs
sub
pop
ins
xor
xor
outs
dec
data16
arpl
jbe
imul
xor
xor
fs
jb
xor
xor
dec
jbe
dec
fs
push
dec
je
cmp
sub
ja
das
das
push
aaa
jbe
jbe
dec
pop
push
dec
je
js
push
pop
push
jb
dec
jne
jno
xor
dec
js
push
pop
push
aaa
dec
inc
je
dec
push
dec
sub
dec
push
pop
push
dec
dec
inc
jae
dec
inc
xor
push
inc
ja
dec
push
dec
bound
jbe
xor
push
jne
dec
push
arpl
jo
jb
inc
push
outs
jae
xor
dec
push
inc
jae
push
cmp
jae
dec
xor
js
inc
push
dec
outs
push
ss
push
push
jp
addr16
push
push
das
xor
push
aaa
push
push
imul
dec
ins
dec
ins
ins
ja
sub
inc
xor
outs
gs
inc
addr16
push
jp
inc
cmp
dec
bound
fs
inc
ins
inc
inc
cmp
push
xor
aaa
pop
arpl
gs
aaa
xor
fs
pop
gs
ins
arpl
inc
push
ins
ins
imul
jp
jne
addr16
push
dec
js
jne
cmp
xor
gs
xor
inc
jae
arpl
push
jb
inc
xor
dec
inc
push
gs
inc
arpl
inc
imul
dec
inc
inc
push
ins
pop
xor
jb
xor
push
push
xor
push
dec
dec
push
imul
gs
imul
pop
ins
pop
xor
dec
fs
inc
arpl
inc
push
jo
aaa
xor
dec
fs
outs
bound
bound
inc
je
popa
push
je
fs
jo
inc
push
inc
push
push
push
inc
inc
inc
xor
das
dec
imul
push
imul
arpl
inc
outs
ins
inc
inc
xor
xor
ins
push
xor
inc
ins
inc
cmp
popa
push
cmp
cmp
fs
ins
inc
inc
xor
inc
inc
gs
inc
push
arpl
pop
inc
addr16
inc
inc
pop
inc
fs
gs
xor
cmp
ins
dec
push
xor
inc
inc
gs
pop
aaa
xor
push
push
je
fs
dec
fs
push
dec
inc
ins
pop
inc
xor
inc
outs
push
gs
jbe
jbe
ins
outs
popa
ins
je
dec
gs
xor
push
ins
push
inc
ss
ins
dec
jo
push
dec
pop
dec
dec
dec
inc
push
dec
gs
js
addr16
push
push
ins
xor
xor
dec
ins
inc
push
arpl
bound
inc
addr16
inc
arpl
js
aaa
inc
jae
dec
js
xor
ins
gs
jae
arpl
inc
push
popa
dec
ins
push
jae
jo
inc
push
push
push
popa
pop
outs
outs
dec
inc
jp
dec
addr16
inc
outs
dec
xor
inc
das
inc
push
xor
jp
push
dec
arpl
xor
xor
ins
xor
jp
xor
push
dec
xor
jo
push
xor
jp
dec
push
xor
push
inc
inc
pop
bound
addr16
outs
das
arpl
das
pop
push
dec
das
jb
xor
dec
inc
xor
xor
push
xor
dec
jo
ins
xor
push
popa
push
pop
outs
ins
push
push
push
push
gs
imul
push
inc
dec
jp
push
inc
xor
xor
jo
js
pop
push
addr16
outs
pop
imul
ja
outs
js
dec
push
je
arpl
push
dec
addr16
ins
jb
jae
js
dec
xor
ins
arpl
imul
pop
inc
ss
das
dec
fs
das
cmp
das
xor
dec
push
push
push
push
gs
outs
ins
jae
inc
inc
inc
jns
gs
jae
pop
xor
bound
dec
outs
xor
data16
inc
push
bound
gs
dec
dec
push
xor
push
jae
dec
inc
sub
push
push
xor
dec
xor
push
ss
gs
push
push
ins
push
push
jns
push
arpl
ja
push
dec
imul
dec
dec
push
outs
push
dec
xor
push
ins
dec
inc
fs
pop
push
sub
imul
pop
inc
jae
push
push
arpl
xor
dec
cmp
outs
dec
pop
push
xor
jbe
dec
dec
push
xor
push
inc
push
sub
cmp
addr16
pop
inc
dec
js
imul
ss
push
das
outs
xor
inc
outs
dec
je
pop
gs
pop
arpl
dec
dec
push
ins
inc
sub
dec
dec
inc
dec
ss
imul
dec
push
xor
push
dec
cmp
push
push
inc
xor
outs
jo
dec
imul
xor
push
dec
inc
dec
ins
inc
dec
arpl
pushw
xor
push
pop
inc
sub
push
arpl
push
dec
inc
xor
jne
sub
xor
outs
pop
dec
inc
push
push
push
xor
inc
cmp
xor
xor
push
dec
arpl
xor
aaa
xor
inc
sub
imul
ss
addr16
arpl
dec
addr16
ins
inc
push
je
push
push
push
arpl
inc
dec
inc
cmp
das
push
aaa
fs
arpl
das
dec
push
popa
dec
jne
jb
jp
jne
cmp
inc
jns
xor
imul
fs
push
push
popa
push
push
inc
imul
cmp
arpl
fs
push
push
push
push
inc
dec
inc
arpl
gs
outs
das
pop
dec
xor
pop
inc
push
dec
push
outs
inc
gs
dec
push
jbe
push
je
push
inc
ins
ins
pop
inc
outs
inc
dec
js
ss
addr16
xor
xor
xor
push
pop
inc
dec
je
jbe
je
jb
dec
pop
outs
xor
je
pop
dec
data16
push
push
imul
xor
jae
xor
xor
sub
dec
dec
inc
xor
dec
dec
dec
jne
jb
inc
push
push
push
push
jne
dec
inc
push
push
jae
ins
ins
arpl
push
aaa
inc
pop
inc
data16
jne
ja
outs
xor
fs
imul
pop
push
xor
push
dec
inc
push
ja
inc
push
inc
xor
xor
imul
inc
push
je
pop
push
dec
sub
aaa
dec
fs
imul
js
fs
inc
dec
xor
pop
jno
sub
push
push
xor
aaa
dec
inc
je
push
jb
jae
xor
imul
aaa
aaa
dec
xor
outs
push
inc
push
xor
push
ins
ins
fs
inc
xor
cmp
jp
push
pop
jae
xor
jp
inc
push
xor
gs
dec
dec
inc
push
ss
push
pop
push
dec
arpl
jp
dec
imul
push
js
jo
dec
xor
inc
xor
dec
inc
imul
inc
push
push
ja
jno
push
inc
xor
cmp
push
push
xor
pop
dec
push
push
push
jae
pop
push
pop
jo
cmp
popa
gs
das
inc
jo
imul
jno
dec
pop
outs
js
push
xor
pop
jno
dec
push
aaa
push
inc
jb
inc
pop
inc
dec
push
xor
push
dec
push
das
push
pop
push
je
push
cmp
imul
dec
dec
das
push
inc
js
dec
jp
dec
dec
ja
js
imul
push
xor
jae
push
push
jns
inc
imul
inc
pop
push
push
dec
js
bound
dec
push
imul
arpl
cmp
dec
outs
cmp
xor
push
inc
ins
dec
push
ins
dec
gs
dec
dec
js
xor
dec
jp
xor
addr16
push
ja
ja
inc
arpl
jbe
fs
push
outs
push
pop
dec
ins
js
xor
das
xor
xor
dec
inc
inc
cmp
dec
push
dec
ins
push
xor
push
inc
gs
arpl
xor
push
sub
inc
sub
js
outs
cmp
arpl
outs
push
dec
push
dec
jo
inc
cmp
dec
ins
pop
js
imul
dec
inc
dec
addr16
aaa
dec
jno
inc
dec
imul
popa
jns
inc
jo
dec
push
dec
inc
dec
ins
inc
push
jbe
xor
js
inc
xor
xor
ins
push
pop
push
cmp
inc
push
push
dec
fs
push
xor
inc
inc
xor
bound
dec
arpl
push
pop
push
inc
inc
inc
pop
jp
cmp
ja
outs
imul
push
js
dec
popa
xor
push
dec
push
xor
inc
js
js
dec
push
jns
jo
ja
jo
ins
das
jp
push
xor
jae
sub
dec
outs
dec
push
inc
jo
dec
dec
inc
inc
ss
push
addr16
pop
pop
js
dec
jb
dec
jp
imul
inc
dec
outs
push
js
dec
xor
push
push
addr16
inc
imul
dec
js
push
push
imul
xor
push
dec
inc
jne
push
jbe
inc
ins
inc
bound
addr16
dec
ins
push
push
push
dec
inc
push
dec
push
inc
dec
inc
xor
cmp
push
dec
popa
jp
js
inc
outs
xor
data16
xor
xor
dec
js
cmp
aaa
push
jbe
outs
inc
push
push
dec
push
dec
push
dec
jns
js
xor
push
dec
pop
inc
inc
arpl
cmp
cmp
popa
fs
dec
push
pop
dec
jbe
xor
inc
dec
jns
xor
outs
push
jp
inc
push
aaa
push
inc
aaa
inc
xor
push
bound
cmp
push
xor
addr16
jb
dec
dec
push
inc
inc
push
ja
aaa
dec
xor
outs
dec
dec
arpl
imul
push
push
arpl
dec
popa
js
inc
dec
dec
js
push
xor
inc
dec
push
xor
pop
inc
ins
dec
jbe
dec
ja
xor
ins
je
jbe
inc
das
push
push
cmp
inc
inc
push
xor
dec
jo
js
gs
pop
push
push
js
jns
push
jae
arpl
popa
inc
cmp
xor
imul
dec
inc
xor
inc
cmp
dec
dec
imul
dec
jb
dec
xor
push
pop
je
popa
push
ja
inc
push
ins
jne
push
dec
inc
js
jae
jp
js
push
sub
xor
outs
dec
dec
pop
inc
ins
xor
xor
inc
pop
inc
push
xor
xor
js
push
push
inc
push
ja
dec
xor
js
fs
xor
jno
jns
xor
pop
bound
xor
js
bound
dec
push
pop
inc
inc
push
je
push
inc
dec
jno
jo
xor
xor
ja
inc
xor
aaa
xor
dec
jo
gs
inc
dec
inc
jne
xor
push
dec
addr16
ss
imul
dec
cmp
xor
inc
xor
inc
cmp
inc
xor
dec
push
dec
pop
ins
jo
push
jae
inc
dec
jae
cmp
jne
inc
push
inc
ss
xor
jp
xor
inc
xor
dec
dec
xor
dec
dec
pop
ins
dec
inc
push
inc
inc
dec
imul
dec
popa
gs
cmp
cmp
inc
jb
je
dec
xor
xor
cmp
jne
xor
xor
jne
dec
ins
inc
addr16
jae
imul
je
je
dec
addr16
je
jae
push
dec
ins
das
aaa
arpl
dec
jns
xor
dec
xor
inc
inc
push
dec
ja
aaa
jo
push
push
push
jne
push
xor
push
inc
pop
push
push
xor
pop
jno
inc
inc
push
inc
inc
inc
inc
cmp
cmp
dec
inc
ja
dec
xor
xor
addr16
inc
cmp
dec
jp
ins
push
imul
push
inc
push
inc
xor
dec
ins
ins
push
ja
push
jo
pop
pop
imul
addr16
inc
arpl
push
dec
push
push
das
sub
jbe
imul
inc
dec
popaw
js
jp
jo
inc
cmp
push
pop
dec
jo
push
imul
dec
push
push
dec
dec
inc
dec
gs
bound
push
push
dec
cmp
inc
push
jno
inc
xor
push
push
pop
ins
das
dec
ss
inc
push
pop
push
push
dec
xor
jae
xor
push
imul
inc
dec
push
dec
inc
inc
xor
data16
imul
inc
push
js
inc
inc
pop
push
push
imul
dec
dec
push
xor
dec
fs
addr16
push
ja
cmp
ja
push
fs
jns
push
push
jo
jae
push
jns
je
cmp
jae
cmp
inc
dec
push
pop
inc
inc
xor
bound
jns
jo
aaa
sub
dec
xor
das
xor
outs
push
push
inc
outs
ins
xor
outs
dec
inc
push
ja
push
outs
jo
pop
push
inc
cmp
jp
push
dec
push
pop
push
imul
dec
fs
push
inc
dec
pop
push
push
dec
ja
je
das
dec
outs
ins
je
inc
pop
inc
jb
ins
pop
arpl
push
ins
ins
push
bound
jno
sub
pop
push
imul
push
dec
dec
push
jo
outs
arpl
dec
dec
imul
imul
outs
inc
cmp
jno
push
aaa
outs
xor
jp
push
jp
inc
dec
ins
imul
push
xor
push
inc
push
push
inc
inc
dec
push
xor
imul
push
imul
inc
dec
das
outs
outs
sub
inc
dec
pop
jno
ins
fs
imul
xor
push
cmp
inc
inc
inc
dec
push
bound
js
outs
cmp
push
dec
dec
inc
xor
arpl
ja
inc
push
inc
push
sub
push
push
xor
jne
gs
pop
dec
push
dec
dec
jae
xor
ja
ins
dec
dec
push
je
bound
inc
push
jns
ja
inc
ja
xor
push
dec
popa
jno
dec
push
inc
cmp
outs
je
jbe
dec
jae
inc
cmp
ins
dec
jbe
xor
push
xor
dec
je
xor
push
inc
push
dec
js
sub
outs
cmp
inc
inc
dec
dec
jb
xor
xor
dec
cmp
dec
jns
inc
imul
addr16
outs
js
push
imul
outs
gs
dec
js
xor
pop
push
xor
dec
ins
inc
inc
dec
push
xor
pop
push
ins
push
push
jb
aaa
inc
inc
inc
inc
fs
inc
je
inc
inc
inc
inc
pop
xor
dec
push
js
push
outs
fs
push
aaa
dec
ja
dec
addr16
xor
dec
xor
inc
push
inc
jae
inc
js
pop
imul
inc
cmp
dec
push
push
dec
inc
inc
inc
xor
arpl
outs
pop
jo
push
xor
dec
dec
xor
gs
push
addr16
je
inc
dec
jns
ins
cmp
inc
dec
ja
cmp
cmp
dec
dec
imul
dec
ins
arpl
inc
jo
je
dec
dec
push
inc
pop
xor
dec
outs
sub
outs
xor
pop
jno
sub
xor
push
push
push
ss
xor
push
xor
inc
ins
xor
dec
dec
push
push
fs
inc
arpl
xor
dec
imul
jne
ss
push
dec
das
arpl
dec
pop
xor
push
dec
js
pop
push
cmp
jbe
outs
inc
inc
inc
addr16
inc
ins
js
push
push
xor
ins
jo
push
inc
dec
jb
xor
popa
outs
xor
push
push
dec
data16
aaa
push
dec
jo
dec
je
inc
imul
xor
inc
ins
inc
pop
xor
dec
pop
push
ins
push
cmp
dec
push
xor
arpl
dec
dec
dec
jp
imul
imul
xor
jne
arpl
inc
push
inc
xor
dec
ins
push
push
cmp
push
xor
addr16
inc
addr16
push
ja
dec
xor
cmp
dec
dec
xor
arpl
dec
cmp
bound
jbe
inc
dec
dec
jno
dec
imul
dec
inc
push
addr16
push
jno
xor
push
jne
dec
jp
dec
push
xor
jp
xor
ins
ja
dec
jne
jne
push
dec
push
push
dec
imul
das
pop
push
aaa
jns
dec
jp
dec
inc
dec
push
pop
bound
pop
jp
inc
push
pop
je
pop
push
dec
imul
pop
js
push
pop
imul
push
addr16
dec
cmp
push
push
inc
inc
xor
inc
cmp
aaa
push
gs
push
pop
dec
push
ins
js
inc
push
jo
outs
dec
jno
ins
push
push
jae
push
pop
dec
dec
push
push
outs
inc
cmp
pop
jns
pop
dec
xor
xor
xor
pop
dec
push
inc
inc
push
xor
xor
fs
bound
dec
jno
cmp
push
xor
data16
push
addr16
push
push
push
sub
ja
addr16
ins
push
push
arpl
pop
dec
imul
jae
jne
inc
dec
dec
ins
js
ins
fs
inc
imul
arpl
pop
inc
push
push
fs
ins
dec
jbe
aaa
je
xor
sub
jp
ja
dec
ins
inc
xor
push
cmp
inc
addr16
inc
bound
ins
dec
imul
outs
push
push
das
inc
imul
push
push
jae
dec
imul
ins
xor
xor
xor
ins
xor
dec
bound
xor
inc
push
push
push
xor
arpl
fs
xor
xor
jo
ins
ins
popa
push
dec
pop
aaa
imul
pop
push
push
push
inc
inc
das
inc
inc
xor
imul
dec
arpl
cmp
pop
pop
push
addr16
dec
ins
pop
jno
cmp
push
push
imul
sub
jbe
fs
xor
ins
push
xor
inc
push
xor
imul
push
inc
inc
dec
inc
ja
jne
xor
fs
xor
ss
arpl
push
push
addr16
xor
outs
xor
jp
push
jno
inc
imul
push
dec
xor
fs
inc
pop
dec
sub
pop
dec
dec
imul
jae
cmp
aaa
sub
arpl
pop
jae
dec
pop
jbe
je
imul
push
push
outs
dec
cmp
inc
dec
push
das
dec
inc
outs
dec
dec
sub
ins
push
push
outs
push
dec
inc
sub
pop
push
ins
dec
imul
cmp
imul
outs
pop
inc
aaa
dec
xor
dec
gs
das
inc
dec
jne
cmp
aaa
push
xor
inc
push
cmp
dec
ss
jp
xor
push
inc
dec
inc
fs
pop
pop
arpl
push
pop
gs
cmp
ins
push
addr16
inc
push
popa
pop
xor
jb
push
ins
inc
jne
inc
ja
pop
pop
das
inc
xor
fs
ins
imul
inc
inc
arpl
popa
jno
outs
push
push
inc
dec
sub
dec
fs
ins
jo
dec
inc
addr16
push
push
inc
ins
push
outs
outs
inc
jb
xor
push
push
gs
dec
addr16
pop
xor
push
jno
jb
push
imul
addr16
push
inc
inc
addr16
pop
dec
xor
jno
jae
jb
dec
jp
js
inc
push
inc
push
push
xor
outs
cmp
inc
push
dec
je
outs
inc
pop
data16
je
jae
dec
pop
dec
push
popa
jp
imul
push
push
jno
ss
push
addr16
fs
imul
dec
imul
jns
imul
xor
arpl
dec
jno
xor
push
jae
inc
popa
dec
imul
ins
aaa
inc
xor
arpl
popa
fs
arpl
push
push
fs
xor
fs
push
xor
imul
inc
cmp
jae
addr16
inc
inc
ins
push
inc
xor
inc
addr16
pop
dec
outs
addr16
inc
dec
push
ins
dec
push
cmp
arpl
imul
push
inc
inc
pop
ins
push
xor
jno
jb
push
dec
push
pop
jb
aaa
dec
inc
inc
xor
jno
xor
push
push
pop
imul
ins
push
inc
push
inc
push
inc
sub
pop
dec
dec
outs
arpl
aaa
addr16
xor
xor
push
push
je
pop
jne
outs
dec
imul
dec
dec
push
jns
dec
inc
xor
dec
xor
inc
dec
pop
inc
je
dec
fs
arpl
dec
inc
push
pop
push
inc
cmp
dec
jo
push
xor
imul
inc
sub
push
inc
dec
das
cmp
je
push
xor
push
jae
inc
inc
push
ins
xor
inc
push
pop
push
imul
cmp
data16
gs
cmp
addr16
push
xor
ins
dec
dec
inc
push
aaa
pop
xor
pop
inc
je
popa
push
sub
cmp
dec
dec
outs
inc
inc
ja
ins
pop
imul
dec
outs
inc
xor
push
ja
push
js
inc
jo
fs
dec
inc
jbe
js
dec
push
dec
inc
dec
outs
push
jns
dec
push
pop
cmp
inc
dec
dec
cmp
dec
dec
inc
inc
pop
push
ss
push
addr16
push
dec
js
inc
push
arpl
outs
pop
push
push
xor
jo
push
push
js
jp
dec
dec
dec
jns
push
bound
inc
dec
jo
push
dec
inc
dec
imul
cmp
popa
xor
inc
arpl
ins
xor
push
js
jne
dec
js
dec
das
das
ja
js
gs
xor
inc
xor
dec
inc
push
ins
push
push
dec
xor
jo
dec
push
dec
fs
dec
xor
jns
js
dec
push
xor
sub
das
push
outs
inc
dec
dec
pop
dec
push
addr16
xor
jp
xor
push
dec
inc
push
jb
inc
addr16
inc
fs
arpl
je
js
fs
xor
push
xor
outs
dec
inc
inc
ins
push
fs
inc
inc
dec
imul
ins
ja
pop
inc
inc
inc
cmp
xor
jb
pop
inc
je
gs
dec
inc
pop
pop
fs
push
inc
js
bound
jne
outs
dec
cmp
cmp
popa
dec
jae
je
push
xor
pop
dec
push
push
jns
js
jne
push
jae
inc
inc
gs
je
popa
js
push
fs
jbe
dec
dec
push
inc
jo
xor
xor
pop
xor
push
jp
dec
inc
dec
inc
pop
aaa
dec
jae
push
xor
ins
inc
push
cmp
inc
fs
push
dec
pop
push
data16
js
das
imul
data16
xor
inc
dec
ins
xor
dec
push
gs
inc
push
xor
addr16
push
push
fs
push
dec
pop
das
dec
xor
js
cmp
arpl
imul
ins
ss
cmp
sub
dec
pop
jne
xor
pop
inc
inc
push
push
ins
xor
arpl
inc
inc
das
popa
push
je
outs
xor
gs
push
popa
popa
xor
imul
fs
push
xor
dec
inc
push
push
fs
data16
xor
ins
js
xor
push
inc
arpl
jp
xor
push
push
inc
pop
inc
fs
arpl
xor
push
dec
inc
aaa
xor
inc
dec
jp
xor
fs
push
sub
push
inc
dec
push
outs
xor
push
push
arpl
js
xor
push
dec
popa
imul
xor
ins
dec
imul
fs
push
xor
inc
addr16
dec
inc
pop
push
cmp
xor
gs
fs
imul
arpl
aaa
xor
imul
push
arpl
xor
cmp
ins
jo
ss
inc
arpl
jp
xor
inc
dec
inc
pop
push
dec
inc
fs
cmp
inc
push
push
ins
dec
gs
imul
push
push
push
push
inc
dec
pop
addr16
inc
fs
js
inc
ins
inc
ins
push
inc
xor
inc
inc
fs
push
xor
jb
push
push
fs
dec
dec
js
ins
je
imul
gs
imul
xor
push
push
inc
pop
inc
fs
fs
js
inc
dec
inc
push
jo
aaa
xor
inc
outs
aaa
xor
imul
inc
fs
xor
push
push
push
inc
inc
inc
xor
das
dec
imul
dec
arpl
xor
inc
inc
ins
inc
inc
xor
xor
ins
push
xor
inc
imul
inc
arpl
cmp
fs
ins
inc
inc
xor
inc
inc
gs
inc
jp
xor
addr16
inc
inc
pop
inc
fs
gs
xor
cmp
ins
dec
push
xor
inc
inc
gs
pop
aaa
xor
push
push
je
fs
cmp
inc
push
push
inc
inc
arpl
das
gs
jbe
push
ins
dec
popa
addr16
fs
ins
push
inc
ss
ins
dec
fs
push
xor
dec
inc
push
push
fs
dec
outs
xor
ins
js
xor
push
inc
arpl
jp
xor
push
push
inc
pop
inc
fs
fs
xor
push
dec
inc
aaa
xor
inc
dec
jp
xor
addr16
dec
dec
pop
push
dec
inc
fs
js
ins
push
inc
push
push
push
dec
inc
imul
push
das
inc
addr16
push
dec
pop
addr16
gs
inc
ins
dec
imul
fs
push
xor
inc
addr16
dec
inc
pop
push
cmp
xor
gs
fs
imul
arpl
aaa
xor
imul
push
arpl
xor
cmp
ins
jo
ss
inc
arpl
jp
xor
inc
dec
inc
pop
push
dec
inc
fs
cmp
inc
push
push
ins
dec
gs
imul
push
push
push
push
inc
dec
pop
addr16
inc
fs
js
inc
ins
inc
ins
push
inc
xor
inc
inc
fs
push
xor
jb
push
push
fs
dec
dec
js
ins
je
imul
gs
imul
xor
push
push
inc
pop
inc
fs
fs
js
ins
dec
inc
push
xor
inc
outs
jp
xor
imul
inc
fs
xor
ins
ins
xor
dec
inc
inc
das
gs
das
dec
imul
dec
arpl
xor
inc
inc
imul
inc
xor
ins
push
das
fs
bound
inc
je
popa
push
cmp
xor
arpl
imul
push
inc
dec
gs
inc
jp
xor
addr16
inc
inc
pop
inc
fs
gs
xor
cmp
ins
dec
push
xor
inc
dec
gs
pop
aaa
fs
jp
push
push
je
fs
cmp
inc
push
push
inc
dec
xor
das
gs
jbe
push
ins
dec
popa
addr16
je
jo
gs
inc
dec
ss
inc
xor
data16
dec
inc
ins
inc
outs
gs
dec
inc
je
data16
fs
outs
dec
das
dec
arpl
inc
pop
ins
imul
ins
dec
jp
dec
push
push
arpl
push
inc
pop
inc
fs
cmp
pop
gs
je
push
pop
inc
aaa
jno
inc
js
dec
jp
dec
bound
inc
dec
dec
pop
push
dec
inc
dec
jne
js
imul
ins
xor
dec
inc
imul
push
das
inc
addr16
push
dec
push
addr16
gs
data16
push
jno
aaa
push
aaa
jne
inc
inc
ins
inc
pop
arpl
bound
inc
push
push
pop
pop
cmp
dec
push
dec
imul
arpl
aaa
fs
pop
dec
imul
dec
dec
gs
push
arpl
cmp
ins
ins
push
ss
ins
inc
pop
inc
dec
inc
gs
dec
inc
push
inc
push
push
pop
xor
ins
jne
cmp
push
inc
push
xor
inc
cmp
ja
dec
push
push
pop
pop
jns
inc
jo
pop
inc
fs
dec
outs
ins
dec
ins
xor
ins
dec
outs
push
jb
push
push
fs
bound
inc
arpl
inc
push
ins
je
aaa
js
dec
ins
ins
ss
aaa
pop
push
outs
inc
dec
push
pop
ins
fs
fs
js
inc
dec
inc
push
ja
aaa
popa
xor
inc
xor
dec
push
inc
xor
push
je
dec
jne
dec
inc
push
inc
jo
push
xor
push
inc
push
inc
outs
data16
dec
popa
inc
push
inc
pop
addr16
dec
pop
gs
inc
outs
ins
pop
push
xor
xor
ins
dec
dec
arpl
inc
gs
xor
js
inc
dec
dec
ja
fs
inc
ins
pop
inc
xor
ins
fs
push
pop
inc
jae
arpl
jns
dec
inc
gs
ins
ins
cmp
ins
dec
push
xor
inc
dec
sub
aaa
data16
xor
cmp
jne
arpl
inc
jo
inc
xor
data16
jbe
push
jo
popa
push
je
ins
outs
jo
xor
imul
ins
ins
arpl
imul
gs
pop
ss
bound
jo
dec
dec
inc
ja
outs
push
xor
ins
arpl
pop
pop
inc
bound
push
pop
je
inc
dec
gs
xor
jp
push
jp
inc
xor
inc
inc
jp
xor
outs
inc
gs
pop
push
inc
dec
jne
push
fs
push
inc
inc
ins
push
dec
outs
inc
cmp
je
inc
xor
dec
pop
addr16
sub
xor
ins
dec
push
ins
xor
aaa
outs
xor
ins
dec
xor
bound
inc
push
inc
pop
jo
dec
push
dec
imul
cmp
push
ins
dec
push
ins
das
dec
arpl
dec
inc
inc
xor
dec
inc
gs
xor
inc
push
inc
ins
inc
arpl
push
inc
dec
inc
ins
inc
inc
push
pop
push
dec
inc
je
inc
fs
ins
inc
push
xor
ins
dec
popa
inc
das
das
fs
push
dec
jb
fs
pop
inc
dec
dec
dec
gs
ins
dec
outs
ins
dec
xor
ins
push
xor
jb
push
ss
bound
inc
arpl
inc
inc
ins
outs
ss
xor
cmp
pop
pop
dec
aaa
inc
push
push
pop
jae
inc
dec
gs
push
imul
ins
ja
aaa
xor
inc
js
popaw
bound
inc
xor
ja
inc
pop
jne
pop
outs
push
inc
je
addr16
xor
push
inc
dec
inc
outs
data16
dec
xor
push
inc
dec
dec
cmp
ins
arpl
inc
ins
push
inc
xor
xor
ins
inc
xor
bound
inc
xor
cmp
dec
ins
cmp
inc
imul
xor
gs
inc
jp
xor
ja
xor
fs
dec
arpl
inc
cmp
ins
popa
xor
inc
dec
inc
inc
bound
jb
inc
inc
xor
fs
cmp
inc
inc
ins
pop
push
xor
inc
inc
push
inc
push
data16
dec
xor
xor
je
inc
cmp
xor
jne
dec
push
aaa
jbe
dec
ins
ins
push
xor
dec
dec
push
push
imul
ins
imul
inc
jp
xor
inc
inc
push
push
pop
inc
fs
push
gs
dec
data16
pop
ins
push
push
dec
xor
inc
inc
jp
push
inc
xor
jo
push
inc
xor
dec
push
inc
push
addr16
dec
outs
inc
outs
outs
arpl
inc
addr16
gs
push
je
ins
outs
ins
xor
ins
ja
ss
xor
ins
inc
pop
arpl
bound
arpl
xor
push
dec
popa
ins
xor
aaa
das
ins
dec
arpl
aaa
fs
pop
dec
jns
ins
inc
pop
push
fs
push
gs
ins
fs
dec
je
jns
aaa
inc
ins
inc
dec
inc
inc
push
popa
dec
inc
pop
inc
dec
inc
pop
push
dec
inc
fs
cmp
aaa
sub
js
cmp
dec
data16
outs
push
ins
push
pop
gs
push
push
push
inc
imul
xor
push
inc
outs
dec
push
push
jp
jp
xor
inc
jo
js
dec
js
ins
dec
jbe
xor
xor
dec
jbe
jbe
fs
pop
outs
jb
xor
jno
imul
ins
inc
push
push
jns
push
cmp
push
dec
xor
inc
outs
push
outs
ins
arpl
dec
xor
push
push
cmp
push
xor
cmp
push
dec
jp
push
jns
xor
dec
push
xor
inc
jno
imul
inc
push
jb
xor
imul
fs
jbe
outs
jo
arpl
push
outs
popa
dec
jbe
popa
ja
inc
pop
cmp
dec
dec
inc
ins
push
arpl
xor
push
push
pop
xor
xor
cmp
jae
cmp
ins
xor
jb
dec
inc
dec
ja
imul
xor
inc
inc
js
bound
xor
push
cmp
xor
dec
outs
pop
inc
inc
inc
xor
dec
inc
fs
jns
xor
pop
push
das
imul
cmp
push
dec
dec
xor
xor
push
dec
gs
push
xor
xor
pop
push
cmp
ss
addr16
push
js
push
ss
xor
dec
push
xor
inc
outs
bound
jb
popa
ins
je
push
inc
sub
jbe
xor
push
push
ins
gs
jb
ins
dec
dec
push
arpl
inc
ins
inc
dec
jo
push
push
pop
bound
push
push
dec
push
ja
ins
jae
ins
push
arpl
cmp
ins
xor
outs
dec
dec
addr16
imul
das
xor
push
push
push
dec
push
je
push
imul
cmp
xor
push
inc
pop
bound
jns
ins
popa
xor
xor
imul
pop
jb
imul
xor
inc
xor
dec
jbe
inc
ins
xor
push
inc
pop
cmp
inc
dec
bound
jo
dec
push
jae
inc
push
dec
xor
fs
bound
fs
push
push
jns
cmp
jo
xor
dec
popa
xor
dec
imul
dec
push
jno
jo
push
push
xor
xor
jae
cmp
inc
inc
xor
ins
xor
jb
ins
fs
pop
cmp
push
aaa
dec
inc
dec
xor
jns
ins
jb
jno
dec
fs
push
dec
inc
data16
das
pop
push
xor
ins
push
popa
jne
dec
push
jae
addr16
dec
jns
inc
aaa
xor
xor
das
dec
imul
dec
arpl
xor
inc
inc
ins
inc
inc
xor
xor
ins
push
xor
inc
imul
inc
arpl
cmp
fs
ins
inc
inc
xor
inc
inc
gs
inc
jp
xor
addr16
inc
inc
pop
inc
fs
gs
xor
cmp
ins
dec
push
xor
inc
inc
gs
pop
aaa
xor
push
push
je
fs
cmp
inc
push
push
inc
inc
arpl
das
gs
jbe
push
ins
dec
popa
addr16
fs
ins
push
inc
ss
ins
dec
fs
push
xor
dec
inc
push
push
fs
dec
outs
xor
ins
js
xor
push
inc
arpl
jp
xor
push
push
inc
pop
inc
fs
fs
xor
push
dec
inc
aaa
xor
inc
dec
jp
xor
addr16
dec
dec
pop
push
dec
inc
fs
js
ins
push
inc
push
push
push
dec
inc
imul
push
das
inc
addr16
push
dec
pop
addr16
gs
inc
ins
dec
imul
fs
push
xor
inc
addr16
dec
inc
pop
push
cmp
xor
gs
fs
imul
arpl
aaa
xor
imul
push
arpl
xor
cmp
ins
jo
ss
inc
arpl
jp
xor
inc
dec
inc
pop
push
dec
inc
fs
cmp
inc
push
push
ins
dec
gs
imul
push
push
push
push
inc
dec
pop
addr16
inc
fs
js
inc
ins
inc
ins
push
inc
xor
inc
inc
fs
push
xor
jb
push
push
fs
dec
dec
js
ins
je
imul
gs
imul
xor
push
push
inc
pop
inc
fs
fs
js
inc
dec
inc
push
jo
aaa
xor
inc
outs
aaa
xor
imul
inc
fs
xor
push
push
push
inc
inc
inc
xor
das
dec
imul
dec
arpl
xor
inc
inc
ins
inc
inc
xor
xor
ins
push
xor
inc
imul
inc
arpl
cmp
fs
ins
inc
inc
xor
inc
inc
gs
inc
jp
xor
addr16
inc
inc
pop
inc
fs
gs
xor
cmp
ins
dec
push
xor
inc
inc
gs
pop
aaa
xor
dec
push
push
je
fs
cmp
push
inc
push
push
inc
inc
arpl
das
gs
jbe
push
ins
dec
popa
addr16
fs
ins
push
inc
ss
ins
dec
fs
push
xor
dec
inc
push
push
fs
dec
outs
xor
ins
js
xor
push
inc
arpl
jp
xor
push
push
inc
pop
inc
fs
fs
xor
push
dec
inc
aaa
xor
inc
dec
jp
xor
addr16
dec
dec
pop
push
dec
inc
fs
js
ins
push
inc
push
push
push
dec
inc
imul
push
das
inc
addr16
push
dec
pop
addr16
gs
inc
ins
dec
imul
fs
push
xor
inc
addr16
dec
inc
pop
push
cmp
xor
gs
fs
imul
arpl
aaa
xor
imul
push
arpl
xor
cmp
ins
jo
ss
inc
arpl
jp
xor
inc
dec
inc
pop
push
dec
inc
fs
cmp
inc
push
push
ins
dec
gs
imul
push
push
push
push
inc
dec
pop
addr16
inc
fs
js
inc
ins
inc
ins
push
inc
xor
inc
inc
fs
push
xor
jb
push
push
fs
dec
dec
js
ins
je
imul
gs
imul
xor
push
push
inc
pop
inc
fs
fs
js
inc
dec
inc
push
jo
aaa
xor
inc
outs
aaa
xor
imul
inc
fs
xor
push
push
push
inc
inc
inc
xor
das
dec
imul
dec
arpl
xor
inc
inc
ins
inc
inc
xor
xor
ins
push
xor
inc
imul
inc
arpl
cmp
fs
ins
inc
inc
xor
inc
inc
gs
inc
jp
xor
addr16
inc
inc
pop
inc
fs
gs
xor
cmp
ins
dec
push
xor
inc
inc
gs
pop
aaa
xor
push
push
je
fs
cmp
inc
push
push
inc
inc
arpl
das
gs
jbe
push
ins
dec
popa
addr16
fs
ins
push
inc
ss
ins
dec
fs
push
xor
dec
inc
push
push
fs
dec
outs
xor
ins
js
xor
push
inc
arpl
jp
xor
push
push
inc
pop
inc
fs
fs
xor
push
dec
inc
aaa
xor
inc
dec
jp
xor
addr16
dec
dec
pop
push
dec
inc
fs
js
ins
push
inc
push
push
push
dec
inc
imul
push
das
inc
addr16
push
dec
pop
addr16
gs
pop
xor
inc
ss
xor
ins
push
xor
bound
inc
jo
inc
push
cmp
dec
xor
xor
jp
dec
cmp
jne
xor
ins
outs
dec
xor
cmp
pop
push
xor
ins
push
ja
xor
je
inc
xor
push
push
pop
pop
arpl
push
xor
arpl
xor
cmp
inc
cmp
dec
push
jns
jo
dec
fs
xor
inc
push
pop
push
arpl
imul
jp
pop
inc
push
dec
imul
ja
xor
xor
data16
xor
inc
je
jbe
inc
cmp
data16
inc
push
push
jb
inc
dec
imul
inc
dec
inc
push
jo
aaa
xor
jne
aaa
xor
inc
je
popa
push
je
fs
xor
push
push
push
inc
inc
inc
xor
push
dec
imul
dec
arpl
xor
inc
inc
fs
popa
jns
inc
jne
jae
dec
push
pop
xor
cmp
imul
push
inc
ins
inc
inc
aaa
jbe
push
gs
inc
jns
xor
addr16
inc
inc
pop
inc
fs
gs
xor
cmp
ins
dec
push
xor
inc
inc
gs
pop
aaa
xor
push
push
je
fs
cmp
inc
push
push
inc
inc
arpl
das
gs
jbe
push
ins
dec
popa
addr16
fs
ins
push
inc
ss
ins
dec
fs
push
xor
dec
inc
push
push
fs
dec
outs
xor
ins
js
xor
push
inc
arpl
jp
xor
push
push
inc
pop
inc
fs
fs
xor
push
dec
inc
aaa
xor
inc
dec
jp
xor
addr16
dec
dec
pop
push
dec
inc
fs
js
ins
push
inc
push
push
push
dec
inc
imul
push
das
inc
addr16
push
dec
pop
addr16
gs
inc
ins
dec
imul
fs
push
xor
inc
addr16
dec
inc
pop
push
cmp
xor
gs
fs
imul
arpl
aaa
xor
imul
push
arpl
xor
cmp
ins
jo
ss
inc
arpl
jp
xor
inc
dec
inc
pop
push
dec
inc
fs
cmp
inc
push
push
ins
dec
gs
imul
push
push
push
push
inc
dec
pop
addr16
inc
fs
js
inc
ins
inc
ins
push
inc
xor
inc
inc
fs
push
xor
jb
push
push
fs
dec
dec
js
ins
je
imul
gs
imul
xor
push
push
inc
pop
inc
fs
fs
js
inc
dec
inc
push
jo
aaa
xor
inc
outs
aaa
xor
imul
inc
fs
xor
push
push
push
inc
inc
inc
xor
das
dec
imul
dec
arpl
xor
inc
inc
ins
inc
inc
xor
xor
ins
push
xor
inc
imul
inc
arpl
cmp
fs
ins
inc
inc
xor
inc
inc
gs
inc
jp
xor
addr16
inc
inc
pop
inc
fs
gs
xor
cmp
ins
dec
push
xor
inc
inc
gs
pop
aaa
xor
push
push
je
fs
cmp
inc
push
push
inc
inc
arpl
das
gs
jbe
outs
inc
push
dec
cmp
js
inc
inc
dec
imul
fs
push
xor
dec
inc
ins
inc
dec
pop
push
fs
dec
outs
js
ins
dec
dec
ins
js
xor
push
inc
arpl
jp
xor
outs
inc
push
inc
pop
inc
fs
cmp
xor
push
dec
inc
xor
inc
fs
dec
jp
xor
addr16
dec
dec
push
imul
jne
push
xor
fs
jae
xor
push
push
pop
inc
ja
arpl
dec
arpl
jb
das
je
ss
inc
ins
dec
gs
push
push
jo
jb
ins
push
bound
inc
dec
inc
pop
push
cmp
xor
gs
fs
ins
ins
push
dec
ins
imul
xor
imul
push
push
gs
xor
cmp
ins
jo
ss
inc
arpl
jp
js
inc
push
inc
dec
dec
pop
jne
arpl
inc
inc
ins
inc
inc
xor
ins
dec
ss
das
data16
dec
inc
inc
dec
pop
addr16
inc
dec
gs
js
inc
ins
inc
ja
dec
ins
xor
ins
dec
dec
gs
ja
bound
push
push
fs
je
imul
jne
imul
xor
jbe
dec
inc
pop
jns
inc
xor
imul
ss
xor
inc
ss
bound
ss
xor
push
je
cmp
xor
push
addr16
inc
inc
dec
xor
das
dec
jno
pop
inc
pop
addr16
dec
xor
ins
arpl
inc
jae
popa
xor
ins
dec
outs
arpl
bound
js
popa
push
cmp
xor
arpl
inc
imul
push
inc
inc
imul
dec
imul
pop
xor
dec
ins
outs
cmp
ins
dec
push
xor
inc
inc
gs
pop
aaa
push
jb
inc
inc
je
bound
push
xor
inc
push
inc
js
inc
push
xor
inc
inc
push
inc
pop
data16
push
xor
bound
push
push
inc
inc
dec
imul
inc
ins
inc
pop
gs
dec
inc
xor
push
pop
aaa
fs
dec
outs
xor
inc
ins
js
xor
ins
data16
push
pop
inc
aaa
inc
dec
push
pop
jns
inc
push
gs
jo
jno
dec
bound
aaa
xor
inc
inc
push
arpl
inc
pop
inc
inc
dec
pop
sub
fs
js
push
inc
push
ins
xor
dec
outs
inc
xor
inc
outs
inc
dec
jb
inc
je
jne
xor
imul
xor
ss
xor
ins
dec
dec
arpl
inc
xor
gs
pop
push
cmp
dec
imul
ins
ss
aaa
cmp
ins
imul
cmp
jno
ins
push
pop
dec
fs
dec
gs
inc
imul
push
ins
xor
inc
arpl
push
dec
dec
inc
inc
inc
push
js
xor
inc
dec
jne
cmp
push
inc
fs
inc
inc
xor
ins
dec
push
inc
sub
jns
dec
inc
inc
pop
dec
pop
inc
dec
dec
xor
ins
ins
inc
outs
ins
fs
xor
inc
inc
dec
ins
push
xor
jb
ins
inc
je
bound
inc
dec
dec
push
inc
arpl
inc
push
ins
imul
push
dec
popa
ins
cmp
push
pop
push
pop
inc
dec
push
pop
jns
inc
js
dec
inc
arpl
inc
push
jo
aaa
xor
inc
jb
xor
gs
js
bound
ss
dec
push
inc
ins
ins
imul
inc
xor
das
dec
popa
inc
dec
push
pop
dec
dec
dec
dec
gs
xor
inc
cmp
xor
ins
inc
outs
arpl
inc
dec
inc
ins
jb
xor
inc
jae
push
arpl
ins
dec
ins
xor
inc
inc
popa
ins
push
jp
dec
pop
dec
arpl
inc
pop
xor
gs
xor
cmp
ins
push
xor
inc
gs
pop
aaa
gs
dec
cmp
xor
jo
js
arpl
inc
dec
ins
pop
inc
xor
inc
inc
das
gs
jbe
push
xor
push
dec
gs
push
jns
inc
ins
aaa
ins
ins
push
push
ins
dec
dec
cmp
inc
push
jbe
push
fs
bound
pop
fs
dec
inc
pop
ins
cmp
sub
arpl
jp
dec
pop
inc
inc
inc
push
push
pop
inc
fs
push
gs
dec
data16
pop
ins
push
push
dec
xor
inc
inc
jp
push
inc
xor
jo
push
inc
xor
dec
push
inc
push
sub
inc
jbe
arpl
pop
inc
pop
dec
pop
addr16
gs
inc
ins
dec
imul
fs
push
xor
inc
addr16
dec
inc
pop
push
cmp
xor
gs
fs
imul
arpl
aaa
xor
imul
push
arpl
xor
cmp
ins
jo
ss
inc
arpl
jp
xor
inc
dec
inc
pop
push
dec
inc
fs
cmp
inc
push
push
ins
dec
gs
imul
push
push
push
push
inc
dec
pop
addr16
inc
fs
js
inc
ins
inc
ins
push
inc
xor
inc
inc
fs
push
xor
jb
push
push
fs
dec
dec
js
ins
je
imul
gs
imul
xor
push
push
push
pop
inc
fs
je
push
js
fs
inc
push
jo
aaa
xor
inc
outs
aaa
xor
imul
inc
fs
xor
push
push
push
inc
inc
inc
xor
das
dec
imul
dec
arpl
xor
inc
inc
ins
inc
inc
xor
xor
ins
push
xor
inc
imul
inc
arpl
cmp
fs
ins
inc
inc
xor
inc
inc
gs
inc
jp
xor
addr16
inc
inc
pop
inc
fs
gs
xor
cmp
ins
dec
push
xor
inc
inc
gs
pop
aaa
xor
push
push
je
fs
cmp
inc
push
push
inc
inc
arpl
das
gs
jbe
push
ins
dec
popa
addr16
fs
ins
push
inc
ss
ins
dec
fs
push
xor
dec
inc
push
push
fs
dec
outs
xor
ins
js
xor
push
inc
arpl
jp
xor
push
push
inc
pop
inc
fs
fs
xor
push
dec
inc
aaa
xor
inc
dec
jp
xor
addr16
dec
dec
pop
push
dec
inc
fs
js
ins
push
inc
push
push
push
dec
inc
imul
push
das
inc
addr16
push
dec
pop
addr16
gs
inc
ins
dec
imul
fs
push
xor
inc
addr16
dec
inc
pop
push
cmp
xor
gs
fs
imul
arpl
aaa
xor
imul
push
arpl
xor
cmp
ins
jo
ss
inc
arpl
jp
xor
inc
dec
inc
pop
push
dec
inc
fs
cmp
inc
push
push
ins
dec
gs
imul
push
push
push
push
inc
dec
pop
addr16
inc
fs
js
inc
ins
inc
ins
push
inc
xor
inc
inc
fs
push
xor
jb
push
push
fs
dec
dec
js
ins
je
imul
gs
imul
xor
push
push
inc
pop
inc
fs
fs
js
inc
dec
inc
push
jo
aaa
xor
inc
outs
aaa
xor
imul
inc
fs
xor
push
push
push
inc
inc
inc
xor
das
dec
imul
dec
arpl
xor
inc
inc
ins
inc
inc
xor
xor
ins
push
xor
inc
imul
inc
arpl
cmp
fs
ins
inc
inc
xor
inc
inc
gs
inc
jp
xor
addr16
inc
inc
pop
inc
fs
gs
xor
cmp
ins
dec
push
xor
inc
inc
gs
pop
aaa
xor
push
push
je
fs
cmp
add
or
gs
jns
gs
add
add
add
outs
popa
add
pop
add
adc
push
inc
dec
inc
push
imul
xor
xor
cmp
add
or
add
push
jno
inc
pop
popa
add
adc
jb
ins
inc
popa
jae
ss
je
imul
add
pop
add
add
xor
add
push
pop
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
jae
imul
sub
add
aaa
xor
xor
xor
cmp
sub
sub
popa
cmp
xor
aaa
add
or
add
xor
xor
xor
xor
add
add
adc
jo
jb
addr16
and
xor
xor
nop
xlat
sldt
add
add
add
add
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
