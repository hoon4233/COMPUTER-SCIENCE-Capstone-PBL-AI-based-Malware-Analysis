cmp
xor
cmps
xchg
add
mov
add
add
add
(bad)
(bad)
call
in
in
sbb
or
push
add
push
pushf
xor
mov
cmp
mov
retf
ret
inc
adc
adc
sub
in
jge
add
mov
mov
div
mov
mov
xor
data16
mov
add
or
mov
idiv
inc
jmp
popf
pop
xor
pop
xor
pop
and
leave
ret
dec
vpunpcklqdq
(bad)
mov
add
push
push
push
or
pushf
mov
mov
mov
mov
xor
mov
sbb
in
out
(bad)
mov
fwait
or
and
add
dec
lea
mov
out
pop
imul
add
fs
adc
loopne
test
sbb
(bad)
test
jns
jle
fiadd
jp
sbb
int
fwait
xor
mov
adc
sbb
or
mov
adc
push
jg
fcmovnbe
mov
jno
lea
je
adc
mov
jg
inc
and
or
icebp
pop
call
jl
fist
int3
mov
inc
lahf
add
xchg
push
int
mov
mov
pop
mov
pop
sub
xchg
mov
call
mov
mov
pop
xlat
ins
(bad)
xchg
fisub
retf
or
frstor
xor
inc
in
ficomp
cmp
ret
ins
sub
push
xchg
cdq
loope
cmp
xor
and
in
sbb
in
aaa
cmps
call
mov
and
pushf
or
add
test
mov
add
xlat
adc
ret
ins
mov
pop
cmps
retf
cmp
push
fmul
test
shl
add
cmp
outs
ins
test
push
adc
ins
popf
pop
inc
or
or
mov
lea
in
loope
das
mov
sub
and
add
mov
outs
mov
js
and
mov
add
inc
inc
je
push
int3
aaa
ins
pop
lea
aad
jnp
xlat
sub
gs
push
or
loope
popa
dec
repnz
call
ret
in
dec
ret
in
mov
cs
xor
in
leave
add
xchg
das
jl
and
add
or
mov
imul
jne
or
pop
sub
mov
movs
jae
daa
je
mov
fcmovnb
mov
sbb
dec
or
das
cmp
and
retf
or
or
adc
fcmovnu
dec
pop
mov
jle
jmp
push
jbe
ins
(bad)
add
add
ror
imul
lock
mov
add
inc
mov
jle
popa
xor
ins
outs
fstp
jle
push
dec
fist
lock
(bad)
ror
xor
ss
inc
xor
ja
mov
push
xor
mov
loope
ins
jnp
cmp
sub
xor
test
(bad)
out
popf
inc
jecxz
and
sub
pop
sti
sub
adc
or
test
or
sti
sub
sbb
in
add
int
das
dec
(bad)
gs
xor
add
jmp
fistp
jnp
out
les
adc
sub
fs
lds
sahf
sub
or
or
shl
push
add
test
jb
pop
and
pop
lds
push
pop
movs
jmp
dec
xchg
gs
retf
into
push
int3
out
mov
in
jmp
leave
jmp
fcomp
(bad)
cmc
inc
repnz
pushf
mov
repnz
mov
ins
neg
mov
cmp
push
lahf
push
loopne
imul
in
stc
jmp
and
cmp
jmp
xor
js
ss
imul
ss
pop
mov
and
mov
jmp
mov
mov
cmp
(bad)
jmp
int
add
dec
dec
(bad)
data16
or
js
jne
ror
out
cmps
out
jmp
pop
add
outs
std
ss
push
int3
and
gs
wbinvd
fdivr
xchg
out
adc
xor
add
push
in
shr
pavgb
aam
or
aam
fs
(bad)
push
fsub
retf
ins
cmp
ret
fst
or
shl
popa
mov
enter
loop
(bad)
mov
fbstp
in
not
pop
jnp
(bad)
sbb
dec
xor
or
dec
sbb
rcr
mov
dec
icebp
popa
mov
(bad)
cld
mov
push
push
mov
push
add
jbe
hlt
jmp
or
fimul
mov
mov
xlat
int
adc
imul
add
jne
pushfw
sub
pushf
sub
push
mov
inc
in
xchg
sub
lods
in
pusha
add
lds
jl
(bad)
outs
call
jmp
hlt
inc
adc
sbb
std
repnz
or
pop
add
dec
or
outs
jg
push
push
push
lea
mov
mov
retf
mov
pop
pop
cmp
jno
cmc
icebp
mov
push
fisttp
ins
add
mov
int
push
mov
pop
jo
mov
retf
inc
sub
fadd
(bad)
popf
and
adc
sub
fadd
adc
sub
shl
mov
mov
pop
sub
mov
and
mov
fsubr
sub
lock
sub
mov
xlat
sub
add
jl
cmc
cmc
pushf
xlat
lea
adc
pop
out
in
adc
cmp
mov
mov
call
(bad)
into
mul
int
push
popa
ss
mov
adc
(bad)
ficomp
les
sbb
push
xchg
or
xchg
call
data16
inc
repnz
lea
int
out
data16
nop
repnz
popf
scas
jmp
xchg
or
or
in
bound
push
add
das
cmp
je
arpl
pop
add
lods
addr16
inc
out
sub
movs
icebp
xchg
jne
jns
pop
jne
pop
mov
(bad)
icebp
into
gs
call
mov
into
mov
fisttp
pop
push
mov
or
(bad)
xchg
les
jle
in
int3
mov
mov
or
or
adc
dec
xchg
mov
enter
or
push
into
daa
out
add
mov
jmp
xchg
mov
iret
push
je
cmc
jecxz
mov
xchg
inc
je
loope
add
sbb
or
dec
add
leave
xor
dec
ret
add
ss
inc
dec
mov
push
pop
mov
pop
or
rcr
test
inc
(bad)
popf
in
ins
and
jnp
add
out
ins
in
mov
rol
ror
pop
shl
mov
jbe
mov
push
into
or
fadd
iret
mov
jno
dec
mov
call
rol
sbb
mov
bound
fild
jl
mov
cmc
ss
sub
mov
test
inc
add
xchg
sbb
pop
push
(bad)
out
jmp
dec
in
mov
pop
sub
jp
clc
fcmove
push
push
jmp
daa
lahf
push
dec
add
xchg
jp
mov
mov
psubusw
out
icebp
inc
mov
mov
sbb
fst
test
fcmove
mov
push
div
cs
cld
sbb
xchg
pop
bswap
xchg
pop
xchg
xchg
std
or
lock
loope
or
jbe
sbb
cmp
stc
shl
retf
and
out
iret
or
mov
push
clc
and
pop
sbb
push
jns
pop
mov
cmp
js
xor
das
adc
pextrw
push
das
or
mov
daa
fnstenv
loopne
jns
cmp
into
or
and
push
fcmovnbe
cli
xchg
mov
sbb
xor
and
or
neg
mov
add
or
sub
fwait
mov
int3
mov
not
mov
ret
sbb
add
fs
scas
xchg
or
repz
dec
inc
jbe
adc
sbb
and
imul
sbb
in
sub
mov
mov
lds
mov
mov
sbb
add
push
call
jl
mov
xchg
pop
std
or
fdivp
je
mov
mov
je
mov
icebp
shr
inc
lock
pusha
shr
lds
mov
cmc
js
leave
dec
popf
jno
xchg
sbb
or
test
lods
cmp
jg
mov
mov
lahf
fldln2
mov
test
jg
dec
push
mov
ud2
ds
call
pop
jo
jno
(bad)
in
and
mov
jo
xchg
mov
(bad)
xor
jg
adc
sahf
xchg
pushf
mov
mov
int
loop
fcmovnu
mov
sbb
xchg
test
add
in
xor
add
jg
mov
mov
dec
fcomi
jg
scas
sbb
std
jle
in
mov
sub
retf
std
mov
mov
xchg
leave
sbb
jge
pusha
test
sbb
sub
leave
(bad)
xchg
xchg
mov
ins
cmp
cwde
leave
test
xchg
lea
leave
xchg
adc
hlt
leave
sub
mov
cmp
sub
pop
mov
push
dec
repnz
inc
call
jae
stos
jge
sub
push
daa
mov
xchg
cmp
shl
xchg
in
mov
adc
dec
xchg
lods
ret
jp
inc
jmp
cmp
add
or
add
jl
les
mov
adc
xlat
ss
mov
or
call
cli
call
nop
jl
lds
add
loop
test
cmp
push
add
mov
in
shl
ss
call
pop
jne
rcl
jp
ins
lea
bound
adc
jbe
fild
loope
jmp
addr16
imul
retf
mov
std
jge
or
dec
dec
cwde
out
and
neg
mov
mul
loop
push
jle
mov
or
clc
jbe
int
push
mov
and
aad
push
(bad)
pop
cmp
mov
leave
(bad)
jbe
xchg
ja
pop
jl
fistp
ror
adc
jl
mov
and
out
xlat
mov
fs
inc
mov
xor
xchg
out
mov
pushf
pushf
mov
sub
outs
das
arpl
(bad)
adc
xchg
jmp
rcr
test
movs
pop
ins
sbb
mov
int
mov
mov
mov
fisubr
jl
lock
mov
stos
or
mov
jns
arpl
push
je
sbb
sub
and
push
sub
cmp
mov
dec
repnz
mov
mov
add
or
into
mov
cmp
ds
or
jb
mov
or
gs
in
cmp
outs
movd
xchg
mov
jmp
adc
adc
add
xchg
adc
sbb
xor
sbb
gs
rep
icebp
(bad)
test
out
push
test
ret
(bad)
in
aas
ror
jbe
sub
mov
adc
xor
out
pop
into
das
xchg
mov
sbb
pusha
and
xor
xchg
mov
fadd
sub
push
cmps
adc
aad
pop
or
inc
dec
aad
mov
jmp
lds
ds
mov
add
mul
(bad)
and
js
sub
aam
std
pop
sbb
fdiv
pop
mov
mov
shl
lea
cmp
sbb
(bad)
mov
loopne
loopne
or
out
jnp
inc
fcmovbe
jl
mov
adc
pusha
ins
jnp
mov
sub
or
pop
bound
fadd
cmp
sbb
fisubr
dec
sub
and
int3
or
cs
sbb
sbb
sbb
ins
bound
in
pop
add
mov
dec
mov
rcl
mov
(bad)
call
jecxz
pop
mov
adc
xlat
jmp
loop
adc
jmp
rol
mov
or
mov
fnstenv
mov
hlt
js
pusha
sbb
dec
fist
fs
aaa
adc
xor
call
cwde
lea
sub
loope
rol
jmp
xchg
ret
xor
mov
fs
loop
ret
sbb
or
jbe
rcr
dec
jmp
movs
adc
sbb
mov
mov
cmp
pop
xchg
xchg
and
jl
ret
pop
push
cmp
(bad)
mov
(bad)
(bad)
rol
ss
btr
repnz
push
mov
(bad)
sub
inc
sub
sbb
mov
mov
arpl
and
cmp
jmp
mov
enter
cmova
pop
xor
ins
leave
movs
ds
xchg
cdq
add
stos
repnz
cmp
loope
jbe
in
ret
pusha
ret
into
aad
jb
or
in
adc
push
dec
mov
xor
std
mov
add
pop
inc
add
xor
mov
iret
neg
ret
fnstcw
mov
in
mov
mov
mov
push
loope
ins
sti
mov
pop
jo
gs
jo
popa
sti
mov
jmp
pop
aaa
inc
out
and
lods
out
inc
and
sub
add
cmp
sar
adc
pop
mov
rol
clc
and
(bad)
dec
fsubr
xlat
mov
mov
sbb
shl
fchs
test
ret
je
xchg
leave
daa
pop
mov
cld
xor
dec
cmp
sub
mov
fcomp
(bad)
adc
idiv
mov
mov
jge
mov
(bad)
leave
sbb
cs
sub
(bad)
dec
scas
adc
adc
fs
fnsave
xlat
lea
dec
js
adc
lahf
call
clc
repnz
cmp
enter
inc
bound
rcl
and
cmp
push
dec
ret
div
(bad)
call
stos
jmp
outs
div
imul
inc
xchg
pushf
test
ins
mov
push
jl
add
cwde
mov
repnz
mov
pmaddwd
fcomp
ret
pop
test
loope
neg
in
stos
sbb
cs
xor
and
mov
ss
or
aaa
ja
add
lds
or
inc
outs
mov
arpl
sbb
ror
movs
mov
inc
cmp
dec
adc
mov
repnz
pop
lods
ss
xchg
fldcw
and
test
fisub
xor
add
jbe
cmp
dec
popa
movs
hlt
mov
jb
jno
push
jo
push
sub
ds
jmp
out
hlt
ret
mov
(bad)
pop
int
mov
xchg
xchg
mov
cdq
mov
shl
(bad)
dec
rcr
in
mov
dec
test
xor
dec
rol
xor
pop
pop
or
xchg
fwait
xor
data16
xchg
(bad)
and
dec
xchg
ud0
ror
(bad)
jns
pop
test
scas
sub
fs
mov
(bad)
sti
lds
shr
loopne
in
cld
add
sub
bound
test
aaa
fisttp
inc
int
out
fsubr
shr
mov
sbb
movs
or
push
mov
or
retf
adc
ins
sti
lock
mov
lds
mov
jp
xor
ja
js
jl
adc
cmp
pop
pop
pop
cmp
scas
std
dec
subps
dec
das
sbb
test
sbb
and
sub
and
add
and
mov
mov
mov
dec
int
adc
cmpps
fsincos
dec
ja
mov
loopne
adc
add
cdq
inc
inc
jae
or
mov
mov
fist
jnp
nop
xor
mov
out
mov
jno
ja
and
pop
inc
fmul
out
xor
imul
in
(bad)
(bad)
(bad)
outs
jle
jns
loop
retf
test
push
jo
outs
mov
outs
or
xor
cld
imul
stc
sbb
fadd
xchg
fistp
or
in
pop
sub
sub
mov
outs
xchg
test
xchg
jp
xchg
xchg
in
xlat
popf
popf
mov
sti
addr16
cs
inc
call
icebp
or
fbstp
data16
data16
call
sbb
sub
int
in
icebp
ror
inc
(bad)
sti
pop
push
push
push
scas
pop
mov
test
push
mov
xchg
aas
ret
div
or
jecxz
add
addr16
cmp
inc
or
retf
fwait
ins
adc
push
mov
cmp
data16
ins
dec
outs
xchg
push
adc
aas
fst
adc
or
adc
cmp
sti
sar
xchg
jo
push
push
mov
mov
sti
out
or
xchg
mov
jge
iret
cli
das
pop
ds
iret
cli
mov
cli
pushf
lds
xor
cs
mov
sbb
data16
dec
in
mov
cdq
sbb
sub
pop
fidivr
fidiv
cmp
fs
push
cmc
scas
ins
push
jbe
push
pop
and
in
inc
mov
cmc
jl
outs
mov
xchg
mov
dec
pop
icebp
dec
xor
mov
imul
and
adc
xchg
es
in
repnz
mov
jmp
outs
mov
or
and
shl
(bad)
(bad)
sub
cmps
xchg
or
jle
mov
push
mov
jae
cli
ret
fst
stc
imul
xchg
das
sbb
(bad)
adc
mov
sub
and
rol
je
out
sbb
sbb
jbe
jbe
push
mov
ins
pop
sbb
xor
movntps
js
sub
in
mov
mov
add
call
out
retf
mov
mov
in
push
std
jmp
cmp
sbb
or
mov
adc
and
dec
xor
xor
mov
retf
fwait
sbb
aas
push
and
sub
inc
(bad)
repz
fnstenv
jbe
sbb
scas
inc
lods
es
or
jg
ins
push
or
mov
aas
dec
adc
or
mov
lods
push
std
mov
stos
cmc
into
push
or
xor
mov
in
add
aad
adc
push
mov
push
aad
sti
inc
stos
imul
add
outs
sti
xlat
push
or
rcr
push
push
or
mov
clc
sub
add
add
scas
fsub
leave
pop
push
movs
jbe
inc
int3
and
scas
retf
mov
leave
add
cs
mov
add
int3
(bad)
pop
sbb
in
pop
pop
sbb
or
mov
jns
clc
or
jle
int3
repz
popa
xor
cli
push
or
cmps
and
cli
hlt
sbb
sub
jbe
mov
push
pop
dec
enter
jae
dec
cs
mov
add
xchg
stos
cld
mov
scas
jl
hlt
add
or
lahf
pop
jl
imul
outs
mov
push
lahf
xor
sub
push
aas
mov
fst
fwait
ins
adc
sbb
data16
ins
fs
mov
cmps
imul
dec
mov
sbb
xchg
cld
and
and
out
mov
lods
nop
sbb
add
sbb
jl
jb
and
std
das
std
ins
pusha
jae
in
repnz
sbb
out
jmp
pop
jmp
and
popa
daa
xor
cmc
movs
dec
or
retf
rcr
push
in
pop
pop
je
and
fs
jbe
mov
movs
add
rcl
and
mov
data16
xlat
or
push
push
xchg
mov
lock
fsub
ds
enter
or
cmp
je
(bad)
(bad)
mov
or
mov
retf
inc
mov
leave
call
mov
xchg
imul
sbb
int3
mov
adc
test
imul
mov
aas
xlat
int
mov
jae
or
(bad)
adc
sub
ins
pop
xor
sub
and
bnd
xor
shl
sbb
mov
mov
int
div
(bad)
and
adc
dec
movs
jae
sub
add
sbb
inc
fmul
test
xchg
(bad)
dec
push
leave
or
(bad)
sbb
jnp
sar
je
out
push
mov
sbb
call
adc
movs
mov
pop
jmp
xchg
sbb
rcr
pop
mov
mov
icebp
sub
mul
push
out
test
adc
cmp
inc
mov
jle
jmp
mov
xchg
in
aas
xchg
mov
imul
stos
or
lahf
ins
dec
cmp
dec
adc
imul
retf
xchg
(bad)
aam
adc
cld
push
int
push
(bad)
or
pop
push
repnz
fwait
(bad)
cmp
or
jmp
jnp
retf
fwait
in
int
jmp
or
adc
lods
sti
jge
ficom
(bad)
xchg
aaa
dec
jmp
adc
cmc
ja
lea
jmp
out
dec
cs
sar
jb
jb
movs
loopne
xchg
enter
fiadd
dec
pop
in
mov
push
sbb
data16
mov
adc
cmp
add
in
mov
pop
or
jnp
xor
push
lds
mov
sub
mov
push
fild
push
arpl
sbb
jns
jae
aaa
xchg
aaa
retf
(bad)
das
imul
sti
push
sub
mov
sub
adc
jmp
outs
lahf
loop
or
mov
xor
xchg
div
hlt
fs
mov
ss
sub
gs
not
xchg
test
mov
jb
std
xor
inc
cs
fistp
mov
neg
retf
ss
clc
scas
fist
mov
cmp
fstp
shl
imul
cmp
je
pop
or
inc
enter
sub
xor
cmc
lods
aas
fstp
sbb
in
xchg
or
pop
mov
(bad)
out
mov
push
rol
sub
mov
loope
aad
jae
loop
pop
pop
and
in
(bad)
push
lds
mov
mov
fild
(bad)
sbb
xor
ret
or
jne
cmp
or
jecxz
add
xor
or
mov
jp
mov
out
scas
js
jecxz
mov
rcr
fnstcw
sub
sub
ins
jnp
je
fsubr
push
dec
push
data16
iret
fimul
fsubr
push
dec
adc
ror
jo
fldenv
push
outs
ret
mov
mov
xchg
arpl
inc
sti
test
push
out
cmps
push
das
leave
shl
sti
cmp
lock
sbb
mov
sbb
lods
or
xor
mov
inc
pop
dec
sbb
mov
or
fxch
and
dec
lds
jo
fsubr
dec
mov
call
cld
xor
sub
jae
in
test
mov
leave
dec
ret
sbb
pop
dec
aaa
add
iret
cmp
add
es
retf
outs
push
push
test
into
mov
ret
push
mov
bswap
xlat
lods
xchg
push
retf
mov
jne
mov
mov
or
loope
pop
jmp
jge
addr16
arpl
iret
rcr
add
pop
mov
mov
mov
fild
jo
sbb
inc
out
mov
pop
in
xchg
aaa
js
and
push
sub
lea
retf
fwait
push
ror
mov
pop
and
je
inc
dec
jle
xchg
jle
inc
stos
and
cdq
out
addr16
mov
mov
mov
ins
out
xor
pop
mov
inc
fisttp
mov
push
pop
fld
jmp
(bad)
jno
adc
outs
xchg
aaa
fwait
sbb
cs
push
inc
mov
adc
dec
fcomp
mov
mov
mov
xchg
adc
cmp
popa
jg
xchg
pop
in
cli
into
pop
add
test
mov
inc
pop
add
(bad)
cmp
mov
dec
push
adc
mov
mov
mov
push
add
jno
(bad)
fcmovb
mov
add
push
lahf
mov
(bad)
dec
sbb
mov
(bad)
bnd
add
adc
(bad)
std
jnp
cmp
(bad)
mov
push
push
adc
push
or
mov
icebp
data16
adc
into
imul
stc
fiadd
xor
cvtpi2ps
sbb
aaa
mul
push
mov
leave
retf
test
fcmovb
pop
jae
je
mov
dec
ficom
lahf
lods
ud0
mov
test
sub
loope
test
pop
outs
fnstenv
add
sahf
dec
pop
push
popf
movs
inc
cdq
adc
(bad)
mov
mov
pop
or
mov
ins
outs
rcl
test
test
(bad)
push
or
movs
lahf
ins
cmp
nop
fwait
in
jmp
mov
mov
fst
loope
test
add
fs
adc
mov
mov
push
ror
sub
sub
xchg
xchg
nop
pop
fisubr
xchg
mov
mov
adc
push
push
fsubr
cdq
mov
or
mov
add
mov
or
cdq
or
mov
fwait
xchg
addr16
push
adc
or
pop
dec
pop
fisubr
sub
adc
or
jbe
mov
or
idiv
std
jae
test
lss
add
add
jge
call
inc
cmp
or
shl
test
add
xchg
xchg
out
xchg
add
addr16
clc
or
(bad)
mov
push
repz
jg
jg
jecxz
add
bound
je
or
pop
or
dec
push
jbe
(bad)
clc
mov
ja
nop
push
(bad)
xchg
or
popf
into
push
cmc
in
movs
add
psubb
mov
es
push
into
add
mov
loop
popf
pop
pop
pop
(bad)
push
mov
adc
dec
pop
(bad)
das
push
pop
sar
inc
aaa
pop
push
daa
in
cmp
dec
push
mov
(bad)
fsub
or
adc
bound
inc
mov
and
retf
out
inc
js
sahf
movs
cmps
mov
(bad)
imul
dec
or
sub
inc
or
jae
mov
sub
jae
sbb
mov
sub
xchg
not
sub
xor
jge
cmp
retf
fwait
test
sbb
mov
mov
aaa
fcmovne
add
push
mov
in
repnz
sub
mov
mov
es
data16
enter
data16
push
lods
xor
sti
stc
mov
jecxz
test
xchg
outs
add
sub
xchg
(bad)
js
mov
xor
icebp
into
mov
fwait
ror
ss
and
stc
ins
(bad)
(bad)
xor
or
icebp
push
push
push
call
popa
imul
data16
sbb
xor
adc
in
enter
cld
xor
gs
out
xor
js
sbb
fcomp
mov
bound
sbb
or
mov
mov
imul
fist
push
outs
int3
int3
sbb
fs
mov
mov
mov
pusha
mov
fist
scas
shl
add
jnp
mov
xchg
daa
addr16
push
or
mov
aas
adc
int
imul
out
popa
imul
fwait
jg
jo
or
mov
xchg
retf
cmp
iret
bswap
inc
and
xchg
xor
mov
shr
mov
jnp
dec
dec
pop
jle
int
iret
or
inc
mov
clc
adc
sub
arpl
mov
pop
ficom
jne
sbb
(bad)
xchg
imul
or
or
jl
into
cmp
and
leave
mov
push
ficomp
gs
jmp
mov
cmp
or
aas
push
sbb
out
sbb
sub
leave
icebp
sbb
outs
xchg
aaa
mov
sbb
idiv
lods
push
sbb
sub
fwait
dec
adc
dec
or
fimul
ins
xchg
mov
cdq
in
test
xchg
sbb
inc
dec
bound
call
cs
clc
loopne
addr16
jae
push
sbb
mov
xor
test
pop
and
push
jle
hlt
sbb
mov
xchg
movs
sbb
xor
xchg
clc
lds
pop
pop
out
sti
pop
mov
mov
push
add
add
pop
call
jecxz
xchg
xchg
mov
fmul
cmps
cmp
stc
add
aas
dec
mov
arpl
mov
and
pop
outs
mov
inc
ins
adc
cmp
sbb
fwait
in
out
mov
and
loopne
pop
fisubr
dec
push
xor
cmp
adc
xor
iret
jge
sub
mov
mov
xchg
shr
mov
ret
popf
cmp
jecxz
mov
jl
jle
stc
mov
ins
lock
retf
jmp
inc
mov
(bad)
push
fisubr
aaa
sub
inc
cdq
mov
sbb
pusha
dec
pop
sub
and
or
push
outs
xchg
aaa
retf
add
adc
jnp
fisubr
lgs
loop
daa
jns
mov
int
hlt
inc
test
mov
inc
mov
inc
sbb
mov
stos
aaa
pop
lods
push
push
mov
pop
icebp
mov
push
add
ficomp
rol
mov
mul
fcomp
cli
scas
sbb
sbb
retf
std
cmp
jle
xchg
icebp
sub
push
sbb
sbb
mov
icebp
inc
js
fs
dec
jb
sub
ins
outs
mov
outs
adc
sbb
test
jg
aaa
inc
and
jne
lahf
fldcw
mov
xor
scas
in
mov
jno
int3
pop
inc
ss
push
outs
pop
jmp
fs
mov
mov
push
hlt
in
int
scas
or
std
push
push
pop
dec
jge
aaa
rcl
sbb
or
pop
mov
jle
jnp
adc
loope
xor
scas
push
stc
inc
ror
std
imul
mov
popa
pop
xchg
ret
adc
adc
aaa
stos
jp
jmp
sti
sbb
mov
retf
xchg
fcmovnb
push
push
test
add
repnz
sbb
add
daa
fbstp
mov
movs
(bad)
inc
mov
xchg
call
imul
pushf
jo
mov
jecxz
and
xor
mov
sti
lahf
fild
adc
addr16
push
mov
mov
in
or
loope
movs
mov
sti
clc
sahf
mov
pop
push
daa
ins
sub
mov
test
inc
inc
pop
fisubr
and
and
or
mov
and
outs
xchg
mov
or
mov
xor
xchg
push
popf
cdq
clc
lods
imul
sti
retf
nop
sub
scas
jns
out
adc
cmp
xchg
fcmovne
test
cmp
loop
or
or
ss
ret
inc
mov
jl
xor
fs
xor
and
mov
in
pop
or
dec
push
dec
jns
sbb
cmp
adc
jmp
mov
std
jmp
outs
pop
add
xlat
mov
mov
ins
inc
mov
jne
cmp
jno
push
movs
add
push
ss
sub
add
clc
and
push
mov
jmp
and
push
in
xchg
fist
mov
jno
ins
dec
inc
and
or
dec
adc
imul
push
not
dec
mov
mov
ret
jl
add
mov
mov
push
jmp
sahf
or
xor
sbb
inc
daa
xchg
mov
xchg
mov
mov
add
cld
into
cld
imul
dec
into
xchg
ja
push
shrd
adc
test
adc
jns
mov
popf
xor
mov
(bad)
add
(bad)
test
ret
fldcw
xor
stos
xchg
fnsave
fisubr
push
js
xlat
mov
or
sbb
movsx
jg
dec
loop
jo
inc
and
xchg
retf
and
aad
fidiv
mov
inc
xor
sub
adc
mov
sbb
jmp
mov
fcom
pop
ins
in
xchg
in
add
cmp
mov
je
loop
jns
ins
aaa
and
ret
xor
mov
jle
ja
add
(bad)
cmp
jg
mov
xor
mov
lods
sub
pop
retf
mov
add
mov
retf
icebp
mov
mov
xor
mov
pushf
jp
outs
inc
shr
ret
or
jnp
std
or
popf
push
in
cmp
jle
(bad)
int
out
cmp
sub
xlat
or
jp
cmp
sbb
fst
add
mov
jmp
dec
push
fwait
int
icebp
pop
mov
test
ins
adc
pop
cmp
out
vorpd
fldenv
(bad)
ins
sub
jg
pop
ss
or
int
pop
mov
rcl
ins
dec
cmp
jnp
mov
and
xlat
lods
gs
or
xor
jl
test
lods
cli
not
and
ret
or
jmp
mov
in
sub
test
test
fld
xchg
(bad)
imul
icebp
mov
xchg
jg
inc
push
imul
xchg
movs
add
call
hlt
inc
fistp
jecxz
ins
nop
mov
add
jecxz
or
mov
push
leave
pop
in
fs
fild
xlat
xlat
mov
fsubr
mov
cli
mov
jmp
dec
xlat
pop
pop
or
and
divps
sahf
ins
out
(bad)
test
in
adc
clc
(bad)
fisub
in
ss
ror
jne
xchg
enter
cwde
ins
xor
mov
jle
iret
enter
add
call
ror
call
iret
out
mov
dec
cdq
retf
pop
or
mov
sbb
jmp
jmp
lahf
cs
sbb
and
(bad)
inc
add
jo
fdiv
mov
jae
into
dec
mov
dec
jge
cmp
adc
(bad)
rcl
stos
cld
arpl
mov
loope
ja
mov
ins
bound
push
jo
fcmovnb
xchg
mov
sar
xchg
sub
mov
outs
in
cmc
mov
repz
mov
scas
add
ja
or
ins
sbb
adc
in
adc
popf
and
sub
(bad)
pop
(bad)
imul
mov
addr16
icebp
adc
xchg
sbb
push
inc
cmp
addr16
rcr
xchg
call
loope
fisttp
sub
xor
xchg
mov
mov
mov
fnstcw
or
mov
xlat
jo
adc
xchg
movs
mov
push
dec
cld
stc
xchg
iret
or
mov
out
inc
mov
jmp
mov
dec
ficomp
adc
inc
xor
leave
mov
aam
inc
(bad)
in
imul
outs
mov
push
ret
stc
ins
jmp
xchg
lds
pop
in
movs
mov
test
jle
cmp
dec
jg
mov
lods
ds
or
pop
jle
outs
push
imul
add
jg
ss
enter
mov
mov
pop
dec
xor
mov
rol
fst
cmp
mov
add
push
cmp
aaa
fistp
inc
loopne
hlt
jle
inc
mov
popf
fisubr
xchg
cmp
es
sub
dec
adc
lock
pop
inc
xor
pop
mov
mov
or
aas
sbb
pop
sub
je
xor
mov
ret
jbe
sti
js
sti
outs
mov
out
and
adc
and
test
sub
dec
es
das
sub
sub
call
push
sti
pop
fcompp
clc
xchg
cmp
(bad)
int
ds
push
sub
jmp
pop
push
jb
add
leave
in
cmps
sub
fldcw
inc
jge
popa
out
inc
xchg
fiadd
and
fmul
comiss
fxch
dec
jae
pushf
(bad)
pop
ret
cmp
fist
sbb
add
test
ins
adc
movs
or
mov
inc
pop
lock
or
(bad)
push
daa
push
mov
hlt
xchg
movs
test
cli
mov
cmc
ret
cwde
push
cwde
sar
xor
(bad)
loopne
or
push
sbb
cmp
popa
daa
sbb
sbb
fwait
in
mul
mov
adc
fistp
mov
cwde
cs
jno
call
sbb
or
mov
adc
push
sbb
inc
cs
mov
mov
xchg
repnz
sahf
or
pop
cmp
push
loop
add
addr16
mov
int
retf
in
fiadd
or
mov
mov
and
out
push
lds
cmp
sub
mov
call
js
mov
pavgb
int
(bad)
(bad)
(bad)
retf
add
jae
dec
shr
push
xchg
loopne
cmp
mov
stos
pop
mov
jne
popa
movs
mov
mov
inc
mov
lods
pop
pusha
popf
inc
sahf
hlt
push
call
int3
xor
js
stc
aam
sbb
(bad)
out
fisub
or
out
test
dec
int
pop
inc
repz
pop
outs
repnz
pop
and
pop
sbb
cmp
cs
fwait
in
int
scas
movs
push
push
adc
mov
sahf
xchg
aaa
push
xchg
test
or
xor
ins
sti
sti
iret
daa
out
js
sbb
jecxz
sahf
mov
sub
cdq
fdiv
sub
scas
paddb
adc
out
in
inc
cmp
mov
sbb
out
xor
fcomi
mov
rol
test
fstp
out
lds
addr16
mov
aas
shl
push
mov
cmp
jp
add
les
mov
lods
sub
mov
mov
mov
rcl
fisubr
sbb
or
loopne
div
bound
cmps
scas
ja
pop
fisubr
add
jo
pop
hlt
jecxz
je
test
aas
or
mov
scas
popf
jnp
and
pop
test
ficom
lahf
push
cmp
retf
pop
jne
push
fisubr
push
xor
adc
or
bnd
mov
mov
jl
(bad)
mov
mov
lahf
test
push
xor
(bad)
xor
das
pusha
sahf
xchg
(bad)
test
outs
das
cwde
xchg
mov
out
or
adc
repnz
push
daa
addr16
pop
loop
and
sbb
mov
outs
push
retf
and
lahf
stc
cwde
pusha
adc
mov
setae
fdiv
push
mov
lock
add
mul
push
rol
pushf
inc
out
call
imul
sub
popf
dec
mov
adc
pop
add
pop
lods
arpl
mov
xchg
cmp
stc
mov
jne
mov
cmp
aaa
hlt
jmp
mov
sub
jae
and
push
adc
int
data16
addr16
inc
sti
out
cs
retf
sub
mov
sub
out
mov
idiv
fst
ficom
enter
sbb
imul
cld
outs
dec
ror
sar
das
and
mov
dec
mov
dec
xchg
mov
clc
and
xor
sbb
sub
push
ret
je
test
stos
mov
lea
lds
push
mov
repz
outs
cmps
(bad)
jg
imul
fldcw
aam
xchg
xor
fisubr
pop
push
pop
leave
xchg
inc
imul
mov
mov
pop
gs
add
jno
jge
add
retf
inc
dec
std
daa
adc
mov
mov
inc
retf
aaa
cwde
or
sbb
mov
sbb
mov
lea
sbb
call
lock
fimul
or
mov
adc
imul
add
icebp
inc
mov
repnz
adc
inc
mov
jb
lods
das
loop
loope
or
add
ds
leave
and
fwait
inc
jbe
or
dec
cs
pop
(bad)
jmp
push
cld
cmc
mov
xlat
(bad)
dec
jmp
int3
mov
shr
movs
cmp
inc
and
ss
push
push
add
js
sti
jae
jno
jecxz
jge
cli
add
inc
sbb
add
and
mov
mov
push
sbb
rcr
mov
in
retf
adc
mov
int
enter
mov
mov
jecxz
es
push
daa
leave
cmp
mov
into
sub
cmp
cmps
xchg
inc
adc
jl
ret
and
or
scas
pop
mov
popf
fbstp
(bad)
sbb
movs
outs
xchg
cmp
xchg
pop
mov
or
sbb
fdivp
outs
outs
mov
std
xchg
test
xchg
(bad)
scas
in
inc
push
push
mov
stos
and
pop
push
mov
add
in
xchg
mov
out
dec
call
mov
and
or
jmp
cmp
xor
add
xor
call
sbb
pusha
inc
pop
jmp
retf
enter
add
add
hlt
imul
xlat
les
ja
shl
test
push
or
and
xchg
ret
stos
ss
mov
xor
fcmovne
call
jb
lea
mov
shl
add
jmp
push
aad
xchg
inc
cdq
call
jbe
push
mov
mov
pop
xor
shl
mov
call
xchg
test
adc
inc
in
pop
xor
pushf
jmp
imul
aam
sub
aam
sbb
nop
adc
sub
int3
dec
ss
add
cmps
inc
stc
push
sub
sti
neg
movs
sub
pop
lahf
cmp
mov
jo
xor
cmps
mov
and
test
not
das
push
sub
ins
xor
cs
shl
retf
ja
fsubr
add
mov
hlt
sbb
cwde
retf
mov
aaa
cdq
jo
or
(bad)
data16
ds
and
idiv
jae
mov
cmp
sbb
sub
or
fnstenv
add
adc
out
xor
inc
add
and
inc
aam
dec
mov
aam
fwait
dec
fdivr
inc
sub
cmp
ins
out
inc
movs
or
mov
ins
lods
cwde
inc
sub
and
push
inc
mov
sar
mov
and
mov
scas
js
mov
icebp
add
mov
(bad)
push
push
mov
add
movs
or
aam
mov
test
cdq
xchg
pop
mov
mov
fsubr
push
mov
cmp
and
dec
push
mov
lods
push
in
add
out
and
mov
cmp
mov
jno
retf
cmp
mov
jle
or
call
leave
xor
movs
jns
inc
mov
xor
add
mov
adc
fwait
mov
cmp
fisubr
push
jmp
adc
pop
push
add
mov
shl
xchg
adc
mov
mov
movs
or
adc
cmp
push
inc
das
sbb
push
movs
or
div
fmul
jle
mov
scas
xchg
sbb
lods
cmp
(bad)
and
mov
jo
mov
dec
into
jle
(bad)
retf
outs
inc
sbb
in
sub
popa
sar
xchg
mov
jmp
cmp
fcmovnb
enter
sbb
xor
and
mov
gs
std
sub
add
mov
dec
fdiv
cmp
add
sbb
gs
mov
inc
bnd
mov
jbe
mov
and
or
jle
or
mov
shr
lea
xchg
pop
fcmovne
mov
or
es
and
mov
mov
mov
sbb
setnp
repz
xchg
mov
or
add
ins
adc
add
(bad)
rcr
leave
xor
daa
sbb
or
jg
sub
test
(bad)
or
fcomip
fstp
or
daa
(bad)
mov
fcomp
icebp
mov
push
jp
add
and
mov
pop
mov
pop
xor
or
fucom
add
mov
out
out
mov
adc
cmp
ret
out
xor
jo
outs
jmp
arpl
loopne
aad
cmp
and
push
fadd
cmp
pusha
or
imul
cmp
add
fs
pop
cmp
add
je
jb
arpl
fs
jae
sar
xchg
jae
outs
popa
fs
imul
in
push
repnz
in
inc
add
dec
add
add
dec
inc
add
add
add
inc
pop
sbb
add
add
adc
mov
ficomp
push
sub
add
das
in
adc
fcomp
in
adc
dec
nop
dec
mov
dec
push
cmp
stos
popa
and
test
rol
call
add
out
fs
sub
add
add
add
add
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
