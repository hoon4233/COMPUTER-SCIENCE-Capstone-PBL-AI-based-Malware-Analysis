inc
retf
add
add
add
dec
add
add
add
add
add
add
add
add
push
dec
daa
add
push
lea
push
add
add
add
sub
add
add
add
sub
or
jae
add
or
jae
add
or
jae
add
or
sub
add
xor
add
add
add
add
adc
add
add
or
add
or
add
sub
adc
add
sldt
add
add
adc
add
add
or
add
or
add
sub
adc
add
sldt
add
add
adc
add
add
or
add
or
add
sub
adc
add
sldt
add
add
jle
add
add
or
sub
push
sub
adc
add
adc
add
add
add
adc
add
sub
add
or
sub
push
sub
add
adc
add
or
add
push
add
adc
sub
add
or
sub
push
sub
adc
add
sldt
add
add
adc
add
adc
add
or
add
sub
adc
add
or
add
or
add
add
adc
sub
push
sub
adc
add
sbb
add
or
add
add
or
add
add
or
push
sub
or
add
sub
xor
add
add
add
add
adc
adc
(bad)
adc
push
add
add
or
adc
add
add
add
add
adc
add
or
or
add
sub
add
sub
jle
add
or
cmp
add
add
sub
add
add
pop
add
or
push
jae
add
push
add
add
sbb
add
add
add
add
jb
sbb
inc
pop
add
push
jae
add
or
add
or
adc
add
sub
add
adc
add
sub
add
adc
adc
push
sub
add
or
imul
and
add
outs
and
add
sub
add
push
or
sub
add
sub
add
adc
or
push
add
or
add
add
and
add
or
add
push
add
add
or
add
sbb
adc
add
or
adc
dec
fisub
lea
sub
add
push
push
lea
add
add
adc
and
add
adc
pusha
xchg
or
and
and
add
sbb
or
push
adc
pop
pop
adc
pop
adc
adc
sub
sub
add
xor
inc
add
add
pop
add
add
mov
loope
mov
sub
add
push
outs
sbb
add
or
add
add
je
add
add
pop
adc
(bad)
jmp
add
outs
sbb
add
je
add
sbb
cmp
add
add
sub
add
xor
jp
add
push
add
adc
add
or
add
add
add
or
push
sub
add
or
pop
jae
add
or
jae
add
or
add
add
adc
push
push
mov
or
add
pop
add
add
push
push
adc
daa
add
or
push
push
push
mov
or
add
add
cmp
pop
outs
sub
add
or
add
or
add
add
add
xor
add
add
adc
outs
sub
add
or
pop
mov
sub
pusha
sub
sub
add
push
outs
das
add
or
pop
add
add
add
add
xchg
ret
push
sbb
add
and
add
outs
sbb
add
or
add
add
pop
add
add
je
add
add
sub
call
jne
sub
add
push
outs
sbb
add
je
add
sbb
push
add
push
outs
sbb
and
add
or
pop
add
add
cmp
add
add
sub
add
adc
add
scas
add
add
add
adc
or
pop
or
add
or
add
pop
adc
add
or
adc
(bad)
or
add
adc
(bad)
(bad)
inc
mov
lea
add
add
add
add
or
push
cmp
add
add
push
add
(bad)
or
sbb
push
and
add
add
push
push
arpl
or
sbb
add
add
pop
push
arpl
or
push
bound
(bad)
and
add
add
adc
push
add
push
xchg
or
(bad)
adc
adc
adc
ds
(bad)
(bad)
call
add
cmp
add
add
sub
add
add
pop
add
or
adc
add
sldt
add
add
adc
add
xor
add
or
add
add
push
sub
adc
add
adc
add
adc
add
add
xor
add
jae
add
or
cmp
add
add
sub
push
add
pop
add
or
adc
or
push
add
add
add
adc
sbb
or
push
shl
add
add
adc
add
and
cmp
add
aas
and
add
push
push
sbb
add
or
lea
pop
push
ror
add
sbb
adc
add
mov
add
mov
or
add
push
or
add
add
push
sub
adc
or
inc
add
add
add
add
call
and
push
sbb
sub
add
push
sbb
or
push
adc
or
pop
lea
add
add
pop
push
add
call
pop
mov
sub
add
or
add
add
push
sub
add
or
add
mov
add
adc
xor
or
add
ror
add
add
adc
add
outs
add
or
push
jb
add
jo
aaa
add
or
add
or
add
outs
cmp
add
or
or
outs
cmp
add
adc
outs
cmp
add
adc
cmp
add
adc
jle
add
add
add
add
or
add
pop
pop
or
adc
adc
sub
pop
adc
add
pop
adc
sub
add
or
fadd
add
add
add
adc
add
add
dec
je
adc
add
add
xor
add
add
add
add
adc
jle
add
add
add
add
or
sub
add
or
outs
aas
add
or
inc
add
or
sub
add
outs
aas
add
or
and
add
or
or
add
sub
add
xor
add
add
adc
jae
add
or
push
or
and
add
outs
inc
add
or
pop
add
add
or
inc
add
or
outs
inc
add
or
pop
pop
pop
or
add
add
or
add
or
add
or
add
sub
add
xchg
mov
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
inc
mov
in
adc
add
add
add
add
add
je
popa
add
add
add
add
add
ins
add
ins
add
add
add
inc
add
and
add
xor
inc
iret
fcmovne
sub
push
jl
pop
daa
jge
adc
inc
test
add
sub
in
adc
inc
in
push
xabort
(bad)
xor
shr
stos
into
inc
jecxz
popa
pushf
fbstp
jae
mov
cli
outs
xor
movs
add
add
pop
xchg
cmp
jg
jge
xchg
xchg
clc
push
or
sub
fs
cmp
cmp
push
dec
sub
aad
pop
or
sub
mov
fs
(bad)
fild
mov
xor
lock
rol
jo
data16
sub
xchg
out
je
mov
rcl
and
mov
ins
mov
loope
sub
push
lahf
dec
adc
cmp
repz
mul
or
bound
mov
test
sti
add
jp
popa
in
lods
and
pop
sbb
in
pop
or
mov
pushf
rcl
push
or
inc
loopne
rcr
test
push
xchg
push
jp
cmp
out
fcom
xor
outs
mov
jl
sbb
lods
(bad)
in
repz
sbb
enter
jl
mov
iret
add
not
xchg
pop
lods
xor
xchg
mov
mov
xor
repz
(bad)
mov
mov
dec
add
mov
xchg
test
ret
jns
and
loope
out
aam
enter
sbb
sub
xchg
pop
rol
ret
push
mov
pop
push
aaa
sub
mov
(bad)
jb
inc
xchg
js
into
pop
cmc
mov
dec
or
inc
scas
aaa
or
dec
push
nop
aad
jae
jns
or
ins
jge
fisubr
push
rcl
ds
or
adc
mov
(bad)
in
(bad)
mov
or
adc
push
cmp
fild
jl
xor
cli
xchg
mov
or
jp
rcl
mov
xlat
pop
inc
hlt
mov
or
mov
out
sbb
jmp
pop
cwde
imul
xor
sub
or
inc
jb
cmp
pop
stos
mov
(bad)
jg
(bad)
jo
or
push
and
fmulp
(bad)
pop
out
pop
(bad)
int3
xchg
xlat
jne
xchg
adc
sub
es
jmp
cmp
adc
push
fdiv
add
xor
pop
imul
sub
sti
or
ret
in
or
pop
fstp
retf
dec
sbb
pop
mov
repnz
fadd
imul
add
mov
popa
inc
xor
mov
dec
rcl
jg
sti
ror
xadd
xchg
inc
out
pop
or
fdivr
pop
int3
out
popa
xchg
test
jge
pop
push
mov
out
aas
xchg
and
dec
xlat
push
loope
out
jp
daa
push
push
push
push
aaa
jmp
mov
fnstcw
addr16
cmp
arpl
jl
cmp
rcl
bnd
icebp
inc
xlat
xor
cmp
or
test
xchg
adc
imul
pop
sahf
ja
mov
sahf
cmp
xor
push
and
xchg
sbb
mov
xchg
jge
cmps
jmp
ja
inc
jo
out
cld
repnz
sub
add
xchg
mov
movs
push
mov
cld
pop
nop
and
pop
mov
inc
cmp
out
or
add
jmp
ss
fldcw
cmps
fcmovb
rol
xor
fstp
rcpps
and
jmp
fadd
clc
fld
cmp
mov
arpl
pop
mov
adc
or
scas
lahf
adc
pop
int3
inc
inc
cmp
fmul
repnz
in
(bad)
or
and
call
lahf
xchg
jmp
pop
sub
test
ret
ds
inc
outs
out
icebp
es
addr16
xlat
xor
test
and
psubsw
xor
ss
test
or
jle
and
out
mov
fisub
mulps
repz
pop
mov
jge
push
inc
pop
hlt
pop
xor
daa
push
cs
clc
out
mov
cld
out
ja
lods
mov
inc
int
push
and
push
inc
idiv
scas
ret
xchg
jl
push
mov
icebp
repz
call
dec
sbb
ins
and
and
aam
arpl
clc
or
mov
xor
jmp
inc
add
aam
add
pop
push
sub
pop
xchg
adc
gs
dec
pop
sbb
outs
pop
mov
adc
jle
adc
inc
push
not
enter
shl
xor
stos
dec
mov
loopne
jge
loop
imul
sub
pop
lods
or
out
sub
pop
mov
scas
mov
ss
leave
shl
pop
mov
push
and
addr16
jae
dec
aaa
mov
(bad)
xor
sbb
inc
jb
push
les
addr16
and
inc
mov
shl
aad
frstor
xchg
test
adc
jbe
inc
add
cs
int3
inc
jg
adc
fsub
mov
mov
fmul
cdq
adc
adc
adc
out
aas
sahf
adc
je
mov
jge
dec
cmc
sar
mov
es
cmps
add
cdq
and
in
push
iret
inc
or
scas
mov
cmp
pop
cwde
jbe
cmp
add
mov
xor
push
in
data16
mov
jmp
jbe
xlat
sbb
mov
jae
push
pop
sti
hlt
jb
xchg
sbb
or
mov
mov
push
push
sti
xor
add
div
dec
test
fimul
mov
pop
gs
add
mov
or
mov
rcr
pop
mov
pop
mov
pop
cwde
ret
ret
stos
adc
and
mov
pop
int
mov
and
push
aaa
xor
ins
(bad)
push
lods
popf
rcl
mov
std
gs
cmps
or
jle
or
cmp
and
mov
pop
adc
cmp
retf
enter
cmp
add
adc
inc
sbb
mov
sub
inc
sub
stos
xchg
ja
mov
call
test
les
hlt
js
fdiv
lods
fcom
mov
xor
in
loopne
cmps
sbb
xchg
dec
gs
daa
mov
cmp
fs
xchg
test
xor
and
mov
xlat
call
imul
imul
pop
inc
test
cmp
jg
inc
in
mov
ror
data16
(bad)
in
dec
stc
cmp
inc
mov
xchg
movs
and
ss
jmp
in
js
push
push
ror
repz
icebp
pop
(bad)
mov
mov
pop
(bad)
pusha
(bad)
mov
les
pop
and
sahf
clc
cld
loopne
fldenv
ret
imul
fcmovnbe
pop
in
jns
ins
mov
(bad)
loope
sbb
push
hlt
loop
movs
dec
xchg
pop
adc
(bad)
mov
add
jmp
mov
ja
jno
inc
in
push
cmp
inc
sub
push
sbb
and
jno
xchg
jp
movs
add
gs
movs
xlat
cmp
xor
scas
push
or
outs
(bad)
cmp
and
adc
mov
push
adc
inc
scas
jbe
pop
pop
sub
(bad)
in
and
mov
cmp
cmc
sbb
sbb
sbb
cwde
outs
push
xor
inc
fst
fist
rcl
jle
cmps
push
sbb
and
repz
inc
aam
dec
inc
movs
jae
dec
fdiv
sbb
lods
fnstsw
(bad)
test
aaa
push
push
mov
inc
in
sub
loopne
ret
rcr
jns
clc
cmc
sub
xor
or
js
xor
jge
movs
jmp
add
nop
mov
pusha
ja
lods
add
dec
jnp
sbb
mov
sub
outs
xor
xlat
popf
ja
dec
and
adc
lods
xor
dec
jmp
or
xor
or
push
clc
cmp
repnz
ror
cmc
scas
je
inc
mov
out
jmp
or
or
adc
ss
push
int3
xor
jmp
cdq
loop
xchg
jmp
mov
daa
and
stos
lods
mov
cwde
mov
retf
inc
xor
add
aam
and
rcl
shl
pop
rol
xor
test
and
pushf
mov
std
(bad)
lock
(bad)
xchg
sub
pop
xchg
xchg
ficom
xor
push
jo
mov
adc
shr
pop
inc
push
pop
in
pushf
lea
ret
add
push
push
movs
adc
xchg
jg
mov
sbb
sbb
push
sahf
hlt
std
fistp
inc
rcr
rcr
mov
cmp
inc
mov
pop
push
mov
inc
or
out
xlat
cs
jge
mov
loopne
sahf
sbb
pop
adc
dec
pop
mov
xchg
xchg
sub
xor
aad
in
ins
gs
imul
daa
outs
xchg
test
and
iret
test
and
outs
gs
ret
pop
fdiv
scas
pop
aad
xor
push
xchg
cmp
loop
jo
or
jb
mov
pop
rol
rol
mov
push
idiv
mov
pop
loopne
mov
aaa
and
mov
(bad)
mov
imul
sbb
pop
adc
mov
mov
loope
jmp
lock
in
xchg
pop
or
inc
xor
xor
or
into
enter
ror
pop
cmps
fmul
inc
shr
(bad)
mov
adc
fucom
mov
xlat
loopne
leave
pop
ds
ja
outs
add
lods
mov
push
call
mov
retf
push
or
enter
mov
cld
xor
out
iret
(bad)
(bad)
movs
(bad)
shl
add
sbb
adc
stos
add
cmp
mov
mov
enter
mov
std
lea
mov
daa
lods
pop
es
mov
jae
jge
popf
out
mov
push
clc
mov
retf
in
sbb
sub
cmp
loopne
adc
iret
xchg
xchg
fsubrp
or
pop
pop
out
(bad)
vpmuludq
mov
add
add
repz
cmp
aas
ss
adc
pop
mov
fs
adc
js
push
push
add
enter
sbb
and
mov
adc
repz
and
retf
pop
add
pop
cs
mov
jb
mov
push
mov
scas
ins
pop
sub
gs
mov
add
jp
loop
pop
sti
test
out
test
pop
pop
inc
xchg
arpl
and
xor
inc
(bad)
mov
hlt
xchg
addr16
retf
inc
xor
aas
jge
bound
(bad)
cdq
(bad)
push
push
push
imul
push
sahf
sub
cmp
es
mov
aas
in
push
sahf
bound
sub
pop
inc
dec
ins
jle
sub
shl
jbe
cmp
clc
in
add
xor
inc
sub
xchg
push
mov
and
test
sub
(bad)
jecxz
pop
iret
dec
cs
xor
and
jae
out
inc
jae
sbb
add
es
push
addr16
sub
mov
test
xor
in
mov
out
fnsave
sub
fisttp
repz
adc
cli
(bad)
jo
jo
hlt
call
xchg
movs
jae
or
or
push
mov
and
jecxz
pop
shl
rcr
ja
xor
xlat
inc
retf
jmp
shl
stos
adc
mov
movs
or
add
(bad)
into
and
popa
ret
(bad)
gs
xchg
es
add
cs
pop
imul
sbb
iret
jb
cli
jbe
in
pushf
cmps
mov
jbe
popa
sbb
enter
dec
mov
imul
loopne
xchg
movs
cmp
aaa
adc
call
push
sbb
adc
dec
fwait
cmp
mov
adc
sbb
xor
pop
mov
(bad)
push
add
inc
jae
inc
arpl
pop
ret
stos
add
dec
fbld
sbb
sbb
popa
shl
sbb
mov
mov
inc
or
bound
pop
mov
ins
iret
das
test
out
(bad)
in
stc
mov
jnp
mul
imul
sar
push
out
fcmovne
mov
idiv
mov
pop
dec
mov
mov
and
sub
into
jne
pop
or
mov
push
push
rcr
mov
sbb
push
inc
xlat
sbb
retf
aam
fmul
and
inc
dec
push
and
test
inc
and
out
xchg
mov
in
sub
(bad)
adc
mov
fsubrp
and
ret
xchg
retf
fmul
sbb
mov
cmp
in
mov
xlat
jmp
addr16
aam
lods
ret
stos
push
mov
ss
mov
in
fs
loopne
sbb
pop
fsubr
stos
add
gs
push
inc
and
arpl
cs
xchg
stos
and
xchg
mov
(bad)
fisttp
xor
xor
xor
pop
sahf
retf
xor
repz
cmc
push
or
add
into
outs
mov
cs
in
sub
(bad)
in
or
sti
and
mov
cmp
call
inc
pop
shl
data16
dec
cdq
inc
adc
and
aam
mov
xchg
in
cs
pop
stc
push
dec
mov
mov
add
jp
mov
pop
int3
fistp
popa
fild
fcomip
sub
dec
in
sbb
add
test
stc
inc
shl
and
aad
inc
xor
out
ins
jnp
int3
push
and
mov
clc
cwde
push
pop
xor
cmp
fnsave
fist
dec
add
adc
dec
retf
fcomp
inc
adc
xchg
pop
fnsave
cmps
rcr
je
sahf
mov
inc
(bad)
fmul
outs
rcr
pop
jmp
inc
jno
arpl
push
dec
(bad)
lock
cmps
mov
call
sbb
and
imul
add
(bad)
xlat
add
cmp
pop
call
out
mov
sti
ja
movs
push
push
jmp
xor
push
rcl
test
test
test
aad
mov
cs
sar
ficom
dec
xchg
mov
push
fldcw
les
rcr
jg
lods
ins
xor
loop
cmp
aas
mov
or
pop
adc
dec
dec
(bad)
aad
ins
in
in
icebp
movs
cdq
fisttp
push
stos
cmc
test
call
cld
retf
pop
and
lods
sub
addr16
inc
and
movs
jmp
es
loope
cmp
(bad)
sbb
push
push
mov
jmp
pushf
sub
mov
xor
mov
jge
pop
mov
jg
mov
lds
out
add
div
dec
add
nop
or
cmc
dec
fsub
pop
call
(bad)
sbb
in
add
das
(bad)
dec
push
btc
test
pusha
push
fcmovu
adc
ja
dec
loope
cli
rep
inc
movs
push
in
mov
and
xor
or
push
(bad)
jecxz
xor
test
cmp
pusha
xor
mov
push
jg
and
shr
sbb
add
sbb
mov
cmp
popf
outs
jns
(bad)
popa
mov
jo
(bad)
lea
movs
fild
lock
cmp
dec
pop
push
mov
ret
retf
(bad)
xor
xchg
and
(bad)
(bad)
and
imul
cmp
adc
mov
adc
fwait
lea
sbb
and
cmp
xchg
and
dec
or
cli
sar
push
xchg
into
cli
lea
jmp
fs
test
fcom
aaa
out
cmp
or
aaa
call
fist
jb
cmp
call
popa
inc
jnp
mov
inc
pusha
icebp
shr
xchg
xchg
push
xor
jl
dec
test
out
lock
push
dec
lds
les
out
in
outs
jl
mov
clc
lea
add
xchg
ror
xor
ret
or
ja
lea
stc
jge
xchg
jae
jae
mov
cmp
mov
sub
pop
sub
cld
push
push
rol
daa
cmp
(bad)
in
aam
loop
mov
cmc
mov
push
sub
inc
out
xor
or
rep
imul
inc
xchg
(bad)
popa
movs
aas
enter
jo
mov
fs
addr16
aad
dec
ret
and
icebp
cmc
(bad)
outs
aaa
in
iret
adc
sbb
push
dec
pop
mov
retf
xor
(bad)
retf
xor
push
and
in
scas
fwait
cmp
repnz
dec
jns
sub
fsubp
std
jno
and
not
movs
loop
fidiv
lods
sub
or
sub
cmp
add
ja
pusha
mov
nop
lods
pop
mov
xchg
jle
xchg
mov
rcr
mov
dec
cmp
sahf
pop
cwde
xchg
ds
frndint
into
jne
add
push
rcl
out
rcl
xchg
or
mov
adc
pop
ret
movs
mov
std
sti
jg
mov
xor
mov
adc
sbb
push
jno
pop
pop
add
push
cdq
(bad)
push
rcr
jle
jo
loopne
in
mov
es
xor
pop
push
pushf
enter
jmp
inc
cli
es
outs
nop
out
enter
jb
aad
xchg
xor
into
adc
(bad)
sbb
shl
arpl
cmp
test
pop
jns
mov
pop
cld
fsub
xchg
cdq
push
mov
cmp
add
mov
cmp
aaa
ja
and
(bad)
cld
sbb
pop
cwde
in
mov
(bad)
pushf
retf
dec
loop
sahf
jle
mov
dec
in
popf
push
addr16
(bad)
sahf
cwde
popf
xchg
pushf
sti
stos
scas
dec
cdq
sbb
adc
int
popa
mov
dec
mov
inc
es
jl
cld
push
or
mov
push
loope
js
imul
xchg
mov
hlt
jp
call
retf
fnsave
jge
mov
pop
imul
faddp
push
int
into
mov
pop
and
mov
add
loopne
xor
imul
clc
pop
push
push
or
cli
and
sbb
out
sub
das
test
sub
adc
push
aaa
lods
retf
or
aaa
pop
jbe
push
xor
and
mov
clc
inc
loop
into
xchg
test
fcomp
inc
clc
icebp
test
sub
cmp
cmp
cmc
aam
mov
cld
cwde
or
mov
stc
ds
neg
(bad)
fcom
(bad)
xchg
sti
add
sbb
in
(bad)
mov
(bad)
mov
cs
mov
fs
popa
jne
cmp
pop
stos
repnz
shl
int3
xlat
call
and
sub
and
jae
or
cmp
sar
push
int3
arpl
in
push
mov
or
shl
jg
arpl
mov
mov
(bad)
mov
or
pop
pushw
pop
xchg
retf
retf
inc
sub
iret
add
stc
call
jmp
(bad)
mov
mov
pop
sti
outs
adc
adc
xchg
fadd
retf
fsub
cmp
push
sub
nop
(bad)
cli
test
lds
out
pop
mov
xor
jno
call
adc
daa
and
mov
lds
push
or
inc
jo
je
cdq
lock
and
sbb
add
lahf
mov
mov
lods
or
les
push
loope
push
adc
sub
test
cwde
mov
shr
not
iret
jp
ss
test
pop
adc
stc
gs
sub
push
inc
xlat
mov
arpl
dec
or
push
dec
scas
rcl
popa
jge
adc
push
and
iret
aad
inc
aad
sub
dec
fldenv
and
cmp
and
or
cmp
mov
jo
std
mov
hlt
shl
in
popa
gs
ins
jbe
or
fidiv
mov
fistp
in
mov
mov
jl
in
aad
jmp
jne
psrld
call
inc
inc
and
xor
cmps
xchg
test
je
add
pop
cli
lods
dec
cwde
mov
sub
xchg
pop
test
cmc
dec
cmp
push
test
jle
lods
or
pop
pop
ror
shr
sub
mov
fnstenv
sar
stc
jae
scas
retf
and
repz
sub
jb
fisttp
fcomp
and
arpl
xchg
cmps
ins
aas
call
mov
repnz
loope
jmp
addr16
movs
sub
xor
shl
adc
inc
xor
das
mov
test
mov
loopne
int3
adc
shl
pop
inc
(bad)
jg
xchg
mov
and
and
or
xchg
pop
fild
jne
cmps
es
dec
fnsave
mov
push
ins
fsubr
shl
ror
outs
fwait
out
mov
jbe
mov
movs
icebp
xchg
test
inc
or
xchg
dec
and
outs
add
dec
mov
push
push
dec
xchg
enter
push
inc
dec
adc
cs
jne
in
dec
cld
xchg
pushf
jle
xlat
inc
loope
mov
sbb
cs
outs
call
mov
push
loope
outs
push
fbstp
and
jns
lods
arpl
mov
loop
jb
jle
ins
fs
movs
fwait
jmp
stos
dec
fcmovnb
adc
push
mov
push
ja
add
and
cmp
sbb
adc
inc
loope
and
sub
fucompp
pop
sar
xor
cmc
loopne
repnz
ror
data16
push
inc
cmc
popf
push
mov
xchg
add
or
mov
cmps
fstp
scas
out
xchg
or
sub
lods
cmp
test
xchg
sbb
(bad)
std
mov
mov
mov
mov
mov
xchg
(bad)
sub
dec
and
xchg
jb
cs
pop
and
bound
mov
(bad)
mov
sub
pop
jecxz
cwde
mov
les
inc
inc
in
lahf
push
out
(bad)
sub
sub
adc
mov
inc
jge
fst
jp
and
jle
pop
test
mov
ja
icebp
mov
adc
stos
sub
mov
sbb
mov
loope
xchg
or
dec
(bad)
frstor
in
push
imul
pusha
pop
mov
in
sbb
ja
jg
add
imul
call
pop
push
add
test
(bad)
sar
lds
test
retf
xchg
std
das
fstp
scas
pop
sub
lods
addr16
dec
xchg
test
scas
scas
mov
int3
mov
pop
push
fild
mov
inc
jecxz
adc
jecxz
test
cwde
inc
or
or
cmp
jle
jns
ja
lock
cmp
mov
ins
and
sub
icebp
fbld
cmps
fs
ret
mov
adc
sahf
in
lahf
std
stc
std
jae
pop
fsubr
push
add
sbb
dec
pop
aad
into
push
outs
aam
sub
mov
jp
mov
dec
arpl
push
jno
pop
fisub
in
mov
push
adc
js
int
sbb
fidiv
inc
mov
bound
jmp
fldenv
adc
xchg
push
loopne
add
in
pop
mov
out
or
dec
retf
mov
or
jecxz
or
iret
das
addr16
ins
push
xchg
xor
cmp
adc
xchg
add
and
jge
push
cld
sar
xor
ret
add
arpl
loope
dec
pop
ss
mov
xor
jmp
and
inc
jns
dec
arpl
inc
jge
movs
mov
pop
imul
jno
imul
mov
dec
inc
push
call
and
lock
nop
mov
sbb
mov
aaa
psrad
and
inc
out
xchg
retf
push
push
ins
sbb
jns
sbb
ficom
inc
loope
pop
arpl
mov
inc
shl
jmp
inc
jp
fs
popf
push
dec
mov
scas
(bad)
xchg
imul
xor
popf
aad
loope
ins
repz
jmp
or
jle
sub
cmp
lods
rcl
fnstsw
imul
cmps
and
lds
out
push
sbb
adc
lds
in
sti
or
aas
adc
or
mov
or
inc
inc
mov
or
mov
sbb
movs
jp
loopne
hlt
sbb
xchg
hlt
fimul
add
jns
pop
push
ror
pop
lea
mov
shl
repnz
mov
add
test
leave
adc
xlat
lahf
les
or
sub
jp
pop
and
xor
(bad)
movs
sub
stc
pop
cld
test
stos
in
pop
cmc
fscale
in
mov
retf
neg
inc
mov
dec
mov
xchg
and
jg
pop
mov
fsub
or
mov
lods
dec
mov
add
aad
inc
dec
arpl
mov
test
dec
mov
jns
push
jg
scas
fdivr
dec
adc
adc
inc
push
hlt
pop
shr
jl
aad
std
ret
jb
imul
xor
out
add
push
or
pushf
fistp
xor
xchg
jno
pop
es
popa
out
xchg
pop
sbb
mov
push
jnp
call
fwait
and
mov
push
cmp
mov
es
mov
rcr
push
mov
and
(bad)
outs
test
and
mov
fcomp
fsub
jnp
push
jmp
sub
rcl
jge
or
xchg
gs
xchg
test
xor
shl
dec
aas
fwait
push
in
movs
mov
mul
dec
leave
pop
xor
add
cmp
pusha
push
cmp
data16
retf
mov
cld
shl
sar
int3
loop
test
lods
enter
adc
lds
into
pop
(bad)
je
mov
mov
jl
adc
pop
xchg
jo
mov
jl
xchg
shr
retf
pop
outs
mov
add
jns
retf
bts
jp
rcl
call
into
nop
and
outs
jl
hlt
test
mov
movs
lods
sub
adc
sbb
xchg
and
xchg
shr
jo
sbb
pop
pop
inc
test
pop
dec
repz
cmc
cdq
xor
pop
jge
mov
ret
push
mov
xchg
sbb
into
dec
jl
stc
sar
loope
test
sti
les
pop
stc
pop
push
dec
adc
cwde
inc
pop
fldcw
xor
sub
xchg
inc
mov
and
sti
ins
rol
pusha
sbb
mov
add
jecxz
add
jmp
data16
movs
adc
pop
in
pop
inc
xchg
xchg
ds
sti
inc
mov
rol
ss
or
pop
mov
inc
das
push
dec
mov
dec
inc
jae
fbstp
iret
les
loop
adc
inc
paddq
shl
xchg
jmp
add
sti
jl
xchg
cli
mov
pop
fwait
mov
xchg
(bad)
in
jmp
add
jmp
sar
jecxz
addr16
sub
xor
push
mov
push
cdq
imul
retf
(bad)
fcomp
sti
rcl
daa
sbb
sbb
aam
and
mov
bound
sub
push
xor
fsubp
(bad)
rol
push
(bad)
sbb
mov
inc
mul
add
fcomp
pop
adc
(bad)
xchg
inc
mov
mov
in
xor
mov
std
mov
xchg
xor
mov
xchg
shr
rcl
(bad)
mov
bound
xchg
fldenv
in
sub
jne
dec
mov
add
inc
cmp
fild
pop
outs
or
mov
scas
inc
addr16
repnz
lods
sbb
inc
xor
inc
js
xor
and
and
imul
ret
ret
xchg
mov
jge
pop
mov
and
sbb
and
popf
jle
shl
daa
mov
xor
mov
sbb
mov
mov
stos
movs
jbe
add
arpl
mov
and
test
sub
sbb
ds
sub
jmp
mov
iret
mov
sub
cmp
or
xor
pop
jne
add
inc
jecxz
push
dec
mov
lea
cmp
inc
mov
stos
das
lods
sub
pop
aas
mov
jo
(bad)
mov
mov
and
cmp
push
dec
adc
dec
xchg
pop
jl
imul
sar
jge
mov
push
jae
xor
xor
fdiv
sub
enter
aas
and
mov
sub
stos
inc
adc
and
adc
outs
jmp
and
aas
shl
jae
dec
xchg
dec
sbb
shr
fs
int
fild
dec
hlt
icebp
inc
sbb
dec
inc
xor
sbb
fild
fnsave
or
loope
(bad)
mov
repz
rcr
jns
lock
cli
mov
jl
imul
shr
test
dec
mov
or
inc
sbb
inc
aaa
push
loopne
pop
and
std
add
fisttp
pop
pushf
xchg
div
push
cmp
out
loop
mov
shl
mov
popf
call
iret
sbb
imul
pop
add
sahf
mov
rcl
pop
jns
push
xchg
fidiv
out
setge
mov
shl
clc
xchg
out
pop
arpl
sub
and
loope
adc
repnz
lods
xchg
dec
xchg
loop
out
mov
lods
jl
std
sub
mov
jbe
push
jmp
jmp
add
sahf
adc
inc
and
es
pop
xchg
into
stos
fsubr
sbb
add
pop
in
sub
pop
mov
sub
out
das
rcr
popf
(bad)
js
jne
fmul
pop
dec
paddw
pop
lods
xchg
adc
or
dec
inc
das
(bad)
adc
arpl
jo
scas
pusha
int3
leave
dec
shl
inc
xor
scas
(bad)
sbb
repz
fcom
ins
mov
retf
cli
adc
outs
(bad)
sti
je
movsx
sahf
mov
shl
stos
push
aas
lods
ja
sbb
push
inc
jno
fwait
lea
mov
cmp
mov
ins
fisub
out
xor
mov
sahf
lahf
xchg
int3
stc
and
mov
stc
add
in
and
xacquire
gs
popa
cmc
je
daa
js
dec
xor
fild
dec
jg
shl
out
fdivr
sbb
jbe
test
push
pop
mov
xchg
ret
cmp
in
hlt
pushf
addr16
cmps
inc
sub
stos
dec
(bad)
fidiv
mov
je
loopne
(bad)
mov
stos
sbb
mov
js
pop
ds
aad
xchg
mov
dec
test
retf
push
jle
mov
js
mov
sahf
mov
sar
mov
in
xchg
test
mov
dec
or
sub
jmp
inc
sub
fdivp
repnz
icebp
mov
cmps
adc
movs
sub
jo
out
jp
inc
mov
sahf
and
lock
mov
inc
dec
jmp
repz
lods
pop
fmul
fstp
sbb
pop
adc
inc
mov
gs
xchg
and
jecxz
hlt
cmp
jno
cmp
cs
sub
repnz
mov
mov
fdiv
sbb
aaa
jns
xor
out
mov
aaa
cwde
dec
loopne
pop
(bad)
xor
aas
dec
stos
ins
cmp
in
mov
mov
dec
je
sub
add
xor
jg
mov
sub
(bad)
cmc
pop
rcl
cld
nop
sub
jne
ja
jle
das
pop
inc
ins
inc
popa
dec
sub
icebp
mov
aad
in
mov
adc
fild
das
push
pop
das
xor
sub
icebp
rcl
cmp
daa
dec
scas
cmp
jne
stos
popf
shr
and
loopne
es
lods
mov
mov
popf
cmp
pop
int
mov
test
sub
es
push
loopne
or
push
les
adc
mov
push
ret
out
adc
ins
xchg
push
inc
test
sub
retf
xchg
pushf
add
test
pop
ror
cmp
sub
icebp
mov
xor
sub
xor
push
ret
repnz
aaa
pop
fcom
cmp
mov
ja
xchg
or
dec
retf
mov
movs
into
or
mov
imul
xend
mov
out
pop
jmp
stc
push
outs
(bad)
fdivr
(bad)
in
inc
mov
add
popf
or
jnp
dec
cli
js
push
into
dec
push
push
sbb
xlat
es
and
push
inc
xor
popa
inc
iret
imul
ins
cdq
stc
cmp
pop
or
xchg
in
jl
push
repnz
je
nop
sbb
adc
fwait
les
pop
cmp
jb
mov
sub
and
out
je
jge
cmp
inc
cmp
lods
add
(bad)
into
bsf
or
repz
fs
punpckldq
or
cmps
retf
inc
in
inc
fcmovu
and
pop
xchg
(bad)
dec
pop
jle
mov
f2xm1
outs
ins
or
aam
(bad)
or
push
pop
sahf
cdq
pop
push
sbb
jnp
add
and
jns
add
cs
call
(bad)
icebp
rcl
sbb
fnsave
cmps
xchg
jg
scas
lods
repz
frstor
outs
dec
fdiv
(bad)
std
aas
sar
inc
xor
dec
mov
aam
jmp
dec
cld
jnp
sbb
dec
ins
nop
movs
les
mov
mov
pop
pop
gs
xchg
sbb
jae
push
sbb
adc
(bad)
inc
pop
push
or
dec
iret
aad
add
cmp
fisub
sub
frstor
iret
xchg
call
clc
(bad)
js
sub
xchg
aas
fwait
stos
pop
inc
mov
pop
dec
xchg
test
cdq
adc
push
mov
inc
out
out
mov
cdq
icebp
fmulp
sub
mov
add
mov
jno
inc
mov
jne
xchg
xor
dec
push
pop
inc
mov
mov
jns
dec
pop
mov
ins
inc
sub
das
idiv
fdiv
dec
push
push
jge
add
jns
gs
xchg
push
inc
test
pop
or
iret
and
pop
addr16
adc
es
or
and
imul
rcr
repnz
and
xchg
fsubr
push
loop
out
std
jle
cmp
add
cld
lods
mov
add
jnp
add
mov
fsubr
shl
mov
test
sbb
xchg
add
ss
mov
jmp
(bad)
mov
(bad)
in
sbb
pop
jnp
dec
mov
in
dec
mov
xchg
les
sbb
mov
es
sub
ins
lods
ins
ror
cli
sub
xor
jmp
sub
mov
sub
out
outs
jmp
jle
jno
push
dec
sub
ja
pop
push
lahf
jp
add
xchg
scas
xchg
inc
dec
mov
mov
mov
daa
repnz
out
pop
hlt
(bad)
inc
ds
push
loopne
sbb
xchg
xor
(bad)
repnz
loope
gs
pop
sahf
retf
in
or
cmc
mov
(bad)
imul
add
cli
push
jbe
(bad)
cdq
mov
mov
mov
jns
xchg
cmp
out
mov
enter
retf
or
out
pusha
jne
pop
adc
popa
sub
xor
movs
xchg
cmp
ret
loopne
or
dec
mov
int3
adc
je
test
and
jb
fdivr
sbb
xchg
push
jle
stos
fiadd
inc
loop
out
xor
jns
sar
or
jns
out
xor
jbe
push
shr
movs
in
neg
inc
or
out
out
pusha
je
lods
cdq
dec
repz
daa
outs
out
gs
ret
push
xchg
lahf
mov
out
inc
sbb
inc
cmc
mov
aam
loope
mov
stc
data16
jg
mov
(bad)
sub
ror
test
mov
mov
xor
cwde
cmps
and
mov
scas
add
cmc
ins
mov
push
mov
xchg
ret
(bad)
std
inc
test
out
adc
xchg
push
pop
pop
dec
and
or
and
mov
jge
retf
push
jecxz
jecxz
cwde
jecxz
frstor
mov
popf
mov
mov
adc
or
inc
sbb
fwait
out
shl
dec
mov
out
dec
push
mov
aam
inc
test
push
enter
jecxz
sbb
mov
ficomp
push
int3
adc
cmp
loopne
(bad)
and
mov
cwde
fidivr
int
test
sub
call
cs
jmp
adc
ret
inc
int3
dec
mov
or
mov
scas
mul
imul
(bad)
push
les
pop
fiadd
and
mov
test
lods
seta
loope
mov
add
rol
inc
dec
pop
(bad)
je
cdq
lds
add
popf
inc
aaa
sbb
ror
mov
lfs
and
adc
or
fild
ret
jp
in
(bad)
sub
lea
mov
adc
jne
test
mov
ss
(bad)
in
or
aaa
sub
add
loop
push
movs
push
and
mov
stc
in
push
jno
nop
(bad)
sbb
add
jb
ret
pop
imul
test
xchg
jl
out
mov
pop
hlt
mov
ror
dec
jo
je
cmps
retf
sbb
cmps
mov
jno
imul
adc
outs
push
and
enter
rcl
loopne
out
push
and
sub
out
ins
fidiv
cmc
xlat
inc
bound
int3
arpl
xor
dec
movs
lea
mov
sub
(bad)
push
push
movs
out
add
clc
add
cmc
xchg
aaa
sub
fldenv
nop
push
ss
cmps
fs
xchg
shl
or
mov
and
movs
jp
stc
sub
inc
psrlq
cmp
bound
fwait
push
or
add
int3
ss
fisubr
(bad)
xchg
mov
repz
jmp
jne
dec
mov
ins
mov
dec
stos
jne
pop
mov
bnd
jge
int3
xor
push
aad
push
jp
aaa
cmc
inc
sbb
push
imul
mov
push
mov
xor
mov
aas
test
xchg
mov
add
stc
into
or
push
mov
cmc
push
into
adc
lock
adc
jno
sbb
outs
lahf
in
inc
inc
jp
test
repnz
push
mov
pop
push
or
mov
call
mov
xor
inc
jmp
cmps
out
jno
je
gs
mov
mov
iret
pop
sbb
mov
mov
mov
push
fsubr
retf
fs
dec
hlt
out
stos
stc
inc
and
leave
pushf
adc
sbb
mov
loop
jmp
shl
inc
and
jmp
cs
mov
test
cmp
or
push
sub
nop
idiv
mov
xchg
fild
data16
pusha
inc
js
inc
rcl
dec
xor
xor
or
or
jmp
shr
ds
add
jge
je
xor
mov
repz
add
int3
push
sahf
(bad)
push
adc
and
sbb
aas
into
jb
enter
mov
xor
xchg
int3
push
(bad)
enter
sbb
int3
arpl
rcr
nop
(bad)
cld
out
fmul
ds
xlat
dec
sbb
jno
stos
lods
and
es
ss
(bad)
out
and
ret
xchg
(bad)
fiadd
fwait
in
inc
out
mov
sub
push
test
mov
inc
adc
push
stos
jno
clc
xor
inc
inc
inc
mov
sub
or
(bad)
or
stc
fistp
popf
rcl
ds
inc
outs
xor
xchg
inc
pop
xchg
mov
sar
mov
or
cdq
push
test
sbb
or
arpl
ficom
sub
ja
pop
das
mov
pop
mov
lahf
je
push
xlat
sub
stos
xchg
pop
cmps
out
cs
loope
jg
(bad)
and
imul
(bad)
out
stos
jmp
sbb
sbb
jne
jo
retf
lds
leave
inc
fcmovnu
mov
cmps
xchg
icebp
jae
adc
imul
ret
add
adc
xchg
sub
adc
add
ja
cmps
mov
div
pop
adc
or
add
pop
pusha
cmp
or
fwait
and
loop
out
(bad)
inc
sbb
cmp
and
pop
lods
inc
mov
and
and
push
xchg
mov
mov
mov
sar
shl
retf
sahf
xchg
retf
and
mov
fs
pop
jg
cmc
add
fistp
ret
add
cmps
sbb
mov
mov
test
adc
int
aad
out
mov
jge
xchg
fucomp
push
inc
mov
jmp
or
out
pushf
iret
mov
out
sub
pop
sbb
mov
test
and
xchg
(bad)
popa
and
daa
test
inc
call
movs
je
in
add
sbb
add
add
add
mov
out
or
cmp
test
push
fwait
out
mov
mov
dec
push
cs
and
sub
mov
stc
pop
(bad)
data16
cmp
jg
mov
dec
mov
sti
(bad)
mov
mov
hlt
data16
inc
loope
and
(bad)
push
xor
imul
mov
push
pop
out
jecxz
and
shr
add
cmp
inc
leave
in
and
sbb
stos
ja
jl
sti
test
and
ret
mov
stc
clc
cmp
push
pop
nop
stc
rol
fist
or
adc
or
leave
aam
setnp
stos
inc
inc
inc
daa
je
in
inc
out
test
test
mov
jo
jg
mov
sub
mov
xchg
ins
dec
and
out
or
out
xor
sub
test
add
cmc
and
mov
ss
add
pop
(bad)
jmp
mov
dec
push
aaa
push
iret
leave
mov
cwde
hlt
in
ud0
adc
fst
rcl
std
inc
xchg
dec
ficom
sub
mov
add
push
mov
and
and
mov
sti
sbb
outs
and
and
ins
lock
inc
in
call
sub
int3
mov
lds
or
scas
mov
outs
loope
fwait
js
cmp
xchg
adc
das
mov
push
mov
repz
lods
shl
pop
push
cmp
cmps
shl
push
hlt
idiv
fidiv
jge
in
sub
les
pop
xchg
sub
push
mov
movs
sbb
xor
dec
jmp
lea
jno
mov
jo
(bad)
loopne
shl
mov
vmwrite
out
adc
loop
cmp
mov
xchg
pop
push
int
(bad)
jecxz
arpl
jg
stc
add
jbe
sbb
jecxz
loope
cmp
ins
jg
shl
jnp
(bad)
jg
dec
inc
fstp
jns
daa
mov
sahf
jnp
and
mov
jb
push
mov
rol
ret
adc
imul
mov
int
xlat
in
inc
inc
in
xchg
xor
cdq
fnstcw
inc
aaa
adc
loopne
dec
pop
adc
pushf
jbe
xor
jne
dec
dec
jmp
and
leave
dec
xor
ret
mov
dec
push
sbb
mov
adc
push
cmp
fdivrp
in
repnz
pop
pop
inc
adc
jo
popa
stc
jmp
pushf
adc
cmp
hlt
mov
imul
push
pop
cmp
(bad)
pop
mov
mov
jecxz
jp
int
pop
jp
sub
inc
adc
sti
hlt
outs
repz
inc
xlat
cdq
popa
aas
add
and
push
mov
push
adc
sub
fistp
arpl
xchg
push
repnz
or
cwde
or
mov
xchg
test
sahf
loopne
xor
int
int3
xchg
js
scas
dec
inc
push
push
mov
sbb
aaa
adc
dec
mov
cld
mov
xchg
cwde
outs
hlt
xchg
ds
neg
jle
test
sub
cmp
lahf
out
scas
dec
xchg
loope
xchg
xchg
dec
jbe
push
test
iret
fldcw
or
scas
jnp
adc
xor
mov
neg
(bad)
aas
pusha
jecxz
jo
jae
fwait
aaa
mov
cli
ins
jno
addr16
mov
pop
aam
and
mov
xchg
movs
mov
inc
(bad)
(bad)
cld
inc
mov
xchg
jnp
out
mov
mov
in
test
inc
test
out
push
int3
and
and
ret
cmps
neg
das
adc
gs
test
shl
fist
sbb
aad
pop
inc
lds
cmp
loope
sbb
cmps
fsubr
pop
jns
icebp
sar
and
xchg
adc
mov
adc
jmp
out
mov
out
mov
mov
add
dec
test
pop
out
test
dec
test
or
outs
out
sub
dec
adc
shl
mov
dec
sar
leave
sub
fld
mov
push
adc
imul
inc
push
sub
sbb
mov
cmp
xor
xchg
retf
sbb
add
(bad)
sti
rol
inc
pusha
in
mov
out
sbb
daa
shl
into
retf
xor
push
lock
push
pop
in
mov
jcxz
test
pop
jmp
shr
dec
fist
pop
test
scas
dec
repz
pop
sbb
sbb
mov
ja
or
xchg
push
mov
or
lock
xchg
push
mov
xor
inc
or
bound
jle
outs
iretw
mov
sub
and
xchg
jnp
mov
call
and
xchg
jno
cld
push
or
(bad)
mov
mov
cwde
jae
sahf
(bad)
cs
into
pop
cli
push
cmc
pop
sub
outs
sub
xchg
in
sub
push
sub
mov
daa
aad
mov
pusha
mov
sbb
addr16
imul
imul
cmp
in
adc
push
or
into
data16
addr16
adc
jp
and
push
xor
lea
out
les
adc
dec
fldenv
test
js
mov
sahf
mov
dec
pop
nop
jnp
mov
sbb
or
loop
stos
fldcw
and
xchg
cmp
mov
adc
jb
cmp
iret
xor
shl
dec
pop
pushf
and
sub
shr
xor
fimul
ror
push
movs
daa
fs
pop
outs
lods
es
std
dec
(bad)
cld
push
test
and
push
out
or
jle
imul
int3
cmp
cmp
mov
je
es
pop
repnz
or
movs
xor
in
add
or
in
out
or
pop
sbb
js
or
pop
je
out
dec
and
mov
adc
mov
push
and
test
pop
out
push
mov
jg
mov
nop
lock
loop
cmps
pop
clc
pushf
(bad)
xlat
xchg
add
mov
mov
repnz
je
icebp
xor
inc
sub
jns
aas
les
scas
sub
ins
sahf
sar
(bad)
jae
enter
cmp
aaa
lods
lds
dec
xchg
lods
sti
sbb
mov
pop
mov
mov
popf
mov
cld
imul
aad
mul
or
sbb
mov
clc
stos
int3
mov
or
sti
stos
push
mov
cmp
data16
test
(bad)
loopne
jnp
or
ins
sbb
fadd
xchg
mov
inc
sub
jl
mov
pop
xor
mov
ficomp
cwde
repnz
dec
adc
dec
push
cmp
das
fst
in
inc
ja
sub
fldcw
pop
or
lods
in
cmp
jno
imul
dec
xor
sbb
xor
push
jge
inc
adc
mov
adc
lods
add
add
gs
lea
test
dec
mov
inc
mov
test
js
(bad)
int3
bound
fwait
dec
(bad)
ror
lds
dec
ror
addr16
adc
outs
inc
loope
call
sti
dec
das
sub
sar
xor
mov
pop
mov
(bad)
sar
push
loopne
xor
inc
jl
sub
fstp
int
add
(bad)
xor
sbb
inc
cmp
pop
pop
(bad)
je
mov
call
sbb
sbb
fwait
adc
lahf
cmps
pop
push
adc
rcl
aas
sbb
movs
pop
out
cli
popf
or
jae
test
test
cs
push
in
fistp
das
shr
loopne
cdq
inc
test
push
mov
movs
clc
add
mov
mov
mov
xor
inc
mov
dec
mov
push
push
push
iret
(bad)
xor
fst
mov
cli
pop
xor
fisttp
retf
push
call
mov
pop
loop
sbb
cmp
cli
pop
std
sar
mov
pop
fidivr
and
int3
add
lds
mov
int3
push
fimul
or
mov
sbb
xchg
out
pop
ror
hlt
dec
adc
test
loopne
lahf
(bad)
cli
jno
mov
jmp
clc
call
outs
addr16
daa
fdivp
das
push
es
fwait
mov
xchg
or
push
test
leave
xchg
push
jp
mov
sbb
xchg
jne
(bad)
dec
and
adc
retf
mul
rol
je
push
or
dec
jge
lods
adc
int3
in
test
push
repnz
xlat
jns
shr
retf
stos
mov
pop
pop
dec
jmp
push
(bad)
fild
or
inc
sub
cmp
fistp
daa
cmc
push
fcomp
std
out
lods
jbe
sub
inc
jo
jo
mov
in
cli
pushf
mov
mov
(bad)
jne
ds
xor
xchg
add
aas
(bad)
mov
mov
shl
out
rcl
pop
sub
test
lods
(bad)
push
mov
push
enter
mov
mov
jl
bound
mov
cli
ss
fcom
test
sub
popf
aaa
hlt
adc
icebp
mov
enter
cmp
sub
fs
mov
cmp
dec
jl
xchg
and
fadd
fcmovnb
pop
jmp
lahf
aad
popa
inc
mov
ret
loop
push
aad
sub
inc
inc
sub
xor
mov
je
sbb
jbe
shl
fs
outs
pop
push
in
cld
imul
(bad)
sti
(bad)
jl
mov
mov
sbb
push
(bad)
mov
data16
out
push
push
movs
pop
push
cmps
outs
hlt
imul
jle
xlat
add
xchg
pushf
mov
lahf
sahf
xchg
pop
cmp
dec
pushf
cmps
(bad)
fisttp
(bad)
sbb
iret
adc
cdq
xor
sub
xor
xchg
xchg
hlt
inc
cmp
sbb
stos
mov
xor
jge
nop
jb
add
mov
push
xacquire
and
pop
and
in
jle
pop
mov
sbb
cmps
ret
mov
test
das
test
mov
in
sub
inc
inc
adc
xlat
add
sar
or
rcl
push
mov
sbb
pop
out
sub
scas
fmul
pop
xchg
cld
sub
aad
loope
int
call
pop
jp
cmova
ss
retf
fsubr
mov
or
mov
pop
out
mov
pop
and
cli
into
pop
xchg
inc
dec
cmp
test
bound
gs
pop
out
or
jnp
mov
lods
xchg
mov
js
push
(bad)
pusha
div
sti
(bad)
mov
cwde
mov
out
loope
(bad)
fnstenv
movs
jmp
aaa
lahf
in
idiv
outs
ins
cli
lahf
mov
enter
cli
jne
sahf
in
repz
adc
mov
dec
(bad)
aas
repnz
xchg
adc
or
pushf
shr
push
sub
inc
out
retf
adc
mov
shl
mov
retf
clc
fiadd
mov
add
xor
adc
pop
cmp
shr
lahf
push
retf
jle
push
hlt
sub
int
test
int3
sub
and
sbb
in
pop
inc
jp
fiadd
xchg
(bad)
nop
fnstcw
outs
aam
sub
idiv
and
inc
sub
js
cmp
cs
lods
(bad)
ins
pop
mov
out
jns
mov
leave
mov
jnp
enter
push
int
je
imul
div
xor
jmp
mov
loop
or
xchg
inc
xchg
fnstcw
add
sbb
xchg
jl
fs
out
retf
fbld
sbb
pop
sub
pop
out
add
jp
iret
mov
shl
adc
addr16
xor
sbb
inc
or
stos
and
cmp
pushf
cmp
add
jle
and
loop
stos
fwait
mov
clc
lods
mov
adc
dec
add
ret
movs
arpl
xor
xor
add
inc
pop
arpl
scas
aam
mov
mov
(bad)
aas
call
adc
lods
sub
out
hlt
pop
inc
pop
jbe
xor
adc
fstp
mov
es
push
mul
inc
pushf
test
pop
jecxz
idiv
mov
push
enter
cmp
or
and
or
clc
mov
jno
test
adc
aaa
push
xchg
dec
cmp
stc
jecxz
inc
jp
inc
mov
adc
outs
popf
outs
iret
jmp
(bad)
enter
sub
mov
cdq
xor
push
adc
sbb
mov
sti
outs
adc
xor
fcomp
push
shl
jne
(bad)
stc
pop
dec
cmp
mov
imul
addr16
pop
mov
pop
jg
daa
cmp
int3
and
and
neg
mov
sub
dec
xchg
cwde
jmp
test
hlt
or
fistp
push
mov
int
(bad)
cmp
fwait
inc
test
pusha
jnp
cwde
cwde
xchg
sti
repnz
sub
clc
xchg
sahf
cmp
xchg
inc
popf
retf
mov
mov
mov
retf
jg
pop
out
cdq
push
pop
adc
cmp
rcr
push
nop
dec
movs
mov
sbb
dec
pop
adc
cli
jmp
nop
sti
mov
js
inc
mov
jnp
fimul
dec
inc
jg
or
pushf
jecxz
xor
cmp
(bad)
add
(bad)
mov
mov
stos
add
sub
jb
xchg
in
mov
pop
add
rcl
jo
push
pushf
adc
fwait
push
and
out
fistp
mov
cmps
std
dec
out
int3
loope
(bad)
nop
ficom
int
bound
pushf
push
retf
jnp
sbb
pop
sbb
dec
mov
(bad)
rcr
jbe
cmc
push
and
pop
pusha
sub
int
dec
lock
cmp
mov
mov
xchg
scas
pop
daa
jo
xor
fdiv
jg
inc
cmps
rcr
(bad)
xchg
xor
mov
sbb
dec
inc
mov
mov
xor
cmp
mov
mov
cmps
mov
loopne
add
dec
or
mov
xchg
iret
jmp
stc
retf
sahf
leave
(bad)
sti
(bad)
mov
and
dec
call
mov
cmps
lock
and
in
mov
icebp
xchg
sbb
leave
stos
data16
nop
sub
push
sbb
push
add
fistp
scas
cmps
inc
dec
inc
outs
sahf
loop
xchg
sbb
call
in
fadd
jecxz
adc
jns
push
push
jns
push
fsave
cli
js
jne
mov
add
ret
or
shl
xor
mov
or
jmp
cwde
pop
dec
jo
mov
jge
dec
mov
pusha
add
cli
out
jae
dec
daa
pop
mov
push
cmp
jg
adc
sub
mov
mov
and
sar
in
inc
pop
jge
js
ds
pop
outs
(bad)
test
inc
lock
iret
mov
push
scas
mov
das
cmp
ss
jae
inc
(bad)
pop
ret
in
mov
or
cmp
fucomip
test
xor
push
or
in
mov
push
pop
gs
lds
sbb
in
xchg
icebp
icebp
jl
movs
mov
aaa
les
mov
inc
pushf
in
(bad)
jbe
not
(bad)
ja
hlt
out
iret
(bad)
hlt
inc
mov
dec
inc
jmp
sub
outs
inc
cmp
sub
and
or
or
(bad)
xor
mov
jne
mov
xchg
sar
fisubr
aas
imul
test
inc
add
mov
cmp
fldpi
lock
lahf
sub
or
movs
sahf
popa
mov
adc
fwait
xor
jecxz
jmp
(bad)
jmp
or
pushf
mov
retf
dec
outs
(bad)
mov
dec
pop
add
sub
hlt
pop
nop
in
rol
movs
adc
jne
stos
dec
xor
xor
mov
aaa
bound
jle
cmp
xor
fbld
dec
adc
adc
mov
inc
xor
xor
popa
pop
adc
push
push
loope
mov
test
rol
test
jmp
shr
test
and
cs
das
jmp
pop
(bad)
fist
inc
mov
lods
ficom
pop
inc
jb
fisttp
mov
sbb
jno
daa
jbe
rcr
shl
mov
ins
xchg
cmp
or
mov
lds
lock
mov
std
les
cli
fdivr
push
cdq
xlat
je
inc
lea
mov
cmps
in
sbb
and
jo
leave
xchg
push
sbb
xchg
sar
push
inc
xor
in
in
dec
ss
sbb
dec
xlat
rcr
push
cmp
adc
xchg
(bad)
clc
ret
inc
(bad)
push
inc
retf
mov
(bad)
ss
sbb
scas
inc
sub
xchg
sbb
push
test
inc
test
fistp
dec
xchg
xor
mov
out
sub
mov
mov
int3
dec
movs
nop
fistp
es
iret
and
jg
or
jne
push
fistp
addr16
mov
retf
aad
and
push
fsubr
or
cmp
ficomp
pop
inc
sbb
pop
push
in
push
mov
jo
mov
mov
sub
cmp
mov
lock
ds
ds
xchg
xchg
xchg
pop
xor
mov
iret
test
les
fstp
xor
data16
fidivr
pop
call
mov
(bad)
cmp
cmc
das
xor
xor
adc
and
das
or
or
(bad)
jmp
test
push
or
push
ror
mov
push
adc
pop
dec
mov
mov
bound
clc
jmp
mov
es
sahf
push
mov
out
dec
cmc
(bad)
test
mov
lahf
lock
ss
out
test
les
cmp
add
jmp
ins
ja
inc
stos
sbb
(bad)
test
mov
out
es
dec
xchg
sahf
in
cmp
dec
imul
lods
xlat
and
mov
fadd
stc
xchg
pshufw
mov
out
lods
das
test
std
arpl
rol
daa
mov
jge
pop
and
push
(bad)
sub
test
jne
and
or
pop
fs
adc
imul
out
inc
arpl
ss
outs
bound
cmp
lds
xor
test
fild
in
mov
cmp
cmps
loop
into
or
ror
iret
push
rol
in
das
mov
dec
icebp
out
add
jmp
fs
aad
int
mov
addr16
or
je
(bad)
push
lods
cmps
jae
stos
mov
outs
movs
cli
and
xor
cld
sbb
(bad)
clc
mov
imul
inc
sub
std
inc
dec
and
inc
shr
push
retf
ret
sar
mov
adc
je
test
add
mov
mov
xor
dec
and
or
inc
pop
sahf
push
jmp
push
jmp
fistp
int3
pop
in
mov
icebp
ret
mov
sbb
movs
sbb
popa
shr
(bad)
in
push
(bad)
sub
dec
and
imul
rcr
xchg
xchg
sti
mov
iret
inc
add
cld
fstp
pushf
ds
lahf
xchg
iret
iret
mov
cmp
rol
push
xchg
mov
pop
adc
hlt
sbb
(bad)
push
stos
ds
pop
cdq
push
lods
jmp
jno
xor
retf
gs
jecxz
push
fwait
push
sub
(bad)
inc
cmp
push
imul
inc
mov
pop
mov
pop
sub
mov
(bad)
movs
mov
jmp
(bad)
pop
leave
and
and
jns
test
movs
les
add
add
fimul
dec
out
or
(bad)
pop
nop
mov
mov
add
test
and
fld
scas
push
nop
jns
nop
cmp
xlat
nop
sbb
sub
pop
sub
inc
lods
mov
mov
retf
scas
out
pop
out
sub
cvtps2pd
pop
mov
lock
sbb
push
sbb
sti
mov
into
cmp
sub
mov
pop
push
(bad)
jl
jb
inc
retf
addr16
lahf
aas
fldenv
adc
sub
int3
xlat
sbb
mov
adc
or
xor
push
cwde
pushf
loop
mov
sahf
jae
push
mov
mov
(bad)
jg
adc
aaa
lea
movs
repz
(bad)
sub
pop
jp
push
and
aas
stos
in
push
rol
imul
idiv
icebp
adc
push
retf
pop
loopne
jg
sbb
(bad)
mov
ret
aam
push
test
pushf
fadd
adc
inc
jo
mov
push
and
nop
cmp
sbb
xchg
stc
pop
xor
leave
xchg
push
aas
cmp
stos
and
mov
jg
dec
and
loope
shl
adc
icebp
daa
dec
scas
jle
inc
xchg
inc
and
or
inc
daa
stc
mov
xchg
imul
sub
xchg
xchg
in
mov
add
push
xor
xchg
dec
jb
arpl
imul
xchg
ins
imul
inc
ficom
push
or
sbb
jae
or
push
popf
jb
dec
nop
leave
call
pop
das
in
loop
repz
add
push
fidiv
fs
int
inc
push
mov
inc
or
aam
aad
mov
mov
jno
jmp
mov
xor
icebp
fdecstp
sub
dec
push
inc
cs
repz
push
and
sbb
jle
mov
jbe
rcl
test
scas
js
retf
push
pop
fidivr
pop
xor
and
cli
rcr
jg
jecxz
push
inc
jg
add
(bad)
dec
pushf
dec
retf
jmp
mov
inc
sbb
inc
js
popf
jle
mov
call
imul
stc
push
mov
sub
mov
imul
cdq
retf
push
cmp
idiv
packssdw
cmp
stos
mov
sbb
xchg
dec
lds
push
pop
mov
and
cs
hlt
(bad)
push
loop
scas
sub
les
out
jns
pop
fs
rcl
jle
xchg
xchg
sbb
mov
inc
call
mov
cli
lods
add
ja
and
mov
out
push
sub
fmul
mov
mov
push
mov
imul
js
in
adc
or
push
xchg
jg
and
sahf
pop
mov
lock
dec
fisub
es
push
sub
cwde
nop
fsub
data16
inc
sar
int
adc
icebp
cmp
sbb
lahf
sbb
repz
and
cmp
ins
mov
adc
mov
sahf
nop
or
add
cs
push
test
dec
push
inc
dec
out
ret
xor
cmp
push
xchg
popf
std
call
sub
nop
pop
or
cmp
rol
fidiv
pop
pop
xchg
xchg
dec
int3
push
cmp
sbb
push
scas
inc
jmp
pop
mov
sahf
out
std
ins
fsub
in
pop
dec
pop
mov
xor
xchg
jle
jle
rol
fadd
dec
loopne
jno
and
or
pop
push
jnp
repz
and
imul
sub
mov
enter
push
icebp
sbb
iret
jnp
pop
test
mov
cmp
rol
jp
rcr
rcl
add
jmp
adc
jle
adc
cmps
cs
mov
cmps
add
xor
push
xor
aam
mov
and
stos
paddb
aad
fisttp
mov
mov
inc
xor
jmp
xchg
mov
pop
pop
mov
xchg
push
and
stc
inc
(bad)
sub
outs
test
or
loopne
scas
cwde
adc
xor
mov
push
cmp
cmc
outs
mov
rol
push
mov
cmp
scas
or
mov
div
loop
aad
imul
push
pop
xor
xchg
icebp
fisubr
sub
add
adc
sub
je
fisttp
mov
add
sub
mov
sub
lock
ja
add
ja
adc
or
pop
sbb
in
jo
ret
xchg
add
mov
sbb
fwait
loop
std
mov
lods
cmp
lods
neg
dec
fbstp
ins
sbb
stos
xor
test
repnz
fnstenv
psubq
and
push
js
mov
xlat
cmp
(bad)
stc
enter
addr16
cli
cs
xor
pushf
and
mov
pop
fist
retf
cs
int3
sar
fidiv
add
fcmovu
xor
and
and
and
dec
sbb
push
sub
or
cmp
and
mov
mov
sbb
mov
test
jge
pop
jae
shr
adc
push
xchg
xchg
mov
dec
and
mov
enter
jmp
pop
hlt
add
dec
scas
(bad)
xchg
xor
mov
xchg
and
mov
arpl
pop
mov
sti
mov
sahf
pusha
ret
cmp
inc
rcr
pop
ja
data16
cs
loope
add
sbb
(bad)
dec
in
in
cmp
test
call
or
jmp
cs
popa
xchg
aad
iret
xchg
cmp
leave
nop
or
push
dec
or
push
dec
sub
arpl
popf
clc
in
mov
mov
cmp
(bad)
mov
mov
xor
push
xor
xor
jecxz
add
(bad)
cmp
(bad)
neg
xor
sbb
out
and
dec
mov
lea
dec
pop
ja
jb
or
popf
xor
adc
lock
xchg
in
jnp
cmps
bswap
cs
out
aam
jne
and
mov
jl
test
and
add
or
jo
add
pop
cmp
lds
adc
add
ds
outs
repnz
sti
in
shr
cmp
mov
js
mov
pop
inc
dec
mov
frstor
(bad)
fild
call
mov
bound
push
mov
out
xor
sar
adc
cld
jnp
xchg
push
mov
adc
inc
jecxz
out
inc
jno
ret
dec
add
adc
pop
inc
and
(bad)
int
mov
leave
sahf
adc
xchg
stos
scas
push
dec
ins
or
inc
test
jp
or
pop
std
mov
outs
cmp
and
dec
xchg
jnp
pop
rcl
in
jb
fwait
lock
jp
jmp
popf
fmul
retf
cmp
loop
das
xchg
ror
mov
aam
mov
mov
int3
bound
push
fadd
test
xchg
push
inc
scas
mov
mov
neg
cli
pusha
std
lods
mov
aaa
push
xor
mov
pop
xor
jmp
int
(bad)
jb
retf
pusha
jmp
fcom
push
sti
adc
xchg
jmp
lahf
and
or
sub
mov
sub
clc
or
xchg
fcomp
inc
cli
test
or
loope
pop
bound
inc
leave
repz
out
jecxz
fnstcw
outs
dec
push
mov
mov
add
aaa
mov
or
pushf
int3
xchg
xchg
jle
call
lahf
(bad)
mov
mov
mov
mov
cmps
stc
lods
arpl
and
adc
and
cmc
mov
aaa
mov
ins
pop
outs
jnp
push
inc
sbb
xchg
ret
fwait
iret
or
enter
push
xor
add
jl
pop
and
call
(bad)
std
cmp
fs
sbb
mov
push
mov
xor
add
push
add
push
add
or
lahf
mov
or
add
int
call
xor
lahf
sub
int
push
cmc
xor
jae
push
fsub
pushf
mov
xchg
scas
xlat
jne
push
bound
icebp
add
repz
jp
test
xor
imul
iret
aad
in
pop
sbb
sub
dec
jg
xchg
mov
or
or
dec
mov
cmp
in
icebp
scas
mov
fmul
sbb
out
inc
lock
push
adc
inc
jle
add
adc
mov
es
ds
xor
sub
sbb
mov
push
sti
fwait
sub
and
xor
movs
push
adc
leave
mov
push
out
out
push
(bad)
aas
or
scas
mov
pushf
xchg
xor
jmp
jecxz
push
ins
jmp
retf
std
scas
xor
pop
push
pushf
xor
push
xchg
int
pop
sub
and
scas
add
mov
cmps
add
pop
leave
test
outs
cmp
jecxz
mov
xchg
push
popa
jno
pop
repz
pop
mov
test
mov
lea
scas
je
mov
sub
pop
mov
mov
iret
xchg
(bad)
pop
jl
data16
clc
cmp
inc
ins
mov
sahf
jmp
inc
daa
(bad)
(bad)
dec
jge
cs
lods
(bad)
jmp
mov
jl
adc
add
xchg
add
adc
push
imul
in
mov
scas
retf
and
retf
mov
jbe
push
fwait
xchg
jns
mov
(bad)
and
mov
add
sbb
dec
int3
imul
mov
add
inc
pusha
inc
xor
out
sub
jmp
mov
xchg
jmp
cmc
push
xor
pop
sbb
popf
inc
loopne
(bad)
cmps
cmp
sbb
sbb
stc
mov
jp
std
sbb
fadd
cmps
and
call
pop
mov
jne
add
push
xchg
sub
(bad)
jo
fnsave
mul
lahf
jae
push
dec
repnz
stc
xor
xlat
rol
and
call
lods
or
or
stc
sub
mov
mov
loopne
sahf
pop
mov
mov
push
jl
or
stos
inc
dec
xor
test
cdq
push
out
inc
inc
xor
jle
push
movs
mov
leave
movs
mov
div
xlat
jns
xor
add
aam
jb
mov
cmps
or
dec
jb
jae
aas
or
adc
adc
xchg
sub
into
ja
cli
in
pop
mov
call
ins
lea
vmovntdq
idiv
not
adc
cmp
sbb
inc
jbe
hlt
lea
popa
not
sahf
sub
aas
leave
out
dec
jae
scas
dec
xchg
dec
mov
jno
xchg
scas
sub
cmp
push
push
pop
jns
mov
pop
call
or
lods
aad
imul
xchg
xchg
adc
sbb
outs
mov
les
aad
push
shl
xor
sub
lahf
sbb
inc
push
xchg
in
hlt
movs
cmp
sbb
fist
neg
or
(bad)
mov
(bad)
dec
and
gs
pop
fidivr
fmul
out
sub
sbb
in
pop
mov
sbb
out
mov
xchg
mov
sbb
xor
nop
movs
inc
adc
fs
(bad)
test
mov
mov
ds
add
movs
(bad)
fs
int
(bad)
pop
(bad)
mov
and
loope
push
pop
test
mov
add
sbb
xor
in
loopne
xor
(bad)
ret
jle
xor
mov
mov
push
retf
out
or
and
popf
(bad)
lock
(bad)
adc
mov
ret
dec
and
or
sbb
leave
adc
xor
in
and
xchg
and
(bad)
mov
mov
dec
push
and
and
fldcw
or
in
sbb
in
dec
(bad)
jbe
or
inc
movs
aam
mov
into
push
out
mov
cdq
xlat
outs
dec
mov
xor
sbb
jae
and
add
jb
leave
sbb
scas
add
xchg
leave
pop
movs
iret
daa
or
adc
sub
into
mov
mov
stos
and
dec
pusha
jp
push
mov
xor
sbb
fnsave
adc
addr16
xor
and
mov
shr
jp
inc
add
sbb
(bad)
pop
test
popa
mov
xor
aad
mov
xor
mov
rcr
mov
mov
fnstsw
push
stos
sbb
scas
adc
cmp
lds
mov
and
fidiv
push
mov
and
xor
jge
and
mov
sub
sub
lea
or
jne
adc
aas
movs
mov
ret
(bad)
shl
add
mov
repnz
jge
and
pop
fcomp
repz
pop
test
pop
xor
push
mov
movs
lods
imul
and
mov
adc
mov
test
mov
call
jo
shl
cmp
or
idiv
jnp
dec
cdq
retf
mov
ret
sub
mov
xor
inc
es
xor
and
pop
out
mov
test
jmp
and
ins
jge
or
push
mov
pop
mov
sbb
enter
pop
mov
dec
aaa
test
mov
sbb
jp
xchg
pop
cmp
out
sbb
or
ret
inc
sub
pop
push
aaa
push
or
retf
xchg
leave
fstp
cdq
sbb
pop
adc
das
sub
call
std
jo
ja
and
inc
jge
dec
repnz
mov
les
mov
div
es
cs
jns
rcr
arpl
call
sbb
inc
or
in
aas
cmps
jecxz
pop
xor
sub
repz
cli
cmps
jne
int3
adc
pop
cld
sar
test
rcl
movs
pushf
pop
scas
leave
ss
imul
ins
xchg
inc
call
inc
call
xor
mov
(bad)
jmp
inc
and
outs
clc
bnd
fwait
outs
mov
xchg
es
cmp
stc
cmp
sub
adc
push
pop
or
enter
cs
xchg
das
aaa
mov
jmp
(bad)
jle
out
imul
and
test
cmp
mov
aaa
icebp
mov
popa
cmps
sbb
mov
xchg
push
sbb
adc
int
push
jne
sbb
imul
xor
cmp
cmp
sub
dec
xchg
dec
jl
jmp
(bad)
nop
sbb
pusha
sbb
ret
inc
pop
test
neg
mov
mov
shl
out
and
mov
cld
fs
push
arpl
fimul
pushf
sub
test
cmps
loopne
pop
inc
dec
loop
daa
lds
data16
jmp
mov
lea
jmp
icebp
fist
pop
cdq
hlt
cwde
sbb
pop
push
sar
fbld
ds
mov
adc
mov
cmp
xchg
scas
cmp
call
or
lea
mov
push
add
dec
out
and
ss
scas
mov
sti
mov
fwait
pop
clc
cwde
ins
ss
sahf
xor
cmc
mov
jnp
push
lods
lods
repz
iret
nop
add
jo
popf
mov
mov
jbe
arpl
sti
and
es
lock
shr
and
and
es
adc
int
cmp
xor
popa
fdivr
jecxz
push
fild
sub
jl
xchg
add
iret
ror
cs
push
mov
mov
leave
(bad)
ins
add
push
out
loope
xchg
mov
or
jb
out
into
pop
int3
mov
xor
repnz
sub
out
ss
fidiv
imul
dec
cs
imul
jmp
sub
cs
dec
add
and
fistp
cmp
jle
xor
adc
call
mov
aam
movs
clc
aaa
cdq
push
adc
cmp
xchg
cmp
adc
cmp
mov
es
fdivr
jne
mov
mov
or
pop
inc
popf
lock
mov
int3
nop
out
ror
retf
xor
xchg
mov
pop
mov
outs
jmp
push
or
sub
mov
jno
(bad)
(bad)
sti
mov
into
loopne
or
sub
jecxz
mov
out
xor
dec
sub
ins
jmp
pop
fidiv
xchg
outs
(bad)
inc
iret
push
mov
or
adc
cmp
jp
(bad)
jmp
and
dec
inc
adc
fcmovu
retf
ins
sub
mov
data16
in
jns
sub
sbb
push
popa
ficom
inc
sub
mov
dec
push
aam
add
mov
das
loop
cmp
inc
xor
pop
jbe
jne
mov
add
out
sbb
retf
mov
stos
jns
into
add
inc
data16
mov
inc
push
jge
adc
sahf
shr
pop
sub
pop
mov
imul
cld
loope
and
sbb
pop
cmp
cmp
fmul
or
repz
outs
and
rol
stos
addr16
and
push
and
fldenv
shl
call
xor
in
add
or
in
outs
out
mov
call
adc
test
cmp
test
scas
xchg
repz
fnstsw
jle
or
mov
mov
push
dec
dec
mov
mov
mov
push
push
pop
dec
(bad)
or
inc
sahf
sub
xor
mov
sbb
sti
mov
xlat
add
inc
jge
ret
repnz
dec
mov
pop
inc
out
mov
sub
cli
loop
or
fwait
scas
mov
sti
mov
xor
cld
mov
or
push
enter
popa
das
or
cmp
push
test
mov
or
les
fdiv
fisttp
mov
or
aas
mov
pop
retf
or
cmp
cmp
pop
shl
pop
jbe
or
push
add
retf
loopne
xchg
mov
aad
je
xor
sub
xchg
push
sbb
(bad)
es
pop
sbb
(bad)
iret
fist
dec
xor
inc
inc
sbb
and
mov
add
xchg
jae
push
fcmovnb
jno
jp
jns
ja
xchg
pop
aam
cmp
mov
popf
push
push
or
ret
out
idiv
or
loope
loop
ins
enter
std
sub
mov
ins
mov
lahf
mov
fsub
sub
stos
adc
stos
push
xchg
js
jmp
les
and
in
pop
push
mov
dec
jmp
push
aam
xchg
adc
sbb
test
outs
mov
cli
sbb
arpl
pop
or
jp
sbb
add
sub
and
arpl
sbb
dec
pop
mov
cmp
cmp
js
xchg
cmp
sbb
ins
inc
outs
retf
xchg
and
pop
dec
add
xlat
mov
mov
and
in
push
jnp
shr
sti
out
rcl
jo
imul
mov
ret
cmps
mov
(bad)
sbb
add
test
jmp
fcomp
jbe
(bad)
(bad)
fs
jge
iret
fbstp
mov
call
sub
xchg
popf
fld
call
sti
movs
in
inc
jnp
adc
adc
dec
in
push
and
movs
das
test
pop
pop
nop
fldenv
sub
dec
sub
and
jns
push
jge
jmp
adc
into
fst
lahf
pop
add
sub
xchg
rcl
jmp
inc
int
(bad)
mov
popa
rol
into
cmps
sbb
push
cmp
retf
fs
vmovsd
adc
xchg
addr16
inc
mov
mov
(bad)
fs
enter
aas
nop
pop
outs
jl
and
xor
mov
add
sbb
jmp
add
ins
adc
call
fldcw
dec
aad
add
sbb
sbb
dec
lock
in
pop
add
sub
fwait
aad
pushf
outs
sbb
neg
mov
jp
lock
jmp
add
mov
inc
mov
add
lea
dec
cmp
ins
cmp
and
cmc
jno
cs
dec
add
xlat
sbb
imul
xchg
das
cdq
movs
sahf
aaa
sbb
gs
jo
and
fldl2t
fimul
iret
jno
ret
retf
and
(bad)
jno
sub
sub
call
add
jmp
div
inc
inc
into
imul
popf
lods
cmps
inc
push
sbb
cmp
gs
xchg
and
sbb
mov
jne
imul
xchg
pop
jb
(bad)
mov
ins
loopne
cmp
call
xchg
cdq
add
push
xor
fwait
int
jns
into
push
std
sar
shl
(bad)
push
popf
mov
out
xchg
ss
test
add
das
retf
movs
rcl
retf
ds
in
int
xor
push
stos
daa
in
fucomip
ja
movs
cmp
cld
and
daa
pop
mov
cmps
mov
loop
arpl
aaa
leave
daa
inc
sub
cmps
cwde
scas
arpl
or
jno
nop
in
mov
repz
and
int3
hlt
clc
cli
push
mov
sbb
push
retf
retf
dec
mov
mov
inc
cmps
cmps
jne
mov
test
arpl
ss
and
push
inc
jp
sub
jg
call
out
sar
leave
mov
adc
scas
stos
cmp
mov
mov
inc
je
les
dec
loope
js
loop
push
les
cmp
xor
xor
outs
or
mov
out
push
dec
faddp
fbstp
aad
aas
pop
pop
imul
add
pop
mov
call
loope
push
dec
push
or
enter
jo
fnstenv
mov
mov
push
rcr
pop
inc
lods
addr16
cdq
mov
dec
pop
sti
dec
repnz
mov
in
pop
jmp
sar
out
mov
mov
in
test
fwait
in
add
cmp
pop
push
js
cmp
lahf
fiadd
ret
xchg
and
pop
cld
cs
lods
outs
sub
pop
shr
or
xchg
sbb
sub
xor
pop
xchg
std
pop
push
nop
popa
inc
mov
jl
cmp
leave
sub
into
adc
mov
mov
ss
push
push
add
xor
pop
cmp
out
cmps
aam
inc
add
xchg
mov
xchg
xlat
jmp
mov
lahf
jne
jecxz
xchg
xor
add
(bad)
mov
(bad)
retf
loop
xor
into
(bad)
arpl
pop
push
jg
hlt
out
and
cmp
mov
fcom
mov
(bad)
repz
jno
cmps
loopne
in
fdiv
dec
ja
(bad)
xchg
cmc
push
retf
mov
mov
fwait
ret
sbb
pop
in
sbb
lock
push
movs
lds
ja
rsm
xchg
xor
dec
sbb
add
loope
inc
mov
mov
xor
push
inc
ins
or
movs
je
sahf
sbb
ficom
imul
dec
and
xchg
mov
or
sbb
daa
jmp
mov
scas
adc
and
fidivr
and
push
xchg
inc
je
fadd
aas
jbe
adc
mov
lock
sub
and
daa
pop
dec
cmp
cmp
mov
push
ds
mov
jle
or
pop
dec
jecxz
mov
mov
(bad)
cwde
xlat
mov
sub
push
mov
mov
sbb
dec
(bad)
sub
jge
cld
mov
cwde
or
rcl
jbe
jge
sbb
and
adc
fimul
cwde
ret
sahf
jae
mov
rcr
dec
addr16
cli
shl
push
scas
daa
dec
xor
into
rcl
arpl
cmp
xchg
xor
adc
push
push
inc
cmp
stc
imul
clc
out
imul
int3
pop
cwde
xor
inc
xchg
pop
lods
and
adc
mov
or
cld
add
cmp
mov
xor
add
push
imul
xchg
das
jo
fld
test
repz
ja
mov
ss
cdq
ror
jbe
xchg
int3
pushf
xchg
pop
(bad)
dec
add
push
xchg
jae
push
je
mov
fsubrp
fisttp
das
shl
aaa
mov
adc
test
mov
out
adc
ins
add
dec
sub
or
pop
xor
mov
lea
jmp
dec
or
inc
fwait
or
jmp
dec
aad
jbe
call
jmp
inc
mov
mov
inc
je
daa
daa
mov
mov
adc
mov
push
mov
fisub
pop
call
(bad)
xor
aad
or
test
ins
neg
add
lahf
push
and
sbb
xchg
sub
into
adc
ret
sub
out
dec
push
jbe
or
in
mov
cmps
dec
rcr
push
pop
mov
mov
aaa
pop
mov
lds
not
lods
outs
sbb
lock
cmp
xor
(bad)
in
std
stos
ret
cmp
push
iret
add
push
test
int
add
dec
arpl
mov
aaa
outs
(bad)
leave
retf
rcl
push
mov
adc
nop
inc
dec
sub
adc
mov
push
fldl2t
pop
out
outs
adc
xor
jbe
outs
xor
adc
pop
jae
mov
call
jle
or
adc
pop
or
cmps
pop
mov
shr
dec
test
shl
test
mov
jecxz
inc
mov
xor
sbb
push
or
ja
xor
adc
mov
jb
stos
in
jmp
mov
xor
push
xchg
inc
stos
frstor
int
out
mov
mov
pushf
sub
adc
loope
pop
jecxz
aaa
cmp
xchg
cmp
mov
push
stos
xor
aam
sahf
mov
push
dec
adc
sub
jae
stos
jbe
inc
(bad)
fcomp
add
pusha
pop
pop
mul
jg
push
(bad)
pusha
add
retf
or
or
in
jb
lods
(bad)
(bad)
fisubr
jecxz
fisttp
in
jo
loopne
add
retf
push
call
fidivr
sub
and
and
(bad)
and
out
mov
std
rcl
mov
fcom
pop
jmp
in
xchg
jno
fdiv
mov
sahf
repz
push
push
shl
jmp
in
clc
outs
stc
cmc
loop
cmps
btc
(bad)
xor
fimul
add
jmp
cld
ror
fadd
(bad)
push
xchg
xchg
cmps
or
std
dec
sbb
pop
cmps
fwait
ds
jae
js
xchg
outs
pop
int3
aad
mov
push
enter
and
or
jle
fsubr
clc
sub
cmc
cmp
xor
sub
ret
and
fsubr
ins
push
jecxz
fwait
sbb
mov
cs
pop
or
fnstsw
addr16
rol
in
add
adc
call
sub
push
mov
outs
adc
ins
shr
mov
dec
sbb
or
push
sbb
mov
std
mov
xchg
push
mov
add
jns
mov
fiadd
pop
pop
mov
push
mov
mov
fdiv
test
xchg
push
ss
xchg
jecxz
inc
out
or
jle
das
cmps
test
dec
push
or
jp
or
inc
inc
loopne
sub
(bad)
dec
adc
ret
push
dec
adc
add
leave
std
call
mov
fimul
dec
pop
jo
push
pop
xor
sbb
cmp
add
mov
pop
in
inc
loop
pop
adc
cli
sub
out
push
push
mov
cdq
stos
pop
dec
lahf
in
inc
cmps
mov
inc
pop
push
adc
je
push
dec
leave
pop
pop
sub
outs
jo
mov
adc
int3
sar
jl
int3
jl
sub
mov
cld
psrad
jno
cmp
ins
xchg
mov
aaa
jecxz
add
leave
xor
gs
sub
xor
xor
js
mov
pop
sar
and
test
addr16
mov
rcr
stos
sbb
in
push
std
push
adc
add
icebp
add
test
cs
lock
jmp
mov
mov
scas
fisttp
adc
or
add
fmul
sub
ss
sub
cmp
push
out
out
retf
cmps
inc
or
lea
js
mov
fcom
je
shr
pmaddwd
sub
nop
shr
dec
enter
mov
xor
adc
inc
pop
dec
jne
dec
pop
jle
pop
scas
pusha
xor
push
sbb
and
mov
std
inc
div
int
ss
jl
sbb
es
cmps
(bad)
jb
add
js
mov
call
test
repnz
daa
fbld
xchg
out
jg
pop
jae
mov
clc
std
mov
sub
dec
mov
vmovntdq
popf
xchg
push
scas
mov
int
push
lods
xchg
cmp
sti
mov
dec
sub
sub
lahf
jmp
xchg
mov
test
ja
jmp
sub
push
add
mov
fimul
clc
in
lods
cmp
into
sbb
lahf
fmul
inc
(bad)
fstp
mov
push
mov
cmc
dec
aaa
sbb
loop
push
fwait
pop
jge
test
bound
test
loope
movs
daa
test
fimul
add
add
lods
push
pop
clc
cmp
mov
aaa
pop
jne
retf
push
enter
or
sub
mov
push
in
dec
push
jge
jecxz
aaa
mov
fwait
ret
jge
je
stos
sbb
or
dec
jle
test
mov
push
dec
push
xchg
ja
jmp
mov
test
xor
cmps
cmps
jecxz
pop
push
lock
mov
stos
out
neg
or
sbb
pop
push
icebp
fistp
(bad)
xor
sub
sbb
gs
dec
rol
jno
loop
test
aad
dec
scas
cwde
xor
ret
out
xchg
mul
sbb
into
xchg
pop
mov
dec
xlat
cli
call
je
pop
pop
inc
adc
cmc
ja
sbb
not
adc
xor
xchg
push
int
jne
clc
dec
jge
adc
pop
xlat
in
(bad)
adc
sti
imul
outs
out
push
arpl
cld
int
test
ficomp
fidiv
adc
mov
fsub
lods
xor
sbb
push
(bad)
xchg
ins
ins
sub
mov
fmul
jnp
xchg
sub
or
out
xchg
test
ret
cdq
retf
gs
push
jo
stos
into
jns
xchg
or
in
cmps
pop
aad
pop
xor
ret
push
pop
std
and
push
sahf
push
adc
dec
retf
xchg
jmp
xor
jne
inc
xor
ss
mov
lds
pusha
inc
push
nop
sbb
xchg
sbb
xchg
add
and
ins
jo
jno
push
(bad)
aaa
loope
rol
sub
jge
ins
xor
push
mov
mov
(bad)
out
repz
cdq
and
stos
jge
sbb
dec
outs
or
inc
shr
sub
fs
cli
sub
add
mov
ret
lea
aaa
jmp
(bad)
inc
pop
jmp
add
pop
cmp
retf
push
pop
fld
mov
adc
push
in
push
pop
sbb
jno
mov
mov
loop
cmps
retf
dec
stos
jle
rcr
sbb
adc
(bad)
jmp
loope
into
aad
jbe
xchg
dec
imul
mov
in
imul
pop
int
pop
and
mov
push
shl
stos
xlat
not
jl
sub
je
mov
mov
mov
or
movs
sub
jo
in
or
arpl
test
test
push
and
cmc
das
and
cmp
sub
stos
xchg
jbe
cmp
mov
push
cmc
out
pop
lds
mov
mov
fstp
(bad)
(bad)
aas
inc
push
mov
pop
pop
add
xchg
sub
lods
aaa
xchg
push
ret
nop
std
jmp
fdivr
mov
mov
mov
dec
in
inc
stc
je
xor
pop
fs
fdiv
adc
push
adc
repnz
inc
mov
push
and
xchg
into
add
add
xchg
push
sahf
rcl
test
clc
pushf
(bad)
out
test
sub
inc
sub
icebp
out
xchg
inc
pop
mov
or
cmp
inc
(bad)
adc
cdq
jne
imul
into
sete
pop
addr16
push
adc
xchg
dec
inc
adc
cmc
xlat
je
in
call
test
(bad)
enter
xor
aas
(bad)
mov
fstp
stc
add
or
jnp
jmp
cmp
mov
xor
(bad)
xor
shl
adc
addr16
xor
imul
and
sub
pop
jge
rol
shl
ret
(bad)
pusha
or
inc
pop
aaa
sub
fst
movs
cmc
js
sbb
and
inc
mov
jge
cmc
push
in
dec
ficomp
retf
std
fxch
arpl
sbb
xor
jo
dec
add
outs
xchg
or
lea
rcl
ja
mov
xor
fs
iret
arpl
pop
cdq
jmp
adc
int3
xor
rol
stc
das
jl
mov
xor
jp
(bad)
adc
lds
push
es
sti
test
mov
xor
les
bound
out
gs
dec
add
xchg
leave
nop
xor
shr
jg
jnp
(bad)
xor
adc
xchg
call
in
rcpps
dec
xor
xchg
mov
or
jp
call
fmul
test
adc
sbb
add
imul
mov
adc
mov
cld
mov
xchg
stc
jle
aam
aam
inc
mov
mov
pusha
outs
jae
push
aam
icebp
sub
inc
add
push
sahf
rol
and
jecxz
outs
add
pop
jb
das
shl
or
xor
dec
das
pop
(bad)
fidivr
stos
lahf
fwait
pop
cmc
lods
rol
outs
aaa
xor
mov
pop
jge
jno
nop
inc
or
sub
cmp
adc
icebp
cmp
cmc
push
xchg
inc
add
imul
xchg
clc
daa
fistp
in
mov
cdq
push
daa
(bad)
pop
cmps
push
jns
nop
sbb
fst
lods
mov
ret
(bad)
xor
aaa
mov
fidiv
outs
xor
addr16
cdq
inc
push
pop
mov
dec
jge
xor
push
cmp
cmps
or
dec
sbb
mov
sbb
in
push
cld
out
xchg
and
mov
mov
idiv
sub
ss
sub
neg
or
imul
xor
add
in
mov
xchg
fnsave
into
mov
cmp
in
mov
iret
dec
(bad)
lods
lods
retf
push
or
aaa
pop
cdq
daa
push
in
mov
int
ja
pop
arpl
pushf
fbstp
sar
sub
add
ja
hlt
test
loope
cdq
loope
cld
sbb
dec
mov
test
pop
fs
push
idiv
and
shr
dec
jmp
leave
lock
sti
mov
(bad)
or
dec
add
jae
loopne
(bad)
adc
xchg
jl
mov
fidiv
xchg
sbb
mov
lahf
bound
pop
mov
mov
shl
les
mov
adc
sub
xchg
push
in
ins
pop
mul
retf
scas
mov
aam
mov
jmp
sub
je
cmp
lock
aam
mov
dec
mov
mov
hlt
push
fisub
lods
data16
push
lahf
add
(bad)
iret
push
repz
loope
inc
push
std
test
pop
cmps
pop
imul
mov
packuswb
xchg
inc
data16
xlat
clc
retf
aas
mov
or
inc
xor
mov
pop
fwait
dec
jb
or
sub
mov
adc
lods
or
(bad)
sub
jmp
inc
imul
gs
inc
sub
add
mov
loopne
ret
pop
rol
aam
sub
mov
push
rcl
xchg
imul
xchg
jne
inc
test
xor
(bad)
in
mov
arpl
dec
push
mov
fdivr
and
xor
xor
or
loop
mov
mov
fld
call
add
pop
sub
mov
add
xchg
test
adc
pop
orps
aad
cld
dec
inc
stc
mov
sti
dec
jmp
lods
ins
xor
pop
jne
sub
fbstp
bound
xchg
(bad)
inc
pop
pop
test
fld
les
jmp
mov
(bad)
call
cdq
enter
leave
pop
add
test
fs
sti
pop
div
cmp
test
out
push
pop
pop
dec
add
sbb
(bad)
out
lea
mov
movs
sbb
xchg
into
mov
and
cs
arpl
cdq
cmp
rcl
dec
jnp
jmp
xchg
jp
add
int3
test
es
retf
loopne
inc
pop
pop
or
shl
xor
sti
pop
sti
jmp
dec
or
mov
sbb
sub
jmp
call
jnp
mov
in
xchg
addr16
inc
sub
or
mov
xchg
into
mov
call
add
xchg
outs
sub
aad
outs
jno
mov
dec
push
sbb
loop
or
and
inc
hlt
out
test
mov
imul
cmp
sti
cs
adc
xchg
frstor
sbb
mov
lods
repz
push
ret
jecxz
jp
mov
scas
inc
mov
xchg
imul
xchg
adc
aas
or
cmp
test
dec
jo
cmps
ins
jg
out
inc
sbb
sar
sar
cmp
dec
sub
dec
jmp
pop
pop
retf
popf
xchg
je
div
loope
fistp
mov
add
jmp
div
xchg
test
ss
test
daa
pop
inc
adc
xchg
push
(bad)
cmps
push
sar
aad
xor
jmp
(bad)
bound
adc
outs
jl
xchg
cmc
push
xor
and
out
iret
imul
xor
mov
sbb
inc
inc
xchg
rol
and
fwait
mov
movs
test
jo
add
sbb
das
int
call
cmp
aas
or
adc
sbb
inc
adc
sahf
das
mov
scas
clc
sbb
lea
mov
inc
enter
into
jp
sub
jp
jnp
sub
movs
lods
hlt
cmp
inc
xor
outs
aaa
repnz
mov
imul
inc
add
sub
test
scas
rcl
pop
mov
adc
ss
inc
inc
adc
add
icebp
(bad)
out
xchg
fnstcw
mov
movaps
push
xchg
xor
jb
(bad)
out
outs
cmp
jb
xchg
out
(bad)
sbb
aam
ss
dec
mov
fwait
jge
xor
fadd
js
xchg
test
xchg
fwait
rcr
mov
call
in
mov
jae
das
mov
cmc
jbe
fild
and
or
sbb
cmp
dec
xlat
rcl
lock
enter
shr
adc
mov
je
das
in
ror
lahf
adc
cld
fsub
inc
int3
ret
dec
jp
mov
adc
mov
xchg
jne
bnd
rep
popa
mov
xchg
sbb
cmp
daa
or
popf
pop
ds
push
shl
push
pop
xchg
adc
movs
jle
mov
sub
cwde
(bad)
loop
ds
aam
cmp
sub
mov
fisttp
cmp
xor
jge
imul
xor
jnp
and
push
push
bound
xchg
inc
(bad)
mov
xchg
div
fwait
mov
add
fstp
(bad)
or
sbb
pop
xchg
mov
mov
inc
aam
push
cmps
inc
movs
int3
add
pop
xchg
ds
(bad)
fnstenv
jae
adc
and
adc
or
(bad)
stos
add
jmp
inc
sar
aaa
dec
inc
ins
fsubr
ja
repnz
out
(bad)
in
sbb
fnsave
scas
sbb
dec
dec
dec
sub
lds
pop
movs
jbe
and
ret
je
shl
enter
outs
adc
pop
fisubr
pushf
add
mov
pop
jp
mov
dec
dec
mov
ror
mov
cmp
movs
dec
aas
in
sub
adc
cmps
mov
inc
push
imul
and
ins
and
shl
sbb
test
ins
loope
enter
sub
inc
es
add
xchg
mov
test
mov
pop
xchg
mov
sub
out
lds
shl
sbb
sub
dec
cmovb
sub
or
aaa
mov
ret
jo
xchg
bound
sub
rcr
cs
or
jg
ja
fdiv
xchg
xor
mul
cmc
inc
xor
pusha
adc
or
cmp
das
repnz
or
pushf
repnz
inc
dec
in
jmp
dec
and
pop
stc
sub
add
ret
inc
fldl2e
into
sbb
cmp
scas
ret
imul
dec
push
shr
cdq
mov
out
jp
jle
or
jg
daa
mov
push
sahf
push
and
ficomp
mov
outs
rol
repnz
ret
cmp
jle
cmp
and
mov
out
bound
pop
pop
pop
int3
push
mov
push
and
arpl
sbb
mov
shl
lods
adc
jno
jecxz
add
xchg
fsub
pop
cld
push
mov
movs
xor
aaa
dec
fadd
mov
add
imul
loope
or
sar
ins
mov
cmps
icebp
lods
data16
aas
in
xchg
xor
mov
test
sub
(bad)
call
mov
inc
mov
jae
push
adc
cs
sti
test
fild
mov
xchg
and
das
and
mov
lock
inc
xchg
arpl
jne
jg
jge
inc
mov
mov
shl
dec
mov
mov
mov
gs
enter
pop
aad
fcomp
lods
nop
and
and
retf
adc
add
mov
out
xchg
and
call
sbb
cs
jecxz
add
aas
sbb
push
sub
xchg
mov
xor
push
fld
nop
out
dec
fidiv
scas
rcr
js
das
mov
mov
cld
sub
mov
loope
in
inc
fistp
inc
leave
inc
push
push
pop
repnz
jecxz
mov
inc
iret
loopne
pop
lahf
(bad)
(bad)
ds
sub
out
nop
push
jg
xor
mov
aam
(bad)
jmp
pop
loop
mov
stc
out
mov
inc
inc
ss
jmp
ret
in
and
jne
cmps
mov
jmp
sbb
movs
shl
(bad)
push
push
stos
mov
pop
push
inc
call
jl
fmul
jle
jge
test
dec
aad
and
pop
push
sub
push
mov
sbb
xor
push
pushf
mov
daa
jge
push
cmp
jbe
cmp
loope
jns
retf
(bad)
push
pop
fisttp
dec
clc
sbb
push
xor
aam
scas
ret
jae
jge
add
rcr
clc
rol
inc
test
mov
dec
pop
inc
add
mov
sbb
cmp
(bad)
mov
cmp
push
out
push
pop
dec
in
xchg
and
xchg
repz
loopne
fwait
add
mov
mov
pusha
mov
xchg
mov
aas
sbb
mov
mov
call
gs
or
jne
push
mov
xlat
popf
loop
sbb
(bad)
call
dec
lahf
add
sub
xchg
or
shl
adc
adc
retf
mov
inc
test
ret
cs
test
or
pop
and
fadd
push
xchg
std
and
pop
stos
adc
pop
cli
or
aam
lea
push
jae
shr
add
or
cdq
es
mov
int3
in
jmp
int
cmc
out
pop
jae
in
inc
mov
jg
or
pop
pusha
mov
and
jae
aad
nop
and
pushaw
nop
shl
mov
test
adc
adc
fsub
in
pop
mov
mov
int3
scas
into
xchg
jbe
fwait
jbe
int
mul
sti
push
int
test
dec
xor
ror
aam
imul
ja
rcr
inc
es
jae
inc
ins
(bad)
aam
out
push
pusha
int3
adc
push
test
mov
xchg
mov
in
xor
xchg
jge
shl
dec
stc
pop
mov
jecxz
dec
stc
inc
push
jge
add
test
xor
popf
xchg
jge
ss
mov
movs
ret
mov
aas
dec
mov
mov
leave
jae
and
xchg
pop
jmp
and
jbe
mov
xlat
sub
inc
mov
das
adc
or
sbb
inc
bound
add
push
add
int3
mov
aas
mov
mov
pop
push
adc
xchg
aam
outs
loope
jge
xchg
mul
pop
ja
retf
ror
push
sbb
xchg
pop
daa
inc
xchg
es
push
fnsave
bound
mov
lahf
or
inc
sbb
int3
dec
push
sbb
movs
es
jmp
adc
xor
push
shl
stos
gs
xor
popf
jp
mov
or
mov
cmp
cwde
(bad)
cld
jnp
jl
(bad)
jno
cmp
aaa
gs
dec
(bad)
mov
daa
inc
out
sbb
sbb
stos
and
sub
in
mov
jp
inc
shl
or
jbe
pusha
jle
xchg
push
mov
test
movs
aaa
push
loopne
cmp
scas
data16
daa
cmp
sbb
cdq
mov
test
nop
sti
dec
mov
ins
add
call
or
mov
aam
clc
out
neg
loop
std
sbb
repz
lea
shr
sub
mov
gs
mov
xor
inc
jg
dec
mov
ficom
and
cmp
or
xbegin
imul
loop
or
xchg
in
fwait
push
add
jns
and
les
mov
sbb
inc
idiv
dec
rcr
fisubr
fdiv
jmp
mov
test
push
(bad)
xchg
fs
imul
iret
cli
test
xchg
pusha
cmp
jmp
xor
push
cmp
aas
adc
xor
inc
sub
inc
ins
lods
pushf
push
ins
pop
movs
iret
imul
jge
push
and
imul
ss
daa
xor
in
lds
loope
pop
xchg
xchg
add
jl
xchg
mov
(bad)
stos
loop
cmps
push
test
jns
sbb
retf
outs
call
jp
aas
add
je
push
aam
push
lock
stc
pop
lahf
(bad)
cld
mov
int3
ds
xor
fdivr
and
xor
fstp
sbb
aad
fwait
sub
mov
jbe
neg
push
mov
in
inc
std
ss
into
jae
xor
xchg
adc
or
sub
sbb
sbb
xor
push
cmp
cmp
pop
xor
inc
call
in
xor
dec
fmulp
sbb
lea
push
jmp
pop
lar
nop
add
mov
repnz
or
or
push
sub
fsub
bound
or
push
(bad)
push
in
cmps
jo
test
add
push
sahf
mov
inc
push
sbb
stc
sbb
xchg
mov
pop
and
pop
sub
and
icebp
loop
in
popf
mov
daa
xchg
les
sbb
cmp
dec
std
(bad)
adc
mov
js
mov
cmp
dec
xor
push
mov
cmp
add
or
push
pop
push
ins
cli
dec
in
push
outs
shl
scas
mov
cmp
test
mov
jno
jne
mov
or
test
cmps
push
ret
xor
repz
dec
mov
push
bound
rcl
fdivr
clc
or
sub
mov
aam
cli
add
imul
stc
sub
aaa
aad
sub
xchg
adc
gs
sub
rol
adc
push
dec
cmp
aam
pop
sbb
xor
das
jge
gs
or
cmp
outs
retf
mov
mov
inc
fistp
ins
stos
add
inc
popf
lock
sar
js
adc
leave
add
mov
int3
call
add
cmps
outs
jo
daa
(bad)
cmp
pop
push
dec
xor
jnp
add
cmc
or
cmp
sahf
xlat
lea
retf
pop
pop
adc
int3
xchg
hlt
inc
mov
mov
fdiv
mul
stos
pusha
mov
push
ret
imul
push
dec
(bad)
jecxz
hlt
pop
shl
mov
loopne
mov
cld
sub
add
call
(bad)
call
nop
out
and
fist
cs
mov
popa
jge
out
nop
scas
arpl
mov
pop
push
sti
cmp
in
cmp
aam
stos
push
cmp
into
mov
ins
sub
mov
dec
in
jmp
aam
inc
lahf
ror
cmp
cmp
jmp
lods
mov
pop
push
inc
loopne
xor
(bad)
jno
push
addr16
add
xchg
rol
loop
mov
pop
inc
mov
sbb
cdq
int
mov
scas
sub
popf
pop
xor
fdivr
jae
jae
pop
addr16
cmp
sub
shl
mov
(bad)
data16
inc
dec
in
ret
mov
arpl
nop
lahf
jno
mov
jmp
mov
dec
adc
clc
adc
ins
movsx
sub
or
mov
in
jmp
mov
pop
dec
dec
cmp
sub
and
mov
outs
dec
cmp
cs
jp
out
push
pusha
retf
mov
call
and
out
mov
jle
xchg
sbb
mov
ins
das
test
adc
sub
fstp
out
cdq
enter
clc
and
xor
daa
mov
retf
cmps
iret
leave
inc
sub
or
mov
jnp
cmp
jb
fimul
ins
dec
pop
dec
cmp
push
mov
cmp
or
scas
and
mov
cmp
mov
ins
push
fwait
leave
pop
push
xor
(bad)
cmp
cdq
shl
ds
push
repz
and
push
movs
int3
popa
mov
neg
mov
xor
adc
pop
mov
mov
stc
dec
cmps
jp
into
sbb
jbe
retf
and
aaa
ins
dec
stc
fld
je
mov
jne
xchg
imul
xchg
cmp
rcr
sbb
cmp
ret
fcom
call
mov
xchg
pop
nop
mov
sbb
repz
gs
mov
xchg
sti
dec
mov
into
repz
loop
mov
jge
xchg
lock
jno
xor
out
push
jl
(bad)
repz
loopne
(bad)
mov
int
mov
jmp
push
in
outs
xor
pop
jns
sub
mov
into
pop
retf
fiadd
or
sub
(bad)
out
lahf
fstp
ror
cmps
loope
retf
adc
icebp
push
daa
sub
bnd
lds
rol
cmps
js
inc
push
fidiv
push
xchg
push
std
out
das
scas
adc
push
stc
xor
jg
cmps
mov
aam
add
mov
jbe
and
dec
(bad)
jo
xor
sub
sbb
or
sub
scas
push
push
(bad)
cdq
mov
pusha
and
outs
xor
cmp
jnp
sub
rcl
jmp
sub
jle
aad
call
cdq
jo
cwde
mul
dec
mov
rcl
std
adc
shr
sub
(bad)
mov
xchg
or
jmp
push
or
sbb
repnz
je
dec
fwait
push
inc
push
push
lea
sub
fldenv
xor
retf
out
lock
out
mov
pop
(bad)
xlat
scas
lds
or
jmp
mov
mov
add
mov
nop
pop
push
outs
ficomp
lods
mov
mov
push
xor
rcl
stos
sub
ret
sbb
lods
addr16
sbb
dec
fadd
pop
popa
inc
shr
jo
inc
pop
sub
sbb
(bad)
dec
xchg
ficomp
xchg
mov
or
sub
and
xor
shl
jmp
inc
and
push
fs
fwait
bound
mov
das
std
call
or
mov
xchg
mov
sbb
and
loopne
xor
or
adc
inc
and
mov
mov
xchg
mov
jmp
sub
cwde
stos
mov
(bad)
mov
out
shl
repnz
int
mov
pop
xchg
cwde
jb
cmp
dec
fistp
loop
inc
(bad)
dec
out
push
and
fldcw
cmc
inc
lods
xor
and
pushf
jb
add
jne
ins
sub
xor
add
in
scas
or
das
cdq
cmp
add
leave
int
and
pop
cmc
rcr
fdiv
ret
inc
or
mov
cmp
call
lock
(bad)
add
sub
shl
lods
push
push
iret
pop
pop
xor
cs
or
mov
iret
add
push
push
xchg
imul
lods
lods
in
call
lds
inc
sbb
fldlg2
(bad)
jo
ds
push
ret
mov
data16
outs
or
lods
loopne
fiadd
pop
cmp
and
std
out
push
ds
mov
push
mov
mov
inc
pop
leave
inc
push
mov
pop
into
retf
call
bound
fld
jle
lods
inc
ret
sub
inc
test
mov
pop
jg
inc
std
scas
push
cmps
gs
lds
fsqrt
aas
sub
loopne
test
xchg
lods
xor
fcom
inc
movs
scas
enter
lods
add
ror
push
inc
inc
dec
repz
lea
jmp
daa
cwde
retf
cmp
test
in
inc
push
add
imul
cmp
in
rcl
icebp
fmul
and
scas
test
(bad)
and
addr16
or
push
sbb
dec
adc
and
sbb
sbb
out
inc
jge
rcl
call
stos
ds
arpl
pop
xchg
sbb
xchg
or
test
push
stos
repz
out
push
mov
mov
les
jmp
mov
jns
lds
lahf
mov
ins
mov
jo
movs
cdq
les
cmp
cmp
push
or
or
inc
pop
fiadd
or
fucom
and
retf
mov
xchg
and
cmp
mov
fs
rcl
aaa
into
mov
cmp
clc
lods
or
sbb
or
sub
sub
pop
(bad)
and
cmp
mov
iret
loopne
pop
jle
stos
cdq
out
add
cwde
and
add
dec
jg
out
push
cmp
js
inc
jg
jmp
push
jp
and
stos
push
add
xor
mov
retf
das
lods
jo
movs
xchg
dec
push
push
jbe
cmp
rcl
imul
fwait
repz
bound
sub
mov
mov
push
mov
stos
mov
inc
adc
enter
leave
daa
jmp
(bad)
push
call
adc
shr
mov
inc
jp
adc
dec
(bad)
push
add
frstor
mov
clc
push
gs
js
pop
adc
push
popa
ret
inc
nop
push
mov
dec
cmp
dec
and
mov
pop
jb
xor
inc
pop
sbb
or
push
mov
and
pop
ds
push
mov
cmp
test
cli
scas
mov
ror
mov
pusha
adc
cmp
(bad)
mov
int3
ror
cs
mov
fdiv
cmps
and
push
dec
cmp
pop
mov
pop
and
mov
inc
cmp
and
shl
in
sub
stc
and
add
shl
jp
iret
ds
icebp
sahf
pusha
imul
jge
xchg
push
mov
leave
pop
nop
lods
rcr
out
or
pusha
repnz
ins
push
pushf
dec
aad
pop
mov
and
repz
xchg
dec
jmp
cmp
jb
mov
mov
dec
addr16
and
cmps
cmp
sub
xchg
mov
cdq
mov
cld
(bad)
fisttp
addr16
pop
arpl
jecxz
fisub
fistp
xchg
(bad)
pop
cdq
and
sub
test
jle
lods
in
jge
adc
jg
push
inc
(bad)
jg
mov
dec
pop
dec
(bad)
stc
es
ins
es
pop
aad
pop
test
shr
sbb
shl
test
or
test
mov
or
pop
pop
sub
xchg
or
add
sbb
int
imul
add
ins
(bad)
int
cmp
mov
push
jae
xchg
mov
(bad)
adc
cmc
pop
add
pusha
test
iret
out
dec
adc
dec
sub
and
push
ss
mov
add
call
add
stos
hlt
scas
(bad)
pop
jne
repnz
cmp
fidiv
aad
push
jnp
cdq
jne
test
inc
pusha
dec
or
dec
in
and
pushf
imul
mov
(bad)
xchg
mov
sub
push
push
push
sub
in
mul
ret
les
(bad)
leave
mov
js
mov
ss
mov
push
pop
adc
leave
out
ja
mov
nop
ds
gs
dec
ror
mov
sbb
icebp
je
adc
movhps
les
xchg
movq
add
xchg
mov
int
push
cwde
cmps
int
je
or
cmp
jbe
jle
(bad)
jne
sti
ficomp
or
cmp
je
pop
push
repz
cwde
xor
lahf
addr16
(bad)
out
les
bound
xor
cmp
out
(bad)
jno
push
add
lea
daa
inc
mov
jecxz
dec
add
mov
jl
mov
lahf
fcmovu
jle
add
mov
gs
sbb
xchg
adc
ja
cdq
xchg
nop
call
mov
fisttp
or
int3
fcmovnb
icebp
fstp
push
push
pushf
mov
es
dec
(bad)
movs
fstp
or
fidiv
dec
push
adc
(bad)
xchg
or
(bad)
mov
or
push
sbb
and
pop
pop
push
or
fidivr
push
mov
in
jge
xchg
stos
popa
stc
jne
adc
push
jae
mov
fwait
xchg
je
xor
sbb
lahf
or
mov
fdiv
ss
pop
hlt
jns
(bad)
(bad)
rcr
dec
addr16
std
or
jle
loopne
rcl
sti
sub
retf
inc
add
sbb
xchg
daa
aas
call
arpl
pop
in
cmp
jp
ret
mov
mov
retf
imul
pushf
loope
and
scas
addr16
leave
pop
cmp
aad
adc
or
mov
fwait
out
jge
add
js
inc
ja
mov
test
mov
aaa
pop
adc
ftst
dec
cld
test
int
xor
movs
jbe
or
rcr
mov
fdivr
jns
pop
mov
mov
sbb
loopne
inc
add
add
adc
gs
cmps
sub
mov
jmp
sub
fistp
ss
(bad)
xor
cmp
call
jmp
or
mov
aaa
push
xor
mov
pusha
mov
out
cmp
(bad)
mov
pop
jl
test
data16
out
adc
dec
xor
mov
sti
mov
iret
les
lahf
test
pop
mov
dec
and
popa
retf
ds
out
mov
mov
mov
jecxz
lar
je
xchg
or
arpl
mov
sbb
adc
inc
sub
xchg
adc
ret
jnp
rcr
movs
je
xor
ins
lea
(bad)
sub
test
imul
cdq
add
fadd
loop
mov
repnz
adc
int
mov
jp
or
adc
pop
test
int3
gs
mov
cwde
int
inc
inc
xlat
mov
jo
xchg
out
sbb
cmp
aam
adc
sbb
jno
add
clc
das
sbb
outs
je
nop
add
pop
dec
shr
dec
sbb
fdivrp
pop
pop
scas
lds
pop
aam
xor
inc
aad
es
dec
add
xor
mov
fcmovnb
xchg
add
aas
dec
out
mov
fbld
inc
int3
ss
jnp
jne
js
ds
movs
mov
xor
cmc
push
bound
and
sub
push
out
ds
jmp
jnp
mov
and
cld
dec
ins
test
rcr
mov
pop
mov
cmp
out
add
lods
inc
jae
les
and
xchg
cmp
jns
push
aam
pop
out
cmp
or
imul
pop
test
and
loopne
mov
(bad)
pop
mov
or
push
aas
xchg
mov
imul
inc
sbb
(bad)
mov
add
repz
arpl
hlt
mov
xchg
mov
pop
ret
cli
dec
sar
mov
cmp
mov
xlat
lods
pop
test
push
cmc
xor
test
xchg
push
cmps
pop
xchg
mov
je
rol
inc
xor
dec
jg
pop
int
cmp
sti
nop
movs
mov
jno
fcomp
loop
retf
fiadd
(bad)
mov
inc
fmul
cmps
cmp
push
push
ret
imul
loopne
clc
xchg
mov
push
test
mov
sbb
mov
jo
dec
add
ret
pop
dec
jmp
sub
inc
mov
rcl
mov
pop
jge
daa
ja
cmp
(bad)
rcr
retf
mov
sbb
push
mov
(bad)
sub
xchg
adc
sbb
xlat
aam
test
jmp
loopne
sbb
ret
pop
scas
jmp
inc
mov
icebp
fbstp
ins
sahf
mov
cmp
leave
pop
xor
push
ja
push
es
jl
xchg
sub
mov
xor
or
iret
shl
mov
inc
adc
imul
not
cmps
pop
pop
sahf
lods
sub
rcl
pop
out
leave
sub
mov
add
pop
ss
cmp
push
sbb
sub
add
xchg
or
cs
inc
call
jmp
cmp
mov
inc
pop
outs
mov
pop
sbb
shl
call
out
xchg
rol
inc
adc
cli
loopne
loop
xchg
lock
mov
call
loop
mov
cdq
push
outs
lds
dec
mov
pop
cmp
(bad)
dec
sub
cmc
jp
lahf
xchg
xchg
clc
test
xor
sub
rcl
imul
aaa
out
cmp
outs
cmp
push
cmp
jge
cmp
mov
jns
enter
adc
outs
or
lock
inc
cs
popa
lahf
mov
std
add
xchg
in
ret
movs
mov
lea
mov
push
fimul
out
xor
in
cld
pop
sbb
push
add
fisubr
arpl
add
stos
adc
push
(bad)
jmp
cld
lods
hlt
mov
cmc
(bad)
test
in
aam
xchg
addr16
pop
cdq
(bad)
dec
jmp
inc
adc
mov
aam
imul
jg
fsub
pop
out
adc
and
and
iret
rcr
sub
ds
add
fstp
leave
inc
sbb
inc
jne
lea
sub
pop
jle
pusha
fs
mov
out
cmp
cmp
xchg
arpl
inc
cmp
sub
leave
sub
jl
cdq
sub
mov
fld
dec
out
or
loop
xor
std
es
mul
mov
mov
nop
xlat
mov
adc
or
shl
lods
jns
xor
in
add
inc
push
mov
add
test
xor
gs
fistp
mov
dec
out
push
or
sub
and
bound
pop
aaa
mov
jno
mov
popf
and
js
pop
pop
adc
outs
test
cld
ins
adc
ins
imul
sbb
sbb
cmp
inc
int3
jge
enter
mov
ds
push
or
lea
sbb
pop
arpl
pop
das
scas
jnp
jg
popf
cld
mov
sub
test
pop
mov
outs
adc
(bad)
out
shl
dec
inc
jmp
outs
mov
pop
jg
xchg
pop
sub
mov
test
js
(bad)
repz
jbe
pop
sub
add
mov
icebp
sub
sbb
or
popf
dec
push
or
nop
jbe
dec
les
sub
sub
pop
sub
push
add
addr16
inc
loop
fisttp
xchg
retf
xchg
or
(bad)
scas
repnz
and
sbb
inc
sti
jmp
sub
jg
xor
psllq
dec
mov
fisub
ins
out
fldenv
shl
nop
adc
cdq
push
dec
test
ficomp
dec
add
(bad)
in
and
pop
sahf
into
mov
sbb
cmp
push
dec
cmc
or
and
rol
xchg
ret
sub
stc
in
test
xchg
push
jl
mov
mov
ja
shr
sub
jle
stos
scas
in
inc
frstor
push
sbb
arpl
les
fs
adc
test
sub
outs
das
xchg
arpl
(bad)
adc
mov
cwde
mov
push
dec
xchg
sbb
int3
cwde
xchg
sti
retf
and
pop
inc
enter
jbe
js
push
mov
jae
(bad)
push
or
shl
clc
mov
or
fmul
or
stc
ss
repz
mov
frstor
sub
push
pop
sub
mov
sub
mov
push
cli
popa
xor
cmc
pop
and
jns
dec
jmp
jg
inc
int
data16
mov
icebp
out
aas
out
or
mov
cmp
loope
loope
push
(bad)
lods
adc
call
xchg
or
cmp
nop
pop
movs
pop
dec
sti
and
mov
sub
adc
jmp
cmp
movs
ds
repnz
setbe
xor
outs
xor
adc
mov
inc
retf
add
xchg
int
aad
js
add
in
mov
push
add
out
sbb
fs
sub
lods
mov
dec
adc
(bad)
inc
mov
ss
sub
in
mov
enter
enter
call
nop
xchg
pop
mov
(bad)
out
push
or
or
add
daa
fwait
rcr
out
xor
leave
iret
fcom
out
aam
jb
sub
popa
pop
fprem
xor
sti
leave
es
and
pop
adc
or
in
sub
test
std
dec
xlat
dec
repnz
sbb
out
jae
jae
pop
jecxz
int
inc
xchg
jno
sub
sbb
pop
jne
mov
adc
push
sub
jno
mov
and
xchg
ins
aam
xor
js
retf
jecxz
out
in
mov
imul
pop
ds
push
xchg
jg
jl
iret
or
stos
popf
mov
cld
push
mov
push
fld
cmps
push
movs
push
dec
aad
aas
push
pop
push
push
push
push
sti
std
sub
movs
mov
imul
fsubrp
leave
shr
jno
sar
mov
cmp
mov
aam
pop
nop
hlt
das
das
adc
ret
pop
(bad)
cmps
pop
lods
xchg
jle
fcmovnb
pop
fdivr
xchg
stc
ins
adc
push
cmp
not
jb
push
jns
shl
sbb
xor
xor
call
mov
loop
cdq
and
mov
div
push
adc
hlt
mul
adc
or
push
movs
xor
and
test
nop
out
imul
fnsave
loopne
sub
sti
sti
xchg
pop
cli
loop
xchg
fld
or
lods
jge
push
es
shl
out
sub
mov
icebp
out
shr
jne
mov
ficomp
jmp
rcr
test
out
mov
retf
fadd
(bad)
add
data16
sub
jne
pop
push
sbb
shl
iret
pop
or
adc
push
in
cld
out
push
fmul
mov
aas
rcl
daa
and
outs
adc
ins
xor
aas
jne
add
xchg
sbb
inc
lods
out
jo
mov
jnp
xlat
int
ret
xor
scas
jbe
fisub
dec
inc
iret
and
xchg
(bad)
cmp
mov
lahf
ss
mov
(bad)
loop
sbb
sbb
call
xchg
xchg
dec
(bad)
jg
inc
aaa
add
repz
in
leave
jmp
mov
imul
mov
or
sbb
sbb
out
or
mov
aas
jmp
(bad)
sti
add
inc
stos
pop
mov
adc
mov
outs
jne
fwait
enterw
cmp
inc
sbb
stc
lds
(bad)
xchg
mov
loop
cmps
sbb
sbb
js
dec
sbb
(bad)
lock
imul
add
mov
shl
mov
inc
mov
imul
(bad)
sbb
repnz
sub
push
cmp
push
sar
cmp
cwde
jae
xlat
and
iret
push
add
xor
scas
mov
clc
jnp
jmp
aaa
dec
cs
mov
mov
jp
push
mov
mov
xor
add
pop
pop
push
adc
push
dec
fmul
pop
or
jne
mov
sbb
push
add
xchg
xor
adc
daa
inc
outs
js
mov
push
inc
cld
sub
pop
or
xor
xchg
xor
inc
sar
in
in
fisubr
les
jbe
mov
les
lods
idiv
cmp
ror
and
sub
or
lds
(bad)
mov
add
adc
cmp
push
sbb
push
in
jecxz
mov
jnp
inc
cli
pop
and
test
jp
rol
fidiv
popa
aas
inc
call
outs
sbb
es
repnz
shl
leave
out
popf
out
dec
inc
jp
sub
lods
dec
fdiv
icebp
out
cdq
loope
mov
(bad)
leave
jge
dec
fistp
stc
push
call
add
sub
xchg
int3
out
rol
xor
(bad)
ja
mov
pop
and
ds
in
sar
pop
adc
retf
cdq
cs
add
add
push
(bad)
xor
or
ds
pusha
push
adc
popa
dec
inc
adc
mov
push
ins
sbb
add
or
jbe
(bad)
out
loop
std
cwde
and
into
jmp
lds
mov
add
jbe
sbb
stc
fs
xor
jo
pushf
mov
ds
ror
mov
lods
sahf
shr
adc
xor
jb
cmp
inc
sub
mov
xchg
cdq
jne
mov
ret
xchg
adc
lahf
test
in
ror
test
pusha
jg
pop
xor
sbb
push
push
gs
or
addr16
lea
call
adc
push
xchg
lds
leave
sub
and
jb
movs
jmp
cmp
leave
mov
jmp
cmp
js
mov
sar
rcl
sub
mov
and
sbb
cmp
out
fs
shl
call
add
mov
sub
js
push
ss
stos
in
mov
loope
es
pop
push
retf
jle
aas
fwait
cmc
jmp
ja
call
int
jbe
xchg
or
adc
sub
fisttp
cmp
inc
mov
xchg
pop
fnstenv
sub
daa
adc
hlt
stos
mov
fs
inc
jmp
mov
test
fsubr
pop
or
pop
(bad)
iret
fcmove
adc
xor
movs
adc
pop
retf
int
pop
shl
add
jne
cmc
dec
mov
xor
sub
cmp
and
cmp
(bad)
int
lds
xor
cdq
call
dec
in
repz
aam
inc
fadd
pop
scas
cld
adc
stos
sub
(bad)
(bad)
sub
mov
fidivr
push
dec
push
add
push
jge
mov
ins
dec
aam
sbb
dec
imul
jmp
jmp
pop
pop
add
adc
les
fdivr
inc
xchg
ret
pop
mov
lods
mov
sti
cmp
retf
test
in
in
ret
addr16
pop
bound
out
in
call
shl
mov
xor
adc
and
inc
cld
rcl
in
mov
in
arpl
adc
mov
out
(bad)
out
loopne
dec
iret
or
(bad)
mov
shl
sub
fcmovu
inc
sub
dec
push
jp
retf
add
retf
xchg
and
retf
enter
xchg
out
and
popa
dec
inc
xlat
into
fnsave
xor
ficomp
xor
js
test
stc
loope
xchg
sbb
cmp
jg
cli
jmp
scas
enter
jmp
imul
int
xor
mov
or
mov
and
add
push
aam
cdq
xchg
push
sub
xor
in
push
xchg
jmp
cli
popa
xchg
adc
dec
retf
jmp
add
inc
jge
in
test
popa
xlat
lahf
xor
adc
enter
retf
out
fst
into
(bad)
rcr
loopne
loop
inc
mov
pop
imul
xor
jno
ret
pop
jne
mov
shl
repz
push
sbb
jge
xchg
test
dec
fistp
sub
(bad)
shl
push
sub
push
retf
ds
stos
into
retf
jmp
pslld
mov
xor
ror
add
mov
cmp
stc
push
push
dec
inc
or
xor
loope
ror
xor
dec
push
jo
jns
and
jmp
rol
mov
xor
ins
cli
fcmove
test
cmps
imul
icebp
repz
dec
push
and
and
or
pusha
cmp
cmp
mov
mov
adc
pop
cdq
add
in
or
push
inc
mov
mov
fld
dec
repz
mov
xchg
cmp
adc
je
(bad)
call
add
pop
dec
clc
imul
sahf
dec
fidivr
xchg
rcr
ja
movs
dec
jnp
and
test
fcomp
mov
cmp
aad
(bad)
sub
mov
or
adc
sub
mov
ss
xchg
adc
push
cmps
sub
dec
pop
mov
jmp
xor
in
inc
mov
add
ins
jmp
(bad)
xchg
js
addr16
fwait
pop
add
aaa
jae
jecxz
shl
push
lods
loopne
cmp
frstor
test
pop
push
popf
daa
mov
nop
xchg
xchg
mov
les
pushf
sub
cmp
clc
sar
sbb
lock
pop
pop
and
mov
test
aad
scas
movs
cmps
callw
xchg
iret
mov
ret
mov
push
aaa
or
rcl
cmp
add
pushf
mov
xor
xchg
mov
ja
imul
sub
or
push
mov
test
pop
das
(bad)
lock
fiadd
mov
call
ja
daa
sbb
or
in
cmp
add
jb
and
ja
sbb
shl
sbb
ins
sub
inc
scas
push
and
out
mov
rcl
bound
sbb
les
jb
imul
aaa
retf
and
inc
bound
pop
ficomp
hlt
push
jae
xchg
adc
push
aas
aam
xchg
loope
hlt
push
xor
jno
pop
stos
js
in
pusha
cmps
cmp
fld
fiadd
pop
adc
sub
das
sub
pop
arpl
sbb
add
in
(bad)
xor
nop
das
das
icebp
stos
jno
xchg
jecxz
stos
into
pusha
popa
lods
cs
inc
leave
ror
aaa
pop
repnz
jbe
push
js
leave
dec
les
inc
fldenv
(bad)
int
push
outs
pop
mov
fwait
gs
jno
test
mov
mov
xchg
mov
idiv
stos
jmp
mov
bound
fist
lods
mov
(bad)
sar
cwde
jo
scas
mov
pop
xlat
shr
in
in
xor
mov
(bad)
push
jae
scas
add
xchg
sub
push
jae
dec
inc
and
in
xchg
ror
and
dec
icebp
stos
mov
clc
leave
and
push
jmp
ret
xor
ss
mov
movs
arpl
sub
and
sub
leave
xor
out
out
or
mov
or
sub
inc
jb
and
sub
push
cmp
xchg
repnz
sbb
ins
(bad)
or
adc
outs
idiv
xchg
push
movs
mov
test
das
retf
ret
enter
bound
ja
inc
cli
and
cmp
ins
ret
cmp
retf
sti
add
test
nop
scas
pop
mov
outs
div
add
xor
sbb
and
test
dec
fwait
adc
xchg
jmp
mov
sbb
adc
fdivr
sub
jmp
mov
loopne
scas
gs
pop
jb
movs
call
cld
inc
imul
fadd
div
adc
adc
pusha
ret
jmp
xor
inc
lods
sub
aaa
fstp
out
jb
push
cwde
jg
in
sub
push
adc
ja
push
xchg
pop
adc
mov
xor
sub
punpckhdq
addr16
cmps
pop
sub
and
sbb
cld
scas
test
ins
sbb
jge
push
sbb
fbstp
cli
inc
mov
int
and
push
jo
sbb
jbe
or
loopne
call
xor
jle
cwde
add
or
pop
jmp
cmp
fs
and
jno
push
add
in
fdiv
fcom
mov
cld
fadd
push
inc
int
mov
(bad)
sbb
popa
das
mov
test
fs
ret
xor
ret
adc
in
jne
sub
sbb
stos
inc
push
sub
adc
js
gs
jne
cmps
mov
scas
jmp
pop
and
aam
lods
mov
dec
adc
pop
mov
cwde
repz
and
stos
mov
jo
call
les
jmp
popa
jb
mov
sub
ror
xchg
sub
fstp
loope
leave
jmp
add
add
inc
leave
sbb
mov
scas
adc
push
lods
push
jmp
in
int
xchg
fld
cdq
xor
push
in
xchg
push
loope
imul
xor
xor
ja
fwait
push
test
jbe
adc
aad
scas
mov
jge
das
or
xchg
daa
mov
cmp
scas
jg
imul
(bad)
adc
call
sbb
arpl
inc
xchg
lds
fdiv
push
fild
xchg
adc
sbb
mov
shl
mov
dec
push
and
push
xchg
mov
mov
inc
jns
shr
ds
inc
loopne
or
and
push
loopne
or
rcr
scas
xor
xor
inc
ss
mov
ds
xor
mov
pop
push
inc
ret
mov
enter
data16
popa
sti
jg
js
mov
shr
ret
add
dec
daa
shl
sub
jmp
mov
scas
jbe
dec
inc
xchg
int
shl
mov
adc
push
aas
push
loopne
ja
call
inc
fwait
and
repz
sbb
movs
jl
jle
ins
mov
call
lea
movs
jbe
jnp
push
movs
mov
xlat
mov
lds
xchg
xchg
mov
ins
pop
pop
pop
in
push
jne
inc
or
jb
dec
push
inc
ja
push
(bad)
outs
sub
lds
mov
test
cmp
ret
dec
xlat
stos
sbb
jecxz
jno
or
mov
xchg
mov
cld
push
dec
push
cwde
sbb
clc
ja
cs
(bad)
inc
xchg
js
paddq
push
stc
push
movs
adc
addr16
mov
das
fxch
aaa
in
rol
sbb
shl
pop
fsub
(bad)
pop
mov
icebp
test
mov
imul
pop
xchg
xchg
test
dec
gs
mov
out
cmc
or
xor
cmp
cdq
retf
(bad)
das
mov
ins
mov
adc
mov
dec
pop
cmp
fist
dec
mov
cwde
retf
adc
clc
imul
cs
out
imul
add
ja
call
xchg
int3
add
aaa
push
pusha
dec
pop
add
cmp
add
inc
sub
fld
xor
and
push
(bad)
lods
pop
or
xor
enter
rcr
xchg
push
cdq
sbb
js
xchg
test
xlat
retf
pop
mov
sbb
fs
mov
retf
jmp
xchg
pop
retf
retf
and
cmps
dec
inc
push
or
or
mov
pop
(bad)
cld
and
les
scas
inc
add
pop
cmps
stos
and
lods
jb
adc
xlat
inc
add
mov
mov
or
push
and
lods
cli
mov
(bad)
xchg
xchg
fwait
int
cmps
jno
gs
lahf
mov
adc
das
ss
test
test
into
push
xlat
xchg
int
mov
adc
dec
push
outs
jg
adc
retf
jne
push
fidiv
popa
or
and
hlt
mov
jle
pop
lods
outs
dec
fcmovnbe
push
or
xchg
add
add
test
daa
iret
sub
fiadd
icebp
mov
mov
or
push
adc
add
ins
(bad)
fldenv
mov
sar
xchg
std
and
mov
clc
jnp
addr16
or
xlat
test
lahf
outs
add
lods
fs
aam
iret
xchg
lahf
cmp
leave
mov
rcl
daa
cmp
lods
scas
dec
pop
mov
sbb
dec
xchg
inc
lods
ret
inc
dec
pop
sub
jb
out
pop
(bad)
lock
mov
aad
shr
mov
loope
xor
daa
pop
push
(bad)
cmc
popa
pop
out
fwait
cmp
mov
sub
pop
or
rcr
(bad)
jae
pop
in
cs
mov
xchg
aaa
sar
push
fsubr
mov
inc
push
js
push
or
sbb
push
imul
popa
(bad)
imul
imul
outs
xor
push
pop
jmp
outs
fs
add
cmp
ss
adc
push
neg
into
push
jb
xchg
sub
inc
sub
push
pop
sub
test
cmc
scas
adc
push
scas
jle
loop
push
ja
adc
dec
nop
icebp
outs
sbb
push
jle
or
mov
stos
jns
call
xchg
bound
cmp
jmp
cmp
mov
xchg
lea
or
xchg
neg
enter
inc
cli
std
scas
add
test
mov
push
iret
pop
mov
pop
retf
lahf
fiadd
jnp
cmps
test
cmc
(bad)
arpl
pop
and
add
fwait
inc
ficomp
sbb
and
js
and
inc
add
adc
retf
in
pop
or
fnstenv
xor
push
add
xor
enter
clc
xchg
push
cmps
mov
jb
adc
xchg
pop
dec
mov
push
aaa
jmp
sbb
mov
clc
ins
das
rcr
push
pop
fcomi
dec
pop
scas
sbb
fld
push
push
les
cs
xchg
cmp
hlt
test
mov
add
sub
mov
mov
pop
jbe
mov
inc
(bad)
fnstsw
mov
js
add
clc
adc
shr
cmp
aaa
(bad)
xor
jge
add
aaa
xchg
cmp
fs
(bad)
jle
inc
div
xor
push
mov
aas
sub
ret
ins
adc
push
xchg
(bad)
jl
mov
cmc
les
add
dec
push
push
push
pop
add
(bad)
out
push
cmps
inc
es
or
mov
and
mov
dec
cmp
fsub
jecxz
repnz
push
fcom
outs
lock
mov
loope
fisttp
std
jns
xlat
xchg
cmps
or
xor
jnp
mov
loop
arpl
rol
js
ror
pop
xchg
jle
push
or
out
dec
mov
retf
fcom
sbb
scas
rcl
fisttp
mov
shr
shl
cmps
in
jne
aas
xchg
inc
add
repnz
xor
jle
into
add
jne
mov
bound
push
xlat
sbb
inc
sub
mov
push
xor
mov
mov
icebp
pushf
fdivr
ficomp
loopne
fstp
jmp
test
jmp
adc
imul
icebp
out
push
pop
pop
ror
das
adc
shl
xchg
or
or
nop
dec
push
xor
jmp
jnp
mov
mov
ret
cmc
add
das
jg
cld
jno
cdq
fwait
call
in
retf
xchg
or
dec
inc
inc
jmp
(bad)
sbb
iret
jmp
loope
cmp
pushf
retf
shl
jg
pop
movs
fucom
xchg
gs
test
xchg
jl
lahf
cwde
mov
ficom
iret
sub
jb
or
mov
cmps
or
cmp
push
cmp
mov
not
xchg
push
mov
inc
into
mov
xchg
hlt
lods
sub
shr
(bad)
pop
lock
jmp
xchg
dec
xchg
leave
sub
mov
cmps
aam
in
cld
movs
jmp
mov
jle
mov
dec
sub
bound
aad
lods
inc
imul
sbb
sbb
stos
outs
push
adc
enter
cmp
mov
or
iret
sub
movs
pushf
pop
int3
out
add
pop
das
outs
imul
bound
sub
enter
or
pop
shr
lahf
mov
data16
fsub
ret
xchg
mov
inc
int3
sub
mov
dec
fst
lahf
mov
inc
inc
dec
pop
loop
jno
aad
xchg
ds
fsubr
jp
out
out
imul
jo
pop
mov
es
loop
pop
pop
loopne
push
jg
pop
aaa
daa
pop
movs
enter
xchg
mov
jb
sub
jg
(bad)
jecxz
cmp
push
pushf
movs
cmp
pop
cld
ficomp
pop
fistp
imul
icebp
repz
sbb
sbb
pop
or
fld
test
std
mov
enter
xchg
cmp
mov
hlt
adc
adc
loopne
push
out
adc
gs
aas
daa
in
out
xor
add
inc
pop
jle
and
in
(bad)
ins
pop
retf
mov
and
hlt
leave
les
bound
movs
cmp
push
(bad)
pop
mov
jp
adc
xchg
fdivp
hlt
iret
mov
call
push
test
inc
(bad)
ror
loopne
or
cli
fs
movsx
fistp
mul
lods
aas
clc
mov
out
out
mov
scas
mov
(bad)
adc
shr
ret
sub
dec
dec
add
adc
out
or
push
cmp
mov
ret
out
mov
in
aam
test
ds
outs
repz
push
dec
arpl
cmp
pushf
test
mov
jb
clc
pop
int3
mov
retf
add
lahf
push
sahf
imul
sbb
std
push
add
mov
cwde
mov
adc
cmp
mov
movs
cmp
lods
pop
mov
xor
or
xor
sbb
addr16
mov
stos
xlat
mov
sahf
iret
or
ds
test
fadd
gs
sub
dec
sbb
js
cmps
xor
cmc
add
sub
cmp
xor
fsubr
in
adc
jge
mov
(bad)
ret
mov
movs
into
add
cmps
outs
adc
mov
jge
inc
(bad)
pop
push
push
adc
add
sub
loopne
imul
std
repz
shl
mov
ja
or
mov
in
push
add
mov
fsub
adc
in
add
inc
and
push
call
cmp
and
call
adc
cmp
push
pushf
rcr
aad
push
sbb
es
int3
xlat
sbb
xor
pushf
or
sti
test
jne
clc
call
mov
sbb
xchg
lods
das
aaa
sbb
lods
seta
jmp
leave
(bad)
mov
outs
cmp
or
mov
or
mov
out
int3
pop
dec
call
fistp
jge
dec
test
jl
(bad)
add
call
jbe
out
aaa
ins
sbb
mov
jne
into
arpl
(bad)
fmul
int
push
pop
aad
daa
stc
(bad)
mul
cmps
imul
push
ins
push
jge
aad
addr16
jo
jnp
xor
and
(bad)
call
ss
out
xchg
pusha
out
or
xchg
fs
repz
out
pop
mov
imul
mov
(bad)
retf
movs
pop
jl
or
xchg
fwait
(bad)
sub
push
mov
pop
sub
popa
cmp
idiv
pusha
(bad)
lahf
sub
add
inc
ss
add
(bad)
push
inc
sbb
stos
inc
mov
pop
cld
stos
dec
push
ror
fstp
pop
inc
rcl
push
mov
sbb
stc
(bad)
les
mov
ins
add
pop
pop
pop
(bad)
sub
inc
xor
dec
or
xchg
or
lock
push
push
fidiv
int
stos
xor
lods
sbb
or
cwd
mov
ret
sub
fwait
xchg
rol
iret
inc
ret
mov
cli
repnz
sahf
sbb
cwde
jg
pop
dec
mov
jne
or
add
retf
mov
add
cdq
sar
dec
mov
and
push
pop
push
call
adc
fld
das
call
cdq
sub
xchg
mov
(bad)
mov
sbb
gs
int3
sbb
ins
sbb
fld
fiadd
mov
sbb
retf
iret
scas
ins
pusha
xchg
or
sub
bnd
aas
nop
or
mov
inc
mov
jno
push
pusha
fcomp
mov
out
jae
fucomip
in
nop
retf
pop
scas
pop
dec
push
and
mov
mov
out
jg
mov
sub
or
cmp
sub
dec
int
fisttp
mov
and
jbe
cwde
inc
(bad)
mov
push
add
lea
mov
stos
adc
scas
aaa
mov
fsub
xchg
mov
outs
test
div
mov
pop
push
cmp
pop
popf
dec
lods
add
mov
mov
mov
inc
addr16
push
gs
ins
adc
fcomi
mov
dec
imul
pop
out
xor
aaa
push
out
cmp
test
add
adc
mov
xor
jmp
xchg
sub
xor
in
jns
cmp
mov
mov
nop
push
aaa
push
hlt
cli
ror
ds
xchg
pop
test
shl
and
dec
mov
mov
jmp
scas
cmp
xchg
add
sahf
mov
xchg
push
mov
cwde
ficomp
or
dec
fcmovbe
sbb
and
or
dec
pop
outs
stos
pop
add
jge
dec
jl
mov
xchg
fisttp
inc
sub
dec
cwde
scas
pop
ins
in
cmp
mov
out
neg
es
rol
mov
movs
inc
inc
leave
imul
add
or
daa
(bad)
and
and
cwde
sbb
xchg
add
ret
pop
mov
fstp
sbb
push
sub
rol
jp
loop
push
data16
add
hlt
and
in
push
clc
add
(bad)
je
mov
out
xchg
movs
loopne
mov
mov
push
fadd
mov
inc
pop
adc
and
sub
fstp
pop
std
push
xchg
rcr
sbb
sbb
mov
adc
scas
icebp
and
mov
adc
test
push
push
pop
cmc
add
fdiv
nop
push
retf
lahf
stos
fsubr
lds
add
(bad)
ins
xchg
adc
leave
adc
popa
mov
dec
hlt
sbb
push
xchg
enter
(bad)
push
xchg
jb
pop
sub
mov
fwait
idiv
cmp
cmp
lods
outs
xor
or
test
inc
sub
dec
ins
cwde
adc
call
push
idiv
cmp
or
out
xchg
bound
cli
mov
in
fst
mov
pop
and
cs
adc
pusha
adc
inc
popa
call
mov
pop
mov
push
sub
retf
pop
cmp
xchg
call
mov
sub
mov
push
mov
jl
shl
fld
mov
out
clc
shl
xor
out
pushf
into
loop
sub
add
xor
(bad)
fcmovbe
xchg
adc
push
mov
push
push
mov
dec
daa
mov
sub
je
cmps
adc
or
loopne
in
add
int3
adc
pop
ror
push
test
movs
jge
mov
dec
sbb
int3
and
xor
outs
mov
mov
movs
sub
(bad)
cs
ds
bound
mov
jnp
and
push
adc
add
faddp
pusha
add
mov
mov
data16
cmp
mov
stc
jae
xor
ss
xor
xor
cwde
xor
cmp
(bad)
or
jmp
jb
repnz
pop
jge
(bad)
adc
mov
or
out
add
aaa
cmp
jne
push
scas
repnz
push
mov
inc
add
shl
ror
imul
dec
mov
vmwrite
call
add
and
mov
lods
test
pop
sbb
lds
daa
mov
pushf
getsec
and
div
sbb
lea
mov
mov
cmp
aas
cmp
or
aas
xchg
sbb
xor
(bad)
cmp
je
push
in
shl
jae
push
add
or
out
mov
xlat
in
dec
movs
int
repz
dec
shl
lods
sti
mov
dec
cmc
loopne
dec
loope
imul
xchg
cmova
mov
in
bnd
adc
int
out
ffree
xchg
or
mov
leave
xchg
or
ret
push
jnp
jnp
lods
cs
sub
adc
ret
out
jmp
sbb
or
cmp
(bad)
in
cwde
lds
enter
and
enter
mov
mov
jg
ret
mov
scas
and
cmp
sbb
mov
and
jle
cmp
pop
retf
call
push
pop
cs
fcom
add
cmp
gs
arpl
ds
pop
addr16
int3
ja
pop
cwde
mov
xor
lahf
sbb
iret
retf
and
popa
inc
mov
mov
enter
and
mov
cmp
clc
test
lock
test
pop
push
stos
lds
jnp
sub
pop
xchg
dec
pop
sub
(bad)
fmul
loope
fst
pop
add
pusha
and
rcl
fcmovne
add
and
pop
int
dec
push
lea
inc
lahf
arpl
mov
cmps
jecxz
fcom
mov
jo
leave
aam
jae
cmp
xor
mov
into
jg
sbb
add
jmp
cmp
je
lahf
jle
pusha
sub
mul
stc
jg
outs
inc
data16
ret
ins
ja
cmp
mov
cmp
xchg
sbb
imul
stc
pop
scas
call
popa
push
sub
in
cwde
mov
push
mov
sub
loop
mov
loopne
jae
jnp
es
pop
data16
jno
lods
sahf
xchg
cmp
sub
or
cmp
jnp
pop
jnp
xor
mov
(bad)
cdq
dec
push
jg
dec
(bad)
mov
lock
mov
xchg
dec
mov
add
add
dec
cmp
cmp
push
mov
mov
(bad)
push
neg
les
jle
sub
into
xchg
addr16
dec
adc
imul
ret
jno
sbb
xor
and
hlt
sub
imul
(bad)
mov
xchg
cmp
xor
cmp
cld
xlat
inc
xlat
mov
mov
ret
test
and
cs
pop
repnz
xchg
mov
cmps
lock
(bad)
test
xor
sub
loope
add
inc
(bad)
pop
pop
fcomp
inc
add
rcr
jbe
dec
pop
dec
jnp
lds
in
xchg
inc
stos
repz
mov
outs
jg
lods
mov
pop
push
icebp
nop
ins
xor
pushw
mov
fild
rol
dec
sbb
(bad)
xchg
ja
xchg
in
jp
(bad)
lods
aad
stc
xchg
xor
rcl
pop
ins
ficom
adc
mov
cmp
push
dec
loopne
and
ins
and
cdq
ins
dec
add
ja
mov
adc
cmp
jns
sti
cmps
(bad)
retf
xor
cmp
adc
mov
lds
clc
mov
jmp
fcmovnbe
dec
jo
out
loopne
xchg
jp
push
out
loopne
dec
or
rcr
jb
push
pushf
adc
pop
vpaddw
xor
mov
loope
add
sub
jo
shr
mov
xor
test
fcmove
inc
adc
(bad)
jnp
sar
xor
jl
jo
adc
adc
mov
popa
cmp
mov
cli
enter
repnz
mov
je
repnz
mov
aaa
and
cmp
dec
hlt
sti
jle
popa
imul
(bad)
xor
nop
push
gs
test
mov
leave
out
ins
jns
add
lods
push
or
jp
test
push
inc
sti
fistp
jmp
stos
jge
test
test
add
lock
adc
cmc
pop
add
scas
add
jl
jns
jmp
int3
test
cs
xlat
pop
or
pop
clc
push
ret
iret
jp
or
jecxz
fwait
(bad)
or
mov
mov
mov
lea
leave
rcl
fs
mov
stos
mov
cmps
popa
lahf
dec
jo
scas
cdq
cdq
nop
add
not
clc
and
mov
or
test
fsub
ins
push
inc
xchg
xor
cmps
(bad)
push
add
pop
fucomi
push
pop
and
xchg
cmc
in
sbb
and
mov
adc
cmp
fsub
sub
add
movs
mov
or
mov
loopne
clc
ins
mov
pop
push
xor
and
xchg
dec
push
mov
fadd
nop
cdq
xor
iret
cmp
pop
pop
scas
fwait
mov
mov
jmp
mov
leave
cdq
fisubr
mov
rcl
stc
stos
inc
aam
loopne
xchg
push
ins
shl
pop
sub
mov
or
(bad)
dec
stos
jae
pop
dec
mov
dec
pusha
test
ret
mov
sub
pushf
pop
mov
sub
mul
xchg
mov
out
repz
jne
cdq
inc
jmp
jp
loopne
loope
or
outs
adc
out
xor
push
cvtps2pd
movs
aaa
jbe
mov
das
add
out
sbb
js
popa
lods
fwait
inc
dec
test
test
sub
leave
mov
mul
icebp
fs
in
call
shl
neg
cwde
push
dec
repz
rcr
lods
pop
sub
jg
lods
or
cmp
clc
and
or
pop
push
mov
cmc
fidivr
fcmovb
shl
shr
or
jmp
push
jge
adc
pop
mov
jl
mov
jg
jg
dec
loope
int
test
sbb
mov
mov
loop
enter
pusha
cmp
pop
push
xchg
and
sbb
das
addr16
jo
imul
shr
adc
arpl
xor
cld
sti
mov
push
pop
mov
add
mov
data16
ja
cmp
lock
push
dec
adc
xchg
cli
push
out
xchg
and
adc
sbb
mov
and
ret
xchg
daa
(bad)
cmc
jae
aaa
add
add
mov
cmps
aam
and
dec
cmp
je
xor
fimul
or
or
jge
jge
sbb
std
dec
outs
mov
data16
cmp
test
jae
pop
and
movs
xchg
lahf
inc
xchg
adc
mov
xor
test
mov
fs
imul
(bad)
mov
xchg
and
sti
lea
test
add
fidiv
movs
test
jno
mov
in
repz
data16
adc
adc
mov
sbb
cmp
jne
div
xor
jl
lods
sub
adc
pop
jecxz
inc
jno
or
add
repz
or
cdq
inc
inc
push
test
popa
rol
repz
test
xlat
xchg
cld
adc
pop
ret
mov
xor
sub
scas
or
int3
imul
jno
cmp
mov
scas
stc
loope
jno
das
data16
dec
mov
into
xlat
cmp
xor
sahf
cmps
(bad)
dec
cli
jge
aas
sbb
and
or
pushf
mov
or
xchg
xchg
add
adc
lea
hlt
ins
bound
or
(bad)
es
and
adc
cmp
mov
jp
fsub
inc
add
push
lds
mov
ins
out
sahf
sysret
adc
scas
mov
lahf
sub
je
leave
ins
std
add
add
and
test
aaa
lds
jg
outs
jmp
jmp
pop
mov
dec
mov
jb
std
test
test
inc
cmp
repnz
sbb
out
inc
cwde
hlt
xor
scas
inc
(bad)
adc
add
push
or
and
call
pushf
cdq
cmp
adc
adc
stos
mov
inc
sub
mov
push
lahf
rcr
sar
shr
(bad)
mov
push
(bad)
retf
ins
pop
sbb
push
bound
mov
mov
dec
nop
mov
fist
bound
(bad)
dec
ss
or
or
xchg
nop
mul
out
or
jnp
xor
sbb
mov
loop
push
cmp
sub
inc
mov
scas
jge
nop
pop
mov
inc
jmp
xlat
mov
jae
cmps
sub
in
push
test
repnz
(bad)
cmp
(bad)
jb
jo
enter
inc
xchg
or
jmp
aas
push
ins
or
xor
mov
scas
cld
push
cdq
aas
and
lods
inc
push
rol
sti
(bad)
inc
pop
pop
pop
out
mov
inc
les
xchg
retf
ins
dec
pop
jns
cmp
push
mov
mov
jecxz
add
add
jnp
jmp
out
inc
out
inc
es
xchg
out
mov
dec
ret
pop
in
mov
xor
call
jnp
in
add
jmp
sub
retf
mov
fsub
repz
movs
cs
xchg
mov
inc
mov
mov
pop
sub
daa
pusha
xchg
scas
mov
pop
stc
test
sub
(bad)
xor
loopne
inc
aaa
add
pop
mov
in
aaa
call
repz
adc
loopne
aas
sbb
xor
lds
mov
enter
or
push
ds
retf
mov
dec
mov
stos
adc
jmp
cmps
mov
(bad)
sub
mov
jno
mov
cs
popa
jecxz
jae
cmp
bound
adc
gs
sub
(bad)
iret
sti
push
das
jne
xchg
mov
xchg
es
iret
fisubr
ds
pop
and
add
imul
mov
lea
mov
and
call
push
xchg
adc
outs
xchg
arpl
(bad)
sbb
xor
jecxz
inc
ret
ret
mov
(bad)
jmp
cmp
mov
add
mov
test
int
sti
cmp
call
(bad)
(bad)
(bad)
jmp
adc
or
cmps
in
inc
dec
(bad)
lea
mov
push
jo
jns
adc
inc
stos
iret
idiv
push
enter
mov
jmp
lock
mov
ss
mov
and
fcom
sbb
out
sub
inc
mov
add
inc
xchg
lea
push
psubsb
stos
call
or
(bad)
jecxz
outs
sub
jmp
fdivrp
and
or
sub
pusha
mov
cmp
into
xchg
sub
ja
sub
scas
hlt
dec
or
shl
ficom
push
sti
inc
mov
pop
xor
dec
xchg
lock
and
adc
inc
dec
aad
dec
mov
int
cli
test
jno
jno
pop
popf
sbb
inc
lea
imul
mov
sbb
ins
mov
and
xor
push
adc
mov
sub
jmp
inc
lahf
addr16
sbb
les
repz
(bad)
cwde
push
and
jmp
add
test
jb
into
cld
dec
or
sub
sti
pop
jecxz
mov
setnp
popa
call
mov
or
jae
sbb
mov
mov
mov
movs
adc
sbb
and
jnp
push
push
imul
inc
jb
mov
xchg
mov
mov
cmps
or
ret
dec
xlat
sbb
xchg
and
cmp
cs
xchg
pop
and
stc
pop
push
sub
xchg
arpl
mov
xor
movs
jmp
xchg
out
push
leave
mov
push
loopne
inc
adc
retf
cmp
out
int
mov
mov
lods
fsubr
inc
mov
xchg
fwait
out
das
dec
(bad)
jno
loop
es
lahf
icebp
push
in
ds
daa
in
int3
xor
cld
retf
mov
xchg
pop
mov
ret
push
retf
test
cmp
adc
fs
mov
pop
sub
dec
outs
cmp
lock
mov
sbb
push
imul
aad
inc
punpckhwd
or
add
dec
scas
aad
adc
jnp
cmps
and
ffreep
pop
imul
jle
dec
xchg
inc
xchg
sar
mov
jae
dec
in
ror
add
mov
inc
scas
neg
in
ret
and
and
cdq
or
jb
or
cmp
sbb
ss
outs
shl
enter
rol
sub
mov
mov
pop
pop
cwde
leave
push
repz
daa
aas
mov
aam
push
mov
retf
shr
daa
fistp
call
jno
pop
inc
aam
pop
push
jmp
test
fwait
push
adc
cs
ds
cli
inc
mov
movs
cmp
cmps
adc
lea
mov
shl
adc
push
and
mov
pop
xchg
or
xor
test
loop
adc
out
shl
popf
dec
mov
mov
inc
pop
adc
call
xor
dec
jae
fsubr
jp
sbb
lods
call
ja
mov
mov
add
push
push
test
into
mov
jo
inc
push
inc
cmps
push
test
sub
test
push
div
xchg
jb
shl
dec
mov
dec
sub
cmp
scas
and
inc
push
dec
arpl
out
mov
js
mov
mov
mov
fnsave
icebp
jb
push
rol
neg
dec
dec
cwde
dec
or
mov
fwait
mov
fist
mov
rol
retf
je
lea
sti
sbb
int
xchg
fs
test
ret
fwait
sub
mov
sub
rcr
ror
lea
add
scas
enter
(bad)
adc
mov
or
xchg
mov
sbb
jmp
shl
jp
or
sbb
inc
outs
aas
mov
test
adc
loope
nop
cwde
fistp
test
mov
fsub
mov
push
or
pop
mov
cmps
scas
and
sub
mov
adc
jno
and
mov
gs
call
(bad)
rcr
les
sti
sbb
popf
pop
mov
sbb
cmp
call
and
dec
or
fisub
cmp
icebp
xlat
cmp
std
mov
nop
jecxz
mov
jg
inc
mov
inc
ss
xor
fld
mov
jmp
fsubr
or
sbb
inc
repz
leave
push
sti
stos
xor
retf
gs
fbld
cmps
xchg
xchg
pop
jecxz
xchg
xor
in
js
mov
inc
adc
imul
aam
or
loope
inc
je
shl
test
out
and
lods
(bad)
test
inc
fisttp
mov
mov
(bad)
call
lahf
(bad)
ror
push
in
mov
mov
sbb
imul
mov
test
sub
push
dec
pusha
xchg
and
int3
jge
aaa
test
xor
pop
int3
stos
cmc
cmp
or
scas
add
xor
push
jb
sbb
push
outs
xchg
(bad)
xchg
mov
xchg
aad
inc
or
sbb
lods
xchg
retf
and
and
inc
mov
icebp
cli
lock
push
aad
adc
xor
sub
inc
mov
dec
fisttp
jnp
cmp
xchg
mov
mov
add
rol
cmp
cmc
push
ror
es
push
push
jmp
fadd
cmc
add
xor
les
ja
sub
(bad)
enter
sub
pop
cmp
and
push
popf
mov
sub
inc
mov
pop
cmp
ror
(bad)
mov
rcl
test
sti
rol
add
out
rcl
lds
and
adc
ins
and
adc
icebp
and
jbe
cmps
lods
(bad)
jbe
mov
into
sub
cmc
and
out
jb
int
lock
and
popf
imul
scas
rcl
xchg
hlt
mov
int3
or
movs
ja
sbb
in
pop
or
dec
pop
lea
test
or
lods
in
mov
pop
neg
add
jnp
pusha
(bad)
sub
imul
add
repz
or
sti
ins
mov
hlt
mov
test
outs
mov
pop
xor
clc
mov
retf
fcom
mov
aad
jne
pop
sbb
ficom
in
(bad)
sahf
test
clc
dec
stos
fnstenv
jg
nop
pop
mov
jmp
lods
add
popa
and
add
xchg
shl
pop
xchg
pop
add
mov
sar
movs
push
test
lahf
pop
or
or
es
push
lock
ss
or
jge
dec
dec
mov
test
rcr
adc
sbb
scas
fcmovbe
inc
imul
imul
(bad)
jmp
or
adc
inc
std
inc
mov
clc
push
inc
ret
pushw
arpl
call
xchg
div
inc
std
cmp
clc
and
jnp
dec
lock
mov
rcr
mov
daa
xchg
jns
sbb
test
neg
in
(bad)
cli
ja
cmps
mov
jmp
add
push
jecxz
repnz
xchg
fst
(bad)
mov
inc
movs
or
dec
push
aam
sub
repnz
test
cmp
enter
sub
add
(bad)
fadd
cmc
sub
test
in
ret
neg
jle
aad
icebp
cmp
mov
(bad)
into
pop
pop
pop
nop
lea
aam
sub
cmp
mov
aaa
fmul
clc
out
aad
mov
(bad)
cmc
daa
sbb
and
dec
fcomp
fidiv
add
pop
es
add
mov
sbb
mov
and
jno
mov
add
jne
adc
mov
sub
sub
mov
pop
rcr
inc
cmp
pop
or
mov
push
adc
pop
cmp
adc
(bad)
shl
mov
ins
sub
xor
push
sbb
cmp
add
cmp
mov
out
mov
mov
sub
clc
loop
jbe
(bad)
mov
mov
xchg
xchg
push
jg
mov
push
and
pop
sbb
push
mov
popf
js
fstp
xchg
and
dec
sub
daa
retf
test
call
xchg
test
call
lds
mov
out
cmp
cmps
jb
jp
inc
add
out
mov
xor
dec
inc
push
mov
repz
jg
(bad)
movs
add
test
lods
inc
stc
adc
cdq
shr
ficom
and
mov
adc
mov
inc
daa
test
cmps
push
push
and
out
(bad)
stc
cs
jns
jge
adc
mov
mov
hlt
scas
push
in
mov
test
mov
mov
push
nop
(bad)
clc
mov
(bad)
dec
or
or
icebp
add
popf
add
or
add
int
scas
sbb
adc
sbb
mov
add
mov
sbb
fsubr
std
fnstsw
cdq
popf
xchg
xchg
sahf
dec
mov
add
fdivr
adc
push
cmc
imul
and
dec
mov
sar
jmp
sub
fsub
ss
dec
ror
imul
je
cmps
dec
jo
inc
cmp
aam
ja
sbb
jecxz
ins
pop
add
lock
inc
xchg
outs
add
(bad)
add
fwait
xor
sub
pop
pop
xchg
pop
aam
xchg
call
sub
enter
or
(bad)
adc
push
leave
fldenv
xchg
scas
jmp
cmp
pop
cmp
mov
mov
jae
repz
ja
sub
test
ins
mov
mov
fcmovnbe
push
icebp
cmp
hlt
enter
sbb
int3
xlat
mov
fld
bswap
sbb
jecxz
xchg
mov
outs
aas
cmps
jmp
or
mov
or
es
cwde
popf
fcomp
icebp
pop
mov
scas
outs
or
dec
shr
popa
adc
mov
scas
call
jae
inc
lea
sbb
add
fnsave
push
xor
jge
mov
push
cmc
cmc
dec
xchg
xchg
ror
inc
xor
pop
jge
or
shr
call
cwde
pushf
gs
fcomp
sbb
jb
aas
pop
jne
mov
shl
push
jns
gs
mov
sub
sub
and
pop
sbb
push
mov
sar
mov
lds
(bad)
(bad)
loopne
jb
mov
sbb
out
or
(bad)
mov
ret
mov
jmp
aad
lea
add
dec
retf
in
in
arpl
mov
adc
mov
mov
xor
retf
iret
push
fucom
ss
(bad)
(bad)
fistp
popa
xchg
loope
jnp
in
and
sbb
movs
pop
and
push
dec
popf
ror
rep
jmp
pop
and
mov
dec
cs
xor
clc
lock
and
bound
sbb
xor
dec
xor
jno
xchg
xchg
shr
(bad)
adc
mov
movs
sbb
cmp
and
inc
mov
ror
(bad)
(bad)
xchg
mov
fwait
iret
sub
mov
dec
cmp
xchg
leave
arpl
pop
stos
push
mov
out
fist
cmp
stos
stc
ud1
push
(bad)
xchg
ss
pop
or
push
mov
push
(bad)
dec
fld
pusha
cmps
neg
push
aam
into
mov
call
adc
dec
gs
dec
push
cmc
lods
outs
stos
aad
and
je
dec
test
mov
data16
ret
xchg
cwde
bound
xor
inc
cmp
leave
(bad)
sti
fidiv
push
xor
fs
ja
xor
call
jns
mov
and
cmp
pop
jo
cmp
call
enter
xor
pop
ret
cmps
into
pop
pop
les
outs
std
inc
xor
pop
arpl
loop
push
fucomp
push
inc
ret
scas
and
scas
adc
dec
retf
pop
add
std
jbe
icebp
xchg
ins
stc
fist
mov
sbb
retf
ret
fmul
test
nop
inc
mov
(bad)
test
and
outs
push
jb
jmp
adc
xchg
fcmovnu
jmp
xchg
(bad)
lods
popa
cwde
fs
jne
test
ja
or
sahf
mov
loopne
fsub
cmp
leave
mov
ror
xchg
shr
outs
jl
or
loope
xor
pop
cmps
adc
punpckhdq
push
cs
inc
mov
inc
or
add
stos
jge
mov
add
xor
sar
(bad)
pop
ret
pop
sub
imul
adc
jmp
dec
das
pop
pushf
cmc
in
(bad)
lods
mov
pushf
inc
dec
jmp
cmc
sub
jle
(bad)
cmc
xchg
std
je
xchg
mov
lds
arpl
push
mov
cmp
lock
js
lods
mov
mov
and
fstp
nop
add
icebp
mov
loopne
mov
imul
mov
xor
or
xor
sbb
or
movs
push
cdq
ret
dec
imul
jmp
loopne
mov
dec
dec
out
sub
mov
ja
push
jmp
scas
jmp
lock
mov
sub
shl
xchg
inc
xor
jo
add
mov
xlat
fwait
xchg
sbb
jl
jmp
outs
(bad)
or
data16
mov
mov
cmp
scas
icebp
mov
(bad)
js
cmp
jno
sub
push
outs
xchg
popa
cmp
scas
mov
(bad)
sbb
sbb
fwait
retf
(bad)
cdq
repnz
rcl
jnp
into
outs
addr16
jne
lock
ins
arpl
mov
mov
test
or
movs
inc
push
pushf
or
icebp
out
inc
rcl
or
dec
xchg
push
inc
add
mov
push
cld
mov
push
cdq
pop
outs
sub
mov
xchg
fdivr
sub
mov
(bad)
fsub
icebp
jecxz
sub
ins
pop
jnp
cmp
shl
xor
push
jo
push
add
xchg
out
in
jg
icebp
fsub
inc
fxch
jo
push
mov
push
retf
add
xchg
sub
mov
jnp
add
ret
push
mov
imul
retf
cmp
lahf
pop
inc
cmc
mov
mov
idiv
and
inc
jg
pop
ins
or
popf
repz
dec
into
push
iret
popf
repnz
mov
test
ds
fcomip
leave
cli
daa
push
cwde
xchg
cmp
xchg
and
cmp
push
out
jecxz
sub
call
fs
into
test
sub
icebp
or
out
outs
xlat
jmp
inc
and
leave
mov
call
ds
jb
push
mov
cmps
dec
mov
mov
push
arpl
cmp
icebp
mov
shl
sub
jo
mov
adc
aam
sub
adc
lods
mov
and
inc
mov
cmp
add
jmp
xor
jne
cld
movmskps
jno
xor
mov
outs
add
mov
test
push
int
dec
int
mov
jmp
cmp
mov
imul
sbb
frstor
inc
xchg
in
fnsave
mov
cli
jnp
and
sbb
jnp
and
in
shl
mov
xor
push
call
loope
xchg
outs
ja
pop
jnp
ret
and
push
cs
push
jmp
sbb
adc
mov
push
add
xor
and
pop
push
pop
sub
fnstsw
shl
cmps
inc
bswap
sub
pushf
ret
popa
push
je
mov
mov
adc
xor
sub
sbb
cwde
mov
and
sub
or
outs
xchg
pushf
xchg
mov
out
dec
xlat
sub
inc
aas
jg
mov
mov
push
push
jle
jmp
adc
jp
les
xchg
loop
add
cld
xchg
repz
mov
xchg
dec
into
fbstp
sar
jno
leave
or
pop
ret
ds
idiv
lea
test
jb
mov
xor
movs
mov
stos
fisubr
xor
fild
jno
std
push
push
jo
dec
aad
das
enter
in
clc
lea
stc
in
cmc
loop
sbb
ret
adc
cs
xchg
ficomp
es
lock
cli
push
sub
out
ds
inc
sbb
std
mov
pop
aas
adc
gs
inc
adc
aas
dec
shufps
mov
xchg
pushf
into
enter
movs
pop
inc
loopne
in
xor
adc
sahf
xor
in
rol
mov
xchg
dec
(bad)
mov
xchg
out
aad
fidivr
jnp
mov
sbb
stos
mov
sub
sub
and
cmp
xchg
mov
lods
ins
adc
mov
jne
out
and
in
xchg
popf
cmps
lock
in
mov
adc
push
es
stc
ins
cmp
fimul
popf
cli
inc
and
cmp
outs
cwde
popa
test
test
adc
dec
ficomp
sti
add
fidiv
rcl
mov
mov
fldcw
adc
sub
call
mov
add
pop
and
lea
xchg
pop
add
jne
rol
lock
pop
jp
in
repz
pop
sahf
enter
xor
shrd
jb
pusha
and
add
adc
xchg
pop
call
xor
add
nop
xchg
lahf
in
daa
adc
push
xor
or
mov
mov
jmp
adc
sub
dec
fisub
sub
pop
into
fucomip
jp
adc
movs
sub
mov
jl
outs
and
adc
stos
test
and
neg
lea
popf
push
shr
cmc
adc
jo
loop
inc
fidiv
mov
or
pop
xchg
push
pop
jnp
mov
test
xchg
xor
sbb
or
(bad)
cmc
sbb
stos
je
cmp
arpl
or
stc
or
push
out
popa
enter
lods
mov
xlat
jno
sub
inc
or
mov
jnp
(bad)
ins
push
std
in
test
jmp
aad
jg
movs
stc
push
jb
daa
ins
les
jge
sbb
and
addr16
push
neg
aad
repnz
pop
shr
pop
lea
sub
pop
ror
ss
aas
or
add
lock
inc
mov
ins
sahf
popa
test
mov
and
xchg
in
(bad)
jmp
mov
jns
retf
dec
inc
lock
jecxz
xor
sti
out
sahf
jle
or
into
pushf
call
adc
dec
(bad)
sbb
ja
add
popf
stos
mov
mov
ss
cmc
cmc
pop
add
mov
xor
jmp
or
xchg
loop
je
lea
inc
jp
mov
std
inc
out
cmp
pop
jecxz
cld
outs
in
jmp
shl
xchg
mov
jne
movs
xchg
add
jge
sbb
(bad)
leave
outs
push
add
(bad)
jg
aad
jge
mov
and
ins
cmc
js
adc
loop
cmp
cmc
mov
jmp
test
xchg
rol
call
cmps
jecxz
(bad)
cmp
jp
lock
push
pop
push
dec
push
jnp
enter
sbb
push
pushf
add
aam
add
repnz
pcmpeqd
push
sub
jg
cmps
in
ja
dec
movs
xchg
mov
mov
cdq
loopne
(bad)
adc
sbb
pop
ficom
ja
fsub
jl
or
mov
data16
dec
inc
sub
jmp
out
cwde
mov
fwait
fs
jp
fwait
jbe
into
popa
sbb
fistp
pop
mov
mov
mov
jmp
push
loope
call
repnz
push
and
sbb
mov
xlat
pop
and
adc
xlat
inc
inc
retf
ins
xor
mov
mov
pop
imul
xchg
(bad)
adc
push
scas
jl
(bad)
adc
in
and
js
(bad)
aam
xchg
daa
mov
hlt
lahf
(bad)
jge
imul
add
imul
ja
ss
push
pop
mov
cmp
fwait
jo
(bad)
jbe
dec
pop
rcr
sahf
add
mov
xchg
mov
mov
out
mov
dec
mov
sub
mov
xchg
xor
arpl
fnstsw
mov
in
sti
push
pop
stc
stos
loope
mov
ds
jge
(bad)
cmc
push
sbb
outs
jmp
adc
pop
loopne
mov
repz
fst
rcl
cmp
test
retf
jle
mov
dec
loop
test
scas
xchg
sar
cmp
adc
cs
inc
sti
jl
rcr
cmp
and
mov
jnp
mov
pushf
add
sub
push
push
jae
add
lock
mul
or
out
lahf
push
imul
mov
dec
sbb
(bad)
out
les
lods
addr16
pop
pusha
aaa
fidivr
add
push
repnz
icebp
inc
pop
jo
push
icebp
pop
xchg
cmp
(bad)
fwait
mov
pop
jle
mov
nop
lea
rol
sbb
into
aaa
arpl
jl
mov
sahf
jp
fsub
in
test
(bad)
cmp
out
daa
daa
aaa
repz
in
imul
xor
sub
pusha
pop
(bad)
xor
xchg
test
sub
imul
push
push
stos
or
sbb
push
mov
jg
add
hlt
xchg
and
test
(bad)
fstp
sub
mov
daa
xchg
sar
xchg
shl
push
push
scas
cmp
mov
cmp
or
xchg
inc
xor
outs
mov
test
dec
nop
in
outs
sub
sbb
sbb
mov
and
fwait
jp
jge
push
call
call
aad
popa
movs
mov
fimul
movaps
in
call
push
push
(bad)
dec
cmp
popf
mov
push
cmps
cmp
aad
popf
adc
pusha
mov
or
pop
dec
leave
xchg
test
sbb
mov
sbb
(bad)
arpl
rcl
idiv
(bad)
jmp
inc
mov
push
xchg
nop
pop
enter
in
xchg
retf
dec
and
add
or
nop
enter
inc
or
cs
clc
adc
jb
cdq
adc
stos
jb
scas
pop
rol
icebp
into
iret
test
fwait
into
cmps
pusha
jge
imul
xchg
dec
lea
call
clc
test
cmp
mov
xor
sub
(bad)
(bad)
cwde
cmp
(bad)
loope
cmp
xchg
arpl
xchg
ret
call
aad
xend
ins
popf
mov
test
sti
mov
jmp
sbb
jle
cwde
bsf
pop
pop
dec
(bad)
push
mov
jbe
cmp
mov
or
or
sub
into
cmc
add
(bad)
cmc
out
dec
(bad)
cmps
and
pushf
and
cld
stos
pop
pop
outs
cmps
test
outs
sbb
js
icebp
or
push
movs
mov
jp
loop
outs
ja
jmp
gs
inc
sbb
add
mov
daa
retf
inc
xor
pop
jecxz
hlt
mov
mul
sbb
std
push
arpl
add
repnz
pop
fldcw
push
jns
test
mov
mov
fst
lods
sbb
daa
or
js
cld
pushf
and
sub
sub
lahf
or
xor
scas
sti
pusha
call
rol
jge
xchg
aam
pop
fiadd
(bad)
in
lahf
push
cmp
mov
push
cmps
jle
xor
ss
daa
mov
movs
dec
int
xchg
icebp
jmp
jge
aad
adc
les
mov
aas
sbb
and
mov
inc
sbb
xchg
push
fst
xchg
lea
add
adc
cmp
cmc
dec
fmul
arpl
call
mov
and
mov
push
daa
sub
ja
sub
pop
mov
cmps
add
(bad)
adc
push
inc
sub
dec
pop
jmp
fbstp
popf
or
fnstcw
xor
add
lods
mov
mul
enter
sahf
xchg
(bad)
cmp
jne
cmp
call
test
scas
push
mov
in
mov
pop
retf
movs
mov
push
pop
and
mov
movs
dec
cmp
stos
lods
cmp
out
outs
int3
cmp
sti
rol
dec
mov
aaa
sbb
imul
push
sbb
mov
(bad)
in
pushf
xchg
adc
jecxz
rol
add
sbb
mov
daa
mov
sahf
neg
movs
cwde
cmp
lea
xchg
lock
mov
pusha
aad
outs
add
sbb
(bad)
mov
out
sub
mov
sbb
loop
fwait
cs
mov
mov
imul
jmp
cld
inc
ja
sbb
mov
sub
and
xlat
inc
aas
and
in
pop
sub
out
aas
sbb
test
jo
pushf
jl
cli
jmp
sub
mov
iret
popa
push
inc
fcos
or
inc
cmp
xchg
inc
sbb
pop
push
mov
and
ja
adc
mov
mov
repz
sbb
in
mov
les
cmp
sub
stc
add
or
sbb
add
sar
xchg
es
les
je
test
shr
hlt
dec
sub
ficom
xor
cdq
cmp
ja
ret
test
shl
sub
mov
jg
(bad)
or
nop
mov
scas
xchg
jl
adc
mov
js
mov
mov
ins
and
enter
and
dec
or
std
out
jno
call
pop
cmp
fsub
pop
fisub
int
xor
jns
jne
mov
in
jae
sar
lds
es
mov
push
mov
ffreep
pop
fucomip
mov
cmps
push
push
retf
in
ret
add
(bad)
pop
into
fdivr
cmp
pop
int
sbb
sbb
fsubr
and
inc
leave
fwait
xor
ror
mov
into
xchg
xor
or
xor
cmc
cdq
jbe
and
jo
sub
stos
push
add
xor
and
xor
bound
xor
popa
fs
es
jecxz
cmps
out
sub
jae
dec
sbb
mov
jmp
js
push
cmc
scas
xchg
(bad)
inc
imul
jo
mov
(bad)
es
cmp
cmps
mov
dec
add
mov
fdivr
push
xchg
inc
clc
daa
push
outs
sbb
adc
mov
into
add
jp
mov
push
mov
sbb
repz
jno
cs
scas
push
pop
jno
push
test
mov
movs
bound
enter
leave
cmp
clc
movs
(bad)
je
dec
aam
aas
jno
jns
cli
std
xor
std
ficomp
std
push
in
repz
cs
hlt
in
mov
or
shl
data16
fisttp
cli
sbb
stos
sub
dec
push
retf
jns
sbb
pop
adc
cmp
icebp
call
cmp
sub
sub
push
cmp
outs
fidiv
adc
pop
sub
les
leave
repz
jns
jg
int3
aam
and
adc
add
gs
mov
sbb
hlt
inc
sub
jle
ja
xor
push
daa
or
loope
adc
int
pop
adc
mov
cwde
retf
mov
pushf
jns
or
movs
mov
push
pop
test
add
jl
imul
icebp
cmps
cmp
test
rcr
retf
shr
cmp
sub
pop
cmp
mov
cmps
dec
push
xchg
es
test
mov
imul
inc
jg
jns
enter
popa
inc
sub
dec
sahf
push
cmp
jae
push
ins
sahf
jge
mov
adc
cmp
mov
enter
jge
mov
cdq
aam
je
icebp
mov
and
dec
dec
mov
(bad)
lahf
lea
sahf
out
mov
cmp
into
lods
cmp
out
and
and
xor
pop
imul
(bad)
leave
stos
and
mov
(bad)
mov
call
cmp
cmps
mov
xchg
mov
cmp
sahf
aaa
mov
call
push
(bad)
mov
or
ins
sub
stos
cmp
sbb
push
xchg
imul
adc
jle
add
mov
aaa
inc
inc
jmp
in
mov
xor
mov
ret
push
pop
xchg
popf
loop
push
jno
jne
imul
pop
das
cmps
(bad)
clc
mov
in
outs
pop
jno
pop
ins
push
inc
es
dec
push
mov
jo
xchg
popa
fldcw
loope
shl
aas
push
push
inc
cmp
or
lock
jecxz
out
dec
cmp
hlt
test
movs
adc
cmp
jae
xchg
xor
xchg
std
dec
jle
cwde
or
push
mov
fisub
adc
lds
test
lds
dec
into
pop
outs
sub
(bad)
test
arpl
nop
dec
and
das
jmp
dec
mov
out
and
cmp
mov
pop
stos
mov
or
sbb
clts
cmp
cwde
inc
outs
sub
pop
cld
outs
clc
out
inc
xor
dec
cdq
inc
adc
call
fs
cmp
arpl
mov
and
lods
cdq
imul
jg
add
lea
mov
inc
mov
mov
addr16
repnz
outs
mov
lods
adc
fadd
cmp
jmp
lahf
mov
xor
ss
lds
int
dec
dec
and
and
int
cdq
jle
dec
sub
sar
sub
jle
adc
pop
and
and
dec
mov
scas
mov
loopne
movs
xchg
xor
xor
mov
pop
fdiv
add
cmp
push
jl
or
test
mov
push
sub
or
xlat
or
dec
icebp
mov
mov
in
mov
mov
dec
xchg
or
xor
push
sbb
sub
int
adc
xchg
pop
div
mov
mov
aad
sub
inc
dec
or
push
jns
xchg
push
sub
dec
jae
dec
test
lds
adc
jbe
or
or
pop
sbb
addr16
inc
xchg
add
mov
cmp
push
test
or
movs
jl
pop
shl
inc
adc
imul
mov
cmp
pop
call
mov
cwde
or
in
jmp
inc
and
push
mov
icebp
pop
dec
xchg
and
outs
(bad)
(bad)
push
fld
cld
pop
cmp
cmp
sbb
imul
xor
cmps
lods
dec
mov
test
nop
ds
fidiv
or
in
or
rcl
xlat
inc
dec
and
lahf
ins
or
sub
dec
repnz
jnp
outs
ja
xchg
jp
test
mov
imul
jo
aad
xlat
scas
out
mov
test
mov
dec
mov
mov
sbb
inc
xchg
in
push
sbb
(bad)
mov
push
and
xor
cmp
int
xchg
mov
push
shl
dec
inc
lods
scas
jbe
jbe
cmp
mov
cli
cs
ret
hlt
jmp
push
in
fild
xor
lea
add
retf
lock
in
push
shl
xor
repnz
pop
cmp
cwde
repnz
cmps
or
and
hlt
gs
dec
test
loope
push
mov
add
movs
aam
popf
dec
(bad)
cli
sbb
in
pop
pusha
repnz
pop
dec
pop
mov
fldcw
into
mov
div
dec
loopne
sub
repnz
mov
xor
popa
xchg
mov
scas
pop
add
inc
sahf
adc
add
inc
imul
scas
mov
aas
(bad)
jg
push
in
dec
mov
pop
mov
ds
push
clc
jecxz
js
sub
lock
or
mov
call
sbb
mov
push
hlt
cmps
into
push
and
jmp
mov
push
or
js
dec
imul
jecxz
outs
xlat
jecxz
push
inc
outs
dec
and
ficomp
xchg
and
lock
sti
and
repz
js
fdiv
xchg
jno
pop
sbb
test
and
cmp
cmps
mov
pop
jb
(bad)
mov
mov
mov
rcr
jbe
retf
(bad)
rcr
call
das
or
cmps
push
arpl
mov
push
enter
dec
mov
sbb
xchg
jmp
mov
mov
inc
int
or
and
call
mov
cwde
jnp
shl
out
ror
or
ret
int
adc
(bad)
clc
jbe
sbb
ins
fistp
inc
lock
into
jecxz
les
out
sbb
mov
mov
push
dec
jne
mov
adc
inc
popf
inc
cmps
push
push
xchg
(bad)
fistp
cwde
push
sub
dec
rcl
test
pop
jmp
cmp
aas
movhps
iret
cmps
pop
or
call
sbb
dec
xor
js
lods
(bad)
cmp
xchg
mov
cmps
cmps
adc
jnp
cs
and
inc
sub
cwde
cmp
(bad)
mov
xchg
cdq
mov
cmp
sub
out
loopne
out
repz
ud2
dec
sti
ja
push
push
adc
div
inc
inc
add
rcr
aam
daa
xchg
arpl
pop
and
jbe
cmp
jmp
iret
mov
mov
and
push
and
or
xchg
push
es
xchg
fxch
shl
mov
cmp
fistp
(bad)
fsubr
shl
icebp
sahf
loope
ss
sbb
imul
mov
enter
jecxz
pop
and
mov
or
pop
inc
and
js
and
dec
mov
outs
sub
jae
sbb
mov
js
retf
pop
and
jl
lahf
xchg
not
enter
int
pop
into
jno
cli
dec
and
pop
add
cmovne
lea
sbb
and
mov
dec
mov
lock
mov
js
mov
bound
cmp
sbb
jle
aaa
xor
loope
jg
xor
popf
mov
rcl
lods
pop
xor
jne
adc
ins
pop
sub
sbb
icebp
hlt
mov
leave
inc
int
aaa
add
xchg
sti
shr
rcr
inc
test
call
add
inc
xchg
dec
xchg
sub
xlat
pop
test
ficomp
fidiv
jg
inc
leave
and
sub
pop
mov
retf
xor
adc
pop
repz
into
xchg
push
out
outs
pusha
hlt
xor
loope
clc
loopne
xchg
shl
add
mov
push
ror
jne
arpl
out
add
xor
sahf
push
mov
fdivr
cwde
adc
sub
test
cs
(bad)
mov
jae
js
(bad)
mov
sbb
dec
xchg
xor
jnp
pushf
push
jge
mov
jmp
sub
les
pop
loop
jmp
jmp
pop
or
push
jmp
cmova
js
mov
jns
xor
out
cmp
cmps
stos
jnp
mov
stos
pop
shl
and
sti
outs
xor
jnp
adc
mov
ins
pop
outs
mov
ss
xor
ss
adc
cmp
aad
adc
push
gs
sbb
mov
xchg
mov
mov
retf
jb
jg
jmp
cmps
cdq
xchg
out
mov
xor
and
pusha
ins
xchg
cwde
je
test
adc
out
dec
mov
out
shl
daa
ins
aad
or
(bad)
imul
add
or
fld
mov
pop
lahf
pop
push
add
mov
ss
add
not
add
or
dec
mov
inc
push
adc
std
xor
cmp
loopne
cmc
dec
push
lock
pop
call
push
xor
lahf
js
shl
iret
jne
pop
lock
and
push
jb
mov
xchg
inc
adc
scas
mov
pop
add
mov
nop
outs
icebp
jno
push
adc
loopne
(bad)
push
push
dec
adc
mov
push
int3
test
pop
sbb
popa
adc
jmp
fs
mov
scas
cmp
in
fnstsw
fadd
jmp
adc
jnp
xchg
leave
outs
mov
ficomp
(bad)
daa
xchg
test
cmp
pusha
sbb
jns
jbe
(bad)
xchg
pop
in
mov
jge
sar
dec
fild
inc
loop
adc
xchg
das
push
mov
(bad)
jns
cmp
out
ret
pop
fisttp
sub
jecxz
push
imul
dec
les
in
in
adc
sbb
cmp
jle
cmc
xor
sbb
call
aaa
mov
call
test
enter
adc
mov
adc
xor
test
or
adc
addr16
pop
(bad)
dec
out
shl
cmp
cdq
sbb
stc
and
mov
pop
movs
adc
iret
add
fcom
mov
scas
in
sub
loopne
inc
retf
stos
sbb
inc
mov
idiv
bound
push
mov
js
out
xor
in
sahf
mov
mov
adc
pop
test
adc
mov
test
icebp
ins
and
xor
pop
inc
pop
or
pop
jmp
cmp
sub
cli
inc
cmps
xchg
sub
cdq
adc
xchg
pop
lahf
lods
or
fwait
jmp
popf
rcr
sbb
xor
xor
cmp
xlat
pop
test
imul
je
cmp
or
pop
cmp
push
inc
aam
jmp
in
movs
out
and
mov
push
fimul
lods
pop
movs
sub
retf
sub
push
mov
cmp
jns
loope
mov
mov
imul
mov
pop
ds
or
add
push
mov
mov
mov
loope
sub
and
daa
dec
aad
aas
ja
dec
mul
jge
mov
leave
cdq
imul
mov
dec
(bad)
and
xchg
mov
push
mov
xchg
push
hlt
xchg
loope
test
pop
std
mov
or
retf
xchg
ror
(bad)
(bad)
xchg
mov
mov
repnz
sub
pop
inc
lods
je
pop
jnp
retf
jle
div
xor
pushf
xor
out
mov
dec
mov
repnz
cld
jecxz
repnz
push
xchg
int3
mov
inc
(bad)
fwait
mov
mov
inc
sbb
in
(bad)
push
fbld
(bad)
and
outs
enter
xor
das
mov
js
xchg
mov
add
push
pop
push
aas
inc
or
rcr
xchg
or
cdq
xor
(bad)
sbb
dec
jg
and
aas
jae
popf
(bad)
push
mov
pop
cwde
adc
popf
cdq
or
push
pop
adc
dec
sbb
mov
mov
call
xchg
iret
aam
jge
cdq
jns
mov
sub
mov
mov
shl
or
out
hlt
jmp
or
pop
fwait
xchg
ja
stos
mov
adc
ins
mov
or
pop
sub
jb
xchg
mov
stos
daa
push
std
pop
push
fidivr
sub
lahf
sbb
dec
mov
pop
into
lahf
push
pop
adc
cmp
xor
fild
pop
lock
ret
ins
leave
push
jne
repnz
jp
xor
push
dec
jne
scas
in
xor
movs
xchg
stos
in
ror
shr
jne
mov
xchg
sub
mov
jle
jbe
sbb
xor
push
mov
adc
sbb
cmp
jmp
(bad)
lea
push
xor
test
jno
(bad)
repz
inc
mov
cmp
out
or
ins
sub
cwde
mov
mov
shr
loopne
fild
in
(bad)
test
jae
xor
mov
test
mov
mov
add
xor
je
inc
outs
jl
mov
mov
xchg
and
inc
pop
jmp
cdq
sbb
cmp
scas
stos
inc
gs
ins
cmp
inc
xchg
sbb
mov
pop
push
xchg
cmp
jmp
mov
xor
test
rcr
xor
mov
sidtd
pop
(bad)
sbb
dec
fisubr
(bad)
xchg
test
push
push
retf
not
enter
int
jne
inc
inc
mov
and
inc
push
call
nop
jl
push
test
or
jnp
into
or
mov
sbb
jmp
push
es
stos
cmps
push
iret
lock
pop
push
sbb
out
inc
(bad)
cwde
or
mov
xor
mov
mov
in
mov
xchg
lahf
mov
sbb
nop
fisub
add
sub
es
adc
pop
cwde
or
sahf
leave
jmp
aas
mov
fcmovu
rcl
std
call
xor
xchg
cwde
lock
xor
mov
push
pop
cmp
add
cli
push
add
add
xor
xchg
mov
lahf
or
pop
dec
cmp
sti
and
jae
fadd
das
push
jmp
pusha
stos
in
inc
cmps
ins
add
(bad)
or
mov
inc
outs
in
sbb
mov
xor
jbe
and
movs
or
jmp
xchg
scas
repz
call
(bad)
push
test
stc
shr
ds
inc
sti
dec
dec
rol
add
xchg
jns
fcmovnb
clc
xor
cmp
xchg
out
dec
cmp
and
lods
inc
xchg
mov
sub
xor
lahf
aas
arpl
or
jo
jno
mov
es
or
clc
push
lock
or
pop
push
pop
push
cmps
lock
xchg
xor
cld
arpl
and
xchg
mov
(bad)
loop
imul
cdq
adc
xchg
inc
(bad)
jp
jg
add
icebp
add
sbb
adc
xchg
jp
push
sub
enter
adc
movs
and
dec
add
mov
or
(bad)
out
aas
outs
ja
dec
ja
jl
cli
mov
aas
imul
ds
mov
sbb
dec
cwde
push
fdivr
(bad)
or
lods
or
push
test
mov
push
mov
rcl
mov
mov
jl
xchg
loopne
jno
mov
fstp
out
jno
(bad)
nop
gs
xchg
mov
xchg
mov
rcr
loope
cmp
push
shl
ins
pusha
and
jne
sub
mov
sbb
sar
bswap
shr
jle
xchg
and
or
dec
fstp
jae
shl
adc
movs
imul
enter
dec
lock
or
xchg
inc
adc
call
dec
ja
push
mov
jecxz
enter
sbb
dec
sbb
scas
mov
gs
adc
mov
sbb
iret
sub
outs
outs
push
fdivr
in
sub
or
xchg
and
fidiv
pop
fsub
call
ss
mov
dec
jl
push
cmp
shl
xchg
pop
call
cwde
sahf
in
clc
imul
mov
nop
dec
dec
or
les
mov
pop
xor
test
outs
sahf
test
mov
test
pop
jns
imul
jo
fneni(8087
sbb
cmp
and
cdq
or
retf
fadd
loop
das
shl
retf
ja
test
and
jae
outs
pop
movs
dec
out
fcom
scas
inc
std
iret
xchg
imul
push
and
pop
mov
cld
adc
xor
inc
sub
xor
stos
ret
sbb
in
fcom
mov
shr
fs
or
not
push
push
cdq
popf
mov
fs
sbb
mov
lods
ret
(bad)
mov
sahf
arpl
fbld
popa
dec
cmps
iret
dec
repz
hlt
lock
lahf
stos
mov
add
pop
repnz
jl
int3
xchg
call
les
push
aad
mov
out
call
repnz
mov
xchg
loope
repz
or
cld
mov
adc
leave
push
scas
pop
cmc
(bad)
das
inc
repz
push
xchg
arpl
(bad)
gs
xchg
test
ja
loopne
mov
inc
stos
mov
outs
hlt
stc
sub
icebp
repnz
imul
cli
inc
mov
mov
cmc
pop
fmul
jno
push
movs
sbb
or
xor
jne
sbb
jns
xchg
mov
nop
pop
jge
fimul
dec
shr
fdivr
sub
mov
scas
es
adc
mov
xor
mov
mov
stc
nop
cmp
and
shl
sub
mov
scas
es
outs
cdq
std
xor
push
mov
mov
sub
mov
and
and
lods
les
icebp
fiadd
push
(bad)
hlt
mov
loop
call
mov
mov
push
mov
fimul
mov
xor
sbb
fiadd
jnp
cmp
mov
sub
jno
or
stos
mov
push
std
cmp
outs
xchg
int
(bad)
ds
sub
ins
popf
and
mov
bound
outs
push
fild
pop
repnz
cmp
pop
inc
jne
mov
stc
cmps
cli
sbb
rol
push
sub
push
xchg
outs
jne
add
mov
push
sbb
sbb
cmp
mov
jns
ret
mov
sti
rcr
push
ret
imul
les
mov
pop
jb
jg
xchg
xchg
dec
scas
xor
dec
mov
sbb
and
jae
lock
lea
shl
dec
sbb
jmp
add
cmp
icebp
xchg
pop
jno
or
xchg
loopne
cmp
push
rcr
xchg
cmc
xchg
mov
outs
push
dec
dec
into
movs
sbb
ficom
ins
cmp
out
ds
push
ins
data16
pop
mov
in
loope
inc
xchg
adc
in
sub
pop
dec
jno
mov
(bad)
jo
adc
rcl
add
and
loop
and
gs
shl
xchg
cdq
fisub
dec
and
retf
mov
movs
xchg
cmps
js
push
or
scas
dec
adc
push
fucomi
mov
cmp
fmul
or
in
add
clc
not
jg
pop
mul
(bad)
mov
data16
(bad)
fnstcw
ret
mov
or
sbb
jl
pop
inc
add
add
mov
push
xor
dec
lea
int3
or
mov
shl
and
xchg
pop
or
mov
dec
nop
mov
adc
inc
std
out
pop
mov
or
aam
enter
pop
ins
and
or
cmp
iret
ds
cld
pop
clc
sbb
xor
adc
jl
test
push
fisubr
aam
pop
push
and
les
xor
mov
cmc
dec
fist
scas
jnp
push
gs
and
jmp
cdq
xor
pop
mov
and
xchg
fsub
inc
and
dec
test
sub
cmc
cmp
call
sti
mov
fcmovnb
push
sub
mov
xchg
jno
lock
mov
pop
out
out
inc
shl
jno
push
sbb
mov
dec
hlt
jmp
and
xor
es
int3
mov
por
sbb
fist
mov
clc
mov
dec
pop
stos
pop
retf
sbb
inc
cdq
into
ret
movs
or
test
cmc
lds
cli
nop
pop
or
aam
ja
sub
cld
test
or
or
add
cmp
cdq
(bad)
or
fisttp
clc
cmp
add
xor
push
jo
cmp
add
mov
lods
fsubr
(bad)
xor
jl
adc
jmp
jns
nop
test
mov
xor
push
data16
mov
imul
or
sub
out
mov
xchg
mov
out
(bad)
adc
shl
or
adc
cmps
sbb
sub
push
mov
sbb
push
push
cwde
jb
hlt
leave
ret
jl
pushf
pop
in
cld
cmps
in
popf
les
rcr
hlt
imul
cmps
das
ins
pop
mov
movs
mov
jmp
ins
and
push
push
mov
mov
cs
sub
mov
stc
ror
fbstp
mov
mov
or
es
les
xchg
js
xchg
inc
and
rol
mov
jp
jne
jb
mov
jle
imul
daa
test
test
cdq
ficom
fldcw
jl
loope
inc
or
push
sti
sub
(bad)
loop
cmp
or
cmc
push
push
pop
mov
in
lea
adc
mov
test
in
xor
push
scas
icebp
jl
push
mov
push
jmp
jmp
ficomp
nop
pop
jae
and
mov
xchg
inc
mov
or
aad
add
dec
and
(bad)
repz
pop
pop
pop
inc
int3
out
lds
sbb
jl
mov
pusha
sbb
cmp
add
jecxz
aas
sub
lahf
add
clc
mov
fnstenv
pop
mov
out
adc
ins
fcmovb
and
inc
shl
sub
sar
cmp
cmc
dec
aam
mov
or
idiv
ins
mov
mov
xchg
xchg
cmp
cli
scas
or
jmp
xor
jmp
std
mov
test
stc
enter
test
lea
jle
cmp
pop
test
movs
jb
jno
push
mov
cmps
imul
pop
sbb
int
sti
lahf
(bad)
push
push
ret
movs
cld
clc
xor
and
into
or
popa
adc
inc
call
sub
xchg
les
int
sub
stos
stos
xchg
hlt
stc
stos
into
pop
xchg
or
xor
pop
jge
push
scas
dec
mov
jb
cmp
push
fst
sbb
repz
scas
fs
mov
mov
sbb
mov
stos
rcl
retf
pop
ja
call
xor
mov
imul
sbb
das
inc
jae
in
shl
adc
popf
mov
mov
lods
mov
inc
mov
push
int3
sbb
sbb
dec
js
xchg
rol
dec
mov
popf
dec
and
fwait
xor
test
add
sar
icebp
dec
and
push
call
xor
pop
push
rol
stos
dec
push
jp
push
push
rol
int
mov
stc
sub
add
mov
retf
sbb
xor
adc
inc
mov
(bad)
das
push
xchg
lds
test
and
xor
jo
aad
sbb
xlat
mov
shr
lock
(bad)
fs
jl
shl
mov
mov
es
push
mov
loope
mov
in
call
xchg
inc
jbe
mov
mov
xor
loop
iret
add
adc
shr
cmp
or
ja
stos
aaa
xchg
stos
iret
pop
cmp
mov
pop
hlt
pop
mov
ds
mov
shr
jnp
add
sbb
xor
sbb
lods
pop
aaa
jb
lods
pop
(bad)
fcomp
sbb
clc
mov
jne
jle
fcmovnbe
ficom
cmc
mov
pushf
outs
fistp
mov
bound
xchg
pop
pop
jle
inc
movs
adc
inc
ja
pop
int3
pop
cwde
jno
into
ins
jmp
push
pop
xor
inc
pop
jae
or
jmp
mov
jmp
sbb
jnp
arpl
xor
or
xor
add
jo
(bad)
dec
fld
int3
push
jnp
push
out
loop
xchg
push
adc
int3
les
cdq
mov
stos
xor
test
mov
xchg
arpl
jge
or
mov
mov
xchg
inc
mov
dec
mov
mov
or
pusha
xchg
mov
and
je
push
loopne
xchg
js
or
nop
xchg
mov
inc
pop
push
js
dec
cmp
(bad)
add
rol
pushf
pop
sar
repnz
scas
cmp
jmp
mov
aam
(bad)
rcl
push
shl
rcl
pop
adc
ret
frstor
sbb
xor
fst
aaa
mov
cmp
jmp
ror
lock
jne
inc
and
sbb
or
pop
xor
sub
out
scas
(bad)
gs
or
pop
xchg
nop
ficomp
adc
cdq
push
sti
jle
mov
popf
adc
or
div
or
mov
popa
in
dec
leave
mov
pop
ds
pop
pop
stos
mov
fdecstp
or
add
push
xor
adc
cmc
loop
sub
enter
pop
cmp
ins
fxtract
in
sub
(bad)
nop
outs
jmp
add
clc
pop
push
lods
cmp
inc
ss
div
lods
mov
arpl
cmp
std
xor
fstp
push
out
jmp
loop
push
push
cmp
repz
push
mov
push
xor
fucomip
mov
outs
or
in
call
mov
push
cmp
sbb
add
in
shr
add
ins
leave
call
or
mov
adc
add
shl
gs
inc
fwait
adc
fsubrp
inc
inc
loope
bound
and
xchg
mov
pop
(bad)
xchg
jmp
or
jmp
jp
xchg
lods
mov
jl
xor
ror
mov
xor
jl
sbb
jle
sahf
pop
push
movs
sbb
sahf
mov
push
(bad)
push
mov
cdq
repnz
dec
add
cld
push
das
mov
xchg
enter
(bad)
sti
rol
retf
pop
ins
sahf
jae
push
push
adc
sub
addr16
(bad)
in
popf
mov
cmc
sti
jge
push
jle
push
scas
xchg
ret
pop
shr
mov
in
loope
mov
inc
push
xor
js
test
or
add
cdq
pop
sbb
in
stos
sbb
sbb
fsub
out
mov
push
fmulp
cmp
mov
push
mov
xchg
lahf
call
dec
add
movs
mov
fwait
(bad)
in
rcr
dec
xchg
nop
push
in
and
sub
es
faddp
xor
xchg
inc
das
in
repz
aad
ds
pop
data16
mov
shl
jmp
cmp
leave
dec
and
lahf
fsub
fsubrp
cs
xchg
jmp
mov
test
sub
outs
jae
mov
or
and
sub
xor
add
es
arpl
in
data16
or
popa
xor
imul
ja
jns
add
xchg
xchg
jecxz
mov
or
xchg
arpl
aad
enter
fwait
xchg
in
or
mov
sub
cmp
rol
jmp
mov
inc
pop
movs
fs
add
jmp
ret
jne
aas
adc
sbb
fist
pop
stos
cdq
fisub
or
daa
jp
fmulp
mov
pop
mov
sar
int
fldenv
out
adc
shl
dec
(bad)
and
cmp
fwait
adc
dec
push
mov
push
jmpw
inc
adc
mov
xor
jle
in
cmp
call
sbb
jb
test
movs
(bad)
fst
jne
mov
movs
dec
fidiv
pop
sti
test
lds
cmps
pop
mov
pop
sar
dec
cdq
mov
cmp
jle
pop
pop
sub
enter
inc
in
adc
jmp
inc
les
dec
mov
inc
sbb
xchg
dec
ins
mov
popf
sub
inc
cli
push
inc
mov
or
jns
into
pop
retf
jnp
push
ja
mov
jnp
xchg
pop
jecxz
test
clc
push
sti
js
js
idiv
gs
dec
adc
mov
iret
cmc
cmp
jne
ds
out
adc
mov
ins
pop
push
sbb
or
stos
inc
mov
mov
mov
add
jno
xchg
dec
iret
jle
jp
sub
or
or
and
pop
loop
lahf
push
sbb
inc
stos
xchg
bound
pushf
jne
push
xor
push
les
adc
cmp
xchg
loope
popf
add
data16
clc
xor
repnz
ret
jo
add
sub
or
jg
mov
xchg
pop
nop
pop
shr
xor
outs
sub
repz
jb
mov
push
cmp
ror
mov
clc
inc
cmp
jae
aaa
cld
pop
fistp
into
aad
push
arpl
inc
je
inc
call
xchg
pop
dec
cmp
loope
(bad)
xlat
out
test
shl
jnp
xchg
fs
out
push
call
sbb
add
ffreep
popa
and
xor
into
clc
pop
(bad)
scas
mov
mov
fs
add
inc
fldcw
dec
jae
lock
fwait
or
cmp
jae
fsub
imul
mov
mov
and
and
cld
test
or
mov
mov
adc
cmps
ret
jno
call
into
test
jecxz
scas
mov
jae
(bad)
jle
je
lea
out
shr
xlat
xchg
inc
in
jae
shl
lock
ja
pop
add
inc
int3
pusha
(bad)
push
pop
mov
adc
sbb
add
repnz
inc
push
jl
jo
jnp
shl
out
mov
sub
jbe
push
mov
mov
mov
call
push
stos
mov
and
mov
outs
out
fsub
push
sbb
jno
cld
xchg
mov
fisub
sti
and
sub
(bad)
xlat
imul
lods
packuswb
adc
(bad)
retf
hlt
out
gs
pop
call
xor
mov
call
jl
ret
mov
and
jl
jae
inc
in
ror
lock
jb
cmc
scas
xchg
in
in
int
adc
or
jl
push
jo
add
push
into
movs
pcmpgtw
stc
or
inc
mov
cmp
pop
ficom
enter
push
mov
push
mov
popf
pop
xchg
mov
in
call
sbb
shl
or
pop
adc
and
mov
dec
gs
clc
push
movs
mov
out
xchg
fs
inc
ins
imul
and
mov
pop
hlt
push
mov
rcr
ret
fisttp
push
ret
mov
out
fwait
div
mov
out
push
imul
inc
lods
in
in
in
fsubr
and
jb
mov
aas
and
int3
and
popf
mov
enter
stos
xchg
xor
inc
inc
repz
retf
fmul
aaa
sbb
out
push
lock
cdq
shr
mov
loopne
or
push
mov
push
dec
popf
sbb
inc
int3
cmps
sub
lods
retf
in
cmps
pop
out
jns
mov
bound
shr
out
mov
push
cmps
mov
mov
xchg
aad
dec
imul
mov
pop
mov
(bad)
scas
inc
imul
(bad)
pop
mov
adc
test
lds
mov
inc
mov
mov
cld
ins
js
sbb
rcr
cmp
push
fs
sub
fdiv
mov
bound
cmp
pop
std
push
aaa
jb
scas
enter
pusha
out
sub
add
adc
dec
lea
aam
xchg
pop
mov
jnp
jbe
dec
imul
stc
jecxz
aaa
aam
scas
pop
icebp
lds
mov
adc
push
loopne
bsr
in
pop
out
test
mov
fst
in
pop
rcl
adc
jmp
loopne
jg
cmp
neg
push
(bad)
cwde
out
inc
inc
xchg
das
xor
xor
push
mov
movs
ds
fstp
push
mov
loop
adc
pop
jb
fcmovu
push
push
adc
cwde
sbb
ja
jb
lods
and
sbb
in
and
std
inc
xchg
push
clc
mov
sbb
mov
xor
jno
push
add
push
scas
push
dec
test
add
test
and
fbld
mov
push
stc
sub
xchg
into
std
sar
pop
je
jge
leave
imul
mov
adc
xchg
add
imul
leave
movs
(bad)
(bad)
jmp
xlat
loope
inc
mov
mov
cmp
xchg
cmps
popf
sub
out
hlt
sbb
or
sbb
test
nop
xor
scas
jns
cs
push
and
sub
mov
jl
sbb
pop
(bad)
test
aad
aam
push
pop
repnz
out
aam
sbb
mov
mov
inc
adc
in
sbb
push
mov
clc
push
sub
sbb
cwde
sbb
push
mov
daa
mov
add
and
mov
and
mov
xor
ins
popa
cmp
mov
enter
sbb
dec
xchg
dec
inc
cwde
pop
lea
xor
sbb
test
inc
jo
push
(bad)
push
stc
push
inc
cmp
nop
mov
mov
add
aad
dec
pop
into
cmp
mov
mov
cli
mov
shl
cmps
scas
loop
cmp
mov
xor
ss
bound
gs
jmp
sub
lds
mov
ins
mov
sahf
sbb
nop
push
outs
aas
inc
mov
sbb
cs
adc
jge
jecxz
ins
fist
mov
cmp
ror
or
pop
mov
xor
nop
and
mov
push
jmp
jb
mov
test
jo
xor
sbb
push
mov
add
or
sbb
(bad)
sbb
pop
nop
add
push
sahf
shl
lods
pusha
mov
and
pusha
mov
jle
mov
retf
cmc
mov
cmp
mov
call
inc
or
jge
sahf
lock
repnz
xchg
mov
push
lock
(bad)
jg
dec
fistp
add
xor
dec
jle
jg
ins
rol
sbb
das
pop
shr
and
add
xchg
inc
dec
aas
inc
jbe
stos
jmp
mul
pop
mov
inc
popf
add
popf
adc
inc
test
pusha
ss
aaa
bound
dec
ins
push
jnp
aad
imul
pop
je
loop
push
fsubr
jae
pop
fimul
mov
push
push
ret
shl
mov
pop
mov
pusha
xlat
adc
cmp
pop
add
inc
ds
dec
or
sub
dec
xchg
jge
movs
ins
adc
aam
pop
(bad)
dec
sar
jne
sbb
cmp
fisttp
imul
ins
jmp
adc
jmp
pop
out
mov
je
ja
xor
inc
adc
stos
and
xchg
cmp
fadd
call
dec
adc
addr16
fsubr
dec
stos
out
mov
clc
and
xor
(bad)
push
in
jecxz
add
and
into
mov
xchg
pop
cs
aad
jmp
test
int
ret
adc
gs
mov
retf
out
sbb
stc
jle
fs
ins
icebp
or
lods
lock
push
jg
ins
shl
jmp
mov
cmovl
xor
pop
stc
mov
and
mov
cli
adc
test
mov
dec
sub
jae
dec
sbb
inc
ins
mov
dec
push
push
xchg
mov
jge
mov
or
(bad)
lock
cmp
dec
fnstenv
xor
jno
jecxz
or
call
mov
shl
xor
cdq
mov
jmp
ins
sar
out
xor
sar
xor
add
sbb
out
leave
mov
jo
mov
jg
shl
inc
gs
jmp
push
adc
adc
in
inc
mov
xor
sti
fist
cmp
add
push
pusha
stc
imul
ins
inc
(bad)
shr
imul
or
pop
(bad)
sbb
cdq
dec
and
mov
movs
popa
pop
adc
mov
and
push
jbe
mov
jbe
add
jb
xor
fiadd
mov
inc
mov
hlt
sbb
mov
inc
mov
into
add
scas
cmp
push
xor
push
mov
cmps
adc
out
rep
push
aas
and
movs
fist
cdq
in
cwde
and
adc
lods
jno
int3
das
outs
sbb
ret
ja
lods
popf
loopne
cmp
dec
cdq
mov
sbb
mov
or
les
jp
es
or
jecxz
lods
push
mov
out
jl
sub
jb
ds
adc
adc
mov
xacquire
mov
cld
fwait
shl
outs
fdiv
ret
lahf
lods
jnp
mov
dec
jmp
cwde
dec
push
scas
inc
push
out
jecxz
sub
popf
cmps
fprem
mov
push
mov
xor
cmc
fcomp
jae
xchg
push
stc
repnz
(bad)
leave
push
fcomp
int
js
or
dec
scas
sar
inc
xor
scas
inc
in
aad
cmps
and
jae
scas
mov
sub
mov
inc
adc
aas
mov
xor
nop
push
shl
add
in
das
sub
mov
inc
test
aam
fwait
cdq
pop
(bad)
mov
add
(bad)
jmp
dec
inc
movs
call
xor
fwait
add
jmp
jmp
neg
cwde
lahf
shl
enter
sbb
or
sbb
xchg
scas
inc
outs
aaa
in
stos
cmp
sub
mov
int3
mov
or
cmc
pop
(bad)
pop
and
loope
add
retf
sbb
fsubr
stc
cmc
mov
cmp
jae
pop
int3
add
push
jl
inc
jb
jb
addr16
and
ss
cli
sahf
cwde
outs
rol
push
xchg
imul
or
mov
mov
mov
push
popa
add
adc
in
mov
push
lock
out
pop
rcl
(bad)
sbb
pop
nop
and
jg
mov
pop
mov
mov
pop
pop
cmp
mov
loop
or
jns
jg
shr
stos
icebp
sbb
pop
or
aam
imul
jge
lods
adc
shl
(bad)
out
jl
mov
test
sbb
push
sbb
mov
ja
dec
fld
sub
jnp
cmc
add
fadd
repz
xchg
into
test
clc
or
xchg
aam
sbb
jp
imul
shr
out
cmps
add
loop
dec
sub
dec
sar
data16
mov
push
mov
stos
xchg
fisub
out
rcl
mov
(bad)
sahf
ds
imul
pop
fild
pop
rol
retf
mov
out
add
dec
jne
xchg
ja
and
jmp
aam
sub
lahf
lods
rcr
xor
push
out
fiadd
cwde
lahf
push
call
mov
sbb
mov
and
imul
loope
loope
xor
dec
je
js
cs
int3
xchg
push
je
mov
fild
in
js
add
pusha
test
jmp
retf
enter
mov
icebp
das
sub
sbb
adc
xchg
fld
xchg
fs
cmp
shl
mov
and
mov
pusha
push
outs
ins
mov
dec
mov
aad
dec
adc
test
rcl
aam
(bad)
mov
sbb
pop
retf
sbb
jno
pop
sub
push
sti
ds
sbb
repz
inc
jne
addr16
sub
fnstenv
cmps
loope
jae
lock
repnz
in
stos
and
aaa
pushf
sbb
dec
out
pusha
pop
or
mov
ret
aas
ret
inc
(bad)
and
sbb
sbb
iret
cmp
cmps
aas
dec
ror
mov
or
xchg
xchg
and
mov
dec
xchg
and
adc
arpl
fistp
stc
inc
add
jae
cwde
es
daa
test
add
adc
test
je
test
sar
add
xchg
enter
sbb
and
and
stc
push
or
mov
pop
ins
mov
jbe
mov
mov
out
mov
(bad)
lea
jne
xchg
aad
retf
retf
aas
ret
fcom
repnz
pop
mov
sub
es
or
repnz
dec
data16
dec
std
imul
mov
movs
addr16
nop
fsubr
xor
in
xor
inc
pop
push
cli
bound
add
out
frstor
sahf
rcl
add
scas
fmul
popf
verw
mov
cmc
xchg
sbb
test
push
cmps
cmp
mov
outs
repz
fld
jo
into
dec
cmps
cmp
sub
jne
ins
jns
jmp
sbb
test
cmp
fwait
push
or
jge
adc
adc
lods
pop
xor
adc
pop
or
out
hlt
jb
loope
push
mov
mov
mov
push
pop
iret
repz
ss
cmp
ret
push
xchg
outs
gs
mov
pop
sbb
leave
dec
scas
sti
pop
outs
xchg
mov
xor
sti
scas
dec
lahf
xlat
repnz
sbb
xchg
push
xchg
sbb
adc
out
xlat
xor
xor
cmc
add
mov
out
push
aaa
push
sbb
rol
and
mov
push
push
sub
mov
push
pop
icebp
or
imul
mov
test
mov
push
out
xchg
pop
fdivr
sbb
stos
cmp
call
dec
retf
sar
inc
lock
jl
aad
test
dec
add
int
iret
test
adc
int3
test
sub
dec
imul
jp
fimul
sar
std
or
int3
into
sar
cmp
mov
xchg
and
test
hlt
or
xchg
xchg
pop
push
sub
and
sbb
aas
adc
shl
out
cmps
pop
inc
inc
in
mov
clc
sbb
inc
jg
scas
inc
mov
cld
aad
cmp
(bad)
aam
inc
repz
daa
cli
dec
jo
push
ret
fistp
neg
sub
test
shr
pusha
push
push
mov
xchg
mov
fmulp
pushf
ja
pop
pop
push
xor
cmp
and
cli
mov
imul
adc
movs
and
fcomp
and
fisttp
and
icebp
stc
dec
mov
xor
fdivr
popf
out
and
fwait
lods
pusha
fisttp
pop
inc
popa
ret
in
pop
adc
sub
sub
cdq
mov
mov
ret
pusha
mov
jg
out
movs
aas
and
pop
mov
mov
sub
sub
xchg
sbb
movs
adc
and
dec
xchg
dec
and
ja
fwait
ror
sbb
jl
push
sti
mov
xlat
xor
push
mov
mov
dec
das
sbb
adc
sbb
adc
jmp
push
call
push
test
mov
pop
inc
or
push
or
(bad)
je
lods
adc
jnp
ret
dec
popa
dec
xor
jo
mov
fisub
ds
xchg
cmp
arpl
sub
leave
and
mov
cmc
jbe
cmp
and
lods
push
xchg
popa
and
mov
outs
sub
fcomp
push
push
inc
ins
aaa
inc
aas
aaa
push
sub
call
jmp
push
adc
jnp
add
mov
and
inc
(bad)
push
xchg
push
mov
push
inc
sub
jmp
inc
in
dec
or
sub
sbb
jo
test
cmps
jbe
cmp
in
js
jle
rcr
sbb
cmp
retf
arpl
lods
mov
mov
pop
scas
cmp
mov
jg
or
jg
shl
sbb
dec
pop
inc
and
rcr
lods
dec
adc
push
push
inc
jae
xchg
in
frstor
sti
out
mov
adc
add
cmp
into
mov
jns
stc
mov
aad
std
dec
pop
sbb
adc
push
scas
movs
xor
or
dec
xor
xchg
pop
sbb
cmp
hlt
ds
jno
iret
test
push
stc
add
jnp
xchg
pop
ss
xor
test
sbb
in
into
push
ror
pop
cmp
sbb
aad
or
ss
pop
movs
scas
pop
ror
cmp
gs
or
lods
dec
or
js
xchg
mov
(bad)
cli
xor
outs
pop
retf
jno
sbb
test
cmp
rcl
xchg
test
test
fwait
test
mov
std
fidiv
ja
loopne
xor
jl
out
shl
ret
xor
pop
scas
sar
jne
dec
in
in
sub
daa
xor
ficom
das
mov
pop
xchg
out
mov
mov
push
daa
movs
retw
and
inc
ret
mov
mov
arpl
fiadd
cmp
push
or
cli
push
jecxz
xor
cmp
cs
xor
sahf
inc
repz
push
cmp
inc
(bad)
pop
mov
xchg
mov
dec
or
add
scas
fbld
nop
hlt
in
sub
inc
test
out
jns
aas
nop
push
retf
push
nop
and
lods
jp
mov
inc
(bad)
hlt
ds
or
bound
test
or
inc
xchg
sbb
in
in
add
inc
sub
push
retf
mov
mov
jbe
es
dec
ror
repnz
jg
sar
mov
fs
and
and
inc
xchg
stos
inc
ret
or
pop
cmc
cmps
loope
push
sub
ret
call
add
call
and
ins
push
ret
lds
pop
ins
inc
mov
out
nop
push
xor
push
dec
sub
mov
aas
xchg
ret
push
pop
das
fcmovbe
inc
xchg
adc
xor
ss
inc
sbb
repnz
fwait
mov
xchg
movs
call
int3
push
xor
mov
je
ja
xor
adc
or
inc
mov
inc
scas
into
cmp
fadd
pop
mov
mov
sub
mov
sbb
out
cmp
rcl
inc
xchg
mov
mov
add
sub
mov
test
push
pop
ss
dec
ins
mov
push
aam
test
add
xchg
adc
xor
mov
repz
pop
mov
and
pop
sti
cmp
lock
jae
xor
rcr
out
in
cs
or
call
jecxz
mov
imul
xor
cmps
int3
retf
mov
adc
lods
inc
xchg
mov
rol
mov
push
pop
rcl
inc
aad
in
cld
je
mov
retf
cwde
add
mov
sbb
push
and
rol
jno
xchg
leave
ins
int
cdq
(bad)
in
jns
fadd
int
mulps
icebp
or
retf
jp
popf
fsub
xchg
xchg
or
push
ja
(bad)
push
shl
xor
js
xchg
inc
jg
shr
les
mov
aad
push
(bad)
(bad)
movs
and
sbb
xor
leave
pop
lahf
fidivr
cmps
loope
mov
movq
sub
lock
icebp
dec
(bad)
lahf
das
cli
outs
xchg
sbb
pop
push
test
cmc
(bad)
cmc
test
add
mov
pop
ds
lods
or
jge
jb
fnstenv
out
scas
mov
test
sbb
enter
iret
bound
into
add
and
and
lock
ins
dec
out
das
push
sbb
ror
jae
jle
scas
push
in
push
xchg
inc
movs
push
retf
cmp
loop
jg
mov
daa
sahf
stc
ficomp
push
stos
dec
loop
mov
neg
mov
movs
and
(bad)
imul
mov
xchg
scas
xchg
std
inc
into
je
sahf
push
cmp
enter
lods
xor
pop
dec
mov
and
adc
xchg
jmp
pand
push
push
push
sar
cli
outs
dec
lea
sbb
adc
icebp
adc
inc
ds
xchg
cmp
test
xchg
test
mov
xor
ja
out
pop
scas
adc
xchg
into
cwde
shl
inc
push
call
sbb
setbe
xchg
dec
mov
js
(bad)
or
ss
cmps
and
gs
mov
inc
sbb
push
jecxz
sub
mov
in
add
iret
lods
pop
cs
xor
cmp
inc
cmp
cmps
pop
push
pop
mov
dec
ret
ins
call
push
mov
(bad)
jmp
push
mov
mov
(bad)
call
or
ficomp
in
push
fnstsw
xor
imul
mov
pop
mov
xlat
addr16
cmp
add
pop
push
into
fucomip
jg
ror
mov
into
aas
test
shr
push
pop
add
jnp
imul
dec
daa
push
add
jecxz
pop
jge
rol
loope
inc
sar
push
imul
or
jecxz
add
sub
out
xchg
xlat
je
std
scas
cmp
adc
mov
pushf
lods
mov
or
hlt
enter
sbb
sbb
ds
out
sahf
mov
sbb
jg
jl
iret
mov
es
or
fild
aaa
push
std
mov
mov
xchg
pop
dec
test
and
mov
pop
xor
fstp
test
mov
add
cdq
test
cmp
ret
dec
(bad)
xlat
sahf
push
test
stos
(bad)
cmp
sbb
sbb
lods
push
cld
sbb
push
mov
and
ja
clc
clc
gs
mov
out
sbb
in
mov
pop
dec
outs
xchg
xchg
mov
push
imul
mov
and
stos
push
loope
adc
xchg
loope
push
syscall
adc
rol
cmps
ss
push
iret
mov
(bad)
cld
sar
mov
mov
movs
test
retf
dec
test
adc
mov
and
and
(bad)
cdq
jg
add
cwde
mov
cs
rol
xchg
int
inc
std
in
aad
pop
(bad)
or
mov
cmps
into
stc
mov
popf
pop
mov
mov
sbb
out
shr
fild
add
das
jo
pxor
cs
mov
push
add
sbb
pop
imul
sub
fst
mov
neg
sti
shl
xchg
xchg
add
pop
pop
sub
ret
push
js
out
dec
pop
lahf
xchg
jb
push
loope
iret
fdivr
jmp
jle
or
dec
outs
pop
loopne
arpl
loopne
pop
sbb
jb
or
mov
pop
test
pop
adc
jmp
test
pop
pop
sbb
sub
pop
out
and
jbe
mov
outs
mov
cwde
and
lahf
cmp
inc
xor
cs
adc
push
jl
movs
sbb
adc
cmc
push
sbb
in
pop
push
stos
fstp
pop
pop
inc
ins
adc
add
stos
mov
pop
push
loope
jns
jge
pop
adc
sbb
and
test
xchg
test
scas
les
xchg
jg
pop
cwde
cmps
jmp
lock
and
jb
add
fsub
push
adc
push
popf
fisub
daa
jno
xchg
xor
out
xchg
lods
jb
iret
out
(bad)
out
cmp
in
dec
sbb
adc
add
aad
xor
jmp
push
stos
lea
xor
fld
jno
jmp
(bad)
popf
mov
call
xor
scas
inc
xchg
ins
sar
adc
addr16
in
pop
mov
sub
add
pop
cld
arpl
xchg
fmul
leave
ins
inc
pop
aas
adc
dec
call
iret
dec
and
xor
or
sub
jae
scas
gs
stos
sahf
jg
imul
mov
pop
pop
inc
add
cmp
icebp
aas
lds
sub
clc
and
mov
push
xor
in
repz
inc
dec
mov
(bad)
xchg
jle
push
mov
lock
fcom
iret
fwait
lea
sbb
or
add
test
sub
hlt
mov
push
out
rcl
nop
lds
outs
lods
pop
loop
daa
or
outs
cmps
das
icebp
inc
rcr
repnz
(bad)
in
mov
lds
call
dec
out
xchg
push
dec
clc
xor
outs
call
cmp
inc
int
pandn
sbb
shr
push
sti
cli
sub
aas
ja
xchg
cli
frstor
dec
in
cmps
add
test
and
xchg
inc
sub
sbb
pop
xor
jns
mov
pop
adc
popf
jno
xchg
and
mov
mov
push
cld
xchg
lods
inc
leave
dec
lods
mov
mov
inc
or
ret
push
jmp
pop
or
sbb
rcr
cmps
push
cli
add
jae
push
xchg
pop
outs
and
or
push
out
or
fs
xor
movs
pushf
pop
xor
ret
imul
rol
sub
mov
pop
mov
jecxz
push
push
mov
nop
xor
stc
shl
xchg
test
or
or
das
push
or
cmp
jmp
mov
pusha
or
movs
fnstcw
div
jg
movs
push
data16
sbb
cmp
jl
std
cmp
inc
in
not
neg
pop
popf
or
xlat
std
movs
xchg
pop
and
sbb
jmp
cdq
cmp
add
cmp
sar
pop
or
mov
pop
inc
pop
or
fcom
xchg
lods
jns
outs
adc
ins
shr
inc
adc
adc
shl
out
adc
imul
lds
adc
or
mov
pop
inc
fucomp
call
jno
mov
daa
stos
mov
and
pop
(bad)
movs
adc
jge
js
jne
rcr
je
out
retf
xchg
sbb
sahf
sar
inc
or
out
cmps
mov
jns
jmp
jge
mov
movs
mov
push
and
add
mov
sbb
aas
lods
out
inc
push
mov
sti
fmul
add
daa
loopne
mov
loopne
mov
nop
retf
aad
adc
dec
mov
jecxz
mov
cdq
ret
push
adc
aas
mov
xor
jns
popf
inc
cmp
cld
push
cmp
lds
test
xor
int3
sbb
lds
mov
push
mov
and
iret
fwait
enter
or
xchg
cmp
and
pop
iret
sar
into
sbb
mov
jg
xor
dec
push
mov
cs
pushf
push
adc
shl
enter
or
clc
daa
adc
inc
xchg
icebp
ffreep
jns
push
enter
dec
mov
movs
or
sbb
xor
sub
aam
cmp
cdq
push
sbb
test
xor
mov
lock
icebp
push
push
push
or
mov
out
push
dec
ror
jnp
call
xchg
adc
movs
and
aad
jb
jecxz
and
bound
fdivr
mov
push
pop
lea
push
stos
nop
mov
icebp
push
jo
(bad)
sahf
inc
jne
imul
cmp
fild
test
jns
loopne
inc
add
sub
(bad)
ror
cmp
xor
in
lods
(bad)
test
mov
mov
jecxz
inc
push
in
(bad)
mov
xor
fcomp
call
shl
xlat
jmp
push
add
popf
jno
dec
xlat
pop
cmp
dec
add
hlt
(bad)
xchg
cmp
sti
mov
arpl
mov
call
fdivr
call
push
(bad)
(bad)
rcl
sbb
xor
test
stos
mov
mov
xlat
aam
out
cmps
or
and
and
sbb
addr16
and
fisttp
mov
(bad)
push
sbb
push
xlat
sbb
gs
inc
and
cmp
dec
jns
jl
lea
rcr
inc
sub
dec
inc
xchg
arpl
out
mov
jmp
push
dec
fldenv
or
cs
lods
add
jmp
inc
mov
add
daa
jecxz
pushf
mov
mov
arpl
shr
int3
xchg
push
push
mov
stos
inc
popf
dec
xchg
xor
outs
push
js
cwde
cmps
lahf
out
bound
xchg
iret
adc
sbb
iret
or
jae
cmp
jp
out
mov
sti
jmp
movs
jo
clc
cmc
loop
adc
lock
mov
mov
retf
(bad)
clc
je
cmps
xor
and
xchg
and
sub
mov
and
(bad)
popa
jle
in
stos
les
arpl
jns
cmp
jbe
mov
shr
xor
adc
push
inc
cs
fwait
inc
inc
es
mov
push
pop
push
mov
lahf
aas
pop
shl
test
imul
ret
mov
inc
pop
or
jmp
cmp
gs
cmp
mov
gs
int3
adc
gs
(bad)
jmp
mov
ja
mov
mov
cmp
mov
cs
cdq
mov
ret
pop
ins
pop
jle
add
jb
mov
xor
xor
popf
fidivr
jmp
fisubr
call
shl
stos
adc
sbb
xchg
int3
adc
xchg
mov
sub
pop
mov
and
stos
fs
test
data16
daa
xchg
push
mov
cmp
mov
inc
shl
or
mov
jp
cdq
jecxz
test
push
not
loope
or
cmp
jns
lahf
push
dec
mov
outs
mov
sbb
or
mov
lods
xchg
cmp
jmp
icebp
pop
push
(bad)
scas
jecxz
clc
fldlg2
es
xchg
or
add
mov
xor
xchg
pop
daa
and
or
mov
jne
fmulp
mov
adc
int
stc
pop
ins
sbb
push
xor
mov
adc
jns
out
push
test
cmp
push
xor
enter
and
sbb
pop
ss
sub
leave
rcr
jnp
paddq
and
xor
jnp
(bad)
mov
outs
mov
pusha
inc
push
out
jne
movs
test
jbe
pop
scas
repnz
dec
jno
sbb
mov
adc
mov
or
jae
pop
xchg
dec
es
inc
xchg
mov
out
xchg
cmps
xchg
out
nop
cmp
cmp
xchg
xchg
out
ficomp
push
movs
rcl
sti
popf
inc
xor
arpl
mov
and
sbb
ret
add
inc
add
ret
les
mov
pusha
rol
daa
push
rcr
and
sbb
sbb
icebp
push
ret
dec
sbb
mov
cmp
inc
adc
cli
inc
xchg
jbe
test
int
test
in
test
nop
sti
pop
aaa
nop
div
fiadd
cli
aam
out
fidivr
adc
inc
push
lds
aaa
xchg
dec
pop
ret
mov
jns
hlt
data16
inc
loop
lea
outs
mov
fiadd
imul
xchg
and
sub
call
cmp
fst
cmp
sub
and
sbb
cdq
outs
cld
push
nop
scas
ror
js
movs
and
adc
pop
inc
add
inc
mov
add
arpl
xor
inc
xor
mov
fimul
sub
push
into
fwait
bound
or
xor
mov
aad
cmp
loope
out
repz
add
pop
push
movs
sub
xchg
movs
jle
jne
sbb
dec
stos
not
movs
xchg
mov
cmp
(bad)
push
jns
aaa
xor
jmp
push
leave
in
fldenv
sbb
out
retf
je
dec
sbb
ret
test
shl
pop
imul
sbb
sub
or
(bad)
xchg
je
xchg
cld
ficomp
dec
mov
push
push
retf
pop
jb
neg
jp
mov
mov
nop
out
or
jnp
dec
out
mov
sub
dec
xor
sub
inc
fcmovbe
movs
mov
sbb
or
outs
sar
dec
xchg
pushf
fisub
fst
(bad)
loop
mov
xor
push
dec
(bad)
rol
jg
mov
ret
int3
ret
les
cli
(bad)
out
push
imul
dec
outs
pop
sbb
push
dec
xchg
lea
pop
xor
push
adc
mov
je
fld
add
xor
mov
or
inc
je
mov
inc
popf
pop
xor
cmps
jno
ins
repz
rcl
push
mov
cmp
clc
int3
ret
inc
stos
call
popf
test
ins
jp
jmp
mov
pusha
adc
bound
jle
iret
pop
call
aad
or
into
popa
or
hlt
sti
xchg
scas
(bad)
ror
mov
xor
sbb
arpl
shl
call
add
mov
ffree
ror
jb
or
popa
lahf
mov
outs
xchg
pop
add
mov
cwde
xchg
xchg
lods
add
(bad)
push
jmp
dec
ins
(bad)
mov
add
jmp
adc
outs
and
ins
fisubr
fnop
ds
mov
outs
(bad)
hlt
adc
dec
jl
xor
pusha
idiv
fdiv
repnz
cmp
jmp
mov
or
pop
push
inc
data16
inc
fnstsw
scas
mov
out
inc
add
leave
in
fstp
xchg
div
into
push
test
popa
dec
(bad)
loop
push
dec
leave
rcl
pop
test
sub
aam
cmc
inc
xchg
call
loope
adc
push
test
mov
push
cdq
into
sub
and
rol
mov
dec
mov
pusha
mov
add
inc
push
(bad)
and
in
and
xor
test
mov
mov
fadd
add
sbb
xor
ss
jne
jo
adc
stos
add
mov
push
cmp
mov
add
pop
out
push
cli
push
push
outs
sub
jmp
mov
sub
add
clc
jnp
pusha
pop
fwait
out
or
data16
pop
adc
mov
test
xchg
in
outs
test
mov
jns
repnz
int
push
les
in
std
lods
gs
lods
aas
in
pop
out
pop
mov
das
sub
xchg
aaa
add
fnstsw
and
push
and
jmp
gs
jae
ss
jmp
in
xchg
xchg
push
jmp
cmps
(bad)
aas
cdq
add
xchg
jo
xor
push
jl
test
pop
mov
pushf
add
mov
(bad)
fbld
jb
sbb
or
or
inc
push
cmc
push
call
cwde
stc
mov
xchg
dec
outs
enter
ret
pop
cmp
mov
mov
aad
pop
mov
jl
or
dec
enter
ror
int3
push
into
mov
popa
pop
clc
mov
(bad)
cmps
mov
imul
or
imul
or
test
jp
add
scas
cs
pop
scas
pop
bswap
iret
mov
call
sub
or
loope
lods
dec
sbb
ficom
mov
scas
fcom
or
xchg
movs
mov
pusha
out
ja
fwait
in
mov
pop
cli
icebp
stc
adc
lods
(bad)
xchg
mov
mov
cmp
out
repnz
inc
xchg
jg
rcl
xchg
out
out
in
shl
pushf
test
xchg
xor
aaa
lahf
xor
in
cmp
cmps
mov
mov
rcl
inc
or
dec
push
sahf
adc
cwde
dec
push
adc
rol
sbb
mov
mov
data16
call
daa
ret
cmc
daa
xchg
xor
imul
cmp
loope
cmp
cmc
push
cmps
sahf
je
sbb
mov
fild
out
outs
cmp
add
fwait
bound
repz
mov
ret
scas
mov
js
push
xchg
imul
xchg
adc
(bad)
in
loope
in
neg
outs
dec
jns
and
fimul
jmp
push
add
shl
and
ss
clc
cmp
mov
or
xor
lods
cmp
and
ficomp
pop
inc
or
fistp
leave
addr16
stc
int3
jmp
sbb
fwait
test
adc
and
or
retf
mov
(bad)
pop
xchg
mov
jo
xchg
jne
sbb
xlat
(bad)
sub
mov
xchg
test
fild
cmp
mov
pop
mov
add
daa
sub
(bad)
popa
inc
popf
push
outs
xor
pusha
bound
cdq
push
scas
jg
sahf
sbb
test
dec
add
add
push
ins
bound
retf
xor
fucomi
pop
jo
jb
push
xor
daa
mov
mov
and
ror
jmp
inc
push
cmp
scas
pop
shl
fs
ret
mov
cs
lock
cmp
mov
call
pop
pop
je
popa
and
mov
xchg
jno
call
add
xchg
mov
xchg
inc
(bad)
aam
outs
sbb
mov
xchg
add
in
call
jno
sub
in
out
xchg
inc
dec
sbb
call
adc
push
dec
fnstenv
loope
cdq
adc
fucomip
(bad)
in
jl
dec
pushf
sbb
ja
loopne
sti
shr
dec
inc
mov
or
das
mov
in
daa
mov
mov
mov
cs
add
mov
clc
mov
test
mov
loop
ret
ret
bound
jg
loopne
sub
cmp
push
cwde
packuswb
pop
scas
arpl
fs
lods
push
and
and
cdq
mov
or
(bad)
jge
jnp
sbb
xor
aad
aam
dec
scas
ins
add
movs
mov
mov
cmp
xchg
das
test
xchg
popa
mov
mov
nop
test
fdiv
jle
pop
add
in
cmp
fnstsw
pop
inc
jb
mov
xchg
stc
aas
stos
and
sbb
inc
jg
leave
mov
sti
enter
pusha
adc
pop
mov
xor
loope
les
inc
push
mov
popf
push
mov
rol
lds
gs
outs
xor
fwait
add
pushf
test
out
stos
add
add
test
ins
push
add
sbb
mov
adc
mov
dec
add
mov
je
adc
mov
fist
jp
(bad)
in
hlt
mov
ret
push
mov
or
out
shr
daa
jmp
mov
pop
(bad)
pop
in
movs
xchg
ins
call
ret
les
fwait
test
cli
jo
inc
inc
sbb
pusha
sub
loope
xchg
loope
mov
cmps
rep
(bad)
jp
mov
jmp
cmp
je
xchg
call
mov
nop
cmp
mov
cmp
in
shl
jmp
enter
mov
add
pop
push
repz
push
(bad)
and
(bad)
or
or
pop
xor
jl
ret
in
push
arpl
pop
es
cmps
es
xchg
out
mov
sbb
pop
jne
or
rcl
cmp
sar
loop
mov
enter
stos
cmc
js
jnp
mov
das
adc
outs
push
pop
xor
cmp
mov
movs
and
cmc
add
jae
cld
(bad)
push
cmp
sub
jbe
jle
xor
jmp
stos
fadd
fcom
movs
stos
es
or
ss
loop
pop
sbb
jg
ret
nop
call
xor
add
call
mov
enter
xor
sbb
fidivr
inc
xchg
fisub
movs
cmc
in
mov
daa
push
or
add
leave
add
mov
sar
push
inc
loop
loop
add
cwde
jg
cmp
nop
pushf
push
inc
imul
dec
or
(bad)
jno
hlt
or
inc
fbld
idiv
or
cdq
lods
ret
lods
mov
and
(bad)
cmps
mov
mov
dec
sub
or
xor
into
mov
call
ret
or
cmc
dec
jecxz
or
pusha
mov
neg
popa
mov
dec
sahf
adc
iret
lds
xchg
(bad)
mov
or
test
pop
je
imul
mov
(bad)
jp
repnz
jo
popa
mov
ins
test
and
test
mov
xcrypt-cbc
cmps
adc
fmul
mov
sub
popf
xor
lock
mov
add
je
retf
mov
je
push
push
jg
ins
addr16
inc
(bad)
cmp
push
cmp
outs
aaa
in
pop
jl
(bad)
xchg
sub
and
sub
das
pop
enter
dec
imul
nop
fistp
jbe
dec
cld
xchg
or
enter
in
mov
inc
js
std
push
fmul
inc
scas
es
push
icebp
mov
jl
(bad)
std
aad
dec
inc
shl
mov
pushf
mov
dec
pop
push
inc
sbb
dec
mov
sub
sar
push
mov
mov
sbb
(bad)
jbe
dec
aas
xor
lods
mov
loopne
lds
mov
ficomp
jo
jecxz
xchg
loope
fwait
jbe
add
ds
bound
jp
pop
ror
mov
mov
daa
pusha
push
add
adc
out
pop
pusha
bound
scas
aad
xchg
mov
pop
hlt
popa
jnp
test
call
lods
push
or
shr
or
cmc
movs
sbb
jmp
mov
xchg
fwait
jg
mov
push
xor
sbb
add
pop
mov
dec
mov
adc
outs
cmps
pop
rol
mov
leave
xor
arpl
mov
xor
gs
push
sub
mov
xchg
push
loopne
mov
pop
scas
xchg
jg
mov
lahf
or
repnz
xchg
jmp
or
in
xchg
or
jle
into
sub
xchg
or
cmp
or
ret
push
inc
add
pop
(bad)
call
(bad)
sub
sbb
call
fwait
inc
in
fs
iret
mov
sbb
mov
out
push
(bad)
mov
mov
dec
dec
or
push
xchg
adc
xchg
xchg
std
scas
lds
jle
(bad)
mov
adc
mov
pusha
mov
(bad)
stc
jne
loope
je
xor
lods
test
adc
into
mov
fild
cmc
(bad)
mov
cmp
sub
popa
scas
xchg
repnz
mov
loop
and
ins
and
xchg
cmp
pop
retf
or
jmp
inc
loopne
jmp
sbb
push
ds
sub
jno
add
inc
nop
out
test
add
(bad)
sar
outs
(bad)
aad
data16
js
jns
repz
loopne
and
rcr
jmp
or
dec
fcom
pop
ret
or
hlt
or
mul
mov
daa
jbe
test
xchg
and
xchg
sub
pop
inc
mov
pop
adc
test
imul
fwait
or
xor
push
and
push
ins
in
mov
int3
sub
sbb
jns
cvttps2pi
test
ds
jl
xchg
cmps
or
cmp
jbe
adc
inc
jns
scas
fst
add
push
test
loopne
out
mov
call
mov
mov
lock
inc
std
jo
pop
or
mov
mov
test
fistp
fistp
sti
sub
cmovb
aam
stos
dec
ins
xlat
arpl
sbb
or
jb
cmp
push
jno
adc
inc
retf
xchg
loopne
mov
retf
ror
hlt
mov
call
or
mov
fstp
adc
bound
inc
inc
mov
jae
cwde
jp
jmp
ss
(bad)
and
inc
les
mov
xchg
popa
scas
outs
in
fisubr
or
jg
ficom
stos
jae
repz
mov
rcr
cwde
xchg
shr
iret
jae
(bad)
xchg
inc
xchg
repnz
dec
jne
xchg
mov
sar
mov
mov
sbb
mov
ds
mov
neg
int
hlt
pop
mov
daa
sbb
and
mov
scas
push
in
push
fcmovb
int
xor
pop
mov
pop
xchg
iret
aam
das
mov
mov
inc
(bad)
cmps
or
cmp
pop
mov
arpl
jmp
in
xor
int
lods
xor
mov
loope
mov
call
push
pop
or
clc
xchg
stos
sbb
fnstsw
lahf
dec
inc
and
adc
mov
ins
cdq
lds
xchg
or
inc
movs
imul
cli
inc
das
xchg
icebp
sub
stc
ror
repz
(bad)
jg
pop
cmp
or
dec
inc
test
sahf
retf
adc
dec
mov
pop
call
mov
hlt
leave
sub
fadd
sbb
mov
fisubr
ret
xchg
lahf
xchg
mov
adc
cmp
sub
imul
dec
popf
je
ss
xor
or
cs
pop
adc
xor
stos
bound
mov
pop
bound
loope
je
(bad)
add
frstor
repz
mov
in
push
not
ss
jl
jae
push
mov
ins
push
pop
adc
or
jo
sub
pop
shl
or
in
cmp
ins
stos
inc
mov
clc
cmp
mov
cdq
mov
push
cmp
push
test
cmp
inc
hlt
cmovns
mov
retf
sbb
fld
push
cdq
or
inc
shl
cmp
retf
repnz
sub
xchg
jb
test
imul
xor
or
aad
cmp
pop
cs
push
addr16
mov
add
data16
loop
push
add
bound
idiv
jle
gs
inc
retf
jbe
xor
loope
pushf
inc
inc
sbb
cmove
inc
or
in
inc
jmp
call
mov
in
jbe
dec
imul
test
cs
int3
scas
pop
ror
stos
retf
das
into
test
xor
dec
test
es
jb
cmp
mov
clc
les
push
js
neg
mov
mov
movs
gs
inc
in
sar
scas
add
mov
daa
xchg
repnz
retf
and
push
pop
out
bnd
pop
jmp
fstp
jl
mov
cmp
adc
push
push
add
cmp
retf
jmp
hlt
jo
out
mov
mov
fadd
dec
das
and
sti
push
mov
push
cld
add
lods
mov
xlat
jbe
in
sar
call
stc
arpl
cwde
adc
adc
mov
rcr
popf
push
popa
mov
adc
pop
sahf
ins
dec
or
sub
pop
lds
sti
add
mov
mov
or
push
mov
(bad)
aad
shl
imul
out
imul
adc
xor
mov
cmp
xor
xchg
mov
add
push
shl
mov
ja
hlt
jge
push
jp
add
imul
fs
mov
stos
jns
jmp
xor
mov
leave
inc
sbb
daa
mov
mov
add
in
add
adc
mov
mov
inc
add
aad
add
xchg
retf
push
dec
cmps
push
mov
add
add
lods
mov
dec
mov
outs
dec
push
add
mov
jecxz
ror
repnz
out
or
sbb
push
dec
xchg
loope
hlt
cmp
adc
call
(bad)
xchg
sub
fsubr
sub
mov
fiadd
aam
in
inc
pop
sar
push
xchg
push
fiadd
mov
rcr
jo
imul
push
xchg
jae
inc
adc
inc
sub
adc
retf
cmps
movs
mov
xchg
pushf
repnz
dec
xor
mov
sahf
shl
pushf
test
jp
divps
mov
sbb
jecxz
mov
xchg
jg
cmp
call
repnz
and
out
scas
pop
pushf
loopne
scas
mov
pusha
(bad)
jp
in
test
clc
fcomp
movs
add
rcl
or
adc
sub
cld
dec
jb
pushf
loopne
loope
shl
mov
mov
adc
mov
imul
jl
retf
movs
inc
pop
pop
fwait
jmp
aaa
shr
leave
and
cld
xchg
cwde
jge
cli
loop
cmp
pop
cmp
or
jns
mov
aaa
pop
push
cmp
loop
mov
es
imul
pop
inc
or
sahf
push
call
mov
inc
dec
xor
aad
jno
dec
xor
jno
test
test
jl
xor
sar
fcmovu
enter
stc
call
sbb
aam
xor
rcr
push
add
inc
sub
dec
and
cmp
dec
aam
les
repz
pushf
sub
mov
pop
inc
jb
pop
in
retf
adc
inc
adc
into
cli
inc
jmp
push
mov
fmul
or
fisttp
and
not
cs
push
rcr
(bad)
dec
iret
test
add
or
xchg
and
adc
mov
adc
add
hlt
inc
add
dec
bnd
sbb
inc
mov
sbb
jg
or
sub
cwde
xor
xor
pop
xchg
imul
jbe
outs
in
out
out
out
sbb
cdq
inc
ror
xchg
mov
movs
push
(bad)
int
push
inc
mov
cs
mov
(bad)
jb
jno
mov
lock
pushf
sub
cmps
or
scas
ds
mov
(bad)
jbe
add
mov
xor
or
sbb
inc
aas
cmc
adc
mov
fsub
cmp
cli
push
adc
sahf
xor
pop
je
hlt
out
pop
sbb
jne
jns
imul
lods
into
xchg
xchg
retf
cmp
in
aas
cmp
shr
push
add
cs
pop
outs
jae
sbb
inc
pusha
scas
jmp
into
fcom
hlt
mov
jno
xor
inc
das
mov
lods
cmp
ins
popf
cld
cwde
out
jle
adc
sub
aas
sahf
adc
cwde
cwde
mov
xchg
push
cwde
rol
mov
push
int3
ins
push
stos
pop
mov
mov
sub
mov
imul
pop
sub
daa
xchg
leave
mov
pop
xchg
jb
repz
jbe
sub
int
stc
sahf
jae
add
inc
or
mov
cs
mov
test
xchg
fcomp
xor
mov
outs
pop
pop
push
push
xchg
lods
sbb
cmp
ret
leave
adc
into
jp
and
or
repnz
mov
mov
jns
mov
push
xchg
sbb
int
(bad)
pop
leave
xor
push
xchg
cdq
repz
push
mov
fiadd
frstor
mov
or
(bad)
pop
aam
std
dec
not
or
pop
loopne
mov
mov
adc
in
add
mov
inc
int3
retf
sbb
aam
add
movs
sbb
adc
xchg
add
push
jge
dec
xor
sbb
push
push
iret
fld
or
add
cmps
push
cmp
ret
inc
mov
test
pop
shl
lock
jecxz
mov
mov
fcom
in
pop
inc
cwde
adc
jb
cmp
pop
scas
test
daa
mov
stc
retf
hlt
or
not
dec
fwait
mov
(bad)
(bad)
ja
pusha
repz
push
sub
push
push
(bad)
into
push
xor
popa
cdq
add
pop
repnz
xchg
lea
mov
xor
fistp
pop
push
mov
shl
mov
dec
add
adc
clc
push
adc
das
cwde
mov
push
sbb
popf
fsub
push
dec
js
dec
cmps
sbb
gs
sti
out
sbb
dec
jnp
retf
sti
addps
and
or
rcr
retf
jge
and
popa
retf
lods
in
jns
push
test
repz
sub
dec
out
and
and
mov
stc
das
sub
mov
jnp
xor
mov
pushf
js
pop
push
icebp
outs
add
pop
lock
fs
add
mov
fistp
mov
enter
dec
mov
or
cmps
(bad)
adc
rcr
sbb
sbb
popa
outs
cmps
scas
dec
xchg
push
mov
fs
mov
sbb
xchg
(bad)
push
add
lea
dec
jmp
call
mov
mov
popa
rol
dec
dec
mov
ss
mov
jbe
std
xchg
test
push
sbb
push
loop
aaa
push
mov
xchg
sub
jno
sub
shl
xor
fdiv
and
sti
pusha
xchg
push
ins
stos
(bad)
adc
mov
cmp
jae
mov
and
inc
out
pop
xchg
adc
jbe
ds
cmp
aad
sbb
inc
mov
jno
test
pop
ss
loop
dec
fadd
dec
ret
xor
xchg
cmps
mov
popa
cmc
adc
jp
pop
call
adc
mov
xor
test
fstp
and
cmp
xchg
jg
add
mov
ror
or
mov
xchg
jne
scas
cmps
jno
fnstsw
lock
call
sbb
sub
lods
(bad)
lahf
cmp
or
or
add
xchg
in
ds
mov
mov
sub
pop
scas
in
cmp
outs
shl
mov
inc
add
mov
cmp
fst
aam
scas
pop
int
jnp
jmp
lock
or
mov
sbb
inc
std
cld
(bad)
cmp
dec
jmp
push
ror
mov
sar
adc
mov
dec
sti
xchg
dec
mov
adc
div
shr
pop
xor
cmp
outs
fnsave
push
jb
lahf
jg
enter
mov
xchg
jnp
sub
xor
(bad)
cmp
pusha
mov
loope
shl
icebp
sub
adc
push
sub
clc
mov
test
inc
idiv
test
loopne
pop
pushf
out
and
push
int
push
jne
mov
out
test
rcr
dec
lods
clc
dec
mov
cmp
mov
outs
push
rcr
in
popf
lahf
popa
jmp
ret
out
cld
fistp
adc
out
out
xchg
bound
stos
jmp
dec
mov
(bad)
push
in
ins
iret
ins
out
movs
mov
(bad)
xor
shl
imul
test
rcr
pop
or
dec
sub
scas
(bad)
stc
out
jge
dec
push
and
push
movs
add
imul
jl
mov
and
out
cmp
pop
js
test
cld
ins
mov
imul
adc
or
mov
cwde
(bad)
or
call
cmp
and
icebp
xchg
pop
aaa
(bad)
in
adc
inc
test
popa
paddq
stc
dec
test
mov
in
mov
mov
mov
movs
nop
les
cli
adc
add
loope
and
jmp
mov
mov
sysret
shr
mov
ins
fs
repnz
add
nop
or
xchg
add
or
mov
stos
mov
in
dec
mov
dec
mov
mov
pusha
sbb
pop
imul
ret
dec
or
js
adc
cmps
nop
icebp
cmp
adc
cs
loopne
lea
les
pop
scas
mov
dec
add
add
dec
(bad)
mov
mov
cs
jb
jae
icebp
dec
(bad)
cmc
loope
push
dec
hlt
mov
sub
(bad)
inc
fs
outs
xchg
xchg
cmp
dec
add
lock
inc
jecxz
inc
mov
jmp
inc
pop
cmp
pushf
stc
nop
mov
and
(bad)
call
or
test
cmp
pusha
out
ret
xlat
and
and
fsubr
int
lea
sti
cmp
or
pop
fimul
and
jne
cmp
xchg
aas
rcl
ja
mov
sub
xchg
cmp
imul
add
inc
mov
dec
in
sti
cs
inc
cld
fs
scas
hlt
ins
dec
hlt
repz
fst
xlat
add
pop
in
jb
mov
cmp
imul
lahf
out
js
jae
dec
jo
and
or
adc
fisub
mov
ficomp
adc
adc
mov
pop
inc
(bad)
je
sbb
jnp
jmp
cmp
scas
mov
adc
nop
(bad)
push
out
jne
not
push
aas
loope
bound
pushf
cs
jae
mov
clc
leave
pop
xchg
adc
inc
jno
mov
or
sbb
push
cmc
sbb
js
aaa
inc
dec
leave
xor
cdq
jmp
je
cmp
ret
push
jo
fadd
fadd
fsubr
cmc
cs
mov
iret
or
movs
int
cwde
test
retf
pop
stc
ins
rcl
push
jno
cmp
mov
ins
mov
std
outs
mov
leave
fnstcw
and
dec
push
or
test
stos
jg
es
test
mov
sub
push
sbb
clc
fdiv
rcl
mov
xor
cmp
jno
test
mov
jmp
ret
sahf
mov
xor
outs
je
cmp
out
sbb
and
shl
inc
movs
iret
je
or
call
jmp
imul
rcr
scas
jl
(bad)
jmp
and
ja
sti
sub
mov
and
imul
lock
(bad)
push
mov
lahf
push
fbstp
fst
ss
cmp
xchg
mov
nop
ret
dec
fiadd
fwait
cld
ins
fist
int
stc
push
(bad)
sub
dec
dec
arpl
sbb
test
leave
sbb
dec
icebp
jmp
cmp
int3
jecxz
(bad)
adc
(bad)
pop
adc
cmc
push
pushf
imul
or
movs
imul
cld
mov
test
outs
pop
cs
outs
xor
loopne
cld
mov
sbb
je
jno
call
pusha
mov
std
mov
addr16
stos
inc
sub
popa
and
jl
lea
enter
sub
adc
imul
sbb
cmp
add
inc
dec
push
mov
xor
cli
push
push
std
pop
pop
popf
movs
je
mov
lahf
shr
fidiv
call
dec
xchg
aas
aas
(bad)
mov
leave
cmp
push
xchg
pop
xor
dec
jnp
(bad)
repz
pop
imul
pop
fcmovb
add
repz
aam
loope
frstor
test
jle
test
outs
pop
xchg
mov
sbb
xor
or
test
pop
xchg
jmp
push
sbb
popf
movs
push
jmp
and
rcr
jnp
inc
lods
sub
fiadd
jbe
es
mov
cmps
addr16
pop
(bad)
retf
xchg
mov
xchg
aaa
(bad)
cli
mov
in
sub
jne
hlt
rcr
ins
(bad)
mov
ficomp
and
xchg
add
adc
dec
retf
jle
push
scas
sbb
dec
pushf
or
and
fcom
jo
jecxz
sub
push
pop
jbe
sbb
and
sub
push
arpl
(bad)
int
fild
(bad)
aaa
mov
xor
jne
sub
icebp
daa
inc
dec
pushf
pop
and
mov
add
jae
sbb
sub
aam
stos
and
xchg
mov
xchg
pusha
xchg
pop
(bad)
out
and
xchg
les
(bad)
test
mov
pop
aam
sqrtps
pop
mov
stos
hlt
or
sbb
ja
xchg
daa
mov
adc
xchg
mov
jle
and
bound
lea
outs
pop
lea
(bad)
fisttp
mov
test
mov
cmp
mov
and
leave
popf
arpl
sub
test
js
sahf
jno
mov
ins
xchg
dec
adc
loop
sub
inc
retf
adc
outs
push
sbb
xor
rol
dec
cld
or
in
in
jp
test
adc
mov
sub
inc
fst
sbb
and
sub
outs
push
(bad)
mov
mov
jge
cld
cli
mov
jne
and
or
imul
inc
push
fist
cli
pusha
cdq
and
cmp
add
je
xchg
lods
sbb
stos
pop
int3
les
pop
sbb
mov
mov
ins
push
into
push
adc
fbstp
xor
cld
adc
test
push
xchg
xchg
cmp
adc
xor
adc
(bad)
cmc
cmp
mov
outs
cwde
jmp
in
aad
mov
inc
push
call
repz
cli
std
add
sub
stos
sbb
push
mov
and
sbb
sbb
out
in
sahf
out
mov
jp
jmp
pop
lods
dec
pop
jmp
mov
dec
enter
outs
dec
mov
inc
mov
push
fsub
sahf
sub
mov
fisubr
inc
fwait
sar
aas
xchg
lods
ret
sub
adc
push
(bad)
call
pop
mov
mov
pop
mov
lea
jo
xchg
fnsave
stc
into
dec
call
adc
ins
ja
mov
sub
and
mov
nop
aam
(bad)
mov
dec
imul
enter
and
icebp
lahf
frstor
jno
jl
xchg
and
int3
retf
inc
repz
dec
add
or
inc
add
pop
cwde
push
pop
mov
leave
jl
push
clc
xchg
leave
fidiv
pop
adc
dec
xchg
aad
cwde
push
ja
cli
addr16
in
sbb
test
cmp
mov
enter
sbb
cmp
sbb
out
retf
in
cmp
mov
in
jl
cmp
fdivr
fdiv
jo
mov
mov
and
push
cs
push
adc
cs
and
or
sub
scas
push
ss
add
(bad)
cmovp
jmp
stc
dec
pusha
mov
repz
mov
clc
fdivp
clc
mov
movs
jmp
fs
retf
loope
cmp
ins
aam
sub
(bad)
xchg
xchg
or
jl
nop
ror
into
inc
and
push
retf
xor
push
das
int3
and
ss
ja
jl
out
test
push
mov
dec
sbb
lods
xchg
cmp
(bad)
push
inc
lods
cmp
data16
xor
or
or
xor
mov
sbb
aas
adc
adc
xchg
in
xlat
add
sahf
push
icebp
outs
sbb
cmc
add
push
sar
and
pushf
mov
dec
or
stos
stos
sbb
in
aaa
jbe
adc
xor
pop
and
fild
add
mov
cmc
lahf
mov
or
or
jmp
(bad)
cmp
retf
stos
dec
inc
and
jmp
iret
fs
data16
out
leave
loope
xchg
stos
inc
mov
dec
outs
test
jae
icebp
adc
pop
ficom
fsubp
(bad)
dec
std
mov
cs
ds
aad
xor
jecxz
in
sub
in
int3
push
pop
mov
cmp
push
jo
(bad)
jle
push
sbb
bswap
mov
jmp
add
jne
adc
xchg
dec
leave
cmp
pusha
xor
popf
scas
and
shr
fnstenv
mov
sbb
mov
icebp
retf
pop
test
nop
or
jmp
out
loope
outs
push
int
and
pushw
outs
adc
sar
add
fstp
(bad)
sbb
scas
and
xchg
sub
sbb
cmps
stc
sub
sub
xlat
mov
mov
xchg
test
cmp
mov
jge
dec
mov
push
jmp
(bad)
test
push
cli
and
shl
pop
movs
or
cs
xor
jne
inc
mov
sub
and
popa
mov
fs
(bad)
jp
jmp
inc
mov
dec
nop
add
xchg
shr
xlat
jnp
out
cmp
mov
or
jg
scas
add
clc
js
cmp
pop
pop
loope
std
in
mov
cdq
add
aaa
shl
jecxz
int
in
sbb
(bad)
(bad)
mov
add
in
inc
call
dec
loope
pop
push
pop
dec
lea
add
cli
sub
fist
cmp
cld
movs
repnz
scas
and
jmp
xor
inc
mov
fsubr
mov
sub
pop
into
mov
out
fst
and
out
aad
int
arpl
in
aad
std
or
sbb
inc
dec
mov
das
aam
in
xchg
xchg
(bad)
lea
or
push
test
sub
sub
push
loopne
std
or
add
and
inc
(bad)
sbb
gs
jb
dec
iret
mov
mov
clc
(bad)
gs
lods
jae
add
jmp
inc
repz
mov
xchg
xor
cmps
push
fnstsw
fnstcw
addr16
xchg
jmp
aam
iret
cmp
push
dec
cmp
add
mov
repz
pushf
(bad)
fstp
jnp
faddp
sahf
adc
sahf
add
mov
es
call
push
adc
clc
cwde
xchg
push
xchg
ror
in
iret
(bad)
rol
test
shr
lahf
pop
cmps
int3
mov
mov
and
stc
arpl
add
jb
ins
jle
call
call
sar
daa
arpl
das
jo
mov
inc
pop
lods
repz
push
test
fsubr
std
movs
jbe
push
cmp
hlt
popa
sub
cmps
add
cmp
out
in
aaa
mov
fisub
iret
mov
push
call
outs
lods
mov
sbb
add
fisttp
dec
sbb
xor
mov
stc
lods
dec
sbb
mov
leave
mov
movs
xchg
test
xchg
clc
in
lods
das
dec
dec
and
push
mov
in
cmp
scas
jge
pop
fwait
(bad)
es
inc
sbb
lahf
arpl
mov
(bad)
aaa
xor
push
in
shl
les
mov
loopne
in
hlt
int3
mov
out
sbb
add
jbe
pop
lods
inc
in
cmps
cld
sti
aas
dec
and
cmp
sub
push
jg
mov
ja
inc
std
das
int
push
imul
stc
popa
adc
sub
movs
mov
pop
jmp
(bad)
or
or
out
dec
popa
sbb
das
add
push
fcmovb
sahf
push
xor
mov
adc
jmp
in
addr16
out
jo
lock
mov
jl
out
ret
int3
repnz
ins
push
scas
ins
xchg
je
push
sub
dec
dec
dec
sub
(bad)
or
mov
in
sbb
mov
shl
clc
fsubr
dec
ret
movs
ins
es
popa
xor
sub
in
push
enter
retf
test
xchg
cmps
xor
push
jno
out
ror
into
push
loopne
cdq
and
cmc
call
jns
js
and
jae
xchg
pushf
xchg
push
addr16
sti
inc
cmp
xchg
shl
jno
imul
mov
cwde
test
pop
scas
sbb
loope
and
loope
adc
repnz
gs
sbb
lahf
push
add
fist
push
popa
or
aas
and
jl
inc
cwde
mov
xchg
into
or
xchg
mov
push
std
sti
retf
jmp
pop
add
add
push
add
mov
sub
mov
jge
js
cli
jo
test
hlt
pop
inc
dec
jbe
xchg
jge
mov
movs
jns
in
adc
push
ror
and
jl
lods
fstp
hlt
mov
lds
in
test
jnp
adc
xchg
lock
jae
sbb
xchg
fwait
pop
mov
aam
xor
in
jge
mov
outs
xlat
rol
repz
mov
repz
or
mov
xchg
fldcw
add
dec
iret
sub
push
je
mov
arpl
pop
frstor
adc
fstp
mov
pop
pop
cld
loop
loope
shr
mov
cmp
cmp
xor
scas
xor
and
adc
movs
(bad)
rcl
dec
mov
les
ds
and
clc
inc
(bad)
xor
(bad)
sbb
ror
and
adc
adc
shl
push
cmp
scas
mov
int3
xchg
mov
pop
call
std
jmp
inc
push
fwait
aad
xchg
scas
(bad)
mov
mov
dec
arpl
rol
mov
push
push
and
xchg
xchg
ficomp
xlat
cmp
in
mov
out
push
cmps
movs
jg
movs
mov
imul
sti
gs
xchg
push
fisub
xor
out
sti
cmp
mov
sti
inc
loopne
cmps
sub
dec
outs
movs
cmps
test
out
add
gs
inc
push
jge
inc
xchg
or
ss
pop
test
ja
or
adc
xchg
sbb
mov
(bad)
call
cmp
jo
jmp
clts
fidivr
xchg
std
addr16
scas
test
or
retf
push
out
inc
add
leave
aaa
push
js
addr16
jle
call
push
je
not
xor
mov
rol
xchg
dec
bound
icebp
shl
(bad)
in
push
xchg
pop
inc
jmp
add
jle
hlt
leave
xor
inc
mov
ins
jmp
jge
jle
pop
jl
les
leave
sub
jmp
cmp
das
dec
leave
cmp
(bad)
mov
jmp
aam
and
jo
sti
sbb
dec
xchg
push
ror
int
into
adc
inc
(bad)
push
mov
arpl
push
test
push
sbb
scas
lods
jecxz
es
jno
aas
xchg
addr16
jbe
or
dec
stos
(bad)
adc
lods
je
les
repnz
mov
push
out
and
loop
rol
out
push
push
adc
or
into
cmps
fadd
push
push
mov
out
sbb
ror
pop
mov
cmp
mov
ja
and
and
jl
dec
test
rol
inc
inc
movs
das
cmp
popa
push
std
xchg
imul
lahf
sbb
xor
mov
jno
aad
sbb
jb
std
les
pop
or
call
push
xchg
add
and
xor
inc
sbb
mov
push
adc
int3
das
cmp
mov
inc
push
ret
imul
xor
jecxz
sub
xchg
movs
ret
sub
mov
add
inc
lods
into
scas
xchg
xchg
adc
fucomi
lahf
(bad)
adc
pushf
sub
cmp
cs
add
pop
ret
(bad)
xor
jg
scas
fdivr
push
mov
xor
or
dec
loope
xchg
xor
test
and
sub
(bad)
lock
adc
lahf
add
retf
cdq
push
inc
dec
or
push
loopne
test
fst
call
pusha
loopne
popf
lods
sub
popf
push
(bad)
sub
xlat
inc
in
and
or
and
pop
pop
and
push
movs
imul
enter
(bad)
mov
pop
fist
(bad)
xor
adc
sbb
stc
mov
es
div
loop
dec
jmp
arpl
loope
xchg
adc
mov
out
cli
inc
or
lea
sahf
xor
scas
xor
pop
sbb
dec
pop
out
mov
lahf
je
(bad)
push
fiadd
lahf
push
repz
add
lods
retf
mov
mov
jb
leave
cld
outs
jne
stos
add
push
and
adc
lods
pop
pop
aad
movs
inc
and
loopne
stc
(bad)
fdiv
jns
neg
rcl
mov
rep
add
into
xchg
pushf
pop
jp
clc
adc
cmps
xchg
jmp
push
jo
iret
hlt
les
xor
mov
scas
hlt
sub
jns
xor
xor
and
jmp
or
mov
cmp
jne
sbb
xchg
cmp
(bad)
mov
mov
pop
cmp
les
mov
bound
leave
mov
push
jbe
fiadd
call
pop
mov
add
stos
sub
dec
adc
sbb
in
cwde
mov
and
jecxz
imul
lock
add
repz
push
ss
stos
cmps
mov
xchg
scas
mov
mov
xchg
sar
adc
les
cld
xor
cdq
leave
lock
jo
sub
(bad)
dec
mov
das
sub
and
loop
(bad)
stos
pop
in
ds
dec
sahf
xchg
retf
scas
popa
mov
loop
ja
cmp
ja
shl
(bad)
das
fstp
loope
cmp
mov
pop
call
mov
scas
stos
xor
scas
sbb
imul
mov
add
repz
adc
push
xchg
jae
cmp
pop
pop
pop
inc
in
iret
in
loop
pop
sub
sub
cld
sub
push
xchg
and
hlt
stc
aam
jp
push
mov
je
fdivr
ss
icebp
out
bound
mov
mov
loopne
push
add
ds
hlt
stos
daa
loope
mov
xor
mov
enter
int3
or
bound
cs
or
les
nop
ror
push
dec
pop
add
dec
inc
std
or
mov
push
aaa
mov
pushf
mov
adc
dec
cmp
dec
fucomip
and
inc
iret
push
xchg
out
dec
or
cmp
cmp
inc
jmp
lahf
xchg
jo
inc
xchg
call
out
and
push
sbb
fadd
imul
add
pusha
lods
loope
fldcw
and
mov
jne
cmc
rol
ds
add
adc
lods
push
not
jmp
jns
xchg
fadd
aam
loope
mov
repz
adc
push
aam
lods
test
xchg
sbb
push
xchg
mov
pop
push
bound
cmp
(bad)
sub
shl
jle
push
int3
mov
outs
adc
outs
sub
repz
push
xchg
xchg
ficom
mov
xchg
inc
mov
adc
mov
pop
scas
les
repz
and
das
arpl
aam
and
jmp
loop
mov
and
gs
mov
jge
cmp
ins
popa
addr16
push
out
aam
xor
xchg
dec
add
(bad)
inc
(bad)
mov
xchg
(bad)
and
xchg
cmp
mov
rol
cmp
mov
adc
xor
xchg
jge
jge
xchg
cmps
lea
mov
aas
mov
bound
inc
loop
aam
jb
ins
or
sahf
push
mov
stos
inc
xchg
lods
(bad)
dec
xor
xchg
mov
stos
xchg
sbb
sti
adc
cmp
cmp
(bad)
mov
int3
inc
fnstcw
mul
jne
ret
retf
fidivr
xor
adc
or
or
and
dec
mov
call
ins
sbb
push
popa
jne
sbb
and
cmc
cwde
jmp
shl
push
into
ficomp
ins
pop
push
ror
mov
pop
(bad)
stos
push
push
(bad)
mov
sub
mov
repz
sahf
xlat
addr16
hlt
inc
cmp
adc
adc
mov
bound
in
out
push
in
dec
aad
xor
inc
sub
inc
sbb
lds
cmps
clc
enter
in
jnp
jne
mov
or
int
int
in
xchg
ds
push
xor
adc
mov
add
shl
and
(bad)
mov
mov
imul
ss
mov
xlat
inc
pusha
mov
dec
jge
xlat
xor
loop
aad
mov
sbb
(bad)
xor
cwde
ss
push
dec
mov
aaa
scas
xlat
imul
mov
cmp
js
aas
xchg
push
pop
fstp
cdq
push
dec
not
mov
jecxz
aam
inc
sbb
jnp
(bad)
outs
and
es
dec
(bad)
and
push
inc
jbe
add
pop
jmp
mov
int
mov
sbb
rcr
and
sar
fld
neg
xor
dec
fimul
cmp
pop
mov
and
in
sub
push
cdq
adc
sbb
retf
jo
shl
lods
(bad)
out
and
daa
imul
mov
mov
inc
outs
and
push
mov
sbb
mov
femms
es
add
push
pop
stos
lahf
rol
fwait
aam
jge
dec
mov
lds
lods
xor
cli
cmp
jp
xchg
adc
rcr
dec
ds
int3
not
lahf
cmp
aaa
sar
mov
into
xchg
sbb
ins
mov
inc
and
add
inc
push
sahf
mov
icebp
dec
jo
je
test
outs
mov
fwait
fwait
xchg
aad
fucom
scas
or
ret
sub
daa
mov
repnz
sub
inc
(bad)
out
popa
and
push
jb
(bad)
mov
pop
or
lods
jmp
xor
test
enter
repz
adc
mov
or
lods
jno
cmp
or
nop
jnp
repnz
int
pop
stos
cmp
mov
test
inc
add
stos
mov
xor
pop
jecxz
scas
add
jne
in
int
pop
or
(bad)
jo
jns
adc
push
xchg
push
addr16
test
ret
jno
jo
pop
sbb
cwde
jp
cwde
in
shl
pop
cmps
(bad)
mov
(bad)
jbe
ja
into
dec
shr
mov
cmp
in
xor
sub
mov
sbb
(bad)
mov
dec
xor
das
xlat
dec
clc
mov
add
adc
jne
fnstsw
imul
ror
mov
adc
add
sahf
(bad)
scas
in
or
add
and
jl
push
clc
jmp
ret
jne
shr
retf
dec
sub
inc
or
call
leave
mov
push
bound
dec
and
stos
add
add
gs
movs
mov
lock
jecxz
jmp
or
stos
mov
pop
cmps
inc
and
gs
sbb
stos
adc
arpl
cmp
sahf
ins
popf
mov
leave
mov
arpl
jno
lds
xor
out
push
hlt
add
call
xchg
shl
out
push
arpl
test
mov
xchg
mov
cmp
icebp
mov
sub
clc
retf
adc
inc
dec
pop
cmp
(bad)
fs
call
fisub
sub
xchg
dec
aas
les
out
mov
pop
outs
loope
cwde
pop
add
xchg
out
sub
sbb
sbb
jbe
arpl
in
aas
mov
cld
movs
es
sbb
test
or
dec
arpl
xor
(bad)
fadd
(bad)
xchg
push
pop
hlt
inc
stos
rcl
push
push
jecxz
or
pop
dec
repz
mov
push
int
fcmovbe
xchg
(bad)
hlt
xchg
push
cmps
retf
pop
xchg
stos
mov
(bad)
out
adc
fadd
and
jo
neg
jb
addr16
cmp
and
jg
pop
(bad)
(bad)
(bad)
stos
or
cdq
mov
call
xor
mov
lea
fwait
(bad)
mov
sahf
or
jne
out
rcl
xor
xchg
jnp
dec
inc
push
aad
cmp
mov
xor
popf
jg
inc
sbb
out
adc
test
and
and
lods
or
sub
mov
sub
dec
pop
int
inc
imul
push
iret
scas
xor
mov
mov
mov
in
test
aas
div
mov
add
pop
clc
pop
fwait
scas
or
add
mov
xchg
mov
mov
fcmovnu
addr16
push
jecxz
hlt
adc
sub
rol
adc
div
push
mov
test
pusha
cmp
bndstx
pop
dec
push
out
mov
sub
outs
(bad)
movs
in
xor
shl
push
add
scas
and
das
fisttp
neg
mov
daa
jg
js
lock
pop
mov
(bad)
push
xchg
arpl
push
repnz
pop
push
lock
pop
(bad)
cs
loope
and
stc
repz
es
cmp
jns
in
xchg
out
lea
push
pop
jne
sar
ins
ins
push
add
cwde
inc
jne
cmp
cmps
and
stc
cwde
xor
jns
sub
ds
mov
push
pusha
daa
movs
test
pop
sbb
jo
ret
jbe
loope
fiadd
sbb
mov
sbb
scas
in
mov
jns
in
sub
in
sbb
daa
pusha
clc
push
shl
sbb
ss
or
cdq
mov
cli
aam
movs
in
aam
push
mov
jl
sbb
xor
in
sbb
adc
scas
cli
pop
add
adc
push
call
mov
(bad)
inc
dec
adc
lds
ja
adc
pushf
add
cmp
jae
fbld
fcom
cli
adc
iret
scas
test
std
arpl
loopne
fild
inc
pop
mov
fld
int
fild
cmp
mov
add
inc
lods
outs
and
xor
inc
int3
enter
ficom
pop
xchg
jne
inc
or
jg
pop
lods
dec
jg
adc
icebp
push
pushf
push
mov
(bad)
mul
clc
aas
xchg
xchg
xchg
(bad)
mov
fdiv
call
add
jne
mov
pop
xchg
cld
sbb
test
sub
pusha
adc
jg
cmp
add
test
mov
arpl
je
in
cmp
stc
mov
repnz
push
(bad)
addr16
dec
mov
test
jb
mov
and
lds
xor
setnp
cld
or
xor
sub
repnz
jle
pop
out
ret
stos
xor
add
xchg
in
pop
sbb
cwde
inc
sti
pusha
cmp
stos
je
mov
leave
sbb
imul
push
into
push
cli
and
or
in
call
loop
iret
dec
(bad)
mov
mov
movs
push
pop
fucomp
in
test
mov
xor
fs
xchg
mov
dec
or
and
xor
movs
add
call
or
shl
out
jne
out
xchg
(bad)
rcr
scas
xchg
sbb
sub
hlt
loop
test
das
jmp
scas
out
idiv
loopne
jmp
pop
enter
data16
pop
cwde
pop
add
or
mov
dec
mov
shl
call
jecxz
sbb
xor
jecxz
ficom
popa
lahf
shl
out
mov
adc
aas
and
jle
cdq
dec
sbb
out
jle
pop
ss
fs
inc
mov
dec
mov
outs
test
int
(bad)
test
lock
and
sub
(bad)
add
lods
dec
cmp
bound
int3
call
cmp
imul
stos
sub
or
sahf
add
adc
pop
repnz
push
xor
ret
adc
not
fbstp
xor
and
mov
dec
mov
sbb
mov
ins
jg
daa
pop
arpl
sahf
xchg
jns
aas
int
jne
pop
pop
xchg
lods
adc
imul
xchg
sub
xor
fldlg2
dec
enter
or
out
adc
jbe
pop
add
xor
outs
mov
pop
lds
cmps
sub
ficom
mov
fmul
shl
gs
xlat
add
loopne
add
xchg
out
icebp
pop
jecxz
cdq
xor
pusha
movs
das
adc
and
pop
sub
pop
cmp
cmp
pusha
adc
iret
cwde
pop
mov
sub
jnp
addr16
push
les
frstor
mov
out
mov
xchg
aam
sbb
cmp
out
jp
out
cmp
fist
xacquire
sbb
movs
shr
push
add
push
or
pop
nop
test
inc
adc
push
mov
inc
pop
(bad)
cli
and
mov
inc
sbb
add
cmp
xchg
add
int3
out
xor
lods
movs
pop
mov
ffree
cmps
stos
fdivr
rol
sbb
jge
call
sbb
imul
add
mov
or
jg
sar
lock
sbb
dec
rol
test
xor
dec
jle
aam
sbb
out
pop
jp
sub
dec
ins
cmp
popf
shl
mov
jmp
call
fisttp
enter
call
pop
out
inc
popf
push
fldenv
jb
fcom
xchg
sbb
pop
hlt
adc
popa
xchg
adc
adc
stos
shl
scas
stc
sub
dec
or
jmp
out
scas
arpl
push
push
movs
mov
out
and
loope
sbb
mov
pop
loope
mov
lahf
je
pop
inc
jo
fcomp
sbb
ror
and
or
pop
dec
push
mov
gs
xchg
add
ss
sbb
and
lods
sub
push
push
inc
pusha
mov
daa
sbb
ja
pop
cdq
iret
pop
cmp
jp
out
popa
mov
push
add
hlt
test
cmps
pandn
pusha
repnz
sbb
pop
inc
ret
call
jge
xor
xor
psrlq
sub
cmc
mov
lahf
(bad)
cmp
cmp
jns
inc
inc
(bad)
call
xchg
test
ins
aaa
into
sbb
add
fisttp
outs
fsubr
scas
shl
mov
iret
mov
scas
adc
outs
dec
fadd
stc
fs
(bad)
mov
aad
adc
dec
in
test
sbb
mov
dec
push
(bad)
pop
out
mov
inc
xor
pop
mov
icebp
pusha
sbb
mov
push
sbb
or
mov
and
ins
in
mov
cmc
cmp
mov
inc
jo
dec
ja
xor
loopne
push
in
aam
or
call
int
and
sti
push
jmp
xchg
scas
dec
push
or
mov
jns
inc
mov
add
and
lahf
aad
mov
(bad)
adc
mov
test
inc
ds
mul
cmc
leave
clc
out
out
aas
push
cmps
mov
in
repz
movs
lea
loopne
xchg
and
es
mov
push
push
rcr
das
test
cmp
add
mov
lods
mov
cmp
aaa
xchg
mov
mov
dec
mov
mov
bound
imul
sti
mov
ror
jle
pop
inc
popf
cwde
imul
mov
fisubr
pop
les
sub
loopne
repnz
pop
mov
in
idiv
xchg
push
cmp
lea
sub
out
sub
ins
inc
std
xchg
inc
fisubr
sbb
ja
ror
push
popa
xchg
je
sub
aas
in
aas
cld
pop
lock
out
mov
jb
in
sbb
cld
jmp
or
xchg
inc
jp
pop
into
repnz
popa
out
dec
out
adc
sti
clc
popa
lock
push
sbb
push
adc
fs
push
adc
loope
aad
test
inc
mov
inc
call
add
enter
cmps
jo
xor
sbb
adc
xor
mul
(bad)
xchg
(bad)
adc
push
xor
xlat
adc
adc
ins
sahf
jbe
jb
scas
mov
mov
jnp
stos
out
inc
int3
xor
out
cwde
xchg
and
lock
xchg
rol
xchg
sbb
cwde
xlat
fild
cmp
shl
adc
xchg
cmp
mov
jo
int3
nop
jle
div
rol
fwait
in
cmc
mov
pushf
fs
xor
rol
jbe
inc
sbb
in
xchg
jecxz
xchg
sar
popf
adc
xchg
push
mov
mov
mov
cmp
xor
adc
dec
movs
dec
jnp
idiv
les
clc
sub
fld
out
and
mov
mov
mov
(bad)
in
pop
jno
(bad)
loopne
pop
cmc
add
push
inc
fwait
cli
add
adc
es
jae
mov
mov
loopne
icebp
pop
dec
push
cmc
adc
sub
and
and
data16
in
push
int
leave
not
mov
stos
push
adc
add
out
inc
aaa
sti
push
jmp
lock
stos
(bad)
push
shl
test
loopne
in
cmp
jmp
mov
std
sbb
cmc
cmps
cs
imul
arpl
arpl
in
and
aas
and
dec
iret
(bad)
lds
sub
(bad)
imul
inc
pop
pop
jmp
jb
and
ret
(bad)
sbb
mov
cld
or
dec
out
ins
test
pop
mov
stos
outs
push
nop
xor
mov
push
enter
push
test
pop
xchg
aam
or
and
xlat
ins
mov
pop
dec
cmp
repnz
xor
fdiv
lea
je
jmp
(bad)
push
mov
add
mov
inc
test
or
in
sar
js
jmp
pusha
lahf
ins
xchg
addr16
sub
test
into
sub
mov
ins
xchg
les
cmps
daa
das
jo
enter
xor
dec
fdiv
or
int3
lahf
and
sub
xchg
xchg
add
jg
adc
scas
lds
mov
sub
cmp
pop
dec
dec
jle
and
pop
dec
or
mov
int3
pop
fidiv
std
pop
mov
ffreep
loopne
icebp
xor
stos
(bad)
movs
jbe
jmp
imul
dec
xor
sub
and
push
and
cs
jl
sbb
or
stos
add
xor
out
shl
mov
sub
mov
out
push
lds
adc
fdivr
cmp
lea
cmp
ror
mov
push
adc
inc
ffreep
dec
repz
xchg
xor
sub
push
jb
xchg
jnp
cdq
sahf
out
push
dec
out
mov
sub
push
pop
add
push
push
test
adc
stc
je
jb
cmp
xor
dec
and
pop
jae
in
retf
jmp
ficom
fisubr
push
push
xlat
cmc
pop
sbb
push
cmp
cs
imul
shr
pusha
xlat
push
movs
cli
cwde
cwde
sub
dec
mov
dec
repnz
and
mov
add
cmp
cmp
pop
test
inc
dec
mov
xchg
push
(bad)
retf
sti
and
cmp
jno
inc
add
cmp
repnz
lods
int3
xchg
cs
std
xchg
retf
(bad)
test
mov
out
mov
movs
push
pop
cmp
and
popf
dec
sbb
xor
or
in
hlt
add
mov
into
mov
fnsave
jge
cmc
xchg
stos
jl
add
xor
sti
mov
mov
xor
jb
imul
rcr
cdq
in
inc
mov
test
stos
popa
int
lods
sbb
lock
xchg
dec
add
xchg
(bad)
cwde
cwd
mov
mov
jmp
scas
dec
and
or
cmp
inc
xlat
fsubr
in
popa
int
data16
por
imul
add
loop
cdq
jg
pushf
scas
ret
jp
sbb
and
cmc
mov
inc
mov
and
sbb
adc
and
cdq
ja
jecxz
mov
or
dec
sbb
inc
cmp
xchg
xchg
add
(bad)
(bad)
or
xchg
cmp
dec
fstp
fsubr
scas
mov
mov
jno
xor
inc
inc
fwait
dec
sbb
mov
sbb
cwde
push
je
ins
dec
outs
div
test
dec
clc
leave
pop
xchg
xchg
retf
jecxz
mov
arpl
int3
add
(bad)
mov
push
mov
(bad)
mov
bswap
sbb
jno
mov
ss
ss
ds
out
cmp
mov
adc
fdiv
cmp
mov
mov
adc
mov
(bad)
repnz
push
dec
scas
rol
out
inc
push
or
popf
inc
xlat
ret
push
cmp
pop
sbb
push
xor
arpl
fbld
aad
nop
adc
fst
ins
mov
xchg
(bad)
fucomi
xor
push
int
lods
or
pop
sbb
fisttp
popa
icebp
sub
or
pop
repz
inc
adc
push
loopne
jg
mov
fld
ss
mov
jb
ss
or
inc
fs
xchg
rcl
lds
cmp
shl
push
or
or
adc
cdq
mov
add
test
cmps
aam
arpl
shl
hlt
dec
fld
call
dec
dec
cld
retf
(bad)
pop
stos
cmps
push
push
pop
dec
int
inc
pushf
add
dec
loope
cs
out
stos
sbb
pop
adc
push
mov
push
(bad)
inc
ss
pop
pop
int3
mov
push
xchg
cmc
ret
sbb
dec
shr
ds
fsubr
cmp
rol
or
mov
cmp
ins
adc
ret
dec
mov
push
not
fld
xor
sbb
jle
xchg
add
add
mov
cmp
mov
ds
ins
jge
fs
pushf
cwde
push
add
jg
add
add
fucomp
hlt
push
std
shl
mov
sub
lds
xchg
pop
and
movs
push
pop
cmps
jg
push
dec
pushf
retf
jae
leave
(bad)
sahf
jns
xor
cmp
call
and
loope
outs
jmp
inc
fcomp
loop
add
or
mov
mov
jecxz
mov
out
je
lock
add
fimul
movs
sahf
out
in
and
lock
in
repz
inc
jb
fmul
popa
repz
clc
cmp
jmp
mov
js
scas
mov
rcr
das
mov
cwde
xchg
mov
pop
in
fsubr
popf
jmp
cmp
sub
fsub
iret
fsub
retf
retf
out
mov
push
shl
lods
inc
div
adc
jbe
xor
or
or
mov
pop
fnsave
push
cmps
xor
nop
sub
add
aas
outs
xchg
dec
icebp
(bad)
repz
test
mov
xlat
icebp
adc
jbe
push
xor
imul
es
stc
push
cmp
cmp
cmp
push
fsin
mov
dec
inc
popa
jmp
je
ror
cmp
cld
cmp
sbb
les
sub
mov
retf
popf
in
dec
or
ins
push
jle
push
mov
xor
ds
mov
ss
jecxz
test
or
lods
dec
push
dec
aaa
sub
push
mov
fisub
cmp
xor
pop
mov
pop
sub
ja
sub
add
loop
fwait
xchg
hlt
xor
adc
cmp
pop
clc
mov
xchg
xchg
push
mov
xchg
fidiv
aad
jecxz
cmp
pop
mov
inc
xchg
es
sbb
push
mov
in
add
push
push
aam
and
and
jmp
sub
gs
sub
and
add
cs
(bad)
repnz
cdq
popa
fdivr
data16
fstp
stc
loop
jg
jle
mov
stc
hlt
out
cmp
inc
push
jle
(bad)
push
pop
nop
add
add
sub
cmp
mov
fisubr
gs
adc
adc
mov
lds
pop
dec
adc
jnp
out
mov
icebp
jmp
jae
jb
sbb
mov
mov
stc
xchg
xor
jo
sbb
xor
les
pop
ja
push
ins
push
add
iret
push
and
aam
(bad)
das
(bad)
jnp
sahf
enter
test
xor
je
leave
lds
popf
ror
mov
jl
or
or
mov
ins
fild
mov
mov
mov
mov
rol
dec
fadd
adc
xchg
fucomip
(bad)
sbb
push
aam
icebp
popf
mov
or
adc
sbb
scas
adc
jns
xlat
sub
les
aam
sbb
or
das
xlat
out
loop
sti
in
xchg
sbb
dec
(bad)
xchg
movs
cmp
mov
pop
mov
repnz
push
call
adc
gs
lds
leave
jne
push
(bad)
cli
xor
push
(bad)
xchg
xor
cmc
inc
iret
stos
(bad)
dec
imul
fs
pop
pop
sbb
push
mov
gs
sbb
push
push
xor
cmp
lods
retf
jg
push
mov
push
stc
les
enter
mov
dec
push
dec
sbb
call
mov
leave
movs
jecxz
movs
or
mov
push
sahf
cwde
inc
pop
jg
idiv
or
ss
retf
icebp
jmp
inc
ret
mov
mov
push
in
jle
in
rol
push
(bad)
xlat
sbb
add
cdq
out
dec
mov
push
and
(bad)
aam
cs
mov
stc
(bad)
leave
sub
or
adc
inc
jecxz
xchg
ins
icebp
push
popf
mov
inc
mov
sbb
adc
adc
and
adc
cmps
ror
add
imul
mov
aaa
(bad)
push
inc
not
pop
add
mov
ins
test
push
push
pop
loope
repz
mov
(bad)
in
cdq
jnp
mov
xchg
popf
(bad)
call
mov
inc
stos
aaa
jmp
add
popf
into
add
push
cmp
fdiv
inc
jmp
loopne
adc
(bad)
xor
iret
fidivr
cmps
sahf
fwait
mov
out
or
hlt
xor
cmp
ds
cmp
pop
lods
or
scas
adc
sbb
mov
sub
ins
fidivr
cmp
iret
cmp
dec
(bad)
fsub
push
push
scas
cmp
jmp
mov
dec
dec
ficom
inc
lock
ins
or
fcomp
test
mov
mov
adc
add
test
rol
inc
popa
adc
push
push
pop
jge
mov
xor
mov
inc
dec
(bad)
jge
cmp
mov
add
out
sbb
lahf
xor
popa
pop
mov
hlt
addr16
cli
loop
xor
xchg
mov
mov
mov
call
jns
jns
mov
adc
ret
mov
hlt
mov
in
in
dec
test
mov
push
xlat
and
xchg
icebp
and
pushf
jnp
mov
icebp
jae
popf
add
(bad)
fwait
ins
xchg
xchg
add
das
jp
cmp
scas
jbe
cmps
pusha
ss
mov
push
loop
xor
les
push
push
test
inc
mov
xor
sub
ja
pop
pop
stos
std
xchg
ins
cmc
cdq
(bad)
shr
cwde
ja
les
sub
xor
sbb
fmul
inc
clc
push
call
dec
push
xchg
push
cmps
es
dec
push
mov
push
fs
push
push
inc
push
sub
stos
or
mov
je
and
call
pop
and
jns
xchg
int3
mov
and
and
in
rep
adc
stos
xor
outs
jbe
push
mov
jle
mov
add
pop
xchg
shl
popf
xor
ror
je
movs
addr16
and
aaa
int3
xchg
popf
cmp
pop
or
lea
test
and
enter
test
jne
mov
inc
push
fiadd
push
addr16
in
xor
pop
mov
test
jge
fldcw
cmps
stc
call
cmp
adc
mov
mov
stc
push
xor
mov
mov
push
xchg
mov
and
daa
jns
xchg
dec
cdq
dec
inc
jae
inc
dec
xlat
jmp
pop
mov
retf
shl
dec
push
jg
leave
mov
adc
ret
lahf
iret
mov
cmp
ret
add
rcl
jne
bound
push
sub
cmp
jno
push
sbb
jle
cmp
inc
dec
lea
jp
fadd
sub
jmp
xor
lahf
xchg
(bad)
mul
xor
or
shl
pop
push
push
dec
jae
or
inc
daa
cmp
(bad)
xor
mul
nop
seta
cdq
jnp
std
call
movs
dec
in
stc
inc
sbb
pop
repz
inc
popf
sub
fisubr
xchg
outs
mov
xchg
pop
inc
and
ret
inc
bsr
in
jbe
gs
(bad)
push
sbb
xchg
add
add
lods
xchg
outs
fidivr
movs
push
push
and
int
inc
je
mov
xchg
repnz
dec
movs
xor
es
aam
fdiv
cmps
(bad)
sbb
cmps
movs
and
fxch
fist
cmp
js
cmp
or
sub
ja
aam
mov
mov
xchg
popa
pop
jmp
mov
mov
jle
into
or
lods
sbb
push
add
rcl
adc
cmp
out
pop
outs
psraw
stos
dec
lahf
addr16
add
cwde
sbb
inc
retf
fdiv
fs
add
dec
mov
mov
aam
jmp
loop
shrd
test
mov
js
adc
aas
mov
aam
bnd
scas
(bad)
jns
pop
mov
xchg
dec
iret
mov
mov
push
nop
enter
and
sbb
mov
xor
mov
push
adc
cdq
mov
stos
fadd
add
jmp
cmp
popa
aas
mov
mov
dec
loope
jae
fdiv
sub
jb
and
gs
sub
fisttp
add
and
out
fmul
jecxz
xor
div
sub
stos
push
mov
or
dec
in
push
xchg
shl
cdq
and
test
push
xchg
rol
popf
lods
fwait
fwait
out
inc
xchg
mov
sub
and
fstp
sbb
inc
xor
mov
lds
push
xchg
mul
lods
pop
ret
cmp
xor
rcr
ror
ss
ds
and
push
loopne
adc
mov
loope
pop
jle
xlat
in
xor
ffree
inc
stc
jg
retf
ds
imul
frstor
jno
and
and
mov
clc
jmp
(bad)
jg
mov
fsub
or
les
mov
test
pop
pushf
cmps
jno
dec
pop
xchg
dec
sub
mov
push
retf
xor
dec
out
dec
inc
push
repnz
in
sub
mov
add
outs
popa
(bad)
jge
scas
fisttp
jmp
and
xlat
sbb
mov
jge
pop
cwde
mov
pop
aaa
xchg
xchg
xchg
or
hlt
inc
call
pop
sub
movs
mov
cli
jp
loop
scas
mov
and
in
gs
jae
mov
xlat
loop
imul
movs
jp
int3
loop
mov
jl
mov
or
mov
inc
mov
and
cdq
sbb
mov
mov
mov
sub
arpl
std
in
inc
enter
call
adc
mov
or
mov
(bad)
jmp
outs
jmp
sbb
repz
enter
jo
ret
add
xchg
pop
fisttp
dec
rcl
jmp
rol
xchg
sahf
shl
das
mov
int3
(bad)
fmul
retf
jp
pop
xor
push
and
dec
iret
push
xchg
dec
sbb
adc
jecxz
repnz
aad
retf
pop
mov
adc
push
dec
into
shl
pop
sub
js
xchg
add
pop
cmps
adc
xor
cmp
adc
sbb
pop
ror
rcr
inc
dec
ret
bound
sub
call
in
bound
outs
ins
mov
sub
sub
xor
mov
xor
adc
sbb
fxch
movs
shl
bound
jno
sub
jno
gs
jne
fiadd
out
leave
bound
inc
(bad)
aam
rcl
repz
add
dec
mov
pop
xchg
mov
mov
jle
jbe
push
call
jle
test
jmp
pop
mov
jmp
arpl
fisttp
ret
jmp
sti
mov
(bad)
cld
mov
adc
cmp
pop
xchg
cwde
jecxz
nop
cdq
mov
push
dec
popf
icebp
imul
mov
push
bnd
cdq
or
out
jecxz
stos
call
gs
mov
test
outs
fcmovbe
inc
hlt
nop
sti
and
sub
into
cmp
dec
lds
or
cdq
popa
xchg
adc
mov
sub
pop
ja
pop
add
fst
ins
ror
xor
adc
sbb
test
push
mov
pop
xchg
aam
mov
pop
sbb
mov
xchg
inc
cmps
call
xchg
jge
les
jne
dec
sub
cld
fistp
aas
mov
cs
daa
add
jmp
outs
jb
sub
push
cmp
xchg
xchg
push
pop
adc
sub
cmps
jns
xor
sbb
aas
inc
sub
test
fwait
cdq
fidivr
mov
mov
xchg
add
sbb
xchg
icebp
mov
mov
push
fwait
movnti
jecxz
outs
jge
push
and
mov
dec
sub
lods
(bad)
dec
xchg
cli
stc
inc
ja
outs
dec
(bad)
cmp
ror
es
lods
xchg
retf
test
add
test
test
dec
add
jg
retf
mov
mov
jo
in
repz
out
jmp
cmp
add
mov
dec
jne
push
mov
mov
jmp
inc
pop
jns
or
out
pop
dec
xchg
push
xchg
dec
add
test
adc
or
mov
xor
popf
xor
fcomp
mov
mov
in
imul
mov
sahf
lahf
xchg
and
sbb
push
pushf
imul
cmp
shl
das
shl
dec
movs
les
inc
cmp
out
cs
or
or
jnp
cmp
ins
pushf
jbe
or
sub
push
fdiv
aam
mov
and
outs
shr
hlt
repz
popf
pushf
fnstcw
int3
lahf
rcr
jae
outs
and
sub
addr16
mov
stc
push
adc
outs
pop
and
clc
loopne
jns
daa
adc
push
test
pop
sbb
mov
mov
retf
jno
mov
jp
cli
xchg
push
repz
(bad)
in
shr
mov
cmp
sub
movs
push
icebp
retf
popa
push
out
inc
outs
push
adc
pop
fidivr
mov
in
cmp
ja
mov
add
fstp
ja
mov
dec
addr16
or
out
push
imul
shl
dec
std
mov
in
sbb
in
sti
test
aaa
jne
mov
push
sub
or
mov
push
pop
pop
ds
push
loop
push
jge
stos
add
push
imul
sbb
pushf
test
or
xor
mov
js
rcr
lds
pop
mov
shl
xor
in
out
fimul
fist
ror
push
outs
jp
xchg
shl
xchg
je
mov
sbb
sar
and
pop
add
(bad)
cmp
iret
lahf
call
rep
lods
mov
std
mov
mov
mov
aad
pop
sbb
call
pop
ret
retf
jno
adc
cwde
int3
neg
bound
and
inc
rcr
add
jecxz
cmp
pop
in
loop
icebp
sar
sbb
aaa
out
movs
out
or
jle
sbb
push
bnd
mov
cmp
call
les
lods
adc
inc
jg
outs
imul
cmp
xchg
aaa
and
xor
xlat
daa
popaw
pop
sub
push
jnp
shl
xchg
pusha
outs
shl
in
pop
and
ror
mov
push
push
js
loop
aad
sbb
repnz
ds
push
shl
scas
fiadd
xchg
sub
loop
mov
mov
rcr
(bad)
pop
inc
cdq
mov
xchg
push
push
ret
shl
arpl
cmps
fistp
sub
mov
push
dec
xchg
sub
aam
shr
inc
xchg
and
xchg
out
mov
(bad)
xchg
add
adc
or
add
and
retf
dec
and
inc
(bad)
and
mov
rcl
push
inc
aad
das
(bad)
loop
xchg
nop
fsub
nop
pop
icebp
cmp
mov
(bad)
das
aad
ret
cwde
shl
fmul
mov
cmp
adc
mov
dec
mul
mov
out
out
dec
imul
mov
in
in
fild
inc
or
lahf
dec
mov
(bad)
scas
sub
imul
pusha
push
push
lods
outs
jno
jp
and
fiadd
cli
scas
mov
mov
mov
test
ret
cli
and
test
mov
bt
ret
call
mov
jge
repz
in
sub
addr16
xor
or
fst
sbb
mov
inc
jno
push
jo
inc
je
push
pop
loopne
ret
push
repz
and
out
out
cmps
test
push
(bad)
dec
dec
xchg
pop
sub
cmp
add
push
sbb
out
repnz
push
in
mov
sbb
cwde
mov
int3
or
pop
js
xchg
enter
fdiv
push
sub
mov
add
loope
fist
or
fstp
dec
xchg
jge
add
push
daa
cwde
shl
xchg
push
test
aad
(bad)
fild
cmc
je
inc
stos
inc
fwait
(bad)
cmc
jmp
mov
sbb
xor
or
hlt
and
imul
sbb
repnz
inc
in
mov
call
xchg
enter
mov
and
sub
fiadd
sub
xor
(bad)
retf
sbb
pusha
int3
mov
iret
lahf
lock
popa
adc
add
dec
adc
push
xlat
push
int3
cmps
mov
dec
xor
sub
jge
lods
cmp
aad
in
cmps
xor
dec
cwde
mov
addr16
imul
xchg
out
inc
or
jle
mov
pop
rcr
sub
les
push
push
icebp
cmps
mov
push
push
fdivr
rcl
jae
xor
lods
sub
mov
ins
add
pop
cmp
(bad)
aad
test
cs
or
mov
pop
sub
mov
inc
sub
fisttp
inc
test
add
sbb
test
fs
add
ss
aam
push
retf
ss
cmp
mov
mov
cmp
mov
popa
sub
(bad)
enter
and
sbb
xchg
mov
sub
dec
jge
mov
xchg
ror
push
mov
lds
inc
in
addr16
imul
push
cmp
jle
mov
aas
add
cmps
hlt
ss
push
aam
into
sbb
inc
push
xchg
fstp
ss
das
mov
xor
pop
jp
and
sbb
fadd
sub
mov
jl
and
jns
adc
bound
adc
mov
dec
call
xchg
add
inc
jmp
add
jbe
jp
add
add
and
push
hlt
sub
sub
lods
mov
pop
(bad)
cs
cmps
dec
movs
xor
int3
adc
sub
cdq
xchg
jge
lods
dec
and
(bad)
(bad)
push
rol
addr16
sub
(bad)
sbb
rcl
(bad)
sub
push
dec
pop
(bad)
rcl
xchg
jecxz
stc
aas
addr16
sahf
xor
sbb
inc
mov
mov
add
push
arpl
add
fadd
sub
sbb
popf
push
shl
pop
cmp
jb
outs
imul
arpl
mov
pop
lahf
frstor
push
(bad)
add
fwait
sbb
outs
je
cmps
out
outs
cmp
lock
cli
jae
pusha
and
cmp
(bad)
int3
add
xor
xchg
pushf
mov
mov
cmp
jl
mov
aam
lea
fstp
mov
call
or
mov
call
bound
ror
jecxz
(bad)
mov
mov
xchg
fiadd
sub
xlat
loopne
in
fmul
out
iret
addr16
sub
sub
leave
(bad)
frndint
add
and
sub
gs
aas
add
cmp
es
jle
ins
xchg
cmp
test
pushf
dec
cmp
inc
arpl
dec
sbb
mov
sbb
clc
nop
aas
xchg
mov
jns
jns
in
jmp
or
dec
test
scas
push
mov
fdivr
dec
fsub
inc
pop
jge
mov
xchg
xchg
(bad)
and
push
or
or
sub
xchg
daa
cmp
cmp
add
xchg
push
test
jecxz
mov
fucomip
inc
jmp
inc
test
jecxz
sub
sub
pop
adc
cmp
push
inc
xlat
shl
jmp
shl
rcl
mov
frstor
int3
mov
cmp
mov
push
lahf
(bad)
inc
dec
sbb
adc
jecxz
and
mov
sub
popf
cmps
dec
movs
adc
retf
dec
popf
dec
and
mov
xor
and
loopne
nop
xchg
pop
not
outs
call
gs
shr
out
es
mov
scas
pop
sbb
dec
ret
and
out
lods
mov
pop
aas
xor
in
out
cmp
ins
(bad)
adc
dec
addr16
sub
lock
popa
scas
and
clc
pusha
or
loop
push
test
push
mov
xor
imul
sahf
aaa
loope
fistp
(bad)
retf
in
in
fsubr
out
adc
fs
in
and
ja
loop
stos
adc
daa
clc
sub
jge
sahf
cwde
jae
cmp
stos
sbb
inc
cmp
add
gs
cmps
ret
xrelease
lods
add
ins
and
or
fs
sub
movs
or
mov
rcl
jmp
cmp
pop
ret
andps
or
lea
ins
fwait
push
and
stos
ss
lods
lock
pop
sub
shl
mov
mov
mov
ds
bound
(bad)
push
(bad)
and
int3
jo
push
cmp
test
scas
mov
xchg
shr
add
sub
push
mov
shr
cli
push
mov
add
daa
sti
mov
dec
add
mov
mov
scas
cmp
call
fwait
xor
cmp
mov
mov
test
sub
mov
(bad)
out
mov
mov
int
xor
and
jnp
test
mov
(bad)
aas
mov
inc
push
aam
sti
or
test
sub
sahf
or
shr
mov
cmp
(bad)
jmp
retf
or
add
jae
mov
xchg
(bad)
mov
enter
leave
test
outs
cmp
dec
jb
cmp
mov
repnz
inc
in
(bad)
lock
ins
jp
pop
aad
std
xor
xor
sbb
popa
(bad)
mov
and
test
add
mov
push
and
and
mov
mov
push
call
cld
adc
in
sub
or
icebp
mov
sub
and
inc
push
or
adc
into
xchg
jge
xor
jne
call
and
push
int
xchg
scas
ja
imul
sbb
xchg
push
lods
addr16
dec
sbb
jecxz
iret
imul
sbb
call
mov
cmp
data16
add
jae
mov
es
add
(bad)
test
or
ret
call
fistp
(bad)
sbb
aad
inc
pop
sbb
sbb
enter
sbb
out
adc
repnz
lods
lea
mov
lods
sub
cdq
(bad)
cs
gs
cmp
in
jg
jge
js
jo
cli
repnz
enter
gs
cdq
ret
fsub
cmp
leave
push
sub
aad
imul
sub
mov
cdq
shr
ss
jg
push
pop
in
adc
in
(bad)
cwde
icebp
dec
dec
in
pop
lock
pop
adc
popf
xchg
out
scas
jmp
lock
scas
cli
jno
ins
adc
scas
(bad)
shl
dec
sbb
lock
cs
inc
or
aam
push
daa
inc
lods
fwait
clc
loope
push
mov
int
outs
ss
push
or
(bad)
pop
mov
jmp
adc
fist
add
fcmovnbe
add
mov
sar
sbb
aam
out
nop
jmp
mov
mov
mov
stos
jecxz
ds
cmps
inc
fdiv
jno
ins
popa
ins
adc
inc
add
neg
adc
fcom
xchg
inc
fcomp
cmp
scas
jmp
test
popf
out
test
sub
mov
lods
cmp
xchg
sete
retf
jl
retf
imul
sbb
ins
lea
cmc
pushf
cs
cmc
mov
pop
mov
sbb
rcl
popa
mov
xchg
loop
or
xor
dec
stc
mov
lods
push
jmp
cmp
jnp
stos
sbb
jle
test
adc
inc
push
das
xchg
mov
add
mov
mov
in
adc
add
(bad)
cmps
arpl
jmp
test
sbb
sti
mov
pop
es
retf
adc
mov
(bad)
outs
cmp
not
stos
lds
lahf
retf
xor
push
push
and
push
in
rol
lods
dec
jmp
xor
xchg
pusha
out
cmps
jo
sub
jmp
xchg
popf
xchg
add
pop
or
mov
adc
cmp
jbe
jnp
iret
in
pop
cmp
xchg
cmp
adc
xchg
and
add
cvtps2pd
movs
inc
fst
bound
push
icebp
jmp
mov
cmp
js
adc
xchg
das
(bad)
and
fisttp
fsubr
nop
mov
(bad)
dec
jb
jmp
and
mov
cmp
pushf
std
imul
pop
in
shl
xor
and
out
(bad)
jmp
(bad)
add
mov
ja
outs
fwait
cmp
pop
int3
repz
lock
xchg
(bad)
(bad)
jp
nop
pop
or
inc
jmp
lahf
(bad)
or
and
int
sbb
out
mov
cmp
push
mov
xlat
mov
jb
xchg
repnz
add
dec
je
(bad)
stc
pop
sbb
inc
stos
mov
aas
mov
out
std
cmp
cmp
ret
xchg
xchg
daa
sbb
js
js
popa
or
repz
pop
ins
outs
iret
mov
iret
scas
outs
popa
pop
sti
std
(bad)
cwde
push
mov
cld
add
ins
pop
je
xchg
daa
and
mov
clc
ins
imul
mov
rcl
scas
shl
jmp
jg
in
dec
repnz
mov
into
adc
mov
and
or
sbb
stos
push
outs
dec
lock
mov
jmp
push
mov
jmp
jbe
stc
(bad)
jo
inc
mov
sub
xchg
push
xor
lea
xchg
sahf
fnstsw
push
mov
popf
mov
out
int
icebp
add
push
pop
xlat
add
fld
popf
add
jmp
imul
xchg
jmp
daa
mov
sbb
movs
inc
pushf
add
fiadd
iret
add
sub
sub
sbb
xchg
pop
jmp
(bad)
sub
ja
mov
addr16
sub
mov
mov
popf
cdq
pop
push
jno
fsubr
test
jge
jg
or
mov
sbb
adc
or
pop
push
push
ins
(bad)
fstp
arpl
fnstsw
pusha
int
mov
cwde
xchg
xor
fstp
pushf
inc
ja
cmc
outs
inc
pop
imul
cmps
jo
pop
rol
inc
and
stc
in
sbb
repnz
push
cdq
cmps
dec
test
retf
mov
sbb
xor
movs
and
mov
test
cmp
mov
jmp
cwde
mov
rcr
inc
mov
and
clc
into
mov
retf
dec
xor
xchg
and
mov
lods
imul
xor
dec
retf
movs
stc
mov
rcr
jne
popf
mov
jns
scas
pop
ins
xchg
lea
add
jns
sti
mov
(bad)
sub
mov
ja
and
cwde
jbe
dec
data16
xchg
je
int3
adc
inc
cmp
pop
ficomp
jb
adc
nop
jno
pop
xor
mov
jle
cld
rcl
daa
lods
addr16
push
push
ficom
cmps
fist
daa
inc
iret
jle
cmp
retf
mov
mov
add
call
push
and
push
int
or
ins
xor
xchg
cs
imul
jne
jmp
sub
pop
cmp
rcl
ja
jnp
data16
pop
jb
std
fdiv
test
mov
arpl
lock
outs
outs
out
fsub
push
add
adc
je
adc
inc
xchg
sub
sbb
sub
mov
push
addr16
ja
data16
lea
les
adc
das
ins
repz
(bad)
in
mov
jle
dec
jae
push
in
in
sbb
mov
cwde
clc
mov
cmp
fiadd
fsubrp
mov
sub
sbb
inc
ins
ret
or
mov
push
jmp
inc
data16
inc
mov
or
not
cmp
lahf
mov
and
push
ins
fstp
pushf
fld
nop
or
imul
push
shl
jmp
jo
sbb
fild
push
ror
and
adc
imul
into
mov
adc
sub
fldcw
out
and
lods
inc
cmps
shl
pop
xchg
int3
mov
xchg
(bad)
frstor
mov
mov
push
mov
addr16
pop
sbb
pop
pop
clc
cmps
das
sub
cdq
cmp
xor
int3
mov
sub
adc
aaa
sahf
repz
xor
sub
aaa
scas
and
inc
outs
cmc
loop
dec
popa
adc
add
outs
push
stos
scas
adc
xor
pushf
sub
call
add
in
add
push
(bad)
in
xchg
js
mov
push
or
test
lds
adc
sbb
inc
sub
mov
xchg
push
or
mov
mov
dec
mov
hlt
ret
push
jmp
push
es
loopne
sub
xor
mov
sub
hlt
(bad)
into
cdq
imul
dec
out
and
mov
mov
pop
dec
mov
repnz
(bad)
sbb
mov
jae
(bad)
or
in
push
push
add
mov
retf
lds
ss
std
call
add
sub
rcr
sub
test
mov
cwde
stos
push
daa
and
ds
pop
jge
scas
gs
jns
sbb
push
jecxz
ret
mov
xchg
xchg
pop
rcl
pop
push
inc
jle
or
js
call
jbe
int
cmc
xchg
push
(bad)
enter
out
test
push
pushw
inc
cs
add
xchg
and
daa
icebp
mov
ins
leave
int3
test
retf
pop
fmul
cmps
and
cmp
(bad)
mov
xor
bound
push
or
xor
fcom
mov
sub
movs
and
dec
inc
inc
out
push
sti
pop
mov
(bad)
mov
dec
cli
inc
cs
dec
and
sbb
adc
daa
xchg
loopne
repnz
mov
sub
lock
inc
mov
xchg
pop
loop
and
sbb
mov
mov
jl
dec
or
(bad)
pop
push
mov
imul
and
push
in
jg
jg
sbb
jae
out
xchg
scas
and
add
test
mov
les
mov
daa
mov
daa
js
inc
inc
dec
and
int3
push
mov
hlt
in
lds
push
push
sub
jbe
imul
cmps
pop
fcmovnu
adc
dec
stos
cwde
and
sbb
sbb
dec
in
movs
inc
mov
ins
xchg
and
sub
push
mov
popf
cwde
outs
push
dec
mov
scas
(bad)
sbb
mov
retf
jg
(bad)
adc
lods
jne
add
aad
aad
and
push
mov
rol
mov
or
adc
and
sbb
sbb
ss
fs
ds
and
pop
je
push
add
lea
jmp
cmp
ret
sub
pop
stos
mov
mov
cmp
rcl
pop
inc
and
cmp
retf
push
jmp
adc
inc
and
fiadd
cmps
inc
xchg
mov
or
jp
sbb
pop
sbb
lahf
xor
xchg
add
push
or
pop
add
lahf
adc
xor
jns
xor
pop
adc
xchg
fadd
xlat
enter
cmp
pop
sbb
cmps
mov
sub
popa
push
ja
inc
stos
push
xchg
(bad)
mov
mov
in
add
sti
movs
sub
stos
sub
cmps
lods
loope
sbb
icebp
mov
cmp
cmp
push
es
jge
rcl
cmp
jmp
pop
pop
add
mov
cmp
cmp
push
or
retf
cli
out
leave
add
mov
sub
mov
repnz
in
gs
push
xchg
push
jb
shr
add
dec
gs
imul
clc
sbb
enter
shl
dec
fbstp
adc
sar
cwde
mov
int
adc
cs
push
jns
retf
cs
stc
sbb
dec
or
int
rcl
clc
push
shl
loope
inc
lods
iret
mov
and
retf
add
rol
sub
sub
fbld
das
outs
retf
ret
jmp
dec
jo
jl
push
pop
xor
dec
mov
addr16
enter
clc
inc
xor
out
adc
rcl
dec
jge
(bad)
xor
mov
pop
out
sub
es
xchg
push
push
fiadd
popa
jnp
inc
aaa
cmp
sub
mov
adc
jbe
aaa
das
and
out
outs
jae
mov
or
add
into
jmp
xchg
xchg
jl
cmc
out
dec
sub
lahf
and
mov
icebp
jmp
adc
aas
xor
cs
mov
nop
and
dec
aaa
xchg
adc
rol
mov
mov
(bad)
mul
dec
sbb
cwde
adc
or
(bad)
cdq
dec
adc
adc
add
mov
test
in
xor
into
shl
mov
push
test
js
aad
test
fwait
outs
or
sbb
test
cmp
lods
leave
out
mov
inc
lds
xchg
push
xchg
add
mov
into
lods
or
(bad)
fmul
pop
sub
xor
dec
push
sbb
fisttp
cwde
jg
mov
clc
int
frstpm(287
fs
jmp
pop
daa
mov
sub
dec
ins
mov
pop
dec
dec
push
lea
and
(bad)
movs
dec
cmp
movs
sbb
repnz
aam
xchg
stos
mov
add
and
lds
int3
push
in
push
les
mov
(bad)
sub
pop
into
jl
popa
push
ins
pop
jae
push
std
mov
push
push
hlt
mov
mov
loopne
sbb
and
(bad)
aaa
clc
xchg
and
pushf
cmp
sbb
inc
jl
jle
int3
sub
fdivr
pop
shl
sbb
add
jecxz
aam
add
stc
cmc
sub
scas
jg
and
adc
sti
iret
xchg
ja
cmc
xor
jne
bound
sub
pop
fcmovnb
cmps
push
imul
mov
cmp
(bad)
outs
icebp
xchg
xor
dec
iret
pop
aad
jle
iret
sahf
ins
cmp
pop
push
lahf
push
push
jne
test
outs
pop
clc
hlt
fild
push
sub
jnp
and
(bad)
jp
stos
mov
jl
push
dec
add
push
xchg
sbb
and
imul
popa
fist
or
scas
cmps
ins
xchg
mov
mov
outs
lods
(bad)
imul
fcomp
sahf
add
sub
dec
inc
clc
fnsave
cmp
aad
movs
mov
stos
mov
add
sar
mov
cmp
inc
xchg
sbb
sub
dec
mov
ret
and
lock
jmp
push
jno
mov
repz
outs
mov
test
adc
out
push
push
push
xchg
(bad)
mov
stos
push
lods
inc
stos
cmps
bnd
mov
ret
and
out
rcl
retf
pop
pop
push
sub
xor
ins
jbe
cdq
out
inc
dec
mov
xchg
js
pop
dec
out
inc
jle
movs
sub
movs
rol
mov
scas
cmc
lods
xchg
cdq
(bad)
leave
in
test
sbb
xchg
fisub
icebp
cwde
movs
inc
(bad)
stos
inc
fwait
cmps
in
inc
gs
int3
mov
dec
in
fcom
and
xor
fdiv
push
mov
adc
icebp
mov
dec
gs
pop
cwde
sbb
push
sub
xor
loop
hlt
pop
mov
nop
(bad)
and
xor
daa
mov
ja
rcl
clc
neg
add
mov
add
adc
xchg
fsubr
cli
lock
fstp
retf
cmp
push
enter
(bad)
jno
jp
dec
xchg
push
scas
sbb
int3
movs
inc
push
retf
leave
push
mov
fwait
jge
mov
pusha
dec
inc
pop
lock
push
add
xlat
jo
push
call
mov
cli
daa
or
inc
ja
jle
and
ss
mov
pop
cmps
pop
push
push
mov
fisub
cmp
jb
aam
pop
inc
mov
sar
jns
and
ds
adc
fcmovne
pop
and
jl
aad
dec
jno
(bad)
cmp
and
push
xor
les
daa
jnp
push
pushf
aad
jae
inc
mov
xchg
clc
mov
lods
xchg
inc
cli
xor
adc
push
adc
pop
dec
aas
movs
add
add
stos
adc
sub
mov
xor
jno
sbb
jle
dec
out
jl
repz
mov
xchg
jno
pop
jle
jne
into
nop
pop
push
lds
cli
push
outs
mov
sahf
push
mov
jmp
or
nop
retf
sub
pop
jae
lods
add
xchg
fadd
lock
and
adc
mov
pusha
jb
push
test
xchg
(bad)
scas
stos
imul
std
dec
sub
adc
add
cld
jae
jp
in
retw
mov
sbb
mov
jp
sub
loopne
or
ins
cdq
test
imul
das
xchg
in
bnd
ret
adc
push
lods
shr
inc
movs
dec
sub
sti
(bad)
xor
sbb
int3
xor
test
out
std
sbb
jnp
push
push
mov
push
xchg
popf
cmp
cmp
scas
inc
test
shl
xchg
add
es
xchg
daa
cld
push
inc
iret
test
inc
out
das
pushf
xchg
jne
les
sub
repnz
outs
fnclex
mov
mov
movs
mov
push
hlt
mov
addr16
lds
popf
ja
xchg
mov
out
cli
gs
fistp
(bad)
pop
sbb
push
sbb
(bad)
sbb
sahf
out
inc
push
xchg
(bad)
pop
fdiv
cmp
or
sub
jb
lahf
pop
inc
dec
push
push
cdq
xchg
js
jae
aam
xchg
rcr
jns
in
test
ins
or
leave
dec
les
test
fnstenv
addr16
sbb
inc
in
jnp
test
dec
jo
sub
mov
sbb
push
push
cmp
fwait
add
dec
or
mov
fcmovnb
jmp
gs
dec
adc
out
mov
dec
nop
mov
iret
xchg
es
pop
jmp
push
cmps
nop
stos
fiadd
aad
cmp
pop
sub
add
not
xlat
mov
cdq
pop
and
test
inc
cmps
xchg
mov
test
dec
mov
xor
ins
inc
mov
sar
shr
call
shl
pop
sub
ds
jp
mov
pop
nop
js
out
xlat
mov
jecxz
ficom
sti
xchg
dec
jnp
shl
scas
movs
sbb
lahf
jne
mov
lods
or
jns
div
mov
lock
xor
xchg
int3
(bad)
ficom
xor
mov
or
fcmovbe
rcr
jle
cmp
add
pop
call
out
mov
jae
inc
xor
sub
rcl
cli
into
call
out
push
ja
sbb
pop
pop
addr16
xor
(bad)
stc
je
sbb
push
outs
into
out
sub
and
into
mov
ins
xchg
(bad)
sti
sub
cmp
push
(bad)
and
xor
inc
out
sub
ret
or
jge
adc
sub
iret
(bad)
adc
test
aaa
scas
fiadd
mov
add
shl
dec
fnstcw
xor
mov
fs
fnstsw
sub
int3
outs
jnp
ja
popa
les
lock
inc
dec
adc
push
lods
pushf
out
dec
mov
rol
pop
xor
mov
jo
pop
adc
jno
es
jae
jp
xchg
lock
mov
lock
mov
jno
lds
pop
leave
or
push
clc
mov
pop
or
inc
inc
nop
or
cld
push
mov
bound
sti
imul
jecxz
sub
inc
xlat
sar
mov
retf
in
sbb
xchg
sbb
iret
stc
loope
dec
pop
adc
es
mov
sti
jmp
mov
out
in
adc
mov
adc
cmp
push
xchg
aas
shr
icebp
add
xchg
cld
adc
int
jae
jb
inc
push
sub
push
rcl
in
adc
pop
adc
push
(bad)
sub
ficomp
mov
into
fsubp
test
dec
xchg
daa
cmps
ja
cs
(bad)
xchg
add
fs
retf
lahf
(bad)
pusha
fdivr
pop
addr16
daa
mov
sbb
out
inc
rcl
adc
repz
in
mov
pushf
xor
or
pop
and
add
(bad)
inc
les
daa
mov
test
jb
cmc
mov
mov
mov
cld
and
icebp
inc
pop
loope
xor
or
push
aad
pop
cmp
jle
mov
stos
aad
test
inc
sbb
inc
retf
shl
push
shr
je
jmp
sbb
sbb
test
push
ins
retf
adc
mov
in
test
add
outs
pop
cmp
inc
sbb
push
cmp
adc
dec
push
cmps
pop
xchg
xor
ficomp
add
fcomi
rcl
mov
(bad)
loop
push
mov
fistp
icebp
and
xor
jg
lds
xchg
bound
inc
imul
mov
fnstenv
pop
pop
jne
push
push
sbb
(bad)
cli
add
add
pop
dec
fcomp
in
adc
fwait
jbe
cmc
sti
push
sub
(bad)
sub
repnz
out
iret
push
dec
outs
xor
cmp
push
test
ins
fild
and
cmc
fdiv
retf
xor
into
jge
inc
lods
popf
add
add
jmp
xor
jecxz
mov
pop
push
mov
mov
push
(bad)
loopne
pop
cmp
push
pop
dec
xor
cmp
repnz
jno
xchg
les
push
mov
xlat
call
push
xor
ins
mov
and
dec
push
mov
push
adc
adc
call
repnz
aaa
jle
lods
pop
dec
mov
pop
(bad)
push
lods
xchg
pushf
pop
test
mov
shl
dec
inc
sbb
mov
fcom
mov
or
mov
xor
pop
call
and
mov
jl
xchg
inc
jns
(bad)
mov
cmps
clc
mov
cmc
inc
xchg
pop
add
cmps
mov
jnp
dec
std
inc
popf
call
pop
sub
push
leave
shl
jl
jmp
xor
xchg
mov
or
ror
mov
jo
shl
jl
movs
jmp
inc
(bad)
add
add
aam
xchg
imul
inc
push
add
mov
mov
lods
sbb
iret
lods
adc
mov
mov
gs
std
das
mov
std
sbb
fwait
mov
and
retf
add
and
hlt
out
lods
lahf
push
jo
adc
inc
call
(bad)
mov
daa
sub
aaa
cmps
fisubr
out
jle
adc
dec
sbb
xchg
and
pop
add
jecxz
pop
sbb
outs
fsubr
sbb
push
mov
dec
mov
xchg
loop
push
(bad)
cmp
xchg
mov
xchg
outs
jbe
adc
adc
ror
(bad)
pushf
jno
jae
jle
inc
mov
pop
xchg
push
loop
fs
dec
cli
pop
push
popf
in
push
shr
mov
call
repnz
dec
fcmovnu
test
jmp
outs
jge
mov
ins
fidivr
add
lock
(bad)
mov
jge
jne
adc
mov
shl
dec
sub
cld
mov
mov
mov
lods
jg
jle
popa
push
test
add
cs
fsub
add
sub
inc
mov
movs
push
add
mov
mov
xor
mov
(bad)
sti
jno
jno
outs
das
mov
pop
pop
push
cld
mov
clc
mov
jge
push
mov
xchg
xchg
cmp
inc
add
push
out
(bad)
push
mov
out
inc
mov
sti
and
xor
sub
ds
adc
xor
cdq
out
mov
xchg
bound
sub
xor
mov
bound
div
hlt
stos
retf
in
jmp
in
dec
lock
ror
fstp
sti
push
lds
shr
sub
ret
inc
inc
push
imul
punpckhwd
inc
jle
adc
pop
pop
mov
out
leave
imul
test
fwait
inc
sbb
enter
xor
pop
addr16
pop
arpl
sub
add
xor
pop
nop
lock
push
in
repz
mov
jnp
pop
mov
fcom
adc
(bad)
jmp
mov
mov
(bad)
jle
sbb
outs
cmp
jp
and
not
and
pop
movs
mov
movs
adc
cwde
loope
sbb
repnz
jecxz
mov
fwait
or
push
inc
cmp
dec
ret
cmc
and
fst
cdq
pop
loopne
mov
rcl
nop
cmp
jge
test
push
pop
fidivr
or
push
data16
or
push
lock
inc
xor
mov
js
aad
sub
(bad)
inc
dec
outs
mov
scas
xlat
inc
dec
xor
mov
fiadd
and
mov
adc
dec
and
xor
dec
inc
popa
loop
arpl
push
pop
test
rcr
fsubr
pusha
sbb
shr
xchg
imul
stos
mov
xchg
retf
test
sahf
test
jle
mov
cmp
push
gs
ror
hlt
or
pop
test
push
xor
cmps
test
push
mov
les
sub
(bad)
or
dec
xchg
inc
fs
inc
jne
enter
mov
loope
mov
(bad)
jae
movs
push
xor
jae
and
addr16
dec
jmp
mov
cmps
xchg
outs
add
xchg
pop
vandnps
rcl
popa
scas
loope
cmp
or
adc
jg
and
sbb
retf
pop
fiadd
mov
pushf
gs
jne
mov
jns
mov
mov
ret
mov
cwde
dec
loopne
call
push
xor
cmp
in
jle
cdq
arpl
not
in
data16
punpckldq
jns
cmc
(bad)
stc
fdiv
pop
push
sub
fnstcw
into
push
adc
mov
sub
int3
ds
arpl
scas
adc
je
out
pop
std
and
mov
or
add
sub
push
ret
pushf
xchg
hlt
fisub
lods
dec
add
jae
adc
lods
in
xchg
loopne
movs
iret
cs
movs
cmp
out
sbb
retf
(bad)
call
lahf
mov
cmp
out
(bad)
mov
add
int3
imul
mov
cmp
ins
sbb
xor
addr16
sub
fild
out
stc
loope
ror
je
test
sbb
inc
cmp
std
scas
xchg
sub
sub
add
loop
in
add
(bad)
stos
jg
ins
sbb
imul
adc
jp
mov
test
sub
sub
or
jns
icebp
inc
(bad)
and
cmp
test
jmp
cmc
jns
pop
jns
mov
in
and
dec
pop
out
fmul
jle
add
adc
in
cmp
daa
mov
pusha
shr
cli
fcmovne
mov
out
pop
sbb
sahf
push
movs
sub
les
sub
cmp
push
fadd
repz
inc
jle
std
or
mov
pop
or
inc
xor
add
ss
or
std
xor
test
and
mov
cs
jge
lock
sti
pop
gs
push
fimul
jle
enter
les
xchg
bound
mov
and
inc
sbb
ret
cmp
outs
xlat
cmp
outs
ins
inc
mov
icebp
ret
out
cmp
xchg
lock
or
inc
pop
mov
sub
arpl
push
dec
push
ret
mov
sub
push
xor
pusha
add
std
in
ficomp
push
and
push
(bad)
scas
inc
aad
jge
repz
mov
call
add
in
jmp
mov
aas
pop
fnstenv
retf
add
and
adc
mov
xchg
mov
gs
cwde
adc
sbb
jae
jp
ret
push
dec
outs
pop
push
cli
adc
dec
popa
leave
pop
xchg
inc
sub
push
adc
int3
jle
mov
xor
sub
jmp
or
ror
fistp
xchg
and
mov
ror
jp
push
and
retf
pop
call
int3
mov
sahf
pop
inc
dec
mov
jmp
push
adc
fistp
sbb
call
or
cmp
mov
popa
iret
push
mov
adc
adc
out
sub
mov
mov
call
mov
mov
mov
das
pusha
lahf
pop
bound
sub
ret
cmp
sbb
jge
or
js
cld
sbb
mov
(bad)
sbb
adc
sbb
aam
dec
test
pop
pop
pop
pop
pop
fnsave
mov
gs
mov
cld
xlat
shl
hlt
mov
xor
(bad)
loopne
push
and
push
mov
lahf
mov
daa
jmp
cwde
(bad)
mov
iret
daa
push
cmps
sbb
repz
xchg
mov
clc
adc
jle
iret
push
dec
jmp
mov
int3
sub
jne
push
cs
clc
xor
push
adc
fs
into
pop
movs
shr
xor
(bad)
jge
mov
pop
stos
cmp
cmp
xchg
stos
xor
xor
mov
push
repz
sbb
test
push
sub
ss
jnp
daa
mov
or
sub
sub
push
pop
call
xor
aad
inc
pusha
jns
addr16
jae
out
dec
add
inc
mov
cdq
and
add
sar
fs
or
inc
cmp
push
and
cmc
std
jl
call
jae
jle
pop
mov
shl
xor
test
lods
jecxz
shr
fsub
pop
push
rcr
xchg
and
jmp
add
adc
test
and
mov
sbb
jle
jbe
xor
push
push
call
jl
mov
shl
sbb
sar
movs
push
je
aaa
stos
jno
mov
inc
inc
pop
daa
js
scas
dec
mov
mov
pop
push
fs
and
dec
pminub
sbb
fidiv
lahf
adc
iret
xchg
mov
stos
lahf
jo
psrlq
adc
adc
out
push
lahf
jle
das
add
fmul
sbb
cli
sub
jecxz
daa
sbb
mov
(bad)
mov
fimul
cmp
pop
fld
adc
push
hlt
xor
fisub
jge
push
(bad)
push
cmp
repz
xor
dec
and
mov
dec
pusha
push
or
jo
sbb
test
outs
loope
xchg
mov
push
pop
dec
in
adc
lods
sub
pop
adc
mov
push
pop
mov
imul
xchg
cld
popa
fild
ficomp
lods
and
jnp
xor
push
push
movs
xchg
jle
mov
cmp
xor
call
lods
shl
sbb
mov
stc
jae
into
pop
and
scas
mov
push
cmpps
push
jmp
scas
bound
add
and
sub
xchg
lods
adc
add
fldcw
mov
adc
lods
xor
retf
push
mov
pop
push
(bad)
into
mov
call
cmp
cli
and
stc
and
xchg
adc
sub
inc
push
cs
(bad)
jmp
addr16
inc
or
call
and
or
fsubr
xchg
xor
scas
jl
ss
cli
cmp
cdq
cmps
pop
clc
xor
jno
popa
dec
bound
stc
xchg
in
jle
add
pop
cdq
inc
retf
mov
add
adc
arpl
int
push
cmp
fst
stc
imul
ficomp
stos
add
nop
jno
outs
xchg
and
aaa
out
daa
sbb
jb
push
xchg
jle
inc
push
in
push
sub
sub
fcmovb
and
lock
push
mov
ror
cli
push
mov
popf
xor
xor
pop
addr16
sti
pushf
je
or
into
loope
js
dec
mov
mov
cmp
std
xchg
jecxz
sbb
and
mov
sahf
mov
adc
cmp
dec
jae
xchg
ins
cmp
pcmpgtb
mov
jmp
es
push
or
xor
xor
aad
inc
test
dec
outs
mov
jmp
fsub
pop
loop
arpl
scas
popf
pop
js
adc
test
jmp
(bad)
pop
sub
jg
xchg
cs
adc
int
fwait
inc
lahf
mov
lods
cdq
test
std
or
push
and
stos
mov
mov
aad
adc
jg
jmp
stos
shl
test
out
(bad)
paddq
jne
cs
xor
inc
mov
fsubr
xchg
lods
pop
int
in
mov
fxch
mov
stos
jae
push
pop
sbb
(bad)
out
sub
dec
mov
(bad)
xchg
mov
xchg
jb
ss
pop
xor
mul
std
(bad)
mov
jecxz
fist
stc
sbb
adc
sahf
je
stos
mov
int
add
clc
mov
in
stos
sub
dec
fsub
sbb
retf
mov
in
push
add
dec
sub
fcom
cld
sub
out
inc
das
(bad)
and
lea
adc
je
mov
data16
sbb
mov
jmp
test
dec
(bad)
scas
mov
leave
call
xor
pop
shl
mov
jne
dec
adc
sti
sbb
or
pop
out
mov
sbb
jge
jnp
je
stos
aam
ds
mov
pop
jg
cli
in
jo
stos
xchg
cs
mov
lock
jmp
fwait
ret
test
xor
sub
and
sub
jecxz
jmp
adc
ret
or
lar
push
fdiv
fldenv
xchg
idiv
mov
aam
sub
fdivr
jno
adc
movs
or
ror
mov
sbb
leave
shl
(bad)
out
mov
inc
sbb
cld
dec
xor
cmps
mov
xor
shl
and
mov
inc
mov
test
jle
repz
jae
gs
in
push
dec
test
mov
adc
push
loop
sub
into
pop
pop
or
mov
mov
ret
or
in
movs
jns
fiadd
ds
mov
rcr
shl
pop
or
or
mul
mov
fldenv
push
repnz
into
ds
jo
mov
test
mov
or
ss
push
mov
int3
ret
pop
pop
neg
fsub
jno
cmc
mov
sahf
bound
cmp
xchg
cwde
ja
loop
dec
idiv
pop
je
mov
jno
pop
dec
dec
out
les
arpl
jae
mov
in
fsub
pop
mov
sar
add
out
cdq
mov
cmp
fwait
les
add
dec
cmp
push
cmc
sbb
add
retf
push
mov
jmp
out
mov
push
std
aaa
aas
mov
in
fnstsw
sbb
mov
xor
cwde
jns
jmp
shl
data16
jnp
mov
imul
popa
or
adc
adc
dec
mov
shl
test
sub
test
inc
sub
pop
aas
je
test
dec
ins
or
inc
sub
push
cmps
jp
push
xchg
outs
mov
aaa
sbb
fnstcw
pop
mov
mov
test
add
popa
mov
mov
int
adc
test
loop
and
push
dec
cmp
jl
inc
into
(bad)
push
lods
aad
push
jmp
xor
add
aaa
xor
movs
push
(bad)
int
inc
push
cmp
das
pop
call
jle
and
add
hlt
jb
sub
jae
ins
rcr
mov
xchg
test
out
in
adc
cmps
mov
(bad)
push
rcl
mov
pop
add
xlat
push
jmp
pop
cmp
dec
mov
jno
rcl
retf
jmp
jbe
add
clc
sar
mov
clc
cmp
jo
fisubr
xor
in
icebp
push
sahf
std
retf
lods
outs
lahf
add
ja
ja
mov
scas
sbb
add
push
dec
gs
jge
leave
lahf
adc
pop
fs
(bad)
push
mov
sub
pushf
dec
in
not
stc
pop
sub
gs
push
pop
sub
rol
xor
mov
add
jb
sbb
cmc
add
mov
inc
jb
lea
xor
mov
loope
ret
and
movs
jne
adc
(bad)
mov
icebp
int3
sub
aas
pop
mov
addr16
(bad)
in
nop
rol
jns
(bad)
outs
das
cmps
in
adc
cmp
inc
in
nop
inc
sub
pop
adc
sub
inc
inc
repz
cwde
or
lds
inc
push
and
push
push
pop
daa
cs
and
xchg
jbe
clc
sahf
adc
mov
fcompp
lea
fadd
dec
mov
sub
jle
jnp
popa
shl
aad
gs
rol
jl
pop
add
push
and
jo
(bad)
push
xchg
sub
mov
nop
cmp
out
push
loope
xchg
pop
mov
push
test
cmc
jecxz
cs
mov
inc
test
arpl
mov
pop
jmp
mov
je
dec
loop
inc
xlat
mov
es
(bad)
clc
mov
dec
pop
push
pusha
(bad)
mov
imul
sar
shl
dec
mov
repnz
inc
cmp
js
push
outs
int
cmp
mov
xchg
mov
cld
movs
adc
xor
add
inc
dec
sbb
jnp
sbb
sbb
das
pop
mov
jmp
mov
cmps
xor
lock
push
push
or
sbb
mov
ret
sbb
xchg
mov
sub
push
cmc
inc
adc
in
pop
add
cmp
dec
lea
inc
fiadd
mov
jecxz
(bad)
in
dec
jecxz
jo
push
push
std
mov
(bad)
adc
mov
adc
xchg
mov
mov
mov
push
sbb
mov
add
stos
js
mov
xchg
dec
lock
ficomp
push
dec
jno
lods
outs
cmc
aad
aad
jg
ss
sbb
ds
out
inc
stos
fmul
mov
sbb
and
cmp
imul
stos
pop
push
mov
cmp
mov
retf
and
or
push
pop
xor
stos
push
and
call
and
aad
out
mov
xchg
dec
push
cld
rcr
jge
lahf
addr16
pusha
inc
loop
aad
push
sbb
pusha
adc
adc
arpl
pop
xchg
out
adc
xor
cli
push
mov
sbb
ffree
xor
repz
(bad)
pop
lods
cdq
cmp
adc
shr
fsub
ror
call
inc
loope
mov
jmp
int3
jmp
ja
push
adc
xchg
push
pop
push
push
or
addr16
ret
jns
mov
mov
pop
popf
xchg
xchg
loope
cmp
sbb
pop
aam
sbb
add
inc
cli
cmp
popf
sub
(bad)
mov
lock
push
(bad)
daa
push
inc
bound
sbb
cld
jbe
ins
fucomip
push
dec
xor
dec
(bad)
adc
cmp
xor
mov
loope
push
pop
xchg
mov
jns
mov
jmp
repz
mov
xchg
cwde
jmp
jmp
cmp
xchg
xchg
and
rcr
imul
jge
je
in
push
movs
add
arpl
hlt
shl
dec
fsubr
fwait
add
pushf
pusha
mov
dec
pushf
jmp
xchg
retf
js
fld
sbb
push
mov
in
xchg
adc
aas
addr16
icebp
aaa
add
mov
jl
mov
test
sahf
mov
(bad)
repz
enter
retf
xchg
sbb
jecxz
xor
mov
or
mov
(bad)
sbb
stos
lock
shr
push
repz
dec
int
mov
adc
or
xor
lea
in
cwde
dec
inc
fist
or
xor
les
fisttp
in
adc
adc
and
xchg
jne
aaa
jo
mov
xor
retf
fcomp
mov
jae
adc
pop
jp
pop
repz
outs
pop
(bad)
in
icebp
in
jae
dec
sub
into
inc
fstp
or
inc
cmp
adc
add
test
push
loop
pop
push
fldcw
lods
call
xchg
xchg
add
push
pop
sub
cdq
mov
push
jecxz
jmp
adc
dec
test
push
aam
and
(bad)
jae
lods
leave
ror
xchg
add
mov
std
aad
dec
bound
xchg
into
pop
sub
lods
popf
leave
aam
iret
xchg
movs
icebp
jne
js
mov
daa
dec
or
rcl
push
mov
call
sahf
fwait
jns
inc
lea
fs
cmp
outs
xor
dec
int
or
add
jb
les
aad
es
rcl
aaa
mov
mov
lds
mov
cli
adc
nop
sbb
or
dec
pop
or
leave
push
or
jecxz
retf
push
aad
mov
sahf
jno
cmps
mov
push
sbb
lock
jb
xchg
call
lods
sbb
enter
shl
jl
adc
add
das
scas
adc
imul
pop
nop
loop
dec
aad
or
push
mov
mov
mov
lock
out
lds
pop
loop
pop
mov
mov
adc
je
cmp
pusha
mov
(bad)
jl
repz
fsubr
jbe
sbb
jl
test
sub
push
adc
aaa
js
aas
clc
ret
dec
fisubr
cmp
cmp
arpl
fs
cli
cld
retf
and
pop
jnp
dec
test
push
in
add
cmp
lock
call
out
popa
call
cmps
jge
cmc
cli
mov
das
push
pop
pop
fcomip
loope
add
bound
stos
sub
int3
pop
sahf
inc
jae
jbe
push
dec
loop
lds
dec
lods
pushf
sub
icebp
mov
add
cmps
retf
mul
xor
xor
call
inc
sti
jmp
das
sub
xlat
mov
aas
jl
fwait
mov
repz
xor
add
loop
push
imul
mov
les
out
push
mov
lock
and
add
hlt
push
data16
je
nop
xor
sub
repz
inc
arpl
adc
mov
(bad)
movs
jp
pop
mov
jg
dec
gs
add
push
(bad)
in
pop
or
in
adc
iret
pop
mov
repnz
out
jo
mov
jmp
adc
inc
xor
ins
mov
add
mov
addr16
sub
je
adc
xor
pop
jno
pop
xchg
stc
mov
jnp
add
loopne
sub
xor
sub
dec
or
int
push
scas
pop
mov
repnz
push
jmp
scas
in
push
add
repz
and
enter
dec
jge
jp
xchg
xchg
push
outs
cmp
mov
ja
int3
test
into
test
div
loop
iret
mov
iret
mov
cmp
jg
ds
or
aas
sahf
dec
sub
mov
dec
hlt
ror
sub
pop
ss
pop
loop
je
push
cmp
sub
inc
lock
add
add
cmc
adc
aas
inc
fs
test
out
push
(bad)
xchg
or
jbe
and
push
adc
add
mov
xor
push
mov
(bad)
es
sub
jo
or
rol
mov
mov
push
fwait
ret
push
(bad)
push
sbb
jg
cmp
adc
jecxz
shl
mov
jo
leave
and
push
call
push
sbb
sahf
dec
cwde
and
xor
sti
scas
fwait
jecxz
xor
and
pop
mov
ficomp
and
sub
or
push
bound
xchg
(bad)
dec
push
scas
add
dec
prefetcht2
xor
retf
int3
xchg
and
push
xchg
into
dec
push
add
xor
pop
fld
clc
std
fisubr
adc
mov
mov
ret
sbb
jmp
pop
out
cmp
mov
(bad)
and
out
fnsetpm(287
(bad)
sbb
or
shr
cmp
dec
xchg
add
fs
mov
or
mov
adc
bound
sub
jo
jge
or
add
or
movs
ret
aaa
xor
pop
aam
pop
sub
fidiv
mov
pop
pmulhw
or
or
pop
cmps
retf
mov
movs
in
cdq
push
shr
dec
cmps
loope
inc
sub
xor
mov
jmp
jae
jns
lods
(bad)
cmps
or
jl
cmp
or
mov
and
xchg
mov
aam
les
add
ret
jmp
and
into
(bad)
call
ja
dec
sub
ficomp
sub
jp
stos
push
in
sbb
mov
lock
dec
out
std
scas
lock
mov
cdq
adc
dec
mov
arpl
mov
cmp
xchg
clc
mov
jmp
push
jbe
jp
out
in
inc
pop
out
or
clc
jle
sub
into
pop
test
test
out
cmc
lock
retf
loope
jae
adc
movs
js
xchg
jl
scas
pop
in
xchg
sub
in
(bad)
mov
imul
xchg
add
xor
push
cld
jle
ret
(bad)
cmp
push
pop
(bad)
shr
adc
pusha
mov
ret
sub
cmp
pop
movs
rcr
xchg
int3
sbb
dec
or
jae
sub
push
lock
test
loope
xchg
or
imul
(bad)
loopne
push
ja
jge
loope
pop
sub
(bad)
jmp
or
mov
in
in
out
jge
hlt
lods
das
sub
mov
cmps
js
jg
xor
dec
push
(bad)
xchg
lahf
dec
fxch
call
js
jl
das
pop
jae
ror
fwait
nop
mov
mov
xchg
or
les
lahf
adc
pop
call
sbb
pop
rcl
push
cmp
hlt
imul
psubb
pop
adc
movs
mov
movs
mov
aaa
push
(bad)
aad
adc
arpl
mov
dec
xchg
jmp
or
jle
and
and
ds
lea
push
dec
jae
inc
rol
sub
mov
xor
mov
movs
push
or
bnd
test
scas
sbb
into
ret
adc
test
adc
icebp
jl
scas
cmp
pop
push
sub
xchg
mul
sub
out
jle
mov
sbb
inc
arpl
xchg
in
sbb
fsubr
push
std
sbb
gs
inc
ds
mov
outs
push
inc
icebp
into
fld
daa
ja
push
add
mov
sar
add
jo
retf
pop
int3
test
mov
push
mov
test
dec
xlat
jb
mov
inc
test
pop
scas
jmp
and
or
(bad)
jle
dec
test
or
mov
add
movs
pop
xchg
dec
mov
cmp
mov
cli
pop
fwait
add
xchg
mov
jnp
push
pop
ret
and
xor
ret
push
or
out
lods
pop
sbb
xor
adc
sub
push
dec
xchg
sbb
add
or
fwait
clc
push
test
scas
xchg
adc
test
scas
arpl
sub
sub
in
ins
(bad)
stos
jae
into
out
movs
ins
daa
dec
test
shl
cli
inc
jo
and
dec
jg
rcr
data16
push
rcr
sub
and
mov
push
out
add
mov
mov
jne
ficom
sub
enter
inc
mov
mov
data16
pop
frstor
movs
sbb
retf
pop
jb
dec
nop
inc
cmp
call
xchg
fsub
adc
fisubr
popf
xchg
scas
xchg
mov
pop
retf
jp
mov
adc
loop
retf
bnd
inc
scas
push
pushf
(bad)
adc
pop
cdq
jp
xchg
xor
ror
movs
add
ja
and
jnp
cmp
in
push
repnz
gs
add
cmp
out
cwde
ret
lods
gs
cmp
adc
fs
out
xchg
push
out
aas
adc
repz
xchg
mov
mov
sbb
rcr
sbb
cmps
add
push
push
mov
mov
xlat
ja
sbb
pop
or
mov
jbe
xor
lds
cmps
cmp
sbb
jl
cwde
mov
in
add
cmp
xchg
cmp
(bad)
sub
mov
mov
into
movs
sbb
jmp
or
xchg
repnz
pop
xor
mov
jp
sbb
test
push
and
xchg
repz
pop
aad
xor
out
test
lock
data16
fs
jno
push
rol
loopne
add
int
dec
cdq
popf
jno
mov
inc
mov
es
dec
xor
push
pop
aas
popf
push
xchg
sbb
rcl
adc
mov
jg
cmp
xor
fidiv
xchg
xchg
adc
jp
add
fld
mov
inc
adc
lods
cmp
cdq
push
retf
iret
sub
loopne
mov
bound
mov
sbb
in
in
pop
adc
push
or
dec
retf
js
jmp
fisubr
(bad)
imul
jno
xor
mov
rol
mov
xchg
xchg
int
sbb
cmps
out
dec
fst
test
mov
lock
icebp
stos
push
mov
(bad)
pop
push
int3
xchg
dec
mov
inc
cs
pop
push
outs
inc
gs
mul
pop
lea
mov
daa
fadd
adc
xor
cmp
call
ficom
push
addr16
sbb
push
inc
daa
mov
jo
and
xor
jno
pop
dec
je
sbb
(bad)
pop
jno
shl
and
sbb
(bad)
jmp
mov
cli
mov
jbe
jmp
push
jns
loop
movs
(bad)
push
mov
aaa
pop
or
in
sbb
adc
dec
(bad)
fidivr
scas
nop
arpl
jecxz
sub
es
sahf
push
add
lahf
xchg
clc
aam
shl
fwait
dec
mov
push
out
xchg
adc
movs
and
sbb
jns
inc
xor
inc
loop
adc
rcl
xlat
jns
icebp
fldcw
mov
les
xor
jecxz
mov
(bad)
std
cmps
std
mov
push
movs
stc
repz
cmp
sub
mov
pop
pop
add
ret
mov
and
fisubr
xchg
es
pop
push
arpl
or
rcr
cwde
push
jo
xchg
push
cmp
mov
jmp
gs
xor
sbb
mov
dec
add
test
lods
jbe
je
dec
ins
mov
imul
fmul
in
sbb
dec
es
push
into
(bad)
enter
jl
xchg
mov
jp
(bad)
(bad)
jbe
mov
xor
hlt
add
loop
jmp
jl
push
pusha
xchg
push
pop
nop
and
(bad)
fiadd
fwait
test
sti
cmps
jmp
(bad)
pop
jbe
ins
int3
sub
retf
int
repz
ds
arpl
pop
lods
movs
sub
xchg
enter
int3
and
xchg
cmp
shr
jge
mov
loop
adc
jg
icebp
je
inc
or
imul
xchg
mov
mov
stos
add
pop
in
mov
adc
outs
jo
mov
(bad)
loop
adc
adc
shl
mov
add
jne
retf
sbb
ja
bound
sub
call
jo
cmp
scas
mov
stc
add
push
mov
test
into
cmp
ja
and
inc
and
dec
cmps
cmp
pop
jns
sbb
mov
add
and
aas
scas
ficom
push
(bad)
dec
xchg
pop
ret
sbb
mov
add
sar
in
sbb
test
xchg
add
jp
ret
pushf
mov
aad
inc
pop
jp
xor
out
add
mov
pop
(bad)
das
out
ret
cmp
loope
arpl
cli
push
mov
dec
sub
pop
stos
cwde
test
dec
sbb
and
pop
adc
call
or
push
add
or
repnz
xchg
or
mov
aam
outs
out
(bad)
sar
jbe
pop
push
mov
sbb
xchg
das
push
sbb
cld
adc
nop
ja
aaa
xchg
push
out
lock
cs
test
outs
out
aam
jmp
mov
xchg
les
dec
dec
mov
sti
(bad)
mov
mov
adc
or
add
jnp
test
fistp
dec
rcr
xlat
push
in
mov
scas
enter
out
push
jge
mov
jo
add
ins
jb
xchg
sub
(bad)
mov
jbe
pop
cli
mov
pop
jmp
mov
xchg
movs
ret
repnz
dec
push
jne
adc
mov
retf
xchg
in
out
jae
pop
mov
push
call
pandn
xchg
mov
jg
stos
push
cld
lds
das
and
imul
add
inc
out
stos
cwde
mov
adc
push
sbb
push
das
xor
sub
dec
mov
adc
cmp
adc
dec
mov
fwait
cs
fxch
xor
out
gs
in
push
cmp
pop
enter
xor
ds
rcl
test
xorps
test
mov
jns
shl
push
adc
stos
push
mov
adc
push
mov
jmp
xchg
mul
call
xchg
inc
xchg
sar
ds
test
mov
dec
add
test
xchg
jmp
xor
dec
or
jl
push
outs
and
(bad)
sti
and
lods
mov
jg
mov
aas
fs
iret
clc
jmp
inc
pop
push
push
and
ja
lds
and
pop
or
jp
enter
sbb
push
mov
and
mov
dec
int
mov
mov
fidiv
dec
sbb
mov
sbb
test
ficom
jns
rol
and
iret
push
inc
addr16
popf
mov
dec
in
xchg
les
jge
imul
cmp
das
in
stos
(bad)
iret
mov
sbb
mov
ins
pop
int3
mov
mov
imul
in
inc
shr
sub
retf
pop
fiadd
and
out
push
push
aad
ret
jmp
add
xor
clc
scas
mov
pop
iret
xor
pop
cmps
(bad)
paddsb
loop
(bad)
dec
push
loop
loop
and
xor
int3
dec
sbb
and
retf
imul
iret
out
enter
rol
push
push
adc
fcmovbe
es
pop
jo
pop
cmps
or
sub
movs
das
cmp
jo
mov
js
in
iret
popa
fild
sbb
aam
mov
mov
jne
aam
push
lahf
mov
inc
sti
push
xlat
into
mov
outs
mov
xor
ret
dec
pop
xor
fcmovbe
lea
and
pop
ds
push
mov
fst
jmp
pop
add
popf
adc
sar
push
ror
dec
rcr
jge
ja
xchg
inc
cmc
int3
(bad)
loopne
(bad)
loope
repz
hlt
nop
sub
nop
in
pop
pop
or
jg
add
test
cwde
push
(bad)
pop
xchg
mov
fs
icebp
ds
std
lahf
imul
movhps
xchg
repz
push
in
hlt
ret
mov
bound
cs
rcl
jp
push
dec
cmp
mov
call
int
and
movs
loopne
add
xchg
pop
dec
mov
sahf
jne
sub
pop
adc
push
inc
push
pop
sbb
add
aaa
mov
stos
mov
inc
imul
push
test
test
xlat
imul
(bad)
ret
(bad)
gs
imul
mov
inc
pushf
inc
pop
int3
jb
fild
hlt
in
in
sub
idiv
test
es
jae
push
sub
and
in
pop
cmp
outs
(bad)
jbe
dec
ins
jle
sti
or
loop
push
mov
xchg
jb
iret
stc
mov
push
mov
dec
loope
add
stos
je
mov
pop
jo
lods
sbb
scas
js
jp
test
loopne
jmp
fimul
loop
mov
fsubr
add
push
pop
sub
sahf
fmul
pop
mov
ins
mov
sub
and
lea
adc
mov
into
sub
cdq
sbb
inc
push
xor
stc
push
xchg
scas
out
fisub
xor
mov
xor
add
movs
stos
fisttp
je
les
lahf
cmp
sub
and
jo
inc
test
xchg
das
icebp
(bad)
cli
xchg
push
loope
and
rol
cli
mov
adc
in
cmps
into
jns
jmp
cdq
mov
push
arpl
int
cmc
int3
inc
add
jbe
and
push
call
sbb
push
pop
push
stos
dec
mov
je
xor
pop
sub
cmp
cmp
cs
dec
sub
pop
daa
or
cmp
ins
lahf
mov
mov
jno
and
out
mov
jb
cld
push
inc
dec
enter
popf
cmps
sahf
lock
lock
push
icebp
dec
pop
loop
pop
mov
scas
sub
sbb
fisub
add
mov
hlt
add
inc
test
or
ror
ss
enter
hlt
sub
dec
jmp
push
inc
addr16
sbb
imul
(bad)
cli
push
jae
xchg
test
or
and
xchg
xor
call
loopne
xchg
stc
mov
fcmovu
or
lea
jmp
aam
adc
adc
sbb
ins
test
push
push
fcomp
xor
adc
nop
call
mov
inc
test
jp
ror
sub
call
sbb
sub
je
sti
sar
push
mov
add
clc
or
and
adc
push
or
adc
push
xor
lock
(bad)
les
push
out
xchg
pop
jne
dec
retf
adc
xor
les
or
es
cmps
inc
push
dec
int3
pop
add
out
ret
mov
mov
test
das
mov
xchg
es
das
mov
mov
sar
(bad)
ror
lock
icebp
push
or
or
pop
pop
test
lds
cmp
(bad)
sti
mov
repnz
jne
fstp
and
dec
cmps
mov
shl
test
retf
sbb
ins
test
mov
and
cmps
out
jl
adc
jl
jnp
fcom
and
sub
imul
cld
enter
int
out
push
add
cld
jmp
sar
in
arpl
sub
mov
inc
or
and
fst
sbb
xchg
jp
push
ror
jbe
xchg
mov
jle
push
or
add
stc
jnp
mov
cmp
shld
and
or
adc
pop
lds
fwait
inc
sbb
adc
jl
mov
fld
fild
clc
out
jl
(bad)
mov
mov
and
enter
inc
popa
(bad)
sub
inc
jge
xor
call
xor
retf
jb
cvtdq2ps
fcomip
scas
fstp
xor
test
fs
ins
fs
sub
push
das
dec
mov
test
daa
inc
jno
pop
cmp
sbb
sub
or
jo
fnstsw
adc
cwde
popf
cmp
cwde
cmc
vfpclassss
pop
pop
add
dec
mov
lock
mov
ret
xchg
sbb
sbb
loope
bound
sub
stos
jb
jb
add
call
sbb
add
das
pop
mov
in
fistp
mov
dec
jecxz
mov
adc
push
imul
push
test
jbe
xchg
sbb
int
jns
pop
test
frstor
ins
mov
push
arpl
mov
cld
ja
lds
ss
and
xchg
loop
movs
mov
ss
mov
push
mov
arpl
repz
jmp
pop
mov
dec
imul
xchg
xor
inc
or
xchg
pushf
retf
mov
(bad)
mov
in
push
pop
sbb
adc
adc
jns
mov
dec
mov
and
stos
mov
mov
inc
nop
imul
add
mov
cmp
in
movs
dec
mov
sub
loop
(bad)
xchg
mov
sbb
ror
ja
fstp
pop
sub
je
xlat
jns
pop
push
popa
int
pop
(bad)
adc
or
push
cmc
mov
imul
or
fmul
cmp
pop
mov
xor
ror
inc
mov
test
leave
dec
jae
ins
xchg
shr
stc
xor
or
shr
or
mov
sub
jecxz
mov
pop
stos
out
push
pop
inc
fnstenv
mov
sub
add
dec
push
mov
bound
in
jl
mov
cmps
mov
add
call
movs
lea
adc
mov
outs
test
scas
mov
add
inc
jp
leave
das
jno
in
pop
add
test
(bad)
js
fimul
ss
dec
lahf
inc
inc
cmp
mov
inc
gs
aam
scas
mov
push
mov
(bad)
mov
ret
cli
jmp
push
jb
pop
push
xchg
dec
push
cmc
cmp
adc
lods
call
cmp
aas
dec
jae
push
out
je
sub
xchg
mov
jp
in
xchg
or
lods
test
scas
push
jp
cmps
icebp
mov
mov
or
or
enter
stc
outs
or
xlat
jo
lea
jmp
inc
cld
in
popa
mov
jo
mov
or
inc
enter
mov
test
fs
xor
mov
imul
leave
mov
gs
ret
and
push
in
retf
mov
repz
pop
mov
inc
add
mov
arpl
mov
jbe
jp
pop
ja
nop
xchg
and
push
in
cmps
movs
hlt
mov
cmp
aas
xchg
movs
add
ss
jb
fincstp
lahf
jmp
add
add
fist
inc
sahf
or
mov
and
dec
push
dec
mov
std
inc
repz
sbb
mov
pusha
popa
ret
cmp
loope
loopne
xchg
pop
push
mov
sahf
mov
adc
add
or
mov
bound
cmps
xor
sub
pop
rcr
ja
pop
sar
lahf
dec
ss
xlat
mov
dec
add
push
fiadd
sbb
(bad)
mov
xchg
inc
sbb
sti
repz
ds
sahf
jno
pop
imul
sub
pop
adc
shl
rol
xor
jne
inc
dec
nop
loop
ficom
shl
adc
jp
lock
xchg
sub
fdivr
cli
pushf
out
pop
out
repnz
jecxz
in
ror
cld
dec
and
cmps
push
std
fist
into
sbb
push
mov
(bad)
mov
jbe
and
dec
mov
icebp
lahf
imul
cmp
sub
pop
sub
stos
mov
add
sbb
gs
adc
fbstp
call
into
and
test
and
mov
pop
inc
inc
outs
fnstenv
sahf
jmp
sub
arpl
sub
mov
ins
xchg
pop
adc
jp
fisttp
pop
adc
and
inc
xchg
fs
and
das
into
outs
fild
sub
test
aam
mov
lods
jle
sbb
push
mov
mov
push
push
loop
sub
mov
jne
mov
mov
sub
popf
test
push
inc
jae
sbb
ss
xchg
mov
fwait
push
pop
sub
cs
icebp
dec
(bad)
inc
loope
push
(bad)
cwde
mov
loop
div
inc
cmp
cli
mov
add
jo
sbb
movs
push
mov
inc
or
adc
cmp
outs
xchg
fdivr
out
in
or
ds
call
cdq
shr
fdiv
shl
xchg
jns
dec
jmp
mov
jecxz
mov
test
and
add
loop
push
mov
aad
sbb
add
sbb
cmps
sahf
mov
cmps
stc
xchg
mov
js
xlat
fld
sbb
cli
nop
pop
sub
ins
dec
mov
adc
clts
push
push
addr16
out
sub
shr
cmc
(bad)
lahf
jbe
sbb
sub
or
fwait
or
iret
dec
cmc
mov
test
sbb
loope
stc
sub
rol
adc
lods
add
repnz
inc
push
movs
ins
xchg
xchg
fsin
jae
cmps
xchg
rcr
dec
pop
pop
fild
jbe
mov
dec
inc
xor
mov
add
cmc
cld
addr16
movs
xor
(bad)
jmp
imul
adc
out
pop
or
sahf
imul
adc
popf
adc
lock
imul
enter
push
inc
mov
pop
lods
jge
int
jl
add
xchg
js
push
lds
(bad)
cmps
adc
ds
daa
jo
adc
or
mov
xchg
cdq
push
setno
inc
pop
inc
arpl
test
inc
mov
inc
(bad)
stos
gs
mov
cmp
pop
adc
pop
(bad)
mov
fcom
mov
mov
fs
mov
lea
sub
cmp
dec
int
mov
jo
js
push
push
call
mov
xchg
and
jp
inc
cmp
loop
mov
mov
mov
inc
xchg
loope
leave
jl
sub
jne
lock
(bad)
sbb
sbb
jb
ficomp
test
je
aas
in
mov
xor
sub
aad
and
out
and
push
test
pushf
neg
sbb
dec
xor
jge
clc
stc
cli
std
aam
jp
pop
or
jo
sub
dec
jg
lahf
xor
daa
rcr
ficomp
mov
jecxz
add
push
cli
mov
cmps
pop
push
xchg
test
or
or
and
cmp
fwait
mov
out
jno
add
jb
add
jmp
icebp
xchg
sub
stos
retf
dec
pop
pop
inc
pop
jb
imul
aas
ret
aaa
sahf
or
inc
cmp
ds
and
push
fld
aaa
test
xchg
mov
shr
dec
jbe
sub
sub
inc
int3
(bad)
inc
test
inc
jmp
xor
and
les
add
scas
in
out
push
cmp
mov
cmp
mov
xor
mov
adc
push
ins
mov
push
push
aaa
push
or
mov
out
xchg
(bad)
mov
sub
or
sbb
rcr
push
xor
sbb
fimul
jno
ret
lea
mov
movs
loopne
(bad)
or
dec
cmp
jecxz
mov
adc
ss
pusha
sub
enter
dec
dec
loop
cli
jne
mov
data16
push
mov
mov
adc
retf
mov
pop
pop
add
jb
movs
fidivr
push
lea
cs
pop
int
aad
fisub
adc
mov
scas
ret
mov
lods
bound
ds
stos
enter
pop
adc
jbe
sub
dec
lods
jno
xor
pop
mov
xchg
mov
mov
or
in
cmp
ret
xor
retf
xchg
and
cwde
xchg
inc
and
pusha
adc
icebp
pushf
push
mov
out
int3
dec
fmul
inc
hlt
mov
or
push
push
xor
mov
aam
rol
pop
mov
inc
sub
aas
push
pop
lahf
test
jne
outs
inc
xor
cdq
push
xor
das
xchg
pop
or
imul
les
sahf
aad
aaa
xchg
sub
ins
jmp
dec
idiv
adc
pop
cmp
shr
xor
icebp
cmp
lods
test
sub
inc
test
mov
mov
movs
test
add
xchg
pushf
xchg
cmp
dec
fwait
popf
pushf
sub
ror
hlt
xchg
mov
pop
push
dec
in
sub
call
pop
inc
cmps
sahf
and
iret
call
stc
inc
in
cmp
mov
movs
jne
aad
inc
lahf
mov
aad
sti
(bad)
cdq
jbe
mov
call
xchg
out
ss
or
popf
ins
cmp
or
cdq
icebp
fdivrp
pop
xor
sbb
add
dec
sub
in
sbb
in
call
lock
xchg
ror
loope
sar
ins
inc
es
cli
add
popa
fmul
add
push
jl
shl
faddp
pop
std
add
mov
in
xchg
cmps
popf
ds
imul
inc
scas
or
dec
dec
xchg
imul
daa
adc
test
cs
gs
jl
mov
es
cmp
ret
stos
mov
xchg
or
in
dec
inc
inc
dec
outs
xchg
mov
mov
imul
nop
retf
(bad)
xor
add
call
sbb
jno
jnp
mov
xor
iret
push
jge
and
call
xchg
mov
sub
cmc
cli
inc
push
push
test
inc
xor
je
or
out
mov
dec
repnz
scas
out
iret
ss
popa
sub
dec
(bad)
adc
int3
mov
inc
cwde
jl
out
mov
shl
loope
ins
jno
daa
ror
ds
cld
(bad)
xor
adc
jmp
mov
add
(bad)
idiv
sbb
call
add
sub
and
stos
aaa
dec
movs
cmc
and
jns
sub
arpl
mov
cmp
mov
nop
push
and
popa
adc
pop
je
dec
mov
jnp
add
xor
pop
jmp
pop
add
cdq
lahf
dec
pop
in
cwde
xor
ret
jns
sbb
sub
adc
mov
or
jo
sbb
dec
mov
repnz
pop
push
push
push
pop
xchg
int
sahf
lahf
das
push
xor
push
add
retf
ja
arpl
mov
adc
iret
inc
arpl
xor
call
push
stos
outs
add
popf
cmps
fcom
sub
mov
test
test
push
je
jecxz
pop
jae
loopne
xor
cs
test
sbb
pop
push
inc
push
shl
ja
hlt
loop
cdq
add
and
mov
repnz
inc
sub
pushf
sahf
sub
jns
dec
sti
ja
add
inc
inc
out
loop
stos
cdq
dec
movs
mov
aas
cdq
adc
cs
xchg
sbb
out
xchg
push
movntq
dec
fs
cmc
mov
or
(bad)
mov
add
mov
xchg
rcl
in
into
pushf
adc
sub
sub
lock
int
aaa
imul
mov
mov
inc
and
rcl
push
(bad)
retf
jmp
or
xor
sub
ja
sub
sbb
sbb
xchg
iret
out
data16
jmp
xor
inc
dec
(bad)
mov
fcom
(bad)
aas
fst
jge
xchg
loope
or
lea
cli
xchg
ror
fs
(bad)
fstp
xchg
enter
pop
push
fwait
mov
(bad)
rcr
xchg
sub
mov
xor
mov
imul
jle
pushf
out
fldcw
ds
or
push
jmp
test
adc
push
xchg
jg
or
inc
vunpcklps
in
rcr
test
popf
inc
xor
and
mov
xchg
add
xchg
(bad)
(bad)
cmc
and
daa
inc
adc
sub
adc
test
movs
std
pushf
aam
cs
and
dec
add
into
jbe
shl
int3
in
aad
ret
pop
out
sahf
repz
jnp
ret
and
rcr
xor
jb
add
cmp
mov
pop
aam
es
cmps
repnz
das
scas
ror
push
imul
mov
cmp
pop
fsub
scas
aad
rcr
cmps
mov
or
lds
jo
xchg
(bad)
xor
xor
or
arpl
arpl
push
push
dec
pop
outs
jmp
js
and
cmp
and
retf
jno
dec
pop
add
loop
inc
jl
inc
iret
inc
shl
loopne
xor
xor
mov
add
adc
or
mov
sar
scas
jmp
dec
add
mov
int3
pop
pusha
sub
push
imul
push
mov
fs
scas
repnz
stc
aas
mov
out
cs
dec
and
pushf
xchg
xor
cmps
loop
pop
dec
sub
jo
loope
hlt
lods
push
mov
mov
xor
sub
ds
movs
fdiv
xor
xchg
imul
into
pop
repnz
dec
xlat
jl
mov
call
hlt
loopne
not
pop
adc
sbb
push
mov
jb
add
enter
dec
push
mov
xor
scas
cmp
xchg
mov
out
push
or
and
cmps
ret
inc
ss
aam
cmp
push
sub
je
mov
pop
xlat
mov
js
cld
not
(bad)
pop
pop
jno
scas
wbinvd
mov
mov
(bad)
out
(bad)
or
imul
test
xchg
call
neg
pop
bound
add
nop
add
mov
aas
ret
mov
rol
ds
mov
stos
push
or
inc
in
repz
xchg
inc
pop
in
cmc
pop
dec
clc
movs
mov
mov
push
push
enter
jo
ret
jmp
stc
nop
or
or
jo
mov
jmp
sub
or
out
mov
cmp
call
inc
push
mov
jbe
add
sbb
retf
sbb
cli
cmc
adc
mov
lock
je
lahf
cmps
ins
(bad)
dec
adc
sbb
push
cmp
xor
xchg
cmps
arpl
mov
enter
xchg
idiv
mov
icebp
dec
xchg
movs
imul
mov
cwde
fwait
retf
jno
or
hlt
inc
mov
neg
sbb
mov
mov
ror
aam
mov
mov
repnz
imul
lods
jno
aaa
scas
in
cdq
and
jmp
test
out
test
xchg
and
xor
pop
call
push
cmp
pop
cld
sub
mov
ficom
ins
rol
test
repz
cmp
add
fidivr
movs
into
jb
cdq
arpl
(bad)
pmulhuw
add
addr16
cmp
jae
mov
ja
sbb
mov
or
mov
add
inc
repz
(bad)
pop
clc
inc
(bad)
mov
jmp
icebp
add
addr16
lods
jle
jo
test
jbe
loop
call
dec
mov
jmp
and
sahf
cdq
mov
(bad)
repnz
pushf
test
pop
pop
lahf
lahf
cmp
lds
rcl
add
pop
jge
and
pop
(bad)
or
dec
jo
mov
gs
out
push
arpl
in
repz
das
mov
inc
cli
test
mov
dec
and
imul
dec
cli
repnz
and
pop
pop
push
sub
scas
lock
jbe
jg
shr
enter
test
icebp
stos
in
pop
inc
test
(bad)
mov
enter
jle
gs
mov
and
neg
sub
xlat
push
pop
dec
sbb
shl
push
mov
xchg
mov
add
mov
xor
mov
or
cmp
xor
shl
jle
cmp
or
mov
mov
in
out
adc
add
lods
mov
adc
mov
sub
mov
int
adc
cli
inc
clc
mov
repnz
adc
and
shr
xor
add
ja
aaa
mov
sub
sbb
aam
mov
out
rol
dec
adc
inc
or
cwde
cmp
pop
jg
in
mov
scas
jno
mul
leave
and
lock
repz
pushf
arpl
loop
lahf
and
lods
les
inc
dec
mov
jecxz
(bad)
mov
sti
in
(bad)
fnstenv
pop
fnsave
xchg
dec
cmps
inc
sbb
mov
sub
gs
jb
push
pushf
iret
xor
xor
inc
out
cmp
jp
call
add
jge
xchg
mov
mov
pusha
addr16
xor
pop
xcrypt-ecb
cmps
mov
push
int
ret
int
cdq
fcom
pmovmskb
xchg
sub
(bad)
xchg
lock
push
mov
push
or
int3
jb
stos
in
add
repnz
xchg
or
xlat
xchg
push
add
test
cmp
adc
pop
mov
jno
adc
add
lods
jo
je
fsubr
cmp
daa
mov
dec
scas
call
add
outs
mov
sub
mov
xchg
std
cmp
sbb
in
push
and
(bad)
sub
lods
mov
stc
cmp
mov
fld
sbb
in
or
rol
dec
enter
lock
scas
int3
addr16
(bad)
retf
sahf
and
loope
add
das
pusha
push
dec
mov
mov
iret
sbb
and
push
repz
push
pop
ins
leave
add
lock
mov
inc
out
push
pop
xchg
or
dec
or
adc
loope
mov
ja
(bad)
sbb
sub
repz
lea
dec
push
stos
push
xchg
mov
ss
push
mov
adc
mov
movs
mov
dec
jmp
addr16
ja
jns
sub
int3
xlat
cmp
xor
cld
xchg
pushf
push
retf
dec
cli
push
ret
sub
xchg
bound
scas
mov
dec
cmp
fist
fisubr
push
mov
sub
cmp
xchg
jmp
push
xchg
loopne
inc
dec
inc
or
ficomp
inc
mov
pop
mov
and
push
inc
out
push
or
xor
popf
push
ret
jne
fidivr
stc
scas
mov
ss
jecxz
pop
or
push
imul
dec
mov
mov
call
push
and
pop
cld
mov
cmps
pop
ins
stos
rol
or
sub
int3
loopne
mov
and
and
push
push
stc
mov
les
lods
les
aam
cwde
mov
xchg
(bad)
gs
neg
sub
mov
movs
in
and
icebp
scas
jp
ret
push
rol
(bad)
cmp
cwde
call
or
push
(bad)
add
(bad)
mov
xchg
push
xor
ret
mov
xchg
daa
or
int3
add
call
mov
idiv
sahf
pop
ins
cmp
imul
mov
out
dec
dec
fbld
pop
jns
cmp
xor
call
stos
sub
stos
push
jae
add
adc
sbb
sbb
in
pop
mov
aaa
cmp
repnz
push
ss
imul
mov
pop
(bad)
jmp
pop
in
cs
pminsw
sti
push
clc
or
jecxz
enter
sbb
xchg
cmps
mov
mov
xor
push
sahf
cmp
mov
loopne
std
sbb
dec
icebp
inc
pop
aad
push
sbb
mov
sahf
push
enter
nop
jbe
jb
sahf
push
mov
push
fnsave
iret
cmp
or
sub
movs
pusha
(bad)
jle
sbb
fs
and
stos
test
push
push
jb
sbb
call
and
int
pushf
jg
int
repz
fdivr
das
xchg
adc
(bad)
mov
cs
bound
imul
and
les
push
(bad)
pop
lods
pop
jne
jp
mov
sbb
out
ss
xchg
loope
push
dec
lock
test
fwait
sub
push
sub
lahf
mov
lods
xchg
adc
rcr
scas
ja
hlt
hlt
xor
push
sub
adc
fmul
popf
shl
repnz
test
call
in
pop
or
les
lods
jle
sahf
lods
es
mov
push
sub
retf
cdq
cwde
and
jge
shr
aaa
lods
mov
idiv
sbb
jnp
lahf
cmp
pusha
pop
or
loopne
xlat
popa
or
adc
pop
add
btc
jmp
repnz
test
jmp
sub
fadd
xor
icebp
std
aas
ret
mov
inc
sbb
sub
mov
or
mov
sub
out
or
jmp
jg
ret
pop
adc
jp
fldenv
sub
aas
mov
(bad)
lods
jg
and
sub
mov
ret
aas
mov
mov
mov
mov
inc
push
xor
mov
pop
mov
add
xor
pop
sub
pop
jmp
popa
ins
cld
out
in
or
retf
fabs
pop
out
xchg
pop
fisub
mov
sub
cmps
push
pusha
jne
pop
mov
std
je
mov
or
stc
dec
dec
int
xchg
push
dec
shl
out
iret
mov
movs
(bad)
icebp
xchg
mov
aaa
mov
xor
int
pop
jb
test
inc
jno
idiv
(bad)
fcomp
mov
add
es
mov
cmp
inc
fld
add
arpl
pop
jo
cmp
and
inc
test
mov
push
pop
cmc
inc
push
add
mov
pop
xor
sbb
sbb
fwait
dec
nop
mov
mov
loop
add
inc
out
sbb
lods
loope
(bad)
cmp
add
icebp
pop
and
mov
and
cmps
(bad)
shr
mov
aaa
xchg
jmp
in
cmc
pusha
cmp
test
mov
mov
mov
fbld
nop
out
jge
mov
rcl
popf
aaa
cmps
aad
iret
leave
cwde
push
sub
or
xchg
jb
pop
adc
jo
mov
pop
mov
or
xchg
test
adc
ins
add
pop
xchg
out
loopne
aad
iret
lahf
daa
shl
push
rol
(bad)
pop
into
cwde
leave
popa
cmp
xor
mov
push
xchg
xor
mov
(bad)
mov
adc
mov
not
add
jbe
popf
aaa
or
fwait
psllq
cmps
outs
jl
cld
test
outs
ins
pop
xchg
inc
les
cmp
stos
mov
sub
lds
or
mov
out
mov
enter
retf
imul
pop
loope
retf
pop
sar
or
test
scas
ins
inc
xchg
loop
cmp
movs
cmp
dec
or
fld
call
xor
sbb
adc
inc
lds
add
and
ss
je
add
xchg
retf
cwde
stc
sbb
sub
loopne
pop
cmps
cld
fadd
repz
icebp
sub
inc
push
jo
out
sti
xchg
bound
mov
or
in
enter
dec
fstp
xchg
dec
dec
(bad)
icebp
lds
jle
xchg
and
js
pop
pop
arpl
das
cwde
sub
push
and
mov
dec
cmp
inc
mov
add
arpl
mov
shr
loopne
lds
arpl
sub
push
adc
pushf
clc
xchg
cmp
or
mov
cli
iret
xor
mov
inc
fucom
inc
jmp
sub
pop
mov
aam
jge
push
add
mov
add
jno
jae
cwde
xor
xchg
(bad)
jmp
mov
imul
sbb
mov
dec
cmp
into
pop
add
loope
dec
ret
fdivr
or
push
test
jne
scas
(bad)
inc
xchg
in
stos
fcomp
sub
inc
add
fadd
dec
std
fiadd
pusha
fstp
lahf
(bad)
mov
frstorw
in
inc
xchg
adc
(bad)
mov
ficom
in
xlat
jmp
out
fadd
(bad)
pop
push
push
shl
jmp
scas
jne
cmp
sahf
xor
repnz
cdq
push
jb
(bad)
fcmove
dec
lds
and
out
mov
dec
dec
sub
push
retf
shl
cmps
push
sub
pop
stos
dec
mov
mov
int
dec
jb
lods
fwait
test
cld
pop
inc
cli
push
shl
cmp
dec
mov
ds
loopne
clc
repnz
push
and
inc
jmp
je
pusha
(bad)
mov
sbb
leave
mov
ss
jno
pop
mov
xor
stc
sbb
jmp
retf
int3
loopne
or
sahf
cmp
jmp
fnstsw
cwde
xlat
pop
push
mov
jmp
mov
xor
jne
xor
gs
fwait
add
cmps
mov
push
fild
and
leave
movs
adc
ret
xchg
push
imul
mov
xchg
pop
xchg
mov
aas
in
retf
adc
ss
adc
lock
xchg
sub
mov
ins
sub
or
mov
sahf
mov
cmp
out
rcl
mov
movs
jmp
in
or
retf
outs
fistp
fwait
cdq
lds
aad
(bad)
ins
fistp
mov
shl
push
xchg
push
inc
std
idiv
scas
pop
mov
hlt
dec
outs
mov
arpl
and
mov
push
sub
cdq
dec
or
(bad)
das
loop
and
jge
retf
fdivr
push
sub
sub
aad
mov
pop
(bad)
ins
push
out
pop
jae
pop
push
movs
das
push
nop
xchg
cli
stos
nop
add
push
add
test
xor
adc
loopne
lods
cmp
test
dec
jl
lods
mov
or
xchg
add
sahf
dec
and
sbb
mov
sub
out
test
jo
pop
sub
daa
aad
adc
scas
outs
aad
adc
aas
das
test
(bad)
ret
loop
fstp
aas
sar
adc
cmp
sub
jbe
fwait
xchg
mov
das
adc
addr16
sbb
and
ficom
mov
rcr
sub
in
loopne
pop
pop
mov
cmp
mov
add
cdq
and
(bad)
loope
jg
leave
pop
fidivr
sub
mov
fst
sbb
jbe
push
cmp
sub
jle
inc
mov
push
xor
xor
add
mov
push
sbb
repnz
xor
(bad)
into
in
stos
enter
and
and
ret
mov
mov
xor
aas
mov
hlt
jmp
mov
push
ja
icebp
dec
cmps
loop
push
scas
int3
js
and
(bad)
mov
stc
cdq
cmps
or
mov
dec
cdq
out
jbe
mov
lea
cld
gs
movs
lahf
mov
add
bnd
or
pop
and
dec
and
in
jmp
fdivp
out
jae
or
mov
mov
adc
jl
xchg
mov
in
xchg
movs
pop
sub
enter
ror
jns
and
pushf
enter
or
dec
add
inc
mov
or
jns
test
jbe
add
lea
(bad)
mov
call
rcr
and
dec
dec
fdiv
push
xchg
push
push
sbb
dec
jmp
sub
lods
stc
add
or
(bad)
xor
cli
in
xchg
sbb
sub
cli
std
loope
jbe
shl
or
cs
add
ret
cli
pop
and
xor
sti
xchg
clc
jns
ror
adc
jo
aaa
jb
out
pop
loope
lea
jno
mov
stc
shl
or
aas
sbb
sub
or
fcmovnu
mov
or
xchg
and
bound
xor
test
add
aas
xlat
(bad)
mov
hlt
adc
xchg
(bad)
test
out
sub
jae
mov
mov
adc
pop
out
inc
inc
inc
adc
mov
les
adc
dec
sub
push
dec
or
add
mov
shr
jle
pusha
adc
add
jnp
xor
sbb
ds
mov
popf
mov
pop
xor
fst
and
xlat
sub
sbb
fidivr
inc
cli
scas
add
loope
xchg
into
fwait
cmp
hlt
sub
ins
call
dec
retf
not
inc
in
xor
inc
into
mov
rcl
push
out
xchg
daa
retf
not
jmp
dec
sbb
push
sub
push
out
cdq
or
pop
mov
xor
push
sti
int3
cdq
in
jl
ja
jle
dec
sar
movs
sub
adc
(bad)
out
jmp
fwait
xchg
int3
mov
mov
loop
leave
and
out
mov
push
not
push
inc
lea
f2xm1
xor
mov
scas
cmp
jne
fucomi
cmp
mov
pop
and
std
jb
add
sub
or
retf
pop
push
jne
adc
stc
mov
out
neg
pop
jecxz
div
push
xchg
xchg
and
test
pop
arpl
(bad)
sti
or
mov
cmp
enter
add
stos
es
or
pop
push
mov
xchg
das
mov
jno
out
xor
fisub
shl
push
idiv
js
movs
popf
stc
sbb
ins
mov
das
out
psrld
bound
pop
mov
cdq
push
add
pusha
loope
push
pop
jo
fs
jp
es
pop
cwde
mov
cmp
cmp
retf
movs
jl
jg
inc
sub
xchg
xor
push
adc
jg
dec
gs
jge
cwde
imul
(bad)
in
repz
loope
cmp
push
stc
fsubr
scas
xchg
scas
shl
pop
and
cwde
inc
push
pop
push
push
(bad)
leave
fdiv
push
out
movs
int3
fwait
adc
and
rcr
pop
bound
mov
and
cmp
aas
shr
enter
aas
pop
push
dec
adc
into
pop
and
js
in
add
pushf
add
xor
arpl
cwde
rol
out
stos
pop
lahf
loope
and
inc
jbe
shr
mov
ins
dec
fwait
(bad)
hlt
ds
fdivr
in
pushf
cmp
fld
out
and
arpl
test
cmp
cmp
inc
mov
out
in
add
push
dec
sub
sub
ins
not
enter
jae
mov
test
(bad)
jl
pop
cmps
mov
xor
push
test
bound
adc
scas
inc
add
mov
mov
sub
aad
dec
lahf
inc
mov
sub
cld
ss
jg
push
pop
out
inc
or
stos
clc
out
out
push
jmp
rcr
inc
mov
mov
mov
call
movs
ds
add
sbb
inc
fisttp
sahf
clc
xor
cwde
jge
dec
and
cmp
mov
int3
hlt
cld
sbb
int
movs
inc
fisttp
adc
cmp
jecxz
test
adc
fcomi
jg
popa
and
dec
leave
mov
or
xchg
mov
in
rcr
sar
add
sub
and
sbb
adc
stc
cmp
xchg
es
call
xchg
cmp
jne
jmp
mov
sub
adc
aam
iret
mov
fsubr
retf
nop
test
mul
jmp
or
sub
daa
sub
sbb
lods
dec
jmp
shr
mov
xchg
rol
pop
xchg
xor
mov
popa
jo
jl
ret
lods
push
es
cmp
jb
sbb
mov
lods
pop
mov
mov
xor
clc
cmp
retf
pop
or
or
enter
rol
(bad)
ret
fwait
or
fsubrp
outs
mov
jl
stos
imul
cmp
(bad)
lahf
push
inc
jmp
mov
int3
aam
or
push
inc
dec
out
push
in
lods
(bad)
cli
cmp
or
xor
or
cli
jns
je
jb
test
leave
adc
movs
test
xor
mov
fs
sbb
mov
imul
or
scas
cmp
arpl
add
pop
adc
jle
dec
jno
out
(bad)
mov
or
dec
add
push
ficomp
addr16
test
jb
cmp
jb
movs
lock
push
ja
add
arpl
add
movs
test
scas
cli
push
rol
shr
enter
in
sti
xchg
imul
call
jecxz
adc
xor
mov
xor
mov
inc
cmp
xchg
add
xor
xchg
mov
push
shl
mov
ja
mov
hlt
xor
rcr
(bad)
pop
sbb
pop
ret
cmp
or
mov
pop
pop
and
pop
cmp
iret
add
mov
and
stc
sub
iret
cli
inc
in
mov
loop
retf
out
aas
fidiv
fadd
(bad)
addr16
imul
xchg
popf
int
pop
mov
and
xchg
aam
cli
lahf
sti
sbb
in
loop
pop
test
inc
jge
jo
add
pusha
(bad)
enter
scas
stos
shr
neg
int3
lods
sbb
mov
or
and
sbb
not
stos
mov
or
xchg
and
push
outs
mov
les
jg
jle
daa
cli
mov
movs
(bad)
pop
shl
mov
cmp
add
push
xchg
fcom
sbb
sub
jbe
xor
neg
adc
and
fadd
ja
push
fisubr
pop
sar
cmp
cmc
sti
and
add
cmp
sub
lock
(bad)
xlat
or
inc
xchg
xlat
popf
sti
mov
cld
(bad)
mov
xor
or
jne
leave
rcr
sbb
or
cwde
repz
rcl
test
lods
or
xchg
mov
pop
les
rcr
retf
stos
mov
jns
out
fist
popf
mov
pop
je
ja
xchg
int
arpl
mov
push
(bad)
xor
int3
xchg
sub
mov
pop
mov
pand
jp
add
xchg
aad
or
test
movs
add
pop
jmp
js
(bad)
xor
dec
mov
cdq
push
movs
fnstsw
retf
cwde
int
xor
icebp
add
adc
inc
lock
push
mov
test
rcr
clc
pop
xor
pop
sbb
dec
inc
lods
push
fcomp
push
fistp
add
std
jo
mov
loop
xchg
pop
ins
into
sub
or
mov
mov
jb
aaa
jne
mov
push
sahf
sbb
scas
jmp
je
rol
in
fidiv
fmul
mov
(bad)
sub
shr
in
push
and
jbe
mov
cmps
sub
mov
xchg
or
outs
and
aad
xor
mov
jns
cld
and
dec
fiadd
pop
push
push
fldenv
xchg
push
xchg
(bad)
test
ret
xchg
dec
sar
les
loop
repz
xchg
rcl
les
xchg
out
sub
and
mov
shl
sar
out
xchg
outs
and
fwait
scas
sub
inc
outs
or
mov
test
out
pop
mov
ds
lods
mov
cmps
jle
jg
daa
add
outs
and
sbb
sahf
out
in
xchg
sbb
stos
movs
shr
xlat
mov
xor
mov
pop
nop
movs
jle
jno
imul
sub
in
ja
inc
sub
int3
push
pushf
(bad)
retf
out
sub
mov
mov
sbb
outs
jl
test
fs
mov
mov
cld
mov
xor
or
in
cmc
push
mov
iret
in
dec
xchg
cdq
in
xor
mov
sub
pop
add
inc
aad
add
das
xchg
push
stos
inc
iret
repz
sbb
and
push
ja
mov
sub
sbb
cmp
test
int
push
hlt
outs
ins
pop
xchg
mov
dec
mov
sbb
pop
ret
(bad)
cld
sbb
xor
jle
test
sub
fadd
cmp
inc
cmc
js
mov
dec
add
movs
push
(bad)
(bad)
mov
fs
sub
inc
xchg
pop
out
mov
cmps
(bad)
movs
mov
test
push
dec
int
push
repz
mov
dec
stos
dec
retf
rcl
cmp
xor
scas
jge
pop
mov
and
outs
mov
stc
add
pop
sub
out
sub
dec
mov
mov
je
dec
mov
dec
rcr
sahf
mov
and
fisttp
pop
stos
and
out
mov
mov
or
jle
pop
mov
ins
mov
push
mov
stos
and
cmp
add
(bad)
and
data16
mov
inc
sahf
push
fsubr
fild
cmps
mov
xchg
mov
pop
adc
(bad)
jno
or
add
sahf
fs
mov
and
js
and
dec
jb
or
mov
lahf
sti
mov
mov
fimul
imul
call
nop
es
jb
cmp
mov
lahf
sbb
pop
lods
xchg
jmp
mov
call
nop
dec
in
loope
out
ret
cs
xchg
and
retf
or
out
aaa
jle
xor
in
pop
cwde
mov
out
pop
or
into
push
xor
(bad)
jo
sub
les
ins
inc
and
sbb
adc
ror
xchg
cmps
nop
jmp
fbld
add
jae
enter
sub
or
jae
and
rol
aas
imul
push
xchg
xchg
rol
adc
mov
cmp
test
lds
push
cmp
stc
cmps
sbb
cdq
cmp
add
fmulp
and
rol
mov
sbb
mov
push
sar
xchg
mov
mov
pop
je
cmps
movs
shl
cmp
sbb
(bad)
(bad)
data16
dec
in
in
and
repz
or
ret
clc
jecxz
xor
mov
cdq
cmps
jae
xchg
in
imul
aam
mov
iret
mov
xchg
mov
cmps
mov
imul
mov
mov
push
cld
sbb
pop
ret
sub
pop
hlt
cdq
(bad)
add
das
movs
mov
jnp
fnstenv
iret
(bad)
dec
dec
aaa
loope
add
ficom
imul
es
cmp
pop
push
js
aad
or
jl
adc
xchg
cmc
loop
aad
es
sahf
or
daa
ret
stc
or
xor
inc
add
cwde
xchg
push
gs
(bad)
aas
ins
mov
lods
popf
cld
xchg
shr
sbb
pop
punpcklwd
push
and
jnp
mov
scas
loop
xchg
rcr
cdq
xor
push
jno
call
(bad)
jp
xchg
or
push
repnz
or
out
test
je
and
and
ror
imul
sub
sbb
lock
data16
cmps
push
(bad)
xchg
rol
scas
dec
jge
xor
gs
push
and
mov
mov
inc
cmp
and
jne
sub
or
xor
pop
stc
scas
int
mov
jno
sti
or
adc
sar
xchg
rcr
in
leave
or
leave
push
xor
mov
sti
mov
sub
sbb
mov
or
mov
mov
dec
fmul
(bad)
push
and
jno
push
lds
or
push
sbb
in
sbb
sub
out
mov
pop
jae
adc
mov
aad
push
mov
inc
pop
loop
push
xchg
movs
fdiv
and
cmp
mov
sbb
das
data16
add
mov
out
cmp
pop
rcl
sub
scas
dec
mov
dec
cwde
adc
mov
lahf
cmp
mov
out
inc
into
arpl
jp
sahf
xchg
mov
cmps
push
xchg
jecxz
cmc
jae
sub
clc
outs
rcr
sub
addr16
(bad)
pop
les
xor
jo
test
jl
xor
popa
xlat
xor
loope
sbb
jno
fucom
imul
xlat
xchg
cmp
jbe
dec
xor
shr
fwait
pop
into
inc
jns
sbb
cmp
push
adc
mov
in
idiv
sub
sbb
jne
and
(bad)
std
xchg
or
adc
dec
jg
cmp
out
test
int3
pmaxub
enter
jb
sub
lahf
ret
add
pop
cwde
cmp
pop
call
(bad)
pop
xlat
xchg
ret
dec
push
in
mov
xor
in
(bad)
pop
mov
add
iret
or
(bad)
fisttp
sub
fisttp
gs
mov
push
and
addr16
mov
xor
retf
gs
loop
loopne
iret
and
jge
es
sbb
fdivr
cmps
jp
mov
or
sub
xchg
imul
je
xchg
mov
iret
adc
pop
data16
into
pop
cmp
je
das
mov
jo
jno
and
xchg
ret
push
(bad)
call
jmp
mov
out
pop
lods
xchg
pop
and
push
(bad)
jg
xor
xor
data16
or
mov
jo
dec
enter
mov
push
cs
lock
add
jmp
popf
xchg
in
dec
mov
dec
jae
mov
aas
dec
pop
mov
int
mov
mov
out
dec
in
(bad)
out
fwait
mov
sbb
push
shl
test
sub
loope
xchg
out
push
xchg
fimul
push
mov
cs
bound
repz
xchg
test
jecxz
shr
bound
inc
mov
je
pop
shr
cdq
sub
imul
js
repz
stc
shr
and
pop
popa
adc
add
xlat
xchg
adc
xor
xchg
xchg
inc
sbb
pop
jmp
lds
pop
and
mov
fdivr
test
lea
xor
jns
daa
loope
xor
lahf
mov
mov
pushf
fisubr
adc
ja
push
jae
rol
jmp
or
pop
je
jmp
pop
pop
and
add
movs
loopne
dec
pop
inc
xor
call
(bad)
cmp
jns
(bad)
sub
cmp
xor
js
adc
mov
fbld
jg
inc
or
push
xchg
push
out
xor
jne
jmp
aad
(bad)
div
js
xchg
inc
cld
addr16
ret
mov
adc
inc
cwde
(bad)
cdq
pop
inc
sbb
into
mov
push
or
test
mov
sub
ins
adc
dec
jnp
pop
repz
xchg
mov
mov
adc
cmp
xchg
in
stos
in
popa
shl
inc
sub
div
int
mov
lea
dec
mul
add
inc
mov
and
xchg
outs
dec
dec
icebp
add
call
bound
shl
(bad)
cmps
inc
(bad)
push
cmc
or
sbb
add
push
push
repz
or
dec
push
xchg
cmp
mov
jns
pop
xor
lahf
jae
out
jno
sbb
stos
jg
rcr
dec
aaa
jmp
nop
jecxz
push
ss
push
xchg
adc
bound
adc
stos
ror
out
xchg
and
loop
ss
inc
dec
mov
xchg
in
push
sub
jmp
call
cmp
pop
data16
fist
mov
cmp
pushf
(bad)
jle
addr16
xchg
(bad)
mov
pop
mov
inc
xchg
mov
pop
sbb
movsx
pop
add
les
jns
ret
jo
mov
fld
inc
jge
adc
push
cmp
xchg
mov
xor
jl
fcomp
adc
stos
or
fs
or
cmp
clc
pushf
cdq
add
sbb
sbb
jecxz
mov
xchg
pop
stos
movs
lea
lahf
in
aaa
out
arpl
jmp
cdq
lock
add
mov
adc
push
sub
test
daa
pop
mov
push
in
jp
push
(bad)
out
icebp
xor
push
or
or
inc
adc
dec
mov
into
outs
push
jbe
dec
jae
aaa
xor
mov
fild
ss
jno
mov
pop
jae
xchg
stos
pop
shl
pop
cs
push
mov
or
xchg
faddp
repz
xchg
add
ss
xchg
mov
imul
in
loope
cs
mov
bound
enter
push
arpl
pop
mov
cmp
cmc
aam
cmp
test
mov
inc
sbb
xchg
cmp
fsub
pusha
jns
scas
mov
fs
call
xor
dec
test
pushf
or
daa
(bad)
leave
push
int
sbb
and
xor
fdiv
icebp
push
add
mov
fwait
sbb
out
push
pop
cmp
call
fsubr
xor
fld
xchg
scas
push
imul
pop
lea
aam
push
shr
sbb
arpl
loop
inc
mov
bound
rcr
sbb
out
out
les
push
fwait
xchg
fstp
xor
xor
sub
add
dec
sar
fsub
movs
data16
jbe
or
pop
fisttp
dec
mov
or
cdq
pusha
push
xor
xchg
push
xchg
cld
out
mov
push
mov
in
jbe
sbb
mov
jno
mov
sub
mov
sub
push
es
dec
push
pop
fistp
fcomp
clc
xlat
inc
inc
dec
pop
mov
xchg
mov
mov
adc
loopne
add
arpl
into
dec
xor
cwde
adc
div
test
shr
daa
inc
jecxz
ret
leave
push
or
jecxz
jne
adc
mov
pop
jb
out
sub
pop
mov
retf
stc
ret
inc
shl
mov
lds
push
pop
fmul
sub
mov
jp
stc
jne
ds
int
jmp
pop
pusha
push
popa
mov
mov
cmp
sti
add
in
fldenv
jne
ror
or
xchg
adc
dec
xchg
outs
in
add
xor
out
stos
mov
jno
jle
pop
ins
or
adc
movs
mov
cmp
push
lock
pop
sbb
and
push
enter
fisubr
sub
cld
js
ds
mov
jl
xchg
mov
int
arpl
cli
arpl
add
adc
cld
aaa
dec
daa
and
nop
or
out
jp
int3
ficom
fisubr
pop
jb
std
pusha
or
lock
mov
cmp
and
sub
js
add
push
jmp
pushf
cmp
xchg
sub
sti
stos
ss
adc
xor
repnz
push
jl
lds
outs
push
das
inc
aad
adc
cmp
sbb
mov
sbb
sti
inc
dec
mul
xor
cdq
cmp
inc
clc
scas
and
inc
sbb
add
adc
mov
iret
adc
mov
retf
out
sbb
arpl
mov
retf
adc
xchg
fmul
pop
jne
cs
jae
stos
imul
nop
lods
fstp
jo
call
test
ds
and
int
ficomp
or
stos
inc
into
push
jp
add
enter
cmps
or
loope
int
(bad)
jns
xor
jmp
fsub
sbb
push
in
jle
fld
gs
movs
mov
cmc
aad
pop
sub
mov
mov
or
dec
in
dec
iret
out
xchg
sub
mov
stc
adc
mov
push
xor
and
movs
mov
not
iret
repz
imul
sbb
xor
out
mov
popf
pop
or
fs
daa
outs
addr16
les
iret
adc
cmp
mov
sti
cmp
dec
pop
mov
ins
pop
pushf
mov
ud0
xor
push
aas
sbb
in
sbb
mov
adc
xchg
arpl
pop
xor
scas
adc
clc
and
sti
fnsave
xchg
jo
mov
push
push
push
jle
jge
add
movs
mov
hlt
jmp
in
mov
sub
jnp
adc
lods
mov
pop
xchg
mov
push
mov
daa
fmul
sub
gs
scas
shl
punpckhbw
shl
or
add
iret
push
nop
cmp
and
sub
(bad)
ret
pusha
inc
mov
push
iret
hlt
push
pushf
imul
add
jb
adc
mov
mov
cli
pop
aaa
mov
outs
(bad)
leave
loop
lea
jne
fcomp
inc
inc
shl
or
es
xchg
push
js
cdq
repnz
scas
cmps
push
stos
dec
dec
xchg
mov
arpl
xlat
rol
jmp
sbb
cs
scas
adc
xor
pusha
mov
and
sbb
jl
test
leave
mov
sbb
xor
mov
jmp
add
jmp
mov
xor
cmp
sbb
jae
mov
leave
xchg
cwde
add
sub
mov
in
js
dec
(bad)
mov
mov
dec
and
xor
clc
adc
fst
cdq
shl
sub
pop
out
adc
stc
and
push
and
popf
daa
cmp
dec
dec
adc
adc
aas
push
mov
cdq
push
dec
imul
pop
test
iret
sti
pushf
jbe
cmp
sbb
dec
adc
std
adc
shl
sub
shl
mov
cld
mov
dec
pushf
in
loope
push
and
ret
mov
retf
mov
je
clc
mov
leave
push
outs
cmp
out
sub
jne
add
pop
pusha
pop
push
and
add
add
pop
sti
data16
mov
pop
loope
xchg
push
jecxz
gs
xor
and
call
jge
push
mov
stos
and
pop
fistp
test
int3
cs
cmp
push
shl
jne
call
xchg
jnp
add
ds
mov
mov
push
xchg
sti
lahf
outs
fimul
jge
icebp
test
jnp
sub
push
stc
ret
stos
(bad)
icebp
cmp
pop
sub
push
loop
mov
stos
aas
ss
aaa
lods
xor
test
nop
popf
jno
xor
(bad)
out
and
out
jne
and
test
int
or
(bad)
mov
loopne
or
inc
in
loop
jecxz
xor
(bad)
push
xchg
adc
mov
mov
jmp
fld
movs
xchg
pop
aam
cmp
repnz
sar
sbb
mov
sub
xor
xchg
pop
xchg
add
push
ror
xor
dec
and
mov
and
das
or
aaa
fcom
jnp
and
call
test
stc
jns
neg
push
push
icebp
inc
mov
xor
dec
jmp
bound
(bad)
(bad)
repz
and
inc
jge
xchg
fwait
push
pop
sbb
mov
jle
es
movsx
shl
adc
jne
loope
mov
jno
pop
retf
cmp
dec
xchg
push
and
dec
xlat
ret
and
xchg
in
xchg
(bad)
(bad)
ss
pusha
movs
cwde
pop
dec
mul
lock
jle
xlat
cmp
cdq
push
adc
sbb
nop
out
jmp
cwde
pop
and
xor
push
scas
mov
bound
in
gs
pmaddwd
adc
dec
int
or
sub
xchg
cli
stos
ss
push
push
scas
sbb
jl
std
ja
push
or
pop
(bad)
in
pop
cmp
mov
mov
retf
ins
jg
cmp
ja
clc
pop
hlt
xor
inc
mov
scas
imul
cmps
pop
pop
or
(bad)
int
sbb
xchg
xchg
in
cmc
mov
sti
mov
or
pop
jmp
push
inc
inc
xchg
out
sti
adc
in
rcl
dec
sbb
rol
push
xor
rcr
loopne
retf
xchg
fmul
rol
stc
ror
fs
push
or
jns
(bad)
dec
jmp
dec
loopne
pop
test
out
push
pop
or
(bad)
lock
push
popa
test
mov
nop
lea
call
outs
or
lds
clc
push
mov
movs
shl
dec
mov
push
xchg
sbb
scas
pop
push
btr
enter
xchg
es
xor
adc
xor
sbb
xchg
movs
mov
jge
cmp
loopne
push
bound
ss
jnp
xlat
xor
inc
and
loope
sub
and
cmp
sub
das
fcom
into
or
sub
mov
push
mov
bound
push
retf
sar
dec
mov
cmp
mov
mov
dec
int3
xchg
int
xor
push
xchg
xchg
jo
jmp
jle
mov
ror
or
loope
lea
fst
pop
test
in
fld
daa
cmp
adc
mov
inc
sub
cs
call
es
xchg
pop
inc
xlat
mov
push
jbe
cmp
add
jns
clc
xchg
mov
hlt
je
adc
and
mov
fld
fnsave
push
(bad)
out
lock
pop
mov
mov
adc
call
ss
(bad)
cs
loop
mov
mov
push
adc
mov
rcl
xchg
push
stos
mov
sbb
push
add
aam
cmp
lock
ficom
out
sbb
push
xadd
clc
sub
in
push
push
out
jbe
out
lock
out
loop
sbb
pusha
cmp
iret
mov
movs
inc
dec
lds
psraw
jbe
xchg
mov
daa
jp
jle
sbb
adc
movs
mov
xchg
or
stc
and
mov
out
and
cmp
jmp
inc
add
xchg
and
mov
sbb
and
outs
or
jmp
lods
shl
call
sub
add
fldpi
xor
inc
inc
mov
mov
inc
aad
jmp
sub
ret
cmps
adc
lods
xchg
sub
push
out
ds
scas
push
stc
cmps
inc
lahf
push
sub
call
jmp
and
mov
jmp
sbb
inc
jp
ja
xchg
ja
inc
jnp
out
push
sub
fwait
nop
out
std
aaa
cld
int
inc
inc
push
jp
pop
std
in
in
dec
stos
jb
mov
add
movs
rcl
test
test
ret
pop
retf
mov
cwde
sub
test
pop
repnz
repz
in
add
xchg
dec
or
jmp
mov
add
hlt
jp
adc
pop
or
mov
test
inc
aaa
jmp
repnz
data16
pop
or
imul
adc
sahf
or
fcomp
push
ficom
or
jnp
pushf
xchg
mov
or
xchg
jle
fmul
sbb
xchg
cmp
sbb
int
lahf
mov
cmp
lahf
fwait
add
cmp
or
mov
fstp
jg
add
js
jecxz
nop
data16
inc
js
(bad)
fsubr
and
push
popf
xchg
scas
cmc
retf
sub
sub
adc
add
cs
adc
jae
xchg
push
push
test
push
mov
jo
jae
jns
(bad)
cs
pop
dec
add
imul
popf
lds
xchg
mov
por
aam
nop
adc
sti
movs
xchg
push
mov
aad
push
(bad)
dec
scas
out
pop
push
jp
mov
jae
inc
jb
in
(bad)
shr
jle
lahf
mov
mov
test
jnp
test
out
loop
ja
aam
pop
pop
or
and
inc
aaa
cmps
test
int
mov
inc
xor
mov
std
addr16
ror
jnp
fidiv
mov
neg
and
mov
pop
outs
xor
add
push
mov
aaa
adc
aad
inc
mov
aam
adc
adc
nop
int
inc
mov
dec
push
xor
int
pop
lds
and
adc
movs
lock
and
loop
sub
xlat
iret
sbb
mov
xchg
fidivr
stc
aas
(bad)
loope
(bad)
adc
mov
sbb
stos
lods
add
dec
pavgw
mov
jl
adc
(bad)
inc
jl
hlt
fwait
aaa
imul
pop
fiadd
shl
jecxz
ret
addr16
cmp
pop
(bad)
mov
retf
mov
dec
loop
mov
ret
les
add
cs
int3
adc
test
ins
push
jmp
cmp
mov
jmp
pop
sub
movq
data16
out
les
xor
adc
sub
mov
ins
jmp
dec
sbb
(bad)
das
or
mov
adc
add
ja
das
ja
mov
pop
mov
push
aam
adc
imul
sub
sti
je
push
lock
les
jg
cmp
mov
aad
je
jmp
nop
and
xchg
pop
rcl
jae
cmp
push
loope
mov
add
sbb
mov
sbb
sahf
loope
or
add
sbb
ret
adc
mov
and
cmp
adc
push
sbb
xchg
pop
cmp
xor
sub
cmps
into
dec
pop
loopne
dec
mov
push
ins
enter
movs
cmp
hlt
(bad)
lock
hlt
outs
jge
inc
into
adc
(bad)
dec
or
cmp
pop
out
aas
jnp
int
(bad)
dec
inc
adc
jp
jbe
mov
hlt
sub
inc
ret
pusha
das
or
loopne
icebp
push
xchg
out
test
dec
daa
and
jae
jmp
cmp
pop
inc
mov
mov
adc
xor
push
jne
or
in
sub
pop
repnz
arpl
add
enter
jnp
cmp
add
mov
xchg
sahf
lahf
pop
cs
movs
pop
scas
add
mov
pop
push
sahf
(bad)
data16
rcr
fld
adc
outs
test
div
sahf
push
lock
lock
sub
inc
mov
xchg
mov
sbb
adc
push
movs
in
pop
rcl
jmp
das
pop
sbb
imul
add
xor
(bad)
daa
xor
sbb
cmp
(bad)
pop
call
retf
or
cli
xchg
pop
and
push
cwde
mov
hlt
pop
or
xchg
adc
add
(bad)
xor
mov
inc
mov
pop
add
pusha
test
out
dec
ins
cmp
pusha
add
or
sbb
neg
xchg
lods
mov
(bad)
sub
mov
push
cmps
rcr
aas
stos
pop
ins
xlat
jmp
push
loope
push
int
cs
(bad)
jae
stos
aad
jae
adc
outs
mov
scas
and
cmp
cwde
mov
rcl
hlt
mov
pop
mov
loop
mov
je
sbb
dec
scas
arpl
jg
push
call
(bad)
mov
jns
cwde
mov
cmps
mov
fdivr
push
adc
es
out
mov
xor
pop
div
dec
sub
sar
scas
sub
dec
imul
xchg
or
sbb
hlt
sbb
cld
rcl
add
repnz
test
cmp
and
sub
outs
or
xchg
std
xchg
jne
retf
mov
push
out
mov
or
dec
xor
inc
nop
inc
jecxz
mov
inc
les
xchg
jb
fsubp
mov
dec
div
xchg
fwait
cdq
xchg
rcr
pop
inc
push
sahf
mov
cmc
sbb
mov
pusha
inc
mov
ret
fcom
push
clc
fcmovb
and
jmp
sahf
mov
ja
pop
add
(bad)
sub
retf
xor
mov
adc
int3
push
imul
push
fmul
dec
rol
dec
adc
fcom
lods
mov
(bad)
mov
or
xor
push
adc
hlt
retf
sub
in
xor
jb
push
pop
mov
popa
mov
inc
jb
les
imul
fnstenv
xor
sahf
loop
push
(bad)
ja
jae
mov
xchg
sbb
imul
sbb
sbb
popa
mov
dec
lahf
shr
cmp
arpl
cld
sub
cmp
retf
aaa
or
dec
sbb
scas
adc
fistp
mov
add
jl
push
or
int3
(bad)
pop
cmps
test
mov
mov
mov
cmp
retf
cwde
jge
cmp
imul
mov
dec
jg
pop
and
aad
mov
lock
sub
pop
retf
cmps
movs
push
(bad)
cmps
inc
xchg
sbb
cdq
push
inc
push
ins
ror
mov
loopne
loop
test
inc
sbb
adc
dec
cmp
pop
cmp
pop
call
dec
or
add
stos
neg
xchg
xlat
pop
or
lahf
inc
mov
outs
mov
mov
mov
add
push
cwde
xchg
jmp
mov
push
jecxz
mov
jne
loop
jecxz
push
loop
pop
fadd
cmp
loopne
dec
add
jmp
int3
out
(bad)
popf
mov
(bad)
push
xor
les
cmp
loop
out
or
inc
outs
in
fs
jbe
fisttp
xlat
mov
loop
scas
and
pusha
loop
inc
inc
sub
(bad)
call
es
lock
test
add
into
dec
lds
and
and
mov
jge
cwde
aaa
out
out
jmp
jno
out
ds
or
push
push
stos
shr
cmps
(bad)
outs
and
fist
fst
mov
int3
iret
jno
inc
and
jnp
jp
or
pop
xchg
mov
inc
ins
or
fdivr
stos
pop
or
pop
popa
hlt
cmp
fnsave
push
imul
repz
loopne
jo
outs
cmp
or
rcr
iret
js
push
pop
or
test
fnstenv
adc
arpl
cmps
ss
mov
xor
shr
pop
fiadd
add
sub
(bad)
pop
pop
xchg
pop
mov
jmp
lods
sbb
aam
and
mov
aad
imul
addr16
mov
cs
movs
push
cmp
outs
shl
ret
sub
out
jmp
xchg
and
call
push
mov
adc
sbb
ret
scas
popa
popf
retf
scas
add
into
fdiv
xor
jne
imul
mov
cmp
(bad)
xchg
mov
call
push
stos
fild
xchg
les
pop
jle
in
enter
sbb
push
out
popa
(bad)
pop
ret
rcl
jmp
push
sbb
ret
imul
pop
std
push
jnp
ret
adc
mov
xchg
out
dec
mov
and
cmps
add
pop
jns
mov
dec
xchg
sbb
mov
cmps
sub
pop
mov
cs
pop
jge
sbb
out
test
and
dec
shl
xchg
test
in
ret
and
push
pop
mov
and
mov
xchg
mov
sbb
ficomp
mov
fst
xor
sub
cmp
pop
popa
push
sbb
mov
(bad)
sti
sbb
dec
pop
cmp
sub
push
xchg
cmp
xchg
mov
jno
retf
je
jmpw
xor
pop
mov
xor
js
rcr
inc
test
pop
xor
test
jns
ror
sbb
jnp
push
gs
push
push
ss
das
lea
add
das
scas
mov
out
add
out
pop
sbb
scas
in
gs
out
test
outs
ja
pop
in
xchg
shl
cmp
lods
test
push
pop
push
loopne
mov
test
test
imul
mov
inc
test
test
jge
sbb
jmp
add
inc
cdq
xor
pop
xchg
jmp
pop
test
and
fldl2t
lahf
ja
xor
out
mov
repz
lea
bnd
pop
xchg
push
add
mov
jbe
mov
and
mov
inc
xor
ror
jle
xchg
sub
add
ds
push
mov
call
xchg
mov
fld
sbb
test
(bad)
rol
stos
lods
mov
outs
jecxz
adc
outs
push
jge
jle
dec
xor
ror
pop
xchg
push
stos
(bad)
xlat
mov
aas
lods
mov
inc
js
imul
stos
loope
sub
mov
jmp
mov
lock
mov
callw
push
mov
mov
add
fwait
xor
sbb
cmp
test
mov
and
xchg
ror
add
jne
pusha
or
mov
inc
mov
or
jbe
(bad)
ins
inc
add
test
call
jno
pop
lock
repnz
stc
mov
mov
sbb
in
sub
jbe
pop
sub
pop
sub
jbe
jmp
stos
or
jp
in
movs
popf
cli
sbb
mov
xchg
jmp
outs
or
and
fwait
mov
jp
lahf
ds
lods
dec
push
fs
and
mov
push
push
fwait
loop
aas
mov
or
inc
arpl
(bad)
int
and
test
out
in
shl
repnz
arpl
repz
in
jmp
movs
call
jb
dec
add
lock
pop
(bad)
iret
and
enter
test
adc
test
nop
sub
xchg
cmc
call
in
mov
xchg
xchg
mov
gs
into
in
mov
inc
sbb
sti
cmp
bound
int
cs
xor
icebp
and
mov
push
div
push
sub
dec
cmp
inc
das
cmp
dec
in
jl
loop
fs
xchg
imul
std
enter
adc
mov
sub
mov
pop
mov
xchg
stos
push
scas
xchg
ret
lds
xor
mov
or
movs
cmps
fisubr
sbb
xlat
sub
xor
mov
je
sbb
fwait
sbb
fyl2xp1
retf
aas
lahf
sbb
push
cmp
mov
cmp
xor
cdq
fisub
push
call
cdq
(bad)
clc
xchg
inc
sbb
push
sub
imul
inc
push
jo
jle
and
xor
test
adc
call
lea
dec
shl
jle
sar
mov
xor
inc
pop
mov
mov
xchg
push
xchg
mov
test
jb
shr
add
cwde
repnz
mov
pop
mov
icebp
mov
fcmove
add
sbb
xchg
repz
ret
mov
jns
mov
shl
and
push
ret
jg
and
fistp
in
jmp
sbb
adc
pop
push
stos
sqrtps
sbb
cmp
dec
pop
push
(bad)
or
sub
adc
lds
cmps
pop
jo
push
jns
and
dec
adc
mov
add
xlat
add
sbb
dec
enter
scas
stc
push
sbb
aas
dec
push
add
dec
in
movs
xchg
sub
movs
ds
xor
aam
aam
lahf
adc
out
inc
into
(bad)
into
sbb
icebp
mov
fld
mov
adc
outs
add
pop
mov
pop
mov
ret
push
jno
test
sub
jne
mov
loopne
xchg
jmp
pop
and
xchg
xor
mov
pop
add
gs
repnz
fimul
cmps
sub
out
fwait
dec
xor
sbb
xor
pushf
shr
sbb
pusha
adc
sub
(bad)
inc
arpl
adc
xor
stos
jmp
fwait
xchg
(bad)
ret
imul
daa
into
and
jecxz
sbb
icebp
xchg
sti
adc
and
int3
in
jno
or
cdq
movs
jae
pop
ret
cmp
fisubr
jp
cmp
xchg
mov
xchg
jno
cmc
pop
lods
pop
jnp
or
cmp
mov
inc
push
sbb
adc
mov
dec
cld
hlt
adc
cwde
sub
scas
xor
ins
fs
mov
jmp
scas
inc
xlat
mov
lds
or
sub
inc
or
ret
xchg
in
mov
jb
sbb
outs
add
pop
xor
rcl
setns
xor
test
aas
and
push
les
and
sahf
inc
mov
xor
cmps
fs
in
add
aaa
dec
unpckhps
jnp
dec
cdq
or
scas
fld
stc
out
mov
daa
cmc
jle
ins
into
dec
(bad)
mov
pop
iret
stc
(bad)
(bad)
and
or
arpl
and
mov
jnp
xor
push
jle
dec
cmc
lods
pop
pop
xor
sub
dec
mov
aaa
mov
mov
test
cmps
test
popf
movs
pop
out
mov
inc
push
jmp
in
dec
(bad)
mov
inc
add
pop
popf
xchg
in
aam
sbb
ins
xor
rcl
xor
rol
mov
or
jl
nop
stos
jo
outs
add
pop
jno
push
xchg
in
inc
pop
mov
sbb
cdq
add
cdq
mov
cmps
nop
mov
fiadd
inc
mov
pushf
push
jle
pop
ficom
rcr
mov
sub
inc
jnp
popa
int3
cmp
mov
shl
int3
mov
cmps
push
mov
xchg
aaa
mov
ds
or
(bad)
push
mov
xbegin
movs
or
fld
cld
hlt
push
jae
aam
fs
arpl
sar
rcr
mov
lods
push
int3
imul
cmps
sahf
cmp
xor
pop
mov
retf
inc
pop
mul
or
sbb
mov
mov
or
js
adc
or
mul
fadd
add
mov
sbb
xchg
push
mov
cmps
cmp
out
jecxz
sub
out
shr
fild
rcr
push
xor
dec
xor
mov
push
mov
shl
xor
xchg
test
daa
adc
sub
cmp
mov
movs
call
daa
es
pop
mov
dec
or
mov
inc
mov
shr
lds
mov
mov
xchg
les
xor
xchg
sub
jle
inc
sub
and
aam
lds
retf
inc
das
pop
rol
aam
in
and
adc
push
repnz
in
pop
ret
stos
cdq
add
inc
fcomp
push
xchg
daa
push
sbb
push
sub
dec
pop
into
xlat
mov
mov
cmp
inc
push
fmul
call
scas
aaa
mov
aas
loope
adc
or
pop
mov
repz
es
sbb
test
fcom
fsubr
and
mov
fwait
jl
sbb
imul
sar
movs
sbb
mov
xchg
jmpw
xor
pop
push
shl
push
iret
test
cli
mov
sbb
out
xor
jecxz
test
jnp
ret
iret
sub
sar
mov
jle
or
jns
push
push
daa
xor
pop
(bad)
mov
(bad)
fdivrp
jg
mov
cmc
add
call
sbb
sbb
mov
or
imul
add
call
inc
fbld
addr16
out
stos
lock
sub
daa
jp
cmp
inc
mov
(bad)
loop
jbe
mov
fadd
out
jns
xor
loop
push
fist
sahf
(bad)
js
dec
inc
pop
push
fnstsw
push
xor
push
adc
adc
arpl
mov
cwde
js
or
mov
or
jmp
test
inc
es
mov
je
push
nop
frstor
mov
add
in
imul
retf
cmp
pop
or
mov
and
xchg
or
cdq
lods
xchg
mov
movs
inc
and
push
mov
clc
daa
mov
jns
fistp
xchg
outs
push
and
ss
repnz
sub
adc
adc
outs
xor
(bad)
pop
push
pop
cmp
mov
pop
pop
jecxz
ret
addr16
adc
xchg
test
stos
mov
sub
inc
(bad)
pop
cmp
sbb
lahf
fld
jmp
pop
or
daa
loop
push
sbb
xchg
sahf
push
int3
push
dec
pop
fs
mov
jp
bound
adc
pop
call
pop
inc
aam
(bad)
or
mov
icebp
add
push
sti
leave
aad
cmps
dec
jo
dec
jp
mul
rcl
js
mov
jge
(bad)
pushf
out
dec
arpl
lods
(bad)
push
xor
iret
adc
and
jb
cmp
cmp
mov
inc
push
jge
mov
inc
imul
out
ret
aaa
cdq
ret
es
xchg
fistp
add
push
imul
sub
sbb
sbb
cli
lods
push
cmp
mov
ficomp
call
jns
and
add
nop
rcl
mov
fwait
sub
push
mov
int3
aaa
sbb
retf
dec
js
xchg
adc
cmc
fwait
addr16
jg
icebp
fimul
jb
or
retf
mov
mov
mov
in
sbb
mov
(bad)
mov
outs
sub
dec
or
jae
rep
bound
repz
arpl
mov
bnd
pop
leave
enter
mov
pop
nop
jo
add
jge
cs
xchg
repnz
push
dec
jo
fistp
repz
cmp
pop
leave
xchg
adc
inc
add
ret
ins
jbe
fsub
stos
out
push
lods
iret
jge
and
fs
fdivr
or
nop
aas
in
pop
mov
xchg
shl
inc
ror
outs
retf
test
shr
ins
(bad)
sbb
stos
rcl
jecxz
test
cmps
xchg
push
cs
(bad)
push
out
cmp
ins
inc
or
jmp
outs
add
mov
xlat
lods
fistp
adc
imul
das
push
aad
mov
aad
pop
jo
pushf
clc
mov
xor
xchg
or
dec
dec
sahf
cwde
mov
imul
cwde
fld
jno
loope
add
in
ins
pop
lods
scas
sbb
or
ret
sti
xchg
cmp
cld
mov
test
dec
scas
in
xor
jl
dec
enter
adc
adc
adc
test
push
test
jbe
dec
arpl
and
test
retf
retf
dec
cmps
hlt
push
bound
jp
adc
in
mov
ret
retf
mov
call
cmp
retf
retf
adc
adc
dec
dec
cmp
aam
mov
or
jl
stos
test
cmp
cmp
enter
dec
aad
popf
xchg
test
inc
push
mov
test
aam
push
push
fnstcw
mov
and
imul
add
in
add
data16
mov
cwde
sbb
xchg
mov
mov
sahf
xchg
inc
mov
ficomp
mov
div
retf
lea
loopne
dec
inc
or
adc
scas
dec
and
push
jg
sub
add
hlt
sti
push
clc
mov
jmp
and
jb
mov
iret
(bad)
rol
loope
(bad)
iret
inc
mov
ds
sub
int3
push
xchg
pop
xchg
jp
cmc
fst
push
mov
data16
mov
hlt
xor
cmp
cs
in
ins
mov
cmp
sar
movs
fwait
addr16
sbb
test
adc
mov
shr
out
jne
scas
cmps
pop
cmp
adc
and
jle
xor
lds
mov
xor
xchg
mov
push
pop
xor
mov
mov
clc
mov
mov
in
sbb
imul
mov
movs
mov
mov
loop
push
jle
jb
addr16
jno
adc
lods
or
jns
jbe
or
(bad)
into
add
call
test
inc
xor
or
fs
pop
fistp
addr16
lock
push
jno
xor
in
pusha
pop
push
lock
repz
dec
xchg
repnz
mov
and
adc
xor
jnp
dec
inc
retf
(bad)
nop
movs
xor
imul
jmp
add
cmp
das
hlt
sbb
push
mov
loop
jae
fdivp
inc
lods
pop
scas
pop
dec
jne
mov
xlat
outs
mov
lods
movs
push
or
sub
(bad)
aaa
xchg
sbb
(bad)
cmp
add
movs
pop
cmp
stos
call
cwde
mov
js
es
cwde
jl
jns
sti
cdq
sti
push
fdivp
in
adc
mov
pushf
icebp
add
inc
frstor
mov
nop
xchg
nop
mov
and
inc
out
mov
in
nop
push
jne
movs
popa
pop
fs
jmp
xchg
dec
loope
popa
cld
pop
push
cs
adc
loop
outs
mov
movs
lahf
(bad)
ss
sar
das
sub
lahf
xor
and
iret
imul
xchg
pushf
rcl
mov
inc
inc
mov
inc
mov
add
xchg
mov
stos
daa
out
push
stos
js
jno
pusha
lea
or
sub
pop
add
jbe
mov
jne
iret
cli
mov
mov
pop
in
adc
stc
and
mov
mov
or
lods
cmps
xchg
in
and
pop
pop
jmp
es
and
pop
sub
add
pushf
out
inc
sbb
jp
xor
je
jecxz
iret
imul
ret
lods
ret
outs
pop
(bad)
adc
xor
imul
inc
loope
pop
inc
stos
bound
mov
fnstcw
jo
aaa
and
dec
pop
movs
mov
jle
push
icebp
push
imul
jb
rcl
cs
pushf
pop
rcr
sub
cli
in
xor
jmp
pop
outs
iret
ror
test
daa
pushf
xor
ror
adc
sub
xchg
outs
jne
sbb
jne
and
jle
mov
xchg
mov
mov
pushf
and
popa
ror
jmp
xchg
lahf
mov
push
data16
pop
out
jg
test
sar
jb
cmc
and
mov
xchg
in
aaa
dec
mov
pop
push
lea
js
aad
fcmovb
sub
sahf
xor
sub
pop
dec
cdq
pop
scas
mov
mov
das
add
adc
sbb
pushf
xor
xor
xor
sahf
enter
adc
pop
add
mov
scas
iret
cmp
pop
(bad)
jnp
pop
mov
lahf
push
sbb
dec
lock
push
in
jl
xor
clc
pop
pusha
aas
cmp
cs
loopne
(bad)
psrad
ret
xchg
shl
aas
mov
and
mov
lock
jne
loope
(bad)
pop
jmp
movs
scas
push
cmc
inc
out
popa
add
inc
cld
das
sbb
mov
bound
das
mov
fsincos
call
sbb
sbb
in
iret
scas
pop
retf
das
add
(bad)
movs
fistp
cs
pop
inc
shr
cdq
add
inc
pushf
hlt
fs
sti
add
sbb
jmp
cmp
jmp
out
mov
xor
aaa
inc
push
xchg
icebp
ja
xchg
test
fidivr
inc
ds
aaa
std
mov
jne
dec
retf
push
outs
les
out
cmp
(bad)
cmps
fnstenv
or
fistp
scas
sub
xchg
mov
cli
jmpw
xchg
stos
sub
ins
rcl
lods
or
inc
pop
ins
adc
out
push
inc
int3
bound
xor
call
jl
test
popa
add
out
xchg
mov
cmp
xor
scas
push
jo
push
xchg
or
jae
dec
pop
sbb
sub
inc
std
aad
cmps
mov
sahf
or
xor
std
imul
fcom
jae
or
mov
dec
inc
and
inc
push
add
arpl
or
lea
cmp
(bad)
fdiv
mov
push
ret
icebp
je
sub
call
cmps
mov
sub
sub
scas
mov
mov
in
test
dec
es
mov
mov
aad
fld
xchg
push
loop
jbe
packuswb
scas
gs
cmp
or
push
rol
test
lods
mov
push
(bad)
fimul
out
test
dec
fist
out
dec
add
cwde
fistp
xchg
out
push
mov
jb
std
sbb
and
xlat
ins
jp
dec
or
inc
popa
cmc
retf
or
xchg
in
cmp
pop
or
popa
es
pusha
or
mov
push
iret
gs
retf
(bad)
mov
lahf
test
aam
jp
neg
retf
push
test
jb
and
mov
(bad)
push
sub
rcl
outs
lods
loop
in
dec
int
inc
jmp
popf
hlt
outs
in
stos
fdiv
adc
das
fldenv
pop
arpl
ins
inc
inc
adc
sahf
in
ins
fcomp
mov
inc
or
ret
mov
pop
fwait
mov
(bad)
call
repz
test
xor
sbb
lahf
pop
jae
lock
xchg
inc
es
frstor
sysexit
aas
cld
jmp
sbb
dec
arpl
jge
mov
mov
popa
adc
mov
repz
xchg
or
(bad)
sub
xchg
push
jo
pop
popf
inc
mov
jns
mov
mov
ret
ret
and
xchg
xchg
(bad)
xor
icebp
es
mov
sub
(bad)
pop
sahf
jmp
xchg
call
push
or
out
test
sbb
(bad)
fisttp
pushf
fidiv
ret
cld
lods
ins
arpl
cmp
xor
call
imul
sub
add
enter
or
mov
push
push
pop
data16
call
push
and
sar
mov
jl
outs
xor
daa
stos
icebp
sub
mov
xchg
cmp
mov
fcmovb
mov
xor
xlat
inc
pop
xor
pop
(bad)
adc
shr
push
imul
sbb
popf
not
fst
ret
(bad)
ror
cs
scas
aad
xchg
(bad)
adc
sbb
xor
jge
xchg
inc
mov
nop
push
sub
or
adc
cmps
mov
mov
mov
lock
movs
mov
enter
fwait
jae
cmp
test
ss
jns
mov
jmp
xchg
data16
mov
sti
cmp
xor
stos
scas
mov
out
(bad)
sub
jmp
xchg
cmp
out
mov
pushf
arpl
out
and
outs
(bad)
pop
lods
lods
and
and
adc
cli
cli
mov
xor
jae
ds
jg
out
nop
(bad)
leave
lock
fsub
js
adc
inc
sub
lock
mov
sub
fs
push
int
(bad)
fld
dec
inc
or
pop
inc
dec
movs
scas
cmp
pop
ror
xchg
test
test
aam
adc
test
cmp
or
cwde
xchg
(bad)
pop
mov
pop
cmp
outs
imul
int3
pop
inc
mov
stos
popa
test
add
call
lods
jno
sbb
ins
mov
popf
lods
jg
cmc
mov
push
jbe
iret
mov
sub
retf
sbb
jge
mov
jge
mov
icebp
in
in
(bad)
in
stos
loope
and
cmps
out
dec
xchg
or
jae
cmp
jnp
(bad)
movs
cli
mov
sbb
in
mov
scas
xchg
xor
adc
jno
enter
lds
mov
mov
daa
popf
out
jp
stc
retf
call
loopne
outs
daa
inc
sahf
aad
inc
mov
dec
fldcw
xor
stos
sub
neg
sar
into
test
xor
cmp
js
inc
ins
mov
nop
ret
popa
mov
lods
inc
mov
sti
xor
cmp
les
xor
ror
and
xchg
scas
pop
int3
aas
pop
out
int3
inc
call
movs
cdq
jmp
mov
fwait
movs
cdq
add
xchg
mov
arpl
xchg
scas
retf
or
mov
pop
stc
mov
pop
inc
jle
sbb
enter
push
push
mov
xchg
call
jns
outs
fistp
fcomp
dec
xlat
call
dec
ret
mov
sub
and
stos
(bad)
aam
jno
mov
adc
push
and
aaa
rcl
iret
mov
add
shl
ret
out
adc
adc
test
fisubr
sti
arpl
jmp
daa
push
push
pop
xor
adc
add
repz
adc
loop
aad
xchg
push
inc
push
mov
outs
pop
cmp
sub
push
fisttp
or
sar
idiv
push
(bad)
jg
ja
mov
shl
jmp
mov
adc
mov
xor
push
mov
adc
mov
adc
add
repz
es
sub
test
or
mov
jb
push
jl
daa
cmp
mov
in
loop
bswap
dec
retf
das
js
push
mov
jecxz
test
mov
and
mov
ror
hlt
push
(bad)
cmc
inc
sub
and
test
cmp
hlt
scas
out
dec
fwait
cmp
icebp
push
xor
jb
sbb
or
fld
adc
repnz
add
dec
add
push
sub
movs
inc
xchg
dec
retf
(bad)
(bad)
push
push
ins
scas
and
mov
dec
cmp
mov
lea
bound
retf
mov
loop
or
bound
test
inc
adc
add
mov
jmp
pop
push
std
sti
out
ins
cmp
int
cli
mov
das
das
mov
in
mov
shr
fdiv
(bad)
cs
xor
pop
dec
jge
jo
mov
out
in
inc
and
not
sbb
mov
cmc
mov
mov
call
mov
mov
cmps
add
lds
xchg
rcl
cdq
pop
js
das
sub
xor
in
retf
ds
inc
jb
inc
ins
add
and
dec
je
xchg
mov
pop
cdq
ins
scas
jb
pop
dec
xchg
sub
outs
add
jmp
sbb
push
test
sbb
(bad)
in
test
fst
sub
cmp
ror
push
test
adc
cmovne
scas
inc
sbb
sub
fistp
(bad)
fild
jge
inc
mov
scas
loopne
ja
leave
inc
xchg
push
xchg
jo
idiv
dec
and
adc
loop
push
xor
jns
sbb
mov
or
or
out
pop
jno
push
jle
in
ins
mov
sahf
sbb
xor
sub
call
and
repz
or
mov
shr
inc
or
sbb
fisttp
mov
loope
ds
sub
jne
loopne
js
in
or
add
and
push
retf
and
bound
sub
in
xor
daa
push
das
push
or
xchg
xor
jl
mov
jbe
fcom
ror
cmps
pushf
stos
(bad)
dec
cld
mov
shl
aas
aaa
mov
push
cmp
fs
iret
(bad)
popf
xchg
sub
pop
std
bound
cdq
inc
aad
clc
mov
shl
mov
jae
cdq
or
stc
mov
ins
sbb
retf
leave
nop
lock
les
les
or
mov
aam
adc
lgs
fimul
cmp
or
push
fcmovnu
push
shr
jg
fmul
outs
mov
daa
scas
sbb
or
and
jmp
cmp
dec
ja
cmc
sub
xchg
fst
(bad)
xchg
sub
mov
mov
ins
scas
fwait
test
xchg
inc
fist
dec
ror
xchg
ret
add
fst
rol
sbb
or
mov
mov
int
leave
sbb
xchg
or
cs
ins
and
xchg
(bad)
push
repnz
pop
push
data16
xchg
inc
mov
or
jne
int3
push
cmps
lock
ds
xor
jne
shl
pop
and
and
pop
and
xchg
inc
int
fadd
out
cmp
fadd
pop
push
sbb
jb
call
pop
push
push
je
out
cdq
mov
pop
cmp
loope
mov
dec
aad
rol
cmps
and
push
or
ss
push
repnz
mov
lds
mov
rol
out
add
outs
ins
iret
jp
add
lock
pop
push
push
and
xlat
ret
outs
sbb
cli
test
dec
and
cld
std
cmp
mov
xor
gs
push
cmp
xor
adc
ret
ins
shr
neg
lds
jecxz
inc
jl
sbb
push
dec
sub
sahf
nop
cmp
jl
xor
inc
ds
sub
jnp
(bad)
mov
sbb
stc
je
jbe
xchg
cmps
sub
test
out
sub
dec
daa
inc
xchg
mov
jmp
pop
xor
and
xchg
ja
inc
jl
adc
jle
push
xor
fs
and
push
add
jns
cli
loope
inc
pusha
dec
dec
gs
cmp
test
mov
or
jmp
cmovl
call
stos
cmp
push
jmp
es
mov
pop
and
cli
jle
adc
add
ret
xchg
adc
push
in
jle
pop
cmp
in
aam
rcl
push
sti
push
cmps
cmp
lods
ss
sti
stos
and
jl
inc
inc
test
fild
sub
daa
data16
cdq
sbb
sub
xor
inc
mov
sti
cmp
inc
retf
jl
stos
aaa
ficomp
(bad)
test
add
jl
sbb
dec
imul
add
fdiv
pop
ror
into
call
leave
adc
and
mov
mov
mov
and
adc
fistp
mov
mov
lock
adc
fwait
mov
in
dec
jne
fcmovnbe
dec
out
inc
pop
inc
push
cmps
sbb
shr
scas
fisubr
xor
test
mov
fisubr
add
dec
sti
mov
sahf
adc
jmp
out
ins
mov
icebp
xor
inc
jne
and
mov
xchg
scas
mov
sub
adc
pop
and
ins
cs
ss
(bad)
inc
jmp
in
in
mov
push
ret
sub
xchg
mov
add
adc
xchg
cmp
jl
loopne
jg
or
ds
xchg
inc
cs
dec
outs
es
and
xchg
or
xchg
or
pop
pop
ficomp
mov
lods
mov
mov
push
push
mov
dec
dec
mov
call
xchg
sub
gs
inc
mov
sub
int3
mov
adc
pop
cmp
in
clc
jge
dec
mov
(bad)
sbb
lahf
sbb
sar
dec
lods
loopne
xchg
adc
imul
mov
pop
scas
je
popa
loop
inc
adc
xor
mov
jmp
mov
xor
cmp
dec
push
imul
dec
bound
(bad)
fldenv
and
and
aam
aas
add
rcl
ins
cmp
push
or
and
push
adc
cmc
mov
cs
mov
movs
sbb
adc
xor
xor
popa
inc
loop
xchg
shl
cs
popa
in
jb
cld
mov
push
push
mov
sahf
mov
xchg
pop
jmp
cmc
and
xor
(bad)
(bad)
movs
xlat
jle
pusha
aam
outs
xchg
jns
and
out
jbe
sub
lds
fwait
jmp
aas
sub
cmp
cld
mov
dec
sub
ss
cmp
shl
out
test
and
outs
add
xor
or
jge
adc
test
push
xchg
pusha
outs
mov
in
sub
cmc
mov
and
adc
cmp
gs
jmp
repnz
mov
mov
mov
je
dec
inc
(bad)
add
lea
jmp
ror
push
int
mov
(bad)
mov
popf
les
aad
dec
pushf
and
dec
dec
inc
nop
test
test
ss
enter
xchg
adc
cld
jnp
into
push
call
jo
loope
inc
inc
push
ret
inc
or
pop
mov
jge
into
mov
out
xchg
movs
cld
push
cmp
sub
adc
cdq
pop
loopne
mov
jb
pop
mov
or
adc
fwait
mov
mov
pop
out
pop
cli
pusha
arpl
movs
cmps
mov
pop
scas
(bad)
mov
arpl
cmpps
sub
xor
hlt
sbb
add
cmc
jno
pop
stos
mov
adc
fcom
ret
or
popf
iret
arpl
or
mov
jne
mov
sub
repnz
cmp
aam
mov
mov
(bad)
fnstsw
cmc
lea
arpl
mov
mov
xor
or
fs
int
rcl
mov
repnz
mov
fbld
adc
and
and
add
mov
and
dec
push
pop
sti
mov
pop
leave
xor
cmp
dec
popf
and
sbb
stos
(bad)
mov
push
aad
and
(bad)
push
xchg
mov
jecxz
cmps
imul
push
mov
jl
push
jnp
inc
pop
mov
or
mov
pop
repz
pop
push
push
jg
ret
ror
jnp
add
stos
aaa
(bad)
jno
push
fmul
sub
loope
pop
out
jne
jns
fldenv
ins
push
loope
imul
mov
aaa
in
xor
cmp
cli
add
test
iret
les
retf
cwde
mov
packssdw
sbb
and
push
in
add
sub
add
call
movs
add
imul
sub
adc
xchg
(bad)
mov
mov
pushf
pop
arpl
add
std
xchg
xchg
jle
cmps
movs
das
cmp
jae
mov
add
jmp
jnp
cs
jecxz
nop
pop
fs
out
mov
sbb
push
aad
jge
inc
outs
mov
es
xchg
cmp
mov
sub
mul
add
add
aam
mov
adc
stc
cli
(bad)
cmp
fs
shr
dec
push
xchg
test
test
and
add
clc
xor
ret
stos
ss
cmp
dec
fnsave
mov
push
fs
dec
pop
out
mov
jmp
pop
test
vpsrlq
jbe
xor
mov
add
pop
adc
(bad)
pop
and
and
jns
cmps
movs
pop
movs
mov
popf
jnp
in
xchg
cmp
aam
mov
popa
jl
gs
xchg
ds
push
push
ins
cwde
es
or
add
push
or
push
fimul
popa
jmp
stos
pop
test
dec
cdq
mov
(bad)
cmc
xchg
mov
xchg
lds
fimul
dec
jle
adc
pop
jnp
popf
push
inc
loope
aad
mov
xor
sbb
or
ret
jae
cmp
imul
adc
xor
dec
xchg
xchg
das
jmp
xchg
pop
mov
fstp
mov
xchg
sub
bound
outs
xchg
fwait
mov
cld
or
pop
es
repz
pop
retf
sbb
mov
push
int
ret
lds
dec
cmps
dec
popa
(bad)
sub
sub
sti
test
fstp
(bad)
pushf
jne
ret
adc
mov
neg
pusha
fist
into
test
dec
or
push
pusha
cmp
hlt
add
push
cmp
sub
dec
retf
in
fstp
sub
adc
or
cmps
data16
cmps
and
adc
and
iret
pop
push
sub
jae
in
cmps
pop
mov
int3
fiadd
icebp
sbb
cmp
pop
jnp
inc
(bad)
int3
cmp
dec
(bad)
pop
pushf
imul
lds
enter
jb
fxtract
mov
inc
idiv
fisub
adc
mov
enter
pop
pop
out
dec
ss
cwde
pop
pop
sbb
into
nop
or
repz
out
xor
nop
pop
sbb
jb
inc
fisub
cmp
aas
mov
jge
pop
rcr
cmc
ret
psubw
retf
pusha
in
fld
pop
push
jmp
sub
xor
mov
repnz
jb
idiv
(bad)
(bad)
test
push
cmp
push
pushf
mov
cmc
out
int3
jle
or
sub
lock
dec
repz
clc
loopne
mov
imul
int3
jne
rcr
icebp
mov
pop
and
rol
jae
outs
xchg
mov
fbld
mov
jo
push
add
out
test
mov
xchg
fisubr
sbb
jae
mov
sbb
fst
fwait
lods
sbb
push
push
(bad)
mov
push
dec
mov
lahf
loopne
lods
jne
mov
out
in
dec
test
add
addr16
nop
iret
gs
aas
pop
or
pop
retf
test
(bad)
and
rol
jmp
jl
ds
inc
sbb
sbb
and
sub
lods
stos
gs
std
stos
lods
scas
pop
ds
ficomp
jmp
push
out
(bad)
popa
mov
or
shl
std
ins
test
add
pop
push
rcr
fdiv
inc
jle
les
mov
mov
jp
cmp
loopne
inc
pop
jg
mov
adc
sbb
in
js
fwait
sub
mov
mov
lahf
in
jnp
test
sub
add
xor
xchg
sub
or
dec
and
sub
dec
mov
dec
in
push
add
clc
out
mov
push
mov
mov
mov
and
cmp
leave
movs
mov
xor
xor
aaa
je
ins
sbb
and
jmp
aam
cmp
test
adc
in
jl
neg
adc
adc
cmp
aam
repnz
pushf
fwait
xchg
push
xor
nop
push
icebp
mov
sub
push
xchg
in
out
xchg
ror
sub
ins
in
popa
(bad)
(bad)
mov
jmp
imul
sub
cwde
popf
imul
mov
retf
and
retf
jg
xchg
cmp
mov
lea
ins
sbb
fistp
je
pop
dec
out
jmp
cmp
ins
xor
ret
sub
int3
xor
je
in
mov
in
ret
and
in
stos
pop
rol
pop
out
outs
ja
hlt
clc
lods
xor
inc
mov
das
std
cmp
push
and
sahf
mov
enter
das
inc
jb
call
jl
cmp
cmp
not
fstp
sbb
dec
inc
add
sbb
retf
pop
mov
ffreep
dec
ror
dec
das
arpl
das
cmp
jmp
dec
bound
cld
test
jle
enter
jg
iret
mov
fsub
add
dec
cmp
test
pushf
sbb
ret
rcl
xchg
test
cmp
push
xchg
es
fadd
rol
xor
enter
(bad)
and
jl
mov
push
inc
mov
adc
ror
and
cdq
xchg
es
aaa
xor
or
inc
aad
adc
push
dec
in
mov
stos
pop
mov
sbb
jnp
and
push
test
out
pop
mov
mov
xor
mov
pop
fild
imul
xor
jne
fwait
dec
ss
adc
xchg
sbb
xchg
ins
jmp
in
mov
sbb
xor
xchg
out
sub
(bad)
pop
sti
out
push
inc
add
add
movs
nop
(bad)
jp
push
dec
ss
aam
add
or
sub
fadd
in
push
xor
cmps
add
mov
xchg
xchg
fadd
addr16
mov
add
xor
jmp
sub
jl
retf
or
inc
or
adc
aaa
(bad)
pcmpgtd
cmp
inc
lods
or
jmp
push
sbb
fs
sbb
aas
(bad)
mov
mov
jl
sub
adc
cdq
outs
jns
pop
pop
push
dec
jbe
imul
les
dec
jae
xchg
imul
cmc
sbb
mov
dec
bound
adc
sti
das
xor
adc
add
and
pusha
and
dec
ret
and
mov
int3
push
xchg
std
dec
dec
and
mov
fiadd
mov
mov
add
jns
adc
cmp
mov
or
mov
clc
outs
pop
gs
mov
mov
mov
or
iret
(bad)
dec
call
ds
test
adc
xor
cmps
dec
icebp
push
cmp
mov
sti
cld
dec
mov
push
retf
jns
and
cdq
jl
push
jle
jmp
push
cmps
(bad)
mov
scas
pushf
out
pop
dec
ins
adc
pop
pop
mov
mov
inc
ins
outs
cmp
mov
inc
repnz
je
mul
test
rol
stos
and
adc
in
xchg
test
retf
enter
fmulp
retf
mov
ror
jle
pop
sub
stc
push
not
sub
inc
mov
adc
or
sbb
adc
stos
fnsave
xor
rcr
ret
lods
inc
shr
fst
jae
jl
fucomi
jmp
pop
cmc
mov
into
imul
inc
movs
xchg
aaa
sub
ins
mov
mov
mov
jmp
mov
sar
jp
push
cmp
retf
mov
stos
fdivp
or
inc
xchg
jno
dec
mul
mov
bound
pop
addr16
div
mov
jo
jne
int3
mov
cmp
mov
rcr
mov
sub
push
pop
outs
sub
ds
fisubr
retf
adc
into
mov
mov
loop
xchg
outs
mov
and
aas
add
mul
inc
rcl
cld
push
aad
or
fdivp
outs
aad
jae
dec
pop
xchg
retf
daa
inc
mov
jl
push
jl
jb
adc
retf
mov
cmps
or
xor
xchg
mov
fs
sub
mov
inc
int
adc
aaa
mov
or
iret
sub
adc
movs
ret
(bad)
in
push
xor
jl
jecxz
mov
adc
pop
test
out
jg
les
loop
cmp
sub
mov
xor
adc
test
sbb
test
enter
xchg
sub
push
das
in
popf
inc
jo
push
and
and
icebp
mov
ds
popa
jmp
ret
data16
ss
rcr
inc
and
div
jae
xor
xor
cmp
mov
pop
in
adc
mov
add
cmp
in
lds
dec
xchg
lock
sub
jno
lock
(bad)
sbb
sub
shl
sbb
stos
cmp
out
es
cmp
cdq
mov
or
retf
dec
in
cld
es
jae
int3
(bad)
clc
retf
pushf
jae
lds
(bad)
call
push
and
hlt
dec
jnp
(bad)
shl
int3
retf
int3
push
jle
bound
and
xor
es
add
mov
mov
ss
cwde
rcr
in
adc
add
ret
sub
sti
mov
movs
mov
adc
sahf
add
sar
leave
mov
out
cmps
out
repz
fs
or
stos
retf
or
movs
add
cs
pop
loop
xchg
jb
(bad)
mov
sbb
into
out
pop
lds
mov
cmp
icebp
pop
jb
stos
pop
call
loopne
xlat
idiv
movs
jns
adc
xor
jnp
addr16
shr
push
sahf
mov
or
bnd
mov
jle
outs
std
in
mov
mov
mov
out
mov
push
mov
mov
stc
gs
loopne
push
fiadd
cmp
(bad)
jno
shr
inc
stos
inc
sar
fwait
add
pop
lods
fcomp
lea
popa
es
sbb
xchg
adc
ss
cmps
(bad)
jae
mov
jg
jecxz
adc
ins
push
adc
pushf
sbb
jp
jns
fnstsw
daa
(bad)
test
dec
mov
mov
push
pop
xor
add
shl
call
xor
mov
mov
stos
outs
adc
jb
jns
movs
popf
test
mov
ror
mov
add
cmp
push
mov
push
xor
adc
and
shl
rcr
arpl
jg
push
push
pop
mov
add
inc
dec
jg
add
ret
and
or
popa
pushf
mov
mov
jb
pusha
rol
cmp
cmp
repz
pop
call
in
mov
sahf
inc
stc
inc
push
cmc
das
push
ret
lea
adc
xlat
mov
push
rcr
sti
pusha
jo
jmp
push
adc
out
xor
jle
dec
in
jmp
mov
cmps
data16
rcr
xchg
jno
or
xor
data16
add
jno
inc
mov
jbe
(bad)
shl
das
jmp
inc
jecxz
fild
jl
bound
mov
pop
cmp
mov
(bad)
out
mov
pop
cld
cwde
pop
fistp
es
loop
pop
fist
jne
in
in
movs
loope
pop
xchg
adc
and
cmp
in
fst
stos
and
lods
cmp
ins
nop
hlt
test
cld
push
(bad)
mov
add
and
out
adc
mov
xor
inc
dec
inc
push
or
push
loopne
retf
je
jnp
clc
dec
mov
push
das
inc
sbb
lods
(bad)
push
adc
xor
xchg
lahf
aad
push
push
shr
mov
jg
repnz
imul
fisub
test
or
jnp
push
(bad)
daa
retf
or
mov
sahf
mov
leave
pop
or
mov
clc
cmc
test
mov
sbb
adc
(bad)
out
mov
rcl
or
dec
sar
add
add
sbb
xchg
or
popa
hlt
call
or
dec
sbb
fadd
shl
mov
add
and
dec
and
mov
lock
xchg
jl
push
(bad)
push
rcl
stc
sub
repnz
and
aaa
inc
lea
mov
imul
pop
jge
test
or
mov
movs
mov
dec
xor
les
fsub
mov
add
jbe
retf
in
fist
ret
test
cmps
shl
push
out
mov
cmps
lea
adc
or
jb
add
(bad)
jns
(bad)
sbb
aaa
aam
jmp
jecxz
in
xor
shl
xchg
cmc
sbb
call
out
push
dec
add
shr
lods
lods
loope
dec
ins
lods
arpl
out
sub
cmp
cmp
sbb
jne
retf
aaa
pushf
dec
int
mov
(bad)
or
mov
daa
xacquire
jmp
dec
pushf
push
bswap
loopne
xchg
sub
jmp
lds
mov
retf
out
ror
shr
push
ds
(bad)
rol
mov
nop
xor
imul
or
dec
iret
les
out
jmp
cmp
test
jmp
not
or
push
mov
xor
arpl
lea
inc
cmp
(bad)
xchg
add
pop
xchg
out
xchg
movs
sbb
mov
lods
pop
loop
adc
vpmaddwd
lock
lods
push
and
movs
in
xor
mov
add
sub
call
xchg
sbb
arpl
or
xchg
call
sti
push
clc
push
pop
add
pop
push
arpl
adc
or
ret
jbe
cmps
mov
test
jo
movs
adc
jmp
xchg
and
jno
test
les
aad
inc
lock
sub
add
xchg
jbe
inc
rcl
lds
shl
xchg
dec
ret
stos
dec
dec
push
pop
mov
sub
pop
mov
cmp
(bad)
retf
cmp
out
rep
movs
add
or
repz
pop
mov
jbe
jmp
or
test
in
fcom
inc
fdivr
xchg
add
inc
push
or
je
adc
add
dec
icebp
retf
gs
mov
or
in
mov
lods
ja
iret
in
cld
pop
jnp
shl
jp
mov
jae
mov
mov
outs
ja
adc
aad
mov
scas
pop
add
int
inc
icebp
add
das
dec
cs
sar
mov
cmps
push
les
xchg
jmp
and
xchg
cwd
inc
les
cdq
aam
aad
xor
and
or
mov
mov
sahf
pop
scas
daa
pop
sbb
pop
popf
(bad)
repnz
ss
jb
fdiv
jnp
out
popa
xor
pop
shl
push
outs
or
int3
jmp
jl
or
mov
(bad)
out
mov
push
outs
cmps
xchg
sub
es
sbb
or
aad
cmp
(bad)
xchg
pop
daa
push
cwde
jecxz
xchg
adc
out
pop
movs
stc
gs
aaa
mov
in
xchg
test
jmp
gs
xchg
inc
jb
outs
jmp
jge
mov
pop
jle
addr16
xchg
iret
daa
imul
movs
mov
imul
and
pop
lock
pop
mov
push
push
enter
fucomi
inc
outs
mov
shl
loop
lods
mov
icebp
and
pop
dec
push
ds
mov
and
imul
push
sub
aad
dec
shl
mov
jecxz
cwde
jecxz
aam
(bad)
cmp
push
shl
pop
dec
ins
lds
mov
pop
add
ds
mov
xchg
stos
sub
cmp
mov
pop
lods
int
adc
sub
sub
add
or
and
push
push
mov
xchg
push
cdq
add
mov
in
push
mov
lods
fstp
sbb
mov
ror
daa
jno
loopne
fadd
and
inc
mov
dec
popf
sub
xor
pop
mov
mov
or
add
xchg
jnp
mov
clc
cdq
add
push
iret
xor
in
xchg
jp
popf
add
in
in
sub
fs
stos
scas
cmc
add
adc
daa
pop
sbb
cmp
push
iret
sahf
push
xlat
je
in
or
pusha
arpl
imul
dec
fnsave
dec
adc
cmp
(bad)
and
cmp
pop
push
dec
cmp
adc
sub
dec
out
fdiv
shr
push
ficomp
dec
dec
add
pop
lahf
mov
xor
mov
mov
mov
mov
xor
push
pop
mov
ins
push
ja
or
les
test
jl
mov
(bad)
mov
stos
pushf
std
aam
cdq
scas
dec
push
fcomp
psubsb
aad
into
cmp
pop
lods
jae
pop
leave
pop
ror
mov
repz
dec
mov
cmp
pushf
or
sbb
test
xchg
jle
rcl
lods
push
ret
ret
and
(bad)
fbstp
mov
dec
popf
ja
xor
stc
cmp
adc
add
jmp
or
mov
mov
and
outs
movs
fnstenv
jae
in
jne
adc
in
xchg
pushf
inc
inc
pop
mov
mov
cmp
xlat
stos
out
dec
sub
pop
pop
push
mov
lods
add
inc
pop
adc
in
arpl
mov
jae
lds
shr
mov
cmp
shl
ret
adc
arpl
movs
jmp
lds
cdq
ins
div
sbb
inc
test
rcl
jl
and
rol
jecxz
loope
mov
(bad)
push
cmp
cmps
shr
pop
addps
mov
rol
loop
mov
jnp
mov
sbb
jle
repnz
push
(bad)
cmp
and
jae
test
mov
xchg
lahf
call
clc
cmp
dec
adc
pop
inc
xchg
adc
fisttp
cmps
in
pop
mov
dec
retf
fbstp
pop
pop
mov
enter
dec
rol
mov
inc
test
(bad)
cmp
mov
sbb
and
not
and
stos
push
nop
cmc
repnz
sub
jnp
mov
and
pop
lahf
in
cmp
(bad)
cmp
je
xchg
inc
fidivr
int
mov
cmp
pop
jnp
xor
out
mov
bound
call
in
mov
xor
fwait
mov
jae
pop
ror
fsub
pop
rcr
sti
pop
inc
cmp
outs
bound
jns
int3
cmp
pop
movs
mov
sub
out
fnstsw
mov
shl
mov
cs
bound
jmp
push
shl
inc
sar
imul
xchg
cmp
dec
(bad)
and
jl
and
cmc
cmp
jnp
shl
adc
sbb
xchg
les
test
pop
ins
push
into
iret
xchg
xor
es
test
push
pop
cdq
daa
bound
int
adc
cmps
aam
inc
pop
mov
in
cmp
cmp
movs
(bad)
leave
mov
inc
push
add
mov
xchg
cmp
aas
sar
push
cs
jle
ja
pop
je
loop
and
mov
data16
and
push
retf
fbstp
aaa
cs
rcl
imul
push
mov
push
lea
fild
nop
and
or
jbe
xor
mov
push
stos
xor
movs
data16
into
fst
adc
xor
mov
jb
std
mov
inc
leave
mov
jg
jns
jnp
pop
jb
cli
or
call
sub
ficomp
mov
push
jbe
cld
rcl
shl
mov
sub
loope
cmp
jecxz
push
lods
cmp
(bad)
cdq
mov
add
xchg
mov
jns
pop
mov
mov
push
pop
cmps
movs
pop
dec
xchg
mov
(bad)
fst
lahf
mov
mov
sub
xor
inc
hlt
cs
xchg
shl
js
push
aad
out
fadd
sbb
sbb
je
retf
test
movs
mov
xor
in
jbe
dec
mov
cs
cs
dec
adc
in
mov
adc
cmps
shl
into
and
pop
je
xor
mov
inc
shl
xchg
jmp
xchg
gs
mov
jl
jg
jb
rcl
ja
ja
shl
push
dec
pop
loope
repnz
daa
sti
aaa
dec
mov
mov
or
into
inc
fadd
rcr
cdq
stc
test
pop
test
dec
scas
or
loop
movs
inc
or
mov
fcomp
cld
sbb
dec
push
bound
lock
aaa
imul
(bad)
mov
xor
lock
retf
gs
sti
shl
jl
loope
fs
test
retf
outs
add
mov
push
fucomi
mov
into
or
cmp
cmps
push
fst
test
mov
aas
push
inc
push
jl
retf
jmp
inc
push
jg
jp
nop
and
add
and
aam
jbe
xchg
and
xor
and
std
enter
push
sbb
fsubp
jb
jp
add
movs
jg
mov
out
sar
in
add
leave
or
and
pop
pop
mov
push
lds
or
lods
mov
(bad)
mov
or
pop
jmp
daa
dec
add
rcl
dec
popf
into
das
out
scas
out
inc
bound
mov
(bad)
xlat
out
xlat
lock
ret
neg
push
loop
das
retf
pop
add
xchg
out
imul
pop
out
call
adc
fisttp
xchg
jns
mov
push
fimul
jmp
mov
mov
pop
fwait
(bad)
retf
mov
in
jae
dec
or
mov
cli
pop
std
xchg
sbb
pop
push
xchg
pop
movs
call
jmp
movs
fidivr
nop
scas
fistp
dec
pusha
xor
pop
mov
mov
sahf
push
xor
xor
movs
in
jnp
aas
push
jecxz
mov
cdq
std
jmp
xor
and
mov
xor
sti
jnp
xchg
pushf
dec
out
xchg
ins
jge
mov
add
push
ja
and
push
push
add
or
mov
mov
jle
push
sub
icebp
mov
imul
aas
call
(bad)
jns
pop
dec
test
cmp
jns
and
lock
and
lfs
sbb
inc
mov
push
ins
push
xchg
call
(bad)
pop
jbe
dec
mov
fst
xor
jle
sub
pop
mov
repz
add
push
xchg
sbb
ret
es
test
mov
cmc
(bad)
les
call
movs
loop
add
int3
mov
push
pop
retf
gs
fs
mov
mov
clc
and
test
mov
inc
ror
mov
shr
or
push
(bad)
clc
sbb
aaa
enter
dec
adc
mov
or
cmps
ins
stos
mov
or
mov
inc
test
sbb
cs
mov
in
mov
outs
clc
cmp
sub
xor
aas
(bad)
(bad)
sbb
lahf
int
mov
push
in
cmps
outs
ss
and
popa
sub
out
push
jb
aas
ins
add
movs
adc
dec
(bad)
and
or
aas
and
add
(bad)
mov
dec
and
push
out
xchg
sbb
cmp
mov
jp
pushf
push
inc
and
outs
fcom
xchg
xchg
fcom
jae
gs
cmp
out
pop
inc
ds
inc
in
sbb
ins
xchg
jmp
mov
mov
(bad)
shl
ins
scas
gs
push
loope
sahf
cli
ret
sbb
push
sbb
mov
imul
push
xor
pop
mov
xor
add
retf
cmps
adc
add
in
aam
into
and
popa
loope
push
pop
mov
xchg
jbe
or
out
jnp
cmp
test
or
jnp
fst
test
adc
addr16
sub
pushf
dec
mov
pop
xlat
xchg
push
push
mov
leave
mov
hlt
loope
mov
lahf
or
fstp
mov
ins
mov
xor
in
add
push
add
mov
fist
fbld
add
popa
xor
adc
inc
and
dec
leave
dec
push
push
arpl
clc
scas
aad
cdq
sub
(bad)
dec
aam
dec
xchg
fsubr
lods
dec
jb
out
inc
cmps
in
or
add
stc
jbe
inc
pop
inc
test
sar
adc
scas
dec
aad
jmp
xor
pop
jp
out
mov
pusha
loopne
loop
es
(bad)
sub
scas
inc
inc
dec
test
push
adc
jmp
call
je
jg
test
and
outs
fwait
mov
in
push
and
or
sbb
sbb
sub
mov
sbb
cs
xor
xchg
add
stos
sbb
dec
jno
pop
lds
xchg
sbb
sub
push
xor
mov
rcr
jp
int3
shl
scas
sub
ror
jp
scas
addr16
mov
mov
inc
test
cmc
call
imul
shl
fcom
cmps
fbld
arpl
test
cmp
adc
add
mov
std
adc
stos
dec
loop
add
push
mov
adc
test
das
adc
xchg
lea
(bad)
push
lahf
pop
or
inc
movs
sub
std
in
rcr
adc
popa
(bad)
hlt
das
inc
arpl
inc
jae
mov
or
jge
pop
bound
mov
mov
ret
adc
in
push
dec
nop
outs
inc
xchg
mov
stos
int3
fwait
push
into
cmps
pop
sub
adc
out
xor
stos
fdiv
sti
xchg
popf
xchg
adc
rcr
ss
scas
cmps
cld
mov
mov
cmp
ret
adc
stc
dec
movsd
fldenv
mov
xlat
movs
adc
or
sub
(bad)
out
and
(bad)
or
pusha
rcl
jnp
ja
fldenvw
test
fisubr
mov
sbb
jp
ret
xor
mov
movs
jmp
bound
push
lea
aam
pop
sub
mov
inc
xor
sahf
mov
jnp
mov
adc
mov
mov
adc
mov
xchg
cli
lods
in
jae
cmp
dec
fdiv
dec
test
js
pop
ss
in
add
movs
ret
or
sub
into
int3
fwait
test
fs
out
icebp
adc
sub
leave
inc
je
xlat
out
lahf
inc
cmc
xchg
cmp
cmp
jnp
sub
xchg
jbe
xor
cmp
adc
xchg
jne
bound
shr
pop
sbb
xchg
push
pop
ja
cmp
js
ret
sbb
addr16
jbe
pop
in
push
adc
fstp
sahf
hlt
jnp
mov
push
mov
jmp
in
(bad)
loope
lock
sub
mov
add
js
jle
or
(bad)
aas
add
mov
lods
mov
cmps
jmp
mov
vphadduwq
nop
dec
sub
fs
inc
add
mov
pop
mov
mov
or
xor
pop
or
or
dec
jno
pop
push
out
push
fldenv
shl
push
jae
jnp
ror
pop
dec
pop
sbb
ins
scas
push
clc
mov
cwde
xor
cmc
pop
inc
fisubr
cmp
push
test
mov
adc
xor
pop
call
je
pop
xor
add
push
dec
loope
adc
fbld
repz
jp
mov
xchg
cmc
loop
mov
ins
ss
xchg
or
mov
mov
scas
repz
and
sbb
mov
adc
jmp
retf
push
sbb
lahf
xor
nop
jle
jp
add
test
mov
fsub
fisttp
jle
pmullw
inc
mov
sbb
and
xchg
rcl
das
ins
push
cdq
jmp
imul
adc
add
and
pop
mov
repnz
adc
or
lahf
sub
fucomi
cmp
cld
in
idiv
push
vpshld
xlat
adc
sbb
mov
sub
out
cld
cmp
cmp
cmps
or
daa
push
fs
mov
cmp
not
jne
and
sub
fsub
cmp
xor
dec
inc
pop
dec
in
xchg
and
sbb
sub
in
dec
in
neg
cmc
pop
movs
in
xor
nop
stc
pop
dec
dec
cmp
inc
pop
loopne
call
lock
(bad)
repnz
jecxz
xor
mov
inc
test
gs
pop
sbb
loop
ja
mov
out
xor
xchg
sub
in
jne
or
push
mov
add
push
scas
cmp
(bad)
pop
sbb
cld
pushf
pop
les
mov
scas
sub
jmp
ret
xchg
pop
xor
sti
dec
pop
dec
sbb
mov
iret
mov
in
std
or
jns
xor
jbe
(bad)
xlat
test
pop
push
lahf
dec
push
pop
adc
ret
repnz
ins
adc
mov
push
cmp
inc
mov
xor
or
cmp
mov
out
pop
push
test
fistp
shl
and
push
sti
loop
xchg
iret
ins
xchg
mov
cmp
imul
(bad)
cmc
sahf
jge
sbb
scas
mov
pushf
shl
adc
ins
jne
pop
mov
adc
push
dec
and
lock
in
sbb
mov
fwait
dec
das
push
pop
pop
xor
sbb
inc
imul
fwait
mov
xlat
jmp
aaa
sahf
dec
loop
rcr
mov
or
xchg
xchg
(bad)
xchg
mov
sub
cmps
aaa
cmp
arpl
call
mov
test
neg
repz
or
imul
jns
(bad)
outs
(bad)
daa
cli
adc
mov
fadd
jecxz
mov
or
mov
pop
in
mov
mov
scas
fisub
sub
movs
inc
dec
jge
xchg
popa
stos
xchg
fcom
jae
scas
inc
sbb
cs
outs
sbb
sbb
pop
pusha
loope
xchg
scas
add
add
xchg
xor
dec
cmps
inc
xor
test
jp
imul
call
inc
mov
ss
ror
iret
(bad)
cmp
mov
(bad)
ja
sub
pop
mov
xchg
cmp
ss
push
cmp
stos
shr
dec
test
aad
(bad)
mov
loope
mov
lock
rcl
push
aad
mov
xchg
xchg
scas
sar
jae
sbb
jbe
in
and
jmp
sbb
adc
pop
imul
xchg
push
adc
es
repnz
fcomi
cmp
cmp
cmp
gs
adc
xor
mov
jo
mov
cmp
sbb
arpl
xchg
test
inc
cdq
add
inc
daa
aam
xor
inc
ins
sbb
ret
sbb
pop
fdiv
jle
mov
arpl
leave
ss
ret
and
stos
push
ret
xor
out
cli
pushf
mov
xchg
shr
add
mov
cwde
xchg
pop
push
in
int
adc
pop
movs
popa
push
leave
pop
jo
test
push
pop
dec
test
inc
push
push
and
lea
jmp
pop
mov
add
adc
popa
push
cmp
pusha
inc
inc
push
jb
and
outs
scas
jge
mov
pop
lods
push
inc
je
adc
ins
shl
pop
push
add
test
pusha
mov
or
push
adc
cdq
add
stos
inc
popf
xor
or
and
pop
mov
push
jp
retf
push
lock
push
ds
or
lahf
and
(bad)
push
out
ret
call
lods
inc
jb
xchg
shr
sub
std
jge
jne
mov
stos
in
dec
and
fwait
cmp
js
mov
test
xchg
scas
fucom
shl
sbb
cwde
add
sub
push
outs
xchg
je
fwait
xchg
(bad)
repnz
pop
es
pop
ror
jmp
dec
adc
jg
pop
jp
(bad)
leave
xor
repnz
out
stos
in
scas
mov
in
mov
fstp
shl
sub
mov
cmp
xchg
add
pop
movs
(bad)
adc
jne
in
mov
cli
sub
push
or
(bad)
(bad)
std
fs
in
mov
mov
mov
aad
push
sar
sbb
movs
scas
aas
jb
sub
dec
test
xor
sbb
sti
xchg
jbe
cmp
fs
lea
jbe
test
mov
jo
adc
push
add
adc
cmp
js
and
fdivrp
jp
or
scas
cdq
test
pop
repnz
and
adc
int3
sub
and
movs
mov
mov
hlt
and
aas
mov
mov
push
sub
mov
ret
stos
(bad)
xor
mov
mov
inc
outs
fs
pop
div
push
and
jbe
adc
popa
sbb
xor
add
sub
loop
fdivr
loop
inc
fwait
push
push
das
repnz
mov
add
shr
shl
jae
pop
retf
xchg
repz
das
pop
in
sbb
add
lods
adc
cmp
retf
cmps
ja
addr16
xlat
sub
pushf
jo
and
gs
inc
stc
jl
test
adc
fisttp
and
int
popa
xchg
data16
jp
add
xchg
dec
xchg
mov
ds
movs
aas
jb
cli
dec
js
iret
movs
jno
(bad)
stc
je
mov
ret
mov
add
pusha
jge
mov
mov
pop
fstp
shl
cmps
inc
sub
mov
mov
cs
fst
xchg
pop
in
(bad)
int3
stos
dec
sbb
push
test
mov
loope
xchg
sub
test
lea
sbb
and
std
adc
ret
fcom
(bad)
add
sub
out
push
(bad)
jmp
ret
mul
(bad)
jg
push
(bad)
gs
cmp
enter
xchg
pusha
or
retf
mov
repz
scas
test
aad
push
push
and
loopne
aaa
nop
pusha
punpckhbw
mov
sub
xchg
jle
xchg
jmp
inc
(bad)
lock
imul
cmp
mov
das
jge
iret
jae
push
arpl
lds
pop
into
jae
dec
jmp
aad
mov
int3
aaa
xor
inc
push
fiadd
fcomp
ins
mov
push
jnp
inc
cli
jne
sub
loopne
xchg
popa
add
jne
nop
or
xchg
inc
mov
ins
les
pop
xor
cmp
div
inc
push
aaa
or
xchg
adc
xlat
push
push
imul
lock
pop
pop
or
adc
sub
xchg
xchg
fcmovb
js
or
and
jae
xchg
(bad)
iret
lods
and
lods
mov
out
retf
cld
(bad)
aas
jo
jnp
cli
xchg
sar
sub
or
cmp
outs
(bad)
sub
(bad)
(bad)
sub
dec
fnstsw
ja
cmp
mov
es
cld
dec
movs
mov
add
test
add
daa
dec
stc
stos
jp
rcl
int3
pushf
xor
pop
xor
push
xchg
inc
into
mov
clc
mov
jle
cwde
das
cs
pop
mov
sbb
shr
sbb
movs
dec
cdq
movs
test
addr16
sbb
add
repz
inc
addr16
scas
bound
pop
sbb
mov
jmp
in
test
pop
dec
sbb
cmp
xchg
mov
jae
js
cmps
fadd
jb
adc
push
(bad)
div
mov
xor
dec
xchg
ja
pop
pop
jno
pop
fistp
retf
(bad)
and
pusha
push
iret
inc
lea
repnz
mov
push
sub
inc
icebp
ins
inc
ss
stos
add
xchg
add
jmp
and
stc
mov
xor
loop
aas
dec
add
pop
pop
popa
xchg
pop
jae
mov
popf
pop
inc
cmp
fiadd
fisubr
(bad)
bound
xchg
xchg
retf
(bad)
push
mov
xor
loope
sbb
lods
push
or
loop
jl
call
sub
pop
(bad)
xlat
push
in
daa
not
mov
dec
inc
popa
cmp
push
data16
inc
fist
loope
iret
arpl
out
test
pop
xchg
fdivr
jp
in
(bad)
and
xchg
push
jg
sti
out
adc
mov
outs
xor
mov
retf
lahf
fild
imul
inc
pop
push
sub
stos
inc
mov
xchg
sbb
stos
xor
add
in
pop
ret
mov
inc
jb
adc
inc
test
movs
xchg
and
jmp
bnd
pop
test
mov
(bad)
rcl
cmc
xchg
inc
sub
mov
leave
or
jno
sahf
iret
jne
pop
test
in
shl
sar
pop
adc
add
xchg
pop
ret
push
cmps
ins
add
sbb
aam
xchg
adc
lea
xor
and
(bad)
cmc
(bad)
std
xor
xchg
xor
push
inc
or
fnsave
xor
clc
add
cwde
inc
pop
scas
mov
mov
cmp
mov
xor
push
mov
adc
push
test
add
adc
sub
cmp
mov
sub
cwde
imul
lods
into
dec
add
inc
sbb
cmp
aam
mov
loopne
cli
sbb
scas
scas
jl
inc
rcl
push
mov
mov
mov
int
int3
sub
push
push
or
mov
add
out
ins
in
xchg
clc
jns
sbb
shl
retf
aaa
inc
in
arpl
test
pop
jmp
sbb
add
pop
xchg
pop
in
mov
jae
jmp
imul
add
sbb
(bad)
or
in
iret
add
cmc
mov
cmp
dec
mov
adc
mov
xchg
or
retf
xor
shl
das
jp
(bad)
mov
into
xor
adc
pusha
mov
nop
ret
call
pushf
pop
sbb
ins
scas
call
adc
mov
inc
int3
fadd
movs
inc
data16
cld
sbb
loope
pop
int
outs
stc
movs
jmp
popf
ret
and
jne
jne
cmps
push
scas
mov
add
int
test
int3
xchg
xor
imul
lock
xor
mov
retf
adc
mov
ror
inc
stos
sub
std
outs
pop
(bad)
sub
rcr
(bad)
fs
xchg
pop
inc
pop
std
icebp
inc
dec
aam
mov
sub
jecxz
sbb
jle
mov
mov
ja
cmps
pop
aad
mov
and
dec
jnp
mov
mov
cwde
lahf
ja
xchg
call
outs
mov
and
cmp
adc
shl
lock
scas
push
pop
mov
pop
sub
aam
sbb
dec
xor
xchg
in
mov
cmp
sar
add
mov
sbb
movs
pop
xchg
push
jmp
ror
mov
push
xchg
jp
inc
adc
or
(bad)
mov
(bad)
or
push
fwait
ins
(bad)
loop
jnp
shl
pop
or
test
ins
sbb
push
inc
mov
psadbw
in
fs
push
pop
lods
push
and
out
mov
mov
test
cmp
jo
into
(bad)
or
ins
sti
or
push
and
(bad)
jo
movs
sub
cmp
jae
ss
sti
movs
mov
mov
movs
and
mov
leave
rcr
call
test
div
push
call
mov
(bad)
mov
add
repz
sub
cmp
add
adc
dec
mov
cmps
aas
bound
and
dec
mov
stc
push
jae
sub
sbb
test
sbb
iret
or
cmp
sub
cmp
repnz
mul
inc
cld
imul
push
fs
cmp
out
jbe
sahf
fld
mov
ins
repz
and
aas
and
inc
aad
pop
mov
ins
sti
mov
add
je
mov
div
jnp
jge
lahf
inc
mov
stc
mov
jg
data16
cs
popf
mov
aas
test
aam
mov
xchg
xor
inc
ror
in
adc
push
sbb
mov
dec
inc
or
test
push
pop
pop
sbb
sub
(bad)
fst
idiv
cs
xchg
(bad)
cmp
sub
push
out
jge
mov
ror
inc
iret
mov
fsub
jecxz
add
sub
mov
sub
stos
scas
inc
dec
mov
out
jnp
pop
push
inc
push
sub
dec
loopne
pop
jne
sahf
push
out
xchg
js
aas
cmps
jo
cmp
xchg
arpl
cld
aad
push
dec
aaa
sbb
in
pop
or
inc
fimul
add
je
mov
mov
les
mov
adc
mov
fldcw
cwde
jno
lods
pop
retf
mov
cli
popf
retf
pop
lock
and
jae
push
mov
outs
enter
bound
push
sbb
mov
jmp
fld
jo
icebp
addr16
xchg
or
jnp
shl
(bad)
push
and
pop
mov
and
dec
(bad)
stos
adc
adc
jmp
out
stos
test
jae
inc
lahf
cmp
test
imul
ins
sbb
jmp
retf
out
and
xchg
retf
sub
je
loopne
lods
sub
sbb
mov
popa
inc
xor
dec
daa
dec
shr
pop
push
inc
or
ins
mov
xor
enter
icebp
enter
xor
dec
ss
adc
retf
sub
jecxz
pusha
mov
das
fnstcw
stc
fistp
xor
xchg
mov
fld
cdq
cmc
dec
xor
outs
(bad)
mov
inc
jmp
scas
inc
jbe
xor
inc
cmp
jl
sub
mov
into
mov
push
or
cmp
cmp
call
dec
repz
cmp
arpl
scas
ds
mov
xchg
mov
push
mov
and
mov
sub
dec
cdq
mov
xlat
jmp
retf
fs
pop
or
or
scas
dec
fcomi
jp
adc
sbb
jecxz
outs
scas
mul
(bad)
lock
cmp
jne
inc
inc
dec
dec
test
loopne
repnz
rcr
push
and
daa
or
pop
xchg
dec
push
pushf
fisttp
and
les
mov
cwde
dec
sub
sahf
mov
in
test
icebp
outs
clc
popf
inc
inc
and
dec
(bad)
jns
mov
cli
or
lods
fdiv
sar
push
mov
pop
sub
jmp
sub
add
das
mov
jns
add
add
movs
nop
scas
jb
push
xchg
in
outs
mov
dec
add
push
mov
adc
or
cmp
cmp
dec
mov
xchg
mov
loope
xlat
or
repz
xchg
push
inc
hlt
and
fwait
(bad)
bound
jae
pop
ins
out
lea
outs
je
xlat
loope
sub
aam
mov
dec
leave
fmul
push
nop
(bad)
push
aad
sub
outs
jae
call
mov
into
mov
cmc
fnstenv
push
add
and
sub
pop
loope
xor
in
and
out
jmp
mov
cmps
mov
jl
clc
gs
xchg
mov
pop
outs
fld
mov
stc
pop
(bad)
test
pusha
cmp
add
add
repnz
jmp
lea
cwde
sar
jmp
push
push
arpl
cli
push
imul
and
xor
pop
and
mov
pop
mov
fdivr
cld
mov
jae
inc
sub
push
sbb
scas
inc
sbb
and
(bad)
jl
sub
cmps
cmps
cli
inc
sub
or
mov
xchg
mov
and
scas
and
cmp
dec
iret
add
dec
or
outs
or
ror
into
inc
add
cli
mov
cmp
add
or
inc
clc
movs
call
cmps
sbb
in
mov
adc
mov
mov
mov
push
push
mov
pop
sbb
add
push
add
or
ficomp
punpckhwd
loope
cwde
adc
and
scas
pop
add
mov
and
mov
jnp
rcl
gs
jns
movs
test
and
jae
push
fcomp
add
cli
out
inc
adc
mov
enter
arpl
out
cmps
or
movs
jg
sbb
sar
sti
xchg
out
daa
int
ret
leave
lock
pop
mov
push
in
xor
fisub
clc
dec
(bad)
rcl
mov
ins
sbb
mov
(bad)
out
push
pusha
es
neg
scas
test
inc
loop
bnd
mov
jo
jecxz
div
pop
sub
ret
shr
adc
daa
push
hlt
lods
ss
cmps
inc
jle
sbb
xchg
sar
sbb
ret
lea
adc
lods
rcl
sar
mov
pop
dec
or
les
(bad)
sub
(bad)
mov
stc
repz
outs
inc
bound
xchg
rcl
adc
pop
sahf
jmp
scas
movs
jl
pop
and
sub
adc
xlat
jb
add
xlat
cmc
or
push
(bad)
pop
cs
fisubr
pop
ret
into
push
adc
xor
xchg
pop
pusha
push
rcr
ins
js
xor
scas
lahf
adc
stos
mov
inc
es
in
jle
dec
mov
adc
fisubr
loopne
pop
mov
push
add
fcmovnbe
and
frstor
sti
inc
cmp
sbb
mov
mov
das
pop
mov
movs
mov
pop
xchg
adc
loope
sub
mov
gs
sub
fadd
mov
ss
imul
(bad)
fisub
and
pop
add
push
push
sahf
aas
sar
sub
push
jne
or
mov
xor
les
cli
stc
inc
adc
xor
call
inc
iret
ins
scas
push
pop
ds
sbb
fsubp
in
test
mov
or
sub
add
sbb
pop
sub
out
test
pop
cli
mov
sbb
xor
pop
add
or
cmp
dec
out
cmps
lods
and
cs
(bad)
add
sub
cmp
dec
sbb
sbb
data16
and
es
ret
fisttp
mov
cmp
cmc
fcomp
cmp
mov
adc
mov
or
jge
adc
xchg
movs
pop
fst
fwait
inc
into
std
jno
pop
mov
fbld
stos
stc
xor
mov
jb
fwait
enter
lods
popf
aas
gs
xor
cmps
mov
push
in
test
xchg
xchg
bnd
push
js
arpl
ja
inc
add
xor
mov
adc
fmul
add
mov
fstp
ja
daa
inc
xor
dec
cmp
fisub
pop
shr
fcom
or
mov
pop
or
lock
outs
daa
scas
std
shl
lods
and
xchg
jmp
cmp
cmps
(bad)
arpl
pop
or
mov
les
xor
xor
dec
ss
and
mov
ret
scas
bound
dec
ret
lock
das
ss
mov
daa
sub
(bad)
out
adc
push
mov
and
shl
les
inc
call
mov
out
sbb
in
dec
fimul
clc
push
ja
inc
cmp
or
retf
(bad)
std
push
call
(bad)
outs
cmp
daa
pop
sub
ins
fs
gs
out
or
es
imul
lea
jl
das
mov
sbb
adc
jmp
push
pop
addr16
xchg
xor
sbb
jns
push
jmp
icebp
es
sub
rol
imul
mov
enter
sbb
mov
or
shl
inc
mov
and
jle
dec
or
(bad)
xchg
out
add
shl
loopne
pop
jecxz
idiv
in
mov
sub
or
sbb
in
mov
imul
pop
push
and
nop
pop
or
xchg
retf
fucom
mov
sar
cld
rcr
xlat
mov
dec
fsubr
ret
or
rol
push
dec
pop
mul
repnz
test
arpl
mov
pushf
sbb
stos
jmp
cmps
mov
mov
mov
sbb
scas
sub
cmps
dec
pushf
out
push
dec
mov
push
add
jns
stos
movs
add
push
inc
cmp
repnz
pop
fsubrp
fs
imul
(bad)
movs
fadd
and
or
mov
scas
jl
clc
xchg
addr16
out
int
popf
call
inc
cmp
test
lods
(bad)
sbb
cld
pop
push
jae
inc
pop
pop
bound
fwait
std
inc
pop
and
mov
popf
ins
popf
mov
mov
pop
in
xchg
push
dec
sbb
lock
icebp
pushf
leave
xchg
ret
pop
push
or
adc
xchg
sbb
enter
dec
retf
jno
ficom
lahf
mov
mov
fsub
mov
in
lahf
aad
mov
pop
inc
adc
retf
xchg
jmp
sub
adc
ret
outs
cld
push
inc
arpl
push
pop
push
cmp
shl
add
and
mov
inc
aam
pushf
add
mov
pop
xor
adc
fsubr
mov
out
arpl
dec
stos
loop
sbb
pop
nop
int3
sti
sbb
outs
xchg
stos
(bad)
xchg
sbb
fbld
fcmovb
lahf
adc
sbb
retf
mov
mov
dec
or
inc
jle
dec
rsm
test
fld
int3
out
push
pop
dec
mov
int3
test
dec
leave
cmp
icebp
dec
in
or
and
or
sub
pop
mov
cs
jle
daa
mov
cmps
fdivr
lea
out
fbstp
mov
xchg
mov
inc
adc
and
mov
xor
cmps
push
out
test
sub
add
(bad)
leave
xchg
jle
mov
mov
mov
pop
pop
jns
fistp
push
fwait
in
out
mov
test
cli
pusha
in
das
in
jbe
or
bound
(bad)
adc
and
es
fninit
push
xchg
or
repnz
in
pop
sar
les
add
popf
test
push
rcr
add
xor
rol
mov
xchg
adc
aas
fdivp
and
xchg
and
push
int3
mov
leave
lods
imul
lahf
pop
(bad)
in
jge
pop
lods
popf
mov
or
retf
cmps
inc
xchg
push
(bad)
fisubr
fisttp
sbb
stc
adc
dec
mov
les
push
sub
lea
lods
in
mov
sar
pop
push
add
xchg
lea
fcomp
das
in
imul
add
in
mov
cmps
xchg
mov
inc
ret
cmps
out
pop
add
sub
stos
rcl
dec
into
imul
rol
push
int3
xchg
dec
lods
out
enter
cmp
fcomp
es
inc
mov
outs
jp
and
mov
adc
fs
mov
test
call
dec
or
push
mov
mov
push
mov
sbb
and
enter
xchg
fiadd
cmp
jo
cwde
popa
dec
out
inc
pushf
or
sub
jae
inc
ins
call
retf
in
pop
sti
push
mov
fst
in
mov
sub
shl
popf
test
xchg
out
or
mov
(bad)
sar
fisttp
xlat
push
(bad)
pop
or
fild
inc
jmp
stos
xchg
jo
jecxz
sti
addr16
pop
mov
mov
adc
mov
movs
adc
push
jo
jg
inc
fld
jge
lods
es
fisubr
aaa
out
jno
retf
repnz
int3
push
aas
pop
lock
jns
adc
xchg
adc
lods
out
jp
jne
mov
jmp
or
(bad)
cdq
mov
pushf
(bad)
cwde
dec
ret
cmps
out
push
lods
and
or
popf
aaa
or
retf
(bad)
call
sub
inc
repz
mov
shl
push
sbb
ror
(bad)
jge
enter
jl
or
rcr
stos
div
cmc
pop
mov
jmp
jl
push
lods
mov
push
retf
jnp
or
test
jno
and
icebp
scas
or
call
pop
cmp
ror
maxps
push
xor
lods
mov
push
imul
cmp
push
xchg
movs
add
push
cmp
enter
sti
pop
add
xor
push
push
or
jg
mov
dec
jbe
cmp
gs
ss
ins
fistp
mov
jmp
cmp
push
mov
mov
dec
mov
movs
mov
dec
mov
bound
fucomi
clc
call
neg
shr
xchg
stc
mov
stc
push
outs
inc
mov
jg
in
aam
jne
mov
cld
lock
jmp
xor
pop
mov
jp
xchg
mov
and
add
test
loop
jbe
shl
dec
cdq
adc
push
jecxz
xchg
mov
rol
or
mov
call
mov
lds
xor
pop
mov
mov
sub
mov
(bad)
lods
dec
mov
xchg
mov
and
xor
push
inc
or
ja
and
icebp
into
mov
imul
inc
lods
int3
or
dec
or
dec
xor
mov
adc
sbb
test
and
in
mov
mov
out
mov
pop
and
in
pop
mov
sub
mov
push
jne
xchg
push
or
adc
rol
xchg
push
mov
dec
jns
cmp
or
stos
dec
inc
ror
add
rol
inc
adc
(bad)
push
and
jne
sub
add
je
lock
ror
mov
jl
adc
xchg
les
ret
outs
ds
je
loope
test
mov
sahf
push
pop
je
push
ja
leave
dec
rcr
shr
cdq
(bad)
cmc
aam
mov
cmp
movs
mov
loopne
les
adc
mov
dec
shl
ror
xlat
ss
in
sub
jne
dec
sti
dec
xchg
mov
mov
out
mov
jmp
jecxz
sbb
mov
jae
and
cmp
and
jecxz
pop
mov
sub
mov
stc
aad
enter
inc
cmps
lock
pop
test
cmp
adc
gs
xchg
xchg
push
and
inc
sbb
mov
lods
movs
retf
fist
and
(bad)
cld
xor
mov
hlt
pop
std
(bad)
nop
inc
inc
int
xor
mov
pop
retf
stos
and
sub
or
retf
pop
inc
xchg
in
dec
or
ror
pop
and
mov
mov
icebp
clc
call
pop
aam
hlt
mov
bound
stos
sub
dec
ror
xor
shr
mov
out
sbb
hlt
in
and
in
pop
fs
or
mov
out
mov
xchg
fisubr
dec
jmp
mov
ficomp
add
inc
dec
aas
inc
aad
div
fmul
cdq
add
fwait
pop
outs
test
jl
rcl
sbb
add
mov
pop
(bad)
(bad)
xchg
and
out
jl
add
inc
mov
lock
push
retf
sub
pop
scas
test
adc
jl
into
cmc
jle
in
test
lods
push
aam
ret
push
(bad)
sti
enter
ss
popf
aad
pop
fsub
test
and
or
fcomp
clc
add
xchg
xchg
mov
pop
mov
mov
or
int
xor
into
pop
cmps
les
aad
sbb
mov
or
xchg
cdq
sbb
mov
fisttp
mov
jo
call
cld
scas
push
xor
dec
mov
and
mov
push
add
jg
mov
sti
jp
(bad)
cli
or
push
das
xchg
inc
outs
sub
mov
fst
fwait
repz
sbb
cmps
aad
cwde
jmp
cmp
dec
(bad)
arpl
or
xchg
mov
inc
test
push
loop
in
xor
dec
mov
(bad)
mov
data16
or
adc
jae
pmaxsw
jne
cld
fistp
or
sub
loope
and
add
fnstcw
xchg
test
pop
xchg
retf
push
pop
mov
ins
enter
or
cmps
xor
push
xlat
outs
ror
cdq
ins
fist
cmp
push
xor
push
jp
lds
fsubr
sahf
(bad)
loopne
test
mov
xor
fimul
dec
mov
xor
jmp
xor
dec
test
dec
popa
in
dec
jmp
mov
inc
push
aaa
jecxz
mov
in
ficomp
or
push
sub
xchg
xor
mov
add
js
lods
push
jmp
add
rcr
gs
sbb
lods
and
(bad)
loopne
or
repnz
adc
or
add
out
add
outs
mov
mov
ror
adc
jp
sbb
xor
add
pop
dec
ror
cmp
or
icebp
cmp
mov
mov
xchg
dec
retf
mov
dec
lds
pop
jp
sahf
mov
xor
call
push
push
push
pop
leave
popa
outs
sbb
xor
popa
pop
add
adc
arpl
movs
outs
mov
out
in
ret
jp
data16
mov
ror
cmps
lahf
je
retf
(bad)
pop
cmc
xchg
dec
mov
xor
pop
fbstp
fwait
loop
lea
xchg
mov
lods
mov
push
hlt
jmp
jne
bound
aam
lea
das
mov
nop
push
les
inc
cwde
pop
ror
test
adc
iret
out
or
inc
or
sub
pop
mov
xor
dec
pop
fcom
imul
(bad)
lock
leave
jno
pop
push
dec
das
sub
mov
or
push
or
outs
aas
out
xchg
int
xchg
ror
retf
xchg
repz
push
stos
pop
addr16
sub
jmp
retf
data16
jnp
cmps
std
xor
cmp
stos
ja
test
imul
push
push
aam
mov
xchg
and
ror
(bad)
push
mov
jo
shr
xlat
xchg
push
fistp
and
xchg
iret
shr
rcr
shl
jle
cmp
push
mov
xor
test
sbb
jne
push
sbb
ins
mov
mov
mov
data16
mov
pushf
outs
pop
ss
adc
xor
jmp
(bad)
or
mov
mov
cmp
cwde
retf
gs
jne
mov
imul
daa
mov
ja
inc
push
hlt
jl
push
out
or
repnz
das
mov
mov
shl
jmp
xchg
adc
jecxz
and
sbb
xor
mov
or
push
mov
dec
imul
jge
dec
popf
pop
int3
(bad)
push
adc
adc
inc
imul
sti
(bad)
ror
bound
cmps
push
nop
pop
mov
out
xchg
add
shr
push
iret
mov
neg
addr16
(bad)
test
jno
or
push
mov
aas
mov
bound
jo
pop
mov
pop
in
lahf
call
into
sti
sub
jmp
mov
in
hlt
sbb
cmps
aam
ins
mov
cmc
fst
jb
xchg
add
mov
or
(bad)
retf
sti
mov
sub
inc
pop
mov
aam
shl
shl
mov
cmp
outs
fdiv
lea
aad
xchg
ss
xor
daa
jg
dec
and
pop
xchg
inc
lods
sbb
aad
ss
hlt
fxch
and
movs
out
add
mov
call
xor
sub
imul
out
sub
shl
pop
nop
xchg
adc
inc
je
in
inc
mov
outs
mov
(bad)
fstp
out
xor
cs
xor
(bad)
jb
jo
adc
add
clc
shl
repnz
inc
mov
je
push
xchg
push
sbb
or
and
(bad)
mov
ins
movs
inc
sub
iret
aas
inc
and
leave
adc
mov
les
jmp
sbb
in
xor
stos
jg
cs
ror
sti
and
or
mov
cmps
rcr
out
mov
jns
and
push
inc
push
jge
jae
fxam
sub
arpl
jo
jno
in
clc
not
push
mov
(bad)
cli
ss
add
cmp
shl
dec
aad
out
ret
shl
dec
cmps
(bad)
fwait
ins
lods
inc
test
xchg
aas
adc
repz
rol
push
sar
push
jmp
jp
xchg
jg
ret
call
cmp
xor
push
cli
into
bound
movs
xchg
add
fisttp
ja
mov
mov
and
adc
adc
loopne
xor
xchg
lds
adc
pop
retf
adc
(bad)
xchg
outs
out
xchg
test
sub
or
bound
outs
out
mov
adc
stos
mov
repnz
movs
das
popa
jle
ret
adc
inc
(bad)
shr
imul
xlat
enter
pushf
call
imul
push
cmp
sub
xchg
mov
mov
add
cli
push
fnstenv
nop
xor
aas
add
cmps
iret
fidivr
pop
dec
jbe
mov
sub
dec
addr16
and
inc
cmp
push
sbb
fwait
inc
pop
shufps
pushf
movs
shl
out
jne
popa
pusha
dec
rcl
lahf
or
pop
inc
inc
push
in
ret
sub
inc
aam
jmp
mov
test
add
push
nop
sbb
mov
add
sub
xchg
ret
lock
ss
sub
(bad)
jg
xor
or
fst
das
mov
mov
push
fst
xchg
fisub
or
sub
leave
cmp
push
push
hlt
xchg
imul
adc
movs
mov
push
pop
aad
dec
adc
sbb
popf
inc
nop
mov
pop
dec
and
jmp
and
jmp
in
or
fistp
sbb
add
mov
sub
jbe
iret
outs
push
sar
jge
cli
mov
test
push
mov
mov
add
out
ds
mov
dec
push
and
jmp
adc
test
xor
cli
clc
test
xchg
cmp
sub
inc
push
dec
add
sub
push
push
mov
cmp
adc
push
push
mov
ror
daa
aaa
lds
(bad)
mov
add
push
xchg
dec
dec
push
adc
pushf
rol
dec
loopne
mov
inc
retf
push
movs
mov
jo
(bad)
inc
aad
pop
cmps
xchg
adc
fldcw
jne
mov
int
cmps
pusha
ins
movs
pop
leave
sbb
lahf
(bad)
dec
cwde
retf
aad
push
xor
fstp
pop
jmp
push
or
push
bound
bound
(bad)
scas
cmp
xchg
ss
adc
xchg
cmp
xchg
sbb
add
movs
pop
fmul
gs
call
imul
mov
xor
add
adc
stos
scas
pushf
shr
push
shl
scas
mov
rcl
(bad)
int3
jecxz
aad
lods
mov
fisttp
sub
loopne
sahf
xchg
xor
and
scas
iret
adc
in
nop
movs
lods
stos
add
stos
dec
mov
adc
mov
jnp
ins
int3
in
fisttp
push
out
mov
dec
(bad)
fisttp
out
dec
jge
into
adc
hlt
fdiv
dec
add
jne
ss
test
fs
iret
test
add
xlat
shr
sar
mov
or
mov
cmp
lds
lock
push
xor
popf
aaa
js
aaa
gs
(bad)
mov
rcl
fwait
jmp
sar
call
xchg
sub
ret
cmp
rol
test
addr16
neg
xlat
sbb
outs
push
(bad)
pop
add
(bad)
mov
and
adc
push
mov
dec
pop
push
pop
jne
lahf
inc
popa
and
cdq
outs
bound
loop
xchg
fdivr
rcl
xchg
retf
xchg
mov
cmp
aad
push
retf
stos
dec
mov
mov
das
lock
push
rcl
ja
ror
mov
cli
push
imul
jno
ins
popf
mov
aaa
cld
cld
add
mov
stos
push
mov
int3
mov
(bad)
xor
loopne
jno
pusha
inc
scas
dec
xchg
mov
aaa
and
test
xchg
out
adc
inc
frndint
pop
inc
ins
jae
push
les
pop
fidivr
mov
jbe
data16
xor
sbb
int
xor
scas
push
das
xlat
sub
imul
push
push
inc
lahf
mov
lea
iret
or
fdiv
fdiv
pop
jne
ds
add
or
mov
xchg
add
movs
enter
xor
rcl
(bad)
sbb
sbb
sar
call
rol
xor
in
aam
dec
xchg
dec
jp
mov
xchg
ss
(bad)
xchg
inc
cld
pop
mov
outs
sahf
jg
aad
mov
add
in
sub
pop
sbb
loop
push
in
cmp
rcl
push
mov
repz
jmp
shl
jbe
push
fisubr
ds
jmp
arpl
movs
cmp
aad
fcom
xchg
out
push
inc
cmp
stos
dec
adc
add
push
mov
adc
outs
sub
pop
in
pop
lods
mov
jg
xchg
aam
imul
add
(bad)
js
push
inc
shl
out
ud1
scas
rcl
arpl
lea
mov
cwde
mov
xor
nop
or
xchg
push
jno
dec
movs
int
cmp
cs
sub
push
pop
jg
in
mov
pop
add
ror
dec
xchg
neg
out
enter
mov
mov
cdq
sub
push
jo
cmp
sbb
movs
pop
test
mov
sti
gs
rcr
repnz
popa
jl
outs
das
cmp
not
pop
add
sbb
push
icebp
jle
mov
xor
add
add
imul
ins
icebp
imul
xor
sub
mov
pushf
xor
cli
mov
das
(bad)
das
aaa
cmc
and
call
mov
gs
movs
pop
push
add
add
js
or
xchg
(bad)
hlt
in
das
int3
and
mov
adc
jp
loopne
sbb
and
adc
xchg
adc
dec
int
movs
cld
gs
mov
aam
out
mov
jo
outs
jne
lods
ins
and
sub
or
mov
popf
and
push
fwait
std
cmc
mov
mov
dec
pop
ficom
cs
mov
das
and
mov
mov
popf
mov
lea
iret
push
stos
or
jb
jg
xchg
inc
fbld
dec
clc
nop
pop
push
ja
inc
test
sbb
pop
cmp
leave
sub
xlat
ffree
ss
outs
xor
scas
xor
in
cmps
icebp
inc
shr
ror
sub
retf
push
xchg
push
pop
popf
xchg
push
dec
jnp
fs
dec
pop
stos
mov
and
xchg
mov
mov
add
inc
dec
js
cli
adc
inc
call
neg
jg
sar
sti
xchg
xor
in
sbb
dec
mov
pusha
sbb
or
mov
jns
and
pop
addr16
outs
add
and
test
pop
hlt
mov
sbb
add
fdiv
mul
nop
outs
jne
adc
jae
sub
and
loope
ds
cmps
arpl
aam
jmp
mov
jge
popa
inc
mov
enter
xchg
sub
mov
imul
xchg
cs
adc
retf
jbe
and
lahf
cmps
jns
inc
xor
xchg
test
dec
fisubr
xor
mov
ins
enter
mov
mov
aaa
fnstenv
lahf
or
and
xor
mov
jb
pushf
aam
mov
leave
sub
lock
sbb
xchg
mov
movs
xor
enter
rcr
jmp
xchg
xchg
cmps
xchg
sti
xor
mov
or
push
xchg
or
mov
inc
inc
jp
icebp
ficomp
push
call
mov
enter
mov
mov
imul
mov
and
stc
cmp
pop
sti
jp
sub
jnp
cmp
adc
mov
inc
inc
jno
and
push
aam
cld
pop
daa
pop
mov
imul
xor
call
fmul
mov
adc
adc
dec
outs
test
dec
imul
mov
adc
and
mov
lahf
fcomp
xchg
sub
out
gs
xchg
loope
lds
dec
jae
add
ss
lahf
repnz
rcr
loope
xchg
jae
push
pop
xchg
xlat
out
cmp
cmp
push
mov
jl
ja
adc
mov
xchg
sahf
cmps
pop
cld
sbb
aam
ins
mov
add
mov
adc
push
cdq
xchg
cmp
push
sbb
push
xchg
aas
adc
pop
in
pop
cld
(bad)
jae
cld
sahf
xor
mov
push
lds
pop
pop
ror
int
xchg
into
fdivr
inc
adc
dec
pop
jp
jbe
cmps
mov
aaa
aas
test
(bad)
scas
push
add
jns
shl
into
stos
out
movs
mov
dec
leave
out
and
hlt
aas
sbb
imul
stos
jbe
rcl
imul
cmps
test
pop
fmul
fs
cwde
call
add
xchg
dec
js
(bad)
enter
iret
dec
adc
dec
ss
mov
into
loop
hlt
ins
stos
rcr
daa
loop
fs
lahf
dec
iret
adc
pop
xchg
and
fwait
pop
scas
and
add
mov
out
(bad)
sbb
jg
mov
push
call
pushf
aam
popf
loopne
mov
or
push
fwait
aas
and
cli
cmc
stos
cmc
pop
push
mov
ds
fidivr
or
inc
cli
push
xchg
clc
cmp
xor
xor
push
sbb
inc
ss
pop
iret
call
pop
xchg
inc
pop
call
rcl
movs
aas
int3
out
int3
(bad)
rcr
add
sub
and
mov
mov
aaa
cmp
or
aam
int
iret
lods
clc
adc
mov
hlt
adc
inc
mov
lods
inc
aaa
shl
lahf
jno
sbb
pop
int
push
test
mov
mov
sbb
dec
sti
cmc
mov
repz
out
adc
mov
mov
jecxz
pusha
dec
sbb
and
inc
aaa
sbb
jbe
nop
jmp
mov
cmp
cs
dec
xchg
cmps
(bad)
cwde
gs
xchg
in
xchg
mov
cmps
repz
add
shl
pop
sbb
nop
xlat
fsub
sbb
sbb
dec
xor
vmovlps
xor
and
xchg
movs
cdq
xor
push
jne
cli
pop
loope
sub
dec
push
sub
loopne
adc
dec
adc
ja
and
sbb
push
pop
aas
sbb
(bad)
std
and
add
inc
or
sub
mul
mov
mov
pop
leave
sti
or
jnp
test
xor
mov
inc
mov
adc
adc
hlt
and
dec
push
je
out
inc
ja
(bad)
fcmovne
out
cmps
jnp
rcl
fild
sub
mov
imul
out
clc
jno
das
xchg
xor
test
push
mov
lock
(bad)
aaa
dec
push
sub
xlat
cdq
fimul
jle
sbb
add
cmp
push
mov
cmc
fdivr
xor
or
push
imul
xchg
dec
cmps
inc
xchg
pop
inc
pop
lock
mov
jge
das
imul
pop
inc
dec
scas
push
imul
inc
push
sbb
js
xor
pop
push
or
aam
fbld
mov
push
dec
test
cwde
sbb
pop
test
call
jg
shr
xchg
add
(bad)
imul
pop
adc
(bad)
or
pop
adc
mov
inc
xor
xchg
pop
aad
push
dec
loope
sub
sbb
adc
xchg
(bad)
out
fucom
sub
xchg
fisttp
jbe
mov
mov
mov
xchg
push
loopne
iret
stc
add
lods
pop
mov
ss
mov
push
jns
jae
fisttp
mov
mov
adc
push
cmp
popa
and
sbb
sbb
mov
inc
dec
jge
sub
ror
int3
hlt
mul
push
xchg
lock
sar
int3
(bad)
push
fs
mov
test
or
mov
cs
ficomp
pop
fistp
scas
dec
xchg
mov
cmp
add
mov
pop
xchg
test
adc
dec
bound
sub
test
jle
push
pop
cmps
mov
add
retf
test
std
cmp
lahf
ficomp
sub
xor
mov
push
loopne
pop
jmp
mov
pop
clc
sahf
outs
shr
retf
lock
sti
in
wrmsr
jle
stos
push
std
loopne
mov
pop
dec
loop
frstor
xchg
dec
mov
or
retf
ins
add
xor
sbb
or
add
outs
mov
mov
pop
add
idiv
jnp
sbb
inc
icebp
xchg
jo
push
(bad)
xchg
popf
mov
jge
pop
pop
push
repz
xor
xor
jl
sub
sub
xor
mov
xchg
aad
xchg
cwde
mov
pop
dec
add
fld
fcom
add
loop
mov
inc
dec
sub
ficom
mov
xchg
mov
push
push
mov
daa
stc
inc
or
sbb
xchg
stos
push
push
ins
aaa
cmp
call
rol
fsubr
xor
jp
cmp
cdq
fs
test
fadd
push
mov
xor
cmp
loope
fist
repz
lods
(bad)
sti
clc
jb
mov
cmc
jmp
add
inc
xlat
fistp
sbb
jae
and
push
outs
add
jmp
rol
aad
sub
xchg
nop
ret
sahf
and
rcl
rol
adc
push
js
in
popa
and
mov
jl
mov
xor
dec
clc
ret
mov
test
push
jge
push
xchg
iret
aam
jmp
sub
jmp
and
stos
mov
adc
(bad)
fnstenv
and
xor
mov
lods
pop
sub
ror
jp
sbb
inc
cmp
or
push
or
cmp
clc
movs
test
inc
ja
fcom
test
in
mov
mov
pop
xor
cwde
inc
test
js
ss
jge
or
rcr
pop
xor
push
imul
inc
aam
mov
pop
and
pop
pushf
imul
ret
lods
adc
ret
push
mov
xchg
or
add
pop
sbb
int
and
shr
sub
enter
push
(bad)
out
dec
js
scas
sub
add
dec
bound
(bad)
xchg
mov
lahf
add
in
mov
in
(bad)
cld
out
imul
push
xor
and
jnp
dec
cld
cmp
sti
fld
ins
hlt
xor
out
pop
pop
inc
xchg
xchg
mov
stos
addr16
jl
dec
pop
out
sub
push
cmp
out
jmp
add
mov
(bad)
cmp
cmps
retf
cmp
retf
bound
jge
add
in
iret
fistp
and
xchg
add
cmp
addr16
add
nop
sbb
adc
and
push
mov
enter
jle
shl
lea
inc
xor
xor
inc
xor
pop
push
push
push
ja
cmps
jo
mov
and
and
movs
sar
sahf
(bad)
cmc
addr16
out
sahf
inc
jge
xor
fwait
jg
retf
mov
push
jecxz
xor
and
enter
and
mov
repz
ss
inc
and
fwait
push
inc
inc
xchg
icebp
ss
xor
fiadd
enter
or
fld
mov
lahf
stc
mov
cmp
pop
retf
iret
hlt
rsm
test
aaa
add
xchg
jae
call
xchg
cmp
add
movs
dec
ror
popf
sbb
test
sub
mov
retf
shl
popf
add
scas
push
jecxz
and
pop
mov
mov
movs
fcomp
cli
minps
fcom
mov
pop
test
xor
mov
and
sbb
jno
sbb
sub
js
idiv
dec
add
aas
(bad)
es
into
dec
shl
dec
pop
push
movs
jp
int3
cmp
lock
pop
test
push
xor
inc
jbe
loopne
xchg
loopne
mov
ja
aas
clc
ins
dec
fs
cmp
ins
(bad)
push
cmp
popf
jae
push
pusha
into
outs
cmp
arpl
sbb
imul
mov
or
inc
fist
js
push
xchg
xchg
stc
sub
add
outs
xchg
mov
unpckhps
dec
jmp
xor
xchg
dec
jle
vphsubbw
mov
jle
test
jno
js
add
pop
repz
pop
in
mov
cmps
mov
mov
jecxz
cmps
sti
jle
je
mov
mov
add
mov
and
rol
fcomp
jbe
gs
add
xchg
sub
fmul
inc
inc
inc
rcr
stc
outs
fcom
push
sbb
push
push
push
mov
cmc
cmps
into
fistp
jb
xchg
pop
lock
mov
test
push
push
jge
movs
mov
jbe
dec
loopne
inc
jmp
sub
sub
and
jmp
xchg
clc
out
jle
dec
repnz
fwait
mov
mov
add
mov
pop
(bad)
mov
sub
jg
mov
ror
jbe
push
scas
aas
push
mov
adc
(bad)
sub
jns
or
(bad)
lahf
sub
mov
dec
fimul
dec
dec
jge
retf
or
dec
jns
mov
ror
jl
out
sbb
dec
aad
push
xchg
add
pop
imul
mov
leave
scas
int3
pushf
xor
add
cmp
daa
inc
or
mov
fistp
jns
adc
push
out
xor
or
out
pop
gs
mov
push
mov
pop
mov
cmp
push
mov
cs
mov
icebp
scas
in
xor
mov
cmp
pop
add
mov
in
or
add
mov
bound
pusha
mov
xlat
in
pop
mov
fwait
jmp
inc
jmp
das
(bad)
call
push
or
pop
retf
bound
imul
sti
push
lods
movs
jmp
add
imul
fild
je
hlt
aad
push
adc
pop
es
in
jge
cdq
lahf
fld
push
jmp
test
adc
(bad)
int3
lods
ror
hlt
iret
ja
test
mov
or
push
cmp
push
mov
ret
xchg
dec
sbb
xchg
mov
mov
jmp
imul
jae
xchg
mov
popf
lds
stc
fsubp
or
sbb
and
out
stos
mov
cmp
dec
cmp
xchg
and
bound
push
inc
test
push
pushf
sar
add
push
mov
cs
std
inc
xchg
or
or
mov
push
mov
mov
and
aad
ins
jb
scas
call
seto
arpl
adc
cmp
push
loope
xchg
dec
shl
or
mov
loope
lods
in
mov
pushf
jmp
dec
ins
sbb
test
jmp
mov
mov
xchg
fbstp
push
stos
sbb
push
dec
mov
fiadd
aad
hlt
in
mov
cli
popf
in
inc
mov
mov
mov
jmp
mov
(bad)
fldcw
push
fadd
retf
(bad)
in
adc
ins
in
jne
das
iret
and
pop
push
inc
and
mov
lods
push
or
fcmovbe
inc
cmc
rol
xor
or
or
dec
int3
mov
bound
mov
pop
dec
adc
(bad)
not
pop
ins
push
push
inc
and
sar
or
addr16
clc
dec
adc
out
pusha
sbb
repnz
and
xchg
add
test
push
movs
jo
push
stos
dec
cld
jmp
mov
jae
or
mov
out
xchg
bnd
xor
xor
movs
and
dec
test
lahf
or
loope
jge
dec
fwait
cmps
inc
pop
nop
ss
aam
retf
fldcw
jno
(bad)
dec
push
fnstenv
mov
cmps
fisubr
mov
fsubr
pop
and
sbb
and
je
dec
shl
cmp
sub
shr
jmp
stos
jae
mov
mov
mov
jb
cmp
xor
stos
add
inc
dec
test
movs
mov
daa
cmp
jnp
lods
xchg
movs
inc
push
or
mov
dec
clc
dec
enter
pop
into
test
jge
mov
sbb
sahf
push
imul
dec
jl
xchg
rol
xchg
inc
(bad)
daa
push
cmps
fsub
and
add
jmp
or
and
mov
imul
popa
movs
fisub
sub
fisttp
pop
jmp
rdpmc
sbb
inc
call
fisttp
mov
mov
test
ins
lods
xchg
add
pop
sbb
add
jmp
or
dec
xchg
(bad)
(bad)
dec
inc
mov
int
inc
pop
rcr
mov
mov
test
into
ret
retf
pop
loopne
lahf
adc
xlat
jne
xchg
inc
ja
fcom
fsub
mov
cs
inc
fucomi
jnp
inc
dec
xor
mov
leave
xchg
retf
add
cwde
test
cmp
(bad)
adc
sbb
jle
das
push
push
jl
dec
outs
add
xchg
xor
in
out
daa
push
or
jmp
add
es
jne
jecxz
sub
retf
bound
push
pushf
(bad)
fsubr
mov
dec
push
xor
icebp
hlt
je
shl
jns
fcmovnb
ret
jnp
pop
mov
lock
jnp
cmp
add
(bad)
popa
jne
and
ficom
cmp
(bad)
iret
aam
inc
into
ret
mov
cmp
inc
out
push
pop
mov
ret
pop
scas
fst
or
xor
or
arpl
fwait
pop
cli
out
inc
sub
lods
push
xor
mov
sbb
test
and
cmc
pop
fdivr
jmp
test
mov
fs
inc
adc
out
adc
(bad)
ins
and
js
jg
lea
popa
ret
cmp
dec
dec
dec
pop
mov
dec
xchg
and
adc
pushf
xchg
sub
mov
push
adc
out
cmp
loopne
dec
ja
rcr
in
mov
or
mov
mov
xor
lea
sub
jne
(bad)
imul
inc
sbb
jg
je
lock
pop
pop
ins
and
(bad)
mov
and
test
scas
cmp
cmp
daa
mov
sub
ror
dec
loope
jne
jmp
and
push
(bad)
xchg
xchg
xchg
pop
mov
(bad)
jmp
sbb
ret
(bad)
push
mov
pusha
fmul
sub
pop
pop
mov
js
dec
das
pop
stc
scas
(bad)
leave
jecxz
mov
(bad)
pop
aaa
adc
jns
fwait
push
out
dec
mov
xchg
cli
jge
xchg
fadd
mov
push
mov
mov
xor
in
sub
jae
adc
add
xchg
sbb
jbe
ins
jmp
js
imul
enter
cdq
jle
mov
nop
mov
mov
add
retf
shr
adc
jb
pusha
in
push
cli
or
in
or
pop
inc
rcl
repz
xchg
ins
mov
int
xor
sbb
in
out
mov
mul
scas
repnz
push
pop
jns
imul
sub
pop
ss
jle
sbb
sar
add
jbe
pop
enter
jecxz
jle
mov
xlat
and
add
in
js
push
mov
fwait
xchg
xchg
shl
xor
pop
inc
fimul
outs
repz
xchg
in
mov
xchg
jmp
ins
add
cld
(bad)
adc
mov
loop
mov
icebp
mov
mov
in
(bad)
(bad)
lods
clc
and
inc
loop
cld
xchg
jns
rep
loop
and
loope
fcom
cmp
scas
cli
sbb
sub
push
repnz
mov
and
dec
mov
ja
(bad)
out
stos
jae
dec
fs
adc
pop
out
xchg
loope
lods
cmp
sbb
mov
cmp
jp
xlat
in
cmp
movs
(bad)
mov
not
addr16
fmul
outs
mov
push
fisub
ret
jg
ror
test
in
xchg
int3
mov
mov
fiadd
sub
pop
sub
mov
sar
cmp
popa
push
daa
outs
adc
movs
mov
xor
ins
xchg
mov
outs
mov
pop
adc
ins
mov
cmps
xchg
jmp
aaa
mov
push
xchg
mov
aam
jb
mov
sahf
out
scas
sar
sub
stos
mov
sub
daa
rcl
fwait
stos
lahf
adc
xchg
sbb
sar
int3
retf
loope
mov
cld
sbb
mov
clc
js
cdq
jmp
xor
test
popa
adc
loope
push
lds
push
adc
outs
rol
out
mov
dec
and
xlat
es
sbb
icebp
es
ret
gs
sbb
lock
mov
sbb
mov
or
mov
ror
aas
imul
popa
sub
pinsrw
int
mov
adc
mov
cld
retf
mov
or
rcl
idiv
arpl
stos
adc
dec
movs
mov
cwde
jne
fst
mov
pop
stos
push
adc
pop
daa
jne
cld
jae
fmul
dec
mov
or
or
test
mov
mov
sar
and
lea
imul
std
dec
test
sub
push
mov
xchg
repz
xlat
dec
pop
mov
fs
pop
mov
mov
mov
cmp
and
call
inc
and
sub
sbb
pop
dec
popa
pop
pop
jb
mov
mov
rep
mov
pop
push
mov
inc
ins
movs
xchg
sub
and
cmp
jae
stos
cli
ret
cmp
mov
sub
test
ins
cmp
add
push
pop
mov
xchg
getsec
stos
popa
pusha
ja
cs
clc
mov
cld
icebp
loop
mov
in
inc
fdivr
mov
cmp
popf
addr16
jns
ret
adc
jo
pop
sbb
and
shl
ficom
cwde
retf
data16
adc
mov
aad
ret
movs
imul
ins
shl
ret
jg
clc
je
inc
jo
xchg
arpl
adc
or
rcl
and
mov
sub
call
push
pop
popa
jbe
pop
pushf
push
(bad)
pushf
xchg
dec
and
sbb
sbb
jmp
cdq
cmp
icebp
int
xchg
pusha
nop
clc
iret
push
retf
ins
dec
push
enter
not
cwde
pop
gs
rol
in
ds
cmp
mov
les
push
inc
es
fwait
push
idiv
mov
call
adc
sahf
cmp
add
mov
arpl
push
test
ins
ss
loopne
pushf
mov
or
fstp
nop
mov
outs
add
nop
mov
xchg
sbb
adc
sbb
xor
not
jle
adc
xchg
inc
(bad)
mov
dec
sub
jbe
in
cwde
and
imul
inc
mov
repz
jp
and
movs
add
out
rcl
mov
pop
jmp
xor
mov
mov
pusha
rcr
jae
mov
es
out
jmp
gs
dec
inc
push
push
fmul
lds
ret
mov
ins
jp
inc
cmc
mov
inc
lods
xchg
or
jmp
add
sbb
adc
ja
or
pop
das
fistp
cs
jmp
inc
push
and
pop
cmp
mov
pop
xor
dec
jnp
test
(bad)
or
cmp
sbb
aam
inc
ins
xor
enter
inc
pop
(bad)
xchg
or
ins
push
jb
fld
(bad)
int3
inc
dec
fidiv
(bad)
dec
sar
in
imul
dec
and
mov
stos
and
into
loopne
out
cmp
and
pushf
push
in
mov
cmp
aaa
mov
xor
mov
xchg
call
imul
or
cs
inc
jo
mov
dec
mov
cli
adc
mov
repnz
mov
sbb
movs
les
pop
jp
rcr
jmp
push
xor
out
sbb
gs
and
mov
mov
push
mov
mov
push
adc
aam
dec
sub
mov
mov
outs
mov
fmul
sub
hlt
mov
inc
shl
lock
and
jno
dec
mov
cmps
sub
lea
adc
sti
push
pop
jae
dec
cmp
loopne
fmul
jg
fsub
and
repz
xchg
mov
dec
sbb
lahf
or
sub
xchg
imul
xchg
clc
and
mov
test
shl
push
xor
jmp
mov
addr16
xor
sub
jo
dec
sub
iret
pop
and
cdq
xchg
lds
js
jmp
cmp
ds
lds
jmp
mov
push
or
add
xor
sbb
mov
cmp
(bad)
jmp
adc
stos
adc
pusha
cmp
xor
fistp
vcvttpd2dq
xchg
mov
mov
add
push
pushf
neg
into
xchg
or
fcomp
das
or
cmc
pop
adc
or
not
xchg
dec
rol
mov
xchg
fsub
out
mov
pop
jnp
into
cdq
push
inc
aaa
mov
cmp
mov
and
push
and
adc
cli
ror
dec
or
fiadd
ss
or
cmps
and
lahf
add
xchg
xor
(bad)
xor
jo
pop
xchg
into
pop
mov
xchg
repz
pushfw
xchg
sar
fidivr
enter
cmps
fincstp
dec
das
(bad)
in
call
psllw
fwait
ret
pop
dec
aad
mov
(bad)
cld
in
sti
cmps
in
into
aaa
push
xor
jns
cmps
cmp
dec
add
in
int
sbb
mov
mov
mov
inc
sbb
hlt
sub
and
fcomp
js
adc
or
std
out
ins
mov
lock
mov
mov
add
iret
icebp
stos
jecxz
test
pop
cmps
fwait
cmp
(bad)
rcr
or
enter
xchg
mov
xchg
pop
xchg
cs
mov
mov
xchg
xlat
loope
add
cmp
das
cs
dec
imul
ins
sbb
mov
mov
(bad)
in
push
sub
std
inc
xchg
or
pop
cmps
dec
out
mov
test
sub
cdq
pusha
adc
jmp
sub
push
adc
or
movs
inc
neg
scas
push
sbb
pop
push
mov
mov
mov
popa
pop
mov
mov
xor
sub
les
and
rcl
xor
sub
js
mov
cs
cmp
xchg
xor
mov
(bad)
xlat
out
bound
lock
je
cmp
or
mov
dec
inc
fsub
mov
or
mov
jp
jge
pause
sbb
je
or
and
loope
jl
push
cmp
outs
enter
lods
(bad)
out
xchg
push
dec
aaa
out
pop
jno
int
xchg
cmp
imul
stos
inc
jb
xor
mov
push
xor
mov
push
inc
call
out
xor
jmp
mov
(bad)
push
inc
push
cs
outs
mov
cmps
add
sbb
test
je
push
ret
cmp
daa
pop
fs
pop
lods
into
mov
pop
cmp
push
mov
jae
sbb
xchg
cmp
xlat
cli
inc
xchg
out
mov
fsubr
xlat
repz
retf
in
mov
push
or
movs
cmps
sbb
push
lahf
sub
xchg
ja
lahf
cmp
mov
cmp
push
sbb
addr16
dec
jb
and
push
xchg
ret
lods
mov
cmp
mov
repz
or
cmp
xchg
adc
fnsave
dec
gs
call
pop
aaa
(bad)
les
scas
and
push
std
imul
dec
xchg
pop
cmp
in
jno
pop
xchg
cmp
in
cmps
into
pop
inc
xor
inc
sbb
xchg
jno
jmp
push
in
mov
ins
xor
add
push
in
adc
shl
ja
pop
hlt
pop
mov
imul
iret
test
and
jbe
sbb
loop
data16
mov
imul
aam
cmp
jge
in
adc
dec
add
das
inc
fld
es
add
pop
dec
mov
imul
stc
mov
push
sahf
cmps
pop
lahf
das
mov
fisub
ret
test
pop
mov
adc
and
push
sbb
mov
sbb
test
add
push
fist
pushf
and
cs
jmp
jno
sbb
push
ins
cmp
push
and
rcl
test
les
mov
call
or
add
mov
push
loopne
xor
into
push
cmps
mov
fnstenv
ficomp
push
gs
inc
je
sub
inc
sub
dec
pushf
pop
inc
test
(bad)
sar
jle
xchg
lea
sub
xchg
pop
mov
inc
movs
lock
cld
push
mov
jge
hlt
mov
lods
xchg
jns
cwde
gs
inc
ds
popf
cmp
fisub
and
push
jo
sub
bound
xchg
jno
das
mov
jbe
in
xchg
fs
xor
fs
xor
daa
jmp
rcl
stos
and
xor
push
inc
std
sbb
rcr
pop
icebp
scas
jl
pop
aas
les
(bad)
das
loop
shld
mov
je
mov
loop
enter
inc
mov
jge
out
retf
jge
inc
xor
cmp
ss
mov
and
dec
in
iret
or
xor
push
jp
or
imul
jmp
into
mov
cmps
(bad)
in
js
stc
fwait
outs
mov
test
push
call
ja
inc
xchg
xor
push
in
sub
inc
xor
xchg
loopne
sub
jo
pushf
jno
fadd
sub
or
pop
mov
pop
mov
inc
and
inc
mov
test
cmps
xor
add
sub
push
dec
dec
aas
movs
pusha
fs
xor
stc
inc
add
test
int3
jb
mov
js
data16
pop
(bad)
enter
fs
mov
and
call
cmp
adc
(bad)
(bad)
mov
mov
in
mov
push
mov
add
movs
sti
sub
push
mov
mov
or
cs
and
sbb
lea
adc
push
in
pop
mov
pop
lahf
out
fstp
dec
mov
into
lock
adc
and
pusha
lods
or
out
jno
outs
dec
dec
icebp
mov
scas
lds
inc
imul
sub
jb
and
data16
adc
cs
cmp
call
mov
add
icebp
push
pop
adc
in
out
fcmovbe
and
rcr
add
retf
xor
inc
repnz
jb
out
cmp
(bad)
mov
movs
dec
pusha
mov
mov
sar
(bad)
je
pop
sub
icebp
or
push
add
cmp
ja
lock
stc
lods
add
jbe
adc
shl
mov
xor
fwait
pusha
push
neg
inc
cs
jb
add
inc
mov
inc
mov
xor
leave
stos
inc
fs
jmp
mov
jmp
and
pop
bound
ficomp
test
aam
jecxz
pusha
xchg
fs
mov
sub
jno
push
add
xchg
ja
sti
hlt
js
or
stc
retf
imul
pop
pop
dec
js
out
xor
push
call
xor
jne
lock
int
jle
stos
dec
aas
sbb
retf
jp
inc
jecxz
jnp
xchg
retf
sub
xchg
out
mov
dec
pop
scas
adc
pop
dec
sbb
fld
push
test
sar
or
stc
jbe
fdivr
jge
ds
push
iret
jp
adc
or
idiv
push
xlat
adc
or
mov
inc
fsubr
jnp
call
out
add
je
pop
inc
ficom
push
xlat
lds
add
imul
adc
sbb
push
jno
inc
psllq
and
jbe
addr16
push
cmp
fcomp
in
inc
cmp
sub
cmp
push
lock
xor
ins
cmp
in
je
dec
mov
inc
stos
push
jns
adc
pop
sbb
sbb
pusha
inc
mov
cwde
push
inc
sub
icebp
aad
push
cld
imul
mov
cld
mov
(bad)
jl
shr
pop
sub
sub
or
or
push
adc
fldcw
popf
aas
(bad)
xchg
outs
xor
pop
sub
out
out
and
(bad)
aam
xor
mov
retf
sahf
add
scas
fisubr
jp
pop
xchg
pop
mov
xchg
arpl
arpl
hlt
daa
mov
add
or
in
push
sub
xlat
dec
dec
popa
fimul
cmp
xlat
xchg
clc
sbb
fmul
mov
sub
or
in
lods
jg
mov
dec
std
aad
dec
xor
mov
scas
enter
pop
jae
mov
sub
adc
pop
cld
mov
xchg
adc
dec
or
push
(bad)
int
call
arpl
stos
out
lods
aaa
jge
aad
and
out
inc
(bad)
jb
adc
es
xchg
imul
dec
lea
adc
sbb
rcr
jmp
imul
dec
cld
xchg
push
pop
xor
sbb
addr16
dec
push
in
mov
test
mov
pop
pop
repnz
retf
xor
icebp
xchg
in
loop
nop
push
and
(bad)
std
sbb
aaa
cmp
es
mov
repnz
cwde
cmp
enter
sub
push
push
int
cmps
popf
cmp
xchg
stos
cs
mov
stos
xor
lock
stc
sbb
dec
add
ficomp
data16
mov
shr
sbb
or
jbe
mov
test
cwde
aas
retf
dec
mov
mov
cdq
das
or
pop
iret
xchg
repz
adc
movs
mov
dec
mov
gs
retf
mov
mov
mov
in
ficom
add
daa
retf
lods
and
je
shr
push
icebp
push
add
xchg
lds
in
addr16
test
addr16
out
and
sbb
cmp
pop
adc
out
sub
rol
cmps
mov
mov
pop
sbb
or
pushf
jl
jno
into
fild
enter
push
mov
xchg
push
sahf
leave
int3
sbb
xchg
fcmovb
fnsave
int
rol
jg
pop
mov
cmp
dec
mov
iret
es
mov
jo
mov
fsubr
jecxz
dec
loop
scas
mov
stos
movs
or
(bad)
test
and
scas
lods
(bad)
sub
and
jbe
outs
mov
and
dec
mov
imul
test
or
ins
call
fsub
call
call
pop
xlat
push
adc
stos
jge
scas
and
idiv
sub
mov
push
rcl
gs
repz
call
(bad)
loopne
sbb
bound
xchg
cmp
rcl
pop
pop
sub
push
icebp
push
nop
retf
cmp
jl
in
rcl
or
push
mov
sbb
jl
cmc
imul
cmps
xchg
call
cmp
add
mov
jg
pop
(bad)
mov
push
neg
add
enter
and
jno
lock
jb
inc
xchg
xchg
xor
pop
inc
loopne
pcmpeqb
je
fwait
lea
fst
mov
ret
ja
and
in
ret
push
jae
jne
push
inc
cwde
sahf
jnp
ss
retf
test
lea
std
adc
mov
je
jg
test
pop
call
(bad)
mov
mov
clc
pop
into
dec
mov
stos
push
movs
rcr
and
movs
adc
sbb
sub
mov
std
pop
aaa
(bad)
cli
pop
and
cs
pop
ins
(bad)
or
iret
cmp
xor
rol
add
and
adc
dec
(bad)
aam
xor
mov
dec
iret
dec
mov
lods
jp
shl
clc
ret
adc
hlt
shl
pop
outs
scas
mov
pusha
(bad)
xchg
push
repz
lods
repnz
iret
pusha
push
dec
outs
mov
jmp
fld
ins
jae
movs
xor
not
mov
jns
xor
paddsw
push
lock
mov
retf
add
mov
pop
bound
cmp
xchg
xor
inc
nop
fstp
shl
jecxz
not
popf
(bad)
sbb
jbe
pop
push
imul
mov
movs
fwait
lods
adc
and
test
cmp
and
push
mov
inc
and
sahf
retf
(bad)
stc
data16
sbb
cmp
sar
xlat
mov
cmp
mov
mov
btr
push
mov
mov
mov
pop
push
fisubr
mov
push
jp
vpcmpeqw
and
pop
outs
jbe
sbb
or
aad
lock
popa
pop
mov
int3
xor
mov
pop
adc
ret
add
xchg
jg
fldcw
and
arpl
aas
xchg
mov
mov
loopne
je
nop
les
sbb
ja
loope
dec
shl
jb
aad
mov
mov
cmp
xchg
push
mov
push
shr
and
out
sahf
lds
or
addr16
mov
cs
xchg
cwde
out
dec
add
inc
cmp
cli
cmp
inc
mov
in
sbb
push
or
fstp
sbb
scas
jmp
out
sub
pop
inc
(bad)
test
sahf
adc
fs
push
stos
and
in
enter
and
and
cdq
pop
pusha
scas
div
or
adc
cmp
cs
xchg
stos
mov
pop
jno
lea
mov
sbb
imul
jle
loop
xchg
ds
icebp
outs
retf
imul
test
mov
cdq
aam
push
jp
retf
idiv
push
dec
inc
inc
aam
addr16
xchg
or
cmp
in
(bad)
adc
mov
xchg
std
mov
sub
dec
and
push
lea
jb
std
ins
ss
jg
mov
(bad)
pop
jecxz
ret
mov
cmc
push
xor
cmp
cmp
jne
inc
shl
sub
test
cmp
fs
dec
es
es
push
push
fcomi
and
mov
in
shl
mov
lea
lds
into
gs
loop
mov
cwde
cmp
pop
or
and
push
and
out
xchg
int
pop
xchg
ins
shl
push
xor
stc
xor
hlt
push
sbb
cmp
jae
pushf
and
pusha
shr
adc
or
xchg
adc
xchg
dec
aad
rcr
mov
inc
ins
mov
sbb
jns
retf
push
push
mov
xor
movs
push
sti
test
movs
lods
in
repz
in
xor
(bad)
retf
adc
pop
or
mov
adc
sbb
mov
push
inc
(bad)
jg
inc
or
rcl
sub
scas
movs
add
push
pusha
loope
fldenv
mov
neg
mov
xchg
or
adc
sub
call
mov
ficom
and
es
xchg
mov
lock
loopne
xchg
xor
clc
cmp
outs
outs
inc
cmc
xor
cmp
test
adc
dec
fild
pop
mov
pop
fxch
fidiv
dec
(bad)
cdq
and
stos
sbb
jnp
pop
add
jle
into
call
(bad)
imul
dec
pop
xchg
xor
retf
jne
fsub
cmp
iret
ja
pushf
mov
ja
xor
mov
xchg
test
pop
and
cmp
mov
pop
sbb
pop
pop
mov
xchg
rcl
and
pop
scas
popf
ins
add
sub
mov
stc
xchg
(bad)
and
mov
inc
cli
out
cmp
inc
push
loope
xchg
dec
or
sub
cmp
dec
push
mov
fistp
test
popf
je
pop
call
xlat
sbb
push
mov
jae
std
bound
icebp
outs
adc
inc
add
iret
add
movsx
fs
and
outs
jl
mov
outs
aaa
in
pop
and
xor
mov
shl
call
pop
mov
repz
sbb
pop
test
and
mov
in
out
stos
pop
dec
cmps
jae
pop
xchg
mov
sbb
dec
jae
fisttp
shl
ins
addr16
mov
adc
loopne
mov
jb
xchg
pop
dec
xor
pop
lock
lahf
dec
mov
inc
pop
jbe
cmp
or
ror
cmc
fidiv
cli
(bad)
dec
push
push
shr
aam
fs
inc
jmp
aas
or
push
pushf
mov
fisubr
repnz
std
mov
call
movs
neg
sub
mov
dec
outs
retf
test
retf
mov
fdiv
in
dec
mov
sbb
xchg
js
push
mov
fstp
daa
push
fwait
loop
popa
lods
js
mov
lahf
enter
cdq
jmp
or
jecxz
std
in
sbb
jmp
mov
jmp
sbb
(bad)
aaa
push
xor
std
mov
shl
retf
push
ins
enter
fs
mov
fsub
fcom
(bad)
jbe
lods
out
cmp
or
mov
mov
nop
mov
sbb
fdivr
add
dec
cs
es
xor
retf
jbe
inc
dec
clc
div
mov
jo
cmc
fldenv
popa
and
pop
push
fcomip
xor
inc
nop
or
test
add
aaa
jecxz
nop
sbb
pop
mov
push
mov
xor
xchg
call
mov
mov
sub
pop
xchg
push
out
(bad)
cli
rcl
lds
mov
pop
xchg
sbb
in
mov
ja
and
inc
in
je
jp
or
and
and
aas
dec
mov
cs
and
popa
mov
into
adc
xchg
xor
jno
aam
pop
or
stos
call
mov
pop
or
push
out
out
cmp
repz
push
scas
and
fld
das
dec
mov
fnsave
pop
mov
ficom
aaa
mov
add
scas
push
jne
out
inc
test
sbb
into
popa
push
adc
outs
add
push
or
in
stc
jo
jg
mov
out
lds
inc
call
mov
jge
sbb
pop
aas
pop
push
(bad)
cdq
cmps
push
and
sbb
jmp
push
sbb
in
dec
cs
adc
int3
(bad)
cmp
cdq
jmp
mov
xor
push
xor
ss
xchg
iret
xlat
jg
out
rol
hlt
cs
scas
in
js
push
test
js
ror
lock
sbb
dec
mov
mov
inc
push
or
inc
js
imul
cs
hlt
dec
xor
push
fmul
(bad)
(bad)
and
pop
sub
outs
fisub
jmp
lods
jnp
mov
inc
aad
sub
mov
call
test
shl
in
sbb
(bad)
icebp
ror
mov
in
or
pop
in
pop
xchg
xchg
cmovge
jl
jecxz
push
jl
cld
add
add
outs
loope
mov
(bad)
imul
fld1
jg
mov
shr
loopne
es
mov
inc
dec
frstor
xor
cmp
cdq
into
adc
pop
sbb
sbb
dec
lds
icebp
push
fadd
js
fwait
cmp
push
fadd
mul
mov
jg
aas
popf
push
and
pusha
(bad)
xor
mov
cmp
inc
fld
jp
sub
xor
ret
(bad)
retf
shr
cmps
lods
out
(bad)
mov
stos
ins
rol
mov
sbb
cs
dec
add
pop
sbb
push
fwait
push
sahf
(bad)
sbb
(bad)
cmps
popf
(bad)
push
inc
mov
lods
aas
scas
pusha
stos
push
outs
and
lods
jmp
(bad)
adc
call
jne
and
push
jmp
push
es
mov
out
lds
sbb
inc
ret
jmp
mov
add
in
cmps
(bad)
push
dec
xchg
out
xchg
and
call
and
shr
das
jns
pop
cmp
xchg
and
xor
mov
scas
pop
push
xor
cli
cli
stos
lods
jge
inc
popf
enter
icebp
xor
hlt
jmp
inc
(bad)
jmp
xchg
mov
inc
dec
mov
bound
cmp
hlt
cmp
js
mov
ror
mov
and
mov
adc
cdq
loopne
lea
call
mov
adc
aas
daa
call
in
out
mov
sbb
es
lods
das
lods
mov
xchg
sbb
push
jns
test
call
jle
scas
inc
inc
dec
cs
lods
or
(bad)
mov
ret
pop
xor
add
adc
cmp
js
xor
inc
jg
push
(bad)
dec
push
adc
jle
aad
lods
and
inc
pop
out
stos
sub
test
jg
jp
fdivr
pop
xor
loope
jle
xlat
adc
shl
mov
sar
outs
push
ins
mov
mov
cmp
(bad)
and
dec
pop
mov
pop
pop
jbe
jno
int
or
(bad)
or
xor
and
retf
push
adc
xchg
rcl
clc
in
lea
ds
mov
mov
inc
mov
movs
repz
lods
stos
ss
call
sbb
pop
push
dec
icebp
sbb
scas
fimul
(bad)
fwait
hlt
mov
mov
iretw
mov
and
cmc
add
data16
mov
dec
lods
push
add
xchg
jle
or
jecxz
xchg
retf
dec
(bad)
daa
cli
cld
jns
test
pop
fcmove
fiadd
in
and
or
out
ds
pop
out
clc
call
dec
out
xchg
fcom
sbb
adc
adc
out
clc
retf
push
dec
mov
lods
adc
push
out
jnp
movs
scas
cmp
jne
loop
cmp
scas
push
and
add
les
sub
mov
mov
lods
add
push
mov
jl
lods
aam
cdq
mov
arpl
xor
push
retf
push
sbb
sar
xlat
mov
mov
aaa
dec
(bad)
outs
xchg
iret
ds
jge
xor
dec
(bad)
jb
xchg
repz
mov
ror
xor
daa
popa
cmps
out
add
fs
push
jle
outs
jge
mov
mov
mov
ficom
movs
mov
mov
movs
xor
pop
pushf
or
int3
push
adc
xlat
dec
mov
adc
inc
cld
mov
adc
sti
dec
mov
mov
les
dec
outs
repnz
lds
es
aaa
sub
add
mov
sub
int
int
retf
and
mov
lods
jne
pusha
mov
adc
mov
sbb
mov
inc
pop
cmp
cmp
into
mov
jae
fwait
inc
scas
in
stos
movs
out
adc
jg
icebp
sub
ins
sbb
sub
les
push
add
aas
mov
dec
mov
dec
dec
(bad)
and
dec
aam
mov
add
stos
popa
pop
sbb
push
retf
inc
cwde
js
cs
jno
(bad)
je
and
cdq
jg
pusha
js
pop
mov
xchg
and
(bad)
inc
cwde
jmp
pop
pushf
mov
mov
cmc
loop
fnstsw
js
into
sub
fist
scas
imul
in
adc
repnz
test
in
test
fcomp
xor
out
je
push
jl
dec
mov
(bad)
out
ror
xor
sub
pop
push
sahf
xchg
dec
clc
(bad)
repnz
dec
mov
out
mov
loopne
das
ss
push
jecxz
dec
xchg
jb
mov
aas
in
btc
test
push
enter
or
aaa
xchg
test
dec
push
ins
daa
loope
leave
in
sbb
cmp
xchg
push
lds
dec
fistp
inc
(bad)
cmps
out
push
mov
les
mov
lds
adc
repnz
cmp
inc
pop
dec
sbb
and
pop
ja
test
retf
cmp
popf
xchg
pop
push
cmp
mov
and
inc
xchg
test
(bad)
cmp
jo
retf
inc
dec
pop
xchg
imul
ins
and
cmp
imul
in
mov
pop
ror
(bad)
ja
repnz
imul
retf
and
mov
dec
and
inc
cmp
adc
xor
in
add
fistp
test
aad
mov
pusha
push
xor
dec
xchg
push
jbe
push
sahf
fst
mov
cmp
je
repz
pop
into
out
out
scas
lods
sub
mov
push
data16
add
ins
jo
and
fs
cdq
mov
inc
mov
xchg
add
neg
fild
test
mov
loop
adc
sbb
retf
iret
dec
xchg
dec
sub
xor
and
mov
sbb
clc
je
ja
lahf
loope
sbb
inc
jmp
cld
retf
jae
mul
mov
xchg
pop
xor
jl
shr
and
ins
jg
out
mov
pop
add
sub
xchg
repnz
cmp
push
fisub
mov
loopne
aam
shl
and
int
fcom
push
push
shl
fcom
jne
cwde
mov
xor
ss
xor
jecxz
or
pop
pop
and
std
mov
std
and
and
imul
(bad)
or
or
(bad)
jnp
mov
mov
hlt
test
mov
jmp
adc
or
jns
jo
dec
mov
data16
fwait
and
mov
stos
lods
(bad)
aad
dec
mov
mov
sbb
add
std
shr
cmp
aad
fistp
adc
dec
je
pop
adc
ins
cwde
add
call
out
lahf
jmp
and
lods
int3
lahf
and
rcl
pop
out
jg
ja
iret
ficom
ja
dec
rol
xchg
inc
jo
pop
pop
leave
in
pop
movs
sar
popf
cmp
in
test
jmp
cli
leave
ja
xchg
retf
(bad)
xchg
ss
push
dec
pop
pusha
jmp
xchg
add
mov
js
mov
mov
jne
pop
jmp
in
xor
add
idiv
mov
or
mov
pop
out
xchg
cmp
xor
outs
mov
int
data16
cmp
push
xor
inc
daa
cmc
cmp
or
cmp
or
pop
sub
sub
aaa
and
pop
test
daa
fwait
push
mov
daa
or
add
out
inc
pop
xchg
jnp
sahf
repnz
inc
xor
(bad)
(bad)
lods
lea
in
sti
push
and
add
lock
cmc
mov
and
pop
ins
loopne
jae
ds
loope
jo
loope
ins
outs
stc
mov
int
push
or
aaa
push
inc
jle
cmps
xlat
dec
push
jp
adc
inc
push
movs
sub
cmp
and
and
inc
push
push
push
sub
nop
xchg
clc
out
mov
stos
and
sub
pop
fstp
stos
inc
push
sbb
stos
movs
sti
cmp
mov
adc
mov
mov
pop
ins
cmp
cmps
les
cmp
mov
fisttp
test
mov
mov
mov
dec
jge
cmp
push
(bad)
inc
loopne
xor
jb
cmp
mov
lods
fwait
aam
cmps
pop
xchg
xor
sahf
aas
add
sti
fcomp
sbb
pop
xchg
fimul
cmp
clc
xor
dec
jp
add
fs
fcom
push
test
xchg
repnz
retf
es
das
in
sti
adc
retf
sub
pop
inc
sbb
addr16
pop
in
(bad)
push
push
(bad)
cmp
out
stc
add
fld
and
mov
push
jne
mov
xchg
pop
lock
or
adc
pop
and
imul
imul
cmp
into
ffreep
jae
push
movs
xor
sub
out
out
int
xchg
mov
lods
lods
inc
repnz
enter
call
iret
sub
hlt
or
sbb
pop
sbb
xor
dec
les
jp
push
and
xchg
cmps
std
pop
push
add
mov
mov
fidiv
mov
test
mov
lock
or
mov
inc
jle
sti
loopne
jne
cs
mov
and
lock
call
xor
push
dec
std
cmp
lods
pop
test
loopne
das
pushf
xchg
mov
ins
push
out
jnp
xchg
imul
jp
stos
adc
push
and
push
jmp
dec
inc
pop
push
ror
pop
or
sti
repz
out
sbb
loope
push
xor
push
push
mov
popa
ins
sub
pop
push
cmp
jg
aas
bound
adc
mov
dec
loopne
xchg
lahf
sbb
mov
mov
add
cmc
or
cli
scas
movs
xchg
jmp
xor
pop
pop
xchg
imul
dec
inc
mov
push
jecxz
inc
and
mov
ret
stos
push
inc
cmp
out
xchg
(bad)
mov
ror
fcomp
int3
daa
dec
scas
jg
mov
sbb
in
loope
shl
imul
sub
sbb
ins
xchg
leave
stc
cmp
mov
dec
aad
sbb
(bad)
retf
fist
sar
jmp
inc
push
adc
or
aaa
dec
leave
hlt
rcr
mov
xchg
imul
ret
mov
dec
fs
push
mov
xor
xchg
add
pop
push
push
push
ins
stos
pop
sub
and
data16
xchg
clc
stos
bound
repz
push
out
mov
ret
retf
pop
popa
mov
hlt
mov
push
or
mov
pop
xchg
ja
imul
pop
retf
je
femms
pop
mov
fbld
imul
xchg
js
add
fsubr
icebp
aas
xor
aad
add
mov
jb
icebp
and
es
mov
push
movs
xor
cmp
pop
mov
(bad)
mov
ds
movs
mul
pusha
aam
sub
sbb
or
fsub
jmp
sar
sbb
addr16
push
mov
dec
(bad)
fcomip
fist
mov
and
out
push
mov
sub
repnz
fnstsw
daa
bound
aad
mov
dec
mov
or
and
lods
fs
jg
leave
sti
and
jbe
mov
inc
xlat
sbb
outs
out
cli
ja
mov
out
movs
call
lods
mov
sub
lds
stc
(bad)
inc
rcl
test
xchg
data16
(bad)
(bad)
fcom
push
das
ins
adc
(bad)
out
inc
ret
adc
mov
lods
in
xchg
cmp
cli
pop
inc
sub
add
fisub
ror
add
shl
call
into
adc
jns
or
inc
fwait
adc
cli
fst
repz
mov
leave
pop
std
sbb
mov
sar
scas
mov
xor
stos
fiadd
js
test
or
add
or
ret
xchg
inc
ret
jo
into
(bad)
lahf
mov
mov
add
add
icebp
int3
mov
xchg
pop
mov
lahf
mov
out
inc
imul
sub
movs
(bad)
push
sbb
sbb
lds
scas
cld
cmc
adc
xor
out
pushf
jge
jno
sahf
push
cmps
int3
fldenv
in
add
cmp
mov
icebp
shl
loopne
jp
mov
std
(bad)
mov
hlt
jae
dec
pop
shr
test
pop
sub
ins
aaa
adc
jae
mov
xchg
jbe
or
cs
adc
in
push
int3
loope
out
cmp
sbb
not
pop
mov
retf
push
nop
clc
xor
movs
out
dec
mov
test
scas
push
xlat
add
js
fnsave
mov
sub
inc
jmp
cdq
jecxz
and
leave
mov
dec
xor
and
ror
pop
jbe
mov
pop
ret
jnp
jns
sub
and
dec
fsub
sbb
jb
push
fs
or
mov
xchg
aad
sub
jnp
push
push
push
test
dec
int
or
cs
mov
jne
outs
push
pmaddwd
or
rcr
ins
add
sbb
adc
loopne
ret
retf
xchg
jge
sbb
mov
dec
stos
inc
sub
xchg
stos
scas
fdivr
or
pop
or
mov
dec
push
inc
xchg
call
pop
inc
or
arpl
or
es
(bad)
cli
sub
push
hlt
je
mov
jge
lods
mov
or
stos
popa
add
mov
add
mov
and
out
push
in
mov
mov
and
mov
sahf
pop
jbe
sub
fnsave
out
mov
xchg
xchg
inc
and
push
xor
jae
xchg
dec
sub
addr16
fstp
mov
jnp
(bad)
and
std
cmp
sbb
scas
test
jge
add
dec
cdq
mov
sahf
xor
pop
test
fndisi(8087
aas
movs
cld
js
(bad)
push
dec
or
and
js
jg
movs
push
(bad)
mov
jg
ins
in
add
out
cdq
mov
aam
je
inc
inc
xor
test
pop
les
nop
fiadd
test
into
imul
add
mov
fcomi
pop
pop
test
pushf
aad
lods
clc
pop
push
push
mov
xchg
enter
mov
xor
(bad)
popf
dec
lock
rol
push
fist
sbb
hlt
daa
call
inc
jno
and
and
pop
movs
add
xor
push
xor
sbb
fnstcw
sub
or
jge
stos
fst
sbb
mov
fcomp
jo
out
jo
jb
sbb
jecxz
dec
jb
loopne
jp
aad
fisub
mov
sub
les
ret
stos
sbb
pop
bound
sbb
jmp
push
add
idiv
test
cmps
(bad)
stos
sub
in
push
jne
xor
adc
das
xchg
inc
in
js
ins
pop
enter
lahf
adc
loop
pop
fstp
mov
cdq
ret
xor
inc
pop
xor
pop
(bad)
jg
sbb
jb
pop
sbb
ins
and
test
jbe
or
stos
or
ficomp
adc
rcr
and
mov
es
aas
(bad)
and
add
mov
rcr
mov
pop
jmp
ds
xor
adc
jmp
fwait
pop
jl
daa
das
pop
push
mov
je
test
adc
ins
mov
cmp
call
dec
movs
frstor
test
outs
pushf
(bad)
mov
xchg
push
push
sbb
pop
test
push
enter
push
fwait
outs
movs
imul
jno
mov
into
sti
sbb
cdq
xchg
leave
test
or
jns
test
sbb
mov
mov
pop
xor
enter
aaa
mov
sahf
mov
mov
mov
xchg
movs
dec
or
addr16
repz
pop
xchg
adc
sub
fcom
mov
or
pop
mov
icebp
ret
(bad)
sahf
test
shl
jbe
jle
fs
aaa
dec
pusha
jae
and
or
mov
and
and
cli
and
push
jo
bts
inc
push
mov
sub
(bad)
inc
hlt
aaa
pop
lea
add
xor
loopne
lock
leave
dec
cmp
in
jle
pop
sub
stos
lea
aad
sahf
mov
aaa
cld
(bad)
fst
push
cmp
push
jns
lahf
(bad)
push
or
sahf
add
popa
shl
push
aas
cli
cs
out
jo
inc
adc
scas
popa
mov
xchg
pop
adc
pop
and
inc
xor
sbb
mov
stos
in
jl
(bad)
or
clc
pop
or
mov
dec
sahf
shl
hlt
addr16
inc
shr
push
jbe
pop
mov
push
sbb
dec
out
inc
inc
cmp
repz
fidivr
sub
data16
cmp
or
mov
inc
(bad)
lods
jge
xor
popf
xchg
xchg
inc
mov
pop
out
pop
icebp
and
inc
adc
mov
jo
dec
repz
gs
pop
xor
and
out
rdmsr
pop
lahf
mov
sar
(bad)
sub
lods
sbb
popf
add
int3
stc
scas
add
movs
sub
xchg
or
dec
dec
loop
outs
cwde
pop
test
pop
shl
xor
xchg
repnz
cmps
mov
fisttp
or
adc
cmp
cmp
pusha
ins
or
repz
sub
or
rcl
stc
inc
pop
mov
fs
inc
xchg
ja
mov
popa
mov
mov
ja
fs
out
shl
fdivr
adc
cld
loope
into
or
cmps
push
sar
sub
je
adc
call
xchg
loopne
aam
sbb
jne
pop
fcomp
jle
in
popf
pop
jg
mul
dec
cmp
or
adc
dec
add
adc
test
jl
addr16
stc
cs
push
aaa
cli
ret
lods
clc
inc
sub
pop
sub
out
inc
js
(bad)
cdq
adc
xchg
ja
nop
add
shl
mov
pushf
shl
test
inc
or
sbb
xchg
xor
sub
fdiv
pop
out
mov
test
jbe
sbb
leave
in
lds
xor
loopne
fcomi
mov
inc
jl
arpl
fist
push
mov
enter
retf
les
lods
xor
movs
leave
cmp
lds
outs
add
out
sub
xor
pop
mov
or
push
in
push
mov
lahf
xor
js
enter
retf
xlat
ja
adc
fucomi
in
cmps
loopne
cmp
dec
ins
retf
dec
cmps
xlat
test
jae
lea
inc
call
cs
jno
ficom
cmps
dec
sub
adc
dec
pop
bnd
sbb
lahf
mov
add
jge
pop
jmp
push
sbb
sbb
lea
sbb
ja
(bad)
es
stos
aaa
pushf
add
xlat
imul
or
aas
retf
jb
pop
out
inc
xchg
jo
retf
and
sbb
pop
sub
jnp
test
arpl
cmp
clts
int
imul
stos
inc
mov
add
mov
imul
push
xor
xor
aas
xor
jbe
cmp
out
repnz
jnp
pop
mov
mov
call
jns
enter
stos
inc
mov
cmp
jg
icebp
jmp
jno
ins
cmp
pop
pop
pop
cmp
jnp
sbb
push
inc
push
push
sub
pop
gs
jb
pminub
cdq
into
jmp
pushw
add
mov
mov
add
or
add
bound
mov
sub
dec
cmp
jne
lods
test
pop
sub
(bad)
arpl
adc
call
popf
xchg
sbb
adc
mov
pop
lea
iret
gs
jne
les
loopne
and
mov
mov
jbe
es
jle
ds
xchg
mov
ins
cdq
mov
and
sub
push
dec
hlt
lahf
cld
mov
or
mov
mov
push
push
test
xor
xor
add
mov
int
or
out
(bad)
mov
sbb
add
xor
in
mov
add
xor
xlat
xchg
dec
mov
mov
mov
div
test
loope
shr
jge
jae
pop
mov
pop
in
imul
iret
clc
xor
xchg
call
cmps
inc
cmp
jno
push
aas
stos
or
or
sbb
adc
cmp
jecxz
shl
popf
jne
je
sub
lea
mov
aam
or
imul
iret
sbb
dec
adc
xor
sbb
pop
cmp
out
sar
pop
push
and
lods
dec
shr
rol
lahf
outs
pop
int3
cmp
push
stos
in
sbb
repnz
in
xlat
adc
cmp
jmp
out
int
push
xlat
add
xchg
xor
and
rcr
add
imul
lea
adc
mov
mov
lahf
aaa
adc
jg
xchg
push
in
aad
pusha
pusha
add
dec
stc
scas
outs
ret
jne
sbb
loop
cmp
hlt
xchg
fstp
jle
repz
inc
xchg
into
push
cmc
cdq
adc
hlt
addr16
adc
div
ret
movs
gs
push
adc
in
jecxz
dec
sbb
mov
(bad)
enter
cmp
xor
out
add
imul
(bad)
(bad)
fimul
loope
imul
or
adc
sbb
imul
or
mov
or
arpl
frstor
sub
jb
pusha
mov
test
sti
or
dec
push
leave
shr
enter
pusha
in
adc
mov
sbb
ret
adc
jmp
neg
push
int
cmp
mov
lods
dec
xchg
push
lods
xchg
out
add
fild
and
data16
out
or
fwait
pusha
mov
mov
jnp
aam
jmp
test
cmps
pop
push
aas
inc
pop
test
add
jl
xor
aaa
hlt
mov
shl
xor
xor
jg
lods
pop
test
xor
pop
int3
jg
xor
dec
and
shr
push
out
mov
add
push
jecxz
mov
(bad)
mov
xchg
sbb
mov
stc
mov
jmp
aad
fldenv
xchg
dec
cdq
sbb
inc
xor
xor
or
and
out
das
or
imul
mov
jp
dec
enter
xor
movs
ficom
aam
jl
fwait
xchg
arpl
mov
rcl
dec
mov
(bad)
lods
or
arpl
sbb
out
movs
lods
jno
imul
or
or
add
jb
mov
lds
push
popa
pop
and
outs
movs
or
std
pop
jmp
cmp
jo
xchg
(bad)
hlt
repz
adc
or
(bad)
int
lods
inc
pop
sub
icebp
add
xchg
sub
or
lods
fidivr
inc
outs
xlat
adc
pop
out
call
jecxz
clc
push
push
pop
test
cmp
adc
xchg
icebp
jmp
jl
xchg
push
cmc
clc
(bad)
xor
or
mov
sub
and
movs
ins
or
scas
test
rol
fadd
out
mov
mov
add
sbb
xchg
dec
sbb
(bad)
mov
(bad)
pop
sub
mov
jp
sub
jno
repz
cmp
and
jl
gs
jno
and
jle
sar
add
ficomp
xor
out
inc
hlt
mov
lds
or
xor
ja
sbb
into
nop
adc
mov
and
pop
or
pop
add
(bad)
fsub
int3
inc
call
cs
and
push
mov
cmp
push
cdq
ror
xor
xor
xlat
mov
mov
cmps
sub
ja
rol
rcr
ret
mov
push
and
sub
add
push
test
mov
jns
mov
adc
popa
sti
retf
pushf
inc
lds
pop
ins
aas
shr
mov
stc
repz
jmp
xor
xchg
aad
sbb
jb
lods
add
mov
xchg
xchg
movs
mov
push
shl
cwde
xor
sar
ror
sbb
xchg
nop
dec
inc
(bad)
add
mov
jg
adc
fld
lock
repnz
sbb
ret
(bad)
retf
out
pusha
push
xor
outs
push
test
enter
mov
mov
bound
pop
sbb
(bad)
inc
das
mov
daa
int3
cmc
cmp
sub
push
iret
adc
mov
or
call
jecxz
icebp
repnz
and
ret
repz
push
std
xchg
call
mov
or
push
sub
or
sahf
ins
out
adc
out
idiv
call
cmp
repnz
cmps
out
in
in
sbb
ret
ret
mov
sub
lahf
push
mov
in
outs
leave
adc
sbb
out
jecxz
pusha
sbb
pusha
mov
jl
xchg
jae
mov
and
sbb
add
test
jl
ror
mov
pop
es
arpl
ja
stos
shl
xor
out
fld
nop
mov
enter
xor
hlt
add
(bad)
into
arpl
add
mov
mov
loope
dec
add
pop
xlat
xor
xchg
icebp
mov
sbb
add
mov
sbb
push
dec
jge
sbb
lahf
push
mov
pop
push
nop
inc
xchg
push
imul
je
cmp
pushf
repz
xchg
pop
jmp
push
cmp
sbb
cmp
outs
mov
push
add
loope
mov
imul
sub
stos
mov
inc
inc
adc
sar
(bad)
hlt
push
std
add
add
sbb
popa
and
call
jl
and
xchg
jne
jb
push
popa
xchg
jge
dec
mov
cmp
out
into
sub
mov
and
shl
cs
jl
(bad)
into
cmp
cs
mov
iret
cmps
dec
mov
mov
scas
(bad)
fcmovnb
fwait
sub
xchg
retf
(bad)
ret
xchg
sub
jne
stc
loopne
cld
cmp
sbb
jae
pop
cmp
adc
(bad)
int
pusha
add
mov
xor
in
mov
cmp
daa
icebp
mov
push
jne
in
xchg
int
xor
adc
pop
pop
mov
vaddsubps
ja
cwde
sbb
mov
in
in
pop
(bad)
push
mov
sti
fld
in
test
imul
sub
cmp
into
shl
and
xor
push
inc
mov
aad
lods
fucomi
or
xchg
je
pop
mov
or
fcmovu
mov
movs
ins
xor
jae
gs
cli
fisubr
add
leave
sbb
mov
dec
mov
xor
clc
xor
inc
add
out
push
outs
inc
xchg
int3
mov
jno
push
adc
in
stc
sbb
sub
inc
push
mov
lds
mov
or
cmp
cdq
sbb
mov
imul
stos
ret
scas
sbb
out
mov
mov
inc
mov
mov
fild
stos
adc
xor
jmp
sub
push
movs
add
(bad)
out
add
xor
push
outs
or
fld
gs
cmc
lahf
add
xor
add
cmp
pusha
rcl
in
xor
and
addr16
push
cmp
add
cmps
mov
ins
shl
ficom
xchg
mov
sub
not
push
repz
(bad)
leave
jmp
dec
fwait
mov
add
inc
addr16
stos
movs
jno
imul
gs
xchg
push
stc
clc
test
mov
push
rcl
mov
xchg
das
ret
neg
lea
xlat
hlt
loopne
xor
cmp
mov
dec
cmp
xchg
jmp
pushf
bound
repz
data16
loopne
nop
stos
imul
(bad)
sub
mov
push
mov
xor
jle
push
mov
xor
fcmovnb
enter
scas
(bad)
jp
pop
inc
xchg
fsubr
sub
inc
inc
repz
sar
sti
cmp
out
add
dec
push
ret
push
(bad)
bound
fistp
outs
(bad)
hlt
mov
enter
das
push
mov
push
fisttp
push
sub
dec
gs
xchg
hlt
(bad)
cmps
pop
or
xchg
iret
xchg
cmp
sbb
push
adc
fiadd
ins
out
xor
cld
add
pop
lea
outs
iret
iret
xchg
shl
mov
fstp
adc
shr
and
push
(bad)
pop
fidivr
ss
pushf
xor
shufps
mov
test
or
adc
mov
scas
nop
xchg
arpl
std
fwait
ins
mov
fild
mov
adc
pop
inc
push
jle
xchg
lock
in
xchg
(bad)
sub
into
pop
fld
xchg
cmp
fisttp
fisttp
cmps
shl
mov
test
retf
fabs
mov
popa
ins
cmps
fs
pushf
sahf
jle
cmp
push
jge
shr
inc
xor
add
nop
shl
push
popf
xchg
nop
add
inc
ins
pop
(bad)
dec
inc
out
or
cmp
cmp
pushf
mov
cld
add
mov
arpl
pop
fistp
fcom
js
aam
scas
in
dec
xchg
scas
iret
xor
stos
mov
sub
adc
jno
sbb
adc
inc
fs
xchg
adc
popa
test
cdq
inc
mov
ja
sub
xor
dec
imul
and
mov
cmc
lds
cmp
mov
jno
xchg
inc
jle
add
mov
cdq
cmc
jle
call
retf
fadd
movs
dec
pop
leave
inc
push
pushw
inc
ds
in
cmp
scas
aam
lea
test
pop
imul
retf
and
div
push
dec
push
(bad)
les
test
movs
dec
(bad)
jae
pop
add
mov
es
pop
pop
adc
sub
int3
inc
add
fisub
jno
push
push
add
scas
clc
mov
movs
(bad)
cmp
pop
mov
scas
sub
xchg
pop
and
dec
or
mov
ror
dec
sar
fimul
push
push
pusha
or
shr
neg
xor
test
dec
movs
movntps
je
push
sub
add
mov
sar
int
inc
imul
push
push
in
push
inc
out
cmc
xchg
and
int3
mov
dec
push
xor
std
pushf
push
pop
push
sbb
call
dec
in
lods
push
ud0
and
dec
ss
adc
fisttp
sbb
mov
lock
inc
arpl
mov
test
dec
or
in
push
inc
adc
and
fmul
nop
out
cmc
mov
jne
xchg
repz
pop
(bad)
call
enter
dec
lahf
and
out
iret
clc
push
dec
pop
mov
ror
(bad)
xchg
or
xor
adc
adc
imul
jle
add
ja
sub
pushf
(bad)
and
push
fidiv
std
sbb
sub
sbb
and
mov
inc
sbb
fdivp
xor
(bad)
(bad)
cwde
out
mov
jge
iret
fstp
xchg
xchg
(bad)
jns
outs
arpl
scas
cmp
shl
rcr
xchg
test
test
shr
fs
mov
cmp
neg
pop
(bad)
adc
xor
sbb
inc
sbb
sbb
jp
mov
cmps
sbb
mov
xor
out
dec
fstp
adc
mov
mov
mov
popa
mov
dec
fcom
sbb
push
sbb
(bad)
in
cmps
mov
mov
ds
jecxz
leave
pop
mov
loope
sbb
mov
and
shl
xor
movs
outs
test
lahf
add
mov
mov
fbld
xor
aad
push
sahf
push
mov
cmp
sbb
ss
outs
sbb
add
pop
push
rcl
mov
pop
mov
cmc
(bad)
mov
hlt
aam
push
test
pop
pop
ret
add
or
es
add
iret
lods
cwde
out
shl
jns
not
cmp
xor
movs
test
pop
(bad)
jmp
in
inc
xchg
lea
push
or
mov
or
jno
je
pushf
sbb
cwde
aam
dec
div
out
ins
and
fwait
pushf
pop
out
inc
sahf
enter
push
cmps
es
inc
jnp
fistp
mov
xor
jns
in
jg
sub
mov
mov
inc
jmp
cmp
pop
leave
repz
addr16
les
mov
ja
jmp
mov
xchg
inc
mov
jae
mov
pop
xchg
je
and
bound
add
or
in
mov
push
xor
lods
add
cmp
sbb
pop
(bad)
dec
xchg
and
adc
scas
popa
cld
test
movs
call
add
or
sub
xor
test
xor
out
push
xchg
pop
das
fistp
rcr
dec
call
dec
loopne
call
retf
push
pop
mov
mov
and
pop
repnz
jmp
dec
mov
jnp
xchg
out
xchg
ret
cmc
jle
imul
lahf
outs
int3
hlt
and
ins
mov
cs
ret
(bad)
shl
mov
jg
add
ins
je
test
xor
sbb
jl
add
dec
sub
ins
mov
inc
jbe
out
mov
cld
add
fmul
mov
cs
jge
jno
push
or
cmp
mov
and
(bad)
xchg
data16
push
addr16
sti
adc
mov
retf
xchg
cmp
pop
jmp
cmp
addr16
sub
bound
add
sub
pop
push
push
jp
pop
mov
stos
and
vpcmpeqw
jne
cmp
ds
retf
and
aaa
aaa
stos
or
push
jmp
adc
out
mov
test
lds
mov
fld
add
and
movs
movs
or
cmc
add
xchg
cld
nop
in
(bad)
jecxz
out
fcmovnu
test
aam
je
mov
mov
mov
sbb
xchg
mov
dec
xchg
mov
ror
jae
add
faddp
xchg
aas
push
outs
ins
retf
imul
call
dec
pop
mov
out
push
inc
mov
or
mov
jle
sub
enter
cmp
dec
es
fs
sbb
or
mov
pushf
inc
xchg
inc
jp
jmp
(bad)
jbe
xchg
mov
pop
movs
nop
stc
cli
mov
dec
sar
xchg
sbb
lods
dec
xor
push
in
stos
sti
pop
enter
aam
or
xchg
and
push
fwait
outs
fild
dec
cmp
inc
fxam
xchg
pop
sub
out
mov
xor
sub
out
jae
imul
imul
into
clc
jbe
pop
xchg
jns
not
dec
jbe
sahf
pop
(bad)
in
in
and
push
sub
shr
pop
mov
dec
push
and
add
mov
push
fistp
mov
cmp
push
cmp
leave
push
js
loop
dec
outs
cmp
das
(bad)
pop
aaa
popa
jle
cli
jecxz
jecxz
dec
ins
ins
stc
cdq
dec
xor
scas
iret
adc
cmp
adc
and
lea
fimul
pop
out
jmp
or
push
push
pop
mov
push
scas
scas
test
ret
mov
mov
fwait
push
adc
jbe
push
pop
movs
pop
int
mov
xor
xlat
mov
mov
loop
lods
adc
jmp
je
retf
gs
mov
popf
xchg
cmc
repz
or
mov
fisttp
jle
or
mov
outs
pop
pop
int3
int3
mov
cwde
mov
dec
fstp
or
adc
push
jns
add
pop
jno
cmp
movs
dec
pop
mov
call
in
xchg
jae
inc
ret
cmp
sub
out
ja
mov
pop
je
mov
enter
mov
sbb
test
mov
jbe
cmp
mov
jmp
in
fnstenv
mov
dec
sbb
cdq
fdiv
or
sub
and
mov
cmc
or
addr16
popa
adc
retf
mov
and
pusha
outs
clc
push
push
sbb
inc
aam
cmc
dec
or
adc
neg
icebp
mov
adc
lods
pop
(bad)
in
popf
sar
pop
mov
fs
push
(bad)
sub
ret
mov
popf
sub
sub
sub
bound
bound
or
inc
jg
int3
outs
call
cs
pop
add
outs
pop
scas
sahf
es
les
mov
add
fimul
rcr
cdq
mov
jne
lods
adc
enter
ja
in
mov
loope
push
lea
sbb
dec
mov
cli
push
gs
and
inc
pop
push
stc
ss
div
arpl
data16
fwait
sbb
jle
lahf
fcmovnu
add
stos
xchg
and
loope
test
xchg
je
pusha
call
enter
pop
out
xchg
xchg
and
dec
cmc
add
pop
mov
push
add
(bad)
fadd
ficomp
jmp
push
mov
cmp
xchg
push
out
ins
inc
sub
ror
int
sar
out
clc
mov
lea
neg
adc
and
sbb
pop
pop
push
jle
(bad)
fstp
jns
pushf
push
mov
dec
(bad)
pop
jmp
mov
mov
ficomp
or
push
push
cmp
jne
cmp
cmp
mov
rol
cmps
mov
inc
cmp
sbb
mov
dec
add
es
ins
popf
outs
std
fs
mov
dec
test
inc
les
or
jp
push
lock
mov
enter
xchg
xchg
and
inc
js
push
push
pop
fistp
sbb
test
mov
repnz
sbb
mov
or
idiv
mov
push
jne
outs
adc
xor
sub
aaa
sbb
push
lock
fs
je
xchg
push
push
cmp
mov
popf
jb
inc
sbb
das
inc
scas
jns
repz
mov
push
ret
pop
cmp
lds
adc
mov
fmul
push
jg
(bad)
push
in
and
fwait
jnp
(bad)
push
xchg
add
dec
lods
push
mov
xor
mov
fld
aas
adc
int3
dec
or
ja
xchg
mov
or
popa
mov
loop
mov
mov
cmp
and
(bad)
push
sbb
dec
lss
mov
call
adc
push
jne
lods
and
gs
cld
mov
jge
jae
out
dec
sub
les
xchg
mov
mov
pop
retf
cmps
sbb
push
(bad)
mov
retf
jns
int
cmps
stos
fdivrp
(bad)
loope
push
call
or
xor
or
cmp
add
push
mov
loop
gs
dec
and
and
mov
cs
sahf
div
and
xor
and
jae
call
and
(bad)
sub
xchg
and
inc
call
sbb
xchg
pusha
xor
inc
and
add
rol
pop
push
nop
(bad)
jo
xchg
(bad)
cmp
jnp
fwait
ins
ret
test
cmp
jmp
xor
aas
xchg
push
cmp
lahf
(bad)
mov
xor
jl
test
ficom
(bad)
dec
push
mov
sti
inc
enter
jbe
sub
test
push
dec
ins
or
call
shl
cs
inc
fmul
shl
or
psubb
sbb
mov
jp
and
or
fwait
mov
pushf
sub
ins
push
add
movs
nop
fwait
dec
jmp
push
mov
or
popf
ror
or
(bad)
cdq
xor
sti
pop
test
icebp
mov
aaa
leave
(bad)
ficom
dec
xchg
addr16
ss
xchg
out
push
scas
outs
xlat
clc
lahf
test
out
mov
cmp
scas
sub
inc
push
jg
ds
das
hlt
pop
stos
popf
out
xor
mov
pop
ror
mov
sbb
push
imul
hlt
pop
fild
jnp
ds
sahf
xchg
xchg
out
sub
bound
mov
mov
jl
movs
scas
push
fiadd
adc
into
add
cdq
mov
jae
imul
out
or
dec
(bad)
dec
mov
or
mov
(bad)
jle
jmp
and
jb
pop
pop
xchg
jno
push
mov
loop
push
pop
pop
es
sbb
ret
dec
call
sub
js
or
inc
xchg
pop
dec
das
test
in
call
pop
nop
jo
and
push
out
push
mov
pop
push
and
cmp
dec
outs
add
gs
cmc
mov
pandn
mov
mov
in
mov
stos
ins
bound
cli
xchg
mov
gs
hlt
aam
cmc
xchg
and
aaa
sbb
je
jne
mov
pop
aas
cmp
test
adc
dec
addr16
and
and
and
xor
jp
jns
fcom
loopne
add
or
retf
pop
sub
outs
push
xor
inc
mov
sbb
inc
inc
mov
push
sar
pop
mov
shr
or
pop
repz
aad
sub
sbb
popf
push
push
sahf
and
jecxz
repz
fiadd
xchg
cmc
or
sahf
mov
or
mov
fstp
fstp
repz
xchg
sbb
xchg
sbb
pause
ret
jns
or
push
jae
xchg
stos
xchg
push
test
adc
in
inc
mov
test
mov
rcr
push
into
mov
pop
xchg
cmp
mov
call
pusha
test
add
ins
stos
add
push
and
pop
pop
repz
adc
js
push
iret
xchg
inc
scas
inc
loope
ins
xchg
fisubr
mov
xor
rcr
mov
sbb
dec
aas
retf
cmps
inc
lods
lahf
fist
imul
push
or
mov
pop
inc
push
in
add
mov
xchg
fs
push
imul
loopne
mov
push
retf
jo
(bad)
into
xor
enter
in
je
mov
mov
mov
push
sahf
loopne
cmp
add
int
xchg
dec
jnp
xlat
xor
(bad)
pop
jp
mov
fmul
in
das
jne
cld
add
jns
pop
pop
cwde
(bad)
fld
xchg
test
cmp
xor
inc
xchg
mov
in
xchg
ss
jns
leave
fcmovb
mov
or
xor
sub
mov
cs
adc
and
aas
out
les
out
ret
test
fld
pop
and
push
or
pop
loope
jb
popf
cmps
inc
out
push
xchg
cmp
adc
xchg
(bad)
fucomp
jmp
in
rol
push
sbb
mov
jle
fiadd
jle
adc
push
sbb
jbe
or
pop
iret
dec
jp
cmp
idiv
in
icebp
(bad)
sub
xor
pop
sbb
cmps
call
pushw
shl
and
pop
into
push
aaa
scas
repnz
test
add
bound
xlat
aam
xor
xchg
imul
pusha
mov
add
fucomip
or
test
dec
pusha
push
mov
cmc
push
cdq
leave
fdivr
sub
(bad)
pop
(bad)
fld
sbb
xchg
mov
aam
aad
mov
xor
or
out
imul
fdivr
cld
stos
mov
(bad)
mov
outs
jmp
dec
dec
jge
cmp
mov
aaa
add
sub
ret
ret
outs
lea
iret
iret
jnp
pop
imul
dec
ret
sbb
pop
cli
push
jmp
scas
sbb
mov
sar
stos
sub
and
sub
(bad)
stos
rol
mov
add
pop
xchg
push
dec
ss
push
jno
or
push
jno
jp
cmps
cmp
inc
mov
(bad)
in
jnp
ja
adc
mov
clc
pop
add
mov
cs
dec
scas
add
outs
dec
(bad)
xchg
pop
jmp
out
int3
js
fisttp
imul
dec
ss
lods
adc
cmp
xchg
push
cdq
fidivr
arpl
adc
jg
mov
into
xlat
dec
test
jmp
inc
mov
int3
lods
mov
inc
ins
push
pop
das
pushf
push
xor
push
mov
fs
xor
loopne
sbb
ficomp
ret
inc
rcl
das
neg
push
out
in
(bad)
fsubr
sub
int
call
xchg
dec
aad
ins
mov
push
sti
sbb
sbb
push
add
test
cs
test
fbstp
sbb
sbb
ins
or
xchg
dec
popw
xchg
mov
popf
loopne
addr16
out
outs
adc
adc
adc
adc
sbb
mov
es
xchg
pop
push
loop
inc
shl
repz
out
and
dec
mov
fs
push
js
mov
std
push
jmp
cli
push
retf
inc
or
bound
not
lahf
pop
mov
out
sbb
gs
and
psllq
out
and
push
fwait
or
or
push
mov
adc
test
call
movs
mov
sbb
aad
cld
sbb
push
ss
loop
loop
(bad)
(bad)
mov
gs
je
mov
mov
std
std
add
dec
add
and
mov
pushf
push
jbe
adc
(bad)
mov
dec
pop
into
dec
fwait
outs
xlat
mov
sub
cmc
std
push
(bad)
and
xchg
xchg
sbb
mov
push
xor
inc
fcomp
pop
and
mov
and
cmp
int
daa
aaa
test
jo
(bad)
cmp
scas
add
inc
ss
mov
js
cmp
lods
or
out
mov
xor
test
fwait
repnz
pop
cmp
adc
mov
lock
inc
jp
add
fnstenv
mov
fcomp
pushf
aam
and
add
pop
aad
popa
rcl
xor
test
xchg
cdq
pop
jnp
or
not
xchg
or
sbb
xchg
jl
add
xor
xchg
jo
nop
movs
lds
push
adc
dec
dec
js
rcr
jge
sub
fidiv
movs
(bad)
outs
aam
xchg
lock
mov
add
dec
outs
mov
add
jl
xor
mov
xchg
test
into
xchg
dec
ret
adc
adc
fst
jmp
push
iret
les
and
jecxz
pusha
test
fst
mov
leave
mov
push
pushf
or
aad
sti
pop
loop
(bad)
jmp
je
clc
cwde
push
sbb
and
mov
cmp
jae
retf
jg
push
inc
es
cmp
cmp
push
outs
fcmovnb
or
pop
js
mov
stc
je
jmp
pushf
in
pop
lock
pop
(bad)
mov
jb
repnz
das
stos
dec
adc
imul
push
dec
les
ja
cs
inc
mov
std
and
jne
loop
repz
fimul
in
mov
xchg
mov
sub
jg
pop
sub
mov
jg
js
fucom
in
mov
enter
cmp
ror
add
aas
sbb
cs
mov
push
pop
cmps
mov
add
jae
inc
sbb
mov
in
mov
adc
cwde
fwait
ds
jbe
push
clc
pop
in
ins
cli
out
js
mov
xchg
fisubr
movs
jle
out
aas
xchg
inc
fldenv
retf
cwde
data16
(bad)
push
xchg
xlat
xlat
push
idiv
jge
xchg
ins
push
(bad)
(bad)
and
test
dec
xchg
dec
mov
xchg
cmp
mov
mov
dec
cmc
retf
cmp
cs
and
dec
mov
push
mov
dec
ret
xchg
into
ficom
imul
cmp
jne
ss
add
xor
pop
pop
dec
data16
ja
jle
jno
hlt
add
pop
test
push
mov
jmp
adc
shl
loop
mov
scas
pushf
adc
xchg
inc
cwde
ret
cdq
push
mov
mov
imul
add
xor
xor
sub
sbb
xchg
aas
sbb
test
cmp
xor
mov
lahf
mov
addr16
imul
(bad)
sti
push
xor
xchg
sbb
mov
push
push
test
inc
int
test
push
xor
es
jmp
rcl
jne
cs
fsub
jae
xchg
lods
xchg
dec
push
cmp
fbld
pop
mov
lods
stos
mov
and
xchg
and
pop
inc
call
mov
mov
int
adc
sbb
sti
push
xor
sahf
or
frstor
(bad)
push
scas
call
pop
jnp
dec
push
pusha
push
mov
xor
gs
adc
imul
mov
movs
sub
push
mov
aas
pop
movs
ror
ficom
rcl
imul
sbb
popa
in
call
mov
sbb
scas
fcom
sbb
bound
pop
into
into
push
(bad)
mov
push
push
imul
dec
add
xchg
inc
push
add
sbb
xlat
retf
xchg
add
mov
pop
aam
fdivr
in
push
rcl
cmps
sub
(bad)
je
jge
int
pop
xchg
pop
bound
test
cmps
pop
cs
sti
(bad)
daa
pop
jno
mov
add
retf
jle
sub
(bad)
repnz
mul
fdivr
xchg
ins
ja
xchg
cmp
dec
push
inc
rcr
shl
pop
aam
add
jae
pop
push
call
(bad)
jo
mov
xor
(bad)
enter
sub
sbb
add
sub
adc
push
mov
int3
enter
xchg
int3
leave
std
mov
bnd
pop
dec
xlat
addr16
cmp
out
xchg
je
sbb
into
xchg
inc
leave
push
icebp
sbb
push
mov
cmp
aam
out
js
je
and
xadd
pop
mov
arpl
pop
push
mov
sbb
pop
and
stos
cmp
cmp
fldenv
and
and
xor
mov
sbb
fld
jo
fs
sub
addr16
inc
mov
in
adc
adc
pop
or
lock
test
adc
scas
xchg
addr16
test
jo
lock
cmc
lods
mov
xchg
xor
mov
test
push
test
repz
imul
push
pop
lock
shl
push
mov
push
inc
push
mov
jnp
iret
push
pop
retf
pushf
pop
cmp
aas
jl
loop
fcmove
or
mov
and
stos
adc
lahf
imul
sub
mov
inc
jge
(bad)
in
out
in
fidivr
xor
mov
sbb
repnz
test
(bad)
mov
mov
pop
xchg
mov
mov
mov
xchg
into
xor
dec
adc
aas
mov
in
lock
adc
rcr
fimul
jmp
mov
pusha
clc
xchg
fwait
sub
cwde
xor
in
lods
jl
adc
out
xchg
retf
cmp
push
cs
sti
fwait
adc
out
ss
dec
out
push
mov
fbstp
loop
inc
in
mov
xchg
pop
std
pop
sub
jo
xchg
mov
push
or
mov
call
aaa
shl
jge
bound
cmp
retf
sub
adc
xchg
fcmovne
loope
jno
fldenv
xchg
or
cs
mov
inc
ins
jle
dec
sub
outs
adc
xchg
mov
aas
or
mov
mov
lods
xchg
xchg
jle
fld
jp
lods
sbb
mov
out
adc
test
sub
cmp
outs
jmp
arpl
push
sahf
pop
inc
jecxz
popf
adc
fdivp
mov
repnz
retf
outs
test
mov
push
lea
cmp
ins
hlt
je
xchg
or
pop
push
inc
pop
je
loopne
mov
imul
xor
mul
xchg
leave
out
xor
retf
xchg
scas
imul
movntps
push
lea
aaa
les
imul
xchg
icebp
mov
xchg
pop
sti
stos
xor
inc
fnstsw
and
aad
in
mov
xchg
repnz
sub
and
outs
fadd
xchg
sbb
mov
fcomp
jns
dec
add
aaa
out
dec
icebp
or
sub
lea
mov
add
pusha
or
and
std
mov
fwait
hlt
cli
in
adc
xor
and
cld
sbb
dec
push
jne
xchg
mov
aad
retf
xor
repz
xor
or
(bad)
out
imul
mov
dec
pop
std
pop
dec
add
in
(bad)
test
iret
pushf
cdq
std
jg
stos
xchg
int
jbe
dec
dec
stos
das
ins
shl
aas
addr16
pop
sbb
xlat
cld
mov
jp
cmc
loop
jne
pop
or
sar
cmps
mov
and
or
mov
push
(bad)
and
movs
lea
movs
mov
jne
cli
push
stos
pop
add
push
jne
xchg
int3
cli
sbb
(bad)
xor
pop
sbb
adc
int3
cmp
outs
lahf
add
inc
and
push
xchg
push
arpl
ins
(bad)
adc
xor
retf
ins
mov
adc
(bad)
pop
or
jmp
pop
inc
inc
pushf
mov
and
pop
mov
mov
rcl
call
in
sub
and
push
adc
add
lea
les
jle
jbe
dec
call
inc
cld
pushf
push
shl
cwde
test
jne
sahf
jnp
pop
or
add
xchg
outs
add
sub
ins
push
inc
mov
push
out
das
mov
je
aaa
test
outs
nop
fwait
jnp
or
bound
jg
nop
imul
or
mov
popa
sahf
aas
jb
pop
mov
mov
mov
sbb
push
mov
mov
ss
call
jecxz
cli
add
xor
mov
test
fist
ins
xchg
cmc
push
cmp
lock
(bad)
add
sbb
lahf
mov
fcmovne
xor
adc
inc
or
xchg
pop
adc
sbb
mov
fldenv
sub
shr
clc
out
movs
xchg
sbb
lock
and
push
or
stos
sbb
xor
stos
mov
(bad)
mul
fidivr
xor
cmps
ins
test
jbe
outs
and
dec
imul
aaa
pop
gs
mov
(bad)
mov
dec
pop
push
push
inc
scas
or
iret
and
mov
or
into
repnz
dec
and
cmps
and
lods
adc
mov
add
xchg
mov
dec
mov
or
or
call
pop
pop
out
jmp
popw
imul
push
lea
mov
xchg
push
mov
mov
xchg
xor
mov
jecxz
cmp
jle
push
ret
mov
out
and
add
cmp
outs
jnp
outs
sti
jb
dec
and
sahf
call
sub
sbb
mov
div
dec
(bad)
(bad)
cmc
jo
test
pop
cmp
cmp
lahf
dec
cmc
mov
add
or
out
mov
rcr
mov
push
out
mov
sbb
stos
mov
mov
daa
(bad)
test
icebp
(bad)
fbstp
jle
out
outs
pop
dec
mov
or
out
xor
aas
xchg
mov
lea
repz
out
xchg
test
pop
sbb
mov
sbb
outs
cmp
(bad)
imul
js
mov
pop
mov
xor
jmp
pop
push
idiv
add
cmp
pop
ss
xor
scas
jl
loopne
jmp
mov
test
adc
nop
and
jbe
popa
shr
add
in
mov
(bad)
dec
mov
call
stos
jge
jo
pop
sub
or
jge
or
lds
inc
jle
cdq
pop
mov
retf
popf
xor
ja
hlt
mov
push
stos
les
mov
js
adc
jno
(bad)
std
or
mov
xchg
pop
outs
dec
cmp
mov
mov
xor
jno
mov
xchg
jne
dec
(bad)
dec
popa
add
sub
fwait
mov
and
pop
sub
adc
dec
xrelease
arpl
push
and
jmp
scas
dec
xor
cld
dec
push
mov
push
jp
fidiv
ja
mov
inc
jae
jmp
movs
add
aad
xchg
mov
mov
mov
mov
ror
xchg
out
shl
push
pop
mov
inc
addr16
das
inc
sub
jb
cmp
adc
das
dec
shl
xchg
inc
(bad)
repz
fprem
adc
loopne
shr
xor
cmp
out
jg
movs
jp
ins
ret
cld
hlt
popf
mov
inc
dec
add
(bad)
fstp
jns
mov
pop
pop
sbb
inc
xchg
pop
neg
mov
pop
lahf
pop
pop
sub
xchg
cmps
ror
xor
aad
pop
stos
or
dec
aaa
cmp
sub
out
mov
lahf
push
xor
gs
dec
push
fwait
push
std
or
mov
leave
mov
lock
and
mov
daa
xlat
jp
cmp
arpl
push
(bad)
mov
and
stos
das
jae
push
dec
sub
mov
mov
lahf
inc
inc
mov
cli
in
pusha
sahf
popa
xchg
pop
clc
push
pop
xor
sbb
jb
cmp
add
jmp
cmp
fistp
or
mov
cli
jle
inc
pop
or
outs
int
icebp
div
add
jbe
aad
sbb
inc
pop
outs
xchg
imul
sub
jg
jns
dec
jbe
adc
shr
add
adc
hlt
pop
aam
sbb
pop
dec
movs
sub
xor
and
mov
shl
aam
movs
scas
scas
(bad)
cmps
push
mov
jnp
ret
cmps
mov
mov
popa
inc
sub
dec
mov
pop
sbb
int3
and
movs
jmp
scas
jecxz
cmp
sbb
xchg
outs
loope
push
test
cmp
or
cmp
mov
jmp
dec
xchg
in
addr16
adc
mov
pop
adc
adc
add
pop
loope
pop
out
arpl
sub
hlt
jno
push
and
ret
cld
out
in
adc
dec
repz
push
retf
push
sar
pop
jnp
cmc
pop
jbe
inc
ds
xchg
or
inc
popa
dec
dec
scas
in
repnz
pushf
ins
pop
jno
in
(bad)
scas
xor
shr
repz
cmp
jbe
loop
jne
nop
inc
jmp
sub
mov
mov
into
bnd
pushf
scas
cmps
pop
jns
fimul
rol
push
pop
push
jne
test
ds
popf
xchg
loope
out
cmp
mov
retf
push
mov
rcr
popf
sbb
gs
jmp
mov
(bad)
jbe
mov
sbb
mov
cmp
push
jb
dec
cmp
sbb
gs
mov
sbb
cdq
mov
jmp
(bad)
into
test
jl
xchg
popa
bnd
adc
xor
cdq
and
xchg
cmp
jge
sbb
adc
xchg
pop
and
aad
push
push
push
jp
test
jne
pushf
shl
cmc
xor
iret
retf
in
fcmovu
add
into
fistp
mov
fcmovnb
sbb
gs
inc
xchg
into
mov
inc
fild
xchg
add
xchg
lds
mov
in
xor
mov
jge
jae
adc
mov
arpl
dec
daa
jae
(bad)
repnz
fst
das
xor
pusha
mov
pop
in
dec
xor
out
inc
cs
(bad)
sub
mov
sahf
cmp
pop
mov
push
mov
pop
push
cs
stos
inc
clc
pop
xchg
and
mov
and
pusha
sbb
xchg
mov
inc
jp
mov
fucomip
xchg
arpl
out
ins
dec
inc
inc
dec
or
pop
xor
xchg
xor
inc
hlt
mov
out
dec
sub
xor
jb
and
mov
fstp
dec
fstp
inc
mov
xchg
sbb
icebp
mov
repnz
(bad)
aaa
and
dec
pop
call
test
cli
retf
cli
pop
out
jge
movs
out
and
lods
add
and
jns
push
enter
scas
fcom
shr
xor
ins
mov
add
jge
imul
sbb
dec
mov
pop
jb
jl
push
sbb
in
sub
adc
push
es
cmps
lods
enter
xor
xor
cmc
or
push
jecxz
mov
out
and
adc
test
fcmovnb
sbb
xor
add
add
sbb
jle
xlat
(bad)
xor
and
retf
or
je
cwde
test
inc
pop
pop
xchg
jmp
mov
adc
jg
dec
jmp
sub
jle
jecxz
hlt
fstp
and
jae
adc
xlat
and
leave
xchg
in
xchg
adc
dec
frstor
or
loopne
push
pop
or
fwait
leave
mov
xchg
cmp
out
mov
adc
xchg
lods
mov
add
je
ucomiss
(bad)
clc
inc
fwait
into
loope
ror
shr
add
hlt
inc
out
call
popa
ret
stos
sbb
(bad)
or
mov
daa
cmp
dec
xor
inc
(bad)
or
sbb
repnz
iret
das
add
stos
jb
cwde
ss
jno
sub
retf
fs
fwait
pop
ins
adc
cmps
push
sar
nop
xchg
pop
movs
jecxz
iret
sbb
aam
sbb
mov
sub
(bad)
imul
or
dec
sub
mov
mov
add
push
gs
aam
xchg
mov
mov
fidivr
sbb
ds
and
push
sub
jmp
sbb
and
mov
inc
mov
test
or
cwde
or
sub
cwde
mov
movs
jmp
out
dec
cmps
and
cmp
cmc
cs
fisub
ins
ins
out
and
add
popa
mov
cmp
push
xor
mov
ror
dec
lods
mov
jo
push
les
(bad)
inc
mov
stos
pusha
cs
dec
mov
leave
pop
and
fcomp
add
nop
mul
add
dec
pop
cs
nop
sar
mov
rol
mov
push
dec
cmc
aaa
sbb
je
or
out
(bad)
jb
jmp
sub
and
pop
rcl
dec
jno
sub
movs
cmp
push
outs
xchg
push
gs
dec
idiv
add
stos
xchg
push
ret
pop
(bad)
and
or
and
cmp
inc
jnp
mov
mov
mov
add
jo
aas
mov
adc
xchg
movs
jae
cwde
sbb
or
call
and
inc
cwde
jb
add
inc
push
rcr
stos
pop
test
or
mov
xor
movs
adc
scas
cwde
pop
comiss
and
loopne
xor
mov
mov
in
cmp
pop
je
add
fisubr
clc
xor
aam
ror
mov
or
jmp
mov
loopne
fist
inc
hlt
fisub
(bad)
ficom
scas
cmps
dec
xabort
mov
cmp
jns
pushf
stos
dec
dec
mov
pop
or
popf
inc
and
pushf
sub
mov
dec
rcr
cmp
neg
push
test
out
std
jmp
ins
imul
retf
adc
std
xchg
add
sbb
rol
lods
(bad)
aas
ss
shl
mov
sub
call
fdecstp
dec
xor
aaa
push
pop
xchg
jl
fs
popf
ret
push
push
sti
mov
inc
xor
cmp
addr16
int3
out
cmp
adc
js
or
push
pop
daa
add
xor
test
cmp
dec
jmp
push
push
and
stos
pusha
in
fst
sub
dec
and
pop
stos
dec
sbb
sbb
mov
ja
sti
sub
nop
mov
test
xor
movs
aam
and
push
in
test
inc
in
push
ins
les
inc
ret
add
repz
add
retf
and
mov
dec
dec
(bad)
aas
test
out
test
pop
ins
mov
jno
xor
and
mov
pop
jnp
mov
movs
or
dec
jno
cdq
sub
pop
lods
lea
cmp
pop
dec
test
inc
mov
xchg
xchg
and
dec
repz
je
inc
cld
movs
dec
inc
leave
pop
leave
cmc
push
jmp
and
in
nop
sub
popf
mov
and
xchg
outs
pop
ss
movs
and
sub
mov
push
cwde
ins
or
mov
call
mov
mul
(bad)
or
(bad)
adc
test
add
cmp
sub
mov
sub
xor
int
or
int3
shl
dec
cli
cmp
cmp
dec
inc
xor
(bad)
pop
add
cmp
pushf
inc
ss
push
mov
out
dec
imul
inc
push
pop
lock
shr
rcr
clc
loop
dec
fldenv
jecxz
sub
sbb
xlat
add
jno
out
pushf
icebp
inc
jp
push
lahf
cmc
push
ror
(bad)
out
lahf
(bad)
pop
movs
xor
mov
or
stos
enter
jmp
scas
fistp
cmps
adc
lahf
rcl
arpl
jle
pop
icebp
fdivr
push
or
popf
aam
sub
ins
push
aad
jne
dec
call
mov
fs
adc
inc
jno
cmps
movs
xor
add
retf
fdivr
sbb
mov
aaa
jp
cmp
fucomi
xchg
aas
dec
ret
dec
movs
cdq
cwde
sbb
mov
popa
add
jno
fisubr
dec
mov
jne
cmp
loop
cmps
pop
popf
or
or
iret
mov
mov
popa
jb
out
adc
aam
or
cmp
fsubrp
push
test
adc
push
arpl
or
and
ds
xchg
jge
iret
jge
test
in
add
pop
or
jne
xchg
dec
sub
sbb
jle
arpl
into
inc
outs
clc
test
popa
ins
iret
mov
ret
sub
ins
cmp
(bad)
cmps
call
add
movs
sbb
mov
cmp
out
bndldx
js
dec
inc
fwait
mov
(bad)
test
js
dec
pushf
xlat
idiv
cmp
out
sbb
aas
mov
(bad)
imul
or
stos
cs
jb
or
fidivr
mov
movs
retf
mov
inc
pop
aam
pop
pop
(bad)
iret
jmp
(bad)
call
pop
ss
test
daa
sti
mov
out
cmp
pusha
lds
les
dec
and
repnz
pushf
neg
add
and
sbb
je
cmp
lods
pop
or
sbb
sbb
retf
(bad)
cmp
test
or
mov
outs
aad
mov
(bad)
mov
and
jle
es
(bad)
xchg
mov
inc
pop
push
push
xchg
add
in
xor
sub
pop
push
loop
mov
add
push
mov
add
inc
jnp
jmp
push
hlt
hlt
das
je
loope
and
fstp
out
sub
(bad)
in
inc
inc
sbb
xor
shl
ret
inc
mov
or
dec
sbb
jp
push
ret
push
fstp
mul
jmp
cmp
push
pusha
xchg
sub
in
jnp
mov
push
out
sub
stos
mov
es
mov
ror
repz
inc
ror
add
sbb
sbb
pop
cmps
pushf
mov
repz
bnd
xchg
std
or
in
ficom
iret
push
ret
pop
jb
pop
cmc
jmp
ja
sahf
inc
mov
inc
adc
fwait
clc
sbb
pushf
loopne
cwde
sub
mov
jp
push
cli
outs
stos
add
jns
xchg
add
(bad)
je
popa
jp
adc
dec
adc
(bad)
mov
lock
pop
cmp
hlt
xor
lods
mov
mov
adc
das
lea
pop
sti
and
or
inc
add
bswap
aad
pop
data16
lahf
mov
cmp
(bad)
jnp
out
int
or
in
mov
inc
dec
pop
je
(bad)
dec
jb
std
nop
push
sub
aad
adc
add
imul
sub
sub
fiadd
ss
les
xor
mov
shl
mov
jbe
out
jne
sub
mov
push
adc
pop
xchg
fild
add
mov
add
mov
mov
mov
inc
and
repnz
fsub
sub
into
pushf
mov
js
out
scas
out
jecxz
imul
in
sub
movs
mov
ins
ins
inc
or
loopne
mov
mov
or
jg
add
shl
mov
sbb
aad
loop
cmps
jne
data16
clc
xor
pop
mov
pop
(bad)
ins
xchg
(bad)
jae
leave
mov
adc
arpl
adc
cmps
push
adc
cmp
cmps
fidiv
fist
mov
xchg
mov
mov
push
mov
cmp
in
mov
cmp
xchg
or
bound
sub
ret
in
push
pop
stc
sub
adc
or
adc
fst
mov
cdq
or
stos
cmp
mov
ret
mov
push
mov
xor
mov
ins
mov
sbb
std
cmp
xchg
xor
sub
xchg
(bad)
push
aad
inc
mov
sub
xchg
rcr
mov
dec
outs
out
push
add
arpl
jge
mov
pop
pop
push
(bad)
pop
cmp
iret
hlt
push
or
xchg
inc
pop
mov
jb
fild
popf
sahf
sub
jmp
xor
push
ficom
inc
mov
call
xlat
sahf
mov
cld
sahf
jno
add
pop
jmp
mov
arpl
adc
cmps
sbb
xor
jne
jae
repnz
and
loope
xor
cmc
repnz
test
lahf
adc
loop
sub
(bad)
pop
mov
mov
sbb
add
ror
out
rcl
cmp
dec
iret
sbb
nop
jp
jmp
lock
addr16
int3
movs
popf
iret
neg
mov
fistp
fiadd
stos
mov
and
push
imul
test
cli
icebp
fidivr
aaa
sahf
push
clc
or
imul
sahf
xor
pop
or
aad
sub
std
pop
retf
add
pop
xor
lock
mov
jbe
cmp
inc
stc
shr
stos
push
push
aaa
fstp
cmp
or
push
add
cs
pop
cmp
cmp
hlt
data16
fst
fst
inc
sahf
inc
and
stos
sbb
(bad)
mov
lods
cmc
stos
out
outs
les
sub
xchg
push
fsubr
jle
or
movs
sti
bound
xor
test
sub
test
lds
cmp
je
xor
imul
sar
inc
pusha
fwait
cld
(bad)
sub
push
xchg
mov
test
mov
dec
(bad)
stos
ins
(bad)
xlat
pop
cmc
int
fwait
aaa
repz
sbb
popa
test
(bad)
mov
pop
fwait
stos
mov
fisub
leave
stos
jo
sbb
nop
mov
adc
sub
cmp
jae
or
inc
xchg
sbb
cli
fld
pop
add
push
lods
cmps
test
cmp
std
inc
aad
sbb
dec
adc
call
xchg
jno
stos
loope
inc
cmp
or
les
mov
imul
lock
mov
sub
jae
mov
mov
mov
shufps
or
imul
adc
icebp
lahf
sub
dec
mov
adc
cwde
es
div
call
sub
rol
inc
xchg
ss
out
adc
movs
outs
cmp
push
aaa
jne
inc
cwde
and
cmp
fwait
sbb
mov
push
add
xchg
mov
rol
jp
dec
xchg
out
and
pop
cmp
ins
lods
sub
dec
mov
or
out
pop
ffreep
jle
sbb
mov
pop
arpl
cmp
sbb
push
sub
ret
addr16
pop
or
fdiv
add
inc
xchg
sbb
outs
xchg
or
(bad)
dec
ja
daa
inc
fst
outs
int3
jl
xchg
jne
push
xlat
test
ja
sub
inc
iret
fadd
pop
cli
inc
jl
in
ffree
add
push
push
int3
push
and
shl
push
ins
in
pusha
adc
bound
mov
cs
sub
stos
cs
push
loope
or
push
out
out
add
mov
(bad)
xchg
add
pop
aaa
int
sbb
jo
inc
sub
aaa
repnz
xchg
(bad)
in
pop
arpl
jge
inc
add
psrlq
stc
mov
movntq
out
popa
pop
cmps
lea
lock
xchg
(bad)
hlt
lahf
push
movs
jp
data16
repz
jmp
push
and
sbb
jge
inc
ret
es
pop
rcr
xor
xlat
(bad)
int3
xlat
xor
lds
pop
ss
gs
or
cmp
nop
mov
add
jno
arpl
jns
scas
sub
hlt
jmp
xchg
rcl
dec
loope
sbb
jnp
loop
inc
call
rcl
addr16
inc
inc
fstp
xor
out
inc
ss
xchg
mov
les
jno
aam
arpl
push
cmp
inc
mov
dec
stos
daa
or
out
cmp
mov
mov
out
mov
inc
add
pop
cmp
push
sbb
loope
xor
rol
pop
push
(bad)
gs
push
adc
jge
shr
inc
mov
jne
loopne
stos
outs
inc
jne
sar
out
out
out
pop
mov
es
out
sti
jmp
sub
inc
pusha
jns
dec
mov
and
xor
inc
jmp
dec
adc
pushf
mov
addr16
dec
dec
cwde
adc
imul
sti
cmp
xchg
or
sar
mov
hlt
(bad)
add
cmp
leavew
xor
xchg
pop
sar
in
loopne
dec
cmp
cmp
cmp
jo
push
jae
push
pop
jg
ret
dec
mov
mov
(bad)
stc
cmps
pop
(bad)
je
jg
or
pop
mov
sub
popa
mov
mov
out
ss
retf
sub
adc
test
inc
int3
sbb
ins
int
daa
pusha
cmp
push
jg
int3
add
inc
pop
mov
ror
push
xor
ins
pop
inc
test
add
mov
repnz
lds
scas
bnd
(bad)
pop
jbe
jnp
shr
daa
sub
mov
inc
push
ret
cwde
sar
out
xor
pop
adc
fiadd
outs
cmp
xchg
jo
mov
(bad)
add
call
push
movs
jmp
iret
inc
pushf
xor
jbe
mov
les
xor
jae
inc
push
push
mov
add
adc
jnp
lea
enter
push
jle
pop
mov
lods
(bad)
xchg
or
mov
or
scas
or
push
push
in
adc
sbb
fsub
add
jne
ficom
shl
adc
(bad)
jne
pop
xchg
ins
loopne
pop
sahf
cmps
adc
xor
fsub
mov
(bad)
hlt
add
mov
jecxz
imul
sets
fmul
jg
lea
xor
inc
test
in
fmul
sub
jg
dec
mov
push
cmp
pop
addr16
sbb
xchg
mov
mov
and
add
shl
not
test
cs
imul
and
dec
push
jns
fist
fs
pop
out
adc
outs
sub
and
stc
push
lods
loope
inc
dec
cld
int
mov
in
xchg
gs
neg
jns
pop
cmps
fs
dec
pop
push
pop
sbb
inc
out
push
push
mul
ret
fldenv
mov
repz
jmp
out
lock
and
sar
ror
push
ja
inc
sbb
scas
dec
push
mov
sti
jl
or
and
inc
pop
sub
in
push
push
fwait
imul
mov
pop
jns
movs
neg
inc
dec
push
loope
mov
in
out
xor
sbb
mov
iret
jb
mov
xchg
push
rcr
or
xor
push
es
xor
cmps
ins
das
fldenv
sub
xor
dec
sub
dec
pop
loop
outs
and
or
pop
out
enter
hlt
xabort
dec
das
repz
scas
dec
push
aas
mov
jmp
push
push
ja
mov
js
das
arpl
xor
jle
pop
pop
and
out
nop
and
fwait
aam
mov
adc
xor
je
jns
in
push
stos
in
cmp
imul
push
adc
push
sahf
sbb
(bad)
cmp
test
gs
nop
sbb
cmp
adc
xchg
fisubr
inc
(bad)
push
xor
xchg
sbb
mov
xchg
lahf
inc
jo
adc
pop
or
adc
clc
jbe
add
in
or
mov
cwde
ins
adc
adc
push
dec
cmp
cmp
jmp
call
in
mov
sahf
inc
jmp
mov
adc
(bad)
js
push
mov
push
hlt
call
mov
pop
pop
push
aam
sbb
cld
adc
leave
mov
leave
mov
dec
jg
(bad)
leave
std
pushf
push
and
xlat
(bad)
(bad)
and
push
jnp
add
shr
sbb
lods
mov
xor
imul
jecxz
jge
and
pusha
mov
cld
mov
out
jl
mov
inc
adc
dec
popa
ds
aam
sub
sbb
adc
lock
cmp
in
and
sar
test
cwde
cmps
lock
dec
pop
mov
jmp
rcr
mov
mov
or
sbb
arpl
fldenv
aam
(bad)
sbb
mov
sub
jmp
or
pop
fwait
btc
add
ret
mov
jl
mov
nop
in
out
scas
lock
xchg
xchg
test
test
shr
mov
adc
xor
add
pop
xor
dec
ja
jp
aas
mov
mov
sub
nop
call
out
dec
inc
cli
aaa
retf
inc
cmp
ficomp
mov
mov
jmp
adc
icebp
cmp
xor
xor
in
xchg
xchg
xchg
movs
mov
sti
mov
push
stos
test
icebp
sbb
xor
xor
fldenv
dec
xor
pop
sub
xor
call
dec
popf
out
mov
daa
or
or
ja
ds
enter
jno
cmps
xor
cld
scas
dec
jge
jbe
shr
and
es
and
cmp
or
out
push
in
xchg
(bad)
sar
xchg
inc
mov
out
inc
je
pop
imul
push
sub
fs
xchg
leave
pop
pop
cdq
fadd
lahf
fiadd
mov
loope
out
xchg
add
in
ret
aaa
push
inc
mov
adc
(bad)
xor
in
jle
cmps
pop
ja
jb
inc
or
mov
repnz
mov
mov
daa
jb
pop
push
xlat
add
and
xchg
sub
mov
mov
fnstcw
out
mov
adc
in
add
daa
pusha
lea
jge
pop
pop
push
sub
and
pushf
and
xor
pop
out
rcr
push
aas
hlt
rol
jno
sub
push
dec
cmp
arpl
outs
xor
loop
je
or
fwait
js
out
ss
inc
dec
int
ins
ins
and
mov
xchg
punpckldq
sub
cmp
fcom
sub
lods
dec
lds
add
xchg
fisubr
icebp
pop
call
and
cli
pop
push
out
test
jbe
pop
cld
inc
(bad)
jne
xchg
push
adc
fwait
push
test
sbb
push
lds
sbb
sub
pop
mov
loopne
or
cmp
fcomp
or
pushf
or
sbb
(bad)
jg
sub
xor
cmp
out
xor
out
sti
cmp
dec
loope
nop
cmps
fisub
xlat
pop
pop
jbe
jmp
adc
push
add
bndstx
loopne
jecxz
cmp
repnz
lahf
pop
popa
fmul
out
ret
add
loope
mov
sub
mov
outs
mov
jg
dec
pop
cmp
ja
xor
cmp
jno
or
enter
call
add
xor
pop
or
shl
cmc
add
fnstsw
dec
pusha
sub
add
in
inc
sbb
jns
xor
mov
dec
add
mov
mov
mov
mov
mov
arpl
inc
mov
into
xchg
inc
sbb
in
xchg
leave
xor
pop
cmp
test
aam
xor
cmp
and
(bad)
stos
adc
jmp
pop
mov
lock
ds
into
cmp
mov
push
xor
mov
push
xchg
daa
and
fsub
mov
or
js
mov
in
lods
leave
aam
scas
sbb
xchg
mov
lock
loop
inc
loope
lds
jae
push
out
jecxz
add
sbb
repz
xor
fimul
cmp
mov
lahf
jno
push
sub
add
jmp
push
lea
adc
fcmovnb
stos
inc
add
pop
or
cmc
lea
les
enter
push
rcl
xor
fs
out
mov
pop
push
push
pop
push
sub
arpl
xchg
push
jp
push
mov
(bad)
mov
push
jbe
or
bound
pop
xchg
xor
(bad)
mov
adc
stos
adc
and
jle
jbe
das
push
pop
xchg
jp
sbb
jl
lods
retf
fisttp
fwait
out
add
gs
mov
add
mov
jb
add
loop
inc
dec
inc
stc
inc
(bad)
(bad)
or
scas
sub
pop
mov
mov
adc
sub
rcl
sbb
inc
ins
sti
add
dec
mov
lahf
test
(bad)
out
fldenv
pushf
cmp
repnz
cs
xlat
xlat
add
call
push
movs
cmp
cdq
jmp
(bad)
cmp
cmp
mov
(bad)
std
rol
(bad)
aam
outs
mov
adc
fs
and
xchg
ret
jmp
aad
push
push
mov
jmp
or
movs
xchg
add
cmp
loope
push
cdq
cld
in
pop
fucom
fisttp
adc
dec
scas
ins
das
stos
in
in
inc
ret
popa
cld
xchg
pop
mov
mov
mov
or
mov
jno
rcl
aas
mov
sbb
data16
(bad)
jp
daa
fisub
cmp
rcl
outs
ins
xor
or
outs
test
bound
ret
xchg
dec
mov
push
cmp
f2xm1
xchg
ds
dec
and
scas
jae
outs
push
pop
(bad)
cmps
add
sub
xchg
jg
(bad)
push
jmp
cmp
pop
aam
jno
pop
sbb
xchg
ins
sti
test
xchg
in
(bad)
xchg
xchg
cmp
xor
push
dec
loope
xchg
jge
sub
jno
scas
mov
push
push
dec
call
cmps
enter
sub
lds
aas
in
pusha
cli
scas
adc
and
lock
pop
pusha
or
ret
into
sbb
lds
inc
(bad)
adc
jns
push
fcomip
shrd
sbb
cmps
fwait
sub
push
inc
int3
out
xchg
mov
in
cs
add
sbb
xor
fs
mov
in
outs
test
dec
xchg
ins
or
out
data16
push
jmp
in
popa
ret
jmp
or
dec
jg
cmp
in
and
sub
jae
cdq
inc
cmp
xor
arpl
(bad)
shr
push
hlt
mov
and
jecxz
ror
mov
repnz
xchg
or
inc
and
les
dec
lahf
inc
jmp
mov
dec
or
jg
ins
icebp
dec
sbb
ficom
mov
add
pop
ret
jnp
cmps
in
bound
cmp
inc
shufps
and
sub
jle
dec
mov
fldenv
out
mov
add
loopne
and
jne
jbe
imul
(bad)
addr16
fcomp
dec
sub
cwde
sahf
cmps
aam
adc
sbb
adc
bound
push
mov
push
adc
aam
aaa
nop
pop
ss
das
je
cmp
inc
push
mov
fsub
mov
leave
loope
inc
push
xor
and
sbb
ror
enter
dec
rcl
mov
lods
cdq
pop
mov
jns
cwde
dec
vmovhps
dec
clc
mov
out
into
mov
mov
enter
pop
fcomp
ret
xor
in
fstp
mov
add
sub
sub
ret
mov
scas
bound
push
jo
adc
cs
adc
call
inc
out
xor
mov
adc
out
pop
imul
and
or
jo
(bad)
stos
inc
cmc
and
and
std
inc
movs
mov
mov
pop
mov
xchg
add
js
icebp
inc
mov
adc
out
imul
add
xchg
or
dec
cmp
cmps
add
xchg
inc
cmp
shl
or
inc
mov
xchg
fidivr
sub
push
aam
outs
es
repnz
inc
mov
pop
(bad)
pop
mov
jo
lods
gs
loope
pop
inc
out
lea
scas
outs
sbb
fs
fnstenv
shl
retf
and
jno
cmp
neg
mov
xchg
inc
and
push
rcl
xchg
lds
add
dec
outs
push
jecxz
mov
mov
lods
pop
push
pop
popa
xchg
mov
pop
push
pop
mov
jne
add
mov
inc
or
stos
cmps
lahf
add
add
jmp
pop
lods
daa
jmp
inc
je
inc
pop
ss
xor
and
mov
mov
xlat
dec
jae
jg
gs
xor
aaa
jnp
movs
shl
retf
sets
int3
fcomp
dec
jmp
lea
das
jmp
imul
lock
adc
fild
mov
mov
cmp
pop
cmp
fist
mov
add
fs
mov
iret
fisttp
xchg
sbb
(bad)
jae
out
cmc
jecxz
(bad)
push
(bad)
xchg
lock
or
xchg
inc
pop
lahf
add
jae
adc
data16
pop
inc
ins
js
jne
dec
add
dec
pop
push
bswap
add
lock
jbe
pop
xchg
cmp
cmp
cmps
mov
(bad)
inc
test
xlat
cmp
scas
bound
movs
scas
retf
scas
rcl
in
adc
js
lods
mov
out
adc
adc
dec
jns
scas
aad
jg
jmp
or
mov
data16
cpuid
pop
xlat
jae
cwde
pop
add
dec
xchg
push
push
or
add
ror
int3
cmc
pushf
sub
add
mov
in
mov
cli
popa
stos
add
jmp
inc
jo
dec
dec
jnp
inc
leave
lods
and
ja
add
or
lahf
popa
leave
test
int
jne
(bad)
mov
cmp
in
mov
inc
test
mov
push
mov
adc
(bad)
jnp
xchg
cli
fldenv
(bad)
call
je
ret
mov
xchg
lods
(bad)
jle
jns
scas
inc
(bad)
inc
xor
in
mov
retf
dec
pop
and
rol
int
je
scas
adc
es
xchg
mul
inc
stos
stos
(bad)
cmp
jnp
xor
push
lock
sbb
in
jno
sub
dec
cmp
cld
lds
ins
add
adc
sub
(bad)
imul
xchg
mov
in
jp
pop
repnz
cmps
mov
fnstenv
jge
xchg
out
dec
push
fldcw
lock
mov
mov
mov
dec
inc
xor
cmp
inc
sbb
and
sbb
jb
mov
je
xchg
pop
and
pop
push
out
popa
adc
das
repnz
int3
adc
cmp
shl
std
push
pop
lds
test
mov
sub
jmp
movd
sub
xchg
(bad)
fldenv
sub
inc
(bad)
pop
mov
xor
or
adc
std
je
dec
mov
sub
pusha
inc
mov
xor
xlat
adc
jns
fidiv
lds
jp
ins
loopne
retf
xchg
dec
rol
xchg
stos
call
pop
jb
je
inc
outs
je
(bad)
aas
leave
push
std
inc
in
stos
inc
scas
cmps
int3
scas
inc
(bad)
xchg
scas
pushf
aam
out
sub
push
out
adc
xchg
or
and
mov
mov
(bad)
aas
dec
inc
dec
out
arpl
repz
sub
or
push
pop
(bad)
mov
inc
fsubr
fld
ja
pop
fdiv
das
cmc
(bad)
cmp
pop
ret
dec
lods
cmp
ror
push
mov
inc
repnz
lds
out
sar
jbe
add
ret
test
adc
xchg
dec
into
jge
cmp
test
sbb
enter
popa
mov
iret
aaa
add
imul
ficom
ret
clc
lahf
shr
dec
fcom
imul
mov
cmps
mov
imul
sbb
pop
xchg
rcr
xor
(bad)
jnp
mov
and
and
pop
dec
stos
push
dec
call
xor
push
dec
jmp
jle
mov
sbb
cli
sbb
adc
fist
cwde
mov
dec
jl
popa
movs
or
movs
addr16
and
mov
shl
or
dec
inc
ficomp
mov
repz
mov
add
js
cmp
dec
dec
aad
sbb
into
mov
push
pop
pop
push
aas
cmps
mov
mov
xchg
retf
repnz
dec
jmp
adc
xchg
ins
jo
in
mov
clc
and
inc
mov
retf
mov
ins
mov
out
sbb
mov
push
test
stos
sub
(bad)
pushf
jbe
mov
bound
ins
jae
add
in
hlt
mov
mov
dec
hlt
test
mov
pop
jge
inc
nop
and
ds
aas
jno
in
ds
dec
lock
fs
push
cmp
in
inc
dec
repz
dec
test
fisttp
sbb
stos
push
dec
call
retf
and
nop
stc
das
repz
xor
int3
add
mov
sbb
aaa
pop
adc
sahf
push
inc
es
adc
sbb
les
pop
in
int3
cmps
cdq
mov
lea
pop
cmps
add
push
push
(bad)
cs
ret
loopne
add
out
test
add
xor
enter
fadd
movs
(bad)
out
sub
iret
mov
xchg
fwait
int
dec
dec
imul
call
mov
mov
jnp
test
dec
aas
fimul
push
cli
(bad)
jno
mov
cdq
mov
test
cmc
mov
sbb
movs
jmp
jbe
sbb
icebp
sar
push
out
push
call
mov
mov
mov
mov
inc
sbb
ret
cmp
inc
leave
fmul
jmp
mov
and
adc
int3
into
add
mov
xchg
(bad)
xchg
or
sar
inc
xchg
dec
aad
mov
jmp
aas
(bad)
daa
or
mov
repnz
adc
xor
and
inc
leave
pop
aas
loopne
adc
jns
pop
inc
pusha
pop
loopne
and
xor
mov
xlat
ret
jae
test
cmp
cmp
test
aaa
fsubr
mov
sbb
daa
xor
push
adc
pop
adc
ins
ds
or
daa
in
dec
jmp
cmp
adc
lods
xor
dec
add
xchg
and
mov
or
fwait
sbb
xor
jmp
adc
adc
je
arpl
sti
inc
jl
aaa
mov
xchg
xchg
adc
mov
jmp
scas
push
test
fst
pop
and
mov
cli
in
mov
mov
and
cli
sub
inc
leave
xchg
xor
mov
(bad)
cmps
mov
jmp
retf
cmp
jge
int3
dec
shl
xor
xchg
pop
push
into
out
aad
adc
inc
mov
fcomp
jbe
mov
call
retf
ds
cdq
outs
sbb
mov
mov
iret
jb
es
xlat
inc
(bad)
xor
fld
mov
sub
repnz
ror
arpl
loopne
sbb
lods
mov
xor
xor
or
ror
sub
add
inc
mov
pusha
mov
out
add
sbb
or
sbb
adc
xchg
cmp
push
jl
ins
lahf
or
xchg
je
test
xlat
pop
mov
test
fidivr
and
xchg
jle
adc
mov
jecxz
dec
movs
test
std
sbb
nop
cs
in
xor
push
pop
(bad)
std
mov
and
add
sbb
loopne
ror
mov
mov
cld
pushf
cmp
rol
ds
pusha
aad
sub
in
(bad)
int
outs
ins
inc
mov
add
test
cmps
loope
ins
in
(bad)
mov
adc
xor
sub
jo
or
ss
sub
xor
xchg
mov
pusha
iret
mov
sti
xchg
(bad)
outs
or
shl
stc
inc
out
push
jbe
mov
mov
sbb
into
hlt
jecxz
outs
push
arpl
mov
or
and
fs
test
cmp
test
js
sub
int
or
scas
jmp
jmp
xchg
xchg
xchg
push
lods
fsubp
pushf
aam
shr
out
add
(bad)
jnp
push
xor
pushf
xor
push
or
ja
or
and
jne
repz
and
ins
adc
jns
data16
push
repz
pop
fwait
ins
mov
stc
std
sub
sub
jns
add
pop
mov
sub
loope
xor
repz
and
sti
mov
xor
xor
cli
imul
clc
std
imul
pop
xlat
inc
sahf
dec
xchg
jecxz
test
adc
je
mov
mov
cld
cmp
inc
test
dec
push
popa
sahf
and
dec
imul
nop
jmp
lock
dec
xlat
xor
xor
cmp
xchg
push
das
sub
out
pop
or
test
test
fnstsw
add
fisub
lods
fsub
inc
lds
ret
in
mov
jmp
sti
addr16
arpl
mov
jbe
mov
aas
fcmove
dec
stc
mov
fild
ret
mov
jo
out
xchg
cmp
scas
add
outs
lea
sahf
icebp
dec
das
sub
pop
nop
call
and
movs
leave
stos
jns
nop
mov
dec
mov
and
mov
scas
sbb
repnz
pop
add
mov
(bad)
xor
mov
pop
repz
or
je
pop
loop
mov
dec
cmp
mov
push
xor
xchg
xor
mov
jge
out
jp
sar
xor
add
nop
fptan
in
and
hlt
ret
aas
enter
xor
in
and
(bad)
aas
enter
mov
das
bound
push
and
mov
jl
pop
shl
push
cli
add
fwait
cdq
aam
inc
cmc
nop
fcom
jl
adc
mov
sub
jne
fsub
mov
push
jbe
push
cmp
and
mov
dec
or
movs
fwait
sar
mov
pop
jmp
test
retf
pop
push
xlat
std
pop
es
push
and
ja
into
fidivr
int
jg
add
imul
mov
add
mov
xor
xor
das
out
jb
fist
aas
call
pop
xchg
enter
mov
out
pop
std
mov
sub
xchg
mov
jecxz
pop
shl
push
mov
mov
div
call
jp
repnz
es
out
out
enter
daa
xchg
and
ss
(bad)
fisubr
sahf
cdq
out
outs
pushf
jae
mov
bnd
xchg
inc
int3
cmps
je
and
dec
sbb
add
mov
and
repnz
je
std
xchg
xchg
idiv
aam
mov
addr16
add
sbb
add
call
jmp
pmuludq
mov
cmp
sub
fldcw
mov
and
out
fidiv
jnp
pop
(bad)
mov
test
add
(bad)
and
adc
push
test
scas
call
xor
ret
push
jmp
stc
ins
add
add
dec
sbb
or
inc
or
ret
js
movs
jae
aam
push
mov
ins
sbb
push
and
retf
clc
mov
mov
push
arpl
fdivrp
in
add
push
setp
jae
nop
push
(bad)
in
jno
xchg
sbb
inc
repz
call
xor
ins
sub
xchg
push
pop
inc
dec
push
jo
iret
imul
mov
cmps
push
cmp
imul
imul
std
push
movs
dec
mov
pushf
test
push
xchg
push
sbb
mov
out
cmp
add
mov
adc
dec
scas
sbb
ja
add
mov
inc
push
out
popa
jns
sub
cmp
js
je
mov
mov
cdq
mov
mov
ds
jno
jle
retf
and
add
je
mov
addr16
jl
ss
iret
fild
mov
cwde
shr
neg
cmps
mov
repnz
cmp
mov
cmp
cmp
leave
aaa
sbb
and
mov
icebp
lock
int
pop
daa
loope
(bad)
rcl
inc
retf
jbe
add
xor
mov
lods
xchg
jmp
xor
push
xor
sub
mov
sub
jae
and
mov
xchg
bound
adc
mov
cmp
repnz
adc
xchg
outs
out
mov
sbb
fisttp
(bad)
fisttp
mov
inc
mov
cmp
xchg
add
push
aas
ret
fstp
push
jge
mov
xor
out
leave
sub
and
adc
(bad)
fcmovbe
inc
out
mov
add
int
push
out
inc
int
iret
in
and
fwait
sbb
and
mov
cmp
das
push
xchg
pop
shl
pop
mov
cmps
repz
out
mov
repz
mov
jl
inc
outs
ja
loope
mov
mov
adc
stc
xchg
inc
dec
leave
sahf
adc
shr
pop
das
inc
out
and
loopne
icebp
cmp
fistp
lock
mov
sub
shl
sub
sub
int3
sub
mov
and
jmp
idiv
dec
test
xchg
rcr
call
push
push
or
add
jp
loopne
ror
les
mov
cli
mov
call
sahf
cmc
xchg
aad
fld
mov
xor
retf
loop
pop
cmps
pop
stc
sbb
pop
repz
or
sbb
fadd
adc
daa
ret
fs
pop
mov
or
jne
push
mov
scas
push
and
(bad)
mov
inc
inc
mov
les
(bad)
adc
pop
(bad)
dec
add
cmp
bound
sbb
call
ficom
and
sub
in
xchg
jge
mov
and
lock
lahf
xchg
xor
xor
mov
pop
call
jae
xor
out
jle
in
pop
adc
mov
jmp
push
lea
inc
fsubr
mov
jle
ja
or
fidiv
popa
arpl
xor
addr16
add
(bad)
pop
fcom
cmp
adc
mov
jnp
shl
int3
jno
les
mov
and
sar
xchg
in
enter
dec
mov
push
adc
pusha
sbb
cmp
loopne
or
sbb
adc
adc
cmc
pop
std
jmp
outs
xor
sub
cld
lea
push
cbw
pop
xor
test
(bad)
adc
add
ret
push
ret
dec
stc
(bad)
jl
ds
(bad)
retf
or
cmp
xchg
dec
rol
adc
push
imul
jmp
mov
test
jge
cdq
retf
add
mov
jbe
inc
ror
cmps
sbb
outs
cld
or
js
cmp
loopne
pop
(bad)
out
pushf
aaa
bnd
inc
mov
sub
shl
data16
test
xor
outs
and
call
retf
(bad)
mov
pusha
or
jnp
cmc
or
pop
cld
call
pop
inc
xchg
sub
dec
les
push
sub
cld
repz
lods
retf
loope
repz
call
sbb
mov
jne
push
outs
shl
ins
fistp
push
jno
mov
mov
xchg
adc
loop
fwait
(bad)
sub
nop
inc
push
mov
and
jae
add
jnp
imul
imul
lods
cmp
int
inc
adc
inc
inc
xlat
and
or
add
hlt
cmp
xor
mov
stc
fbld
lods
repz
sbb
jmp
cmp
pusha
sub
test
(bad)
sahf
jne
loope
mov
xchg
ror
lods
dec
ret
sbb
fsubp
add
add
dec
inc
dec
iret
pop
cmc
jmp
pop
xor
les
jno
inc
xchg
inc
sar
je
fcom
adc
mov
jle
pop
adc
dec
xchg
aad
mov
adc
sbb
sub
mov
xchg
mov
not
addr16
lahf
inc
jmp
xchg
ret
or
pop
and
pop
mov
and
xor
sbb
add
in
ret
lea
sub
popf
aad
jecxz
loop
in
pop
inc
sbb
or
xchg
clc
jle
daa
es
sub
jle
out
rcr
aaa
adc
xchg
adc
and
pop
es
pop
nop
cmp
xchg
jno
aas
aam
mov
out
lods
inc
add
dec
pop
scas
push
cmp
fcos
hlt
and
inc
pusha
out
xchg
or
in
repnz
lock
sbb
cmp
(bad)
leave
cmp
test
clc
das
movs
cmp
mov
xchg
add
xor
test
jge
(bad)
lea
sub
das
xor
jno
or
movs
sbb
and
mov
pop
mov
xor
fdivr
push
adc
test
jae
sub
fs
jmp
xchg
pop
gs
xchg
fwait
mov
xchg
test
xor
jge
aad
add
mov
jl
sbb
out
es
inc
enter
enter
rcl
dec
pusha
jg
sbb
push
cld
jo
mov
sbb
inc
push
les
inc
cli
and
daa
out
int3
shl
cmp
or
cmp
dec
mov
mov
xlat
push
(bad)
xchg
and
pop
inc
out
adc
fidivr
add
inc
mov
push
xchg
sti
fwait
push
mov
(bad)
out
cmps
xchg
dec
(bad)
fucom
add
cmp
mov
mov
mov
movs
mov
int3
xchg
sbb
pop
sub
cwde
jns
push
dec
or
mov
xchg
ss
movs
mov
inc
(bad)
(bad)
push
inc
inc
jge
push
add
(bad)
xor
pusha
jle
mov
pop
int3
push
(bad)
nop
in
gs
not
or
inc
dec
mov
paddw
mov
lock
and
cmp
push
imul
mov
or
out
cmp
mov
mov
sub
das
dec
mov
aam
in
ret
sub
sahf
jae
cmp
(bad)
mov
repnz
icebp
inc
(bad)
dec
out
cmp
and
adc
xor
jns
xchg
loopne
lods
push
rcl
push
xor
pushf
mov
inc
pop
cwde
pop
mov
ins
sti
xchg
push
push
inc
jmp
push
add
arpl
push
jo
clc
xor
inc
xchg
or
sub
out
lock
in
clc
adc
pop
(bad)
js
stc
test
in
jns
inc
pushf
sbb
jno
outs
nop
push
repz
xor
fnstsw
(bad)
scas
shr
cmp
in
out
mov
enter
rol
mov
loop
and
icebp
lods
rcr
add
js
outs
xchg
add
in
imul
icebp
test
aaa
and
movs
neg
imul
dec
leave
nop
test
call
sahf
dec
scas
mov
push
jle
adc
push
(bad)
mov
dec
aad
sbb
pop
mov
xchg
js
adc
retf
jecxz
loop
fldcw
je
cmp
ret
cmp
inc
gs
aaa
add
inc
jnp
dec
mov
inc
jle
inc
jg
inc
mov
sahf
sahf
inc
adc
jmp
push
inc
or
or
cmp
inc
jae
xchg
pop
icebp
bound
inc
cmc
sub
xchg
mov
xchg
mov
rcl
in
bound
ret
and
outs
dec
nop
aam
ret
add
push
jecxz
and
arpl
add
fild
cmp
sub
push
clc
pop
std
ror
in
(bad)
retf
sbb
call
rcl
scas
cmp
mov
push
test
enter
loop
and
jmp
stos
test
push
sbb
lahf
and
dec
ja
loop
sub
mov
bt
aas
scas
mov
rcl
add
xchg
cdq
rcr
dec
cmps
call
dec
cmp
gs
dec
cmp
jns
test
cdq
(bad)
(bad)
out
jns
sbb
out
sti
jmp
add
push
mov
or
pushf
adc
mov
push
push
arpl
lahf
pop
call
out
in
fst
xlat
inc
ds
jnp
leave
nop
stos
jle
xor
inc
jle
add
shl
sbb
jecxz
xor
mov
add
cli
daa
adc
lds
rol
ror
enter
ja
scas
dec
add
cwde
dec
add
xor
pop
je
es
pop
xor
jge
clc
cmp
mov
dec
sti
ret
lea
mov
ja
addr16
idiv
push
int3
inc
push
aas
scas
dec
test
mov
js
push
sub
aad
daa
mov
test
repz
xchg
inc
ins
mov
jp
xchg
xor
movs
in
push
sbb
push
dec
jmp
mov
mov
sahf
fs
sti
call
aas
and
mov
jnp
int3
idiv
inc
dec
stos
add
xlat
fwait
sub
add
xchg
xor
mov
pop
mov
int
imul
mov
punpcklbw
lahf
retf
lea
out
lahf
(bad)
ror
or
jg
repnz
jge
add
jb
fild
jmp
pop
sbb
sbb
jg
push
mov
fcmovu
dec
lahf
or
das
mov
test
dec
push
pop
sar
pop
daa
inc
push
xor
jg
dec
(bad)
ret
xchg
aas
je
push
cmp
imul
sub
push
inc
dec
leave
rol
push
fnstcw
enter
push
sbb
cmp
shl
jne
loop
fwait
popf
sti
or
inc
xchg
aam
mov
fidiv
mov
lods
mov
mov
xchg
cmc
arpl
pushf
out
push
jno
ja
mov
movs
jle
and
pushf
cmp
mov
push
mov
cmps
push
movs
cmp
cmp
jecxz
pop
xor
aad
mov
retf
jle
lock
jne
stc
shl
jo
ja
ss
stc
adc
lds
aam
sahf
and
jae
pop
push
push
lods
adc
inc
pop
in
mov
cwde
fmul
mov
scas
adc
add
or
mov
test
and
cmps
iret
in
xchg
jmp
scas
retf
and
push
fidivr
xchg
sar
push
mov
loop
sub
icebp
les
jnp
jae
cli
(bad)
pushf
push
xchg
mov
mov
inc
inc
and
fdivr
jne
mov
retf
fcom
(bad)
sti
dec
sbb
or
and
mul
out
sbb
mov
(bad)
adc
std
dec
retf
cmc
cwde
fiadd
pop
cmp
xchg
pop
mov
(bad)
xor
and
pusha
cmps
mov
dec
and
mov
mov
sub
stos
dec
or
mov
add
aam
mov
test
cmp
sub
add
cmps
adc
daa
mov
sub
out
pusha
lods
push
(bad)
out
shr
xrelease
push
lock
xchg
mov
mov
mov
loopne
jno
jecxz
adc
les
stos
jae
adc
pop
dec
pop
ins
add
inc
dec
cmc
inc
stos
xlat
int3
int3
test
mov
adc
cmp
ror
aad
pop
out
inc
fcom
in
xchg
pop
dec
jecxz
mov
xchg
fcom
adc
xchg
or
daa
add
dec
adc
nop
dec
das
retf
cli
lods
push
cmp
retf
mov
test
aad
jle
scas
cdq
cmp
xchg
retf
adc
in
cmps
mul
jnp
out
xchg
out
outs
retf
lds
cmc
out
mov
and
aam
je
push
push
adc
mov
pusha
or
out
je
adc
pop
jne
fst
stc
mov
jmp
jmp
aas
mov
adc
retf
and
ins
repz
icebp
inc
rol
sub
pop
mov
iret
ds
(bad)
sahf
ja
icebp
cmp
mov
dec
movs
cmps
jge
and
arpl
int3
mov
mov
into
add
outs
mov
push
adc
shr
ins
sub
sub
mov
sbb
or
leave
call
jb
xchg
out
std
mov
fsub
jae
xchg
aad
xor
sbb
push
jmp
(bad)
leave
xlat
cmp
fidivr
jge
dec
or
sub
ret
or
and
mov
pop
cwde
jge
pop
add
iret
jge
cmps
push
inc
test
pushf
mov
call
ins
jmp
es
dec
es
xor
inc
es
sub
loope
sbb
pushf
pop
out
or
lods
cmp
push
sbb
lds
or
cwde
pusha
fbld
fwait
adc
call
fild
iret
repz
jno
pop
pop
in
sbb
sbb
jl
scas
frstor
fnstsw
loop
xor
lock
pop
fmul
es
mov
rcr
ds
lea
jle
push
loope
mov
retf
push
imul
mov
hlt
adc
dec
outs
cli
fistp
add
mov
adc
(bad)
mov
es
adc
stc
mov
jmp
cdq
and
ror
cmp
(bad)
bound
cld
cmp
sub
pop
xor
adc
aad
jp
and
ret
pop
cwde
xlat
in
jmp
or
adc
mov
inc
push
fld
mov
mov
push
(bad)
cmps
mov
(bad)
(bad)
sbb
clc
hlt
stc
push
(bad)
sbb
mov
mov
inc
nop
jmp
pop
mov
xchg
call
into
mov
dec
rol
stos
xor
gs
push
xchg
sbb
lock
add
addr16
pop
test
in
sub
fnsave
pop
cmp
inc
nop
mov
fwait
(bad)
outs
(bad)
mul
loopne
cmps
fldenv
mov
clc
inc
add
lods
adc
ret
adc
add
or
mov
(bad)
test
pop
mov
fadd
dec
mov
cwde
adc
rol
int3
adc
sbb
ret
inc
out
mov
mov
test
sub
xchg
repz
cmp
dec
test
sub
ja
(bad)
fisttp
test
adc
and
pop
mov
dec
in
jbe
adc
js
add
ja
outs
lea
push
repz
mov
cmc
xchg
(bad)
dec
imul
push
dec
mov
lds
popf
adc
jnp
lahf
inc
arpl
test
sbb
std
ja
sbb
pop
xchg
mov
xchg
das
pop
(bad)
daa
cmp
lods
stos
and
test
add
push
call
test
add
sub
das
popf
mov
scas
mov
ds
ins
cld
and
movs
and
aam
ficomp
movs
xlat
xchg
jno
jle
cmp
jb
and
fnsave
repz
fldcw
repnz
xor
fs
sub
mov
jo
idiv
pop
jmp
xlat
jl
push
test
fcomp
pusha
fadd
call
jno
int3
pop
loopne
mov
add
ret
add
jmp
jecxz
pop
sub
push
pop
loop
jne
push
test
mov
cld
mov
das
call
loopne
ss
sub
mov
lods
in
sub
push
push
cwde
rcl
adc
cmp
mov
(bad)
and
stos
cmp
repnz
fld
mov
add
out
xchg
js
int3
add
out
ror
dec
out
lods
sub
(bad)
fwait
jne
lea
fwait
movs
mov
retf
jmp
in
push
adc
mov
and
mov
cld
aas
lock
rol
lahf
push
or
lds
ja
mov
mov
retf
adc
push
aas
aaa
in
test
jle
cmps
dec
aad
dec
pop
xchg
push
lods
div
cmps
push
jmp
enter
fdivr
cmp
cmp
test
movs
push
enter
xor
dec
call
cmps
mov
popf
lods
mov
(bad)
jmp
xor
ins
pop
dec
push
cmp
jge
aad
push
cmp
fdivr
cmp
dec
mov
aad
cmp
les
stos
cwde
cwde
xchg
adc
sbb
fdiv
icebp
dec
sub
lods
jo
test
imul
push
xchg
or
call
ret
jb
imul
jae
or
gs
or
pop
sbb
dec
outs
or
jg
or
xor
mov
ja
inc
or
add
aad
out
sbb
inc
es
jno
adc
xchg
pop
cmc
test
mov
mov
xor
into
div
stos
cdq
adc
retf
enter
cmc
jle
or
dec
xchg
xor
mul
mov
xchg
popf
fidivr
retf
rcl
ja
xchg
cld
(bad)
jl
xchg
fidivr
arpl
int3
push
jmp
jg
ror
mov
mov
ins
push
rol
jecxz
push
cld
ret
dec
push
mov
jae
scas
jno
scas
and
jl
shr
icebp
mov
pop
sahf
add
jns
scas
(bad)
jae
xor
push
test
dec
clc
in
push
adc
xlat
or
mov
mov
(bad)
rol
bound
test
mov
sbb
fld
popa
arpl
cdq
(bad)
push
sbb
jbe
stos
sub
mov
(bad)
jmp
rcr
(bad)
icebp
cmps
call
aam
pop
daa
mov
jl
cmp
pop
sub
cld
xchg
(bad)
pop
mov
cmp
and
repz
lahf
in
sub
or
bound
(bad)
mov
daa
dec
sub
cwde
outs
cmp
mov
(bad)
push
xchg
jp
jecxz
inc
inc
mov
pop
push
add
pop
aam
cmp
jge
jo
push
xor
push
push
sti
popf
sub
inc
dec
arpl
test
out
push
pop
push
dec
add
arpl
jae
call
inc
enter
inc
dec
pop
movs
add
retf
add
jle
pop
push
push
jl
enter
fisub
push
stc
cmp
mov
jbe
imul
inc
in
(bad)
lods
dec
lgs
bound
lea
xor
sets
pop
aad
outs
inc
js
sar
ss
mov
jg
sbb
cmc
ret
mov
inc
dec
cmp
clc
arpl
xor
ret
lods
adc
stc
sub
lods
pop
aad
jno
nop
mov
cmp
mov
inc
and
cmp
cmc
mov
xor
pop
push
mov
pop
repz
div
pusha
test
jmp
add
in
mov
jnp
mov
and
sub
and
cld
push
out
mov
jb
xor
mov
mov
adc
retf
mov
jae
stos
addr16
pop
pop
mov
adc
push
aas
div
mov
addr16
push
sub
push
adc
mov
js
mov
jmp
pop
pop
pop
in
sub
mov
fimul
mov
rol
cmp
int3
ss
push
jne
(bad)
adc
retf
test
icebp
stc
shl
mov
xchg
sub
mov
fcom
add
pop
xchg
adc
dec
call
xchg
and
push
(bad)
in
jmp
sbb
hlt
jle
pusha
les
rcl
mov
sub
jl
xchg
xor
mov
test
das
mov
sbb
sbb
(bad)
mov
movs
sti
cmps
cmp
std
test
jp
imul
mov
in
dec
xor
imul
enter
fst
add
jecxz
jge
push
(bad)
fldenv
mov
test
mov
adc
cmp
add
fist
rcr
stc
(bad)
mov
push
popa
cmp
call
push
push
dec
cmp
bound
jl
push
lea
add
int3
lea
sub
(bad)
stos
fs
pop
pop
mov
adc
in
test
inc
popf
into
adc
imul
mov
movs
imul
jbe
push
dec
cdq
gs
ins
cld
sbb
call
(bad)
outs
jl
pop
and
add
test
add
out
iret
and
cli
les
mov
cmp
lods
xchg
inc
loop
leave
in
jo
fisubr
dec
outs
test
call
dec
add
std
sub
mov
add
dec
aaa
xchg
leave
sbb
fsub
cmp
ins
or
dec
leave
inc
mov
arpl
pop
test
cmp
and
icebp
call
dec
call
sub
xchg
ins
imul
sbb
lock
sub
mov
xlat
jbe
inc
pop
mov
mov
adc
dec
mov
mov
and
sbb
cld
out
sbb
jg
imul
mov
dec
lods
test
mov
mov
cmp
(bad)
rcl
push
xchg
or
in
inc
adc
dec
std
ja
dec
dec
xchg
pop
cmps
jno
and
loop
fdiv
(bad)
and
popf
aaa
cmp
in
cwde
sbb
dec
retf
push
mov
mov
sbb
aas
sbb
mov
xchg
mov
mov
outs
add
mov
out
and
cld
add
add
sub
(bad)
adc
pop
dec
ror
and
fucomi
in
sbb
jp
dec
aad
pusha
cmps
lods
xchg
leave
stc
std
cli
les
dec
fsubr
pop
lea
stos
repz
mov
adc
pop
jo
or
pop
mov
cmps
movs
mov
mov
xchg
addr16
xor
lea
sub
push
cdq
cmps
pusha
ds
inc
int3
sub
and
lods
out
xlat
popf
mov
fcmovu
jnp
aaa
ret
mov
push
fs
stc
add
aas
mov
mov
add
outs
dec
lock
mov
jmp
ins
jmp
lods
imul
jb
mov
pop
xchg
xchg
dec
in
mov
cs
pop
clc
cmp
aaa
mov
mov
sub
mov
ret
daa
mov
mov
stos
inc
nop
sub
push
and
jns
ins
loope
sbb
les
mov
pop
dec
shr
test
test
je
or
cmps
call
pop
lods
add
push
mov
jmp
xchg
dec
mov
shr
jle
sub
xor
mov
pop
dec
sbb
fs
dec
push
jmp
xchg
pop
loope
push
cmc
jg
inc
jno
adc
in
sbb
xchg
and
push
push
pop
call
xor
jne
cmp
fwait
dec
leave
xor
stos
iret
ins
fisub
daa
call
jmp
jno
jmp
test
(bad)
(bad)
and
test
jo
inc
loope
and
cdq
xchg
(bad)
mov
xlat
sub
xchg
fucomip
out
test
(bad)
int
jge
das
push
xchg
sub
inc
xor
jl
enter
add
es
jmp
dec
ja
add
stos
aas
cmp
aaa
xor
(bad)
or
cmps
xchg
leave
push
xor
sub
das
shr
jg
dec
sbb
and
ins
ja
mov
add
daa
jo
daa
adc
sbb
jmp
mov
inc
inc
(bad)
cs
dec
sti
pop
fdivr
mov
dec
in
clc
fwait
sbb
jb
jg
mov
imul
inc
aaa
mov
cmp
jo
pusha
outs
mov
out
pop
cwde
arpl
inc
cmp
int
jg
fdiv
arpl
push
out
cli
xor
shr
arpl
inc
cmp
sbb
adc
jnp
cmp
(bad)
aas
dec
ins
jl
sahf
and
xlat
arpl
(bad)
call
in
test
inc
jo
jbe
sar
mov
daa
repz
int
cs
test
mov
jo
jge
add
(bad)
push
mov
test
clc
push
inc
jns
mov
sar
jmp
sbb
push
das
ins
push
adc
scas
sbb
inc
jne
retf
inc
pop
add
cld
and
mov
call
ret
dec
movs
sub
fst
jbe
pusha
jmp
jmp
push
jge
clc
push
fsub
pushf
dec
add
lods
mov
scas
rcl
repnz
mov
jmp
(bad)
cmps
dec
jno
sbb
test
pop
repz
and
dec
sbb
hlt
nop
xor
mov
mov
(bad)
add
lods
add
or
lea
shl
adc
sbb
iret
add
retf
and
jns
mov
or
fwait
mov
les
mov
xor
aam
push
lods
int3
ds
push
sub
out
sbb
jmp
lock
ss
cmp
mov
xchg
cmc
cmp
adc
loop
jl
adc
fsubr
mov
sar
lock
mov
hlt
in
push
mov
cmc
sub
mov
dec
les
stc
jle
dec
test
aaa
push
sbb
or
js
sbb
inc
mov
pop
lods
loope
push
mov
icebp
jge
xor
mov
cmp
xchg
addr16
pop
loop
sbb
dec
lods
sar
les
sar
mov
xor
pop
js
fld
jno
icebp
pop
cli
adc
loopne
in
retf
xchg
xchg
aam
push
imul
icebp
pop
js
inc
(bad)
xor
scas
or
xchg
retf
and
cmps
sub
jno
cmps
clc
(bad)
dec
jp
sub
bound
loopne
sar
ja
dec
sub
test
aaa
jnp
cmp
mov
cmc
inc
dec
sysret
mov
and
xchg
cmp
push
jmp
pop
loope
cmp
mov
sub
pop
inc
cmc
sbb
xlat
arpl
cld
test
daa
addr16
push
bound
and
jns
je
jbe
sahf
push
mov
add
ds
add
mov
jg
rol
inc
cdq
fsubp
mov
and
pop
test
cdq
hlt
xchg
loop
jo
out
out
stos
sahf
or
push
mov
mov
fadd
mov
push
mov
jecxz
jmp
in
jl
test
mov
fidiv
mov
nop
sbb
inc
push
mov
mov
cmp
fcmovnu
rol
sub
push
lock
pushf
sub
or
pop
and
cmp
dec
out
imul
mov
mov
mov
xchg
movs
idiv
push
jnp
mov
(bad)
sub
add
sbb
std
cli
xor
and
or
adc
stos
push
pop
cmp
pusha
in
in
in
or
call
xchg
dec
mov
cwde
sbb
sub
cmps
jecxz
and
jno
arpl
aad
jne
jb
repz
xor
fist
xchg
mov
jae
cld
ss
jae
pop
rol
mov
stc
and
xor
cmc
fiadd
mov
imul
ficomp
mov
inc
push
jmp
jecxz
aaa
(bad)
outs
les
jg
xchg
and
js
pop
pop
test
pushf
retf
or
mov
push
test
sar
fucom
cs
lahf
mov
call
pop
hlt
inc
mov
in
inc
rcl
xchg
es
fwait
inc
sbb
call
inc
sbb
inc
pop
hlt
cwde
out
adc
std
inc
pop
ja
addr16
fisub
add
or
lea
ror
pop
pop
aas
lods
in
loope
loop
sbb
jmp
out
les
pop
mov
iret
xchg
(bad)
sbb
mov
sbb
push
fwait
enter
int3
leave
test
movs
jns
inc
xchg
int3
xchg
xor
inc
add
jmp
jp
or
(bad)
in
mov
in
rcl
repz
stc
dec
mov
(bad)
mov
add
or
push
xor
into
and
aam
stos
push
xor
xchg
mov
jl
sub
xor
and
out
or
inc
std
out
fdiv
pop
leave
cli
lahf
sub
cwde
repz
xor
sub
dec
stos
ss
out
xchg
mov
mov
or
popf
ss
sub
leave
test
jge
push
cmp
jns
push
inc
jge
pop
fild
inc
mov
(bad)
inc
sub
fimul
sub
sub
(bad)
sahf
daa
stc
sub
inc
ret
push
ret
imul
jmp
clc
adc
dec
mov
loop
cmp
sub
clc
add
pop
repnz
jbe
in
call
cmp
das
cs
mov
mov
and
add
leave
iret
lds
jl
in
inc
mov
lds
fist
xor
aam
jmp
(bad)
rcl
imul
adc
xor
push
ds
int
cld
ins
or
cmp
sbb
sbb
fisttp
push
or
pop
in
push
sbb
fcom
das
sub
ret
jp
(bad)
les
jne
dec
cmp
loope
sub
jmp
into
mov
aaa
loope
xor
stc
clc
test
ret
cmp
cmps
jl
mov
and
mov
test
sbb
cs
cli
mov
dec
adc
xlat
mov
dec
imul
test
sub
mov
int3
xor
fistp
cmp
push
pop
cmp
add
mov
mov
jns
push
xchg
sub
out
rol
popf
fisubr
pop
pop
pop
loop
shl
lahf
push
cmps
movs
mov
add
movs
iret
call
xor
inc
push
push
xchg
scas
mov
sub
daa
retf
iret
pushf
cmp
test
hlt
pop
adc
mov
in
ret
pop
(bad)
jbe
fs
jae
lahf
xchg
jne
popa
cwde
push
push
adc
mov
aad
popa
loope
inc
icebp
cli
lahf
(bad)
bound
mov
add
mov
clc
sbb
repz
pusha
add
jp
repz
or
inc
clc
dec
push
cmp
inc
icebp
pop
mov
push
cmp
pop
sbb
or
push
push
or
mov
lahf
xor
es
call
stos
pop
sub
xor
xor
aas
(bad)
ins
jno
stos
xchg
imul
mov
(bad)
iret
dec
test
pop
stos
lea
dec
jge
fs
jg
mov
jae
stos
push
inc
mov
cdq
cmp
mov
pop
mov
xor
sar
into
test
hlt
test
sbb
retf
xchg
popf
push
clc
cmp
jmp
sbb
(bad)
in
stos
and
xchg
inc
lahf
je
dec
inc
pusha
adc
leave
mov
imul
mov
adc
test
xor
test
dec
sbb
push
nop
ins
ror
(bad)
das
or
jnp
cwde
pusha
and
in
std
call
inc
daa
das
clc
cwde
ret
push
js
ins
outs
xchg
movs
mov
add
imul
inc
clc
sahf
xchg
jmp
repz
and
sbb
jne
outs
cmp
popa
out
sbb
mov
pop
or
fdivr
(bad)
pop
push
leave
xchg
ffree
sbb
jnp
pushf
bound
nop
inc
or
stos
add
sbb
sbb
(bad)
xchg
outs
inc
popa
fimul
(bad)
push
add
rol
sbb
sub
(bad)
(bad)
jg
clc
cs
xor
jecxz
mov
sub
pop
fsub
outs
into
cmp
call
mov
or
not
cli
cli
(bad)
xor
mov
mov
jmp
neg
xor
push
push
cmc
cmps
shr
mov
js
add
hlt
ja
and
mov
nop
cwde
or
in
pop
imul
jae
fwait
jo
fst
call
sub
daa
retf
bnd
jle
add
sbb
test
xor
ds
call
mov
(bad)
mov
test
ss
xor
push
mov
sahf
hlt
mov
cmp
jp
cmp
mov
xor
mov
and
inc
stos
in
pop
lds
dec
retf
fist
cwde
mov
daa
mov
xor
ret
jne
cwde
gs
xor
idiv
and
aaa
mov
lea
mov
mov
jb
sahf
gs
and
pop
or
push
mov
dec
cmps
icebp
add
lds
and
into
fucom
mov
dec
or
test
retf
stos
mov
lods
xchg
int
je
or
pop
add
int
adc
mov
mov
loope
shl
mov
fstp
and
movs
mov
or
and
mov
mov
fsubr
jl
int
ins
clc
inc
fisub
or
mov
es
repz
scas
icebp
das
sbb
xchg
stc
clc
mov
or
shr
imul
call
(bad)
pop
xor
rol
sbb
int3
cmp
les
lea
add
(bad)
in
pop
shl
aaa
les
(bad)
ss
and
mov
fild
push
shl
(bad)
pop
dec
or
in
int
mov
lods
xchg
sub
push
jmp
mov
mov
stos
dec
mov
je
push
paddd
xor
dec
cmp
imul
inc
cdq
pushw
scas
(bad)
(bad)
or
call
arpl
(bad)
scas
adc
hlt
sub
pop
sub
in
sahf
inc
add
test
in
shr
push
add
aad
xchg
gs
jecxz
ret
xlat
mov
ins
cwde
mov
jl
ds
pop
movs
popf
dec
jecxz
shl
xor
pop
jno
sbb
repz
gs
push
test
int
adc
add
push
scas
push
adc
inc
(bad)
clc
cld
mov
mov
jl
cmp
mov
ss
lahf
inc
je
(bad)
mov
pushf
(bad)
sub
mov
movs
cmps
xor
cmps
jae
xor
pop
xchg
into
mov
cmp
pop
jne
dec
movs
mov
mov
mov
adc
(bad)
sbb
add
sbb
dec
int
or
(bad)
mov
dec
jmp
and
sbb
push
jl
add
lods
fadd
bound
mov
adc
push
dec
test
(bad)
popa
dec
shl
pop
jbe
out
xor
jg
jg
push
mov
fldenv
mov
adc
cmp
clc
stc
mov
xchg
popa
mov
push
lods
push
(bad)
jmp
adc
cmp
aas
mov
mov
push
or
or
ins
loope
xor
into
repnz
xlat
adc
cmp
test
cmp
cmps
js
in
data16
lods
sbb
dec
popf
jge
pop
out
xlat
jp
xchg
mov
pop
imul
cmp
call
push
ins
or
push
dec
xor
jnp
adc
call
or
test
outs
test
inc
mov
mov
or
xchg
add
shr
out
test
or
pop
(bad)
sbb
out
sbb
in
adc
mov
sub
sbb
aad
movs
std
xchg
leave
lds
inc
lods
jl
in
push
push
xor
xchg
test
pushf
add
xor
adc
in
jecxz
jb
mov
adc
and
fmulp
cwde
test
loop
dec
mov
es
fild
cmp
mov
mov
es
sub
dec
or
mov
arpl
out
add
xchg
xor
jmp
sub
xchg
loopne
ret
xor
sub
scas
(bad)
cmps
sbb
sub
inc
push
xchg
fisub
les
mov
loope
jns
paddb
fnstcw
pop
data16
jge
adc
mov
or
(bad)
push
neg
(bad)
sbb
pop
rcl
mov
stos
push
sbb
mov
mov
stc
pop
xlat
xchg
sub
fcmovu
sub
dec
jecxz
(bad)
jle
mov
or
test
repz
(bad)
sub
(bad)
outs
mov
aaa
xlat
in
dec
ins
stc
cmp
out
xlat
cmp
into
mov
xchg
push
jne
add
mov
ins
cmp
xor
push
sub
jle
rep
pop
jecxz
test
in
shl
fdiv
outs
mov
out
loopne
sahf
push
mov
add
jo
ret
iret
jno
xchg
inc
sub
mov
jnp
popa
add
sbb
imul
retf
mov
gs
jne
add
mov
scas
stos
cmp
adc
lahf
rol
pop
outs
stos
(bad)
lods
test
in
xchg
ins
into
fsubr
ficomp
or
sub
pop
push
sub
adc
pushf
jnp
test
dec
inc
inc
and
imul
mov
cmps
les
lods
inc
jbe
int3
inc
les
mov
pop
lods
mov
mov
or
cmps
imul
adc
mov
leave
inc
xlat
add
(bad)
popf
and
bound
aas
shl
gs
je
packssdw
scas
std
clc
icebp
mov
sbb
push
call
pusha
mov
dec
inc
sbb
push
into
pop
dec
xor
out
fistp
xchg
iret
jle
je
popa
and
mov
jmp
xlat
sbb
les
xor
lock
xchg
(bad)
out
(bad)
xchg
in
jge
sar
rcl
(bad)
iret
cmp
inc
cs
popa
movs
xchg
lods
je
ins
cmc
sbb
mov
call
ds
xor
xor
movzx
cs
jl
arpl
icebp
dec
jns
mov
lds
dec
inc
pushf
pop
aas
cmp
xchg
(bad)
sbb
mov
inc
mov
add
fstp
pop
adc
ds
shl
lds
mov
(bad)
dec
pop
mov
ss
jne
mov
in
jb
pop
sti
(bad)
cmp
and
pop
fsub
les
xchg
cdq
adc
loopne
addr16
and
and
cmp
adc
cdq
sti
or
mov
sbb
mov
lock
xchg
xor
push
sub
xlat
xchg
add
aad
cmp
scas
cmp
jno
dec
sbb
call
dec
xchg
push
sahf
adc
mov
out
bound
test
xchg
and
and
jae
sub
fstp
push
test
inc
test
ds
stos
dec
and
lock
cmps
shr
ret
push
pop
sbb
aad
or
pop
stos
sbb
je
les
scas
push
popa
repnz
aaa
adc
xchg
ins
or
div
xchg
mov
aad
sub
inc
mov
scas
push
sub
or
mov
jnp
jae
bound
data16
sbb
aad
ficomp
int3
cli
mov
mov
pop
pop
mov
xchg
clc
icebp
xor
hlt
dec
push
out
sahf
into
inc
jg
stos
mov
add
adc
cld
cmc
inc
dec
adc
sar
sahf
and
and
mov
inc
(bad)
mov
fucomp
daa
mov
xlat
cs
in
add
cs
xchg
or
pop
inc
in
std
mov
pop
(bad)
gs
adc
cmp
xor
sbb
cmp
cwde
mov
pushf
jge
out
ds
dec
ret
inc
mov
mov
fst
das
sub
push
cmps
cmps
jbe
xor
push
jmp
fcmovb
or
scas
stc
rol
or
jb
sbb
mov
scas
lods
(bad)
test
sub
push
scas
sub
fxch
sub
mov
push
xor
loopne
icebp
xor
movs
push
cmp
cmps
xchg
and
jmp
hlt
clc
(bad)
cld
sbb
jp
cdq
lock
daa
sub
cmps
repnz
sub
add
mov
pop
push
fsubr
(bad)
and
jp
lock
mov
aad
outs
xor
(bad)
out
sbb
push
xchg
daa
test
popa
jmp
dec
add
leave
xor
out
repz
out
clc
push
retf
dec
je
dec
sbb
lds
inc
addr16
fist
test
xchg
pop
fxtract
loopne
sar
inc
mov
sbb
cmps
sbb
inc
add
es
out
mov
pop
xor
jo
jne
push
and
hlt
xor
xchg
xor
or
pop
repnz
clc
sbb
and
mov
or
ficomp
cmps
cmp
mov
jne
pop
xchg
retf
push
dec
mov
push
sub
push
imul
call
dec
adc
jg
xchg
cmp
mov
icebp
in
pop
lock
and
jmp
cwde
in
cmps
sub
mul
cmp
pop
ret
dec
mov
movs
pop
(bad)
push
jns
lods
jmp
fwait
jmp
and
fs
mov
inc
call
adc
cmp
jecxz
pop
jmp
out
test
and
rcl
jp
movs
xchg
in
adc
cmp
mov
in
loop
sbb
shl
daa
aam
std
test
add
and
aam
add
sub
fild
mov
sub
sbb
call
sahf
retf
mov
in
jae
ficomp
hlt
push
popf
(bad)
int
shl
inc
fld
push
cli
sbb
imul
push
sub
mov
loop
pop
(bad)
mov
retf
inc
cmp
xor
add
mov
pop
je
dec
sub
stc
mov
aas
arpl
scas
(bad)
push
push
lds
loopne
and
inc
js
frstor
hlt
stos
in
fdivr
mov
or
jge
xchg
inc
jb
in
je
shr
int
leave
mov
jo
popf
pop
fwait
shr
cmp
ror
sbb
mov
pop
(bad)
mov
mov
dec
(bad)
test
xchg
mov
movs
cli
sar
sbb
jne
adc
push
call
addr16
sub
gs
movs
mov
mov
(bad)
and
xchg
push
mov
dec
or
mov
aad
mov
jb
mov
(bad)
mov
or
mov
jmp
jp
cmc
test
push
xchg
repz
bound
sbb
jmp
mov
fistp
mov
pop
sbb
cs
popa
and
sub
popa
jl
adc
bound
inc
pop
mov
dec
fdivp
aaa
(bad)
rol
mov
rcl
shl
jg
and
out
retf
add
sbb
sbb
popa
test
mov
mov
dec
xchg
push
mov
xor
pusha
or
push
xchg
call
jne
mov
cmps
xor
rcl
jg
and
sub
dec
fcmovnu
pop
sbb
pop
outs
out
pop
ror
sub
cmp
ds
movs
or
mov
jecxz
inc
das
cwde
xlat
rcr
mov
sub
push
retf
jge
pop
test
mov
mov
mov
sbb
lds
jp
stc
pusha
iret
inc
adc
movs
add
bound
and
jmp
mov
mov
je
push
inc
in
adc
out
push
sar
cmp
adc
hlt
xchg
or
jno
adc
loop
js
jnp
test
pusha
sub
dec
dec
mov
imul
mov
and
call
jmp
(bad)
(bad)
cmp
(bad)
xchg
aam
mov
(bad)
out
push
jp
or
xor
fmul
pop
add
xchg
dec
adc
sbb
in
xor
mov
lea
jne
dec
mov
push
push
sbb
lds
lods
or
sub
aas
fist
xchg
stc
and
in
inc
pop
cmp
repz
jno
jae
pop
(bad)
into
scas
lods
fwait
out
ins
push
sub
jg
mov
fisub
jecxz
adc
xchg
icebp
movs
sub
hlt
sub
inc
pop
(bad)
add
mov
test
rcr
imul
dec
ficomp
call
lea
lock
icebp
or
loopne
mul
imul
test
cmp
or
in
in
pusha
cli
psllw
add
sub
mov
aad
or
int
jmp
out
and
mov
aaa
dec
fsub
mov
jecxz
fdiv
sub
mov
(bad)
std
inc
outs
push
retf
xor
adc
jl
je
and
push
push
outs
outs
and
ins
inc
or
pop
jmp
cs
push
cwde
mov
pop
cmp
mov
pushf
inc
sbb
cli
ret
retf
sbb
div
add
sub
add
pop
call
nop
outs
adc
out
xchg
mov
sub
(bad)
jo
pop
add
scas
inc
xchg
push
pop
(bad)
fscale
into
loope
movs
and
push
or
ret
mov
mov
pop
inc
lods
jl
xor
js
inc
enter
ja
imul
nop
push
inc
jo
sub
pop
cmp
(bad)
or
mov
dec
pop
or
lock
test
xor
mov
cmp
xlat
sub
xor
jp
fdivr
sahf
or
mov
mov
int
push
addr16
sbb
ss
xlat
jns
sar
fnstcw
mov
jnp
fistp
pop
push
cld
aam
mov
mov
sub
hlt
loop
and
cmps
mov
dec
aaa
out
jp
add
dec
pop
mov
cmps
jecxz
adc
add
sahf
repz
js
xchg
or
dec
fisub
dec
push
cmp
in
jne
xor
in
inc
je
je
stos
in
xchg
mov
retf
push
test
jno
cmp
ret
div
test
inc
mov
xor
pop
int3
and
xor
jmp
retf
sbb
ret
in
add
inc
pop
sub
fimul
jnp
test
sti
in
sbb
ss
adc
jmp
(bad)
lahf
mov
fwait
and
stos
mov
pop
js
dec
test
sub
clc
sub
mov
add
sub
push
sub
scas
dec
sbb
lds
push
sub
leave
addr16
sub
add
scas
gs
jg
cmp
jne
mov
ror
mov
and
dec
push
lea
lea
scas
stc
inc
inc
movs
sub
jp
sub
fnstcw
lea
out
mov
mov
xor
mov
mov
dec
push
dec
jae
and
mov
out
xchg
int3
out
jo
movs
mov
(bad)
xlat
mov
addr16
sbb
mov
and
and
mov
mov
adc
sbb
add
push
push
sub
jno
test
mov
cmp
lea
mov
adc
pusha
dec
int
pop
test
add
(bad)
loopne
or
xchg
test
mov
inc
(bad)
and
jmp
mov
sbb
fs
ja
push
(bad)
stc
clc
test
or
es
sub
dec
or
xor
js
fdivr
pop
(bad)
iret
cmp
xor
rol
sbb
nop
test
mov
push
push
sbb
test
les
loopne
data16
cs
outs
pusha
pusha
ret
adc
shl
dec
mov
add
cdq
push
std
sbb
cdq
xchg
add
int
mov
jmp
xor
fld
add
sbb
dec
push
pop
aam
mov
sbb
clc
pop
sbb
push
jg
push
sub
loop
xchg
push
retf
mov
mov
jo
sar
push
cmp
adc
pop
mov
cmps
pusha
shl
inc
push
and
push
arpl
mov
and
mov
cld
rcr
mov
mov
(bad)
loopne
mov
fsubr
ja
mov
inc
pop
xor
add
jl
sbb
pop
cmp
int3
mov
mov
inc
jo
cmp
mov
sub
xor
mov
dec
sti
sar
or
dec
dec
scas
lds
push
mov
lds
xchg
sahf
sti
sahf
inc
mov
bound
dec
sub
into
inc
stc
gs
fs
xchg
jno
enter
add
xchg
mov
or
inc
adc
jle
icebp
or
mov
scas
clc
sbb
call
lea
aas
xor
in
sub
xor
movs
xchg
adc
scas
inc
cmp
push
(bad)
outs
and
pop
sbb
in
xchg
dec
push
or
mov
ret
cwde
dec
xchg
movs
lock
mov
jo
and
ficom
fild
das
pop
mov
lahf
mov
pusha
cmps
pop
test
lahf
mov
arpl
cmps
shr
sub
or
or
push
sub
mov
cmp
sbb
and
xor
inc
mov
jnp
lahf
or
adc
int3
push
shl
popa
test
jmp
adc
cmp
mov
movs
inc
push
xchg
or
bound
cmc
xor
stos
pop
stc
pop
cdq
and
xor
test
cmp
mov
mov
retf
mov
ret
test
call
shl
stos
cmp
bound
mov
dec
pop
jnp
call
mov
cmp
cmp
stos
scas
push
pop
pushf
pushf
mov
xor
sub
pop
mov
push
stos
adc
scas
dec
mov
js
inc
sub
in
ror
js
shl
pop
push
xchg
pop
sub
push
xor
mov
jp
xchg
mov
das
push
cmp
shr
mov
inc
fcomp
or
dec
test
out
cmp
retf
sub
ins
in
dec
sub
sbb
shl
clc
test
rcr
add
fist
inc
pop
mov
mov
mov
mov
cld
pop
inc
into
inc
imul
aad
loope
jno
mov
popf
mov
(bad)
cmp
ret
xchg
jbe
lea
cmp
sbb
or
cmp
cs
out
ja
mov
pop
pop
or
pop
es
inc
xchg
out
push
(bad)
cmp
std
dec
jnp
retf
mov
out
shr
sub
xchg
mov
rcr
ss
sar
(bad)
xchg
push
and
pop
sbb
ror
push
clc
or
mov
jmp
push
out
mov
push
push
ja
xchg
fnstenv
jge
push
inc
scas
lods
xchg
outs
nop
popf
int3
or
cdq
push
cmp
popf
loope
push
aaa
fiadd
mov
adc
clc
xchg
cmp
retf
fmul
test
aaa
jle
shl
(bad)
push
pop
retf
popa
and
mov
inc
ins
sbb
jns
adc
cmc
call
adc
cld
push
in
sbb
xchg
iret
pop
sbb
movs
jb
mov
cdq
sub
jg
stc
sbb
lahf
cmps
aam
stc
movs
push
cmp
fadd
cld
addr16
sub
popa
jge
fistp
ins
mov
cld
std
fidiv
adc
pop
fucomp
and
popf
movs
ins
fistp
adc
aas
mov
rcr
int
fs
and
jmp
inc
scas
adc
test
push
mov
hlt
sub
mov
jnp
adc
out
push
xchg
and
(bad)
push
pop
pop
mov
jle
outs
sub
scas
pop
xchg
arpl
mov
mov
faddp
lahf
add
lods
(bad)
fwait
bt
xchg
xchg
stc
imul
inc
fild
gs
dec
pop
adc
xchg
sbb
xchg
xlat
dec
aam
mov
mov
push
das
aam
mov
imul
(bad)
(bad)
sub
int
dec
call
ja
movs
mov
aaa
dec
jo
cmps
addr16
sub
xchg
jo
ficom
ffree
inc
(bad)
xchg
shl
aam
sbb
jle
loopne
ds
mov
jae
sbb
scas
sbb
xlat
cs
xchg
cmp
sub
movs
popf
xor
call
repnz
and
pop
imul
rep
sar
es
in
pop
int3
rol
adc
loop
test
retf
in
and
fs
dec
dec
mov
dec
call
xor
into
hlt
ja
push
imul
lahf
xor
xor
stos
aaa
push
and
inc
dec
imul
popf
test
cmp
mov
mov
and
pop
or
sbb
sub
push
vmovss
pop
ds
mov
(bad)
les
inc
add
pop
aaa
scas
test
sub
mov
jl
pop
data16
rol
aaa
cmp
ins
mov
push
jo
sbb
cmc
imul
jl
push
push
and
(bad)
les
and
mov
out
(bad)
push
hlt
sahf
addr16
mov
and
aas
push
fiadd
fcom
out
(bad)
call
call
adc
(bad)
push
mov
push
push
sbb
mov
dec
push
or
sar
dec
mov
cmps
std
sub
int
ffreep
add
in
call
cmps
aam
shl
popa
adc
jmp
stc
fsubr
and
or
aam
xor
mov
ins
or
inc
adc
push
call
sbb
xchg
jl
sbb
sub
push
dec
mov
jl
sub
out
(bad)
fiadd
adc
mov
cmp
dec
cmp
fcomip
lea
and
das
loop
xchg
mov
adc
push
and
imul
psllw
sti
aad
clc
jbe
mov
sbb
arpl
stos
push
(bad)
fild
sbb
adc
out
jbe
inc
out
xchg
test
dec
cmp
pop
inc
retf
jge
and
push
push
jbe
jp
nop
or
jno
and
inc
and
movs
xchg
outs
(bad)
jle
adc
and
fdiv
pop
add
leave
adc
lods
sbb
mov
gs
es
loopne
int3
jnp
xor
popf
xor
jecxz
pusha
call
dec
push
les
and
push
inc
xchg
fcom
arpl
jmp
call
ret
lea
mov
pop
das
ds
xor
sub
mov
xor
inc
bound
push
sub
hlt
xchg
sbb
xchg
icebp
xchg
sbb
ret
xlat
inc
mov
pop
imul
inc
cmp
inc
aaa
jns
xchg
push
stos
sbb
sub
push
jne
pusha
xchg
ror
loopne
mov
or
sub
mov
dec
fbld
call
dec
add
mov
xor
call
aaa
sbb
or
push
cmp
lea
bound
call
mov
movs
and
adc
xor
mov
jmp
ret
xor
aas
push
pop
js
das
pop
pushf
int3
scas
lods
mov
and
mov
sub
mov
sbb
adc
ss
jg
push
in
adc
adc
add
in
jmp
iret
ins
movs
xchg
cld
mov
mov
lds
fsubp
mov
push
out
dec
jbe
in
mov
int3
cmc
retf
xchg
test
mov
addr16
pop
pop
sbb
dec
lahf
sbb
sbb
sbb
imul
nop
pop
pushf
pop
xchg
push
pop
jbe
scas
cli
(bad)
shl
mov
out
stos
xor
pop
cmps
jno
or
imul
sbb
neg
imul
adc
iret
das
push
mov
out
jb
cdq
es
std
aam
dec
sub
sti
cdq
inc
fiadd
push
adc
sub
out
inc
mov
iret
aad
xchg
cmp
pop
in
cwde
movs
cwde
je
(bad)
dec
sti
in
dec
mov
aas
push
cmps
push
lods
lods
mov
or
or
outs
cdq
fnsave
push
add
or
ret
sbb
fild
mov
and
mov
arpl
not
mov
leave
clc
xor
push
lock
fidivr
stc
aam
lock
pop
stc
mov
push
mov
jb
in
or
icebp
ins
sbb
and
adc
jae
inc
sar
adc
fmul
adc
and
ret
enter
dec
ss
ins
rcr
xor
or
arpl
repz
add
mov
pop
lock
lahf
popf
fldenv
addr16
fidivr
js
xor
enterw
retf
xchg
shr
add
montmul
cmps
add
dec
mov
int3
pusha
or
jns
pusha
mov
xchg
call
jnp
stos
jmp
xor
sahf
jbe
mov
sub
mov
cmp
add
fistp
jp
xchg
mov
dec
xchg
xor
mov
inc
add
das
dec
idiv
imul
pop
mov
pop
push
cmp
call
cld
jle
retf
fild
leave
in
mov
data16
push
jmp
sbb
jnp
and
add
push
xchg
or
out
and
mov
push
mov
ret
sbb
jmp
mov
and
sahf
pop
idiv
jge
dec
or
cmc
mov
pop
inc
test
inc
aaa
cmp
and
xchg
add
mov
xchg
xchg
out
mov
movs
and
push
mov
sub
cld
push
adc
data16
lea
(bad)
add
xor
movs
push
mov
adc
push
dec
test
push
movs
xor
push
adc
ficomp
shr
mov
retf
(bad)
popf
push
cdq
pusha
add
cwde
mov
xor
arpl
shl
jmp
sbb
ss
int3
and
out
loop
aaa
(bad)
mov
sub
mov
sub
mov
pop
jge
pusha
sahf
push
mov
aaa
(bad)
sbb
inc
push
add
movs
mov
call
repz
iret
scas
pop
bound
test
lock
jmp
fnstsw
(bad)
sub
inc
cmps
fnstsw
hlt
cmovae
out
add
lods
int
xchg
pop
cmc
lahf
cmp
or
int
scas
stc
cmps
and
inc
sbb
test
or
fld
add
in
ror
test
lea
shl
rol
sub
dec
xor
inc
cmp
mov
gs
test
xchg
or
adc
mov
sbb
cli
lahf
in
push
mov
mov
call
cdq
arpl
sbb
pop
jo
hlt
sbb
loope
mov
xchg
cs
bnd
sub
dec
and
fistp
push
addr16
push
sbb
push
addr16
test
icebp
inc
stc
push
jmp
dec
loop
inc
es
pushf
cmp
ds
cwde
inc
jbe
cmp
stos
test
lea
inc
loopne
fcmovnu
loope
and
push
scas
mov
jb
jg
inc
and
ficom
cmc
repz
cmc
sbb
retf
adc
jne
js
inc
inc
scas
into
enter
aam
push
fs
aam
pushf
leave
or
xchg
cmc
lds
std
inc
jp
jle
(bad)
je
out
cld
or
aad
adc
sbb
mov
or
leave
dec
(bad)
shl
sbb
mov
jb
js
stos
das
(bad)
sub
mov
mov
mov
xchg
out
and
push
popf
sub
jno
xlat
sub
cmc
add
dec
and
test
imul
xchg
jle
sbb
cmp
mov
dec
push
mov
push
or
push
sbb
popf
or
icebp
int
iret
adc
mov
lods
jne
hlt
scas
push
ins
or
push
cmp
or
mov
int3
pop
pusha
push
enter
mov
rcl
cmp
addr16
mov
loope
jecxz
adc
mov
xchg
push
push
xchg
mov
dec
pop
test
mov
in
or
mov
cmp
xchg
sub
push
xchg
test
call
popf
cdq
cld
cld
dec
imul
(bad)
push
adc
mov
cmps
outs
jecxz
(bad)
outs
mov
jl
push
daa
nop
lods
jmp
and
icebp
xlat
mov
inc
and
inc
mov
and
mov
into
jo
out
sbb
and
outs
push
popf
rcl
in
fprem
mov
mov
and
dec
mov
jb
in
scas
sub
fild
sti
sbb
fstp
push
icebp
ins
repnz
daa
(bad)
aaa
sub
sbb
ror
jmp
ss
sti
xchg
xor
loop
jmp
into
adc
add
scas
mov
or
pop
push
cmp
aam
sbb
jne
int3
and
dec
jno
(bad)
aad
mov
inc
add
lock
stos
and
dec
adc
cmps
(bad)
mov
xchg
int
inc
inc
mov
loopne
mov
enter
mov
mov
cwde
cld
ja
call
xchg
mov
in
pop
repz
shl
jmp
sahf
ret
ror
cmp
ror
jnp
xchg
mov
into
jp
enter
ins
adc
or
mov
cdq
pop
scas
int
dec
popa
fs
push
and
std
ret
xchg
mov
outs
inc
dec
xchg
push
mov
leavew
mov
sub
out
sub
jmp
jg
cmps
ss
pop
and
sti
inc
add
hlt
mov
push
pop
or
mov
imul
sub
sbb
hlt
mov
and
push
jp
sub
pop
push
int
leave
pop
mov
xchg
daa
adc
xchg
mov
movs
sti
sbb
int3
popa
aaa
and
dec
and
xchg
shl
inc
adc
pop
and
inc
mov
mov
lahf
cmp
mov
or
mov
adc
int3
xor
out
ja
or
popf
xlat
mov
xchg
aas
sbb
mov
daa
mov
dec
imul
jno
pop
mov
je
lods
fwait
pusha
pop
sbb
mov
and
mov
sti
addr16
xor
das
mov
inc
mov
jp
mov
sub
aad
inc
lea
popf
dec
jno
dec
push
pusha
or
dec
xchg
pop
xor
mov
mov
ret
movs
jnp
out
pusha
adc
stos
jmp
cmp
jno
xor
ret
cmps
sub
retf
mov
jge
mov
sub
mov
mov
mov
retf
repnz
mov
push
mov
dec
inc
lods
leave
mov
push
in
adc
sbb
stos
cmps
or
lock
xchg
mov
jnp
sub
xchg
dec
xor
jbe
or
mov
pop
pop
adc
fld
add
mov
jne
jmp
xor
sub
add
push
test
imul
shl
data16
aam
sub
dec
nop
mov
pop
mov
or
and
outs
mov
retf
xchg
lods
in
je
push
bound
pusha
jnp
sbb
dec
mov
mov
(bad)
repz
add
push
push
loopne
push
or
lods
mov
pop
cmp
inc
dec
and
out
push
imul
ror
mov
jl
pop
and
adc
scas
adc
cmp
push
stos
sub
or
dec
repz
xor
and
push
je
nop
xchg
es
inc
sahf
push
pop
pushf
mov
xor
daa
mov
and
scas
inc
mov
and
ins
pop
std
pop
cmp
std
arpl
js
sub
stc
out
xchg
(bad)
(bad)
and
mov
jnp
ss
les
and
dec
loope
and
addr16
mov
push
(bad)
popf
or
inc
sahf
jo
rol
push
in
imul
or
pop
sub
or
xchg
push
outs
push
out
sbb
lahf
adc
sbb
hlt
rcr
jecxz
test
mov
push
test
and
add
mov
fsubr
loop
xor
pop
push
or
cmps
sbb
ror
adc
push
adc
push
(bad)
ja
aad
or
cli
stos
ror
sbb
in
aaa
fisubr
jo
xchg
xlat
or
xchg
xor
pushf
jb
int3
adc
cmp
and
pusha
xchg
xor
scas
data16
jmp
fistp
and
test
xchg
mov
scas
mov
push
(bad)
mov
mov
addr16
or
mov
outs
lock
pop
jle
mov
test
es
retf
inc
cmp
push
into
imul
fwait
ds
stos
mov
ja
xor
test
ds
xlat
add
aas
(bad)
out
out
dec
mov
xchg
adc
cmp
dec
xor
retf
adc
pop
sbb
dec
lods
sbb
xchg
mov
mov
and
sbb
mov
xchg
adc
xchg
xchg
dec
inc
pop
add
int3
mov
sub
jno
jo
pop
sbb
adc
adc
sbb
mov
cmc
dec
mov
aad
cmps
sahf
loopne
mov
jne
out
mov
jmp
xor
mov
mov
adc
jecxz
bound
test
mov
(bad)
sub
mov
inc
imul
pop
mov
leave
jmp
bound
xor
pop
mov
mov
add
cs
pop
xor
es
fdivr
sbb
in
and
cli
inc
js
ins
push
push
mov
inc
ret
lock
mov
jbe
gs
sbb
fld
cmps
sub
test
mov
lods
inc
inc
fbstp
(bad)
sbb
mov
loop
pop
jge
out
push
mov
fs
fstp
inc
pop
rcl
adc
fs
pop
das
push
mov
idiv
mov
out
das
xchg
xchg
or
nop
add
cmp
ins
push
stos
adc
and
push
sbb
nop
dec
add
pushf
sbb
sub
jg
push
sub
mov
lods
xchg
sub
mov
or
arpl
das
out
add
push
fmul
pop
out
hlt
pop
ins
imul
sbb
adc
mov
pop
mov
xor
pop
cld
in
dec
lahf
mov
fwait
std
pop
retf
adc
push
cdq
mov
push
into
add
ins
iret
addr16
ds
sti
sti
les
add
xchg
iret
loop
xchg
lock
jne
ja
js
popf
call
dec
cmc
outs
mov
adc
push
movs
adc
pushf
mov
jg
cwde
inc
inc
cmp
rol
pop
lods
mov
jp
jge
and
std
aad
sbb
push
adc
sahf
call
pop
mov
fstp
nop
push
mov
dec
leave
or
xchg
arpl
add
out
scas
call
(bad)
gs
mov
(bad)
aas
mov
and
aaa
mov
icebp
push
clc
jnp
jmp
adc
xor
or
jecxz
add
loopne
fxam
inc
loope
xor
aaa
fsubr
and
push
pop
sub
mov
cmp
aas
mov
mov
fsubr
aaa
aam
jl
pop
int3
xchg
jbe
cmc
mov
and
jecxz
scas
nop
lods
ret
and
mov
add
add
(bad)
lahf
xor
cmp
pminsw
aad
jp
mov
retf
push
mov
add
jp
test
aaa
icebp
popa
lock
lds
jp
js
push
imul
int3
pop
fcomi
je
repnz
dec
leave
jmp
jns
cmp
ins
or
rcl
pop
cmp
in
bound
jb
es
mov
jg
pushf
and
push
jge
pop
out
push
sbb
mov
mov
sub
shl
pop
jmp
jbe
sub
jmp
out
in
dec
sbb
mov
mov
in
call
mov
adc
and
push
mov
aad
sub
add
cmp
mov
mov
aad
cld
mov
repnz
push
mov
out
adc
mov
pop
gs
mov
aam
int
ja
nop
ins
jl
and
adc
icebp
pop
and
inc
das
bound
pop
jecxz
je
in
(bad)
sbb
int3
fld
mov
add
jecxz
popa
rcl
mov
cmps
mov
lea
xchg
sbb
mov
push
pop
js
fadd
or
add
clc
(bad)
jle
bound
add
pop
ins
xor
sbb
pop
push
jle
rcr
int3
xor
sahf
push
pop
pop
xchg
call
loope
mov
push
mov
sub
scas
fcomp
and
jns
mov
push
adc
cmp
cld
inc
add
sub
inc
mov
in
pop
mov
fs
jns
test
push
mul
imul
push
adc
ins
repnz
cmp
repz
mov
fwait
(bad)
push
rcr
mov
out
xor
daa
cs
fimul
cmps
xchg
sub
xor
cmp
sbb
out
inc
addr16
(bad)
jl
pop
push
mov
mulps
push
(bad)
out
push
push
and
pop
mov
outs
cwde
mov
cmps
cdq
push
xor
out
scas
mov
or
jo
test
int
mov
aam
adc
rcl
dec
lock
add
mov
xor
jmp
(bad)
mov
je
push
inc
xor
dec
jbe
push
and
mov
sbb
(bad)
imul
ds
imul
int
jnp
or
xlat
jne
cli
int
and
cmp
outs
push
popa
shl
aas
shl
inc
dec
inc
les
dec
scas
jl
stos
xchg
enter
div
loope
out
and
and
jmp
mov
jp
(bad)
pop
adc
bsr
stos
add
xor
pop
call
test
xchg
loopne
sbb
pop
mov
int
and
(bad)
lods
xor
les
and
movs
imul
(bad)
jecxz
cld
adc
jge
stos
mov
mov
sub
js
xchg
sub
mov
adc
cli
mov
push
jp
pop
or
push
sub
jg
or
mov
out
cmps
mov
jmp
or
dec
adc
cmp
sahf
hlt
add
push
fist
js
and
fcmovne
dec
push
add
fwait
lock
jl
mov
sub
test
xchg
in
mov
test
repnz
repz
adc
les
fild
ret
or
xchg
fisub
adc
mov
movs
add
stos
mov
xchg
rcr
pop
dec
ja
in
arpl
cmp
aam
iret
lods
stos
dec
retf
pop
(bad)
lods
pop
inc
pop
adc
call
dec
out
retf
mov
push
pop
sub
stc
dec
sub
stos
xchg
das
test
popa
push
sbb
hlt
and
mov
and
cs
imul
push
test
sbb
arpl
mov
sub
sbb
loope
xchg
mov
push
push
jno
pop
pop
mov
stc
push
movs
mov
jp
sbb
jns
push
dec
and
stos
cdq
push
xor
outs
or
aam
mov
scas
dec
outs
or
je
out
cmp
push
xor
lods
adc
jmp
sub
cli
sub
mov
retf
lods
rcr
mov
pop
inc
sub
mov
dec
aad
(bad)
pop
jno
or
in
sub
mov
pushf
or
add
nop
dec
shl
xor
jecxz
mov
pop
fidiv
mov
or
push
int
mov
ins
cmc
into
out
mov
inc
xchg
sub
test
ds
rcl
movs
das
lahf
mov
out
js
imul
out
ret
dec
sub
and
out
ret
adc
adc
ins
aam
fcmovnb
push
jo
xchg
pop
xchg
mov
stos
daa
fcom
imul
cmps
sbb
(bad)
repz
mov
cwde
sub
xlat
cmps
mov
aam
and
das
cmp
cli
int3
outs
jp
or
pop
pop
or
(bad)
adc
xchg
sub
mov
sbb
jecxz
add
adc
sub
push
inc
or
addr16
xlat
jg
push
inc
in
loope
sbb
pop
dec
dec
xchg
test
sti
cmp
mov
inc
mov
out
(bad)
pop
lods
jno
sar
jns
mov
jp
push
mov
scas
mov
inc
and
in
retf
retf
inc
dec
adc
pop
fnstenv
xchg
push
(bad)
sti
adc
aam
(bad)
and
xor
lock
ror
sub
xor
mov
adc
jmp
gs
rol
clc
xchg
fcomp
lock
pop
enter
fnsave
aad
and
pop
aaa
xchg
call
sbb
daa
ficomp
mov
lods
dec
enter
in
mov
or
das
add
(bad)
(bad)
das
dec
leave
push
mov
ins
mov
dec
scas
and
out
adc
xchg
les
(bad)
shl
pop
aad
pop
adc
push
das
inc
pop
iret
pusha
xor
jns
xor
mov
out
sbb
popf
jnp
loope
repnz
enter
pop
or
add
mov
sbb
nop
repz
and
xchg
inc
(bad)
sahf
es
loop
cmp
xor
test
inc
mov
cmp
pop
cmp
cmp
sub
push
jp
fs
adc
(bad)
(bad)
push
hlt
ret
or
rcr
cmps
jle
and
or
test
call
mov
rol
out
adc
dec
into
test
jl
pop
pusha
and
jns
adc
xor
pop
jmp
adc
adc
xor
adc
out
cmps
icebp
push
pop
inc
add
pop
stos
inc
ins
mov
fwait
(bad)
out
pusha
mov
jecxz
leave
clc
sbb
out
aas
je
sti
sbb
test
xor
add
hlt
test
stc
sbb
mov
add
inc
and
sub
hlt
lds
sub
daa
mov
gs
icebp
pop
push
adc
mov
push
mov
cs
ins
popf
pushfw
cmps
push
and
(bad)
push
cli
jmp
fdiv
mov
lahf
fwait
movs
outs
shr
jns
xchg
jmp
loop
dec
xor
add
and
lea
sub
xor
imul
fdiv
mov
sbb
mov
das
std
daa
popa
push
clc
scas
les
imul
xchg
pop
ja
push
lds
repz
sub
xchg
push
ficomp
and
inc
push
add
int
push
lahf
xchg
pop
mov
fs
xchg
cmp
aas
int3
fnstcw
mov
addr16
lods
movs
dec
test
or
lds
xor
div
leave
iret
xlat
dec
fldcw
out
stos
fdivr
lds
xchg
mov
mov
out
cdq
mov
inc
stc
aam
ret
in
and
inc
cmp
cmp
nop
xchg
mov
dec
adc
mov
out
cmc
(bad)
push
push
mov
or
mov
clc
int
push
daa
pop
or
aad
dec
mov
ins
mov
popf
pop
dec
(bad)
repnz
adc
jge
test
push
add
sub
ret
(bad)
push
fucomi
add
xchg
nop
or
cs
xchg
aaa
fnsave
jge
push
adc
add
cld
sub
pop
iret
and
push
(bad)
sti
inc
std
add
jg
mov
cmps
xor
inc
int
xor
push
jecxz
(bad)
(bad)
js
fwait
jge
push
fld
mov
push
shl
pop
cwde
mov
daa
inc
in
inc
retf
xchg
or
jns
mov
in
shl
xchg
inc
mov
jl
shr
mov
jmp
std
pop
mov
dec
mov
(bad)
adc
das
xor
add
out
pop
xchg
mov
pop
fsub
or
mov
iret
into
call
repnz
in
addr16
and
enter
rol
repnz
sbb
add
and
mov
aam
retf
inc
inc
loop
clc
retf
push
cld
(bad)
jo
mov
sbb
pushf
sub
lods
dec
ins
clc
or
test
and
add
sbb
ret
mov
or
mov
cmp
mov
addr16
in
jno
leave
xchg
test
xchg
sar
mov
and
adc
sub
popf
(bad)
les
mov
pushf
adc
(bad)
in
shl
fwait
lahf
or
cmps
lahf
jge
bound
rol
pop
sub
pusha
mov
dec
lahf
dec
cmp
mov
sbb
sbb
mov
cmp
fcomp
daa
popf
cmc
xlat
int3
adc
test
rep
mov
fwait
pop
and
cmp
jle
pop
adc
push
sbb
imul
pop
fcom
mov
cmp
mov
adc
lock
and
mov
enter
div
(bad)
xchg
pop
pop
add
test
rol
cdq
(bad)
sti
sbb
mov
retf
out
push
div
stos
mov
cs
cmps
push
xor
xchg
sub
dec
push
inc
mov
js
in
dec
mov
loop
cmps
fadd
sub
mov
stos
js
xor
out
cli
lea
pushf
add
add
iret
stos
sbb
ins
lea
or
inc
test
xor
gs
push
loope
test
ins
jb
inc
ficom
push
dec
xor
retf
cwde
ja
test
add
pop
int3
iret
inc
jae
xlat
rcl
sub
daa
(bad)
jle
adc
cdq
cli
cwde
in
call
cli
aaa
add
loopne
and
or
dec
sub
arpl
cmp
out
cmp
jb
mov
fcmovnb
sub
dec
rcl
ret
or
fcmovnb
mov
cmps
mov
or
cld
adc
nop
icebp
mov
xor
es
retf
pop
lds
xor
jg
xor
push
add
lods
cmps
icebp
loopne
pop
fsubp
in
in
sub
fs
loopne
inc
mov
inc
in
dec
movs
bound
aad
mov
xor
arpl
fisttp
lea
int
mov
fwait
repz
mov
lods
mov
dec
mov
inc
mov
popa
cwde
add
pop
fist
mov
xlat
stc
cmp
push
ds
xor
div
inc
mov
mov
jecxz
lods
imul
xor
jg
fdivr
outs
test
cs
(bad)
jmp
xchg
mov
ja
ret
dec
mov
movs
xor
adc
je
dec
cld
sub
(bad)
lock
dec
rol
aad
dec
or
hlt
movs
fidivr
mov
push
sub
call
movs
push
xchg
stos
mov
mov
add
mov
dec
cmp
mov
pop
cwde
out
push
lahf
cmp
loop
clc
fstp
outs
mov
push
fcomp
push
and
sub
test
push
dec
aam
pop
xor
fistp
(bad)
mov
imul
or
jns
sar
(bad)
popf
nop
shl
loop
cld
cmps
sbb
xlat
jg
push
ds
mov
fmul
fs
xchg
or
sbb
xchg
shr
push
test
enter
popa
mov
sub
adc
test
pop
jle
repnz
push
cmp
xor
lds
cld
popa
nop
and
xor
xchg
jbe
fsubr
mov
aas
cmps
mov
stc
sbb
xchg
pushf
sbb
push
mov
(bad)
sahf
enter
add
dec
test
and
jl
sbb
test
add
jns
stos
pop
inc
mov
imul
lahf
cmc
xchg
mov
ror
repnz
push
mov
push
movs
cmps
pop
add
add
sub
xlat
adc
out
inc
dec
mov
pop
scas
adc
cmps
cmp
mov
mov
dec
fld
jmp
inc
rol
cmps
pushf
xlat
inc
mov
addr16
inc
fldenv
inc
pop
cmps
inc
mov
pop
jns
pop
xchg
lods
popa
(bad)
iret
pusha
or
mov
out
mov
fwait
add
and
pop
or
out
sti
cmp
nop
and
aad
sbb
(bad)
pop
fnstcw
shl
inc
dec
jg
scas
stos
xchg
sub
sti
jnp
mov
scas
imul
pop
lock
jle
mov
xor
call
push
cmp
mov
cmps
sti
cmp
mov
cmc
into
out
adc
inc
dec
and
dec
cld
(bad)
mov
jmp
sahf
sbb
mov
sub
mul
mov
inc
jae
jmp
aaa
aad
sbb
cmc
and
aam
daa
or
fadd
in
inc
cmp
pop
xchg
enter
push
adc
(bad)
jg
and
call
sub
je
sub
xchg
in
push
pushf
pusha
mov
mov
(bad)
jno
ds
sbb
jno
rcl
sti
cmps
outs
ds
or
mov
adc
les
shl
add
pop
pop
in
loop
cdq
and
lea
inc
mov
dec
imul
ins
iret
cmp
hlt
jg
xor
add
sbb
sub
push
pop
jns
jb
stc
ins
rcr
xor
test
imul
rol
xor
xchg
daa
dec
jbe
xchg
jo
mov
stos
dec
sahf
mov
pushf
(bad)
sub
mov
cmp
loope
(bad)
fst
push
movs
sub
out
(bad)
sub
xchg
leave
enter
clc
stos
cmps
int3
call
hlt
push
(bad)
sbb
sub
lahf
inc
scas
bound
and
push
imul
dec
mov
cli
and
add
ret
mov
adc
fimul
add
cwde
cmp
call
jg
pop
dec
pop
add
add
sbb
fcomp
xor
inc
jo
cmps
pop
xchg
es
push
pop
lahf
gs
and
iret
push
mov
adc
je
in
xchg
stos
scas
rcr
es
(bad)
ret
js
fsqrt
rol
and
adc
fiadd
aaa
xchg
mov
sbb
cmp
push
sbb
xor
test
push
repz
sub
push
test
push
or
test
or
cmp
add
inc
(bad)
arpl
push
pop
jbe
cmp
cmp
movs
push
movs
ret
xor
aaa
sbb
sub
xor
cwde
push
fisub
and
sbb
xchg
cmp
data16
mov
or
nop
seta
cli
xor
sbb
lds
inc
fwait
jne
jno
(bad)
adc
shl
into
pop
cmovne
cld
push
xlat
mov
test
mul
pusha
mov
add
jecxz
sar
cmp
inc
or
loope
cmp
push
(bad)
add
cmc
fisttp
or
cs
adc
test
inc
daa
adc
mov
jecxz
jno
(bad)
in
mov
and
cmp
jmp
out
sbb
dec
les
sub
pushf
std
mov
icebp
cmc
dec
test
push
mov
lods
dec
or
xchg
call
jne
data16
pop
xchg
inc
lods
jge
scas
aas
mov
repz
xor
call
cmp
js
cmp
fcmovbe
inc
pop
mov
dec
dec
push
ficomp
jp
stos
mov
dec
add
mov
jbe
adc
data16
in
sbb
arpl
jb
aaa
imul
pop
xchg
(bad)
mov
fcomp
popa
mov
imul
pop
lds
lods
xchg
cmp
adc
push
addr16
lods
mov
pop
stc
add
dec
mov
test
retf
mov
aam
mov
or
and
cmp
jp
push
mov
into
out
mov
fist
fucomi
ret
mov
into
jae
test
inc
mov
push
loopne
sti
shr
lea
and
js
mov
adc
cmc
fild
iret
repnz
add
dec
jecxz
imul
or
retf
mov
mov
repnz
or
test
fwait
sbb
rol
mov
adc
aam
sub
sbb
test
dec
cmp
xor
xchg
(bad)
xor
xor
pop
leave
mov
mov
mov
jle
sub
out
loope
xchg
ja
and
xor
(bad)
inc
int3
mov
push
mov
add
cmps
repz
arpl
data16
or
xchg
sbb
sbb
add
mov
js
push
loop
ficomp
pop
dec
sub
pop
cmp
and
inc
push
imul
sbb
or
push
inc
or
inc
es
cmp
mov
add
mov
test
call
xchg
jbe
sbb
in
xor
inc
cs
imul
sub
loopne
mov
or
nop
ins
cdq
jo
add
jo
aam
mov
ror
cs
arpl
lahf
xchg
fsubr
jne
sub
cmp
xchg
push
icebp
xor
add
mov
(bad)
mov
dec
cld
fnstcw
hlt
sbb
mov
out
loope
std
(bad)
lods
rcl
imul
adc
jmp
scas
popf
xchg
jo
lds
sti
sub
sbb
sub
test
call
mov
add
into
mov
(bad)
cs
xchg
repz
pusha
and
popa
add
ror
les
or
jmp
pop
sti
push
sub
mov
mov
sti
aas
dec
in
sahf
mov
ds
and
imul
pusha
pushf
fidivr
pop
add
popa
loopne
imul
sbb
pop
cmp
mov
sub
mov
std
mov
jno
stos
dec
push
and
ja
movs
sub
push
fistp
mov
and
dec
imul
cmp
sub
cmc
retf
retf
add
xchg
daa
xchg
mov
xor
ins
xchg
or
or
jnp
push
push
cdq
pusha
inc
ja
scas
icebp
pop
popf
or
addr16
sti
sub
or
shl
inc
jae
cmc
mov
pop
mov
rcr
scas
enter
add
jo
aad
mov
jmp
dec
out
cli
shl
xchg
rol
mov
data16
or
jmp
pop
add
mov
les
aam
rcl
pop
daa
out
fsubr
add
cld
or
jge
bound
ret
shl
ret
dec
mov
sbb
div
inc
loopne
pop
add
imul
push
mov
jb
mov
mov
dec
adc
pop
fcomp
ja
pop
ja
test
dec
retf
adc
jbe
push
repz
cmc
add
mov
xchg
and
xor
movs
add
and
(bad)
xchg
xor
adc
lods
mov
pop
dec
mov
mov
fdivr
ins
dec
jno
std
mov
sub
ret
mov
fisub
jp
in
scas
hlt
add
mov
xchg
lock
xor
dec
(bad)
loopne
jg
dec
adc
mov
pop
retf
push
lods
or
jp
mov
div
jge
pop
rep
mov
or
lock
and
dec
lock
out
xor
aam
inc
push
sub
dec
xchg
xchg
pusha
or
ret
lds
rol
push
int3
icebp
mov
adc
adc
lock
push
xchg
mov
xor
ds
xchg
adc
fiadd
dec
jge
xchg
mov
inc
xor
jmp
aaa
aam
xchg
bound
hlt
inc
inc
mov
mov
sub
lods
enter
out
add
mov
inc
jmp
cmp
add
xchg
lock
inc
mov
lock
int3
call
scas
add
ror
mov
sbb
out
adc
xchg
xor
scas
push
mov
ja
aas
inc
mov
out
sub
inc
and
lahf
repz
jmp
fadd
push
mov
sti
cld
lds
jg
ja
dec
xor
sub
dec
push
(bad)
lahf
mov
in
pop
scas
sahf
mov
push
(bad)
push
cmp
int3
and
retf
shr
ret
mov
cmc
test
adc
mov
or
js
push
ins
cdq
je
cwde
or
iret
shr
in
js
ret
add
jecxz
adc
(bad)
movs
pushf
dec
ret
in
or
pop
xchg
sub
sbb
adc
push
sub
inc
repnz
xchg
xchg
dec
movs
xchg
cld
mov
sbb
dec
(bad)
inc
lods
popa
stc
ins
outs
jns
cmp
and
mov
leave
test
or
mov
test
inc
mov
jne
ror
inc
and
push
addr16
or
cmp
retf
mov
or
shr
cs
dec
sti
lea
and
xlat
lock
and
xor
inc
aam
sti
mov
jb
loop
mov
xor
(bad)
push
or
or
pop
sahf
into
sub
cmp
or
sti
repz
movs
(bad)
xor
sub
mov
sub
jl
dec
cdq
mov
fidiv
xlat
test
cwde
inc
xchg
mov
scas
dec
mov
dec
jo
or
xor
loopne
lahf
xor
fsqrt
sub
inc
cmps
mov
mov
das
jae
enter
mov
lds
xchg
fisubr
and
jp
xchg
adc
inc
in
aad
push
popa
jp
add
fldenv
push
jmp
pop
mov
xchg
xchg
pop
inc
mov
aad
es
vdivss
adc
outs
popf
push
and
adc
fdiv
mov
push
out
cmps
aaa
retf
inc
xor
ja
jne
call
arpl
arpl
adc
into
lea
nop
xchg
rcr
repz
xchg
in
inc
xchg
xchg
and
test
les
out
pushf
jge
xor
out
sbb
fidiv
je
not
pop
ret
jle
mov
fimul
pop
rol
jge
push
push
(bad)
repz
dec
ss
cmp
sub
inc
add
and
push
pop
mov
ret
(bad)
jo
int3
inc
rol
lods
inc
dec
fcom
aad
xchg
mov
inc
mov
out
aas
ja
xchg
or
cli
sub
xchg
test
in
jmp
mov
in
sub
ret
cwde
pop
mul
imul
push
gs
imul
mov
sub
outs
or
popf
mov
xchg
mov
inc
out
jmp
ficomp
adc
lock
mov
movs
sbb
jge
pop
fdiv
mov
repnz
adc
lea
test
int3
jb
add
scas
test
inc
leave
xor
jae
push
or
neg
sbb
mov
jmp
pop
add
jl
push
icebp
mov
stos
adc
jns
sbb
add
fsub
ss
jmp
test
clc
inc
jnp
lahf
add
addr16
(bad)
movs
mov
jl
jmp
in
mov
push
xlat
pop
cdq
clts
das
arpl
add
lea
add
add
stos
sbb
or
and
out
xor
fs
cdq
mov
inc
mov
jle
inc
dec
inc
inc
ret
push
int
sbb
or
test
sti
enter
dec
movs
in
ret
popa
cmp
push
mov
fsubr
scas
jg
sub
aad
mov
mov
sub
retf
cmc
xchg
jl
cmp
cmps
push
adc
cmc
cmp
jae
jns
in
shl
xchg
sti
xchg
xor
out
dec
inc
xchg
js
popa
sbb
das
mov
repz
pop
nop
(bad)
std
in
fneni(8087
int3
sti
btc
mov
sub
sbb
sub
push
and
dec
pop
push
push
inc
scas
adc
sub
xor
jne
dec
pcmpeqd
adc
pop
inc
push
fdivr
lahf
outs
repz
imul
leave
je
mov
mov
xor
ret
lds
stos
neg
nop
movs
jns
pop
loop
sub
pop
cmps
and
mov
sbb
push
push
sbb
pop
or
or
pop
(bad)
mov
or
mov
into
push
xor
push
sub
cmp
addr16
inc
call
pop
add
lea
dec
push
rol
shl
add
icebp
call
lods
(bad)
mov
out
mov
in
mov
xor
xor
xchg
pusha
jl
ficom
xchg
pop
loopne
inc
in
sub
and
lds
mov
sbb
xor
gs
imul
jno
add
arpl
mov
jge
cmp
xchg
jl
jns
jno
aas
jne
xchg
sbb
movs
mov
inc
push
jmp
fcomp
xchg
leave
mov
sbb
pop
pop
out
sbb
cmc
addr16
inc
ins
addr16
jb
mov
fist
sub
xchg
push
out
jo
(bad)
lds
sti
push
inc
jae
mov
jmp
or
push
int
fs
popf
adc
xor
inc
sti
lea
mov
cmp
sahf
(bad)
dec
icebp
jo
xor
(bad)
int3
jg
in
mov
(bad)
in
fldenv
loope
mov
mov
add
ds
hlt
call
mov
mov
in
pushf
xor
mov
imul
adc
cli
ins
jecxz
pop
cmp
ins
xchg
ret
adc
and
repz
sbb
and
lods
outs
cld
add
sub
add
sbb
(bad)
pop
inc
gs
les
out
(bad)
sub
adc
ds
mov
mov
(bad)
das
in
cmp
scas
(bad)
sbb
mov
or
add
lock
enter
pop
hlt
xchg
mov
inc
fmul
(bad)
das
jns
ficomp
pop
mov
or
jnp
push
and
(bad)
xor
inc
push
dec
loope
scas
or
mov
pop
and
pop
or
push
mov
inc
jge
test
iret
push
mov
add
pusha
mov
fwait
inc
mul
add
stc
idiv
and
sub
xor
xchg
push
jbe
out
hlt
lahf
xchg
repnz
lahf
pop
mov
pop
mov
retf
or
xor
sbb
jp
out
dec
mov
dec
sbb
xchg
jge
fst
xor
mov
icebp
dec
mov
fwait
mov
fstp
add
bound
sar
sub
icebp
jge
movs
nop
out
test
cmp
loop
mov
mov
ficomp
cmp
cmp
sbb
arpl
inc
std
in
inc
mov
fld
ret
push
mov
adc
dec
inc
dec
jno
inc
mov
out
or
fwait
cld
pop
or
add
mov
jae
push
ficom
add
scas
ret
cmp
int
loope
addr16
ins
xor
dec
adc
retf
xlat
cmp
aad
ret
xchg
mov
cmc
mov
add
cmp
dec
outs
sub
pop
and
mov
inc
test
outs
repz
mov
or
lods
adc
and
int3
xchg
and
and
not
jnp
in
(bad)
push
fadd
loopne
aam
mov
sub
and
(bad)
mov
fwait
xchg
adc
cmp
inc
xor
loop
vpsllq
test
xor
mov
push
cmps
sahf
push
sbb
adc
dec
(bad)
loope
push
hlt
jne
bndldx
call
push
outs
xchg
xor
push
and
sub
push
mov
outs
(bad)
std
daa
add
mov
and
in
or
xchg
add
cmp
addr16
mov
and
bound
xor
mov
add
cmp
sbb
call
or
mov
in
pop
sbb
test
out
sbb
and
jmp
(bad)
sbb
add
xchg
dec
add
inc
cmc
pop
popf
lahf
adc
fcomp
jo
mov
(bad)
aam
icebp
pop
mov
fidiv
in
js
jle
xor
inc
mov
ja
movs
push
jmp
bound
test
mov
mov
aad
pop
into
leave
out
(bad)
cmp
clc
sar
cmps
leave
(bad)
out
mov
push
jmp
cmc
scas
and
cmc
in
mov
(bad)
jae
or
in
cmp
sub
data16
jle
jl
nop
cwde
sbb
sti
add
shr
ds
enter
mov
vorps
std
mov
xor
jne
dec
or
data16
into
and
dec
pop
retf
mov
xor
in
push
xchg
adc
ins
rep
rcr
es
pop
(bad)
bound
cdq
sub
sub
imul
mov
xchg
sahf
(bad)
jg
loope
jmp
cli
xchg
mov
(bad)
cwde
cmovge
(bad)
push
mov
xchg
xchg
or
pusha
mov
cmps
nop
pusha
fdivr
ds
mov
pop
in
dec
nop
jg
sets
test
and
cmp
dec
or
push
aaa
adc
sbb
adc
sub
xor
sbb
hlt
xchg
adc
imul
dec
aas
fisttp
jmp
xlat
out
scas
mov
ret
sbb
jbe
rcl
loop
mov
into
inc
xor
cs
adc
jo
mov
movs
les
jno
cmc
ret
pop
lods
add
shr
fld
call
je
rcl
adc
mov
add
lods
or
mov
jle
aam
jecxz
sub
jno
mov
int
jge
jp
jbe
sub
inc
test
xchg
adc
sbb
call
sub
je
mov
in
ins
(bad)
fidivr
jbe
jge
cli
sbb
sbb
sub
and
or
or
into
xchg
jae
pop
in
movs
sub
loopne
sahf
movs
iret
cmp
sub
aam
inc
add
xchg
inc
or
jne
or
push
pop
or
mov
bound
pop
sub
pop
leave
shl
xor
and
jle
pushf
cmps
xchg
cld
sub
adc
cmp
rep
dec
push
pop
push
sti
popa
jno
adc
stos
(bad)
int
and
and
fcmovnb
mov
jl
inc
push
fadd
and
push
pop
mov
mov
cmp
sbb
push
cdq
inc
add
jecxz
movs
and
scas
push
pop
xchg
leave
pop
mov
and
xor
lds
push
cmp
ret
(bad)
mov
cld
xchg
sar
inc
adc
gs
arpl
xchg
jmp
mov
sub
es
xor
jno
sbb
les
lods
rol
sbb
mov
adc
jno
leave
and
cmp
test
sub
xchg
rcr
jne
movs
pusha
pop
shl
sub
or
pushf
leave
and
fistp
mov
iret
mov
lods
and
out
push
js
dec
inc
icebp
and
pop
xor
sbb
lahf
pop
sbb
outs
cmp
in
xchg
test
pop
or
mov
jne
adc
leave
scas
sub
pop
fldcw
xlat
dec
push
stos
mov
xor
xor
or
sub
stc
xchg
push
clc
mov
or
jmp
in
or
jbe
xchg
(bad)
std
aam
mov
in
add
loope
call
popa
jb
outs
js
or
or
jg
imul
inc
dec
sbb
mov
fmul
dec
or
add
mov
ja
mov
stos
retf
push
mov
pop
push
lods
aaa
dec
push
pop
jecxz
and
mov
mov
add
add
push
and
pushf
loope
inc
pop
outs
inc
mov
dec
mov
adc
mov
mov
or
ja
or
and
dec
xchg
mov
dec
or
push
mov
mov
js
ret
or
cmp
dec
sub
dec
je
push
xchg
mov
mov
mov
lahf
jb
sub
add
push
cmp
inc
imul
mov
mov
push
(bad)
jl
dec
mov
cmp
cdq
scas
push
adc
nop
jmp
mov
pop
in
popf
into
xchg
jp
jle
iret
jge
popf
push
(bad)
test
xor
xchg
dec
in
in
jno
je
pusha
test
pop
sub
retf
call
xchg
sar
stc
sub
movs
ficom
daa
imul
jecxz
das
mov
fisub
rcr
std
(bad)
(bad)
adc
mov
or
cmps
repnz
into
push
mov
or
sub
inc
push
or
sub
lods
cdq
outs
mov
daa
daa
sub
jnp
jg
jge
popf
sub
mov
pop
mov
push
cmp
add
pushf
test
sub
xchg
push
mov
loope
sbb
mov
dec
ins
cmp
push
pop
test
shr
fisub
inc
jmp
jno
pushf
fsub
imul
jbe
ds
dec
stos
pop
jecxz
pop
adc
or
lds
cmps
ss
aas
mov
movs
dec
fimul
and
repz
lock
pop
push
xor
outs
addr16
outs
aas
scas
ficom
mov
or
stc
xchg
repnz
mov
fimul
or
xchg
test
das
jo
xor
lods
xor
aam
lods
shl
ins
rcr
or
daa
outs
jae
push
fcmovb
outs
jecxz
shr
xchg
shl
hlt
(bad)
mov
icebp
mov
rcr
and
hlt
repz
test
sub
int3
mov
mov
cmp
shr
ret
mov
push
xor
dec
pop
mov
std
sti
mov
pusha
lea
mov
mov
test
push
call
mov
scas
out
and
or
das
xor
clc
and
fmul
jge
scas
inc
je
jecxz
cmc
dec
dec
dec
or
sub
ret
cwde
int
and
dec
aad
nop
and
fcomi
mov
pop
push
retf
mov
int3
push
outs
js
shl
mov
xchg
enter
or
mov
sub
adc
es
xor
jb
inc
mov
pop
ss
call
push
xchg
inc
fnstcw
xor
or
cmps
sub
pusha
dec
cmp
push
or
lea
sbb
out
adc
daa
movs
sub
push
into
jmp
dec
inc
(bad)
fsub
rcr
aas
mov
jno
sub
out
jnp
out
call
in
(bad)
push
mov
pop
dec
sub
push
push
lods
mov
xor
retf
das
push
push
sar
mov
imul
aam
popf
add
div
cdq
ins
add
mov
out
gs
xor
xor
sub
in
inc
outs
mov
lods
bound
dec
fistp
cmp
arpl
push
pop
add
pop
pop
xchg
jo
fisub
dec
jbe
je
(bad)
mov
cmp
jne
push
shl
jle
push
out
mov
xor
pop
cmp
scas
andps
adc
cmp
adc
cmp
mov
jge
sti
enter
iret
xchg
bound
cmp
mov
cmc
in
pop
jl
inc
or
jl
out
mov
dec
rol
mov
out
jno
or
or
mov
(bad)
jae
jge
lock
sti
out
call
in
push
mov
pop
sub
scas
mov
inc
xchg
js
xchg
mov
imul
pushf
add
dec
sbb
enter
mov
dec
inc
mov
mov
adc
pop
fdivr
sbb
(bad)
(bad)
(bad)
mov
(bad)
jmp
pusha
push
addr16
dec
fcomi
(bad)
ins
popf
mov
rol
cdq
push
loope
pop
push
movs
mov
push
out
in
lock
imul
pop
xlat
icebp
retf
(bad)
in
jo
and
scas
aas
popa
dec
and
fs
lock
clc
shr
add
push
lods
ds
or
push
cmps
shl
cmp
and
jns
imul
push
or
in
out
loop
dec
imul
xchg
sbb
int
retf
stc
cld
cmp
cmp
inc
sub
dec
(bad)
aam
jecxz
hlt
jle
mov
cdq
inc
mov
cmps
(bad)
(bad)
mov
ret
and
aas
ins
mov
loope
push
call
inc
sbb
jbe
out
scas
arpl
cmp
adc
add
adc
cmovno
fdivr
adc
pop
adc
test
sbb
adc
mov
repnz
inc
cmp
xor
test
pop
cmp
enter
mov
stc
in
popa
add
fs
lods
aaa
dec
inc
aam
fwait
mov
adc
or
jbe
rcr
fisubr
pop
and
inc
dec
xor
or
movs
adc
dec
div
add
pop
rol
xchg
jle
xor
ret
and
and
mov
ja
and
shr
inc
in
mov
(bad)
call
in
pop
pop
push
addr16
or
fidivr
in
cmp
jbe
ficom
cli
rep
mov
cli
dec
and
or
sbb
xor
jl
fstp
push
sub
scas
das
and
mov
lods
pop
inc
inc
cmp
shr
add
xchg
cmc
xchg
inc
lods
mov
mov
pop
xor
into
mov
add
fidivr
sbb
add
retf
sar
stos
add
or
lea
jge
add
inc
or
inc
rcr
or
(bad)
gs
xchg
pop
sbb
fmulp
xchg
lock
dec
xor
push
push
mov
push
adc
sub
xchg
adc
es
ja
out
pushf
or
or
xor
pusha
imul
xor
adc
or
retf
aam
pop
aas
or
call
mov
add
das
mov
or
xor
sub
aaa
inc
xchg
mov
(bad)
out
xchg
pop
scas
xor
out
jno
mov
int
cli
xchg
out
das
push
mov
cdq
(bad)
push
lods
aam
retf
sub
push
add
rcl
les
in
cmps
cli
dec
add
ret
lea
cmps
adc
sbb
push
bound
or
sbb
ret
mov
(bad)
test
inc
mov
mov
jae
(bad)
jmp
outs
adc
inc
mov
xchg
dec
bound
adc
sar
loop
mov
(bad)
ins
mov
(bad)
cmp
dec
stc
add
jmp
pop
outs
not
inc
adc
rcl
aas
lods
iret
out
cmp
or
push
outs
test
sub
xchg
stc
inc
dec
xor
and
loope
clc
or
stos
inc
lea
(bad)
popa
fiadd
mov
fwait
cmp
imul
movs
mov
inc
retf
add
imul
mov
fisttp
sahf
cs
mov
add
into
mov
pop
in
mov
fdivr
movs
add
xor
in
ja
sub
pop
sub
test
out
scas
(bad)
jmp
sub
cmp
jmp
int3
pop
jno
mov
and
aas
jecxz
test
nop
sub
rol
clc
lds
int
xchg
or
cmp
test
fidivr
adc
mov
or
(bad)
mov
adc
lahf
ss
fcomp
loope
sbb
mov
scas
jle
sub
pop
push
and
shl
fwait
cdq
jmp
sti
push
and
neg
sub
aad
jbe
mov
data16
sub
fsubr
das
out
push
aas
pop
iret
inc
(bad)
jl
in
stos
jno
mov
sub
inc
cmp
bound
xchg
fcmove
dec
std
cmp
xchg
mov
jmp
repnz
out
add
push
jmp
(bad)
stos
cmps
cmp
mov
retf
ds
clc
jg
test
jbe
jmp
popa
ins
sub
mov
mov
sbb
rcr
mov
mov
lahf
and
leave
dec
push
mov
xchg
push
call
in
test
adc
ja
fild
pop
sbb
jbe
rol
jecxz
aas
dec
pop
inc
ret
mov
push
cmp
inc
daa
pop
add
(bad)
mul
inc
mov
xchg
fsub
mov
sbb
xchg
sbb
nop
(bad)
(bad)
in
sbb
jo
loopne
adc
xchg
loope
jno
xchg
inc
out
mov
pop
xchg
vzeroall
sbb
jbe
and
in
and
call
sub
xor
dec
int
mov
mov
popa
add
pop
push
movs
push
sar
fnsave
adc
inc
push
ret
jb
jmp
mov
loope
sub
mov
or
sub
stos
leave
xchg
nop
lods
in
jge
outs
cmps
stc
xor
pushf
push
movs
jmp
mov
mov
sub
mov
das
mov
shl
test
mov
mov
cmp
dec
xor
shr
btc
call
inc
or
sbb
arpl
stc
ret
sbb
jnp
call
mov
cmps
dec
inc
pop
outs
add
lahf
(bad)
push
outs
mov
inc
loop
std
pop
jge
pushf
jmp
xor
mov
xchg
or
lds
fld
mov
aam
add
nop
bound
sbb
cmp
movs
add
adc
sbb
lahf
jmp
aas
mov
ret
mov
push
ds
dec
out
movs
out
fmul
shl
jns
push
ins
lahf
sar
sub
xchg
in
mov
in
jl
cmp
push
(bad)
mov
dec
ins
jb
(bad)
ja
adc
jecxz
enter
addr16
mov
mov
xor
xchg
jb
adc
test
rcr
mov
adc
fadd
mov
iret
xor
cmp
adc
test
push
pop
xlat
sahf
push
pop
es
inc
iret
stos
mov
xchg
xchg
(bad)
(bad)
xor
add
repz
and
push
hlt
nop
fst
xor
lea
(bad)
retf
fmul
(bad)
cmp
in
(bad)
mov
xor
cdq
frstor
aaa
ret
pop
mov
push
mov
mov
sti
leave
(bad)
sub
jae
jno
addr16
outs
sbb
or
outs
xchg
ja
jl
fist
sbb
jae
data16
sahf
xchg
clc
or
clc
add
adc
cmp
mov
sbb
push
mov
mov
mov
cmp
add
push
ffreep
cmps
cmp
les
mov
dec
push
sbb
arpl
stc
jne
cwde
rol
lods
repnz
mov
xchg
stos
sbb
test
mov
pop
lea
jecxz
push
xchg
jmp
int
sahf
dec
sar
gs
pop
rcl
std
aad
mov
test
mov
scas
(bad)
cmp
cli
or
mov
dec
icebp
pop
push
or
iret
sar
dec
mov
xchg
inc
add
xor
inc
ret
mov
inc
jno
xchg
xor
fstp
popa
adc
cli
xchg
add
js
(bad)
xlat
jo
stc
pushf
(bad)
aam
sahf
push
dec
xor
test
jbe
jle
pushf
iret
or
dec
xchg
sub
ficom
hlt
in
lahf
out
sub
adc
mov
js
mov
pop
adc
in
les
les
jns
mov
mov
das
aas
add
cmp
or
inc
xchg
xor
movs
sbb
push
mov
pusha
dec
adc
cmp
xchg
shl
cmp
adc
push
inc
add
hlt
scas
fdivr
lahf
pop
or
sbb
jmp
loopne
in
or
add
enter
cmp
jb
pop
dec
shr
or
adc
push
std
cmp
jb
xchg
jle
hlt
add
in
add
scas
cmps
xchg
popf
shl
xchg
sahf
mov
js
pop
push
jns
arpl
iret
add
add
dec
pop
add
sti
and
hlt
pop
in
outs
iret
hlt
pop
dec
(bad)
mov
or
popa
adc
nop
out
daa
movs
lock
mov
xor
dec
jp
scas
or
sub
stos
xchg
rol
scas
clc
mov
leave
adc
inc
inc
ja
aam
xchg
pop
int3
ss
lahf
setne
out
mov
clc
jle
ja
pop
hlt
inc
(bad)
fcom
imul
xchg
fidiv
popa
push
mul
mov
push
jns
jo
bound
mov
repz
bound
sbb
mov
bound
push
add
test
xor
int
cmp
aam
dec
mov
ds
dec
shr
ins
cmp
cmps
retf
ds
sbb
and
inc
scas
in
push
push
ret
mov
aaa
int3
and
jecxz
mov
loop
test
loope
ss
cdq
mov
aas
push
(bad)
mov
mov
sbb
dec
outs
cmc
cmp
and
lock
sbb
xor
call
aaa
scas
xchg
sbb
and
(bad)
imul
inc
dec
inc
repz
lods
sar
test
dec
sbb
std
or
cdq
xor
cmc
xchg
inc
sub
push
lds
mov
pop
clc
in
ja
in
cdq
test
enter
pop
ins
repnz
mov
dec
mov
iret
xor
xlat
add
sbb
mov
add
repnz
sbb
xor
cs
or
sbb
or
rcr
or
movs
in
js
data16
std
pop
nop
xchg
mov
test
or
add
jae
js
sub
(bad)
mov
fbld
leave
out
mov
inc
mov
(bad)
jbe
test
and
ffree
popa
and
mov
mov
cmp
push
popf
movd
test
xchg
je
ret
sbb
leave
sbb
sar
add
mov
or
jno
ins
jnp
fisttp
mov
mov
pop
xor
mov
(bad)
out
pop
cmp
dec
aaa
xchg
rcl
cwde
fnstsw
add
dec
iretw
addr16
vandps
sub
push
rcl
imul
imul
mov
pop
mov
adc
bound
leave
and
mov
pushf
or
les
nop
jae
xchg
icebp
fdiv
ret
and
cwde
mov
jb
jne
pop
daa
in
xchg
repnz
mov
pop
pop
mov
pusha
mov
mov
jnp
and
test
cld
gs
push
fucomip
pop
mov
cmp
add
xor
dec
xor
mov
or
cmps
hlt
pop
out
loop
push
or
push
stc
sahf
retf
das
sub
test
dec
call
shl
aam
sub
fst
and
in
les
in
adc
push
jno
mov
jmp
das
mov
push
mov
push
fnstcw
pop
lods
pusha
bound
or
imul
ret
hlt
adc
pop
and
mov
outs
pop
cli
rcl
fwait
inc
repnz
cdq
jle
push
(bad)
jmp
mov
push
ins
test
or
lods
inc
mov
jbe
leave
xchg
jo
shl
shr
inc
pushf
xchg
leave
push
ret
std
pop
sub
sti
sub
dec
ficomp
or
sub
popa
inc
aaa
dec
xchg
mov
(bad)
inc
add
lods
add
pop
pop
rol
rcr
mov
sar
inc
xchg
pop
pop
js
imul
je
repz
adc
cs
xchg
inc
pushf
stc
loope
out
mov
pop
ror
push
and
(bad)
adc
or
push
out
call
pop
mov
mov
cmps
jnp
push
and
xor
or
xchg
jle
add
jl
pop
fiadd
stc
pop
xchg
mov
adc
pop
data16
sub
repnz
jnp
sbb
xor
jbe
and
cld
inc
addr16
inc
shl
or
xor
fsub
mov
jnp
cld
xlat
push
mov
xchg
sub
int3
cmp
xor
adc
mov
mov
sbb
(bad)
loopne
loopne
shl
mov
cld
mov
ds
mov
mov
inc
and
mov
and
push
adc
push
sbb
stos
dec
out
add
fcmovnu
inc
out
std
cmp
(bad)
xor
mov
dec
ins
xchg
std
xor
push
mov
stos
mov
and
clc
xlat
stc
sub
ret
movs
mov
push
and
int
not
aas
(bad)
cmp
sub
int
mov
xlat
mov
popf
mov
sub
dec
pop
outs
in
sbb
add
dec
lahf
push
ds
push
in
xor
in
and
adc
xchg
sti
cmp
jnp
sti
fwait
cmc
inc
xchg
adc
ror
mov
mov
shr
stos
add
aas
or
mov
shr
cld
cli
push
inc
and
mov
push
sar
shr
push
shr
jno
stc
pop
cmps
test
mov
imul
adc
xchg
or
ficom
fimul
inc
adc
not
xchg
or
fcmove
cmp
loop
imul
jb
fdivr
pop
cmp
adc
pop
je
mov
lahf
pop
pop
pushf
std
push
inc
xor
in
int
push
jmp
iret
pop
repz
add
cmp
jg
push
les
xchg
bound
lods
xor
cwde
dec
add
dec
sbb
or
pop
inc
mov
mov
std
cmps
inc
rcl
mov
out
out
push
pushf
stc
inc
push
jo
(bad)
aad
addr16
sub
push
dec
outs
aad
mov
in
pop
push
ror
mov
jne
sbb
xchg
(bad)
pop
(bad)
lods
loopne
push
mov
dec
lds
in
adc
pop
dec
dec
fstp
pop
xor
push
mov
pop
or
popf
daa
mov
test
stos
dec
sub
lods
retf
fst
jo
shl
in
inc
and
jg
loop
movs
pcmpgtd
pop
xor
pop
jecxz
jo
xlat
fdiv
dec
(bad)
pushf
movs
jl
jbe
jle
jns
or
iret
add
jg
cmps
shl
adc
adc
jmp
(bad)
add
jecxz
outs
inc
shl
sahf
in
retf
(bad)
or
mov
adc
movs
fs
cmc
push
xchg
jge
fiadd
or
jbe
mov
pop
adc
mov
push
cmc
xor
push
xchg
loopne
pop
or
mov
adc
and
add
in
out
mov
xchg
popf
loope
fsubr
adc
sub
add
push
shl
and
outs
fstp
(bad)
mov
imul
xchg
push
loopne
push
pop
push
dec
pop
out
arpl
push
mov
fild
adc
mov
lock
mov
repnz
call
xchg
inc
pop
cli
push
nop
lahf
or
inc
push
inc
pushf
data16
push
mov
retf
repz
pop
ds
nop
ror
mov
mov
xlat
(bad)
test
mov
rcr
addr16
pusha
daa
dec
(bad)
xor
out
int3
push
or
push
xchg
push
and
fisttp
mov
stc
inc
sub
cmp
(bad)
sub
adc
aad
add
xchg
sti
ins
in
mov
iret
mov
push
push
in
xor
or
push
stos
iret
fild
pop
pop
push
dec
nop
add
sbb
inc
xor
aas
les
mov
lea
xor
push
scas
mov
std
jp
jle
dec
(bad)
jns
pop
add
mov
push
fsub
shl
xchg
movs
aas
test
mov
mov
pop
pop
stos
dec
mov
jns
jg
mov
push
inc
rol
mov
push
jmp
sub
into
leave
jmp
mov
std
pop
mov
hlt
in
jno
iret
mov
shl
(bad)
jae
sub
shr
call
xchg
fiadd
ror
cli
add
inc
sbb
lods
xor
pop
push
lods
sbb
dec
loopne
inc
cmps
stc
movs
xchg
es
dec
pushf
lods
add
in
neg
pop
push
sahf
push
ins
lock
ds
xor
aaa
popf
popa
popf
mov
sbb
sbb
sub
mov
imul
add
push
jle
xlat
mul
adc
mov
test
inc
iret
cmp
push
ja
rcr
test
sbb
stos
gs
fisub
push
cmp
add
in
xchg
mov
mov
retf
xor
(bad)
mov
mov
jo
mov
xchg
(bad)
(bad)
(bad)
shl
mov
xor
ret
inc
fs
adc
stos
mov
into
bound
sub
mov
out
xchg
jmp
push
outs
inc
lds
sbb
(bad)
sub
mov
dec
mov
pop
in
pop
xchg
ror
in
push
jmp
loop
or
dec
jb
sub
(bad)
aas
mov
jge
ss
lds
dec
mov
mov
mov
ja
movs
or
jnp
sub
aad
aad
fadd
int3
fcomip
stc
popa
push
cmps
dec
stos
gs
and
es
stc
les
jne
(bad)
repnz
sbb
fisubr
cli
jp
inc
sar
mov
and
jae
mov
mov
imul
inc
xchg
add
add
inc
das
xor
fdivr
ins
jmp
sahf
jmp
adc
mov
sahf
mov
inc
or
inc
js
push
cli
hlt
mov
jge
mov
mov
rcl
xor
mov
scas
sub
pop
popa
ss
das
jp
push
sub
into
jecxz
cmp
sahf
stos
and
(bad)
pop
and
add
xchg
pop
mov
push
mov
iret
not
shr
jns
xchg
inc
mov
test
test
xchg
shl
jbe
jo
jae
aaa
push
pop
mov
and
cmp
add
pop
aam
arpl
loopne
sbb
mov
inc
jecxz
jae
mov
push
adc
out
mov
and
inc
cmp
push
add
cmc
mov
sbb
lods
xchg
sbb
xchg
iret
enter
test
test
sbb
xchg
loop
dec
or
mov
add
mov
das
stc
inc
out
push
ficom
pop
add
inc
dec
mov
cmc
ins
imul
sub
jns
mov
xor
dec
adc
and
call
push
xor
fwait
mov
mov
and
mov
xor
adc
dec
adc
mov
dec
cli
int3
cdq
mov
jle
out
add
dec
iret
push
test
es
mov
and
std
adc
std
jecxz
sbb
mov
mov
retf
inc
call
ror
or
add
mov
popf
xor
imul
pop
ja
or
xor
out
adc
aaa
push
ror
jae
push
sti
cmp
stos
push
in
dec
dec
neg
mov
scas
aam
aas
and
xchg
dec
jg
xchg
adc
in
repnz
shl
push
sub
push
mov
push
mov
inc
ret
xchg
push
popf
sti
pop
mov
mov
ja
pop
cli
int
pop
int3
retf
ds
(bad)
ficomp
jle
sub
in
bswap
ins
cmps
pop
mov
pop
xchg
retf
mov
ds
mov
xor
mov
xlat
aaa
repz
pop
mov
xchg
sub
xchg
jo
cli
cmp
cmc
mov
xchg
rcr
and
xchg
shl
xor
cmc
mov
jecxz
loop
lea
or
aam
inc
or
pop
call
test
adc
(bad)
int
(bad)
fiadd
call
sti
test
gs
ret
mov
push
add
cmp
sub
(bad)
loop
or
popf
ss
bound
cli
mov
cmp
aad
adc
jo
mov
dec
mov
fsubrp
or
pop
dec
inc
pop
cmp
std
xchg
inc
mov
addr16
int
push
(bad)
pushf
pop
fisttp
add
cmp
stc
lahf
rcr
sbb
push
popa
rol
add
pusha
sub
push
xchg
mov
arpl
loop
aaa
mov
fmul
mov
cs
jno
cmp
sar
pop
dec
out
call
xor
in
sbb
shr
(bad)
mov
fild
cdq
imul
iret
adc
pop
xor
aad
leave
sub
jnp
jmp
push
dec
inc
dec
pop
push
push
mov
adc
mul
inc
inc
stos
or
test
add
lods
and
aaa
rcl
inc
mov
call
fadd
mov
push
and
retf
imul
and
clc
test
js
pop
ss
std
add
and
push
add
xor
rcl
push
(bad)
iret
adc
mov
pop
xor
adc
cmps
inc
test
inc
fs
mov
icebp
stc
loop
xor
iret
popa
dec
add
xor
fnstcw
lods
in
jae
xor
pop
jp
cmp
mul
push
adc
jo
pushf
pop
xchg
mov
shl
dec
loopne
mov
inc
dec
push
fild
cmp
pop
popf
jg
pop
imul
leave
dec
push
adc
xchg
sar
and
dec
enter
pop
das
xor
pop
test
retf
iret
sbb
or
ds
stos
push
icebp
mov
push
les
and
mov
sbb
cwde
sbb
or
dec
jmp
shr
cs
jmp
(bad)
clc
xchg
mov
xchg
test
add
rol
mov
enter
ret
fild
loop
xor
jge
cmp
sub
xlat
lods
mov
cmps
pop
sbb
icebp
out
(bad)
cmc
xor
call
outs
(bad)
cs
popf
clc
and
inc
inc
ret
sub
xchg
mov
js
pop
(bad)
push
fs
retf
push
mov
xchg
in
call
int
inc
fadd
retf
pop
adc
sbb
not
xor
push
sbb
jnp
jns
out
or
push
inc
aaa
xchg
loop
mov
loope
cmc
arpl
(bad)
mov
sti
ret
cmp
add
cli
sbb
xlat
nop
arpl
sti
aas
cli
add
and
pusha
ins
add
out
fcomi
gs
pop
cwde
ror
data16
retf
xchg
ficomp
repz
dec
aas
retf
pop
sahf
jb
jmp
sub
sub
sub
stos
int
in
arpl
pop
leave
xchg
je
and
mov
push
sbb
dec
cmp
call
das
(bad)
xchg
and
loopne
xchg
push
sbb
jle
adc
push
jl
jle
fs
jmp
gs
xchg
fwait
mov
sti
add
(bad)
push
push
sbb
cmp
paddsb
adc
jp
ror
sub
(bad)
out
shl
push
cmp
and
or
adc
(bad)
fwait
xchg
cmp
or
dec
ret
push
loop
and
lods
xor
repnz
mov
mov
and
daa
aaa
(bad)
ret
inc
pop
push
cmps
add
add
cli
les
pop
pop
dec
or
jno
mov
addr16
das
fisubr
xor
ret
xlat
pop
xchg
call
cld
clc
dec
fs
les
rcr
shrd
and
xor
jno
xor
add
push
lods
add
enter
jnp
pop
push
out
es
inc
dec
movs
mov
push
jmp
sub
pop
stos
adc
leave
push
int
test
retf
push
xor
call
call
mov
cdq
sahf
ror
es
shl
push
mov
sub
or
cmp
inc
lahf
xchg
adc
ret
xchg
retf
jmp
cmp
ds
add
and
xor
sti
jnp
push
imul
lds
mov
fdiv
cs
mov
inc
jnp
xchg
xor
leave
leave
jns
mov
outs
and
ret
cli
(bad)
movs
push
mov
js
repz
jns
pop
icebp
jmp
or
test
leave
cs
or
dec
out
icebp
or
fsub
loope
mov
pop
mov
pushf
push
ins
add
adc
add
mov
jmp
dec
xchg
adc
nop
inc
(bad)
adc
jae
cmp
popa
scas
mov
ins
arpl
inc
sar
mov
(bad)
jae
aas
mov
out
jg
xor
inc
or
in
enter
xchg
mov
out
aas
fbld
or
popf
call
adc
xchg
sbb
test
aas
xchg
addr16
arpl
xchg
cmp
repnz
cld
xchg
push
pop
jns
mov
push
std
das
fsubr
dec
jmp
push
xor
ins
lea
jmp
and
xor
outs
mov
dec
movs
shl
lahf
push
enter
inc
adc
xor
or
and
lock
loope
call
cmps
cmp
xchg
loopne
or
retf
fcmovu
jmp
mov
fs
movs
jle
xchg
test
lods
mov
(bad)
fiadd
and
popf
or
dec
jle
jbe
les
vpackssdw
mov
xchg
lea
jmp
in
mov
pop
push
ret
xor
sub
rcl
dec
push
movs
sub
fild
xor
push
mov
add
ja
ret
lds
xchg
call
(bad)
xor
out
add
sub
pop
and
imul
xor
mov
xor
int3
adc
mov
or
cld
out
int
imul
cmp
cmc
cmps
mov
iret
mov
sub
(bad)
mov
ins
or
mov
aam
inc
scas
dec
xchg
jnp
test
push
mov
mov
xchg
repz
jl
xchg
retf
pop
and
jb
rol
into
lods
and
fst
xchg
into
mov
out
adc
ja
jne
mov
add
inc
mov
inc
aas
out
fnsave
sub
retf
cmp
sub
and
aas
stos
iret
push
inc
icebp
push
pop
jae
add
xchg
gs
imul
mov
jl
fnstenv
xor
mov
jne
aaa
test
or
mov
jns
xchg
pop
push
jle
mov
lahf
aaa
mov
retf
out
enter
sbb
shl
imul
shr
iret
enter
iret
mov
mov
(bad)
shl
call
cld
mov
out
and
mov
jns
cmp
sbb
(bad)
into
fnstcw
and
fiadd
adc
jmp
inc
xlat
cmp
cmp
xor
mov
or
and
pop
(bad)
outs
rcl
les
into
repz
sub
sub
sbb
jl
dec
test
xor
iret
aas
popf
sub
dec
jmp
add
inc
pop
dec
std
std
mov
cmp
adc
out
cmp
test
and
jo
adc
lods
lahf
push
lods
cmps
push
ja
mov
jl
rcr
push
lods
mov
mov
pop
fs
add
es
es
gs
js
out
dec
mov
cs
fnstsw
sub
pop
pop
in
retf
mov
popf
inc
push
push
sbb
inc
stc
add
mov
pop
jae
das
repnz
cld
or
loop
xchg
or
jp
dec
and
ja
xor
or
je
retf
cmp
cli
dec
dec
jno
cwde
mov
div
sti
lahf
idiv
or
in
fsubr
xor
pop
push
fst
jae
or
stos
in
outs
in
mov
xchg
xor
push
das
xchg
int3
nop
rol
xor
pandn
sub
sbb
and
fistp
sti
je
dec
cmp
xchg
hlt
push
adc
cmps
push
mov
xor
pop
lahf
js
pop
cmp
aad
jo
js
pushf
stos
mov
mov
ins
sbb
repz
mov
mov
ret
lods
pop
sbb
dec
jnp
fs
in
ror
mov
mov
sbb
push
clc
addr16
mov
jecxz
cdq
imul
push
int
cwde
cmc
add
jae
xchg
mov
addr16
in
xchg
and
xlat
stos
mov
dec
sbb
jecxz
bnd
dec
out
push
ja
fild
xor
into
dec
jno
cmp
arpl
enter
adc
mov
push
sbb
sbb
push
(bad)
mov
movs
dec
and
mov
ja
pushf
xor
jnp
outs
stc
out
cdq
or
sub
into
pop
sbb
mov
(bad)
std
aas
inc
cwde
sbb
call
inc
or
dec
popf
and
jmp
push
or
popa
ins
in
sti
aad
or
pop
out
mov
mov
sub
xor
(bad)
sti
stos
pop
jmp
pop
lock
ins
leave
or
cwde
dec
fmul
push
pushf
(bad)
mov
rcl
cs
(bad)
xor
push
jmp
in
or
or
fldenv
shl
xchg
mov
cdq
jle
add
xor
pushf
push
and
xor
ja
inc
add
adc
mov
mov
scas
fldcw
sti
rcl
and
daa
xchg
mov
sub
or
scas
imul
call
aam
arpl
(bad)
pop
jno
ret
out
std
gs
(bad)
(bad)
(bad)
inc
push
test
in
popf
inc
inc
push
fdivr
push
fxtract
aaa
ret
jbe
lds
stos
cmp
xchg
sbb
std
xor
mov
xchg
push
and
lds
cld
add
sbb
jno
push
(bad)
and
push
rol
pop
pop
xor
add
mov
sbb
mov
add
adc
jecxz
das
dec
rol
inc
cmc
cmp
and
retf
xor
in
pushf
xchg
jns
gs
or
ror
(bad)
or
(bad)
jae
or
ss
int
push
aam
pop
je
xor
cmp
xchg
adc
inc
scas
xchg
sub
je
pop
retf
fldcw
cmp
outs
aaa
pop
int3
(bad)
fdiv
mov
mov
mov
sub
or
cmp
cmp
stc
repz
stc
out
push
xor
jg
or
push
clc
mov
xchg
call
dec
pop
mov
and
mov
mov
mov
sbb
ret
jp
xchg
enter
rol
mov
lds
test
nop
test
mov
inc
sti
ins
adc
sub
sbb
sub
sub
pop
ja
(bad)
aas
loop
pop
outs
jl
outs
(bad)
jmp
aas
push
inc
jo
ret
xchg
(bad)
xlat
aaa
sbb
push
bound
leave
fbld
rol
arpl
cli
push
in
imul
hlt
outs
inc
cmp
cmp
cwde
cmp
jmp
jnp
inc
xchg
pop
ja
mov
(bad)
out
ror
and
bound
lock
(bad)
push
push
ins
scas
sbb
mov
adc
mov
je
aad
nop
or
in
test
xor
popa
cmp
out
push
in
jo
fidiv
ins
ror
aam
jnp
popf
add
(bad)
adc
popf
xchg
cmp
inc
fnsave
pop
dec
dec
ret
inc
movs
sbb
mov
xchg
(bad)
enter
inc
je
data16
xor
mov
iret
xlat
cs
daa
je
das
repnz
cld
repnz
and
add
aaa
loop
push
inc
inc
(bad)
imul
xchg
(bad)
shl
inc
adc
bnd
jnp
dec
loop
mov
xchg
test
or
xlat
pop
jmp
dec
cmp
fdiv
mov
test
jns
ret
ffreep
cmp
ins
dec
fs
jo
shr
sti
lock
leave
pop
xor
sbb
addr16
cmp
pop
(bad)
sbb
push
imul
sub
and
imul
push
retf
ret
fwait
movs
or
cwde
mov
mov
stc
mov
sahf
pop
xor
into
and
and
in
push
mov
xchg
imul
sub
loope
hlt
lahf
jp
dec
mov
je
xor
imul
add
fild
jno
gs
and
sbb
sbb
aad
pop
pop
pop
clc
jae
and
daa
jb
and
call
aaa
adc
ror
je
jmp
xchg
dec
or
pushw
jae
retf
cs
push
icebp
rcr
cmps
cs
mov
jmp
push
push
bswap
jecxz
dec
xchg
xchg
ret
or
rcl
fwait
bound
pop
jp
ror
lods
adc
add
jle
pop
lods
call
jne
mov
scas
ret
in
push
fs
dec
dec
inc
push
inc
pop
push
stos
data16
ins
loope
sub
ds
test
inc
jb
jne
std
cmp
sbb
outs
dec
inc
ins
stos
bound
mov
mov
adc
cmp
push
cmp
leave
shr
push
pop
pop
stos
jb
jecxz
push
jnp
hlt
inc
adc
ja
sbb
mov
dec
push
fisubr
jae
call
cwde
shl
imul
rcr
ins
mov
push
dec
cwde
mov
mov
push
and
fwait
mov
int
xor
push
stos
sbb
and
movs
xchg
je
out
data16
pop
fisttp
out
les
fs
dec
sbb
mov
ins
xor
(bad)
cmp
jae
dec
out
movs
cli
sbb
xor
stos
test
gs
mov
and
bound
jbe
hlt
cmc
and
aad
aas
mov
inc
push
cdq
push
xor
cmp
cmp
xor
jns
mov
or
xchg
mov
fadd
mov
mov
cli
jb
adc
pushf
mov
gs
xchg
and
dec
or
and
jo
cmp
mov
jp
push
sub
inc
hlt
test
pushf
stos
cmps
aam
es
scas
or
jp
mov
or
scas
cmp
adc
jno
mov
mov
inc
imul
gs
or
out
jno
int
cmps
xor
mov
add
jo
or
push
pop
push
daa
ins
xchg
stc
outs
or
and
je
test
push
adc
ins
test
add
adc
arpl
xchg
or
fisttp
(bad)
push
jge
daa
mov
adc
stos
mov
popa
sahf
retf
or
stc
push
mov
dec
cmp
dec
(bad)
movs
push
push
xor
shl
inc
loopne
retf
mov
movs
enter
stos
hlt
shr
mov
dec
mov
call
retf
inc
push
sub
inc
jg
ds
or
fwait
cmp
push
adc
fwait
aaa
xor
mov
add
push
test
and
xchg
sbb
fistp
sbb
add
xchg
repz
mov
stc
cmps
inc
(bad)
push
cwde
inc
lds
leave
inc
push
fwait
mov
ins
shl
and
xor
mov
mov
div
xchg
mov
xlat
repz
test
in
nop
loope
loop
mov
cmps
aaa
pop
mov
xor
pop
xchg
gs
push
dec
push
gs
retf
mov
xchg
mov
jge
loop
sahf
stos
rcl
pop
inc
ficom
cmp
push
popa
jp
add
inc
jge
add
loopne
shl
ds
outs
xor
xchg
movs
imul
inc
pusha
xor
xchg
(bad)
out
push
aas
jp
jmp
or
nop
lods
ins
hlt
adc
fiadd
fcom
or
es
fbld
push
daa
or
cmp
push
mov
cwde
sbb
sbb
std
and
pusha
push
bound
inc
or
xchg
das
mov
iret
cmp
mov
fmul
or
push
jne
fld
cdq
push
mov
outs
fstp
fnstcw
jnp
int3
sub
addr16
out
push
clc
test
scas
pop
scas
nop
fnstsw
imul
dec
int3
std
rcl
jo
pop
push
mov
mov
and
jnp
xor
(bad)
cwde
(bad)
rcr
cmp
mov
cmps
sti
or
mov
add
ror
out
ins
push
push
adc
push
div
aad
arpl
pop
pop
mov
mov
pop
pop
adc
jle
fistp
lds
test
imul
es
(bad)
pop
outs
xor
add
cmp
xchg
outs
daa
pop
xchg
pop
cmp
test
mov
movs
movs
sbb
out
test
dec
lahf
xor
(bad)
sub
sbb
dec
fdivr
xor
pop
inc
mov
pop
sub
xchg
test
fldcw
(bad)
jp
loope
les
dec
out
or
jmp
cmp
test
out
popf
test
dec
jbe
pminsw
test
dec
and
aam
data16
add
and
lock
pop
cmp
push
imul
(bad)
popa
addr16
mov
mov
sbb
leave
xchg
xor
sub
out
jnp
(bad)
push
dec
fiadd
arpl
sub
mov
fdivr
and
cmp
pop
mov
and
pop
(bad)
mov
mov
sbb
sbb
cmp
ins
pushf
or
loop
jne
int
adc
inc
in
inc
fmul
jnp
push
add
cmp
ficomp
adc
loop
sub
fistp
ja
xchg
popf
jns
or
jmp
lds
adc
out
aad
push
movs
jle
cmp
pushf
add
dec
inc
push
push
lds
sbb
loope
pop
mov
dec
movntq
pusha
call
dec
leave
les
repnz
neg
ins
outs
pop
jg
xor
out
push
fadd
adc
mov
mov
movs
div
cmp
inc
sub
icebp
mov
lock
jge
test
pop
(bad)
or
ins
es
sbb
lahf
lds
add
pop
(bad)
cmp
aaa
lea
xchg
or
out
inc
sub
rcl
push
xchg
lahf
sti
mov
fstp
pop
out
fistp
jne
mov
aas
ret
pop
sbb
sub
cld
test
add
sti
(bad)
dec
pop
jnp
mov
xchg
xchg
push
test
sub
cmp
mov
inc
sub
jae
fadd
cmp
(bad)
jge
in
or
ror
mov
sti
popa
jmp
inc
ins
push
dec
in
push
jnp
adc
cmp
jno
outs
push
xchg
push
xchg
pop
xchg
and
push
xchg
sbb
cmp
adc
mov
outs
js
sbb
cdq
push
dec
jae
add
movs
push
xor
ins
sbb
leave
popa
jg
sub
stc
sub
stos
xchg
adc
out
jl
mov
data16
in
sar
in
or
(bad)
fdiv
jne
add
cld
repz
aad
adc
xor
ja
aas
mov
jge
mov
nop
dec
pop
push
ret
mov
cmp
std
sub
cld
pop
sbb
cli
aam
stc
xor
fidiv
xor
push
outs
inc
(bad)
stc
cmps
mov
mov
xlat
inc
jne
iret
pop
scas
sub
ficomp
sub
and
or
cmp
sbb
arpl
stos
ds
test
jnp
mov
sub
adc
inc
(bad)
fst
outs
jg
jmp
cmp
inc
xchg
loope
(bad)
dec
(bad)
(bad)
xchg
popf
cmp
add
jb
pop
js
jbe
lahf
sub
mov
in
stos
xor
test
cmc
(bad)
loop
push
mov
pop
loopne
in
sbb
fwait
xor
dec
cs
retf
sbb
pop
xor
jmp
test
std
int3
mov
into
mov
ror
aam
dec
iret
pop
add
push
lahf
push
fistp
cli
(bad)
fist
pop
inc
push
je
cmp
xchg
cmps
jecxz
stc
xlat
stc
xchg
fild
jne
out
pop
fwait
cli
icebp
repnz
push
xchg
cs
jo
push
mov
mov
mov
popa
cs
stc
or
fptan
in
pop
and
test
jp
pop
sbb
addr16
fdivr
es
test
ror
add
ins
dec
push
aad
lods
adc
jle
arpl
(bad)
in
add
jmp
mov
push
jl
cli
aas
pop
nop
dec
mov
popa
repnz
sbb
out
pop
mov
enter
pop
jno
add
jo
jg
mov
jb
ss
inc
add
ja
cdq
test
jg
sbb
push
out
push
push
xlat
mov
mov
cdq
dec
mov
int
je
push
test
fcom
xor
fidiv
fcmovne
jns
sbb
sti
adc
aad
mov
sbb
aad
ret
sbb
popa
push
jl
hlt
inc
pop
outs
shl
inc
std
scas
call
imul
test
or
pop
pop
ins
mov
xor
outs
pop
sub
std
shr
push
aad
pusha
cmps
adc
cmp
mov
icebp
adc
aaa
aas
cmp
xor
test
or
test
cs
cmp
jb
(bad)
mov
pop
cmps
sahf
and
les
mov
mov
xchg
std
into
jns
cmps
sub
in
jg
add
cli
mov
sbb
mov
es
inc
jo
bound
out
ins
inc
mov
enter
sub
daa
loope
mov
mov
mov
xlat
xchg
add
push
aaa
repnz
lea
xlat
lods
add
pop
ss
pop
lods
sbb
push
pop
in
pop
cli
jmp
(bad)
and
add
repnz
nop
int3
or
push
mov
fbstp
dec
and
call
stc
cmp
sub
rol
stc
or
mov
in
call
les
or
or
scas
cmp
test
mov
(bad)
fld
ss
aaa
mov
pusha
rcr
fdiv
dec
pop
cmp
ja
mov
mov
test
scas
or
pushf
cmp
popa
loopne
push
and
or
mov
mov
dec
test
xor
scas
jae
scas
cmp
in
dec
hlt
arpl
ret
jmp
mov
aas
lahf
shl
dec
adc
mov
(bad)
push
mov
je
ss
jmp
cmc
lock
jge
xchg
hlt
aaa
call
jle
jl
fs
daa
icebp
dec
pusha
xor
or
imul
adc
sub
mov
(bad)
hlt
and
(bad)
jp
xor
test
push
ret
push
jg
cmpps
fwait
dec
std
xor
or
stos
outs
cmp
fst
nop
enter
(bad)
mov
enter
or
mov
es
jg
mov
fistp
sbb
jno
rol
sub
pop
inc
sbb
adc
fisttp
push
js
dec
mov
mov
fistp
xor
fcmovb
and
push
ins
stc
popa
aam
jb
push
jae
xor
mov
xor
lods
mov
je
or
mov
imul
lahf
adc
std
push
ins
cmp
les
push
cmp
jp
out
jmp
ds
xlat
jg
scas
add
sbb
mov
push
adc
xchg
(bad)
es
mov
stos
sub
fwait
sbb
mov
lahf
pop
mov
mov
xchg
push
jle
jmp
cli
test
daa
jnp
test
mov
adc
dec
sbb
cmps
lods
sub
fs
mov
xor
or
idiv
jecxz
xor
dec
jmp
or
mov
(bad)
ins
sub
test
addr16
mov
(bad)
retf
fs
xor
inc
test
call
cdq
pop
test
push
jge
and
out
sbb
jmp
fdiv
loop
(bad)
xchg
sar
shl
std
das
adc
out
or
xor
fs
das
test
mov
sub
jmp
fidivr
xor
movs
fld
imul
mov
dec
adc
adc
ret
cmp
adc
add
mov
dec
fadd
cmp
ret
jbe
out
lahf
cdq
aas
push
shl
jmp
push
or
xor
mov
ret
in
idiv
out
xchg
or
inc
cdq
out
fwait
dec
push
dec
lods
jmp
icebp
push
jnp
cmc
ror
lods
mov
aaa
cmc
aam
xor
imul
mov
iret
pop
fbstp
cmc
stos
cmp
sbb
int
dec
xchg
ins
fs
ds
das
stc
and
sub
loope
jno
pushf
fwait
xlat
lahf
(bad)
imul
jg
pop
(bad)
sar
(bad)
mov
dec
test
or
adc
dec
pop
push
jno
push
and
inc
mov
jnp
cmp
add
ret
adc
cwde
adc
push
bound
add
mov
xor
popf
jmp
mov
mov
mov
je
icebp
and
pop
jns
cmp
lds
rcr
aam
cmps
pop
arpl
aaa
test
push
push
mov
sub
xlat
and
mov
mov
retf
sbb
or
(bad)
mov
xor
movs
nop
pop
sub
mov
fsubr
outs
pop
xor
inc
dec
or
xor
addr16
stc
rcl
stos
test
cmp
movs
lds
into
loope
les
adc
pop
and
add
pop
jl
mov
mov
out
mov
jbe
test
inc
popa
mov
or
jecxz
loope
cmp
shl
fiadd
out
or
adc
push
repz
xchg
xchg
rcl
sbb
pushf
ss
test
pushf
add
std
ds
pop
fwait
mov
add
pop
sub
mov
rep
movs
cmp
int3
mov
mov
cmps
xchg
and
mov
add
movs
adc
test
push
aaa
inc
inc
mov
add
xchg
mov
pop
mov
cs
rol
sar
push
mov
outs
pop
mov
lods
sbb
stc
jp
add
in
jne
test
lods
sbb
test
mov
sub
or
push
add
sbb
fwait
pop
pop
mov
cld
lock
xor
sbb
lock
frstor
mov
mov
jns
lahf
pop
popf
stc
out
leave
ds
stc
sub
scas
in
mov
es
dec
xor
dec
cs
inc
mov
ret
mov
xlat
inc
lods
sbb
pop
in
inc
ror
xor
(bad)
test
out
jge
fldenv
ss
dec
jmp
aad
adc
(bad)
xor
and
shr
popa
mov
arpl
call
loopne
mov
xor
rcl
dec
addr16
inc
inc
out
jns
and
cmps
out
scas
pop
xor
nop
jno
jg
fcmovnu
xchg
addr16
push
add
ins
sub
aas
ins
sub
sahf
sub
jb
icebp
mov
bound
mov
xor
mov
fmul
leave
pop
or
push
fisttp
cmp
or
dec
fs
sub
out
pop
cmp
and
xchg
mov
add
and
lods
dec
xchg
lods
add
cmc
enter
dec
(bad)
loop
arpl
leave
xor
inc
dec
and
cli
sahf
repz
xor
xchg
inc
add
arpl
scas
(bad)
jo
fstp
pop
loope
sbb
add
sub
xlat
mov
daa
jne
call
push
call
out
jmp
mov
in
btc
or
out
and
sub
mov
mov
inc
inc
push
ins
dec
aad
dec
inc
sbb
jecxz
mov
pop
dec
mov
add
cmp
outs
sbb
test
repz
sbb
xchg
sbb
inc
iret
inc
mov
cli
scas
mov
loope
nop
hlt
shl
lock
icebp
stc
pop
or
add
and
sbb
add
shl
mov
dec
and
add
jns
fnstcw
mov
mov
cmova
mov
pop
pop
push
mov
lods
inc
xor
and
mov
cwde
sbb
pushf
in
and
aad
pop
loopne
in
icebp
jp
leave
mov
aad
dec
cdq
mov
movs
icebp
mov
cmp
leave
stc
scas
neg
je
mov
clc
outs
sbb
or
mov
adc
mov
sub
or
(bad)
pushf
test
sbb
shr
repz
and
jge
daa
jge
xor
xor
push
add
mov
push
stos
pop
ror
xchg
call
shl
fmulp
(bad)
mov
xchg
mov
or
sar
shr
mov
test
into
cmp
ret
por
xchg
push
inc
imul
add
movs
mov
mov
mov
or
movs
and
in
daa
cmp
movs
or
mov
adc
sbb
rcl
push
mov
sbb
jae
or
sahf
ret
sub
xor
mov
adc
addr16
cld
aaa
push
movs
loop
jmp
(bad)
mov
neg
lods
adc
shl
fwait
mov
add
out
addr16
inc
mov
xchg
ret
fnsave
push
mov
mov
and
sbb
out
push
pushw
jp
or
and
arpl
fsubr
jno
mov
pop
mov
(bad)
js
cmp
cmp
adc
and
jmp
fstp
leave
pop
aad
test
dec
cld
adc
mov
lods
jle
jae
jle
das
iret
imul
lea
and
fdiv
ds
mov
jbe
and
daa
inc
mov
int3
jecxz
scas
mov
stos
inc
stc
mov
shl
(bad)
out
and
add
(bad)
jp
test
mov
pop
cdq
adc
in
or
push
pusha
push
mov
cdq
inc
xor
test
inc
loopne
sbb
out
adc
push
push
pop
stc
mov
push
sbb
push
iret
adc
ror
scas
pop
test
ds
iret
dec
jbe
sub
dec
imul
imul
sbb
xor
sahf
repnz
xlat
movs
pusha
int
add
adc
ins
(bad)
jge
push
lods
outs
mov
dec
sbb
fisub
jecxz
ret
pop
mov
out
ret
mov
test
sahf
push
xchg
mov
jmp
in
adc
das
add
cmp
lods
jae
pop
mov
call
jae
outs
fucom
xchg
imul
push
scas
ucomiss
imul
cmp
lods
adc
test
bound
push
dec
pusha
adc
fsubr
aam
stos
and
adc
jecxz
idiv
adc
add
ret
daa
fwait
out
sub
cwde
mov
jae
mov
out
push
jae
call
cmps
mov
inc
add
inc
fbld
xor
imul
shrd
push
add
(bad)
shl
std
ret
daa
daa
sbb
mov
adc
push
ins
mov
cmp
push
mov
in
into
fwait
sub
jb
lds
retf
dec
push
(bad)
cs
mov
xor
repz
stos
out
bound
adc
cs
jb
pop
pop
adc
(bad)
mov
dec
adc
in
cmc
mov
inc
pop
dec
sti
aam
pushf
stos
sbb
movs
pop
fnstcw
cmp
pop
cwde
mov
test
sbb
shl
push
fimul
daa
ret
aam
or
pop
pop
mov
fst
add
test
cmc
sbb
jge
lods
push
push
lea
adc
push
je
pushf
xor
inc
scas
add
or
dec
mov
jecxz
scas
or
data16
push
fsubr
test
or
jo
pop
or
push
dec
cmps
lds
pop
movq
into
mov
jmp
icebp
or
dec
imul
test
mov
shr
leave
mov
js
cmps
mov
daa
xor
jp
out
add
repnz
int3
pop
or
retf
sar
xchg
(bad)
and
pop
aas
pop
sub
sub
push
ja
sbb
ret
popa
pop
je
clc
fisub
mov
mov
cs
aad
xor
mov
mov
xchg
movs
fninit
in
and
mov
popf
and
jle
push
dec
pop
jae
cli
stos
frstor
mov
adc
enter
mov
push
and
mov
or
popa
fiadd
add
std
scas
cld
push
xchg
pusha
xchg
js
nop
scas
pop
popf
retf
pusha
push
lahf
mov
and
dec
pushf
jne
and
or
ret
data16
xchg
cmp
(bad)
jle
sahf
mov
fs
ds
mov
mov
and
(bad)
jl
or
xchg
mov
push
pop
add
int3
pop
lods
fcmovu
xor
push
dec
pusha
mov
add
aaa
adc
dec
or
inc
jecxz
pop
adc
ja
push
jmp
dec
xor
or
sub
pop
cdq
inc
jb
call
fsubrp
xor
and
cwde
sbb
stc
inc
loope
mov
or
push
sbb
dec
cmc
int
std
xchg
inc
(bad)
std
adc
lea
sti
sub
addr16
inc
xor
mov
out
retf
add
lds
aaa
repnz
add
call
sti
fwait
sub
lods
jne
loopne
sar
repz
in
xchg
cmp
xchg
mov
pushf
push
int
cs
push
test
cmp
pop
inc
repz
sub
cmp
mov
stos
mov
or
dec
sahf
inc
(bad)
sti
das
xchg
jmp
pop
dec
inc
js
test
test
(bad)
dec
sar
nop
add
int
addr16
adc
xchg
push
stc
outs
push
dec
icebp
aas
push
les
test
add
fcmove
std
dec
test
aas
jo
push
out
fidiv
mov
rol
mov
je
sub
das
enter
loopne
es
or
push
dec
(bad)
sbb
jmp
stc
cs
xchg
lods
or
rcr
push
test
fnop
jns
xor
xor
(bad)
cmc
cwde
fst
sub
inc
(bad)
adc
in
and
shl
mov
mov
xchg
cmp
add
(bad)
scas
xor
mov
jns
ins
call
cmp
jno
cmp
push
aas
outs
in
inc
imul
aas
push
mov
fst
dec
(bad)
clc
in
lahf
shr
repz
cmp
pop
xchg
mov
add
or
loope
addr16
ret
shl
lahf
mov
cdq
rcr
ss
mov
ret
push
leave
sar
movs
dec
inc
les
int3
stos
inc
lahf
jb
xor
call
mov
iret
cdq
ins
in
div
es
cld
mov
or
jg
outs
push
inc
dec
add
out
loope
hlt
dec
int3
inc
outs
cmp
push
hlt
loop
and
and
cmps
jle
xchg
arpl
sti
shl
int3
adc
shl
xchg
xchg
lea
dec
inc
arpl
fistp
xchg
movs
xchg
out
aad
add
sti
in
pop
shr
xchg
xor
in
xchg
or
cmp
sbb
dec
push
push
xor
jo
sbb
add
jne
jno
std
adc
mov
call
jbe
fisub
icebp
mov
in
add
push
outs
lock
in
adc
or
outs
xor
pop
adc
fdivr
outs
sbb
adc
xchg
int3
mov
mov
add
pop
mov
popf
push
ja
movs
aas
leave
sub
mov
push
cmp
cmp
call
test
cmc
dec
adc
out
nop
jns
xor
stos
ror
and
push
mov
loopne
inc
xchg
jno
pop
pop
rcl
push
hlt
dec
mov
sub
adc
out
sti
pusha
out
retf
frstor
(bad)
jmp
sub
cdq
idiv
retf
ja
pop
pop
es
push
add
xor
pop
dec
pop
pop
jp
adc
and
in
add
lods
mov
aad
jb
loope
and
into
(bad)
and
inc
push
aad
test
stc
jno
jmp
aas
pop
aaa
dec
lods
lods
push
lea
add
test
les
ret
(bad)
mov
in
jmp
dec
jae
in
dec
call
outs
and
jnp
imul
mov
adc
pop
cmp
nop
popf
scas
stos
sub
jecxz
mov
dec
test
test
and
xchg
aaa
jl
cmps
and
sahf
(bad)
rcr
in
xchg
scas
sbb
cli
aas
les
iret
inc
test
xor
push
les
mov
ds
pop
add
jb
data16
ror
popa
int
loopne
mov
out
sahf
icebp
push
cmp
jb
mov
push
mov
or
repnz
test
mov
mov
pusha
inc
mov
pop
arpl
sti
xchg
push
ss
or
mov
sbb
rol
or
not
jle
sub
inc
icebp
iret
arpl
or
cmc
call
pop
imul
push
ins
or
(bad)
jbe
fwait
push
pinsrw
inc
and
lods
pop
cmp
push
in
imul
rcr
or
or
fist
iret
add
movs
inc
shl
adc
xchg
in
in
test
(bad)
out
and
rcl
cmp
or
dec
mov
jge
jns
out
aad
pop
push
nop
lods
jp
jno
mov
or
les
fwait
sbb
mov
jo
pop
inc
xor
or
sub
and
jo
popa
(bad)
stos
xlat
pop
xor
shl
sbb
aad
jecxz
add
xor
fcmovb
jg
cld
test
cmps
xchg
rcr
xor
jns
dec
test
pop
lahf
cli
pop
and
and
mov
mov
jecxz
test
not
repnz
out
fmul
bound
push
out
and
push
pop
idiv
aad
xor
mov
jne
jmp
fisttp
pop
mov
imul
mov
adc
pusha
xchg
push
mov
or
ja
div
lods
mov
ret
in
out
pusha
sbb
scas
xchg
push
add
pop
call
push
jno
push
xor
mov
cld
repz
rcr
push
fsubr
xor
inc
les
inc
mov
aas
stc
and
movs
mov
outs
test
es
sbb
ror
mov
inc
and
sub
enter
cdq
mov
push
dec
addr16
add
pop
push
repz
and
or
cmp
cli
add
and
jl
dec
adc
aam
popa
adc
mov
or
mov
mov
into
shr
cmps
rcr
fcom
adc
cmps
dec
xchg
retf
popf
jl
and
pop
add
jecxz
pop
add
mov
dec
loope
dec
jecxz
dec
add
mov
(bad)
or
push
stos
pusha
in
add
icebp
lds
hlt
aam
ret
lods
retf
lods
xor
in
out
sub
in
loope
mov
mov
sub
mov
outs
pop
sub
movs
sub
mov
mov
xor
xchg
sbb
xor
(bad)
loop
sbb
sbb
push
fidiv
pop
mov
dec
test
(bad)
into
test
inc
scas
adc
icebp
mov
call
push
sub
cmp
and
outs
lahf
push
mov
jne
not
repz
xor
(bad)
clc
(bad)
aas
push
push
pop
js
cmp
adc
(bad)
addr16
test
lock
out
lock
or
jl
jle
push
dec
xchg
cli
rcl
lock
lock
pop
cmp
mov
addr16
pop
or
xchg
in
push
or
push
loopne
outs
pushf
ret
xchg
stos
and
aam
pop
iret
and
add
ret
inc
pushf
clc
push
cmovge
adc
fcomip
inc
jnp
mov
push
cmp
fadd
jmp
mov
mov
and
cmp
scas
repnz
nop
arpl
push
sti
cmc
dec
out
cmp
fist
test
add
dec
iret
fadd
xchg
xlat
popa
mov
pop
inc
inc
and
mov
(bad)
cmp
adc
add
jp
dec
cmps
jno
add
xchg
push
mov
add
jnp
sbb
add
cli
add
das
outs
test
add
outs
mov
test
push
add
jb
cdq
aaa
int
pop
cmp
xchg
push
xchg
sub
hlt
jmp
sub
sub
dec
sbb
call
bound
mov
fcmovbe
inc
or
pusha
std
shl
test
adc
jno
stos
dec
or
movs
aam
outs
jnp
mov
ja
sti
push
jb
scas
adc
xor
xchg
or
cli
pop
pop
ret
aas
ins
jmp
fdiv
pushf
mov
ret
or
loopne
and
es
and
fst
cmc
xlat
pop
outs
jmp
xchg
mov
(bad)
xor
jno
jmp
in
jae
adc
stos
cmp
imul
call
pop
cli
in
mov
(bad)
mov
mov
sub
out
xchg
add
and
or
(bad)
test
rcr
sbb
xchg
arpl
into
mov
mov
add
leave
loopne
push
jno
sbb
aas
push
outs
pop
pop
dec
and
es
lods
outs
or
and
and
sub
cmp
push
ja
int3
pop
cmps
or
jnp
push
popa
add
sbb
repnz
cmps
pop
sub
das
stc
out
cli
or
stos
(bad)
in
fxch
inc
je
cli
jg
gs
sbb
test
or
mov
out
adc
inc
jmp
mov
(bad)
aam
push
(bad)
iret
dec
fidivr
mov
mov
(bad)
mov
shl
pop
push
or
xchg
aas
sbb
das
add
cli
fisttp
cmp
jle
ja
or
iret
dec
or
icebp
fadd
add
icebp
aad
jmp
xor
lods
jmp
inc
dec
mov
gs
outs
les
movs
dec
aad
xor
aaa
mov
jnp
lods
xchg
inc
ins
fsubr
adc
in
xor
fmulp
jp
cmp
and
fs
call
push
xchg
pop
sub
sar
in
jno
inc
cs
lahf
cmps
cmps
(bad)
loop
mov
fiadd
inc
pushf
cmp
add
(bad)
fist
xor
(bad)
int
lea
call
push
mov
test
bound
push
push
in
jne
add
cld
shl
mov
mov
ins
out
(bad)
es
dec
imul
pop
push
fs
jbe
inc
push
push
out
aad
and
int
mov
jl
adc
sub
add
dec
bound
ins
add
fcomi
stos
push
jl
push
mov
sub
push
inc
ja
sub
xchg
bound
sti
jecxz
(bad)
ins
mov
sti
inc
inc
nop
and
sti
push
dec
mov
ret
inc
movs
movs
ins
shl
pop
or
(bad)
fyl2xp1
leave
into
fnsave
cdq
jge
sbb
fs
pop
xor
stos
sbb
in
bound
loope
dec
fild
ret
xor
scas
sete
adc
(bad)
jmp
add
(bad)
call
neg
push
bound
popa
mov
jmp
je
push
in
and
call
call
pop
outs
inc
sub
pop
jge
jae
lea
test
mov
cmp
repz
push
push
sbb
mov
and
je
adc
cmp
mov
and
sub
loopne
inc
xchg
push
jmp
jl
xchg
scas
retf
cmc
in
ja
and
icebp
and
jg
sub
or
or
retf
(bad)
in
cmps
(bad)
xchg
les
pop
sbb
neg
add
inc
cmc
sbb
loop
mul
push
ds
aam
mov
(bad)
test
in
xchg
pop
mov
cmps
cdq
sbb
xchg
mov
sti
inc
pop
std
lods
dec
pop
pop
mov
gs
(bad)
fisttp
mov
cmpxchg
add
icebp
(bad)
cdq
inc
xchg
adc
cmp
(bad)
lods
fsub
pushf
dec
adc
dec
popf
mov
jb
arpl
mov
pop
xchg
dec
lods
cmc
into
sbb
movs
aaa
jno
and
xor
pop
pop
dec
icebp
xchg
clc
fnsave
and
xchg
xchg
cmps
ja
test
fld
add
stos
pop
dec
and
in
call
arpl
pop
mov
adc
aas
xchg
mov
dec
or
xor
(bad)
pop
mov
xlat
cdq
(bad)
gs
(bad)
cwde
loopne
add
scas
pop
jmp
dec
aaa
ret
push
pop
adc
in
xchg
ret
push
repnz
jecxz
cmp
mov
fimul
sbb
iret
add
sbb
imul
mov
cmp
(bad)
dec
daa
push
sbb
mov
sub
fnsave
pop
inc
(bad)
outs
or
inc
or
out
addr16
add
mov
movs
daa
jle
xchg
fcomip
cwde
shl
push
xor
sbb
cmps
std
daa
ret
fisttp
mov
cmp
dec
or
dec
mov
sbb
inc
(bad)
jp
mov
sub
add
mov
sbb
stos
arpl
add
in
pop
jae
xchg
mov
int3
cmps
fidivr
xor
ja
ins
adc
and
out
sbb
push
adc
add
adc
add
sbb
dec
cmps
pop
push
fcom
jl
adc
xchg
dec
test
jo
mov
call
pushf
rol
test
je
shr
retf
data16
rcr
xor
mov
and
ret
add
cdq
mov
cli
mov
sar
mov
cmp
or
mov
xor
(bad)
pop
ficomp
add
dec
or
xchg
jge
and
add
imul
lods
nop
mov
mov
xchg
je
fs
(bad)
arpl
mov
test
lahf
mov
pop
lahf
shl
xlat
push
push
cmc
push
jecxz
jmp
pop
add
fs
xchg
cli
xchg
ret
fisttp
(bad)
stos
pop
mov
xor
push
shr
pop
dec
in
sar
mov
dec
es
mov
(bad)
icebp
sub
out
(bad)
shl
pop
cmc
(bad)
imul
mov
dec
das
and
adc
dec
into
rcl
std
ins
dec
int
adc
sub
nop
push
outs
adc
or
inc
scas
mov
cmc
out
sbb
imul
pop
lods
xor
mov
dec
cmp
adc
test
mov
mov
test
jo
mov
xor
js
adc
cwde
retf
scas
add
mov
or
jmp
retf
fimul
lds
dec
inc
jg
je
addr16
pop
sbb
cmp
int3
push
xchg
dec
mov
inc
std
xchg
xchg
and
xlat
sbb
or
add
add
cmp
mov
adc
sti
into
pop
mov
push
push
dec
rcr
lods
push
cli
mov
xchg
mov
mov
cmp
fs
loope
push
mov
es
daa
and
lahf
test
push
mov
cs
cmp
mov
lea
xor
xlat
and
addr16
and
aam
test
arpl
pop
sbb
jo
adc
(bad)
sbb
dec
mov
xchg
sbb
xchg
hlt
sub
dec
or
ret
add
leave
xor
add
lods
cld
adc
ret
inc
sbb
mov
inc
jmp
sub
mov
dec
xor
xor
inc
aas
fwait
leave
xchg
dec
mov
xchg
rcr
pop
cmp
xchg
fdiv
xor
mov
test
les
inc
aaa
jmp
test
cmc
repz
test
in
sbb
test
and
data16
and
cmps
into
mov
mov
add
xchg
inc
neg
mov
stc
aas
cmp
test
or
cmp
adc
mul
sbb
sbb
dec
xchg
jp
xor
mov
in
jne
mov
lock
test
cli
das
xor
adc
ins
movs
push
mov
lock
inc
lahf
jmp
ror
sub
jo
fwait
cmp
stc
jge
dec
inc
push
test
or
icebp
adc
lock
lock
mov
jns
dec
adc
pusha
xchg
cmps
mov
ficom
cmp
shr
push
shl
call
pop
mov
loope
leave
or
inc
fild
rcr
mov
and
mov
fsubr
clc
push
ss
dec
mov
mov
pop
xlat
push
push
daa
xchg
add
loopne
push
pop
shr
dec
cmp
lods
xchg
mov
shl
fidiv
loop
jne
jb
cwde
jg
ss
in
pop
and
das
cmp
aam
scas
bound
dec
push
(bad)
jle
ss
les
inc
(bad)
popa
rcr
push
cld
js
jle
fadd
push
pop
inc
ret
ins
mov
ins
pop
call
cmp
pop
aad
fnstcw
ja
daa
add
cwde
pop
fcom
lds
test
cmp
jle
push
sub
sub
push
mov
ror
icebp
outs
and
rcr
movs
into
std
neg
imul
add
dec
xchg
cwde
or
(bad)
outs
mov
(bad)
mov
retf
mov
xchg
jno
push
repz
lahf
lea
push
out
mov
ret
sahf
(bad)
test
pop
int
lahf
sub
inc
fucomip
data16
leave
jecxz
cmps
or
loopne
pop
mov
pusha
inc
inc
mov
cld
lds
repz
outs
adc
into
daa
sti
push
repnz
or
mov
mov
mov
ja
cdq
push
sbb
adc
sbb
retf
call
imul
pop
clc
jecxz
out
stos
nop
push
movs
lea
push
jge
jo
push
xchg
fdiv
test
and
mov
aas
adc
mov
das
data16
xchg
aas
out
cwde
or
xor
(bad)
lock
xor
(bad)
ds
cmp
into
iret
mov
or
mov
jmp
cmp
idiv
mov
(bad)
imul
mov
inc
js
stc
out
xchg
stc
imul
loop
dec
cmp
and
ins
mov
dec
mov
popf
pop
xchg
pop
mov
jnp
mov
rdseed
bound
jl
mov
lea
in
push
cmps
adc
push
mov
xor
xchg
cmps
dec
das
(bad)
(bad)
test
call
stos
xor
and
sti
nop
fwait
mov
mov
sbb
leave
mov
adc
outs
xchg
rcl
mov
adc
mov
mov
clc
xor
js
lea
jnp
dec
and
sahf
in
shl
mov
or
cmp
inc
push
add
and
mov
push
mov
and
push
enter
inc
test
jbe
stos
cli
add
cmp
mov
xor
dec
adc
sub
inc
bound
call
or
push
daa
ins
add
scas
movs
sub
adc
pop
test
sbb
or
fadd
movs
push
aas
xor
outs
(bad)
dec
shl
xor
jb
jmp
adc
out
inc
popa
xor
jmp
jo
dec
imul
in
or
pop
pop
add
cmp
pusha
sub
aad
mov
jecxz
mov
push
les
sbb
adc
lods
rol
sub
or
fldenv
ret
cmps
mov
lea
pop
inc
cmp
pusha
or
sub
cmps
mov
or
rcl
inc
arpl
movs
loop
icebp
clc
add
dec
mul
dec
fsubr
or
cmc
pop
inc
ret
mov
cmps
mov
bound
js
and
lods
lahf
adc
or
push
xor
xchg
jge
mov
(bad)
out
push
mov
nop
mov
add
push
xchg
cmp
dec
icebp
jge
iret
xor
retf
sub
push
arpl
add
jge
in
pop
retf
cs
das
jmp
pop
(bad)
push
int
xlat
fwait
cmp
(bad)
(bad)
pop
mov
xchg
popf
ret
pop
mov
jb
pushf
pushf
icebp
daa
loope
jl
mov
pop
icebp
cmps
jo
pop
test
pop
call
jmp
dec
mov
pop
(bad)
call
push
scas
lods
inc
clc
(bad)
mov
enter
cwde
adc
adc
xor
jle
aaa
sub
sub
xchg
aam
pand
cmp
addr16
retf
repnz
adc
daa
inc
add
push
pop
push
cmp
mov
and
call
jl
aaa
cmp
cmp
jo
(bad)
push
les
push
in
ja
push
mov
mov
inc
call
mov
push
loopne
sar
jecxz
in
retf
lea
retf
dec
cli
jp
ret
mov
add
mov
xchg
mov
call
mov
es
in
sar
jno
jge
and
sar
dec
push
mov
dec
stos
dec
int
cld
std
pop
cmps
aaa
mov
cmps
icebp
jno
xlat
xchg
xchg
cmp
int
mov
pop
cmp
ds
in
pop
aad
sar
lahf
jnp
stc
inc
jmp
and
dec
sub
cmc
sbb
or
mov
arpl
sub
push
rcl
repnz
inc
mov
inc
in
adc
sti
pop
add
mov
mov
xlat
lock
enter
or
xchg
or
imul
lds
nop
enter
mov
push
cmp
pop
sub
cmp
lods
pop
mov
inc
sub
sbb
out
into
es
fild
ja
mov
dec
jmp
dec
sub
fs
ret
sub
shl
xchg
mov
pop
lahf
in
fld
fimul
fwait
pop
xor
adc
shl
xor
cmp
and
mov
cmps
movs
fisub
mov
lods
push
pop
dec
sub
and
xor
jno
xchg
mov
int3
arpl
inc
push
jns
dec
push
xchg
call
mov
pop
push
push
pop
xchg
gs
stos
in
pop
outs
mov
pusha
xchg
pop
jne
adc
test
lock
cmp
add
stos
jnp
or
aad
inc
add
outs
jecxz
fsubr
push
ds
scas
push
lea
cs
cmp
test
xchg
out
hlt
test
leave
pop
mov
rol
pop
mov
movs
repnz
dec
cmp
or
and
dec
clc
inc
mov
pop
jmp
pop
loope
and
mov
push
jb
jg
loop
add
dec
wbinvd
fs
sar
hlt
sti
stos
nop
out
(bad)
pop
add
inc
sti
mov
out
xor
test
pop
mov
pop
dec
cmp
dec
lods
std
inc
shl
lods
stos
push
ss
mov
mov
cld
aam
add
sub
jo
popf
cmc
aad
sbb
push
xchg
test
scas
ja
dec
xchg
test
aad
sbb
test
inc
push
lock
pop
nop
and
aaa
sbb
inc
idiv
data16
fs
out
fstp
mov
stc
jae
pop
xchg
inc
sub
mov
int3
mov
mov
jno
sub
enter
inc
xchg
in
mov
cli
shr
push
mov
retf
sub
stos
mov
mov
sbb
xchg
addr16
jl
xlat
jge
xor
push
retf
cld
out
int3
shl
bound
xor
xchg
cmp
mov
add
mov
shl
push
into
shl
add
adc
(bad)
mov
(bad)
mov
call
xchg
mov
rol
add
xchg
jmp
sti
lds
imul
jns
pop
mov
shl
or
inc
and
dec
sub
or
mov
int3
dec
sbb
mov
(bad)
stos
loopne
cmp
and
mov
(bad)
(bad)
cwde
imul
movs
fwait
cdq
cmp
cmp
xchg
ret
sub
retf
xlat
dec
lods
cmp
imul
or
or
dec
dec
cmp
inc
adc
add
pop
cld
dec
or
lahf
fisub
stos
into
cwde
add
popf
je
mov
lods
mov
ins
jmp
jbe
inc
shr
ficomp
or
mov
jl
xor
dec
adc
sub
and
retf
movs
gs
out
mov
ins
fist
div
je
lods
lds
jg
fwait
or
sub
js
in
enter
stos
xor
inc
mov
sub
xor
and
clc
pop
cmp
aas
cmp
jns
push
jg
js
data16
(bad)
cmp
test
lds
adc
dec
or
leave
(bad)
jnp
in
mov
aaa
stc
(bad)
aad
sar
dec
mov
lods
inc
mov
xor
xor
pop
test
fst
mov
adc
or
pop
icebp
sbb
push
ins
jne
or
and
lock
push
mov
jmp
adc
lock
fcom
test
and
and
mov
std
stos
call
scas
adc
xchg
sbb
cmp
xchg
in
retf
outs
mov
xchg
xchg
bound
xchg
mov
dec
sbb
cs
pop
xor
bound
dec
mov
(bad)
movs
lods
xchg
xor
lea
gs
and
jne
inc
jp
and
pop
or
or
(bad)
mov
cdq
fimul
xor
jl
pop
add
adc
jmp
aaa
inc
push
xchg
push
fistp
gs
dec
repz
and
iret
xlat
and
jl
jbe
jge
pop
or
addr16
fnstenv
test
inc
fldenvw
jmp
mov
sahf
jmp
mov
sti
sbb
mov
and
mov
ja
sahf
adc
pop
push
mov
mov
xor
jp
test
sbb
lock
xchg
enter
(bad)
push
out
mov
loop
dec
push
mov
mov
lods
cmp
and
(bad)
jb
je
adc
lock
nop
inc
rcr
cmps
mov
sbb
in
es
into
mov
add
int3
test
movs
into
sub
cmp
pop
add
addr16
cmp
fist
fistp
test
aad
cld
sub
cmp
inc
xor
outs
cdq
arpl
loope
adc
mov
push
cmps
ins
sahf
sub
pop
aaa
adc
xchg
pop
lods
cmp
mov
mov
jns
push
pop
leave
jae
cmp
adc
pop
arpl
retf
mov
pop
jg
ret
outs
fwait
call
div
or
sub
sbb
bound
(bad)
mov
out
cmp
ror
ins
fdivr
adc
in
sar
pusha
mov
fsub
fadd
scas
cmp
push
int3
push
fisttp
xchg
add
dec
popf
leave
ret
inc
loopne
xchg
cmc
inc
push
jg
jle
cmp
push
ret
ret
mov
dec
xor
mov
jae
fld
cmp
cmp
or
adc
pop
gs
adc
mov
push
mov
or
loopne
dec
push
popa
cmc
inc
fild
hlt
or
pop
mov
out
xchg
outs
fst
inc
sub
xor
loop
std
fcmovnbe
sbb
call
scas
pop
adc
sub
mov
(bad)
aas
mov
sahf
adc
das
in
imul
pop
lods
fs
aas
and
jbe
xor
stc
mov
add
jo
test
inc
imul
mov
mov
sbb
and
jmp
and
push
mov
enter
movs
lock
mov
test
icebp
dec
pop
int
sahf
les
rol
push
mov
xor
(bad)
push
inc
fild
pop
lock
sub
mov
mov
fsub
mov
in
sub
sub
cld
data16
movs
rcl
dec
out
sub
or
leave
sbb
je
sbb
mov
call
retf
pop
xor
inc
or
out
out
adc
dec
scas
fisub
jmp
push
push
int
dec
inc
add
cmps
in
push
pop
je
mov
cwde
push
mov
sub
mov
sub
jae
sahf
ret
lods
stos
inc
jp
mov
jmp
xchg
dec
and
pop
xor
rcl
and
test
jp
imul
les
jno
sti
sub
push
push
and
ja
cmc
push
sbb
cmp
adc
mov
out
icebp
pushf
sub
pusha
nop
sbb
aaa
mov
xchg
cli
leave
and
lea
adc
sti
or
xchg
pxor
shl
data16
xchg
add
sbb
dec
(bad)
lods
and
sub
mov
mov
or
ss
test
cmp
adc
cwde
pop
imul
add
ret
pop
xor
jne
mov
outs
retf
fcmovb
test
or
(bad)
fcmovbe
add
xor
sti
xor
imul
push
lods
sbb
(bad)
in
adc
pop
jle
push
ror
dec
mov
clc
inc
sbb
inc
cwde
test
cdq
out
inc
mov
in
rol
ins
call
test
inc
inc
dec
div
xor
push
test
push
scas
jp
test
hlt
jbe
push
mov
mov
add
jl
fisttp
cmps
loope
dec
jg
jb
repz
aaa
adc
lds
inc
inc
xchg
retf
cmp
fidivr
push
mov
and
xchg
xchg
mov
test
inc
leave
push
sbb
hlt
inc
jnp
jns
popf
in
ins
scas
lods
and
data16
ror
mov
xchg
pop
hlt
xchg
dec
sbb
push
cmp
lock
ins
btr
pop
mov
aam
or
mov
push
stos
icebp
push
mov
lea
fwait
outs
inc
dec
add
or
sbb
retf
ss
xor
jbe
in
xchg
xchg
mov
adc
inc
sub
test
pop
xchg
jne
lahf
out
lock
mov
int
outs
push
mov
xchg
adc
test
fsubr
mov
int
(bad)
pop
sbb
aaa
sub
int
mov
sub
sub
push
stos
fnstsw
nop
adc
cmp
jecxz
in
sar
or
cmp
add
jg
ficomp
call
sti
cmp
(bad)
dec
push
and
dec
or
ficomp
mov
loopne
into
test
outs
add
push
mov
xchg
inc
std
sbb
sub
fs
xchg
clc
rol
out
cmp
lds
sub
addr16
and
outs
call
mov
jp
sti
das
sbb
inc
sub
add
push
hlt
push
inc
dec
(bad)
popf
cmc
repnz
add
mov
sahf
in
xor
push
fld
dec
xchg
sbb
test
jg
fisub
test
icebp
mov
cli
scas
jp
mov
mov
outs
retf
repz
mov
ficom
rcr
add
jmp
or
mov
sub
push
lods
std
in
xchg
or
lods
test
mov
jae
in
or
jl
and
push
and
imul
stos
fs
data16
rcl
movs
int
pop
pop
inc
retf
sbb
xor
inc
pop
pop
or
and
shl
push
es
sbb
bound
xchg
aad
fcom
mov
out
sub
shl
pop
ss
daa
fs
xlat
(bad)
out
inc
outs
call
add
scas
xor
mov
out
adc
sub
sahf
dec
xor
shl
or
sub
in
mov
xor
mov
xchg
fst
mov
sbb
popf
bound
cwde
cmp
pop
outs
cmp
and
push
xchg
pop
out
pop
push
mov
push
mov
dec
xor
dec
dec
int
in
sub
scas
xor
jle
or
dec
cmps
xchg
and
add
scas
std
xchg
into
aam
(bad)
(bad)
inc
lock
or
in
ja
popf
cmp
dec
add
ins
movs
jg
or
ret
mov
fldenv
popa
fld
scas
push
lods
cmp
sbb
test
(bad)
cmp
pushf
mov
outs
in
and
adc
repnz
xchg
in
fsub
daa
xchg
inc
or
repz
pop
mov
addr16
jns
xchg
or
js
sub
repnz
xchg
mov
mov
sbb
xor
xor
pop
addr16
sub
push
adc
or
adc
pop
fmul
sbb
sbb
jbe
loopne
js
xchg
rcl
mov
mov
push
out
mov
xor
jp
cwde
jmp
punpckhwd
dec
movs
jb
aad
pop
mov
or
gs
call
mov
push
xor
fs
pop
ins
mov
jnp
hlt
pop
shl
adc
dec
add
xor
outs
adc
ficom
xchg
mov
pushf
mov
retf
inc
ss
pop
inc
(bad)
lods
sbb
cwde
(bad)
mov
imul
dec
pop
jecxz
mov
inc
js
mov
fidivr
pop
aad
push
addr16
mov
inc
repnz
or
clc
mov
xchg
dec
jmp
dec
fwait
sub
test
cmp
cmp
movs
sbb
mov
cmp
xchg
iret
dec
pop
inc
jmp
jge
shr
dec
dec
adc
xlat
loope
adc
cmp
xor
lds
bound
xchg
push
xor
sub
mov
fs
shr
popa
lock
adc
stos
cmp
ret
or
dec
loopne
push
les
adc
(bad)
jb
push
push
dec
jbe
retf
shr
inc
test
int3
inc
sbb
in
inc
pop
pop
push
cmc
cld
in
out
and
stos
sahf
scas
stos
dec
stos
xchg
pop
stos
lods
pop
hlt
jbe
xchg
push
test
push
lods
adc
add
lds
ins
into
out
pop
das
ja
imul
mov
jl
out
or
mov
popa
add
cmpxchg
add
je
sbb
in
cmp
inc
sub
enter
mov
jmp
dec
arpl
or
test
cmps
add
call
mov
jl
jg
cmp
cmps
sub
mov
mov
cli
pop
xchg
retf
cmps
dec
adc
enter
fs
out
jne
mov
adc
sub
adc
mov
mov
enter
nop
adc
imul
or
adc
cmps
mov
push
dec
xor
inc
ds
scas
xor
dec
xchg
test
out
sub
xchg
lahf
xor
lds
test
cmp
sub
push
cld
mov
cmp
stos
int3
shl
cld
xchg
dec
iret
rcr
leave
push
loop
inc
add
adc
fidivr
sahf
outs
jle
fisttp
sbb
fdivr
and
fidivr
or
fnstsw
movs
leave
cdq
cs
dec
add
bsf
aaa
ret
sub
ss
cwde
and
push
dec
add
mov
lods
or
push
mov
fninit
and
(bad)
jno
cli
repz
mov
xchg
retf
adc
les
js
int
dec
push
mov
cs
cmp
sbb
mov
mov
inc
icebp
clc
mov
arpl
sub
(bad)
push
jnp
add
dec
test
pop
pushf
(bad)
dec
push
inc
mov
pop
fs
fdivr
mov
(bad)
dec
jecxz
repnz
sbb
mov
in
pop
out
test
imul
es
cmp
and
add
dec
leave
aas
addr16
and
loope
xchg
sbb
loope
push
inc
sti
(bad)
cld
jg
cwde
test
hlt
or
or
cmp
adc
and
movs
aas
(bad)
mov
mov
mov
add
inc
inc
dec
pop
adc
test
xchg
je
jl
add
pop
xor
pop
gs
fcomp
jge
jl
dec
test
mov
fldenv
inc
push
inc
jge
pusha
dec
les
outs
jg
jmp
cli
and
mov
adc
mov
pop
mov
cwde
add
pushf
not
dec
(bad)
loopne
xor
cwde
push
push
xchg
xor
cmp
sbb
xor
xor
xchg
sub
mov
and
pop
mov
addr16
xchg
loopne
add
sub
out
push
cmovge
sub
mov
cwde
cmp
pop
mov
aam
sub
in
jmp
cs
pop
stos
jg
xchg
int3
retf
fild
div
cmp
(bad)
cwde
cdq
mov
cmp
mov
sub
inc
dec
shl
ins
adc
ret
dec
out
add
dec
mov
push
jae
sbb
fisub
popf
cmc
scas
daa
sbb
nop
push
jmp
mov
mov
xchg
movs
hlt
sub
and
daa
mov
dec
loope
mov
icebp
pop
pushf
inc
in
mov
add
add
cmp
jmp
retf
(bad)
jbe
pop
add
je
loopne
pusha
fs
or
dec
(bad)
fsubrp
jmp
xlat
mov
pop
neg
cmps
push
mov
loope
dec
ror
mov
jl
push
int
(bad)
xor
cs
fcmovnbe
jecxz
(bad)
lahf
mov
rcr
cmc
push
xchg
jecxz
inc
cld
push
xor
or
mov
je
mov
cmp
add
clc
ins
rcr
rcl
test
popa
aad
cmps
sbb
gs
cld
mov
jg
bound
adc
mov
pop
or
push
sbb
ja
int3
mov
repz
cs
xchg
jmp
pop
movs
cmp
jnp
leave
adc
in
ror
add
lea
int
inc
add
pop
sbb
stos
xor
(bad)
cld
mov
jo
lahf
mov
icebp
les
rol
sbb
sar
pusha
enter
in
inc
test
add
and
mov
imul
add
jnp
mov
pop
cmp
lahf
into
cmp
mov
dec
icebp
or
jnp
adc
aas
hlt
xor
xor
pop
dec
push
dec
or
popf
jp
sub
mov
cwde
push
aad
and
sahf
pusha
mov
jge
sbb
xor
push
cmps
movs
dec
stc
sbb
or
and
hlt
enter
mov
pop
cmp
xchg
push
mov
scas
cmps
pop
sbb
xchg
mov
mov
std
in
sbb
pcmpeqw
pop
and
shl
rcl
std
out
mov
retf
mov
int3
jecxz
push
and
or
lods
pop
inc
sub
fchs
addr16
ss
and
push
rcr
mov
cmp
(bad)
sub
xchg
adc
lods
pop
xchg
call
call
add
enter
sub
adc
test
adc
cmp
test
inc
inc
scas
jle
imul
dec
inc
retf
addr16
iret
xor
mov
in
je
dec
gs
dec
lea
inc
push
xchg
push
xor
inc
dec
inc
stos
sub
and
loope
loope
xor
dec
cdq
arpl
pop
ins
loope
mov
stc
ins
xchg
adc
xlat
add
xchg
inc
repnz
clc
in
inc
cmp
enter
push
(bad)
jecxz
ja
pop
cmp
push
rcr
xchg
(bad)
enter
in
push
fild
inc
inc
or
adc
mov
pop
and
(bad)
cmp
lea
sub
inc
lds
mov
mov
or
dec
cmc
dec
mov
inc
pop
add
add
and
or
jp
rcr
ror
mov
jae
sub
sub
je
dec
lods
and
xor
pop
pop
inc
pop
js
sbb
dec
data16
fld
inc
jnp
mov
push
ja
pusha
xor
cli
mov
and
cmp
jmp
mov
xchg
mov
or
sub
pop
mov
xor
mov
inc
jno
xchg
sti
cmp
jg
adc
gs
sub
pop
movs
fmul
int
in
mov
sti
mov
dec
sbb
retf
add
js
in
call
in
jno
xor
xor
push
add
shl
sub
scas
in
push
xchg
sahf
xchg
pop
push
test
push
pop
fstp
frstor
inc
jl
jbe
dec
(bad)
and
cli
mov
stos
repz
adc
in
jge
push
(bad)
iret
cmps
push
cmp
push
(bad)
adc
test
sbb
dec
cld
lods
sub
jmp
lock
jg
jecxz
jmp
pushf
xchg
loop
cmps
fucomip
addr16
push
aam
stos
mov
pop
enterw
ja
xor
pop
dec
pop
dec
mov
test
sbb
mov
pushf
stos
addr16
stos
ss
and
jmp
aaa
xchg
sub
mov
dec
fmul
mov
pop
icebp
imul
dec
mov
pusha
pop
inc
mov
in
or
xchg
sbb
push
adc
(bad)
and
mov
dec
xor
iret
fstp
daa
jmp
xor
xchg
arpl
les
mov
sub
in
jns
add
jl
(bad)
dec
ins
pusha
pop
inc
fcom
test
jne
icebp
enter
adc
mov
lock
dec
call
test
sahf
push
add
stos
pop
pop
mov
lock
xor
fld
or
daa
pop
push
lea
je
jns
retf
inc
mov
ds
mov
fisttp
inc
data16
mov
sahf
out
arpl
pop
stos
adc
mov
mov
jge
sti
movs
cmc
or
popf
mov
mov
xor
inc
xchg
fadd
fnstcw
push
push
scas
push
or
push
enter
push
ja
inc
xor
and
movs
jmp
sbb
jle
jg
xchg
imul
in
pop
repz
mov
adc
xor
add
(bad)
neg
into
push
inc
ret
jne
mov
sub
(bad)
in
(bad)
cs
out
hlt
inc
hlt
sub
icebp
int3
adc
mov
xchg
cmps
scas
int3
les
loop
xlat
sbb
mov
mov
(bad)
pusha
mov
mov
mov
dec
test
push
inc
sti
in
not
add
lahf
(bad)
xchg
es
pop
mov
ficom
retf
push
sub
rcr
adc
inc
or
(bad)
add
xchg
scas
das
arpl
jbe
(bad)
lods
popf
cld
inc
jmp
dec
xor
loopne
add
fldcw
lea
xchg
sbb
mov
(bad)
fwait
stc
call
push
and
jae
push
out
fs
xchg
pop
shr
(bad)
fldenv
js
dec
scas
jle
or
push
inc
leave
mov
jns
int3
push
not
shr
popf
push
or
cmp
(bad)
cmc
jno
sar
ins
dec
or
aam
xor
in
(bad)
dec
imul
clc
inc
sar
sbb
inc
xchg
push
inc
or
bound
push
in
fdiv
mov
mov
(bad)
dec
jecxz
cli
repnz
lods
sbb
adc
gs
mov
mov
add
push
out
fild
adc
push
inc
movs
sub
mov
cdq
(bad)
int
push
js
mov
push
dec
in
ret
neg
inc
es
or
repnz
stos
adc
pusha
pop
pop
mov
sub
adc
sar
and
test
pop
dec
mov
push
aad
dec
jbe
inc
pushf
mov
cmc
aaa
xchg
or
jo
jb
scas
push
sti
clc
aam
clc
or
iret
mov
fild
sahf
(bad)
cmc
inc
push
pop
popf
(bad)
cmp
idiv
adc
dec
pop
jne
(bad)
std
jecxz
or
dec
mov
mov
(bad)
mov
add
outs
adc
jbe
outs
clc
sbb
push
push
jbe
xchg
jae
add
pop
scas
icebp
add
sbb
call
adc
xor
ja
push
push
test
inc
sbb
js
mov
out
in
mov
sbb
call
fdiv
adc
mov
jg
in
iret
(bad)
aam
inc
jge
pop
fadd
hlt
push
popa
gs
(bad)
leave
cmp
push
fisttp
out
inc
(bad)
mov
pop
mov
sar
adc
and
sub
(bad)
psllq
mov
mov
ins
or
mov
jg
mov
xor
jae
stos
mov
xchg
ror
xchg
mov
sub
or
int
mov
xor
sbb
stos
retf
push
pop
xor
dec
aam
jb
pmaxsw
pop
hlt
int3
dec
mov
mov
sbb
call
retf
js
dec
jge
jge
pop
sub
jbe
pop
cmp
mov
ret
imul
xor
add
add
bound
sbb
das
sub
dec
push
sub
adc
cmp
popf
dec
ror
mov
lock
or
mov
fwait
add
push
adc
jo
xor
or
cmp
call
or
jae
push
dec
sahf
movs
sub
xor
xchg
test
jge
sub
xor
cmp
jle
add
mov
push
in
out
stos
jno
imul
out
icebp
xor
scas
gs
rcr
ins
ror
push
add
(bad)
mov
movs
test
or
fnstenv
dec
fst
cs
cmp
xchg
jge
scas
xor
xrelease
pusha
cmp
push
and
or
test
enter
push
cld
jns
dec
out
xchg
or
js
stc
mov
cwde
push
dec
inc
jo
or
enter
rcr
aad
cmp
sub
dec
inc
cli
call
ins
jne
add
pusha
and
mov
add
out
fstp
repnz
lea
call
popf
sub
out
sbb
mov
das
stc
idiv
add
push
pusha
leave
add
icebp
test
dec
and
call
leave
das
and
call
in
jg
and
ret
test
int3
or
cs
mov
jle
or
push
push
sub
jl
sub
outs
mov
sar
inc
cmc
inc
or
cs
int3
lods
fcmovbe
dec
stos
mov
popf
pop
dec
cli
cli
push
(bad)
jmp
xor
mov
jne
clc
mov
mov
mov
les
leave
cli
cmps
jmp
cmp
sub
lds
es
cmp
(bad)
or
fs
cmp
and
push
sbb
std
in
push
mov
mov
cld
xchg
sub
retf
mov
add
mov
stc
lods
scas
stos
xchg
add
push
adc
sti
(bad)
pop
addr16
clc
or
dec
fwait
mov
and
jnp
ret
nop
aad
pop
add
dec
or
sbb
pop
xor
in
pop
fwait
or
enter
sbb
jmp
arpl
pop
cld
lock
and
mov
mov
hlt
and
clc
sub
mov
push
mov
cmp
dec
aam
jns
(bad)
cli
inc
int3
xchg
mov
cwde
popf
jg
sbb
ficom
sbb
pop
lods
int
dec
std
inc
sbb
psubd
gs
mov
(bad)
cmp
adc
shr
ret
adc
retf
pop
shl
push
mov
rcl
aam
scas
push
fdiv
cmc
push
xor
dec
jmp
inc
out
and
arpl
mov
popa
daa
int
cmps
pop
(bad)
cld
fimul
xchg
xor
push
xor
push
xchg
mov
sub
cmp
cwde
dec
push
and
leave
pop
inc
pop
sbb
clc
in
clc
mov
add
sbb
mov
sbb
fimul
cmp
pop
jg
fstp
(bad)
popa
pop
pop
aad
data16
stos
and
inc
mov
pop
popf
xchg
neg
shl
and
mul
sub
xor
or
jns
call
cmp
shl
aas
pusha
jp
fistp
out
jmp
xor
pop
mov
movs
loopne
fs
pop
or
xlat
xchg
mov
leave
and
xchg
(bad)
fst
cmps
push
outs
and
mov
sbb
pop
sbb
imul
mov
ret
mov
push
fdivr
cmps
mov
fsubp
outs
or
outs
pop
nop
fistp
popf
xchg
pop
push
out
cmc
and
cmps
cli
mov
in
dec
jmp
sbb
pop
cmp
out
leave
sar
jbe
mov
pushf
pop
hlt
pop
push
cmc
jmp
cmps
push
fist
dec
imul
daa
test
nop
sub
mov
(bad)
ins
dec
pusha
add
push
sbb
test
imul
iret
js
mov
pop
rol
pop
xchg
ja
push
xor
cs
xchg
dec
lds
hlt
out
pop
or
sub
call
inc
xor
dec
sti
imul
or
mov
ror
movs
pop
into
xchg
mov
lds
fs
hlt
retf
outs
call
sbb
outs
xchg
sbb
add
outs
cmp
mov
popa
leave
push
cmp
stos
xchg
sub
sbb
xor
dec
sar
cs
push
xor
sub
mov
iret
xchg
jmp
cdq
imul
add
add
xchg
inc
inc
pop
mov
and
adc
dec
xchg
inc
cmps
mov
xor
in
out
test
jbe
and
jae
mov
aas
mov
shl
(bad)
call
js
or
std
enter
call
mov
xchg
pop
mul
xor
out
inc
(bad)
out
movs
ins
or
mov
pop
retf
jmp
mov
push
not
je
pusha
jb
lods
out
mov
push
shr
adc
shr
idiv
loopne
push
call
add
ss
xlat
fld
sbb
mov
js
dec
xchg
mov
jmp
push
ror
cmp
push
jne
sti
dec
sahf
or
sbb
xchg
add
cs
or
test
imul
cmp
test
mov
jns
daa
mov
pop
cmc
call
dec
fiadd
jecxz
xchg
outs
stc
mov
inc
mov
jmp
leave
push
int3
sti
dec
outs
push
lea
adc
std
std
push
movs
je
je
mov
outs
jg
out
mov
fwait
cmps
and
pop
lahf
iret
add
xor
sub
mov
ficom
mov
fwait
aaa
imul
jmp
icebp
xlat
push
jo
clc
pop
push
cdq
gs
fldenv
repz
mov
mov
(bad)
out
jmp
xchg
data16
cmps
popa
jno
jge
(bad)
mov
mov
or
test
data16
push
xor
cmp
test
loop
xor
mov
iret
or
xchg
mov
dec
push
cmp
ss
pop
fsub
adc
lock
pop
push
push
leave
(bad)
push
add
jg
jnp
adc
mov
mov
div
ret
jle
scas
ins
sbb
int3
mov
cmp
sub
pop
or
xor
jecxz
or
bound
pop
sti
adc
hlt
clc
mov
cmp
nop
sti
xlat
lods
sbb
jecxz
addr16
sbb
jl
sub
idiv
dec
mov
jge
inc
sar
pop
sub
fdiv
push
mov
shl
adc
dec
mov
icebp
sar
adc
and
and
pop
aad
cmp
cmp
scas
sbb
push
xchg
pop
std
ja
stos
in
fimul
rcr
sbb
ja
call
out
or
and
sbb
stc
imul
push
dec
js
cmp
retf
cli
add
popf
push
and
and
and
or
dec
(bad)
je
push
sub
xor
mov
inc
jle
sbb
je
xchg
xor
outs
movs
(bad)
stc
jmp
jg
movs
pop
sti
jle
push
jp
mov
out
xor
sub
test
jg
push
inc
adc
and
adc
cmp
cmps
bnd
pop
pop
test
jns
xor
test
imul
imul
or
adc
add
push
data16
lock
pop
scas
add
fmul
retf
and
jmp
mov
imul
or
adc
aaa
icebp
aas
lock
push
or
(bad)
das
mov
jo
call
cdq
and
cld
in
sub
mov
fisubr
(bad)
or
ins
or
add
test
cmp
cmp
sub
or
mov
rol
stos
(bad)
push
cmovs
sbb
mov
and
cmp
and
xlat
call
xor
shr
or
push
xchg
loope
dec
out
mov
scas
add
mov
jl
mov
mov
out
stos
repz
jo
push
(bad)
cmp
pop
fcomp
dec
cmp
sbb
mov
xchg
cmp
sbb
into
dec
adc
mov
dec
pop
(bad)
(bad)
dec
sub
retf
rcr
push
popa
movs
in
or
push
sub
loope
pop
repz
xor
push
or
add
in
lds
shl
xchg
popf
mov
mov
mov
ins
inc
push
cli
outs
imul
jne
sbb
cmps
vcvttsd2si
aad
dec
pop
jmp
pop
(bad)
ja
adc
ret
inc
and
sub
(bad)
pop
mov
xchg
jge
push
inc
adc
pop
ins
mov
mov
ins
adc
jle
test
or
lock
push
outs
and
dec
outs
mov
movs
inc
test
inc
mov
test
jmp
pminsw
sub
add
inc
shl
sahf
push
add
adc
and
imul
pop
repz
jne
sub
cmp
in
mov
sbb
cmp
imul
and
pop
xchg
xor
ror
dec
xor
adc
retf
out
jle
pop
call
test
adc
inc
pushf
nop
test
psubd
out
push
(bad)
int3
jmp
cmpxchg
cmps
xor
pop
test
inc
cmp
and
arpl
stos
inc
mov
mov
push
mov
retf
leave
dec
mov
cs
xchg
cmc
js
mov
in
push
fs
push
daa
ret
das
mov
enter
or
retf
push
inc
rcl
push
dec
sbb
adc
(bad)
fsub
mov
lds
leave
push
fmul
nop
icebp
retf
jae
jecxz
ret
adc
leave
push
xchg
mov
std
retf
lds
mov
outs
jns
les
dec
mov
sub
jbe
dec
cmc
or
lods
in
xchg
int
pop
loopne
pop
ds
jge
sub
mov
mov
int
mov
daa
out
mov
jbe
mov
mov
xchg
mov
adc
pop
jecxz
aas
arpl
jne
dec
ja
push
repnz
ins
and
fild
cmp
hlt
or
lds
or
jnp
dec
repnz
popa
ds
inc
mov
rol
(bad)
cdq
pop
outs
into
xchg
mov
aaa
jo
add
aam
cmps
inc
xlat
or
out
mov
mov
shl
push
pop
jmp
imul
xchg
xor
test
adc
cmp
outs
add
(bad)
push
fwait
adc
je
mov
sub
icebp
push
jno
mov
xchg
add
dec
or
xlat
rcl
mov
jns
push
xor
mov
push
mov
lea
mov
movs
mov
ins
mov
xchg
lods
ss
cli
(bad)
ds
std
mov
nop
add
sbb
jge
es
fnstcw
sub
mov
mov
leave
test
xchg
scas
add
mov
dec
(bad)
sub
adc
push
and
shr
dec
cwde
repz
sahf
dec
push
in
adc
aad
push
xor
sub
inc
pinsrw
fistp
mov
in
fwait
jmp
dec
ja
popf
lea
adc
les
sti
iret
loop
fadd
cmc
outs
and
cmc
sub
imul
les
sub
arpl
and
inc
(bad)
fdivr
and
fldl2t
mov
out
aaa
jne
gs
xor
mov
(bad)
mov
or
jno
xor
mov
clc
dec
or
fsubr
ret
out
jno
pop
lods
mov
mov
sub
inc
adc
fcmovnb
nop
inc
dec
dec
or
push
shl
fmul
iret
jmp
fild
aaa
and
push
fistp
ror
test
cdq
add
push
mov
mov
pop
and
aad
std
push
cmp
ror
js
adc
in
stos
push
add
mov
dec
mov
pop
push
scas
inc
xchg
mov
and
xchg
rcl
(bad)
sahf
inc
(bad)
fstp
daa
sub
leave
jecxz
fsincos
jle
xchg
popf
add
es
mov
inc
inc
cmp
sbb
or
mov
xor
pop
sub
cmp
adc
xchg
cmps
aaa
mov
cwde
arpl
iret
jo
rcr
pusha
aas
mov
popa
jmp
dec
das
push
cli
adc
cmp
out
mov
xchg
cwde
cwde
lock
adc
dec
xchg
push
add
push
rcl
jno
iret
pushf
xchg
mov
aad
cmc
ins
iret
pop
lock
mov
push
push
test
ret
dec
mov
cmp
jl
leave
adc
adc
repz
mov
jl
add
ins
(bad)
retf
in
shl
(bad)
cli
sub
loop
out
icebp
mov
mov
jo
scas
sub
out
xor
or
sbb
jg
pop
inc
les
test
mov
xchg
adc
retf
adc
stc
or
mov
inc
push
lahf
jp
bound
out
fiadd
bts
push
and
sbb
push
(bad)
mov
jp
mov
sub
popf
out
or
push
out
in
inc
adc
dec
push
fst
mov
arpl
inc
adc
xchg
std
retf
adc
es
push
dec
out
rcl
es
lock
push
cmovl
cmps
movs
and
jmp
gs
mov
clc
push
popf
push
inc
arpl
mov
icebp
cmps
inc
sub
pop
and
retf
(bad)
fld
popf
pop
outs
mov
add
ret
mov
pop
push
dec
pop
jl
stos
jne
pop
sbb
cmp
jmp
cmc
popf
or
rcr
cmps
loopne
pop
push
fwait
xor
adc
je
bsf
into
ficom
test
ret
in
and
stos
sub
push
out
cmp
and
loop
push
aas
in
or
push
push
jo
add
add
rcr
sbb
sub
or
jle
fisubr
inc
jg
fstp
data16
clc
jno
repz
dec
shl
xchg
jp
je
stc
sti
xchg
jne
ds
(bad)
lahf
sbb
aam
mov
sbb
rol
pop
adc
or
test
push
retf
add
les
(bad)
out
sbb
enter
and
cmp
fs
dec
jecxz
cdq
fiadd
cli
jg
push
in
mov
and
xchg
inc
bnd
popa
das
or
pop
push
mov
loopne
push
push
stos
push
(bad)
and
pop
clc
iret
(bad)
sbb
push
mov
call
cmp
xor
inc
sub
ins
mov
cmp
int3
neg
movs
push
dec
mov
scas
xchg
ret
mov
mov
loope
push
push
nop
out
mov
push
mov
sub
lods
jae
xor
or
leave
or
movs
and
ret
inc
mov
push
imul
aaa
mov
(bad)
add
(bad)
mov
ret
ret
(bad)
leave
xor
push
jle
and
call
cdq
repz
mov
pop
mov
push
mov
cmc
mov
in
in
outs
cs
loopne
cmp
mov
mov
xchg
mov
and
xchg
jge
fbld
cwde
jmp
sti
retf
popa
gs
std
push
cli
inc
loope
sti
or
lds
dec
dec
mov
pop
jmp
adc
jb
fstp
sti
mov
das
xchg
out
mov
inc
push
test
cmps
aam
mov
mov
pop
call
fdivr
(bad)
fstp
ret
jmp
retf
pop
mov
or
mov
out
pop
test
xor
pop
push
jnp
mov
pop
popa
iret
dec
(bad)
cmp
fistp
mov
rol
repz
data16
ret
sub
jmp
(bad)
push
sub
jns
adc
mov
outs
scas
test
xchg
push
movntps
or
add
mov
in
sahf
and
cs
jmp
push
movs
xchg
sub
clc
cmps
and
dec
fsub
mov
rcr
std
mov
clc
sub
popf
sub
xchg
sbb
ins
mov
repz
shl
push
push
pop
jbe
dec
dec
aas
cmp
imul
pusha
retf
scas
call
std
push
loopne
xor
sub
mov
out
sub
lods
add
mov
sub
enter
add
or
jae
bound
push
xlat
idiv
retf
data16
sti
pop
int
(bad)
sub
or
shl
dec
sbb
mov
out
in
and
push
in
and
int
push
mov
(bad)
mov
xchg
xchg
in
ret
(bad)
adc
add
sub
idiv
leave
pop
ror
mov
loop
fiadd
adc
dec
mov
shr
outs
shl
popa
ret
aaa
cmps
mov
ins
cmp
pusha
push
xor
arpl
and
ja
lahf
std
fcomp
push
mov
les
cmp
mov
sub
rcr
lea
jg
add
jg
cmp
mov
dec
dec
xor
enter
(bad)
push
lds
cmp
and
inc
outs
mov
fwait
xchg
jge
jecxz
jo
lds
dec
ficom
mov
call
daa
loope
xor
scas
out
in
outs
adc
icebp
pusha
sub
jg
push
push
mov
mov
lods
test
jbe
add
lahf
jl
movs
jbe
hlt
pushf
pushf
sar
test
das
outs
rol
add
inc
mov
aas
(bad)
or
not
outs
hlt
loopne
and
jp
mov
sbb
inc
rcl
jmp
fnstenv
add
mov
leave
out
mov
add
call
or
lahf
dec
aam
lds
xchg
mov
out
sahf
xchg
xchg
dec
mov
jmp
push
sub
inc
push
stc
mov
pushf
or
out
push
xchg
or
dec
lock
adc
test
jmp
push
lahf
mov
fld
mov
dec
daa
lods
cmp
mov
fs
xchg
leave
rol
mov
std
fs
cmp
sub
jae
mov
imul
and
neg
jo
xor
cmp
add
push
mov
xlat
inc
push
adc
dec
pushf
repnz
mov
jge
mov
out
add
xchg
pop
mov
jnp
cld
dec
scas
pushf
mov
sub
inc
mov
(bad)
sub
nop
out
jp
xchg
xor
jo
jne
and
pusha
mov
xchg
ins
hlt
ret
xor
into
lahf
fld
or
je
xchg
and
out
aad
sbb
cmp
inc
outs
mov
repnz
movs
int
stc
mov
push
fmul
jne
mov
cmc
dec
jns
stos
adc
in
cli
mov
push
lods
xchg
push
mov
mov
push
mov
cmp
js
in
and
imul
jb
inc
popf
ss
pusha
mov
dec
sbb
sub
shl
int3
rol
lea
in
jb
jg
lock
or
loop
dec
mov
popa
push
fs
out
sbb
cmps
mov
mov
pop
push
retf
pop
aam
jp
and
cmc
push
mov
jg
mov
adc
add
in
and
mov
mov
sar
call
mov
jae
in
sbb
cmps
inc
jmp
xor
mov
xor
mov
push
shl
out
loop
outs
icebp
sub
ja
sbb
and
mov
fisttp
fst
xor
mov
imul
scas
inc
or
jb
jmp
jge
rcpps
aaa
push
cmp
mov
stos
loop
movs
loop
jecxz
and
sbb
(bad)
pcmpeqb
cmp
lahf
call
rol
sbb
mov
andps
in
sub
sbb
jp
mov
in
sub
add
fild
sar
sub
(bad)
push
out
mov
lods
shl
sbb
les
xor
loope
pop
js
mov
and
add
adc
inc
or
add
outs
es
hlt
add
dec
jnp
imul
popf
out
mov
cmp
mov
xchg
mov
dec
rcl
xchg
mov
cmp
and
dec
cmp
in
sub
(bad)
push
shr
rcr
or
xor
inc
call
mov
dec
sti
outs
addr16
mov
mov
call
loop
or
pop
cmp
fidivr
mov
call
add
dec
call
out
ret
in
xor
add
push
loop
add
retf
enter
clc
mov
aas
fisubr
or
cwde
sbb
sbb
cmps
loop
int
ins
cmps
in
aad
(bad)
mov
mov
shr
xor
ret
dec
test
adc
xor
icebp
add
ja
push
imul
push
ret
jb
xchg
ret
hlt
out
push
sti
loope
jmp
mov
jbe
and
ror
cmp
mov
repz
imul
xor
in
mov
dec
sbb
pop
shl
in
(bad)
or
test
xchg
mov
in
mov
push
cli
mov
jo
repnz
xor
pop
add
adc
lea
test
adc
scas
pop
(bad)
test
add
bound
xchg
fbld
dec
mov
jne
ret
inc
jecxz
jno
xchg
pop
push
lahf
pushf
jle
pop
(bad)
pop
popa
ss
lods
fisttp
(bad)
xor
pop
das
(bad)
int3
ror
dec
stos
or
jnp
jae
mov
neg
in
push
(bad)
leave
inc
dec
gs
and
mov
inc
rcr
jns
jae
into
aam
push
repz
ret
add
ins
retf
sub
push
push
xor
add
pop
xor
push
data16
jbe
dec
or
repnz
nop
and
mov
xchg
xchg
push
int3
push
push
and
adc
iret
icebp
dec
cld
xchg
loopne
mov
in
add
(bad)
jmp
out
(bad)
in
pop
fidivr
daa
dec
dec
loop
jmp
cmp
xor
xchg
inc
jl
lods
cmps
dec
repnz
into
ret
stos
imul
sbb
ds
mov
outs
add
mov
imul
(bad)
(bad)
or
je
pop
dec
inc
pushf
bnd
mov
ds
(bad)
mov
pop
aaa
fdiv
adc
repz
sub
xchg
cli
push
mov
jo
jecxz
loop
lods
mov
into
jmp
and
sar
adc
loopne
cmp
inc
aad
cmp
dec
push
dec
cmp
es
add
or
add
mov
mov
retf
pop
stos
fwait
rcl
sbb
ss
leave
ret
iret
cld
add
aas
jb
inc
lea
xchg
in
retf
outs
fnstenv
js
cs
xor
lods
push
lock
mov
std
jnp
push
push
popa
or
sar
icebp
jne
test
jle
adc
into
into
(bad)
retf
lock
inc
mov
sbb
add
int3
add
div
dec
aam
xor
test
ins
leave
pushf
cmps
cdq
mov
jnp
inc
mov
stc
jg
jmp
mov
cmp
inc
cmc
outs
and
add
xor
loope
or
rcr
in
ror
test
push
out
jbe
fistp
(bad)
cdq
int3
ins
sub
dec
mul
dec
movs
jo
inc
xor
fdivp
into
and
xchg
call
enter
inc
lds
fucom
int3
lock
ret
je
sbb
pop
or
fstp
mov
xor
pushf
out
add
mov
inc
mov
mov
push
inc
cmp
dec
inc
xchg
mov
or
xlat
(bad)
fidiv
inc
push
rol
xor
into
addr16
pushf
sub
imul
repz
call
and
inc
js
xor
retf
mov
(bad)
movs
lds
pop
stc
clc
dec
pop
mov
call
stc
cwde
outs
cmp
(bad)
mov
and
inc
sub
pop
mov
sbb
sbb
std
push
push
pop
jg
out
and
cdq
or
sub
out
aaa
sub
loop
out
ja
scas
dec
pop
int
add
sti
inc
push
xchg
daa
std
dec
mov
movs
jg
cmps
ss
ds
mov
clc
cmp
popf
jb
jge
mov
cmp
ss
adc
inc
inc
(bad)
mul
sti
loope
jo
std
xchg
xchg
jmp
popf
xchg
mov
cdq
xor
ret
pop
pop
mov
test
push
dec
repz
movs
sbb
sahf
sub
call
loope
xor
inc
test
aaa
call
out
mov
fwait
pushf
mov
inc
gs
cmp
retf
push
mov
add
call
add
fidivr
adc
add
jo
jge
dec
or
mov
jb
add
ja
xlat
movs
add
iret
and
and
loopne
pop
repz
xor
xor
jnp
jp
cmc
cmp
xor
scas
jmp
ret
inc
jecxz
retf
and
xchg
in
mov
pop
ins
mov
add
aas
leave
imul
mov
lock
mov
test
loope
idiv
push
cmc
out
gs
scas
out
in
(bad)
cmp
iret
pop
(bad)
cdq
jne
sbb
sbb
leave
fcom
add
push
and
and
cmc
(bad)
mov
outs
pop
dec
xchg
aaa
in
jg
adc
jmp
mov
ins
and
retf
je
cld
test
pop
xor
jo
mov
mov
mov
jg
jns
pusha
adc
sbb
stos
pop
and
ja
cmp
das
mov
icebp
mov
or
jbe
ret
jmp
div
out
cwde
fcom
popf
mov
fcomp
jnp
xlat
sbb
arpl
mov
xchg
push
cmp
mov
stos
rol
pop
js
out
lods
(bad)
rol
enter
mov
jnp
rol
dec
xor
adc
loop
aaa
arpl
mov
fisttp
aam
push
inc
jl
mov
mov
pop
jno
cmp
xchg
jns
pop
in
int
jo
sbb
ds
or
jne
xchg
push
and
cdq
not
js
in
retf
jge
outs
jl
mov
cs
les
dec
ins
icebp
xor
mov
mov
ret
lods
add
pop
push
sub
(bad)
mov
inc
cmp
das
cmp
adc
dec
cmp
sub
clc
or
push
cmp
push
cs
sub
scas
mov
cmp
adc
push
outs
ins
fcomi
mov
dec
xchg
jg
and
and
push
test
imul
dec
mov
ds
push
(bad)
sahf
(bad)
out
stc
icebp
arpl
iret
pop
stos
mov
sub
int
das
call
jg
cmp
sbb
rcr
stos
inc
repz
sub
mov
or
mov
xchg
int
out
aad
inc
and
and
loopne
fidivr
xor
les
and
loop
xchg
mov
adc
push
cli
lods
xor
int3
rcr
cs
pop
imul
sahf
sub
mov
xor
and
add
int
push
test
mov
mov
xor
sbb
aaa
pusha
cld
jno
test
shl
jnp
inc
push
sub
adc
lock
ret
addr16
aad
adc
out
sahf
bound
bound
add
iret
(bad)
and
mov
add
push
pop
push
lahf
sbb
xor
push
out
cmp
sub
das
mov
push
xchg
out
js
dec
pusha
out
pop
std
retf
les
popa
xor
ror
lea
retf
mov
or
ins
or
mov
jl
dec
or
lods
mov
mov
sub
push
add
jp
fnstcw
inc
push
sbb
aam
jle
movs
push
test
test
mov
call
sub
in
sub
pop
xor
je
inc
adc
popf
mov
pop
push
ins
push
push
push
cmp
jp
mov
imul
ret
pop
popa
push
imul
push
lea
dec
push
pop
sbb
xor
ret
repnz
movs
out
mov
mov
addr16
popa
mov
mov
sub
dec
cwde
sub
xchg
lods
addr16
rcr
cs
movs
xor
leave
pop
xor
lahf
aaa
xchg
xor
xor
mov
int
or
call
out
pop
jne
outs
cld
pop
add
jmp
or
fild
aas
in
jae
je
sbb
dec
push
cli
or
int3
rcl
mov
xchg
lods
je
into
ja
jmp
ret
mov
imul
and
daa
loope
and
outs
ds
adc
sbb
push
push
pop
mov
test
mov
jb
in
inc
xchg
ret
inc
add
cs
xlat
scas
sub
int3
pop
pop
mov
popf
fnstsw
push
dec
sti
and
repnz
fmul
xchg
fs
stos
mov
jg
adc
dec
xchg
or
push
jmp
(bad)
out
nop
xor
mov
sbb
scas
fild
pop
xor
mov
mov
and
test
pop
push
inc
ins
aad
jg
xchg
cmps
ror
dec
imul
retf
push
les
xchg
jg
xchg
sbb
adc
cmc
mov
outs
pop
aam
xchg
pushf
jnp
aaa
jp
inc
xor
dec
add
push
popf
jecxz
popf
aad
adc
inc
mov
dec
and
mov
sbb
je
jo
or
sbb
clc
xor
cmc
popa
pop
jbe
std
pop
xchg
inc
aas
loope
add
icebp
btc
outs
jge
xor
leave
sub
jno
fadd
sbb
jno
add
mov
pusha
ins
push
xor
retf
adc
repnz
sti
cmp
or
das
ins
sar
sbb
and
sbb
dec
(bad)
mov
rol
arpl
sub
xchg
and
loope
jo
sub
jb
daa
ds
pusha
mov
pop
dec
jo
mov
in
dec
xor
in
dec
adc
(bad)
and
in
mov
adc
cmp
mov
rcl
stc
mov
jbe
fisttp
xor
sbb
into
adc
je
fidiv
rcr
sub
jg
cmp
movs
mul
loope
xchg
xor
mov
mov
mov
mov
or
pop
pop
fld
xor
mov
xchg
mov
imul
add
cs
jo
into
fstp
and
lods
rol
cmps
int
dec
out
sti
out
mov
push
lea
ret
test
cli
mov
sbb
pop
and
jb
or
cld
xor
fmul
test
mov
dec
push
xchg
out
cmp
aad
inc
imul
sbb
mov
sbb
jbe
inc
xchg
and
es
or
test
ret
stos
pop
mov
sub
fmul
mov
fidivr
movs
pop
pop
mov
cwde
adc
ss
adc
dec
pusha
pop
js
ret
lds
pusha
add
ss
scas
jl
leave
add
cmps
jmp
(bad)
loopne
out
jg
dec
sub
xchg
adc
mov
pop
sbb
stos
push
aas
retf
imul
(bad)
mov
mov
sub
sbb
sar
ret
or
leave
int3
sub
inc
cmp
xchg
pop
jle
adc
les
imul
das
das
jno
adc
ret
sub
push
std
ss
and
ret
mov
xchg
mov
lods
xchg
xor
xchg
xor
fst
arpl
cmp
or
jp
pop
repnz
out
bnd
mov
cmp
mov
push
popf
or
dec
xchg
mov
and
adc
fbld
xor
inc
fnstcw
enter
imul
iret
jae
pop
sub
pop
outs
sub
push
mov
mov
(bad)
ins
ret
das
xchg
fdivr
js
xor
xchg
fistp
jo
lods
add
mov
or
repnz
test
pop
data16
cwde
xchg
mov
mov
scas
out
pop
sub
mul
pop
(bad)
xor
clc
sar
adc
aam
jl
mov
call
inc
daa
lods
sbb
or
or
js
adc
push
xchg
shr
mov
xchg
repz
ud0
sub
dec
adc
fnsave
fsub
int3
mov
sbb
jo
sub
xor
(bad)
bound
es
aaa
cmps
xchg
jp
(bad)
retf
prefetch
ret
iret
nop
or
repz
retf
jns
std
imul
cmp
mov
push
pop
jnp
xchg
lods
pop
int3
not
dec
sbb
imul
push
sub
test
dec
xor
data16
sbb
lods
mov
lods
push
sub
inc
dec
and
cld
neg
jg
out
sti
mov
sbb
xor
popa
push
xor
sub
sub
stos
jecxz
push
sbb
fidiv
sub
pop
iret
(bad)
pop
gs
das
je
nop
stos
or
lods
lds
imul
inc
stc
fucomip
iret
push
pop
pop
clc
nop
fwait
jnp
cmp
shr
push
test
mov
bound
cmp
outs
retf
daa
es
pop
xor
mov
sar
xchg
test
cwde
sbb
lock
jne
daa
aad
mov
lahf
dec
inc
out
push
mov
xor
mov
push
mov
sbb
jl
push
pop
mov
pop
test
clc
mov
jge
and
icebp
pusha
jno
cmp
fneni(8087
jnp
push
mov
ins
pop
or
push
cli
out
mov
es
das
(bad)
xchg
adc
pop
rol
test
call
out
jmp
add
cmp
stos
pushf
mov
jp
test
sub
sub
or
test
mov
stos
pmulhuw
dec
or
in
(bad)
lock
cli
cld
sbb
xchg
cli
fwait
mov
repz
ret
(bad)
loopne
jg
cmp
push
cmp
ror
cwde
ret
add
outs
cmp
mov
jmp
cli
shl
cmps
adc
mov
or
mov
xor
je
movs
push
mov
cs
xchg
xchg
fadd
std
fimul
jnp
jmp
or
retf
mov
shl
jl
mov
push
adc
jnp
ss
pop
and
scas
add
jo
icebp
adc
dec
into
mov
xchg
and
loop
jne
sub
cmp
xor
inc
addr16
mov
das
leave
mov
push
jge
xchg
mov
test
mov
les
cmp
xchg
jge
je
data16
mov
dec
jae
and
push
jge
or
(bad)
or
jecxz
xor
add
gs
out
aad
fld
daa
shl
mov
mov
fdiv
movs
xor
mov
add
ja
pop
les
push
cmps
pop
fidivr
lock
inc
push
aas
xchg
mov
clc
rol
mov
and
cmp
shl
clc
scas
iret
das
sbb
mov
push
clc
hlt
jnp
jns
and
jae
adc
jle
sbb
aam
(bad)
mov
cmp
js
or
push
push
add
push
popf
cdq
xchg
scas
inc
xchg
dec
sub
pop
loope
test
in
cmp
mov
fdiv
push
mov
inc
cmc
sub
and
or
jl
jg
leavew
(bad)
xor
and
jge
pop
std
(bad)
pop
aad
ds
add
xor
adc
xor
xor
mul
dec
ret
test
out
test
xchg
jg
adc
add
out
dec
mov
sub
aad
js
lods
mov
leave
(bad)
and
adc
out
lods
and
or
repnz
adc
cdq
sub
xlat
aam
mov
stos
cli
xor
push
(bad)
sbb
in
cmps
xchg
ss
mov
fdivr
je
repnz
xchg
shl
stc
(bad)
movs
jbe
inc
and
adc
mov
dec
push
jle
mov
jae
add
bound
pop
push
stos
xor
inc
leave
dec
and
dec
add
push
add
outs
ss
pop
loope
rcl
ins
sub
ret
cmp
in
scas
test
(bad)
hlt
pop
xlat
ss
lds
(bad)
retf
dec
mov
fpatan
jg
mov
das
fs
xchg
bound
mov
sub
std
pop
inc
sbb
dec
inc
loope
in
test
mov
(bad)
sbb
pushf
sbb
dec
jbe
aam
inc
pop
cs
and
std
in
push
movs
sbb
repz
not
test
push
pusha
scas
loopne
xor
add
xor
sub
hlt
mov
jmp
dec
dec
or
jp
jbe
cmp
out
stc
pusha
jmp
repnz
cmp
icebp
repnz
push
retf
cmps
mov
mov
and
jle
jb
xor
inc
cld
mov
mov
add
jge
push
(bad)
ror
cs
fcomp
out
or
or
sub
or
int
push
jnp
lahf
xchg
test
out
bound
imul
repz
push
test
int
jbe
sbb
pop
inc
fidiv
test
pop
sti
cs
mov
popf
(bad)
xor
out
cmp
xor
(bad)
push
lahf
test
pop
cld
mov
shl
test
ror
or
inc
fdivp
adc
fsub
mov
les
cmps
adc
(bad)
aad
and
mov
pop
arpl
xor
xor
iret
in
mov
cmps
mov
mov
dec
movs
(bad)
mov
(bad)
cmp
imul
shr
or
fwait
push
mov
data16
dec
(bad)
push
mov
mov
mov
nop
js
xchg
push
adc
inc
xchg
inc
jno
adc
sbb
inc
and
mov
push
int
mov
addr16
repz
loopne
or
mov
ins
sub
into
or
shl
jge
cmp
cwde
arpl
xchg
pop
popa
jg
push
pop
std
leave
fwait
scas
dec
inc
mov
inc
jne
xchg
jmp
(bad)
ds
add
add
imul
xchg
sbb
xor
adc
push
cld
jge
das
in
ins
pop
xchg
hlt
out
pop
call
or
mov
inc
xchg
retf
retf
lds
lods
inc
adc
push
jmp
call
pop
daa
pop
jo
mov
test
mov
xor
cmp
addr16
and
mov
xchg
fst
dec
mov
stos
outs
packssdw
adc
retf
xchg
mov
mov
or
in
mov
and
movs
mov
mov
or
adc
push
out
shr
push
cmp
jae
ins
xchg
push
repz
mov
cdq
adc
pop
inc
add
mov
outs
and
adc
stc
pop
or
div
pop
push
add
push
aas
sub
adc
sub
(bad)
and
or
arpl
sbb
push
repz
pop
xor
hlt
lock
sub
and
cmp
lods
ret
(bad)
sub
pop
mov
pop
push
test
xor
xchg
test
sub
jmp
ret
mov
mov
aaa
sub
ret
dec
outs
dec
sbb
test
gs
push
cmp
sbb
ja
mov
sub
sub
dec
cmp
or
popa
leave
jae
enter
and
cmp
aad
mov
shl
push
mov
aas
add
mov
fsub
sbb
iret
xchg
pcmpgtw
not
std
or
inc
adc
mov
leave
movs
outs
idiv
in
dec
or
imul
test
jp
das
inc
je
mov
mov
or
jo
jge
lock
stos
test
fcomp
cmc
cmp
lods
cld
or
scas
daa
xchg
mov
push
call
mov
push
mov
push
xor
gs
adc
add
mov
into
ror
(bad)
cmp
inc
add
aad
mov
or
mov
jno
xchg
pushf
aam
jecxz
jecxz
inc
mov
mov
stos
or
out
sub
adc
lahf
adc
mov
push
mov
inc
into
cs
jns
xor
push
and
adc
mov
cwde
(bad)
fsub
xor
cmp
sbb
push
cmp
or
icebp
lahf
lods
loop
bound
jae
jnp
xor
push
mov
add
fnstsw
push
cmp
int3
or
xlat
dec
xor
bound
jle
aas
cmp
mov
dec
sbb
dec
(bad)
cmp
ins
mov
scas
les
or
fucomip
arpl
xor
pushf
pop
xor
ins
xor
xchg
loop
dec
cmp
mov
sub
add
out
lea
cmps
cmp
fcmovnb
clc
fst
mov
cmp
jmp
xor
jae
fdiv
push
sub
stos
int3
pop
test
mov
mov
rcl
js
sbb
jmp
push
cmp
pop
test
mov
pop
aam
pop
and
pop
into
gs
cli
nop
pop
mov
movs
rcl
pop
into
jmp
cmp
push
out
or
cdq
ins
mov
pop
jae
jne
aaa
inc
dec
je
fld
pop
adc
loop
in
pop
out
sbb
mov
sub
pop
repnz
fist
mov
jno
sysexit
sub
arpl
xchg
test
or
mov
cld
jae
cwde
jecxz
and
(bad)
int3
inc
push
sbb
call
and
sub
imul
les
fcomp
movs
stos
jecxz
push
fs
or
or
dec
in
cmps
adc
inc
mov
or
rcr
jns
scas
hlt
das
out
add
imul
pop
stc
into
(bad)
dec
jbe
xchg
jne
pop
push
and
or
lods
in
push
(bad)
xchg
pop
sub
inc
mov
or
dec
mov
ds
cdq
rcl
fcmovu
fld
sub
retf
jno
mov
cli
ss
dec
mov
push
mov
inc
jb
pop
out
or
enter
sub
xchg
movs
call
xchg
push
daa
and
cmp
inc
push
ficom
(bad)
test
fs
cmc
pop
cmp
fld
pop
cs
mov
dec
jae
int3
into
je
gs
xchg
inc
jae
iret
push
out
aaa
dec
bound
mov
xchg
ret
sub
data16
pop
lock
clc
lods
dec
adc
inc
sahf
push
xlat
call
jne
ss
lods
jbe
add
jne
ret
rol
mov
push
daa
jle
and
fist
push
aam
xchg
shl
push
pop
retf
test
inc
int
rol
shl
push
push
pushf
cmps
out
pop
pop
movs
cdq
enter
mov
cmp
sbb
mov
cmp
xchg
aas
sub
pop
and
sbb
push
(bad)
(bad)
clc
push
sbb
mov
sbb
cmc
iret
or
pop
and
aas
jp
rcl
add
jmp
mov
loop
sbb
cmp
and
stc
sbb
retf
sub
mov
pop
or
jbe
inc
repz
dec
(bad)
sub
jbe
and
fcmovnbe
aad
(bad)
jo
lds
and
inc
xor
in
jne
shr
shl
xchg
fwait
jl
loopne
out
loope
mov
jmp
popf
(bad)
sbb
mov
pop
aaa
imul
jmp
pop
cmp
inc
jne
push
add
ret
lds
jne
push
cmc
out
push
push
add
sub
mov
popa
iret
push
test
xor
cmp
movs
loopne
jno
cs
cli
in
(bad)
fist
fistp
push
mov
dec
cld
inc
cmp
dec
cdq
retf
(bad)
mov
push
mov
in
lahf
aas
adc
xor
jae
mov
pop
lods
jno
ins
xor
(bad)
jp
outs
jl
adc
enter
sub
and
dec
mov
add
(bad)
sbb
cmp
in
dec
xchg
(bad)
add
cmp
sbb
push
pop
add
bound
push
push
movs
ins
jle
sbb
arpl
pusha
aad
and
cmc
jno
sub
pop
lds
lods
repz
mov
xchg
stos
xchg
push
mov
cmp
js
fld
jns
mov
(bad)
dec
daa
ins
adc
mov
fnstsw
inc
push
add
and
or
xlat
mov
pop
cmp
dec
adc
scas
cdq
je
jns
xchg
and
ins
mov
push
mov
ror
pop
jne
inc
out
adc
repz
xor
cmp
xchg
mov
jno
mov
cmp
adc
(bad)
or
xchg
int3
adc
mov
std
ja
pop
ficom
jl
aaa
jae
inc
adc
inc
push
fstp
es
out
inc
ins
and
mov
enter
cmc
cmp
mov
retf
cmp
pop
pop
dec
cmc
pop
cmp
push
cdq
cdq
push
push
cmc
dec
call
add
push
outs
aaa
imul
cmps
retf
lds
or
loopne
ins
(bad)
hlt
xchg
mov
xchg
push
es
test
adc
push
mov
ins
aad
sub
(bad)
(bad)
aam
stos
dec
leave
jbe
clc
xchg
iret
sub
pusha
mov
xor
ret
adc
xchg
push
push
lds
and
aaa
lds
mov
and
add
pop
mov
add
add
add
in
mov
xchg
xor
(bad)
mov
ins
push
sub
lea
(bad)
fist
mov
and
out
fsub
arpl
mov
fist
fs
sbb
jo
mov
cmp
sub
inc
pop
add
or
xchg
and
dec
or
nop
and
and
leave
fs
aas
dec
frstor
(bad)
jg
fidivr
xchg
lods
jmp
jmp
(bad)
ins
mov
lock
push
add
jle
rol
mov
outs
pop
jecxz
retf
loopne
ror
dec
js
mov
xchg
ins
fcmovu
push
dec
push
out
cmp
sbb
add
and
push
xchg
sub
mov
sti
jae
(bad)
rcl
lock
lds
dec
xor
fisubr
sbb
das
add
add
addr16
lahf
popa
mov
repz
sbb
cmp
mov
mov
iret
jnp
add
inc
daa
mov
daa
add
dec
popf
cmp
sub
add
adc
sbb
stos
pop
xchg
xchg
fcmovnb
bound
mov
sbb
enter
cwde
outs
or
outs
into
addr16
jb
and
leave
int3
mov
ins
xchg
cwde
dec
leave
out
scas
loop
ja
add
je
loop
ror
mov
pop
fadd
cld
mov
int3
sbb
and
ficomp
cmp
sub
mov
sti
pop
inc
and
pusha
adc
sbb
sar
push
retf
sbb
sbb
xor
push
ss
fst
aas
xchg
cmp
addr16
push
jae
push
(bad)
jmp
(bad)
cmp
dec
scas
mov
adc
mov
xchg
or
xor
(bad)
cmovl
and
std
shl
nop
push
ja
shl
mov
dec
gs
push
xchg
xor
jp
sbb
int
sbb
jae
aaa
push
mov
pop
mov
dec
in
mov
mov
and
add
ret
jno
int3
xor
popa
daa
jle
inc
cmps
push
adc
sbb
dec
add
xor
jbe
pop
cmp
fwait
cmps
xchg
push
inc
sbb
jmp
ror
cs
icebp
sbb
shl
pop
adc
xor
cli
outs
shl
mov
adc
repnz
sbb
and
sub
cwde
in
ins
les
sub
cmc
mov
jo
iret
add
inc
sub
mov
sub
fcomp
adc
das
ret
into
adc
rcr
and
out
xchg
aam
sub
pop
fidiv
repz
push
mov
push
inc
dec
out
xor
je
int
push
xchg
scas
int
mov
int3
and
push
rol
dec
and
ror
push
sub
test
es
jge
sbb
or
into
push
stos
cli
test
jb
xchg
sti
and
xor
adc
mov
inc
lods
jl
addr16
sub
leave
push
inc
into
es
outs
mov
push
ficomp
inc
jmp
ins
fst
push
pop
mov
or
call
les
mov
hlt
fidiv
and
stc
mov
scas
std
sub
bound
sbb
mov
test
movs
aas
push
mov
mov
mov
dec
pop
and
pop
push
cmps
dec
cmp
int3
clc
add
pop
fs
push
and
sar
mov
out
fdiv
retf
dec
push
call
push
xchg
scas
ins
dec
hlt
mov
mov
daa
lods
fmul
(bad)
fnstcw
inc
rcl
inc
mov
cmp
ficomp
inc
fcomp
fs
call
loope
sar
pusha
cmp
pop
inc
or
xor
add
push
cmp
stos
inc
or
xor
test
sub
inc
data16
lea
pushf
dec
inc
dec
out
out
sbb
push
cmps
data16
loop
fisub
rcr
jle
ret
push
fcom
jbe
push
xchg
sub
pop
jae
dec
xor
pop
jmp
cmps
mov
addr16
push
dec
ja
mov
dec
pop
push
pop
inc
jne
add
inc
hlt
lods
leave
mov
adc
add
lock
(bad)
ss
sahf
sahf
gs
pop
bound
scas
sub
push
or
xchg
sti
inc
adc
sbb
push
sub
or
mov
ss
das
imul
mov
add
jecxz
(bad)
dec
jo
retf
imul
pusha
xchg
and
int3
daa
imul
imul
cmp
mov
in
call
test
call
xchg
and
imul
mov
lock
scas
daa
mov
pop
dec
nop
loope
ret
pop
xchg
xchg
hlt
sbb
pushf
push
inc
bound
fwait
das
jmp
cs
and
movs
or
les
mov
mov
sub
dec
xchg
sar
add
inc
push
or
je
mov
push
push
mov
pop
es
xchg
ins
(bad)
cli
and
lock
add
ss
sbb
adc
dec
pop
scas
push
inc
gs
pop
sbb
jl
in
das
inc
adc
cmc
lock
test
out
imul
scas
xchg
mov
mov
xchg
outs
mov
dec
add
sahf
shl
bnd
addr16
ret
pusha
inc
cmp
das
sub
sbb
mov
cs
add
cdq
mov
xor
inc
mov
jp
mov
jge
adc
add
enter
or
adc
mov
add
xchg
inc
retf
and
mov
dec
ins
inc
mov
mov
push
lods
sub
add
imul
adc
in
sbb
hlt
aam
stos
mov
les
rol
and
shl
mov
(bad)
push
cmps
je
(bad)
adc
pop
mov
xchg
cmps
lods
xchg
cmp
xchg
je
aam
stc
mov
mov
xchg
sub
push
pop
in
pop
inc
ret
jmp
fcomp
jb
sbb
sub
mov
(bad)
and
rcl
sub
sbb
push
in
jmp
push
push
cmp
mov
cmp
cmp
cmovg
dec
and
rcl
addr16
addr16
stos
dec
mov
stos
push
stos
sub
or
lods
in
inc
mov
push
out
sub
lods
dec
adc
mov
retf
je
mulps
daa
mov
out
rcl
aam
sub
xchg
mov
aas
ja
and
aas
inc
ret
call
repz
push
sahf
dec
mov
adc
xchg
cmp
cmps
jmp
or
push
adc
arpl
mov
sbb
xchg
xlat
add
repnz
sbb
nop
shl
jmp
dec
mov
add
adc
je
sbb
sbb
cmps
pop
and
mov
fld
cdq
push
mov
movs
cmp
retf
or
fs
mov
sbb
repz
sti
and
mov
xlat
cmps
and
call
mov
imul
nop
(bad)
cmp
sbb
out
or
lea
ret
push
xchg
hlt
lods
xor
dec
push
inc
xor
cdq
inc
inc
mov
rol
out
or
cwde
movs
test
pop
cld
int3
sti
mov
sbb
scas
push
in
mov
mov
adc
mov
(bad)
imul
and
xor
mov
adc
cwde
fsub
push
jo
fistp
inc
aaa
ss
push
loope
outs
test
sahf
out
sbb
push
out
sbb
or
sbb
push
sbb
call
ds
adc
xchg
jmp
jae
dec
fld
out
iret
xchg
in
add
jle
and
jle
test
(bad)
inc
xor
xor
mov
cmp
rcl
arpl
pop
jecxz
scas
push
lds
loop
adc
add
rcr
push
imul
mov
test
adc
jbe
stc
loopne
rcr
and
pop
(bad)
in
xchg
mov
xchg
or
adc
push
dec
outs
push
outs
adc
mov
sub
and
shl
mov
fstp
and
push
std
ds
xchg
jns
xor
(bad)
cmc
arpl
mov
adc
push
shl
fnstsw
sub
(bad)
cmp
push
sbb
sbb
push
data16
inc
cmp
cmp
xor
mov
fild
mov
fs
shl
sub
pushf
jmp
push
mov
dec
shl
mov
push
cmp
or
adc
daa
lock
dec
imul
ret
adc
dec
fcmovbe
mov
lods
xor
repnz
icebp
fstp
or
push
test
and
call
jg
jbe
iret
cmps
addr16
cld
es
push
mov
inc
sbb
push
adc
ret
xor
or
mov
nop
popa
pop
ss
jbe
fwait
mov
jbe
cmp
lock
in
ins
test
mov
sti
cmp
adc
(bad)
neg
xor
jg
out
mov
and
je
ficom
js
pop
call
es
mov
pop
iret
adc
adc
xor
sahf
or
call
sub
mov
and
addr16
jmp
pop
es
inc
push
xlat
sbb
fstp
mov
sub
lea
add
js
mov
mov
or
xor
jp
dec
test
shl
fsub
pop
rcr
mov
add
movs
push
nop
sub
dec
inc
add
enter
sahf
mov
mov
cmps
pop
push
aad
leave
test
xchg
push
fwait
daa
mov
mov
(bad)
loop
(bad)
jmp
xor
test
push
test
or
inc
mov
xor
xchg
mov
cld
ds
loope
neg
inc
and
pop
test
mov
pop
or
push
adc
(bad)
loope
mov
jo
jmp
dec
or
pop
and
popf
and
in
push
call
sub
sub
inc
fstp
pop
sbb
jecxz
ins
mov
dec
cmp
mov
pop
inc
lea
mov
fidiv
adc
popf
dec
int
push
xchg
pop
inc
mov
sub
add
sub
pushf
inc
xor
sbb
(bad)
cmp
mov
outs
cmp
fist
inc
loop
jo
dec
push
aas
mov
leave
xchg
push
push
es
push
mov
and
jno
sub
inc
ror
add
adc
sub
inc
mov
jp
out
inc
xor
push
or
cli
mov
dec
cmps
adc
adc
outs
rcl
test
movs
test
(bad)
scas
les
ror
or
push
adc
(bad)
sub
ins
push
sub
movs
mov
pop
out
jp
inc
es
shr
in
xor
sbb
inc
aad
jb
add
out
mov
xor
stos
push
mov
and
sbb
pop
retf
out
sub
popf
sbb
pop
inc
imul
loope
ret
xor
js
ins
mov
push
int
mov
push
fbld
pop
mov
dec
jl
inc
in
mov
jecxz
and
cmps
dec
shr
mov
xlat
arpl
sbb
test
jecxz
dec
pusha
fisub
xchg
xchg
test
leave
cmp
retf
shl
xchg
mov
fadd
ins
ret
sub
mov
jo
aaa
xor
repnz
aam
into
test
sbb
movs
rol
std
retf
ja
lds
adc
fadd
adc
(bad)
push
out
jmp
mov
(bad)
in
jb
out
fild
repnz
mov
pop
push
mov
and
cmp
dec
fcmovnbe
in
jno
mov
in
mov
and
sahf
out
cdq
push
sbb
lds
sub
jmp
pop
daa
nop
daa
dec
xchg
test
push
mov
dec
sub
(bad)
stos
pop
jns
pop
in
idiv
out
shl
out
leave
ins
test
arpl
js
and
imul
ins
jno
sub
dec
movs
(bad)
and
mov
cs
dec
cmp
xchg
jno
mov
adc
jge
shr
cmp
test
fs
lds
push
push
jne
bound
sbb
les
hlt
mov
test
test
xchg
and
pop
jb
mov
xchg
imul
mov
jo
test
inc
pop
sbb
xor
test
lahf
inc
mov
xor
into
cmp
add
mov
cmps
pop
xchg
mov
dec
ins
mov
in
push
std
pop
rcr
mov
loop
mov
mov
pop
mov
daa
test
pop
xchg
ret
lds
fidiv
ret
mov
adc
jns
lea
sar
adc
movs
cs
loopne
icebp
test
jae
xchg
js
lods
mov
sub
es
and
out
and
lock
jmp
bound
int3
mov
push
mov
xchg
and
jp
jmp
jbe
xor
sbb
outs
sub
repz
adc
das
xchg
int3
fcomp
xor
mov
dec
cmp
cmp
lahf
icebp
clc
mov
loop
js
pushf
inc
mov
add
add
xor
and
mov
int3
retf
xchg
inc
arpl
mov
stc
mov
push
test
imul
pop
and
pop
push
rcr
out
push
aas
rcr
cmps
and
retf
sti
ins
xchg
xchg
in
adc
mov
mov
inc
jo
add
push
dec
mov
neg
dec
xchg
push
(bad)
and
dec
cli
add
inc
add
hlt
adc
(bad)
paddb
cmp
jl
out
jecxz
les
in
mov
push
pop
inc
push
pop
sbb
inc
add
add
jb
and
pop
movs
cmp
sbb
ss
scas
scas
adc
nop
xor
repnz
in
push
dec
fild
pop
sbb
in
jmp
movs
mov
xchg
ds
in
dec
and
sti
cmp
inc
pop
xlat
cwde
jmp
sti
xchg
push
lds
and
pop
ja
fmul
jnp
in
sbb
ficomp
pop
push
add
adc
sti
xor
add
sar
dec
cs
and
(bad)
pop
xchg
sbb
jnp
fwait
mov
gs
es
cwde
jnp
sub
daa
mov
fisubr
mov
js
mov
inc
jae
outs
movs
iret
(bad)
call
pop
xchg
xor
es
or
stos
pop
fistp
hlt
xor
dec
jne
stc
push
test
and
ffree
int3
mov
out
out
inc
inc
cs
rol
cmp
add
jle
mov
cmp
mov
(bad)
movs
in
mov
xor
dec
cwde
bound
int
jbe
inc
frstor
jmp
dec
lds
imul
xchg
xor
test
mov
jnp
dec
or
ins
xor
mov
hlt
push
mov
xor
inc
aam
sbb
cli
fmul
jne
add
pop
cmp
push
mov
pop
push
imul
xchg
out
sub
sti
enter
sbb
(bad)
and
pop
xchg
(bad)
(bad)
cmp
pop
adc
cmp
ins
xor
jns
(bad)
call
mov
lods
mov
repz
repz
add
push
jp
jns
inc
aas
(bad)
and
lea
imul
retf
in
sub
inc
push
push
dec
test
xchg
test
push
push
mov
hlt
pop
cmp
je
add
cmp
imul
retf
inc
inc
xchg
mov
push
ja
pop
mov
sbb
icebp
pushf
fidivr
mov
cmp
ss
jne
xlat
jmp
ret
(bad)
sub
push
imul
bound
sbb
fwait
jno
xchg
dec
add
sahf
enter
int
test
adc
sbb
mov
inc
mul
mov
jbe
adc
nop
push
xor
jns
lock
mov
dec
out
fst
mov
ss
pushf
dec
push
in
add
jp
adc
jle
sbb
(bad)
movs
aaa
xchg
mov
pop
fs
scas
xchg
cmps
std
fdiv
pop
mov
addr16
xor
sub
and
inc
sbb
and
sbb
sbb
and
shl
jo
sub
fmul
aas
adc
daa
pop
fild
cld
mov
fidivr
adc
aaa
sbb
inc
mov
in
fwait
(bad)
sub
dec
lahf
pusha
dec
xor
add
jbe
dec
lahf
adc
adc
or
and
mov
mov
call
dec
mov
idiv
mov
or
fldcw
mov
cmc
pop
nop
dec
sub
xor
inc
cdq
mov
mov
popf
xlat
repnz
mov
call
dec
dec
sub
cmp
xchg
mov
push
pushf
scas
sub
pop
das
jp
xor
sub
movs
data16
call
add
mov
jno
jmp
outs
add
test
sbb
clc
add
nop
fs
sbb
push
in
ror
adc
mov
or
(bad)
push
jo
xchg
aaa
adc
je
ins
jb
ret
je
call
cmovae
xor
imul
in
loope
(bad)
sub
cmp
cs
xor
fs
pusha
es
movs
sub
dec
sub
pop
cmps
adc
adc
push
lea
lea
pop
test
mov
cli
xor
pop
pop
xor
adc
mov
and
push
(bad)
out
xchg
and
sub
stos
adc
ins
mov
and
es
xor
mov
(bad)
push
cmps
test
sbb
sub
push
sbb
rcl
inc
mov
xchg
inc
lods
mov
in
enter
shl
jmp
js
mov
ror
loop
sar
(bad)
pusha
adc
cdq
inc
movs
jmp
icebp
and
mov
jle
cmp
cli
lods
dec
enter
dec
xchg
inc
and
push
jp
pop
cmp
fnstsw
movs
push
and
mov
sub
jl
inc
loop
mov
call
mov
lods
jb
push
mov
(bad)
or
fdiv
sbb
lods
or
sahf
or
mov
or
cmp
jl
jge
push
push
iret
xor
mov
repz
lahf
sbb
sbb
pop
cmp
popa
sbb
or
out
xor
dec
fwait
push
xor
push
jo
gs
push
call
mov
mov
push
pop
movs
test
popf
inc
jge
cmp
fincstp
stos
fidiv
out
jae
dec
or
or
fld
(bad)
ss
add
push
repnz
ror
stos
sbb
aad
mov
loop
test
or
cmp
add
test
rcl
mov
xchg
inc
call
xchg
add
xchg
push
push
call
pop
add
sub
aad
imul
xchg
pop
xor
shr
into
jp
sub
(bad)
sbb
dec
rol
stos
fidiv
inc
mov
xchg
mov
in
push
lods
mov
push
stos
int3
mov
push
sbb
out
push
jno
dec
pop
sub
out
and
out
dec
out
cmps
jecxz
fwait
popa
inc
das
mov
popf
xor
pop
jmp
(bad)
mov
mov
das
in
aaa
xor
aad
sbb
sbb
cmps
pop
xor
push
inc
jb
xchg
ds
ds
xlat
xor
dec
cmp
mov
dec
lds
jge
cmps
(bad)
sar
jge
or
loopne
xchg
ins
out
lods
in
push
sahf
xchg
loopne
(bad)
inc
dec
loope
pop
je
add
mov
lods
push
add
dec
cmp
and
jp
pop
ja
mov
leave
sbb
mov
loop
js
jmp
retf
ds
loopne
and
test
repz
sub
pusha
aad
cmc
xchg
push
popa
stos
fisubr
push
mov
push
ins
and
and
sub
shl
test
mov
fdiv
xor
into
fcomp
pop
ret
fsub
dec
jb
ins
retf
pop
sbb
inc
sbb
cmp
retf
inc
stos
mov
(bad)
cmc
mov
mov
scas
nop
repnz
mov
pop
push
sbb
(bad)
lds
ret
lea
pushf
xor
call
mov
(bad)
adc
loope
je
in
jno
call
popa
aad
cmc
dec
mov
cmp
shl
stos
jbe
scas
cmp
or
es
inc
pop
loope
mov
nop
adc
mov
push
jmp
imul
add
(bad)
pop
inc
test
aam
sbb
adc
aam
inc
je
sub
mov
mov
and
dec
retf
(bad)
ret
or
mov
push
ins
movs
ficom
daa
pop
cdq
ins
movs
fcomp
mov
dec
push
jno
in
and
pusha
sub
nop
inc
(bad)
lds
cli
pushf
mov
idiv
outs
adc
fisub
xchg
repnz
fild
push
push
bound
sub
cli
pop
inc
loope
inc
(bad)
into
mov
(bad)
xor
scas
mov
jecxz
sbb
adc
pop
shl
inc
in
xor
mov
sbb
mov
pop
dec
std
push
mov
ins
xor
jae
mov
bound
loopne
sbb
test
ins
aam
sub
xor
data16
iret
mov
fcmovnbe
jno
jg
mov
inc
scas
pop
cmp
inc
rcr
and
test
mov
ret
inc
adc
cli
push
call
jg
mov
mov
mov
sub
sbb
movs
push
jnp
fcmovu
les
cmp
imul
jo
xor
imul
jae
mov
ret
call
ss
push
cld
pop
pushf
xor
pop
pushf
sub
inc
pop
pop
stc
mov
aad
cmp
inc
mov
mov
push
sti
dec
xchg
aas
loopne
call
test
rcr
popf
jmp
pop
pop
cmp
fsubrp
stc
push
lahf
xor
pop
jle
push
cmp
call
jb
xor
mov
push
push
fsubr
adc
jae
and
adc
inc
inc
push
push
inc
or
cmc
jne
imul
inc
push
xor
ins
es
sti
inc
shr
sub
dec
cmp
inc
add
xor
cmp
outs
outs
repz
cmp
cld
fidivr
lock
pop
fild
sub
pop
popa
push
lock
dec
push
inc
adc
pop
retf
jl
dec
loopne
adc
dec
clc
(bad)
xchg
std
sub
ds
jae
xor
jns
jge
jp
mov
add
xor
mov
push
in
loop
push
pop
stos
inc
aad
shr
push
xor
jbe
rcr
push
pop
xor
popa
aas
xchg
push
(bad)
xor
shl
jmp
sub
jle
adc
(bad)
div
rcpps
fdivr
mov
movs
cmp
sbb
or
dec
push
pop
(bad)
push
or
loopne
mov
mov
loope
mov
dec
ds
sub
adc
add
(bad)
mov
mov
ret
cli
xor
xchg
(bad)
sahf
ins
or
inc
mov
jmp
adc
(bad)
fstp
cmc
repnz
xchg
(bad)
leave
test
mov
jno
jae
hlt
xor
dec
push
cmp
cmp
cdq
jecxz
neg
xor
mov
xchg
jecxz
cdq
jmp
dec
sbb
and
dec
cmp
cmp
fld
out
dec
in
pop
xor
scas
push
movs
popa
sti
jns
cwde
push
fmul
rol
out
push
ret
jno
dec
out
stos
lods
retf
call
inc
js
aas
in
cmc
ret
push
push
pop
leave
inc
and
test
in
lods
adc
xchg
lods
or
fs
pop
daa
and
vpunpckhbw
shl
bound
movs
pop
xor
rep
mov
(bad)
push
pop
dec
lods
repnz
lods
shl
xchg
dec
mov
imul
pop
out
clc
js
sub
test
out
push
cmps
enter
in
repz
inc
push
cmp
cmp
(bad)
jp
inc
scas
sub
enter
clc
adc
les
lods
in
add
mov
or
fistp
mov
sbb
data16
fsub
mov
dec
lock
jmp
pop
ja
mov
imul
mov
jle
les
shl
fmul
into
jno
fcomp
nop
inc
not
into
push
jecxz
out
lock
into
loopne
adc
(bad)
or
jge
push
out
push
mov
dec
or
cmp
mov
fstp
loopne
loopne
inc
cwde
dec
cmp
push
adc
jp
add
dec
ret
cmp
mov
cli
push
cmp
mov
fmul
jns
sbb
lahf
mov
xchg
stc
stos
in
bound
adc
pop
icebp
shl
(bad)
mov
jns
fsubp
mov
add
pop
mov
arpl
fcmove
pop
mov
nop
adc
enter
(bad)
rcl
mov
mov
lds
or
fnsave
mov
(bad)
adc
aad
jle
mov
mov
retf
(bad)
icebp
jns
inc
add
dec
adc
pushf
mov
push
je
xchg
cmps
stc
sbb
loopne
or
add
inc
sub
out
rcr
push
sti
or
xchg
mov
mov
call
shl
pop
jmp
in
aam
sbb
rcr
dec
lahf
call
mov
push
imul
popf
ins
push
or
mov
or
sub
cs
push
sbb
sub
xlat
stc
imul
xchg
mov
sahf
aam
out
add
cmps
aaa
adc
in
dec
aam
adc
dec
sbb
(bad)
mov
(bad)
int3
aam
movs
add
jmp
cmp
fisubr
mov
je
sar
jnp
xchg
dec
(bad)
mov
jae
inc
in
stos
aad
fstp
dec
jg
adc
push
je
sbb
lea
iret
stc
jae
inc
outs
hlt
mov
add
cdq
xchg
adc
jl
adc
inc
out
sub
add
in
add
stc
(bad)
int3
fmul
xchg
arpl
pop
xchg
add
xor
cmp
or
cmp
mov
fmul
btc
cmp
not
imul
pushf
pop
push
fbstp
imul
cmp
std
sbb
mov
jmp
add
add
scas
call
jecxz
test
rcr
js
ret
mov
hlt
(bad)
repnz
mov
mov
outs
loopne
(bad)
push
pop
mov
shl
jnp
sbb
jnp
div
clc
cmps
pop
dec
in
and
pop
sbb
xlat
fldenv
cmc
cmp
adc
jne
movs
pop
push
xchg
add
leave
popa
movs
repz
fwait
xchg
and
inc
sub
scas
lahf
bound
rcr
and
das
or
pop
sbb
das
cmc
ds
sbb
push
jmp
test
jmp
add
sbb
test
push
push
(bad)
das
mov
fadd
fidivr
jmp
sbb
outs
and
dec
jne
mov
adc
dec
out
in
cmp
cld
jge
daa
mov
xor
in
xchg
mov
test
shr
fnstcw
sub
daa
fiadd
pushf
js
pushf
fdivp
fwait
cs
and
(bad)
fisttp
jge
daa
sub
xor
gs
sar
sar
daa
inc
mov
hlt
lock
test
dec
out
cmp
dec
cmp
or
out
sahf
test
xchg
aam
les
fdiv
mov
cli
jb
out
jl
pop
xchg
mov
mov
jp
rcl
sub
mov
mov
gs
dec
cs
mov
adc
lods
cmps
sub
xor
xchg
mov
test
aas
lea
aam
mov
mov
ficomp
in
sti
mov
popf
clc
stos
mov
add
jb
clc
inc
sub
scas
xor
(bad)
mov
xor
mov
sti
into
xchg
xor
test
pop
pop
cmp
stos
ja
cmp
test
add
jge
out
ins
pop
mov
mov
push
sti
gs
stos
pop
fstp
cld
push
inc
jle
stos
sbb
lods
xchg
test
cmp
jae
dec
adc
mov
in
mov
imul
pop
sti
jnp
fbstp
adc
lock
xchg
dec
(bad)
imul
inc
jl
sub
or
and
xor
sti
or
push
mov
and
push
mov
rcl
daa
jl
push
xchg
sahf
dec
lahf
loop
mov
mov
ret
rcr
popa
jno
stos
adc
scas
adc
dec
mov
mov
mov
inc
in
jnp
pop
and
popf
lods
lock
cmp
addr16
mov
movs
jb
retf
retf
adc
adc
ret
mov
pop
and
icebp
pop
bound
mov
popf
out
icebp
mov
inc
mov
arpl
jnp
sbb
outs
aam
cs
int
push
or
popf
cmps
shl
outs
pop
retf
and
or
stos
inc
rcl
fcmovnbe
inc
lahf
add
imul
mov
out
imul
fidivr
push
mov
out
test
scas
(bad)
jecxz
and
ror
call
or
(bad)
ficomp
sahf
out
jg
sbb
ss
inc
dec
and
pushf
jg
push
cwde
(bad)
in
add
mov
sbb
inc
imul
sub
paddq
jb
dec
neg
lods
lahf
or
arpl
push
or
adc
test
popa
and
mov
pushf
fwait
inc
loop
pop
jno
dec
or
push
jo
jmp
call
push
xor
std
xor
int
outs
adc
repnz
add
and
and
jo
imul
int
aam
lock
mov
in
inc
stos
xchg
fisub
adc
imul
pop
push
nop
in
push
xchg
mov
cmp
popf
scas
test
push
mov
js
int3
or
ret
fbstp
dec
bound
mov
cmp
lock
and
xor
int3
repz
mov
(bad)
inc
mov
bound
mov
(bad)
cmp
inc
sbb
sbb
loope
mov
xchg
(bad)
push
adc
scas
fild
mov
popf
mov
xchg
jle
jp
add
cmp
stos
mov
jp
jmp
sub
push
out
neg
icebp
push
sub
push
test
add
push
fadd
in
xor
and
jmp
push
cmps
mov
loopne
in
fist
mov
mov
test
sbb
xor
fmul
inc
dec
popf
imul
mov
cwde
outs
scas
cmp
mov
inc
(bad)
and
daa
push
or
ret
sub
push
(bad)
bound
mov
adc
stc
xchg
cmp
sub
neg
(bad)
push
cli
adc
popa
inc
retf
imul
pop
and
and
mov
popa
cmps
ins
pop
cmps
push
test
and
add
jbe
cdq
(bad)
inc
jmp
xor
cmps
jne
jno
je
sub
mov
mov
sar
xor
mov
jo
fisubr
gs
sbb
add
repz
sbb
fadd
dec
push
icebp
aad
pop
push
cld
into
movs
repz
fmul
mov
xor
scas
inc
inc
cmp
das
inc
push
dec
ror
outs
(bad)
jne
inc
cdq
mov
in
xor
ror
call
ja
fbstp
mov
mov
sbb
mov
push
mov
inc
lahf
call
iret
aas
pop
sbb
das
lods
je
inc
addr16
xchg
test
lahf
mov
mov
daa
push
mov
dec
pop
fwait
cli
mov
inc
in
cmp
jbe
adc
mov
lock
(bad)
cmps
test
test
movs
aam
in
hlt
dec
mov
mov
push
(bad)
(bad)
fwait
(bad)
(bad)
stc
in
xchg
jl
imul
mov
cmp
or
stc
adc
xlat
int3
test
repnz
inc
dec
mov
jnp
iret
jbe
cwde
inc
ret
pop
rol
repz
je
adc
mov
mov
push
pushf
mov
mov
pop
shr
(bad)
cld
adc
mov
fidivr
or
xor
test
pop
enter
fisub
je
lods
jno
cld
add
jle
out
jl
cmps
mov
je
mov
retf
pop
pop
cmps
ror
fs
pop
out
inc
inc
jb
out
mov
arpl
adc
mov
aam
mov
std
lods
(bad)
mov
arpl
inc
mov
pop
xchg
out
test
int
popf
aaa
fdiv
clc
xor
or
adc
call
icebp
jae
test
sbb
sub
xor
addr16
lods
inc
inc
pop
bound
xor
mov
and
dec
std
mov
(bad)
sbb
shl
push
fcmovne
cmp
xchg
aas
add
retf
sbb
pop
xor
adc
or
outs
xchg
sub
push
ds
js
fnstenv
mov
(bad)
pop
sub
pop
aas
bswap
add
or
rcr
mov
retf
sar
push
test
call
mov
xchg
loopne
mov
jl
das
enter
out
sbb
xchg
fcmovnu
je
adc
mov
test
retf
mov
mov
and
ss
jnp
bound
jge
int3
pop
scas
or
push
arpl
cdq
dec
in
jecxz
xor
(bad)
pop
repz
sahf
pop
leave
jecxz
movhps
mov
adc
fsub
or
jne
sub
push
out
iret
cmp
cmp
adc
in
mov
into
inc
add
xchg
outs
fcomp
push
mov
lahf
mov
dec
and
imul
arpl
cmp
ins
in
out
call
jecxz
jmp
data16
adc
popa
mov
(bad)
lock
clc
jl
mov
xchg
mov
inc
push
ret
int
fiadd
aas
xor
jle
adc
dec
mov
sub
pop
dec
jecxz
or
mov
push
mov
sahf
xchg
arpl
jmp
retf
jl
scas
cmp
mul
pop
fdivr
stc
xchg
stc
cmps
sub
repz
loopne
cmp
xor
arpl
repnz
mov
add
popf
sub
jbe
(bad)
out
sub
jg
arpl
cmp
cmp
das
xlat
or
adc
out
mov
hlt
je
das
dec
daa
rcl
cmp
add
xchg
adc
loopne
out
xchg
inc
fistp
sbb
add
mov
test
mov
mov
xchg
imul
pop
mov
xor
cli
js
test
(bad)
mov
lods
test
or
in
in
cmp
loop
jno
fild
clc
(bad)
cmp
pop
xor
push
ja
test
retf
cmp
(bad)
jmp
push
pop
pop
loop
fwait
mov
and
push
mov
lods
ret
adc
(bad)
sub
ds
xchg
mov
out
les
loop
inc
lahf
sbb
call
into
lahf
(bad)
lock
push
adc
clc
mov
movs
or
mov
std
or
arpl
ss
pandn
mov
imul
xchg
push
inc
or
or
(bad)
gs
or
or
or
jle
imul
mov
pop
jo
mov
ss
test
cmp
pusha
mov
in
outs
sbb
loope
mov
movs
pop
scas
pop
jnp
mov
or
std
or
rcl
add
push
iret
cmc
mov
adc
sti
xor
jge
repz
clc
sbb
iret
jo
ret
jl
pop
sub
inc
xchg
test
aas
shl
fadd
(bad)
sbb
mov
mov
xchg
mov
in
mov
lahf
mov
stos
xor
sub
or
push
ret
mov
xchg
pusha
call
shl
pusha
pop
iret
jmp
jp
cmps
out
call
div
cmp
test
out
repz
add
xor
fs
dec
mov
jp
xchg
jle
rol
pop
mov
daa
cmps
cmps
lahf
push
mov
push
dec
rcr
mov
jb
iret
jmp
cmps
jle
loopne
push
mov
sbb
pop
loop
xor
dec
repnz
scas
cmp
and
enter
jge
repz
or
ss
ret
cmps
and
push
rcr
std
pop
mov
shl
sbb
or
(bad)
hlt
neg
popf
shr
pushf
outs
out
push
cmp
add
mov
(bad)
push
dec
(bad)
hlt
fistp
pop
or
ret
imul
and
aas
adc
ja
lock
pop
mov
aaa
cmp
cmps
scas
jno
sbb
xchg
ror
test
jg
push
jge
sahf
iret
jmp
jae
loop
(bad)
jmp
call
cmps
jg
push
inc
cmp
dec
xor
ret
aaa
arpl
xchg
lock
das
out
add
scas
or
in
xchg
xor
pusha
in
push
into
mov
jge
icebp
push
cld
and
lea
pusha
call
or
bound
push
in
dec
sti
cmp
jmp
mov
mov
aas
sbb
cmp
mov
sub
jg
inc
adc
dec
iret
in
jl
fstp
sbb
push
out
out
push
cs
rcl
dec
test
out
jo
pop
cmp
sub
push
jb
mov
mov
div
mov
jo
push
les
fstp
lea
ficomp
call
mov
int
vpslld
retf
fdiv
ss
stos
push
test
daa
cmp
dec
xlat
jno
popa
cmp
sbb
movs
lahf
sub
mov
xchg
mov
jecxz
(bad)
xor
test
mov
cli
dec
cmp
fmulp
cmp
daa
dec
jg
jmp
push
jg
movs
and
(bad)
iret
scas
and
int3
call
push
dec
das
lods
mov
out
adc
xor
mov
sbb
mov
mov
pop
call
(bad)
mov
dec
push
lods
lock
push
jmp
mov
sub
sub
hlt
jl
dec
jge
xor
inc
fild
add
jl
sub
jg
shl
jo
jp
pop
jl
inc
imul
inc
mov
push
mov
(bad)
mov
hlt
test
or
or
sbb
jnp
hlt
arpl
(bad)
and
or
sub
pop
inc
not
jmp
or
in
xchg
dec
cwde
into
shl
std
push
(bad)
mov
(bad)
cmps
add
and
pop
mov
push
mov
pop
pcmpeqb
lahf
xor
adc
cmp
in
jns
mov
retf
js
arpl
adc
lock
ror
mov
out
fucom
dec
out
fild
and
cmp
push
sbb
rcl
adc
push
aaa
rcl
inc
jb
and
mov
push
sar
push
inc
sub
inc
jge
add
int3
push
mov
sbb
mov
and
stos
stc
xor
stos
mov
cmc
mov
hlt
imul
xor
pop
push
adc
xor
(bad)
adc
cdq
mov
pop
out
sahf
pop
push
inc
mov
sbb
inc
mov
ret
or
pop
push
ror
and
adc
inc
cli
cmp
pop
lahf
sub
jmp
pop
popf
std
cmps
push
jo
je
sub
bound
mov
(bad)
rcl
std
sub
mov
xor
imul
sbb
ja
adc
call
pop
loopne
cli
ins
cmp
inc
adc
dec
inc
sub
sbb
scas
sub
imul
outs
jmp
popa
cs
lahf
test
out
xchg
inc
sub
jb
or
push
ror
or
pop
(bad)
shr
call
aas
inc
rol
or
mov
(bad)
adc
inc
mov
outs
call
call
and
inc
scas
ret
pushf
sub
pop
ficom
xor
cmp
mov
add
lods
pop
movq
sub
shr
ret
add
ret
pop
add
test
ds
sbb
mov
fstp
mov
ins
xchg
mov
cmc
sub
ret
cmp
mov
inc
and
stc
mov
xchg
mov
sahf
xchg
cmp
xchg
mov
xchg
ret
ins
cs
test
iret
mov
cmp
imul
jmp
jnp
xor
out
cmp
hlt
inc
add
out
cmp
push
xchg
in
aam
xor
push
jnp
mov
cdq
sub
hlt
scas
nop
mov
dec
jne
or
xchg
in
dec
sbb
ja
sbb
retf
or
mov
fild
jg
sar
xchg
(bad)
mov
js
sbb
(bad)
push
fisubr
cmp
rol
mov
gs
imul
xchg
jno
inc
int
pop
shr
xchg
imul
push
pusha
jmp
mov
mov
fcom
sbb
fild
or
movs
mov
movaps
sbb
retf
(bad)
imul
scas
adc
and
xchg
outs
add
out
in
adc
(bad)
mov
pop
aam
cmc
enter
pop
cli
pop
jmp
adc
jae
cli
data16
pop
test
cmp
fisttp
or
idiv
idiv
adc
mov
ficom
jae
inc
sti
cmp
sbb
call
and
int
cmp
or
dec
and
jp
aaa
adc
jbe
pop
mov
dec
jecxz
out
in
retf
ins
sahf
lahf
sar
pop
cmp
sbb
fld
pop
repz
jnp
out
mov
pop
stos
lods
mov
mov
sar
pop
push
mov
test
add
mov
adc
mov
aad
jge
cmps
mov
or
gs
shl
and
je
retf
mov
loope
jnp
das
ret
cld
popa
sbb
push
clc
mov
push
scas
js
sti
sbb
ins
fcom
mov
retf
in
or
adc
pop
stos
and
push
or
xchg
sbb
inc
jnp
sub
push
pop
or
cmp
call
inc
loopne
add
in
push
cmp
sub
jecxz
mov
xchg
inc
call
mov
out
(bad)
repnz
mov
push
jmp
(bad)
int
cmps
and
inc
xlat
xor
ficom
loopne
mov
mov
sub
mov
mov
jno
std
ret
stc
sub
idiv
adc
cmp
and
ds
xchg
out
ret
jp
jp
jnp
lea
hlt
dec
test
jge
out
push
shl
lods
fild
sbb
mov
jle
mov
scas
fs
xchg
adc
mov
jae
gs
in
jle
repnz
pop
fidivr
rcr
stos
push
jg
sahf
mov
lock
scas
into
pop
and
adc
rcl
xchg
or
xchg
outs
add
fimul
xchg
add
es
int3
jl
xor
push
clc
mov
mov
out
cmps
and
sar
retf
sub
(bad)
daa
aad
daa
jae
mov
xchg
xor
sbb
jl
jns
int
inc
cmp
shl
cwde
out
cwde
out
mov
mov
or
mov
scas
imul
cmp
fsub
lock
pusha
mov
cmp
cmps
sbb
sbb
mov
lds
push
aaa
jb
jbe
rol
stc
popa
into
(bad)
jno
inc
into
fucomip
mov
sbb
in
push
fisubr
mov
ja
xor
xor
jle
in
loope
into
dec
xor
dec
fcom
inc
ret
and
cmps
mov
dec
lods
sub
iret
stc
pop
(bad)
iret
in
aam
pop
movs
mov
push
cdq
sbb
mov
mov
inc
pop
xchg
mov
in
imul
sub
jg
test
aam
cmc
rol
cmp
xor
std
mov
pusha
cli
retf
cmp
movs
(bad)
loop
mov
ret
div
sub
lock
(bad)
fadd
stc
dec
cmp
sub
dec
lods
in
mov
jns
cs
rol
pop
dec
rcr
sub
mov
loopne
(bad)
int
test
imul
cmps
test
rcl
sub
(bad)
mov
scas
xchg
nop
ret
add
clc
cmp
dec
pop
repnz
xor
add
loopne
xchg
retf
cmp
retf
jmp
imul
jl
stc
test
mov
je
in
fwait
cmc
(bad)
sbb
sub
sub
mov
dec
xor
jmp
sahf
lea
mov
cwde
mov
jle
jnp
pop
sar
lock
mov
aas
lds
stc
push
pusha
jp
lahf
xor
jp
repz
cmovl
retf
sub
mov
movs
std
pop
lods
mov
sub
imul
or
xor
in
les
fmul
xor
jns
out
in
into
xchg
cs
or
daa
clc
xor
push
pop
repnz
and
or
and
sar
sti
sbb
push
out
pusha
jp
cld
xor
ret
int3
pop
test
mov
jmp
sbb
cs
repz
js
repz
sub
(bad)
xchg
xor
fstp
add
pop
loope
mov
out
jl
cwde
scas
loop
xor
mov
cmp
sub
loop
cmps
repz
xor
pop
mov
xchg
jge
and
cmp
pop
dec
pop
repz
or
cli
sahf
inc
cld
xor
inc
xor
mov
push
cmp
push
dec
cli
repz
lahf
scas
inc
repz
shr
rcl
pop
mov
imul
int
or
cmps
imul
sub
cwde
cs
lds
cmps
pop
lock
ins
inc
and
push
call
xchg
call
mov
inc
inc
std
jnp
mov
das
hlt
fucomip
jmp
pop
xor
inc
test
lea
xor
cmp
push
jecxz
jno
jno
icebp
mov
sub
jecxz
jecxz
jecxz
(bad)
lahf
lea
push
pop
daa
loope
push
push
xlat
loopne
cmp
xor
jmp
arpl
daa
loope
xor
push
sub
stos
sub
lods
(bad)
xor
out
or
or
cmps
xor
in
xchg
mov
rcr
cli
cmp
stc
inc
fdivr
addr16
pop
mov
or
mov
jl
mov
jo
daa
aaa
add
jbe
hlt
cmc
je
call
mov
jae
(bad)
mov
adc
setl
jb
int
pop
rcr
jle
daa
mov
jnp
mov
mov
mov
mov
sub
stc
ins
inc
mov
pop
jmp
xor
fld
imul
or
in
pop
test
cmc
or
retf
mov
js
(bad)
je
mov
bound
jne
gs
mov
imul
ja
fldenv
pop
add
rcl
(bad)
cmps
mov
push
mov
xchg
or
cmps
mov
mov
mov
out
call
sbb
fdiv
ins
mov
xchg
adc
mov
cs
cli
sar
mov
fnstcw
inc
inc
jg
sub
(bad)
mov
lods
out
in
int
or
mov
jge
or
push
or
ret
test
mov
mov
in
sbb
xor
clts
neg
call
fisttp
jo
jnp
pusha
repz
aaa
push
(bad)
mov
cmp
xchg
test
inc
jp
or
mov
(bad)
or
mov
or
jno
push
or
sbb
push
sub
dec
stos
mov
(bad)
sahf
sub
pop
mov
cmps
shl
push
fld
xor
mov
fldenv
push
jae
cld
loope
push
sbb
add
les
bound
std
out
in
xchg
jge
cmp
(bad)
stc
pop
xor
cmps
(bad)
xchg
repz
dec
aad
(bad)
fnstcw
test
xor
add
ficomp
in
mov
mov
sbb
lock
mov
push
cmp
das
or
test
popa
ins
dec
aas
push
xchg
ret
cs
outs
sub
inc
inc
in
in
mov
addr16
push
cmp
cli
in
fisttp
pop
lods
fstp
xchg
jmp
lds
daa
xchg
sar
jo
jbe
cs
jne
movs
fist
xor
fldenv
sbb
push
xor
test
mov
dec
add
out
sub
pop
enter
fs
(bad)
repz
cmp
push
out
pop
fnstcw
cmp
or
aas
aas
xchg
(bad)
pop
retf
loop
in
in
inc
inc
pop
(bad)
mov
rol
jle
stos
push
mov
cmp
jb
dec
sbb
mov
jb
stos
adc
lods
stos
fist
add
adc
xor
(bad)
cmc
or
mov
in
pop
aad
(bad)
jmp
dec
inc
shl
cs
das
arpl
in
xchg
mov
movs
repnz
jge
sub
repnz
pop
shl
xchg
and
call
pop
rcl
jmp
jae
mov
cmp
xor
loope
pop
fild
push
fs
push
ins
retf
dec
shl
pushf
xor
xor
inc
inc
xchg
fcmovnbe
mov
inc
test
retf
fiadd
popa
(bad)
mov
push
das
fcmovnb
adc
xchg
jnp
inc
test
mov
mov
sbb
shl
retf
cmp
push
cdq
test
jo
mov
mov
rcl
cmp
popa
mov
cdq
jmp
push
lock
inc
pop
lea
mov
les
das
(bad)
xchg
push
pop
scas
mov
xlat
mov
jo
sub
xor
mov
jmp
or
dec
and
mov
add
adc
and
ret
stc
imul
cmp
gs
outs
jmp
sub
data16
retf
cmp
sbb
or
in
adc
scas
and
adc
jl
xor
cs
lods
ds
fs
repnz
cmp
sub
jb
jle
mov
pop
inc
push
xor
jno
mov
vpaddsb
es
pop
add
dec
call
arpl
jno
or
push
not
test
pop
mov
rcl
sbb
fstp
jo
je
scas
pop
test
dec
jnp
push
push
mov
push
mov
mov
dec
and
push
and
jl
jmp
push
fist
mov
mov
jo
gs
iret
jnp
sbb
out
dec
inc
jg
mov
in
jns
pop
cmp
push
adc
movs
or
mov
into
sub
xor
push
xchg
enter
retf
pusha
xor
fsubr
fs
jne
mov
fstp
mov
js
xchg
jbe
or
xor
adc
std
xchg
mov
ds
push
jmp
sub
into
out
add
jmp
stos
fdiv
inc
mov
pop
push
jp
fisubr
and
test
xchg
and
pop
xchg
iret
int3
pushf
sub
and
cmps
mov
lds
cmp
pop
xor
shl
fsub
enter
ror
pop
loopne
test
inc
lds
arpl
movs
mov
push
in
fdiv
lods
pop
in
ja
repnz
mov
jno
mov
js
rcl
inc
cmps
cmp
rcr
dec
imul
jbe
ficom
add
sub
inc
jg
and
pextrw
sbb
es
mov
mov
adc
adc
arpl
mov
fisub
(bad)
mov
stos
push
iret
loop
mov
mov
arpl
mov
adc
(bad)
retf
ret
fild
mov
cmp
call
wbinvd
test
imul
jno
jmp
in
std
mov
ins
fucomip
mov
in
jmp
adc
dec
sbb
add
fcom
enter
test
inc
mov
stos
rol
cmps
xor
push
enter
pushf
mov
pop
fldenv
jne
leave
out
ficom
adc
sbb
inc
adc
push
mov
xchg
into
adc
cli
jb
push
movs
jne
iret
mul
bound
cli
push
sub
fucom
push
lea
fstp
outs
or
push
fcomp
mov
sub
fisub
add
inc
sub
les
lock
das
pop
mov
push
xor
pop
adc
ror
test
fcmovnb
xor
leave
sub
scas
mov
or
mov
add
arpl
jbe
push
(bad)
mov
mov
xchg
mov
cdq
arpl
in
ret
add
inc
aaa
or
add
retf
loope
cmps
dec
(bad)
mov
pushf
pop
cmp
fsub
fcmovnu
sbb
js
mov
dec
sti
cmp
sahf
ja
push
push
cs
ds
add
outs
cwde
mov
sub
pop
fcmovbe
(bad)
ins
and
pop
sbb
adc
or
fimul
cmp
jb
addr16
cmp
enter
add
mov
popa
pop
call
sbb
movs
jmp
imul
movs
dec
fadd
adc
sbb
cmp
shl
lds
jne
xor
mov
ss
and
xchg
int
fucomp
shl
mov
push
mov
push
pop
push
in
pushf
icebp
les
imul
cmp
lock
lods
imul
jbe
push
loopne
dec
or
imul
retf
adc
rcl
iret
mov
inc
in
into
aas
xor
pop
cmp
outs
sar
cwde
xor
jo
add
(bad)
mov
jb
test
mov
sahf
mov
sbb
div
stc
aad
ret
stos
test
push
test
test
stos
sbb
dec
push
mov
(bad)
popf
in
(bad)
popa
sahf
mov
mov
mov
fs
sti
sub
jbe
in
inc
cmp
xchg
and
mov
and
js
cmp
jp
mov
(bad)
sahf
add
dec
shl
arpl
out
cmp
aad
aam
fld
je
or
enter
popa
mov
out
add
push
inc
inc
jae
mov
pop
sub
clc
cmp
mov
pop
jns
add
das
sbb
mov
xchg
fstp
(bad)
xchg
retf
jb
or
push
fadd
cmp
or
shl
jnp
mov
and
pop
xchg
ret
add
inc
out
in
push
out
inc
scas
movs
into
add
test
pop
adc
int
cmp
loop
popf
fnsave
inc
pop
ds
scas
pop
add
pop
or
xchg
ret
pop
cwde
mov
push
shr
cmp
retf
ss
ds
mov
sub
add
shl
test
pop
add
sar
xor
push
and
cwde
inc
ins
push
jmp
sbb
test
mov
add
fwait
imul
(bad)
add
add
out
neg
mov
aas
mov
dec
or
rep
and
call
pop
xor
sub
je
lahf
data16
and
mov
pop
mov
add
adc
and
icebp
daa
xor
cli
jge
xor
gs
pushw
jne
stos
xor
mov
ret
inc
mov
mov
push
push
mov
push
push
mov
test
xchg
xor
sub
mov
stos
stos
scas
repz
xchg
xor
push
jg
dec
jmp
mov
test
inc
and
or
lea
dec
inc
movs
test
sbb
test
mov
jmp
scas
in
and
jmp
sbb
mov
jnp
call
xor
mov
test
shl
mov
cmp
dec
inc
push
into
(bad)
fistp
sbb
hlt
and
loop
push
push
sbb
or
repnz
test
(bad)
sbb
imul
sbb
aam
popf
sub
call
ins
sar
pop
push
jge
das
jmp
in
mov
pop
jg
mov
ds
jecxz
push
pop
(bad)
cmc
loope
ss
and
push
push
xchg
inc
rcl
dec
xor
imul
mov
loop
imul
lahf
sub
jle
push
cmps
adc
jo
les
jo
retf
shl
mov
nop
lahf
xchg
les
pop
jle
test
jge
or
test
jp
sub
mov
xor
loop
mov
ret
push
or
popa
ror
movs
or
or
push
mov
sub
stos
inc
shr
pop
in
in
cmp
xchg
ret
lods
sbb
push
xor
push
sbb
jne
mov
retf
lods
xor
aam
adc
hlt
or
dec
stos
inc
mov
test
jp
ficomp
or
sbb
lea
adc
push
dec
enter
fiadd
xor
(bad)
push
stos
push
inc
cmps
sar
mov
add
pop
movs
push
xchg
and
jno
lock
adc
xchg
add
clc
cmp
ror
xor
scas
ins
xchg
outs
test
cmp
sti
popf
out
pop
in
cdq
push
mov
push
adc
sub
mov
sbb
dec
aaa
xor
pop
mov
(bad)
xor
mov
inc
mov
in
dec
xor
add
mov
test
push
and
fcom
xor
loop
push
les
mov
enter
cmp
in
adc
rcl
jge
mov
mov
into
cwde
jp
imul
fcmovb
cmp
std
loope
xor
inc
fsubr
retf
jg
sbb
mov
push
fadd
jle
push
cmp
ror
(bad)
lods
fst
in
out
retf
in
push
sub
inc
mov
xchg
lods
sub
add
lds
mov
cs
hlt
shl
sub
jb
pop
add
xchg
hlt
sbb
es
lock
ret
ss
stos
jb
pop
in
sar
sub
cmc
retf
jnp
rol
adc
fnsave
cld
pushf
jnp
(bad)
out
mov
stos
shl
mov
pop
jno
inc
fwait
(bad)
fstp
lods
sbb
in
sbb
or
jns
cmp
mov
fs
mov
xchg
push
out
loope
pop
addr16
push
push
and
xlat
cmp
ins
mov
lahf
les
mov
jmp
repnz
jle
pop
fistp
test
int3
jmp
push
add
jg
mov
into
adc
fs
repz
rcl
pop
rep
jnp
jne
mov
lea
mov
mov
cmc
jo
ret
pop
test
jns
clc
std
adc
push
sub
fstp
(bad)
mov
add
dec
stos
xor
jmp
rcl
popa
xlat
fcmovb
mov
out
imul
push
xor
call
or
add
(bad)
mov
aaa
(bad)
hlt
loop
or
push
mov
fadd
pop
in
xchg
les
mov
mov
fisubr
call
push
dec
cmp
lock
mov
fdivr
pusha
xchg
jl
popa
or
dec
jo
fdivr
pop
jb
pop
lock
ret
add
hlt
(bad)
in
inc
cmp
imul
and
jg
shr
inc
mov
push
mov
mov
mov
sbb
xchg
je
xchg
shl
retf
inc
fild
(bad)
cmp
dec
inc
mov
mov
jmp
(bad)
push
and
jecxz
mov
shl
sub
es
push
lock
cdq
test
psrld
push
mov
imul
aas
pop
inc
pop
push
stc
aaa
repz
jg
iret
xor
add
hlt
fild
fcomip
repz
add
movs
inc
add
add
or
sbb
test
cmp
push
push
adc
and
sbb
pop
sbb
jg
pop
pop
jl
pusha
pusha
jle
or
leave
shl
inc
push
outs
push
pop
adc
add
cmp
and
dec
push
pop
push
add
pop
dec
jg
ins
pop
js
dec
dec
push
outs
(bad)
or
dec
inc
inc
pop
pop
push
add
mov
sbb
loopne
scas
sbb
arpl
jae
jb
arpl
je
add
jmp
sbb
pop
adc
adc
sbb
sbb
pop
jae
pop
or
or
or
fs
inc
pop
push
add
cmp
jns
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
or
add
jle
add
or
add
or
add
push
je
imul
add
add
or
add
and
add
add
adc
add
and
dec
inc
add
add
add
and
add
and
outs
bound
add
add
add
push
adc
add
add
add
add
add
add
add
xor
add
or
add
or
add
and
add
adc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jno
add
retf
add
add
add
add
add
or
das
add
add
add
outs
add
add
add
add
add
or
mov
sbb
or
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fs
add
add
add
add
add
add
add
add
add
inc
add
jp
mov
mov
push
add
add
repz
cli
add
or
add
add
push
inc
push
push
add
add
add
add
add
pop
inc
push
push
add
pop
sbb
push
add
pop
(bad)
add
add
add
add
pop
out
add
add
inc
push
push
add
add
inc
push
push
add
inc
push
push
add
inc
push
push
add
add
add
or
add
add
or
add
add
push
add
add
add
add
add
add
add
outs
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
or
pop
add
add
add
pop
sti
pop
add
or
and
xor
xchg
add
xor
stos
add
xor
mov
add
add
adc
inc
rol
adc
add
stc
add
add
add
add
add
add
add
add
push
sbb
add
add
add
push
sbb
add
add
add
adc
test
mov
add
add
adc
push
add
and
add
add
or
add
and
add
add
or
add
and
add
add
or
mov
add
cld
and
add
add
xor
push
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
add
add
add
adc
cdq
add
add
mov
add
add
add
mov
pop
add
add
add
sbb
add
add
or
add
and
add
add
sbb
add
and
add
add
sbb
add
and
add
add
add
add
add
add
adc
xchg
and
add
add
add
push
add
fsub
add
add
adc
fwait
add
sub
add
add
adc
push
sub
add
add
add
add
add
add
add
adc
and
mov
and
push
sbb
add
push
add
add
and
push
add
add
add
add
push
sbb
add
add
add
push
add
add
push
add
add
add
add
xchg
sbb
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
lods
add
add
add
add
add
and
add
add
cwde
push
add
add
cwde
push
add
add
mov
add
add
mov
add
add
pusha
add
pusha
add
fwait
add
pusha
add
fwait
add
pusha
add
pusha
add
fwait
add
fwait
add
adc
adc
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
and
sbb
cmp
xor
push
add
add
add
add
dec
add
add
add
inc
add
mov
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
leave
add
inc
add
add
add
add
out
add
add
add
push
mov
jmp
add
add
push
xchg
add
add
add
add
add
add
add
add
push
int3
add
add
push
fld
rol
stos
add
add
add
push
cli
add
test
add
add
add
inc
pop
inc
add
add
inc
add
add
add
push
add
add
daa
add
add
add
pop
pop
add
add
add
add
add
add
add
stos
add
add
add
pop
mov
adc
loopne
daa
add
jmp
xchg
add
stos
add
add
add
add
add
add
add
add
add
add
add
rol
add
pop
add
add
out
add
add
leave
add
add
mov
add
add
add
mov
add
add
add
add
adc
sbb
add
add
add
add
dec
add
(bad)
add
sbb
sub
arpl
adc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
test
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
ja
jle
dec
add
add
add
cmp
add
add
add
or
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
adc
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
or
add
add
adc
sbb
add
add
add
sbb
add
sub
add
add
add
je
jae
cs
add
je
ins
jae
outs
jb
imul
outs
jae
data16
push
imul
jae
arpl
push
jns
je
ins
add
popa
add
je
push
gs
jne
arpl
cs
jae
jne
arpl
add
and
add
gs
inc
jo
ins
imul
add
add
jo
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
je
jb
inc
imul
jae
bound
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
je
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
dec
jns
outs
ins
jo
je
jb
inc
outs
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
jne
addr16
imul
jb
bound
add
jae
gs
cs
imul
imul
jb
push
arpl
bound
arpl
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
ins
pop
inc
jo
dec
bound
arpl
outs
jbe
fs
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
push
jae
jb
ins
pop
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
arpl
outs
jb
addr16
inc
gs
outs
jae
popa
outs
arpl
addr16
inc
outs
ins
jo
je
jb
addr16
inc
jo
ins
imul
add
je
push
jae
jb
addr16
push
bound
jb
imul
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
jo
imul
add
bound
jb
imul
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
push
bound
jb
imul
outs
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
je
bound
arpl
ins
jne
add
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
add
je
imul
imul
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
inc
jb
popa
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
gs
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
ins
pop
push
push
push
je
je
arpl
ins
jne
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
gs
outs
jae
popa
outs
arpl
inc
outs
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
mov
loop
mov
or
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
jae
gs
bound
gs
ins
jbe
add
inc
push
push
inc
je
jb
bound
add
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
jns
gs
push
gs
outs
pop
imul
jb
push
gs
outs
pop
imul
jb
jae
imul
inc
add
outs
ins
jo
gs
add
ja
popa
je
inc
imul
dec
popa
je
inc
gs
dec
popa
je
inc
popa
ins
ins
add
or
mov
loop
mov
or
mov
or
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
or
mov
or
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
imul
push
outs
jae
je
outs
outs
add
jb
popa
ins
add
ins
jo
gs
imul
add
je
add
popa
add
outs
jae
add
jb
popa
jns
loop
mov
or
mov
or
mov
inc
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
addr16
dec
popa
ins
add
jb
outs
add
dec
outs
ja
jb
inc
outs
outs
je
imul
loop
mov
or
mov
or
or
mov
or
mov
or
or
mov
or
mov
or
gs
bound
arpl
gs
js
arpl
imul
ins
bound
push
jne
jae
jb
outs
add
je
gs
outs
add
je
outs
fs
outs
outs
add
je
outs
outs
popa
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
inc
imul
popa
fs
addr16
inc
jae
gs
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
popa
fs
dec
outs
je
add
popa
fs
outs
je
xor
push
gs
fs
jns
gs
inc
fs
imul
ins
add
jo
jae
add
je
dec
je
ins
add
je
je
imul
pop
inc
push
inc
dec
dec
add
je
outs
outs
jbe
jb
gs
push
je
imul
fs
addr16
inc
push
addr16
dec
outs
addr16
add
jo
outs
add
ins
ins
outs
and
xor
dec
outs
je
arpl
push
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
jo
jb
addr16
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
add
and
and
and
add
add
out
xor
cdq
cmp
mov
inc
imul
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
and
add
or
add
add
add
push
pop
add
or
push
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
add
add
push
adc
or
push
adc
or
push
adc
and
push
adc
adc
adc
or
adc
or
adc
and
adc
adc
add
add
add
or
and
adc
add
add
or
pop
add
or
add
or
add
and
add
and
add
adc
add
adc
or
adc
and
add
adc
add
dec
jns
inc
outs
ins
jo
je
jb
add
add
or
add
push
dec
jns
inc
jo
ins
imul
add
add
add
and
add
dec
jns
push
jae
jb
add
add
adc
add
push
dec
jns
push
bound
jb
imul
pop
add
add
add
add
add
sbb
pop
add
add
add
add
add
xor
xor
add
xor
add
add
add
add
add
push
add
add
add
add
adc
add
add
add
xor
add
adc
add
and
push
push
push
push
popa
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
push
adc
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
push
adc
push
adc
add
sbb
adc
and
add
add
push
add
add
adc
and
sbb
add
sbb
add
sbb
adc
push
sbb
adc
or
adc
push
sbb
add
add
add
add
add
sbb
jno
jno
sbb
add
and
add
or
add
adc
jns
pop
and
or
and
sbb
adc
add
push
or
add
add
pop
or
or
sbb
or
or
add
sbb
add
add
add
push
and
sbb
imul
imul
add
adc
adc
or
add
add
or
and
adc
xor
sbb
sbb
sbb
sbb
and
sbb
sbb
push
adc
or
adc
pop
or
or
adc
add
add
push
add
jne
and
pop
add
or
and
add
add
add
pop
add
and
adc
adc
add
add
add
push
or
or
add
and
add
or
and
adc
add
push
push
push
add
or
arpl
jae
data16
add
gs
cs
add
or
add
inc
ins
imul
add
sbb
jo
jb
addr16
and
arpl
jae
data16
xor
xor
add
add
add
or
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
xor
xor
xor
xor
add
add
dec
retf
add
add
add
inc
retf
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
