call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
jmp
outs
push
fld
pushf
neg
ds
push
jno
stos
mov
in
or
bound
daa
cwde
sti
shr
movs
add
inc
mov
das
mov
cmps
push
and
xchg
pop
mov
xor
jb
mov
out
push
leave
test
loope
cmp
int3
lods
pop
jmp
fdiv
mov
or
mov
mov
leave
sub
pop
dec
movs
pop
(bad)
pop
ds
jb
shr
and
mov
(bad)
addr16
jl
(bad)
cmp
neg
xor
or
mov
and
shr
or
mov
mov
jns
mov
adc
data16
movs
or
inc
mov
sbb
xchg
or
imul
lds
jl
(bad)
lods
sub
gs
pop
aaa
call
int
pop
jmp
sbb
push
cmp
mov
leave
and
cmp
and
neg
lods
nop
lock
sub
adc
lods
and
arpl
mov
fcmovnb
sub
pop
pop
mov
adc
mov
enter
dec
test
sbb
pop
mov
mov
call
fs
mov
cli
fsubr
sub
int3
stos
repz
lds
cmc
repz
xor
test
call
loopne
sub
stc
push
xor
fs
sbb
outs
shl
mov
mov
pop
pusha
cmp
jge
push
cmp
aas
js
mov
xor
daa
add
fsub
add
add
out
add
xor
ins
mov
mov
cld
fidiv
imul
push
mov
ret
fmul
jbe
call
mov
js
inc
jns
add
mov
jnp
test
pop
test
cmp
std
and
and
xor
push
cmc
dec
mov
js
(bad)
loop
or
seto
setno
mov
arpl
retf
fcom
sti
mov
cli
neg
outs
loope
add
and
or
retf
out
xor
sti
pop
and
in
dec
cmps
xchg
(bad)
cdq
xchg
ficom
cli
ret
jl
leave
xor
sar
add
fdivr
retf
dec
and
das
or
test
mov
adc
push
out
inc
sbb
add
sti
cmp
pop
cld
mov
out
mul
ret
sub
sbb
enter
cmp
sbb
jle
xchg
mov
and
xchg
dec
fiadd
sti
xchg
adc
jmp
out
jmp
ret
sbb
add
pop
loope
call
in
stos
jge
cmps
or
aaa
call
in
stos
jge
or
jge
lahf
fcomi
aaa
call
in
stos
jge
lahf
fcomip
aaa
call
in
stos
jge
or
(bad)
out
clc
lahf
shl
aaa
call
in
stos
jge
or
push
sbb
stos
jge
or
rol
dec
dec
mov
stos
jge
or
div
call
je
iret
div
call
hlt
pop
xor
xchg
and
in
stos
jge
cmp
div
call
in
stos
jge
cmps
fcomip
aaa
call
in
mov
pushf
cmp
or
jge
dec
cmp
ja
stos
jge
or
push
cmp
cmp
in
stos
jge
or
div
call
outs
fidivr
jmp
cmp
or
fbstp
and
jno
stos
jge
or
(bad)
aaa
call
in
stos
jge
or
or
in
stos
jge
or
scas
ja
stos
jge
or
jge
adc
jge
or
jge
or
out
in
stos
jge
or
jmp
mov
aas
stc
jecxz
js
or
ror
xchg
cli
aaa
call
lahf
xor
adc
call
imul
sti
mov
xchg
fild
push
xor
aad
imul
popa
and
std
sbb
cmp
mul
fs
and
sti
and
pop
and
stc
or
dec
into
add
sti
mov
mov
nop
repz
js
push
inc
sub
aaa
rcr
mov
inc
imul
ret
cmp
and
pop
mov
mov
mul
mul
ret
cmp
add
or
retf
pop
mov
mov
mov
push
dec
mov
(bad)
xlat
scas
popa
js
jno
dec
add
fiadd
ss
xchg
loop
fdivr
call
xor
loop
xchg
pop
cmp
inc
inc
sti
add
xlat
cmp
cld
test
pop
push
sti
add
aaa
out
pop
jmp
jle
add
in
mov
fimul
xor
enter
push
xchg
fwait
int3
jae
(bad)
dec
std
or
retf
mov
outs
mov
mov
jae
mov
ret
add
test
sti
mov
ret
loop
pop
xchg
and
js
xchg
fiadd
adc
inc
aam
js
or
retf
inc
aam
jns
mov
xchg
scas
adc
out
adc
cs
mov
movs
(bad)
out
fwait
aad
cmp
cmps
mov
jne
or
jne
or
jne
or
adc
or
jne
or
adc
mov
cmps
and
or
jne
or
cmp
xchg
int
inc
add
cmp
or
jne
test
clc
cmp
or
and
or
jne
or
ins
mov
aad
cmp
dec
lea
or
jne
or
jne
or
jne
sbb
xchg
jo
inc
movs
mov
lock
jmp
mov
inc
xlat
stos
sti
pop
cmps
scas
stos
inc
mov
fs
cmps
scas
jae
mov
jne
inc
inc
pcmpgtb
ret
sbb
(bad)
sub
cmp
mov
dec
adc
jge
and
mov
into
cbw
cmp
push
xor
cmp
mov
jmp
and
jmp
jmp
and
adc
push
mov
push
je
jp
mov
mov
jle
ja
xor
ja
xor
ja
neg
mov
pop
mov
js
ret
call
dec
mov
and
mov
adc
loop
sti
mov
int3
add
and
cld
mov
jns
mov
push
hlt
mov
fs
mov
test
vcvtss2si
clc
icebp
jb
iret
xor
js
mov
jmp
mov
into
lea
bound
add
ficomp
retf
ins
repz
inc
sti
retf
gs
adc
in
shr
gs
popf
mul
(bad)
stos
fsub
jmp
jmp
sti
mov
stos
fcomp
in
pop
sar
adc
scas
mov
xor
mov
mov
clc
push
data16
lods
add
cmp
jl
mov
pop
call
in
inc
jb
stos
push
push
add
push
cs
int
inc
sbb
gs
cdq
int
ret
rol
cs
cmp
imul
fwait
dec
pop
ficomp
adc
mov
dec
sti
adc
sbb
imul
jmp
dec
push
mov
cmps
sub
rcl
fisub
(bad)
push
adc
mov
call
pop
cmp
jb
push
fmul
cmp
mov
call
add
xchg
jl
in
daa
add
adc
and
mov
mov
icebp
xchg
jg
mov
ja
(bad)
mov
cmp
daa
cwde
mov
ja
cmp
jl
mov
jl
mov
add
das
xor
inc
jmp
(bad)
sub
jl
dec
inc
cmp
mov
jl
jno
(bad)
js
mov
bts
cdq
add
in
(bad)
fisubr
mov
idiv
sbb
fadd
jp
mov
test
jmp
test
mov
inc
stos
dec
mov
arpl
pop
call
mov
sub
mov
arpl
jp
lods
dec
mov
sub
pop
call
mov
sub
mov
arpl
cli
inc
stos
dec
mov
arpl
mov
arpl
cli
inc
stos
dec
mov
arpl
sub
stos
dec
aas
sub
or
sub
in
out
push
xchg
xchg
sub
cwde
inc
or
push
shl
shl
cmps
arpl
mov
arpl
push
shl
shl
mov
outs
push
sbb
or
shl
int
test
mov
lock
nop
pop
dec
xor
jbe
aas
xchg
dec
rcr
jb
dec
sub
inc
test
shl
shl
int3
arpl
mov
arpl
mov
arpl
jmp
ds
into
rol
jb
dec
sub
inc
test
shl
int3
arpl
mov
arpl
shl
xor
mov
nop
fxch
sub
jnp
dec
push
idiv
xor
mov
sub
mov
arpl
mov
movs
fidiv
shl
mov
jb
dec
stos
idiv
xchg
pop
cmp
xchg
enter
dec
mov
push
mov
or
dec
mov
arpl
push
call
mov
arpl
aas
add
stos
bound
out
mov
jno
int
mov
jb
dec
sub
inc
sbb
arpl
inc
call
push
shl
shl
mov
(bad)
sti
xor
or
shl
stc
arpl
mov
arpl
arpl
arpl
or
scas
out
retf
jecxz
mov
and
jae
dec
sahf
int
dec
pop
call
inc
add
mov
mov
mov
arpl
cmp
mov
mov
inc
cmps
ins
mov
arpl
lock
arpl
mov
mov
test
mov
outs
push
test
retf
test
push
mov
inc
mov
shl
shl
int3
arpl
mov
sub
sbb
dec
into
xor
int3
std
nop
icebp
int3
push
test
dec
loop
mov
pop
or
inc
adc
mov
push
mov
mov
jne
mov
sub
stos
dec
mov
in
shr
gs
mul
stos
fsub
sub
pop
in
sub
and
mov
cli
pushf
lsl
dec
ror
gs
mov
mov
xor
icebp
sar
inc
pushf
shr
cwde
std
aad
jmp
sub
jl
nop
jae
inc
stos
daa
scas
push
dec
shl
cmp
mov
jl
std
das
movs
mov
mov
cmp
jmp
cdq
int
ret
push
push
inc
dec
shl
mov
add
sbb
sar
adc
cmp
ret
jecxz
push
shr
push
cmp
pop
test
icebp
cmp
mov
cmps
jl
dec
ror
gs
or
je
xchg
and
mov
call
jge
cmp
jle
cmps
imul
mov
xor
fldcw
push
xor
pop
jge
(bad)
jg
jmp
in
hlt
loop
mov
(bad)
out
mov
int3
mov
sbb
pusha
out
dec
mov
in
je
inc
int3
(bad)
(bad)
jge
push
in
fimul
pop
cmp
mov
idiv
ss
rol
xchg
cs
(bad)
aas
popf
inc
pushf
xchg
daa
arpl
lock
mov
std
out
xor
xor
mov
mov
clc
and
outs
popa
icebp
xor
mov
xor
clc
and
clc
and
data16
lods
xor
clc
and
clc
and
clc
and
je
xor
clc
and
clc
and
clc
and
dec
mov
sahf
out
xor
daa
adc
daa
clc
and
clc
and
clc
mov
xor
clc
and
clc
and
in
or
daa
clc
and
das
sub
shr
test
scas
lahf
push
mov
inc
push
jge
jo
jg
ret
or
int3
cmp
push
daa
xchg
ret
xor
clc
and
cwde
xor
cld
mov
std
out
xor
xor
clc
and
out
and
xor
xor
daa
clc
and
je
xor
clc
and
clc
and
and
je
xor
clc
and
clc
and
daa
clc
and
clc
and
clc
and
dec
jo
add
sub
cmps
cmp
xor
clc
and
clc
and
clc
and
(bad)
xor
clc
and
daa
clc
and
clc
and
outs
clc
mov
aam
add
jge
xor
xor
dec
add
clc
and
clc
and
je
xor
clc
and
jo
xor
mov
and
loopne
jnp
outs
ds
daa
clc
and
clc
and
clc
and
jo
std
out
inc
mov
xor
xor
daa
clc
and
clc
and
daa
clc
and
cmps
mov
mov
clc
and
out
and
mov
clc
and
dec
loope
xor
mov
xor
clc
and
daa
clc
and
clc
and
adc
xor
clc
and
clc
jno
stos
cmp
jnp
adc
xor
clc
and
clc
jno
stos
cmp
xor
shl
xor
clc
and
mov
gs
ss
outs
ds
arpl
imul
arpl
imul
outs
inc
outs
shr
sub
std
out
xor
push
in
xor
outs
gs
out
add
ins
mov
fucomp
test
inc
popa
test
imul
xchg
inc
jae
popa
into
mov
xor
dec
test
test
cmp
call
cmps
cmp
in
sar
dec
(bad)
mov
xchg
adc
stos
test
xor
cmp
dec
push
frstor
or
mov
mov
(bad)
or
lods
pop
jnp
mov
xchg
xchg
xchg
mov
sar
jl
iret
in
inc
cdq
iret
xor
jae
push
jle
mov
jae
push
adc
fwait
data16
jbe
mov
nop
mov
mov
or
push
shl
ret
mov
push
mov
daa
cmp
mov
sahf
(bad)
adc
adc
xchg
adc
cmps
out
mov
(bad)
fstp
iret
cmps
xchg
inc
int
pop
xchg
cmp
push
dec
rcl
jmp
int
inc
sbb
icebp
pop
nop
sbb
pop
stc
lods
jl
mov
rcr
pop
scas
push
add
dec
rcr
dec
lea
outs
push
inc
je
lods
not
repnz
jl
mov
add
mov
jl
pusha
lods
enter
bound
(bad)
cmp
jge
xor
out
and
mov
ss
jle
mov
push
pop
xchg
in
mov
mov
movs
cmps
sub
mov
mov
movs
cmps
sub
xor
mov
ss
es
and
mov
mov
sub
movs
mov
mov
sub
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
pop
xchg
xchg
xchg
mov
xchg
nop
mov
mov
mov
stos
mov
mov
stos
xchg
xchg
or
or
xchg
pushf
mov
pop
pop
pop
into
inc
pop
pop
daa
xchg
ja
into
pop
pop
pop
mov
pop
fadd
xor
xchg
lea
pushf
mov
pop
pop
pop
into
pop
pop
pop
out
add
into
fidiv
pop
into
pop
pop
pop
mov
pop
fadd
xor
xchg
lea
pushf
mov
pop
pop
pop
into
inc
pop
pop
daa
xchg
jnp
into
pop
pop
pop
into
pop
pop
pop
mov
pop
fadd
xor
xchg
lea
pushf
mov
pop
pop
pop
jmp
pop
(bad)
into
fidiv
pop
into
pop
pop
pop
push
mov
dec
popf
xchg
adc
in
pushf
mov
xor
pushf
into
ficom
pop
into
pop
pop
pop
into
inc
pop
pop
daa
xchg
jg
into
pop
pop
pop
mov
pop
fadd
xor
xchg
lea
pushf
mov
pop
pop
pop
test
mov
into
pop
pop
pop
into
pop
pop
pop
xor
movs
xchg
pop
cmps
xchg
xchg
pop
cmps
nop
mov
ror
add
pop
adc
inc
lock
clc
cdq
xchg
ds
xchg
jns
into
pop
pop
pop
das
es
fcomp
adc
cdq
mov
push
pop
adc
adc
test
or
in
xchg
mov
into
ficom
pop
into
pop
pop
pop
dec
aas
pop
pop
or
pop
xor
pop
pop
pop
into
dec
pop
pop
pop
xchg
cwde
xchg
into
pop
pop
pop
into
pop
pop
pop
sbb
push
(bad)
fs
mov
into
ficom
pop
into
pop
pop
pop
dec
xor
or
jl
ficom
pop
into
pop
pop
pop
into
push
call
adc
into
pop
pop
pop
push
jb
pop
sbb
mov
pop
adc
into
pop
pop
pop
into
pop
pop
pop
stos
inc
pop
fsub
adc
pop
into
pop
pop
pop
(bad)
adc
daa
adc
push
xchg
jmp
pop
into
pop
pop
pop
xor
into
pop
xchg
and
pop
pop
pop
into
pop
pop
pop
xor
into
ficom
and
into
pop
pop
pop
push
test
pop
pop
xor
pop
fadd
xchg
movs
aad
cmps
xchg
mov
pop
mov
xchg
sbb
push
(bad)
lods
in
mov
push
xor
pop
into
pop
pop
pop
jno
pop
aam
pop
aad
into
pop
pop
pop
into
pop
pop
pop
jecxz
pop
or
ficom
pop
mov
push
pop
adc
add
shl
xor
xor
xor
pop
into
pop
pop
pop
into
and
push
push
shl
mov
outs
xor
xchg
popf
mov
xchg
clc
movs
adc
cmps
xchg
mov
or
pop
xor
and
pop
cmps
mov
xchg
add
xor
xor
fidiv
pop
into
pop
pop
pop
mov
pop
pop
clc
cdq
mov
daa
xchg
jge
into
pop
pop
pop
into
pop
pop
pop
inc
jno
pop
cmc
adc
pop
xor
cmps
xchg
mov
daa
xchg
mov
adc
jecxz
push
pop
xor
jo
pop
push
xor
mov
lahf
mov
adc
xor
jmp
not
or
push
xor
loope
pop
outs
push
out
mov
lods
jg
scas
js
lods
(bad)
int3
(bad)
xchg
outs
shr
outs
push
sbb
cmp
in
push
fwait
add
or
sub
adc
addr16
xor
and
sar
adc
sub
bound
stos
mov
jmp
(bad)
popf
mov
mov
jnp
sub
adc
sub
loopne
sar
call
adc
scas
mov
data16
mov
mov
outs
shr
outs
push
sbb
rcl
add
dec
shl
sub
sub
ror
pop
pop
jle
mov
mov
add
mov
fsub
adc
xchg
sbb
seta
scas
sub
sahf
imul
iret
jae
lahf
dec
rcr
adc
add
mov
pop
call
xor
jae
pop
sar
jge
push
mov
call
and
mov
rcl
jmp
jg
or
push
rcr
pop
and
jl
outs
push
or
cmp
jbe
mov
jl
dec
rcr
push
inc
push
cmp
xchg
jl
adc
mul
mov
jno
icebp
mov
out
repz
or
(bad)
js
push
das
cdq
in
(bad)
stos
div
sub
xlat
test
cmp
pop
sbb
pop
jmp
mov
cmp
cmps
arpl
es
retf
xchg
loop
and
pop
jmp
loop
jmp
shr
add
push
arpl
loop
test
add
jg
dec
rol
xor
add
lods
(bad)
pop
dec
xor
mov
dec
or
popa
frstor
mov
leave
aam
fnsave
or
xor
dec
push
loop
dec
push
and
and
and
pop
stos
or
loopne
retf
aas
mov
mov
aas
dec
push
test
xchg
fs
mov
fiadd
inc
retf
rol
sbb
out
leave
pushf
jl
jnp
xchg
aaa
(bad)
mov
xchg
or
mov
mov
std
ins
jle
mov
or
cmp
mov
ins
push
xchg
sbb
cmp
dec
lahf
add
fsubr
jle
jecxz
lods
ret
mov
mov
jg
(bad)
mov
mov
js
mov
test
pop
push
or
ret
cmp
mov
in
pusha
test
cld
xchg
xor
cmps
xor
xchg
test
or
data16
or
xor
xchg
clc
iret
cwde
cwde
jns
xor
jg
xchg
arpl
lods
js
jge
sub
sub
pop
dec
icebp
shl
dec
push
test
pop
test
fisubr
mov
mov
or
dec
hlt
loopne
test
mov
adc
sub
lock
test
mov
jbe
xchg
bnd
pop
rol
and
xchg
or
imul
je
cwde
push
or
mov
hlt
xor
(bad)
(bad)
in
test
push
stc
push
and
mov
test
js
lock
test
add
jmp
add
in
neg
or
test
(bad)
in
test
es
(bad)
in
test
mov
in
test
ret
pop
xchg
stos
test
test
(bad)
in
test
mov
test
and
aam
and
(bad)
in
test
mov
rol
les
add
xor
add
in
test
or
in
test
out
jg
stos
test
test
mov
lea
es
(bad)
in
test
daa
sar
sbb
cmps
retf
(bad)
in
test
sub
shl
(bad)
in
test
sub
or
into
inc
retf
jno
retf
push
cdq
push
and
sub
add
xor
bound
push
and
xchg
pop
jmp
jle
stos
dec
pop
in
stos
jnp
outs
retf
in
stos
dec
pop
in
stos
jnp
addr16
in
stos
dec
pop
in
stos
mov
enter
dec
mov
aas
popa
lea
jb
ins
jle
test
mov
mov
clc
sbb
scas
mov
aaa
(bad)
mov
cmps
lahf
or
dec
out
xor
jle
mov
push
in
fwait
or
jmp
add
stc
movs
push
sti
jle
cdq
or
jne
mov
outs
push
adc
test
lock
mov
mov
xchg
lods
lea
add
(bad)
dec
mov
sbb
push
ret
pop
jg
mov
popa
sar
ins
jg
clc
daa
dec
sbb
cdq
cmp
push
js
mov
loopne
xchg
xchg
js
test
ror
push
test
mov
test
clc
icebp
clc
dec
js
cmp
or
xor
fstp
mov
repz
xor
xchg
retf
mov
in
cli
xchg
mov
ja
jg
push
xor
add
aaa
mov
sti
ret
test
jb
ins
popf
mov
je
add
(bad)
add
jle
xchg
cmp
jmp
add
cwde
sbb
clc
jmp
dec
jb
adc
jae
clc
mov
pop
icebp
xor
sbb
cli
lds
push
jge
out
inc
clc
inc
outs
jbe
jmp
xor
mov
inc
cmp
jmp
fwait
jbe
mov
retf
js
ror
pop
fcomip
test
fcomip
test
repnz
leave
hlt
clc
ror
pop
fcomip
test
fcomip
test
ficomp
fidivr
ror
pop
fcomip
test
fcomip
test
bnd
hlt
clc
ror
pop
fcomip
test
fiadd
xor
repz
pop
fcomip
test
fdivp
xchg
jno
mov
jp
add
push
mov
test
fcomip
test
fcomip
test
cs
(bad)
jp
ror
jp
ror
adc
(bad)
jp
rcr
jp
fwait
xlat
es
add
mov
jp
ror
daa
js
and
stc
rol
mov
(bad)
jp
(bad)
in
movs
push
(bad)
test
imul
pop
sub
push
jno
push
(bad)
hlt
bnd
(bad)
jp
mov
sbb
jp
pop
xchg
js
lea
rcr
xor
test
ror
and
fwait
xlat
es
mov
nop
mov
jp
cmp
jp
pop
mov
imul
stos
xor
fcomip
test
fcomip
test
cmp
in
sbb
cmps
mov
shr
pop
fcomip
test
fcomip
call
(bad)
clc
ror
mov
fcomip
test
fdivp
test
(bad)
stos
imul
add
pop
fcomip
test
fcomip
test
(bad)
stos
imul
add
repz
pop
fcomip
test
sub
jno
imul
pop
fcomip
test
fild
mov
stc
shr
pop
sub
cmp
test
fcomip
test
fild
je
stc
shr
pop
fcomip
test
sub
mov
(bad)
hlt
pushf
retf
js
pop
gs
fisttp
pop
fcomip
test
fcomip
test
sbb
test
imul
in
mov
(bad)
pop
fcomip
test
fcomip
test
fcomip
test
mov
test
fcomip
test
sub
cmp
test
fcomip
test
into
mov
jp
imul
pop
fcomip
test
sub
mov
(bad)
hlt
pushf
retf
jp
xchg
inc
fisttp
pop
fcomip
test
clc
jge
jp
imul
rol
fisttp
pop
fcomip
test
fcomip
test
inc
(bad)
hlt
pushf
retf
jl
in
mov
fcomip
test
fild
aam
repz
pop
fdivp
pop
add
stos
imul
pop
test
mov
(bad)
stos
push
(bad)
pop
fcomip
test
fcomip
test
fbld
leave
pop
mov
(bad)
pusha
repnz
(bad)
sti
clc
jo
push
fisub
test
fcomip
test
sub
jno
outs
mov
test
fcomip
test
jbe
sbb
mov
rcl
and
in
jo
mov
jp
fidiv
add
jo
call
shr
jmp
iret
std
mov
or
paddusb
sbb
mov
or
paddusb
paddusb
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
es
jo
gs
call
retf
fdivr
retf
xchg
fs
leave
mov
out
push
sahf
retf
scas
cmp
movs
lods
mov
(bad)
mov
xlat
clc
ins
jge
xchg
call
jle
mov
xor
jge
or
add
jns
lods
sbb
ins
or
rol
mov
in
call
lods
retf
jg
clc
aas
jl
arpl
cwde
ds
aas
jle
mov
fsubr
lods
sbb
mov
jbe
sbb
add
jmp
jle
jae
xor
or
mov
pop
mov
ds
pop
ret
or
add
mov
mov
inc
cmp
fwait
or
stos
pop
mov
pusha
test
mov
(bad)
shl
test
cmps
nop
sbb
jmp
xchg
dec
mov
push
xor
xchg
test
mov
xor
or
scas
ja
sbb
imul
aaa
mov
test
cli
out
mov
mov
or
dec
mov
test
push
ret
adc
arpl
or
icebp
mov
ins
lods
call
xor
cwde
xchg
imul
ds
xor
fincstp
or
fincstp
or
fincstp
fs
mov
aas
jle
mov
xchg
add
ror
popf
rcr
sbb
popa
cmp
pop
fwait
add
ficomp
aaa
xchg
fs
aas
daa
sar
test
pop
pusha
movups
out
xor
fsub
mov
adc
fnop
sub
(bad)
shr
cli
(bad)
shr
and
jmp
or
mov
cmp
jmp
or
mov
imul
mov
cmc
shl
pop
jns
lods
and
jmp
or
mov
fs
fldl2t
pop
retf
mov
or
pop
loopne
vaddsubps
cli
(bad)
rcr
es
shr
cli
(bad)
shr
cli
(bad)
shr
mov
jl
or
fcomp
mov
call
sub
(bad)
shr
cli
(bad)
sar
fdecstp
or
(bad)
shr
cli
(bad)
shr
cli
(bad)
and
ficomp
sub
(bad)
shr
cli
(bad)
sar
fdecstp
or
(bad)
shr
cli
(bad)
shr
cli
(bad)
shr
fisubr
mul
lahf
fild
or
mov
imul
cli
(bad)
shr
cli
(bad)
rcr
(bad)
fwait
or
fnop
sub
(bad)
shr
cli
(bad)
push
lea
pop
shr
cli
(bad)
shr
cli
(bad)
shr
outs
ins
icebp
stc
fdiv
out
out
sahf
mov
psubq
out
lahf
mov
fild
(bad)
shr
cli
(bad)
shr
cli
(bad)
ror
sub
sbb
sub
(bad)
shr
cli
(bad)
and
int
shr
cli
(bad)
shr
cli
(bad)
shr
cli
(bad)
jae
sub
call
rep
fistp
fist
mov
sub
adc
call
mov
cmp
adc
pop
imul
pop
xchg
mov
mov
neg
sbb
or
call
test
pop
jmp
mov
scas
ins
popa
ret
or
retf
pop
adc
mov
test
and
jge
fwait
cwde
test
sar
fnstcw
mov
movs
(bad)
sahf
jge
lahf
fisubr
mov
fwait
(bad)
data16
xchg
pop
or
pop
cmp
jge
test
cli
inc
into
outs
jo
adc
mov
test
adc
mov
dec
clc
inc
xor
jae
lods
test
jg
cli
or
mov
loope
mov
pop
ins
js
test
jns
test
jb
dec
sbb
sar
retf
in
push
scas
call
mov
push
outs
xchg
clc
mov
mov
dec
rol
or
or
push
cmps
mov
pop
add
pop
jns
(bad)
xchg
pop
sbb
sbb
je
pop
lea
jle
fst
cmp
pusha
or
or
xor
push
cmp
imul
fst
aaa
stc
sub
ja
cdq
call
add
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
(bad)
fbld
fbld
cmp
outs
jne
and
out
pop
jns
fild
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
test
fcomp
mov
ficomp
mov
loopne
mov
out
pop
mov
test
pop
pusha
test
mov
ficomp
mov
loopne
mov
out
pop
stos
test
pop
test
push
pop
loop
into
pop
mov
test
pop
xchg
les
test
fcomp
test
push
pop
pusha
test
mov
ficomp
mov
loopne
mov
into
pop
mov
test
pop
pusha
test
pop
stos
test
pop
and
int3
pop
test
push
pop
pusha
test
pop
les
fcomp
mov
mov
stos
test
pop
mov
out
pop
mov
test
test
push
pop
retf
pop
stos
test
pop
xchg
lods
pop
mov
aam
xchg
int3
pop
mov
inc
pop
test
in
pop
and
loop
stos
test
pop
mov
inc
pop
test
aam
xchg
ficomp
cmps
test
pop
pusha
test
pop
retf
pop
mov
ficomp
mov
loopne
mov
test
pop
test
push
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
mov
pop
mov
test
pop
repnz
pop
mov
les
cmps
test
pop
mov
jmp
test
pop
mov
test
pop
scas
test
pop
mov
push
pop
pusha
test
pop
pusha
test
pop
pusha
test
pop
test
mov
pop
xor
loopne
xchg
loop
test
jb
mov
fcomp
cmps
test
pop
add
pop
pusha
test
pop
mov
test
pop
mov
out
cmps
test
pop
pusha
test
retf
push
add
xchg
mov
jmp
cmp
and
inc
mov
push
lahf
pusha
mov
and
inc
or
syscall
push
retf
push
add
and
inc
mov
or
syscall
push
sbb
inc
mov
or
syscall
push
sbb
inc
mov
and
sub
sbb
enter
rcl
pusha
jnp
and
or
cmp
and
inc
mov
and
xchg
test
adc
mov
jbe
pusha
push
mov
loopne
clc
xor
hlt
mov
inc
mov
and
inc
mov
pop
add
adc
pusha
push
jmp
add
ja
pusha
mov
and
inc
mov
neg
jle
push
or
test
das
jp
push
imul
cmps
loope
arpl
pusha
mov
and
inc
mov
pop
pop
inc
mov
and
daa
xchg
jae
pusha
mov
and
inc
mov
inc
imul
(bad)
loope
fwait
push
iret
jo
xchg
mov
clc
xor
hlt
mov
inc
mov
and
inc
mov
jb
pusha
test
cmp
and
inc
mov
push
pop
mov
clc
xor
call
and
inc
mov
inc
dec
adc
pop
cmp
and
inc
mov
jp
adc
pop
cmp
and
inc
mov
idiv
inc
mov
and
inc
div
pusha
test
cmp
and
xchg
mov
icebp
xchg
cmp
xchg
inc
mov
and
inc
mov
pop
cmp
and
inc
mov
jae
pusha
mov
and
pusha
lea
pop
mov
clc
xor
call
and
inc
mov
jne
pusha
mov
and
inc
push
push
pop
pusha
test
pop
sahf
scas
adc
test
cmp
and
daa
jl
lahf
pusha
mov
and
inc
push
push
pop
pusha
test
pop
sahf
scas
adc
test
cmp
and
inc
mov
inc
push
adc
pop
cmp
and
inc
mov
and
pusha
lea
pop
mov
clc
xor
call
and
inc
mov
and
daa
jo
lahf
pusha
mov
and
inc
mov
push
pop
pusha
test
pop
sahf
scas
adc
test
cmp
and
inc
mov
ja
pusha
mov
and
inc
mov
push
pop
pusha
test
pop
sahf
scas
adc
test
cmp
and
daa
xor
mov
and
pusha
test
pop
pusha
mov
and
inc
mov
or
adc
pop
cmp
and
inc
mov
or
adc
ja
pusha
jnp
sbb
add
xchg
sahf
out
repnz
loopne
clc
je
cmc
xchg
mov
clc
xor
hlt
mov
inc
mov
and
inc
mov
xchg
pusha
lea
pop
inc
mov
and
inc
mov
adc
test
pop
pusha
test
cmp
and
inc
mov
xchg
rcl
loopne
clc
je
hlt
xchg
mov
ja
pusha
jnp
jecxz
add
jbe
pusha
push
pop
loope
jmp
xchg
pusha
mov
and
inc
push
add
lahf
pusha
and
repnz
loopne
rcr
sahf
scas
sub
test
cmp
and
inc
mov
rcr
loopne
cmps
retf
data16
jecxz
add
sub
adc
pop
cmp
and
inc
jp
jmp
add
imul
mov
ins
jecxz
add
imul
mov
ins
sti
adc
imul
inc
jp
repz
imul
inc
mov
push
pop
pusha
test
pop
sahf
scas
adc
test
cmp
and
inc
mov
ja
pusha
mov
and
mov
lahf
pusha
xchg
sti
cmp
and
inc
mov
jnp
jle
js
pusha
test
mov
test
test
xchg
rcr
mov
fdiv
xchg
rcl
mov
clc
xor
test
cmp
and
fild
mov
pusha
test
mov
fwait
push
and
or
cmp
and
inc
mov
and
inc
stos
mov
ins
hlt
xchg
pusha
lea
pop
inc
mov
mov
hlt
xchg
pusha
lea
pop
inc
mov
and
jnp
sbb
test
pop
sahf
out
add
test
adc
add
ja
pusha
jnp
retf
pusha
jnp
jno
or
cmp
and
inc
mov
(bad)
mov
jge
cs
test
cmp
and
inc
xchg
ins
cmp
add
and
inc
mov
xchg
inc
mov
and
inc
mov
in
sbb
push
and
test
sbb
push
push
loope
retf
jne
pusha
mov
and
inc
mov
(bad)
push
adc
pop
loope
jnp
pop
adc
pop
loope
or
pusha
mov
and
inc
inc
(bad)
iret
mov
xchg
sahf
call
mov
inc
mov
and
inc
mov
xchg
inc
mov
add
(bad)
fbld
sbb
push
outs
mov
popf
(bad)
pop
cmc
push
or
bound
repz
jge
jne
in
jg
xchg
ins
cmp
add
and
inc
mov
jne
pusha
mov
and
inc
test
pusha
test
cmp
and
inc
mov
loopne
lahf
out
out
ins
loopne
clc
xor
jmp
pop
inc
mov
and
inc
mov
sbb
sbb
xchg
jbe
and
inc
mov
and
inc
mov
push
fbstp
push
retf
sub
pop
sahf
scas
sub
test
cmp
and
inc
mov
mov
jbe
and
inc
mov
add
ins
or
in
adc
mov
repz
adc
cli
loopne
inc
clc
je
test
in
test
cmp
and
inc
mov
add
inc
mov
and
inc
cmp
xchg
add
lahf
jp
je
hlt
xchg
sahf
scas
sub
test
cmp
and
inc
mov
and
test
xor
call
and
inc
mov
enter
and
inc
mov
and
mov
je
pusha
and
mov
inc
mov
and
mov
je
pusha
push
fisubr
rcr
sahf
scas
push
cmp
and
inc
mov
xchg
inc
mov
and
inc
mov
adc
inc
mov
and
inc
mov
push
mul
repz
adc
rcr
rcl
dec
jecxz
xchg
pusha
mov
and
inc
mov
add
xor
pop
mov
xchg
sahf
scas
pop
ins
in
test
cmp
and
inc
mov
inc
push
adc
pop
cmp
and
inc
mov
xchg
inc
mov
and
inc
mov
fisubr
test
pop
bound
and
cdq
clc
jmp
mov
and
inc
mov
xchg
inc
mov
je
pusha
test
cmp
and
inc
bound
ja
imul
and
inc
mov
and
ja
push
imul
and
inc
mov
adc
lea
pop
inc
mov
and
inc
mov
dec
into
push
push
jb
pusha
push
pop
loope
jne
lahf
pusha
push
push
loope
mov
xchg
pusha
mov
and
inc
mov
xchg
sahf
out
push
imul
(bad)
push
test
cmp
and
inc
mov
(bad)
pop
adc
push
iret
mov
add
pusha
jnp
pop
adc
pop
retf
pusha
jnp
sub
or
cmp
and
inc
mov
add
arpl
pop
xchg
test
inc
mov
imul
imul
lahf
pusha
mov
and
pusha
xchg
pop
pusha
mov
and
pusha
xchg
sbb
inc
mov
or
adc
scas
jo
test
loope
mov
and
inc
mov
and
outs
xchg
pop
mov
nop
ins
out
add
imul
mov
and
inc
jl
je
test
inc
mov
(bad)
ins
loopne
and
inc
mov
je
push
mov
dec
out
(bad)
(bad)
ins
loopne
and
inc
mov
add
pusha
outs
call
pop
inc
mov
and
adc
pop
pop
pusha
mov
and
sub
imul
and
inc
mov
and
inc
mov
pop
cmp
and
inc
mov
and
xchg
inc
mov
and
inc
mov
pop
cmp
and
inc
mov
imul
inc
mov
or
adc
pop
cmp
and
inc
mov
jbe
pusha
xchg
pop
pusha
mov
and
inc
mov
or
adc
out
jo
test
loope
mov
and
inc
mov
jb
pusha
xchg
pop
pusha
mov
and
inc
mov
push
imul
(bad)
ret
adc
push
iret
add
ins
loopne
rcr
sahf
scas
xor
test
cmp
and
inc
mov
loop
loopne
stc
loopne
jp
cmp
and
inc
mov
push
iret
test
xchg
mov
add
pusha
jnp
out
adc
sub
adc
pop
cmp
and
inc
mov
and
std
jne
pusha
xchg
sti
cmp
and
inc
mov
in
push
mov
test
pusha
jnp
xor
or
cmp
and
inc
inc
add
inc
mov
jp
mov
lahf
nop
imul
pusha
jmp
das
pusha
fwait
gs
leave
push
pusha
out
xchg
or
push
jge
jg
lahf
pusha
push
and
jbe
add
xor
js
xchg
outs
add
imul
mov
jg
imul
cdq
and
inc
cmp
outs
cdq
les
jg
imul
xchg
imul
mov
or
clc
mov
call
retf
mov
icebp
rcr
iret
retf
pop
retf
or
mov
pop
pop
jle
mov
shl
loopne
(bad)
jle
mov
ret
cwde
test
sti
adc
jo
jb
icebp
sbb
inc
mov
jg
jg
test
pop
xchg
js
test
call
clc
mov
ja
outs
dec
sub
mov
sbb
mov
or
adc
ret
lods
cmp
xchg
add
sbb
pop
ror
pop
add
xor
pusha
or
lea
sbb
push
ret
repnz
mov
cmp
rcr
mov
mov
dec
xor
xor
retf
inc
or
test
cld
xchg
xor
mov
mov
sbb
cmp
xchg
or
loop
jae
or
and
dec
dec
pop
cmp
popf
jge
out
push
je
(bad)
mov
shl
and
xor
mov
fldcw
jb
fldcw
cmp
aaa
jbe
push
or
inc
aas
inc
adc
test
(bad)
mov
dec
xchg
dec
pop
dec
mov
les
pusha
test
add
rcr
mov
test
pusha
aas
dec
pushf
ret
jb
pop
dec
xchg
dec
mov
push
jmp
shl
ins
int3
pushf
inc
sub
jb
xor
or
jns
xchg
inc
aaa
jbe
push
retf
sub
test
(bad)
mov
fadd
mov
mov
sbb
fldcw
fs
inc
mov
jp
inc
test
or
or
ins
adc
mov
adc
sbb
dec
pop
dec
mov
inc
aas
inc
adc
test
inc
mov
dec
jb
sbb
dec
pop
dec
mov
pusha
aas
dec
pushf
jl
pusha
adc
adc
sbb
sub
lods
js
test
push
adc
push
(bad)
fxch
push
rcr
mov
mov
cmp
pop
bound
pop
jbe
mov
sub
mov
add
outs
pop
jbe
sbb
mov
adc
into
stos
les
into
stos
test
dec
aas
inc
mov
pop
test
jo
js
push
sbb
dec
fnstcw
add
test
sar
adc
mov
pusha
mov
(bad)
inc
adc
add
jo
push
fxch
push
les
fs
fs
mov
je
jbe
mov
xor
(bad)
pop
bound
dec
adc
or
pusha
aas
test
jo
mov
dec
lods
adc
aas
jbe
adc
xor
mov
sbb
sbb
mov
adc
pop
outs
movs
push
pop
dec
mov
pusha
cmp
push
push
bound
adc
push
adc
mov
inc
aas
js
jp
test
shl
dec
xchg
push
add
push
adc
mov
mov
dec
mov
pusha
pop
data16
pusha
cmp
test
jo
inc
mov
jp
jp
js
pusha
mov
add
mov
adc
mov
mov
js
push
mov
push
into
fnstcw
jp
jbe
pusha
add
push
test
inc
sbb
fldcw
adc
mov
adc
mov
xor
inc
(bad)
push
sub
stos
push
add
data16
mov
or
mov
adc
xor
push
cmp
bound
sbb
jl
test
dec
pop
jle
inc
fldcw
inc
xor
mov
fnstenv
inc
add
mov
or
mov
mov
jo
push
adc
push
xor
mov
aas
bound
inc
or
mov
sbb
adc
js
je
mov
pop
inc
jb
or
jl
test
inc
adc
(bad)
pusha
cmp
jbe
popw
pop
jb
sbb
inc
pop
test
jle
js
jle
test
pusha
xor
fldenv
pop
jbe
mov
adc
dec
fldcw
add
mov
sbb
sbb
inc
pop
je
inc
xor
adc
call
bound
pusha
sbb
pusha
fld
ins
adc
add
ins
sbb
pop
dec
xchg
or
js
outs
movs
push
xor
jle
fs
jbe
jo
test
pusha
aas
outs
mov
fnstcw
xor
mov
mov
push
dec
xor
and
test
pusha
add
dec
or
inc
sbb
adc
inc
xor
jp
dec
xchg
mov
cmp
inc
add
test
jl
jb
inc
fld
pusha
xor
push
adc
jle
dec
test
punpckldq
push
adc
jl
push
fs
inc
mov
sub
push
aas
test
jb
outs
movs
push
pop
jle
add
je
pop
and
mov
aas
bound
add
test
push
or
mov
inc
adc
inc
adc
xchg
inc
sbb
mov
fldcw
sbb
jbe
outs
adc
or
jb
jl
jb
je
mov
adc
mov
sub
jbe
jb
inc
(bad)
pusha
sub
mov
mov
adc
cmp
jbe
sub
stos
push
add
jp
dec
adc
xor
mov
jo
bound
cmp
test
push
fldcw
aaa
jl
data16
sbb
add
inc
xor
mov
cmp
jp
push
add
inc
(bad)
sbb
je
push
cmp
dec
jb
cmp
je
inc
xor
push
add
jl
jb
test
pusha
add
pusha
fldenv
pusha
sbb
js
jo
test
jl
inc
lods
jle
inc
mov
js
dec
mov
pusha
add
test
jb
outs
mov
pop
test
pusha
add
test
jo
inc
mov
ins
xor
inc
fldcw
add
pusha
pushf
pusha
cmp
jp
push
pop
dec
scas
mov
pop
pop
jb
cmp
je
test
jp
inc
test
fldcw
adc
push
test
jl
je
jl
test
jb
dec
call
pusha
lods
jle
jb
push
jp
jb
test
jo
js
jle
test
jp
bound
mov
test
pusha
add
dec
stos
pusha
sub
mov
mov
dec
mov
or
mov
adc
inc
adc
jl
test
jb
retf
test
fs
sbb
adc
sbb
pop
dec
lods
mov
sbb
jo
dec
adc
cmp
jo
js
inc
mov
jo
inc
lods
inc
or
int3
mov
sbb
mov
jb
add
jl
inc
cmp
mov
adc
mov
push
aas
inc
mov
fldenv
jp
bound
dec
or
push
inc
mov
mov
xor
jbe
outs
movs
mov
add
inc
xchg
inc
or
pusha
add
test
inc
or
fldcw
js
dec
lods
jle
data16
js
pusha
mov
dec
or
jl
test
pusha
cmp
js
jl
bound
jp
jp
mov
xor
fldcw
inc
xor
jle
jb
push
jbe
mov
or
sbb
dec
jb
pop
jbe
push
pop
bound
jp
test
pusha
xor
(bad)
punpckldq
outs
sbb
xor
js
je
push
je
jo
test
jo
bound
outs
add
push
cmp
test
inc
adc
mov
or
js
fs
dec
cmp
dec
lods
inc
or
mov
adc
push
aas
jle
jle
test
jl
jbe
pusha
fnstcw
pop
je
inc
or
inc
sbb
call
ins
mov
pusha
add
push
je
dec
xchg
mov
pop
dec
movs
mov
add
sbb
push
sbb
retf
mov
inc
mov
pusha
add
inc
scas
jo
bound
jle
push
jle
outs
lods
jl
bound
dec
adc
xor
push
add
push
(bad)
scas
ins
(bad)
jl
jp
mov
sub
mov
into
mov
adc
stos
test
push
xor
jo
test
pusha
xor
inc
fld
adc
mov
jle
outs
adc
int3
push
(bad)
(bad)
jo
js
pusha
adc
mov
fnstenv
jle
outs
mov
adc
js
dec
adc
mov
sub
jb
adc
jle
test
jl
bound
pusha
adc
int3
mov
sbb
mov
adc
adc
jb
sbb
pusha
add
inc
lods
inc
fldenv
cmp
fadd
shr
test
jo
js
jp
dec
jb
pop
dec
mov
js
inc
mov
add
mov
sbb
jbe
dec
pop
dec
jb
pop
jb
pusha
xor
mov
dec
xor
push
inc
mov
cmp
dec
mov
inc
fldenv
or
mov
push
or
mov
sbb
test
pusha
or
aaa
test
jl
dec
mov
ins
xor
cmp
les
retf
xchg
push
sbb
push
or
cmp
push
pop
jle
(bad)
mov
int3
adc
fldcw
sbb
jp
test
pusha
xor
pusha
lods
jp
js
jle
inc
mov
ins
fldcw
adc
adc
fnstenv
js
bound
dec
or
pop
jbe
jl
test
int3
mov
jb
sbb
jl
test
jp
pop
jb
or
sbb
jp
jbe
dec
adc
push
add
inc
fldcw
xor
jbe
pusha
pop
bound
push
cmp
jbe
jle
bound
xor
(bad)
mov
outs
lods
inc
cmp
mov
fldcw
inc
add
jbe
je
dec
or
mov
cmp
inc
sub
push
pop
inc
call
into
jb
pop
inc
mov
pusha
xor
jbe
push
je
inc
xor
mov
adc
sbb
pusha
aas
dec
jb
add
inc
aas
test
jl
ins
xchg
mov
sub
int3
adc
mov
inc
mov
inc
cmp
jle
dec
mov
pusha
fldenv
ins
pop
jp
mov
add
fcom
(bad)
fstp
jle
bound
push
adc
or
mov
adc
or
jb
dec
jb
or
adc
sbb
(bad)
inc
punpckldq
ins
xor
adc
push
adc
adc
or
inc
fldcw
jo
push
mov
fldcw
sbb
rcr
fldcw
dec
or
mov
(bad)
jo
push
push
sub
test
jl
push
push
inc
mov
js
test
jo
bound
inc
or
dec
pop
jb
push
inc
mov
je
push
ins
xor
mov
sub
jb
cmp
dec
stos
pusha
xor
dec
add
jb
cmp
test
inc
sbb
cmp
jp
jb
inc
push
mov
dec
mov
dec
mov
jp
pop
jb
xor
jb
inc
jb
sbb
adc
mov
pop
inc
jb
xor
add
dec
add
sbb
cmp
inc
jb
add
xor
push
shl
inc
call
pusha
mov
mov
dec
mov
ins
add
mov
or
mov
sbb
retf
fnstcw
aas
jp
mov
adc
jb
mov
test
jb
inc
and
js
dec
fnstcw
inc
add
js
dec
adc
mov
aas
test
dec
cmp
je
inc
aas
push
mov
stos
fidiv
or
cmp
push
dec
cmp
bound
mov
or
or
mov
pop
je
pusha
adc
pusha
aas
test
dec
adc
punpckldq
les
dec
stos
jl
bound
je
dec
jb
pop
jo
adc
xchg
dec
or
adc
js
bound
jbe
jb
jle
inc
lods
jp
test
dec
adc
mov
pop
outs
movs
mov
fnstenv
jp
je
mov
pshufw
vmread
push
fldcw
jo
jle
dec
(bad)
pusha
cmp
push
jo
data16
adc
push
adc
inc
sub
xchg
mov
aas
test
inc
adc
inc
(bad)
aaa
jp
ins
aas
test
ret
jb
adc
or
mov
js
data16
dec
add
mov
int3
mov
sbb
mov
jp
jo
pop
jb
pop
je
push
pop
jp
pusha
add
test
add
jo
pusha
fxch
adc
mov
inc
mov
inc
fxch
push
les
ins
mov
aas
dec
mov
xor
add
je
inc
call
jp
mov
adc
and
bound
jp
jbe
mov
sbb
xor
dec
mov
push
sbb
pop
adc
cwde
js
jle
jle
jo
dec
or
mov
mov
je
dec
sbb
data16
push
(bad)
punpckldq
push
data16
mov
add
mov
sbb
mov
or
sbb
jo
test
pusha
cmp
outs
mov
mov
aas
js
mov
test
jp
push
sbb
fnstcw
dec
cmp
bound
mov
sbb
(bad)
adc
mov
adc
mov
adc
add
jb
ins
mov
je
outs
mov
add
mov
adc
inc
(bad)
jo
jle
jl
test
push
mov
jle
js
bound
inc
mov
bound
fldenv
dec
add
inc
(bad)
js
bound
jle
bound
push
add
test
pusha
sbb
js
dec
mov
js
pop
jb
cmp
adc
sbb
or
pop
dec
mov
push
add
mov
cmp
fs
jo
push
mov
pop
outs
movs
inc
(bad)
cvtps2pd
pop
jbe
push
pop
inc
call
bound
add
mov
adc
inc
mov
or
mov
jl
dec
mov
jle
test
dec
aas
dec
mov
pusha
cmp
dec
jb
mov
sbb
cmp
mov
or
mov
pop
js
je
dec
mov
adc
mov
or
dec
sbb
aas
push
jle
inc
mov
inc
sbb
sbb
pop
je
pusha
fldenv
dec
pop
jo
inc
fldcw
push
mov
push
into
fnstenv
dec
xor
call
pop
adc
add
adc
jb
dec
lods
jl
ins
mov
jo
dec
stos
push
mov
rcr
fldcw
sbb
mov
or
adc
jo
bound
sbb
fld
or
fnstenv
push
sbb
add
pusha
add
push
inc
or
sbb
js
je
jle
je
push
or
pusha
cmp
inc
mov
jl
test
jo
bound
mov
test
jl
bound
jl
inc
lods
adc
sub
push
fnstenv
pusha
xor
inc
fldcw
xor
push
retf
mov
jbe
jle
test
push
xor
adc
jb
or
add
dec
xchg
push
mov
jb
jo
test
pusha
pop
dec
lods
inc
aas
bound
cmp
je
test
js
inc
mov
jp
dec
movs
pusha
fldcw
pop
bound
pusha
adc
push
sub
adc
jb
cmp
inc
mov
inc
xor
push
sbb
jle
test
jl
push
dec
(bad)
jo
mov
jl
jb
jle
push
push
dec
xchg
jl
test
inc
or
fs
inc
mov
jb
dec
lods
je
bound
pop
je
mov
sbb
mov
adc
mov
jb
jp
test
jl
dec
mov
push
or
push
sbb
xchg
jl
test
pusha
or
inc
fldenv
jl
dec
xchg
pusha
cmp
xchg
mov
mov
mov
add
push
test
push
pop
js
jl
test
jl
bound
inc
aas
js
jp
test
push
sub
push
dec
aas
pop
jb
sbb
or
adc
jo
jle
ins
lods
jl
pop
jb
add
dec
xchg
mov
or
js
jo
push
fnstenv
cmp
inc
fldcw
dec
cmp
test
jo
dec
mov
cmovle
sbb
push
fld
inc
xor
push
test
dec
sub
bound
mov
or
mov
adc
sbb
push
pop
js
inc
sub
movs
jo
test
push
fldenv
dec
or
pusha
add
pusha
(bad)
js
dec
lods
jle
dec
cwde
fs
mov
inc
or
pusha
fxch
sbb
mov
jbe
js
test
jo
push
push
cmp
outs
or
cwde
inc
adc
adc
dec
add
call
push
jo
test
dec
or
fldenv
sbb
mov
aas
test
pusha
add
ins
mov
sub
inc
add
lods
inc
fld
jle
jbe
inc
(bad)
jo
jp
mov
adc
or
inc
xor
mov
xor
inc
sbb
jb
dec
jb
pop
je
pusha
sub
call
dec
call
test
push
add
jo
push
fxch
adc
mov
jo
inc
or
test
aas
test
jl
ins
and
bound
cmp
pop
jb
or
jl
test
jl
bound
jo
bound
jb
jb
jo
je
inc
pop
fs
jp
pusha
cmp
pusha
mov
push
aas
inc
mov
cmp
add
dec
pop
je
popw
jbe
jo
test
jle
jbe
mov
sub
jb
add
inc
adc
mov
jo
jbe
jb
test
pusha
cmp
test
push
xor
push
dec
call
bound
push
push
inc
(bad)
js
test
pusha
cmp
inc
mov
sbb
mov
fs
push
les
pusha
mov
inc
pop
je
pusha
add
bound
ins
cmp
inc
lods
jp
bound
push
adc
cmp
dec
jb
xor
jo
bound
pop
ins
mov
aas
test
inc
xor
dec
fldcw
cmp
bound
inc
adc
jp
push
mov
adc
adc
cmp
fiadd
mov
add
jbe
je
test
jo
jb
jle
dec
mov
pop
push
mov
add
jb
jle
inc
lods
jle
test
jo
inc
xchg
push
sbb
test
pusha
punpckldq
je
ins
lods
jl
ins
cwde
push
jp
jb
test
jp
inc
xchg
mov
xor
push
cmp
inc
mov
pop
push
push
adc
push
xor
jle
test
jl
ins
mov
jo
jb
jle
test
dec
punpckldq
or
pusha
add
dec
call
inc
stos
pusha
add
ins
mov
inc
add
jbe
inc
xor
mov
adc
js
jbe
jo
test
pusha
add
inc
scas
dec
or
aas
inc
lods
inc
adc
fldenv
jle
push
mov
or
add
je
fcom
mov
(bad)
js
inc
scas
ins
fldcw
jo
jp
mov
sbb
jb
or
add
js
inc
adc
xchg
pusha
add
xchg
jl
inc
jb
sbb
pusha
sbb
mov
or
jp
ins
mov
pusha
cmp
push
jbe
dec
cwde
inc
fldcw
adc
lods
inc
xor
xchg
push
cmp
dec
lods
jp
inc
mov
pusha
add
mov
sub
jb
sbb
inc
adc
push
retf
lods
js
push
mov
adc
push
mov
test
dec
add
jl
dec
jb
add
inc
or
inc
pop
jbe
jl
test
fs
jbe
push
inc
cwde
inc
punpckldq
fs
dec
scas
mov
sub
xchg
mov
sub
scas
jo
test
jo
bound
mov
adc
adc
fldenv
push
fldenv
adc
fldenv
push
fldcw
inc
cmp
dec
and
jle
jb
inc
or
ins
sbb
adc
xor
add
inc
mov
inc
pop
je
jo
outs
jb
pop
je
jl
test
pusha
xor
mov
add
inc
pop
jo
jle
test
dec
add
jle
test
jo
outs
mov
jp
je
jl
je
pusha
cmp
test
inc
adc
jle
test
inc
or
inc
add
inc
sbb
jo
inc
xchg
mov
xor
push
inc
mov
dec
pop
bound
inc
or
pop
push
push
je
jp
ins
xchg
jl
je
pusha
aas
pusha
mov
jl
data16
pop
jb
aaa
bound
jo
jle
enter
rcr
mov
inc
adc
jp
test
jb
ins
mov
punpckhdq
fldcw
jl
dec
mov
pusha
add
mov
sub
mov
push
add
bound
add
pusha
fldcw
pusha
add
mov
pusha
punpckldq
adc
mov
mov
adc
dec
nop
inc
cmp
mov
add
push
xor
fldcw
pusha
add
mov
sub
mov
xor
mov
dec
pop
push
mov
pop
push
mov
add
dec
mov
push
sbb
int3
adc
mov
jb
cmp
test
pusha
aaa
dec
mov
dec
pop
jo
inc
sbb
mov
adc
cmp
push
mov
or
jle
dec
mov
add
push
ins
mov
sbb
jo
inc
aas
push
dec
or
inc
mov
inc
test
add
outs
movs
inc
fld
jl
pop
jb
pop
inc
mov
pusha
xor
push
dec
pop
dec
jb
stos
les
mov
pop
bound
xor
ins
cmp
js
jl
bound
js
pop
jb
xor
inc
fld
add
mov
push
mov
xor
mov
xor
jbe
dec
xchg
push
fldenv
inc
pop
jp
mov
aas
jbe
inc
fnstenv
jl
jp
ins
(bad)
add
jbe
jo
test
jo
js
inc
fnstcw
jle
dec
mov
jb
js
mov
sbb
sbb
inc
pop
je
inc
adc
pop
inc
jb
cmp
push
or
aas
dec
mov
inc
(bad)
inc
xor
int3
sbb
mov
sbb
cmp
inc
mov
pusha
xor
mov
pop
je
inc
or
adc
jb
or
pusha
pop
test
push
sbb
sub
mov
xor
mov
sub
xchg
mov
adc
inc
sbb
jl
test
pusha
xor
fld
jp
bound
or
inc
(bad)
inc
aas
pop
mov
xor
mov
jb
jp
rcr
call
push
pusha
add
bound
adc
add
outs
movs
push
fnstenv
inc
or
cmp
push
dec
sbb
adc
mov
adc
pop
je
jo
test
push
aas
inc
jb
sbb
jb
int3
jb
pop
jo
ins
sbb
add
dec
cmp
dec
xchg
mov
sbb
rcr
cwde
jo
bound
or
push
add
mov
mov
jb
add
pusha
mov
jbe
push
sbb
jb
inc
movs
push
cmp
test
pusha
(bad)
xchg
dec
sbb
pop
pusha
mov
inc
sub
or
js
outs
mov
dec
adc
dec
sbb
mov
push
pop
inc
mov
inc
adc
scas
pusha
fnstcw
inc
pop
inc
stos
push
xor
jo
retf
adc
jo
outs
lods
jle
dec
lods
jp
ins
mov
pop
test
jle
jp
push
mov
push
int3
test
int3
sbb
mov
jb
sbb
(bad)
aaa
dec
and
bound
aaa
bound
(bad)
fld
inc
pop
bound
pusha
aas
pusha
mov
jp
fs
jo
je
inc
xor
mov
xor
jo
dec
jb
adc
push
sbb
jb
je
ret
jb
sbb
pusha
fldenv
jb
pop
mov
inc
sbb
sub
push
(bad)
(bad)
add
mov
sbb
mov
dec
test
add
jb
js
jp
jbe
(bad)
mov
retf
(bad)
adc
mov
into
sbb
bound
retf
sbb
aas
test
inc
adc
push
retf
mov
push
pusha
sbb
adc
mov
jo
je
test
shl
mov
je
jp
jb
push
ins
pop
jbe
jp
test
jl
retf
fldenv
push
cmp
jle
pop
jb
cmp
push
fld
jl
bound
(bad)
mov
shl
(bad)
push
enter
rcr
retf
sub
test
pusha
aas
dec
pushf
jl
pusha
adc
mov
dec
mov
les
je
push
adc
js
retf
mov
retf
pop
js
fs
jo
dec
adc
xchg
push
adc
mov
add
mov
mov
jp
jl
bound
dec
sbb
push
fldcw
push
int3
adc
sub
adc
mov
mov
mov
jp
push
je
inc
or
add
inc
mov
jo
push
sbb
cmp
outs
mov
mov
adc
pusha
add
inc
pop
outs
movs
inc
xor
mov
mov
mov
add
pusha
add
sbb
push
les
jp
jp
test
shr
into
push
rcr
pushf
jo
jp
jb
test
js
push
inc
sbb
push
pop
adc
fnstenv
xor
mov
or
inc
aaa
bound
les
inc
lods
inc
adc
or
mov
jp
jbe
push
or
fs
dec
pushf
push
aas
push
inc
sbb
pusha
sbb
data16
jbe
dec
call
inc
mov
pusha
add
inc
mov
(bad)
mov
ret
mov
mov
fnstcw
add
pusha
adc
outs
sbb
jo
je
jp
jo
jp
test
push
sbb
ret
mov
jb
add
add
mov
aaa
bound
jle
jp
sar
sbb
mov
call
shl
into
sbb
mov
jbe
jp
jo
js
jo
dec
adc
sbb
mov
add
fnstcw
js
inc
call
inc
call
ret
mov
dec
stos
pusha
sub
add
call
dec
mov
inc
fnstenv
jb
jb
pusha
adc
sbb
mov
outs
mov
jo
je
dec
adc
jl
bound
mov
aas
pusha
xchg
test
(bad)
mov
int3
jb
mov
outs
mov
push
sbb
xor
sbb
mov
retf
mov
jb
adc
inc
mov
dec
mov
adc
jp
inc
mov
mov
mov
(bad)
sbb
test
into
jb
pop
inc
mov
dec
or
cmp
test
push
jp
sar
mov
rcr
jb
or
jl
jbe
dec
(bad)
jo
push
pusha
(bad)
enter
inc
adc
adc
mov
rcr
mov
bound
dec
xor
jb
je
js
je
push
adc
mov
sbb
les
sbb
inc
sbb
dec
pushf
push
cmp
(bad)
push
enter
inc
or
push
js
inc
(bad)
or
mov
xor
into
jb
sbb
dec
aas
pop
jb
cmp
pushf
les
rcl
pop
retf
mov
push
mov
pop
jb
mov
sbb
or
xchg
jb
jle
shr
fiadd
rcr
pop
mov
retf
add
aaa
bound
inc
or
jle
push
pusha
xor
inc
sbb
pusha
fnstcw
adc
aas
test
pusha
add
jl
je
pusha
(bad)
push
sbb
jo
je
xor
jle
dec
xchg
mov
mov
sbb
stos
test
popw
retf
mov
jb
sbb
dec
pop
dec
mov
jl
jo
fs
adc
mov
enter
dec
mov
jo
je
inc
cmp
inc
xchg
mov
mov
sbb
stos
retf
cmp
ins
adc
fnstenv
jle
jle
mov
bswap
push
(bad)
(bad)
jle
jo
dec
adc
sbb
jb
jp
inc
sbb
dec
pop
dec
mov
jl
jo
inc
pop
dec
jb
xor
jo
pop
adc
mov
data16
pop
dec
mov
push
outs
mov
dec
cmp
je
jp
jbe
sar
mov
inc
fldcw
sbb
bound
dec
pop
dec
jb
or
push
xor
jl
push
inc
xor
sbb
test
inc
sbb
add
rcr
mov
pop
sar
aas
pop
jb
sbb
pop
je
fnstenv
inc
pop
jp
mov
pop
dec
jb
sbb
jle
jle
mov
mov
pusha
cwde
inc
sbb
inc
sbb
scas
ins
fldcw
pusha
cmp
bound
adc
inc
pop
js
jo
inc
jb
pop
jb
sar
sbb
mov
jb
mov
rcr
mov
test
pop
js
jp
outs
mov
push
pop
jo
dec
adc
pusha
mov
les
add
jl
retf
fld
push
pop
push
push
pop
js
adc
pop
jbe
je
bound
cmp
ins
fldcw
jo
pop
mov
aas
inc
scas
jle
test
push
cmp
inc
aaa
jbe
push
ins
stos
push
fldenv
push
sub
pushf
ret
jb
sbb
push
or
js
pusha
jb
pop
jb
dec
or
ins
fld
sbb
mov
add
adc
js
pusha
lods
jle
push
jo
jbe
dec
pcmpeqb
pop
dec
mov
xor
adc
mov
inc
mov
rcr
scas
dec
sub
jb
test
pusha
cmp
inc
call
jle
inc
fld
inc
adc
inc
aas
test
pusha
sub
retf
mov
push
mov
sbb
fld
jp
bound
jo
push
push
(bad)
scas
ins
pcmpeqd
je
outs
mov
push
ins
cwde
ins
fxch
adc
mov
enter
enter
dec
lods
pusha
adc
push
fnstenv
jle
inc
mov
(bad)
mov
outs
movs
push
pop
inc
push
mov
adc
sbb
push
fxch
push
sar
movs
jo
push
inc
aaa
push
push
sub
xchg
ins
pop
jbe
mov
aas
js
jb
je
inc
pop
jb
mov
add
inc
sbb
inc
or
dec
cmp
add
jp
test
rcr
lods
jp
mov
inc
adc
add
mov
jl
bound
outs
cmp
inc
mov
jl
bound
(bad)
mov
test
jle
bound
inc
fld
push
pop
mov
sbb
cvtps2pd
retf
adc
mov
mov
mov
push
mov
pop
retf
mov
mov
jp
inc
mov
shl
mov
pusha
xor
xchg
inc
aaa
jbe
push
dec
pushf
push
adc
jp
jo
pop
jb
or
add
js
jle
jb
jle
js
inc
cmp
push
sbb
adc
js
dec
mov
cmp
mov
add
push
ins
adc
jle
test
pusha
xor
js
outs
cmp
jb
mov
mov
jp
push
pop
inc
call
dec
mov
je
dec
nop
dec
aaa
retf
mov
push
jo
dec
jb
sbb
adc
sar
sbb
mov
mov
sbb
inc
(bad)
jle
push
jl
bound
mov
mov
mov
jb
jb
ins
mov
jle
js
jle
retf
add
jle
bound
or
push
bound
jl
je
jl
pusha
jb
sbb
dec
pop
dec
mov
jl
jp
push
or
inc
(bad)
jo
inc
stos
push
aas
dec
mov
inc
aaa
bound
inc
sbb
or
mov
add
pusha
fstp
jl
into
push
ret
sbb
test
jbe
push
mov
fcom
(bad)
(bad)
push
sbb
sbb
jo
dec
xchg
nop
shl
mov
enter
fs
jo
inc
fnstenv
jl
jbe
mov
pop
inc
mov
pusha
add
inc
pop
fs
ret
mov
sbb
fnstenv
sbb
mov
or
rcr
mov
jo
inc
jb
xor
jb
je
push
cmp
inc
jb
mov
sbb
mov
sbb
stos
fiadd
shr
jp
jl
bound
mov
mov
jb
mov
outs
call
jp
jl
je
push
dec
mov
mov
add
pusha
(bad)
jle
push
inc
add
pusha
add
pusha
add
inc
mov
adc
inc
xor
stos
jo
test
pusha
cmp
je
mov
adc
mov
add
mov
rcr
mov
jb
aaa
bound
ins
cmp
push
rcr
mov
or
mov
adc
push
adc
inc
sbb
call
push
xor
jle
inc
mov
adc
add
pusha
xchg
test
jle
inc
mov
sub
dec
mov
fldcw
inc
or
jo
bound
mov
sbb
mov
js
jle
outs
mov
(bad)
jo
outs
mov
inc
xor
inc
add
rcr
mov
push
test
jb
jp
dec
pop
dec
mov
jl
js
pusha
fnstenv
ins
pop
jo
inc
(bad)
inc
aas
inc
adc
test
pusha
cmp
test
inc
adc
mov
jo
outs
adc
call
jbe
push
sbb
xchg
jb
dec
mov
inc
(bad)
adc
mov
sbb
mov
adc
cmp
jl
push
ret
adc
fldenv
pusha
pop
jbe
sbb
mov
adc
fnstenv
dec
adc
outs
adc
mov
(bad)
mov
jl
inc
xor
jo
test
enter
into
(bad)
push
mov
ret
fnstenv
je
dec
xchg
mov
jb
adc
dec
mov
je
dec
adc
add
or
mov
adc
push
(bad)
fxch
nop
pusha
sub
pop
adc
aas
push
pusha
add
fs
cvtps2pd
mov
rcl
pop
push
adc
mov
sbb
mov
movs
pusha
pop
dec
mov
ins
adc
mov
adc
cmp
push
fld
jo
bound
jo
inc
and
dec
aaa
jp
je
bound
or
ins
adc
cmps
js
dec
cwde
inc
adc
mov
pop
dec
mov
aaa
jp
jle
bound
pop
inc
stos
jl
test
jb
je
dec
(bad)
inc
punpckhdq
dec
pop
retf
mov
push
mov
cmp
bound
jbe
js
les
jo
dec
sbb
mov
or
jo
jp
je
inc
xchg
mov
adc
mov
retf
mov
jb
mov
test
jo
je
jo
data16
or
xor
pusha
fldcw
inc
xor
push
jb
inc
cmp
js
pusha
sbb
inc
jb
pop
dec
mov
add
mov
adc
xor
push
mov
add
mov
adc
push
pop
lods
push
pop
pop
lods
mov
pop
inc
xchg
push
fldcw
inc
cmp
je
inc
punpckhdq
inc
sbb
jle
test
push
adc
pusha
sbb
dec
cwde
push
fstp
add
mov
cmp
jo
inc
aas
bound
jl
push
push
test
pusha
adc
push
or
mov
cmp
mov
or
push
fldcw
xor
xor
ins
pop
pusha
mov
inc
fnstcw
inc
xor
je
dec
lods
pcmpeqd
jo
push
push
add
inc
adc
add
push
inc
or
push
sub
mov
sbb
jb
js
jb
je
dec
xchg
js
test
js
jp
mov
or
jl
test
push
or
retf
fldcw
inc
or
js
dec
jb
add
push
sbb
cmp
dec
mov
sbb
cmp
je
bound
mov
adc
mov
bound
pusha
pop
bound
push
push
jl
ins
mov
add
xor
or
fnstcw
or
jo
test
dec
adc
xor
pusha
add
bound
inc
xor
js
je
mov
cmp
push
push
je
mov
mov
mov
pop
test
pusha
xor
js
jo
jle
mov
jbe
push
pop
inc
mov
mov
mov
les
test
into
push
mov
or
inc
adc
jl
bound
or
jp
test
pusha
add
retf
(bad)
add
stos
fiadd
shr
js
js
dec
call
inc
lods
inc
or
jb
pop
jbe
sar
call
bound
sar
jb
aaa
dec
add
pusha
mov
cmp
bound
pop
jbe
mov
mov
int3
adc
aaa
bound
and
outs
lods
mov
adc
mov
rcr
fld
js
jbe
pusha
add
adc
mov
xchg
jl
inc
xchg
jl
inc
jb
sbb
adc
mov
test
(bad)
mov
int3
adc
add
jo
jbe
mov
test
dec
mov
mov
mov
push
mov
mov
test
pusha
add
jbe
sar
push
enter
loopne
sub
sar
mov
in
jbe
pusha
pop
jo
mov
mov
pop
xchg
dec
adc
(bad)
(bad)
xor
xor
xor
scas
rcr
mov
aas
inc
lods
inc
adc
cwde
(bad)
pop
jbe
mov
xchg
adc
neg
push
js
je
push
jp
mov
mov
pusha
test
add
sub
sbb
mov
pop
into
mov
sar
xchg
aaa
dec
and
retf
fldcw
inc
mov
test
dec
sbb
jp
fs
sub
mov
inc
mov
sbb
jo
retf
fwait
sub
cmp
push
inc
fxch
nop
pusha
sub
jbe
mov
mov
aas
push
lods
inc
adc
mov
(bad)
fldcw
fs
jmp
pop
js
jle
bound
mov
aaa
bound
dec
adc
and
outs
call
int3
xchg
les
sar
mov
sub
sub
jl
js
mov
add
ret
pop
jo
jle
test
(bad)
mov
dec
mov
mov
mov
jb
pop
dec
xchg
dec
mov
pop
and
js
sub
xchg
adc
mov
(bad)
sbb
sub
jp
or
mov
mov
retf
fldenv
outs
sbb
dec
fstp
pusha
pop
jo
jle
int3
jb
sbb
push
aas
inc
push
mov
mov
jb
jo
jbe
js
jb
mov
cmp
mov
add
lods
jl
test
pusha
cmp
dec
pop
pusha
mov
add
xchg
dec
mov
into
sbb
adc
inc
pop
jbe
rcr
pushf
dec
test
add
test
js
jmp
imul
adc
outs
adc
mov
adc
inc
adc
mov
sbb
pop
jb
or
loopne
push
xchg
test
push
jp
sar
jb
or
loop
out
(bad)
xor
push
les
jmp
fldcw
inc
or
xor
inc
add
je
inc
pop
jo
push
inc
enter
loop
mov
aaa
enter
dec
lods
jl
enter
retf
sub
test
push
jp
loopne
out
cmp
gs
sar
xchg
jg
repnz
mov
bound
mov
pop
test
jo
inc
and
retf
mov
push
les
je
sar
scas
jo
push
jo
dec
lods
jo
pop
call
dec
pushf
ret
adc
cmp
int3
adc
mov
sbb
stos
test
push
jp
jo
inc
xchg
pusha
xor
mov
sub
fwait
in
xor
xchg
jl
inc
adc
mov
je
jp
jle
je
cmp
dec
adc
xchg
adc
mov
xor
push
(bad)
(bad)
xor
push
les
pusha
test
add
ret
sbb
jo
bound
adc
jle
enter
dec
mov
int3
stos
out
jb
pop
jbe
ret
adc
mov
pusha
test
sub
add
and
test
popw
pusha
repnz
mov
mov
fwait
sub
fstp
sub
adc
pusha
add
enter
into
xor
lahf
dec
pushf
push
aas
inc
lods
inc
adc
adc
mov
inc
adc
mov
push
ins
adc
sar
cmp
xchg
test
(bad)
mov
test
inc
sbb
push
(bad)
xor
lahf
loopne
push
xchg
test
popw
pusha
adc
mov
data16
and
dec
pushf
ret
xor
lahf
loopne
pusha
adc
jle
retf
fnstcw
cwde
pusha
aaa
bound
mov
add
push
add
js
out
cmp
cmps
loopne
in
jmp
fwait
je
and
sub
(bad)
mov
pop
push
dec
aas
test
sar
shl
dec
pushf
ret
adc
add
ret
test
jmp
fldl2e
push
in
loop
out
fld
jl
jb
mov
pop
bound
(bad)
fnstenv
jle
dec
cmp
gs
loopne
out
cmp
gs
repnz
scas
sar
repnz
ret
test
dec
pushf
jl
pusha
adc
mov
je
mov
mov
dec
xor
xor
xchg
inc
cmp
inc
mov
mov
les
fld
data16
sub
xchg
adc
mov
adc
sub
push
(bad)
fldcw
js
je
(bad)
mov
ficom
sar
push
js
je
pusha
adc
jle
test
in
loop
mov
aaa
jbe
push
jmp
mov
(bad)
jb
or
adc
pusha
adc
jle
int3
adc
mov
xor
cmp
dec
aas
pop
mov
(bad)
(bad)
inc
aas
inc
lods
inc
adc
repnz
retf
mov
push
int3
fwait
sub
xchg
adc
mov
mov
sbb
stos
hlt
mov
add
pushf
jl
pusha
adc
mov
jp
pusha
or
loopne
out
cmp
gs
(bad)
aaa
dec
and
and
mov
xor
(bad)
mov
pusha
mov
push
and
mov
mov
sbb
mov
rcl
stos
int3
push
mov
xchg
adc
mov
pop
jle
inc
mov
into
jb
adc
(bad)
mov
jbe
je
push
js
je
and
inc
mov
adc
add
loopne
push
xchg
cld
and
aas
pop
adc
fld
jp
outs
lods
js
fiadd
int3
mov
xor
xchg
test
push
jp
sar
xor
inc
xor
xchg
dec
cmp
pop
mov
mov
push
mov
aaa
enter
int3
adc
sub
pusha
nop
dec
adc
lods
fldenvw
jbe
push
adc
add
mov
retf
mov
out
cmp
gs
jl
mov
pusha
sub
lods
dec
add
push
fs
les
xor
dec
adc
push
(bad)
fldenv
push
cmp
pushf
(bad)
adc
xchg
retf
or
retf
sub
ret
sbb
jb
jle
jmp
pop
push
jle
jb
mov
fwait
or
push
fldcw
js
je
shr
dec
pushf
jl
pusha
adc
mov
sub
and
ret
and
mov
pop
jb
mov
pop
bound
enter
les
je
dec
pop
test
(bad)
mov
test
(bad)
mov
inc
jb
or
pusha
mov
pusha
test
add
ret
test
je
pusha
pop
inc
jb
mov
bound
retf
mov
rol
repnz
loop
out
fldcw
push
int3
adc
mov
xchg
pusha
aas
dec
pushf
jl
pusha
sar
call
retf
ja
jb
aaa
bound
(bad)
mov
push
js
je
and
jp
mov
push
(bad)
adc
fxch
push
les
clc
and
mov
bound
sar
mov
loopne
dec
mov
aas
inc
lods
inc
adc
adc
fnstenv
ret
sbb
cmp
sar
sbb
fnstenv
jle
jbe
mov
aaa
jbe
push
retf
cmp
dec
jb
mov
test
pusha
cmp
dec
pop
pusha
mov
ins
xor
add
sbb
mov
les
adc
jl
bound
xor
push
fxch
push
les
bound
fs
dec
mov
aas
inc
lods
inc
adc
push
les
fidiv
pop
jbe
les
dec
add
push
mov
adc
sbb
push
les
pop
mov
mov
out
jb
mov
into
jb
pop
je
push
test
push
sub
sub
aaa
bound
and
cld
jb
sbb
sub
push
les
sub
xchg
test
jl
jb
jle
test
jbe
fs
stos
pusha
jb
pop
ret
mov
bound
mov
adc
push
sbb
(bad)
mov
pusha
mov
aas
js
inc
add
mov
mov
dec
adc
mov
loopne
fs
test
enter
rcr
dec
mov
aaa
dec
add
into
xor
lahf
test
inc
sbb
jg
adc
adc
jb
push
push
fnstcw
fs
retf
cmp
loopne
test
pusha
aas
dec
pushf
push
retf
mov
push
int3
test
js
dec
pushf
push
lahf
loopne
mov
cmp
inc
fwait
sub
fnstcw
fs
dec
nop
sar
adc
mov
test
pusha
sbb
push
(bad)
(bad)
add
mov
test
and
fdivr
int3
pushf
les
rcl
xor
mov
mov
jno
jb
sbb
dec
pop
dec
mov
jb
je
push
test
pusha
sbb
adc
mov
inc
mov
mov
mov
push
mov
fwait
sub
cmp
inc
fnstcw
inc
xor
jp
data16
(bad)
or
jp
dec
mov
aas
inc
lods
inc
adc
push
les
dec
lods
dec
xor
mov
xchg
les
stos
enter
ficom
stos
test
shl
cs
jb
loopne
out
cmp
bound
mov
aaa
jbe
push
int3
adc
mov
sbb
fstp
cmp
mov
aaa
pusha
xor
lahf
test
sar
mov
add
pushf
jl
pusha
add
test
retf
mov
push
inc
aaa
jbe
push
retf
mov
adc
stos
test
pusha
aas
dec
pushf
ret
adc
mov
push
jp
retf
fxch
push
ret
add
mov
into
sbb
mov
add
sbb
movs
pusha
fxch
nop
(bad)
aaa
into
mov
in
test
xor
fxch
adc
mov
jbe
dec
mov
dec
mov
aaa
dec
add
into
sbb
mov
adc
mov
int3
jb
xor
jl
inc
jb
mov
push
mov
sbb
inc
mov
enter
je
mov
pop
inc
xchg
push
fxch
nop
(bad)
aaa
into
mov
into
sub
cwde
ror
test
popw
pusha
adc
mov
les
retf
adc
add
push
jl
test
es
and
fldcw
js
je
jl
inc
jb
aas
pusha
nop
dec
adc
jb
fldcw
jb
fldcw
jb
fldcw
jb
fldcw
jb
fldcw
jb
fldcw
jb
fldcw
jb
fldcw
cld
sub
stos
jae
(bad)
push
test
(bad)
push
mov
fxch
loopne
movs
loop
sub
push
jo
xor
jb
fucom
cwde
shl
push
mov
leave
js
das
pop
test
dec
leave
push
pop
cld
test
jae
dec
and
jp
mov
fbld
jb
(bad)
cmp
test
mov
and
adc
add
mov
fnstcw
(bad)
repz
fst
mov
sub
test
test
(bad)
push
test
(bad)
push
test
pop
jno
leave
scas
cli
mov
jae
mov
push
mov
jae
and
push
test
(bad)
push
mov
mov
test
(bad)
push
test
inc
inc
movs
cs
push
test
(bad)
push
test
mov
dec
je
fadd
mov
fmul
push
test
(bad)
push
jne
fs
cmps
fldcw
push
test
mul
mov
sar
fnstcw
xor
jb
xor
jmp
dec
je
fiadd
movs
push
mov
jb
gs
scas
mov
push
push
lea
cmp
ror
test
mov
inc
fld
jb
push
lods
jae
dec
push
test
jne
(bad)
push
test
(bad)
push
test
scas
mul
jae
cwde
or
js
mov
pusha
xor
dec
push
test
(bad)
gs
mov
dec
dec
inc
fld
jb
mov
mov
test
(bad)
push
test
scas
mul
xor
dec
and
mov
js
das
pop
test
dec
leave
push
pop
cld
test
jae
dec
push
movs
sub
jp
loop
lock
fnstenv
lea
fldcw
push
test
(bad)
cld
test
mul
adc
mov
test
test
and
mov
es
push
sub
mov
jmp
pop
in
stos
dec
pop
in
fwait
cmps
lds
ins
aam
push
imul
or
ins
popa
ret
adc
gs
jmp
ins
or
cmp
jl
in
cmp
adc
mov
mov
loop
sub
xor
fisub
std
inc
mov
xchg
test
clc
sbb
retf
test
mov
iret
mov
jmp
or
inc
jle
aas
sbb
xbegin
loope
shr
mov
retf
clc
xchg
inc
ds
jne
test
jg
and
lods
ret
retf
imul
mov
jbe
push
imul
sbb
loopne
lahf
stc
dec
pop
fld
cli
test
jg
mov
pop
mov
inc
test
ret
mov
jg
shl
pop
daa
scas
call
pop
dec
sub
mov
xor
push
jl
mov
ret
sahf
jecxz
mov
call
add
jb
xchg
and
or
lods
mov
xor
sbb
popf
repz
jns
(bad)
jb
dec
jb
cmp
xor
xor
or
adc
xchg
xor
push
inc
pushf
jge
push
ret
cmps
in
mov
std
mov
div
inc
test
fisub
push
pop
pop
add
xchg
xchg
leave
mov
arpl
stc
test
jno
arpl
push
fisub
push
jmp
push
ficom
jmp
fisub
cli
ins
inc
test
arpl
push
fisub
push
fidiv
jnp
inc
test
fisub
push
fisub
push
out
iret
cs
fisub
push
fisub
data16
test
fisub
push
fisub
push
out
iret
es
fisub
push
fisub
push
ficom
push
(bad)
push
fisub
push
fisub
push
out
iret
ds
fisub
push
fisub
push
fcmove
add
jno
arpl
push
fisub
push
out
push
rol
outs
enter
test
fisub
push
fisub
push
cli
mov
fwait
cmc
and
cmps
jmp
push
fisub
push
jb
mov
jl
mov
loopne
nop
adc
inc
in
jnp
dec
(bad)
lahf
dec
js
jl
pop
mov
push
dec
(bad)
inc
xchg
jb
pop
jmp
jl
mov
dec
inc
in
retf
aas
leave
mov
pop
rol
mov
inc
call
pop
xchg
jle
mov
mov
cmp
mov
bound
and
sbb
adc
xchg
mov
jae
lods
cli
lea
popa
ins
jle
pop
jg
retf
mov
ret
cld
popa
arpl
ret
test
or
test
mov
jle
mov
xor
jb
jae
shl
pop
outs
jle
mov
test
add
sub
js
js
test
je
sbb
sbb
jecxz
retf
mov
xor
cmp
rcl
fwait
cwde
jns
(bad)
xchg
mov
jmp
xor
int3
jg
xchg
arpl
mov
adc
mov
hlt
xor
js
test
jae
mov
jbe
ja
mov
xor
adc
stos
jnp
test
pop
or
das
jmp
push
imul
cmp
sti
dec
sub
je
dec
lahf
int
cmp
shl
xchg
shl
xchg
shl
pop
sub
inc
icebp
or
push
mov
fcmovu
xchg
push
ret
mov
loopne
and
or
out
xor
rol
jge
popa
jae
mov
xor
stc
sub
ret
mov
loopne
aas
imul
rcr
data16
mov
adc
shl
xchg
shl
mov
loopne
xor
pop
lds
xor
mov
aaa
adc
shl
xchg
xor
int
jo
mov
xchg
shl
xchg
loope
aaa
pop
scas
mov
sub
adc
xchg
shl
xchg
shl
xchg
shl
fs
sbb
mov
xchg
shl
xchg
rcr
arpl
xor
call
sar
call
in
int3
dec
mov
shr
xchg
pop
jmp
(bad)
retf
jl
adc
dec
push
(bad)
xchg
fs
ret
es
cli
in
adc
jbe
fwait
mov
xchg
imul
scas
cwde
mov
or
push
push
lea
sub
sbb
ss
aas
leave
fdiv
aas
es
mov
xor
xor
jge
lahf
retf
mov
lock
push
arpl
ins
push
xor
xchg
sbb
lods
ret
je
jbe
and
pop
xor
mov
(bad)
pushf
mov
test
or
mov
imul
pop
ret
stc
int3
jg
xchg
mov
mov
mov
jecxz
test
mov
jbe
or
fimul
(bad)
mov
mov
mov
add
hlt
outs
dec
mov
(bad)
dec
mov
mov
mov
jecxz
push
pop
sub
xbegin
loope
dec
pop
test
(bad)
xchg
mov
out
ins
sbb
pop
or
test
ret
or
mov
jg
cli
xor
loopne
imul
mov
or
mov
mov
(bad)
jge
or
mov
mov
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
mov
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
mov
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
lods
mov
mov
mov
jge
jne
lods
pop
xchg
mov
loopne
sahf
xchg
mov
cmp
push
mov
lods
lods
inc
xchg
mov
dec
push
sub
lods
sub
mov
lods
inc
xchg
mov
mov
pop
stc
cmps
sub
out
mov
lods
inc
xchg
mov
mov
mov
cmps
adc
lods
sub
fbld
mov
mov
xchg
mov
cmp
lods
inc
xchg
mov
mov
mov
mov
lods
inc
xchg
mov
xchg
add
popa
adc
mov
inc
je
xchg
mov
xchg
mov
mov
lods
nop
sbb
mov
sahf
lods
cmp
ja
mov
lods
inc
xchg
mov
xchg
fistp
popa
mov
lods
inc
xchg
mov
push
in
jmp
dec
push
sub
mov
lods
inc
xchg
mov
mov
and
lods
inc
xchg
mov
xchg
jge
imul
lods
lods
inc
xchg
mov
xchg
mov
sahf
xchg
mov
inc
push
je
xchg
mov
jg
test
xchg
mov
xchg
stos
add
test
adc
lods
inc
ja
mov
xchg
mov
xchg
mov
xchg
mov
jle
cli
popa
pop
sbb
mov
mov
xchg
stos
add
jle
add
rep
lods
inc
xchg
mov
xor
inc
xchg
mov
movs
mov
mov
mov
sti
mov
mov
push
je
test
ret
push
sub
rcl
nop
dec
push
je
mov
mov
bound
jnp
xor
popa
xchg
mov
cmp
lods
pop
adc
lods
xchg
add
cmps
xchg
jb
lods
jmp
popa
shl
pop
cwde
inc
push
je
mov
in
cmp
fwait
cmps
lds
ins
aam
push
outs
cmps
ret
jle
mul
bound
xchg
rcl
pusha
mov
test
adc
lea
inc
fxch
nop
jge
push
daa
push
cmp
xor
mov
cs
mov
cmp
xchg
and
neg
retf
and
je
cwde
xchg
sbb
pop
jae
retf
mov
data16
cdq
lods
push
lea
stc
int
lock
(bad)
retf
or
inc
hlt
mov
xchg
js
test
dec
clc
sub
add
mov
ja
shl
scas
(bad)
mov
dec
mov
int3
pop
gs
jmp
add
mov
retf
sub
xchg
pop
ds
inc
js
test
cli
(bad)
jns
test
fwait
xor
mov
cmp
sub
repz
pop
inc
sbb
xor
xchg
sbb
xchg
xor
ja
pop
gs
pop
sbb
gs
fwait
jns
(bad)
xchg
add
loope
lock
dec
jb
loopne
cli
in
xchg
jno
stos
xor
(bad)
fwait
test
lds
push
movs
jo
leave
retf
mov
outs
jnp
sbb
xor
repnz
pop
inc
or
ret
les
(bad)
mov
and
cmp
mov
sub
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
jg
shl
pop
retf
nop
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
clc
fnstenv
mov
and
in
and
in
push
(bad)
mov
adc
jmp
mov
jp
jmp
and
in
push
(bad)
mov
adc
std
mov
push
fnstenv
mov
xor
in
mov
sub
shl
cmp
jmp
xor
shl
jp
jmp
and
in
push
(bad)
mov
xor
jmp
mov
pop
fldl2t
mov
sbb
ja
push
(bad)
mov
push
fnstenv
mov
clc
(bad)
sub
ret
mov
pop
(bad)
adc
push
cmp
push
es
mov
(bad)
adc
and
pop
pop
js
sub
js
mov
test
adc
(bad)
adc
leave
adc
(bad)
adc
clc
mov
fdivrp
adc
mov
cmp
pop
(bad)
adc
movs
aaa
dec
mov
inc
pop
and
or
leave
mov
stos
mov
test
(bad)
adc
and
test
(bad)
adc
(bad)
xor
clc
xor
sub
cmc
pop
and
or
mov
(bad)
adc
(bad)
out
lock
ja
daa
sbb
test
(bad)
adc
fst
test
(bad)
adc
fnstenv
ja
daa
sbb
test
(bad)
adc
fst
test
(bad)
adc
(bad)
out
lock
ja
daa
sbb
test
(bad)
adc
fst
test
(bad)
adc
fnstenv
ja
daa
sbb
test
(bad)
adc
clc
mov
fdivrp
adc
fnstenv
ja
daa
sbb
test
(bad)
adc
clc
mov
fdivrp
adc
(bad)
adc
or
pop
das
clc
call
test
(bad)
adc
clc
mov
fdivrp
adc
clc
mov
clc
shl
mov
(bad)
adc
clc
mov
clc
shl
mov
(bad)
sub
lods
clc
mov
pop
or
jns
enter
mov
sub
pop
xchg
fstp
pop
xchg
cmc
pop
and
or
inc
das
clc
call
test
(bad)
adc
ret
cmp
add
shl
ja
ret
fcomp
add
mov
sub
leave
mov
(bad)
adc
(bad)
adc
fst
test
(bad)
adc
(bad)
xor
(bad)
cmp
movs
sbb
and
fldcw
stos
in
(bad)
mov
jns
adc
(bad)
adc
popf
pop
and
fnstcw
mov
(bad)
adc
push
cmp
mov
(bad)
adc
(bad)
adc
clc
jns
out
fstp
pop
xchg
in
and
or
jns
enter
mov
push
mov
mov
je
adc
sbb
(bad)
fstp
pop
xchg
daa
sbb
test
(bad)
adc
into
pop
(bad)
fstp
test
(bad)
adc
fimul
mov
fcmovne
stos
xchg
adc
pop
aaa
pop
repnz
je
dec
mov
add
outs
pop
out
mov
cmp
test
(bad)
adc
clc
mov
fdivrp
adc
fnstenv
test
(bad)
adc
ds
xchg
mov
sbb
test
(bad)
adc
pop
inc
mov
out
es
pop
es
xchg
clc
mov
fdivrp
adc
pop
sub
xor
retf
cmps
sbb
cmp
outs
(bad)
and
jno
rcl
movs
add
dec
xor
pop
call
fidiv
mov
out
mov
adc
xor
mov
(bad)
adc
and
xchg
clc
mov
fdivrp
adc
stc
mov
fdivrp
adc
fdivr
mov
(bad)
adc
into
dec
dec
fcomp
test
(bad)
adc
fst
test
(bad)
adc
fst
test
(bad)
adc
(bad)
sti
sub
fdivrp
adc
push
mov
test
(bad)
adc
pop
ss
(bad)
adc
stc
mov
fdivrp
adc
(bad)
adc
or
cmp
inc
(bad)
fnstenv
pop
xchg
lods
pop
and
or
inc
das
clc
call
test
(bad)
adc
stc
mov
fdivrp
adc
(bad)
adc
call
test
(bad)
adc
clc
mov
sub
and
or
pop
and
or
inc
das
clc
call
test
(bad)
adc
clc
mov
fdivrp
adc
pop
push
and
call
test
(bad)
adc
(bad)
daa
fstp
ja
daa
pop
iret
fstp
ja
daa
sbb
test
(bad)
adc
push
cmp
mov
(bad)
adc
(bad)
das
fstp
jae
fidiv
mov
jns
jecxz
push
repnz
je
adc
shl
pop
pop
adc
(bad)
out
fstp
jae
clc
mov
sub
xor
fstp
ja
daa
sbb
test
(bad)
adc
pop
ss
xchg
push
mov
out
ss
sub
clc
mov
ss
sub
pop
mov
leave
mov
xchg
pop
jmp
stc
retf
jg
mov
mov
mov
call
xchg
mov
jecxz
aad
(bad)
retf
mov
jg
imul
xchg
popf
daa
cwde
jge
fild
mov
retf
mov
in
xor
mov
push
imul
jno
fwait
push
mov
xchg
xchg
data16
enter
call
popa
jne
ins
or
ins
add
int3
pop
or
cmp
int3
jg
test
pop
xchg
stc
sbb
sub
mov
jecxz
xchg
mov
jecxz
sbb
ins
jg
clc
jne
and
icebp
ins
jle
clc
aaa
jle
bound
div
and
pusha
pusha
rcl
jbe
push
jmp
ds
or
mov
pop
jne
sbb
call
test
ret
sti
or
ror
xor
lahf
jl
mov
xchg
test
sti
xlat
cmps
sbb
(bad)
enter
sub
xchg
sbb
pop
stos
sbb
les
neg
cmp
mov
xchg
xor
loope
sbb
sub
(bad)
aaa
(bad)
mov
cmp
scas
xor
test
mov
jnp
retf
scas
jae
mov
mov
mov
cs
call
aam
test
push
mov
test
inc
scas
xor
xor
mov
mov
adc
fwait
mov
scas
xor
test
mov
jnp
retf
scas
jae
mov
mov
test
jae
mov
mov
cmp
das
push
ficom
outs
dec
inc
jne
cmp
mov
and
mov
scas
push
mov
mov
mov
inc
add
push
test
sbb
test
or
jae
cmp
jae
mov
ins
xchg
mov
jbe
mov
xchg
add
loopne
and
push
xchg
add
aaa
mov
adc
out
(bad)
xchg
add
test
push
stos
sti
pop
adc
xor
dec
pop
fadd
clc
pusha
call
int
in
jle
sti
stos
jg
test
jl
mov
jle
sub
cmp
mov
adc
cmp
jnp
xchg
jg
adc
mov
xlat
call
push
ds
repnz
xchg
jl
lds
jae
div
std
push
je
jae
sbb
xchg
retf
jecxz
retf
mov
stc
dec
sub
int
in
jle
sti
stos
jg
sub
cdq
xchg
int3
je
inc
mov
push
jl
mov
repnz
in
js
test
sbb
xor
lods
xchg
lea
or
or
push
xchg
sbb
imul
iret
inc
add
pop
mov
test
cli
inc
enter
push
int
gs
or
test
jne
pushf
dec
sti
xlat
test
xchg
or
mov
pop
and
jp
in
jle
jae
xor
test
mov
xchg
(bad)
int
addr16
sar
xchg
xor
sbb
fmul
ins
test
mov
ja
jne
mov
adc
inc
mov
jae
or
or
mov
into
nop
xchg
or
inc
mov
jb
jg
fdivp
jg
jb
jg
jb
dec
call
jae
jg
jb
jg
jb
jg
xor
add
test
popa
pop
adc
jnp
sub
jb
dec
aas
pop
sub
jb
jg
rcr
cmc
xchg
jae
jg
jb
das
pop
dec
add
push
push
dec
(bad)
jae
jg
jb
stc
push
mov
pop
xor
movs
jb
stc
push
or
pop
xor
movs
jb
jg
jb
stc
push
inc
or
jg
jb
jg
jb
jg
inc
mov
movs
jb
jg
jb
jg
jb
jg
inc
mov
movs
jb
jg
jb
jg
jb
jg
clc
es
jb
jg
hlt
fiadd
push
push
jle
jb
jg
jb
jg
jb
jmp
mov
push
stos
(bad)
push
push
ficomp
jle
xor
movs
jb
jg
jb
jg
push
sub
std
or
mov
lock
jl
push
pop
adc
inc
cmp
jg
jb
jg
jb
jg
xchg
repz
jge
add
pop
or
inc
loope
add
mov
push
cmp
aaa
add
mov
push
mov
es
or
add
call
cmps
sbb
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
dec
jp
aad
in
jle
stos
dec
pop
in
stos
dec
pop
in
stos
or
fadd
jl
in
stos
dec
pop
in
stos
dec
pop
in
jmp
add
loope
retf
mov
stos
dec
pop
in
stos
dec
pop
in
stos
jecxz
fisttp
pop
in
stos
dec
pop
in
add
addr16
mov
stos
dec
pop
in
stos
dec
pop
inc
add
mov
stos
dec
pop
in
stos
dec
pop
in
add
push
retf
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
inc
sub
stos
dec
pop
in
stos
dec
pop
sbb
push
cli
push
outs
lea
call
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
jo
gs
call
in
stos
dec
pop
in
stos
lods
push
retf
stos
dec
pop
in
stos
dec
pop
in
stos
dec
sbb
out
in
stos
dec
pop
in
stos
dec
pop
in
stos
pop
jb
or
repz
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
add
outs
retf
mov
stos
dec
pop
in
stos
dec
pop
inc
add
mov
stos
dec
pop
in
stos
dec
pop
in
add
retf
mov
stos
dec
pop
in
stos
dec
pop
in
mov
pop
dec
mov
xchg
xchg
dec
mov
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
lds
ins
aam
push
mov
pop
in
stos
dec
pop
in
stos
dec
mov
dec
mov
in
stos
dec
pop
in
stos
or
fadd
jl
in
stos
dec
pop
in
stos
dec
or
xchg
mov
ins
mov
retf
inc
xchg
adc
add
ins
jns
test
test
retf
lea
call
in
stos
int
loopne
add
retf
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
dec
mov
jnp
mov
push
in
stos
dec
pop
in
stos
dec
pop
push
inc
jmp
in
stos
dec
pop
in
dec
mov
jns
mov
dec
pop
in
stos
dec
pop
in
stos
int
call
pop
in
stos
scas
test
fild
retf
mov
add
movs
popa
ror
inc
add
mov
stos
dec
pop
in
stos
dec
pop
in
add
outs
retf
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
inc
add
mov
stos
dec
pop
in
stos
dec
icebp
(bad)
mov
stos
dec
pop
in
stos
dec
jns
lods
out
jge
lea
xchg
data16
xor
pop
popa
jle
stos
dec
pop
in
stos
dec
lds
ins
aam
push
mov
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
mov
dec
mov
retf
inc
jle
retf
mov
addr16
retf
pop
outs
and
stos
dec
pop
in
stos
dec
pop
in
mov
jg
jb
jno
add
stos
dec
pop
in
stos
dec
pop
in
pop
dec
imul
xchg
mov
ret
imul
addr16
mov
lds
jle
stos
dec
pop
in
stos
dec
pop
in
stos
xlat
sti
ret
push
or
dec
mov
retf
inc
jle
retf
mov
cmps
ficom
inc
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
jg
xor
dec
pop
in
pop
jge
ret
pop
in
stos
dec
pop
in
stos
dec
pop
fadd
pushf
pop
in
stos
dec
pop
in
jae
xchg
push
xchg
xor
pop
in
stos
dec
pop
in
stos
dec
and
mov
pop
in
stos
dec
pop
in
jae
xchg
jge
xor
pop
in
stos
dec
pop
in
pop
add
dec
pop
in
stos
dec
pop
in
stos
dec
pop
fsub
jb
dec
mov
in
stos
dec
pop
in
stos
or
int3
icebp
ins
popa
rcl
xchg
stos
dec
pop
in
stos
dec
pop
in
stos
jg
in
stos
dec
pop
in
stos
dec
pop
in
stos
jnp
cmp
dec
pop
in
lahf
loope
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
ins
inc
pushf
dec
pop
in
stos
dec
pop
fadd
je
in
stos
dec
pop
in
lahf
loope
in
stos
dec
pop
in
stos
dec
pop
in
stos
jnp
fld
dec
ins
inc
lods
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
jnp
jmp
dec
pop
in
stos
dec
ins
inc
movs
dec
pop
in
stos
dec
pop
in
stos
mov
cld
leave
jg
sub
mov
jp
xchg
sbb
stos
dec
pop
in
stos
dec
pop
in
stos
dec
test
fild
retf
mov
add
movs
popa
ror
fld
sti
ror
outs
retf
lds
ins
scas
test
ins
jle
stos
dec
pop
in
stos
dec
pop
in
stos
lods
and
stos
dec
pop
in
stos
dec
push
retf
stos
dec
pop
in
stos
dec
pop
in
stos
dec
sbb
adc
sub
in
stos
dec
pop
in
stos
jnp
shr
dec
pop
in
stos
dec
pop
in
lahf
loope
in
stos
dec
pop
in
stos
dec
pop
fadd
jl
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
ins
inc
pushf
dec
pop
in
stos
dec
pop
in
stos
jnp
jmp
dec
pop
in
stos
dec
ins
inc
xchg
dec
pop
in
stos
dec
pop
in
stos
mov
std
leave
jg
jg
mov
jbe
mov
in
stos
dec
pop
jo
jne
popa
call
in
stos
dec
pop
in
stos
dec
pop
in
stos
lods
and
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
fwait
xlat
outs
in
stos
dec
pop
in
stos
jnp
in
mov
dec
pop
in
stos
or
mov
xor
add
ja
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
inc
add
mov
stos
dec
pop
in
stos
dec
icebp
inc
xchg
ins
jle
mov
in
stos
dec
pop
inc
sub
stos
dec
pop
sbb
push
jmp
jg
shr
jle
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
jo
gs
call
in
stos
dec
pop
in
stos
lods
and
stos
dec
pop
in
stos
dec
push
retf
stos
dec
pop
in
stos
dec
pop
in
jmp
jns
mov
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
jnp
fld
dec
pop
in
stos
dec
pop
in
lahf
loope
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
fadd
je
in
stos
dec
pop
in
stos
dec
pop
in
lahf
loope
in
stos
dec
pop
in
stos
jnp
jmp
dec
pop
in
stos
dec
ins
inc
xchg
dec
pop
in
stos
dec
pop
sbb
push
jmp
jg
mov
ins
jle
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
jo
jne
popa
call
into
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
mov
inc
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
jnp
fld
dec
pop
in
stos
dec
pop
in
fwait
pop
imul
stos
dec
pop
in
jmp
or
xchg
data16
mov
test
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
ins
inc
je
pop
in
stos
dec
pop
in
stos
jnp
shr
dec
pop
in
lahf
out
in
stos
dec
pop
in
stos
dec
pop
in
stos
jecxz
ror
pop
in
stos
dec
pop
in
stos
dec
icebp
inc
pushf
ins
jle
mov
in
stos
dec
pop
in
stos
dec
pop
inc
add
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
icebp
(bad)
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
pop
dec
jns
lods
out
jge
lea
xchg
data16
xor
mov
retf
stos
dec
pop
in
stos
dec
push
in
stos
dec
pop
in
stos
jnp
cmp
dec
pop
in
stos
dec
pop
in
fwait
cmps
lds
ins
aam
push
imul
add
stos
dec
pop
in
stos
dec
ins
inc
je
pop
in
stos
dec
pop
in
stos
dec
pop
sbb
lods
jbe
stos
dec
pop
in
stos
dec
pop
in
stos
dec
ins
inc
jl
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
mov
pop
in
stos
dec
pop
in
stos
dec
pop
in
dec
jp
aad
in
jle
stos
dec
pop
in
stos
or
fadd
xchg
pop
in
stos
dec
pop
in
jmp
xchg
call
in
stos
dec
pop
fdiv
fs
in
stos
dec
pop
in
stos
dec
pop
in
fwait
xlat
outs
in
stos
dec
pop
in
stos
jg
fld
dec
test
mov
dec
dec
mov
xchg
inc
dec
mov
pop
in
stos
dec
pop
in
stos
dec
push
retf
es
int3
push
gs
dec
mov
in
mov
dec
jp
in
stos
dec
pop
in
stos
dec
pop
in
stos
jnp
ret
stos
dec
pop
in
stos
dec
fldcw
inc
popa
movs
add
stos
dec
pop
in
imul
retf
mov
jg
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
test
enter
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
or
jns
popf
out
jns
xchg
xchg
stos
dec
pop
in
stos
dec
pop
fadd
sti
ret
imul
or
sbb
xchg
mov
push
in
stos
dec
pop
in
stos
dec
fbstp
mov
in
stos
dec
pop
in
stos
scas
test
mov
outs
dec
mov
cli
ret
push
jge
loopne
in
stos
dec
pop
in
stos
int
mov
xchg
sub
dec
pop
in
stos
int
repnz
pop
in
stos
int
push
stos
dec
pop
in
stos
dec
pop
in
stos
mov
adc
dec
pop
in
stos
dec
pop
in
stos
dec
pop
dec
dec
jbe
lds
ins
jle
stos
dec
pop
in
stos
dec
pop
in
stos
dec
jo
xchg
xchg
sbb
out
push
dec
mov
retf
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
jo
dec
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
es
int3
push
gs
je
stos
retf
pop
ins
scas
fstp
out
pop
mov
adc
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
sub
or
pop
in
stos
dec
pop
in
stos
dec
jns
lea
dec
mov
in
stos
dec
pop
in
std
outs
jle
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
jnp
jo
loope
push
(bad)
in
jle
stos
dec
pop
in
stos
dec
pop
in
jae
fild
or
repnz
stos
dec
pop
in
stos
dec
clc
inc
xchg
xor
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
and
inc
icebp
movs
add
stos
dec
pop
in
or
jne
(bad)
in
jle
stos
dec
pop
in
stos
dec
and
inc
loope
add
stos
dec
pop
in
stos
dec
clc
pusha
call
pop
loope
jle
stos
dec
pop
in
stos
dec
pop
in
stos
xlat
sti
ret
push
inc
xchg
xor
retf
mov
in
stos
dec
pop
in
stos
dec
pop
fadd
jl
xchg
in
jg
ja
jp
test
jne
(bad)
in
jg
mov
stos
dec
pop
in
stos
mov
xor
retf
mov
in
stos
dec
pop
in
stos
imul
pop
je
xchg
(bad)
in
jle
lods
loop
xchg
(bad)
in
jg
test
stos
dec
pop
in
stos
jnp
jmp
or
mov
jecxz
add
mov
sti
retf
dec
mov
pop
in
jg
jb
inc
or
repnz
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
std
outs
jle
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
jnp
jo
inc
jle
call
xor
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
fwait
out
in
stos
dec
pop
in
stos
dec
pop
int3
jge
xchg
mov
imul
jle
xor
pop
retf
mov
jle
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
scas
cmps
jno
sub
dec
pop
in
stos
jnp
jo
gs
jmp
popf
jp
sbb
(bad)
in
jg
adc
adc
dec
mov
jg
pop
outs
stos
retf
pop
ins
stos
(bad)
pop
sbb
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
mov
pop
in
stos
dec
pop
in
stos
dec
pop
in
add
xchg
mov
inc
mov
xchg
push
mov
loope
or
ins
add
retf
data16
sbb
mov
je
pop
nop
xor
pop
in
stos
dec
pop
in
pop
fld
stos
dec
pop
in
stos
jecxz
xor
dec
pop
in
stos
dec
pop
in
pop
inc
test
mov
imul
call
retf
pop
ins
stos
retf
pop
ins
and
mov
pop
in
stos
dec
pop
in
fwait
cmps
lds
ins
aam
push
imul
fs
and
inc
jmp
in
stos
dec
pop
in
stos
dec
pop
in
mov
inc
or
jg
mov
stos
leave
pop
fld
stos
dec
pop
in
stos
imul
fs
and
inc
jmp
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
aam
push
imul
mov
xchg
out
imul
mov
stos
dec
pop
in
retf
push
xor
mov
in
stos
dec
pop
in
stos
imul
sub
repnz
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
sub
xchg
pop
in
stos
dec
pop
in
stos
dec
pop
in
fwait
cmps
lds
ins
scas
fld
mov
jp
pop
xchg
xor
pop
in
stos
dec
pop
in
stos
dec
stos
retf
pop
ins
stos
leave
pop
ins
and
stos
dec
pop
in
stos
dec
pop
in
stos
dec
cmp
in
jle
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
int3
jge
xchg
xor
movs
add
stos
dec
pop
in
sub
xchg
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
push
retf
pop
mov
jnp
mov
shl
jae
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
scas
fld
mov
jp
call
pop
in
stos
dec
pop
in
stos
dec
scas
inc
jnp
sub
dec
pop
in
stos
jge
xor
stos
dec
pop
in
stos
dec
jns
lea
adc
dec
pop
in
stos
dec
pop
push
mov
xor
dec
pop
in
stos
dec
pop
fadd
sti
fimul
jg
mov
xor
pop
in
stos
dec
stos
xor
or
add
retf
stos
dec
pop
in
stos
dec
pop
in
stos
dec
stos
retf
pop
aaa
xor
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
jnp
jo
jge
popa
call
outs
mov
(bad)
fld
dec
pop
in
arpl
pop
in
stos
dec
pop
in
stos
dec
pop
in
aaa
call
jle
es
int3
push
gs
test
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
int3
not
dec
mov
retf
adc
pop
in
stos
dec
pop
aam
or
lods
sub
jne
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
nop
sub
jmp
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
test
pop
in
stos
dec
pop
in
stos
dec
or
hlt
cmp
retf
push
push
shl
dec
mov
stos
dec
pop
in
stos
dec
clc
pusha
call
fld
xchg
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
push
in
stos
dec
pop
in
stos
dec
pop
int3
icebp
ins
xchg
cmp
stos
dec
pop
in
stos
dec
pusha
test
sti
addr16
mov
in
stos
dec
pop
in
stos
dec
pop
and
imul
call
in
dec
xchg
push
in
stos
dec
pop
in
stos
dec
pop
in
stos
jnp
xor
dec
pop
in
stos
dec
pop
in
jmp
rcr
ins
aam
push
jnp
fld
dec
icebp
retf
jle
stos
dec
pop
in
stos
dec
lds
ins
aam
push
jnp
fld
dec
pop
in
stos
dec
pop
in
add
retf
mov
stos
dec
pop
in
aaa
call
cmps
int3
push
jge
inc
jl
jle
mov
in
stos
dec
pop
aam
jle
xor
dec
pop
in
fwait
xchg
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
lods
push
out
jge
lea
fs
mov
xchg
in
stos
dec
pop
in
stos
dec
pop
aam
or
lods
sub
jne
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
xchg
sub
xchg
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
int3
or
pop
stos
dec
pop
in
stos
dec
pop
in
dec
xchg
push
in
stos
dec
pop
in
stos
dec
pop
mov
(bad)
ins
jle
stos
dec
pop
in
stos
dec
pop
in
stos
dec
push
retf
pop
mov
push
or
stos
dec
pop
in
stos
xchg
cmc
cmp
data16
jae
bswap
mov
stos
dec
pop
in
stos
jnp
jo
gs
mov
test
call
jge
loopne
in
stos
dec
pop
in
stos
dec
pop
fadd
xchg
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
scas
push
and
in
stos
dec
pop
in
stos
dec
pop
in
stos
jg
cmp
dec
pop
in
stos
dec
pop
in
add
xchg
retf
jle
stos
dec
pop
in
stos
mov
pop
in
stos
dec
pop
in
stos
dec
sub
sbb
shl
bswap
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
fadd
cli
fimul
pop
in
stos
dec
pop
in
stos
dec
pop
in
jmp
bswap
mov
stos
dec
pop
in
stos
dec
pop
in
stos
arpl
or
lahf
jg
mov
mov
scas
xchg
mov
cmps
stos
adc
dec
pop
in
stos
dec
pop
sbb
mov
adc
dec
pop
in
stos
dec
pop
in
stos
mov
add
xchg
fld
dec
pop
in
stos
dec
push
in
stos
dec
pop
in
stos
dec
pop
les
lahf
pop
and
xchg
fld
dec
pop
in
stos
dec
pop
in
fwait
out
in
stos
dec
pop
in
stos
dec
pop
mov
jb
cmp
stos
dec
pop
in
stos
dec
pop
in
fwait
cmps
lds
ins
aam
push
imul
add
stos
dec
pop
in
stos
dec
pop
in
stos
dec
ins
inc
jl
pop
in
stos
dec
pop
in
stos
sbb
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
or
xor
je
xchg
fld
dec
bswap
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
les
gs
call
fld
xchg
pop
in
stos
dec
pop
in
stos
dec
pop
in
lahf
(bad)
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
fsub
pop
in
stos
dec
pop
in
mov
jle
mov
and
mov
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
jns
lea
and
mov
pop
in
stos
dec
pop
in
stos
dec
jns
lea
and
mov
pop
in
stos
dec
pop
in
mov
xchg
jmp
xchg
or
dec
pop
in
stos
dec
pop
in
mov
xchg
jecxz
xchg
(bad)
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
mov
xor
jge
mov
stos
dec
pop
in
stos
dec
push
retf
es
int3
ja
jle
cmps
sbb
retf
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
lds
ins
push
in
stos
dec
pop
fadd
je
in
stos
dec
pop
in
stos
dec
ins
(bad)
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
jmp
or
mov
stos
dec
pop
in
stos
sbb
stos
dec
pop
in
stos
dec
pop
in
stos
imul
dec
xchg
push
in
stos
dec
pop
in
stos
jnp
shr
dec
pop
in
jmp
jmp
mov
in
stos
dec
pop
in
stos
xlat
cli
fimul
pop
in
stos
dec
pop
in
stos
dec
pop
in
add
retf
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
bswap
mov
stos
dec
pop
in
stos
xlat
sti
fimul
outs
in
stos
dec
pop
in
stos
dec
pop
inc
sub
stos
dec
pop
in
stos
xlat
sti
ret
push
leave
test
sbb
mov
or
push
mov
int3
cld
loope
enter
cmp
in
movs
popf
jge
jne
push
ss
jmp
retf
mov
push
popa
adc
sub
in
or
sbb
aaa
not
je
pop
xchg
sbb
add
push
inc
test
ins
jle
mov
dec
pop
ror
push
stos
pause
test
push
ret
or
inc
jno
in
jnp
mov
mov
test
ret
scas
push
jae
jbe
cmp
mov
addr16
xor
jle
mov
data16
cdq
test
mov
xor
mov
enter
test
stc
daa
and
mov
xor
cdq
mov
or
or
xor
lods
retf
jle
mov
(bad)
cmp
adc
mov
and
sbb
scas
xchg
xchg
test
mov
or
mov
aaa
into
mov
stc
sbb
sbb
sbb
mov
cmp
addr16
lods
jl
or
push
sub
inc
xchg
xor
jge
xchg
stc
xor
test
ins
lods
pop
jb
cmp
xchg
or
clc
mov
ins
mov
ins
mov
pop
ins
mov
ins
mov
ins
mov
sub
ins
mov
ins
mov
ins
mov
mov
xor
ret
pushf
pop
adc
push
ins
mov
ins
mov
or
ins
mov
ins
mov
sbb
out
mov
sub
and
sub
stos
(bad)
ins
lds
pop
ins
mov
ins
mov
xor
or
ins
mov
ins
mov
ins
and
and
sub
ins
mov
ins
mov
push
lods
test
dec
pop
retf
xor
rcr
and
push
ins
mov
daa
jp
or
ins
mov
cmp
test
xor
rcl
ins
mov
ins
mov
ins
mov
or
ins
mov
ins
mov
pop
ins
mov
ins
mov
push
ins
mov
ins
mov
mov
mov
ins
mov
sbb
or
mov
mov
ins
mov
mov
jmp
mov
pop
ins
mov
ins
mov
inc
lods
movs
icebp
pop
xchg
or
ins
mov
ins
mov
mov
leave
es
mov
or
ins
mov
xor
or
ins
mov
ins
mov
shl
or
ins
mov
ins
mov
pop
ins
mov
ins
mov
xchg
or
ins
mov
ins
mov
and
or
xchg
or
ins
mov
and
or
ins
mov
ins
mov
adc
enter
stos
stos
sub
push
mov
sub
adc
fnstcw
push
ins
mov
ins
lods
movs
cmp
jmp
xor
shl
inc
rcl
ins
mov
ins
mov
ins
mov
and
or
ins
mov
mov
mov
ins
mov
ins
mov
fild
or
ins
mov
ins
mov
pop
ins
mov
ins
mov
fistp
or
ins
mov
(bad)
mov
fistp
or
ins
mov
ins
mov
ins
jl
les
(bad)
dec
stos
sub
dec
push
test
dec
pop
retf
xor
xor
sub
aad
les
adc
iret
stos
xor
push
retf
cmp
mov
cli
jmp
push
aam
nop
retf
stos
xor
dec
pop
fadd
sti
ret
jg
mov
push
retf
stos
retf
pop
outs
fs
dec
sub
fcomp
jae
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
stos
cmp
xor
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
outs
add
add
test
jl
mov
jg
jmp
inc
and
inc
nop
jl
mov
cmps
cmp
sub
imul
cld
inc
stos
cmp
outs
call
daa
xor
data16
jb
test
cli
jne
idiv
jne
in
jle
lahf
fidivr
jmp
sbb
xchg
ins
test
mov
jle
mov
jb
mov
or
mov
lods
mov
jge
jg
pop
fistp
test
add
test
pop
adc
xchg
test
mov
mov
mov
pop
pop
dec
jnp
jae
dec
jae
lods
xchg
out
cmp
clc
sbb
push
ret
or
aaa
sbb
data16
pop
dec
cli
jae
ret
jne
xor
mov
jo
shl
pop
ja
inc
test
sub
rcl
repnz
sti
jns
mov
mov
lods
ret
scas
jo
xchg
sbb
xchg
xor
or
dec
add
sbb
push
push
mov
jo
imul
call
cmps
lods
imul
pop
inc
push
add
inc
push
pusha
mov
inc
push
add
inc
push
add
xor
xor
add
inc
push
add
mov
xor
pop
inc
push
add
inc
push
add
pusha
cmps
sbb
lahf
mov
pop
inc
push
add
inc
push
add
inc
push
div
jp
loope
sahf
fmul
inc
push
add
inc
push
add
inc
push
sub
mov
daa
nop
sahf
pop
loope
in
jbe
pop
inc
push
add
inc
push
lock
xchg
jbe
pop
inc
push
add
inc
push
add
addr16
cs
mov
mov
push
mov
cmp
xchg
jg
xor
iret
pop
inc
push
add
inc
push
add
out
jge
into
lahf
mov
pop
inc
push
add
out
jge
into
lahf
mov
xor
add
inc
push
add
inc
push
add
out
jge
into
lahf
mov
xor
add
inc
push
add
inc
push
add
out
jge
into
lahf
mov
xor
add
inc
push
add
inc
push
add
inc
push
test
ror
daa
xor
add
inc
push
add
inc
push
add
mov
and
jmp
inc
push
add
inc
push
add
inc
push
test
nop
mov
iret
lahf
push
add
inc
push
add
inc
push
add
inc
ins
lods
rol
dec
mov
inc
push
add
inc
push
xchg
dec
bound
xor
add
inc
push
add
addr16
xlat
into
jg
jbe
pusha
jbe
xor
mul
lahf
mov
pop
inc
push
add
inc
push
imul
jbe
loope
scas
fmul
inc
push
add
inc
push
add
inc
push
add
jnp
out
lahf
mov
sbb
daa
nop
sahf
pop
rcr
add
inc
push
add
inc
push
add
mov
das
xor
dec
mov
dec
nop
dec
mov
inc
push
add
inc
push
add
inc
ins
sub
sahf
mov
cld
out
imul
xor
add
inc
push
add
imul
push
push
mul
pop
inc
push
add
inc
push
add
sar
cmp
mov
into
add
push
add
inc
push
add
jnp
sahf
into
lahf
mov
iret
lahf
jno
and
mov
adc
daa
pop
inc
push
add
inc
push
add
imul
xor
xchg
jb
mov
inc
push
add
inc
push
add
inc
push
cmp
repnz
imul
dec
loop
push
xor
fs
cmp
daa
mov
push
and
xor
xor
mul
scas
fmul
inc
push
add
inc
push
add
ja
xchg
jbe
pop
inc
push
add
addr16
cs
fild
pop
inc
push
add
inc
push
adc
fdiv
sahf
cmp
daa
xor
add
inc
push
add
inc
push
mul
scas
fmul
inc
push
add
inc
push
add
inc
push
add
xlat
ins
sub
sahf
mov
and
mul
les
jae
ja
xchg
jbe
pop
inc
push
add
inc
push
and
sahf
mov
aaa
out
call
pusha
jbe
pop
inc
push
add
inc
push
add
sub
sub
sahf
mov
sbb
daa
pop
inc
push
add
inc
push
add
inc
ins
or
sahf
mov
xchg
mov
cmp
into
shr
cmps
call
push
add
inc
push
add
addr16
fcomp
push
mov
xor
mov
loopne
ja
xor
out
lahf
mov
xor
add
inc
push
add
mov
mov
fxch
lahf
xlat
neg
popa
jbe
sub
fxch
lahf
xlat
not
inc
push
add
inc
mov
sbb
mov
iret
lds
cmp
into
shr
cmps
loop
pusha
jbe
pop
inc
push
add
addr16
fcomp
push
mov
pusha
jbe
cs
mov
lahf
mov
loopne
arpl
xor
add
inc
push
add
ja
mov
lahf
mov
pop
inc
push
add
inc
push
add
addr16
fcomp
push
push
xor
and
into
mov
mov
arpl
sub
fxch
lahf
shl
cs
sbb
fcomp
mov
iret
jnp
xlat
xchg
mov
aas
xor
add
inc
push
add
inc
jno
xchg
sahf
mov
iret
mov
bound
lock
repz
fmul
ror
iret
or
fxch
lahf
cmps
fmul
jbe
pop
inc
push
add
inc
push
add
inc
push
in
bound
sahf
mov
nop
sahf
sbb
fcomp
mov
into
mov
add
pusha
push
add
inc
push
add
inc
jno
test
jle
fidiv
pusha
jbe
movs
add
daa
loope
movs
fmul
inc
push
add
inc
push
add
ja
scas
iret
lahf
mov
pop
inc
push
add
inc
push
xor
inc
push
add
inc
push
add
sbb
push
mov
inc
push
add
inc
push
add
out
jg
(bad)
js
add
inc
push
add
inc
push
add
inc
add
sub
add
inc
push
xor
jmp
push
add
inc
push
add
inc
push
add
div
in
iret
lahf
push
add
inc
push
add
inc
push
add
inc
popa
sub
sahf
mov
pop
inc
push
add
inc
push
add
inc
jno
and
xor
push
pop
inc
push
add
inc
popa
pop
nop
adc
daa
pop
inc
push
add
inc
jno
cmp
xchg
pusha
jbe
pop
inc
push
add
inc
push
add
inc
push
add
pop
ret
cwde
popa
(bad)
pop
inc
push
add
inc
add
add
inc
push
add
inc
push
add
inc
push
sar
inc
mov
cmps
push
jecxz
mov
pop
inc
push
add
inc
push
add
inc
push
cmp
nop
xlat
mul
jp
daa
pop
inc
push
add
inc
mov
mov
bound
cmp
mov
ja
xor
add
inc
push
add
inc
mov
aaa
clc
jle
daa
xor
and
pusha
jbe
pop
inc
push
add
inc
mov
daa
xor
and
pop
mul
xchg
mov
jmp
push
add
inc
push
add
inc
popa
not
inc
push
add
inc
popa
loopne
inc
push
add
inc
push
add
sbb
fxch
lahf
ja
pop
mov
daa
xor
daa
iret
or
fxch
lahf
mov
or
daa
pop
inc
push
add
inc
push
add
mov
fcom
inc
push
add
inc
push
add
inc
push
add
or
fxch
lahf
cmps
dec
sti
lahf
mov
pop
inc
push
add
inc
push
add
inc
push
test
outs
pop
cmps
xor
scas
xor
inc
cmp
pop
cmps
xor
jl
pop
loope
inc
cmp
sbb
xor
xor
enter
pop
jmp
sub
dec
pop
in
stos
dec
pop
in
stos
dec
pop
sbb
mov
mov
in
stos
dec
pop
ror
jb
sub
push
or
stos
dec
pop
in
stos
mov
push
retf
mov
xor
stc
ins
popa
ret
xor
retf
pop
gs
mov
ins
jl
daa
xor
cmp
xchg
jge
addr16
pop
out
retf
mov
add
out
cwde
jl
sbb
mov
xchg
or
lock
mov
fiadd
jae
xchg
lods
les
push
nop
pop
bound
jno
in
pusha
repz
pop
mov
jns
or
mov
xor
or
cmp
(bad)
mov
jmp
lods
mov
stc
(bad)
mov
and
test
push
bound
pop
pop
sbb
je
jnp
dec
dec
sti
inc
ror
jg
test
sti
mov
dec
sti
pop
cmp
imul
pop
and
xchg
cmp
rol
dec
nop
or
retf
cli
xor
mov
mov
test
loopne
ins
jle
cmc
add
sbb
jbe
xor
sub
mov
and
jle
sbb
lock
jg
pusha
rcr
xor
xor
jae
add
imul
jle
or
xor
imul
clc
mov
sub
imul
and
jb
clc
sahf
jge
jg
ret
xor
xchg
outs
cdq
shl
jp
and
jl
xchg
(bad)
(bad)
outs
cs
xchg
(bad)
fidiv
cmp
jl
xchg
(bad)
fidiv
cmp
mov
sbb
mov
adc
xchg
xchg
fst
pop
sahf
gs
adc
sbb
mov
adc
sbb
adc
xchg
sbb
cmp
push
inc
cmp
mov
sbb
xchg
xchg
adc
mov
adc
xchg
jg
cmp
mov
mov
nop
xchg
aaa
ror
cmp
mov
sbb
xchg
xchg
aaa
sbb
mov
sbb
mov
adc
rol
dec
mov
mov
adc
mov
adc
push
adc
sub
xor
mov
mov
sbb
mov
adc
push
and
mov
adc
fadd
aaa
sbb
mov
sbb
push
pushf
xor
mov
adc
mov
inc
mov
xchg
adc
push
sahf
jnp
adc
pop
repz
lds
xchg
push
xor
sahf
pop
inc
adc
enter
mov
inc
sbb
jae
pop
jmp
jg
lea
mov
mov
mov
lea
lea
test
sbb
mov
test
add
lea
rcr
aas
or
int3
mov
enter
dec
jp
out
retf
jl
xlat
push
sub
(bad)
mov
or
jne
cmp
adc
aad
xchg
int3
xor
sbb
es
ins
jg
and
addr16
add
mov
ins
imul
and
or
(bad)
sbb
push
enter
add
sbb
xchg
xor
movs
pop
pop
cwde
test
pop
mov
or
jl
int
test
ins
mov
jo
jg
stc
inc
sub
arpl
add
mov
mov
mov
test
ds
mov
pop
or
test
pushf
ret
add
pop
pop
cmp
or
sbb
jbe
or
popf
push
ret
jbe
push
imul
xchg
clc
mov
pop
or
sbb
xor
hlt
imul
xchg
in
(bad)
repz
movs
nop
cmc
mov
stc
pop
mov
push
stc
aaa
or
fdivr
nop
push
clc
pop
mov
psubusw
xchg
jmp
sub
mov
push
stc
pop
mov
cmps
aad
stc
test
xchg
stc
sti
fild
in
aam
stc
test
mov
xchg
push
test
and
shl
and
jmp
fst
cmps
cli
xchg
out
inc
lea
mov
in
stos
dec
pop
in
stos
ja
adc
ins
jg
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
icebp
dec
test
mov
in
stos
dec
pop
inc
or
ins
pop
in
stos
dec
pop
in
stos
dec
pop
in
add
addr16
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
inc
pop
mov
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
stos
retf
pop
outs
stos
iret
jb
jmp
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
jns
jae
ja
lea
pop
xchg
pop
in
stos
dec
pop
in
stos
dec
push
in
stos
dec
pop
fadd
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
and
xchg
push
ins
std
loopne
in
stos
dec
pop
in
stos
dec
pop
in
stos
mov
pop
in
stos
dec
pop
push
add
cmps
into
mov
in
stos
dec
pop
in
stos
dec
pop
push
lods
jbe
adc
inc
sar
stos
dec
pop
in
stos
dec
pop
in
mov
hlt
xor
dec
pop
in
fwait
(bad)
pop
in
stos
dec
pop
in
stos
jg
in
stos
dec
pop
in
stos
dec
pop
in
stos
ja
sbb
ins
and
xchg
push
jge
loopne
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
int3
jge
xchg
iret
pop
pop
jns
je
xchg
jecxz
xchg
retf
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
fwait
(bad)
pop
in
stos
dec
pop
in
stos
jecxz
xor
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
fadd
sti
ror
push
leave
mov
xchg
dec
pop
in
stos
dec
pop
in
stos
jecxz
xor
stos
dec
pop
in
stos
dec
pop
in
stos
mov
pop
in
stos
dec
pop
in
stos
dec
ins
shr
xor
dec
pop
in
stos
dec
pop
in
stos
dec
lock
xor
ins
jg
call
in
stos
dec
pop
in
stos
dec
pop
fmul
dec
pop
in
stos
dec
pop
in
stos
jnp
fcom
out
mov
retf
jb
xor
xor
je
jno
or
stos
dec
pop
in
stos
jecxz
cmp
or
stos
dec
pop
in
stos
dec
pop
rol
int
retf
pop
ins
shl
xor
mov
push
inc
mov
in
stos
dec
pop
in
stos
dec
pop
int3
jge
popa
ret
stc
ins
jg
pop
mov
pop
in
stos
dec
pop
pushf
xchg
hlt
jmp
jb
retf
lock
xor
ins
jle
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
xchg
cmps
ss
fistp
jb
ja
call
in
stos
dec
pop
fmul
dec
pop
in
stos
dec
pop
in
stos
int
loopne
sbb
pop
in
stos
dec
js
push
xchg
xor
inc
mov
in
stos
dec
pop
in
stos
dec
pop
in
mov
cmps
ss
jg
nop
mov
shr
dec
pop
in
stos
dec
push
xor
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
lahf
pop
pop
in
stos
dec
pop
in
stos
dec
pop
in
pop
pop
push
in
stos
dec
pop
in
stos
jecxz
xor
stos
dec
pop
in
stos
dec
pop
fadd
sti
ror
push
leave
mov
xchg
dec
pop
in
stos
dec
pop
inc
lea
pop
in
stos
dec
pop
in
stos
mov
pop
in
stos
dec
pop
in
stos
dec
ins
shr
xor
dec
pop
in
stos
dec
pop
in
add
ss
jg
mov
pushf
dec
pop
in
stos
dec
pop
in
stos
dec
pop
fmul
dec
pop
in
stos
dec
pop
in
stos
jnp
fcom
out
mov
retf
jb
xor
xor
je
jno
or
stos
dec
pop
in
stos
dec
pop
in
stos
jecxz
cmp
or
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
rol
int
retf
pop
ins
shl
xor
mov
push
inc
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
imul
mov
icebp
gs
stos
dec
pop
in
stos
dec
pop
pushf
xchg
hlt
jmp
jb
retf
lock
xor
ins
jle
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
xchg
cmps
ss
fistp
jb
ja
call
in
stos
dec
pop
fmul
dec
pop
in
stos
int
loopne
sbb
pop
in
stos
dec
pop
in
stos
dec
js
push
xchg
xor
inc
mov
in
stos
dec
pop
in
mov
cmps
ss
jbe
xchg
rol
pop
test
outs
in
stos
dec
pop
in
stos
jnp
in
stos
dec
pop
in
stos
dec
pop
push
inc
cdq
mov
stos
dec
pop
in
stos
dec
pop
in
mov
dec
fld
je
in
stos
dec
pop
in
stos
dec
lock
xor
pop
in
stos
dec
pop
in
stos
dec
push
retf
es
enter
retf
mov
je
jno
or
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
sbb
pop
jbe
stos
dec
pop
in
stos
dec
pop
in
stos
dec
ins
inc
je
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
jnp
shr
dec
push
in
stos
dec
pop
fcom
dec
pop
in
stos
dec
pop
in
stos
mov
scas
mul
in
stos
dec
pop
in
stos
dec
pop
pushf
push
xchg
or
jb
cwde
(bad)
ins
jle
xchg
jle
mov
fld
dec
pop
in
stos
dec
push
in
stos
dec
pop
in
stos
dec
push
ss
cld
or
xchg
xor
mov
jae
lock
xor
ins
jle
stos
dec
pop
in
stos
dec
pop
in
stos
dec
lock
xor
ins
jle
stos
dec
pop
in
stos
dec
shr
xor
mov
je
jno
sub
sbb
pop
in
stos
dec
pop
in
stos
dec
jns
jae
ja
mov
xchg
jle
mov
in
stos
dec
pop
in
stos
ja
sbb
sub
jp
fld
dec
pop
in
stos
dec
push
in
stos
dec
pop
in
stos
dec
fidiv
mov
in
stos
dec
pop
in
stos
dec
pop
mov
stos
dec
pop
in
stos
dec
pop
in
mov
scas
ss
jle
jo
je
jno
sub
dec
pop
in
stos
imul
sbb
mov
pop
in
stos
dec
pop
in
stos
dec
pop
mov
call
in
stos
dec
pop
in
stos
cmp
xchg
sbb
xchg
dec
pop
in
stos
dec
pop
int3
xchg
push
in
stos
dec
pop
in
stos
jnp
in
stos
dec
pop
in
stos
int
loopne
sbb
pop
in
stos
dec
pop
in
stos
dec
pop
in
mov
je
jno
or
test
xchg
push
or
stos
dec
pop
in
stos
scas
push
xor
dec
pop
in
stos
dec
or
jb
fs
sbb
stos
dec
pop
in
stos
dec
icebp
retf
jle
stos
dec
pop
in
stos
dec
test
in
stos
dec
pop
in
stos
dec
pop
inc
lea
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
jnp
jo
inc
jle
call
xor
pushf
dec
pop
in
stos
dec
pop
in
stos
dec
pop
fmul
dec
pop
in
stos
int
loopne
sbb
pop
in
stos
dec
pop
in
stos
dec
jns
jae
dec
fld
inc
pop
in
stos
dec
pop
in
add
retf
mov
stos
dec
pop
in
stos
dec
pop
in
pop
das
push
in
stos
dec
pop
in
stos
dec
pop
in
stos
jecxz
xor
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
jo
dec
jle
call
xor
mov
in
stos
dec
pop
in
stos
xchg
xchg
(bad)
test
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
lds
ins
aam
push
imul
push
int
loopne
add
retf
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
add
xchg
mov
stos
dec
pop
in
stos
dec
pop
rol
xchg
(bad)
pop
mov
xor
sbb
retf
stos
dec
pop
in
stos
dec
pop
in
stos
dec
push
in
stos
dec
pop
fdiv
je
in
stos
dec
pop
in
lahf
imul
dec
pop
in
stos
dec
push
retf
es
int3
push
or
jg
cmps
stos
adc
dec
pop
in
stos
dec
pop
in
stos
dec
pop
sbb
dec
pop
in
stos
dec
pop
in
(bad)
pop
dec
pop
or
ins
popa
ret
and
retf
pop
gs
mov
ins
jl
jecxz
cwde
retf
loopne
jge
cli
popa
cmp
sbb
ins
jg
cli
lea
fcmovnbe
xchg
jge
sub
jmp
imul
inc
jge
popa
shl
xor
out
scas
(bad)
lea
fwait
outs
jle
pop
cmp
mov
or
push
inc
test
mov
lahf
jbe
inc
sbb
jo
nop
test
mov
jbe
mov
jle
mov
in
jbe
ins
lods
(bad)
lea
pop
lahf
jns
add
pop
or
ins
test
dec
mov
(bad)
enter
(bad)
dec
(bad)
jl
cmps
int3
jg
test
clc
fld
mov
sti
(bad)
jecxz
jp
jae
adc
mov
pop
xchg
xor
sbb
sbb
mov
adc
in
jg
int
mov
dec
(bad)
aaa
jb
or
sbb
mov
inc
jle
mov
cld
add
or
mov
push
mov
nop
test
mov
ja
aad
push
xor
cdq
pop
cmp
xor
sbb
clc
and
repz
xor
mov
jo
mov
leave
imul
adc
or
dec
mov
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
es
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
mov
mov
inc
add
pop
jne
loope
and
imul
(bad)
mov
mov
icebp
mov
mov
mov
mov
(bad)
mov
mov
retf
adc
mov
mov
(bad)
pop
push
push
cmp
mov
dec
loope
das
jae
sbb
and
(bad)
mov
mov
(bad)
mov
adc
add
(bad)
mov
mov
cli
sbb
cmp
jp
(bad)
retf
adc
mov
mov
jmp
out
dec
push
mov
and
(bad)
mov
mov
loope
add
(bad)
mov
mov
(bad)
mov
adc
movs
xchg
sbb
and
loopne
data16
jmp
mov
adc
jmp
popa
pop
outs
inc
add
add
jle
jae
pop
jmp
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
mov
xchg
sbb
jns
add
stos
dec
pop
in
stos
dec
pop
in
stos
dec
ins
inc
dec
dec
pop
in
stos
dec
pop
in
stos
dec
pop
int3
jge
xchg
jecxz
out
retf
jle
stos
dec
pop
in
stos
dec
pop
sbb
ins
jg
xchg
xlat
fild
mov
xor
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
(bad)
xchg
fmulp
sbb
mov
and
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
jae
mov
inc
mov
in
stos
dec
pop
sbb
in
scas
retf
in
ins
jg
pushf
mov
adc
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
jg
arpl
dec
pop
in
sub
les
retf
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
cmp
dec
pop
in
stos
dec
ins
cli
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
fwait
xlat
outs
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
fdivr
dec
pop
in
stos
dec
pop
in
stos
dec
gs
inc
leave
stos
retf
jb
(bad)
xor
fsubr
loopne
add
retf
stos
dec
pop
in
stos
dec
jns
je
pusha
sar
xor
xchg
push
add
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
xor
mov
repnz
stos
dec
pop
in
stos
dec
pop
in
fwait
cmps
lds
ins
jg
mov
push
mov
dec
pop
jmp
pop
in
stos
dec
pop
in
stos
imul
xor
retf
pop
ins
stos
leave
jb
jns
add
lea
loopne
add
retf
add
push
or
ins
pop
in
stos
dec
pop
in
fwait
out
in
stos
dec
pop
in
stos
dec
pop
in
stos
mov
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
lds
ins
jl
pushf
lock
cmp
movs
retf
xchg
fs
ret
add
mov
or
rol
mov
add
pop
or
mov
mov
pop
cmp
mov
stc
and
cmp
or
pop
jae
fcomp
xchg
sbb
lods
ret
mov
jbe
test
retf
mov
lods
les
in
fdivr
scas
sbb
ins
jle
pop
test
and
ins
or
xchg
test
adc
push
or
xchg
sbb
jbe
lahf
xchg
test
mov
jbe
cmp
clc
mov
jmp
cmp
mov
test
pop
mov
xor
sbb
xchg
jmp
test
ins
jg
jne
adc
jg
xor
and
pop
cmp
pop
and
xor
jmp
sbb
push
icebp
movs
jle
jae
fcomip
cmp
rol
jne
push
mov
lahf
jl
ins
mov
sub
pop
sti
jge
lds
and
arpl
lods
scas
mov
xor
rol
sbb
jmpw
or
sbb
pop
cmp
mov
add
mov
icebp
ss
xchg
adc
adc
and
repnz
nop
push
push
sub
in
sbb
out
cmp
rol
sbb
push
or
jp
xor
rol
sbb
push
and
mov
add
mov
add
mov
add
out
iret
add
rol
sbb
rol
repnz
cmc
es
mov
add
mov
add
inc
int3
xor
rol
sbb
cmp
sbb
shr
aas
ins
mov
mov
movs
aas
repnz
adc
inc
xor
inc
imul
mov
jle
xor
dec
scas
(bad)
pop
in
jle
popa
xlat
xor
pop
in
stos
dec
pop
in
aaa
call
cmps
ins
and
push
in
stos
dec
pop
in
stos
jnp
shr
dec
pop
in
stos
dec
jne
addr16
mov
or
stos
dec
pop
in
stos
mov
(bad)
xlat
add
in
stos
dec
pop
in
stos
or
add
push
adc
dec
pop
in
stos
dec
pop
in
stos
dec
pop
fsub
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
mov
pop
in
stos
dec
pop
and
out
stos
int3
call
in
stos
dec
pop
in
xchg
inc
pop
int3
sub
retf
retf
outs
hlt
stos
dec
pop
in
stos
dec
js
(bad)
(bad)
div
les
push
stos
dec
pop
in
stos
dec
pop
in
stos
dec
push
stos
dec
pop
in
stos
dec
outs
les
dec
pop
in
stos
dec
outs
xchg
dec
pop
in
stos
dec
pop
in
mov
jge
bound
lds
ins
aad
push
rcl
or
xchg
fld
dec
pop
in
stos
dec
sbb
enter
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
add
and
js
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
and
loope
call
sahf
ja
pop
cwde
popa
pop
in
stos
dec
pop
in
add
and
jbe
jmp
retf
es
enter
dec
mov
inc
mov
mov
test
or
lea
fmul
fcom
xor
mov
sbb
xchg
jle
lahf
sub
addr16
out
test
xchg
ds
jb
test
clc
dec
cmps
out
mov
stc
mov
pop
sbb
mov
lea
jg
xchg
xor
jbe
test
cmp
ins
jg
sub
aad
sti
imul
jecxz
jle
cli
jne
jno
sbb
scas
sahf
or
mov
pop
icebp
js
test
fmul
jle
inc
mov
cmp
scas
call
sbb
js
test
sub
ins
test
mov
mov
or
dec
cld
xchg
xor
push
mov
in
pusha
or
jnp
sbb
imul
sbb
inc
fwait
xchg
test
mov
jbe
mov
nop
sbb
clc
(bad)
cwde
add
mov
cwde
addr16
js
test
test
jbe
ds
mov
xchg
mov
call
mov
pmaxub
stos
stc
sbb
ret
mov
pmaxub
cmp
dec
or
fimul
and
retf
lods
sbb
out
dec
and
int3
stos
sub
push
stos
sub
jns
xlat
push
das
arpl
xchg
xchg
sub
mov
in
sub
jg
mov
adc
mov
jle
imul
cld
jl
ret
xchg
or
cmp
mov
sub
jle
imul
lea
in
add
mov
div
div
jb
cmp
xchg
sbb
loopne
push
jns
xchg
sbb
dec
sahf
jno
xchg
jg
test
pop
ja
retf
mov
ret
or
dec
sbb
jecxz
sahf
or
mov
pop
mov
jle
mov
dec
and
and
(bad)
std
dec
xchg
test
stc
(bad)
out
mov
sub
jg
mov
ins
jg
pop
mov
cmp
push
enter
push
mov
fidivr
pop
mov
sbb
das
ins
or
pop
mov
adc
arpl
gs
lea
cwde
xor
addr16
jp
bound
xchg
jne
sahf
sbb
aaa
jno
bnd
clc
mov
stc
fild
xor
pop
cmc
xor
adc
xchg
bound
test
(bad)
mov
jp
ins
or
test
mov
rcr
xchg
push
es
fnstsw
or
cdq
imul
jge
shl
test
cmp
mov
dec
pop
xchg
cmp
mov
imul
sbb
sar
jecxz
adc
or
movsx
cmp
xchg
fisub
sbb
ss
sbb
call
jp
rcl
or
xchg
fsub
int
dec
jge
int3
sub
jecxz
add
cli
pop
imul
pop
inc
mov
add
xchg
dec
movsx
sbb
retf
xchg
neg
(bad)
sbb
fisub
xchg
fisubr
sbb
dec
or
call
jp
rcl
or
xchg
fsub
int
jle
std
mov
cmc
nop
inc
dec
jecxz
add
cli
pop
imul
pop
inc
mov
add
xchg
dec
movsx
sbb
shl
xchg
hlt
pop
arpl
push
mov
pop
lahf
retf
icebp
nop
movs
fwait
xchg
push
test
rcr
dec
sbb
(bad)
adc
repz
in
jo
mov
xor
loop
xor
ret
adc
pusha
ins
ficom
sbb
xor
xor
ret
loop
xor
xor
icebp
xchg
in
jo
mov
xor
loop
xor
inc
inc
pop
add
pop
or
cmps
push
inc
inc
inc
pop
jo
cmp
xchg
in
push
add
pop
ret
movs
in
mov
adc
jo
sub
jmp
retf
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
or
enter
ret
outs
outs
jg
pop
gs
jno
ins
or
lock
lea
mov
jae
popf
jns
(bad)
retf
mov
xor
or
xchg
ins
jge
xchg
jmp
cmp
aad
mov
ret
nop
add
aam
(bad)
cli
xor
jg
test
jl
lahf
int
lods
add
ins
jg
sbb
retf
pop
gs
mov
out
test
xchg
test
mov
test
jnp
(bad)
pop
or
jns
sbb
jmp
xbegin
imul
clc
xor
mov
clc
lods
push
popf
js
dec
inc
xchg
dec
mov
jl
lea
push
std
pop
xchg
test
pop
sbb
mov
je
cli
dec
sti
mov
mov
xor
or
cmp
test
imul
or
gs
or
sbb
xor
jl
sbb
cmp
and
or
ins
or
push
nop
mov
sti
mov
adc
jae
jns
pop
xchg
dec
arpl
jg
pop
push
xor
dec
inc
cli
stc
fisubr
mov
add
cmp
jg
xor
inc
loop
ja
outs
enter
mov
retf
dec
mov
or
fwait
mov
inc
jo
push
mov
popf
ss
jo
ss
jo
ss
sub
rol
popf
rol
popf
ss
jo
ss
jo
push
test
ss
jo
ss
jo
ss
jbe
ss
jo
ss
cwde
outs
(bad)
mov
xchg
inc
cwde
outs
(bad)
mov
xchg
inc
mov
hlt
inc
test
lock
jo
ss
jo
ss
jo
ss
jo
ss
jo
ss
cmp
jbe
adc
jl
xor
pop
add
div
sbb
jl
xor
inc
add
out
ss
jo
ss
jo
ss
jo
ss
jo
out
pop
xchg
aaa
addr16
mov
adc
gs
lods
cmp
mov
adc
mov
call
hlt
ret
mov
push
mov
aaa
mov
jo
adc
mov
out
adc
ss
movs
popf
enter
mov
push
mov
adc
mov
push
mov
mov
jo
aaa
inc
mov
dec
ss
jo
adc
mov
adc
ins
sub
inc
push
mov
adc
mov
push
inc
jo
ss
jo
loop
mov
adc
mov
adc
mov
aaa
addr16
mov
adc
dec
mov
jo
aaa
inc
mov
dec
ss
jo
adc
mov
adc
ficomp
lock
popf
adc
mov
loop
mov
dec
ss
jo
loop
mov
adc
mov
fwait
shl
push
mov
ss
jo
je
rcr
push
mov
adc
mov
adc
mov
adc
mov
jo
jo
pop
lahf
inc
sbb
and
fs
inc
push
mov
and
scas
mov
push
mov
adc
mov
and
icebp
popf
adc
mov
adc
mov
aaa
inc
add
push
mov
adc
pushf
dec
sbb
jne
rep
adc
push
mov
inc
inc
jo
aaa
addr16
mov
adc
xchg
xchg
jo
xchg
jecxz
out
adc
popf
adc
mov
and
push
mov
adc
mov
test
shl
imul
push
mov
cmp
fcomp
inc
jo
aaa
addr16
mov
adc
mov
mov
bnd
cmp
sbb
stos
cmp
pop
pop
fcomp
in
movs
lea
inc
push
mov
adc
fsub
inc
jo
adc
mov
adc
and
push
popf
mov
push
mov
adc
out
in
icebp
popf
adc
mov
adc
mov
aaa
addr16
mov
adc
fcomp
addr16
mov
adc
call
(bad)
xchg
pop
mov
adc
imul
in
icebp
popf
xor
jne
movs
pop
sbb
sti
push
jg
adc
mov
adc
adc
into
jne
xor
(bad)
xchg
imul
adc
mov
cli
iret
call
adc
mov
mov
push
mov
mov
push
mov
mov
inc
jo
adc
mov
adc
popf
loop
push
mov
xchg
jbe
aaa
inc
jo
and
xor
mov
push
mov
adc
mov
pop
int
mov
adc
mov
out
rcr
js
sub
icebp
popf
xchg
mov
jo
adc
mov
sbb
sbb
aaa
addr16
mov
dec
dec
fcomp
inc
outs
xchg
ret
popf
enter
mov
push
mov
sub
icebp
popf
adc
mov
and
push
sub
inc
push
mov
adc
mov
aaa
addr16
mov
adc
cwde
cli
inc
add
fstp
mov
ja
lea
ds
loope
inc
adc
aaa
addr16
mov
adc
mov
aaa
inc
jo
adc
mov
adc
push
mov
push
mov
adc
mov
inc
add
inc
mov
adc
mov
adc
mov
or
mov
adc
mov
xor
jne
mov
mov
mov
aaa
addr16
mov
adc
cwde
cli
inc
add
enter
out
jno
aaa
xchg
je
cmp
jo
ss
fwait
out
jo
mov
or
adc
mov
enter
mov
push
mov
jo
rcr
push
mov
adc
mov
(bad)
icebp
icebp
popf
enter
mov
push
cli
pop
(bad)
popf
xor
scas
scas
mov
jbe
daa
inc
sbb
shl
mov
jo
adc
mov
adc
bound
sbb
mov
jo
adc
mov
adc
mov
aaa
addr16
mov
dec
pop
rcr
push
mov
adc
out
ss
jo
adc
mov
and
ins
sub
inc
push
mov
adc
mov
and
icebp
popf
cli
iret
jg
aaa
addr16
mov
adc
cwde
cwde
mov
(bad)
popf
xor
scas
scas
mov
jbe
daa
push
imul
jo
adc
mov
adc
jo
ss
jo
loop
push
mov
xchg
jbe
aaa
inc
jo
and
ins
sub
inc
push
mov
adc
mov
pop
int
mov
adc
mov
div
icebp
popf
adc
mov
out
rcr
sbb
shl
lea
adc
inc
sbb
shl
push
jbe
shl
call
popf
adc
mov
adc
mov
mov
mov
adc
mov
cmc
inc
or
shl
dec
xor
adc
adc
out
mov
adc
mov
adc
mov
push
mov
adc
cli
add
fistp
mov
addr16
mov
adc
mov
adc
mov
adc
adc
lea
ja
outs
fwait
rol
and
push
mov
adc
adc
lea
aaa
stos
or
sbb
icebp
popf
adc
mov
adc
mov
ss
mov
adc
mov
adc
int
shl
in
icebp
popf
je
rcr
push
mov
adc
mov
out
jo
daa
xchg
jo
cmp
jo
ss
xchg
mov
add
mov
push
mov
xchg
add
xor
push
mov
pop
int
mov
adc
mov
push
mov
jo
adc
mov
adc
bound
sbb
mov
jo
adc
mov
adc
adc
retf
pop
adc
cmp
ficomp
and
call
sbb
xchg
div
mov
jo
adc
jb
pop
jmp
jg
push
bnd
test
jl
mov
jle
imul
test
(bad)
mov
or
inc
mov
pop
ins
jg
clc
popf
hlt
sar
add
cwde
jl
stc
pop
movs
xor
jno
aaa
jp
out
aas
sub
jno
xor
enter
mov
mov
push
mov
sub
clc
and
jo
jb
mov
pop
ss
ja
cmps
ins
jg
out
pusha
or
inc
jmp
add
add
pop
add
jle
sar
test
or
pop
ret
cmps
xchg
or
mov
lods
ret
or
adc
or
lahf
jl
mov
pop
iret
retf
mov
xchg
xor
dec
sbb
xchg
xor
jns
xchg
jb
pop
xchg
xor
jl
fs
or
jg
pop
or
aas
imul
xchg
or
mov
xor
lods
ret
or
stc
xchg
mov
pop
mov
xor
sbb
in
or
in
mov
imul
adc
mov
cdq
loope
sub
clc
in
push
and
cmp
or
rcr
or
data16
shr
cld
and
cmp
and
cmp
loopne
in
loope
dec
call
inc
in
loopne
ins
push
dec
mov
jne
ins
cmps
lahf
pusha
mov
pusha
shr
add
sub
add
(bad)
push
aam
pusha
dec
mov
mov
arpl
and
and
push
mov
je
jl
clc
mul
add
sub
sub
jg
push
popa
mov
hlt
cmc
repnz
bound
pusha
xchg
sub
out
aas
sub
cmp
sub
cmp
sub
cmp
sub
cmp
(bad)
data16
aas
dec
out
out
sub
cmp
(bad)
out
adc
mov
sbb
scas
nop
mov
or
xor
cli
out
aas
sub
cmp
add
mov
rcr
or
and
sbb
or
out
aas
sub
cmp
sub
call
push
cmps
out
sbb
rcr
ins
pop
(bad)
mov
or
stc
pop
pop
scas
std
push
adc
neg
or
sbb
or
cmp
rcr
or
scas
nop
mov
or
xchg
cmp
sbb
rcr
cmp
out
sbb
sar
ds
mov
xchg
rcr
or
std
push
adc
loop
lods
xor
jmp
sbb
cmps
loopne
cmp
xor
mov
mov
sbb
or
push
sbb
or
rcr
movs
push
sbb
or
rcr
movs
push
sbb
or
push
cmp
or
sbb
or
out
aas
sub
cmp
cs
aaa
test
(bad)
out
aas
sub
mov
mov
or
rcr
or
mov
sbb
sar
addr16
or
rcr
or
push
mov
in
call
push
(bad)
mov
inc
imul
rcr
or
rcr
inc
push
(bad)
mov
inc
imul
rcr
or
icebp
inc
std
jmp
rcr
or
sub
sbb
rcr
sub
jmp
sbb
or
push
nop
mov
or
jmp
sbb
shl
and
rcr
or
imul
sub
cmp
xchg
sub
sbb
rcr
or
sub
sbb
sar
das
dec
call
push
cmps
out
sbb
rcr
or
out
rol
mov
movs
mov
sbb
pop
(bad)
mov
or
in
idiv
stos
out
aas
sub
sbb
or
rcr
or
mov
idiv
stos
out
aas
sub
sbb
or
pushf
idiv
stos
out
aad
sub
sbb
sar
das
imul
aas
sub
cmp
or
rcr
retf
rcr
or
jmp
sbb
cmc
xor
or
rcr
movs
loop
mov
sub
inc
jbe
adc
sub
cmp
sub
sbb
or
rcr
or
inc
in
jmp
div
cmp
(bad)
cmp
jmp
sub
out
aad
sub
sbb
imul
aas
or
sbb
or
rcr
sub
out
aas
sub
sbb
or
rcr
jp
mov
mov
sub
sbb
or
rcr
mov
cmp
sub
cmp
(bad)
out
xor
out
aas
mov
aaa
test
push
rcr
or
rcr
push
rcr
or
rcr
or
mov
sbb
rcr
jmp
ret
mov
sbb
daa
mov
ds
pop
xor
dec
in
or
stos
out
xor
cli
scas
retf
mov
add
xor
mov
mov
adc
mov
mov
ins
jg
test
loop
ja
mov
(bad)
mov
ficom
mov
das
jle
mov
mov
imul
js
cld
pop
fs
jl
aad
jo
(bad)
mov
add
sahf
aad
mov
xor
mov
lea
add
mov
loope
jle
mov
cmps
nop
push
xchg
test
or
je
cmps
nop
test
pop
in
jle
mov
xor
or
sbb
ret
ret
imul
cmp
jns
(bad)
xchg
and
sbb
data16
mov
pop
pop
add
in
jg
jg
clc
and
mov
push
jl
aaa
pop
sub
or
jae
adc
sbb
es
or
mov
mov
pop
add
sti
pop
pusha
idiv
jne
inc
in
jg
loopne
jle
das
xchg
xor
mov
js
test
ret
mov
inc
jb
or
jae
cdq
mov
or
push
sbb
js
lea
aas
out
dec
xchg
rcl
xchg
rcl
xchg
rol
out
dec
xchg
rcl
xchg
rcl
mov
xor
cmp
mov
push
xchg
rcl
xchg
rcl
xchg
shl
repz
in
mov
push
dec
xchg
rcl
mov
daa
out
mov
push
push
mov
test
es
xor
mov
ss
xchg
dec
sbb
js
xor
pop
dec
imul
ins
jle
mov
push
pop
mov
mov
mov
scas
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
push
jl
ss
stos
dec
pop
in
stos
dec
pop
in
stos
dec
jl
int3
mov
lock
xchg
fs
leave
mov
dec
cmp
ja
sbb
mov
fadd
retf
cli
cmc
pop
leave
jo
fwait
pushf
stc
or
mul
mov
xchg
sbb
or
or
retf
(bad)
xor
lods
ret
xor
je
jmp
sbb
ror
dec
inc
jmp
jb
fidiv
xchg
or
mov
mov
xchg
test
mov
mov
sub
stc
mov
mov
jbe
add
ins
or
adc
xor
xchg
or
ins
in
sub
test
xchg
jp
jo
add
sbb
jae
add
pop
in
jg
out
sub
xor
jns
(bad)
xchg
jo
out
imul
scas
mov
test
jle
cmp
xchg
daa
xchg
sbb
pop
dec
or
das
ins
jle
pop
adc
lods
ret
jge
stc
mov
dec
jbe
sbb
(bad)
mov
mov
in
nop
sub
push
jbe
ds
retf
adc
adc
(bad)
inc
bound
hlt
xchg
test
jp
mov
xor
test
cmc
outs
push
mov
mov
test
jp
mov
in
test
cmc
call
test
in
push
stos
fbstp
jbe
mov
jbe
mov
jbe
mov
ja
mov
cmp
mov
jge
or
jge
lods
(bad)
shl
xchg
jge
or
jge
or
aad
pop
(bad)
mov
ja
xchg
jge
or
jge
or
aad
push
(bad)
mov
ja
xchg
jge
or
jge
movs
mov
pop
ja
mov
push
or
jge
or
aad
(bad)
jge
or
jge
or
jge
mov
xchg
jge
or
jecxz
or
jge
or
jge
or
inc
push
div
mov
or
jge
or
mov
div
pop
jbe
mov
fs
mov
jbe
cmp
in
pop
je
mov
push
or
jge
or
jge
or
jge
mov
(bad)
lahf
les
cmps
mov
push
or
jge
sub
pop
pushf
sbb
push
fsub
xor
pop
push
or
jge
or
jge
or
pop
jno
mov
div
xchg
jge
or
jge
or
pop
push
or
jge
or
jge
sub
jge
or
jge
or
ror
or
jge
or
jge
or
jge
xor
mov
ja
xchg
jge
or
jge
or
jge
or
cli
cmps
inc
sbb
push
or
jge
or
jge
(bad)
mov
jno
pop
mov
mov
jge
or
jge
sub
mov
jl
jnp
jbe
mov
ja
xchg
jge
or
jge
clc
push
pop
jbe
cmp
in
pop
je
mov
push
or
jge
or
pop
mov
stos
mov
pushf
ror
enter
push
or
jge
or
stos
ja
mov
mov
or
jge
or
jge
or
jge
jo
(bad)
xchg
jge
or
aad
ret
mov
ja
xchg
jge
or
jge
or
repz
and
push
or
jge
jl
add
xor
inc
mov
and
mov
sub
mov
mov
movs
pop
popf
(bad)
or
xchg
jge
or
pop
mov
stos
mov
imul
mov
pop
mov
jb
sti
sub
jge
or
jge
or
rcr
stos
mov
sahf
xor
pop
test
push
adc
xor
pop
push
or
jge
or
jge
or
jge
stos
fs
push
sub
mov
inc
cmp
or
jge
or
jge
mov
xchg
jge
or
jge
or
(bad)
ja
mov
pushf
(bad)
pop
aam
jge
or
jge
or
(bad)
ja
fistp
movs
stos
mov
pushf
fisttp
(bad)
aam
mov
push
or
jge
or
jge
movs
mov
pop
ja
mov
push
or
jge
or
cmp
push
or
jge
or
daa
mov
sub
ja
xchg
jge
or
jge
or
jge
xchg
mov
pop
pop
test
jge
or
jge
or
jge
push
inc
mov
sub
jo
mov
pop
pop
mov
jge
or
jge
or
and
pop
mov
rcr
push
or
jge
or
jge
or
and
xor
scas
jg
call
or
jge
or
jge
or
jge
push
hlt
mov
sub
mov
xor
lahf
and
or
jge
or
aad
pop
(bad)
mov
ja
xchg
jge
or
jge
cld
mov
inc
jge
dec
movs
mov
mov
add
xor
(bad)
cmc
cmp
mov
push
or
jge
sub
inc
add
dec
movs
jno
into
mov
sub
xor
mov
push
or
jge
or
jge
or
lea
stos
mov
pushf
(bad)
sbb
xor
pop
push
or
jge
or
push
into
mov
sub
xor
sub
push
or
lea
stos
mov
pushf
pop
cmp
clc
xor
pop
push
or
jge
or
jge
or
ja
and
mov
sub
sub
jge
or
jge
or
pop
mov
mov
aam
jge
or
jge
or
das
jbe
mov
push
or
jge
or
jge
adc
inc
jl
mov
jbe
cmp
pop
ja
xchg
jge
or
jge
ds
jl
mov
jbe
cmp
xchg
sub
mov
or
jge
or
jge
or
jge
cli
xchg
jge
or
jge
in
xchg
jge
or
jge
or
mov
cli
retf
aas
mov
xchg
jge
or
jge
or
jge
or
mov
cmps
sub
pushf
fisttp
rol
push
or
jge
or
mov
cli
stos
aas
mov
xchg
jge
or
jge
or
jge
or
and
xor
mov
dec
xor
cmps
rcr
movs
mov
jge
or
jge
cli
mov
jg
xchg
jge
or
jge
or
and
pop
aas
pop
push
or
jge
or
jge
or
push
(bad)
sub
push
or
jge
inc
(bad)
xchg
jge
or
jge
or
dec
js
mov
ja
xchg
jge
or
jge
or
mov
dec
xor
cmps
data16
push
or
jge
or
jge
movs
mov
cwde
and
mov
adc
mov
cmp
(bad)
mov
mov
fmul
xor
gs
xor
push
xor
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
mov
scas
xor
xchg
sub
dec
pop
in
stos
dec
pop
in
stos
dec
pop
ror
sub
push
or
stos
dec
pop
in
stos
dec
pop
sbb
pushf
xor
ins
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jae
or
mov
mov
mov
mov
mov
jae
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
int3
sub
mov
sub
mov
sub
retf
mov
mov
mov
mov
mov
mov
mov
pop
mov
jg
mov
mov
mov
mov
retf
mov
mov
mov
mov
mov
mov
mov
mov
push
leave
imul
dec
mov
jne
mov
pusha
mov
test
cli
lea
mov
aad
cs
mov
movs
call
xor
jge
retf
mov
add
(bad)
arpl
call
es
add
ins
addr16
aad
ja
xor
clc
dec
adc
je
pop
mov
in
pusha
or
cld
fild
shr
pusha
or
imul
sbb
ins
jg
out
pusha
or
jmp
jmp
push
jmp
jg
test
mov
in
in
jle
jae
xor
clc
pop
js
hlt
mov
add
cs
ins
scas
mov
ins
jle
imul
pop
iret
js
test
push
add
mov
or
ficomp
pop
ds
cdq
xor
mov
jbe
test
lock
int
xchg
lods
sub
xchg
cmp
jae
in
int3
jg
pusha
rcl
xor
mov
pusha
shr
lods
xor
lods
ret
es
arpl
test
xchg
idiv
lea
into
push
es
or
mov
pop
inc
test
or
mov
sub
mov
inc
out
or
sub
enter
leave
das
stos
push
leave
das
stos
push
aas
pushf
in
hlt
out
fadd
adc
stos
push
leave
das
stos
push
leave
das
call
das
stos
push
leave
das
stos
push
leave
das
stos
push
jmp
adc
push
popa
xchg
push
leave
das
stos
push
leave
fstp
adc
(bad)
div
leave
das
stos
push
leave
das
stos
push
leave
das
stos
mov
adc
stos
push
leave
das
stos
push
popa
add
scas
fisttp
xchg
push
mov
mov
jle
out
or
mov
fst
adc
jb
sub
adc
xor
dec
push
retf
es
enter
dec
mov
sub
cmps
mov
test
mov
(bad)
test
mov
sti
outs
sbb
jl
call
ins
jle
mov
jl
jns
sbb
sti
fwait
imul
jmp
and
xor
and
test
ret
test
dec
jg
dec
leave
mov
mov
fldenv
stos
stc
mov
sti
mov
jne
gs
jg
fidivr
pop
retf
xor
ins
mov
pop
popf
test
pop
cmp
push
sub
sbb
pop
cwde
sbb
clc
dec
nop
les
ret
or
jno
pusha
test
push
ret
clc
sbb
jmp
adc
and
jle
sbb
push
ret
je
cmp
ins
gs
mov
mov
push
xor
xchg
cmp
and
cmp
jg
xchg
in
mov
cmp
(bad)
jns
(bad)
xchg
ins
sbb
and
test
mov
pop
mov
out
cmp
xchg
jl
adc
mov
sbb
xchg
push
mov
in
mov
in
mov
fsub
mov
in
or
cmp
push
inc
push
in
mov
in
aas
mov
cmp
mov
sbb
mov
in
aas
mov
in
mov
in
mov
inc
add
scas
mov
retf
out
test
xchg
scas
cmp
mov
in
mov
in
push
adc
cmp
ds
cmp
mov
in
aas
mov
jbe
sbb
fsubr
mov
in
mov
in
mov
fsub
cmp
mov
in
mov
fadd
cmp
mov
in
aas
mov
or
dec
stc
or
push
in
mov
in
ds
cmp
aas
mov
cmp
aas
mov
out
mov
in
aas
mov
mov
mov
in
aas
mov
retf
sbb
retf
pop
int3
jl
jmp
lahf
retf
jp
push
and
inc
lahf
retf
enter
out
xchg
and
xor
dec
pop
jo
dec
jle
call
mov
cmp
and
out
xchg
fs
fs
dec
retf
or
jl
fwait
cmp
mov
leave
imul
push
jnp
not
cwde
jge
test
fidivr
pop
xchg
mov
bound
cld
call
imul
jae
jp
jns
or
unpcklps
sbb
xchg
test
inc
test
clc
mov
sti
sbb
int3
mov
stc
mov
jmp
or
mov
test
lea
enter
retf
or
lds
cmp
or
and
jns
pop
or
jae
test
clc
aad
mov
mov
cdq
ds
js
test
xor
or
lods
push
nop
dec
mov
or
sbb
mov
mov
cmps
cmp
jmp
sub
cli
movs
jl
jle
out
int3
pop
gs
xchg
inc
jb
cmp
pusha
repnz
xor
push
jg
jge
jle
cli
dec
lock
mov
or
sbb
cs
cmp
(bad)
mov
mov
adc
and
inc
push
fwait
stos
mov
rcl
stos
mov
adc
mov
mov
sar
call
adc
call
push
nop
or
mov
jne
mov
mov
dec
inc
into
gs
mov
sbb
sub
je
pop
in
stos
dec
pop
in
stos
dec
pop
fsub
pushf
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
push
retf
es
int3
push
gs
inc
popf
dec
pop
cdq
push
retf
xchg
fs
mov
cmp
iret
retf
nop
jo
sbb
cs
into
mov
stc
and
jb
outs
cdq
jb
js
sbb
xlat
mov
sub
cmc
or
div
pushf
int3
xchg
sbb
sbb
clc
mov
push
jne
jge
mov
js
jle
cmp
xlat
or
sbb
retf
repnz
clc
popa
push
jae
mov
jle
(bad)
cmp
mov
mov
rol
pop
cdq
bswap
pop
dec
jle
mov
dec
cld
xchg
xor
mov
push
sub
mov
dec
sbb
xchg
test
pop
mov
not
dec
nop
test
mov
int3
jp
xchg
lods
cs
or
test
fdivr
lahf
jge
xchg
fs
imul
in
xchg
sbb
clc
arpl
mov
clc
(bad)
mov
pusha
rcl
xchg
xor
js
test
jae
sti
dec
cmp
lea
clc
push
xor
add
xchg
mov
gs
jo
add
adc
add
mov
fwait
gs
jno
fst
xchg
(bad)
call
imul
cmp
add
popa
cmp
test
mov
or
pop
imul
cmps
(bad)
sbb
pop
add
pop
test
scas
add
sbb
or
gs
call
fcom
mov
sbb
add
call
aam
icebp
test
call
mov
fnstsw
lea
retf
dec
pop
(bad)
mov
mov
int
sub
inc
pop
sbb
cld
test
mov
lods
inc
addr16
sub
inc
cld
test
mov
sub
jnp
xor
dec
push
retf
mov
cmp
adc
call
popf
lea
es
int3
push
jne
mov
call
xchg
fs
mov
mov
mov
pop
dec
ins
jge
cmps
dec
jb
stc
sbb
xor
cmp
in
popf
scas
pop
mov
xlat
pop
sub
stc
sti
dec
cdq
bound
aas
fisttp
or
outs
rol
cmps
jle
sbb
popa
shl
xor
jle
mov
xor
xchg
or
sbb
sbb
cli
scas
fcom
mov
jle
cli
test
int
mov
lock
xchg
sbb
jbe
xchg
lods
xchg
lea
leave
xchg
dec
pop
adc
int
or
cmp
je
movs
lahf
stc
mov
in
pusha
or
cli
and
int
gs
ficomp
(bad)
shl
jo
sbb
cmp
sbb
push
xlat
fwait
test
mov
xor
test
or
cmp
xchg
test
mov
(bad)
retf
pop
test
xchg
inc
xchg
dec
mov
xor
xchg
lods
bound
or
bt
enter
sbb
imul
xchg
or
nop
pop
mov
sbb
fs
sbb
pop
(bad)
or
cmp
mov
test
(bad)
cdq
or
dec
test
cmc
jge
xchg
cmc
jge
mov
cmc
jge
mov
push
mov
(bad)
xchg
cmc
jge
xchg
cmc
sub
pop
ret
movs
push
sub
pop
cmp
mov
cmc
jge
sub
xchg
cmc
jge
xchg
cmc
jge
xchg
cmc
cdq
das
dec
cmp
(bad)
pop
pop
std
and
xchg
cmc
jge
xchg
cmc
mov
enter
enter
adc
cmc
jge
xchg
cmc
jge
xchg
cmc
jge
xchg
vmovhpd
cmc
jge
xchg
cmc
jge
push
fwait
cdq
adc
movs
add
add
sbb
dec
fs
cmc
jge
xchg
cmc
jge
xchg
sub
cmp
and
out
or
cmp
repz
out
(bad)
fdiv
xor
and
out
fs
cmps
adc
xchg
sbb
xor
dec
pop
fadd
test
aaa
call
cmps
enter
dec
mov
ja
mov
test
and
lea
adc
jb
jl
jnp
dec
xor
xchg
ret
outs
cdq
dec
and
jmp
sbb
inc
sbb
inc
xor
(bad)
lea
xchg
daa
cwde
jge
inc
outs
and
adc
pop
or
je
mov
push
rcl
test
cli
jnp
mov
in
ins
jle
jae
xor
xchg
cmp
jle
mov
stos
cmc
inc
nop
lods
jmp
dec
pop
fisttp
pop
cld
mov
add
mov
xchg
sbb
pop
lods
ret
jbe
into
mov
jmp
add
xor
ins
test
mov
mov
push
pop
jg
adc
mov
push
ret
movs
mov
pop
mov
lods
ret
inc
sub
jae
js
test
sbb
push
add
or
outs
aaa
nop
sbb
jmp
and
xchg
cmp
jae
jl
dec
inc
xor
(bad)
mov
js
cli
cmp
push
cli
js
shl
pop
xor
add
jge
idiv
jo
jge
idiv
idiv
ss
out
add
hlt
out
cs
mov
pop
pop
sbb
mov
xchg
adc
cmp
mov
fsubr
push
pop
outs
sbb
lea
add
out
das
sbb
fsub
xor
or
jno
jge
popa
call
xor
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
pop
clc
push
dec
mov
in
stos
dec
pop
in
stos
dec
jl
cmp
dec
sub
sbb
xchg
fs
ret
loop
mov
or
(bad)
retf
mov
sub
(bad)
enter
iret
hlt
clc
jns
fwait
add
sbb
retf
imul
je
mov
ins
jg
pop
fnstcw
test
mov
xchg
jle
push
sbb
(bad)
xchg
lods
hlt
lea
sub
cli
jecxz
cdq
mov
sub
push
or
test
imul
jg
clc
xor
jne
in
mov
call
jle
mov
cld
loopne
lahf
test
hlt
fisttp
add
movs
add
pop
gs
test
lods
fimul
sub
xor
js
test
xor
clc
sbb
xor
jbe
imul
dec
mov
mov
rol
addr16
xor
jmp
js
mov
jns
(bad)
xchg
dec
mov
pop
cmp
cmp
adc
retf
push
ins
or
cmp
mov
stc
test
mov
xchg
jns
(bad)
jb
sbb
sbb
sbb
fwait
or
imul
sar
sub
lods
test
xlat
or
xlat
or
xlat
or
jnp
mov
xlat
sub
rep
test
sbb
mov
adc
pop
xlat
mov
ja
movs
test
xlat
or
xlat
or
xlat
or
xlat
sub
jnp
lods
cmps
lock
mov
and
cmps
lock
mov
jne
cmps
lock
xlat
mov
es
lock
xlat
or
xlat
or
xlat
or
movs
movs
test
(bad)
sub
pop
rep
test
(bad)
or
xlat
or
sbb
mov
cmps
sbb
pop
jg
mov
xlat
or
out
pop
adc
pop
xlat
or
mov
das
push
mov
xlat
or
xlat
mov
push
xlat
or
xlat
cmp
sbb
xor
mov
jnp
lods
cmps
lock
mov
xlat
cmp
xlat
or
xlat
or
xlat
and
inc
pop
sub
out
(bad)
retf
movs
sub
jno
retf
pop
sub
pavgw
repnz
jae
pop
jmp
cmp
stos
dec
pop
in
stos
dec
pop
in
stos
dec
push
in
stos
dec
pop
in
stos
dec
pop
fadd
stc
retf
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
retf
pop
ins
stos
leave
xchg
addr16
push
ins
ficomp
xchg
push
xor
pop
in
stos
dec
pop
in
stos
dec
pop
in
mov
pop
adc
ins
jg
bound
xor
pop
in
stos
dec
pop
in
stos
dec
pop
in
pop
leave
xchg
dec
pop
in
stos
dec
pop
int3
jge
xchg
mov
int
sub
dec
pop
in
stos
dec
pop
in
stos
dec
pop
sbb
sub
in
stos
dec
pop
in
stos
dec
stos
retf
jb
mov
stos
dec
pop
in
stos
dec
push
retf
mov
scas
int3
mov
ret
in
stos
dec
pop
in
stos
dec
pop
in
stos
scas
int3
mov
cmps
stos
adc
dec
pop
in
stos
dec
pop
in
stos
dec
pop
sbb
xor
pop
mov
pop
in
stos
dec
pop
in
stos
dec
jns
lea
jg
pop
xor
xor
dec
pop
in
stos
dec
pop
rcr
sub
push
or
stos
dec
pop
in
stos
dec
pop
sbb
xchg
xor
ins
mov
ret
pop
outs
jg
pop
gs
cdq
imul
(bad)
fwait
xchg
jge
adc
jp
mov
jge
ins
cmp
mov
jns
ins
or
push
mov
mov
add
ror
aad
xchg
mov
std
retf
pop
xor
std
retf
dec
push
cmp
mov
pop
xchg
js
test
or
in
pusha
repz
lds
cmp
push
xor
xchg
sbb
lods
ret
jbe
dec
mov
add
out
jg
push
fwait
push
cmp
xchg
lods
ret
(bad)
mov
imul
jnp
mov
sti
sub
or
adc
sub
les
jle
clc
pop
inc
jnp
mov
jns
(bad)
xchg
ins
mov
pop
test
lods
sbb
or
cwde
js
test
div
mov
xor
pop
fstp
call
aaa
ss
pop
pop
sbb
(bad)
ins
jle
cmc
retf
pop
test
jbe
stc
addr16
sbb
mov
jb
enter
cld
jge
add
jbe
pop
stos
imul
add
jbe
aam
jle
add
jbe
das
loope
mov
pop
push
sbb
pop
push
sbb
pop
push
jl
jp
cmp
pop
push
sbb
pop
push
sbb
pop
jno
mov
idiv
add
jl
add
stc
call
mov
xlat
ss
cwde
icebp
cld
mov
xchg
fnstenv
mov
mov
hlt
mov
sahf
cmc
mov
cmc
ss
mov
fsubr
or
mov
call
jnp
in
jmp
pop
jbe
aam
jbe
add
jbe
das
loope
mov
pop
push
sbb
pop
push
jl
call
and
sbb
pop
push
sbb
jg
cmp
mov
loop
cli
cmp
pop
push
sbb
pop
push
sbb
pop
push
sbb
add
push
sbb
pop
push
sbb
pop
push
sbb
pop
add
sbb
and
sbb
pop
push
cli
cld
gs
dec
movs
jle
cmp
pop
push
sbb
pop
push
sbb
ss
mov
jo
movs
jge
cmp
jle
ret
mov
jge
cli
or
sbb
pop
push
sbb
cmp
push
sbb
pop
push
sbb
xchg
or
fs
xchg
shr
jmp
dec
jl
and
sbb
pop
push
sbb
pop
push
sbb
inc
inc
mov
and
sbb
pop
push
sbb
adc
ins
push
xchg
data16
aam
inc
xor
push
sbb
pop
push
sbb
scas
hlt
fild
push
push
sbb
pop
push
sbb
pop
push
sbb
(bad)
ja
and
jge
cli
or
sbb
icebp
jge
add
jbe
push
fwait
jbe
sbb
or
jbe
push
sar
sbb
jbe
dec
test
mov
xchg
sub
imul
xchg
or
mov
jecxz
xor
pop
in
stos
dec
pop
in
xchg
loopne
add
retf
stos
dec
pop
in
stos
dec
lods
mov
idiv
dec
mov
ja
mov
test
push
bound
xchg
stc
mov
ins
retf
or
add
hlt
and
in
add
test
je
test
sbb
in
pusha
or
xor
retf
mov
pop
ds
inc
jle
mov
enter
jl
out
sbb
mov
cld
retf
cli
xchg
jae
sbb
test
mov
std
retf
pop
ins
sbb
(bad)
mov
jbe
repz
push
xlat
nop
sbb
imul
xchg
mov
ins
jle
pop
sbb
dec
stc
jmp
push
popa
mov
mov
fdivr
mov
jecxz
xchg
dec
mov
mov
stos
xchg
scas
data16
cmp
repz
cli
cmp
test
jae
jns
test
repz
mov
jb
or
aaa
sti
mov
or
imul
inc
inc
pop
inc
ja
inc
ja
inc
dec
mov
pop
fsubr
mov
scas
push
inc
ja
inc
xchg
jle
pop
fsubr
fsub
push
retfw
scas
fsub
push
aad
xchg
scas
fisttp
jl
rcl
fsub
push
scas
fld
ja
inc
ja
inc
ja
(bad)
ins
pop
push
es
push
mov
lds
(bad)
in
adc
push
lods
xor
scas
(bad)
shr
push
loop
mov
lds
inc
or
lds
inc
ja
inc
ja
push
loop
mov
lds
inc
ja
inc
fbld
(bad)
push
scas
inc
ja
inc
ja
daa
or
ror
das
fnstenv
push
push
bnd
and
les
inc
ja
jmp
jbe
inc
ja
inc
ja
retf
imul
inc
ja
inc
ja
push
add
scas
or
cmps
fld
ja
inc
ja
mov
iret
es
mov
pop
loop
jmp
(bad)
das
fld
ja
inc
ja
mov
pop
call
inc
ja
inc
ja
pmaddwd
aad
lods
xlat
inc
push
inc
dec
in
jle
arpl
xor
dec
lds
xor
mov
lds
inc
ja
push
lods
mov
lds
inc
ja
inc
push
and
cs
rcr
or
stos
psrlw
inc
ja
inc
ja
inc
ja
fild
lods
and
iret
(bad)
cmp
fld
ja
inc
ja
inc
ja
add
cmc
mov
in
stos
ret
cdq
mov
pop
loop
out
(bad)
fstp
push
sbb
jo
push
jo
scas
(bad)
push
scas
dec
loop
scas
fcomp
sbb
call
mov
scas
sbb
fs
test
out
stos
fsub
push
test
jmp
shr
pop
movs
int3
in
pop
mov
shl
mov
clc
clc
dec
mov
hlt
inc
mov
ret
lock
cld
jle
hlt
retf
icebp
enter
jecxz
lods
fsubrp
pop
movs
shr
inc
movs
shl
js
into
clc
js
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
es
mov
loop
lods
in
push
mov
out
lods
ffreep
push
push
push
jecxz
scas
(bad)
push
stos
fsubp
push
scas
fsub
push
scas
fsub
push
scas
fsub
pop
mov
ficomp
scas
loopne
push
scas
(bad)
push
lods
fsub
push
scas
fsub
push
scas
fsub
push
lods
fsubrp
pop
mov
ins
jecxz
test
loop
mov
ret
fld
nop
js
jp
jae
dec
gs
fist
xchg
push
scas
fsub
push
scas
fist
mov
movs
js
cdq
add
or
stos
aam
leave
cmp
stos
sbb
loop
mov
fidivr
mov
rcr
jo
jge
icebp
pop
stos
nop
ror
push
call
or
xchg
jl
or
inc
aam
ja
div
jae
mov
movs
repnz
push
pop
mov
jb
mov
push
stos
pop
mov
int3
inc
gs
addr16
lods
scas
mov
scas
fmul
loope
outs
cmp
sti
fcomp
inc
sti
les
ja
movs
sub
popa
jecxz
mov
mov
mov
sbb
and
in
outs
and
xchg
fsub
mov
out
cmp
retf
add
mov
sub
popa
jecxz
repnz
(bad)
adc
mov
rol
cmp
dec
jecxz
fs
retf
leave
mov
fcomi
mov
mov
iret
cmp
int3
push
clc
pop
lods
push
imul
xchg
xchg
imul
mov
mov
dec
push
pusha
or
push
mov
out
xchg
xchg
ins
dec
jmp
xor
or
stos
add
in
pop
imul
shr
mov
jmp
pop
jg
cmp
xor
push
cmp
hlt
les
xchg
in
or
mov
test
imul
test
jg
imul
xchg
xlat
loop
cs
fnstcw
xor
sbb
xchg
sbb
jge
out
test
arpl
neg
retf
cmp
pusha
mov
stos
push
jne
pushf
enter
jne
or
jne
mov
mov
dec
adc
jmp
ins
push
wrmsr
jbe
in
cmp
pop
lock
cmps
int3
or
loopne
dec
sbb
pop
jle
xchg
jbe
mov
lods
in
jecxz
data16
or
or
scas
mov
pusha
lods
sub
ins
test
rcr
pop
aaa
or
jp
les
cmp
push
mov
sbb
fcomp
mov
jp
inc
sti
int
or
pop
xchg
mov
dec
jbe
fidivr
xchg
imul
dec
div
ss
mov
xor
(bad)
imul
sbb
repnz
and
mov
jb
cmp
out
push
mov
nop
movs
cmp
or
jo
(bad)
jmp
push
loopne
push
mov
cmps
or
xor
mov
push
and
sbb
mov
xchg
push
mov
pop
movs
test
jg
mov
or
push
inc
pop
and
lahf
fst
mov
cli
inc
and
stc
mov
rcr
int3
dec
loop
jle
mov
and
pusha
ss
mov
daa
pop
bound
repnz
or
pop
xchg
mov
dec
div
jb
dec
jecxz
sbb
jnp
jae
in
cmc
mul
mov
jp
in
imul
dec
xor
sub
shl
fisub
and
cmps
into
fst
cli
cmps
or
xchg
xor
jge
mov
mov
test
push
sbb
pop
pop
(bad)
pusha
or
lds
xor
les
mov
icebp
mov
dec
or
aam
dec
(bad)
adc
cmp
xor
(bad)
xchg
les
cmps
(bad)
dec
xor
out
fsub
(bad)
sbb
sbb
data16
sbb
inc
xor
push
scas
enter
xchg
and
test
jnp
xchg
clc
loop
sub
jmp
adc
scas
fld
cld
xchg
xchg
jl
ret
das
mov
mov
add
pop
cmps
out
mov
pushf
jecxz
mov
add
cwde
xor
cmc
scas
(bad)
fs
aaa
popa
jp
sub
jb
ins
inc
repnz
out
inc
retf
xchg
punpckldq
lock
push
bound
call
ret
jp
call
dec
loop
iret
mov
xchg
mov
push
scas
clc
dec
dec
loope
ins
std
pop
xchg
scas
daa
fdiv
pop
movs
shl
push
lods
fsub
push
scas
fsub
push
cmps
fsubrp
push
stos
aam
push
mov
cli
retf
repnz
ss
loopne
scas
fucomi
push
add
mov
mov
out
dec
and
hlt
clc
lahf
aam
cmps
(bad)
ss
mov
mov
mov
pop
repz
or
ins
loop
in
loop
enter
mov
out
xchg
mov
hlt
rcl
ja
ds
jae
sub
in
sbb
xchg
sti
mov
cs
nop
mov
sahf
mov
jnp
jmp
xchg
jle
jecxz
aad
push
cs
shr
mov
je
shl
pop
stc
dec
leave
repz
pop
mov
dec
imul
push
test
mov
pop
enter
lods
cs
shr
mov
movs
push
xchg
retf
(bad)
lods
mov
pop
idiv
ds
gs
ret
aam
sub
inc
sub
(bad)
xchg
scas
outs
nop
pop
and
cmc
les
shr
sbb
jmp
jnp
test
test
dec
inc
(bad)
jmp
sbb
xchg
ret
sub
cmps
sub
inc
jb
or
popf
mov
mov
retf
jge
retf
mov
mov
xchg
rcl
cmp
lock
and
adc
retf
out
mov
ja
stos
ins
mov
test
jmp
out
pop
inc
cmps
cmp
daa
jecxz
xlat
xchg
dec
shl
xchg
dec
push
jg
mul
jg
cld
mov
scas
fs
fcomp
sub
ja
movs
pusha
push
cdq
mov
pop
dec
loop
pop
das
retf
add
loope
retf
mov
or
push
dec
scas
pop
xor
clc
dec
loope
xchg
fisubr
leave
neg
mov
cld
pop
div
mov
xchg
xchg
and
repz
xchg
and
scas
xor
sbb
cmp
call
cld
popf
shl
adc
pop
retf
cs
out
fs
xor
and
mov
sbb
push
lods
fsub
pop
mov
fsub
push
scas
fsub
push
stos
fsubp
pop
movs
aam
xor
clc
(bad)
adc
mov
retf
pop
inc
xor
cmc
and
sub
adc
jecxz
lods
fsubp
push
rcr
inc
popa
and
mov
ds
xor
fstp
out
fnsave
je
or
ss
jmp
mov
fidivr
lea
pusha
enter
sahf
ja
sbb
jmp
sub
xchg
mov
mov
mov
je
fnsave
sub
xor
and
data16
adc
fldenv
mov
mov
mov
push
cli
jl
and
mov
jg
pop
mov
in
(bad)
mov
dec
cmp
cmp
(bad)
aad
cld
sbb
loopne
xor
sbb
sti
sub
and
sbb
je
jp
mov
dec
aam
out
xor
mov
mov
loop
adc
mov
xor
bound
mov
or
and
pop
ret
mov
adc
jno
push
mov
pop
call
add
push
dec
popa
cmpxchg
sbb
inc
retf
out
mov
pop
or
xchg
pop
or
push
adc
xor
dec
inc
call
inc
pop
repnz
sub
psubusb
jae
movs
std
or
xchg
cs
push
xchg
js
fsqrt
push
pop
aas
xchg
xor
nop
test
jnp
aaa
sbb
dec
cmp
sbb
repz
into
or
mov
inc
je
mov
iret
loop
popf
adc
out
lods
mov
cld
pop
dec
pop
call
mov
add
jecxz
fwait
(bad)
aaa
rcl
mov
ins
cmp
psadbw
pushf
shl
out
mov
push
add
popa
xchg
addr16
ror
add
loope
das
mov
adc
xchg
jp
push
out
data16
and
cmp
cmp
(bad)
repnz
xchg
test
jle
pusha
adc
(bad)
inc
rcl
sub
jmp
push
aas
jle
in
sbb
mov
push
cs
push
test
loop
xchg
push
push
out
retf
xor
jmp
pop
es
das
(bad)
fsubr
mov
sbb
das
mov
push
(bad)
mov
mov
cmp
jge
stos
cmp
int
ret
mov
and
repnz
dec
add
push
test
dec
adc
aas
push
sub
test
adc
int3
cmp
jb
mul
fnstsw
mov
xlat
pop
mov
dec
xchg
mov
repz
std
ss
jg
std
psrld
pop
call
test
scas
movs
mov
cmp
add
xor
outs
repnz
stc
retf
cmc
mov
mov
inc
inc
jmp
mov
ds
mov
enter
imul
mov
cwde
or
mov
scas
scas
mov
ret
jnp
scas
mov
xchg
je
or
mov
mov
xchg
cs
adc
cli
pop
pusha
xchg
popa
adc
pop
sti
je
shr
pop
cli
dec
cli
inc
cmp
xchg
xor
jmp
add
shr
sar
fidivr
aas
shl
or
mov
mov
mov
or
and
add
jb
(bad)
fsubr
scas
(bad)
pop
mov
fsub
push
scas
fsub
push
lods
fsub
push
cmps
cli
xor
xor
mov
js
ins
jecxz
lods
fsub
push
rcr
dec
dec
jmp
pop
repnz
leave
and
out
cmp
js
(bad)
cmp
data16
int3
out
sbb
add
add
gs
call
repz
fsub
dec
data16
les
pop
lds
mov
mov
clc
popa
pop
fwait
inc
sub
mov
pushf
popa
push
jge
imul
cs
outs
daa
cmp
out
add
enter
cmps
icebp
mov
xchg
les
jmp
sub
loope
cld
dec
cmp
cmp
mov
push
jecxz
xchg
jp
loop
mov
inc
dec
jnp
push
xchg
jne
jecxz
jl
sti
cld
into
cld
inc
test
neg
sti
mov
sub
mov
nop
xchg
imul
inc
pop
adc
cmp
jmp
pop
test
loopne
add
ficom
inc
fld
outs
pop
add
cmps
test
lods
retf
mov
bound
adc
jle
push
jmp
jecxz
pop
jle
sbb
movs
push
scas
cmp
jns
sub
stos
retf
outs
xchg
das
sbb
mov
loop
retf
(bad)
(bad)
jle
dec
push
cmp
cs
mov
or
retf
movs
jl
mov
sbb
mov
ja
sbb
dec
add
cmp
test
mov
xchg
push
into
cli
xchg
fnstenv
gs
dec
jae
and
cld
iret
call
mov
cmps
in
scas
cmp
outs
mov
and
mov
or
jbe
test
lds
lds
dec
out
ja
repnz
push
sub
jo
xchg
repz
les
iret
add
inc
pmaxsw
pop
aaa
adc
fcomp
cmps
int3
out
pop
mov
fsub
push
stos
(bad)
push
cmps
cli
(bad)
adc
clc
les
int3
pop
inc
mov
fiadd
push
sub
jp
pop
test
es
dec
mov
jecxz
lods
(bad)
pop
rcr
je
adc
dec
adc
cmp
sub
cmp
mov
add
cwde
bound
scas
jne
sar
pop
lods
and
dec
pop
push
push
sub
mov
xor
ins
outs
xchg
push
(bad)
rcl
scas
scas
sahf
push
mov
and
pusha
sub
xor
iret
(bad)
bnd
cmp
sub
jo
jl
hlt
mov
bound
stos
sbb
push
adc
ins
or
inc
jbe
push
call
xchg
mov
sahf
sub
lock
(bad)
dec
mov
test
xchg
adc
(bad)
data16
neg
(bad)
lea
fistp
mov
sbb
neg
loope
ds
jmp
je
adc
jg
(bad)
mov
lea
cmc
push
sub
add
fwait
xlat
pop
call
aam
repnz
adc
adc
adc
hlt
fistp
xor
and
xchg
push
lea
cdq
das
data16
dec
in
lods
js
cmp
mov
retf
and
mov
pop
jl
add
or
xlat
push
ror
push
fsub
fimul
lock
push
cmp
pop
push
addr16
sub
inc
mov
(bad)
clc
or
jecxz
adc
xor
dec
mov
clc
pop
call
pop
jnp
test
out
pop
mov
add
cmp
mov
jb
xor
sub
cmp
push
div
or
outs
test
lock
xor
jg
push
xchg
sub
loop
push
xor
mov
sbb
dec
push
movs
cmp
test
xor
std
adc
out
sbb
add
fnsetpm(287
cmp
or
xor
scas
add
jl
or
and
xlat
sub
push
aas
push
dec
shl
(bad)
fmulp
test
fmul
outs
jbe
push
add
mov
outs
(bad)
fild
inc
adc
push
pop
sbb
push
jns
inc
jecxz
add
cmp
xlat
cli
adc
or
push
cmps
mov
mov
fdivr
dec
shl
xchg
fcomp
shl
repnz
cmps
cmps
inc
mov
or
add
aad
xor
dec
leave
push
pop
or
es
xor
fisubr
(bad)
or
cmc
mov
dec
shr
jnp
mov
in
les
loope
lea
imul
mov
jbe
add
fnstcw
retf
pusha
push
aas
stos
fbstp
je
retf
leave
inc
inc
mov
(bad)
mov
imul
xor
jge
leave
(bad)
mov
pop
inc
dec
pop
jmp
add
xchg
xor
add
cmp
lea
adc
repz
pop
push
cmp
fimul
xchg
mov
or
lods
mov
mov
jmp
std
mov
loope
inc
in
xchg
pavgb
lea
dec
(bad)
cld
ins
int3
and
or
data16
and
dec
ss
dec
cld
mov
lock
movs
sahf
mov
test
imul
(bad)
ja
jnp
fcom
jmp
inc
mov
(bad)
jmp
mov
mov
or
add
les
popf
xchg
add
and
jo
fsub
push
movs
fsubrp
push
test
loopne
scas
fsub
push
lods
cli
loop
into
mov
mov
adc
pop
pusha
rep
cmp
push
scas
fistp
scas
mul
out
xchg
push
cmp
sub
ins
adc
mov
xlat
cmp
or
xlat
movs
sti
dec
popa
push
imul
xchg
outs
pop
push
adc
fcom
sbb
shl
mov
mov
int3
dec
or
push
dec
int3
push
jbe
inc
stos
jle
sbb
icebp
sub
sub
add
div
into
mov
dec
jne
hlt
push
add
mov
dec
mov
pusha
and
repz
inc
push
les
or
add
pop
jmp
ret
jle
pushf
es
stos
sub
pop
sub
out
popa
in
pushf
jg
or
mov
cmp
call
enter
sbb
call
jmp
adc
sbb
pop
push
cmp
ja
xchg
shl
or
into
mov
jbe
mov
xor
fcmovne
cld
xor
pop
(bad)
pop
mov
sub
out
cmps
rcl
ds
or
dec
sub
je
in
test
cwde
cmp
dec
mov
jnp
sbb
jl
lods
add
repnz
je
pop
mov
test
ds
lods
fisubr
ja
mov
xor
mov
(bad)
mov
inc
mov
aam
lods
cld
push
clc
mov
cmp
retf
or
jle
inc
(bad)
movs
imul
bound
dec
dec
icebp
inc
push
out
test
dec
lds
pushf
fs
mov
mov
push
into
jb
aaa
mov
sar
das
xchg
sub
jmp
xor
stc
xor
dec
dec
dec
sub
out
aad
adc
jns
out
xchg
mov
dec
sub
push
int3
or
pop
push
stos
or
outs
or
scas
leave
hlt
rcr
jge
dec
loopne
daa
cmp
enter
inc
out
jmp
popa
mov
mov
aaa
sub
xor
cld
jecxz
xor
out
mov
mov
mov
cwde
pop
push
sbb
and
sub
inc
lds
mov
jge
pusha
loope
mov
cmc
dec
xor
stos
add
stc
sbb
lods
or
dec
push
js
in
in
cmp
hlt
cs
jge
in
push
rcl
adc
xor
ins
int3
shl
pushf
mov
lods
aas
std
shl
pop
push
push
xchg
stos
iret
stos
cdq
xor
rcl
mov
in
scas
shl
push
sbb
cmps
imul
mov
fdivr
(bad)
lods
fsub
push
test
loop
mov
push
scas
fsub
inc
add
xchg
pop
fsub
push
scas
fist
out
or
push
scas
fcomp
shr
scas
jge
das
fsub
xchg
cmp
pop
loop
fsub
ret
(bad)
fst
into
shr
fsub
cwde
ins
outs
mov
ja
mov
mov
jmp
xchg
add
js
sbb
mov
repz
xor
xor
ficom
loop
or
or
cld
cmp
bound
sub
ds
aad
fsub
push
xor
lods
popf
outs
pop
cdq
ss
dec
into
fimul
cdq
jl
mov
jae
enter
jmp
xchg
scas
fdiv
mov
scas
shl
in
dec
jecxz
and
lahf
cmp
push
stos
xchg
cmp
(bad)
sub
push
scas
fdiv
push
scas
fldenv
jl
fsub
inc
push
(bad)
push
mov
push
loop
scas
mov
push
scas
add
fidivr
scas
fsubr
sub
sbb
push
scas
(bad)
pop
mov
fsub
push
scas
fsub
push
mov
mov
adc
cmp
jae
pop
inc
xchg
push
ins
jecxz
lods
fsubp
push
sar
and
fwait
cmps
imul
cmp
aas
(bad)
and
cmp
imul
fs
adc
xchg
push
pop
(bad)
and
cmp
ins
imul
stos
push
xchg
sub
and
and
mov
sbb
movs
pop
add
(bad)
sti
ret
mov
inc
xor
sbb
mul
or
out
sub
adc
jl
xchg
jae
cmp
dec
gs
(bad)
mov
pop
pop
outs
fisttp
arpl
arpl
shl
ret
in
call
inc
add
popa
inc
mov
mov
clc
jmp
cmps
in
cmp
mov
addr16
sbb
movs
sbb
(bad)
data16
push
stc
in
sub
fcmovu
push
movs
and
mov
or
fxch
pushf
xor
es
data16
ror
mov
je
aad
es
jmp
retf
or
nop
sub
aas
xor
rdpmc
xor
in
adc
popa
mov
xchg
aaa
bound
dec
nop
sbb
mov
pushf
pop
enter
or
xor
dec
and
lods
jge
mov
mov
in
or
sahf
in
call
icebp
aad
inc
movs
or
in
push
dec
in
inc
xchg
lock
std
rcr
add
push
(bad)
test
mov
cmc
jnp
add
call
jp
pop
mov
fucom
adc
hlt
sbb
xchg
repnz
icebp
outs
call
mov
jmp
fdivr
aad
sbb
pop
mov
mov
or
cmc
push
enter
and
mov
xchg
push
(bad)
pop
sbb
popf
je
mov
in
mov
cmp
sub
movs
adc
cmp
push
gs
inc
stos
jb
dec
popf
into
sbb
fdivr
and
hlt
fsubrp
sbb
adc
dec
test
or
call
mov
fcom
movs
or
outs
fsubr
mov
inc
pushf
scas
push
cmp
or
cmp
test
idiv
sub
lea
dec
sbb
push
stc
inc
ins
xchg
aas
push
and
repnz
lods
in
ins
adc
add
addr16
mov
adc
dec
mov
retf
add
pop
vpmaxsw
push
inc
pushf
cli
mov
leave
jb
leave
loopne
xor
dec
adc
jae
pop
or
js
popf
bound
fisttp
dec
ins
mov
inc
daa
test
movs
test
xor
sbb
or
jmp
(bad)
out
mov
inc
mov
inc
fdiv
push
mov
mov
out
daa
adc
loop
and
adc
push
lods
sahf
cmp
(bad)
jmp
xor
scas
scas
xchg
fadd
xor
out
sub
jne
push
push
jecxz
mov
loop
stos
shr
push
stos
fsubp
push
scas
fsub
push
scas
(bad)
jb
fwait
adc
clc
mov
mov
pop
loopne
ins
cmp
scas
sbb
repnz
stos
(bad)
mov
inc
lods
repnz
das
and
mov
sub
jo
test
(bad)
shl
push
xor
lods
lods
pop
fisttp
mov
call
popa
dec
dec
aas
sbb
cmp
sub
or
shl
div
cmp
daa
pop
call
jb
and
cmc
inc
xchg
out
xchg
arpl
xchg
and
adc
outs
dec
mov
inc
sub
add
rcl
neg
lock
into
pop
pushf
lods
pusha
cs
fisub
cli
or
push
add
popf
clc
inc
in
mov
fadd
mov
add
sbb
mov
xchg
xor
enter
cmp
cdq
or
or
jg
loope
sti
out
add
sbb
xor
or
pop
mov
outs
cld
dec
or
iret
retf
test
jl
lahf
(bad)
(bad)
add
movs
xchg
lods
lods
iret
sbb
lea
xchg
loope
dec
dec
cld
mov
popf
call
aaa
cmp
loopne
ret
lods
(bad)
cmp
test
lahf
dec
lods
loope
cwde
movs
push
mov
push
jmp
in
ss
xchg
shr
sbb
mov
(bad)
adc
movs
fs
inc
adc
(bad)
jmp
sbb
mov
outs
sbb
adc
sub
test
or
and
mov
outs
daa
ret
imul
movs
cmc
mov
adc
pop
inc
outs
and
adc
ja
jne
in
imul
mov
leave
inc
lahf
or
lds
jo
ret
cmp
pop
cmc
push
data16
pop
push
in
dec
adc
fsub
ret
push
hlt
pop
mov
sbb
xor
loop
loopne
stos
(bad)
push
stos
fsub
push
lods
fsub
push
scas
fsub
push
mov
mov
mov
sti
adc
mov
cmps
ret
call
sub
jmp
jae
mov
xlat
enter
and
push
and
mov
je
mov
add
enter
je
pop
in
leave
adc
call
hlt
(bad)
or
fadd
pop
pushf
jae
and
int3
pop
and
cmps
in
(bad)
ret
pop
(bad)
ret
xchg
sub
in
pop
jae
cmp
mul
jp
lds
xor
pushf
dec
xchg
add
xor
jmpw
gs
add
shr
mov
repnz
shl
rcr
pushf
sbb
lock
sbb
push
in
mov
xchg
adc
jmp
add
js
inc
inc
add
out
ret
les
cmps
push
dec
or
push
cmp
mov
jno
out
pop
out
pop
in
jae
(bad)
jno
mov
mov
int3
cmps
mov
adc
popf
(bad)
ror
inc
xor
adc
repz
adc
xor
fwait
shr
es
push
mov
cmp
clc
test
int3
and
inc
mov
shl
and
xchg
jbe
cli
xchg
mov
mov
add
ror
leave
dec
jp
cli
sub
sahf
xchg
pop
cmp
into
lea
movs
outs
gs
ss
test
inc
pushf
or
cmp
call
xor
adc
cld
dec
push
xor
and
add
sbb
lds
adc
ins
add
sbb
or
lds
pop
cmps
xor
lea
fcom
mul
xor
jbe
jnp
ss
inc
sti
inc
and
cmps
xchg
aas
inc
sub
stos
ret
(bad)
fidivr
inc
fsubp
mov
pop
sbb
call
dec
in
inc
movs
and
stc
jmp
push
ret
dec
push
push
or
adc
push
iret
or
stos
sub
pop
(bad)
pop
add
xchg
movs
and
cmp
jno
jmp
sub
cmps
aam
(bad)
add
mov
js
shl
jnp
cmps
call
sub
fs
rcr
mov
mov
(bad)
mov
pop
ret
call
mov
xchg
xor
sbb
pop
inc
mov
xor
fist
sbb
leave
data16
shl
stos
push
fcomp
add
aam
push
mov
mov
enter
fadd
call
pop
jmp
ficom
dec
cdq
ins
call
in
neg
or
jnp
or
or
or
xchg
mov
and
adc
in
cmp
ret
ds
mov
aam
imul
es
inc
jg
ret
xchg
lea
sub
mov
jns
cmps
js
inc
scas
imul
aam
xchg
mov
mov
jmp
mov
mov
jecxz
xchg
cs
pop
xor
push
jmp
mov
iret
retf
xor
repz
(bad)
enter
out
popaw
out
dec
data16
call
sbb
cmps
ins
mov
cdq
xchg
jmp
xor
inc
push
cmp
dec
cmps
cmp
sub
pop
ret
sahf
repz
sub
sbb
xlat
fld
fs
ins
es
push
retf
pop
cmp
sub
jb
adc
(bad)
and
mov
aas
adc
outs
adc
clc
and
jns
(bad)
mov
jl
loop
jae
pop
retf
pop
daa
das
add
push
dec
or
xor
inc
mov
imul
add
adc
mov
push
push
pop
pop
es
mov
call
sar
cmp
and
cmps
mov
dec
and
clc
pop
xchg
fwait
mov
hlt
cmp
sbb
xchg
jno
repnz
jl
ret
xchg
push
xchg
dec
sub
dec
adc
dec
in
and
sbb
scas
sbb
fadd
les
dec
outs
push
lods
(bad)
push
fdiv
scas
es
push
sub
in
stos
fsubp
push
test
in
cmps
fsubp
pop
movs
enter
shr
inc
mov
int3
cli
dec
mov
(bad)
(bad)
jo
(bad)
ror
jl
cli
les
repnz
sar
(bad)
js
lock
scas
pop
loopne
cmps
shr
pop
movs
retf
mov
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
retf
fadd
inc
scas
mov
add
cli
loopne
mov
sbb
scas
loopne
push
stos
fsub
push
lods
fsub
push
scas
fsub
push
scas
fsub
pop
mov
leave
out
push
push
jecxz
lods
fsub
push
lods
(bad)
push
scas
fsub
push
scas
fsub
push
scas
fsubr
push
cmps
aam
push
mov
fsubp
push
stos
clc
in
scas
fchs
test
fbld
sub
push
xor
xchg
mov
pop
xor
pop
iret
das
ins
fsubr
inc
mov
loope
scas
mov
inc
sub
pop
test
retf
or
out
or
add
dec
movs
add
(bad)
bound
inc
pushf
jne
mov
and
xchg
sub
xor
mov
inc
cmp
dec
cmp
dec
jge
in
pop
adc
jo
pop
(bad)
mov
scas
hlt
mov
or
push
cmp
mov
mov
jne
shl
call
stos
mov
pushf
lock
inc
rdpmc
pop
pop
shr
dec
(bad)
jmp
stos
(bad)
mov
jns
mov
xchg
repz
retf
addr16
in
mov
or
or
sub
add
pop
xor
std
loop
jae
mov
cmp
(bad)
popa
and
stos
jmp
fisubr
ins
leave
cmp
jnp
sti
push
sub
lods
push
jae
or
push
test
ins
punpckhbw
xor
imul
or
push
xchg
and
mov
std
xor
sub
pusha
mov
xchg
push
pop
lahf
js
lods
dec
dec
cmc
cmp
call
gs
inc
sub
sub
adc
dec
es
jle
mov
jmp
repnz
add
mov
jl
inc
xor
xor
cmp
test
add
imul
jmp
ja
lods
dec
or
scas
xlat
jl
sub
(bad)
lock
push
into
test
std
sbb
out
test
dec
jno
xlat
add
adc
rcl
jmp
xor
or
inc
pushf
inc
out
cmps
push
ins
mov
pop
jmp
mov
dec
jg
arpl
jno
sbb
push
pop
shl
add
xor
mov
or
and
mov
imul
or
in
dec
in
jbe
cmp
or
sti
imul
push
xchg
mov
retf
es
mov
aad
jnp
retf
jmp
sub
scas
into
ds
int3
add
mov
aam
push
push
shl
inc
clc
lock
in
imul
lods
div
out
pop
inc
div
into
xchg
inc
ret
adc
push
sbb
pop
fistp
xchg
jp
mov
sbb
mov
jle
xchg
sbb
imul
xor
push
aad
pusha
fld
pop
shl
icebp
sbb
mov
jecxz
or
retf
jl
(bad)
pop
adc
in
push
iret
pop
sbb
push
mov
cmps
loop
and
push
jecxz
iret
jmp
scas
mov
cs
enter
mov
fwait
mov
dec
mov
lea
inc
into
mov
je
jne
addr16
dec
pop
sbb
dec
ret
mov
jns
gs
adc
xchg
(bad)
adc
pop
jl
sahf
mov
enter
scas
retf
sbb
cmc
les
mov
sbb
repz
(bad)
clc
ficomp
jg
jl
movs
mov
das
ficomp
dec
movs
mov
or
adc
std
mov
das
jnp
ja
call
pop
int
sbb
shl
xor
xchg
adc
push
les
jno
cdq
shl
mov
iret
out
stos
adc
cmc
sbb
mov
adc
fist
into
adc
dec
push
add
fist
mov
daa
mov
cli
bound
mov
(bad)
jmp
pop
adc
adc
cmp
jne
int
test
sbb
dec
addr16
repnz
pop
pop
in
(bad)
loopne
out
and
xor
cdq
xor
lods
or
loop
xchg
pop
hlt
out
xor
xor
jecxz
rcl
pop
das
stc
fldcw
adc
js
push
stos
sar
push
lds
daa
mov
mov
nop
in
jmp
out
mov
mov
cld
pusha
sbb
mov
sar
inc
and
in
jne
lock
aam
adc
dec
mov
sub
cli
and
ja
mov
enter
(bad)
pop
mov
dec
fbld
and
(bad)
or
ret
imul
loop
stos
fsub
push
cmps
fsubp
push
lods
fsub
push
scas
fsub
pop
stos
shl
pop
scas
cli
(bad)
js
dec
adc
xchg
sbb
scas
enter
fucomi
push
pop
dec
adc
bound
ja
aaa
adc
(bad)
adc
xchg
dec
call
test
sub
icebp
pop
push
ds
inc
xchg
(bad)
jmp
fs
pop
lea
(bad)
loop
stos
jnp
pop
jne
std
out
jmp
(bad)
clc
push
push
fxtract
push
gs
leave
xchg
mov
jmp
adc
mov
cmp
sub
mov
popa
sbb
dec
in
sbb
fucomip
cmp
icebp
sbb
cmp
sbb
icebp
repnz
jl
add
add
les
push
data16
js
mov
sub
add
out
push
jmp
stos
mov
or
add
ds
rol
and
sti
pop
in
add
(bad)
xchg
fisubr
push
sub
gs
ror
popf
in
ret
cld
mov
push
push
cmp
jns
add
dec
les
je
inc
ret
cdq
jecxz
mov
dec
inc
mov
push
add
or
jb
sub
lods
mov
xchg
aam
xor
dec
cli
aaa
popf
dec
ret
ins
ins
lea
in
scas
rep
and
sbb
fs
add
mov
dec
mov
popa
push
pop
fisubr
mov
popa
xor
out
or
ins
inc
mov
xchg
mov
sub
(bad)
shr
add
cs
and
das
xor
xchg
enter
jp
xor
jb
mov
jp
push
xchg
add
in
inc
jg
jl
mov
fild
xor
call
repnz
mov
dec
movs
or
ins
stos
imul
add
fdivr
shl
jecxz
mov
test
imul
mov
aam
sbb
iret
loopne
mov
ror
xor
pop
fs
int
imul
pop
shl
cmc
cld
adc
out
lods
shl
push
ret
in
les
sub
(bad)
pusha
add
inc
push
and
popf
cs
(bad)
or
mov
push
fidiv
mov
mul
ffree
sub
lds
xor
iret
xor
jb
jg
push
imul
inc
js
mov
lods
pop
or
(bad)
jae
imul
div
in
lahf
les
test
add
sbb
or
pop
fcom
int3
fs
push
ret
and
sub
mov
in
push
and
sbb
pop
clc
xchg
dec
jnp
stc
fcomp
jae
inc
pop
scas
or
test
xchg
mov
pop
mov
mov
mov
jmp
test
fst
jg
(bad)
xchg
mov
dec
and
and
rcr
pop
ins
sub
and
mov
mov
jecxz
sub
cmp
pop
mov
mov
(bad)
mov
jmp
xlat
in
xor
scas
or
cmps
or
data16
in
cmp
and
jmp
daa
mov
mov
dec
cmc
into
pop
mov
mov
fidivr
adc
sti
xchg
sbb
(bad)
adc
pop
dec
sti
lods
in
dec
mov
sbb
pop
add
xchg
mov
xchg
inc
xor
test
test
fwait
and
jge
mov
and
jp
int3
jne
pop
idiv
xchg
sbb
sbb
dec
push
cmp
ins
hlt
outs
rcl
pop
dec
fstp
stc
dec
sahf
jo
nop
dec
leave
jne
out
and
sbb
pop
inc
mov
cmps
add
jnp
sbb
jp
int3
mov
sub
inc
cdq
jl
mov
xchg
aad
lods
mov
mov
dec
dec
push
cmp
mov
ror
jg
cwde
adc
dec
call
xchg
movs
xchg
push
fadd
pop
inc
jmp
lods
sbb
fs
ficom
mov
es
or
dec
push
pop
cmp
xchg
rcl
jae
push
dec
cld
push
mov
repz
jp
adc
jbe
sahf
mov
mov
push
scas
(bad)
shr
in
mov
mov
xor
adc
xchg
and
test
out
out
clc
mov
or
push
adc
mov
icebp
add
xor
std
popa
pushf
mov
gs
xchg
jae
mul
mov
jb
in
dec
mov
enter
test
aad
btr
ins
xchg
out
hlt
adc
jne
(bad)
mov
jl
push
xor
mov
sbb
mov
cmp
mov
dec
jecxz
cli
and
inc
adc
inc
aaa
sbb
(bad)
std
bound
imul
sbb
mov
push
fstp
pop
push
loopne
scas
mov
sub
cmp
and
adc
ins
jns
mov
test
iret
mov
stc
retf
mov
(bad)
xchg
addr16
(bad)
loop
and
imul
loop
stos
(bad)
push
cmps
shr
push
movs
(bad)
push
scas
fsub
push
scas
faddp
pop
mov
cmps
rol
sahf
xor
cmp
shr
jge
repnz
ins
jecxz
lods
fsubp
push
rcr
adc
ja
pusha
sbb
out
test
inc
ret
scas
xchg
sbb
push
lods
inc
xor
or
loopne
and
pushf
aaa
lock
(bad)
ss
or
push
xlat
pop
push
jl
lds
mov
lods
pop
mov
shr
pop
pop
rcr
mov
dec
push
push
sbb
mov
rol
loope
int3
mov
jmp
dec
cmp
pusha
jge
jb
aad
push
sbb
pop
mov
into
jecxz
and
lods
enter
mov
out
inc
movs
rcr
icebp
jl
xchg
sahf
jecxz
not
aam
jmp
push
mov
jge
adc
repnz
fsub
lahf
xor
pop
mov
lahf
nop
or
push
add
aaa
dec
pushf
adc
(bad)
jno
xchg
(bad)
jle
js
pop
lds
xchg
xchg
push
test
gs
sbb
(bad)
daa
int
enter
outs
sub
mov
dec
aaa
mov
pop
sar
faddp
adc
push
mov
mov
jns
sahf
sar
mov
pop
inc
dec
or
mov
adc
push
mov
xor
mov
std
in
idiv
out
and
cmps
and
popf
test
jbe
sbb
sbb
mov
stos
lock
test
jae
adc
xchg
push
jmp
popa
daa
test
cmc
push
fscale
cmp
mov
inc
mov
pop
popf
pusha
cli
sbb
aas
push
cmp
jmp
xchg
lock
sbb
or
or
mov
mov
pop
cs
xor
sbb
ficom
outs
jecxz
dec
sub
out
sub
add
cmp
xchg
xor
cmp
lea
mov
push
jae
xlat
mov
xchg
addr16
das
ss
fcom
add
movs
imul
pop
mov
xchg
outs
push
dec
scas
nop
std
sbb
pop
ficom
ret
jge
inc
dec
mov
push
or
mov
jno
retf
in
fcomp
dec
or
push
retf
sub
(bad)
retf
test
frstor
cld
sbb
jae
popa
clc
fldcw
push
jl
js
aas
enter
addr16
push
add
retf
(bad)
pop
push
pop
dec
mov
rcl
mov
(bad)
out
pop
push
inc
jle
xor
jns
sub
cmp
push
lods
sahf
les
test
xor
hlt
sbb
fwait
in
leave
adc
(bad)
lock
movlps
dec
jp
pop
js
xchg
aaa
aas
popa
mov
rol
in
test
or
jnp
js
mov
add
pop
xchg
inc
lods
sbb
jge
inc
adc
call
mov
iret
dec
mov
mov
(bad)
jae
iret
loop
int3
aad
enter
inc
mov
cmp
das
fcom
mov
sar
push
outs
dec
in
mov
cwde
ss
mov
pop
dec
out
daa
and
sub
push
(bad)
imul
(bad)
(bad)
mov
xor
adc
ja
sub
jnp
daa
jecxz
inc
ins
inc
jnp
sub
pop
inc
in
jmp
jl
push
(bad)
and
fldcw
and
repz
leave
sbb
dec
sub
and
mov
(bad)
(bad)
xlat
xor
pushf
ret
mov
ds
in
push
iret
mov
jl
cmp
adc
gs
xchg
dec
popa
in
enter
xchg
dec
pop
cmps
pusha
inc
in
jmp
pop
dec
xor
sar
in
jns
adc
fist
into
pop
fmulp
xchg
sbb
xor
add
fwait
std
jnp
jne
icebp
mov
mov
inc
loop
prefetchw
mov
xchg
lods
(bad)
and
xchg
jmp
pop
adc
ret
push
xor
shl
pop
dec
rol
dec
(bad)
xor
loopne
rol
nop
xchg
popf
arpl
add
jge
mov
popa
jle
dec
sbb
adc
jmp
in
push
sub
je
jl
or
and
(bad)
andnps
mov
mov
or
sub
add
mov
push
(bad)
push
hlt
(bad)
cmp
mov
sub
imul
mov
inc
sub
add
xchg
and
lea
xchg
add
xor
test
sbb
ret
add
xchg
pop
mov
jae
push
pop
pop
dec
mov
inc
leave
push
inc
cwde
mov
push
or
aas
inc
addr16
pop
push
ins
scas
push
in
shr
cli
cmps
jae
icebp
mov
jne
xchg
test
pop
pop
lods
leave
lea
mov
mov
lods
xor
mov
loope
retf
pop
pop
jge
push
fcomp
scas
mov
push
lods
shl
push
stos
shr
pop
test
loopne
scas
fsub
push
scas
fsub
pop
mov
(bad)
adc
pop
retf
sbb
push
into
pop
loopne
out
test
cs
adc
jecxz
lods
fsub
push
rcr
adc
leave
jmp
add
cmovl
shr
mov
pushf
loopne
xchg
imul
and
rol
push
push
and
jmp
cmc
xchg
xchg
inc
or
add
jmp
adc
cmp
mov
or
fdiv
jne
add
ins
outs
out
out
dec
fsubr
inc
mov
(bad)
lock
cli
mov
loopne
popf
inc
leave
mov
shr
test
fwait
test
into
inc
xchg
addr16
(bad)
push
outs
jg
cmp
mov
mov
mov
rol
in
repnz
add
es
push
repnz
push
popf
hlt
lds
jnp
inc
mov
jmp
mov
push
adc
enter
or
dec
mov
cmps
stc
sar
sbb
adc
dec
(bad)
fild
(bad)
pop
adc
leave
fs
sar
les
imul
push
xchg
dec
out
cmps
sbb
punpcklbw
jg
sub
push
dec
mov
jno
sbb
push
cmc
xchg
cmp
test
hlt
aam
push
aam
cmp
outs
or
pop
push
out
dec
pop
jo
push
and
imul
and
enter
cmc
fld
xlat
adc
sub
pop
xchg
test
push
adc
xor
and
jb
jb
lds
fwait
sub
lock
aad
(bad)
fcom
std
pop
mov
mov
ins
cmp
call
loopne
xor
jmp
or
inc
(bad)
jl
or
into
stos
mov
scas
retf
idiv
xchg
sbb
xchg
aaa
cmp
cmp
lahf
xchg
and
enter
inc
jbe
and
adc
call
sahf
xchg
jns
jne
or
outs
ja
cmp
aad
fadd
cs
push
popf
sahf
cmps
mov
ret
jecxz
stos
sar
add
push
pop
sbb
pop
inc
js
out
adc
movs
pop
mov
loope
mov
xlat
shl
and
mov
inc
ret
cli
cmp
lods
pop
outs
mov
ds
mov
push
shl
xor
test
int3
stos
pop
inc
test
inc
icebp
and
mov
out
push
inc
push
test
pmaxsw
dec
jns
xor
fadd
and
in
loopne
dec
mov
lods
dec
loope
mov
or
hlt
sbb
sub
test
dec
add
shr
cmp
jne
or
popf
ror
xor
daa
jl
cmps
inc
jle
cmp
sbb
pop
inc
jae
enter
shr
sub
cdq
mov
sahf
cmp
pop
inc
cli
sahf
sub
or
in
cmp
cs
mov
std
xchg
jp
ins
xor
ss
or
rcl
push
dec
or
xchg
and
aaa
add
clc
sub
outs
adc
je
inc
mov
int3
sbb
or
xor
dec
mov
ins
xchg
mov
and
in
and
fmul
scas
scas
std
ret
rcl
or
xor
jp
inc
mov
mov
ret
clc
or
mov
fst
mov
add
jle
pop
out
adc
jnp
adc
lahf
adc
xchg
shl
sub
iret
push
out
out
and
test
jo
mov
stos
mov
inc
(bad)
cmp
call
les
adc
mov
fcmovbe
into
and
push
mov
gs
dec
arpl
jecxz
mov
xchg
jb
lock
xlat
jns
mov
or
sbb
mov
cs
ins
adc
jae
test
int3
and
xor
enter
or
add
inc
push
loop
stc
scas
jmp
jno
shl
mov
nop
arpl
add
aas
call
mov
sbb
xchg
pop
mov
jecxz
jbe
in
aad
xchg
adc
xchg
ja
mov
mov
mov
mov
sbb
mov
aad
or
adc
and
mov
leave
jo
mov
xor
xchg
add
pop
sar
mov
sti
and
xchg
icebp
inc
inc
call
in
iret
jmp
and
cmps
int
xor
inc
mov
pusha
lea
pop
mov
and
mov
in
xchg
jl
pop
jno
stos
and
pop
pop
(bad)
aad
xchg
dec
adc
jecxz
sub
cmp
retf
daa
jecxz
movs
leave
jmp
xor
shl
jmp
or
mov
mov
retf
lods
adc
ror
sahf
ins
and
push
fild
movs
sbb
aas
push
lahf
lock
pop
add
cmps
inc
cmps
hlt
fistp
xchg
stc
pop
push
cld
fwait
jnp
ss
ret
sub
and
add
pusha
sahf
(bad)
rol
mov
mov
dec
popf
mov
out
test
add
push
sub
mov
gs
or
in
fwait
ret
adc
sti
pushf
pushf
in
aas
inc
xchg
xor
xchg
cwde
in
stos
mov
cmp
xchg
ins
jae
fst
adc
mov
add
xchg
mov
xor
mov
pop
stos
mov
inc
adc
cwde
in
fcomi
dec
mov
cmc
push
loope
std
sti
out
aaa
shl
adc
xor
loop
cmp
xchg
jg
mov
test
mov
inc
inc
int
je
in
mov
cmp
ins
ins
mov
or
sbb
push
rcr
sbb
sbb
pushf
jg
mov
ret
addr16
cmp
xchg
ins
scas
movs
add
sti
adc
inc
mov
jg
outs
cmp
loopne
fwait
and
int
xchg
xor
cmps
in
jns
aam
in
inc
adc
jecxz
aad
sti
xor
(bad)
repnz
dec
mov
bound
rol
pushf
adc
push
mov
aad
dec
cmps
xor
scas
xor
mov
sub
push
bswap
sahf
xor
cwde
jmp
cmc
movs
xor
fld
les
jb
xor
xchg
pusha
div
mov
clc
dec
pop
add
fadd
xchg
mov
push
loope
aaa
sbb
leave
jnp
out
xchg
inc
ins
mov
les
stos
inc
(bad)
stos
rol
enter
adc
cmp
frstor
fldcw
mov
jp
or
xchg
mov
in
(bad)
push
les
xor
imul
retf
xchg
mov
mov
dec
and
pop
xor
into
dec
mov
rcr
add
pusha
xchg
inc
xchg
gs
push
ds
outs
icebp
and
xor
xchg
sahf
out
scas
daa
fsub
fsub
push
lods
shr
pop
mov
fsub
push
lods
fsub
push
cmps
cli
(bad)
pop
mov
pusha
repnz
clc
movs
aam
fcmovb
jnp
jge
xor
pop
es
jg
push
mov
out
cmp
inc
xchg
push
ins
jecxz
lods
(bad)
pop
rcr
sbb
mov
in
mov
ins
sbb
sbb
mov
pusha
popa
(bad)
js
dec
shl
lds
pop
adc
cdq
and
jg
mov
cmc
sbb
mov
popf
imul
or
clc
ja
mov
outs
je
retf
(bad)
dec
leave
mov
out
rcl
daa
or
sub
idiv
lahf
xor
pop
mov
mov
in
cli
les
push
dec
push
scas
movs
jnp
push
xlat
aas
mov
das
cmc
jmp
jle
fistp
mov
pop
mov
mov
sbb
movs
inc
les
aad
sbb
ret
jbe
mov
dec
xor
push
and
xchg
pop
mov
sbb
(bad)
outs
(bad)
and
sbb
sbb
adc
(bad)
out
xchg
push
pop
mov
rcr
and
ins
fs
stc
sub
jns
das
mov
push
push
sbb
daa
pop
inc
stc
into
mov
mov
pop
imul
outs
jg
out
xor
push
jae
data16
vmovmskps
sub
pop
test
pop
cs
repnz
mov
cwde
sti
repz
lock
les
xchg
lahf
fsub
dec
(bad)
stc
in
hlt
je
pusha
(bad)
in
xor
bound
push
cli
hlt
xchg
dec
push
fnstenv
sar
sub
xor
xchg
xchg
inc
push
add
push
dec
or
sbb
cs
jbe
stos
lahf
jmp
mov
push
and
ret
psrlq
mov
rol
jge
xchg
mov
xchg
dec
jmp
inc
fwait
add
jne
loop
ror
sbb
inc
les
arpl
or
dec
in
out
(bad)
adc
(bad)
fdivr
push
push
xchg
and
fwait
sub
xchg
aaa
xchg
rcl
add
inc
cmps
mov
movs
cmp
cli
push
cmps
sub
call
arpl
mov
enter
jns
mov
mov
popa
bound
mul
loop
test
ins
outs
mov
xor
mov
movs
ret
sti
inc
mov
dec
fcom
mov
xor
mov
adc
leave
and
xor
jne
mov
lahf
or
xchg
(bad)
push
cmc
je
sar
sub
mov
retf
mov
call
test
test
mov
push
and
cwde
lea
sbb
xchg
aas
mov
push
mov
pop
enter
jp
and
sbb
retf
ja
mov
mov
add
jo
sbb
push
cmp
aas
rcl
lods
je
dec
mov
mov
jno
jnp
adc
mov
xchg
das
int3
sbb
jg
pop
fnsave
loopne
fwait
pop
and
mov
fbstp
cli
mov
ret
add
sub
pop
xor
dec
sbb
cmc
scas
mov
or
ins
and
mov
outs
pop
cmp
repz
cmp
mov
sbb
sbb
mov
iret
stos
pop
xchg
add
stc
xor
sub
cmp
xor
std
or
fnsetpm(287
xor
stc
add
sbb
dec
xor
scas
popa
jl
mov
fwait
xor
or
pop
add
mov
icebp
pop
out
jge
test
xchg
fistp
mov
addr16
fcmovnbe
jne
push
je
sbb
dec
mov
xor
mov
inc
xchg
xlat
cld
pop
lds
call
and
dec
cwde
pusha
push
addr16
repz
cmc
nop
mov
sub
(bad)
adc
outs
mov
clc
(bad)
das
lock
mov
lahf
push
jo
xor
arpl
sub
ss
pop
xor
xchg
and
mov
cmc
repz
sub
shr
mov
in
mov
dec
sar
or
inc
je
jb
dec
inc
ds
inc
sub
mov
addr16
repnz
mov
sub
xchg
(bad)
popf
stc
retf
pop
push
cmp
push
fldcw
sub
and
push
and
iret
mov
dec
cli
push
xlat
fldenv
cdq
pop
stos
sbb
fldpi
shr
movs
enter
fcom
rcl
dec
sub
imul
mov
adc
loop
xchg
inc
mov
cmp
and
xchg
adc
retf
mov
icebp
cmps
sahf
scas
scas
push
enter
add
movs
sbb
push
xor
xlat
mov
sti
or
lahf
or
jl
(bad)
pop
mov
add
fld
sbb
enter
mov
dec
ins
popa
mov
sub
or
aaa
mov
cmp
js
adc
push
mov
inc
mov
(bad)
cwde
push
xor
lds
lahf
iret
jp
sub
inc
aas
retf
push
jmp
xor
loopne
push
(bad)
sub
add
cmp
in
cmp
dec
dec
mov
inc
or
out
shl
(bad)
(bad)
mov
fiadd
sbb
ss
sub
cli
xor
mov
dec
loop
mov
call
ins
adc
leave
add
aaa
add
dec
cmp
sub
xor
retf
xlat
dec
jbe
(bad)
jbe
cmps
icebp
clc
cmp
push
push
loope
xchg
fnsave
push
mov
push
dec
xlat
nop
cmps
rcr
mov
push
int3
cmc
fimul
jle
xchg
ds
lock
icebp
mov
daa
or
xor
mov
xchg
sub
lods
xlat
int
push
mov
inc
out
std
das
lods
push
mul
pop
inc
scas
mov
(bad)
inc
sub
mov
jbe
xchg
inc
cs
mov
mov
sar
cmps
push
fiadd
mov
arpl
fcom
mov
mov
in
cld
lahf
or
stos
out
fxam
jb
mov
cmp
dec
dec
mov
push
mov
iret
mov
(bad)
sub
mov
mov
pop
jl
lea
nop
nop
(bad)
outs
ins
mov
adc
mov
adc
bound
pop
cmp
in
(bad)
sub
fst
xchg
fidivr
push
xlat
out
cmp
pop
daa
cmp
iret
jle
pop
add
fimul
xor
leave
xor
adc
cmp
stos
push
adc
push
mov
cmp
mov
enter
jne
adc
into
mov
jns
mov
in
or
stc
xchg
popa
mov
jmp
xchg
jb
push
mov
jo
scas
bndldx
mov
dec
ins
sbb
leave
jp
fs
xchg
sahf
mov
imul
lahf
cmp
jmp
ss
popf
ds
inc
bound
test
rol
inc
push
jb
cmp
js
lods
pop
push
push
adc
call
pop
or
mov
push
aas
or
into
cld
jns
push
sbb
mov
scas
scas
cmp
or
or
pop
ins
dec
in
jbe
(bad)
daa
sub
lea
test
sub
in
gs
dec
ja
xchg
dec
mov
pop
jns
cmp
mov
mov
pop
mov
out
pop
mov
bound
lock
push
inc
es
pop
fcmovbe
outs
retf
dec
xor
and
mov
mov
jge
push
adc
gs
lea
(bad)
je
dec
test
popa
add
add
pop
je
xor
je
pusha
jno
mov
sahf
lods
inc
sbb
xor
xor
add
popa
pop
and
mov
or
pushf
mov
je
and
inc
(bad)
call
push
shl
ret
(bad)
jg
mov
push
xchg
and
cmp
xor
es
xchg
push
and
jmp
inc
jmp
inc
fdivrp
add
lods
xor
add
nop
iret
iret
lods
dec
lea
pushf
nop
mov
call
sub
aaa
mov
mov
ror
ins
out
or
sbb
mov
xchg
jne
adc
aad
pop
jg
in
cmp
xchg
xchg
sbb
adc
xor
dec
adc
fisttp
push
pop
(bad)
out
pop
(bad)
jmp
enter
shl
mov
push
test
imul
popa
retf
jmp
or
inc
test
add
rcl
stc
add
stos
mov
in
fs
mov
test
sub
xchg
in
ins
inc
pop
mov
push
and
pop
in
sbb
in
mov
or
dec
ds
and
mov
sahf
(bad)
jno
movs
loopne
sub
mov
fs
icebp
ret
adc
pop
popf
sbb
inc
xchg
mov
cld
call
fdivp
iret
mov
pop
aaa
lds
push
mov
pop
cdq
xor
movs
in
ds
mov
lods
and
stos
loope
mov
rcr
retf
addr16
fisttp
aam
jmp
test
loop
les
mov
pop
jle
or
int3
imul
bound
push
and
adc
out
mov
(bad)
adc
mov
pop
aad
mov
scas
test
movs
xor
xchg
(bad)
fsubr
and
jmp
jge
mov
xchg
mov
cmp
and
call
pop
outs
ins
sub
jge
mov
and
mov
(bad)
sbb
scas
adc
repnz
std
addr16
push
mul
jg
aam
mov
jp
xlat
push
mov
or
outs
pop
test
sahf
cmp
(bad)
dec
pop
outs
lock
inc
add
(bad)
mov
jne
std
mov
xchg
add
fist
outs
push
pop
add
pop
xchg
pop
mov
movs
rcl
adc
ficom
lock
fadd
sbb
xchg
std
clc
aam
dec
ret
push
mov
aaa
ds
jnp
and
sub
push
jge
repz
xchg
mov
and
mov
ins
scas
sub
fisttp
dec
sbb
or
mov
out
stos
sub
mov
jo
jl
pop
add
ins
mov
scas
scas
inc
jo
dec
gs
mov
push
fsubr
rcr
lock
jmp
push
mov
(bad)
dec
in
fild
mov
sbb
xchg
icebp
sbb
in
gs
push
xor
or
outs
xchg
pop
mul
sub
jmp
inc
sub
pushf
in
mov
js
stc
shl
ja
mov
cmp
and
cmps
cli
add
cld
ins
push
mov
push
int
inc
mov
inc
sub
mov
inc
sub
mov
xor
pop
mov
inc
dec
(bad)
int
sbb
mov
(bad)
imul
addr16
cmp
push
scas
sub
ror
popf
stc
add
fdivr
mov
arpl
les
pop
dec
pop
sbb
test
push
stc
xchg
and
iret
hlt
inc
xor
add
loopne
popf
clc
(bad)
fadd
mov
clc
push
adc
pop
pop
cmps
cmp
inc
push
sub
les
cmp
call
pop
nop
dec
mov
mov
cld
mov
mov
imul
inc
dec
inc
test
xor
lds
mov
cli
push
push
clc
pop
adc
addr16
mov
mov
lahf
and
daa
add
(bad)
adc
stos
mov
dec
jo
jp
jno
scas
jae
xchg
out
xchg
inc
jmp
call
pop
xor
mov
jmp
jbe
sbb
sbb
sub
fmul
pop
mov
cmps
mov
sub
stos
pusha
push
dec
xor
mov
cmp
dec
mov
jge
sub
ins
fsub
push
cmps
pushf
cmp
add
and
inc
test
dec
popf
fild
out
daa
push
mov
mov
and
adc
loop
(bad)
stc
or
shl
mov
cmp
idiv
lods
mov
cwde
sbb
ins
fld
add
mov
add
jle
(bad)
lods
jmp
aad
cdq
add
push
xor
jle
(bad)
xor
inc
repz
ficom
push
cmps
ds
adc
cmps
shr
call
(bad)
mov
jmp
test
jne
ret
jae
mov
lock
mov
sub
sahf
adc
sub
(bad)
pushf
ds
pop
in
jp
ffreep
ja
xchg
popa
mov
adc
int
test
sub
and
or
cmps
stos
and
xchg
test
and
sub
cmp
add
ins
ret
lahf
xchg
push
push
ins
add
or
std
movs
cmp
pop
jno
(bad)
mov
push
cmp
sbb
out
in
add
mov
and
mov
xchg
mov
or
jbe
addr16
xchg
mov
push
ins
adc
sbb
and
dec
fsub
bound
js
mov
leave
aam
dec
out
scas
scas
jnp
(bad)
dec
repz
cld
ret
sbb
pop
cmps
jle
add
loop
add
(bad)
xor
outs
push
popf
leave
cmps
jge
in
jecxz
outs
loope
aas
aam
scas
scas
dec
and
sbb
push
mov
mov
mov
push
push
out
out
xchg
xchg
daa
popf
test
push
pop
stc
adc
aas
stos
sbb
or
xlat
fcomp
sub
call
push
mov
inc
xor
adc
shr
mov
nop
outs
push
jl
or
lods
add
push
ins
sub
pop
repz
arpl
jno
xlat
sub
jb
out
stos
mov
push
scas
sbb
fisub
out
mov
imul
push
(bad)
push
add
fistp
sbb
dec
inc
lea
inc
shl
jnp
and
mov
es
je
cld
ret
push
not
out
mov
fsubr
movs
scas
(bad)
mov
lods
and
loopne
lods
shl
push
test
in
scas
fsub
push
scas
fsub
jb
call
(bad)
sti
mov
rep
cmp
push
lods
fsub
cs
sub
inc
into
add
and
bound
es
je
or
in
daa
or
clc
and
mov
mov
cmps
out
or
sbb
add
ret
repz
les
pop
cmc
push
jmp
sbb
pop
aas
sub
outs
sahf
xor
push
dec
cmp
in
pop
sub
out
hlt
repz
inc
dec
mov
test
int
call
aam
mov
not
addr16
sub
jb
das
sbb
cmp
inc
xor
test
xchg
ret
fsub
and
leave
rcl
push
or
aam
mov
push
push
mov
mov
jb
aas
popa
cmp
out
mov
ret
xchg
cmc
dec
je
xchg
or
es
xchg
in
sbb
cmp
loop
repnz
out
cmp
nop
jne
cmovo
fsubr
mov
ins
cmc
rcr
and
push
cmp
sbb
push
into
mov
(bad)
mov
xchg
nop
and
inc
lods
(bad)
daa
mov
retf
inc
rcr
rcl
lods
pop
jp
add
sti
mov
loopne
xor
fwait
and
clc
icebp
mov
xchg
repz
daa
or
ins
div
and
scas
icebp
xor
call
sub
dec
xlat
xor
popa
retf
mov
retf
in
mov
inc
(bad)
xor
xchg
add
hlt
scas
std
mov
out
mov
xor
or
cmp
pop
mov
ret
inc
xor
jns
aad
inc
aaa
(bad)
mov
jnp
or
icebp
mov
pop
push
mov
(bad)
cdq
push
aam
mov
repnz
(bad)
mov
(bad)
mov
dec
mov
mov
inc
das
and
sub
mov
hlt
lahf
pushf
or
(bad)
mov
stc
lds
cmc
imul
cwde
mov
into
out
mov
sbb
in
movs
in
push
cld
pop
mov
push
cmps
mov
push
les
mov
test
mov
movs
nop
push
ret
retf
ss
push
mov
and
ins
jg
or
lahf
add
inc
cdq
iret
inc
pop
xor
pushf
ror
rep
pop
jns
jmp
fdiv
js
imul
into
inc
add
jp
sbb
xchg
out
pop
(bad)
jl
xor
int
lods
dec
lods
cld
shl
adc
lods
fist
jbe
jae
adc
test
xchg
mov
cdq
lods
sub
movs
ret
leave
ins
push
mov
ror
dec
mov
imul
out
or
dec
inc
(bad)
mov
lods
imul
sbb
and
dec
jb
jo
and
rcl
jns
dec
jmp
and
xchg
cwde
xor
loope
cmps
out
jns
call
jo
or
jns
out
or
mov
dec
dec
out
push
inc
dec
mov
add
movs
sub
pop
jge
dec
movs
xchg
scas
dec
sbb
sar
repnz
dec
xchg
dec
mov
mov
mov
arpl
push
xchg
or
aam
mov
rol
inc
jae
cld
leave
and
xchg
js
mov
pop
adc
arpl
inc
pop
jg
sbb
iret
mov
and
mov
jg
dec
jno
rol
sbb
aaa
or
jo
xor
aaa
inc
fld
xor
xchg
mov
leave
shl
xchg
retf
fisttp
das
sbb
xchg
pop
and
adc
outs
jae
cmps
lock
xchg
sbb
jno
adc
xchg
fs
test
cmp
or
sbb
ja
cmps
mov
and
(bad)
mov
sbb
sub
cmc
je
repnz
arpl
xchg
jmp
and
adc
pop
and
into
cld
je
repnz
mov
adc
mov
or
ret
mov
fstp
gs
or
cmp
and
pop
jns
int
mov
adc
xchg
mov
mov
stos
push
cmp
cwde
lahf
push
xchg
mov
add
outs
shr
push
inc
lds
in
rcl
iret
xchg
inc
fs
loope
call
jns
fwait
mov
rcr
retf
shl
mov
pop
sbb
fld
cmp
jp
push
mov
dec
add
xor
out
push
or
pop
fistp
and
jb
ror
xor
add
sub
pop
xchg
imul
stos
pmulhw
loope
dec
mov
mov
lods
aas
ins
xor
(bad)
cmps
xor
mov
adc
data16
retf
xor
shr
xchg
jo
or
add
add
mov
xor
jmp
cmp
and
push
call
fcomp
int
call
ror
push
mov
(bad)
xor
xor
pop
push
scas
add
xor
adc
xor
dec
mov
cmp
inc
ror
dec
mov
mov
out
push
mov
jecxz
push
call
and
xor
jp
inc
cmp
xor
jno
pop
in
sub
shl
ror
mov
inc
es
fld
call
in
or
fsubr
xchg
xchg
mov
(bad)
cmp
in
inc
mov
je
gs
dec
xchg
ss
fsubp
adc
(bad)
or
sub
push
pop
push
push
cmp
mov
mov
dec
je
repz
aad
dec
xor
pop
sbb
adc
add
aas
mov
cwde
adc
lods
pop
mov
out
xchg
push
shl
js
cmps
out
xor
cdq
out
push
mov
xor
cmp
mov
fisubr
mov
test
out
mov
into
xor
sar
sub
inc
mov
or
jmp
add
ret
stos
mov
push
mov
push
frstor
pop
fsub
inc
xor
jecxz
fnstcw
aas
mov
test
cmp
add
hlt
jg
pop
out
popf
pop
and
mov
adc
push
stos
xchg
mov
not
into
xchg
fwait
inc
mov
dec
dec
jp
fld
stos
inc
aam
sbb
test
ins
shl
inc
dec
push
(bad)
fcmovb
push
mov
repz
popf
cmp
(bad)
dec
mov
ins
retf
aam
sub
pop
popf
ja
or
(bad)
daa
add
sahf
fbld
pushf
inc
dec
cmp
stos
les
xchg
push
pusha
inc
mov
sub
outs
push
(bad)
jle
pop
retf
cs
outs
adc
bound
inc
pop
add
jae
retf
(bad)
sbb
and
repnz
xchg
rcr
sbb
inc
adc
mov
xor
adc
or
into
jo
inc
sbb
int3
stos
dec
mov
pop
bound
cmc
jg
push
in
mov
xor
xchg
or
mov
mov
and
mov
xchg
ins
dec
lea
pop
iret
adc
scas
xchg
mov
jno
inc
fisttp
cmp
push
push
push
enter
addr16
inc
stos
fdivrp
push
vmulsd
std
push
popf
mov
xor
push
inc
int
mov
jecxz
call
dec
or
bound
enter
adc
xor
jp
pop
ins
sbb
hlt
mov
ret
or
mov
repnz
leave
not
mov
into
sbb
inc
sub
fisubr
pop
ss
pop
stos
sub
pop
xchg
push
sub
test
push
and
div
das
mov
iret
or
sub
out
int
idiv
jo
aaa
aad
retf
cmp
dec
mov
retf
ss
xchg
jmp
xchg
jmp
dec
cmp
daa
push
mov
ficom
mov
cmp
jne
fldenv
add
mov
cmps
dec
and
adc
in
imul
add
enter
movs
call
push
dec
test
fs
(bad)
in
push
loope
dec
sub
test
mov
jmp
adc
push
clc
jl
dec
pop
scas
jmp
pop
das
pop
icebp
sbb
xchg
call
cmp
ret
adc
push
das
add
stos
sub
push
inc
mov
pusha
jb
mov
bound
jno
push
cld
pop
les
cmp
imul
popa
cmp
mov
(bad)
loopne
shr
adc
sub
adc
cmp
dec
jmp
cli
outs
sub
cli
mov
aad
stc
stc
lock
add
ja
jbe
div
add
popf
sub
add
mov
xchg
cld
rcl
mov
xchg
pop
dec
sub
sar
mov
in
repnz
pop
cmp
mov
(bad)
push
xor
inc
adc
in
xchg
push
sbb
push
jno
mov
jns
ret
retf
add
aas
ins
xor
jo
loop
sbb
and
cli
fs
sub
push
aad
jno
es
jle
cmp
das
add
sub
push
lods
fsub
push
test
loop
mov
jno
mov
jl
hlt
mov
xor
cmp
retf
daa
jecxz
mov
or
dec
jbe
pop
dec
(bad)
in
bound
sbb
and
cmp
popf
xchg
mov
pop
les
icebp
movq
mov
pop
push
out
adc
dec
pop
movs
sbb
mov
iret
aad
mov
or
dec
jmp
xchg
rcl
xchg
sub
lahf
daa
(bad)
clc
jmp
outs
mov
std
mov
(bad)
loopne
sar
xor
mov
retf
or
push
mov
cmp
push
ret
in
sub
call
xchg
cld
mov
std
jno
push
push
jecxz
mov
loop
stos
(bad)
pop
stos
fsub
push
scas
fsub
push
scas
(bad)
jb
mov
mov
adc
es
push
mov
cmps
ret
sbb
sbb
sub
mov
repnz
jns
fdivr
imul
push
inc
fstp
aam
xchg
mov
mov
pop
sbb
inc
(bad)
idiv
repz
pop
rcl
mov
cmp
enter
loopne
adc
pop
lock
test
cmps
ss
pop
aaa
fadd
pop
push
pop
cmps
retf
stc
pop
call
mov
jae
je
aaa
(bad)
jl
cld
mov
inc
pop
(bad)
int3
nop
pushf
jle
xor
fwait
test
idiv
xchg
daa
cmps
(bad)
pop
xchg
fwait
retf
mov
adc
xchg
pop
cmp
pusha
mov
mov
mov
(bad)
test
mov
leave
mov
mov
dec
mov
pop
push
out
(bad)
lods
lock
sbb
cmp
inc
sbb
dec
loop
jns
push
fldl2e
pop
sahf
test
cwde
and
cmp
cli
pushf
test
jg
push
adc
mov
out
jp
enter
mov
enter
test
push
xrelease
or
sti
int
(bad)
cmp
outs
nop
xchg
sbb
xor
inc
popf
mov
enter
nop
cmp
iret
add
pop
or
jo
vhaddps
adc
out
out
in
(bad)
jl
mov
test
jmp
les
fcmovne
js
push
es
out
jl
sub
or
xor
push
pusha
scas
jge
cmp
aas
add
mov
inc
arpl
dec
es
lods
mov
sub
xor
inc
ins
rcr
mov
clc
mov
or
repnz
imul
cmp
cmp
fldenv
push
fdivp
call
sub
adc
in
adc
push
cmp
movs
adc
imul
pop
mov
sahf
test
out
adc
mov
add
mov
or
xchg
inc
mov
enter
push
push
dec
push
and
mov
xchg
pop
ror
sbb
add
mov
adc
and
adc
(bad)
(bad)
imul
sub
imul
test
push
cmp
jl
cdq
es
xor
xchg
rcl
jo
call
stos
jg
jmp
fidiv
fdivr
rcl
xor
pop
fisub
jmp
stos
mov
sar
xor
add
mov
pop
cwde
jg
lods
imul
dec
nop
enter
retf
div
sbb
aad
ffree
and
loope
jg
pop
and
jno
sbb
jne
mov
xchg
(bad)
retf
xor
jecxz
shr
pusha
mov
sub
and
sar
mov
ret
mov
iret
mov
push
xor
add
adc
sbb
scas
stc
cmp
jle
push
push
push
dec
scas
xchg
pop
inc
ins
ficom
sub
fimul
mov
pop
xchg
xchg
hlt
arpl
js
xchg
adc
xchg
mov
sub
add
das
add
dec
sbb
add
or
js
add
inc
xchg
lds
div
adc
or
arpl
js
lea
sbb
xchg
cmp
fbld
mov
mov
out
imul
and
ror
sbb
mov
out
dec
lea
out
loope
push
retf
xlat
cmp
pop
xor
cmp
and
mov
jno
stos
cmp
push
retf
push
xchg
cmps
shl
imul
loopne
stos
fsub
push
stos
aam
push
scas
fsub
push
scas
fsub
push
mov
add
cdq
loopne
in
mov
and
stos
(bad)
mov
mov
jge
jecxz
in
or
add
in
push
std
xchg
(bad)
mov
call
push
addr16
push
mov
or
push
mov
push
in
and
fnstenv
ins
pop
pop
cmp
pop
movs
xor
sar
mov
cmp
lahf
jnp
add
iret
icebp
shr
ds
imul
in
adc
sub
(bad)
outs
out
shl
in
cmc
pusha
imul
iret
pop
shr
xchg
test
test
ds
retf
ss
and
and
jg
repnz
test
cmp
lds
sbb
cli
bsf
add
mov
mul
push
sub
cwde
fwait
out
mov
in
enter
jge
mov
test
sub
pop
sub
hlt
cdq
popa
jg
and
mov
test
int3
dec
(bad)
das
in
and
adc
pushf
inc
or
and
outs
mov
xlat
cmc
jmp
pusha
sar
xchg
or
iret
cmp
xor
adc
(bad)
stos
retf
adc
cmc
cmp
mov
push
test
sub
xor
xchg
mov
or
repz
jp
test
retf
mov
std
mov
jns
jnp
sbb
ret
sub
sbb
fidivr
pop
test
sbb
fldlg2
xor
(bad)
sar
stos
test
and
in
cmps
cmp
movsx
pop
and
out
push
cwde
out
sub
sti
cmps
mov
dec
jbe
sbb
retf
ret
sub
sahf
jbe
movs
cdq
ins
neg
push
sti
repz
(bad)
push
loop
xchg
(bad)
push
call
pop
inc
into
pop
lock
mov
push
pusha
rol
xor
dec
ins
cld
push
xor
xor
outs
sbb
cmp
ins
or
mov
out
mov
add
das
nop
dec
movs
bound
cli
sbb
dec
jb
sub
mov
(bad)
push
and
mov
mov
fisub
call
inc
mov
iret
icebp
inc
rol
mov
mov
xchg
scas
scas
mov
xchg
jnp
sar
ins
dec
int3
mov
jecxz
jns
cmp
out
pop
ss
test
sahf
sub
call
sub
push
pop
test
add
ja
xor
sbb
mov
test
pop
jmp
data16
adc
std
jle
inc
shl
inc
mov
stos
pop
rcl
test
or
imul
ds
(bad)
(bad)
mov
das
test
fxch
inc
add
(bad)
aas
daa
jmp
mov
push
(bad)
push
mov
mov
mov
loopne
sbb
cld
lods
inc
mov
push
imul
sbb
addr16
lds
sti
jne
sbb
add
and
into
int
iret
std
mov
ins
push
sub
jge
neg
test
loopne
repnz
pop
rcl
fs
scas
mov
jle
pop
jle
daa
inc
shl
cs
or
pop
mov
sbb
jp
xlat
lods
dec
dec
mov
or
dec
cld
fisubr
bound
push
movs
mov
jo
cmps
fistp
je
dec
stc
test
popf
inc
int
aas
pop
(bad)
inc
popf
sub
(bad)
sub
repz
rcl
add
or
and
adc
and
call
inc
adc
ret
and
jns
adc
fldcw
inc
jo
xchg
aaa
dec
fcmovbe
adc
popf
aaa
inc
mov
push
retf
rep
stos
sub
mov
sar
fwait
cwde
sub
adc
mov
(bad)
adc
push
iret
jl
jecxz
mov
call
sahf
xchg
jecxz
fs
fstp
adc
inc
mov
mov
jo
sub
mov
dec
arpl
aam
xchg
jp
movs
cmp
fidivr
fnstsw
mov
push
lock
push
jae
and
dec
jo
iret
or
adc
and
in
mov
cmp
xor
icebp
pop
test
aas
aad
test
mov
pop
jle
dec
dec
add
cmp
pop
(bad)
in
dec
mov
sub
mov
lahf
fdiv
retf
out
pop
jmp
in
dec
pushf
imul
stos
pop
add
sbb
dec
and
jo
(bad)
push
lods
fsub
push
lods
shl
push
lods
fsub
push
lods
cli
loop
int3
pop
inc
xchg
dec
fcmovnb
adc
inc
mov
es
push
mov
cmps
ret
(bad)
sbb
pop
scas
into
adc
rcl
jmp
kandnb
or
sbb
or
mov
mov
cwde
pop
movs
sub
push
pop
jmp
sub
mov
jno
bound
hlt
retf
jno
repnz
ins
pop
daa
jecxz
outs
outs
pop
cmp
scas
scas
enter
mov
(bad)
dec
test
test
call
mov
(bad)
js
dec
add
inc
repz
or
lds
push
cli
inc
xchg
mov
jmp
cmp
int3
cmp
aas
out
dec
push
addr16
sbb
pop
fwait
shr
fcmovne
inc
aas
and
dec
imul
add
ret
xchg
mov
dec
adc
out
push
or
in
sub
sar
adc
xor
pop
sub
popf
sbb
sbb
cdq
clc
repnz
ret
ins
and
sub
xchg
push
ds
xchg
push
lods
push
lea
(bad)
cmp
add
jo
pop
and
(bad)
cmps
data16
cmps
inc
push
icebp
bound
jmp
mov
or
bound
jb
mov
or
xchg
push
cld
mov
das
mov
in
inc
movs
scas
push
ficom
loopne
in
call
push
out
jbe
cmps
ja
adc
(bad)
cwde
pop
sahf
cmps
dec
sbb
mov
int
out
or
mov
(bad)
mov
jl
pop
lods
ret
mov
inc
sar
fldenv
retf
mov
stos
jmp
jg
cmc
in
call
adc
sub
repz
stos
call
sub
sahf
sti
test
push
clc
mov
push
mov
cmp
mov
mov
jmp
cwde
jge
inc
nop
push
push
pop
cmp
mov
in
sub
pop
mov
xor
in
sbb
enter
adc
mov
mov
imul
(bad)
jnp
lock
mov
test
imul
nop
shr
xchg
pop
xchg
(bad)
pop
outs
js
push
pop
or
movnti
js
mov
sahf
push
mov
xor
pop
pop
retf
xlat
mov
cld
je
outs
jmp
(bad)
pop
xor
cmp
mov
mov
jno
dec
push
jns
sbb
popa
psadbw
sti
mov
push
stc
sub
or
retf
pop
jp
mov
mov
pop
xchg
arpl
pushf
xchg
push
xchg
stc
dec
imul
add
out
aas
add
les
shl
jns
sahf
mov
lock
cld
in
ror
mov
sar
inc
mov
fnstenv
jae
js
mov
mov
jns
mov
mov
fldz
lods
repz
scas
pop
fcom
or
ror
xchg
or
sub
in
or
pop
sahf
js
or
adc
push
mov
jae
dec
ret
test
je
sti
fadd
mov
sbb
cdq
test
cs
fist
pop
add
daa
cmc
dec
retf
sbb
fstp
imul
adc
mov
xor
retf
lock
xor
mov
fistp
mov
leave
jns
inc
scas
dec
scas
fmul
mov
jmp
xchg
mov
xor
popf
mov
fld
stos
sbb
or
jo
fidivr
shl
inc
jecxz
xchg
pusha
in
add
scas
add
dec
xchg
cmp
mov
inc
div
sub
cmp
jecxz
stos
mov
mov
movs
sbb
pop
pop
cmp
xor
popa
inc
mov
push
xchg
test
ror
rcr
(bad)
pop
test
fs
rcr
or
and
es
jmp
imul
or
lahf
pop
push
push
adc
bound
push
mov
stos
mov
call
call
add
xchg
dec
mov
dec
mov
inc
push
dec
pop
mov
in
stos
fisub
mov
mov
inc
ja
lahf
nop
stc
mov
sub
retf
aaa
xchg
cmps
scas
jg
in
sahf
retf
test
jbe
(bad)
mov
daa
sub
(bad)
sahf
jnp
cmp
retf
movs
int3
xchg
add
mov
fiadd
adc
call
fsub
mov
xor
popa
adc
cmp
imul
test
es
add
cmc
xor
pop
inc
xor
ficom
xor
dec
cmp
add
pop
ficom
cld
rol
addr16
or
pop
dec
dec
icebp
xor
movs
stos
inc
inc
dec
mov
lods
in
sbb
add
dec
(bad)
leave
sub
shl
inc
adc
out
add
and
push
not
inc
xor
pop
pop
out
sbb
sbb
sbb
sbb
dec
push
pop
pop
std
aam
mul
sti
adc
jge
mov
in
mov
inc
mov
dec
mov
push
jmp
out
pop
popa
shr
fmulp
cmc
push
retf
sbb
inc
loopne
sbb
ins
imul
shr
or
sahf
mov
inc
sti
mov
data16
and
sbb
adc
push
and
lods
aam
sbb
mov
xchg
xchg
test
lods
sbb
ins
or
js
push
je
js
add
ret
mov
lods
inc
das
mul
or
sar
add
int3
inc
and
xor
jo
push
stos
cdq
(bad)
push
dec
xchg
pop
sbb
adc
dec
pop
mov
pushf
(bad)
daa
jecxz
sbb
ss
jecxz
inc
shl
icebp
movs
test
cs
stos
push
pop
pop
aam
cld
adc
aam
inc
test
xchg
cwde
adc
mov
jle
push
call
adc
fldcw
xor
cmp
shr
push
push
repnz
adc
sbb
dec
bound
pop
int3
in
test
sysenter
mov
pop
push
aas
pop
jnp
(bad)
xor
mov
mov
jecxz
or
jo
push
xchg
inc
loop
pop
lea
xchg
jg
fst
sbb
inc
pop
int3
call
jne
bound
cwde
je
or
enter
and
adc
test
ret
ins
fwait
into
pop
inc
push
or
mov
fnclex
jo
lods
add
mov
orps
push
enter
mov
jmp
jae
add
test
shl
clc
jge
shr
dec
rcl
fsub
xor
dec
inc
aad
dec
hlt
cmp
sub
mov
movs
adc
jle
jl
jge
fnstenv
push
fwait
mov
and
and
pop
jbe
sub
and
jns
call
xchg
pop
cmp
xchg
into
mov
pop
xor
add
jns
adc
xor
hlt
or
clc
outs
(bad)
adc
jne
pusha
imul
in
xor
sub
push
jb
mov
sub
or
xor
xor
or
mov
and
lods
daa
push
mov
mov
or
jns
push
xorps
mov
jmp
sub
mov
mov
mov
push
sub
push
xlat
in
sbb
stos
dec
jg
inc
sbb
sub
repnz
mov
mov
jno
or
jmp
xchg
mov
scas
fdiv
sub
mov
ja
sar
sub
cmp
scas
idiv
lds
cwde
stc
mov
sbb
fdivr
inc
or
sbb
xor
xchg
or
(bad)
cmp
jl
fdivr
div
jae
push
jg
(bad)
rcr
mov
dec
rol
rcl
jl
mov
dec
add
jmp
bound
in
retf
les
ret
repnz
cmp
mov
enter
xchg
lods
adc
leave
aad
xor
or
mov
movs
sub
xchg
jno
cmp
mov
adc
cld
mov
or
ja
cmp
shl
dec
inc
mov
aaa
sbb
out
sahf
mov
push
cmc
cmp
out
js
and
and
test
rol
dec
ret
inc
jmp
or
pop
adc
and
jl
outs
sub
xchg
shr
cmp
inc
adc
pop
out
fsub
xchg
push
adc
data16
scas
mov
xchg
push
retf
ss
mov
ret
xor
sbb
or
fs
loop
and
mov
fisub
sahf
shl
jecxz
mov
fdivr
cs
ret
in
lds
jge
out
pop
ja
lds
lock
xchg
ds
adc
shl
aaa
mov
shl
xchg
jb
ins
and
or
lahf
mov
mov
(bad)
stc
add
push
pop
loope
in
aam
xor
(bad)
jmp
xchg
adc
bnd
in
fimul
lahf
lds
sbb
rcl
dec
and
test
xor
pop
cmp
and
mov
xchg
aam
or
call
pop
inc
or
mov
push
inc
push
test
pop
sar
fst
cmp
popa
fdivr
lods
adc
xchg
retf
loopne
mov
rcr
mov
cmc
fimul
ins
cld
lock
jne
lahf
(bad)
dec
ds
xor
sub
push
dec
pushf
btr
inc
sbb
jge
adc
aam
add
outs
jo
push
fs
leave
dec
mov
jno
add
add
sbb
out
xlat
sti
mov
add
scas
mov
xchg
es
retf
call
adc
retf
cmps
mov
ror
pop
loope
(bad)
frndint
sahf
dec
sti
call
or
cs
inc
pop
cmp
inc
and
popf
lods
mov
adc
lahf
adc
cmp
mov
imul
stos
push
pop
add
add
out
sbb
cli
mov
in
fwait
inc
out
out
pop
or
jp
ret
jecxz
je
mov
adc
ss
add
call
mov
add
or
or
cmp
imul
push
stos
mov
dec
sar
dec
cmp
jecxz
push
outs
add
cli
sub
xchg
jmp
dec
loop
fsub
add
lods
mov
cmps
jmp
stc
sbb
sbb
clc
push
stos
stos
pushf
jnp
stos
inc
test
ins
aas
mov
loope
fwait
mul
clc
aaa
pop
dec
pop
sub
lea
fwait
jo
jb
xchg
sub
into
push
pop
fistp
push
std
clc
add
adc
jne
and
cmps
or
xchg
mov
inc
mov
inc
push
mov
pushf
fcos
jge
fcmovnb
inc
(bad)
xchg
pop
push
in
rcr
fsub
pop
stc
adc
jg
or
jns
data16
push
hlt
mov
add
xchg
repnz
mov
jae
xchg
imul
stos
dec
xchg
addr16
xchg
and
inc
(bad)
shl
in
jg
int3
sbb
clc
cmps
mov
jae
mov
pop
(bad)
fadd
push
into
adc
cmc
mov
push
aad
mov
pusha
not
gs
call
pop
and
jne
(bad)
pusha
in
mov
(bad)
stos
or
xchg
mov
rcl
test
xchg
addr16
retf
jecxz
js
movs
mov
stc
pop
xchg
sub
xor
fidivr
and
scas
call
loope
fadd
outs
xor
cmp
add
js
stos
xor
mov
fdivr
jne
sub
shl
dec
in
sub
or
ds
hlt
pushf
cmp
shl
mov
cmp
call
jmp
push
push
shl
inc
sub
push
stos
cdq
mov
(bad)
push
out
int3
(bad)
or
pop
and
dec
pop
cmp
in
test
push
push
dec
xor
sub
(bad)
push
mov
push
xor
(bad)
adc
mov
or
daa
lods
outs
addr16
adc
or
out
add
xchg
jno
scas
pop
mov
test
je
push
dec
fisubr
xor
lock
add
xor
dec
xchg
mov
addr16
push
and
ins
cld
sub
and
scas
sbb
lahf
nop
dec
(bad)
hlt
cmp
mov
xchg
mov
sbb
outs
sbb
retf
call
enter
mov
ins
sbb
popa
aam
out
mov
cmps
and
outs
fadd
les
dec
outs
push
lods
(bad)
push
fdiv
scas
es
push
sub
in
stos
fsubp
push
test
in
cmps
fsubp
pop
movs
enter
shr
inc
mov
int3
cli
dec
mov
(bad)
(bad)
jo
(bad)
ror
jl
cli
les
repnz
sar
(bad)
js
lock
scas
pop
loopne
cmps
shr
pop
movs
retf
mov
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
retf
fadd
inc
scas
mov
push
test
cli
loopne
mov
sbb
scas
loop
push
lods
shl
push
lods
(bad)
push
scas
fsub
push
scas
fsub
pop
scas
shr
pop
mov
imul
loop
test
loopne
scas
fsub
push
scas
fsub
push
scas
fsub
push
lods
fsubr
pop
mov
shl
scas
fadd
push
mov
loop
add
ret
(bad)
test
mov
pop
enter
sbb
mov
mov
inc
mov
mov
out
and
inc
or
popf
jne
test
cmp
mov
adc
(bad)
adc
hlt
cmps
rcr
add
clc
pop
sti
shr
xor
out
add
jp
test
fimul
stos
shl
pop
test
stos
pop
sub
mov
test
aas
ins
mov
js
xchg
lea
add
or
in
movs
imul
loopne
fisubr
sbb
xchg
js
mov
jmp
lock
ss
dec
les
test
xor
jp
sbb
in
enter
cmp
sbb
loope
push
xor
mov
fcmove
aad
cld
sbb
vpmadcsswd
xchg
loopne
mov
ss
out
test
xlat
cli
in
in
jl
push
fwait
rol
int
dec
stc
mov
sub
aaa
stos
(bad)
retf
fld
or
jle
or
jmp
inc
push
mov
enter
daa
add
adc
inc
add
add
repz
mov
mov
je
pop
sub
scas
rcr
xchg
int3
std
mov
mov
repnz
xchg
sti
stc
jmp
loope
add
stos
ds
sar
add
pop
ss
xchg
xchg
out
arpl
adc
jg
push
mov
push
adc
out
cmc
dec
sub
js
and
jmp
aaa
push
icebp
xlat
or
pushf
out
push
pop
add
hlt
lods
int3
sbb
push
mov
or
movs
pop
dec
pop
sub
out
xchg
lock
mov
lds
push
sub
xor
xor
sar
pop
or
ja
xlat
(bad)
push
aam
mov
pop
push
std
xchg
or
push
inc
sub
ja
jmp
cmc
pop
cwde
popf
iret
(bad)
pop
movs
repnz
dec
in
pop
sub
inc
fisttp
inc
cmp
inc
pop
leave
lds
xchg
jp
out
inc
lahf
mov
mov
retf
call
sub
adc
dec
sub
mov
fstp
lock
cld
pusha
pusha
mov
lods
js
lahf
sub
ja
movs
jp
xor
mov
xor
ret
dec
sbb
mov
dec
jbe
mov
pop
addr16
adc
test
xor
sub
out
mov
in
cmps
popa
shr
mov
add
sahf
ins
(bad)
mov
jp
int
and
int
xchg
push
pop
test
cmp
mov
and
mov
add
leave
ins
adc
jns
jp
add
pop
test
add
hlt
lds
ins
cmp
icebp
mov
inc
in
adc
test
iret
call
push
xchg
inc
pushf
sub
cmp
sbb
pop
push
mov
xorps
out
adc
pop
fistp
push
icebp
mov
fbstp
in
aaa
push
shl
gs
popa
cld
mov
mov
scas
fwait
add
popf
aam
mov
xchg
push
repz
xor
movs
into
dec
inc
cdq
dec
nop
sbb
or
outs
cmp
je
repnz
xchg
in
mov
lahf
fucom
add
fld
ins
jmp
sub
push
je
jp
inc
pop
or
fs
sbb
lods
fsubr
jp
inc
ds
sbb
sub
and
ror
lods
icebp
ds
out
shl
fsubr
inc
mov
icebp
fnstcw
arpl
cmp
mov
movs
retf
cs
lahf
mov
bound
shl
jo
int
sbb
leave
dec
clc
pushf
out
cwde
pushf
mov
pop
pop
sbb
mov
inc
mov
repnz
jne
fldcw
addr16
leave
in
inc
mov
stos
rcr
scas
daa
fsubr
lods
shl
push
test
loopne
scas
fsub
push
test
out
lods
aam
pop
mov
retf
cwde
xor
stos
cmp
jecxz
lods
(bad)
push
movs
fstp
inc
das
pop
cmc
(bad)
call
jl
mov
mov
xchg
xchg
ins
and
inc
push
clc
pop
out
icebp
pop
lods
in
or
push
cmp
jne
int3
dec
lods
cmp
dec
addr16
jnp
xchg
ja
inc
and
arpl
lea
jne
and
add
cmp
push
fldcw
(bad)
mov
xchg
into
(bad)
out
add
int3
fcmovnb
inc
(bad)
mov
mov
(bad)
mov
jmp
cli
cmp
into
gs
in
mov
sub
pop
outs
aaa
test
and
mov
mov
nop
scas
popf
cmc
ds
mov
sbb
mov
fadd
adc
aam
hlt
adc
ins
sahf
cdq
jp
mov
xchg
rol
adc
xor
sub
xor
cs
retf
bound
call
push
cwde
div
mov
jbe
sub
in
jns
inc
xor
add
(bad)
mov
cmp
xor
std
mov
clc
cmp
in
cs
je
mov
xor
ds
aam
add
add
dec
sub
dec
in
adc
push
xchg
adc
mov
test
mov
jge
data16
outs
push
and
push
xlat
idiv
sbb
outs
dec
das
shl
push
loope
je
inc
daa
sti
ja
mov
lods
xlat
adc
pmullw
jne
sahf
cmp
cdq
mov
dec
out
test
sbb
xor
push
cmp
mov
xor
adc
pop
cmp
aam
arpl
sub
outs
dec
cmp
pop
retf
jne
sbb
scas
mov
je
push
stc
out
dec
nop
pop
lea
cmc
jl
ret
push
dec
mov
and
xlat
cmp
sti
lods
jmp
enter
push
leave
mov
test
aad
xchg
addr16
xchg
clc
sub
gs
jae
mov
jmp
xor
add
xlat
adc
scas
inc
movs
inc
mov
jge
jne
or
pop
cmp
pop
int
arpl
xor
dec
or
cld
dec
mov
sub
sbb
pop
rol
pop
stos
mov
ins
xor
mov
vpsadbw
in
cli
std
or
or
push
bound
shr
ss
jb
cs
ins
cli
mov
or
cmp
data16
xor
int
add
jo
(bad)
mov
(bad)
cmp
fisub
xchg
mov
mov
pop
cmp
add
mov
js
addr16
adc
test
in
je
pop
jae
or
mov
xchg
mov
xchg
in
ret
ret
xchg
mov
sub
cmp
cmp
sahf
mov
neg
out
repz
lods
enter
movs
adc
in
sub
loop
sub
sbb
mov
cdq
jae
push
xor
std
repz
icebp
pop
in
mov
xlat
je
xchg
mov
push
dec
cs
inc
jo
mov
retf
lods
mov
inc
inc
fld
movs
ins
jl
retf
sbb
jmp
sbb
mov
js
mov
cdq
es
push
daa
aam
or
mov
push
aam
push
rol
xchg
mov
retf
mov
push
push
cmp
pop
neg
js
shl
mov
imul
xchg
mov
xchg
mov
pop
sub
lods
xor
inc
std
pop
bound
loopne
mov
sbb
ja
das
scas
mov
sbb
pop
lahf
jge
xor
add
out
test
imul
stos
nop
stc
and
jge
ret
call
into
test
xchg
(bad)
push
cmc
fs
(bad)
or
jae
pop
jp
call
or
mov
cld
lods
jae
mov
mov
sbb
jne
push
pop
xchg
jecxz
xor
or
retf
loop
sub
in
and
cs
mov
nop
dec
add
jb
dec
pushf
push
loop
movs
mov
ins
je
outs
mov
xor
icebp
(bad)
inc
in
pop
adc
mov
popa
pusha
sub
push
inc
shl
aad
(bad)
fwait
loop
repnz
outs
mov
jmp
mov
fwait
sbb
rol
fnsave
xor
xor
je
fiadd
clc
mov
neg
sub
push
int3
sbb
bound
dec
dec
ror
cs
fnstenv
push
fnstcw
cwde
pushf
sbb
and
popf
ret
fldenv
mov
stc
aam
aaa
adc
and
push
pop
xor
sahf
and
adc
cmp
dec
xchg
push
jmp
sub
shl
sub
and
lods
int3
imul
mov
and
mov
and
xlat
dec
mov
lods
push
add
mov
pop
and
sbb
sub
push
push
mov
(bad)
stos
add
dec
mov
mov
retf
cmp
add
rsm
sbb
and
std
inc
in
clc
call
pop
es
push
test
aam
jae
pop
push
xlat
jmp
mov
cmps
call
call
scas
imul
loop
lods
fsubp
push
movs
fsubr
push
test
loop
scas
fsub
push
scas
faddp
adc
rol
adc
mov
data16
ins
cmp
ss
push
test
loopne
lods
xor
sbb
ffreep
sub
rcl
nop
cmp
xchg
mov
mov
shr
pop
push
int3
loop
or
mov
retf
pop
iret
jb
xchg
inc
and
div
pop
fdivr
addr16
push
icebp
pop
jmp
stos
cmps
xor
xor
cmps
xor
loopne
fdivr
xchg
lock
adc
mov
mov
jmp
cmp
nop
push
call
cmc
int
push
dec
push
sub
cmp
xchg
scas
popf
xlat
push
(bad)
popa
popa
enter
or
push
fidiv
call
test
or
push
mov
test
mov
mov
jno
xlat
nop
pop
loop
test
xchg
push
mov
mov
popa
xor
inc
inc
mov
repnz
lock
and
mov
and
cmc
out
je
jo
sbb
imul
mov
or
sbb
fmul
xor
push
fcomp
jmp
retf
in
dec
sti
xchg
cmps
inc
sar
adc
cs
out
rcl
iret
or
jge
mov
mov
push
mov
and
sbb
cli
mov
jl
sar
mov
sub
leave
enter
imul
stos
ret
(bad)
mov
nop
hlt
iret
into
sahf
or
dec
adc
xchg
mov
push
pop
inc
jle
or
imul
push
mov
jne
or
leave
cmc
sub
call
mov
lea
pop
outs
cmp
pushw
and
push
xlat
pusha
outs
pop
lahf
std
sbb
jmp
popf
or
sbb
repz
jno
es
mov
call
mov
stc
push
add
xchg
jmp
xor
ret
push
fisub
jmp
arpl
push
(bad)
push
sbb
out
repnz
neg
jne
sbb
add
xchg
sbb
mov
retf
cmp
cmp
aas
(bad)
into
fdivr
sbb
sahf
or
jns
dec
cli
or
sbb
mov
sub
adc
test
mov
es
mov
stc
(bad)
mov
cli
add
out
mov
cmp
push
cwde
popf
pop
xchg
(bad)
in
in
retf
retf
lods
out
dec
cmc
xchg
sbb
mov
mov
lock
inc
fidiv
(bad)
mov
jns
ret
and
pushf
mov
sbb
dec
add
aad
sbb
and
mov
cmp
pop
push
push
xchg
shl
(bad)
sub
pop
jns
jmp
mov
xor
pop
and
outs
xor
aam
cld
fs
lods
mov
int
out
jnp
aas
pop
stos
std
jecxz
and
inc
xchg
ficom
sub
xor
push
ss
add
fdiv
sbb
or
mov
mov
xor
mov
bnd
ins
ins
push
js
jp
mov
xor
mov
lahf
xor
leave
inc
mov
das
pop
sbb
pusha
mov
mov
imul
inc
(bad)
inc
jle
jecxz
cdq
sbb
je
mov
enter
stc
push
pop
imul
pop
sti
push
pop
repz
add
fst
add
adc
cmp
sbb
movs
mov
sub
jne
(bad)
pop
sub
xchg
(bad)
fwait
nop
dec
cmp
out
into
imul
out
push
pusha
lock
cld
cmp
and
loop
mov
push
mov
push
jne
mov
mov
pop
dec
in
inc
xchg
xchg
rol
out
xchg
pop
into
xchg
mov
mov
push
lods
frstor
loop
pop
cmp
push
aaa
add
ds
fdivr
xlat
popa
sub
retf
aad
dec
xchg
and
mov
adc
adc
jmp
ret
loop
inc
pop
or
push
push
jecxz
mov
out
lods
fsubp
pop
cmps
shr
push
scas
fsub
push
scas
(bad)
push
test
(bad)
adc
shl
xor
jp
pop
xchg
loopne
dec
cli
sbb
push
lods
fistp
lds
jnp
xchg
jmp
add
jmp
jg
cmc
push
fcomp
jecxz
(bad)
ficom
arpl
dec
ja
add
sahf
in
jl
ins
push
clc
jmp
dec
dec
and
xchg
xchg
gs
icebp
dec
test
xchg
mov
sub
xchg
cwde
mov
mov
mov
jno
shr
in
(bad)
(bad)
cld
dec
mov
lods
add
sub
ins
aam
cmp
mov
retf
and
add
in
add
loop
fwait
imul
std
jno
mov
adc
jae
jne
mov
and
mov
fidiv
push
sub
stc
retf
or
mov
jg
in
loope
xor
add
loope
imul
fcomp
ss
fistp
leave
cld
inc
lods
(bad)
mov
inc
mov
into
sub
push
pop
in
sub
adc
call
add
arpl
jnp
sub
add
dec
cmp
(bad)
and
aaa
lds
rol
js
sbb
jg
mov
pushf
ror
popf
popa
rcl
imul
xchg
sbb
inc
jl
cld
sub
add
ins
gs
pushf
repnz
nop
test
not
and
dec
mov
pop
iret
retf
aam
mov
mov
and
mov
pop
(bad)
mov
dec
(bad)
and
fwait
push
dec
mov
sbb
loope
sahf
adc
ins
mov
sar
shl
jg
(bad)
js
xchg
mov
jge
jmp
mov
rol
fiadd
push
pop
into
ja
data16
add
or
cmp
loope
sub
dec
xchg
or
mov
ficom
or
and
fst
adc
(bad)
and
or
int3
sbb
jge
inc
int3
popa
mov
or
lods
dec
mov
adc
popf
fiadd
scas
ficom
sub
ja
pop
sub
call
vpshld
dec
xor
pusha
and
mov
mov
test
scas
push
and
dec
or
sub
es
call
outs
and
mov
jbe
or
cdq
pop
int3
jmp
push
imul
ins
mov
lds
sbb
xor
mov
push
in
int3
sbb
imul
inc
scas
mov
xchg
xor
rcr
jno
sti
push
aad
push
pop
xor
sub
pop
adc
movs
fwait
jns
xchg
push
mov
fisttp
ret
add
addr16
cmp
pop
and
jl
adc
imul
adc
jl
jg
dec
sub
ror
stos
inc
mov
ficomp
mov
out
fs
es
xchg
cmps
retf
xchg
or
mov
push
inc
aam
xchg
scas
movs
aas
cmp
pop
popa
idiv
or
popf
pop
push
add
mov
push
pop
push
imul
sbb
mov
mov
add
ficom
cmp
add
cmp
xor
mov
or
jle
mov
enter
jo
or
sub
pop
dec
sub
cmps
jno
inc
test
or
pop
inc
xchg
or
cld
push
enter
pop
es
add
sar
aaa
fdiv
into
xchg
mov
sub
push
lods
sub
scas
push
cli
cs
les
sub
out
cmps
cmp
jecxz
adc
fstp
dec
mov
add
jle
add
inc
js
add
push
xor
add
xor
scas
or
pop
bound
mov
ror
in
pop
push
movs
stc
jb
sbb
int
mov
mov
mov
das
inc
push
xlat
mov
(bad)
push
je
lock
mov
shr
leave
(bad)
in
mov
xor
imul
jecxz
outs
push
xor
dec
shl
add
mov
shl
cs
jmp
lahf
clc
sub
imul
cmp
xchg
bound
vmovd
(bad)
ds
jae
cmc
mov
push
xor
mov
cmps
mov
xor
loopne
in
jle
in
xchg
jmp
into
add
cmp
and
push
outs
les
imul
loop
lods
fsubp
pop
test
call
push
scas
fsub
push
test
jmp
mov
retf
fcmovb
sub
out
nop
adc
mov
or
(bad)
sbb
aas
out
push
ins
jecxz
lods
(bad)
pop
rcr
sbb
dec
xchg
in
loope
push
sbb
mov
cmp
rcl
inc
test
mov
cmp
adc
pop
add
sbb
push
push
jne
(bad)
(bad)
jbe
sbb
fisttp
retf
sub
ss
fild
fs
dec
xchg
xchg
shr
(bad)
out
cmp
repz
out
leave
jmp
xchg
adc
pop
add
xor
(bad)
or
or
fnstenv
pop
call
(bad)
test
mov
inc
loop
cld
jmp
pop
xor
sti
into
addr16
into
sahf
(bad)
jmp
or
or
cmps
sub
aas
sbb
call
or
iret
push
jecxz
rcl
jne
mov
jbe
jl
jnp
adc
cmps
or
aaa
inc
add
(bad)
pop
cmp
add
shr
lods
mov
arpl
cmp
lods
bound
lahf
pusha
lods
scas
stos
ror
(bad)
push
imul
sbb
adc
popf
popa
sub
jl
and
cmp
pop
dec
aas
sbb
push
fldcw
push
fsubr
mov
pop
in
test
pop
loopne
ret
mov
cmp
movs
stos
in
retf
stc
push
dec
out
push
lock
mov
pop
stos
out
aam
std
jp
test
inc
outs
jno
ret
leave
inc
adc
dec
or
mov
xor
sbb
mov
outs
nop
xchg
push
xchg
inc
sbb
iret
std
retf
loope
fld
pop
sbb
jmp
retf
jnp
out
lahf
call
(bad)
xchg
icebp
push
(bad)
jecxz
mov
pop
and
ret
les
adc
mov
imul
daa
inc
sar
jno
inc
mov
imul
push
in
jne
into
pop
cmp
mov
clc
jbe
lock
mov
data16
push
cmp
stos
pop
inc
xor
movaps
push
and
loope
mov
rcr
sub
sub
fst
push
adc
adc
xchg
call
out
test
xchg
mov
hlt
(bad)
adc
push
mov
mov
ins
or
cmp
pop
jl
movs
pop
test
dec
shr
mov
imul
cmp
push
aam
and
scas
or
cmp
sub
sar
adc
cmc
mov
fldcw
pop
(bad)
fprem1
lea
enter
arpl
fild
xchg
(bad)
fld
in
sti
(bad)
jns
fiadd
sbb
or
fadd
int3
enter
sub
retf
aaa
test
xor
aas
adc
adc
aad
popa
sbb
sub
test
mov
sub
mov
mov
pop
pop
cmp
cdq
mov
imul
scas
lock
pushf
ret
mov
cdq
nop
mov
adc
xor
jb
sbb
out
int3
shl
test
add
imul
dec
push
es
scas
scas
push
cmp
push
adc
xchg
mov
pop
pop
adc
rol
add
xor
dec
cwde
or
popf
cmp
lods
mov
lods
cmps
jno
in
push
cvtps2pi
cmc
push
sub
or
jp
cmps
inc
xchg
test
js
ins
mov
in
xchg
cmp
sbb
xchg
cs
aas
ss
push
push
stc
add
in
mov
mov
rol
jb
(bad)
sahf
push
fprem
mov
out
push
xchg
ret
lea
mov
xchg
and
in
std
call
out
test
shl
jns
jmp
add
inc
jg
xor
cmps
push
mov
jbe
pop
adc
mov
jo
hlt
mov
sub
movs
mov
fcom
ror
fbstp
cs
xchg
repz
jecxz
xor
or
dec
inc
mov
dec
aam
ins
jp
aam
gs
and
cmp
xchg
outs
cli
hlt
sub
dec
sbb
nop
jo
mov
xchg
cmp
stos
stc
dec
pop
or
mov
push
adc
(bad)
cli
cmp
inc
mov
mov
xchg
dec
in
lods
xchg
mov
ins
out
sbb
mov
and
jg
add
mov
xchg
cmp
out
mov
jl
cmp
mov
dec
loope
jae
add
cmp
in
jb
int3
cmp
adc
rcl
into
imul
jp
daa
idiv
daa
aas
pop
enter
pop
mov
outs
jg
mov
mov
jmp
out
(bad)
fsub
cmp
shr
inc
pop
mov
imul
iret
repnz
addr16
repz
xor
(bad)
movs
xchg
rcl
and
jns
stos
int3
mov
dec
xchg
mov
add
retf
xor
xchg
in
in
je
jne
dec
aas
enter
mov
hlt
scas
mov
and
mov
dec
aad
xchg
ins
pop
test
xchg
push
div
shr
or
iret
mov
test
lods
xor
pusha
push
or
jo
je
push
pop
aas
xor
das
pushf
imul
stos
adc
pop
out
and
outs
shr
lods
or
add
ins
arpl
cs
mov
pop
ret
nop
pop
dec
cdq
sbb
jmp
cmp
call
ja
or
jecxz
les
xchg
push
push
lea
hlt
in
aam
xchg
adc
sbb
fmul
xchg
inc
or
or
ins
lea
mov
test
mov
repz
ret
xor
jl
push
not
enter
les
test
adc
mov
ds
and
adc
int3
add
mov
pop
movs
dec
cld
(bad)
add
out
lea
jb
test
adc
(bad)
sub
jg
cmc
popf
add
xchg
fadd
sub
in
add
pop
jle
(bad)
popf
inc
out
test
mov
xor
iret
jo
and
ds
test
and
xchg
shr
inc
push
xor
xor
ret
aas
fcomp
or
movs
ficom
fld
cmp
sahf
fsub
imul
mov
jae
inc
xchg
cmp
sbb
jo
pop
rcl
xor
into
inc
loope
push
jo
in
iret
ds
xor
sbb
inc
pop
out
xor
fist
fst
adc
sub
aas
mov
push
movs
test
push
pop
mov
mov
push
dec
arpl
or
push
call
adc
and
mov
aam
(bad)
mov
in
pop
push
or
mov
sbb
int3
jg
dec
mov
jmp
dec
inc
popf
dec
push
lods
pop
movs
jge
inc
add
lea
adc
dec
sbb
adc
fwait
mov
dec
jbe
xchg
jns
sbb
sub
pop
pop
dec
and
mov
xor
mov
stos
int
imul
mov
daa
fcomp
push
fmul
scas
lods
mov
ins
popf
rol
ror
or
dec
dec
jo
shl
cmps
(bad)
mov
xlat
mov
add
adc
xor
sbb
fdivr
sbb
or
sbb
sub
jne
cld
sar
ficom
fcomp
mov
ror
fldenv
bound
pusha
push
or
add
mov
mov
jns
nop
cmc
cmp
dec
in
in
or
xchg
clc
and
mov
push
movs
fwait
xchg
(bad)
ins
sbb
sbb
mov
sbb
js
cmp
mov
lods
imul
sar
or
outs
lock
xchg
mov
nop
jle
bound
das
push
scas
das
xlat
and
xchg
ins
fist
mov
arpl
je
les
push
rol
(bad)
mov
push
sbb
call
jecxz
sbb
push
mov
add
add
mov
sbb
xlat
in
repz
mov
ss
jg
push
and
mov
(bad)
cld
adc
pop
sbb
xchg
add
loopne
in
mov
mov
jle
retf
call
cmc
mov
outs
dec
pop
inc
inc
retf
push
cmp
daa
(bad)
jbe
mov
dec
and
leave
pop
dec
nop
cli
data16
xlat
push
mov
rcr
inc
jmp
pop
out
inc
dec
add
and
xchg
sub
mov
inc
ret
jb
cmp
cmp
mov
test
in
int
lods
adc
gs
lea
fld
mov
popf
ds
pop
test
push
xchg
and
inc
cmp
push
shl
pop
gs
pop
fst
jae
ss
jmp
inc
test
mov
inc
cmc
call
ds
daa
out
xchg
push
fld
test
call
jbe
sbb
ds
xchg
ins
les
pushf
inc
aas
cmp
mov
imul
dec
jae
push
les
in
fcom
fldenv
mov
jns
jnp
jecxz
or
push
(bad)
int3
shr
inc
mov
xor
sbb
mov
popf
pop
aad
dec
ret
inc
inc
and
pop
dec
in
lahf
icebp
xchg
xor
ror
rcr
rol
jo
inc
mov
sahf
sub
adc
jl
outs
xchg
jmp
std
call
mov
lods
mov
daa
ja
test
mov
mov
mov
aam
addr16
sub
aad
push
loopne
leave
out
jecxz
xor
cmp
cmps
push
cwde
stc
es
push
jmp
sti
inc
xchg
inc
div
push
lds
cld
xchg
cs
adc
adc
ja
gs
xor
repnz
adc
xor
sbb
out
xchg
div
mov
(bad)
and
push
adc
loopne
lods
aad
push
mov
sbb
add
inc
sub
fcomp
pop
xor
fwait
retf
xchg
adc
adc
ins
fnstsw
pop
xchg
inc
jge
iret
adc
adc
or
or
test
sub
cmp
xchg
fiadd
or
fdivr
mov
jl
nop
lock
jae
mov
mov
cmps
mov
jg
xor
fcmove
cdq
jl
push
aad
cmc
cmp
push
test
jecxz
mov
dec
push
xor
inc
add
ss
hlt
xlat
ins
adc
pop
jno
inc
out
arpl
cmc
repz
inc
in
push
cmp
jb
or
mov
mov
out
in
in
mov
cmp
sahf
mov
fs
in
aam
cwde
int3
inc
fwait
add
pop
call
sahf
test
nop
retf
cmp
mov
jg
and
dec
xor
fdiv
sub
adc
je
sahf
cmp
and
sub
stc
(bad)
dec
or
test
or
xor
cs
ret
xchg
fadd
xchg
sbb
jl
pop
in
pop
rcl
sbb
adc
adc
fst
imul
mov
add
cmp
adc
mov
inc
in
adc
sti
and
cmp
sub
mov
ret
mov
push
aaa
(bad)
mov
nop
xchg
sub
sbb
mov
jns
fadd
in
(bad)
cmp
xchg
std
pop
fdivr
sub
push
ja
aad
add
dec
inc
push
dec
adc
adc
js
push
jge
dec
xor
mov
mov
imul
arpl
xor
nop
jg
loop
xlat
rol
add
xor
aad
sub
mov
inc
ror
arpl
jmp
sbb
call
xor
aam
fbstp
sahf
add
inc
stos
adc
add
inc
add
iret
sub
mov
ficom
push
repnz
push
mov
movs
out
xor
adc
test
imul
push
imul
sub
and
and
mov
and
sti
pop
jb
and
sub
and
jo
popa
sbb
es
repz
mov
dec
and
mov
int3
sub
dec
leave
cmp
repz
aaa
sbb
dec
dec
adc
jbe
inc
gs
cwde
mov
pop
cmp
stos
ret
xor
inc
push
mov
sub
scas
scas
int3
sbb
pop
xor
xor
push
sbb
les
or
mov
adc
loopne
or
in
test
lea
hlt
test
sbb
mov
(bad)
fimul
in
push
ins
xchg
(bad)
call
rcl
xchg
pop
push
inc
sbb
ret
push
les
sbb
sub
pop
js
cmp
or
cmp
pushf
mov
dec
fcomip
mov
out
xor
stos
mov
out
das
mov
inc
aaa
test
ins
stos
dec
mov
cmc
jns
adc
sbb
inc
dec
jle
and
cs
inc
inc
xor
cli
jecxz
das
out
push
jno
mov
(bad)
push
(bad)
inc
jle
cmp
lds
sub
sbb
mov
cmp
or
add
sub
mov
pop
idiv
js
outs
gs
hlt
cs
add
pop
jb
out
ja
in
mov
add
in
pop
add
pop
loop
test
int
mov
test
cwde
add
dec
xchg
cmp
xchg
(bad)
jmp
outs
add
mov
and
ret
push
sub
inc
adc
push
xor
xchg
aas
aaa
sub
(bad)
mov
xchg
pop
and
fisub
mov
sahf
loop
sbb
push
fcomp
mov
or
loopne
test
loopne
test
loop
scas
fsub
push
lods
cli
loop
int3
pop
inc
xchg
dec
fcmovnb
adc
stc
pusha
repz
cdq
adc
(bad)
push
lods
cmps
mov
not
cmc
cmp
and
mov
xchg
mov
cld
cdq
pop
inc
arpl
xchg
jo
sub
mov
mov
jbe
pusha
cs
fwait
mov
jge
mov
inc
jo
dec
call
enter
les
shr
sub
pop
scas
inc
sahf
mov
mov
js
mov
in
or
mov
push
fsubr
jp
sbb
fild
je
out
rol
dec
jl
inc
sub
dec
fwait
dec
mov
mov
iretw
mov
popf
les
cld
imul
pop
mov
nop
adc
sbb
pushf
inc
xchg
inc
mov
xor
jo
inc
dec
xor
fcomp
ret
mov
dec
mov
add
ins
scas
pusha
mov
push
mov
mov
clc
sar
mov
add
xchg
repz
out
out
jnp
mov
sub
pop
add
add
cmp
add
lds
pop
leave
xchg
scas
mov
inc
inc
test
cmp
hlt
dec
loopne
jl
stos
pusha
inc
fwait
mov
enter
icebp
lock
adc
mov
lods
xchg
push
jb
sbb
shr
mov
outs
leave
pop
jmp
mov
jne
mov
pop
outs
mov
or
sub
ret
push
adc
pop
dec
ins
push
xor
dec
ins
das
pop
jb
jle
fiadd
sbb
mov
scas
shl
mov
sbb
int3
ror
mov
mov
xor
stc
mov
sbb
jmp
pusha
push
adc
jmp
or
nop
jns
test
loope
pop
call
addr16
aam
fimul
movs
jmp
retf
sahf
(bad)
or
cmp
jns
popa
sar
fldcw
out
dec
dec
cmc
mov
call
or
fisttp
lahf
in
loop
pop
jmp
push
jmp
sub
movs
dec
sub
rcl
mov
add
stos
mov
movs
repnz
nop
aas
aaa
cdq
xor
and
fs
pop
jne
mov
sub
xor
cwde
cmp
stos
cmc
out
adc
sbb
retf
cdq
xor
dec
push
xchg
cs
jle
daa
(bad)
icebp
movs
xor
mov
js
xor
push
fbld
xchg
push
sbb
pop
cmp
dec
mov
push
push
sub
rcr
adc
shl
aaa
mov
les
mov
and
ret
push
jp
lods
cmp
cdq
push
(bad)
jl
out
mov
rcl
xchg
dec
add
sbb
pop
mov
adc
sbb
aad
test
loope
int3
(bad)
push
out
jg
rol
in
cmp
sub
sub
inc
sbb
test
call
xchg
sub
push
mov
inc
and
test
(bad)
cmp
mov
rcl
cmps
out
sbb
shl
fs
enter
hlt
shl
push
xchg
xchg
repnz
(bad)
jae
mov
mov
pop
sub
mov
xor
adc
(bad)
dec
xor
scas
jle
mov
add
xchg
pop
pop
stos
ret
ret
popa
inc
push
adc
sbb
mov
ins
mul
pop
cmp
repnz
xor
cmps
movs
addr16
xlat
cmp
es
movs
out
aad
fsub
adc
mov
xchg
inc
dec
inc
sub
pop
mov
and
xchg
out
mov
inc
iret
ins
rcl
cmp
test
jge
add
adc
fwait
mov
adc
lahf
inc
imul
(bad)
xor
shr
jp
loopne
push
inc
mov
push
cs
adc
repz
jns
mov
jg
inc
(bad)
pop
xor
retf
stos
dec
mov
inc
push
pop
outs
retf
stos
sub
push
xor
dec
(bad)
push
push
xchg
xor
das
pushf
test
mov
fiadd
sbb
aad
xchg
rol
sub
push
and
push
pop
jnp
das
or
cmp
jle
ss
test
xchg
push
pushw
repz
cmp
ror
jp
push
ret
repz
repz
loop
int3
jmp
mov
push
mov
sub
out
push
or
lea
inc
retf
dec
outs
and
xchg
mov
add
jmp
imul
arpl
movs
enter
xchg
iret
cmp
jmp
add
add
push
shr
sub
into
sbb
mov
mov
pop
fmul
retf
in
push
scas
jns
in
pop
int3
mov
mov
adc
jmp
enter
push
inc
das
dec
push
or
add
ret
test
xchg
xor
(bad)
shr
(bad)
fisttp
and
fidivr
push
arpl
or
mov
push
pushf
mov
sahf
outs
mov
inc
ins
inc
or
test
retf
mov
sub
aam
xlat
mov
push
cmp
mov
mov
outs
std
lods
sbb
pushf
sub
mov
push
adc
xor
cmp
mov
clc
xor
sbb
and
cli
and
retf
out
sub
or
pusha
test
cmc
adc
xlat
int3
cmp
sub
fcomp
push
pusha
mov
cmps
jae
mov
mov
jo
rol
xlat
movs
push
xor
(bad)
ins
imul
das
fst
inc
or
mov
cwde
stc
mov
mov
mov
push
rcr
jb
cmp
mov
sbb
mov
mov
inc
rol
gs
xor
mov
in
repnz
cdq
pop
mov
outs
cld
out
data16
(bad)
call
add
jmp
mov
popf
popa
in
ret
push
movs
mov
sar
sub
leave
lock
cli
cli
sub
(bad)
(bad)
ins
sub
pop
xchg
sbb
inc
fwait
pop
mov
push
cmp
cmp
jmp
hlt
in
dec
mov
mov
aam
or
push
jo
gs
xor
cs
test
movs
mov
loope
sub
pop
xchg
shl
push
jle
mov
mov
lods
pop
inc
(bad)
jbe
cld
mov
dec
shr
jbe
loop
inc
sub
stc
scas
aam
inc
test
movs
lock
and
stos
push
push
inc
leave
mov
lods
add
enter
or
bound
push
imul
or
das
retf
pusha
xchg
or
test
mov
outs
jecxz
out
dec
or
adc
pop
mov
or
jl
inc
stos
call
push
ins
mov
ret
ret
and
repz
aam
call
mov
mov
(bad)
mov
sar
cmp
cmc
cmp
(bad)
pushf
sub
mov
adc
push
add
inc
repnz
xor
add
add
mov
add
push
iret
or
and
sti
or
jne
xchg
mov
test
into
test
test
xor
mov
push
jmp
cmp
add
mov
fidiv
jecxz
je
jb
mov
mov
add
or
lods
push
jl
sub
fsubp
inc
dec
lahf
cmp
dec
mov
(bad)
cmp
in
arpl
(bad)
out
jg
ss
cmp
jge
cmc
xlat
jge
jmp
loop
rol
inc
dec
xor
xor
dec
jle
(bad)
scas
or
repz
cwde
push
jnp
mov
gs
rcr
leave
scas
adc
mov
dec
jp
xchg
ss
mov
mov
pop
bound
sub
clc
mov
cmp
push
test
push
cmp
sti
lock
mov
rcr
xor
test
(bad)
xor
pop
adc
pop
into
ret
pop
out
xchg
mov
sub
call
pushf
rcl
or
mov
into
sbb
jecxz
fstp
leave
lods
cwde
repnz
inc
cmc
lds
xchg
xor
das
cwde
xor
stc
sub
mov
xchg
jnp
hlt
jecxz
jle
pop
sub
aam
xor
iret
aam
cld
cmps
push
jns
mov
(bad)
push
ror
sbb
push
div
pop
repz
pushw
jecxz
add
ds
cmps
jns
fisub
add
mov
cmps
xor
imul
add
add
jmp
mov
add
jmp
js
push
call
retf
and
fs
pop
sbb
inc
enter
push
jge
(bad)
js
js
xchg
or
jo
mov
mov
adc
inc
lahf
mov
test
sbb
jmp
mov
into
stc
jp
and
stos
retf
xor
cmp
(bad)
in
outs
out
std
popf
cmp
pop
sbb
mov
leave
mov
outs
lds
mov
out
stos
adc
lods
(bad)
mov
in
add
scas
xor
(bad)
jmp
les
cmps
push
jmp
push
pop
call
pop
add
and
ja
xchg
mov
dec
aam
daa
push
jg
int3
cmp
add
jecxz
call
inc
adc
sub
sar
mov
test
jg
push
scas
push
ins
jecxz
test
loop
scas
fsubp
push
scas
stc
jo
loop
fist
xchg
add
sbb
dec
stos
je
sub
xchg
sbb
out
cs
ds
sub
jae
push
dec
ss
add
cmp
mov
lock
test
sbb
add
pusha
scas
pop
retf
pop
push
adc
dec
add
faddp
and
ret
cld
inc
in
mov
or
sub
pop
iret
sub
clc
mov
aad
loopne
or
scas
ins
ds
xchg
push
out
adc
jecxz
sbb
cmps
xor
jmp
sbb
add
out
sub
cmp
std
jno
push
push
jecxz
mov
loop
stos
(bad)
pop
test
loopne
scas
fsub
push
scas
(bad)
jb
mov
mov
xor
jecxz
lods
fsubp
push
sar
add
xor
clc
cmp
pusha
add
add
mov
mov
xchg
xchg
sub
cdq
adc
cmp
add
int3
ror
into
pusha
cwde
mov
mov
loope
mov
movs
rol
lods
imul
daa
arpl
cld
lods
jp
sbb
push
fsub
sti
cmp
jmp
mov
clc
add
outs
repnz
lahf
shl
popa
jge
cmps
cmp
mov
bound
xchg
out
clc
lods
mov
fmul
lods
jbe
cld
mov
hlt
mov
inc
test
mov
mov
mov
test
pop
popf
cmps
iret
aad
dec
xlat
push
xchg
ins
retf
or
leave
out
loopne
jecxz
sbb
mov
bnd
or
jg
push
push
mov
pusha
mov
aam
leave
jns
imul
sub
dec
cdq
ins
aas
sbb
mov
and
(bad)
mov
mov
in
and
in
int
shl
dec
xchg
cld
bound
add
or
add
je
outs
xor
cwde
push
pop
jp
or
push
ins
mov
sub
fprem1
dec
sahf
sahf
cmc
inc
or
ins
pop
sub
add
dec
les
cmp
fs
rol
cld
dec
pop
inc
dec
rcl
cmp
push
loop
mov
rcl
dec
mov
out
mov
push
mov
call
dec
dec
imul
adc
aaa
xor
mov
(bad)
xchg
loop
mov
inc
jecxz
imul
out
add
fdiv
pushf
sub
add
pop
jp
iret
jne
xor
cmp
jmp
iret
xchg
aam
cmp
adc
outs
add
xor
add
add
push
dec
pop
mov
jle
pop
je
push
ins
(bad)
std
mov
jp
(bad)
sub
jb
mov
dec
fisttp
in
test
out
cmp
inc
sub
scas
sub
inc
inc
xor
shr
aaa
xchg
popa
sub
push
icebp
xchg
adc
jno
hlt
mov
xchg
and
and
cmc
test
mov
fst
xor
push
loopne
pop
mov
jmp
call
rcl
and
jno
mov
xor
inc
and
loopne
inc
fadd
aas
sbb
sahf
fst
fmul
pop
and
ja
mov
cmp
stos
scas
dec
jp
jge
dec
add
jnp
and
stos
out
retf
pop
test
leave
adc
or
push
sbb
mov
mov
sub
cmp
cmp
jl
pop
mov
repz
int3
xchg
daa
jmp
cmp
icebp
mov
call
inc
cld
xchg
push
test
jge
mov
cmp
adc
in
sahf
pop
cmps
sub
sub
pusha
push
fsub
retf
or
(bad)
inc
adc
je
icebp
imul
cwde
sbb
push
pop
pop
mov
pushf
(bad)
clc
push
jmp
nop
shl
lock
jb
bound
out
jl
jg
mov
ret
ret
adc
(bad)
(bad)
bound
hlt
push
xchg
fwait
or
(bad)
dec
ja
jbe
inc
mov
aam
(bad)
mov
adc
add
pop
pop
loope
aas
cmp
xor
adc
and
popa
imul
ds
xor
mov
ss
pop
movs
sub
pusha
xchg
mov
imul
jmp
or
jmp
or
cdq
xchg
in
jo
add
mov
add
or
or
jge
mov
and
jb
fsub
push
stos
(bad)
pop
test
loopne
scas
fsub
push
lods
fadd
adc
pop
inc
xchg
mov
mov
repz
xchg
dec
es
push
mov
cmps
ret
dec
(bad)
sar
aas
mov
pop
mov
xchg
xchg
mov
jl
push
stos
xchg
sub
ins
or
pop
pusha
cli
mov
retf
jno
xor
inc
xlat
fcmovne
dec
mov
movs
cmp
push
push
fldcw
xchg
push
fst
fld
mov
cmps
jp
call
aam
xchg
and
test
cmps
ss
pop
mov
sbb
imul
mov
mov
xor
scas
inc
(bad)
movs
lahf
(bad)
jno
sbb
push
adc
push
inc
jns
movs
push
inc
iret
loop
shl
jnp
add
pop
jmp
pop
retf
ret
test
mov
ret
cmp
push
(bad)
and
lock
ja
popf
inc
jp
jb
push
or
out
stos
cwde
add
adc
mov
imul
int
xchg
std
aas
dec
add
lods
jae
xchg
sub
sbb
in
xor
fstp
xor
stc
rol
fdivp
movs
arpl
fs
mov
je
mul
jae
arpl
fwait
ins
or
call
jbe
inc
pop
cmps
pop
and
fbld
outs
es
lds
call
retf
dec
out
inc
jmp
(bad)
adc
or
cmp
sub
sub
push
or
je
in
leave
sbb
pop
xor
xor
xor
or
fmul
sti
dec
adc
leave
(bad)
stos
shl
or
out
lahf
mov
iret
rcl
test
iret
cmc
pop
int
xchg
imul
into
hlt
or
pop
xor
or
mov
dec
(bad)
sbb
in
mov
sub
mov
sub
add
ret
out
pop
xchg
cld
push
test
jmp
dec
std
add
test
jne
inc
arpl
(bad)
clc
inc
sub
(bad)
cdq
dec
stc
push
pop
sahf
mov
sbb
mov
push
push
in
inc
xor
add
inc
jo
cmp
and
lock
xchg
cmps
and
and
daa
or
pop
loop
sub
and
push
push
outs
dec
mov
and
std
adc
inc
pop
cld
sbb
es
cs
(bad)
fnsave
or
ins
nop
cdq
ror
pop
pushf
jno
(bad)
popf
ror
pop
iret
push
add
add
ss
rol
push
ret
jmp
fcmovb
outs
ds
mov
sahf
or
sbb
inc
push
push
and
inc
cmp
fistp
nop
add
sbb
jo
test
loopne
fwait
or
imul
test
adc
cmp
test
outs
sbb
(bad)
jbe
not
in
xor
pop
sub
fadd
jl
stos
jb
das
push
sub
idiv
xor
int
mov
test
loop
cmps
adc
sahf
fistp
and
cs
(bad)
clc
rcl
les
cmp
and
mov
jo
mov
loope
test
fild
icebp
hlt
mov
(bad)
popf
mov
into
dec
data16
test
adc
daa
add
inc
popa
mov
pop
push
xchg
jns
xchg
mov
inc
outs
dec
sbb
add
les
pop
iret
add
(bad)
mov
je
and
mov
or
xor
cwde
int3
(bad)
aaa
aas
aam
fldenv
jmp
xchg
into
xor
mov
fnstcw
xor
xchg
xchg
nop
dec
jb
loope
push
gs
fnstcw
jns
jecxz
sub
add
mov
jnp
cld
add
imul
sbb
xlat
push
test
mov
sbb
cmp
mov
pop
and
sub
push
iret
stc
xor
push
jmp
mov
or
aas
popa
or
(bad)
dec
dec
into
cmp
dec
(bad)
imul
sti
xor
ret
sbb
(bad)
dec
fisubr
pushf
add
int3
mov
xchg
mov
mov
(bad)
mov
xchg
mov
lahf
imul
ss
push
sbb
scas
pop
sub
retf
sbb
imul
(bad)
push
test
out
scas
(bad)
push
scas
fsub
push
scas
fcmovb
push
in
mov
loopne
(bad)
cdq
xor
pop
inc
scas
sbb
repnz
lods
fsub
mov
or
pushf
lahf
sbb
out
push
mov
adc
(bad)
mov
cdq
push
inc
out
cs
jbe
cmps
pop
xchg
mov
mov
and
jle
push
lea
mov
add
adc
xlat
jmp
jae
xor
test
clc
mov
mov
jmp
cdq
rol
addr16
sbb
dec
jl
mov
loope
or
push
rcr
pop
retf
xlat
fs
mov
jmp
cwde
test
sub
in
push
bound
and
pop
dec
inc
dec
lahf
shr
dec
adc
fwait
nop
dec
or
je
xor
mov
out
adc
inc
or
rcr
cmp
arpl
pop
fwait
es
cdq
clc
(bad)
mov
inc
mov
scas
mov
mov
or
cmp
pop
push
pop
pop
outs
into
popa
es
add
jmp
(bad)
iret
retf
nop
lods
sub
or
sbb
xchg
adc
into
je
cld
xchg
pop
push
(bad)
fldenv
inc
loop
sub
xor
movs
pop
cs
mov
mov
dec
xor
xor
inc
sub
icebp
pop
mov
scas
xor
inc
adc
outs
test
repnz
cmp
push
in
leave
ja
mov
retf
test
cld
aad
stos
das
lods
and
lods
fdivr
retf
mov
dec
cmc
outs
movs
inc
out
push
imul
sbb
test
fcom
jb
test
pop
ficomp
jb
jae
fld
mov
xor
fdiv
push
xchg
jb
dec
adc
sbb
out
mov
mov
jnp
jg
shr
cs
jmp
lock
paddusw
cmps
sar
inc
inc
mov
cmp
xor
fisttp
mov
push
mov
jmp
inc
add
pop
cwde
mov
push
sub
loopne
nop
jl
cmps
mov
in
push
int3
hlt
pop
xchg
lods
stos
or
xor
aad
jp
sub
pop
dec
stos
aas
data16
push
mov
in
mov
outs
aaa
ss
jge
xchg
cmps
inc
adc
jns
jno
call
push
jmp
sbb
lods
or
stos
mov
mov
mov
test
add
adc
and
aam
fidivr
push
adc
inc
xchg
fidiv
out
mov
into
stos
add
mov
unpckhpd
sahf
in
push
jo
in
mov
add
sub
dec
shl
xor
adc
rcl
(bad)
or
adc
shl
add
(bad)
out
push
inc
adc
scas
pop
mov
pushf
test
sbb
xchg
out
push
dec
push
lea
stc
or
adc
xchg
mov
jecxz
fcmovbe
or
sbb
push
mov
in
aam
adc
shl
pusha
dec
inc
mov
enter
add
stos
jl
mov
js
sub
and
icebp
rcr
mov
and
sub
add
aaa
pop
push
movs
out
jae
retf
das
stc
pop
jle
daa
jecxz
lods
dec
push
jb
inc
rcl
je
or
jb
add
mov
scas
aaa
fild
in
dec
or
stc
or
push
loop
pop
lea
hlt
inc
mov
add
pop
mov
mov
ret
fs
mov
sub
addr16
fdivr
fsubp
push
ds
add
jecxz
push
xor
mov
jl
out
jg
pusha
sub
lods
adc
fistp
jnp
xchg
pop
pusha
imul
ret
sub
sbb
les
(bad)
sbb
icebp
pop
adc
sub
push
jg
ins
and
and
outs
add
ja
mov
and
fst
rcr
js
push
imul
push
cld
test
scas
mov
sar
test
sub
mov
mov
push
sar
cdq
enter
inc
mov
or
repz
adc
cld
scas
mov
jno
jcxz
jp
jbe
xchg
rdtsc
aaa
enter
add
ffreep
cmp
daa
(bad)
and
pop
(bad)
inc
outs
shl
adc
cs
adc
es
jecxz
add
jne
sub
mov
neg
sub
or
(bad)
xchg
cmp
add
scas
in
pop
ins
aad
push
xchg
mov
popa
popf
nop
(bad)
jp
adc
adc
sbb
or
fsub
jns
mov
xlat
ret
sti
dec
neg
mov
stc
int
inc
sar
pop
dec
or
push
loop
xor
push
jno
icebp
cmp
or
in
mov
adc
pop
cmp
shr
nop
popf
fdivr
xor
adc
mov
sbb
xor
loope
(bad)
std
jg
popf
sub
pop
push
nop
and
ficom
pop
cli
cmp
fistp
add
in
mov
in
fbld
push
outs
arpl
add
cmp
clc
sbb
leave
push
repz
sbb
loop
dec
mov
pop
and
adc
add
cmps
adc
xor
test
mov
aas
clc
push
jp
inc
add
repz
jbe
leave
push
fidiv
ret
es
xlat
push
inc
pop
fstp
scas
sahf
outs
sbb
or
mov
repz
aaa
mov
les
push
or
xlat
push
push
pop
out
fsub
push
cs
xor
repnz
xchg
sbb
call
mov
cdq
scas
loop
xchg
dec
clc
inc
or
bound
(bad)
cld
fs
int3
jecxz
shr
fimul
inc
iret
fimul
fs
sub
aaa
inc
mov
and
jg
fistp
xchg
mov
sbb
aas
rol
cwde
xchg
sbb
ret
jge
mov
or
inc
call
mov
int3
jns
dec
mov
int
cmp
cmps
sub
xchg
arpl
addr16
jge
call
jne
mov
ss
mov
mov
adc
int3
dec
test
dec
imul
mov
dec
lods
pop
mov
call
loope
into
mov
loopne
and
adc
mov
lock
mov
sub
(bad)
inc
add
push
add
and
(bad)
fstp
sub
shr
out
(bad)
mov
in
or
add
ret
in
sub
cmps
loop
pushf
mov
std
cdq
clc
out
mov
pop
add
and
movs
sbb
(bad)
les
mov
aam
js
jo
cmp
cmp
pop
and
enter
mov
out
scas
scas
movs
inc
ins
inc
adc
(bad)
call
mov
lock
lea
fsubr
adc
(bad)
xchg
pusha
arpl
push
or
and
hlt
push
jmp
pop
outs
lea
sub
and
push
xchg
mov
jne
push
leave
out
add
xor
xchg
mov
sar
mov
cmp
mov
add
sub
jmp
xchg
push
je
loopne
int
mov
adc
je
inc
popf
push
jo
repz
xlat
push
fwait
pop
add
dec
xlat
test
xchg
pop
jbe
stc
sbb
jmp
mov
ror
retf
(bad)
enter
call
outs
popa
(bad)
shl
scas
gs
dec
ins
in
cmp
jmp
push
fmul
xchg
movs
cmps
fadd
pop
xlat
inc
stc
out
das
pop
js
cmps
jbe
mov
mov
lods
pushf
xchg
inc
test
shr
rol
push
and
mov
jl
mov
out
inc
adc
jne
ret
sub
lea
scas
push
mov
mov
cs
cmp
in
repz
test
dec
mov
in
mov
lods
stos
mov
mov
cmp
xchg
add
and
add
push
into
and
dec
jl
mov
lea
pop
sub
mov
retf
pop
or
sub
gs
xor
xor
dec
jbe
test
outs
movs
xchg
add
add
nop
int
bound
outs
xchg
in
test
xchg
and
imul
mov
cmp
jmp
dec
ss
out
cmc
or
mov
mov
fwait
add
jle
test
ins
lahf
push
fcmovnbe
mov
jp
popa
dec
enter
leave
xchg
test
aaa
cmp
mov
arpl
cmp
mov
inc
xor
mov
sbb
cdq
sub
(bad)
mov
jle
jne
inc
adc
stc
push
stc
xor
leave
or
xor
dec
ja
das
jb
adc
mov
ja
mov
pop
jmp
adc
in
xlat
sbb
jne
fisttp
xchg
shr
mov
mov
cmp
mov
and
jo
jbe
sub
mov
shl
std
mov
shr
push
sti
mov
mov
adc
mulps
xlat
and
sahf
mov
adc
cmps
push
dec
jp
movd
out
jp
lea
ror
les
test
push
iret
arpl
dec
jbe
sub
add
xor
pop
inc
repnz
sbb
dec
sahf
jl
ja
mov
push
adc
sbb
fst
fneni(8087
call
jbe
xor
ins
inc
hlt
xchg
add
or
mov
xor
push
mov
jg
and
or
or
xlat
mov
xor
retf
jb
retf
xlat
cmp
shl
sub
sub
sub
add
fwait
mov
jo
les
rcl
inc
aam
fwait
(bad)
(bad)
fst
in
xor
jns
imul
test
dec
les
jb
add
outs
cmp
and
imul
mov
mov
dec
sub
cwde
jae
fsubr
out
jl
jbe
lea
sbb
call
loop
push
dec
test
arpl
nop
and
inc
hlt
mov
hlt
cmps
xchg
test
adc
outs
push
jg
ficomp
shl
(bad)
arpl
sbb
mov
sbb
bound
mov
loope
jle
jns
in
sbb
dec
icebp
out
rcl
or
jnp
xchg
dec
mov
(bad)
loopne
jp
xchg
push
cmp
dec
xchg
sub
scas
xor
or
pusha
out
ss
and
in
xor
retf
test
xchg
loopne
sbb
mov
adc
jg
dec
fwait
cmp
ins
pop
inc
pop
jecxz
mov
add
int3
ds
or
popf
arpl
inc
sti
xchg
jle
jmp
xchg
adc
dec
adc
fstp
cmc
(bad)
jp
nop
das
xor
dec
or
pop
sub
inc
push
cmp
mov
call
cmp
dec
mov
sub
or
es
pop
popa
fadd
dec
push
fwait
lahf
sbb
cmp
aas
push
fsub
in
or
adc
and
or
fst
pushf
inc
fisttp
xchg
cmp
xchg
adc
xchg
dec
ja
outs
push
mov
mov
pop
arpl
call
add
mov
in
add
mov
sub
fstp
inc
je
retf
push
movs
out
repnz
fstp
loopne
pop
ins
xchg
inc
sub
lock
out
sti
ret
dec
ins
sbb
lods
stc
ret
and
sub
xchg
mov
rol
xchg
pop
adc
dec
jge
loope
popf
cld
pop
shl
jb
jle
inc
out
inc
mov
stos
icebp
mov
jnp
push
and
mov
mov
jbe
xchg
xchg
loopne
test
mov
mov
mov
dec
sbb
xor
jmp
add
dec
into
mov
adc
iret
addr16
dec
push
stc
mov
ins
mov
test
xor
jmp
es
(bad)
adc
sbb
mov
jmp
data16
push
sbb
xor
jno
call
retf
dec
and
pop
out
push
fnstenv
inc
fwait
mov
ds
pop
pusha
out
adc
loopne
fdiv
inc
(bad)
lods
repz
xor
mov
mov
leave
scas
jle
xchg
enter
cwde
xor
pop
out
clc
cwde
jmp
gs
add
popf
enter
or
or
jp
sub
jae
and
ja
push
cwde
mov
std
lea
jb
lea
call
fmul
pop
rol
jno
mov
xlat
inc
add
and
clc
add
(bad)
mov
jmp
aam
cmp
xchg
daa
push
scas
pop
and
dec
outs
ret
loopne
lods
fdiv
ds
scas
sbb
fs
test
out
stos
fsub
push
test
jmp
shr
pop
movs
int3
in
pop
mov
shl
mov
clc
clc
dec
mov
hlt
inc
mov
ret
lock
cld
jle
hlt
retf
icebp
enter
jecxz
lods
fsubrp
pop
movs
shr
inc
movs
shl
js
into
clc
js
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
es
mov
loop
scas
ss
mov
out
lods
ffreep
push
push
push
jecxz
scas
fsub
pop
lods
(bad)
push
scas
fsub
push
scas
fsub
push
scas
aam
push
cmps
shr
push
lods
enter
in
loopne
stos
fsubp
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
cmps
fsub
pop
lods
aam
in
shl
scas
fadd
push
mov
loop
pop
cdq
ret
adc
inc
inc
imul
dec
xor
jno
cmp
ds
pop
mov
ret
imul
jle
adc
(bad)
push
shl
xchg
shr
cdq
jnp
push
test
xor
xchg
push
mov
sub
mov
push
jge
xchg
xor
mov
lahf
in
cmp
sti
int3
shr
pop
repnz
push
xor
sub
xchg
add
jg
sbb
add
out
cmp
stos
add
(bad)
cs
fcomp
inc
mov
das
pop
bound
scas
popf
cwde
push
mov
jle
std
enter
pop
enter
mov
mov
inc
jno
inc
pop
test
mov
sub
xor
mov
pop
clc
syscall
xchg
xor
into
popf
mov
je
addr16
jp
ret
fistp
sbb
jle
push
aas
lahf
ins
xchg
stos
mov
jmp
xor
sahf
pop
sbb
jle
adc
es
enter
div
iret
mov
cmps
ds
push
or
data16
pushf
jge
inc
xchg
ror
xchg
sub
sbb
sbb
inc
adc
xor
add
dec
ss
or
mov
outs
clc
test
out
(bad)
and
mov
popf
aad
cmps
(bad)
and
jmp
aas
ins
mov
xchg
or
rol
scas
movs
cmp
aas
mov
xchg
ret
mov
jge
mov
sub
ins
jmp
adc
out
pop
mov
and
movs
call
pop
in
cmp
lea
push
outs
repnz
xor
cli
out
add
es
mov
add
sahf
enter
xchg
loop
mov
add
xor
adc
jp
jne
add
mov
cmps
or
in
jnp
movs
stos
(bad)
pusha
mov
jmp
nop
push
push
test
cmp
push
xor
dec
xor
iret
add
pop
pop
shl
enter
repnz
sahf
aad
ret
in
xor
mov
cmp
dec
stc
sbb
rcr
pop
and
popf
repz
(bad)
icebp
mov
movs
pop
stc
(bad)
icebp
and
mov
sub
jbe
adc
(bad)
or
(bad)
mov
sub
sub
(bad)
hlt
out
(bad)
pop
mov
jbe
mov
mov
repz
pop
loopne
cmps
enter
(bad)
pop
mov
fdivr
push
stos
fsub
push
stos
shr
push
scas
fsub
push
stos
fsubp
pop
movs
fsubr
je
lock
call
into
mov
sbb
scas
enter
fucomi
push
pop
dec
inc
dec
and
in
int3
aad
cmp
mov
psubb
ins
dec
retf
and
int
mov
mov
rcr
jo
mov
fst
cmp
scas
std
cli
xor
dec
popf
in
add
loop
ss
jne
jbe
mov
mov
je
jl
popf
add
jmp
scas
xchg
ins
xchg
adc
lock
das
retf
xchg
mov
add
in
nop
call
cli
stos
mov
fcom
enter
fsub
aaa
(bad)
mov
pop
add
jae
and
clc
mov
xor
sbb
inc
out
fldcw
dec
ret
arpl
jmp
or
mov
int
jno
ds
fldln2
xor
dec
pop
call
dec
sub
push
xor
js
cld
dec
ins
iret
aaa
push
stos
mov
jmp
xor
aaa
pop
add
sub
mov
das
cmc
cmps
mov
imul
xchg
ins
add
dec
movs
popf
xor
cwde
dec
sbb
or
popf
(bad)
add
nop
sub
push
and
pushf
ror
jmp
fidivr
jle
and
test
inc
cmc
movs
repz
imul
xchg
and
ficom
mov
and
popa
xchg
enter
sbb
sub
sti
arpl
imul
out
into
loope
or
scas
and
lea
add
leave
inc
mov
and
adc
or
mov
mov
push
pop
sbb
movs
mov
lahf
jmp
imul
mov
jg
aas
xchg
adc
jg
push
dec
retf
jns
lea
dec
es
fisttp
xor
add
xchg
jno
shrd
xor
mov
cmp
jg
sub
inc
in
call
push
call
test
jmp
gs
ret
imul
lock
scas
scas
test
popa
frstor
cmp
inc
movs
add
fcmovb
sbb
mov
mov
cmc
push
add
or
fidivr
and
inc
aam
xor
adc
stos
sahf
pop
sti
jmp
dec
test
ret
xor
sahf
jecxz
mov
xchg
rol
pop
and
test
xlat
aaa
cdq
jg
jmp
sbb
(bad)
adc
mov
dec
push
fwait
or
sbb
shld
das
call
push
push
pop
imul
inc
shl
inc
push
pop
mov
mov
xor
mov
and
scas
into
mov
dec
jb
mov
jns
mov
test
(bad)
call
out
cmp
sub
mov
js
inc
mov
xor
dec
jle
push
jle
inc
push
adc
add
into
push
jecxz
pusha
(bad)
inc
xor
pop
push
jb
sbb
pop
fs
inc
cmp
ret
mov
out
push
jno
inc
lahf
push
das
(bad)
xchg
inc
dec
js
mov
sub
inc
dec
mov
or
xchg
lahf
icebp
(bad)
popa
jp
jmp
fild
das
mov
cld
(bad)
pop
cmp
or
and
sahf
frstor
scas
scas
fwait
sar
xor
adc
gs
xor
das
(bad)
repz
pop
dec
dec
inc
push
out
push
xchg
inc
movs
enter
inc
clc
mov
jecxz
push
push
jecxz
mov
out
test
in
stos
fsub
push
scas
fsub
push
scas
(bad)
push
test
(bad)
pop
in
mov
mov
xor
pop
and
lods
fsubp
push
rcr
ss
pop
push
icebp
pop
aam
jns
push
xor
push
sbb
pop
cs
daa
xchg
sbb
fmul
stos
(bad)
mov
pop
inc
pusha
jp
repnz
(bad)
jno
and
ins
je
push
lock
mov
je
cmp
sub
cdq
es
out
popa
imul
mov
aaa
xor
xor
mov
dec
dec
sub
iret
push
mov
dec
enter
push
mov
ins
pop
nop
hlt
scas
mov
jmp
lods
and
and
or
daa
icebp
fs
and
(bad)
call
mov
ret
add
loope
in
add
cmp
inc
mov
call
or
ins
mov
stos
int3
mov
xchg
mov
leave
cmp
hlt
nop
sahf
mov
jb
ins
jbe
lea
ds
sbb
fstp
jmp
cmp
xchg
clc
jbe
fdiv
sbb
jge
push
cmp
out
in
test
rol
adc
mov
rcr
push
(bad)
push
sub
popa
call
push
fs
xchg
push
shr
pop
aas
xlat
pop
xor
inc
dec
popa
mov
inc
lods
mov
imul
dec
test
call
mov
adc
cmp
jle
xor
mov
lds
in
cmp
fs
cmps
and
mov
and
es
sbb
jge
js
jns
add
nop
xor
outs
repnz
or
in
call
adc
or
dec
(bad)
jge
sar
mov
pop
pop
adc
call
clc
mov
push
sub
and
sub
push
xchg
jmp
xor
mov
cmp
ds
jmp
into
bound
nop
or
cmp
sahf
push
mov
xchg
test
fcomp
data16
inc
push
inc
mov
outs
lock
cmp
mov
cmp
jo
test
inc
scas
scas
repnz
mov
aaa
inc
jne
xor
add
retf
fistp
mov
fsubr
push
int
xor
pusha
dec
pop
stos
mov
pop
mov
rcr
ins
pusha
cmp
iret
or
xchg
push
addr16
out
lods
in
les
movs
mov
or
ss
jge
inc
mov
jbe
push
jp
xchg
sbb
add
daa
iret
(bad)
leave
lds
pushf
rol
iret
dec
fidiv
cli
push
cmps
and
scas
imul
loop
stos
(bad)
push
cmps
(bad)
push
test
loop
scas
fsub
push
scas
fsubrp
jb
call
xchg
xchg
out
pop
and
into
cmp
sbb
repnz
stos
(bad)
lods
ss
sbb
jecxz
dec
add
ja
sbb
enter
pop
xor
and
ds
ins
clc
xlat
xlat
push
inc
adc
inc
and
and
mov
cwde
adc
popf
xchg
jmp
mov
jmp
inc
movs
data16
shl
mov
fwait
in
in
shr
iret
mov
mov
div
cmp
adc
inc
and
cmp
jno
push
inc
mov
fmul
aaa
test
cmp
or
cmp
inc
imul
pop
push
jns
ja
push
sahf
dec
rol
adc
in
pop
inc
lods
xor
mov
jl
int3
sbb
fld
cmp
xchg
out
lods
clc
popf
push
mov
xchg
mov
lods
mov
and
push
cdq
arpl
pop
adc
dec
int
sar
sbb
test
std
das
push
gs
push
push
jno
(bad)
or
in
mov
shl
add
push
je
dec
rol
(bad)
push
fcom
enter
add
or
pop
cmp
les
adc
retf
imul
jge
dec
sub
and
jle
imul
dec
popa
jecxz
adc
or
sti
repnz
dec
push
jae
add
imul
test
adc
and
aad
mov
mov
push
pop
aaa
popa
js
in
sti
jge
jecxz
xchg
ja
cmp
inc
fisubr
in
mov
or
jae
in
jp
movs
mov
sbb
scas
mov
in
jmp
loope
aas
mov
data16
lahf
pop
popa
inc
inc
cdq
dec
outs
in
or
pop
dec
push
dec
shl
and
ror
inc
retf
xchg
mov
inc
out
mov
out
in
add
adc
mov
cmp
pop
in
or
lods
mov
dec
mov
test
mov
fisttp
cmp
mov
dec
and
sti
aas
call
push
fprem
ret
movs
inc
add
and
push
stos
cld
outs
cs
cmp
dec
sahf
cmp
(bad)
push
adc
mov
les
cmp
sub
lahf
out
test
int3
pop
loopne
jns
or
aaa
cmp
ret
loopne
lods
rcr
jns
mov
iret
inc
jg
add
jecxz
sub
pop
movs
inc
mov
jl
or
push
and
inc
mov
cli
sbb
repz
sbb
mov
cmp
popf
fs
lods
inc
rcr
(bad)
fld
es
sbb
js
fs
outs
icebp
imul
sbb
push
add
push
dec
cmps
jecxz
ss
(bad)
enter
mov
add
ret
retf
mov
cwde
aas
(bad)
mov
xchg
loope
cld
ds
in
inc
loopne
jno
adc
ins
gs
retf
inc
push
dec
xchg
mov
jnp
je
test
jecxz
iret
aas
xor
std
popa
mov
movs
jb
jne
dec
fwait
rcl
adc
fwait
outs
test
aaa
les
leave
jle
call
and
outs
sub
pop
nop
js
pop
jg
call
adc
bound
leave
push
inc
or
dec
hlt
xchg
mov
dec
daa
jo
data16
fwait
loopne
mov
jg
cmp
or
mov
lahf
xchg
or
mov
int
out
mov
rcl
out
fnstenv
pop
push
idiv
aad
sub
cmc
stos
xchg
ins
in
jecxz
add
adc
or
enter
jmp
pop
int3
mov
jge
test
retf
(bad)
add
bound
inc
cmps
push
fmul
or
sbb
retf
xchg
jns
ret
dec
fsubp
inc
xchg
xor
and
inc
pop
sbb
aaa
mov
cdq
mov
movs
push
or
add
push
xor
es
fdivr
lods
sbb
imul
loop
lods
fsub
pop
cmps
int3
in
pop
mov
fsub
push
test
rcr
les
pop
inc
xchg
dec
cli
jmp
hlt
lods
call
dec
mov
add
mov
cmps
mov
pop
in
or
push
push
mov
cmps
out
ja
sub
jle
mov
xor
xor
cmps
pop
push
xchg
push
shl
sahf
(bad)
push
data16
inc
or
sub
xor
shl
xchg
sub
jg
(bad)
jbe
jp
aaa
push
mov
jo
xor
mov
pop
aam
adc
add
push
sub
int3
call
and
cld
cli
bound
sub
add
out
ins
std
push
pop
aaa
cmp
and
jns
out
mov
add
xchg
movs
popa
fadd
ja
mov
xor
mov
sbb
sub
xchg
std
jbe
or
jae
rcl
in
and
jmp
adc
push
add
xchg
retf
fbld
pushf
cs
mov
cmp
dec
jl
arpl
jmp
xchg
icebp
mov
xor
mov
dec
mov
popa
inc
out
mov
jb
pop
cmp
jae
jbe
xchg
pop
xor
and
mov
jmp
mov
test
mov
mov
mov
adc
push
pop
mov
(bad)
loop
cmp
cli
pop
dec
gs
push
xchg
std
sub
dec
cwde
lock
add
pop
rcl
imul
adc
and
retf
mov
jecxz
push
jb
and
jno
mov
rcr
xor
aad
cmp
stos
outs
jmp
movs
test
or
nop
inc
sub
cmps
loopne
jmp
push
jl
arpl
addr16
and
inc
sub
retf
outs
ret
loope
dec
dec
fs
jbe
ins
dec
mov
aaa
clc
and
imul
pop
push
jg
sub
pop
jo
adc
jge
test
arpl
and
arpl
mov
add
xchg
sbb
add
xchg
sub
pop
rcr
dec
int3
dec
rcr
aas
aad
imul
adc
clc
jns
sahf
enter
mov
movs
std
cmp
jp
mov
pop
sub
js
inc
adc
push
and
sbb
xchg
call
out
mov
cmc
sbb
mov
mov
mov
jmp
mov
test
or
out
jnp
and
jnp
jo
enter
and
std
mov
scas
pop
sub
out
jl
(bad)
jne
cmp
cmp
imul
inc
in
mov
rcr
retf
sub
(bad)
adc
div
pop
shr
xchg
mov
and
inc
adc
xor
es
and
push
cwde
pop
mov
or
or
mov
(bad)
(bad)
cmp
xchg
inc
add
jp
add
add
jg
outs
in
cwde
mov
fnstsw
out
push
sub
lahf
push
jge
int
(bad)
fild
outs
mov
fs
into
push
inc
sahf
xlat
mov
int
xchg
mov
loope
arpl
xchg
pop
aam
xor
or
push
xor
cs
push
pop
std
jmp
cmp
xor
cmp
lea
cli
aad
test
and
(bad)
fnstcw
popf
gs
shr
ja
std
mov
stos
inc
into
mov
jnp
or
adc
repz
mov
adc
movs
(bad)
sbb
ss
or
lea
pop
pushf
(bad)
dec
xchg
or
mov
int3
pop
jae
lods
xchg
out
in
inc
cmps
in
jle
sub
inc
not
fild
js
fbstp
push
mov
pop
fwait
or
dec
aad
push
pop
mov
pop
add
and
les
iret
loope
push
jb
and
test
cmp
ja
imul
pop
out
retf
cmp
dec
or
or
mov
dec
dec
icebp
xchg
ss
repz
dec
sbb
jl
call
test
fisubr
dec
(bad)
stc
add
arpl
(bad)
je
clc
mov
mul
dec
lds
xchg
ins
xchg
es
push
mov
pop
rcl
jmp
rol
mov
jns
gs
adc
out
jae
jge
(bad)
in
mov
lock
jmp
add
xor
loop
mov
dec
push
pop
das
fwait
iret
pop
mov
mov
and
or
xlat
xor
xor
mov
or
push
jo
in
push
and
mov
xor
adc
mov
jne
and
fiadd
je
mov
sti
clc
repnz
adc
gs
(bad)
iret
imul
leave
push
push
pop
push
loop
imul
cmc
inc
scas
mov
jmp
dec
xor
sub
rol
mov
add
push
xchg
jl
push
bound
out
mov
cmc
inc
pop
scas
sbb
out
pop
outs
outs
jne
add
sub
pop
dec
sub
leave
xor
cmp
fisttp
std
leave
rcl
retf
(bad)
push
push
fdivr
inc
adc
jns
dec
cmp
cld
out
sbb
adc
xchg
adc
or
jg
icebp
mov
push
loopne
and
dec
sbb
mov
xor
push
add
mov
leave
cmp
neg
jg
and
je
push
je
popf
mov
es
adc
inc
jnp
call
loop
fs
or
adc
mov
(bad)
stc
stc
mov
in
imul
jmp
jb
and
mov
cmp
aas
jb
mov
push
cmp
sar
loope
pop
ret
push
(bad)
or
push
sub
mov
aam
dec
int3
(bad)
pop
xor
lea
test
outs
lods
lahf
setno
mov
mov
rol
mov
xchg
add
(bad)
frstor
and
(bad)
std
(bad)
std
jecxz
push
push
jecxz
movs
mov
(bad)
inc
repnz
push
rol
push
test
cmp
movs
dec
sub
out
cmp
pop
(bad)
jns
adc
mov
mov
cdq
popa
inc
out
pop
push
(bad)
mov
mov
adc
ficomp
mov
lods
shr
and
jecxz
mov
pop
fnstsw
dec
ror
pop
pop
cli
(bad)
mov
cmps
jmp
jae
pop
vmovsd
adc
pop
int3
jns
rcl
xor
or
popa
or
js
out
int3
icebp
adc
pop
outs
inc
mov
or
bound
xor
clc
inc
mov
push
adc
mov
rcl
dec
stc
clc
cmp
pop
push
pushf
inc
or
sbb
push
movs
dec
sub
sbb
jge
or
inc
rcl
jnp
out
add
or
imul
and
sar
std
test
sbb
mov
mov
sbb
pop
xchg
and
push
mov
push
xor
inc
mov
in
mov
stos
sbb
and
sbb
push
fst
test
(bad)
sbb
sub
cdq
jnp
adc
ins
(bad)
or
inc
fcom
unpcklps
scas
mov
cmp
nop
mov
pop
in
imul
push
or
sub
pop
mov
dec
outs
mov
xchg
jnp
dec
xor
jb
xor
xchg
dec
mov
shl
push
nop
sbb
sbb
std
mov
mov
jg
pop
retf
aam
iret
adc
out
xchg
bound
gs
(bad)
imul
lock
adc
aad
jns
popf
ins
(bad)
lds
mov
leave
xor
push
sub
mov
mov
inc
jecxz
xchg
es
xchg
inc
push
xor
inc
stos
(bad)
popa
sti
jge
sub
dec
imul
push
sub
repz
jns
lods
out
fs
es
vandps
cmp
push
addr16
lea
gs
cli
or
inc
sub
jnp
dec
mov
adc
pop
jne
xchg
jecxz
jns
adc
mov
push
out
jl
clc
xchg
scas
scas
repz
lea
jecxz
shr
and
sub
jmp
or
das
xor
fadd
gs
jmp
in
sahf
jno
xor
xchg
iret
sub
push
mov
xchg
movs
and
daa
imul
fsubr
outs
mov
xchg
out
hlt
xor
inc
fcomp
ins
jns
div
nop
inc
xchg
jmp
in
xchg
mov
pop
add
cmp
jecxz
lods
ds
cmp
jg
mov
fstp
mov
pop
push
addr16
push
jecxz
mov
loop
cmps
(bad)
pop
stos
fsubp
push
lods
fsub
push
scas
fcmovb
push
in
mov
loopne
in
mov
inc
xchg
dec
mov
repnz
lods
fsub
cs
and
and
cmp
out
in
cmp
in
jns
in
push
mov
xchg
repz
cmps
es
movs
xchg
pop
sub
movs
rol
cmps
jmp
mov
retf
and
in
mov
(bad)
les
nop
push
jne
test
pushf
mov
dec
movs
xor
lods
movs
pusha
push
pop
xor
add
or
sub
sbb
pop
sbb
add
mov
xor
xor
pop
or
add
popa
mov
push
ja
lods
mov
stc
outs
mov
adc
stc
mov
stos
adc
pushf
inc
fdiv
pop
xlat
(bad)
pusha
sbb
cli
or
pop
mov
popa
xor
pop
ss
sbb
icebp
test
in
mov
mov
mov
out
xchg
fisttp
xor
pop
rcl
sub
out
cmp
daa
pop
jno
(bad)
(bad)
neg
out
fnstenv
xor
ins
rcl
ja
jbe
pop
jb
repz
sub
out
movs
adc
sbb
test
jg
cmp
mov
mov
xor
neg
and
je
das
ror
pop
(bad)
(bad)
in
pop
dec
fwait
lods
lds
mov
ds
xor
inc
inc
inc
and
jno
pop
xlat
out
gs
jns
inc
loopne
mov
mov
adc
xchg
pop
push
dec
stos
inc
ret
and
repz
cwde
repnz
bound
popa
xchg
ret
mov
jg
daa
call
xchg
out
push
int3
jg
xor
pusha
ja
outs
jge
jg
adc
sahf
cmc
xchg
leave
xor
jge
push
ror
cdq
mov
dec
int3
jg
mov
and
dec
cli
mov
mov
and
mov
cmp
xchg
mov
sahf
inc
sub
dec
test
and
pop
mov
ret
xor
es
aad
cmp
into
in
pop
adc
hlt
mul
(bad)
rcl
inc
jle
cmp
(bad)
fsub
dec
rcl
stc
call
scas
repnz
jle
out
sub
cmp
adc
jp
xor
inc
adc
ret
or
loope
cmp
sbb
les
das
int
aas
push
push
fsub
enter
(bad)
mov
jae
clc
fnstenv
sbb
cwde
push
retf
sub
in
inc
mov
rcr
rcl
imul
pushf
std
mov
sbb
push
icebp
mov
std
lock
push
jmp
in
jle
mov
arpl
fistp
add
jb
bound
pusha
icebp
sub
(bad)
dec
push
mov
mov
lods
jp
mov
jno
stos
sahf
xchg
inc
mov
arpl
je
xor
cmp
inc
retf
fs
jno
or
hlt
push
xor
imul
mov
jnp
push
stc
cmp
jne
mov
mov
push
stc
inc
scas
pop
and
test
sbb
and
and
pop
jno
cmp
xchg
cmps
stc
pop
out
jp
idiv
lock
shl
es
dec
jl
inc
cmp
push
aaa
mov
aad
xor
cmps
out
pop
or
jp
push
mov
das
test
jae
inc
sbb
arpl
mov
inc
cmps
iret
cmps
cmc
xor
xor
push
push
cmp
xchg
test
ror
dec
xlat
stos
sbb
test
sub
dec
sub
jl
add
int3
fst
pop
pop
adc
and
lock
pop
xchg
xchg
mov
push
mov
ror
lahf
dec
call
push
adc
aaa
adc
test
fmul
mov
nop
mov
cli
cdq
pop
adc
add
fwait
outs
add
test
xlat
cmp
retf
jle
fisub
fdiv
(bad)
ss
inc
cs
lock
not
stos
retf
push
in
aad
lock
aas
mov
aaa
jne
test
jmp
fwait
inc
in
xlat
rol
lods
mov
test
mov
movs
out
add
int
in
jo
lahf
cmps
push
inc
or
pusha
and
movs
adc
sub
inc
mov
cmp
mov
shl
mov
das
and
mov
push
rcr
movs
dec
ins
aas
adc
(bad)
jp
cmp
adc
stos
inc
loope
sahf
push
retf
push
(bad)
aad
or
movs
sub
(bad)
inc
xchg
push
rol
mov
push
bound
xor
retf
jp
lds
test
jne
xlat
pop
outs
jae
fist
sbb
inc
and
adc
in
jmp
sbb
and
loopne
call
mov
jecxz
mov
pusha
or
xor
push
push
jb
hlt
and
icebp
xchg
mov
retf
arpl
add
leave
ror
xchg
out
rcr
mov
das
and
push
sub
dec
add
stos
pop
add
push
mov
cdq
and
mov
pop
pop
inc
xchg
jmp
xor
shl
(bad)
cli
scas
cmp
lahf
mov
and
xchg
mov
arpl
and
pop
(bad)
icebp
jne
popf
cmps
enter
mov
inc
push
push
addr16
mov
fxtract
jmp
imul
cli
icebp
popa
mov
or
and
hlt
icebp
jle
(bad)
cwde
hlt
mov
adc
adc
das
add
inc
jge
test
inc
lahf
pop
es
or
retf
push
ja
iret
adc
mov
lea
movs
shl
cmps
sahf
cmp
or
sbb
pop
outs
(bad)
adc
or
ins
mov
rcr
jecxz
inc
jp
mov
xchg
stc
jge
lahf
cmp
add
inc
push
push
data16
cmp
fcmove
ret
out
adc
leave
add
out
jb
or
jb
push
jo
pop
and
jno
xlat
jp
xor
repnz
nop
call
in
shr
dec
sbb
xchg
push
je
jmp
sbb
fdiv
in
mov
nop
pop
pop
mov
psllq
call
imul
stos
sbb
cmps
push
dec
push
or
lds
push
and
adc
sti
xor
addr16
dec
js
cmps
loopne
aaa
call
outs
enter
mov
add
adc
pop
std
xchg
gs
mov
icebp
shl
into
(bad)
and
jge
pop
pop
or
mov
cli
test
jnp
push
push
mov
mov
xchg
cdq
lods
jmp
das
sti
pop
test
sub
add
add
mov
cmc
adc
inc
loopne
lods
es
gs
shl
lods
sub
call
aam
sbb
cli
push
lods
fsub
push
test
loop
mov
xor
and
pop
icebp
mov
pop
test
xchg
mov
outs
in
hlt
or
pop
out
xchg
inc
stos
call
sar
(bad)
sbb
fisttp
fs
add
sub
neg
lea
ds
test
or
out
jmp
xor
xchg
sbb
jmp
sbb
(bad)
jo
cmp
add
(bad)
push
xor
loop
scas
fsub
push
test
imul
loopne
stos
fsub
push
stos
fsub
push
scas
fsub
push
scas
fsub
push
mov
and
dec
cli
mov
scas
sbb
repnz
test
loopne
mov
xor
stos
jmp
mov
cmp
fadd
popa
add
jmp
cvttps2pi
and
test
pusha
sub
jb
jb
mov
cmps
in
call
repnz
pop
xor
inc
jb
sub
cli
jmp
pop
shl
cwde
aam
add
pop
(bad)
jmp
cmc
sbb
test
(bad)
fwait
lods
les
mov
adc
jge
fld
mov
test
fimul
rol
scas
arpl
in
clc
or
(bad)
cld
hlt
scas
mov
mov
imul
ja
fwait
in
cs
sub
jle
int
popfw
xchg
jns
push
mov
jmp
cwde
push
sbb
cmp
sbb
sub
jo
add
repz
shl
shl
mov
jmp
push
int3
xor
push
lea
movs
push
jb
ss
jl
add
loop
mov
shr
(bad)
jmp
ins
pop
and
inc
enter
jo
cmp
adc
mov
or
icebp
xchg
sub
iret
sub
dec
adc
dec
adc
mov
push
xchg
icebp
mov
and
dec
rcr
rcr
or
mov
movs
lods
cmp
shl
cmp
add
xchg
pop
mov
sub
movs
jmp
mul
cdq
das
fwait
inc
cdq
or
jp
cwde
nop
ja
pop
ror
sbb
mov
hlt
ret
lahf
in
jae
sbb
shl
jmp
jb
push
mov
popa
inc
test
mov
data16
test
and
mov
cwde
scas
xchg
pop
pop
mov
mov
jbe
ss
push
mov
repnz
push
push
mov
adc
retf
ret
mov
loope
pop
idiv
dec
in
pusha
nop
icebp
dec
push
imul
sar
xor
jecxz
and
cmp
mov
arpl
call
xchg
in
pop
mov
xor
xor
xchg
cs
repnz
repnz
lods
in
aas
inc
adc
es
daa
pmullw
dec
scas
xchg
test
dec
push
inc
cmps
sbb
push
scas
fsub
push
test
loopne
test
loop
scas
fsub
push
scas
cli
mov
mov
fcmovnb
adc
adc
mov
push
push
mov
cmps
ret
mov
or
cld
(bad)
push
cmp
xchg
aad
ret
inc
mov
cmps
cmp
outs
and
inc
not
repnz
mov
gs
pop
mov
test
xchg
bound
mov
out
mov
out
(bad)
fsubr
outs
and
stc
enter
test
mov
xor
sbb
je
jle
ror
retf
push
inc
dec
dec
(bad)
cld
mov
xchg
dec
xor
sub
dec
cmps
inc
icebp
pop
int
clc
pop
bound
retf
leave
mov
cld
mov
shl
and
scas
scas
inc
rcl
(bad)
adc
adc
cmc
pop
pop
cmps
test
dec
jmp
xchg
add
test
mov
movs
xchg
dec
leave
cdq
sbb
pop
mov
fs
movs
(bad)
and
or
stos
in
ror
push
fld
pushf
cli
es
lock
and
add
fsub
test
add
xor
cmp
cli
or
test
sbb
in
xchg
sbb
rol
add
scas
cld
jmp
jmp
pop
jbe
repnz
xchg
xlat
pop
(bad)
pushf
out
push
pop
pushf
inc
arpl
xchg
fs
mov
jmp
int
loopne
push
inc
and
das
imul
pop
pushf
mov
rol
ja
jb
xchg
push
xor
dec
jo
int3
imul
out
mov
adc
lods
or
pop
call
ds
enter
leave
add
std
addr16
test
shl
fwait
inc
push
push
aaa
sbb
fs
add
jecxz
or
dec
ror
iret
mul
xchg
jnp
mov
add
js
shr
inc
jne
mov
les
test
jle
test
rol
cwde
imul
call
xchg
fwait
loope
jns
loop
add
fldcw
xchg
sbb
pop
jle
pusha
and
push
pusha
inc
mov
mov
mov
and
(bad)
push
stos
stos
(bad)
test
mov
cli
daa
push
jbe
push
loop
jg
imul
jmp
mov
xchg
sahf
ins
push
pop
lds
into
sub
int
inc
sbb
cld
shr
xor
aam
daa
xor
push
lahf
adc
rcl
cwde
dec
out
shr
lods
arpl
sub
sbb
jmp
and
adc
bound
sub
addr16
lahf
mov
mov
inc
test
aaa
cmp
inc
inc
inc
or
push
fbld
pop
bound
pop
stc
hlt
fmul
or
daa
pop
cmps
gs
test
ss
jecxz
sub
jno
adc
mov
jle
out
inc
cmps
sbb
push
lods
fsub
push
stos
fsub
pop
test
loopne
scas
fsub
push
mov
mov
mov
sti
ret
adc
pop
mov
scas
sbb
repnz
lods
fsub
mov
ins
(bad)
sahf
in
stos
cdq
dec
xor
mov
mov
pushf
arpl
pop
(bad)
mov
sahf
out
por
xchg
adc
fdivr
sub
imul
mov
(bad)
cmps
jg
(bad)
bnd
popa
pop
xor
jb
pop
aad
or
dec
add
cmps
ja
test
std
mov
loop
mov
dec
call
and
mov
mov
(bad)
mov
xchg
retf
imul
xchg
pushf
mov
stos
jmp
test
push
pop
dec
imul
shl
sti
and
mov
js
and
sbb
pop
pop
jp
pop
adc
mov
mov
jb
or
call
jl
or
pop
dec
shl
and
into
movs
and
(bad)
imul
popf
or
repnz
mov
cmp
xchg
fs
sub
xor
xor
test
push
(bad)
(bad)
mov
cmp
scas
jne
mov
cs
or
cli
xor
test
add
(bad)
fld
lds
test
aas
and
popf
rcl
sbb
iret
test
test
push
push
push
int
xchg
jo
in
call
cli
out
inc
xchg
and
sub
in
mov
outs
jbe
add
es
jmp
adc
inc
add
out
int
mov
fdiv
fisubr
mov
jle
test
ds
push
bound
gs
mov
ins
adc
retf
jge
sbb
inc
clc
cmp
shr
mov
in
dec
sub
aam
(bad)
out
call
pop
and
cdq
xchg
adc
leave
push
mov
je
repz
imul
push
add
inc
xor
lock
rol
pop
and
push
retf
mov
pop
in
adc
ins
rcl
push
div
xor
rol
outs
fwait
pop
pop
test
mov
mov
jle
xchg
cs
push
cs
mov
xchg
inc
jnp
cwde
push
dec
push
(bad)
xchg
dec
loope
inc
fidiv
mov
mov
icebp
rol
test
jmp
aaa
xchg
cdq
inc
fwait
inc
sub
and
cmp
lods
mov
out
movs
mov
in
out
mov
xchg
mov
jmp
jmp
rcr
add
cmp
and
cmp
adc
lahf
mov
mov
push
shr
gs
xchg
fistp
mov
rol
jle
jge
jnp
xchg
mov
add
push
les
inc
pop
retf
adc
jbe
repnz
pop
(bad)
(bad)
out
shl
jl
int
cmp
jle
cld
out
add
into
jp
cmp
push
mov
xchg
enter
sbb
cli
jge
xor
ins
in
sbb
nop
in
and
mov
das
repnz
jmp
or
arpl
pusha
inc
and
pop
add
test
sub
sar
lods
popa
adc
retf
add
and
movnti
cmps
ret
fist
pop
in
xchg
jo
out
mov
stos
test
icebp
mov
adc
cs
outs
xor
pushf
lods
cmp
jbe
lods
cli
into
xchg
xchg
add
in
dec
mov
push
inc
sub
mov
(bad)
mov
ret
add
mov
add
adc
and
inc
aam
mov
movs
adc
lea
rcl
out
cmc
push
outs
pop
sbb
mov
cdq
cdq
outs
std
push
push
scas
pop
cld
jbe
cwde
push
cwde
test
je
push
pop
bound
call
rol
popf
mov
cmp
in
jmp
stos
cwde
pop
and
ins
ja
inc
rep
jp
or
push
jo
test
lds
dec
out
ins
retf
fadd
(bad)
pusha
(bad)
cmp
imul
mov
add
pusha
imul
js
mov
push
hlt
jo
aad
sub
inc
ror
adc
lock
test
jno
shr
inc
out
and
inc
jl
stc
xor
inc
push
loope
push
jmp
mov
in
mov
mov
ds
es
idiv
mov
loop
imul
and
jmp
int
xor
les
pop
dec
add
rcr
loop
inc
dec
xchg
add
mov
retf
test
and
cmp
test
xor
sbb
adc
inc
cmc
mov
xchg
cs
sub
add
cs
fiadd
mov
sub
adc
sar
push
inc
mov
adc
dec
xlat
cmp
fwait
popa
retf
fdiv
fsubr
clc
outs
or
inc
push
fs
je
xchg
out
movs
push
inc
clc
in
int3
fnsave
rcr
or
inc
push
int
(bad)
nop
test
push
and
mov
out
sbb
pop
mov
ret
inc
xchg
sub
ds
cmps
push
outs
shl
outs
sahf
push
hlt
adc
cmp
dec
dec
outs
xchg
xor
fcmovbe
jmp
xchg
pop
shr
add
call
aam
pop
add
mov
pop
jb
cpuid
cmp
loope
lods
mov
es
dec
mov
add
add
(bad)
repnz
ins
in
pop
cwde
std
in
mov
ss
push
ins
sub
xchg
xchg
add
in
imul
in
fdivr
(bad)
in
xor
sbb
out
ins
inc
stos
out
jmp
xchg
gs
or
std
jmp
std
cmp
imul
mov
fidivr
lods
xchg
std
dec
sbb
(bad)
mov
mov
mov
mov
cli
add
push
pusha
(bad)
in
mov
sub
xlat
lea
(bad)
loopne
aam
cmp
inc
in
jo
in
mov
pop
jbe
lock
mov
repnz
jl
stc
sbb
or
dec
pop
shl
xchg
loope
loopne
and
stos
and
repz
mov
imul
adc
rol
adc
pop
ds
dec
sbb
int
cmp
push
mov
jmp
mov
bnd
add
dec
popa
out
mov
fbstp
loope
jb
div
jl
push
xchg
mov
jne
fisub
mov
es
int
jo
mov
or
xchg
pop
and
mov
into
inc
jns
ds
mov
cmp
mov
(bad)
popf
jo
out
fcomp
jmp
dec
loop
dec
mov
retf
push
inc
mov
stos
sub
jae
(bad)
push
das
clc
lea
push
fstp
jp
mov
push
sbb
movs
fbld
(bad)
jnp
leave
shl
add
daa
or
pop
xor
push
adc
or
pop
add
leave
mov
mov
in
es
lahf
xchg
test
das
(bad)
stc
loop
(bad)
iret
inc
lock
sub
fisub
fld
aaa
add
outs
shl
push
mov
or
mov
push
ficom
jmp
mov
jg
add
std
mov
scas
fsincos
je
mov
jmp
and
add
retf
hlt
push
in
mov
retf
movs
stc
sub
dec
les
test
pop
inc
xor
and
mov
xor
cs
push
mov
jne
sti
sahf
fwait
dec
aas
push
jns
fistp
sti
sbb
retf
lds
xor
scas
ja
mov
(bad)
(bad)
sbb
jnp
sub
(bad)
and
mov
jmp
fdiv
test
inc
stos
add
mov
cmp
ficomp
test
or
scas
xor
aam
fstp
inc
mov
or
pop
push
fsubr
movs
mov
dec
xor
add
enter
xchg
(bad)
or
jbe
xor
lods
xor
in
fs
add
jg
and
sub
rep
adc
pop
mov
cmp
xor
daa
in
mov
rcr
add
out
inc
imul
loopne
test
(bad)
sbb
cmp
bnd
add
paddw
fldcw
int
daa
jecxz
jp
add
sub
mov
dec
or
in
mov
inc
in
clc
mov
inc
mov
jg
hlt
pop
jns
and
loop
test
dec
int3
pop
sbb
iret
rep
adc
xchg
aaa
cmp
das
mov
mov
pop
(bad)
pushf
icebp
jbe
push
mov
scas
mov
jnp
inc
mov
jns
xchg
mov
lods
jno
push
scas
pop
and
dec
outs
ret
loopne
lods
fdiv
ds
scas
sbb
fs
test
out
stos
fsub
push
test
jmp
shr
pop
movs
int3
in
pop
mov
shl
mov
clc
clc
dec
mov
hlt
inc
mov
ret
lock
cld
jle
hlt
retf
icebp
enter
jecxz
lods
fsubrp
pop
movs
shr
inc
movs
shl
js
into
clc
js
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
es
mov
loop
lods
dec
in
mov
out
lods
ffreep
push
push
push
jecxz
scas
fsub
push
lods
(bad)
push
scas
fsub
push
scas
fsub
push
scas
(bad)
repnz
movs
aam
push
lods
fcomp
scas
out
loopne
lods
fsub
push
lods
(bad)
push
scas
fsub
push
scas
fsub
push
mov
fucom
scas
sbb
cli
push
lods
fsub
jo
clc
loop
lods
or
mov
jmp
sbb
or
push
std
xor
mov
mov
jecxz
mov
dec
loope
sub
mov
adc
cli
int3
cmp
push
xor
pop
test
movs
adc
call
sbb
test
into
push
jg
mov
cmp
call
mov
out
mov
or
xor
sbb
fnstcw
jo
xor
sub
stos
popa
add
cmp
test
loopne
(bad)
in
addr16
and
out
jmp
outs
push
xor
movs
in
hlt
and
xchg
jne
mov
dec
sbb
pop
fbstp
mov
nop
and
movs
clc
adc
cld
loop
adc
pop
xchg
fsub
mov
inc
xlat
outs
enter
dec
cdq
lock
jl
aad
jp
dec
test
mov
push
in
xchg
fcompp
dec
jg
inc
jno
push
lock
xor
adc
push
test
pop
shl
xchg
into
mov
sti
xor
mov
push
into
xor
push
out
or
int3
mov
adc
sbb
call
add
mov
popa
pop
cmp
xchg
call
xchg
push
sbb
fild
push
int
mov
jb
scas
jo
into
imul
addr16
lahf
and
pop
push
push
sub
out
push
fiadd
out
inc
in
out
sbb
or
pop
and
cmp
es
xor
test
inc
call
mov
clc
pop
xchg
and
jb
pop
js
cli
sub
aas
imul
in
dec
pop
mov
mov
xchg
xor
scas
fisubr
loop
stc
xchg
pop
dec
xchg
out
and
das
adc
mov
pushf
jno
cld
imul
gs
sub
(bad)
(bad)
inc
mov
clc
add
adc
inc
rcr
ret
ds
push
jb
fwait
pop
test
cmp
push
cmp
shl
(bad)
rcr
push
gs
pop
out
jl
mov
fsub
mov
xchg
sbb
inc
loopne
into
bound
outs
inc
jge
sbb
(bad)
cdq
stos
fisub
xchg
xchg
mov
mov
shl
(bad)
scas
daa
fsubr
stos
(bad)
push
test
loop
scas
fsub
push
cmps
fsub
pop
mov
clc
shl
jle
popf
cmp
ins
jecxz
lods
(bad)
push
movs
fsub
jbe
jp
fist
ja
int
inc
pop
pop
cmc
scas
out
adc
mov
loopne
int
inc
movs
mov
pushf
popa
or
sbb
inc
lahf
imul
in
dec
xor
retf
add
(bad)
adc
cmp
sub
ret
imul
ret
ja
ss
pop
add
(bad)
mov
aas
pop
or
and
retf
stos
inc
sbb
xchg
cmps
xor
lock
mov
movs
inc
push
mov
sub
cmp
jne
lock
push
pop
ror
int3
outs
stos
ds
fcomp
out
hlt
add
pop
add
test
lock
scas
add
mov
mov
and
xor
loop
shl
inc
and
retf
jg
xchg
pop
loope
push
outs
sbb
jmp
inc
es
idiv
jecxz
ds
(bad)
push
jnp
sub
fmul
test
dec
ret
mov
mov
jle
into
in
cmp
add
scas
test
pop
jnp
mov
xchg
pop
cmps
call
mov
or
xchg
sub
aaa
mov
sub
cmp
(bad)
movs
mov
push
mov
xchg
and
dec
repnz
dec
sub
mov
data16
xchg
xor
mov
fsub
outs
jbe
or
dec
inc
push
xchg
icebp
mov
mov
pop
dec
call
sub
(bad)
jmp
cmp
dec
sub
cmp
scas
jbe
dec
popa
scas
jg
pusha
and
cs
pop
mov
(bad)
fcmovbe
xor
pop
cmp
and
fld
xchg
bound
mov
or
push
or
adc
stos
lods
test
pop
inc
(bad)
pop
in
mov
popf
ret
retf
fist
outs
mov
jg
cmp
aas
movs
outs
pop
jbe
xchg
or
ficomp
stos
ins
inc
sub
adc
fs
pop
imul
int
inc
cs
sbb
adc
dec
and
mov
jne
mov
sbb
push
stos
and
xor
and
rcr
les
adc
popa
add
sahf
push
es
push
dec
adc
mov
shr
fistp
(bad)
xlat
scas
scas
xchg
shl
inc
adc
dec
jb
repnz
inc
adc
clc
cmps
push
push
sub
jne
nop
mov
jg
xor
mov
(bad)
into
jmp
fwait
(bad)
fdiv
imul
jns
iret
ss
pop
dec
sbb
adc
adc
sbb
ss
cmp
mov
sbb
dec
jp
xor
xchg
and
add
cmp
lahf
push
xor
outs
inc
push
fild
inc
xchg
ss
sub
fwait
in
pop
mov
bnd
cdq
aaa
dec
and
jns
sub
jp
fidivr
cmps
retf
loop
or
adc
or
mov
xchg
scas
shl
cmp
test
lods
lea
out
xor
nop
jp
pop
(bad)
mov
test
retf
pop
xor
sub
loopne
push
xlat
idiv
inc
mov
outs
and
mov
push
or
enter
loope
cli
cmps
mov
out
adc
mov
jle
cmp
xchg
out
loopne
pop
and
inc
push
(bad)
pop
cmp
les
push
sbb
xchg
ss
fcom
xor
aad
addr16
adc
push
bound
sbb
sbb
dec
int
pop
lods
inc
push
ss
inc
ss
out
or
xor
cmps
sbb
pusha
(bad)
fisubr
cld
xchg
push
dec
mov
and
dec
retf
(bad)
lods
fwait
idiv
(bad)
xchg
xchg
lods
push
imul
loop
test
jmp
fsub
push
scas
fsub
push
test
loop
movs
clc
(bad)
xor
pushf
pusha
repnz
cmp
pop
inc
mov
ins
jecxz
lods
fsubp
push
rcr
scas
sbb
adc
jl
add
out
inc
stos
mov
xor
mov
test
adc
pop
or
repz
not
nop
(bad)
arpl
pop
sbb
hlt
mov
push
mov
sub
push
xchg
inc
jne
out
cmp
cmp
pop
cmp
pushf
xchg
loop
pop
cmp
adc
ins
in
out
sub
mov
and
xchg
cli
mov
test
inc
in
shl
(bad)
out
out
dec
xor
stos
xchg
mov
gs
cmc
mov
pusha
pop
adc
test
push
cmp
jge
(bad)
xor
faddp
jb
sub
adc
add
aaa
pop
fisttp
lods
pop
icebp
lods
mov
int
jle
call
ss
mov
sbb
and
int3
stos
daa
push
jb
adc
mov
mov
rcl
dec
dec
sbb
xlat
inc
ja
inc
scas
outs
dec
dec
aam
rol
mov
bound
xchg
fcmovb
ds
dec
aam
xor
dec
mov
in
scas
scas
xor
xor
jecxz
adc
jecxz
sbb
ins
lahf
or
jo
xchg
pop
cli
cmc
or
pop
sub
scas
daa
fmul
push
cmps
aam
pop
mov
fsub
push
lods
fsub
pop
scas
rol
je
clc
les
sub
inc
pop
xchg
aad
sbb
jge
mov
inc
scas
sbb
repnz
stos
(bad)
lods
xchg
pop
(bad)
fidiv
mov
dec
and
jne
mov
mov
ret
daa
clc
movs
xchg
test
(bad)
iret
inc
jg
sub
dec
call
inc
loope
(bad)
leave
test
sbb
es
nop
imul
sahf
call
cmp
xor
mov
dec
xor
add
jg
cld
pop
xchg
xchg
test
retf
lds
int
mov
pop
push
repz
out
arpl
daa
cmp
aad
mov
jg
mov
and
cmp
lds
inc
test
test
cmp
cdq
cmp
and
xor
clc
jb
xchg
and
sbb
loope
ror
jmp
jmp
and
mov
ins
mov
pop
adc
sbb
jp
repnz
or
das
popa
pushf
jge
arpl
pop
fst
xchg
jle
add
jnp
pop
sbb
mov
add
xor
add
hlt
xor
out
xor
pop
test
and
or
fwait
fwait
and
mov
shl
xchg
lea
aad
scas
inc
(bad)
or
cli
sub
dec
shr
adc
gs
aaa
in
ss
jbe
icebp
mov
lds
push
fcomp
mov
fwait
sti
cdq
adc
inc
dec
mov
into
movs
repz
xchg
mov
pop
int3
fstp
scas
dec
jb
jae
iret
addr16
aam
jecxz
test
ins
js
mov
imul
loop
lods
fsubp
push
mov
fsubp
push
scas
fsub
push
test
jmp
pushf
pusha
repnz
cli
mov
hlt
dec
fiadd
or
es
sahf
and
mov
arpl
mov
cmps
out
dec
mov
vdivsd
mov
test
xchg
pushf
jbe
mov
cs
nop
aam
pop
mov
cwde
dec
and
daa
out
lea
call
aas
mov
retf
aad
inc
push
imul
inc
pop
or
scas
fidivr
pop
aad
sub
push
(bad)
fisubr
cld
hlt
mov
movs
and
pop
xor
xchg
adc
adc
mov
retf
cmp
arpl
out
cmc
ror
mov
ret
idiv
cmp
js
cli
xchg
daa
ret
push
mov
inc
jne
fs
add
dec
shl
inc
aaa
les
shl
aad
call
and
in
pop
pop
jae
pop
aam
movs
pop
jb
loopne
inc
add
std
dec
inc
adc
int3
cmp
jecxz
pop
dec
push
push
(bad)
int3
movs
packuswb
cmp
pop
or
ds
lea
and
ss
loop
jmp
inc
in
cmovs
daa
push
leave
(bad)
movs
jb
or
xor
cld
jo
adc
retf
xor
icebp
dec
std
xchg
adc
(bad)
jbe
sub
mov
fs
outs
sbb
fs
fwait
dec
push
sbb
cmc
loope
jo
stos
aas
ret
out
dec
xor
dec
cmps
xchg
nop
int
xchg
aad
ret
jp
mov
cmp
adc
and
imul
jno
cmc
inc
arpl
cld
fild
ds
cmp
(bad)
in
lds
xor
lock
sub
test
(bad)
adc
idiv
out
into
imul
mov
xchg
movs
cmp
sbb
mov
pop
shr
es
mov
pop
dec
leave
rcr
mov
fst
push
jae
jg
jns
fs
inc
lods
test
or
pushf
jmp
jnp
in
or
in
stc
aaa
inc
lds
add
out
dec
sub
xchg
jmp
(bad)
add
out
sbb
loopne
add
loope
add
je
in
call
dec
test
call
fdivp
fnstcw
jns
lods
pop
jnp
sub
outs
int3
adc
jmp
adc
sbb
dec
syscall
mov
mov
mov
stc
dec
push
mov
call
pop
repnz
inc
cmp
leave
jmp
push
lods
cwde
aam
pop
aam
repnz
fcmove
ret
dec
imul
cmp
jns
enter
dec
movs
xor
jle
xchg
mul
and
sub
in
ds
pop
jecxz
sbb
es
bound
sub
adc
outs
enter
imul
into
jge
loope
icebp
aas
inc
shr
jns
add
mov
push
pop
jo
cli
rcr
pop
cmp
sahf
loop
ja
aas
pop
jne
xlat
mov
popa
in
adc
fmul
shr
test
stos
lods
test
bound
pop
and
aaa
and
stos
fwait
mov
xor
push
push
pop
dec
jle
mov
es
or
in
popa
stos
xor
cmc
mov
adc
jmp
sti
lods
jno
push
mov
push
inc
dec
xlat
jg
int
xor
out
fild
dec
sub
(bad)
or
dec
sbb
jecxz
fsubr
(bad)
arpl
loop
aam
scas
mov
lods
fcmovu
mov
mov
je
sbb
sbb
fst
idiv
add
fldcw
xor
bound
adc
xlat
cmp
imul
xor
pusha
mov
cmp
add
or
mov
cmp
sahf
fcmovnb
inc
mov
icebp
xchg
stos
push
mov
addr16
xor
inc
ins
(bad)
scas
sbb
xchg
push
xchg
and
js
xchg
jo
mov
push
mov
add
inc
out
or
cmps
mov
xor
sub
out
and
xchg
and
add
mov
repnz
lods
push
xchg
popa
mov
clc
xchg
addr16
test
aad
fiadd
xlat
jne
and
not
pop
data16
mov
inc
in
fld
dec
pop
pop
sub
inc
rcl
imul
jecxz
cld
sahf
pusha
jle
nop
test
dec
cmp
jno
xchg
mov
retf
fldenv
mov
aas
movs
mov
cld
jecxz
test
mov
ss
shl
inc
data16
add
xor
or
imul
mov
dec
or
movs
pop
test
je
call
xor
out
and
dec
cld
xchg
pop
movs
adc
or
xchg
and
cmps
fbld
dec
cld
push
stos
push
jp
jae
fwait
movs
sbb
mov
xchg
or
das
mov
sub
add
scas
(bad)
imul
sar
iret
mov
rcl
pop
iret
pop
inc
push
les
lock
push
mov
or
es
fild
call
(bad)
or
icebp
jmp
(bad)
outs
add
cmp
dec
cmps
(bad)
loop
ror
test
mov
mov
imul
test
jge
data16
loop
mov
ret
pop
mov
clc
rol
mov
cs
pop
mov
mov
stc
ss
retf
mov
jecxz
das
jmp
dec
fwait
inc
pushf
sub
mov
ds
pop
mov
fwait
cmp
adc
mov
ret
jbe
push
rcr
xor
shr
stos
mov
lea
xlat
mov
pop
sbb
leave
dec
xor
es
popa
std
pmuludq
lds
jnp
cmp
ret
mov
or
push
lods
jecxz
scas
clc
cmp
mov
adc
cld
push
stos
push
ds
mov
mov
sub
add
out
in
add
in
outs
jl
sbb
mov
xor
mov
mov
adc
fimul
sahf
push
mov
shr
fst
xchg
and
inc
sti
mov
jmp
sbb
ret
scas
hlt
push
sbb
dec
or
retf
sub
jnp
inc
lods
dec
add
xlat
push
test
mov
push
sahf
leave
sbb
enter
sahf
dec
mov
jne
xchg
call
jle
daa
jbe
jp
push
dec
bswap
pop
push
xchg
loopne
jl
fnstsw
int3
jp
cli
push
push
lea
jp
xchg
rol
or
das
mov
pop
push
stos
arpl
fmul
outs
and
dec
test
(bad)
dec
test
je
sbb
aad
sbb
pop
or
mov
and
cmp
or
and
push
xor
rol
fldz
test
jnp
mov
or
inc
call
jle
out
jp
mov
adc
data16
gs
cmps
in
adc
idiv
leave
test
jle
out
loopne
xchg
stos
xor
or
jb
jnp
lahf
jb
aam
cmps
call
mov
lock
out
xor
adc
inc
sbb
xor
xor
mov
xchg
add
data16
scas
scas
cli
sbb
(bad)
movs
rol
jg
mov
daa
fdiv
push
movs
shl
push
lods
fsub
push
scas
fsub
push
lods
cli
loop
mov
add
mov
and
cmp
push
scas
fistp
(bad)
inc
pop
sbb
push
sub
sete
(bad)
xchg
mov
and
or
test
and
or
inc
sar
ret
dec
pop
add
iret
push
fldenv
les
or
or
aam
pop
ret
popa
fcmovne
push
into
push
stc
jl
test
bound
sbb
jmp
jae
retf
sub
fwait
inc
mov
fldenv
cmp
mov
pushf
rcr
test
fld
mov
add
push
lods
xchg
mov
cmp
jb
pmovmskb
cmp
xor
stos
dec
or
mov
sbb
adc
dec
push
and
or
rcl
aaa
sbb
xor
mov
sbb
mov
jno
pop
add
stos
cmp
xor
or
mov
iret
jns
cmps
cli
das
clc
and
mov
gs
gs
dec
xor
test
aas
cli
nop
mov
ins
cmps
dec
push
sbb
cld
mov
std
in
inc
xchg
fldl2e
ret
call
jle
mov
(bad)
dec
aad
xchg
je
push
adc
in
xor
push
out
retf
retf
xchg
or
out
cwde
xchg
stos
xchg
in
pop
cld
fstp
xchg
int
push
(bad)
jb
pop
in
nop
lahf
push
pop
aad
add
cli
xchg
sub
in
paddsb
inc
push
hlt
fcomp
xor
test
inc
fst
call
shl
loope
add
sub
jmp
jae
xchg
or
jnp
fxch
sub
test
or
repz
rcr
in
xor
inc
and
sbb
push
sti
mov
push
dec
in
movsx
cmp
shr
or
inc
cmps
sahf
cmp
cmp
aas
xor
test
mov
adc
sub
mov
xor
mov
fsubr
inc
fdivr
pop
and
cs
mov
mov
pop
dec
into
dec
clc
int3
nop
mov
popf
inc
arpl
dec
out
scas
xchg
mov
sbb
imul
cli
outs
ss
add
jmp
jae
ja
popf
lahf
shl
mov
jmp
add
jmp
cmp
mov
xlat
jbe
scas
add
mov
sub
rol
(bad)
mov
add
sbb
mov
mov
jb
pusha
loopne
dec
jmp
mov
fstp
sbb
cwde
xchg
jns
push
inc
xchg
pop
leave
or
gs
cmps
retf
shl
mov
fsubr
(bad)
arpl
mov
xor
mov
repnz
and
push
or
mov
outs
(bad)
int
adc
inc
int
les
inc
adc
neg
call
ja
retf
arpl
dec
loop
jle
jmp
inc
or
in
adc
jae
push
rcr
mov
test
inc
(bad)
or
push
cmp
mov
jne
in
xor
mov
ror
xchg
xchg
loopne
xchg
adc
cld
test
sbb
push
jg
mov
data16
shl
push
pusha
push
loope
out
loope
out
fld
jns
mov
js
adc
lock
mov
test
mov
retf
jbe
pop
pop
test
pop
ja
pusha
leave
das
xchg
popf
push
in
repnz
fisubr
out
jbe
jns
or
or
adc
or
mov
ss
mov
jmp
jae
and
retf
je
fnstenv
rol
repnz
mov
mov
fisttp
das
xchg
test
js
pop
inc
out
xor
arpl
stos
pop
lahf
mov
rol
es
rol
movs
pop
push
es
lods
mov
mov
fisub
jns
add
mov
jb
sbb
inc
jo
les
inc
cwde
mov
push
mov
sub
and
rcr
leave
cwde
stos
je
and
sar
js
fcomp
xor
sbb
hlt
jp
inc
xor
stc
mov
push
pop
frstor
rcl
xchg
in
pop
sbb
mov
fnstsw
popa
mov
ins
xchg
mov
jmp
sbb
rcr
inc
xor
icebp
cmp
bound
add
(bad)
jge
jmp
cmp
push
iret
pop
xchg
cmp
nop
shr
sub
pop
test
out
mov
cli
idiv
sub
mov
(bad)
mov
mov
or
ror
sub
je
dec
lods
xor
pop
or
ins
pop
mov
jo
push
pop
out
mov
fldenv
mov
jae
pop
test
cmp
scas
adc
xchg
(bad)
fmul
xor
(bad)
out
fsub
add
jecxz
xor
jne
popf
inc
mov
fs
jecxz
js
lods
mov
stos
daa
scas
mov
mov
arpl
test
xor
xor
dec
daa
adc
mov
jecxz
in
(bad)
aaa
ret
retf
jl
pop
xchg
in
push
sbb
pusha
mov
mov
les
jae
mov
fs
mov
fcomp
push
mov
cmp
int3
(bad)
jecxz
dec
imul
sub
add
add
jo
xchg
push
cmp
loopne
js
inc
mov
xor
and
push
lods
fsub
push
test
loop
mov
pop
popa
mov
stos
jo
nop
mov
stc
jno
mov
aam
rol
push
cmps
std
jno
mov
je
fcmovb
sahf
out
jae
mov
jo
fsub
inc
mov
aad
scas
fsub
push
mov
stc
repz
pushf
sar
cmp
fucom
adc
mov
fsub
scas
dec
jmp
mov
sbb
nop
ret
std
loopne
sbb
jmp
fsub
adc
jo
inc
out
pusha
pop
scas
retf
cmp
les
lods
fsub
push
cmps
aam
push
scas
fsubp
push
scas
fsub
push
lods
cli
mov
xchg
mov
push
lea
mov
push
mov
cmps
ret
pop
xchg
adc
movs
xchg
xchg
dec
or
mov
cdq
jo
outs
xlat
inc
dec
jmp
add
scas
pop
pop
test
mov
jecxz
pushf
arpl
sbb
sbb
ss
in
(bad)
push
int3
and
repnz
test
(bad)
mov
(bad)
(bad)
jo
nop
ja
xchg
xchg
dec
cmp
cmp
fdiv
cmp
push
cmc
out
jecxz
not
fdiv
adc
dec
add
aad
mov
adc
mov
mov
fcmove
sti
(bad)
or
lods
jne
stos
rcl
rol
outs
cmp
sar
sbb
inc
call
mov
jecxz
xchg
inc
stos
bound
push
cmps
add
repnz
fwait
not
inc
push
inc
retf
inc
mov
push
inc
sbb
add
sub
je
push
je
dec
fdivr
shl
fscale
jno
xor
test
push
push
aas
pcmpeqd
(bad)
sahf
out
jnp
adc
stos
adc
or
pop
adc
stc
mov
add
test
mov
sub
mov
enter
sub
push
fsub
add
int3
adc
addr16
cdq
in
cli
sti
add
sbb
je
xchg
sahf
(bad)
in
add
popf
enter
cwde
mov
sbb
push
jecxz
mov
loop
stos
shr
push
test
loopne
scas
fsub
push
scas
fcmovb
adc
fsub
ins
fcmovb
lock
sti
mov
adc
jecxz
lods
fsub
push
sar
xchg
mov
pop
jmp
push
sbb
add
clc
and
and
and
movs
adc
fmul
int3
rcl
in
shrd
fucomp
pop
and
mov
cmp
out
add
ror
movs
mov
cwde
out
mov
daa
mov
mov
ret
mov
mov
loop
out
jb
xchg
rol
rcr
cmp
mov
cli
loopne
adc
jb
xlat
xor
scas
outs
fild
add
and
pop
jo
outs
xor
ds
fwait
push
mov
sub
scas
les
sub
add
dec
fsub
jl
(bad)
je
jbe
mov
outs
adc
std
mov
adc
inc
add
fs
enter
fadd
pop
cmp
cli
out
repnz
jb
pop
popa
pop
leave
pop
inc
sbb
or
and
adc
push
dec
ja
movs
jbe
loopne
test
mov
cmp
or
clc
mov
popa
jmp
or
add
adc
or
aaa
lock
cmp
jge
mov
sub
cli
and
mov
scas
jns
adc
ret
mov
mov
and
cwde
xchg
cmps
adc
jb
fbstp
das
test
je
pcmpgtd
imul
loopne
scas
fsub
pop
stos
fsub
push
test
loop
scas
fsub
jb
call
dec
sti
mov
xor
jnp
scas
sbb
repnz
lods
fsub
mov
in
add
or
scas
sub
(bad)
out
xor
sbb
lods
out
pop
dec
mov
pop
add
cmps
fcmovnb
stc
mov
js
loop
add
mov
pop
mov
mov
inc
rcl
and
ss
push
test
sub
sub
aad
xor
xchg
cmp
sub
cdq
popf
adc
ret
mov
in
(bad)
repnz
std
mov
test
out
in
or
pop
jno
test
jbe
push
idiv
stc
inc
jmp
xchg
jge
neg
xchg
mov
jecxz
loope
push
cs
inc
xchg
shr
adc
ror
mov
clc
shl
daa
jecxz
or
dec
fstp
lahf
scas
adc
inc
lods
push
inc
cdq
aad
cmp
enter
jbe
adc
add
pop
inc
or
and
push
push
es
push
mov
loopne
hlt
xchg
movs
pop
fcom
push
pop
fst
inc
push
jl
jb
aam
lods
out
ins
push
push
cmp
or
jns
pusha
retf
sub
adc
dec
out
push
or
jo
adc
add
mov
hlt
mov
jne
adc
xchg
enter
je
nop
int3
mov
lods
sar
lods
or
push
and
xor
enter
fcmovnb
cli
jl
xor
or
jle
add
dec
mov
rol
repnz
and
in
mov
xchg
fisub
push
lahf
dec
add
ret
cs
cwde
retf
lods
dec
xor
mov
push
out
add
pop
es
xor
rcl
loopne
jg
xchg
ficomp
cmp
loopne
jne
repnz
jp
rcr
jmp
das
pop
dec
in
mov
icebp
fcomp
sbb
xor
dec
adc
je
hlt
fld
(bad)
push
pusha
push
(bad)
mov
dec
adc
ins
call
push
imul
add
xchg
sbb
push
pusha
jmp
mov
mul
retf
xor
and
sahf
inc
and
into
sbb
pusha
ficom
xchg
jg
cvtps2pi
and
jmp
enter
jle
clc
ret
or
xor
nop
dec
cdq
mov
adc
(bad)
and
fstp
xor
ret
cdq
test
test
sub
add
xchg
loope
adc
ret
xor
test
cmp
jle
pusha
add
pop
(bad)
or
in
fnsave
mov
out
adc
sete
lea
inc
or
cmp
xchg
cmp
inc
adc
mov
scas
shl
mov
jecxz
dec
push
add
dec
jp
push
xchg
sub
sub
xchg
mov
mov
fwait
dec
push
dec
mov
and
cwde
and
fnstcw
(bad)
ins
xchg
sar
cli
outs
jmp
sub
adc
ror
lods
sbb
rcl
inc
es
pop
pop
leave
pop
xlat
adc
add
xor
sub
fsubr
cmps
pop
xchg
fucomi
shr
mov
xor
clc
mov
daa
and
mov
fdivr
pmovmskb
fidivr
in
push
clc
and
add
pop
mov
mov
adc
or
enter
xchg
lods
fiadd
adc
adc
aam
fnstenv
sbb
rol
ret
cmps
test
outs
mov
pop
mov
loopne
add
jl
cmp
movs
(bad)
cmp
test
sub
jbe
adc
add
push
fcom
aad
idiv
dec
jecxz
repz
sbb
pop
sub
fisubr
inc
pop
xchg
add
lahf
push
dec
sub
push
lahf
xchg
cdq
sbb
push
test
je
lahf
stc
cs
mov
xchg
adc
fist
mov
jb
test
fmul
add
jle
in
pop
mov
call
add
iret
loopne
adc
or
lds
jge
pop
(bad)
mov
adc
test
imul
fistp
pop
sub
scas
push
scas
scas
imul
(bad)
jle
mov
rcr
or
xor
push
sub
dec
adc
cwde
push
dec
gs
xor
repz
sahf
(bad)
add
sub
jmp
popa
pop
xchg
loopne
jl
pusha
push
rcr
ins
xor
retf
ins
loop
inc
(bad)
jecxz
pop
mov
and
push
cld
mov
sbb
ins
jo
imul
add
fcom
ins
cmp
mov
je
adc
enter
enter
jne
loop
pop
mov
lock
jmp
movs
icebp
(bad)
push
inc
lock
add
fs
sub
mov
aaa
add
test
in
fistp
fwait
mov
mul
adc
icebp
sub
shl
hlt
in
xor
pop
retf
call
push
shr
mov
test
fcmovbe
mov
out
lahf
pop
arpl
call
shl
das
jae
je
sti
shl
jp
scas
scas
jp
pop
jge
dec
add
fisttp
mov
and
xchg
mov
dec
das
adc
ins
and
cmps
mov
jae
jmp
or
(bad)
gs
in
push
fld
retf
xchg
and
push
pop
xor
nop
aam
in
retf
pop
cmp
cmp
xchg
or
cmp
xchg
xor
pop
inc
jp
ja
add
and
repz
shl
cmps
stc
imul
pop
mov
addr16
rcr
in
push
or
push
inc
adc
addr16
xchg
xlat
mov
push
jo
cmp
outs
outs
mov
fdivr
jae
fcomp
xchg
xor
aas
xor
jmp
ror
repz
pop
or
int
dec
repz
jecxz
push
(bad)
aam
jno
lods
scas
scas
gs
add
jnp
mov
mov
jmp
xor
loope
pop
pop
push
mov
xor
fldenv
mov
pusha
push
not
js
mov
bound
jmp
xchg
mov
in
jmp
lock
mov
adc
ret
stc
mov
jnp
(bad)
loope
fistp
pop
pop
pop
pop
inc
xor
int
ins
jne
test
daa
add
sbb
pop
xor
xchg
push
test
retf
nop
pop
or
xchg
sub
sahf
xchg
sub
js
stos
mov
mul
rol
cld
fwait
loop
cmps
add
jg
das
or
nop
mov
mov
fsubp
jo
sbb
pusha
dec
add
aam
mov
and
(bad)
jno
jnp
xlat
ins
frstor
adc
xchg
lock
mov
adc
cdq
nop
cmp
stos
cmc
es
out
bound
repnz
or
or
jecxz
mov
jge
mov
xchg
jle
lds
out
jecxz
mov
fnstenv
mov
stc
dec
xchg
scas
in
loop
test
jp
loop
jmp
or
repnz
mov
pusha
loop
sbb
inc
push
xchg
and
jns
imul
ror
fsubr
ret
test
lea
mov
sub
fisttp
(bad)
bound
aam
xor
outs
cmp
jecxz
pop
ins
scas
sbb
fadd
les
dec
outs
push
lods
(bad)
push
fdiv
scas
es
push
sub
in
stos
fsubp
push
test
in
cmps
fsubp
pop
movs
enter
shr
inc
mov
int3
cli
dec
mov
(bad)
(bad)
jo
(bad)
ror
jl
cli
les
repnz
sar
(bad)
js
lock
scas
pop
loopne
cmps
shr
pop
movs
retf
mov
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
retf
fadd
inc
scas
in
loopne
fcmovb
push
stos
cli
loopne
mov
sbb
scas
hlt
loop
lods
(bad)
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
movs
(bad)
sbb
scas
mul
push
lods
(bad)
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
test
jmp
fsub
jo
clc
loop
lods
pusha
pop
adc
loop
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
ret
pop
loop
add
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fadd
push
int
dec
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fld1
jecxz
jecxz
mov
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
mov
fcomp
jo
(bad)
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
movs
fmul
jle
mov
pop
outs
es
push
mov
shl
js
and
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
sbb
xchg
cwde
mov
lods
in
pop
or
jg
jecxz
inc
lahf
lea
sub
aad
adc
xchg
aad
test
ret
ret
xchg
rol
dec
mov
out
or
clc
cmp
mov
popa
ds
mov
pop
adc
push
sbb
add
ficomp
rol
out
jmp
aas
jo
jl
and
mov
cmp
aad
adc
xchg
aad
test
ret
ret
xchg
rol
dec
mov
out
or
clc
cmp
mov
popa
ds
mov
pop
adc
push
sbb
add
ficomp
rol
out
jmp
aas
jo
jl
and
mov
cmp
aad
adc
xchg
aad
test
ret
ret
xchg
ror
addr16
(bad)
loop
push
stos
fsubp
push
test
loop
scas
fsub
push
scas
fsub
push
stos
cld
retf
fisub
push
mov
cmps
loopne
push
aas
inc
pop
sub
jmp
test
jmp
inc
repnz
pop
adc
pop
add
inc
cmps
div
or
pusha
mov
xchg
movs
pop
cmc
pop
or
xchg
ror
and
into
jmp
test
jmp
inc
repnz
pop
adc
pop
add
inc
cmps
div
or
pusha
mov
xchg
movs
pop
cmc
pop
or
xchg
ror
and
into
jmp
test
jmp
aad
aas
add
dec
jnp
mov
shl
sub
sub
jns
xchg
jmp
inc
push
jl
jge
mov
and
mov
icebp
sbb
xor
sub
retf
xor
sar
loopne
pop
iret
jns
xchg
jmp
inc
push
jl
jge
mov
and
mov
icebp
sbb
xor
sub
retf
xor
sar
loopne
pop
iret
jns
xchg
jmp
inc
push
jge
dec
popa
fs
shl
imul
loop
stos
fsubp
push
test
loop
scas
fsub
push
scas
fsub
push
scas
dec
repnz
jmp
enter
ficomp
mov
dec
mov
sbb
sub
inc
sti
cmp
jne
call
test
cmc
pop
outs
in
ror
add
sub
jg
push
repnz
int3
mov
fldenv
lods
xchg
inc
adc
jge
sahf
mov
dec
(bad)
xchg
mov
xor
sbb
sub
inc
sti
cmp
jne
call
test
cmc
pop
outs
in
ror
add
sub
jg
push
repnz
int3
mov
fldenv
lods
xchg
inc
adc
jge
sahf
mov
dec
(bad)
xchg
mov
xor
sbb
sub
inc
sti
cmp
jne
xchg
call
sub
jecxz
lock
xor
ins
push
pop
pushf
pop
xor
arpl
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
into
mov
mov
inc
ret
cmp
iret
mov
mov
jge
mov
fsubr
pop
scas
fsub
pop
lods
fsub
push
scas
fsub
push
stos
shl
ss
cld
(bad)
faddp
pop
mov
or
(bad)
push
mov
repz
(bad)
pmulhuw
jb
push
sub
xchg
mov
jp
mov
sub
gs
pop
push
hlt
dec
xor
jbe
(bad)
dec
lods
outs
out
jge
call
inc
ror
call
add
xchg
fstp
repz
xor
gs
aas
stc
nop
sub
adc
jmp
and
cmc
retf
popa
mov
dec
ror
or
or
mov
dec
je
ficom
jp
mov
sub
gs
pop
push
hlt
dec
xor
jbe
(bad)
dec
lods
outs
out
jge
call
inc
ror
call
add
xchg
fstp
repz
xor
gs
aas
stc
nop
sub
adc
jmp
and
cmc
retf
popa
mov
dec
ror
or
or
mov
dec
je
ficom
jp
mov
sub
gs
pop
push
hlt
dec
xor
jbe
(bad)
dec
lods
outs
out
jl
xchg
cmps
je
outs
sub
add
jl
fsubr
imul
add
sbb
movs
mov
adc
out
icebp
push
pop
test
add
sbb
sub
push
movs
sbb
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
pop
int3
in
(bad)
mov
xor
mov
push
sub
push
xchg
clc
loop
lods
(bad)
push
lods
(bad)
push
scas
fsub
push
scas
(bad)
ror
rcl
sbb
scas
sbb
repnz
lods
fsub
cs
jl
mov
xchg
or
loop
dec
iret
fxch
xchg
ror
adc
cld
jb
daa
mov
sub
jmp
sbb
push
je
hlt
imul
cmps
loop
dec
iret
fxch
xchg
ror
adc
cld
jb
daa
mov
sub
jmp
sbb
push
je
hlt
imul
cmps
loop
dec
iret
fxch
xchg
ror
sub
add
bound
jecxz
mov
or
bound
sub
aaa
arpl
cmp
xor
(bad)
das
retf
cmp
leave
adc
addr16
add
arpl
cmp
xor
(bad)
das
retf
cmp
leave
adc
addr16
add
arpl
cmp
mov
push
cmps
sbb
scas
shl
scas
fsub
push
scas
(bad)
jo
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
pop
nop
mov
std
jno
mov
je
nop
mov
std
jno
mov
je
xchg
mov
std
jno
mov
je
nop
mov
std
jno
mov
je
nop
mov
std
jno
ins
nop
mov
std
jno
mov
je
nop
mov
std
jno
mov
je
nop
mov
imul
loop
test
loop
test
loop
scas
fsub
push
scas
fsub
push
ins
cli
mov
xor
sbb
push
lods
ficomp
stos
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
cmps
sub
mov
pop
dec
js
daa
aaa
rcl
xchg
pop
adc
inc
and
shl
mov
pop
jl
push
sub
xchg
sahf
adc
shl
mov
pop
jl
push
sub
xchg
sahf
adc
shl
mov
pop
jl
push
sub
xchg
sahf
adc
shl
mov
pop
jl
push
sub
xchg
sahf
adc
shl
mov
pop
jl
push
sub
xchg
sahf
adc
shl
mov
pop
jl
push
sub
xchg
sahf
adc
shl
mov
pop
jl
push
sub
xchg
sahf
adc
shl
mov
pop
jl
push
sub
xchg
sahf
adc
shl
mov
pop
jl
push
sub
xchg
sahf
adc
xlat
inc
sub
scas
in
push
test
loop
movs
(bad)
push
scas
fsub
push
scas
fsub
push
lods
cmp
mov
adc
cmp
lods
ficomp
rcl
outs
jmp
and
fcom
adc
fs
pop
call
outs
jmp
and
fcom
adc
fs
pop
call
outs
jmp
and
fcom
adc
fs
pop
call
outs
jmp
and
fcom
adc
fs
pop
call
outs
jmp
and
fcom
adc
test
mov
mov
imul
xchg
and
jne
jne
sti
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
mov
cli
mov
add
push
cmps
sbb
scas
in
ret
fsub
push
lods
fsub
push
scas
fsub
push
scas
fsub
push
mov
sbb
scas
enter
ficomp
cmp
mov
icebp
cwde
movs
inc
push
dec
movlps
mov
xchg
xchg
pop
xor
movs
inc
push
dec
movlps
mov
xchg
xchg
pop
xor
movs
inc
push
dec
movlps
mov
jg
stos
pop
sahf
jecxz
repz
jge
arpl
int3
pop
and
jne
repz
nop
mov
dec
int
push
stos
pop
call
sub
add
mov
dec
int
push
stos
pop
call
sub
add
cli
ins
cld
les
imul
cmp
scas
(bad)
push
scas
dec
loop
scas
fcomp
scas
pop
loop
stos
fsub
push
stos
fsubp
push
test
in
cmps
shl
pop
movs
shr
pop
mov
shl
mov
test
(bad)
je
ret
mov
hlt
jo
clc
shl
enter
int3
pusha
xor
je
repz
fsub
shr
pop
cmps
shl
pop
movs
retf
mov
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
retf
pop
jecxz
mov
fsubp
jb
fadd
push
test
loopne
daa
fcomp
push
lods
fsub
pop
lods
(bad)
push
scas
fsub
push
scas
fsub
push
scas
fsub
pop
movs
aam
push
mov
(bad)
push
test
loopne
scas
fsub
push
scas
fsub
push
scas
fsub
push
stos
fucomip
pop
push
ins
jecxz
test
loop
mov
ret
ficom
adc
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
inc
sub
sub
xor
push
enter
push
scas
fxch
cmp
(bad)
jbe
cld
mov
dec
push
lods
das
bound
pop
cmp
dec
jmp
scas
or
pop
bound
jno
cmp
mov
dec
cmp
imul
lods
pop
pushf
arpl
aad
mov
(bad)
xchg
fisub
ret
inc
mov
jbe
pop
aaa
jge
addr16
loope
and
or
stos
fnsave
jmp
inc
jns
mov
jmp
sbb
mov
add
cmp
dec
xchg
or
cwde
mov
inc
xchg
js
pushf
and
jbe
dec
in
jns
pop
mov
shl
out
scas
fldenv
icebp
aaa
cmc
(bad)
cwde
(bad)
mov
inc
ins
or
xchg
mov
add
je
sub
fs
out
fwait
inc
cmp
mov
mov
mov
fidivr
sbb
not
dec
(bad)
fistp
jns
mov
jmp
arpl
and
push
mov
mov
inc
or
out
aaa
data16
fst
aas
push
(bad)
imul
xchg
cld
das
fstp
in
repnz
lahf
sbb
shl
mov
ja
xchg
xor
adc
cmp
dec
mov
ins
adc
aas
push
inc
pop
outs
dec
jbe
sbb
imul
or
jl
or
dec
pop
dec
dec
jne
(bad)
xor
mov
xor
(bad)
lods
not
inc
mov
dec
xor
push
scas
mov
(bad)
xor
pop
mov
call
imul
xlat
inc
xlat
mov
call
or
loope
and
xchg
cmc
cs
js
push
scas
(bad)
fmul
out
fwait
ja
int
or
cmp
aaa
jb
push
scas
fsub
push
scas
push
dec
call
rcl
dec
in
scas
fsub
push
scas
fsub
or
xchg
cmp
xchg
inc
clc
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
(bad)
sbb
scas
mov
loop
stos
shl
push
mov
fsub
push
lods
fsubr
pop
scas
aam
je
(bad)
cmps
jo
cwde
xor
mov
into
push
retf
nop
push
ins
jecxz
lods
(bad)
push
movs
fcomp
je
sbb
ss
dec
or
test
adc
jecxz
data16
push
push
imul
sahf
nop
lea
jne
movs
jb
sbb
bound
jmp
jmp
loop
xor
push
ficomp
out
push
mov
add
push
fistp
mov
aam
cdq
mov
jecxz
cdq
xor
les
push
sub
cmp
jmp
adc
dec
inc
test
loopne
retf
cli
adc
jmp
sbb
mov
aas
lahf
push
push
test
xor
iret
mov
(bad)
and
push
stos
es
and
mov
fldcw
jmp
aaa
cmp
adc
inc
xor
mov
pusha
lahf
movs
jne
mov
cld
dec
pop
mov
sub
sub
div
adc
retf
cmp
mov
stos
inc
inc
mov
pushf
xchg
add
push
hlt
in
mov
xlat
div
lock
push
retf
lock
stos
ret
outs
or
sub
clc
push
fsub
popa
push
adc
inc
dec
pushf
sahf
push
and
mov
and
xchg
xor
pop
xor
jp
(bad)
cld
dec
shl
fmul
xor
cld
cmp
jecxz
lods
push
rol
shl
dec
xor
mov
sbb
or
in
push
inc
and
cmp
sbb
jmp
cmc
test
cdq
rcl
jmp
cdq
outs
sbb
daa
fs
lds
enter
jb
out
mov
push
sti
sbb
xlat
add
adc
cmp
mov
iret
loop
xor
cli
je
mov
jae
in
push
push
sar
ins
call
mov
sub
adc
and
mov
sbb
inc
out
cmp
mov
push
and
out
xor
rol
push
mov
mov
mov
fwait
ret
fcomp
fbstp
sub
sub
push
jns
imul
lea
and
in
sbb
call
and
mov
pop
and
js
pop
pusha
test
or
enter
mov
push
pop
call
xchg
mov
out
inc
(bad)
(bad)
mov
repnz
fisttp
xchg
cmp
push
and
repnz
push
sub
sbb
sbb
push
push
jecxz
mov
loopne
test
jmp
fsub
push
scas
(bad)
push
mov
(bad)
xor
pushf
ret
sbb
jbe
pop
data16
es
dec
cli
sbb
push
lods
fistp
mov
shl
dec
fcmovb
pop
aam
ss
mov
enter
mov
push
outs
imul
jae
xor
jo
mov
adc
jnp
cli
mov
test
mov
loope
jmpw
jl
jns
xor
push
adc
add
lds
push
jge
pop
inc
mov
adc
pop
call
fadd
mov
es
jb
lahf
fldenv
adc
in
add
pop
idiv
scas
aad
mov
mov
loope
int3
loop
call
xchg
mov
xchg
fs
std
movs
or
fwait
repz
repz
xor
xchg
adc
ret
cmp
ffree
aad
sahf
mov
div
or
inc
add
jae
xor
adc
repz
mov
mov
xchg
dec
ins
push
cmp
adc
pop
mov
cs
adc
loopne
pop
pop
movs
test
mov
fimul
lds
sahf
loope
mov
cmp
dec
repz
jmp
movs
or
sub
in
mov
outs
fs
mov
pop
stos
jle
push
in
jg
enter
cmp
dec
stos
jb
arpl
sti
pop
push
jbe
mov
mov
sub
add
push
clc
rcr
and
dec
out
mov
xor
test
add
or
inc
mov
sub
in
add
jge
add
inc
bound
sub
jb
fsub
push
cmps
shl
push
cmps
fsubp
push
scas
fsub
push
scas
(bad)
push
mov
mov
adc
jp
hlt
ins
lock
cmps
cwde
test
sbb
repnz
stos
(bad)
lods
es
lock
xor
stos
push
and
xor
ins
jnp
gs
jnp
retf
cs
in
lahf
stos
cmps
dec
adc
retf
jb
mov
fs
fst
inc
jge
sahf
jmp
push
(bad)
mov
xlat
aas
push
add
and
xor
sbb
mov
mov
jecxz
xchg
popf
pop
cli
pushf
stc
or
inc
xchg
xor
test
mov
popf
(bad)
lods
xor
ror
loopne
pushf
fild
test
dec
test
or
or
in
push
seta
mov
rcl
scas
ins
mov
add
ins
xor
push
imul
sbb
stc
inc
push
push
push
inc
push
mov
add
mov
icebp
or
dec
xor
xchg
and
dec
stos
nop
lahf
dec
pushf
xor
hlt
rcr
in
push
mov
push
hlt
jge
mov
dec
or
dec
sbb
mov
mov
xchg
jmp
jns
dec
mov
mov
fwait
aaa
mov
mov
mov
out
lea
dec
pop
sbb
mov
test
add
mov
mov
stos
push
cmps
or
mov
shl
jl
js
mov
jl
cdq
sbb
xchg
cmp
push
call
or
mul
imul
lea
inc
jecxz
aam
sub
mov
aas
push
push
jecxz
mov
out
stos
fsubrp
pop
mov
fsub
push
scas
(bad)
push
scas
cli
(bad)
adc
rol
adc
pop
repnz
fcmove
adc
mov
test
or
add
sub
xor
jns
xchg
or
push
push
mov
cmps
out
scas
xor
ds
push
inc
mov
in
adc
iret
lahf
mov
jp
aas
jmp
inc
mov
jbe
jno
fadd
sub
addr16
js
fcomp
xor
jno
push
mov
loop
push
mov
js
inc
enter
(bad)
mov
push
push
jnp
jg
dec
shl
jae
cmps
push
jmp
cmp
cdq
or
xor
mov
pop
xor
int
sti
push
jo
xchg
add
and
cli
js
and
inc
in
popf
push
aad
sti
gs
int
mov
xchg
or
call
fdiv
pop
nop
adc
jns
scas
ins
mov
mov
inc
inc
movs
ins
mov
into
add
push
push
std
and
test
mov
lock
sbb
adc
lds
cld
cmps
adc
dec
adc
repnz
fwait
out
cmps
sub
dec
or
cs
mov
imul
ret
or
fstp
push
fcom
and
sti
stos
shr
mov
aas
sbb
out
cs
xchg
pusha
test
ret
adc
push
std
inc
pop
aad
es
in
mov
dec
and
fwait
mov
fndisi(8087
addr16
daa
daa
lds
retf
imul
cmc
push
jae
imul
xor
mov
mov
in
pop
test
adc
jmp
xor
daa
push
movs
jno
fcmovb
test
jb
(bad)
mov
bound
aaa
fdivr
dec
xor
jmp
sub
aam
xor
shl
ffree
jecxz
xor
xor
pop
ins
cdq
jge
cmp
dec
ins
(bad)
cmps
or
mov
mov
sti
aad
xchg
add
dec
stos
xor
mov
adc
cmp
push
je
dec
vmwrite
ja
mov
imul
fnstenv
sbb
sbb
add
jle
lods
stos
mov
pop
in
loope
lods
sbb
ja
mov
push
pop
inc
jmp
shr
jb
push
inc
cld
adc
bound
mov
cmp
shl
cmc
mul
dec
fld
(bad)
ins
hlt
xchg
stc
int
xchg
in
(bad)
das
dec
mov
lods
or
jmp
addr16
sti
call
outs
or
and
popa
push
stc
gs
mov
cmc
imul
or
jns
mov
pop
je
scas
push
inc
rol
dec
std
xchg
xlat
stos
or
jb
pushf
pushf
div
and
or
mov
fdiv
hlt
(bad)
out
shl
ins
sbb
cmc
mov
or
push
sub
aas
pop
test
cmp
mov
or
pop
mov
and
scas
cmp
clc
or
jmp
inc
add
cmc
sub
xor
cmp
mov
jge
jecxz
jne
mov
sbb
push
mov
and
(bad)
cmc
cmp
and
call
mov
enter
movs
(bad)
mov
in
xchg
inc
fld
xchg
xor
inc
add
push
div
or
mov
arpl
mov
inc
mov
mov
ins
sub
sub
mov
cmp
push
retf
test
sub
jne
jnp
inc
inc
aas
test
inc
enter
sbb
xchg
sahf
add
dec
mov
retf
jns
dec
scas
scas
cmovs
sub
cld
mov
ret
sub
fmul
push
mov
fcmovbe
div
mov
xor
je
retf
mov
in
add
dec
test
or
dec
out
std
cmp
nop
into
pop
pop
cmp
sbb
adc
stos
pushf
mov
ret
mov
sahf
jl
adc
mov
mov
dec
arpl
mov
in
stos
mov
arpl
xchg
jo
cmp
pop
adc
lahf
nop
mov
xchg
xor
adc
sub
mov
push
(bad)
shr
das
out
adc
cmp
xchg
ja
in
dec
and
fs
arpl
push
mov
xchg
addr16
sub
inc
jge
sub
ja
and
xor
cmps
dec
out
dec
mov
scas
xor
fcomi
repnz
adc
in
shl
fiadd
aas
das
stos
xchg
cmp
ss
or
int3
or
mov
add
(bad)
rcr
es
div
sbb
jae
jnp
mov
fwait
inc
mov
inc
or
mov
sbb
push
stos
fsub
push
stos
shr
push
lods
(bad)
push
scas
fsub
push
mov
mov
mov
fcmovnb
adc
pop
mov
ror
scas
sbb
repnz
lods
fsub
cs
es
out
sbb
adc
sbb
lahf
scas
das
jbe
mov
std
sub
stos
pushf
outs
and
enter
push
push
cld
jmp
sub
leave
sbb
push
out
mov
jne
shr
clc
popf
sub
ror
fs
adc
jns
mov
pusha
jmp
xchg
pushf
xor
(bad)
pop
sahf
push
dec
and
cmps
cmps
sbb
(bad)
out
arpl
xor
dec
xchg
cmp
imul
push
daa
dec
loop
ret
push
lahf
or
jp
push
loope
fnstenv
sub
mov
ss
xchg
nop
mov
add
fdivr
sub
loop
cmp
inc
fnstcw
dec
mov
pop
shl
ins
mov
arpl
sbb
scas
(bad)
rol
sti
and
mov
daa
add
cmp
movs
inc
mov
pop
movs
sub
push
mov
leave
test
in
mov
fadd
adc
call
(bad)
test
leave
xchg
mov
lock
push
push
jmp
or
inc
call
jp
daa
popa
sbb
repz
setns
jo
add
mov
inc
mov
data16
jl
cs
add
aaa
jnp
test
rcl
retf
pop
mov
es
les
sbb
es
jecxz
stos
jbe
enter
test
(bad)
(bad)
retf
push
ret
or
ins
pusha
jbe
lock
push
icebp
and
mov
pushf
(bad)
push
jle
xor
or
(bad)
xchg
jo
icebp
gs
or
jp
hlt
scas
mov
enter
inc
jge
mov
mov
jo
and
mov
push
cmp
mov
gs
sub
shr
cmp
mov
mov
lods
push
lea
(bad)
popa
cmp
sub
jne
cmp
rcr
xchg
mov
mov
ffreep
xlat
out
sub
loopne
sldt
or
mov
retf
pop
jmp
daa
or
mov
fimul
loopne
lds
ins
in
int3
icebp
xchg
adc
mov
cmp
xlat
bnd
dec
pause
stos
adc
aas
mov
pop
test
add
mov
movs
shl
loopne
hlt
push
push
cmp
push
ins
fs
adc
test
xor
stos
pusha
hlt
mov
arpl
mov
pop
hlt
add
dec
out
fcmovnu
(bad)
pop
mov
sub
dec
xor
sti
in
out
xchg
xchg
adc
and
push
ds
loop
(bad)
push
ret
cmps
fnstsw
mov
out
repnz
dec
out
jmp
(bad)
jno
fidiv
push
loop
(bad)
(bad)
popa
out
imul
jno
stos
dec
fstp
movs
sbb
dec
test
nop
jno
repnz
iret
fidiv
pop
sbb
pusha
lea
mov
adc
mov
fmul
pushf
mov
in
add
enter
das
popf
mov
sbb
jno
pop
xor
push
js
fst
inc
imul
(bad)
adc
push
shr
mov
in
cli
dec
mov
(bad)
sahf
adc
add
outs
imul
and
addr16
in
xchg
push
fiadd
xchg
mov
loopne
push
pop
adc
ins
es
out
enter
out
cmps
xor
iret
cld
inc
xor
xlat
das
jl
daa
js
pop
rcl
add
adc
movs
out
cmp
sbb
and
pop
sbb
add
(bad)
dec
ror
adc
rcl
push
imul
mov
ror
hlt
js
xchg
jecxz
sub
cdq
cld
pop
add
mov
test
inc
xchg
je
push
cmps
retf
xor
sub
ret
out
js
cmps
sub
push
js
stos
fild
inc
cmps
jmp
es
pusha
call
out
retf
scas
pop
push
or
mov
mov
sub
mov
(bad)
fcom
out
inc
fucom
jae
in
int
lods
and
push
test
pop
std
out
fild
xlat
xchg
shl
sbb
pop
xor
xor
fistp
push
inc
retf
popf
into
xchg
call
push
add
loope
or
xchg
ret
out
sbb
fdivr
and
mov
repnz
or
lahf
dec
stc
call
test
xchg
or
push
cwde
xchg
daa
jecxz
adc
push
push
mov
loopne
stos
fsub
push
scas
fadd
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fchs
push
jno
loop
lods
lock
pop
cmp
push
mov
dec
push
retf
jb
mov
jno
mov
add
out
out
cs
push
scas
jmp
ds
or
in
outs
imul
(bad)
cmp
shl
fld1
loop
or
loop
cmps
das
lods
in
push
repnz
scas
test
loop
scas
aam
xor
scas
fdivr
push
fsub
dec
pushf
ret
scas
fsub
push
mov
mov
push
scas
push
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
mov
imul
loopne
stos
(bad)
push
test
out
scas
fsub
push
scas
fsub
push
mov
add
cs
and
push
ins
jecxz
lods
fsubp
push
sar
sbb
not
xor
add
aas
or
cmc
stos
sub
retf
das
xor
or
lods
dec
int3
in
adc
pop
cmps
scas
adc
out
popf
out
out
ss
movs
cmps
push
int3
popf
dec
das
push
mov
mov
xacquire
call
mov
adc
pushaw
jecxz
fcomp
push
mov
pushf
outs
out
xchg
retf
lock
inc
adc
sbb
push
jo
xchg
push
rol
xor
jecxz
lods
stc
sub
repz
lahf
add
pop
shl
inc
push
xchg
dec
cld
mov
movs
(bad)
and
inc
and
cld
adc
dec
xor
xor
xchg
xchg
mov
push
sub
mov
xchg
sbb
mov
mul
retf
imul
nop
inc
pop
inc
xor
dec
push
repz
add
shl
dec
sub
dec
mov
sbb
dec
dec
sub
out
mov
test
sahf
or
jecxz
mov
adc
pop
sbb
xor
push
das
mov
xor
inc
jne
jle
mov
xor
pop
inc
or
sub
rol
inc
pop
mov
int3
xor
retf
outs
inc
dec
push
mov
inc
rcl
sub
stos
or
nop
mov
push
fild
scas
and
ins
cmps
or
mov
push
add
mov
aas
hlt
or
pop
movs
add
pop
rol
mov
cmp
pop
xchg
(bad)
ds
add
or
sbb
div
sub
dec
jge
mov
xchg
pusha
pop
fstp
xlat
addr16
and
dec
mov
ror
aam
inc
adc
cld
or
int3
out
hlt
lahf
ja
in
call
(bad)
push
jnp
scas
daa
fdiv
push
scas
shl
push
cmps
fsubp
push
scas
fsub
push
lods
fadd
adc
mov
add
stc
bound
nop
scas
sbb
repnz
stos
(bad)
mov
jecxz
cmp
pop
fcmovb
aam
mov
fs
xchg
(bad)
lods
cmp
push
lods
out
test
leave
shl
jnp
retf
fmul
inc
sub
adc
ret
xor
jge
or
push
pushf
xchg
ins
fdivr
ja
out
jecxz
fsubr
add
stos
fisttp
and
dec
adc
push
or
shr
or
push
shld
test
(bad)
xor
sbb
jecxz
push
push
add
mov
je
js
mov
mov
jp
out
xchg
push
movs
and
popa
les
bound
push
shl
popa
push
out
and
cmp
pop
(bad)
or
jnp
push
jle
xchg
into
dec
and
and
aaa
stc
in
adc
dec
enter
gs
mov
mov
out
sbb
in
jle
dec
lds
mov
rol
mov
and
xor
rol
imul
cmps
pop
sub
scas
push
aas
ret
cmp
cmp
(bad)
lods
mov
adc
test
popa
dec
xor
dec
into
outs
sti
enter
retf
mov
push
cmc
fiadd
movs
mov
stc
out
mov
lods
jmp
push
int
sbb
and
iret
sub
xor
test
imul
push
mov
les
mul
stc
mov
fsub
sti
leave
test
push
nop
les
dec
daa
into
jge
pop
jne
fisubr
push
adc
inc
bound
jbe
scas
test
sahf
inc
sti
je
rol
mov
popf
mov
not
leave
popa
and
push
push
xchg
and
inc
mov
mov
mov
cmp
inc
sub
sbb
dec
into
repz
push
ret
scas
mov
push
scas
fsub
push
lods
fsubp
pop
test
loopne
scas
fsub
push
mov
and
out
mov
ret
ror
scas
sbb
repnz
lods
fsub
mov
jecxz
dec
(bad)
call
ror
mov
ja
cwde
jae
xchg
jbe
inc
xchg
cmp
jo
xor
dec
int3
mov
fnsave
xor
adc
je
jne
out
add
fcomp
or
adc
jmp
add
and
push
(bad)
lock
ds
sbb
shr
push
dec
inc
fcomp
pop
ins
fidiv
shl
test
pop
pop
mov
xchg
xor
out
gs
push
jne
in
inc
and
mov
add
cmp
ret
iret
arpl
xchg
push
bound
in
bound
pop
xchg
cld
(bad)
clc
pop
repz
pop
sbb
je
in
mov
repnz
xor
inc
pop
(bad)
cld
mov
jmp
xchg
clc
je
add
jb
int
iret
les
popa
into
iret
xchg
jns
fwait
(bad)
mov
jmp
and
sub
enter
or
inc
je
xchg
xor
xor
sbb
or
push
aas
scas
lods
pop
jo
adc
aam
sbb
xchg
ret
xchg
xchg
int3
mov
push
jbe
and
inc
scas
(bad)
mov
daa
cwde
repz
into
aad
cmp
in
or
cli
(bad)
fisubr
sbb
or
or
xchg
jge
add
scas
sti
sbb
std
push
mov
arpl
scas
sub
dec
(bad)
xlat
loop
and
jno
dec
xchg
loopne
ja
fwait
jno
rol
ss
sbb
ret
pop
xchg
fadd
xor
fild
inc
scas
jle
cmp
jbe
in
push
pop
bound
loopne
mov
or
repnz
push
shl
loopne
loop
fist
xchg
clc
dec
mov
xchg
xor
dec
sbb
test
icebp
add
xchg
jg
mov
loop
lea
in
xor
pop
push
sub
stos
jnp
add
in
inc
push
mov
add
imul
aam
or
jmp
popa
mov
and
cmp
jp
fisttp
popa
lods
push
data16
arpl
ja
out
int
mov
in
out
xor
xor
sbb
push
jmp
sbb
cmp
fsubr
lea
jp
(bad)
sar
sub
inc
int3
fidiv
dec
daa
shr
mov
xor
mov
jecxz
into
(bad)
mov
std
mov
shr
inc
jg
lods
ret
mov
repz
dec
call
push
and
xchg
ror
iret
fadd
sahf
call
cld
rcl
jb
mov
or
shl
aam
ins
addr16
adc
mov
jl
xlat
xchg
jnp
adc
xchg
push
inc
pop
ins
or
xchg
sub
adc
repnz
mov
nop
or
jmp
cwd
loop
jg
adc
dec
out
in
sbb
aaa
frstor
jbe
push
xchg
aam
push
and
sub
push
xor
shl
pop
mov
cs
leave
pop
and
push
dec
rcr
test
xchg
push
pushf
inc
ins
cld
sub
jp
inc
inc
les
mov
retf
push
sub
pop
sbb
mov
mov
movs
sub
xchg
adc
dec
cmp
push
rcr
hlt
sti
xchg
into
mov
and
cmp
and
ins
lock
sub
out
inc
cmp
sti
div
int
push
mov
call
repnz
aam
imul
add
js
loop
inc
stos
or
hlt
daa
jecxz
aas
les
xchg
ja
dec
movs
fiadd
sar
mov
out
xor
pusha
mov
and
cmp
or
xchg
clc
xor
adc
sub
shl
test
les
mov
push
xor
(bad)
out
mov
dec
cld
mov
cmps
xchg
test
jmp
mov
mov
xchg
scas
shr
in
push
mov
loopne
mov
movs
ins
push
pusha
dec
stc
out
cmp
rcl
pop
lock
(bad)
cmp
rol
sar
jmp
mov
add
mov
test
or
rcl
add
call
jle
call
mov
add
sbb
adc
ret
movs
lds
push
jbe
cmp
mov
add
pop
idiv
add
repnz
xor
lods
mov
dec
imul
adc
jmp
pop
mov
sub
imul
sbb
jnp
sbb
nop
jno
out
adc
int3
int3
push
mov
xor
xchg
stos
repnz
iret
cmps
pop
stos
add
out
loop
paddw
mov
pushf
sbb
push
or
pushf
dec
mov
jmp
xor
cmps
lds
push
inc
cmp
xlat
push
add
lds
mov
test
mov
inc
in
test
aaa
in
adc
adc
add
pop
push
outs
popf
add
or
stos
into
mov
dec
test
jae
mov
mov
(bad)
push
jp
dec
int
mov
stos
iret
sti
xor
nop
mov
xchg
dec
movs
ins
add
xchg
push
call
mov
cli
mov
jl
cmp
mov
inc
jno
or
aaa
xchg
xor
pop
and
and
cs
adc
xchg
sub
in
stos
push
mov
xchg
fcomp
in
xor
pop
in
shr
imul
mov
jg
clc
bound
mov
(bad)
push
dec
xchg
vmwrite
jo
sbb
inc
(bad)
gs
push
jae
push
and
dec
fs
stos
sbb
cwde
rol
stos
pop
ins
popf
cmp
sbb
(bad)
adc
out
in
ins
inc
je
dec
mov
loop
add
ret
xor
sub
leave
inc
add
add
xchg
pushf
pop
sbb
ss
and
cmps
push
mov
sub
shl
imul
fldenv
sbb
xchg
loop
imul
adc
adc
jl
push
in
sub
clc
addr16
sbb
mov
jns
aad
imul
and
sbb
cli
sub
cs
out
or
(bad)
lahf
fucom
ds
xor
dec
dec
cmp
dec
out
mov
cmp
mov
lahf
addr16
imul
(bad)
inc
lahf
int
xchg
sub
cs
fisub
lods
dec
dec
sti
adc
cmp
inc
popf
add
out
push
mov
fneni(8087
xchg
mov
jbe
push
push
into
shl
xor
ficomp
or
inc
stos
mov
rcl
ret
push
jmp
inc
test
inc
dec
loopne
movs
int
inc
inc
scas
or
cld
xlat
ret
pushf
scas
xor
stc
aaa
(bad)
sbb
pop
dec
stc
pop
jecxz
fmul
jmp
and
bound
push
push
sahf
xor
ins
push
outs
rcr
inc
pop
inc
push
and
jecxz
push
imul
cmp
scas
(bad)
push
scas
dec
loop
scas
fcomp
scas
pop
loop
stos
fsub
push
stos
fsubp
push
test
in
cmps
shl
pop
movs
shr
pop
mov
shl
mov
test
(bad)
je
ret
mov
hlt
jo
clc
shl
enter
int3
pusha
xor
je
repz
fsub
shr
pop
cmps
shl
pop
movs
retf
mov
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
retf
pop
jecxz
mov
fsubp
jb
fadd
push
test
loopne
daa
fcom
push
scas
fsub
push
lods
fsub
push
scas
fsub
push
scas
fsub
push
movs
aam
pop
mov
fcom
push
scas
fsubp
push
lods
(bad)
push
scas
fsub
push
scas
fsub
push
test
call
scas
sbb
cli
push
lods
fsub
jo
clc
loop
lods
inc
or
mov
sub
inc
jae
mov
push
fisttp
xlat
inc
ins
rcr
rcl
xor
ja
jae
popf
in
fild
add
rol
adc
jae
in
pop
test
gs
adc
pop
shl
dec
(bad)
push
push
jecxz
mov
out
lods
shl
push
scas
fsub
push
scas
fsub
push
scas
fsubrp
push
movs
(bad)
pop
mov
retf
es
push
mov
shl
push
jge
icebp
bound
aas
push
mov
cmp
fadd
push
sbb
ret
and
add
test
sbb
mov
inc
dec
pop
xor
test
or
test
sbb
fnstsw
(bad)
mov
lods
push
test
outs
popa
mov
(bad)
mov
push
and
adc
scas
add
stos
(bad)
pop
stos
enter
fsub
push
scas
fsub
push
stos
fsubp
jb
cld
adc
fcmovb
js
sahf
xchg
ins
pop
(bad)
fwait
adc
lods
cmps
loopne
mov
add
in
mov
sbb
and
sbb
add
ss
movs
clc
(bad)
imul
pop
mov
sbb
mov
(bad)
fiadd
inc
or
vprotd
mov
xor
mov
ins
movs
fldenv
inc
pop
pop
enter
ins
dec
push
lods
sbb
out
or
sub
xchg
imul
cmp
and
dec
les
cli
shl
pop
xchg
mov
int
xchg
xchg
push
call
mov
fidiv
sbb
ret
dec
pop
dec
push
push
jecxz
mov
loopne
stos
shr
pop
movs
shl
push
scas
fsub
push
scas
(bad)
push
mov
jmp
jp
pop
out
inc
js
mov
es
es
push
mov
cmps
loopne
xor
btr
shl
jne
lods
movs
mov
xchg
cmp
bound
in
inc
jmp
aam
or
repnz
sub
fdiv
leave
in
cmc
addr16
ds
lahf
mov
pop
jne
js
jbe
push
add
pop
or
and
(bad)
fwait
retf
cmp
sub
dec
pop
dec
into
hlt
jg
add
mov
rsm
adc
loop
daa
das
movs
jbe
cmp
push
xlat
mov
neg
or
adc
and
dec
sbb
cdq
fmul
or
cmp
(bad)
ds
inc
sti
mov
and
dec
in
aad
rol
mov
mov
ss
retf
jge
loop
pop
or
sar
cmp
pop
idiv
pop
jb
sti
mov
jae
bswap
fcomp
xchg
sbb
loopne
mov
push
or
arpl
enter
(bad)
popf
dec
mov
xchg
loopne
push
lea
and
jmp
sbb
retf
push
out
inc
mov
xlat
dec
mov
lsl
dec
test
ret
(bad)
movs
jns
fcmovnb
cmp
jmp
dec
or
and
cmp
or
xor
ja
xor
cld
add
push
ss
(bad)
aas
je
jo
scas
out
jge
mov
jecxz
push
xor
daa
fadd
push
lods
shr
pop
movs
fsub
push
scas
fsub
push
lods
fsub
push
cmps
cli
(bad)
pop
mov
mov
mov
clc
movs
xor
pop
inc
repnz
shr
push
push
mov
cmps
out
adc
sbb
inc
inc
les
xchg
mov
adc
jne
ins
sbb
inc
or
mov
dec
xor
mov
(bad)
or
push
call
fld
add
imul
shl
mov
loop
jmp
retf
xchg
iret
jo
jb
jge
pop
ins
pop
xlat
int
iret
rcl
sbb
dec
jae
lods
imul
fist
mov
les
sbb
in
xchg
shl
adc
pop
adc
mov
dec
aad
loopne
sbb
mov
aaa
or
imul
dec
(bad)
mov
sbb
dec
adc
dec
add
movs
lods
mov
sub
mov
dec
mov
mov
xlat
inc
jae
fst
pushf
pusha
sbb
sbb
cmp
stos
gs
loopne
loope
loop
addr16
push
popa
dec
jne
cli
outs
movs
push
adc
aad
jmp
movs
enter
enter
xchg
out
movs
adc
dec
arpl
imul
retf
mov
fldcw
and
test
(bad)
fimul
out
or
gs
push
push
jecxz
mov
loopne
test
loopne
scas
(bad)
push
scas
fsub
push
scas
fcmovb
push
in
mov
ret
jnp
scas
sbb
repnz
lods
fsub
cs
pop
mov
add
call
dec
push
push
aas
fs
das
ror
push
bnd
gs
pop
dec
xor
repz
inc
sahf
std
dec
(bad)
fs
aam
xlat
mov
stos
pop
dec
inc
xor
inc
mov
jecxz
jnp
shr
int3
inc
sbb
and
or
push
loopne
das
out
ror
dec
cmp
jl
xchg
in
scas
inc
(bad)
xchg
xchg
jmp
enter
inc
out
cmps
xchg
repz
inc
icebp
test
pop
aaa
dec
stos
sbb
inc
das
xor
sub
bound
add
(bad)
fisttp
jbe
dec
dec
add
retf
sbb
in
mov
cli
mov
pop
sar
adc
cli
push
lods
fsub
push
test
loop
mov
aam
inc
mov
movs
shl
imul
loopne
stos
fsub
push
test
loopne
scas
fsub
push
scas
fsub
jb
fadd
jb
mov
jecxz
lods
fsubp
push
sar
bnd
pop
pop
jae
cmp
pop
stos
adc
mov
loope
sub
ins
jg
jecxz
add
int3
fdiv
adc
hlt
mov
push
clc
mov
mov
loopne
and
mov
lahf
cwde
hlt
xchg
dec
pop
fidiv
cmp
inc
addr16
mov
dec
dec
ds
scas
adc
sbb
mov
das
xchg
push
xchg
push
push
sub
push
adc
inc
ja
and
fstp
xor
jo
cmps
cmp
push
jns
sub
cmp
push
aad
adc
xchg
ror
ret
fist
rcr
and
cmps
xchg
jae
icebp
daa
pop
loope
jge
mov
sub
sbb
push
lods
fsub
push
scas
(bad)
push
scas
fsub
push
scas
fsub
push
mov
mov
xchg
dec
(bad)
push
mov
cmps
ret
fimul
mov
jle
loop
scas
enter
lods
out
pusha
es
int
das
ret
out
mov
das
lods
xchg
cdq
out
jne
cmp
ins
push
movs
je
dec
repz
xchg
lea
mov
xchg
in
and
add
ja
adc
fdivp
inc
pop
lods
sub
cmp
shr
jae
xor
in
inc
retf
out
and
sub
call
fcmovb
mov
sbb
(bad)
rcr
int3
cmps
mov
jns
mov
leave
push
push
push
push
nop
or
inc
inc
ins
rcr
shl
and
xchg
fisubr
mov
sti
inc
add
cmp
stos
int
movs
or
je
xchg
dec
dec
ja
cmp
xchg
jg
sub
bound
mov
shl
pop
(bad)
adc
jecxz
mov
loopne
lods
fsub
push
stos
fsubp
push
scas
fsub
push
scas
fcmovb
adc
sti
add
cmp
push
scas
ficomp
je
loopne
cmp
and
and
inc
ret
jbe
(bad)
or
add
xor
lea
jmp
sbb
pop
dec
jnp
pop
jl
mov
lea
jecxz
and
xor
icebp
loope
push
fsub
fisttp
call
cmp
das
(bad)
mul
ss
jle
sbb
(bad)
out
(bad)
movs
adc
dec
push
xchg
scas
mov
adc
mov
arpl
(bad)
cwde
leave
dec
sbb
jbe
dec
in
scas
or
ret
add
imul
mov
sbb
stos
ins
pop
sub
mov
(bad)
lds
fcmovbe
arpl
dec
jge
jmp
sbb
add
lahf
sbb
push
(bad)
pop
mov
add
jo
fldenv
loop
fisub
bound
jp
sub
imul
cmp
scas
(bad)
push
scas
dec
loop
scas
fcomp
scas
pop
loop
stos
fsub
push
stos
fsubp
push
test
in
cmps
shl
pop
movs
shr
pop
mov
shl
mov
test
(bad)
je
ret
mov
hlt
jo
clc
shl
enter
int3
pusha
xor
je
repz
fsub
shr
pop
cmps
shl
pop
movs
retf
mov
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
retf
pop
jecxz
mov
fsubp
jb
fadd
push
test
loopne
daa
fcom
push
lods
fsub
push
lods
(bad)
push
scas
fsub
push
scas
fsub
push
scas
shr
pop
mov
push
jecxz
lods
(bad)
push
lods
(bad)
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
test
call
push
mov
loopne
stos
clc
in
scas
fchs
mov
jecxz
xor
ins
add
add
nop
dec
or
pop
cwde
mov
fcomp
leave
repnz
push
scas
fsub
push
scas
(bad)
(bad)
je
nop
mov
dec
pop
jo
xlat
dec
jmp
ins
js
call
pusha
or
push
scas
(bad)
push
aaa
stc
cmp
xor
mov
inc
js
pop
ss
sbb
xor
xor
add
scas
(bad)
push
data16
lds
int
xor
mov
push
in
jne
inc
ds
sbb
int
and
push
scas
fsub
push
scas
(bad)
sub
push
mov
xchg
pop
mov
inc
out
jb
mov
lahf
inc
ret
push
cmps
inc
mov
scas
fsub
push
scas
cmp
imul
aas
(bad)
fld
lock
(bad)
and
mov
into
xchg
dec
aaa
cmps
ins
in
frstor
scas
fsub
push
scas
fst
arpl
es
imul
ja
aad
fwait
pop
stc
xor
push
bnd
shr
fchs
(bad)
sbb
push
mov
jle
and
push
call
push
rcr
jne
nop
daa
mov
push
scas
fsub
push
scas
fst
dec
gs
sub
sahf
inc
pushf
mov
push
dec
push
xchg
fiadd
xchg
and
scas
fsub
push
scas
fsub
bound
jecxz
cmps
dec
lods
cli
stos
dec
mov
enter
pop
inc
mov
mov
jge
scas
fsub
push
scas
(bad)
push
add
pushf
popf
outs
fsub
push
scas
fsub
push
scas
fsub
push
scas
cmp
xchg
xor
push
scas
fsub
push
scas
fsub
push
scas
(bad)
sub
mov
push
scas
fsub
push
scas
fsub
push
scas
(bad)
pop
push
cmps
dec
adc
fsub
push
scas
fsub
push
mov
fsub
push
scas
fsub
push
scas
fsub
push
scas
fisubr
push
scas
fsub
push
scas
fsub
push
scas
(bad)
pop
cmps
sbb
push
scas
fsub
push
scas
fsub
push
scas
fsubr
or
cmps
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
imul
loop
stos
fsubp
push
lods
(bad)
push
cmps
fsubp
push
scas
fsub
pop
test
out
jl
fmul
jbe
cld
enter
xchg
es
push
mov
shl
push
add
sub
and
aas
out
shl
jae
and
ret
or
mov
(bad)
push
sub
cmp
sbb
inc
popf
xchg
icebp
and
push
xchg
and
sbb
push
xchg
xor
pop
mov
dec
(bad)
dec
sti
cmc
aaa
add
rcl
xor
lea
in
adc
jmp
cmps
push
(bad)
cmc
mov
and
and
repz
arpl
retf
pop
mov
pop
inc
dec
imul
adc
add
pop
mov
pop
inc
dec
imul
adc
and
fucomi
pop
je
jg
es
jecxz
add
out
sbb
jno
in
ss
jne
stos
dec
xor
cmp
cmp
mov
mov
and
or
test
pop
jmp
rol
out
call
dec
fidivr
lock
stc
and
aad
adc
icebp
aad
test
inc
mov
ret
nop
rol
mov
out
out
push
push
jae
fs
inc
retf
mov
mov
(bad)
mov
push
push
dec
je
(bad)
loopne
int
pop
scas
(bad)
pop
ja
and
scas
xor
add
dec
aaa
ficomp
inc
push
and
add
xor
dec
daa
jecxz
push
ins
enter
sub
xchg
outs
and
sahf
rol
or
mov
xchg
(bad)
int
lahf
cmp
xchg
cli
jo
xor
test
mov
jl
popf
stc
sbb
and
add
xor
gs
dec
hlt
jp
jns
cmp
mov
inc
xchg
mov
and
jp
pop
ret
mov
pop
in
xchg
jne
and
xor
cmps
dec
int3
jae
inc
xchg
iret
stos
or
shl
cmp
jmp
xor
retf
inc
aaa
popf
cmp
mov
jmp
mov
pop
fidivr
mov
in
dec
mov
(bad)
pop
cmp
dec
mov
call
ret
(bad)
xor
pop
cmp
dec
mov
call
ret
(bad)
xor
pop
cmp
dec
mov
hlt
xor
aas
sub
xchg
dec
(bad)
and
cld
jns
(bad)
xchg
sar
mov
pop
mov
(bad)
rol
cmp
sbb
sbb
dec
pushf
in
(bad)
out
shl
pop
test
sub
jno
nop
pushf
inc
mov
gs
and
xlat
dec
clc
sbb
ror
cld
aam
cmp
test
sub
jno
xchg
cmps
jle
cld
je
inc
in
xchg
nop
or
or
or
pop
dec
test
inc
imul
add
je
test
cmp
jbe
es
inc
cmc
into
xchg
xlat
sbb
add
push
xchg
sbb
jecxz
adc
pop
leave
neg
xor
xchg
mov
mov
or
adc
pop
retf
xchg
jmp
dec
jne
aaa
loopne
adc
fsub
fisub
adc
pushf
and
bound
cwde
inc
adc
fsub
fisub
adc
pushf
and
bound
cwde
inc
adc
fsub
fisub
adc
pushf
es
vzeroupper
sub
nop
popa
pop
sbb
stos
daa
out
push
pop
and
and
into
aam
in
push
ins
jo
mov
popa
sbb
xchg
push
pop
sub
(bad)
rcl
sar
(bad)
lds
jle
cld
dec
test
js
jl
gs
ja
jl
js
cmp
xchg
cmp
xchg
retf
loope
test
xchg
outs
icebp
pop
ins
aad
sub
xor
int
(bad)
cmp
push
inc
loope
out
aam
push
ret
mov
pop
and
in
out
fs
jle
cmp
call
punpckhbw
cwde
pop
and
jbe
clc
dec
in
mov
outs
icebp
pop
ins
aad
sub
jnp
cmp
xor
xor
nop
sbb
mov
popf
mov
inc
xchg
call
retf
stos
ffreep
call
and
dec
jge
js
fcom
lds
push
(bad)
leave
dec
dec
inc
out
mov
(bad)
fcomi
imul
xor
inc
ja
in
outs
pop
cmps
jns
cmp
xor
push
lahf
sbb
xchg
and
call
ins
sub
outs
jne
cmp
fnsave
push
jmp
dec
add
and
lahf
in
outs
pop
lods
mov
mov
dec
sahf
fld
sti
stos
push
pop
xchg
lea
and
fld
sti
stos
push
pop
xchg
lea
and
fld
sti
stos
push
pop
xchg
lea
and
fld
sti
stos
push
pop
xchg
lea
and
fld
lahf
lds
push
adc
jo
clc
xchg
int
scas
cmps
push
add
(bad)
aam
imul
and
(bad)
xchg
mov
cmp
in
mov
xchg
pop
inc
cmp
mov
sub
dec
call
and
dec
ins
mov
outs
mov
lds
daa
fdivr
movs
shl
push
test
loopne
scas
fsub
push
scas
(bad)
jp
jl
adc
cld
les
cli
sbb
jns
nop
push
ins
jecxz
lods
fsubp
push
rcr
(bad)
call
pushf
enter
lods
push
fldenv
popf
or
test
mul
mov
out
mov
cmps
cmc
rcr
fs
dec
sbb
cld
enter
test
lds
adc
lods
or
pop
jo
pushf
inc
cs
sub
push
pop
push
inc
cmp
in
fwait
mov
adc
xchg
mov
xchg
icebp
ja
cmps
mov
icebp
dec
pop
repnz
addr16
jge
adc
lods
sub
scas
in
xchg
pop
push
mov
rcl
cmp
sbb
push
cmp
xchg
aad
or
hlt
add
dec
and
gs
push
enter
cmp
std
aad
jns
sbb
and
call
xchg
icebp
dec
sbb
popa
aaa
shr
jl
shr
push
sbb
adc
pop
pop
(bad)
leave
mov
ins
push
pop
(bad)
mov
ss
dec
ja
(bad)
mov
jno
xchg
repz
call
push
test
int3
xchg
pop
xchg
jae
xor
mov
and
mov
ficom
call
inc
or
and
fwait
sub
rol
call
sti
and
stc
and
xchg
(bad)
cmp
add
out
pop
stc
and
pop
jg
mov
jg
xchg
and
in
(bad)
adc
mov
cwde
fs
fst
fiadd
sub
xlat
mov
test
jno
push
fist
mov
popa
dec
xchg
mov
call
xchg
cmc
xlat
xor
inc
cmp
and
dec
fbstp
fdiv
inc
pop
xchg
xchg
test
ficom
scas
(bad)
and
add
test
pop
dec
ja
xchg
repz
jmp
xchg
cmp
pop
jmp
(bad)
dec
cmc
rdmsr
sub
adc
(bad)
and
cmp
and
fsubr
dec
mov
inc
ret
push
aas
push
mov
jle
mov
shl
cmp
jbe
xor
xor
pusha
cmp
imul
scas
push
aad
rcr
cmp
je
pop
pop
out
fldenv
mov
mov
dec
call
sbb
stos
push
push
daa
out
add
sahf
jae
(bad)
mov
popa
out
sbb
loop
imul
jp
sahf
jns
ret
mov
or
mov
out
and
dec
sbb
pop
data16
mov
dec
loop
iret
push
push
arpl
ja
adc
mov
jbe
in
cwde
or
dec
ds
xor
and
fcmovbe
(bad)
jecxz
mov
lock
sub
push
xlat
sub
push
sub
shl
add
inc
and
fstp
push
ins
mov
mov
jle
sbb
jge
and
inc
sbb
add
outs
xchg
scas
out
mov
in
in
cmp
add
xchg
in
pop
pop
stos
hlt
shr
dec
sub
sbb
addr16
push
sub
ins
mov
mov
jle
sbb
jge
and
inc
sbb
add
outs
xchg
scas
out
mov
in
in
cmp
add
xchg
in
pop
pop
stos
hlt
shr
dec
sub
sbb
addr16
push
sub
ins
mov
mov
jle
sbb
jns
and
(bad)
push
lock
sub
retf
(bad)
push
lock
sub
retf
(bad)
push
lock
sub
retf
(bad)
push
lock
sub
retf
(bad)
push
lock
sub
retf
(bad)
push
lock
sub
retf
(bad)
push
lock
sub
retf
(bad)
push
lock
sub
retf
(bad)
push
lock
xchg
inc
push
xor
mov
xor
ret
ss
sbb
ins
imul
(bad)
not
test
fistp
inc
push
dec
jp
int3
xchg
and
lock
xchg
inc
push
xor
mov
xor
ret
ss
sbb
ins
imul
(bad)
not
test
fistp
inc
push
dec
jp
int3
xchg
and
lock
xchg
inc
push
xor
cmps
or
mov
push
cvtps2pi
dec
adc
inc
cmps
add
cdq
add
in
movs
mov
cwde
pop
les
in
pop
cmp
out
xor
icebp
pop
jae
sub
xor
cli
pop
(bad)
sub
xchg
add
dec
adc
or
sub
mov
test
mov
mov
jle
mov
xchg
jb
dec
jp
in
cmp
ficom
sub
inc
xchg
mov
push
or
mov
dec
(bad)
dec
shl
aad
je
ficom
cdq
rcr
loop
dec
test
adc
cld
cmp
xchg
stos
out
mov
cmp
pusha
push
mov
int3
retf
outs
ret
xor
cmc
sub
dec
push
dec
js
nop
pop
inc
cld
pop
push
fisttp
rcl
push
jo
push
ror
iret
cdq
popf
je
mov
push
test
jmp
sub
sub
out
inc
xchg
mov
push
or
daa
jecxz
push
push
jecxz
mov
out
test
loop
scas
aam
push
test
loop
scas
fsub
push
mov
(bad)
repnz
test
sub
movs
lock
scas
sbb
repnz
stos
(bad)
lods
jmp
sub
sub
adc
add
mov
ror
dec
enter
jno
sti
mov
lods
clc
xor
mov
rcr
dec
es
stc
arpl
inc
rcl
xchg
and
arpl
push
in
push
dec
or
add
fdiv
scas
jo
mov
lock
leave
xchg
js
inc
retf
lock
leave
xchg
js
inc
retf
lock
leave
xchg
jbe
push
xchg
and
mov
add
xor
push
adc
jbe
retf
imul
jmp
lahf
aas
(bad)
pop
cmp
push
jnp
sbb
sub
cmc
and
sub
sub
fs
(bad)
test
or
xchg
inc
mov
pop
jl
dec
int3
sbb
xor
cwde
movs
rcl
ja
mov
lea
addr16
xor
mov
push
iret
xor
ja
outs
movs
mov
test
push
mov
jae
(bad)
mov
jg
sub
inc
leave
add
xor
xchg
movs
jo
daa
pushf
cdq
inc
sub
inc
call
xor
pop
mov
(bad)
mov
fs
int3
pop
mov
cmp
jle
mov
call
fld
repz
or
dec
adc
aad
dec
push
into
in
mov
cmp
mov
jne
push
cmp
rol
stos
mov
pusha
inc
cmc
shl
ins
xchg
std
hlt
aaa
jbe
rep
int
int3
rol
pusha
mov
sub
int3
rol
pusha
mov
sub
int3
rol
pusha
mov
pop
sbb
xchg
mov
pop
lods
pop
jmp
adc
xlat
and
xor
popf
icebp
loop
push
jmp
push
or
leave
or
sub
push
mov
jae
xor
pushf
adc
fwait
cmp
into
and
mov
out
call
or
rcr
out
imul
aad
xchg
cs
adc
cdq
xor
inc
pop
test
(bad)
in
fcom
pop
(bad)
popa
pop
das
out
dec
mov
sub
data16
xor
mov
mov
gs
(bad)
dec
mov
mov
pushf
repz
or
bound
or
bound
loop
mov
ins
cmc
ja
xor
push
lahf
jbe
ffree
xor
pop
cwde
mov
movs
test
jo
sbb
sbb
xchg
es
clc
add
ds
mov
out
adc
ror
pop
jne
(bad)
xchg
sbb
mov
mov
cmp
jns
jecxz
inc
mov
fild
aas
jb
(bad)
retf
sbb
mov
rol
xor
xor
daa
inc
arpl
rol
jne
jb
jae
lea
add
jl
or
xchg
lock
pusha
xchg
test
popf
or
jecxz
inc
sub
in
iret
cmp
test
or
xor
inc
xchg
pop
not
mov
jns
dec
sub
leave
jl
xor
scas
movs
or
ja
in
inc
arpl
or
test
cdq
push
pop
mov
push
sub
mov
push
sub
mov
push
sub
mov
push
sub
icebp
mov
xchg
retf
icebp
mov
xchg
retf
icebp
mov
xchg
retf
icebp
mov
xchg
retf
icebp
mov
xchg
into
add
mov
or
add
mov
or
add
mov
or
add
mov
or
push
jle
jecxz
daa
fcomp
movs
shr
pop
cmps
shl
pop
scas
fsub
push
scas
(bad)
push
cmps
cli
mov
(bad)
xrelease
pusha
(bad)
or
and
retf
pop
sub
out
adc
js
imul
out
push
ins
jecxz
lods
(bad)
pop
rcr
je
test
jmp
xchg
pop
call
inc
std
hlt
loopne
idiv
mov
or
lea
dec
push
inc
ror
shl
fs
(bad)
push
into
(bad)
and
mov
int
std
inc
bound
cmp
adc
xlat
inc
inc
pop
gs
outs
add
xlat
outs
pop
mov
inc
dec
pop
fdivr
int3
test
push
ficomp
jge
inc
jmp
lea
pop
call
mov
int3
push
test
pop
ins
arpl
jae
jmp
mov
pop
xor
in
mov
fsubr
mov
outs
nop
je
dec
xchg
mov
mov
cmovbe
pop
rcr
fidivr
addr16
jecxz
test
int3
adc
data16
pop
xchg
cdq
jle
jns
mov
sub
in
test
arpl
mov
fidivr
repnz
push
hlt
call
jbe
jnp
addr16
sbb
bound
outs
push
pop
adc
sub
pop
xchg
pushf
xchg
mov
and
jg
add
loope
adc
retf
mov
mov
fcmovnu
int3
repnz
lods
test
mov
inc
mov
retf
mov
mov
fcmovnu
int3
repnz
lods
test
mov
inc
mov
retf
cmps
mov
lock
out
jecxz
mov
aad
cmp
push
neg
dec
adc
mov
ret
jmp
fimul
cli
sbb
sub
adc
pop
shl
jmp
mov
ja
addr16
cmp
test
inc
lock
mov
sbb
xlat
lock
dec
scas
je
addr16
jg
ror
mov
daa
jecxz
iret
sbb
add
cmp
js
shl
sbb
jno
int3
or
ins
or
jmp
nop
jmp
mov
mov
sub
fisubr
xor
icebp
ja
and
or
fsubr
(bad)
mov
dec
cmp
xor
sar
call
push
pop
xor
pusha
cli
dec
add
imul
test
fisttp
sub
ror
jb
and
sar
call
pop
fild
pushf
cdq
cmp
aad
add
cdq
xor
js
out
xchg
nop
ss
xchg
enter
dec
stos
test
sahf
inc
(bad)
ins
adc
or
sbb
sbb
ror
ds
mov
retf
pop
or
or
dec
call
aam
adc
mov
neg
sbb
ror
cld
cmps
fimul
xor
mov
or
cmp
addr16
(bad)
rcr
pop
je
iret
cs
dec
test
loop
xchg
sbb
ds
repnz
pop
shl
adc
and
in
scas
fidivr
push
sub
mov
or
push
mov
arpl
fdiv
mov
mov
ins
in
bswap
(bad)
dec
push
add
shl
or
xchg
push
sbb
aad
xchg
xor
sahf
jle
imul
mov
es
jne
jmp
popa
adc
xor
(bad)
(bad)
mov
jmp
mov
aaa
push
mov
pop
and
push
aaa
retf
and
mov
sub
add
enter
lods
push
or
out
pop
loopne
xor
loopne
movs
ficom
dec
outs
mov
ror
mov
(bad)
int3
stos
fcmovu
pop
test
neg
cli
nop
(bad)
jmp
lods
pop
jle
lods
loopne
push
fmulp
out
mov
cmp
sahf
mov
adc
inc
adc
adc
sbb
pop
pushf
(bad)
popa
xor
fwait
rol
jecxz
add
push
mov
pusha
sbb
ins
push
inc
ss
pusha
cmp
sti
(bad)
addr16
jl
cmps
mov
xchg
out
scas
je
data16
jno
xchg
sub
(bad)
pusha
mov
mov
sahf
test
mov
es
ror
jp
nop
sub
data16
xor
cmp
mov
push
int3
ins
imul
pop
push
cmp
sub
and
mov
data16
dec
inc
sub
push
sbb
in
pop
jmp
cld
retf
pop
ror
push
adc
xor
add
clc
stos
cmps
mov
cld
xchg
sub
cmp
or
mov
int3
or
test
push
sti
jne
xchg
inc
test
scas
jl
cmp
push
inc
mov
aaa
ret
arpl
cmp
or
dec
loope
shl
jno
mov
xchg
jmp
inc
movs
call
test
stos
test
sar
lahf
mov
(bad)
gs
icebp
jle
js
imul
adc
jge
jl
add
ret
sub
mov
or
rol
mov
ss
mov
sbb
push
(bad)
fldenv
xchg
mov
out
(bad)
dec
inc
xor
sbb
mov
mov
cmp
jl
(bad)
mov
imul
cmp
loope
add
into
or
mov
ror
jecxz
stc
fidiv
hlt
mov
and
pop
xor
mov
bound
pop
inc
aas
lahf
neg
xor
sbb
push
inc
xor
test
sahf
cmp
retf
daa
dec
push
rcr
pop
mov
outs
xchg
in
fild
or
outs
out
cmp
ret
jmp
out
jnp
xor
or
ret
les
and
cmp
cld
dec
adc
push
inc
cmps
repnz
dec
xchg
jg
gs
cs
movs
xor
loopne
int3
imul
jae
ds
int3
fistp
nop
sub
arpl
repnz
lock
mov
xor
(bad)
mov
in
fisubr
cmp
mov
mov
repz
xor
and
repz
dec
xor
das
in
and
in
sub
dec
or
inc
pop
ror
pop
dec
scas
cdq
mov
push
stos
mov
jmp
pop
and
rcr
cli
ret
ror
in
popf
jle
test
(bad)
shl
pop
fdiv
aaa
retf
add
nop
mov
(bad)
loope
nop
outs
ror
xor
cdq
ror
dec
mov
retf
add
stos
leave
add
sub
call
les
and
nop
xor
repz
sub
dec
push
mov
shl
inc
mov
and
je
ja
cli
push
dec
aaa
test
fdivr
addr16
add
dec
repnz
ss
stos
leave
add
sub
call
les
and
nop
xor
repz
mov
mov
je
xor
aaa
iret
mov
add
push
push
ss
enter
out
and
mov
and
out
xchg
dec
test
je
pop
mov
jecxz
fwait
ret
movs
icebp
mov
push
jge
cmps
add
js
inc
cli
fidivr
and
mov
and
mov
cmp
adc
jnp
sbb
dec
data16
or
in
test
in
test
in
test
in
test
in
test
in
test
in
test
in
test
in
test
in
test
in
test
in
test
in
test
in
test
in
test
in
test
in
test
in
test
in
test
in
test
in
sbb
retf
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
mov
mov
inc
stc
dec
mov
jo
mov
inc
stc
dec
mov
jo
mov
inc
stc
dec
mov
jo
sahf
mov
(bad)
out
test
or
cwde
mov
adc
push
mov
(bad)
out
test
or
cwde
mov
adc
push
mov
(bad)
out
test
or
cdq
sub
xchg
xlat
cdq
sub
cmp
mov
adc
dec
outs
jg
xchg
gs
push
shl
sub
adc
(bad)
fadd
adc
ds
int
in
mov
xor
fistp
mov
mov
cmps
pop
dec
add
in
dec
loope
mov
pop
lea
mov
sub
dec
pop
sub
sbb
ins
adc
sub
sub
cmp
sar
fsubr
into
cmp
xor
adc
mov
cs
outs
sar
fsubr
into
cmp
xor
adc
mov
cs
outs
sar
fsubr
into
cmp
xor
adc
mov
cs
outs
sar
fsubr
into
cmp
xor
adc
mov
cs
outs
sar
fsubr
into
lea
test
mov
jnp
dec
outs
xor
not
jge
popa
clc
push
mov
add
xchg
mov
adc
movs
(bad)
cmp
mov
test
jb
retf
movs
cmp
dec
stos
les
mov
jecxz
jmp
add
and
push
jmp
lock
sahf
xor
sub
(bad)
cld
sbb
add
mov
fimul
jne
add
inc
sti
nop
inc
push
inc
call
and
or
lea
test
mov
jnp
pop
fist
jecxz
mov
out
test
jmp
fsub
push
scas
fcmovb
push
in
mov
inc
ror
sbb
adc
sbb
push
scas
ficomp
xchg
fisttp
es
xchg
imul
popf
out
cs
leave
pop
stos
dec
push
pop
into
push
rol
cmp
cmp
pop
mov
jmp
jmp
push
je
mov
test
xor
sbb
cli
xchg
cmps
imul
inc
fldenv
cmp
ret
mov
jle
jns
sbb
pop
dec
stc
repz
and
jb
jbe
sbb
repz
leave
fnstcw
push
retf
dec
call
stos
cmp
mov
jno
jp
cmp
dec
retf
call
inc
fidiv
lock
cs
aad
stos
out
ins
jge
sub
retf
bnd
sbb
sti
xchg
mov
mov
push
idiv
jns
aad
int3
into
add
call
out
xchg
pusha
cmc
in
dec
shr
mov
(bad)
dec
scas
mov
ret
push
aad
enter
lahf
imul
mov
mov
movs
xchg
icebp
xor
icebp
mov
ret
sub
cdq
add
and
xor
jecxz
aam
jmp
sub
push
int
div
adc
cmp
cmp
out
outs
push
(bad)
adc
scas
scas
mov
sub
lods
(bad)
imul
(bad)
mov
and
pop
xchg
mov
xchg
xchg
mov
lock
sub
lods
(bad)
jns
adc
adc
lods
repz
mov
jb
dec
int3
push
test
sbb
popa
mov
inc
jno
mov
stos
mov
or
or
add
mov
sbb
int3
test
out
cmp
mov
movs
fidiv
imul
imul
clc
int3
movs
call
push
inc
jle
xchg
ins
loop
mov
int3
lahf
sbb
mov
inc
push
mov
and
sbb
fldenv
pop
jb
sub
out
dec
add
mov
fisub
push
and
cmp
inc
popa
pop
aas
stc
or
fild
or
test
jle
mov
mov
jbe
mov
push
nop
test
dec
ins
daa
call
push
rcr
int
and
xchg
test
jno
mov
sbb
sbb
cmps
aaa
out
adc
push
mov
lods
sahf
dec
in
sar
mov
mov
aam
and
jo
out
dec
mov
popa
inc
mov
aam
dec
loop
jle
mov
cmp
(bad)
test
sahf
cmp
mov
mov
pushf
cmps
inc
dec
mov
jbe
mov
xor
sub
mov
adc
(bad)
(bad)
xor
add
mov
add
pop
inc
dec
mov
jbe
mov
xor
jne
sar
int
arpl
push
inc
add
dec
xchg
cmp
fmul
mov
sbb
xchg
jno
out
pusha
push
fs
js
dec
ss
push
inc
pushf
in
test
jg
push
push
fnstcw
dec
sbb
push
into
mov
loop
or
aaa
or
mov
stos
test
jo
jo
mov
mov
cmp
fimul
stos
jb
jmp
dec
sub
and
pop
movs
push
popa
sahf
fimul
cwde
stos
rep
retf
adc
not
aas
(bad)
mov
rcl
push
mov
in
lods
xchg
out
imul
out
inc
and
lahf
fcmove
in
popf
scas
pop
idiv
bound
xor
adc
mov
jecxz
test
adc
scas
(bad)
out
fwait
inc
cmp
jp
jns
cli
mov
enter
jl
fldenv
bound
jmp
sub
neg
outs
adc
jecxz
jbe
inc
fs
sub
js
test
lock
fsub
inc
call
dec
(bad)
fmul
mov
bound
add
mov
push
push
test
fidiv
xor
jo
cmp
or
(bad)
sahf
jbe
xchg
fsub
sti
jno
mov
es
mov
adc
data16
lods
cmp
add
into
mov
out
pop
in
dec
xchg
test
jmp
cmp
xlat
mov
xor
add
and
cmp
jno
in
cmp
jge
xchg
sbb
cmp
hlt
or
push
lods
pop
loop
sub
inc
iret
out
sbb
cs
in
in
sbb
cld
mov
cmp
(bad)
mov
add
cmp
mov
cld
cmp
pop
add
ja
sti
popa
mov
in
int
push
mov
mov
clc
pusha
pop
mov
jo
rol
shl
pop
jmp
aas
xchg
into
pushf
dec
sbb
or
outs
leave
icebp
adc
inc
sub
xor
ja
xor
mov
mov
jnp
rcl
mov
fld
lds
inc
pushf
dec
out
js
loope
leave
movs
sub
dec
stos
jl
cmp
jle
bound
fistp
aaa
adc
into
pushf
dec
sbb
(bad)
adc
cwde
out
out
(bad)
adc
cdq
out
sbb
push
xor
add
retf
leave
jmp
mov
and
call
and
dec
sbb
outs
mov
push
mov
arpl
out
out
das
ss
cmp
mov
jp
sbb
push
xor
jnp
fnsave
outs
dec
fwait
mov
bnd
or
and
xlat
cmp
popf
scas
sbb
cli
push
lods
fsub
push
test
loop
mov
cs
mov
mov
jne
daa
inc
jecxz
gs
mov
je
nop
(bad)
xchg
(bad)
xchg
xor
mov
outs
cmp
(bad)
fnstsw
jne
push
mov
jnp
mov
jg
mov
outs
cmp
add
mov
je
nop
mov
mov
cmp
add
sbb
out
jno
mov
je
xchg
jbe
mov
add
cdq
out
pop
loope
scas
fsub
push
scas
fsub
push
out
jno
mov
je
nop
mov
std
jno
mov
je
nop
mov
std
jno
mov
je
nop
mov
cld
jno
out
jno
mov
je
nop
mov
outs
cmp
add
mov
outs
stos
je
nop
mov
std
jno
mov
mov
outs
cmp
add
mov
add
mov
outs
cmp
add
mov
outs
cmp
add
scas
fsub
pop
test
out
cmps
fsubp
push
scas
fsub
push
scas
(bad)
jb
cmp
xor
ret
adc
mov
loopne
push
ins
jecxz
lods
fsubp
push
sar
sub
mov
out
ret
add
test
enter
je
mov
(bad)
out
pop
inc
add
cmp
push
repnz
adc
and
push
ret
jae
xchg
or
sahf
stc
pusha
jle
outs
fs
jp
dec
(bad)
sbb
call
push
mov
test
push
mov
sti
cli
xchg
dec
icebp
popf
repnz
pop
out
test
repnz
or
xchg
sbb
ja
or
retf
ja
or
repz
scas
jmp
push
xor
addr16
mov
or
lods
cmp
imul
inc
pushf
mov
mov
inc
shl
cmp
mov
mov
sbb
mov
cmp
inc
sahf
fild
mov
sti
jb
sbb
in
mov
aad
outs
add
push
iret
mov
rcr
out
in
jbe
loopne
ret
aam
loope
fisub
mov
sub
inc
in
out
pop
inc
mov
sbb
shr
in
jmp
mov
cdq
enter
ds
xor
clc
jnp
addr16
das
(bad)
sub
popa
int
xchg
(bad)
sbb
sti
int
jae
mov
sti
repnz
enter
xor
push
fild
pop
mul
rol
jb
out
pusha
loopne
movs
dec
int
push
fild
pop
push
pop
sti
jb
sbb
xor
sub
inc
or
jne
out
jne
inc
test
fs
cmps
mov
push
fucom
neg
pop
lea
clc
inc
movs
pop
xlat
test
pop
mov
das
mov
cmp
jae
add
mov
ret
xchg
mov
add
pop
cmp
sahf
aad
fdiv
sub
lods
addr16
adc
cwde
out
out
(bad)
adc
stc
loope
ret
push
cli
mov
dec
dec
pop
jae
loope
ret
push
cli
mov
dec
dec
pop
jae
loope
ret
push
cli
mov
dec
dec
pop
jae
loope
ret
push
cli
mov
dec
dec
pop
repnz
sti
(bad)
sti
add
or
repnz
test
add
mov
or
xchg
pop
mov
inc
jnp
xchg
jae
fprem
test
call
mov
(bad)
fimul
leave
mov
add
retf
mov
and
repnz
sti
(bad)
sti
add
mov
call
in
in
out
test
aaa
(bad)
(bad)
adc
rol
arpl
mov
in
in
out
test
aaa
(bad)
(bad)
adc
fdiv
jl
pop
pushf
adc
int
gs
movs
bound
jg
adc
arpl
pop
bound
sub
scas
fwait
jl
pop
pushf
adc
int
gs
movs
bound
jg
adc
arpl
pop
bound
sub
scas
fwait
jl
pop
(bad)
sub
ret
mov
pop
cmps
clc
add
cld
fs
sub
mov
xchg
in
pop
(bad)
cmp
ins
mov
rcr
inc
in
sbb
jno
cld
fbstp
jae
cmp
lock
sbb
in
(bad)
sub
ret
sbb
mov
cli
loop
stos
(bad)
pop
stos
fsub
push
lods
fsub
push
scas
fsub
push
mov
mov
ror
rcl
mov
and
stos
(bad)
mov
push
fsub
sahf
sub
adc
push
sbb
(bad)
dec
sub
lahf
es
push
and
jnp
sub
xlat
rcl
xor
jno
push
sbb
mov
pop
in
mov
(bad)
loop
mov
mov
or
call
je
pop
xchg
mov
test
lock
sub
ss
adc
addr16
jbe
pop
push
jecxz
sbb
daa
scas
mov
mov
mov
and
jmp
icebp
popa
inc
enter
mov
jno
or
dec
mov
je
nop
mov
jg
and
scas
mov
call
scas
lods
fs
jo
xchg
xchg
es
movs
(bad)
fs
movs
jmp
inc
fbld
mov
pop
and
push
mov
xor
aad
popf
xor
ficom
lea
cmp
cmp
lock
jg
mov
not
lahf
push
repz
icebp
loop
das
sub
shr
cmp
add
add
xor
xchg
mov
popf
xor
jno
xor
shl
popa
jae
fwait
pop
pop
xlat
je
and
iret
lods
jg
sbb
xchg
and
arpl
ja
fdiv
jp
repnz
inc
repnz
inc
repnz
inc
repnz
inc
repnz
lock
idiv
in
push
ret
fdiv
sar
mov
sub
iret
mov
add
ror
inc
pop
and
mov
popa
int
cmp
aad
adc
shr
in
clc
jae
retf
pop
(bad)
cli
scas
(bad)
mul
xchg
inc
or
xchg
mov
cdq
jg
js
(bad)
in
(bad)
pop
or
in
mov
xor
mov
xor
aaa
sti
push
dec
xchg
data16
jns
ret
mov
popf
cwde
mov
in
nop
cs
call
aaa
shr
xchg
fisubr
dec
or
rol
lea
mov
js
jae
mov
in
lock
pop
bswap
ret
clc
mov
mov
mov
mov
mov
(bad)
mov
mov
xor
pop
clc
sub
ret
cdq
pop
daa
mov
ins
es
cld
dec
pop
js
(bad)
loopne
mov
inc
in
cmp
xlat
mov
ds
retf
(bad)
dec
pop
js
(bad)
loopne
mov
xor
inc
movs
frstor
into
push
out
outs
mov
call
loope
cmc
hlt
pop
stos
pop
and
pop
or
movs
(bad)
xor
mov
je
nop
mov
std
jno
xor
jl
hlt
into
jl
hlt
into
jl
hlt
into
jl
hlt
into
jl
hlt
into
jl
hlt
into
jl
hlt
into
jl
hlt
into
scas
cmp
aaa
mov
aam
add
out
adc
or
aaa
mov
aam
add
out
adc
or
aaa
movs
xchg
test
sbb
xchg
test
sbb
xchg
test
sbb
xchg
test
sbb
xchg
test
scas
daa
fsubr
push
test
out
stos
fsub
push
scas
fsub
push
lods
cli
loop
int3
pop
add
or
add
ins
clc
inc
mov
fwait
loope
sbb
repnz
lods
fsub
mov
call
push
out
dec
(bad)
cdq
xlat
outs
mov
mov
push
adc
and
int
stc
fsub
push
push
jmp
cli
call
lock
dec
into
mov
rcr
mov
es
leave
ret
les
sub
and
mov
gs
push
out
fsubr
xlat
shr
clc
lods
(bad)
scas
leave
jne
or
mov
jl
pushf
xor
sub
scas
xchg
loop
cli
push
scas
xor
imul
inc
mov
fidivr
das
daa
add
or
fmulp
pop
ret
rcr
cld
mov
popa
cmp
movs
inc
sar
pop
mov
mov
adc
arpl
mov
shr
mov
jae
or
sahf
sbb
cdq
push
sbb
sub
repz
rol
and
push
js
xchg
fwait
or
sahf
retf
rcl
xchg
sub
jmp
pop
cmp
xlat
mov
sbb
xchg
int3
sub
je
add
int
jnp
pop
jb
adc
mov
mov
hlt
push
pop
daa
pop
xchg
sub
cmc
mov
hlt
sbb
cwde
stos
jmp
repnz
addr16
mov
pop
aad
shr
shl
vpshuflw
call
add
jb
dec
cmp
mov
pop
jmp
sbb
and
cmp
dec
inc
call
mov
sar
cdq
sti
fiadd
xchg
fwait
sub
les
jo
sub
sub
add
mov
in
enter
inc
sbb
loopne
ins
out
and
cmp
das
sub
adc
mov
push
inc
cmp
ficom
jge
and
mov
xor
loope
popf
mov
into
xor
inc
scas
aaa
push
lea
fistp
leave
call
leave
test
mov
lock
mov
push
mov
cdq
pop
inc
dec
test
test
ret
dec
xchg
in
rol
sti
mov
(bad)
cmc
xchg
pop
xchg
cmp
(bad)
ss
(bad)
cs
es
jmp
rcr
inc
jp
iret
outs
adc
ret
mov
sub
and
and
and
push
call
xlat
into
push
sub
cli
xor
lahf
enter
xchg
dec
fsubr
cmp
sub
xor
loopne
push
jbe
dec
pusha
clc
loop
jnp
repz
pushf
dec
sti
ins
inc
stc
fnstenv
scas
call
(bad)
fisubr
inc
cmpxchg
xor
jb
sub
popa
jmp
push
retf
and
push
addr16
out
add
push
sub
push
fidivr
loope
aas
cmovg
and
(bad)
rcr
adc
pop
movs
add
mov
sbb
cmps
and
inc
(bad)
call
inc
push
sub
push
fidivr
loope
cmp
stos
push
cmps
cmc
movd
jo
mov
sbb
sbb
outs
add
aam
sbb
dec
arpl
mov
add
mov
es
cmc
sbb
push
sahf
arpl
fdivrp
dec
push
gs
push
repnz
popa
scas
arpl
out
lods
mov
loop
pop
(bad)
leave
cld
mov
jns
je
lock
and
(bad)
call
xor
or
test
and
sub
jp
push
lods
adc
jle
movs
fnsave
outs
dec
fwait
mov
xchg
mov
lods
mov
cld
div
xchg
sub
push
xor
mov
and
mov
sub
cmp
dec
sub
daa
out
sbb
fimul
jl
out
jp
test
dec
(bad)
xchg
loop
or
cwde
and
pusha
mov
jnp
out
inc
sub
cwde
pushf
inc
test
cmp
push
push
fstp
mov
(bad)
out
sbb
in
fstp
mov
mov
call
inc
push
jg
enter
jnp
xlat
idiv
fwait
pop
sbb
jne
dec
enter
sub
xor
and
mov
jae
xchg
pop
mov
xchg
(bad)
push
cwde
fistp
fstp
dec
test
fsubr
add
jae
add
stc
lock
(bad)
dec
xor
cli
bound
mov
test
stc
push
mov
call
mov
sbb
sbb
jmp
mov
or
jbe
jae
popa
int
aam
or
xor
and
mov
pop
imul
loop
mov
mul
push
sar
je
fist
shl
ins
push
in
jns
outs
and
xchg
sbb
int
adc
and
push
mov
adc
mov
push
jg
push
lods
dec
inc
inc
mov
cdq
mov
pop
xor
in
mov
sbb
mov
jb
fadd
lock
sub
xchg
mov
push
sbb
inc
or
mov
inc
in
push
cmps
inc
mov
or
dec
int
pop
repnz
xchg
popa
ficomp
jg
(bad)
sbb
sbb
mov
fnop
les
ja
sti
jno
cmc
in
enter
dec
mov
fs
test
xchg
loope
in
cmp
dec
(bad)
sbb
ret
(bad)
jns
aam
jg
outs
inc
popa
mov
push
(bad)
nop
loop
pushf
call
loopne
push
xor
push
xchg
dec
lods
and
in
call
stos
adc
in
bound
vmaxpd
aam
pusha
into
sbb
mov
pop
in
mov
add
inc
jecxz
sub
sub
jo
jl
adc
jle
adc
fidiv
xlat
push
cdq
sahf
pop
push
xchg
into
pop
gs
ins
dec
mov
cmp
daa
xor
pop
cmps
xor
pop
mov
xchg
push
fwait
(bad)
aad
adc
pop
inc
add
sub
sub
cmp
movs
fnsave
dec
dec
fwait
mov
clc
gs
or
and
xlat
cmp
sub
and
sub
xor
fidiv
xchg
push
fwait
sahf
pop
push
xchg
into
frstor
int3
dec
inc
or
imul
sub
sub
xor
jg
xchg
aas
call
push
adc
pop
inc
add
sub
sub
mov
adc
and
mov
mov
inc
add
jge
imul
xchg
and
fild
pop
cmp
mov
xchg
mov
std
ins
push
daa
push
scas
pop
and
dec
outs
ret
loopne
lods
fdiv
ds
scas
sbb
fs
test
out
stos
fsub
push
test
jmp
shr
pop
movs
int3
in
pop
mov
shl
mov
clc
clc
dec
mov
hlt
inc
mov
ret
lock
cld
jle
hlt
retf
icebp
enter
jecxz
lods
fsubrp
pop
movs
shr
inc
movs
shl
js
into
clc
js
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
es
mov
loop
lods
in
push
mov
out
lods
ffreep
push
push
push
jecxz
scas
(bad)
push
test
loopne
scas
fsub
push
scas
fsub
push
scas
(bad)
pop
movs
aam
pop
test
sbb
scas
loopne
push
scas
fsub
push
lods
(bad)
push
scas
fsub
push
scas
fsub
push
lods
shl
pop
mov
ins
jecxz
test
loop
mov
ret
fimul
sub
cmp
cmc
mov
adc
in
mov
and
pop
mov
add
ins
add
sahf
or
in
shl
fchs
push
into
mov
mov
fiadd
out
xor
mov
cmp
repz
jecxz
jl
frstor
jecxz
fdiv
and
or
xchg
icebp
leave
or
xor
push
out
mov
rcl
mov
dec
mov
cmp
pop
push
sbb
stos
out
pusha
pop
mov
addr16
or
pop
inc
mov
sbb
mov
dec
cmps
cwde
movs
xor
lahf
pop
jmp
mov
sbb
vmread
loop
scas
xlat
ds
repnz
ins
(bad)
jle
push
cmps
fiadd
aad
shl
ret
cmp
dec
jmp
push
fs
push
pop
test
xor
sub
jae
cmps
lea
loop
scas
popa
pop
call
data16
fwait
repnz
dec
mov
add
mov
push
shl
rcr
ds
loop
js
xchg
rcr
mov
xchg
sbb
xor
mov
pop
pushf
jb
sub
cs
push
in
das
icebp
loope
adc
ds
scas
dec
push
cli
cwde
and
mov
cdq
pop
mov
cmp
jmp
and
xchg
and
popf
mov
in
and
ins
pop
in
dec
add
mov
inc
push
cmps
enter
sub
scas
ftst
or
icebp
cdq
cmp
lods
fmul
push
cmp
pop
loop
sub
test
push
inc
es
clc
inc
cmp
jle
adc
xchg
xchg
add
fisttp
shl
inc
inc
clc
dec
xrelease
out
outs
inc
adc
(bad)
jge
cmc
mov
ja
jl
jecxz
sub
(bad)
ror
loopne
mov
xchg
scas
(bad)
aaa
mov
push
mov
inc
cmp
popf
ins
jnp
adc
xchg
cli
pusha
xchg
cmp
lahf
pop
inc
test
sbb
leave
mov
stc
div
mov
cmp
aas
sti
aaa
xchg
test
fnstenv
rcr
push
clc
jecxz
jmp
shr
fwait
inc
test
test
push
fsub
push
mov
test
jmp
push
scas
mov
and
xchg
fsub
(bad)
punpckhdq
int3
movups
stos
pop
cmps
push
scas
inc
jmp
jmp
dec
xor
fild
jge
xchg
mov
lahf
mov
push
jb
scas
enter
pop
loop
lods
loop
push
scas
std
push
mov
jl
dec
mov
in
(bad)
cmc
arpl
push
cs
lock
frndint
(bad)
nop
fs
in
outs
fsub
push
mov
jae
cmps
jmp
(bad)
cmp
dec
xor
loop
jl
ss
fsub
push
scas
enter
xor
mov
inc
cs
sbb
push
scas
inc
imul
test
cmp
add
sbb
shl
jne
fstp
jns
mov
inc
mov
sti
push
scas
fst
loopne
fdiv
je
fisubr
xor
fsub
inc
scas
fldenv
int3
cwde
loop
scas
fadd
lods
fsub
cmps
enter
fsub
push
scas
fldlg2
scas
daa
fdivr
push
stos
shr
pop
test
loop
scas
fsub
push
movs
fsubrp
pop
scas
(bad)
pop
cmp
xor
cli
les
retf
js
adc
sbb
scas
(bad)
push
es
movs
lods
adc
dec
or
and
lock
fbstp
cmp
mov
xchg
jmp
dec
test
inc
daa
xlat
sub
jo
stos
loope
jmp
ins
out
push
xchg
xchg
loop
movs
pop
ins
cmps
mov
ins
pushf
mov
out
add
shr
popf
movs
stc
or
xchg
xchg
pop
jecxz
push
sub
sub
lea
mov
and
or
sar
imul
out
shr
mov
sub
xor
mov
sti
sbb
jp
mov
sbb
and
retf
push
fdivrp
ins
sbb
pop
jge
outs
cli
xchg
lea
in
pusha
loop
jp
js
popf
lds
dec
lahf
int
jg
sbb
outs
aas
ffree
aas
mov
outs
pushf
xor
add
aas
sar
popa
mov
fcmovu
shr
popf
(bad)
outs
inc
(bad)
aam
jle
imul
pop
nop
and
jbe
std
lods
mov
add
sbb
push
pop
xchg
sub
and
cli
rcr
ret
pop
ins
adc
cmp
test
adc
adc
outs
and
out
icebp
iret
xchg
pop
in
das
fistp
push
jne
or
xor
jle
sub
mov
int3
adc
jp
call
div
cdq
cmp
xchg
loop
jp
adc
bound
repz
js
lock
push
push
bts
xchg
and
pop
fadd
jmp
pop
cwde
mov
popa
sub
jl
in
repnz
test
xlat
mov
data16
mov
add
dec
(bad)
xchg
in
sub
push
mov
out
aad
jnp
or
and
shl
lahf
stc
repnz
imul
test
mov
call
push
jae
loope
ja
int3
outs
pop
out
sub
push
movs
mov
cmp
or
aas
aaa
ror
cmp
(bad)
fidiv
push
jbe
inc
jnp
xor
pop
mov
mov
jl
std
pop
cmp
and
popa
jmp
cmp
stos
ins
in
retf
dec
int3
aas
scas
mov
dec
push
sbb
push
cmps
dec
jae
adc
bnd
xchg
inc
jge
mov
mov
gs
sbb
inc
mov
icebp
dec
int
rol
sbb
mov
shr
xor
cmc
pop
adc
test
jns
(bad)
cmp
frstor
bound
out
in
enter
push
push
mov
mov
enter
int3
das
mov
add
cmp
xor
or
sbb
stos
arpl
mov
sub
pushf
cdq
shl
imul
loop
stos
fsubp
inc
mov
fsub
push
scas
fsub
push
test
jmp
fwait
and
into
pop
inc
hlt
or
inc
cmc
dec
clc
les
mov
shr
inc
js
cmp
repnz
test
loopne
lods
cmp
pop
(bad)
hlt
iret
push
into
push
inc
sub
cld
les
inc
sub
loope
dec
pop
fld
inc
nop
push
outs
xor
inc
fcom
push
fild
movs
mov
or
push
out
outs
mov
dec
imul
jns
lahf
or
adc
lock
push
not
neg
cmps
push
inc
icebp
aas
gs
repz
jle
sbb
fisttp
jg
stos
mov
(bad)
hlt
iret
push
into
push
mov
cld
les
inc
sub
push
add
fld
inc
nop
push
outs
xor
inc
fcom
push
ffreep
sbb
(bad)
or
push
out
outs
mov
dec
imul
jns
lahf
pop
je
xchg
xlat
enter
cmp
mov
lea
int
out
outs
cmps
retf
sub
out
push
ret
jmp
or
call
imul
pop
lds
popf
add
xor
hlt
shl
pop
cs
jge
pop
(bad)
push
aam
xor
repnz
xchg
loope
cwde
push
xchg
loope
imul
mov
mov
das
jbe
push
arpl
cs
sbb
mov
(bad)
pop
mov
dec
mov
cs
popf
pop
shl
sbb
pop
pop
arpl
mov
dec
pop
dec
ror
aaa
outs
shl
sub
xchg
cmp
aaa
adc
cmp
pop
push
mov
push
test
mov
xchg
test
ja
es
rcl
les
mov
inc
push
jae
inc
ficomp
imul
out
push
icebp
sub
repz
enter
fstp
push
mov
adc
sbb
xchg
sahf
push
(bad)
sbb
clc
xor
out
fdiv
lods
jg
adc
inc
add
add
push
in
xchg
(bad)
aad
or
imul
call
jmp
add
loopne
jl
data16
add
hlt
fucompp
(bad)
sub
test
mov
xor
jns
xchg
movs
push
cmc
pop
dec
sbb
adc
dec
dec
push
or
adc
jle
sub
(bad)
sbb
inc
jmp
jecxz
inc
mov
fiadd
je
adc
aad
sub
ret
rcr
stos
lahf
aaa
(bad)
pop
inc
lods
xor
pop
mov
xor
xor
je
fild
jmp
test
call
xlat
inc
fcmove
xor
cmp
imul
lea
sub
outs
cmps
dec
aaa
xchg
hlt
retf
xor
xchg
or
pop
mov
icebp
pop
call
push
jae
jle
pushf
stos
cmp
icebp
js
pop
jmp
cmp
pop
fs
adc
mov
push
xchg
fcom
cwde
push
and
repz
adc
pop
or
not
stc
xor
fwait
cmp
xor
ja
cmp
ins
not
jno
aas
dec
xchg
cmp
cdq
fcom
into
push
mov
iret
pop
xchg
jle
movs
aas
add
aam
cmp
aam
xor
pop
jecxz
push
and
or
(bad)
xor
push
push
cmp
mov
retf
xchg
mov
or
fdivrp
lods
lds
(bad)
jbe
stos
push
push
mov
xchg
imul
pop
adc
push
jns
push
mov
pandn
mov
vcomisd
jmp
hlt
mov
xchg
jle
nop
jns
cmp
bound
(bad)
addr16
in
cmp
xor
imul
adc
dec
shl
(bad)
xor
jae
ss
rcl
sub
ret
cmp
pop
sbb
mov
jg
sub
fwait
add
ret
(bad)
cmp
gs
mov
push
into
out
dec
mov
bound
cmp
out
jne
bnd
fistp
cmp
in
and
inc
cmp
lods
fadd
inc
dec
pop
mov
sub
out
push
and
mov
xor
jmp
fmul
scas
lea
and
push
data16
cdq
test
sbb
add
xlat
or
frstor
jecxz
mov
loopne
stos
shl
pop
test
call
push
scas
(bad)
push
test
mov
pop
retf
js
pushf
xor
pop
add
jmp
sbb
rcl
jecxz
lods
fsub
push
rcr
jp
jae
popa
icebp
add
ds
push
popa
fcmovnu
out
push
in
gs
adc
out
(bad)
push
repz
mov
ss
dec
xor
inc
(bad)
sbb
and
mov
pop
hlt
mov
cmp
ja
repz
push
repz
ins
nop
or
add
push
sbb
inc
fincstp
pop
fimul
and
not
dec
jno
xor
add
inc
outs
hlt
adc
sbb
(bad)
cmp
jbe
scas
js
ret
and
in
push
push
dec
mov
popf
inc
xor
in
bound
in
hlt
dec
scas
xor
aam
into
dec
or
mov
cli
mov
(bad)
cli
cmc
mov
in
or
add
or
bound
(bad)
xor
rol
or
sbb
mov
dec
ds
or
lahf
gs
add
fldcw
mov
jl
xchg
xor
cld
mov
push
je
mov
jae
dec
mov
loop
sahf
xchg
pop
xchg
hlt
jp
pop
iret
pop
xchg
mov
dec
xchg
stos
mov
mov
dec
pushf
xor
xor
shufps
pop
aad
sbb
shr
dec
jbe
adc
mov
mov
pushf
mov
sub
dec
sbb
(bad)
cmp
mov
sahf
aam
and
jmp
inc
mov
leave
dec
xchg
mov
push
push
sub
pop
and
hlt
and
lock
sub
dec
inc
sbb
push
mov
inc
and
clc
jmp
pop
imul
mov
add
push
call
rol
and
lods
outs
cwde
or
hlt
fnstsw
repnz
aaa
xor
and
daa
jbe
test
leave
cs
mov
sar
mov
aam
sbb
jbe
ins
jnp
je
fild
xlat
dec
std
xchg
mov
or
sbb
lods
std
iret
stos
sub
push
popf
ins
addr16
xchg
outs
fisttp
popf
inc
fwait
test
int3
lods
out
sbb
pop
imul
pusha
nop
xchg
sbb
cmp
movs
and
xchg
adc
inc
jo
test
ja
rol
fcom
inc
push
add
adc
jmp
shr
ficom
mov
js
loopne
cmc
dec
sbb
fxch
movs
and
clc
xchg
shl
imul
(bad)
fdivr
cmp
dec
or
cmp
out
pusha
in
pusha
xor
call
ror
push
push
push
pushf
cmp
fmul
daa
jae
popa
ss
or
add
jle
inc
adc
add
repnz
mov
jno
sub
mov
push
pop
scas
and
sbb
mov
adc
push
jecxz
mov
loopne
lods
fsubr
inc
mov
fsub
push
scas
(bad)
push
cmps
fadd
je
dec
adc
pop
add
mov
repnz
(bad)
push
into
aas
out
mov
cs
push
dec
std
popa
xchg
dec
mov
and
scas
enter
aam
push
mov
addr16
xor
jae
or
mov
xchg
(bad)
lahf
les
fwait
or
arpl
fldcw
movs
shr
aaa
and
add
in
mov
cmps
popa
outs
inc
movs
aaa
sub
mov
arpl
jbe
arpl
or
pop
mov
dec
cmp
dec
lods
mov
sbb
jmp
jmp
cmps
neg
mov
sbb
jmp
int3
xchg
jb
jb
xchg
ret
xor
and
cmp
scas
outs
and
call
ror
arpl
cdq
sub
and
add
in
mov
cmp
xchg
push
sub
xchg
int
add
sub
repz
xchg
xor
lock
arpl
loop
xchg
cmp
add
hlt
scas
scas
cdq
sbb
push
mov
rcr
sbb
hlt
sbb
mov
cli
pop
jae
loopne
adc
imul
mov
imul
mov
test
push
or
xchg
sbb
mov
inc
inc
mov
dec
fidivr
sub
add
pop
icebp
jnp
push
hlt
add
ins
push
push
mov
push
xchg
leave
sub
out
jle
rol
inc
jg
inc
mov
and
sub
inc
in
mov
jl
jge
fsub
stos
std
inc
outs
mov
xchg
pop
or
sti
dec
mov
mov
or
mov
push
dec
call
or
pop
pushw
sub
sbb
popf
and
imul
mov
xchg
jne
inc
sub
inc
call
mov
xor
jnp
icebp
push
cli
test
xchg
in
cmp
nop
cld
cmp
mov
and
jnp
cmc
push
cli
test
xchg
std
mov
dec
std
scas
inc
(bad)
mul
add
int3
retf
mov
sbb
xchg
xchg
sub
jge
dec
add
repnz
xor
xor
test
mov
pop
jge
mov
xchg
add
mov
pusha
cwde
mov
aaa
xchg
xor
dec
mov
inc
and
test
pop
fnstsw
cmp
out
imul
push
xchg
clc
mov
ret
xor
pop
sub
inc
fstp
push
pushf
int
aad
mov
xor
dec
adc
fcmovnbe
call
lea
sub
inc
inc
jno
gs
or
mov
call
dec
ret
mov
out
jo
lea
mov
pusha
or
adc
dec
add
cld
inc
movs
test
iret
ror
out
out
add
pop
imul
sbb
adc
push
nop
xchg
cmp
jmp
adc
mov
outs
add
ror
xor
int
xor
sbb
jns
mov
out
mov
dec
dec
inc
pushf
cmps
pop
repnz
mov
aam
cli
jno
or
(bad)
icebp
mov
mov
mov
ffree
in
pop
pop
adc
sti
or
xchg
or
ja
movs
and
or
pop
mov
movs
lods
cmp
imul
or
pushf
push
pusha
cmps
cld
jge
push
(bad)
jne
add
cmp
fneni(8087
inc
mov
ret
jmp
mov
aas
dec
cdq
sub
repnz
cmps
out
adc
stos
mov
fnsave
jge
movs
mov
std
sahf
add
inc
fcmovnb
les
scas
sahf
sub
fisubr
mov
jns
or
fisttp
cmp
mov
stos
popf
ins
xchg
ds
int
sub
xchg
repnz
sti
or
or
push
ffreep
pop
cmp
in
and
stc
lock
push
test
int3
(bad)
(bad)
mov
sbb
dec
fwait
mul
dec
cs
xor
ins
mov
xchg
leave
daa
imul
in
fs
jb
mov
dec
add
inc
fsubr
(bad)
xchg
and
and
sub
bound
or
iret
cmp
aad
cli
aas
mov
out
sbb
pushf
adc
pop
add
push
sbb
mov
retf
and
cmc
pusha
mov
xor
dec
push
sahf
jp
hlt
or
dec
out
(bad)
pop
cwde
ja
outs
not
push
lea
btc
arpl
lods
mov
movs
neg
xlat
add
sar
les
jl
mov
cmps
inc
mov
jmp
jge
jns
or
sub
pop
not
cwde
ficomp
xchg
jl
mov
fcomip
test
ffree
mov
fucomi
and
gs
push
and
mov
add
retf
call
cmp
rol
mov
jle
aam
cmc
add
pop
push
repz
retf
mov
out
mov
push
test
mov
div
int
inc
dec
sbb
and
int
mov
and
cmp
mov
pop
mov
xor
mov
jl
jge
jecxz
dec
xchg
xor
push
cli
sbb
repnz
mov
sahf
mov
xchg
push
add
sub
js
xchg
pop
movs
sbb
ds
fld
xor
mul
sub
push
or
daa
dec
int
mov
in
xor
test
pop
test
imul
push
cmp
(bad)
(bad)
xor
push
jg
call
ins
mov
inc
xlat
int
fsub
ret
in
scas
aad
lods
shr
fsub
push
and
adc
int3
jge
inc
in
in
mov
add
test
inc
cmp
pop
sbb
mov
shl
adc
stos
jne
mov
fwait
mov
jns
xor
xor
cmp
xchg
add
rcr
xor
outs
mov
sub
(bad)
jne
mov
or
js
pop
inc
mov
aad
pop
adc
jns
inc
push
dec
leave
and
stc
fisubr
retf
gs
daa
mov
stos
xchg
lock
mov
iret
jno
xchg
dec
ins
das
fstp
cmp
jns
test
cmps
sbb
or
cmp
pop
or
neg
and
in
movs
iret
jecxz
sub
lock
xor
out
mov
adc
sbb
sub
into
popa
out
jne
cwde
mov
pushf
dec
js
in
scas
jp
fldcw
(bad)
push
stos
aam
push
test
loop
scas
fsub
push
mov
mov
mov
stc
mov
adc
pop
and
sub
and
lods
fsub
cs
jmp
pop
xor
mov
pop
mov
push
aas
into
sub
fwait
cdq
mov
fsubr
stos
jge
int
mov
lock
(bad)
and
call
mov
cmp
push
inc
lods
inc
(bad)
sbb
iret
stc
jmp
ror
mov
das
pushf
push
retf
cmps
in
sbb
fimul
mov
fnstenv
and
bound
add
inc
ret
jb
mov
in
mov
and
add
add
dec
push
push
xor
push
daa
daa
or
push
sbb
xchg
push
fisttp
ins
sub
dec
mov
xor
rcl
loop
adc
mov
out
add
jnp
push
or
dec
pop
retf
cdq
jae
xor
or
addr16
outs
or
cmc
and
movs
fisttp
scas
sbb
test
and
shl
pop
mov
adc
dec
fidivr
mov
pop
fldcw
sub
jg
pop
inc
pusha
es
add
and
test
mov
retf
adc
data16
je
xchg
sahf
nop
pop
xchg
mov
inc
xor
ja
xor
sbb
inc
xchg
cmp
jb
sub
sbb
push
xor
or
push
ja
or
adc
loop
cmc
adc
or
sbb
inc
test
adc
mov
loopne
xor
pop
jns
or
push
cmp
or
idiv
mov
sbb
shl
jmp
bound
repnz
das
shr
push
outs
inc
adc
pop
test
sub
lock
out
or
cmc
js
shr
pushf
xor
add
sub
push
nop
mov
pop
jb
in
ror
mov
outs
ret
push
push
xchg
mov
jno
pop
das
aam
hlt
pop
int
outs
mov
in
dec
inc
loope
inc
cdq
adc
scas
adc
gs
ret
lods
mov
shr
out
movs
sti
call
lods
(bad)
jns
fadd
cmp
jb
out
mov
aad
cli
fisttp
into
test
pushf
and
dec
jle
popf
(bad)
fist
enter
pusha
cmp
rcl
push
cmp
jne
out
fsubr
out
and
adc
jbe
gs
mov
scas
mov
scas
sbb
leave
sbb
xor
fcomp
mov
ret
lods
ja
ins
jle
(bad)
jne
inc
js
(bad)
enter
outs
push
ja
sahf
fadd
sbb
cmp
mov
adc
sub
outs
mov
shr
mov
fadd
cmp
fs
lods
test
sbb
cmc
dec
jno
fld
(bad)
clc
mov
je
inc
test
inc
cs
mov
pop
xchg
mov
jecxz
mov
shr
popa
int
and
jecxz
ret
jg
aad
into
push
push
fnstenv
fs
or
fld
aas
popf
mov
pop
push
idiv
(bad)
(bad)
push
data16
push
or
ja
inc
movs
out
cwde
stc
push
into
bound
fadd
inc
adc
mov
pop
popf
jae
jae
mov
mov
mov
inc
popf
test
sbb
fwait
pop
lds
scas
(bad)
lock
shl
push
or
dec
rcl
pop
ror
es
sub
shl
into
cwde
mov
mov
add
cmp
aaa
test
pop
pop
mov
jmp
imul
mov
int
add
inc
cmp
inc
adc
imul
cmps
into
bound
sar
and
scas
xchg
fbstp
std
mov
std
push
pop
aad
repnz
adc
cwde
cmp
dec
cmp
enter
jle
lods
xlat
pop
shl
pop
neg
xchg
and
add
cmp
les
(bad)
(bad)
jmp
out
and
or
ins
and
jno
or
jle
mov
sbb
sbb
or
xchg
ror
mov
push
loop
inc
idiv
jbe
adc
int
aam
sub
inc
pop
jno
mul
jecxz
fisttp
push
inc
mov
mov
sbb
movs
pop
xor
and
or
adc
loopne
push
and
mov
xchg
fwait
daa
sub
test
loop
scas
fsubp
push
scas
stc
inc
jle
add
mov
inc
sbb
sahf
xchg
(bad)
jmp
ror
scas
scas
daa
jecxz
aam
cmp
add
je
cli
lds
push
mov
cdq
inc
outs
cmp
mov
mov
scas
inc
xchg
int3
and
mov
inc
mov
scas
scas
hlt
sbb
cmc
or
fdivr
push
and
mov
push
push
fsubr
scas
dec
call
pop
pushf
sub
daa
jecxz
ret
pop
stc
push
mov
repz
cmp
fld
mov
or
mov
daa
jecxz
shl
mov
push
scas
push
outs
sbb
mov
mov
push
fnstenv
lods
bound
mov
sbb
or
imul
push
fnstenv
mov
inc
inc
mov
sbb
mov
stos
shl
mov
daa
jecxz
daa
fdiv
test
out
push
lods
(bad)
push
scas
fsub
push
lods
cli
loop
int3
pop
inc
jo
cmp
push
lea
and
lods
fsubp
push
sar
push
call
fld
cmc
js
adc
cwde
and
xor
jno
outs
push
xor
add
xchg
idiv
inc
dec
test
cmp
dec
xchg
ret
pop
pop
in
xchg
call
mov
sahf
jnp
retf
adc
je
arpl
mov
fucomip
xchg
rcr
pop
lods
mov
das
addr16
pop
xchg
xchg
dec
xchg
fstp
in
aad
cmp
js
mov
(bad)
and
mov
jns
ret
daa
jecxz
call
adc
test
rol
movs
enter
sti
ja
jle
dec
mov
jle
pop
outs
out
cld
add
(bad)
(bad)
mov
mov
(bad)
add
arpl
pop
fst
mov
lea
xchg
scas
xchg
or
cmp
out
dec
jae
cmp
fiadd
xor
enter
or
call
jmp
pushf
cmp
cdq
out
mov
mov
mov
xor
cmp
cmps
repnz
aas
and
jns
xchg
or
fimul
mov
rcr
jp
lods
cmp
jg
xor
(bad)
fisttp
cmps
arpl
dec
mov
mov
pop
cmp
(bad)
cmp
shr
pushf
sbb
xor
test
xor
scas
out
ficom
add
jae
add
jns
xchg
cs
fbstp
movs
test
sub
pusha
inc
jno
mov
xchg
xor
mov
js
sub
adc
lea
xchg
cwde
out
out
inc
popf
ja
and
cmp
xchg
pop
and
jae
addr16
icebp
shl
ja
lock
outs
dec
push
retf
imul
push
(bad)
push
loope
mov
aas
call
sahf
or
sti
repnz
xchg
push
sub
test
inc
out
or
lock
sbb
mov
mov
cmp
xchg
shr
lahf
mov
mov
addr16
jecxz
mov
lahf
shl
fs
stc
jl
jmp
stc
(bad)
mov
cmp
cmp
iret
(bad)
out
sbb
mov
cmc
jns
and
and
aas
mov
adc
enter
jge
cli
xor
jne
call
sub
add
loope
arpl
std
or
cmp
push
mov
mov
push
push
jne
mov
mov
addr16
stos
sbb
dec
rcr
pushf
test
jmp
aad
neg
fsubr
lahf
mov
add
pop
inc
sub
xlat
ins
lods
repz
or
in
fisubr
cld
or
imul
in
ins
data16
dec
dec
retf
jno
je
inc
or
pop
(bad)
dec
xor
adc
sub
xchg
ret
push
lods
lods
mov
push
(bad)
mov
xchg
sub
mov
pop
xchg
mov
inc
repz
call
sub
push
ins
pop
add
push
add
mul
scas
xor
arpl
inc
shl
pop
jb
loope
outs
adc
push
push
push
jecxz
mov
loopne
test
jmp
fsub
push
scas
(bad)
jb
mov
loopne
in
pop
xor
sbb
nop
dec
es
push
mov
cmps
ret
mov
mov
adc
xchg
mov
imul
sub
or
inc
jl
(bad)
jnp
nop
inc
sbb
or
mov
out
adc
(bad)
pushf
fcmovnu
rcr
push
mov
cld
movs
loopne
dec
imul
adc
xchg
mov
imul
sub
or
inc
jl
shl
jge
loop
sbb
sbb
mov
mov
add
sahf
sbb
mov
cmp
in
adc
mov
les
fwait
neg
xchg
pop
test
push
inc
call
inc
stos
shl
cwde
sub
jmp
jmp
(bad)
js
xor
lock
xor
fs
out
stos
pop
stos
fld
adc
sbb
jbe
stos
cmp
push
jo
pop
sub
dec
jb
inc
jmp
mov
push
iret
add
addr16
fsubr
leave
xchg
push
pop
loop
stos
pusha
mov
jb
push
adc
inc
cmps
sar
mov
clc
(bad)
sub
cmp
push
mov
ret
cmp
aas
cmps
sbb
mov
add
pop
in
jb
sbb
jge
inc
or
xor
aad
idiv
fisubr
dec
je
ja
stos
mov
sahf
cwde
or
add
jmp
sbb
push
and
xor
pop
cli
lds
push
int3
(bad)
call
mov
(bad)
cs
push
pop
test
xchg
lods
pop
mov
stos
push
xor
sahf
sahf
mov
or
je
mov
cs
in
push
mov
dec
pop
dec
in
rcr
aas
inc
inc
mov
call
out
imul
test
or
inc
jl
(bad)
mov
adc
shr
add
gs
test
jo
out
pop
xchg
loopne
mov
xchg
fwait
push
iret
ja
ins
fldcw
mov
xor
rcl
je
push
mov
or
js
xor
xor
into
aad
icebp
inc
outs
pop
mov
outs
out
mov
sbb
jno
imul
push
pop
xor
pop
in
ja
dec
fbld
fadd
push
loope
ins
inc
inc
and
mov
outs
xchg
sti
test
mov
test
dec
test
dec
out
mov
adc
test
int3
xor
mov
les
fcomp
sahf
jmp
out
mov
test
pushf
stos
xchg
or
inc
lods
aas
fld
push
sbb
dec
aaa
lds
addr16
es
adc
(bad)
mov
stos
pop
mov
mov
popa
sti
mov
test
or
inc
lahf
xchg
pushf
and
sbb
pusha
mov
dec
mov
es
sbb
mov
sub
inc
sub
mov
add
shr
mov
push
jp
imul
not
jmp
add
imul
rcr
xor
xchg
add
not
test
mov
scas
rcl
inc
ret
mov
shl
cmp
or
jae
mov
shl
mov
(bad)
xor
cmp
xchg
mov
push
dec
cmps
sbb
scas
sahf
ret
fsubp
push
stos
fsubp
push
test
loop
scas
fsub
push
scas
cli
mov
mov
cmp
adc
sti
popa
scas
sbb
repnz
lods
fsub
cs
(bad)
in
sbb
pusha
push
imul
dec
popa
xchg
loopne
xchg
lods
cs
sbb
into
popa
hlt
sahf
out
xchg
rol
test
into
scas
out
mov
jecxz
sbb
popf
lods
or
bound
xor
adc
in
lea
jg
mov
int
sub
pop
inc
and
ret
sub
imul
shl
(bad)
sahf
jo
and
xor
sbb
pop
xlat
mov
popa
aaa
stc
hlt
add
pop
cmps
outs
jl
add
or
aam
add
fwait
xor
fxch
dec
dec
popa
xchg
loopne
mov
pop
dec
pop
ret
inc
stc
mov
fidivr
xor
jno
jge
inc
enter
inc
loop
movs
xchg
out
out
lock
dec
sbb
les
jb
cli
mov
scas
add
fidivr
mov
adc
mov
xchg
leave
and
mov
or
cmp
popa
cli
mov
fs
js
dec
das
xchg
pop
mov
jge
gs
jecxz
mov
sbb
sti
xchg
xchg
in
sub
rcl
movs
pop
adc
jbe
cmps
retf
ja
cmc
push
test
sbb
xor
push
aas
(bad)
icebp
sti
xor
inc
jmp
push
out
stos
(bad)
test
std
div
cwde
mov
mov
in
movs
sbb
push
and
movs
xor
push
push
xchg
leave
jb
jmp
jg
and
mov
dec
outs
gs
hlt
sbb
sub
aas
clc
scas
jl
xor
lahf
or
repnz
and
inc
sbb
arpl
imul
loopne
sub
dec
adc
lods
jae
ja
add
xchg
imul
or
mov
std
dec
push
xchg
pop
not
pop
push
fnstenv
in
inc
addr16
pop
jecxz
test
jecxz
pusha
inc
push
retf
sbb
inc
xchg
pop
not
jns
fnstenv
in
inc
outs
or
pop
fmul
shl
xchg
test
mov
mov
loopne
add
or
dec
mov
lods
jl
sub
sbb
push
lahf
push
or
js
in
cmp
arpl
popa
or
sub
and
push
mov
lahf
into
pop
clc
retf
cmp
and
test
mov
idiv
out
mov
adc
jb
pop
cli
(bad)
adc
call
inc
out
call
mov
lods
std
sub
lock
(bad)
scas
xor
(bad)
xchg
in
cmc
push
aam
jns
jb
cmp
in
mov
cmc
aas
add
sbb
mov
popf
xor
ins
xchg
cmps
les
in
std
or
ins
int
icebp
dec
dec
retf
push
xchg
dec
xchg
test
lock
pop
xchg
jne
mov
add
cmp
sbb
sub
mov
lods
xchg
dec
adc
push
dec
push
xlat
dec
xor
jp
push
dec
fistp
dec
test
cmps
mov
loopne
dec
and
mov
push
adc
sub
sbb
repnz
sbb
xor
cmp
dec
je
mov
aas
sbb
outs
mov
fdivr
sahf
cmp
mov
call
push
out
xor
stc
push
push
fldenv
bound
jg
fs
inc
je
(bad)
sub
pop
mov
out
int3
mov
inc
cmp
sub
loop
call
adc
aam
mov
jne
cmps
or
rcr
cmp
xchg
gs
cmps
sbb
popf
push
inc
sub
das
int
cmps
or
add
in
test
xchg
pop
or
int3
lods
inc
push
jnp
xchg
xor
test
ins
sbb
xchg
adc
mov
test
ja
fild
push
cmp
mov
fcmove
into
xchg
xchg
mov
inc
adc
loop
aam
or
or
inc
js
xchg
je
cmp
ins
xor
lock
sub
fmul
out
push
aam
mov
inc
jb
dec
fbld
xor
mov
pop
bnd
mov
sbb
push
mov
or
loopne
arpl
dec
cmp
mov
out
mov
(bad)
jb
pop
iret
fsubr
dec
mov
rol
cdq
aad
fdiv
test
mov
imul
dec
and
inc
daa
mov
outs
fnstenv
cmp
cmc
mov
jo
jge
cmp
adc
pop
rcl
stos
retf
inc
mov
hlt
pop
outs
popa
es
stc
pop
sbb
mov
mov
ins
add
mov
xlat
lahf
push
or
shl
xor
cld
or
fptan
std
aad
mov
jge
pop
fild
xchg
mov
mov
cmp
scas
sub
dec
dec
mov
fs
xchg
jmp
xor
scas
jns
ja
rcl
push
enter
ficom
cmc
add
mov
test
fcmovnbe
xchg
repnz
push
adc
fsubr
push
xchg
dec
xor
arpl
cmp
push
mov
push
shr
int
sti
xchg
sub
outs
xor
mov
jnp
ror
adc
xor
sbb
sbb
ss
sbb
jmp
inc
pop
push
test
nop
mov
ins
sbb
dec
mov
adc
add
in
cmp
popa
jmp
stos
pushf
mov
cmp
cli
ins
pop
adc
cs
or
rcr
int
and
dec
retf
add
xor
mov
sahf
push
adc
int3
mov
jle
enter
mov
xchg
loope
mov
push
test
jne
jge
fdiv
cmp
jmp
push
push
fs
ds
mov
xor
lahf
mov
inc
fild
cmc
jl
xchg
gs
adc
hlt
lods
hlt
add
and
sar
jne
lea
and
fiadd
(bad)
std
mov
bound
into
dec
jae
mov
les
add
jmp
jnp
sub
repz
sbb
mov
lock
add
xor
jle
dec
sbb
lods
xchg
fs
xchg
adc
jmp
and
sti
xchg
sahf
push
or
sbb
xchg
sahf
push
or
mov
rcr
(bad)
test
and
or
daa
sbb
push
push
jbe
cmp
loop
lods
(bad)
shr
jecxz
scas
fsubp
push
test
out
test
in
test
jmp
shl
pop
mov
sar
mov
cld
ret
cli
inc
clc
into
jo
dec
jp
repnz
dec
sub
js
cld
retf
es
push
sub
in
cmps
shr
pop
mov
ret
xchg
retf
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
scas
sti
repnz
mov
ficom
cli
loop
mov
in
lods
imul
loopne
stos
fsubp
push
lods
fsub
push
scas
fsub
push
scas
fsub
pop
mov
(bad)
scas
daa
fcomp
push
lods
fsub
push
test
loopne
scas
fsub
push
scas
fsub
push
scas
shr
pop
lods
fsubrp
push
mov
fsubp
push
stos
clc
in
scas
fchs
loopne
sub
es
fwait
and
aaa
aas
ds
shl
aaa
pusha
js
scas
scas
pop
cmp
out
push
mov
pop
pop
rcl
std
cmp
add
popa
je
ins
repz
shr
add
inc
xchg
adc
adc
ds
or
in
stos
test
fs
mov
mov
cmp
jo
jp
daa
add
mov
push
scas
fsub
push
pushf
and
jl
xor
xor
add
outs
push
mov
outs
sbb
mov
pop
ja
mov
dec
xchg
prefetch
cdq
popf
shl
pusha
stos
xchg
xlat
adc
aam
gs
fist
fisttp
dec
dec
inc
jecxz
scas
add
inc
mov
std
fcomp
outs
sub
jecxz
mov
mov
std
or
push
inc
imul
jmp
imul
sub
fsub
push
scas
(bad)
xor
sub
loopne
add
adc
pop
sub
mov
test
sub
mov
or
xor
pop
push
es
dec
aas
dec
fwait
ja
in
loop
mov
push
scas
fldcw
movs
scas
fbld
xlat
xor
add
add
jb
dec
jae
pop
fisttp
push
adc
push
mov
ins
cmps
inc
jle
test
lods
sbb
sar
into
icebp
and
inc
ss
rol
je
push
push
fldcw
inc
mov
mov
mov
push
lea
loope
or
gs
push
fistp
mov
ds
cmc
pop
outs
std
stos
shl
cmps
inc
icebp
jb
sahf
in
in
jl
lock
stos
xor
clc
inc
aaa
retf
loop
jmp
push
shl
xchg
out
pop
cli
or
repz
mul
(bad)
sbb
gs
adc
mov
lods
sbb
mov
inc
aad
mov
or
xchg
outs
sub
ds
adc
retf
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
enter
jns
jecxz
scas
fsub
push
scas
fsub
push
scas
fistp
dec
mov
test
and
dec
jecxz
scas
fsub
push
scas
fsub
push
scas
mov
jmp
add
mov
scas
fsub
push
scas
fsub
push
loopne
jo
inc
adc
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
(bad)
push
push
push
jecxz
mov
loopne
lods
fsubp
pop
cmps
fsubp
push
scas
fsub
push
scas
shl
push
cmps
aam
push
mov
dec
xor
mov
cmp
js
outs
cmp
scas
(bad)
push
dec
push
push
lods
test
jmp
sub
rcl
pushf
mov
das
mov
aas
aaa
sbb
xchg
in
xor
jmp
cli
pop
push
mov
retf
mov
sub
test
cmc
popa
loop
xchg
jle
xchg
ret
adc
mov
lds
sbb
push
fmul
div
and
jecxz
sub
mov
xchg
test
and
call
daa
hlt
shl
pushf
out
arpl
xor
outs
stos
aaa
ja
add
xor
sahf
add
mov
mov
stc
cli
inc
dec
xor
pop
repnz
xchg
mov
inc
in
and
in
mov
mov
xlat
or
jnp
xlat
aaa
fsub
(bad)
xchg
repz
jmp
cld
and
mov
xchg
ret
jbe
ins
pop
aaa
push
add
rcl
(bad)
mov
mov
je
test
fld
mov
out
leave
mov
dec
loopne
dec
in
das
loope
fisttp
mov
enter
sub
adc
leave
pop
mov
(bad)
jmp
xchg
dec
dec
fnstcw
and
in
pop
lods
cld
fiadd
and
iret
daa
dec
(bad)
mov
inc
jmp
adc
loop
and
aaa
div
and
cld
pushf
xor
bound
shr
cdq
inc
in
sbb
mov
cmp
pop
and
mov
mov
popf
lahf
ret
jns
js
arpl
jo
cmp
mov
repnz
inc
int
or
lods
(bad)
lods
int3
adc
mov
out
jecxz
mov
cmp
sbb
push
ficomp
cmc
mov
pop
xor
xchg
(bad)
(bad)
fisubr
xor
dec
mov
fisubr
fs
lock
inc
xor
sub
pop
clc
loop
xchg
sub
inc
xor
cs
fadd
add
xor
lea
dec
ds
mov
dec
adc
lods
and
pop
fcomp
adc
push
loope
fcomp
mov
mov
(bad)
fldpi
mov
fldcw
xchg
and
mov
inc
jl
out
xchg
or
mov
mov
repz
call
pop
enter
sti
mov
add
popf
sbb
pop
idiv
std
das
sti
dec
mov
scas
daa
fcomp
stos
int3
out
inc
movs
shl
push
scas
fsub
push
lods
fsub
pop
scas
rol
adc
pushf
xor
cmp
ja
pop
and
dec
clc
xor
loopne
ins
lock
ror
jle
aam
cmp
xor
ins
jecxz
lods
fsubp
push
rcr
xchg
add
xchg
xor
xchg
pop
clc
and
pusha
icebp
int
clc
cmp
xchg
fcomp
enter
jnp
pop
adc
shl
jmp
fwait
inc
scas
fild
les
mov
ins
jo
cmp
(bad)
fsubr
adc
mov
dec
mov
rcl
sub
mov
outs
lods
push
mov
sbb
jnp
mov
pusha
lock
sbb
popa
xchg
aam
pop
mov
sub
cmps
scas
push
push
packssdw
lea
fsub
rcr
adc
hlt
int
jnp
cld
mov
mov
mov
or
xchg
pop
jne
xlat
loop
outs
adc
inc
mov
aam
jo
callw
xlat
mov
add
outs
mov
ds
inc
jmp
call
in
int
sub
mov
push
sub
jmp
add
dec
(bad)
add
mov
push
mul
sar
movs
aas
mov
jae
xor
inc
pop
mov
mov
aad
daa
stos
test
xchg
lahf
add
imul
popa
cmp
int
mov
jg
sbb
cwde
cmp
add
sbb
xchg
dec
movs
iret
fdiv
test
inc
outs
(bad)
icebp
mul
test
mov
add
(bad)
mov
(bad)
xor
pushf
mov
shl
fisub
xchg
loop
cmp
iret
push
in
(bad)
sub
enter
repz
dec
aam
or
push
or
jo
adc
sub
icebp
sub
test
daa
out
push
out
sbb
call
enter
jns
mov
imul
adc
or
sub
call
add
cmp
loop
xor
bound
sbb
sub
jmp
push
fadd
pop
call
int3
mov
pop
pop
xchg
sbb
pop
xchg
sub
push
and
call
fsub
and
lods
out
adc
mov
iret
jb
mov
or
push
cli
add
push
mov
push
in
and
adc
dec
mov
push
pusha
cmps
scas
adc
mov
xchg
sti
nop
retf
icebp
mov
je
jno
jo
aas
stos
sbb
sar
adc
sbb
jmp
pusha
and
ss
mov
xor
mov
imul
xor
fistp
mov
or
shr
push
movs
inc
(bad)
retf
push
pop
aas
push
add
retf
retf
add
sub
int3
jle
ja
rcr
xor
push
mov
jmp
inc
(bad)
jbe
mov
scas
push
pop
xor
sub
(bad)
das
sbb
inc
mov
mov
push
stc
mov
sbb
push
cmp
sar
xchg
adc
ror
cwde
pop
push
push
out
or
(bad)
jecxz
mov
repz
out
add
div
mov
mov
add
fwait
cs
sbb
dec
pop
call
dec
pop
adc
jg
sahf
nop
leave
rcr
and
fnstenv
inc
xchg
xchg
push
push
sti
sahf
and
xlat
dec
out
add
mov
fimul
adc
jge
pop
mov
fs
outs
push
sar
cli
sbb
lahf
inc
sbb
mov
push
dec
test
jo
in
data16
or
fwait
mov
leave
push
pushf
mov
out
aam
imul
rol
pop
cdq
push
inc
mov
std
popa
outs
jle
es
lahf
xchg
mov
(bad)
test
mov
dec
adc
add
mov
push
adc
arpl
xor
xor
icebp
fxam
arpl
pop
jle
imul
sbb
cmp
into
popf
sub
(bad)
lahf
xor
fbld
fistp
loopne
pop
fsubr
fidiv
imul
jle
stos
push
(bad)
test
std
scas
daa
fadd
cmps
shl
pop
test
loop
scas
fsub
push
test
loopne
cmps
call
retf
adc
clc
movs
xor
pop
data16
js
cmp
push
push
push
ins
jecxz
lods
fsub
push
rcr
and
test
inc
jb
leave
aam
mov
pop
hlt
ja
cmps
in
xor
jnp
stc
popa
cmp
movs
icebp
pop
retf
fs
dec
fisub
fisubr
jb
sbb
aaa
pop
mov
mov
mov
mov
dec
jns
fwait
or
test
ret
bound
mov
pop
les
int
les
fidiv
inc
mov
push
and
mov
pop
pop
lods
mov
jecxz
outs
mov
mov
cmp
add
pop
movs
sbb
mov
iret
xchg
(bad)
adc
movs
icebp
pop
retf
gs
mov
(bad)
(bad)
aas
outs
jbe
lods
dec
ret
mov
push
imul
pop
(bad)
cmc
and
adc
cmc
cmps
sub
mov
cmps
sub
mov
cmp
mov
mov
cli
cmp
lea
mov
mov
mov
inc
jle
sar
xchg
mov
repz
outs
int
pop
push
inc
dec
xchg
ins
xchg
jne
das
ret
jns
inc
pushf
sbb
bound
sbb
cmp
sti
lds
ror
sub
pop
or
mov
jge
xchg
jno
mov
int
pusha
inc
ret
mov
pop
sub
cli
xchg
test
aas
popa
sbb
leave
cmp
fisub
adc
test
mov
mov
test
outs
inc
movs
mov
push
stc
mov
fidiv
xchg
add
imul
repz
loope
stc
fiadd
xchg
add
rcl
std
jnp
int3
adc
es
hlt
jae
push
push
cs
dec
shl
push
enter
mov
popf
mov
pop
mov
imul
push
sahf
mov
in
inc
push
or
ss
sbb
pop
(bad)
pushw
adc
ins
adc
xchg
test
xchg
daa
ret
test
loope
stc
ficomp
cmp
xor
mov
sar
pop
mov
outs
(bad)
sub
outs
div
icebp
dec
mov
into
xchg
out
sub
fcmovu
sbb
aaa
dec
mov
movq
add
stos
xchg
mov
into
hlt
fisttp
in
and
enter
sub
jno
cld
xor
inc
(bad)
pop
(bad)
cld
mov
(bad)
xor
inc
fld
scas
retf
inc
and
jnp
(bad)
jp
or
push
mov
fwait
xor
dec
fwait
add
push
dec
mov
(bad)
(bad)
cmp
add
mov
jmp
xor
xchg
mov
lods
not
daa
pusha
cmps
cmovg
jecxz
mov
loopne
stos
fdivp
pop
mov
fsub
push
scas
(bad)
push
scas
rol
adc
(bad)
jbe
pushf
xor
mov
mov
jl
xor
pop
and
xor
in
push
or
ror
and
enter
aam
push
mov
mov
or
or
into
pusha
xlat
jle
mov
pop
int
and
jno
jge
loopne
xchg
dec
pop
call
adc
retf
popa
frstor
mov
mov
adc
and
xchg
sub
push
sub
pop
int3
mov
add
(bad)
out
jle
scas
icebp
push
pop
mov
in
mov
lahf
stc
je
mov
loop
je
sub
imul
dec
gs
fsub
add
push
inc
bound
div
dec
jae
jle
mov
out
loope
call
jnp
xor
add
in
or
adc
push
jg
sub
inc
mov
jb
loopne
retf
dec
dec
ret
mov
xlat
push
shl
mov
(bad)
inc
js
in
jle
test
enter
enter
add
movs
daa
jb
mov
jmp
dec
and
jmp
xor
xor
inc
gs
cmp
or
ins
sub
sub
dec
sbb
push
fisttp
jne
inc
into
ret
mov
and
and
push
mov
scas
sbb
inc
and
add
push
xlat
cld
cmp
rcr
ret
push
jge
daa
dec
jp
(bad)
jo
ja
jns
jg
movs
and
sbb
and
cmp
sar
inc
inc
mov
sbb
js
test
jmp
sbb
pop
rol
movs
test
cwde
icebp
or
xor
call
xor
inc
aaa
int3
icebp
pop
mov
sbb
movs
cld
or
jnp
repnz
xor
ss
lahf
dec
pusha
adc
jb
jmp
pop
not
in
fadd
inc
mov
lea
repz
cmps
xchg
cmp
outs
push
int
mov
mov
mov
jae
adc
sub
bnd
cmp
and
je
(bad)
xor
popa
ja
fcomp
fwait
jmp
cmp
repz
inc
hlt
hlt
and
mov
xchg
test
imul
cmc
xor
cmp
jno
mov
add
jg
jne
or
test
mov
cmc
fwait
mov
push
rcr
mov
adc
call
loope
movs
ja
ja
fbstp
push
jmp
lahf
leave
pop
pop
sbb
sbb
sub
es
and
(bad)
jns
sbb
xchg
call
xchg
xor
adc
jns
pop
inc
jecxz
cdq
das
les
cld
in
std
mov
fmul
stos
adc
sbb
xchg
test
and
(bad)
mov
jmp
inc
or
sub
push
std
pop
mov
sbb
and
or
jp
jmp
pop
lods
add
ret
and
test
sub
cmp
mov
inc
push
pop
shl
in
(bad)
das
aas
push
imul
cwde
cmp
cmp
cmp
jno
imul
loope
rcl
in
cmp
push
mov
dec
inc
pop
lods
xchg
xchg
in
je
repnz
or
push
mov
jno
adc
pusha
xchg
or
clc
test
inc
dec
sbb
pop
aad
stos
add
adc
adc
lock
xchg
xchg
sbb
mov
inc
push
les
push
cmp
xor
(bad)
shl
movs
adc
dec
jmp
mov
jbe
jb
inc
shl
cmps
mov
cmp
jae
loope
lods
add
mov
inc
call
loopne
or
mov
jecxz
sbb
sub
test
mov
jae
cmp
adc
and
mov
sub
inc
xchg
ins
inc
mov
and
idiv
into
hlt
sub
scas
in
xor
(bad)
xchg
popf
repz
sub
and
fcomp
push
adc
cmp
sbb
aad
pop
(bad)
push
scas
dec
call
std
loopne
mov
inc
rcr
fwait
and
ret
push
add
xor
push
adc
out
mov
fidiv
test
sbb
or
ficom
mov
jne
(bad)
dec
mov
int3
pop
fiadd
cmp
not
imul
(bad)
out
cmps
adc
mov
jecxz
popa
add
ins
pop
outs
jmp
movs
scas
icebp
imul
loopne
adc
mov
lahf
xchg
or
xor
mov
or
aad
mov
mov
sbb
mov
mov
jg
mov
aam
inc
push
inc
frstor
out
xor
pusha
cmp
cmps
mov
xor
shl
sbb
sub
sbb
adc
cmc
test
push
or
mov
call
sahf
and
iret
xchg
imul
out
and
mov
mov
imul
daa
sbb
jp
mov
call
and
xchg
push
ss
mov
or
inc
push
les
jmp
push
in
mov
mov
xchg
mov
cdq
outs
inc
jmp
test
test
xchg
mov
aad
sub
lods
adc
aas
sub
enter
stos
mov
cli
sbb
mov
and
std
dec
scas
gs
fs
fisubr
xchg
ds
mov
je
test
cmp
int3
dec
nop
mov
dec
(bad)
fadd
fwait
sub
pop
js
mov
icebp
sbb
cmps
popf
xlat
shl
pop
adc
xchg
cmps
xor
sti
dec
adc
pop
mov
adc
addr16
aad
push
fld
daa
fdiv
stos
aam
push
test
loopne
scas
fsub
push
lods
cli
mov
repnz
cdq
loopne
in
jnp
jno
mov
and
lods
(bad)
push
rcr
push
inc
mov
popf
xchg
outs
sbb
mov
mov
adc
sahf
mov
aam
xor
movs
xchg
mov
jl
or
or
ins
cld
into
movs
push
cs
ret
xchg
outs
test
xchg
jg
dec
xor
or
mov
test
sbb
inc
shl
xchg
mov
xor
popf
xchg
outs
sbb
mov
lds
mov
mov
out
lahf
cli
mov
out
mov
and
pop
xor
lahf
fiadd
call
stos
(bad)
test
adc
push
sbb
cli
jle
xchg
jnp
sbb
cmc
cmp
movs
push
or
stos
mov
cmc
inc
mov
push
pop
popf
je
fdiv
cmp
sbb
mov
imul
mov
lahf
and
sub
pop
ret
push
cdq
movs
xchg
and
xchg
stc
mov
pop
mov
jb
(bad)
push
cmp
sbb
sub
jecxz
jae
inc
sbb
add
cs
jp
je
test
xor
mov
and
out
(bad)
jno
dec
sub
or
pop
or
adc
jecxz
pop
or
sub
bound
dec
or
jns
add
scas
scas
lods
or
jns
add
sbb
jmp
push
jo
sar
enter
cmps
hlt
enter
aam
or
movs
adc
fsubr
jns
push
push
push
or
pop
mov
(bad)
mov
cmp
lea
sbb
jg
mul
dec
push
lock
fsubr
jns
cmps
add
nop
(bad)
pop
shr
jge
fnstcw
shr
clc
jmp
clc
dec
(bad)
mov
mov
pop
and
inc
push
nop
(bad)
hlt
retf
push
mov
jae
xchg
sub
movs
ret
mov
gs
stos
jecxz
pushf
dec
sub
adc
xchg
popf
cmp
and
std
mov
pop
mov
jg
cmp
dec
or
add
xchg
push
mov
adc
push
repz
retf
inc
mov
jb
pop
neg
push
lods
push
mov
test
mov
nop
test
push
push
sbb
shl
jns
mov
pop
mov
pop
jle
fdivr
test
mov
and
sbb
std
jo
stos
cs
outs
inc
(bad)
mov
sbb
jnp
call
pushf
xchg
retf
cmp
dec
repnz
rcl
inc
cld
lahf
cli
mov
cli
inc
pop
call
pop
mov
sbb
or
(bad)
shl
and
jecxz
(bad)
leave
out
jbe
and
jg
clc
out
and
mov
je
sub
dec
(bad)
pop
mov
add
sub
neg
hlt
cmc
es
sub
fcmovbe
clc
mov
push
aam
dec
stos
shl
std
inc
mov
push
sub
out
pop
outs
call
sbb
cmps
stc
adc
pop
fcmovne
or
mov
jae
ret
push
fsub
fadd
xor
sbb
call
jno
lock
mov
cli
ja
fstp
repz
popf
rcl
and
jb
xor
mov
jno
mov
int
(bad)
fisubr
ret
mov
punpckldq
das
add
not
push
dec
pop
jae
lahf
push
adc
ror
frstor
lock
cwde
or
mov
bound
adc
clc
mov
sub
sar
cdq
sar
out
arpl
ret
addr16
mov
mov
push
fxch
cmps
scas
ds
scas
shl
scas
fsub
push
scas
(bad)
jo
fdivr
mov
ret
out
daa
adc
xor
mov
cld
jno
(bad)
int3
or
stos
adc
ret
out
jno
cwde
add
ret
out
pop
pop
mov
mov
outs
cmp
std
jno
dec
dec
stos
data16
xchg
mov
je
out
ret
jb
mov
stos
jbe
nop
into
jnp
push
and
dec
popf
xchg
cmp
cld
jle
mov
bound
nop
mov
std
jno
mov
je
nop
mov
std
jno
mov
je
nop
mov
std
jno
mov
je
nop
mov
std
jno
mov
je
nop
mov
std
jno
mov
je
nop
mov
std
jno
mov
push
cmp
std
jno
mov
aam
nop
mov
std
jno
mov
jbe
nop
mov
std
jno
mov
je
nop
mov
std
jno
mov
je
nop
mov
std
jno
daa
fdiv
movs
fsubr
pop
lods
(bad)
push
scas
fsub
push
lods
cli
loop
int3
pop
inc
xchg
dec
(bad)
mov
mov
and
lods
fsubp
push
sar
bound
jae
mov
fsubp
xchg
cmp
jnp
ret
test
ss
shl
xchg
sub
(bad)
test
fsubr
mov
ds
pop
fnstsw
sub
(bad)
mov
sub
retf
jl
add
bound
sbb
outs
and
fidivr
xchg
push
dec
add
xor
scas
sbb
inc
aaa
mov
or
mov
jo
mov
adc
add
mov
jnp
xchg
sub
add
out
pop
pusha
aam
mov
or
ds
mov
cwde
sub
cmove
pusha
or
lods
fbstp
mov
dec
retf
out
xchg
xchg
jbe
movs
jno
mov
mov
add
or
and
jbe
pop
or
dec
mov
adc
dec
push
stos
shr
cmp
ins
and
sub
xchg
sbb
xor
mov
aam
push
les
add
fcmovnbe
pop
ficom
mov
pop
ja
sbb
push
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
rcl
jl
inc
stos
sbb
mov
mov
and
or
inc
jnp
and
lea
out
inc
sbb
imul
pushf
xchg
dec
inc
enter
retf
jg
cmc
sbb
adc
jge
push
sbb
mov
icebp
sbb
xor
mov
adc
mov
jne
mov
dec
pop
sub
int
sbb
hlt
pop
xchg
neg
push
ins
rcl
mov
sar
aaa
add
push
mov
xor
cmp
repz
jno
xor
sub
test
xor
call
xchg
mov
dec
mov
inc
arpl
xor
push
pushf
xchg
in
out
jae
(bad)
sbb
inc
mov
dec
into
fimul
cmp
jg
xchg
push
scas
mov
xchg
movs
mov
mov
adc
fcomp
mov
sbb
cmp
sub
rcr
lods
pop
stos
mov
push
sti
out
pop
mov
int
ss
in
xchg
call
cmps
jg
(bad)
fisubr
lea
inc
shl
xchg
xor
jmp
mov
fwait
mov
pusha
inc
or
xchg
xor
ror
mov
xor
outs
retf
(bad)
xor
xchg
xchg
scas
jmp
xchg
xlat
and
sub
sbb
sbb
dec
ret
xchg
and
fidivr
lea
ds
pop
jle
cmp
mov
push
les
rcl
mov
cld
fstp
push
push
popf
int
fs
jns
(bad)
sti
add
das
adc
cli
pop
pusha
fiadd
movs
xor
adc
leave
jp
sub
jp
mov
jns
cwde
and
scas
fidiv
aad
adc
sub
mov
(bad)
inc
clc
outs
xor
stc
inc
adc
mov
xor
add
push
and
sub
sub
out
push
inc
arpl
pusha
jbe
(bad)
jnp
adc
in
je
add
push
fisubr
jne
mov
std
scas
mov
mov
fiadd
scas
data16
scas
add
lods
fsub
pop
cmps
fsub
push
test
loop
scas
fsub
push
scas
cli
mov
mov
call
iret
sbb
ror
sbb
mov
ins
jecxz
lods
fsub
push
sar
jmp
mov
adc
xor
xor
cmp
or
cmp
mov
pop
mov
out
scas
jp
mov
mov
pushf
rol
or
ret
imul
and
ins
in
xchg
or
lock
test
popa
jmp
add
push
or
xchg
call
cmp
or
cmp
icebp
adc
pop
push
cdq
push
nop
scas
add
aam
loope
sub
nop
mov
bound
push
scas
stos
fisttp
fcom
or
add
call
enter
cmp
jnp
and
push
xchg
(bad)
sbb
out
xchg
loop
adc
sbb
mov
in
stos
xchg
(bad)
adc
push
mov
pushf
loop
xor
pop
cmp
pop
scas
pushf
pop
dec
push
dec
inc
int
mov
pop
mov
or
pop
loopne
stc
repnz
push
fist
ss
push
xlat
out
lock
fld
(bad)
cld
or
and
out
jle
adc
scas
rcl
lods
xor
or
mov
(bad)
in
icebp
push
cmp
(bad)
stos
enter
cmp
push
stos
repnz
or
mul
nop
jle
out
sbb
inc
mov
pop
sub
or
pop
(bad)
lods
inc
mov
iret
outs
sbb
sahf
xor
adc
jmp
out
in
lds
xor
or
xlat
movs
jo
int
bound
pusha
sbb
sahf
mov
rol
test
inc
jle
xor
iret
test
or
mov
es
test
ins
inc
data16
enter
pushf
ret
cs
dec
and
and
ret
mov
jb
repnz
jmp
imul
(bad)
xor
into
mov
add
mov
push
dec
jl
xor
push
cwde
fst
mov
lock
test
in
cmps
std
enter
sub
out
icebp
jb
call
int3
ds
in
inc
aas
inc
aaa
add
mov
bound
scas
push
(bad)
push
or
stos
sbb
enter
(bad)
adc
out
xchg
into
sahf
xchg
mov
stc
sbb
adc
(bad)
xor
hlt
bswap
xchg
ins
mov
call
fs
mov
cmps
push
in
jmp
aam
popf
mov
dec
lahf
add
mov
xchg
imul
add
popa
dec
lods
ins
imul
mov
xchg
or
add
and
aas
ss
pop
add
stc
mov
dec
push
in
jg
sti
je
into
stc
rcl
mov
fsubr
sbb
ja
sar
cmp
sub
mov
mov
outs
shl
mov
movs
scas
daa
fsubr
push
stos
(bad)
pop
test
loopne
scas
fsub
push
lods
cli
loop
int3
pop
inc
adc
xor
lock
add
lods
fsub
cs
(bad)
sub
or
pop
movs
dec
cmp
fcom
loope
xchg
mov
xchg
nop
mov
mov
sub
(bad)
movs
xchg
and
push
jbe
mov
fmulp
lods
rcl
mov
xor
cld
cmps
les
sub
sub
and
and
daa
mov
das
fs
and
rcr
dec
jl
jbe
stos
or
lods
lahf
rcr
iret
mov
push
push
xor
in
mov
mov
lods
lahf
test
(bad)
xor
cwde
aam
jnp
cmps
call
sbb
ret
jl
(bad)
adc
sub
test
lahf
into
xor
pusha
rol
out
add
int3
push
xor
ins
adc
pop
mov
sub
fwait
in
and
sbb
mov
xor
or
call
pop
mov
pop
push
jmp
(bad)
pop
pop
xchg
add
ins
cmp
inc
or
out
xor
in
add
cmp
fsub
outs
mov
scas
push
jno
jmp
int
mov
shl
and
movs
cdq
sbb
fstp
mul
inc
call
fs
mov
push
hlt
imul
in
aam
or
dec
out
mov
(bad)
sar
in
sbb
cdq
fcomp
xchg
add
je
lods
dec
push
add
dec
cmp
add
and
adc
mov
sbb
mov
xchg
cmps
cdq
pop
lahf
mov
or
pop
jb
data16
sahf
movs
mov
inc
div
jmp
jmp
lods
add
xchg
mov
push
lods
mov
push
call
push
(bad)
jl
mov
xchg
mov
inc
lock
movs
sbb
pop
je
xor
inc
sub
(bad)
scas
scas
sbb
xor
push
pop
and
(bad)
jge
jmp
mov
ins
sti
jmp
add
lahf
or
aas
sbb
and
outs
cld
jo
mov
push
stos
pusha
inc
out
arpl
leave
cwde
pop
adc
test
mov
mov
hlt
cld
js
mov
js
mov
enter
mov
in
lea
or
repz
mov
push
mov
jb
dec
in
push
test
inc
and
push
push
xchg
jbe
frstor
fwait
mov
out
mov
loopne
push
retf
call
cmps
sub
or
pop
loope
fsubr
fidiv
js
dec
aaa
ja
lods
pop
test
xchg
aad
retf
jbe
jle
out
mov
mov
mov
xchg
sub
xor
clc
fstp
clc
adc
sub
mov
lods
adc
xlat
out
cld
in
mov
dec
push
jmp
out
bnd
test
mov
cmp
add
xchg
push
pusha
push
pop
pushf
loopne
dec
and
es
dec
test
outs
add
sahf
xchg
repnz
xor
pusha
push
xchg
ins
pop
scas
sbb
loop
mov
gs
dec
call
xor
inc
in
lods
cdq
leave
push
mov
scas
mov
jl
add
adc
arpl
sub
pop
(bad)
and
push
inc
xchg
push
cmps
call
xchg
mul
mov
scas
jns
mov
jo
fwait
das
lock
pop
adc
mov
pop
pop
mov
xor
mov
and
xchg
sub
ds
fistp
loopne
jno
iret
bound
or
push
bound
(bad)
push
inc
in
repz
xchg
shr
add
push
call
adc
enter
sub
sbb
jg
mov
(bad)
mov
mov
mov
test
les
in
js
mov
ins
bound
popa
inc
cwde
fsub
sub
pop
in
call
xchg
das
adc
sbb
scas
out
add
daa
add
cmp
adc
aad
lock
dec
cmp
mov
xchg
into
shl
cmp
into
in
ss
fsub
xor
or
outs
cld
inc
dec
sub
test
ret
lods
cld
jno
mov
mov
xchg
ret
fadd
test
adc
xchg
jb
aam
fistp
fist
sbb
jo
push
jo
scas
(bad)
push
scas
dec
loop
scas
fcomp
scas
pop
loop
stos
fsub
push
stos
fsubp
push
test
in
cmps
shl
pop
movs
shr
pop
mov
shl
mov
test
(bad)
je
ret
mov
hlt
jo
clc
shl
enter
int3
pusha
xor
je
repz
fsub
shr
pop
cmps
shl
pop
movs
retf
mov
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
retf
pop
jecxz
mov
fsubp
jb
fadd
push
test
loopne
daa
fcomp
push
lods
fsub
push
test
loop
scas
fsub
push
scas
fsub
push
scas
shr
pop
mov
imul
loopne
lods
shl
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
stos
shr
pop
mov
fdivr
push
lods
fsub
jo
clc
loop
lods
fwait
xchg
ins
fucomi
jecxz
scas
fsub
push
scas
fsub
push
scas
dec
mov
pop
pusha
jecxz
lods
xchg
loop
scas
fsubr
push
scas
fsub
pop
xor
scas
cmp
lock
test
movs
(bad)
dec
pop
jns
aas
(bad)
imul
jo
(bad)
pop
repnz
ss
outs
mov
xchg
sbb
push
dec
jo
sbb
or
push
out
loope
in
sbb
xor
call
fdiv
pop
scas
(bad)
stos
mov
fdiv
cs
sbb
adc
inc
sub
popa
mov
and
data16
scas
adc
ja
add
fdiv
scas
(bad)
pop
fsub
mov
out
push
rcr
les
fldcw
mov
lahf
mov
stos
adc
arpl
add
or
pop
or
ror
outs
fsub
je
scas
aad
test
int3
pop
ds
int
out
fchs
adc
cmp
dec
imul
push
movs
pop
add
xchg
cmp
stc
ret
loop
stos
sbb
push
es
ret
push
scas
fldcw
inc
cwde
jecxz
cmps
cwde
rcl
retf
push
cmp
movs
and
jecxz
scas
fcmovnb
and
sbb
inc
push
sbb
fsub
add
fsub
jbe
cmp
aad
xchg
movs
enter
je
cs
push
push
mov
scas
scas
dec
sbb
shl
push
mov
ror
push
scas
xchg
jmp
add
loope
pusha
test
push
ja
mov
int3
fnsave
jl
cmp
js
fsub
jb
lds
and
mov
repz
jne
and
xchg
jmp
mov
or
push
sahf
test
imul
(bad)
aad
out
add
fmul
ja
fldz
into
sti
adc
mov
jp
sub
add
scas
fldl2e
out
adc
adc
scas
fcmovb
jb
fsubr
jl
pop
leave
ja
sbb
bound
test
push
cmp
xlat
aad
pop
sub
sub
scas
fsub
jo
fsub
pop
jo
or
retf
nop
sub
loope
mov
inc
shr
inc
(bad)
cwde
sahf
mov
xor
add
cld
jnp
mov
push
scas
shl
push
scas
fldz
stos
xor
fs
adc
call
push
push
inc
sub
mov
scas
pushf
fwait
add
outs
fsub
push
mov
loop
scas
shl
and
jae
rol
jecxz
mov
je
into
adc
ret
fchs
adc
xchg
sbb
fsub
push
scas
fsubr
push
scas
fsub
push
scas
fsub
push
scas
(bad)
jbe
lds
push
scas
fsub
push
scas
fsub
push
scas
push
imul
stos
fsub
push
test
out
scas
fsub
push
scas
fsubr
pop
stos
fsubp
pop
scas
pop
xor
jb
call
sbb
repnz
lods
fsub
pop
stos
daa
jecxz
mov
mov
mov
ds
movs
fmul
sbb
push
mov
sbb
and
cld
sub
adc
retf
mov
lods
jl
jae
sti
icebp
js
cli
inc
cmp
xchg
and
in
adc
pop
xchg
push
stc
mov
ret
in
pop
int
jle
arpl
out
add
popf
adc
ja
cmps
cli
sub
xchg
in
scas
out
fld
shl
cwde
fidivr
aad
lahf
push
je
sbb
sub
lods
push
jmp
or
in
or
ret
pop
cmp
adc
mov
test
cs
ret
div
btc
rol
setne
lock
inc
mov
lods
fucomi
sub
popf
dec
mov
xor
mov
fisttp
sbb
aad
not
scas
inc
shr
arpl
mov
xchg
cmps
and
fisubr
cmp
mov
outs
call
arpl
cmp
mov
mov
(bad)
fstp
dec
mov
cmps
dec
jb
ins
sbb
out
js
xor
jae
jmp
es
push
pop
fisub
and
mov
cmp
in
aaa
popf
sti
or
cmp
adc
pop
lahf
inc
or
adc
mov
push
xchg
dec
out
dec
xor
xchg
pop
cwde
adc
scas
add
push
pusha
inc
or
xchg
jne
or
push
push
inc
xchg
add
repnz
cmc
movs
imul
movs
jbe
sar
add
push
xor
mov
ins
add
pop
adc
loope
or
mov
xchg
push
push
push
jecxz
mov
loopne
stos
shl
push
test
call
push
scas
(bad)
push
cmps
fadd
pop
mov
xor
pushf
pusha
jo
pop
mov
jb
pop
loopne
sub
(bad)
push
lods
cmps
loopne
(bad)
and
je
and
call
loope
dec
adc
cmp
jno
add
pop
jp
sbb
pop
movs
push
aas
xchg
cmp
test
mov
aam
test
fs
jo
jmp
(bad)
push
aad
stos
iret
je
pushw
ret
int3
push
add
lahf
loopne
mov
cmp
pop
mov
push
inc
mov
mov
in
inc
movs
(bad)
or
xchg
xchg
and
or
iret
cmp
and
xchg
dec
pusha
jns
aam
(bad)
inc
jnp
dec
push
mov
cmc
imul
(bad)
push
fcomp
fist
outs
dec
int
cwde
pop
xlat
gs
test
stos
stos
rol
repnz
and
or
dec
loopne
mov
cmps
xchg
cmp
cmp
lds
call
dec
test
push
adc
push
push
pop
add
adc
xchg
imul
push
xchg
mov
mov
out
int3
xchg
cld
fdivrp
dec
ror
sbb
mov
sti
loop
add
dec
repnz
push
daa
int3
loop
and
mov
mov
mov
popa
cmps
loope
sbb
cmp
push
stos
fmul
xor
cmp
dec
imul
xor
dec
popf
leave
jp
iret
mov
or
pop
or
addr16
push
and
dec
xchg
(bad)
inc
push
lea
stos
or
push
mov
adc
cmps
ds
xchg
jno
es
jle
ret
dec
icebp
test
stc
dec
int3
push
les
lock
into
fwait
pop
and
inc
retf
jp
mov
add
fs
sbb
xor
inc
retf
jg
mov
ret
jecxz
pop
mov
dec
push
pop
mul
repnz
ret
cmp
sbb
sub
pop
jo
xchg
mov
push
dec
inc
xor
push
mov
sub
or
idiv
xchg
iret
loope
xchg
fdiv
dec
in
iret
xor
push
scas
mov
clc
pop
mov
ret
pop
xchg
dec
xchg
dec
inc
rcl
add
mov
(bad)
mov
leave
and
aaa
push
xchg
mov
xchg
sub
ret
push
jp
jns
movs
jo
arpl
out
jb
pop
dec
jnp
push
fs
pop
outs
mov
inc
mov
adc
aaa
into
push
pop
jge
lods
adc
pop
inc
mov
push
adc
cdq
sbb
mov
mov
dec
jns
push
mov
not
rol
or
(bad)
cmp
add
std
lock
scas
pop
rcl
in
stos
(bad)
call
push
scas
fsub
push
stos
fsubrp
pop
mov
out
je
pop
inc
xor
adc
sbb
adc
jl
mov
cwde
movs
xor
jns
mov
sbb
jnp
xchg
out
push
ins
jecxz
lods
fsub
push
rcr
sbb
loope
enter
fisubr
cmp
retf
retf
jge
je
ffreep
in
or
jo
mov
ret
mov
in
mov
jns
popf
xchg
(bad)
fist
pushf
out
ds
dec
xchg
test
mov
retf
inc
jmp
loop
mov
add
xor
sbb
add
inc
stos
inc
les
add
pop
adc
or
mov
or
mov
pop
icebp
out
fs
ins
(bad)
push
and
in
jne
bound
sub
jb
test
pop
inc
(bad)
dec
cmp
mov
or
jecxz
jmp
add
xor
inc
test
jo
push
nop
push
mov
and
jo
adc
mov
add
dec
add
loop
push
xchg
add
int
mov
jb
in
pop
jl
mov
ja
pop
repz
xor
cmps
jne
mov
xchg
sub
xor
dec
add
dec
dec
mov
stos
push
dec
adc
mov
push
mov
sub
sbb
sub
xchg
sub
mov
fisub
pop
jb
inc
fdivr
or
jne
fwait
push
and
cmp
(bad)
xchg
and
not
dec
xchg
xor
add
aaa
or
inc
cmp
sbb
or
fmul
(bad)
out
retf
stos
dec
sar
fmul
shr
aaa
mov
add
push
pop
test
dec
imul
out
je
sar
popa
and
outs
adc
xchg
stc
mov
xchg
dec
js
daa
cmp
push
xchg
mov
mov
xchg
xchg
(bad)
xor
cmps
push
(bad)
push
cld
popf
and
aaa
sbb
and
repz
stos
js
movs
mov
shl
pop
cmps
sbb
(bad)
xchg
lock
pop
sub
add
les
sti
scas
call
push
cmc
test
jb
fnstcw
cmp
mov
clc
pop
pop
xchg
mov
push
pop
cli
mov
icebp
fistp
int3
fstp
cld
ret
pop
outs
inc
stos
clc
test
sub
xchg
jge
xchg
push
stos
repz
bound
push
(bad)
mul
addr16
test
jecxz
mov
sar
mov
movs
dec
and
sti
(bad)
bound
stc
add
pop
and
(bad)
jge
push
mov
mov
or
enter
jle
sar
in
repz
or
mov
lahf
xchg
jmp
xchg
push
(bad)
pop
mov
adc
mov
pop
movs
adc
int3
shr
adc
sbb
mov
xchg
xchg
(bad)
mov
ds
fbstp
push
dec
push
xor
call
inc
int3
mov
nop
ins
push
ror
sti
outs
adc
fcomp
and
das
fs
aad
in
retf
lock
push
xor
aaa
sbb
push
cmps
out
sub
cwde
jae
rcl
mov
or
dec
xchg
call
add
push
inc
or
dec
inc
call
jnp
jo
and
mov
fnstenv
lds
fdivr
dec
movs
sbb
adc
(bad)
cwde
dec
push
inc
mov
mov
or
push
shr
xor
shr
popf
sub
ret
dec
add
cmp
xchg
arpl
jle
sbb
in
les
neg
push
pop
sbb
test
add
leave
lds
test
(bad)
nop
sbb
mov
inc
jb
inc
(bad)
mov
test
ret
and
mov
or
cmp
jmp
cwde
(bad)
jg
shl
leave
push
push
jl
(bad)
dec
sbb
sahf
jmp
mov
outs
call
ret
rol
cld
mov
mov
mov
push
push
pop
mov
retf
xor
xchg
pusha
or
jge
sub
es
jno
mov
clc
fldcw
xchg
pop
out
daa
mov
mov
add
mov
jp
int3
and
or
mov
in
out
gs
sbb
in
mov
int3
sbb
repz
mov
ins
xchg
les
ins
push
ret
jecxz
add
push
ltr
jp
gs
adc
xchg
sbb
test
and
jb
push
cs
mov
inc
cmp
push
repnz
or
inc
or
push
test
or
push
or
jo
sbb
test
or
into
lahf
rcl
int3
or
sub
mov
mov
sub
jl
nop
mov
xchg
mov
(bad)
jno
pushf
inc
sbb
fwait
mov
pop
sbb
dec
hlt
add
add
xchg
(bad)
clc
call
cmp
iret
or
xor
or
add
pop
cmp
addr16
lahf
dec
idiv
ins
mov
pop
arpl
xor
mov
sub
test
fidiv
in
mul
jae
inc
pop
fld
je
movs
(bad)
in
leave
movs
les
fld
fnsave
dec
xlat
inc
das
push
neg
out
cmps
stos
les
inc
sub
ret
push
jg
sar
das
aam
fldenv
popa
(bad)
test
mov
cmps
hlt
mov
(bad)
fmul
cmps
mov
bound
call
scas
adc
mov
(bad)
js
pop
inc
loope
inc
pop
jmp
(bad)
jno
pop
cmp
push
cmp
fs
xchg
aas
inc
push
cmp
add
shl
jnp
push
mov
retf
icebp
in
push
add
push
stos
(bad)
push
cmps
(bad)
call
push
scas
fsub
push
stos
fsubrp
jb
cld
mov
pop
mov
cmps
shr
cmp
adc
xchg
fs
or
mov
sbb
push
scas
aad
push
push
fdivr
movs
pop
cmp
je
sti
mov
or
xchg
xor
pusha
ret
jg
xor
cmps
clc
fidiv
ror
and
add
pusha
mov
xchg
in
call
inc
int3
push
sbb
adc
not
cmp
or
ins
push
and
outs
pop
xchg
aam
lods
stos
int3
aad
cmp
lahf
cmp
call
mov
xor
and
test
pop
out
inc
and
xor
mov
jno
ins
test
add
aaa
xchg
mov
(bad)
pop
not
mov
push
movs
icebp
leave
test
jnp
cmp
cmp
adc
ss
mov
dec
push
xchg
mov
pop
mov
sub
call
nop
mov
adc
jp
aas
lds
sbb
xor
jmp
jl
sub
out
ret
cmp
(bad)
dec
ins
movs
arpl
bnd
mov
call
ds
xchg
shl
test
cmp
push
pushf
inc
adc
sahf
or
mov
xchg
lahf
mov
ja
sbb
xchg
jnp
jae
retf
loopne
out
push
popf
jnp
mov
fdiv
jecxz
(bad)
pop
mov
int
mov
push
shl
add
push
call
mov
sbb
movs
mov
push
sub
push
sub
movs
dec
and
movs
jecxz
xor
cmp
mov
inc
sti
or
or
dec
or
cmp
ins
dec
aaa
add
fstp
xchg
enter
xchg
int
xor
pop
sub
pop
gs
mov
retf
mov
repnz
les
fdivr
mov
and
or
es
ret
fdiv
fcomip
dec
jno
sti
sub
out
imul
mov
add
(bad)
sub
pminub
inc
out
movs
mov
or
js
pushf
ficomp
inc
inc
mov
stos
test
in
cmp
les
pop
loope
imul
push
jmp
js
aas
icebp
pop
scas
add
mov
or
ss
mov
jne
int3
cld
push
xor
add
call
cli
push
add
bound
or
and
mov
outs
add
sbb
xchg
add
aaa
add
nop
es
mov
cmp
inc
pop
(bad)
out
aaa
ds
test
or
lods
dec
ror
sbb
ds
sar
aas
fcomp
mov
push
in
test
mov
sub
mov
and
mov
scas
push
inc
pop
test
sub
loope
add
shl
shl
(bad)
jnp
(bad)
lock
retf
jge
fbld
jecxz
ror
inc
ficomp
jecxz
xchg
jge
mov
and
ret
pop
mov
xor
imul
test
repnz
mov
xor
push
fldcw
repz
inc
stc
ins
mov
out
add
add
pop
(bad)
cmc
(bad)
sub
inc
rol
clc
jecxz
push
fbld
mov
cmp
jb
fsubr
dec
and
mov
pop
xchg
retf
in
stos
lahf
ins
inc
push
push
std
aaa
add
push
call
icebp
sbb
push
(bad)
es
std
cmp
iret
jnp
nop
(bad)
std
xchg
test
mov
inc
call
mul
stos
test
cmp
adc
push
scas
push
sub
add
push
adc
pop
mov
fisubr
dec
push
or
arpl
int3
aaa
pusha
and
adc
mov
mov
sub
push
push
scas
dec
rcl
dec
shl
imul
loopne
lods
fsubp
push
movs
fsub
push
lods
fsub
push
scas
fsub
jb
call
lods
stc
xor
mov
xchg
push
ins
jecxz
lods
(bad)
push
rcr
xchg
fdivr
mov
adc
mov
je
xor
inc
mov
daa
mov
push
fsub
out
pop
push
fld
pop
test
mov
xchg
out
mov
mov
push
xchg
sub
add
das
mov
adc
lds
xor
mov
jmp
push
jno
cli
dec
int
(bad)
mov
clc
(bad)
pop
stc
ja
dec
cmp
imul
inc
mov
sbb
movs
rol
jecxz
retf
sub
das
add
and
imul
mov
push
(bad)
push
sar
pusha
xchg
(bad)
dec
xor
or
xor
out
sbb
pop
sbb
add
pop
jo
inc
xchg
icebp
mov
dec
je
mov
dec
sahf
jno
push
xchg
adc
cmovge
test
add
or
inc
xchg
add
sub
cwde
sub
mov
cmc
cwde
inc
mov
adc
or
inc
ins
adc
mov
and
fisttp
ret
dec
out
inc
arpl
sar
dec
das
adc
jo
adc
imul
call
pop
out
ret
call
dec
es
or
push
fnstenv
push
jp
sub
arpl
shl
nop
(bad)
push
xchg
gs
lds
pop
pop
in
addr16
clc
into
inc
es
xchg
mov
adc
popf
xchg
pushf
cli
retf
mov
fsubp
int3
mov
rcr
and
push
movs
mov
sbb
sahf
ja
or
fld
xchg
jmp
std
aas
jnp
fcmovne
fwait
sbb
mul
sahf
imul
mov
xchg
rcr
jnp
cmp
data16
sti
jge
mov
mov
dec
in
jno
and
popa
jne
(bad)
xlat
dec
pop
fisub
jne
push
cmp
mov
jae
push
pop
mov
sbb
xor
ins
jae
aad
loop
fcom
mov
mov
ins
call
adc
jno
ins
adc
scas
(bad)
icebp
pop
xchg
mov
or
dec
das
stos
nop
xchg
in
ret
pop
ret
and
pop
fcmovbe
jae
xlat
sub
inc
mov
loopne
xchg
push
pop
xor
adc
movs
out
and
or
cwde
dec
cmps
cwde
into
dec
xlat
movs
push
fist
call
test
dec
sbb
dec
cmp
push
pop
pop
push
push
xor
inc
ret
pop
dec
xchg
jge
mov
movs
sbb
in
adc
push
sar
ret
cmps
cmps
inc
adc
inc
mov
cmps
and
and
fwait
les
jb
pop
sar
mov
dec
stc
pop
jno
stc
pop
jno
stc
pop
jno
stc
pop
jno
stc
pop
jno
stc
pop
jno
stc
or
sbb
scas
shl
scas
fsub
push
scas
(bad)
jo
outs
cmp
add
add
mov
jne
push
add
mov
jne
push
add
les
mov
add
into
fdiv
add
mov
mov
add
mov
mov
push
add
mov
mov
outs
cmp
sbb
mov
lea
aas
and
add
add
add
add
add
aas
sbb
mov
stos
mov
add
aas
xor
add
add
cmp
sbb
mov
dec
mov
add
cmp
sbb
mov
dec
mov
pop
or
sub
inc
xchg
je
push
add
cmps
or
push
add
sahf
ja
mov
add
pop
out
mov
add
mov
jne
push
sub
mov
push
scas
stc
loop
push
push
jecxz
mov
loop
lods
shl
pop
cmps
fsubp
push
scas
fsub
push
scas
(bad)
jb
mov
and
int
arpl
dec
sbb
scas
sbb
repnz
test
loopne
mov
push
shl
or
pop
inc
aam
scas
fisttp
mov
jmp
mov
ins
or
xchg
mov
and
mov
xlat
inc
pop
sbb
shr
add
es
cdq
dec
mov
xchg
xchg
add
push
leave
out
ret
mov
shl
xor
adc
xchg
jne
lahf
rcl
ficom
hlt
jp
ret
test
stos
in
sub
sub
pop
adc
call
mov
in
push
jecxz
inc
mov
fild
loop
retf
fnstenv
cmp
sbb
popf
push
sub
movs
test
js
jp
test
jg
sahf
pop
and
sub
stos
adc
adc
push
dec
ds
out
push
and
inc
aaa
add
xchg
mov
call
sar
cwde
mov
jp
adc
xor
sbb
xor
sahf
xlat
or
jne
bound
outs
pushf
cmp
dec
mov
jno
pop
popa
lods
add
xor
dec
mov
out
sub
xchg
movs
das
std
cmc
out
xor
mov
repnz
fwait
ror
test
jno
xor
fldcw
mov
pop
stos
push
daa
pop
cmc
ret
push
xchg
dec
fst
pop
(bad)
fbld
dec
xor
(bad)
adc
push
pop
das
jl
(bad)
adc
outs
pop
ret
sbb
jmp
push
cmps
add
sbb
or
pusha
in
in
jns
ret
push
xchg
and
repnz
call
or
aas
and
in
add
ins
mov
cmp
mov
loop
repnz
mov
adc
mov
scas
sahf
jno
mov
or
xchg
mov
mov
mov
sbb
jae
neg
scas
and
imul
xchg
or
in
push
mov
pop
adc
pop
das
stc
jbe
jae
pop
cmps
adc
mov
mov
shl
adc
mov
jecxz
repnz
pop
scas
jbe
(bad)
pusha
rcr
jmp
neg
dec
push
and
popa
lea
es
rol
mov
sbb
sub
push
aam
pop
(bad)
xchg
pop
shr
repnz
loopne
fidiv
mov
cmp
retf
mov
call
repnz
scas
scas
xchg
cmp
pop
sahf
inc
fucomip
outs
pminsw
cdq
and
xchg
xchg
daa
jl
retf
movs
iret
ret
inc
out
fstp
dec
xor
jle
dec
inc
jmp
xor
adc
adc
adc
push
or
std
lock
jp
js
xchg
mov
inc
add
push
cmps
repz
lock
mov
sub
xor
(bad)
lods
(bad)
push
stos
(bad)
pop
stos
fsubp
push
scas
fsub
push
lods
cli
loop
int3
pop
inc
xor
push
lea
add
lods
fsub
push
sar
pushf
fisubr
fwait
aas
push
shl
cwde
xor
loop
pop
and
nop
imul
(bad)
and
jmp
test
adc
(bad)
pop
fst
leave
jmp
sbb
sahf
inc
std
pop
ja
sub
jne
mov
cmps
nop
sbb
cmc
xchg
pop
jmp
(bad)
lods
mov
popa
es
outs
out
mov
push
mov
mov
jb
inc
or
outs
add
jnp
(bad)
pop
dec
fs
adc
retf
jae
adc
dec
inc
(bad)
mov
dec
dec
cmp
inc
fs
pop
cmp
inc
retf
mov
mov
add
mov
and
movs
pop
shr
or
sbb
pop
mov
in
xor
in
outs
cld
iret
test
or
adc
(bad)
enter
ror
pop
jg
xchg
int3
inc
(bad)
(bad)
fstp
lods
and
pop
mov
add
shr
adc
mov
push
dec
ja
div
addr16
cmc
dec
pushf
jmp
repnz
stc
aas
mov
adc
add
test
das
push
push
xor
or
pop
pushf
out
or
mov
and
arpl
lods
call
fld
adc
xchg
or
shl
dec
mov
out
jl
sub
pop
or
inc
jmp
push
xchg
shr
into
cmp
lock
or
push
stc
sub
icebp
dec
sub
movs
mov
jl
push
and
inc
mov
int3
icebp
pop
adc
adc
inc
dec
dec
iret
leave
xor
ja
cmp
inc
xor
mov
cld
sub
mov
pop
or
and
mov
pop
jl
cmp
out
dec
addr16
gs
in
add
sub
pop
lods
xor
std
fisub
mov
pop
dec
cmps
and
pop
xor
mov
test
jo
push
dec
sbb
pop
adc
sbb
xchg
in
pop
mov
xor
(bad)
popa
test
pop
xchg
cmp
push
popa
xchg
lods
fbstp
rcl
inc
popa
adc
movs
shr
imul
dec
jle
inc
(bad)
out
sbb
mov
test
fild
daa
aam
inc
adc
fisubr
repz
or
and
xchg
stos
pop
xor
fsub
dec
xor
mov
cs
pop
and
mov
lods
dec
inc
sbb
int3
(bad)
add
and
cs
(bad)
xlat
or
mov
addr16
mov
aam
cld
xlat
mov
xor
jecxz
sti
jge
dec
mov
jno
jbe
push
add
cmp
mov
call
fisttp
cmp
int3
push
adc
rol
cmps
mov
dec
mov
(bad)
fld
mov
arpl
cmps
in
cli
aam
mov
ss
(bad)
loope
fadd
addr16
mov
test
int3
repnz
and
mov
out
push
pop
jl
call
inc
inc
rol
mov
mov
add
(bad)
mov
xor
mov
loop
pop
shl
cmc
scas
sar
mov
lds
arpl
jb
inc
cmps
sar
dec
mov
gs
mov
mov
lahf
loop
adc
cli
les
mov
dec
aad
aaa
xor
addr16
pop
les
pop
je
cmc
sub
fstp
pop
ds
fwait
add
pop
inc
icebp
js
pop
sbb
sub
push
or
cmp
rcr
repnz
mov
mov
test
fnsave
fcomp
movs
cmp
push
inc
dec
loopne
dec
mov
and
inc
sub
inc
and
ficom
sbb
adc
cs
add
pop
loop
sub
dec
dec
in
(bad)
xchg
add
jne
lds
rol
inc
pop
xlat
lods
sbb
shl
cmp
inc
inc
into
addr16
dec
mov
or
adc
(bad)
hlt
repz
stos
(bad)
jbe
dec
ins
cmp
cmp
call
add
in
daa
jecxz
jmp
jge
scas
pop
bound
dec
sub
shr
in
clc
jae
retf
pop
sub
ror
pop
mov
xchg
xchg
jecxz
scas
daa
fsubr
push
stos
fsub
push
scas
fsubp
push
scas
fsub
push
lods
cli
mov
xor
arpl
dec
mov
loopne
scas
fistp
fwait
ds
mov
out
test
mov
dec
repnz
mov
sahf
push
adc
aaa
leave
std
aad
mov
pop
sub
in
fdivr
fldenv
popf
inc
fimul
(bad)
rcr
pop
sbb
jno
jmp
jmp
sbb
in
dec
das
sti
out
sbb
pop
adc
jle
sub
lock
adc
dec
or
out
leave
inc
gs
xor
cld
repnz
lods
cmc
mov
jecxz
xor
mov
xor
push
mov
add
ds
push
out
les
pop
aam
sbb
rcl
imul
loopne
xor
and
cs
add
aam
sbb
cs
jo
out
sub
(bad)
out
ret
pop
push
adc
loop
cmp
in
inc
sbb
fisub
xchg
mov
loopne
sub
pop
xor
push
xchg
aad
pop
cmps
jp
cmp
addr16
cmp
and
enter
jle
sbb
sti
test
push
imul
les
and
cmp
gs
into
rcr
cmp
in
sbb
imul
xchg
fstp
jmp
mov
and
mov
ror
shr
sbb
mov
pop
imul
rcl
shl
add
mov
fisttp
rol
repnz
std
in
mov
pop
xchg
bound
mov
xor
loop
add
mov
mov
xchg
lds
lods
rcl
pop
pushf
out
sbb
fcmovbe
fiadd
stos
ds
push
inc
adc
add
lods
(bad)
(bad)
fiadd
push
dec
adc
les
mov
jnp
outs
sbb
scas
mov
xchg
clc
sbb
sub
sbb
xor
test
outs
idiv
inc
sbb
adc
ds
scas
or
cmp
aaa
setbe
outs
jno
scas
jb
sbb
lock
fild
dec
adc
sar
mov
and
and
sti
push
(bad)
xlat
pop
pushf
and
mov
lods
scas
(bad)
add
dec
(bad)
iret
pop
les
test
lock
dec
sti
das
jp
(bad)
pop
jb
ins
scas
fiadd
loope
mov
(bad)
mov
aam
out
push
cld
ins
jno
std
repnz
in
and
xchg
fidivr
adc
jbe
scas
jnp
addr16
cmp
mov
xor
pop
and
daa
fsubr
mov
push
mov
push
pop
bound
bound
js
xchg
pop
jns
fdiv
fs
mov
movs
test
xchg
and
stos
int3
mov
test
jg
cmp
add
push
scas
or
(bad)
pop
mov
mov
fcmovnu
xchg
mov
out
cld
sbb
loope
cmps
enter
mov
pop
outs
sbb
mov
mov
or
sar
jb
push
mov
cmp
sbb
shl
jbe
jmp
js
pop
jle
mov
(bad)
lock
outs
dec
addr16
cwde
sbb
iret
cmps
mov
inc
scas
fldenv
in
arpl
fwait
cmc
adc
inc
xor
scas
out
retf
in
dec
loope
iret
cmp
jae
pop
inc
mov
je
inc
clc
test
ds
ins
fsqrt
jecxz
(bad)
mov
test
inc
mov
fiadd
push
neg
movs
dec
and
lock
xor
loop
out
inc
scas
push
add
cli
xchg
push
cmp
jecxz
(bad)
aam
jo
adc
and
arpl
adc
adc
retf
rcr
jle
fisttp
mov
pop
xlat
pop
mov
cmp
les
or
push
mov
inc
cmp
pushf
push
mov
stos
ret
addr16
shl
dec
ficomp
adc
ror
xchg
leave
and
xchg
jge
pop
imul
pop
loop
(bad)
fisub
mov
call
cmp
stos
xor
retf
sub
or
sub
test
(bad)
je
loopne
sub
enter
mov
pop
inc
sbb
add
adc
xor
cs
movs
or
call
jecxz
outs
fstp
dec
mov
cmp
push
cwde
loope
adc
add
mov
aas
mov
jne
in
cmp
int
adc
sub
dec
mov
cmp
push
cmps
cmp
mov
nop
sti
popa
int
(bad)
idiv
mov
jne
std
js
inc
xor
sbb
push
push
jbe
cmp
loop
lods
(bad)
shr
jecxz
scas
fsubp
push
test
out
test
in
test
jmp
shl
pop
mov
sar
mov
cld
ret
cli
inc
clc
into
jo
dec
jp
repnz
dec
sub
js
cld
retf
es
push
sub
in
cmps
shr
pop
mov
ret
xchg
retf
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
scas
cli
repnz
pop
fadd
lods
cli
loop
mov
in
lods
imul
loopne
scas
fsubp
push
lods
(bad)
push
scas
fsub
push
scas
fsub
pop
movs
aam
push
cmps
fcomi
scas
daa
fcom
push
lods
fsub
push
test
loop
scas
fsub
push
scas
fsub
push
scas
shr
pop
stos
fucomip
push
push
ins
jecxz
test
loop
mov
ret
fild
pop
inc
dec
mov
xlat
test
and
xor
lods
sub
fnstcw
sub
xchg
pop
fldenv
sub
push
push
add
fsubr
in
add
or
pop
test
sti
dec
add
pop
cmc
dec
jb
fimul
sub
push
ins
aas
inc
pop
pop
mov
stos
movs
and
inc
stos
inc
jns
adc
pop
mov
push
mov
xchg
sar
cmp
sbb
retf
outs
jl
xchg
fadd
outs
sbb
or
add
xchg
js
mov
rcr
ja
mov
mov
ss
jecxz
sub
xchg
mov
mov
test
push
rcr
out
dec
xchg
cmp
mov
dec
and
add
arpl
mov
adc
das
xchg
jbe
add
lods
movs
cmp
adc
and
jns
and
gs
movs
xor
popa
jecxz
xor
xor
adc
lock
arpl
cmp
pop
mov
push
xor
cmp
add
out
test
je
repz
movs
aad
pop
pusha
cdq
inc
adc
es
ror
mov
mov
push
and
gs
xchg
add
jecxz
xor
xor
adc
cmp
mov
cs
lahf
jo
sahf
fcmovnb
adc
jbe
sub
mov
fcomp
xor
push
das
mov
fcomp
nop
inc
fsubr
jno
cs
leave
lahf
mov
(bad)
mov
inc
(bad)
or
das
loopne
add
and
and
xchg
push
jnp
jo
loop
mov
loop
shl
fsub
jae
in
cs
mov
push
scas
sbb
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
loop
and
push
scas
(bad)
jbe
sub
movs
mov
mov
loop
scas
fsub
ficomp
pusha
ret
push
jo
xchg
movs
fldenv
ins
mov
repz
aas
xchg
push
inc
sti
in
mov
add
mov
ss
add
xchg
and
shr
into
mov
ja
movs
aaa
inc
outs
test
mov
jae
xlat
add
int
inc
pushf
dec
lahf
mov
cmp
jle
loope
into
repz
jno
(bad)
xchg
pusha
mov
lods
or
sub
(bad)
jge
sbb
inc
jb
movs
popf
(bad)
in
fcom
jo
test
adc
pop
pop
dec
xchg
imul
pop
and
mov
nop
or
mov
clc
out
fstp
in
sub
dec
xor
arpl
scas
iret
jge
push
pop
xchg
in
cmp
and
outs
jg
sub
call
mov
icebp
das
sub
outs
pop
inc
cmp
pop
pop
(bad)
call
lahf
push
mov
cmp
int
or
pushf
sub
jb
xchg
adc
push
cmp
pop
mov
push
xor
cmp
add
adc
push
push
mov
dec
or
out
pop
fwait
imul
js
movs
mov
mov
fstp
sub
or
push
sub
push
pushf
mov
ror
adc
xchg
cmc
repnz
mov
dec
sub
call
push
xchg
add
js
cli
push
(bad)
in
sub
mov
adc
out
xor
aas
test
dec
jne
je
push
jb
sbb
scas
cdq
mov
fild
popf
cmp
jnp
daa
fsubr
push
movs
(bad)
push
scas
fsub
push
scas
fsub
push
movs
fsub
pop
mov
hlt
mov
cli
xor
fwait
inc
scas
sbb
repnz
lods
fsub
pop
stos
mov
in
aam
dec
lock
xchg
sub
adc
rcr
add
sbb
pop
popa
int3
xchg
rcr
add
fistp
movs
xchg
inc
cld
jle
mov
scas
adc
sbb
mov
pushf
out
js
add
mov
repnz
dec
lahf
scas
fs
inc
cdq
shl
adc
mov
movs
jne
and
push
mov
push
xor
or
and
adc
retf
fldenv
dec
movs
sbb
cli
loope
les
dec
movs
frstor
sub
inc
test
nop
push
cs
lahf
scas
fs
inc
cdq
shl
push
das
sub
stos
ins
fdiv
jo
test
into
mov
xchg
mov
xor
push
adc
push
ret
sbb
sub
pop
cmp
mov
movs
fnstsw
outs
push
rcl
mov
mov
ret
dec
cmp
jmp
scas
xor
sbb
cmp
push
cld
sbb
jbe
movs
popf
mov
into
jecxz
sub
cmp
js
sbb
jne
(bad)
fbstp
out
sbb
dec
xchg
pushf
push
outs
stos
jne
xor
dec
jbe
sbb
mov
mov
add
fist
mov
mov
xor
xor
add
sbb
push
mov
data16
fbld
jp
xor
outs
adc
sti
test
mov
or
out
ds
add
fld
inc
popf
and
fs
cmp
mov
and
pop
les
and
mov
aam
mov
jbe
cmp
int3
xor
ds
jle
pop
add
cmp
dec
nop
int3
xor
ds
jle
pop
add
mov
sub
sbb
push
xchg
dec
nop
int3
xor
ds
jle
pop
add
cmp
dec
nop
int3
xor
ds
jle
pop
add
shl
pop
xchg
in
jmp
sar
test
jmp
retf
xchg
dec
pop
repnz
mov
nop
cmps
sub
aaa
dec
in
call
add
mov
(bad)
repnz
pop
mov
push
out
pop
icebp
xchg
xchg
in
jmp
sar
test
jmp
mov
dec
xchg
push
dec
out
cli
mov
push
sbb
fstp
cmp
xchg
into
aas
out
nop
(bad)
mov
xor
out
aad
xchg
cmc
xor
push
push
jl
fwait
dec
lods
or
fcomp
ret
iret
cmp
inc
mov
jmp
mov
dec
xchg
sub
xor
hlt
aam
(bad)
and
popf
dec
push
lea
dec
(bad)
cmc
rcr
pop
xor
and
movs
push
in
adc
lods
shl
mov
mov
retf
add
push
das
xchg
cli
sti
shl
mov
lods
mov
mov
gs
jg
scas
jl
outs
cmp
adc
data16
push
fwait
test
movs
outs
cmp
test
pop
jae
cmp
cmps
lods
rcl
sub
adc
aam
xchg
pop
xlat
loopne
or
daa
inc
scas
in
cmp
xor
mov
mov
lahf
xchg
push
imul
(bad)
std
std
sub
in
add
pop
xor
(bad)
jmp
fmul
loope
adc
and
das
test
aam
scas
scas
test
rcl
xchg
hlt
sti
mov
sub
mov
(bad)
retf
and
mov
push
stos
pop
out
dec
int3
sbb
push
push
iretw
xor
mov
sub
into
push
fwait
pop
call
mov
imul
pop
rol
push
mov
sub
xor
sub
ja
jl
mov
pop
outs
jmp
sbb
je
adc
bound
and
shl
imul
loop
cmps
(bad)
inc
mov
(bad)
push
scas
fsub
push
stos
shl
pop
mov
jle
je
repz
ja
mov
popa
adc
cmp
push
ins
jecxz
lods
fsubp
push
rcr
adc
les
push
dec
add
or
in
(bad)
adc
mov
mov
out
jns
lds
pusha
aam
or
push
js
inc
push
jmp
and
gs
inc
xchg
mov
jne
mov
loop
fnstsw
rcr
into
and
dec
out
jne
cld
jge
mov
lods
or
jae
jmp
jno
rol
cmc
fs
push
lds
cmps
call
adc
xchg
mov
mov
mov
imul
inc
stc
rcl
movs
push
imul
jae
in
lahf
(bad)
mov
xor
neg
push
xchg
push
cmp
dec
(bad)
popa
cwde
and
mov
fist
lds
clc
test
xor
cmp
outs
(bad)
xchg
jmp
(bad)
jge
jo
cmp
fistp
xor
fwait
movs
aas
mov
aam
push
jnp
dec
dec
popf
cli
cmp
cwde
pusha
inc
mov
xchg
out
jne
mov
cmp
ret
jo
adc
cld
rcr
or
add
adc
cmp
fstp
pusha
sbb
adc
push
push
sbb
rcr
loopne
dec
sahf
mov
mov
cmps
inc
enter
imul
mov
les
sbb
test
mov
jno
push
pop
mov
add
push
inc
enter
test
popf
js
fs
cwde
pusha
inc
mov
pusha
xchg
push
shl
push
pop
lds
out
mov
adc
and
rol
mov
mov
dec
ds
das
dec
arpl
push
cmp
push
adc
in
aas
mov
add
rol
cmp
outs
(bad)
dec
icebp
cmp
fimul
xor
sub
mov
and
test
add
sbb
aad
xlat
not
pop
cmp
ffreep
jae
dec
xor
mov
fucomi
(bad)
push
jne
push
sbb
outs
test
adc
aas
inc
ror
pop
jg
xor
shl
mov
jp
pop
dec
xchg
pop
cs
jg
mov
stc
jle
adc
mov
stc
xor
mov
test
ds
pop
aaa
mov
jp
sub
icebp
sbb
stc
jbe
test
inc
add
push
inc
xor
sar
push
mov
sahf
mov
mov
xor
out
fs
cmp
jo
imul
outs
xchg
jb
lock
and
aam
mov
mov
dec
mov
or
mov
js
fbstp
call
inc
stc
inc
gs
xchg
stos
pop
cmps
jbe
sub
mov
and
pop
jge
mov
mov
retf
inc
xlat
sub
jmp
xor
pop
sbb
movs
int3
mov
dec
xchg
cmp
xchg
or
in
and
out
jmp
mov
test
sub
mov
xor
inc
repnz
push
sar
jbe
pop
data16
popa
stos
mov
loope
out
pop
add
cwde
sbb
xchg
xchg
ret
jl
mov
dec
mov
es
sbb
outs
dec
in
jo
retf
stos
sar
xor
enter
adc
jbe
adc
mul
and
mov
loopne
ja
imul
ret
nop
popa
add
jp
push
xchg
mov
mov
cwde
call
adc
pop
adc
xchg
sti
fist
push
in
jo
retf
stos
sar
xor
enter
adc
jbe
adc
mul
and
mov
loopne
ja
imul
ret
nop
popa
add
jp
push
xchg
mov
mov
sbb
stc
jmp
cdq
inc
jmp
clc
mov
mov
inc
(bad)
fwait
adc
xchg
pushf
mov
and
mov
sbb
ret
xor
and
into
cmp
pop
loop
gs
push
(bad)
test
call
add
sub
mov
fwait
dec
js
and
test
add
fsubr
jecxz
scas
jne
push
dec
push
inc
xchg
inc
mov
mov
(bad)
ds
rcl
movs
jno
loopne
sub
pop
cld
mov
(bad)
(bad)
adc
pop
mov
push
bound
adc
push
popa
hlt
sub
neg
mov
mov
add
sub
test
in
inc
in
int
in
imul
add
cmp
(bad)
mov
ffree
iret
dec
mov
(bad)
push
sbb
pop
dec
push
jecxz
dec
mov
cmps
push
pop
xchg
loop
(bad)
sti
mov
mov
or
popa
adc
in
ja
sar
cmc
cmps
(bad)
fsubr
ret
dec
add
(bad)
leave
retf
pushf
ja
int
sub
jmp
js
cs
adc
fidiv
xchg
enter
or
xor
push
mov
adc
aam
jo
push
(bad)
fbstp
sbb
cmp
xlat
mov
retf
call
mov
push
les
add
shl
loope
push
adc
add
pop
cs
mov
pop
fcmovne
jge
pop
or
clc
push
fimul
jae
out
mov
push
inc
jl
push
push
xchg
lock
pop
cmp
in
ss
out
das
sbb
in
lods
cmp
daa
pop
sbb
je
fwait
dec
js
and
test
fisttp
xchg
jnp
xor
and
mov
aaa
xor
xchg
pop
in
ins
loope
sti
jae
mov
fistp
xor
push
and
pop
ret
stc
xchg
pop
jns
fisub
inc
ss
leave
retf
cwde
ja
int
sub
jmp
js
cs
adc
lea
push
cmps
push
outs
cmp
fsubr
mov
(bad)
cs
inc
jno
mov
push
push
adc
stos
test
or
jmp
mov
test
or
repnz
(bad)
jno
jle
jp
arpl
cmps
xchg
fadd
cmp
mov
sub
sbb
jmp
retf
pop
and
pushf
sbb
leave
jns
inc
fistp
fwait
xchg
out
out
push
leave
pop
jecxz
fdivr
retf
xor
ror
push
jecxz
mov
loopne
scas
retf
stos
fsub
push
scas
fsub
push
scas
fsub
push
test
call
adc
jp
hlt
xchg
cmps
mov
(bad)
mov
sbb
scas
enter
ficomp
in
inc
ret
call
cmc
ror
addr16
xchg
scas
(bad)
mov
movs
dec
pop
jmp
mov
and
jne
sbb
ss
cdq
jmp
and
push
xor
sbb
pop
mov
lea
sub
div
adc
cdq
out
dec
inc
pop
(bad)
rcl
jae
adc
lods
dec
jmp
push
or
xor
arpl
enter
fsubr
jmp
inc
dec
mov
jmp
mov
test
push
push
jmp
xor
and
sbb
stos
sbb
into
push
in
ret
xchg
cmc
pusha
std
sti
pop
pop
cs
jo
or
jae
ret
jmp
jmp
xchg
cmp
es
pop
les
push
inc
repnz
sub
in
jne
xchg
pop
in
icebp
cmp
les
push
inc
inc
adc
neg
cmp
jmp
ret
xchg
cmc
pusha
std
sti
pop
pop
cs
jl
mov
cmp
stos
xchg
(bad)
cmc
jo
cmp
retf
inc
jns
adc
xchg
movs
add
popa
lock
sbb
(bad)
mov
add
data16
push
xor
sbb
lea
push
pop
lods
stos
not
push
xchg
inc
les
inc
outs
cmovnp
call
iret
cmp
xchg
fdivr
dec
xor
mov
lds
out
xchg
in
pusha
push
mov
add
cwde
int
xchg
aas
mov
(bad)
dec
addr16
call
add
mov
ins
arpl
cld
int
cwde
mov
xchg
aas
mov
jge
fcomp
adc
push
hlt
inc
lods
jle
fnsave
imul
and
xchg
bnd
call
mov
es
pop
mov
or
int
pushf
cmp
jg
jmp
xor
div
das
jo
gs
and
xor
in
inc
imul
(bad)
jl
cmp
or
sbb
pop
mov
mov
sub
loopne
mov
mov
inc
imul
(bad)
jl
cmp
or
sbb
pop
mov
pop
popa
loopne
pop
popa
loopne
pop
popa
loopne
pop
popa
loopne
cmp
xchg
add
or
adc
ins
shl
scas
mov
aam
jnp
cwde
mov
sahf
cmps
loope
jno
js
fmul
jbe
and
test
jb
stos
repz
(bad)
(bad)
retf
pop
into
mov
inc
mov
push
mov
inc
mov
push
out
dec
pop
mov
xchg
add
xor
(bad)
fcmovnu
sahf
dec
pushf
sbb
inc
mov
cdq
add
hlt
fistp
lods
mov
cmp
ja
test
call
add
push
mov
shl
in
cs
mov
mov
mov
call
fisttp
pop
xchg
adc
movs
cmp
stos
xchg
inc
fdiv
ss
add
fdiv
jns
cmp
mov
push
test
fmul
xor
icebp
and
or
xchg
repnz
out
imul
div
and
add
movs
add
sti
push
imul
dec
js
or
mov
inc
fisubr
or
in
xor
(bad)
cdq
rcl
cwde
mov
cmp
mov
das
lahf
pushw
fistp
sbb
mov
sub
mov
dec
das
ret
or
or
sub
and
jnp
push
jmp
(bad)
mov
ins
push
dec
inc
mov
jl
je
(bad)
dec
cmps
pushf
ins
dec
shr
shr
pop
push
inc
xlat
repz
push
mov
mov
add
test
fnstenv
sbb
push
cmp
push
add
movs
int
sub
aam
inc
push
imul
loop
stos
fsubr
inc
mov
(bad)
push
scas
fsub
push
test
jmp
cld
les
pop
loopne
jmp
inc
mov
sti
xor
into
mov
and
enter
test
(bad)
push
mov
jge
into
mov
gs
movs
push
mov
jle
add
call
loope
data16
stos
loop
pop
das
add
jmp
sub
pop
in
inc
sub
out
lods
ins
rcl
xlat
jns
inc
pop
push
sub
shr
mov
sub
push
in
mov
mov
shr
mov
das
inc
(bad)
imul
fst
pop
into
xchg
push
(bad)
pop
rol
mov
out
loop
mov
into
sahf
stos
inc
jecxz
pop
retf
push
mov
into
cwde
aad
(bad)
int3
cmp
pop
pop
add
test
pop
je
adc
fnstcw
retf
mov
popa
retf
mov
cmp
pop
arpl
movs
fwait
push
cmp
adc
jl
sar
outs
fbld
cmps
mov
fldcw
in
mov
rcr
imul
xchg
add
mov
jmp
xchg
push
mov
mov
ins
repz
or
popa
add
jle
rol
jmp
sub
sahf
adc
rol
bnd
ror
xlat
retf
or
hlt
xchg
pop
inc
aam
sbb
movs
add
mov
and
enter
sub
es
fistp
pop
mov
inc
daa
jle
add
mov
idiv
xchg
or
xchg
pop
(bad)
in
out
jle
addr16
and
xor
outs
fbld
add
sbb
mov
iret
ins
(bad)
mov
xor
dec
mov
bound
xor
add
push
adc
cmc
dec
lds
test
jmp
inc
mov
or
inc
push
psubw
or
das
lds
or
(bad)
push
shr
mov
push
add
sbb
mov
out
lods
or
movsx
jbe
(bad)
out
pop
pop
loope
inc
inc
add
repnz
or
push
aas
inc
xor
adc
dec
mov
mov
test
inc
rcl
jno
and
sub
test
retf
retf
add
add
fdiv
retf
push
xor
arpl
push
call
data16
xchg
jge
scas
test
or
or
sub
sub
xchg
sar
xor
rcr
ss
adc
sbb
push
mov
clc
jbe
ds
les
sbb
es
rol
inc
enter
push
adc
push
(bad)
iret
push
push
or
sbb
bound
xchg
outs
jge
fnstsw
bnd
sbb
rol
fwait
sbb
xchg
sbb
xchg
movs
inc
jbe
call
sar
jns
fsincos
adc
cmp
imul
nop
push
int3
loop
sbb
sub
xchg
stos
dec
mov
push
dec
or
mov
mov
xchg
adc
mov
imul
sub
in
jb
jmp
mov
lods
lea
jmp
in
sbb
ins
mov
stos
ret
push
xor
cmp
mov
push
mov
jecxz
mov
jl
xor
mov
xor
pop
dec
sbb
and
or
xor
cmp
popf
push
scas
aad
loopne
jge
stos
xchg
or
jbe
jle
push
add
into
sub
mov
iret
mov
(bad)
adc
sub
pop
mov
rol
(bad)
call
ss
rol
sub
enter
imul
push
jb
movs
dec
cwde
imul
repz
sar
jecxz
jne
sbb
or
and
iret
pop
adc
add
lea
test
popa
(bad)
xchg
cmp
mov
les
fdivr
mov
cld
and
jle
sahf
sbb
pop
adc
adc
mov
rcr
dec
iret
mov
imul
push
out
popf
or
sub
sti
in
ss
cmc
retf
xchg
mov
cmc
jmp
and
call
repz
add
ja
jae
cdq
mov
xor
pop
dec
sbb
add
mov
adc
xchg
cmc
cmp
aas
push
aad
dec
mov
push
xor
lahf
into
mov
dec
addr16
xchg
fs
xchg
icebp
jbe
(bad)
push
push
dec
and
ins
je
nop
pop
(bad)
xchg
inc
pushf
cmp
jecxz
mul
fistp
dec
pop
dec
sbb
add
mov
adc
xchg
cmc
cmp
aas
push
aad
dec
mov
push
xor
lahf
into
sbb
sub
in
ja
jge
jb
aad
ds
leave
cmp
pop
or
and
sbb
mov
cmp
sub
or
and
retf
daa
jp
jmp
repnz
ss
pop
retf
pushf
sbb
adc
hlt
gs
jbe
push
rol
bnd
jmp
sub
aaa
adc
shl
test
hlt
or
movs
xor
sbb
ins
xor
add
std
jge
test
xor
xchg
fidiv
imul
enter
fs
outs
dec
ret
push
in
cmc
imul
add
call
add
shr
or
test
mov
ss
jo
sub
mov
push
add
test
cmp
and
inc
mov
(bad)
fidiv
jmp
enter
in
and
and
cmp
bnd
cmp
add
movs
and
andnps
xchg
jae
push
pop
out
clc
sahf
daa
mov
(bad)
jo
sbb
pop
aam
sahf
mov
(bad)
es
lds
and
inc
inc
(bad)
das
xlat
xchg
sbb
scas
scas
mov
jl
rol
mov
mov
pop
sbb
ret
loopne
xchg
jge
or
add
add
xor
xchg
or
data16
movs
xchg
out
jmp
stc
jne
in
fs
dec
jge
dec
push
fcmovnb
out
(bad)
or
int3
mov
in
test
jne
and
inc
mov
(bad)
fidiv
jmp
aas
imul
jne
adc
ds
jge
jge
mov
jns
or
iret
xchg
aam
mov
loop
xor
lock
popf
(bad)
pop
popa
adc
dec
adc
add
outs
fbld
add
sbb
mov
leave
jle
movs
popf
sub
and
cmc
sbb
cs
mov
inc
dec
test
retf
jns
packuswb
retf
loope
xchg
jns
push
xchg
les
or
sti
test
in
repz
push
adc
add
mov
sbb
outs
inc
rcr
js
jbe
int3
iret
cld
dec
xchg
mov
jg
and
les
loopne
cmp
mov
movs
dec
div
outs
mov
call
sbb
inc
cmp
adc
cs
jmp
lock
and
sub
dec
(bad)
dec
addr16
inc
inc
xor
mov
xor
in
fmul
js
jecxz
cld
sbb
adc
loope
je
mov
into
inc
mov
movs
and
retf
xor
fdivp
sbb
retf
push
mov
pop
jg
stos
fld
inc
sub
push
mov
in
and
call
cmp
and
inc
int3
fnstsw
jle
adc
mov
aaa
sbb
jne
cmp
adc
cs
in
push
or
dec
and
in
daa
pushf
cmp
jl
popa
ins
movs
add
stos
push
(bad)
xor
push
sub
sub
cdq
pop
and
sub
scas
scas
sbb
mov
stc
cld
(bad)
mov
and
mov
adc
inc
jnp
int
addr16
lods
out
cmps
jne
arpl
test
sub
(bad)
sbb
pop
cmp
pop
ret
sar
in
int
xchg
gs
dec
(bad)
dec
addr16
inc
inc
xor
mov
jecxz
inc
inc
movs
stc
dec
hlt
sahf
or
mov
add
sbb
scas
mov
push
lods
fsubr
pop
stos
fsubp
push
lods
fsub
push
scas
fsub
push
scas
cli
mov
xchg
dec
fcmovb
ror
jnp
xchg
push
ins
jecxz
lods
(bad)
push
rcr
nop
push
mov
fild
mov
add
sub
ret
jns
xchg
ret
and
mov
hlt
jae
sbb
in
aas
adc
arpl
pop
inc
shr
or
int3
mov
cmp
add
mov
repz
call
outs
iret
(bad)
ins
nop
in
xor
fcom
in
inc
(bad)
cmps
jo
pop
mov
test
or
mov
mov
pop
js
lods
push
popf
adc
imul
arpl
jne
outs
pop
sbb
out
clc
call
cdq
(bad)
adc
cdq
test
mov
lock
int3
test
dec
sbb
xor
arpl
push
int3
fisub
outs
mov
enter
std
jns
pop
push
lods
repnz
dec
popa
lods
adc
push
(bad)
xchg
outs
leave
sbb
in
les
push
dec
ret
sbb
retf
stc
fdiv
aad
in
not
sbb
xchg
out
test
lahf
sub
ss
popa
xor
or
out
jmp
rol
addr16
push
repz
dec
in
adc
scas
fild
sub
test
mov
outs
in
xchg
pushf
inc
mov
cmp
stc
sub
dec
sbb
lods
retf
push
jge
popa
jno
sbb
cmc
cmps
loopne
in
mov
jns
clc
xor
ret
repnz
into
cmp
jp
xor
adc
pop
sbb
stc
cld
and
pop
ds
imul
cmps
inc
pop
mov
inc
cmps
(bad)
addr16
mov
aaa
jmp
data16
cmps
sbb
mov
mov
in
(bad)
dec
shl
jo
cmc
inc
scas
push
fs
pop
neg
gs
inc
cmps
fld1
sbb
push
iret
pushf
cmps
push
test
(bad)
ins
add
loop
jle
or
fcom
dec
push
cld
movs
mov
jl
test
xchg
xor
xor
lahf
push
imul
shr
hlt
(bad)
push
xchg
xor
inc
aas
push
and
ja
les
pop
jmp
jno
sub
mov
ja
jge
loop
stos
fdivr
cmp
sub
sub
call
jmp
movs
in
and
xor
adc
hlt
sbb
mov
and
das
adc
mov
jb
mov
mov
and
(bad)
adc
pop
mov
mov
inc
(bad)
push
push
pop
test
inc
cmp
in
jl
and
jge
fadd
sub
retf
inc
inc
and
sahf
xor
xor
cmp
jne
lds
or
clc
pop
test
inc
cmp
in
jl
and
jns
mov
inc
dec
cmp
and
lea
in
loop
xchg
stc
outs
enter
mov
loop
jmp
mov
dec
leave
in
xor
cmp
or
retf
dec
add
cmps
nop
data16
dec
sahf
out
into
jns
les
rcl
sub
(bad)
fdiv
fisttp
jp
cmp
lods
jmp
retf
dec
pusha
push
jbe
dec
rol
scas
add
out
sub
les
sahf
add
ja
(bad)
mov
adc
cmps
mov
mov
sbb
loopne
sbb
adc
daa
fidivr
movs
repnz
fstp
mov
dec
adc
mov
push
push
xor
aas
aad
shr
ret
dec
push
pusha
ror
ret
popa
les
push
call
scas
or
cmps
fcomp
mov
xchg
push
loope
aam
push
add
push
aad
data16
adc
jb
stc
or
pop
(bad)
pop
(bad)
and
xchg
test
mov
rol
mov
fbld
nop
sbb
xor
xor
and
shr
repnz
add
cmps
or
pop
outs
xor
push
jmp
cmc
xchg
enter
mov
mov
jle
add
fidiv
sbb
dec
sub
test
mov
push
mov
xchg
loop
pop
mov
ret
shl
pop
sbb
xchg
enter
in
imul
mov
popf
sti
push
mov
jp
xor
cmp
ficomp
adc
mov
sub
out
push
inc
mov
pop
add
nop
mov
into
(bad)
push
loope
cmps
or
push
mov
sub
mov
dec
adc
cmc
les
rcl
pop
mov
push
sub
sbb
shl
popf
cli
mov
dec
or
or
xchg
or
and
ss
inc
call
lmsw
stos
or
(bad)
shr
enter
mov
or
adc
mov
and
(bad)
push
ret
popa
scas
(bad)
jmp
jb
es
push
mov
loopne
stos
fsub
push
scas
fadd
ins
jo
stos
jl
fadd
ret
mov
test
daa
cmp
outs
or
pop
int
dec
das
xchg
in
leave
jecxz
jnp
pop
mov
xchg
sub
adc
mov
cmp
inc
out
(bad)
not
sub
test
mov
cld
jae
mov
je
cmps
sbb
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fstp
push
fst
sbb
nop
mov
cld
arpl
rol
dec
and
jo
scas
fdiv
cmp
enter
shl
mov
sti
fldenv
cmp
add
sbb
xchg
add
clc
dec
jno
mov
jne
xchg
mov
add
in
lods
(bad)
push
scas
fsub
push
scas
(bad)
jb
mov
add
cmp
adc
cwde
xor
sbb
push
lods
ficomp
daa
(bad)
movs
stc
fs
mov
mov
mov
fist
adc
mov
mov
call
mov
fisub
inc
fsubr
and
sbb
dec
jo
add
aad
push
push
push
movs
mov
loop
jmp
mov
dec
jb
das
leave
xor
and
mov
mov
add
sahf
mov
jmp
mov
fmul
imul
and
ret
jp
adc
popa
es
aas
stc
imul
mov
push
inc
xchg
(bad)
data16
mov
into
fcmovnbe
iret
test
dec
pop
cld
cmp
mov
aad
into
pop
rcl
xor
dec
and
iret
mov
iret
addr16
dec
(bad)
iret
push
iret
sahf
cs
cmp
and
nop
mov
xchg
jno
je
loop
out
cli
cwde
push
or
mov
cmp
repnz
sub
cmps
push
jns
xchg
imul
lock
sbb
mov
sar
jnp
mov
rol
jae
sbb
std
jg
cmp
fsubr
fsubr
in
mov
adc
fadd
cmp
jb
push
ret
cld
int3
mov
cmp
inc
aas
xchg
mov
mov
push
sub
push
jns
xchg
xchg
inc
(bad)
or
mov
(bad)
(bad)
inc
add
or
push
sub
call
test
inc
int
mov
add
or
test
mov
cdq
out
sub
mov
hlt
pop
rcr
loop
xchg
jbe
jmp
call
scas
loope
add
sbb
jecxz
repz
sbb
pop
or
popa
inc
pop
repz
xor
ins
lods
fldenv
pop
add
cmp
sar
pop
outs
jmp
pop
xor
pop
mov
inc
rcr
adc
jmp
pop
adc
pop
mov
inc
rcr
adc
jmp
test
fptan
loopne
arpl
adc
pop
mov
inc
rcr
adc
jmp
pop
adc
pop
mov
inc
rcr
push
fstp
or
xchg
jmp
repnz
and
arpl
test
f2xm1
mov
adc
push
lock
pop
xor
data16
fld
jge
mov
or
repz
adc
fld
jge
mov
or
add
das
mov
pop
xor
(bad)
ficomp
xchg
loope
mov
pop
mov
sub
(bad)
push
mov
jle
push
pop
(bad)
mov
add
mov
test
xchg
xchg
xchg
sub
sahf
mov
inc
nop
shr
sub
(bad)
(bad)
pop
(bad)
fmulp
xor
push
sub
test
rcl
sti
mov
or
fimul
out
fwait
and
jge
push
xchg
out
sbb
inc
(bad)
loope
(bad)
gs
xchg
(bad)
push
lods
gs
bnd
jge
mov
lock
inc
retf
je
mov
mov
ror
inc
fadd
or
xchg
int3
pop
test
inc
call
mov
mov
(bad)
sub
mov
shr
sbb
iret
and
cmps
loopne
popf
popf
rcl
mov
out
mov
sbb
jb
loop
sub
mov
xchg
test
cmp
pop
mov
hlt
(bad)
sbb
lods
mov
fidiv
push
aas
imul
push
push
arpl
leave
adc
cs
pop
xchg
push
mov
jbe
fmul
aaa
jns
add
test
pusha
cmps
fstp
add
pop
xor
dec
and
int
call
cmp
adc
fwait
add
test
dec
jmp
jge
clc
fcomp
ret
inc
aas
ret
sub
aam
rcl
mov
mov
and
xchg
lds
mov
jno
mov
shl
inc
jns
(bad)
call
pop
das
sbb
ins
jecxz
jnp
arpl
mov
mov
dec
mov
mov
retf
sar
data16
push
shr
iret
test
sub
jge
xor
sbb
pop
cmps
outs
jb
xchg
inc
retf
retf
jnp
sbb
push
lods
fsub
pop
cmps
fsubp
push
scas
fsub
push
scas
fsub
push
scas
sti
mov
repnz
mov
mov
xor
es
push
mov
cmps
ret
shr
mov
iret
in
imul
pop
and
dec
push
add
mov
int3
jns
mov
fstp
ret
sub
(bad)
fs
fsub
sub
out
out
mov
icebp
enter
and
imul
add
cmc
dec
ds
ret
pop
into
outs
adc
pushf
ins
add
nop
out
stc
jmp
movs
jns
ds
xor
xchg
ficom
das
cmps
icebp
push
sub
jp
mov
jmp
push
ins
xchg
icebp
nop
and
pop
test
or
dec
cli
or
xchg
js
pop
xchg
sbb
into
jmp
xchg
loop
cmps
aam
(bad)
pop
push
pop
lock
iret
lods
jecxz
xlat
stc
jmp
and
(bad)
push
dec
lea
mov
and
aaa
(bad)
and
push
retf
mov
jmp
ret
test
jl
fwait
mov
enter
add
pushf
and
xor
xchg
xor
pusha
cmp
push
das
cli
mov
cli
mov
popa
push
cmp
neg
(bad)
cmc
icebp
inc
mov
push
dec
cdq
inc
es
sbb
stos
call
js
xchg
push
fsub
sbb
mov
mov
or
and
pop
cmp
je
ja
mov
pop
(bad)
xchg
pop
sbb
int
daa
push
dec
popf
jp
inc
jb
movs
and
fstp
ret
icebp
cmps
jns
push
test
(bad)
(bad)
push
loop
call
mov
and
js
add
add
sbb
jno
lds
or
retf
push
mov
add
std
jle
add
cmp
cmp
xchg
mov
add
(bad)
add
jae
test
inc
dec
add
repz
loop
dec
cli
cmp
mov
add
ss
push
sub
add
mov
add
mov
add
mov
push
push
fist
scas
test
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
adc
cwde
pop
adc
cwde
pop
adc
test
adc
les
pop
test
inc
adc
mov
xchg
sbb
loopne
in
sbb
and
ror
push
stos
fdivr
punpckhwd
xchg
sub
sahf
(bad)
fiadd
shl
sub
pop
sub
dec
mov
sub
into
pop
aam
out
stos
lods
xor
scas
data16
mov
mov
cld
add
or
mov
mov
jg
or
xchg
lock
adc
sub
dec
cs
jg
imul
adc
hlt
pop
fdivr
js
arpl
stos
cmp
xchg
int3
cmps
push
out
mov
hlt
sbb
dec
pop
add
sub
jns
int
cli
pop
call
ja
add
imul
shr
push
pop
les
out
mov
fwait
lahf
test
and
aas
xchg
int3
cmps
push
mov
ret
pop
mov
add
fisub
xor
pop
adc
daa
push
daa
mov
shl
and
xor
and
or
inc
jo
push
add
pop
mov
int
mov
ds
dec
adc
les
fnstenv
xchg
xor
pop
push
enter
fld
arpl
jb
enter
add
xor
inc
push
pop
mov
in
lods
es
scas
mov
push
scas
fsub
pop
lods
fsubrp
push
lods
(bad)
push
scas
fsub
push
mov
and
into
call
push
ins
jecxz
lods
(bad)
push
sar
cld
aam
inc
xchg
jmp
les
imul
mov
xchg
clc
sbb
fwait
add
imul
push
aaa
lds
inc
outs
push
cld
(bad)
fisub
cmp
add
and
clc
fld
test
ss
add
ss
sbb
sbb
enter
aas
mov
inc
arpl
pop
js
(bad)
adc
pop
mov
pop
out
inc
clc
jnp
and
pop
mov
inc
xchg
sbb
xor
xchg
xor
movs
imul
or
sti
call
nop
mov
jge
inc
add
and
jnp
xor
icebp
mov
mov
arpl
cmp
std
pop
addr16
ror
adc
mov
(bad)
sbb
setae
mov
sub
sbb
ja
fcom
lar
loopne
sbb
enter
lea
or
sub
aas
xchg
mov
adc
sbb
ja
icebp
out
adc
pusha
cmp
sti
popf
jae
loopne
adc
cmp
sbb
movs
(bad)
jl
mov
push
push
inc
stc
int3
sbb
pop
jle
mov
cmp
sbb
inc
pop
inc
or
(bad)
xor
sbb
dec
pop
loopne
fcom
std
push
jmp
pop
sub
or
(bad)
mov
lods
add
arpl
aad
adc
out
bound
xor
lods
or
fimul
cmps
mov
aaa
jbe
shl
pop
stos
outs
leave
repz
retf
adc
jecxz
mov
mov
pushf
xchg
call
(bad)
dec
mov
or
cmp
pop
(bad)
ret
popf
sbb
call
shl
push
push
or
jbe
cld
outs
mov
rol
std
mov
add
hlt
mov
mov
and
mov
jmp
or
lds
sub
repz
push
call
fcomp
pop
in
aad
sub
in
adc
fwait
inc
loop
sar
clc
ja
mov
das
arpl
lea
int
pop
or
not
dec
xchg
add
(bad)
stc
mov
jl
push
xchg
pop
fimul
sub
sub
jae
sub
pop
xchg
cld
sub
cmc
adc
mov
mov
scas
rcr
cs
adc
pop
aam
mov
jmp
mov
fsubr
lods
xlat
mov
iret
ficom
idiv
es
mov
adc
dec
mov
cmps
rcr
test
sti
cld
iret
xor
xor
daa
outs
cli
dec
rcl
loopne
pusha
stos
fst
into
popa
(bad)
push
push
aas
xor
outs
retf
cmps
jo
addr16
cmp
mov
in
aaa
jmp
cwde
cmp
scas
enter
add
xchg
xchg
inc
dec
dec
ds
pop
cmp
fstp
test
jecxz
shl
ss
cli
stc
jne
in
or
pop
add
arpl
sub
fimul
and
add
test
jae
std
hlt
ins
mov
sbb
sbb
cmps
xor
sbb
mov
push
or
add
sar
movs
add
cdq
pop
mov
ins
inc
(bad)
(bad)
xchg
and
mov
in
add
mov
cdq
jg
add
inc
cmp
sub
(bad)
in
cmc
pop
xor
and
cmps
fmul
mov
(bad)
inc
call
cld
icebp
fbld
(bad)
shl
adc
into
ins
mov
push
mov
cmp
jae
addr16
fwait
adc
les
mov
inc
push
jecxz
idiv
mov
shl
(bad)
push
ds
scas
scas
gs
pop
mov
fcom
sar
mov
test
xor
pop
mov
pushf
mov
mov
icebp
in
fwait
push
xor
(bad)
jmp
inc
lahf
outs
dec
cmp
fst
xor
cdq
pop
aad
cmp
mov
neg
ja
jo
mov
lds
ins
jle
sbb
xor
popa
aas
push
cs
inc
add
mov
fisub
arpl
call
ret
js
mov
(bad)
pop
(bad)
and
push
cli
ss
retf
cmp
pop
mov
inc
js
(bad)
pop
shl
ins
je
mov
data16
je
in
jne
sbb
push
mov
mov
pop
mov
repnz
cmps
adc
adc
inc
lods
movs
or
cwde
xchg
es
scas
cwde
xchg
sub
movs
add
inc
jp
dec
dec
popf
retf
mov
adc
pop
adc
fcomp
jae
fs
shl
push
jmp
inc
add
pop
and
pop
cmp
shl
popa
and
bound
test
xchg
jmp
sti
pop
fsubr
loop
sahf
or
or
mov
sbb
push
js
jmp
xchg
push
fadd
loope
lods
jmp
mov
jmp
xor
shl
or
loop
mov
dec
outs
cli
scas
data16
fld
aas
(bad)
pop
shl
inc
mov
inc
xchg
loopne
fst
sub
sbb
cdq
ja
retf
jb
imul
enter
xor
imul
pushf
cmp
fdivr
pop
cmp
fstp
dec
lods
mov
ins
enter
mov
xchg
dec
enter
sub
mov
ja
and
cdq
cmc
into
dec
rcl
outs
out
jecxz
jbe
ficom
jmp
xchg
push
mov
icebp
or
enter
int
mov
or
retf
jle
in
mov
jmp
dec
and
mov
xchg
in
ret
jb
xor
push
dec
into
pop
push
ficomp
sub
mov
bound
shl
data16
mov
and
adc
nop
mov
outs
mov
ret
repnz
loopne
mov
sub
xchg
jmp
mov
fsub
cmp
jmp
stc
stos
or
push
scas
pop
and
dec
outs
ret
loopne
lods
fdiv
ds
scas
sbb
fs
test
out
stos
fsub
push
test
jmp
shr
pop
movs
int3
in
pop
mov
shl
mov
clc
clc
dec
mov
hlt
inc
mov
ret
lock
cld
jle
hlt
retf
icebp
enter
jecxz
lods
fsubrp
pop
movs
shr
inc
movs
shl
js
into
clc
js
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
es
mov
loop
scas
(bad)
in
mov
out
lods
ffreep
push
push
push
jecxz
scas
fsub
push
lods
(bad)
push
scas
fsub
push
scas
fsub
push
scas
fsubr
pop
movs
(bad)
repnz
stos
ficomp
scas
out
loopne
stos
fsubp
push
lods
fsub
push
scas
fsub
push
scas
fsub
push
movs
fsubrp
pop
stos
fucomi
scas
sbb
cli
push
lods
fsub
jo
clc
loop
lods
or
push
scas
fsub
push
mov
xor
push
fsub
push
scas
fsub
push
scas
fsub
jp
add
test
dec
jg
or
retf
push
scas
fsub
push
scas
fsubr
out
cmps
mov
sbb
dec
cdq
mov
and
mov
mov
fsub
push
scas
fsub
push
pushf
jno
pushf
fsub
dec
mov
or
push
mov
fist
pop
push
scas
fsub
push
scas
fdiv
jns
jae
cs
iret
push
cmp
and
loop
scas
fsub
push
scas
(bad)
icebp
sub
mov
add
loop
scas
jmp
inc
lock
jb
adc
test
loopne
xor
fs
push
scas
fsub
test
or
jbe
aam
enter
push
js
and
in
fsubr
iret
mov
mov
sti
mov
cmp
push
xor
scas
fldenv
sub
jp
cmp
ror
dec
dec
cmp
retf
out
imul
imul
loop
jmp
sbb
shr
add
jg
adc
loopne
mov
or
fsub
add
push
fnsave
test
stos
add
add
xchg
or
das
sbb
loop
xchg
(bad)
aad
jmp
cmp
fs
mov
mov
cmp
sti
test
and
jecxz
jge
jl
add
pop
test
jmp
(bad)
sbb
js
jo
and
mov
popa
push
mov
fstp
or
cmps
cmps
cwde
pushf
test
xor
jecxz
jno
mov
push
out
lods
mov
popf
rcl
sbb
adc
sub
outs
dec
and
push
sbb
cld
add
mov
dec
cmp
sub
sub
iret
push
and
js
xor
daa
dec
mov
mov
and
or
or
fcomp
inc
adc
adc
sub
push
add
add
out
loope
mov
xchg
sub
mov
add
sub
iret
add
mov
ret
lea
mov
jne
or
(bad)
xchg
jg
stos
adc
js
das
push
cmp
pushf
or
sub
call
int3
and
sbb
mov
loop
popf
jge
pop
inc
inc
xchg
push
retf
dec
jae
mov
cmps
cmc
sub
retf
icebp
jae
fwait
stos
jne
pop
adc
iret
call
shl
out
inc
shr
shl
lahf
cmps
cld
into
(bad)
fisub
int3
mov
pop
movs
mov
mov
cmc
and
addr16
shl
inc
ret
mov
jge
xchg
sbb
xor
and
dec
mov
sahf
out
call
(bad)
test
inc
std
sub
fld
fist
mov
dec
das
je
dec
mov
arpl
hlt
pusha
(bad)
jo
cmp
push
xchg
mov
mov
and
leave
(bad)
pop
std
jl
ss
dec
jle
or
or
jno
inc
test
je
pop
aas
sahf
or
pop
ds
pop
cdq
popf
lds
shl
dec
ror
test
add
rol
adc
icebp
or
sub
mov
push
and
pop
popf
mov
xor
scas
fnstenv
retf
pusha
dec
push
mov
popf
cs
push
jecxz
mov
out
scas
fsub
pop
stos
fsubp
push
scas
fsub
push
scas
fsubrp
push
stos
shl
pop
xchg
shl
jo
pushf
movs
sbb
es
push
mov
shl
stos
xchg
mov
rol
in
mov
fst
jl
jle
in
xor
fidivr
sub
mov
stos
adc
inc
sti
mov
or
cmp
loopne
in
bound
sbb
xchg
aaa
mov
adc
jp
mov
dec
dec
dec
xor
jle
add
or
loopne
out
scas
scas
mov
stos
call
loop
je
xchg
fldenv
into
push
and
jg
ret
jge
mov
xchg
push
xor
arpl
movs
fst
and
dec
das
mov
pop
lea
mov
je
cmp
(bad)
fimul
mov
jmp
rol
add
cli
sub
push
cmpxchg
shr
fwait
pop
pop
pop
and
call
jecxz
jmp
push
mov
adc
sbb
cmps
stos
push
inc
sbb
bswap
test
sbb
add
push
outs
cmc
shl
mov
or
jbe
shl
retf
out
loope
fdiv
mov
lea
push
fldcw
addr16
inc
cmp
fdivr
sbb
mov
fwait
sub
mov
xchg
jne
mov
mov
sar
movs
pop
mov
inc
push
hlt
jno
je
pop
push
xchg
add
(bad)
mov
ss
adc
dec
fbstp
imul
jae
xor
add
scas
add
loop
clc
out
push
cli
imul
jmp
popf
movs
dec
lods
lds
inc
js
xchg
fisub
call
push
imul
fimul
mov
addr16
push
dec
popf
scas
adc
retf
es
out
jmp
xor
sub
push
repnz
mov
dec
gs
cs
movs
(bad)
or
fwait
ins
pop
sbb
push
retf
movs
hlt
ret
movs
add
lods
xchg
iret
sbb
aaa
xchg
stos
in
(bad)
ss
fdivr
test
mov
dec
xchg
rcl
and
sub
hlt
jecxz
and
dec
loope
(bad)
rcl
mov
mov
popf
sbb
cmps
cmp
loopne
jle
scas
xor
in
popa
sub
sahf
repz
add
bound
pop
shl
or
rol
adc
push
dec
push
leave
(bad)
sbb
cmp
popf
push
call
loop
add
push
adc
add
outs
mov
add
ins
sub
lods
aas
outs
cmps
neg
daa
cmp
int3
out
mov
sbb
push
jae
mov
fistp
icebp
push
xchg
repnz
(bad)
je
and
inc
out
push
enter
not
lea
add
xchg
les
jnp
cwde
hlt
mov
inc
lahf
gs
sti
stos
pop
or
mov
jns
inc
adc
sbb
imul
xor
cmps
ins
mov
in
sti
xor
fild
adc
movs
(bad)
jmp
mov
test
sbb
loope
pop
xchg
out
xor
or
sbb
dec
cmp
popa
lock
push
add
push
out
adc
push
jns
dec
adc
and
push
pop
rcr
adc
mov
cmp
sbb
mov
mov
in
aaa
pusha
jl
in
add
cmps
test
sti
ins
int3
push
xor
push
(bad)
mov
gs
mov
mov
jb
pushf
cmp
mov
mov
jbe
inc
inc
call
push
popa
shr
mov
int
in
stos
movs
mov
test
inc
retf
push
or
out
mov
ins
arpl
or
test
xchg
sti
mov
jnp
xchg
outs
out
mov
sbb
mov
es
pop
or
xlat
aam
addr16
sub
(bad)
xchg
jbe
(bad)
sbb
push
stos
(bad)
pop
stos
shl
pop
mov
fsub
push
stos
fsubp
jb
cld
mov
adc
sbb
mov
sti
popa
repz
cdq
adc
repnz
ss
add
or
in
enter
fistp
ret
(bad)
int
adc
or
loope
xor
or
xchg
sbb
mov
sub
lock
jg
test
push
jmp
in
sbb
out
mov
adc
dec
xor
pushf
ins
data16
cmp
rcr
pop
shr
inc
data16
xchg
rcl
adc
xchg
sbb
icebp
xchg
lods
mov
jns
inc
fdivr
push
sub
jns
popa
jl
fcmove
dec
sub
loope
sub
aam
mul
mov
iret
mov
cmps
vfrczpd
sahf
xor
mov
es
hlt
fwait
test
retf
cmp
movs
loopne
mov
xchg
ds
cmovbe
inc
ret
mov
stos
add
push
mov
push
cwde
push
pop
sbb
fcom
adc
out
push
inc
ret
and
and
in
sti
(bad)
and
stos
hlt
stc
mov
xor
mov
mov
ja
dec
inc
push
add
mov
fstp
std
adc
cmp
push
mov
mov
shr
sub
dec
pop
jmp
mov
dec
sbb
lods
jb
sbb
test
into
std
jle
cmp
push
mov
xchg
mov
push
addr16
add
jg
ins
sbb
test
dec
push
xor
push
jge
dec
(bad)
ins
cmps
jmp
xchg
std
xchg
dec
retf
add
xchg
cmp
mov
ret
xor
push
js
xchg
shl
sar
into
add
hlt
(bad)
out
fdivr
cwde
inc
push
mov
ja
lahf
dec
push
cmp
dec
push
and
pop
jmp
push
xor
or
dec
aas
cmp
rcl
adc
mov
jmp
xchg
rcr
sbb
retf
test
xor
int
jbe
cmps
int3
mov
xchg
into
xlat
sub
adc
add
clc
pushf
jns
stos
cmc
aas
xor
and
ja
(bad)
push
cmps
pop
cmps
ss
and
in
cli
add
ss
arpl
out
add
(bad)
movs
mov
inc
mov
sub
cmp
ins
sbb
imul
dec
push
pop
or
ins
nop
xor
cmp
jle
out
mov
mov
add
mov
je
(bad)
cmp
outs
xor
test
dec
fsubr
sbb
ins
cmps
sbb
popf
sti
sbb
cmps
pop
aam
cmp
pop
mov
retf
dec
aaa
xchg
leave
cmp
mov
pop
jp
mov
clc
outs
scas
les
xor
mov
xor
pop
ret
fisub
adc
movs
jle
xor
push
mov
add
push
jns
loope
dec
cmp
mov
jmp
movs
dec
adc
sti
or
nop
dec
push
in
mov
jo
or
retfw
sbb
mov
and
icebp
mov
push
imul
cmovg
sti
fimul
stos
push
hlt
(bad)
pop
js
data16
aaa
lahf
push
pop
test
xor
ret
sbb
stos
pop
mov
inc
in
test
push
sub
jae
jl
and
sbb
cmp
stc
adc
mov
fld
int3
mov
popa
ins
inc
or
cld
cmp
(bad)
int3
jnp
retf
sub
std
fstp
test
mov
add
mov
add
inc
imul
bound
in
mov
and
les
shl
shl
pop
jno
ret
js
pusha
add
sub
sub
ins
(bad)
fidivr
out
adc
pop
in
push
outs
loopne
fnstsw
dec
xchg
cmp
cmp
adc
or
int3
retf
test
popf
movs
in
aam
shl
mov
xchg
aas
(bad)
pushf
and
lods
pushf
outs
jmp
in
aad
push
cli
mov
fcmovb
popa
push
daa
mov
gs
ja
xchg
sbb
cld
sbb
sbb
call
cmp
leave
xchg
and
cmp
in
aaa
mov
jmp
push
push
stos
cmp
mov
ins
test
(bad)
adc
ins
dec
add
js
cld
call
sbb
ins
and
mov
je
les
dec
adc
pop
xor
leave
cmp
cmc
pop
sub
sahf
fs
jo
jb
je
js
pop
mov
xchg
je
ja
adc
repz
not
inc
and
pop
jo
cmp
in
out
in
icebp
and
les
sub
outs
mov
pop
mov
mov
cmp
cmp
inc
sub
jnp
sbb
adc
push
cmps
pop
xchg
fisttp
out
ror
inc
pusha
jecxz
clc
mov
or
xor
adc
and
imul
xchg
stos
fwait
jo
mov
fst
mov
cmp
dec
mov
mov
shr
daa
jecxz
dec
mov
mov
jbe
push
xchg
dec
mov
pop
and
in
add
push
xchg
pop
pusha
repnz
mov
mov
push
loope
jmp
into
adc
nop
push
jecxz
mov
lea
jmp
xchg
pop
aam
add
push
fdivr
xchg
pop
xor
xchg
or
sbb
push
push
pusha
cdq
cli
mov
call
fbld
adc
jmp
dec
xchg
ja
xlat
or
ins
imul
mov
sbb
(bad)
dec
sub
stos
jge
ds
cld
jae
and
leave
adc
add
dec
or
adc
or
add
push
fs
mov
test
aas
push
std
mov
out
pop
int
shl
jnp
xchg
sub
jno
dec
jmp
into
popf
cwde
push
add
mov
sbb
sub
push
ins
(bad)
xchg
scas
sbb
jno
js
pop
pop
(bad)
stc
daa
adc
pop
jmp
adc
push
lods
fsubp
push
movs
shl
pop
test
hlt
push
scas
fsub
push
stos
faddp
push
cmps
cld
mov
repnz
lock
xor
stc
movs
push
lea
data16
push
mov
sbb
pop
fs
mov
jecxz
lods
fsub
push
rcr
sbb
je
frstor
aaa
(bad)
pop
call
scas
scas
rol
clc
cwde
add
xchg
sub
mov
xor
out
cmovg
push
inc
out
mov
cmp
inc
jecxz
aaa
or
push
xor
xchg
pop
loope
dec
pop
push
push
imul
or
movs
or
dec
ja
add
in
pusha
movs
sar
sar
(bad)
jns
push
xlat
mov
mov
pop
les
sub
adc
mov
xor
pop
add
adc
cld
in
in
ss
add
das
add
mov
sbb
pusha
leave
jecxz
pop
lock
std
imul
in
pop
dec
sti
sub
ins
add
icebp
mov
jmp
mov
int3
xchg
mov
das
or
test
out
mov
ins
nop
mov
fmul
xchg
div
mov
dec
and
and
stc
mov
dec
in
dec
dec
imul
or
in
jge
sbb
outs
rcr
aaa
cmp
pushf
fs
adc
cmp
mov
pushf
mov
lds
xor
shl
out
mov
clc
test
(bad)
jbe
sub
retf
cmp
loop
pop
movs
jmp
arpl
cs
scas
jg
clc
and
push
cmps
out
and
aas
mov
mov
rcr
arpl
jle
aad
or
iret
mov
call
pop
retf
in
ds
std
je
cmp
imul
jnp
std
call
mov
and
mov
je
enter
(bad)
daa
popa
push
push
in
mov
jne
xchg
xchg
push
sbb
ror
(bad)
loopne
shr
movs
or
pushf
or
daa
test
mov
sub
mov
xor
adc
nop
xchg
in
add
xchg
or
pop
pop
leave
jns
sub
xchg
inc
jne
dec
sbb
cmp
test
xchg
ret
pop
pminsw
cdq
sub
xchg
(bad)
jmp
out
ins
fcomp
cmp
js
sub
stos
jae
or
sbb
(bad)
or
mov
jg
mov
in
sub
bound
push
add
jae
shl
xchg
aas
push
repnz
les
lock
ret
je
out
ins
jbe
push
adc
sub
(bad)
and
sbb
jae
fcmovnb
(bad)
enter
mov
cmp
push
fistp
jmp
pusha
xchg
fldenv
ror
or
push
(bad)
push
stos
xor
shl
call
push
cwde
imul
fwait
dec
xor
sbb
mov
xor
aad
sbb
jg
sbb
or
xor
pop
out
ins
inc
das
or
inc
shl
xchg
shl
movs
xchg
pop
(bad)
aaa
adc
or
mov
addr16
mov
dec
lock
add
imul
add
or
dec
pop
adc
jnp
sub
enter
and
mov
sub
jl
ret
mov
mov
mov
cs
mov
out
nop
dec
jo
cmp
or
rol
(bad)
jb
mov
hlt
retf
xor
and
inc
adc
sbb
xchg
push
xor
out
jne
dec
adc
xchg
scas
xchg
or
mov
mov
pop
mov
xchg
pop
mov
ja
in
stos
sub
jo
nop
xor
fwait
leave
sbb
or
add
test
or
fistp
pop
mov
adc
pop
pop
xchg
add
(bad)
lods
sub
fild
or
ds
sbb
enter
xor
(bad)
fbstp
mov
cmp
xchg
or
std
sub
ret
jns
icebp
xor
ds
push
lock
or
and
mov
push
cs
mov
inc
cmps
jno
std
retf
and
leave
call
or
add
icebp
aad
cmp
sub
aam
cmp
mov
xchg
cmp
sub
dec
and
cmps
punpcklwd
js
adc
mov
sahf
xchg
jmp
jle
or
call
popa
push
inc
xchg
imul
ja
ror
call
sub
ret
(bad)
cmp
push
mov
sti
sbb
cmp
sbb
dec
jb
hlt
mov
jne
popf
pop
lds
dec
add
push
dec
jg
sub
(bad)
retf
icebp
sbb
xchg
aad
jns
inc
stc
adc
sbb
retf
les
std
dec
ds
pop
mov
add
mov
in
pop
or
call
pusha
fbstp
mov
inc
out
adc
mov
jp
add
mov
sub
retf
pop
pop
in
xor
loope
mov
scas
sub
jne
mov
xchg
inc
lea
inc
gs
(bad)
jns
sbb
inc
cwde
test
cmp
xchg
daa
cmp
icebp
out
stos
sbb
jb
adc
out
push
mov
or
jmp
dec
xor
sahf
cmps
mov
test
jno
inc
es
clc
cdq
xor
dec
jl
mov
lds
int3
test
adc
push
mov
xor
ret
cli
clc
ret
push
imul
aam
jae
ja
or
call
test
std
cs
cwde
and
paddusw
mov
test
mov
cmps
sti
mov
sub
mov
out
add
adc
dec
inc
scas
cmp
in
out
stos
xchg
sub
movs
mov
xchg
mov
mov
aam
bound
bound
sbb
aas
fisubr
or
adc
mov
stos
aad
fsin
push
div
mov
call
add
or
sub
jne
mov
ins
jge
or
mov
mov
or
sti
repnz
jo
aad
sbb
fcmovu
dec
test
xor
xor
jle
jb
adc
in
iret
aad
test
cmp
xor
lods
je
or
adc
inc
jns
in
retf
and
mov
ins
jmp
call
cld
xchg
inc
mov
push
mov
push
shr
std
in
dec
cld
mov
pop
retf
inc
jp
popa
enter
mov
popf
or
ror
lea
pop
jge
xchg
in
daa
push
aam
xor
test
fld
bound
jmp
pop
add
jnp
in
js
(bad)
pop
mov
jo
outs
sahf
mov
push
dec
xchg
mov
ins
jns
cmp
ja
out
rcl
xor
cmp
xor
push
(bad)
sti
sub
jecxz
mov
add
mov
sbb
cmp
dec
cmp
mov
(bad)
xor
pop
fucomip
dec
dec
fnstcw
inc
rol
add
and
xor
int3
xchg
cld
aam
add
add
(bad)
dec
mov
and
jmp
sahf
test
inc
sbb
jp
add
sub
movs
xchg
fld
stos
inc
sar
mov
xor
int
or
(bad)
pop
outs
stos
cmp
jae
xchg
fisub
jnp
outs
xchg
inc
xor
xor
xchg
into
push
cmc
or
fbstp
pushf
adc
pop
and
push
ins
lea
cmp
and
add
xor
shl
in
in
in
jmp
pop
mov
sbb
and
int
jbe
iret
sar
gs
ss
(bad)
lods
mov
pop
sbb
inc
movs
aaa
mov
cmp
pop
fwait
loopne
add
es
adc
inc
sbb
pop
loope
in
sub
push
mov
fnstenv
ret
mov
mov
mov
or
sub
call
cld
add
cmps
inc
xlat
sub
dec
cld
and
stc
sub
add
out
adc
outs
mov
shl
aaa
fnstcw
and
cli
scas
lea
mov
movs
rcl
(bad)
leave
sbb
imul
inc
fnsave
sar
inc
ret
and
pop
jns
jmp
je
sti
shl
fcomp
add
mov
mov
test
(bad)
scas
dec
inc
iret
or
dec
mov
div
fcom
jb
inc
nop
xchg
inc
inc
test
out
and
xchg
das
mul
or
xor
jle
aad
ins
outs
inc
inc
ja
mov
fisub
in
xchg
push
arpl
mov
adc
jns
hlt
les
stos
loopne
test
ins
inc
xchg
popa
scas
xor
stc
ret
(bad)
les
(bad)
sub
adc
jl
inc
xchg
and
sbb
sub
dec
push
adc
sbb
pop
add
rcl
fisub
push
daa
in
js
scas
dec
cmp
hlt
dec
leave
test
or
xchg
es
jge
push
xor
inc
push
data16
or
mov
in
xor
in
adc
sbb
scas
pop
ret
(bad)
push
mov
(bad)
in
scas
fsub
push
stos
fsubp
jb
call
ins
cmp
xor
cmp
pop
test
stos
je
xchg
bound
scas
enter
aad
push
push
rol
jns
addr16
inc
mov
jns
xchg
push
cli
xchg
sub
lods
das
mov
(bad)
ins
add
add
outs
sbb
call
xchg
xchg
cmp
xchg
fnsave
cwde
or
int
in
xchg
mov
xor
mov
cdq
cwde
mov
xor
push
test
sub
adc
mov
jo
push
scas
inc
ret
mov
mov
jns
loope
xlat
fwait
ret
or
lahf
aam
fiadd
call
bound
push
pop
mov
or
sub
(bad)
sbb
mov
mov
scas
scas
lods
mov
jl
test
(bad)
js
dec
dec
push
out
jnp
in
pop
outs
lds
and
test
ins
push
data16
movs
push
add
out
cmp
add
push
stos
retf
pusha
push
jecxz
repnz
ins
jb
cmp
pop
mov
enter
xchg
xor
inc
rcl
dec
call
inc
inc
enter
and
hlt
jl
cdq
(bad)
(bad)
dec
ficomp
mov
xchg
jno
(bad)
xlat
in
push
and
mov
mov
inc
(bad)
jmp
cld
repnz
aam
dec
inc
ret
adc
shl
and
into
cmc
aam
xchg
sub
xor
cmps
daa
cmp
xlat
ret
lds
add
mov
jmp
inc
inc
in
js
rcr
or
cld
push
shl
jecxz
loope
aam
sbb
and
and
and
xor
xchg
xchg
gs
and
sbb
cwde
int3
push
mov
test
dec
cmp
arpl
into
jecxz
mov
push
jmp
mov
(bad)
outs
and
(bad)
add
leave
pushf
jo
stos
xchg
sub
addr16
call
mov
sub
push
xchg
(bad)
paddusb
adc
shl
inc
out
adc
pop
mov
in
pop
pop
jl
push
mov
jecxz
test
ds
jecxz
mov
fwait
jo
and
lock
in
shr
and
pop
ja
js
xchg
outs
cmp
sub
inc
lea
add
xor
add
mov
jp
fsubr
ss
je
mov
icebp
sbb
aam
daa
xor
(bad)
lds
xor
push
xlat
lahf
add
(bad)
in
test
addr16
xchg
inc
sbb
dec
fiadd
(bad)
stc
stc
push
mov
in
dec
repz
xchg
ins
jnp
cmp
pop
idiv
xchg
sbb
cs
fsubr
xchg
stos
jbe
cwde
popf
fwait
sbb
je
jo
mov
arpl
sub
sahf
and
ror
pop
mov
jae
jb
movs
adc
sbb
mov
push
jl
push
xor
push
in
or
dec
int
mov
sahf
(bad)
xor
push
(bad)
xchg
sub
push
push
push
pop
push
add
push
push
pop
imul
enter
xchg
or
mov
xchg
(bad)
and
or
aam
std
fdiv
sub
jg
in
jl
mov
sub
add
push
push
mov
push
cmps
cmp
add
gs
(bad)
(bad)
idiv
mov
je
jmp
lahf
mov
pop
dec
pop
xor
and
or
popf
sub
cmp
sar
push
into
sbb
dec
push
mov
fwait
mov
inc
xor
jo
mov
(bad)
in
mov
dec
in
inc
cs
lods
clc
jne
sbb
adc
or
inc
adc
movs
lods
stc
dec
mov
and
das
mov
adc
gs
cwde
jge
sub
lods
retf
cli
cmc
mul
mov
(bad)
xor
jae
ret
mov
lahf
add
mov
inc
adc
inc
push
add
lock
test
xchg
es
mov
mov
mov
ror
jnp
nop
mov
mov
xchg
dec
outs
or
sbb
dec
sub
cmp
test
les
vcvttps2dq
out
dec
ja
push
dec
adc
ins
push
cmp
jmp
and
cmp
mov
pushf
(bad)
jmp
and
repnz
sbb
das
or
push
mov
std
repnz
popa
cld
aas
mov
adc
mov
out
push
out
and
fistp
sub
loop
sti
jns
inc
sub
jmp
mov
pusha
div
lahf
jp
ins
push
xor
and
cwde
cmc
mov
jo
pop
jbe
ins
(bad)
rcr
xchg
and
ret
cs
or
aas
les
in
bound
sbb
test
xchg
or
int
mov
gs
jecxz
cmp
sub
rcl
push
or
ret
icebp
hlt
pop
xor
scas
scas
mov
jo
popf
mov
mov
inc
adc
clc
outs
xor
jge
leave
dec
sub
retf
xor
xchg
fbstp
or
cmp
jnp
mov
aaa
jle
ret
push
je
nop
aas
fs
xchg
retf
xlat
xchg
dec
xor
mov
xchg
mov
rol
in
cmp
inc
ret
adc
push
mov
jnp
ficomp
stc
gs
or
test
out
mov
sub
fdivr
push
and
adc
fst
outs
pop
jp
pop
jne
aad
retf
sub
ret
movs
jno
cmp
xor
mov
cli
imul
fimul
sbb
push
retf
push
imul
jge
dec
nop
stos
call
retf
jnp
push
jae
xor
xor
jg
repnz
movs
outs
sti
mov
mov
and
fdivr
or
out
cmp
pop
push
cmp
dec
sub
mov
fmulp
shl
std
call
or
jbe
adc
and
and
scas
mov
out
clc
mov
push
popa
movs
inc
gs
push
imul
jno
xchg
push
jle
xor
xchg
dec
or
mov
pop
outs
dec
sub
fidivr
push
jne
add
sti
imul
mov
ret
dec
or
push
add
repz
fist
sar
into
ins
daa
jecxz
hlt
add
xor
(bad)
outs
xor
cdq
rcr
adc
in
popf
gs
dec
ins
std
hlt
inc
ror
lds
jae
clc
inc
lds
xor
es
sbb
sbb
cs
mov
int3
stc
or
or
adc
xchg
pop
lds
aam
add
lds
jecxz
jmp
jecxz
sub
jp
lock
repnz
xor
adc
das
mov
popa
ror
jl
test
or
das
jb
cmps
and
ret
push
xchg
pop
mov
pop
push
pop
test
mov
loope
fadd
mov
inc
in
sbb
and
push
push
fnstcw
push
cmps
mov
int
aas
xchg
cmp
or
aad
xlat
lods
les
inc
mov
pop
mov
jne
outs
and
rol
and
mov
bound
hlt
xchg
push
xchg
ret
xchg
out
mov
sub
jg
ror
daa
rcl
xchg
outs
push
or
mov
daa
in
lds
xchg
(bad)
jbe
outs
in
adc
pop
out
xchg
sub
ficom
jnp
dec
xchg
sbb
hlt
scas
or
ret
xor
cli
xor
cmps
jns
or
iret
retf
and
push
jae
mov
xor
inc
shl
xor
cld
pop
test
xchg
jmp
jge
add
sbb
xchg
test
inc
call
fistp
dec
repnz
and
mov
mov
xchg
xchg
addr16
call
or
das
es
sub
ja
ja
call
push
adc
xchg
pop
hlt
inc
push
mov
xor
mov
jle
dec
add
sbb
mov
rcr
inc
push
stos
add
sbb
pop
into
sbb
jle
inc
push
lea
inc
(bad)
hlt
dec
sub
aas
(bad)
push
push
(bad)
out
sub
mov
(bad)
ins
dec
faddp
cmps
test
sbb
stos
xchg
popf
jnp
out
and
sbb
add
and
or
stc
in
test
test
addr16
mov
or
popf
fdiv
shl
rcl
add
retf
add
mov
(bad)
int3
jmp
cmp
push
sub
popa
cmp
addr16
cmp
jmp
and
scas
lock
dec
cwde
mov
imul
in
pop
cmp
ins
out
mov
js
xchg
adc
add
xchg
das
mov
sub
out
add
xor
jmp
fmul
xchg
or
ror
jecxz
sti
sbb
enter
push
jmp
sbb
push
jbe
js
repnz
fneni(8087
jns
cdq
add
sbb
mov
gs
mov
je
in
rcl
js
dec
mov
cmp
lds
cli
fdivr
out
int3
jmp
pop
mov
mov
jle
out
fsubr
movs
es
fcmovbe
jb
fsubr
pop
pop
jo
jmp
inc
adc
push
mov
fld
ja
fst
mov
jecxz
data16
imul
mov
mov
xchg
popf
out
mov
xor
cwde
inc
pop
ins
mov
inc
sbb
and
pop
into
xchg
aas
sub
jae
es
dec
clc
xchg
and
dec
cdq
mov
pop
out
fidiv
outs
test
retf
adc
(bad)
daa
pusha
add
or
and
shl
xchg
sub
div
(bad)
pop
xor
cmp
inc
jne
imul
sbb
int
into
inc
cmp
movs
inc
aaa
and
div
adc
loop
pop
ins
pushf
aaa
loope
sub
add
xlat
out
out
mov
adc
ror
xor
add
push
out
mov
cld
iret
shl
dec
out
stc
mov
or
or
test
loope
jg
fwait
ins
dec
scas
call
push
lahf
lods
outs
ret
test
retf
fild
int
pusha
outs
out
repz
in
pop
pop
cmp
loope
and
mov
cmp
les
mul
shl
jns
xchg
pop
xchg
sub
add
mov
inc
mov
test
cmps
pop
add
inc
mov
pop
xor
push
dec
pop
dec
unpckhps
(bad)
pusha
cmp
sbb
push
hlt
adc
cmc
inc
pop
inc
jp
add
or
je
or
xchg
inc
sbb
mov
(bad)
push
loopne
popf
repnz
scas
scas
loopne
mov
mov
jbe
mov
mov
dec
sbb
push
movs
push
mov
jno
mov
xlat
and
lods
jo
fsub
push
stos
fsub
pop
stos
fsubp
push
scas
fsub
push
lods
cli
mov
xchg
lods
cmp
jb
mov
add
push
ins
jecxz
lods
(bad)
push
rcr
enter
or
add
gs
pop
(bad)
adc
movs
xor
mov
cdq
adc
sbb
pop
fbld
leave
movs
or
dec
aad
pop
push
fnstcw
or
dec
mov
lock
xlat
lahf
scas
and
stc
pop
pop
or
outs
aas
(bad)
mov
inc
in
and
int
cmp
jg
jb
or
js
jb
mov
adc
jle
out
xchg
call
movs
jle
adc
jecxz
xor
adc
cmp
sub
imul
mov
repz
call
mov
(bad)
faddp
out
fistp
pop
(bad)
repnz
and
mov
sbb
stc
fdiv
call
pop
cmp
loopne
in
sbb
repnz
add
push
retf
sub
nop
div
outs
jl
cmps
cli
mov
dec
and
inc
stos
mov
add
and
mov
jmp
cmc
shl
pop
enter
rcl
retf
fabs
jns
mov
inc
in
inc
hlt
rcr
xchg
enter
cmp
adc
rcl
les
lods
mov
inc
xor
push
rol
xchg
scas
mov
jp
pop
idiv
sub
stos
popf
loop
movs
jle
test
jp
cwde
dec
pop
pop
sub
pop
dec
xor
cwde
mov
sbb
pop
and
add
in
aaa
ds
push
scas
shl
inc
mov
(bad)
ins
pop
fwait
pop
(bad)
sar
fadd
jecxz
xlat
fidivr
das
imul
outs
push
cmp
jg
xchg
xchg
sub
or
pusha
sub
or
jb
dec
xchg
xlat
sbb
inc
enter
pop
scas
ins
js
or
outs
rcr
sar
jecxz
repnz
ss
shl
mov
sbb
(bad)
mov
or
data16
icebp
jnp
ja
mov
addr16
push
xchg
push
out
pop
stc
out
mov
inc
addr16
push
or
adc
retf
repz
jmp
sbb
jo
lods
ja
xor
movs
or
pop
ss
int
or
scas
sub
jg
xchg
rcr
push
mov
sub
xchg
fstp
mov
lahf
pusha
shr
gs
shr
mov
or
xchg
adc
in
push
push
fwait
iretw
push
mov
inc
aaa
ins
pop
push
fdiv
fcom
enter
and
stc
or
mov
lea
fwait
pop
adc
push
cmp
data16
push
stos
or
jle
cli
push
xor
jo
mov
xchg
outs
jo
xor
loope
mov
pop
cmp
sub
pushf
pop
cmp
push
(bad)
mov
cmp
xchg
mov
jno
sub
fisub
in
push
pusha
fadd
adc
cmp
jmp
or
sub
sti
call
sub
into
dec
test
shl
xchg
add
pop
sbb
inc
jecxz
cdq
pop
xor
ins
dec
mov
call
xor
(bad)
sti
pop
push
fidiv
cld
add
pop
rcl
mov
adc
aas
jmp
ins
sub
dec
cmp
(bad)
movs
call
clc
adc
mov
or
mov
in
xchg
int
add
xchg
push
es
mov
cdq
sti
enter
ud2
repnz
add
xchg
in
stos
adc
or
pop
mov
adc
mov
lods
mov
xor
cmps
mov
mov
iret
inc
push
inc
adc
mov
adc
movs
xor
jb
ror
cmp
cli
cmp
sbb
imul
mov
sar
pop
xchg
inc
push
sub
and
(bad)
jne
hlt
das
cmp
stos
sub
jp
stos
test
out
(bad)
aam
xor
inc
scas
add
mov
xchg
pop
add
push
sbb
mov
inc
ds
pop
pop
nop
add
mov
gs
push
xor
arpl
mov
or
cmp
jge
and
scas
bound
add
outs
cmp
push
sub
imul
sbb
jl
push
xor
xor
sub
xchg
cmps
cmp
aas
fild
push
fsub
das
pop
pushf
aaa
adc
arpl
add
add
push
mov
repz
(bad)
mov
frstor
and
xchg
xrelease
jno
(bad)
cdq
mov
fdivr
icebp
push
and
push
test
dec
pushf
lahf
in
nop
cmp
ds
and
mov
push
add
(bad)
cdq
push
mov
xchg
inc
ret
es
test
xchg
aam
mov
inc
mov
jns
jp
(bad)
ins
adc
mov
ret
dec
dec
dec
pop
add
xchg
js
mov
ins
jmp
or
sbb
fiadd
jge
inc
jb
mov
push
sahf
lods
xlat
mov
loope
mov
mov
scas
pcmpgtw
pop
loop
cmp
int3
push
sub
mov
sub
xchg
ins
inc
ret
cmp
cld
cmp
sub
icebp
test
shl
mov
loopne
idiv
imul
fcmovne
add
pop
push
test
test
mov
xchg
call
push
movs
or
mov
ret
jl
sub
pop
ds
pop
pop
inc
jmp
mov
fcom
mov
push
sub
sub
xor
es
sub
and
shl
jne
ret
inc
pop
adc
pop
and
(bad)
push
mov
sub
lea
pop
pop
pop
pop
lea
call
xchg
jmp
ins
repz
test
adc
mov
mov
ret
(bad)
sbb
mov
(bad)
cdq
fcom
or
and
addr16
(bad)
sti
adc
mov
push
push
cmp
repnz
push
shl
push
cmp
xchg
jl
dec
jnp
jno
popf
scas
(bad)
fld
hlt
in
sbb
jae
pop
jge
retf
xor
xlat
sub
and
dec
push
inc
add
popf
xor
imul
lahf
loope
popa
sub
cmps
js
inc
cs
mov
call
xchg
sub
cwde
mov
movs
dec
sbb
int3
mov
xor
xor
jne
sub
fist
pop
(bad)
push
dec
sub
ret
fldcw
dec
mov
push
mov
mov
mov
push
fwait
lock
std
xchg
ins
aad
(bad)
aad
lea
(bad)
cmc
pop
pop
clc
push
push
in
adc
sti
sub
not
shr
sbb
or
jmp
fild
std
pusha
in
xchg
xchg
mov
pop
jne
lea
fdiv
sbb
pop
test
pop
fst
(bad)
sub
adc
jle
data16
cdq
pop
addr16
fsub
dec
xlat
push
mov
mov
test
pop
dec
cmp
sbb
pop
mov
rol
mov
dec
xor
dec
inc
int3
loop
jge
outs
or
loope
jp
and
call
fnstsw
mov
cli
push
mov
mov
and
call
push
add
out
fisttp
mov
inc
inc
ret
and
and
adc
xchg
and
jle
test
pop
test
pop
jmp
in
ins
dec
inc
jle
xchg
push
mov
add
inc
cmp
push
and
pop
and
mov
xchg
(bad)
pop
stos
faddp
dec
test
dec
das
pop
movs
inc
mov
sub
out
les
neg
push
lds
lods
cs
test
add
mov
inc
fst
addr16
int3
je
rol
sub
push
adc
imul
ret
jp
mov
ret
mov
inc
add
mov
or
push
sub
imul
pop
mov
xor
xor
cli
mov
lods
pop
rol
ret
js
call
popa
fidivr
cmp
or
popa
inc
sub
aad
ret
retf
adc
loopne
aas
fisub
xlat
mov
and
pop
mov
pop
mov
jge
imul
adc
retf
sbb
inc
lds
mov
sub
pop
adc
fst
push
push
xlat
test
xor
out
jmp
or
mov
cmp
adc
add
sti
adc
sbb
stc
fisttp
sub
arpl
sub
xchg
scas
mov
dec
pop
cmp
push
xchg
pushf
ror
xor
mov
out
xchg
pop
or
movs
add
call
test
ss
jb
add
enter
xor
push
scas
fsub
push
scas
(bad)
jo
dec
stos
fs
mov
stc
mov
mov
je
cmp
ret
jno
push
push
je
nop
les
mov
mov
stos
mov
stos
inc
out
mov
mov
cmp
adc
fimul
xor
loopne
aad
clc
std
ja
repz
jae
xchg
data16
retf
inc
je
pop
jge
icebp
mov
movs
idiv
pop
or
dec
ficom
fsub
cdq
rcl
add
sar
stos
(bad)
loopne
xchg
pushf
pop
adc
push
enter
cld
cli
loopne
lods
fsubp
push
test
loopne
lods
fsub
push
scas
fsub
jb
call
lea
inc
xchg
dec
cdq
add
push
ins
jecxz
lods
fsubp
push
sar
adc
(bad)
js
ins
push
pusha
jb
es
in
std
adc
imul
dec
adc
ret
mov
dec
cmp
dec
push
test
pushf
sub
out
adc
lock
xchg
rcl
pusha
popa
addr16
pop
xchg
xchg
and
mov
ds
int3
sub
out
in
pop
or
repz
mov
test
dec
fsubr
test
test
pop
icebp
adc
xchg
mov
popf
adc
adc
or
imul
jp
(bad)
in
push
inc
and
punpckhdq
xchg
push
or
add
jge
add
add
sbb
xor
out
inc
or
jb
aam
push
jp
jl
fistp
mov
aas
iret
mov
mov
(bad)
sbb
fmul
iret
in
leave
xor
test
retf
push
adc
jecxz
add
push
(bad)
jl
mov
xchg
lock
jo
cmp
cmps
push
lods
jb
push
imul
adc
(bad)
inc
inc
adc
sub
jno
repnz
jne
out
fdiv
aad
xor
mov
pop
adc
sbb
xchg
daa
jecxz
test
jns
ss
out
lea
lods
push
inc
inc
xor
aaa
cmp
mov
int3
ror
adc
mov
ja
repnz
add
scas
lahf
mov
lods
xchg
retf
mov
sbb
jle
mov
and
adc
ficomp
cmp
out
push
push
jbe
jg
fnstenv
stos
jnp
dec
(bad)
cmps
jo
inc
jbe
jmp
inc
ret
jl
push
and
mov
pop
mov
pop
jle
push
push
lods
cld
mov
pop
xchg
cwde
push
cmps
shl
add
jnp
mov
ffreep
adc
push
je
jecxz
pop
in
arpl
call
push
pop
ret
sub
pop
xchg
xor
mov
sahf
xchg
test
leave
push
ds
cmp
jno
dec
or
push
ret
inc
inc
lds
sar
mov
mov
retf
xor
push
(bad)
dec
jmp
mov
repz
xor
mov
test
xchg
scas
adc
sbb
repz
dec
fldenv
cmp
(bad)
(bad)
pop
inc
push
verr
outs
mov
jl
in
inc
pop
cwde
fdivrp
cmp
enter
outs
cli
xor
(bad)
mov
push
dec
push
jbe
aad
and
cmp
mov
shl
cmp
mov
dec
mov
scas
cmp
movs
xchg
adc
int3
cmp
inc
popf
or
adc
or
xor
call
daa
enter
dec
iret
jo
mov
add
mov
(bad)
mov
addr16
cmp
cdq
stc
and
inc
dec
push
imul
lock
mov
sbb
sub
fs
adc
aaa
addr16
add
xchg
stos
lahf
int3
js
loop
mov
mov
mov
xor
std
out
and
clc
call
scas
cmc
and
out
mov
dec
stc
jae
sub
jg
pop
fstp
rcl
(bad)
jnp
sub
cmp
and
test
stc
dec
inc
lods
enter
mov
inc
xor
add
or
push
xchg
mov
cmp
daa
xchg
xchg
mov
sub
aad
xor
ins
movs
popf
je
and
ret
je
sbb
xchg
push
fstp
xchg
inc
scas
int
pop
int3
in
dec
jle
inc
inc
cmps
loopne
not
out
cmp
outs
push
in
xchg
mov
mov
jnp
push
cs
add
in
sahf
xor
call
sbb
ficom
lds
sub
fdiv
jg
das
js
jb
mov
dec
jne
in
ret
cli
or
mov
popa
push
mov
push
cld
or
popf
jle
jo
inc
ja
je
mov
in
cs
jmp
out
push
sub
cmc
clc
and
cmp
jmp
jo
pushf
cmp
(bad)
sbb
inc
cmps
stos
or
outs
movs
outs
pop
ffree
inc
sahf
sbb
int
xchg
xchg
shl
push
enter
pop
mov
jbe
arpl
mov
ins
adc
mov
inc
out
push
xchg
mov
mov
jl
icebp
aas
dec
pop
inc
xor
int
test
mov
xchg
jecxz
mov
outs
retf
sar
or
push
pop
scas
enter
jnp
aaa
fwait
outs
xchg
jmp
xor
or
repnz
dec
in
adc
xchg
mov
ins
loop
outs
(bad)
xchg
iret
out
in
cmps
std
mov
sahf
test
push
jns
sti
mov
enter
mov
dec
push
xchg
retf
retf
hlt
out
inc
mov
adc
adc
ins
fwait
add
sub
lock
loopne
gs
cmp
mov
test
sub
pop
push
inc
cmp
or
outs
mov
mov
stos
test
outs
aaa
mov
and
sahf
es
mov
lock
(bad)
push
mov
in
push
push
stos
sbb
iret
test
retf
mov
mov
xchg
xchg
sti
mov
idiv
scas
adc
nop
or
stos
jo
in
int
push
sbb
stos
sub
and
inc
(bad)
lahf
arpl
stc
out
jmp
call
rcr
hlt
idiv
cmc
xlat
out
add
je
in
pop
lods
cmp
shl
xor
pop
mov
sub
aam
jmp
stc
pop
inc
sti
into
out
inc
adc
mov
stc
jecxz
fdiv
das
jecxz
pop
pop
rol
sbb
ss
pop
aam
sti
(bad)
mov
push
pushf
mov
push
push
jge
push
inc
pushf
xchg
data16
xchg
push
popa
cwde
mov
push
or
add
mov
inc
(bad)
imul
sub
sub
stos
jp
inc
cs
add
push
jmp
test
stc
inc
std
mov
or
jno
pop
lock
(bad)
pop
jge
(bad)
cli
add
fwait
cwde
fs
ins
mov
dec
and
push
push
js
daa
(bad)
cmps
cmc
jmp
mov
push
xchg
mov
pusha
mov
mov
daa
enter
pushf
jle
jg
mov
mov
cli
push
jbe
test
jmp
dec
repnz
xor
push
jp
add
je
out
and
xchg
int
cmps
xchg
cmp
adc
icebp
stc
test
push
push
fist
icebp
movs
das
(bad)
std
xchg
mov
std
fdiv
sar
and
jmp
dec
add
rol
mov
sti
adc
pop
mov
jo
jmp
outs
lock
iret
jbe
and
call
xlat
test
cmps
push
add
test
daa
fdiv
push
lods
fsubp
pop
test
loopne
scas
fsub
push
lods
cli
mov
xchg
dec
(bad)
repz
mov
sbb
scas
enter
fistp
mov
mov
mov
mov
cmp
pop
pop
adc
out
pusha
ins
xlat
leave
call
popa
pop
js
clc
cmps
ss
cli
scas
loopne
loope
push
push
mov
mov
inc
cmp
lds
(bad)
or
in
dec
nop
inc
bound
xchg
mov
sahf
sbb
loope
leave
nop
sbb
repnz
jb
retf
xchg
jns
fsub
in
test
pop
imul
scas
scas
xchg
pop
push
rcr
sbb
push
sti
mov
mov
mov
cli
inc
jbe
call
rol
shl
lock
push
(bad)
xchg
stos
sub
sahf
out
jo
in
iret
out
push
add
pushf
mov
sub
xchg
fcom
rcl
or
call
fnclex
cmps
inc
add
cmp
add
adc
add
dec
inc
add
push
xor
stos
push
cmc
inc
sar
mov
sbb
imul
push
and
ret
lds
pop
or
xchg
push
call
jb
dec
neg
enter
push
mov
inc
test
mov
cmp
sub
lods
mov
cld
bound
or
arpl
cmps
mov
mov
inc
cmps
pop
xor
push
xor
cmc
mov
mov
out
(bad)
jae
and
pop
or
out
or
jp
mov
push
cwde
(bad)
mov
pusha
dec
jns
lea
adc
xchg
cmps
pop
mov
adc
sub
jns
adc
imul
add
xor
frstor
sbb
out
aas
sub
inc
cmps
or
inc
fist
lea
cmps
loope
enter
mov
repnz
mov
cmp
push
mov
ret
adc
inc
leave
add
loopne
lds
ret
fmul
mov
xor
aaa
in
test
es
dec
mov
test
in
xor
(bad)
adc
push
into
mov
mov
call
pop
ins
shr
mov
(bad)
in
pop
loopne
mov
sbb
mov
inc
call
les
aad
mov
fsubr
pusha
(bad)
movs
jo
aad
out
add
sbb
dec
movs
loope
or
aam
xor
inc
jge
loopne
adc
stos
push
sub
out
out
push
jge
pop
xor
scas
shr
(bad)
loopne
mov
mov
mov
fidiv
mov
xchg
lods
add
fnstsw
cmp
stos
mov
sbb
and
jne
dec
hlt
and
fnstenv
xchg
pop
fistp
push
bt
xchg
adc
cmp
sub
retf
dec
jae
dec
repz
movs
sti
mov
dec
imul
mul
pop
push
outs
aam
mov
sahf
out
pop
rcl
aas
cmp
loop
add
ins
repnz
clc
es
mov
jle
idiv
mov
lods
addr16
mov
push
cli
(bad)
aam
mov
ins
or
scas
test
xchg
adc
or
repnz
shld
sbb
fmul
out
mov
mov
stc
mov
or
je
cld
dec
pop
sub
add
aam
rcl
cmp
sub
imul
scas
pushf
popf
pushw
out
ret
push
mov
jmp
mov
pop
push
rcl
loop
push
ins
xchg
imul
push
jecxz
pusha
ror
mov
adc
sub
mov
cmp
cmp
add
xor
psrld
pop
mov
jo
xor
push
mov
cmp
xchg
sub
xchg
stos
loop
push
adc
jne
je
jp
and
cld
dec
jecxz
aas
inc
iret
cmps
xor
jb
(bad)
fidivr
test
mov
mov
jmp
stc
xchg
sub
pop
jo
xchg
adc
push
pop
repnz
xchg
stc
enter
gs
stos
sahf
pusha
(bad)
mov
jg
jmp
arpl
xchg
cmp
repnz
or
fisttp
mov
mov
stos
gs
repnz
scas
mov
dec
adc
or
pop
push
mov
lock
ds
es
jmp
push
test
cmp
push
dec
mov
jecxz
inc
(bad)
cmp
xor
loope
mov
loop
int3
out
mov
jnp
push
mov
xor
pop
in
jns
dec
daa
std
test
(bad)
mov
or
xchg
inc
cmp
xchg
shl
or
mov
sbb
bound
and
iret
ds
fstp
repnz
sbb
retf
inc
fbld
push
test
outs
push
loope
xchg
mov
call
cmp
xor
gs
jno
pop
mov
out
pop
cmc
dec
loopne
inc
mov
dec
or
inc
push
ret
je
push
scas
ss
cmp
dec
test
(bad)
sar
or
add
add
mov
ds
mov
mov
neg
or
data16
js
dec
sub
pop
outs
jnp
sub
out
adc
into
sub
mov
mov
repz
scas
lock
and
imul
xchg
cmps
xor
sub
das
sub
xchg
mov
inc
movs
xchg
dec
and
pop
ss
jae
repnz
jp
cmp
add
add
sbb
(bad)
pop
test
fild
inc
push
mov
test
xchg
(bad)
xchg
and
(bad)
pop
out
mov
movs
adc
aaa
sar
pop
cdq
add
jecxz
mov
shl
ins
and
test
(bad)
mov
(bad)
pop
and
or
inc
cdq
gs
not
push
cwde
shl
repz
ret
movs
push
jbe
(bad)
xchg
fsetpm(287
jbe
push
adc
dec
mov
cdq
sub
scas
add
lock
test
push
jmp
jno
inc
(bad)
adc
cwde
nop
push
sbb
and
scas
pushf
repz
jmp
jnp
leave
pop
xlat
and
fs
(bad)
mov
int3
xor
inc
sub
stos
jb
push
out
push
add
push
aaa
sbb
shl
iret
jne
out
(bad)
adc
popa
jno
js
je
out
jnp
aas
inc
test
fisttp
hlt
les
test
jge
dec
(bad)
rcr
or
xchg
lahf
pop
rcr
add
add
pushw
sub
inc
shl
fucomp
or
cmp
dec
lods
jnp
pop
push
pop
ret
retf
aas
mov
and
outs
nop
push
cli
call
test
add
push
adc
add
push
mul
mov
repnz
sti
push
add
cmc
or
pop
arpl
cli
push
lds
(bad)
mov
cld
inc
fiadd
(bad)
jbe
(bad)
js
jp
out
call
out
jnp
ins
adc
and
push
xchg
shr
inc
cmps
shl
rcr
cld
mov
pop
or
cli
sub
test
mov
mov
cmp
lds
xor
test
movs
fcom
push
mov
je
les
out
cld
jmp
fs
sub
inc
jmp
shl
sbb
ins
cmc
fdivr
mov
call
xor
popa
jno
scas
push
and
sbb
push
retf
outs
mov
mov
aaa
dec
(bad)
(bad)
ja
jo
es
fist
push
jb
sbb
mov
shl
dec
in
jp
rcr
jno
cmp
mov
pop
aad
cmps
enter
(bad)
daa
ins
mov
mov
ss
mov
and
dec
test
pop
icebp
dec
xchg
ffreep
cmp
xchg
scas
scas
or
and
call
ins
iret
pusha
add
mov
movs
lods
xor
jecxz
mov
loopne
scas
fsubp
push
scas
fsubp
push
lods
(bad)
push
scas
fcmovb
adc
stc
xor
ins
jecxz
lods
(bad)
push
sar
push
pop
(bad)
jg
push
es
popf
sub
push
sti
push
test
xor
lea
push
push
cld
shl
xchg
(bad)
jmp
push
cmp
hlt
mov
jne
call
sub
cdq
mov
or
push
dec
hlt
jno
call
(bad)
mov
ret
push
in
arpl
sub
loopne
inc
pushf
(bad)
adc
fsubr
and
ror
fcmovb
xor
shl
push
mov
test
or
mov
or
cmovae
pop
pop
into
stos
nop
ret
mov
sub
sti
adc
retf
aad
lahf
or
xor
neg
mov
jmp
lds
pop
icebp
dec
fs
loop
fwait
pop
(bad)
jecxz
dec
jno
test
jbe
cmp
int
mov
mov
adc
fst
sbb
les
pop
inc
in
xchg
cmps
inc
xchg
push
mov
rcl
mov
fbld
movs
rol
fcom
jg
jl
adc
jo
inc
test
pop
daa
adc
cmc
fdiv
jne
je
lds
xchg
or
int3
je
dec
lods
cwde
jg
pop
retf
xor
and
xor
(bad)
xor
jnp
stos
popa
push
das
nop
stos
clc
or
push
adc
xor
lods
pushf
ror
shr
cmp
jp
out
mov
loopne
mov
jbe
pop
or
xor
aas
and
mov
or
ficomp
out
add
add
push
loopne
hlt
scas
and
(bad)
xor
sub
js
add
cdq
popf
push
not
and
cs
(bad)
gs
call
(bad)
push
fiadd
push
out
cmp
xor
out
mov
fisubr
sub
retf
(bad)
(bad)
loope
fidiv
movs
inc
cdq
mov
in
pop
mov
xor
daa
repnz
outs
dec
xchg
call
jecxz
retf
pop
dec
call
jno
inc
mov
inc
pusha
push
stos
jmp
aam
add
push
and
pop
scas
or
pop
mov
aad
nop
sti
pop
sbb
(bad)
out
mov
or
sbb
gs
test
dec
cli
inc
loop
pop
mov
dec
jmp
neg
movs
jne
lea
sub
inc
jg
adc
aad
xor
aas
or
pop
xchg
mov
mov
out
xchg
ins
fdivr
push
aad
shr
in
dec
movs
or
push
dec
js
add
enter
hlt
pusha
clc
ins
xor
push
ins
jge
push
es
dec
jle
and
mov
pop
xchg
aad
mov
jg
dec
int3
inc
es
mov
and
mov
outs
mov
in
mov
dec
xchg
mov
sub
aam
mov
xchg
push
out
mov
div
sub
push
leave
push
and
in
sbb
cld
mov
sub
mov
sahf
cmps
jecxz
cmovne
add
push
fcom
sbb
loopne
mov
ret
or
xchg
pop
cmp
call
mov
add
jp
repnz
dec
fisttp
and
int
ret
imul
shl
or
cli
mov
push
push
jo
inc
fbstp
inc
and
nop
scas
add
inc
js
or
ret
sahf
jnp
xchg
add
and
dec
loope
xor
js
loop
jecxz
adc
or
pop
add
js
xchg
ret
icebp
ret
data16
mov
mov
lds
mov
je
rcr
pop
push
retf
mov
shr
ficom
xchg
ret
sbb
dec
push
inc
mov
clc
or
lock
dec
dec
fsubr
inc
ss
xchg
xchg
sub
loop
fld
mov
jb
repnz
pop
adc
sub
inc
scas
inc
mov
mov
cmc
sbb
sub
push
mov
dec
imul
fistp
sti
div
test
das
call
inc
test
sub
inc
into
pop
div
lds
sar
leave
in
(bad)
add
push
push
fild
test
sbb
leave
bound
mov
xor
hlt
adc
push
jmp
mov
push
mov
xchg
sub
pop
push
lock
stos
xchg
stos
repz
cmp
hlt
mov
stos
enter
sbb
and
test
xchg
cmc
xchg
pop
repz
xchg
sahf
fcom
jb
fcmovb
clc
mov
es
sar
cmp
icebp
retf
in
sbb
pop
inc
add
je
xchg
test
jae
jmp
xchg
push
dec
mov
and
dec
cmp
add
xor
mov
xor
mov
ja
adc
cmps
sbb
loop
or
fdiv
ds
cwde
and
and
scas
stos
or
mov
jmp
push
pop
out
dec
dec
mov
pusha
movs
or
push
lea
pop
stos
push
push
and
aad
push
mov
adc
cmp
cli
ins
dec
xchg
in
pusha
add
mov
shl
ins
in
push
inc
xchg
ror
xor
mov
(bad)
ins
int
add
mov
dec
ja
sar
and
pop
mov
into
dec
fldpi
sti
xor
ror
add
push
jbe
mov
daa
jo
push
(bad)
mov
dec
fild
lods
stos
mov
rep
xor
cmc
pop
inc
inc
push
out
mov
xchg
jmp
pop
out
and
mov
pop
movs
pop
adc
and
xchg
repnz
fld
or
cmp
(bad)
adc
push
xchg
out
adc
and
ss
rcr
mov
jmp
jmp
push
or
inc
xchg
fwait
fs
jle
cmps
adc
mov
sbb
or
pop
(bad)
mov
(bad)
fnstsw
psrad
pop
mov
add
or
mov
retf
mov
mov
outs
jmp
sbb
lods
(bad)
leave
sar
(bad)
outs
jl
mov
sub
pop
inc
sbb
jl
push
jp
(bad)
mov
dec
jge
push
inc
in
jnp
and
sahf
push
mov
int
clc
mov
and
test
dec
jg
mov
mov
sub
push
or
mov
into
cli
dec
icebp
cmp
push
xor
xchg
ror
mov
inc
xor
push
cwde
(bad)
ror
pop
fst
push
sub
(bad)
pusha
sti
mov
push
dec
outs
js
int
xchg
dec
xor
dec
push
xor
repnz
xchg
dec
inc
int
outs
pop
call
call
sub
push
dec
imul
enter
lea
fwait
sbb
sbb
cdq
dec
cmp
cmc
and
push
hlt
hlt
fld
add
retf
test
scas
xchg
test
scas
scas
jae
jmp
mov
pop
enter
lods
clc
imul
dec
inc
bound
shl
push
ret
push
jmp
ret
sbb
pop
call
inc
in
mov
xor
fmul
(bad)
es
ins
(bad)
fld
imul
shr
out
fsubr
pop
add
push
mov
movs
sbb
in
repz
movs
int3
pop
stos
inc
mov
jne
jbe
and
cmp
lods
push
pavgb
inc
test
(bad)
cmp
cmps
mov
out
test
cwde
je
imul
adc
imul
int3
push
(bad)
aaa
ds
jb
ds
addr16
aam
(bad)
mov
push
inc
sbb
fcom
(bad)
std
add
in
cli
cs
fistp
add
rol
jmp
ds
movs
sub
mov
cdq
out
mov
ret
push
mov
dec
adc
lods
sbb
stos
add
aam
dec
jno
xchg
push
(bad)
int3
popa
xor
sbb
mov
rcl
or
sub
xor
repnz
nop
sub
lea
mov
jae
aaa
sbb
lea
adc
outs
sbb
pop
push
hlt
es
xchg
sub
fistp
jmp
push
push
pop
popa
test
mov
fnstenv
rcl
jecxz
dec
rdpmc
ja
adc
in
lods
lods
addr16
mov
fdivr
adc
mov
mov
pusha
fadd
lods
js
jp
sub
push
jle
fs
or
inc
sub
adc
sbb
out
mov
jmp
dec
js
call
mov
push
call
(bad)
fisttp
cdq
pop
or
subps
inc
call
sbb
outs
mov
mov
push
sbb
and
push
cwde
and
out
and
push
dec
push
cmp
mov
ds
sahf
xchg
pop
repz
mul
(bad)
les
jg
xor
ret
pop
dec
adc
push
out
xchg
inc
push
rcr
inc
mov
icebp
jp
repz
and
test
inc
lock
loop
push
les
mov
pop
pop
fs
pop
stos
xchg
loop
popf
xor
dec
ins
test
js
mov
inc
ficom
jae
sbb
mov
push
cmc
mov
aam
loopne
jmp
sub
cmps
mov
sbb
dec
imul
sbb
jmp
add
imul
pop
inc
pop
dec
push
stc
out
stos
cld
inc
aaa
jns
retf
sbb
xlat
push
fadd
mov
fidivr
cwde
in
mov
in
aad
loope
inc
ret
cmp
shr
cli
call
movs
mov
dec
ins
or
inc
bound
push
stos
mov
dec
sbb
or
loop
add
ficomp
sub
push
jge
xor
xor
jl
push
imul
inc
lods
dec
std
xchg
push
sub
cmp
mov
cdq
idiv
adc
cmps
in
xchg
adc
fimul
sti
mov
adc
xlat
sub
ins
pop
mov
jnp
add
test
inc
dec
sbb
(bad)
loope
push
mov
push
aad
or
adc
pushf
push
inc
or
push
fld
jb
mov
xchg
cmps
inc
retf
movs
js
inc
add
jne
in
jno
cwde
ins
ja
pop
pop
fst
dec
and
sub
ss
mov
push
fsub
lods
push
fldenv
fcomip
out
xor
xchg
xchg
xor
fadd
ds
sahf
jbe
fwait
mov
adc
pop
pop
rol
dec
jge
xchg
jle
dec
icebp
addr16
xchg
fldenv
aaa
pop
daa
push
scas
pop
and
dec
outs
ret
loopne
lods
fdiv
ds
scas
sbb
fs
test
out
stos
fsub
push
test
jmp
shr
pop
movs
int3
in
pop
mov
shl
mov
clc
clc
dec
mov
hlt
inc
mov
ret
lock
cld
jle
hlt
retf
icebp
enter
jecxz
lods
fsubrp
pop
movs
shr
inc
movs
shl
js
into
clc
js
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
es
mov
loop
scas
(bad)
in
mov
out
lods
ffreep
push
push
push
jecxz
scas
fsub
push
test
loopne
scas
fsub
push
scas
fsub
push
scas
fsubr
pop
mov
fcomp
scas
in
loopne
scas
fsubp
push
lods
fsub
push
scas
fsub
push
scas
fsub
push
test
call
in
shl
scas
fadd
push
mov
loop
jp
jecxz
scas
sahf
jl
inc
fsub
push
scas
fsub
push
mov
fsub
push
scas
(bad)
push
push
retf
scas
fsub
push
scas
les
cmp
push
(bad)
mov
mov
leave
dec
loop
scas
ftst
cwde
in
xor
cmps
int
mov
mov
or
push
scas
(bad)
push
mov
pop
mov
inc
std
mov
enter
push
scas
fchs
xchg
jge
mov
call
xlat
inc
fisubr
(bad)
out
add
shr
xchg
cmp
sub
loopne
dec
mov
push
mov
es
or
jecxz
sub
cmp
or
jl
(bad)
mov
repnz
adc
aaa
enter
(bad)
outs
jl
sub
(bad)
hlt
jo
cmp
add
loop
scas
lods
inc
jns
leave
das
push
neg
jle
aas
js
xor
cmc
push
ds
cmp
pop
std
or
or
push
lea
jge
xchg
repnz
outs
pop
lods
pop
(bad)
icebp
and
and
into
jg
(bad)
das
(bad)
mov
in
addr16
xchg
mov
leave
pop
xor
mov
jne
jmp
mov
jg
jecxz
pusha
adc
stc
test
cmp
popf
je
inc
dec
add
loopne
mov
xchg
repz
and
ss
loopne
push
jno
xor
mov
popa
popa
xchg
aas
xchg
or
sbb
jge
fcom
xchg
mov
xrstor
add
pushf
fisubr
xor
pop
fist
repz
xchg
(bad)
jp
pop
mov
stc
inc
cdq
dec
pop
and
sbb
inc
jecxz
push
push
ror
jge
lock
fidivr
and
movs
jle
retf
lahf
in
inc
xchg
cdq
call
pusha
mov
inc
loopne
outs
ret
(bad)
bound
pop
cmp
mov
loop
test
(bad)
adc
outs
mov
stc
(bad)
jecxz
call
loop
into
iret
push
sti
or
fisttp
or
push
scas
fsub
pop
mov
loop
scas
fsub
push
scas
fsub
push
scas
out
fldcw
fsubp
push
stos
shl
push
movs
fsub
push
scas
fsub
push
cmps
(bad)
pop
mov
cld
retf
repnz
push
out
sub
fsub
pop
stos
sub
repnz
dec
add
fs
fisttp
pop
stc
xchg
int3
aaa
push
test
dec
cld
mov
sub
xor
in
mov
pop
or
pop
fisttp
mov
rcl
dec
push
adc
fwait
out
(bad)
dec
xchg
(bad)
xchg
retf
(bad)
stos
cld
sbb
xor
mov
enter
jmp
sub
mov
cmp
sub
push
ins
jns
in
and
ret
nop
push
and
test
ret
mov
mov
inc
xchg
lea
ja
sub
jnp
and
mov
out
fild
outs
jns
jae
pop
push
call
aaa
data16
xchg
mov
inc
cmp
jnp
sub
aad
xchg
out
push
cdq
inc
dec
add
cmc
cli
mov
imul
push
inc
xchg
jmp
gs
sub
sub
jbe
cdq
lea
popf
jae
inc
test
cmp
sub
sbb
outs
stc
xchg
in
in
ja
jp
dec
pushw
mov
dec
and
xchg
rcr
scas
mov
push
or
adc
pushf
stos
dec
cli
push
hlt
aas
pop
jns
mov
(bad)
pop
xor
call
sub
mov
pop
fcom
sub
test
or
mov
cwde
ss
push
push
inc
cmp
pushf
dec
cmp
arpl
xor
jecxz
jg
or
or
sbb
popf
pop
mov
xor
add
mov
fiadd
fs
cmc
sbb
std
jge
add
xchg
je
ret
fsubr
xor
sub
neg
sbb
push
sti
das
push
sahf
popa
dec
int3
imul
mov
sbb
pop
ins
stos
out
mov
imul
and
jae
jg
sub
cmp
mov
repz
arpl
jae
push
push
ret
shl
ja
pop
rcr
(bad)
cld
xchg
sub
sub
xchg
cli
std
pusha
dec
in
fwait
jae
mov
(bad)
(bad)
fwait
or
rcr
xchg
out
hlt
ja
shr
gs
pop
sbb
das
push
out
pop
cmp
sub
and
dec
xor
shl
fld
stos
jae
or
xlat
cmc
mov
add
(bad)
dec
ins
xchg
pop
xor
adc
jmp
retf
xlat
loope
enter
inc
cmp
add
jecxz
cmp
xchg
and
data16
aas
pop
jae
adc
pop
xor
movs
repz
mov
dec
mov
ficomp
dec
adc
outs
sub
cmps
aas
push
ror
enter
pop
cmp
cwde
fcmovb
ins
jnp
ds
(bad)
or
repnz
and
ins
push
push
mov
dec
sub
pop
retf
int
pop
dec
js
inc
in
in
jns
mov
movs
inc
push
jg
and
jecxz
xchg
in
jmp
cwde
out
imul
jmp
adc
call
stc
adc
mov
(bad)
sbb
push
lods
fsubp
pop
test
out
pop
test
loop
scas
fsub
push
scas
fsub
jb
shl
xor
and
call
jge
rcl
jecxz
lods
fsubp
push
rcr
sbb
dec
jp
pop
mov
xchg
ss
lahf
xchg
push
gs
mov
sti
shl
int3
add
xor
ins
outs
enter
xor
push
ins
repz
retf
bound
mov
xlat
mov
fisubr
pop
or
mov
call
nop
push
lods
iret
push
mov
in
pushf
outs
xchg
iret
clc
pop
add
jns
ds
pop
(bad)
push
test
leave
les
out
add
daa
push
fucomip
jnp
push
movs
fdivr
mov
jmp
sub
movs
xchg
pop
fwait
mov
and
scas
jne
outs
pop
test
cdq
fs
jae
pop
inc
mov
and
ror
ret
sbb
add
repz
push
dec
nop
data16
add
(bad)
ss
and
pop
sbb
call
push
icebp
mov
inc
mov
mov
mov
call
test
cmp
xchg
mov
iret
inc
mov
bound
icebp
ins
sub
push
pusha
mov
sbb
push
cdq
or
cmp
or
xchg
pusha
adc
std
popf
xchg
xchg
mov
mov
inc
clc
(bad)
inc
stos
pop
jmp
inc
(bad)
pop
sti
cmp
and
jae
mov
dec
fbld
movs
inc
xchg
mov
add
int3
popa
push
jb
out
fistp
fs
cwde
jp
dec
xor
enter
push
inc
push
mov
cld
inc
stos
popa
and
add
cmp
fs
mov
fisttp
adc
cmp
clc
xor
(bad)
cmp
fnstenv
jge
lods
retf
aad
xor
xlat
sbb
sub
push
jl
fild
push
cmps
ja
jo
push
jns
mov
add
daa
test
clc
bound
shl
retf
or
js
dec
repz
adc
fnstcw
daa
fmul
push
stos
shl
pop
mov
fsub
push
lods
fsub
push
mov
jmp
jp
js
pop
loopne
dec
cwde
inc
xchg
dec
cli
inc
mov
pop
and
ins
es
push
mov
cmps
loopne
dec
jnp
push
sbb
lds
pop
push
(bad)
ins
lds
es
test
add
inc
retf
daa
push
nop
mov
js
lea
(bad)
push
sar
inc
ficom
fcom
xor
pop
mov
adc
push
lods
dec
repz
mov
adc
adc
pop
sub
jmp
lods
xor
imul
xor
scas
jne
cmp
fiadd
scas
xlat
and
pop
imul
shl
int
mov
ds
ret
inc
cmps
aam
mov
jl
jge
sahf
dec
xor
cwde
add
sub
out
cmps
mov
lock
jge
ret
adc
sub
mov
inc
add
and
mov
mov
in
cld
in
adc
push
push
and
mov
ret
in
(bad)
movs
mov
bound
jmp
mov
push
shld
rcr
push
cmp
movs
lock
retf
or
sub
sbb
int
jecxz
xchg
es
sbb
pusha
add
inc
sub
daa
mov
cwde
(bad)
int
push
jae
int3
dec
outs
(bad)
fcmovne
cwde
jg
jae
sbb
aaa
loopne
inc
lock
iret
xchg
shr
dec
dec
add
repnz
add
pop
je
leave
push
pop
in
xor
cmp
(bad)
inc
cmp
xchg
xchg
mov
imul
or
aas
jmp
xchg
pusha
xor
sub
add
call
fsubr
or
repnz
and
pop
lahf
or
sub
mov
sub
push
fs
or
loop
int
stos
mov
retf
adc
imul
mov
cmps
mov
and
cdq
shl
clc
xor
mov
mov
dec
in
and
inc
(bad)
scas
daa
fsubr
scas
fsub
push
test
in
mov
fsub
push
lods
fsub
pop
mov
(bad)
adc
rol
jae
mov
xor
pop
inc
pop
test
stos
shl
jg
je
pop
test
scas
sbb
repnz
lods
fsubr
cs
sub
cmp
inc
pop
ins
mov
ds
sbb
cmp
(bad)
out
jg
add
repz
or
dec
push
test
ja
test
pop
dec
pop
frstor
mov
xchg
or
movs
pop
sub
sahf
out
cmc
bswap
push
ins
cmp
jmp
shl
mov
mov
adc
fs
cld
and
or
loop
sub
dec
cdq
cli
mov
push
adc
in
adc
ja
cdq
and
mov
jo
xor
dec
xchg
push
shr
cmp
add
xor
pop
movs
cmp
(bad)
sti
stos
pop
les
das
mov
es
iret
xor
add
int3
mov
mov
pop
mov
inc
shr
mov
add
xor
bound
stos
or
jp
mov
mov
ja
mov
jg
outs
xchg
sub
shl
cmp
jmp
cmp
fdivr
sbb
push
cld
js
iret
mov
dec
jmp
cmp
iret
fcom
loop
out
daa
fsub
nop
xchg
jl
ds
or
jmp
cmp
repnz
or
call
iret
push
xchg
gs
test
fnsave
out
xchg
aam
dec
out
(bad)
fnstcw
test
push
scas
xor
imul
out
pop
rcr
mov
(bad)
test
xchg
sub
and
rol
or
xor
xor
push
(bad)
enter
mov
pop
pop
(bad)
add
xlat
or
jmp
mov
loopne
ins
rep
enter
dec
mov
stos
stos
dec
in
sub
push
jnp
iret
in
test
fcom
jne
rcl
dec
gs
daa
(bad)
pop
sub
cmovge
sub
sub
push
dec
cs
xor
(bad)
stos
mov
mov
push
lods
(bad)
fmul
and
nop
rol
sbb
sbb
push
sub
jle
pop
mov
bound
xchg
sub
sbb
mov
pop
xor
int
js
imul
repnz
adc
loope
stos
and
gs
mov
cmp
pop
outs
cmp
adc
jecxz
mov
rol
dec
out
sub
jle
jl
ins
outs
sbb
daa
add
add
pop
(bad)
push
ins
mov
sub
std
pop
movs
dec
cmp
and
add
and
sub
sahf
not
fwait
mov
mov
(bad)
dec
shl
out
call
cmp
pop
ins
out
cmp
ins
or
ins
sub
push
(bad)
push
sub
add
out
xor
sbb
nop
(bad)
fmul
mov
jp
sbb
mov
jbe
cdq
es
aaa
jo
fdivr
push
lods
xor
stc
push
mov
inc
retf
xchg
lahf
daa
sbb
or
daa
push
mov
test
xchg
mov
std
scas
imul
adc
sbb
lds
xlat
pop
dec
std
inc
dec
dec
dec
ds
xchg
or
mov
loope
cmp
pushf
sbb
xchg
xchg
outs
movs
call
jns
jp
icebp
add
mov
xor
inc
push
popf
cmps
out
add
mov
mov
cmp
adc
sbb
pop
js
fcom
jo
int3
jmp
ret
push
mov
imul
fiadd
cmp
rcr
adc
repnz
int
cmp
rol
pop
sti
jb
pop
leave
ret
inc
in
fsubrp
das
jmp
and
cmp
jno
sbb
xchg
jmp
out
or
push
mov
pop
and
ja
(bad)
or
int3
cli
xor
or
aad
retf
inc
push
lods
or
jo
adc
rcr
clc
std
fsub
xchg
lods
dec
ins
imul
cmc
dec
cld
nop
mov
inc
int3
into
popf
mov
shl
push
sbb
jecxz
bound
imul
jo
sub
out
jne
mov
das
xchg
out
push
xor
movs
inc
sbb
inc
inc
scas
ins
add
test
pop
xor
dec
(bad)
popa
rcl
mov
mov
xchg
rcl
push
lock
sbb
and
outs
pop
inc
pop
imul
add
imul
lods
fisub
into
mov
dec
sbb
gs
sbb
popf
mov
ja
push
mov
mov
sar
pop
pop
ds
imul
shr
(bad)
sub
js
pop
push
adc
hlt
mov
in
mov
pop
add
(bad)
mov
add
xchg
push
inc
or
add
loopne
dec
loop
cmps
mov
aaa
cmp
add
sub
push
mov
ss
xchg
repz
ret
movs
imul
fdiv
cmps
call
or
not
enter
mov
cdq
mov
add
sahf
sub
xor
and
and
sar
movs
push
shr
dec
cmp
push
repnz
int3
lahf
retf
mov
mov
jg
jno
ins
ret
cmp
adc
xchg
div
es
(bad)
aad
stc
fwait
cmps
pusha
mov
sub
fwait
sbb
xchg
xor
dec
ja
cmp
push
aam
sub
aas
push
sbb
and
jg
movs
aam
jg
in
std
out
loop
add
inc
dec
fstp
push
cdq
fs
and
dec
jbe
and
cmp
xchg
add
sbb
rcl
cld
shl
xor
pop
sbb
popa
pushf
in
mov
icebp
inc
mov
and
repnz
mov
pop
out
rcl
(bad)
movs
jmp
lahf
icebp
cmp
call
xchg
xor
sbb
(bad)
cmp
data16
movs
cmc
xchg
loope
retf
fxtract
fnstenv
and
imul
mov
jecxz
aam
mov
dec
in
or
repz
(bad)
sbb
ror
or
xchg
out
jmp
scas
and
cmp
(bad)
xchg
out
jbe
xor
test
sti
call
cmp
cwde
mov
add
jns
sti
call
jmp
push
or
jge
icebp
aam
sub
ja
enter
fwait
jmp
loope
mov
lea
aas
or
cmp
mov
neg
leave
hlt
rcl
aaa
inc
iret
sbb
popf
lock
mov
(bad)
or
mov
inc
lds
rcr
jecxz
repz
movs
and
add
(bad)
mov
xchg
sahf
jl
aaa
scas
dec
and
jmp
retf
nop
cs
das
shr
and
icebp
and
or
push
push
lahf
out
add
add
mov
imul
pop
dec
inc
dec
mov
xchg
adc
cs
xor
js
imul
out
mov
and
jecxz
mov
mov
(bad)
xor
aas
enter
enter
sub
pop
fwait
xchg
mov
sub
mov
ret
mov
and
pop
jl
ret
or
outs
add
add
pop
sbb
dec
out
jne
ins
sbb
jecxz
sub
xchg
int
adc
mov
pushf
(bad)
or
push
jmp
not
pop
outs
loope
pop
push
mov
cwde
ds
ret
popf
scas
data16
loopne
xchg
xor
je
jo
(bad)
sti
inc
sbb
sar
mov
sbb
mov
jmp
les
cmps
mov
stos
mov
mov
mov
(bad)
lahf
aam
mov
add
cmp
in
loope
repnz
addr16
mov
jge
xlat
mov
sub
mov
sub
test
jb
cmp
addr16
cmp
jg
mov
push
scas
pop
push
std
dec
lods
mov
pop
fucomi
cmp
scas
repnz
(bad)
hlt
scas
jmp
das
sub
and
mov
jo
(bad)
fcom
scas
leave
or
inc
test
repz
mov
fnsave
mov
adc
inc
pop
mov
xchg
and
cmps
mov
and
popa
imul
movs
int
cs
mov
iret
das
ds
xchg
xchg
pusha
push
cs
pop
ins
movs
imul
cs
pop
push
ins
and
mov
mov
in
imul
push
inc
rol
sub
leave
xchg
jnp
push
sbb
sbb
loope
jo
shl
pop
push
in
cmp
pop
add
and
cmp
jns
ins
test
jge
sbb
dec
jp
popf
outs
mov
cmp
mov
lods
jns
es
lds
dec
cld
cmc
xor
retf
ror
push
outs
xchg
push
xor
js
les
or
das
ret
jecxz
push
jnp
lods
or
ins
stos
pop
cmp
xchg
dec
sbb
push
xchg
ret
stc
test
retf
test
test
mov
in
mov
push
fnstenv
or
xchg
cmp
or
test
pop
popa
imul
cmp
mov
test
bound
movs
push
lea
cld
vpcmpeqw
push
inc
addr16
ja
iret
div
mov
fs
xor
in
in
mov
mov
add
push
rcr
xchg
(bad)
cld
ins
ja
and
pop
repnz
pop
inc
jae
in
adc
adc
(bad)
mov
cmp
ss
jle
mov
add
adc
add
outs
lea
xor
mov
mov
repz
jmp
je
dec
pop
stc
sub
in
jg
pop
dec
push
aad
or
nop
add
clc
imul
xor
sub
pop
xchg
dec
call
ror
jae
hlt
pop
or
dec
sbb
xchg
push
mov
nop
xchg
dec
mov
pop
mov
inc
mov
mov
sbb
(bad)
in
test
cmp
fisubr
inc
fcomp
push
jmp
push
mov
ffree
dec
pushf
inc
into
ins
aad
adc
sub
frstor
ja
mov
xchg
daa
cmp
and
dec
test
xchg
sbb
lahf
xchg
rcl
xor
je
(bad)
dec
jge
push
xchg
jmp
(bad)
pop
lea
lods
or
or
or
mov
jmp
pop
das
push
push
jecxz
mov
loopne
stos
fsub
push
scas
aam
push
lods
fsub
push
scas
fcmovb
push
in
mov
loopne
out
mov
add
or
add
lods
fsub
cs
and
sar
inc
cli
mov
mov
pop
cmps
mov
mov
je
js
push
fsub
mov
cdq
js
adc
xor
cmp
sub
cli
sub
add
adc
xchg
jnp
inc
lock
lea
push
movs
rcr
xchg
inc
test
gs
pop
jmp
fwait
and
ror
mov
gs
adc
or
scas
fnstsw
clc
repnz
lds
lock
imul
adc
push
loope
cmovp
cmp
and
jmp
loopne
and
enter
shl
xchg
loopne
or
rcr
pop
push
imul
mov
jecxz
ss
mov
pushf
sub
mov
scas
or
mov
iret
cmps
add
adc
or
arpl
add
sbb
or
ins
sub
imul
jbe
cwde
cmp
mov
push
(bad)
jl
inc
add
and
push
pop
jno
repz
xchg
arpl
(bad)
push
loope
ss
push
or
push
cdq
adc
dec
sub
ins
int3
inc
fimul
xor
dec
shl
or
jl
xor
xor
jge
scas
sub
js
aam
push
data16
mov
or
retf
js
mov
sbb
mov
popf
or
mov
scas
leave
pop
mov
movs
inc
jl
shl
xchg
or
push
jbe
call
add
les
pop
ss
jg
pop
add
cmps
cmp
cmp
test
push
sub
sar
mov
rcr
and
loopne
mov
cpuid
sub
pop
ret
je
scas
inc
jecxz
jb
xor
in
xor
and
mul
jle
xchg
in
push
sbb
mov
rcl
jae
or
fdivr
xchg
xor
dec
pop
sbb
cmp
adc
push
(bad)
repz
(bad)
pop
loopne
leave
neg
stos
(bad)
jne
lea
fidiv
in
mov
movs
cmp
sub
or
and
jo
aas
(bad)
pop
test
add
dec
sahf
push
inc
mov
xchg
cmps
sbb
adc
mov
ror
das
push
sub
stos
dec
out
jnp
(bad)
mov
sbb
ret
xchg
xor
or
sbb
call
stos
in
(bad)
mov
cmp
hlt
push
mov
icebp
pop
repnz
mov
xor
je
loopne
inc
mov
js
mov
or
jp
sub
adc
sub
cwde
scas
cmp
mov
cmp
into
push
dec
or
loop
das
pusha
xor
sbb
movs
out
jb
adc
stc
test
or
add
imul
adc
add
mov
mov
sbb
or
std
pop
sti
cmp
out
inc
stos
loopne
pop
icebp
fiadd
inc
(bad)
(bad)
lock
mov
sbb
scas
mov
jbe
in
mov
cmc
push
xchg
xor
push
imul
pop
das
inc
inc
call
es
push
outs
loopne
pop
gs
sbb
and
push
ss
or
(bad)
push
iret
pop
ret
js
sahf
or
js
push
shl
cmc
mov
jl
pop
push
aam
xchg
call
add
icebp
dec
push
gs
das
stc
lods
ss
push
mov
inc
js
ret
loop
aas
sbb
pushf
pop
pop
push
xor
in
int3
cwde
and
xor
iret
mov
test
iret
sbb
and
and
xchg
pusha
test
mov
inc
inc
sbb
xlat
jbe
add
mov
cld
out
dec
inc
lods
in
inc
int
cdq
std
test
lods
add
cmps
mul
loopne
fisub
and
mov
mov
mov
clc
push
or
xor
pop
es
mov
mov
xchg
outs
cmp
(bad)
mov
scas
iret
aaa
fwait
push
sbb
or
int
loop
fidiv
push
inc
data16
lods
cmc
or
fisttp
into
cmp
test
xchg
and
cmp
fs
aam
push
push
lods
push
pop
lahf
cmps
mov
sbb
and
and
pushf
mov
xor
shl
ja
sub
adc
jl
(bad)
in
lock
test
(bad)
lds
add
xchg
and
js
arpl
leave
push
out
and
jo
pop
push
adc
add
(bad)
mov
iret
push
pop
(bad)
adc
push
pop
mov
shr
jne
push
and
lahf
mov
rol
mov
ins
cmp
lods
iret
mov
ret
(bad)
retf
dec
lods
jl
and
add
cmp
in
arpl
xlat
cmp
inc
scas
or
lahf
sbb
sub
xchg
js
push
jmp
or
dec
cdq
push
dec
adc
inc
jae
mov
enter
pusha
sub
fld
push
cmp
adc
icebp
push
aas
repz
daa
mov
jns
push
call
mov
xchg
push
mov
popf
fstp
movs
add
mov
jne
lds
retf
xchg
mov
scas
out
push
fucomi
jae
outs
push
mov
pop
mov
mov
mov
xchg
push
ficom
and
test
mov
push
loopne
enter
dec
jne
adc
and
scas
outs
pop
es
shl
inc
add
rcl
(bad)
cmp
fmul
dec
sahf
cmp
mov
std
mov
jle
and
add
ficom
mov
out
out
sub
dec
mov
loope
or
xor
scas
jle
and
or
cli
out
stos
mov
mov
popf
fisttp
cmps
ins
int
test
(bad)
lock
xor
repz
(bad)
sub
add
cmps
repnz
js
xor
call
mov
and
or
test
ret
loope
test
fstp
sub
jb
fs
call
lahf
cmp
jae
or
arpl
sub
mov
call
pop
inc
sbb
dec
jno
or
cs
enter
xor
mov
loop
into
or
pop
add
pop
sub
adc
(bad)
cmp
repz
mov
or
mov
adc
xor
stos
adc
push
(bad)
out
fdivr
sub
dec
dec
add
repz
jne
pop
adc
xchg
addr16
adc
mov
ja
xchg
ficom
pop
push
movhps
dec
rcl
jb
push
xor
outs
dec
int
ins
xor
adc
inc
(bad)
call
mov
inc
pusha
dec
add
jmp
mov
fbld
out
ss
inc
frstor
arpl
movs
pop
dec
stos
inc
cmp
sbb
or
movs
into
loopne
(bad)
call
mov
push
bound
inc
inc
std
add
in
pop
in
mov
pop
or
scas
shl
scas
fsub
push
scas
(bad)
jo
dec
stos
push
cmp
mov
std
icebp
sbb
fadd
ret
out
gs
or
aas
nop
pusha
(bad)
out
jno
aam
sub
out
ss
sbb
nop
(bad)
jne
jecxz
or
cmp
stos
(bad)
fs
add
repz
fsubr
sub
je
scas
cmps
jne
jo
nop
imul
scas
inc
test
sbb
mov
rcr
sbb
inc
xchg
imul
out
push
adc
stos
je
nop
loop
out
jno
mov
je
imul
loopne
lods
fsubp
pop
test
loopne
scas
fsub
push
scas
fsub
jb
call
lods
mov
mov
icebp
push
ins
jecxz
lods
fsubp
push
sar
sbb
fsubr
bound
jmp
mov
xchg
lods
(bad)
mov
cmp
push
lahf
inc
fidiv
or
jl
stos
mov
(bad)
jle
push
movs
je
or
nop
xor
mov
lods
xchg
pusha
mov
jb
adc
ds
and
rcl
mov
stos
cmovo
fiadd
int3
lahf
mov
js
into
push
(bad)
hlt
mov
ds
dec
mov
adc
test
and
sub
mov
mov
idiv
xor
push
cmp
pop
push
pushf
xor
jae
or
add
mov
adc
or
clc
sub
mov
sbb
or
repz
shl
xchg
(bad)
scas
xor
adc
fdivr
add
mov
cmp
rol
popa
dec
out
fld
fbld
jge
push
ror
movs
jg
std
jecxz
(bad)
add
or
test
and
mov
fisub
pushf
cmp
call
mov
jle
call
je
xor
ja
add
lahf
div
add
cli
pmaddwd
mov
out
jns
and
sbb
jge
or
pop
gs
pushf
into
sbb
xor
fcomp
in
mov
inc
ret
iret
loope
sbb
jb
dec
dec
mov
push
jne
(bad)
mov
int3
xor
jno
xchg
stc
mov
add
adc
fs
mov
jg
cmps
xchg
mov
jne
pop
xchg
jne
xor
repnz
push
cmp
pop
fwait
or
call
bound
in
xchg
and
xchg
mov
sbb
xor
repz
push
inc
lods
sbb
fstp
xchg
and
xchg
and
(bad)
outs
les
dec
jae
xchg
rcr
out
lods
cmp
mov
add
into
add
cmp
and
popf
outs
(bad)
dec
out
xchg
dec
cmp
outs
jp
mov
sbb
sub
nop
lds
sub
sbb
ins
or
xor
(bad)
and
add
aas
adc
mov
mov
cld
cmps
mov
clc
xor
std
sub
arpl
daa
jecxz
xor
adc
inc
addr16
dec
in
rcr
inc
xor
movs
jle
lock
push
arpl
ja
pop
out
fldcw
(bad)
push
cmps
aam
push
lods
(bad)
push
scas
fsub
push
mov
mov
xchg
dec
mov
inc
mov
pop
add
scas
enter
fistp
pop
fwait
sub
jl
mov
inc
xor
pop
xor
and
lods
or
cmp
inc
cwde
add
mov
pop
xlat
les
cmp
pop
jno
cmp
mov
scas
mov
ret
inc
push
pop
sti
aaa
cld
or
jecxz
sub
inc
adc
(bad)
retf
sahf
and
(bad)
pop
and
push
adc
sar
cmp
xchg
pop
jmp
(bad)
std
(bad)
fisubr
(bad)
jge
ret
pop
ins
push
scas
enter
retf
out
or
mov
das
adc
loope
dec
inc
mov
sub
repz
xchg
arpl
jmp
sahf
loope
or
pop
outs
loope
add
mov
add
retf
and
xor
(bad)
shr
mov
and
fs
test
xor
int
(bad)
cdq
mov
cwde
int
sub
mov
jmp
mov
ins
in
inc
ds
sub
sub
data16
es
jg
mov
push
nop
mov
emms
push
jno
lahf
and
cli
les
fnstcw
adc
stos
and
cmp
aad
mov
jge
ret
and
mov
push
(bad)
sub
aad
mov
cmp
loopne
sahf
cdq
xor
pop
pusha
lock
lea
mov
sbb
mov
retf
sbb
pop
push
add
dec
mov
mov
fiadd
sbb
cmp
add
inc
movs
xlat
stc
push
nop
(bad)
out
inc
sbb
cmc
pop
cmps
js
lds
movs
or
sti
test
xchg
fwait
jl
jle
mov
mov
adc
fwait
imul
cli
and
shl
aas
out
loope
icebp
cmp
xlat
push
std
stos
ror
or
inc
loopne
add
in
es
repnz
lahf
test
pop
sbb
aas
mov
push
pop
inc
xlat
test
std
clc
jnp
pop
pop
and
pop
int3
mov
sbb
clc
jo
sub
or
push
sub
adc
rcl
mov
jg
mov
lds
popa
push
xor
jae
imul
inc
xchg
and
(bad)
(bad)
push
das
loop
data16
loope
clc
push
sub
adc
outs
mov
and
push
aaa
jle
into
xlat
dec
in
mov
sbb
(bad)
push
pop
push
sub
pop
cmp
popf
adc
clc
sub
adc
int
jno
add
mov
sub
aaa
pushf
adc
jmp
dec
mov
push
fstp
lods
(bad)
push
lods
fsub
push
cmps
fsub
push
scas
fsub
push
lods
cli
mov
xchg
mov
rcl
pop
sbb
push
scas
fistp
pop
and
xor
sti
pop
scas
xchg
cdq
push
pop
cmps
pusha
or
xor
out
push
xchg
adc
loope
popa
sbb
ins
or
xor
int
cwde
xchg
clc
retf
cmp
dec
xor
mov
mov
(bad)
lea
cli
aam
sar
test
cmp
in
mov
jno
fdiv
jmp
sbb
loope
bound
clc
jp
sbb
es
mov
mul
fnsave
fisttp
mov
fs
mov
push
sbb
in
ficom
stc
push
fs
push
or
xchg
dec
jecxz
xchg
movs
fadd
pmaxsw
mov
push
idiv
scas
mov
sub
addr16
xchg
retf
movs
fstp
pop
inc
mov
mov
or
movs
xchg
inc
push
add
dec
pop
push
js
scas
repnz
jnp
sbb
or
jae
adc
dec
retf
outs
adc
enter
aam
xor
stos
jbe
lods
repz
push
loop
push
jne
dec
scas
push
cs
push
and
inc
adc
pushf
or
and
mov
ja
xlat
xchg
cwde
cmps
inc
mov
(bad)
pop
pop
dec
dec
stos
mov
jnp
push
push
jmp
add
mov
loop
cmps
ds
push
fsub
lahf
dec
int3
sbb
mov
lock
add
test
pop
lahf
ja
xor
fxch
add
not
fstp
cmp
and
pop
jl
int3
test
shl
retf
push
repnz
cmp
push
fwait
lock
call
mov
add
sbb
pop
enter
cmc
mov
add
retfw
imul
sar
mov
out
jge
cmc
mov
cdq
jp
xor
retf
jo
cmp
inc
mov
inc
adc
push
popf
(bad)
stos
or
mov
leave
mov
repnz
jg
out
mov
(bad)
loop
out
add
js
sbb
mov
cdq
mov
push
mov
ins
pop
cmp
mov
jl
data16
adc
jmp
push
lock
jecxz
stos
fst
cwde
xchg
fimul
add
push
mov
sub
loope
and
jno
xor
and
mov
mov
xchg
dec
rcl
shl
mov
xlat
or
std
mov
add
mov
adc
stos
lods
cld
sbb
dec
stc
sahf
push
push
push
lods
cwde
into
sbb
pop
dec
pop
xor
mov
xlat
shl
sub
lahf
jo
jno
repnz
in
out
pop
fmul
out
sbb
cli
test
imul
dec
mov
xchg
xchg
je
cli
rcl
or
mov
add
mov
clc
std
jns
fld
(bad)
pop
(bad)
sahf
inc
dec
aas
leave
jb
leave
add
aas
pop
mov
sbb
data16
sub
or
xchg
or
ret
fwait
scas
jbe
js
outs
sub
inc
sbb
ins
dec
test
jp
jge
jns
test
sbb
shl
loope
in
push
xor
sbb
ja
retf
inc
dec
dec
stc
sub
call
xchg
pop
jno
pusha
fwait
xor
cmps
in
sahf
push
icebp
movs
sbb
sub
push
cmp
adc
fsub
addr16
pop
jmp
inc
lds
xchg
mov
scas
js
ds
imul
mov
jns
push
sub
fidiv
inc
ret
(bad)
and
(bad)
or
mov
cmp
xor
popa
push
mov
pop
pop
and
pop
or
bound
sub
sub
loop
push
loope
and
out
movs
shr
ins
arpl
fldenv
in
cmps
inc
adc
retf
sbb
clc
xchg
test
stos
mov
cmp
cli
movs
add
cmc
add
addr16
in
loopne
mov
push
es
mov
ret
mov
loope
sbb
in
mov
out
shl
(bad)
dec
push
pop
xor
push
nop
fisub
(bad)
cmp
add
movs
sub
std
movs
aad
jns
jnp
retf
cmc
clc
or
xlat
movs
cli
(bad)
movs
repz
pop
sbb
push
(bad)
sbb
push
bound
push
xchg
push
jo
enter
outs
outs
ins
mov
mov
dec
jmp
mov
add
popa
call
mov
daa
dec
and
int3
adc
out
jae
mov
in
aam
(bad)
pushf
xor
call
aas
push
or
push
ss
or
fild
jne
or
pshufw
in
sbb
call
adc
in
mov
fs
mov
or
pop
mov
cdq
ficom
rol
or
repnz
push
sub
movs
hlt
mov
jmp
dec
gs
push
cmps
stos
dec
adc
pusha
push
retf
pusha
xchg
mov
sbb
imul
pop
ins
inc
cld
dec
jl
dec
adc
or
sub
mov
std
pop
mov
cmp
xlat
hlt
pop
mov
sub
lods
sahf
mov
cdq
mov
dec
test
ins
mov
inc
div
adc
shl
inc
jecxz
xor
hlt
push
shl
inc
icebp
es
ins
shr
jnp
mov
mov
ficom
pop
pusha
sub
and
fisub
stos
movs
out
or
popa
jge
xchg
cmc
fucomp
inc
in
out
push
out
cmc
mov
loopne
jge
add
xchg
popa
imul
jmp
fisub
cmp
popa
inc
mov
mov
cmp
arpl
mov
lods
xchg
cmps
popa
mov
aad
cli
in
(bad)
icebp
push
push
mov
push
add
ja
into
sub
dec
loope
div
pop
xchg
mov
jb
dec
in
adc
xchg
std
pop
xchg
movs
(bad)
pop
add
and
push
std
shl
scas
adc
loope
xor
and
adc
push
out
hlt
loopne
dec
loopne
in
popf
fld
push
jb
ret
fsub
int3
push
(bad)
mov
int
dec
push
icebp
mov
push
sub
dec
lods
(bad)
jb
mov
add
(bad)
aad
adc
add
add
sti
test
addr16
cld
jno
xchg
mov
mov
ficom
jmp
mov
(bad)
(bad)
frstor
pop
sub
push
or
mov
cwde
int
xchg
scas
(bad)
int3
ds
cmps
(bad)
sets
dec
rcr
sub
add
and
das
push
mov
aam
mov
pop
scas
test
push
in
cmp
mov
sbb
add
scas
jecxz
sub
sub
inc
xor
jmp
and
adc
mov
(bad)
enter
call
fs
adc
fld
loopne
pop
add
add
inc
ror
xchg
addr16
add
add
hlt
stos
(bad)
fwait
iret
mov
sahf
test
or
pop
xor
adc
pusha
call
das
inc
xchg
add
aam
not
sub
and
(bad)
(bad)
and
popa
mov
dec
push
cmp
xor
daa
push
arpl
inc
xor
call
(bad)
lea
push
jg
out
mov
jle
mov
push
jecxz
in
dec
mov
cwde
inc
and
leave
add
jbe
repz
mov
xchg
je
push
out
xchg
mov
test
cld
cwde
mov
or
rcl
fsub
test
call
mov
jb
int
je
mov
or
and
pop
daa
push
jecxz
xchg
rcr
jne
enter
cli
out
in
hlt
xchg
cmp
mov
rol
mov
mov
sahf
leave
dec
shl
inc
mov
fdivr
xor
cmc
das
push
(bad)
xchg
add
push
xchg
pminub
js
jmp
js
jl
clc
mov
scas
sbb
fadd
les
dec
outs
push
lods
(bad)
push
fdiv
scas
es
push
sub
in
stos
fsubp
push
test
in
cmps
fsubp
pop
movs
enter
shr
inc
mov
int3
cli
dec
mov
(bad)
(bad)
jo
(bad)
ror
jl
cli
les
repnz
sar
(bad)
js
lock
scas
pop
loopne
cmps
shr
pop
movs
retf
mov
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
retf
fadd
inc
scas
mov
mov
stos
cli
loopne
mov
sbb
scas
loopne
push
lods
shl
push
scas
fsub
push
scas
fsub
push
scas
fsub
pop
scas
shr
inc
lods
fucomip
push
push
push
jecxz
lods
fsub
push
lods
(bad)
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
cmps
shl
pop
mov
fsubp
push
stos
clc
in
scas
fchs
cmp
arpl
aam
mov
and
pusha
adc
adc
fisub
nop
aas
imul
sub
mov
ins
jo
xor
mov
adc
fisttp
addr16
or
inc
xchg
lock
test
fdivr
push
mov
jmp
in
dec
adc
scas
aaa
out
int3
cmps
jl
pop
adc
loop
scas
inc
sub
in
jne
test
ins
sub
pop
into
(bad)
shl
div
(bad)
mul
leave
les
jg
inc
pusha
mov
fdivr
pop
cmps
test
xor
sub
mov
xor
add
or
mov
loopne
and
std
das
cmp
xor
pop
jns
mov
lock
icebp
adc
fmul
sub
adc
push
add
stos
sbb
mov
in
sub
inc
jno
jns
or
mov
pushf
loop
scas
shl
rcr
push
int3
jns
push
sbb
inc
jae
into
xor
aaa
mov
in
in
dec
movs
pop
imul
jge
and
rcr
imul
cmps
ficom
mov
mov
pop
outs
and
push
outs
loop
addr16
(bad)
aaa
mov
hlt
sti
jmp
daa
loope
pop
mov
imul
outs
cmp
add
cs
scas
test
fisubr
clc
push
lock
sbb
data16
jg
jmp
gs
push
sub
jp
ins
sub
xor
mov
xchg
mov
cmp
aad
push
pusha
mov
mov
shl
enter
push
mov
xor
ins
sub
(bad)
mov
and
pop
jns
and
xchg
and
sub
inc
mov
mov
mov
jg
push
in
outs
mov
daa
xchg
cmp
retf
mov
ja
test
xchg
and
les
or
mov
neg
rcr
mov
lahf
pop
sahf
inc
imul
xor
mov
jg
and
pusha
es
inc
sahf
xchg
sbb
jecxz
dec
xacquire
clc
inc
test
and
dec
mov
(bad)
cwde
pop
clc
fwait
test
hlt
mov
cdq
dec
sar
(bad)
imul
out
stos
(bad)
lock
or
push
push
retf
adc
out
js
sub
movs
jb
ror
clc
arpl
ret
lods
pop
xor
mov
jmp
scas
daa
fdiv
push
lods
fsubrp
push
test
loop
scas
fsub
push
cmps
shl
pop
lods
fsub
pop
mov
xor
int3
xor
mov
scas
sbb
repnz
lods
fsub
pop
stos
inc
lds
clc
pusha
pusha
cmp
inc
fmul
sub
mov
shl
push
(bad)
out
jns
or
push
aas
adc
mov
jo
push
mov
in
adc
dec
pop
icebp
mov
cs
pop
fidiv
xor
and
push
daa
cmp
and
stc
outs
ins
jg
sbb
out
test
xchg
pop
pop
rcr
dec
lods
addr16
xchg
add
sub
ins
add
push
mov
outs
ja
es
jbe
outs
test
xchg
data16
stc
sbb
jns
inc
inc
mov
iret
int
dec
push
xchg
repnz
sbb
sar
in
add
mov
push
jg
dec
add
ja
adc
inc
push
adc
xor
int3
jg
mov
push
cmp
(bad)
mov
or
jno
and
icebp
shr
jne
rol
jmp
inc
hlt
mov
xchg
mov
pop
inc
xlat
mov
adc
pop
outs
cmp
sbb
sbb
push
jp
inc
sub
inc
iret
cs
xor
jge
cmps
and
cmc
adc
loop
loopne
je
mov
shl
jl
data16
jbe
fdiv
nop
sub
lea
icebp
add
jbe
and
cmp
pop
retf
(bad)
popa
aad
js
int
mov
cwde
pusha
(bad)
clc
out
loopne
mov
(bad)
push
push
pusha
push
shl
clc
mov
les
repz
and
push
xchg
popa
dec
hlt
add
pop
cmp
add
push
or
dec
inc
mov
repnz
arpl
xlat
in
fisttp
js
mov
mov
int3
cmc
jecxz
mov
rol
leave
push
or
fs
xor
lods
sub
push
and
push
data16
or
jnp
sti
push
ja
mov
or
(bad)
daa
push
jbe
cmp
retf
fidivr
call
jle
in
mov
daa
call
xlat
or
aad
push
pop
popf
mov
dec
retf
sar
pop
pusha
inc
dec
(bad)
test
retf
out
movs
cld
pop
mov
inc
cmp
add
sahf
mov
xor
in
xchg
adc
and
mov
xor
fnstcw
lods
nop
push
fwait
mov
mov
test
xchg
dec
repz
bound
(bad)
push
mov
stc
sbb
xor
xchg
lods
xor
das
in
sub
pushf
dec
fistp
mov
push
cs
jb
jmp
int3
rcl
(bad)
mov
shl
nop
or
ins
scas
or
pop
jno
ds
mov
pop
rcr
or
cli
sub
dec
push
mov
mov
push
push
xlat
mov
dec
fimul
shr
fst
add
icebp
inc
pop
and
idiv
mov
push
retf
sbb
pop
add
push
imul
rep
mov
sahf
xchg
inc
div
or
call
pop
sti
ins
jmp
in
lea
xor
mov
mov
ret
lods
add
aaa
jle
lods
loopne
into
push
test
mov
adc
popa
pop
and
dec
inc
inc
jg
ins
inc
inc
sbb
cmp
jne
shr
sub
(bad)
gs
aas
cli
mov
sti
sar
xor
jns
stos
(bad)
sbb
int3
data16
push
xchg
mov
mov
and
(bad)
imul
loop
test
in
movs
(bad)
pop
scas
fsub
push
scas
fsub
push
stos
cli
in
cmps
cld
sbb
xchg
or
retf
cmp
adc
cmp
push
sub
fdiv
push
test
loopne
lods
sub
mov
repnz
sbb
fistp
in
mov
pop
movs
push
loop
enter
ins
lds
ss
xchg
add
push
and
lahf
push
pop
mov
enter
xchg
cld
loop
arpl
push
sti
mov
mov
xlat
mov
mov
mov
loop
add
sub
pushf
out
test
ret
xor
lds
xor
dec
mov
lods
stos
cmps
push
gs
add
mov
mov
fcom
xchg
pop
sub
sbb
or
mov
pusha
pop
out
data16
xor
stc
mov
mov
stc
adc
clc
inc
xchg
inc
mov
adc
mov
mov
mov
add
mov
dec
hlt
xchg
mov
xchg
leave
sub
add
leave
js
fist
cmp
and
and
fwait
sbb
mov
repnz
inc
test
and
adc
shr
push
inc
test
push
loopne
mov
int
mov
and
cdq
pop
test
sub
mov
mov
movs
(bad)
retf
sub
loopne
adc
ins
and
cmp
inc
out
adc
or
dec
push
add
outs
mov
fdivr
cmp
out
add
int3
(bad)
test
mov
and
test
inc
mov
cmp
adc
cdq
aas
cmp
or
pop
jp
test
inc
pop
inc
mov
cmp
lods
sub
std
retf
sbb
sbb
inc
mov
sbb
cmc
adc
push
pop
add
jmp
add
lahf
sbb
xchg
mov
pop
xchg
push
adc
jae
retf
or
leave
jmp
push
xchg
dec
rol
fnsave
sahf
add
mov
mov
stos
not
cmp
pop
mov
aas
mov
adc
xchg
mov
pop
add
cmp
jp
mov
cli
cwde
jle
lods
mov
push
push
jle
pop
in
stc
les
mov
in
or
lods
cmp
icebp
leave
mov
cs
call
sub
jnp
in
xor
js
add
and
into
lea
ds
pusha
gs
scas
sub
scas
ss
fisttp
mov
jge
push
inc
mov
jge
mov
mov
add
pop
mov
scas
mov
push
stos
(bad)
push
test
out
pop
cmps
fsubp
push
scas
fsub
push
stos
fsubp
jb
shl
push
retf
pop
xchg
loopne
dec
cwde
adc
mov
test
dec
es
push
mov
cmps
loopne
cmp
mov
call
loope
dec
test
and
addr16
mov
lea
jae
xchg
or
mov
sub
mov
mov
test
adc
cmps
push
pop
inc
lock
imul
loop
scas
sbb
mov
lds
arpl
ins
mov
(bad)
jmp
pop
jg
imul
cs
pusha
cmps
adc
out
or
xchg
add
xlat
or
mov
pop
retf
rcl
jmp
loope
mov
pop
jae
adc
xchg
mov
dec
call
cmp
(bad)
cs
pop
into
pop
mov
outs
dec
shr
sbb
push
hlt
dec
lock
adc
stc
or
sbb
addr16
cmp
jg
ret
pushf
push
pop
jns
xor
adc
jns
pop
xor
jg
pop
(bad)
sar
and
test
push
mov
sbb
pop
fstp
dec
pop
les
sub
mov
push
cmp
pop
mov
push
fnsave
test
xchg
sar
push
sub
in
pushf
xchg
rcr
leave
ror
jae
jae
out
jo
jae
lahf
push
cmp
jo
cmps
push
lea
pop
push
xchg
fs
push
rol
idiv
and
mov
outs
sub
cmps
cmps
movs
cmps
and
xchg
mov
sbb
mov
in
movs
pop
jo
xor
sub
retf
adc
lahf
jge
cmp
call
jb
pop
addr16
call
mov
push
jp
pusha
or
loope
enter
imul
dec
push
xor
dec
out
(bad)
fsub
test
jp
sub
inc
aas
dec
xchg
push
add
std
fild
sub
push
cmps
fwait
push
xchg
pop
push
and
mov
cli
imul
movs
les
xchg
daa
cwde
ret
xor
jmp
fld
mov
mov
mov
jae
push
(bad)
addr16
adc
imul
push
inc
sbb
ins
mulps
push
mov
xor
aas
pop
mov
inc
sbb
fdiv
pushf
cmp
and
adc
outs
mov
and
into
stos
mov
mov
inc
jg
push
jbe
sub
mov
sbb
or
dec
and
test
repnz
xchg
movs
enter
fild
or
fistp
jl
jb
mov
push
xor
adc
(bad)
lock
xor
test
sbb
add
loop
in
in
push
jp
push
jmp
add
push
push
jp
ror
mov
xchg
inc
pop
mov
arpl
jecxz
push
lea
xchg
cmps
retf
jns
push
outs
jb
inc
repnz
pop
dec
pop
pop
jge
test
js
sub
jle
loope
imul
dec
mov
repz
mov
es
and
and
xchg
pusha
aam
ffreep
ins
and
rcr
dec
fs
mov
jns
pop
pop
mov
clc
jo
lods
into
or
ror
and
mov
pop
js
adc
xchg
xchg
pop
mov
mov
mov
(bad)
stos
jp
sbb
inc
popf
test
fld
test
xor
shl
clc
(bad)
in
add
sar
fild
fdiv
sub
imul
cmps
sub
cmp
in
popa
call
add
or
add
xlat
pop
aas
sub
fs
(bad)
movs
call
push
mov
or
test
mov
fsubr
loopne
lea
call
jno
fcom
test
scas
adc
std
jp
ret
xchg
add
scas
repz
neg
hlt
lds
je
ror
or
jne
xchg
dec
push
xchg
jb
js
inc
inc
pushf
aas
repnz
jp
ds
add
gs
out
mov
outs
xchg
jge
aaa
fbstp
dec
and
pop
pusha
sbb
fcomp
mov
inc
daa
jecxz
jb
sbb
out
(bad)
jbe
imul
dec
arpl
dec
iret
sbb
daa
ret
cmc
ret
loope
mov
arpl
jb
cli
rcr
leave
leave
xchg
(bad)
cmp
mov
and
dec
inc
xor
jo
(bad)
push
test
in
mov
fsub
push
lods
fsub
pop
scas
cli
call
xor
retf
clc
movs
xor
fcmovnb
adc
sbb
jnp
xchg
xor
cmp
xlat
or
out
jmp
or
lods
(bad)
pop
rcr
push
int
jg
aam
push
mov
sbb
mov
xor
and
pop
in
add
sbb
out
int3
std
pop
cmp
inc
or
xchg
in
sbb
(bad)
std
icebp
push
pop
and
push
stc
push
mov
pop
jo
xchg
loopne
ret
pop
jne
gs
cdq
add
or
inc
adc
loop
push
mov
int
dec
js
inc
pop
(bad)
hlt
hlt
xchg
xor
not
js
in
jno
pop
fmul
out
cwde
fmul
adc
int
(bad)
mov
test
addr16
mov
sub
inc
push
xor
ret
cmps
pop
ins
jecxz
sub
jo
xchg
pop
(bad)
pop
not
repz
xor
cld
dec
and
fld
sbb
pop
popa
push
hlt
sar
add
jae
test
mov
sub
leave
sbb
inc
cwde
retf
je
ds
push
push
in
shr
sbb
jae
sbb
imul
and
mov
xor
test
sub
jle
adc
sbb
daa
jecxz
mov
mov
dec
xchg
ins
sbb
jge
adc
pop
sbb
push
not
push
mov
stc
jg
sbb
xchg
fwait
pop
loope
push
shr
clc
out
dec
xor
ds
aaa
popf
rcr
int
or
lahf
adc
hlt
sbb
push
in
add
push
push
punpcklwd
in
dec
and
cmp
adc
cmp
das
retf
xor
clc
aad
bound
int
cmp
fist
mov
repnz
jecxz
and
fisttp
push
jns
sub
in
iret
popa
mov
outs
xchg
xlat
jle
and
add
jge
dec
and
arpl
jl
or
mul
or
fwait
in
cmp
stos
pop
test
ja
jo
aad
add
cld
jbe
push
sbb
push
add
cli
adc
jns
lods
ret
jnp
aad
and
cmp
xchg
jno
dec
adc
push
jbe
inc
dec
les
jg
lds
push
inc
xor
shl
mov
cs
nop
push
ret
pusha
std
pop
pusha
scas
mov
test
retf
scas
mul
les
in
push
fisttp
shl
movs
xchg
es
mov
adc
sbb
mov
jnp
(bad)
loope
dec
(bad)
mov
in
sub
in
pop
xor
cmp
xor
xchg
inc
test
movs
inc
into
ret
mov
push
iret
(bad)
cmp
test
sub
les
(bad)
cmp
lds
mov
inc
jno
test
adc
mov
retf
(bad)
cmp
cwde
loop
xor
(bad)
adc
cmp
lods
and
aad
jl
pop
pop
loopne
adc
fistp
or
imul
cmp
adc
jg
push
sub
ja
xor
aas
mov
pop
add
dec
pusha
add
out
fcmovb
jbe
lds
outs
and
or
rol
xor
out
test
xchg
mov
mov
jmp
xchg
mov
mov
in
fwait
jg
lock
push
mov
mov
pop
mov
loopne
sahf
cmp
push
shl
xchg
daa
and
push
sbb
add
loope
sub
leave
aas
pop
cmp
or
sbb
pcmpgtd
jno
inc
outs
je
and
outs
imul
add
cmp
fdivr
sbb
lods
sbb
mov
xor
dec
ret
xor
jne
dec
inc
stos
hlt
jecxz
fisttp
sbb
sbb
cmp
addr16
dec
daa
ss
jo
lods
xchg
into
pop
push
push
or
aam
mov
mov
cmps
add
push
mov
xchg
sub
mov
pop
jo
sbb
loopne
pop
mov
push
and
sbb
outs
fisttp
out
or
or
jo
jb
gs
and
mov
or
adc
sbb
mov
pop
mov
jmp
mov
cmp
push
jne
ret
and
cmovbe
and
scas
or
fnstsw
stos
shl
cmps
repz
call
pusha
adc
mov
or
std
test
push
lods
or
in
hlt
lock
int3
into
jnp
mov
in
mov
push
inc
jge
stos
inc
fst
mov
nop
aas
scas
scas
rol
or
jle
mov
pop
int3
dec
or
stos
mov
fstp
aas
adc
test
popa
mov
jno
test
cmp
popaw
pop
sbb
push
lea
psubusb
xchg
cmp
cmc
aad
pop
mov
rol
div
and
or
mov
add
xchg
out
(bad)
out
nop
sbb
jecxz
sub
aaa
mov
in
jecxz
jnp
dec
leave
inc
bound
sub
and
cmps
add
clc
xchg
cmp
sbb
adc
add
or
fbstp
bound
adc
enter
and
push
dec
jmp
cmps
xlat
lods
(bad)
cmc
les
js
movs
xor
mov
xor
add
rol
jae
leave
sbb
inc
add
cmp
(bad)
xor
sbb
mov
xchg
or
fwait
test
fwait
loopne
pusha
jg
and
not
dec
sbb
jecxz
scas
cmp
sub
and
jmp
test
jp
and
xchg
std
pop
xor
push
loop
pop
fs
fsubr
sub
mov
popa
mov
mov
mov
jne
ret
mov
popf
dec
pusha
dec
push
add
out
out
pop
stc
or
dec
in
sbb
add
pop
push
pop
adc
loopne
jno
inc
jae
mov
ror
gs
scas
xchg
push
test
ja
inc
in
mov
movs
shl
adc
add
jmp
jl
outs
cwde
jge
aad
xchg
sub
adc
push
mov
mov
les
test
and
loopne
div
inc
dec
push
ficom
repz
jle
cmp
enter
sub
jae
or
push
aad
jecxz
mov
daa
dec
test
fimul
(bad)
cli
les
ret
retf
jns
mov
or
ret
sub
push
fnsave
clc
inc
pop
loope
sbb
mov
or
jae
inc
mov
stos
and
ror
in
ss
sub
cmp
dec
cmp
mov
add
jge
adc
loope
ss
sub
je
hlt
mov
outs
push
clc
movs
retf
mov
outs
pop
outs
jnp
jne
clc
shl
in
sbb
jbe
jne
mov
adc
mov
xor
xchg
shl
imul
das
xchg
pop
shl
inc
into
das
in
das
cmps
jle
jecxz
mov
dec
or
xor
rol
pop
lods
push
test
cmp
pusha
pop
ins
(bad)
repnz
xchg
and
sub
dec
add
or
mov
and
or
mov
and
ins
inc
xchg
outs
mov
dec
in
stos
xor
and
or
std
mov
js
(bad)
jne
fnstcw
pop
imul
jmp
js
scas
cmps
or
pop
idiv
inc
jns
xor
and
movs
pop
mov
aam
xor
int
inc
aaa
inc
fistp
xor
dec
push
adc
stos
inc
xchg
outs
pop
aad
scas
jne
sub
cmp
push
xor
rol
push
push
cmp
mov
mov
add
sbb
loope
inc
dec
dec
ror
or
adc
ret
jge
gs
sbb
aaa
es
dec
sbb
pop
outs
add
xchg
pop
jb
or
inc
mov
std
test
push
(bad)
xor
mov
sub
(bad)
stos
mov
popa
adc
ins
retf
(bad)
loop
ficomp
outs
push
xchg
jae
lea
mov
ret
or
inc
sti
pop
arpl
das
jne
dec
and
jmp
push
mov
fld
(bad)
mov
retf
scas
sub
or
das
inc
stos
mov
test
arpl
int3
cmp
popf
push
loopne
in
jmp
loope
xchg
mov
inc
fmulp
lock
or
sbb
add
xor
jmp
mov
fnsave
mov
ds
xchg
imul
mov
pop
shl
fcomp
or
imul
repz
and
and
mov
inc
out
cld
xor
ins
push
xchg
fwait
jbe
jo
sub
mov
mov
xchg
out
mov
xlat
(bad)
popf
sbb
jge
pop
(bad)
ds
inc
add
dec
mov
adc
xor
push
sbb
fadd
jae
fst
mov
xchg
or
repz
push
ror
shl
ins
retf
jns
jbe
out
dec
jp
in
xchg
jb
stos
outs
mov
aas
inc
jecxz
or
pop
cmp
mov
test
arpl
and
mov
data16
push
div
test
mov
loop
bound
mov
mov
fs
xchg
repz
data16
imul
(bad)
repz
loopne
adc
std
or
ret
test
movs
popf
xor
mov
adc
ins
mov
in
dec
cs
or
cmp
or
or
fld
cmp
pop
(bad)
cmp
xchg
test
ja
std
cmp
xchg
xor
test
ss
out
sti
addr16
dec
adc
sbb
fisubr
add
xchg
mov
sbb
and
dec
and
fild
xchg
push
test
xor
pop
std
sbb
or
ins
fst
fldcw
sub
call
scas
lock
jecxz
add
std
mov
mul
mov
test
stc
xchg
dec
xor
scas
lea
pop
in
pop
jle
xchg
es
lods
in
inc
push
(bad)
cld
cwde
mov
dec
sahf
jb
inc
add
sbb
dec
pop
add
sub
mov
sbb
cmps
pop
scas
daa
fsubr
push
stos
fsub
push
scas
fsubp
push
scas
fsub
push
lods
cli
mov
xchg
dec
fcmovb
jno
fwait
adc
sbb
repnz
lods
fsub
cs
and
cmp
loopne
xchg
in
(bad)
scas
dec
mov
jge
gs
test
dec
cli
add
or
xor
(bad)
mov
inc
xchg
add
xchg
inc
ins
stos
ins
enter
push
or
pop
xchg
pop
movs
push
mov
fdivp
adc
and
daa
call
lock
adc
div
lock
fcom
retf
fs
loopne
gs
jecxz
ret
jne
mov
dec
mov
sti
sti
mov
fdiv
ins
mov
ss
xlat
and
dec
imul
xchg
(bad)
into
or
out
dec
or
icebp
popf
pop
jg
pop
and
cli
(bad)
leave
repz
mov
pop
aam
call
inc
repz
sub
stos
test
lods
outs
sbb
(bad)
scas
nop
push
jg
or
dec
hlt
out
cmp
test
pop
not
push
dec
add
pop
(bad)
pop
dec
es
jb
mov
mov
dec
xlat
pop
pop
icebp
pop
test
loope
sub
addr16
dec
lea
sub
ficom
enter
imul
iret
xchg
jne
pop
in
loopne
dec
ja
push
and
mov
cmp
clc
push
inc
pushf
(bad)
in
lahf
cld
mov
sbb
xchg
loope
shl
repnz
mov
pop
into
lahf
jecxz
repnz
pop
out
ins
icebp
cmp
xchg
fbld
cli
sahf
ds
xor
popa
dec
shr
(bad)
outs
test
mov
mov
jecxz
outs
fisub
xor
lds
int
pop
xor
mov
cmp
es
xchg
cmps
pop
mov
push
leave
cmp
push
xor
cmc
mov
push
iret
pusha
imul
shr
adc
(bad)
mov
mov
sbb
jge
dec
hlt
and
aas
(bad)
cmc
stos
ficom
loope
and
fld
push
pop
icebp
fdiv
mov
mov
dec
pop
stos
not
scas
push
mov
int
sbb
dec
lods
call
and
inc
sbb
cmp
retf
or
in
push
lods
mov
ss
ror
cdq
add
ss
(bad)
jbe
enter
mov
mov
pop
fcmove
cld
loopne
ret
shl
pop
bound
aaa
mov
ds
dec
test
es
fs
pop
xchg
data16
add
mov
sub
ds
cmp
bound
fdiv
dec
loop
fs
pop
and
xchg
mov
pmaddwd
retf
dec
sub
jo
ret
daa
call
sbb
inc
je
push
into
xchg
and
neg
push
cmp
mov
or
pop
push
ins
retf
push
(bad)
xchg
pop
and
outs
and
jno
(bad)
out
loopne
stos
push
cdq
ror
push
mov
je
out
outs
call
in
call
xor
in
mov
pop
xchg
or
push
mov
in
sbb
jno
mov
iret
ss
sti
sbb
cmps
bound
and
cdq
dec
outs
cdq
rcr
add
lahf
inc
(bad)
jb
iret
(bad)
cmp
xor
aad
and
repz
fild
mov
add
or
or
sub
push
pop
outs
retf
dec
xlat
and
mov
mov
mov
fwait
xchg
data16
jns
inc
mov
rcr
test
pop
push
call
mov
mov
push
(bad)
call
daa
sub
cmp
es
sahf
daa
xchg
pop
cmps
or
cmps
aam
adc
pop
js
pop
mov
inc
fs
push
ins
pop
inc
retf
mov
inc
sub
xchg
add
aad
std
and
sub
xor
jg
fistp
mov
xlat
pop
add
mov
sbb
adc
push
sub
cmps
sub
icebp
inc
out
mov
loop
lock
mov
push
ret
xchg
adc
sbb
xchg
jmp
cmp
cmps
xchg
ds
repnz
sub
loope
jl
fmul
sbb
mov
jnp
rcl
sbb
stos
inc
sub
loop
int3
outs
int3
mov
retf
jne
inc
mov
xchg
fs
add
cdq
xchg
inc
pop
cmps
inc
jae
mov
and
add
xchg
mov
and
or
and
inc
loopne
pop
sbb
xor
and
pop
sbb
push
fstp
push
(bad)
cld
mov
inc
enter
pop
test
imul
je
pop
pop
pop
jg
inc
scas
and
pop
push
mov
mov
inc
push
fst
push
cs
or
shl
js
enter
stc
push
mov
adc
imul
mov
(bad)
dec
or
sti
in
mov
cdq
movs
jae
jp
outs
sahf
daa
movs
cmps
dec
lock
cmp
push
xchg
cmp
pop
xor
sbb
(bad)
int3
into
and
mov
push
sub
movs
inc
fild
into
js
shl
in
out
out
loope
jg
loopne
lods
jecxz
jle
jb
push
push
loopne
mov
sbb
add
leave
aad
xor
xchg
sbb
pushf
enter
ror
retf
push
or
outs
jmp
dec
mov
or
into
sbb
fadd
adc
frstor
sar
sub
xor
ds
stc
test
loop
lods
cwde
push
jne
jge
jge
and
outs
pop
int3
retf
mov
push
lea
loopne
mov
pop
call
int
xchg
xor
in
fs
cmp
aad
push
ret
mov
(bad)
mov
and
dec
(bad)
sti
pop
mov
iret
mov
ret
iret
cmp
or
dec
das
dec
pop
jno
(bad)
jg
ins
(bad)
xlat
repz
jecxz
sbb
ds
inc
test
iret
in
and
daa
ret
mov
inc
rcl
inc
repz
stos
bound
lods
push
add
sub
mov
sub
mov
aaa
inc
mov
std
les
stos
cmps
jb
adc
xchg
fcomp
js
inc
aas
inc
mov
mov
sbb
(bad)
shl
test
aaa
inc
jl
dec
lods
cmp
popf
cld
aad
xor
mov
outs
mov
ror
jae
adc
cmp
sahf
dec
push
or
(bad)
lock
push
mov
mov
retf
lahf
lds
cmps
aam
test
mov
mov
int3
sahf
add
sbb
xchg
int
(bad)
dec
push
sub
sti
add
and
sub
pop
xor
add
mov
ins
jecxz
test
loop
scas
fsubp
push
scas
clc
mov
std
jno
mov
aaa
into
mov
push
je
nop
jbe
ss
jno
mov
jne
mov
mov
sti
mov
aaa
jg
mov
fldenv
outs
and
imul
sub
jne
jnp
int
mov
add
mov
test
inc
test
push
je
cdq
sub
lods
jno
inc
sbb
jne
xchg
fsubr
(bad)
sbb
push
scas
fsub
push
test
call
push
scas
fsub
push
scas
cli
mov
xchg
dec
fcmovb
adc
fwait
adc
sbb
repnz
test
loopne
mov
jge
stc
mov
addr16
unpcklps
cli
test
and
sbb
adc
into
call
push
sahf
enter
sub
cmc
(bad)
div
dec
mov
outs
xchg
add
das
fnsave
movs
es
dec
dec
jecxz
pop
iret
sbb
es
(bad)
mov
pusha
(bad)
add
cmp
inc
ins
inc
cwde
aas
xor
inc
test
or
xchg
push
and
jne
mov
test
(bad)
inc
stos
cwde
sar
or
xor
xchg
scas
je
jp
mov
adc
fist
dec
or
stc
add
mov
mov
mov
aad
push
jp
xchg
mov
dec
stos
push
dec
cmc
dec
in
int3
jae
test
jle
sbb
mov
(bad)
jg
adc
scas
xchg
jbe
adc
in
xchg
add
mov
shr
mov
or
js
pop
out
inc
jmp
inc
test
nop
xor
ja
mov
into
test
push
jno
hlt
into
test
daa
popa
inc
(bad)
xchg
sbb
mov
inc
sub
inc
dec
loop
xchg
mov
scas
jno
rol
fcom
std
mov
lods
jmp
rcr
fidiv
add
or
xor
jns
scas
sbb
sti
lods
in
inc
es
into
cmp
lock
in
jle
std
xlat
ret
dec
(bad)
dec
cmp
xor
cmp
mov
inc
(bad)
dec
cli
pop
imul
xchg
and
das
lds
mov
out
ficom
div
dec
push
ja
adc
jl
(bad)
jns
pause
and
icebp
ins
gs
(bad)
pop
or
jno
mov
out
not
cmp
and
gs
test
add
ret
pop
mov
mov
sub
test
lahf
clc
xchg
pop
loope
(bad)
scas
add
mov
and
stos
jmp
ret
(bad)
sahf
add
cmp
lea
xchg
jp
jae
xlat
call
jp
mov
lea
add
mov
icebp
pop
ds
rcl
push
add
cmc
pushf
push
sub
iret
retf
das
pop
ss
dec
dec
mov
cmp
jle
or
fucom
mov
ins
ds
sbb
and
in
mov
xor
arpl
xor
add
enter
jge
hlt
mov
push
clc
loop
in
push
push
stos
push
sti
inc
movs
cmps
xor
push
fcomp
scas
mov
push
scas
(bad)
push
test
out
lods
fsub
push
scas
fsub
push
mov
mov
mov
fwait
shl
jp
mov
mov
jecxz
lods
fsub
push
sar
push
fisttp
dec
aad
in
jge
push
sbb
(bad)
cwde
inc
gs
sbb
repnz
pop
test
jmp
lea
mov
push
inc
fwait
test
popf
mov
loop
add
mov
rol
sar
or
xchg
jb
in
icebp
cmp
scas
pop
mov
or
add
sbb
inc
sub
mov
out
scas
hlt
fnsave
unpckhps
mov
hlt
push
js
shl
leave
sbb
shl
inc
(bad)
out
rol
mov
pop
jecxz
or
in
xchg
mov
mov
or
inc
cs
dec
jmp
pushf
sbb
jl
lock
loop
shl
repz
fs
add
in
xchg
sar
mov
mov
(bad)
pop
mov
shr
push
repnz
in
ret
adc
dec
xor
fsubrp
mov
push
cmp
movs
xor
pop
xchg
mov
cmps
cmps
(bad)
fcom
xchg
push
icebp
retf
jl
retf
lahf
popa
in
cmps
mov
and
adc
iret
ror
mov
outs
push
pop
add
ret
cmp
lods
ss
xor
push
scas
scas
icebp
retf
shl
icebp
inc
imul
xor
lock
fbstp
enter
mov
std
mov
sar
xchg
loop
leave
dec
pop
cmc
mov
sub
pop
inc
add
mov
inc
xor
imul
push
sub
pop
retf
or
xchg
call
rcr
dec
lds
repnz
sbb
js
xchg
lods
or
sub
(bad)
(bad)
retf
mov
sbb
mov
(bad)
jne
lea
inc
xor
push
xchg
push
lods
into
dec
int
fild
es
call
ret
and
lock
bound
add
test
hlt
arpl
popf
popf
int
or
fs
xchg
ret
jecxz
add
stos
js
mov
jno
popa
lds
lods
sbb
dec
xor
cmp
pop
and
inc
lea
pop
inc
gs
inc
adc
fstp
mov
dec
das
inc
test
or
jg
jne
icebp
mov
add
xor
or
cwde
cmp
test
sbb
inc
cmp
fadd
cdq
(bad)
push
test
mov
mov
and
xor
(bad)
iret
sbb
mov
in
jb
scas
repnz
lea
mov
xor
shl
xchg
mov
pop
(bad)
div
retf
ds
push
jle
pop
xor
xchg
out
cmc
fwait
or
xchg
jo
xor
sub
xchg
cmps
imul
add
sub
xchg
(bad)
cmp
test
in
adc
pop
mov
add
cmp
in
pop
xor
popf
or
cmp
popf
ss
lahf
iretw
in
ret
add
dec
pop
(bad)
shr
aad
aam
imul
or
jle
jbe
dec
and
repz
cs
sar
fcmovne
adc
sbb
jle
mov
and
and
test
adc
retf
inc
(bad)
jmp
mov
mov
push
mov
test
xchg
loop
cwde
and
fcmovbe
inc
inc
dec
jecxz
std
scas
(bad)
in
mov
out
ss
inc
fiadd
pop
jle
(bad)
ret
adc
or
cdq
mov
jbe
push
popf
push
xchg
ins
dec
data16
sbb
push
and
in
je
sbb
stc
test
adc
test
sub
jnp
mov
loop
jns
pusha
jecxz
or
lahf
dec
or
pop
mov
mov
(bad)
add
or
movs
lock
ds
loopne
dec
inc
push
std
sub
out
fs
push
jns
pop
cli
popa
jo
inc
jle
ficomp
hlt
mov
inc
je
cmp
cmc
add
les
mov
es
scas
mov
sub
iret
dec
in
pop
xor
stc
sbb
mov
mov
in
ss
cmp
rcr
lds
or
xchg
aam
inc
xor
(bad)
mov
cmps
(bad)
(bad)
xchg
repnz
gs
mov
add
das
repz
jmp
pop
mov
mov
xor
fnstcw
sub
aaa
dec
leave
movs
pop
adc
sar
shl
adc
popf
xor
fnstcw
fprem
push
add
bound
pop
pop
cdq
addr16
sahf
push
test
xchg
dec
test
movs
push
loopne
pop
test
push
push
loope
or
sub
jmp
sti
cmc
mov
dec
or
shl
ss
xchg
rcr
pop
or
in
dec
pop
or
xchg
adc
xchg
xor
pop
inc
push
xor
sub
dec
cmp
xchg
outs
mov
les
jle
fisub
(bad)
aad
aam
add
popa
sbb
cld
sbb
ja
ret
and
iret
out
mov
mov
pop
xlat
arpl
pop
ja
pop
jbe
scas
scas
mov
fwait
jnp
ror
adc
es
(bad)
xchg
mov
pushf
mov
pop
mov
and
mov
mov
jge
lahf
push
push
jecxz
mov
loopne
test
out
cmps
fsub
push
scas
fsub
push
scas
fcmovb
push
in
mov
mov
xor
fdiv
push
lods
fsub
mov
jno
jecxz
rcr
lods
mov
jmp
dec
xchg
repnz
push
outs
add
xor
(bad)
retf
inc
shl
imul
push
scas
int3
mov
dec
cmp
mov
fstp
(bad)
pushf
mov
add
xchg
mov
pusha
inc
push
ja
std
push
repnz
xchg
or
mov
add
adc
nop
pop
adc
xchg
cdq
adc
(bad)
mov
and
or
adc
mov
rol
and
mov
ss
in
gs
pop
dec
fwait
retf
dec
push
jl
js
imul
mov
mov
in
push
push
xor
movs
out
sahf
sub
cmp
sbb
pop
fnstenv
jge
rcl
push
test
jmp
aaa
js
xor
cli
int
add
(bad)
(bad)
es
mov
inc
lods
push
stc
or
movntps
lods
cmp
(bad)
pop
cs
clc
fidivr
and
sbb
fcomp
aas
fucom
bound
test
jecxz
ret
mov
js
scas
out
xlat
(bad)
cdq
jae
fs
inc
xor
scas
sbb
inc
pusha
fild
ins
push
sbb
addr16
scas
push
outs
imul
mov
adc
ja
cwde
jg
mov
movs
int3
jnp
int
popa
retf
jns
mov
xchg
push
xchg
movs
jb
push
(bad)
push
shl
(bad)
dec
out
cld
fwait
scas
and
in
pop
imul
jmp
xchg
dec
shufps
xchg
fsubrp
gs
inc
jmp
sbb
hlt
or
push
inc
mov
add
jbe
test
pop
loop
shr
ins
xor
mov
pop
add
push
data16
ret
cmp
pop
xor
sbb
cmps
and
adc
das
xchg
xor
dec
fisttp
rol
or
pop
mov
cdq
and
push
dec
fmul
ret
inc
cmovnp
sbb
or
or
inc
jmp
fstp
cmp
cmp
mov
adc
jb
rcr
icebp
pushf
fdivr
jb
fld
ins
pop
cmp
mov
mov
sub
call
cld
mul
out
cmps
xchg
int
jmp
repz
inc
out
push
(bad)
not
out
dec
xlat
ins
and
pop
scas
xchg
fwait
sbb
fincstp
mov
mov
xchg
push
stos
je
fdecstp
in
push
js
retf
imul
add
xor
jbe
fidiv
mov
test
jmp
pop
xor
mov
aam
dec
scas
ror
call
jns
inc
xchg
mov
into
rcr
dec
adc
pop
add
cld
fucom
shr
mov
out
dec
add
mov
mov
scas
xor
icebp
sbb
inc
mov
rol
adc
cmps
fild
ins
push
into
jg
pop
mov
and
(bad)
enter
xor
mov
iret
and
std
mov
or
pop
xor
ins
sub
shr
outs
adc
leave
adc
sbb
push
hlt
fldenv
int3
pop
dec
cmp
adc
(bad)
mov
inc
jbe
jg
pop
pop
sti
or
sti
adc
ret
js
dec
pop
pop
and
jno
cmps
inc
adc
lea
pop
mov
gs
ret
bound
rcr
and
outs
inc
popa
(bad)
pop
enter
outs
mov
or
shl
xor
fsub
out
jns
push
xchg
mov
imul
sbb
in
(bad)
mov
popf
xchg
imul
add
shl
dec
push
cld
jmp
aas
pop
push
pop
loopne
cld
stos
daa
pop
pop
xor
jle
xchg
cwde
sar
adc
leave
and
mov
cmp
xor
in
(bad)
jg
xor
imul
ins
dec
add
push
aam
sti
sar
xor
inc
mov
out
clc
imul
imul
(bad)
or
cmc
les
push
jno
sub
pop
fwait
jmp
xchg
mov
cmp
mov
mov
dec
mov
movs
pop
mov
cmc
gs
mov
out
cwde
add
jle
outs
js
ja
cdq
(bad)
or
pop
jl
fs
rcl
mov
imul
pushf
xor
adc
or
push
mov
lds
int3
dec
fadd
pushf
movs
inc
jp
xor
push
xchg
pop
clc
or
pop
push
xor
loop
in
add
stos
jl
sub
lods
scas
js
outs
pushf
mov
iret
sahf
frstor
or
mov
pop
inc
mov
(bad)
int
mov
push
js
(bad)
lock
std
mov
les
mov
adc
mov
cmovno
pop
clc
out
aam
enter
(bad)
cmp
dec
fld
ins
xchg
outs
(bad)
div
xor
jnp
mov
and
stos
push
add
or
aam
ror
and
in
and
pop
mov
dec
push
or
jle
test
pop
movs
mov
scas
lock
jmp
sbb
(bad)
sub
and
loop
clc
pop
mov
leave
or
fsin
outs
mov
mov
xor
push
out
mov
push
rcl
jae
hlt
mov
stc
cmp
out
jle
cmp
test
gs
(bad)
fdivr
pushf
pop
xor
(bad)
stc
(bad)
or
call
jo
dec
mov
mov
cmc
xor
xchg
arpl
mov
fadd
jmp
out
cmps
dec
jmp
jg
pop
cmp
jg
mov
loop
dec
(bad)
jae
mov
arpl
call
ja
cmp
push
lahf
(bad)
push
fadd
retf
xor
sbb
retf
push
pmullw
fdivp
retf
pop
stos
repz
aam
bound
inc
aam
rcl
lock
outs
or
test
sub
adc
xchg
inc
je
adc
push
push
daa
pusha
stos
(bad)
shl
xchg
push
retf
jo
ja
inc
lds
push
lods
jo
mov
shl
scas
shr
dec
jle
imul
fidivr
call
and
xchg
sbb
out
jbe
jae
es
enter
jb
mov
xor
fisub
jle
aad
mov
sbb
cmc
sub
and
adc
sbb
sub
add
xchg
mov
inc
mov
fstp
sub
outs
pop
gs
pop
sub
sbb
mov
ss
shl
movs
xchg
ins
je
push
daa
fwait
adc
or
ror
xor
fcmovu
inc
ficomp
push
mov
leave
inc
mov
loopne
sbb
sbb
aaa
sbb
fnstcw
fimul
clc
inc
sbb
xlat
push
sub
jo
cmp
in
(bad)
add
(bad)
(bad)
push
cmp
test
fdivr
mov
add
pop
(bad)
adc
fiadd
and
jbe
mov
mov
sub
cmp
push
pop
test
dec
movs
or
adc
arpl
xchg
ds
movs
std
(bad)
in
push
lock
call
pusha
call
and
and
mov
jecxz
cdq
mov
jle
pop
dec
mov
outs
fiadd
popa
sbb
popa
push
fadd
adc
leave
(bad)
dec
call
xor
rcr
(bad)
int3
add
dec
(bad)
ins
xchg
movs
ret
(bad)
fst
adc
and
jge
cli
pop
stc
mov
pop
xor
iret
out
cmps
mov
pop
js
mov
jmp
mov
cli
push
out
mov
mov
popf
mov
cmp
idiv
mov
pop
das
mov
sbb
jnp
jge
mov
inc
scas
add
rcl
push
and
sub
mov
rcl
push
or
push
mov
jecxz
push
jbe
cmp
loop
lods
(bad)
shr
jecxz
scas
fsubp
push
test
out
test
in
test
jmp
shl
pop
mov
sar
mov
cld
ret
cli
inc
clc
into
jo
dec
jp
repnz
dec
sub
js
cld
retf
es
push
sub
in
cmps
shr
pop
mov
ret
xchg
retf
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
scas
sti
repnz
cli
fsubr
push
lods
cli
loop
mov
in
lods
imul
loop
stos
fsubp
push
scas
fsub
push
scas
fsub
push
scas
fsub
pop
movs
aam
pop
mov
fcom
push
scas
fsub
push
lods
(bad)
push
scas
fsub
push
scas
fsub
push
scas
shl
pop
mov
ins
jecxz
test
loop
mov
ret
(bad)
sti
or
jg
add
adc
inc
cmp
mov
push
test
mov
inc
lahf
push
dec
jo
lds
dec
mov
push
pop
das
mov
pop
cdq
int3
js
xor
sbb
mov
fbstp
ss
pusha
ss
inc
into
inc
cmps
out
sub
pushf
fadd
dec
test
xchg
sbb
lods
popf
sub
dec
xor
loop
scas
fsub
push
xchg
rcl
cdq
pop
push
cdq
or
mov
imul
mov
jge
push
es
sub
jne
or
enter
xor
mov
sbb
jecxz
lods
pop
push
or
or
test
mov
dec
outs
push
add
lods
div
scas
fcomip
sub
nop
jmp
and
jl
iret
jbe
jecxz
scas
fsub
push
scas
xlat
pusha
pushf
pushf
movs
or
or
stos
std
call
push
scas
(bad)
jl
aam
add
adc
sub
clc
add
int
push
sub
cwde
jecxz
scas
fsqrt
mov
adc
sub
push
test
mov
pop
ds
scas
scas
push
fcom
call
je
stc
mov
pop
push
pushf
push
enter
cmp
mov
lea
add
scas
jge
into
aaa
cmp
fsubr
push
push
mov
add
inc
pop
loopne
jb
es
cli
loope
add
pop
sti
outs
xor
(bad)
shl
fcomp
(bad)
(bad)
repnz
adc
push
lock
test
add
icebp
cmp
sub
movs
fs
das
outs
cmp
dec
repz
jecxz
pop
stos
bound
xchg
push
mov
or
or
dec
jne
addr16
cwde
jecxz
arpl
daa
push
adc
jmp
nop
xchg
xchg
test
int3
mov
mov
sub
mov
mov
and
xchg
mov
jmp
cmc
mov
xor
outs
(bad)
fisttp
mov
and
stos
dec
xchg
hlt
aas
jmp
pop
inc
dec
dec
and
js
and
out
or
rcl
lods
test
mov
je
bt
mov
add
or
out
stos
jg
imul
mov
into
cmp
ja
cmp
xchg
and
sub
lods
inc
jb
dec
je
std
sbb
dec
push
lds
and
sub
xchg
sahf
sbb
sub
into
sti
dec
sbb
movs
adc
cld
call
shl
lahf
xor
jo
sub
fild
out
mov
loopne
test
pop
inc
jecxz
enter
inc
lods
dec
adc
mov
jecxz
scas
shr
push
dec
push
and
push
inc
push
and
and
dec
outs
cs
push
scas
xlat
fidiv
cmp
mov
pop
pop
psubusb
push
scas
fsub
push
mov
aaa
pop
jmp
scas
ficomp
scas
add
lods
shl
push
lods
aam
push
test
loop
scas
fsub
pop
scas
fsub
pop
lods
aam
ss
(bad)
jbe
mov
cmps
push
int3
imul
inc
lods
(bad)
push
movs
fdivr
jmp
push
mov
setl
cs
xor
xor
call
ja
imul
ds
out
loop
imul
mov
cs
pop
mov
push
fld
into
pop
jne
leave
sbb
and
mov
(bad)
dec
test
push
movs
cmp
mov
cmp
xchg
xlat
fadd
movs
mov
cs
xlat
nop
dec
xor
mov
retf
rcr
dec
xchg
retf
stos
jae
xor
int3
icebp
(bad)
pop
jmp
push
push
outs
popa
inc
mov
lahf
push
mov
fwait
das
sti
dec
daa
int3
pop
outs
rcr
xchg
dec
dec
lds
out
out
fs
test
dec
movs
xchg
iret
std
out
mov
jae
push
std
(bad)
cmp
popf
inc
mov
adc
cmp
or
(bad)
cli
mov
and
je
push
add
scas
pop
call
inc
lods
and
cmp
mov
pop
jae
jno
je
fstp
sub
push
ja
mov
pop
and
xchg
jl
inc
into
add
in
jmp
push
fist
(bad)
ins
outs
pushf
cmp
cmp
mov
sub
or
sub
scas
popa
mov
mov
fidiv
cmp
xor
xor
xor
outs
test
push
call
mov
fsub
add
adc
fs
jbe
adc
xchg
rcr
retf
das
inc
into
call
outs
out
sbb
pusha
fnstcw
add
adc
fld
pop
fnstenv
fs
inc
dec
addr16
popa
xor
xor
push
xor
fidiv
rcr
imul
movs
imul
dec
retf
les
sbb
out
xchg
lods
jge
or
xchg
(bad)
adc
and
cmp
(bad)
shl
xor
dec
push
adc
lods
ret
imul
clc
les
inc
adc
mov
(bad)
mov
dec
xor
(bad)
adc
cwde
mov
mov
test
cmc
xor
lahf
mov
jmp
fidiv
jecxz
ds
dec
xchg
fild
mov
int3
mov
stos
mul
ficom
or
lea
rol
mov
int3
push
std
add
sub
(bad)
cmp
cmp
inc
dec
call
and
dec
jp
stc
add
add
test
in
dec
loope
sub
pop
xor
dec
(bad)
mov
rcr
or
test
in
push
(bad)
sub
cli
loop
stos
(bad)
push
mov
fsub
push
scas
fsub
push
stos
fsubrp
jb
clc
(bad)
adc
mov
enter
push
push
mov
cmps
loopne
or
ins
mov
jbe
pop
inc
mov
or
rol
mov
push
mov
jp
push
mov
arpl
inc
add
fistp
xor
or
lock
cld
adc
dec
and
rcr
jmp
aam
adc
mov
fld
fld
jmp
xor
inc
xchg
xor
ins
hlt
sub
popf
xchg
mov
xchg
mov
call
jo
cmp
mov
add
neg
jmp
push
jmp
(bad)
sti
les
jle
adc
sbb
mov
clc
sub
cmovnp
les
sub
push
jl
clc
xor
mov
mov
adc
pop
xchg
ret
outs
sub
int3
fnstcw
dec
add
out
sbb
int3
or
push
sub
adc
idiv
push
jmp
sub
push
aam
mov
xor
aas
or
sbb
or
call
jb
xchg
adc
jno
dec
xor
inc
mov
(bad)
dec
jl
push
inc
dec
cmp
inc
inc
mov
fdiv
mov
or
and
sbb
(bad)
jns
in
inc
ja
call
jp
mov
jg
shl
loopne
test
sbb
dec
sub
retf
cmp
jmp
sbb
fld
retf
xlat
lock
push
ins
cdq
call
cmp
mov
inc
jmp
call
cmps
sub
je
push
mov
hlt
inc
nop
sub
dec
inc
dec
lahf
sub
cdq
xchg
mov
daa
test
ja
xchg
cmp
test
(bad)
enter
push
addr16
cdq
cmc
das
ins
push
push
sub
lahf
stos
xor
ja
retf
sbb
imul
sbb
jecxz
mov
popa
icebp
cdq
pop
jnp
push
fnstsw
pop
rcr
fisub
pop
div
and
sbb
dec
cwde
sub
in
ja
dec
fld
adc
arpl
sub
jbe
call
or
inc
dec
int
or
sti
push
sbb
jb
(bad)
push
test
out
pop
test
loop
scas
fsub
push
lods
fsub
push
cmps
rol
je
mov
xor
les
sahf
test
dec
nop
test
sub
scas
enter
fistp
test
movs
sub
(bad)
outs
sbb
das
sub
xor
mov
sub
ror
push
sbb
add
pop
pop
lock
or
cmps
pop
jne
inc
cld
cdq
pop
in
jp
mov
xor
sub
stc
fisub
nop
pop
or
adc
pusha
cwde
xchg
lods
pop
movs
add
rol
cdq
sahf
xchg
mov
adc
pop
(bad)
fisttp
push
adc
adc
mov
fistp
std
mov
addr16
xor
cli
rcr
mov
ja
in
pop
cmp
inc
ja
adc
mov
jp
std
xchg
fisub
xchg
xor
leave
ret
push
adc
movs
(bad)
cmp
imul
adc
nop
loope
(bad)
int
xchg
inc
cmp
mov
xchg
data16
jbe
mov
cli
mov
setle
test
rol
adc
mov
push
pusha
rcl
add
adc
pop
ins
xchg
jmp
jmp
xchg
jmp
jae
leave
lahf
sbb
mov
mov
mov
icebp
mov
out
or
xor
inc
jne
jge
push
sbb
hlt
data16
es
xor
sti
xor
fbld
jb
movs
cmp
out
clc
imul
sub
mov
icebp
adc
not
xor
mov
repnz
pop
xchg
(bad)
inc
fild
mov
mov
jo
ret
sbb
or
mov
add
pop
mov
dec
sar
ficom
add
jle
sbb
lods
push
rol
add
xchg
dec
mov
std
adc
mov
push
shl
jmp
pop
mov
imul
popa
(bad)
clc
jmp
pop
cdq
not
inc
(bad)
js
dec
lock
jmp
nop
or
xchg
cdq
out
imul
jbe
jmp
add
sub
mov
jnp
jmp
nop
jecxz
jl
call
outs
sbb
jle
jmp
outs
and
mov
dec
retf
push
es
out
fwait
jnp
fnstcw
gs
inc
jbe
dec
loopne
mov
(bad)
cmp
or
fidivr
les
retf
jmp
mov
popf
aas
enter
ins
movs
pop
lea
inc
(bad)
test
or
mov
aad
mov
adc
subps
cmps
(bad)
out
cmp
(bad)
int3
xor
pop
addr16
(bad)
add
sub
add
adc
xchg
lods
jnp
dec
xor
ins
inc
jmp
out
lods
inc
aaa
xchg
hlt
stc
sub
mov
loope
outs
pop
rcl
pusha
adc
dec
das
dec
in
cld
test
mov
cmp
dec
test
adc
push
shr
fist
repnz
fisub
jl
jno
pop
mov
inc
in
sbb
addr16
outs
xor
push
imul
adc
(bad)
(bad)
xchg
ror
inc
call
mov
push
sbb
test
push
in
cld
fnstsw
inc
shr
cmp
add
nop
xlat
and
mov
sbb
pop
inc
test
jl
sbb
repnz
add
lds
rcl
cmp
inc
cdq
push
fcomp
scas
pop
ret
fsub
push
mov
fsubp
push
scas
fsub
push
stos
fsubp
pop
mov
mov
xor
pop
inc
mov
sahf
xor
cmp
jns
mov
xchg
mov
inc
push
mov
dec
xchg
dec
fsub
xchg
test
scas
sbb
repnz
lods
fsubr
cs
mov
test
shl
pop
je
xchg
test
sbb
aad
ss
push
mov
dec
xor
sbb
aad
dec
mov
jae
xchg
lea
es
and
push
(bad)
xor
ror
mov
arpl
imul
aas
mov
nop
sub
fisubr
rcl
pop
and
sub
and
sub
rcl
addr16
inc
dec
adc
sub
inc
push
dec
push
add
shl
sbb
jne
xlat
cld
sbb
arpl
push
out
dec
cmc
(bad)
repnz
mov
enter
mov
arpl
scas
jne
sbb
(bad)
rcl
mov
test
jg
jb
xchg
mov
inc
mov
xchg
call
jns
data16
mov
popa
mov
add
mov
fistp
daa
(bad)
cmp
das
cs
fdivr
sbb
in
dec
repnz
mov
push
lea
repz
pusha
dec
stos
nop
xchg
or
inc
ins
mov
in
cmps
mov
jb
enter
js
add
jo
sbb
add
popa
aad
pop
enter
test
inc
cmp
adc
mov
stos
out
rcr
jno
push
pushf
or
rol
dec
stos
add
cld
mov
or
out
(bad)
addr16
stos
mov
out
cmps
jb
push
leave
cld
pop
fbld
cmps
(bad)
xlat
adc
push
mov
fimul
ret
cmp
inc
addr16
inc
(bad)
mov
test
inc
cmp
jns
pop
das
xchg
mov
std
dec
out
mov
sti
cmp
fisubr
cdq
push
fcmove
xchg
stc
jle
push
lods
loop
outs
xchg
popf
fst
adc
add
shl
rcr
int
dec
cmp
push
lods
mov
aam
sti
(bad)
jge
loop
sub
pop
int3
(bad)
pop
div
inc
jbe
aaa
mov
xchg
inc
loope
addr16
pop
fdivr
test
sbb
and
jecxz
or
sti
addr16
push
imul
ds
div
sub
mov
div
inc
inc
inc
push
xor
mov
cwde
icebp
loop
cmps
jns
int3
push
lock
xor
repnz
sub
ffreep
jno
pop
and
inc
mov
out
push
(bad)
dec
jnp
out
cmp
jmp
fisttp
mov
stos
cmp
(bad)
fcmovnu
push
pop
test
pop
ret
fwait
xchg
xchg
push
xor
cmp
add
sbb
mov
pop
retf
push
add
dec
(bad)
mov
jno
outs
jg
add
jo
cwde
call
sar
jno
loope
test
mov
ja
xor
hlt
fldenv
sub
repz
jmp
dec
call
pop
out
inc
sbb
stos
ret
ja
jecxz
int3
clc
sub
in
or
(bad)
repnz
mov
xchg
mov
and
jno
test
iret
push
lahf
arpl
dec
(bad)
adc
scas
add
mov
dec
sub
pop
ficom
outs
xchg
dec
data16
jecxz
adc
xchg
std
inc
es
pop
mov
xchg
or
push
pop
mov
jo
push
xor
xchg
enter
add
call
mov
(bad)
daa
pop
pop
jno
add
fcom
sahf
xchg
test
inc
test
xchg
push
rcr
xchg
dec
jecxz
fcomi
call
adc
sbb
nop
fwait
mul
or
rcl
jp
mov
addr16
fisttp
js
and
enter
cli
js
lahf
(bad)
iret
aaa
cwde
mov
icebp
mov
das
daa
inc
shr
mov
or
push
call
and
push
sub
mov
or
int
hlt
retf
(bad)
mov
sub
(bad)
and
inc
out
push
imul
cmp
iret
sbb
add
jmp
fdivr
call
aaa
mov
hlt
test
add
or
fild
cdq
pop
dec
dec
out
or
repnz
push
inc
call
stos
mov
inc
ss
cmp
dec
or
imul
imul
fild
mov
and
sahf
cmp
jne
or
sbb
add
sub
(bad)
daa
fdiv
push
cmps
shr
push
lods
(bad)
push
scas
fsub
push
lods
fadd
adc
pop
inc
jo
cmp
shr
mov
push
push
mov
cmps
mov
mov
fcom
mov
scas
scas
cmp
sub
sbb
push
push
add
push
pop
push
mov
xchg
rol
div
arpl
and
mov
sbb
dec
rcr
ins
push
shl
xchg
shl
pop
pop
inc
dec
mov
pop
dec
xor
aas
mov
mov
shr
cmps
xlat
je
or
dec
out
test
gs
or
push
jmp
fild
sub
icebp
shl
ficom
jne
iret
int3
dec
test
cli
arpl
js
gs
or
int3
push
push
dec
cmc
cwde
call
loopne
(bad)
or
shr
inc
add
push
imul
mov
pop
adc
xor
sub
call
cld
sub
scas
sbb
imul
ret
cmps
or
and
jle
addr16
repz
in
sbb
mov
cwde
ret
xor
std
mov
sbb
or
jecxz
fs
sub
xchg
imul
mov
mov
scas
and
pusha
lds
inc
mov
cmps
sub
adc
imul
cmp
mov
cmp
fs
aad
adc
and
mov
aaa
(bad)
mov
pop
enter
or
and
sbb
repnz
call
cmp
mov
aas
and
ja
inc
scas
xchg
and
sbb
and
adc
sbb
lock
push
or
and
in
int
enter
(bad)
mov
mov
je
fs
cmp
cmp
adc
shr
pop
xlat
jl
mov
shr
je
pop
cmp
mov
and
cmps
(bad)
fcom
sbb
adc
mov
cmps
sub
cli
mov
neg
shl
or
adc
shl
sub
jo
dec
xlat
and
push
jb
xchg
arpl
xor
aaa
rcl
(bad)
push
mov
xor
mov
call
mov
mov
mov
add
push
adc
shr
ins
pop
dec
mov
xchg
(bad)
daa
jecxz
mov
mov
push
mov
and
clc
inc
dec
sub
pop
ja
adc
jl
je
inc
xchg
adc
xchg
lods
popa
js
push
mov
in
loope
dec
or
xor
or
mov
push
imul
neg
mov
cmp
inc
mov
xor
or
stos
jg
test
dec
lahf
sub
or
dec
stos
mov
shl
shl
lea
cs
jge
(bad)
or
cmc
sbb
inc
cmp
retf
outs
sub
mov
pop
dec
repz
push
jb
movs
aaa
into
ss
repnz
xor
mov
(bad)
push
(bad)
sub
jbe
dec
test
sbb
jns
sub
or
push
mov
jne
cwde
(bad)
pusha
ja
sbb
daa
ins
push
inc
cmp
pop
in
xor
sbb
jae
adc
push
jp
ucomiss
sub
xchg
cld
or
retf
dec
je
xor
cli
sub
add
ins
push
ds
mov
in
test
sbb
pop
lea
cld
daa
pop
cwde
scas
in
pop
loop
(bad)
xor
mov
adc
mov
ds
repz
dec
cmp
fsub
jmp
pop
cmps
cmps
inc
cdq
sub
out
xchg
mov
nop
(bad)
sub
cmps
push
pushf
sub
cmps
jbe
std
leave
test
fwait
(bad)
in
stos
nop
ror
push
and
pop
cmp
mov
sub
mov
adc
mov
xchg
repnz
mov
es
push
mov
loopne
stos
fsub
push
scas
fadd
loopne
and
into
jmp
ret
or
icebp
scas
clc
call
mov
scas
cmps
daa
(bad)
fcmovb
scas
scas
push
push
scas
fdivr
fs
cwde
loop
xchg
xchg
inc
scas
fldenv
shr
sub
cli
daa
fidivr
fimul
xor
outs
aas
mov
retf
inc
dec
jmp
cmc
dec
lahf
jns
mov
jle
dec
push
inc
push
cmp
xor
cwde
(bad)
cli
cmp
mov
mov
fnstcw
sbb
imul
loopne
lods
fsub
push
test
loopne
scas
fsub
push
scas
fsub
push
mov
xor
ficomp
push
lods
ficomp
dec
add
inc
aad
pop
pop
jecxz
outs
add
jnp
adc
adc
daa
push
hlt
pop
mov
sbb
mov
add
sbb
mov
xchg
xchg
dec
pop
aaa
ds
mov
mov
out
xchg
dec
dec
shl
retf
retf
int3
out
mov
mov
ins
js
les
jne
mov
or
sub
adc
xchg
mov
lds
jo
or
push
xchg
jl
pop
mov
push
sbb
fdiv
or
ror
mov
clc
mov
inc
ficom
das
add
mov
push
lods
sub
jae
sbb
pop
pop
and
mov
sub
jae
adc
dec
stc
or
cmp
and
(bad)
std
fidiv
sbb
inc
pop
add
les
xor
or
lea
leave
test
xchg
jge
ror
(bad)
or
push
jbe
cmc
fstp
xor
aad
push
xchg
mov
test
push
lea
out
repz
pop
(bad)
movs
mov
sar
jbe
inc
iret
lock
pop
mov
inc
rcl
jne
pop
mov
push
xchg
mov
cld
rcl
push
test
add
jae
and
or
mov
shr
sub
rcr
stos
mov
fistp
outs
dec
int
idiv
and
xor
or
ins
sbb
xchg
test
push
jecxz
mov
loopne
lods
(bad)
push
test
loopne
scas
fsub
push
scas
(bad)
jb
mov
and
cwde
sbb
scas
enter
fistp
pop
dec
mov
pop
push
xlat
dec
stos
inc
and
lahf
cmps
add
jecxz
jmp
loope
fistp
out
jmp
cmc
adc
dec
dec
cmp
lods
das
call
repz
sub
inc
fs
ins
ror
mov
pusha
pop
sub
add
arpl
lea
push
jo
mov
jmp
add
or
sub
outs
jb
jb
ret
mov
pop
jns
cmp
and
inc
xchg
pop
mov
ret
je
js
outs
mov
cmc
cdq
aas
clc
bound
xchg
loop
inc
fistp
fidiv
pop
add
push
cld
sti
cs
fnsave
and
add
pop
mov
mov
adc
mov
cmp
and
mov
sahf
aad
xchg
jnp
adc
stos
mov
xor
sub
(bad)
mov
pop
bound
out
dec
mov
xor
cmp
(bad)
(bad)
repnz
inc
cmp
mov
nop
pushf
es
cmove
cmc
xlat
sub
fdiv
xor
out
xor
xchg
ins
mov
fild
retf
inc
xchg
inc
adc
retf
cmp
in
sub
jb
xchg
and
add
adc
inc
push
sub
icebp
int
pusha
rcl
xor
shr
in
mov
pushf
push
mov
xchg
mov
sbb
push
push
sbb
retf
sar
fstp
neg
ss
popa
test
dec
dec
jae
loope
stc
mov
cmp
mov
xchg
pushf
cdq
lods
pop
loope
push
sbb
mov
push
mov
pop
cld
ins
aaa
(bad)
lea
cmp
jbe
and
dec
pusha
hlt
add
jmp
lods
movs
sub
enter
rol
mov
xchg
das
shr
xchg
lods
dec
sub
(bad)
test
mov
lahf
aad
es
cmc
sub
pushf
sub
push
fcomp
push
(bad)
clc
loopne
stos
fsub
push
cmps
fsub
push
lods
(bad)
push
scas
fsub
push
mov
add
fwait
xor
jnp
scas
sbb
repnz
lods
fsub
mov
jl
lods
pop
pop
xor
fldenv
dec
into
pop
fsub
sbb
pop
dec
call
sbb
push
ja
sub
xchg
xor
mov
retf
lahf
pop
mov
ins
adc
xchg
mov
cmps
add
add
xor
fisttp
call
push
and
fst
cmp
inc
imul
pusha
mov
mov
in
push
mov
dec
inc
aas
int
or
cmp
add
sti
shr
cmp
sbb
inc
or
inc
inc
imul
es
mov
sbb
repnz
jns
rcr
dec
inc
cld
add
outs
imul
div
mov
rcl
fdivr
sbb
fmul
xor
gs
xor
int
push
cmp
or
shl
inc
aaa
mov
das
ds
sahf
sbb
jae
and
inc
and
or
ret
or
adc
or
mov
jp
inc
jo
or
mov
pop
ror
jnp
or
int
enter
mov
lods
ret
inc
sub
add
and
mov
les
call
inc
pop
cmp
fs
(bad)
pop
cdq
push
pop
jl
(bad)
js
push
in
add
out
cmp
xchg
cmps
xchg
inc
rol
xchg
lea
cmps
jge
aas
ins
loop
sti
arpl
ret
add
mov
sbb
push
ret
mov
jge
aaa
popf
movs
adc
sub
loopne
push
sbb
adc
or
or
mov
sub
and
out
aaa
jns
ins
in
sbb
cmp
xor
add
stos
xor
pop
inc
aad
test
stc
and
sub
mov
jmp
nop
jmp
adc
int3
xor
test
or
sub
fwait
cmp
pop
cli
cmp
popf
retf
test
sub
inc
(bad)
sbb
ins
in
push
push
pop
in
fadd
test
addr16
cwde
pop
aaa
ret
jne
hlt
jne
mov
in
test
movs
dec
xchg
in
adc
(bad)
sub
xor
shl
pop
xchg
dec
mov
xlat
imul
xchg
dec
xor
xchg
jns
jmp
dec
in
test
sti
and
push
rcl
pop
pop
lock
es
icebp
repnz
pop
mov
fwait
xor
dec
xchg
push
imul
hlt
xchg
xor
sbb
scas
pop
mov
cmp
fidivr
mov
push
imul
loop
pop
popa
jl
out
jmp
mov
shl
push
mov
hlt
sbb
push
pop
sbb
mov
mov
mov
popa
ja
push
or
xor
daa
xchg
std
push
jecxz
daa
mov
mov
ja
jns
test
(bad)
in
scas
cmps
add
xor
pop
loopne
and
out
pop
or
cmp
popa
xor
call
and
sbb
in
push
clc
mov
mov
jge
and
inc
fidivr
mov
sar
mov
dec
inc
mov
or
popf
leave
in
xchg
enter
outs
sbb
jbe
int
pop
mov
les
or
jge
lds
ficom
std
rcr
fidivr
xor
jmp
inc
(bad)
std
dec
out
and
cmp
push
cs
jae
dec
push
or
out
mov
mov
cmp
fsub
pop
call
jo
inc
add
cmp
cmc
test
push
imul
jl
sub
lods
cld
fidiv
mov
dec
stc
lods
loop
leave
out
push
test
lea
leave
cmovb
sub
sbb
fwait
lods
inc
sar
add
cld
jecxz
nop
nop
mov
imul
push
lods
into
das
dec
ret
fdiv
jmp
pop
(bad)
scas
xchg
xor
adc
stos
or
mov
push
add
scas
lock
into
and
sub
sub
and
out
sub
xchg
in
ja
and
or
push
pop
out
cmp
push
jg
xor
loopne
je
fmul
pop
ins
mov
int
mov
xor
push
inc
sbb
lea
popa
mov
js
mov
xchg
mov
repnz
in
or
test
(bad)
mov
push
test
or
xor
inc
es
or
loop
jl
dec
dec
pop
lahf
in
shl
push
imul
add
cmp
jmp
jb
lods
mov
fisub
mov
jp
(bad)
hlt
adc
inc
(bad)
call
sub
and
and
add
dec
push
jnp
stos
enter
int
inc
out
cwde
mov
push
loop
jbe
inc
ret
xchg
mov
xor
mov
add
shr
pop
mov
(bad)
lock
test
mov
mov
or
ret
(bad)
push
pushf
and
adc
pop
stos
push
push
hlt
xor
or
jbe
mov
push
idiv
pop
scas
scas
js
hlt
fscale
outs
sbb
loope
(bad)
dec
clc
ret
cmps
mov
cmc
adc
dec
cs
sub
pop
xchg
pop
jmp
sub
push
daa
jecxz
sbb
fadd
les
dec
outs
push
lods
(bad)
push
fdiv
scas
es
push
sub
in
stos
fsubp
push
test
in
cmps
fsubp
pop
movs
enter
shr
inc
mov
int3
cli
dec
mov
(bad)
(bad)
jo
(bad)
ror
jl
cli
les
repnz
sar
(bad)
js
lock
scas
pop
loopne
cmps
shr
pop
movs
retf
mov
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
retf
fadd
inc
scas
mov
push
test
cli
loopne
mov
sbb
scas
loopne
push
scas
fsubp
push
lods
(bad)
push
scas
fsub
push
scas
fsub
push
movs
aam
pop
mov
push
jecxz
lods
(bad)
push
lods
(bad)
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
cmps
fucomp
pop
push
ins
jecxz
test
loop
mov
ret
fimul
shr
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
(bad)
nop
js
push
scas
(bad)
push
scas
and
adc
mov
jbe
xchg
push
into
xlat
mov
mov
jl
(bad)
(bad)
fdivr
jmp
sbb
popf
scas
mov
stos
scas
and
out
cmp
aam
push
adc
mov
outs
test
jno
frstor
sbb
mov
mov
pop
xor
xchg
sbb
rcl
push
dec
jns
rcl
jns
push
test
pop
dec
push
ins
imul
leave
scas
cmp
mov
push
cwde
or
fwait
adc
xor
jo
fiadd
xchg
or
sahf
add
mov
xchg
lahf
dec
ret
cmp
add
mov
jle
int
sub
pushf
jne
pop
adc
daa
pop
xchg
sti
or
xchg
(bad)
scas
cmp
mov
bound
stos
dec
dec
(bad)
lea
lods
scas
push
and
sub
jmp
mov
xor
mov
rol
js
popf
mov
shr
xor
jge
inc
aaa
fdiv
mov
sub
jmp
cs
mov
clc
ins
adc
aas
outs
xchg
aam
fstp
lods
jbe
push
push
stc
pop
or
inc
push
dec
sbb
popa
xor
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
(bad)
dec
push
push
jecxz
mov
out
lods
(bad)
push
cmps
fsubr
push
scas
fsub
push
scas
shr
push
test
loopne
xchg
(bad)
jl
cli
les
pop
and
lods
(bad)
push
movs
fcomp
dec
mov
dec
data16
aam
dec
push
jl
test
mov
cmp
arpl
data16
test
xchg
cmp
jl
gs
or
sub
fwait
lds
jp
or
popa
jg
fldenv
stc
adc
dec
stos
and
and
sub
pop
arpl
sahf
fidiv
nop
sbb
push
dec
push
xlat
sbb
data16
popa
stos
imul
ret
mov
ins
movs
xor
aas
inc
sub
xchg
cs
shr
jge
sti
(bad)
hlt
inc
add
cmc
cs
call
mov
cwde
sahf
mov
outs
cwde
sub
mov
sbb
bound
jge
xchg
jo
idiv
pop
call
add
in
sahf
(bad)
xchg
aas
out
addr16
jbe
test
push
mov
ret
mov
lahf
jmp
sbb
dec
cmp
add
or
inc
(bad)
mov
inc
ja
in
das
(bad)
jp
or
jb
stos
loopne
inc
hlt
movs
push
mov
es
inc
mov
xor
fcomp
xor
dec
jb
outs
dec
scas
add
fs
xchg
jns
mov
sub
faddp
mov
imul
jnp
out
jne
int
dec
xchg
mov
push
out
imul
mov
adc
shl
push
lds
lahf
cmps
jae
test
or
shr
out
cmps
lods
and
arpl
pop
xlat
fs
ret
in
bound
lea
mov
inc
int3
mov
sahf
or
mov
mov
sub
mov
mov
or
stc
cmp
retf
iret
xor
inc
cmc
xchg
rcl
pop
test
fxam
cs
xchg
jo
lds
push
push
dec
repnz
mov
cli
dec
and
push
pop
pop
add
lds
mov
push
(bad)
stos
xor
lock
retf
fdivr
add
inc
sub
add
mov
mov
jge
jmp
mov
cli
sub
adc
cmps
jbe
adc
jle
push
cmc
cdq
mov
sbb
jl
adc
ins
je
add
fimul
cmc
add
add
jecxz
xchg
retf
sbb
cmps
jns
inc
std
sti
outs
or
rcr
push
lock
jbe
push
test
out
cmp
loop
popa
mov
jle
mov
stc
imul
imul
push
inc
sbb
jb
(bad)
push
test
in
movs
(bad)
push
scas
fsub
push
test
out
scas
rol
je
mov
test
test
sbb
pop
and
mov
cmps
loopne
scas
jecxz
in
lods
int
or
inc
jnp
popfw
xchg
ins
push
dec
jg
sbb
pusha
int3
int
in
mov
xchg
int3
and
in
div
pop
es
shl
xor
mov
js
pop
add
mov
jae
(bad)
les
outs
mov
call
cs
xlat
add
mov
and
repz
or
pushf
mov
sbb
dec
sub
or
jle
xchg
fstp
movs
neg
in
jae
add
jno
pushf
test
ins
and
adc
mov
cwde
inc
mov
add
jo
mov
iret
mov
dec
mov
mov
or
out
jbe
enter
mov
mov
std
jge
test
ins
popf
jmp
fwait
inc
scas
jp
cmp
cmp
mov
(bad)
sbb
stos
and
add
mov
mov
adc
jae
into
push
les
jae
push
int3
cmps
mov
pop
inc
ja
adc
cmp
and
pushf
push
jbe
repz
dec
cmps
out
dec
test
inc
jecxz
pop
cmp
js
jb
pop
mov
lods
dec
jb
inc
add
idiv
adc
xor
(bad)
sti
sub
xor
mov
push
cli
cmps
jmp
repnz
fst
ins
dec
fist
adc
cmp
inc
or
mov
aad
jl
and
sub
push
rcr
(bad)
jg
pop
aam
test
fisub
mov
jle
gs
mov
push
mov
shl
test
and
and
pop
sbb
ins
mov
mov
mov
xchg
pusha
push
loope
movs
(bad)
fdivr
nop
lods
xlat
shr
sub
xchg
add
addr16
retf
jns
(bad)
and
fwait
xchg
movs
aam
push
dec
sbb
push
stos
fsub
push
cmps
fsub
push
lods
fsub
push
scas
fsub
push
stos
fsub
jb
cld
les
int3
mov
stos
mov
pop
sbb
scas
enter
fistp
jb
adc
aad
fnstsw
and
mov
scas
js
mov
or
add
retf
shl
outs
shl
push
bound
mov
add
push
fsub
popa
pop
fcmovnb
jge
daa
les
jmp
(bad)
fidiv
sahf
enter
ja
and
xchg
in
dec
bound
jmp
mov
sbb
popa
add
imul
retf
(bad)
pop
sbb
imul
push
and
neg
mov
je
pop
jae
(bad)
mov
out
xor
dec
sub
and
test
and
popa
stc
or
cmp
mov
mov
xlat
adc
xchg
(bad)
ja
pop
jmp
push
stos
in
cmp
icebp
repnz
mov
add
sbb
push
movs
push
sbb
push
dec
ret
pop
call
pop
sbb
lds
sbb
adc
test
xor
shl
rcr
es
xchg
loope
jl
enter
add
adc
aam
fsub
push
test
in
movs
fdivp
pop
mov
(bad)
push
scas
rol
je
shl
ror
xchg
dec
(bad)
ss
xor
jb
sbb
sbb
pop
and
ins
jecxz
lods
(bad)
pop
rcr
sbb
xchg
xor
popa
jmp
in
dec
pop
cmp
xchg
pop
movs
and
lea
push
jbe
add
stos
jge
push
jg
loop
jns
ret
jmp
push
fs
and
dec
out
jae
aas
and
outs
or
mov
adc
sbb
push
mov
test
gs
jo
mov
push
into
in
inc
mov
(bad)
mov
push
ss
mov
outs
mov
cld
dec
cmp
fistp
out
xlat
fistp
adc
push
loop
retf
idiv
dec
inc
adc
and
cmp
push
jmp
xchg
mov
xor
rcr
fmulp
popf
dec
jle
enter
sub
fimul
pop
and
jg
pop
adc
jmp
data16
ds
and
call
mov
ins
in
and
xor
pop
imul
rol
lods
daa
jecxz
or
jecxz
inc
mov
test
mov
inc
dec
js
mov
push
retf
test
and
sbb
mov
push
push
jge
jae
loopne
gs
hlt
sti
arpl
jmp
clc
(bad)
push
sbb
cli
mov
sub
inc
push
pmullw
adc
outs
push
aas
add
inc
js
jmp
dec
mov
int3
push
mov
mov
mov
fdivr
adc
rcr
pop
lahf
adc
cmp
pop
sti
and
test
or
out
out
and
pop
dec
and
or
or
fsub
(bad)
push
jnp
(bad)
xchg
cmps
sahf
int
dec
lock
mov
push
stos
jl
mov
sbb
push
push
scas
mov
xchg
out
cmp
ret
sahf
sub
xor
dec
jle
push
or
xchg
ret
mov
int3
jno
(bad)
xor
aam
add
and
adc
inc
data16
fistp
lea
ret
iret
enter
sub
xor
inc
push
push
shl
mov
mov
pop
lods
mov
pop
mov
mov
cmp
jp
(bad)
pop
jmp
inc
cli
jo
dec
shl
inc
test
je
mul
(bad)
mov
mov
ins
std
into
aam
or
and
push
xor
in
pop
jge
xor
cdq
mov
icebp
das
cmp
sub
cwde
inc
test
addr16
loop
pop
cmp
cli
push
test
mov
sar
xchg
sti
push
mov
xor
and
sbb
xchg
jmp
out
sub
xor
mov
xchg
dec
sub
inc
push
jno
xor
mov
xchg
into
ror
fistp
pop
add
cmp
in
fsubr
sub
inc
aam
and
aaa
adc
fwait
addr16
div
or
add
addr16
retf
retf
int
aaa
cmc
dec
imul
fst
inc
cmp
adc
sbb
mov
jle
mov
ins
sub
dec
jns
mov
ret
neg
imul
and
xchg
cmp
pop
adc
cmp
dec
or
or
jns
push
lock
ja
adc
adc
inc
and
fnstenv
test
pop
cmp
mov
call
mov
ins
mov
inc
dec
sub
jp
adc
jae
iret
enter
mov
(bad)
shl
pusha
xor
dec
ret
ins
mov
test
or
loope
aaa
jmp
sar
pop
jecxz
dec
pop
sbb
lds
rcr
sub
adc
es
dec
inc
cmp
jl
or
ins
ret
sub
adc
add
jmp
out
jb
mov
push
xchg
xchg
pop
dec
mov
ins
sahf
pop
gs
outs
movs
inc
or
inc
inc
xlat
bound
pop
cdq
push
fcomp
jns
les
imul
lahf
sbb
fs
imul
and
jecxz
in
es
sti
push
mov
cmp
dec
and
add
lea
cli
xor
push
rep
mov
sub
add
pop
mov
mov
jns
fisubr
fdiv
test
mov
push
xor
dec
ins
outs
jge
lods
stos
pop
sub
sahf
cli
movs
or
ja
fwait
daa
inc
add
fucom
dec
add
fsubr
push
mov
nop
xchg
in
sub
jne
and
jg
sub
jmp
rcr
xchg
add
rol
fidivr
cld
xlat
aaa
sub
push
mov
xchg
or
lock
push
(bad)
mov
add
mov
and
scas
dec
fwait
sub
sub
sbb
addr16
inc
cdq
sar
mov
dec
scas
scas
fs
das
or
outs
ins
test
mov
in
int3
sub
inc
popf
xchg
push
lds
test
or
xchg
jg
mov
aas
mov
xor
cmp
in
std
das
jns
test
cmp
test
mov
xchg
test
les
call
in
push
pop
cmp
ins
test
pop
(bad)
jno
pusha
outs
jmp
in
or
dec
xor
mov
ds
jbe
scas
xchg
and
call
push
or
lea
jge
or
pcmpgtd
cmp
fadd
dec
sahf
idiv
and
sbb
jb
sti
sub
jp
add
popa
mov
push
mov
stc
push
pop
ja
das
je
jmp
(bad)
out
sub
(bad)
(bad)
mov
in
es
nop
inc
dec
xchg
in
push
(bad)
outs
add
sbb
fnstenv
in
sbb
dec
fisttp
dec
fiadd
sbb
adc
adc
mov
push
fdivr
pop
movs
movs
pop
cmp
lods
or
stos
or
mov
lds
and
pop
rcl
pop
or
sub
stos
mov
xor
call
push
mov
cwde
jnp
inc
daa
lahf
mov
cdq
outs
jge
mov
pop
sti
dec
jecxz
or
cmc
mov
unpcklps
pop
test
(bad)
xor
or
mov
pop
pop
jg
adc
push
dec
mov
repz
xchg
or
mov
sbb
xlat
out
nop
mov
pusha
xor
mov
or
xor
mov
inc
cmp
pop
lods
mov
test
and
lods
(bad)
adc
jmp
dec
add
adc
aaa
lea
mov
push
pop
call
lds
std
imul
and
mov
fstp
push
jmp
pop
fmul
inc
or
dec
xchg
daa
retf
jmp
aad
xor
mov
es
(bad)
xchg
pop
mov
ds
mov
inc
fdiv
fbstp
xlat
aas
jbe
hlt
sti
pushf
add
sbb
or
ret
push
cmp
mov
daa
fst
fwait
dec
lahf
(bad)
mov
or
or
cmp
inc
add
mov
ss
popf
xchg
adc
loop
sbb
pop
xor
mov
leave
les
inc
or
xchg
xor
repnz
out
add
loop
div
inc
jle
inc
in
or
outs
mov
nop
jp
retf
xlat
jmp
sub
cmp
popa
fwait
mov
shl
mov
xchg
jmp
test
(bad)
loopne
repnz
scas
push
pop
scas
daa
fdiv
push
stos
fsub
push
lods
shl
push
scas
fsub
push
lods
cli
mov
xchg
dec
fcmovnb
adc
ret
xor
sbb
push
scas
fistp
imul
inc
pop
push
test
mov
rcr
ss
jnp
sbb
xchg
sub
mov
jo
dec
cs
ret
sub
imul
jmp
fs
jns
bound
fnsave
inc
neg
cli
sahf
mov
sbb
cmps
stc
(bad)
or
(bad)
data16
ret
fidivr
ret
xor
dec
jmp
fistp
xor
jmp
dec
pop
ror
jmp
rcl
mov
pop
test
and
dec
push
sbb
jno
and
(bad)
adc
add
call
lahf
in
mov
xchg
lock
mov
mov
mov
xchg
jbe
pop
(bad)
mov
jns
adc
rcr
fisubr
add
hlt
mov
pop
inc
and
je
mov
cmp
sub
dec
(bad)
pusha
shl
and
push
das
pop
aad
jbe
pop
dec
or
push
inc
xchg
adc
jo
and
daa
pop
aam
push
pop
jl
jae
adc
jmp
outs
sar
test
out
pop
cmp
or
js
jg
ret
test
push
mov
push
dec
mov
imul
shr
ror
movs
push
mov
cmp
ss
bound
jne
(bad)
addr16
in
mov
out
or
and
xchg
mov
fisttp
pop
xchg
push
pop
sbb
add
shl
rcr
es
and
sbb
push
sbb
call
int
xchg
mov
push
lds
pop
xor
(bad)
out
mov
xor
sbb
ret
xchg
pushf
jmp
int
and
dec
bound
aaa
cmp
enter
xchg
xchg
dec
stos
aad
loop
pushf
cmps
sub
dec
mov
xchg
stos
dec
cmp
clc
sahf
mov
fst
pop
call
inc
repnz
mov
push
xchg
mov
xor
daa
jns
loopne
out
enter
jno
push
xchg
int3
in
pop
xor
rol
dec
clc
aas
push
cmp
mov
loopne
in
cmp
das
(bad)
call
iret
les
(bad)
cwde
imul
dec
retf
fdivrp
inc
dec
jle
cmps
add
hlt
xchg
push
mov
out
dec
ret
fwait
repnz
adc
cld
icebp
dec
inc
xor
mov
mov
arpl
mov
push
mov
dec
mul
and
dec
nop
loop
jg
cmp
fadd
je
arpl
xchg
add
sub
das
pop
dec
addr16
or
mov
icebp
pusha
push
js
cmp
aad
inc
push
mov
xor
sahf
pop
jns
in
loopne
fild
sbb
scas
test
or
ficomp
cmp
add
dec
jl
jno
or
lods
sahf
ins
bound
push
mov
jne
inc
iret
sub
out
(bad)
mov
jmp
retf
(bad)
iret
push
push
push
mov
fcmovnb
xchg
in
push
in
push
add
(bad)
mov
lock
sbb
pop
cs
mov
dec
bound
retf
or
loope
stos
mov
jbe
aaa
xchg
add
psrlw
out
xchg
in
mov
retf
repnz
loope
in
jle
push
cmp
out
mov
ja
pusha
push
xor
xchg
loope
outs
in
sbb
mov
mov
retf
rol
push
aad
mov
xchg
mov
pop
push
push
sbb
lds
or
mov
or
addr16
xchg
pop
out
test
push
stc
jno
retf
aam
aas
call
out
jp
or
cdq
sbb
mov
jle
sub
idiv
test
push
out
cmp
add
lods
gs
inc
inc
adc
mov
repnz
retf
sub
jbe
hlt
outs
jne
(bad)
(bad)
outs
imul
and
test
vucomiss
shl
push
test
test
cmp
add
mov
jmp
int
movs
mov
cmc
retf
mov
mov
cmp
clc
(bad)
(bad)
fistp
dec
or
loop
jne
pop
pop
and
jmp
jns
pushf
push
js
dec
rol
push
fcom
pop
repz
jle
scas
neg
and
mov
loop
xor
mov
outs
inc
xor
sub
lods
fsub
push
test
loop
mov
loop
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fptan
pop
mov
mov
nop
(bad)
push
out
bound
lods
shl
add
cli
stos
sbb
cdq
mov
sar
fdecstp
pop
ins
add
xor
xlat
pop
jg
pop
xor
pop
jmp
gs
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
frndint
scas
daa
fsubr
push
stos
(bad)
pop
lods
fsub
push
scas
fsub
push
lods
fadd
adc
pop
inc
xchg
cmp
shr
push
push
mov
cmps
ret
nop
pushf
(bad)
sub
(bad)
(bad)
arpl
jb
xchg
aas
stc
adc
jb
test
stos
stc
pop
ss
es
rcr
in
cmc
or
aaa
lds
imul
retf
fstp
fnsave
jae
fucomip
cmc
pop
test
sbb
cmps
add
mov
push
xchg
test
push
retf
mov
ins
dec
fnsave
lods
mov
xor
lods
imul
or
es
in
mov
shr
or
inc
push
in
xchg
pop
movs
xchg
sar
xchg
aaa
loopne
(bad)
sahf
into
mov
cmp
and
jo
jo
(bad)
outs
jne
push
jge
fcmovnbe
test
inc
sbb
jp
or
mov
mov
scas
inc
mov
pop
xchg
and
inc
enter
inc
pop
sub
lods
dec
pop
sbb
xchg
push
sbb
cdq
adc
add
shr
int3
test
lock
mov
mov
mov
outs
sbb
cmc
out
lahf
lock
das
mov
mov
leave
push
pop
ss
(bad)
jmp
jns
imul
pop
mov
retf
pop
sbb
in
add
jne
daa
fsub
push
stos
fsubp
push
test
loop
scas
fsub
push
scas
fcmovb
adc
clc
mov
ror
in
enter
fistp
cmp
bts
mov
mov
sahf
xor
mov
jno
cli
xchg
and
and
int
sbb
mov
push
xor
repz
and
pop
outs
fdiv
pushf
neg
pop
pop
and
push
add
into
or
xor
(bad)
fwait
test
(bad)
(bad)
jns
pusha
cld
fisub
clc
mov
fist
call
pop
pop
push
jecxz
mov
stos
in
out
sub
or
push
or
mov
arpl
sub
push
aaa
push
add
push
jns
shl
jbe
push
mov
xchg
ret
xor
in
in
jno
retf
cli
loope
retf
xchg
add
mov
fild
xor
pop
pop
push
mov
fmul
and
inc
xchg
and
lods
jo
(bad)
push
scas
fsubp
push
scas
shr
push
scas
fsub
push
lods
cli
loop
int3
pop
inc
xchg
dec
fcmovnb
ror
inc
xchg
push
ins
jecxz
lods
(bad)
push
sar
sbb
push
out
pop
jb
sbb
push
jmp
in
outs
mov
aam
cld
xchg
xchg
push
cdq
clc
mov
test
std
add
data16
cs
outs
mov
lock
jge
or
test
pop
retf
xchg
daa
cwde
mov
jp
jo
shl
ins
clc
add
mov
in
xor
dec
inc
mov
jns
outs
gs
inc
push
call
push
les
xchg
dec
lods
push
dec
mov
sub
in
(bad)
aam
js
fidiv
(bad)
std
jmp
pop
adc
mov
aad
loopne
fidivr
jo
sub
add
mov
enter
(bad)
add
add
xor
out
xor
pop
or
mov
and
(bad)
mov
cli
fidiv
dec
jne
sbb
jnp
stos
retf
js
outs
fidiv
clc
or
je
movs
outs
in
scas
mov
mov
scas
leave
out
pop
mov
adc
mov
sub
or
popf
cmc
add
push
or
ins
inc
rol
mov
shl
push
shr
fmulp
push
sbb
mov
cdq
add
dec
scas
xlat
ror
fyl2xp1
dec
or
in
jge
xchg
xor
out
adc
jns
popf
je
push
call
pop
rol
cld
sub
sbb
dec
out
sub
jp
pop
or
adc
pop
mov
out
xchg
movs
jne
stc
daa
mov
and
dec
add
call
shr
lds
clc
mov
add
xchg
or
xchg
out
mov
mov
pop
shr
xor
xchg
cmp
jle
mov
mov
cdq
cmp
cmp
mov
adc
mov
std
jle
xor
push
fisubr
jmp
not
sbb
jle
ficomp
adc
fdiv
pop
shr
cdq
ror
push
inc
loopne
arpl
adc
pop
dec
jnp
rol
cli
or
xor
rol
xor
pop
ins
cld
jge
xchg
(bad)
std
es
push
sbb
cmc
inc
ret
shl
xor
popf
sbb
mov
sub
iret
mov
sub
push
push
mov
mov
push
pop
es
xchg
in
aam
das
jge
ins
pop
aad
fwait
dec
in
loope
add
push
xchg
rcr
int
xlat
jno
js
mov
outs
xor
shr
scas
scas
cmp
cmps
mov
mov
push
ret
jmp
cli
outs
adc
sub
pusha
sub
or
jns
sahf
sti
arpl
loope
fnsave
mov
fwait
pop
xchg
mov
div
scas
ss
out
test
cdq
xor
in
lds
cdq
out
sub
fwait
sub
sti
jge
popf
outs
dec
leave
cwde
mov
xchg
and
mov
out
ret
sahf
outs
jno
ret
dec
cld
addr16
pop
stos
fs
ret
adc
dec
mov
retf
ret
push
aaa
inc
adc
dec
xor
inc
mov
dec
inc
push
aas
popf
(bad)
ins
jo
ret
repz
inc
jb
mov
movs
pop
ds
mov
jmp
add
push
mov
retf
test
fnstcw
jns
push
cli
xor
mov
cmps
loopne
data16
xor
fcmovnu
loop
in
shr
mov
jle
add
iret
fld
dec
add
imul
jae
outs
retf
cwde
mov
push
out
jno
movs
jle
addr16
push
scas
mov
add
lods
outs
call
gs
and
xchg
repnz
or
loop
lods
movs
cli
or
mov
jmp
fcom
mov
xchg
aaa
pop
mov
mov
xor
rol
push
rcr
push
ror
aaa
push
jmp
es
inc
cdq
inc
jp
mov
adc
enter
inc
push
mov
fcomp
jne
mov
pop
fsub
stos
push
xlat
jg
dec
ins
mov
xchg
fisubr
xchg
fdiv
mov
pop
(bad)
push
mov
loope
mov
sub
mov
sbb
mov
push
mov
xor
sbb
push
loop
push
fcom
in
fwait
leave
pop
xchg
loope
mov
aam
lock
push
xor
sub
xor
ret
adc
outs
sub
int3
adc
sar
ret
retf
sbb
jne
and
aad
sub
shr
imul
cld
sbb
bound
ret
lods
or
add
in
fdiv
inc
jne
(bad)
sub
stos
xchg
stos
xor
push
cmp
add
fsub
xchg
daa
fnstcw
mov
add
xor
push
adc
out
retf
adc
ins
int3
mov
cmps
and
inc
shr
jb
and
or
push
fisttp
imul
inc
scas
out
xor
clc
dec
aaa
sub
ja
or
cmp
gs
pop
jbe
out
push
mov
sbb
jle
xor
xor
sbb
or
push
or
jp
shl
jl
not
movs
push
or
aas
push
push
jbe
xchg
dec
iret
xchg
dec
mov
in
lods
inc
ins
jecxz
xchg
inc
ret
loopne
add
pop
mov
aaa
xchg
data16
ror
fadd
cmps
push
outs
push
imul
cmp
scas
(bad)
push
scas
dec
loop
scas
fcomp
scas
pop
loop
stos
fsub
push
stos
fsubp
push
test
in
cmps
shl
pop
movs
shr
pop
mov
shl
mov
test
(bad)
je
ret
mov
hlt
jo
clc
shl
enter
int3
pusha
xor
je
repz
fsub
shr
pop
cmps
shl
pop
movs
retf
mov
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
retf
pop
jecxz
mov
fsubp
jb
fadd
push
test
loopne
daa
fcomp
push
scas
(bad)
push
lods
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsubr
pop
mov
imul
loopne
test
loopne
lods
fsub
push
scas
fsub
push
scas
fsub
push
stos
shl
pop
mov
shl
scas
fadd
push
mov
loop
out
cmc
ins
out
xor
loop
mov
add
shr
ja
pop
scas
fdiv
push
test
mov
popa
adc
cmp
repz
push
scas
popa
pop
test
jno
adc
scas
fsub
loope
fsin
sub
sub
or
pop
jecxz
movs
sbb
(bad)
shl
xchg
mov
mov
jbe
adc
mov
xchg
mov
push
mov
jl
out
fsub
pushf
(bad)
(bad)
mov
inc
sbb
lock
adc
lahf
shl
jecxz
lds
pusha
and
mov
mov
(bad)
sar
jnp
cmp
add
sub
(bad)
retf
leave
sbb
pop
sbb
mov
push
mov
mov
xchg
xor
pop
in
pop
cmp
xor
(bad)
sub
aaa
mov
out
sub
sub
mov
inc
pop
or
xchg
cli
xor
movs
stos
mov
pushf
test
jecxz
sub
cmp
mov
jmp
popf
jne
and
(bad)
mov
sub
rol
add
fld
stos
stos
xchg
add
sbb
ss
mov
sub
pop
call
repnz
jo
xor
test
inc
jl
out
or
xor
jmp
push
mov
(bad)
je
stos
sahf
mov
mov
push
inc
jo
imul
jno
xlat
add
in
test
pop
inc
add
dec
cmps
cmp
in
add
nop
je
mov
sub
out
mov
enter
mov
iret
dec
mov
jnp
xor
adc
cmp
xor
mov
ins
cmp
dec
inc
mov
mov
and
pop
hlt
jl
pop
mov
pop
mov
mov
cli
and
adc
into
and
push
and
xlat
cli
mov
imul
jecxz
out
movs
sbb
call
into
sub
inc
jecxz
lods
fisub
inc
push
push
jecxz
mov
out
stos
fsubr
pop
stos
fsubp
push
scas
fsub
push
scas
shr
push
mov
repnz
les
call
sbb
repnz
lods
fsub
pop
stos
and
jnp
in
movs
sub
jecxz
mov
sub
loopne
dec
cmp
push
fnstenv
or
mov
xor
das
xchg
xor
mov
rol
push
and
mov
dec
pop
inc
jmp
mov
aad
into
cmp
pop
mov
inc
int
leave
ret
and
popa
call
push
inc
retf
js
sub
fwait
pop
cmps
jecxz
sbb
std
mov
xrstors
stc
mov
sub
ja
jno
inc
xchg
shr
sub
jne
jp
mov
jp
or
ja
lahf
fnstcw
(bad)
dec
jno
data16
(bad)
mov
mov
cmp
inc
pop
cdq
mov
cmps
imul
and
imul
adc
cwde
imul
and
add
mov
push
or
cmp
fadd
inc
rcr
mov
fcomp
clc
jnp
mov
pop
dec
retf
jae
adc
push
int
push
dec
popa
pop
ja
stos
lea
cld
pop
lds
add
ins
dec
pop
je
cmp
fnstsw
xchg
les
sub
ror
imul
mov
xor
test
stc
adc
push
out
push
aas
dec
jo
popa
imul
xlat
shl
(bad)
in
stos
out
das
lods
mov
jp
shl
cld
ror
sbb
shl
or
(bad)
adc
mov
inc
add
fisubr
lods
jge
or
int
mov
push
jae
inc
pop
sub
scas
scas
sbb
and
sbb
add
mov
pop
xchg
dec
dec
mov
dec
add
in
dec
fisub
sub
dec
arpl
dec
retf
dec
dec
mov
ret
lds
jge
das
sahf
std
clc
loop
stos
cli
cs
add
in
sbb
and
repnz
popf
into
push
pop
fidivr
cmp
mov
(bad)
pop
mov
jl
and
leave
xchg
add
fcomp
ficomp
jmp
sub
ret
or
(bad)
in
mov
xchg
pop
lods
pop
ret
gs
lods
mov
(bad)
ror
ins
mov
sbb
aad
push
mov
jg
cmps
scas
mov
leave
add
mov
mov
arpl
lods
xor
(bad)
cmp
int3
adc
rcl
jmp
fsub
push
scas
fsub
push
test
loop
cmps
pop
out
je
mov
mov
lock
push
push
mov
cmps
loopne
pop
mov
sahf
push
rcl
xor
push
jo
pop
pushf
pop
pop
xor
ret
(bad)
js
int3
adc
lock
cmp
dec
popf
jno
pop
fs
push
lock
mov
mov
shl
call
gs
cld
mov
dec
aas
push
add
ins
dec
xor
jae
push
out
mov
imul
inc
fstp
imul
bound
nop
cdq
push
jecxz
es
xor
push
sbb
push
lods
shl
push
stos
(bad)
push
cmps
fsubp
push
scas
fsub
push
scas
fsub
jb
mov
cmps
js
pop
call
fmul
bound
lods
fsub
push
rcr
loop
push
mov
imul
sbb
sti
push
gs
retf
imul
mov
adc
cwde
int
pop
loop
sqrtps
nop
mov
fwait
aaa
adc
cmp
mov
jle
add
mov
inc
jge
and
xor
and
test
fmul
jge
pop
jg
sti
sbb
popf
ret
ds
ins
mov
push
xchg
(bad)
bound
(bad)
xor
inc
mov
sub
cmp
ins
xlat
mov
inc
lods
lods
adc
out
xchg
inc
and
mov
or
adc
lock
jecxz
xor
mov
cmps
xchg
fwait
stos
cdq
mov
jecxz
out
sbb
aas
into
push
out
push
cmps
inc
fwait
test
sub
retf
xchg
int
movs
sub
jecxz
or
int3
and
push
adc
hlt
push
lahf
mov
ror
cld
mov
fdiv
cmps
xchg
sub
lds
mov
loopne
idiv
mov
inc
dec
pop
lods
(bad)
loopne
or
pusha
xchg
in
push
cdq
addr16
xchg
int
sbb
xor
outs
mov
movs
sbb
(bad)
push
das
aas
xchg
pop
lahf
cmc
dec
fwait
inc
lock
fcom
cmps
push
test
cmc
push
test
ror
les
test
cld
mov
jmp
inc
sbb
es
and
jmp
jno
or
jg
cmp
fcom
in
jbe
mov
mov
or
imul
sub
pop
shl
sbb
mov
in
(bad)
mov
or
jle
jl
data16
sub
mov
icebp
sbb
mov
xor
dec
ss
dec
mov
mov
or
push
ds
jb
int3
inc
aam
pushf
inc
je
mov
or
int3
xchg
(bad)
sti
shl
int
mov
jbe
xchg
ficom
mov
jno
push
cmp
mov
stos
dec
popf
cdq
xor
cmp
shl
xchg
jge
push
xchg
js
pop
mov
idiv
xor
push
cld
out
mov
mov
xchg
mov
shl
mov
mov
inc
in
pusha
js
sub
xor
out
sar
shr
cmp
call
or
shr
in
dec
xchg
mov
dec
pusha
idiv
pop
inc
scas
fs
dec
scas
loop
(bad)
push
movs
push
add
pop
push
(bad)
mov
push
add
jo
(bad)
push
cmps
fsubr
pop
mov
lock
scas
fsub
push
lods
fsub
pop
scas
cli
call
xor
pop
inc
xchg
dec
mov
out
jo
sahf
stos
cmp
pop
inc
adc
fld
clc
dec
fucomip
jne
cmp
push
scas
aad
push
pop
inc
mov
or
push
mov
ror
sub
inc
out
xchg
repz
add
xchg
xchg
test
push
xor
jle
fdivp
pop
push
cmp
pop
adc
and
mov
dec
and
and
cmps
clc
into
ins
jecxz
js
int
dec
or
cdq
push
std
repz
fbstp
inc
xlat
cmp
dec
imul
(bad)
jns
dec
out
pop
jo
jl
inc
inc
push
cmps
jne
pop
stc
stos
fisubr
mov
mov
inc
icebp
pop
scas
mov
push
outs
imul
cmps
movs
repz
xchg
xor
sbb
cmp
(bad)
cmp
in
xchg
test
aam
and
cmps
add
mov
(bad)
sbb
adc
adc
cmp
push
mov
cmp
cmps
scas
lods
or
xor
mov
xchg
mov
pop
xchg
jae
and
xor
mov
add
mov
xor
ror
and
dec
retf
jge
jno
in
and
nop
ror
jns
aaa
ret
push
cmp
fst
ror
or
lods
pusha
sub
dec
xchg
mov
adc
es
pop
in
cmp
dec
or
push
retf
jno
pop
in
xchg
dec
inc
je
int3
xor
mov
adc
sbb
or
(bad)
out
cmp
pushf
rol
xchg
jne
mov
mov
xchg
(bad)
push
pop
mov
xchg
mov
mov
jns
pop
in
in
fsubr
stc
push
jge
je
movs
in
jl
inc
jecxz
mov
inc
stos
add
push
push
and
lods
jne
into
and
movs
lds
call
fdiv
lods
pop
jo
mov
daa
jecxz
xchg
pop
sub
jns
dec
cwde
cmps
pop
aad
loope
jns
mov
mov
push
imul
repz
scas
scas
pusha
add
jge
push
or
test
std
xchg
ins
scas
scas
or
mov
pushf
jno
enter
(bad)
(bad)
inc
lahf
add
inc
add
push
scas
int3
les
ss
sub
call
cmp
gs
pop
push
out
pop
bound
jmp
lods
or
xor
mov
adc
(bad)
repz
pushf
test
dec
jge
add
es
lods
inc
in
mov
pop
cmc
mov
lods
outs
mov
cmp
or
into
mov
fnstenv
sub
mov
adc
enter
jo
test
pcmpeqb
cmp
xchg
or
add
mov
mov
aas
fist
aas
sub
xor
pop
loopne
mov
jl
mov
jne
stos
add
xor
leave
movs
or
lock
dec
xchg
int3
std
adc
cmp
jb
in
xor
(bad)
mov
dec
cmc
repz
hlt
jmp
(bad)
mov
iret
imul
mov
(bad)
ja
clc
push
popa
jle
(bad)
fsubrp
cld
cmp
cmp
(bad)
fiadd
aaa
jbe
jmp
sub
stos
xor
add
jl
xor
dec
xchg
and
pop
and
mov
aad
in
mov
outs
mov
ins
cld
aad
dec
das
mov
loopne
std
loop
adc
outs
or
loope
aas
jp
mov
fstp
aaa
bound
jb
sbb
fdivr
int
adc
push
ja
push
call
mov
add
mov
mov
or
outs
inc
sbb
jno
xchg
call
cmova
scas
mov
xchg
fiadd
adc
push
fwait
sbb
and
call
xchg
xchg
add
adc
add
or
mov
das
mov
dec
pushf
ins
jnp
pop
movs
jns
dec
cmp
jns
mov
push
ins
or
out
mov
pop
fisttp
mov
cmp
pop
mov
leave
and
stos
fbstp
(bad)
loope
shl
stc
sub
push
aad
mov
pushf
ror
dec
movs
and
cmc
shl
jecxz
imul
dec
dec
mov
dec
pop
test
in
jmp
stc
aaa
push
mov
jne
in
lods
or
cli
sub
lea
adc
cs
inc
or
or
mov
dec
ret
enter
test
and
xchg
arpl
rdpmc
add
add
or
ins
inc
dec
sub
ss
cmp
xchg
push
inc
mov
jae
jnp
cmc
add
imul
lds
cmc
nop
mov
test
push
std
xchg
iret
mov
add
or
sub
jnp
pop
xchg
leave
mov
and
hlt
mov
adc
adc
aas
sbb
jge
jbe
hlt
jo
xchg
cmc
js
pop
out
add
bound
mov
cmps
add
test
pop
clc
xchg
daa
stos
cs
rol
addr16
(bad)
fadd
dec
sti
pop
daa
pop
je
add
iret
aas
adc
pop
sbb
ins
push
ins
hlt
out
adc
sub
sbb
repz
sub
ror
dec
aad
loop
test
cwde
or
fs
ins
or
pop
dec
push
mov
mov
dec
pop
mov
repz
shl
arpl
inc
adc
dec
push
mov
dec
fs
or
sahf
fadd
(bad)
mov
in
add
test
jge
hlt
mov
not
pop
outs
movs
add
sbb
popa
in
pop
sbb
mov
int3
or
out
test
mov
outs
and
stos
fldcw
jnp
pop
mov
stos
jae
mov
sbb
cmp
push
cli
push
mov
stos
je
jns
push
jp
jle
mov
mov
inc
imul
pusha
(bad)
cmp
add
jae
push
mov
das
retf
jbe
or
mov
adc
into
jne
and
or
lock
pusha
xchg
and
das
inc
inc
test
add
push
mov
xor
pop
sti
sub
mov
scas
pop
pop
scas
in
sbb
scas
mov
push
scas
fsub
push
lods
fsubrp
push
test
loop
scas
fsub
push
scas
cli
mov
mov
sti
mov
shr
mov
jecxz
lods
(bad)
push
rcr
pop
cmps
div
add
mov
scas
in
add
push
movs
pushf
fisubr
jl
hlt
shl
cmp
and
lahf
adc
adc
mov
sbb
sbb
arpl
push
idiv
mov
push
xchg
jno
in
fpatan
outs
aas
pop
pop
jle
js
mov
and
push
sub
outs
fwait
jb
scas
das
ret
push
and
xchg
pop
dec
jb
dec
dec
cmps
in
xor
push
stc
mov
mov
cmps
mov
jno
les
sub
loope
aaa
(bad)
inc
int3
pop
mov
inc
sti
hlt
or
adc
push
push
mov
jnp
xor
fistp
lods
fldenv
pop
mov
pop
sub
pop
xchg
pop
dec
nop
or
movs
test
jle
jo
ret
pop
aas
xor
retf
jmp
sub
dec
test
call
ins
or
rcl
(bad)
lahf
das
inc
(bad)
jg
xchg
lahf
(bad)
stc
xor
xchg
mov
inc
stos
cmp
and
push
(bad)
cmp
stos
retf
movs
es
sub
loop
mov
mov
sbb
dec
test
ror
in
cmps
push
sti
repnz
mov
cs
inc
jae
push
js
cmp
(bad)
loope
cmps
in
int3
jp
cmps
pop
mov
pop
adc
mov
test
or
mov
ins
cmc
inc
aad
sti
mov
xchg
add
push
(bad)
pop
add
add
cmps
push
enter
fnsave
out
in
cwde
hlt
cmps
jmp
xor
dec
push
inc
fisubr
inc
aas
call
dec
popa
test
jns
inc
mov
sub
in
mov
pop
pop
dec
dec
lahf
push
std
xor
and
inc
add
jo
popa
inc
shl
cld
inc
inc
mov
jbe
ret
outs
jns
pop
es
sti
mov
mov
adc
iret
std
xor
pop
mov
jmp
dec
stc
jb
ds
icebp
cs
push
sahf
sub
(bad)
pop
sar
imul
je
div
loop
sub
movs
pop
dec
out
jns
in
fwait
stos
in
sbb
in
(bad)
daa
loop
sub
mov
js
sbb
test
xor
xlat
xchg
nop
or
icebp
test
jmp
repz
repnz
loop
fsubr
call
pop
mov
cmp
or
aam
in
pop
sahf
inc
ret
or
mov
pusha
iret
pop
les
iret
jg
or
mov
jbe
sbb
and
pop
jo
sbb
jg
sahf
pop
adc
ins
(bad)
mov
and
ds
(bad)
retf
iret
inc
daa
das
adc
ins
retf
xchg
push
out
push
out
mov
in
hlt
enter
inc
dec
(bad)
int3
loop
xadd
sub
push
outs
push
xchg
inc
xchg
xchg
xor
popf
and
ds
xchg
in
pop
or
leave
js
jge
cwde
loope
hlt
popf
adc
jns
pushf
(bad)
cld
push
push
pop
in
inc
js
(bad)
repnz
sub
out
xchg
repz
pop
jp
adc
pushaw
popf
fnstenv
out
xchg
adc
push
pushf
cmp
inc
adc
jbe
and
ss
xchg
jl
outs
jp
test
xor
lods
dec
adc
cli
jmp
jmp
cmp
fadd
push
test
sbb
mov
(bad)
and
(bad)
cmp
setne
or
push
jnp
int3
into
or
lea
add
mov
add
mov
nop
jo
xor
fdiv
loopne
test
and
pop
retf
in
mov
pusha
cmp
std
sub
cmp
fmulp
into
mov
cli
adc
into
mov
loope
push
adc
outs
pop
or
hlt
scas
and
mov
aad
mov
scas
stos
out
lahf
xchg
pop
leave
add
ins
loop
mov
xor
outs
mov
stos
mov
int3
rcr
inc
inc
mov
imul
jmp
cmp
adc
(bad)
imul
adc
cli
outs
outs
shr
pop
fldl2t
inc
sar
mov
scas
scas
or
cli
push
lods
fsub
push
test
loop
mov
sar
cdq
add
sbb
cmp
dec
mov
je
(bad)
mov
cld
bound
dec
stos
xor
push
pop
and
jo
xor
stos
je
xchg
or
out
rcr
mov
out
scas
scas
push
mov
push
cmc
sub
call
add
(bad)
repnz
add
es
push
push
sub
bnd
ja
adc
sbb
push
mov
loopne
mov
je
sahf
xchg
in
jno
shl
imul
loop
scas
fsub
push
lods
(bad)
push
scas
fsub
push
scas
fsub
push
mov
xor
cmp
push
test
loopne
mov
pop
and
push
(bad)
loop
cmp
aas
fisttp
xlat
stc
sub
cs
jmp
cli
test
and
sub
cs
out
jle
push
in
and
xor
(bad)
mov
cmc
lock
leave
xor
cmp
pop
or
and
mov
in
xchg
pop
cld
fild
cmc
adc
lds
mov
dec
pop
sub
sahf
cmp
push
pushf
lods
fsubr
leave
data16
mov
or
and
lahf
inc
pop
xchg
and
(bad)
sbb
pusha
jp
or
jo
(bad)
jae
enter
iret
ret
lods
in
or
cmp
jle
(bad)
mov
xor
mov
call
fild
and
test
ret
push
and
out
push
push
jecxz
mov
loop
lods
fsub
push
lods
(bad)
push
scas
fsub
push
scas
(bad)
jb
mov
and
sbb
repnz
stos
(bad)
mov
mov
gs
mov
dec
ins
enter
sahf
iret
fsubr
scas
fsub
push
xor
jge
mov
mov
xlat
adc
imul
sub
loopne
xchg
loop
pop
gs
out
rol
jne
sub
gs
adc
stc
cwde
shl
or
in
xor
pop
repz
into
or
enter
push
test
and
stos
adc
pop
xchg
or
xchg
cmp
dec
xor
add
xchg
dec
pushf
inc
add
cmp
sub
fdiv
or
mov
cmp
rcl
push
mov
push
ds
adc
inc
jecxz
inc
push
fnop
mov
neg
cmc
ret
pop
sbb
inc
xchg
int3
mov
mov
jp
call
test
sub
in
sbb
stc
mov
push
mov
inc
jno
jmp
in
or
es
mov
mov
sub
in
xchg
js
mov
leave
shl
mov
ds
lds
push
push
mov
enter
dec
in
add
fisub
clc
cld
popf
es
aam
test
popa
and
aaa
mov
or
aas
sbb
or
mov
iret
dec
dec
mov
out
jmp
cmp
aas
data16
call
sub
push
imul
sub
pop
push
pop
sub
inc
jb
mov
inc
sub
(bad)
jl
sub
mov
inc
repz
jp
sub
je
das
push
out
dec
xor
push
in
cwde
test
mov
pusha
pushf
pop
and
iret
imul
popa
stos
nop
(bad)
(bad)
fisub
adc
jp
jb
fsub
dec
add
cwde
xchg
jmp
push
ret
mov
inc
pop
nop
xchg
mov
das
xchg
mov
scas
nop
ret
fsub
push
stos
fsubp
push
scas
fsubp
push
scas
fsub
push
mov
mov
xchg
lods
cmp
jno
mov
jecxz
lods
(bad)
push
sar
js
fdiv
jnp
sar
scas
enter
in
aaa
jmp
mov
fdivr
ds
enter
test
(bad)
std
popa
and
jmp
xor
call
retf
(bad)
lea
mov
icebp
cdq
iret
mov
ret
je
cmp
mov
jns
add
inc
inc
ret
inc
and
xor
test
xor
push
mov
mov
dec
sub
dec
mov
outs
fistp
movs
sub
addr16
xor
loope
mov
lea
sbb
mov
mov
push
fisub
dec
mov
scas
scas
mov
sbb
xchg
or
sbb
jnp
pop
sub
mov
stos
sub
in
leave
mov
js
lahf
cmp
stos
jno
popa
pop
pop
and
pushf
mul
stos
ss
sbb
repnz
out
and
mov
(bad)
sub
imul
pop
aam
in
sub
loopne
nop
out
mov
ficomp
jo
sub
inc
cwde
push
mov
ret
lds
mov
pop
bnd
lods
xchg
mov
adc
jbe
jns
xchg
or
jmp
hlt
xor
mov
rcl
int
hlt
jecxz
shr
jne
addr16
cmp
stos
push
fimul
adc
lds
push
inc
pop
pushf
loope
inc
lahf
ret
add
push
ffree
jl
push
sub
pop
sahf
pushf
cmps
repz
mov
sbb
xor
hlt
aaa
adc
or
mov
dec
push
dec
mov
mov
cmp
fild
ficom
test
push
xchg
ficomp
ins
inc
test
sub
jmp
mov
ror
(bad)
mov
(bad)
loop
mov
sbb
aaa
mov
xor
push
mov
jb
jecxz
dec
icebp
(bad)
fdivr
test
mov
push
fsub
clc
xchg
cmp
lods
mov
mov
mov
(bad)
jne
inc
jo
shl
push
xchg
pushf
jge
pop
push
xchg
xchg
mov
sar
ret
sub
add
mov
cs
pop
pop
retf
xchg
sub
ins
test
icebp
mov
mov
jmp
psubusb
movs
iret
(bad)
mov
sub
pop
add
popf
test
mov
push
jmp
std
mov
and
mov
rcr
(bad)
mov
adc
add
popf
mov
popf
(bad)
call
dec
jns
addr16
push
fsubr
mov
and
xor
adc
das
arpl
jnp
inc
fiadd
inc
fcom
push
pop
rol
je
gs
in
or
in
clc
sub
iret
mov
scas
mov
push
jmp
ss
pusha
lea
xor
add
push
test
cli
push
stos
(bad)
hlt
retw
pop
dec
inc
mov
hlt
jae
and
addr16
jo
or
cmp
mov
dec
sahf
or
movs
lods
add
add
inc
mov
out
cs
loopne
adc
mov
stos
mul
jmp
lods
jns
xor
loopne
mov
cmp
adc
sub
rol
push
jp
scas
scas
xchg
in
hlt
arpl
es
mov
mov
jb
out
push
das
hlt
data16
stos
pop
rcl
jnp
ror
or
cmc
xchg
mov
xchg
mov
(bad)
xchg
inc
fnstcw
loopne
outs
jmp
das
add
adc
fidiv
in
push
cmc
fimul
cmp
cmp
(bad)
fwait
mov
inc
fisttp
scas
mov
xchg
mov
lods
push
jl
ds
cmp
sahf
pop
mov
mov
sbb
sti
push
mov
int
cdq
inc
retf
jmp
mov
stc
ja
and
adc
adc
add
cld
sti
loopne
mov
dec
popa
jp
adc
(bad)
loopne
out
sub
cmp
mov
sti
pushf
cmp
(bad)
out
dec
rcr
lock
cmps
cmp
into
in
sub
add
ins
xor
in
fnstenv
neg
mov
xchg
mov
jbe
push
mov
and
imul
xor
mov
js
push
mov
push
push
cmps
mov
push
jl
clc
movs
sub
fimul
sub
pop
dec
je
in
loopne
jl
rcl
dec
dec
xchg
dec
out
loopne
push
or
test
add
mov
jbe
mov
jae
push
call
mov
xchg
cmps
rcr
dec
test
sub
out
iret
add
add
aam
mov
or
xchg
inc
mov
mov
mov
mov
cwde
mov
xchg
dec
iret
push
adc
jns
or
push
in
aam
jmp
cmp
in
sbb
call
adc
push
std
and
xor
icebp
add
dec
jne
std
shl
xchg
sub
bound
cmc
cwde
xchg
jmp
push
xlat
ins
cmp
pop
cmp
icebp
push
push
push
cld
mov
push
fild
jo
adc
rol
stos
(bad)
adc
rol
in
or
and
(bad)
imul
sub
inc
js
jbe
sbb
mov
stos
push
add
and
cmp
mov
and
sub
ss
je
out
sub
xchg
outs
pop
mov
mul
(bad)
and
test
shl
stos
xor
cmp
push
mov
sub
leavew
in
(bad)
mov
repnz
test
and
leave
or
push
inc
or
add
mov
test
cli
sti
nop
jb
shr
mov
mov
ds
scas
sbb
dec
loop
sub
enter
retf
mov
repz
sub
dec
mov
aas
out
imul
fsubr
mov
ds
mov
ja
sbb
mov
and
pop
gs
pop
xlat
std
xchg
rcl
inc
ins
add
pop
dec
loope
pusha
push
in
xchg
(bad)
pop
in
retf
(bad)
in
outs
call
cwde
aaa
pop
ja
aad
xchg
mov
adc
imul
loop
scas
push
icebp
shr
je
shr
ins
or
scas
cld
jae
scas
add
push
scas
mov
scas
push
scas
and
aam
adc
push
scas
push
test
scas
nop
mov
aam
pop
not
push
inc
aam
xor
aad
xor
aad
and
push
scas
xchg
scas
fsubr
aad
pop
mov
xor
push
scas
lock
scas
mov
test
scas
mov
xor
scas
inc
movs
push
scas
push
sti
fsubr
push
mov
push
scas
fs
scas
fsub
push
scas
push
loop
scas
xor
mov
scas
or
push
scas
shl
scas
mov
in
scas
fsub
push
scas
int3
loop
scas
jnp
scas
push
mov
push
scas
mov
loop
scas
fsub
push
scas
mov
push
scas
mov
test
scas
fsub
push
scas
int3
loop
scas
jnp
scas
push
mov
push
scas
mov
loop
scas
fsub
push
scas
cmp
push
scas
mov
sti
fsubr
jmp
push
cwde
in
scas
push
sbb
push
fsub
push
scas
fsub
push
scas
xor
push
scas
push
inc
aam
fsub
push
scas
fsub
push
scas
(bad)
loop
scas
inc
sbb
push
fsub
push
scas
fsub
push
scas
fsub
push
scas
fsub
push
scas
xchg
loop
scas
push
icebp
shr
(bad)
ins
aam
shl
push
scas
pop
sbb
push
movs
in
scas
mov
out
scas
cmp
push
scas
aam
push
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
(bad)
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
repnz
scas
xchg
scas
push
test
scas
fsub
push
scas
lock
scas
pop
sbb
push
mov
push
scas
mov
loop
scas
fsub
push
scas
jmp
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
scas
loop
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
mov
push
aad
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
push
loop
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
push
loop
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
inc
loop
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
jo
push
scas
xchg
scas
push
mov
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
fs
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
sbb
push
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
add
push
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
add
push
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
xor
push
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
shl
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
ret
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
(bad)
jecxz
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
in
push
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
sahf
jecxz
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
mov
push
aad
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
mov
push
aad
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
cmps
jecxz
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
dec
jecxz
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
jo
push
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
push
push
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
(bad)
push
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
data16
scas
xchg
scas
sub
xlat
scas
fsub
push
scas
lock
scas
pop
sbb
push
movs
in
scas
mov
loop
scas
fsub
push
scas
fistp
push
inc
cmc
ins
pop
xor
arpl
(bad)
push
mov
lds
inc
ja
inc
ja
mov
lods
mov
dec
pop
loop
scas
fsub
mov
dec
pop
loop
inc
jmp
arpl
fsub
push
inc
shl
and
arpl
fsub
push
inc
std
ins
pop
or
arpl
(bad)
push
mov
lds
inc
ja
into
mov
ja
inc
pop
leave
cmp
mov
lds
(bad)
ins
pop
and
arpl
(bad)
push
mov
lds
(bad)
xor
mov
lds
or
scas
test
(bad)
fsubr
inc
ja
inc
pop
adc
inc
ja
inc
ja
inc
ja
push
cli
ja
inc
ja
inc
ja
or
scas
test
(bad)
fsubr
inc
ja
sahf
and
inc
ja
push
fstp
inc
ja
iret
imul
inc
ja
or
push
scas
jp
pop
loope
arpl
inc
ja
inc
ja
push
bnd
inc
ja
inc
ja
inc
or
or
jbe
inc
ja
fistp
movs
scas
fsub
mov
dec
pop
loop
scas
(bad)
jbe
inc
ja
inc
ja
inc
push
movs
mov
shr
mov
jb
scas
fld
and
mov
das
fcom
push
scas
fld
ja
inc
ja
push
add
push
loop
xchg
or
push
push
repnz
aas
and
les
inc
ja
mov
loop
movs
dec
loopne
scas
push
mov
je
xor
push
push
add
pushf
jl
sub
push
or
sub
adc
jb
fimul
js
into
and
fisubr
mov
jmp
inc
mov
scas
inc
ja
inc
ja
inc
ja
sahf
inc
mov
fld
ja
inc
ja
(bad)
sbb
mov
scas
iret
cdq
repnz
pop
loop
mov
lds
inc
ja
stos
stc
push
scas
fld
ja
inc
ja
nop
xor
fsub
adc
inc
ja
(bad)
in
mov
xor
push
loop
test
fsubr
inc
ja
inc
ja
and
sub
lds
inc
ja
fcomp
cmp
retf
scas
inc
ja
inc
ja
ds
test
or
xor
fsub
test
push
loop
mov
lds
sahf
dec
mov
fld
ja
inc
ja
(bad)
xor
fsub
scas
lds
shr
fcomp
add
lds
inc
ja
inc
ja
iret
cdq
cli
dec
pop
loop
mov
lds
inc
ja
inc
fild
ret
add
and
inc
ja
inc
ja
xchg
ins
pop
fdivr
arpl
(bad)
push
mov
lds
inc
ja
jmp
sar
push
scas
(bad)
push
mov
lds
inc
ja
mov
loop
shl
mov
test
lds
inc
scas
(bad)
shr
fcomp
mov
lds
inc
ja
push
xor
add
and
les
inc
ja
push
inc
xor
inc
ja
inc
fbld
fld
ja
inc
ja
jmp
push
mov
fldcw
inc
ja
inc
fbld
fld
ja
inc
ja
push
and
(bad)
jbe
inc
ja
inc
ja
inc
scas
(bad)
shr
pop
mov
jg
xor
cs
shr
mov
(bad)
hlt
popa
xchg
mov
mov
and
mov
leave
(bad)
ficom
jbe
inc
ja
inc
pop
imul
ja
inc
ja
push
add
inc
ja
inc
ja
inc
fbld
fld
ja
inc
ja
inc
ja
push
adc
dec
pop
loop
mov
lds
inc
ja
or
scas
scas
fnstenv
push
push
repnz
and
les
inc
ja
inc
ja
push
fstp
lds
inc
ja
inc
fbld
fld
ja
inc
ja
(bad)
xor
fsub
test
push
loop
mov
lds
inc
ja
retf
imul
mov
inc
not
fdivr
and
les
inc
ja
inc
ja
fstp
cmps
or
test
xor
test
(bad)
push
mov
pusha
mov
fadd
movs
test
shr
repnz
aas
and
les
inc
ja
jmp
jbe
inc
ja
or
into
es
pop
mov
arpl
mov
loop
movs
cli
out
scas
ret
xor
adc
cmp
mov
lds
inc
ja
inc
ja
jl
ret
cld
pop
popa
(bad)
push
mov
inc
ja
inc
ja
retf
stos
pop
loop
mov
lds
iret
dec
inc
mov
lds
inc
ja
inc
ja
repnz
sub
les
inc
ja
(bad)
cmc
std
mov
lds
inc
ja
inc
inc
test
out
scas
inc
ja
inc
ja
iret
dec
jo
inc
ja
(bad)
icebp
jnp
frstor
mov
lds
inc
ja
jne
jbe
inc
ja
inc
inc
test
out
scas
inc
ja
inc
inc
add
les
inc
ja
(bad)
icebp
jnp
frstor
mov
lds
inc
ja
jne
jbe
inc
ja
inc
ja
retf
stos
pop
loop
mov
lds
iret
dec
adc
inc
ja
inc
ja
repnz
sub
les
inc
ja
jne
jbe
inc
ja
retf
stos
pop
loop
mov
lds
inc
ja
paddw
mov
lods
inc
jo
push
mov
out
push
es
adc
pusha
push
scas
xor
nop
push
mov
push
sub
xor
pop
loop
cmp
lds
inc
ja
inc
ja
ficomp
push
inc
call
out
scas
or
fnstenv
sbb
and
ja
sbb
sub
pusha
push
scas
xor
nop
push
mov
push
sub
xor
dec
pop
loop
test
inc
ja
inc
ja
inc
ja
or
sub
xor
dec
pop
loop
popa
fwait
sbb
mov
lds
ins
or
scas
or
fnstenv
icebp
in
and
ja
inc
xor
add
scas
or
ja
inc
ja
mov
sub
das
fnstenv
sbb
and
ja
inc
ja
or
jge
fnstenv
scas
dec
pop
loop
mov
inc
ja
inc
ja
inc
ja
rol
mov
fsub
push
scas
fld
ja
inc
ja
jmp
sub
push
arpl
xor
shr
mov
mov
fprem
pop
pusha
and
push
or
test
push
loop
mov
lds
inc
ja
inc
fbld
(bad)
push
scas
inc
ja
inc
ja
push
jmp
push
scas
(bad)
jbe
inc
ja
inc
fbld
fsub
push
scas
inc
ja
inc
ja
inc
ja
or
scas
(bad)
shr
push
loop
mov
lds
inc
scas
(bad)
shr
fld
ja
inc
ja
(bad)
sbb
push
push
repnz
aas
and
les
inc
ja
inc
ja
fsub
push
scas
inc
ja
inc
ja
push
fild
xchg
repnz
mov
loop
scas
fsub
fldenv
(bad)
jbe
inc
ja
maskmovq
neg
scas
fsub
(bad)
ret
pop
push
loop
jle
imul
mov
lds
iret
xor
inc
ja
iret
and
ja
inc
fbld
sub
scas
mov
scas
mov
loop
movs
sub
shr
movs
sub
sub
jae
pop
int3
not
xchg
outs
pop
fcomp
dec
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
stos
retf
pop
iret
repnz
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
mov
pop
in
stos
dec
pop
in
stos
dec
pop
in
pop
ins
and
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
fwait
cmps
lds
ins
icebp
shl
test
stos
dec
pop
in
stos
dec
pop
in
fwait
out
in
stos
dec
pop
in
stos
dec
push
in
stos
dec
pop
in
stos
dec
sar
test
jmp
xchg
dec
pop
in
stos
dec
mov
retf
inc
xchg
adc
add
ins
stos
neg
xor
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
imul
xchg
or
pop
ins
stos
retf
xchg
addr16
xor
mov
in
stos
dec
pop
in
stos
dec
pop
mov
lahf
dec
mov
and
stos
dec
pop
in
stos
dec
pop
in
stos
dec
rcr
retf
sub
push
lods
jecxz
jle
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
sbb
sbb
mov
stos
dec
pop
in
stos
dec
test
fild
retf
mov
add
ins
jle
stos
dec
pop
in
stos
dec
test
inc
jb
retf
mov
add
shl
retf
cs
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
push
in
stos
dec
push
in
stos
dec
pop
in
mov
xchg
adc
retf
stos
or
scas
xchg
xchg
sub
dec
pop
in
stos
dec
pop
in
stos
dec
pop
push
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
scas
mov
xchg
sub
dec
pop
in
stos
dec
pop
in
stos
mov
adc
dec
pop
in
stos
dec
pop
fadd
cli
ret
cdq
sub
dec
pop
in
stos
dec
lods
mov
xchg
sbb
pop
std
hlt
xor
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
mov
xchg
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
pop
lods
hlt
xor
pop
in
stos
dec
pop
in
stos
dec
pop
push
mov
jle
stos
dec
pop
in
stos
dec
pop
in
stos
jnp
jo
gs
mov
mov
call
xor
movs
sub
test
jl
mov
jle
jecxz
jmp
or
mov
xchg
sbb
mov
jno
xchg
jge
sbb
aam
lahf
or
push
jg
jge
push
mov
lock
sbb
retf
cli
or
xor
xchg
test
arpl
(bad)
enter
out
stos
xchg
fdivr
jb
jmp
ret
lahf
test
sbb
loope
int
gs
push
mov
mov
retf
clc
jmp
and
or
test
or
xor
jg
movs
sub
xchg
dec
int3
ins
mov
sbb
mov
cli
arpl
mov
or
mov
imul
jae
mov
call
bound
pusha
shr
xor
mov
xor
std
ret
mov
shr
test
xchg
jns
test
loopne
pop
test
jle
and
or
nop
or
shr
cmp
cmp
jge
xchg
adc
fidivr
mov
inc
and
inc
mov
popf
fisub
sbb
push
mov
popf
fisub
sbb
fdiv
dec
mov
loop
sbb
int3
fwait
mov
push
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
jge
jg
lods
dec
mov
jge
cmp
jge
jg
jge
jnp
push
cmp
pop
jge
pop
neg
pop
xchg
loopne
not
pop
and
pop
and
repnz
das
sar
pop
neg
pop
mul
xor
call
adc
pop
neg
pop
neg
pop
pop
jbe
mov
sar
pop
neg
pop
neg
or
jge
jg
pop
and
pop
and
pop
and
push
xchg
mov
xor
mov
xor
dec
pop
jbe
mov
sar
pop
neg
pop
neg
pop
neg
ds
mov
mov
sub
neg
pop
neg
js
jl
xor
push
mov
xchg
movs
mov
mov
jge
jge
push
mov
pop
neg
pop
neg
stos
rcr
clc
push
push
adc
pop
neg
fild
push
nop
adc
and
pop
and
pop
lds
rol
push
pop
neg
pop
neg
pop
neg
scas
push
jp
jg
push
rcl
jge
pop
neg
pop
neg
jg
xlat
(bad)
not
sub
neg
pop
neg
test
imul
shl
jg
hlt
bsr
push
push
jg
jnp
ss
jbe
rcr
sbb
ja
mov
inc
ret
mov
add
daa
cmp
mov
mov
pusha
jnp
sub
jnp
jo
(bad)
push
leave
div
inc
mov
mov
lea
mov
retf
mov
xchg
push
mov
cmp
lahf
or
ins
jle
cli
sub
mov
stc
mov
xchg
jno
cli
lods
and
adc
xchg
addr16
cli
movs
mov
mov
add
add
rol
ins
scas
or
sbb
(bad)
enter
push
outs
stos
nop
sbb
sbb
hlt
in
pusha
or
enter
and
ret
in
mov
pop
and
cld
dec
jbe
stos
mov
cmps
test
add
or
mov
mov
pop
adc
(bad)
xchg
cld
sbb
jmp
mov
mov
or
and
(bad)
int3
jg
test
inc
js
test
and
add
test
add
sub
mov
test
mov
test
pop
leave
test
mov
ja
fwait
shl
pop
mov
cmp
or
dec
outs
fwait
dec
cmp
mov
arpl
jecxz
fwait
outs
mov
fsub
pusha
fwait
inc
pusha
push
add
pusha
push
add
push
mov
mov
inc
push
mov
je
mov
mov
es
xchg
add
inc
je
mov
mov
sbb
fs
add
inc
je
mov
es
inc
je
mov
mov
(bad)
dec
loope
daa
mov
mov
aad
arpl
fsub
das
pusha
jne
mov
mov
push
test
add
jmp
inc
cs
scas
bound
je
push
add
ss
scas
bound
mov
jmp
inc
ss
scas
bound
inc
arpl
mov
stos
aam
jp
loope
sahf
cmp
dec
loope
inc
je
mov
mov
sbb
sub
dec
loope
pop
xchg
shl
scas
inc
je
mov
push
sub
xchg
bound
test
pusha
sbb
leave
es
inc
mov
mov
cmps
mov
inc
je
mov
mov
push
add
inc
je
mov
mov
push
jp
adc
inc
popa
push
add
mov
cmc
stos
out
inc
je
mov
mov
mov
or
inc
je
mov
or
rol
pop
popa
push
add
inc
adc
pusha
push
add
out
mov
scas
test
scas
mov
(bad)
and
repnz
and
mov
mov
cmps
xchg
mov
mov
push
add
inc
je
lock
add
pusha
dec
jmp
out
fmul
es
mov
mov
mov
cmps
mov
je
mov
mov
mov
push
add
inc
je
mov
shl
push
add
pusha
cmp
imul
fwait
mov
cld
adc
mov
mov
mov
and
inc
fmul
js
rol
pop
popa
push
add
inc
je
mov
es
push
add
loope
sbb
scas
pusha
push
jp
adc
test
je
pusha
push
pop
aam
mov
scas
es
or
bound
test
pusha
mov
cmps
and
scas
data16
mov
je
scas
pusha
push
jp
adc
cmp
or
pusha
push
pop
aam
mov
scas
sbb
pop
popa
push
add
pusha
fistp
cmps
mov
sub
mov
in
add
adc
pop
jle
movs
scas
pusha
push
pop
aam
mov
scas
fmul
and
push
add
pusha
xchg
pop
cmps
adc
scas
data16
mov
add
scas
pusha
push
jp
adc
daa
jle
cmp
pusha
push
pop
aam
mov
scas
mov
mov
add
pusha
dec
add
popa
push
add
pusha
dec
add
sbb
loop
pusha
jne
scas
pusha
mov
loop
pusha
adc
mov
cs
xor
scas
pusha
mov
loop
pusha
cdq
jmp
dec
loope
sub
sub
scas
pusha
push
jmp
dec
loope
pop
scas
pusha
push
jmp
dec
loope
test
lahf
bound
(bad)
dec
loope
mov
pusha
push
jmp
dec
loope
mov
iret
out
fmul
or
fld
inc
je
mov
cmps
lahf
inc
je
mov
mov
es
pop
xlat
dec
loope
cmc
scas
pusha
push
daa
mov
mov
(bad)
sti
out
fmul
es
stc
inc
mov
mov
cmps
cmps
inc
je
mov
mov
push
add
inc
je
mov
sar
mov
lods
sub
fild
mov
mov
mov
es
mov
lods
push
adc
jg
cwde
stc
push
inc
je
mov
ret
mov
jl
test
rcl
mov
mov
mov
mov
push
mov
mov
es
push
jl
mov
shl
dec
jmp
push
add
inc
je
mov
daa
mov
mov
daa
mov
mov
adc
inc
je
mov
xlat
(bad)
cmp
mov
xlat
mov
xchg
inc
jmp
mov
pop
les
mov
scas
jle
lods
lods
pusha
push
movs
jnp
sbb
loope
inc
je
mov
mov
sbb
mov
fisttp
enter
inc
je
(bad)
out
fiadd
mov
mov
mov
mov
adc
mov
mov
mov
shr
inc
je
mov
out
push
xchg
scas
inc
je
mov
mov
sub
loope
inc
je
mov
ret
inc
rcl
dec
mov
and
mov
mov
es
jp
fisttp
push
pop
and
rol
mov
enter
mov
es
mov
rol
test
inc
in
data16
mov
add
inc
je
mov
cmp
hlt
lods
test
pop
jae
xor
mov
mov
es
fild
iret
inc
je
mov
es
rep
jg
fwait
stc
push
inc
je
mov
ret
jl
das
pusha
jne
mov
mov
mov
adc
inc
je
mov
out
jnp
fisttp
push
pop
and
xchg
scas
pop
push
jmp
pop
push
mov
daa
mov
mov
mov
mov
ins
in
pusha
jne
mov
mov
adc
inc
je
mov
mov
mov
scas
bound
in
pusha
push
or
xchg
dec
mov
cmp
loope
add
pusha
dec
mov
cmp
loope
add
lahf
dec
mov
cmp
loope
add
pusha
dec
mov
push
sbb
jle
sub
push
daa
mov
mov
mov
inc
leave
mov
push
add
mov
pop
add
sub
or
jle
mov
xor
outs
stos
fild
int3
push
retf
xor
stos
stos
fild
jg
mov
retf
es
cmp
inc
xlat
clc
pusha
call
retf
scas
imul
sbb
dec
pop
in
stos
dec
pop
in
fwait
cmps
lds
ins
jge
in
mov
retf
add
sbb
mov
lock
jb
mov
or
push
out
mov
sti
mov
cmps
retf
jge
fild
and
inc
mov
jo
lods
jle
xchg
or
push
cmp
xchg
mov
xchg
test
mov
bound
sbb
jbe
outs
std
add
icebp
lods
mov
add
jl
sbb
movs
inc
mov
cwde
mov
ins
or
adc
jle
imul
adc
or
int
enter
or
mov
pop
or
sbb
push
shl
pushf
add
sbb
test
inc
clc
fld
jbe
jae
lahf
xor
aas
mov
ja
das
push
jb
sar
cmp
js
test
ret
fmul
jno
dec
retf
pop
pop
stc
int3
jg
test
sbb
clc
pop
adc
jb
or
fimul
xchg
jnp
mov
jae
or
mov
pop
out
sbb
xor
and
js
call
jmp
xchg
in
inc
cmp
push
icebp
ss
cmp
fsubr
and
push
cmp
push
cmp
sbb
add
sub
iret
dec
or
cmps
push
xor
mov
sub
add
fstp
ficom
sub
add
icebp
adc
cmp
sahf
sub
add
sbb
add
shl
add
sub
add
int
xor
in
movs
inc
and
pop
add
lock
aam
cmp
sahf
sub
add
sub
bound
and
sahf
sub
add
jecxz
lods
mov
sub
add
(bad)
add
sub
add
in
add
sub
add
xchg
add
sub
xor
neg
add
sub
add
(bad)
dec
push
shl
dec
xor
sub
add
shl
push
dec
popa
mov
lahf
sub
add
and
pop
add
sub
add
(bad)
jno
jno
xor
push
cmp
xor
sti
rep
(bad)
daa
cs
xchg
mov
jecxz
mov
adc
mov
loop
mov
xchg
inc
mov
in
mov
icebp
jle
arpl
xchg
sub
jnp
jo
gs
mov
call
stos
or
scas
pusha
in
sub
dec
pop
in
stos
dec
pop
enter
inc
mov
popf
outs
mov
js
ins
jle
test
loop
aaa
xchg
jge
(bad)
inc
cmp
sub
aam
jl
dec
adc
and
mov
cdq
out
adc
jne
or
xor
test
imul
add
imul
cmp
js
test
in
xor
cmp
ins
jle
adc
test
push
push
enter
fcmovu
mov
sahf
(bad)
xchg
lods
scas
lea
cmp
jns
cmp
jg
mov
jle
clc
cmp
or
mov
clc
inc
sbb
jge
or
xchg
lahf
inc
mov
pushf
outs
mov
pop
mov
mov
pop
push
mov
push
ret
nop
fs
(bad)
shl
jmp
jb
pop
jns
sbb
ret
out
pusha
or
add
sub
outs
mov
ins
test
pop
add
mov
jb
cmp
xor
jb
jb
mov
ins
js
test
cli
mov
jb
sbb
mov
data16
dec
push
and
xor
mov
push
das
lahf
or
int3
jle
leave
imul
jno
sub
mov
retf
ss
(bad)
lea
repz
addr16
cwde
push
addr16
jo
mov
stos
jo
mov
out
fadd
cwde
js
mov
scas
inc
into
daa
ss
inc
and
inc
fisub
mov
out
xor
out
sub
fsubr
sub
fdivr
sub
stos
(bad)
rol
dec
mov
test
dec
mov
adc
arpl
(bad)
outs
stos
dec
adc
push
push
or
cdq
shl
jns
cli
or
mov
push
add
push
adc
mov
fs
cdq
das
pop
out
push
jae
pop
sbb
dec
pop
pop
sbb
jae
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
jnp
jo
ins
jg
mov
mov
imul
add
lahf
xchg
ins
popa
ret
out
outs
jg
pop
gs
mov
jl
test
and
clc
mov
add
nop
or
ins
jle
mov
jl
(bad)
in
ss
xchg
jg
push
adc
cmp
aad
pop
xor
mov
jns
xchg
sbb
pop
xchg
icebp
shl
retf
ins
and
retf
add
in
mov
std
xchg
xor
cmp
iret
sub
mov
into
mov
sahf
lods
xchg
lea
mov
cmp
or
mov
pop
std
or
sbb
ins
adc
test
je
sbb
pusha
or
sbb
sbb
out
xchg
test
mov
stos
xor
daa
cwde
inc
mov
xchg
lods
pop
test
es
pop
sbb
push
xchg
ins
jns
(bad)
xchg
ds
inc
cdq
test
or
fxch
mov
fbstp
sbb
imul
clc
leave
(bad)
mov
mov
sub
pop
gs
test
call
sub
cmp
mov
sbb
sti
add
jle
hlt
movs
loopne
mov
lahf
jne
push
xlat
sub
mov
jmp
pop
dec
(bad)
fistp
jg
ja
js
xchg
add
clc
test
repnz
stos
js
stc
inc
add
dec
xchg
repnz
test
stc
dec
imul
or
cmp
jb
pop
jmp
cmps
int3
push
lds
dec
mov
in
stos
dec
pop
in
stos
dec
jge
fadd
retf
ror
mov
mov
push
ins
lods
xchg
or
imul
push
jae
fwait
retf
or
faddp
cmp
mov
push
or
enter
sub
hlt
pusha
rol
xor
std
repz
pop
mov
sub
enter
sbb
adc
and
or
xchg
ins
jle
mov
mov
push
lahf
jl
sub
or
inc
cwde
test
mov
retf
ss
xor
rcr
test
add
mov
mov
lods
fmul
jbe
xor
pusha
or
aam
mov
sbb
icebp
xchg
xchg
inc
mov
push
sub
xchg
test
mov
test
or
sub
lahf
clc
mov
inc
jle
mov
jp
loope
test
push
stos
addr16
int3
add
in
dec
mov
xchg
test
mov
ja
pop
or
xor
mov
jmp
mov
adc
mov
lahf
jbe
repnz
sub
data16
mov
or
mov
(bad)
mov
mov
xchg
lds
mov
outs
fwait
adc
sbb
adc
fsub
cmp
js
neg
je
mov
rcr
adc
cli
mov
aas
mov
xor
psubusb
cmp
fcomp
push
rcr
rcl
jmp
fwait
jmp
jp
cwde
push
and
je
mov
pop
inc
int3
test
push
add
adc
test
push
or
fwait
adc
add
pop
fisttp
retf
cld
fild
fptan
add
jbe
push
loope
fild
pop
std
out
adc
fild
or
in
adc
xor
dec
scas
paddsw
jg
(bad)
xor
in
stos
dec
pop
in
stos
dec
pop
in
fwait
cmps
les
jp
enter
retf
mov
xor
xchg
sub
dec
pop
in
stos
dec
pop
or
inc
mov
retf
inc
jle
retf
mov
div
inc
mov
leave
sbb
jb
push
test
pushf
ins
lea
mov
sub
mov
pop
dec
jl
mov
lock
xchg
imul
jl
xor
imul
fwait
sbb
push
mov
jns
xchg
(bad)
ret
or
out
lea
sub
jno
dec
retf
clc
mov
cli
mov
sbb
add
test
jne
(bad)
mov
mov
jbe
push
into
sbb
test
test
jg
es
pop
mov
cmp
mov
ss
jno
dec
in
daa
mov
pushf
test
or
lods
and
cmp
lods
js
test
cmp
xchg
js
test
stos
and
xchg
lods
push
jb
or
sti
xchg
imul
mov
push
fs
xchg
js
test
icebp
rcl
test
clc
pop
fsubr
mov
test
mov
ins
jle
pop
xchg
xor
dec
call
mov
cdq
ds
adc
(bad)
aaa
rcl
xor
mov
mov
jns
dec
mov
aam
arpl
adc
or
cmp
pop
sbb
imul
call
pop
sbb
movs
pop
lods
cmp
leave
ds
arpl
cmp
ins
or
imul
inc
pop
lds
pushf
xchg
imul
bound
cwde
inc
arpl
sub
popf
push
fsub
out
jns
imul
inc
pop
out
les
jecxz
pushf
xchg
shl
imul
inc
bound
sub
jns
jecxz
pushf
xchg
cwde
arpl
cmp
arpl
push
shl
imul
inc
pop
sbb
mov
cmp
cld
and
jns
imul
inc
pop
sbb
mov
jmp
lods
cmp
arpl
imul
inc
pop
sbb
mov
pop
sbb
dec
mov
ds
arpl
out
dec
mov
out
dec
popf
xchg
ret
ja
shl
imul
mov
lds
pop
sbb
push
mov
cmp
sbb
xor
mov
cmp
imul
xor
(bad)
icebp
cmp
add
les
adc
jb
pop
jmp
mov
xchg
mov
ret
imul
addr16
mov
lds
ficom
in
stos
dec
pop
in
stos
dec
pop
fadd
stc
retf
jle
call
retf
pop
test
dec
mov
in
stos
dec
pop
in
stos
dec
jge
in
lahf
test
xchg
fs
mov
pusha
leave
push
retf
lock
mov
xor
mov
cli
test
ins
je
cwde
mov
lea
imul
xchg
div
xor
and
je
fwait
sbb
or
mov
mov
jle
clc
mov
jo
(bad)
sbb
jg
jle
out
jle
mov
sub
mov
in
mov
pop
sbb
test
ret
jmp
outs
xchg
mov
jge
pop
int
gs
rcl
int3
jg
test
test
nop
dec
(bad)
nop
test
pop
gs
mov
(bad)
enter
bound
pop
test
sbb
xchg
fmul
jg
add
mov
call
xchg
dec
fdiv
std
xchg
xor
dec
sbb
add
lods
add
cmp
jg
shr
xchg
jns
test
xor
xchg
sbb
xchg
xor
mov
dec
and
jne
cwde
push
ins
cmc
mov
imul
jge
loopne
fnstcw
xor
and
clc
and
xor
and
retf
shl
in
and
xor
and
xor
and
xor
and
xor
and
mov
jmp
mov
in
xor
aaa
cli
xor
aaa
in
xor
aaa
fdiv
arpl
mov
xor
aaa
out
xor
aaa
cli
xor
aaa
mov
icebp
aaa
cli
xor
aaa
shl
sti
aaa
out
xor
aaa
cli
xor
cli
xor
aaa
cli
xor
aaa
xor
and
xor
and
xor
and
mul
out
xor
and
xor
and
xor
div
loopne
aad
xor
and
xor
or
pop
adc
adc
adc
adc
and
adc
adc
adc
ret
pop
int
iret
loope
into
enter
adc
adc
adc
adc
in
xor
aaa
loopne
sub
xor
sub
(bad)
int3
fcom
mov
adc
adc
xor
aaa
xor
sub
(bad)
int3
fcom
xor
or
mov
add
pop
push
mov
cmp
aam
into
(bad)
and
xor
xor
cmp
and
call
lds
adc
adc
adc
adc
adc
and
xor
add
pop
adc
sar
pop
sub
into
xchg
fstp
pop
scas
aaa
pop
adc
adc
adc
adc
int3
pop
aaa
xor
add
adc
adc
adc
adc
cmp
(bad)
fmul
xor
and
pop
adc
adc
adc
adc
adc
cmp
(bad)
fmul
xor
and
pop
adc
adc
adc
adc
int3
and
xor
add
adc
adc
adc
cmp
ror
xor
(bad)
fmul
pop
adc
adc
adc
cmp
lds
ror
add
pop
adc
adc
adc
adc
int3
and
xor
add
adc
cmp
leave
sbb
mov
pop
adc
adc
adc
adc
loop
xor
xor
sbb
pop
scas
aaa
pop
adc
adc
adc
aaa
loopne
aad
xor
and
xor
or
pop
adc
adc
adc
adc
adc
and
retf
add
pop
adc
adc
adc
adc
adc
aaa
loopne
daa
aaa
xor
xchg
xor
xor
aaa
in
div
iret
fcomp
enter
mov
pop
adc
adc
adc
enter
cs
fcom
pop
adc
adc
adc
adc
adc
loopne
and
cmp
aaa
ss
jmp
cmp
and
xor
inc
les
xor
ret
mov
(bad)
stos
aaa
push
cmp
mov
int3
fdiv
shr
sub
or
scas
sahf
ret
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
fadd
stc
retf
jg
mov
mov
mov
mov
mov
mov
mov
call
retf
jb
outs
aad
xor
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
cmp
jle
stos
dec
pop
in
stos
dec
pop
in
stos
imul
pop
scas
sbb
stos
adc
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
mov
add
daa
sbb
mov
test
push
mov
xor
jo
or
jg
enter
(bad)
jae
xchg
retf
jl
(bad)
sbb
(bad)
mov
jns
cmp
adc
(bad)
jecxz
add
std
dec
jmp
mov
test
jnp
inc
mov
lahf
lods
or
gs
lahf
mov
sbb
sbb
cmp
ins
jg
jg
jo
pop
stc
jle
mov
lods
aam
ins
jg
pop
gs
std
xchg
xor
pusha
stc
xor
or
mov
sbb
out
ins
jns
(bad)
xchg
jmp
in
pop
aam
jle
lea
aas
pop
sub
mov
jns
xchg
sub
pop
dec
jns
test
dec
retf
xchg
jge
popf
test
xchg
ja
mov
mov
sub
lods
adc
cwde
push
mov
popf
test
mov
ja
mul
repnz
adc
ss
adc
lea
cli
jge
add
push
xchg
test
lock
cmp
sub
ins
lods
loop
xchg
or
fs
cmp
dec
clc
jbe
cwde
out
cdq
mov
mov
lods
stc
jnp
mov
stc
hlt
mov
sbb
jp
mov
pop
popf
mov
pop
popf
fdivrp
jb
lods
fistp
ficomp
loop
and
lods
stc
pop
popf
mov
pop
popf
mov
pop
popf
sub
fwait
imul
pop
popf
cli
aas
and
mov
in
jae
pop
jne
lahf
jo
stc
in
addr16
mov
add
cmps
jb
pop
popf
cli
add
arpl
pop
lods
pop
xchg
lods
addr16
jo
stc
call
add
pop
sar
or
sbb
xor
js
push
cmps
jb
jno
fisubr
daa
cmps
push
dec
daa
mov
mov
addr16
(bad)
js
push
test
fmul
stc
std
fs
movs
ds
icebp
dec
retf
popf
jnp
xor
outs
and
movs
push
lods
and
add
sbb
popf
pop
retf
popf
jnp
dec
xor
pusha
imul
movs
fs
mov
jb
pop
sbb
arpl
mov
pop
lods
pop
mov
daa
xor
je
xor
dec
daa
mov
jb
pop
std
bound
popf
mov
ja
lahf
out
or
ins
jg
mov
in
arpl
push
outs
pop
lods
pusha
arpl
cmp
add
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
jnp
lods
stc
stos
outs
lods
sti
jp
mov
pop
popf
mov
pop
in
cmps
xor
dec
pop
lods
sti
jp
mov
pop
popf
mov
pop
popf
mov
pop
popf
mov
pop
popf
mov
scas
mov
stos
stc
jnp
(bad)
out
cmp
jne
pushf
mov
pop
popf
mov
pop
popf
mov
pop
imul
pop
popf
mov
pop
popf
stos
adc
and
mov
pop
popf
mov
pop
popf
mov
pop
popf
jle
js
lods
inc
sbb
jno
mov
lods
stc
sub
mov
mov
ja
sbb
jno
mov
mov
pop
popf
mov
pop
popf
mov
pop
outs
sub
stc
stos
mov
lods
pop
push
and
jne
pushf
mov
pop
popf
mov
pop
popf
mov
pop
popf
mov
pop
popf
mov
cmp
pushf
mov
pop
popf
mov
jnp
test
add
mov
and
pop
popf
mov
pop
popf
js
scas
mov
and
pop
popf
mov
pop
popf
mov
pop
popf
jmp
popf
mov
pop
popf
mov
cs
stc
jp
mov
pop
popf
mov
jno
test
xchg
lahf
mov
jmp
idiv
mov
pop
popf
scas
cmp
lods
stc
popf
xor
stc
ins
rcl
repnz
mov
pop
popf
mov
pop
popf
retf
mov
ficomp
fisubr
mov
pop
popf
mov
div
dec
(bad)
lods
adc
lods
jns
mov
add
mov
and
fild
jl
lods
pop
push
hlt
shl
mov
pop
popf
mov
pop
popf
mov
mov
dec
push
mov
and
pop
popf
mov
pop
popf
mov
pop
popf
stos
sbb
and
xchg
jns
lods
sub
push
test
jne
pushf
mov
pop
popf
mov
pop
popf
mov
pop
popf
mov
hlt
mov
std
repz
mov
pop
popf
mov
pop
popf
mov
pop
popf
mov
out
mov
(bad)
sbb
push
cld
shl
mov
pop
popf
mov
pop
popf
mov
sbb
inc
and
ficomp
ficomp
fisubr
adc
repnz
mov
sbb
mov
mov
pop
mov
lods
out
add
jno
pushf
mov
pop
popf
mov
pop
fnstsw
in
jbe
mov
pop
popf
mov
jnp
lods
stc
pop
popf
mov
pop
popf
mov
lods
mov
pop
js
mov
test
sbb
fnstcw
adc
repz
imul
mov
jno
repnz
cmps
into
jp
lods
sti
add
movs
movs
out
mov
or
(bad)
jp
lods
sti
add
push
pop
sti
add
push
dec
sti
add
push
jnp
add
push
imul
ss
pushf
push
sbb
add
push
or
and
imul
popf
mov
pop
popf
mov
test
or
repz
push
rol
aam
stc
pop
popf
mov
pop
popf
mov
pop
popf
mov
fld
pop
test
mov
pop
popf
mov
pop
popf
mov
retf
sbb
in
(bad)
and
pop
popf
mov
pop
popf
outs
jecxz
cs
xchg
lahf
mov
jecxz
idiv
mov
jge
lods
out
fist
test
sbb
push
sub
jne
pushf
mov
pop
popf
mov
pop
popf
mov
pop
mov
lods
stc
gs
clc
jnp
stos
xor
and
pop
adc
dec
js
mov
es
test
jecxz
sti
mov
stos
stc
jp
es
test
sti
sbb
xor
push
test
sti
sbb
xor
scas
stc
jp
es
lods
sub
stc
jle
sub
js
mov
lods
stc
xor
js
mov
lods
stc
xor
js
mov
lods
stc
xor
js
mov
lods
stc
xor
pop
fild
cwde
cmp
jne
pushf
mov
pop
popf
mov
pop
popf
mov
pop
xor
lods
stc
jp
lods
fistp
ficomp
ficomp
add
mov
pop
popf
mov
pop
popf
cli
repz
mov
lods
stc
jp
mov
sub
popf
mov
pop
popf
mov
pop
popf
jmp
popf
mov
pop
popf
mov
sbb
pop
popf
mov
pop
popf
push
xchg
rcr
xor
stc
jp
mov
pop
popf
mov
pop
popf
mov
pop
popf
push
xchg
mov
xor
pop
fild
cwde
cmp
jne
pushf
mov
pop
popf
mov
pop
popf
mov
pop
xor
lods
sti
jp
lods
fistp
ficomp
ficomp
pop
push
push
ret
pushf
mov
pop
popf
mov
pop
popf
mov
pop
popf
mov
pop
popf
mov
pop
popf
mov
fisubr
pop
push
push
ret
pushf
mov
pop
popf
mov
pop
std
outs
sbb
pop
popf
mov
pop
popf
mov
ficomp
ficomp
fmulp
loopne
(bad)
jp
movaps
mov
jp
ucomiss
pop
clc
jnp
inc
fisttp
pushf
mov
pop
popf
mov
pop
mov
scas
push
jmp
lods
stc
pushf
lods
fisttp
mov
mov
pop
int
mov
cmp
mov
cmp
ret
sub
cmps
stos
sub
cmps
sub
mov
dec
js
pushf
mov
pop
popf
mov
pop
popf
mov
pop
test
lods
fistp
ficomp
ficomp
jbe
sbb
pop
popf
mov
pop
popf
mov
test
pop
sbb
retf
push
jnp
lods
stc
pop
popf
mov
pop
popf
mov
pop
popf
push
xchg
mov
xor
pop
fild
cwde
cmp
jne
pushf
mov
pop
popf
mov
pop
inc
(bad)
mov
cmp
out
sbb
xor
mov
and
out
or
sub
mov
out
test
out
adc
sub
mov
adc
lods
out
add
popa
xor
sbb
mov
and
pop
popf
mov
pop
popf
jl
nop
inc
push
ficomp
ficomp
ficomp
jmp
mov
pop
popf
mov
pop
popf
mov
pop
mov
push
cld
xchg
xor
bnd
mov
mov
pop
popf
and
pop
mov
jns
lods
stc
pop
popf
mov
pop
popf
mov
pop
popf
mov
stos
xchg
pop
push
test
mov
pop
outs
lods
pop
push
fs
pushf
mov
pop
popf
mov
pop
ins
xor
dec
js
mov
mov
pop
popf
mov
pop
popf
mov
pop
stc
add
cli
mov
mov
pop
popf
(bad)
shl
stc
xchg
je
xchg
shl
stc
fs
sbb
mov
sub
jl
in
xor
js
mov
lods
stc
xor
js
mov
push
push
xor
js
mov
lods
stc
xor
pop
fiadd
mov
push
push
aam
jne
pushf
mov
pop
popf
mov
pop
popf
mov
pop
mov
lods
pop
xchg
retf
or
mov
mov
pop
popf
and
adc
mov
mov
pop
popf
js
test
mov
sti
mov
and
pop
popf
mov
pop
popf
mov
pop
popf
jl
jnp
lods
sub
adc
lods
fistp
ficomp
ficomp
dec
rcr
sti
mov
lods
sub
test
mov
pop
popf
mov
pop
popf
jl
test
lods
sub
adc
lods
fistp
ficomp
pop
clc
xchg
sub
jnp
mov
pop
sbb
in
aad
stc
pop
popf
mov
pop
popf
js
stos
adc
adc
lods
fistp
ficomp
pop
clc
xchg
xchg
stc
jnp
xchg
pop
sbb
in
aad
stc
pop
popf
mov
pop
popf
mov
scas
mov
lods
pop
push
movs
ret
pushf
mov
pop
popf
mov
pop
popf
mov
pop
mov
stos
or
sub
jnp
icebp
sub
lods
stc
test
mov
pop
popf
mov
pop
popf
mov
pop
popf
js
scas
mov
xchg
lods
fistp
ficomp
ficomp
dec
cdq
cmp
sti
jnp
jns
scas
mov
and
pop
popf
mov
pop
popf
jmp
popf
mov
pop
xor
lods
test
pop
popf
mov
pop
popf
mov
jno
test
xchg
lahf
mov
jmp
idiv
mov
pop
popf
mov
hlt
mov
push
mov
mov
pop
popf
mov
pop
popf
mov
pop
popf
push
mov
lods
stc
pop
popf
mov
pop
popf
mov
pop
popf
mov
pusha
shl
repz
and
popf
test
repz
mov
pop
popf
mov
pop
popf
jp
pusha
mov
std
repnz
stos
jo
inc
xchg
pop
popf
mov
pop
mov
stos
adc
sub
std
repz
push
rol
aam
stc
pop
popf
mov
pop
popf
mov
pop
popf
or
jnp
push
sar
popf
mov
pop
popf
mov
pop
popf
mov
retf
sbb
in
(bad)
and
pop
popf
mov
pop
popf
outs
pop
adc
jo
inc
xchg
lods
fistp
ficomp
stc
repz
mov
idiv
mov
pop
popf
mov
jge
lods
adc
(bad)
dec
cdq
cmp
stc
scas
mov
xchg
lods
fistp
ficomp
mov
and
push
shl
and
pop
popf
mov
pop
popf
stos
or
jmp
js
mov
jns
scas
call
jp
mov
pop
popf
mov
pop
popf
mov
pop
imul
repz
lods
pop
push
movs
ret
pushf
mov
pop
popf
mov
pop
popf
mov
mov
sbb
sti
mov
cmps
pop
test
mov
pop
popf
mov
pop
popf
mov
lods
movs
jns
fiadd
adc
lods
fistp
ficomp
lods
sub
mov
sub
pop
popf
mov
pop
popf
mov
pop
popf
stos
or
fcos
add
js
mov
or
jne
pushf
mov
pop
popf
mov
pop
popf
mov
pop
ins
cwde
inc
or
js
mov
or
jne
pushf
mov
pop
popf
mov
pop
outs
lods
sub
mov
jns
test
mov
pop
popf
mov
pop
popf
mov
jge
lods
adc
mov
lods
std
xchg
pushf
jns
fiadd
adc
lods
fistp
ficomp
cs
mov
lods
stc
xchg
cwde
jns
fiadd
adc
lods
fistp
ficomp
inc
or
js
mov
lods
stc
test
mov
pop
popf
mov
pop
popf
mov
pop
popf
stos
or
movs
mov
mov
pop
push
test
mov
push
stc
repz
xchg
lods
fistp
ficomp
ficomp
dec
mov
jge
jnp
lods
sub
std
aad
stc
pop
popf
mov
pop
popf
stos
or
movs
push
jns
lods
sub
repz
xchg
lods
fistp
ficomp
pop
clc
gs
sti
jp
mov
push
pop
popf
mov
pop
popf
js
stos
inc
lods
jo
outs
lods
pop
test
mov
pop
popf
mov
pop
popf
mov
jge
lods
adc
mov
or
jne
pushf
mov
pop
popf
mov
mov
lods
stc
scas
mov
lods
sub
std
aad
stc
pop
popf
mov
pop
popf
mov
pop
popf
stos
or
movs
push
mov
xbegin
fiadd
adc
lods
fistp
ficomp
ficomp
pop
clc
gs
clc
jp
mov
push
pop
popf
mov
pop
popf
mov
in
push
push
fild
icebp
jnp
jns
test
cmp
test
shr
aad
stc
pop
popf
mov
pop
popf
mov
pop
popf
retf
xchg
xor
test
mov
push
adc
(bad)
mov
lods
pop
adc
pop
push
test
ja
lods
fistp
ficomp
mov
icebp
mov
push
shl
and
pop
popf
mov
pop
popf
mov
jge
lods
adc
lods
sub
test
mov
pop
popf
mov
hlt
mov
sbb
jp
mov
pop
popf
mov
pop
popf
mov
lods
scas
das
jge
dec
lods
icebp
jp
inc
(bad)
pushf
mov
pop
popf
mov
jnp
pop
out
movs
jge
rol
ficomp
ficomp
ficomp
out
mov
mov
stc
jp
stos
jo
js
in
mov
cmps
stc
jp
lods
push
repz
loope
and
stc
gs
repz
sbb
iret
repz
and
push
test
push
add
mov
sbb
inc
mov
in
stos
dec
pop
in
pop
xchg
cmps
xor
mov
adc
dec
pop
in
stos
dec
pop
fadd
sti
ret
jg
mov
push
int
int3
mov
ret
pop
outs
jg
mov
retf
jmp
push
ins
popa
ret
cmp
gs
inc
mov
push
(bad)
sti
mov
dec
jns
fwait
mov
test
(bad)
jle
mov
mov
jns
jl
pop
into
repnz
mov
or
(bad)
fdivr
imul
pusha
rcr
mov
in
retf
mov
ret
enter
mov
xchg
jbe
retf
test
mov
call
sbb
retf
mov
or
sahf
or
mov
pop
ins
add
test
jg
jne
and
or
bound
bound
enter
ror
or
push
or
push
ins
jle
pop
mov
sub
fwait
js
test
lea
in
pusha
or
add
out
jo
push
dec
std
xchg
xor
lds
pop
jmp
stos
test
loopne
aaa
stc
jno
sti
jns
or
pop
gs
xchg
xchg
xor
xor
jne
scas
in
lahf
and
sub
pop
jno
xor
sbb
fnstsw
lods
mov
xchg
sbb
repz
aam
jne
pusha
xor
jmp
or
stos
jl
call
and
ds
dec
cmps
ins
inc
inc
pop
mov
inc
and
in
and
and
xchg
in
and
in
or
mov
pop
jmp
adc
dec
cmp
data16
iret
or
fs
cmps
pop
lods
mov
enter
inc
and
ret
cs
push
bound
clc
dec
test
ret
jns
xchg
pop
jmp
jg
mov
mov
push
imul
mov
stos
dec
pop
in
stos
imul
pushaw
push
retf
mov
out
or
xchg
jl
mov
sbb
mov
jg
test
jbe
push
test
outs
add
sbb
and
cs
xor
inc
and
scas
inc
lea
pop
arpl
push
inc
and
retf
in
or
and
rcl
xchg
test
mov
data16
(bad)
push
inc
mov
mov
gs
test
retf
mov
stos
jno
sahf
lods
enter
mov
inc
test
xchg
dec
bnd
xor
lods
test
jle
mov
lock
xchg
sbb
leave
jge
sub
mov
scas
addr16
or
loopne
jno
or
sbb
enterw
and
inc
jle
hlt
mov
add
in
add
ins
or
mov
sbb
xchg
xor
mov
lods
ret
jbe
cld
sbb
imul
test
dec
jle
mov
(bad)
jmp
(bad)
jle
pop
xchg
xor
or
(bad)
ds
mov
xor
imul
mov
sbb
(bad)
mov
jbe
in
lods
ret
cmps
mov
xchg
jbe
xor
add
mov
push
ret
je
jle
ret
jmp
push
aam
sbb
xchg
xor
fcomp
or
aam
mov
mov
push
dec
or
and
mov
add
xchg
stos
add
in
loop
pop
xchg
mov
mov
test
jnp
das
jmp
imul
daa
(bad)
(bad)
and
push
mov
(bad)
fnstsw
and
push
mov
(bad)
(bad)
xchg
out
bound
mov
(bad)
fistp
xchg
or
xchg
int3
dec
bound
mov
xchg
stos
add
xchg
stos
add
mov
add
pushf
loop
pop
xchg
mov
mov
mov
idiv
in
loop
pop
xchg
mov
mov
test
jnp
jg
jae
and
bound
mov
(bad)
(bad)
and
push
mov
(bad)
fnstsw
and
push
mov
(bad)
(bad)
xchg
out
bound
mov
(bad)
fistp
xchg
or
xchg
int3
dec
bound
mov
xchg
stos
add
sbb
mov
mov
add
pushf
loop
pop
xchg
test
mov
mov
add
push
mov
cwde
popf
iret
and
xchg
mov
jae
and
mov
(bad)
icebp
push
das
out
jae
and
bound
mov
pop
xchg
mov
xchg
ret
xchg
mov
xchg
fcmovb
pop
xchg
mov
xchg
fcmovb
pop
xchg
mov
xchg
in
add
popf
dec
xchg
loope
pop
xchg
add
xchg
stos
add
mov
add
mov
repz
sbb
and
mov
xchg
std
out
movs
xchg
mov
pop
xchg
pop
int
xchg
xlat
inc
bound
mov
pop
xchg
test
lahf
jb
enter
test
mov
or
jae
and
adc
dec
shl
and
test
jae
shl
and
test
jmp
out
xchg
push
in
dec
and
sbb
and
mov
add
mov
add
sbb
sub
mov
add
ins
fisub
cwde
popf
int
xchg
mov
pop
xchg
mov
xchg
ret
xchg
mov
xchg
fcmovb
pop
xchg
mov
xchg
fcmovb
pop
xchg
mov
xchg
jb
enter
test
mov
or
jae
and
adc
dec
shl
and
test
jae
shl
and
test
pop
and
sbb
test
xchg
mov
jb
call
mov
add
pushf
pop
add
xchg
pop
jmp
xchg
inc
in
les
loopne
add
or
xchg
pop
xor
jae
iret
mov
and
hlt
fwait
xor
pop
retf
mov
mov
mov
mov
es
int3
push
jne
xchg
lea
mov
mov
jg
mov
jg
mov
jg
mov
mov
jg
mov
and
jg
mov
jg
mov
jg
mov
jg
mov
ja
out
sub
mov
jg
mov
jg
mov
push
mov
jg
mov
jg
mov
jg
mov
mov
jg
mov
ins
mov
pop
mov
jg
mov
pop
mov
jg
test
fld
out
retf
jle
popf
cs
adc
ins
ins
inc
je
lds
fwait
out
shl
or
jp
int3
add
pop
mov
jnp
add
mov
inc
push
jae
pushf
mov
jp
cdq
jp
enter
inc
mov
ins
and
fcom
test
retf
call
xor
mov
sti
mov
jb
xchg
xor
pushf
fldcw
pop
fld
or
sbb
retf
call
retf
mov
push
outs
cmps
retf
jg
and
fld
dec
pop
in
stos
dec
pop
xor
ficom
inc
mov
in
stos
dec
pop
in
stos
dec
pop
fadd
dec
pop
in
stos
dec
pop
in
stos
dec
pop
push
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
js
push
mov
retf
mov
push
adc
stos
dec
pop
in
stos
mov
xchg
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
pop
mov
xor
pop
in
stos
dec
pop
in
stos
dec
pop
int3
test
xchg
rcr
jge
mov
leave
fld
cli
jmp
pop
in
stos
dec
pop
in
stos
dec
jns
lods
xchg
dec
mov
pop
ins
and
stos
dec
pop
in
stos
dec
pop
in
add
clc
add
ins
pop
in
stos
dec
pop
in
stos
dec
pop
in
pop
leave
div
dec
pop
in
stos
dec
pop
in
stos
mov
xchg
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
pop
mov
pop
in
stos
dec
pop
in
stos
dec
pop
push
mov
jle
stos
dec
pop
in
stos
dec
pop
jbe
jp
jo
dec
jg
iret
outs
jle
mov
add
leave
data16
dec
xor
push
retf
pop
gs
mov
call
push
mov
retf
mov
leave
fld
cli
jmp
add
and
ins
pop
in
stos
dec
pop
in
pop
xor
mov
leave
fld
cli
jmp
add
and
sbb
retf
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
lods
ret
jle
cmp
jo
dec
jg
mov
popf
pop
and
ror
fld
cli
jmp
jns
lods
xchg
or
into
ja
jp
jo
dec
jle
ins
push
call
pop
out
jge
cmps
lds
ins
test
mov
jle
cmps
mov
inc
mov
in
stos
dec
pop
in
stos
or
jbe
jp
jo
dec
jg
cmc
push
jge
mov
imul
mov
retf
and
xchg
test
xor
lods
xchg
xchg
shl
outs
xor
mov
in
stos
dec
pop
in
stos
ror
fld
cli
jmp
pop
in
stos
dec
pop
in
stos
dec
jne
stos
ins
jle
xchg
xor
dec
pop
in
stos
dec
pop
in
stos
dec
pop
or
inc
mov
retf
inc
jle
retf
mov
or
dec
pop
in
stos
dec
pop
in
stos
dec
scas
dec
test
dec
pop
in
stos
dec
pop
int3
jns
popa
ret
outs
jg
pop
lea
dec
pop
in
stos
dec
pop
enter
inc
mov
ja
mov
test
push
mov
cs
imul
retf
or
imul
in
ror
rcr
repz
jb
hlt
jne
sbb
mov
jle
mov
test
iret
cmp
jno
jle
jae
xor
int
sbb
push
enter
retf
or
add
sbb
lahf
pusha
retf
mov
sbb
pushf
lods
out
ins
jg
add
mov
retf
xchg
sbb
cmp
mov
mov
test
or
mov
mov
loope
int
gs
pop
jnp
retf
mov
popf
retf
mov
mov
test
mov
test
imul
addr16
repz
ins
or
mov
jmp
sbb
cld
ficomp
jns
test
push
ins
jb
and
sbb
inc
cmp
lods
jo
xchg
cmp
pop
xor
push
add
xchg
sbb
xchg
xor
or
rol
jmp
xchg
jge
jmp
cmp
push
mov
or
(bad)
loopne
dec
and
inc
cvttps2pi
pusha
arpl
push
adc
sub
out
sbb
ins
jmp
sbb
out
or
inc
dec
sbb
ins
dec
and
outs
jmp
push
cmp
arpl
cmp
inc
xchg
js
sbb
pusha
inc
adc
jp
adc
out
sbb
dec
imul
ins
push
sub
das
sbb
arpl
or
inc
sbb
je
sub
or
out
sbb
out
and
out
or
je
call
ja
sub
jns
push
out
or
jp
and
pusha
arpl
ins
popa
call
jns
mov
out
and
push
or
out
sbb
inc
jmp
sub
ins
dec
xchg
je
push
mov
jp
sbb
jo
push
mov
outs
jnp
mov
ins
jne
sub
xor
outs
arpl
mov
inc
jne
or
outs
sbb
arpl
or
mov
ins
jnp
cs
push
sub
or
out
sbb
cli
add
adc
imul
je
xchg
jp
add
jl
sbb
jp
call
sbb
or
add
jl
sub
ins
dec
xchg
je
push
mov
jp
sbb
jo
push
mov
cmp
add
dec
sbb
jmp
sbb
inc
jmp
xchg
addr16
out
xchg
dec
cs
imul
js
xchg
inc
ja
sub
xchg
jp
add
jl
sbb
jp
call
pop
xchg
jmp
push
mov
pusha
ja
sub
dec
sbb
dec
jnp
cmp
add
mov
jle
cs
dec
or
dec
ja
and
sbb
dec
and
pusha
arpl
push
out
xchg
ins
sbb
dec
jmp
or
dec
jnp
sub
outs
xor
mov
dec
inc
sbb
out
sbb
fs
mov
jbe
and
dec
inc
or
out
add
out
sub
js
add
je
add
jle
xchg
ja
ss
popa
call
jne
mov
dec
arpl
mov
dec
imul
out
add
out
or
jp
push
sub
add
ins
popa
call
ja
add
add
outs
sbb
imul
jmp
sub
and
push
sub
inc
arpl
xor
and
arpl
mov
jo
push
mov
and
pushf
jo
jae
cmp
mov
inc
jnp
adc
cmp
or
dec
xor
xor
and
outs
sbb
inc
inc
sub
adc
out
sbb
out
push
ds
jg
sub
sub
mov
inc
dec
cs
out
or
jne
sub
xor
dec
jmp
and
inc
inc
adc
ins
popa
xchg
jmp
cs
add
out
xchg
jne
mov
fs
push
mov
ins
jmp
or
dec
dec
xchg
je
push
mov
ins
dec
sbb
jp
sbb
jle
xchg
jae
or
popa
xchg
ja
mov
out
sbb
inc
inc
sub
adc
out
push
sub
gs
ins
jmp
sbb
out
add
outs
cmc
pop
ds
arpl
sub
popa
and
dec
arpl
sub
and
dec
ja
ss
adc
ins
dec
xchg
jp
xor
es
or
and
out
or
jp
or
pusha
dec
xor
dec
arpl
mov
outs
jmp
or
pusha
ja
or
push
out
adc
jle
add
out
sbb
pusha
outs
or
inc
jnp
cmp
cmp
jnp
mov
push
sbb
out
and
cli
test
sbb
dec
jmp
or
js
or
dec
jns
push
out
or
inc
imul
out
adc
jle
and
inc
inc
push
or
jnp
mov
dec
arpl
push
je
push
sub
popa
add
fs
dec
ja
adc
and
inc
icebp
xchg
fs
push
push
fs
or
fs
mov
js
and
fs
and
sbb
jmp
pop
inc
and
push
and
cs
js
sub
push
dec
xchg
js
and
mov
ror
call
jne
add
or
xchg
jne
mov
jp
xchg
jbe
sbb
push
inc
inc
ds
call
jnp
mov
dec
imul
ins
push
sub
jne
or
push
je
or
and
es
xor
and
xchg
jno
push
out
sbb
out
push
sub
jne
and
and
out
or
outs
ja
mov
inc
jmp
sub
ins
dec
xchg
je
push
mov
jp
sbb
jo
push
mov
inc
jmp
sbb
jo
xchg
js
and
ins
jne
mov
push
push
xor
xchg
inc
adc
jp
xchg
inc
xchg
fs
es
or
dec
ja
adc
and
jle
add
dec
dec
xor
and
out
sbb
out
add
out
push
sub
gs
ins
jmp
push
sub
out
and
adc
inc
dec
mov
js
call
ja
add
add
inc
adc
jle
add
out
sbb
js
adc
outs
jmp
adc
out
pushf
mov
inc
sbb
jnp
cs
add
inc
cmc
pop
cmp
jnp
sub
gs
ins
jmp
or
dec
dec
xchg
inc
arpl
add
outs
or
inc
arpl
mov
js
add
out
add
jo
sbb
das
add
fs
add
out
and
pusha
arpl
push
ins
popa
xchg
jmp
or
push
imul
jne
sub
call
jmp
xchg
inc
jmp
and
push
je
push
xor
xor
or
outs
imul
jmp
and
jne
mov
out
or
je
and
ins
popa
xchg
dec
xchg
js
and
inc
inc
sahf
mov
jbe
sub
jle
xchg
jmp
add
outs
arpl
mov
js
and
jle
add
dec
jns
add
inc
adc
inc
cmc
xchg
inc
xchg
je
push
mov
jbe
and
ins
popa
sahf
mov
outs
icebp
xchg
js
sub
pusha
inc
or
out
sbb
inc
mov
out
or
inc
dec
call
arpl
mov
jl
sub
dec
fld
and
add
jl
sbb
or
cmp
push
mov
inc
jnp
xor
adc
push
adc
push
inc
xchg
inc
jmp
push
sub
push
mov
ins
jmp
xchg
fs
and
ins
dec
xchg
ins
jne
cmp
or
out
or
js
or
dec
arpl
push
out
sbb
push
push
sub
push
mov
js
sahf
mov
int3
leave
sahf
add
xchg
jne
mov
push
adc
dec
dec
or
fs
mov
je
sub
je
sbb
or
pusha
mov
int3
leave
stos
mov
or
pusha
mov
ret
xchg
hlt
test
or
out
add
ins
jmp
xchg
ins
jae
ds
imul
jle
xchg
ja
ss
popa
xchg
jp
xor
dec
dec
xchg
js
or
and
popa
and
dec
arpl
sub
and
dec
ja
ss
adc
ins
dec
xchg
fs
or
bound
cmp
arpl
es
pop
or
and
xchg
je
add
jle
push
mov
dec
jmp
xor
dec
arpl
mov
inc
test
sbb
jp
push
jp
sbb
cmp
push
out
sbb
out
sbb
fs
mov
jp
xchg
fs
sbb
jp
mov
sub
adc
out
add
ins
dec
and
dec
dec
add
inc
gs
out
adc
and
cmp
jmp
push
sub
sbb
jle
sub
jp
xchg
outs
popa
and
inc
dec
xchg
jo
cs
sbb
push
sti
mov
cmps
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
gs
xor
and
cmp
jmp
adc
fs
adc
popa
xchg
jp
or
out
and
jp
or
inc
jmp
or
js
call
jne
jb
sbb
imul
js
inc
and
inc
mov
js
sbb
inc
ds
xchg
inc
jmp
or
dec
imul
cld
ins
add
ins
popa
xchg
jp
adc
ins
jmp
or
dec
jmp
or
cli
cmp
or
sub
add
jp
or
dec
jnp
cmp
jnp
mov
fs
and
or
out
push
xor
xchg
sub
inc
jg
data16
sbb
pusha
inc
adc
jp
xchg
jp
xchg
js
sbb
pusha
inc
xchg
js
xor
cmp
arpl
cmp
inc
je
dec
dec
xchg
js
or
jbe
and
out
or
ins
jnp
sub
xchg
imul
jne
mov
push
add
dec
jnp
cmp
jmp
or
dec
dec
xchg
inc
arpl
sub
or
out
sbb
imul
ja
ins
inc
jnp
and
xchg
cli
leave
cmps
mov
retf
and
pop
inc
and
xchg
dec
shl
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
bound
add
cmps
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
bound
add
cmps
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
outs
ins
ja
cs
xchg
push
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
data16
and
ins
dec
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
mov
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
or
cmps
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
dec
je
or
cmps
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
dec
je
or
cmps
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
dec
je
or
cmps
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
bound
add
out
sbb
outs
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
(bad)
cmps
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
sbb
fs
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
dec
fs
cmp
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
into
cmps
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
add
out
sbb
outs
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
(bad)
cmps
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
add
out
sbb
outs
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
enter
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
bound
add
out
sbb
outs
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
out
pushf
and
sbb
jp
dec
adc
add
push
inc
inc
ds
xchg
xor
arpl
cmp
inc
xchg
sub
ins
dec
pop
ds
arpl
and
or
dec
ja
ss
sbb
arpl
or
push
push
ja
push
fs
or
jp
sub
push
mov
ins
jne
push
out
push
xor
xchg
or
fimul
add
ins
cmc
outs
xor
xor
xchg
je
push
mov
fs
or
out
and
pusha
imul
outs
add
inc
dec
xchg
dec
jmp
and
test
xchg
test
mov
mov
ins
inc
xchg
popa
sbb
push
jmp
sbb
inc
jne
mov
out
xchg
bound
sub
call
jmp
and
je
adc
inc
sub
fs
or
jbe
add
jl
add
mov
inc
mov
mov
sub
cmp
jno
mov
ins
inc
xchg
inc
cs
sub
add
ins
jmp
test
cs
out
sub
inc
ja
or
ins
adc
ret
or
outs
sbb
mov
data16
xchg
jmp
xchg
dec
cs
arpl
sub
xrelease
ins
ja
cs
jmp
xor
jp
xor
cld
jmp
sbb
out
or
ins
jno
sub
ja
mov
dec
jmp
adc
dec
jmp
add
jle
shl
jnp
mov
bound
sub
inc
xor
sbb
jp
inc
dec
cmp
pushf
mov
cmp
sbb
fs
out
sbb
outs
jmp
push
mov
bound
sub
arpl
xor
cs
fs
fdiv
repnz
xchg
imul
push
imul
inc
pop
xchg
jmp
pushf
add
xchg
jne
xor
xchg
arpl
or
mov
bound
adc
xor
xchg
fs
jnp
cs
sbb
jmp
sbb
jp
inc
dec
cmp
xchg
and
cmp
inc
dec
dec
or
dec
icebp
xchg
add
jp
shl
ja
add
arpl
jp
jno
ds
dec
sbb
out
adc
pusha
ja
cmp
sub
mov
dec
sbb
je
or
and
cmp
scas
inc
jmp
sahf
mov
js
push
mov
dec
icebp
xchg
popa
sbb
push
jmp
or
ins
jno
mov
out
adc
dec
jmp
add
jle
add
outs
jmp
or
out
cs
mov
dec
sbb
je
or
cmp
adc
(bad)
jmp
push
mov
jl
sbb
inc
sbb
cmp
push
and
inc
and
icebp
xchg
and
hlt
repnz
ins
jno
test
and
inc
ds
dec
cs
outs
imul
dec
dec
xor
out
add
bound
add
jmp
and
mov
sub
cmp
jno
cs
jmp
pop
or
xchg
jne
mov
fs
js
ins
and
ins
jno
cmp
movs
mov
retf
mov
and
sub
xchg
dec
or
dec
icebp
xchg
popa
sbb
push
icebp
xchg
fdiv
cmps
sub
inc
add
pop
and
inc
xor
sbb
jp
inc
dec
cmp
pushf
mov
add
add
popa
adc
pusha
jns
jo
addr16
mov
ins
inc
fdiv
push
jns
mov
out
add
out
adc
pusha
ja
cmp
sub
out
and
dec
arpl
mov
ror
inc
jbe
and
outs
jnp
es
push
xor
xchg
dec
or
dec
cmc
fdiv
mov
jne
add
popa
or
out
xchg
ja
sub
cs
push
xor
xchg
dec
or
dec
jmp
sbb
and
mov
sub
cli
outs
sbb
jp
and
outs
arpl
mov
pusha
ja
cmp
dec
add
ins
dec
call
mov
add
out
adc
pusha
ja
cmp
sub
out
xchg
inc
or
jle
pusha
or
or
out
sbb
bound
cmp
jmp
sbb
mov
mov
clc
addr16
bound
and
inc
add
je
add
jl
add
jl
sar
mov
push
sub
aaa
push
sub
movhps
inc
arpl
xor
push
mov
je
sbb
js
xchg
add
je
xchg
xor
jbe
jne
push
jle
sbb
out
push
mov
outs
ja
mov
sub
or
jbe
jne
sub
(bad)
bound
add
out
outs
jp
xor
es
sbb
scas
dec
sub
or
xchg
js
mov
inc
dec
add
out
movs
mov
xor
cmp
dec
or
jle
xchg
mov
scas
push
jp
sbb
dec
arpl
mov
cmp
and
xchg
dec
arpl
sub
xchg
xchg
scas
pusha
xor
ds
xchg
dec
adc
or
push
dec
jno
add
stc
movs
mov
pop
adc
jp
sub
xchg
mov
scas
inc
cmp
and
fs
pusha
and
add
js
sbb
cmp
sbb
dec
ja
mov
cmp
or
inc
and
xor
outs
ds
ja
or
xchg
test
scas
push
pusha
inc
sbb
imul
fs
sub
pop
xchg
and
cmp
sub
out
add
fs
xchg
js
sbb
dec
jae
and
and
sub
adc
out
outs
jp
ins
adc
pusha
ja
cmp
inc
sbb
pusha
ja
cli
mov
sbb
jp
or
jo
add
je
push
sub
call
inc
add
je
pushf
and
pushf
cmp
cli
mov
adc
and
cmp
sub
out
add
out
adc
pusha
ja
cmp
inc
sbb
fs
call
ja
ds
ja
add
ins
sbb
js
adc
mov
xor
fs
and
out
adc
pusha
ja
cmp
sub
out
sbb
jle
add
out
sbb
jl
and
fs
or
rcl
(bad)
retf
mov
mov
dec
inc
sub
jno
or
push
cli
outs
add
mov
sbb
sub
or
sbb
dec
inc
adc
jp
call
mov
dec
ins
dec
mov
jp
sbb
xor
jle
inc
xor
sbb
jp
inc
dec
cmp
xchg
sbb
js
sbb
mov
mov
ret
mov
jmp
push
cmp
cs
xchg
icebp
xchg
jne
sub
push
dec
inc
call
jnp
cmp
jno
es
fdiv
je
or
es
adc
jp
xor
add
cli
outs
sbb
mov
(bad)
mov
xor
add
bound
xchg
or
push
jmp
or
out
push
ds
jmp
sbb
js
xchg
add
je
xchg
xor
hlt
(bad)
leave
mov
and
or
out
sub
jp
or
sub
sbb
jp
sbb
sub
and
dec
and
mov
clc
pop
or
bound
es
sbb
inc
or
out
sbb
jmp
sahf
mov
out
add
dec
and
push
icebp
xchg
inc
ds
xchg
xor
hlt
push
arpl
sub
data16
xchg
jno
mov
out
add
outs
jnp
mov
ins
inc
xchg
mov
inc
dec
add
(bad)
jmp
add
fs
add
push
fist
les
mov
push
dec
imul
je
xchg
add
je
xchg
xor
cmp
dec
or
jle
xchg
inc
fs
or
xor
jp
and
hlt
mov
jp
dec
add
ins
jmp
data16
and
js
sbb
je
add
jp
outs
ds
outs
push
sub
xchg
jbe
ja
add
mov
iret
sahf
mov
je
sbb
ins
sti
xchg
ja
cmp
jmp
sbb
js
adc
fs
mov
add
cmp
repz
sub
add
outs
icebp
xchg
jmp
movs
push
enter
jp
push
and
mov
clc
jnp
push
dec
imul
je
add
jl
add
jl
sar
mov
sbb
dec
imul
je
xchg
add
je
xchg
xor
and
adc
push
jmp
sbb
dec
mov
add
movs
mov
ins
inc
add
outs
jmp
add
inc
ja
cmp
inc
sub
out
sub
inc
inc
xchg
jne
add
imul
out
inc
mov
les
sub
dec
cmc
adc
inc
inc
add
js
sbb
dec
jae
es
fdiv
je
or
es
push
dec
imul
je
add
jl
add
jl
sar
mov
sbb
dec
imul
je
xchg
outs
push
sub
adc
out
xchg
xchg
add
je
xchg
outs
push
sub
adc
mov
jmp
xchg
ins
dec
xchg
ja
cmp
arpl
push
out
or
inc
arpl
ds
or
out
inc
mov
les
mov
or
mov
clc
jnp
push
dec
imul
je
add
jl
add
jl
fdiv
mov
ja
ds
add
ins
jmp
sbb
jp
inc
dec
cmp
pushf
mov
and
es
sbb
inc
arpl
mov
iret
xchg
arpl
jp
push
sub
jno
mov
cld
popa
or
cld
xor
and
dec
dec
or
jle
xchg
arpl
sub
push
xchg
retf
je
mov
cmc
add
dec
ja
ds
add
ins
cmc
add
jl
sar
mov
adc
pusha
ja
cmp
and
fs
and
(bad)
jmp
and
fs
fs
add
je
xchg
xor
cmp
dec
or
jle
or
es
ret
xchg
inc
push
sub
and
out
cs
inc
arpl
or
mov
xor
es
clc
test
xor
sbb
fs
and
cli
outs
add
mov
sbb
sub
xor
sbb
jp
sbb
fs
and
cli
outs
add
mov
ror
outs
push
cmp
hlt
cmp
sbb
inc
arpl
inc
or
jbe
sbb
js
adc
inc
mov
xchg
fldcw
cmp
jmp
add
inc
arpl
or
xchg
push
sub
and
out
add
jp
pushf
js
inc
and
jp
sahf
mov
inc
arpl
(bad)
jmp
mov
mov
add
shr
inc
cmp
or
mov
arpl
cmp
arpl
cli
mov
or
cwde
mov
pusha
arpl
cmp
adc
mov
xchg
jmp
push
mov
sub
xchg
jne
add
imul
out
inc
mov
fs
add
mov
add
ins
dec
xchg
or
ins
mov
cmps
(bad)
leave
cmps
mov
(bad)
jmp
xchg
cmc
sahf
mov
js
sub
inc
icebp
xchg
call
(bad)
test
out
movs
mov
(bad)
scas
mov
mov
xor
es
clc
imul
push
dec
cmc
add
dec
outs
sbb
jp
add
inc
cmc
add
jl
fdiv
mov
popa
and
push
jmp
sbb
dec
arpl
mov
js
sbb
mov
push
ds
mov
(bad)
rep
or
test
enter
retf
hlt
ror
mov
inc
jmp
or
(bad)
jmp
sbb
dec
arpl
mov
mov
or
cwde
mov
inc
inc
add
inc
jnp
and
call
ja
or
pusha
inc
inc
add
inc
jnp
and
call
mov
xchg
cs
jae
push
ins
jmp
adc
ins
jmp
cs
sbb
mov
mov
out
or
dec
jmp
push
push
fs
sahf
mov
js
sub
inc
jmp
and
inc
dec
sbb
sub
adc
sub
jne
or
adc
js
or
out
and
dec
jmp
pushf
mov
js
sbb
mov
or
je
push
sub
xchg
inc
es
clc
imul
push
dec
cmc
and
inc
jnp
cmp
test
cmc
add
jl
rcl
fs
or
pusha
arpl
or
sub
(bad)
jmp
movs
jl
mov
or
and
and
jmp
mov
inc
pop
fdiv
int3
leave
movs
mov
jle
or
jp
bound
out
or
mov
xor
pop
mov
mov
or
je
push
sub
xchg
inc
es
clc
imul
push
dec
cmc
and
inc
jnp
cmp
test
cmc
add
jl
shl
dec
and
adc
out
adc
pusha
ja
cmp
sub
out
xchg
jne
add
imul
test
xor
pushf
js
ja
and
xchg
cli
mov
add
pusha
jns
mov
push
inc
add
inc
jmp
sbb
js
adc
fs
mov
jbe
xor
inc
dec
sub
out
mov
sub
adc
jp
bound
dec
addr16
out
mov
ds
jno
mov
js
sbb
je
add
jp
dec
push
dec
jmp
cs
fs
push
mov
ss
data16
and
and
fdiv
jbe
cs
neg
and
adc
fs
sbb
pusha
ja
cli
mov
shl
dec
and
adc
out
add
jbe
sbb
je
xchg
out
adc
pusha
ja
cmp
xor
jbe
sbb
je
fdiv
retf
mov
out
or
out
adc
jp
adc
inc
dec
xchg
dec
and
bound
cmp
icebp
xchg
jmp
movs
inc
ret
xor
es
clc
not
inc
inc
add
js
sbb
dec
jae
es
cwde
cli
mov
rol
arpl
sub
add
dec
pop
xchg
jne
push
je
movs
mov
mov
test
(bad)
jmp
adc
out
or
jle
xchg
jne
add
jnp
add
icebp
xchg
arpl
sub
xchg
jmp
mov
or
adc
out
outs
jp
movhps
inc
inc
sbb
outs
jmp
xchg
dec
imul
ins
push
sub
int
mov
(bad)
retf
stos
mov
or
pop
push
or
sahf
mov
or
pop
push
xor
xchg
mov
xor
es
clc
test
cmp
ds
call
sbb
inc
add
js
sub
je
sbb
cli
outs
add
mov
or
dec
jmp
mov
dec
jmp
sbb
jp
inc
dec
cmp
ror
shr
or
adc
jle
data16
mov
inc
inc
push
sub
inc
mov
bound
add
add
and
data16
sbb
xchg
cmc
xchg
or
bound
and
inc
ret
hlt
and
dec
ins
jno
sub
shl
dec
inc
es
shl
cwde
push
dec
inc
call
jno
add
outs
add
mov
cmps
mov
int
mov
shl
sub
pusha
js
and
and
pop
dec
sub
fdiv
or
bound
add
ds
inc
bound
cmp
add
pushf
nop
rol
mov
iret
cmps
cli
mov
shr
and
das
bound
aas
xchg
or
fdiv
add
outs
jo
sbb
add
fdiv
and
pop
js
icebp
xchg
mov
test
rcr
retf
lods
cli
mov
ror
das
(bad)
cli
mov
lods
mov
xor
jmp
dec
dec
mov
repz
xchg
into
ret
fdiv
(bad)
ret
movs
xchg
out
movs
test
ucomiss
or
adc
ins
dec
and
dec
pop
xchg
push
inc
cmp
and
fs
inc
fs
adc
dec
ja
cmp
dec
xchg
add
je
xchg
xor
and
and
ins
dec
xchg
dec
sub
fs
cli
mov
mov
ds
sub
push
jmp
ror
dec
inc
call
inc
xor
and
jne
ds
cs
ja
or
sbb
cmc
add
mov
jg
or
sbb
add
pop
mov
mov
rol
adc
fs
sbb
jp
pop
and
adc
ins
mov
add
movs
mov
ins
dec
xchg
push
mov
jp
xchg
jmp
push
and
and
push
jnp
es
sbb
inc
add
dec
and
shl
dec
inc
es
clc
imul
push
dec
cmc
push
or
cs
ja
mov
mov
jmp
xchg
icebp
xchg
jne
or
sahf
mov
les
hlt
les
mov
cmp
popa
add
mov
push
sub
and
adc
outs
jno
cli
mov
and
inc
inc
sbb
jo
fdiv
jbe
cs
neg
es
pop
or
adc
js
adc
retf
movs
test
(bad)
sub
or
out
sub
(bad)
jmp
push
mov
mov
adc
pusha
ja
cmp
and
ins
jne
add
jno
hlt
retf
inc
inc
imul
jp
xchg
arpl
add
jne
ds
dec
mov
clc
inc
sub
cli
popa
or
ins
jne
add
jno
es
cli
mov
and
push
jns
or
xchg
dec
sbb
jp
push
mov
ins
inc
add
out
or
inc
inc
add
outs
dec
xchg
cli
mov
movs
and
add
out
cs
mov
sbb
jne
ds
jmp
lods
outs
out
pop
mov
jmp
push
and
push
ds
jns
cmp
jmp
add
js
adc
out
adc
pusha
ja
cmp
sub
mov
int
outs
js
or
jp
or
dec
jmp
or
(bad)
jmp
sbb
imul
and
and
fdiv
dec
inc
sub
ja
sub
adc
pusha
cmc
add
jl
fdiv
je
or
es
adc
bound
ss
dec
and
jp
call
imul
push
mov
out
add
dec
jnp
cli
mov
adc
pusha
ja
cmp
sub
out
sbb
fs
or
out
mov
push
jmp
xor
inc
jmp
push
mov
mov
push
sub
xor
fs
and
out
adc
pusha
ja
cmp
sub
out
and
ins
jmp
add
je
sbb
jle
inc
dec
cmp
shl
jle
sbb
je
or
dec
ja
add
xor
mov
js
sbb
jp
or
out
xchg
je
sub
ins
cmc
fdiv
cs
and
push
jmp
xor
inc
jmp
push
mov
(bad)
lds
cs
jno
mov
fs
sub
pop
sahf
mov
sar
addr16
ss
mov
or
mov
clc
inc
sub
cli
outs
add
je
sub
add
jl
push
ds
fdiv
neg
mov
hlt
fldenv
int3
mov
cli
mov
adc
pusha
ja
cmp
imul
mov
outs
sbb
jp
add
inc
cmc
add
jl
ror
inc
or
out
sbb
arpl
out
movs
add
pushf
mov
ss
sub
ucomiss
outs
sbb
dec
arpl
cli
mov
inc
mov
ret
mov
outs
imul
(bad)
jmp
xchg
mov
enter
mov
inc
add
dec
sub
xor
sbb
jp
add
inc
cmc
add
jl
sar
mov
sub
outs
dec
adc
fs
jbe
mov
sub
outs
dec
adc
outs
ss
mov
push
ds
mov
(bad)
rep
or
test
enter
retf
hlt
sub
add
jle
xchg
js
and
inc
add
add
addr16
push
cmc
add
jl
sar
mov
sub
pusha
jg
dec
mov
outs
adc
cmc
add
jl
add
clc
mov
cmp
mov
cld
or
aas
pushf
mov
jmp
pushf
test
ret
lods
mov
mov
add
js
xchg
and
out
sub
sbb
pop
and
js
push
mov
mov
add
fs
add
or
sub
retf
call
fistp
cli
mov
push
cmp
cs
test
(bad)
cmc
stos
test
cmc
stos
nop
aam
fdiv
aam
test
cmp
adc
jmp
xchg
arpl
push
js
push
mov
mov
imul
jmp
add
js
push
xor
cs
add
js
push
xor
outs
sbb
mov
ret
xchg
mov
(bad)
retf
cmps
cmp
mov
(bad)
retf
cmps
cmp
sub
xor
add
sub
mov
out
movs
mov
cs
dec
push
mov
fs
adc
mov
imul
(bad)
jmp
test
aam
sar
mov
sbb
jp
inc
cmp
xor
add
dec
inc
add
cli
outs
sbb
mov
jnp
xchg
out
sub
inc
ja
or
outs
sbb
jp
push
or
push
mov
mov
sbb
jle
dec
add
arpl
add
test
into
repz
add
fdiv
mov
popa
or
je
add
je
call
mov
add
out
adc
and
cmp
mov
cmp
add
bound
es
sbb
cli
outs
sbb
mov
dec
add
ins
sub
adc
mov
popa
or
je
add
je
call
mov
outs
mov
xor
cs
outs
sbb
mov
ja
adc
dec
add
inc
imul
je
sbb
mov
sbb
push
inc
and
jp
add
dec
jnp
cmp
outs
sbb
mov
ja
cmp
dec
add
ins
dec
fdiv
dec
inc
sub
dec
add
ins
dec
call
mov
and
hlt
dec
inc
sub
imul
jne
or
and
out
sbb
js
inc
ds
and
mov
add
jbe
sbb
js
sbb
jp
call
mov
or
push
das
fdiv
dec
inc
sub
inc
add
mov
fs
or
cli
mov
adc
inc
inc
adc
jo
add
mov
ja
cmp
jne
cli
mov
sub
cli
outs
sbb
jp
sbb
outs
sbb
mov
pop
es
dec
and
jnp
cli
mov
add
and
pusha
ja
cmp
outs
sbb
mov
ja
cmp
imul
mov
jne
and
call
mov
inc
and
fdiv
pusha
ja
cmp
imul
cli
outs
sbb
mov
das
sbb
jp
add
ins
mov
es
sbb
dec
or
pusha
ja
cli
mov
shl
jnp
data16
mov
sbb
jp
add
ins
cmc
add
jl
shl
jnp
mov
(bad)
jmp
fdiv
ror
jl
dec
and
dec
jmp
pushf
mov
sub
ds
mov
fs
ja
ss
sbb
(bad)
retf
mov
inc
jbe
sbb
shr
xchg
xchg
(bad)
xchg
mov
ret
mov
sbb
sub
ds
add
push
call
mov
bound
cmc
add
jl
ror
dec
inc
call
dec
call
inc
add
cs
pusha
ja
cmp
jne
mov
mov
imul
and
inc
cli
mov
sub
cli
jno
ss
ins
cs
outs
sbb
mov
and
add
and
and
cmp
mov
or
inc
outs
sbb
jp
add
jl
rol
dec
dec
es
inc
inc
sub
and
inc
dec
add
je
call
mov
pop
ss
mov
es
sbb
jo
call
mov
sub
pusha
jg
hlt
bound
add
ss
outs
sbb
and
or
or
xor
js
call
mov
push
and
inc
call
mov
cs
or
je
fdiv
bound
and
dec
or
je
call
mov
or
es
sub
mov
inc
xor
je
adc
dec
dec
call
mov
adc
inc
ds
fdiv
inc
inc
adc
jo
adc
pusha
ja
cmp
outs
sbb
inc
add
cs
inc
inc
adc
jo
adc
pusha
ja
cmp
outs
sbb
mov
push
inc
arpl
hlt
ret
mov
ins
popa
adc
pusha
jns
jo
addr16
mov
ins
inc
fdiv
dec
inc
sub
jno
ds
cmc
add
cli
inc
adc
mov
shl
imul
jp
ror
dec
inc
call
cmc
add
jl
push
ds
jmp
sub
out
adc
pusha
ja
cmp
mov
jo
inc
outs
and
fs
add
je
and
jne
mov
mov
shl
pop
push
cli
outs
sbb
mov
jnp
xchg
out
sbb
imul
es
adc
jp
call
jns
cmp
fld
test
retf
movs
mov
iret
mov
mov
ja
cmp
popa
call
mov
adc
and
cmp
outs
sbb
ja
or
pusha
bound
and
inc
add
je
call
mov
sbb
jp
sbb
mov
push
dec
inc
call
gs
fs
fdiv
mov
imul
out
sub
dec
dec
add
je
fdiv
bound
and
add
inc
inc
and
jle
add
pusha
ja
cli
mov
sbb
je
mov
jbe
push
add
and
es
cs
popa
or
dec
dec
cs
jno
and
outs
sbb
mov
jne
xchg
out
stos
and
xchg
ret
mov
sbb
out
movs
add
xchg
dec
push
sub
(bad)
or
cli
mov
xor
jp
xor
out
pusha
dec
mov
arpl
fs
inc
ds
fdiv
and
es
sbb
ds
push
cli
mov
or
ins
jno
add
xchg
js
push
xor
xchg
dec
or
dec
mov
jp
jno
ds
dec
sbb
out
push
data16
cmps
add
inc
or
and
jle
add
mov
or
bound
es
sbb
inc
fdiv
mov
jne
and
data16
or
fdiv
cmp
push
and
inc
and
icebp
xchg
dec
cs
jno
and
adc
inc
cmc
add
jl
sar
mov
cs
and
ins
inc
and
mov
cs
and
ins
inc
and
mov
ins
js
or
js
cs
mov
sbb
dec
sbb
dec
cmc
add
jl
add
mov
imul
and
es
shl
fs
push
and
ja
ss
jne
or
adc
ds
or
push
ds
call
mov
cli
mov
sbb
fs
xor
sbb
jp
fdiv
jle
add
jle
adc
pusha
ja
cmp
cmc
add
jl
sar
mov
push
ins
inc
mov
and
and
add
out
ss
sbb
ins
dec
ins
inc
out
ss
sbb
ins
dec
ins
jbe
and
es
sbb
ins
dec
inc
or
and
jle
add
out
ss
sbb
ins
dec
pop
sub
jb
fs
cmp
jmp
add
push
inc
or
jp
xor
add
out
ss
sbb
ins
dec
inc
and
inc
mov
js
sbb
inc
ds
xchg
inc
jmp
or
dec
imul
cld
ins
add
ins
popa
xchg
ins
outs
sub
ins
jmp
or
dec
jmp
or
out
add
sub
outs
jmp
sbb
ins
dec
sbb
dec
jnp
cmp
jno
cmp
sub
sbb
arpl
jp
xchg
push
arpl
mov
push
imul
xchg
out
adc
ins
jmp
sub
jbe
inc
xor
sbb
jp
fdiv
(bad)
cmc
data16
push
and
xchg
inc
ds
xchg
ja
mov
push
outs
push
and
or
js
xchg
jp
inc
dec
cmp
fdiv
ret
add
jne
sub
dec
xchg
js
xor
sub
or
inc
jmp
add
out
sbb
hlt
fstp
hlt
push
ja
cmp
add
ins
jmp
sbb
fs
or
dec
jmp
add
push
jmp
outs
jp
ja
sub
xor
ds
dec
or
inc
ja
sub
mov
bound
ds
cmc
fdiv
mov
jnp
or
cmp
jmp
sub
js
sbb
ins
inc
mov
mov
sub
push
cmp
arpl
cmp
inc
xchg
sub
ins
dec
call
jmp
add
outs
dec
or
inc
fld
ss
jns
xor
adc
push
cwde
push
fs
sub
add
outs
jmp
adc
inc
inc
xchg
xor
add
jle
cs
cli
and
or
adc
and
je
xchg
outs
popa
and
inc
dec
xchg
ds
inc
adc
jp
push
mov
imul
out
add
inc
inc
sbb
cmc
xchg
jg
mov
out
sbb
inc
jmp
sub
inc
popa
xchg
inc
jmp
and
cli
jmp
xchg
js
and
dec
ja
sub
dec
add
ins
jno
mov
push
and
bound
mov
je
or
pusha
jno
es
pop
ds
arpl
and
call
inc
xchg
jbe
xchg
dec
arpl
push
out
and
jl
sub
sbb
inc
push
sub
inc
or
inc
jnp
sub
imul
out
add
out
push
ds
arpl
cmp
jnp
cmp
inc
sbb
inc
arpl
or
cs
dec
or
js
sbb
jp
add
je
sbb
cli
jmp
adc
jp
xchg
inc
ds
xchg
fs
sbb
jp
mov
mov
push
xor
xchg
out
sbb
pop
mov
jbe
xchg
ins
jne
mov
ins
dec
xchg
jbe
xchg
inc
add
je
xchg
outs
popa
and
inc
dec
sahf
mov
jo
mov
jne
mov
ins
jne
scas
cli
mov
dec
inc
jnp
cs
xchg
fs
or
out
add
jle
cs
mov
jnp
mov
js
and
js
sbb
ins
inc
xchg
ja
ss
jns
xor
adc
push
cwde
push
fs
sub
push
ds
jno
es
sbb
cmp
js
mov
inc
ja
or
jmp
and
inc
imul
inc
jmp
or
call
jnp
and
xchg
ins
pop
xchg
jmp
sbb
out
mov
fs
adc
stc
add
inc
arpl
xor
sub
hlt
jmp
add
je
adc
and
push
mov
fs
or
xor
scas
cli
jmp
adc
ins
dec
xchg
pop
mov
jmp
xchg
js
and
js
sbb
jp
or
inc
arpl
cmp
push
out
push
sub
jne
push
out
or
js
adc
cli
mov
cli
mov
adc
and
cmp
dec
or
js
and
ins
dec
mov
mov
sbb
dec
ja
or
or
adc
inc
cmc
adc
push
xchg
out
xchg
out
xchg
js
sbb
arpl
mov
js
sbb
jg
mov
js
sub
dec
jnp
cmp
jmp
xchg
je
add
je
call
jnp
outs
ins
inc
xor
js
dec
imul
ins
popa
fdiv
ins
jne
and
inc
add
je
call
jnp
fs
pop
adc
push
outs
sbb
jp
xchg
je
add
je
call
jnp
jp
jnp
pop
push
imul
cmps
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
(bad)
loopne
test
push
cs
push
das
test
mov
mov
mov
push
cmp
or
fsubp
mov
stos
cmp
loopne
mov
shr
(bad)
loope
or
loope
or
out
push
iret
inc
sub
inc
sub
out
mov
rcr
mov
or
call
loope
or
cmp
pop
mov
mov
mov
mov
aad
loopne
test
loope
or
loope
sar
data16
faddp
or
mov
lods
jnp
loope
test
loope
or
rol
mov
mov
push
loope
or
mov
test
loope
or
mov
mov
mov
cld
(bad)
loopne
mov
mov
mov
mov
(bad)
loope
or
cmp
pop
dec
or
pop
inc
js
mov
dec
push
pop
pop
inc
pop
loop
mov
in
test
(bad)
retf
(bad)
sub
or
loope
sub
(bad)
loopne
test
loope
or
fsubp
mov
and
cmp
or
jae
cmps
ror
or
add
cmps
fadd
or
sub
adc
dec
mov
loope
test
loope
or
int3
jae
push
cmp
pop
mov
in
test
(bad)
loopne
and
mov
loope
cmp
mov
fs
fdivr
cdq
push
test
mov
test
(bad)
loopne
or
push
ret
daa
test
(bad)
loopne
rcl
outs
mov
sub
mov
sub
and
mov
test
ja
pop
push
loope
or
dec
loopne
test
loope
or
les
scas
(bad)
loopne
or
sbb
nop
add
test
(bad)
loopne
rcl
outs
adc
and
shr
and
rcl
sub
mov
test
mov
loopne
imul
dec
inc
loopne
test
loope
or
loopne
test
loope
or
loopne
movs
loopne
or
inc
loopne
movs
loopne
or
cmp
adc
cmps
push
lods
inc
(bad)
push
mov
test
mov
stos
inc
shl
out
popa
cmps
stos
inc
pop
mov
jmp
popa
cmps
stos
dec
push
movs
test
and
stos
dec
aas
movs
test
jle
and
xchg
sbb
sbb
out
shl
cmps
stos
sub
mov
test
int
inc
sub
loopne
test
loope
or
(bad)
loopne
(bad)
loope
or
lods
inc
(bad)
push
mov
test
mov
out
popa
cmps
stos
inc
mov
mov
and
stos
inc
lea
jmp
popa
cmps
stos
dec
mov
fdivr
and
stos
dec
jne
test
ret
test
enter
(bad)
xchg
sbb
(bad)
xchg
sbb
(bad)
out
(bad)
popa
cmps
test
(bad)
loopne
shl
(bad)
lods
(bad)
(bad)
loopne
scas
mov
loopne
or
dec
inc
loopne
test
loope
or
and
shr
mov
shl
test
loope
or
mov
loop
mov
(bad)
fwait
push
dec
inc
loopne
inc
call
popa
cmps
lods
(bad)
loopne
(bad)
loope
or
(bad)
fwait
push
dec
inc
loopne
mov
in
test
daa
popa
cmps
test
lods
dec
inc
sub
cli
fcom
mov
mov
loopne
fwait
cwde
dec
inc
loopne
jge
xor
mov
loope
or
or
es
int
inc
sub
call
or
mov
cmp
mov
test
(bad)
push
mov
ins
cmps
(bad)
loope
or
(bad)
in
test
loope
or
(bad)
loopne
(bad)
loope
or
(bad)
loop
test
loope
or
and
stos
inc
xchg
movs
test
and
stos
inc
and
stos
dec
arpl
jmp
popa
cmps
stos
dec
pop
movs
test
dec
xchg
and
xchg
sbb
sbb
out
(bad)
popa
cmps
stos
sub
mov
test
int
inc
sub
loopne
test
loope
or
(bad)
loop
test
loope
or
(bad)
out
mov
inc
loopne
sub
test
and
stos
dec
shl
and
stos
dec
mov
and
stos
xchg
and
xchg
sbb
sbb
outs
lods
fbld
loopne
(bad)
loope
or
cmp
loopne
(bad)
loope
or
(bad)
and
ror
call
sub
loop
test
inc
loopne
and
jecxz
test
inc
loopne
es
jecxz
test
mov
dec
stc
mov
inc
loope
pop
dec
jmp
inc
loopne
test
loope
or
loopne
test
loope
or
loopne
sub
loop
test
inc
loopne
sub
jecxz
test
inc
loopne
and
jecxz
test
inc
loopne
es
jecxz
test
mov
dec
shl
dec
icebp
dec
jmp
dec
inc
loopne
test
loope
or
dec
sbb
test
loopne
or
sar
call
sub
cmps
test
inc
loopne
sub
in
test
inc
loopne
and
jecxz
test
inc
loopne
es
jecxz
test
mov
dec
int
pop
inc
cmc
mov
dec
std
dec
jmp
dec
inc
loopne
test
loope
or
dec
sbb
test
loopne
or
mov
test
(bad)
loopne
or
or
add
test
(bad)
loopne
rcl
outs
(bad)
stos
(bad)
loopne
sub
(bad)
shr
and
rcl
sub
ja
test
pop
mov
mov
out
popa
cmps
stos
inc
dec
mov
out
popa
cmps
stos
inc
scas
mov
jmp
popa
cmps
stos
dec
shl
and
stos
dec
mov
and
call
xchg
sbb
sbb
xor
mov
mov
inc
pop
idiv
inc
scas
mov
out
popa
cmps
stos
inc
xor
jmp
popa
cmps
stos
dec
shl
and
stos
dec
mov
and
lock
and
xchg
sbb
sbb
xor
mov
mov
dec
inc
loopne
sub
test
xor
jmp
popa
cmps
stos
dec
sub
fdivr
and
stos
dec
adc
and
cmps
xchg
and
xchg
sbb
sbb
out
fbld
(bad)
mov
test
push
cs
cmp
or
and
stos
inc
mov
mov
and
stos
inc
xor
jmp
popa
cmps
scas
dec
and
daa
test
inc
add
loopne
jp
cwde
fistp
xchg
scas
mov
loop
lea
dec
jmp
(bad)
xor
(bad)
cmp
or
pusha
add
test
(bad)
loopne
mov
(bad)
loop
mov
loopne
mov
(bad)
loop
inc
(bad)
mov
(bad)
out
mov
inc
loopne
mov
xchg
and
xchg
sbb
sbb
outs
lods
aas
and
loopne
(bad)
loope
or
(bad)
loopne
(bad)
loope
or
(bad)
and
ror
call
sub
loop
test
inc
loopne
and
neg
jmp
popa
cmps
scas
dec
test
sub
test
sub
and
mov
(bad)
loopne
test
loope
or
dec
loopne
test
loope
or
loopne
mov
shr
loopne
or
out
mov
adc
imul
pusha
push
sar
call
sub
retf
call
sub
out
test
inc
loopne
and
loop
test
inc
loopne
es
loop
test
mov
dec
lds
pop
dec
cmc
rcr
inc
mov
(bad)
and
fsubr
mov
(bad)
mov
mov
stos
loopne
or
les
scas
(bad)
loopne
or
sbb
nop
add
test
(bad)
loopne
rcl
outs
adc
and
rcl
sub
es
mov
loopne
(bad)
push
cmp
movs
(bad)
loope
or
(bad)
and
shl
mov
(bad)
loop
adc
loopne
mov
(bad)
loop
push
(bad)
mov
(bad)
loop
jbe
loopne
fild
fild
hlt
fistp
in
fistp
in
mov
loop
cdq
rcr
inc
fsubr
cmp
pop
stos
loopne
or
dec
loopne
inc
jle
mov
stos
inc
mov
out
popa
cmps
stos
inc
das
mov
jmp
popa
cmps
stos
dec
add
jmp
popa
cmps
stos
dec
in
test
xchg
xchg
and
xchg
sbb
sbb
out
fbld
(bad)
sub
(bad)
mov
mov
out
popa
cmps
scas
inc
cmc
mov
mov
test
lods
mov
sub
loop
mov
loopne
mov
(bad)
loop
lock
fild
fild
out
fistp
out
js
sahf
scas
mov
loopne
(bad)
push
cmp
movs
(bad)
loope
or
(bad)
and
ror
call
sub
loop
test
inc
loopne
and
jecxz
test
inc
loopne
es
jecxz
test
mov
dec
in
mov
inc
xchg
mov
dec
popf
rcr
inc
in
lods
out
pop
pop
stos
loopne
or
mov
test
(bad)
loopne
or
and
nop
add
test
(bad)
loopne
rcl
outs
(bad)
stos
(bad)
loopne
sub
lods
shr
and
rcl
sub
mov
test
int
pop
push
cmp
or
sar
call
sub
cmps
test
inc
loopne
sub
in
test
inc
loopne
and
jecxz
test
inc
loopne
es
jecxz
test
mov
dec
loope
pop
inc
jmp
rcr
inc
loopne
lods
out
pop
pop
stos
loopne
or
sar
call
sub
retf
call
sub
in
test
inc
loopne
and
jecxz
test
inc
loopne
es
jecxz
test
mov
dec
loope
pop
inc
jmp
rcr
inc
loopne
lods
out
pop
pop
stos
loopne
or
sar
call
sub
cmps
test
inc
loopne
sub
out
test
inc
loopne
and
jecxz
test
inc
loopne
es
jecxz
test
mov
dec
loope
pop
inc
jmp
rcr
inc
loopne
lods
out
pop
pop
stos
loopne
or
rcr
inc
jle
mov
stos
inc
scas
mov
out
popa
cmps
stos
inc
xor
jmp
popa
cmps
stos
dec
shl
and
stos
dec
mov
and
xchg
xchg
and
xchg
sbb
sbb
out
(bad)
popa
cmps
test
mov
or
loope
mov
scas
inc
leave
mov
mov
test
(bad)
loopne
ret
daa
test
mov
out
sbb
bound
mov
dec
popf
mov
inc
test
fwait
aam
inc
loopne
inc
aam
(bad)
and
loopne
mov
add
test
(bad)
loopne
or
jp
(bad)
loopne
ret
daa
test
(bad)
loopne
rcl
outs
xor
and
rcl
sub
mov
test
mov
loopne
mov
jmp
push
cmp
mov
mov
idiv
inc
xchg
movs
test
and
stos
inc
and
stos
dec
arpl
jmp
popa
cmps
stos
dec
pop
movs
test
dec
xchg
and
xchg
sbb
sbb
out
(bad)
popa
cmps
stos
sub
mov
test
int
pop
push
cmp
or
loope
sub
(bad)
mov
loope
or
inc
leave
mov
mov
test
(bad)
loopne
ret
daa
test
(bad)
loopne
rcl
outs
push
test
loopne
sub
mov
sub
and
mov
test
mov
loopne
mov
jmp
push
cmp
movs
(bad)
loope
or
inc
mov
mov
and
stos
inc
xor
jmp
popa
cmps
scas
dec
and
daa
test
inc
add
call
jnp
sub
loop
mov
jmp
push
cmp
movs
(bad)
loope
or
fsubr
shr
mov
test
(bad)
loopne
or
dec
stos
(bad)
loopne
ret
daa
test
mov
out
int3
mov
inc
retf
mov
dec
repz
inc
sti
mov
dec
jecxz
fwait
ror
loopne
inc
(bad)
out
aas
and
(bad)
sub
(bad)
mov
mov
out
popa
cmps
scas
inc
ins
mov
mov
test
(bad)
loopne
ret
daa
test
mov
out
int3
mov
inc
retf
mov
dec
repz
inc
sti
mov
dec
jecxz
fwait
ror
loopne
inc
(bad)
out
aas
and
(bad)
sub
(bad)
mov
mov
out
pop
pop
test
push
shr
or
sub
out
mov
mov
test
int
inc
sub
out
mov
mov
mov
mov
or
cmp
dec
lahf
push
loopne
test
in
(bad)
leave
and
loope
or
mov
jecxz
xchg
repnz
test
in
(bad)
leave
and
loope
or
cmp
dec
(bad)
push
loop
test
in
(bad)
leave
and
loope
or
(bad)
push
mov
loope
or
(bad)
loop
test
xchg
sbb
mov
test
mov
mov
loop
test
(bad)
loopne
mov
loope
or
out
dec
vpmacsswd
mov
scas
cmp
out
mov
push
sub
loope
or
in
dec
leave
and
loope
or
inc
or
mov
mov
scas
inc
xor
mov
out
mov
scas
cmp
out
mov
rol
retf
mov
gs
data16
mov
push
xor
int
pop
and
in
test
loope
or
(bad)
out
addr16
popa
cmps
mov
loope
or
loopne
or
(bad)
loopne
(bad)
loope
or
(bad)
or
inc
retf
mov
inc
sub
loopne
movs
cmp
push
mov
ret
test
loope
or
mov
mov
mov
lds
jmp
dec
inc
loopne
ror
add
test
push
xor
dec
inc
loopne
and
sub
loope
sub
(bad)
loopne
test
loope
or
loope
sub
jno
test
cmp
mov
in
push
leave
and
loope
sub
loopne
or
les
mov
mov
cmps
mov
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
js
xor
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
icebp
iret
inc
cmps
or
push
lods
inc
inc
sub
push
mov
mov
cmps
push
lods
scas
inc
sub
out
loope
push
pop
ret
es
shl
pop
cmp
movs
mov
cmp
ret
es
(bad)
sbb
test
aam
pop
add
dec
lea
es
loopne
test
loope
or
aas
es
loopne
or
in
xchg
xlat
and
xchg
imul
and
add
test
dec
loopne
sub
mov
leave
mov
add
test
dec
loopne
sub
mov
cmp
ret
es
dec
loopne
inc
xchg
pop
mov
mov
cmps
mov
cmp
and
inc
pop
sbb
test
cmp
pop
and
iret
into
inc
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
inc
loopne
mov
lods
scas
inc
sub
out
loope
jmp
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
cmp
sub
cmp
movs
mov
cmp
sub
test
and
js
ins
cmps
test
loope
or
loopne
mov
sahf
pop
int3
out
popa
cmps
scas
iret
test
mov
mov
nop
add
test
cmp
pop
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
jmp
push
and
loope
or
shr
pop
fldcw
push
lods
scas
inc
sub
loop
loope
out
test
lods
mov
sub
loop
loope
jecxz
test
lods
mov
sub
loop
loope
jecxz
test
inc
mov
test
int
loop
loopne
(bad)
loope
or
(bad)
loop
loope
out
test
lods
scas
inc
sub
loop
loope
out
test
lods
mov
sub
loop
loope
push
pop
push
fldcw
push
lods
mov
sub
loop
loope
jecxz
test
inc
mov
test
int
xor
cmps
(bad)
loope
or
(bad)
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
cmp
sub
cmp
movs
mov
(bad)
(bad)
sub
push
inc
and
js
push
test
loope
or
inc
loopne
mov
sahf
pop
int3
out
popa
cmps
stos
iret
test
scas
(bad)
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
bound
scas
loope
test
fild
mov
mov
stc
cmp
rcr
dec
loopne
mov
pushw
mov
mov
cmps
mov
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
sub
icebp
into
mov
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
push
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
test
int
push
lods
inc
inc
sub
push
mov
mov
cmps
stos
mov
or
push
lods
scas
inc
sub
out
loope
push
pop
ret
es
cmp
pop
push
adc
jbe
xchg
pcmpgtd
int3
or
in
outs
xlat
and
lods
scas
inc
sub
out
loope
push
pop
ret
es
cmp
pop
push
adc
adc
imul
push
in
outs
xlat
and
cmp
rcr
dec
loopne
mov
pushw
mov
mov
cmps
mov
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
test
loope
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
push
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
jnp
jecxz
test
add
je
sbb
fs
jb
cmp
mov
outs
jnp
and
push
mov
inc
inc
xchg
jmp
sahf
mov
outs
jnp
cmp
jmp
sub
mov
inc
imul
fs
mov
adc
cmp
and
xchg
dec
jns
add
jno
push
out
sbb
dec
add
jl
sbb
out
or
jp
adc
inc
jmp
and
out
push
sub
addr16
bound
or
sub
sbb
out
sbb
inc
inc
sub
xchg
je
push
mov
dec
arpl
mov
ins
jne
mov
ins
test
cs
test
xchg
sub
add
fs
push
loopne
test
adc
inc
test
xchg
pusha
test
and
outs
test
add
dec
test
xchg
ins
test
sbb
inc
test
add
push
test
call
test
add
jp
add
outs
test
sbb
(bad)
test
sub
inc
test
or
fs
xchg
and
sub
inc
test
add
jle
adc
fs
xchg
cmp
xchg
adc
push
loopne
test
dec
loopne
test
adc
inc
test
(bad)
loopne
ret
es
jbe
int3
jmp
popa
cmps
stos
iret
test
stos
(bad)
loopne
jge
xor
or
mov
dec
inc
loopne
adc
test
inc
loopne
mov
lods
mov
sub
loop
loope
jecxz
test
lods
xor
test
bound
es
dec
loopne
rcl
aas
es
ret
scas
mov
loopne
aaa
fsubr
sub
dec
loopne
push
in
jle
and
addr16
int3
or
in
xchg
and
(bad)
bound
scas
loope
test
push
int3
or
in
inc
(bad)
and
ins
arpl
scas
dec
mov
es
cmps
push
in
dec
xlat
and
int
repnz
inc
pop
sbb
test
cmp
pop
and
iret
test
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
inc
loopne
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
leave
es
cmps
jns
aas
es
inc
loopne
add
sub
loope
pop
inc
xchg
pop
mov
mov
cmps
scas
mov
loop
aaa
fsubr
sub
dec
loopne
push
in
jle
and
addr16
int3
or
in
xchg
and
(bad)
bound
scas
loope
test
push
int3
or
in
inc
(bad)
and
ins
arpl
scas
dec
mov
es
cmps
push
in
dec
xlat
and
int
repnz
inc
pop
sbb
test
cmp
pop
and
iret
test
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
inc
loopne
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
outs
xor
test
inc
loopne
add
sub
loope
pop
inc
xchg
pop
mov
mov
cmps
push
sub
nop
sub
inc
loopne
inc
in
call
mov
ret
and
mov
mov
ror
and
(bad)
or
push
loope
or
inc
loopne
mov
mov
dec
inc
loopne
ror
cmps
jge
xor
push
lods
fiadd
xor
stos
(bad)
loopne
icebp
(bad)
loopne
pcmpgtd
int3
or
in
pop
xlat
and
loope
or
ret
test
shl
(bad)
loope
or
mov
mov
mov
loope
out
inc
ret
test
cmp
pop
mov
mov
inc
ret
(bad)
loope
or
scas
test
jns
loopne
test
loopne
test
inc
loopne
icebp
(bad)
loopne
jns
loop
test
bound
es
dec
loopne
mov
mov
mov
(bad)
push
pop
ret
es
cmp
pop
push
push
mov
cmps
jge
push
int3
jmp
cmps
jns
loop
test
mov
lods
inc
inc
sub
push
mov
mov
cmps
(bad)
loope
or
iret
test
stos
(bad)
loopne
push
lods
mov
sub
loop
loope
push
pop
push
jno
out
pop
loope
test
inc
add
test
(bad)
xor
stos
(bad)
loopne
or
mov
dec
inc
loopne
cmp
test
loope
or
loopne
mov
(bad)
push
pop
ret
es
cmp
pop
push
push
mov
cmps
jge
push
int3
aaa
and
cmps
jns
loop
test
mov
lods
inc
inc
sub
push
mov
mov
cmps
(bad)
loope
or
and
jmp
lods
scas
inc
sub
loop
loope
out
test
lods
scas
inc
sub
loop
loope
out
test
lods
mov
sub
loop
loope
loop
test
lods
mov
sub
loop
loope
loop
test
inc
mov
test
lea
(bad)
xor
rol
loopne
mov
mov
dec
inc
loopne
mov
(bad)
push
pop
ret
es
(bad)
loopne
pop
push
mov
cmps
jge
push
int3
push
and
cmps
jge
xor
lods
(bad)
loopne
or
mov
dec
inc
loopne
cmp
test
loope
or
dec
loopne
push
in
jle
and
addr16
int3
or
in
xchg
and
cmp
mov
addr16
int3
or
in
inc
(bad)
and
(bad)
bound
scas
loope
test
push
int3
or
in
dec
(bad)
and
(bad)
bound
scas
loope
dec
addr16
int3
or
in
dec
xlat
and
and
scas
iret
test
mov
mov
es
shl
mov
mov
nop
add
test
fldcw
push
lods
mov
sub
out
loope
(bad)
sub
test
and
jge
cli
dec
icebp
imul
ret
test
inc
loopne
cmp
test
loope
or
loopne
mov
sahf
pop
int3
out
popa
cmps
stos
iret
test
scas
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
fsubr
into
inc
mov
test
loope
mov
or
add
push
jbe
mov
push
lods
inc
inc
sub
push
mov
test
mov
xor
sbb
dec
loopne
push
in
jle
and
addr16
int3
or
in
xchg
and
cmp
mov
addr16
int3
or
in
inc
(bad)
and
(bad)
bound
scas
loope
test
push
int3
or
in
dec
(bad)
and
(bad)
bound
scas
loope
test
push
int3
or
in
dec
xlat
and
cmp
rcr
dec
loopne
mov
pushw
mov
mov
cmps
mov
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
push
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
test
loope
push
lods
inc
inc
sub
push
mov
mov
cmps
push
lods
scas
inc
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
data16
add
loopne
cmp
test
loope
or
loopne
mov
lods
mov
sub
loop
loope
loop
test
push
mov
pop
ret
es
dec
loopne
inc
xchg
pop
mov
mov
cmps
mov
sub
and
inc
pop
sbb
test
cmp
pop
and
iret
push
inc
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
inc
loopne
mov
lods
mov
sub
out
loope
push
jb
push
stos
out
and
inc
push
push
lods
inc
inc
sub
push
mov
mov
cmps
push
lods
scas
inc
sub
out
loope
push
pop
ret
es
jo
jno
xor
pop
ret
es
dec
loopne
ret
sub
fsubr
mov
dec
loopne
clc
cdq
push
(bad)
loope
or
fsubr
in
(bad)
loopne
test
cmps
(bad)
loope
or
int3
aam
and
(bad)
scas
faddp
loopne
imul
imul
mov
mov
test
(bad)
push
mov
ins
cmps
(bad)
loope
or
imul
mov
xor
jns
pop
push
push
loope
or
imul
cmps
xchg
or
or
loope
mov
test
dec
loopne
movs
loopne
or
loope
or
or
fisttp
aam
(bad)
loopne
(bad)
loope
or
(bad)
loopne
mov
mov
test
loopne
(bad)
loope
or
mov
stos
cwde
(bad)
loopne
push
sub
nop
sub
dec
loopne
push
in
jle
and
addr16
int3
or
in
xchg
and
cmp
mov
addr16
int3
or
in
inc
(bad)
and
(bad)
bound
scas
loope
test
push
int3
or
in
dec
xlat
and
and
stos
iret
test
scas
(bad)
loopne
and
popa
cmps
stos
iret
test
scas
(bad)
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
bound
scas
loope
test
sar
xchg
jmp
(bad)
push
int3
or
in
pop
leave
and
loope
or
dec
loopne
mov
pushw
mov
mov
cmps
mov
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
push
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
test
loope
push
lods
inc
inc
sub
push
mov
mov
cmps
sbb
loop
lods
daa
cmp
loopne
(bad)
loope
or
mov
sub
inc
loopne
mov
int
test
and
jmp
pop
mov
test
mov
cmps
mov
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
push
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
test
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
push
lods
scas
inc
sub
out
loope
push
pop
ret
es
(bad)
loopne
pop
adc
xchg
mov
pcmpgtd
int3
or
in
outs
xlat
and
cmp
rcr
dec
loopne
mov
int
repnz
inc
pop
sbb
test
cmp
pop
and
iret
push
inc
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
inc
loopne
mov
lods
mov
sub
loop
loope
loop
test
ss
cs
bound
es
dec
loopne
inc
xchg
pop
mov
mov
cmps
mov
sub
and
inc
pop
sbb
test
cmp
pop
and
iret
push
inc
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
inc
loopne
mov
sahf
pop
int3
out
popa
cmps
scas
iret
test
mov
mov
nop
add
test
fsubr
push
lods
mov
sub
out
loope
(bad)
sub
test
and
jns
call
inc
bound
xchg
push
lods
inc
inc
sub
push
mov
test
mov
icebp
imul
cmp
pop
cmp
test
loope
or
mov
dec
scas
inc
sub
out
mov
loope
or
and
stos
into
test
and
popa
cmps
stos
(bad)
test
and
popa
cmps
scas
iret
test
mov
sbb
add
test
fsubr
into
inc
mov
test
loope
test
sub
xor
ret
es
dec
loopne
mov
mov
add
clc
jbe
and
push
lods
inc
inc
sub
push
mov
test
mov
mov
mov
sub
push
int3
out
popa
cmps
stos
into
test
push
lods
mov
sub
out
loope
push
jae
push
or
and
inc
push
push
lods
inc
inc
sub
push
mov
mov
cmps
push
lods
scas
inc
sub
out
loope
push
pop
ret
es
jo
in
mov
inc
pop
ret
es
dec
loopne
ret
es
jbe
int3
jmp
popa
cmps
stos
iret
test
test
loopne
jge
xor
dec
loopne
or
mov
dec
inc
loopne
or
test
inc
loopne
mov
lods
mov
sub
loop
loope
loope
test
dec
movs
cs
bound
es
dec
loopne
ret
es
jbe
int3
jmp
popa
cmps
stos
iret
test
test
loopne
jge
xor
out
dec
loopne
or
mov
dec
inc
loopne
or
test
inc
loopne
mov
lods
mov
sub
loop
loope
loope
test
in
cmps
cs
bound
es
dec
loopne
ret
es
jbe
int3
jmp
popa
cmps
stos
iret
test
test
loopne
jge
xor
cmp
pop
or
test
inc
loopne
mov
sahf
pop
int3
out
popa
cmps
stos
iret
test
scas
(bad)
loopne
and
popa
cmps
stos
iret
test
test
loopne
and
popa
cmps
stos
iret
test
test
loopne
and
bound
scas
loope
test
sar
dec
jmp
(bad)
push
int3
or
in
pop
leave
and
loope
or
sub
pop
ret
es
ret
loopne
sbb
mov
dec
inc
loopne
mov
(bad)
push
jae
push
js
and
inc
push
push
lods
inc
inc
sub
push
mov
mov
cmps
push
lods
scas
inc
sub
loop
loope
in
test
and
stos
iret
test
test
loopne
jge
xor
dec
loopne
or
mov
dec
inc
loopne
or
test
inc
loopne
mov
(bad)
push
pop
ret
es
(bad)
loopne
pop
adc
jbe
mov
pcmpgtd
int3
or
in
outs
xlat
and
and
scas
iret
test
sbb
mov
dec
inc
loopne
mov
(bad)
push
jb
push
int3
call
push
lods
inc
inc
sub
push
mov
mov
cmps
push
lods
scas
inc
sub
loop
loope
loope
test
and
stos
iret
test
stos
(bad)
loopne
jge
xor
loopne
or
mov
dec
inc
loopne
or
test
inc
loopne
mov
lods
mov
sub
loop
loope
loop
test
and
cs
bound
es
dec
loopne
ret
es
fsubr
push
lods
scas
inc
sub
loop
loope
loope
test
lods
mov
sub
loop
loope
loop
test
lods
mov
sub
loop
loope
loop
test
inc
mov
test
loope
mov
or
add
push
jbe
and
inc
inc
sub
push
mov
test
mov
xor
in
dec
loopne
push
in
jle
and
addr16
int3
or
in
xchg
and
cmp
mov
addr16
int3
or
in
inc
(bad)
and
(bad)
bound
scas
loope
test
push
int3
or
in
dec
(bad)
and
(bad)
bound
scas
loope
les
popa
cmps
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
inc
loopne
mov
(bad)
push
pop
ret
es
(bad)
loopne
pop
adc
jbe
xchg
imul
push
in
outs
xlat
and
cmp
rcr
dec
loopne
mov
pushw
mov
mov
cmps
mov
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
push
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
test
loope
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
push
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
test
loope
push
lods
inc
inc
sub
push
mov
mov
cmps
mov
dec
inc
sub
out
addr16
popa
cmps
int
mov
loope
or
loope
mov
popa
cmps
(bad)
loope
or
mov
test
(bad)
loopne
sbb
mov
dec
inc
loopne
mov
(bad)
push
add
add
test
bound
es
dec
loopne
sub
mov
cmp
ret
es
dec
loopne
inc
xchg
pop
mov
mov
cmps
imul
ror
loopne
mov
mov
fsub
bound
test
loopne
shl
in
test
lods
push
mov
mov
mov
aad
in
test
loope
or
loopne
ror
and
(bad)
or
sub
mov
fstp
mov
mov
dec
inc
loopne
ror
cmps
jge
xor
push
lods
mov
xor
stos
(bad)
loopne
icebp
(bad)
loopne
pcmpgtd
int3
or
in
pop
xlat
and
loope
or
fsubr
mov
ret
es
(bad)
loopne
mov
mov
es
ret
loopne
mov
mov
nop
add
test
(bad)
loopne
mov
sbb
add
test
(bad)
loopne
mov
nop
shr
popa
and
leave
retf
xor
hlt
(bad)
loopne
mov
mov
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
push
inc
and
js
mov
or
(bad)
jmp
cmps
mov
mov
es
ret
loopne
mov
mov
nop
add
test
(bad)
loopne
mov
sbb
add
test
(bad)
loopne
mov
nop
shr
popa
and
leave
retf
xor
(bad)
loopne
mov
mov
ret
es
(bad)
mov
mov
es
ret
mov
mov
nop
add
test
(bad)
loopne
mov
sbb
add
test
(bad)
loopne
mov
nop
shr
popf
and
leave
fbstp
call
mov
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
loop
add
test
lea
ror
jbe
pushf
loopne
(bad)
loope
or
mov
pop
nop
sub
cmp
pop
and
iret
push
inc
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
inc
loopne
inc
loop
fsubr
and
lods
repnz
test
lods
scas
inc
sub
loop
loope
jecxz
test
and
stos
iret
test
test
loopne
jge
xor
xchg
dec
loopne
or
mov
dec
inc
loopne
or
test
inc
add
test
lods
scas
inc
sub
loop
loope
jecxz
test
and
stos
iret
test
test
loopne
jge
xor
xchg
dec
loopne
or
mov
dec
inc
loopne
or
test
inc
add
test
lods
scas
inc
sub
loop
loope
jecxz
test
and
stos
iret
test
test
loopne
jge
xor
xchg
dec
loopne
or
mov
dec
inc
loopne
or
test
in
xchg
xlat
and
xchg
imul
and
add
test
dec
loopne
sub
mov
cmp
ret
es
dec
loopne
sub
mov
ret
es
dec
loopne
rol
test
(bad)
loopne
push
lods
scas
inc
sub
loop
loope
loop
test
and
stos
iret
test
test
loopne
jge
xor
xchg
dec
loopne
or
mov
dec
inc
loopne
or
test
inc
loopne
mov
(bad)
push
pop
ret
es
(bad)
loopne
pop
adc
cmps
pcmpgtd
int3
or
in
outs
xlat
and
and
stos
iret
test
stos
(bad)
loopne
push
lods
mov
sub
loop
loope
loop
test
sbb
test
bound
es
dec
loopne
loop
loopne
scas
mov
loop
mov
cmp
movs
mov
(bad)
push
pop
ret
es
(bad)
loopne
pop
adc
jbe
cli
imul
push
in
outs
xlat
and
and
stos
iret
test
stos
(bad)
loopne
push
lods
mov
sub
loop
loope
loope
test
or
cs
bound
es
dec
loopne
ret
es
(bad)
loopne
sbb
mov
dec
inc
loopne
mov
(bad)
push
jb
push
push
call
inc
inc
sub
push
mov
mov
cmps
jnp
jecxz
test
inc
loopne
inc
stos
push
int3
out
popa
cmps
stos
iret
test
stos
(bad)
loopne
push
lods
mov
sub
loop
loope
loope
test
cli
(bad)
test
bound
es
dec
loopne
sub
loopne
scas
mov
out
cmp
inc
loopne
mov
(bad)
push
pop
ret
es
(bad)
loopne
pop
adc
pcmpgtd
int3
or
in
outs
xlat
and
and
stos
iret
test
stos
(bad)
loopne
push
lods
mov
sub
loop
loope
loope
test
or
cs
bound
es
dec
loopne
or
loopne
scas
mov
call
cmps
test
inc
loopne
mov
(bad)
push
pop
ret
es
(bad)
loopne
pop
adc
cmps
pcmpgtd
int3
or
in
outs
xlat
and
and
stos
iret
test
stos
(bad)
loopne
push
lods
mov
sub
loop
loope
loope
test
mov
cs
bound
es
dec
loopne
ret
es
(bad)
loopne
sbb
mov
dec
inc
loopne
mov
(bad)
push
jb
push
sub
push
lods
inc
inc
sub
push
mov
mov
cmps
push
lods
scas
inc
sub
loop
loope
loop
test
and
stos
iret
test
stos
(bad)
loopne
jge
xor
or
mov
dec
inc
loopne
or
test
in
xchg
xlat
and
xchg
imul
and
add
test
dec
loopne
sub
stos
int3
dec
inc
loopne
push
and
jmp
pushw
int3
or
in
inc
(bad)
and
(bad)
bound
scas
loope
test
push
int3
or
in
dec
xlat
and
and
stos
iret
test
stos
(bad)
loopne
push
lods
mov
sub
loop
loope
loop
test
cmp
cs
bound
es
dec
loopne
inc
xchg
pop
mov
mov
cmps
jnp
mov
ror
loopne
mov
test
int3
out
popa
cmps
stos
iret
test
lods
(bad)
loopne
push
lods
mov
sub
loop
loope
loop
test
pop
loope
test
or
daa
test
(bad)
xor
or
mov
dec
inc
loopne
cmp
test
loope
or
dec
loopne
push
in
jle
and
addr16
int3
or
in
xchg
and
cmp
mov
addr16
int3
or
in
inc
(bad)
and
(bad)
bound
scas
loope
test
push
int3
or
in
dec
xlat
and
and
scas
iret
test
sbb
mov
dec
inc
loopne
mov
fdiv
dec
cmp
loopne
or
mov
dec
inc
loopne
or
test
inc
loopne
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
mov
and
popa
cmps
scas
iret
test
mov
nop
shr
loope
push
(bad)
xor
mov
mov
or
dec
loopne
ret
es
dec
loopne
mov
mov
test
fsubr
push
lods
scas
inc
sub
loop
loope
out
test
lods
mov
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
mov
push
imul
pop
test
mov
xor
fwait
test
and
jmp
push
add
test
int3
loopne
mov
pop
hlt
and
inc
pop
sbb
test
cmp
pop
and
iret
push
inc
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
inc
loopne
mov
push
cmps
test
and
scas
iret
test
mov
mov
es
(bad)
loopne
mov
mov
nop
add
test
fsubr
push
lods
mov
sub
loop
loope
jecxz
test
inc
mov
test
loope
mov
or
add
inc
movs
test
dec
loopne
ret
es
dec
loopne
mov
mov
test
(bad)
loopne
mov
mov
es
ret
loopne
mov
mov
nop
add
test
fsubr
push
lods
mov
sub
loop
loope
jecxz
test
inc
mov
test
loope
mov
or
add
add
dec
loopne
ret
es
dec
loopne
mov
mov
stos
mov
or
push
(bad)
loopne
push
lods
scas
inc
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
mov
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
bound
scas
loope
test
sar
loopne
jns
imul
cmp
pop
cmp
test
loope
or
loopne
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
mov
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
bound
scas
loope
test
sar
push
sub
(bad)
push
int3
or
in
pop
leave
and
loope
or
dec
add
test
sub
pop
ret
es
fsubr
push
lods
scas
inc
sub
loop
loope
loop
test
lods
mov
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
test
loopne
jns
imul
pop
test
mov
test
inc
loopne
test
loopne
mov
cmp
mov
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
(bad)
xor
mov
mov
cmps
test
(bad)
push
int3
or
in
pop
leave
and
loope
or
iret
test
stos
(bad)
loopne
and
popa
cmps
stos
iret
test
lods
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
(bad)
xor
mov
mov
dec
and
bound
es
dec
loopne
mov
mov
scas
mov
clc
mov
test
inc
loopne
mov
sahf
pop
int3
out
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
(bad)
xor
mov
mov
cmps
test
(bad)
push
int3
or
in
pop
leave
and
loope
or
iret
test
stos
(bad)
loopne
and
popa
cmps
stos
iret
test
lods
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
(bad)
xor
mov
mov
cmps
test
(bad)
push
int3
or
in
pop
leave
and
loope
or
dec
add
test
fsubr
push
test
loopne
ret
es
fsubr
push
lods
scas
inc
sub
loop
loope
loop
test
lods
mov
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
jp
cs
inc
loopne
cmp
test
loope
or
loopne
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
mov
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
bound
scas
loope
test
sar
loopne
jns
outs
cs
inc
loopne
cmp
test
loope
or
add
test
loopne
or
cmp
not
xchg
xlat
and
and
jmp
jl
das
test
mov
cmps
mov
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
push
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
test
loope
push
lods
inc
inc
sub
push
mov
mov
cmps
push
lods
scas
inc
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
mov
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
bound
scas
loope
test
sar
loopne
jns
addr16
inc
loopne
cmp
test
loope
or
loopne
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
mov
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
bound
scas
loope
test
sar
loopne
jns
imul
dec
inc
loopne
cmp
test
loope
or
xchg
xlat
and
xchg
imul
and
add
test
dec
loopne
sub
mov
cmp
ret
es
dec
loopne
sub
mov
ret
es
dec
loopne
ret
es
jbe
int3
jmp
popa
cmps
scas
iret
test
pop
adc
jbe
push
imul
push
in
outs
xlat
and
cmp
rcr
dec
loopne
rcl
es
int
hlt
and
inc
pop
sbb
test
cmp
pop
and
iret
push
inc
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
hlt
mov
test
mov
cmps
mov
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
push
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
test
loope
push
lods
inc
inc
sub
push
mov
mov
cmps
push
lods
scas
inc
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
mov
and
popa
cmps
scas
iret
test
mov
nop
shr
loope
push
(bad)
out
daa
and
lods
jb
fmul
inc
les
push
imul
pop
test
mov
test
inc
loopne
test
loopne
in
sar
fdiv
and
push
int3
or
in
pop
leave
and
loope
or
dec
add
test
sub
jb
fmul
inc
retf
push
imul
pop
test
mov
daa
and
cmps
jb
fmul
inc
enter
imul
pop
test
mov
daa
and
loopne
inc
test
mov
mov
idiv
loopne
ret
es
dec
loopne
mov
mov
fbstp
jbe
sub
loop
aaa
fsubr
sbb
dec
loopne
push
in
jle
and
addr16
int3
or
in
xchg
and
cmp
mov
addr16
int3
or
in
inc
(bad)
and
(bad)
bound
scas
loope
test
push
int3
or
in
dec
xlat
and
int
hlt
and
inc
pop
sbb
test
cmp
pop
and
iret
push
inc
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
inc
loopne
inc
dec
push
int3
out
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
fsubr
into
inc
mov
test
loope
sub
mov
dec
inc
loopne
mov
sahf
pop
int3
out
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
fsubr
into
inc
mov
test
loope
mov
or
add
into
jbe
push
imul
pop
test
mov
xor
(bad)
(bad)
and
jmp
jl
das
test
mov
cmps
mov
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
push
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
test
loope
push
lods
inc
inc
sub
push
mov
mov
cmps
push
sub
nop
sub
inc
loopne
mov
jae
test
movs
imul
mov
mov
mov
mov
mov
mov
das
(bad)
xchg
mov
sbb
mov
test
mov
cmps
mov
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
push
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
test
loope
push
lods
inc
inc
sub
push
mov
mov
cmps
jg
cli
lods
fwait
xchg
imul
and
add
test
dec
loopne
sub
mov
cmp
ret
es
dec
loopne
sub
mov
ret
es
dec
loopne
imul
mov
push
loope
or
shr
lods
scas
inc
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
ror
lock
inc
loopne
ror
pusha
iret
test
and
jge
cli
dec
icebp
imul
lods
inc
inc
sub
push
mov
test
mov
xor
sub
(bad)
or
sub
adc
dec
mov
loope
test
loope
cmp
cmps
fadd
(bad)
lods
cmp
pop
mov
pop
hlt
and
inc
pop
sbb
test
cmp
pop
and
iret
push
inc
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
dec
loopne
inc
and
int3
out
popa
cmps
stos
iret
test
test
loopne
and
popa
cmps
stos
iret
test
scas
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
(bad)
xor
mov
mov
cmps
test
(bad)
push
int3
or
in
pop
leave
and
loope
or
sahf
bound
test
(bad)
loopne
push
lods
scas
inc
sub
loop
loope
loope
test
lods
scas
inc
sub
loop
loope
jecxz
test
lods
mov
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
test
loopne
cmps
mov
inc
inc
sub
push
mov
test
mov
sub
loop
loope
in
test
lods
scas
inc
sub
loop
loope
out
test
lods
mov
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
cmp
pop
cmp
test
loope
or
loopne
icebp
inc
imul
test
(bad)
loopne
mov
mov
es
(bad)
mov
mov
nop
add
test
fsubr
push
lods
mov
sub
loop
loope
jecxz
test
inc
mov
test
loope
mov
or
add
add
jnp
imul
pop
test
mov
test
dec
loopne
mov
pop
cmps
test
and
stos
iret
test
test
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
(bad)
xor
mov
mov
cmps
test
(bad)
push
int3
or
in
pop
leave
and
loope
or
iret
test
lods
(bad)
loopne
and
popa
cmps
stos
iret
test
scas
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
(bad)
xor
mov
mov
cmps
test
(bad)
push
int3
or
in
pop
leave
and
loope
or
sahf
bound
test
lods
scas
inc
sub
loop
loope
loope
test
lods
scas
inc
sub
loop
loope
jecxz
test
lods
mov
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
stos
(bad)
loopne
(bad)
mov
cmps
push
lods
inc
inc
sub
push
mov
test
mov
test
dec
loopne
inc
and
int3
out
popa
cmps
stos
iret
test
test
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
(bad)
xor
mov
mov
cmps
test
(bad)
push
int3
or
in
pop
leave
and
loope
or
sahf
bound
test
lods
scas
inc
sub
loop
loope
loope
test
lods
scas
inc
sub
loop
loope
jecxz
test
lods
mov
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
stos
(bad)
loopne
(bad)
inc
inc
sub
push
mov
test
mov
test
dec
loopne
inc
and
int3
out
popa
cmps
stos
iret
test
test
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
(bad)
xor
mov
mov
cmps
test
(bad)
push
int3
or
in
pop
leave
and
loope
or
sahf
bound
test
lods
scas
inc
sub
loop
loope
loope
test
lods
scas
inc
sub
loop
loope
jecxz
test
lods
mov
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
cmp
pop
cmp
test
loope
or
inc
imul
test
(bad)
loopne
mov
mov
es
(bad)
mov
mov
nop
add
test
fsubr
push
lods
mov
sub
loop
loope
jecxz
test
inc
mov
test
loope
mov
or
add
adc
test
dec
loopne
ret
es
dec
loopne
mov
mov
test
(bad)
repnz
jne
mov
dec
inc
loopne
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
mov
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
bound
scas
loope
test
sar
in
frstor
(bad)
push
int3
or
in
pop
leave
and
loope
or
sahf
bound
test
lods
scas
inc
sub
loop
loope
loope
test
lods
scas
inc
sub
loop
loope
jecxz
test
lods
mov
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
test
loopne
repz
inc
inc
sub
push
mov
test
mov
test
dec
loopne
inc
sbb
int3
out
popa
cmps
stos
iret
test
test
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
(bad)
xor
mov
mov
mov
ret
es
dec
loopne
mov
mov
test
xabort
jne
mov
dec
inc
loopne
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
mov
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
bound
scas
loope
test
sar
inc
(bad)
(bad)
push
int3
or
in
pop
leave
and
loope
or
sahf
bound
test
lods
scas
inc
sub
loop
loope
loope
test
lods
scas
inc
sub
loop
loope
jecxz
test
lods
mov
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
test
loopne
(bad)
mov
inc
inc
sub
push
mov
test
mov
test
dec
loopne
inc
sbb
int3
out
popa
cmps
stos
iret
test
test
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
(bad)
xor
mov
mov
cmps
test
(bad)
push
int3
or
in
pop
leave
and
loope
or
(bad)
dec
mov
dec
inc
loopne
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
mov
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
bound
scas
loope
test
sar
loopne
jns
pusha
cs
inc
loopne
cmp
test
loope
or
xchg
xlat
and
(bad)
loopne
ror
es
fsubr
mov
(bad)
loopne
mov
pushw
mov
mov
cmps
mov
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
push
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
test
loope
push
lods
inc
inc
sub
push
mov
mov
cmps
push
lods
scas
inc
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
mov
and
popa
cmps
scas
iret
test
mov
nop
shr
loope
push
(bad)
cli
fsub
out
dec
icebp
imul
cmp
pop
cmp
test
loope
or
loopne
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
mov
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
bound
scas
loope
test
sar
loopne
jns
sub
cmp
pop
cmp
test
loope
or
loopne
mov
sahf
pop
int3
out
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
stos
iret
test
test
loopne
and
popa
cmps
stos
iret
test
test
loopne
and
bound
scas
loope
test
fwait
inc
test
inc
call
inc
sub
push
mov
test
mov
sub
loop
loope
loope
test
lods
scas
inc
sub
loop
loope
out
test
lods
mov
sub
loop
loope
loope
test
lods
mov
sub
loop
loope
jecxz
test
inc
mov
test
loope
shr
mov
mov
mov
cmp
pop
cmp
test
loope
or
xchg
xlat
and
(bad)
loopne
ror
es
ret
mov
pop
hlt
and
inc
pop
sbb
test
cmp
pop
and
iret
push
inc
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
inc
loopne
mov
sahf
pop
int3
out
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
fsubr
into
inc
mov
test
loope
ror
sub
adc
mov
mov
push
int3
or
in
pop
leave
and
loope
or
iret
test
test
loopne
and
popa
cmps
stos
iret
test
scas
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
(bad)
xor
mov
mov
cmps
test
(bad)
push
int3
or
in
pop
leave
and
loope
or
iret
test
mov
mov
es
(bad)
loopne
mov
mov
nop
add
test
(bad)
loopne
mov
sbb
add
test
(bad)
loopne
mov
nop
shr
loope
push
(bad)
cli
fsubr
imul
pop
cmp
pop
cmp
test
loope
or
loopne
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
mov
sub
and
xor
mov
mov
cmps
test
es
cmps
push
in
pop
leave
and
loope
or
dec
loopne
fcmovb
loopne
stos
mov
mov
lock
loopne
mov
pop
hlt
and
inc
pop
sbb
test
cmp
pop
and
iret
push
inc
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
inc
loopne
mov
sahf
pop
int3
out
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
fsubr
into
inc
mov
test
loope
ror
sub
adc
mov
mov
push
int3
or
in
pop
leave
and
loope
or
iret
test
test
loopne
and
popa
cmps
stos
iret
test
scas
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
(bad)
xor
mov
mov
cmps
test
(bad)
push
int3
or
in
pop
leave
and
loope
or
dec
loopne
push
(bad)
loopne
mov
pop
hlt
and
inc
pop
sbb
test
cmp
pop
and
iret
push
inc
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
inc
loopne
mov
sahf
pop
int3
out
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
fsubr
into
inc
mov
test
loope
ror
sub
adc
mov
mov
push
int3
or
in
pop
leave
and
loope
or
dec
loopne
mov
pushw
mov
mov
cmps
mov
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
push
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
test
loope
push
lods
inc
inc
sub
push
mov
mov
cmps
push
lods
scas
inc
sub
loop
loope
loope
test
lods
scas
inc
sub
loop
loope
out
test
lods
mov
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
test
loopne
jge
imul
pop
test
mov
xor
movs
test
and
jmp
jl
das
test
mov
cmps
mov
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
pop
icebp
iret
push
cmps
pop
push
push
lods
inc
inc
sub
push
mov
mov
cmps
iret
inc
mov
test
loope
push
lods
inc
inc
sub
push
mov
mov
cmps
push
lods
scas
inc
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
mov
and
popa
cmps
scas
iret
test
mov
nop
shr
loope
push
(bad)
xor
mov
mov
pop
dec
pop
ret
es
dec
loopne
mov
mov
test
fsubr
push
lods
scas
inc
sub
loop
loope
out
test
lods
mov
sub
out
loope
(bad)
sub
cmp
mov
and
bound
scas
loope
test
sar
mov
and
push
int3
or
in
pop
leave
and
loope
or
iret
test
test
loopne
and
popa
cmps
stos
iret
test
scas
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
fsubr
into
inc
mov
test
loope
mov
or
add
push
pop
ret
es
inc
loopne
cmp
test
loope
or
loopne
mov
sahf
pop
int3
out
popa
cmps
stos
iret
test
scas
(bad)
loopne
and
popa
cmps
scas
iret
test
mov
sbb
add
test
fsubr
into
inc
mov
test
loope
mov
or
add
shl
sahf
imul
pop
test
mov
xor
call
mov
sahf
pop
int3
out
popa
cmps
stos
iret
test
scas
(bad)
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
arpl
scas
imul
test
loope
xor
pop
nop
sub
cmp
pop
and
iret
and
mov
dec
sub
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
inc
loopne
mov
sahf
pop
int3
out
popa
cmps
scas
iret
test
mov
mov
nop
add
test
(bad)
mov
sbb
add
test
(bad)
mov
nop
shr
loope
push
(bad)
xor
mov
mov
push
loopne
loopne
ret
es
dec
loopne
mov
mov
test
fsubr
push
lods
scas
inc
sub
loop
loope
loop
test
lods
mov
sub
loop
loope
jecxz
test
lods
mov
sub
loop
loope
jecxz
test
inc
mov
test
loope
jecxz
or
add
(bad)
jbe
mov
push
lods
inc
inc
sub
push
mov
test
mov
sub
loop
loope
loop
test
lods
scas
inc
sub
loop
loope
jecxz
test
lods
mov
sub
loop
loope
jecxz
test
lods
mov
sub
loop
loope
jecxz
test
inc
mov
test
loope
jecxz
or
add
ret
xchg
imul
pop
test
mov
sub
loop
loope
jecxz
test
lods
scas
inc
sub
loop
loope
in
test
lods
mov
sub
loop
loope
jecxz
test
lods
mov
sub
loop
loope
jecxz
test
inc
mov
test
loope
jecxz
or
add
div
xchg
imul
pop
test
mov
sub
loop
loope
in
test
lods
scas
inc
sub
loop
loope
in
test
lods
mov
sub
loop
loope
jecxz
test
lods
mov
sub
loop
loope
jecxz
test
inc
mov
test
loope
jecxz
or
add
shl
imul
pop
test
mov
sub
loop
loope
in
test
lods
scas
inc
sub
loop
loope
out
test
lods
mov
sub
loop
loope
jecxz
test
lods
mov
sub
loop
loope
jecxz
test
inc
mov
test
loope
jecxz
or
add
out
jbe
xchg
imul
pop
test
mov
sub
loopne
jno
mov
dec
inc
loopne
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
test
and
jge
cli
dec
icebp
imul
adc
add
loopne
cmp
test
loope
or
xchg
xlat
and
and
jmp
mov
test
fsubr
push
lods
scas
inc
sub
out
loope
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
push
inc
and
js
call
or
fucomp
xchg
cli
dec
loopne
push
in
jle
and
addr16
int3
or
in
xchg
and
cmp
mov
addr16
int3
or
in
inc
(bad)
and
(bad)
bound
scas
loope
test
push
int3
or
in
dec
(bad)
and
sub
xor
dec
loopne
ret
es
dec
loopne
mov
mov
fbstp
out
test
inc
loopne
mov
jg
test
and
scas
iret
test
mov
mov
es
(bad)
loopne
mov
mov
nop
add
test
(bad)
mov
sbb
add
test
(bad)
mov
nop
shr
pop
and
enter
scas
(bad)
loopne
mov
mov
push
in
jle
and
addr16
int3
or
in
xchg
and
cmp
mov
addr16
int3
or
in
inc
(bad)
and
(bad)
bound
scas
loope
test
push
int3
or
in
dec
(bad)
and
sub
xor
dec
loopne
ret
es
dec
loopne
mov
mov
fbstp
in
test
inc
loopne
mov
dec
cmps
test
and
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
arpl
scas
pop
(bad)
push
pop
aas
mov
mov
mov
and
inc
pop
sbb
test
cmp
pop
and
iret
push
inc
and
or
mov
dec
inc
loopne
and
test
inc
and
or
mov
dec
inc
loopne
sub
test
sahf
dec
jae
push
nop
icebp
and
push
int3
or
in
pop
leave
and
loope
or
dec
loopne
xor
loopne
scas
mov
out
mov
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
cmp
movs
mov
(bad)
(bad)
sub
push
inc
and
js
jecxz
test
loope
or
dec
loopne
push
in
jle
and
addr16
int3
or
in
xchg
and
cmp
mov
addr16
int3
or
in
inc
(bad)
and
(bad)
bound
scas
loope
test
push
int3
or
in
dec
(bad)
and
sub
xor
dec
loopne
ret
es
dec
loopne
mov
mov
fbstp
loope
test
inc
loopne
mov
push
cmps
test
and
stos
iret
test
lods
(bad)
loopne
and
popa
cmps
stos
iret
test
scas
(bad)
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
popa
cmps
stos
iret
test
stos
(bad)
loopne
and
arpl
scas
pop
(bad)
push
pop
scas
cmps
test
loope
or
mov
sub
dec
loopne
push
in
jle
and
addr16
int3
or
in
xchg
and
cmp
mov
addr16
int3
or
in
inc
(bad)
and
(bad)
bound
scas
loope
test
push
int3
or
in
dec
(bad)
and
sub
xor
dec
loopne
ret
es
dec
loopne
mov
mov
fbstp
pusha
push
push
sub
(bad)
sub
loope
or
pushw
mov
mov
cmps
(bad)
loope
or
loope
or
dec
mov
inc
sub
push
mov
ins
cmps
(bad)
loope
or
dec
loopne
mov
mov
js
in
test
loope
or
push
xor
test
loopne
mov
mov
test
fadd
cs
dec
loopne
mov
push
icebp
inc
push
cmp
jbe
push
xchg
sub
mov
pop
in
stos
dec
pop
in
stos
dec
pop
in
pop
cmp
dec
pop
in
stos
dec
pop
in
stos
dec
pop
sbb
jp
sbb
retf
mov
ja
pop
jns
aad
ins
jle
mov
sub
and
xchg
xchg
jmp
xchg
addr16
loopne
add
retf
stos
dec
pop
in
stos
dec
pop
in
xor
push
retf
cld
outs
jle
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
arpl
mov
ins
xchg
add
sbb
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
jo
pop
pop
test
sbb
pop
in
stos
dec
pop
in
stos
dec
jo
inc
pop
test
popf
jle
pop
jmp
retf
jle
stos
dec
pop
in
stos
arpl
mov
pop
xor
pop
in
stos
dec
pop
in
stos
or
fsub
fidivr
mov
in
stos
dec
pop
in
stos
dec
pop
lods
push
imul
pushw
jns
test
call
in
stos
dec
pop
in
lahf
popa
pop
in
stos
dec
pop
in
stos
dec
pop
in
fwait
addr16
jae
pop
in
stos
dec
pop
in
stos
dec
ins
inc
test
in
stos
dec
pop
in
stos
dec
pop
in
stos
mov
js
popf
outs
(bad)
retf
jle
in
mov
pop
in
stos
dec
pop
in
stos
dec
clc
sbb
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
jmp
imul
stos
dec
pop
in
stos
dec
pop
in
jmp
push
xor
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
fwait
push
jle
jae
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
or
ja
xchg
sub
stos
dec
pop
inc
add
mov
stos
dec
pop
in
stos
dec
pop
in
pop
jno
inc
popf
push
fimul
ins
xchg
xchg
xor
pop
in
stos
dec
pop
in
stos
dec
pop
dec
pop
jnp
xor
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
or
fsub
fidivr
mov
in
stos
dec
pop
lods
push
jnp
ret
sub
dec
pop
in
stos
jnp
retf
sub
dec
pop
in
stos
dec
pop
in
stos
dec
pop
int3
icebp
ins
xchg
mov
pop
or
ja
test
(bad)
ins
jle
stos
dec
pop
in
stos
dec
pop
in
stos
dec
test
mov
outs
int
jge
cmp
xor
in
stos
dec
pop
in
stos
dec
pop
dec
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
clc
push
dec
mov
in
stos
dec
pop
in
stos
dec
jge
inc
xor
retf
enter
xchg
fs
leave
mov
data16
retf
(bad)
aaa
jo
fwait
test
imul
jbe
mov
fadd
lea
mov
jle
imul
mov
xchg
sbb
test
inc
jg
mov
xchg
addr16
test
or
cld
mov
inc
xor
retf
enter
pop
lsl
sbb
mov
jle
pop
jmp
jg
mov
(bad)
xchg
sar
pop
loope
xbegin
mov
jle
clc
fild
int3
add
clc
or
test
pop
push
xchg
sbb
xor
xchg
or
pop
imul
sbb
sub
sbb
sahf
and
pop
and
sub
outs
jle
mov
jne
pop
ins
add
sub
aaa
pop
iret
or
sbb
xchg
xor
ja
xchg
lahf
xor
push
test
ret
mov
or
push
sub
xchg
or
mov
inc
test
outs
cdq
aam
mov
mov
lods
unpckhps
lods
push
xor
adc
cmovne
retf
jbe
sbb
sub
aam
xor
lods
unpckhps
lods
cmp
lods
unpckhps
enter
mov
adc
or
adc
pop
fidiv
sbb
unpckhps
lods
unpckhps
cwde
cmps
and
lods
unpckhps
lods
push
inc
add
adc
lods
unpckhps
cwde
sbb
sub
lods
unpckhps
enter
mov
adc
lods
cmp
aas
lods
unpckhps
lods
unpckhps
lods
unpckhps
ja
sbb
unpckhps
lods
unpckhps
cwde
repz
unpckhps
lods
unpckhps
lods
push
jno
aam
xor
lods
unpckhps
lods
unpckhps
lods
cmp
aas
lods
unpckhps
lods
cmps
cmp
aam
xor
aas
mov
pop
jmp
mov
push
xchg
mov
repz
xor
lock
out
adc
mov
add
mov
scas
mov
sub
dec
pop
in
stos
dec
pop
in
stos
dec
pop
dec
pop
clc
push
dec
mov
in
stos
dec
pop
in
stos
dec
jge
ins
or
retf
sar
ror
fs
mov
les
outs
retf
mov
jge
mov
cld
push
jns
fwait
mov
xlat
push
or
pop
jmp
retf
mov
add
and
jle
imul
cdq
scas
xchg
test
xchg
dec
push
jns
lods
dec
lea
jae
xor
lahf
mov
xchg
xchg
ins
and
and
xchg
sbb
cmc
cmp
bound
sub
mov
in
sbb
sub
imul
inc
test
xchg
ret
cmp
int
gs
xchg
lods
ret
xchg
inc
jbe
xor
push
in
sbb
mov
or
add
sbb
mov
pop
jns
xbegin
loope
jle
test
jle
push
xchg
xor
ja
xchg
lea
in
popf
test
mov
test
mov
jbe
scas
pop
mov
mov
push
retf
mov
sbb
xor
je
sbb
add
cmp
arpl
js
test
aas
(bad)
mov
repz
inc
shr
scas
inc
shr
scas
data16
sahf
out
(bad)
in
scas
inc
shr
scas
inc
sar
jg
scas
mov
mov
ds
scas
inc
shr
scas
inc
shr
scas
inc
shr
lahf
outs
shr
scas
inc
shr
scas
inc
mov
xlat
jmp
in
scas
inc
shr
scas
inc
rcr
pop
jno
in
scas
inc
shr
iret
xor
in
scas
inc
rcr
xchg
hlt
retf
mov
in
scas
inc
shr
scas
es
xchg
add
in
scas
inc
shr
scas
inc
loopne
xor
retf
scas
inc
shr
scas
inc
shr
iret
add
in
scas
inc
shr
scas
jbe
or
inc
shr
scas
inc
shr
scas
es
xchg
add
in
scas
inc
shr
scas
inc
shr
scas
inc
loopne
inc
(bad)
test
scas
inc
shr
scas
inc
mov
xlat
jmp
in
scas
inc
shr
scas
inc
shr
scas
out
cld
sub
jmp
xor
not
jmp
test
inc
nop
inc
mov
std
js
jmp
sbb
popf
or
cmp
xor
pop
sbb
or
sahf
cmp
stos
dec
pop
in
stos
dec
pop
in
stos
jmp
fst
jle
mov
pop
in
jg
pop
cmc
stos
cmp
stos
dec
pop
in
stos
dec
pop
in
stos
imul
sub
jae
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
outs
add
leave
jae
jg
test
jl
mov
jle
(bad)
adc
hlt
pushf
or
das
xchg
mov
pop
repz
mov
add
xor
fdiv
rcr
test
aam
xchg
mov
retf
push
xor
xchg
cmp
jnp
jae
retf
ins
jg
lock
inc
mov
icebp
int3
pop
ins
test
sub
ins
jg
add
sti
leave
push
jmp
or
stc
ins
jle
or
push
and
mov
ja
pop
gs
pop
loopne
sbb
push
shl
mov
mov
fbstp
(bad)
aad
inc
cli
das
cmp
mov
test
test
leave
aaa
pop
adc
push
xchg
lahf
mov
pusha
or
(bad)
pop
mov
sbb
in
call
shl
pop
inc
js
test
ins
dec
xchg
or
test
aam
stos
nop
test
or
push
ret
or
jb
sbb
jmp
mov
cmps
and
add
mov
pop
ins
or
add
xor
outs
pop
jbe
cs
loopne
jle
jns
xor
fsub
outs
cwde
bound
lods
cmp
arpl
jmp
inc
inc
dec
outs
scas
mov
outs
pusha
addr16
outs
inc
inc
cmp
inc
addr16
outs
pusha
mov
fistp
outs
pusha
addr16
inc
pop
pop
adc
cmp
pop
int
pushf
mov
inc
inc
jle
xchg
inc
dec
lea
addr16
outs
pusha
addr16
dec
popa
addr16
outs
xchg
add
push
inc
mov
cwde
outs
pusha
addr16
outs
pusha
xchg
fisttp
inc
mov
pusha
addr16
outs
push
stc
mov
outs
pusha
addr16
cmp
inc
ds
mov
mov
outs
xchg
push
mov
inc
cwde
dec
inc
mov
dec
xchg
outs
mov
addr16
outs
pusha
addr16
rol
mov
outs
pusha
mov
dec
fcom
int
sahf
xor
push
adc
stos
xor
test
dec
mov
inc
cwde
cwde
jecxz
sbb
test
mov
addr16
dec
pop
dec
lds
inc
sahf
xor
push
adc
stos
add
dec
or
ret
cwde
dec
inc
addr16
outs
pusha
mov
sbb
ret
cwde
dec
inc
addr16
outs
pusha
addr16
sub
retf
inc
inc
cwde
outs
pusha
addr16
(bad)
dec
sub
ret
cwde
dec
inc
addr16
cdq
push
fstp
outs
pusha
data16
sbb
cwde
outs
pusha
addr16
(bad)
sub
cwde
outs
pusha
addr16
test
addr16
outs
pusha
into
xchg
js
retf
inc
inc
cwde
outs
pusha
addr16
outs
pusha
mov
pop
mov
inc
addr16
outs
pusha
into
xchg
push
inc
inc
cwde
outs
pusha
addr16
(bad)
dec
push
cwde
dec
inc
addr16
outs
pusha
mov
jo
ret
cwde
dec
inc
addr16
outs
pusha
addr16
rol
retf
inc
inc
cwde
outs
pusha
addr16
jo
retf
inc
inc
cwde
outs
pusha
addr16
xor
mov
outs
xchg
xchg
pushf
dec
inc
addr16
outs
pusha
addr16
pop
and
cwde
dec
lods
push
dec
mov
pusha
addr16
cwde
hlt
xchg
outs
mov
addr16
outs
pusha
addr16
sub
outs
inc
jecxz
sbb
cwde
dec
scas
push
dec
adc
outs
pusha
addr16
cwde
adc
outs
mov
addr16
outs
pusha
addr16
sub
dec
dec
cdq
dec
inc
into
xchg
xor
retf
inc
inc
cwde
outs
pusha
addr16
outs
pusha
inc
jecxz
sbb
cwde
dec
lods
ins
push
inc
aas
push
adc
inc
cwde
dec
popa
addr16
outs
pusha
mov
inc
dec
in
mov
outs
pusha
addr16
outs
pusha
mov
sbb
ret
cwde
dec
inc
addr16
outs
pusha
mov
loop
ret
cwde
dec
inc
addr16
outs
pusha
addr16
int3
int
dec
ret
push
inc
cwde
outs
pusha
addr16
outs
pusha
mov
xchg
lahf
pushf
mov
mov
outs
pusha
addr16
inc
nop
dec
inc
inc
cwde
dec
popa
addr16
outs
xchg
push
or
inc
addr16
outs
pusha
addr16
pop
int
mov
outs
xchg
std
jae
mov
addr16
cdq
sbb
cwde
dec
popa
addr16
outs
xchg
inc
dec
add
pusha
addr16
outs
pusha
addr16
dec
mov
inc
mov
outs
pusha
addr16
in
rcr
pusha
addr16
outs
pusha
addr16
dec
inc
addr16
outs
pusha
xchg
mov
sbb
dec
inc
inc
sahf
ror
dec
inc
inc
cwde
outs
pusha
addr16
sbb
dec
inc
inc
sahf
ror
sbb
retf
cwde
jmp
mov
outs
pusha
addr16
outs
pusha
addr16
outs
pusha
addr16
popf
inc
xchg
xchg
call
mov
outs
pusha
dec
pop
pusha
inc
cwde
cwde
repnz
outs
mov
addr16
outs
pusha
mov
push
mov
arpl
addr16
outs
pusha
popw
inc
imul
pop
dec
pop
and
inc
daa
sub
dec
and
inc
cli
inc
aad
adc
push
ins
mov
push
pop
and
inc
and
movs
xor
xor
pop
and
ins
xchg
dec
pop
in
scas
retf
in
ins
jg
mov
pop
ins
and
stos
dec
pop
in
stos
dec
cmp
shl
jle
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
push
mov
and
mov
pop
in
stos
dec
pop
in
stos
dec
jns
xchg
xor
retf
mov
jg
mov
mov
push
loopne
jle
stos
dec
pop
in
stos
dec
pop
mov
dec
pop
in
stos
dec
pop
in
stos
dec
stos
retf
pop
outs
and
jae
pop
in
stos
dec
pop
in
stos
imul
data16
stos
dec
pop
ins
pop
retf
mov
retf
jb
loope
add
stos
dec
pop
in
stos
dec
pop
in
retf
dec
and
dec
pop
in
stos
dec
pop
push
mov
and
mov
pop
in
stos
dec
pop
in
stos
dec
jns
movs
xor
retf
mov
jg
mov
mov
pop
mov
jle
stos
dec
pop
in
stos
dec
pop
in
stos
sub
push
ins
pop
in
stos
dec
pop
in
stos
dec
stos
retf
pop
outs
and
jae
pop
in
stos
dec
pop
in
stos
jmp
mov
adc
retf
cmp
out
retf
ror
mov
ficom
outs
retf
dec
out
cli
fwait
jl
sbb
or
(bad)
mov
hlt
fwait
scas
aam
ins
jle
imul
xchg
add
mov
sbb
jp
call
scas
bound
data16
jb
xchg
lods
into
lea
cmp
cmp
ins
jle
mov
jae
sbb
scas
or
test
(bad)
enter
or
dec
sbb
shl
mov
gs
clc
mov
pop
mov
mov
mov
pop
cmp
arpl
jle
pop
outs
jle
mov
cmp
sahf
inc
mov
lods
ret
nop
pop
jns
stos
int3
pop
or
jle
xchg
jno
out
icebp
rcl
retf
cmp
out
retf
mov
mov
test
or
fnstenv
add
lea
add
mov
add
mul
jg
shr
cmp
jae
clc
push
es
lods
mov
cli
pop
or
arpl
sbb
mov
jbe
test
call
ror
jmp
ss
dec
outs
jp
add
(bad)
mov
fwait
xchg
or
out
mov
sti
dec
sahf
push
jle
test
xchg
mov
pop
and
mov
sbb
cmp
and
mov
pop
and
push
push
mul
xlat
inc
loopne
pop
and
mov
cld
mov
(bad)
call
(bad)
call
(bad)
call
xor
sub
loop
and
adc
pop
call
(bad)
ins
xlat
sub
mov
pop
and
xchg
xor
mov
lock
(bad)
fwait
cmp
stos
lods
sbb
call
(bad)
fwait
lock
sar
add
pop
cmc
add
xor
sub
loop
and
(bad)
in
loopne
lock
(bad)
fwait
lock
jmp
scas
test
jmp
xor
mov
lods
test
(bad)
push
jmp
fistp
inc
nop
sub
push
xor
dec
pop
dec
lea
es
int3
push
jge
mov
adc
retf
cmp
xchg
retf
xchg
fs
mov
cli
and
cli
add
sbb
cmp
movs
xchg
(bad)
jns
or
mov
mov
pop
fimul
enter
jbe
sbb
adc
(bad)
mov
jecxz
inc
xchg
data16
xchg
lods
xchg
lea
jae
xor
xchg
pop
mov
js
test
or
xlat
ins
test
mov
jle
mov
jp
fcom
or
pop
mov
gs
lea
pop
test
mov
pop
pop
jns
(bad)
jb
jmp
sbb
mov
pop
xchg
or
jp
sbb
mov
or
mov
ins
jle
pop
in
sbb
test
cli
xlat
rcl
jnp
add
call
jp
mov
mov
sbb
cdq
test
mov
ja
pop
gs
pop
into
sbb
inc
mov
xor
mov
loopne
jno
scas
inc
jae
cmp
pop
sbb
clc
jne
ret
in
mov
icebp
or
ror
sbb
mov
xchg
cmp
adc
sbb
xchg
xor
scas
data16
sub
repz
cmp
outs
sahf
jbe
je
cli
inc
inc
push
hlt
nop
les
and
in
inc
push
in
nop
inc
sbb
sub
bound
push
arpl
push
add
sti
inc
(bad)
ret
push
arpl
movs
inc
nop
out
das
je
cli
inc
xchg
jne
mov
ret
push
arpl
push
arpl
sbb
outs
jno
iret
adc
dec
sbb
cli
inc
inc
in
inc
(bad)
ret
push
arpl
dec
mov
ret
arpl
push
arpl
push
arpl
jo
inc
in
das
je
cli
inc
mov
in
arpl
push
arpl
push
arpl
mov
je
cli
inc
xchg
in
inc
inc
sbb
sub
bound
push
arpl
push
arpl
add
in
mov
sti
js
inc
in
push
das
aam
into
inc
ret
arpl
push
arpl
loop
inc
cdq
jo
dec
inc
jb
inc
and
xchg
inc
hlt
jo
mov
in
outs
mov
ret
push
arpl
push
arpl
push
arpl
aam
into
inc
ret
arpl
push
arpl
push
aaa
dec
in
inc
(bad)
ret
push
arpl
cdq
sti
inc
(bad)
ret
push
arpl
push
arpl
in
arpl
push
arpl
mov
inc
retf
cmc
fidivr
inc
ret
arpl
push
arpl
jbe
mov
call
ret
push
arpl
dec
and
outs
jno
arpl
push
arpl
push
arpl
push
inc
aas
xchg
cs
inc
out
dec
xor
inc
xchg
shl
aas
xchg
cs
inc
in
dec
xor
inc
xchg
loope
(bad)
nop
cld
movs
inc
mov
in
sub
jno
arpl
push
arpl
jp
sbb
inc
inc
in
bound
push
arpl
push
arpl
cli
mov
in
inc
(bad)
ret
push
arpl
push
arpl
out
sbb
into
in
inc
inc
in
arpl
push
arpl
push
arpl
addr16
mov
ret
push
arpl
rcr
test
into
inc
sbb
mov
inc
pop
jo
inc
in
add
je
inc
cdq
jno
pushf
jecxz
inc
inc
pop
jo
inc
in
pop
inc
imul
aaa
cmp
sub
cli
inc
xor
adc
fwait
cli
inc
es
hlt
cmp
in
dec
fcomp
mov
into
in
std
jns
sub
jnp
jo
ins
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jg
mov
jg
mov
jg
mov
mov
mov
mov
push
pop
hlt
mov
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
jns
push
jmp
jne
(bad)
ins
jg
mov
arpl
ins
arpl
ins
popa
ret
icebp
outs
jg
pop
gs
sub
mov
nop
scas
arpl
test
pop
test
pop
(bad)
jle
mov
fdiv
jb
or
imul
(bad)
icebp
xchg
jl
shl
cmp
or
mov
jae
cmp
cdq
sbb
ja
int
sub
scas
or
mov
mov
mov
retf
mov
xor
xchg
or
cmp
jmp
out
pusha
test
mov
ja
pop
or
jle
imul
xlat
or
jg
daa
cli
jle
mov
and
pop
aaa
xor
add
retf
clc
inc
mov
test
jp
test
mov
push
mov
pop
or
mov
sti
jge
lods
mov
(bad)
enter
push
pop
lds
hlt
enter
fild
retf
pop
pop
add
out
mov
pop
(bad)
stc
mov
mov
xor
pop
push
aam
test
sti
std
aad
arpl
xor
dec
movs
add
xchg
stc
xlat
mov
jo
or
jg
retf
sub
into
sti
push
cmp
sub
sub
add
or
or
or
or
cmp
jmp
mov
push
xor
pop
dec
(bad)
lds
pop
dec
mov
loopne
mov
xchg
push
jb
pop
jmp
adc
sbb
mov
dec
pop
in
stos
dec
pop
in
dec
outs
add
imul
mov
jle
(bad)
xchg
les
(bad)
cmp
lea
fild
retf
clc
popa
mov
mov
mov
imul
mov
fwait
lock
fmul
lds
xchg
lods
hlt
lea
leave
or
sti
bound
cmp
aas
repnz
cli
lods
(bad)
lods
jb
and
sti
adc
jge
iret
retf
mov
lea
jg
xchg
pop
clc
sub
popf
js
lods
(bad)
lea
add
sbb
fwait
test
mov
fmul
call
lods
ins
jle
mov
stos
repnz
popf
test
mov
es
mov
xor
mov
jle
cli
iret
adc
sbb
cmp
ins
jle
dec
pop
and
pop
adc
(bad)
cli
ins
repnz
xor
ins
call
mov
jp
lea
nop
test
xchg
sbb
aas
(bad)
out
ins
test
mov
ja
pop
loopne
retf
add
mov
xchg
test
lock
inc
mov
pop
pushf
push
nop
test
or
ret
xor
lods
ret
(bad)
mov
mov
jl
(bad)
mov
sub
mov
mov
dec
xor
mov
lds
inc
lds
ss
vmovss
arpl
fist
arpl
fist
(bad)
loop
adc
fstp
inc
rol
inc
fistp
mov
into
dec
cld
push
dec
xlat
ja
inc
adc
mov
int3
pop
inc
jae
pop
jmp
xchg
sub
retf
dec
pop
in
stos
dec
pop
in
stos
jecxz
xchg
shl
jg
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
inc
pop
xchg
xor
pop
in
stos
dec
pop
in
add
(bad)
jle
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
or
ins
stc
in
mov
popa
ret
jmp
retf
pop
fstp
xlat
ins
or
push
mov
push
cmp
xchg
scas
hlt
mov
mov
fisub
sbb
in
xchg
add
aad
out
ds
daa
retf
or
sbb
ins
jle
mov
ja
pop
gs
mov
cmp
clc
aad
retf
jb
ja
mov
add
add
push
push
enter
sub
loopne
sbb
ins
jle
or
mov
xlat
xchg
test
clc
mov
pop
ja
jb
lea
ret
push
xor
xchg
cmp
leave
mov
bound
jb
xor
jo
pop
pop
scas
ins
mov
scas
xchg
sbb
pop
ins
jle
mov
lock
xchg
or
mov
and
mov
loope
int3
jg
test
js
mov
jae
icebp
shl
hlt
retf
or
retf
int3
xchg
sbb
xor
sbb
ret
mov
cli
sbb
mov
cld
cmc
retf
pop
mov
or
lods
sbb
xchg
or
pop
adc
aas
sti
cmp
xchg
cmc
gs
jmp
jl
sub
xchg
ror
sub
jl
sub
pop
pop
mov
jo
mov
sub
test
jl
sub
test
jmp
mov
mov
mov
push
mov
ins
add
shl
test
or
and
add
data16
pop
or
dec
pop
in
stos
dec
pop
int3
jge
popa
sar
jle
dec
outs
add
sbb
jae
aad
mov
ja
sub
jle
imul
gs
aam
mov
or
imul
fidivr
pop
retf
or
mov
mov
imul
mov
cwde
push
xchg
data16
imul
adc
or
cmc
mov
ins
test
retf
mov
(bad)
mov
pop
imul
sbb
inc
pop
jp
jae
mov
jmp
jle
mov
ja
jnp
ins
xor
jmp
pop
ror
ror
push
ret
je
xchg
pop
jle
mov
xlat
pop
push
ins
push
xor
xchg
sbb
lods
ret
je
jp
pop
pop
push
ins
test
test
or
stos
pop
hlt
ds
cmp
mov
stc
dec
fdiv
mov
aad
call
jle
mov
sbb
mov
test
cmp
arpl
cmp
sbb
jl
lahf
jge
xchg
xor
or
xchg
imul
xchg
or
jle
mov
xor
stos
inc
arpl
jne
sbb
jae
sbb
xchg
jecxz
jne
jb
loope
adc
pop
mov
xor
sbb
hlt
fwait
jge
add
mov
jp
xchg
jge
addr16
and
mov
neg
(bad)
js
stos
lds
test
aad
jge
push
adc
pop
sbb
jno
sbb
jno
sbb
jno
mov
sbb
push
cdq
dec
inc
pop
xchg
cld
mov
cdq
xor
sub
fsub
pop
xchg
stos
mov
cwde
xchg
test
or
and
nop
cwde
jb
pop
jmp
pop
in
stos
dec
pop
in
stos
dec
pop
in
mov
push
sub
mov
pop
in
stos
dec
pop
in
stos
dec
push
in
stos
dec
pop
fmul
inc
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
cmp
shl
jle
stos
dec
pop
in
stos
dec
pop
int3
jns
js
xchg
push
mov
or
jle
xchg
fs
leave
idiv
add
jb
sub
imul
lea
callw
or
push
xchg
imul
retf
jl
test
pop
and
cdq
stos
popa
push
test
stc
popa
lds
pop
mov
mov
rol
mov
xor
repz
int3
aad
mov
jns
(bad)
jb
xchg
lea
sub
or
sub
dec
nop
lods
in
ins
jle
adc
or
add
sub
jp
out
mov
pop
dec
jle
mov
xor
es
stc
xchg
test
mov
jbe
gs
ret
repz
lahf
jbe
mov
(bad)
mov
ins
or
lds
xor
in
lods
cmp
retf
cli
cmps
adc
mov
or
mov
pop
cdq
xor
mov
lea
cmc
retf
ret
retf
pop
jno
inc
in
cmp
or
or
lods
ret
retf
mov
mov
pop
ins
lods
(bad)
jb
or
test
mov
cmps
or
xchg
xchg
xor
es
fs
jns
(bad)
xchg
push
sbb
xchg
xor
out
mov
fdiv
(bad)
mov
mov
lahf
or
jg
mov
adc
jno
movs
pusha
ficomp
pusha
ficomp
div
push
shl
sbb
jns
and
ja
loope
add
or
jae
shl
push
and
xchg
out
or
(bad)
jb
pop
jmp
jle
stos
dec
pop
in
stos
dec
pop
in
fwait
(bad)
cmps
in
stos
dec
pop
in
stos
lods
mov
add
retf
mov
stos
dec
pop
in
stos
dec
pop
in
add
ja
mov
stos
dec
pop
in
stos
dec
pop
in
stos
jecxz
fisttp
pop
in
stos
dec
pop
in
stos
dec
icebp
inc
xchg
ins
jle
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
jecxz
jmp
ins
jle
stos
dec
pop
in
stos
dec
pop
in
stos
dec
icebp
inc
movs
ins
jle
mov
in
stos
dec
pop
inc
add
mov
stos
dec
pop
in
stos
dec
pop
in
add
inc
retf
mov
stos
dec
pop
in
stos
dec
pop
or
pop
cli
inc
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
sub
dec
push
ins
pop
in
stos
dec
pop
in
stos
dec
pop
in
add
dec
push
ins
jg
mov
stos
dec
pop
in
stos
dec
icebp
rcr
cmc
retf
clc
jmp
pop
in
stos
dec
pop
in
fwait
jmp
pop
in
stos
dec
pop
in
stos
sub
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
icebp
shl
cmc
retf
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
(bad)
pop
jecxz
push
ins
inc
pop
push
popa
ret
leave
outs
jg
pop
gs
aad
ins
jl
jae
cmp
pop
outs
sbb
outs
call
ins
jle
mov
jge
inc
pop
xchg
and
je
call
xor
cmp
mov
cs
jae
mov
cdq
sbb
pop
mov
cmp
push
(bad)
xor
icebp
lahf
test
adc
push
shl
jbe
mov
or
adc
test
retf
mov
ret
jl
bound
(bad)
gs
or
jl
pop
mov
int
outs
test
jae
cmp
or
aam
nop
sbb
jmp
cwde
into
mov
jge
xchg
or
sbb
clc
jg
cmps
jge
ins
mov
icebp
cmc
retf
cli
cmp
xchg
xor
sbb
mov
icebp
hlt
retf
cli
sbb
mov
in
mov
lea
dec
jnp
pushf
scas
sub
cmp
aaa
jge
in
jns
cmp
mov
jl
jns
jb
mov
(bad)
and
inc
mov
pop
xor
out
call
loop
and
dec
call
jecxz
call
mov
pop
jecxz
(bad)
retf
sub
or
ja
xchg
inc
pop
xchg
sub
mov
dec
pop
fadd
lods
pop
in
stos
dec
pop
in
stos
dec
jns
lea
xchg
mov
mov
ffreep
ins
popa
ret
cmp
retf
pop
fld
xchg
imul
inc
jno
fwait
movs
in
xchg
pop
idiv
mov
test
in
mov
sti
cmp
jecxz
sbb
cmp
dec
jecxz
mov
dec
inc
not
xchg
test
or
inc
push
pop
ss
or
jb
xchg
(bad)
sbb
ins
lods
fmul
sbb
and
mov
push
xor
xchg
cmp
loope
inc
mov
jl
rcr
mov
ja
jne
adc
jle
cwde
and
leave
ins
jg
pop
pop
or
sbb
cdq
test
mov
jbe
icebp
adc
mov
in
xor
or
mov
mov
mov
jbe
lods
push
jb
sbb
jns
mov
sub
mov
pop
pop
in
mov
pop
ins
jns
(bad)
jb
outs
jb
sbb
or
and
adc
push
ins
or
xchg
or
xor
mov
mov
xchg
jbe
xor
loope
clc
xor
jl
xchg
adc
cmp
xchg
jge
jne
test
cmp
push
out
pushf
sahf
inc
call
fxch
pop
bound
fst
iret
xchg
jbe
adc
push
test
xchg
jbe
iret
xchg
jbe
iret
xchg
jbe
iret
rol
mov
mov
xchg
jbe
iret
xchg
jbe
psubq
cwde
xor
fist
not
xor
mov
xor
cmp
scas
ins
pop
cmc
or
fdiv
pop
jmp
jle
stos
dec
pop
in
stos
sub
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
outs
les
dec
pop
in
fwait
pop
fisttp
ins
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
loopne
not
inc
mov
(bad)
push
pop
xchg
push
ins
xchg
iret
pop
jno
mov
xor
retf
mov
jle
dec
outs
add
xchg
fsubr
retf
mov
jg
imul
or
lahf
jge
sbb
retf
xor
jb
call
ins
jg
imul
lea
(bad)
mov
loope
nop
add
aam
scas
lock
sbb
mov
test
inc
mov
test
and
sub
or
sbb
mov
xlat
fiadd
sbb
ja
xchg
lods
in
lea
imul
jmp
or
dec
in
mov
mov
xchg
(bad)
pop
arpl
test
test
mov
test
pop
cmps
or
shr
sbb
imul
pop
mov
sahf
fwait
repz
(bad)
xchg
test
aaa
mov
jecxz
call
jle
mov
inc
dec
xchg
nop
xor
sub
jg
xchg
test
cld
xchg
xor
rcr
ins
test
push
dec
ins
or
pop
xchg
xor
or
sub
pop
imul
(bad)
mov
popf
jl
std
call
je
fiadd
xor
inc
gs
adc
inc
pop
adc
inc
pop
adc
inc
icebp
ds
xor
rol
sbb
nop
shl
lods
outs
mov
retf
xor
xor
mov
cld
fidiv
dec
mov
adc
sbb
fs
stos
dec
pop
in
stos
dec
pop
in
stos
dec
mov
inc
mov
retf
mov
in
stos
dec
pop
xor
into
cli
inc
mov
stos
shl
jle
xchg
inc
mov
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
jecxz
mov
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
xor
into
sti
inc
mov
retf
jl
or
xchg
xlat
leave
mov
nop
out
retf
clc
push
cld
add
call
outs
fsubr
mov
jl
rcr
pushf
aas
(bad)
mov
shl
out
sahf
xchg
jge
jae
cmp
jb
sbb
cdq
sbb
jg
xor
jg
(bad)
jle
clc
cmps
mov
jb
and
jg
popa
shl
ins
jg
clc
jnp
push
jbe
and
call
pop
clc
scas
retf
mov
test
and
push
jle
mov
or
int
jle
push
push
aad
mov
or
mov
sbb
leave
xchg
test
in
mov
test
mov
jbe
fucomp
sbb
mov
enter
jmp
jb
jns
aad
imul
jns
xchg
push
cmp
or
gs
mov
jbe
or
and
xor
push
dec
out
pusha
test
retf
mov
js
test
mov
lahf
test
mov
pop
icebp
xor
mov
push
ins
or
push
xchg
stc
jns
jmp
jae
or
cmp
mov
sti
pop
or
xchg
pop
ins
push
sub
sti
inc
js
sub
xlat
sub
cld
sti
or
(bad)
or
fcmove
mov
pop
(bad)
or
(bad)
movs
cmp
push
jmp
jecxz
dec
cmp
jp
xor
fisttp
imul
push
aad
add
sti
rol
or
addr16
in
stos
dec
pop
in
stos
mov
(bad)
pusha
pushw
mov
(bad)
pusha
fs
or
mov
jmp
je
bound
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
push
in
stos
dec
pop
in
stos
dec
pop
int3
dec
imul
adc
dec
pop
in
stos
dec
ficomp
mov
xor
pop
in
stos
dec
pop
in
dec
scas
jns
push
sub
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
sti
test
jae
add
mov
jg
test
jl
mov
jle
imul
call
sub
repz
pop
cmps
jle
mov
mov
ins
or
jle
cli
(bad)
adc
mov
imul
xchg
push
inc
pusha
sar
js
test
mov
test
out
sbb
outs
jle
mov
aam
push
cwde
lods
push
ins
jg
mov
pusha
test
cmp
sbb
int3
iret
xchg
stc
mov
pop
jns
cmp
ins
jle
clc
leave
mov
mov
pop
leave
or
add
mov
aad
mov
fidiv
sbb
clc
xchg
test
icebp
jno
inc
mov
ja
pop
gs
mov
ja
pop
or
pop
test
imul
xor
xor
or
movups
retf
pop
fild
enter
inc
sti
or
loopne
xchg
sbb
pop
jmp
xchg
mov
clc
inc
ret
sbb
rcr
xor
jmp
xchg
or
jne
mov
and
test
push
pushf
add
lods
ja
dec
js
mov
xchg
jne
not
pop
jp
cmp
repnz
sub
mov
pop
cmp
(bad)
fimul
pop
add
dec
int
lods
arpl
xchg
xor
xchg
pop
jmp
aam
push
outs
cmps
or
and
jle
mov
in
stos
dec
pop
in
stos
mov
mov
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
fwait
xchg
stos
dec
pop
in
stos
dec
pop
lods
push
mov
arpl
add
dec
mov
retf
jle
push
jg
call
pop
in
stos
outs
add
sbb
mov
test
jl
mov
jle
jno
nop
cmp
fwait
jl
mov
mov
scas
lea
jge
sub
sti
mov
ret
jnp
cdq
nop
push
sub
fs
pushw
dec
jns
test
push
sbb
(bad)
das
dec
mov
pop
jmp
sbb
xchg
test
xchg
(bad)
out
nop
inc
cli
xlat
enter
aad
jg
test
pop
inc
js
test
push
sbb
xchg
lods
mov
pop
ja
ds
sbb
xchg
mov
ins
retf
icebp
ror
retf
pop
out
sahf
retf
pop
inc
xor
push
(bad)
lods
call
mov
sub
xchg
push
xor
xchg
cmp
add
scas
sbb
bound
jg
sbb
leave
test
cli
add
mov
mov
jbe
popa
xchg
xor
lahf
jbe
call
sbb
xchg
xor
cmp
ret
dec
xlat
jae
lods
ret
je
jl
aam
sti
jno
(bad)
jbe
jbe
arpl
cmp
xchg
jge
cmc
cmp
cmp
lods
mov
xchg
dec
inc
lds
mov
inc
dec
xchg
cdq
inc
dec
xchg
cwde
inc
jecxz
js
out
call
push
push
mov
fsubr
pop
xor
push
mov
outs
icebp
xchg
dec
inc
and
xor
mov
dec
pop
push
hlt
mov
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
jge
mov
hlt
retf
cli
das
mov
leave
mov
call
nop
mov
jl
xor
mov
nop
fisub
or
movs
mov
daa
ins
jle
mov
or
imul
or
sub
(bad)
xchg
data16
mov
xchg
test
mov
jle
mov
out
imul
enter
retf
stc
sbb
mov
test
pop
pop
jle
mov
and
mov
cli
adc
jne
aas
out
mov
fild
jle
mov
push
mov
icebp
stc
retf
mov
jle
cli
std
cld
retf
lods
ret
cmp
jae
mov
icebp
push
retf
mov
test
pop
dec
in
sbb
cmp
loope
mov
pop
jno
xbegin
imul
cli
add
jno
jg
test
pop
out
sbb
cdq
lods
pop
jb
sub
xchg
push
xor
xchg
sbb
cwde
or
mov
es
(bad)
mov
inc
push
call
(bad)
jbe
inc
movs
ja
mov
lds
mov
add
inc
stc
sbb
data16
sbb
data16
sbb
data16
xor
pcmpgtd
sbb
data16
sbb
jp
xor
mov
and
add
mov
sub
sbb
data16
sbb
data16
sub
xlat
data16
sbb
data16
sbb
addr16
mov
jns
mov
push
xchg
mov
and
mov
and
pushfw
retf
fistp
imul
cwde
xchg
xor
pop
fadd
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
imul
mov
jae
ja
mov
xchg
inc
mov
retf
mov
in
stos
dec
pop
in
stos
xchg
je
ja
or
aam
add
leave
data16
in
cmc
retf
mov
test
dec
pop
in
stos
dec
pop
pop
cli
popw
xchg
push
ins
xchg
rcr
xor
imul
out
test
jae
mov
xchg
test
mov
jbe
ja
add
test
xor
xchg
adc
ja
xor
xchg
xor
cdq
lds
pop
in
fwait
push
push
xor
pop
in
stos
dec
pop
in
stos
dec
xchg
dec
lods
ins
jg
data16
xchg
xor
stos
retf
mov
stos
dec
pop
in
stos
dec
pop
in
mov
xchg
fist
xchg
fstp
xchg
jg
retf
stos
dec
pop
in
stos
dec
test
xchg
push
push
xor
fstp
aas
push
retf
stos
dec
pop
in
stos
dec
jns
pop
push
in
stos
dec
pop
in
stos
in
fbstp
jns
sub
dec
pop
in
stos
dec
pop
in
stos
mov
push
retf
es
int3
push
jne
mov
aad
retf
adc
ss
xchg
fs
mov
call
mov
cdq
cs
xchg
imul
retf
mov
mov
mov
mov
xchg
or
pop
push
dec
div
adc
cdq
sbb
imul
ins
or
int
sbb
mov
call
xor
loope
mov
sbb
lods
ret
mov
jbe
sub
out
jg
scas
int
outs
popa
shl
sti
call
xchg
test
pop
aas
jle
mov
adc
xor
mov
inc
mov
push
mov
pushf
or
ret
mov
test
jb
ins
out
lds
or
nop
sbb
sbb
push
call
sbb
cli
in
jg
(bad)
int
lods
adc
cmp
jecxz
fisub
xchg
dec
mov
icebp
mov
sbb
mov
sbb
cmp
adc
loope
int
gs
neg
les
lds
push
xchg
mov
(bad)
mov
bound
jae
inc
add
add
add
shr
sahf
xchg
in
jae
stos
stc
mov
aas
xlat
stos
mov
jnp
xchg
ret
jae
sub
push
aas
(bad)
xchg
mov
cmps
daa
das
mov
(bad)
mov
call
das
nop
mov
inc
pop
push
aas
loope
mov
jnp
mov
daa
das
xchg
xchg
jae
sub
push
aas
(bad)
mov
ss
daa
das
mov
jecxz
or
repz
call
jae
jne
arpl
add
add
test
jae
inc
add
add
add
mov
jb
arpl
push
jae
add
and
or
add
add
cmps
jbe
loopne
mov
inc
popa
aad
pop
arpl
cdq
in
fidiv
imul
mov
arpl
push
jae
add
add
test
jae
inc
add
add
jmp
inc
add
movs
xchg
pop
sbb
arpl
add
add
and
push
gs
jbe
gs
jae
imul
push
push
jns
fwait
inc
into
add
add
movs
not
cdq
cmps
mov
cmp
fistp
add
add
fisttp
mov
add
add
add
daa
push
push
mov
push
pop
xchg
push
jge
adc
popf
stc
push
add
adc
sahf
stc
push
mov
mov
jmp
xor
pop
in
stos
dec
pop
in
stos
dec
pop
fadd
sti
ret
push
leave
test
sbb
or
inc
into
loopne
sbb
push
adc
mov
imul
cwde
jbe
and
retf
cli
jnp
cmp
or
vphaddbw
xchg
pop
xor
hlt
cmp
lods
(bad)
cdq
sbb
clc
mov
inc
je
or
jl
mov
add
inc
test
mov
or
jmp
or
ins
push
xor
xchg
sbb
cmovge
add
mov
stc
aas
stos
call
jns
xchg
xchg
cmp
and
lods
sbb
ds
add
out
jp
or
jg
xchg
in
clc
pop
dec
push
jo
pop
sbb
mov
mov
daa
xchg
xchg
test
or
ja
leave
ins
lods
sbb
cmp
sbb
and
sub
jns
jne
xor
jle
out
fistp
stc
sub
xor
xor
mov
jbe
test
or
mov
setne
test
scas
mov
test
mov
push
fwait
test
pop
sbb
(bad)
xchg
dec
mov
pop
shl
pop
outs
cwde
(bad)
sub
nop
enter
add
cdq
inc
xor
mov
imul
call
dec
scas
push
pusha
dec
cmp
push
dec
es
push
dec
add
dec
scas
push
into
out
or
scas
call
scas
push
into
dec
inc
push
sbb
jb
push
dec
jo
and
push
into
dec
scas
repnz
in
scas
int3
into
(bad)
scas
test
scas
enter
push
into
dec
push
push
sub
push
add
push
or
je
mov
push
into
test
scas
pushf
into
lods
scas
nop
into
xchg
scas
adc
dec
scas
push
dec
and
push
dec
push
push
into
dec
scas
mov
into
test
push
push
add
je
cs
scas
push
into
pop
add
jne
outs
and
ss
scas
push
into
outs
mov
outs
mov
push
sub
test
test
push
add
push
es
lods
mov
and
mov
jne
outs
mov
outs
mov
adc
test
scas
mov
or
scas
and
dec
scas
push
call
outs
mov
outs
jl
iret
dec
scas
push
cmp
data16
cmp
inc
dec
fmul
dec
scas
je
outs
mov
outs
mov
call
retf
mov
ins
fmul
cmp
jne
outs
mov
sbb
push
and
mov
sbb
scas
push
into
outs
mov
outs
mov
outs
mov
call
(bad)
mov
ins
fmul
cmp
jne
outs
mov
outs
mov
nop
test
lds
ins
fmul
cmp
jne
outs
mov
outs
jns
enter
cld
push
aam
or
dec
scas
push
call
outs
mov
outs
mov
and
dec
mov
ins
fmul
cmp
jne
outs
mov
jo
cmps
fbld
ins
fmul
cmp
jne
outs
mov
outs
mov
outs
fmul
cmps
out
fldcw
mov
outs
dec
pop
and
dec
scas
push
into
outs
mov
outs
mov
outs
mov
sahf
mov
dec
(bad)
ficom
xor
movs
clc
jno
scas
jl
bound
ror
scas
xor
stc
outs
fmul
sub
mov
push
lods
mov
fmul
cdq
ret
xchg
pop
jmp
pop
in
stos
dec
pop
fadd
sti
ret
imul
push
ins
aas
add
pop
outs
jg
pop
imul
mov
(bad)
and
mov
sbb
bound
cmp
jle
mov
pop
lahf
push
enter
stc
arpl
je
lods
mov
jae
mov
sub
pusha
shr
xor
push
jns
xchg
je
pop
adc
mov
ret
or
mov
imul
loop
out
dec
out
mov
jg
gs
jle
cli
and
and
mov
clc
pop
fstp
mov
or
sti
inc
xchg
jmp
add
out
inc
or
or
in
imul
cli
mov
lods
ret
or
sbb
mov
xor
sbb
aam
sbb
cli
and
js
(bad)
mov
cli
out
or
sbb
xor
xchg
xchg
movs
jge
mov
mov
nop
int3
or
gs
lock
mov
pop
mov
xor
mov
pop
mov
xor
push
jns
clc
sbb
adc
add
ins
test
nop
xor
cwde
dec
sbb
mov
stc
(bad)
test
ja
pop
jle
pop
test
test
cmp
pop
test
test
imul
jmp
pop
test
xchg
out
fnstcw
in
mov
dec
call
or
call
pop
test
imul
pop
mov
aam
mov
jle
in
retf
adc
xchg
shr
outs
iret
xchg
or
aaa
pusha
xor
fld
test
test
xor
in
pop
test
test
test
loopne
call
pop
test
push
dec
iret
jnp
fsub
sub
test
test
imul
pop
(bad)
pushf
add
(bad)
iret
pop
test
mul
iret
pop
test
test
fisttp
icebp
sar
add
(bad)
ror
sbb
mov
icebp
sar
mov
push
in
stos
cmp
jae
pop
jmp
cmps
enter
retf
mov
and
push
sar
test
jl
mov
jle
or
aas
vprotb
pop
int3
cmp
cmp
stos
push
cmp
jle
mov
xor
repz
jle
inc
dec
aad
stc
cmps
sbb
and
fisub
test
stc
jns
(bad)
xchg
ss
mov
lea
jae
xor
xor
ja
hlt
mov
pop
dec
or
pusha
mov
mov
lods
(bad)
lea
sti
iret
add
jge
repz
stc
mov
pop
test
xchg
add
ins
lds
arpl
(bad)
ret
test
bnd
jae
out
imul
mov
pop
repz
test
ret
xchg
jns
xchg
ret
sbb
loopne
call
mov
xor
mov
data16
test
shl
les
(bad)
int3
pop
gs
mov
or
enter
sub
outs
push
push
ins
lods
mov
xchg
sub
xchg
test
pop
dec
add
out
mov
pop
mov
or
test
scas
cwde
jge
inc
idiv
stc
movs
(bad)
jp
loope
cmps
and
inc
shl
mov
sbb
mov
xor
ss
mov
sbb
mov
sbb
mov
sbb
call
inc
sbb
mov
sbb
mov
sbb
mov
jmp
jb
mov
pop
inc
push
aaa
nop
mov
ds
xchg
mov
ds
outs
sbb
sbb
shl
adc
call
inc
sbb
sbb
shl
adc
mov
sbb
mov
sbb
mov
sbb
mov
xor
ss
mov
sbb
mov
pop
sub
outs
adc
aas
xor
pop
xchg
mov
sbb
xchg
adc
call
adc
inc
ror
xor
sti
xchg
adc
add
mov
sbb
mov
sbb
mov
mov
xchg
cmp
sti
xchg
int3
fild
dec
aas
ss
mov
(bad)
xchg
outs
push
es
mov
aaa
mov
sbb
mov
sbb
xchg
inc
(bad)
enter
aas
nop
mov
out
call
aas
aaa
mov
sbb
mov
sbb
mov
mov
mov
sbb
mov
mov
inc
fwait
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
mov
xor
aad
inc
fdivr
xchg
fwait
sbb
mov
sbb
mov
(bad)
mov
ds
ins
ds
mov
jmp
inc
aad
outs
xchg
mov
adc
call
xchg
mov
and
out
ds
xor
adc
call
jp
rcr
mov
mov
sbb
mov
sbb
xchg
dec
aas
sub
iret
enter
xor
call
nop
mov
es
jbe
mov
mov
sbb
mov
sbb
mov
rcr
aaa
(bad)
mov
cmp
sbb
mov
sbb
xchg
mov
mov
sbb
mov
xchg
xor
xchg
pop
and
mov
sbb
mov
sbb
inc
movs
sub
mov
sbb
mov
(bad)
mov
xchg
mov
sbb
mov
sbb
mov
jmp
mov
xchg
xchg
xor
rcr
inc
adc
adc
call
(bad)
pop
cmp
xchg
push
jbe
jp
rcr
mov
mov
sbb
mov
sbb
push
ss
ss
mov
sbb
mov
sbb
mov
mov
mov
sbb
mov
sbb
imul
pop
fistp
aaa
jp
call
(bad)
jnp
sub
mov
sbb
mov
sbb
mov
sbb
xchg
cmp
xor
mov
ds
jnp
imul
inc
mov
sbb
mov
sbb
mov
sbb
and
sbb
mov
sbb
mov
and
aaa
xchg
mov
sbb
mov
sbb
mov
mov
nop
mov
sbb
mov
sbb
mov
sbb
push
xor
aaa
xchg
mov
sbb
mov
sbb
xchg
mov
sbb
mov
sbb
mov
mov
mov
ds
xchg
fwait
sbb
mov
sbb
mov
sbb
mov
pop
fwait
inc
mov
out
aad
aaa
mov
sbb
mov
sbb
mov
dec
and
call
xchg
fwait
sbb
mov
sbb
mov
sbb
mov
movups
ds
adc
call
or
adc
ds
adc
call
int
sbb
mov
sbb
mov
sbb
mov
sbb
mov
mov
adc
call
pop
fwait
sbb
mov
sbb
jp
rcr
inc
aad
outs
push
sahf
loop
sbb
ss
mov
sbb
outs
mov
sbb
mov
sbb
mov
sbb
int
out
in
aaa
mov
sbb
mov
sbb
mov
and
mov
repz
sbb
mov
sbb
mov
xor
inc
ror
inc
adc
adc
call
jnp
sbb
mov
sbb
mov
sbb
mov
pop
cmps
pop
stos
add
mov
sbb
mov
sub
mov
sbb
mov
sbb
mov
cmp
xchg
ds
xchg
sar
daa
mov
hlt
aaa
jp
cmp
push
push
pop
mov
xchg
fwait
sbb
mov
sbb
mov
sbb
pop
mov
sbb
mov
sbb
pop
xor
adc
call
sbb
ror
mov
sbb
mov
sbb
xor
ds
jp
jmp
inc
lahf
sub
mov
fwait
sbb
mov
sbb
mov
sbb
mov
cmp
pusha
loopne
std
xchg
push
sub
pusha
inc
iret
aaa
pop
mov
ss
adc
mov
mov
sbb
mov
sbb
mov
lahf
leave
mov
fwait
sbb
mov
sbb
mov
sbb
jmp
(bad)
enter
cmp
rol
sbb
mov
sbb
mov
sbb
popa
mov
ds
xchg
dec
shr
mov
aaa
nop
sbb
mov
xchg
mov
ds
lods
popa
mov
mov
sbb
mov
sbb
mov
cmp
xchg
sar
cmp
fisttp
ds
outs
sbb
nop
sbb
mov
mov
sbb
mov
(bad)
xchg
xchg
adc
call
sbb
jno
dec
xchg
push
cs
xchg
push
out
inc
mov
aaa
mov
cdq
xchg
xchg
adc
call
outs
xchg
mov
sbb
call
inc
ret
mov
sbb
mov
sbb
mov
cmp
xchg
sar
cmp
fisttp
ds
outs
sbb
mov
fwait
sbb
mov
sbb
mov
sahf
jecxz
cmps
add
nop
inc
mov
mov
outs
xchg
mov
sbb
call
pop
cmc
dec
mov
call
aaa
xchg
mov
(bad)
out
pusha
mov
pop
inc
push
aaa
nop
mov
ds
nop
mov
aam
mov
out
xchg
outs
xchg
js
sbb
call
outs
inc
cmp
inc
xor
jno
xor
adc
call
mov
aad
outs
xchg
test
sbb
call
inc
vsubss
dec
rcl
call
mov
sbb
jmp
(bad)
enter
adc
inc
lahf
leave
mov
fwait
sbb
mov
sbb
mov
idiv
jne
cmp
mov
aaa
cmc
inc
test
sub
mov
sar
sbb
and
mov
cli
sbb
mov
repnz
sti
sbb
shl
mov
hlt
fwait
daa
xchg
sub
jnp
jo
jge
popa
call
shr
dec
pop
in
stos
dec
lock
xor
pop
in
stos
dec
pop
in
(bad)
pop
inc
adc
xor
ret
aas
outs
jg
pop
lds
stos
ins
jge
jg
push
xor
nop
or
dec
mov
sbb
mov
or
(bad)
mov
imul
bound
into
cmp
push
(bad)
jae
adc
cdq
sbb
or
outs
pop
and
jg
(bad)
ins
jg
lock
push
lea
jg
test
pop
fnstcw
test
jns
(bad)
xchg
imul
ins
jle
clc
fist
sbb
lahf
je
jle
cmp
xchg
test
pop
adc
scas
stos
mov
or
in
mov
cli
mov
hlt
js
jg
or
xor
adc
sub
xchg
test
mov
cmps
retf
js
test
fpatan
imul
xor
sbb
dec
pop
xchg
sbb
cli
arpl
jg
mov
loope
out
cwde
movs
jnp
or
inc
mov
lods
ret
xor
(bad)
mov
add
sbb
popf
cs
lods
ins
jb
add
(bad)
xor
jns
mov
mov
ja
mov
lods
jo
xchg
or
jb
or
cdq
dec
mov
jae
xor
jnp
adc
sbb
fs
(bad)
cli
(bad)
in
mov
(bad)
icebp
cs
add
adc
(bad)
jecxz
(bad)
jecxz
(bad)
(bad)
jne
faddp
(bad)
cli
(bad)
adc
xchg
add
(bad)
jecxz
(bad)
jecxz
fld
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
(bad)
cli
fcmovnb
sub
fcmovnb
cs
pinsrw
in
add
mov
(bad)
sub
(bad)
sub
(bad)
or
sti
cli
(bad)
jne
sub
(bad)
sub
(bad)
sub
sub
icebp
cs
add
pavgw
(bad)
jecxz
(bad)
jecxz
(bad)
xlat
jne
sub
(bad)
sub
(bad)
sub
(bad)
or
sti
cli
cmpnltps
adc
(bad)
dec
(bad)
out
(bad)
jp
sub
in
test
fcomp
sub
(bad)
add
add
sub
(bad)
fsubr
sti
cli
cmovp
push
(bad)
sub
(bad)
sub
(bad)
sub
(bad)
faddp
(bad)
cmp
xchg
loop
dec
inc
and
(bad)
loop
add
pand
sbb
(bad)
jecxz
(bad)
rol
sub
(bad)
sub
(bad)
fsub
femms
(bad)
fdivrp
jmp
mov
pmulhw
fsubr
jecxz
(bad)
loop
sub
sub
(bad)
sub
fnstcw
or
fsubr
jecxz
(bad)
jecxz
(bad)
loop
das
pmaxub
scas
pop
add
xor
shl
jecxz
(bad)
jecxz
cld
mov
lds
scas
or
es
in
call
(bad)
jecxz
(bad)
dec
inc
cmp
(bad)
jecxz
(bad)
jecxz
(bad)
jecxz
sub
ds
sti
sbb
(bad)
sbb
shl
sub
(bad)
sub
(bad)
sub
jno
icebp
cmp
add
sub
(bad)
fmul
add
cli
adc
xchg
sti
pextrw
out
jecxz
(bad)
jecxz
(bad)
jecxz
(bad)
into
(bad)
test
cs
pop
vcvtss2sd
push
loop
pavgw
(bad)
jecxz
(bad)
loop
std
aam
out
popf
rcl
(bad)
jecxz
fst
ds
add
(bad)
sub
(bad)
sub
(bad)
sub
jno
sub
(bad)
sub
(bad)
sbb
fsubr
jecxz
(bad)
jecxz
(bad)
loop
in
mov
jecxz
(bad)
loop
jbe
cs
mov
push
jne
sub
(bad)
sub
(bad)
sub
(bad)
add
add
sub
(bad)
sub
(bad)
sub
sub
jbe
mov
adc
(bad)
add
(bad)
mov
dec
push
(bad)
jecxz
(bad)
jecxz
(bad)
or
mov
(bad)
(bad)
cli
fcmovnb
in
mov
gs
icebp
cs
add
cli
mov
jecxz
(bad)
jecxz
(bad)
loop
std
hlt
jl
adc
add
in
test
fcomp
sub
(bad)
sub
(bad)
sub
jno
icebp
cmp
add
sub
(bad)
sub
(bad)
fsubr
inc
sti
out
add
mov
aad
pusha
dec
(bad)
fsubr
jecxz
(bad)
jecxz
(bad)
ret
push
sub
add
jne
rol
stos
jb
sub
(bad)
sub
(bad)
sub
jmp
(bad)
jecxz
(bad)
loop
jne
(bad)
(bad)
cli
pavgw
(bad)
jecxz
(bad)
jecxz
(bad)
adc
sub
shl
sub
(bad)
sub
(bad)
sub
(bad)
add
cli
pextrw
sub
(bad)
fadd
sub
sbb
jmp
(bad)
cld
xchg
cmp
sbb
icebp
pextrw
or
fistp
jo
or
xchg
pinsrw
(bad)
(bad)
mov
pinsrw
hlt
xor
push
adc
adc
xchg
add
(bad)
jecxz
(bad)
cs
add
imul
sub
sbb
jmp
(bad)
cld
xchg
cmp
sbb
icebp
pextrw
or
add
and
jle
fmul
ficomp
(bad)
hlt
mov
dec
(bad)
cwde
add
adc
mov
sub
fadd
sti
fimul
push
leave
neg
xchg
inc
mov
cmc
fwait
lea
mov
ins
jg
test
test
lea
push
outs
in
enter
mov
cdq
mov
iret
mov
sti
sub
sub
sub
mov
and
fwait
adc
xor
test
sbb
gs
aad
push
ds
pop
mov
call
jle
mov
ss
xchg
test
mov
gs
addr16
cmp
mov
pop
inc
jle
mov
js
test
lods
cmp
lea
rcr
xor
stos
mov
or
push
xchg
mov
imul
mov
xchg
retf
clc
test
arpl
test
xchg
dec
popa
test
ins
in
int
outs
test
pop
arpl
xor
sbb
adc
test
dec
jl
mov
pop
int3
jg
xchg
push
or
or
xor
xchg
and
ins
test
sbb
push
scas
push
xchg
sbb
lahf
jb
imul
test
pop
(bad)
je
jmp
pushf
mov
xor
lods
mov
(bad)
dec
cmp
ins
push
cmp
call
nop
jae
xchg
lods
lea
adc
and
push
adc
and
push
xchg
xchg
mov
test
js
inc
sbb
xchg
xchg
mov
scas
sub
add
inc
outs
pop
xlat
sub
push
jbe
mov
jbe
xchg
sub
xchg
jb
inc
inc
ja
dec
pop
jae
inc
xor
push
(bad)
outs
sbb
xor
jae
ins
pop
pop
fadd
push
jbe
mov
jbe
mov
ja
xor
not
sbb
mov
xchg
push
jbe
mov
ja
mov
lock
xchg
imul
xchg
lahf
lahf
fiadd
lea
std
call
mov
jbe
mov
jbe
mov
jbe
xlat
dec
mov
pusha
mov
jbe
mov
ja
inc
ja
inc
inc
jae
mov
xchg
push
jbe
mov
jbe
mov
ja
pop
js
scas
sbb
mov
repz
lods
sbb
dec
rcr
lods
sbb
mov
mov
inc
inc
sub
fadd
stc
enter
inc
mov
ja
mov
test
jno
sbb
push
mov
aaa
or
inc
cs
jbe
fwait
xchg
shl
jo
pop
push
jle
mov
js
dec
cwde
or
aam
cmp
jmp
xor
cdq
sbb
pop
dec
jl
mov
cli
and
sub
sub
dec
xor
jle
mov
or
sbb
pop
gs
test
jb
jmp
sub
mov
test
inc
mov
add
xchg
lods
into
lea
jg
xchg
adc
lods
or
jl
js
test
or
loope
test
retf
mov
cmp
lea
jle
mov
retf
dec
mov
sti
pop
stos
movs
arpl
xchg
inc
mov
in
int3
jg
test
bound
test
cli
jne
jge
mov
test
or
sbb
in
pusha
or
pop
sbb
xor
or
das
xchg
xor
ja
jno
aas
cmp
xor
sbb
pop
sub
lahf
popf
hlt
retf
pop
adc
mov
add
adc
mul
jg
add
jmp
cmps
int
adc
add
xor
cmps
int
adc
loopne
fisttp
jmp
loop
(bad)
fimul
jmp
loop
mov
or
stos
jo
adc
jb
add
fdiv
pop
jmp
imul
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
fcom
je
in
stos
dec
pop
in
stos
dec
pop
in
add
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
inc
dec
mov
dec
popf
ins
jg
mov
push
imul
mov
in
stos
dec
pop
in
stos
dec
mov
retf
inc
xchg
adc
add
ins
jge
cmp
hlt
retf
ficom
lahf
leave
mov
loopne
addr16
cli
stos
push
lea
sahf
in
xchg
imul
cld
mov
mov
pop
jle
mov
cwde
add
enter
sbb
cwde
push
call
retf
fwait
inc
adc
mov
jmp
jns
test
lock
inc
mov
dec
cmc
data16
lods
pusha
lea
xchg
mov
ds
mov
in
mov
mov
or
lea
pop
gs
div
(bad)
int3
jg
test
inc
push
sti
jne
jle
pop
push
fmul
mov
mov
xor
test
or
jb
jae
sub
add
hlt
mov
sub
jge
mov
fbld
retf
cli
fstp
ret
add
mov
or
xchg
outs
jg
clc
ins
sub
jp
sbb
cld
xchg
js
test
or
pop
gs
mov
retf
fwait
clc
mov
pop
aaa
clc
mov
pop
push
add
shl
xor
sbb
into
pop
pop
or
cdq
or
mov
or
dec
cmp
sub
mov
jno
ins
imul
not
ds
shr
jo
add
push
ins
dec
mov
pop
cmps
add
mov
imul
push
cmp
cmp
imul
imul
push
cmp
imul
push
xchg
inc
imul
imul
cmp
dec
imul
imul
imul
mov
cmps
imul
imul
pop
mov
push
js
push
sub
pop
imul
imul
mov
push
js
push
js
dec
out
dec
cmps
sub
dec
dec
loop
mov
sbb
shl
dec
imul
imul
pop
pop
xchg
outs
imul
imul
pop
(bad)
cld
js
push
js
push
js
mov
cmps
mov
cld
mov
mov
mov
imul
push
or
push
imul
imul
imul
imul
imul
imul
pop
push
cmp
push
js
rcl
dec
mov
pop
cmps
or
jl
dec
mov
cmps
cwde
dec
loop
shl
nop
pop
imul
imul
imul
call
js
push
js
push
js
pop
xchg
mov
push
js
push
js
push
js
(bad)
in
js
push
js
push
js
push
mov
mov
cmps
hlt
mov
mov
mov
push
xchg
aam
dec
sbb
dec
imul
imul
imul
(bad)
ins
cmp
push
js
push
js
push
pop
imul
imul
pop
(bad)
int3
js
push
js
push
js
dec
out
dec
mov
hlt
js
push
js
push
js
pop
out
imul
push
or
mov
cmp
push
js
push
mov
mov
hlt
mov
mov
mov
imul
push
jecxz
movs
push
xchg
scas
pushf
lock
dec
imul
imul
imul
aad
imul
imul
imul
imul
xchg
dec
idiv
pushf
dec
sbb
dec
cdq
sbb
cmps
movs
jecxz
cli
and
js
push
js
dec
sbb
dec
cdq
sbb
cmps
lods
jecxz
cli
and
js
push
js
push
and
sbb
xlat
push
cmp
push
js
push
aam
push
js
push
js
push
dec
(bad)
popf
cmp
push
js
iret
repz
(bad)
cmp
imul
imul
imul
imul
push
popf
cmp
pop
scas
js
push
js
mov
cld
js
push
js
push
js
push
cmp
sub
pop
xor
sbb
mov
push
(bad)
adc
mov
pop
imul
imul
imul
pop
jb
js
push
js
push
push
mov
jecxz
imul
push
punpckldq
cmp
push
aam
inc
fmulp
dec
mov
loop
mov
out
dec
cmps
jb
pop
(bad)
sar
push
js
push
js
push
dec
cmps
pop
cmp
push
js
push
ror
sbb
dec
cmp
push
js
das
adc
dec
sbb
dec
cmp
mov
push
js
push
js
push
dec
xlat
ins
cmp
push
js
push
js
pop
cmp
push
js
mov
movs
gs
add
dec
sbb
pop
pusha
cmp
push
js
push
js
(bad)
or
imul
imul
dec
imul
imul
push
mov
imul
push
or
pop
imul
push
cmp
pop
sub
push
js
sub
cld
into
out
or
push
js
push
js
push
js
(bad)
or
imul
imul
imul
jg
cmp
push
js
pop
mov
imul
imul
imul
pop
(bad)
or
imul
imul
push
cmp
pop
pop
jns
push
js
push
js
(bad)
sbb
pop
dec
xchg
pop
pop
mov
push
js
push
js
cmp
inc
inc
(bad)
mov
dec
dec
or
push
js
push
aam
imul
push
cmp
pop
sbb
js
push
js
push
dec
loope
cmp
push
js
test
push
js
dec
test
jnp
cmp
push
js
push
cmp
out
lahf
cmp
out
lahf
cld
pop
pusha
cmp
push
js
(bad)
or
imul
imul
imul
jg
cmp
push
js
pop
mov
imul
imul
pop
(bad)
or
imul
imul
push
cmp
pop
pop
jns
push
js
push
in
dec
ror
push
imul
imul
imul
push
in
inc
inc
out
loop
mov
out
dec
cmps
js
cmps
pop
cmp
push
js
push
js
pop
adc
push
js
dec
xchg
pop
ds
sbb
dec
imul
push
cmp
dec
dec
lahf
pop
cmp
add
test
xchg
push
cld
mov
add
push
sub
stos
(bad)
dec
jle
mov
xchg
pop
popf
shr
mov
(bad)
dec
int3
add
sbb
jp
sbb
retf
mov
ja
pop
jns
aad
ins
jle
mov
sbb
mov
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
push
retf
and
cmc
retf
push
ins
(bad)
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
div
arpl
jb
xor
pop
test
outs
cdq
fisubr
dec
cmp
je
fwait
dec
fmul
mov
(bad)
das
lahf
scas
cld
lea
imul
test
imul
mov
out
nop
xchg
jb
in
mov
ins
jg
cli
pop
daa
and
jb
xchg
jmp
xlat
mov
inc
test
je
push
xchg
test
mov
test
out
movs
mov
mov
pop
(bad)
cli
inc
push
jno
dec
mov
outs
hlt
retf
clc
ins
inc
aam
mov
sbb
cli
sbb
sbb
(bad)
pop
sbb
test
pop
adc
mov
sbb
sub
mov
clc
addr16
jl
jno
mov
test
ret
jns
xchg
lods
ret
ss
bound
hlt
retf
cld
xchg
xor
shl
mov
or
ins
dec
mov
jg
pusha
shr
xor
pushf
arpl
sti
mov
push
jb
or
xchg
lock
retf
sub
retf
cli
mov
imul
ins
or
sbb
test
gs
xor
pop
jge
mov
or
inc
xor
out
xor
push
jle
cdq
test
(bad)
mov
mov
or
ins
ss
outs
fwait
cmps
repnz
mov
adc
mov
inc
data16
inc
push
aas
aaa
out
inc
mov
inc
data16
inc
data16
inc
inc
xor
fs
inc
data16
inc
data16
fwait
push
inc
call
data16
inc
data16
inc
inc
aaa
mov
inc
xor
fs
inc
data16
inc
data16
fwait
push
inc
call
data16
inc
data16
inc
rcr
inc
data16
inc
data16
inc
push
getsec
out
inc
mov
inc
data16
jmp
aaa
fs
mov
inc
data16
inc
popw
cmp
inc
sbb
gs
nop
aaa
inc
data16
inc
data16
inc
inc
mov
inc
lock
gs
nop
xor
inc
aaa
fwait
push
pop
call
data16
inc
data16
pop
fs
inc
data16
inc
data16
inc
xchg
adc
and
push
pusha
xchg
nop
leave
dec
(bad)
mov
inc
data16
inc
data16
inc
push
out
out
inc
mov
inc
data16
inc
inc
mov
inc
lock
gs
nop
aaa
inc
inc
inc
aaa
fwait
push
pop
call
data16
inc
data16
inc
data16
dec
fs
inc
data16
inc
data16
inc
xchg
adc
and
pop
fs
nop
leave
dec
(bad)
mov
inc
data16
inc
data16
jecxz
sbb
inc
data16
inc
inc
mov
inc
lock
gs
nop
xor
inc
aaa
fwait
push
pop
call
data16
inc
data16
and
nop
mov
inc
data16
gs
nop
aaa
call
addr16
dec
aaa
std
mov
inc
data16
inc
data16
inc
add
aaa
out
inc
mov
inc
data16
inc
xchg
inc
fs
mov
mov
call
adc
mov
outs
fwait
nop
mov
gs
repnz
outs
pop
xchg
mov
addr16
outs
setae
mov
nop
out
xor
pop
jmp
sub
dec
pop
in
stos
dec
pop
pusha
call
in
stos
dec
(bad)
out
push
inc
xor
stos
dec
pop
in
stos
dec
push
in
stos
dec
pop
in
stos
dec
pop
fcom
xchg
pop
in
stos
dec
pop
in
stos
dec
pop
in
pop
ins
je
mov
sub
mov
retf
cmp
dec
nop
(bad)
jns
retf
mov
in
stos
dec
pop
in
stos
(bad)
clc
ins
and
cmp
in
stos
dec
pop
fmul
icebp
fst
dec
pop
in
stos
dec
pop
in
stos
jnp
sub
lods
sub
pop
in
stos
dec
pop
in
stos
jnp
adc
in
stos
dec
pop
and
jnp
in
stos
dec
pop
in
stos
dec
pop
in
stos
mov
push
in
stos
dec
imul
dec
pop
in
stos
dec
pop
in
fwait
lds
jmp
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
fwait
in
shr
dec
fcomp
das
fcmovnu
push
das
(bad)
test
lea
stos
dec
pop
in
stos
dec
pop
in
arpl
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
imul
dec
pop
in
arpl
or
dec
xchg
fld
or
je
leave
adc
fcmovu
add
in
stos
dec
pop
jbe
call
cmps
int3
push
gs
jb
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
jl
dec
data16
retf
sub
ret
fs
leave
mov
inc
dec
mov
sub
xchg
jl
outs
lds
cmp
cmp
push
outs
cwde
cmp
ins
jle
cli
xor
mov
cmp
or
ins
xor
jg
movs
push
call
aam
aas
pop
ds
repnz
(bad)
jmp
retf
mov
not
lods
pusha
lea
push
addr16
retf
cli
xchg
hlt
ret
iret
sbb
add
js
cmp
sbb
ins
jle
clc
sbb
test
or
pop
or
ret
xor
mov
dec
data16
retf
sub
ret
ret
push
dec
jp
cmp
jae
or
sahf
xchg
sbb
sub
pop
cdq
lods
jmp
xor
bound
mov
test
sti
scas
or
jae
shr
xchg
xor
pushf
xor
xchg
test
or
test
jo
lods
push
jb
or
dec
cmp
pop
ror
and
pop
mov
(bad)
fstp
mov
sbb
mov
cld
stos
sbb
retf
pop
xchg
test
mov
sbb
mov
js
test
lods
jnp
cwde
lods
xor
or
pop
push
xor
int3
push
movs
xchg
or
jg
mov
sbb
jle
adc
jge
adc
pop
pop
jmp
mov
pop
jg
adc
xchg
jo
leave
pop
pop
stc
cs
in
xor
xor
pop
jg
adc
test
cmp
adc
ins
movs
xor
pop
jg
adc
pop
jg
fst
xor
pop
jg
xor
pop
jmp
push
jmp
jg
adc
pop
jg
and
adc
pop
jg
adc
jle
xchg
aaa
or
(bad)
fbstp
cmp
das
pop
jmp
push
jmp
jg
adc
pop
jg
adc
pop
jg
xor
or
(bad)
jg
cmp
dec
pop
jmp
retf
and
jg
adc
pop
mov
jmp
xor
mov
xor
pop
jg
aad
(bad)
and
cmp
imul
jge
pop
in
aam
inc
loope
or
xchg
movs
in
int
push
sar
lock
fist
mov
push
iret
cmp
pop
jo
adc
ds
ret
cmps
in
jne
push
cwde
xor
dec
pop
fadd
sti
cli
mov
push
or
ins
inc
stos
mov
ret
sbb
gs
mov
ins
or
pop
mov
imul
jne
cdq
jl
mov
std
xchg
retf
mov
inc
add
enter
ins
jbe
cwde
adc
push
data16
sbb
cmps
push
clc
test
xchg
pop
ds
ret
dec
sti
jne
sar
cmp
xchg
or
or
test
xor
fstp
jbe
inc
or
cmp
ins
jg
lock
sbb
push
sbb
jle
push
mov
push
xor
push
jle
mov
imul
fadd
test
cdq
lock
cmc
retf
mov
jnp
cli
loope
repz
pusha
xor
xchg
test
cld
xchg
xor
out
scas
fcomp
ja
int
test
mov
lods
xor
test
test
pop
in
or
in
mov
pop
jg
push
popa
retf
add
pop
or
int3
jg
test
pop
scas
or
sbb
mov
cwde
test
stc
leave
mov
jo
jb
pop
fiadd
xor
sbb
into
or
nop
mov
xor
jecxz
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
jmp
loopne
inc
mov
popf
sbb
int3
cmp
ror
cmp
loope
cmp
ror
cmp
ror
imul
ror
cmp
sar
lock
cmp
lock
(bad)
aaa
repz
int
sbb
xchg
in
hlt
jmp
ror
paddsw
int3
cmp
ror
cmp
ror
sbb
imul
loopne
(bad)
jecxz
out
adc
lock
push
imul
cmp
ror
cmp
ror
cmp
ror
cmp
xchg
jns
jmp
ror
cmp
ror
cmp
shl
jo
hlt
cld
mov
ror
cmp
ror
cmp
ror
cmp
xor
cwde
test
int3
cmp
ror
cmp
ror
lahf
aas
out
jmp
xchg
sbb
add
idiv
cmp
ror
cmp
pop
mov
(bad)
ror
cmp
ror
cmp
ror
cmp
mov
pusha
jbe
cmc
jle
cld
dec
or
and
popa
sbb
cld
mov
ins
adc
adc
das
out
sbb
loope
xor
dec
pop
or
dec
pop
in
stos
dec
pop
pop
or
retf
mov
mov
neg
inc
mov
or
mov
out
xchg
pop
jg
test
jl
mov
jle
imul
jns
cdq
jl
xchg
mov
jle
mov
push
shl
cmps
mov
mov
add
cmp
addr16
(bad)
push
jae
fwait
int
gs
test
xchg
mov
mov
inc
mov
pop
pop
sbb
pop
outs
jle
mov
ret
pusha
inc
mov
xchg
retf
push
mov
jle
mov
mov
jle
icebp
mov
in
pusha
or
mov
daa
mov
or
cs
test
retf
mov
jne
xchg
out
xchg
pop
jle
pop
sbb
loop
ins
jle
push
or
(bad)
xchg
push
sbb
mov
hlt
retf
cld
xchg
xor
mov
inc
test
ret
aam
js
jg
jg
pusha
ror
xor
mov
jge
or
xor
loope
je
outs
cwde
fcom
addr16
outs
fwait
mov
ins
xchg
cmps
aaa
inc
loope
test
inc
xor
popa
mov
cdq
mov
loopne
repz
mov
push
push
cmps
rcl
movs
sbb
in
push
add
mov
add
inc
mov
xor
sub
or
loop
pop
mov
pop
sub
ret
cdq
and
pop
cld
in
jg
cld
in
jg
cld
in
arpl
imul
jg
cld
in
jge
cld
in
cdq
push
mov
in
cdq
mov
inc
daa
gs
aad
loopne
inc
ret
xor
xor
pusha
dec
cwde
mov
cmp
outs
les
xchg
inc
xor
push
and
test
xor
bound
inc
loopne
mov
jno
jl
bound
sub
loopne
mov
lods
mov
daa
popa
aam
daa
pusha
fs
test
cmp
bound
inc
ret
inc
cld
outs
add
test
cmp
(bad)
les
movs
lods
(bad)
daa
pusha
pop
cwde
mov
loopne
xchg
inc
and
jp
cwde
xchg
loope
es
inc
cmp
pusha
dec
cwde
test
loope
add
add
pop
add
jnp
aas
jmp
fidivr
fsub
gs
fcomp
mov
(bad)
pop
mov
mov
cwde
jl
mov
add
pop
scas
mov
jge
je
imul
in
iret
pop
in
iret
sbb
aas
iret
adc
sbb
pop
in
iret
add
out
inc
mov
in
into
loope
and
loopne
sbb
adc
cld
es
ds
gs
and
fs
cwde
test
xor
pusha
add
mov
loopne
mov
bound
outs
loopne
cdq
push
loopne
pop
dec
cmp
ins
fs
xchg
xor
daa
push
cwde
xchg
pop
add
xchg
loopne
ret
ret
inc
add
push
sbb
dec
xchg
lods
cwde
test
dec
cwde
test
cmp
jp
cwde
xchg
lods
(bad)
daa
bound
xchg
inc
and
jp
cwde
xchg
sbb
inc
mov
xor
daa
pusha
pop
cwde
sahf
out
cmp
ret
popf
cdq
pop
mov
aas
push
ins
and
daa
fs
cwde
add
cwde
xor
cwde
xchg
dec
cwde
xchg
xchg
add
outs
loopne
add
mov
in
add
push
dec
cmp
mov
ret
sub
movs
inc
arpl
movs
and
or
sbb
xchg
cmp
addr16
pushf
jge
mov
sbb
arpl
movs
inc
push
inc
mov
iret
cmp
inc
arpl
movs
inc
arpl
cwde
or
and
and
inc
cmp
inc
arpl
movs
inc
arpl
movs
inc
arpl
movs
mov
cmp
movs
inc
arpl
push
out
cmp
inc
in
sub
push
mov
or
cmp
inc
arpl
movs
inc
add
sahf
in
inc
sbb
inc
xor
sub
add
movs
inc
arpl
clc
pop
pop
mov
inc
arpl
movs
inc
arpl
call
add
dec
xor
inc
cmp
inc
arpl
movs
inc
arpl
movs
inc
arpl
push
adc
inc
arpl
movs
inc
arpl
movs
inc
arpl
or
sti
cmp
mov
pop
mov
add
inc
pop
mov
(bad)
jl
add
sahf
in
inc
shl
or
dec
pop
dec
dec
outs
add
jnp
jl
aad
retf
jl
mov
jg
rep
sub
(bad)
mov
shl
pop
xchg
imul
js
pop
retf
or
cmp
lea
rcl
xor
data16
jns
lods
mov
pop
push
jle
mov
ret
push
into
jg
iret
loop
ins
test
mov
jle
mov
or
fwait
lods
inc
lea
pop
or
popa
xor
sar
sub
sbb
sub
(bad)
xchg
int3
mov
pop
cdq
in
sbb
call
je
imul
sti
push
js
jge
(bad)
mov
pop
xor
loop
ins
or
sub
mov
sti
movs
je
jle
inc
int
gs
pop
pushf
(bad)
int3
pop
or
arpl
xor
pusha
or
cmp
xchg
pop
ficom
inc
xchg
inc
mov
cmp
lea
jmp
ja
lods
adc
xchg
or
and
mov
pusha
or
add
out
pusha
mov
sti
xchg
xor
arpl
mov
jb
or
lea
bound
int
cmp
mov
xchg
fbstp
sub
mov
mov
mov
in
clc
outs
and
dec
or
mov
mov
inc
pop
aaa
mov
rol
sub
stc
lock
in
stc
mov
test
outs
lods
(bad)
clc
push
inc
outs
outs
cmps
aam
sub
xchg
mov
sub
sbb
xor
fidiv
adc
dec
mov
retf
es
enter
inc
mov
data16
test
pushf
lea
aam
iret
xchg
(bad)
mov
xchg
jge
popf
jo
cmp
add
mov
push
mov
push
xchg
jne
call
push
mov
xor
xchg
add
push
cs
addr16
jae
or
into
mov
loope
and
stc
jne
push
jne
jecxz
mov
cli
xor
pop
(bad)
leave
mov
rcr
sbb
ins
jle
pop
mov
loope
jg
test
je
gs
js
test
ret
inc
and
inc
cmc
retf
cli
and
cmc
int
outs
popa
rol
cdq
or
inc
mov
test
mov
or
mov
sbb
imul
pop
(bad)
(bad)
push
inc
mov
test
clc
aas
nop
mov
out
mov
xor
(bad)
test
std
xchg
xor
cmps
mov
cli
int
sbb
popa
dec
stc
mov
bound
push
inc
mov
cmp
xchg
lods
jo
xchg
cmp
test
jbe
jge
test
(bad)
jge
or
js
stos
cmp
pushf
dec
int3
sbb
fwait
cmp
mov
mov
sti
xor
pop
jno
mov
and
sub
jno
mov
ja
push
int
jno
xchg
push
scas
xchg
outs
or
mov
mov
mov
xchg
movs
mov
jecxz
imul
pop
mov
push
scas
xchg
mov
(bad)
lock
jno
push
imul
jo
jge
mov
add
retf
add
ja
push
int
jno
xchg
push
pop
hlt
pop
jno
push
imul
jo
jns
mov
add
retf
add
ja
push
int
jno
xchg
push
scas
xchg
xchg
mov
mov
scas
push
mov
mov
jmp
sub
scas
push
scas
xchg
xchg
add
ja
(bad)
inc
add
xchg
add
ja
inc
add
sbb
scas
xchg
push
pop
mov
mov
jbe
mov
sbb
add
sbb
scas
xchg
sbb
add
sbb
scas
xchg
push
scas
xchg
jp
mov
jno
mov
jo
ret
jmp
lods
mov
jno
stos
and
mov
add
lea
ja
neg
mov
xor
dec
lds
ins
jl
inc
pop
hlt
retf
fadd
cmp
mov
mov
inc
retf
mov
jge
jmp
mov
pop
mov
loope
inc
xor
add
jp
mov
and
jle
and
in
adc
pop
and
adc
fldcw
xor
cmp
ja
pop
ins
or
frstor
(bad)
sbb
(bad)
jns
(bad)
xchg
cmp
mov
sbb
or
cmp
inc
imul
xbegin
mov
icebp
ds
test
out
(bad)
xor
test
ja
std
mov
cmp
js
test
jns
xchg
lods
ret
adc
jb
mov
jbe
or
xor
enter
shl
dec
inc
mov
xor
xchg
or
xchg
jle
fld
ret
xor
jne
mov
inc
jg
sub
jae
or
repz
jle
pop
ret
jl
sti
mov
ret
xchg
jl
in
pop
cmp
and
mov
adc
cmp
mov
fisubr
dec
or
repnz
mov
mov
not
ret
pop
mov
(bad)
shl
mov
neg
ret
out
push
and
xchg
mov
xor
lods
mov
test
test
mov
mov
not
dec
pop
mov
mov
push
and
xchg
mov
not
jmp
xchg
mov
not
lods
mov
not
or
mov
test
repz
mov
mov
not
cmps
test
mov
ret
and
xchg
mov
xchg
repz
or
xchg
mov
test
adc
mov
not
retf
push
stos
jno
pop
scas
add
jae
jmp
cmp
mov
xchg
push
and
xchg
mov
mov
xchg
mov
xchg
mov
not
out
xor
cmp
mov
not
and
xchg
out
xor
cmp
mov
fimul
xor
mov
mov
not
jmp
xchg
mov
div
sbb
mov
mov
not
dec
or
xchg
mov
not
and
xchg
mov
mov
xchg
mov
not
xchg
jmp
mov
aas
jae
and
cmp
mov
push
and
xchg
mov
(bad)
mov
stos
mov
and
xchg
mov
div
lods
ret
and
xchg
mov
pop
mov
stos
or
mov
out
mov
iret
mov
test
mov
ja
dec
push
ret
in
test
mov
lods
jmp
mov
pop
hlt
retf
cmp
dec
leave
mov
push
lods
cmp
clc
mov
push
bound
dec
inc
(bad)
xchg
or
jge
test
imul
aad
xchg
scas
mov
add
je
fwait
mov
out
mov
jl
daa
pop
jae
hlt
jbe
sbb
(bad)
aaa
jle
mov
sub
lea
cmp
retf
cli
mov
adc
cli
pop
js
jl
push
retf
or
mov
mov
bnd
jbe
jae
mov
test
mov
jg
xchg
sbb
xor
xchg
sub
test
mov
ror
or
pop
gs
pushf
sbb
jmp
pop
and
test
stc
cmp
stos
sbb
xor
test
cdq
xchg
xor
xchg
add
inc
mov
mov
sti
mov
and
test
mov
and
and
fwait
test
pop
mov
cmp
xor
inc
nop
hlt
mov
int3
xchg
cmp
pusha
mov
mov
jno
xchg
popf
popa
mov
mov
pusha
mov
mov
ins
in
std
adc
cmp
pusha
mov
mov
inc
xchg
push
mov
pusha
mov
mov
adc
cmp
pusha
xor
mov
pusha
mov
mov
movs
push
push
mov
pusha
mov
mov
push
pop
popf
inc
mov
mov
pusha
mov
mov
adc
cmp
push
pop
popf
inc
mov
mov
pusha
mov
mov
call
cmp
sub
popf
popa
mov
mov
push
push
es
pusha
mov
fdivp
jo
popf
popa
mov
mov
push
push
jle
pusha
mov
mov
pusha
sbb
push
popf
popa
mov
mov
pusha
mov
xor
cmp
dec
and
pop
mov
pusha
mov
mov
inc
addr16
jno
adc
pop
add
std
adc
cmp
pusha
mov
xchg
inc
mov
popf
inc
cdq
js
retf
xchg
adc
addr16
push
(bad)
mov
pusha
mov
mov
movs
push
push
mov
pusha
mov
mov
stos
cmp
pusha
mov
mov
inc
xchg
pop
repnz
push
push
mov
pusha
adc
pusha
mov
cli
movs
push
push
mov
pusha
adc
pusha
mov
adc
shl
mov
adc
push
mov
pusha
mov
mov
mov
nop
sahf
jae
aad
jle
xchg
cmp
push
push
ds
pusha
mov
mov
retf
xchg
cmp
pusha
mov
adc
cmp
pusha
jecxz
mov
pusha
mov
mov
inc
cdq
js
retf
xchg
or
pop
mov
mov
pusha
mov
mov
ins
sbb
lahf
lods
mov
pushf
dec
xchg
push
mov
pusha
mov
mov
inc
call
pusha
mov
mov
retf
xchg
or
outs
mov
mov
retf
pushf
addr16
push
mov
pusha
mov
mov
movs
pop
push
fwait
dec
vmovupd
xchg
test
cmp
inc
jmp
sbb
gs
xchg
inc
xchg
cmp
pusha
mov
mov
dec
xchg
push
mov
pusha
mov
mov
dec
std
std
adc
adc
movs
pop
push
(bad)
mov
pusha
mov
mov
addr16
mov
pusha
mov
in
lahf
inc
xchg
cmp
and
icebp
jp
pop
pop
pushf
inc
xchg
or
push
mov
mov
cmp
std
adc
cmp
pusha
mov
mov
pop
icebp
js
and
imul
mov
jb
xor
pusha
mov
mov
pusha
push
nop
pop
xor
cmc
xor
cdq
(bad)
stos
int3
xchg
test
xchg
add
and
xchg
jl
aad
xchg
popf
and
xchg
into
sub
ins
loope
or
xchg
popf
lods
sahf
sub
or
cmp
sbb
jg
test
jbe
test
jle
jne
sti
xor
aaa
push
jnp
call
bound
je
inc
retf
or
push
mov
and
sbb
push
nop
or
lods
mov
xchg
pop
cmp
lods
dec
lea
jg
xchg
mov
xlat
jo
jnp
or
fld
enter
pop
cld
xchg
xor
add
or
mov
sub
ret
ror
jge
mov
jbe
test
cli
shr
sbb
pop
pop
js
test
sahf
dec
mov
sbb
adc
popf
or
sbb
cli
inc
addr16
jnp
test
inc
test
pop
ret
cld
xchg
test
retf
mov
lods
add
sub
mov
jns
xchg
or
xchg
test
pop
jg
aad
add
ror
sar
test
sti
arpl
jp
jns
pop
ins
lods
js
xchg
add
out
je
mov
dec
and
mov
sub
aad
ds
cmp
ins
ds
push
push
in
outs
xchg
aas
push
jae
(bad)
add
sbb
mov
mov
xchg
push
sub
sbb
mov
lea
aas
mov
jbe
push
add
mov
(bad)
push
add
sbb
mov
mov
mov
xchg
push
sbb
sbb
fnstenv
push
adc
sbb
mov
lea
add
sbb
mov
jae
add
sbb
mov
(bad)
push
add
sbb
mov
sbb
fnstenv
push
popa
push
add
fnstenv
push
inc
push
add
mov
adc
mov
jbe
push
add
mov
jae
add
sbb
mov
(bad)
push
add
sbb
mov
mov
mov
xchg
push
pop
push
add
mov
adc
fnstsw
lea
sbb
stos
jp
aas
mov
sbb
stos
cmp
xchg
or
cmp
mov
into
rcr
push
push
add
mov
sbb
add
sbb
mov
jae
add
sbb
mov
(bad)
push
add
sbb
mov
sbb
mov
inc
adc
mov
jle
mov
out
push
mov
mov
pop
jns
dec
jb
push
repz
sbb
mov
dec
stc
enter
inc
mov
outs
mov
mov
add
sbb
or
fild
xor
jle
mov
sbb
inc
scas
jne
call
das
(bad)
xor
xchg
test
sbb
xchg
lods
ror
test
pop
pop
jg
mov
mov
add
les
sahf
lods
fmul
ins
jg
(bad)
cdq
jle
mov
sbb
mov
ja
pop
or
test
push
enter
sbb
jmp
mov
jg
test
or
nop
scas
fist
jle
mov
test
addr16
inc
sub
out
pusha
or
test
mov
add
and
xchg
sbb
test
mov
mov
cwde
(bad)
(bad)
js
mov
test
call
cmp
in
sbb
xchg
xor
jb
gs
xor
sbb
icebp
pop
ins
test
(bad)
mov
or
je
enter
cwde
jl
mov
ficom
mov
mov
scas
add
int
inc
pop
inc
sub
cwde
int
add
int
mov
jmp
fnstenv
int
add
pop
mov
add
cmps
adc
add
int
add
in
jg
imul
imul
int
add
in
loop
jbe
mov
pop
imul
jmp
add
int
add
int
add
test
(bad)
sbb
scas
add
int
add
int
add
ror
(bad)
sbb
scas
add
int
add
out
add
int
add
hlt
or
in
scas
add
ins
add
int
add
test
(bad)
sbb
scas
add
lock
(bad)
sbb
scas
add
int
ds
add
ret
lock
sbb
call
int
add
lock
(bad)
sbb
scas
add
lock
(bad)
sbb
fidivr
and
add
xchg
scas
add
int
add
or
popf
in
xor
inc
imul
int
add
int3
imul
data16
add
scas
add
int3
scas
add
cdq
add
int
add
out
mov
cmp
add
xchg
dec
jo
jb
scas
add
int
and
retf
sahf
pop
cmp
add
mov
scas
add
int3
scas
add
jmp
pop
and
add
mov
xchg
mov
mov
fsubr
sahf
dec
imul
and
int
add
ror
mov
scas
add
int3
fisttp
imul
and
in
scas
add
int
add
loopne
(bad)
sbb
mov
int
add
js
test
mov
scas
push
xchg
hlt
cmp
mov
xchg
nop
ss
sbb
mov
jae
outs
(bad)
sbb
scas
add
int
and
mov
scas
add
int
add
imul
int
add
jmp
xchg
add
in
add
mov
xlat
or
test
int
add
int
add
jmp
add
int
sub
out
pop
add
push
imul
int3
scas
jae
in
pop
sub
test
scas
add
int
add
int
add
int
and
loop
cmps
pushf
popf
sbb
lahf
xor
adc
dec
and
jb
push
(bad)
cmp
test
cmc
add
sub
inc
pop
jmp
inc
add
xor
je
test
int
add
int3
scas
and
int3
imul
mov
or
mov
scas
add
int
add
int
add
add
scas
add
nop
es
sbb
scas
add
nop
scas
(bad)
sbb
ficomp
or
pop
call
mov
fsubr
sub
loopne
(bad)
sbb
and
je
test
ret
dec
and
cli
or
test
xchg
cmc
adc
adc
stos
sahf
mov
and
xchg
hlt
jmp
mov
inc
lahf
lods
iret
scas
xchg
cmp
(bad)
shl
hlt
dec
mov
dec
pop
dec
(bad)
pop
xor
sbb
outs
jg
pop
gs
pop
ins
jge
repz
or
cli
add
outs
call
cmp
sbb
mov
or
imul
js
repnz
xchg
jge
mov
cdq
xchg
xchg
jae
or
cwde
sbb
lods
mov
cmp
loopne
icebp
(bad)
int3
pop
gs
pop
mov
scas
test
test
mov
jle
mov
and
xchg
stc
sbb
(bad)
test
stc
mov
mov
data16
or
mov
out
ins
mov
jg
mov
sub
retf
mov
inc
retf
pop
push
or
daa
and
sbb
mov
xchg
test
mov
lods
mov
xchg
test
inc
mov
jle
cli
imul
mov
cmp
inc
data16
bswap
pop
gs
add
jmp
sub
imul
je
hlt
dec
stc
xchg
add
jb
bnd
or
ret
push
js
jle
retf
xchg
xor
or
iret
fs
pop
pop
xor
cdq
and
test
imul
and
sub
mov
add
test
mov
jecxz
iret
inc
inc
cmp
inc
pop
dec
adc
pop
dec
adc
pop
dec
adc
fild
pop
stc
xchg
(bad)
jecxz
and
inc
pop
dec
adc
pop
je
add
xor
dec
adc
pop
dec
adc
xlat
mov
loop
push
addr16
fisub
mov
mov
inc
pop
dec
mov
inc
pop
dec
adc
pop
js
gs
dec
adc
pop
dec
adc
aas
pusha
mov
jo
in
jmp
dec
adc
pop
dec
adc
xor
dec
adc
pop
dec
mov
inc
pop
dec
adc
pop
dec
adc
aas
pusha
mov
cwde
push
in
jmp
xor
or
adc
imul
pop
dec
adc
xlat
mov
sbb
xor
push
dec
adc
pop
dec
adc
pop
dec
xchg
mov
jl
call
pop
dec
adc
pop
dec
adc
pop
out
loope
dec
adc
pop
dec
adc
pop
dec
adc
aas
pusha
mov
and
sbb
inc
pop
dec
adc
outs
popa
cmp
or
mov
inc
pop
dec
adc
sub
retf
inc
pop
dec
adc
pop
dec
adc
mov
call
pop
dec
adc
pop
cmp
mov
add
aaa
mov
jmp
mov
sbb
xchg
int3
and
sbb
inc
pop
dec
mov
inc
pop
dec
adc
xor
inc
jmp
popa
int
mov
mov
test
mov
inc
pop
dec
adc
pop
dec
fs
out
mov
jmp
dec
adc
pop
dec
adc
mov
in
jmp
dec
adc
pop
dec
adc
pop
dec
adc
pop
stos
sub
ret
xor
dec
adc
pop
dec
adc
pop
test
ja
dec
adc
pop
dec
adc
pop
dec
adc
mov
sbb
les
imul
call
popa
mov
ins
and
mov
xor
ret
and
cmp
xor
sub
mov
jb
ins
jg
test
mov
mov
(bad)
sbb
jne
call
mov
call
ins
jg
add
inc
out
cmp
aad
ins
or
nop
mov
in
fist
xchg
lods
nop
lea
cmp
retf
clc
arpl
mov
mov
test
add
mov
and
in
mov
pop
ins
jns
(bad)
xchg
into
sbb
jmp
adc
or
sbb
sub
xchg
or
mov
mov
sub
pop
icebp
or
out
sbb
jge
sbb
cli
cmp
repz
push
cmp
mov
jg
cli
(bad)
in
jno
push
dec
stc
and
sbb
(bad)
cli
out
lea
hlt
retf
cli
jg
test
jae
test
inc
mov
push
mov
add
pushf
pop
ins
fwait
xor
jb
or
cs
pop
gs
mov
adc
mov
shl
xchg
dec
xor
mov
pusha
rcr
fsubrp
jo
sub
pop
aam
ds
imul
fwait
jmp
outs
imul
(bad)
jmp
sub
shr
(bad)
jmp
retf
add
(bad)
jmp
adc
int3
fmul
jmp
dec
shr
(bad)
dec
std
jge
pop
sbb
imul
(bad)
jmp
mov
shr
(bad)
jmp
dec
mov
sbb
imul
(bad)
jmp
dec
shr
(bad)
stos
pop
sbb
int3
(bad)
outs
shr
(bad)
jmp
dec
shr
(bad)
sub
jmp
(bad)
icebp
adc
dec
jmp
dec
shr
(bad)
(bad)
int3
fmul
jmp
dec
shr
(bad)
jmp
gs
sbb
imul
(bad)
jmp
dec
shr
(bad)
inc
cmc
mov
test
dec
shr
(bad)
jmp
dec
rcr
add
or
sbb
jp
fmul
jmp
dec
shr
(bad)
xor
mov
int3
(bad)
outs
shr
(bad)
jmp
adc
mul
out
nop
popf
pushf
push
jecxz
sbb
nop
popf
xchg
push
jecxz
shl
test
cmc
ret
(bad)
outs
shr
(bad)
jmp
dec
shr
(bad)
imul
jmp
shr
(bad)
stos
pop
jns
or
imul
(bad)
jmp
dec
shr
fld
jp
fmul
jmp
dec
shr
(bad)
jmp
loope
jp
jecxz
int3
(bad)
outs
imul
(bad)
jmp
dec
shr
(bad)
inc
cmc
rcl
(bad)
outs
test
dec
shr
(bad)
jmp
dec
shr
fldcw
add
test
jle
cmps
out
mov
sub
cmps
mov
cwde
fst
jb
cs
fmul
jmp
dec
shr
(bad)
inc
idiv
jmp
shr
fldcw
lds
int
push
jb
shr
(bad)
jmp
addr16
dec
shr
(bad)
jmp
xor
inc
(bad)
fld
(bad)
ins
call
int3
mov
cs
call
int3
jo
hlt
int3
(bad)
outs
shr
(bad)
jmp
dec
shr
jmp
int3
push
sbb
push
int3
fmul
jmp
dec
shr
(bad)
cmp
cmc
test
in
sbb
test
adc
dec
jmp
dec
shr
(bad)
jmp
jl
jmp
shr
(bad)
fisttp
shr
(bad)
jmp
dec
shr
xor
ja
(bad)
outs
shr
(bad)
jmp
dec
shr
in
(bad)
loop
(bad)
jmp
jns
add
imul
(bad)
jmp
dec
shr
fnstcw
rcr
dec
shr
(bad)
jmp
dec
loope
(bad)
jmp
dec
shr
out
fsubrp
jmp
shr
fldcw
shr
(bad)
jmp
dec
shr
fldcw
in
call
dec
shr
(bad)
jmp
daa
xor
inc
(bad)
mul
cmps
cwde
mov
fmul
jmp
dec
shr
(bad)
jmp
xchg
test
adc
loopne
test
(bad)
xor
and
loop
jnp
clc
loopne
into
add
int3
(bad)
xchg
inc
(bad)
dec
shr
(bad)
jmp
dec
rol
addr16
int3
(bad)
outs
shr
(bad)
jmp
dec
shr
(bad)
(bad)
nop
mov
mov
int3
dec
jmp
dec
rcr
loope
test
(bad)
jmp
dec
shr
add
cs
and
mov
int3
dec
jmp
dec
shr
(bad)
inc
js
shl
cmp
add
cs
lock
out
imul
xor
mov
loopne
out
add
cmps
and
outs
call
xor
jecxz
xor
and
add
test
pop
loopne
mov
jp
fmul
jmp
dec
xor
add
mov
jmp
dec
shr
mov
call
xor
cmp
jb
lock
lea
cli
jo
inc
pop
xchg
or
test
shr
(bad)
jmp
jo
stos
jp
push
fild
shr
(bad)
jmp
dec
shl
sbb
xchg
sbb
imul
(bad)
jmp
dec
shr
out
outs
sbb
mov
sbb
mov
mov
fmul
jmp
dec
test
outs
imul
(bad)
jmp
dec
shr
(bad)
adc
(bad)
div
jo
out
dec
jmp
dec
shr
fnstcw
outs
sbb
test
inc
cmc
or
add
hlt
gs
inc
dec
cmps
in
scas
hlt
dec
scas
inc
(bad)
mov
mov
test
mov
jae
pop
dec
daa
jp
int3
push
jne
leave
test
dec
xchg
jle
test
and
jl
jle
popf
jmp
mov
sbb
xor
mov
mov
mov
leave
cmp
aaa
(bad)
inc
jg
(bad)
es
aad
es
test
clc
jmp
(bad)
mov
lea
pop
lods
fimul
gs
pop
push
enter
retf
or
or
ret
xchg
test
inc
mov
mov
mov
add
test
ins
push
cli
shr
and
sbb
jae
or
jmp
jle
cli
xor
jmp
mov
sbb
mov
pop
out
jns
pop
mov
pop
ins
or
imul
jae
xor
mov
test
jecxz
inc
bound
test
xor
mov
repz
bound
mov
or
retf
xchg
adc
mov
test
ins
clc
mov
pop
pop
xor
xchg
xor
fisubr
outs
cwde
add
out
enter
push
bound
xor
mov
adc
mov
mov
stc
xchg
add
fidiv
test
xor
mov
adc
mov
adc
test
adc
mov
and
fidiv
add
ds
mov
jne
and
icebp
xchg
int3
xchg
stc
call
enter
adc
mov
adc
mov
adc
out
fist
(bad)
xchg
push
ins
or
adc
mov
adc
mov
adc
mov
sub
cs
mov
adc
mov
imul
mov
and
add
ficomp
popf
enter
xchg
ja
outs
gs
xchg
es
stc
xchg
es
stc
xchg
es
stc
xchg
es
ja
outs
dec
stc
xchg
es
fidiv
add
fiadd
add
fidiv
inc
adc
mov
adc
mov
adc
mov
xor
adc
mov
adc
mov
adc
mov
pushf
mov
and
push
fiadd
fidiv
add
push
fimul
fdiv
daa
push
fimul
fidiv
add
fidiv
inc
adc
mov
adc
mov
adc
mov
aaa
push
fimul
jo
dec
jne
cmp
fbstp
xor
fidiv
add
fiadd
add
fidiv
dec
adc
mov
adc
mov
adc
test
adc
mov
adc
mov
xor
inc
daa
push
fidivr
fidiv
cmps
retf
jo
jbe
push
fidivr
fidiv
add
fidiv
add
ficom
adc
push
xor
sti
popa
daa
xor
dec
xor
push
mov
adc
mov
adc
and
jmp
push
xor
xchg
add
fidiv
(bad)
adc
mov
adc
cmp
adc
mov
xor
push
fucom
xchg
scas
jge
call
std
xchg
scas
xchg
ja
mov
xchg
xchg
imul
xchg
inc
aas
add
cwde
and
xchg
test
fnstenv
imul
xor
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
push
in
stos
dec
pop
in
stos
dec
pop
fdiv
pop
in
stos
dec
pop
in
stos
dec
push
retf
dec
outs
add
icebp
scas
mov
aad
lds
mov
jg
daa
pop
out
retf
movs
inc
jg
cdq
out
dec
mov
imul
js
xchg
retf
mov
fstp
sbb
clc
xchg
js
xchg
xchg
or
imul
push
dec
mov
popa
shl
mov
cmp
mov
xor
xchg
test
clc
pop
rcl
or
add
sub
fcmovnu
fistp
jb
add
ins
js
test
bound
clc
dec
pusha
dec
(bad)
jmp
mov
movs
mov
pop
loope
mov
ins
jle
jmp
sar
mov
mov
mov
call
sbb
sbb
add
hlt
sar
test
or
add
jnp
test
inc
mov
test
adc
nop
sbb
imul
jmp
lods
ret
ins
into
je
aam
dec
pop
cmp
pop
ins
inc
jmp
jae
cmp
loope
jle
mov
ja
pop
xor
xchg
ins
test
mov
xor
or
mov
fwait
adc
pop
test
(bad)
mov
add
xor
int
sbb
adc
mov
out
je
data16
aad
sub
aad
push
lahf
cdq
retf
or
out
and
test
clc
cmp
repnz
imul
popf
data16
nop
stos
loopne
jae
pop
or
(bad)
push
jne
out
pop
lea
jl
mov
jle
imul
jns
cdq
mov
pusha
(bad)
xor
jg
pop
retf
jl
xor
sahf
(bad)
rcr
inc
ds
add
js
cdq
push
mov
dec
dec
xchg
data16
lods
mov
push
sbb
lahf
pop
cdq
test
clc
jae
test
mov
dec
cmp
pusha
test
or
push
(bad)
enter
jmp
loope
mov
mov
mov
xchg
jbe
retf
or
jmp
sbb
ins
test
mov
jbe
outs
sbb
or
sub
mov
jmp
test
pop
aaa
jle
mov
adc
sbb
jle
mov
ret
clc
mov
pop
mov
jle
or
pop
fisttp
cld
mov
sbb
or
movs
sub
enter
xor
sub
xor
shl
retf
or
aad
xor
mov
pusha
shl
xchg
xor
or
sbb
int
xchg
lods
loop
xchg
xor
lods
xor
sti
mov
test
xchg
popa
xor
enter
jl
in
jle
(bad)
mov
xchg
popa
repz
mov
shr
or
xchg
popf
iret
pop
mov
iret
pop
mov
iret
pop
mov
int
stos
and
iret
pop
mov
iret
pop
mov
iret
pop
mov
punpckhbw
popf
iret
pop
mov
iret
pop
mov
iret
pop
mov
jp
outs
lods
arpl
pushf
iret
pop
mov
iret
pop
loopne
hlt
xchg
das
int
xchg
and
aaa
call
pop
mov
in
mov
iret
pop
mov
out
je
leave
fs
lods
cmp
call
pop
mov
iret
pop
mov
iret
cmp
call
mov
iret
pop
mov
sti
repz
popf
iret
pop
mov
iret
pop
mov
iret
pop
mov
out
je
pop
fs
ins
repz
cmp
cld
out
ds
sbb
mov
adc
mov
neg
mov
push
sbb
arpl
mov
bndldx
pop
cmp
pop
nop
xor
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pop
ins
popa
lahf
pushf
ins
popa
ret
icebp
outs
jg
pop
gs
(bad)
sti
ins
jge
imul
cmp
mov
scas
push
sbb
xchg
ss
xor
call
jns
gs
cwde
call
push
(bad)
(bad)
cli
in
jns
mov
neg
lods
cld
popa
shl
mov
jmp
retf
mov
and
mov
cli
ins
test
push
ret
xchg
(bad)
mov
into
cld
jne
jae
pop
ins
or
sbb
hlt
retf
cli
mov
mov
jae
test
add
retf
xchg
test
mov
out
leave
ins
jle
pop
xor
test
pop
xchg
pop
xchg
jns
xchg
lods
ret
jl
jbe
(bad)
ret
or
adc
push
clc
sbb
push
push
ret
js
test
(bad)
dec
xchg
lods
ds
cmp
js
jb
dec
inc
jp
pop
inc
sbb
push
pop
sub
mov
lock
jmp
mov
pop
ins
popa
lahf
pushf
ins
or
or
mov
(bad)
xchg
xor
sbb
ds
jno
push
jge
imul
call
xor
pop
fimul
cld
jge
or
push
fimul
push
fidiv
cld
jnp
ds
outs
fisub
cld
neg
cs
jo
jbe
jl
pop
imul
jl
fcmove
cld
test
js
or
xor
sar
mov
sar
jmp
adc
sar
mov
sar
mov
sar
mov
ja
lods
pushf
neg
jl
xlat
fisubr
call
fcmovnbe
std
mov
rcr
mov
sar
mov
sar
mov
daa
fimul
test
out
retf
idiv
xlat
xor
mov
loopne
adc
jl
mov
sar
mov
nop
dec
popa
cli
mov
inc
loopne
push
test
maskmovq
lods
cld
sbb
popa
jb
bound
sar
mov
rcr
and
pop
cwde
xchg
enter
fcmovnbe
std
mov
sar
mov
sar
(bad)
push
push
dec
xor
and
or
xchg
pop
lods
cld
sar
mov
sar
mov
dec
fsub
in
cmp
idiv
mov
sar
mov
sar
mov
rcl
and
xor
rcl
and
sub
sar
mov
sar
mov
jns
mov
fcmovnbe
std
mov
ror
sub
idiv
mov
test
add
inc
shl
mov
sar
mov
sar
mov
sar
mov
sar
mov
jns
jo
push
adc
fcmovnbe
std
mov
sar
and
cmp
stos
cld
mov
sar
mov
retf
cmp
mov
sar
mov
jnp
mov
sar
mov
sar
mov
sar
mov
daa
fimul
jl
mov
sar
mov
sar
mov
sar
stos
jge
jp
mul
and
push
cwde
push
lods
fcmovbe
std
mov
sar
mov
popf
sbb
ja
cld
mov
sar
mov
sar
mov
pop
into
and
sub
push
jp
adc
sar
mov
rcl
mov
sar
mov
sar
mov
popf
jb
outs
outs
jbe
hlt
push
or
fcmovnbe
std
mov
dec
fsub
cmc
jp
lock
std
mov
sar
mov
rcl
(bad)
push
cld
mov
sar
mov
sar
mov
rcl
clc
push
cld
mov
sar
mov
fadd
std
mov
sar
mov
shr
fcmovbe
std
mov
sar
mov
ror
lods
fdiv
ficom
out
scas
daa
cld
in
sar
(bad)
fcmovnbe
std
mov
sar
mov
ja
lods
pushf
neg
jl
xlat
fisubr
call
fcmovnbe
std
mov
sar
mov
sar
mov
sar
mov
mov
cwde
jl
cld
mov
sar
mov
sar
mov
jne
mov
cld
and
or
dec
sbb
sar
mov
mov
cwde
jl
cld
mov
sar
mov
sar
mov
jne
lea
retf
xchg
sbb
sar
mov
mov
cwde
jl
cld
mov
sar
mov
shl
cs
or
mov
js
push
or
fcmovnbe
std
mov
sar
mov
mov
push
scas
cld
sar
mov
sar
mov
sar
stos
jno
push
stos
xor
ret
idiv
mov
sar
mov
jp
pusha
cli
mov
inc
adc
fcom
dec
xor
sar
mov
sar
mov
sar
mov
lock
test
fcmovnbe
std
mov
sar
mov
rol
(bad)
aam
push
lods
call
mov
fcmovnbe
std
mov
rcl
jae
pop
stos
movntq
pusha
cmp
adc
sar
mov
ror
xlat
fadd
std
mov
sar
mov
sar
mov
sar
mov
sar
mov
sar
dec
mov
push
and
dec
fimul
fcmovnbe
std
mov
sar
stos
jae
rol
adc
gs
cmp
mov
fcmovnbe
push
stos
jae
pop
stos
movntq
js
jns
lock
sar
mov
sar
mov
sar
popa
jb
fisub
sar
mov
sar
mov
sar
popa
jb
rcr
std
mov
sar
mov
sar
mov
cmp
cmp
mov
sar
mov
sar
mov
sar
and
arpl
(bad)
jmp
lods
daa
cld
xchg
rcr
idiv
daa
cld
xlat
pop
add
popf
mov
or
pop
dec
dec
mov
mov
out
jg
mov
retf
mov
sti
dec
pop
ins
pop
dec
mov
popa
ret
xor
retf
pop
gs
mov
lock
jle
imul
push
imul
sub
jg
push
cmp
sti
inc
mov
popf
add
inc
pushf
mov
xchg
into
aas
jae
cmps
retf
js
test
dec
jg
ins
test
mov
jle
mov
hlt
out
sahf
lods
les
jbe
xor
xor
adc
pusha
or
or
jg
fild
retf
pop
in
add
movntq
cmps
data16
inc
jle
mov
ret
xchg
(bad)
ret
or
sbb
enter
inc
inc
out
sbb
push
enter
mov
dec
cwde
jecxz
nop
sbb
adc
xor
xchg
cmp
add
test
ret
out
mov
mov
or
rol
push
pop
mov
or
jbe
sbb
sbb
adc
push
mov
ins
test
cdq
jo
jb
inc
cmp
mov
ja
cmp
mov
xor
(bad)
mov
pop
cmp
hlt
retf
test
inc
retf
pop
pop
xor
and
sti
jmp
sbb
cwde
mov
add
mov
mov
cwde
mov
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
jl
arpl
or
jne
mov
out
add
inc
es
test
or
ja
arpl
pop
xlat
jmp
ins
lock
inc
es
test
test
jne
mov
out
add
inc
es
test
test
or
es
test
test
push
pushf
jmp
pushf
push
xlat
jmp
ins
lock
inc
es
popf
jmp
arpl
jl
arpl
pop
mov
push
aad
bound
pop
test
test
test
test
xlat
jmp
ins
lock
inc
es
test
or
es
test
push
pushf
jmp
in
or
jmp
add
inc
es
test
test
aad
ja
call
adc
pop
test
test
in
xor
inc
es
test
test
jge
imul
mov
loope
jl
bound
jl
inc
es
test
pop
jb
add
mov
or
(bad)
call
jecxz
mov
prefetch
bound
pop
test
test
test
lea
mov
test
mov
test
pushf
push
xlat
jmp
add
jl
(bad)
xor
jmp
mov
inc
jmp
(bad)
call
adc
pop
test
pop
jb
add
mov
or
(bad)
call
jecxz
mov
prefetch
bound
pop
test
test
and
add
inc
es
test
test
jge
(bad)
shr
jmp
xor
popf
sub
shr
add
inc
es
test
test
push
(bad)
jmp
mul
inc
es
test
jne
push
aad
ja
call
jmp
mov
pop
or
test
test
movs
xchg
add
jmp
call
jmp
mov
pop
or
test
test
movs
sbb
sub
xchg
(bad)
pushf
push
and
add
mov
inc
es
test
repz
xor
mov
sub
and
jmp
xor
mov
test
xchg
and
add
pop
sbb
jp
sbb
retf
mov
ja
pop
jns
aad
ins
jle
mov
or
add
xchg
(bad)
jl
mov
jg
imul
dec
jnp
clc
std
not
loopne
(bad)
loop
jl
daa
pop
cmp
xchg
jle
mov
or
and
and
xchg
cmp
mov
cmp
nop
mov
jge
retf
pop
sbb
mov
add
lahf
jns
pop
sti
xor
mov
ja
lds
retf
clc
sbb
addr16
jne
add
jg
(bad)
ss
pop
jle
mov
ret
push
jp
adc
out
pusha
test
lock
inc
mov
sbb
mov
test
jmp
stos
(bad)
sub
mov
xchg
add
add
ficom
shl
pop
mov
sbb
sbb
mov
pop
ins
test
add
pusha
shl
xor
jmp
pop
jb
cmp
scas
xor
rcr
lahf
jl
fidivr
test
mov
push
cmp
clc
mov
pop
push
xor
retf
lahf
test
ins
js
mov
(bad)
mov
cmp
jns
mov
jae
jge
repz
call
lahf
xchg
popa
lahf
xchg
popa
lahf
xchg
popa
lahf
xchg
popa
lahf
xchg
popa
lahf
xchg
popa
lahf
xchg
popa
lahf
xchg
popa
lahf
xchg
popa
lahf
xchg
popa
lahf
xchg
popa
lahf
xchg
popa
lahf
xchg
popa
lahf
xchg
popa
lahf
xchg
popa
lahf
xchg
mov
inc
pop
cmp
adc
and
add
jmp
dec
and
fcmovnb
sahf
in
(bad)
push
sti
ffreep
sahf
leave
lahf
xchg
popa
xor
xchg
xchg
xchg
xchg
adc
xchg
pop
xchg
cmp
popaw
aas
xchg
xchg
xchg
adc
test
pusha
lahf
mov
out
mov
popf
stos
repz
rol
(bad)
call
out
mov
mov
jge
cmp
inc
stos
in
add
pop
int
xchg
pusha
mov
shl
out
mov
or
loop
sub
xchg
xchg
ins
dec
(bad)
xchg
inc
mov
mov
cmc
rcr
xor
ror
pusha
lahf
mov
out
mov
xor
jp
adc
jmp
dec
pusha
mov
mov
out
fsubr
and
inc
mov
inc
sbb
rol
out
mov
push
inc
addr16
arpl
dec
xchg
pusha
mov
sub
pusha
mov
mov
pop
test
adc
test
pusha
lahf
mov
scas
in
lahf
mov
out
mov
xchg
inc
mov
mov
rol
xchg
popa
xchg
xchg
mov
js
push
or
inc
mov
mov
dec
pusha
mov
mov
popa
mov
mov
pusha
popa
in
pusha
adc
ds
jns
dec
pusha
mov
mov
out
cs
sti
pop
stos
push
rol
out
mov
mov
daa
push
repnz
gs
cmps
ret
add
loope
scas
mov
out
mov
out
popa
dec
or
lahf
push
rcr
mov
out
ss
dec
pusha
mov
mov
out
dec
xchg
pusha
lahf
es
jns
dec
pusha
mov
mov
adc
xchg
mov
cmps
shl
ds
add
dec
pusha
mov
mov
mov
lahf
mov
out
mov
out
popa
dec
xchg
popa
lahf
push
rcr
mov
out
mov
dec
pusha
mov
mov
mov
inc
lahf
xchg
popa
lods
pop
or
xchg
inc
mov
dec
mov
lahf
mov
out
mov
out
popa
dec
xchg
popa
lahf
push
rcr
mov
out
dec
cmc
dec
pusha
mov
mov
adc
popa
lahf
push
rol
adc
popa
lods
pop
or
xchg
inc
mov
mov
rol
out
mov
out
popa
dec
xchg
popa
lahf
push
rcr
mov
out
mov
shl
adc
out
mov
mov
adc
xchg
sahf
hlt
mov
adc
mov
adc
out
mov
xchg
popa
lahf
js
jno
or
dec
jmp
dec
pusha
mov
mov
adc
fst
pusha
dec
fs
jmp
adc
adc
rcr
push
dec
push
lahf
xchg
inc
mov
mov
and
cmp
mov
out
mov
or
jmp
push
adc
inc
mov
mov
dec
jmp
adc
sub
dec
jmp
js
jno
or
shl
out
mov
or
shl
out
mov
std
xor
adc
ret
js
das
dec
or
shl
out
mov
xchg
loope
dec
popa
popf
xchg
pusha
mov
mov
xlat
or
mov
xlat
sbb
dec
pusha
mov
mov
dec
pusha
mov
mov
or
inc
mov
mov
shr
mov
out
mov
mov
out
cdq
sti
ror
or
data16
xor
xchg
mov
push
rol
out
mov
mov
sbb
push
xchg
inc
mov
mov
or
mov
out
mov
add
xchg
lahf
dec
rol
out
mov
xchg
mov
lahf
mov
out
in
mov
lahf
mov
out
mov
xchg
jmp
in
or
out
mov
mov
out
mov
xchg
iret
inc
mov
mov
out
mov
mov
or
dec
cdq
add
data16
inc
gs
jne
inc
lahf
xchg
out
mov
mov
or
mov
mov
mov
out
call
inc
mov
mov
pusha
push
xchg
inc
mov
push
adc
xchg
mov
push
rcr
mov
out
mov
cmc
dec
pusha
mov
mov
adc
popa
lahf
push
fdiv
repz
inc
mov
mov
rcl
out
mov
mov
cmp
adc
jmp
nop
mov
inc
mov
mov
out
mov
out
mov
mov
cmp
adc
out
mov
mov
shr
nop
fimul
nop
push
mov
out
test
jbe
adc
(bad)
sbb
mov
out
in
xchg
shl
out
mov
mov
mov
xchg
mov
or
outs
dec
out
mov
push
adc
xchg
mov
mov
pusha
dec
xchg
dec
add
dec
pusha
mov
mov
out
fsubr
jmp
out
pop
push
rol
xchg
popa
xchg
xchg
mov
js
push
or
inc
mov
mov
dec
pusha
mov
mov
stos
imul
shl
mov
lahf
mov
out
stos
xchg
pusha
mov
mov
daa
sub
lea
pusha
lahf
xchg
inc
mov
mov
fld
or
aas
les
adc
out
mov
mov
(bad)
loopne
es
jno
dec
pusha
mov
mov
dec
pusha
mov
mov
dec
popa
loopne
sub
or
in
xchg
shl
out
mov
mov
mov
cdq
or
iret
addr16
stos
repz
rcl
xchg
pusha
mov
mov
out
js
jg
adc
xor
mov
popf
stos
imul
shl
mov
lahf
mov
out
stos
xchg
pusha
mov
mov
xchg
in
adc
movs
pusha
lahf
xchg
inc
mov
mov
dec
pusha
aas
les
adc
out
mov
mov
ds
jno
dec
pusha
mov
mov
dec
pusha
mov
mov
out
adc
outs
cdq
test
(bad)
in
adc
mov
lahf
xchg
inc
mov
mov
(bad)
out
mov
cmp
xor
lahf
hlt
shl
xchg
inc
mov
mov
jg
adc
xor
mov
mov
dec
pusha
test
in
imul
pusha
std
mov
jmp
mov
pop
sub
call
sub
or
retf
mov
mov
cmp
retf
cmc
jg
test
jl
mov
jle
imul
leave
jne
cwde
sub
jmp
xchg
fdivr
cmp
mov
(bad)
mov
cmp
cwde
or
(bad)
mov
mov
jg
xor
js
lods
call
test
rol
pusha
jne
lds
jge
jg
cli
shr
bound
test
mov
test
pop
in
repz
clc
pop
push
bound
lods
out
lea
add
pushf
fucom
xchg
imul
ins
or
data16
sbb
aam
mov
jae
xor
xchg
retf
mov
cmc
retf
lock
loopne
mov
jle
pop
mov
mov
call
jl
mov
add
adc
xor
ins
sbb
jmp
mov
add
push
pop
ins
or
xchg
or
or
add
je
lods
ret
and
test
jae
sbb
pop
leave
xor
or
iret
xchg
jl
add
push
fistp
fwait
js
pop
sub
cmp
sbb
mov
inc
scas
scas
imul
iret
out
clc
or
mov
mov
mov
cmp
lods
out
cmp
mov
add
imul
je
and
xor
mov
cdq
mov
and
mov
cdq
test
and
mov
and
sbb
adc
and
jns
inc
mov
in
xor
mov
inc
adc
sbb
add
mov
(bad)
inc
sbb
popa
xchg
adc
cmps
cdq
mov
mov
mov
lahf
mov
sub
daa
sbb
popa
xchg
adc
cmps
cdq
mov
cmps
jnp
adc
and
mov
and
sbb
push
lods
and
jns
inc
mov
in
xor
mov
movs
xchg
push
or
test
and
aas
lahf
or
jg
popa
ror
mov
cdq
mov
or
mov
aas
xor
cdq
test
mov
lahf
push
stos
inc
repnz
cdq
mov
js
outs
adc
cmps
cdq
mov
mov
imul
sbb
mov
xor
sahf
mov
fcom
iret
mov
es
lahf
jge
inc
pusha
push
(bad)
out
sub
dec
stc
retf
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
retf
mov
jle
imul
fld
adc
mov
test
fwait
adc
add
sti
cmp
jae
dec
retf
or
pop
std
jg
lds
mov
sti
jg
call
ret
or
jle
lea
adc
mov
outs
jle
mov
js
test
adc
pushf
add
sub
jle
or
adc
cmp
ins
jle
pop
inc
jg
mov
jb
aaa
fmul
fs
fmul
clc
fst
lea
int3
sbb
cli
jg
add
xor
add
sub
jg
xlat
test
test
retf
mov
pop
jo
xchg
lods
les
push
xchg
retf
mov
mov
test
andps
mov
mov
lea
lahf
loop
ins
test
mov
mov
xor
sahf
test
or
xchg
mov
sub
xchg
xor
sbb
jns
xchg
push
(bad)
cli
inc
push
inc
push
mov
test
stc
sbb
sbb
ss
lods
(bad)
jb
cmp
or
pop
jge
mov
add
lea
or
inc
ins
adc
arpl
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
lea
push
or
test
mov
ror
stos
mov
cmp
sbb
push
push
ficomp
test
stos
mov
je
stos
mov
ror
stos
mov
je
stos
mov
retf
xchg
sysret
ret
xor
lea
stos
pop
in
(bad)
or
je
stos
mov
js
loop
push
sub
mov
je
imul
or
or
stos
mov
je
stos
sahf
push
or
xchg
cmc
hlt
out
icebp
or
je
stos
mov
push
test
popf
and
or
push
je
stos
mov
je
stos
push
mov
or
test
hlt
cmps
xchg
cmp
sub
stos
ret
push
test
stos
mov
je
pop
xor
mov
adc
and
fisttp
stos
mov
adc
cs
push
sub
mov
or
loope
or
fmul
pop
imul
lea
fisubr
xor
lea
xor
je
mov
loopne
push
push
hlt
cmps
jae
xchg
je
or
or
pop
outs
and
test
je
stos
loop
in
xchg
or
stos
lock
xlat
or
pop
outs
and
mov
je
stos
mov
mov
or
cmp
push
push
sub
mov
je
stos
jp
and
push
push
hlt
cmps
inc
aas
xchg
je
xchg
or
mov
sub
jmp
xchg
lods
popa
jne
fmul
pop
mov
or
lods
and
mov
je
stos
mov
push
loop
push
push
fimul
scas
lds
test
stos
mov
test
fwait
cmp
mov
je
stos
mov
mov
or
repz
cmps
adc
mov
je
cmp
lods
cmc
stos
mov
add
push
daa
fmul
mov
(bad)
push
fcom
jp
sub
stos
mov
adc
cs
push
sub
mov
loop
jb
je
stos
mov
je
stos
mov
fmul
jae
xchg
data16
je
stos
mov
fmul
mov
mov
loopne
push
dec
test
cs
push
fcomp
test
fidivr
mov
or
mov
push
dec
test
div
mov
fwait
lock
fsubr
mov
je
div
mov
out
mov
test
jns
test
or
mov
push
adc
xor
lea
pop
cmp
out
push
or
push
or
push
push
fimul
aaa
mov
out
mov
test
jns
test
or
je
stos
push
pop
or
jne
mov
out
mov
test
jns
test
or
mov
dec
xchg
test
or
xchg
pop
test
outs
or
jnp
sar
push
push
fadd
push
push
hlt
cmps
add
xchg
je
dec
push
push
or
xchg
data16
je
stos
mov
sbb
inc
fwait
pop
or
xchg
fcomp
test
mov
fsub
push
or
mov
out
push
or
test
pop
test
add
stos
mov
je
stos
mov
push
sub
mov
je
xchg
push
or
je
xchg
lods
popa
imul
adc
sub
jne
inc
or
je
stos
mov
fmul
mov
mov
loopne
lahf
sub
sbb
in
shr
jb
imul
jmp
or
mov
lods
and
fisttp
stos
mov
je
cmp
jmp
je
stos
mov
je
dec
lahf
pop
and
push
push
stos
jb
sub
ret
call
je
stos
mov
push
adc
pop
lods
cmc
jae
cmp
push
push
hlt
cmps
adc
xchg
je
or
and
push
fimul
push
push
fimul
aaa
mov
out
mov
test
jns
test
or
mov
or
test
cmps
inc
aas
xchg
je
stos
mov
jo
inc
int
ret
push
or
test
inc
fwait
pop
or
test
pop
sub
cmc
jb
pop
mov
push
push
enter
adc
out
add
push
push
push
(bad)
out
fisubr
push
push
ficomp
push
add
dec
stos
retf
jb
jmp
in
stos
dec
pop
in
aaa
call
cmps
int3
push
gs
int3
fdiv
retf
call
leave
mov
call
addr16
xchg
or
inc
or
pop
xchg
ja
(bad)
retf
mov
dec
out
enter
(bad)
jl
jl
call
ja
div
stos
mov
jae
adc
cwde
sbb
mov
xchg
or
mov
sub
test
js
test
add
retf
sahf
test
inc
mov
nop
jl
popf
or
mov
mov
mov
or
movs
and
jg
test
jns
stos
mov
pop
cdq
lock
cmc
retf
call
mov
out
jg
pop
adc
test
ret
sbb
mov
gs
jmp
jne
cmp
movs
fmul
sbb
sbb
sbb
pop
pop
js
test
retf
xchg
test
icebp
cmp
inc
mov
dec
and
sti
push
test
jle
pop
leave
mov
in
jns
sbb
xchg
xor
addr16
jo
outs
int
gs
test
stos
repz
mov
jbe
test
(bad)
mov
jecxz
fwait
jge
movs
dec
jle
(bad)
mov
loop
lds
pushf
mov
(bad)
mov
lods
fild
xchg
in
call
xchg
jecxz
sahf
jmp
mov
leave
in
mov
xchg
mov
push
pop
adc
add
mov
cwde
movs
cmps
xor
ja
xor
pop
fsubr
cld
ja
xor
ja
xor
ja
xor
xchg
mov
sti
cmp
add
nop
pop
dec
push
pop
adc
jbe
pop
jmp
xchg
xor
ja
xor
add
add
pop
in
mov
pop
rol
xor
ja
pop
rol
xor
jle
and
xor
pop
cmps
jle
and
adc
mov
xor
ja
xor
ja
xor
push
cmps
jle
and
adc
add
jg
and
xor
ja
xor
scas
mov
sti
jnp
jns
push
jle
and
xor
ja
xor
jae
fmul
or
push
pop
adc
mov
pop
pushf
dec
or
sti
scas
xlat
push
inc
in
adc
sbb
cmp
vpsrlq
(bad)
push
cmp
imul
adc
cli
pop
repz
sbb
dec
pop
fadd
sti
ret
push
leave
neg
mov
jb
mov
test
ficomp
ret
xchg
or
shl
enter
fnstsw
xchg
movs
pushf
scas
pushf
mov
imul
xchg
adc
test
inc
jecxz
jg
je
hlt
cwde
sbb
pop
test
mov
dec
mov
xchg
or
sbb
mov
add
scas
les
sbb
pop
ror
lahf
sub
retf
mov
jg
pop
ror
xor
xchg
cmp
jne
mov
sbb
sbb
imul
push
add
jbe
test
push
sbb
pop
jecxz
jns
(bad)
xchg
push
sbb
mov
ja
add
jb
ins
dec
ja
ins
or
xchg
dec
mov
jmp
(bad)
icebp
pop
inc
mov
mov
test
clc
adc
jbe
and
xlat
xchg
lods
or
or
icebp
ins
les
mov
sbb
clc
add
cmp
cli
inc
loopne
jl
mov
mov
retf
sar
pop
jl
fwait
xchg
jnp
or
js
or
mov
lds
lds
xchg
mov
les
loop
jg
loop
stos
inc
stc
pushf
jmp
xchg
in
jg
loop
jns
adc
inc
jge
mov
jecxz
jb
mov
retf
loop
push
(bad)
(bad)
sbb
lds
hlt
mov
mov
lds
sbb
xchg
xchg
xchg
aaa
xchg
scas
inc
loop
jg
out
je
loop
jg
ss
scas
inc
jecxz
inc
addr16
loop
xchg
push
sbb
xchg
test
xor
sub
mov
lds
icebp
sbb
lds
lds
inc
cwde
addr16
loop
xchg
push
sbb
xchg
test
xor
sub
mov
les
adc
dec
in
pop
xchg
test
retf
or
stos
dec
clc
cmp
in
jl
mov
jecxz
pop
lds
or
imul
lds
pop
xor
inc
loop
push
xchg
mov
lds
mov
nop
cs
inc
cwde
xor
inc
cld
cmc
sbb
inc
sbb
hlt
inc
xor
test
imul
inc
xlat
sti
ret
jg
mov
push
aad
or
lods
sub
jg
mov
stos
dec
pop
in
stos
dec
pop
in
arpl
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
outs
cmc
cmp
push
pop
pop
out
sbb
test
stos
dec
pop
in
stos
dec
jns
lea
scas
inc
mov
mov
in
stos
dec
pop
in
stos
dec
pop
xor
pushf
and
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
pop
scas
pop
pop
out
sbb
dec
pop
in
stos
dec
pop
in
mov
icebp
and
sub
dec
pop
in
stos
jnp
jo
jge
sbb
and
pop
in
stos
dec
pop
in
stos
dec
push
in
stos
dec
pop
in
stos
dec
pop
in
stos
addr16
into
mov
fsubr
retf
jmp
ret
mov
clc
jg
mov
outs
cwde
dec
sub
cmp
ins
xchg
jns
add
mov
and
xor
fwait
or
fadd
clc
je
call
es
xchg
mov
xchg
test
cmp
cmp
mov
jno
jg
(bad)
ins
jle
clc
mov
push
retf
or
jns
jae
xchg
dec
sar
pop
or
js
test
ret
clc
mov
cli
and
int
mov
sbb
adc
or
ins
or
dec
nop
mov
sti
jnp
(bad)
bound
mov
jmp
add
adc
mov
or
lea
shl
sub
sbb
out
and
push
in
mov
xchg
jbe
xor
or
ret
sbb
pop
ins
test
pop
imul
sub
or
ja
cli
xor
arpl
sbb
push
nop
test
mov
lods
hlt
jb
cmp
jge
cdq
mov
(bad)
(bad)
cmp
arpl
mov
push
mov
xor
mov
dec
imul
push
xor
cwde
xor
mov
imul
push
lods
jg
xchg
xor
cs
inc
imul
push
mov
dec
rol
inc
pop
mov
inc
hlt
xor
retf
cmps
jge
mov
mov
inc
retf
cwde
adc
ja
adc
push
cdq
adc
ja
adc
push
ret
dec
xor
mov
ja
adc
jbe
adc
ja
adc
mov
inc
retf
cwde
adc
cmp
inc
sub
adc
ja
adc
push
push
adc
pop
mov
adc
ja
adc
jbe
adc
ja
xor
mov
jbe
scas
cwde
adc
ja
pop
add
xor
xchg
adc
fnsave
adc
mov
ja
adc
fnsave
adc
push
inc
and
clc
push
mov
mov
sub
imul
ja
adc
ja
adc
ja
adc
stos
scas
cmp
inc
fstp
xor
ja
adc
ja
adc
dec
inc
fidivr
push
cdq
adc
stos
scas
cmp
inc
and
cdq
adc
ja
dec
add
xor
xchg
adc
push
xor
sar
adc
ja
shr
and
adc
ja
adc
push
cdq
adc
fbstp
cmp
ja
adc
pop
xor
push
mov
adc
ja
iret
mov
push
jp
fwait
dec
pop
ja
adc
inc
les
xchg
adc
fistp
adc
inc
scas
sub
adc
pop
scas
cwde
adc
fild
xchg
adc
lock
mov
xchg
adc
jo
fisubr
push
mov
aas
int
mov
xor
pop
out
mov
jbe
adc
ja
and
pusha
cdq
adc
ja
adc
pop
mov
mov
mov
cwde
adc
ja
adc
push
push
adc
jo
xor
push
cdq
adc
ja
ret
mov
test
adc
(bad)
les
mov
push
mov
adc
mov
cwde
adc
ja
mov
xchg
adc
jo
fild
push
mov
adc
ja
adc
xor
mov
ja
and
dec
cdq
adc
ja
adc
jbe
adc
ja
adc
ja
adc
ja
xor
lods
(bad)
inc
les
xchg
adc
dec
cdq
adc
ja
adc
ja
adc
ja
adc
inc
stos
fcomip
inc
les
xchg
adc
dec
cdq
adc
ja
adc
jbe
adc
ja
xor
test
xor
add
xchg
adc
ja
dec
add
xor
xchg
adc
ja
mov
mov
scas
cmps
xor
jb
mov
mov
ja
adc
ins
inc
retf
cwde
adc
and
xchg
adc
out
scas
adc
ja
arpl
inc
adc
xchg
adc
ja
xor
ja
adc
ja
retf
test
push
cmp
lds
test
mov
adc
ja
adc
push
inc
cmp
mov
jo
xor
ja
adc
ja
dec
xchg
stos
xor
mov
push
mov
adc
ja
xor
cmps
fisub
push
pop
scas
cwde
adc
ja
adc
and
xchg
adc
ja
mov
or
and
dec
cdq
adc
ja
adc
push
mov
adc
ja
add
ja
adc
push
mov
adc
ja
xor
mov
xchg
rcr
mov
adc
inc
xor
xchg
adc
ja
mov
xchg
adc
inc
mov
xchg
rcr
mov
adc
ja
adc
jmp
adc
ja
cmps
jbe
adc
ja
adc
mov
inc
retf
cwde
adc
ja
adc
pop
xor
push
test
adc
ja
adc
push
push
sub
push
mov
adc
dec
xor
pop
scas
inc
retf
cwde
adc
sub
pop
and
fld
scas
inc
adc
ja
adc
mov
inc
retf
cwde
adc
and
xchg
adc
ja
cmp
push
mov
adc
jbe
adc
inc
mov
mov
ja
adc
push
inc
and
int
inc
retf
cwde
adc
ja
dec
add
xor
xchg
adc
jbe
adc
inc
adc
xchg
adc
push
mov
adc
push
push
cmp
jp
adc
mov
push
mov
adc
pop
mov
frstor
push
mov
adc
ja
adc
xchg
jbe
adc
fidiv
mov
sbb
xor
push
mov
aas
pop
xchg
xor
mov
inc
ja
stos
push
mov
jge
or
sub
jg
xchg
xor
cmps
sub
sub
fistp
push
outs
add
inc
adc
ja
in
push
cwde
adc
pop
out
cmc
sub
sub
push
ret
imul
push
fnstsw
rcl
mov
sub
mov
imul
dec
scas
pop
pop
out
sbb
out
xor
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
fwait
cmps
lds
ins
jg
mov
push
mov
scas
add
cdq
sub
dec
pop
in
stos
dec
pop
enter
inc
mov
ja
mov
test
in
lea
push
(bad)
cld
popf
or
pop
mov
inc
xor
jle
mov
sbb
ins
fwait
or
mov
xchg
imul
add
aam
addr16
aas
jae
jo
jae
xor
dec
pop
lods
inc
mov
dec
mov
test
mov
mov
pop
lds
and
arpl
mov
out
jnp
or
lahf
or
movs
xchg
test
pop
add
(bad)
xchg
das
mov
pop
pop
or
mov
mov
adc
pop
xor
mov
jmp
sbb
aad
xchg
test
mov
jbe
std
adc
aaa
pop
ret
jns
pop
push
and
daa
add
out
mov
stc
sbb
jns
sub
or
lods
inc
mov
scas
mov
jb
or
sbb
js
dec
inc
xlat
mov
jmp
(bad)
stc
sbb
test
mov
mov
jbe
aaa
imul
jge
mov
xchg
jbe
xor
cmps
add
sub
out
push
retf
clc
adc
lea
jge
shl
mov
jno
mov
jno
mov
jno
(bad)
pop
and
sbb
(bad)
mov
imul
mov
std
sub
(bad)
mov
(bad)
mov
jno
mov
test
cld
push
cmp
stos
or
icebp
(bad)
mov
ror
cld
jo
mov
jno
mov
jno
mov
inc
nop
mov
(bad)
mov
arpl
mov
movs
cmp
stos
or
cli
xchg
sub
lods
fidiv
mov
jno
pop
in
jo
mov
jno
mov
(bad)
mov
jno
mov
xor
(bad)
adc
cmp
std
mov
sbb
mov
jno
mov
push
sbb
mov
gs
mov
jno
mov
inc
push
mov
jno
mov
jno
mov
jno
and
je
es
pop
mov
iret
div
jmp
bound
fnstsw
iret
div
into
push
add
cmp
mov
lods
mov
scas
push
(bad)
cdq
sub
dec
pop
in
stos
dec
pop
in
stos
dec
pop
jo
gs
mov
mov
mov
call
inc
mov
in
stos
dec
pop
in
stos
dec
jl
cmp
hlt
retf
dec
nop
test
fs
mov
xchg
inc
jns
clc
jne
arpl
mov
sahf
jge
outs
test
loopne
jno
add
xor
scas
sub
ins
jle
imul
jno
pop
sub
popf
or
add
xchg
js
lods
cmps
lea
add
sbb
out
sbb
(bad)
lods
out
ins
jg
pop
gs
mov
or
cli
cmc
jb
ja
cmp
std
jp
je
in
das
mov
retf
clc
sbb
imul
xor
xchg
test
mov
jb
stc
jmp
jl
loopne
mov
pop
cmp
test
pop
and
call
push
push
shl
mov
cmps
mov
test
sbb
xchg
test
pop
daa
or
fsubr
(bad)
int3
jg
xchg
test
test
ret
or
out
dec
cmp
enter
push
pop
jecxz
xor
inc
xchg
jecxz
jnp
out
pshufw
sbb
pop
in
xor
fist
pop
in
or
xor
sbb
outs
cdq
fmul
ret
imul
test
mov
pop
rcr
jbe
inc
rcr
and
inc
cmp
retf
pop
into
xor
repz
das
repz
dec
sbb
and
nop
test
les
add
cmp
add
cmp
(bad)
jo
(bad)
push
cmp
add
cmp
add
cmp
sahf
ret
stos
xchg
mov
xor
mov
cmp
nop
mov
scas
jecxz
mov
cmp
inc
(bad)
nop
inc
jae
pop
jmp
sahf
dec
jns
pop
in
stos
dec
pop
in
stos
dec
pop
in
aaa
call
jle
es
int3
push
jge
inc
je
jle
mov
in
stos
dec
pop
inc
pop
pushf
jg
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pusha
test
sti
test
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
sbb
mov
stos
dec
pop
in
stos
dec
pop
in
pop
xchg
in
xor
pop
in
stos
dec
pop
in
stos
dec
scas
mov
stos
dec
pop
in
stos
mov
pop
in
stos
dec
pop
in
stos
dec
cmp
stos
dec
pop
in
stos
dec
pop
xor
xchg
and
stos
dec
pop
in
stos
dec
test
fwait
cmps
lds
ins
jg
mov
pop
enter
mov
pop
in
stos
dec
pop
in
stos
dec
jns
lea
jg
pop
and
aas
jae
pop
in
stos
dec
pop
dec
(bad)
pop
pop
push
pop
ins
(bad)
mov
loope
jg
pop
gs
sub
ins
jge
jno
mov
(bad)
jne
jge
scas
sub
stc
iret
ins
sbb
mov
push
jnp
enter
xor
mov
xchg
lahf
or
pop
push
mov
test
and
cwde
sbb
mov
ror
or
cmps
xor
cmp
mov
lahf
adc
or
jo
loopne
lods
or
lock
jae
lods
ret
js
test
xor
xor
aaa
inc
repz
or
fild
retf
clc
aas
sahf
jb
mov
test
sub
mov
sti
aas
data16
pop
out
mov
sbb
imul
mov
xor
jl
or
mul
inc
sahf
test
in
jecxz
out
push
out
jae
mov
cli
xor
xchg
test
pop
sub
adc
mov
pusha
out
call
sbb
sub
lods
add
xchg
sub
xchg
repnz
cdq
cmp
div
(bad)
mov
sbb
stos
sub
fiadd
rcl
xchg
fnstcw
push
data16
jae
jne
jae
jne
jae
pop
lahf
mov
push
imul
pop
mov
push
fstp
mov
push
and
mov
push
imul
(bad)
xor
(bad)
mov
scas
outs
push
out
sbb
mov
dec
pop
in
stos
dec
clc
pusha
call
retf
(bad)
ror
xchg
fs
leave
mov
and
dec
mov
(bad)
hlt
cmp
inc
push
pop
bound
jl
popa
sbb
stc
iret
pop
aaa
jo
push
mov
fsubr
scas
cs
jae
mov
jg
popa
ror
pop
cmp
sti
int
gs
test
pusha
xor
jle
mov
ret
cmp
sub
retf
pop
cmp
mov
js
test
stc
enter
mov
sbb
(bad)
call
pop
jge
retf
mov
enter
jl
xchg
xor
or
pop
(bad)
or
ret
inc
xchg
inc
mov
(bad)
mov
bound
icebp
rcr
add
pushf
inc
mov
int
pop
ins
or
cmp
cmp
retf
pop
addr16
or
xlat
leave
mov
jb
or
xchg
jg
xlat
int3
add
into
test
nop
sbb
xchg
xor
(bad)
int
lods
je
xchg
sbb
mov
jbe
test
call
retf
mov
mov
mov
test
idiv
call
jo
and
push
ins
clc
pop
cmp
jl
jle
jl
jle
jl
jle
jl
adc
mov
jl
jle
jl
and
cmp
jl
jne
lahf
mov
cs
jle
add
mov
pop
cmp
jl
ins
fs
jle
push
xchg
idiv
xchg
pop
cwde
or
or
pop
or
pop
or
add
or
pop
or
icebp
sub
cmp
jl
pop
or
pop
enter
cli
jl
jle
inc
or
lods
cmp
cs
adc
jmp
adc
pop
pop
pop
or
xchg
pop
nop
or
or
pop
or
test
pop
pop
pop
or
pop
or
jns
gs
jnp
jl
pop
or
pop
or
cdq
stos
jae
and
pop
(bad)
cs
jle
push
ss
jne
jl
jle
cmc
xor
jl
jle
jl
imul
xor
jl
js
xor
mov
cmp
enter
ds
sub
sub
pop
xchg
cmp
outs
mov
push
into
idiv
shl
xor
pusha
dec
push
xor
into
idiv
sbb
rcr
cmc
das
push
xor
add
fdiv
das
dec
jbe
xor
jg
mov
mov
mov
mov
mov
mov
mov
es
int3
push
gs
rcr
mov
in
stos
dec
pop
in
mov
out
and
sub
dec
pop
in
stos
dec
pop
mov
stos
dec
pop
in
stos
dec
pop
in
fwait
cmps
lds
ins
jl
hlt
mov
retf
cwde
out
retf
mov
ret
xor
clc
pop
out
sub
xor
into
cmp
fwait
jl
mov
cmc
jle
mov
xchg
daa
add
cmp
ins
jge
xor
and
and
and
je
(bad)
cwde
sbb
and
xchg
pop
(bad)
cli
in
mov
retf
js
test
ret
jle
mov
or
fld
loopne
jg
mov
sub
popf
test
mov
retf
cdq
lods
xchg
lea
xchg
xlat
scas
cmp
sub
lods
ret
adc
mov
test
test
rol
xchg
cmp
pop
jmp
hlt
retf
cwde
out
retf
xor
jnp
add
jae
or
mov
test
sbb
(bad)
cli
lods
or
jge
mov
retf
cli
leave
call
retf
or
pop
xchg
adc
and
xor
inc
lea
mov
cmp
xchg
cmp
xchg
lods
or
add
sahf
jns
nop
lods
sbb
or
cmp
xchg
test
mov
jbe
jnp
sub
xor
outs
call
arpl
lea
and
jmp
cld
xor
adc
popa
mov
popa
mov
popa
mov
popa
cdq
or
push
push
inc
popa
mov
popa
cdq
cmp
sub
mov
add
arpl
popa
mov
sbb
es
cmp
mov
popa
inc
jno
popa
mov
ja
pop
sub
mov
dec
cdq
mov
popa
lods
inc
in
lods
inc
in
lods
inc
aad
xchg
inc
in
lods
inc
in
lods
je
inc
lods
inc
in
lods
inc
in
lods
pushf
sub
popf
jmp
inc
lods
inc
in
lods
inc
in
mov
popa
bound
jmp
in
lods
inc
in
shr
pop
out
jecxz
arpl
sub
test
mov
call
out
dec
popa
mov
popa
pop
jbe
jg
arpl
popa
mov
sub
arpl
sub
mov
lea
scas
mov
arpl
mov
arpl
outs
icebp
xchg
cmp
jmp
mov
jmp
ret
xor
jmp
test
cmp
xchg
pop
jmp
(bad)
mov
stos
dec
pop
in
fwait
mov
jo
jne
popa
call
retf
stos
dec
jb
xchg
fs
leave
mov
xor
or
mov
jl
mov
mov
lea
imul
jnp
cwde
mov
lds
cmp
imul
pop
(bad)
mov
out
sub
js
test
hlt
jno
repnz
add
and
ins
pop
call
lea
pop
adc
mov
mov
cmc
retf
cli
imul
mov
pop
or
or
add
into
out
test
adc
daa
pop
ins
or
into
dec
retf
or
push
ins
jg
clc
retf
xor
mov
or
mov
pop
int
gs
xchg
push
cmp
or
and
test
or
sbb
xchg
jmp
xchg
xor
bound
stc
leave
pop
dec
jl
(bad)
icebp
gs
test
add
int3
jo
xchg
in
sbb
pop
aas
or
jae
jg
pop
jecxz
xor
sbb
cs
nop
jge
imul
xor
jg
mov
imul
cmp
dec
fdivr
sbb
cmp
dec
retf
cmps
push
cmp
fdivr
sbb
bound
push
cmp
add
xor
dec
fdivr
(bad)
(bad)
nop
dec
je
in
fdivr
sbb
sub
fdivr
sbb
mov
xchg
pop
(bad)
push
cmp
dec
(bad)
push
cmp
outs
call
cmp
mov
(bad)
push
xchg
dec
(bad)
push
cmp
outs
sha256msg1
push
xor
sub
fdivr
or
nop
sub
push
sar
sbb
aas
xchg
inc
sbb
sbb
cmp
sahf
int
add
fdivr
sbb
mov
pop
or
fsubr
push
xor
mov
dec
mov
cmp
pop
or
dec
fsubr
das
cmp
and
nop
dec
pusha
xchg
push
inc
dec
aad
dec
mov
cmp
out
nop
dec
or
out
daa
jle
movs
push
cmp
adc
sub
mov
imul
pop
ins
loope
loopne
popa
ret
out
outs
jg
pop
gs
sub
outs
enter
ja
shl
stc
push
xor
(bad)
popf
jl
fwait
jo
ss
addr16
mov
les
xchg
pushf
jl
mov
mov
pushf
add
(bad)
aad
out
ds
jae
daa
retf
or
mov
mov
rol
pushf
clc
mov
sahf
cmc
retf
cli
dec
(bad)
(bad)
jne
cmp
clc
adc
loopne
sbb
test
mov
or
mov
sbb
loope
sbb
pop
xchg
sbb
clc
sbb
mov
jmp
or
jg
test
mov
or
je
test
clc
cmps
cmp
jle
in
jg
test
jae
arpl
jg
xchg
(bad)
int
gs
jle
xchg
int3
pop
or
or
mov
imul
cli
and
imul
pop
dec
or
out
jmp
inc
xchg
pop
repnz
mov
lock
popf
stos
cdq
je
aam
jae
jns
xchg
sub
xchg
cmp
or
ror
stc
icebp
iret
xor
fisttp
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
aad
add
dec
lea
sub
lea
aad
repnz
(bad)
dec
xchg
fimul
sub
(bad)
int3
push
and
xchg
imul
(bad)
lea
setg
(bad)
lea
lods
cmp
(bad)
fwait
cmps
cmp
stos
sub
loopne
sub
loopne
sub
dec
mov
(bad)
lea
pavgb
sub
adc
and
call
or
rol
setae
sub
lea
dec
test
cmps
int3
fwait
jmp
(bad)
pop
sbb
fld
or
xor
mov
mov
xor
or
sub
lea
add
clc
(bad)
dec
xchg
lods
bound
fimul
and
jl
sub
(bad)
fadd
cmp
outs
sar
rcl
dec
test
push
imul
pop
ins
xchg
push
rep
jg
pop
gs
fisubr
ins
jl
jge
jo
sti
fst
pop
je
fwait
push
aaa
iret
cmp
sbb
js
xchg
or
mov
dec
cmp
xchg
or
cmp
mov
xchg
data16
js
test
or
cmp
lods
call
pusha
iret
(bad)
adc
js
ror
mov
or
ins
jle
mov
test
cli
jns
mov
mov
or
xchg
cmp
ret
or
dec
sub
outs
xchg
mov
mov
test
pop
pop
data16
jle
jae
xor
js
test
push
aam
(bad)
jl
mov
(bad)
sbb
xchg
js
test
test
pop
sbb
inc
clc
outs
cmc
data16
jae
(bad)
loopne
adc
mov
cmp
ins
or
xor
nop
mov
pop
inc
test
inc
jl
cmp
pushf
dec
jno
sbb
loope
jle
outs
call
mov
sar
(bad)
xchg
adc
lds
push
inc
pushf
or
mov
mov
cmps
mov
or
addr16
fs
mov
sub
jg
(bad)
inc
mov
pushf
pop
aad
sbb
jl
inc
sar
cli
loop
jl
inc
mov
mov
popa
nop
pop
mov
inc
mov
popf
push
sbb
mov
popa
dec
push
retf
jge
popa
nop
pop
mov
popa
nop
pop
mov
popa
nop
push
push
xchg
pop
mov
popa
nop
pop
in
inc
mov
popf
pusha
nop
pop
mov
popa
nop
pop
mov
inc
pop
mov
mov
fcomi
popf
pusha
nop
pop
mov
mov
mov
mov
popa
nop
push
mov
nop
pop
mov
popa
loopne
out
mov
xor
nop
pop
mov
popa
nop
pop
mov
popa
nop
pop
mov
div
bound
arpl
xchg
pop
mov
inc
mov
popf
inc
xchg
pop
mov
popa
nop
pop
mov
(bad)
jmp
pop
mov
jnp
dec
jne
mov
mov
fwait
iret
(bad)
repz
push
inc
neg
aad
xchg
test
popf
and
stos
push
bound
popf
xchg
xchg
and
hlt
imul
jae
pop
jmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
imul
pop
ins
adc
pop
gs
stos
or
rcl
jbe
jo
dec
xchg
not
jle
xor
xor
sti
jb
js
repz
cld
ins
add
xchg
(bad)
xchg
dec
aas
jae
mov
call
mov
inc
mov
push
retf
stc
mov
jmp
retf
mov
js
test
test
cld
lea
mov
add
int3
into
fwait
cwde
test
icebp
lahf
test
sbb
nop
cwde
test
mov
ja
sbb
jbe
mov
nop
lock
retf
jb
push
retf
jle
je
leave
int
addr16
sti
and
cld
lea
cmc
retf
pop
cdq
xor
mov
data16
xor
sbb
nop
sbb
pop
addr16
test
cdq
ss
mov
and
cli
jne
mov
mov
test
mov
pop
add
jb
cmp
push
test
or
and
xchg
lods
pop
jb
or
jle
cwde
je
js
leave
imul
mov
sub
mov
bound
sbb
cmp
mov
lahf
mov
lods
sub
shl
mov
stc
sahf
mov
mov
push
fldcw
xor
in
or
hlt
bound
inc
call
call
stc
inc
call
cmp
mov
mov
and
sbb
cwde
inc
sbb
cwde
inc
sbb
push
call
stc
mov
(bad)
pop
and
sbb
cwde
inc
sbb
cwde
inc
sbb
movs
push
pushf
rcl
push
jmp
inc
sbb
cwde
inc
sbb
cwde
inc
jmp
rcl
sbb
cwde
inc
sbb
cwde
inc
sbb
cwde
mov
cmp
adc
fldenv
inc
popf
sbb
cwde
inc
sbb
jl
mov
mov
inc
sbb
cwde
inc
sbb
cwde
inc
sbb
inc
mov
xchg
mov
mov
cwde
inc
sbb
cwde
xor
and
loop
movs
mov
mov
std
imul
sub
push
jae
les
inc
sbb
cwde
inc
sbb
cwde
inc
sbb
mov
inc
call
sub
outs
(bad)
rol
sbb
cwde
inc
sbb
cwde
inc
sbb
mov
arpl
sub
bound
mov
pushf
pop
stos
shr
cmp
cwde
inc
sbb
cwde
inc
sbb
cwde
fs
push
int3
call
sub
mov
cmp
mov
arpl
inc
dec
mov
or
inc
cmp
inc
mov
imul
scas
pushf
pop
dec
shr
cmp
cwde
inc
sbb
cwde
inc
sbb
cwde
mov
cmp
mov
inc
sbb
cwde
inc
sbb
cwde
jno
aad
inc
sbb
cwde
inc
sbb
cwde
inc
cmp
inc
mov
mov
inc
popf
sbb
cwde
inc
sbb
ins
adc
std
mov
(bad)
call
mov
ret
shr
cmp
cwde
inc
sbb
cwde
inc
sbb
cwde
jne
add
cwde
inc
das
sub
inc
sbb
cwde
inc
das
cmps
dec
inc
sbb
cwde
inc
sbb
cwde
fs
push
inc
mov
pop
popf
ret
rol
sbb
cwde
inc
sbb
cwde
mov
stc
mov
mov
sub
dec
pushf
pop
fcmovnbe
out
cmp
cwde
inc
sbb
cwde
inc
sbb
cwde
jne
sbb
cwde
inc
sbb
cwde
inc
sbb
lods
sbb
cwde
inc
sbb
cwde
inc
sbb
cwde
inc
das
cmps
push
inc
sbb
cwde
inc
sbb
cwde
inc
sbb
cwde
fs
push
inc
mov
pop
popf
ret
rol
sbb
cwde
inc
sbb
cwde
inc
sbb
cwde
jne
adc
cwde
inc
sbb
test
fmul
cwde
inc
sbb
cwde
jno
or
inc
sbb
hlt
in
aaa
adc
mov
sub
mov
mov
mov
mov
jbe
xor
mov
test
arpl
mov
jp
xor
ds
xlat
mov
(bad)
mov
xchg
ret
or
jne
adc
cwde
inc
dec
rol
ret
or
inc
sbb
cwde
inc
sbb
mov
or
in
aaa
jmp
(bad)
cmp
fld
fld
dec
mov
shl
call
ret
sar
je
cmps
mov
sub
jnp
jo
pop
jg
mov
call
enter
in
stos
dec
pop
in
lahf
out
in
stos
dec
pop
in
stos
outs
add
sti
loop
jg
test
jl
mov
jg
sub
out
bound
xchg
mov
(bad)
jns
jge
dec
lahf
push
xor
mov
xor
add
xor
test
(bad)
jb
push
lea
inc
ins
jle
mov
ja
pop
or
adc
push
mov
push
ret
add
mov
jg
sbb
ins
or
leave
xlat
retf
cmp
pusha
or
or
ret
xchg
add
sar
pop
(bad)
mov
call
retf
mov
cwde
xor
or
jecxz
inc
xchg
jnp
mov
lea
push
in
xchg
scas
jp
ins
jle
pop
imul
outs
xchg
(bad)
lods
je
xchg
or
clc
mov
jo
mov
jnp
pop
das
sbb
cli
sub
bnd
into
pop
jg
shl
xchg
sti
dec
xchg
out
mov
jmp
xor
add
mov
push
jl
mov
clc
mov
stc
aad
add
aas
je
enter
sub
test
xlat
xor
jmp
sahf
clc
mov
mov
sahf
jmp
cdq
data16
and
stos
sar
cdq
data16
xor
jge
mov
cmc
jmp
sahf
jmp
adc
pop
mov
popa
int
adc
int
adc
int
in
cmp
int3
pusha
adc
lock
int
adc
pusha
daa
xor
dec
mov
mov
mov
dec
fisub
lock
int
adc
int
adc
adc
int
test
pusha
rcl
adc
icebp
adc
int
adc
adc
int3
ja
add
loope
push
push
jmp
(bad)
cli
pop
sub
sahf
in
pop
cmp
arpl
jmp
sahf
jmp
(bad)
mov
cdq
data16
xor
sahf
call
cmp
outs
push
pop
cmp
out
pop
xor
xor
or
xor
loopne
xor
inc
out
pop
xor
sub
popa
lods
sub
adc
pop
pusha
jnp
xchg
pop
jmp
stos
int
fmul
mov
in
stos
dec
pop
in
stos
dec
pop
in
or
scas
mov
cdq
sub
dec
pop
in
stos
dec
pop
in
stos
dec
pop
dec
lea
es
int3
push
dec
stos
int
xchg
jbe
mov
in
stos
dec
pop
in
stos
dec
jns
lea
jg
pop
and
dec
pop
in
stos
dec
pop
in
stos
jnp
jo
jge
leave
idiv
je
mov
ja
mov
test
das
mov
and
fwait
jl
cvtps2pd
sti
stos
out
jns
ss
sub
ins
jle
sbb
mov
jecxz
xchg
jge
(bad)
cmp
js
push
dec
mov
rol
mov
lods
jle
mov
ret
push
sbb
jg
(bad)
cmp
mov
lods
mov
xchg
xor
sti
xchg
mov
cli
mov
push
mov
test
add
in
je
test
mov
jb
lock
test
push
mov
jle
cli
dec
mov
jge
es
sbb
and
mov
pop
aaa
or
sti
shl
loopne
loope
sbb
mov
jbe
xlat
jmp
mov
(bad)
enter
sahf
cmp
adc
fmul
pop
cmp
mov
dec
jnp
jb
cmp
js
test
loopne
adc
aad
fild
inc
dec
xchg
test
mov
test
xchg
xchg
or
test
sbb
jecxz
pop
xchg
jg
(bad)
int3
jle
dec
xchg
xor
sbb
test
xchg
cmp
and
outs
call
imul
in
imul
in
jnp
cmps
pop
in
push
push
jnp
or
in
jnp
(bad)
pop
in
test
push
pop
in
in
imul
push
popa
imul
scas
or
in
add
xchg
outs
jmp
ret
sub
dec
cmp
sub
jmp
cmp
sub
push
fwait
sbb
dec
sbb
sbb
mov
cmp
sub
loop
in
imul
ret
sub
dec
cmp
icebp
cdq
push
push
sbb
div
pop
xchg
cmc
cld
adc
mul
icebp
sbb
in
mov
iret
dec
out
loop
xor
mov
sbb
dec
cmp
sub
or
ret
sub
dec
cmp
sub
cmp
ret
sub
imul
ret
sub
outs
in
or
outs
add
xor
pusha
push
in
dec
cmp
sub
xchg
(bad)
out
popa
inc
out
or
adc
setae
sbb
dec
iret
aaa
or
ret
cmp
sub
outs
in
or
out
add
xor
nop
loopne
sub
dec
loopne
loop
push
xor
xchg
cmp
sub
dec
cmp
sub
mov
cmp
sub
dec
cmp
sub
loop
xor
mov
sbb
dec
loopne
cli
outs
in
emms
adc
hlt
xchg
loope
imul
fmul
in
imul
in
imul
(bad)
sahf
jns
in
bound
or
jns
in
and
out
xchg
jns
in
imul
xacquire
sub
add
in
imul
in
jg
jo
in
repnz
shr
cmp
sub
dec
cmp
xchg
stos
sbb
sub
dec
cmp
or
fs
or
fist
dec
cmp
sub
out
repnz
sbb
out
imul
ret
sbb
imul
ret
sub
outs
arpl
loopne
fimul
mov
cmp
sub
dec
cmp
fs
out
imul
ret
leave
jg
xor
xor
dec
cmp
sub
dec
cmp
std
push
push
or
jnp
xor
sub
dec
cmp
std
push
clc
cld
sbb
out
imul
ret
retf
jg
in
sbb
push
ret
cmp
sub
dec
cmp
test
ret
sub
fs
sub
cmp
sub
jnp
hlt
sub
cmp
sub
push
in
scas
out
imul
ret
sub
dec
or
mov
push
in
cmps
out
imul
ret
sub
fs
or
jmp
push
in
dec
cmp
sub
xlat
out
imul
ret
sub
dec
cmp
leave
jg
cld
sbb
push
ret
cmp
sub
push
cwde
or
jnp
cld
sub
cmp
sub
dec
or
jg
les
cmp
sub
out
repz
sbb
ds
cmp
sub
dec
cmp
xchg
pop
and
ret
sub
test
test
cmp
sub
dec
or
jg
aam
dec
cmp
sub
out
repz
sbb
cs
cmp
sub
jle
fcomp
es
cmp
sub
push
cwde
or
jnp
fsubr
cmp
sub
dec
or
jg
movs
sub
cmp
sub
dec
sbb
std
push
sbb
outs
xchg
movs
js
push
in
dec
cmp
sub
mov
retf
and
call
cmp
sub
dec
fsub
in
out
imul
ret
sub
dec
cmp
sbb
dec
cmp
jge
repnz
out
or
ret
sub
dec
cmp
in
and
xor
adc
out
imul
sub
bound
in
imul
out
xchg
jns
in
imul
cli
add
in
outs
xchg
lods
sbb
fwait
hlt
xchg
scas
xchg
in
adc
push
dec
mov
into
lahf
inc
popf
loopne
sub
out
add
imul
ret
sub
dec
cdq
xor
imul
in
imul
in
jnp
out
sbb
push
jnp
or
in
jnp
push
sbb
push
test
push
sbb
imul
push
popa
imul
scas
or
in
add
jecxz
jo
lahf
mov
dec
cmp
sub
dec
cmp
jns
push
in
dec
cmp
sub
mov
sbb
in
ins
push
in
xchg
jne
jns
pop
xor
mov
sbb
dec
cmp
frstor
xchg
out
xor
in
imul
hlt
ret
in
imul
push
jnp
push
or
pop
in
imul
push
sbb
push
repnz
imul
or
neg
cmp
(bad)
loopne
pop
xor
and
cmp
sub
dec
cmp
test
jmp
or
ret
cmp
sub
dec
cmp
dec
pop
in
imul
in
imul
(bad)
push
jo
in
bound
or
jo
in
and
std
xchg
out
cs
in
imul
inc
add
in
imul
in
jg
clc
adc
push
repnz
ins
outs
or
ret
sub
outs
fwait
loope
pop
cmp
sub
shl
unpcklps
sbb
ret
sub
dec
enter
leave
scas
test
or
jns
cli
add
in
outs
xchg
in
enter
adc
pop
out
imul
out
or
in
loopne
repnz
gs
push
adc
push
loop
dec
pop
push
(bad)
hlt
in
mov
cmp
sub
dec
xchg
outs
jmp
ret
sub
dec
cmp
and
in
imul
hlt
ret
in
imul
push
and
push
or
pop
in
imul
(bad)
pop
in
repnz
push
adc
outs
gs
pop
in
out
sub
data16
pop
xor
and
sbb
dec
xchg
outs
jmp
ret
sub
dec
cmp
icebp
mov
ds
cmp
sub
lock
dec
cmp
sub
dec
cmp
sti
adc
or
add
ja
xchg
mov
adc
xchg
cdq
adc
or
pop
sbb
in
xor
lods
xor
jle
dec
push
mov
dec
pop
in
stos
dec
pop
in
stos
dec
push
retf
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
es
int3
push
gs
aam
repnz
pushf
xchg
or
xchg
fs
mov
mov
leave
retf
loopne
jge
cwde
mov
xchg
into
jo
call
ins
jle
mov
or
jg
xor
fidivr
fs
jb
add
cwde
sbb
icebp
rcl
repnz
pushf
xchg
or
pop
xchg
or
inc
bound
pop
clc
sbb
xor
pop
or
add
mov
adc
or
mov
inc
jle
mov
pop
jns
ins
sbb
pop
mov
mov
pop
dec
push
xor
xchg
cmp
mov
jae
jg
cmps
xor
mov
repnz
pop
aad
mov
mov
sahf
test
mov
data16
lahf
test
pop
scas
xor
cmp
out
dec
mov
lods
cmp
or
or
dec
push
xchg
xchg
test
shl
sbb
dec
or
sti
xchg
sbb
les
imul
lods
xor
es
jge
cmp
stc
scas
xor
jp
cwde
outs
dec
popa
(bad)
enter
jo
outs
call
push
push
and
ds
push
ds
push
ds
push
ds
push
sub
dec
sbb
test
movs
ror
xchg
push
pop
mov
maskmovq
test
(bad)
ficomp
mov
(bad)
jmp
push
sbb
ins
fidivr
movs
ret
test
fwait
xor
cld
push
mov
out
sub
push
adc
push
test
maskmovq
idiv
shl
dec
sbb
test
sub
inc
mov
maskmovq
test
psadbw
sub
push
lahf
(bad)
cli
into
push
movs
ror
maskmovq
test
maskmovq
test
movzx
sub
es
sub
dec
sbb
test
shufps
pop
push
sbb
test
aaa
pop
push
sbb
test
push
cmp
mov
test
cwde
fadd
aam
mov
sbb
or
fsubr
sub
push
rol
add
sub
dec
sbb
test
(bad)
push
mov
test
sub
push
lahf
(bad)
cli
out
movs
ror
maskmovq
test
std
rcl
xor
ror
maskmovq
test
sti
push
imul
or
sbb
test
add
dec
mov
test
maskmovq
test
or
sbb
test
push
ror
test
psadbw
cwde
fnstenv
or
jno
and
ret
sub
imul
or
sahf
mov
ror
ds
dec
sbb
test
and
sub
push
sbb
test
sub
push
rol
add
sub
dec
sbb
test
(bad)
push
mov
test
verw
sub
xchg
aad
jno
adc
push
test
maskmovq
idiv
out
test
push
sbb
test
sub
imul
jmp
sar
push
rol
xchg
adc
push
test
cmps
fidiv
and
jbe
dec
fidivr
outs
into
in
dec
fimul
movs
sar
jns
int3
in
push
mov
jae
pop
jmp
cmps
enter
retf
mov
dec
test
fidivr
test
jbe
and
mov
(bad)
mov
sub
dec
mov
repz
dec
arpl
or
lock
mov
imul
test
imul
dec
adc
dec
popa
rol
mov
shrd
mov
pop
cs
xor
or
jle
cmp
sbb
xchg
lods
nop
lea
sub
cli
jno
js
mov
(bad)
cmp
addr16
out
add
cmp
enter
sbb
mov
repnz
cld
xchg
xor
cmps
addr16
test
mov
add
or
test
mov
push
stc
pop
cwde
test
or
jle
cli
mov
add
dec
dec
dec
stc
jae
jbe
mov
or
sbb
cli
js
test
mov
repz
clc
jg
jle
mov
js
test
ret
xchg
test
add
cwde
mov
mov
xor
inc
int3
jg
pusha
rol
xor
mov
xor
imul
xchg
or
xchg
add
xor
ja
icebp
lea
push
pushf
lock
imul
cdq
ror
dec
dec
adc
dec
dec
adc
dec
dec
adc
dec
dec
adc
dec
dec
adc
dec
dec
adc
dec
dec
adc
dec
dec
adc
dec
dec
adc
dec
dec
adc
jmp
scas
dec
jmp
nop
dec
ret
adc
dec
adc
in
test
lds
stos
dec
jmp
adc
dec
xlat
adc
sbb
icebp
mov
sub
aaa
sub
popf
add
dec
push
aaa
sub
aaa
jge
dec
adc
imul
sub
or
addr16
push
in
jecxz
xor
adc
push
push
aaa
mov
in
mov
gs
rcl
scas
lahf
lea
push
dec
push
aaa
sub
mov
lods
jecxz
jecxz
movs
(bad)
lods
mov
das
dec
adc
dec
outs
adc
fwait
dec
out
and
imul
sub
xlat
cmp
push
push
adc
dec
dec
out
xlat
pushfw
push
mov
mul
dec
sub
aaa
sub
mov
xchg
addr16
adc
out
cmp
cmp
pushf
push
imul
sub
es
dec
add
push
push
jb
ret
dec
add
push
push
sar
push
aaa
or
dec
out
xlat
pushfw
push
lahf
lods
push
push
dec
push
aaa
sub
adc
dec
dec
out
xlat
pushfw
push
mov
mul
dec
sub
aaa
sub
aaa
sub
ror
dec
adc
and
cmp
addr16
mov
data16
dec
sub
aaa
sub
aaa
sub
es
dec
add
push
push
aaa
sub
es
dec
add
push
push
adc
dec
push
aaa
sub
aaa
sub
loope
movs
jl
or
and
sar
push
aaa
sub
aaa
fisttp
adc
fwait
dec
out
xlat
pushfw
push
mov
cmps
(bad)
push
mov
push
dec
fwait
adc
dec
mov
xor
ret
push
push
aaa
sbb
mov
aaa
sub
aaa
sub
sbb
mov
pop
dec
dec
adc
push
push
sbb
mov
scas
mov
dec
cmc
mov
out
and
imul
sub
jmp
push
imul
sub
aaa
sub
cmc
mov
pop
jne
mov
icebp
push
push
sti
add
iret
ret
loope
dec
adc
cs
mov
out
gs
mov
icebp
mov
pop
arpl
dec
sub
aaa
sub
pop
dec
dec
imul
dec
sub
aaa
sub
aaa
sub
dec
(bad)
adc
adc
std
dec
outs
adc
movs
fld
push
dec
xchg
or
push
cmc
mov
aaa
sub
aaa
sub
ja
sub
add
sub
aaa
sub
push
aaa
or
dec
pushf
mov
add
icebp
out
push
mov
push
push
mov
ret
dec
out
and
imul
sub
lds
mov
mov
ret
dec
out
and
imul
ret
test
imul
sub
pop
(bad)
inc
mov
out
sub
aaa
sub
sub
cmp
sub
add
imul
sub
aaa
sub
adc
pop
movs
cmc
popf
movlps
sub
aaa
sub
xchg
or
push
xchg
push
mov
push
xchg
add
push
aaa
fisttp
adc
mov
mov
ret
dec
out
and
imul
sub
dec
les
fwait
dec
out
xlat
addr16
push
fwait
dec
ror
dec
adc
push
push
aaa
fld
sbb
mov
mul
dec
sub
aaa
sub
aaa
sub
lds
ret
dec
mov
fs
aaa
sub
aaa
sub
aaa
fild
jnp
addr16
adc
sub
dec
push
aaa
(bad)
push
pushf
push
lahf
out
or
dec
fwait
adc
dec
fwait
adc
dec
fwait
adc
dec
fwait
adc
and
cmp
and
adc
push
push
adc
dec
dec
sub
aaa
sub
aaa
sub
xchg
add
xor
jb
inc
aaa
or
cwde
imul
or
cli
mov
push
repz
adc
mov
xor
dec
pop
fadd
clc
pusha
call
retf
(bad)
adc
and
ret
xor
clc
stos
xor
or
sbb
retf
mov
or
pop
xchg
or
mov
imul
add
cdq
mov
cmp
mov
js
test
shl
or
lahf
jl
inc
sbb
sahf
push
sahf
clc
sbb
mov
or
and
mov
pop
(bad)
scas
mov
sub
pop
stos
js
test
add
or
test
mov
jbe
not
leave
inc
ins
or
add
push
out
leave
mov
popa
fadd
add
sbb
jge
xchg
sbb
clc
jne
push
jo
fcomp
adc
add
in
pusha
test
cli
jecxz
aam
mov
test
sti
pop
push
ret
fdivr
sti
and
inc
sbb
jbe
or
xchg
mov
icebp
shr
repz
(bad)
adc
xor
xor
rcr
outs
cmp
xor
xchg
scas
cmp
aaa
or
sub
cs
retf
clc
int
adc
gs
or
mov
mov
cld
pop
add
jno
sbb
push
push
add
pop
pop
add
inc
jb
mov
inc
push
cmp
pop
push
ds
bound
call
inc
bound
jae
fiadd
mov
std
and
sub
add
push
xor
(bad)
or
std
and
cdq
push
add
mov
std
and
cdq
or
add
mov
fild
es
lahf
inc
ret
jmp
cmp
add
mov
pusha
xor
mov
or
adc
cdq
std
and
mov
xor
mov
ror
mov
cmp
add
mov
push
add
cdq
std
and
or
out
mov
std
and
mov
int3
xor
sbb
mov
rcr
mov
addr16
add
adc
cdq
std
and
mov
addr16
cmp
adc
cdq
cld
and
mov
ss
mov
loop
adc
lea
sti
mov
xor
inc
and
mov
xchg
call
or
leave
neg
dec
inc
mov
ja
mov
test
enter
or
dec
inc
jle
stos
pop
inc
ss
fstp
mov
mov
inc
jg
and
xor
(bad)
mov
imul
aad
scas
test
jae
repz
jns
(bad)
xchg
out
mov
pop
sub
mov
test
mov
test
int
cmp
bswap
mov
mov
push
xor
xchg
sbb
push
shr
sbb
pop
push
repz
clc
rol
mov
retf
mov
icebp
sbb
inc
jmp
ja
popf
call
jbe
into
mov
repnz
sbb
les
or
cmp
mov
pop
sub
(bad)
mov
jbe
lods
ja
xor
jns
pop
sub
pop
lahf
xor
xchg
sbb
lods
ret
test
cli
iret
cwde
jmp
pop
sbb
mov
sti
jae
fisub
jne
mov
jmp
pop
aad
mov
jne
xchg
jge
fwait
sub
mov
ret
sbb
enter
clc
pop
add
xor
fdiv
je
and
sti
mov
cdq
pop
addr16
ja
ja
mov
pop
popf
cs
lds
add
jmp
push
sbb
pop
jmp
jg
inc
push
jg
test
jbe
in
jle
imul
mov
imul
inc
ins
jg
clc
sub
sbb
adc
pushf
jge
fwait
inc
xchg
cmp
and
xor
or
lahf
sbb
push
mov
js
test
jmp
xchg
push
sbb
data16
mov
(bad)
fistp
mov
repz
cli
xchg
jg
test
bound
test
jno
adc
out
pusha
js
test
push
(bad)
aas
nop
test
mov
cmps
ss
out
sbb
cmp
inc
test
add
test
xchg
jnp
or
push
mov
adc
xchg
xor
cmps
sbb
mov
data16
test
test
addr16
add
mov
scas
adc
cmp
mov
jle
jae
xor
mov
fistp
call
jle
mov
pushf
adc
mov
dec
mov
pop
int
sub
push
mov
hlt
mov
jge
inc
xor
addr16
jmp
leave
xor
pop
mov
jp
adc
jp
adc
fsubr
add
stos
fnstcw
mov
(bad)
shl
(bad)
adc
jnp
cmp
and
adc
aas
retf
popa
and
inc
push
fmul
scas
pop
retf
pusha
and
repz
push
int3
fcomp
imul
pop
js
nop
xor
push
in
stos
dec
pop
in
stos
or
ins
or
dec
push
in
stos
dec
pop
in
stos
dec
pop
in
stos
out
out
jmp
jle
stos
dec
pop
in
stos
dec
pop
in
stos
dec
pop
and
imul
sub
frstor
dec
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
jns
popf
imul
dec
out
or
xchg
jo
jne
popa
call
jmp
out
fadd
jl
in
stos
dec
pop
in
stos
dec
pop
in
stos
dec
sbb
in
jns
in
arpl
pop
jl
in
stos
dec
pop
in
stos
dec
std
pop
lods
or
mov
stos
dec
pop
in
stos
dec
pop
in
stos
dec
nop
sub
cdq
dec
daa
mov
(bad)
mov
std
or
fsubr
je
pop
in
stos
dec
pop
in
stos
dec
pop
in
stos
imul
mov
stos
dec
pop
in
stos
scas
std
mov
fwait
cmps
lds
ins
jge
add
repnz
add
cmp
xchg
fs
ins
test
xchg
pop
cld
retf
jo
arpl
add
add
stc
jae
sar
mov
mov
jle
mov
or
cmovne
xor
stc
jmp
sbb
mov
lea
cmp
test
cli
jmp
addr16
js
test
push
in
popf
js
test
pop
push
add
hlt
add
leave
ins
lods
fimul
xchg
xor
scas
mov
mov
test
ret
xor
jo
xchg
mov
pop
add
(bad)
ss
xchg
int
outs
test
pop
pop
jns
xchg
inc
retf
or
dec
(bad)
icebp
mov
call
stos
aas
or
and
inc
mov
repnz
pop
add
mov
or
jge
sbb
clc
or
mov
enter
sub
sub
sbb
mov
or
in
jmp
pop
xchg
or
cmps
xor
add
cmp
dec
retfw
mov
out
std
ins
test
pop
sub
test
mov
or
mov
sbb
or
idiv
(bad)
mov
(bad)
mov
xchg
push
or
mov
retf
cdq
sbb
jae
sbb
iret
(bad)
jae
(bad)
mov
iret
(bad)
jae
xlat
movs
jns
jge
arpl
ins
imul
or
push
shl
(bad)
jge
arpl
ins
jne
ror
iret
(bad)
jae
(bad)
mov
pop
repz
std
inc
movs
jae
sbb
jns
jge
arpl
ins
inc
jno
scas
dec
dec
jg
not
mov
cdq
sbb
cdq
sbb
cdq
fbstp
dec
push
fild
popa
sbb
jmp
push
fild
popa
aaa
sbb
dec
dec
icebp
cmps
daa
dec
shl
push
mov
stos
xor
(bad)
ins
cdq
mov
mov
cmp
mov
stos
cmp
retf
mov
cdq
mov
dec
jno
scas
jae
std
cmps
popa
cdq
xchg
cmps
inc
adc
retf
cdq
popa
cdq
mov
ins
xor
movs
xor
mov
jmp
stos
adc
retf
test
stos
adc
retf
mov
xchg
mov
(bad)
rcr
jge
mul
(bad)
mov
lahf
mov
icebp
cmps
daa
dec
shl
inc
xlat
out
stos
add
lea
dec
rol
jae
sbb
ja
fisttp
xor
push
sbb
popa
push
retf
mov
jns
scas
inc
push
mov
mov
fwait
ins
das
push
xlat
mov
imul
xchg
rol
stos
pop
shl
inc
(bad)
stos
stos
xor
movs
imul
xchg
shr
stos
adc
movs
add
scas
inc
push
mov
mov
fwait
ins
and
inc
xchg
mov
sbb
popa
jno
mov
dec
fild
inc
push
mov
mov
dec
push
fild
jae
shl
ja
stc
mov
icebp
ins
or
stos
popa
jg
or
adc
sbb
dec
inc
fbld
aaa
push
jmp
cmps
imul
stos
inc
inc
std
lahf
add
pop
icebp
cmps
and
cmps
ins
jno
mov
sbb
popa
jno
mov
inc
jge
test
add
adc
icebp
test
fld
stos
pop
rol
dec
inc
lds
imul
ret
stos
pop
std
cmps
imul
cmps
dec
jg
ins
sub
push
mov
mov
sbb
popa
jno
mov
jae
cmps
daa
dec
shl
cdq
xchg
popf
jns
mov
mov
xchg
cmps
inc
add
movs
inc
inc
sar
imul
jecxz
jno
mov
jae
cmps
daa
dec
shl
cdq
xchg
cmps
inc
add
movs
inc
inc
sar
imul
jecxz
jno
mov
dec
fild
inc
push
mov
mov
jns
shl
popa
imul
ret
stos
pop
(bad)
lea
retf
mov
aaa
sbb
jne
jmp
jns
shr
stos
pop
rol
sub
mov
repz
mov
and
push
std
jecxz
inc
mov
stos
pop
shl
pop
iret
ins
and
inc
mov
jae
fistp
inc
xor
mov
shr
jge
scas
inc
push
mov
dec
push
(bad)
ja
leave
mov
shr
push
std
mov
inc
fild
popa
pop
shr
jge
scas
inc
push
add
aaa
fstp
or
push
xchg
stos
cmp
jmp
pop
cdq
xchg
mov
jne
shr
inc
fild
jne
sbb
jne
(bad)
stos
adc
mov
jno
loope
inc
rol
stos
pop
rol
popa
inc
mov
jno
fwait
mov
dec
shl
pop
rol
sub
cdq
xchg
cmps
inc
pop
xrelease
lds
ins
jno
mov
sbb
popa
jno
mov
inc
(bad)
popa
aaa
sbb
jns
xchg
popf
popa
pop
sbb
popa
jno
mov
inc
(bad)
popa
sbb
in
inc
rol
popa
sbb
leave
popa
jg
mov
xor
mov
shr
jae
lea
rol
jnp
shr
popa
pop
icebp
cmps
and
mov
sbb
retf
popa
jno
and
icebp
cmc
imul
mov
inc
cmc
mov
popa
inc
icebp
shr
scas
outs
inc
shr
stos
pop
rol
popa
inc
icebp
lds
shr
xor
jge
stos
popa
jg
ins
add
mov
inc
fild
ins
push
dec
sub
inc
icebp
int
inc
fbld
stos
cmp
mov
push
dec
or
inc
(bad)
cdq
fbstp
aaa
push
icebp
repz
push
(bad)
jae
ret
stos
aaa
test
jno
ror
popa
aaa
sbb
aaa
push
icebp
out
arpl
mov
inc
shr
iret
aaa
sbb
aaa
push
icebp
jmp
inc
fbld
ja
fild
add
pop
sbb
popa
jno
jmp
adc
scas
inc
or
mov
cdq
xchg
cmps
dec
jno
mov
or
mov
cdq
xchg
cmps
inc
or
mov
or
mov
ja
mov
ja
mov
jne
fwait
ins
or
inc
ror
arpl
xrelease
std
out
stos
cmp
icebp
cmps
dec
pop
shr
cdq
lahf
mov
icebp
cmps
add
ja
popf
sub
icebp
cmps
add
ja
jecxz
jno
cmps
dec
jg
mov
dec
pop
lds
xor
mov
shr
dec
dec
xor
mov
shr
stos
or
sub
ror
popa
pop
icebp
ins
xor
inc
retf
lea
fisttp
dec
jno
jmp
dec
stc
test
stos
adc
retf
mov
inc
mul
pop
sbb
retf
jnp
test
inc
cdq
mov
cmps
dec
jg
mov
popa
jno
mov
push
xlat
mov
lds
jne
sbb
popa
jno
cmps
pop
pop
(bad)
scas
dec
push
mov
ins
and
imul
das
push
xlat
mov
ja
sbb
dec
pop
test
stos
adc
scas
inc
xor
popf
inc
aaa
sbb
jns
ror
pop
icebp
ins
and
ret
jns
shl
ins
sbb
int
jg
iret
inc
dec
icebp
mul
jmp
ja
mov
ins
and
jg
cmps
jno
rol
stos
aas
rol
outs
inc
fisttp
imul
stc
test
stos
aas
rol
dec
add
mov
sbb
retf
popa
jno
mov
or
ins
cmp
cmps
ja
and
cdq
xchg
cmps
dec
jno
mov
aaa
retf
mov
inc
imul
inc
std
cmps
gs
inc
imul
mov
inc
jge
stos
inc
sbb
mov
retf
scas
inc
push
sar
ins
inc
(bad)
adc
test
fild
ins
dec
fild
jne
mov
and
mov
icebp
jmp
(bad)
aaa
sbb
jnp
shl
jno
out
aaa
sbb
and
cmps
inc
push
xchg
jmp
pop
std
cmps
imul
scas
inc
dec
fnsave
jno
stc
ins
sub
push
lahf
mov
jns
test
shl
inc
shr
popa
pop
icebp
ins
and
sbb
xchg
cmps
jae
icebp
cmps
xor
jno
jecxz
jno
test
sub
icebp
cmps
or
sbb
sbb
popa
imul
ins
add
test
pop
std
cmps
imul
push
retf
mov
icebp
out
stos
aas
rol
jae
std
ins
or
imul
mov
jno
in
sbb
retf
mov
cdq
popf
mov
stos
pop
sar
jno
scas
jae
in
cmps
or
dec
icebp
lahf
and
stos
dec
dec
stc
test
sbb
popa
jno
cmps
ins
jae
mov
dec
pop
std
mov
and
mov
cmp
shl
pop
sbb
leave
popa
push
mov
mov
push
xchg
popf
add
pop
shl
cdq
xchg
cmps
inc
xor
cmps
dec
add
sbb
popa
jno
mov
test
xor
pop
sub
aaa
sbb
dec
push
fild
inc
dec
fbld
popa
inc
mov
stos
popa
aaa
sbb
inc
pop
std
test
pop
rol
stos
pop
shl
jne
stos
popa
or
mov
inc
shr
jno
mov
ror
sub
dec
dec
popa
jge
ins
or
jge
mov
imul
mov
dec
aas
ror
sub
pop
lds
stos
sbb
mov
pop
fild
cmp
test
sar
cdq
lahf
mov
jne
shl
popa
jge
mov
dec
push
ror
jns
sbb
inc
push
std
lahf
or
pop
ror
inc
pop
icebp
xchg
xor
stos
pop
(bad)
mov
push
std
test
aas
icebp
mov
xlat
retf
jns
fwait
ins
xor
mov
ins
inc
repz
aas
retf
movs
add
jne
mov
icebp
mov
xlat
retf
jns
mov
or
pop
std
cmps
imul
cmps
dec
jg
mov
gs
(bad)
add
scas
xor
inc
sar
pop
fwait
movs
arpl
fild
cmovnp
mov
jae
(bad)
inc
fistp
popa
jno
mov
jno
lahf
ja
ret
cmps
stos
dec
icebp
mov
jg
stos
jne
lds
jne
icebp
mov
inc
fistp
popa
inc
shr
push
shl
jae
movs
jne
lds
inc
(bad)
mov
(bad)
stos
jge
icebp
ins
add
pop
std
test
sbb
jnp
(bad)
mov
cdq
fnstsw
jns
icebp
cmps
ja
fld
stos
push
rol
ja
ret
cmps
stos
push
rol
ja
ret
cmps
stos
pop
sar
pop
icebp
cmps
or
inc
xchg
outs
pop
shr
retf
test
xor
movs
or
test
shr
inc
retf
test
xor
scas
jae
std
mov
jns
movs
arpl
shl
stos
add
ror
ja
(bad)
ins
aaa
push
icebp
(bad)
dec
push
std
out
arpl
icebp
popa
jno
lea
repz
dec
push
shr
push
icebp
cmc
jne
(bad)
dec
adc
mov
push
ret
test
aaa
push
icebp
cmc
jne
(bad)
dec
pop
rol
popa
jge
ins
ins
inc
retf
test
daa
jge
cmps
xor
mov
imul
add
xor
jns
lds
xor
cmps
dec
pop
icebp
cmps
or
inc
lds
rcl
stos
dec
ins
stos
mov
ds
nop
fwait
outs
pop
xor
ins
stos
jb
sbb
cwde
sbb
mov
pop
add
adc
dec
mov
ds
mov
outs
add
cwde
aas
dec
mov
ds
mov
sbb
mov
push
add
cwde
aas
dec
mov
ds
mov
adc
stos
mov
ds
mov
fs
cwde
aas
dec
mov
ds
jp
sbb
stos
mov
ds
mov
jne
stos
cwde
div
and
xchg
push
daa
cwde
add
pop
bswap
xchg
dec
sub
cmp
xchg
pop
sub
cwde
leave
stos
dec
addr16
mov
repnz
or
dec
xlat
loopne
retf
add
aad
and
mov
jle
imul
or
jge
call
dec
push
cmp
jle
mov
bnd
mov
imul
repz
dec
sbb
cmp
cmp
jg
shr
add
addr16
nop
add
and
fcomp
pop
inc
sbb
sbb
popf
push
mov
ins
js
test
ret
and
ins
test
mov
cmp
jg
popa
rcl
stc
or
jbe
lods
mov
xor
retf
clc
imul
jae
xchg
adc
pop
sbb
push
and
add
(bad)
xchg
sbb
push
ret
jbe
lea
ret
or
retf
adc
add
jae
sbb
sbb
pop
ret
test
clc
aaa
or
mov
gs
or
sar
fadd
retf
pop
pop
ret
in
mov
pop
sub
jg
dec
xchg
xor
xor
test
mov
or
loopne
or
push
add
push
jmp
out
cmp
adc
imul
cdq
leave
mov
cdq
xchg
out
cs
in
pop
mov
in
pop
mov
dec
out
cmp
ds
dec
out
jmp
fcom
jmp
ret
cmp
cmp
cmp
cmp
push
test
ret
mov
je
or
cmp
or
loop
mov
pop
jp
ret
cmp
and
or
cmp
mov
(bad)
ror
ret
cmp
push
jp
ret
cmp
cld
jnp
ret
dec
scas
bound
mov
in
pop
mov
xchg
xor
leave
mov
inc
mov
xchg
fadd
shl
push
fisttp
pop
(bad)
lock
xchg
dec
lds
test
call
pop
jmp
jg
aad
jg
test
jl
mov
jle
imul
stos
jnp
call
div
cmps
jl
xor
cs
jmp
jne
or
pop
jle
imul
je
repz
mov
in
jne
repz
cs
mov
repnz
clc
jge
add
sbb
or
aas
imul
cli
push
ret
fidiv
jle
mov
pop
inc
jle
mov
or
loope
adc
mov
mov
test
add
test
cld
call
add
xchg
ins
or
pop
sbb
sti
or
mov
out
and
mov
xchg
pop
pop
das
or
adc
gs
jp
(bad)
shl
repnz
dec
imul
mov
xchg
je
mov
jl
mov
mov
cmp
pusha
or
das
xchg
xor
jle
mov
shl
jae
stos
add
or
push
mov
cs
jns
in
popa
or
pusha
or
inc
pop
push
jae
rcl
repz
in
sub
pusha
or
pusha
or
inc
or
pusha
or
pusha
or
pusha
cmp
pusha
or
pusha
or
pusha
or
mov
cs
repz
or
pusha
or
push
adc
dec
repz
or
pusha
or
pusha
or
popa
or
pusha
or
mov
outs
scas
mov
aam
les
pusha
add
inc
mov
push
retf
bound
mov
or
dec
(bad)
cli
mov
xchg
sub
mov
mov
xor
dec
pop
dec
(bad)
pop
pop
scas
add
mov
outs
jg
pop
gs
repnz
jge
imul
ins
jg
call
in
sbb
lea
push
push
inc
sahf
scas
push
mov
loope
call
sbb
sar
call
(bad)
push
add
sub
(bad)
mov
jae
push
mov
pop
push
jle
mov
bswap
mov
test
jg
add
scas
add
mov
xchg
cmp
mov
test
add
jle
push
push
(bad)
mov
stos
adc
sbb
adc
push
je
mov
sti
lea
jns
xor
jno
imul
stc
mov
pop
ja
cmp
xchg
jp
or
test
fisttp
lods
sub
clc
retf
mov
int
or
das
mov
jae
pop
pop
or
sub
pop
xchg
shl
xor
jg
int
test
(bad)
mov
js
nop
or
pop
cmp
mov
vprotd
or
inc
into
xchg
push
sub
pop
sub
(bad)
shl
cmp
dec
shl
test
push
jmp
pop
push
shl
sub
enter
sar
sub
aam
cmps
pop
shl
cmp
mov
or
repz
scas
add
pop
aam
jne
repz
repz
repz
mov
or
repz
repz
repz
repz
push
jo
push
push
int3
mov
pop
cmp
cmp
pop
xchg
mov
push
add
mov
pop
aam
xchg
pushf
xor
(bad)
pop
arpl
xchg
ret
cmp
cmps
popa
jbe
or
imul
mov
mov
aam
enter
imul
or
rol
jno
or
jge
jge
dec
aas
test
sbb
lock
adc
mov
add
xchg
xor
call
retf
js
test
ret
js
test
test
clc
jns
xchg
js
fistp
jmp
retf
mov
ret
in
mov
pop
dec
jle
mov
shl
push
dec
sbb
sub
popf
sbb
push
jl
sbb
lods
clc
lea
or
add
test
mov
sub
cmp
jo
inc
mov
mov
into
cmp
loop
xchg
cmp
push
sub
and
je
scas
xor
pop
sbb
push
xbegin
loope
adc
xchg
cmp
lods
test
or
stc
push
sahf
pop
jo
scas
enter
cmp
sbb
ret
mov
lods
pop
cmp
cs
jl
frstor
in
sub
mov
popa
das
mov
inc
or
scas
inc
push
test
lds
and
or
jg
cmp
mov
lods
pop
lods
pop
ins
mov
pusha
or
pop
lods
daa
imul
and
mul
push
pusha
xor
retf
loop
pusha
dec
adc
mov
push
jecxz
pusha
jmp
lahf
ror
cmp
mov
xor
nop
retf
mov
retf
mov
xchg
retf
mov
retf
mov
xchg
retf
mov
xchg
retf
mov
jg
jecxz
jg
mov
out
jg
mov
mov
mov
xchg
retf
mov
mov
lea
mov
sub
xchg
jae
sbb
jmp
sbb
imul
sbb
xor
pop
sbb
mov
hlt
loopne
(bad)
sbb
xchg
xchg
adc
in
xlat
cmp
in
mov
sbb
jne
push
xchg
add
popf
pop
xchg
jns
sbb
and
push
adc
xchg
das
lods
sbb
imul
xchg
jmp
sbb
test
in
xchg
adc
and
pop
xchg
add
sbb
test
adc
xchg
popa
in
xchg
pop
test
xchg
xchg
js
xchg
sbb
scas
sbb
dec
add
xchg
shl
sbb
(bad)
sbb
jmp
sub
xchg
mov
jmp
and
xchg
adc
jbe
xchg
shr
sbb
dec
scas
sbb
imul
iret
cmp
xchg
cmp
sbb
jnp
pushf
xchg
inc
add
inc
imul
xchg
scas
pop
adc
jae
xchg
cmp
jg
xchg
popa
cmp
xchg
sti
cmp
xchg
xchg
sub
xchg
jns
adc
jl
xchg
mov
stos
adc
jne
xchg
jns
adc
dec
adc
push
in
xchg
cmc
ficom
xchg
or
adc
xchg
adc
mov
adc
nop
jmp
xchg
cmp
adc
lock
xor
inc
xchg
not
inc
xchg
mov
popa
xchg
inc
mov
xchg
lods
cmp
push
xchg
and
push
xchg
leave
dec
push
xchg
fldenv
push
xchg
arpl
push
xchg
lea
xchg
repz
xchg
xor
setae
push
xchg
xchg
sub
xchg
inc
aam
xchg
xchg
push
xchg
mov
mov
xchg
lds
mov
xchg
icebp
add
xchg
aas
cmps
mov
xchg
xchg
outs
mov
xchg
and
xchg
repz
xchg
add
mov
xchg
xor
mov
xchg
ret
xor
xchg
(bad)
fnstcw
xchg
lahf
mov
mov
xchg
sbb
mov
xor
mov
mov
pusha
lock
fst
not
ret
in
not
fstp
xchg
icebp
add
not
xlat
pop
not
iret
pop
not
cmps
pop
not
xchg
in
not
pop
je
xchg
aaa
test
call
stos
cwde
xchg
(bad)
mov
call
test
leave
mov
mov
mov
mov
mov
call
add
mov
retf
mov
jg
imul
mov
scas
call
ins
or
loop
mov
imul
xchg
jl
add
or
test
je
xor
dec
lods
dec
fwait
or
mov
sbb
ja
xchg
test
mov
mov
cwde
xor
mov
sbb
outs
call
jg
popa
rcl
ins
jg
clc
push
dec
or
mov
and
mov
jnp
jae
mov
lea
jmp
in
js
test
or
jmp
int3
jg
test
pop
push
mov
pop
sbb
cld
lds
cmp
add
mov
ret
jbe
gs
div
inc
add
sbb
stc
mov
pop
mov
or
cmp
push
enter
xor
(bad)
or
cmc
xchg
xor
or
xor
mov
repnz
cli
mov
push
cmp
xchg
cmp
jae
cmp
pusha
lods
ds
or
ja
push
mov
cwde
ins
mov
push
ss
push
jl
test
push
jl
test
push
jl
test
push
jl
test
push
jl
test
push
jl
test
push
jl
test
push
jl
test
push
jl
test
push
jl
test
push
jl
test
push
jl
test
push
jl
test
push
jl
test
push
jl
test
push
jl
test
inc
jge
test
push
js
test
push
jl
mov
push
pop
lods
jae
xor
push
push
lods
jg
xor
push
dec
lods
imul
push
cmp
lods
adc
push
js
test
pop
jl
icebp
push
sub
lods
or
jp
test
push
js
test
cmp
push
js
test
and
js
test
das
jl
das
push
js
test
fistp
push
jl
stos
mov
mov
test
push
push
mov
push
jl
test
sbb
test
sbb
test
sbb
push
jbe
enter
scas
cdq
push
scas
push
sti
lods
inc
dec
xor
data16
sahf
push
push
scas
push
sti
push
lods
inc
dec
cmp
push
jl
mov
push
jl
scas
(bad)
add
and
test
sbb
mov
push
jl
scas
imul
and
test
sbb
xchg
sbb
mov
push
cmp
mov
push
jl
mov
sbb
nop
sbb
mov
push
ins
xor
push
je
mov
push
jl
mov
sbb
lods
aaa
cld
xor
push
jp
sub
mov
push
or
movs
dec
jbe
test
pop
or
loopne
jle
test
push
jl
mov
push
jl
mov
test
push
cmps
push
inc
jle
push
jl
cmps
inc
inc
jle
push
jl
mov
push
jb
nop
sbb
outs
pop
outs
ds
jge
test
test
jb
nop
sbb
sahf
pop
jp
loopne
jge
test
test
push
loopne
jge
test
mov
aaa
test
push
jl
mov
dec
xor
jae
mov
push
jb
nop
sbb
sahf
pop
jp
loopne
jge
test
push
jl
stos
xlat
jmp
test
nop
jg
test
mov
ss
inc
repnz
jge
test
inc
repnz
jge
test
inc
repnz
jge
test
pop
outs
cs
jle
test
push
jl
popa
inc
outs
xor
inc
jp
sub
and
inc
outs
xor
inc
jb
mov
mov
test
sbb
sub
js
mov
test
jp
loopne
jge
test
sbb
mov
test
test
pop
outs
cs
jge
test
mov
jle
loopne
jge
test
test
jb
mov
test
test
pop
jp
loopne
jge
test
mov
cmp
mov
aaa
test
mov
jb
mov
xchg
ss
pop
jp
loopne
jge
test
sar
stos
push
(bad)
mov
push
(bad)
xor
pop
jge
test
daa
je
test
dec
jbe
test
pop
xor
aas
cmps
inc
gs
push
jl
lods
inc
outs
cmp
push
jl
mov
push
jl
fst
test
mov
aaa
test
inc
jne
dec
push
jl
mov
push
jl
mov
test
push
cmps
push
fs
push
jl
cmps
inc
gs
push
jl
cmps
inc
gs
push
jl
cmps
push
fs
push
jl
mov
push
jp
mov
ds
jge
test
test
push
cmps
push
fs
push
jl
movs
push
cmc
imul
(bad)
jg
test
push
jl
mov
push
jl
test
fbstp
inc
push
jl
test
fbstp
pop
push
jl
test
fbstp
push
push
jl
test
inc
push
jle
push
jl
mov
push
jp
mov
dec
js
mov
mov
push
push
lods
inc
pop
xor
pusha
js
mov
push
loopne
jge
test
mov
jp
rcl
adc
push
jl
mov
push
jl
pop
pop
push
loopne
jge
test
test
push
cmps
inc
push
jle
push
jl
cmps
inc
push
jle
push
jl
cmps
push
push
jle
push
jl
mov
push
jl
jmp
test
push
cmps
push
push
jle
push
jl
cmps
inc
push
jle
push
jl
cmps
scas
jne
dec
push
jl
mov
push
jl
mov
mov
push
cmps
push
push
jle
push
jl
stos
cmc
js
sub
scas
sar
es
aad
fcom
sub
push
enter
xor
cmp
push
ins
xor
push
je
mov
push
jl
mov
sbb
sbb
ss
push
jl
cmps
inc
push
jle
push
jl
lods
mov
xor
es
or
daa
cmps
inc
push
jle
push
jl
lods
inc
pop
cmp
push
jl
mov
push
jl
mov
push
jl
scas
jns
(bad)
test
jl
fstp
ss
push
xchg
repz
push
je
push
push
jl
cmps
inc
push
jle
push
jl
lods
inc
pop
cmp
push
jl
stos
fdivr
mov
push
jl
movs
push
movs
imul
pop
xor
ss
pop
xor
ss
pop
xor
ss
pop
xor
ss
cmp
cmp
xor
push
mov
les
mov
scas
push
icebp
lods
inc
adc
mov
push
jp
cwde
push
push
cmps
inc
adc
aaa
cmps
inc
adc
aaa
scas
push
icebp
dec
lods
inc
adc
mov
push
jl
scas
pop
xor
(bad)
cmps
inc
adc
aaa
cmps
push
adc
push
push
jl
lods
inc
adc
mov
push
jl
mov
push
jl
stos
cmp
es
pop
xor
ja
inc
adc
lods
inc
adc
scas
cmp
cmp
push
jl
push
pop
xor
es
pop
xor
aas
cmps
inc
adc
lods
inc
adc
scas
cmp
xor
push
sbb
sub
ins
xor
test
push
jl
stos
in
jb
mov
push
jo
mov
inc
jp
loopne
jge
test
sbb
les
pop
loopne
jge
test
mov
or
test
cmp
xor
jae
mov
push
ins
xor
sbb
mov
push
jl
mov
sbb
rcr
ss
sbb
rcr
ss
push
jl
scas
dec
adc
mov
xor
cmp
push
jl
mov
sbb
and
cli
mov
stos
mov
mov
test
push
push
mov
push
jl
test
sbb
test
sbb
test
sbb
push
jbe
enter
scas
cdq
push
scas
push
rep
inc
add
scas
fisub
mov
push
push
scas
push
repz
lods
inc
add
mov
push
jl
mov
push
jl
scas
fiadd
and
test
sbb
mov
push
jl
scas
sub
xor
sbb
rcr
mov
test
sbb
mov
push
cmp
mov
push
jl
mov
sbb
rcr
xchg
ss
sbb
mov
push
je
mov
push
jl
mov
sbb
lods
aaa
cld
xor
pop
jp
sub
mov
movs
dec
jbe
test
pop
or
loopne
jle
test
push
jl
mov
push
jl
mov
test
push
cmps
push
add
pop
push
jl
cmps
inc
add
mov
push
jb
rcr
pushf
ss
pop
outs
ds
jge
test
test
jb
rcr
test
test
pop
jp
loopne
jge
test
test
push
loopne
jge
test
mov
aaa
test
push
jl
mov
add
inc
sahf
jae
mov
push
jb
rcr
test
test
pop
jp
loopne
jge
test
push
jl
stos
xlat
jmp
mov
add
into
and
sub
inc
jl
out
xor
iret
pop
sbb
addr16
ret
icebp
xor
cdq
mov
(bad)
xlat
sbb
jne
rol
mov
fidiv
jne
lds
das
data16
daa
lock
or
or
sbb
lock
(bad)
jbe
adc
mov
or
(bad)
jl
sahf
ja
adc
jbe
inc
mov
jbe
adc
push
jl
test
fnstsw
mov
mov
mov
adc
push
sbb
scas
push
rol
fnstsw
jbe
adc
stc
or
(bad)
jl
mov
push
jl
test
fnstsw
loope
mov
(bad)
jl
test
stc
or
(bad)
jl
ret
mov
(bad)
jl
mov
push
je
test
fnstsw
jno
mov
(bad)
jl
mov
push
ja
(bad)
jl
mov
stc
or
(bad)
jl
mov
push
je
test
fnstsw
icebp
or
(bad)
jl
push
cmp
inc
and
daa
lock
stos
pop
aam
and
push
sbb
ss
sub
and
and
ss
and
and
and
ss
cmp
inc
and
and
aaa
stos
pop
aam
and
push
sbb
dec
ja
fcmovnu
jl
inc
jno
cmp
and
aaa
jge
lods
outs
mov
jl
mov
adc
and
aaa
(bad)
jbe
adc
adc
mov
mov
adc
sbb
jbe
adc
pop
repnz
and
fisttp
mov
(bad)
jl
mov
push
jl
test
jbe
adc
das
push
mov
test
jbe
adc
loope
mov
mov
adc
xchg
or
mov
adc
fnstsw
jbe
adc
dec
push
push
sub
push
jl
(bad)
jbe
adc
mov
and
daa
push
mov
mov
sub
loope
mov
mov
jbe
adc
and
test
jbe
adc
lds
adc
(bad)
jne
sbb
stos
out
mov
jbe
adc
push
sti
aas
mov
jbe
adc
push
pop
adc
jbe
adc
jbe
adc
cmp
pop
and
ss
int3
inc
and
inc
jnp
mov
adc
jbe
xor
pop
sbb
jbe
adc
call
mov
ds
jl
mov
adc
aad
xchg
(bad)
jl
test
jbe
(bad)
stc
adc
jbe
inc
mov
jbe
adc
jbe
adc
jg
mov
dec
adc
mov
jl
mov
adc
jl
xor
push
ds
jl
mov
adc
jbe
adc
(bad)
jne
sub
and
push
or
mov
adc
ss
mov
push
jbe
adc
jbe
adc
shl
pop
push
je
test
daa
lock
(bad)
jbe
adc
jbe
ds
jbe
adc
mov
lock
(bad)
jbe
adc
xor
inc
and
fsub
out
inc
jl
(bad)
jbe
adc
cmp
imul
lock
(bad)
jbe
adc
jbe
adc
push
sti
xor
push
jl
rcl
cmp
push
jl
das
dec
adc
or
push
pop
adc
jbe
adc
mov
ret
jbe
je
stos
sub
movs
ins
frstor
push
jp
mov
inc
pop
ss
jl
mov
adc
ss
inc
xchg
jl
(bad)
jbe
adc
jbe
adc
jp
mov
lods
jge
test
push
jl
test
jbe
adc
inc
enter
pop
adc
in
nop
or
fsubr
retf
aaa
clc
push
or
fnstsw
jbe
adc
mov
jl
and
jbe
adc
jbe
fcmovne
sar
push
mov
pusha
and
mov
adc
sar
mov
lods
jge
test
push
jl
test
jbe
adc
inc
rcl
mov
adc
inc
or
(bad)
jbe
adc
push
push
jnp
jge
test
sub
xlat
push
cdq
daa
lock
(bad)
jbe
adc
pop
pop
adc
inc
sbb
mov
adc
jbe
adc
push
sti
ds
shl
mov
pop
stos
mov
rcr
dec
das
inc
pop
push
(bad)
jl
mov
adc
jbe
adc
jbe
mov
mov
adc
ds
adc
(bad)
jns
sub
cmp
daa
lock
loope
cmps
mov
dec
int
scas
sbb
ss
sbb
and
daa
lock
sbb
test
jbe
adc
push
stc
cmp
pop
adc
and
push
pop
adc
jbe
adc
ret
mov
aaa
(bad)
jbe
adc
pop
jle
mov
adc
jbe
mov
mov
jl
(bad)
jbe
adc
jbe
adc
jle
mov
adc
push
cli
hlt
push
pop
adc
and
mov
or
(bad)
jl
xchg
gs
aaa
(bad)
jbe
adc
jbe
adc
cmc
or
test
jbe
adc
jbe
fmul
push
mov
fnstsw
jbe
adc
xchg
or
push
pop
adc
jbe
adc
nop
daa
lock
inc
fwait
outs
sbb
daa
lock
(bad)
jbe
adc
jbe
cmp
daa
lock
jbe
adc
jbe
push
iret
aad
xchg
fimul
aaa
test
jbe
adc
pop
sbb
fadd
push
jl
(bad)
jbe
adc
jbe
adc
stc
and
leave
or
mov
adc
repnz
fucom
lods
xor
adc
ror
sub
daa
lock
xchg
arpl
sbb
test
jbe
adc
dec
pop
fsub
fnstsw
push
xchg
push
mov
push
pop
adc
jbe
adc
sub
inc
and
jbe
adc
jbe
adc
lock
jns
push
aaa
test
jbe
loop
test
enter
(bad)
jbe
adc
push
test
jns
push
aaa
test
jbe
adc
test
mov
jl
(bad)
jbe
adc
jbe
adc
daa
data16
(bad)
jl
ins
xchg
inc
dec
jbe
push
scas
xor
ror
test
push
jl
fld
adc
jbe
adc
ficom
test
jbe
adc
adc
adc
jbe
aaa
jge
lods
jl
push
jl
mov
adc
jbe
loop
test
jp
aaa
(bad)
jbe
adc
jbe
mov
push
lods
int3
adc
mov
adc
scas
xchg
das
jge
lods
in
push
jl
mov
adc
jno
aaa
(bad)
jbe
adc
jbe
cmp
mov
or
jl
(bad)
jbe
adc
pop
lods
pop
adc
mov
adc
xor
adc
jbe
repnz
push
jl
rol
or
add
ss
sbb
test
jbe
adc
pop
push
or
lock
(bad)
jbe
adc
jbe
adc
ret
fist
mov
adc
cmc
or
test
jbe
adc
ja
adc
push
xchg
sub
fdivr
mov
adc
dec
push
and
pop
adc
jbe
adc
es
aaa
test
jbe
adc
mov
and
mov
adc
jp
mov
fnstsw
daa
call
daa
(bad)
jbe
adc
jbe
mov
inc
pop
sahf
(bad)
jl
mov
adc
icebp
or
mov
adc
push
mov
and
pop
adc
inc
shl
jbe
adc
pop
push
add
push
adc
scas
jge
cmp
std
ds
fs
lahf
and
sub
adc
jbe
cmp
mov
or
jl
(bad)
jbe
adc
jbe
adc
cmp
pop
aaa
test
jbe
adc
scas
pop
neg
fnstsw
inc
pop
xchg
(bad)
jl
mov
adc
jbe
and
pop
and
pop
adc
jbe
adc
jl
xor
pop
aaa
test
jbe
adc
imul
aaa
test
jbe
adc
push
(bad)
cmp
dec
aam
and
pop
test
jns
pop
aaa
test
jbe
loop
test
shl
aaa
(bad)
jbe
adc
jbe
out
push
jl
mov
adc
dec
lods
or
push
jl
mov
adc
jbe
or
push
pop
adc
push
test
jns
pop
aaa
test
jbe
adc
push
pop
adc
jbe
cmp
mov
or
jl
(bad)
jbe
adc
jbe
adc
cmp
pop
aaa
test
jbe
adc
scas
ja
(bad)
jl
rol
or
cld
cmps
or
inc
inc
aaa
test
jbe
adc
jbe
adc
jbe
mov
(bad)
jl
mov
adc
fnstsw
jnp
push
iret
aad
mov
fnstsw
jbe
adc
jbe
xor
xchg
or
fst
aaa
test
jbe
adc
xchg
adc
aaa
(bad)
jbe
adc
push
inc
and
jbe
adc
mov
xchg
fnstsw
jbe
adc
ss
push
xchg
je
in
push
or
out
fnstsw
pop
movs
inc
and
push
jl
(bad)
jbe
adc
push
std
sub
data16
(bad)
jl
xor
push
pop
adc
jbe
adc
ret
or
and
aaa
inc
push
stos
and
cmp
jmp
jb
pop
out
fnstsw
jbe
adc
fnstsw
jbe
adc
ja
adc
lock
and
aaa
push
pop
pushf
inc
and
mov
mov
mov
adc
fisttp
mov
mov
adc
dec
adc
mov
push
pop
adc
mov
test
push
ds
(bad)
jl
mov
adc
dec
or
mov
adc
push
add
movs
mov
jle
lods
xchg
xor
cli
jle
test
adc
adc
jbe
ss
je
test
jbe
je
and
aaa
(bad)
jbe
adc
push
scas
adc
jbe
adc
fnstsw
pop
jmp
or
adc
jbe
adc
fnstsw
jbe
adc
sub
adc
jbe
sub
and
aaa
scas
sub
mov
scas
repz
daa
lock
jbe
adc
jbe
adc
pop
add
and
push
pop
adc
jbe
adc
fnstsw
jbe
adc
ss
and
jbe
adc
jbe
xor
inc
push
(bad)
jbe
adc
jbe
adc
push
jle
sbb
jl
test
jbe
adc
daa
push
(bad)
jl
in
pushw
(bad)
jl
xchg
xchg
mov
mov
(bad)
jl
test
jbe
adc
jbe
inc
mov
or
mov
jbe
adc
jbe
add
jbe
adc
adc
mov
mov
adc
xchg
cwde
ja
adc
jo
adc
jbe
adc
push
test
loopne
inc
dec
adc
jbe
adc
inc
inc
cdq
or
push
scas
and
jno
mov
mov
adc
ss
ss
xchg
and
sub
sub
dec
adc
mov
adc
inc
sti
adc
jbe
adc
push
pop
adc
jbe
adc
jnp
sbb
aaa
mov
jbe
adc
push
clc
loope
push
stc
xor
inc
sti
adc
jbe
inc
mov
jbe
adc
jbe
icebp
scas
pop
int3
inc
and
jbe
adc
jbe
popa
sbb
fs
adc
fdiv
stos
mov
bound
mov
push
pop
adc
jbe
adc
and
aaa
mov
jbe
adc
jbe
mov
test
dec
push
push
mov
xor
fcmovu
jl
mov
xor
out
and
jnp
xor
dec
pop
in
stos
dec
pop
in
fwait
cmps
lds
ins
aam
push
imul
and
retf
test
jl
mov
jg
imul
jae
cwde
mov
imul
jge
inc
push
je
(bad)
mov
rcr
jle
push
data16
inc
jg
lods
lock
add
inc
clc
rol
iret
retf
mov
xchg
(bad)
retf
or
cmp
cli
in
lock
ja
jne
lea
retf
cli
ins
ds
das
pusha
add
add
and
fwait
ins
jle
mov
mov
mov
(bad)
mov
sti
dec
sbb
inc
sbb
xbegin
mov
mov
int3
jg
test
stc
push
clc
in
jmp
cmp
xor
test
ins
imul
ins
popf
daa
sub
js
xchg
sbb
xchg
xor
jl
in
sbb
inc
sbb
cli
cld
sbb
jae
repz
js
test
test
pop
test
icebp
ss
and
xor
mov
jge
(bad)
idiv
push
dec
xchg
lea
push
aaa
jae
mov
leave
and
mov
push
add
xor
aas
bound
jb
mov
mov
push
aam
call
pop
call
call
push
pop
scas
xor
stos
sub
into
cld
pop
call
dec
mov
in
stos
dec
pop
in
fwait
cmps
lds
ins
aad
push
lods
jge
mov
repz
jo
fcmove
xchg
fs
leave
mov
dec
mov
sar
or
adc
imul
cmp
mov
mov
mov
xchg
ins
or
inc
lock
mov
jb
mov
jg
lods
sbb
ins
jg
pop
or
jg
popa
sar
jle
pop
das
jle
mov
enter
retf
or
in
jg
cli
aad
icebp
jo
mov
retf
pop
sti
or
mov
pop
mov
mov
int3
pushf
js
test
repz
clc
rcl
mov
jae
or
mov
jle
add
je
dec
fwait
in
mov
pop
pop
add
and
jle
dec
sbb
rcr
pop
mov
lahf
cmp
xor
out
jns
pop
push
xor
xor
sbb
dec
mov
div
pop
in
mov
pop
xchg
ret
lock
sahf
xor
arpl
sbb
xchg
xor
outs
lea
fwait
lods
jl
xchg
or
or
inc
xchg
mov
push
xor
hlt
out
sbb
xchg
xor
or
add
sbb
cmp
pop
xchg
jl
xchg
and
cmp
nop
jge
std
data16
cmp
xor
(bad)
dec
push
call
xor
das
pop
xor
add
jg
mov
jae
out
xchg
lock
test
fisttp
mov
mov
mov
fdiv
mov
fmul
test
mov
cmc
jno
sub
test
pop
fdiv
retf
jmp
leave
mov
mov
retf
cli
mov
xor
jg
and
mov
dec
xchg
jl
scas
dec
call
outs
cwde
xor
dec
test
mov
add
enter
ss
mov
mov
in
lea
or
test
ret
or
xchg
call
clc
scas
outs
dec
jno
adc
test
ins
jle
lock
mov
mov
scas
jnp
ins
sbb
ins
lods
fimul
or
pop
(bad)
dec
or
inc
clc
bswap
lock
mov
xor
gs
jle
push
int
or
test
pop
gs
(bad)
idiv
mov
test
and
ja
int3
add
lock
daa
sbb
xchg
xor
jns
xchg
sar
pop
daa
jns
pop
mov
or
pushf
xor
fwait
test
jmp
inc
ret
lods
outs
jb
or
jns
(bad)
xchg
jp
imul
mov
bound
xchg
cmp
pop
mov
sbb
xor
sahf
dec
jge
xor
push
xchg
jge
jmp
mov
jl
pop
nop
in
(bad)
daa
jecxz
lahf
adc
popf
lock
pushf
xchg
in
(bad)
es
loop
pop
jecxz
lahf
xor
popf
lock
pushf
nop
in
mov
xor
xlat
popf
add
popf
lock
xchg
in
(bad)
ss
out
ror
add
pushf
pushf
in
(bad)
jbe
in
ror
adc
pushf
sahf
out
(bad)
fs
in
lahf
daa
jecxz
lahf
xchg
push
aam
popf
loopne
pushf
xchg
in
xlat
daa
xchg
loop
lahf
add
aad
xchg
jb
popf
popf
loopne
pushf
nop
in
xlat
pop
xchg
loopne
lahf
xor
xlat
popf
xchg
inc
aam
popf
loopne
pushf
xchg
in
xlat
aaa
xchg
out
rcr
xchg
add
xchg
xchg
loopne
pushf
pushf
in
xlat
ja
in
rcr
xchg
adc
xchg
xchg
loopne
pushf
sahf
out
xlat
gs
in
fbld
jecxz
lahf
rcl
fwait
popf
mov
xchg
daa
xchg
loop
fild
jecxz
lahf
shl
popf
popf
mov
xchg
pop
xchg
loopne
fbstp
jecxz
popf
rol
popf
mov
xchg
aaa
xchg
out
rcr
jae
fstp
xchg
mov
xchg
ja
in
rcr
arpl
fistp
xchg
mov
xchg
gs
in
(bad)
daa
jecxz
lahf
adc
popf
lock
pushf
xchg
in
(bad)
daa
xchg
loop
pop
jecxz
lahf
xor
popf
lock
pushf
nop
in
mov
xor
xlat
popf
add
lock
xchg
in
(bad)
aaa
xchg
out
ror
add
xchg
lock
ja
in
ror
adc
xchg
lock
gs
in
iret
daa
jecxz
lahf
ret
push
aam
popf
mov
pushf
xchg
in
xchg
xchg
loop
iret
add
aad
ret
jb
popf
popf
mov
pushf
nop
in
xchg
xchg
loopne
iret
xor
xlat
popf
ret
inc
aam
popf
mov
pushf
xchg
in
xchg
xchg
out
ror
jae
fstp
xchg
mov
pushf
pushf
in
xchg
in
ror
arpl
fistp
xchg
mov
pushf
sahf
out
xchg
in
jmp
jecxz
lahf
repz
aam
popf
sub
in
mov
xchg
loop
inc
jecxz
lahf
repz
popf
popf
or
in
mov
xchg
loopne
push
jecxz
popf
repz
aam
popf
cmp
in
mov
xchg
out
sar
jae
fstp
xchg
xor
xchg
in
sar
arpl
fistp
xchg
and
nop
in
xchg
daa
jecxz
lahf
fwait
push
aam
popf
call
fbld
nop
loop
xchg
add
aad
fwait
jae
popf
popf
call
fild
nop
loopne
xchg
xor
xlat
popf
fwait
inc
aam
popf
call
fbstp
nop
out
rcl
fwait
add
xor
pushf
in
fbstp
in
rcl
fwait
adc
and
sahf
out
fbld
das
out
lahf
pop
icebp
push
loop
jmp
das
in
lahf
pop
icebp
push
out
das
in
pop
icebp
push
in
das
out
pop
icebp
push
in
call
aad
xchg
fidivr
adc
push
xchg
jne
and
lahf
pop
icebp
push
in
das
call
shl
and
js
adc
adc
xchg
sbb
pop
lahf
pop
icebp
push
out
das
call
(bad)
sub
js
adc
inc
xchg
jne
and
lahf
pop
icebp
push
loopne
call
fldenv
jnp
js
adc
dec
xchg
jne
and
lahf
pop
icebp
push
loop
call
xlat
addr16
xor
js
adc
or
jne
and
lahf
pop
icebp
push
in
call
aad
xchg
add
fstp
jne
and
lahf
pop
icebp
push
in
das
call
shl
and
pop
aam
xlat
gs
and
push
aam
(bad)
sub
dec
aam
aad
pop
xor
push
dec
aam
fldenv
cmp
inc
aam
shl
popa
nop
lahf
nop
sbb
aam
xlat
gs
arpl
adc
loopne
gs
imul
gs
jne
lahf
xchg
sbb
aam
fldenv
jnp
lahf
sahf
sbb
aam
shl
in
arpl
in
arpl
in
arpl
in
arpl
in
arpl
in
arpl
in
arpl
in
arpl
in
arpl
loop
arpl
aam
outs
or
xchg
sbb
cmp
out
sub
jecxz
arpl
aam
outs
or
nop
sbb
sub
jecxz
arpl
aam
outs
or
xchg
sbb
setno
sub
mov
xchg
outs
stc
dec
pushf
sahf
sbb
pop
xchg
push
sub
sbb
rcl
in
ret
sub
out
xchg
push
push
pop
cdq
imul
repz
out
mov
sbb
faddp
push
pop
cdq
pop
movs
lea
mov
inc
mov
scas
pop
mov
mov
test
call
int
popf
jb
pushf
inc
jg
scas
xor
pop
sbb
cdq
fidiv
add
cwde
jo
imul
mov
lea
jg
test
jle
or
xchg
xchg
pop
lods
popf
or
int
lods
ret
jg
sti
adc
mov
push
cs
xchg
sahf
or
mov
dec
cmp
mov
or
push
mov
clc
int
sub
jg
gs
retf
pop
jge
inc
test
ret
push
xor
xchg
sub
or
test
int3
pop
gs
jbe
ins
sbb
clc
out
pusha
or
jle
mov
sbb
sub
mov
repz
clc
add
stos
sbb
ins
add
add
pop
xchg
xor
mov
cmp
out
aas
pop
ins
clc
mov
pop
(bad)
jl
push
imul
xchg
or
sbb
inc
push
sbb
imul
xor
nop
int
out
leave
cwde
lahf
xchg
mov
or
inc
dec
jmp
xchg
xchg
int
mov
int
not
outs
jne
mov
jmp
nop
int
jae
adc
adc
int
mov
int
mov
adc
stos
in
lahf
xchg
mov
jmp
nop
int
jb
pop
adc
mov
test
cmp
scas
mov
addr16
out
dec
jmp
xchg
pop
lods
or
shr
out
cmp
xor
nop
int
mov
int
dec
mov
int
mov
int
inc
ret
xchg
mov
stc
repnz
dec
gs
mov
adc
nop
add
popf
out
jmp
nop
int
mov
int
dec
mov
cmp
nop
int
mov
int
inc
cli
adc
imul
xor
sub
jmp
aad
sub
sahf
leave
push
lahf
xchg
aad
sub
dec
adc
sahf
xchg
add
fdiv
or
push
or
ins
cmp
ret
pop
outs
jg
pop
gs
jecxz
ins
or
or
jle
imul
out
pushf
jge
pop
or
(bad)
outs
xchg
scas
mov
ins
jle
imul
hlt
shr
ror
arpl
push
in
mov
xchg
data16
movs
jg
lods
push
lea
sbb
ins
pop
xchg
js
test
dec
dec
mov
test
cld
xchg
xor
scas
inc
pop
jmp
stc
mov
pop
sar
xchg
repz
pop
loope
inc
test
ret
xor
jae
mov
jg
test
daa
or
jmp
adc
mov
sub
ins
test
stc
or
jb
jae
dec
xlat
fidiv
pop
aas
js
test
movs
int
sub
dec
jmp
clc
inc
cmp
retf
or
cld
add
test
clc
cdq
pushf
dec
jnp
sub
mov
adc
test
imul
xchg
xor
jo
push
sbb
xchg
xor
mov
push
retf
or
add
mov
imul
mov
ret
outs
call
ja
shl
mov
sbb
pop
sbb
adc
jmp
jecxz
sbb
leave
xchg
daa
jae
ins
sbb
adc
jg
test
mov
sbb
sbb
popf
push
call
cmp
ret
and
(bad)
cmp
ret
std
ret
and
(bad)
xchg
push
leave
and
add
cmp
and
add
imul
xchg
add
sbb
int
jmp
xchg
in
stos
jnp
jo
jge
popa
call
inc
mov
pop
mov
jb
dec
mov
test
push
fild
pushf
jl
and
les
(bad)
mov
jl
xchg
jge
arpl
ds
and
mov
(bad)
xor
push
xor
sahf
add
aam
xchg
adc
jae
(bad)
ins
js
test
pop
mov
mov
outs
retf
pop
(bad)
jns
(bad)
xchg
push
mov
pop
dec
jle
mov
ret
jle
arpl
or
jge
mov
cmp
repnz
cli
jnp
xlat
jo
cld
pop
pop
std
add
loopne
mov
sti
pop
sub
jne
aaa
int3
jg
test
stc
jns
ins
jae
add
repz
cdq
jne
push
mov
mov
xor
xchg
test
retf
mov
jbe
rcr
jne
jb
dec
xchg
xor
xchg
test
pop
fnstcw
pop
mov
mov
jmp
dec
mov
lahf
js
test
inc
mov
cmp
xchg
or
or
pop
aas
add
or
repnz
test
(bad)
mov
lods
fwait
jl
jne
in
stc
popf
ja
jnp
xchg
dec
call
int3
jecxz
int3
sahf
dec
js
sahf
dec
js
ret
mov
int
dec
js
sahf
dec
js
sahf
jecxz
loop
dec
js
sahf
dec
js
sahf
dec
js
je
shr
lahf
dec
js
sahf
dec
js
je
shr
mov
dec
js
sahf
dec
pop
loope
sbb
jmp
jns
sahf
dec
js
sahf
dec
js
sahf
dec
pop
adc
outs
pop
jmp
js
sahf
dec
js
sahf
dec
js
ret
mov
into
xor
dec
js
sahf
dec
js
sahf
dec
js
outs
ret
iret
sbb
jmp
sub
int
mov
sub
repnz
dec
js
sahf
dec
mov
xor
jecxz
call
sahf
dec
js
xchg
push
pop
loopne
jb
addr16
dec
js
sahf
dec
js
scas
in
int3
sahf
dec
js
sahf
jge
out
lahf
dec
js
sahf
dec
js
push
push
jmp
imul
jns
sahf
dec
js
sahf
dec
shl
mov
js
push
push
jmp
das
data16
jns
sahf
dec
js
sahf
dec
js
sahf
dec
shl
mov
js
sahf
dec
dec
popa
mov
dec
js
sahf
dec
js
sahf
jge
out
lahf
dec
js
sahf
dec
mov
outs
pop
in
inc
jg
hlt
mov
pop
jmp
js
sahf
dec
pop
xchg
iret
sbb
jmp
jmp
int
mov
sub
retf
pop
pop
lahf
dec
js
sahf
dec
js
sahf
dec
mov
adc
cwde
xor
loop
call
sahf
dec
js
sahf
mov
sub
into
xor
dec
js
sahf
dec
js
sahf
dec
js
outs
inc
pop
xchg
iret
sbb
jmp
loope
sahf
dec
js
sahf
dec
js
ret
jmp
shl
mov
dec
js
sahf
dec
js
xor
test
sahf
dec
js
mov
jmp
pop
jmp
outs
shl
mov
dec
js
sahf
dec
js
ret
mov
repnz
dec
js
sahf
dec
mov
adc
cwde
xor
jecxz
out
sbb
int
dec
js
ss
pop
in
push
jb
addr16
dec
js
sahf
dec
mov
xor
jecxz
out
adc
dec
js
sahf
dec
js
xchg
push
pop
loopne
jb
addr16
dec
js
sahf
dec
js
push
pop
jmp
pop
data16
jns
sahf
dec
js
sahf
dec
js
xor
pop
mov
dec
shl
out
mov
mov
jg
hlt
mov
pop
jmp
js
sahf
dec
js
sahf
dec
js
xor
pop
call
sahf
dec
js
sahf
dec
js
mov
outs
pop
add
dec
js
sahf
dec
js
js
and
retf
loop
out
push
jbe
addr16
dec
js
outs
clc
pop
xchg
iret
sbb
jmp
cmp
sahf
dec
js
sahf
dec
js
sahf
mov
sub
into
xor
dec
js
sahf
dec
js
sahf
dec
js
outs
inc
pop
xchg
iret
sbb
jmp
xor
sahf
dec
js
sahf
dec
js
sahf
jns
repnz
dec
js
sahf
dec
js
sahf
dec
dec
addr16
outs
pop
adc
outs
pop
jmp
js
sahf
dec
js
sahf
dec
js
sahf
jecxz
in
lahf
dec
js
sahf
dec
js
sahf
dec
shl
imul
sahf
dec
js
sahf
dec
pop
xchg
iret
sbb
jmp
fxch
sahf
dec
js
sahf
dec
js
js
and
retf
loop
out
push
dec
shl
in
js
sahf
dec
js
sahf
dec
js
outs
loopne
xchg
iret
sbb
jmp
fcmovne
sahf
dec
js
sahf
dec
js
sahf
mov
sub
into
xor
dec
js
sahf
dec
js
sahf
dec
js
outs
dec
pop
xchg
iret
sbb
jmp
ror
sahf
dec
js
sahf
jns
repnz
dec
js
sahf
dec
dec
addr16
outs
pop
adc
not
mov
dec
js
sahf
jecxz
in
lahf
dec
js
sahf
dec
js
sahf
dec
shl
imul
sahf
dec
shl
out
js
sahf
dec
js
sahf
dec
js
sahf
dec
dec
popa
mov
dec
js
sahf
jg
in
imul
jmp
add
gs
sahf
dec
js
sahf
dec
js
xor
pop
nop
lahf
dec
js
sahf
dec
js
scas
in
int3
sahf
dec
js
sahf
dec
js
sahf
jge
out
imul
cli
mov
arpl
sahf
dec
js
sahf
dec
js
sahf
dec
shl
jno
int
dec
js
sahf
dec
js
sahf
dec
shl
ja
int
dec
js
sahf
dec
shl
outs
pop
jmp
pop
adc
outs
pop
jmp
js
sahf
dec
js
mov
jns
sahf
dec
js
sahf
dec
js
xor
pop
push
sahf
dec
js
sahf
dec
js
mov
outs
pop
add
dec
js
sahf
dec
js
js
and
retf
loop
out
push
jb
addr16
dec
js
sahf
dec
mov
adc
cwde
xor
loop
out
mov
dec
js
sahf
dec
js
sahf
mov
sub
repnz
dec
js
sahf
dec
mov
mov
outs
push
add
dec
js
sahf
dec
js
sahf
dec
js
sahf
jns
repnz
dec
js
sahf
dec
dec
addr16
jecxz
or
mov
push
xor
mov
or
cs
pop
cmp
popf
mov
mov
stos
xchg
sub
popf
ins
mov
inc
mov
cmp
mov
test
cwde
jnp
outs
cwde
sahf
out
ficom
xor
xchg
or
pop
mov
enter
push
mov
or
xchg
imul
jge
push
arpl
sti
std
jge
mov
stc
sbb
xor
dec
mov
pushf
pop
cli
scas
retf
mov
repnz
pop
inc
jle
mov
ret
or
jge
ja
add
mov
js
xchg
call
(bad)
xchg
jo
in
or
mov
xbegin
mov
stos
inc
mov
cmp
fwait
xchg
test
or
or
rcl
jle
in
pop
inc
retf
test
add
or
jmp
test
or
or
mov
addr16
cli
add
xor
sbb
ret
test
and
or
aad
sbb
scas
jae
sbb
or
xor
iret
int3
add
jbe
inc
ret
jbe
xor
mov
rcr
xchg
imul
cdq
pop
es
mov
sbb
mov
stc
sub
mov
clc
add
cwde
stc
sub
cwde
stc
sub
mov
push
cmps
pop
pop
outs
cmps
adc
mov
cmps
push
mov
push
cmps
(bad)
and
clc
ret
mov
sub
call
inc
mov
ja
mov
test
mov
adc
ja
sti
jmp
test
mov
jno
jg
xor
(bad)
xor
add
aam
mov
mov
xchg
jg
test
inc
mov
dec
push
dec
sub
jg
test
pop
test
sbb
cli
iret
inc
xor
jecxz
fst
sub
sub
mov
imul
xor
cmp
inc
jns
(bad)
xchg
popa
mov
sti
jge
fdiv
ins
retf
push
(bad)
pop
leave
js
test
push
xor
stc
and
add
stc
jmp
mov
data16
cld
add
jle
call
cwde
and
cli
xor
jno
jae
fwait
mov
sub
out
mov
cli
ja
jp
imul
jle
repnz
jae
sbb
dec
int
gs
test
inc
xor
sub
ret
mov
ins
jle
clc
dec
push
jb
je
mov
ja
mov
inc
xor
or
sbb
mov
std
dec
ins
xor
dec
(bad)
jno
outs
cwde
fcom
xor
xor
sbb
fimul
loop
mov
mov
mov
lea
fwait
mov
mov
mov
lea
mov
lea
(bad)
fimul
xchg
lea
lods
fisttp
xchg
jno
stos
and
std
jo
(bad)
cld
mov
leave
mul
daa
std
enter
mov
daa
std
jp
push
add
(bad)
jno
sub
test
push
imul
push
loopne
in
mov
ja
(bad)
jg
imul
or
fwait
inc
test
xchg
jle
mov
nop
fimul
fsub
mov
inc
imul
pop
sbb
dec
aam
inc
sub
jae
push
int
or
ins
jle
pop
sub
out
inc
xchg
inc
mov
mov
mov
retf
mov
test
mov
cmp
pop
or
cmps
nop
mov
imul
xchg
push
jle
or
ret
and
cli
fisttp
mov
cmp
in
pusha
or
mov
lea
jbe
pop
mov
mov
retf
pop
aas
stc
mov
stc
jne
jns
pop
mov
mov
stc
jne
bound
cmp
test
rol
pop
clc
cmc
dec
ins
je
push
test
push
ret
xor
jns
xchg
mov
xor
mov
sbb
mov
test
jge
dec
mov
mov
retf
cld
xchg
xor
das
mov
sti
inc
sub
sbb
xchg
or
mov
jg
xrelease
and
xchg
cli
repz
(bad)
fdivr
fnsave
aam
sub
(bad)
fdivr
(bad)
fdivr
(bad)
fsub
icebp
adc
xchg
cli
sub
ror
sub
fdivr
jne
std
lds
addr16
pop
aam
jnp
fdivrp
(bad)
jbe
cdq
adc
ja
cwde
fisub
jbe
sub
add
add
movs
or
sub
mov
dec
jp
xor
dec
pop
in
fwait
cmps
lds
ins
jle
es
int3
push
xchg
stos
cmp
inc
mov
in
stos
dec
pop
in
stos
dec
pop
in
(bad)
pop
mov
mov
stc
outs
jg
pop
gs
xchg
mov
jl
inc
not
stc
test
cdq
ins
cmp
retf
mov
jge
inc
cmp
(bad)
mov
and
mov
xchg
ficomp
xor
or
adc
add
jmp
add
mov
jmp
(bad)
out
pop
cmp
addr16
mov
mov
dec
cmps
movs
ss
int
(bad)
pop
dec
jle
mov
ret
jo
je
mov
sti
and
pop
aam
ins
or
jg
pop
push
jae
add
add
sbb
jmp
pushf
sbb
xchg
jg
test
mov
sbb
mov
outs
test
clc
imul
lea
inc
pop
xor
pop
lds
test
call
xchg
or
stc
adc
stos
sbb
ret
lods
push
jb
or
or
inc
(bad)
movs
cdq
test
mov
jbe
popa
repnz
mov
push
test
test
cmp
sbb
mov
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
ret
push
faddp
shr
dec
shr
adc
push
inc
lock
aad
ret
retf
out
jo
jge
int3
sbb
jo
shr
dec
shr
adc
gs
int3
ret
dec
shr
adc
ins
inc
(bad)
lock
out
jo
jge
int3
sbb
fadd
ins
aad
ret
(bad)
rcr
hlt
enter
shr
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
xor
rcr
mov
cdq
add
sbb
test
adc
and
sub
dec
arpl
adc
or
fcomp
gs
mov
adc
mov
adc
test
adc
xchg
adc
(bad)
int
push
mov
adc
pop
pop
popa
or
mov
add
test
mov
adc
jnp
xor
mov
adc
jmp
in
pop
mov
adc
in
cmp
leave
cmp
popa
lea
mov
adc
push
xor
aas
mov
adc
dec
mov
adc
out
fwait
pop
xor
xor
and
mov
mov
adc
aas
dec
jbe
mov
adc
push
out
sub
shl
sub
mov
das
mov
adc
cld
jmp
sub
enter
mov
adc
test
mov
popf
dec
lods
daa
mov
adc
mul
inc
and
mov
add
adc
inc
jae
pop
mov
adc
fwait
xor
repnz
scas
jne
mov
adc
out
sbb
adc
test
adc
sbb
jmp
cmp
xor
xchg
dec
dec
mov
adc
cmp
mov
dec
inc
movs
dec
mov
adc
in
sbb
adc
jl
in
inc
mov
adc
push
das
pop
inc
mov
adc
or
pop
inc
mov
adc
cwde
lahf
or
mov
repnz
jecxz
mov
adc
adc
jns
mov
iret
popf
ja
mov
adc
movs
xor
adc
shl
mov
adc
fcom
push
jno
mov
outs
add
adc
add
iret
je
mov
mov
jmp
mov
sub
pusha
push
inc
adc
adc
xchg
arpl
ins
mov
adc
test
mov
or
mov
xchg
mov
adc
sti
pop
xchg
fs
adc
addr16
push
fwait
mov
adc
jp
mov
mov
adc
adc
pop
lahf
mov
adc
pop
movs
pop
pushf
mov
adc
mov
mov
aad
lods
xchg
mov
adc
lock
xor
adc
adc
imul
mov
adc
std
shl
push
xchg
jns
mov
imul
push
mov
adc
push
mov
adc
pop
sub
mov
ins
sub
lods
mov
mov
stos
jge
mov
rcl
mov
mov
xor
pop
mov
mov
mov
mov
sub
mov
imul
test
xchg
test
pop
cmp
nop
xor
adc
mov
mov
adc
in
push
mov
jnp
push
inc
jge
mov
mov
adc
sub
mov
mov
cli
fdiv
std
mov
mov
adc
in
adc
mov
adc
(bad)
mov
cli
in
jb
mov
adc
dec
in
lods
(bad)
mov
adc
xchg
cmp
mov
adc
cli
and
mov
adc
bound
adc
or
fmulp
mov
adc
(bad)
xor
mov
adc
loopne
movs
ret
mov
adc
jmp
out
mov
adc
and
(bad)
mov
adc
call
mov
inc
sbb
cli
mov
adc
and
adc
xchg
adc
stc
cdq
jnp
mov
adc
xchg
xor
cld
icebp
daa
jno
mov
adc
jp
shl
mov
adc
mov
mov
add
adc
mov
mov
leave
sti
adc
mov
adc
call
mov
xor
adc
pop
inc
aam
mov
adc
aaa
jmp
adc
jmp
mov
mov
mov
adc
cmps
pop
dec
sbb
mov
sbb
test
adc
inc
das
pop
adc
not
mov
adc
mov
adc
mov
fild
adc
sbb
or
mov
adc
jae
loop
mov
adc
cld
lahf
stos
push
mov
adc
xchg
aaa
inc
or
jb
add
mov
sbb
adc
and
rol
mov
enter
mov
adc
mov
mov
(bad)
not
cmp
cmp
mov
adc
ret
sar
mov
adc
test
mov
into
pop
retf
mov
movs
icebp
and
mov
adc
jmp
mov
add
sub
lock
fwait
cs
adc
call
fdiv
adc
and
std
pop
and
mov
mov
adc
data16
mov
nop
or
dec
pop
mov
adc
movs
ins
lahf
pop
mov
adc
scas
adc
cmp
repz
mov
adc
mov
mov
jmp
push
mov
adc
fst
mov
xchg
mov
dec
push
mov
adc
lods
mov
adc
inc
jnp
dec
mov
adc
sub
dec
dec
mov
adc
mov
stos
dec
mov
adc
fsubr
inc
inc
mov
adc
pop
fbld
push
pop
aas
inc
mov
adc
pop
inc
push
inc
mov
adc
ss
mov
xchg
pop
xchg
mov
out
rcl
jle
mov
test
jge
mov
je
outs
jb
mov
dec
mov
mov
adc
or
stos
ja
mov
pusha
jno
je
mov
and
stos
imul
imul
adc
lea
ins
mov
adc
xor
lock
sub
mov
movs
xchg
ret
mov
pop
xchg
fs
adc
arpl
adc
jmp
dec
cdq
mov
adc
sbb
sbb
mov
adc
nop
adc
mov
adc
cmps
push
fcom
jmp
out
test
mov
std
jnp
mov
jg
mov
adc
cmps
fst
sbb
mov
fst
loopne
mov
adc
pop
pop
pop
ret
jg
test
sub
mov
adc
repnz
mov
call
adc
dec
std
adc
adc
or
in
push
mov
mov
dec
addr16
hlt
push
cld
mov
mov
add
adc
xor
mov
loope
stos
scas
mov
adc
sbb
lods
mov
adc
iret
mov
jbe
and
mov
adc
mov
(bad)
cmps
mov
adc
fbld
movs
mov
adc
mov
mov
mov
mov
sahf
ins
(bad)
fbstp
(bad)
fdiv
call
mov
adc
jmp
aam
mov
adc
xchg
ror
mov
sti
imul
iret
mov
adc
xor
adc
pop
and
adc
push
daa
mov
mov
adc
jmp
mov
bound
pop
les
sub
mov
adc
call
in
or
mov
(bad)
xor
mov
adc
in
mov
repnz
adc
shl
cmp
mov
adc
aaa
mov
div
and
mov
adc
cdq
iret
enter
adc
or
gs
mov
adc
pusha
or
in
sbb
mov
adc
jo
jmp
mov
adc
cmp
fwait
out
mov
push
sbb
mov
adc
xor
adc
pop
or
push
or
rcl
mov
adc
data16
cmp
cdq
xchg
adc
(bad)
out
out
or
or
movzx
ror
mov
test
add
fisttp
mov
adc
or
push
mov
adc
jnp
stc
add
adc
cmp
in
jle
mov
adc
sub
aas
mov
adc
adc
adc
jns
mov
loopne
sbb
adc
xchg
cmp
and
mov
cmps
mov
adc
int3
pop
pop
sub
loope
das
mov
adc
je
addr16
aaa
jg
and
cmp
and
xlat
imul
mov
rol
and
hlt
inc
aam
mov
adc
sahf
jmp
adc
mov
push
pop
mov
adc
fisubr
adc
dec
ja
push
mov
adc
and
movs
push
mov
adc
dec
in
push
mov
adc
push
xor
push
mov
adc
iret
loope
dec
mov
adc
scas
mov
dec
mov
adc
lds
push
dec
mov
adc
jns
mov
js
arpl
mov
adc
clc
mov
inc
mov
adc
repz
test
push
cdq
push
inc
jnp
mov
in
vmwrite
test
jge
mov
jg
ja
mov
adc
jg
jo
mov
adc
adc
mov
adc
mov
xchg
out
imul
pop
push
fbstp
imul
adc
cmp
mov
or
pusha
mov
adc
test
addr16
adc
fnstsw
mov
adc
test
adc
(bad)
rcr
sahf
mov
adc
lods
jnp
popf
mov
adc
outs
iret
outs
xchg
mov
adc
ds
nop
mov
adc
lods
das
jbe
mov
adc
sbb
ficom
mov
adc
push
jecxz
mov
dec
xchg
mov
pop
push
lea
sbb
sub
adc
mov
out
xchg
pop
fild
xor
adc
cs
cmp
mov
adc
inc
inc
aad
mov
adc
mov
mov
add
xchg
mov
mov
adc
mov
mov
adc
cld
adc
mov
jbe
and
and
adc
dec
arpl
mov
adc
xchg
das
sti
lods
mov
adc
dec
shl
mov
adc
lahf
int
mov
lahf
adc
cmps
mov
adc
and
into
jmp
sbb
outs
mov
mov
adc
fadd
pop
fbstp
jecxz
fdiv
dec
ja
mov
adc
mov
mov
mov
mov
aad
dec
aam
mov
and
retf
mov
adc
dec
in
enter
int3
cmps
xor
xchg
(bad)
sar
int
mov
imul
xor
xor
shl
rol
mov
adc
out
sbb
mov
adc
lea
cld
mov
adc
out
idiv
repnz
adc
push
jne
icebp
mov
adc
or
adc
mov
adc
mov
mov
push
adc
adc
outs
push
or
mov
adc
and
ins
out
mov
adc
fsubr
in
mov
adc
mov
and
mov
dec
or
mov
and
mov
add
data16
mov
aam
aad
mov
adc
bound
icebp
sbb
fwait
rcr
mov
adc
cdq
xor
sbb
mov
cdq
repnz
cmp
iret
sbb
mov
adc
(bad)
mov
push
mov
adc
push
cmp
adc
mov
xlat
jne
or
arpl
sahf
repz
adc
jge
inc
add
or
adc
shl
sbb
mov
adc
mov
mov
popf
pop
mov
mov
adc
cld
aas
aaa
xor
xchg
sub
das
inc
xor
mov
push
jnp
sub
sar
out
jae
das
mov
adc
adc
mov
mov
adc
repnz
and
dec
daa
and
(bad)
mov
adc
jae
add
push
outs
jmp
mov
adc
cmp
add
mov
or
int3
pop
mov
adc
sub
pop
mov
adc
inc
stc
cmps
push
mov
adc
pop
icebp
jmp
mov
adc
mov
mov
sub
adc
in
inc
dec
dec
mov
adc
xchg
mov
and
mov
neg
xor
mov
adc
mov
inc
mov
adc
aam
push
inc
mov
adc
mov
mov
fs
xchg
inc
mov
adc
cmp
mov
cdq
(bad)
js
mov
adc
das
jg
mov
sub
jnp
mov
adc
inc
and
pop
lea
mov
adc
jns
ss
mov
inc
add
mov
adc
jns
sub
mov
out
retf
xor
mov
adc
stos
outs
mov
adc
punpckhwd
ins
mov
adc
jg
mov
dec
mov
imul
mov
adc
or
adc
jo
out
mov
adc
fs
mov
adc
shl
loopne
mov
adc
xor
pushf
mov
adc
in
movs
xchg
mov
adc
pop
dec
cli
nop
mov
adc
scas
mov
adc
stos
jmp
adc
mov
mov
sbb
mov
mov
adc
iret
pop
sbb
mov
adc
adc
xor
push
xor
ret
xchg
xchg
repz
inc
cmp
mov
arpl
bound
mov
adc
stos
mov
push
cmps
mov
mov
(bad)
repz
mov
mov
lahf
add
adc
and
adc
aaa
leave
je
mov
adc
daa
fnstenv
jb
(bad)
xlat
scas
mov
adc
dec
daa
lods
mov
adc
(bad)
adc
or
mov
retf
outs
aas
cmps
mov
adc
pop
in
movs
mov
adc
ins
aad
(bad)
xchg
ins
fnstenv
iret
call
cmp
mov
adc
scas
dec
jp
mov
adc
fild
shl
sub
mov
adc
cdq
test
mov
adc
repz
adc
jbe
(bad)
leave
mov
adc
into
or
mov
adc
jmp
mov
add
ret
adc
movs
mov
adc
mov
mov
in
xor
mov
adc
lock
sti
mov
adc
in
push
dec
stc
mov
adc
push
push
mov
push
pop
iret
(bad)
mov
adc
pop
cdq
push
pop
add
icebp
mov
adc
out
(bad)
div
mov
cmc
mov
adc
dec
gs
jmp
sbb
and
adc
daa
add
mov
adc
mov
xor
mov
adc
(bad)
xchg
mov
adc
push
and
mov
adc
pop
invd
in
mov
lds
adc
inc
cmps
inc
sbb
jecxz
push
mov
adc
mov
mov
push
mov
adc
outs
push
adc
(bad)
not
mov
adc
ds
inc
adc
mov
fadd
adc
mov
inc
or
xchg
fs
mov
adc
mov
or
mov
sub
xor
mov
adc
inc
imul
repnz
add
mov
mov
scas
cmp
xchg
inc
cmp
retf
jmp
jmp
adc
std
lods
div
mov
adc
xchg
add
adc
pop
(bad)
stos
aaa
mov
adc
imul
xor
mov
add
adc
mov
mov
sub
cs
adc
inc
std
jnp
mov
adc
cmp
adc
push
aaa
stos
and
fstp
daa
mov
adc
jnp
shl
mov
clc
mov
pop
mov
adc
pop
push
mov
mov
loope
call
xor
adc
jp
ins
push
mov
adc
retf
push
mov
adc
add
adc
retf
add
push
mov
adc
adc
cs
arpl
mov
dec
pop
iret
dec
mov
adc
and
mov
or
ja
mov
adc
xlat
ja
inc
mov
adc
aad
dec
inc
mov
adc
push
mov
and
adc
repnz
xor
mov
xor
mov
(bad)
and
jae
jae
mov
stc
fcmovnb
jo
mov
xor
jbe
mov
fbld
adc
les
imul
mov
mov
pop
aad
outs
mov
adc
mov
mov
aaa
dec
bound
xor
pusha
mov
adc
das
stc
add
mov
arpl
fs
adc
jmp
mov
mov
mov
sti
jno
lahf
mov
adc
ja
xor
mov
mov
push
mov
mov
mov
aam
call
outs
aas
mov
(bad)
(bad)
mov
imul
scas
push
mov
add
xor
push
xor
mov
nop
jmp
adc
in
scas
mov
ret
mov
enter
mov
adc
add
xchg
push
mov
xchg
xchg
adc
aas
stc
mov
push
jecxz
mov
cmp
cmps
mov
adc
jle
mov
push
cmp
adc
rol
fnstenv
cmc
loope
mov
adc
pop
std
dec
fnsave
mov
adc
es
mov
adc
xlat
mov
adc
mov
in
aam
mov
sub
retf
mov
adc
inc
pop
nop
leave
mov
adc
icebp
cmps
dec
into
mov
adc
loop
fmul
mov
adc
loop
add
mov
adc
xor
mov
pushf
aaa
push
(bad)
mov
adc
and
adc
(bad)
std
inc
sti
mov
adc
add
adc
pop
dec
inc
push
jecxz
cld
mov
adc
shl
dec
repz
adc
adc
adc
mov
mov
(bad)
dec
cs
mov
adc
and
jmp
mov
mov
adc
test
sub
sub
(bad)
in
mov
adc
xlat
mov
adc
pop
fisttp
mov
adc
ss
out
mov
inc
mov
adc
pop
jg
sbb
shl
mov
adc
xchg
stos
int
mov
adc
fwait
pop
ds
mov
icebp
not
adc
pop
retf
adc
and
mov
adc
in
xchg
xchg
mov
xchg
outs
or
mov
mov
adc
xchg
test
adc
test
jg
mov
adc
ret
add
jge
add
mov
push
mov
adc
add
add
mov
jne
scas
cmp
xchg
mov
aam
cmp
mov
(bad)
fnstsw
scas
leave
mov
xor
and
xor
imul
gs
adc
popf
or
adc
cwde
xchg
add
mov
adc
mov
jge
mov
adc
add
pop
sub
fidivr
shl
mov
pop
leave
repnz
movsx
mov
adc
int3
mov
adc
and
pop
pop
mov
adc
sbb
pop
mov
adc
jns
scas
pop
mov
adc
and
pop
mov
adc
jg
xor
mov
and
adc
cmp
and
mov
inc
mov
push
mov
adc
sbb
dec
mov
adc
stos
(bad)
scas
dec
mov
adc
or
out
mov
adc
das
repz
dec
mov
adc
jae
xor
mov
add
sub
mov
cld
fwait
adc
adc
xchg
xor
jnp
mov
movs
inc
inc
js
mov
into
jmp
adc
je
ins
jl
mov
int3
repz
jae
mov
retf
jns
jno
mov
inc
mov
adc
outs
ins
mov
mov
fst
push
mov
in
outs
imul
mov
jmp
xchg
ins
mov
adc
xchg
arpl
mov
adc
dec
rcr
pusha
mov
adc
jmp
add
or
mov
adc
add
call
push
cwde
mov
adc
pop
mov
adc
(bad)
adc
pop
pop
fwait
xchg
mov
adc
jb
mov
mov
adc
or
mov
xchg
addr16
or
mov
add
test
(bad)
push
mov
mov
adc
push
das
xor
mov
mov
int3
inc
rol
fdivr
adc
ret
mov
jmp
push
mov
mov
adc
scas
out
mov
cmp
pop
mov
mov
push
mov
mov
mov
mov
mov
mov
loope
xchg
stos
mov
adc
scas
adc
adc
mov
fsubr
pop
das
mov
cmc
sbb
mov
jmp
sbb
imul
cmp
mov
adc
in
dec
xchg
mov
adc
mov
mov
icebp
inc
in
fidiv
repz
fdiv
das
xor
pop
mov
cmp
mov
adc
sbb
xlat
mov
adc
push
mov
ret
cmp
retf
mov
adc
jbe
xchg
enter
test
pop
xchg
into
mov
adc
xchg
idiv
mov
adc
jle
and
mov
adc
div
shl
sub
ss
pop
les
in
sti
mov
adc
push
add
adc
test
mov
repnz
cmp
push
lds
shl
mov
adc
lods
gs
mov
adc
lock
adc
sbb
cmc
mov
adc
test
jmp
xchg
mov
adc
call
mov
adc
in
mov
adc
xor
loop
mov
pop
out
mov
mov
adc
inc
mov
out
mov
das
pop
push
in
mov
fwait
cmp
inc
mov
mov
retf
push
mov
adc
enter
mov
adc
mov
mov
xor
adc
pop
mov
adc
(bad)
pop
lods
adc
mov
cmp
adc
dec
inc
ror
mov
adc
mov
mov
sar
or
sqrtps
add
pop
inc
add
xchg
or
mov
mov
adc
btr
cmp
test
ret
sub
mov
adc
xor
adc
pop
das
push
xor
(bad)
mov
popa
daa
mov
(bad)
ja
jl
mov
adc
sbb
mov
loope
(bad)
sub
cmp
adc
mov
adc
mov
adc
pop
lahf
sbb
mov
sbb
adc
mov
xor
mov
adc
or
sbb
icebp
popf
pop
adc
aas
loopne
mov
adc
jl
cmp
mov
adc
push
cmp
adc
popf
fwait
mov
and
fistp
mov
adc
std
stc
sub
mov
adc
and
mov
adc
int
pop
mov
adc
sub
xchg
add
gs
adc
add
mov
stos
jle
mov
adc
adc
push
cmp
ret
mov
mov
adc
shr
cmp
mov
data16
xor
mov
xor
sbb
ss
adc
mov
mov
inc
outs
jb
mov
adc
outs
or
adc
or
adc
cmp
adc
push
sub
and
or
bound
mov
pop
cmp
mov
adc
cmp
mov
mov
adc
cmp
pop
mov
adc
push
(bad)
fistp
mov
push
mov
mov
adc
push
mov
and
mov
add
fst
mov
inc
loope
push
mov
adc
mov
mov
sub
dec
mov
adc
xchg
adc
dec
int
dec
mov
adc
and
inc
mov
adc
in
or
mov
adc
in
pop
add
mov
gs
jbe
mov
adc
bswap
lahf
jnp
mov
xchg
jmp
xchg
jecxz
dec
jle
mov
add
xor
adc
jno
ins
jae
mov
and
jno
mov
or
fdiv
mov
pop
jnp
je
mov
mov
mov
mov
in
push
xchg
or
outs
mov
adc
and
adc
sub
inc
arpl
lods
add
mov
popf
pop
lods
addr16
adc
idiv
adc
push
adc
mov
adc
daa
add
adc
pusha
xchg
stc
sahf
mov
adc
pop
sbb
cld
xchg
loopne
mov
adc
xchg
cmp
nop
mov
adc
(bad)
inc
and
mov
adc
hlt
jecxz
xchg
mov
adc
pop
fwait
aam
mov
adc
xor
push
adc
adc
jnp
scas
mov
jnp
xor
pop
xor
movs
xchg
ins
je
mov
adc
push
mov
mov
mov
mov
fistp
adc
mov
cmp
popf
xchg
mov
mov
sbb
mov
mov
and
mov
mov
jmp
into
jae
stos
mov
adc
sbb
mov
and
bound
repz
mov
adc
lods
cmps
mov
adc
pusha
push
aas
movs
mov
adc
or
pop
(bad)
or
mov
mov
adc
out
sub
mov
adc
jle
mov
pop
adc
push
shl
jge
xlat
mov
adc
jg
stos
aad
mov
cmc
fld
xchg
jecxz
enter
pop
dec
(bad)
into
mov
adc
div
adc
mov
mov
dec
mov
adc
jle
add
adc
push
aam
fld
cli
mov
adc
xor
stc
mov
adc
xor
adc
push
jae
std
mov
adc
sub
mov
imul
xchg
mov
div
ja
cmc
mov
adc
in
pop
push
jmp
mov
mov
adc
pushf
dec
std
out
mov
adc
jno
or
mov
adc
add
cmp
mov
adc
imul
pop
fwait
mov
out
mov
icebp
sbb
(bad)
daa
adc
test
mov
xchg
test
adc
pop
movs
jmp
or
adc
icebp
test
mov
adc
hlt
addr16
push
mov
adc
xlat
fistp
adc
sub
or
ror
mov
adc
(bad)
sbb
mov
adc
adc
adc
xor
mov
stc
out
add
add
mov
adc
repz
call
or
(bad)
cmp
and
mov
adc
or
ss
adc
stc
rcl
mov
xchg
imul
xor
mov
nop
mov
mov
xchg
adc
jne
mov
mov
adc
pop
dec
pop
das
mov
adc
rol
sub
mov
mov
pop
icebp
or
mov
adc
inc
mov
daa
mov
adc
std
popa
and
mov
adc
xchg
(bad)
fsubr
xor
adc
sub
pop
mov
adc
or
push
(bad)
std
stos
push
mov
adc
dec
mov
adc
mov
pop
push
mov
adc
gs
dec
mov
adc
(bad)
pop
dec
mov
adc
aad
xlat
dec
mov
adc
mov
push
dec
mov
adc
fisttp
mov
xor
jmp
inc
mov
adc
popf
and
adc
mov
mov
inc
dec
hlt
jp
mov
ss
adc
pop
pop
call
nop
inc
(bad)
mov
(bad)
pop
mov
adc
push
dec
inc
jo
mov
(bad)
sub
mov
adc
xchg
mov
adc
add
mov
lock
mov
cmp
and
outs
mov
adc
push
jmp
adc
cmp
inc
arpl
mov
mov
adc
lahf
jno
data16
adc
push
mov
pop
ins
inc
fwait
mov
adc
inc
aad
cwde
mov
adc
das
jge
lahf
mov
adc
ins
lds
sub
cdq
ins
xchg
mov
adc
enter
mov
adc
mov
mov
cdq
xor
repz
adc
or
pop
mov
mov
mov
adc
jne
xchg
mov
push
xor
xor
adc
mov
mov
mov
mov
mov
aaa
mov
loopne
fidivr
leave
repz
mov
adc
add
icebp
mov
mov
popa
imul
mov
test
mov
pop
mov
adc
add
inc
test
mov
outs
in
scas
mov
adc
les
lods
mov
adc
fwait
lea
mov
adc
inc
movs
je
mov
adc
ret
das
xor
mov
adc
xchg
pop
popa
fdiv
mov
mov
adc
test
mov
movs
add
mov
adc
into
stos
mov
mov
adc
push
fisttp
xlat
mov
adc
aas
jne
aam
mov
loopne
scas
retf
mov
adc
cdq
jno
leave
mov
adc
mov
dec
iret
mov
adc
pop
pop
das
int3
mov
adc
cmc
imul
mov
adc
lahf
ret
retf
shl
stc
mov
adc
xor
adc
gs
push
repz
adc
call
mov
push
sub
div
call
adc
xchg
mov
add
mov
mov
adc
add
mov
outs
test
adc
repz
sbb
jns
pop
mov
adc
add
cmp
mov
sbb
adc
jae
adc
mov
adc
mov
mov
fist
mov
adc
sti
in
mov
mov
adc
popa
fiadd
mov
adc
or
aaa
add
addr16
dec
mov
retf
mov
push
mov
cmp
mov
cmp
pop
out
mov
adc
mov
in
mov
adc
mov
mov
jae
xchg
xor
mov
adc
jp
sti
sub
sub
mov
adc
mov
mov
adc
push
jnp
sub
mov
ds
repz
jmp
and
mov
mov
adc
ins
pop
icebp
and
mov
pop
or
mov
adc
mov
adc
xchg
popa
pop
pop
mov
adc
sti
leave
(bad)
push
mov
adc
adc
push
mov
adc
jns
aam
mov
adc
jne
popf
dec
mov
adc
sbb
mov
sub
mov
jge
mov
in
gs
inc
mov
adc
dec
and
mov
adc
adc
retf
retf
jle
mov
xor
or
mov
lods
jge
jae
mov
mov
adc
popa
jmp
ja
mov
or
je
mov
push
mov
push
mov
adc
mov
or
jge
mov
adc
push
adc
ins
mov
adc
mov
mov
ss
shl
adc
call
mov
imul
adc
mov
mov
stc
out
xchg
lahf
mov
adc
sub
adc
jmp
dec
adc
xchg
mov
adc
(bad)
int
xchg
mov
adc
inc
sub
xchg
mov
adc
in
cmp
inc
div
hlt
in
push
pop
mov
sti
xchg
lea
push
jl
mov
adc
fld
jp
mov
adc
dec
xor
xchg
cmp
test
pop
movs
mov
add
movs
mov
btc
mov
gs
mov
sub
push
mov
mov
inc
jae
mov
mov
pop
push
push
mov
mov
pop
dec
pop
mov
mov
pop
imul
retf
sbb
dec
imul
lods
mov
adc
scas
xchg
stos
and
jb
mov
adc
mov
in
mov
adc
mov
mov
mov
adc
loopne
jne
mov
adc
mov
adc
or
mov
and
mov
mov
ins
shl
add
adc
cmovg
xlat
mov
adc
gs
aam
mov
ret
(bad)
mov
test
mov
lods
jno
iret
mov
adc
(bad)
int3
mov
adc
daa
xchg
add
mov
adc
or
jecxz
mov
adc
dec
xchg
or
mov
adc
push
ret
mov
es
mov
daa
cmp
stc
mov
adc
nop
sbb
(bad)
mov
adc
pusha
shr
inc
mov
mov
jo
loopne
mov
adc
sub
mov
adc
or
mov
adc
cmp
sub
mov
push
cmc
imul
js
in
mov
adc
adc
adc
mov
adc
jle
cli
loop
mov
ret
mul
test
mov
mov
adc
leave
aad
sbb
std
pop
sbb
push
mov
mov
adc
fcmovb
retf
mov
jb
inc
adc
imul
mov
inc
repz
mov
adc
loopne
mov
call
adc
jb
inc
or
jge
movzx
xchg
or
mov
xchg
add
and
adc
mov
xchg
mov
adc
(bad)
inc
add
mov
cmp
push
mov
mov
adc
std
mov
outs
xchg
and
mov
adc
pop
adc
xor
mov
mov
adc
push
and
into
xor
adc
mov
mov
aad
movs
sub
sbb
cs
adc
pop
mov
sub
fidiv
and
fnstcw
fmul
mov
cmp
mov
and
xchg
sub
mov
adc
and
mov
mov
pop
pop
mov
adc
fstp
mov
mov
adc
push
xor
adc
lahf
jbe
sbb
stc
sbb
mov
gs
push
mov
adc
inc
imul
mov
mov
ins
popa
call
fstp
lock
inc
mov
adc
push
leave
jae
mov
adc
xchg
lahf
mov
mov
mov
adc
fstp
adc
push
sar
out
pop
out
jle
mov
xor
jge
mov
imul
jae
mov
add
adc
add
jbe
mov
push
mov
fs
imul
xlat
imul
mov
xchg
ins
mov
adc
jae
hlt
arpl
push
inc
popa
mov
adc
lods
xlat
push
addr16
adc
js
imul
adc
shl
adc
movs
sbb
mov
adc
ret
sahf
mov
adc
mov
sbb
sbb
adc
mov
fcomp
imul
xchg
add
adc
mov
lods
sub
mov
or
fs
aad
lea
(bad)
pop
xor
or
push
mov
push
xchg
ja
mov
adc
or
mov
mov
mov
xlat
mov
mov
hlt
in
bound
sahf
inc
mov
cmp
jns
mov
adc
sub
cli
jmp
int3
lahf
fwait
imul
fisub
adc
mov
or
bound
mov
in
mov
add
mov
adc
xchg
cdq
cmps
mov
adc
jge
sbb
mov
adc
test
pop
fidiv
mov
mov
adc
in
and
and
int
fnsave
mov
shl
sbb
cli
jp
xor
mov
adc
adc
fst
mov
adc
and
adc
push
inc
test
(bad)
mov
adc
or
mov
addr16
or
mov
adc
inc
gs
out
test
cmps
jmp
cmp
mov
repz
retf
mov
xchg
jg
push
sub
mov
adc
push
adc
mov
adc
push
leave
xor
mov
adc
arpl
jmp
mov
scas
outs
cmc
mov
adc
pop
pop
and
jmp
adc
popa
adc
out
mov
adc
or
adc
sbb
jecxz
mov
jo
mov
mov
adc
xlat
imul
mov
adc
mov
mov
pop
push
cld
sbb
sti
adc
out
sbb
pop
pop
mov
adc
nop
arpl
sbb
cli
retf
and
mov
adc
aas
shl
ins
sub
push
mov
adc
retf
adc
sub
dec
or
jg
or
xlat
pop
cmpxchg
mov
mov
adc
repz
mov
adc
(bad)
adc
mov
adc
dec
pop
test
adc
jne
add
loopne
and
mov
adc
out
outs
cmp
arpl
mov
adc
icebp
cmp
adc
fwait
xchg
icebp
xor
add
adc
lahf
mov
adc
push
pop
xor
lahf
dec
fldcw
mov
adc
mov
push
sub
fwait
out
mov
adc
leave
sbb
mov
adc
shl
pop
and
inc
mov
mov
adc
bnd
es
adc
popa
in
loopne
mov
adc
fisubr
pop
mov
adc
mov
jle
mov
adc
pop
int
pop
mov
adc
or
xor
adc
pop
mov
adc
add
jecxz
mov
adc
fxch
rcl
adc
cld
jno
push
mov
adc
xchg
fnstcw
dec
mov
adc
fstp
adc
popa
addr16
mov
xchg
dec
mov
adc
or
xor
mov
push
cmps
ds
mov
adc
xlat
mov
inc
mov
adc
mov
mov
dec
add
push
and
outs
jns
mov
mov
and
mov
jae
sar
adc
sbb
cmp
mov
cmc
dec
jno
mov
push
inc
inc
ja
mov
inc
xchg
loope
mov
adc
imul
add
mov
dec
inc
sbb
mov
iret
jecxz
ins
mov
adc
stos
push
out
bound
push
gs
mov
adc
inc
std
mov
mov
adc
gs
adc
mov
fwait
mov
adc
push
mov
add
adc
in
push
pushf
mov
adc
pop
aaa
xchg
xchg
mov
adc
jge
push
nop
mov
adc
jmp
fcom
lea
xchg
mov
adc
pop
mov
mov
jmp
adc
or
je
mov
adc
jns
xchg
lea
xchg
adc
(bad)
jns
xor
pop
xchg
adc
cmp
adc
(bad)
sti
add
gs
dec
mov
stos
jns
mov
out
xchg
fbstp
aam
push
mov
mov
jge
xchg
mov
mov
es
lods
mov
mov
mov
xor
sub
dec
test
rcl
adc
pop
sbb
xor
adc
ror
mov
sub
scas
cmps
mov
adc
dec
sub
jo
cmp
adc
mov
lods
fdiv
(bad)
int
mov
adc
push
lahf
fnsave
xchg
push
shl
aaa
test
mov
adc
(bad)
lahf
ins
(bad)
mov
adc
and
aam
mov
test
adc
push
mov
out
call
je
mov
int
mov
leave
outs
or
mov
adc
leave
xlat
rol
mov
adc
sub
mov
adc
mov
mov
sar
adc
jmp
mov
pop
(bad)
mov
adc
call
div
mov
push
mov
gs
div
ucomiss
mov
adc
push
cmps
(bad)
jmp
mov
sub
mov
mov
adc
nop
aaa
sub
mov
adc
mov
ss
mov
les
mov
mov
mov
out
mov
sub
mov
mov
adc
inc
imul
mov
adc
mov
adc
(bad)
mov
aam
cmp
adc
xchg
popa
add
mov
adc
inc
loope
sbb
mov
out
out
mov
mov
adc
ret
lods
call
cmc
pop
push
mov
adc
setnp
adc
out
mov
mov
cmp
or
and
sar
or
mov
test
pushf
scas
stos
(bad)
add
push
add
mov
adc
loop
or
mov
adc
or
ret
cmp
cmp
cmp
mov
repz
cmp
in
jae
xor
cmps
int3
xor
cmps
shl
mov
adc
dec
mov
xor
jg
and
mov
adc
lock
dec
sub
mov
adc
(bad)
sub
cli
sub
adc
je
or
mov
adc
ficom
ss
adc
pop
mov
and
mov
mov
mov
or
xchg
pop
mov
adc
pop
jg
pop
mov
adc
mov
pusha
pop
mov
adc
inc
retf
int
mov
adc
cld
lahf
ins
push
mov
adc
gs
fs
mov
adc
in
adc
mov
adc
nop
add
dec
mov
adc
outs
xor
dec
mov
adc
jl
mov
repnz
jno
dec
mov
adc
or
inc
mov
adc
mov
add
adc
loopne
push
inc
mov
adc
(bad)
das
inc
mov
or
mov
mov
adc
loope
imul
adc
lea
adc
scas
aas
bnd
mov
scas
sar
jo
mov
out
and
mov
or
je
mov
cmp
add
mov
mov
mov
xor
in
outs
mov
adc
retf
out
ins
mov
adc
xor
adc
fidiv
adc
add
(bad)
mov
or
gs
adc
push
iret
lahf
call
ret
mov
mov
adc
sub
adc
mov
mov
test
rcl
aam
inc
xchg
mov
adc
nop
dec
xor
mov
adc
movs
(bad)
fisttp
daa
stos
mov
int
sahf
(bad)
mov
adc
dec
cmp
mov
mov
adc
(bad)
jnp
xor
mov
mov
cmp
std
daa
aam
mov
adc
cmps
jae
mov
cmp
js
mov
adc
mov
mov
enter
mov
adc
sub
aad
mov
adc
pusha
lods
cmps
mov
mov
jg
div
mov
adc
loopne
adc
mov
adc
dec
gs
scas
mov
adc
icebp
mov
adc
and
push
mov
sbb
(bad)
mov
pop
cdq
cmps
mov
adc
es
cmp
xor
jp
mov
adc
push
add
shl
xchg
adc
mov
adc
jecxz
push
fnsave
mov
shl
in
shl
pop
adc
mov
adc
jb
sub
cmp
mov
retf
mov
adc
je
xchg
call
pop
add
repz
outs
ins
dec
retf
mov
imul
cmp
sbb
xchg
mov
adc
inc
mov
adc
jecxz
lods
sbb
xchg
leave
mov
push
adc
adc
cwde
pop
pop
pop
mov
adc
aaa
adc
adc
cdq
ror
mov
push
mov
mov
adc
and
std
lfs
aad
mov
adc
ret
add
xchg
add
xor
mov
adc
pop
pop
rol
test
mov
mov
mov
mov
mov
das
add
cmp
data16
xor
mov
adc
lods
xchg
ins
cmps
div
mov
adc
repz
inc
xor
gs
sub
pusha
sub
leave
cs
adc
das
pop
xor
xchg
lea
adc
in
inc
and
(bad)
mov
adc
imul
adc
jmp
push
pop
mov
adc
mov
mov
es
adc
push
cmps
inc
pop
mov
adc
leave
xchg
(bad)
push
mov
adc
pushf
jnp
push
mov
adc
and
push
mov
adc
pop
jns
push
mov
adc
push
or
ds
movs
sub
mov
imul
dec
mov
adc
test
mov
adc
push
fld
mov
arpl
adc
adc
cmp
mov
push
aas
pop
inc
mov
adc
bound
adc
int
sub
mov
leave
jns
jg
mov
xchg
iret
xlat
jl
mov
out
pop
xor
adc
pop
adc
and
push
aad
mov
adc
inc
inc
mov
mov
adc
cs
imul
imul
adc
int3
out
es
mov
adc
inc
cmp
fadd
xor
mov
adc
jbe
xor
push
mov
adc
jle
retf
fwait
mov
adc
jmp
in
sbb
adc
pop
cmp
popf
mov
adc
dec
sbb
xchg
mov
adc
fsub
(bad)
nop
mov
adc
sbb
adc
pop
pop
sub
icebp
in
mov
adc
add
mov
ret
xchg
mov
adc
dec
jns
test
add
xchg
sbb
mov
out
mov
cmp
into
mov
mov
jl
mov
adc
add
cmps
mov
mov
push
jmp
adc
btc
mov
adc
je
movs
stos
mov
adc
into
mov
adc
adc
scas
mov
adc
and
adc
mov
adc
fld
mov
mov
pop
mov
cmp
inc
cmps
mov
adc
out
jno
movs
mov
adc
rol
adc
fs
adc
test
mov
mov
adc
inc
jg
fnsave
jne
mov
adc
and
shl
rcl
mov
adc
jge
(bad)
mov
adc
push
dec
ror
mov
cmp
mov
sub
adc
sub
mov
(bad)
pop
ret
adc
hlt
pop
hlt
shl
(bad)
mov
adc
cmps
jnp
les
enter
adc
or
psubw
loopne
mov
adc
nop
jns
cld
mov
adc
mov
adc
ss
icebp
mov
adc
ins
aam
mov
adc
data16
out
mov
adc
inc
call
mov
adc
fidivr
adc
inc
xchg
add
mov
adc
pop
aaa
out
in
mov
adc
add
loop
mov
icebp
add
loope
mov
fistp
out
mov
pop
outs
cli
in
mov
nop
pop
cmp
mov
adc
(bad)
fisttp
sbb
jecxz
push
mov
adc
retf
xchg
add
push
sti
aas
mov
xchg
jp
push
adc
(bad)
pop
mov
adc
cmps
out
adc
add
adc
nop
imul
(bad)
aas
pop
sbb
mov
adc
add
xlat
or
mov
je
popf
add
xor
adc
mov
mov
jl
popa
add
mov
iret
leave
(bad)
cmp
adc
cmp
jno
ds
adc
pop
cmps
dec
cmp
mov
adc
mov
iret
xor
push
repnz
adc
xchg
gs
xor
push
or
sub
mul
or
das
in
das
mov
adc
test
mov
inc
and
and
imul
mov
adc
das
dec
pop
es
adc
pop
sbb
pusha
sbb
mov
adc
aam
icebp
pop
mov
adc
dec
pop
leave
pop
mov
adc
xor
mov
adc
adc
inc
xchg
outs
push
mov
adc
retf
push
mov
adc
call
mov
xlat
(bad)
xchg
dec
mov
adc
push
scas
push
dec
mov
adc
inc
das
(bad)
dec
mov
adc
and
adc
mov
mov
mov
or
adc
jg
cmp
mov
in
rol
mov
adc
fisubr
jmp
scas
cmp
dec
js
mov
jnp
cmp
cmc
jmp
mov
adc
push
inc
sub
mov
adc
popf
dec
jl
mov
adc
out
aas
lahf
ja
mov
jge
sub
mov
sbb
adc
pop
mov
adc
xchg
dec
xchg
outs
mov
adc
jecxz
xor
mov
lods
mov
arpl
sbb
cmp
mov
addr16
adc
jno
pushf
gs
adc
retf
mov
adc
mov
mov
add
push
sahf
mov
adc
adc
adc
rcl
xchg
mov
adc
ror
xchg
mov
adc
or
adc
push
pop
ficom
mov
adc
mov
adc
imul
outs
sbb
jne
sbb
push
or
mov
adc
mov
mov
scas
sti
popf
adc
retf
lea
mov
adc
loope
dec
pop
mov
adc
mov
mov
inc
lock
pop
or
std
inc
or
mov
adc
in
add
push
pusha
add
xor
mov
adc
mov
push
mov
adc
std
repz
mov
adc
(bad)
pop
push
cmp
out
or
mov
adc
xor
movs
ds
adc
pop
loope
cmp
mov
sub
adc
cmp
adc
push
or
aaa
mov
adc
fild
adc
mov
aam
mov
adc
xor
pop
sub
mov
sbb
pop
sub
fdiv
adc
leave
popf
mov
mov
adc
iret
xchg
sbb
mov
adc
or
adc
cmp
pop
mov
adc
jmp
mov
ror
mov
adc
stos
jecxz
pop
mov
adc
sub
mov
ss
aaa
push
mov
adc
pop
mov
push
mov
adc
ss
adc
fdivr
adc
mov
mov
sbb
dec
mov
adc
adc
dec
mov
adc
js
scas
inc
mov
adc
jbe
and
mov
and
mov
mov
mov
adc
ss
hlt
jnp
mov
mov
lahf
js
mov
xchg
add
adc
xchg
mov
retf
mov
mov
das
popa
pop
jo
mov
dec
aas
dec
ja
mov
dec
push
and
mov
xor
adc
daa
lods
jno
mov
adc
adc
std
outs
mov
adc
fidivr
adc
or
add
mov
pop
stos
or
mov
mov
adc
adc
adc
js
pop
call
sbb
or
mov
adc
dec
arpl
mov
adc
std
popa
mov
out
xchg
leave
dec
nop
mov
adc
xchg
dec
jns
mov
adc
mov
adc
bound
cdq
mov
jns
mov
xor
adc
or
sti
lea
sti
pusha
xor
xor
jle
sahf
xchg
pop
scas
test
iret
push
mov
fist
adc
stos
idiv
mov
outs
leave
jb
mov
adc
push
adc
hlt
sbb
adc
inc
pop
std
mov
mov
fist
push
mov
mov
ficomp
stos
mov
adc
out
arpl
arpl
mov
adc
push
mov
adc
xchg
icebp
retf
mov
xchg
jg
mov
lea
mov
adc
mov
inc
movs
mov
adc
cld
leave
pop
fidiv
lods
arpl
mov
adc
or
test
mov
adc
js
xchg
fnsave
adc
shl
add
shl
cdq
mov
mov
adc
mov
hlt
aam
mov
mov
mov
jp
nop
leave
mov
adc
daa
and
adc
cmp
push
int3
mov
adc
adc
cmps
ret
adc
int
jo
mov
adc
pusha
ins
add
mov
shr
mov
adc
mov
mov
cmp
into
stc
mov
adc
or
aas
push
inc
pop
cld
mov
adc
mov
adc
mov
adc
xor
adc
pop
jnp
adc
std
std
adc
pop
cld
pop
mov
adc
iret
dec
scas
adc
jns
ror
mov
adc
lahf
dec
push
movs
test
adc
int
ss
mov
fs
or
in
adc
mov
adc
cmp
clc
push
mov
adc
mov
push
(bad)
(bad)
jnp
cmp
shl
cmp
inc
cs
adc
sub
cmp
test
xor
sar
mov
adc
cmp
scas
ss
adc
inc
jmp
adc
les
sub
loope
sub
inc
mov
mov
adc
sub
mov
adc
ror
adc
mov
mov
call
mov
xor
adc
pop
aaa
jmp
mov
adc
cmp
push
mov
adc
push
pop
mov
adc
mov
mov
adc
xchg
pop
stos
dec
mov
adc
repz
dec
mov
adc
mov
mov
fcomi
bound
mov
mov
mov
mov
cmp
adc
push
mov
inc
mov
adc
dec
adc
adc
mov
mov
xlat
jg
js
mov
pop
inc
sub
mov
jb
cmps
jge
mov
fimul
jo
mov
push
pop
pushf
ja
mov
ss
jne
mov
pop
mov
adc
std
add
mov
adc
xchg
test
adc
pusha
aaa
mov
mov
adc
sbb
mov
and
daa
xor
mov
sbb
adc
mov
cmp
adc
xchg
mov
fwait
mov
adc
mov
mov
retf
or
sahf
mov
adc
jo
fwait
pushf
mov
adc
fistp
adc
and
jp
mov
adc
xor
adc
or
adc
loop
push
jl
gs
imul
mov
adc
dec
sbb
mov
adc
add
mov
test
jmp
aam
sti
dec
test
cmp
mov
adc
mov
loope
cmps
mov
or
iret
mov
aas
popa
adc
mov
adc
gs
mov
mov
adc
mov
mov
cmps
cmps
and
fisttp
stos
mov
adc
dec
pop
mov
xor
adc
scas
mov
adc
sub
adc
inc
movs
pop
mov
jbe
pushf
mov
mul
mov
mov
adc
in
or
sub
and
aas
outs
fnstenv
jne
fbstp
sub
fnsave
xchg
nop
shl
movs
pop
shl
in
xlat
mov
adc
ret
dec
(bad)
aam
mov
pop
pop
mov
mov
adc
pop
fwait
or
repz
nop
dec
pop
cmps
int
mov
pop
imul
mov
adc
in
sub
mov
adc
add
inc
(bad)
mov
adc
lods
pop
push
mov
adc
test
mov
adc
test
adc
mov
mov
adc
mov
int
gs
adc
cmps
xchg
mov
mov
adc
xchg
pop
dec
div
jg
hlt
mov
adc
mov
adc
jecxz
or
mov
adc
imul
adc
jae
push
in
mov
adc
je
push
mov
adc
jecxz
mov
sub
sub
mov
adc
push
pop
and
mov
adc
inc
sbb
sbb
in
mov
adc
push
sub
adc
jecxz
rcl
mov
adc
sub
xlat
push
mov
adc
loope
ds
jns
push
or
mov
rcr
cmp
(bad)
mov
jae
mov
adc
rcl
mov
mov
mov
jecxz
call
pop
mov
mov
adc
jb
pop
cmp
sar
mov
adc
and
push
mov
dec
cmp
mov
pop
add
mov
adc
aaa
test
adc
mov
mov
rol
xor
mov
aam
jae
mov
adc
pop
imul
mov
mov
or
imul
mov
xor
sbb
mov
adc
pop
gs
and
mov
movs
cmp
pop
mov
adc
jnp
movs
pop
mov
adc
add
pop
mov
adc
in
test
mov
adc
mov
adc
icebp
cmp
mov
mov
adc
xlat
shr
test
ror
mov
push
push
fs
mov
adc
add
mov
movs
xor
inc
mov
adc
inc
xadd
mov
stc
sub
mov
pop
jnp
mov
pop
sbb
adc
jne
test
mov
mov
mov
mov
adc
dec
std
int
mov
adc
xchg
das
xchg
jbe
mov
inc
adc
dec
push
hlt
imul
push
out
jno
ins
mov
adc
ins
cmp
arpl
adc
mov
std
iret
iret
data16
adc
imul
rcr
inc
cwde
mov
adc
in
pop
pushf
xchg
push
mov
adc
(bad)
and
adc
mov
mov
sti
movs
rcl
add
jmp
adc
add
pop
mov
mov
jge
xchg
pop
mov
adc
pushf
jno
test
sahf
push
xchg
hlt
sti
outs
lods
mov
adc
neg
sub
aaa
sub
mov
adc
push
cmp
cmps
mov
adc
cmp
out
mov
adc
jnp
inc
(bad)
mov
mov
adc
sbb
inc
fidiv
mov
mov
adc
mov
mov
jl
push
shl
pop
xlat
mov
adc
lea
adc
ret
(bad)
mov
adc
mov
adc
mov
adc
fstp
adc
xchg
jg
cli
adc
push
mov
adc
push
std
mov
lahf
cld
adc
(bad)
mov
pushf
icebp
pop
xor
mov
adc
sbb
je
mov
adc
mov
push
or
lea
push
mov
adc
xchg
das
fmul
test
mov
or
fwait
add
addr16
pop
mov
adc
leave
sbb
cwde
outs
jge
cmp
sub
cmp
mov
cmp
mov
sti
mov
mov
dec
jno
xor
mov
adc
jge
sbb
push
mov
adc
mov
adc
and
mov
mov
dec
sub
mov
jmp
aam
mov
adc
xchg
in
jnp
mov
adc
int3
fbstp
(bad)
lods
mov
and
pop
xchg
mov
mov
adc
mov
ret
mov
in
les
mov
(bad)
mov
adc
lahf
test
mov
mov
mov
adc
push
arpl
mov
ret
push
mov
adc
mov
mov
sub
dec
mov
adc
pop
cvtpi2ps
mov
out
out
mov
adc
es
and
push
xchg
dec
cmp
mov
mov
mov
sub
fld
adc
(bad)
shl
mov
adc
in
loope
js
mov
lock
dec
or
loop
mov
adc
pop
sbb
mov
out
jne
jno
mov
int
jecxz
mov
adc
sub
push
jne
mov
inc
retf
push
push
mov
addr16
push
pop
rcl
adc
std
push
and
adc
jge
jecxz
mov
adc
lahf
aaa
lahf
popa
mov
adc
enter
mov
adc
push
dec
adc
adc
push
mov
adc
out
dec
mov
inc
push
out
sahf
mov
adc
clc
mov
pushf
mov
adc
mov
ss
mov
adc
aaa
cmp
loop
lahf
pop
xchg
mov
adc
xchg
mov
xchg
mov
adc
inc
cmp
mov
mov
adc
adc
outs
mov
xor
adc
add
out
mov
adc
xor
push
xor
mov
mov
adc
xor
mov
std
movs
sahf
mov
into
sbb
xchg
cmp
adc
xchg
pop
es
mov
mov
mov
test
mov
push
out
xchg
mov
mov
sbb
mov
xor
test
jl
push
scas
mov
adc
xor
mov
dec
ins
inc
int
mov
adc
fisubr
mov
mov
test
popf
daa
das
movs
mov
adc
push
adc
mov
pop
fnstenv
fnstcw
hlt
rcl
fnsave
inc
jl
mov
adc
inc
cdq
mov
mov
adc
add
(bad)
mov
adc
xlat
pop
xor
mov
adc
and
jnp
mov
adc
nop
inc
push
sub
and
adc
in
jmp
mov
adc
scas
icebp
cmp
mov
adc
aaa
popf
sub
mov
adc
cmp
adc
mov
mov
dec
xchg
cmp
mov
adc
add
cmp
mov
adc
mov
mov
jmp
mov
jno
retf
repnz
adc
pop
jnp
lock
adc
dec
retf
xor
mov
adc
mov
mov
repz
jmp
push
call
sbb
(bad)
out
mov
adc
sti
pop
push
in
mov
adc
mov
pusha
jecxz
mov
adc
adc
pop
jns
out
mov
rcl
adc
adc
adc
push
jns
sbb
int3
push
mov
adc
sahf
(bad)
(bad)
sbb
aam
sub
mov
adc
dec
daa
aas
adc
mov
ret
in
adc
das
jmp
or
dec
or
(bad)
mov
adc
sub
push
or
add
adc
push
mov
imul
cli
(bad)
sbb
add
sub
cmp
mov
mov
adc
rcr
mov
fcomp
mov
add
xor
xor
sub
aam
sbb
mov
adc
jecxz
js
mov
adc
inc
imul
mov
or
adc
xchg
ror
cmp
and
loopne
mov
adc
adc
mov
lea
sub
mov
and
pop
pop
mov
adc
mov
(bad)
pop
mov
adc
mov
add
mov
push
sub
mov
adc
sbb
push
mov
adc
pop
fcomip
push
mov
adc
adc
mov
ror
push
mov
adc
arpl
adc
sub
fimul
mov
mov
leave
dec
mov
adc
mov
mov
fistp
push
mov
adc
jp
mov
mov
adc
fldcw
adc
xchg
imul
mov
or
inc
jns
mov
adc
adc
dec
mov
adc
bound
jae
mov
es
mov
cmp
sub
mov
xchg
rcl
mov
mov
dec
fwait
icebp
imul
adc
retf
ins
mov
adc
leave
std
sbb
mov
mov
inc
pusha
mov
adc
mov
data16
adc
sub
gs
adc
popa
cdq
xor
stc
cmc
and
div
pusha
lahf
mov
adc
outs
cdq
jae
mov
adc
enter
mov
adc
adc
mov
adc
and
xchg
mov
adc
imul
ins
mov
push
mov
adc
sub
mov
adc
imul
adc
xor
push
xor
xor
adc
jmp
cli
test
xor
fs
mov
push
mov
mov
xchg
fwait
sar
sbb
mov
mov
(bad)
jmp
adc
fcomp
xor
or
jne
mov
adc
jg
inc
stos
mov
adc
or
mov
pusha
mov
scas
mov
adc
dec
ret
shr
sahf
xchg
jb
mov
adc
aam
mov
and
cmps
mov
adc
inc
cmp
adc
fist
(bad)
movs
fnstenv
cmps
fidiv
xchg
fnsave
inc
shl
push
shl
push
(bad)
mov
adc
dec
test
aad
mov
jno
clc
retf
mov
adc
outs
stos
clc
enter
ds
push
or
int3
mov
adc
loope
ret
ret
adc
jns
rol
mov
adc
jbe
xchg
(bad)
mov
adc
out
add
cli
mov
adc
dec
retf
mov
cmps
call
mov
mov
mov
cmp
repz
adc
or
adc
and
adc
xor
cmc
mov
adc
jl
je
mov
adc
kxorb
mov
adc
(bad)
cmc
in
mov
adc
shl
in
mov
adc
adc
loop
mov
sbb
push
loope
mov
test
inc
out
mov
adc
in
mov
pop
adc
adc
sti
pop
add
ret
xlat
push
mov
adc
sub
adc
movs
sub
mov
adc
hlt
outs
adc
fwait
rcl
mov
adc
push
sub
adc
and
adc
mov
imul
mov
adc
mov
enter
mov
adc
push
popa
retf
mov
cmp
fwait
add
dec
cwde
push
mov
adc
rcr
add
fwait
lahf
js
mov
adc
add
imul
mov
lea
data16
adc
jmp
mov
(bad)
shr
sub
fwait
test
cmps
(bad)
adc
adc
xor
xor
mov
fcmovnu
push
mov
adc
mov
sub
pop
jo
mov
adc
lock
int3
sub
mov
jge
push
mov
adc
sbb
or
shl
daa
mov
adc
jne
pop
and
jp
mov
cmp
outs
mov
out
pop
sub
mov
xor
pop
mov
adc
cmp
push
mov
adc
fwait
inc
xchg
push
mov
adc
rol
adc
dec
out
push
push
mov
adc
fiadd
adc
test
mov
loope
push
mov
adc
inc
sub
adc
or
mov
mov
nop
xchg
les
mov
scas
(bad)
sub
adc
pop
ins
jnp
mov
out
add
cmp
sbb
ss
pop
sub
mov
dec
add
adc
add
mov
popf
scas
(bad)
mov
xchg
scas
call
add
imul
lds
mov
push
mov
and
adc
mov
mov
retf
loope
popa
mov
adc
adc
adc
dec
adc
add
ss
mov
adc
repnz
lahf
cwde
mov
adc
jmp
mov
jns
xchg
pushf
mov
adc
jmp
and
popa
stos
xchg
mov
adc
lods
cdq
mov
cmp
adc
cwde
cpuid
mov
leave
jo
mov
adc
dec
movs
arpl
inc
movs
and
leave
xor
pop
popa
jmp
adc
xchg
aad
test
mov
adc
nop
mov
adc
dec
sbb
adc
xchg
popf
cmps
mov
je
mov
mov
adc
aam
push
push
int
mov
mov
lods
ffreep
mov
mov
out
adc
jg
add
jo
inc
scas
mov
adc
call
mov
sbb
mov
push
pop
hlt
mov
mov
mov
and
adc
arpl
adc
es
adc
pusha
test
adc
addr16
mov
adc
daa
mov
shl
ins
xor
mov
adc
(bad)
jg
(bad)
mov
adc
lea
adc
adc
mov
sbb
xchg
mov
adc
cmp
ret
jnp
mov
adc
inc
sar
mov
loopne
dec
shl
mov
mov
adc
test
jb
mov
adc
repnz
mov
test
ror
call
rcr
std
mov
adc
mov
mov
pop
adc
mov
mov
adc
rcl
add
xchg
or
mov
adc
push
stc
sbb
mov
adc
and
aam
mov
adc
imul
in
mov
adc
or
mov
adc
ret
loope
mov
icebp
mov
out
mov
jl
jne
mov
adc
and
jmp
mov
adc
jae
or
mov
adc
into
jnp
sbb
mov
imul
adc
out
adc
pop
ficom
mov
adc
dec
lea
adc
push
daa
int
mov
adc
mov
adc
mov
gs
sbb
adc
sbb
sbb
adc
mov
neg
imul
adc
and
adc
add
adc
xchg
mov
(bad)
dec
mov
adc
popa
mov
adc
xlat
sar
out
test
hlt
das
dec
int3
add
pop
mov
adc
mov
stc
cmp
sub
mov
adc
add
into
cmp
mov
mov
mov
ret
jns
xor
sub
aaa
mov
adc
not
adc
fisttp
adc
(bad)
inc
das
sub
movzx
mov
adc
xchg
inc
dec
sub
es
ins
scas
pop
jmp
mov
adc
outs
xor
mov
adc
or
mov
sahf
outs
aaa
pop
mov
adc
push
aas
and
mov
(bad)
jne
pop
mov
adc
push
push
cmp
mov
adc
mov
push
mov
adc
das
jae
push
mov
adc
(bad)
jnp
push
mov
adc
adc
push
push
mov
adc
inc
adc
adc
movs
std
or
arpl
mov
adc
in
fild
mov
bound
adc
jae
cmp
adc
rol
adc
push
mov
adc
xor
adc
jp
push
jbe
mov
lea
adc
mov
mov
xchg
adc
mov
adc
fsub
outs
mov
adc
(bad)
stos
or
mov
mov
in
arpl
xlat
hlt
pusha
mov
adc
inc
in
data16
adc
fidivr
aas
gs
adc
in
repz
sub
adc
xchg
push
lahf
mov
adc
out
pop
popf
mov
adc
dec
xchg
xchg
mov
adc
xchg
repz
nop
mov
adc
and
adc
or
adc
and
mov
pop
dec
mov
mov
xor
jmp
adc
push
mov
adc
dec
jmp
xor
rol
jg
test
in
fdivr
cld
or
adc
cli
test
adc
mov
push
mov
mov
mov
cdq
lods
add
std
xor
adc
add
add
test
mov
lods
setnp
jno
cwde
scas
mov
adc
scas
lds
scas
inc
lea
mov
adc
dec
mov
mov
pop
or
mov
adc
jmp
or
push
(bad)
lahf
hlt
fdiv
dec
dec
fbstp
ins
jp
mov
adc
clc
lods
sub
mov
adc
add
int
mov
adc
cmp
adc
xor
pop
retf
mov
adc
dec
dec
and
mov
adc
pop
pop
mov
push
and
pushf
int
mov
and
inc
ret
mov
adc
or
test
mov
adc
add
adc
jmp
mov
dec
lahf
and
mov
adc
call
js
addr16
(bad)
mov
adc
sub
mov
mov
mov
ret
icebp
mov
adc
out
test
mov
adc
aas
dec
mov
mov
adc
fnstenv
jmp
jge
mov
adc
pop
xchg
mov
mov
adc
gs
cmp
mov
adc
retf
in
jecxz
mov
cli
pop
mul
mov
adc
out
jg
mov
adc
cli
add
in
mov
sbb
sbb
push
sub
mov
adc
add
mov
dec
inc
sbb
scas
pop
adc
mov
xor
call
mov
adc
int
xchg
pop
mov
adc
popf
xor
mov
adc
call
add
cmps
dec
mov
adc
stc
jmp
adc
jno
dec
pushf
add
xchg
push
xchg
repz
jmp
mov
adc
fwait
addr16
mov
adc
and
push
cmp
idiv
mov
adc
jle
lods
ds
adc
xchg
pop
dec
cmp
dec
push
jp
std
push
xor
lock
adc
or
adc
cmc
sbb
adc
iretw
into
sub
fwait
cs
adc
cmp
inc
sub
mov
jmp
adc
sub
fbld
mov
adc
jmp
and
or
mov
adc
mov
sub
mov
jno
sbb
adc
dec
daa
inc
pop
mov
adc
sub
adc
mov
mov
es
mov
mov
adc
bound
adc
cmp
mov
and
mov
jl
xor
mov
adc
in
jecxz
mov
adc
in
pop
loop
mov
adc
or
mov
adc
jbe
push
inc
mov
adc
cwde
and
adc
and
adc
shr
pop
inc
or
jg
mov
push
mov
add
adc
push
xor
data16
and
mov
adc
ins
gs
jne
mov
pop
ja
push
mov
adc
adc
mov
inc
dec
jae
mov
adc
mov
mov
enter
mov
adc
sbb
pushf
stc
jnp
data16
adc
sub
mov
mov
dec
rcr
fwait
mov
adc
(bad)
xlat
add
std
xor
sahf
mov
adc
ins
in
popf
mov
adc
or
mov
mov
mov
dec
mov
xchg
mov
adc
fwait
mov
adc
bnd
mov
jb
mov
adc
iret
mov
adc
mov
mov
stos
cmps
jge
xor
xor
adc
movs
or
mov
mov
outs
int
mov
xchg
mov
lock
xchg
sbb
push
iret
bound
sub
adc
xor
adc
adc
xor
iret
xor
mov
adc
shr
test
adc
scas
mov
adc
aad
mov
mov
adc
movs
out
mov
cmp
xor
add
int3
cmps
mov
adc
mov
mov
jle
(bad)
fidiv
jl
mov
adc
ins
pop
pop
fidiv
aam
mov
adc
xor
mov
adc
cmps
(bad)
repnz
loop
mov
adc
mov
mov
loopne
arpl
retf
mov
adc
(bad)
movsx
mov
adc
les
into
mov
adc
sub
mov
fild
adc
sbb
adc
xchg
push
push
(bad)
mov
adc
stos
pop
pop
lds
cmp
mov
adc
fistp
clc
mov
adc
xor
sub
mov
adc
inc
cmp
inc
jle
cmps
repnz
adc
mov
mov
or
div
movs
cmc
mov
adc
and
mov
call
jbe
add
adc
adc
imul
mov
adc
mov
sub
mov
adc
dec
idiv
loope
mov
cmp
out
mov
bnd
in
mov
mov
mov
push
jno
sbb
sub
adc
push
std
mov
add
adc
mov
adc
and
adc
aas
push
push
mov
adc
das
iret
pop
adc
int
mov
adc
mov
inc
ins
xor
scas
es
les
mov
ror
push
add
jne
add
mov
push
mov
adc
dec
xor
jbe
pop
cmp
pop
out
mov
adc
jmp
jmp
das
int3
cmp
cmp
mov
push
pop
div
mov
adc
cmps
inc
fdiv
mov
adc
jl
push
mov
adc
add
mov
pop
fst
das
mov
adc
shl
mov
adc
inc
add
adc
les
mov
les
add
shl
mov
fild
pop
mov
adc
add
push
clc
dec
xlat
bound
adc
adc
mov
mov
adc
or
push
mov
adc
cmps
cmp
push
mov
adc
inc
imul
mov
adc
ret
dec
mov
adc
xlat
movs
inc
dec
mov
adc
mov
mov
cmps
and
mov
adc
pushf
lahf
xchg
inc
mov
adc
mov
dec
inc
mov
adc
cmp
inc
mov
adc
pushf
loope
inc
mov
adc
sbb
jnp
mov
stos
aaa
idiv
mov
cs
mov
mov
adc
dec
pop
sar
adc
push
xchg
adc
mov
adc
hlt
push
jno
mov
cmp
ja
mov
push
das
cmc
je
mov
cmc
push
cwde
push
mov
jno
cmp
mov
hlt
addr16
mov
adc
pop
pop
xchg
mov
xor
and
mov
fwait
pop
xchg
pusha
mov
adc
cmp
mov
mov
stos
gs
adc
test
adc
add
cwde
mov
adc
gs
adc
fmul
adc
aaa
movs
jmp
mov
adc
adc
xchg
mov
adc
ins
daa
jno
mov
adc
xchg
stos
jbe
mov
adc
fst
lds
xchg
ja
mov
adc
out
pop
(bad)
mov
adc
mov
push
mov
adc
fld
adc
loopne
inc
xor
mov
ins
retf
jne
xchg
int
mov
fnstcw
adc
mov
sar
fwait
xor
call
adc
and
mov
mov
mov
loope
mov
adc
pop
repz
mov
mov
imul
add
mov
pop
scas
mov
adc
xchg
xchg
lods
mov
adc
je
je
mov
adc
sbb
adc
retf
cmps
mov
adc
add
adc
mov
sub
mov
adc
sbb
dec
cmps
popf
cmc
fbstp
and
push
loopne
adc
mov
adc
push
or
mov
adc
jge
popa
(bad)
mov
adc
stos
das
xchg
aad
mov
add
xchg
retf
mov
adc
xchg
adc
popa
out
into
mov
adc
shr
out
mov
adc
test
test
mov
mov
pusha
adc
(bad)
mov
adc
popf
sbb
mov
adc
int
mov
mov
adc
sub
adc
jns
sub
mov
adc
and
adc
sbb
repz
adc
jne
dec
icebp
mov
adc
xchg
xchg
lods
div
addr16
cmc
mov
adc
inc
sub
adc
sub
ja
mov
adc
int3
inc
mov
cs
xor
mov
adc
add
mov
js
xchg
loope
mov
xor
mov
stc
gs
mov
adc
mov
mov
xchg
iret
jbe
mov
adc
pop
repz
mov
adc
push
push
inc
sbb
mov
arpl
popa
adc
add
push
mov
adc
shl
adc
mov
popa
or
xor
mov
adc
and
ror
mov
xor
test
mov
pusha
dec
mov
repnz
and
mov
adc
cli
arpl
pop
mov
adc
mov
add
xlat
stos
popf
cmp
stc
dec
cmp
mov
ds
adc
arpl
cmp
mov
or
adc
dec
rcr
mov
adc
pusha
jns
aaa
mov
adc
out
xor
adc
or
adc
add
shr
mov
adc
out
inc
das
mov
adc
jge
fsubr
sbb
adc
jmp
sahf
mov
mov
push
icebp
fcomp
mov
xchg
mov
pop
mov
adc
mov
mov
div
push
mov
adc
push
mov
adc
iret
mov
dec
mov
adc
inc
shl
add
jmp
adc
lds
outs
dec
mov
adc
cli
int
inc
mov
adc
jmp
adc
imul
inc
mov
adc
jno
mov
and
mov
int
cmp
mov
adc
jle
push
jge
mov
mov
inc
jae
mov
xchg
(bad)
jo
mov
dec
stos
fnstenv
mov
mov
mov
jae
xlat
imul
and
mov
dec
stc
retf
outs
mov
adc
push
add
adc
sub
mov
jo
repz
(bad)
mov
data16
adc
pop
xchg
leave
fs
adc
push
pop
jg
mov
adc
div
adc
jnp
push
popf
mov
adc
add
rcl
jno
cdq
xchg
mov
adc
call
mov
jnp
daa
mov
popf
dec
mov
xchg
aas
mov
or
mov
adc
not
adc
stos
fadd
loopne
pop
xchg
adc
test
ins
cmp
or
mov
jge
lds
jae
mov
pop
jb
lea
pop
in
sti
mov
mov
in
xor
mov
mov
in
imul
mov
adc
sub
pop
scas
mov
adc
pop
aad
lods
mov
adc
popf
xchg
mov
push
jge
mov
xchg
cmp
adc
xor
adc
lds
adc
xor
fdiv
jne
fidiv
gs
mov
(bad)
shr
xor
push
movs
mov
adc
mov
cdq
aad
mov
ja
aam
mov
adc
(bad)
gs
mov
adc
and
sub
mov
adc
fwait
iret
test
mov
xchg
push
sbb
mov
adc
in
cmp
rcr
mov
sbb
sub
mov
adc
mov
adc
(bad)
cmp
mov
call
mov
cmps
retf
xor
push
cmps
sub
adc
clc
scas
int3
hlt
mov
adc
and
jmp
mov
in
pusha
jmp
stc
cmp
adc
inc
jns
in
mov
adc
mov
sbb
mov
adc
jne
sti
loopne
mov
mov
leave
out
mov
cmc
retf
pop
in
mov
std
jg
sbb
pop
mov
mov
adc
mov
mov
jp
xor
mov
sbb
adc
pop
sbb
mov
adc
dec
fld
int3
into
sub
adc
or
leave
or
retf
mov
xchg
mov
cmpxchg
mov
mov
adc
inc
mov
push
lds
pop
mov
adc
adc
mov
push
inc
mov
cli
in
les
mov
adc
aaa
and
ds
adc
xchg
fist
mov
jmp
xor
mov
adc
shl
sbb
sbb
xor
mov
xchg
pop
sbb
mov
adc
es
sub
mov
adc
lods
push
ins
sub
mov
jo
jnp
mov
adc
adc
pop
inc
mov
adc
arpl
adc
push
gs
mov
adc
sbb
pop
mov
adc
push
mov
pop
mov
adc
cmp
imul
adc
mov
mov
xor
jmp
ret
imul
cmps
(bad)
dec
mov
adc
dec
xor
dec
mov
adc
out
push
dec
mov
adc
mov
mov
mov
mov
jae
adc
rol
mov
mov
sti
jp
mov
push
jno
js
mov
in
pusha
jle
mov
mov
adc
and
mov
mov
adc
push
adc
add
or
adc
js
shr
mov
mov
jmp
mov
adc
mov
sub
adc
jg
movs
ins
mov
adc
jmp
push
int
dec
popa
mov
adc
inc
xchg
aaa
data16
adc
push
movs
fwait
mov
adc
stos
out
xor
mov
sahf
mov
adc
(bad)
cmp
mov
adc
inc
arpl
xchg
mov
adc
inc
iret
loop
mov
adc
pop
xchg
cli
xchg
mov
adc
xor
lahf
mov
jnp
mov
push
inc
(bad)
mov
adc
jecxz
fisttp
cwde
pop
push
xor
aaa
xor
mov
leave
pop
nop
test
xor
adc
lock
adc
fld
cmp
fist
mov
adc
dec
jecxz
mov
mov
cmp
adc
hlt
inc
data16
mov
mov
mov
and
test
adc
mov
pop
mov
mov
mov
in
idiv
push
test
adc
pusha
mov
scas
fidiv
and
(bad)
push
xchg
fidiv
or
adc
(bad)
not
shl
inc
jl
mov
adc
push
or
sub
ja
aam
mov
push
sar
mov
and
adc
mov
mov
mov
mov
add
adc
test
adc
push
cmc
sub
dec
push
pop
inc
les
out
sti
mov
adc
mov
jns
mov
adc
pop
jae
(bad)
mov
adc
fadd
loope
mov
adc
imul
repnz
adc
cmp
ja
mov
adc
(bad)
xlat
(bad)
div
frstor
push
inc
gs
jmp
mov
pop
pop
pop
jmp
adc
adc
jno
sbb
mov
adc
adc
loop
mov
arpl
loopne
mov
lds
adc
pop
int
sbb
inc
sbb
mov
adc
out
in
sbb
mov
jo
rcl
mov
push
out
adc
xchg
mov
mov
adc
and
mov
sub
enter
or
or
cs
push
add
sbb
add
mov
pop
mov
adc
inc
jmp
adc
xor
adc
sbb
adc
jno
(bad)
aas
mov
adc
pop
aas
pop
cmp
mov
(bad)
mov
mov
adc
jl
out
mov
adc
push
(bad)
aaa
mov
adc
gs
pop
xor
adc
pop
sub
(bad)
sub
jno
das
mov
adc
jns
mov
mov
adc
sub
inc
imul
mov
adc
es
imul
icebp
cmp
and
mov
leave
mov
pop
mov
adc
mov
out
pop
mov
adc
pop
ret
call
adc
xchg
adc
push
mov
adc
scas
xor
adc
int
jmp
cmp
cmp
adc
out
pop
dec
mov
adc
popf
or
dec
mov
adc
movs
stos
or
jno
dec
mov
adc
comiss
inc
mov
adc
das
cmp
adc
mov
inc
mov
adc
and
adc
or
call
adc
mov
mov
mov
mov
mov
mov
mov
adc
jp
shl
mov
jmp
mov
ss
adc
jnp
dec
push
mov
inc
jg
imul
mov
pop
shr
adc
das
imul
mov
adc
xor
fs
adc
inc
mov
fwait
mov
adc
movs
cmp
cdq
mov
adc
sbb
lahf
mov
adc
push
retf
pushf
mov
adc
xor
iret
xchg
mov
adc
ds
sbb
push
jg
xchg
mov
adc
add
dec
xchg
mov
adc
ror
adc
adc
mov
(bad)
fstp
mov
adc
popf
adc
mov
adc
adc
ins
xor
stos
xor
mov
fist
test
dec
cmps
mov
mov
mov
xor
scas
mov
popa
fwait
mov
call
adc
cld
or
mov
mov
int
dec
mov
mov
xchg
jg
mov
mov
nop
pop
sbb
rcr
mov
adc
neg
and
push
fnsave
lods
mov
adc
rcl
mov
aaa
das
pop
mov
leave
jno
cmps
mov
adc
sbb
movs
mov
adc
inc
iret
int3
(bad)
fisttp
fdiv
gs
fbstp
or
mov
sub
shl
adc
mov
ins
sbb
mov
adc
xor
mov
sti
movs
fcmove
mov
adc
clc
gs
leave
mov
adc
push
and
pusha
sbb
mov
mov
adc
fidiv
adc
es
shl
jmp
out
loope
lds
outs
data16
mov
adc
inc
mov
stc
mov
adc
sub
test
mov
mov
adc
int
jb
mov
adc
(bad)
int
icebp
mov
adc
jae
div
shl
mov
adc
mov
inc
jmp
repz
cmps
ins
mov
mov
adc
cmps
icebp
add
mov
adc
mov
jmp
je
pop
out
mov
adc
sbb
es
mov
lods
repz
mov
fldenv
adc
aas
dec
jg
mov
adc
retf
xchg
jne
mov
adc
out
rol
sbb
rcr
lods
adc
and
outs
mov
pop
mov
adc
and
nop
adc
mov
cmp
adc
sub
or
inc
jg
mov
adc
mov
mov
iret
dec
imul
inc
aas
add
adc
mov
adc
xchg
add
mov
dec
cmp
mov
adc
js
lods
cmp
(bad)
in
ds
adc
dec
mov
adc
ss
into
xor
test
adc
mov
stos
aaa
mov
adc
ja
mov
or
jnp
sub
dec
call
(bad)
sbb
lahf
das
mov
adc
xchg
xor
adc
fisttp
cmc
and
div
and
or
mov
adc
inc
(bad)
retf
neg
mov
test
jae
mov
adc
imul
cmp
or
mov
adc
std
adc
adc
ins
xchg
or
mov
mov
mov
jne
test
mov
adc
sbb
mov
mov
adc
jbe
add
mov
add
cmps
dec
mov
adc
cmp
mov
push
ins
xor
mov
mov
mov
dec
xchg
inc
mov
mov
bnd
mov
mov
std
jns
mov
cli
stos
jno
mov
adc
stos
add
push
not
dec
jae
mov
fucompp
mov
into
das
or
jbe
mov
outs
jg
je
mov
nop
cmp
adc
push
mov
push
lock
outs
mov
adc
mov
int3
ins
mov
adc
and
mov
popf
aad
popa
mov
adc
xor
adc
arpl
pop
fs
adc
out
fistp
push
xchg
and
je
retf
mov
ficom
adc
jns
int3
xchg
mov
adc
jns
lods
nop
mov
adc
out
enter
adc
shr
in
mov
mov
out
(bad)
cmp
mov
adc
scas
aas
stc
mov
lods
mov
lods
jge
mov
adc
popf
adc
bound
mov
gs
adc
outs
cmp
mov
jmp
mov
sar
stc
mov
xchg
icebp
inc
mov
mov
out
or
movs
pop
adc
push
stos
inc
sbb
ficomp
cmp
xor
lods
scas
mov
adc
inc
maskmovq
imul
jne
jmp
mov
mov
inc
mov
es
mov
adc
or
sub
mov
adc
xchg
aaa
xchg
fnstenv
fwait
mov
mov
adc
enter
mov
adc
sub
cmp
mov
adc
xchg
mov
shl
cdq
hlt
aam
mov
mov
mov
cmp
mov
mov
adc
or
xchg
into
mov
adc
dec
pop
cmp
mov
adc
push
add
adc
jmp
xchg
shl
dec
(bad)
mov
adc
std
add
lds
ret
and
mov
adc
fucomi
fdivrp
mov
adc
adc
mov
dec
adc
adc
fsubr
fcomi
mov
adc
hlt
ret
aam
mov
adc
ja
pop
div
leave
loopne
mov
adc
sbb
mov
xchg
bound
adc
sub
in
mov
adc
popa
pop
xor
mov
adc
gs
mov
adc
xor
mov
leave
imul
cs
and
mov
adc
mov
mov
jle
test
dec
mov
mov
cmps
or
mov
test
aam
in
push
mov
adc
adc
adc
in
sub
repnz
movs
or
push
and
mov
adc
int
sahf
or
dec
cdq
or
mov
adc
xor
inc
mov
adc
(bad)
add
mov
pusha
out
cmp
xchg
and
mov
adc
and
sub
mov
adc
je
and
mov
adc
mov
mov
xchg
in
jno
mov
adc
sbb
aaa
mov
adc
xor
xor
sbb
fs
pusha
sub
xor
mov
adc
cmps
(bad)
pop
sub
repnz
add
mov
adc
dec
mov
adc
ss
daa
mov
adc
(bad)
pop
mov
rcr
add
mov
daa
jnp
pop
mov
adc
xchg
sti
fcomp
mov
psrlw
mov
adc
out
or
mov
adc
ror
push
mov
adc
push
repnz
mov
adc
fwait
mov
adc
pop
ja
dec
mov
adc
out
and
cmp
adc
hlt
popf
stos
dec
dec
mov
adc
cmp
sbb
pop
inc
sbb
inc
mov
adc
adc
add
call
mov
adc
lock
adc
adc
jo
mov
adc
dec
pop
in
mov
adc
inc
pop
mov
mov
adc
inc
ud1
mov
std
stc
lahf
jno
mov
or
adc
pop
inc
(bad)
je
mov
adc
mov
adc
xchg
aaa
xlat
push
out
mov
mov
adc
leave
std
inc
ins
mov
adc
sub
adc
pop
(bad)
popa
mov
adc
dec
sub
call
mov
adc
mov
es
mov
adc
cld
cdq
test
mov
out
sahf
mov
adc
adc
call
add
inc
xchg
mov
adc
lds
mov
mov
mov
call
xchg
mov
adc
adc
dec
mov
mov
mov
pop
outs
(bad)
mov
adc
pop
mov
mov
jge
xor
jmp
mov
adc
xchg
adc
aad
add
xor
mov
mov
adc
cmc
inc
mov
xor
mov
mov
popa
cmps
clc
mov
mov
shl
mov
mov
inc
mov
adc
adc
stos
mov
adc
inc
dec
add
jbe
push
scas
mov
adc
push
adc
mov
adc
push
lahf
xchg
mov
cmp
jnp
mov
adc
or
cmps
cmps
mov
adc
mov
cmps
movs
mov
adc
mov
mov
jmp
sbb
mov
adc
mov
mov
icebp
fldcw
mov
adc
jo
xchg
shl
xchg
cld
xchg
aas
or
mov
adc
mov
mov
cmp
adc
mov
adc
mov
mov
popa
mov
adc
in
sub
mov
adc
rcr
cmc
ret
adc
aaa
jnp
shl
pop
(bad)
mov
adc
test
mov
adc
mov
cmps
sti
mov
adc
ret
stc
mov
adc
stc
std
pop
(bad)
mov
adc
js
(bad)
cld
mov
adc
mov
movs
repz
adc
push
pop
jne
mov
adc
retf
div
repz
mov
adc
sbb
jmp
imul
mov
adc
push
xor
adc
test
adc
xchg
iret
cmp
mov
adc
dec
dec
or
(bad)
jge
mov
adc
xchg
mov
adc
and
jbe
mov
or
add
sbb
pop
mov
inc
mov
mov
test
adc
adc
adc
mov
pop
mov
ret
and
inc
ror
mov
repz
or
ja
bsr
inc
or
mov
fst
enter
adc
pop
jno
add
jne
push
mov
inc
adc
jb
dec
mov
movs
movs
repz
mov
retf
and
sbb
out
jp
mov
imul
xor
mov
adc
and
xor
mov
sbb
inc
sub
retf
sbb
jb
int
cs
outs
pop
sub
jp
fwait
and
stos
mov
mov
jae
es
cmps
jmp
adc
adc
jle
fwait
pop
mov
xchg
leave
pop
mov
ins
mov
mov
and
mov
mov
xchg
fist
mov
cwde
pop
popf
push
mov
fist
mov
inc
arpl
dec
mov
cmp
mov
mov
mov
mov
adc
jmp
test
lahf
or
mov
xor
inc
mov
jmp
adc
pop
sbb
mov
xor
adc
lods
mov
mov
dec
scas
jl
mov
xor
adc
push
xchg
aaa
jno
mov
fld
adc
test
cmp
adc
lock
js
mov
xor
mov
mov
div
ins
mov
pop
bound
xchg
iret
pusha
mov
daa
sbb
push
adc
shl
pop
int3
and
in
mov
adc
bound
adc
cdq
inc
jl
mov
std
sbb
shr
daa
xchg
mov
sti
mov
mov
lahf
jmp
mov
push
(bad)
mov
(bad)
xchg
mov
out
cmp
repnz
mov
jno
jecxz
mov
mov
adc
arpl
cmp
pusha
int
mov
xor
mov
pop
add
sub
jle
enter
mov
mov
add
sti
mov
mov
mov
stos
mov
dec
imul
mov
xchg
sub
faddp
cmps
retf
mov
fdivr
jecxz
mov
cmps
(bad)
cmps
mov
fnsave
inc
add
inc
mov
mov
popf
push
lods
adc
sar
cmps
inc
sar
jns
(bad)
mov
gs
aad
mov
aas
or
mov
jne
leave
mov
xchg
arpl
mov
dec
push
int
mov
outs
sbb
ret
adc
or
sar
and
mov
dec
xchg
mov
cmp
mov
jmp
adc
mov
mov
fiadd
adc
jge
add
mov
push
(bad)
icebp
mov
mov
adc
ins
ins
out
cmc
mov
mov
jmp
mov
cmps
sbb
mov
inc
adc
mov
push
(bad)
mov
popa
das
loop
mov
jne
shl
mov
imul
stos
mov
adc
cmp
mov
mov
mov
lds
xchg
mov
mov
adc
stos
(bad)
or
dec
adc
mov
ss
pop
mov
jecxz
adc
popa
dec
arpl
mov
and
or
imul
mov
pop
lea
(bad)
dec
inc
add
xor
mov
sub
cmp
mov
mov
mov
movs
or
mov
jge
aas
mov
xor
cmp
mov
mov
adc
mov
adc
mov
mov
aam
push
sbb
xlat
mov
mov
adc
and
sbb
mov
dec
out
xor
mov
adc
(bad)
test
adc
aas
int
push
mov
adc
push
fcom
dec
cmps
imul
fcom
arpl
mov
adc
mov
mov
xlat
xlat
cli
or
mov
mov
mov
mov
adc
or
les
mov
adc
movs
fild
mov
mov
adc
adc
adc
mov
mov
adc
mov
dec
cmp
xor
fmul
mov
stc
sbb
adc
test
js
mov
adc
ret
sub
dec
movaps
out
call
addr16
mov
adc
loopne
push
and
cmps
lds
mov
adc
adc
mov
jg
shl
in
pop
mov
adc
cwde
dec
and
mov
adc
and
cmp
mov
adc
sub
adc
inc
cmp
mov
adc
sbb
push
mov
adc
jae
add
scas
mov
mov
shl
dec
mov
adc
and
mov
call
adc
movs
int
inc
mov
adc
into
gs
inc
mov
adc
mov
mov
mov
adc
fbld
pop
inc
mov
adc
fbstp
jp
mov
xchg
add
adc
stc
lods
xchg
jle
mov
push
cmp
jge
mov
fs
xor
mov
shr
adc
into
lahf
add
mov
movs
aaa
jmp
mov
adc
pop
(bad)
or
mov
lods
xor
cwde
int
mov
movs
sub
ins
mov
adc
cs
adc
(bad)
or
mov
jb
das
addr16
adc
movs
or
adc
paddusw
fwait
mov
adc
gs
cwde
mov
adc
jl
and
push
mov
adc
xchg
pop
pop
xchg
mov
adc
clc
icebp
out
nop
mov
adc
adc
pop
xchg
mov
adc
in
(bad)
not
xchg
push
mov
cmp
mov
lea
mov
and
adc
pop
jns
xor
int
mov
adc
cmc
lea
xchg
lahf
and
adc
in
pop
mov
mov
mov
mov
adc
inc
lds
mov
das
ins
loop
mov
adc
aas
add
enter
mov
mov
cdq
(bad)
mov
push
jp
leave
mov
mov
mov
fsubr
sub
add
push
and
mov
adc
cmc
push
in
lods
mov
adc
popa
outs
xor
mov
xor
add
and
and
mov
addr16
dec
fidiv
jecxz
fdiv
jg
shl
fstp
shl
jne
xlat
mov
adc
loop
cmp
mov
adc
mov
adc
(bad)
mov
adc
imul
adc
jns
sbb
mov
adc
adc
adc
stos
mov
adc
ror
(bad)
mov
adc
mov
out
les
cmp
adc
pop
jno
stc
mov
adc
sti
or
xchg
mov
adc
xor
mov
push
inc
imul
mov
cs
cmc
div
jmp
hlt
mov
adc
add
add
mov
adc
jl
ja
mov
adc
addr16
out
mov
adc
or
mov
push
pop
sahf
jecxz
mov
call
mov
and
push
mov
adc
in
stos
sbb
sub
mov
adc
arpl
clc
pop
mov
adc
ss
add
mov
(bad)
jge
adc
cmp
mov
adc
push
scas
std
push
mov
adc
pop
mov
adc
mov
sahf
adc
hlt
sub
mov
adc
out
out
push
mov
adc
test
or
retf
add
ret
mov
cli
xchg
mov
mov
aaa
jno
mov
adc
inc
lahf
cwde
cmp
sbb
mov
adc
dec
pop
mov
and
mov
adc
data16
jb
mov
adc
mov
cdq
xor
dec
aaa
mov
adc
push
push
add
mov
adc
ror
sub
push
sub
lahf
das
mov
adc
mov
mov
fsubp
pop
and
dec
and
mov
add
adc
xlat
push
ficomp
mov
mov
mov
ror
fistp
mov
mov
mov
inc
outs
add
mov
das
(bad)
jmp
mov
adc
add
ret
push
mov
adc
out
sti
inc
push
mov
adc
add
hlt
xor
adc
inc
lea
mov
adc
pusha
inc
sub
mov
adc
push
adc
mov
or
fcmovu
or
inc
mov
adc
inc
sbb
adc
dec
adc
and
jl
mov
adc
ror
jle
mov
inc
mov
adc
inc
cmp
mov
adc
cmp
jo
mov
and
mov
xchg
or
mov
mov
adc
push
inc
bound
mov
cmp
mov
sub
adc
inc
aas
or
mov
pop
(bad)
mov
mov
mov
adc
in
out
mov
adc
(bad)
jnp
fwait
mov
adc
(bad)
cdq
mov
adc
shl
sahf
mov
adc
mov
mov
lahf
or
adc
pop
lahf
adc
clc
or
adc
bound
add
std
push
mov
xchg
mov
mov
in
mov
lea
jg
mov
adc
mov
adc
dec
movs
mov
mov
test
mov
mov
adc
lds
adc
scas
or
adc
shr
fidivr
loopne
mov
adc
adc
adc
mov
mov
xlat
std
js
mov
adc
adc
adc
out
jbe
mov
adc
and
mov
dec
inc
out
mov
adc
mov
cmp
mov
adc
cmc
in
mov
jmp
mov
xor
adc
pop
and
mov
mov
adc
dec
lea
mov
adc
and
fstp
mov
adc
stos
or
adc
add
adc
push
mov
aam
push
aam
mov
mov
mov
mov
mov
sbb
dec
iret
mov
adc
scas
push
mov
mov
adc
(bad)
jmp
mov
adc
mov
mov
out
mov
(bad)
mov
adc
pop
retf
ret
les
or
mov
adc
xlat
in
xor
mov
adc
icebp
push
jge
mov
adc
inc
cmp
cld
mov
adc
jo
jmp
pushf
sbb
adc
das
xchg
div
xor
mov
adc
popf
mov
adc
not
adc
push
icebp
(bad)
mov
adc
icebp
test
ss
push
loop
mov
(bad)
and
adc
repz
out
mov
fisubr
adc
xor
jp
mov
adc
jmp
dec
add
push
pop
mov
adc
scas
daa
es
mov
xchg
jno
adc
pop
loope
mov
adc
test
xchg
pop
mov
adc
pop
loope
adc
aaa
dec
mov
mov
adc
out
jb
mov
adc
(bad)
neg
add
mov
fdivr
out
mov
adc
les
add
test
adc
ja
in
add
push
mov
adc
in
cmp
mov
adc
adc
xchg
aas
mov
adc
(bad)
mov
mov
adc
pop
repz
repnz
dec
xor
mov
adc
xchg
push
xor
mov
in
mov
adc
pop
adc
adc
ins
mov
adc
and
mov
adc
jmp
repnz
and
adc
push
adc
mov
mov
adc
and
mov
jmp
mov
push
mov
xor
sub
mov
jp
jbe
mov
adc
scas
adc
adc
jge
pop
push
mov
adc
cmp
adc
mov
dec
mov
adc
sbb
pop
dec
mov
adc
jbe
mov
mov
adc
loope
sub
mov
adc
dec
cmp
mov
adc
xor
adc
mov
mov
inc
fst
jo
aaa
mov
mov
adc
cmp
cmp
sbb
mov
adc
push
pop
cli
jl
mov
xchg
jae
mov
cwde
pop
inc
jno
mov
push
nop
mov
ins
cmps
hlt
jne
mov
repnz
adc
sbb
nop
imul
mov
cmp
imul
adc
push
out
bound
outs
aaa
popa
mov
adc
in
fisub
mov
mov
mov
mov
fcmovu
bound
retf
xchg
jl
das
dec
sahf
mov
adc
std
test
mov
adc
xchg
sub
adc
and
loop
mov
adc
cmp
xchg
mov
adc
pop
in
xchg
mov
adc
cmp
adc
mov
mov
hlt
lahf
and
pushf
cmp
lea
pop
or
mov
adc
outs
adc
dec
mov
mov
mov
adc
cmps
test
sub
imul
push
add
cmp
or
movs
mov
jbe
sub
xchg
xor
(bad)
jle
mov
adc
fdivrp
popa
mov
mov
in
jecxz
mov
adc
fisubr
stos
mov
adc
mov
es
pusha
popa
dec
scas
mov
adc
mov
mov
call
mov
call
and
sbb
cmps
mov
adc
popa
jnp
movs
mov
adc
ret
(bad)
(bad)
push
fnstenv
or
fidiv
mov
adc
pop
arpl
shl
cmp
mov
adc
mov
xchg
(bad)
mov
adc
adc
adc
jmp
cwde
enter
mov
adc
pop
popa
adc
mov
adc
cmp
cwde
and
adc
test
adc
cmp
adc
push
mov
adc
fs
(bad)
sti
mov
adc
pop
gs
clc
mov
adc
mov
mov
ds
mov
adc
push
iret
xor
mov
or
icebp
mov
adc
sub
imul
(bad)
jmp
adc
add
adc
sub
mov
adc
dec
jg
out
mov
adc
mov
adc
lods
inc
js
mov
adc
fisub
loopne
mov
push
std
int3
out
mov
sub
aad
mov
adc
add
adc
mov
adc
sub
adc
mov
sbb
pop
imul
mov
adc
lods
icebp
cmc
pop
mov
adc
pusha
pop
aam
mov
adc
ret
xchg
(bad)
or
fwait
adc
stos
add
adc
imul
pop
stos
loope
add
dec
mov
mov
adc
sub
pushf
jmp
mov
jl
xor
mov
adc
push
jecxz
cmp
iret
xchg
aas
mov
adc
mov
jnp
mov
adc
dec
lds
xor
ins
clc
xor
cmp
aaa
mov
adc
and
adc
imul
adc
add
adc
cld
xor
adc
xchg
popf
jp
mov
adc
lea
loop
mov
adc
out
or
mov
or
adc
jle
sbb
adc
adc
imul
adc
mov
mov
sub
adc
adc
adc
mov
mov
in
mov
adc
es
mov
mov
adc
dec
repz
dec
mov
adc
inc
sti
mov
mov
das
push
bound
mov
psrlw
mov
adc
gs
inc
mov
adc
leave
cmp
inc
mov
adc
ins
pop
cwde
inc
mov
adc
xor
inc
mov
adc
and
sbb
mov
dec
ret
bnd
mov
push
ja
jle
mov
mov
mov
xor
push
mov
adc
pop
inc
xor
adc
pop
div
retf
pop
push
aam
movq
loope
pusha
mov
adc
ret
mov
data16
adc
test
mov
stos
sti
stc
sahf
mov
adc
cmp
adc
push
aas
(bad)
xchg
mov
adc
cmp
mov
ficom
dec
mov
sub
add
adc
mov
stos
mov
adc
in
jge
mov
adc
(bad)
iret
xchg
mov
jne
jp
mov
adc
pop
call
or
addr16
fnstenv
iret
jnp
mov
adc
(bad)
or
mov
adc
lods
mov
adc
push
loope
ret
mov
adc
aas
dec
hlt
shl
push
(bad)
mov
adc
(bad)
rol
les
jnp
sti
mov
adc
cmp
stc
mov
adc
(bad)
std
push
push
push
mov
nop
inc
jne
repnz
adc
(bad)
mov
adc
rcr
div
repz
mov
adc
movs
(bad)
fucomi
mov
adc
loope
imul
mov
rcl
adc
jecxz
jae
mov
adc
or
adc
sub
mov
xchg
sub
mov
adc
sub
in
mov
shr
mov
adc
lods
movs
jno
mov
adc
mov
pop
mov
adc
add
mov
outs
xlat
ret
adc
dec
test
mov
adc
push
in
pop
mov
adc
and
adc
mov
or
(bad)
or
add
or
test
adc
jge
into
or
jnp
dec
add
xchg
add
arpl
enter
add
mov
mov
js
push
cwde
xor
and
mov
adc
cwde
mov
cmp
mov
xchg
mov
adc
out
iret
cmp
call
adc
xor
daa
xor
imul
adc
xor
sub
das
or
mov
adc
dec
imul
sub
and
and
dec
(bad)
and
divps
mov
adc
mov
int
mov
adc
mov
pop
mov
adc
daa
or
outs
movs
ret
xchg
pop
mov
adc
cld
dec
(bad)
push
mov
adc
adc
test
mov
adc
jnp
inc
push
mov
adc
xchg
loope
push
mov
adc
loopne
or
mov
adc
mov
in
mov
adc
sbb
adc
jno
xchg
mov
sub
adc
and
jb
mov
adc
inc
xor
adc
push
mov
or
dec
js
mov
stos
loope
jg
mov
retf
out
xchg
jge
mov
lock
mov
mov
adc
xchg
lahf
pop
jo
mov
adc
jbe
mov
jecxz
jb
mov
adc
inc
or
adc
and
scas
imul
mov
imul
ins
mov
adc
enter
mov
adc
test
mov
xchg
cmps
and
test
adc
and
mov
inc
inc
and
mov
adc
out
push
lahf
mov
adc
xchg
popf
mov
adc
lods
xchg
les
int3
lahf
sub
outs
lea
xchg
mov
adc
push
xor
mov
adc
xor
mov
push
repz
inc
jge
mov
jae
mov
popa
and
mov
adc
in
retf
mov
iret
cmps
test
mov
adc
push
mov
adc
or
mov
mov
mov
jmp
mov
jns
sahf
mov
mov
sti
jmp
adc
fcmovu
shl
jno
mov
mov
xor
mov
pop
xchg
shr
cmp
gs
mov
adc
mov
test
sbb
adc
mov
mov
rcl
repnz
mov
adc
ror
(bad)
mov
mov
adc
(bad)
inc
dec
(bad)
mov
adc
mov
mov
and
adc
add
fcom
mov
push
inc
daa
push
mov
adc
dec
jns
sbb
fadd
dec
mov
adc
xor
mov
mov
pop
inc
dec
ins
jne
sti
mov
adc
xchg
adc
out
push
mov
mov
adc
jg
sub
mov
adc
dec
arpl
ds
adc
mov
(bad)
cmp
adc
adc
mov
adc
mov
adc
retf
out
cmp
imul
mov
mov
movs
cmps
mov
adc
shr
(bad)
mov
adc
pop
inc
in
lds
pop
cli
mov
adc
push
mov
mov
mov
rcl
mov
cmp
mov
jmp
adc
pop
jnp
sbb
ret
fst
mov
adc
fst
(bad)
adc
mov
adc
pop
sbb
mov
adc
xor
inc
pop
mov
adc
pop
jns
push
mov
adc
outs
icebp
sbb
mov
ror
mov
xchg
xchg
ret
mov
mov
adc
mov
xchg
mov
mov
adc
les
xor
cmps
add
xchg
scas
xor
into
pop
adc
mov
(bad)
hlt
repnz
adc
mov
xor
mov
xor
xchg
dec
jmp
sbb
mov
adc
mov
sbb
add
sahf
outs
js
mov
xor
xchg
pop
adc
aad
jmp
mov
xor
xchg
scas
lds
mov
adc
fdivp
adc
mov
aas
cld
fld
cmp
scas
xor
mov
adc
scas
xor
xchg
scas
fst
scas
xor
cmp
out
xchg
scas
xor
xchg
scas
cdq
xchg
inc
mov
cmp
xchg
scas
xor
pop
mov
mov
xor
xchg
scas
xor
mov
xor
fs
out
scas
xor
xchg
scas
xor
mov
cmp
push
add
cmp
scas
xor
xchg
scas
xor
fidiv
lahf
jb
sub
cmp
les
jecxz
jmp
xchg
scas
xor
xchg
scas
xor
clc
in
in
scas
xor
xchg
scas
xor
dec
scas
xor
fiadd
xchg
mov
jg
mov
adc
xchg
scas
xor
xchg
scas
xor
pop
adc
scas
xor
stos
sbb
xor
scas
xor
xchg
mov
xchg
mov
xor
xchg
scas
inc
adc
cwde
sbb
mov
cmp
xchg
scas
xor
dec
scas
xor
dec
sahf
push
scas
xor
xchg
scas
add
cli
cwde
sbb
scas
xor
mov
scas
xor
xchg
outs
pop
fldenv
scas
xor
mov
xor
xchg
scas
lds
je
cmp
xchg
pop
sti
push
dec
jbe
cmp
je
jbe
xor
xor
xchg
scas
adc
xchg
out
mov
push
call
xchg
scas
xor
mov
xor
xchg
scas
xor
mov
mov
shl
mov
scas
xor
cmp
adc
mov
or
scas
xor
xchg
scas
xor
mov
scas
xor
xor
xor
cmps
add
cmp
scas
xor
xchg
scas
xor
xchg
scas
pop
xchg
movs
scas
xor
xchg
scas
xor
xchg
scas
xor
lods
scas
xor
xchg
scas
xor
dec
arpl
ret
in
scas
xor
xchg
scas
xor
mov
jmp
fisttp
push
jecxz
jecxz
xor
mov
cmp
xchg
scas
xor
xchg
scas
xor
xchg
sti
adc
cmp
push
rol
xor
scas
xor
ret
sbb
scas
xor
inc
mov
sbb
scas
xor
invd
inc
mov
xchg
scas
xor
cmps
add
xchg
scas
xor
mov
adc
cmps
add
xchg
scas
xor
xchg
scas
xor
xchg
scas
jae
ret
sbb
scas
xor
push
(bad)
loope
pop
mov
mov
push
xchg
popf
scas
xor
xchg
sahf
out
pop
xchg
scas
xor
mov
scas
xor
xchg
sahf
(bad)
xor
scas
adc
int
add
xchg
scas
xor
ja
mov
pop
mov
push
or
cmp
xchg
scas
xor
mov
push
mov
call
mov
push
movs
xchg
sahf
mov
cmp
mov
or
cdq
call
scas
xor
xchg
scas
xor
stos
jmp
xchg
scas
xor
shr
std
cmps
and
xchg
scas
xor
xchg
scas
xor
xchg
scas
lds
mov
add
mov
mov
xor
xchg
scas
xor
xchg
scas
xor
xchg
scas
pop
xchg
js
sbb
mov
add
push
rol
xchg
scas
xor
cmps
test
cmp
xchg
scas
xor
mov
scas
xor
xchg
call
xchg
scas
xor
xchg
scas
xor
xchg
scas
xor
cmp
xor
xchg
scas
xor
cmp
xor
mov
adc
mov
inc
imul
js
mov
xor
adc
xor
xchg
pop
adc
ds
mov
mov
adc
dec
arpl
push
push
xchg
fld
cmp
scas
xor
xchg
jbe
cmp
xchg
scas
xor
ds
mov
pop
or
icebp
int
inc
test
xchg
mov
xor
adc
xor
mov
lahf
retf
jmp
arpl
push
push
xchg
fld
cmp
scas
xor
xchg
scas
xor
mov
lahf
retf
jmp
dec
jecxz
pop
cmp
fwait
jbe
mov
cmp
xchg
scas
xor
xchg
scas
xor
xchg
scas
jmp
ins
retf
xor
xor
xchg
scas
jmp
xchg
scas
xor
xchg
scas
xor
mov
adc
pop
loopne
icebp
xor
stos
push
dec
scas
xor
xchg
scas
xor
cs
xor
xor
adc
cmp
xchg
scas
xor
mov
scas
xor
ret
mov
mov
xor
xchg
scas
xor
loopne
adc
xchg
scas
xor
add
nop
sbb
sbb
scas
xor
mov
mov
or
mov
lahf
call
xor
pop
leave
or
or
loope
scas
xor
xchg
scas
xor
xchg
scas
xor
xor
cmp
xor
xchg
scas
xor
xchg
scas
xor
mov
xor
cld
mov
xor
add
mov
xchg
scas
xor
int
xor
xchg
fwait
popf
push
lods
scas
xor
xchg
stc
push
push
mov
xor
xchg
scas
pop
xchg
std
xchg
call
mov
cmp
xchg
scas
xor
std
adc
xchg
scas
xor
xchg
scas
fwait
adc
pop
adc
cmp
xchg
out
xchg
sbb
pop
adc
sbb
scas
xor
movs
(bad)
popf
push
lods
cdq
adc
std
test
fild
scas
xor
bound
push
lock
stc
jge
mov
scas
xor
std
xchg
jmp
push
jae
ret
sbb
scas
xor
push
lahf
std
push
movs
scas
xor
xchg
(bad)
cld
push
lods
out
xchg
ss
and
xchg
jbe
xor
mov
mov
adc
xchg
scas
xor
movs
movs
xor
dec
add
sbb
rcr
xor
pushf
sahf
jmp
scas
xor
mov
fld
mov
stos
jmp
mov
mov
adc
xchg
scas
xor
xchg
repz
cmp
xchg
scas
xor
das
and
mov
fst
sbb
scas
xor
ds
xor
xchg
scas
add
int
xor
cmp
sbb
mov
lahf
mov
scas
xor
xchg
scas
xor
ds
xor
xchg
scas
xor
js
sbb
xchg
scas
xor
xchg
scas
pop
xchg
sbb
scas
xor
xchg
scas
xor
xchg
scas
pop
xchg
jne
out
or
mov
mov
scas
xor
dec
lock
xchg
scas
xor
mov
mov
cmp
scas
xor
xchg
outs
pop
jecxz
bound
scas
xor
dec
lock
xchg
scas
xor
mov
(bad)
fwait
or
mov
cmp
xchg
scas
xor
ror
pop
xchg
or
scas
xor
xchg
scas
xor
xchg
scas
pop
xchg
js
sbb
mov
mov
cmp
mov
sub
xor
cmp
xchg
scas
xor
mov
jmp
scas
xor
repnz
mov
scas
xor
xchg
call
xchg
scas
xor
mov
scas
xor
xchg
call
xchg
scas
xor
mov
cdq
pusha
aad
mov
xchg
scas
xor
ds
xor
xchg
scas
xor
mov
adc
xchg
mov
xchg
scas
xor
jne
xor
xchg
scas
xor
xchg
scas
xor
mov
push
push
mov
push
xchg
jge
out
bound
scas
xor
mov
push
push
mov
adc
mov
fild
std
jge
mov
scas
xor
mov
scas
xor
xchg
(bad)
out
or
cdq
sbb
mov
or
ret
sbb
sbb
stos
xchg
xchg
scas
xor
mov
scas
xor
push
mov
xchg
scas
xor
xchg
scas
pop
xchg
add
scas
xor
xchg
scas
xor
xchg
scas
add
xchg
scas
xor
xchg
scas
xor
xchg
scas
xor
xchg
scas
xor
cmp
dec
mov
adc
xchg
scas
xor
xchg
sahf
scas
stos
xchg
scas
xor
mov
sbb
jmp
dec
inc
xchg
add
and
xor
xchg
scas
xor
xlat
out
xchg
or
xchg
scas
xor
pop
outs
xchg
sbb
std
scas
xor
cmp
sbb
xchg
scas
xor
xchg
fwait
mov
cmp
xchg
scas
xor
xchg
scas
xor
xchg
scas
xor
call
cmp
xchg
scas
sti
std
mov
adc
or
scas
xor
mov
scas
xor
xchg
mov
adc
scas
add
xchg
scas
xor
xchg
scas
add
xchg
scas
xor
cmps
mov
cmp
rcr
gs
jbe
cmp
xchg
scas
xor
cmp
clc
or
xchg
scas
xor
cmps
test
cmp
xchg
scas
pop
mov
scas
xor
xchg
(bad)
cdq
adc
add
xchg
scas
xor
xchg
scas
xor
xchg
scas
mov
sar
addr16
scas
xor
mov
and
xchg
std
xor
xchg
scas
xor
mov
scas
xor
xchg
scas
xor
mov
xchg
mov
adc
mov
adc
xchg
scas
xor
push
adc
out
mov
add
jmp
xchg
push
add
hlt
xchg
mov
push
js
add
jmp
pop
mov
xchg
sub
add
(bad)
lahf
sub
dec
pop
in
stos
jnp
jo
push
jg
mov
hlt
mov
scas
fcmovbe
lahf
sub
dec
pop
in
stos
outs
add
push
add
retf
mov
jg
fist
cmp
bound
adc
sbb
pusha
dec
and
xor
cwde
add
(bad)
adc
aam
aas
dec
cmp
pop
retf
lods
int3
mov
retf
push
enter
mov
pop
pop
js
test
adc
inc
xchg
jns
xchg
repnz
sub
retf
mov
test
pushf
popf
lods
in
ins
jle
pop
pop
jle
mov
sbb
add
mov
dec
stos
sbb
pop
mov
jl
mov
or
push
xchg
sti
nop
sbb
push
ret
push
jle
cmps
lods
sub
pop
mov
mov
call
retf
mov
jl
ret
pop
sti
ja
mov
(bad)
loop
push
add
xor
lahf
fimul
lea
or
mov
xor
push
test
push
ret
adc
jg
div
(bad)
outs
nop
sbb
xor
xchg
sbb
ins
lods
or
or
pop
inc
jl
ja
fdiv
(bad)
mov
or
in
and
(bad)
mov
xchg
sbb
popa
or
inc
stos
mov
sahf
mov
jge
mov
retf
jmp
xchg
push
mov
enter
and
fistp
movs
out
mov
jb
cmps
jo
inc
das
mov
push
and
jo
push
add
leave
xlat
pusha
into
xlat
and
pushf
xchg
mov
sub
add
scas
leave
adc
and
lock
in
ja
xor
mov
push
repz
sub
add
and
das
ss
cmc
scas
cmps
xchg
popa
push
sub
jno
daa
and
ins
sub
xor
pop
fild
xchg
dec
shl
loopne
mov
mov
leave
sub
shr
mov
dec
cmps
mov
dec
xor
sbb
pop
bound
out
cmp
fbld
push
and
mov
push
(bad)
xchg
and
mov
xchg
or
ds
inc
sub
not
add
and
mov
leave
sub
lock
mov
xchg
push
(bad)
xchg
xchg
pop
fdivp
mov
mov
and
fcomp
or
and
test
out
popa
ja
bound
out
cmp
fistp
mov
push
(bad)
xchg
and
mov
xchg
or
ds
(bad)
inc
inc
shl
push
push
add
and
mov
leave
sub
lock
dec
icebp
movs
push
(bad)
xchg
xchg
pop
fdivp
mov
mov
and
fcomp
icebp
sbb
or
test
out
popa
ja
bound
out
cmp
or
into
mov
jb
aas
xchg
rcl
pop
mov
xchg
or
ds
xchg
jle
jle
push
jbe
jae
and
mov
leave
sub
lock
pop
jo
xchg
push
(bad)
xchg
xchg
pop
fdivp
mov
mov
and
fcomp
rcr
and
test
out
popa
ja
bound
out
cmp
mov
into
mov
jb
aas
xchg
rcl
pop
mov
xchg
or
ds
in
dec
aam
not
add
and
mov
leave
sub
lock
loopne
mov
dec
mov
push
(bad)
xchg
xchg
add
es
and
fcomp
int3
and
cmps
mov
dec
xor
sbb
pop
bound
out
cmp
fisttp
add
mov
push
(bad)
xchg
daa
mov
outs
pop
mov
xchg
or
ds
push
jge
int
push
jle
jae
and
mov
leave
sub
lock
jg
cmc
xchg
dec
mov
je
sbb
ja
bound
out
cmp
push
fistp
test
jbe
aam
and
icebp
xchg
or
push
scas
push
loope
test
gs
jne
and
out
xor
cmp
xor
sar
cmp
movs
add
iret
mov
add
test
and
fcomp
push
push
and
idiv
je
sbb
ja
bound
out
cmp
inc
mov
stos
leave
jb
sub
xchg
and
icebp
xchg
or
push
scas
pop
(bad)
dec
pop
mul
add
and
out
xor
cmp
xor
sar
(bad)
jmp
into
xchg
add
iret
mov
add
test
and
fcomp
inc
inc
and
idiv
je
sbb
ja
bound
out
cmp
inc
hlt
inc
mov
dec
sub
xchg
and
icebp
xchg
or
fxsave
mov
js
gs
and
out
xor
cmp
xor
sar
xor
pop
call
add
iret
mov
add
test
and
fcomp
movs
shl
cmp
idiv
push
xchg
sbb
jmp
sub
xchg
add
iret
mov
out
ror
stos
repnz
(bad)
mul
add
and
out
inc
push
xchg
pop
cmp
jmp
in
sub
mov
xchg
out
scas
neg
cmp
and
idiv
push
xchg
sbb
jmp
sub
xchg
add
iret
mov
out
ror
stos
mov
gs
add
and
out
inc
push
xchg
pop
cmp
jmp
mov
sbb
dec
pop
xchg
out
scas
neg
(bad)
mov
cmp
idiv
push
xchg
sbb
jmp
sub
xchg
add
iret
mov
out
ror
stos
add
fs
mul
movs
add
iret
xchg
sar
call
add
and
xchg
sbb
retf
ret
sbb
stc
iret
fwait
mov
dec
or
and
push
and
and
test
xchg
pop
inc
push
jmp
or
xchg
add
iret
xchg
sar
call
pop
add
and
xchg
sbb
retf
add
xchg
jb
or
pop
fdivp
out
shr
mov
je
test
mov
xchg
and
or
dec
and
imul
push
pop
bound
push
xchg
sbb
test
jb
cmp
pop
fdivp
out
rcr
mov
div
add
and
out
leave
sub
pop
inc
push
jmp
sub
inc
jg
xchg
add
iret
mov
xchg
and
add
jmp
dec
mov
push
pop
bound
push
xchg
sbb
jmp
into
pop
bswap
mov
xchg
outs
pop
fdivp
out
rcr
mov
div
add
and
out
leave
sub
pop
inc
push
jmp
sub
xchg
add
iret
mov
xchg
and
out
test
dec
mov
push
pop
bound
push
xchg
sbb
jmp
mov
mov
dec
cmp
pop
fdivp
out
rcr
mov
div
add
and
out
leave
sub
pop
inc
push
jmp
sub
or
jmp
mov
xchg
and
dec
test
mov
push
pop
bound
push
xchg
sbb
movs
iret
mov
xchg
outs
pop
fdivp
out
rcr
mov
div
add
and
dec
retf
sub
loopne
mov
neg
cmps
mov
sub
xchg
in
sti
pop
daa
(bad)
imul
jecxz
mov
(bad)
stos
sub
repz
es
jge
(bad)
sbb
jno
ss
mov
inc
es
imul
xor
dec
scas
dec
(bad)
loop
sbb
and
pop
in
stos
dec
pop
in
stos
dec
pop
in
or
retf
mov
call
retf
pop
push
add
cmp
mov
dec
pop
in
stos
dec
pop
in
stos
dec
test
retf
mov
mov
mov
sahf
pop
push
fadd
ins
icebp
shl
retf
sahf
aaa
fadd
ins
ins
sub
fadd
ins
jg
mov
iret
dec
icebp
retf
and
retf
inc
jle
retf
mov
out
ins
inc
mov
adc
adc
jl
mov
jg
fwait
lea
push
arpl
cmp
nop
enter
mov
mov
or
test
mov
not
(bad)
cmp
mov
out
lock
aas
popa
sar
or
push
int3
mov
mov
test
and
aaa
dec
cmp
dec
scas
jl
xchg
sbb
xor
add
lea
jae
xor
or
adc
jl
(bad)
popf
icebp
rcl
retf
push
icebp
cmps
retf
clc
mov
sti
out
mov
mov
jns
test
xchg
pop
push
xor
fisttp
call
jl
pusha
xchg
repnz
dec
add
mov
add
ret
test
sbb
xchg
xor
mov
jbe
or
and
ins
or
mov
test
sub
dec
popa
bound
jae
dec
jg
xor
js
test
sahf
(bad)
push
xchg
test
mov
push
aaa
sti
ins
cld
xchg
cli
movs
call
sbb
xlat
ficomp
enter
leave
jg
aas
out
lock
sbb
xlat
ficomp
leave
jg
add
push
ds
lock
sbb
xlat
ficomp
enter
leave
xlat
fsubrp
mov
push
rcr
cmp
xlat
ficomp
enter
leave
xlat
fsubrp
mov
clts
sahf
adc
pop
push
(bad)
lock
enter
enter
leave
xlat
sub
lock
and
adc
adc
pushf
jne
enter
leave
xlat
jbe
pop
icebp
stc
aas
out
(bad)
ficomp
enter
gs
aas
out
lock
enter
enter
pusha
sti
cwde
rcl
psubb
out
lock
enter
enter
leave
xlat
jbe
pop
icebp
stc
aas
out
(bad)
ficomp
enter
or
add
fcmovne
dec
(bad)
lock
enter
leave
xlat
jmp
xlat
fidivr
push
icebp
out
sbb
stc
aas
cmc
jnp
sahf
adc
xor
(bad)
mov
(bad)
ficomp
enter
push
icebp
out
push
cli
stc
aas
cmp
sub
out
lock
jmp
jmp
cmp
sub
out
lock
add
pushf
jne
enter
enter
jmp
lods
repz
out
loop
add
push
sbb
xlat
ficomp
enter
enter
lock
rol
jb
dec
and
rol
jne
enter
enter
jmp
adc
jb
dec
and
rol
jne
enter
enter
enter
jmp
ins
lock
out
out
pop
enter
enter
enter
clc
dec
imul
leave
xchg
in
lock
out
out
push
enter
enter
enter
clc
dec
popa
sbb
xlat
ficomp
leave
xchg
in
lock
out
test
out
out
in
out
stc
cmp
add
stc
rol
mov
enter
in
pop
rcl
ficomp
enter
enter
push
icebp
out
dec
clc
stc
aas
cmp
push
rcl
cdq
and
xor
rcl
adc
sti
xor
adc
xor
in
xadd
repz
sbb
xlat
ficomp
enter
leave
xlat
fdivp
adc
test
lock
sub
adc
sub
hlt
sti
inc
leave
adc
pop
jmp
push
xchg
neg
clts
jmp
cwde
rcl
clts
adc
xor
xlat
ficomp
enter
enter
cld
sti
mov
sbb
xlat
ficomp
enter
enter
out
out
icebp
sahf
call
adc
rcl
ficomp
enter
enter
in
pop
rcl
ficomp
leave
xlat
fsubrp
out
lock
aas
adc
pop
adc
pushf
jne
enter
leave
xlat
push
push
iret
scas
jae
lock
test
adc
sub
hlt
sti
inc
leave
adc
pop
rol
neg
clts
jmp
cwde
rcl
clts
adc
xor
xlat
ficomp
enter
enter
cld
sti
mov
sbb
xlat
ficomp
enter
enter
out
out
icebp
mov
lock
mov
cdq
pop
rcl
stc
aas
out
(bad)
ficomp
enter
add
out
sahf
push
push
rcl
popa
and
mov
rcl
ja
outs
push
push
shr
fistp
enter
enter
add
xor
in
pop
rcl
stc
and
adc
aas
adc
sub
adc
inc
rol
push
sahf
jl
sbb
xlat
ficomp
enter
in
pop
rcl
ficomp
enter
leave
test
cmp
lock
xor
push
push
ror
ficomp
enter
enter
(bad)
push
push
ror
ficomp
enter
aas
lock
ds
push
xchg
pop
mov
stc
rol
xchg
mov
(bad)
ficomp
enter
enter
enter
mov
stc
and
mov
stc
and
adc
push
cmps
push
push
rcl
adc
cvttps2pi
adc
cmp
test
rcl
jl
sbb
xlat
ficomp
leave
jecxz
data16
push
sbb
xlat
ficomp
enter
push
icebp
out
cdq
hlt
stc
aas
and
push
add
push
ds
(bad)
ficomp
enter
enter
enter
ret
shr
fistp
enter
enter
and
push
add
push
cmp
(bad)
ficomp
enter
fs
ficomp
enter
enter
(bad)
sti
lock
pmaxub
enter
leave
xlat
out
mov
xlat
ficomp
enter
in
pop
rcl
ficomp
leave
xlat
fdivp
jmp
shl
loop
push
shr
ficomp
enter
leave
daa
call
xlat
ficomp
enter
enter
in
lock
aas
enter
enter
dec
xor
push
ror
ficomp
enter
enter
(bad)
sti
not
adc
clc
sbb
xlat
ficomp
enter
leave
cmp
out
(bad)
push
push
shl
adc
out
repnz
clts
dec
mov
xlat
ficomp
enter
call
paddd
cld
sti
loopne
adc
ficomp
enter
enter
into
push
push
rol
stc
aas
enter
enter
cmp
jecxz
push
sbb
cmc
and
adc
push
out
push
push
rcl
ja
(bad)
lock
enter
enter
leave
xlat
sub
hlt
sti
add
adc
pop
jmp
jmp
adc
push
adc
pushf
jne
enter
enter
enter
popa
jnp
outs
out
lock
sbb
xlat
ficomp
enter
add
out
push
enter
leave
xlat
(bad)
mov
jecxz
daa
enter
enter
test
xadd
cmp
pop
aam
cmp
jb
out
lock
aas
enter
enter
cmp
jecxz
push
sbb
test
rol
mov
jl
sbb
xlat
ficomp
enter
leave
xlat
fsubrp
out
jmp
clc
fistp
leave
adc
ficomp
enter
dec
push
xchg
outs
add
push
rol
mov
jl
sbb
xlat
ficomp
enter
in
adc
adc
adc
push
push
ror
ficomp
enter
enter
test
xchg
add
push
rol
xchg
mov
(bad)
ficomp
enter
enter
fs
sbb
xlat
ficomp
popa
icebp
stc
aas
out
lock
enter
enter
leave
xlat
cs
jnp
sbb
xlat
ficomp
enter
leave
jg
cmp
enter
enter
leave
test
push
mov
push
rcl
mov
(bad)
lock
enter
enter
enter
out
push
push
shr
aad
test
pop
rcl
shr
enter
enter
enter
out
sbb
rol
jne
enter
enter
jmp
fiadd
aam
psrld
jl
sbb
xlat
ficomp
enter
enter
adc
push
adc
adc
not
lock
enter
clc
jnp
sbb
xlat
ficomp
enter
lahf
lock
call
psubb
int
adc
adc
mov
sbb
xlat
ficomp
leave
xlat
jbe
xor
ja
leave
mov
fwait
xor
(bad)
cli
daa
sub
fwait
xor
ds
or
adc
sub
xor
dec
pop
sbb
loop
repz
ins
jg
inc
and
add
ins
jns
test
icebp
retf
mov
pop
jns
aad
ins
jle
mov
sbb
imul
add
xchg
jl
mov
cmp
jg
jg
test
jbe
fs
add
ja
call
xlat
aam
jle
push
xor
ins
jle
pop
jge
cmp
jge
cdq
es
dec
(bad)
jo
lea
add
repz
add
aam
ja
cmp
cmp
mov
inc
jmp
push
adc
call
xor
movs
jae
push
test
clc
sub
jg
mov
or
ins
loope
int3
jg
test
pop
sti
or
lods
jmp
jmp
gs
mov
scas
mov
inc
movs
cmp
pop
addr16
test
jg
cli
add
sbb
and
ins
jle
inc
push
shl
pop
or
sbb
jmp
jnp
or
retf
mov
je
add
dec
push
js
xchg
sbb
sar
retf
xor
adc
jnp
push
int3
add
cmp
dec
jg
pop
gs
mov
icebp
retf
pop
aaa
xor
je
retf
pop
adc
adc
mov
icebp
retf
pop
and
enter
sub
leave
mov
pop
xchg
xor
jl
and
xchg
cmp
xchg
or
jne
dec
sbb
fwait
jl
leave
scas
mov
imul
pop
aad
inc
pop
aad
inc
pop
cmc
int3
addr16
(bad)
mov
cwde
jl
sahf
cdq
xchg
jmp
pop
aad
inc
pop
aad
inc
repnz
dec
inc
repz
(bad)
and
mov
inc
repz
aad
addr16
clc
test
repnz
bound
aam
lods
mov
xor
dec
pop
sbb
icebp
retf
pop
test
dec
pop
fadd
sti
ror
add
test
in
aad
out
retf
mov
jg
imul
cmp
sub
imul
cwde
mov
je
mov
neg
je
test
jle
pop
xchg
jle
mov
jle
cli
fwait
jp
jae
pop
inc
pop
or
in
retf
push
(bad)
pop
(bad)
sbb
pop
sbb
jle
cmp
or
jbe
or
int
gs
mov
repnz
bound
ja
popf
sub
xchg
push
retf
pop
sar
test
in
sti
sub
mov
pop
movs
js
test
icebp
retf
cli
in
push
bound
xor
scas
(bad)
jae
sbb
xchg
xor
out
mov
jb
or
popa
xchg
xor
mov
pop
add
inc
mov
retf
sbb
or
jns
(bad)
jb
inc
jb
cmp
sbb
jecxz
lods
or
cmp
sbb
sub
pop
mov
(bad)
mov
pop
sub
pop
push
cmp
sub
mov
pushf
cmp
ss
(bad)
mov
icebp
xchg
(bad)
fwait
xor
mov
mov
arpl
dec
fstp
dec
sti
pop
enter
push
jne
lds
popa
bound
push
push
jmp
sbb
jmp
pop
inc
popa
gs
xchg
mov
xchg
(bad)
ds
push
sbb
call
push
sbb
jmp
sbb
mov
adc
mov
and
mov
popf
sub
mov
or
and
sysenter
sub
(bad)
movs
sub
not
dec
js
popf
sub
cmp
cwde
enter
or
pop
xor
adc
mov
mov
test
cmp
(bad)
push
(bad)
mov
scas
mov
mov
scas
mov
mov
scas
mov
mov
scas
mov
mov
mov
mov
scas
mov
test
push
mov
scas
mov
mov
pop
stos
pop
mov
scas
mov
scas
mov
mov
sahf
rcr
mov
scas
mov
mov
(bad)
xchg
clc
sub
push
inc
out
cvttps2pi
mov
push
mov
xchg
push
mov
scas
mov
push
dec
int
nop
and
mov
mov
pop
mov
mov
cdq
movs
pop
mov
pop
daa
mov
test
adc
mov
pop
out
sbb
xor
and
adc
mov
jg
push
jle
mov
(bad)
jae
pop
jmp
push
pop
hlt
mov
scas
mov
dec
pop
in
stos
outs
add
or
jg
test
jl
mov
jg
imul
jg
xchg
jl
or
and
in
jle
mov
push
aam
jl
fbstp
jle
movs
xchg
jl
imul
lods
(bad)
jae
mov
sahf
sbb
mov
jle
mov
icebp
retf
pop
sbb
jle
lea
and
mov
or
sbb
ins
jle
mov
call
ss
scas
xchg
xchg
bound
jb
xchg
pop
mov
mov
jbe
retf
jl
cmp
test
pop
jnp
retf
mov
push
pop
out
test
mov
jmp
mov
or
or
cmp
push
jp
pop
mov
stc
ins
and
jg
jae
test
sar
(bad)
xchg
movs
mov
pop
loope
sbb
bound
je
sub
(bad)
xchg
sbb
mov
jbe
xchg
call
mov
pop
pop
icebp
shr
lock
dec
test
retf
jns
test
add
cmp
fwait
test
sar
into
mov
jb
xor
jae
or
and
bound
pop
ins
test
jmp
mov
ss
jmp
mov
ss
mov
ss
in
loop
pop
jmp
pusha
cli
enter
mov
pop
lods
int
pop
lods
int
(bad)
je
ds
(bad)
retf
jg
int
pop
lods
int
jle
adc
shl
ss
lods
int
pop
lods
int
js
mov
ficomp
loop
pop
jmp
jne
fcom
pop
jmp
lods
int
pop
int3
mov
adc
int
pop
lods
int
pop
lods
aas
ss
mov
ss
mov
sub
adc
mov
ss
lods
int
pop
lods
int
cmp
fnstcw
pop
lods
int
pop
mov
cmp
fnstcw
pop
lods
int
pop
xchg
test
jae
cmp
das
mov
jg
jmp
lods
int
pop
lods
int
cwde
repz
(bad)
(bad)
xchg
in
jno
mov
xor
jbe
jmp
pop
in
pop
lods
int
pop
lods
int
pop
lods
int
repnz
rcr
int
pop
lods
int
repnz
rcr
int
pop
lods
int
pop
lods
int
repnz
rcr
int
pop
lods
int
pop
lods
int
repnz
lock
lods
int
pop
lods
int
pop
lods
int
cmp
fnstcw
pop
lods
int
pop
cwde
gs
std
or
pop
lods
int
pop
lods
int
pop
lods
int
imul
adc
int
pop
lods
int
pushf
mov
aaa
xchg
mov
mov
push
repnz
fwait
mov
pop
lods
int
pop
lods
int
pop
lods
int
pushf
mov
aaa
xchg
mov
mov
push
ret
stos
mov
pop
lods
int
pop
or
mov
sub
push
mov
int
pop
lods
int
pop
lods
int
ins
and
and
fwait
mov
pop
lods
int
pop
lods
int
pushf
mov
aaa
xchg
mov
mov
or
cli
or
ss
int3
adc
int
pop
lods
cmp
pop
es
adc
repz
adc
int
pop
lods
int
and
add
call
lods
int
pop
lods
int
pop
lods
adc
and
adc
int
pop
lods
int
pop
lods
gs
sub
enter
mov
adc
jmp
lods
int
adc
fnstcw
adc
jmp
lods
int
adc
fnstcw
adc
jmp
pushf
popa
into
pop
lods
int
pop
lods
int
pop
lods
int
test
cmp
sbb
cmp
push
icebp
mov
push
sbb
es
lock
ss
js
lock
outs
xchg
je
fs
add
sub
add
scas
lahf
sub
dec
pop
in
stos
jnp
jo
gs
call
movs
aaa
je
or
jp
jo
jge
popa
call
outs
and
jge
and
lock
jl
lods
retf
out
leave
mov
xor
jno
clc
mov
ret
jo
dec
in
xchg
or
pop
jg
imul
sub
ins
jl
adc
mov
(bad)
rcr
stos
xor
cmp
sub
je
pusha
sar
mov
jg
retf
mov
and
ins
jg
shr
jmp
int3
add
or
sti
xchg
retf
je
(bad)
enter
retf
nop
sbb
jmp
pop
jnp
sbb
push
test
cdq
bound
xchg
movs
je
sbb
sbb
(bad)
mov
ja
dec
xor
pop
mov
(bad)
mov
jle
jmp
sub
and
mov
jl
cli
sbb
sbb
mov
or
mov
mov
jmp
shl
retf
mov
xor
xchg
adc
lock
mov
xor
nop
xor
mov
ins
jle
clc
icebp
clc
repnz
xor
imul
lea
call
jb
cmp
pop
or
inc
jmp
stc
leave
or
sbb
out
mov
sbb
inc
imul
push
jle
rcl
rcl
fdivr
pop
jmp
mov
pop
jmp
movs
pop
sub
je
sar
jb
mov
pop
or
push
jle
rcl
rcl
imul
je
ins
xor
xlat
sub
je
inc
xor
pop
out
imul
push
jle
rcl
fdivr
pop
aad
xchg
movs
out
(bad)
int3
bound
out
jle
rcl
rcl
ins
mov
sbb
mov
rcr
xor
fdivr
pop
aad
fidiv
or
push
jle
rcl
ror
aad
loop
cmps
out
jle
rcl
rcl
in
dec
cli
data16
cmps
aam
call
lods
retf
leave
fdivr
pop
sub
pop
dec
sbb
mov
xor
sub
pop
adc
cmps
add
sbb
sub
push
jle
rcl
rcl
xor
das
aad
add
sbb
sub
push
jle
rcl
rcl
sub
sub
data16
sub
cli
xchg
sar
sub
sub
data16
sub
sub
data16
sbb
xchg
pop
in
xchg
cmp
add
call
jmp
mov
movs
out
jb
mov
pop
or
push
jle
rcl
shl
movs
out
jb
mov
pop
or
push
jle
ror
inc
imul
push
jle
rcl
push
je
sub
inc
dec
test
adc
cmp
jns
xlat
sub
je
rcr
cmps
ins
repnz
xlat
sub
ret
lods
dec
shl
leave
fld
sti
fimul
jg
mov
mov
imul
add
adc
out
jg
pop
gs
std
ins
jge
cmps
inc
jecxz
sti
mov
les
pop
fcmovb
popf
scas
jmp
push
aam
outs
fwait
es
enter
out
jno
les
nop
add
aam
jg
cmp
hlt
test
pop
xor
xor
pop
sahf
test
std
xchg
xor
and
cmp
sub
or
fadd
jbe
test
repnz
imul
daa
cmp
jns
jne
int3
loop
popa
jae
jle
mov
jg
pop
and
mov
jbe
test
pop
jne
retf
mov
jg
pop
cmp
sbb
or
mov
pop
add
sbb
sub
and
mov
pusha
aaa
or
sub
cli
ja
mov
mov
data16
mul
push
test
imul
loop
mov
pop
arpl
adc
test
ja
popa
mov
pop
dec
dec
mov
pop
xor
call
(bad)
mov
jnp
cdq
pushf
nop
push
test
imul
jno
pop
dec
fs
xchg
pop
sbb
sbb
arpl
ror
cmps
jnp
cmp
mov
mov
sbb
inc
cmp
jns
cli
cmps
jae
cmp
jns
cmp
in
and
jb
cmp
sub
pop
js
aad
jl
cmp
pop
(bad)
pop
call
pop
cmp
add
cdq
pop
rcr
sbb
sub
mov
inc
iret
loop
jge
inc
jg
test
ja
mov
jg
mov
mov
sbb
xchg
jl
fld
xor
ja
jp
inc
popf
scas
mov
ins
jg
and
(bad)
aaa
(bad)
inc
xchg
jl
movs
push
pop
cmp
mov
je
bound
jle
mov
test
dec
mov
test
push
enter
push
enter
pop
xchg
or
mov
pop
mov
jg
pop
or
jae
pop
sub
ins
sbb
fistp
repz
cli
js
mov
mov
in
pusha
or
adc
mov
fstp
dec
jg
gs
stc
lds
shl
mov
push
enter
adc
mov
js
test
or
jns
test
sub
jae
sbb
pop
mov
add
mov
ins
leave
push
cmps
ins
scas
and
xchg
sbb
xchg
xor
sbb
into
nop
lods
cs
cmp
sbb
sahf
(bad)
xor
jl
push
inc
jle
sti
mov
or
outs
cdq
data16
enter
int3
jo
mov
shl
enter
(bad)
hlt
cmc
test
cmc
test
add
loopne
shr
ror
shl
mov
retf
shl
mov
retf
js
sub
in
nop
pop
mov
sub
jmp
retf
repnz
jg
or
jg
sbb
mov
sub
ins
mov
fsubr
xor
aad
retfw
mov
pop
cmps
pop
dec
sahf
in
out
loop
sub
cs
ds
mov
div
inc
xchg
jle
test
mov
and
(bad)
pop
pushaw
or
mov
dec
stos
mul
sub
js
aas
jnp
mov
ret
mov
push
mov
cdq
xchg
fisubr
fcmovbe
and
adc
lods
mov
mov
cmp
jne
push
std
mov
push
add
dec
pushf
push
and
and
fist
scas
pop
push
popf
jmp
and
sub
cmp
ja
xadd
dec
pushf
dec
and
loopne
shl
aam
jae
adc
cmps
inc
cmps
repnz
in
sub
add
scas
jb
or
mov
push
or
dec
call
int
(bad)
fist
imul
pusha
mov
inc
stos
add
xor
mov
jnp
xor
push
mov
(bad)
loop
sub
es
add
mov
dec
cmp
inc
mov
xchg
nop
(bad)
retf
and
ficom
arpl
adc
movs
dec
pushf
mul
(bad)
jmp
and
sub
add
mov
dec
xor
xor
jne
adc
lods
or
pop
dec
pushf
push
pop
xchg
call
fcom
and
ins
pop
gs
repnz
push
add
dec
xchg
inc
xor
adc
sbb
pop
scas
stos
inc
mov
repnz
inc
xor
mov
into
xor
shl
dec
mov
xchg
xchg
fld
and
and
or
test
mov
xor
jge
or
ins
rcl
lods
add
jmp
cwde
call
sbb
arpl
xchg
dec
aaa
lock
(bad)
fimul
(bad)
adc
pusha
adc
pop
push
movs
lock
(bad)
fild
(bad)
sub
push
addr16
call
clc
xor
sar
mov
push
movs
push
and
sub
rcr
js
add
test
scas
or
mov
cmp
push
sbb
stos
cvtdq2ps
sbb
pop
push
xchg
jmp
xchg
jmp
jbe
pop
push
push
clc
stos
add
pop
call
xchg
jecxz
xchg
fsubr
fcmovnbe
and
or
mov
xchg
inc
sub
xor
mov
push
add
and
sub
rcr
pop
push
pop
cmps
pop
push
xchg
loope
xchg
fdiv
sub
sub
cmp
rcl
scas
add
push
mov
sahf
mov
cmp
retf
arpl
ins
mov
lock
aaa
jmp
lea
and
pusha
adc
cmps
inc
cmps
repz
(bad)
xor
mov
mov
push
or
dec
fwait
dec
sub
sbb
push
adc
lods
pop
dec
mov
cmp
shl
mov
lods
or
loopne
cmps
push
and
and
fist
stos
mov
mov
cmp
jg
mov
mov
dec
cmp
inc
pushf
dec
sub
inc
xor
ss
cmp
mov
clc
mov
push
aas
in
inc
xchg
inc
sub
sbb
test
pop
or
dec
mov
cwde
cdq
fisub
shl
inc
mov
outs
mov
stc
mov
cmp
outs
add
mov
icebp
mov
inc
xor
cmp
test
sbb
mov
push
cmps
push
pop
mov
mov
and
movs
adc
movs
pop
push
xchg
icebp
loopne
jecxz
and
sub
add
scas
inc
lods
add
mov
dec
pop
in
aas
xchg
inc
das
jge
sbb
pop
sbb
push
stos
pop
push
popf
in
sahf
mov
sub
punpcklbw
(bad)
jmp
cmp
les
(bad)
mov
pop
test
jmp
xor
int3
mov
mov
pusha
lods
pop
dec
mov
cmp
les
outs
xor
mov
cmps
add
mov
nop
pushf
fldcw
xlat
rcr
mov
jmp
hlt
dec
cmp
xor
(bad)
mov
and
fst
imul
dec
pushf
repz
call
jne
adc
lods
inc
stos
add
xor
cs
fwait
shl
iret
fst
popa
adc
push
mov
inc
xor
sub
ror
xlat
adc
mov
inc
scas
add
mov
inc
xchg
push
pop
xchg
call
es
and
add
scas
jbe
add
mov
dec
add
inc
xchg
inc
and
and
ficomp
push
or
mov
cmp
stc
cmp
mov
movs
or
scas
pop
dec
mov
ds
xor
sub
movs
or
dec
call
fsubr
and
pop
imul
mov
dec
lods
clc
out
in
cmp
outs
leave
mov
test
push
or
inc
mov
lea
adc
sbb
push
scas
pop
dec
movs
lock
and
les
outs
aaa
jnp
mov
mov
push
push
jecxz
fwait
inc
and
and
sbb
shl
hlt
mov
push
push
jmp
cwde
dec
sub
xlat
cs
es
add
mov
mov
hlt
mov
dec
add
ds
inc
sub
sbb
push
adc
mov
inc
test
jmp
jmp
xor
mov
pop
pop
pop
push
pushf
pop
pop
xchg
icebp
loopne
jecxz
faddp
and
push
push
std
jmp
cli
cmp
into
xor
rcr
adc
pop
test
push
call
aam
jo
push
gs
mov
test
inc
xor
xor
shl
call
jmp
fwait
xchg
in
and
sub
add
shl
cld
pop
add
or
(bad)
sbb
stos
pop
or
(bad)
icebp
inc
cmp
cmp
xchg
xchg
aam
fcmovbe
es
add
mov
test
out
xor
xor
inc
cwde
inc
sub
sbb
popa
adc
inc
scas
add
xor
sub
rcr
or
push
stos
push
pop
xchg
call
sub
sub
pop
push
std
out
mov
cmp
and
fisttp
test
push
popf
in
jecxz
loope
and
xor
cmp
xor
shl
xchg
push
and
and
sbb
pop
or
lods
jle
sti
cmc
mov
xor
mov
cmps
or
in
popf
dec
pop
(bad)
in
xchg
fdiv
(bad)
and
mov
inc
stos
add
sub
jge
or
mov
dec
cmps
neg
clc
xor
outs
mov
dec
add
inc
xchg
inc
sub
lds
movs
or
hlt
mov
jbe
mov
mov
out
test
cmp
sub
cmp
shl
(bad)
cmp
adc
jae
in
addr16
ficom
out
ficomp
(bad)
fidivr
std
ficom
jge
jg
std
fisubr
push
cmp
mov
and
cmp
and
mov
and
mov
xor
(bad)
fsub
add
nop
adc
retf
lods
dec
pop
inc
mov
xchg
hlt
sbb
or
das
dec
inc
(bad)
jb
iret
cdq
xchg
cdq
test
out
xor
repnz
lods
jp
and
lsl
or
sbb
aas
call
fwait
std
push
cmp
out
stc
imul
in
das
mov
js
dec
in
and
repnz
xchg
mov
and
mov
test
shl
push
bound
fisubr
push
dec
push
mov
xor
movs
xor
dec
inc
shl
cwde
xor
fwait
add
add
or
aaa
sbb
mov
and
imul
xor
sbb
cmc
retf
lock
xor
jns
stos
movs
mov
mov
mov
inc
mov
enter
pop
popf
jns
in
sub
pop
mov
or
pop
jmp
shl
and
mov
aad
xchg
sahf
mov
sub
in
pcmpgtd
cwde
inc
jmp
push
add
push
aam
pop
add
imul
xchg
pop
nop
mov
hlt
sbb
vpsubusb
fdiv
movs
je
(bad)
(bad)
xchg
push
out
jmp
cmp
enter
sahf
ins
and
inc
mov
out
out
loop
add
xchg
sti
xchg
mov
or
sub
movs
jg
in
jmp
jmp
push
imul
dec
xlat
push
sub
push
loopne
sub
(bad)
aam
jb
xchg
xor
lods
add
push
mov
fiadd
nop
rcr
or
cmp
ret
ret
fild
pop
stos
paddd
scas
and
jge
sbb
mov
cmp
lods
push
dec
test
sbb
scas
or
jbe
in
popf
fsub
push
pop
(bad)
adc
cmovge
push
pop
outs
push
xchg
inc
jns
inc
pusha
mov
xor
sbb
les
fild
jb
push
sbb
push
loope
or
js
push
inc
or
ja
les
ret
rol
fsubr
xchg
cld
pop
retf
int3
aad
pushf
test
xchg
or
jle
sub
movs
push
add
push
dec
jo
loopne
cmp
es
sbb
and
push
gs
ja
stos
or
sbb
leave
jno
and
cmp
cmp
jecxz
(bad)
push
sbb
mov
adc
mov
mov
xchg
jb
inc
aas
pop
lods
xchg
out
jns
loop
mov
outs
adc
and
pop
fisub
cmps
inc
dec
jb
scas
(bad)
jg
fs
and
adc
xor
(bad)
adc
dec
cmp
fld
arpl
sbb
rcr
cmp
outs
mov
aas
mov
push
adc
xor
in
and
add
jbe
rcr
sahf
mov
add
mov
mov
cmp
repnz
cdq
das
mov
jbe
cld
out
aam
ss
test
and
scas
daa
inc
mov
adc
frstor
xor
daa
push
adc
cmp
int3
xor
sbb
mov
jb
add
es
push
test
sbb
icebp
dec
dec
lock
pop
out
push
or
jge
repnz
mov
aam
xlat
and
aas
lahf
adc
jmp
or
bsr
xchg
or
mov
mov
pop
sub
imul
lods
pop
shr
ret
adc
scas
inc
xchg
std
faddp
xor
cmp
sbb
(bad)
lea
fisubr
repz
pop
sub
xchg
xor
push
add
add
xlat
mov
and
ss
in
add
stc
stc
cmps
cmc
mov
add
sar
call
into
pop
fild
sub
outs
test
add
pop
pop
ins
test
popa
shl
psllw
adc
lods
ret
cmp
add
cmp
push
das
mov
mov
cmp
pusha
mov
sub
mul
unpckhps
inc
xor
mov
scas
fcmovnbe
push
jecxz
bound
dec
aad
and
adc
cdq
and
jle
movs
gs
xor
inc
leave
dec
repz
jbe
push
pop
pop
movs
int3
pop
daa
push
mov
cmps
pop
mov
push
(bad)
(bad)
movs
test
and
and
cwde
adc
fsubr
scas
adc
test
popf
dec
je
addr16
dec
mov
data16
repz
mov
dec
xchg
(bad)
mov
aad
dec
into
js
fwait
stos
jp
lahf
scas
xor
push
lea
sti
ret
mov
div
cmp
mov
jecxz
adc
mov
jge
adc
cmps
inc
dec
movs
dec
das
push
jmp
pop
push
push
cmp
movs
(bad)
sbb
leave
mov
mov
sub
push
xchg
push
std
fldcw
mov
dec
mov
pop
jmp
cwde
cld
xor
sub
xchg
jnp
cdq
sahf
in
pop
push
push
movs
or
push
stc
(bad)
fild
sti
pop
jbe
push
test
jge
push
fwait
or
mov
(bad)
loope
inc
jo
mov
pop
adc
mov
push
(bad)
loop
push
test
fwait
jo
xor
add
sti
les
xchg
outs
cmp
inc
xchg
add
jbe
push
pop
jae
inc
mov
xor
add
(bad)
fcmovnb
ret
cmp
mov
fidiv
stos
imul
inc
shr
pushf
mov
call
jl
aaa
das
lock
mov
div
fs
pop
popa
xor
ins
push
ins
movd
jge
push
or
push
and
test
aas
enter
and
pop
imul
sbb
or
mov
wbinvd
add
jo
xor
sub
cmps
mov
das
adc
lock
xchg
aas
das
fisttp
jge
sub
pop
mov
cmp
hlt
hlt
out
stc
lahf
cs
fwait
gs
lahf
dec
ds
inc
lea
pop
outs
and
les
ins
test
mov
sub
fs
hlt
in
or
jnp
aad
and
in
lods
pop
and
test
call
mov
cmp
jmp
dec
ret
ror
pop
sub
test
mov
push
push
in
push
pop
popf
movs
or
sub
outs
push
sar
stc
cld
sar
fld
int3
pop
lea
mov
into
paddq
scas
adc
leave
arpl
push
sbb
out
call
shl
inc
fisubr
mov
lock
xchg
mov
sub
cmp
es
jbe
mov
xchg
es
inc
pop
mov
sub
xchg
inc
pushf
xchg
jns
scas
or
sub
clc
adc
not
cli
pop
push
inc
movs
pop
sbb
pop
inc
test
mov
fs
or
cmp
push
(bad)
imul
(bad)
pop
and
fstp
das
pushf
movs
or
cmp
in
daa
push
test
stos
stos
in
sub
loop
aam
jnp
xchg
or
mov
(bad)
mov
ins
ins
sar
enter
lods
out
out
clc
repnz
xchg
mov
adc
mov
retf
adc
(bad)
cmp
aam
mov
mov
cmc
xchg
stc
hlt
mov
aaa
int
sub
ror
inc
lods
pop
push
mov
into
leave
pop
and
int
jecxz
xchg
mov
sbb
mov
and
cmp
(bad)
cvtpi2ps
sahf
sub
push
or
adc
sbb
test
mov
repnz
shl
pushf
fild
or
inc
dec
stos
lahf
mov
adc
lods
clc
sub
popf
pop
call
adc
cli
nop
mov
mov
jae
mov
adc
mov
call
mov
jle
fnstsw
and
pop
sub
(bad)
lods
jmp
nop
shl
cdq
pusha
iret
fisttp
xchg
sub
sar
xchg
cmp
(bad)
cmp
cli
lock
pmaxub
cmp
pusha
mov
inc
dec
push
jmp
and
rcr
or
(bad)
sub
inc
mov
cs
or
fwait
sahf
add
or
dec
(bad)
xchg
cwde
inc
xor
mov
popa
std
lods
and
out
push
mov
fnstcw
xchg
add
cs
call
jne
cmp
inc
dec
(bad)
ss
mov
add
push
cmp
faddp
mov
mov
cdq
mov
arpl
push
mov
addr16
mov
in
xor
imul
cmp
in
dec
mov
aaa
das
push
into
imul
cwde
xor
ins
shl
lahf
mov
(bad)
xor
out
jecxz
mov
shr
mov
dec
loopne
(bad)
imul
sub
mov
cmp
adc
jnp
lods
mov
pop
add
sub
and
les
es
push
push
or
mov
aam
fcomp
mov
xlat
xor
js
bound
push
xchg
adc
(bad)
mov
test
adc
cwde
jns
dec
mov
aad
fisubr
mov
mov
push
xchg
push
imul
test
cmc
pop
ret
mov
xor
js
stos
xchg
jns
sub
(bad)
into
retf
lahf
clc
movs
sub
jns
mov
xlat
adc
ret
sub
ret
mov
xchg
test
in
cmc
loop
push
mov
(bad)
sub
stc
sbb
movs
hlt
out
sub
mov
pusha
xchg
pop
dec
mov
adc
gs
sbb
dec
pop
or
xchg
inc
xor
pop
(bad)
(bad)
pop
cli
jns
sub
sar
das
stos
dec
dec
and
imul
mov
imul
dec
or
mov
sub
mov
jge
pop
mov
pop
inc
fdiv
dec
fstp
pop
imul
or
int3
mov
dec
lea
es
imul
dec
pop
fsubr
jmp
(bad)
and
push
adc
(bad)
fnsave
ret
inc
jns
mov
stos
inc
add
lds
sbb
xchg
je
inc
and
pop
mov
jp
shl
movs
stc
jb
fstp
js
fldenv
xchg
movs
ret
loopne
mov
(bad)
rep
jb
test
add
sahf
xor
and
add
mov
ss
cld
push
or
(bad)
mov
and
xor
ficom
mov
ins
sbb
or
test
push
popf
sub
jbe
push
inc
push
dec
jmp
les
imul
pop
mov
xchg
sbb
fisubr
sahf
(bad)
daa
mov
daa
sbb
sbb
popa
sbb
jmp
xor
popa
add
or
pop
xchg
sahf
sahf
xor
inc
mov
cmp
pop
xchg
and
cmps
dec
clc
ss
cmps
cmp
in
cmc
fisubr
sbb
outs
pushf
fs
push
or
cwde
in
jl
ficomp
mov
mov
pushf
fmul
or
mov
xor
add
inc
pop
push
dec
out
iret
xor
xor
jns
das
inc
inc
mov
rcr
leave
fbstp
fnstcw
out
movs
fwait
test
loop
dec
pop
out
leave
je
sub
loopne
inc
pop
mov
mov
push
loopne
mov
ret
jge
movs
add
pop
add
xchg
add
fwait
sub
js
test
sbb
enter
dec
sub
test
les
fisub
inc
jbe
add
cwde
adc
jle
adc
pop
cmp
aad
cmps
adc
jecxz
in
inc
push
and
imul
popa
jl
fidiv
mov
xchg
dec
sahf
ficom
cmps
adc
dec
or
and
fs
rcl
fbstp
rcr
shl
lock
push
cmc
lock
ins
icebp
add
xchg
(bad)
xlat
popa
(bad)
lock
sar
cmc
xchg
cmp
xor
sar
add
jno
fist
mov
cs
mov
shl
xor
sbb
mov
lea
mov
je
dec
(bad)
mov
pop
jbe
or
je
shl
imul
push
imul
xor
dec
fidiv
scas
cmps
lock
out
ror
cmp
mov
push
sahf
pop
fmulp
pushf
pop
inc
(bad)
(bad)
mov
fadd
sub
mov
shl
scas
fst
(bad)
lea
sets
ins
push
xor
mov
cmp
push
xor
xor
aad
out
cdq
and
xchg
sbb
in
ja
cmp
mov
cs
pop
inc
mov
outs
adc
(bad)
in
out
div
xor
xchg
test
push
fwait
pushf
add
mov
stc
mov
lock
push
pushf
ret
or
xor
mov
inc
rcr
sub
or
outs
mov
loope
jge
es
out
aaa
xchg
lods
add
xor
dec
xchg
dec
pop
pop
ins
pop
push
not
test
mov
xchg
fld1
imul
pop
into
jb
dec
sub
pop
call
push
sub
mov
xchg
iret
fdivr
leave
xchg
in
pop
inc
mov
nop
mov
pop
cmp
cmp
adc
out
cmp
les
mov
out
ret
lahf
sbb
mov
jae
in
inc
retf
test
nop
cmp
punpcklbw
retf
inc
jmp
out
cmp
push
mov
mov
push
mov
mov
test
jmp
js
cmp
call
xlat
adc
and
mov
ror
add
movs
and
mov
push
mov
int3
jb
pop
and
retf
inc
ins
int
(bad)
stc
popf
and
test
jmp
test
mov
jno
in
mov
adc
jp
and
sub
lds
adc
inc
pop
jmp
mov
dec
scas
in
push
adc
push
adc
bound
jl
stc
cmp
adc
outs
pop
xor
cwde
inc
in
xor
and
and
movs
pop
cmp
retf
push
dec
ror
mov
jge
mov
xchg
sbb
mov
test
cmp
jne
cmovb
ret
sahf
data16
inc
iret
std
dec
inc
ins
add
mov
pop
ds
retf
sub
clc
jbe
gs
inc
inc
pop
pop
sti
cmp
aad
add
sub
adc
mul
scas
mov
xlat
sub
pop
mov
push
(bad)
pop
std
ds
xor
dec
jb
or
fiadd
jp
cwde
jno
js
inc
cwde
lods
dec
adc
cmp
cmp
xor
in
arpl
sbb
gs
pop
inc
lea
and
xchg
in
xchg
adc
push
repz
jg
(bad)
mov
xchg
pop
xor
popa
pop
pop
xchg
xchg
repnz
pushf
and
fdecstp
enter
(bad)
xor
stos
push
mov
or
push
aad
hlt
fstp
push
cmp
sub
dec
pop
adc
or
lock
aaa
mov
mov
les
lea
pusha
je
jmp
div
ror
test
lahf
push
xlat
test
test
retf
pop
fcomi
scas
dec
in
sbb
es
mov
xor
dec
pop
adc
fcomp
ins
addr16
stos
sub
aam
fwait
adc
inc
sbb
mov
scas
fidivr
adc
dec
and
pushf
mov
rol
or
dec
xor
stc
mov
aam
xor
(bad)
cmp
mov
jns
adc
out
or
fist
dec
and
sbb
lods
mov
imul
and
repnz
xor
inc
dec
jno
xor
jae
and
sub
sbb
lods
or
and
repnz
mov
mov
lods
adc
sbb
movs
inc
(bad)
hlt
jb
inc
push
aad
xchg
bnd
mov
or
jge
fbstp
pop
and
pop
push
push
aaa
cli
sahf
sbb
outs
imul
pop
int3
sub
inc
mov
daa
adc
aad
jns
cmp
xor
lods
out
push
xor
sbb
scas
in
jmp
or
sbb
call
xor
js
mov
jne
enter
fstp
ss
fwait
movs
aam
cmp
add
aaa
ror
sar
fimul
test
sti
cmp
scas
and
call
in
cmc
gs
nop
rol
push
outs
shl
xchg
retf
mov
ins
or
dec
mov
xchg
sbb
jl
jae
call
add
cmps
(bad)
push
loop
xchg
add
inc
aam
ror
dec
and
adc
xchg
je
jae
aam
(bad)
cmp
pop
fild
sbb
or
xchg
stos
dec
into
jno
mov
jne
ss
into
fstp
jle
mov
and
mov
xor
push
mov
xor
pushf
sahf
rcr
mov
fwait
enter
adc
mov
jne
push
push
add
out
cs
xor
adc
pop
jecxz
push
stc
mov
es
adc
pushf
cs
pop
sub
mov
lahf
iret
sbb
into
inc
mov
fidivr
mov
mov
push
and
shl
jmp
test
mov
(bad)
push
jmp
sti
mov
sti
xchg
xchg
and
shr
or
sti
stos
aaa
and
sahf
sub
hlt
xchg
jo
mov
das
mov
cmps
lods
out
push
dec
lock
movs
mov
sub
adc
adc
call
mov
mov
or
in
xchg
jbe
push
inc
ss
dec
mov
retf
int
adc
lds
jne
sub
out
add
push
jge
imul
inc
enter
cs
ds
inc
pop
lds
adc
addr16
dec
mov
add
xchg
popa
imul
cwde
jmp
push
cmp
aaa
clc
pop
scas
xor
out
daa
xchg
fisub
mov
mov
jecxz
leave
mov
adc
sahf
cdq
push
pop
add
mov
pop
mov
and
lahf
pop
hlt
mov
dec
pop
cmps
inc
rol
test
dec
int
bound
jge
pop
mov
cli
fidivr
push
cmp
rcl
pop
mov
jge
or
les
mov
sti
or
lea
jp
cmc
sbb
imul
retf
mov
inc
add
(bad)
pop
and
cwde
push
repz
sub
adc
xor
js
xchg
cmc
shl
cmps
lds
sbb
call
mov
xor
movs
stos
xchg
pop
cmp
je
mov
pusha
dec
repz
or
gs
call
mov
pop
xor
adc
xor
outs
jnp
test
repnz
ret
xor
or
cmp
push
addr16
cwde
cmp
lock
js
mov
outs
mov
mov
pop
add
jl
aam
mov
mov
push
mov
adc
bound
mov
arpl
pusha
sbb
loop
test
test
push
xchg
dec
ja
pusha
je
sti
clc
sub
cmp
mov
add
cmp
movs
loop
mov
in
fstp
adc
push
push
pop
sbb
pop
mov
stos
data16
fwait
push
les
fwait
out
in
popf
cmp
(bad)
(bad)
rol
pop
(bad)
clc
ret
fs
cmps
ret
xlat
shr
and
movzx
lds
aam
mov
sub
jmp
xchg
sahf
mov
adc
(bad)
mov
into
push
(bad)
leave
dec
mov
fadd
xchg
mov
out
stos
repz
loop
nop
cmc
retf
push
jp
xchg
int3
push
jne
cmc
sub
xchg
js
call
pushf
jno
pop
push
imul
sbb
mov
xchg
(bad)
int
pop
jbe
(bad)
pop
call
aam
mov
mov
sar
or
mov
add
call
sti
pop
in
rcr
retf
adc
call
xlat
imul
xchg
les
outs
jb
sub
cld
xlat
scas
ja
inc
cmc
add
inc
sbb
xchg
int3
cmp
fsubp
jae
mov
call
xor
mov
push
fdivp
push
dec
mov
cdq
xchg
mov
sub
into
add
std
stos
cmp
add
aas
lods
push
mov
and
inc
jp
xchg
les
push
pop
xor
aas
dec
add
push
or
or
add
movs
es
rol
fld
inc
mov
shl
push
mov
data16
jae
or
push
lock
add
adc
or
and
push
lock
in
pusha
or
ret
mov
or
out
xlat
jns
sbb
in
jbe
mov
mov
out
pusha
inc
jp
aaa
jecxz
fs
mov
mov
hlt
ds
pop
pop
into
mov
sbb
xor
iret
mov
push
je
mov
xchg
dec
test
jns
pop
mov
inc
cwde
out
aaa
je
ins
in
inc
xchg
out
mov
mov
sbb
xlat
mov
mov
div
call
xor
repnz
mov
(bad)
sbb
or
hlt
pop
adc
push
inc
clc
mov
push
(bad)
(bad)
fist
jg
mov
mov
aam
data16
push
and
push
xchg
popa
je
loope
xchg
pop
outs
psrld
daa
mov
mov
push
int
sub
mov
inc
or
or
adc
addr16
cmps
std
int3
push
pop
call
iret
ins
sbb
mov
pop
loope
fnstcw
leave
jle
je
xchg
pop
pop
out
lods
mov
inc
mov
mov
cmp
cmc
and
jno
jmp
or
out
arpl
or
pop
lods
mov
test
or
sub
sahf
and
(bad)
jmp
add
imul
in
push
dec
jge
sub
sbb
mov
push
mov
mov
in
cmp
mov
inc
add
cmp
mov
push
pop
sbb
push
nop
gs
xor
sub
push
pop
loope
sbb
xchg
cwde
lea
(bad)
mov
cdq
ja
gs
sti
int
retf
(bad)
adc
add
outs
pop
inc
jp
daa
cmps
push
lea
jecxz
inc
jmp
ds
jb
rcr
ja
ss
scas
std
push
inc
pop
addr16
push
cmp
jl
inc
scas
cmps
ss
push
jmp
sub
inc
dec
repnz
mov
mov
dec
in
pop
xchg
cmps
popf
cmp
dec
fdivr
xor
(bad)
jmp
xor
ja
clc
pop
push
cmp
mov
jne
sbb
xchg
rcl
xor
es
ins
ja
call
out
ret
fsub
dec
out
xor
cmp
es
es
xor
iret
(bad)
xor
xor
jns
test
sub
pushf
push
aad
mov
cmp
je
xor
xor
cdq
fld1
fisubr
jmp
inc
and
in
push
loope
xchg
mov
and
inc
lods
inc
adc
aad
fs
cmp
mov
mov
hlt
movs
push
loopne
cmp
sbb
retf
sbb
jp
(bad)
mov
jns
shl
dec
xor
lods
mov
jae
dec
ja
rcr
ret
push
xor
inc
cmc
and
rcr
or
mov
ds
loope
popa
aaa
mov
movs
inc
ja
mov
daa
adc
inc
adc
ins
icebp
lds
mov
and
aaa
push
cmp
push
call
jns
repnz
iret
pop
pop
or
adc
test
call
addr16
sub
and
jo
out
inc
out
xchg
aad
lea
in
or
ror
push
xchg
cwde
cmp
pushw
mov
xchg
or
fldcw
cli
jo
ins
std
mov
fidiv
in
in
jmp
lods
sub
aam
addr16
pop
or
jb
dec
push
sbb
test
push
loop
nop
add
xchg
(bad)
mov
and
xchg
pop
cmp
cli
or
out
je
sub
out
int3
ss
sbb
les
pop
outs
inc
rcl
and
sti
xor
lods
retf
pop
xor
scas
inc
push
jno
cmc
mov
sub
cwde
pop
mov
push
jecxz
mov
pop
mov
dec
(bad)
iret
push
fisttp
in
adc
sub
jmp
jns
push
lock
mov
shr
cmc
fidivr
jg
mov
retf
push
iret
cmp
sub
clc
cmp
adc
jae
cmp
pop
cmps
cld
add
hlt
out
xor
dec
mov
mov
add
jno
ficom
sub
pusha
ror
cmc
inc
sub
aad
sbb
nop
popa
sti
popa
mov
push
push
popa
jnp
loopne
jmp
stc
cwde
adc
mov
in
out
jl
test
cli
pop
push
scas
mov
mov
imul
ficom
clc
xor
fdiv
loop
call
in
push
aas
ret
xor
add
xchg
sbb
xlat
not
xchg
fst
out
(bad)
mov
add
jae
adc
xor
ret
fnstcw
xchg
lock
loop
or
pop
adc
mov
mov
imul
lods
es
xchg
stos
cmc
pop
arpl
mov
pop
dec
data16
daa
gs
outs
inc
test
xchg
and
daa
dec
pop
adc
xchg
(bad)
loop
ret
retf
adc
dec
mov
xchg
fisub
xor
in
ss
cdq
call
gs
test
and
mov
stos
inc
rcr
in
fdiv
push
xchg
sub
and
jae
dec
mov
cmp
mov
paddsw
inc
jo
or
jl
push
inc
push
sbb
rcl
xor
cs
int3
pop
sbb
dec
adc
int3
xchg
push
stos
lea
rcr
mov
(bad)
sub
mov
adc
je
adc
leave
cld
test
mov
pop
mov
mov
mov
add
and
xchg
adc
xchg
mov
gs
push
xor
das
inc
leave
les
push
xchg
mov
out
xor
xlat
add
retf
jnp
adc
inc
push
leave
push
dec
or
and
lock
outs
outs
cmc
push
pop
mov
xchg
rol
cmp
jae
adc
push
mov
jl
pop
cmps
mov
dec
jl
cmps
cmps
leave
out
rcr
mov
mov
adc
jmp
sbb
cdq
test
pop
repnz
gs
or
cmp
rol
and
(bad)
push
sbb
sub
call
dec
sahf
xchg
mov
dec
xchg
mov
mov
(bad)
mov
enter
mov
mov
fnstcw
stc
dec
cmp
inc
jae
rcr
mov
inc
pop
sbb
iret
xor
push
or
ror
or
dec
das
fcmovne
outs
inc
fnsave
or
std
(bad)
jle
loope
or
rol
cmc
sub
vmwrite
cmp
ja
repz
xchg
lds
xor
into
popf
or
xor
retf
cmp
(bad)
dec
das
sub
enter
in
test
arpl
daa
jle
mov
xor
lods
sahf
ins
dec
sub
(bad)
fxch
nop
hlt
retf
jle
stc
outs
mov
int3
std
push
or
jecxz
sahf
inc
xor
rcr
gs
mov
and
jp
and
mov
mov
lahf
es
mov
pushf
dec
scas
mov
sbb
dec
popa
xor
pop
mov
out
std
iret
shl
(bad)
inc
pop
mov
imul
out
adc
movs
jp
pop
lods
retf
jo
movs
xchg
ins
shl
retf
(bad)
mov
add
retf
aad
xor
aas
(bad)
mov
xor
test
movs
sar
dec
sub
scas
popf
pop
mov
sub
sti
cmp
pop
sub
ret
sbb
sbb
sub
cmps
ret
dec
into
push
mov
cmp
sbb
push
in
mov
adc
(bad)
out
pop
fimul
pop
jb
mov
pop
test
mov
push
pop
fwait
or
lods
mov
pop
xor
test
jb
lahf
adc
cmp
inc
aas
xor
rcr
std
das
enter
jbe
daa
sbb
pop
mov
cdq
jg
std
dec
mov
sbb
cld
mov
or
ret
xchg
adc
repz
int3
nop
pusha
fidiv
add
push
xchg
jo
fadd
and
jecxz
cmp
mov
sti
lods
dec
retf
sbb
test
rdtsc
cli
sar
adc
in
dec
push
mov
add
jecxz
je
sbb
lods
sahf
loop
push
push
cmp
mov
adc
cld
pop
jg
hlt
ror
sbb
push
fisub
aaa
inc
sub
jns
mov
out
(bad)
sbb
lock
aam
aaa
lea
test
xor
inc
out
shr
pop
sbb
adc
stc
lahf
dec
in
ret
sub
xchg
retf
mov
mov
xchg
adc
jbe
adc
dec
jl
leave
mov
pop
jmp
add
jp
fcmove
push
not
push
jle
mov
add
imul
pop
mov
leave
push
test
mov
jbe
jmp
xchg
leave
ret
in
cmps
(bad)
arpl
imul
push
inc
xor
xor
mov
pop
not
add
aaa
adc
(bad)
sbb
dec
call
dec
(bad)
fistp
mov
imul
pushf
scas
mov
and
jae
mov
dec
movs
addr16
xor
jnp
pop
aas
sbb
push
in
inc
adc
nop
xchg
popf
jecxz
fcomp
xchg
shr
push
pavgw
and
lock
push
popf
or
or
adc
add
and
icebp
int3
mov
add
jne
push
or
sbb
xchg
or
jge
sub
inc
mov
mov
pop
lock
sub
icebp
das
pop
movs
add
xor
ja
inc
ret
mov
cmp
aaa
loopne
mov
sbb
(bad)
shr
pop
(bad)
(bad)
dec
mov
repz
ficom
nop
aad
mov
repnz
jmp
jge
sbb
jae
loop
loop
or
and
mov
add
aaa
imul
mov
xchg
outs
cwde
xor
sub
sar
cmps
adc
rol
jle
adc
push
sbb
pop
fisub
outs
rcl
dec
adc
push
jb
imul
mov
adc
dec
in
scas
movs
inc
loope
adc
and
sar
xchg
cmc
enter
neg
dec
out
fld
dec
xor
ror
push
jbe
push
fbstp
fdivr
sub
xor
push
fwait
cwde
sar
adc
stc
xor
ja
add
in
test
push
xchg
(bad)
mov
or
dec
jbe
adc
loopne
fisttp
dec
adc
add
mov
jne
push
xchg
jg
cmp
or
adc
mov
add
mov
cmp
inc
mov
gs
aas
add
jb
ins
or
cmp
push
mov
outs
std
sbb
pop
fcmovbe
stos
lds
clc
cdq
pushf
(bad)
ins
jl
push
fldenv
jecxz
int
cs
or
and
ins
jno
popf
(bad)
hlt
adc
lock
inc
inc
jb
icebp
imul
lods
mov
fwait
push
lock
mov
jns
hlt
loope
jp
jmp
les
mov
stc
rcl
lea
(bad)
mov
mov
inc
adc
inc
xor
sar
sub
out
shl
inc
mov
mov
and
push
shr
adc
pop
xor
inc
mov
push
clc
dec
xor
mov
shl
outs
(bad)
stc
pop
xchg
aam
in
inc
xchg
xchg
loop
(bad)
imul
add
cmps
sbb
fldcw
fld
mov
pop
or
jae
mov
shr
xor
out
cmc
fs
and
push
jp
mov
pop
xchg
sub
jge
cwde
dec
mov
cmp
sbb
outs
mov
(bad)
and
jle
xor
xchg
and
fisttp
jb
cmp
loopne
fnsave
jmp
(bad)
push
(bad)
shl
shl
shl
or
test
sahf
cdq
mov
xor
sbb
add
retf
xor
add
and
call
imul
sbb
or
aad
pop
xchg
add
pop
xchg
or
gs
sub
xor
aaa
and
std
jnp
in
pop
shl
psraw
(bad)
scas
and
cmp
aad
and
lock
add
lock
and
or
mov
stos
icebp
cmps
ret
mov
add
mov
std
mov
test
mov
popa
or
xchg
inc
cmps
jge
add
sub
(bad)
mov
push
jle
jg
sub
push
scas
popa
push
add
mov
mov
xor
jmp
xor
jne
cdq
icebp
add
push
test
jmp
clc
sub
sub
je
lds
mov
push
xchg
adc
mov
outs
rol
adc
sub
ja
ins
xor
call
retf
add
(bad)
xchg
fild
es
xor
fsubp
add
mov
inc
jne
sar
ret
repnz
stos
dec
loopne
push
sbb
inc
outs
sub
push
pushf
test
inc
retf
in
test
call
adc
test
and
lods
frstor
cmp
les
push
mov
pop
mov
das
inc
mov
cmp
push
push
(bad)
test
shr
(bad)
vpunpckhwd
mov
test
test
xor
mov
jns
push
mov
repz
or
push
fsubr
mov
push
mov
jbe
jno
push
cmp
das
rcl
nop
scas
pop
mov
(bad)
jo
sbb
in
leave
push
fwait
ret
fld
in
sbb
rol
jo
rcl
push
inc
out
jmp
call
bnd
jge
(bad)
jae
and
test
fisub
pop
sbb
repz
loope
sub
inc
pop
dec
cmp
push
add
or
sbb
inc
call
mov
add
lods
add
es
shr
mov
fsubr
iret
adc
add
popf
jno
in
(bad)
fwait
mov
adc
sbb
int3
sbb
scas
inc
int3
mov
dec
jle
shl
sub
std
cdq
bound
clc
mov
loope
jmp
cdq
ins
(bad)
pop
adc
xlat
xor
fild
sub
mov
cmp
ins
adc
fcmovu
enter
out
fnstcw
xor
loop
push
mov
int
test
ss
push
lods
pop
jnp
ja
jae
mov
ret
adc
daa
out
pusha
imul
hlt
fisttp
push
out
or
adc
shl
dec
test
sbb
push
jae
les
fdivr
push
mov
push
mov
push
sbb
fwait
pop
lods
mov
in
dec
adc
mov
push
jae
cmp
inc
xchg
ret
aas
mov
adc
xlat
rcr
mov
push
dec
push
out
and
pop
dec
jmp
sbb
sahf
imul
push
mov
xor
cs
rcr
test
push
dec
cli
aaa
add
cmp
div
stc
pop
out
sub
lahf
ror
in
fsubr
std
inc
je
leave
dec
sub
sahf
test
mov
jnp
inc
outs
push
sub
iret
pop
and
jge
inc
mov
or
pop
mov
xor
inc
lahf
pop
pop
mov
or
xchg
mov
jl
mov
inc
inc
jecxz
dec
js
test
test
das
xchg
scas
movs
fs
shl
loop
pop
adc
jle
inc
jle
push
adc
mov
mov
cmp
int3
push
sub
cld
dec
mov
sub
addr16
mov
adc
pop
mov
repz
imul
out
out
aas
sbb
pop
xor
push
call
push
or
mov
int
clc
jge
in
sbb
rcr
cmps
adc
xchg
jge
outs
shl
test
fbstp
cdq
sbb
shl
daa
push
fcom
in
in
mov
add
jno
jne
xchg
add
out
stos
xor
scas
test
out
jmp
pop
xchg
out
aas
mov
adc
add
rcl
sub
jmp
inc
jmp
pusha
mov
xor
mov
add
retf
jbe
or
ins
xchg
sub
mov
or
mov
pushf
cmp
and
sbb
pop
(bad)
mov
mov
ja
ss
(bad)
in
dec
adc
fist
sahf
xchg
(bad)
lds
inc
dec
or
or
jmp
mov
data16
ror
push
sar
stc
xor
sbb
mov
data16
push
lahf
xlat
mov
ret
jnp
push
test
or
push
mov
cmp
imul
mov
mov
in
or
mov
jmp
(bad)
xchg
mov
cmps
xor
test
xchg
addr16
adc
adc
icebp
ja
sub
lock
loopne
jmp
and
fldcw
dec
fcmovne
inc
or
jbe
test
out
xor
adc
ror
addr16
or
cmp
mov
add
cmp
ss
call
rcl
mov
test
xchg
mov
mov
xchg
in
xchg
sbb
mov
cld
out
call
retf
jge
dec
dec
jbe
xchg
iret
and
mov
mul
inc
and
push
add
or
dec
dec
cld
fdivr
or
daa
pop
mov
cmp
mov
scas
ja
loop
les
mov
or
lock
in
add
and
addr16
ja
popa
push
in
mov
dec
outs
jmp
daa
inc
ja
enter
jg
lods
imul
and
mov
sub
fild
jge
push
fiadd
jmp
mov
push
out
mov
sbb
mov
sahf
fsubp
sbb
mov
fcomp
sub
aad
sub
cmps
mov
leave
aad
sbb
test
push
sbb
retf
mov
inc
sbb
sub
and
push
dec
data16
mov
sbb
rol
xchg
mov
sub
dec
jae
mov
mov
std
pop
aad
pop
imul
(bad)
stc
aad
jnp
mov
mov
add
jge
mov
les
jge
sar
rol
fsub
pusha
jl
ja
jge
aaa
jg
adc
or
ret
lea
mov
mov
sbb
mov
mov
xchg
sbb
cmp
xchg
adc
cmps
jnp
add
xor
xchg
(bad)
cmp
test
retf
shl
ret
push
pusha
mov
(bad)
jns
fdiv
xor
pop
and
(bad)
ss
pop
ret
sbb
push
sub
jmp
cmc
neg
mov
ret
test
cmp
push
syscall
call
daa
test
fist
push
cmp
hlt
repnz
addr16
ins
(bad)
fild
xor
test
enter
pop
ficom
inc
pop
mov
add
sbb
ror
push
aad
inc
sbb
mov
fmul
mov
lahf
pop
pop
lock
mov
push
xchg
jl
cld
xchg
movs
sub
pushf
repz
xchg
mov
cmp
jge
movs
jle
outs
aas
dec
jmp
mov
ror
mov
mov
stc
mov
push
cdq
push
xor
int
ds
in
add
mov
cli
(bad)
lock
and
loopne
mov
bnd
adc
iret
mov
loopne
aam
gs
out
mov
ret
or
jl
push
in
add
out
leave
and
cmp
stos
(bad)
cmp
mov
cmp
mov
out
fisttp
pop
mov
mov
ins
out
pusha
fstp
inc
enter
mov
(bad)
icebp
pop
jl
inc
mov
dec
and
das
test
pop
cmp
xchg
inc
add
inc
mov
mov
jl
call
cdq
aad
loope
sbb
cmps
std
jmp
inc
dec
daa
or
jle
je
inc
or
test
repnz
pushf
push
jecxz
jle
sbb
outs
adc
mov
pushf
test
rcl
call
sahf
lods
push
in
int3
les
sub
outs
shr
call
xchg
sub
cmc
bound
push
cmps
popf
fmul
pop
push
rol
clc
popf
daa
cmp
mov
addr16
lds
mov
sti
add
outs
sbb
mov
imul
jge
cmp
or
push
fistp
mul
test
data16
shl
mov
in
scas
loop
pop
or
adc
xor
jmp
pop
movs
shl
and
jl
push
and
into
push
mov
(bad)
retf
dec
sbb
push
jne
inc
lahf
push
das
in
js
xor
mov
inc
jmp
out
mov
mov
push
xchg
(bad)
fcomp
mov
pop
jae
mov
jns
ds
es
pop
xor
xchg
mov
(bad)
sbb
and
test
icebp
test
dec
imul
ss
test
sbb
scas
shr
push
sti
sbb
pop
dec
inc
jae
inc
pop
xor
clc
ja
jle
in
test
and
jbe
inc
dec
movs
out
pop
mov
xor
xchg
mov
push
sub
dec
fisubr
ror
es
gs
data16
inc
pop
shl
add
or
les
shl
fwait
sbb
les
sub
push
push
scas
xor
arpl
ret
mov
call
adc
push
imul
movs
lods
or
pop
or
aam
test
and
(bad)
jo
aad
in
(bad)
in
inc
test
mov
inc
xor
mov
mov
xchg
ds
imul
or
cmps
cmp
ret
xor
aaa
lahf
addr16
pop
outs
into
xor
pop
and
xor
add
mov
(bad)
leave
punpckldq
nop
mov
call
mov
push
out
jmp
je
pop
sub
cmc
test
sbb
pop
dec
mov
xchg
sub
pop
pop
pop
add
fidivr
bound
cld
js
lods
and
sbb
mov
fsub
sub
and
mov
or
xor
push
push
cmp
jns
into
inc
sbb
xor
mov
mov
call
jnp
mov
xchg
mov
stos
mov
mov
mov
xlat
cmp
in
mov
push
jo
and
push
inc
ror
cmp
dec
jns
mov
rol
std
movs
ss
sbb
sub
loope
xchg
add
shl
in
push
mov
xlat
scas
fcomp
pop
sti
pop
jp
sub
mov
std
jmp
lods
push
mov
pop
aam
imul
cli
cmp
out
in
sbb
dec
sar
mov
cmps
xlat
pop
jb
dec
cwde
mov
or
lar
push
gs
jmp
out
sbb
in
jp
mul
and
imul
call
cmp
pop
pop
pop
or
fst
cmp
lods
fst
push
ret
jecxz
(bad)
jmp
jo
daa
push
in
push
stos
retf
push
mov
movs
mov
scas
idiv
push
xchg
xor
(bad)
jnp
xlat
pop
add
mov
ds
lods
dec
hlt
xlat
pushf
shl
mov
iret
inc
dec
test
and
jbe
jo
jb
das
mov
movs
retf
fisttp
shr
mov
and
and
jmp
std
pop
push
out
sti
xor
aas
clc
dec
sti
leave
push
jno
push
data16
fsub
push
mov
jns
mov
jmp
mov
mov
mov
sub
iret
adc
pop
aam
inc
js
xchg
pop
sti
or
push
mov
fild
shr
sbb
add
xchg
inc
inc
pusha
xor
ret
add
inc
push
int
aad
or
in
xchg
or
mov
cwde
(bad)
shl
and
jle
mov
inc
push
in
dec
stos
xchg
push
or
push
and
cmc
ins
adc
loope
push
cmps
and
sbb
adc
push
sahf
push
add
cmps
inc
or
pop
mov
cmps
push
xchg
std
dec
adc
xchg
icebp
mov
push
and
cdq
pop
adc
add
shl
mov
sub
jecxz
loop
mov
mov
cmps
pop
xchg
or
adc
lods
jne
and
fs
fstp
repnz
scas
div
scas
mov
pop
mov
sub
jnp
dec
jmp
lods
add
clc
pop
iret
dec
dec
inc
push
sub
inc
push
pusha
push
ret
add
add
fsub
jns
vphaddwd
mov
rol
mov
or
jae
pop
fcom
jmp
leave
push
rcl
sbb
push
push
scas
shr
and
inc
mov
mov
mov
xchg
pushf
xor
or
pop
nop
(bad)
js
leave
cmp
jnp
mov
sub
icebp
pop
addr16
adc
jbe
ret
sub
pop
out
jno
(bad)
repz
inc
push
popa
ret
mov
pop
push
test
jl
jmp
aaa
dec
mov
mov
fcmovnu
popf
xchg
mov
fs
or
mul
sub
jmp
int3
test
mov
mov
and
xchg
scas
dec
push
sbb
es
in
sbb
push
ret
ins
mov
(bad)
pusha
fdiv
cmp
xlat
fsubr
(bad)
cmp
aam
pop
js
retf
sub
xor
imul
inc
test
add
ret
mov
adc
jecxz
cmps
cmp
ins
ss
dec
mov
sbb
daa
jp
add
mov
ja
jl
push
mov
in
cmp
mov
push
xchg
iret
mov
mul
daa
or
lahf
add
stos
inc
popa
push
jecxz
test
xchg
(bad)
aaa
ins
fcom
mov
mov
lods
stos
cmp
call
mov
mov
in
(bad)
int
pop
arpl
pop
leave
adc
aam
inc
jmp
jp
mov
retf
cmp
call
in
lock
cwde
(bad)
fwait
mov
stos
dec
jne
mov
test
mov
dec
sbb
sub
and
fld
aaa
ss
pop
jg
dec
pop
mov
bound
mov
sub
push
pop
call
shr
int
jl
outs
lods
cmp
repz
int3
mov
iret
adc
shr
push
out
mov
push
pop
push
or
pop
mov
xor
loop
inc
sbb
(bad)
mov
fnstenv
mov
mov
sbb
addr16
cmp
xor
or
div
adc
sub
push
adc
ins
add
sub
ss
mov
stos
nop
popf
mov
pop
jae
pushf
sub
jge
pop
sub
dec
fsubp
cmp
push
mov
mov
test
push
out
test
sbb
pop
dec
pushf
jmp
call
ss
pop
mov
push
repz
jbe
xor
cmp
pop
das
push
add
push
adc
mov
pop
adc
push
sub
pop
adc
js
std
add
test
jae
es
mov
popf
adc
pusha
out
dec
jl
sub
inc
and
daa
arpl
mov
outs
and
sub
lock
std
in
icebp
movs
add
imul
ss
sti
push
lea
jecxz
mov
push
add
in
sbb
int3
xchg
(bad)
das
sub
and
js
(bad)
ds
dec
pop
adc
push
retf
and
push
push
daa
test
test
int3
and
cld
fwait
jns
cmp
xor
jecxz
sub
bound
sub
pop
fild
adc
int3
xor
push
shr
ja
(bad)
jp
mov
jnp
je
jmp
cmp
jne
or
xchg
cld
xor
jmp
(bad)
shl
and
push
in
loopne
imul
sub
adc
xchg
test
push
push
and
inc
nop
mov
xchg
aaa
movs
int3
xor
cli
dec
xor
push
and
xor
jno
cmps
jecxz
lock
aaa
out
dec
dec
(bad)
sbb
stos
daa
sub
loope
(bad)
jmp
mov
vmwrite
xor
imul
mov
adc
stc
jmp
sbb
mov
popf
call
nop
add
adc
mov
add
jnp
mov
cdq
cmp
pop
aam
inc
push
stos
dec
or
push
mov
mov
or
xor
es
mov
add
cmp
mov
adc
add
outs
add
fs
clc
inc
arpl
mov
stos
(bad)
mov
pop
popa
enter
pusha
iret
aaa
xchg
and
jno
sub
and
std
aad
out
cmc
pop
(bad)
jae
mov
sub
pop
dec
sbb
mov
fwait
push
or
jmp
pushf
sub
cwde
xor
push
hlt
jnp
enter
adc
cmp
and
jae
int3
adc
sub
shr
nop
std
cmc
pop
retf
push
or
mov
jmp
fs
retf
fucomi
enter
sub
outs
adc
pop
pushf
outs
icebp
push
push
add
xor
out
push
out
jmp
movs
and
retf
mov
fstp
inc
jb
cmps
mov
(bad)
ret
mov
jmp
pop
in
push
adc
cmp
and
lahf
std
push
sar
xor
loope
(bad)
jle
cli
mov
ss
lods
sub
dec
or
add
loope
mov
push
int3
xor
inc
push
pop
sub
rol
outs
les
xor
dec
pop
xor
pop
lea
mov
shl
pop
add
pop
push
rcl
xchg
xor
mov
lock
xor
xchg
sbb
fdivr
xor
xor
jo
jg
jae
pusha
test
fbld
int
jmp
mov
cmp
repz
out
mov
cmp
or
pop
jb
cli
(bad)
out
rol
sub
sbb
rcl
movs
loope
sub
inc
test
jmp
xchg
rcr
mov
adc
int
sbb
mov
jg
pop
clc
and
(bad)
sub
mov
(bad)
mov
scas
dec
loopne
mov
(bad)
push
push
lahf
les
lea
pop
push
fs
scas
fwait
in
(bad)
bound
push
out
pusha
shr
hlt
outs
jo
inc
push
xchg
pop
mov
sub
out
in
xchg
jmp
(bad)
mov
fldcw
scas
jnp
and
xchg
mov
das
push
fimul
add
mov
fsub
retf
(bad)
test
sub
sub
and
popa
lahf
dec
test
dec
mul
xchg
cmps
nop
mov
sar
or
xchg
bound
(bad)
in
inc
xlat
push
jae
fld
stos
mov
sbb
imul
jns
outs
jp
sar
sub
pop
cdq
lods
jmp
mov
pusha
sub
mov
ss
and
mov
sbb
jbe
and
inc
icebp
outs
xor
pop
in
add
xor
adc
sub
mov
push
xlat
aaa
mov
aam
int3
gs
test
cmp
cmps
cmp
out
popf
cmp
(bad)
push
sbb
pop
mov
in
cmps
adc
out
pop
sub
pop
fisub
pop
stc
sub
ins
adc
fcmovne
aad
mov
inc
ins
jg
inc
mov
mov
xor
adc
cwde
push
fwait
ret
sbb
mov
test
es
push
jmp
enter
push
popa
imul
je
daa
xlat
das
jnp
sahf
dec
or
daa
cmp
mov
stc
stos
cld
in
scas
xchg
cmc
icebp
xor
inc
cli
push
fistp
movs
sbb
popa
cwde
mov
adc
outs
pop
(bad)
movs
add
cmps
mov
repz
sahf
push
movs
or
add
test
jnp
push
and
sbb
jmp
mov
loop
xabort
xor
cmp
pop
pop
hlt
pop
cmps
(bad)
repnz
push
lock
sbb
inc
pop
int3
out
bound
push
xor
mov
jae
mov
aad
mov
pop
cwde
ins
call
hlt
leave
jmp
xchg
lea
adc
ds
mov
jl
loopne
mov
lds
mov
nop
xchg
pop
in
loop
in
js
std
(bad)
jge
dec
fidiv
push
xchg
(bad)
movs
push
add
push
push
push
stos
jl
adc
jmp
sub
cmc
jmp
pop
mov
pop
sbb
(bad)
push
jbe
xchg
fsub
push
stos
dec
cmp
adc
and
clc
cs
mov
xlat
push
ror
xchg
fild
into
je
ret
ss
nop
push
ret
and
out
mov
sbb
xchg
mov
sub
mov
mov
add
rcr
mov
push
(bad)
dec
daa
or
leave
test
stc
jbe
shr
lds
sub
loope
push
add
push
mov
lock
shl
or
(bad)
cs
data16
push
das
pop
mov
adc
adc
mov
jnp
xchg
cs
paddq
ficom
scas
pop
scas
(bad)
mov
das
das
sti
pop
sbb
inc
out
iret
mov
dec
xchg
test
popa
leave
shl
pushf
xor
pushf
push
sub
sub
cmps
jns
jb
jle
cld
or
cld
adc
gs
lods
ret
inc
cmp
mov
xlat
xor
cmps
mov
and
loope
fucomi
aas
jb
mov
dec
bound
hlt
mov
inc
or
cmp
(bad)
jb
xchg
adc
adc
pusha
loopne
mov
and
add
push
out
jl
out
(bad)
sub
mov
aam
mov
wbinvd
sahf
dec
adc
and
ror
les
cmp
pop
in
aaa
dec
popf
mov
fiadd
daa
jae
ror
les
into
sbb
jo
fcomp
stos
clc
and
out
pop
inc
arpl
sub
dec
test
push
cmp
mov
xor
jno
sub
sbb
mov
pop
jmp
cmp
xchg
outs
shr
dec
lahf
cmp
fs
scas
sahf
mov
sbb
mov
cs
sbb
add
(bad)
(bad)
int
sti
fdivr
cmp
mov
lock
push
out
sub
xor
shl
dec
sti
sub
push
mov
shl
(bad)
mov
test
inc
cmp
xor
xor
rcl
cmps
aas
sbb
sub
das
cmp
cmps
dec
enter
sti
(bad)
pop
stos
jge
enter
push
fwait
in
sbb
jo
or
cmp
xlat
imul
not
push
xchg
stc
cli
mov
dec
jp
loope
xor
call
jnp
jno
add
out
dec
add
pop
xor
inc
stos
mov
xchg
and
sub
pusha
icebp
adc
std
and
inc
repz
ret
into
lahf
adc
cli
sbb
jbe
jns
lods
aad
add
scas
mov
sub
fiadd
cld
icebp
sbb
mov
push
popf
(bad)
jno
rcl
jmp
cmc
sub
test
sbb
dec
lock
loope
adc
popf
lock
xchg
push
repz
inc
push
js
jle
test
jo
sub
stos
push
and
arpl
mov
cmp
test
mov
pop
or
lods
aam
adc
jb
sub
es
out
dec
add
xchg
xchg
and
aam
jae
xor
into
dec
icebp
pop
hlt
xor
push
lods
pop
mov
lahf
xchg
sub
fwait
movs
sbb
cmps
cmp
jnp
add
icebp
cmp
cmc
fcomip
or
sub
fstp
imul
sbb
xor
mov
les
or
je
xor
aam
jae
adc
jnp
shl
cli
movs
push
jmp
call
pop
ins
test
cmp
(bad)
aas
push
xor
mov
fcom
adc
repnz
mov
js
mov
adc
mov
push
fcmovu
shr
ins
ror
mov
ds
cs
mov
fist
or
adc
fld
in
ja
pop
inc
pusha
shl
es
sbb
xchg
and
jo
pop
mov
add
in
push
ins
sub
pop
scas
or
inc
lds
cdq
ins
rcr
retf
mov
or
pop
fistp
dec
out
shr
cmp
xchg
push
popa
test
cmp
adc
cmps
fsub
pop
out
xchg
int3
add
push
sbb
in
jge
mov
mov
sbb
jge
mov
inc
and
pusha
cli
jmp
(bad)
lods
scas
inc
inc
(bad)
mov
sub
repz
jg
jp
and
fmul
dec
sti
cmc
inc
or
add
cmps
shl
or
mov
sub
(bad)
icebp
sbb
sub
pop
neg
inc
inc
cdq
fsubr
cmp
add
mov
cmovle
mov
(bad)
jnp
mov
mov
sub
(bad)
pop
call
jb
imul
dec
mov
nop
xchg
test
test
cmp
add
push
loope
cld
mov
sub
cli
push
dec
mov
dec
jae
pop
jge
rol
add
cmp
sbb
in
ret
inc
out
out
pop
test
ficomp
xchg
mov
inc
sahf
push
popf
loop
cmps
test
cmc
push
pop
xchg
pop
cmp
shl
lahf
jmp
mov
push
pop
pop
mov
test
add
clc
ficomp
data16
xor
and
ret
imul
imul
dec
and
adc
adc
jns
mul
mov
sar
nop
fdivr
dec
(bad)
mov
mov
jae
sub
aam
das
(bad)
and
jbe
xchg
mov
fild
aas
add
stos
jne
xchg
cmp
cmp
je
jmp
mov
mov
test
in
popf
and
pop
loopne
dec
mov
mov
push
cmp
jmp
xchg
test
nop
push
leave
mov
mov
fcom
push
shr
xor
sub
inc
je
pushf
lods
dec
call
daa
xor
mov
ss
out
rcl
call
imul
sub
mov
ins
aam
inc
(bad)
jmp
jo
cmp
div
jbe
enter
ror
jns
popf
add
call
dec
bound
int
xchg
push
mov
inc
cmp
in
int
sub
mov
mov
pop
fld
jge
dec
mov
xlat
and
cdq
shr
fidiv
ds
inc
je
cmp
mov
dec
or
sbb
rol
(bad)
loop
and
mov
push
mov
(bad)
retf
ds
fnstcw
dec
adc
movs
mov
push
je
out
hlt
fisub
jge
in
add
enter
js
pop
xchg
fwait
cmps
mov
mov
pop
ss
data16
add
lods
cld
mov
pop
jno
dec
and
pop
cmp
sbb
xor
push
cld
jne
mov
test
retf
test
ins
xchg
in
not
inc
mov
add
loope
inc
ficomp
iret
mov
iret
ins
or
adc
add
repz
mov
lods
fisttp
aaa
jno
test
pusha
jp
fstp
mov
cmps
std
sbb
jp
or
je
mov
loop
mov
jmpw
and
pop
xor
mov
cmp
stos
adc
ins
sbb
js
cmp
pop
cmp
cmp
dec
inc
retf
xchg
out
xlat
(bad)
nop
nop
ins
arpl
mov
cdq
xor
or
iret
pop
ret
addr16
ins
jecxz
(bad)
jecxz
inc
push
sub
aas
std
pop
or
add
in
jnp
add
shl
push
mov
jne
sahf
js
out
xchg
inc
inc
data16
sub
and
ret
test
mov
mov
mov
rol
das
daa
add
sub
pop
sub
inc
jmp
sbb
pop
scas
cmps
cwde
pop
ret
imul
mov
int
mov
cld
mov
xchg
cmp
sub
repz
adc
dec
xor
out
push
add
sar
mov
xor
or
push
test
data16
jl
ins
jns
and
cmp
icebp
mov
xchg
inc
nop
stc
js
mov
sub
(bad)
cld
and
inc
inc
stos
xor
jecxz
push
xor
add
jns
pusha
adc
test
arpl
cmps
dec
cmp
xor
je
jb
fwait
dec
icebp
and
and
frstor
dec
int3
fdivr
ins
fdivr
cli
pushf
(bad)
cld
mov
mov
or
cmp
push
xor
into
retf
mov
sti
push
mov
mov
icebp
shl
jnp
vzeroupper
adc
mov
dec
dec
dec
cmp
sbb
sbb
movs
adc
push
and
rol
mov
sub
mov
mov
popa
shl
jbe
adc
sub
outs
jle
js
or
icebp
out
aam
adc
popa
adc
mov
loope
dec
lods
xor
dec
inc
fs
cmp
sbb
or
jg
mov
pop
push
arpl
das
data16
and
lds
movs
dec
or
mov
add
jmp
fld
add
mov
sub
std
sbb
sub
cli
std
cmp
aas
test
lods
jae
inc
jae
mov
test
mov
pop
test
mov
inc
pop
hlt
fdivr
cmp
inc
rcl
iret
mov
xchg
push
(bad)
jns
or
mov
js
and
pshufw
cmp
neg
or
pop
add
add
or
jge
dec
pop
les
mov
xor
ret
mov
hlt
out
scas
sbb
xlat
stc
and
adc
sub
xor
mov
rcr
inc
popf
inc
push
ret
mov
xchg
enter
sub
gs
mov
adc
push
stos
sub
shl
ins
fld
mov
inc
and
fwait
gs
add
and
in
fs
xor
mov
and
dec
(bad)
push
test
dec
das
mov
ins
push
aas
mov
sti
(bad)
xchg
or
push
jnp
xchg
inc
xor
and
mov
push
or
mov
push
and
adc
imul
mov
sub
mov
pop
dec
add
mov
lods
xor
and
test
repnz
push
mov
std
aaa
sahf
ja
sbb
dec
xor
or
outs
cmps
and
mov
aaa
pop
fmul
pop
leave
in
mov
mov
movs
sbb
(bad)
addr16
addr16
ja
ret
in
fs
fucomi
inc
jg
lahf
dec
sub
ficomp
and
outs
not
push
push
loopne
add
pop
push
repnz
daa
xchg
int3
mov
pushf
movs
or
test
call
js
in
in
pop
(bad)
js
pop
mov
add
call
aaa
xor
sbb
or
mov
lock
leave
or
push
mov
out
fisubr
fsubr
dec
and
sbb
xor
xor
bound
sub
out
enter
and
pop
sub
fs
and
fcmove
sub
jmp
test
inc
lods
shl
fild
inc
cmp
inc
int
add
aaa
ja
ret
sub
jne
adc
(bad)
fadd
or
mov
pop
jnp
mov
add
xchg
cmp
push
push
add
ss
pushf
ins
mov
call
pop
ins
xchg
sbb
dec
pop
int3
xor
or
pop
stos
dec
imul
sub
scas
and
inc
sub
mov
pop
xor
add
into
jnp
aaa
and
mov
icebp
fdivr
(bad)
jno
xchg
cmc
adc
cs
cli
mov
push
xchg
arpl
sbb
mov
bound
mov
dec
mov
mov
xchg
pop
adc
mov
mov
jbe
xchg
add
xchg
mov
and
lahf
frstor
repnz
cmp
(bad)
lock
fidiv
aad
mov
fsubr
jb
retf
cmp
mov
into
int
neg
add
mov
(bad)
das
leave
sbb
in
pop
xchg
mov
mov
fdiv
lea
sbb
pop
imul
je
push
dec
daa
mov
sub
shl
add
test
mov
and
aas
sub
sub
ins
icebp
mov
xor
sub
or
sub
cld
jo
jns
mov
popf
retf
push
sub
sub
(bad)
sub
retf
adc
sub
icebp
dec
or
add
sbb
test
and
in
xchg
mov
mov
popa
mov
push
lea
scas
loopne
loope
outs
push
(bad)
stos
in
dec
xchg
or
add
dec
push
sar
lds
mov
pop
fisttp
pop
xchg
push
xchg
fs
add
mov
sub
cmp
pusha
cs
or
jmp
loope
and
xor
push
and
xchg
lods
shl
repz
cli
movs
cmps
adc
mov
(bad)
fld
nop
mov
pop
cdq
mov
sbb
or
jno
cdq
stos
jmp
push
(bad)
bnd
jmp
gs
mov
push
test
cmp
mov
adc
pop
lods
icebp
xor
push
stc
mov
jmp
lea
pusha
push
jbe
pop
(bad)
call
jo
cli
ror
mul
jo
xchg
sbb
jbe
into
fcomp
lods
jmp
daa
out
into
aad
gs
adc
inc
xchg
int3
jbe
mov
arpl
mov
dec
cmps
fsubr
jne
(bad)
xchg
retf
movs
outs
xchg
retf
fiadd
mov
jne
loop
test
sub
push
inc
les
push
sub
add
lods
and
pop
out
or
inc
and
stc
cwde
test
add
mov
sub
or
push
dec
pop
call
pop
pop
cmp
xor
inc
add
jne
xchg
jge
out
or
rcr
and
cs
ret
and
test
mul
pop
gs
adc
scas
xor
and
loopne
jecxz
mov
and
pop
ret
inc
stos
fmul
mov
mov
pop
and
test
sbb
jae
loopne
pop
mov
test
(bad)
dec
outs
adc
jl
sbb
fsub
mov
sub
add
leave
mov
mov
sub
adc
push
cld
dec
(bad)
scas
cli
fbstp
add
cli
cmp
mov
pop
sysenter
xor
xchg
pop
push
ja
cmp
jae
xchg
push
or
mov
ret
gs
stos
fbstp
mov
inc
int
bound
stos
mov
in
add
lea
dec
sub
imul
inc
add
div
xchg
and
jl
pop
add
out
mov
mov
pop
adc
mov
cmp
and
addr16
xor
xor
fwait
inc
cmp
cmp
cli
imul
mov
lock
stc
popa
(bad)
call
int3
repnz
adc
(bad)
and
mov
call
into
call
mov
and
push
out
cmp
push
jl
repnz
popa
adc
es
xchg
sysenter
loope
xchg
jmp
in
pop
in
xchg
jb
mov
in
das
sbb
lods
or
aad
adc
adc
enter
jecxz
aas
and
clc
push
pop
mov
imul
es
loope
xor
fcmovne
fimul
inc
jmp
cli
adc
fcom
fnstcw
xchg
aam
jmp
inc
dec
xor
xchg
push
mov
push
pop
aaa
sbb
out
mov
add
bound
lahf
loopne
(bad)
dec
or
dec
fild
gs
cmp
mov
adc
outs
es
pop
pop
or
pop
pop
jge
jmp
push
xchg
push
sbb
or
fsub
dec
cmc
add
mov
in
loop
xchg
movs
cmp
fcomp
scas
jo
jb
xor
fsub
std
dec
xchg
push
mov
adc
jae
inc
sub
dec
cmp
jl
and
(bad)
jp
xor
mov
mov
mov
test
inc
sub
ins
pop
(bad)
in
or
inc
dec
out
fisub
cmp
(bad)
repnz
cmp
inc
sbb
or
sar
cdq
cli
loopne
sub
ret
sub
xchg
ja
push
mov
mov
mov
adc
sbb
popa
pop
repnz
leave
pop
leave
outs
movs
scas
mov
ror
faddp
ss
sbb
or
pop
push
aaa
pop
cdq
pop
cmp
jge
inc
or
jge
lods
and
(bad)
adc
bound
xlat
sbb
stos
mov
and
jbe
pop
jecxz
mov
jge
inc
sar
fistp
xchg
sar
stc
jmp
aas
jecxz
add
or
mov
add
rcl
in
mov
or
xchg
sbb
sti
mov
repnz
pop
xor
dec
push
test
test
mov
jb
pop
jp
add
dec
and
in
sar
(bad)
mov
pop
mov
lea
cmp
mov
fwait
or
cmp
popa
mov
ja
jle
xchg
xlat
call
imul
inc
pop
mov
mov
rdmsr
lock
mov
adc
xor
clc
outs
ins
movs
xchg
popa
(bad)
mov
cli
and
adc
bound
in
pop
add
cmp
fldenv
adc
fwait
and
int3
sti
dec
xchg
adc
mov
pop
sbb
arpl
or
add
pop
pop
push
and
retf
clc
cmp
xor
scas
jecxz
mov
sbb
xchg
or
(bad)
sub
dec
xor
test
mov
mov
sbb
push
in
xchg
fcmovbe
movs
inc
mov
and
dec
ja
mov
xor
cmp
jmp
jmp
xor
jo
ins
int3
rol
mov
push
movs
fucomip
dec
fwait
mov
sub
and
xor
inc
add
xchg
cwde
dec
scas
mov
push
add
jecxz
adc
mov
out
int3
(bad)
int
sbb
adc
js
xchg
iret
jnp
rol
or
sti
dec
lock
xchg
jb
adc
inc
pop
les
push
push
outs
push
xchg
mov
mov
mov
std
jns
push
adc
mov
loop
sbb
sbb
sub
inc
sub
call
push
cdq
imul
push
cmps
test
and
xchg
out
or
fisub
out
fwait
daa
push
mulps
jmp
mov
faddp
pop
fcomp
loopne
pushf
sbb
xchg
pop
sti
jle
or
jno
xchg
enter
jmp
mov
fild
outs
add
leave
add
fwait
shl
mov
push
in
leave
add
(bad)
aam
neg
jmp
popf
popa
pop
xchg
sub
dec
mov
js
mov
push
inc
pop
sbb
std
imul
in
adc
repz
sar
mov
sub
inc
mov
test
fld
push
cwde
mov
adc
fcomi
imul
dec
fisttp
frstor
and
dec
mov
or
ret
inc
retf
xchg
fcomp
mov
fs
mov
int
add
pop
push
cmp
lea
jbe
jae
add
repz
fwait
or
jge
dec
and
lods
pop
and
popf
mov
push
sbb
push
or
arpl
jg
ins
add
clc
xchg
imul
mov
ret
(bad)
mov
ficom
ins
sti
inc
pusha
imul
or
mov
jmp
jnp
aam
pop
pop
imul
es
and
shr
pushf
arpl
cmp
inc
adc
mov
and
jnp
cs
cmp
pop
ret
inc
xchg
std
dec
and
jle
ds
aas
retf
push
push
inc
sub
sub
lods
sbb
jno
mov
mov
cmp
sbb
retf
cmp
je
sbb
adc
bnd
and
xchg
sub
and
lods
xchg
mov
jmp
shl
stos
rcl
mov
mov
push
add
iret
shl
mov
lods
fstp
ins
aaa
ret
add
add
repnz
scas
out
movs
movs
and
lahf
into
pop
cli
xlat
jl
xchg
shl
sbb
jecxz
enter
sub
mov
imul
sub
lds
leave
and
cmp
pop
aam
cld
int3
cmp
xchg
cmp
sub
push
jo
int3
iret
jne
mov
int3
dec
(bad)
(bad)
sbb
xor
ror
cmp
imul
out
fnstenv
(bad)
cmp
add
xor
ror
adc
scas
sub
hlt
mov
out
lods
adc
pop
adc
add
xor
ror
jbe
mov
mov
out
cmp
es
sbb
ror
or
fsub
aad
(bad)
cld
sub
jns
sbb
movs
jmp
arpl
outs
xor
arpl
sbb
add
fstp
cmps
add
rcl
lds
lods
mov
lods
mov
sub
jns
cdq
adc
arpl
pop
add
adc
xor
or
pusha
jmp
call
bound
dec
pop
and
xchg
mov
xchg
inc
inc
sahf
push
xor
sbb
bound
mov
fdiv
sbb
push
aas
xchg
fadd
addr16
jo
jg
sub
mov
jae
jmp
test
or
int
adc
sub
cld
or
lods
stos
push
push
push
push
dec
push
loope
xor
loopne
iret
mov
cmp
or
daa
sbb
hlt
push
add
cmps
adc
call
mov
sbb
mov
push
add
call
fidivr
or
push
dec
push
mov
bound
mov
gs
dec
or
scas
mov
imul
inc
(bad)
lds
and
push
(bad)
lds
ins
ret
pop
icebp
mov
dec
add
gs
push
pop
jae
xor
mov
dec
mov
push
int
lahf
movs
inc
cmp
cmp
in
movs
add
cmps
(bad)
sub
clc
xor
movs
mov
inc
sqrtps
lea
popf
jge
dec
push
mov
adc
cmp
outs
ret
cmc
hlt
movs
fimul
test
repz
daa
adc
dec
test
lods
cmc
pusha
clc
jo
stc
imul
xor
int3
mov
int
ja
fadd
shl
mov
sbb
ins
sahf
fucomip
sbb
xor
mov
xor
outs
jg
fimul
bound
dec
(bad)
cmps
and
sub
mov
mov
(bad)
jl
cmp
push
ds
fsub
pop
mov
mov
pushf
push
push
mov
and
ficomp
scas
js
xlat
push
adc
xor
sub
push
(bad)
lods
push
aas
(bad)
jle
adc
jae
hlt
dec
stos
jns
jmp
aas
(bad)
push
(bad)
xchg
adc
sbb
jl
xchg
xchg
mov
int
enter
xor
push
sbb
gs
bound
xor
fs
mov
xchg
mov
mov
fistp
nop
and
aaa
add
or
cmp
fcom
test
xchg
sbb
add
(bad)
sbb
jae
leave
jg
mov
cmp
xor
jmp
jle
inc
std
jge
jle
repnz
nop
adc
sub
hlt
popa
lahf
sub
adc
int
int3
or
adc
mov
les
inc
push
mov
ss
movs
cmp
push
mov
cld
stos
stc
jo
push
loop
sub
sar
fst
mov
cmp
lea
std
in
mov
aas
adc
test
sbb
push
scas
fmul
mov
rep
fstp
loopne
xor
xor
or
dec
jmp
xacquire
js
mov
pushf
mov
test
clc
mov
xor
aaa
adc
imul
sub
xchg
mov
mov
pop
jecxz
mov
fwait
sbb
je
xchg
loope
mov
repnz
dec
out
in
cmp
cli
xchg
ret
dec
push
aam
cmp
mov
and
mov
inc
(bad)
xchg
mov
cdq
and
jmp
push
inc
mov
jb
cmp
xor
arpl
mov
lods
adc
or
retf
fdivp
cwde
cmp
(bad)
mov
sub
and
scas
neg
leave
sbb
adc
xchg
sahf
movs
sahf
out
adc
push
dec
dec
mov
into
out
mov
push
int
and
push
stos
mov
outs
or
mov
mul
and
inc
sub
aas
pop
nop
push
dec
mov
rcr
lds
sbb
cdq
sub
fild
mov
pop
neg
cld
das
push
add
pusha
mov
lock
ja
pop
sub
xor
pop
aaa
jmp
stos
dec
jmp
fnsave
xor
add
adc
mov
mov
mov
xchg
(bad)
sbb
push
test
mov
push
addr16
adc
sub
cmc
inc
sbb
pop
addr16
xor
push
add
mov
cwde
cmp
aad
adc
push
pop
xor
or
add
leave
mov
movs
repnz
pop
sbb
sub
movs
jae
mov
sbb
inc
test
outs
retf
es
or
pop
pop
je
shl
addr16
out
add
sub
push
hlt
jge
mov
or
pop
or
repnz
ins
or
ds
inc
fcmovnbe
sahf
mov
cdq
jge
mov
add
test
jecxz
jp
and
dec
pminsw
(bad)
imul
and
mov
mov
cmp
sbb
ret
jnp
inc
repnz
sub
adc
sub
jmp
inc
mov
and
leave
aaa
or
jns
imul
adc
cmp
jbe
fmul
sub
sub
neg
mov
xlat
lea
(bad)
sar
xchg
xchg
outs
jmp
popa
retf
(bad)
fistp
jecxz
push
int
sub
dec
jmp
mov
push
pusha
mov
dec
int
jns
and
xor
cmp
test
fst
ins
mov
pop
js
sbb
lahf
dec
test
mov
pop
mov
sub
xor
je
fwait
or
out
cmc
push
xor
adc
push
xchg
bswap
loope
rcl
pop
ja
ret
ja
test
stos
aas
mov
add
xor
idiv
rol
loopne
call
pop
jl
mov
mov
cmp
icebp
mov
dec
lock
push
jbe
cwde
aam
and
pop
call
pop
mov
outs
stc
or
fst
fadd
test
das
aad
icebp
test
sub
stos
mov
out
push
xor
iret
jnp
sahf
mov
adc
call
jg
push
push
movs
adc
cmc
fisubr
lds
and
or
cli
imul
ret
fsubr
jge
sub
cmp
lds
jne
hlt
jmp
push
fisub
adc
outs
jge
push
add
cdq
mov
sub
push
daa
pop
adc
out
(bad)
and
adc
dec
test
ret
ror
push
push
pop
pop
mov
mov
push
jno
enter
xchg
add
(bad)
std
adc
xchg
pop
adc
add
sbb
cwde
xor
(bad)
and
sub
dec
loop
inc
inc
sbb
sti
or
data16
sar
repnz
xlat
or
mov
gs
cmp
stos
or
dec
push
mov
xchg
cmp
dec
popf
mov
cmp
mov
adc
out
mov
or
mov
adc
fldenv
add
ja
xor
jbe
mov
and
test
pop
xchg
mov
jg
loopne
push
push
inc
pop
pop
xchg
or
pusha
push
or
jno
stos
(bad)
cmc
sub
dec
popf
mov
into
lods
stos
test
aad
mov
call
mov
push
sbb
loopne
mov
pop
mov
jmp
mov
push
stos
mov
dec
shl
xchg
ficomp
test
inc
hlt
retf
fidivr
sbb
xor
scas
fist
xchg
popa
fiadd
rol
cdq
setnp
stc
or
jnp
sbb
or
nop
gs
addr16
push
xor
or
sbb
mov
call
sbb
jp
dec
ins
mov
cmp
jnp
mov
enter
rol
pushf
inc
loop
add
dec
ror
pop
inc
cdq
pop
dec
(bad)
and
mov
mov
dec
push
sahf
mov
das
in
imul
lock
lea
call
jmp
ret
mov
es
sahf
lahf
fsqrt
repz
jl
mov
sbb
mov
pop
je
xchg
adc
fld
mov
push
popf
shl
(bad)
leave
imul
dec
loop
sub
inc
cli
jbe
lahf
push
call
movs
push
push
js
or
sbb
bound
xchg
sub
push
push
pusha
cmp
call
rol
in
xor
pop
leave
xchg
rcr
xchg
sub
pop
mov
lods
ja
(bad)
jnp
pusha
xchg
ror
and
push
inc
sahf
adc
cmp
mov
ins
mov
sbb
clc
sbb
sbb
repz
stc
jmp
push
inc
adc
jns
sbb
sahf
inc
shr
or
mov
lock
in
xchg
xor
mov
adc
cmp
mov
jae
dec
daa
mov
fild
stos
adc
aad
xor
and
mov
jmp
or
and
mov
push
arpl
aaa
push
sub
and
and
aas
in
hlt
mov
pop
sar
adc
jl
sar
cwde
out
cli
xor
jge
je
and
out
jbe
sub
push
fs
mul
inc
inc
sbb
fadd
sbb
xchg
dec
cmps
loope
or
cld
fwait
js
dec
ins
cdq
push
scas
(bad)
int
sbb
xchg
call
pop
add
sbb
xchg
(bad)
fstp
mov
stos
or
sbb
ror
test
(bad)
cmp
gs
les
sar
cli
out
xchg
ss
or
retf
jns
(bad)
dec
lock
and
sbb
repz
jp
push
adc
int3
aam
jne
pop
jmp
sbb
mov
mov
add
push
daa
mov
ficom
mov
push
out
sti
sbb
sub
mov
mov
add
sub
mov
mov
xor
sbb
daa
les
sub
unpcklps
jbe
or
inc
cmps
xchg
sbb
pop
mov
cmp
adc
pushf
loope
stc
xor
add
cmps
(bad)
fld
out
add
pop
sub
ds
pop
ja
(bad)
pusha
cmp
pop
test
shl
and
sbb
in
mov
mov
xor
mov
dec
arpl
pop
jnp
fs
add
xchg
cwde
mov
leave
aas
inc
out
xor
enter
xor
jmp
mov
pop
test
sbb
pop
push
imul
cmp
mov
jne
repz
mov
or
and
pusha
icebp
sti
lods
or
mov
dec
xchg
adc
mov
mov
jge
lods
push
and
and
(bad)
shr
(bad)
arpl
mov
pop
fadd
aaa
cmp
aam
cmp
xor
jno
inc
add
cmp
mov
sub
scas
mov
scas
inc
mov
xchg
(bad)
loopne
sbb
and
addr16
cmc
pop
stos
ins
fdiv
adc
mov
fisttp
mov
mov
test
sub
jg
movs
jp
push
cmps
stc
fdivr
jle
fild
mov
sub
xchg
les
rsm
fstp
sbb
outs
and
mov
pop
cmp
mov
mov
inc
leave
out
js
mov
xlat
outs
sub
mov
adc
pop
inc
out
rdpmc
arpl
sub
jb
and
cmps
ror
xchg
pop
xor
jo
and
and
push
scas
xchg
cwde
jle
adc
jne
shr
sbb
mov
loop
imul
xor
pusha
mov
dec
ret
scas
arpl
sbb
cmp
pop
movs
(bad)
mov
shl
dec
cmps
push
jge
ds
xor
inc
das
int
adc
push
jbe
addr16
xor
stc
mov
in
mov
adc
xchg
jl
push
jnp
pop
add
jb
mov
fsubr
mov
inc
pop
or
(bad)
inc
shl
movs
lahf
xor
adc
pop
and
enter
mov
scas
mov
cmps
pop
mov
pop
aam
cs
cs
and
sbb
sub
out
sbb
jno
test
js
int3
mov
push
dec
std
dec
sbb
jae
adc
(bad)
fiadd
dec
mov
jo
push
aas
or
shl
jg
int
test
in
mov
pop
adc
rol
and
test
pop
mov
jg
outs
clc
jns
fist
fdivr
rcpps
cmp
ret
cmovge
jecxz
enter
mov
ss
movs
sub
imul
cmc
xchg
pushf
into
or
dec
sbb
jns
cs
aam
mov
cmp
xchg
lods
ret
mov
stos
retf
add
jp
xchg
and
cmp
and
inc
push
jecxz
std
stos
ss
mov
xchg
and
or
rcr
ins
or
dec
mov
mov
jae
mov
rcl
sbb
cmp
inc
fs
add
neg
mov
adc
mov
cmp
enter
xchg
pop
inc
push
loopne
cs
cmps
push
fst
rcl
into
cmp
stos
mov
pop
mov
(bad)
es
shl
adc
lods
into
jge
leave
jns
cmp
or
xlat
dec
cld
xchg
xor
fisubr
(bad)
arpl
push
enter
inc
adc
xchg
ds
dec
ins
dec
mov
jle
jo
cmp
inc
cwde
jns
imul
repz
aas
sbb
cmp
pop
out
cmps
dec
adc
adc
mov
xchg
rcr
cmc
imul
inc
mov
icebp
jle
shl
cmp
popf
lods
xchg
fidiv
add
imul
test
adc
aaa
(bad)
mov
jg
movs
mov
test
in
int3
sbb
rcr
(bad)
mov
(bad)
lock
cmp
sbb
cmp
mov
and
and
ins
pop
xchg
push
add
rcl
push
mov
xchg
jge
push
mov
jle
ja
push
jmp
scas
xchg
sub
popa
ja
xchg
cwde
mov
push
cmp
mov
je
rcl
mov
es
lods
fcmovbe
cmp
out
dec
fist
xor
add
adc
inc
jne
cld
cmp
fild
dec
xlat
cmp
fild
mov
stos
ins
hlt
aad
mov
(bad)
in
loope
xor
das
fucomip
test
jg
cwde
jns
fucomip
call
or
mov
test
mov
jne
shl
sbb
cmp
(bad)
outs
cdq
out
int3
scas
loope
sbb
cmp
gs
je
std
xchg
mov
dec
sbb
mov
nop
jb
mov
adc
push
jmp
mov
(bad)
data16
and
and
xor
pop
sub
xor
lock
pop
dec
lods
mov
and
je
std
mov
das
add
outs
out
and
dec
pop
cmps
jmp
and
jns
push
sub
scas
cmp
dec
ret
jl
or
or
mov
mov
mov
cmp
cmp
sub
xchg
ret
iret
ret
js
mov
test
jge
jp
stc
mov
(bad)
dec
or
dec
cmp
imul
lahf
mov
and
pop
adc
or
scas
xor
mov
sub
push
rol
or
push
or
push
lea
push
adc
fdivr
mov
push
cmp
xlat
add
fidivr
lods
repnz
scas
fbld
in
mov
hlt
mov
fiadd
xlat
jp
scas
cld
shl
mov
outs
ins
dec
inc
dec
or
mov
imul
mov
(bad)
js
repnz
(bad)
std
mov
out
sbb
imul
or
jmp
sub
in
aam
mov
in
xchg
lea
cmp
mov
mov
fst
cmp
dec
movs
inc
inc
push
lea
int
iret
pop
cmp
xor
arpl
mov
pop
test
test
xor
aad
jbe
adc
cmp
sbb
adc
outs
jecxz
push
mov
cmc
shl
mov
mov
cdq
mov
mov
inc
stos
inc
adc
jecxz
loop
ror
dec
inc
mov
inc
jmp
and
mov
rol
jge
cmc
xor
jmp
cmps
std
repnz
dec
push
aaa
dec
add
inc
ja
dec
sahf
xor
popf
and
(bad)
jns
mov
movs
dec
pop
push
cmp
popa
sbb
adc
ror
in
fnstsw
inc
shl
cs
jnp
outs
mov
or
jle
cs
addr16
jle
test
test
rcl
sub
ror
jmp
push
dec
jmp
test
int
(bad)
sti
aas
or
cs
fcmovne
(bad)
test
or
les
mov
or
fdiv
push
retf
retf
pop
fadd
xor
cmps
sub
mov
jmp
sbb
and
movs
mov
xor
ror
mov
pop
inc
imul
dec
cld
fcom
or
(bad)
aam
and
xchg
cmps
xchg
add
mov
enter
mov
xchg
arpl
cli
inc
jge
push
jb
test
push
xor
pop
mov
repz
out
adc
or
cmc
or
jo
add
and
fisubr
jg
or
movs
popf
addr16
ret
dec
add
bound
mov
pop
pop
enter
jo
sbb
sbb
cmps
imul
cmp
sbb
add
daa
aaa
hlt
outs
jnp
(bad)
mov
mov
push
add
div
dec
ds
mov
jns
ficom
gs
xchg
xchg
lahf
push
jno
xchg
(bad)
rcr
or
fwait
jns
es
xchg
adc
fldpi
ins
jbe
fwait
scas
xchg
pop
push
lods
and
and
mov
lea
movs
and
xchg
outs
xchg
add
mov
aam
popa
mov
dec
adc
xchg
ret
popf
inc
mov
or
pop
(bad)
adc
in
or
mov
xchg
jae
sbb
test
add
xchg
adc
js
ins
ins
sub
out
retf
pop
dec
pusha
sub
sahf
mov
pop
(bad)
popa
aam
scas
fsub
or
cmp
mov
xchg
dec
sub
stc
mov
movs
lods
jecxz
icebp
loope
in
(bad)
in
in
iret
cmp
add
add
sbb
inc
inc
rcr
popf
fdivr
cmp
push
jbe
sahf
pushf
aas
push
mov
mov
add
xor
jle
mov
jne
or
pop
lds
push
pop
mov
vmovntps
pop
xor
bound
cmc
mov
out
dec
inc
jno
push
hlt
fisubr
dec
jp
imul
xchg
push
pop
pop
pusha
mov
out
adc
mov
cmp
data16
mov
xor
fisub
xchg
xlat
or
push
repnz
lea
test
int
es
in
fild
je
jle
leave
stos
icebp
xchg
adc
mov
dec
cmp
sbb
push
and
lds
cmp
test
lods
and
and
lea
push
and
je
(bad)
mov
adc
push
sbb
sbb
iret
jo
jp
cmp
jns
xlat
mov
sbb
mov
cmp
lahf
mov
jmp
add
xor
das
arpl
movs
mov
es
js
mov
push
pop
mov
add
pop
test
xor
sbb
sbb
test
xor
jne
daa
out
lds
adc
mov
div
ins
sti
mov
rol
test
test
mov
sub
mov
pusha
rcr
sub
lods
dec
or
sub
call
in
fst
push
inc
imul
rol
out
or
sahf
call
push
mov
ds
xchg
sub
and
retf
test
std
inc
cld
sub
(bad)
jecxz
idiv
mov
xchg
dec
pop
or
xchg
jge
lea
mov
test
shl
dec
ds
adc
mov
imul
cmp
out
pop
(bad)
mov
mov
sub
mov
loopne
mov
dec
ins
xor
adc
adc
mov
sbb
fcom
jbe
and
cmp
inc
and
adc
push
ret
sbb
shl
xor
dec
push
and
movs
repnz
scas
and
neg
fbld
enter
mov
push
push
stos
or
fstp
out
adc
xchg
rol
lods
popa
das
sub
test
leave
inc
sbb
stc
xchg
mov
cmp
or
int3
shl
add
xlat
ss
in
adc
hlt
(bad)
fbld
fmul
test
dec
xchg
adc
sub
jbe
pop
inc
cmp
pop
fldenv
cmp
inc
and
(bad)
int3
push
cmc
shr
retf
sbb
cmp
mov
bt
and
pushf
sbb
pushf
adc
sar
es
dec
jle
fadd
stos
cmc
sbb
dec
iret
adc
jne
fcmovbe
fsubr
cli
push
jl
or
xchg
gs
fsub
das
leave
gs
pop
loopne
icebp
or
retf
push
push
loope
mov
jmp
stc
clc
(bad)
mov
stc
pop
dec
xchg
mov
cmp
sbb
mov
or
(bad)
xor
scas
xchg
dec
jmp
and
ins
cmp
popf
inc
in
xchg
inc
in
into
icebp
cmp
out
pop
mov
mov
push
rcl
jbe
es
popf
adc
xor
(bad)
cdq
xchg
xchg
mov
aaa
xor
mov
inc
dec
xchg
mov
xor
jge
outs
int
pop
arpl
dec
and
or
popa
mov
pop
popa
ins
dec
mov
add
popf
popa
xlat
pop
movs
xor
cmp
(bad)
mov
xor
jmp
sub
rsm
lock
xchg
rcl
int
cwde
cmp
xlat
imul
add
mov
ror
(bad)
out
in
sub
data16
mov
and
jle
xor
inc
aas
cli
inc
push
cmp
cmc
push
push
mov
sbb
push
shl
xchg
lahf
in
pop
dec
lods
mov
es
jecxz
enter
scas
test
jmp
sub
xchg
shl
std
inc
repnz
adc
adc
jno
jb
sub
mov
inc
cmps
mov
clc
popa
fwait
out
mov
xchg
push
mov
adc
enter
fimul
or
push
adc
mov
sub
outs
mov
jge
repnz
sub
pop
shl
xor
popf
and
dec
sar
ss
std
push
out
cmp
mov
cmps
std
int
loopne
push
out
jmp
pop
ins
inc
jne
push
aas
out
add
pop
and
aaa
push
mov
pop
imul
cmp
dec
jg
into
inc
jne
add
lahf
mov
into
push
or
stos
sbb
sub
push
adc
sub
test
ja
jne
xor
pushf
mov
cmp
out
cmp
push
xchg
(bad)
mov
and
ret
test
xor
lea
sbb
mov
and
and
inc
clc
aam
jmp
ficomp
mov
(bad)
out
fdivr
mov
push
cs
loop
mov
xor
push
fldenv
mov
bound
das
jnp
jno
out
(bad)
mov
test
popa
push
icebp
fidiv
cmp
nop
mov
dec
xor
add
jo
inc
mov
cmps
cld
jl
or
(bad)
bnd
jnp
lods
test
xor
sbb
pop
add
test
ror
push
xchg
ret
push
inc
aam
cli
movs
popa
je
(bad)
mov
dec
mov
sub
or
(bad)
mov
in
addr16
enter
sbb
(bad)
mov
inc
push
ret
int3
mov
xor
repz
jmp
adc
mov
add
push
jg
adc
mov
sub
nop
imul
popf
sub
pop
push
sar
movs
aad
jl
or
xchg
cmp
imul
pushf
pop
and
pminsw
sub
popf
sbb
in
nop
jge
or
dec
fdivr
jp
sbb
jne
lods
cmp
lods
popa
push
jo
mov
cmps
imul
sbb
enter
inc
push
adc
sti
nop
movs
std
cli
int
jg
or
mul
dec
lock
(bad)
lea
daa
clc
add
cld
pop
dec
push
cli
stos
rcl
pop
mov
adc
scas
scas
xchg
ja
sahf
loopne
jno
jle
add
mov
cmps
mov
stos
std
enter
(bad)
jne
add
mov
inc
enter
jmp
mov
jno
adc
or
pop
ret
int
aad
jecxz
iret
jge
out
sbb
lea
mov
pop
push
cmp
adc
arpl
add
push
loop
call
xchg
test
(bad)
sbb
xor
xchg
nop/reserved
iret
xor
xchg
xchg
int3
sub
and
das
enter
shr
sbb
cwde
xchg
ds
and
stc
adc
add
cmp
stos
nop
mov
sbb
cmps
idiv
mov
es
cld
xchg
fstp
push
push
push
and
push
gs
cmp
push
loopne
int
sub
(bad)
fwait
push
int3
jae
out
mov
cmp
nop
mov
or
jne
das
ss
sbb
sbb
add
xchg
mov
fwait
enter
test
ror
jp
jp
inc
movs
pop
add
jl
inc
ret
imul
inc
pop
test
mov
jecxz
xchg
jmp
(bad)
push
pop
imul
ror
retf
(bad)
and
or
push
mov
cmp
lods
push
imul
loop
jo
enter
sub
push
ret
push
xlat
xchg
mov
cmps
add
pop
push
addr16
dec
xor
mov
test
pop
add
ret
in
adc
sub
mov
dec
test
adc
sbb
test
lock
pop
sbb
popa
xor
std
pop
shl
jno
std
retf
fwait
mov
xchg
out
aad
dec
and
sub
and
mov
pop
lds
pushf
sub
mov
popa
mov
or
pop
jg
in
jo
cmp
fcom
pop
cld
add
aam
pop
call
push
inc
aad
xchg
stos
leave
push
ret
call
scas
fistp
sbb
ss
test
dec
dec
inc
push
hlt
jle
and
mov
adc
dec
gs
inc
jecxz
xchg
cmp
cmc
test
jecxz
mov
(bad)
adc
mov
xchg
mov
pushf
stos
js
ficom
or
xor
(bad)
adc
sar
adc
jp
rcl
cmp
mov
mov
nop
mov
leave
sbb
inc
or
rcr
xchg
adc
(bad)
xor
mov
dec
out
fadd
jge
mov
lahf
jbe
aas
into
pop
cmp
jmp
test
shl
lods
add
xor
push
xchg
push
cld
fimul
loope
test
or
ret
pusha
daa
push
cmp
lock
push
cs
addr16
mov
adc
jg
jl
mov
jne
inc
in
xchg
jo
add
push
in
dec
jge
movs
ss
sub
fincstp
fmul
push
int3
in
xchg
sub
mov
cli
(bad)
xor
jne
pop
dec
mov
cmp
and
cmp
push
lods
lds
rol
add
imul
push
xchg
mov
rcl
pushf
or
adc
aad
jnp
mov
aam
sar
test
inc
(bad)
lock
xlat
(bad)
push
(bad)
mov
imul
aam
outs
inc
(bad)
push
push
movs
jecxz
inc
loope
jns
lahf
sbb
xchg
add
sahf
enter
clc
push
gs
sub
push
faddp
mov
push
or
jp
jmp
aam
dec
xchg
call
jmp
clc
mov
mov
ds
mov
out
cmp
rol
es
aas
push
aad
mov
xchg
daa
scas
sbb
sub
rcl
mov
call
ss
and
cmc
leave
cmp
test
rcl
cmps
mov
out
fbld
dec
fwait
(bad)
xor
add
inc
movs
pop
or
push
inc
inc
mov
jnp
cwde
push
xor
arpl
dec
rcr
jge
call
push
mov
mov
push
sar
sbb
sub
xchg
es
outs
adc
xchg
cwde
pop
add
mov
pop
(bad)
xchg
mov
retf
xchg
cmp
fisttp
sti
pop
and
pop
push
jle
pop
cmp
ret
in
push
dec
xor
clc
ret
imul
or
rcr
cmp
fisttp
mov
ds
(bad)
or
aaa
fsubr
test
mov
or
xchg
arpl
add
xor
xchg
repnz
ja
cli
inc
and
pushf
or
icebp
cld
xchg
cmp
pop
xor
cmps
(bad)
push
stos
imul
mov
push
adc
cmp
loop
lock
cmp
jle
into
dec
sub
add
cmp
push
hlt
out
je
cmp
nop
and
cmp
push
jg
rsm
dec
mov
fisttp
mov
(bad)
sub
stc
int3
in
adc
stos
xor
pop
inc
sbb
sbb
xchg
mov
fcom
dec
inc
pop
mov
jecxz
dec
sbb
jb
xor
push
dec
adc
mov
cmp
test
pusha
adc
out
mov
jmp
aaa
call
xchg
sbb
inc
jge
rcr
xchg
test
add
jne
xor
adc
and
sar
pop
jle
jns
fldcw
int3
addr16
jne
out
jg
loope
cmp
xor
xchg
fwait
or
lea
mov
mov
xchg
pusha
loopne
inc
(bad)
xchg
iret
pop
jae
daa
and
ret
sub
dec
xchg
mov
mov
xchg
pcmpeqb
adc
sti
mov
xchg
daa
dec
ret
inc
push
fld
inc
leave
mov
shl
xchg
jle
fucom
cmp
fs
xchg
cmp
lahf
loope
ins
push
sub
out
mov
ins
ret
or
ficom
(bad)
(bad)
cmp
jae
mov
std
shr
fs
cwde
sub
fwait
lahf
or
(bad)
inc
add
(bad)
mov
xor
call
loopne
jecxz
stos
jae
test
leave
xor
mov
push
xlat
sub
push
retf
fimul
xchg
ror
xor
sub
ret
or
mov
cmps
test
icebp
mov
call
push
icebp
inc
cmps
sar
ss
xor
or
jp
enter
sub
xchg
adc
cmp
add
repz
jo
loope
add
aam
pop
popf
xlat
xor
(bad)
out
aad
inc
xchg
xchg
cmp
lods
add
imul
movs
int
hlt
dec
push
aas
dec
cmps
mov
sbb
inc
int
cs
pop
pop
sbb
push
ror
aam
loop
push
and
jle
popf
lea
fiadd
std
call
aas
out
push
sub
out
test
sub
mov
cmp
mov
shl
stos
inc
gs
mov
popa
into
frstpm(287
jecxz
js
(bad)
and
push
mov
jp
inc
xlat
mov
sbb
rol
push
daa
jle
test
cmp
leave
mov
movaps
sbb
sub
ror
movs
(bad)
mov
jmp
push
aaa
add
jo
and
ret
pop
inc
hlt
pop
call
out
ret
test
shl
push
scas
jnp
adc
cmps
or
dec
jl
mov
lahf
inc
mov
loope
mov
add
leave
fdivrp
inc
sahf
jl
out
fnstsw
mov
imul
adc
in
push
jl
jne
mov
xchg
push
pop
scas
shr
std
jb
test
(bad)
cmp
dec
xor
dec
cmp
xlat
inc
loope
jo
imul
mov
(bad)
in
cmp
inc
mov
push
cmps
bound
rol
jecxz
sbb
popa
jnp
scas
xor
lahf
cld
adc
sub
cmc
adc
jae
fistp
mov
pop
popa
mov
data16
fprem1
jae
add
ror
adc
leave
aaa
push
add
mov
(bad)
out
or
push
xchg
mov
les
inc
bound
dec
inc
(bad)
and
adc
sbb
push
or
jmp
jnp
xchg
fcmovu
pop
mov
leave
push
pop
in
add
and
cmc
out
inc
mov
push
sbb
xchg
fcomp
mov
jg
sub
dec
sbb
repnz
pusha
fcomp
addr16
mov
ror
jb
pop
lahf
add
pop
add
lods
popa
xchg
xor
pop
and
push
xlat
je
sub
inc
out
xor
fisubr
lods
mov
inc
test
cmp
sbb
jecxz
adc
inc
retf
xchg
push
or
movs
cmc
ins
leave
xchg
pushf
stc
cmp
push
jns
hlt
and
jnp
ret
mov
hlt
cdq
aas
push
cmp
push
mov
sbb
add
ss
jp
(bad)
jb
retf
pop
sbb
idiv
adc
enter
mov
neg
fisubr
mov
dec
push
or
out
test
das
lea
mov
inc
cmp
jno
test
std
fdivp
retf
sbb
mov
inc
inc
(bad)
adc
out
in
outs
(bad)
pop
adc
test
push
es
add
in
popa
inc
lods
inc
fdivr
jnp
adc
mov
cmp
fadd
inc
or
push
push
inc
jmp
(bad)
stos
xor
das
mov
mov
test
mov
enter
rcl
out
fadd
icebp
adc
sti
mov
(bad)
hlt
cmps
jl
fdiv
mov
dec
popa
mov
or
test
sbb
or
enter
lahf
jmp
push
ds
aaa
jne
fwait
xchg
aas
inc
mov
movs
sub
push
or
add
imul
push
daa
ret
cmp
cmp
popf
mov
cmps
push
mov
lods
sub
xor
(bad)
mov
das
xor
out
in
xor
pop
xchg
repz
call
(bad)
shl
mov
in
ja
adc
das
(bad)
stos
sub
and
fwait
cmps
sub
adc
add
fist
inc
adc
jns
dec
push
mov
adc
inc
xchg
retf
jecxz
ror
stc
ror
aam
popa
dec
call
jmp
or
mov
mov
fidivr
cmp
out
imul
ds
sub
mov
cs
cmp
ror
int
pop
xor
xor
push
mov
call
shl
lock
stos
xor
adc
stos
xor
bnd
ja
lods
pop
pop
mul
call
mov
push
sbb
bnd
(bad)
cli
lods
punpckldq
cli
cld
xchg
lods
inc
mov
leave
arpl
push
fwait
pop
sub
(bad)
stc
jne
fwait
add
test
cmp
imul
xchg
sub
dec
repnz
repnz
cmp
lods
sar
sar
inc
jg
(bad)
pop
hlt
mov
push
dec
xor
push
add
push
sub
into
lds
or
or
pop
loop
jmp
adc
dec
aam
rcl
jne
mov
pop
push
add
out
or
mov
mov
out
dec
adc
out
gs
dec
lods
sbb
xchg
shl
mov
test
inc
push
inc
cmp
fwait
test
or
or
pop
lds
out
fwait
jge
shr
loop
push
pop
ficom
or
xchg
inc
jmp
dec
out
add
aaa
stc
sbb
cmp
mov
ds
mov
sub
inc
imul
or
cmp
jge
mov
adc
adc
ucomiss
xchg
xlat
mov
test
mov
cmp
and
cmps
ins
mov
jne
stos
push
unpcklps
je
loope
or
dec
call
jne
add
or
repnz
push
push
and
popf
mov
sbb
dec
rcr
je
xor
iret
daa
jecxz
(bad)
lahf
(bad)
outs
pop
or
jnp
jb
dec
sub
(bad)
fstp
aad
bnd
lahf
add
sub
dec
cmp
mov
pop
cmps
and
ins
mov
inc
mov
ds
stos
mov
iret
pushf
retf
and
mov
xchg
inc
or
xchg
cmps
ror
es
popf
jnp
(bad)
push
imul
adc
push
xchg
sar
sub
push
mov
aad
push
pop
(bad)
loop
loope
cdq
pop
xor
mov
xchg
adc
ret
mov
test
fadd
icebp
sub
in
ror
mulps
outs
sbb
mov
and
dec
fidivr
or
or
inc
sbb
mov
sub
loope
dec
inc
push
addr16
cmp
pop
ds
mov
xor
sahf
mov
lods
fld
mov
idiv
loop
fwait
pushf
push
xchg
add
dec
loope
pop
out
push
cmc
pop
mov
jecxz
es
sub
mov
push
xlat
sahf
jmp
idiv
cli
scas
in
mov
push
outs
pop
dec
fnstenv
out
mov
pop
mov
test
add
xor
(bad)
daa
cmp
(bad)
clc
xchg
repz
mov
stos
(bad)
popa
aam
into
es
push
jo
lods
bound
push
test
pop
push
jbe
int
das
cwde
cmp
pop
or
lock
retf
dec
inc
add
hlt
and
jle
cwde
mul
jmp
mov
movs
pop
test
psubsw
(bad)
(bad)
pushf
mov
icebp
and
in
lods
xchg
jmp
das
cwde
aad
sbb
xor
shl
push
pop
push
bound
inc
push
jg
das
dec
das
pusha
and
mov
dec
fnstcw
mov
sbb
(bad)
outs
in
add
dec
int3
and
jp
ins
sub
cmps
sbb
adc
cmc
ret
mov
les
push
retf
fist
mov
xchg
xchg
(bad)
retf
cmp
and
cmp
call
push
add
or
clc
(bad)
daa
mov
inc
mov
add
mov
daa
gs
xor
fcomp
adc
and
inc
scas
cld
push
push
stc
test
mov
and
ror
loop
adc
push
pop
je
inc
inc
movs
cmp
pop
sub
mov
(bad)
ins
xchg
push
mov
mov
push
jae
push
hlt
or
rcr
push
and
mov
dec
(bad)
shr
or
bound
pop
mov
jbe
push
sti
mov
out
clc
pop
int3
adc
mov
push
push
add
pop
adc
jne
and
add
(bad)
(bad)
fcom
or
inc
shl
dec
into
into
outs
cld
sbb
push
cmp
and
adc
add
out
rcr
les
out
imul
retf
mov
in
jg
ret
mov
mov
in
sbb
movs
es
push
js
or
fsubr
xor
or
out
inc
xchg
imul
inc
mov
mov
aas
jb
xor
inc
jnp
hlt
push
xchg
fdivr
xchg
ss
js
stos
jp
sti
push
rol
xor
imul
xor
adc
mov
clc
cmp
mov
imul
adc
mov
lds
push
jecxz
adc
xchg
out
jle
ins
arpl
or
data16
test
mov
adc
imul
push
scas
mov
in
clc
adc
adc
(bad)
mov
sub
adc
xchg
lock
xor
movs
xor
sub
je
jg
retf
mov
out
sub
mov
imul
jae
cmp
retf
jp
sbb
(bad)
sub
dec
fimul
add
jns
outs
faddp
pop
push
out
shr
outs
push
add
mov
outs
xor
push
in
lea
std
stos
bound
ror
xor
pusha
push
push
push
pusha
mov
aaa
mov
push
dec
cdq
xchg
mov
mov
adc
and
push
cmp
jbe
out
jmp
push
retf
(bad)
mov
push
pop
xchg
loope
jg
jg
jb
fimul
pushf
mov
cld
inc
or
sub
out
retf
mov
std
ins
retf
cs
adc
out
sub
ror
xor
cmps
les
js
mov
std
stos
sub
pop
lock
les
xor
cmc
or
xchg
xor
div
xor
sub
pop
mov
mov
or
jle
sbb
add
jnp
popa
(bad)
or
inc
or
mov
mov
sbb
data16
mov
xlat
ret
or
dec
in
mov
jo
js
jle
(bad)
test
call
aaa
xchg
or
and
sahf
mov
movs
or
fsub
ret
jbe
ret
mov
push
retf
icebp
mov
fs
into
jl
xor
sbb
and
inc
shr
stos
(bad)
cmp
jmp
lods
fstp
ja
scas
int
mov
jle
xchg
cmps
into
add
mov
inc
jge
pop
out
test
je
retf
daa
(bad)
mov
xchg
or
aaa
sti
or
mov
mov
stos
pop
pop
mov
xchg
into
cld
mov
outs
add
leave
add
call
cmp
aam
push
pop
leave
adc
jmp
outs
pop
clc
cmp
int
xchg
out
inc
enter
push
cmp
mov
or
in
cmp
jmp
mov
ror
in
fld
or
aaa
add
int
test
push
imul
lock
mov
test
add
out
imul
imul
jge
out
(bad)
cmc
pop
push
(bad)
cmp
stc
push
jne
imul
mov
mov
mov
loopne
sub
pop
test
loop
fstp
test
jnp
push
jecxz
mov
lds
test
jg
sub
push
mov
iret
sbb
icebp
xlat
adc
adc
add
gs
std
cs
jnp
ror
repnz
mov
jo
aad
and
rcl
sub
(bad)
pop
or
lock
aad
cmp
jg
xchg
jnp
inc
sbb
mov
add
mov
test
ret
xor
pusha
inc
or
stc
jae
sbb
pop
hlt
jecxz
and
jo
add
ficom
cmc
jl
push
ss
fnstcw
repz
xchg
mov
jmp
in
sub
js
int3
scas
push
dec
adc
mov
out
dec
dec
outs
nop
lock
cmps
fcomp
mov
(bad)
xchg
dec
sub
in
cld
movs
loop
push
out
fisubr
mov
ja
mov
push
sub
std
cmp
dec
jo
(bad)
call
jb
mov
in
ja
mov
ret
cmp
adc
jne
adc
push
icebp
push
rol
or
pop
scas
xchg
imul
xchg
jecxz
enter
lock
jmp
inc
mov
pusha
jmp
and
jae
cmp
push
mov
js
inc
fidiv
div
loopne
icebp
xor
or
mov
jbe
out
dec
cs
push
push
push
cmp
sbb
adc
cmp
jno
adc
(bad)
ins
ins
(bad)
pop
shl
pop
fcom
cmps
in
jmp
push
push
pop
ret
adc
outs
movs
xchg
call
mov
dec
jp
push
cmp
xor
(bad)
jno
xchg
jp
mov
pop
movs
dec
out
push
lock
push
cmp
push
mov
push
loopne
ret
jo
imul
retf
mul
xchg
movs
sub
xchg
je
lods
pusha
push
xchg
outs
jnp
rcr
out
mov
fiadd
push
js
or
leave
int3
pop
aam
dec
aas
movs
fisttp
mov
jl
dec
inc
shr
cmps
push
sti
les
cdq
in
add
ficomp
mov
loopne
fmul
mov
xor
adc
cli
cmp
mov
adc
inc
cmps
out
sbb
ficom
push
cmps
scas
xchg
popa
pop
sub
stos
out
mov
xchg
push
fucomp
mov
gs
sahf
and
das
lock
pushf
or
xchg
cmps
jne
pushf
cli
inc
ja
xchg
call
push
xchg
ret
jmp
aam
xor
outs
icebp
xchg
ins
int3
int3
push
icebp
dec
and
inc
push
xchg
cmc
adc
cmps
std
push
mov
push
sub
sub
cmp
aad
retf
dec
das
(bad)
aad
jg
fcom
jne
push
inc
gs
mov
add
or
jg
inc
and
xor
std
cmp
stos
push
xchg
xor
call
add
mov
mov
sub
adc
scas
xor
(bad)
pop
pop
add
push
push
and
mov
repnz
int
jmp
std
call
mov
outs
pushf
jmp
sub
inc
adc
jp
(bad)
xor
mov
(bad)
popa
adc
daa
cdq
mov
mov
fs
xchg
addr16
popa
test
test
pop
and
xchg
imul
call
jmp
leave
pop
mov
xor
lods
mov
and
fnsave
lea
cmp
lock
lock
sub
sar
jns
jne
mov
mov
mov
xor
xor
sar
pop
stos
ja
dec
xor
cwde
sar
pop
adc
xor
xlat
rol
pop
lock
dec
loop
cmp
jge
(bad)
or
ret
cmc
inc
stc
pop
test
pop
mov
mov
sub
or
shr
stos
xchg
or
fbstp
add
mov
adc
sbb
ss
jp
mov
(bad)
aaa
mov
mov
nop
inc
and
dec
and
fisubr
jns
dec
int3
adc
jl
sbb
pusha
xchg
cs
ror
daa
je
xor
popf
add
into
xor
fcom
cli
outs
iret
sub
cld
inc
jnp
inc
adc
inc
xchg
adc
clc
xchg
mov
arpl
stos
jno
out
fbld
add
dec
test
rol
outs
repnz
lea
fmul
dec
cmp
lea
es
inc
repz
in
data16
arpl
retf
mov
or
mov
mov
lods
and
xor
mov
push
int
jg
(bad)
into
or
call
les
push
add
add
addr16
test
mov
adc
stos
mov
scas
jp
cmp
xlat
jae
mov
jecxz
mov
inc
inc
pop
ja
(bad)
in
jne
pop
in
call
jmp
or
pusha
xor
(bad)
mov
cmc
sub
xor
push
call
mov
sbb
lahf
mov
push
push
loop
aad
lods
xor
xlat
jns
sbb
outs
mov
call
dec
inc
mov
daa
or
xchg
lds
and
push
jmp
mov
jne
outs
jne
and
or
pushf
repnz
mov
sub
int
(bad)
jno
mov
rep
mov
repz
xchg
fwait
inc
shl
or
dec
jbe
in
or
or
jge
and
push
jmp
lea
(bad)
jge
and
es
cs
sbb
add
stos
mov
dec
xchg
jno
ins
jae
xor
cmp
in
adc
out
pop
inc
shl
out
or
out
clc
sbb
push
sub
test
pop
inc
cmps
sbb
xor
xchg
dec
ja
stos
das
hlt
js
int3
int3
scas
xchg
push
and
add
or
jge
shl
test
cdq
sbb
mov
out
hlt
push
push
mov
push
imul
idiv
pusha
ja
jnp
aad
loop
enter
ins
dec
pop
mov
push
cmps
daa
std
jb
mov
popf
mov
adc
xchg
movs
mov
call
test
mov
(bad)
loopne
mov
and
mov
sbb
fisubr
push
shl
fwait
xor
xor
jmp
push
adc
bound
cmp
loop
jg
and
cmp
into
push
int
mov
or
int3
loopne
test
bound
arpl
std
dec
aas
xor
ret
cmp
push
ror
aaa
jge
(bad)
adc
push
xchg
pop
sahf
in
repnz
hlt
ret
inc
sahf
sub
jne
ror
jnp
xchg
inc
dec
ja
lods
adc
repnz
sti
lds
je
add
imul
mov
cmp
repz
push
rcr
sbb
sbb
cmc
int3
add
lds
enter
xor
dec
push
add
cmovp
or
mov
(bad)
data16
mov
mov
es
imul
pop
and
cmps
push
rcr
xor
mov
arpl
pop
fs
ret
and
sbb
(bad)
ins
mov
push
scas
xchg
sub
lahf
mov
jmp
iret
mov
out
bnd
nop
mov
dec
xchg
or
ins
in
out
fst
call
xor
jns
sbb
inc
sahf
sti
jl
fbstp
sar
ins
sbb
xchg
and
imul
jo
gs
call
ficom
adc
cmp
add
and
icebp
mov
outs
mov
(bad)
push
xor
lods
cmc
test
mov
mov
sbb
in
popf
icebp
mov
push
es
test
in
jmp
cmps
add
or
cmp
cdq
movs
fdivp
not
inc
outs
(bad)
popa
adc
lods
or
adc
pusha
mov
mov
push
fsubr
popa
aad
cmc
imul
pop
jmp
xchg
or
sub
xchg
add
mov
adc
fisubr
push
cmp
ffreep
nop
pinsrw
arpl
xlat
jo
add
sahf
cmp
in
jb
push
adc
push
test
dec
int3
hlt
je
stc
iret
fistp
sub
inc
inc
out
or
aam
enter
inc
loope
retf
out
pop
sub
pusha
pop
jecxz
outs
fsubp
js
pop
xchg
pushf
mov
out
xor
outs
dec
or
push
es
fidivr
cmp
xchg
jbe
std
sbb
out
mov
into
imul
dec
outs
xlat
sbb
outs
in
mov
add
jnp
dec
sub
or
(bad)
icebp
dec
aaa
pop
in
lds
xchg
cmps
les
jl
sub
push
data16
repnz
add
lods
and
sbb
push
pop
sub
aad
inc
xchg
leave
in
cmp
les
(bad)
pop
test
dec
mov
jmp
push
popf
lahf
pop
lods
lods
rcl
pusha
test
sub
push
xor
push
xchg
pop
jmp
mov
xchg
mov
adc
xchg
mov
jb
add
aam
loope
sar
mov
mov
jne
and
mov
in
pop
adc
imul
cmp
jecxz
and
jg
not
movd
xchg
ss
fisub
dec
xlat
(bad)
in
lods
pop
xor
aad
test
sub
cmp
loop
(bad)
cld
jmp
add
mov
(bad)
mov
inc
test
and
test
out
add
pop
pusha
jnp
or
jno
and
mov
sar
and
cmp
pop
repz
dec
mov
jnp
mov
mov
mov
sub
test
and
mov
mov
push
sub
xor
cmp
ficomp
aas
jl
xor
jb
rcr
sub
aad
add
pushf
pop
rcl
call
dec
dec
xchg
js
aad
mov
stc
outs
dec
dec
arpl
cwde
jmp
push
cwde
and
push
leave
int3
clc
adc
push
dec
adc
pop
loope
dec
jmp
movs
repnz
movs
ret
cmps
imul
xor
xor
add
sti
mov
or
loop
cdq
xchg
push
inc
xor
gs
ins
jl
sbb
mov
pop
adc
les
fcom
cwde
addr16
xor
pop
mov
add
test
ins
adc
adc
xchg
pusha
xchg
xor
cmc
cmp
outs
in
fwait
and
(bad)
ds
sahf
inc
jne
pop
nop
enter
in
xor
xor
adc
jns
leave
cmp
adc
(bad)
jae
fimul
mov
popf
dec
mov
xchg
cld
mov
iret
mov
stos
add
shl
jb
call
mov
xchg
fs
pop
test
sub
inc
mov
push
inc
xor
add
in
hlt
dec
mov
mov
dec
adc
outs
stos
push
mov
bound
and
in
adc
adc
int3
pop
retf
xchg
inc
fs
fisubr
ja
jmp
mov
mov
dec
sti
push
pop
xor
sbb
push
inc
pop
sub
xor
xor
(bad)
pop
adc
or
fwait
jae
xchg
imul
stc
repnz
test
mov
fcom
jge
cmp
add
or
dec
dec
jmp
inc
add
push
enter
sub
imul
xor
mov
mov
mov
scas
xchg
push
cmps
sub
xchg
mov
arpl
mov
outs
not
jno
mov
and
mov
wbinvd
jnp
sub
stos
scas
mov
lods
imul
jne
sub
pop
cmps
fsub
push
and
push
jmp
mov
push
add
fisubr
add
sub
rol
jae
(bad)
popf
mul
rcr
sahf
and
aas
nop
pop
cmp
inc
loope
add
jmp
inc
arpl
xor
sahf
repnz
pop
outs
pop
xchg
lahf
cmp
(bad)
int
nop
and
mov
ds
push
mov
hlt
pushf
xor
scas
pushf
jmp
adc
or
inc
inc
and
rcl
sub
ror
ret
xor
shl
cwde
push
test
and
outs
stos
mov
dec
std
std
pop
loope
sbb
fsub
ss
adc
add
loopne
stos
or
add
in
pop
fadd
xchg
fimul
or
inc
pushf
push
jbe
add
lahf
ret
pop
xchg
push
lea
inc
jnp
mov
repz
data16
inc
mov
xor
jo
sub
inc
jae
inc
fsub
sahf
inc
(bad)
xlat
in
adc
dec
jge
mov
stos
mov
ins
pusha
xchg
xchg
cmps
hlt
cmp
lea
xor
outs
cmps
inc
popa
mov
dec
aaa
shr
test
in
loopne
stos
or
arpl
fmul
and
imul
bound
test
pop
sub
lea
push
inc
ret
cli
mov
mov
nop
scas
jbe
ret
sti
test
mov
in
xlat
inc
fdivp
fs
nop
inc
inc
dec
(bad)
dec
jno
test
jnp
gs
fadd
shl
int
adc
ja
popf
js
stos
mov
jge
dec
sub
mov
jge
fldcw
int3
fist
mov
adc
jle
cmp
outs
push
cdq
test
rcr
repnz
mov
fdivr
sti
mov
xchg
hlt
xor
jmp
jns
sar
mov
xlat
or
bound
push
cli
ins
mov
rcl
cli
cmp
shl
scas
and
mov
inc
ins
or
xor
sub
mov
stc
out
test
jns
jno
stos
mov
mov
mov
or
ja
test
cmps
in
and
adc
in
sbb
aad
out
popa
(bad)
test
movs
xchg
add
sbb
out
lahf
cmp
cmp
or
test
dec
sbb
dec
inc
mov
pop
sbb
adc
xor
ins
push
daa
nop
sub
jo
cmp
stos
pop
mov
cdq
popa
cli
cmp
scas
adc
out
lods
fisubr
scas
and
pop
xchg
xchg
bound
or
aad
out
pop
lea
xor
sub
sbb
cmp
jo
adc
mov
stos
aad
iret
push
mov
out
int3
nop
cmp
pop
add
jbe
dec
jge
mov
ins
and
and
mov
or
inc
mov
xor
or
jb
lds
(bad)
fdiv
pop
ret
mov
icebp
mov
sbb
(bad)
or
leave
dec
sub
fnstsw
shl
add
fmulp
mov
repnz
pop
push
jl
xor
mov
sbb
(bad)
(bad)
stc
enter
imul
xchg
xchg
cdq
add
add
push
pop
(bad)
cmp
scas
imul
xchg
sbb
cmc
push
sar
mov
rcl
or
dec
mov
test
pop
(bad)
mov
sbb
mov
cmp
inc
add
loopne
push
pop
or
xlat
shl
inc
pop
neg
inc
lar
adc
fucom
jmp
or
pop
push
pshufw
rcl
(bad)
movs
out
test
cmp
cmp
test
jns
mov
adc
stos
mov
lahf
cmp
pop
leave
xor
adc
xchg
xor
sbb
repz
dec
movs
xor
ds
and
cmp
lods
xchg
inc
pusha
(bad)
call
cld
mov
add
(bad)
mov
dec
inc
cwde
or
hlt
in
out
lods
mov
or
je
call
bound
push
adc
push
ins
mov
aas
or
shl
and
movs
das
mov
lods
push
and
cmp
xor
rol
adc
jne
rol
outs
clc
jecxz
rol
icebp
not
ret
inc
pop
xchg
inc
test
mul
jp
jnp
jecxz
add
add
arpl
bound
sub
push
adc
adc
sub
lock
mov
icebp
inc
ins
or
mov
jle
push
dec
outs
or
fild
sbb
pusha
dec
imul
jno
adc
callw
push
or
mov
pop
test
mov
pop
stc
mov
ror
clc
fwait
mov
movs
ffreep
dec
outs
retf
repnz
ficomp
fisubr
jmp
mov
push
sbb
inc
jbe
inc
inc
mov
pop
cmps
(bad)
not
or
dec
retf
or
mov
loope
int
lahf
dec
adc
or
mov
fist
loope
pop
pop
push
dec
cmp
dec
js
xchg
lods
stos
pusha
out
stc
movs
popf
lock
jecxz
adc
mov
push
imul
sbb
mov
mov
cs
xchg
mov
pushf
dec
in
cmp
mov
and
es
cdq
xor
dec
(bad)
mov
shl
mov
mov
mov
or
sti
xor
xor
dec
fwait
pop
inc
nop
push
je
sbb
jmp
ror
and
shr
addr16
rol
mov
or
mov
lahf
xor
xchg
xchg
jmp
mov
ss
cmp
imul
lock
mov
sbb
mov
jo
xor
(bad)
jle
test
or
jo
adc
(bad)
leave
aad
stc
or
out
push
inc
mov
lea
pop
push
add
mov
xor
cmp
fcom
ins
pop
sub
xchg
pop
repnz
cmp
mov
ins
adc
lock
and
pop
rcpps
cmps
mov
aas
push
xchg
jecxz
sub
cdq
pop
xor
xlat
test
cmp
test
call
cmp
test
push
pop
or
pop
jp
pop
sbb
pop
inc
dec
mov
or
jae
jmp
push
retf
mov
scas
(bad)
jmp
and
cwde
cmps
xchg
cmp
mov
pop
mov
jnp
hlt
in
xor
xchg
aam
sbb
or
cwde
push
mov
fadd
iret
out
sbb
scas
add
or
into
jns
pop
inc
cmc
ds
jge
or
sbb
xor
cmp
jns
xor
out
stos
(bad)
mov
in
sbb
add
cmp
arpl
test
xchg
fstp
push
xor
sub
scas
lds
mov
call
pop
sub
imul
daa
aam
cdq
pop
repz
mov
icebp
sub
iret
sbb
out
ss
fadd
xchg
ins
icebp
fs
stc
data16
sub
rcr
inc
dec
neg
js
(bad)
aad
(bad)
xor
push
sahf
inc
mov
dec
int
out
(bad)
and
cmps
and
(bad)
cmc
sbb
lods
test
arpl
inc
push
cmp
(bad)
fcmovne
sbb
mov
ins
movs
pop
mov
add
aaa
je
loope
xchg
movs
jb
push
jbe
scas
mov
mov
cmc
jmp
cmp
and
stos
mov
or
mov
retf
fstp
movs
inc
ja
and
(bad)
mov
jge
lahf
push
repnz
repz
enter
and
dec
cli
pop
dec
imul
lea
sub
pushf
pop
xchg
mov
sbb
inc
btc
push
(bad)
push
xlat
push
lahf
or
loope
sti
mov
outs
dec
pop
addr16
lahf
mov
sbb
mov
lea
cmp
xchg
mov
retf
mov
adc
add
shl
ret
fcom
push
add
cdq
lahf
mov
xchg
loop
jae
imul
into
bound
sbb
das
out
into
shl
jle
and
or
mov
cs
adc
pop
push
adc
sbb
or
aad
hlt
loop
(bad)
imul
sbb
ss
scas
sbb
fdivrp
dec
push
fsubr
aad
inc
int
rcl
mov
jl
lock
jb
imul
bound
cmc
push
xchg
pop
loope
out
sub
in
pop
lock
pop
outs
dec
or
out
pusha
movs
mov
fmul
fmul
mov
mov
sahf
and
stc
aaa
mov
sahf
std
push
icebp
outs
mov
xlat
loop
push
adc
add
sbb
mov
aam
sub
add
pop
mov
xor
push
mov
lods
mov
push
xor
jmp
pop
gs
lods
scas
jmp
fs
add
sbb
aam
fst
and
mov
pop
ja
sahf
mov
xor
mov
mov
test
cs
pop
jle
sbb
loope
cwde
push
sbb
mov
dec
fsubr
stos
scas
fisubr
lahf
adc
adc
shl
push
cli
ins
pop
sub
xlat
dec
aam
retf
stos
mov
cmp
inc
mov
leave
js
lea
ret
dec
push
gs
mov
call
retf
jp
xchg
loop
sub
dec
pusha
stos
mov
and
lock
jno
mov
pop
jmp
fdiv
icebp
shl
and
(bad)
ror
outs
jmp
xor
in
repnz
mov
jg
sbb
movs
test
pop
mov
(bad)
(bad)
std
mov
mov
rcr
movs
retf
hlt
inc
ins
test
mov
nop
push
or
je
xchg
js
or
lock
jl
jl
jge
xor
push
mov
inc
and
and
xor
sub
or
add
mov
add
in
inc
or
(bad)
pop
and
push
jp
invd
mov
lea
mov
xor
jmp
(bad)
fucom
inc
cld
loope
jp
inc
xchg
nop
hlt
in
push
xchg
scas
cmp
int3
push
dec
pop
pushf
sar
push
pop
lods
push
inc
mov
repz
jns
enter
or
dec
cmc
mov
jo
and
jge
push
inc
or
clc
call
mov
es
fwait
xchg
mov
inc
adc
loop
adc
xor
pop
jecxz
jbe
retf
sub
dec
dec
sbb
sti
in
xchg
add
retf
fwait
int3
aaa
ds
retf
mov
push
or
mov
dec
aas
mov
mov
movs
std
xchg
jno
sbb
cmp
std
sahf
push
test
lock
(bad)
mov
enter
imul
lods
jbe
jmp
ins
push
and
outs
dec
test
sar
sbb
out
stos
adc
mov
xchg
(bad)
cli
(bad)
xor
mov
sbb
pop
inc
sbb
mov
sub
sbb
and
mov
mov
js
or
jp
pop
das
add
push
pushf
int3
(bad)
test
mov
jne
enter
bound
test
data16
cdq
pop
adc
xchg
rcl
jmp
or
sub
inc
sahf
and
scas
cmps
in
out
(bad)
cmp
xlat
aam
pop
mov
aaa
adc
inc
cmp
jae
mov
pop
fdivrp
sub
repz
out
mov
bts
mov
add
adc
xchg
dec
lea
sub
add
es
(bad)
adc
inc
cli
dec
out
jp
sar
rol
ds
mov
mov
ds
test
retf
frstor
pmaxsw
or
cmp
cdq
dec
jecxz
inc
mov
hlt
std
pop
inc
cld
mov
loope
mov
dec
push
pop
adc
xor
jo
movs
jns
clc
bound
into
mov
fnstsw
fisub
shl
cld
pop
xchg
cmp
adc
movs
jnp
cmp
or
cmp
leave
mov
xchg
aas
or
mov
mov
mov
inc
adc
fnstenv
aas
dec
add
push
push
sbb
ins
adc
dec
inc
mov
movs
imul
pop
test
sbb
sub
retf
jp
sub
inc
xchg
adc
pop
cmc
push
hlt
mov
mov
dec
(bad)
test
sub
jp
add
lock
ins
cmp
popf
imul
xor
loopne
add
xor
pop
pop
sbb
pusha
xor
(bad)
and
fwait
stc
shr
es
cwde
sbb
inc
(bad)
or
in
xchg
std
dec
xor
stos
inc
pop
mov
cld
lock
cmc
push
(bad)
push
fwait
pop
dec
xchg
lds
pushf
dec
push
loope
mov
inc
inc
out
sbb
loope
lea
sub
or
es
movs
jae
or
jle
sub
in
add
hlt
lds
push
arpl
push
xchg
jge
jmp
dec
int
jno
call
out
ror
push
push
xchg
imul
inc
jle
or
inc
int3
shr
push
test
push
adc
push
out
jecxz
cmp
sbb
sbb
adc
nop
fistp
jmp
lods
and
aas
xor
shr
gs
or
scas
pushf
js
ins
inc
push
test
scas
out
jmp
jle
data16
and
fld
cmps
dec
aad
xor
nop
dec
cmp
int3
mov
cwde
dec
and
loopne
ficomp
lods
ret
add
scas
mov
outs
cli
mov
out
dec
lahf
pop
adc
sar
adc
push
out
mov
pop
ds
ficom
js
popf
repz
push
pop
or
push
repz
cmc
mov
mov
inc
jmp
or
into
inc
mov
xchg
imul
push
sbb
mov
xchg
popa
jl
sub
ret
repz
cdq
cdq
add
imul
xor
jmp
mov
adc
ror
pop
call
arpl
test
mov
movd
inc
lods
cmps
loope
sub
retf
fild
mov
jge
rcr
and
fwait
aas
loop
xchg
scas
push
clc
add
sti
pusha
arpl
aas
xchg
test
fdiv
or
daa
mov
push
sbb
ror
(bad)
imul
sbb
or
mov
test
and
int3
push
shr
jmp
(bad)
xor
mov
pushf
lods
sbb
inc
adc
jmp
in
cmp
lahf
sahf
mov
mov
adc
shl
mov
adc
mov
lods
pop
bound
or
sub
jo
popf
call
mov
mov
out
ror
test
sbb
adc
retf
test
cmps
inc
pop
nop
xchg
push
test
inc
add
bound
pushaw
into
mov
shl
adc
dec
clc
in
sti
inc
jae
xchg
jns
xor
enter
adc
es
lahf
xchg
and
push
call
cld
pop
adc
adc
ins
jp
mov
mov
arpl
gs
cli
cmp
jecxz
xlat
push
ret
pushf
fmul
push
and
(bad)
jle
push
xor
shr
loope
cmp
(bad)
mov
test
cmp
(bad)
dec
push
add
(bad)
xchg
fwait
dec
js
push
scas
push
into
nop
(bad)
fcomp
stc
lahf
data16
and
es
cld
xchg
cmps
sahf
lahf
vpaddusb
fs
ret
sahf
sbb
mov
cmp
mov
je
sbb
fadd
or
adc
aas
mov
aam
mov
inc
push
mov
loope
jnp
push
gs
les
bound
dec
fnstsw
and
in
test
test
jmp
mov
jle
and
test
enter
push
sub
pop
sbb
fwait
int
push
outs
inc
push
inc
cdq
or
pop
xor
sbb
mov
jl
mov
repnz
icebp
sbb
inc
sub
lods
loop
pop
sbb
xchg
js
retf
fidivr
(bad)
iret
sahf
cmps
mov
mov
clc
or
jmp
aad
pop
daa
sbb
mov
xchg
enter
aam
test
arpl
and
mov
shl
rcl
dec
push
nop
add
cmps
adc
pop
das
shr
sbb
stc
xlat
mov
pop
dec
fisttp
ds
mov
lea
xor
pshufw
sub
in
loop
(bad)
fstp
and
mov
sti
arpl
adc
add
pop
adc
dec
lock
or
push
mov
mov
mov
add
inc
psubw
pushf
shl
push
cmp
jns
jb
jmp
pusha
test
and
cli
cmp
jae
dec
mul
ins
dec
jno
or
and
or
mov
les
repz
dec
mov
and
loope
cmp
fldenv
adc
dec
mov
mov
outs
jmp
into
fsubr
loope
(bad)
push
xchg
xchg
mov
mov
sbb
jbe
adc
nop
fwait
mov
jae
xor
jmp
cmp
mov
mov
call
sbb
sar
pushf
in
add
mov
sahf
cmp
inc
cli
(bad)
inc
das
clc
add
pushf
pop
sahf
popa
aam
test
clc
repnz
adc
xchg
sar
rcl
cmp
xor
push
repz
adc
popf
(bad)
out
mov
jmp
pop
dec
loop
sub
cmps
mov
mov
mov
pop
xchg
int
pop
das
(bad)
call
pop
mov
cmp
pop
xor
les
push
addr16
pop
sahf
sbb
mov
ds
mov
dec
int3
mov
cmp
lock
(bad)
std
into
outs
mov
rcr
repnz
scas
(bad)
push
mov
and
jecxz
push
sbb
and
mov
test
scas
inc
xlat
sbb
test
sbb
mov
cmp
cwde
jl
push
sub
shl
inc
ss
xor
cs
loope
add
rcr
mov
cli
les
jnp
scas
mov
jecxz
dec
inc
mov
clc
xor
(bad)
inc
cli
adc
loopne
sub
(bad)
sahf
retf
ins
das
dec
out
cmp
jns
jle
mov
sub
dec
ret
imul
sbb
(bad)
ficom
shl
fild
xlat
cmps
xor
mov
out
dec
or
lahf
lods
aad
outs
rcr
popf
(bad)
cmp
aaa
std
fs
in
(bad)
arpl
inc
outs
aaa
icebp
sar
call
mov
fsub
dec
lock
mov
popa
sbb
out
dec
call
add
mov
je
inc
sbb
ficom
add
sti
cmp
fs
outs
mov
mov
stos
mov
xchg
fld
or
pop
arpl
aad
ret
xor
add
test
push
jnp
mov
sub
pop
or
cmp
mov
push
and
out
test
pop
lahf
sbb
repz
sbb
inc
jno
(bad)
xchg
push
icebp
xlat
fld
out
fiadd
xchg
js
cli
pop
dec
xor
(bad)
push
push
pop
cmps
sbb
mov
jp
push
out
imul
inc
and
add
pop
fdivr
or
mov
sbb
mov
mov
add
pushf
mov
aas
movs
loopne
test
mov
cs
adc
inc
pop
lods
xor
ja
movs
sub
div
into
mov
sub
addr16
push
inc
dec
pop
lea
pusha
or
adc
pop
xchg
jnp
mov
and
adc
mov
hlt
push
xchg
mov
cli
push
cli
pop
imul
inc
sbb
clc
mov
pushf
test
xchg
xor
cwde
adc
mov
xchg
cmp
mov
or
xor
imul
test
popf
xchg
call
sbb
idiv
js
inc
iret
dec
mov
bound
sbb
push
hlt
or
out
push
xchg
cmc
push
les
mov
or
sub
iret
mov
sub
in
pop
scas
jno
mov
imul
mov
jle
int
retf
fwait
push
(bad)
pop
mul
add
push
outs
dec
das
or
call
pop
sub
test
inc
das
test
hlt
and
arpl
fsincos
mov
adc
das
outs
push
popf
sbb
mov
inc
push
sub
ds
ret
xor
imul
mov
(bad)
fdiv
and
retf
out
and
sbb
and
push
imul
xor
sti
lods
sbb
scas
ret
sbb
dec
(bad)
repz
xor
repnz
lods
call
stos
test
call
xchg
mov
push
pop
lds
ret
jmp
mov
out
gs
cs
push
js
call
dec
sar
sahf
and
mov
aam
out
scas
adc
jl
cmp
fidiv
and
arpl
adc
daa
adc
outs
stc
inc
inc
leave
gs
not
shr
mov
pop
je
scas
cld
in
in
out
xchg
fistp
pop
iret
jecxz
mov
adc
jl
cmp
cdq
fwait
out
sti
adc
ret
daa
sbb
in
mov
(bad)
lahf
pop
fst
in
inc
mov
mov
sub
jmp
sub
mov
xchg
cmp
push
sbb
inc
jo
repnz
inc
fimul
inc
push
fwait
inc
dec
icebp
ficom
dec
adc
xlat
test
xchg
int
div
(bad)
mov
dec
nop
cmps
xor
cs
loop
hlt
jb
push
in
sbb
xchg
xchg
fst
arpl
movs
(bad)
(bad)
cmp
sar
jl
jb
cmps
outs
mov
cmp
inc
pop
sub
nop
ror
inc
test
shl
xchg
jns
inc
cmps
ret
push
inc
push
or
or
push
imul
out
inc
addr16
inc
cmc
aam
pushf
fsub
mov
ret
push
push
fdivp
popa
dec
xor
sbb
outs
push
mov
in
mov
dec
mov
ret
jnp
jp
adc
inc
test
loope
pop
popf
iret
push
jmp
jbe
dec
movs
and
ins
es
xchg
(bad)
pop
jne
sbb
adc
pop
into
lahf
pop
mov
sbb
sub
push
fwait
call
out
xchg
cmp
dec
sbb
cmps
enter
shl
xor
in
les
push
xchg
stc
add
cli
popa
sbb
lock
adc
enter
jl
sub
or
std
sub
outs
inc
data16
addr16
imul
xchg
dec
sbb
popa
bound
cmp
ins
add
aad
adc
(bad)
and
pop
jp
cli
popa
or
stos
jne
lea
cs
mov
or
iret
nop
xchg
dec
jmp
and
scas
xor
mov
mov
xor
enter
jmp
push
dec
mov
sub
or
scas
test
jmp
jp
sbb
pop
inc
mov
dec
xor
shl
fcomp
xlat
push
jns
push
and
arpl
sub
mov
cmc
cmps
inc
ss
jle
loopne
into
out
jmp
call
mov
mov
(bad)
and
lahf
test
call
xchg
cmp
imul
and
sub
mov
cs
sub
dec
pop
sub
stos
inc
xchg
scas
mov
into
push
std
dec
lods
jne
pop
arpl
mov
add
shr
pop
gs
mov
mov
ds
cwde
mov
repz
stc
je
inc
add
in
fwait
mov
pop
retf
jmp
jne
shr
cmc
add
scas
jl
add
bound
jmp
or
test
cli
jbe
jno
adc
ss
popa
test
daa
aaa
pop
xlat
nop
cmp
aad
imul
pop
mov
int
xor
inc
pop
mov
rol
add
jle
pop
imul
add
cmps
cmp
adc
inc
sbb
retf
ds
adc
jle
das
mov
add
cmp
mov
pop
cdq
pop
fxch
add
or
cs
fsubr
adc
pop
xlat
mov
pop
and
out
sbb
cwde
cmc
mov
lahf
or
xor
movs
dec
jge
dec
push
mov
inc
pop
enter
mov
cmps
stc
repz
stc
imul
mov
aaa
inc
(bad)
jbe
xor
mov
cmps
jno
stc
xor
(bad)
div
mov
in
xchg
xor
push
jge
adc
data16
jmp
loopne
xchg
lahf
aad
xor
dec
fisttp
xlat
mov
mov
popf
sbb
sbb
push
into
call
xchg
test
arpl
outs
(bad)
cmp
sub
cmp
push
cmp
rcr
adc
sub
pop
mov
dec
adc
xchg
push
and
push
xor
pop
sbb
cli
push
sbb
into
das
sahf
stos
pusha
cwde
or
(bad)
jmp
std
push
test
jmp
into
outs
cmc
jne
inc
cmp
retf
ror
pop
in
or
clc
mov
stos
stc
shl
sub
movs
into
aad
cli
mov
jmp
in
(bad)
(bad)
jl
das
jge
in
cmp
inc
out
jae
shl
test
push
sbb
mov
inc
adc
outs
pop
pop
push
movs
test
mov
push
jle
xchg
out
call
sub
out
cmc
sbb
jae
add
aam
jg
mov
mov
mov
dec
mov
push
pop
push
cmp
retf
dec
mov
push
jns
stos
retf
mov
mov
mov
retf
sbb
test
add
pop
movs
mov
or
(bad)
(bad)
adc
mov
outs
sahf
add
daa
push
cmps
gs
(bad)
mov
pop
in
ret
mov
xor
jle
out
mov
pop
jmp
outs
sub
mov
data16
fnstsw
lods
inc
cli
mov
pop
mov
js
push
clc
fisub
arpl
xchg
loopne
popf
xchg
popa
push
xchg
pop
scas
fst
sub
jne
les
outs
loop
mov
call
ss
cmp
dec
cs
inc
(bad)
ds
xchg
cmp
fst
cmp
ins
pop
dec
dec
push
gs
in
not
int3
repz
in
lahf
and
enter
mov
into
and
sti
out
mov
mov
retf
icebp
dec
sbb
mov
icebp
scas
pop
or
popf
iret
pop
stos
xchg
out
sti
or
pop
and
test
ret
add
outs
movs
mov
mov
xor
xchg
dec
jmp
inc
adc
inc
aam
cmp
fdiv
add
mov
push
(bad)
das
or
cld
push
adc
pop
sahf
push
add
cmp
fwait
mov
int3
or
jecxz
or
mov
loopne
cld
hlt
fimul
push
retf
mov
aad
push
jns
out
outs
mov
aaa
pop
aam
out
leave
jb
rcl
and
cli
jp
jle
js
sbb
ret
fistp
into
shl
dec
popf
mov
jle
dec
loope
jns
int
jge
jne
in
jne
(bad)
mov
jge
and
gs
add
add
pop
loope
push
lock
xchg
add
rol
movs
adc
jl
sub
clc
xchg
cli
cmp
mov
fwait
imul
sub
mov
into
imul
cs
adc
dec
push
cmps
mov
pop
pop
ret
fwait
in
mov
repnz
add
inc
pop
(bad)
loop
or
xchg
lea
mov
xchg
shl
repnz
mul
and
push
clc
push
repz
adc
inc
shl
mov
cmp
add
ins
arpl
dec
jmp
in
jb
mov
sbb
xor
movs
jno
push
and
fidivr
mov
in
int
sub
shl
test
nop
xor
jae
ins
pop
cld
inc
mov
fdivr
sbb
cmp
adc
xlat
fiadd
dec
repnz
mov
xchg
mov
ss
in
nop
ret
mov
repz
jmp
jge
mov
(bad)
test
jge
pop
add
lea
xchg
(bad)
packssdw
sahf
and
cs
ds
ja
outs
jg
stc
jmp
jns
lds
lods
and
enter
or
inc
and
idiv
jb
aad
xor
jb
and
sar
xlat
data16
xchg
add
and
adc
test
xchg
les
outs
inc
xchg
jmp
into
pop
ret
mov
or
xchg
leave
iret
mov
int3
inc
mov
xchg
xor
adc
lea
out
shl
sahf
add
loope
nop
mov
push
mov
test
sbb
stc
sub
clc
xor
(bad)
push
sti
fisub
xchg
push
mov
pop
mov
jmp
outs
xchg
mov
out
enter
aad
aas
mov
pusha
or
xor
or
adc
addr16
daa
fs
xchg
pusha
outs
adc
inc
adc
mov
push
dec
pop
push
aaa
rol
and
push
addr16
jmp
mov
popa
inc
or
add
xor
(bad)
adc
scas
fadd
and
icebp
rol
pushf
mov
fwait
mov
js
adc
cmp
push
in
movs
es
test
mov
shl
popa
adc
push
push
xchg
inc
pop
inc
ins
adc
movs
out
int3
daa
sti
jnp
pop
inc
ss
cwde
sub
push
out
outs
inc
fisttp
popa
stos
jb
lds
inc
mov
push
add
shr
ins
ins
iret
leave
pop
mov
mov
mul
xor
sbb
pop
f2xm1
cmc
loope
pop
pop
hlt
sahf
out
inc
and
lds
adc
xchg
xchg
lds
(bad)
push
mov
sbb
pushf
xor
fisubr
pop
cs
idiv
lahf
sub
fld
xchg
xor
pop
jecxz
push
push
and
aas
retf
jns
xor
mov
leave
les
mov
frstpm(287
fdivr
xchg
pop
dec
int
sub
out
ret
mov
mov
shr
retf
jno
cmp
dec
ror
cmp
mov
retf
dec
fbld
mov
lds
push
loop
or
push
push
repz
xchg
push
xor
mov
mov
into
push
in
(bad)
aas
sti
shr
xlat
mov
lods
lds
dec
dec
adc
adc
and
jl
gs
popa
push
clc
adc
frstor
or
dec
pushf
stos
mov
nop
mov
adc
sub
push
mov
mov
mov
ret
add
lods
inc
pop
sti
ret
(bad)
enter
aad
or
iret
into
out
fst
sahf
xor
adc
ins
mov
sub
mov
mov
or
adc
stos
xor
stos
add
xchg
add
call
mov
inc
sbb
push
leave
inc
push
xchg
popa
xchg
dec
mov
xchg
(bad)
aaa
mov
dec
repz
aas
pop
sub
jo
xor
mov
and
iret
xor
pop
inc
jb
call
cs
or
movs
xor
pop
loop
cmps
aam
mov
aam
push
xchg
pop
dec
in
mov
sbb
dec
xchg
mov
xchg
mov
adc
and
daa
cwde
dec
dec
test
cmp
push
xlat
(bad)
push
sbb
icebp
or
call
mov
inc
ins
or
dec
retf
mov
cmc
cmp
adc
popf
sbb
xchg
ins
jnp
je
into
scas
inc
stos
mov
inc
fidiv
scas
dec
inc
fxch
retf
inc
(bad)
not
cs
pop
sub
shr
mov
stc
dec
xlat
mov
push
pop
pop
pop
inc
in
xor
imul
rol
in
inc
xor
push
pusha
jns
into
in
je
repz
xor
mov
out
in
mov
fisttp
fidiv
xor
sub
in
jmp
mov
out
movups
pop
(bad)
dec
data16
mov
jecxz
and
dec
int3
das
push
lods
or
fs
push
loope
(bad)
jo
repz
imul
stos
popf
adc
sub
rcr
ficom
jmp
std
fwait
imul
push
and
xchg
mov
sub
js
iret
jb
movs
dec
lock
jne
repnz
xor
jmp
lds
jbe
push
cmp
fcom
jno
pop
pusha
jecxz
fidivr
mov
movs
shl
out
sbb
cld
inc
push
dec
popa
(bad)
nop
lea
rcl
aas
jmp
popa
inc
pop
add
pop
push
sbb
les
push
add
cvtdq2ps
test
push
adc
not
icebp
dec
mov
leave
pop
cmp
xor
out
out
mov
in
outs
mov
push
sti
sub
push
mov
fstp
mov
sbb
bound
and
pmaxsw
fadd
nop
inc
dec
fmul
or
mov
dec
sahf
mov
out
stos
icebp
sub
push
jmp
adc
jg
jno
out
pop
or
sar
mov
data16
jb
inc
scas
inc
pop
pop
test
jnp
add
xor
scas
std
pop
pop
dec
push
push
ret
jb
push
mov
js
bound
fcomp
inc
mov
xor
xchg
xchg
mov
cmp
mov
(bad)
dec
imul
cwde
(bad)
(bad)
clc
push
sbb
movs
int
sti
rcl
pop
mov
bound
adc
mov
mov
mov
rcr
sub
icebp
test
inc
jg
jno
push
xchg
push
mov
mov
jg
push
xor
sbb
cmp
arpl
and
or
lds
int3
fldenv
sahf
je
add
cmp
nop
pcmpgtb
and
outs
sbb
mov
fisttp
scas
jl
retf
or
imul
pushf
out
or
adc
sub
push
mov
test
sub
icebp
repz
stos
sar
xor
ret
xchg
retf
xor
push
push
dec
mov
cmp
xor
imul
and
repnz
or
out
xchg
movs
(bad)
or
mov
fucom
cmp
and
pop
pop
(bad)
int
jno
mov
pmaxsw
imul
fmul
lea
loope
and
or
mov
dec
jecxz
std
shl
test
in
mov
dec
inc
lock
push
sbb
call
mov
mov
xor
push
push
jno
xchg
ins
mov
inc
jne
(bad)
sbb
fst
dec
data16
in
mov
sbb
in
add
xchg
push
mov
mov
aam
test
mov
or
add
fmul
mov
or
push
loope
xor
pop
sbb
inc
mov
mov
ins
enter
xchg
aaa
int3
dec
fadd
adc
push
fwait
inc
push
sub
xchg
cmp
ss
test
bound
add
push
inc
arpl
clc
adc
sub
fimul
push
push
push
leave
(bad)
jmp
outs
mov
ret
xor
(bad)
dec
push
jnp
xor
jle
fcmove
in
xchg
out
inc
xor
push
push
movs
pop
sahf
stos
jne
push
scas
aaa
xor
aad
mov
lds
or
xor
sub
movs
aad
push
fwait
imul
cli
fidivr
xchg
hlt
arpl
mov
inc
mov
sub
push
movs
adc
jl
aaa
movs
mov
cmc
fst
or
mov
mov
pop
cmp
pop
outs
jne
gs
retf
pop
ja
js
push
xor
rcl
or
cmp
pop
stc
ja
add
or
repnz
cmp
das
imul
and
dec
jg
aas
test
mov
bound
test
sub
mov
mov
cmp
jp
repnz
inc
rcr
cmp
cmp
and
mov
adc
xchg
es
xchg
mov
fist
inc
inc
addr16
dec
cld
mov
adc
cli
mov
or
push
jle
jmp
fcmovnbe
fs
add
faddp
(bad)
retf
inc
call
mov
repz
jecxz
sub
mov
pop
xor
jge
xchg
inc
push
fcom
nop
sbb
stos
leave
mov
mov
test
gs
in
xchg
imul
sub
push
lods
cld
adc
xchg
mov
adc
mov
dec
test
xor
cwde
(bad)
iret
inc
sub
inc
cmps
cmp
sbb
ficomp
mov
aaa
movs
sar
sub
fnstsw
adc
daa
repz
and
sbb
xchg
dec
jno
and
in
dec
imul
or
ins
lock
jge
xlat
pop
lods
sub
frstor
cmps
adc
xchg
xor
cdq
mov
cmps
xchg
dec
test
sahf
sbb
jo
mov
push
out
arpl
push
pop
test
mov
xchg
mov
popa
cmp
lods
sbb
inc
sti
xchg
jne
sbb
jo
and
ret
xor
lds
in
xor
stos
fild
ret
cmc
and
inc
pop
add
push
dec
daa
loop
add
mov
loop
je
pop
mov
ds
adc
jbe
ret
xchg
inc
rol
fld
jp
xor
sbb
retf
dec
data16
stos
jmp
loope
fld
adc
push
mov
scas
pop
xor
in
and
lods
out
mov
cwde
adc
aaa
mov
js
arpl
pushf
cmp
inc
neg
arpl
int3
ret
xchg
or
test
and
push
fnsave
mov
movs
sub
pushf
in
sub
pop
mov
test
adc
pop
mov
sub
and
jbe
mov
lea
sub
mov
pop
cmps
pop
stc
movs
cmp
xor
jb
jecxz
(bad)
lds
cld
mov
div
xlat
adc
es
cmp
jnp
mov
out
repz
xchg
pop
into
and
add
inc
xor
xchg
je
xchg
pop
add
mov
xchg
mov
push
xchg
jg
mov
fild
pop
jmp
sbb
scas
(bad)
push
inc
lods
inc
je
inc
dec
jbe
je
jl
sar
mov
outs
pop
push
pop
xor
shr
leave
inc
sub
mov
pusha
jle
adc
sti
icebp
arpl
jne
push
push
jne
inc
adc
xchg
sub
dec
or
cwde
aas
mov
call
loopne
mov
jmp
add
shl
std
jge
jnp
sar
rol
add
(bad)
outs
add
cli
aaa
mov
xchg
popf
imul
jg
retf
scas
aaa
sar
inc
data16
cwde
js
mov
xchg
nop
test
adc
cwde
and
ja
cdq
cwde
cmp
scas
sbb
popa
and
scas
pop
daa
fs
loopne
push
push
pop
cmp
jnp
and
cli
pop
(bad)
and
scas
into
pop
xor
sbb
push
arpl
push
mov
pop
leave
pop
mov
jmp
adc
jb
xchg
mov
xchg
lock
inc
cvtps2pi
xor
pop
sbb
push
gs
das
cmp
sub
push
sbb
(bad)
je
mul
inc
dec
sar
jg
mov
cmp
ss
pop
push
jae
jmp
pop
pop
es
fistp
movs
jmp
popa
inc
cmc
lahf
xchg
movs
cmp
test
dec
jno
(bad)
into
add
ret
xor
stc
ret
out
dec
arpl
icebp
pop
mov
popa
enter
out
lods
iret
dec
push
sub
(bad)
clc
test
fdivr
jmp
or
xor
jb
xchg
xchg
lods
jae
adc
inc
push
ss
jg
inc
jns
aas
into
aaa
sbb
mov
fwait
sub
and
inc
jb
push
addr16
add
fs
addr16
call
pop
pop
popa
in
push
xor
lods
and
sbb
enter
outs
outs
mov
arpl
inc
pusha
fist
shr
in
out
int
in
dec
jbe
and
outs
sub
and
dec
xchg
inc
sub
cli
and
(bad)
cmc
scas
mov
std
push
call
lds
movs
pop
test
jg
inc
test
sub
dec
clc
mov
cmps
out
jle
pop
jns
dec
fcomp
lods
(bad)
xchg
inc
mov
in
ret
or
(bad)
bound
sub
jge
int3
movs
adc
mov
inc
popf
dec
push
stos
and
sbb
xor
jbe
dec
xchg
cmp
push
sub
cmp
jnp
or
into
jecxz
cwde
push
jp
pop
das
into
call
lahf
es
adc
movs
loop
(bad)
lahf
push
and
fmulp
das
int
mov
or
lds
jmp
mov
sbb
inc
or
xchg
leave
jbe
inc
or
in
les
out
lea
mov
jno
retf
inc
jge
(bad)
es
std
jbe
test
xor
mov
div
cmp
mov
fimul
jns
sub
jae
dec
and
fistp
fbld
push
and
add
popa
add
scas
call
inc
stos
push
xchg
and
or
cmps
pusha
pop
xchg
and
pop
xchg
xchg
xlat
adc
pop
inc
rcr
or
pushf
stos
pop
inc
enter
xchg
xor
outs
xor
call
add
or
jne
retf
out
inc
mov
cmp
inc
jl
sub
outs
pop
mov
cmps
and
call
popa
in
sbb
(bad)
jo
(bad)
sub
icebp
cmc
mov
and
push
xor
repz
xchg
fdivr
mov
dec
push
jne
and
cmp
push
add
jb
jl
jb
sbb
shl
mov
addr16
scas
pavgw
call
adc
sbb
sub
arpl
push
mov
adc
push
(bad)
jmp
inc
mov
xchg
push
sbb
mov
rcl
jno
jnp
loopne
aas
test
xchg
stc
dec
xor
pop
mov
fldenv
cmp
xchg
stos
or
pop
int3
sub
mov
shl
(bad)
adc
nop
in
repnz
sbb
jns
adc
jecxz
push
in
rcr
push
sbb
aaa
leave
mov
sub
jb
inc
bound
clc
leave
repz
loope
dec
push
daa
test
cld
push
pop
shl
lahf
mov
repz
add
mov
cmps
mov
fisttp
cmp
jmp
inc
pop
pop
scas
fwait
or
sbb
(bad)
push
mov
out
retf
movs
mov
gs
sar
push
ins
inc
xchg
xchg
mov
pop
add
hlt
adc
mov
and
outs
xchg
fbld
ins
pop
neg
ja
call
sahf
adc
in
fs
sbb
mov
in
dec
jmp
adc
sbb
inc
dec
retf
addr16
std
pop
jle
in
mov
leave
xor
fistp
push
push
call
inc
xchg
xchg
jne
shr
fisttp
pop
je
int3
mov
scas
mov
mov
sti
xchg
jecxz
push
loopne
js
mov
inc
ds
jnp
push
inc
mov
mov
mov
or
dec
xor
jns
sti
inc
scas
enter
inc
shl
xlat
rcl
jb
xchg
inc
ret
(bad)
cmc
movs
test
leave
xor
jns
adc
imul
cld
pop
int3
xor
or
test
shl
mov
inc
ins
push
adc
jnp
clc
(bad)
jmp
fcomp
jle
mov
add
sub
popa
mov
add
pop
add
pop
ins
adc
add
push
and
(bad)
rol
into
cmps
fwait
test
inc
cdq
xchg
push
and
cmp
outs
jbe
sbb
movs
fs
cmp
cmc
jne
loop
inc
ret
out
fidiv
iret
cli
ins
test
pop
pop
cmp
lds
ret
sub
mov
and
inc
adc
fwait
pop
sub
xchg
adc
mov
pop
adc
add
add
or
inc
lods
adc
lods
fsub
sbb
jbe
test
ror
mov
xchg
xchg
inc
(bad)
pop
(bad)
gs
mov
mov
sbb
into
fldcw
mov
xor
xor
mov
mov
neg
sti
test
sbb
(bad)
arpl
(bad)
sti
adc
out
mov
sbb
shl
ret
xor
mov
fs
enter
out
pop
and
cs
push
lea
inc
cmp
xor
fidiv
retf
push
test
pop
jmp
dec
jbe
inc
xchg
xchg
mov
jo
mov
in
inc
int3
ret
fsub
xor
or
leave
and
ret
dec
mov
pop
shr
mov
mov
dec
mov
test
jb
xor
outs
bound
adc
imul
pop
fsubr
ja
cmp
lods
mov
mov
movs
movs
dec
or
xchg
adc
fwait
ins
lahf
inc
sub
out
xor
mov
xor
push
movs
ret
scas
dec
push
jl
aaa
jl
cwde
mov
sub
fist
mov
data16
sbb
push
inc
popa
es
push
cmp
xchg
pop
arpl
imul
cmc
mov
dec
in
hlt
sbb
aaa
movs
pop
iret
fistp
and
sbb
sahf
ret
adc
mov
xchg
out
daa
mov
mov
inc
bound
mov
sahf
mov
pop
xchg
and
mov
jb
aaa
push
int3
das
jmp
test
sub
sti
push
sbb
fldenv
sbb
arpl
or
aam
div
pop
xchg
jnp
xchg
push
and
jmp
xchg
neg
outs
xor
aam
jle
stos
lahf
xchg
shr
sub
popa
das
lea
and
mov
stos
ins
xor
into
jbe
pushf
adc
mov
ja
test
adc
lea
aas
or
cli
repnz
pop
call
inc
les
int3
out
cmp
data16
loope
dec
sub
pop
mov
ins
in
cmp
shl
push
or
setge
dec
mov
dec
inc
test
dec
fwait
jmp
in
or
and
lahf
out
xor
das
lock
inc
mov
movs
in
add
jp
jbe
or
dec
sar
add
call
add
retf
mov
mov
inc
xor
mov
mov
sbb
mov
adc
xor
es
mov
push
cmp
xchg
inc
test
sub
add
lods
clc
push
xchg
rcl
sub
sar
pop
dec
add
repz
dec
scas
and
into
fwait
mov
loopne
xchg
mov
pop
daa
cdq
sbb
fwait
sbb
retf
jno
xor
mov
inc
xor
imul
or
data16
outs
sbb
stc
sar
pusha
ja
push
add
xchg
or
or
jecxz
cmps
push
and
stc
push
and
jg
idiv
xchg
je
cmp
dec
jmp
cmp
pop
imul
sahf
lock
cmp
inc
sbb
jns
mov
mov
neg
and
adc
icebp
je
dec
mov
daa
das
pop
mov
leave
out
jg
jmp
clc
and
sbb
(bad)
jmp
std
sbb
sub
add
mov
sub
adc
mov
xchg
xchg
xlat
jne
dec
scas
pop
mov
mov
or
push
vhsubps
ja
dec
sahf
sub
out
sub
sahf
mov
and
(bad)
outs
dec
jnp
int3
loop
push
pop
cmp
fdivr
adc
sub
and
dec
jl
dec
push
movs
push
out
in
dec
shl
pop
pop
adc
jg
shl
(bad)
mov
out
sbb
stos
jge
pop
dec
mov
fxch
jmp
and
jae
call
xor
add
xchg
test
pusha
pop
jnp
jl
pop
test
jne
sub
mov
shl
(bad)
or
jl
jp
add
aaa
loope
int3
outs
aam
adc
xchg
ret
pop
lock
push
xor
ja
mov
into
cld
push
out
mov
pop
std
fld
push
rcr
or
lahf
arpl
ins
imul
cmp
loopne
pop
sbb
daa
mov
pop
fwait
lock
mov
cld
xor
add
xchg
or
pop
jns
(bad)
push
fisubr
nop
add
and
aam
test
aas
xlat
sbb
retf
mov
inc
xor
xchg
mov
ss
adc
cld
adc
mov
inc
sub
cwde
fwait
cmp
add
mov
xchg
jge
stos
adc
iret
shl
outs
or
fldcw
pop
mov
int
(bad)
stc
xchg
add
inc
or
sahf
jmp
sti
sti
mov
cmc
ss
test
dec
push
jb
sbb
retf
dec
jmp
push
xor
mov
mov
cmp
dec
test
fst
xor
pop
das
scas
sub
outs
fprem
mov
adc
adc
jp
dec
xchg
enter
and
icebp
pop
pop
or
xchg
pop
jle
jno
std
xor
cmp
xchg
(bad)
es
js
xor
out
pop
lods
scas
dec
ins
sbb
or
xor
pop
lahf
ret
aas
jg
jae
jecxz
sti
xchg
sti
pop
or
pop
sub
lahf
lock
cwde
push
add
sar
jmp
clc
(bad)
mov
imul
cdq
aam
push
jbe
fild
mov
or
das
sub
mov
dec
or
sub
and
nop
das
add
or
(bad)
xchg
(bad)
mov
mov
scas
and
sbb
jge
sbb
xor
pushf
adc
or
jg
xor
push
cli
repz
jmp
pop
popa
dec
jmp
jle
jb
ffree
push
xchg
in
sbb
repz
std
jmp
arpl
cmc
ret
or
movs
mov
mov
std
dec
sub
retf
push
cli
jbe
ja
push
add
sub
scas
sub
mov
xor
pop
sub
cmps
cli
std
daa
mov
and
int
cmp
fstp
mov
or
cmp
sub
sub
mov
inc
add
jbe
pop
jne
(bad)
rcl
int3
jae
dec
ficomp
lock
pusha
pop
fldenv
mov
jl
inc
push
jmp
arpl
xlat
add
inc
mov
mov
test
lahf
ss
arpl
add
cmc
pop
ret
das
icebp
xor
xchg
jg
mov
cmc
mov
cs
repnz
aaa
cmp
or
iret
and
fnstenv
into
int3
pop
dec
fmul
je
sbb
out
or
outs
fwait
cld
pop
fstp
mov
cmps
xor
cmp
add
movs
cmp
jmp
test
add
sub
data16
dec
outs
fsubr
(bad)
dec
test
mov
inc
or
pop
inc
das
rol
push
or
inc
int3
mov
icebp
(bad)
aas
clc
dec
call
adc
sbb
fcomip
xchg
lods
bnd
dec
popa
xor
mov
ja
adc
out
and
jns
cmp
rcr
add
jecxz
mov
retf
mov
js
retf
sbb
out
sti
mov
fadd
out
mov
ret
test
cwde
sub
mov
cdq
push
inc
ret
inc
aam
mov
ret
pop
pop
mov
nop
add
out
pushw
or
xor
dec
and
xor
pop
cmps
adc
inc
fwait
jae
hlt
inc
(bad)
jmp
je
cmp
mov
adc
xor
jmp
(bad)
rcr
mov
cli
out
retf
cwde
fbld
push
out
out
pushf
fsub
xor
jae
fdivrp
pop
inc
pop
rcr
pushf
bound
adc
mov
add
rcr
mov
add
das
call
mov
js
mov
cmp
mov
dec
repz
lahf
jne
mov
loopne
push
and
cmps
mov
cmps
frstor
adc
js
mov
dec
movntq
sub
out
cli
dec
in
mov
mov
inc
scas
popa
out
retf
push
and
loopne
mov
out
and
mov
push
or
cs
cli
loopne
ins
mov
dec
iret
je
mov
xor
callw
test
int3
shl
test
retf
loop
and
jbe
sub
fs
(bad)
addr16
or
cmp
push
sti
clc
and
inc
ja
add
cmp
bnd
dec
fdivr
pop
hlt
cld
or
add
in
push
dec
scas
sbb
das
or
inc
or
pop
mov
lods
dec
ror
std
mov
push
mov
es
shl
pushf
adc
loopne
xlat
adc
ret
int3
stos
add
dec
dec
mov
repz
inc
mov
adc
cmp
mov
jno
loop
inc
cld
fwait
pop
pop
aaa
ret
addr16
repnz
(bad)
push
lods
and
xor
mov
mov
ror
std
lods
addr16
adc
jmp
or
fcomp
leave
neg
retf
(bad)
fwait
jne
inc
push
dec
jmp
inc
out
sahf
xchg
mov
cmp
cwde
out
pop
or
scas
fidivr
mov
dec
add
fistp
mov
ror
or
mov
sub
cld
int3
fbstp
scas
ins
mov
and
mov
mov
cmps
add
(bad)
mov
rol
in
xchg
mov
(bad)
mov
mov
(bad)
jmp
add
push
enter
sub
adc
cmp
lods
dec
sahf
jbe
or
in
cmp
cld
xor
fidiv
loope
outs
jp
dec
mov
int
int
push
jns
push
push
(bad)
or
pop
movs
jae
sar
lods
xchg
fstp
add
xchg
jecxz
sub
stos
out
mov
jo
in
scas
pop
and
mov
push
pop
fnstcw
scas
sbb
push
adc
add
popa
xchg
sbb
daa
in
xchg
mov
stos
lock
sbb
push
adc
test
fcomp
cmp
in
sbb
in
push
jp
scas
mov
pop
push
push
ja
add
movs
call
pop
jo
imul
adc
(bad)
mov
loope
int3
dec
in
and
mov
inc
out
xchg
(bad)
call
cmp
bound
(bad)
or
lock
icebp
jle
mov
jns
iret
out
or
xchg
cmp
jo
ja
xchg
imul
aad
movs
lods
test
and
loop
add
sti
(bad)
int3
in
fs
fst
and
push
fadd
jae
mov
cmp
push
push
pop
pop
mov
xchg
ins
mov
mov
imul
mov
ins
les
and
jns
leave
dec
pop
add
cmps
pop
fbstp
cdq
arpl
sub
or
stc
js
cmp
cmp
sub
pushf
dec
mov
daa
hlt
jmp
xchg
test
imul
jl
sub
movs
dec
and
stos
and
sbb
or
pop
jbe
(bad)
sti
daa
xchg
pop
cmp
mov
jno
sar
jno
scas
xchg
xor
stos
sbb
mov
leave
scas
pusha
xchg
push
rol
push
ja
lock
in
hlt
into
aaa
out
(bad)
in
mov
push
xor
xor
daa
pop
and
mov
(bad)
repnz
push
cmc
retf
inc
sub
xchg
mov
pop
pop
dec
mov
fcomp
dec
jb
push
movs
jmp
test
call
and
push
adc
dec
sub
jo
psllq
retf
mov
xchg
sbb
sbb
in
inc
cmp
inc
fsubr
jecxz
cmp
lods
mov
dec
mov
cmp
stos
call
cmp
sti
push
adc
cdq
pusha
repz
pop
rcr
icebp
lock
sahf
xchg
mov
inc
and
mov
adc
mov
retf
mov
leave
dec
mov
sahf
icebp
fnstcw
int
cmp
adc
jne
xor
test
inc
cs
push
mov
sub
lahf
mov
mov
mov
sbb
test
retf
xor
loope
stc
pop
fsub
lock
arpl
cli
test
(bad)
lods
dec
pop
test
cli
fild
jne
cmc
repz
mov
or
jmp
bound
das
xchg
push
mov
outs
sbb
mov
daa
sbb
scas
loope
or
ins
data16
mov
sub
sbb
mov
push
stos
mov
in
leave
pushf
les
shr
out
ins
cmp
mov
jno
ins
cld
xor
retf
imul
xor
jecxz
mov
call
test
cmps
jmp
or
aas
adc
cdq
lds
push
leave
popf
aad
(bad)
fbstp
mov
jns
cmps
sub
ins
(bad)
push
int3
jo
stos
cmp
clc
mov
gs
inc
and
jmp
mov
cmp
xor
sbb
pop
push
sti
add
out
pop
ins
or
push
imul
(bad)
sbb
cld
test
test
out
(bad)
call
mov
ret
push
push
test
mov
cli
sub
je
jle
mov
push
mov
xchg
pop
shr
or
adc
inc
sub
pop
call
sub
inc
jno
packssdw
push
clc
idiv
adc
cmp
push
out
fsubr
pop
and
jecxz
dec
push
int3
jl
les
push
hlt
imul
stos
movs
scas
mov
sub
pop
xchg
adc
xchg
sbb
xchg
fnsave
mov
mov
add
adc
cmp
call
ds
push
push
cwde
icebp
in
inc
pop
push
jno
setg
jnp
jno
push
jbe
repnz
push
cld
in
test
aad
pop
jl
ins
iret
and
int
sbb
rcr
cwde
inc
pop
xchg
or
cmc
mov
inc
mov
in
sub
cmps
into
sti
fsubr
repnz
cmps
cmps
xor
clc
xor
sub
jp
pop
inc
(bad)
sub
mov
int
xor
add
and
cmps
cmps
and
pop
xchg
jae
inc
and
push
or
sub
jae
cmp
push
lds
loopne
pop
push
adc
dec
mov
xchg
rol
jecxz
fnstsw
cmp
icebp
ja
jmp
scas
mov
pop
pop
mov
nop
inc
loop
mov
sti
(bad)
pushf
and
stos
jge
iret
call
xchg
jb
add
push
xor
loope
into
out
mov
je
cmovge
es
test
or
mov
pop
mov
das
ror
push
or
jnp
sar
jmp
push
(bad)
push
fist
addr16
sbb
js
push
push
inc
xchg
or
jl
pop
sub
(bad)
stos
pop
pop
les
retf
outs
rcl
mov
and
(bad)
xchg
dec
push
das
movs
cmps
pop
das
sbb
mov
movs
inc
retf
push
lods
ret
lock
mov
(bad)
aaa
(bad)
(bad)
cmp
fidiv
(bad)
jp
pop
cmp
push
retf
stc
stc
and
retf
iret
and
mov
nop
sahf
mov
std
mov
ins
dec
movs
push
sti
cmc
mov
aad
mov
cli
or
test
cs
mov
cdq
out
imul
push
or
not
mov
sub
lods
mov
call
xchg
jge
xor
rcl
pop
mov
leave
xlat
fmul
xor
sahf
sbb
xor
sub
mov
int
sub
cmp
jmp
lock
jge
and
in
sub
jmp
mov
or
ins
push
cmp
cmp
jns
pop
xchg
fs
adc
push
adc
fmul
jmp
sub
scas
popa
fdiv
mov
mov
mov
cmp
xor
popa
sbb
popa
or
or
jno
inc
and
iret
lahf
push
dec
mov
fild
adc
xchg
dec
lods
mov
mov
(bad)
leave
rcr
jae
jmp
jno
scas
cmp
outs
sub
or
stos
aaa
mov
sbb
ret
data16
ror
pop
movs
jp
push
int3
inc
dec
dec
pop
jae
popf
sbb
jle
add
sbb
mov
mov
jecxz
rcr
out
pop
setge
xlat
mov
fdivrp
out
mov
scas
dec
out
ret
stc
imul
jle
add
stos
inc
sub
loop
push
mov
aad
cmp
fldenv
fbstp
mov
jmp
std
jmp
fs
repnz
sbb
cmp
sbb
jecxz
add
sub
ds
popf
xlat
mov
push
int3
aam
sbb
push
ja
pop
stos
fwait
push
mov
je
mov
adc
inc
jecxz
fcomp
jnp
in
fsub
pop
mov
shl
pop
addr16
adc
push
mov
or
fdivr
in
sub
inc
mov
repnz
bound
xchg
or
cmp
repz
int
(bad)
ja
scas
hlt
ja
sub
dec
and
dec
jne
popa
fsubr
xor
fs
out
call
call
inc
mov
addr16
lahf
adc
shr
ror
xchg
lea
outs
icebp
xchg
retf
mov
xchg
pop
icebp
in
or
mov
xchg
pop
and
pop
jmp
jnp
jbe
(bad)
loopne
loope
fnstcw
jno
(bad)
mov
xchg
fldcw
fbstp
xchg
icebp
sub
ss
hlt
or
push
mov
aaa
int
ss
push
inc
adc
int3
es
inc
pop
jmp
stc
je
pushf
xchg
ss
hlt
mov
sbb
jp
pop
mov
or
sti
jecxz
arpl
sub
pop
je
idiv
pusha
pop
call
imul
loopne
dec
cmp
clc
mov
pop
adc
cmps
aas
inc
lahf
xlat
sbb
push
xor
lds
xchg
outs
dec
mov
pop
and
scas
dec
sub
sub
and
cmc
or
cmp
cld
dec
cli
aas
push
lahf
inc
pop
imul
out
cmp
xor
bound
aad
popf
dec
(bad)
fld
sbb
and
test
fwait
in
jp
jno
nop
pop
adc
popf
jle
outs
jnp
or
push
data16
jnp
loop
dec
retf
je
ins
mov
mov
mov
mov
sahf
dec
ss
adc
stos
mov
ret
push
jge
inc
fwait
es
jno
mov
scas
jg
xchg
sbb
repnz
adc
(bad)
dec
sub
xor
push
push
ret
mov
(bad)
adc
mov
or
sbb
and
or
push
or
cwde
(bad)
retf
inc
sbb
into
mov
and
sub
aad
add
adc
xor
add
sbb
mov
jmp
push
(bad)
iret
lods
jmp
pop
outs
movs
cmp
inc
mov
stos
mov
mov
cmps
sub
test
dec
adc
add
(bad)
rcl
or
ja
add
xchg
adc
sbb
ja
dec
cmp
scas
ds
cmp
cmp
mov
ret
outs
dec
ds
or
or
dec
cmc
fs
cmp
lea
outs
paddusb
sti
(bad)
jle
jmp
loopne
aaa
mov
test
jae
in
lds
mov
mov
js
jle
iret
mov
movs
xchg
add
dec
inc
and
test
mov
or
loop
sbb
scas
(bad)
test
and
pop
dec
scas
mov
movaps
jmp
pop
ins
addr16
je
clc
mov
repnz
repnz
ins
sbb
xor
into
inc
xor
stos
mov
mov
call
xor
icebp
std
inc
aad
adc
pop
sbb
cmps
nop
ret
add
add
adc
lods
mov
ds
(bad)
mov
addr16
pop
mov
rol
(bad)
(bad)
popa
(bad)
stos
test
out
es
sbb
sub
cmc
pop
add
push
xor
mov
fnstcw
mov
mov
jo
shl
sub
mov
(bad)
ins
enter
push
and
out
xor
sbb
dec
and
cmp
mov
inc
pop
das
pop
adc
adc
xor
inc
cld
cld
sub
in
jns
aad
not
sahf
pop
and
add
hlt
jecxz
jge
push
clc
adc
fcom
mov
test
add
add
jmp
xchg
push
push
push
dec
add
inc
dec
xchg
stos
les
jmp
test
xor
mov
pop
mov
add
fadd
fisub
mov
push
mov
popf
ins
(bad)
ret
or
sub
das
and
outs
xchg
stos
loope
test
std
or
fldcw
int
je
not
mov
and
pushf
cmc
scas
add
push
xchg
cmps
jbe
out
jl
ja
sbb
pop
aad
sar
or
cmp
fwait
aas
into
scas
fs
add
pop
adc
je
inc
es
outs
xchg
adc
mov
in
or
test
aam
idiv
sub
es
mov
cmps
ficom
data16
add
lahf
dec
iret
push
push
mov
stos
test
jl
int
jle
jp
outs
pop
dec
xchg
pushf
mov
adc
aam
inc
jbe
push
jecxz
mov
adc
mov
aam
dec
int
(bad)
cmps
popf
xor
add
dec
in
mov
sbb
mov
imul
xchg
jge
xchg
out
shr
mov
inc
and
cmp
push
int
xchg
shl
pop
test
lods
fwait
jb
sti
jmp
clc
cli
fldcw
fldcw
(bad)
imul
sub
cld
sahf
cmps
add
dec
xchg
adc
push
add
aas
inc
inc
sbb
push
mov
call
fist
cmp
lock
loop
(bad)
imul
clc
push
adc
fsubp
jns
out
sar
jle
pop
mov
or
lods
retf
mov
ss
lea
dec
ficom
mov
mov
xor
or
mov
mov
cmp
sbb
push
jecxz
test
jns
jne
adc
mov
scas
setne
xor
in
mov
aad
sub
cmps
dec
enter
call
imul
cmp
(bad)
adc
inc
lea
repz
data16
test
inc
mov
jb
enter
sbb
(bad)
shr
jge
fidiv
push
loop
movs
rol
xlat
(bad)
sbb
ds
or
mov
dec
adc
mov
lea
xchg
pop
test
or
cmp
repnz
mov
sub
mov
loopne
stos
push
sbb
add
add
retf
cli
push
mov
stos
ins
and
sub
jp
lods
mov
cmp
adc
mov
jp
push
sar
xor
and
in
xor
jp
lds
iret
lahf
add
jns
pusha
add
jnp
sub
xchg
mov
sub
add
(bad)
fwait
and
je
pusha
popf
movs
clc
cmp
push
clc
sub
sbb
(bad)
cmp
cmp
xlat
cmps
es
retf
retf
jno
cli
cmp
and
cmp
dec
add
mov
add
cli
push
and
sahf
mov
cmp
mov
mov
es
adc
dec
inc
mov
fstp
arpl
mov
popf
rcl
mov
jns
dec
in
inc
iret
stos
and
leave
(bad)
dec
fldcw
dec
js
cmp
lahf
xchg
iret
std
or
sub
and
adc
add
jmp
and
add
xor
icebp
ret
lea
stos
les
mov
mov
imul
cmp
jb
or
scas
xor
aad
rol
push
ror
xchg
dec
or
cmps
xlat
lods
xchg
shl
and
mov
xor
jb
das
sbb
aas
test
aad
cmp
pop
mov
xchg
popa
jno
sub
pop
stc
inc
and
add
sub
sbb
jo
clc
js
(bad)
sahf
adc
and
push
pusha
mov
dec
xor
dec
add
push
cmps
cmps
jmp
(bad)
int
inc
std
push
sub
sub
mov
sbb
out
imul
imul
adc
xchg
(bad)
cmps
mov
adc
jl
xchg
cld
xchg
or
outs
enter
mov
xor
push
es
loop
adc
mov
adc
dec
fst
ret
jl
pushf
cmp
outs
pop
daa
mov
test
mov
fwait
packssdw
loopne
sbb
sbb
or
adc
arpl
cmp
arpl
pusha
adc
jbe
lds
push
retf
push
sbb
stos
adc
dec
sahf
das
mov
push
leave
ins
add
cmp
arpl
jns
es
repz
inc
lds
out
sahf
sub
dec
shr
stos
cmps
sbb
mov
pusha
loope
dec
loop
fwait
xchg
dec
retf
shr
js
loopne
rol
inc
mov
div
sar
lea
iret
in
pop
jge
cmp
push
inc
push
xor
jecxz
sub
(bad)
outs
and
pop
mov
inc
outs
lods
dec
movs
pop
jno
call
mov
jb
data16
sub
jmp
js
ins
push
fwait
repnz
jmp
fbld
inc
and
mov
clc
aam
jnp
(bad)
mov
cwde
aaa
pop
out
push
adc
sub
xchg
sub
out
adc
push
rcr
and
scas
int
retf
sbb
dec
es
out
icebp
mov
in
mov
enter
cs
fsub
data16
dec
add
xchg
push
cmps
(bad)
pop
inc
jne
pop
out
call
dec
enter
out
push
vpmacsdqh
and
xchg
jecxz
fimul
mov
stc
fst
fs
imul
ror
lahf
fisttp
in
sahf
cmps
fmul
and
rcl
adc
sbb
xchg
div
add
pusha
gs
and
sti
fs
and
xor
mov
inc
xlat
aas
inc
mov
push
jbe
jae
leave
pop
cmp
lahf
popa
jle
jle
pop
inc
fldenv
xchg
xchg
jnp
aad
cdq
sub
add
inc
mov
xor
retf
push
fcomp
out
ds
fcomp
sbb
mov
xor
popa
in
and
xor
jae
xchg
lods
dec
pop
out
adc
lods
push
mov
mov
outs
rcr
ret
xchg
mov
xor
cmps
add
outs
pop
xor
cmc
sbb
movs
mov
pop
push
sub
dec
cmc
jbe
sbb
adc
or
fisubr
or
mov
shl
sbb
std
mov
cmp
mov
sbb
jp
cmc
test
sub
inc
mov
in
mov
pop
sbb
dec
pop
jge
cmp
xchg
enter
loopne
sahf
test
sbb
mov
nop
cmp
aaa
pop
cli
int
xchg
stos
sbb
scas
pop
repz
enter
in
fnstcw
jg
xchg
icebp
push
dec
cmp
adc
mov
loop
fimul
sbb
in
test
int3
stc
out
in
mov
cmp
in
(bad)
jl
pop
fcmovb
test
cli
jmp
xor
pop
ins
and
jle
cmp
jns
cmp
inc
fstcw
rol
addr16
inc
mov
xor
dec
subps
mov
push
mov
into
add
retf
jns
mov
or
pop
mov
jmp
xor
sub
push
mov
sub
xor
xchg
sub
and
and
or
out
popa
shr
xor
lods
cmp
repz
add
ret
(bad)
call
push
or
pop
nop
out
pop
sub
adc
stc
retf
inc
clc
mov
ins
out
mov
bound
jmp
out
fs
pop
fisubr
lock
cmp
sub
mov
cmps
sub
or
xchg
adc
ret
and
fucomp
and
add
xor
cmps
outs
movs
or
pop
loopne
pop
and
add
dec
arpl
fxch
movs
pop
mov
xlat
cmp
int3
retf
mov
inc
pop
mov
test
mov
daa
popa
xchg
or
imul
gs
stos
mov
loope
imul
mov
sub
cs
adc
xor
sub
xchg
retf
fcmovnb
fs
test
sbb
pushf
call
cmp
push
or
mov
inc
dec
jbe
pusha
ret
pushf
dec
pop
scas
mul
rcr
retf
clc
or
bound
or
test
std
call
lods
pop
aam
icebp
shl
lods
scas
ret
xor
push
jle
pop
in
pop
outs
movs
aaa
fadd
(bad)
or
jmp
jo
inc
sbb
mov
aas
xor
and
addr16
xor
inc
xlat
lea
mov
cmps
sahf
out
(bad)
gs
cs
cwde
pushf
int
cmps
std
psrad
pop
out
sbb
mov
test
retf
or
mov
mov
cwde
cmp
push
into
push
mov
push
js
or
int3
push
or
adc
imul
xchg
add
mov
in
scas
jne
mov
out
aaa
das
sub
or
rcl
repz
leave
jmp
ret
pop
xor
mov
jbe
dec
push
xor
in
and
loop
movs
sub
mov
cmps
dec
and
inc
in
or
jno
retf
cmc
popf
mov
mov
add
pop
jno
fwait
dec
imul
or
cmp
in
or
movs
cmps
sbb
fisubr
push
rol
inc
ret
cmc
leave
and
adc
pusha
aam
pop
mov
jp
icebp
fisub
sbb
aaa
adc
and
jecxz
in
jp
xchg
pop
test
and
push
push
(bad)
stos
jno
in
sbb
test
cld
push
push
adc
in
xchg
inc
(bad)
in
mov
addr16
imul
out
jge
cmps
jmp
int
pusha
ret
adc
in
push
add
cli
xchg
fdivr
jno
mov
adc
movs
mov
xlat
or
push
(bad)
push
cmp
mov
pop
cmp
das
fistp
int
inc
xchg
pop
dec
fistp
jbe
rcl
push
mov
sub
sahf
in
xor
cli
into
imul
dec
or
retf
xchg
mov
dec
cdq
push
cmp
and
jg
pop
mov
shl
mov
icebp
or
mov
add
inc
ins
loope
fbld
adc
xor
pop
pop
sub
rcr
pop
adc
mov
sub
mov
lods
pushf
call
adc
xchg
in
and
jo
or
sub
js
mov
sti
mov
ins
cwde
cmp
push
xlat
jbe
xlat
sub
addr16
scas
adc
xchg
fwait
push
jle
ret
jmp
dec
lock
mov
(bad)
cwde
arpl
pop
dec
scas
scas
pop
rol
or
(bad)
pop
pop
inc
into
stc
aad
sbb
mov
fnsave
into
clc
data16
jle
jns
bound
inc
pop
xor
and
imul
ja
stc
or
or
jne
mov
neg
mov
and
adc
push
aam
jl
out
out
(bad)
into
dec
xor
cmc
sbb
dec
cwde
pop
loopne
cmp
les
jno
ds
clc
nop
adc
(bad)
pop
call
movs
fwait
rcl
stos
nop
sub
sbb
jns
jb
inc
xchg
mov
ds
outs
or
xchg
loope
dec
out
arpl
sbb
push
mov
js
clc
mov
pop
and
sub
dec
mov
jl
popa
adc
dec
into
aam
mov
loop
sbb
inc
jecxz
stc
xor
fidiv
or
mov
pop
cs
push
sub
aad
pop
mov
dec
ins
and
and
or
inc
out
imul
and
mov
mov
sbb
add
sub
pop
mov
ins
sbb
xchg
pop
cld
mov
movs
add
pop
cmp
je
push
loope
cdq
or
xor
ins
les
mov
dec
add
sub
in
jecxz
or
jge
push
les
cmc
push
js
aam
fucomi
mov
test
xchg
sub
and
dec
sbb
sbb
push
icebp
in
dec
add
(bad)
(bad)
cmp
push
mov
dec
push
and
dec
dec
in
mov
std
ror
push
(bad)
popa
inc
cmp
push
jge
inc
mov
jl
or
sahf
fbld
cmp
test
pop
imul
add
inc
mov
idiv
pop
and
scas
jnp
cld
int
fnstcw
mov
dec
dec
bound
test
jb
push
mov
(bad)
js
aas
fstp
xor
dec
cmp
je
je
lds
jecxz
pop
movs
add
pop
(bad)
jge
adc
sub
rol
in
jns
jle
push
mov
fwait
sti
jo
gs
ficomp
dec
add
cmp
mov
cld
sub
arpl
aaa
pop
inc
rol
call
inc
not
sar
mov
mov
or
cwde
dec
xor
fisttp
les
outs
pop
mov
xor
adc
push
les
xchg
jp
cmp
sub
or
mov
xor
add
push
test
push
in
int3
and
dec
xchg
cmp
xchg
scas
(bad)
ss
lds
and
outs
cld
mov
push
arpl
ins
xchg
mov
call
cmps
mov
dec
or
fldenv
sahf
fs
pop
add
(bad)
in
mov
mov
ins
ss
ins
movs
xor
test
or
cmp
mov
daa
mov
dec
jnp
pop
xor
shr
int
out
mov
scas
(bad)
idiv
into
xchg
fabs
fsub
mov
loope
cmp
mov
jbe
cdq
ins
stos
rol
sub
xchg
sbb
movs
cmp
mov
xchg
(bad)
cmp
xchg
push
jp
cmc
mov
in
loopne
mov
mov
into
sub
in
iret
pushf
inc
adc
call
adc
xchg
ds
adc
jmp
mov
sbb
cli
(bad)
retf
ror
ret
pop
hlt
bound
xor
imul
bound
bswap
mov
jo
mov
rcr
add
lods
jl
fnstsw
xor
pushf
add
js
repz
inc
mov
cmc
jecxz
out
cmp
daa
adc
mov
stos
push
into
and
stc
mov
jmp
movs
mov
stos
add
adc
mov
inc
add
cmp
loop
push
add
pop
call
lods
add
sbb
adc
push
les
push
adc
inc
out
movs
aas
and
popf
mov
and
pop
mov
in
mov
sub
aad
inc
ins
pop
jle
in
dec
scas
bound
outs
push
sbb
sbb
lds
fwait
push
popa
in
sbb
cmc
mov
push
das
dec
icebp
cmp
sbb
dec
test
das
cs
js
jnp
xchg
jl
arpl
call
fmul
lock
leave
inc
(bad)
dec
push
push
sbb
jl
pop
jne
aaa
sbb
sub
mov
dec
inc
lods
cmp
retf
dec
out
or
push
cmp
ja
pop
xor
add
lods
mov
cwde
stos
div
push
dec
add
lea
or
fwait
xor
dec
cmp
push
push
xor
adc
jnp
pop
inc
jecxz
fldenv
jbe
fbld
jp
imul
push
int
pushf
call
fldenv
mov
cmps
or
push
repnz
and
inc
cmp
ret
xor
ins
sar
jo
and
mov
or
mov
jmp
mov
cmps
out
dec
pop
mov
(bad)
mov
scas
adc
push
mov
or
add
aad
ficomp
cdq
sbb
pop
rol
int3
shl
in
cmp
push
inc
dec
add
call
je
psubsb
stos
or
adc
or
sbb
(bad)
adc
add
jle
xchg
pop
jmp
cmp
pop
fld
pop
ins
pop
xlat
hlt
ins
sub
mov
test
mov
cmp
inc
jp
and
sbb
dec
cmp
sbb
xchg
mov
fcom
imul
push
out
or
push
jl
ins
ret
fsubr
fild
shl
gs
jp
jb
jae
add
jbe
jae
(bad)
hlt
xchg
stc
imul
jp
jl
loop
adc
jmp
test
and
adc
dec
fst
mov
(bad)
dec
push
pushf
jae
cmp
test
loope
lea
gs
dec
test
scas
retf
dec
cmp
imul
outs
mov
cmp
xchg
sbb
push
xor
mov
jb
inc
hlt
stos
or
clc
push
cdq
mov
push
adc
aad
shr
push
and
stos
mov
rcr
jecxz
and
jecxz
dec
jns
mov
cdq
and
adc
cmp
ret
mov
les
inc
mov
loopne
sub
or
cld
(bad)
aad
add
scas
popf
mov
xor
(bad)
cmps
(bad)
inc
xchg
jmp
(bad)
jle
(bad)
ins
clc
das
in
popa
cld
cmp
fcmovb
mov
jle
pop
inc
xchg
mov
xchg
retf
jno
mov
xchg
add
or
outs
and
mov
pop
lods
rol
fmul
ret
daa
(bad)
sbb
repz
(bad)
cmp
ins
cmp
or
je
push
mov
mov
inc
jmp
sbb
add
add
les
xchg
xor
inc
loopne
out
xor
xchg
stos
lods
jbe
add
shr
cmc
pop
repz
pusha
aad
cmp
mov
add
sbb
xor
(bad)
jle
pop
dec
mov
ret
outs
inc
cmps
(bad)
ins
push
iret
ins
cmc
rcr
out
jno
add
jo
dec
ins
aam
adc
add
xchg
stc
mov
or
jmp
add
dec
jbe
les
mov
iret
jp
inc
pop
int
add
sbb
xchg
(bad)
push
xor
shr
imul
iret
dec
stc
sub
ja
out
sti
or
js
add
xor
sbb
pop
jb
adc
mov
out
data16
sub
push
sub
jnp
xchg
retf
dec
cs
dec
iret
sub
sub
stos
mov
push
mov
mov
sub
xchg
repnz
jnp
jmp
jmp
cli
mov
out
repnz
mov
in
pop
in
test
das
mov
adc
adc
sub
rol
jo
or
movs
fsubr
adc
cmp
mov
mov
add
ins
lea
loopne
imul
cmp
push
fwait
aas
dec
(bad)
cmp
adc
cmc
and
jns
pop
xlat
movs
xlat
mov
and
xor
push
xchg
dec
sbb
fsubr
xchg
pop
ret
jge
xor
fucom
and
daa
(bad)
cmp
jns
leave
inc
jnp
jp
and
jecxz
dec
inc
mov
cmp
mov
fnstsw
scas
rcr
popa
mov
movs
jl
push
ret
pop
adc
pop
jnp
xor
mov
sbb
retf
lods
clc
lods
popa
adc
in
bound
sub
mov
int
mov
jmp
sbb
and
sub
lods
xor
mov
push
aam
xchg
bnd
push
xchg
xchg
pop
jbe
dec
cmp
scas
retf
sbb
mov
mov
or
adc
cmp
xchg
icebp
inc
aad
pop
lahf
es
dec
push
jns
mov
mov
shl
add
and
stos
stos
sub
cmps
es
adc
pop
neg
adc
dec
jno
shl
lds
jp
and
aas
lods
inc
push
sbb
or
cs
dec
cmp
ffreep
into
mov
mov
mov
loope
shl
mov
mov
mov
pop
add
push
mov
xor
es
and
xchg
adc
outs
ins
iret
adc
retf
push
sub
arpl
out
(bad)
fldenv
mov
xor
mov
cmp
mov
push
adc
pop
lds
pop
(bad)
in
jg
mov
push
cmp
xchg
mov
pusha
push
in
dec
jae
popa
aam
adc
enter
or
dec
movs
aaa
and
push
cmps
in
fidiv
dec
rcr
jbe
adc
fisubr
cwde
loope
pop
push
jne
es
mov
or
(bad)
pusha
mov
or
mov
sbb
psllq
aam
cmps
add
mov
add
adc
mov
mov
mov
pop
dec
dec
lods
push
sub
dec
out
outs
sub
int3
mov
mov
cmps
fidivr
stos
hlt
cmps
sub
adc
pop
jne
aaa
leave
pop
fcomp
ins
cdq
push
test
pusha
bswap
fistp
adc
in
loopne
xchg
push
aaa
inc
xchg
jnp
push
inc
cwde
stos
inc
push
aad
(bad)
cmp
out
in
add
adc
xlat
enter
or
and
imul
jns
jp
shl
xchg
jg
in
addr16
xchg
js
adc
outs
mov
icebp
push
(bad)
dec
lea
xchg
or
movs
packssdw
es
fdivrp
mov
add
(bad)
in
jge
sbb
sbb
or
mov
mov
mov
call
jbe
mov
jle
inc
jecxz
loope
xor
mov
ja
call
enter
inc
je
data16
daa
push
xchg
jo
mov
test
push
(bad)
fwait
mov
out
pop
inc
ja
push
dec
std
cmps
push
mov
add
lock
nop
pushf
lods
push
sub
mov
mov
jnp
or
cwde
pop
fild
cmp
xor
outs
in
sar
add
out
dec
or
inc
inc
sub
jo
push
push
out
clc
outs
or
mov
cs
cmp
cdq
(bad)
ins
popa
or
sar
pushf
jae
dec
jecxz
sub
push
ror
outs
pop
ds
rcr
pop
push
jae
xchg
ficom
xchg
lds
mov
jae
dec
xlat
pushf
bound
repz
inc
dec
aaa
cmp
pop
jg
scas
outs
dec
xor
pop
and
call
pushf
xor
xchg
or
jnp
daa
adc
inc
jmp
jl
adc
push
or
push
retf
in
out
fcmovbe
and
sub
repz
jge
outs
aas
scas
jmp
or
fdivr
xor
xor
cmp
sbb
push
sub
or
jmp
test
adc
vpand
int3
mov
push
cs
mov
ss
add
fisttp
or
xor
push
sbb
pop
jp
sti
pushf
xchg
ficom
push
mov
lds
call
cli
xor
pop
jne
add
ret
ret
and
jbe
lock
fs
pop
sbb
sbb
push
test
jg
test
jmp
sub
xchg
mov
daa
nop
push
jmp
mov
lods
mov
mov
cmc
adc
in
fs
sti
cmp
stos
lds
cmp
shl
pop
pusha
sbb
in
in
push
mov
and
push
jno
dec
mov
in
fisttp
(bad)
es
popf
mov
xchg
ja
push
jg
push
js
sbb
fld
pop
ret
sbb
mov
cwde
cmp
ins
or
inc
xchg
bound
xlat
cmp
sub
outs
in
add
xor
ds
xchg
std
jl
xor
and
sub
sub
or
pop
add
mov
push
daa
data16
cs
cwde
mov
lahf
inc
out
(bad)
call
jb
jmp
mov
mov
fcmovnb
call
adc
push
mov
sbb
and
fnsave
js
aad
imul
or
cmp
sbb
mov
ins
fcomp
and
jle
fs
xchg
mov
dec
mov
or
nop
jle
xor
inc
retf
sub
xchg
push
and
rdpmc
ficomp
movs
cmp
ins
xchg
fimul
or
jge
push
in
cmp
sub
fld
sahf
repz
or
add
stc
or
xchg
inc
scas
xchg
pop
or
push
cld
aad
add
dec
test
cld
in
(bad)
(bad)
or
and
add
int
pop
imul
mov
pushf
mov
jge
sbb
dec
mov
addr16
inc
pop
sub
je
cmp
adc
ror
call
and
scas
push
pop
mov
dec
mov
dec
repnz
dec
clc
jne
mov
or
ins
rol
and
das
or
lods
sbb
sub
clc
pop
dec
clc
retf
pop
ins
adc
inc
les
or
push
inc
push
mov
dec
popf
mov
stc
sub
pop
or
cmp
inc
push
(bad)
pop
xchg
mov
or
(bad)
fild
cmc
icebp
out
popa
adc
(bad)
ins
or
xchg
sub
lods
inc
repnz
or
pmaxub
sub
addr16
mov
push
or
dec
pop
js
push
sbb
syscall
xchg
iret
push
push
jmp
xor
mov
inc
mov
add
rol
fdiv
(bad)
and
mov
sbb
jo
xchg
out
and
jb
mov
sbb
shl
pop
xor
clc
cwde
pop
mov
cmc
sti
inc
test
jl
dec
into
mov
(bad)
push
jle
adc
into
repnz
push
cs
rol
xor
out
mov
sbb
and
jl
aaa
dec
xchg
in
fld
call
xchg
fidiv
add
(bad)
fmul
xor
sub
fcomp
pop
inc
sub
(bad)
dec
adc
ins
push
leave
jbe
dec
repnz
pop
push
fcmovne
cmp
sahf
cmp
push
sbb
mov
leave
pop
xchg
mov
shl
pop
jnp
pop
xor
jmp
jle
jp
mov
mov
test
and
mov
jb
mov
scas
mov
frstor
dec
add
pop
dec
xor
loop
xchg
out
mov
pop
mov
data16
mov
xchg
fnstenv
xchg
nop
pop
or
push
push
jno
push
mov
push
hlt
add
leave
mov
popa
shr
mov
push
ja
and
out
les
adc
add
ds
xchg
lea
jl
mul
jno
xchg
push
shr
sbb
fucomip
scas
test
ins
xchg
jecxz
mov
lods
sbb
popf
and
cmc
enter
push
int
xlat
cs
mov
mov
into
ret
mov
and
iret
rol
or
push
iret
shr
enter
and
int3
lods
xchg
popf
fmulp
fld
ins
fmulp
lahf
xchg
mov
pop
out
adc
mov
imul
mov
stos
xchg
fdivr
retf
mov
or
out
popa
and
jecxz
mov
stos
mov
xchg
icebp
nop
dec
lahf
fdivr
mov
sbb
ficomp
xchg
sti
jns
adc
mov
cmp
jmp
dec
pusha
jecxz
out
loope
lds
retf
pusha
jo
aam
push
repnz
test
ss
cmps
push
repnz
adc
(bad)
aad
cmp
sub
add
cmps
fild
rol
daa
push
xlat
fild
inc
outs
lahf
inc
into
jecxz
mov
xchg
in
or
push
jmp
ins
inc
lea
dec
add
lds
and
popf
adc
test
cmps
mov
adc
mov
xor
xchg
(bad)
and
jg
setnp
push
lea
sub
bnd
out
pop
leave
fistp
cmp
hlt
or
pusha
pop
lea
sub
fsub
fwait
dec
push
into
push
punpcklbw
ret
mov
cmp
std
pusha
or
push
and
(bad)
mov
daa
stc
lahf
fsubr
add
imul
pop
jmp
dec
stos
mov
adc
or
pop
pop
add
dec
out
stc
inc
scas
enter
outs
ss
mov
sub
mov
call
sub
mov
test
and
cmp
(bad)
sub
inc
je
xor
jmp
cwde
xchg
dec
and
imul
rcr
inc
test
cmps
shl
sbb
leave
xchg
hlt
pop
mov
shl
mov
addr16
fwait
xor
stos
push
and
not
jp
mov
jmp
call
retf
adc
rcl
dec
cmps
cwde
sbb
add
cmc
push
and
fist
pop
jmp
lods
lock
push
sbb
in
test
push
xor
adc
lahf
cs
sbb
mov
lods
ins
jp
sbb
dec
cmp
push
pop
add
es
or
or
sbb
out
cdq
leave
imul
leave
add
rcr
inc
push
(bad)
shld
fwait
cmp
jbe
sub
mov
and
sbb
(bad)
in
imul
sbb
jns
and
xchg
mov
or
mov
xor
mov
test
ror
push
lds
cwde
push
pop
add
ins
cli
xor
movs
int
and
daa
mov
fucomi
mov
movs
fistp
push
dec
cwde
mov
sbb
or
sub
test
sbb
mov
into
xchg
xchg
pop
test
xchg
shl
imul
and
(bad)
cwde
push
xchg
xchg
ja
cld
mov
xchg
sar
jne
aas
shl
pusha
cmps
fucom
fcom
leave
pop
cmps
daa
or
pop
ret
or
and
xor
dec
xchg
aam
push
add
or
int3
je
mov
cmc
add
adc
push
jbe
xlat
sub
or
add
sbb
cmps
mov
add
ja
into
and
pop
cmp
in
sbb
inc
cdq
jns
fstp
mov
jno
outs
aad
loopne
inc
out
call
mov
jp
push
enter
cmp
jb
xor
arpl
push
loopne
out
ret
fadd
mov
cs
mov
call
push
sbb
push
xchg
push
mov
push
bnd
cli
ds
jae
jmp
cmp
mov
jmp
movs
sbb
or
add
ja
test
jo
mov
ror
pop
push
dec
jae
xchg
cmp
sub
aas
push
(bad)
(bad)
sbb
fisubr
pop
imul
xchg
loope
cmp
movs
push
jns
mov
add
test
ret
bound
mov
(bad)
nop
cmp
out
mov
aam
sbb
lds
mov
pusha
pop
sub
fild
(bad)
xchg
shr
cmc
push
mov
iret
aaa
clts
mov
sub
push
push
loope
cmp
add
arpl
dec
js
sti
sub
and
adc
cmps
push
stos
cmp
pop
call
sub
pop
retf
outs
mov
call
pop
dec
inc
dec
stc
popa
fimul
jp
test
mov
mov
call
mov
aam
in
daa
push
jge
jbe
xor
shr
pop
or
add
sbb
push
ins
arpl
xchg
and
jne
stos
and
sbb
sub
xor
mov
daa
xchg
test
retf
cld
daa
add
xchg
cmps
xor
jno
push
and
xchg
(bad)
pop
leave
adc
pop
jmp
pop
ins
mov
inc
inc
mov
mov
mul
push
ret
sbb
jne
sbb
int
dec
fstp
clc
push
(bad)
data16
lock
movs
ror
adc
cs
lods
sub
mov
push
lahf
jmp
fs
dec
cmps
jno
pop
ins
xor
inc
scas
xchg
popa
aas
cmps
pop
mov
aas
scas
xor
ins
dec
dec
dec
adc
cdq
cmc
rcl
idiv
ins
and
mov
xchg
inc
and
or
inc
fmul
imul
inc
and
sbb
sahf
and
jp
pop
mov
mov
call
iret
stos
icebp
cmp
mov
sub
mov
stos
daa
inc
movs
sub
rol
fidiv
stos
xor
mov
mov
mov
add
fst
adc
in
jo
xor
fst
dec
xchg
and
sbb
(bad)
rcr
xchg
gs
mov
in
mov
add
cli
mov
push
xor
and
jmp
pop
in
push
mov
adc
mov
js
add
lds
(bad)
mov
mov
pop
push
retf
push
inc
jmp
mov
and
mov
scas
sub
sahf
and
ret
xor
sub
push
xor
out
ins
sbb
cld
(bad)
dec
outs
push
sahf
pop
pop
sbb
mov
lods
aaa
jmp
dec
std
fidivr
fs
cld
hlt
retf
push
mov
add
jns
inc
dec
xlat
dec
dec
lods
mov
mov
xchg
out
add
ins
sbb
std
into
ror
push
daa
scas
mov
mov
mov
adc
repnz
mov
inc
adc
call
sti
out
repnz
(bad)
or
inc
cmps
adc
scas
inc
loope
scas
inc
inc
lds
jo
sbb
int3
ja
(bad)
rcl
cmp
xchg
pop
ins
and
lods
inc
fs
jnp
mov
dec
sub
stos
mov
jl
outs
shl
fisttp
mov
or
dec
mov
pop
or
pop
test
jns
sbb
dec
mov
cmp
mov
mov
cwde
pop
or
arpl
jno
out
movs
dec
add
lds
movs
rol
ins
sbb
jmp
hlt
mul
and
jmp
adc
lods
mov
and
cmps
out
and
lods
cmp
shl
fwait
clc
fucomip
sti
inc
cmp
cmps
mov
out
pop
retf
xchg
fnclex
sub
cmp
dec
retf
lds
rcr
test
jae
push
sar
xor
movs
lahf
dec
data16
jp
or
mov
lds
out
or
xchg
repz
adc
lea
push
fdiv
lods
movs
push
push
add
add
sbb
pop
shr
adc
jb
int3
cld
dec
nop
cmps
jl
jmp
push
loope
jp
mov
in
fdiv
popa
push
mov
pushf
jmp
inc
fdivrp
sbb
ins
inc
and
dec
inc
fimul
(bad)
out
sbb
xor
(bad)
mov
je
mov
addr16
dec
cs
rcl
jmp
loope
mov
pop
adc
test
xor
scas
xchg
jmp
push
jo
hlt
add
nop
sub
mov
call
es
pop
pop
adc
ror
in
lods
fadd
jmp
fld
aaa
pop
sbb
dec
lea
popf
es
sti
ret
mov
mov
sbb
mov
xor
sar
push
or
in
aad
popa
fcomp
or
add
shl
shr
pop
and
push
mov
mov
dec
pop
(bad)
(bad)
hlt
pop
daa
jmp
adc
jno
out
ss
xor
repnz
cmp
and
sbb
cli
mov
jae
aam
stc
loopne
and
in
es
mov
rol
inc
adc
sub
sbb
lahf
enter
sti
push
call
aaa
push
mov
or
(bad)
ror
sub
arpl
sbb
and
pop
int3
scas
dec
push
movs
mov
mov
rdtsc
sbb
bound
iret
imul
cmp
sahf
fmul
pushf
and
int
and
or
or
jmp
xchg
movs
xor
test
fisttp
or
pop
mov
mov
imul
ja
mov
xchg
pop
fcomp
loope
aas
mov
(bad)
js
test
inc
stos
push
mov
out
pop
aam
or
int3
mov
cmc
xchg
movs
sub
fmul
xchg
aad
push
lods
mov
out
pop
jne
aam
push
aas
mov
and
mov
mov
add
mov
mov
mov
lds
push
mov
rcl
mov
pop
or
call
test
in
push
sub
movs
and
xlat
aad
arpl
push
test
outs
lods
jo
lods
test
mov
mov
jp
neg
push
cmc
popf
test
imul
inc
sub
mov
in
jmp
mov
cwde
pop
add
jbe
rcl
and
fisttp
pop
popf
push
ins
mov
in
in
push
cmp
and
xchg
mov
movs
aam
xor
dec
pop
and
jne
push
xchg
mov
clc
test
sub
pop
repnz
jg
popf
fiadd
movs
clc
cwde
cmp
retf
lods
into
xor
stc
nop
retf
stc
popf
xor
div
leave
cmps
ret
push
pop
adc
shl
xchg
sbb
dec
dec
push
xor
dec
jnp
jb
or
adc
cs
int
pop
xchg
imul
mov
xchg
mov
(bad)
cmps
sub
fucomi
test
enter
mov
imul
mov
out
in
psubq
test
adc
and
push
(bad)
mov
out
lds
shl
rcr
mov
test
in
sub
xchg
jmp
mov
xchg
or
push
mov
leave
or
xor
jno
ins
push
cwde
mov
loope
push
adc
iret
and
(bad)
lds
test
enter
loopne
aas
fldenv
xor
mov
mov
add
rcl
fild
popf
and
mov
(bad)
(bad)
mov
xchg
inc
mov
inc
push
or
imul
ja
mov
mov
popa
sbb
cs
adc
stc
add
lahf
fs
int
jecxz
pop
mov
xor
cmps
out
cld
sbb
inc
mov
pop
xchg
push
mov
outs
push
jmp
dec
gs
mov
mov
pop
adc
or
or
xchg
and
inc
push
sbb
popa
cmp
and
cli
jp
pop
repnz
jae
repnz
mov
mov
mul
sbb
push
ds
outs
jmp
icebp
push
aas
inc
mov
cld
fisub
sub
repnz
mov
pop
push
(bad)
sti
push
sbb
inc
cdq
mov
sbb
cmp
adc
jno
push
and
cmp
out
sbb
std
sbb
push
fdivr
lods
sub
mov
lods
mov
fiadd
mov
lods
js
mov
test
inc
std
jmp
das
icebp
or
adc
daa
cwde
pop
ror
and
cmp
mov
pop
inc
ss
popf
push
xor
or
adc
out
dec
(bad)
sub
cmp
addr16
ret
jmp
nop
mov
gs
clc
faddp
rol
xor
cwde
iret
fsubr
pop
popa
jmp
mov
ins
jo
xor
out
jle
inc
xchg
test
jns
mov
dec
sbb
addr16
mov
in
xchg
push
xchg
mov
into
or
xor
sbb
(bad)
sub
mov
cmp
call
jmp
mov
or
in
leave
push
cmps
sub
mov
sbb
pop
or
push
pop
mov
mov
pop
add
mov
fsubr
cwde
(bad)
repz
sbb
push
rol
or
jge
jmp
enter
push
push
adc
push
jns
mov
cmp
and
mov
push
dec
(bad)
mov
pop
addr16
fist
mov
add
mov
popa
pop
fadd
mov
xchg
push
std
sbb
jp
cmc
mov
popa
and
fmulp
outs
jmp
cwde
jo
(bad)
pop
je
test
jg
pushf
cmp
jbe
mov
sub
hlt
push
sub
fld
jb
adc
stc
cs
sbb
ss
mov
sbb
pop
inc
dec
clc
dec
pop
pop
in
out
pop
push
cmps
add
jp
je
data16
mov
or
scas
daa
jle
sar
mov
loope
jmp
adc
cmp
fild
adc
adc
int3
add
lahf
jmp
add
in
mov
dec
inc
movs
add
(bad)
cmps
pop
std
clc
call
sar
cmp
stos
nop
popa
inc
or
lods
retf
push
fdivr
les
cmp
or
add
cmp
push
mov
int3
ja
(bad)
sbb
dec
add
sbb
pop
sbb
test
imul
aaa
cmps
fadd
xlat
lods
sub
dec
shl
pop
jmp
add
mov
loopne
push
adc
inc
xchg
and
mov
dec
push
push
das
(bad)
sbb
movs
cmp
aad
inc
pop
aad
popa
jmp
in
enter
cmp
xchg
xchg
lds
arpl
and
mov
inc
mov
jae
imul
call
inc
fstp
mov
xor
ret
dec
mov
cdq
shl
xchg
or
add
mov
iret
inc
daa
pop
dec
inc
cmp
stc
sub
xchg
sbb
call
cmps
pop
pop
inc
les
aam
add
and
mov
dec
in
jp
outs
xchg
and
add
neg
int
aas
sbb
(bad)
mov
jle
cmp
movs
and
ret
pushf
ss
jmp
jbe
(bad)
push
mov
aaa
adc
push
pop
ins
cmps
push
cmp
sub
repz
inc
cmp
mov
mov
int
ins
xchg
shl
fsubr
(bad)
dec
xor
mov
mov
jl
in
jg
cld
idiv
push
outs
xor
cmovs
add
jmp
cmps
out
cmp
mov
sbb
cmp
jg
sti
cmp
or
mov
repz
pop
cmp
shr
repz
je
movs
out
daa
mov
outs
icebp
sub
push
dec
stos
and
cdq
popf
cli
test
adc
fld
(bad)
nop
fdivr
clc
xchg
outs
in
add
ins
sub
mov
ins
imul
sub
sbb
mov
shr
fcom
in
outs
cdq
push
sbb
jo
xlat
es
mov
add
test
es
adc
pop
mov
popf
sub
add
lock
es
xchg
xchg
jmp
mov
loope
ins
jl
pop
fistp
loope
(bad)
jge
sbb
jmp
xor
add
pusha
pushf
into
jp
je
or
mov
mov
call
mov
dec
sub
inc
mov
dec
daa
or
hlt
movs
and
in
push
fmul
inc
sar
push
loope
mov
rcl
in
jne
jo
adc
pop
lods
mov
jbe
push
rol
xchg
psrlq
and
inc
das
cmps
rol
mov
jbe
jbe
push
int3
movs
lods
dec
push
mov
ficom
imul
test
jmp
and
fiadd
add
mov
xor
out
leave
dec
shr
and
sbb
jg
push
mov
xlat
mov
push
xor
xor
outs
or
out
xchg
push
imul
fiadd
imul
sbb
aad
in
adc
mov
movs
scas
push
int
and
fsubr
mul
mov
js
cmp
sub
mov
into
loop
pop
mov
jmp
popf
mov
mov
xor
mov
add
sub
js
jmp
inc
into
mov
aam
loop
sub
inc
push
cmc
xchg
xchg
push
fs
jns
fwait
punpcklwd
iret
mov
xor
push
fmul
jecxz
loopne
mov
dec
iret
mov
std
addr16
nop
sbb
enter
sbb
inc
cmp
pop
out
idiv
push
cld
(bad)
fsubr
inc
je
add
retf
push
jg
adc
out
lods
inc
fdivrp
jbe
pushf
push
mov
shl
ror
push
test
dec
test
inc
mov
rcr
das
popa
pushf
dec
pop
test
sub
cmps
int3
scas
es
push
mov
or
sub
movs
xor
pop
adc
pop
enter
and
das
int3
aam
imul
sti
adc
jl
mov
push
imul
enter
push
or
in
pop
leave
jecxz
stos
cmp
addr16
test
in
cs
push
les
sub
mov
mov
pop
out
das
adc
xor
adc
out
fisubr
(bad)
lahf
xor
in
shl
fisttp
sar
cmp
js
mov
loop
mov
adc
das
les
sbb
jno
movs
xlat
mov
xchg
adc
lods
xor
xchg
cmp
outs
loopne
in
dec
enter
mov
(bad)
aas
and
pop
ret
adc
push
xchg
gs
pop
fsub
std
cmps
xor
pop
add
sub
scas
ret
(bad)
pop
rcl
pop
mov
bound
xchg
mov
sbb
sbb
lahf
dec
push
jl
loop
mov
fisub
hlt
je
mov
cmps
(bad)
out
repnz
dec
in
in
xor
or
adc
xor
shr
scas
push
fisttp
dec
or
arpl
or
xor
dec
push
jb
into
leave
(bad)
adc
pop
mov
sbb
movs
loop
mov
ror
(bad)
ins
inc
push
inc
pop
imul
push
mov
or
cmp
sti
movs
or
mov
rol
dec
jbe
jno
je
pop
daa
pop
push
dec
and
and
cmp
xlat
iret
cli
test
rol
add
xor
in
(bad)
pop
in
jl
cmps
adc
xchg
mov
(bad)
mov
cmp
outs
sbb
out
xor
retf
pop
pop
les
xor
and
inc
cmp
cdq
cmp
or
cld
neg
or
jl
in
loopne
fbld
push
xchg
jmp
mov
push
movs
sub
push
xchg
in
push
pushf
mov
or
pop
jb
dec
add
fwait
cmp
out
push
jne
mov
inc
js
pop
push
add
(bad)
adc
test
inc
xor
dec
sbb
jp
xlat
pminub
and
cli
jnp
sbb
jl
dec
cmp
arpl
or
sub
lea
sahf
cld
lock
ins
mov
in
sbb
out
pop
(bad)
add
sub
sbb
mov
ret
inc
les
scas
mov
sahf
repz
mov
push
mov
sar
mov
out
xor
push
test
(bad)
sbb
jae
cmp
cdq
adc
clc
ret
jb
sub
pop
lods
jp
xor
test
enter
mov
sahf
addr16
shl
neg
and
adc
imul
mov
out
dec
adc
add
cmp
sub
les
adc
jl
leave
pop
cmps
mov
aad
and
push
xchg
and
dec
pop
sub
fstp
push
scas
(bad)
mov
shr
fcmovne
and
inc
repnz
sub
popa
inc
and
lock
and
rcr
shl
pusha
and
cs
iret
retf
pop
xchg
jp
xchg
lods
cs
stos
(bad)
xor
fisttp
js
dec
scas
pop
jno
test
sbb
mov
adc
jne
jecxz
add
xchg
push
pushf
stos
loop
(bad)
jne
popa
cmp
sub
aam
fwait
js
add
(bad)
stos
fstp
mov
out
xlat
test
sub
mov
fwait
mov
fmul
mov
sbb
fisub
cmp
xchg
adc
sub
or
sahf
push
stos
mov
jmp
jns
cmps
(bad)
xlat
jp
mov
enter
not
mov
cmps
or
in
adc
int
cmp
and
mov
mov
(bad)
fdivr
fs
and
dec
and
mov
jg
scas
sar
and
adc
leave
dec
adc
fucomi
daa
lods
jns
cmp
aam
mov
fistp
jp
arpl
and
or
daa
(bad)
sbb
push
pushf
or
xor
jle
add
(bad)
ds
dec
call
xor
aas
cmp
lods
cmp
mov
jmp
jecxz
pop
movs
aam
xor
aad
shr
mov
pop
xchg
xchg
popf
push
push
adc
mov
cmp
imul
test
retf
mov
or
adc
push
iret
mov
add
or
push
pop
dec
test
mov
adc
rol
mov
adc
fld
cmp
in
mov
mov
adc
mov
jne
(bad)
adc
es
lods
inc
sub
or
xor
xor
test
cdq
push
push
lock
and
js
sbb
pop
sbb
adc
aaa
iret
test
loop
test
or
add
nop
push
fcomi
int
add
mov
inc
mov
push
pop
pop
inc
fdiv
(bad)
push
retf
outs
cld
test
cmp
jae
adc
rol
js
fcmovnbe
lds
shl
sub
cmc
bound
fild
sub
sbb
out
mov
push
loop
in
jno
hlt
lods
jno
add
pop
jae
jns
ret
inc
xchg
adc
add
iret
cmp
fistp
dec
mov
loopne
mov
push
push
call
adc
mov
mov
fnsave
inc
sub
or
lea
cmp
pop
pop
pop
mov
imul
div
ds
push
adc
xor
hlt
lea
(bad)
jl
xchg
aaa
inc
mov
push
nop
push
xchg
out
ja
in
mov
push
nop
test
repz
cld
ins
iret
(bad)
fdiv
mov
adc
aas
pushf
xchg
rol
mov
iret
pop
call
aad
call
push
mov
push
in
(bad)
xchg
imul
xor
dec
cli
stc
(bad)
cld
inc
cli
xchg
jle
cmc
out
add
sbb
xchg
bound
push
push
push
and
jmp
pop
xchg
cmps
xor
pop
push
cmp
jns
popa
stc
fsubrp
ins
sbb
in
sbb
sub
and
ror
mov
xor
cmps
xchg
outs
ret
mov
js
mov
scas
dec
xchg
jle
sub
in
and
retf
div
(bad)
je
call
and
jle
jae
in
sub
repnz
and
mov
xchg
sbb
mov
mov
iret
int
or
sbb
inc
and
dec
aas
cmovle
mov
xchg
jmp
clc
xor
sub
les
stos
or
xchg
(bad)
mov
(bad)
xchg
sub
xor
ret
jnp
dec
jmp
jb
add
repz
push
add
sbb
adc
loopne
xchg
daa
call
cmc
cmp
jae
mov
outs
repnz
fstp
movs
add
adc
loopne
xor
sub
loopne
adc
shl
hlt
cmp
data16
mov
xchg
push
(bad)
hlt
add
inc
pop
push
pusha
sbb
add
data16
sub
mov
pop
inc
push
jmp
mov
xor
sahf
add
inc
xor
sbb
mov
push
sub
mov
mov
(bad)
sub
fidivr
adc
mov
mov
inc
pop
ret
call
adc
fcomp
outs
loope
and
xor
push
jle
pop
lds
out
cs
in
mov
loop
xor
ins
mov
mov
push
adc
push
jno
stc
push
xchg
sbb
adc
cwde
aas
add
gs
mov
sub
mov
lods
adc
cmp
jo
vminss
test
loop
movs
push
mov
and
adc
test
ds
mov
(bad)
fldenv
sbb
sbb
sub
sbb
into
in
xor
test
jbe
iret
retf
rcr
add
and
jle
mov
xchg
iret
jle
pop
and
adc
cld
adc
cmp
or
dec
shl
mov
gs
add
pop
sub
push
fdiv
push
inc
xor
inc
(bad)
test
mov
nop
xchg
mov
cmp
cmps
cs
xchg
mov
sbb
xor
jmp
popa
jl
data16
out
shr
sar
out
ds
mov
imul
shl
cmp
mov
data16
mov
(bad)
xor
cmp
dec
pop
iret
enter
fimul
jmp
push
das
sub
dec
mov
cmps
adc
out
rol
adc
sbb
into
inc
mov
nop
mov
or
popf
cmp
mov
xor
out
scas
xor
stos
in
pop
cwde
sbb
sub
outs
imul
pop
icebp
mov
pop
jl
das
outs
and
sbb
jns
aad
cmp
pop
mov
stos
in
(bad)
jmp
imul
fidiv
std
xchg
sub
ins
pushf
mov
lea
pop
jbe
pop
shr
int
inc
ins
sub
cli
fidiv
rol
and
xor
cld
mov
cld
xor
mov
fimul
or
push
xchg
lahf
cs
inc
sub
ret
xor
int
neg
mov
adc
or
imul
jo
push
mov
xor
daa
jnp
retf
fcomip
dec
pushf
mov
jbe
xchg
push
xor
mov
int
dec
les
cli
neg
jae
fcom
or
sub
aas
and
int
rcr
fsubrp
dec
and
xor
sub
out
dec
arpl
xchg
(bad)
xor
outs
sub
push
fld
adc
loopne
stos
jo
and
in
xcrypt-ctr
cmps
lahf
mov
or
dec
cwde
sub
push
popa
iret
jo
or
in
bound
ret
sub
ins
(bad)
adc
sbb
fnsave
or
fwait
lods
aad
sbb
mov
inc
sbb
dec
(bad)
add
or
push
sbb
ja
xor
fadd
int
cmp
jo
es
adc
mov
out
outs
cli
in
and
push
add
xlat
xchg
mov
adc
xchg
xor
icebp
xor
add
inc
leave
jno
pop
ror
stc
adc
outs
jno
jae
cmp
xor
jnp
call
pop
sub
stos
and
mov
mov
icebp
dec
xchg
xor
sub
xchg
das
mov
mov
pop
inc
xchg
icebp
xor
cld
inc
clc
mov
jecxz
imul
hlt
pop
loope
sub
fidiv
fsubr
push
es
push
popf
fs
loopne
fisub
outs
ret
dec
add
std
cmps
mov
and
cli
add
lods
xor
mov
cmp
pop
inc
out
inc
clc
test
or
movs
sbb
dec
(bad)
outs
(bad)
cmp
(bad)
mov
cmp
mov
sti
out
adc
pop
or
lock
outs
xchg
or
pushf
cmps
mov
cmp
add
mov
dec
add
ins
xor
in
xor
pop
mov
movs
lock
retf
test
mov
pop
pop
pop
test
sbb
sbb
pop
out
cmp
adc
in
mov
mov
lods
sbb
add
mov
call
and
or
iret
clc
(bad)
repnz
mov
sub
outs
mov
cmc
jns
or
popf
test
push
call
pusha
push
add
repz
shl
int3
mov
hlt
inc
dec
arpl
ins
push
mov
jmp
and
iret
fcmovne
into
rcr
enter
scas
add
dec
stos
add
test
xor
(bad)
int3
rol
mov
or
adc
idiv
stos
xor
mov
mov
cmp
shr
cmp
sub
(bad)
aas
fmul
mov
shr
mov
pusha
mov
sbb
aas
dec
push
aaa
lds
pop
jmp
jecxz
bound
(bad)
xor
sub
ret
(bad)
arpl
xchg
xor
popf
(bad)
jno
iret
shl
push
pop
inc
sub
jp
ror
loope
push
dec
mov
lea
push
stc
out
sbb
loopne
test
push
push
jmp
lods
std
(bad)
cmp
movs
mov
jno
xchg
dec
pop
(bad)
cmp
ds
jp
mov
shl
mov
daa
scas
push
jmp
mov
mov
scas
scas
pop
test
cmp
push
cmps
pop
xchg
movs
pop
sbb
sub
call
pop
stos
sub
or
jg
mov
mov
adc
inc
hlt
(bad)
adc
pop
jbe
test
and
adc
sub
sti
dec
sbb
mov
or
pop
shl
jno
push
mov
mov
shr
mov
sbb
and
idiv
test
clc
dec
sar
nop
adc
fcmovnu
adc
dec
push
loope
hlt
xor
sub
jo
dec
pusha
ins
fdiv
std
push
fs
ins
and
mov
in
jo
stos
fild
adc
push
ret
mov
imul
jb
cs
mov
lea
stos
in
cmp
clc
repnz
mov
fsub
add
sti
adc
jmp
add
mov
stos
cwde
sub
ins
add
cmp
and
xchg
pop
jb
pushf
dec
or
lds
pop
rol
pop
cmp
loopne
shl
test
clc
arpl
dec
jecxz
xchg
jge
cmp
inc
xor
je
fadd
mov
adc
mov
jp
and
jl
mov
pop
mov
sub
not
or
lock
inc
dec
out
shl
retf
add
sbb
in
add
lods
cmc
retf
and
push
ret
cdq
cmc
or
(bad)
addr16
push
call
repnz
loope
jge
and
movs
sub
mov
fisub
mov
outs
jmp
dec
pop
scas
mov
add
xchg
test
call
cmp
adc
mov
mov
out
and
(bad)
sbb
mov
and
aas
scas
(bad)
cdq
and
(bad)
xor
adc
loopne
push
test
xchg
add
push
adc
jg
dec
loop
and
in
iret
scas
mov
jns
dec
inc
je
sub
sub
push
mov
push
test
xchg
and
das
icebp
lods
mov
cmp
int3
cli
pop
js
mov
lods
pop
(bad)
leave
mov
imul
push
ret
add
lea
test
call
sub
pop
pop
daa
xor
shr
mov
and
jl
jae
mov
pop
sub
sub
push
fidivr
mov
mov
xor
outs
fsubr
test
(bad)
jmp
clac
add
sub
stos
xchg
push
rcr
mov
inc
stos
xchg
(bad)
pushf
ds
xor
retf
sub
jp
push
sub
mov
adc
mov
(bad)
adc
ins
dec
movs
mov
mov
adc
pop
iret
repz
sti
xchg
add
fisttp
and
movs
ins
add
adc
shl
jo
jl
repnz
sar
xchg
inc
fisttp
xor
and
jae
or
jno
adc
inc
xor
push
movs
inc
jge
cmp
mov
add
retf
scas
sar
sbb
imul
popa
fsub
xchg
sub
enter
add
jge
jo
fs
add
or
push
pop
in
lock
jmp
or
mov
popa
mov
jnp
lock
sbb
dec
int3
xor
xor
retf
push
jg
mov
mov
jp
cdq
push
pusha
test
cmp
and
lock
mov
call
or
and
les
cmp
into
push
fmul
jne
mov
(bad)
mov
cs
sbb
out
xchg
xor
push
xor
pop
xor
mov
das
loopne
imul
aad
cmps
ins
(bad)
in
push
pop
je
mov
jecxz
sub
xchg
ja
dec
push
leave
les
pop
push
pop
add
or
pop
ins
and
xchg
imul
inc
cwde
inc
jns
sub
retf
sub
jle
nop
out
pop
pop
sub
inc
fld
jp
dec
pop
adc
out
shl
push
shl
rcr
sbb
mov
sbb
dec
sbb
and
mov
rcl
push
or
jmp
inc
mov
and
jp
or
pop
mov
xor
outs
add
push
ds
pop
add
jge
mov
aam
push
cmp
aam
ins
bts
pop
dec
call
fbld
mov
dec
and
fadd
and
popa
fmul
sub
sub
lods
out
inc
(bad)
push
mov
mov
xlat
es
mov
sti
in
pshufw
adc
xor
into
sbb
mov
test
ds
xchg
sub
inc
adc
push
and
in
iret
cdq
std
push
push
movs
test
out
pop
push
xchg
adc
popa
inc
sub
add
scas
cwde
and
data16
leave
sbb
jmp
in
stc
dec
test
std
push
and
inc
retf
jnp
inc
cs
inc
test
pop
push
add
in
pop
data16
(bad)
comiss
(bad)
jmp
mov
popf
cmps
xchg
movs
enter
cs
hlt
cdq
ss
adc
push
add
dec
retf
mov
add
xlat
arpl
cld
xor
cmps
ja
outs
shl
fsubr
int
hlt
adc
pop
into
call
sbb
and
ds
and
jmp
adc
jnp
fdivrp
sbb
push
mov
iret
xchg
repnz
adc
lea
ins
cmc
xor
loop
pop
mov
test
mov
xor
retf
in
cmp
lods
jne
out
nop
cmp
cmp
test
mov
(bad)
into
cld
test
mov
cld
mov
int
push
sub
xchg
xchg
or
data16
mov
mov
cwde
gs
pop
sub
stos
adc
clc
mov
sub
and
stc
mov
lds
and
dec
nop
xor
xchg
pushf
jo
dec
sahf
retw
mov
ins
and
out
lods
push
mov
pop
icebp
aas
sbb
pop
movs
push
jmp
push
cmps
pop
push
push
dec
les
je
clc
mov
cmp
call
in
push
(bad)
cld
and
mov
aaa
pop
dec
mul
daa
sbb
aaa
push
sbb
mov
cmp
cwde
cwde
xor
iret
mov
shl
lds
inc
xor
mov
cmp
ror
pushf
mov
call
sbb
mov
push
loope
cmps
inc
ins
add
sbb
sahf
movs
fidiv
jmp
dec
popa
(bad)
popf
ins
jbe
iret
test
out
ins
aad
xchg
(bad)
mov
mov
sbb
leave
les
loopne
std
stc
mov
daa
cmovg
movs
add
add
js
rol
cmp
pop
rcr
add
fs
add
inc
addr16
add
(bad)
mov
mov
cld
cmp
repz
mov
iret
add
arpl
pop
push
push
sbb
pop
jmp
inc
pop
les
fimul
xchg
jo
jle
sbb
daa
clc
setno
mov
rol
inc
cmp
fidivr
sbb
(bad)
icebp
xchg
jne
mov
mov
dec
bound
out
div
jle
cwde
out
adc
pop
mov
repz
test
movs
mov
out
fsubr
ins
sub
dec
pop
lods
stos
fnstsw
ret
cmp
push
mov
mov
sbb
rol
jne
in
std
jmp
fdivp
sub
and
or
adc
mov
icebp
push
clc
loop
or
je
cmc
repnz
mov
js
sub
pop
inc
inc
mov
cmp
sar
ja
push
loope
xchg
adc
inc
imul
in
dec
sub
adc
call
popa
jecxz
fisubr
sub
es
pop
dec
cli
mov
dec
xchg
add
jmp
adc
adc
push
je
test
addr16
iret
fcmovnbe
xchg
arpl
retf
(bad)
and
mov
popf
push
sahf
ins
jmp
cmc
stos
ret
adc
dec
lahf
dec
xor
mov
stos
adc
(bad)
pop
mov
add
dec
mov
imul
push
push
push
cmp
test
jo
test
fmul
fild
push
sub
call
loop
pop
mov
push
add
jns
mov
sar
ss
call
stos
inc
js
mov
jns
pop
out
xor
mov
test
mov
mov
jecxz
aam
shl
and
int
nop
jle
xchg
adc
nop
fadd
les
sub
or
and
mov
xchg
jg
rcl
repz
repz
adc
stos
repnz
jp
mov
je
lock
jg
cmp
sbb
cmp
scas
dec
adc
jle
xor
push
or
(bad)
jecxz
iret
ss
lods
ins
mov
cmp
repz
out
outs
out
mov
dec
xchg
in
pcmpeqd
and
popa
or
xlat
call
daa
sub
pop
cs
stos
cmc
pusha
or
ins
movs
retf
cli
pop
mov
outs
cmp
xchg
aas
inc
xlat
mov
int
fs
push
enter
fucompp
push
addr16
jb
pop
inc
push
jl
add
push
dec
ret
retf
aas
(bad)
fstp
fnstsw
or
push
cmps
and
add
neg
in
and
sub
std
add
ficom
sub
hlt
cmps
aaa
retf
pop
stos
xchg
das
mov
sub
ja
xor
and
sbb
popf
cmp
lods
lock
loopne
fcmovbe
adc
retf
mov
dec
ficom
dec
clc
pusha
jne
scas
fild
aad
in
(bad)
push
cs
stos
mov
aas
xchg
loopne
aad
test
retf
js
mov
mov
das
loope
pop
aad
or
adc
mov
or
dec
arpl
cmps
data16
pop
test
(bad)
stos
pusha
test
pop
fld
mov
push
pop
push
inc
imul
mov
jl
mov
push
movs
shr
mov
and
fistp
pop
(bad)
fisttp
test
popa
ins
inc
jbe
popa
mov
sbb
mov
xor
retf
inc
push
pop
bound
aam
add
jns
shl
shl
ins
mov
jg
iret
call
jmp
(bad)
std
xlat
sub
ds
jle
mov
or
cwde
ret
cmp
inc
lock
and
(bad)
xor
test
pop
scas
push
mov
xor
fbld
dec
cli
jnp
or
mov
sub
ja
popf
movs
in
out
add
xchg
pop
inc
xchg
xchg
or
scas
aaa
jno
dec
out
push
jg
push
pusha
lea
enter
call
pop
fdiv
(bad)
mov
int
push
inc
add
(bad)
cmp
into
xor
test
mov
jmp
jo
test
adc
mov
cwde
les
push
rcl
jle
in
mov
jmp
sub
and
add
cmp
push
dec
xlat
inc
imul
mov
neg
out
xlat
pop
mov
aad
(bad)
mov
daa
cdq
ror
fstp
into
(bad)
faddp
adc
xor
pop
and
inc
popa
ja
xchg
push
jmp
sbb
sub
loopne
int
xor
stos
mov
in
adc
add
push
xchg
cld
rcr
pusha
fiadd
mov
push
jae
mov
test
cdq
fwait
hlt
pop
sub
iret
ss
sbb
lock
adc
test
into
mov
mov
mov
(bad)
daa
inc
call
cdq
push
adc
mov
and
adc
inc
sub
movs
dec
aaa
add
mov
ja
out
pop
ins
cmc
outs
cmp
jno
pop
jb
pop
sub
inc
ja
jb
jle
xor
cdq
jg
jmp
jmp
mov
(bad)
mov
xchg
pop
dec
lods
push
push
sub
enter
ficom
mov
stc
mov
jns
popf
call
pushf
cs
mov
shl
xchg
mov
xchg
mov
mov
xchg
pop
test
ror
(bad)
mov
lods
out
fcomp
pop
ss
seta
adc
imul
adc
cs
and
cmp
das
push
dec
shl
popa
push
xor
pop
(bad)
loope
cwde
ss
ins
test
dec
inc
sbb
push
jmp
ret
push
adc
aas
test
pop
icebp
sbb
cld
jecxz
pop
pop
neg
jb
push
xchg
xchg
xchg
bound
(bad)
popf
neg
xchg
loop
mov
ret
pop
call
adc
mov
jmp
int
clc
add
dec
mov
xor
push
test
fwait
push
sub
fcom
mov
repnz
icebp
xchg
mov
icebp
pop
jp
jo
add
jmp
pushf
cli
xor
pop
sbb
adc
bound
adc
sub
gs
jbe
sbb
out
cmp
mov
or
outs
sub
sbb
adc
xor
mov
loop
je
pop
sbb
add
add
sub
fs
mov
and
fstp
into
out
sbb
cwde
cmp
mov
test
or
aad
fwait
xchg
ficom
in
dec
in
stos
lahf
out
inc
pop
ror
sub
cmp
adc
push
mov
sahf
adc
jmp
fnstsw
ficom
(bad)
push
mov
and
ret
lods
jmp
call
mov
(bad)
jmp
mov
rcr
add
or
pop
cmp
mov
xor
test
push
sub
inc
dec
mov
and
jns
mov
movs
mov
mov
aam
ins
jo
loopne
fild
dec
add
cmps
test
push
or
arpl
jnp
jmp
ret
xchg
jno
stos
cmp
and
jmp
in
jecxz
das
les
push
xor
xor
lea
lea
pushf
mov
adc
lods
xchg
enter
xchg
sub
scas
mov
ins
test
imul
mov
mov
cwde
xchg
cs
mov
or
and
push
popa
(bad)
sbb
push
sub
mov
popf
clc
lea
stos
mov
pop
jmp
mov
adc
xchg
fwait
jo
pop
mov
or
push
sahf
arpl
fnstsw
adc
jb
xlat
test
dec
ins
dec
outs
pop
test
mov
neg
cmp
sub
pop
aam
jmp
xchg
fsub
inc
imul
or
cmp
push
lds
dec
sub
adc
loop
in
mov
repnz
pop
xchg
push
cmp
stos
fs
inc
(bad)
cdq
not
clc
pop
sbb
scas
imul
jo
adc
loope
cmp
rcl
xchg
mov
test
jne
sub
inc
push
pop
ror
xchg
hlt
js
rcl
dec
ins
leave
movs
(bad)
rcl
loope
mov
adc
imul
retf
mov
or
cmp
ror
jmp
cwde
adc
idiv
dec
jl
push
(bad)
dec
jmp
cli
jne
call
ds
push
jns
aaa
in
in
pcmpgtw
vcvtss2si
in
and
out
sub
outs
stc
iret
add
push
lods
jle
pop
ins
xchg
and
jno
xchg
scas
sub
fild
lahf
aad
in
adc
ss
sub
pop
push
jmp
cli
pop
fs
sbb
nop
fidivr
aad
in
(bad)
inc
retf
fwait
retf
xchg
mov
sbb
and
mov
jp
pop
aaa
sub
xor
dec
aam
jb
fdiv
int
sub
pop
pop
dec
scas
jl
inc
jl
daa
call
fcom
adc
jge
movs
mov
repnz
out
or
cmp
dec
mov
add
pop
cmp
mov
push
jno
(bad)
test
daa
cmp
test
sub
mov
adc
jl
(bad)
adc
stos
cmp
aam
or
leave
mov
shl
repz
jp
in
iret
sahf
lds
mov
inc
sub
les
sbb
mov
sbb
adc
ins
jns
pop
not
add
sub
sbb
push
stos
fst
mov
mov
pop
jmp
pop
push
adc
out
jns
cdq
xchg
cld
xchg
sub
cmps
add
ds
pop
and
mov
and
in
dec
sub
sub
pop
push
aaa
mov
jp
jmp
dec
int
xor
cmp
or
mov
push
call
mov
push
and
xor
movs
ins
push
pop
add
aaa
sub
retf
dec
sbb
dec
sub
loopne
inc
aas
cmps
jecxz
and
fidivr
push
lahf
xor
loop
push
mov
addr16
inc
mov
shl
adc
mov
dec
or
mov
mov
(bad)
rol
ins
mov
xor
jb
popf
sub
pop
adc
fwait
dec
lods
push
movs
lods
mov
push
add
test
or
mov
pop
test
push
aas
ja
push
push
mov
test
jnp
mov
popf
and
mov
mov
inc
xor
shl
mov
fwait
pop
jmp
stos
xchg
push
pop
icebp
xchg
mov
xchg
and
add
push
and
sub
jb
adc
push
or
mov
in
and
out
outs
xor
cmp
mov
mov
mov
adc
xchg
xor
pop
xor
pop
cmp
cmp
and
dec
sbb
dec
pop
inc
cmp
outs
cmp
in
adc
pop
add
mov
(bad)
adc
dec
outs
icebp
lods
dec
out
push
in
cld
pop
cld
pop
in
fstp
xchg
push
xor
mov
sti
imul
sar
lods
push
xchg
sbb
cdq
outs
jnp
or
scas
xor
add
mov
out
sub
(bad)
jle
dec
adc
icebp
mov
push
jb
out
data16
arpl
dec
dec
cld
stos
dec
dec
outs
xor
push
cmp
jmp
aaa
jne
cmp
je
nop
sbb
dec
enter
pop
sub
xlat
dec
and
test
mov
cli
adc
sar
mov
mov
in
or
xchg
xor
sub
pop
pop
inc
push
push
jp
out
cmp
ds
into
fidivr
test
bound
jbe
jbe
push
popf
sbb
mov
cld
lock
in
xor
push
ds
dec
(bad)
(bad)
repnz
into
stos
and
cdq
sbb
sbb
fimul
stos
mov
pop
xchg
and
addr16
jmp
test
sbb
popa
leave
aad
mov
loopne
sbb
fidiv
mov
shl
rcl
jb
fsubr
into
into
mov
add
aas
jno
push
repz
div
in
hlt
push
cdq
scas
or
popf
scas
lods
popa
enter
(bad)
(bad)
loopne
sbb
cmp
int3
or
call
pusha
dec
(bad)
mov
jne
or
pop
mov
popf
or
mov
adc
test
cmp
inc
fsub
aaa
repnz
stos
cld
push
mov
dec
sbb
stc
ins
jp
test
dec
daa
fistp
call
retf
out
lods
inc
(bad)
out
iret
xor
push
jp
(bad)
push
lock
(bad)
mov
add
into
in
cmp
leave
xchg
add
pop
dec
out
cs
jbe
mov
pop
cmp
clc
int
test
mov
add
jl
add
xchg
fwait
add
cmps
jg
out
test
mov
pop
cmp
pop
or
push
jmp
popf
cmps
stos
lahf
movs
mov
test
adc
ss
out
call
out
push
out
pop
sub
xchg
sbb
fsub
fisttp
jg
pop
and
jns
push
test
jmp
xor
jb
add
pop
dec
(bad)
aad
mov
dec
pop
shl
imul
mov
sub
scas
mov
outs
shl
or
cmp
fsub
and
or
mov
lods
arpl
xor
frstor
(bad)
mov
scas
adc
or
leave
jne
iret
push
mov
xor
pop
inc
pop
(bad)
and
mov
mov
pusha
pop
popf
retf
xchg
push
mov
aaa
ret
fisubr
xor
dec
inc
dec
sbb
jge
sbb
adc
sbb
inc
loope
daa
xchg
retf
cld
inc
xchg
scas
(bad)
lahf
outs
rcl
call
dec
xchg
cmp
add
ins
mov
scas
into
test
or
mov
daa
out
int
xlat
in
data16
bound
or
mov
stc
dec
int3
dec
lea
sbb
pusha
and
out
mov
jle
fild
adc
call
imul
ja
add
lea
jae
pop
test
stos
aaa
mov
mov
fcomp
paddsb
mov
or
pop
xor
inc
add
mov
out
mov
ja
sbb
xchg
mov
pop
test
mov
retf
cs
mov
ss
mov
les
sbb
sbb
sub
pop
mov
sub
call
jnp
nop
cmp
sbb
xchg
inc
arpl
xchg
imul
lods
(bad)
in
pop
mov
inc
stos
push
or
(bad)
sti
pop
mov
jns
mov
shr
rcr
div
push
adc
cli
add
push
retf
call
js
int3
jo
pop
mov
cld
leave
lds
test
out
lods
xchg
cmps
(bad)
fdivr
int
retf
fnstsw
sub
fist
ret
push
push
jge
sbb
xor
icebp
iret
shl
dec
sahf
pop
sar
sbb
fistp
inc
mov
dec
cdq
test
into
push
fild
xchg
cld
shl
or
int
inc
push
sahf
(bad)
and
in
and
add
push
retf
sub
sbb
mov
push
repnz
xor
xor
or
icebp
mov
jae
cmp
call
inc
xchg
into
push
inc
or
push
je
xchg
or
mov
(bad)
in
or
push
cmps
adc
ins
out
or
push
sbb
je
sbb
das
xchg
dec
and
mov
adc
es
aas
cmp
je
data16
fistp
inc
xor
pop
test
jb
int
pop
dec
and
fisubr
mov
or
adc
adc
pop
lea
adc
mov
xchg
mov
stc
sub
in
xchg
addr16
(bad)
mov
push
std
repz
xor
mov
pop
pushf
aaa
push
test
xchg
add
add
mov
xchg
cmp
add
pop
mov
(bad)
cld
inc
xor
and
arpl
es
jle
xor
or
bound
mov
mov
ds
dec
pop
out
sub
sbb
pop
out
les
inc
mov
jle
ss
pop
daa
jl
stos
movs
fdivr
daa
lea
and
lds
ret
loope
pop
inc
fxch
out
dec
xchg
cli
in
cmp
pushf
dec
adc
cli
mov
iret
ret
sub
hlt
dec
aaa
inc
mov
call
mov
jbe
push
mov
pop
xchg
inc
ja
mov
fcmovne
aaa
arpl
outs
stos
mov
ins
popf
xor
scas
and
xchg
or
aam
sbb
add
and
adc
mov
pop
out
dec
push
pop
adc
in
fmul
cdq
mov
loopne
and
jns
adc
cdq
into
mov
mov
call
inc
pop
loope
test
fs
sar
inc
outs
stc
sub
cld
sbb
xlat
pushf
jmp
mov
stos
mov
jne
stos
mov
adc
test
cdq
stc
mov
cmp
outs
or
mov
xor
or
fcmovne
loopne
mov
test
stc
xchg
loop
into
dec
fcmovb
lds
jg
cmps
ja
lahf
(bad)
stos
adc
mov
inc
movs
and
pop
xchg
mov
mov
cmc
rcl
inc
xor
xor
iret
jb
(bad)
sub
xor
mov
fiadd
push
push
and
mov
jae
dec
xchg
pop
mov
fst
stc
fwait
mov
ins
xor
push
das
je
xchg
and
fisub
push
mov
add
xchg
ins
hlt
xor
mov
sbb
or
adc
pop
mov
sbb
test
dec
out
adc
xchg
sbb
mov
mov
lds
jecxz
sbb
outs
test
ficom
ror
in
arpl
fucom
ror
mov
sbb
push
push
jb
nop
adc
jbe
hlt
push
pop
mov
stc
cmp
rcr
add
stc
mov
loope
add
(bad)
cmc
lds
pop
imul
cmp
ins
mov
pop
popa
cwde
cmp
adc
mov
mov
jb
loope
sbb
cli
sub
out
(bad)
out
jle
and
push
push
leave
sti
pop
fcmovb
push
push
or
mov
jbe
js
fsubr
retf
dec
adc
test
mov
das
inc
inc
pushf
mov
pop
sbb
inc
loopne
jns
xchg
lods
mov
add
lods
nop
sub
pop
fpatan
mov
fidiv
push
stc
jae
pop
ins
xchg
add
(bad)
rol
daa
dec
in
xlat
ret
fiadd
aad
outs
(bad)
adc
call
shl
fst
outs
pop
cli
sti
jge
enter
add
pop
jp
push
add
inc
dec
jge
dec
push
cmps
test
add
jge
jp
mov
ss
dec
fld
or
inc
stos
lahf
fwait
cdq
fstp
repnz
pop
popa
ret
aam
cdq
dec
adc
pop
nop
adc
dec
push
pop
lock
jbe
push
mov
icebp
xchg
pop
hlt
push
popf
lods
mov
jne
jae
ins
in
inc
test
xchg
sub
mov
cmp
enter
ins
ret
sbb
in
aas
call
pushf
jge
jmp
out
jecxz
and
inc
mov
cmp
ins
test
iret
call
or
push
std
or
xchg
xchg
pop
jne
dec
or
jg
pop
cmp
cmps
out
xchg
jne
data16
sub
scas
(bad)
out
and
xor
mov
xchg
push
mov
push
jge
out
out
popf
inc
(bad)
jbe
xor
jnp
stc
adc
test
sar
call
loope
dec
cld
loopne
das
enter
hlt
and
cmp
sbb
sahf
dec
or
mov
test
mov
jl
xchg
call
dec
sub
jne
mov
test
sbb
icebp
icebp
jno
inc
push
add
bound
push
adc
fdivr
leave
cmps
xchg
add
stc
sub
loopne
outs
sub
(bad)
mov
push
cld
push
mov
daa
push
mov
push
cdq
push
sbb
push
inc
ror
inc
push
stos
in
movs
push
inc
sub
mov
in
out
push
out
xchg
in
fucom
jle
sti
rcl
cmps
xchg
data16
ret
stos
das
push
sti
aaa
ror
ss
arpl
in
int
jge
and
fdecstp
mov
pop
mov
xchg
retf
out
xlat
outs
aaa
and
cld
movs
aas
inc
fild
jg
fdiv
and
out
test
mov
or
lahf
adc
lods
mov
idiv
sub
add
or
cld
pushf
js
stc
sti
fcmove
bound
xor
repnz
sbb
pop
loope
sub
and
test
mov
or
mov
in
lock
push
loope
lods
scas
fcom
fsub
sahf
fldenv
xor
leave
shl
mov
mov
in
jae
jnp
lods
(bad)
mov
pop
pop
sub
push
push
or
fsqrt
or
jmp
add
or
div
sbb
aam
cld
stos
sub
xor
sub
mov
lods
jg
pusha
cmp
iret
rcr
or
inc
pop
or
imul
aaa
dec
cs
mov
dec
fdiv
call
push
push
add
ror
fisubr
ror
adc
lea
push
pop
jmp
mov
xor
pop
sub
jp
or
cmp
jl
loopne
ja
enter
jmp
rcr
or
mov
retf
jns
cmp
add
ret
neg
jmp
repz
and
cmp
dec
sysexit
dec
xor
cmp
mov
(bad)
dec
pop
mov
seta
mov
pop
cmp
pushf
gs
inc
and
inc
xor
inc
aaa
cmps
stc
lock
xor
xor
pop
cld
dec
call
daa
add
hlt
inc
adc
mov
mov
aaa
aam
rcl
push
sub
xchg
inc
sub
pop
cmp
rol
adc
lds
pop
xchg
inc
test
xor
repz
ja
push
aaa
mov
pushf
es
addr16
cmps
fs
sbb
add
mov
jmp
sub
add
add
pop
ins
pusha
dec
leave
xchg
xchg
(bad)
inc
pushf
in
xchg
out
xor
imul
test
jne
test
and
sbb
mov
cmc
pusha
loop
test
dec
pop
adc
pusha
ins
ror
mov
outs
xchg
push
stc
shl
enter
sbb
mov
sub
adc
jbe
aas
(bad)
mov
mov
mov
mov
xchg
fwait
imul
minps
or
push
push
xor
jecxz
(bad)
jmp
jae
aam
push
pop
sub
adc
dec
(bad)
test
cmp
jp
mov
mov
sbb
xchg
jecxz
xchg
repnz
add
addr16
rcr
mov
jne
fwait
fs
sub
push
aas
mov
fs
(bad)
iret
btc
sbb
ja
ret
popa
xchg
inc
test
jmp
mov
mov
test
pop
jnp
aad
dec
ficom
sub
mov
push
int
ins
lds
aas
mov
inc
cmp
or
or
(bad)
lahf
pop
push
fs
cwde
(bad)
popa
sbb
pop
sub
pop
sub
aam
sub
xor
dec
cmps
test
les
add
jecxz
mov
push
jle
push
mov
inc
lahf
ins
jle
and
mov
(bad)
jl
inc
dec
int
pop
neg
les
cmp
lea
mov
gs
mov
rcl
es
add
xchg
leavew
cmps
out
sbb
sbb
shl
stos
sub
inc
xor
mov
pop
xchg
xchg
icebp
xor
sbb
movs
inc
daa
addr16
cmp
outs
int3
sbb
mov
enter
ror
mov
out
xchg
das
loop
mov
repnz
jge
xchg
or
loop
mul
pop
inc
xchg
add
xchg
sahf
jne
mov
rcl
cld
outs
aad
cmp
addr16
imul
cld
loop
sub
sbb
loope
loope
dec
cld
jnp
sbb
mov
push
add
add
stos
ficomp
mov
repz
or
xchg
mov
xor
(bad)
not
cmp
push
test
add
dec
push
mov
push
and
add
bound
sub
repnz
pop
jmp
mov
mul
xchg
push
or
into
adc
push
inc
fsubr
ds
popa
lahf
ret
ret
pop
pop
push
pop
sbb
iret
sbb
scas
or
xor
xlat
cmp
or
not
cmp
bnd
sbb
(bad)
inc
pusha
push
ret
iret
lods
neg
push
lods
loopne
mov
jmp
add
(bad)
in
pop
outs
jle
test
mov
push
int
xchg
jmp
int3
cmc
adc
lds
test
stos
inc
js
imul
shr
out
mov
stos
test
sbb
mov
xor
mov
pop
cs
cmp
shl
and
push
and
in
mov
mov
call
mov
pop
jmp
sbb
enter
fcomp
leave
out
mov
push
ja
loopne
pop
dec
inc
cmp
jmp
call
ror
mov
cmps
pop
xchg
dec
xchg
pop
xrelease
add
loop
sar
leave
pusha
(bad)
pop
xchg
js
rcl
jns
xlat
pop
sbb
sbb
fimul
test
and
pop
in
adc
lods
dec
out
mov
mov
lea
out
xlat
push
adc
bnd
adc
or
sbb
mov
cli
jge
cmp
imul
sub
push
xchg
sub
(bad)
stos
lods
repnz
call
sub
test
xchg
xchg
pop
retf
or
call
mov
test
sbb
shl
sahf
jmp
(bad)
sbb
jbe
and
sti
lods
sbb
xlat
jp
jnp
add
xor
mul
imul
adc
mov
out
std
or
xchg
sbb
pop
dec
pop
inc
icebp
icebp
sbb
xor
mov
adc
lock
mov
xchg
cwde
shl
push
fs
call
mov
and
push
mov
adc
adc
ja
jo
jno
cwde
lods
lock
cmc
and
call
cld
pop
sub
mov
fistp
mov
and
sti
pusha
xchg
sub
jp
add
xchg
add
call
std
jno
add
cmp
or
mov
push
pop
inc
cmc
cmp
jb
addr16
or
fist
in
cmp
bound
mul
pop
(bad)
adc
mov
or
(bad)
neg
popa
inc
pop
ror
clc
nop
adc
mov
pop
sbb
rcr
fs
ret
dec
out
sbb
lahf
xchg
sbb
sub
or
jae
dec
xchg
neg
sbb
lock
les
cmps
push
jo
push
retf
test
es
mov
inc
fild
pop
or
or
retf
ins
test
push
xchg
xchg
icebp
or
push
fdivrp
movs
(bad)
hlt
jne
rcl
mov
jg
pop
xchg
ficomp
(bad)
xor
sbb
sti
ds
call
push
mov
mov
pop
push
pop
inc
ins
pusha
and
std
add
sub
daa
add
dec
dec
cmp
pusha
or
pop
fsin
in
lods
lock
popf
jle
push
cmp
cmps
mov
ja
adc
dec
ins
loopne
mov
fsubr
loop
scas
retf
mov
sbb
fimul
inc
stc
xlat
js
pop
shl
and
dec
stos
in
fistp
mov
dec
cdq
frstor
das
lods
ds
and
adc
ins
sbb
popf
int3
loop
cmc
pushf
pop
mov
xchg
push
hlt
hlt
cmovle
aaa
push
push
rcl
xor
sbb
jno
and
adc
aas
in
push
mov
cmps
shl
ret
ins
adc
xchg
push
arpl
xchg
loopne
mov
les
lods
scas
push
push
push
or
(bad)
and
push
shld
es
jmp
cdq
sbb
dec
jl
mov
or
ds
dec
les
mov
leave
fwait
shr
mov
push
mov
push
xor
das
cmps
mov
shl
sbb
cdq
pop
sub
test
or
add
push
mov
xchg
push
pop
out
xor
imul
pushf
inc
popa
nop
and
(bad)
xor
test
cli
lock
dec
pushf
inc
push
jne
cmc
out
stos
cmps
jnp
sahf
mov
xor
fxch
cs
pop
xor
(bad)
in
or
pusha
stos
add
push
je
push
js
sub
pop
push
add
hlt
and
sub
mov
mov
das
sub
cmp
adc
in
cmp
push
xchg
sbb
cmp
mov
(bad)
pop
jnp
or
adc
cld
cli
inc
iret
inc
jo
mov
test
xchg
push
mov
adc
enter
fldenv
push
int
xchg
dec
dec
jl
jge
loopne
pop
push
into
aam
jbe
test
daa
sbb
and
push
and
call
fimul
inc
cmc
xchg
xchg
repnz
stos
sbb
xchg
fs
movs
xor
sbb
pop
in
pop
movs
retf
and
addr16
out
lock
mov
jmp
pop
hlt
call
pop
push
adc
push
xlat
sbb
and
js
shr
jmp
sub
mov
loopne
xor
popa
push
iret
sbb
mov
test
fild
movs
mov
cmps
jno
std
icebp
out
jno
mov
imul
adc
mov
pop
in
jmp
xlat
xor
packssdw
and
sbb
sar
or
int
jl
sub
cmps
(bad)
xchg
push
bound
rcl
push
xchg
popa
push
pop
inc
loope
cmp
mov
and
push
imul
jmp
pop
bound
out
shr
ss
into
sub
lock
inc
aad
and
lea
adc
jne
(bad)
push
sahf
call
xor
xchg
jp
xchg
test
leave
jnp
cmp
jge
add
xor
icebp
adc
jae
es
sbb
pop
arpl
xchg
xchg
or
jg
mov
add
es
push
aas
jae
push
push
(bad)
xchg
test
jbe
or
push
repz
shr
mov
enter
lods
jae
xor
jge
adc
cli
scas
sahf
lahf
jl
jo
sahf
in
retf
pushf
popf
fldcw
je
neg
push
pop
pop
and
xor
retf
jmp
xor
mov
popf
xchg
rcl
mov
in
xor
push
leave
mov
fisub
pmaxsw
sbb
movs
push
xor
cmp
mov
enter
xchg
mov
addr16
mov
push
js
mov
cmp
pusha
add
cmp
xlat
icebp
pusha
ret
call
adc
gs
add
dec
xchg
iret
jmp
adc
jle
iret
xor
popf
jl
lock
inc
mov
test
mov
lods
mov
inc
push
pop
cmp
and
and
dec
or
jno
sub
pop
int3
call
daa
cmps
jb
and
scas
(bad)
cld
movs
clc
out
sbb
aas
popa
lds
gs
adc
adc
cmp
scas
inc
xchg
mov
mov
mov
jno
lods
cmc
jl
movs
cmp
mov
cmp
or
jns
fst
shl
mov
ret
mov
jge
push
out
cdq
mov
pop
cmp
div
cs
int3
ret
adc
shl
or
stc
or
lock
nop
sbb
mov
cmc
fwait
cmps
dec
fstp
xor
popf
(bad)
mov
retf
ss
dec
fiadd
dec
push
add
mov
sbb
test
mov
mov
and
pop
or
call
pushf
cdq
in
mov
gs
cwde
and
pop
mov
ror
fmul
rcl
xor
jmp
mov
mov
or
retf
sbb
mov
fnstsw
sub
shl
mov
jne
fs
cmp
daa
mov
rcl
lods
jno
cmc
pop
iret
inc
mov
out
jae
ins
cmps
daa
retf
mov
push
(bad)
lock
test
jbe
and
dec
mov
mov
ins
shl
pop
sbb
cmp
pop
cld
stos
xchg
mov
test
push
inc
mov
fld
or
xchg
mov
dec
into
hlt
and
xor
mov
add
sti
(bad)
imul
ret
jne
clc
sbb
xchg
fwait
jb
cmc
fist
jle
pop
fild
mov
out
call
or
mov
push
or
or
mov
and
xchg
xor
gs
pop
repnz
in
ret
das
xchg
xchg
(bad)
adc
mov
loope
dec
cmp
outs
outs
mov
mov
outs
push
or
fdiv
jg
es
ss
dec
jp
ins
xor
xchg
rcr
cdq
mov
out
stos
call
and
cmp
enter
cvtps2pi
data16
adc
mov
xor
xchg
push
add
pop
call
sub
and
dec
sbb
in
into
sub
sbb
aaa
shl
int3
ins
stc
ins
or
adc
outs
sbb
fild
(bad)
loope
sub
repnz
inc
sahf
hlt
test
mov
mov
(bad)
adc
push
xlat
fadd
mov
sbb
adc
cmc
push
es
adc
pusha
leave
call
xlat
mov
mov
add
mov
jno
and
pop
mov
arpl
(bad)
sbb
xor
pop
and
retf
enter
ret
adc
ins
mov
mov
sub
push
dec
loopne
nop
pop
push
dec
xchg
xor
daa
adc
mov
sbb
push
scas
mov
icebp
jge
or
test
out
cmp
out
gs
jge
adc
retf
fsub
ss
loopne
fst
lds
push
loope
imul
mov
pop
add
scas
fiadd
jae
std
fld
lock
cmps
test
cmp
push
mov
int3
gs
shr
add
mov
call
cs
scas
mov
call
mul
pop
int3
mov
mov
dec
sub
xor
arpl
push
scas
cli
or
das
push
adc
jmp
and
sub
xor
xor
neg
xlat
loop
inc
(bad)
jns
jnp
test
into
jp
xor
iret
inc
cmp
icebp
inc
sbb
add
pop
test
adc
in
or
xchg
inc
pop
mov
cmp
stc
and
mov
push
pop
mov
fs
leave
push
(bad)
sub
jae
xor
sub
fstp
loopne
xor
jnp
mov
test
(bad)
mov
in
push
xchg
mov
ja
push
lds
or
xchg
fimul
les
sbb
iret
call
test
dec
les
repz
outs
and
hlt
add
(bad)
enter
adc
lock
fmul
pop
adc
inc
popf
mov
retf
inc
daa
retf
sbb
dec
idiv
or
xchg
cmp
cmps
fistp
xor
leave
push
setle
imul
stc
and
ficomp
pop
ds
jnp
sub
retf
xor
shl
icebp
scas
jne
jb
fwait
pop
pop
xor
dec
inc
inc
pop
mov
push
mov
dec
adc
(bad)
rcl
or
outs
in
fisttp
and
addr16
repnz
icebp
lods
ins
stos
or
(bad)
inc
adc
aam
or
test
call
fmul
mov
pushf
or
pop
daa
ja
cld
int3
sbb
daa
inc
mov
xchg
mov
inc
or
xchg
mov
mov
je
cmp
stos
ret
les
and
push
add
sahf
sub
push
mov
shl
pop
xchg
sub
xchg
ret
imul
sub
lods
cmp
pop
ins
jnp
xchg
push
mov
push
adc
cmps
rol
addr16
dec
push
add
rcr
ja
push
popa
add
sbb
sahf
lahf
mov
push
data16
idiv
inc
add
push
adc
or
arpl
sub
inc
xchg
cld
and
jne
cmp
daa
sbb
dec
or
mov
xor
xchg
mov
sbb
movq
xchg
cs
scas
push
fnsave
sub
sahf
mov
retf
mov
lea
pop
cmc
jle
jg
push
lds
cld
shl
mov
pop
ja
fimul
cs
sbb
stos
shl
add
lods
(bad)
ds
pop
inc
jno
test
inc
mul
push
mov
mov
adc
movs
fs
jno
push
mov
mov
(bad)
jnp
out
outs
aas
loopne
mov
scas
inc
sahf
mov
in
jge
cmp
nop
adc
mov
and
push
gs
cwde
rol
xchg
div
outs
sub
push
push
nop
enter
(bad)
mov
repnz
mov
sbb
lods
call
out
cmp
mov
imul
shl
lea
push
push
sub
pop
xor
xor
xchg
call
or
dec
sahf
push
int3
mov
adc
sbb
enter
pop
lods
jmp
nop
rol
repnz
or
mov
ret
adc
fsub
ja
test
xor
push
enter
push
jbe
push
ins
dec
popa
xchg
pop
lods
jnp
xor
push
xor
and
dec
inc
ret
data16
and
(bad)
jo
pop
mov
add
sbb
lods
sbb
arpl
jmp
cwde
inc
retf
cdq
out
icebp
sbb
scas
dec
mov
pop
lock
and
pop
dec
mov
cmps
fwait
pop
add
cwde
mov
into
push
mov
cmp
inc
sub
inc
push
cmp
bound
stc
or
enter
pusha
cmps
inc
test
ins
outs
or
adc
mov
jnp
pop
mov
push
lahf
jnp
sub
add
xchg
shl
jns
xor
xchg
lahf
les
or
pop
fldenv
outs
aam
pop
or
sub
sub
mov
out
arpl
shr
xchg
xor
push
lea
pop
outs
fxch
xchg
paddb
inc
mov
imul
mov
arpl
js
push
sub
sub
scas
jns
inc
fwait
jbe
inc
push
pop
in
cs
adc
sub
les
mov
jge
sbb
scas
sub
fbld
ja
and
sub
push
inc
mov
leave
push
and
jbe
mov
ret
and
xchg
xor
fbstp
mov
sbb
xor
or
sahf
aaa
inc
jae
mov
movs
cmp
div
(bad)
out
lock
jmp
mov
ss
and
in
aas
and
icebp
aad
outs
fstp
(bad)
stc
cwde
ret
ins
in
inc
push
add
les
sub
fs
(bad)
mov
cli
add
int3
lods
bound
jmp
cld
inc
push
out
push
and
xor
jae
loope
fidiv
mov
inc
and
sbb
iret
fisttp
mov
pusha
imul
jmp
dec
push
mov
rcr
add
fldpi
jb
mov
out
xor
mov
jno
jo
jno
push
(bad)
rol
fcmovbe
sub
not
test
xchg
fild
push
lock
mov
push
out
mov
inc
neg
xor
push
lods
scas
cmp
jnp
mov
std
mov
jo
push
out
call
jnp
lods
pop
or
mov
data16
(bad)
push
les
and
hlt
add
dec
cmc
sub
mov
adc
out
pop
(bad)
dec
cmps
popf
jg
les
jmp
sub
xchg
lds
lock
call
pop
aas
push
maxps
stos
(bad)
aad
cld
loopne
adc
dec
xchg
mov
jl
and
xchg
pop
out
sub
push
xchg
push
aas
mov
ret
addr16
das
mov
ss
add
pop
sbb
sub
fdiv
push
jmp
jmp
lods
imul
mov
sti
leave
fistp
mov
imul
lds
jns
pop
js
jle
outs
jle
mov
dec
loope
popa
add
loop
and
cmc
test
jl
cmp
jl
mov
and
mov
out
ret
mov
prefetch
outs
ret
mov
out
nop
pusha
xor
jge
daa
or
iret
push
imul
or
add
icebp
pop
stc
(bad)
cmp
aas
ss
and
dec
xor
cld
(bad)
sbb
jecxz
mov
cmc
mov
pop
xchg
rcl
xchg
popa
sahf
mov
out
mov
adc
mov
mov
pop
mov
or
(bad)
xchg
dec
sub
cmp
lds
(bad)
add
fisub
daa
or
fnstenv
retf
aas
retf
or
add
push
sbb
mov
xchg
stc
add
pop
push
mov
nop
test
push
pusha
mov
js
push
adc
sar
(bad)
or
iret
test
push
fidivr
(bad)
inc
dec
movs
loopne
aas
lods
push
push
mov
sbb
push
lock
inc
les
pop
inc
xlat
pop
(bad)
dec
ins
test
out
gs
(bad)
retf
into
cs
xchg
cwde
pop
call
push
add
sbb
mov
in
mov
pop
or
and
imul
dec
mov
push
or
mov
mov
lods
clc
adc
mov
sti
inc
xor
dec
stos
xor
mov
in
jns
dec
dec
out
pop
mov
in
add
dec
enter
xor
xor
adc
cmps
mov
je
or
and
fwait
mov
push
lea
in
pop
(bad)
mov
sub
out
aad
adc
xor
(bad)
das
aaa
das
dec
test
jmp
pop
mov
xchg
inc
jg
dec
push
sbb
aam
ins
or
aas
ins
test
cmp
inc
ret
adc
push
inc
pop
iret
call
xor
in
popf
sub
jmp
jnp
sub
inc
call
scas
cmp
call
adc
jbe
pop
jmp
jg
mov
mov
sbb
xchg
mov
mov
mov
inc
or
mov
xor
scas
dec
xor
adc
cs
add
loopne
xchg
xor
repnz
jmp
into
mov
dec
push
xor
xor
adc
ja
adc
jae
lea
cmp
call
fisubr
sahf
(bad)
adc
test
jp
xchg
dec
add
(bad)
int
nop
test
sbb
test
ret
ins
cmp
or
sbb
sbb
pop
push
xchg
push
cmc
in
ins
jmp
push
xchg
lahf
in
jae
shl
add
int
loope
faddp
js
(bad)
mov
jl
add
ret
(bad)
nop
add
aad
inc
xlat
mov
jle
sbb
out
add
mov
js
cmp
mov
xchg
dec
and
inc
sub
(bad)
loop
fs
cdq
scas
inc
(bad)
xchg
inc
in
mov
and
jge
test
add
loopne
into
pop
in
xchg
fistp
gs
retf
in
mov
pop
or
jns
xchg
(bad)
push
stos
inc
loope
jge
xchg
adc
sub
push
outs
dec
out
arpl
inc
inc
sub
daa
scas
popa
mov
in
jns
sbb
ds
imul
xor
xor
aaa
mov
test
inc
add
xor
shufps
mov
sbb
jle
sub
jne
lds
stos
jns
sub
dec
fmul
xchg
dec
mov
cld
sbb
clc
mov
pop
mov
sbb
or
loopne
fwait
out
inc
stos
aad
adc
das
dec
xchg
(bad)
jmp
cmp
adc
dec
mov
xlat
rcl
fnstenv
dec
xor
xchg
sub
or
mov
pusha
addr16
xor
jg
pop
sbb
shl
gs
mov
out
nop
mov
dec
cmp
leave
jle
cmp
stos
push
inc
cmp
xchg
mov
pop
fistp
pop
es
or
ins
fnstcw
fsub
mov
inc
adc
cli
iret
pop
and
sbb
xchg
xchg
ficom
inc
or
rcl
mov
add
sbb
mov
pop
mov
movs
pop
add
push
xchg
enter
aaa
cli
or
and
je
or
call
outs
adc
jno
add
(bad)
ficom
xchg
and
lods
enter
stos
xor
cmp
adc
pop
xchg
cmp
mov
(bad)
jge
movs
jno
not
sbb
or
lods
add
sbb
add
push
inc
imul
and
pop
xchg
int
test
jmp
aas
push
mov
shl
xchg
xor
gs
jns
dec
shl
jns
xor
inc
cmp
rol
xchg
and
das
call
dec
cdq
dec
dec
xchg
jae
jnp
cwde
or
mov
inc
inc
ret
enter
xlat
icebp
jmp
add
popa
je
out
and
sar
jne
and
ss
and
pop
mov
jae
dec
(bad)
(bad)
jo
cmp
test
repz
jge
in
(bad)
lods
std
cmps
(bad)
jo
es
ret
mov
adc
(bad)
retf
xchg
ret
jp
out
lods
jno
test
aam
add
out
and
jnp
out
(bad)
fwait
retf
sbb
mov
popa
ficomp
inc
popf
cwde
test
addr16
retf
or
out
add
lods
pop
push
mov
mov
je
adc
sub
hlt
in
jb
and
adc
nop
mov
sub
mov
das
adc
pop
data16
jo
mov
hlt
mov
push
aas
cld
inc
sbb
mov
adc
mov
mov
out
popf
push
sub
pusha
adc
(bad)
cli
(bad)
adc
push
and
mov
retf
jae
in
push
jmp
or
adc
xchg
and
adc
cmc
inc
mov
sub
mov
ss
dec
ret
outs
xchg
sub
mov
shr
jmp
call
ins
je
repz
jmp
out
or
in
and
rcr
pushf
mov
sbb
out
push
or
fwait
xor
pop
leave
(bad)
pop
xor
ins
and
imul
add
mov
shl
ss
adc
mov
frstor
pop
pop
pop
push
int
and
mov
js
fimul
jp
adc
fwait
mov
mov
imul
inc
arpl
aaa
inc
push
rcl
and
in
std
or
cs
pop
and
fs
push
adc
inc
mov
sbb
inc
call
adc
pop
pop
mov
sbb
repz
fist
inc
je
mov
mov
push
ins
sbb
jb
xor
test
(bad)
and
adc
pop
xor
inc
xchg
cmp
push
pop
add
and
(bad)
dec
arpl
pop
pop
xchg
aad
jg
push
mov
push
repz
mov
int3
imul
pusha
shr
lds
out
or
jge
sbb
add
aam
mov
int
mov
movs
mov
push
movs
mov
xchg
xchg
mov
inc
(bad)
cmps
bound
dec
gs
shl
cwde
mov
push
jnp
pop
cdq
mov
repnz
push
fist
in
xchg
push
stos
ins
cmp
les
repnz
mov
xchg
mov
repnz
adc
sahf
retf
cld
aas
jmp
jmp
aam
int3
jp
test
cmps
rcr
or
cdq
sbb
inc
enter
xchg
std
mov
inc
mov
sysenter
mov
movs
fs
or
add
nop
in
cli
imul
add
or
cmp
push
(bad)
stos
add
push
out
adc
sub
in
lahf
cmp
jne
inc
push
not
fldl2e
or
jbe
mov
add
add
aam
mov
and
adc
je
inc
jbe
dec
cmp
mov
aas
add
jge
add
lahf
cs
out
jns
hlt
xchg
mov
mov
dec
xchg
inc
pop
and
xor
les
fwait
xchg
jns
arpl
fldenv
into
stos
movs
sbb
dec
lods
pop
clc
into
loope
popa
add
xlat
mov
int
push
shr
popa
idiv
aad
jp
push
push
jle
xlat
mov
jne
or
dec
xor
fcmovnbe
cmps
ds
inc
push
jbe
push
and
je
sti
sub
shld
adc
ss
and
adc
jae
cmp
shl
out
subps
(bad)
shr
xor
and
pushf
jae
shl
retf
cdq
repz
aam
or
mov
pop
jno
lock
adc
sbb
sub
gs
xchg
imul
pop
or
in
fld
in
lods
jbe
add
fwait
ds
sbb
jo
movs
mov
jmp
jno
mov
jmp
mov
icebp
lahf
dec
xlat
cmp
lods
mov
adc
and
cdq
stos
imul
neg
aaa
cmc
mov
xchg
adc
das
lea
xchg
movs
and
jg
mov
xchg
and
mov
cwde
scas
test
sub
imul
or
lahf
or
jp
mov
mov
adc
(bad)
shl
retf
das
sahf
dec
lock
aaa
aas
loop
daa
aaa
dec
stos
sar
(bad)
jnp
je
(bad)
adc
shl
stos
mov
ja
rol
out
in
mov
mov
movs
inc
sub
and
mov
lods
rol
clc
outs
jle
imul
and
sahf
clc
mov
pop
int3
clc
enter
pop
cld
in
cmp
lea
ror
pop
push
xor
jmp
pop
cmp
fbstp
mov
jmp
test
mov
femms
sub
and
rcr
test
fistp
jg
fsubrp
mov
retf
es
loopne
inc
jmp
(bad)
aad
pop
test
mov
adc
fist
cmp
mov
adc
mov
xchg
pop
push
cli
popa
and
imul
fist
pop
cmp
push
cmp
xchg
xor
jae
sbb
sub
push
loop
sub
out
xchg
jno
ja
sbb
mov
add
pop
js
repz
xor
xchg
clc
fcomp
inc
mov
ret
adc
into
(bad)
es
test
lea
cdq
push
sub
inc
mov
adc
jno
aaa
ja
lods
stos
test
retf
mov
add
mov
push
mov
nop
fisub
lahf
dec
fisttp
sti
jle
dec
cmp
push
sti
sbb
in
xor
enter
mov
call
jp
sbb
inc
xlat
cs
jne
(bad)
outs
fmul
movs
jmp
cmp
mov
push
or
setge
sbb
shl
repnz
arpl
fld
sub
(bad)
mov
aad
xchg
pushf
push
push
imul
movs
xchg
pop
add
dec
ret
(bad)
sti
lahf
pushf
sub
stc
add
mov
mov
mov
das
test
iret
cmc
lods
cmps
push
lock
inc
mov
xor
xchg
jp
sbb
pusha
pop
stc
mov
das
call
or
jae
xor
mov
sbb
sub
lock
mov
xchg
xor
mov
and
dec
adc
xchg
and
and
hlt
pop
push
xor
loopne
adc
scas
repnz
mov
ret
inc
ins
test
hlt
inc
or
sbb
imul
sbb
xor
cmp
sub
dec
sbb
ret
mov
sub
jle
fcmovbe
or
ret
loope
arpl
xchg
into
mov
fisttp
stos
fwait
lock
mov
test
gs
and
adc
movs
les
lds
mov
mov
pop
xor
iret
in
not
mov
and
pop
out
stos
xchg
shl
mov
cmp
xchg
push
(bad)
xchg
in
not
push
cmps
movs
dec
xchg
or
add
inc
jae
out
scas
aas
vpsraw
inc
push
mov
(bad)
dec
push
mov
xchg
dec
xchg
lods
aaa
cmp
xor
mov
mov
jge
and
mov
cmp
das
xchg
test
xchg
dec
or
loope
inc
lock
fcomp
stc
movs
inc
mov
rcl
pop
xchg
(bad)
jae
lods
loope
inc
xchg
stc
std
stc
mov
out
push
pusha
adc
movs
lods
fwait
jnp
fimul
cs
rcr
retf
out
adc
pop
(bad)
aad
sub
test
rol
sbb
popa
out
ds
(bad)
mov
and
xor
or
mov
jne
in
test
imul
arpl
call
mov
push
jge
in
into
aam
(bad)
fstp
xchg
popa
inc
and
outs
push
inc
xchg
rol
sub
test
dec
jne
mov
adc
dec
cmp
rol
test
lock
aam
iret
sub
adc
xchg
xchg
ins
je
and
push
test
dec
add
sbb
inc
mov
fisubr
call
or
and
xor
lds
cmps
ret
hlt
push
jb
cld
pushf
xor
aaa
lods
add
nop
add
mov
mov
and
xor
es
sub
and
fmul
sub
cmp
sub
xor
scas
daa
addr16
inc
mov
xchg
scas
in
pop
jo
mov
pop
sub
dec
xor
sbb
xor
or
cmps
sbb
mul
imul
cmp
and
inc
test
add
sub
xchg
jge
mov
repnz
lea
add
mov
call
mov
aaa
icebp
in
and
fmul
push
cmc
mov
mov
sub
cmp
or
jge
pop
stc
xor
addr16
push
sahf
adc
pop
xchg
ret
xor
mov
popa
jno
data16
inc
mov
sahf
das
out
and
les
xchg
std
xlat
xor
jae
mov
add
cmps
mov
mov
xchg
or
inc
jmp
or
pop
sub
mov
pushf
or
pop
ret
sbb
push
outs
bnd
aas
cli
xor
adc
jns
in
lods
push
cs
and
fwait
push
cli
icebp
fdivr
add
sub
mov
adc
xor
dec
dec
jnp
sub
add
fmul
call
into
call
shr
pop
add
xor
cwde
call
mov
xchg
cs
pop
jle
test
xchg
xor
div
cld
idiv
mov
mov
(bad)
cdq
sbb
lahf
mul
sbb
test
(bad)
sbb
repnz
lock
inc
out
sbb
sub
pop
push
icebp
sub
mov
fist
pop
loope
or
mov
inc
into
push
mov
test
mov
sahf
cwde
xchg
stc
sbb
fcmovnu
push
sub
je
fldcw
jb
repnz
cmp
adc
outs
pop
adc
xor
xor
inc
jne
mov
cmp
xchg
dec
jns
push
cmp
xor
fdivr
sub
pop
iret
(bad)
mov
xor
repz
xchg
fcom
sahf
pop
push
arpl
test
mov
push
mov
pushf
test
cli
pushf
jp
pop
mov
or
mul
xlat
cmp
mov
pop
scas
xor
out
jbe
sbb
push
bound
mov
jle
mov
(bad)
mov
push
dec
cmp
(bad)
xor
dec
call
adc
icebp
lock
xor
inc
mov
xchg
leave
xchg
sub
inc
add
mov
jnp
arpl
movlps
stos
and
xchg
xchg
das
sti
cli
stos
jnp
test
call
add
jbe
jnp
aam
sbb
dec
mov
jle
enter
sub
inc
jb
mov
pushf
mov
stos
sbb
add
dec
cmps
dec
shl
jmp
fcmovnu
push
jo
mov
(bad)
lock
xchg
cli
cs
cmps
clc
inc
icebp
jmp
(bad)
cmp
push
scas
mov
in
pop
sbb
or
or
shl
and
inc
icebp
test
jo
jb
push
inc
and
cmp
adc
and
mov
pop
add
loopne
(bad)
stos
xor
test
push
movs
mov
push
(bad)
or
gs
mov
ins
rcl
xchg
test
aad
int3
mov
jnp
inc
inc
mov
mov
retf
jno
or
adc
cmp
ret
mov
pop
cmp
arpl
mov
pop
and
aad
cmp
mov
mov
sbb
es
arpl
fimul
outs
mov
mov
jle
xchg
sahf
dec
dec
cmp
test
or
stos
scas
stos
out
mov
cmc
and
(bad)
ins
movs
xchg
pop
sbb
ret
arpl
xlat
outs
jo
sbb
push
retf
out
push
mov
push
inc
mov
ret
punpckldq
call
inc
sbb
pop
mov
mov
inc
pop
pop
xor
push
scas
dec
push
test
lahf
mov
fldcw
pop
addr16
sbb
push
mov
ficom
fsubp
xchg
rcl
push
xor
stos
rcl
xchg
push
repnz
addr16
xor
ds
(bad)
or
jp
or
pop
mov
push
in
(bad)
push
or
retf
xor
sbb
push
mov
pop
sbb
shl
push
add
int
ror
in
and
inc
and
mov
cmp
shr
dec
sub
mov
and
and
xchg
scas
cmp
ret
(bad)
jmp
mov
je
in
fisubr
mov
imul
jmp
push
out
mov
loopne
sbb
dec
mov
jns
push
loopne
std
sbb
pop
sub
xchg
daa
dec
dec
mov
xabort
mov
imul
sub
push
enter
(bad)
lods
call
scas
xor
in
aad
test
sbb
adc
sub
test
and
xor
dec
in
mov
push
outs
fisub
dec
fld
cmp
jno
leave
and
pop
aad
xchg
je
mov
mov
push
les
ret
inc
sbb
dec
(bad)
cmps
push
movups
idiv
mov
data16
adc
sbb
mov
xchg
mov
xor
lea
mov
jno
dec
enter
mov
dec
push
jecxz
rol
or
push
mov
lods
fsubr
push
xor
ret
out
jmp
dec
cmps
in
scas
popf
push
adc
sub
inc
add
or
sbb
inc
es
cmps
bound
xchg
icebp
inc
in
outs
adc
lahf
or
sub
push
xchg
mov
xchg
das
mov
loope
xchg
data16
lds
sub
push
retf
cmp
push
mov
mov
outs
pop
lods
push
cmp
ret
sub
addr16
(bad)
out
jmp
pop
in
mov
push
repnz
pop
add
pop
out
jae
pop
fild
pop
pop
adc
std
fwait
dec
inc
(bad)
iret
stos
(bad)
enter
sub
call
or
repnz
icebp
mov
cmps
(bad)
aaa
cmp
sub
call
mov
jl
mov
push
sbb
or
jb
mov
in
movs
int
and
fstp
or
or
ins
or
scas
test
lds
and
nop
(bad)
mov
repnz
push
xor
pop
xor
lea
out
fisttp
(bad)
cld
mov
mov
fdivr
fistp
iret
mov
arpl
cmps
imul
lods
clc
add
cmp
jae
mov
mov
in
push
pop
sbb
pop
ins
and
xchg
adc
loop
adc
sub
lock
in
jnp
fimul
sbb
jmp
jmp
sahf
out
and
icebp
xor
(bad)
xor
cmps
ret
sahf
movs
sub
das
mov
ret
push
push
cmp
daa
test
stos
dec
mov
mov
ret
dec
iret
ror
jecxz
sbb
test
jbe
js
cli
sbb
push
push
shl
inc
ja
mov
mov
pop
loopne
fistp
xor
lahf
mov
jge
int3
iret
pop
das
test
jle
ffree
ja
xor
lods
jge
push
movs
adc
test
or
and
lods
ret
push
ja
mov
mov
mov
xabort
mov
sar
(bad)
hlt
imul
popf
fwait
mov
and
inc
push
pop
xor
outs
out
pop
mov
retf
cdq
cmc
jp
scas
pop
arpl
adc
pop
movs
mov
popa
inc
pop
mov
or
aad
mov
cmc
cmp
loop
in
pop
cmps
fisubr
out
or
jo
(bad)
shl
xor
test
mov
mov
sti
outs
jl
cld
mov
nop
mov
add
pop
test
jbe
imul
enter
sbb
stc
push
icebp
inc
pop
mov
outs
jne
push
and
and
fwait
or
bound
bound
(bad)
adc
lea
dec
lods
aaa
cmp
push
jmp
pop
inc
xchg
pop
mov
adc
add
dec
jns
cmc
in
mov
out
shr
scas
dec
jbe
mov
test
(bad)
hlt
ret
mov
and
jmp
dec
fdivrp
(bad)
mov
aaa
sahf
dec
je
jns
and
sbb
mov
pop
dec
sub
ret
push
das
pop
inc
sub
cwde
popf
ins
outs
jmp
dec
data16
jne
or
push
rcr
ja
cmp
sub
dec
xchg
lds
loopne
cld
in
or
adc
xchg
push
sbb
mov
dec
pusha
fist
mov
mov
push
icebp
mov
cmps
outs
sbb
xchg
cwde
rcr
(bad)
out
jns
xor
cld
cmps
aam
sar
leave
xor
fidivr
fadd
sbb
mov
sub
sub
movs
jl
pop
jp
pusha
daa
mov
adc
jge
adc
adc
out
jns
fisttp
ficomp
sar
mov
add
mov
lds
je
mov
(bad)
fild
jl
mov
das
or
lods
add
adc
pop
push
aad
mov
mov
mov
xchg
std
out
js
jg
inc
inc
out
inc
mov
sar
(bad)
jno
(bad)
xor
mov
fsubr
mov
and
nop
push
loop
pusha
rcr
nop
gs
push
movs
das
adc
lds
das
add
arpl
pop
xchg
lahf
div
lahf
dec
mov
pop
adc
lods
xchg
add
sub
mov
dec
jge
push
sbb
mov
push
cli
or
pusha
stc
lods
sbb
xor
cli
or
loope
add
sub
lock
inc
jl
in
jne
xchg
inc
add
add
in
cmp
ss
imul
in
xlat
call
xor
aad
xchg
or
xor
or
int
das
xlat
lds
pop
sub
jne
jno
xchg
push
enter
mov
mov
loopne
aaa
rcr
adc
cmp
dec
stos
rol
inc
adc
or
mov
sub
inc
enter
mov
(bad)
mov
push
loop
popf
or
jnp
inc
call
in
sbb
mov
ss
xchg
sbb
sbb
int3
stos
cmc
ds
ja
mov
scas
inc
or
xor
pop
mov
cdq
ins
mov
push
retf
mov
and
push
jle
(bad)
jp
add
cmp
jmp
mov
cwde
aad
and
mov
mov
ja
mov
dec
mov
hlt
cmp
movs
call
add
add
fstp
dec
addr16
movs
inc
cmp
cmp
ins
push
mov
mov
mov
cmp
inc
adc
sbb
fstp
ss
mov
mov
add
push
aad
push
mov
mov
shl
mov
scas
xchg
popf
mov
and
sub
mov
adc
cmps
in
mov
cmp
adc
int3
shl
push
mov
pop
(bad)
sub
mov
sbb
xor
out
ror
jmp
inc
sti
aas
bound
mov
dec
mov
mov
xor
(bad)
push
aam
adc
pop
sbb
outs
outs
sub
icebp
lods
scas
lods
je
je
push
jnp
add
imul
mov
int3
dec
call
push
push
arpl
mov
mov
pop
jns
jae
sub
jnp
pop
or
loop
lock
sub
btc
cld
movs
repz
aas
out
retf
xchg
scas
sbb
and
(bad)
out
cmps
dec
(bad)
dec
(bad)
push
fucomp
repz
inc
fistp
in
int3
sbb
xor
clc
ja
call
mov
in
movs
xchg
stc
dec
es
push
push
cli
out
leave
push
(bad)
inc
xchg
lea
outs
and
xchg
in
les
jae
mov
aad
dec
mov
xchg
mov
aam
push
addr16
test
pop
ret
repz
cmp
test
push
mov
or
jno
inc
stc
mov
pop
clc
test
pop
popf
test
aaa
fdivr
adc
lods
mov
sbb
call
fisttp
pop
ret
xor
cmovge
(bad)
jmp
dec
inc
inc
test
rcr
fsubr
pusha
jae
sbb
dec
adc
test
pop
test
sub
sub
xchg
(bad)
rcl
push
div
ins
cmc
movs
dec
(bad)
push
jns
xchg
mov
add
pop
retf
fwait
pusha
mov
clc
adc
shl
outs
pop
ret
mov
shl
jne
xchg
pop
test
jle
jo
bound
int
popf
pop
imul
or
jo
je
jae
and
into
fadd
push
sbb
mov
stos
mov
jns
and
pushf
stc
(bad)
jge
test
push
jecxz
scas
repnz
mov
mov
movs
aaa
xchg
sbb
jg
inc
jae
mov
fmul
xor
out
adc
sbb
sbb
adc
xor
pop
add
ror
xchg
inc
mov
mov
xlat
call
shr
shr
mov
inc
stos
(bad)
jmp
outs
out
lods
push
xchg
push
fidivr
push
loopne
and
push
sahf
dec
dec
mov
pop
xchg
mov
adc
mov
mov
hlt
es
jecxz
out
cwde
je
lods
mov
outs
call
es
mov
fdivp
cli
aam
jbe
pop
scas
jecxz
daa
ror
pop
ja
push
mov
dec
cld
and
pop
outs
cmp
rcl
adc
inc
xchg
bswap
pop
sbb
test
sar
sbb
jbe
stc
pop
or
iret
(bad)
jne
push
push
stos
push
movs
aam
jne
xlat
adc
pop
and
xor
addr16
mov
pop
loope
leave
loop
not
sahf
test
daa
jle
cdq
fcom
mov
adc
scas
add
pop
fstp
ror
ins
mov
sub
ficom
mov
xchg
jmp
xchg
adc
into
cmc
dec
xchg
ins
shl
adc
mov
test
ins
nop
aam
mov
xor
fwait
xchg
mov
inc
(bad)
dec
(bad)
adc
stc
sar
rcl
xchg
or
or
xor
add
pop
xchg
jecxz
aas
inc
icebp
jb
add
xchg
inc
aas
sub
inc
xchg
adc
movs
sbb
icebp
pop
retf
mov
out
xor
repnz
ret
adc
sbb
aaa
cdq
mov
test
mov
fwait
pop
mov
pop
push
inc
ret
stc
pop
adc
push
in
xchg
(bad)
ss
ret
mov
sub
push
movs
mov
pop
and
test
imul
adc
push
push
cmp
fisub
test
xchg
mov
sbb
aas
xchg
or
aad
mov
or
and
xchg
adc
adc
push
scas
push
test
inc
or
and
fadd
xor
add
push
mov
mov
push
iret
dec
xchg
ins
loope
and
arpl
or
sbb
stos
das
adc
aaa
jb
and
sbb
or
pop
(bad)
icebp
mov
sbb
xor
aad
pop
sub
shl
cmps
mul
in
test
ds
retf
dec
xchg
push
scas
or
add
sbb
pop
arpl
lahf
xor
cmp
pop
retf
jae
adc
lds
fbstp
or
addr16
pusha
jp
adc
mov
jne
fisttp
or
push
mov
push
lds
xchg
enter
sub
pop
jno
lock
scas
add
add
mov
test
int3
mov
mov
jb
cmc
xchg
icebp
jg
and
ins
div
add
cvtpi2ps
push
dec
ds
addr16
xor
jnp
add
test
xchg
clc
xchg
cdq
(bad)
call
movs
lock
mov
and
sbb
push
sahf
xor
mov
xor
mov
mov
jns
mov
cmp
ret
push
xor
scas
jp
lock
sbb
cmc
cdq
pop
jmp
test
jne
inc
or
out
xor
int
pop
sub
mov
nop
stos
sbb
xchg
and
add
jb
test
mov
sub
or
or
push
daa
dec
inc
mov
mov
jmp
das
(bad)
lea
(bad)
xchg
mov
and
hlt
pop
out
fidiv
jge
mov
cdq
xchg
fisubr
bound
dec
push
data16
loope
sahf
js
icebp
icebp
or
sub
add
addr16
pop
push
(bad)
mov
push
loop
into
data16
dec
aas
cmps
or
xor
add
pop
inc
mov
shl
ret
addr16
call
mov
push
xor
out
clc
leave
outs
hlt
mov
enter
arpl
xor
adc
js
hlt
mov
dec
out
fadd
in
adc
cmps
lods
call
inc
cmps
and
out
mov
dec
pushf
pop
and
xor
mov
loope
pop
jno
push
mov
mov
repnz
jbe
popa
push
stos
pop
cwde
mov
aad
sbb
inc
test
mov
sbb
sub
adc
scas
adc
xor
cmp
mov
fidiv
mov
pop
adc
fbld
ret
and
ja
adc
(bad)
adc
and
sbb
xor
in
sub
mov
mov
xor
mov
xor
ins
dec
pusha
inc
sub
popf
add
cmp
adc
aam
in
sub
scas
fwait
outs
adc
aas
(bad)
imul
jmp
jge
cld
and
cld
repnz
jnp
inc
scas
push
out
pop
scas
jp
push
push
nop
stos
mov
jp
jne
or
nop
cmps
and
pop
mov
jmp
cmps
jg
and
push
ret
arpl
pusha
fldenv
xor
mov
fsubr
call
xor
adc
or
(bad)
dec
call
lea
rcr
fwait
test
mov
movs
aaa
out
in
sub
retf
cs
jne
dec
es
pop
call
mov
xor
pusha
mov
(bad)
pop
stos
test
std
cld
scas
jmp
icebp
(bad)
repnz
mov
scas
scas
sub
jbe
repnz
std
dec
or
push
add
adc
inc
mov
jle
jb
mov
add
int
inc
jl
cmps
push
sub
cmps
inc
xchg
clc
inc
cmp
js
cmp
pop
jns
ins
jle
popf
shr
nop
xor
cmc
es
mov
xor
add
aaa
call
jp
jo
cmp
pop
xchg
xor
sar
arpl
pop
rcl
mov
fwait
in
aaa
aad
push
(bad)
nop
xor
sub
fnstenv
lea
sbb
xchg
call
inc
mov
loope
and
inc
sbb
mov
add
test
(bad)
hlt
adc
into
lock
dec
jno
adc
les
xor
test
lock
stos
gs
sub
and
lock
ins
xor
and
call
push
addr16
dec
fwait
sahf
xchg
inc
test
mov
xchg
pop
jne
dec
push
outs
mov
ins
and
xchg
add
mov
inc
repz
jne
sub
push
shr
xor
call
rcr
outs
adc
test
pop
pop
aam
jmp
mov
xor
fs
dec
ja
or
sub
push
scas
aaa
jne
dec
xlat
not
mov
sbb
ds
push
adc
mov
popf
xor
ja
gs
popf
test
div
loope
cli
test
out
and
fcmovnb
or
xor
int
je
retf
jae
cmpps
jno
sbb
jb
imul
es
scas
add
push
test
stos
adc
leave
shr
pop
mov
js
fisttp
rcr
rcr
(bad)
out
ja
call
and
ret
sbb
dec
je
mov
sti
shl
pop
pushw
push
pop
retf
pushf
pop
push
shl
lea
pop
in
test
mov
clc
sbb
fld
das
jmp
inc
ja
adc
and
pushf
cdq
in
and
movq
call
jp
sub
push
push
mov
inc
repnz
cmps
js
mov
sub
mov
mov
shr
xchg
sar
mov
ins
inc
cmp
div
or
pusha
in
xchg
dec
mov
(bad)
je
scas
mov
test
(bad)
out
fidiv
ins
sbb
push
mov
dec
push
cmc
in
cmc
mov
dec
push
xchg
adc
or
in
push
(bad)
or
push
sbb
fbstp
xchg
lods
pop
inc
xchg
lods
jp
mov
les
call
retf
mov
stc
jmp
pop
mov
mov
or
fdivr
das
fwait
out
dec
outs
aam
pop
jo
inc
xchg
not
xlat
jl
and
or
mov
aam
adc
dec
into
xchg
cld
jo
imul
adc
aad
mov
ins
gs
xor
jmp
pop
stos
aam
cmps
fild
cmps
aam
pop
or
out
push
(bad)
xor
push
in
mov
xor
stos
pop
dec
or
adc
movs
adc
stos
cmp
pop
repnz
into
xchg
jge
cmp
cmp
shl
mov
add
or
mul
push
xlat
pop
sar
les
rcl
(bad)
cwde
lahf
bound
xor
imul
mov
xchg
xchg
xchg
dec
popf
retf
repz
mov
dec
mov
push
xchg
test
mov
fsubrp
add
jecxz
call
add
sbb
jbe
enter
dec
cmp
ja
push
pop
outs
mov
and
jmp
outs
jg
cmp
inc
inc
push
aad
scas
mov
icebp
in
daa
out
sti
mov
pop
add
xchg
fdivr
lds
mov
sub
sub
push
jno
push
xor
daa
(bad)
inc
xor
out
pop
in
leave
push
js
pop
ins
(bad)
pop
movs
push
imul
and
pop
and
xchg
cli
pop
cmps
loope
in
adc
lods
cmps
(bad)
fst
xor
mov
shr
or
sub
push
std
out
pop
rol
ret
scas
cmp
xor
xor
das
xor
popf
cli
mov
xchg
cmp
adc
pop
std
xor
mov
cmp
sbb
mov
xchg
add
push
test
out
cli
test
sbb
add
jo
xchg
pop
adc
call
and
nop
xchg
and
sub
lods
repz
shl
xchg
and
fcomp
fsub
pop
enter
in
mov
push
inc
or
cmp
xchg
or
(bad)
test
aas
xchg
and
jl
aas
jno
loope
cmp
out
jnp
(bad)
nop
into
loope
stos
or
call
xor
mov
mov
dec
adc
lock
sub
pop
rol
jno
js
(bad)
leave
shr
inc
fisub
int3
dec
jae
mov
mov
cmp
and
dec
jbe
adc
mov
ja
cmp
movs
push
mov
cdq
pop
cmp
add
fcom
mov
leave
push
mov
push
jne
mov
icebp
aam
test
test
pop
pop
jmp
ja
mov
arpl
adc
mov
mov
(bad)
push
test
add
inc
sahf
or
or
outs
mov
(bad)
das
(bad)
fstp
call
dec
ins
ja
lods
inc
inc
dec
pop
retf
out
mov
outs
stos
fld
xchg
mov
lods
cs
enter
push
mov
outs
(bad)
mov
inc
mov
pusha
mov
mov
fild
push
int
mov
repnz
push
cmp
jmp
lods
pushf
repz
push
adc
outs
rol
daa
pop
ds
mov
sub
in
inc
loope
push
mov
mov
stos
fprem
fistp
cmp
scas
arpl
or
fnstsw
xor
mov
jg
sbb
mov
sub
push
push
sbb
mov
sbb
loope
ret
hlt
loope
movs
ret
imul
outs
xor
ins
aas
sbb
sti
lock
dec
shl
fld
ret
lock
jno
jge
sti
inc
ins
inc
mov
data16
add
cmp
add
neg
jne
cmp
dec
mov
scas
adc
pop
xor
push
mov
mov
push
ret
gs
adc
mov
sahf
mov
mov
xchg
push
clc
xchg
dec
lock
add
aam
frstor
jle
ficomp
or
pop
mov
push
add
shr
sbb
(bad)
fimul
lods
sar
cmps
or
sbb
pop
pop
imul
pop
cmp
pause
sub
(bad)
test
and
out
scas
mov
and
pop
sbb
inc
addr16
or
inc
inc
mov
xor
cmp
or
pop
aas
out
and
push
loopne
out
mov
add
jnp
rcl
sub
sub
rcr
aam
gs
dec
aam
dec
repnz
lock
xchg
inc
push
push
mov
xchg
pop
ds
xchg
test
ja
aam
clc
mov
add
xchg
xchg
pusha
loopne
mov
in
push
cld
mov
out
or
addr16
add
aas
es
leave
pop
popf
sub
stos
js
add
cmp
jmp
data16
mov
and
lahf
mov
jae
shl
icebp
loope
(bad)
lock
sub
ins
cs
in
popa
enter
imul
sbb
mov
mov
movs
mov
cmc
in
add
into
dec
(bad)
dec
add
shufps
fs
jge
inc
or
(bad)
lods
test
mov
out
dec
mov
sbb
loop
fstp
xchg
xor
mov
stc
add
inc
div
jp
mov
ret
adc
ret
push
gs
mov
mov
push
push
dec
pop
push
dec
loop
dec
or
dec
mov
jns
stos
add
mov
stos
xchg
hlt
js
(bad)
loop
js
or
pop
sti
adc
pop
or
jmp
pop
data16
and
sahf
lea
push
pop
in
xor
div
cmp
bound
xchg
push
add
mov
std
pop
test
mov
lods
push
fadd
xor
clc
movs
dec
push
stos
and
push
xchg
cmp
hlt
ret
push
stos
ds
fld
hlt
in
or
push
jmp
xlat
sub
in
hlt
mov
cmp
js
lea
repz
popf
mov
daa
hlt
enter
aam
ret
jae
inc
push
xor
jmp
(bad)
arpl
xor
dec
fwait
in
aas
iret
hlt
mov
dec
jno
fst
and
mov
ins
xor
out
test
lds
pop
frstpm(287
retf
call
mov
xchg
or
stos
sub
pop
cmps
cmp
call
(bad)
mov
push
and
outs
ret
xchg
call
add
sbb
sbb
fmul
inc
jmp
push
mov
(bad)
lahf
aad
push
les
(bad)
cmp
mov
fld
jo
xor
and
push
cmp
into
aaa
cmps
dec
push
mov
xor
sub
aam
xor
neg
mov
and
add
or
shr
(bad)
mov
sbb
out
add
mov
popa
mov
cdq
ds
fucom
push
xchg
test
out
cmp
retf
push
mov
pop
add
test
mov
dec
adc
xchg
cli
sbb
rcl
sub
test
sbb
scas
jmp
inc
mov
test
jecxz
xor
out
movs
jl
cmps
push
mov
imul
jp
sti
cmp
cmp
pop
xor
mov
mov
xchg
aaa
fisubr
ret
mov
pop
pop
jmp
mov
data16
iretw
dec
imul
xchg
cmc
adc
xchg
lods
dec
push
xchg
dec
pop
sar
xchg
pop
movs
or
pop
fstp
fisttp
pop
sub
add
inc
xchg
xor
test
pop
xchg
and
jp
shl
add
push
(bad)
icebp
xchg
jecxz
test
rcr
iret
cwde
and
into
pop
or
mov
cwde
lds
imul
dec
fcom
or
jle
cmp
sbb
rcl
out
sbb
in
aas
popa
sbb
or
scas
lods
aam
cmp
and
out
scas
jo
jmp
out
dec
mov
stos
xchg
mov
mov
shr
fsubr
clc
ins
fnstenv
sti
xchg
dec
call
jmp
xor
cli
mov
mov
jae
scas
loop
sbb
mov
lds
and
fdiv
sti
pushf
xchg
inc
cmp
sbb
sbb
push
jne
push
aad
hlt
call
jl
push
sbb
outs
jns
push
mov
add
call
movs
(bad)
push
iret
rcl
dec
adc
bound
xor
gs
mov
hlt
jp
loop
or
lds
add
fsubr
out
mov
ror
sub
inc
repz
fsubr
mov
adc
xchg
and
test
mov
xchg
sub
xchg
test
scas
std
pushf
(bad)
fpatan
pop
data16
inc
pop
bound
scas
imul
lods
fdiv
popf
cmp
test
and
ins
ins
mov
xchg
into
rol
imul
clc
and
and
pop
scas
je
ret
loop
push
shl
jmp
adc
imul
lea
jg
nop
mov
sbb
xor
inc
xor
(bad)
push
loope
int3
cld
stos
xor
(bad)
xor
dec
mul
stos
push
inc
pop
push
scas
sahf
test
retf
jle
mov
retf
ja
aad
or
loopne
mov
xchg
push
sub
cwde
and
in
scas
fld
sub
mov
sub
or
cmps
popa
jnp
mov
nop
sti
jg
inc
mov
imul
xor
and
inc
dec
xchg
push
sahf
retf
xor
fwait
push
sar
ja
retf
jl
jo
push
dec
xchg
or
mov
daa
mov
jns
jae
nop
and
adc
call
int3
sbb
mov
jnp
mov
ins
outs
mov
jbe
jb
adc
sahf
scas
push
ror
outs
leave
outs
inc
inc
add
adc
jmp
or
sub
pop
sti
or
inc
dec
jecxz
cwde
cdq
shl
fmul
xchg
inc
pop
sbb
mov
cmp
xor
mov
jmp
xchg
jmp
mov
ins
aas
mov
or
daa
mov
jb
ja
xor
cmp
push
xor
aaa
pop
fcom
push
das
sub
ss
adc
cli
nop
cmp
inc
fadd
js
adc
sub
repnz
mov
add
xchg
adc
clc
hlt
outs
mul
loopne
push
dec
pop
mov
inc
repz
sti
xchg
sbb
sbb
icebp
push
add
xchg
jno
mov
sub
xlat
cli
inc
and
aad
inc
jne
pop
or
shr
inc
jo
pop
sbb
stos
test
adc
pop
test
(bad)
mov
imul
sbb
pop
addr16
sub
test
mul
in
inc
pop
fdiv
pusha
push
aas
retf
pop
aam
xchg
mov
divps
adc
fistp
in
stos
push
loop
cdq
shl
dec
adc
and
jo
popf
mov
mov
pop
int
retf
xchg
inc
test
jb
sbb
test
sbb
sahf
aam
leave
mov
lods
mov
jp
push
pop
mov
or
adc
repnz
adc
iret
lods
dec
mov
test
lods
lahf
mov
fcmovbe
mov
jp
mov
mov
pop
sub
mov
mov
cmps
mov
aad
cdq
fcmovbe
cmp
cmp
push
xchg
and
push
xlat
cmp
jno
sub
hlt
cmps
(bad)
outs
pop
adc
(bad)
stc
pop
or
or
pushf
out
jne
add
sub
sbb
push
push
out
imul
clc
and
sbb
mov
sbb
push
mov
stc
push
and
inc
xchg
fbstp
outs
(bad)
jne
add
cmp
pop
jb
mov
into
dec
mov
pop
movs
jae
loop
dec
mov
or
jp
push
test
int3
shr
inc
push
rcl
fdivr
in
(bad)
int
lods
scas
push
mov
and
inc
mov
(bad)
jnp
lods
and
cmp
add
(bad)
mov
imul
sahf
push
pushf
mov
and
xor
imul
mov
add
test
jne
aas
inc
ret
ds
adc
stos
jnp
adc
arpl
pusha
test
push
inc
jp
fist
lahf
push
fwait
in
adc
add
xlat
sbb
and
sub
and
cmps
push
cmp
mov
sbb
les
lahf
(bad)
inc
push
cs
xchg
stc
test
add
and
mov
es
ret
test
aad
fidivr
fidivr
js
cmps
mov
stos
and
xor
icebp
icebp
push
(bad)
jns
clc
adc
out
lds
sahf
jbe
inc
sub
lea
mov
xchg
ins
bound
pusha
(bad)
mov
jbe
and
jo
pop
imul
loopne
push
or
mov
aaa
jb
xchg
and
(bad)
repnz
xor
mov
cmp
pop
ret
xchg
and
out
push
ret
movzx
imul
add
pop
mov
dec
stos
xor
xchg
jno
inc
mov
iret
adc
and
mov
iret
stos
mov
shr
and
and
call
mov
jle
push
int
inc
jg
cmps
movs
repz
xor
mov
int3
test
or
sbb
cmp
add
adc
std
adc
call
inc
pop
pop
pop
aam
jle
push
mov
or
pop
xchg
push
push
pop
mov
popf
sub
aam
ss
mov
out
sahf
mov
sahf
cmc
lods
fwait
cld
outs
movs
sub
(bad)
mov
pusha
loop
out
cmc
js
dec
outs
push
in
pushf
shr
loopne
xchg
cs
ja
and
shr
dec
sahf
retf
mov
ret
in
or
les
mov
test
and
outs
bound
jl
mov
push
data16
xchg
pushf
out
std
clc
mov
push
lds
push
pushf
ja
gs
or
xchg
aas
xor
push
in
les
sbb
aaa
ror
ins
bound
imul
mov
inc
sbb
aam
arpl
xchg
jge
mov
push
xor
shr
icebp
inc
jae
popf
jmp
sar
mov
ret
xor
mov
and
loop
sub
pop
add
mov
pop
jmp
iret
inc
test
sahf
cmc
shl
cmp
(bad)
fisub
mov
dec
in
push
xor
popa
loopne
xchg
dec
lods
call
push
jb
clc
in
cld
aad
cmp
mov
ja
test
pop
mov
in
out
pop
fcomp
test
movs
xchg
out
sbb
xor
loop
call
popa
cwde
mov
shl
or
inc
iret
loopne
retf
ja
(bad)
xchg
in
xor
dec
out
(bad)
xor
sbb
je
stos
in
add
(bad)
out
arpl
movs
rcr
mov
cmp
dec
pop
xchg
sub
jbe
iret
popf
inc
fdivr
adc
sub
retf
dec
mov
jl
out
sbb
imul
dec
mov
add
push
movs
and
cli
(bad)
adc
xor
pop
(bad)
into
mov
pop
mov
jl
inc
sbb
jb
pop
loopne
adc
jbe
xor
push
and
mov
xchg
outs
fild
call
in
adc
sbb
and
(bad)
sub
dec
(bad)
mov
out
inc
xchg
pusha
sbb
jbe
ret
dec
shr
jb
xchg
xchg
push
xchg
(bad)
fisttp
(bad)
sub
data16
fmulp
inc
push
aaa
push
aam
mov
clc
out
sbb
inc
rol
push
inc
(bad)
iret
imul
(bad)
fist
xor
xchg
ss
cmp
jae
mov
jg
loopne
jns
imul
loope
mov
pop
cmps
pusha
and
mul
popf
cs
jle
mov
mov
mov
jbe
outs
js
mov
in
sti
cs
and
ins
push
push
(bad)
and
dec
pop
test
xchg
or
add
adc
inc
ret
int3
sub
cmc
or
ret
mov
pop
push
popa
ror
dec
stc
mov
stc
cli
aas
mov
or
pop
mov
cld
aas
jmp
int
dec
jno
sub
jbe
in
(bad)
or
pop
test
pop
stos
pop
es
imul
aas
xchg
jns
pop
test
stc
xchg
in
xor
jecxz
rol
shl
adc
sbb
leave
test
hlt
shr
inc
sbb
pop
add
pop
push
outs
inc
jge
push
stos
retf
jg
not
adc
in
loop
movs
push
std
mov
adc
out
inc
aaa
sbb
ret
inc
and
(bad)
pop
shl
lds
pop
and
pop
dec
inc
lock
into
adc
into
cld
push
out
das
mov
movs
sti
or
jns
mov
fwait
repz
fwait
inc
xor
mov
lods
pop
mov
in
imul
cmc
push
fcomp
out
and
mov
adc
leave
inc
(bad)
pop
mov
into
jl
xor
js
xchg
push
fdiv
sbb
bound
inc
pop
(bad)
fsubr
test
adc
xor
xchg
aad
xor
or
inc
xor
cmps
repz
fistp
cwde
xor
les
stc
test
popf
xchg
cmp
pop
push
repnz
(bad)
(bad)
mov
push
(bad)
pop
dec
mov
push
(bad)
and
ror
mov
pop
xchg
rcl
popa
mov
jl
jo
add
ja
scas
or
sti
push
jmp
dec
pusha
push
(bad)
repnz
test
jg
dec
push
or
jecxz
mov
ja
aas
or
xor
push
nop
or
inc
fidiv
(bad)
xor
stc
pop
inc
push
iret
loop
dec
mov
adc
imul
mov
xlat
nop
loop
jnp
iret
popa
pop
push
leave
retf
inc
mov
or
ss
jns
loopne
lahf
xor
cmp
and
mov
ds
daa
or
cmp
mov
ret
out
adc
xor
out
cmp
outs
push
jmp
shr
sub
or
iret
adc
ficomp
lods
xchg
inc
dec
sub
(bad)
ins
sti
das
(bad)
push
rcl
and
cvtps2pd
dec
add
dec
out
and
rcr
es
movs
mov
bound
shl
inc
fucomp
bound
outs
(bad)
call
movs
push
sub
movs
fidiv
push
adc
popf
mov
pop
ja
sbb
daa
enter
sbb
dec
cmp
inc
iret
inc
add
jge
leave
mov
adc
dec
scas
je
xchg
(bad)
popa
sub
in
xlat
jge
push
dec
cli
mov
sub
inc
ret
inc
xor
test
movs
and
inc
jle
js
inc
out
leave
shr
xchg
sub
shl
fld
shl
hlt
lahf
mov
sbb
mov
add
adc
out
imul
mov
imul
and
sbb
sti
xor
sub
(bad)
rsqrtps
xchg
sbb
cmp
loop
mov
mov
inc
adc
shl
mov
aam
stos
pusha
arpl
sar
push
cmc
cwde
push
pop
shl
cmps
mov
push
dec
fwait
and
imul
xchg
pusha
dec
mov
pusha
sub
jl
or
push
popa
and
dec
push
sub
adc
or
jns
popf
push
mov
inc
fdivr
mov
pop
adc
clc
daa
scas
imul
mov
sub
inc
daa
lods
jno
mov
pusha
adc
aad
retf
sahf
jecxz
xor
mov
sub
push
call
mov
mov
scas
jmp
inc
cwde
and
xchg
mov
arpl
iret
mov
pop
sub
mov
push
mov
pop
jmp
pushf
jge
out
(bad)
jg
sub
adc
sub
ret
aaa
shr
jge
mov
dec
adc
mov
fst
mov
(bad)
(bad)
ficom
(bad)
mov
int3
mov
xchg
pop
adc
or
call
mov
jl
cmp
pop
mov
movs
inc
sbb
jo
or
fldcw
call
daa
imul
sbb
cmp
fdiv
xor
inc
push
in
or
jb
out
stc
xchg
add
test
stc
cmp
cmp
add
test
mov
js
arpl
push
inc
add
addr16
jae
nop
mov
push
xchg
push
pop
pop
ds
aam
push
sbb
sti
js
nop
sahf
add
inc
pop
and
sbb
out
xchg
sbb
stos
mov
call
div
push
add
into
mov
push
xor
jecxz
and
sar
mov
dec
dec
out
sub
push
daa
add
lea
cld
xchg
pop
jg
pop
jnp
xchg
hlt
and
mov
ds
arpl
out
jno
aas
or
pop
lds
and
sub
mov
mov
mov
or
aas
jmp
dec
ins
jns
cmp
(bad)
xchg
pop
lds
enter
retf
add
lods
dec
mov
data16
in
test
add
xchg
popa
mov
xor
repz
ja
mov
ins
rol
imul
imul
xchg
jne
xor
ret
pop
repz
aad
fiadd
lods
mov
add
pop
out
inc
xor
dec
test
sar
jecxz
mov
mov
inc
in
inc
push
push
jb
cmp
ja
js
scas
xor
jbe
fdivp
cmps
addr16
xlat
push
mov
mov
and
in
add
pop
or
shr
jne
and
dec
imul
fimul
arpl
mov
inc
inc
lock
push
int
or
les
mov
mov
add
leave
xor
mov
int
cs
in
mov
sub
pop
ja
add
enter
fdiv
iret
loope
lds
or
popf
jmp
pusha
arpl
clc
dec
scas
or
mov
xchg
js
xchg
test
mov
sbb
bound
mov
adc
pop
sbb
xchg
pop
dec
fdivr
fcomp
stc
test
push
pop
(bad)
call
loop
std
mov
in
(bad)
push
lea
aad
push
xchg
(bad)
lock
imul
fnstenv
clc
ror
or
pushf
mov
fwait
hlt
mov
jg
push
adc
adc
fwait
hlt
outs
call
outs
rol
dec
out
nop
sbb
mov
push
lods
fwait
cmp
xor
stos
je
(bad)
jnp
add
idiv
xchg
xor
cmps
dec
push
jp
stc
pop
stos
(bad)
out
xchg
adc
mov
xchg
push
enter
mov
or
retf
pop
stos
mov
ds
cmp
popa
xchg
out
(bad)
cdq
dec
mov
pop
cmc
stc
adc
lods
push
sub
adc
jg
out
lds
or
pop
sbb
mov
inc
lods
(bad)
xor
mov
sbb
push
add
mov
scas
xchg
lods
mov
test
jg
inc
nop
out
(bad)
dec
retf
hlt
inc
and
retf
(bad)
call
popf
and
fwait
inc
mov
sub
jno
or
imul
fwait
dec
shr
daa
inc
mov
ror
mov
shl
loope
jmp
les
data16
cmp
push
call
cmc
fcomp
les
sbb
idiv
inc
retf
dec
pop
and
outs
pop
loope
sahf
lods
mov
mov
xchg
pop
xlat
stos
inc
loope
xchg
test
(bad)
mov
xchg
jmp
xchg
adc
adc
pop
aas
xor
adc
sub
in
daa
jecxz
imul
(bad)
mul
ins
xor
cmp
add
movs
mov
js
pop
aam
les
fmul
ret
inc
inc
mov
lahf
test
add
push
jmp
cmp
test
push
icebp
jno
mov
sti
call
into
xchg
jmp
pop
ds
mov
jecxz
sbb
ds
pop
or
and
fistp
mov
inc
imul
jp
cmp
or
mov
sub
jo
daa
imul
mov
pop
cmp
lds
rcl
scas
cs
hlt
inc
jmp
pop
adc
mov
mov
ins
lods
and
inc
add
add
fbld
or
cld
xchg
xchg
jmp
cmp
push
add
ins
mov
cs
in
adc
ins
jl
dec
addr16
adc
not
add
sub
imul
mov
mov
das
test
popf
sar
popa
into
stc
cmps
or
scas
retf
inc
xor
xlat
jp
dec
sbb
retf
ret
mov
hlt
sbb
arpl
imul
or
cmps
repz
mov
in
mov
test
fsubr
xchg
pop
(bad)
jbe
xchg
arpl
fistp
dec
not
aas
push
mov
mov
or
sub
fnstcw
lock
push
jbe
ficom
aas
jae
dec
repz
mov
sub
ins
daa
xchg
sti
add
pop
aam
popf
shr
push
mov
aas
mov
mov
jge
iret
sbb
arpl
daa
add
jae
xchg
inc
mov
sbb
je
rcl
mov
adc
sbb
xchg
push
sbb
(bad)
mov
mov
ins
out
jmp
(bad)
push
mov
xchg
and
in
jbe
mov
leave
into
pop
jae
das
fnstenv
xchg
add
cmp
jnp
cmp
cmp
cmp
sub
test
scas
(bad)
jae
jnp
jne
jmp
cdq
fdivr
or
cmps
and
push
xor
pop
and
dec
out
into
out
and
xchg
rol
inc
push
push
(bad)
js
dec
shl
jb
loope
dec
fmul
ja
ss
adc
das
adc
push
sbb
sub
jno
xchg
fmul
pusha
xchg
jne
arpl
cs
and
(bad)
adc
inc
(bad)
mov
cmp
jbe
ret
aaa
or
ret
icebp
sbb
sti
cmps
int
sbb
cli
xor
xchg
(bad)
dec
mov
or
dec
xchg
sbb
mov
mov
xchg
or
mov
rcl
push
xchg
mov
pop
cmp
cmps
popa
iret
and
inc
(bad)
mov
mov
mov
sbb
adc
shr
fadd
loope
jp
repz
jmp
cli
cmp
add
add
mov
in
imul
arpl
pop
cmp
mov
fnstcw
test
jb
dec
stos
mov
sbb
sbb
xchg
add
movs
xor
xchg
mov
mov
mov
or
sub
rol
int3
mov
pop
jg
mov
cmp
pop
pop
mov
mov
rol
lea
add
(bad)
data16
adc
repnz
loop
inc
(bad)
xor
cdq
sbb
and
mov
pop
push
stos
sub
cli
mov
mov
and
clc
sahf
cmp
xchg
adc
stc
and
inc
sbb
pop
cmp
pop
dec
icebp
pusha
nop
xor
xchg
(bad)
call
mov
js
sbb
sbb
lds
dec
cmp
pop
ins
rcl
out
loopne
mov
jge
lea
cdq
out
inc
arpl
or
aaa
test
pop
sahf
xchg
mov
jecxz
call
mov
stc
jmp
push
xchg
inc
xchg
out
pop
mov
inc
retf
push
jl
or
xchg
test
lahf
shl
sar
mov
inc
jle
adc
sbb
fild
gs
clc
rol
movs
jg
test
rol
rcl
stos
int3
imul
mov
in
ret
(bad)
frstor
lea
mov
pop
dec
mov
dec
sti
in
das
push
mov
fld
cmps
aas
fadd
dec
jmp
inc
add
scas
and
mov
jmp
mov
out
lock
loopne
push
add
fwait
fwait
and
mov
inc
pop
(bad)
jne
cmp
in
fbstp
pop
gs
retf
fist
adc
enter
xor
iret
in
repz
fisub
das
pop
or
mov
xlat
rcl
xchg
(bad)
pop
leave
xor
cli
movs
jmp
ja
push
nop
mov
cmp
mov
sub
mov
pop
push
sub
cmps
ins
push
stos
xor
and
shl
mov
shl
jns
pop
cld
movs
xlat
sbb
ret
adc
fmul
cmp
xor
mov
xchg
adc
cmps
inc
dec
push
pop
(bad)
jno
mov
test
xchg
fisttp
das
adc
cmp
sbb
or
imul
push
pusha
pop
sub
pusha
or
retf
cmp
adc
mov
dec
sbb
pop
popa
xlat
or
pop
jg
xor
cs
mov
cmp
mov
iret
stc
push
test
(bad)
ret
mov
cmp
cmp
fnstenv
je
ins
mov
xchg
nop
add
repnz
nop
sbb
cmp
add
mov
outs
je
stc
push
add
mov
mov
cmps
sbb
jge
cmc
cmc
push
test
push
not
xor
xchg
jbe
pop
repnz
bound
out
gs
lods
push
ror
retf
and
sbb
cld
mov
adc
mov
call
ja
jnp
lods
mov
jno
adc
pop
dec
fst
xor
aaa
(bad)
or
pop
push
jb
leave
mov
sar
outs
loop
stos
fwait
shr
mov
js
rol
jp
mov
(bad)
daa
mov
je
xchg
push
(bad)
enter
call
cmp
sbb
outs
push
les
push
xor
mov
fwait
jnp
out
out
in
xlat
dec
cmp
sub
scas
in
retf
ds
pop
xchg
pop
dec
mov
inc
ins
xor
jno
test
sbb
mov
jne
scas
(bad)
push
retf
push
xor
rol
addr16
rol
add
not
inc
jmp
pop
scas
xlat
pop
mov
push
or
jne
jecxz
popf
lods
inc
data16
inc
pop
leave
add
int
push
xchg
dec
aaa
sti
nop
in
out
in
rcr
dec
mov
inc
ret
inc
pop
(bad)
ficom
mov
mov
movs
(bad)
pushf
mov
les
lds
push
sar
fs
jp
or
push
mov
ja
xchg
and
fsubr
rcr
mov
and
jmp
js
(bad)
mul
dec
xchg
mov
mov
repz
mov
jns
sub
adc
and
call
cmps
sub
pop
sub
test
out
mov
push
loopne
es
xchg
mov
xor
mov
cmps
mov
bound
bound
daa
sbb
stc
ins
adc
sbb
mov
iret
push
adc
mov
jecxz
jecxz
inc
in
lods
or
pop
fstp
es
or
inc
mov
sahf
mov
stos
fimul
cmc
jb
pop
sub
data16
ds
(bad)
pusha
dec
lahf
lods
icebp
add
addr16
cmc
inc
sbb
add
xchg
and
jle
fldcw
sbb
cmps
mov
test
sub
push
jmp
sti
mov
sub
push
ret
cmp
pop
sub
push
xor
jne
and
cld
gs
jg
fldenv
xchg
push
test
repnz
and
scas
xor
ins
fisttp
pop
pop
jnp
push
into
pop
das
fisttp
(bad)
add
fucomp
mov
in
jno
lock
test
scas
test
mov
mov
cmc
or
adc
dec
adc
adc
cmps
xor
xchg
(bad)
div
xor
jge
xchg
and
mov
gs
add
cs
cwde
fs
xor
cmps
jno
into
pop
mov
and
pop
pop
mov
cmc
dec
mov
cmp
call
loop
mov
mov
movs
xchg
rcl
or
pop
into
int3
pop
dec
xchg
call
(bad)
retf
fsincos
jle
fist
loope
mov
sbb
push
jl
add
pop
inc
fimul
xchg
or
or
mov
mov
jno
add
adc
aad
lds
idiv
repnz
and
ficom
or
scas
sar
in
ror
je
push
and
mov
or
(bad)
pop
outs
xchg
jb
or
and
imul
inc
sbb
inc
rcl
cmp
push
add
imul
imul
sub
and
xchg
add
cli
cmps
jno
pushf
push
jo
enter
adc
jb
sbb
mov
cmp
sub
dec
sbb
cmp
lds
jnp
push
je
icebp
loope
ror
in
repz
mov
jb
fdivr
jg
or
add
mov
fidiv
retf
jbe
dec
or
ror
jns
inc
jmp
gs
and
sbb
inc
push
mov
cmp
xlat
cmps
add
paddsb
and
enter
ficom
es
cmp
movs
and
scas
loop
pop
shl
clc
mul
test
xchg
sar
xchg
xor
adc
leave
mov
inc
adc
fadd
and
or
cli
xchg
xor
pop
pop
sbb
rol
and
xor
repz
mov
push
mov
(bad)
xor
fldenv
or
and
in
mov
cmps
cmp
jl
scas
pop
cdq
xchg
imul
dec
jbe
jle
mov
xchg
mov
xor
imul
sbb
fiadd
inc
fstp
dec
int3
mov
(bad)
push
add
lods
jge
push
push
test
and
mov
sbb
aad
jle
mov
ins
daa
push
repz
stc
sbb
push
fs
pusha
scas
retf
mov
xchg
jns
sbb
jge
out
mov
stos
jnp
shr
cmp
push
(bad)
aam
dec
pop
sub
ret
iret
adc
pop
mov
mov
sub
jae
movs
shr
adc
js
and
sub
push
pop
ins
add
xor
jo
sub
xchg
fst
nop
mov
(bad)
push
gs
fwait
aad
xchg
(bad)
push
and
shl
(bad)
movs
lock
and
cmps
rol
imul
mov
shl
scas
(bad)
sub
out
dec
imul
enter
int
sbb
popaw
dec
jne
push
pop
xor
mov
into
xchg
push
fisttp
push
scas
xchg
add
lea
or
adc
jb
or
xchg
ss
xchg
inc
push
imul
mov
mul
sbb
shl
out
add
(bad)
and
(bad)
retf
pop
outs
jne
xchg
cld
jmp
scas
(bad)
mov
sti
xchg
add
dec
pop
and
repnz
cmp
pushf
push
cmp
mov
push
repnz
mov
mov
mov
mov
add
dec
pop
and
bound
dec
sbb
fs
inc
outs
loopne
xor
dec
call
fnstcw
fnstsw
rcr
pop
cmp
xchg
pop
retf
rcl
imul
iret
(bad)
outs
bound
movs
xor
shl
push
ror
movs
and
in
std
loope
sub
add
mov
adc
cmp
test
test
add
inc
ja
lahf
mov
jmp
repnz
stc
push
stos
sub
adc
xchg
sti
fist
fmul
mov
mov
sub
rcl
shl
clc
test
fidiv
cmp
pushf
leave
stos
cwde
js
fild
loop
mov
adc
and
lods
xor
adc
pusha
out
push
jnp
sub
ja
mov
ror
dec
call
sar
pusha
in
inc
js
cmc
les
mov
mov
retf
test
imul
sub
sub
lods
mul
(bad)
cmc
jbe
es
fnstcw
loope
out
hlt
dec
mov
jo
in
cli
xchg
icebp
mov
(bad)
into
cmp
fwait
imul
dec
stos
add
fistp
dec
dec
and
jecxz
mov
add
cmp
sahf
cli
in
icebp
xchg
pop
enter
mov
out
rol
rcl
fst
and
xchg
push
dec
cmps
ins
push
lea
mov
dec
mov
inc
not
dec
xchg
jns
dec
stc
cld
pop
adc
retf
pop
cld
or
(bad)
xchg
xchg
push
and
ds
(bad)
mov
cmp
jne
test
cmp
xchg
inc
push
test
lods
adc
and
mov
or
std
ret
hlt
out
mov
fisttp
fimul
(bad)
scas
or
fwait
out
mov
sbb
loopne
cmp
test
cli
adc
jo
jns
shl
xor
pop
add
add
shr
xor
aam
rcr
sub
aaa
mov
retf
fxch
lds
jl
sbb
sar
sub
bound
mov
inc
mov
xlat
mov
jo
(bad)
lahf
xor
jl
dec
(bad)
jmp
cmp
fst
out
fisttp
dec
dec
lods
cmp
cmc
loope
sub
mov
ja
loope
fnstcw
cmps
pop
std
lock
bound
js
out
les
jbe
push
imul
push
or
inc
or
fcmovu
scas
mov
das
cmps
loope
push
test
mov
mov
sub
fsubr
cmps
xchg
ins
lods
jp
hlt
(bad)
pop
jbe
mov
push
nop
std
jmp
in
jae
cld
inc
cmp
xor
mov
and
cmp
xchg
jo
pushf
mov
cmp
inc
mov
jnp
mov
imul
ret
cmp
inc
(bad)
lds
sub
aad
inc
sahf
push
ret
mov
mov
(bad)
push
lods
push
out
dec
inc
retf
push
inc
inc
(bad)
imul
mov
or
cwde
fldcw
cmp
ret
pop
fbstp
sbb
mov
aas
adc
sub
jl
add
and
ja
mov
enter
dec
inc
test
clc
jge
popa
outs
jl
cmps
pop
xchg
sbb
fwait
dec
dec
inc
and
pop
mov
pusha
js
xchg
sub
btr
xor
bound
out
imul
inc
enter
out
cmp
cld
js
inc
jo
mov
xor
repz
cmp
mov
dec
jp
in
ins
inc
and
sub
sub
xchg
xor
jmp
sbb
daa
mov
add
jbe
push
push
inc
inc
push
push
mov
enter
ror
aas
lods
xchg
pop
repz
test
rol
xlat
pop
out
loope
push
mov
or
mov
out
jno
test
or
sbb
push
push
ins
cmp
fdiv
push
test
jecxz
xor
inc
(bad)
pop
push
pushf
pop
adc
sub
push
pop
mov
je
dec
mov
gs
sbb
mov
mov
and
mov
sbb
jmp
push
repnz
pop
and
loope
pop
adc
(bad)
std
cmp
test
addr16
sti
daa
popf
mov
(bad)
push
std
ret
test
jns
imul
retf
pushf
xchg
sub
dec
push
je
xor
push
dec
push
sub
inc
fild
xor
pop
mov
das
or
xchg
int3
inc
retf
xor
dec
iret
aam
seto
aaa
lods
push
cdq
add
retf
sbb
cld
imul
mov
retf
jge
mov
dec
pop
jne
xchg
sahf
adc
mov
test
ret
pop
nop
jl
sbb
xor
inc
or
mov
inc
add
mov
jo
mov
fisubr
add
fnstsw
inc
repnz
pop
and
fwait
icebp
mov
lea
ja
pop
mov
add
outs
adc
je
out
adc
add
ds
push
inc
add
in
or
fdivr
mov
xchg
xchg
sti
adc
pop
push
pushf
xor
in
adc
jmp
ja
and
pop
or
daa
mov
dec
add
mov
cmp
cmp
push
jp
lock
mov
sub
fcom
jl
push
retf
das
imul
scas
push
pop
ins
sbb
popa
sbb
sti
xor
push
std
cmp
dec
and
(bad)
getsec
mov
xchg
lock
fisub
xlat
jle
inc
pop
stos
pop
mov
(bad)
out
mov
(bad)
pop
enter
or
sti
pop
sbb
push
mov
jns
js
or
push
fmul
and
imul
cmps
mov
test
push
out
(bad)
jp
ins
sub
lea
ds
mov
sar
test
into
mov
fstp
stos
cli
aam
out
ror
sbb
outs
add
lods
adc
mov
gs
or
rol
stos
push
adc
mov
js
loop
add
or
sbb
push
inc
(bad)
hlt
ror
icebp
test
test
cld
outs
mov
mov
rol
ins
xor
fimul
push
clc
idiv
adc
inc
scas
scas
dec
inc
xchg
repnz
imul
jmp
pop
add
xchg
pop
adc
xchg
cld
sti
popf
inc
adc
outs
adc
mov
adc
mov
retf
pop
mov
cmp
sbb
cmp
ja
push
push
mov
aaa
aaa
xlat
cmp
mov
cmp
imul
aaa
inc
xlat
push
inc
mov
inc
lahf
jnp
pop
int3
outs
ror
push
in
jno
mov
cld
and
push
loop
addr16
sahf
adc
mov
pop
mov
push
cli
inc
push
popa
out
sub
mov
push
cdq
pop
(bad)
or
xor
mov
cld
jmp
dec
jg
pop
sahf
call
mov
mov
test
stos
movs
inc
rcl
or
or
or
sti
popf
(bad)
es
dec
pushf
cmps
(bad)
es
add
xchg
stos
cmc
xchg
lods
pop
imul
pusha
sbb
adc
mov
mov
or
neg
out
pop
push
(bad)
cld
int3
rcr
push
inc
sbb
add
xor
mov
cmp
jmp
in
nop
ss
adc
shr
push
xchg
sar
pop
mov
and
sbb
psubsb
mov
xchg
jl
out
popa
or
scas
loope
daa
adc
cmovno
js
sub
mov
mov
into
dec
enter
or
mov
call
les
and
adc
mov
mov
xor
fist
cmp
ror
xor
test
movq
add
test
iret
jecxz
sbb
dec
lods
mov
hlt
sbb
push
jbe
fld
xchg
loopne
mov
dec
icebp
sti
jp
and
popa
test
popa
mov
in
mov
mov
mov
push
cmp
xlat
mov
test
pop
(bad)
out
repnz
push
gs
sub
loop
and
ins
aad
push
xor
shr
repz
cmp
xchg
xchg
ins
xchg
jns
inc
popf
mov
xor
test
aaa
pop
adc
dec
lea
fs
shl
adc
mov
rol
cmp
aad
(bad)
movs
ret
imul
mov
mov
push
fisub
ret
add
xor
cs
inc
test
outs
jge
fidiv
dec
jmp
sub
inc
or
mov
jo
jne
cld
jl
mov
cmp
test
icebp
inc
inc
adc
mov
add
fwait
jb
cld
je
cmp
add
add
adc
jb
movs
pop
fs
data16
mov
push
add
push
adc
adc
push
sbb
xchg
mov
or
pop
retf
aam
imul
dec
mov
retf
(bad)
call
jns
shl
sbb
das
aad
retf
lods
fst
or
mov
dec
das
mov
cld
retf
adc
ja
lds
sahf
retf
cmps
push
sub
scas
and
test
add
stos
repnz
add
sbb
ret
(bad)
int3
push
inc
sysexit
jg
cmp
pop
stc
push
mov
ins
lods
or
sub
inc
mov
jnp
add
sti
cdq
inc
cmp
cmp
cmp
nop
adc
sub
sbb
dec
jp
adc
ins
xlat
test
arpl
std
pop
xchg
cmc
jle
and
mov
and
fild
mov
imul
leave
push
ret
add
cmc
adc
dec
neg
cmp
out
pop
mov
in
or
and
jno
pusha
addr16
retf
cmp
push
adc
mov
push
jge
icebp
cmps
adc
add
in
push
test
pop
mov
aam
push
pushf
mov
dec
jge
dec
out
jbe
ja
xchg
and
and
sub
stos
outs
js
dec
sub
fidiv
bound
jno
cmc
mov
popf
outs
sar
data16
inc
push
sub
lea
mov
pushf
nop
jmp
mov
lods
mov
jle
cmp
lds
sti
sub
and
mov
add
(bad)
or
bound
jmp
xchg
mov
jb
xor
push
push
shl
test
lea
jg
xchg
jno
cmp
call
adc
les
add
and
sbb
lds
scas
jmp
(bad)
push
popf
stc
mov
sub
loopne
stos
aaa
and
sbb
arpl
icebp
or
mov
addr16
push
jmp
rol
es
mov
xchg
inc
movs
rol
addr16
imul
aaa
rcr
cmps
cmp
ds
sub
inc
loope
push
and
or
mov
pop
jl
jmp
hlt
cld
pop
sub
arpl
dec
and
xor
lods
sti
pop
jno
hlt
adc
in
popa
lds
stc
sar
dec
shl
cmps
aas
mov
xchg
sub
xchg
sbb
(bad)
add
pop
sbb
cld
jmp
pop
push
mov
jl
icebp
or
xchg
or
add
cwde
pusha
dec
mov
(bad)
fsubr
sub
movs
push
mov
adc
cmps
mov
jnp
cld
dec
int3
es
push
repz
jecxz
mov
jmp
pop
test
xchg
je
adc
jp
cmp
rcl
pop
xchg
xchg
stc
inc
and
mov
inc
movs
xchg
test
stos
and
or
jmp
xlat
jge
xchg
mov
fnstenv
cdq
jl
fcom
das
enter
mov
into
mov
xchg
cmps
mov
in
(bad)
fidiv
push
mov
push
pop
jmp
cmp
push
xor
ror
dec
addr16
test
in
jo
push
and
mov
jae
test
(bad)
fdiv
(bad)
or
retf
aaa
or
xor
cmp
xor
clc
ret
push
jg
shl
jle
daa
adc
aas
movs
xor
inc
rcl
pop
(bad)
mov
pop
(bad)
rol
jmp
push
dec
or
lods
adc
hlt
out
adc
xor
pop
(bad)
sub
inc
ret
mov
xor
fidiv
push
cwde
xchg
hlt
xor
xchg
std
rcr
ds
inc
enter
fwait
into
ror
mov
pop
and
inc
push
sub
cld
daa
dec
inc
mov
retf
sbb
adc
and
loope
add
xchg
add
adc
mov
jge
ds
mov
outs
imul
sbb
pop
idiv
loopne
jle
iret
push
push
stos
loop
daa
dec
fst
cmp
nop
inc
pop
or
test
inc
jmp
fdiv
xchg
fidiv
push
sub
loopne
mov
adc
mov
je
push
test
xchg
stos
lock
inc
imul
mov
sub
aam
fild
xchg
loopne
push
(bad)
shr
dec
neg
in
out
pop
xchg
adc
loop
dec
adc
mov
out
adc
loopne
clc
mov
or
call
aaa
or
push
pop
icebp
push
cmc
jmp
test
(bad)
xchg
mov
inc
shl
inc
push
cmp
rcr
pop
pop
xor
daa
loopne
jne
xlat
jns
pop
cmc
mov
mov
js
shr
xchg
cmp
push
mov
push
mov
outs
call
inc
call
sbb
and
les
in
xchg
bound
or
sbb
push
mov
les
lods
rcl
cmp
pop
in
pop
add
pop
test
pop
jbe
sar
shl
mov
call
push
mov
in
pop
fidiv
mov
pop
movs
(bad)
jl
xor
cmps
mov
mov
fsubrp
pop
scas
jns
mov
cs
ret
mov
outs
inc
jg
sub
scas
jge
std
xlat
outs
pop
fsub
jmp
and
jnp
out
cmps
neg
fs
and
xor
inc
pop
dec
lods
out
jb
shl
loope
or
cmps
jge
sbb
jecxz
fdivrp
cmp
cmps
mov
add
mov
inc
xor
xor
pop
jo
test
mov
call
retf
dec
fldcw
les
xor
fnstenv
pop
mov
fld
ret
mov
out
fdiv
and
adc
lahf
xchg
and
std
jb
inc
xchg
imul
and
and
cmp
sbb
push
push
dec
div
icebp
mov
(bad)
sbb
mov
fs
push
outs
arpl
cmps
xor
out
js
pop
in
or
adc
fild
fwait
xchg
int3
inc
cdq
out
fwait
lahf
fadd
sub
pop
(bad)
int3
jge
outs
(bad)
jnp
jmp
push
pop
xchg
int
jmp
dec
or
push
outs
cmp
(bad)
push
fnstenv
jmp
xlat
adc
test
div
out
push
(bad)
add
inc
cmps
stos
mov
das
adc
cmp
mov
pusha
sbb
fst
std
dec
out
inc
mov
adc
hlt
je
in
push
test
aad
pop
xor
dec
ja
xchg
adc
pop
daa
sub
xchg
push
push
jmp
sti
and
(bad)
adc
xor
pop
inc
loope
cmps
fld
mov
mov
sbb
dec
sub
fsub
and
pop
jb
popa
loopne
adc
push
lods
nop
cmps
cwde
xor
out
jmp
jl
inc
in
add
sbb
or
jl
jnp
popf
cmp
outs
nop
xor
repnz
rcr
mov
dec
daa
jg
dec
xor
jg
jmp
sub
mov
call
push
test
ins
xchg
lock
sub
gs
iret
(bad)
xchg
cmp
jmp
add
mov
mov
xor
loopne
push
out
dec
(bad)
push
xchg
movs
and
mov
addr16
test
dec
sub
lods
adc
retf
aam
ret
xchg
adc
fdivr
adc
xchg
pop
lea
sbb
in
cdq
cld
sar
pop
das
jmp
add
int
aaa
aam
popa
xor
hlt
pop
dec
sub
xlat
jp
aad
or
in
in
jg
bound
adc
adc
adc
mov
or
ja
icebp
push
cmc
inc
popa
stos
cmp
dec
iret
shl
add
inc
xchg
aad
ins
pusha
xor
fcomp
mov
stc
in
idiv
lea
adc
cwde
cmps
xlat
mov
mov
push
(bad)
jg
pop
stc
adc
push
cmp
and
cwde
movs
inc
pusha
sub
add
mov
ins
push
(bad)
adc
aad
clc
pop
fsub
mov
repz
inc
push
mov
test
fnsave
mov
mov
push
test
mov
pop
add
(bad)
aad
outs
mov
and
pushf
or
mov
addr16
jo
stos
fstp
adc
push
pop
or
mov
ins
adc
push
daa
cli
rcr
sti
jg
sub
dec
mov
sub
or
mov
adc
sahf
push
retf
add
cmp
dec
stc
pop
repz
cmps
shl
test
xchg
push
dec
loopne
fdiv
inc
add
xor
lock
cmp
add
push
push
jge
repz
cmp
mul
inc
cli
stos
sbb
cmp
sub
mov
jnp
mov
cmps
adc
(bad)
div
mov
xchg
repnz
imul
sub
imul
fidiv
std
shr
xor
push
cwde
outs
fdiv
mov
in
push
sub
push
cmp
mov
cmp
lds
les
mov
inc
cli
jns
dec
(bad)
cmp
mov
push
inc
add
mov
push
scas
fdivr
cmc
popa
dec
loope
or
mov
pop
les
dec
xor
arpl
mov
das
in
std
add
xor
cmp
fcmovbe
push
fwait
inc
and
and
mov
adc
jb
pushf
adc
xor
les
inc
repnz
cwde
inc
ins
mov
std
test
inc
mov
into
adc
lahf
inc
lds
add
mov
cmp
(bad)
pushf
cmp
(bad)
fsqrt
inc
out
sahf
add
movs
cmps
popf
outs
mov
imul
sub
loop
aam
mov
add
mov
fcomp
fld
cmps
call
mov
in
mov
das
or
out
cmp
lea
aam
jmp
push
shl
inc
imul
sbb
sar
add
fiadd
pop
pop
addr16
rcr
adc
test
sbb
xor
mov
cld
mov
bound
cmps
popf
outs
in
adc
jp
rcr
fstp
and
cmps
rcr
xchg
loope
xlat
repnz
loope
mov
mov
repz
pop
add
lods
adc
xor
loope
addr16
and
repz
inc
jp
mov
lods
ds
adc
int3
movs
cmp
sbb
iret
jno
xchg
ds
and
sbb
repz
add
retf
(bad)
call
cmps
and
xchg
stc
outs
pushf
push
cmp
cdq
jno
inc
add
js
bound
push
mov
jecxz
xchg
enter
sahf
sub
iret
push
neg
sti
jp
(bad)
adc
jne
cmp
pop
jmp
sub
andps
xchg
xchg
movs
ret
cmp
xchg
movs
icebp
shl
or
jp
xor
bsr
and
out
pop
data16
dec
cmps
out
add
(bad)
leave
mov
out
in
jae
mov
sub
(bad)
sub
test
mov
aam
adc
mov
inc
and
and
out
jmp
xchg
cdq
test
arpl
icebp
movs
jg
mov
jle
xor
xchg
sti
hlt
(bad)
push
jg
test
adc
ins
xchg
gs
jmp
jnp
(bad)
pop
out
and
fistp
jae
cmps
jge
das
les
adc
adc
or
(bad)
rol
cmps
xchg
in
ins
rol
jmp
dec
adc
rol
arpl
or
or
out
cld
retf
mov
pop
jae
jp
push
popa
jo
or
out
xor
jne
sbb
and
mov
pop
enter
out
sbb
mov
jmp
cdq
arpl
xor
ficomp
cmp
push
fwait
into
jecxz
pop
ds
xor
xchg
mov
cmp
(bad)
shl
jp
sbb
mov
cmp
or
and
xlat
dec
test
and
xor
test
jecxz
mov
ret
neg
mul
int3
daa
pop
lea
pop
xchg
fdivr
or
or
imul
scas
push
or
test
dec
mov
xchg
xor
lds
jl
cdq
sub
test
mov
sbb
arpl
test
mov
retf
dec
mov
mov
(bad)
retf
cmps
push
pop
ss
stc
jp
push
mov
mov
add
fdivr
aam
cmp
jb
(bad)
mov
test
cmps
cmp
test
jge
(bad)
std
pop
mov
cld
(bad)
sahf
xor
push
xchg
pop
(bad)
and
push
sbb
push
(bad)
cmc
add
add
mov
mov
jmp
push
or
frstor
mov
pusha
das
popf
lea
les
mov
pop
cwde
aam
outs
aad
adc
sbb
call
sub
jbe
loope
js
(bad)
add
sub
ins
test
imul
bound
xchg
xor
nop
stc
mov
ror
jbe
rol
mov
(bad)
mov
into
sub
sub
push
(bad)
into
lods
shl
imul
clc
das
pop
ror
or
adc
dec
pop
sbb
sub
retf
mov
retf
jnp
push
(bad)
mov
aaa
das
sbb
cwde
add
mov
mov
cmps
cwde
enter
stos
jmp
outs
lea
inc
lahf
xor
inc
push
cmp
fnstenv
mov
pusha
out
popf
inc
xchg
js
lds
jne
jne
les
(bad)
cld
test
adc
(bad)
retf
cmp
pop
sbb
bound
(bad)
sub
mov
cld
mov
mov
xor
mov
div
das
fld
lods
jnp
(bad)
and
jge
daa
jns
and
xchg
aam
fld
jmp
int3
fdivp
or
push
or
and
pop
or
mov
popf
arpl
in
push
arpl
xchg
shl
ja
mov
xchg
enter
xor
mov
mov
outs
push
call
cwde
enter
imul
jmp
test
not
shl
or
scas
jmp
mov
sbb
cmp
call
push
pop
mov
in
sub
xchg
push
add
jle
jmp
or
fnstsw
and
stos
cld
jge
std
sbb
ficom
mov
jecxz
inc
xor
pusha
push
ret
push
inc
arpl
jmp
xor
jns
xor
lock
imul
jns
jb
add
jne
inc
les
fisttp
shl
aad
test
pop
out
inc
cmp
jno
dec
inc
push
inc
cmp
int
ds
and
xlat
pushf
popf
ror
stos
pop
xor
sahf
fnstcw
pop
xor
xor
jo
jmp
cdq
push
fmul
xchg
mov
cmp
push
mov
(bad)
push
stos
jne
fistp
jl
jo
mov
sub
fistp
push
mov
jns
cmps
das
xchg
inc
xor
mov
add
adc
push
push
std
push
adc
movs
xchg
mov
stos
scas
mov
xchg
(bad)
jmp
addr16
aam
dec
inc
mov
in
inc
ins
shl
pop
mov
ret
mov
sar
xor
pop
lds
dec
shl
mov
jb
movs
(bad)
pop
jb
mov
jns
clc
jg
sub
cmc
push
pop
mov
call
rol
jg
in
lock
mov
aaa
jne
dec
mov
jg
inc
and
loopne
daa
jmp
jg
scas
daa
popa
dec
fisttp
inc
sub
nop
(bad)
loop
xchg
out
mov
inc
jae
(bad)
jo
loope
sub
cmp
movs
call
push
jmp
inc
fstp
or
ins
fiadd
cs
and
mov
xor
hlt
mov
sbb
retf
inc
jg
sbb
mov
push
mov
out
es
xchg
inc
dec
sbb
or
ror
repnz
mov
daa
jae
test
shl
add
dec
mov
jle
es
or
enter
ins
lahf
popa
lods
fcmovnbe
sbb
cmp
mov
push
stos
(bad)
rcr
jecxz
push
std
stos
(bad)
imul
pop
and
sbb
fimul
(bad)
sahf
pop
imul
xor
xor
dec
jae
mov
mov
cmp
sub
out
mov
adc
jmp
add
ret
test
inc
fistp
lds
cwde
mov
mov
push
clc
(bad)
mov
hlt
mov
ret
out
loope
cmc
test
enter
sub
ins
dec
cdq
mov
mov
call
mov
lods
fs
int
enter
sub
pop
inc
aam
cs
test
pop
(bad)
pop
jg
mov
mov
xchg
mov
xchg
loopne
js
retf
out
(bad)
dec
mov
hlt
int
xchg
sti
lock
out
cmp
inc
xor
inc
xchg
pop
sbb
das
imul
sub
xor
inc
retf
push
cmps
mov
push
and
dec
pop
outs
and
sar
(bad)
in
xor
clc
(bad)
cmp
int3
std
or
cmp
out
arpl
aad
jmp
out
mov
mov
ds
shl
out
mov
sbb
daa
xor
cmp
fcomp
xor
dec
dec
cmp
sub
in
cmc
mov
add
xor
sbb
sub
jl
jnp
rol
ror
mov
gs
bound
adc
mov
cmps
test
jg
movs
push
adc
inc
jmp
mov
mov
fist
mov
shl
into
js
xor
das
push
push
ror
cwde
xchg
push
jmp
mov
fucom
rol
stos
pop
mov
std
pop
xor
stc
fadd
inc
lahf
aaa
sub
mov
shr
sbb
test
into
jecxz
pop
ret
test
add
jno
dec
cdq
popf
ldmxcsr
call
cmp
mov
(bad)
xor
ret
aaa
and
aaa
sub
mov
into
repnz
sbb
ror
out
mov
push
or
push
cli
jmp
mov
stos
fcomp
cmp
push
xor
pop
les
sbb
xchg
xchg
push
movs
inc
clc
cdq
ins
(bad)
sub
jne
ret
push
sbb
ja
jle
(bad)
dec
movs
pop
lods
add
xor
xchg
pop
adc
ins
fisub
icebp
fidivr
ret
sub
mov
aam
sbb
cli
and
sbb
les
push
retf
and
arpl
xor
outs
js
cmp
xchg
sbb
inc
cmps
xor
out
lods
(bad)
stc
mov
mov
test
loop
jmp
loope
outs
jmp
adc
xchg
call
popa
sub
aas
stc
inc
stc
(bad)
pop
das
scas
(bad)
(bad)
out
jne
add
ss
aad
jmp
mov
data16
js
and
fnstcw
call
xor
test
inc
sub
mov
nop
or
lea
mov
lods
retf
icebp
inc
jnp
out
mov
mov
aad
nop
outs
pop
ror
inc
icebp
adc
inc
jnp
kmovw
jno
mov
xlat
mov
(bad)
mov
pop
fwait
lea
sbb
cmp
js
mov
push
jnp
jecxz
xor
sbb
jge
retf
sub
lea
cli
and
dec
aad
call
and
cmps
movs
dec
js
xchg
jl
in
lock
daa
fxam
sub
(bad)
lahf
iret
aad
adc
xchg
push
in
rcr
mov
mov
push
fwait
cmp
pop
cmp
push
mov
inc
ret
ret
sub
sub
push
xor
ja
jmp
lahf
call
outs
push
das
ss
fcomp
loop
sub
jnp
jmp
inc
test
jl
inc
mov
jmp
sbb
fisub
outs
xchg
outs
cld
mul
cmps
sbb
cmp
fldcw
sbb
and
xchg
jp
adc
or
(bad)
xchg
daa
test
movs
mov
and
cld
pushf
bound
sub
(bad)
lods
jae
(bad)
aaa
jg
fdivr
mov
ins
xor
cmp
xor
out
retf
pop
jmp
push
cld
icebp
inc
inc
in
cs
and
cli
pop
cwde
jne
mov
test
and
stc
scas
outs
mov
mov
cmp
jns
idiv
sub
out
repnz
popa
dec
pusha
mov
push
nop
xchg
and
jbe
adc
cwde
dec
pop
push
aas
dec
imul
mov
cmps
inc
push
inc
retf
nop
(bad)
adc
scas
movs
scas
ror
jecxz
sbb
imul
in
xchg
xlat
in
ss
(bad)
push
mov
xchg
adc
shr
xor
out
shr
push
daa
xchg
jecxz
in
mov
ins
and
mov
jns
sub
test
mov
shl
test
mov
jno
mov
push
mov
cmps
jnp
sub
mov
pusha
dec
adc
cld
or
lock
(bad)
adc
lahf
mov
mov
fwait
push
dec
dec
xchg
cmp
mov
and
arpl
adc
mov
mov
mov
mov
inc
mov
mov
mov
int
mov
push
pop
ret
adc
ins
(bad)
retf
addr16
xchg
or
add
aas
rol
outs
fcom
push
xor
mov
pop
and
(bad)
in
xor
xchg
inc
cmp
xchg
and
cwde
pop
fucomp
xchg
push
jecxz
jmp
xchg
sub
jmp
mul
jle
mov
das
data16
mov
sbb
mov
push
fst
aaa
sub
xor
mov
jmp
scas
xchg
ficomp
and
xchg
push
xchg
jno
mov
nop
xor
mov
int3
out
pop
adc
push
xchg
cmp
xor
dec
in
cmp
push
jge
enter
xor
into
add
sbb
js
out
pop
cmps
inc
into
sbb
pop
sbb
int3
inc
fwait
test
jnp
sub
pushf
and
pop
add
loope
test
loope
fbld
sub
xor
xchg
xchg
add
sub
pop
ret
mov
dec
fwait
mov
das
cmp
jmp
lds
clc
jae
xchg
cld
lock
cmp
cwde
shl
push
test
xor
inc
bound
shl
sahf
in
test
jge
or
mov
fdiv
fisub
jge
mov
(bad)
dec
sbb
push
push
push
jbe
es
push
cmp
push
fs
aam
xor
xor
pop
ja
addr16
cld
inc
hlt
call
cmp
loopne
ror
pop
sbb
xor
pushf
ret
mov
ficomp
push
clc
and
add
ret
xor
add
or
cs
xchg
in
jmp
shufps
inc
xchg
cmp
sti
mov
inc
or
jp
or
push
mov
push
inc
je
sbb
lahf
xor
movs
push
cmp
sar
mov
ret
dec
pop
push
and
mov
call
aad
iret
mov
lds
pop
(bad)
jb
cmp
jnp
int3
cwde
retf
fdivr
mov
scas
inc
dec
push
lea
cmp
mov
mov
retf
mov
sbb
xlat
mov
xor
sbb
sub
sbb
adc
or
adc
inc
jl
call
sbb
in
pop
cs
fdivr
mov
pop
inc
add
in
ret
out
jge
pushf
in
pusha
call
jmp
pop
or
mov
cmp
scas
xor
cmp
ja
call
pop
cmp
repnz
out
mov
adc
sbb
xchg
dec
xchg
aam
out
ret
into
mov
fimul
adc
retf
xchg
in
add
and
jecxz
(bad)
push
pop
in
int3
xor
rcr
dec
daa
jle
ret
(bad)
stc
fdivr
mov
pop
lds
sub
int
out
mov
data16
(bad)
cmp
scas
fdivr
jl
mov
mov
mov
sti
and
outs
push
xor
xchg
cdq
into
das
adc
push
std
inc
in
inc
jo
ds
clc
imul
fst
xchg
sbb
ds
lods
es
pop
mov
mov
or
fstp
cmp
outs
mov
sbb
icebp
push
dec
lds
mov
(bad)
imul
out
pop
retf
ins
sbb
in
sub
dec
rcr
push
fsin
inc
jge
fsub
shr
imul
push
rcr
mov
add
sbb
test
pop
sub
pushf
dec
push
aam
or
fnsave
add
je
ins
and
jge
loope
xchg
aam
jmp
xchg
push
rcr
mov
sti
movs
cmp
and
scas
lock
nop
jb
(bad)
in
out
aas
push
mov
mov
push
mov
jp
and
push
jb
mov
jg
cmp
rcl
rol
imul
popf
test
or
mov
inc
outs
icebp
adc
xor
cmc
xor
mov
xor
lds
ret
loope
icebp
stos
rol
fnstsw
adc
push
rol
mov
pop
inc
sbb
mov
jae
(bad)
cmp
adc
xor
jl
and
or
cmp
mov
sbb
mov
mov
leave
mov
cs
sub
mov
imul
add
loopne
mov
loope
or
cmp
add
cmp
mov
sbb
sub
fwait
popf
mov
pop
sub
sbb
out
popa
sar
adc
sub
pop
ret
inc
shl
int
imul
mov
icebp
sbb
std
call
daa
sahf
mov
mov
test
mov
sub
iret
in
push
outs
add
pop
dec
xor
das
loope
cdq
pop
sahf
bound
aam
fs
pop
popf
mov
clc
rcl
out
aaa
ret
lea
cdq
aad
mov
push
sar
scas
rcl
fcmovnb
mov
and
outs
dec
call
pop
add
adc
sub
mov
(bad)
fist
jle
xchg
add
out
pop
mov
fcom
mov
add
push
xor
jl
std
pop
std
cmp
sbb
or
into
jmp
das
jg
jns
and
and
rol
lea
mov
fld
ds
movs
mov
std
outs
mov
push
shr
stos
mov
add
sbb
cld
cmps
test
mov
or
test
je
shl
ja
or
fsubp
popa
sub
inc
(bad)
push
pusha
inc
dec
mov
add
data16
push
sbb
stos
add
add
pop
pop
icebp
repnz
cmp
stos
cmp
xchg
xchg
jmp
pop
(bad)
lahf
sub
enter
hlt
cmps
shl
mov
push
test
xchg
and
push
mov
addr16
out
(bad)
out
stos
xchg
sub
xchg
push
lods
fwait
jbe
add
adc
mov
outs
outs
jecxz
xchg
inc
addr16
call
jo
ldmxcsr
xlat
xor
iret
rcr
fcmovb
call
leave
scas
pop
(bad)
mov
ror
sahf
aad
adc
mov
pop
xor
jmp
push
pop
adc
sbb
cmp
pop
fsub
jle
fs
pop
adc
mov
les
outs
jns
mov
fdivr
sbb
push
add
sub
ds
dec
or
out
inc
test
pusha
mov
daa
mov
push
jnp
repz
mov
sub
ret
out
sub
pop
ins
pop
inc
push
mov
lds
pop
push
or
xchg
lods
cdq
xchg
add
xor
mov
xor
and
test
mov
icebp
pop
add
gs
xchg
pushf
into
shr
xor
mov
or
fisub
ror
mov
jl
lods
jnp
das
pop
cmp
gs
mov
xchg
(bad)
fdiv
fst
aaa
dec
dec
inc
pop
das
jmp
push
call
les
fidiv
xor
call
mov
daa
cmp
adc
adc
xor
or
jg
and
bound
hlt
sti
test
or
rcr
bound
retf
loope
sub
push
mov
jnp
push
packsswb
lods
mov
push
stos
adc
mov
test
and
dec
sbb
test
outs
test
in
ret
ficomp
mov
loop
inc
jp
adc
js
in
adc
jp
xor
jp
add
dec
add
pop
add
xor
dec
xchg
inc
push
vcomisd
fstp
pop
int3
dec
aam
punpckhbw
or
adc
push
lods
movs
dec
js
ins
jns
add
leave
(bad)
xchg
pop
pop
mov
or
in
call
and
fbld
ins
out
push
sbb
and
(bad)
xor
int3
sbb
xor
test
adc
mov
jbe
fmul
jne
push
fcomp
out
jno
int
jg
sbb
out
mov
sbb
adc
cmp
out
fwait
popa
ja
add
ss
outs
les
imul
fwait
xchg
or
jbe
sbb
test
jne
mov
test
sub
loopne
sub
or
xchg
add
mov
push
dec
int3
ins
ins
icebp
jge
cmp
sbb
es
or
out
imul
push
(bad)
sub
mov
outs
cld
xor
cmc
and
adc
jecxz
pop
out
lea
sbb
jge
cmc
inc
mov
push
and
xchg
into
pushf
mov
(bad)
cmp
xchg
loopne
cdq
lds
imul
mov
js
fstp
in
psubw
fst
add
inc
add
or
jp
mov
or
adc
adc
xchg
pop
or
mov
sbb
adc
scas
data16
push
mov
pop
(bad)
lods
leave
les
jmp
pop
out
sub
mov
sbb
dec
inc
adc
sub
or
mov
(bad)
push
jns
cmp
into
jnp
dec
leave
das
inc
jae
jmp
mov
mov
loopne
jne
and
and
stc
cmp
mov
xor
pop
daa
(bad)
pop
sub
xchg
jmp
sub
xchg
dec
xchg
mov
mov
test
idiv
adc
nop
rcr
repz
push
mov
fild
sub
cmps
cld
sub
call
xor
pinsrw
xchg
mov
ds
fmul
aas
xchg
xchg
shl
std
pop
jecxz
lahf
data16
cli
test
or
xor
(bad)
adc
int
imul
(bad)
and
xor
dec
in
out
inc
jns
mov
cmp
push
lock
scas
(bad)
jg
or
xchg
nop
push
xchg
call
cmps
sub
test
vcvttps2dq
test
sbb
fisubr
adc
jmp
mov
and
adc
xor
add
dec
int3
(bad)
fldenv
sub
shl
pop
mov
ins
or
ret
push
push
pop
dec
arpl
lahf
xchg
stc
push
ss
lock
sub
and
push
(bad)
out
xor
test
repnz
je
js
sub
xchg
iret
std
xchg
call
(bad)
or
je
(bad)
imul
outs
in
adc
jl
jl
into
sbb
and
add
or
into
dec
stc
sub
adc
dec
mov
retf
call
cs
dec
sbb
jo
stc
cld
push
mov
ror
scas
sar
or
jle
and
mov
mov
pop
push
xchg
fwait
jno
inc
or
push
jb
into
cmc
adc
add
jg
adc
adc
push
mov
aam
mov
xchg
xchg
pop
or
fidivr
addr16
pop
pop
xor
xor
inc
jb
test
pop
clc
xor
jmp
and
xchg
fst
push
enter
repnz
out
and
xchg
test
and
mov
(bad)
fistp
int
bound
ds
xor
fist
out
adc
xchg
mov
fnstsw
loop
test
mov
aas
cmp
sbb
aaa
cmp
bnd
or
pop
xor
and
icebp
pop
iret
div
push
xlat
js
or
outs
jmp
mov
lods
mov
adc
(bad)
mov
push
(bad)
xor
les
and
add
xchg
mov
push
or
push
stc
mov
dec
sbb
mov
in
test
sar
add
call
repz
mov
rol
ins
fiadd
sub
push
push
scas
(bad)
and
inc
add
inc
jbe
imul
fild
loop
sbb
sti
mov
in
xchg
bound
adc
or
mov
stc
jp
jmp
mov
lds
mov
fiadd
sar
(bad)
sbb
mov
aaa
ret
push
push
sub
cmp
sbb
fdivr
out
in
cld
sti
xchg
sub
adc
pop
pushf
xor
push
das
push
mov
xor
pop
fsub
int3
push
xor
stc
les
stc
loope
pop
fsub
lods
jp
push
inc
retf
inc
cdq
xor
daa
lds
mov
xor
ror
push
imul
out
pushf
and
cmp
jmp
les
mov
push
lds
fnsave
jmp
push
ror
pop
in
mov
mov
jmp
dec
sar
cmovae
cmp
imul
ds
adc
clc
sub
and
pop
jmp
fldcw
lea
ret
arpl
sbb
jg
push
sahf
mov
sub
add
addr16
pop
sti
stc
push
in
loopne
mov
shr
pop
add
scas
dec
ins
mov
dec
mov
test
mov
ss
mov
lods
mov
nop
js
inc
push
in
push
cmp
imul
dec
inc
es
cmp
ds
or
inc
fnstenv
ins
mov
in
or
sti
mov
add
mov
add
hlt
pop
outs
dec
int
mov
dec
dec
jns
lds
lea
xor
push
lea
cld
and
inc
add
imul
fisubr
push
adc
adc
pop
js
scas
sbb
pusha
outs
jp
scas
fidivr
xlat
push
mov
inc
pushf
xor
lea
mov
push
push
xchg
clc
xor
dec
add
lock
sub
ss
push
pop
out
mov
inc
mov
xor
loop
push
shl
add
cmps
lahf
and
call
jbe
adc
mov
ret
shr
fldcw
mov
bound
ja
loope
push
movs
jge
fmul
int3
loopne
adc
js
popa
xchg
mov
stc
mov
xchg
leave
pop
test
imul
int3
pop
out
mov
sbb
xchg
mov
retf
aas
(bad)
xor
sar
and
leave
loopne
mov
jle
jnp
or
cmps
pop
push
xchg
mov
sub
adc
jne
(bad)
iret
xchg
mov
and
les
mov
test
or
sbb
push
cmp
or
and
push
ds
retf
cmc
push
jmp
sbb
mov
mov
xor
and
jno
call
add
out
fdivr
push
cli
mov
loope
arpl
ret
mov
rcl
adc
mov
into
js
xor
xor
push
sbb
pop
in
jecxz
ja
jns
(bad)
adc
test
mov
push
fldenv
sar
ret
add
movs
mov
sbb
or
add
retf
add
push
daa
cs
and
cmc
and
popa
jmp
or
cmc
pop
pop
or
fdivr
out
sbb
test
mov
inc
shl
cwde
inc
add
or
ss
ret
xchg
mov
aaa
and
(bad)
or
nop
imul
dec
inc
sti
cwde
shr
mov
push
dec
pop
sbb
ficomp
xor
aam
fmul
ret
dec
push
sub
dec
mov
ss
jmp
enter
and
psubb
xchg
gs
pusha
mov
das
xlat
fs
int3
cmp
cld
(bad)
xor
xchg
or
xor
test
adc
out
push
mov
call
movs
mov
fcmovu
cmp
xchg
bound
dec
pop
cmp
dec
xchg
data16
add
sbb
sbb
jo
xchg
or
pop
enter
pop
sbb
and
and
mov
mov
add
sar
push
mov
enter
push
cmp
sahf
cs
pop
ret
shr
mov
dec
jge
add
and
in
sahf
nop
xor
imul
test
cmp
inc
add
dec
jge
dec
lods
adc
(bad)
pop
cmp
sbb
sbb
push
mov
pop
dec
pop
cmps
stos
pop
rcl
dec
xor
mov
mov
fs
loop
test
inc
rol
pop
xchg
movs
outs
lods
mov
xor
pop
mov
leave
and
aam
adc
mov
aas
jns
cmc
cmp
or
or
sar
jg
test
mov
pop
cmc
cmp
(bad)
nop
adc
xchg
and
out
and
inc
cmp
cmp
fimul
or
loopne
push
pop
pop
mov
fwait
sbb
pop
mov
in
push
xlat
das
dec
mov
sbb
dec
hlt
inc
dec
push
das
fs
cmp
push
(bad)
cmp
cld
iret
push
movs
(bad)
mov
pushf
pop
and
(bad)
ja
shr
add
jge
mov
(bad)
fcom
inc
imul
inc
lods
cmp
out
popa
xchg
popa
stos
cld
std
loop
and
pop
sar
aad
stos
popf
loopne
and
mov
cmp
inc
push
add
lock
lods
addr16
and
imul
jg
add
add
fstp
or
clc
jg
mov
rcr
or
pop
js
dec
jmp
aas
cs
call
xchg
mov
retf
mov
mov
xchg
test
jno
hlt
mov
ja
xchg
add
xchg
push
mov
push
data16
fld
and
neg
dec
or
fwait
push
xchg
fsubr
sbb
in
ret
call
jns
add
add
cdq
pop
mov
retf
ror
or
test
inc
adc
dec
push
adc
adc
dec
stc
jnp
out
aas
mov
jbe
imul
xchg
mov
mov
jmp
xor
sub
mov
xchg
fisttp
pop
and
xchg
cmps
sti
mov
push
push
jne
lock
pop
daa
or
mov
aaa
hlt
test
loope
sbb
cmps
fimul
push
sbb
faddp
loopne
xlat
loopne
jmp
je
mov
fcomi
and
outs
ret
fisttp
mov
iret
das
(bad)
mov
lahf
dec
cmp
adc
(bad)
repz
das
xchg
sbb
mov
jp
mov
loope
fs
pop
sub
pop
stos
sub
inc
cmp
call
call
cmp
shl
dec
call
sahf
adc
pop
scas
scas
sub
mov
mov
pop
cmc
jl
mov
sbb
cmc
or
dec
imul
aam
cdq
(bad)
jno
inc
xor
sbb
lock
lahf
mov
mov
jo
dec
icebp
xor
iret
xor
push
sbb
in
mov
clc
dec
dec
mov
repnz
sti
and
jno
cmp
rcr
lahf
ja
or
(bad)
mov
add
mov
test
test
cli
pop
or
popa
aas
push
push
pusha
lea
jle
dec
or
adc
jg
inc
add
push
test
ins
mov
push
fild
cmp
xchg
lahf
jns
xor
xor
or
push
retf
inc
mov
test
stos
or
inc
cli
push
mov
jns
mov
or
ror
ins
sub
pop
cld
mov
fwait
mov
pop
sub
popw
sbb
jae
nop
mov
xor
jl
jmp
out
pop
ds
xchg
stos
cdq
in
scas
sbb
popf
cli
add
cmp
addr16
xor
arpl
ins
fsubr
add
cmp
test
inc
dec
xor
and
gs
arpl
cmps
mov
fstp
fcmovnbe
dec
mov
ds
lahf
movs
popf
mov
leave
mov
lods
pop
push
fsub
fistp
lea
pusha
mov
mov
push
cmp
sbb
les
jae
je
bound
jle
jns
imul
inc
sub
adc
aam
jmp
ja
xchg
repnz
mov
ins
mov
aad
out
outs
fcom
loope
je
call
bnd
cmp
or
mov
mov
sbb
(bad)
stc
pop
jno
pminsw
pop
jns
cmc
cs
rcr
mov
and
xlat
dec
sbb
mov
in
clc
sub
not
xor
ins
and
push
cmps
push
icebp
(bad)
fwait
mov
sgdtd
adc
mov
retf
fsub
sbb
and
dec
adc
cmp
jp
loop
fwait
lds
pop
ins
std
sub
xchg
jne
hlt
clc
dec
pop
rol
sar
call
repz
adc
ss
cmp
sbb
movs
inc
das
mov
data16
add
stos
in
fistp
mov
push
sub
fsub
adc
(bad)
mov
imul
out
ja
push
adc
pop
mov
(bad)
mov
dec
dec
repz
sbb
retf
sub
cmc
sub
fsubr
xchg
cmps
mov
int3
push
push
add
xor
mov
adc
dec
mov
ins
jle
imul
out
loop
mov
adc
popa
inc
cdq
mov
mov
mov
in
sub
jmp
mov
or
enter
(bad)
(bad)
ror
and
hlt
push
xor
data16
mov
jl
cwde
xor
mov
xchg
cmp
out
lds
push
mov
mov
test
(bad)
inc
mov
pusha
or
cmp
mov
or
lods
jl
or
xchg
gs
mov
fistp
shr
arpl
lea
ja
imul
js
add
xchg
jae
and
arpl
push
pusha
sbb
pushf
and
xor
mov
mov
loope
lods
daa
cmp
xchg
shl
pop
add
push
push
mov
jo
lock
imul
mov
int3
inc
hlt
repnz
mov
adc
cmp
dec
icebp
push
jns
xchg
and
inc
mov
ret
outs
mov
or
mov
test
mov
hlt
add
pop
mov
in
gs
std
inc
cdq
cmps
aaa
xor
scas
fistp
jo
pop
loop
cmp
dec
xlat
jl
cdq
sub
push
jle
xor
lock
clc
test
sub
dec
mov
sub
fwait
(bad)
pusha
dec
cwde
out
and
pop
jnp
shl
jl
xor
popf
ret
out
push
popf
adc
push
mov
adc
scas
push
jo
cmp
ins
sub
push
addr16
cld
jge
mov
mov
jne
inc
(bad)
xor
(bad)
xchg
stos
adc
cmc
test
arpl
jbe
popf
mov
test
cmp
mov
lds
fwait
add
pop
lods
and
or
enter
cwde
shl
pop
mov
iret
xchg
lds
shl
sub
xchg
mov
repz
xchg
cmc
aas
nop
push
jecxz
aam
adc
imul
int3
pop
mov
inc
fwait
xor
dec
aad
mov
je
push
mov
ret
shr
cli
clc
and
push
or
(bad)
das
(bad)
cmp
adc
dec
adc
loope
inc
sbb
add
mov
xor
int3
rcl
test
cmp
rol
(bad)
jne
(bad)
cmps
push
or
add
jb
jo
stos
mov
enter
and
dec
cwde
sbb
cmp
or
dec
and
loop
imul
mov
or
ins
jmp
xor
jecxz
mov
mov
cmps
mov
stos
cld
add
mov
mov
or
pop
je
pop
jmp
xlat
in
fadd
or
clc
pop
xor
pop
lahf
push
shr
push
out
cwde
aas
mul
aas
xchg
xchg
lea
sahf
push
or
call
mov
lds
mov
addr16
cmp
jmp
cmps
pop
lock
hlt
fimul
iret
push
mov
xchg
or
or
mov
inc
gs
pop
in
jno
stc
mov
and
jne
leave
sbb
mov
sbb
sbb
test
inc
adc
aaa
sahf
test
adc
dec
push
mov
pusha
mov
sub
dec
xlat
frstor
in
stos
fwait
(bad)
mov
jnp
jge
imul
mov
mov
add
xchg
push
jmp
int
xchg
test
push
and
dec
aaa
(bad)
xor
sbb
push
inc
jns
jl
sub
dec
push
call
push
sub
jl
xchg
ins
dec
mov
cmp
cmp
(bad)
or
aam
and
call
jae
sbb
sbb
ror
mov
push
std
mov
neg
daa
sbb
inc
mov
das
inc
cmc
or
fldenv
popa
adc
fisubr
jne
test
adc
push
mov
out
sahf
push
mov
loope
add
fld
sbb
test
cs
sbb
repnz
mov
xchg
dec
dec
clc
scas
rcr
jns
(bad)
fwait
jp
pop
cld
dec
inc
cwde
dec
mov
in
cs
inc
and
mov
dec
fld
adc
cmps
repz
test
jbe
loop
ds
inc
nop
jp
inc
pop
lea
inc
mov
jns
enter
inc
jb
daa
aad
push
xor
mov
(bad)
xchg
(bad)
pushf
jge
mov
or
lods
lock
mov
bound
test
fadd
xchg
mov
cs
sub
cmp
jmp
xchg
clc
push
cmc
imul
adc
pop
movs
pushf
xor
mov
cmp
xchg
dec
int
mov
mov
out
adc
or
(bad)
inc
stos
and
dec
push
xchg
inc
scas
mov
popf
jl
xor
jl
cmp
test
pop
jmp
shr
push
lods
call
cmc
aaa
xchg
push
add
mov
in
inc
mov
adc
mov
add
or
std
movs
and
dec
aad
icebp
mul
retf
mov
push
pop
fldenv
inc
scas
out
pop
dec
fs
clc
mov
jp
jnp
mov
xchg
mov
pop
push
rol
mov
mov
and
push
jl
pusha
or
jo
das
and
pop
sbb
aad
cmps
scas
jle
push
dec
cdq
jmp
daa
mov
push
std
fidiv
jb
outs
lods
nop
push
sbb
pop
mov
adc
inc
push
mov
test
mov
pop
call
mov
test
mov
neg
inc
and
rcl
test
stc
scas
fldenv
ret
ficomp
or
pusha
dec
out
jo
cmp
jmp
jbe
call
mov
xchg
pop
mov
sub
out
nop
or
adc
pop
lods
retf
fwait
mov
sub
inc
jg
ret
(bad)
pop
mov
sub
in
loope
sahf
mov
push
add
std
cmp
gs
add
icebp
stc
xchg
imul
das
scas
and
dec
jae
fs
js
out
cmp
add
stos
xor
inc
push
or
mov
ds
adc
xor
add
mov
ss
sar
mov
out
(bad)
and
push
outs
jmpw
xchg
mov
sbb
ret
cwde
imul
arpl
popf
out
cmps
das
pop
xchg
sti
pop
push
movs
icebp
movs
ds
mov
cmps
jp
jp
(bad)
mov
sub
sub
int
fstp
sub
dec
bnd
les
into
sbb
push
lods
sbb
jbe
xlat
xor
lds
mov
adc
into
imul
xchg
dec
adc
test
lahf
pop
cmps
push
xchg
xchg
adc
rcl
mov
retf
in
cmp
or
out
and
cmp
mov
mov
adc
scas
sbb
add
cmp
dec
xor
and
cwde
pop
icebp
ja
dec
js
inc
adc
in
mov
jo
adc
mov
push
int3
pop
push
out
jbe
fs
xchg
in
mov
call
aam
enter
jno
mov
jne
dec
cmps
xchg
inc
jnp
adc
dec
ds
push
repnz
popf
shr
icebp
mov
mov
xor
mov
cli
and
lds
mov
imul
jl
repnz
or
push
xor
pop
add
push
add
ror
mov
outs
std
cmp
das
xchg
dec
cmp
les
dec
mov
sar
xchg
mov
test
fisubr
or
xor
imul
call
iret
lahf
push
enter
gs
pop
mov
sar
mov
(bad)
push
push
aaa
cmp
xchg
nop
aad
shrd
push
xor
mov
inc
ds
jmp
jo
add
sbb
pop
add
scas
mov
daa
adc
sbb
inc
lods
jmp
fcom
sub
ret
ret
enter
jo
dec
sbb
lods
jmp
in
xor
cmps
int
hlt
ror
daa
(bad)
jae
int
lods
add
ss
and
aaa
repz
jno
dec
adc
cmp
add
into
mov
dec
mov
mov
sbb
ret
leave
xchg
mov
cmp
jo
out
and
fsubr
sbb
call
lds
and
jmp
or
iret
push
push
fisttp
jns
cmp
lods
inc
stc
or
aas
in
or
push
inc
push
inc
pop
js
movs
push
daa
push
or
sub
and
data16
mov
add
aam
in
jle
fwait
cld
scas
movs
not
ins
mov
adc
les
cmc
xor
add
movs
dec
int
lea
fadd
xchg
inc
and
mov
shl
stos
sbb
add
ds
xchg
test
mov
sub
xor
add
xor
pop
int
clc
adc
pop
jbe
mov
sbb
cdq
mov
add
dec
mov
push
jp
cmp
add
iret
mov
jmp
test
or
lds
div
jg
xor
and
scas
pop
inc
jae
dec
jb
nop
mov
loope
xchg
and
adc
mov
clc
pushf
aad
mov
sar
add
push
loope
lds
repz
cmps
cmp
dec
imul
fiadd
push
dec
call
clc
inc
jg
sub
fnstcw
cs
mov
dec
cdq
sbb
loopne
ds
inc
push
sbb
mov
hlt
and
sub
das
xchg
and
jns
int
adc
push
or
lock
jge
xor
sbb
test
sbb
adc
bound
adc
shl
repnz
(bad)
cmc
and
std
mul
or
mov
inc
inc
je
repz
aad
dec
push
test
fdivr
cmps
lea
stc
das
shr
mov
lahf
xor
popa
cld
neg
jmp
and
int3
cmp
xor
add
cmp
sub
mov
dec
jmp
pushf
xchg
std
outs
ins
inc
jno
jmp
das
dec
shl
jno
gs
xchg
or
push
loope
mov
push
test
jg
dec
cli
pop
xlat
stc
out
mov
stos
jo
movs
cld
jne
cmp
mov
hlt
pusha
mov
ins
and
or
loopne
push
loope
jg
mov
movs
xchg
out
dec
cdq
sub
and
inc
jmp
out
xchg
dec
cmps
es
lods
lods
sti
aaa
xchg
retf
xchg
jecxz
ja
push
test
ds
gs
call
stc
ja
cmp
or
cmp
mov
rcr
adc
adc
jb
addr16
mov
xchg
out
imul
hlt
(bad)
gs
xor
push
xchg
mov
and
stos
inc
mov
mov
xor
repnz
loopne
retf
ret
mov
call
push
xor
adc
ffree
inc
push
mov
and
sub
and
mov
sar
mov
push
mov
xor
loopne
daa
(bad)
packuswb
out
call
adc
mov
mov
sbb
add
cli
aad
lods
stos
outs
out
dec
stos
sbb
xor
pushf
sub
push
inc
jl
repnz
addr16
iret
mov
adc
mov
rcl
sbb
pop
call
sub
loop
fistp
ss
es
mov
xor
or
pop
xchg
fidivr
(bad)
xlat
push
xchg
aas
nop
xchg
lahf
push
sub
mov
and
rcr
mov
mov
out
call
mov
icebp
jbe
aad
retf
lahf
mov
js
cs
mov
mov
(bad)
adc
imul
fcomip
fnstsw
mov
sub
mov
shl
out
fmulp
jmp
hlt
add
sub
fnsave
outs
lock
mov
jb
mov
test
mov
test
mov
xchg
setns
cwde
(bad)
jb
int3
ins
jge
mov
hlt
sti
inc
push
aas
js
cmps
xor
cmp
add
fistp
icebp
in
adc
jae
in
xor
push
leave
cmc
pop
gs
jmp
mul
test
mov
add
xor
push
dec
ins
or
bound
int3
dec
ss
pop
in
xchg
xadd
jecxz
in
fwait
jo
(bad)
mov
cwde
rcr
push
leave
mov
arpl
jb
les
mov
pop
add
pop
sbb
dec
ss
adc
fs
fwait
repz
sub
repz
dec
aaa
push
push
and
pop
dec
je
jmp
push
cmps
cmp
xlat
xlat
scas
in
retf
inc
test
fscale
pop
or
pushf
shr
or
dec
imul
push
test
pop
inc
sti
scas
dec
les
xor
sti
lea
xchg
imul
xlat
fs
scas
adc
add
push
fst
mov
cmps
sar
not
ja
std
(bad)
outs
pop
fs
jl
sahf
pop
or
adc
scas
loope
test
es
fst
in
and
out
push
cli
dec
dec
inc
push
int3
add
add
shl
mov
sbb
cmp
or
dec
xchg
daa
jb
mov
adc
out
mov
call
popa
call
ret
(bad)
cld
fnstenv
retf
cmp
inc
in
repz
shl
mov
popf
sbb
xor
xor
mov
and
pop
xlat
dec
mov
or
mov
gs
xor
inc
cs
adc
and
scas
inc
fmul
mov
aad
fldcw
(bad)
and
push
adc
lds
jmp
std
lods
or
movs
lods
mov
arpl
or
dec
not
sub
lock
xor
repnz
add
(bad)
mov
ss
mov
dec
pop
mov
inc
pop
push
mov
outs
jle
adc
jno
popa
sbb
mov
mov
(bad)
dec
out
daa
mov
fstp
outs
xchg
sub
test
stc
pop
jecxz
das
xchg
dec
push
and
adc
mov
push
mov
adc
mov
(bad)
mov
ret
shl
inc
sub
sub
test
sub
std
xchg
lds
dec
out
mov
push
and
test
cs
jno
das
cs
dec
shl
inc
push
push
sub
and
pop
leave
shl
mov
adc
out
into
scas
mov
jle
ss
or
ret
lahf
(bad)
pop
inc
ret
cmp
mov
mov
inc
jge
daa
mov
imul
hlt
jp
mov
xor
mov
mov
aad
pushf
cwde
call
and
popa
jbe
icebp
loop
dec
dec
mov
xor
mul
add
ja
scas
mov
rol
mov
popa
pop
cmp
dec
and
jae
add
lock
gs
lods
aad
pop
popa
stos
sbb
stos
sbb
test
fldcw
or
fldcw
inc
ret
mov
cmps
cmp
cmp
inc
or
ins
js
fadd
fistp
jle
adc
jbe
stos
xor
cmp
std
cs
push
sbb
cwde
xchg
cmp
aas
sub
in
iret
mul
xor
xor
ja
call
jb
push
movs
pop
stc
vaddsd
cmp
not
adc
xor
adc
stc
pusha
ja
and
bswap
or
jnp
scas
push
fdiv
pop
mov
xchg
nop
push
add
push
addr16
adc
xor
and
or
pop
jmp
retf
mov
fldz
dec
sub
scas
daa
retf
add
sbb
stos
mov
fstp
push
loope
(bad)
xor
sbb
aad
fidivr
imul
mov
daa
pusha
and
pop
inc
jno
sub
out
push
stos
lea
icebp
das
pop
and
mov
push
sbb
add
jl
pop
xor
sub
scas
mov
loopne
repz
ss
comiss
shr
mov
cmp
mov
push
or
xchg
inc
pop
xor
pop
sub
push
(bad)
or
mov
pop
pop
outs
cdq
outs
cmp
xor
gs
dec
lahf
jl
jl
or
add
cmp
mov
(bad)
jle
mov
test
popa
xchg
lock
movs
adc
movs
push
int3
cs
sub
xor
sub
xlat
ret
lock
dec
and
out
push
pop
adc
push
adc
jge
hlt
into
out
pop
je
jb
mov
call
pop
shl
icebp
ds
enter
stos
adc
rcr
icebp
pushf
fstp
aaa
mov
and
cmp
pop
and
cmp
dec
js
mov
mov
gs
jbe
scas
adc
ror
icebp
sbb
and
mov
lods
(bad)
shl
stc
scas
and
jl
add
push
pop
xchg
popa
xlat
jne
popa
scas
test
jge
lock
ins
mov
mov
shl
sbb
mov
aad
xor
sub
fistp
jmp
mov
xor
xor
out
dec
rol
hlt
sbb
mov
or
xchg
push
cmp
sti
shl
lds
(bad)
fldenv
dec
daa
sbb
movs
jmp
es
inc
sbb
cmc
cs
scas
data16
stos
int3
inc
in
fistp
pushf
mov
dec
xor
inc
scas
ror
inc
mov
mov
clc
xchg
movs
jmp
scas
push
sub
inc
push
retf
xchg
(bad)
pushf
sbb
push
mov
nop
cmp
loopne
pop
test
not
xchg
xchg
call
shr
mov
std
inc
mov
lock
sbb
inc
cmps
dec
ins
adc
push
mov
xor
and
arpl
pushf
leave
sub
stos
fbstp
in
retf
fs
mov
inc
cmp
fst
cdq
lea
pop
fimul
das
mov
lea
sub
push
cmp
imul
(bad)
retf
jp
xchg
xor
jmp
xchg
xor
out
push
jne
bound
sbb
call
pop
test
jl
xchg
scas
mov
jbe
jns
push
jae
in
adc
xor
jno
ret
adc
fcmovnb
xchg
lock
outs
fsubr
xchg
fadd
or
or
aad
and
xchg
jmp
test
and
mov
pushf
pop
aad
xchg
pop
call
cdq
ds
add
scas
stc
adc
sbb
inc
dec
jne
jmp
ret
xor
or
rol
shl
dec
mov
push
add
sahf
call
jg
inc
mov
adc
mov
adc
and
cdq
xor
jo
adc
inc
test
loopne
es
mov
retf
sub
add
(bad)
and
cmp
out
(bad)
cli
(bad)
int3
dec
inc
cld
xor
adc
fmul
(bad)
ds
and
repz
xor
in
jmp
les
xor
jo
mov
aaa
fdiv
enter
call
out
add
scas
into
mov
xchg
shl
daa
inc
jne
not
call
add
and
pop
mov
mov
mov
imul
pop
scas
jmp
push
pop
mov
pusha
add
sbb
jmp
mov
inc
jno
mov
in
mov
nop
dec
mov
and
jne
push
cmp
xchg
sbb
cmp
neg
dec
out
fadd
xor
sub
in
mov
and
sub
out
stos
mov
adc
aaa
jp
int
call
icebp
dec
jo
cld
jmp
or
cli
pushf
movs
push
add
xlat
ret
movs
push
fs
inc
bound
gs
cmp
fstp
push
mov
retf
jae
icebp
fucomip
dec
clc
test
ins
in
pop
arpl
cmps
pop
jbe
adc
cmp
test
or
into
sbb
ret
sbb
aas
xor
shl
jmp
nop
or
mov
xor
and
add
shr
or
and
mov
jmp
push
xor
xchg
or
add
xor
xor
mov
add
inc
jmp
pop
xor
mov
nop
mov
and
jmp
call
xchg
xor
xchg
add
and
or
shr
not
mov
xchg
jmp
mov
or
sub
xchg
mov
rol
mov
xor
sub
and
or
and
ror
shl
xchg
jmp
push
xchg
shl
shr
or
jmp
call
rol
xchg
shr
xchg
xchg
ror
mov
and
jmp
push
add
xor
mov
mov
rol
jmp
add
add
add
sub
and
xchg
ror
rol
or
mov
not
sub
jmp
mov
xchg
and
and
and
and
xor
jmp
push
xor
or
xor
and
not
jmp
pop
xor
mov
xor
or
or
and
jmp
pop
rol
not
inc
and
shr
add
xchg
xchg
ror
bswap
jmp
movzx
add
or
sub
mov
bswap
mov
add
or
bswap
jmp
pop
mov
xchg
sub
mov
mov
not
mov
bswap
sub
add
jmp
add
xchg
sub
shr
or
xor
add
mov
xor
or
or
inc
xchg
jmp
call
xchg
or
and
shr
inc
sub
sub
xor
shl
rol
add
jmp
mov
xchg
or
ror
shr
or
shr
sub
add
sub
shl
mov
xchg
jmp
add
sub
xchg
shl
add
mov
xor
and
mov
inc
shl
mov
jmp
push
xchg
bswap
mov
mov
inc
dec
or
jmp
mov
add
sub
add
and
sub
shr
neg
xor
xor
shl
neg
jmp
mov
sub
sub
add
xor
mov
sub
and
not
jmp
mov
not
xor
sub
not
jmp
call
nop
and
xchg
and
not
jmp
push
neg
mov
xchg
xor
xchg
and
add
and
add
jmp
pop
neg
shl
mov
ror
or
xor
jmp
pop
xchg
and
sub
neg
mov
jmp
call
add
xor
or
add
or
xor
jmp
mov
add
xor
add
sub
mov
jmp
push
xchg
shr
not
or
xor
neg
xchg
add
add
jmp
pop
dec
sub
and
or
jmp
mov
add
xchg
dec
mov
add
sub
shl
xor
or
mov
mov
add
sub
mov
jmp
pop
neg
xor
or
and
xor
xor
shl
shr
jmp
pop
or
add
xchg
nop
mov
rol
xor
or
rol
sub
mov
xor
jmp
add
xchg
mov
xchg
sub
jmp
mov
shl
neg
xchg
xchg
mov
or
add
inc
xchg
mov
jmp
ret
xor
mov
sub
xor
or
not
neg
shr
shr
inc
and
jmp
pop
bswap
sub
or
xor
rol
add
sub
and
neg
not
xchg
shl
shr
mov
jmp
xor
add
rol
bswap
mov
or
or
not
or
xor
mov
jmp
push
xchg
and
sub
xchg
jmp
push
rol
or
or
mov
sub
inc
add
mov
xor
sub
add
jmp
call
mov
inc
ror
add
xor
sub
xor
inc
mov
add
mov
jmp
add
or
add
and
xchg
ror
xor
ror
shr
shl
and
jmp
push
shl
shr
mov
xchg
add
not
add
add
or
mov
sub
bswap
ror
jmp
mov
shr
xor
sub
mov
add
and
xor
jmp
call
mov
or
and
add
xor
jmp
push
mov
mov
sub
or
ror
rol
xchg
not
or
or
mov
add
mov
jmp
cmp
jmp
pop
or
xor
xchg
xchg
inc
jmp
push
shl
rol
xchg
or
mov
dec
sub
shl
jmp
pop
bswap
xor
mov
shr
bswap
ror
xor
bswap
jmp
mov
sub
sub
mov
dec
or
and
sub
nop
xchg
xor
and
dec
sub
xor
xor
neg
jmp
mov
or
or
add
add
neg
sub
jmp
call
sub
shl
mov
or
add
jmp
pop
shr
dec
xchg
xor
and
rol
sub
and
jmp
jl
and
or
xchg
and
and
sub
bswap
ror
jmp
mov
xor
not
neg
mov
xchg
sub
and
xchg
not
xor
inc
jmp
push
dec
sub
mov
ror
mov
add
mov
xor
and
or
jmp
add
shr
sub
sub
or
add
mov
neg
xor
add
bswap
jmp
pop
or
add
and
bswap
rol
or
shr
neg
sub
xor
xor
xchg
jmp
pop
mov
xchg
and
xchg
or
sub
rol
and
mov
xor
mov
sub
and
jmp
mov
add
and
rol
mov
bswap
sub
and
or
add
jmp
push
xor
and
dec
xor
add
mov
xor
inc
sub
xor
xchg
jmp
call
and
ror
add
neg
mov
jmp
push
xor
and
inc
rol
sub
add
and
shl
add
neg
inc
jmp
pop
xor
shr
and
add
or
xor
or
sub
or
ror
sub
or
jmp
mov
mov
xchg
or
bswap
xor
and
dec
xor
sub
jmp
push
sub
xchg
bswap
sub
xor
or
mov
and
mov
neg
add
jmp
call
sub
mov
mov
bswap
sub
xor
sub
and
add
sub
jmp
pop
xor
add
xor
and
sub
shr
xchg
xchg
mov
xchg
add
and
sub
and
jmp
mov
shl
not
add
add
sub
add
and
and
inc
and
mov
inc
xor
ror
jmp
call
add
or
neg
xor
add
xchg
shr
jmp
push
and
and
sub
add
xchg
mov
add
xor
neg
mov
and
mov
mov
jmp
pop
sub
neg
xor
add
or
xor
or
shl
ror
and
add
shr
add
not
jmp
pop
xor
shl
xchg
xor
xor
jmp
push
add
sub
sub
or
rol
add
and
add
xor
jmp
mov
mov
xor
sub
add
add
sub
or
add
mov
jmp
push
bswap
xchg
shl
mov
inc
and
jmp
call
or
sub
mov
and
xor
xor
xchg
not
or
mov
jmp
xor
inc
and
sub
or
and
and
and
mov
add
add
ror
rol
and
mov
jmp
mov
shl
shr
mov
mov
add
inc
dec
jmp
mov
xor
dec
and
jmp
rol
add
mov
sub
xor
mov
and
and
jmp
ret
or
sub
dec
xchg
add
xchg
xor
xor
and
sub
shl
add
not
mov
and
and
jmp
mov
add
xchg
xchg
sub
neg
xor
sub
or
mov
inc
or
jmp
push
add
sub
add
mov
sub
shr
dec
jmp
pop
sub
or
ror
shr
shl
xor
sub
inc
jmp
pop
and
bswap
add
mov
and
neg
jmp
push
xchg
bswap
xchg
sub
or
xchg
and
jmp
call
or
xor
or
add
sub
inc
mov
bswap
jmp
nop
or
xor
or
shl
rol
xor
mov
mov
mov
jmp
call
xor
mov
and
shr
xor
jmp
add
add
or
sub
or
or
add
sub
xor
sub
jmp
pop
or
add
or
sub
neg
or
add
sub
add
and
sub
jmp
add
dec
add
shr
xchg
xor
and
jmp
pop
not
sub
sub
sub
shl
mov
jmp
push
and
bswap
sub
jmp
call
xchg
shl
shr
add
jmp
call
or
xor
rol
xchg
and
xor
xor
xor
add
and
sub
sub
and
and
and
jmp
push
mov
xchg
mov
add
and
jmp
nop
xor
not
xchg
neg
bswap
or
and
and
and
mov
jmp
push
sub
add
inc
mov
and
and
bswap
jmp
mov
or
sub
add
or
shr
sub
jmp
push
mov
and
xchg
inc
mov
xor
jmp
push
or
xchg
add
sub
shl
bswap
or
jmp
call
sub
mov
or
or
inc
not
jmp
xor
or
xor
sub
xchg
sub
mov
sub
sub
add
or
jmp
pop
inc
and
or
not
dec
sub
jmp
add
sub
or
jmp
mov
ror
xchg
xor
xchg
sub
xor
inc
and
ror
jmp
cmp
jmp
pop
or
inc
sub
xor
and
jmp
pop
add
xor
ror
add
and
mov
mov
sub
shl
jmp
push
mov
sub
xchg
mov
sub
and
add
add
jmp
push
xchg
dec
ror
and
mov
mov
jmp
push
nop
sub
sub
mov
or
shl
xchg
inc
and
and
xor
or
and
jmp
push
neg
or
shl
xchg
add
inc
mov
xor
or
jmp
inc
or
add
not
rol
xchg
xor
jmp
push
mov
add
or
xor
mov
and
jmp
mov
and
xchg
or
xchg
and
mov
and
sub
mov
and
or
dec
jmp
call
mov
not
xor
inc
xchg
shr
jmp
ret
sub
xor
add
mov
sub
and
xchg
sub
xchg
xchg
xor
inc
xchg
jmp
call
xchg
xor
add
not
jmp
pop
add
sub
and
xchg
shl
jmp
pop
sub
mov
or
shr
xchg
add
and
xchg
jmp
push
mov
ror
xor
ror
rol
mov
rol
bswap
sub
rol
or
not
sub
sub
jmp
call
xchg
dec
bswap
shl
add
shr
mov
or
and
and
mov
sub
jmp
ret
xor
sub
sub
dec
ror
rol
or
or
dec
mov
and
shr
jmp
call
inc
add
mov
mov
sub
or
add
or
xor
shl
jmp
push
and
xor
or
sub
or
sub
xor
xor
and
jmp
nop
bswap
or
nop
or
and
and
jmp
xor
or
not
or
shl
ror
add
or
bswap
inc
jmp
ret
neg
add
rol
ror
ror
xor
add
mov
rol
sub
or
mov
jmp
xor
and
rol
bswap
and
mov
xchg
sub
not
mov
jmp
pop
add
dec
neg
mov
bswap
or
and
sub
xor
shr
sub
sub
dec
xor
jmp
pop
ror
and
and
neg
and
or
or
xchg
add
xchg
dec
xchg
inc
xchg
jmp
mov
or
xor
sub
or
rol
shl
or
add
xchg
dec
sub
jmp
push
xchg
or
neg
neg
sub
add
neg
sub
or
not
nop
jmp
push
and
mov
or
and
mov
or
dec
not
and
mov
xor
and
and
or
jmp
pop
neg
sub
or
add
sub
rol
dec
sub
add
shr
add
jmp
xor
xor
ror
xchg
neg
bswap
jmp
pop
xor
add
dec
or
xor
jmp
mov
add
sub
jmp
pop
not
add
xchg
sub
sub
sub
or
neg
inc
xchg
jmp
push
add
add
or
neg
not
and
xchg
mov
mov
and
not
or
and
or
or
jmp
call
dec
add
xchg
add
not
inc
xor
xchg
nop
rol
mov
neg
xchg
add
and
xchg
jmp
pop
xor
xchg
xchg
inc
xor
and
sub
add
add
jmp
pop
mov
add
or
or
xchg
mov
mov
add
xchg
and
or
xor
add
add
jmp
call
xor
and
xor
not
mov
not
sub
rol
sub
or
and
or
add
shl
xor
and
jmp
mov
mov
neg
add
xor
sub
neg
rol
xor
add
dec
ror
neg
or
jmp
pop
rol
xor
shr
and
or
add
sub
not
jmp
mov
mov
mov
sub
add
or
mov
add
mov
and
shr
jmp
pop
inc
sub
xor
not
xchg
xchg
mov
add
and
bswap
jmp
pop
mov
mov
not
mov
mov
sub
sub
jmp
mov
add
xchg
rol
xor
xchg
jmp
mov
sub
add
add
or
and
mov
or
xchg
rol
or
or
inc
xor
shl
jmp
pop
not
add
or
xchg
shl
xchg
mov
and
bswap
xchg
add
jmp
mov
neg
add
or
add
add
and
sub
sub
xchg
and
jmp
pop
ror
add
xor
mov
xchg
jmp
call
mov
xor
add
inc
not
neg
not
mov
inc
add
sub
jmp
push
or
xor
or
sub
sub
shr
and
bswap
jmp
push
and
sub
sub
sub
xchg
sub
sub
or
and
xor
add
xor
shr
xchg
jmp
nop
mov
inc
neg
and
mov
mov
inc
xor
neg
sub
or
bswap
mov
add
add
jmp
pop
xor
inc
sub
not
sub
or
and
sub
inc
mov
or
jmp
pop
mov
ror
xchg
add
inc
nop
xor
sub
jmp
call
sub
xor
bswap
xchg
or
and
jmp
pop
xor
xchg
sub
or
add
add
dec
jmp
mov
rol
dec
add
add
mov
and
xchg
and
and
sub
jmp
push
add
or
bswap
or
jmp
call
mov
xor
or
shr
xchg
and
or
neg
sub
jmp
push
and
xor
ror
sub
shr
bswap
rol
jmp
mov
neg
xor
nop
xchg
sub
add
neg
and
xchg
or
and
jmp
cmp
jmp
inc
not
xchg
xchg
shl
and
or
inc
and
sub
or
jmp
pop
mov
add
sub
rol
not
or
add
xchg
ror
xchg
sub
or
jmp
push
add
neg
sub
rol
and
not
mov
add
jmp
mov
add
sub
nop
dec
not
xor
jmp
push
mov
xchg
xor
xchg
and
xor
xor
and
neg
add
not
and
xor
jmp
mov
xor
and
add
sub
or
or
add
xchg
bswap
add
jmp
add
sub
sub
sub
or
xor
and
dec
and
add
ror
xor
xchg
jmp
add
sub
xchg
xor
mov
rol
add
xor
mov
add
and
mov
jmp
push
shl
xor
xor
xor
mov
or
and
jmp
call
or
xchg
mov
shr
not
xchg
xor
xor
add
add
jmp
pop
inc
xor
and
xor
xchg
nop
xchg
xor
xchg
ror
mov
sub
shl
add
mov
jmp
pop
neg
xchg
xor
sub
mov
xor
dec
mov
not
shr
sub
jmp
mov
sub
xor
sub
sub
and
sub
sub
xor
xchg
jmp
mov
add
add
or
or
bswap
and
sub
xor
mov
bswap
not
mov
ror
jmp
push
xchg
xchg
neg
jmp
pop
or
dec
rol
xchg
neg
and
mov
jmp
mov
and
xor
xchg
not
mov
not
and
add
add
xchg
jmp
pop
bswap
add
and
bswap
rol
xor
neg
mov
or
rol
mov
jmp
add
sub
mov
xor
and
mov
sub
add
mov
add
not
add
xor
sub
mov
jmp
call
or
and
or
or
or
xor
jmp
call
xor
sub
shl
rol
rol
or
dec
and
jmp
add
shr
add
sub
or
bswap
mov
xor
bswap
sub
or
jmp
mov
mov
dec
add
add
sub
mov
add
add
and
jmp
call
mov
and
xor
xor
neg
xor
neg
xchg
shl
dec
or
shr
or
jmp
mov
or
and
and
sub
not
and
sub
rol
mov
jmp
call
inc
dec
rol
sub
or
jmp
mul
xor
xor
and
add
mov
or
xor
and
jmp
pop
or
or
shl
or
sub
xchg
sub
or
xchg
neg
xor
xor
not
xor
or
jmp
mov
or
sub
or
sub
shr
rol
mov
xchg
sub
bswap
mov
jmp
pop
neg
bswap
xchg
add
mov
xchg
mov
add
sub
jmp
mov
and
sub
bswap
and
xchg
or
ror
add
xchg
ror
shr
and
xor
shr
xor
ror
jmp
push
bswap
not
rol
mov
nop
add
and
mov
jmp
push
xchg
or
or
and
not
xchg
mov
shl
mov
jmp
push
mov
mov
sub
sub
shr
xor
add
bswap
ror
jmp
add
ror
xor
and
mov
inc
inc
jmp
push
add
and
add
sub
and
or
or
and
sub
xor
jmp
mov
add
mov
xor
not
or
and
ror
add
xchg
dec
sub
or
xchg
jmp
push
not
shr
xchg
xor
shr
sub
and
and
sub
jmp
push
or
bswap
xor
dec
xor
shl
or
bswap
xchg
xor
add
jmp
mov
rol
sub
neg
and
or
xor
mov
and
neg
sub
dec
bswap
neg
jmp
pop
not
bswap
xchg
add
rol
or
xchg
and
add
mov
and
add
shr
add
sub
jmp
pop
add
xor
shl
xchg
dec
add
xor
and
add
mov
jmp
push
add
not
mov
and
shr
xchg
xchg
and
jmp
pop
neg
or
sub
dec
dec
sub
and
xchg
not
shr
or
sub
jmp
push
or
and
add
xchg
or
add
dec
jmp
call
neg
and
sub
inc
and
and
sub
xor
jmp
call
mov
sub
ror
rol
and
add
xor
inc
add
sub
sub
xor
xor
sub
jmp
call
inc
add
xor
sub
not
not
add
xor
ror
xchg
jmp
pop
inc
dec
and
shl
or
shl
add
or
or
xor
rol
jmp
pop
dec
xor
bswap
xchg
add
xor
sub
shr
jmp
add
inc
mov
and
or
and
xor
or
rol
mov
add
and
shl
xchg
xor
jmp
ret
xor
nop
xor
xor
mov
and
xchg
mov
inc
or
add
add
jmp
pop
xor
sub
sub
bswap
ror
or
neg
or
xor
jmp
mov
xchg
xchg
or
mov
shr
or
not
mov
shl
xor
jmp
xor
and
nop
xor
mov
and
or
add
xchg
sub
jmp
mov
shr
bswap
mov
mov
rol
not
mov
mov
jmp
mov
xchg
or
sub
add
xchg
nop
sub
jmp
call
and
xor
sub
dec
inc
not
not
shr
xchg
xor
sub
xor
jmp
push
sub
or
xchg
dec
xchg
add
bswap
nop
or
xor
mov
jmp
xor
mov
or
mov
add
or
not
sub
mov
sub
neg
shl
xor
xchg
rol
add
mov
jmp
push
and
inc
xor
jmp
pop
xchg
ror
sub
add
or
and
sub
sub
xor
xchg
jmp
pop
inc
dec
nop
nop
xor
add
xchg
mov
rol
add
jmp
push
add
and
or
and
mov
or
xor
neg
xchg
xor
shl
or
jmp
rol
add
sub
sub
xchg
inc
jmp
call
sub
xor
or
neg
xor
and
and
xor
add
add
jmp
call
shr
and
xchg
mov
not
shl
ror
add
xor
ror
and
ror
add
or
jmp
jne
add
shl
xchg
mov
bswap
sub
xor
or
dec
jmp
pop
and
sub
or
mov
xor
and
xor
mov
mov
jmp
call
xchg
inc
xchg
and
and
shl
or
bswap
not
xchg
xor
jmp
push
add
xchg
add
xchg
and
jmp
mov
add
mov
and
not
and
mov
jmp
call
sub
or
xchg
neg
add
xchg
and
not
xor
or
xor
and
jmp
call
xor
or
xor
and
shl
sub
and
xor
sub
sub
not
inc
rol
shl
and
jmp
push
add
xchg
inc
sub
add
dec
mov
jmp
call
or
bswap
mov
ror
or
add
and
sub
inc
xchg
mov
or
jmp
push
add
sub
xchg
sub
or
add
add
mov
xor
shl
jmp
push
inc
xchg
sub
xor
bswap
sub
inc
jmp
xor
or
mov
or
add
xor
neg
dec
add
xchg
add
mov
add
add
add
jmp
xor
and
xchg
sub
xor
or
mov
mov
not
and
shr
sub
nop
jmp
push
or
add
add
shl
inc
shl
add
sub
jmp
call
mov
mov
or
nop
or
add
or
jmp
push
not
sub
xor
mov
and
or
mov
dec
and
mov
add
mov
jmp
push
mov
and
xor
bswap
mov
sub
mov
jmp
add
xor
xchg
add
xor
xchg
jmp
mov
add
mov
mov
sub
or
sub
add
xor
xor
xor
sub
sub
or
sub
sub
jmp
call
xor
add
jmp
pop
and
sub
sub
mov
jmp
pop
not
and
neg
add
rol
add
inc
jmp
push
add
xor
mov
xor
xor
or
xchg
bswap
sub
xor
mov
mov
mov
jmp
push
xor
or
xor
or
shr
and
xchg
mov
and
jmp
sub
sub
xchg
add
and
add
ror
mov
xchg
and
xor
add
jmp
xor
sub
xchg
add
add
xchg
sub
or
and
shl
and
sub
sub
not
and
xchg
jmp
call
mov
sub
sub
bswap
xchg
and
or
and
xchg
jmp
pop
and
or
or
xor
mov
mov
add
mov
mov
jmp
xor
mov
and
inc
not
xor
add
shl
sub
shl
sub
sub
add
or
xor
jmp
mov
or
or
xor
neg
sub
inc
neg
not
shr
shl
ror
jmp
xor
ror
ror
or
and
rol
inc
xchg
xor
xor
jmp
pop
xchg
ror
or
or
mov
xchg
mov
mov
rol
sub
jmp
pop
sub
sub
or
xor
add
add
shl
xor
mov
jmp
pop
mov
sub
sub
xchg
or
add
or
mov
rol
or
add
jmp
mov
neg
or
xchg
mov
and
shl
add
sub
xchg
xchg
dec
ror
not
sub
sub
xor
jmp
mov
or
not
rol
xor
sub
rol
shl
or
mov
jmp
call
mov
xor
or
neg
bswap
sub
jmp
pop
sub
mov
xor
add
add
inc
shr
jmp
call
sub
or
jmp
nop
xor
xor
add
shl
or
bswap
sub
shr
xor
mov
and
rol
not
mov
sub
jmp
mov
or
mov
inc
or
xchg
neg
rol
and
sub
mov
not
and
mov
neg
jmp
pop
xor
mov
sub
xor
xchg
neg
mov
mov
xor
jmp
mov
sub
mov
xor
or
and
shr
jmp
mov
or
sub
sub
sub
xchg
not
neg
mov
and
jmp
push
mov
xchg
xchg
sub
shr
xchg
ror
add
or
jmp
mov
or
sub
or
add
shr
mov
dec
rol
rol
sub
jmp
mov
and
and
rol
or
and
add
xor
mov
mov
sub
and
neg
jmp
mov
xor
bswap
not
ror
bswap
jmp
call
not
shl
mov
mov
or
xor
and
or
add
or
mov
jmp
ret
add
mov
or
and
not
ror
xor
xor
jmp
push
add
dec
and
add
or
shr
jmp
mov
ror
xchg
rol
xor
xchg
add
ror
mov
sub
and
jmp
add
and
sub
shl
bswap
add
sub
sub
nop
mov
or
mov
jmp
pop
xor
add
xor
jmp
mov
mov
add
sub
xor
add
rol
and
xor
jmp
mov
shl
xor
and
or
xchg
shr
or
sub
and
nop
or
or
jmp
pop
add
mov
xor
mov
and
sub
sub
jmp
mov
or
sub
ror
and
and
and
jmp
pop
bswap
xor
rol
add
or
or
shr
xchg
not
add
jmp
xor
and
sub
mov
xor
neg
not
dec
xor
add
nop
xor
xor
jmp
call
sub
xor
neg
xor
dec
and
nop
mov
jmp
mov
mov
sub
xor
xchg
xor
and
jmp
xor
ror
ror
neg
mov
mov
xor
xor
mov
not
mov
and
jmp
call
mov
or
sub
xor
not
xchg
or
rol
rol
jmp
push
and
sub
or
and
sub
xor
add
xchg
add
jmp
push
xor
mov
and
mov
add
and
or
and
and
jmp
push
mov
xor
xchg
add
neg
add
and
mov
or
shl
jmp
push
mov
or
shr
sub
or
sub
mov
add
jmp
pop
add
ror
or
and
add
shl
bswap
add
sub
sub
jmp
ret
sub
sub
add
add
xchg
or
shr
jmp
mov
sub
mov
add
sub
sub
rol
sub
xor
mov
inc
sub
xchg
xchg
and
jmp
push
xchg
rol
add
and
mov
or
sub
xchg
not
sub
jmp
pop
and
add
or
inc
jmp
call
dec
or
xchg
mov
jmp
add
add
shl
add
and
jmp
mov
or
xor
sub
add
mov
or
xor
bswap
bswap
add
add
sub
and
jmp
jne
mov
or
neg
sub
add
jmp
push
xchg
sub
add
mov
add
add
and
shr
not
dec
jmp
call
or
shr
or
sub
and
jmp
pop
not
xor
add
add
mov
jmp
push
add
xor
sub
xchg
xchg
xor
xchg
jmp
mul
or
xor
neg
and
shl
sub
jmp
add
xor
xchg
not
add
xchg
jmp
push
shr
xor
shr
rol
neg
xchg
sub
jmp
mov
xchg
mov
sub
shl
or
xchg
or
add
dec
xor
jmp
call
mov
sub
bswap
not
xchg
sub
xor
jmp
push
or
and
and
dec
xchg
xor
rol
neg
xor
jmp
nop
not
xchg
mov
dec
add
bswap
sub
neg
not
shr
inc
jmp
push
and
sub
inc
mov
rol
and
mov
and
mov
add
or
and
and
add
jmp
push
rol
xor
mov
rol
add
sub
or
inc
shr
sub
shr
and
jmp
add
shl
or
add
neg
xchg
add
jmp
mov
or
not
dec
mov
add
rol
and
jmp
push
bswap
add
xchg
jmp
ret
shr
mov
mov
and
and
sub
dec
xor
jmp
add
and
add
and
and
bswap
and
shl
and
add
shr
mov
jmp
sub
add
bswap
sub
jmp
pop
add
add
sub
add
xor
mov
sub
and
or
xor
mov
jmp
call
or
or
not
dec
xor
jmp
jmp
jmp
jmp
jmp
