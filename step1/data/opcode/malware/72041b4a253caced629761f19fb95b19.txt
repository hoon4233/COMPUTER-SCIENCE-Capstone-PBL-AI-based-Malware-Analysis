sub
cmp
xor
mov
sbb
mov
pop
fadd
and
and
js
xor
and
inc
or
adc
sbb
int3
ds
fidiv
xchg
stos
push
(bad)
popf
inc
outs
dec
imul
add
mov
lods
mov
inc
lds
out
int3
xchg
push
cmp
(bad)
repz
mov
inc
mov
jnp
fs
nop
sbb
dec
push
mov
mov
add
jp
nop
ins
pushf
nop
je
nop
icebp
in
(bad)
inc
ins
in
div
inc
mov
xlat
test
inc
fstp
lods
loop
mov
jg
js
imul
out
xchg
xor
(bad)
jg
fdiv
in
inc
xchg
or
int3
inc
and
pop
or
fnstsw
push
cs
and
enter
std
mov
adc
or
sub
mov
movs
ficom
repz
adc
loope
add
or
inc
mov
add
fiadd
ror
inc
push
jmp
movs
mov
mov
or
pop
dec
push
or
xchg
pop
adc
inc
pop
mov
or
jae
lock
push
jo
xchg
movs
xchg
and
cdq
inc
xor
cmc
push
out
inc
jne
and
ja
xchg
(bad)
jmp
test
fwait
push
je
out
or
cli
push
lock
pop
adc
lea
mov
add
outs
and
inc
xor
cli
ins
push
sub
push
pop
push
xchg
fist
jne
xlat
pop
sub
pop
jge
mov
loop
aas
add
adc
mov
pop
dec
les
jb
jge
add
ret
aad
xchg
stos
mov
or
ins
mov
in
mov
adc
add
pusha
mov
sbb
sub
pop
imul
xor
adc
out
xor
or
add
fidiv
gs
inc
data16
inc
fcmove
push
loop
in
mov
cld
enter
xchg
jo
rcr
(bad)
pop
xchg
add
call
neg
aad
sbb
add
hlt
mov
call
mov
jmp
out
icebp
and
inc
outs
bound
sub
lods
push
mov
stc
rol
and
cdq
test
push
les
popf
cmp
pcmpeqb
dec
push
in
dec
or
loopne
push
arpl
mov
loop
and
or
mov
inc
mov
jns
cs
push
(bad)
into
retf
sbb
mov
jbe
div
cld
(bad)
call
mov
push
cmc
(bad)
fcom
leave
rol
push
mov
and
and
push
lds
pushf
ins
les
fstp
arpl
sbb
ins
mov
test
cld
movs
fbld
mov
jae
gs
retf
pop
shl
cdq
adc
push
ret
inc
mov
adc
out
sbb
sub
pop
push
mov
in
retf
ss
mov
sub
xor
cmps
push
popa
sbb
pop
sub
cmp
xor
xor
test
add
loop
retf
xchg
jp
test
out
jl
add
repz
mov
test
mov
cmp
mov
stc
xchg
ret
adc
punpcklbw
xchg
je
jmp
rcr
pop
cmps
add
es
int
icebp
and
pop
add
sub
fdiv
cld
dec
xchg
retf
les
cmp
push
push
cmps
pop
inc
adc
test
js
test
adc
test
mov
retf
mov
sbb
cli
pop
mov
imul
bound
cmp
iret
call
pandn
inc
fisub
jecxz
jg
add
sbb
retf
inc
bound
jb
push
pop
dec
push
je
mov
jne
mov
push
dec
retf
pop
shr
mov
cs
mov
xchg
push
sbb
fcomp
dec
mov
or
sar
push
xchg
jmp
mov
inc
mov
pop
dec
push
sar
or
pop
lea
sub
sub
mov
in
js
xchg
and
inc
or
inc
sub
rol
jne
lods
mov
push
test
cld
mov
bound
or
inc
fsub
sub
xor
inc
aad
es
xor
or
and
arpl
xchg
cld
and
mov
dec
shl
cs
mov
data16
sub
jle
mov
sub
jae
dec
xor
lds
add
aad
push
xchg
jb
inc
mov
pop
dec
xchg
mov
ret
lds
adc
pop
xchg
cmc
mov
push
xor
mov
dec
shr
dec
and
fs
retf
push
fs
clc
sub
dec
mov
aam
mov
push
add
sbb
sbb
mov
les
lods
loop
int
aam
repz
pop
add
cmp
pushf
rol
mov
sbb
imul
mul
pop
dec
cmp
mov
add
and
movs
pusha
pop
jns
or
dec
or
push
push
adc
and
pop
sub
addr16
jmp
push
jne
ret
and
mov
xchg
mov
ret
push
leave
jb
iret
out
outs
jg
adc
jno
or
fst
dec
aad
shl
ss
clc
and
imul
sbb
add
mov
xor
mov
aaa
nop
ins
adc
mov
pop
or
ror
test
mov
sub
fisttp
loope
and
sbb
mov
xchg
rcr
inc
dec
and
adc
loop
lahf
push
xchg
xchg
push
inc
mov
pop
inc
jns
data16
add
mov
xchg
xchg
in
mov
push
imul
mov
mov
push
stos
sar
shr
or
js
push
loopne
dec
adc
test
lods
mov
or
lds
cmp
sub
daa
jns
mov
inc
jnp
mov
mov
jnp
int
std
mov
mov
sub
sub
sbb
jmp
jno
lods
dec
call
sbb
jns
xor
cmp
dec
push
xor
mov
mul
leave
mov
cmp
je
mov
nop
icebp
sub
fs
or
rol
and
or
xchg
add
jl
xor
mov
adc
shl
enter
mov
les
jnp
les
sub
(bad)
fucomip
mov
out
jns
les
xchg
scas
sub
out
cs
pusha
out
aaa
and
clc
mul
out
mov
mov
test
mov
les
inc
mov
(bad)
push
or
cmp
mov
ja
pop
fistp
sub
and
jno
pop
jecxz
les
and
lahf
and
sub
loope
xchg
adc
movs
push
jge
adc
adc
and
cmp
cli
test
(bad)
es
mov
mov
ret
mov
push
inc
frstor
je
inc
adc
adc
cdq
and
pop
dec
pop
pop
sub
pushf
mov
lods
sbb
mov
aad
clc
xlat
push
xchg
cmp
mov
jb
idiv
retf
out
mov
mov
pop
loope
adc
xor
pop
cmp
pop
sub
(bad)
push
mov
je
fwait
and
test
lahf
inc
push
dec
push
xchg
rol
mov
xor
cdq
std
gs
or
jne
mov
bound
ins
fimul
dec
in
add
sbb
popf
xchg
and
inc
sbb
fild
cmp
ret
add
(bad)
retf
call
popf
rcr
xchg
mov
or
bound
pop
dec
outs
inc
cli
xor
sub
fld
pop
es
retf
fldenv
gs
pop
aad
fiadd
adc
adc
fldenv
cmps
and
test
sbb
pop
add
imul
push
mov
push
xlat
mov
cdq
popf
mov
loop
push
dec
sub
sar
pop
sbb
repz
mov
imul
in
jl
xlat
push
outs
mov
jb
out
pop
scas
xchg
stos
fwait
pop
add
dec
jne
call
es
mov
scas
dec
pop
arpl
mov
pop
shl
test
add
ss
inc
mov
push
das
cwde
pop
stc
lock
test
je
test
pop
pop
dec
dec
mov
lea
mov
ror
sub
mov
mov
xchg
popa
frstor
mov
fwait
push
fisttp
inc
mov
iret
lea
mov
test
push
push
je
or
popf
pop
jb
test
inc
daa
cmp
clc
mov
and
lds
ret
in
popa
push
xchg
sub
ret
bound
lahf
adc
pop
div
and
xchg
dec
mov
shld
sub
(bad)
out
jmp
mov
aas
retf
xor
xlat
ins
or
rol
inc
ret
mov
adc
inc
and
dec
scas
mov
pop
fiadd
pop
imul
icebp
(bad)
push
sbb
shr
fdivr
mov
cmps
adc
scas
add
xchg
out
xchg
test
ja
repz
xchg
loop
aas
mov
sub
nop
shr
mov
mov
inc
cmp
inc
inc
mov
movs
mov
lahf
fadd
adc
ja
aaa
or
mov
call
inc
clc
push
push
xchg
add
nop
and
jmp
leave
add
jae
fucomp
loop
(bad)
cmc
dec
jae
mov
cmp
and
add
retf
inc
mov
pop
or
mov
ret
jne
fs
jnp
test
cmps
int3
dec
dec
xor
cwde
or
mov
jl
xchg
retf
fimul
(bad)
in
adc
clc
js
cmps
call
add
in
sub
push
hlt
fbstp
xchg
inc
cmp
cmp
pusha
lods
test
scas
not
jne
in
dec
mov
or
xchg
bound
xor
jp
push
loop
or
adc
or
xlat
push
xlat
cmp
movs
mov
mov
int3
push
mov
(bad)
jmp
push
dec
pop
pop
xchg
jns
sub
(bad)
push
stos
inc
jle
mov
cmp
cmp
stos
popa
xchg
ins
xor
and
and
cmp
frstor
lods
test
in
mov
in
inc
xchg
aad
mov
out
inc
stos
and
jae
xor
jp
(bad)
dec
fwait
vpunpckhdq
sub
mov
sub
xor
xor
out
lock
cmp
je
sar
xchg
and
xchg
xchg
inc
mov
sub
test
xor
pusha
push
(bad)
cs
pop
mov
dec
hlt
retf
dec
int
std
cmp
int3
clc
xor
mov
xor
enter
jge
mov
cmps
pop
test
push
out
fwait
data16
mov
jecxz
mov
ja
js
shr
jno
out
or
mov
xor
jmp
inc
iret
push
and
out
adc
pop
sub
mov
bound
mov
add
xor
pop
ins
ret
(bad)
stos
dec
add
sub
push
push
in
mov
fwait
les
stos
aaa
pop
xchg
pop
pop
jp
sub
or
inc
and
or
adc
adc
mov
jg
sahf
xchg
ret
pop
das
pop
adc
ins
pop
mov
mov
rol
inc
mov
sub
sbb
cs
pop
and
aad
xor
jae
test
in
out
mov
sub
sbb
in
dec
sub
sub
push
daa
push
mov
loopne
hlt
sar
addr16
pop
sub
jmp
mov
ror
add
shl
popa
jno
test
sub
or
ins
mov
or
add
and
dec
iret
adc
icebp
sar
mov
or
aas
lock
jmp
mov
pop
add
shr
or
mov
push
rol
mov
mov
shl
rol
(bad)
cdq
sbb
or
or
shl
aaa
xor
cmp
dec
outs
mov
jbe
mov
stos
pop
pop
out
test
xor
ins
sub
mov
or
mov
enter
cmp
cmp
call
push
push
cmp
ins
scas
hlt
leave
(bad)
adc
inc
std
arpl
sbb
in
or
(bad)
std
xchg
cmp
dec
jae
push
aam
pop
push
push
or
(bad)
adc
dec
test
cwde
retf
and
mov
(bad)
out
loop
ja
test
arpl
cmp
push
int3
sub
movs
sub
call
mov
mov
mov
xor
pop
stos
jl
adc
push
fwait
addr16
sub
pop
xchg
shl
call
rcr
cmp
xor
add
jns
add
cmp
inc
test
inc
fisttp
inc
inc
adc
xor
pop
jb
ret
popa
ss
sub
dec
lahf
js
repnz
mov
cmp
hlt
sar
xchg
pop
cmp
mov
sub
lods
pushf
ins
or
rcl
sbb
jp
cmp
mov
arpl
scas
xchg
xor
mov
dec
js
popf
xchg
and
icebp
or
inc
or
cmp
cmp
test
adc
repz
add
ins
fucomp
pushf
add
cmp
inc
mov
add
adc
fstp
(bad)
xor
jne
mov
xor
push
pop
xor
pushf
push
inc
dec
(bad)
in
and
gs
mov
xchg
push
inc
test
jo
cdq
into
loope
mov
icebp
fcmovu
fsub
es
sub
mov
mov
pop
retf
daa
push
jle
inc
and
lods
mov
test
scas
call
(bad)
mov
xchg
xchg
xchg
jle
or
push
aas
pop
adc
(bad)
cpuid
inc
cld
retf
add
sbb
mov
aaa
sbb
js
frstor
mov
or
loopne
cmp
pop
or
fdivrp
pop
jle
sub
cs
jl
pop
xor
and
xchg
xchg
cmp
(bad)
outs
in
f2xm1
out
ficomp
cmp
jmp
xor
mov
adc
test
push
dec
dec
(bad)
ficom
push
xchg
daa
sub
movs
retf
std
inc
xchg
sbb
not
mov
js
mov
das
jns
xor
ins
mov
pop
jo
cli
mov
ficom
pop
nop
inc
fcmovbe
scas
imul
pop
sbb
sbb
jne
enter
imul
into
adc
cdq
or
cmps
retf
jmp
push
mov
loope
iret
xchg
or
jns
mov
cli
out
xchg
cwde
or
or
sub
inc
push
push
imul
dec
mov
push
lods
mov
mov
mov
pusha
xor
fisttp
iret
push
or
jb
xlat
mov
mul
fisub
or
sub
sbb
fild
xchg
mov
xchg
inc
adc
ins
ret
clc
push
js
pop
pusha
test
xor
pop
leave
loope
jne
cmc
ret
inc
jmp
xchg
jo
mov
ret
jle
add
into
outs
jp
add
test
mov
and
xchg
jge
mov
dec
int
leave
push
jae
and
jmp
shl
arpl
cmp
ja
adc
pusha
dec
es
and
stos
sub
and
mov
popa
stos
cdq
jns
mov
pop
dec
mov
jne
dec
mov
sbb
lods
rol
jl
sbb
ficom
outs
mov
and
sub
mov
fcomp
stos
test
retf
jmp
sub
xor
jnp
mov
fidiv
xchg
xor
dec
lea
push
push
push
aam
sub
rol
aam
push
xchg
xchg
xchg
test
movs
fst
sub
or
dec
js
sbb
std
iret
pushf
mov
xchg
inc
or
cmc
cmps
adc
aad
push
and
mov
push
imul
mov
adc
mov
out
add
pop
je
cmp
mov
rep
xlat
retf
xor
jl
fiadd
push
cwde
cwde
xor
dec
push
clc
test
add
lock
sub
xchg
iret
jo
add
pusha
out
movs
inc
fwait
mov
adc
test
scas
or
and
enter
gs
fdiv
mov
mov
push
sub
jmp
cwde
jmp
pop
adc
sbb
and
mov
xchg
pop
adc
and
push
in
nop
mov
inc
jns
out
mov
(bad)
out
sbb
retf
dec
bswap
xor
lock
test
hlt
(bad)
push
xor
ds
pop
retf
cmps
jle
adc
stc
inc
imul
or
loope
or
pop
retf
aas
mov
in
jb
jbe
inc
or
stos
es
inc
pop
and
js
xchg
ss
sub
jbe
dec
lahf
idiv
movs
test
gs
mov
loope
dec
sub
rcr
xor
pop
popf
pop
mov
lahf
or
fcom
add
popf
(bad)
xchg
add
jno
dec
in
inc
dec
dec
and
int
hlt
mov
fldcw
push
arpl
jg
out
or
jmp
sub
pop
cld
(bad)
movs
sub
hlt
fcmovne
pop
add
int
inc
push
mov
cmps
stos
idiv
xor
adc
and
and
loop
lahf
mov
das
loop
int
pop
mov
in
fsub
pop
and
jge
lods
(bad)
popf
or
outs
jno
push
ret
sbb
fisub
add
mov
add
ret
and
jg
pop
jae
lea
or
xor
nop
xor
ficom
mov
mov
sbb
test
(bad)
push
(bad)
fidivr
or
aas
sub
outs
in
push
xchg
mov
es
inc
jp
out
mov
adc
adc
bound
aas
fcom
cdq
or
pop
ret
jmp
mov
mov
pop
jns
jmp
mov
adc
and
mov
add
xor
mov
fs
xor
test
movd
push
addr16
jmp
mov
jne
test
pop
sub
sub
shl
cdq
push
xor
fstp
adc
xchg
shl
(bad)
aam
sub
mov
(bad)
pusha
push
sti
jp
xlat
jmp
or
inc
pop
mov
rol
pop
jl
call
pmaddwd
ss
sti
repnz
loope
jg
clc
fdivr
pop
mov
js
movs
and
jp
xlat
cmps
icebp
mov
clc
push
jmp
pop
fimul
pop
cld
fistp
pop
cmp
pop
cwde
idiv
outs
stos
xor
jmp
daa
lods
xor
and
or
mov
push
mov
out
js
xchg
ficomp
jmp
push
adc
xchg
adc
push
cmp
arpl
std
loop
pop
jmp
in
mov
imul
inc
call
jno
int
xor
arpl
fstp
push
(bad)
jp
call
inc
adc
adc
sahf
push
jnp
jns
iret
ins
cdq
cmp
retf
mov
xor
inc
xchg
jno
frstor
lahf
push
fidivr
jmp
jns
xor
push
cmp
shr
jbe
sbb
lods
test
add
shr
clc
mov
xchg
aad
jne
aam
mov
test
mov
adc
in
and
arpl
cli
jmp
jno
xchg
aaa
(bad)
mov
rcl
push
out
mov
imul
cmps
pop
cmp
lahf
hlt
not
mov
movlps
mov
mov
retf
int3
out
bnd
iret
add
inc
(bad)
mov
aad
inc
lods
outs
inc
cwde
wrmsr
in
lods
mov
lods
ja
(bad)
sti
sbb
(bad)
sti
jnp
addr16
aad
jae
cwde
(bad)
push
cmp
jbe
mov
push
pop
pop
fisubr
adc
sbb
jnp
sub
xor
jae
ja
aaa
mov
sti
int
out
mov
mov
mov
stc
push
shr
sub
jns
clc
sbb
mov
mov
nop
jmp
cmp
add
iret
cmp
push
mov
mov
mov
sbb
mov
ds
gs
dec
out
pusha
or
pushf
das
mov
dec
mov
ret
lock
jb
jnp
dec
adc
outs
imul
sub
sbb
xchg
xor
shr
mov
std
fsubr
fcom
fld
sbb
jl
or
jmp
jns
and
loope
inc
mov
fild
mov
cmp
jae
mov
dec
icebp
sar
mov
into
sub
outs
stc
gs
push
stc
or
mov
mov
sub
inc
aaa
and
xchg
add
adc
in
inc
jmp
sbb
and
mov
dec
repz
jno
xor
push
clc
loope
mov
aas
std
xor
(bad)
sbb
loopne
xchg
sbb
push
stc
jno
cld
jmp
bound
fstp
out
fnstenv
sar
out
loope
jg
and
rcr
or
jae
xchg
std
or
jl
cli
daa
out
push
imul
xor
jge
ins
repz
cli
sbb
pop
sbb
loop
ffreep
or
das
in
push
cmp
and
sub
idiv
push
sahf
xchg
jle
out
mov
(bad)
rol
lds
add
in
rcr
std
xchg
ss
jge
xor
or
xor
adc
push
sbb
cmc
add
inc
fdivp
xchg
out
add
iret
fidiv
pusha
bound
call
(bad)
jnp
hlt
jmp
dec
call
cmps
gs
mov
mov
or
mov
mov
sub
sbb
fsubrp
popf
pop
test
call
fsub
(bad)
(bad)
cmp
adc
ds
sbb
mov
repz
sbb
(bad)
cli
mov
cmp
xchg
inc
das
push
test
inc
out
inc
leave
pop
es
icebp
rcl
ja
push
jp
fnstsw
push
sbb
stos
pop
fnsave
test
andnps
cld
neg
xchg
push
(bad)
and
leave
cli
aam
and
jecxz
idiv
fucom
ror
dec
inc
mov
push
push
iret
outs
sbb
test
rcr
rcl
xchg
ds
ss
jg
or
jmp
push
adc
sbb
int3
add
dec
cmps
push
into
jnp
sti
stos
lock
jno
push
fild
(bad)
inc
cmp
test
jmp
jl
sti
sbb
adc
repnz
loopne
dec
vminsd
fldz
retf
cmp
aad
sbb
std
jnp
cmp
dec
jl
pop
pop
mov
ret
sub
in
add
in
arpl
push
loope
clc
test
add
clc
ins
or
nop
push
lods
sbb
div
dec
pop
xchg
and
mov
out
mov
jno
dec
int3
adc
out
sti
mov
adc
push
and
jbe
jle
stos
enter
add
cmps
hlt
iret
pop
test
jno
lods
push
mov
push
ret
pusha
shl
test
arpl
inc
ret
adc
adc
cmps
jmp
xor
push
pop
and
(bad)
sbb
movs
sahf
repz
cmp
dec
fwait
xor
retf
in
aam
inc
bound
sbb
aam
(bad)
push
sahf
sub
mov
jge
out
cmp
test
mov
mov
and
pop
lods
pushf
mov
add
add
fwait
movaps
sub
mov
pop
mov
(bad)
pop
dec
mov
sub
xor
pop
pop
fisubr
or
lds
ret
mov
add
sub
cmc
daa
ret
and
dec
xor
mov
xor
pop
pop
add
dec
jp
sub
xchg
out
add
test
out
jno
jg
loop
(bad)
cmp
mov
cs
shr
ret
push
inc
into
dec
cs
and
imul
or
push
jno
sahf
push
loope
neg
xchg
mov
in
mov
fidivr
push
jbe
addr16
inc
jmp
jge
sub
call
fs
sub
and
inc
(bad)
lock
mov
jge
inc
stos
rol
lahf
mov
lahf
mov
lahf
jb
cmp
xchg
xchg
and
cmp
jb
repz
sbb
mov
mov
loop
out
mov
push
imul
mov
pop
mov
jb
inc
pop
fdivr
dec
push
inc
jle
repnz
test
jne
lock
jp
jge
sbb
mov
add
popf
fisttp
inc
cmp
shr
jmp
pop
mov
test
pop
jp
xchg
mov
(bad)
push
retf
lods
xor
sub
cmps
cmc
pop
lods
or
xchg
jns
jmp
jl
xor
jb
or
(bad)
mov
xchg
dec
jg
stos
cmp
je
mov
lds
jg
faddp
sbb
(bad)
movs
fisub
mov
imul
in
xchg
mov
sbb
xor
in
in
stos
xchg
rcr
sahf
sti
mov
sub
test
pavgb
out
jl
inc
cdq
push
mov
mov
add
jg
sbb
inc
jmp
add
dec
jl
jno
mov
mov
pop
(bad)
xor
sbb
mov
pop
push
aas
gs
pushw
ins
pop
pop
xor
push
mov
fld
rol
pop
fisub
inc
icebp
pusha
stos
out
jnp
ja
cmovg
cli
xor
daa
xlat
icebp
(bad)
cdq
dec
test
mov
push
jl
cwde
jecxz
xor
jmp
les
std
jne
ret
sub
repz
xchg
test
push
sub
sbb
repz
add
imul
mov
bound
xor
enter
and
hlt
mov
lock
xchg
xlat
cmp
shr
inc
add
mov
xor
(bad)
mov
jno
fst
mov
fdiv
or
arpl
mov
in
int
stos
mov
mov
cmp
mov
loope
dec
dec
repnz
inc
test
lods
in
stc
jne
and
scas
cli
stos
cld
jl
push
mov
in
push
add
jmp
out
sub
adc
retf
pop
cmp
mov
dec
mov
test
pushf
arpl
lea
mov
cmps
jmp
or
xchg
adc
ja
mov
outs
jle
mov
sbb
mov
fmul
jne
pop
mov
jno
and
sbb
add
and
pop
sbb
inc
adc
(bad)
or
jb
ret
test
inc
arpl
loop
imul
or
fmul
ret
hlt
mov
clc
ins
cmp
jnp
imul
xor
pop
jmp
sbb
leave
adc
xchg
mov
push
lods
xchg
mov
mov
cmc
adc
push
jb
pop
fimul
call
or
mul
mov
dec
and
shr
pop
mov
lock
xchg
lods
imul
sub
ins
cmp
arpl
ss
sbb
or
(bad)
shl
pop
sub
push
push
std
dec
clc
loop
cmp
pop
sti
sub
in
mov
fdiv
les
(bad)
fmul
jne
lods
sbb
js
or
mov
dec
xlat
call
cmp
xor
dec
mov
fsubr
(bad)
movs
sbb
adc
ror
aaa
mov
pop
retf
mov
mov
cmc
cmp
call
repnz
cmps
gs
repnz
sub
imul
inc
xchg
scas
push
mov
stc
test
or
inc
dec
or
jne
mov
sti
imul
in
sub
cmp
das
dec
aad
out
aam
test
cmp
loop
push
pop
xchg
imul
icebp
xor
mov
(bad)
inc
mov
iret
add
dec
les
push
popa
(bad)
stos
or
pop
pop
popf
xchg
dec
shl
xor
add
or
lahf
imul
xor
push
dec
outs
ss
or
iret
std
jmp
into
jmp
adc
test
lock
(bad)
and
push
js
fisubr
mov
xor
push
les
stc
into
stc
jns
cmp
cli
bound
not
inc
mov
mov
stos
ins
or
mov
popa
cmp
arpl
outs
fadd
fwait
sub
(bad)
jmp
jecxz
jb
call
jecxz
jecxz
jno
test
int
aam
ins
fcomp
pushf
cmps
lods
test
stos
stc
stos
out
aaa
out
je
iret
(bad)
mov
add
sub
sbb
enter
push
cmp
and
(bad)
push
lds
sub
mov
pop
cwde
mov
adc
ret
mov
dec
jmp
pop
iret
out
ins
sbb
loope
sub
pushw
mov
arpl
cdq
sti
add
lock
jmp
ds
xlat
sahf
aas
stos
popf
sar
jecxz
cmps
dec
push
call
in
int3
aas
pop
sub
sbb
sti
xor
in
mov
push
xor
jno
push
dec
pushf
push
push
push
adc
pop
mov
jb
bound
iret
or
sbb
xor
fwait
mov
clc
cmp
pop
push
jp
adc
mov
dec
or
inc
mov
jg
mov
call
hlt
repnz
dec
enter
add
adc
xchg
test
xor
inc
cmps
arpl
mov
mov
adc
dec
(bad)
cmp
adc
mov
idiv
adc
js
jge
push
sub
in
cmp
enter
add
movs
iret
dec
xchg
jmp
inc
dec
test
shl
in
inc
jmp
push
jg
arpl
ja
in
adc
and
pop
scas
(bad)
pop
jb
xor
mov
mov
push
add
int
aad
shr
or
pop
dec
sub
rcl
mov
dec
repnz
fcomi
jmp
test
jl
push
push
imul
fdivr
mov
cmps
mov
xor
mov
jp
and
call
test
dec
cdq
cdq
dec
fisubr
sub
push
clc
cmp
mov
push
and
mov
jne
inc
and
mov
rol
iret
call
shr
push
imul
mov
pop
cdq
mov
outs
popf
or
push
sbb
mov
retf
sti
ss
popa
(bad)
mov
xor
jo
pop
push
mov
jp
add
jg
outs
pop
bound
add
cmp
mov
sar
in
fstp
add
imul
jnp
fisub
loope
push
hlt
test
mov
sub
mov
xor
xor
jl
pusha
das
mov
sub
inc
outs
jl
xchg
sbb
cmp
or
xor
xchg
scas
add
inc
jmp
push
loopne
inc
add
retf
addr16
mov
mov
dec
push
jp
mov
xchg
lea
pushf
cmp
mov
sub
mov
cmp
pop
mov
or
mov
pop
xchg
or
div
push
mov
mov
ins
mov
xchg
cmps
push
aad
lods
call
test
aas
push
pusha
loop
sub
mov
hlt
inc
pop
mov
push
movs
cmc
imul
mov
jno
pop
enter
popf
jno
jns
sbb
neg
dec
cwde
jne
dec
xchg
not
in
xor
mov
sub
mov
rcl
or
pop
jmp
add
or
adc
fbld
clc
sub
mov
jmp
sub
push
(bad)
in
aaa
inc
(bad)
in
sub
call
cmp
xchg
rol
mov
inc
mov
push
mov
sbb
imul
xchg
jae
hlt
cmp
push
icebp
or
xor
int
push
jge
jmp
in
scas
xor
aad
mov
inc
jne
sbb
push
das
push
add
repnz
jle
mov
jge
loop
pop
loopne
and
jns
mov
inc
ret
out
js
cmp
mov
jmp
loopne
add
sbb
data16
mov
(bad)
call
mov
jbe
jns
add
and
pushf
out
leave
nop
ins
rcl
mov
daa
xor
js
xlat
les
in
(bad)
fs
mov
jmp
lea
and
dec
jmp
aas
push
sbb
mov
mov
rcl
pop
dec
push
jo
cmp
jne
inc
xchg
inc
enter
fs
xor
fist
das
lock
fdiv
retf
dec
sahf
imul
mov
mov
push
mov
xor
fidiv
aam
jb
sub
repnz
test
aad
repnz
push
outs
mov
pop
mov
pop
retf
push
pushf
jbe
dec
push
(bad)
push
xchg
xchg
mov
repnz
hlt
lods
(bad)
ret
mov
pop
pop
pop
pusha
jo
scas
scas
rcl
sti
(bad)
lock
inc
dec
xchg
dec
push
das
cmp
shl
push
cmps
shr
sbb
xor
push
jae
jecxz
pop
inc
hlt
pop
fwait
jecxz
repnz
cmp
lds
sbb
sub
dec
jmp
jmp
je
mov
jle
push
frstor
lds
pop
fs
dec
aam
fwait
xchg
jle
aaa
in
stos
jl
mov
cmp
mov
xor
retf
inc
aad
les
sbb
lods
cwde
mov
movs
sbb
fsubr
lods
pusha
push
mov
out
sub
cli
imul
ret
out
push
jo
dec
rcr
sahf
adc
mov
call
daa
popa
mov
daa
sub
je
jmp
xor
dec
push
and
repnz
leave
pop
inc
add
out
fcomp
cwde
dec
jmp
pop
xor
dec
push
sub
and
push
sub
es
js
cdq
into
cld
ins
outs
loop
inc
rcr
cs
cmp
mov
mov
jbe
sti
jmp
(bad)
xchg
(bad)
sub
lea
test
mov
adc
fs
cli
sub
jo
int
inc
cdq
mov
pop
outs
xlat
mov
fbstp
out
and
and
fild
jns
jns
cmp
mov
add
xor
push
outs
inc
dec
dec
inc
mov
sbb
fldcw
inc
data16
iret
sbb
inc
or
shr
push
fisub
add
leave
popa
ins
in
mov
retf
or
add
cwde
mov
push
add
js
add
hlt
inc
stos
jl
nop
mov
in
mov
add
ins
je
inc
dec
add
cmp
shl
movs
jl
sbb
ret
mov
mov
test
das
or
add
push
push
mov
mov
dec
icebp
clc
or
cld
div
adc
dec
jo
sti
sbb
fwait
(bad)
xor
adc
test
xchg
test
or
and
fcomp
fdivr
mov
(bad)
test
iret
mov
test
loopne
gs
call
add
or
inc
daa
out
pop
lahf
call
enter
or
mov
dec
and
push
pop
xchg
not
add
mov
inc
mov
push
pop
sub
push
adc
dec
les
jae
std
call
adc
out
adc
inc
popa
jg
mov
(bad)
inc
xchg
loop
pop
out
fcomp
mov
push
xor
push
xor
popa
cwde
mov
ror
push
sub
sub
retf
sub
dec
xchg
gs
loope
mov
or
xchg
cmp
mov
mov
ja
div
jmp
jmp
repz
mov
sub
outs
popa
jp
dec
push
adc
mov
sub
outs
int3
data16
mov
fild
ffreep
data16
icebp
mov
icebp
out
scas
mov
jle
jle
(bad)
(bad)
clc
push
outs
mov
cmps
fwait
xlat
sbb
cmp
inc
inc
fdiv
mov
mov
mov
add
rcl
call
inc
xchg
cmps
mov
out
jle
(bad)
lss
ins
jbe
ds
ins
ds
nop
imul
push
ret
ret
out
(bad)
jo
(bad)
pop
add
addps
cli
and
cmp
out
aam
arpl
dec
mul
loop
sub
in
loopne
xchg
(bad)
fcmovnu
sub
fwait
popf
test
cmps
xchg
es
adc
xor
sahf
mov
xor
cmp
xchg
jae
stos
outs
shl
push
sbb
push
sub
das
cmps
aas
aam
add
push
aad
xchg
jb
out
stos
icebp
mov
sub
fsubr
mov
ins
dec
pop
pop
push
test
xchg
cmp
pop
in
sbb
or
sub
push
jmp
mov
cmc
and
jb
nop
cmc
or
adc
frstor
xor
rcl
mov
aam
push
mov
ror
and
mov
mov
frndint
xor
icebp
and
pop
outs
cmp
ins
idiv
call
cwde
add
enter
ret
fdivr
mov
aas
sub
pushf
sbb
into
xchg
adc
xchg
(bad)
jne
pusha
shl
xchg
imul
sbb
xchg
push
loope
or
out
mov
int3
not
dec
xor
mov
xor
pop
sub
call
sbb
jne
or
shr
shl
inc
pop
shl
xchg
xchg
retf
outs
add
fdiv
mov
or
mov
jae
push
addr16
and
cmc
mov
adc
mov
inc
fadd
cmp
mov
outs
jns
jg
leave
add
adc
out
sar
scas
cmps
adc
sub
sub
test
add
in
xchg
push
stos
icebp
inc
mov
push
pop
ficomp
ds
cmp
outs
mov
mov
pop
push
in
outs
push
imul
push
push
adc
sbb
icebp
xchg
push
test
icebp
cmp
cld
sbb
out
cmp
xchg
push
arpl
cmp
test
sub
and
and
das
(bad)
setae
cmp
push
setne
out
loop
test
push
and
popf
mov
push
jle
mov
aam
sbb
cmp
jno
inc
popa
pop
jmp
ret
xor
jle
adc
pop
popf
and
cmc
or
lods
mov
and
or
inc
mov
jmp
popf
or
fidivr
shl
mov
mov
jp
(bad)
fidiv
or
(bad)
xchg
add
ret
in
xchg
jmp
jg
movs
inc
cmp
jo
push
jns
jmp
pop
mov
xchg
adc
aaa
lds
(bad)
cmp
retf
outs
stos
lods
out
ret
mov
pushf
aas
out
out
mov
stos
test
call
xchg
adc
or
(bad)
fcom
test
xchg
arpl
and
fadd
jb
add
mov
sbb
imul
iret
loop
adc
push
xor
dec
push
imul
movs
js
mov
adc
push
sbb
or
lea
sbb
aaa
jg
iret
pop
(bad)
pop
outs
jmp
rol
pop
daa
pop
add
cdq
jge
xor
fisubr
mov
push
loope
mov
pop
fmul
cmp
aas
or
pop
inc
add
push
inc
into
push
fnstsw
pop
es
xchg
or
pop
push
ins
mov
push
sub
xchg
cmp
or
xchg
inc
cdq
jae
adc
adc
iret
leave
mov
cmp
ins
sahf
int3
sbb
push
ret
fidivr
rol
push
dec
push
jno
cmp
adc
imul
popa
mov
pop
dec
mov
xor
xchg
or
push
pop
mov
push
inc
cmp
leave
adc
pop
enter
test
loope
dec
test
imul
sahf
xchg
push
in
push
cmp
sub
mov
xchg
iret
test
push
sub
stos
lahf
cmp
mov
imul
jne
mov
and
sub
push
ror
(bad)
xlat
push
(bad)
into
mov
or
stos
jmp
inc
test
iret
adc
xchg
lock
rol
inc
sub
or
fidiv
ret
cmp
and
rcr
sbb
adc
addr16
cmp
mov
addr16
sbb
push
and
shl
enter
or
stc
or
adc
lds
mov
fld
fld
ror
inc
(bad)
sub
outs
or
ret
ins
ins
dec
out
mov
xchg
mov
aam
push
push
shr
xchg
xor
in
mov
lock
sbb
sbb
gs
test
repnz
repnz
rol
scas
jnp
or
pop
cwde
in
in
mov
ins
pop
jmp
jbe
imul
fmul
cmp
inc
mov
int3
shl
retf
push
out
add
imul
ds
sub
dec
jmp
add
hlt
outs
mov
repnz
mov
mov
mov
sub
pop
ds
int
jae
aad
dec
imul
push
push
out
dec
stc
sbb
daa
pop
and
(bad)
dec
sbb
out
inc
ja
adc
ins
test
xchg
push
or
fs
ja
cmps
jge
sbb
fnstsw
(bad)
cmp
dec
and
adc
imul
push
mov
xchg
aam
xchg
bound
mov
lods
push
add
fist
leave
shl
cmps
rcl
mov
aam
rol
mov
movs
add
fsub
jmp
(bad)
cld
cmps
test
fisttp
cmp
fnsave
and
fiadd
jae
and
mov
inc
dec
sbb
push
adc
shr
and
test
cld
add
lea
sub
fbld
(bad)
cld
adc
cmp
push
cmps
shl
adc
sub
in
cwde
int
push
loop
out
jg
rcl
or
xchg
sub
push
xor
jecxz
retf
aam
mov
popf
movs
sub
sub
(bad)
mov
add
cmp
repnz
retf
jge
mov
shld
bnd
sahf
ins
lods
jmp
cmc
pop
cmp
mov
inc
es
cmp
test
aam
xchg
pop
pushf
dec
xchg
cmps
pusha
pop
ret
mov
xchg
or
push
jg
int
rcl
mov
std
lods
pop
bound
jg
push
pop
call
xor
mov
loop
dec
mov
pop
out
fcomp
jmp
push
test
test
(bad)
mov
sbb
leave
pop
fwait
rcl
nop
jnp
or
ds
push
pop
pop
call
mov
and
jecxz
add
and
into
cmp
mov
aas
mov
movs
sub
mov
lea
add
test
sbb
(bad)
(bad)
div
jae
pop
lods
mov
push
stos
std
cmp
(bad)
or
mov
movs
jle
mov
sub
mov
nop
fidivr
gs
mov
js
xchg
sbb
pushf
test
int3
and
hlt
(bad)
sub
xchg
fadd
scas
ja
xchg
sub
int
addr16
sub
mov
jecxz
and
push
xor
fadd
shr
outs
inc
cld
jnp
cmp
enter
cvtps2pi
push
int
jo
mov
out
xchg
add
repnz
fsubrp
or
out
movs
xchg
enter
cs
jns
mov
call
nop
mov
pushf
cmp
ja
mov
fucomip
outs
ins
div
(bad)
push
xchg
fdivr
sbb
jb
push
outs
pop
mov
sbb
ficomp
out
sbb
jmp
hlt
out
aam
push
or
int3
sbb
mov
dec
xor
data16
or
cmp
stc
adc
sub
push
xchg
dec
rcl
adc
ret
(bad)
fsub
scas
ins
xchg
fwait
adc
sub
xchg
jmp
mov
movs
dec
and
in
jns
pop
jl
or
mov
cwde
mov
mov
lahf
repz
div
jmp
pop
push
ss
sahf
fild
sahf
ficomp
out
and
clc
sub
jecxz
push
test
dec
adc
xlat
add
pop
jp
mov
mov
mov
mov
inc
icebp
pop
push
jp
in
adc
aaa
std
jge
stos
mov
mov
pop
outs
cs
ins
aaa
jmp
jmp
mov
push
sbb
jbe
pop
js
stos
neg
leave
mov
inc
xor
out
dec
jg
mov
mov
scas
pop
cli
movs
cmps
jbe
push
or
enter
fs
jb
ficomp
(bad)
adc
jb
mov
mov
push
daa
cmps
(bad)
mov
adc
out
mov
add
mul
in
popf
fimul
fiadd
rcl
(bad)
add
mov
mov
lods
mov
xlat
sbb
aam
xchg
and
and
imul
test
pushf
jp
(bad)
sbb
mov
stos
div
xchg
mov
es
scas
leave
inc
aad
push
ins
(bad)
cli
adc
rol
mov
and
je
das
out
and
fimul
out
push
cmps
movs
mov
call
fistp
pop
pop
outs
add
jbe
cmps
sbb
fist
repnz
inc
dec
in
mov
arpl
mov
xchg
jns
imul
ins
jge
jno
icebp
cmp
dec
jnp
cs
ss
xor
push
xchg
pop
push
ds
call
cmp
std
mov
inc
lea
sub
pushf
inc
(bad)
sbb
pop
sbb
ror
inc
adc
and
add
ret
mov
cli
mov
sbb
sti
repnz
sub
fwait
es
mov
and
push
mov
js
adc
xor
in
ror
xchg
sub
inc
inc
rol
jae
mov
mov
cmp
mov
ss
mov
icebp
and
aam
adc
imul
sbb
out
xchg
in
inc
fs
fidiv
sbb
sbb
and
inc
or
sbb
(bad)
fld
pop
jecxz
fdivr
jp
inc
scas
out
cmp
adc
repnz
or
call
push
xor
std
jo
pop
mov
mov
sbb
out
sar
ds
sub
dec
(bad)
add
es
loop
and
(bad)
fstp
addr16
xchg
(bad)
test
push
mov
aas
inc
push
gs
ins
stos
pop
cld
pushf
shr
pusha
stc
push
inc
cmps
cmp
fiadd
pop
aad
fimul
(bad)
loope
cli
loope
xchg
ror
push
js
mov
xchg
pop
ret
xor
clc
jecxz
mov
inc
pop
in
push
outs
ss
ds
sub
or
jle
and
out
push
js
in
enter
mov
push
push
fcmovnb
push
movs
jg
shr
nop
or
cvtpi2ps
(bad)
into
xchg
sbb
adc
imul
fmul
pop
jmp
cli
fistp
mov
or
jbe
out
jne
mov
cld
jmp
shl
dec
mov
addr16
retf
out
out
in
pop
(bad)
cmp
leave
inc
std
nop
jp
outs
push
outs
mov
ins
pop
fisub
das
cmps
xor
fs
xor
cwde
xlat
repnz
in
out
mov
jb
sbb
fwait
addr16
(bad)
cvtpd2ps
add
xor
nop
call
push
xchg
lods
push
xor
cmp
add
jne
scas
pop
inc
dec
fdiv
inc
push
push
dec
cmp
mov
movs
test
jb
inc
push
imul
cmc
das
das
cmp
(bad)
scas
sbb
dec
out
adc
push
sbb
mov
out
or
and
push
inc
jb
pop
mov
cdq
inc
imul
out
fwait
jl
out
addr16
and
call
adc
dec
push
cmp
ins
push
leave
pop
leave
popa
retf
pop
jb
push
int3
jne
repnz
(bad)
cwde
jge
ror
sahf
in
jmp
rcl
iret
inc
cmc
(bad)
add
retf
or
adc
xor
stos
push
push
sbb
movs
pop
pop
fwait
add
aaa
or
and
or
popa
es
sti
adc
inc
sahf
inc
enter
adc
ins
adc
sti
in
mov
sbb
sbb
and
xor
xor
stc
pop
inc
or
and
cwde
dec
jo
out
or
arpl
out
out
mov
addr16
adc
jne
mov
mov
xchg
jnp
cdq
sbb
xlat
scas
in
iret
ret
fstp
call
jecxz
add
mov
pop
mov
mov
xor
sub
push
add
stos
sahf
push
iret
test
add
and
call
lods
fstp
cmp
sbb
sbb
jle
sub
mov
fs
loop
cs
shr
mov
data16
into
cmp
stc
dec
div
pop
mov
and
xchg
aas
icebp
dec
rcl
push
rcl
outs
mov
or
loopne
jg
sbb
in
mov
(bad)
cli
clc
and
dec
js
hlt
push
sbb
popf
shl
rol
out
sbb
and
add
xchg
inc
mov
ins
mov
out
mov
cmp
int
int3
(bad)
loopne
pop
xchg
arpl
imul
xor
addr16
cwde
sub
je
xchg
ss
rol
push
popa
push
jmp
popa
push
test
xchg
fwait
loope
adc
mov
scas
add
dec
pushf
fdiv
stos
cdq
(bad)
pusha
push
ret
mov
cld
jne
repz
in
mov
mov
out
icebp
in
outs
sbb
sbb
xchg
sub
pushf
ins
cmp
or
rcl
lock
cmc
xor
add
sahf
stos
test
mov
call
es
(bad)
mov
retf
inc
add
xor
xor
sbb
push
pop
jl
jb
jae
shl
shl
leave
loop
or
and
cld
shr
icebp
fldcw
cmps
mov
aam
dec
fist
adc
les
pop
mov
aaa
mov
mov
mov
out
test
fsubrp
sbb
fld
retf
out
iret
mov
mov
adc
ja
(bad)
movs
call
jo
sub
push
xchg
aas
jae
push
fisub
dec
jns
xchg
outs
pop
in
xchg
xchg
dec
sbb
(bad)
pop
cmps
lea
and
out
dec
adc
das
xor
in
mov
es
adc
mov
sub
fcmovnb
sar
and
mov
cmps
adc
sub
or
loop
jbe
lods
inc
dec
fwait
movs
xor
mov
pop
pop
or
test
bound
pushf
mov
inc
movs
cmovne
dec
xor
jmp
aas
dec
and
repz
inc
rol
scas
cmp
out
mov
mov
sti
pop
mov
xor
pop
je
push
std
call
xchg
pop
or
sub
add
push
cmp
mov
fwait
inc
mov
sub
iret
adc
inc
ins
and
push
data16
cli
add
(bad)
out
pop
jge
pop
cmp
int3
xor
mov
ins
loopne
bound
add
adc
jb
adc
push
adc
(bad)
dec
test
daa
into
dec
adc
mov
shr
adc
ds
daa
pop
add
movs
xchg
push
mov
inc
shr
xchg
out
icebp
sbb
retf
cwde
pop
and
sub
mov
int3
mov
les
cdq
push
call
dec
cmp
mov
sbb
jg
mov
in
mov
std
es
or
cmp
pop
cwde
lods
gs
or
inc
icebp
stc
loope
xchg
xchg
cmps
sbb
adc
inc
and
jne
push
push
inc
add
ret
fld
push
add
std
cmp
sti
idiv
pop
cmp
xchg
xchg
or
dec
call
and
sbb
and
push
fbld
sar
push
bound
jmp
ret
imul
test
pop
fstp
es
cmp
dec
cwde
adc
xor
cmp
jg
adc
sbb
data16
sbb
add
lods
lea
shl
frstor
pushf
add
mov
mov
or
mov
mov
lea
js
push
rol
xchg
pusha
daa
stc
cmp
(bad)
rcl
sbb
scas
mov
adc
xchg
or
clc
sbb
jb
cli
mov
loop
fiadd
push
call
cmp
sub
xchg
add
or
ret
inc
sbb
cmp
pusha
es
in
adc
mov
add
in
xchg
aaa
pop
aam
pop
movs
pop
cs
jge
push
or
cli
or
adc
es
repz
mov
mov
xlat
xchg
and
mov
xchg
call
(bad)
icebp
stos
mov
es
lds
sti
jge
jecxz
xor
sub
xor
sbb
sub
mov
xchg
cmp
test
mov
cld
fmul
test
ss
popf
out
add
loopne
mov
ds
sub
repnz
cmp
or
mov
xchg
xor
adc
and
mov
cmp
call
inc
push
mov
in
hlt
push
mov
add
aas
ds
jb
xor
fild
mov
jne
xor
ins
add
mov
test
call
cwde
(bad)
bnd
mov
mov
hlt
push
jnp
mov
hlt
push
std
inc
test
sub
(bad)
and
jmp
hlt
aad
ins
loopne
out
ret
ds
ror
or
sti
sti
repnz
ret
scas
cdq
lods
mov
(bad)
pushf
stc
add
stc
in
inc
push
aaa
pop
sbb
leave
(bad)
push
adc
xor
push
inc
jb
rol
lods
xchg
mov
xor
mov
jnp
repz
dec
add
mov
fist
push
imul
adc
arpl
push
adc
fistp
in
into
out
in
mov
push
jmp
jp
cmps
add
pop
mov
cmp
gs
cmp
mov
inc
jmp
scas
jle
inc
aad
test
inc
or
imul
nop
xor
(bad)
out
or
adc
mov
inc
xor
xchg
mov
(bad)
mov
aas
xchg
sub
test
xor
mov
call
pop
mov
(bad)
stos
test
adc
push
mov
call
nop
enter
lds
xor
jp
dec
into
sahf
mov
adc
inc
and
fst
jp
and
inc
in
iret
test
and
dec
sar
inc
and
fldenv
xchg
(bad)
sahf
test
movs
cmps
mov
mov
in
aam
push
mov
neg
ins
pop
mov
pop
or
mov
inc
fstp
fisub
ss
dec
iret
ss
sbb
mov
and
pop
into
rol
neg
fcmove
add
jecxz
retf
mov
scas
adc
mov
out
sahf
leave
rcr
xor
pop
es
push
adc
retf
cmc
sub
pushf
movs
mov
push
test
mov
(bad)
int3
xchg
sub
cmc
sub
lds
std
jp
sbb
mov
ss
(bad)
ss
mov
stc
cmc
shl
inc
(bad)
lock
shl
ja
cdq
and
xchg
aad
imul
mov
cmps
mov
mov
dec
mov
xor
(bad)
xchg
mov
imul
add
les
push
rcl
mov
fdiv
daa
imul
xor
sbb
imul
mov
dec
inc
xchg
xchg
inc
mov
retf
fwait
jbe
pop
cmps
cwde
rcr
cmp
push
pusha
push
push
ror
cmps
or
xor
xor
ss
sbb
adc
dec
(bad)
call
fwait
push
dec
fdiv
retf
pop
int
xor
movs
xchg
call
test
cli
jo
leave
jne
lds
inc
movs
sub
pop
test
arpl
jl
xchg
movs
cwde
sbb
mov
push
sar
sub
mov
nop
lock
xchg
pop
xlat
cmp
jae
enter
or
mov
dec
cmp
into
aam
sbb
shr
retf
cmp
(bad)
lea
xchg
data16
fistp
aad
adc
xor
mov
mov
jge
jmp
mov
jne
mov
in
sbb
dec
jno
movs
cmp
mov
pop
(bad)
fld
(bad)
sub
jmp
sti
mov
popa
or
cwde
mov
out
inc
push
cmp
retf
or
div
mov
in
lea
sub
(bad)
cwde
pushf
xor
call
mov
adc
dec
call
icebp
cmp
stc
dec
mov
jns
pop
stc
mov
(bad)
(bad)
dec
cdq
in
push
dec
mov
(bad)
ror
icebp
ja
sbb
jno
test
imul
enter
inc
jge
mov
loope
xchg
sub
bnd
push
out
retf
cmc
inc
and
stc
mov
add
mov
lods
inc
(bad)
push
loopne
mov
mov
(bad)
int
sub
adc
pop
push
loop
jmp
dec
stc
mov
adc
push
sbb
mov
add
xor
retf
movs
xchg
cs
sub
cli
cmp
shr
(bad)
jmp
mov
(bad)
fwait
mov
sbb
imul
mov
adc
and
(bad)
xchg
or
add
jmp
mov
repz
xor
fwait
leave
test
mov
cmp
xor
popf
xchg
or
xor
test
cmp
jl
xchg
dec
and
xor
scas
call
add
cs
aad
jo
hlt
(bad)
bnd
aas
inc
stos
ds
fsubr
mov
rcr
cmp
cmps
mov
push
test
pop
cmp
sbb
sub
cmovne
sub
mov
cmp
leave
int
adc
inc
xchg
add
sub
test
bound
out
imul
outs
adc
ins
and
sbb
mov
nop
mov
out
sub
dec
dec
and
jae
prefetch
fidiv
xor
shl
(bad)
out
lea
mov
enter
and
int
jmp
popa
cmp
jmp
jge
outs
mov
scas
shl
pop
test
popa
pop
inc
stos
cwde
cmp
outs
push
xor
dec
mov
ss
cmp
adc
rcr
icebp
jne
cmp
dec
add
in
xor
popf
mov
inc
adc
lock
push
bound
iret
ror
lods
cmp
(bad)
loop
shl
push
jmp
aas
movs
mov
mov
jg
mov
mov
aam
xchg
jecxz
pop
pop
sub
add
dec
pushf
(bad)
mov
xor
(bad)
pop
inc
sahf
(bad)
popa
lods
jno
icebp
mov
fld
call
fsubr
test
jecxz
js
dec
cwde
xor
push
into
adc
imul
rol
fst
push
fisubr
mov
xchg
or
jbe
pop
lods
call
div
cmc
shl
imul
(bad)
push
and
mov
test
sub
mov
test
inc
daa
inc
ret
pusha
push
inc
jmp
pop
sti
adc
adc
cmp
jmp
and
ss
(bad)
jmp
je
inc
das
std
add
(bad)
fs
fwait
mov
daa
or
and
sub
cmp
pop
mov
ins
inc
mov
cmc
and
xor
stos
jecxz
mov
hlt
pusha
mov
test
xor
loope
int3
es
mov
fisubr
dec
scas
and
mov
pushf
xchg
(bad)
rcl
shl
retf
jnp
dec
lds
push
sar
lock
dec
movs
in
mov
jmp
test
mov
pop
mov
lods
jbe
ja
outs
sbb
jecxz
daa
or
popa
jbe
mov
cmps
pop
xor
(bad)
sub
mov
and
push
mov
pop
push
xchg
frstor
jmp
cmps
inc
inc
pop
jno
clc
(bad)
fcomp
(bad)
ficomp
stos
je
push
rcr
jecxz
ror
out
leave
ss
adc
stc
loope
test
inc
mov
mov
sub
xor
mov
callw
mov
fcmovne
mov
mov
call
adc
cmp
mov
inc
ss
(bad)
es
cwde
out
jnp
stos
sti
push
cli
and
or
fmul
cs
xor
inc
pop
fs
cmp
fst
lods
out
loopne
repnz
stc
scas
icebp
xchg
fdivr
push
jnp
cmp
mov
lea
loope
(bad)
stos
mov
sahf
call
stos
test
or
shl
vpsubq
mov
or
test
shl
inc
mov
lock
aam
mov
ins
scas
call
mov
retf
adc
sub
sub
lds
fidivr
dec
jno
div
test
cmp
int
or
fdivr
ins
out
inc
or
ss
adc
mov
and
mov
int
xchg
cmp
addr16
jbe
sti
inc
cmovbe
lods
jmp
dec
mov
test
inc
das
jne
mov
jg
cmc
out
fisttp
fistp
imul
push
cmp
pop
add
add
and
das
mov
xchg
lock
nop
fidiv
mov
mov
inc
jmp
pop
popf
sbb
mov
and
mov
sbb
imul
hlt
loopne
mov
(bad)
data16
out
inc
xchg
out
mov
cwde
jo
mov
add
popfw
mov
jnp
adc
fild
cmc
shr
into
mov
lea
push
mov
test
es
sbb
mov
cmp
scas
jne
clc
lods
lahf
test
inc
repz
out
inc
sub
mul
fstp
lock
std
out
add
fistp
daa
aas
jo
mov
inc
sub
add
out
int3
rol
ds
outs
inc
jae
movs
(bad)
fcomip
cmp
jge
push
pop
mov
mov
jmp
retf
fmulp
enter
pop
popa
shl
push
out
dec
fld
inc
cwde
bound
dec
add
dec
into
sbb
mov
push
inc
pushf
inc
sbb
stos
jne
ds
sbb
bound
loopne
jmp
jb
sub
popa
mov
push
sti
or
iret
call
dec
ds
jbe
cmps
rol
push
bound
or
mov
add
inc
(bad)
xor
jmp
icebp
mov
rcl
jnp
adc
and
arpl
leave
iret
add
loope
mov
jnp
test
mov
aam
jge
mov
or
pxor
push
call
mov
inc
sahf
pusha
pop
jmp
das
mov
call
xchg
daa
das
jmp
out
test
scas
lahf
inc
inc
(bad)
push
pop
pop
jno
shl
int3
xchg
out
test
sub
test
pop
es
pop
mov
(bad)
push
and
jecxz
mov
cdq
ret
cmp
mov
push
mov
cmc
xchg
cwde
pop
das
pop
out
mov
loopne
dec
mov
xchg
and
jecxz
cmp
add
push
bswap
pop
jne
pop
ret
les
cs
sub
and
xor
js
inc
mov
int
arpl
mov
inc
ss
mov
aad
outs
rol
mov
rcl
in
or
mov
mov
jo
pop
mov
retf
jno
enter
adc
dec
enter
adc
in
jp
call
mov
shr
add
out
cs
adc
addr16
inc
pop
sub
ja
ret
pusha
mov
retf
lds
mov
jecxz
int3
mov
iret
xor
and
add
push
mov
das
jl
add
stos
loope
mov
stos
sub
loopne
sbb
sub
jecxz
push
cmc
ror
dec
pop
enter
(bad)
inc
pop
pop
add
mov
cdq
idiv
xor
(bad)
pop
push
out
scas
aam
adc
xor
movs
outs
outs
scas
enter
dec
jmp
out
push
add
rol
in
dec
cmp
in
inc
test
pop
sub
jb
rol
pop
mov
inc
mov
xchg
or
xchg
cs
add
sub
test
test
stos
in
jae
aaa
pop
push
push
test
push
adc
add
out
aaa
mov
push
pop
stos
cmp
in
jb
jb
jb
cmp
mov
popf
inc
push
sub
cs
push
jg
jmp
lock
inc
repnz
inc
das
jl
imul
mov
mov
pop
dec
sub
pop
and
sub
add
or
shl
xchg
js
pop
outs
scas
repz
or
and
fdiv
inc
pop
push
xor
mov
xlat
fidivr
shr
inc
jmp
jl
loope
nop
pop
ds
cmp
and
xor
cli
xor
pop
into
mov
loopne
je
shl
jecxz
es
fild
out
push
mov
scas
or
fldenv
jmp
cmps
push
mov
cmc
loope
push
cs
pop
mov
mov
xor
ins
or
mov
add
jl
sub
sahf
adc
pop
sub
aaa
and
adc
mov
dec
repz
add
mov
cmp
test
mov
mov
dec
mov
retf
bound
psrad
sbb
call
jge
scas
mov
pop
imul
stos
js
call
mov
xchg
sub
adc
ja
xor
mov
inc
push
adc
pop
cmps
arpl
addr16
dec
add
adc
adc
imul
xchg
std
scas
jo
test
outs
xor
(bad)
dec
jnp
cld
mov
mov
push
mov
aaa
pop
das
mov
repz
ret
mov
adc
shl
outs
xchg
pop
add
ror
pushf
add
aad
test
out
das
fwait
fwait
add
cmps
pop
in
jmp
cld
repnz
test
enter
cmp
pop
cwde
inc
arpl
pop
dec
cmp
xor
out
ror
inc
cmp
pop
pop
fwait
push
or
(bad)
sbb
xchg
jecxz
sbb
std
cmp
int3
ja
pop
adc
mov
pop
pop
dec
(bad)
repnz
cmp
movs
push
pop
jmp
hlt
jmp
cmp
scas
xchg
stc
pop
xor
int
sub
mov
ins
xor
inc
movq
jne
pop
mov
jge
loop
into
sbb
aad
jmp
fadd
jg
fs
adc
and
hlt
mov
mov
(bad)
and
mov
jl
and
dec
mov
push
imul
outs
push
rcr
jmp
sub
push
xor
movs
mov
mov
pop
inc
dec
scas
lods
jmp
inc
pop
push
das
cmps
cli
fiadd
or
int
popa
or
pop
popf
std
(bad)
call
loop
inc
in
out
jns
mov
sbb
sub
mov
fs
adc
mov
push
jl
ja
xor
mov
xor
add
or
or
ins
xlat
out
inc
mov
push
xchg
jnp
aas
jne
xchg
sub
adc
sub
imul
jecxz
into
xor
push
mov
mov
pusha
(bad)
scas
mov
outs
sti
and
mov
mov
stc
xchg
or
xor
scas
(bad)
movs
push
scas
mov
ins
and
call
aad
cwde
fcomp
pop
cmps
sub
xchg
enter
imul
js
mov
lock
pop
dec
jg
and
jge
mov
mov
arpl
test
cmps
in
push
adc
hlt
mov
pop
out
push
mul
mov
(bad)
scas
jae
jne
push
pushf
cmc
repz
imul
mov
fisttp
jbe
ins
jmp
int
in
sub
pop
cmc
out
add
add
mov
xchg
or
mov
dec
aad
jl
fs
mov
ja
lea
push
jecxz
repz
add
aaa
mov
pop
test
ins
(bad)
mov
imul
jl
in
push
gs
jmp
push
stos
lds
jae
push
clc
ror
sub
or
xor
xor
xor
sub
mov
pop
test
pusha
mov
inc
sbb
add
mov
sbb
inc
xor
inc
movs
call
iret
ins
imul
adc
cmp
sahf
push
lock
in
cwde
aam
jmp
adc
mov
test
(bad)
movs
pop
add
in
xor
jge
xchg
inc
fcomp
sub
popa
daa
ret
pop
push
xlat
inc
mov
push
iret
cs
dec
push
ret
push
cmc
ror
cmp
call
xchg
ror
mov
jmp
stos
inc
js
or
shl
mov
clc
inc
push
xor
repnz
dec
push
cmp
call
loope
repz
addr16
es
mov
xchg
cli
pushf
jns
mov
mov
mul
retf
dec
cmp
sbb
ret
scas
test
gs
dec
je
dec
test
mov
jmp
cmps
jmp
test
mov
(bad)
mov
mov
dec
push
test
cmps
fs
and
jnp
mov
arpl
sbb
rol
xor
jecxz
adc
sbb
adc
cld
add
test
inc
fcmovne
cs
xchg
jbe
gs
xor
dec
js
(bad)
pop
jb
sub
pop
movs
cmp
inc
and
cmc
pop
mov
aas
mov
adc
call
jl
jg
mov
clc
or
push
mov
loopne
hlt
mov
xchg
int
addr16
lea
data16
jg
mov
push
out
add
cmps
jae
enter
dec
and
ficom
not
shl
arpl
and
push
inc
fstp
retf
lods
aas
lock
vandnpd
sub
pop
ja
sub
(bad)
ficom
sbb
sbb
test
outs
push
daa
cmps
sbb
xchg
xor
cmp
pop
std
pop
and
or
(bad)
out
fadd
clc
lea
add
(bad)
dec
and
outs
mov
mov
(bad)
das
mov
xchg
retf
in
jo
add
(bad)
xchg
mov
retf
or
imul
loop
mov
add
je
stos
cmp
pop
lock
aam
or
inc
hlt
dec
mov
(bad)
das
mov
daa
jbe
jl
mov
push
pop
shr
xchg
int3
popa
jmp
out
push
call
cmp
lods
loope
mov
push
mov
inc
fwait
sub
into
mov
movs
popa
mov
je
test
inc
out
test
xchg
cmps
xchg
es
cwde
sbb
dec
xor
scas
xchg
xchg
mov
cli
or
inc
dec
mov
jge
xor
call
push
aam
mov
mov
sub
in
icebp
leave
sahf
push
shl
icebp
fist
pushf
lea
in
lds
push
loopne
(bad)
shl
test
hlt
enter
sbb
out
cmp
mov
inc
loope
lock
inc
or
out
inc
adc
arpl
(bad)
out
pop
cmp
cwde
jl
pop
out
fsubr
jl
loopne
gs
iret
xor
xchg
fld
mov
in
or
mov
adc
sbb
and
into
dec
or
sub
(bad)
call
mov
add
popa
movs
mov
xor
aas
inc
aad
cmps
ret
jle
pop
pop
push
dec
pop
imul
lea
mov
shr
add
repnz
xor
pushf
pop
mov
in
adc
xor
fstp
sub
sbb
neg
std
pop
push
scas
pusha
into
push
sub
hlt
and
addr16
js
arpl
cmp
xor
retf
jmp
retf
mov
pop
cmps
xchg
mov
xor
lds
adc
fwait
movs
outs
fwait
mov
add
jns
pop
cmps
or
mov
mov
ja
fisttp
leave
mov
inc
loope
sti
xor
inc
test
inc
(bad)
mov
js
pop
nop
stos
sub
push
out
loope
cld
xchg
push
in
aaa
xor
test
xchg
imul
div
cli
je
and
inc
cld
das
fwait
xor
call
imul
cmps
inc
ret
call
nop
lahf
call
jmp
popa
pop
dec
sbb
les
out
push
xchg
and
ins
test
sbb
in
pusha
dec
aad
pop
jo
or
sbb
sbb
jge
lods
inc
dec
lods
and
pop
inc
sar
sbb
aas
int
cdq
test
fist
nop
or
inc
mov
fs
fwait
or
or
xor
or
xor
and
push
pop
(bad)
test
mov
lahf
cs
stos
and
jl
dec
std
jl
mov
push
fs
cmp
clc
push
les
and
xlat
outs
add
cld
repz
retf
xchg
sbb
fs
or
cli
das
push
shr
push
(bad)
data16
mov
or
mov
imul
inc
mov
add
call
jbe
push
inc
mov
xchg
adc
pop
and
dec
xchg
ret
scas
mov
push
cdq
daa
xchg
cmp
call
and
jge
popf
stc
sbb
test
mov
ror
mov
lock
jne
mov
repz
xlat
push
mov
and
je
jl
adc
rcl
jp
aaa
ins
(bad)
push
adc
push
and
iret
imul
mov
xchg
mov
push
adc
sbb
pop
adc
sbb
push
or
es
push
push
daa
mov
(bad)
rcl
aaa
pop
adc
out
scas
push
xchg
stos
push
sub
xchg
jle
and
push
xchg
test
cmps
enter
sub
call
mov
mov
inc
mov
jnp
retf
movs
push
jae
or
cli
hlt
xchg
and
pop
or
clc
xchg
or
dec
lods
lods
aad
dec
mov
cmp
pop
mov
add
daa
(bad)
jbe
cmc
jmp
xchg
call
rol
or
xor
mov
(bad)
sahf
jbe
aam
fsubrp
sahf
mov
xchg
or
mov
aaa
fwait
clc
sbb
mov
pop
pusha
add
mov
ret
or
add
stos
push
jbe
or
inc
loop
cwde
lock
(bad)
stos
inc
and
mov
jg
pusha
aas
(bad)
(bad)
fisub
cmp
popf
hlt
cwde
jne
xchg
jnp
out
(bad)
jl
add
leave
push
mov
cmp
jmp
fdivr
lahf
ret
dec
sbb
mov
(bad)
div
in
xchg
sub
fstp
stos
dec
jae
mov
fstp
dec
mov
stos
dec
pop
pop
loope
fmul
cmp
dec
jae
and
int
iretw
inc
std
cmps
xor
cwde
test
lods
sar
cli
dec
out
mov
rcl
inc
(bad)
mov
xchg
inc
sti
loop
jae
aas
fwait
adc
fsub
mov
icebp
inc
imul
add
sub
xchg
and
xchg
pop
or
push
sahf
dec
shl
loopne
jno
stc
out
lock
add
or
(bad)
mov
pusha
mov
cli
push
shr
jno
push
aad
pop
test
and
sbb
xor
xchg
cmp
and
pop
sub
mov
(bad)
mov
test
fcmovu
add
ret
loopne
mov
push
xlat
sub
enter
xor
sub
mov
scas
inc
pop
sbb
dec
cmp
sbb
lods
mov
dec
call
dec
sbb
add
add
push
mov
add
inc
and
retf
gs
cmp
cdq
sbb
fidiv
xchg
sbb
mov
bound
pop
xchg
sbb
mov
(bad)
aad
sub
out
in
outs
retf
test
and
lock
jl
mov
xlat
push
mov
shr
out
mov
xchg
cmp
sbb
sbb
sub
sub
inc
popf
nop
and
lock
add
inc
sub
fnsave
retf
out
(bad)
push
bound
call
lea
and
popf
xchg
(bad)
test
push
fcom
scas
pusha
mov
add
sub
or
dec
push
test
lods
lods
rcl
int3
in
cmp
mov
es
fmul
mov
and
dec
add
ins
test
cmp
mov
mov
fdiv
gs
or
mov
stos
imul
and
adc
pop
ja
arpl
xor
dec
into
jno
jle
sub
sub
mov
pop
loopne
imul
pop
ret
xchg
repz
bound
jl
popf
cmp
inc
ret
out
pop
jmp
icebp
cmc
xor
mov
fistp
adc
cmc
mov
(bad)
push
jmp
sbb
xchg
and
and
push
cs
addr16
xor
jb
xchg
iret
and
rcr
mov
jnp
push
sub
sbb
pop
mov
mov
sbb
fisttp
lds
jnp
push
push
push
or
pop
and
fnstsw
fisub
add
mov
(bad)
xchg
int
mov
dec
or
dec
or
sub
arpl
aam
in
mov
xchg
inc
aad
lods
daa
xchg
addr16
ds
pusha
jne
lock
or
xor
daa
adc
out
and
popf
push
lods
mov
sbb
jb
repnz
aaa
gs
dec
jp
ret
lock
in
popf
ret
mov
rol
mov
repz
sub
dec
sbb
pop
xchg
push
and
(bad)
add
lods
mov
push
adc
mov
fisttp
movs
mov
sub
pop
imul
xor
mov
(bad)
fdivrp
scas
ret
pusha
lods
mov
ins
pop
sbb
jmp
retf
pop
sbb
add
fmul
popa
mov
stos
pop
int
cmps
test
or
mul
fcomp
push
and
pusha
jmp
add
or
pop
es
mov
and
xchg
mov
or
cmp
jbe
sub
fpatan
pusha
sub
ins
cmp
push
ins
call
adc
stc
pop
ret
scas
mov
mov
(bad)
fcmovne
and
outs
retf
jmp
add
imul
cmps
jae
in
ficom
pop
ror
xchg
pop
and
lahf
cwde
sti
push
imul
mov
fsub
inc
jbe
jb
jae
mul
call
xlat
ins
sbb
into
adc
inc
in
out
aaa
jbe
cmps
adc
adc
jmp
mov
pop
and
(bad)
sub
jmp
into
jle
jl
dec
adc
bound
fdiv
ret
(bad)
cmove
stos
ror
retf
xlat
fisubr
xor
adc
and
sahf
cmp
adc
mov
test
mov
inc
int
or
mov
(bad)
xor
cmp
ins
minps
lods
xchg
lds
int
pop
and
cmp
or
call
pop
(bad)
retf
adc
je
inc
dec
aam
jp
xchg
(bad)
jnp
scas
push
loopne
mov
mov
(bad)
arpl
mov
pushf
(bad)
jmp
into
mov
push
mov
repnz
push
cmp
pop
ss
enter
in
push
xchg
jle
xchg
adc
xchg
test
pushf
aad
arpl
adc
jae
push
dec
retf
push
dec
addr16
es
enter
mov
xor
adc
mov
sbb
bswap
mov
add
pop
adc
cmp
sub
jg
sub
mov
mov
in
cmp
lds
push
repnz
push
adc
jno
add
jle
adc
and
popf
(bad)
mov
sti
jb
push
iret
bnd
fild
mov
inc
cwde
adc
cmp
test
js
jmp
sar
lods
lods
fild
jns
xor
outs
adc
cmp
cli
ja
push
stc
(bad)
lds
enter
push
imul
(bad)
loopne
xchg
clc
dec
or
jl
push
adc
push
inc
pop
xchg
mov
ret
scas
sub
dec
call
or
iret
sub
or
pop
in
inc
jp
mov
inc
out
inc
mov
mov
sbb
(bad)
imul
mov
pop
sub
cs
out
inc
es
mov
and
xchg
pop
adc
dec
jg
mov
scas
ins
and
enter
icebp
mov
aaa
xchg
mov
dec
std
mov
into
test
push
push
push
repnz
neg
add
cli
mov
or
mov
bound
adc
in
sub
sbb
jecxz
dec
mov
add
les
call
and
mov
dec
mov
push
(bad)
into
ins
cvtpi2ps
out
inc
add
aam
lods
test
mov
pop
inc
loope
jle
or
xor
adc
cmp
ins
loop
dec
ds
cs
mov
push
inc
icebp
jg
fidivr
and
push
sti
aas
lock
xchg
cli
xor
movs
jg
push
(bad)
mov
push
mov
push
xchg
adc
jbe
popf
jnp
inc
mov
popa
lds
sub
mov
ret
adc
loope
add
retf
add
xor
inc
nop
lea
aas
mov
inc
xor
ins
mov
lahf
into
xchg
jecxz
cmp
mov
sub
push
icebp
(bad)
rcr
pushf
shl
test
dec
inc
jns
cmp
scas
in
inc
loop
mov
sbb
stos
adc
test
jl
lods
jns
pop
cmp
and
mov
je
ss
iret
jne
retf
push
ins
fisubr
push
dec
push
repnz
and
jo
scas
xor
(bad)
out
or
cwde
xchg
adc
mov
jns
mov
inc
fdivp
jbe
mov
popa
jo
inc
adc
jne
(bad)
xchg
das
dec
adc
push
int3
pop
dec
pop
inc
jo
mov
data16
mov
out
arpl
stc
mov
xchg
retf
add
pop
jnp
push
mov
push
jae
mov
std
jno
fst
cmp
mov
jns
aam
push
xor
mov
data16
jecxz
lods
jg
stos
inc
and
iret
dec
int
fnstsw
(bad)
in
pop
pop
sbb
lock
in
and
mov
scas
mov
push
push
and
mov
sub
pop
sbb
adc
ss
mov
cmp
cdq
(bad)
sub
mov
les
out
mov
pop
pop
pop
sub
adc
adc
jg
std
inc
or
lock
repz
sbb
(bad)
call
arpl
add
rcr
and
ss
jo
add
mov
add
or
es
jb
cmp
lea
(bad)
(bad)
loop
adc
xchg
jmp
mov
or
aas
add
xor
out
xchg
mov
and
push
pop
adc
(bad)
xchg
je
jbe
rol
cmps
pop
jne
dec
loope
sar
rol
retf
out
gs
dec
add
inc
push
inc
popa
cmp
cmp
add
sub
stc
fwait
movzx
jg
add
cmp
mov
loopne
or
pop
sbb
or
sub
add
xor
ja
gs
retf
sub
ss
scas
pop
or
out
psubusb
test
or
enter
jno
and
cmp
scas
xor
xchg
sub
rcr
inc
test
jne
or
cmps
inc
add
jp
movs
mov
push
repz
xor
xor
in
dec
or
push
xchg
les
mov
mov
imul
sar
mov
out
je
pusha
retf
mov
movs
out
aaa
repz
push
es
(bad)
out
dec
cmc
jns
inc
pop
out
(bad)
mov
pop
jge
fsubrp
or
cli
mov
sbb
jns
jmp
fbld
jecxz
jnp
clc
lods
mov
mov
ror
pop
call
neg
add
icebp
(bad)
dec
inc
in
inc
aad
es
xlat
cmps
sub
cmp
test
xchg
jns
sub
mov
loope
dec
sti
dec
rcr
ins
pusha
pop
retf
mov
jg
gs
lock
aaa
shl
cld
cmp
retf
or
inc
das
fisttp
(bad)
or
jmp
mov
rcr
xchg
adc
or
mov
std
fwait
sbb
enter
sar
pop
lods
inc
adc
aad
bound
inc
(bad)
mov
push
test
(bad)
dec
aad
mov
xchg
or
stos
fidiv
leave
ins
and
ds
xor
pusha
das
jp
cmp
iret
mov
ret
(bad)
mov
add
iret
mov
dec
xchg
and
push
mov
icebp
loope
xor
push
push
mov
fdivr
aad
ins
cli
dec
scas
les
jp
rcl
mov
pop
mov
pop
push
or
pop
or
test
call
fwait
stc
dec
add
aam
cmp
rol
jecxz
cmc
adc
adc
popf
dec
mov
loope
jmp
push
mov
loopne
pushf
mul
mov
jmp
or
xchg
int
and
xlat
push
enter
dec
and
fstp
add
out
dec
fstp
jae
xchg
mov
inc
daa
dec
cmp
inc
ret
icebp
or
mov
mov
adc
ror
cwd
dec
inc
mov
mov
mov
inc
adc
data16
les
inc
sbb
or
ret
inc
(bad)
out
add
fnsave
cmc
jmp
and
out
fcompp
mov
(bad)
loopne
fisub
enter
sub
(bad)
int
pop
push
retf
cld
pusha
cdq
rcr
cmp
daa
sbb
mov
push
pop
and
or
shl
cmc
fsub
pop
xchg
fild
call
imul
inc
pop
or
retf
scas
int3
enter
add
xchg
std
sti
pop
fdivr
lods
push
adc
fabs
xchg
lahf
mov
push
dec
jbe
lds
ds
outs
push
pusha
pop
js
pop
adc
dec
sbb
frstor
or
push
sub
pop
pop
cdq
test
mov
pushf
add
add
arpl
mov
pop
cmp
movs
(bad)
mov
in
push
xchg
clc
out
add
dec
ret
lods
sbb
fs
in
xchg
and
(bad)
aas
inc
gs
(bad)
loope
mov
mov
cwde
das
push
pop
xor
pop
imul
jae
xchg
sub
lock
loope
outs
xor
loope
dec
retf
pop
test
retf
or
pop
rcr
test
sub
add
cwde
mov
cmp
fld
bnd
(bad)
inc
and
xchg
imul
jae
aam
mov
movs
cs
mov
mov
test
cdq
push
test
xor
mov
and
jecxz
dec
pop
xor
dec
mov
(bad)
push
mov
mov
fnstenv
inc
add
fwait
cs
rcr
aaa
std
out
cmp
add
push
out
or
adc
jmp
out
sub
sti
retf
cmp
dec
lock
adc
not
mov
mov
xor
je
and
cli
push
out
lahf
test
mov
push
and
mov
mov
xchg
xor
fisttp
adc
jnp
cmc
test
inc
push
xor
scas
je
jg
mov
and
clc
mov
cmc
and
sub
es
popa
mov
imul
push
inc
fucomp
pop
and
xchg
mov
sbb
fild
pop
xor
aad
xchg
mov
mov
mov
aad
and
or
(bad)
rcl
ins
xlat
(bad)
fadd
ror
mov
jae
pop
inc
in
movs
xor
mov
push
add
enter
or
push
cmp
mov
pusha
gs
push
ror
xchg
ss
add
sti
sbb
fmul
mov
and
cmp
inc
cmps
mov
arpl
data16
data16
(bad)
fiadd
test
sub
dec
inc
dec
test
xchg
pop
mov
ins
gs
lea
pusha
mov
fsubr
push
mov
cmp
daa
out
mov
mov
sub
or
pop
in
dec
jae
rcr
cmp
and
and
nop
pop
cmp
repz
out
(bad)
xchg
or
out
push
fistp
jmp
sub
test
push
cmp
fimul
loopne
mov
ins
add
scas
mov
mov
cs
xor
mov
lds
push
jo
sbb
xor
cmp
sbb
jge
inc
popf
jle
inc
shr
lea
fstp
stc
mov
push
jp
(bad)
cmp
xor
add
sub
push
ds
cdq
es
jne
or
and
and
ret
into
or
and
fdiv
lahf
aas
in
lock
mov
dec
add
pop
inc
test
dec
add
mov
fucomi
scas
shl
pop
leave
adc
cmp
cmp
cmp
xchg
adc
shl
inc
mov
pop
push
popw
push
pop
pusha
add
(bad)
push
inc
mov
mov
loop
xchg
mov
sbb
leave
scas
daa
or
mov
xchg
(bad)
inc
push
lds
inc
push
dec
shl
int
pop
jecxz
std
lahf
jb
int3
sbb
cs
test
mov
xchg
mov
and
mov
iret
test
push
mov
out
dec
sub
ja
sbb
call
cmp
jg
jns
or
lea
sti
jbe
movs
and
gs
nop
pop
ficomp
mov
dec
(bad)
jb
and
mov
mov
nop
sbb
sub
je
cmp
cs
xchg
xchg
(bad)
sbb
fiadd
(bad)
enter
xchg
repz
adc
adc
ror
and
movs
inc
add
push
xor
inc
adc
daa
adc
jecxz
imul
pop
in
mov
sbb
and
jl
add
push
dec
int3
push
clc
loopne
mov
int
and
lods
mov
aas
fisubr
mov
call
push
clc
inc
in
push
out
lea
xor
jae
sti
mov
xchg
(bad)
mov
sub
dec
test
vminpd
mov
or
adc
jp
or
mov
push
pop
popa
ror
mov
mov
cmps
test
xchg
pop
cwde
fnstcw
adc
out
and
pop
jg
jg
lds
jg
lahf
cs
call
mov
push
fwait
xchg
dec
sub
sub
sub
mov
retf
ss
mov
pop
or
mov
mov
aaa
es
retf
mov
cmps
mov
arpl
ins
pop
or
cli
adc
jbe
jnp
or
in
sbb
(bad)
fld
rol
adc
xlat
nop
cmps
adc
mov
xchg
outs
test
les
fdivr
xor
sbb
jmp
xchg
push
push
dec
xor
fbld
(bad)
pop
dec
inc
retf
mov
mov
sbb
rcl
popa
cmp
ins
mov
dec
push
sbb
fs
jecxz
mov
adc
ins
scas
mov
sbb
dec
mov
add
lock
or
add
jbe
add
add
arpl
out
ins
fadd
mov
and
out
fidivr
push
jae
inc
push
sbb
movs
nop
scas
push
es
sbb
sub
pop
mov
imul
sbb
inc
and
sbb
fldcw
out
or
and
imul
or
call
imul
setg
jecxz
sub
lea
sub
test
xor
or
push
sub
repnz
int
dec
pusha
rcl
push
(bad)
stc
and
jecxz
or
add
stos
scas
sete
add
pushf
inc
aad
(bad)
lods
(bad)
cli
pop
(bad)
retf
ins
ins
cmp
or
adc
sbb
imul
inc
cmps
push
cli
pushf
ins
stc
add
add
lock
fdiv
lods
bound
xchg
loopne
sbb
clc
cmps
test
dec
adc
push
push
xchg
sub
jne
inc
jmp
add
or
ret
ins
sbb
adc
push
jg
mov
cdq
out
fs
xchg
xor
mov
int
int
cmp
out
data16
sbb
inc
xor
pop
push
sahf
call
sbb
cmp
mov
std
lods
iret
inc
test
mov
jae
or
pusha
lock
daa
aam
xchg
jecxz
adc
push
push
fbstp
mov
retf
push
jle
mov
movs
dec
sbb
push
push
(bad)
pop
call
jns
out
shr
xchg
mov
std
mov
dec
mov
(bad)
test
xor
test
add
cmp
jecxz
jmp
scas
jne
imul
xor
cmc
data16
add
mov
cs
pop
xchg
or
jmp
das
xchg
cmp
and
pop
cmc
fnstenv
mov
and
in
mov
scas
push
push
loope
xlat
dec
cli
lahf
frstor
mov
pop
cld
mov
dec
jno
cmc
sbb
mov
stos
shl
pop
jmp
mov
push
(bad)
sti
pop
jmp
sub
dec
pop
in
jo
cmp
sbb
xchg
stc
ret
xchg
leave
xchg
dec
jmp
scas
mov
xchg
call
jne
dec
cmp
or
jecxz
pop
and
into
and
mov
xchg
fcmove
movs
xor
push
aas
pop
or
setge
sub
mov
imul
(bad)
xchg
mov
jne
sub
sub
push
xchg
push
pushf
sub
out
inc
addr16
fisttp
(bad)
in
icebp
adc
cdq
cdq
adc
leave
cmc
mov
bsf
pop
push
xor
add
xchg
cdq
test
clc
xchg
scas
scas
xchg
lock
dec
mov
aas
sbb
aaa
aad
jl
movs
retf
fst
leave
idiv
(bad)
mov
jb
fst
mov
iret
call
push
sbb
clc
mov
(bad)
pop
cmp
cmp
or
lock
and
lahf
xor
jge
ja
rol
cmp
neg
ins
ffree
push
xchg
pop
pop
repz
outs
push
std
and
xchg
mov
arpl
jle
shl
dec
lods
inc
test
xchg
cli
ss
retf
and
xlat
mov
fst
xchg
sahf
sub
out
fisubr
adc
sar
pop
push
mov
dec
push
pop
ins
mov
add
shl
(bad)
ficomp
cmps
add
lahf
outs
repz
nop
and
(bad)
jbe
sbb
pcmpgtd
jp
push
mov
cli
inc
daa
arpl
lds
xlat
mov
xor
aam
jmp
push
xchg
sub
add
inc
add
minps
das
call
cmc
(bad)
out
xor
jle
les
into
aaa
sbb
mov
cmps
jmp
(bad)
jno
push
add
jg
cmp
test
sti
xor
(bad)
je
xor
inc
pop
mov
push
pop
xor
jbe
dec
aad
push
rcl
les
add
and
pop
(bad)
and
loopne
repnz
mov
mov
xchg
mov
cmc
mov
mov
sub
fyl2xp1
pop
mov
aam
sub
xchg
aad
mov
adc
or
movs
add
je
jl
lods
add
push
add
push
sbb
push
jnp
add
icebp
jmp
cs
or
xchg
gs
dec
inc
push
call
sbb
sbb
push
or
adc
pop
dec
xchg
es
shr
or
pop
pop
mov
and
sahf
les
xor
pusha
cmp
xchg
ret
jmp
fcmovu
hlt
test
jecxz
inc
pusha
xlat
fs
lock
jns
movs
pop
loop
es
xchg
cmp
sar
mov
push
ret
cmc
lahf
add
mov
inc
xor
or
mov
push
imul
repz
shr
imul
mov
pop
xchg
pop
lods
mov
fnstenv
aaa
nop
xor
sub
stos
sbb
xlat
inc
fbstp
(bad)
jle
cmp
cmp
sbb
imul
ror
push
sub
pop
int3
dec
sbb
xor
xchg
ret
int
dec
inc
push
push
pop
in
popa
mov
mov
(bad)
xor
mov
xor
adc
cmp
out
(bad)
shl
mov
(bad)
stos
or
sti
adc
je
mov
jmp
loope
mov
addr16
mov
push
inc
push
xor
js
sbb
jnp
(bad)
sbb
mov
cmps
shl
mov
lock
icebp
aaa
lea
pop
mov
rol
mov
jmp
push
cmp
test
or
sub
dec
dec
mov
aam
data16
xchg
fldcw
test
(bad)
pop
loop
aam
push
cmps
rsqrtps
in
pop
fidivr
jl
lods
sub
js
sbb
cli
mov
outs
dec
xchg
rcl
add
rol
outs
stc
mov
mov
imul
call
xchg
lea
int3
pop
xor
push
sbb
leave
lods
aas
jnp
jp
ret
in
jb
sub
fdivr
pop
xchg
repz
std
sbb
xor
pop
sti
jmp
adc
out
inc
push
daa
scas
iret
mov
stos
ror
add
fcmovb
xchg
test
call
mov
movs
movs
lods
movs
adc
dec
lock
sub
sahf
dec
loopne
aaa
dec
popf
jbe
mov
jmp
ins
ret
mov
stos
sbb
pop
cmp
mov
retf
mov
push
or
hlt
jne
jmp
into
mov
jle
fsubr
jge
rol
je
int
inc
inc
icebp
lea
inc
iret
(bad)
mov
ja
cmps
mov
and
and
imul
sbb
into
push
addr16
aad
ins
sub
push
sbb
inc
pushf
dec
pop
std
push
nop
adc
ins
adc
adc
and
div
ja
es
cmp
push
jecxz
into
repnz
cmp
xchg
or
cmp
xchg
clc
clc
mov
std
jnp
jbe
(bad)
mov
lds
and
pop
pushf
iret
clc
pop
xchg
or
jne
jecxz
xlat
cmc
jo
push
out
inc
jns
mov
jbe
push
sbb
inc
daa
or
push
push
inc
xchg
(bad)
dec
retf
push
or
cld
sub
xchg
dec
add
ret
int
inc
pop
int
dec
inc
and
jne
dec
sub
push
fs
adc
dec
mov
cld
fidivr
pusha
and
xor
mov
mov
jecxz
mov
dec
add
(bad)
inc
xchg
and
cmp
lea
pusha
adc
aam
jmp
mov
mov
(bad)
pusha
repnz
dec
push
adc
lock
push
hlt
lahf
xor
or
pusha
mov
and
mov
lock
pop
out
push
int3
ret
jns
out
(bad)
cli
icebp
(bad)
adc
pushf
cmp
push
mov
leave
xlat
fsub
or
iret
jmp
loope
fnstenv
mul
bound
fild
(bad)
xor
loope
xchg
adc
dec
adc
mov
and
mov
add
dec
or
cwde
bound
mov
mov
pusha
xchg
mov
fwait
adc
sti
dec
retf
jl
int
add
rol
xor
call
fs
mov
ja
ss
and
movs
cmp
daa
sub
sbb
outs
pushf
fcom
imul
nop
cmc
sbb
mov
cs
jmp
mov
fcom
pop
xchg
or
daa
fs
and
jmp
or
add
loopne
inc
repz
retf
mov
cmc
push
jge
not
lahf
fidivr
das
xor
inc
xchg
xchg
dec
lahf
and
imul
aas
call
bound
mov
jle
and
cli
inc
sbb
hlt
jp
mov
and
xchg
inc
sbb
add
mov
test
into
fmul
cli
push
out
int3
jno
jmp
add
push
(bad)
lea
stc
loopne
pop
add
and
xor
call
mov
jg
push
and
mov
mov
xor
inc
sub
inc
mov
adc
lahf
or
and
(bad)
dec
sub
mov
cmps
out
adc
js
sti
shl
jle
adc
dec
jl
call
xor
add
push
arpl
mov
outs
mov
inc
or
xchg
ja
sub
je
in
or
stc
mov
cmps
and
and
movs
add
fdivr
iret
mov
mov
popf
sub
sub
in
sbb
push
cdq
inc
or
add
ins
cmp
add
jo
scas
push
mov
pop
and
dec
fidivr
cmp
retf
test
or
sub
nop
dec
push
addr16
mov
add
sbb
mov
sbb
xor
mov
iret
test
(bad)
int
(bad)
std
inc
mov
cmc
push
xor
and
jo
jmp
scas
fld
push
inc
ds
sti
inc
or
std
sbb
pop
xchg
jbe
enter
jp
xor
sub
lods
(bad)
sbb
ror
xor
popf
inc
(bad)
icebp
lods
out
dec
sub
and
jmp
cmp
out
add
test
cmp
mov
jmp
js
mov
lods
(bad)
cmps
iret
loopne
pop
jae
js
das
jbe
into
iret
xchg
cmp
(bad)
js
push
sub
or
fs
mov
mov
(bad)
stc
ins
stos
and
xchg
loope
lock
xchg
xchg
in
mov
out
ins
cmp
fisttp
data16
fisttp
mov
std
dec
inc
cmp
loop
cs
adc
xor
lods
fnstenv
mov
aaa
call
mov
jp
inc
mov
cld
(bad)
cwde
call
std
xchg
push
mov
adc
idiv
ds
add
pop
and
arpl
addr16
mov
loop
sbb
movs
lods
imul
inc
icebp
(bad)
lahf
nop
pusha
dec
fsub
mov
pop
fld
pop
and
int3
inc
mov
(bad)
jbe
push
int
adc
lds
mov
mov
pop
rcr
dec
lods
cdq
jno
add
jmp
(bad)
dec
cdq
mov
push
add
mov
les
retf
inc
push
mov
adc
mov
add
fisubr
imul
popa
push
jno
cli
ja
sbb
sbb
dec
add
(bad)
lahf
xchg
sub
push
imul
push
sbb
daa
jns
mov
add
(bad)
mov
jb
dec
cmovbe
loop
int3
jg
repz
(bad)
xchg
cmp
pop
cmp
mov
imul
daa
test
inc
jg
and
fisub
imul
loope
add
pop
je
imul
imul
mov
xor
pop
stos
pop
adc
push
add
outs
xchg
(bad)
mov
imul
lods
sub
movs
cmc
or
ret
ins
xor
jae
adc
arpl
add
lds
push
dec
inc
loop
std
sub
pop
inc
and
dec
mov
rcr
sub
cmp
mov
xchg
mov
cmp
dec
sti
mov
mov
jmp
pop
(bad)
dec
mov
mov
out
add
aas
jle
xchg
push
(bad)
mov
mov
adc
add
sub
sub
cmp
shl
mov
nop
jmp
lods
ins
test
xor
mov
mov
cwde
cld
add
popf
cwde
imul
xor
mov
(bad)
jno
mov
mov
jae
call
ret
xor
jp
retf
xchg
outs
cmc
sub
mov
test
movs
dec
cmps
xor
cmp
scas
imul
pop
xchg
fwait
jmp
mov
fadd
mov
xor
test
inc
xchg
mov
push
xchg
addr16
sbb
sub
fdivr
jne
push
in
leave
pusha
cld
and
test
(bad)
jl
sbb
(bad)
into
retf
add
int
jnp
sub
jno
in
retf
fs
out
mov
sbb
push
xor
or
dec
psubsw
jo
mov
data16
ins
stos
push
push
jmp
mov
pop
xchg
fnsave
xchg
lods
mov
cld
bound
pop
sub
adc
(bad)
and
mov
add
adc
cli
add
fld
popa
jmp
mov
js
mov
aaa
pop
add
pop
push
dec
imul
in
dec
test
cdq
dec
loop
inc
sub
imul
sahf
xchg
pop
mov
push
cli
in
or
cmp
jle
and
hlt
bound
push
mov
push
xchg
pop
adc
daa
jns
fstp
push
mov
jns
sub
dec
neg
pop
fistp
dec
cmp
(bad)
in
dec
inc
rcr
or
cs
inc
cmp
push
pop
dec
push
imul
movs
scas
and
sub
cmp
adc
inc
cmps
xchg
inc
mov
or
push
das
adc
(bad)
mov
mov
pop
ret
sub
ins
dec
rol
fist
aas
inc
ror
repz
xchg
nop
data16
or
cld
jle
push
and
push
imul
fcmovbe
clc
push
imul
int
mov
mov
pop
je
pop
push
inc
clc
jmp
loopne
fsubr
push
mul
mov
jmp
mov
int3
push
lahf
jmp
mov
add
je
or
loop
addr16
jg
and
xchg
repnz
inc
add
popa
sub
cmp
loop
xchg
test
or
dec
cmp
or
daa
int
bnd
jl
imul
push
push
and
xchg
gs
cmps
pop
push
inc
lods
popa
test
xor
xchg
adc
add
sub
jo
test
stos
stc
add
mov
mov
aad
lahf
repnz
std
xor
sbb
pop
fwait
push
mov
cmp
iret
clc
sub
nop
cmp
sub
addr16
in
mov
hlt
or
sub
sti
inc
cmp
mov
jg
mov
aaa
dec
jns
fistp
and
lods
cmc
fcom
mov
xchg
sbb
outs
inc
sbb
test
jb
or
int
pushf
ret
and
je
and
push
inc
lahf
loopne
popa
cmps
sub
xchg
imul
dec
imul
sub
rcr
dec
and
or
xchg
test
leave
sbb
xor
mov
cmc
push
sub
jl
(bad)
(bad)
repnz
push
cmps
mov
das
xlat
js
sub
ret
inc
mov
(bad)
stc
inc
jg
mov
out
pop
pop
outs
sub
dec
pop
mov
shl
push
xchg
dec
scas
into
in
sub
(bad)
cdq
xchg
cmp
jnp
inc
(bad)
retf
dec
fsubrp
pop
and
into
sub
lds
gs
movs
dec
push
fadd
jmp
(bad)
lahf
jb
scas
mov
hlt
outs
xlat
cwde
mov
ret
push
mov
lock
test
loopne
mov
(bad)
nop
mov
adc
push
mov
imul
mov
(bad)
mov
push
lods
and
dec
mov
movs
jecxz
retf
inc
or
jp
cdq
std
push
and
dec
and
loopne
mov
push
out
jb
adc
xchg
div
jns
pusha
popf
(bad)
mov
out
pop
add
jl
or
out
jge
int
xchg
ss
les
icebp
xchg
test
hlt
out
(bad)
scas
sub
cmp
xlat
xchg
out
lods
jl
imul
push
aaa
lds
(bad)
xor
add
xor
dec
xor
cmc
popa
sbb
xor
pop
cmp
inc
movs
cmp
xchg
inc
repz
cmp
pop
xchg
sub
in
pop
jns
std
pop
not
movs
pop
or
mov
mov
je
test
ret
adc
pop
xor
pop
(bad)
int3
stos
rcl
pushf
clc
pop
sub
scas
inc
std
movs
stc
int
mov
or
dec
loopne
adc
sub
cwde
sbb
out
add
push
push
sbb
adc
imul
enter
or
mov
(bad)
loope
jle
jge
push
and
(bad)
shufps
lea
in
jg
jae
loope
dec
mov
dec
mov
es
sti
inc
push
jge
mov
add
cmc
shl
fbld
leave
adc
cmp
fnstenv
popf
ror
(bad)
push
mov
xchg
inc
imul
in
and
adc
mov
add
and
dec
add
jbe
sub
pop
or
sbb
fld
xor
mov
xor
shl
dec
daa
mov
ins
xchg
aas
jnp
sub
add
shl
lods
adc
fidivr
or
jne
pop
sahf
add
mov
and
sbb
xchg
js
sbb
frstor
loope
sti
ins
mov
mov
out
and
inc
adc
ja
rcl
xchg
test
(bad)
jge
mov
sub
xchg
jae
jl
out
jne
fdivr
sbb
les
imul
add
jbe
sub
adc
mov
jns
mov
retf
outs
repz
cwde
push
fcomp
test
inc
sub
fistp
movs
inc
loop
mov
cmp
xchg
jmp
adc
inc
js
cmc
adc
xor
sbb
dec
(bad)
jo
lds
(bad)
jg
fidiv
push
inc
mov
cmp
mov
loopne
nop
arpl
ins
inc
add
das
mov
ret
xor
xor
push
jo
sbb
test
repz
mov
inc
cmp
fadd
call
mov
les
mov
push
mov
jbe
xchg
popf
aam
aaa
inc
stos
sbb
push
push
movs
(bad)
mov
or
xor
aaa
aas
adc
adc
pushf
arpl
lods
mov
mov
xchg
ja
sahf
mov
xchg
shl
ret
xor
data16
popa
sub
rcpps
ins
add
push
and
dec
dec
ins
push
jae
ret
(bad)
push
pop
js
pop
sub
adc
add
push
into
dec
pop
mov
inc
movs
fist
or
jmp
lods
add
rcl
mov
jns
sub
dec
mov
inc
jge
mov
dec
call
imul
xor
cdq
xchg
mul
cli
sbb
sbb
jne
cwde
cmp
test
mov
jge
cmp
and
js
push
xchg
dec
xor
push
push
popf
adc
sbb
xchg
and
push
ror
sbb
out
addr16
jle
fidivr
stos
dec
dec
imul
(bad)
jge
ror
pop
dec
pop
push
mov
mov
jp
dec
cli
popa
std
loop
jg
mov
mov
cmp
xor
push
(bad)
add
fidivr
cdq
or
or
jbe
outs
dec
hlt
mov
imul
mov
pop
or
lahf
lds
mov
sbb
stos
jl
push
out
xor
pop
fwait
mov
jp
in
test
test
cs
push
rol
mov
sub
jns
cmp
call
dec
xchg
out
addr16
call
cmps
outs
ins
lods
pop
in
dec
out
pop
mov
test
inc
adc
pushf
iret
and
in
daa
xchg
mov
repz
xchg
(bad)
out
push
pop
mov
xchg
mov
outs
in
jecxz
loop
jb
cmp
cmps
(bad)
jns
test
mov
mov
cmps
xchg
or
jae
test
pop
push
mov
pop
mov
mov
ins
pop
jnp
or
test
or
or
stc
or
xor
fistp
and
shr
sbb
call
push
mov
int
sub
cmps
mov
xchg
ss
stos
hlt
mov
mov
ficomp
into
enter
jno
mov
jbe
push
adc
das
call
test
bound
shr
dec
jbe
add
jl
test
nop
retf
mov
push
pusha
xchg
or
dec
stos
cmps
pop
or
rcl
and
push
fistp
dec
inc
out
lock
daa
enter
icebp
and
jl
movs
dec
sahf
sub
mov
cmps
sbb
mov
hlt
out
push
jmp
push
out
inc
pop
outs
mov
cwde
movs
inc
add
scas
xchg
xchg
in
jg
jmp
push
cmp
inc
les
imul
sar
push
ret
test
mov
sti
scas
pop
pop
sar
pop
push
inc
test
sub
rol
cmc
cmps
adc
cmp
sahf
inc
js
stos
into
rcr
iret
jge
loope
(bad)
or
out
in
jg
pop
push
xor
or
adc
cmp
mov
addr16
dec
rol
adc
dec
cs
push
(bad)
cmp
cmp
mov
mov
retf
mov
cmp
or
sbb
mov
aad
mov
(bad)
aad
pusha
cmc
je
test
jbe
xor
inc
mov
test
xor
inc
xchg
and
push
push
jne
in
push
dec
mov
sar
push
dec
bound
pop
sbb
arpl
xor
jg
movs
seto
inc
xchg
adc
dec
mov
sahf
lods
in
jmp
retf
pop
test
in
cli
lods
lods
xor
inc
add
es
icebp
push
mov
ss
push
xchg
je
out
das
mov
dec
cmp
cmp
sub
retf
das
movs
mov
jle
test
dec
jne
dec
and
jp
jo
mov
mov
lock
adc
sahf
dec
test
mov
push
pop
adc
adc
mov
scas
pop
test
mov
mov
pusha
push
sbb
inc
stos
xor
loope
test
jno
jae
fisub
stos
dec
repz
ret
or
aaa
test
popf
lods
dec
jp
cli
jns
in
or
pop
jmp
lock
fwait
or
mov
mov
push
push
inc
inc
cmp
mov
cwde
cmp
sbb
std
es
(bad)
add
inc
jmp
aam
jbe
fdivr
mov
cs
push
jns
pop
cli
test
add
nop
xchg
aaa
push
(bad)
dec
cmps
ss
scas
adc
inc
dec
dec
sub
out
test
add
mov
cmp
ret
xchg
cmp
xchg
sub
sub
aad
shr
push
and
fimul
lock
sahf
pop
(bad)
leave
fyl2x
mov
gs
(bad)
je
mov
cs
jp
clc
fistp
fisubr
cs
dec
dec
cmp
cmps
xchg
dec
addr16
dec
cmps
or
out
nop
mov
in
rcl
add
in
in
mov
sub
and
mov
pop
inc
xor
mov
call
pop
xor
adc
xchg
fcomip
mov
push
add
dec
(bad)
leave
sbb
test
inc
add
popa
outs
(bad)
sub
xor
sar
push
mov
rol
mov
rcr
sahf
xor
nop
dec
gs
xchg
xor
xor
dec
arpl
(bad)
jmp
jecxz
cmp
int3
jge
xchg
xrelease
les
xchg
shl
sbb
push
std
dec
not
dec
mov
aas
xor
jle
jns
icebp
shl
fucomi
adc
xor
jp
out
sti
adc
add
and
or
pop
cmc
ss
push
mov
pop
sbb
mov
mov
lds
mov
mov
jmp
pop
ror
xchg
je
fs
fwait
dec
movs
jmp
xor
sbb
inc
loop
pushf
sbb
imul
call
mov
ins
push
sbb
(bad)
push
mov
sbb
into
add
movs
xchg
mov
sbb
pop
lds
in
sbb
inc
xor
cmps
int3
cmp
or
sbb
(bad)
jge
aad
sbb
pop
enter
push
xchg
jns
(bad)
jge
jns
pop
inc
call
adc
lock
gs
mov
cmc
outs
xchg
cmp
stc
call
cmp
in
gs
push
sub
call
cmp
jae
aaa
es
fs
les
jno
dec
ret
cwde
jnp
push
gs
pop
jns
jns
add
ds
clc
xor
ds
jge
dec
xchg
pop
pop
(bad)
call
sub
sbb
fbstp
and
cmp
test
loope
aam
pop
mov
or
stos
ret
lahf
pop
les
xor
and
xor
dec
clc
out
std
imul
pop
add
sub
mov
div
repnz
aad
push
or
mov
adc
mov
mov
push
enter
mov
out
mov
jns
cmp
mov
data16
mov
sbb
sbb
dec
nop
mov
mov
cmp
scas
je
mov
add
push
inc
mov
add
inc
push
sti
xor
test
and
push
das
jmp
push
jo
xchg
in
xlat
sub
inc
rol
sub
js
in
dec
xor
mov
sbb
fnstsw
pop
test
imul
repz
dec
push
fisttp
push
or
pop
mov
bound
mov
mov
jge
sub
in
xchg
jae
push
add
fldcw
ret
sbb
xor
push
inc
add
mov
(bad)
ins
fs
pop
lahf
mov
dec
cli
mov
jne
call
inc
xchg
jg
xchg
dec
xor
inc
out
test
adc
dec
fwait
call
jg
mov
mov
mov
or
add
or
sub
inc
repnz
sbb
dec
outs
or
and
call
mov
rcr
(bad)
push
call
inc
lea
fldcw
xchg
dec
aaa
mov
pop
mov
stos
push
ds
cmc
cmps
xlat
es
jge
and
mov
nop
aad
fdiv
add
adc
adc
or
stos
add
mov
push
add
and
and
push
loopne
into
addr16
into
cli
out
out
(bad)
(bad)
jmp
jecxz
sahf
retf
in
pop
cmps
movs
dec
push
jo
mov
pop
xchg
rol
loopne
jecxz
pop
(bad)
repnz
mov
pop
aas
repnz
inc
fwait
fs
or
push
call
and
pushf
and
pop
mov
lea
leave
adc
and
loop
jmp
pop
pop
into
sbb
push
rol
adc
loopne
cwde
mov
idiv
popa
add
in
arpl
addr16
adc
sbb
push
mov
dec
pop
jnp
call
mov
or
das
ja
xor
dec
mov
cli
js
pop
repnz
fucomp
idiv
retf
ror
adc
cli
or
sbb
mov
xchg
xor
imul
ds
cmp
fs
rcl
fadd
fisubr
loopne
pusha
cmp
ror
mov
arpl
push
fmul
arpl
or
lods
loop
pop
popf
in
into
outs
dec
mov
adc
sub
and
mov
popa
test
retf
dec
pop
or
(bad)
in
in
push
cdq
xchg
in
adc
xlat
inc
loope
sbb
bound
mov
pop
mov
and
mov
lock
mov
das
adc
jno
call
ds
scas
sub
sahf
sbb
call
jg
nop
cmp
cmp
jo
fwait
jnp
or
lea
mov
call
out
adc
jns
mul
(bad)
clc
clc
or
loope
ja
sub
sbb
pop
movs
xor
mov
push
adc
(bad)
stos
je
repnz
and
xchg
dec
fstp
fs
xchg
push
mov
test
(bad)
fcom
dec
sbb
inc
sub
mov
mov
jmp
dec
sbb
scas
pop
push
jmp
xor
rdtsc
in
adc
sbb
or
xor
and
sub
push
shr
pop
xchg
pop
pop
adc
jne
mov
outs
dec
or
xor
(bad)
xor
gs
mov
jecxz
ret
sbb
loopne
pop
lahf
daa
stos
push
adc
data16
inc
or
out
lods
add
xchg
inc
add
dec
jb
mov
push
mov
pop
fld
pop
aad
xlat
jg
test
pop
jne
or
(bad)
retf
sahf
or
sub
xchg
jle
retf
add
addr16
and
mov
pop
xor
push
xor
xchg
xchg
sbb
xchg
out
mov
inc
cmp
xor
dec
inc
and
sub
leave
popa
dec
or
ret
fwait
ins
adc
enter
shr
push
fstp
inc
push
cli
sbb
ror
dec
dec
dec
sbb
sbb
push
or
inc
mov
repz
leave
sar
mov
sbb
mov
inc
jmp
mov
and
add
loopne
xchg
add
(bad)
ins
or
cmps
dec
cmps
out
or
call
into
xlat
dec
mov
jmp
add
je
cdq
call
pusha
pusha
sbb
sub
mov
sub
and
push
and
pop
xchg
push
ins
rol
nop
lea
inc
test
hlt
mov
pop
scas
adc
out
add
retf
xor
and
and
dec
cmp
or
loope
sbb
ds
in
pop
xchg
loope
rcl
mov
movs
mov
mov
fisubr
call
imul
pop
jecxz
jne
inc
movs
xor
ins
add
not
leave
shl
mov
stc
pop
test
call
xchg
cmp
jne
cmc
int3
dec
jmp
cmp
lock
adc
sub
in
daa
ss
jno
lea
jmp
add
pop
cdq
pop
pop
xchg
out
and
sub
cli
jae
fidivr
fwait
std
mov
mov
(bad)
sbb
stos
mov
mov
mov
pop
jmp
mul
xchg
inc
push
mov
dec
gs
data16
mov
in
jo
outs
mov
lods
mov
(bad)
arpl
cwde
loope
inc
ins
cmp
sti
mov
cmps
mov
push
or
pop
aam
cmc
mov
int
fyl2xp1
mov
fwait
aas
(bad)
adc
popa
inc
pop
jmp
jno
gs
inc
cmp
pop
inc
cmp
inc
jnp
fstp
sahf
cs
outs
jns
or
push
rol
test
cwde
mov
add
mov
sub
movs
cmps
cmps
pop
mov
aaa
in
jno
push
(bad)
cld
in
stos
(bad)
outs
ror
fdiv
xor
sub
jg
inc
sbb
retf
mov
in
push
das
inc
mov
js
not
jle
icebp
shl
stos
out
push
fdiv
and
mov
push
xchg
cmp
scas
ins
mov
mov
movs
cli
sbb
cmp
(bad)
fist
push
cmp
std
out
outs
shl
add
mov
fwait
addr16
inc
mov
jmp
dec
ror
xor
mov
inc
dec
and
stos
xchg
aas
xor
cmp
sbb
jae
and
mov
hlt
les
repnz
pop
aam
dec
xor
scas
addr16
cmp
out
mov
jp
xchg
push
retf
ja
das
aaa
cld
jecxz
add
mov
sbb
ror
cmp
sbb
loop
mov
jg
into
pop
lahf
fnstcw
(bad)
movs
int
mov
jmp
mov
mov
add
lahf
push
and
cld
lahf
stos
call
call
daa
fimul
lds
dec
imul
aas
adc
mov
pop
repz
xchg
stc
lahf
xor
adc
dec
inc
jo
jnp
push
dec
shl
add
push
mov
leave
and
pop
or
(bad)
lea
xchg
repnz
inc
sbb
or
pop
cli
xor
(bad)
hlt
pushf
lds
add
or
mov
cmp
add
and
or
fwait
mov
sub
cs
rcl
inc
xor
sbb
fistp
mov
pop
leave
outs
mov
(bad)
test
loope
daa
fs
mov
out
(bad)
retf
jns
into
push
loop
pop
js
(bad)
imul
pop
and
sub
aas
and
fsubr
(bad)
in
call
sar
aam
jmp
stos
fs
and
mov
cdq
std
(bad)
add
aaa
inc
rcl
cmps
push
out
sub
sub
or
daa
jmp
rcl
jbe
imul
push
push
aad
and
dec
in
fs
and
jp
and
js
movs
and
js
xor
inc
out
adc
mov
and
movs
cdq
push
jp
cmp
into
pop
sar
adc
shl
test
(bad)
jae
mov
mov
les
push
(bad)
push
mov
imul
sbb
iret
or
mov
(bad)
mov
mov
xchg
(bad)
divps
mov
mov
adc
cmp
dec
bound
rol
cmp
sub
add
jge
and
xchg
pop
cdq
sub
sub
(bad)
cwde
add
not
and
inc
push
cld
fwait
cmc
jb
or
cmp
or
gs
push
pusha
push
dec
inc
mov
and
add
in
mov
xor
add
add
push
sub
sub
cmp
dec
sub
rol
xchg
mov
lods
les
and
inc
int
fwait
(bad)
in
adc
rcl
ret
xchg
data16
jge
pop
inc
pop
sub
mov
mov
xchg
jbe
icebp
sub
cmp
mov
jnp
mov
sbb
adc
xor
xor
xor
dec
in
pop
xor
test
pop
xchg
pushf
out
inc
mov
mov
(bad)
adc
dec
rcl
shr
stos
movs
inc
push
mov
and
(bad)
push
aam
jge
mov
adc
rcl
jo
adc
mov
test
aam
or
stos
mov
cmps
jge
pop
jge
mov
test
xor
popf
adc
mov
adc
jmp
inc
mul
mov
sbb
or
mov
jno
ja
pop
imul
or
mov
dec
and
jmp
test
jl
sti
jmp
int
stc
sbb
xchg
div
cmp
int
(bad)
es
jg
es
inc
dec
data16
adc
ret
fisttp
out
call
mov
cmc
out
jno
sub
fnstcw
xor
call
sub
call
cmp
mov
movs
mov
movs
out
sbb
dec
mov
inc
and
jnp
mov
pop
push
lods
add
mov
aam
loopne
xchg
adc
jmp
dec
push
movs
loope
sbb
xchg
and
inc
cmp
and
adc
jo
nop
call
nop
dec
mov
jmp
jae
inc
pop
pushf
push
mov
xchg
or
push
jmp
xor
loopne
clc
inc
int
cwde
mov
rol
push
imul
sbb
xchg
loope
popf
mov
mov
loopne
adc
and
inc
sbb
add
and
movs
std
push
fnstcw
rol
push
shl
add
push
aam
mov
jb
and
push
jl
dec
xchg
adc
sub
test
jl
and
jg
sbb
aad
les
int3
hlt
scas
gs
sbb
mov
ja
cmps
jmp
and
es
push
movs
cmp
pop
xchg
fpatan
aas
jp
jge
cmp
ret
pop
xchg
fabs
lods
add
test
out
pop
mov
jle
mov
leave
frstor
push
jmp
mov
in
pop
imul
pushf
mov
jmp
ret
or
mov
inc
mov
icebp
loope
pushf
ret
ficom
call
in
push
mov
dec
lea
add
out
xchg
xchg
shr
and
aas
inc
mov
adc
mov
mov
dec
add
cmps
gs
aam
sahf
in
loop
std
xchg
and
ins
cwde
call
jae
retf
xchg
out
push
jp
add
in
push
sbb
sub
test
pop
add
ret
enter
xchg
fs
sub
xor
(bad)
cmp
hlt
into
fisub
push
dec
mov
ret
aad
jbe
pop
mov
icebp
pop
daa
out
outs
scas
pop
imul
push
stc
dec
inc
jmp
sub
fadd
mov
lods
enter
cmps
jne
cmp
or
or
imul
popa
fs
inc
add
pop
push
iret
or
test
inc
cmp
call
xchg
adc
inc
sub
inc
mov
mov
xor
adc
push
scas
or
inc
dec
ins
mov
fist
fcom
scas
adc
push
ror
xchg
add
int
jae
mov
xchg
fcmovnb
lea
dec
adc
xor
outs
mov
mov
enter
gs
mov
jae
hlt
aam
test
movs
cmp
xchg
xor
mov
pop
(bad)
lods
test
push
addr16
fwait
ins
popa
scas
pop
jmp
ds
stos
dec
push
jecxz
xchg
jbe
bound
sbb
push
test
cmp
mov
fsub
mov
icebp
mov
fs
lds
inc
xchg
popf
pop
movs
sub
push
mov
(bad)
push
sbb
mov
fld
jbe
fadd
sub
push
ins
mov
loope
repz
loope
pushf
shl
jmp
sub
lea
daa
adc
(bad)
cmp
daa
cmp
cmp
sub
push
inc
nop
inc
rcl
or
and
(bad)
shl
pop
jmp
lock
add
push
enter
xor
(bad)
out
push
nop
lods
sub
add
out
adc
stos
out
dec
fild
call
test
fwait
mov
dec
sub
pop
ficom
pop
inc
daa
push
test
retf
and
loope
xor
mov
retf
mov
or
clc
out
sbb
loopne
or
call
hlt
(bad)
aaa
(bad)
push
fadd
mov
mov
add
icebp
push
push
jb
jl
ins
ret
sub
dec
stos
cdq
ins
dec
fs
pop
fs
push
push
sar
push
rol
fwait
and
mov
inc
xchg
push
aam
and
sbb
lock
dec
cwde
xor
push
gs
test
pop
pop
add
push
sbb
in
pop
rcr
mov
pusha
xchg
mov
push
push
sbb
out
sbb
jmp
push
jno
mov
iret
xor
fnsave
inc
mov
scas
std
jae
add
cs
or
loopne
or
std
bound
movs
jmp
(bad)
xor
mov
(bad)
out
mov
aaa
xchg
xor
and
call
ss
ss
nop
popw
adc
mov
jge
mov
mov
lds
xchg
cmps
sahf
mov
imul
das
addr16
pop
sub
leave
push
pop
addr16
data16
cs
idiv
xchg
push
mov
(bad)
leave
xor
aad
cmps
ja
popa
shr
jno
push
test
or
xchg
clc
rcl
sahf
cmp
mov
cmp
mov
adc
repnz
dec
and
imul
add
shl
cld
jmp
ds
adc
stos
xchg
mov
je
push
dec
nop
es
outs
mov
lods
mov
ror
pusha
inc
inc
in
and
add
mov
push
sbb
(bad)
nop
xchg
ret
adc
push
das
outs
das
pushf
test
mov
add
ret
enter
test
test
cmc
sbb
std
cmp
aad
stos
stos
or
fdiv
in
push
add
dec
dec
dec
mov
out
fnstsw
mov
pop
(bad)
mov
xlat
mov
xor
sti
jecxz
ja
push
stc
test
cwde
or
add
(bad)
xlat
es
icebp
xor
pop
mov
pop
fbld
jmp
inc
stc
push
popa
bound
pop
retf
push
data16
(bad)
pop
adc
les
push
cdq
dec
xchg
stos
je
fwait
sub
shl
cwde
mov
or
mov
dec
mov
sti
inc
adc
inc
jle
or
cld
mov
popf
and
push
mov
mov
lahf
ror
cmp
fwait
iret
cmp
fs
movs
lahf
jbe
mov
adc
fiadd
mov
cld
faddp
inc
mov
jae
sub
int
jmp
in
ins
push
xchg
mov
sub
pop
push
pop
cs
popf
inc
mov
jne
pusha
clc
push
jnp
fbstp
int
mov
xchg
push
xor
xor
jno
out
out
aad
mov
shl
loop
das
push
push
mov
(bad)
pop
das
cmps
fdivr
and
leave
movs
in
int
mov
xchg
xchg
(bad)
lds
or
and
out
or
cmp
fs
cdq
jbe
adc
sar
lahf
cwde
imul
lods
xor
in
rol
pop
(bad)
aam
(bad)
call
lods
loope
fistp
mov
mov
rol
jns
stos
iret
leave
mov
mov
jne
mov
push
lock
sbb
aad
pop
xchg
jmp
(bad)
js
sbb
popf
jg
add
enter
or
mov
add
xchg
jg
repz
popf
aaa
aam
aas
mov
dec
sbb
mov
adc
dec
pop
jmp
xor
or
mov
mov
dec
imul
xchg
and
shr
(bad)
out
sbb
pop
xor
inc
cwde
leave
mov
mov
xchg
xor
jge
(bad)
jne
push
hlt
fisub
scas
dec
xchg
fcom
lahf
mov
fnstsw
clc
mov
jecxz
imul
adc
sub
jl
retf
dec
add
shl
nop
add
imul
mov
outs
and
sbb
out
movs
add
push
inc
xor
stc
sbb
dec
imul
mov
call
rol
xchg
push
xchg
push
pop
add
xor
pop
fcomip
mov
in
faddp
adc
mov
dec
movs
ds
fcom
nop
mov
sahf
leave
jb
mov
in
add
and
jp
xchg
fmul
lds
shr
adc
in
inc
jb
ins
ret
xor
std
js
movs
ss
(bad)
and
inc
pop
adc
jle
sub
or
call
xchg
push
clc
shrd
xchg
push
fwait
dec
add
push
adc
in
jge
and
or
mov
xlat
inc
pop
push
aad
scas
adc
fwait
cmc
jb
rcl
mov
pop
stos
mov
inc
adc
mov
jno
xchg
data16
xchg
xchg
das
or
stos
cmp
mov
mov
rol
or
aas
in
sahf
fdiv
dec
pusha
addr16
dec
test
test
aad
in
lock
adc
push
fiadd
push
hlt
test
sub
ret
sub
adc
jle
jnp
jbe
sub
cmps
ret
mov
or
sbb
sti
push
and
dec
or
lods
loop
dec
(bad)
test
push
cmp
arpl
inc
mov
(bad)
push
sub
dec
mov
and
mov
scas
push
cmp
pop
push
mov
and
dec
push
fcmovu
push
inc
dec
in
popa
mov
lahf
adc
adc
jecxz
xchg
jmp
imul
sub
or
out
dec
mov
xor
loope
jae
fsub
inc
push
push
dec
sbb
pop
dec
sar
mov
mov
fdivr
inc
jmp
sahf
and
mov
(bad)
mov
scas
cmp
lahf
frstor
loope
sbb
mov
xchg
sub
pop
push
in
push
ja
mov
ret
cmp
mov
ins
call
adc
jne
stc
cmps
ja
jo
jbe
pusha
inc
jne
or
js
lahf
mov
popa
test
aad
daa
fistp
je
repnz
aas
cmp
aam
lods
(bad)
sbb
dec
lock
pop
sub
adc
scas
pop
retf
sbb
cmp
int3
int
and
mov
in
push
mov
hlt
inc
mov
jle
cwde
repnz
jmp
dec
jl
push
xor
inc
and
jo
test
lock
pop
dec
push
push
lock
mov
or
pop
xlat
shl
xor
mov
mov
lods
cmp
test
ins
les
dec
rcl
shl
aam
mov
adc
(bad)
ds
pop
sbb
cmc
fmul
leave
(bad)
sbb
or
adc
div
int3
xor
adc
(bad)
xchg
lods
lds
imul
and
test
jmp
add
popf
or
xor
(bad)
cmp
dec
xlat
inc
and
adc
test
aad
repz
push
mov
repnz
mov
push
inc
xchg
rcr
es
fnstenv
jns
lock
inc
imul
mov
xchg
sub
ins
shl
fsub
cmc
push
cs
push
mov
mov
and
fadd
lahf
imul
mov
mov
stc
test
and
push
push
ds
sbb
sbb
adc
test
add
xchg
add
jmp
in
pop
pushf
sub
test
xor
daa
mov
push
sbb
je
in
pop
aam
in
out
scas
push
mov
adc
nop
or
mov
mov
dec
leave
call
adc
sub
mov
into
call
dec
jbe
imul
or
push
and
dec
sub
inc
mov
inc
push
push
add
mov
inc
or
test
mov
jmp
test
or
sub
out
jle
movs
out
mov
pop
loope
mov
pop
aaa
jns
fsubr
mov
mov
sbb
fisubr
jne
inc
pop
xchg
out
ret
cmp
call
sbb
dec
sub
daa
test
hlt
div
mov
in
aad
lahf
daa
dec
ret
xchg
jmp
cli
or
pop
cmp
jle
and
std
add
hlt
imul
cs
fadd
pop
pop
rol
(bad)
(bad)
enter
and
xchg
jecxz
int3
sub
adc
inc
(bad)
std
loope
sbb
push
mov
mov
pop
cdq
jp
dec
aad
cmps
lock
retf
mov
dec
pop
pop
fldenv
cmp
or
std
test
and
icebp
xchg
xchg
addr16
mov
xchg
add
sbb
sub
or
or
in
rcr
xor
mov
sub
cdq
mov
push
inc
enter
push
out
dec
imul
test
mov
retf
dec
cdq
test
xchg
pop
mov
shl
sbb
neg
dec
int3
push
ins
mov
dec
addr16
xchg
bound
and
test
or
std
rcr
fisubr
cmp
mov
xor
les
cmp
push
mov
dec
sub
outs
inc
cmp
push
out
pop
sub
cmp
add
inc
jl
ret
mov
mov
mov
dec
jns
pop
adc
mov
and
shl
sbb
(bad)
aaa
clc
push
imul
push
leave
out
retf
add
popf
cmp
fcom
xchg
jge
inc
mov
data16
in
loop
cmp
pusha
cmps
sub
in
cmps
mov
ds
lock
jg
gs
cwde
push
out
mov
cmp
inc
in
pop
jns
aam
popa
mov
inc
int3
movs
add
xor
fstp
out
sbb
add
jo
imul
je
leave
aas
idiv
out
test
push
and
push
pop
dec
or
mov
inc
call
or
jecxz
xor
bound
fbld
aaa
mov
pushf
mov
clc
loope
ja
add
add
pusha
sub
xlat
or
jecxz
dec
fwait
push
test
jne
scas
frstor
call
or
mov
pop
ret
mov
call
mov
jl
xchg
movs
cli
aam
or
pop
mov
push
stos
mov
leave
push
inc
mov
or
in
mov
adc
and
imul
bound
mov
mov
call
add
ss
sar
or
xor
push
push
cmp
and
pop
add
cwde
aaa
xor
xchg
jb
mov
cmp
and
(bad)
jns
mov
jns
inc
dec
xor
jge
and
mov
sub
pop
inc
das
popa
pop
xchg
(bad)
sub
cdq
or
sub
sbb
add
jmp
mov
jns
call
pop
es
or
add
jne
add
push
adc
xor
aaa
mov
clc
xchg
stc
cli
int3
push
add
cmp
neg
mov
fwait
call
push
lea
ja
fwait
fwait
cdq
mov
add
mov
xor
mov
outs
push
xor
sti
arpl
inc
mov
dec
cmps
xchg
out
push
arpl
inc
imul
iret
jmp
shr
in
cmp
mov
sbb
imul
mov
adc
rol
popa
fcomip
jmp
inc
loop
fisubr
mov
popf
add
xor
syscall
xchg
popa
shl
mov
les
xor
call
xor
sbb
movs
cmps
mov
popf
pop
mov
inc
xor
pop
mov
rcl
setl
cmp
fsubr
adc
(bad)
push
rcr
and
cmc
fadd
ret
inc
jo
cwde
cmp
add
cmp
rol
rcl
(bad)
pop
pushw
xor
add
adc
shr
adc
mov
int
repz
cld
xor
int3
mov
jg
leave
jmp
dec
cli
mov
cmc
mov
pop
lods
ins
fdivr
push
std
cmp
and
je
jns
jl
loopne
sti
adc
ss
jmp
push
jo
shl
les
and
shl
call
cmp
scas
push
jb
pop
leave
adc
pop
mov
aas
test
mov
push
inc
sub
jmp
sbb
shr
xor
xor
xchg
out
imul
pop
jnp
fimul
mov
inc
idiv
lods
pop
push
xor
mov
adc
cmp
xchg
loop
adc
cmp
jmp
push
inc
sub
adc
mov
inc
and
cmp
pop
sub
adc
mov
sub
dec
xchg
imul
cwde
jno
push
xlat
(bad)
int3
cmp
add
pop
push
std
push
jae
jmp
pop
and
scas
ficomp
cli
mul
ins
fwait
xchg
je
movs
mov
jle
(bad)
test
inc
rol
xor
aaa
mov
and
pop
jmp
mul
adc
jne
fsub
ret
sti
inc
dec
dec
mov
ret
in
repnz
xchg
ret
stos
fcomp
mov
and
mov
push
inc
push
dec
fs
es
sahf
xor
leave
sbb
adc
test
stc
outs
mov
addr16
repnz
stc
jl
shl
adc
adc
and
(bad)
pop
stos
mov
adc
fsubr
adc
(bad)
xchg
and
sub
and
addr16
fstp
push
pop
and
jmp
and
aaa
inc
scas
loope
les
mov
and
test
jge
inc
jl
nop
or
retf
shr
repnz
jnp
inc
xor
jno
or
xor
(bad)
dec
daa
mov
leave
mov
pop
in
cs
lock
dec
cmp
push
mov
mov
xchg
and
jl
xchg
adc
mov
cmp
and
inc
test
arpl
(bad)
adc
cmps
cmp
xchg
rcr
loope
cmp
test
mov
add
xchg
and
mov
mov
inc
in
data16
sti
jecxz
mov
and
or
sbb
and
push
nop
mov
dec
or
shl
dec
cmp
popa
movs
lahf
xor
test
ret
mov
jns
jae
mov
out
stos
xchg
xor
ret
cmp
sbb
or
adc
jno
mov
adc
leave
sbb
ins
call
sub
into
mov
(bad)
not
jg
ret
outs
fnsave
push
pushf
sbb
xchg
ss
pop
cmps
popa
scas
loopne
daa
jae
ja
push
dec
(bad)
lock
and
jne
mov
xchg
jb
leave
xchg
jl
(bad)
fstp
mul
pop
cmp
lock
or
int3
jbe
and
add
movs
and
jns
int3
int3
push
cwde
test
les
call
aaa
daa
call
les
int
cmp
test
add
xlat
cmp
iret
xchg
sub
out
mov
mov
adc
dec
xchg
icebp
ror
loop
(bad)
in
cmp
jns
shl
xor
test
clc
ins
jo
sbb
add
mov
loope
xchg
dec
dec
sub
inc
jge
cmp
retf
nop
inc
jmp
aas
dec
stos
sbb
stos
je
fild
jl
call
push
inc
add
add
mov
cmp
jecxz
lock
pop
sub
add
xchg
(bad)
aam
or
mov
fisub
xor
sti
adc
push
add
rol
and
xor
sar
sub
stos
das
sub
daa
push
push
data16
pop
mov
imul
fldenv
adc
jo
sti
sbb
push
retf
popf
mov
and
(bad)
jmp
xchg
rcr
imul
arpl
imul
nop
test
mov
push
test
(bad)
xchg
call
cli
push
push
push
pop
pusha
pusha
rol
dec
xor
sbb
sbb
sbb
sbb
imul
adc
lock
loopne
iret
jmp
lock
mov
mov
mov
ss
mov
ret
or
add
jmp
inc
sbb
aas
mov
push
loopne
mov
jae
mov
xchg
mov
cwde
mov
inc
mov
and
lods
jge
sbb
mov
std
mov
scas
out
out
leave
sub
xchg
and
mov
xchg
aas
jb
mov
dec
rcr
adc
jg
mov
nop
mov
mov
pop
ss
call
and
(bad)
int
popa
mov
sub
adc
mov
sbb
cmp
(bad)
or
inc
xor
pop
jg
sar
clc
inc
lahf
sbb
xchg
xor
pop
(bad)
push
loop
aam
in
loope
inc
jecxz
push
cli
push
xor
push
mov
mov
dec
xor
add
sbb
xor
arpl
fnsave
mov
dec
xchg
xor
jl
lahf
in
push
mov
jne
inc
adc
pop
dec
push
aad
push
add
mov
cs
and
bound
inc
sub
mov
cmp
and
xor
dec
push
pop
dec
repz
xchg
and
xchg
mov
and
aam
fwait
jmp
push
arpl
stos
xchg
fwait
out
dec
cmc
jle
ja
xor
imul
popf
pushf
adc
inc
push
xor
sub
and
xor
jnp
not
cld
push
movs
(bad)
sbb
push
(bad)
sbb
mov
xor
pop
xor
stc
mov
sub
push
pop
cmp
pop
push
retf
mov
movs
leave
dec
mov
cdq
or
dec
push
inc
loopne
cmp
or
arpl
dec
xchg
jne
push
fwait
nop
mov
pop
test
inc
jno
adc
pusha
clc
mov
rol
sbb
mov
and
mov
and
fcom
jae
test
daa
outs
dec
mov
ss
ret
xchg
rcl
ins
sbb
pop
(bad)
sbb
ficom
push
cmp
icebp
outs
shr
sub
jmp
mov
mov
pop
cmc
add
pop
(bad)
cld
sbb
int
popf
mov
xchg
add
test
add
sbb
popf
mov
popa
add
sub
push
jnp
movs
sbb
mov
cmps
ins
push
aas
xor
nop
fs
cmps
dec
jp
mov
inc
inc
cmp
scas
cli
call
inc
addr16
es
add
mov
push
inc
imul
inc
dec
adc
xor
jp
call
adc
jnp
xchg
push
outs
mov
xchg
mov
push
xor
push
pop
in
or
(bad)
jp
mov
jno
pop
sahf
mov
loop
dec
lahf
es
jno
sbb
xchg
repnz
dec
and
(bad)
fsubr
push
cmp
shl
mov
push
dec
daa
rol
sbb
push
xchg
adc
imul
or
clc
cmps
dec
pushf
cli
and
cmp
arpl
enter
fcomp
enter
or
pop
jmp
sub
push
hlt
ror
jno
add
rcl
cwd
cwde
add
jae
push
ja
sub
or
jns
jb
cs
mov
(bad)
mov
or
iret
mov
mov
sbb
pop
call
mov
and
addr16
sub
push
mov
jno
jmp
ror
repnz
push
jmp
popa
cmp
cmps
ret
push
call
jnp
movs
xlat
pushf
cmp
push
sti
push
adc
stc
lods
ds
cld
icebp
jle
mov
mov
fstp
xor
ret
pop
jbe
add
out
xor
or
mov
fild
jmp
std
and
je
leave
scas
lock
hlt
cmc
in
ret
icebp
cmp
push
xchg
cwde
nop
pop
sbb
pop
test
fist
jno
sbb
mov
test
inc
test
push
cmp
dec
cli
mov
enter
cmc
stos
pop
test
mov
jp
fwait
and
sbb
push
pminub
cmp
push
cmps
(bad)
retf
mov
test
aaa
mov
push
cs
or
imul
sub
fstp
aaa
xor
add
shl
sbb
or
cmp
inc
pop
pop
aaa
sbb
ins
mov
hlt
or
xchg
out
push
movs
sti
dec
outs
push
mov
jg
scas
inc
fwait
cli
add
inc
test
xchg
push
loope
stc
pop
inc
lea
cmp
or
add
cli
jbe
call
test
sbb
sub
ss
add
gs
test
cmp
inc
ror
aad
rol
xlat
sub
dec
cmp
lahf
push
xchg
pop
xchg
outs
and
mov
pop
idiv
add
or
pop
sub
cdq
ss
rcr
adc
and
xchg
bound
dec
mov
out
xchg
add
mov
inc
mov
fdiv
jge
es
shl
adc
push
sub
adc
dec
sub
xlat
cli
pushf
jb
jl
mov
inc
mov
stos
sbb
xchg
in
(bad)
cmp
outs
cmp
xor
or
add
adc
pop
inc
inc
pushf
xchg
sbb
into
push
iret
pop
mov
movs
mov
mov
push
in
lods
retf
lea
sbb
mov
test
aas
lock
jne
mov
sbb
out
int
popa
sub
ja
jecxz
add
retf
cli
or
inc
cdq
xchg
mov
or
xor
(bad)
dec
cmp
inc
jmp
xor
xchg
popf
pop
fcom
arpl
test
mov
mov
daa
loop
(bad)
xchg
add
sub
sub
aaa
test
rcr
lea
and
sub
iret
icebp
rcr
lods
jmp
movs
adc
ficom
mov
inc
div
ins
push
mov
fs
addr16
and
jl
adc
pop
test
cld
test
mov
lods
ss
jmp
xlat
cmp
stos
cmp
fistp
push
ins
xor
bound
push
fdivr
out
jle
fistp
add
mov
dec
enter
or
mov
jae
(bad)
cmps
cmps
dec
adc
mov
ret
and
cmp
push
clc
shl
or
push
std
cmps
shr
outs
jno
pop
sub
pushf
ja
popf
fwait
or
sub
cmp
pop
fstp
lea
call
(bad)
fldenv
mov
push
pop
inc
or
inc
in
in
xchg
jae
sar
sub
out
hlt
gs
stos
mov
lock
fs
clc
es
sub
sbb
cmps
movs
mov
mov
pause
into
ficomp
xor
mov
inc
xor
jmp
xor
push
outs
inc
shl
imul
mov
push
icebp
lods
mov
xor
adc
test
inc
das
in
into
outs
cwde
clc
xor
cs
mov
aaa
repnz
fsubr
cs
loop
push
les
mov
(bad)
jne
adc
mov
out
cli
sbb
retf
push
dec
cli
fwait
repz
jnp
call
in
stos
xchg
test
xlat
xchg
pop
push
pop
aaa
idiv
cmp
(bad)
jp
popa
inc
lahf
outs
or
mov
add
imul
icebp
sbb
mov
lahf
xchg
xchg
call
out
jle
push
call
jecxz
dec
das
pop
rcr
imul
mov
lods
sbb
jo
or
or
push
jecxz
dec
psubq
hlt
fdivr
xchg
dec
or
pop
xor
and
pop
aas
out
push
dec
or
sar
aam
jbe
ins
shr
jb
cmp
(bad)
outs
add
out
inc
sar
mov
out
aam
mov
mov
pop
push
sbb
lahf
movs
in
and
call
sar
sub
adc
sub
mov
imul
fs
mov
jle
hlt
ds
jp
sub
mov
mov
mov
movs
xchg
arpl
fbld
(bad)
dec
mov
and
loop
lock
sub
xor
shl
call
push
in
cmp
or
inc
fisttp
jle
and
dec
je
and
in
mov
lahf
adc
and
bound
jl
sub
test
xor
push
add
xchg
push
add
or
stos
int
into
push
xor
inc
dec
movs
mov
mov
add
xchg
aad
jp
ror
bnd
ja
ds
jle
mov
test
les
jo
xlat
mov
das
cmp
mov
jne
sub
inc
push
call
inc
or
mov
mov
sbb
dec
pop
scas
or
push
and
jmp
push
xchg
fcom
and
dec
cwde
xchg
and
xchg
push
mov
xchg
sub
push
inc
mov
scas
hlt
or
push
inc
out
fnsave
ds
dec
sbb
push
aas
inc
dec
add
es
cs
into
sub
jns
mov
outs
es
stos
sub
test
fidiv
test
cdq
fcmove
iret
ss
push
gs
pushf
jmp
add
cli
cmc
mov
mov
push
sbb
mov
(bad)
add
jmp
mov
rol
or
les
push
sar
sbb
dec
pop
clc
jnp
push
sbb
inc
jbe
dec
lds
push
push
outs
jecxz
enter
mov
xor
xchg
sub
sub
imul
test
int
jns
fiadd
je
mov
bound
and
enter
pop
cmp
sbb
cld
push
dec
fcom
push
xor
arpl
repnz
ins
mov
cs
call
nop
jecxz
outs
clc
ja
test
push
out
outs
and
in
sbb
mov
sbb
lahf
jb
daa
push
(bad)
xor
push
sub
outs
xor
lahf
ror
stc
sub
add
add
add
sub
jmp
pop
lods
dec
repnz
clc
push
jle
fld
fstp
mov
into
leave
inc
and
or
(bad)
cwde
adc
ds
or
je
and
cld
sbb
outs
in
cmp
cmp
sbb
cmc
mov
jp
push
(bad)
xchg
inc
shl
or
sahf
stos
sbb
dec
xlat
inc
xchg
add
pop
cmps
ins
jmp
xchg
jecxz
inc
aas
ja
in
sti
pop
fwait
mov
cmp
xor
and
pop
fldcw
bound
daa
sbb
popf
repz
icebp
aaa
mov
pop
push
push
add
pop
lock
cwde
test
mov
lahf
mov
or
push
dec
ins
out
call
xor
outs
ds
mov
pop
mov
ret
(bad)
sbb
in
outs
test
cwde
and
fld
test
mov
lods
add
adc
ins
jne
cmp
xchg
and
mov
stos
inc
add
frstor
adc
mov
fld
xchg
enter
ret
ret
mov
push
loop
or
or
and
sar
jo
stos
movs
arpl
icebp
pop
mov
pop
sub
iret
push
jno
lea
ret
sbb
sahf
xchg
stc
shl
cmp
adc
mov
ret
cli
push
xor
xor
outs
cwde
dec
cwde
test
dec
call
xchg
sar
adc
mov
imul
inc
leave
sbb
mov
mov
push
mov
les
les
ja
sbb
into
sbb
and
gs
and
pop
xchg
cmp
imul
fsubr
dec
fmul
(bad)
fisub
hlt
xchg
loopne
int
or
test
pop
push
outs
or
iret
retf
jnp
js
lahf
add
sub
xchg
pop
(bad)
pop
cld
inc
mov
hlt
cwde
sbb
dec
xchg
cld
add
dec
cmp
sti
fisub
fs
stos
scas
xor
mov
or
push
xor
cmps
jno
aam
dec
mov
inc
xlat
jmp
iret
ficomp
sub
mov
dec
sbb
int
retf
add
imul
and
cmp
stc
retf
(bad)
jmp
je
lea
xchg
cdq
mov
lods
sub
mov
scas
rcl
das
jns
push
test
or
fwait
pop
cmp
iret
jecxz
sbb
cmp
cmps
movs
or
pop
jg
mov
stos
in
cmp
outs
movs
cmps
fdiv
mov
enter
jp
scas
mov
in
es
retf
mov
jb
adc
call
sahf
xchg
and
xchg
sbb
cmp
sub
jecxz
pop
leave
in
or
ret
push
push
leave
ret
pop
jmp
sub
xchg
(bad)
enter
popa
inc
cmp
(bad)
xor
inc
fndisi(8087
push
jmp
xchg
xchg
movs
dec
or
sbb
sti
addr16
ins
test
(bad)
repnz
pop
movs
stc
push
aad
jmp
(bad)
xchg
sub
dec
sbb
xor
js
jg
cmp
pop
fldcw
or
shl
mov
rcr
repz
jp
add
mov
mov
jl
in
pop
pop
or
in
jne
bt
call
xor
(bad)
sub
or
cli
push
mov
inc
or
dec
cmp
adc
shl
sub
and
dec
push
pop
dec
adc
out
aaa
jns
ss
push
mov
dec
lea
loopne
cmp
cmp
addr16
sbb
xor
mov
sub
sti
rcl
cmp
cdq
xlat
or
shr
xchg
add
pop
shl
into
popa
and
es
mov
mov
or
mov
aam
xchg
and
xlat
dec
test
(bad)
or
mov
mov
stos
retf
jge
cdq
loope
adc
nop
xchg
ins
pusha
repz
cmps
arpl
neg
adc
hlt
xchg
cmps
inc
lock
lea
cmc
je
or
xchg
and
push
adc
aaa
not
sub
mov
call
pop
push
jl
(bad)
int
(bad)
push
lea
sub
adc
icebp
loope
loope
cs
and
push
aas
mul
xor
iret
push
idiv
adc
pop
mov
arpl
adc
iret
jne
retf
xchg
adc
add
mov
test
inc
arpl
adc
sub
rol
in
pop
lods
xchg
cmps
movs
arpl
pop
out
xor
adc
jno
pop
pop
ret
dec
mov
or
pminub
sar
mov
jo
mov
in
pusha
fild
mov
or
mov
les
and
repnz
rcl
jbe
sub
dec
jo
add
cmp
enter
jmp
dec
push
hlt
and
jno
fist
pop
std
rol
hlt
dec
std
imul
aam
ret
push
jl
sahf
jmp
xor
clc
add
imul
jo
jo
popf
xor
cmps
xor
aad
iret
pop
and
fcomp
mov
cld
or
call
jge
jge
or
mov
cmp
xchg
mov
jne
jne
in
sbb
fs
jno
cmp
sub
jmp
daa
in
fs
jno
outs
aam
gs
aas
(bad)
ins
inc
add
inc
rcr
push
sbb
jmp
dec
add
sub
pop
loopne
inc
jno
mov
mov
cwde
mov
sbb
lahf
(bad)
lods
inc
cld
cs
jns
int3
test
call
das
sub
mov
movs
jno
pop
clc
xchg
dec
retf
outs
xlat
(bad)
fcmovne
adc
xor
cmps
call
or
pop
imul
push
mov
in
icebp
sub
adc
adc
ins
add
nop
mov
mov
data16
xchg
pop
dec
cdq
stos
test
mov
imul
(bad)
(bad)
cli
arpl
sahf
mov
aad
repz
jne
mov
inc
xchg
sbb
bnd
sub
aam
ins
mov
cvtdq2ps
pop
bound
xor
jl
xchg
lds
je
fwait
aas
leave
jl
inc
popf
mul
movs
in
dec
add
jo
mov
sbb
aam
push
push
xchg
push
(bad)
xlat
and
jno
test
pop
pop
retf
es
adc
daa
shl
sar
pop
sbb
stc
test
jge
test
sbb
mov
movs
rcl
xor
rcr
in
movs
or
jl
cmp
and
pop
test
inc
out
sbb
jmp
ja
out
sahf
xor
sub
cmp
pusha
imul
adc
jp
sub
pop
ds
jecxz
arpl
test
add
scas
into
mov
and
gs
mov
mov
xlat
repz
psraw
(bad)
ror
cmps
and
or
(bad)
mov
call
mov
into
xor
arpl
(bad)
mov
or
mov
enter
repnz
jle
pop
outs
ds
std
push
leave
sub
std
push
mov
lahf
jbe
mov
mov
js
mov
in
jb
loope
retf
ds
loop
(bad)
pushf
adc
xor
lahf
test
push
adc
and
int
sahf
push
xor
ds
shl
(bad)
(bad)
mov
cmps
pop
push
adc
cmp
mov
cmps
cli
dec
ret
arpl
push
xor
and
int3
test
fcmovnu
jbe
xchg
inc
dec
out
push
mov
cli
cmp
ror
add
pop
push
pop
jns
popf
mov
lock
adc
jnp
add
aam
sbb
hlt
loop
leave
repnz
ret
pushf
jmp
dec
lea
mov
mov
cmps
ins
and
sub
push
js
or
sub
dec
xchg
mov
bound
in
cmps
xchg
jo
hlt
nop
push
stc
out
dec
or
fnstenv
das
dec
push
jmp
imul
or
and
mov
push
mov
xchg
xor
(bad)
cwde
repz
dec
sbb
addr16
jmp
dec
fxch
dec
push
dec
call
push
mov
es
sbb
shr
ror
stos
sbb
retf
jge
cld
ins
mov
cli
es
cwde
sub
mov
cld
dec
popa
fist
jb
and
inc
out
sbb
hlt
sbb
gs
pop
cmc
sbb
cwde
or
push
xor
sub
lods
xchg
or
(bad)
(bad)
sbb
push
in
enter
ss
jno
mov
xchg
xor
in
inc
nop
jbe
lea
pop
cmp
out
lahf
push
in
dec
cld
aaa
sar
inc
sbb
inc
cmc
js
or
or
jae
dec
sbb
movs
leave
jecxz
sub
sbb
enter
xor
mov
imul
imul
and
inc
mov
push
mov
loopne
push
popf
cli
push
(bad)
ret
adc
icebp
jae
cmp
fisub
aam
sahf
inc
leave
jmp
ins
outs
test
in
sbb
fistp
cmp
xchg
xor
in
cmp
lahf
hlt
in
shl
fs
rcl
push
pop
dec
out
cmp
pushf
cmp
dec
cld
les
inc
test
dec
pop
jns
xchg
adc
or
xor
sub
ret
add
je
gs
add
mov
out
xor
fldl2e
jae
test
xchg
sti
adc
daa
and
cmp
repz
push
dec
(bad)
and
(bad)
ins
cwde
inc
and
(bad)
mov
add
mov
cmp
mov
mov
iret
(bad)
mov
sub
in
mov
shl
xchg
cmp
loopne
sub
(bad)
sbb
inc
popf
sub
inc
mov
add
mov
jl
aas
into
ins
ja
cld
xor
mov
shl
jmp
inc
retf
das
(bad)
cmp
retf
push
iret
sbb
pop
xbegin
ins
inc
mov
lock
adc
call
icebp
mov
or
mov
inc
into
jmp
outs
mov
or
jae
(bad)
fwait
jbe
call
int3
and
inc
sub
inc
xlat
mov
and
sbb
scas
in
cmp
fiadd
std
fdiv
outs
xor
rol
arpl
ret
mov
movs
in
xchg
jns
js
iret
out
test
scas
call
imul
jae
test
iret
int3
dec
sahf
xchg
fiadd
clc
jmp
sub
push
and
cmc
loope
jmp
sbb
fcom
adc
mov
aas
stos
int3
ja
sbb
leave
mov
jmp
loopne
push
outs
cwde
sub
cs
sti
jmp
and
gs
and
dec
xchg
xchg
xchg
mov
in
add
and
cdq
fsubr
retf
mov
retf
in
cmp
call
mov
add
pusha
mov
frstpm(287
pop
aam
jb
sbb
mov
frstor
ret
leave
push
jl
test
gs
xchg
mov
xchg
jl
sbb
out
inc
inc
push
mov
xor
push
mov
jno
jmp
cld
aam
in
(bad)
jle
and
inc
jecxz
je
xlat
push
or
shl
je
xor
rcr
sbb
cmp
dec
add
jg
or
and
dec
mov
jmp
sti
idiv
xor
cmp
(bad)
pop
xor
dec
clc
popa
fisub
(bad)
xchg
int3
mov
bound
or
pop
mov
(bad)
jg
mov
sbb
test
xchg
enter
ror
out
idiv
out
xchg
out
pop
dec
cmp
inc
sbb
rsm
push
cmp
test
push
loop
sbb
popa
adc
mov
outs
out
dec
sahf
out
mov
mul
cld
sub
xchg
arpl
dec
inc
dec
adc
or
sbb
inc
shr
cmp
inc
lea
sti
sub
fst
mov
pop
pop
mov
repnz
xchg
in
mov
dec
pop
dec
jb
jns
inc
pop
loope
or
movs
mov
mov
or
cdq
sbb
jg
cs
dec
aaa
add
out
inc
pop
out
cdq
lock
iret
sbb
push
test
ror
mov
mov
inc
popa
mov
fwait
pushf
repnz
push
jns
jge
or
call
jo
or
mov
and
xchg
jb
sahf
sbb
pushf
sbb
stos
pop
push
and
fwait
inc
call
and
adc
(bad)
daa
sar
out
fwait
pop
jmp
jecxz
cs
add
gs
out
sar
vpsrlq
(bad)
cwde
sbb
adc
repnz
daa
mov
cmp
mov
xsave
loop
push
ja
cmp
sub
push
rcr
(bad)
iret
cld
and
sbb
(bad)
mov
pusha
xchg
jmp
repz
pop
sbb
jmp
sti
sub
lahf
add
call
xchg
adc
or
pusha
mov
retf
and
out
or
(bad)
xor
sub
fcmovnu
push
dec
mov
mov
push
aad
cdq
add
aas
bound
push
pop
ror
pop
mov
xchg
jg
cmp
push
nop
mov
cmps
xchg
mov
std
push
iret
xchg
shl
xchg
stos
fucomp
jnp
push
and
xchg
shl
inc
mov
push
aas
mov
sub
iret
jge
jae
sub
scas
scas
mov
arpl
into
(bad)
push
adc
xlat
pop
mov
adc
dec
movs
pop
mov
fld
test
enter
fwait
push
mov
ins
pop
jbe
mov
out
retf
cli
push
jmp
xchg
jp
push
pushf
mov
cli
push
jmp
cmp
inc
xor
jb
mov
mov
sbb
inc
shl
add
dec
xchg
dec
shl
fidivr
pop
fcomp
leave
cmpps
out
cli
seta
in
js
loop
bound
sbb
add
loop
test
pop
xchg
ret
scas
fdivr
aad
mov
add
dec
mov
jnp
dec
mov
jbe
inc
mov
mov
out
mov
test
or
ja
push
sar
cwde
dec
jmp
(bad)
mov
out
pusha
jecxz
movs
xchg
mov
mov
mov
and
cmp
xor
cld
repnz
call
push
or
fist
(bad)
push
and
test
mul
outs
sub
mov
cmp
scas
test
in
(bad)
cli
mov
aas
test
ret
fidivr
jb
mov
adc
lahf
cmps
jl
les
ret
dec
xchg
xor
pop
shr
pusha
mul
(bad)
adc
xor
adc
jmp
leave
movs
mov
stc
cs
repz
in
pushf
jp
jle
cmps
les
mov
jno
lods
cmp
dec
test
cmp
clc
xchg
xchg
or
push
mov
sub
and
push
fwait
cld
mov
(bad)
outs
scas
and
add
and
sub
sbb
xchg
pushf
push
mov
sub
push
int3
jno
sbb
mov
(bad)
outs
mov
fsub
fdiv
or
sbb
or
mov
xchg
out
das
xor
sbb
xchg
movs
adc
in
dec
dec
ins
bound
popa
jo
pop
gs
fldl2t
push
rcl
scas
leave
aas
and
hlt
or
sub
aas
and
loope
xchg
sbb
mov
xchg
(bad)
mov
and
mov
xlat
retf
jo
mov
dec
xchg
dec
test
push
movs
inc
call
cmc
cs
ja
retf
mov
out
inc
mov
icebp
and
add
out
test
ret
mov
mov
inc
js
arpl
or
xor
enter
adc
add
and
and
add
jg
mov
outs
cld
adc
dec
adc
adc
mov
sbb
out
stos
js
and
ficom
into
add
sub
mov
jmp
and
and
hlt
or
retf
int
test
pop
iret
es
push
into
fist
xchg
ret
fmulp
out
les
xor
sahf
mov
dec
sbb
fcom
cmp
cwde
ins
aam
jle
jb
mov
(bad)
mov
in
retf
add
and
leave
add
fsub
sbb
cli
jecxz
out
(bad)
aad
scas
fsub
xchg
push
or
push
fild
jae
and
(bad)
push
sbb
in
(bad)
adc
shr
mov
xchg
inc
adc
mov
inc
adc
enter
cmp
cmc
mov
sar
imul
ins
sbb
jmp
cwde
mov
xor
call
je
push
hlt
outs
jne
scas
fnstcw
push
mov
ins
rcr
retf
rdpmc
popf
or
fld
and
mov
mov
nop
mov
in
add
push
bound
mov
(bad)
jecxz
pop
daa
(bad)
ret
gs
test
xor
call
in
das
sub
xchg
push
mov
in
cmp
hlt
push
cdq
push
xor
xchg
hlt
fsubr
mov
inc
int3
mov
ds
mov
push
pop
(bad)
cmp
div
ret
inc
or
adc
popf
dec
fnstcw
add
cs
xchg
in
fisttp
xor
dec
dec
in
xchg
enter
dec
push
out
lahf
push
stos
cmp
cs
or
xchg
pop
(bad)
cmc
mov
stos
or
gs
imul
mov
jg
xchg
lahf
cdq
mov
(bad)
stc
out
movs
cs
dec
push
arpl
xor
std
enter
xchg
cdq
dec
(bad)
fistp
movs
mov
ds
mov
xlat
add
iret
jmp
xchg
stc
mov
scas
clc
ss
stc
fstp
xchg
sbb
aaa
add
dec
mov
push
pop
and
into
sar
out
in
mov
sub
mov
jns
(bad)
in
hlt
(bad)
mul
(bad)
dec
imul
out
xchg
shr
sub
and
cmps
mov
call
into
or
pop
les
movs
addr16
fcmovb
sar
pop
sub
shl
mov
test
push
clc
jbe
retf
lods
test
das
jecxz
inc
mov
sbb
pop
in
mov
int3
lods
std
mov
lss
ficom
fcmovnb
add
sti
sbb
retf
mov
add
jge
sub
adc
imul
retf
shr
je
sub
add
jbe
mul
pop
gs
and
(bad)
push
mov
mov
mov
fwait
shl
inc
add
mov
mov
xor
push
fsub
inc
and
adc
dec
sub
inc
nop
add
jg
mov
das
(bad)
enter
jge
rol
push
mov
into
or
mov
xchg
test
mov
add
sub
inc
jnp
cmp
jmp
ins
data16
mov
sub
dec
cmp
dec
inc
cmp
cs
cmp
lods
or
dec
xchg
or
(bad)
mov
jbe
ja
pop
test
fs
jbe
pop
xlat
mov
jnp
(bad)
pop
fcmovb
sub
push
les
and
mov
nop
jge
adc
rcl
or
aam
into
jp
jmp
jle
xchg
mov
js
xchg
aad
js
(bad)
fwait
icebp
les
cmp
std
mov
xor
sbb
inc
adc
scas
add
or
fadd
inc
mov
call
not
sbb
outs
push
pusha
(bad)
pop
pusha
imul
fild
rcr
xor
(bad)
outs
push
cmp
add
nop
test
clc
and
add
mov
lods
sub
jb
cmps
cmps
mov
push
pop
fld
mov
cmp
loopne
test
int
pusha
imul
dec
push
or
pusha
dec
aam
sub
add
mov
jb
jp
stos
xchg
push
mov
sub
ins
pop
push
push
mov
or
push
nop
(bad)
adc
scas
js
ja
jne
sub
out
inc
sysret
fwait
mov
movs
add
in
dec
jp
stos
(bad)
ss
std
jne
add
outs
xor
js
pop
pop
int3
stc
cmp
shr
lock
ins
mov
mov
pop
ror
mov
cs
pop
aaa
xchg
pop
in
adc
js
aad
jle
mov
mov
adc
cwde
iret
pop
jmp
cmp
fwait
inc
and
push
(bad)
inc
jns
cmp
(bad)
jmp
sbb
hlt
cmp
fidivr
push
mov
jbe
dec
cmc
push
inc
mov
sbb
xor
cdq
aaa
jbe
in
mov
and
jmp
mov
outs
jp
mov
rcl
xchg
dec
pushf
sub
or
stos
in
loop
mov
mov
icebp
inc
bound
xor
adc
shl
inc
mov
pop
scas
int
sbb
out
or
test
mov
inc
dec
jne
xor
sar
test
(bad)
inc
inc
mov
es
sbb
add
cmp
pop
retf
mov
iret
mov
ins
cmp
fbstp
sub
iret
adc
in
les
outs
or
jmp
dec
dec
aaa
mov
jmp
sbb
mov
sub
int3
xor
out
lods
jg
add
stos
adc
into
xchg
je
popa
popf
jo
add
push
add
jbe
out
and
cwde
cmc
mov
mov
xchg
addr16
pop
in
pop
mov
sub
(bad)
mov
in
test
rcr
mov
popf
push
idiv
cs
mov
popf
cli
mov
xor
test
push
call
cmps
or
sub
xlat
(bad)
mov
out
out
lea
pop
xor
xor
pop
add
inc
addr16
mov
loopne
mov
fiadd
aad
mov
inc
and
hlt
call
aam
movs
and
mov
jecxz
in
inc
daa
dec
(bad)
(bad)
jl
push
dec
dec
dec
sti
bnd
xor
xor
les
lea
out
or
cwde
sub
xor
jnp
push
sbb
mov
hlt
scas
(bad)
(bad)
adc
add
(bad)
addr16
jne
inc
sbb
call
in
es
pop
cli
cld
(bad)
jecxz
dec
sub
ret
stc
pop
and
cmp
retf
rol
pop
jl
push
fmul
or
ds
cmc
cmc
sub
inc
retf
(bad)
ss
out
xor
ins
jg
pop
fnstenv
jle
sbb
mov
jl
cmc
and
ins
jmp
mov
js
adc
dec
xchg
jbe
aaa
loope
addr16
sub
add
lock
cmp
fild
into
cmc
or
xor
mov
dec
outs
mov
dec
jo
out
je
rcl
retf
retf
fimul
rcr
xor
retf
jmp
lock
jno
hlt
push
or
push
push
leave
arpl
sti
shl
dec
call
jnp
sub
ins
div
mov
mov
fld
add
sub
mov
push
fisubr
cmp
xor
inc
adc
sar
lea
sbb
mov
fisubr
(bad)
out
jnp
mov
xor
inc
jbe
add
inc
fdivr
add
out
cmp
stos
fldcw
mov
fmul
dec
das
mov
push
in
jge
call
stos
add
and
retf
sti
or
out
cmc
out
mov
stc
lods
cmp
xchg
xchg
or
fsubr
xlat
ins
or
push
cmps
cmp
lahf
mov
movs
and
and
jnp
dec
inc
ins
jns
xor
or
aad
(bad)
push
and
and
push
pop
loop
jo
cld
in
les
adc
sbb
mov
and
mov
aam
rol
lea
sti
inc
push
icebp
mov
fsubr
enter
add
jne
stos
inc
and
je
rcl
pop
mov
jl
jne
dec
popa
test
dec
(bad)
cs
sbb
ret
jnp
dec
and
and
inc
pop
sub
mov
ror
mov
mov
mov
mov
lods
popa
outs
sub
pusha
or
stos
add
sub
ret
push
or
xchg
xchg
and
mov
sbb
xchg
add
or
ror
cs
in
push
pop
or
les
test
into
pop
mov
or
lock
out
adc
int3
sub
push
adc
mov
push
push
xchg
add
cmps
adc
rcl
jo
and
mov
sbb
xchg
add
or
ror
or
mov
mov
retf
add
pop
es
push
pop
sbb
cmp
xor
popa
inc
xor
xor
(bad)
iret
call
dec
sahf
popf
and
jge
mov
mov
jge
sub
add
jae
xor
sub
in
mov
jns
pop
cmc
sahf
in
movs
sbb
mov
stos
cli
cmps
cwde
mov
lock
in
pushf
je
mov
cld
int3
sbb
inc
mov
cmps
cmp
test
data16
sbb
test
push
sbb
xchg
fwait
mov
add
(bad)
test
push
rcr
test
mov
fcomp
push
stos
imul
stc
sbb
shr
jbe
xor
sbb
adc
cmp
out
es
mov
jg
push
int3
pop
add
pop
cmp
adc
loop
sbb
cmp
mov
pop
mov
sub
ja
arpl
and
mov
sub
inc
cmp
fistp
push
and
es
in
hlt
ss
jl
dec
adc
jae
lods
lds
stos
lds
(bad)
retf
js
outs
pusha
inc
ss
xchg
dec
in
and
sbb
push
je
add
cdq
xor
ins
mov
pop
cmp
sbb
out
dec
int3
sbb
les
in
loop
push
shl
mov
mov
js
xor
stos
push
inc
bound
mov
cmp
xchg
mov
mov
xchg
mov
neg
repz
ret
dec
(bad)
int3
stc
mov
lods
or
adc
scas
cmp
adc
lods
ror
pop
nop
out
inc
sbb
add
pop
ja
push
adc
jne
mov
nop
push
jl
pushf
push
js
imul
test
xor
aaa
cmp
out
cmp
pop
aam
sbb
mov
mov
pop
cmp
ins
xor
cmc
push
lahf
xor
aaa
sar
add
int3
movs
and
icebp
pop
inc
cli
(bad)
(bad)
aad
adc
call
xchg
shl
cmp
cmp
dec
mov
add
retf
mov
mov
ret
dec
sbb
xchg
jns
xchg
int
sbb
idiv
enter
mov
dec
pop
jle
xor
mov
sbb
cwde
sbb
add
and
dec
outs
push
mov
adc
sbb
push
push
psubusw
jge
icebp
pop
jge
pop
imul
shr
push
ret
or
push
jg
dec
xor
sub
cmp
jecxz
jb
sar
rol
sub
mov
adc
push
xchg
jns
mov
add
retf
sub
xchg
add
nop
mov
adc
out
adc
(bad)
stos
pop
mov
loop
dec
stos
sbb
loop
push
fwait
scas
cmp
ja
out
sbb
push
dec
imul
mov
pop
aas
lods
sbb
mov
mov
sbb
or
js
adc
(bad)
jb
or
or
in
(bad)
sbb
ins
loop
sub
shl
xchg
rcr
sub
test
movs
or
or
inc
retf
mov
mov
imul
or
shr
ja
xchg
ret
add
xor
(bad)
push
adc
(bad)
lock
sbb
ret
cmp
pop
mov
inc
retf
out
pop
inc
inc
lahf
stos
pop
dec
push
(bad)
ror
pusha
or
push
cmp
into
sbb
mov
cld
cmp
xchg
(bad)
lock
mov
repnz
jge
pop
ficom
add
add
jae
test
jmp
pop
xor
std
ins
add
and
pop
cdq
inc
mov
loopne
call
movs
repnz
push
in
in
inc
in
addr16
dec
adc
movs
mov
xchg
out
popf
inc
popa
fild
mov
cmp
aam
pop
mov
fs
(bad)
inc
jg
push
jp
(bad)
mov
fdiv
iret
xchg
adc
sub
fs
in
and
xchg
stos
ja
mov
(bad)
cmc
call
test
and
mov
or
mov
xor
mov
sbb
ror
dec
add
mov
out
adc
(bad)
push
pop
repz
pop
mov
out
mov
out
(bad)
jle
test
ss
add
push
xor
inc
fild
outs
cmp
xor
sbb
and
cmps
leave
movs
movs
pop
fdivr
sub
dec
or
mov
test
nop
ja
dec
sbb
pop
jno
and
pop
scas
mov
push
push
fsubr
sbb
out
js
xor
or
outs
pusha
call
jle
jne
dec
xchg
fs
sbb
pop
call
aad
into
lods
or
daa
lods
addr16
mov
les
ret
cmp
repz
adc
sbb
push
lds
or
adc
cmps
push
xchg
cmp
sub
mov
pop
and
call
imul
mov
adc
mov
add
aad
xor
xchg
in
cmps
mov
jl
mov
js
adc
pop
movs
inc
cdq
add
cmp
addr16
mov
jne
nop
ret
cmp
pop
push
and
pop
cmc
addr16
fstp
clc
aaa
dec
or
cmps
and
call
lds
dec
fs
inc
(bad)
push
out
cdq
movs
pop
mov
adc
ja
mov
sub
fisubr
mov
pop
mov
out
rcr
sbb
fidiv
cmp
jp
fmul
push
mov
mov
fcmovne
mov
call
mov
(bad)
shr
pop
adc
icebp
bound
gs
xchg
sahf
xchg
sub
jecxz
jo
loopne
popf
cmps
aaa
xchg
fwait
and
adc
sbb
cld
outs
mov
out
sbb
repnz
std
jp
sub
mov
cmp
and
mov
in
jbe
cmp
push
repnz
sbb
inc
or
cmp
lds
mov
stc
lods
push
add
repz
stc
adc
push
or
movs
mov
xchg
xor
sub
xor
cmc
aaa
clc
xlat
call
add
mov
push
retf
(bad)
popa
lods
mov
aaa
loope
int3
sbb
xchg
xor
dec
(bad)
push
or
add
retf
inc
sbb
xchg
js
dec
jne
add
cmp
(bad)
adc
out
cmp
mov
mov
jge
das
and
in
pop
sahf
mov
pop
pop
xor
test
xor
mov
and
xchg
das
lods
mov
jg
adc
add
retf
int
addr16
es
xchg
sti
loope
das
mov
icebp
inc
jnp
outs
imul
cmp
imul
adc
push
cdq
das
mov
popa
jns
retf
jle
push
dec
movs
push
xchg
rol
adc
xor
or
xchg
and
adc
pop
into
call
mul
pop
dec
les
scas
sbb
jae
mov
sahf
or
mov
ja
aaa
xchg
mov
dec
(bad)
mov
mov
jo
or
mov
loopne
xor
icebp
cwde
pushf
push
cs
mov
mov
mov
adc
jmp
cmc
mov
add
clc
pop
ret
in
fcmovnb
fwait
js
xchg
push
xchg
or
add
or
popa
fnstsw
cs
pop
inc
push
fisubr
push
dec
push
fs
dec
push
test
dec
add
inc
dec
loopne
mov
je
mov
imul
cdq
dec
retf
push
rcr
push
inc
or
cdq
jge
pop
into
outs
dec
mov
not
pop
push
xchg
xor
outs
add
mul
dec
ins
jl
sbb
outs
xor
sbb
pushf
rcr
fcmovnb
sub
sub
call
rol
ins
loop
outs
or
pop
ss
aam
push
jo
push
dec
std
addr16
leave
inc
add
inc
cmp
es
out
mov
xchg
xor
jmp
mov
ret
les
dec
pop
cmp
jle
pop
sbb
xor
iret
add
adc
xor
int
sbb
cmp
inc
mov
dec
int
lock
mov
fld
sbb
retf
sbb
push
hlt
jno
or
stos
xchg
mov
push
xchg
div
sbb
jle
fwait
sub
jnp
mov
pop
sbb
sub
add
xchg
push
pop
mov
mov
rol
and
mov
xor
lahf
jbe
fnstsw
sbb
fld
sub
(bad)
cmp
pop
add
adc
adc
xchg
(bad)
out
stc
outs
or
push
fwait
ins
mov
pop
call
xor
fwait
addr16
mov
pop
or
xor
addr16
push
mov
jecxz
cmp
adc
test
addr16
and
stc
dec
pop
jle
rol
dec
aaa
mov
mov
repz
sbb
ffree
or
push
sub
pop
movs
or
xchg
mov
jb
push
lock
ficomp
div
cdq
adc
xor
mov
fbld
into
es
mov
enter
xchg
sbb
sahf
pop
lods
mov
push
xor
mov
popf
push
add
cs
adc
(bad)
imul
xchg
add
retf
mov
ror
xchg
pop
ss
mov
les
hlt
adc
repz
cmps
cmp
push
cmps
std
or
imul
pop
mov
mov
scas
jle
fstp
add
mov
push
jmp
adc
pushf
mov
xchg
adc
and
add
sbb
cmp
xchg
or
xlat
jno
mov
stc
add
or
xchg
xchg
mov
rcr
inc
aas
sbb
cli
imul
sbb
sbb
inc
imul
call
aam
pop
dec
scas
xchg
push
pop
das
or
or
push
and
shl
push
mov
and
xchg
movs
jp
adc
mov
or
shl
inc
xchg
enter
push
sub
hlt
loopne
in
xor
repnz
push
pop
scas
push
or
cli
rcr
sub
imul
cmp
xchg
ficom
mov
ror
mov
std
xchg
or
out
inc
pushf
adc
addr16
cmp
or
adc
dec
retf
mul
sub
cmps
pop
mov
popa
mov
cld
add
mov
ret
retfw
int3
lea
and
daa
pop
mov
out
add
lods
push
push
jp
push
push
(bad)
lock
mov
out
push
outs
mov
mov
inc
sbb
xchg
push
arpl
jge
sub
shr
and
add
inc
(bad)
je
cmp
fsubr
dec
mov
ja
aam
inc
ins
sbb
xchg
movs
sbb
or
lods
int
inc
sbb
(bad)
jne
jnp
push
inc
sbb
xchg
loope
pop
ret
cmp
pop
aam
inc
sbb
xchg
mov
cmovs
out
scas
out
cmps
dec
pop
in
scas
cld
mov
mov
adc
gs
fwait
or
das
xchg
mov
mov
arpl
cmp
cmp
dec
jle
test
fsub
call
fnop
mov
ss
mov
mov
inc
or
lods
in
in
or
arpl
cld
imul
and
retf
aam
int
sti
sti
inc
dec
inc
push
adc
pop
dec
into
inc
popf
jp
xchg
pusha
pop
jo
js
mov
fwait
pop
mov
adc
add
xor
aam
push
inc
dec
pop
dec
outs
sub
adc
sbb
frstor
xchg
mov
mov
push
or
fsubr
ret
dec
sbb
jno
pushf
aas
sahf
cmp
aaa
jg
sbb
add
xchg
adc
ins
enter
or
lock
inc
ja
mov
cld
jg
mov
dec
call
(bad)
movs
loop
cmp
addr16
dec
leave
mov
inc
sub
push
test
popa
(bad)
xor
xchg
add
jns
jbe
les
cld
loope
sbb
(bad)
sti
fcmovne
sti
lods
pushf
jne
xchg
sub
retf
xchg
dec
cmps
push
test
fld
sub
shl
sar
cmp
or
mov
xor
mov
aaa
stos
mov
push
stos
dec
fdivr
jnp
das
cmp
retf
shl
push
sub
mov
xchg
xchg
scas
pop
xchg
sub
dec
sub
ja
or
ja
aas
shl
cmps
ror
sbb
vpextrw
lds
inc
or
inc
mov
je
out
out
fist
push
retf
jle
cs
mov
lock
popa
nop
add
jo
popa
mov
lea
loop
jnp
gs
cwde
outs
mov
into
sbb
xchg
ins
and
es
test
mov
int
sbb
dec
dec
into
dec
pushf
addr16
add
push
or
adc
dec
xor
lds
jge
sub
cmp
retf
lods
lahf
cmp
sbb
jo
or
jmp
enter
push
mov
cmc
lea
sbb
rcr
dec
aas
add
repz
pop
repz
sbb
fimul
cmps
inc
int3
xchg
(bad)
cli
xor
xchg
push
lahf
fisttp
fptan
jnp
ss
push
pop
ds
mov
rcl
out
add
cmpxchg
test
or
loope
inc
sub
(bad)
mov
jl
mov
xor
pop
inc
push
mov
xchg
pop
loope
fcomp
xchg
mov
push
movs
aam
das
mov
adc
dec
jbe
dec
add
das
or
pusha
int3
push
mov
les
fwait
xor
icebp
or
ins
in
xor
(bad)
hlt
sub
adc
enter
or
dec
ficom
fsub
sub
push
hlt
xor
lock
aad
shr
ror
sbb
jae
outs
jge
jg
pusha
(bad)
or
push
js
inc
ds
ja
sub
or
mov
add
je
jnp
sbb
adc
les
iret
push
outs
or
or
inc
adc
iret
ja
xor
dec
mov
inc
add
or
mov
jmp
pop
dec
pop
jbe
dec
pop
daa
jne
movs
and
pop
fs
icebp
clc
stos
dec
mov
xor
add
iret
dec
rcl
lea
and
in
in
scas
push
mov
fist
mov
mov
aaa
xchg
scas
les
xchg
xor
pop
push
nop
enter
or
mov
mov
mov
mov
jo
test
mov
xchg
aad
mov
(bad)
imul
inc
sbb
sbb
push
xor
ja
sahf
fbld
sbb
ds
lods
fcomp
pop
cmps
xor
fadd
loope
push
mov
sbb
ret
mov
sbb
mov
or
add
sub
pop
sub
imul
cwde
add
sti
in
pop
sub
in
call
int3
(bad)
int3
pushf
imul
and
mov
hlt
or
xchg
enter
or
loope
add
push
jae
mov
daa
dec
nop
popf
ret
xor
arpl
inc
fs
movs
jmp
ret
lock
ins
xor
cmps
test
bound
mov
mov
xchg
inc
mov
xchg
push
mov
push
mov
cli
and
push
test
sar
push
or
push
xor
fs
ss
fcom
mov
jge
mov
stos
xchg
icebp
test
dec
push
in
cs
push
in
ror
mov
loop
pusha
ret
push
adc
fdivr
xlat
sub
xchg
icebp
ret
out
pop
daa
jns
inc
cmp
in
loop
jb
hlt
fstp
sub
fstp
call
dec
cmova
xor
inc
pop
jmp
ror
add
retf
(bad)
adc
(bad)
nop
mov
mov
in
in
lods
test
xchg
imul
and
mov
sbb
cwde
push
out
shr
pop
cmp
rol
push
adc
sub
arpl
pusha
stos
setnp
cmp
iret
xor
mov
cld
xor
push
or
ins
mov
add
gs
pop
int3
xchg
sahf
fisttp
inc
(bad)
or
or
sub
push
sub
sub
pop
retf
adc
js
dec
cmp
pop
vpaddusw
inc
in
(bad)
mov
sub
jo
or
mov
aaa
add
jno
cmp
xchg
nop
pop
sub
cmp
xchg
and
stc
aas
les
sub
(bad)
mov
jmp
jo
sbb
push
retf
fidivr
sub
or
gs
push
dec
movs
pop
push
lods
icebp
out
push
add
jae
push
js
lods
or
popa
sbb
xchg
stos
ret
(bad)
inc
les
das
ja
jmp
jb
sbb
add
mov
inc
psllq
repz
and
cmp
test
mov
aam
loop
ins
push
inc
popf
inc
dec
loop
(bad)
xchg
out
(bad)
test
xchg
pop
cmps
mov
hlt
je
add
stc
push
mov
in
aas
(bad)
pop
call
jns
add
rol
test
pop
loope
xchg
mov
call
mov
inc
cmp
mov
test
hlt
cmps
test
leave
and
repz
ret
add
(bad)
cli
add
aaa
jp
rcl
push
into
cwde
xor
add
retf
xchg
xchg
add
repnz
stc
cmp
push
call
cmps
ret
(bad)
sub
loop
and
and
cmp
sub
hlt
inc
push
ffreep
outs
inc
mov
jmp
lods
test
xor
push
inc
sub
cmps
out
mov
add
mov
cmp
mov
dec
sub
jo
jmp
xor
div
or
sub
pop
push
pop
fistp
add
rol
push
shl
shl
enter
ret
in
shr
push
es
cmp
fs
inc
sbb
xchg
xor
fcomp
mov
xor
cmps
xchg
or
out
xor
xchg
mov
test
add
and
mov
pop
push
cmps
shr
push
push
push
mov
ret
daa
push
popf
push
movs
xlat
cmp
outs
mov
sub
xlat
jge
sbb
and
add
push
repnz
imul
frstor
out
shr
std
ret
retf
cdq
mov
test
adc
adc
xor
xchg
aad
sbb
push
pop
add
fistp
adc
cmc
idiv
ja
fld
sbb
mov
push
jmp
popa
hlt
cmp
fistp
xchg
push
(bad)
das
sub
add
js
fimul
stc
shl
xor
cmps
int
outs
jo
xchg
xor
dec
ds
in
xor
sti
and
push
pop
daa
call
retf
pusha
mov
or
inc
sbb
push
adc
ret
adc
or
xchg
fwait
xor
and
out
xor
and
scas
sbb
out
xchg
mov
loopne
imul
xor
or
push
fld
mov
cmp
fidiv
mov
pop
cdq
aam
fsubr
mov
cmps
inc
mov
push
jmp
stos
xchg
mov
rol
mov
ror
inc
ss
xbegin
sbb
int3
dec
ret
mov
nop
enter
aam
adc
xor
adc
(bad)
hlt
jo
push
sub
mov
in
cmp
push
inc
jns
and
jnp
xchg
and
ret
mov
pop
imul
inc
imul
aam
gs
cmp
sbb
call
jmp
dec
jno
inc
mov
rcr
and
fbstp
push
adc
fidiv
adc
cli
xchg
aas
xchg
loope
cli
add
ja
pusha
lods
mov
scas
jp
sar
enter
mov
fwait
lds
dec
test
mov
repnz
or
stos
in
cmp
jnp
shl
sub
enter
sti
repz
test
jmp
out
add
(bad)
and
jmp
or
mov
pop
movs
cmp
cld
aad
lahf
mov
push
mov
mov
pop
retf
cmp
cs
inc
stos
nop
xchg
mov
adc
cmc
(bad)
aaa
dec
dec
add
enter
adc
lods
push
addr16
dec
rol
sub
xchg
lock
sub
pop
stos
cmp
in
dec
cmp
out
ss
sar
sbb
iret
fild
bound
xchg
mov
cmp
sbb
repz
popf
pop
leave
dec
call
jge
mov
jge
xchg
cmp
mov
xchg
pop
sub
retf
ja
(bad)
fld
xchg
push
sbb
das
in
bound
pop
fist
cmps
popf
push
in
jmp
ins
sahf
icebp
mov
cmps
pop
das
mov
pop
jle
mov
ret
pop
nop
lock
jle
mov
inc
mov
dec
and
icebp
adc
fdiv
arpl
sbb
push
test
xchg
xor
shl
mov
xor
or
stos
mov
ins
repnz
pop
ret
aad
call
mov
xlat
jg
jle
ins
add
fbld
adc
cmp
push
push
xor
add
cmp
sbb
loope
sub
jge
mov
aad
or
jl
ja
or
enter
push
jae
sbb
neg
daa
inc
je
cmp
mov
xor
std
jge
xlat
shr
stos
ins
pop
sbb
fs
xchg
addr16
adc
in
pop
inc
mov
add
test
mov
mov
in
shl
cmps
out
cmp
and
xchg
(bad)
jnp
cmps
sub
cmp
sbb
pop
inc
stc
shl
or
push
mov
cmp
pusha
sahf
jle
cmp
pop
call
inc
cmp
xor
rcl
xchg
xor
push
fs
arpl
gs
push
movs
add
pop
sub
jae
cmp
xchg
push
xchg
mov
mov
push
pop
addr16
pop
fsub
popf
sbb
test
inc
(bad)
nop
test
sbb
in
jb
icebp
mov
mov
sub
call
fnsave
jle
out
mov
mov
jge
loopne
mov
les
fptan
xchg
push
adc
nop
or
loop
mov
push
or
popa
cs
nop
add
addr16
and
out
jne
nop
int
mov
mov
(bad)
call
inc
add
jle
jp
xor
cdq
(bad)
adc
test
mov
fisubr
sbb
xchg
mov
dec
jno
fld
mov
(bad)
jl
lahf
(bad)
in
sub
std
sbb
mov
cmps
neg
fs
je
shl
mov
inc
imul
xadd
movs
mov
not
clc
mov
xchg
adc
popf
xor
sub
mov
les
cli
retf
ins
(bad)
adc
shl
rol
out
xor
and
js
outs
in
sub
stos
inc
mov
les
mov
jbe
dec
test
cmc
sub
sbb
test
jne
or
xchg
icebp
lods
mov
push
mov
and
jnp
pop
and
inc
test
xor
(bad)
dec
pusha
pop
test
call
cmp
mov
jb
or
scas
fild
or
jns
mov
adc
or
fstp
sbb
or
inc
scas
adc
les
push
sub
or
lds
mov
lods
and
call
or
ror
mov
test
inc
cld
cmp
(bad)
xor
and
add
mov
stc
pushf
loop
adc
es
mov
movs
mov
aaa
retf
fs
fs
inc
mov
mov
dec
lods
test
inc
lock
movs
pop
mov
mov
mov
cli
pop
push
imul
dec
ss
test
jmp
pop
jno
add
add
movs
fcmovb
ins
pop
in
pop
sbb
aaa
sysexit
add
inc
mov
or
cdq
mov
cmp
imul
aad
push
inc
popf
xchg
icebp
pop
sbb
mov
scas
repz
je
jno
jmp
cs
mul
iret
add
jb
fs
mov
enter
and
xor
mov
call
push
retf
and
cmps
xchg
add
hlt
and
cs
dec
or
mov
repnz
ret
push
and
jp
repz
das
and
outs
test
popf
aam
xor
dec
pop
adc
movs
sbb
push
pusha
sbb
or
loopne
in
daa
aaa
jmp
adc
inc
aas
icebp
mov
scas
das
push
xor
mov
pop
and
lea
or
cdq
push
pop
mov
add
call
or
(bad)
add
fidiv
and
xor
cmps
stos
dec
jbe
into
test
fs
ja
lds
fcmovnu
cmps
adc
mov
jecxz
mov
in
adc
jns
gs
mov
lahf
mov
push
test
pusha
cli
inc
addr16
add
xchg
cmc
cdq
xchg
mov
cli
cmp
jns
push
add
psubusb
xchg
xchg
ins
mov
scas
aad
outs
mov
ins
push
pop
cmp
cmp
sbb
fwait
and
ins
adc
mov
mov
sti
xor
mov
(bad)
push
dec
and
mov
add
stos
ss
mov
add
into
xchg
xor
shl
inc
inc
in
xchg
into
in
loopne
add
repz
ins
inc
outs
jge
mul
fadd
add
xchg
sbb
push
out
dec
fisttp
sub
pop
rol
call
js
xor
mov
fwait
mov
cmp
iret
stos
lea
push
imul
jmp
movs
mov
call
popa
mov
add
outs
pop
add
jne
pop
ret
mov
int3
fadd
cmp
adc
cli
xchg
stos
adc
cmp
push
mov
js
mov
(bad)
imul
sub
adc
dec
shr
pop
pop
fbstp
jge
popa
cld
ret
cmp
out
(bad)
cmp
cli
mul
idiv
cli
push
aas
inc
xor
loop
pop
mov
xchg
rcr
out
cmc
fadd
scas
pop
adc
or
mov
scas
lea
sub
mov
dec
mov
hlt
and
in
out
gs
ret
stos
mov
das
pop
push
out
ret
sbb
test
mov
xchg
cmp
aas
jmp
rol
adc
cmp
sub
cdq
cmp
jp
and
dec
aaa
nop
hlt
shr
mov
mov
pop
jle
or
(bad)
scas
das
add
in
jp
jns
mov
pop
adc
lock
(bad)
sub
pop
mov
xchg
repz
enter
adc
std
mov
jo
and
rol
fldenv
mov
cwde
repnz
xor
icebp
stos
ja
push
cmp
mov
inc
mov
stos
or
cmp
cmp
cmp
push
(bad)
mov
scas
cmovnp
dec
adc
fidivr
mov
dec
ds
je
mov
sub
test
popa
push
inc
call
leave
ins
add
cmp
mov
(bad)
push
repz
outs
xchg
rcl
mov
in
aaa
adc
fisubr
movs
and
inc
test
mov
pop
loopne
xchg
leave
dec
mov
sbb
cmps
ins
sub
out
push
xchg
pusha
push
push
adc
push
cmp
packsswb
addr16
out
cmp
cmc
pop
dec
adc
in
xor
(bad)
xchg
jnp
jae
mov
sbb
sub
mov
add
int
mov
cmp
pop
dec
les
jne
jns
fisttp
add
jl
mov
out
dec
aam
lahf
jns
push
addr16
mov
mov
in
(bad)
jno
pop
mov
sub
ret
and
xor
je
cmc
inc
mov
mov
xchg
ror
pop
jb
push
jae
fist
add
ss
loopne
adc
(bad)
mov
std
mov
add
arpl
popa
fcom
repz
into
les
inc
xor
cmp
mov
inc
push
xor
cs
das
mov
mov
xor
push
test
call
fs
sub
jmp
aaa
imul
pushf
loope
test
stos
gs
repz
sub
xchg
lods
inc
dec
mov
push
(bad)
mov
jno
cdq
push
(bad)
push
cmps
and
mov
dec
pushf
(bad)
dec
and
pop
imul
sahf
imul
sbb
mov
popa
and
inc
bnd
or
fdivr
adc
dec
and
xchg
ja
push
push
mov
popa
imul
addr16
jecxz
les
add
inc
loop
push
cld
cmp
push
cmp
jnp
rcl
mov
int
push
mov
xchg
inc
mov
add
(bad)
aad
mov
iret
shl
push
f2xm1
int3
jmp
ret
mov
xchg
das
mov
shr
retf
cdq
pop
retf
rcr
pop
adc
add
and
int
inc
(bad)
push
cmp
sbb
dec
retf
xchg
loopne
leave
daa
lds
mov
or
retf
loope
clc
int3
jno
and
je
jmp
loope
lods
mov
mov
inc
iret
fwait
nop
out
je
(bad)
sub
push
xchg
aam
enter
loop
or
pop
jle
xor
int
xchg
inc
call
inc
jmp
inc
loopne
addr16
or
mov
imul
and
pop
lea
cmc
loope
ret
add
sbb
ror
push
ror
xchg
je
cs
mov
(bad)
icebp
mov
dec
clc
imul
mov
out
mov
loope
outs
nop
mov
pop
xor
xor
jbe
jmp
cmps
lds
nop
mov
test
ret
jmp
xchg
fs
sbb
iret
int
aad
xchg
cmps
sub
cli
xchg
in
dec
ds
adc
or
inc
out
nop
jae
ret
outs
or
add
mov
fstp
movs
lock
daa
in
outs
xchg
xor
mov
inc
mov
rcr
mov
and
mul
stos
dec
mov
fst
cmc
iret
pop
cmp
jbe
out
movs
test
or
jge
jae
sub
data16
xor
pop
bound
aad
or
mov
into
and
(bad)
out
(bad)
cmp
div
push
shr
inc
loope
pop
in
(bad)
mov
mov
out
loope
push
mov
inc
popa
and
xor
mov
movs
cmp
mov
aaa
cmps
sbb
fwait
xor
call
jg
xchg
int
mov
xor
xchg
cdq
pop
pop
bound
(bad)
adc
mov
fadd
inc
jne
fild
pop
ds
push
mov
retf
pop
cli
stos
cmp
repnz
push
push
aam
jge
sbb
loope
sub
es
out
nop
push
vphsubbw
addr16
push
repz
test
fistp
push
sub
retf
mov
mov
mov
sub
hlt
and
sub
pminsw
push
cmc
cmps
add
jge
jb
mov
(bad)
fbstp
adc
add
(bad)
dec
xchg
xchg
inc
and
jno
mov
sbb
mov
fmul
sbb
xchg
mov
lea
or
cmps
jge
or
les
push
sbb
inc
sub
icebp
push
movs
ss
loopne
lods
vpxor
(bad)
lods
push
loop
es
loop
je
pushfw
and
sub
cmp
dec
add
out
xchg
inc
pop
mov
dec
das
adc
lahf
sbb
loope
imul
je
cmp
loope
jl
inc
jns
nop
lock
cmp
cwde
pop
and
push
add
retf
sbb
push
jb
dec
scas
mov
scas
fidiv
imul
call
dec
sub
ss
add
(bad)
adc
cmp
pop
and
aaa
ins
clc
mov
pop
jne
jp
pop
mov
sti
(bad)
cmp
mov
dec
push
sti
je
je
rcl
mov
pushf
pushf
test
inc
aas
pop
out
shr
xchg
pop
and
pop
push
adc
enter
push
cmp
xchg
add
sbb
pop
mov
adc
inc
int3
pop
mov
je
mov
hlt
mov
dec
mov
jae
mov
push
pushf
inc
icebp
mov
pop
xor
test
cwde
jecxz
xor
inc
(bad)
shl
fs
xor
sahf
retf
mov
aam
add
inc
dec
jg
sbb
push
int
dec
inc
mov
jg
add
popf
add
scas
movs
push
mov
jmp
adc
les
mov
das
inc
mov
mov
es
scas
fimul
pusha
std
out
jg
mov
outs
(bad)
shl
addr16
pop
xchg
or
sub
test
ins
xchg
icebp
in
nop
inc
in
test
xchg
mov
mov
sub
fcmove
bnd
icebp
pusha
xor
scas
or
fdivr
dec
(bad)
aad
sub
mov
fs
jl
push
dec
push
xchg
je
mov
xor
(bad)
in
mov
pop
xor
ss
gs
sbb
(bad)
push
test
cld
xor
fld
jl
shl
push
mov
inc
sub
mov
aas
inc
jp
mov
xor
xchg
xlat
dec
xchg
out
sti
inc
xor
xchg
push
add
loopne
push
jl
(bad)
cmc
push
and
pushf
xchg
xor
or
in
xor
dec
xor
or
in
popf
mov
fdiv
nop
push
cmp
push
sub
in
lahf
test
or
hlt
cmp
adc
(bad)
sub
mov
lods
stos
test
in
fdivr
sbb
imul
lods
sub
imul
inc
jo
jbe
scas
sub
in
or
ret
cwde
ret
mov
jp
mov
xlat
aas
or
bound
mov
add
and
aad
adc
cld
fdiv
jno
jne
sub
adc
(bad)
sbb
inc
out
sar
push
aad
mov
push
mov
adc
ss
in
mov
cwde
in
pop
cmp
mov
sahf
pop
push
into
mov
adc
outs
dec
sbb
mov
daa
retf
lods
test
mov
pop
cdq
call
and
std
cmp
xchg
jno
dec
test
cmc
in
sahf
popa
out
cld
or
shl
and
pop
in
mul
outs
xchg
and
jmp
mov
(bad)
retf
loopne
push
jo
int
mov
leave
sbb
in
mov
jb
scas
pcmpeqw
daa
or
jecxz
mov
or
jnp
fwait
pop
dec
dec
enter
inc
jne
in
jp
mov
jno
in
adc
pop
lock
sub
adc
or
leave
fmul
rcr
mov
sbb
out
pop
ins
pop
clc
dec
inc
popa
jl
adc
cmp
es
or
test
out
imul
fstp
lock
jnp
jns
add
push
popf
mov
push
ins
or
mov
push
dec
stos
adc
pop
push
cmp
sbb
test
and
xchg
cmp
sub
call
sti
es
ret
jb
lock
test
daa
ret
sbb
or
lea
jle
adc
cmps
pop
xlat
(bad)
jns
out
and
sti
push
ret
add
fcomip
cmps
jbe
test
push
(bad)
aas
mov
sub
shr
(bad)
push
cmp
scas
repnz
not
pop
mov
retf
mov
mov
outs
inc
sbb
sar
cmp
pop
xor
and
xlat
xchg
sbb
mov
push
push
imul
pop
add
sbb
sti
sub
(bad)
mov
sub
stos
xlat
cli
enter
setns
retf
(bad)
sbb
jg
lahf
out
sar
sbb
push
hlt
or
call
adc
mov
xor
mov
sbb
adc
mov
xchg
shl
dec
jle
fcmovnu
jmp
xor
movs
xchg
retf
xchg
es
sti
xchg
pop
pop
retf
gs
mov
retf
mov
xor
mov
and
shl
sar
mov
adc
inc
iret
push
aad
out
or
lahf
push
fs
loope
test
sub
lods
push
cs
mov
mov
dec
jnp
push
xor
pop
pop
sub
call
xchg
retf
ret
mov
xchg
sar
inc
std
mov
mov
and
jp
fisttp
in
cmp
xor
fs
jmp
add
stos
dec
mov
mov
push
fdivp
and
cld
xchg
push
pop
mov
add
cmp
push
lds
xor
js
mov
push
mov
inc
adc
add
jmp
mov
mov
mov
cmc
inc
ins
mov
xor
xchg
jle
pop
adc
pop
push
dec
(bad)
jmp
push
jb
mov
dec
cwde
inc
fidiv
adc
ja
int3
stos
push
jl
dec
jb
stos
mov
out
ins
or
or
scas
out
pop
cdq
stos
sub
sub
sub
ins
bound
push
dec
dec
push
cld
loope
movs
adc
xchg
cli
cmps
in
stos
test
push
pop
in
push
movs
stos
jbe
jmp
ja
je
mov
dec
mov
push
pop
fild
inc
adc
jecxz
ss
cli
outs
ds
sub
add
mov
retf
ja
sub
pop
test
std
in
shl
dec
cmp
xchg
punpckldq
les
push
jmp
xchg
jle
inc
movs
mov
dec
into
fstp
imul
mov
cli
sahf
bound
out
lods
(bad)
push
pop
fldlg2
clc
xchg
push
pop
test
xor
adc
sbb
add
in
sahf
jmp
scas
retf
lock
jns
pop
ja
mov
(bad)
sub
jo
jl
mov
stc
xchg
add
pop
pushf
xor
or
aaa
mov
push
lods
inc
in
cmp
cmp
loope
sub
xor
mov
add
jno
cmc
in
pop
adc
xlat
add
gs
mov
xchg
ret
xchg
call
ror
data16
repz
imul
xor
or
jo
ror
pop
ja
mov
lods
mov
mov
sub
bound
jg
add
ins
or
inc
and
in
jnp
pop
punpckhwd
stos
ret
mov
ins
push
popa
enter
jg
in
clc
xlat
push
test
and
cmp
ins
cld
xchg
and
imul
lock
xchg
icebp
dec
cli
lock
enter
mov
inc
(bad)
jecxz
arpl
mov
push
or
int3
and
nop
mov
in
mov
fxch
cmp
hlt
es
xor
sbb
mov
lods
jl
push
cwde
xchg
adc
mov
jg
shl
dec
daa
jnp
add
adc
sub
ror
xor
mov
scas
dec
aam
in
hlt
into
dec
and
scas
out
cwde
sahf
fist
es
fs
mov
neg
xor
lea
or
push
outs
mov
les
je
test
test
inc
(bad)
cli
cmp
inc
and
test
mov
add
mov
cmp
pop
push
lock
call
mov
jg
adc
jno
dec
outs
scas
and
xor
cld
test
sti
mov
lds
jmp
adc
outs
nop
jbe
or
pop
gs
pop
ret
mul
dec
daa
xchg
scas
push
push
test
cmp
xor
pop
lods
and
popa
call
adc
dec
adc
adc
outs
cmps
retf
loop
imul
mov
out
xchg
test
xchg
sbb
add
xchg
cmp
imul
xor
arpl
imul
mov
repz
and
pushf
xor
mov
cli
cmp
test
cmp
fmul
xlat
in
inc
sub
sub
fdiv
add
scas
adc
test
fwait
and
jmp
and
mov
pop
pop
adc
xchg
dec
sub
dec
pop
push
inc
ror
adc
mov
push
inc
inc
cmp
pop
push
mov
xchg
push
arpl
cdq
push
cmp
fidivr
hlt
imul
bound
or
ret
push
ror
les
and
mov
fs
and
pop
aam
cmps
les
(bad)
std
popa
or
int
pop
mov
pop
adc
push
xchg
mov
shl
sub
mov
rol
xchg
rcr
je
sbb
jnp
mov
cmp
fs
scas
adc
or
dec
mov
sti
mov
inc
frstor
(bad)
xchg
mov
xor
adc
and
sbb
movs
xor
pop
imul
mov
inc
add
pushf
imul
data16
mov
je
lods
adc
pop
push
and
mov
mov
rol
pop
out
adc
movs
push
retf
test
mov
dec
nop
pop
jge
pop
lea
push
(bad)
fcomp
shl
ins
ins
jmp
loopne
mov
cmp
push
rcpps
sub
mov
or
daa
std
sub
es
inc
mov
adc
sbb
jge
xchg
cmps
adc
mov
mov
jns
push
jb
jmp
jb
inc
hlt
adc
sar
xlat
xor
daa
xor
pushf
popf
loopne
test
push
jge
(bad)
aad
dec
bound
and
and
inc
fcmove
push
retf
(bad)
cld
aam
mov
xor
in
push
stos
stos
fbld
inc
ret
rol
call
sbb
sub
mov
xchg
ins
aaa
jmp
xor
mov
movs
jle
hlt
xor
mov
xchg
sub
inc
out
lds
fist
jmp
dec
gs
(bad)
push
push
mov
or
xchg
and
rol
and
push
aam
xchg
cmp
outs
inc
(bad)
mov
xchg
dec
cwde
sti
add
stos
repz
add
dec
addr16
jbe
cmc
and
pushf
loopne
xchg
dec
adc
pop
enter
sbb
jmp
test
lds
xor
and
pushaw
movs
or
stos
enter
inc
loop
cmps
lods
cmp
mov
cmp
fiadd
imul
leave
xchg
test
arpl
pushf
pop
enter
sub
push
pop
xor
cmps
mov
push
movs
cmps
addr16
xchg
xchg
cmp
shl
pop
stc
scas
push
sub
iret
adc
(bad)
and
sub
arpl
xchg
and
inc
lds
inc
out
mov
mov
ins
pop
cmc
xor
imul
lods
test
mov
jecxz
jns
dec
(bad)
push
mov
xchg
cmps
jne
xor
rcr
push
xchg
jns
adc
xor
(bad)
adc
pop
xchg
outs
scas
sub
imul
std
inc
out
xchg
iret
push
dec
or
jmp
arpl
sub
out
bound
in
or
ins
cmp
not
and
lea
cmp
ins
sti
cli
jecxz
enter
(bad)
repnz
call
pop
in
or
xchg
cmp
ins
shr
shr
lods
pop
out
xchg
ss
push
xchg
retf
es
dec
cdq
sbb
inc
inc
inc
jne
adc
popf
mov
add
dec
or
and
sub
inc
cmp
and
mov
mov
test
xchg
or
mov
mov
xchg
(bad)
xor
leave
stc
lea
xor
imul
ds
xor
sub
lods
loop
iret
test
jmp
cli
push
jae
fwait
xchg
dec
dec
aas
xor
cmp
jle
pop
call
aaa
test
jmp
(bad)
fwait
adc
cmp
dec
fbld
bnd
