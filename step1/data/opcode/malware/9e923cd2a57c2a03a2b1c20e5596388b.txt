mov
mov
mov
sub
not
push
mov
push
mov
xor
mov
call
push
call
call
lea
mov
push
call
call
mov
call
push
call
call
mov
mov
xor
mov
mov
call
mov
push
push
call
mov
cmp
je
test
je
push
push
push
call
mov
add
test
jne
mov
mov
mov
push
mov
call
push
call
mov
mov
push
push
call
mov
push
call
call
mov
mov
pop
add
ret
mov
mov
pop
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
cmp
jle
mov
mov
push
mov
xor
cmp
mov
pop
je
mov
pop
ret
mov
xor
mov
sub
je
lea
pop
ret
push
call
pop
ret
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
call
mov
lea
push
call
mov
push
call
test
mov
je
mov
push
push
push
call
mov
mov
call
mov
mov
push
push
mov
mov
call
mov
add
mov
call
push
push
push
push
push
push
push
push
push
call
test
je
push
call
call
mov
mov
mov
call
mov
mov
add
mov
push
call
mov
mov
mov
cmp
jne
mov
mov
call
mov
mov
mov
call
mov
call
call
mov
push
call
push
push
push
push
push
push
push
push
push
push
push
push
mov
call
mov
jmp
cmp
jne
mov
mov
mov
call
test
jne
mov
mov
push
call
test
je
mov
mov
mov
or
push
push
mov
call
push
call
add
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
test
jne
lea
mov
xor
mov
mov
xor
mov
inc
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
add
inc
cmp
jl
mov
lea
push
mov
mov
call
mov
add
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
pop
pop
test
pop
je
mov
mov
push
push
push
push
call
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
loope
mov
lds
adc
arpl
dec
movs
inc
mov
(bad)
cli
test
sub
addr16
out
dec
pushf
jp
outs
rcr
loope
mov
test
jne
inc
jmp
sub
adc
jp
push
pop
movs
or
fisub
jne
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
mov
jp
stos
sub
imul
push
jmp
aaa
add
fidiv
hlt
mov
data16
mov
rcl
dec
test
sti
push
test
jmp
mov
int
fadd
std
ficomp
or
retf
mov
dec
sub
je
(bad)
outs
xchg
xchg
out
adc
adc
xor
ret
cmc
push
fimul
das
retf
idiv
sbb
xchg
adc
push
call
jmp
cli
sub
outs
xchg
fld1
fbld
mov
and
rcl
dec
mov
out
push
lock
jmp
fisub
je
push
(bad)
fiadd
mov
push
mov
cmp
mov
xchg
xchg
sub
mov
pop
call
jmp
test
sub
push
mov
test
call
mov
pop
test
push
adc
es
loope
in
idiv
cmp
leave
sbb
jb
ja
cmps
in
jge
data16
cli
dec
sahf
cmps
sbb
or
lds
js
aad
push
mov
inc
fisttp
mov
mov
jg
fistp
lock
shr
cwde
in
push
and
pop
lea
inc
dec
inc
mov
add
aad
and
enter
test
cmc
jnp
daa
std
shr
dec
mov
stos
jmp
lock
adc
xor
xor
add
clc
add
int3
(bad)
lock
je
test
push
daa
lea
call
dec
lock
pop
out
mov
iret
daa
lea
test
jbe
ja
inc
stc
add
mov
out
in
or
and
clc
ja
pop
add
aaa
inc
stos
fwait
cmps
and
mov
push
dec
sub
sub
out
xor
in
dec
mov
sub
sahf
pop
pop
dec
cmps
repz
pop
sub
shr
push
cmp
enter
jb
stos
fisub
cmp
popf
in
mov
test
fcmovnu
daa
icebp
jne
push
jmp
ret
call
(bad)
sub
ins
inc
shl
cmps
adc
xor
pop
addr16
inc
xchg
movs
push
xchg
aad
and
aad
fisub
sub
lock
fs
mov
push
js
lods
gs
movs
dec
dec
js
aas
sbb
inc
jmp
xchg
jae
lds
and
or
cmp
das
test
pop
cs
add
add
and
pop
mov
sub
mov
jns
push
cwde
jne
jne
xor
retf
(bad)
into
in
daa
jmp
scas
out
shl
sub
dec
sub
xchg
push
sub
cmp
mov
jne
xor
pop
xor
or
pop
sbb
cmp
sbb
into
mov
inc
sub
sahf
in
gs
push
test
sti
mov
mov
test
cli
sbb
jnp
push
dec
jmp
dec
cmc
icebp
(bad)
pop
test
mov
jp
sbb
addr16
cli
adc
mov
clc
fucomp
add
lock
sbb
mov
lods
outs
(bad)
mov
mov
dec
jne
jmp
mov
(bad)
loope
xchg
sub
push
inc
mov
jecxz
xor
pop
mov
out
adc
test
jmp
add
gs
mov
arpl
lods
xchg
xchg
movs
(bad)
clc
cmp
popf
xor
and
or
mov
xlat
cmp
js
(bad)
daa
je
repnz
gs
mov
jecxz
retf
stos
inc
mov
mov
test
div
call
call
jmp
push
repnz
push
jmp
inc
jmp
mov
cmps
not
cmp
movs
or
mov
push
cdq
jno
(bad)
jbe
idiv
sar
pop
idiv
xor
ins
lds
inc
test
gs
add
jmp
jmp
xor
and
mov
je
aas
or
jmp
(bad)
adc
test
sub
jp
(bad)
retf
jbe
and
jne
push
lea
jmp
push
(bad)
loope
aad
rol
loope
mov
mov
jne
mov
and
das
pop
in
ss
dec
jnp
push
data16
cli
mov
push
xlat
push
mov
mov
in
or
out
in
(bad)
imul
pop
sub
fwait
and
xchg
sbb
or
enterw
jae
jp
push
and
mov
ss
test
mov
out
dec
test
jmp
(bad)
outs
xchg
stos
jne
and
add
jbe
dec
xor
cmp
ffree
inc
sub
gs
push
scas
push
call
inc
das
outs
cli
cmp
cmp
dec
das
(bad)
ins
xlat
xchg
xor
pusha
add
scas
aad
mov
and
loopne
sub
movntq
imul
mov
scas
inc
in
push
or
or
mov
jl
cwde
xor
sti
add
pop
int
add
xor
dec
or
sbb
cmp
data16
sti
pop
popa
ficomp
cli
and
pop
sbb
fcomp
cmp
aas
adc
scas
mov
inc
repz
push
cdq
movs
inc
div
outs
xchg
fld1
fbstp
inc
cli
(bad)
scas
jmp
js
stos
adc
jnp
sbb
xchg
fimul
enter
push
inc
stos
cmp
sti
or
stc
sub
(bad)
jo
aaa
add
imul
movs
mov
pmullw
sub
cmp
movs
inc
popf
jno
bound
scas
(bad)
hlt
mov
adc
push
dec
(bad)
into
les
mov
dec
out
ss
pusha
ja
jmp
dec
sub
add
xchg
mov
test
and
cdq
test
push
shl
pop
pop
pop
js
vminpd
mov
imul
cmps
retf
int
inc
pop
and
daa
add
sbb
out
sub
dec
std
cmp
cmp
sub
and
push
dec
push
call
and
sub
movs
or
enter
sub
inc
lods
pop
jmp
icebp
mov
int3
mov
stos
xchg
mov
lea
lahf
rcr
imul
sar
daa
pop
xchg
movs
cmp
cmp
sub
pop
in
add
cmps
mov
adc
dec
pop
fld
mov
int
pop
jnp
call
call
in
cmc
mov
xor
scas
jbe
lods
jo
call
inc
pop
lock
xchg
fst
jmp
add
ret
icebp
test
or
or
inc
jne
mov
cdq
pop
cdq
jne
inc
inc
cli
rcr
inc
std
js
xchg
pop
sbb
test
(bad)
add
popa
adc
call
mov
xor
pusha
mov
or
jge
gs
enter
in
out
dec
inc
cmps
popf
sti
aad
xor
pop
sbb
mov
jae
out
and
sbb
fidiv
add
sbb
aaa
jne
xchg
inc
arpl
mov
clc
mov
pusha
jno
push
push
leave
jmp
stos
cwde
sub
cwde
cwde
xchg
sub
dec
mov
xor
cmp
jmp
(bad)
add
cmp
cmp
leave
xor
repnz
cwde
gs
add
call
inc
or
lds
or
add
push
sub
jno
out
jle
scas
mov
cwde
stc
push
sbb
jb
(bad)
mov
push
adc
sbb
and
stos
pusha
pop
nop
inc
mov
dec
cmp
popf
cmps
lea
pop
add
(bad)
jb
xor
or
int
pop
outs
dec
sub
add
sub
fimul
je
shl
out
jae
xor
std
and
and
mov
ds
gs
movs
into
out
mov
iret
sub
xor
(bad)
push
cmp
cmp
call
retf
int3
sub
in
mov
or
inc
or
mov
push
sti
rol
cdq
cmp
jne
push
mov
arpl
repz
pop
and
and
mov
jmp
fsubr
cmp
xchg
scas
dec
add
pop
std
out
pop
xchg
mov
adc
sub
in
add
ret
into
out
pop
sub
test
repz
cmp
jl
jle
push
shl
xor
into
jge
mov
push
sbb
push
add
add
and
mov
into
mov
cmp
sbb
outs
(bad)
sbb
push
pushf
and
call
ror
imul
cmp
fsub
push
ds
ficom
cmp
fidiv
jp
and
jns
xchg
mov
mov
add
mov
add
dec
mov
sbb
jb
loope
dec
cli
inc
jl
fisub
cdq
lds
ja
xchg
pop
xchg
scas
mov
(bad)
xchg
sahf
cdq
push
xchg
(bad)
and
pop
ror
in
ss
int3
shl
fsubr
mov
lahf
or
sub
loopne
fist
xchg
ret
jne
je
jns
pop
retf
ins
mov
sub
cmp
loope
sbb
(bad)
lds
inc
mov
into
sub
adc
and
outs
dec
jl
cmp
xor
cmp
outs
ficomp
or
sbb
(bad)
outs
dec
loope
adc
je
mov
add
je
or
xchg
adc
jle
mov
es
push
lds
dec
sar
ins
and
out
in
jb
or
push
fsubr
out
xchg
loopne
jle
push
stos
pop
dec
add
mov
lea
jmp
les
inc
sti
sbb
cmp
movs
or
xor
mov
jne
sbb
add
movs
and
cmc
xchg
lds
cmp
sbb
cdq
(bad)
mov
pusha
dec
mov
sbb
pop
jle
nop
imul
dec
(bad)
in
es
out
into
jmp
pop
in
fwait
push
out
sub
test
inc
mov
adc
adc
push
ret
add
aad
movs
loop
js
sbb
cmp
mov
data16
cwde
or
xor
xchg
loope
pop
das
pop
repnz
es
mov
std
jmp
data16
ja
add
dec
sbb
sbb
sub
jne
pusha
movs
mov
fwait
add
cld
cwde
pop
(bad)
dec
nop
test
fidiv
cmp
xchg
(bad)
retf
pop
out
int
(bad)
cmp
cs
push
push
mov
mov
add
xor
dec
imul
pop
loope
jle
shr
fs
jne
pushf
cmp
inc
fnstenv
dec
mov
mov
mov
pop
xchg
and
or
or
aas
mov
dec
mov
mov
fnstcw
or
pop
dec
mov
inc
in
xor
xchg
aam
mov
jl
iret
cmps
and
mov
pusha
leave
xor
pop
(bad)
pop
push
cmp
xchg
loop
ret
inc
das
inc
(bad)
ins
cwde
mov
mov
clc
in
sti
push
inc
cmps
add
push
xchg
pop
dec
pop
div
(bad)
jecxz
iret
cmps
es
lods
test
call
adc
jp
lods
adc
movs
cmc
dec
mov
push
repz
mov
jb
push
mov
mov
xchg
(bad)
sahf
pop
stos
xor
xchg
sbb
adc
scas
js
dec
push
loope
cmps
cmps
std
and
mov
mov
enter
gs
jne
dec
adc
fnstsw
cwde
pop
in
or
out
jle
loop
fcomp
es
pop
xchg
call
(bad)
das
mov
sti
aad
movs
xor
and
sub
ror
sbb
xchg
mov
inc
into
call
stos
mov
enter
fist
adc
daa
aad
push
or
ins
fld
adc
retf
inc
out
rcr
mov
pop
or
mov
dec
mov
mov
add
cmps
mov
aaa
add
dec
mov
xchg
sub
lock
ins
or
pop
xor
push
adc
test
out
fwait
movs
loop
ror
pop
xchg
fcmove
and
push
adc
dec
jo
cli
stos
std
xlat
cmps
pop
sar
popa
(bad)
ret
call
or
gs
shl
pop
adc
cmps
push
sbb
movs
xchg
(bad)
cmps
xchg
sbb
add
jle
mov
inc
not
push
mov
nop
cdq
sub
mov
(bad)
call
jmp
inc
stos
jmp
das
xchg
loop
cmp
xor
pop
adc
jae
push
and
loopne
add
adc
pop
dec
push
ins
in
xchg
xor
dec
jmp
test
idiv
push
loop
jns
jbe
add
fisub
pop
xchg
fcmove
xchg
mov
and
lods
mov
das
and
(bad)
xchg
call
in
push
(bad)
int3
mov
push
dec
aad
xor
or
fsub
push
dec
das
jp
enter
jne
leave
mov
icebp
xchg
mov
jp
dec
aad
inc
imul
add
pop
call
jmp
daa
pop
in
outs
pop
cld
add
ss
jmp
loope
pop
push
jmp
xchg
sub
cmp
cmp
stos
xchg
and
mov
pop
mov
xor
lods
aad
arpl
not
ror
call
addr16
pop
inc
cmc
mov
in
js
add
sbb
(bad)
jge
call
adc
cli
inc
xchg
test
pop
dec
or
push
out
or
jb
dec
ss
bound
pop
mov
jle
lds
pop
inc
add
sti
gs
push
jle
clc
mov
and
out
mov
inc
cmp
sub
loopne
in
movs
mov
push
es
cmp
adc
jne
scas
ret
stos
std
mov
dec
addr16
sub
jae
ins
into
imul
jecxz
(bad)
mov
adc
test
sub
call
ficom
mov
jae
and
stc
cmp
sbb
pop
mov
sub
adc
cmps
aaa
data16
jo
add
and
aaa
cmps
xchg
pop
fsubr
xchg
mov
test
sbb
mov
ror
mov
sbb
scas
cmc
and
xor
sti
inc
push
shl
dec
repz
pop
dec
adc
mov
arpl
fiadd
or
mov
cmp
lock
pushf
or
test
into
sbb
push
lds
push
xlat
inc
retf
enter
and
out
pop
or
xor
xchg
sub
iret
call
scas
or
stos
cwde
dec
push
xor
out
aad
sbb
mov
test
jo
in
or
cmps
adc
sub
fisub
dec
xchg
sbb
mov
add
push
push
jno
mov
xchg
aad
cmc
xchg
fiadd
or
sub
jo
inc
std
add
in
sbb
dec
dec
dec
lds
retf
and
push
pop
scas
(bad)
repz
push
dec
adc
mov
call
aam
and
cmp
fcomp
ins
iret
jmp
mov
lock
daa
inc
mov
addr16
and
aaa
sub
dec
xor
dec
cmc
jecxz
add
int3
gs
inc
addr16
call
add
test
int3
mov
call
sbb
loopne
inc
out
jmp
cli
or
movs
retf
stos
cmp
div
inc
ss
retf
stos
fild
inc
xlat
sbb
or
(bad)
aad
pop
int3
pop
or
xor
test
mov
call
sub
sbb
pop
jne
cmc
imul
push
mov
mov
mov
sbb
js
lds
fistp
dec
imul
dec
call
push
push
pop
and
in
jmp
mov
cmp
fs
cmp
gs
out
inc
inc
sbb
test
inc
aad
jmp
inc
pop
sbb
fld
ins
std
int
add
adc
call
aad
sbb
push
enter
test
mov
movs
sub
das
aad
arpl
cmp
call
sub
aaa
mov
dec
movs
outs
(bad)
mov
in
cmc
stc
mov
xchg
lahf
call
(bad)
fidiv
mov
stos
pop
push
mov
jne
mov
ficomp
movs
or
sub
es
popf
pusha
jno
test
test
inc
imul
jne
aam
pop
dec
mov
mov
in
test
inc
adc
daa
adc
sbb
mov
div
or
dec
test
and
adc
add
mov
sbb
mov
fimul
test
jmp
xchg
sub
push
sbb
sub
xor
pop
in
or
les
leave
push
ret
call
jle
jbe
xor
mov
cmc
xchg
into
add
xchg
dec
cmc
mov
inc
cdq
xchg
xor
addr16
xchg
icebp
test
xlat
outs
inc
xor
scas
outs
cwde
pop
pop
xchg
jg
sub
std
or
xor
pop
or
push
jo
or
(bad)
sar
lahf
gs
push
popf
test
mov
dec
and
pop
and
xchg
cwde
stos
pop
dec
in
add
dec
aam
(bad)
pop
cli
dec
addr16
(bad)
fcmovb
test
inc
into
(bad)
jmp
pop
out
or
mov
pop
sbb
or
cmp
jmp
jo
mov
sub
out
xchg
mov
dec
mov
outs
adc
or
sti
fsub
fidiv
pop
cmps
mov
aas
lds
pop
out
xchg
ds
clc
jnp
push
inc
fdiv
data16
mov
movs
jp
loop
call
push
mov
adc
mov
dec
push
lods
xchg
out
dec
mov
(bad)
(bad)
sbb
scas
jne
sub
gs
jo
add
sahf
cmc
mov
test
dec
ja
in
xlat
xchg
out
cmp
movs
idiv
inc
pop
daa
dec
aas
lock
sub
loop
cmp
retf
dec
movs
mov
xor
not
push
inc
stos
cmp
mov
sbb
push
add
int
sub
loope
fiadd
imul
aaa
call
fisttp
mov
or
or
test
es
je
sub
jns
lahf
or
scas
(bad)
sub
inc
neg
and
pop
adc
lods
add
pop
cmp
mov
sbb
pop
call
rcl
into
movs
sbb
outs
cli
add
int3
or
sbb
mov
test
push
cmp
std
inc
sub
jmp
adc
ds
jmp
int
and
xor
test
(bad)
fimul
idiv
scas
sbb
dec
push
jmp
add
cmc
adc
fsubr
popf
mov
into
xor
add
mov
jmp
pop
mov
data16
adc
mov
mov
iret
js
dec
fbld
or
fdivrp
inc
stos
adc
and
mov
xchg
aad
pop
adc
and
js
cmp
cwde
(bad)
mov
jb
push
sub
pop
arpl
arpl
ret
xor
jle
test
xchg
jmp
and
rol
sbb
gs
xchg
stos
push
jl
xor
pop
in
std
xchg
dec
xchg
sub
idiv
xchg
jge
imul
xchg
add
ret
lds
xchg
add
xchg
(bad)
jno
ja
push
push
sbb
cmp
add
mov
cwde
sbb
test
(bad)
mov
outs
jle
ins
test
mov
and
xchg
cmp
mov
test
pop
fimul
and
xchg
loope
adc
mov
jle
outs
cs
jecxz
dec
cmp
pop
sbb
lock
jmp
retf
pop
and
ficom
pop
aam
clc
add
das
test
loopne
aad
dec
pop
mul
mov
sbb
push
lds
fldenv
add
shl
mov
pop
jle
jne
aaa
add
sbb
jne
pop
sub
movs
fdivp
ja
sub
scas
gs
or
in
sub
iret
scas
inc
sub
sbb
inc
xchg
dec
(bad)
inc
sub
std
xor
adc
(bad)
xor
pop
in
cli
mov
fs
les
(bad)
pop
fcomp
dec
push
pop
pushf
in
mov
lds
sbb
mov
sbb
bound
add
jne
pop
xor
dec
shl
or
fld
pop
push
and
fst
dec
and
push
bound
mov
paddd
add
rcl
xchg
add
adc
fistp
sub
mov
jmp
add
lds
retf
dec
addr16
das
mov
movs
leave
stos
std
movs
in
cmp
cdq
adc
rol
sub
push
cmp
sbb
out
dec
pop
mov
xchg
push
mov
cmc
pop
ja
jp
int3
call
pusha
mov
push
outs
inc
stos
std
rcl
cmc
push
pop
add
clc
sub
pushf
xor
sar
and
das
cwde
or
scas
ins
pop
call
and
cmp
lahf
jbe
mov
cmc
js
mov
mov
or
jne
xor
or
fsubr
test
out
sbb
in
loopne
xchg
push
dec
nop
sar
retf
or
jnp
(bad)
hlt
mov
outs
mov
cmp
cmp
fld
jge
jno
icebp
jno
jmp
mov
jne
sbb
adc
xchg
and
lahf
fwait
mov
mov
inc
inc
add
dec
mov
cmp
icebp
inc
cmp
mov
pop
and
imul
cmp
pop
pop
jmp
leave
or
mov
(bad)
xor
jmp
loopne
dec
repnz
dec
xor
push
and
mov
in
jge
xor
pop
mov
add
ss
(bad)
push
fisubr
or
cli
inc
addr16
cmp
jmp
cmp
dec
mov
ins
inc
mov
pop
je
scas
inc
dec
push
pop
and
cmc
xchg
dec
and
or
fs
lock
jne
retf
and
jp
out
ss
jle
clc
icebp
sub
stos
(bad)
imul
loopne
in
movs
xlat
mov
outs
sub
ja
push
inc
scas
shr
leave
arpl
sub
add
aaa
dec
daa
mov
inc
aas
push
fistp
jo
shr
xor
mov
gs
inc
imul
movs
push
jmp
fbld
pop
sbb
jne
ins
mov
clc
pop
loopne
fsubr
jbe
nop
pop
add
sbb
mov
or
clc
adc
popa
lock
scas
fiadd
dec
daa
mov
push
xchg
test
pop
loop
dec
and
(bad)
ficomp
ss
xor
das
mov
mov
dec
xchg
push
jmp
push
mov
(bad)
test
call
or
push
fimul
mov
cmps
xchg
lahf
mov
fadd
scas
add
sbb
or
icebp
push
bound
repnz
add
add
into
stos
mov
js
cli
push
mov
dec
cmp
nop
fld
test
mov
xchg
push
(bad)
call
ins
mov
sti
xor
inc
mov
lea
push
push
mov
aam
in
add
mov
and
adc
lock
(bad)
nop
ss
sbb
cmp
ficomp
stc
call
or
dec
push
inc
cmc
mov
push
(bad)
and
mov
in
fxch
mov
or
bswap
jp
adc
mov
test
popa
add
mov
data16
stc
mov
stos
jp
jmp
push
and
and
adc
or
cwde
and
jp
push
outs
movs
pop
jne
rcl
xchg
xor
inc
pushf
and
cdq
sbb
push
ds
outs
xor
call
push
ins
fisub
mul
fdiv
(bad)
fbld
jno
sub
jl
add
and
(bad)
les
js
test
test
lds
aaa
lea
push
call
adc
sub
nop
popa
xchg
xchg
test
sbb
gs
sbb
xchg
cs
jl
and
dec
mov
hlt
icebp
add
push
pop
repnz
cmc
and
push
loopne
jne
into
add
test
cmp
in
xchg
int
shr
pop
inc
je
(bad)
jmp
jbe
lods
and
test
cwde
in
jnp
push
nop
out
retf
ss
outs
jne
daa
xchg
cmps
(bad)
adc
(bad)
push
pop
ins
sub
in
and
aad
fucom
fs
mov
icebp
addr16
aad
retf
xchg
mov
cmp
pop
sub
cmp
das
push
loopne
idiv
or
inc
jne
enter
mov
or
dec
mov
test
or
sbb
shr
data16
ret
gs
add
movs
inc
ds
arpl
adc
mov
jmp
cmp
mov
jne
mov
movs
or
jmp
je
sub
lock
call
test
call
push
into
cmp
push
push
sub
mov
(bad)
sbb
sbb
and
outs
push
je
mov
adc
sbb
fisub
xchg
sbb
inc
jbe
adc
fs
fnstcw
push
sbb
dec
lock
imul
(bad)
(bad)
imul
mov
xchg
sbb
push
jbe
mov
adc
inc
add
dec
sar
into
test
push
bound
xor
dec
jb
mov
mov
data16
js
ficomp
fistp
movs
jle
dec
rol
jmp
test
in
add
std
aas
mov
loope
sbb
retf
dec
mov
ret
out
add
xchg
addr16
cmps
push
pop
test
cmc
repz
xchg
fistp
jns
push
xchg
ret
icebp
cmps
push
fld
rcl
leave
jecxz
push
test
sub
xor
sub
test
outs
xor
dec
jle
add
dec
test
pop
xor
popa
add
retf
mov
in
sub
loope
mov
sub
adc
add
jle
(bad)
cmp
push
and
dec
sbb
jg
add
mov
or
add
xor
in
push
adc
and
push
call
call
dec
pop
in
jbe
mov
fcom
jns
loopne
xor
xor
shl
adc
add
xor
jmp
jle
shr
daa
mov
int
gs
and
retf
mul
(bad)
shr
pushf
mov
dec
imul
pop
pop
scas
push
adc
mov
scas
mov
fimul
ret
jle
xor
pop
jb
fidiv
jmp
call
adc
or
out
pop
adc
mov
jno
jmp
sahf
and
inc
sahf
pop
cmc
or
pop
mov
in
or
out
into
xor
inc
out
(bad)
adc
test
jnp
inc
(bad)
imul
add
dec
jp
lods
pushf
and
adc
mov
mov
add
mov
mov
xor
adc
add
mov
test
movs
repz
adc
or
fisub
bound
(bad)
jbe
inc
jo
movs
movs
mov
ss
pop
in
and
sar
mov
pusha
movs
test
dec
jl
inc
imul
retf
(bad)
popa
gs
cmc
jmp
cmp
sti
xor
(bad)
leave
call
dec
jnp
jmp
mov
push
sub
fld1
retf
push
arpl
push
ret
mov
mov
jp
add
xchg
(bad)
cmc
in
mov
mov
int
into
mov
ja
add
aam
and
or
inc
jecxz
jae
outs
push
and
je
and
dec
fadd
out
stos
stc
movs
or
jmp
jl
or
(bad)
iret
out
out
stos
pop
jmp
mov
sbb
sub
es
pop
xchg
sub
sbb
inc
and
into
push
sbb
bound
xor
shrd
or
inc
aad
(bad)
fs
(bad)
mov
jp
xor
ret
pop
aas
lds
dec
sti
mov
jmp
sub
or
cwde
sti
push
jmp
cmc
jecxz
(bad)
jmp
jne
dec
gs
fldenv
stos
jmp
push
frstor
or
test
(bad)
and
and
push
mov
mov
shr
jle
cmp
xchg
psubq
mov
mov
jns
mov
mov
into
pop
adc
in
cmc
xor
xchg
pop
dec
in
mov
movs
in
and
into
test
(bad)
in
mov
jo
pushf
fstp
jae
cmp
xchg
aam
pop
(bad)
jmp
ins
jns
cwde
call
(bad)
clc
in
and
aas
outs
cli
cmc
test
lods
aad
movs
pop
jae
aam
push
daa
(bad)
sub
into
retf
xor
test
push
cwde
in
push
nop
clc
cmc
cmp
(bad)
jmp
pusha
cmp
out
push
repnz
gs
cli
stos
out
and
cdq
or
lock
rcl
mov
pushf
inc
addr16
ret
push
sbb
pop
iret
pop
clc
fidivr
lds
inc
mov
hlt
xor
adc
mov
je
out
in
ins
nop
jl
call
push
ret
stc
mov
dec
imul
rol
shr
ror
mov
sti
(bad)
aas
rcl
mov
adc
test
xor
rcr
mov
cmps
sub
pop
cmp
mov
gs
xor
mov
jno
cmp
adc
loop
mov
or
ficom
rol
inc
dec
(bad)
in
mov
cmp
push
xchg
mov
shl
and
mov
(bad)
leave
in
cli
add
nop
mov
jnp
sub
dec
icebp
retf
sub
push
cmps
dec
or
in
jnp
adc
xchg
pop
or
mov
sub
fisub
retf
inc
inc
stos
fdiv
push
mov
adc
xchg
adc
(bad)
popf
scas
ins
mov
add
test
jo
adc
adc
sub
out
xchg
repnz
push
lock
push
mov
ss
test
add
sbb
jp
push
xchg
push
or
xchg
inc
gs
or
xor
mov
xchg
dec
mov
icebp
xchg
loope
clc
in
mov
jae
xchg
xchg
mov
jmp
mov
jge
cmps
mov
retf
aad
out
jge
test
and
inc
jbe
pop
mov
push
adc
mov
xor
in
mov
cdq
and
mov
fidiv
or
call
repnz
cmc
clc
mov
out
lahf
mov
in
xlat
xchg
dec
ja
lea
ja
mov
or
dec
and
dec
ret
inc
lds
repnz
cmps
lds
popa
mov
cmc
cmps
jle
cmp
cmp
jns
jecxz
or
into
adc
jne
int
or
pusha
bound
daa
adc
xor
xchg
cwde
(bad)
arpl
imul
mov
addr16
std
clc
mov
fnstcw
cmc
dec
retf
jns
loopne
imul
push
and
pop
cmp
jp
scas
and
out
jns
xchg
int3
aaa
mov
arpl
loope
movs
stos
mov
sub
mov
dec
fidiv
inc
jbe
inc
adc
mov
dec
and
mov
popf
ss
clc
jmp
call
push
gs
mov
leave
pop
mov
neg
xchg
dec
jb
aas
push
fcomp
jmp
add
dec
xor
sbb
(bad)
mov
test
push
and
add
call
adc
aas
cmp
fidiv
dec
bnd
std
sub
in
call
xchg
mov
repnz
test
or
pop
pop
sar
xchg
mov
or
dec
outs
rcr
sub
test
xor
jmp
inc
stos
sbb
imul
mov
sub
mov
sub
push
call
and
mov
inc
or
(bad)
outs
(bad)
fimul
adc
test
stos
out
and
cmc
sub
daa
gs
div
sti
xor
aaa
lods
cmc
movs
push
fild
pushf
loop
inc
jl
dec
ss
in
xchg
jmp
sbb
xor
fcom
push
js
and
jno
and
pop
add
cs
fild
imul
xor
adc
jb
adc
push
adc
sbb
stc
jo
lods
mov
jb
add
dec
and
pop
nop
dec
in
sbb
jmp
mov
mov
mov
mov
popa
xor
sbb
icebp
movs
sub
mov
mov
lds
jo
xchg
xor
add
lds
fs
xor
or
and
stc
(bad)
push
cmp
cmc
xchg
shl
cld
add
scas
gs
cs
out
sahf
in
fidivr
mov
cs
stc
test
xor
xchg
shl
ss
outs
mov
jb
jbe
outs
mov
jo
in
mov
mov
xchg
cwde
push
vpsllw
push
shr
ret
dec
xor
cmp
cmps
jmp
mov
ds
(bad)
in
es
out
into
jmp
mov
adc
ins
mov
cwde
add
pop
(bad)
mov
push
(bad)
jmp
or
dec
outs
adc
or
sub
sbb
retf
push
jmp
loope
adc
in
jg
push
push
xchg
cli
or
das
test
push
jo
jne
sub
add
add
and
jp
cmp
push
push
test
in
push
popa
or
push
and
sbb
scas
popf
jnp
push
xchg
mov
sub
imul
xchg
xor
mov
jge
xchg
popa
xor
idiv
xor
fidivr
jbe
fbld
and
movs
sbb
mov
sbb
popa
dec
lock
fmul
icebp
addr16
xlat
stc
add
das
mov
repnz
int3
push
push
call
and
out
xchg
sub
inc
adc
ins
rol
ret
cmc
stc
dec
sub
inc
mov
imul
adc
xchg
retf
rol
out
mov
mov
addr16
nop
xchg
and
fs
push
cdq
cdq
pusha
cli
test
push
scas
fisttp
scas
inc
push
pop
mov
cmp
pop
sub
in
out
and
xchg
gs
mov
lods
popa
pop
fcomp
push
cwde
xor
adc
cmc
jp
and
sub
out
stos
push
movs
adc
sub
sub
jg
cmps
(bad)
push
and
clc
test
jbe
jo
mov
rcl
(bad)
cmps
lock
cmp
fbstp
add
lods
sub
or
or
jne
sub
arpl
bound
std
shl
sbb
pop
jne
xchg
lods
adc
pusha
add
push
call
xor
int
sub
cmc
in
xor
ss
into
out
pop
jl
test
daa
cmp
inc
idiv
or
shl
sub
jge
popa
mov
call
sub
repnz
jno
jns
push
xor
pop
leave
jb
gs
mov
cmp
mov
enter
sub
mov
xor
xor
push
mov
das
push
add
jns
xchg
aad
pusha
inc
pop
cmps
faddp
in
leave
ins
mov
xchg
out
or
xchg
in
jbe
cmp
ret
jo
xor
mov
jbe
aas
sub
jmp
cmp
push
sbb
mov
test
cmp
call
mov
lods
add
sbb
test
pop
jle
loop
imul
sar
add
gs
(bad)
jmp
idiv
adc
in
enter
call
sub
call
sub
mov
pop
add
(bad)
in
retf
sbb
push
pop
and
cmps
jmp
out
sub
and
cmc
les
xchg
call
(bad)
stos
mov
push
cdq
popf
sti
aad
stos
mov
xchg
adc
movs
stos
xor
mov
xlat
xchg
es
leave
add
pusha
mov
aaa
add
pop
js
xchg
stos
nop
in
push
mov
or
push
cwde
cdq
cdq
xor
mov
jne
into
dec
imul
xchg
stos
sub
inc
aad
(bad)
retf
shl
retf
inc
iret
cli
outs
jmp
add
sub
fstp
aad
imul
addr16
pop
data16
sbb
pop
sbb
js
xchg
mov
jne
xchg
sub
dec
push
int
mov
add
js
dec
das
mov
js
sub
inc
jmp
repnz
pushf
out
adc
(bad)
loop
mov
sub
sub
cmps
stos
data16
jo
cli
call
mov
mov
pop
jbe
dec
dec
leave
inc
sub
es
cmp
ficomp
cwde
cmps
push
push
sbb
lds
adc
int3
add
mov
bound
or
or
xor
repnz
cli
mov
pushf
movs
call
jle
arpl
mov
pop
push
adc
movs
shl
sub
mov
cmp
ret
dec
cmc
jp
aam
out
cmc
(bad)
rol
(bad)
clc
push
push
popa
in
xchg
mov
xor
dec
mov
lds
aad
cli
retf
test
rcr
xchg
retf
inc
addr16
scas
jne
cli
cli
hlt
fcomp
sbb
cwde
rcr
jmp
and
jno
(bad)
sti
xchg
and
hlt
mov
adc
in
add
adc
imul
xlat
xchg
xor
fiadd
xor
mov
or
or
ret
cdq
lods
xor
xor
adc
inc
test
shl
add
cmp
int
call
retf
repnz
imul
mov
ret
pop
xchg
inc
rcl
movsx
std
out
jbe
sbb
cmc
data16
fdiv
xor
jnp
mov
rcr
pop
in
out
inc
adc
es
retf
popf
or
add
dec
pusha
add
xchg
mov
pushf
or
adc
mov
pushf
retf
xchg
lods
lea
pop
jo
mov
push
rcl
mov
jp
pop
fldcw
repnz
lock
pushf
and
inc
gs
mov
js
sahf
pop
nop
nop
or
nop
(bad)
addr16
mov
fisub
jle
mov
mov
clc
add
or
push
out
adc
das
(bad)
fxam
sbb
xor
enter
sysexit
mov
push
(bad)
aad
dec
xor
push
push
cmps
stos
and
inc
or
loopne
cmp
(bad)
shl
arpl
movs
(bad)
aaa
stos
push
popa
push
aas
cmps
fdiv
inc
and
icebp
or
fist
gs
or
test
daa
pushf
sub
inc
sub
sar
je
push
or
xor
add
mov
rcl
gs
fidiv
or
stos
mov
ins
out
xchg
jmp
add
push
(bad)
popa
xchg
jns
lods
arpl
int
arpl
std
stos
push
popa
nop
mov
pop
dec
sbb
sbb
retf
or
sub
fbld
add
and
pop
or
loope
xor
ds
in
xor
mov
cmp
adc
mov
iret
or
fidiv
gs
pop
mov
xor
or
sbb
repnz
(bad)
mov
test
mov
xor
push
call
push
shl
pop
js
xchg
xchg
mov
ror
call
jne
mov
(bad)
xor
movs
nop
dec
mov
adc
pop
rol
pop
push
mov
add
fs
sub
sbb
cmps
repnz
dec
mov
xor
sub
inc
imul
sbb
jle
mov
mov
stos
out
inc
shl
pop
ins
dec
pop
fnstenv
test
or
cmp
test
inc
mov
ja
jmp
mov
aad
jge
ins
mov
jns
xchg
cmp
test
in
push
xlat
in
stc
jle
out
dec
sbb
adc
retf
jne
sbb
mov
jae
mov
sbb
sbb
dec
add
outs
jl
addr16
std
cli
pop
out
fstp
rol
pop
mov
pop
(bad)
out
sbb
jnp
push
gs
cli
das
push
in
and
not
add
leave
push
nop
and
jne
cwde
pop
mov
fmul
jno
inc
in
pushf
mov
sbb
ss
sub
ins
fisub
sub
and
into
popa
pop
push
jne
js
popa
imul
les
mov
cmps
pop
inc
fld
xchg
jbe
push
dec
mov
test
loope
xchg
clc
in
ror
mov
xor
popa
data16
inc
inc
pop
in
adc
adc
stc
cmc
adc
pop
jbe
cmp
fist
push
test
jle
out
adc
xchg
mov
jne
lea
(bad)
sub
test
in
es
outs
inc
(bad)
out
add
out
mov
mov
arpl
dec
push
outs
ret
dec
popa
adc
sub
sahf
push
in
mov
addr16
cmp
(bad)
sti
jecxz
pop
cmp
cwde
mov
cwde
stos
pop
adc
mov
jbe
ins
or
push
les
es
dec
mul
es
cmp
push
sbb
leave
fst
inc
push
ficom
or
pop
out
push
lea
loope
adc
retf
or
sahf
mov
inc
sub
stos
sub
pop
pop
jmp
and
sbb
call
movs
sub
inc
jbe
ficomp
iret
inc
ficomp
sbb
dec
ins
pop
loop
or
push
pop
inc
inc
push
jb
bound
push
add
jg
inc
pextrw
fwait
aad
in
cmc
retf
test
test
stc
in
jmp
fnstsw
push
jp
jp
push
pop
adc
add
je
xchg
mov
ins
sbb
movs
xor
movs
xchg
in
retf
inc
pop
ror
loope
xchg
sub
xchg
push
cmp
ficom
(bad)
xchg
jb
mov
dec
and
es
outs
mul
popa
pop
movs
pop
cmp
dec
or
sub
lea
xor
adc
add
mov
imul
push
xor
scas
push
data16
or
push
daa
adc
and
(bad)
aad
push
or
cmps
lods
retf
out
mov
dec
add
xor
cmp
cli
adc
xchg
ret
sub
cmps
in
mov
xchg
push
pop
and
mov
mov
adc
sbb
add
mov
mov
jg
xchg
popf
or
push
ins
cmp
fimul
xor
stos
leave
call
rcl
aad
iret
daa
(bad)
imul
stc
jle
aaa
inc
daa
adc
icebp
leave
jg
pop
pop
retf
or
cwde
stos
es
mov
daa
jne
jnp
jbe
or
sub
(bad)
or
push
jo
(bad)
jae
popa
and
and
and
fwait
mov
lods
idiv
fadd
adc
mov
sub
mov
mov
sub
inc
push
mov
jmp
adc
aam
in
xor
cmp
xor
pop
mov
test
inc
and
lods
js
fild
outs
sbb
jg
mov
adc
sbb
stos
(bad)
jmp
cmp
inc
mov
fisubr
push
das
jl
mov
dec
lds
gs
pusha
clc
sti
fisubr
push
fisubr
jne
adc
fsub
iret
xor
outs
mov
and
data16
pop
in
xchg
cwde
mov
cdq
mov
and
stos
inc
sbb
shl
dec
ss
cli
or
xchg
fs
pop
loopne
jne
or
cmp
imul
adc
push
cmp
xchg
sti
add
pusha
and
jmp
std
fbld
or
cmp
dec
xlat
mov
lock
inc
mov
stos
out
aad
sub
dec
icebp
pop
or
vunpckhps
gs
xchg
cli
jp
push
adc
push
gs
fist
aaa
sbb
add
jg
jae
fisubr
int3
and
(bad)
sub
fsubr
movs
aad
xor
pop
nop
repnz
xor
lea
mov
call
(bad)
xchg
inc
stc
xchg
rcl
adc
movs
jmp
pop
call
push
aad
mov
in
sbb
mov
mov
xor
inc
test
xchg
push
mov
stos
or
stc
xchg
push
cmps
stc
shl
mov
pusha
xor
push
fsubr
and
push
inc
popa
xor
repz
push
ja
sub
pop
lea
add
and
fnstsw
inc
mov
ds
sbb
dec
aas
addr16
(bad)
loopne
mov
hlt
retf
int
or
lods
push
push
fwait
adc
xchg
lods
push
cmc
or
ror
fistp
push
jne
stos
outs
fmul
iret
xor
add
cwde
and
(bad)
sar
inc
or
and
inc
scas
push
jb
(bad)
mov
dec
stos
stc
cs
xchg
in
jnp
(bad)
xchg
pop
or
push
push
sbb
xchg
jmp
xchg
sbb
mov
movs
test
retf
shr
xchg
or
adc
push
(bad)
pop
inc
add
ss
in
or
stos
sub
loope
(bad)
imul
sahf
popa
push
push
iret
push
clc
dec
call
mov
and
not
shr
xchg
mov
fild
in
arpl
stc
cli
pop
dec
popw
cmc
rol
in
xor
xor
cdq
stos
(bad)
cs
mov
sbb
nop
dec
repz
clc
mov
add
mov
mov
ins
jp
mov
mov
in
add
cdq
xchg
cmp
pop
call
es
outs
pop
or
dec
xchg
sub
adc
jmp
(bad)
test
jecxz
or
push
or
shr
std
add
pusha
cmp
sbb
sub
data16
stos
ret
movs
lods
sub
test
dec
rol
sbb
mov
jmp
dec
and
in
cmc
jnp
sub
imul
mov
mov
pop
std
mov
inc
dec
adc
jnp
daa
pop
outs
int
cmp
test
(bad)
lea
repz
push
sub
add
aad
jno
dec
dec
and
cmc
sub
retf
jae
fadd
xor
(bad)
mov
outs
stos
retf
in
ja
add
inc
jl
lds
pop
dec
out
jl
shl
mov
and
scas
(bad)
add
or
pop
cmps
push
lea
mov
arpl
call
push
call
pop
mov
xchg
cli
mov
and
cli
push
mov
js
mov
adc
test
xchg
int3
jp
fcomp
dec
cmp
test
and
stos
adc
test
jmp
or
push
call
scas
test
call
call
mov
cmp
dec
add
jp
push
out
inc
int
add
inc
call
ret
dec
or
pop
sub
das
cmc
ss
jbe
shr
retf
xor
scas
fscale
or
or
xchg
test
dec
mov
sub
and
inc
sub
mov
pop
test
icebp
push
adc
jg
xor
push
jo
xor
add
pop
jp
daa
cwde
sbb
idiv
cmp
loope
lahf
pop
jle
pop
add
dec
cmc
mov
adc
out
adc
jp
rcl
stc
movs
je
cmp
xchg
xchg
jns
mov
cli
test
stos
lock
stos
scas
inc
mov
in
jl
push
pop
fidiv
popa
gs
cli
inc
add
out
ficomp
add
icebp
mov
cmp
addr16
out
fucom
xchg
and
mov
sahf
daa
cmps
movs
jecxz
add
pushf
int3
add
xchg
test
es
mov
(bad)
xor
movs
in
xor
inc
push
popf
sbb
lock
cmp
test
xor
xchg
fistp
or
cmp
jg
in
dec
loopne
add
cmps
ficomp
sub
pop
mov
xor
retf
xor
inc
xor
ins
ret
xchg
push
adc
add
xor
fsub
pop
cwde
mov
pop
movs
inc
ds
pop
xchg
retf
popf
shr
idiv
nop
push
jbe
push
aad
lods
mov
jp
ins
and
rcr
mov
push
and
pop
call
sub
fistp
je
nop
mov
jmp
or
sar
mov
and
xchg
sbb
sbb
or
call
jecxz
leave
jmp
lock
test
ins
sub
mov
and
push
aam
loop
sbb
inc
xchg
xchg
pop
xchg
fsub
add
sub
ins
scas
fstp
jne
mov
pop
sbb
or
add
push
out
cmc
push
xor
cmps
std
and
cdq
adc
xor
xchg
pop
jmp
cmp
pop
movs
cmc
cmp
aad
(bad)
jp
arpl
retf
ret
lock
lds
pop
sbb
lock
(bad)
icebp
pop
inc
sub
gs
daa
add
sbb
aad
movs
xchg
cmp
adc
hlt
sar
mov
js
inc
mov
adc
mov
test
add
mov
sbb
movs
(bad)
stos
adc
dec
jp
lods
mov
retf
fimul
jg
sbb
push
jb
hlt
not
test
and
inc
jmp
push
and
das
aad
in
in
sub
movs
cmp
mov
pusha
jne
inc
mov
mov
adc
cmp
push
shl
or
jmp
popa
jge
mov
add
lods
(bad)
test
dec
mov
outs
push
mov
ss
jecxz
xor
movs
sbb
cmp
stos
nop
sbb
out
cmp
aas
pop
and
pop
mov
jb
xchg
dec
scas
pop
stos
adc
aas
xchg
jg
pop
in
dec
push
(bad)
adc
and
ficomp
mov
cmps
dec
cmc
adc
outs
aad
gs
jne
inc
cmps
sbb
out
popf
clc
jae
popa
ficomp
pop
and
lea
icebp
jp
push
dec
icebp
lds
ficom
mov
xchg
iret
cmp
push
xchg
movs
push
pop
pop
cmp
test
es
repnz
jmp
xor
mov
or
cwde
push
fucom
mov
jp
push
in
or
stos
xor
add
ss
jmp
das
xchg
dec
jno
(bad)
cmps
xchg
mov
test
call
jmp
adc
test
cmp
mov
lock
imul
mov
sahf
add
cs
jg
(bad)
fcom
xor
push
data16
mov
xor
cwde
pop
mov
jbe
(bad)
mov
nop
inc
mov
test
jmp
xchg
pop
sbb
scas
gs
jge
outs
xchg
int
scas
pop
dec
les
add
mov
dec
lock
rdpmc
dec
into
xor
jge
add
mov
outs
mov
xchg
sbb
mov
push
and
and
sub
into
xor
mov
xchg
cmc
test
xchg
pop
push
jae
mov
(bad)
adc
cli
mov
pop
lock
mov
(bad)
icebp
inc
in
test
cmc
mov
lock
jge
loop
repz
mov
iret
mov
or
sub
push
add
mov
sub
ds
jmp
push
dec
and
les
fcom
dec
jbe
ins
mov
aaa
sbb
inc
(bad)
in
int3
mov
call
and
push
jg
(bad)
mov
mov
mul
mov
and
push
jmp
push
sahf
jmp
cmp
lods
sub
ret
mov
call
adc
jp
or
call
mov
mov
enter
in
sbb
(bad)
out
or
jo
add
stc
data16
pop
dec
mov
xor
sbb
enter
(bad)
cmp
jl
dec
stos
icebp
fucom
push
mov
rcl
and
jmp
mov
push
adc
sbb
cmp
fcom
fld
inc
movs
add
add
and
pop
ins
dec
loopne
lds
bound
shr
test
sub
mov
mov
sbb
dec
cmp
ret
gs
test
out
push
push
push
test
aaa
xchg
lds
call
fsub
clc
mov
ins
jne
aaa
add
int
cmp
cmc
and
nop
sbb
in
ins
ins
sbb
adc
retf
fwait
adc
test
retf
dec
cmp
xchg
aad
ss
retf
pop
addr16
mov
or
daa
adc
clc
fiadd
and
(bad)
cli
pop
push
stos
ret
jge
js
cs
pop
imul
xor
mov
cmc
dec
cmp
(bad)
push
fisubr
or
cli
lods
dec
stos
data16
aam
clc
push
cdq
popf
sti
aad
stos
mov
xchg
adc
movs
out
cmp
jg
xchg
int3
add
cmp
(bad)
push
iret
fidiv
pop
std
out
movs
xchg
mov
test
jo
retf
mov
shl
(bad)
xor
rcr
add
idiv
stc
inc
dec
loope
xchg
cs
push
ror
rcl
inc
jge
mov
sar
das
inc
mov
shl
fld
jb
ds
outs
jmp
add
into
mov
adc
test
jnp
inc
(bad)
imul
add
dec
jp
lods
pushf
and
jge
mov
push
mov
int3
pusha
mov
lds
mov
inc
movs
(bad)
push
jle
leave
pop
(bad)
xor
xor
and
cli
or
mov
cmp
rol
ror
xchg
push
call
fbld
and
add
inc
stc
cmovle
ror
in
nop
hlt
xchg
cwde
call
retf
idiv
(bad)
lds
mov
jp
loopne
gs
inc
leave
and
cmps
pusha
rol
pop
cmp
in
sub
call
mov
inc
ins
aad
out
fisubr
enter
jns
cmp
inc
jae
xor
sub
xlat
in
retf
cmps
add
mov
test
dec
ja
in
xlat
fbstp
jne
mov
cmps
pop
jmp
cmc
test
jecxz
sbb
mov
push
and
adc
jne
mov
sbb
repz
stos
push
sub
(bad)
sti
lock
cld
xchg
add
pusha
iret
inc
add
pop
xor
(bad)
or
push
mov
imul
jmp
push
sbb
jmp
xor
jmp
call
jmp
je
sbb
push
dec
std
fstp
cmp
and
and
adc
adc
ja
loope
sbb
pusha
mov
xor
gs
jns
out
rcr
in
and
cmp
aam
test
cli
test
cwde
call
sbb
leave
xor
ss
mov
pop
mov
sub
fisub
test
pop
cmp
lahf
push
mov
jne
xor
hlt
inc
call
aad
pop
or
fnstenv
test
call
push
cs
test
adc
mov
ins
adc
xor
jmp
add
xchg
fs
jl
movs
mov
scas
lea
cli
jo
xchg
fist
loop
ss
out
or
push
dec
pop
rcr
addr16
or
sbb
js
jg
int
popf
jp
out
(bad)
shl
outs
pop
test
in
mov
and
test
dec
pop
nop
and
add
dec
bound
jmp
lods
popa
add
and
and
and
mov
aad
ins
dec
call
fisubr
xchg
mov
js
sub
mov
sbb
loope
sbb
(bad)
lds
inc
mov
into
sub
adc
and
outs
dec
jl
cmp
xor
cmp
outs
ficomp
or
sbb
in
dec
cmc
icebp
cmp
xor
sbb
inc
(bad)
repnz
scas
fcom
push
and
fwait
push
loope
push
gs
fucomi
call
push
xchg
pop
fwait
sub
mov
xchg
cmp
adc
or
pop
jbe
inc
adc
xor
sub
test
ins
outs
mov
in
inc
call
pop
loope
or
loope
xor
ds
push
jns
inc
mov
xchg
addr16
iret
mov
cmc
inc
dec
pushf
aad
out
cmp
cmps
aaa
add
and
inc
adc
outs
dec
push
dec
cld
(bad)
sar
mov
xlat
xor
es
es
mov
pop
and
stos
jg
in
cmc
sub
cs
rcl
fisub
or
inc
cmps
fimul
mov
icebp
jp
stos
mov
lds
xchg
add
sbb
and
out
cmps
add
in
add
lock
rol
into
xor
add
cmp
push
pop
outs
dec
(bad)
rol
out
sbb
repz
pop
cmp
call
jne
pop
jmp
aad
pusha
xor
ror
sub
loope
adc
loope
inc
mov
int3
sbb
frstor
sahf
imul
xlat
pop
pop
or
xchg
jo
cli
into
fwait
xchg
leave
scas
dec
xor
rol
stos
mov
xor
(bad)
xor
dec
lods
xchg
fdiv
(bad)
mov
in
popa
mov
inc
loope
push
lods
in
mov
or
clc
mov
adc
jmp
push
mov
dec
or
or
call
int
fdivr
jmp
scas
js
cmp
mov
cmp
or
fsubr
push
xor
popf
ror
icebp
lds
test
xchg
jecxz
adc
adc
imul
fnsave
push
daa
push
mov
dec
add
push
movs
dec
inc
vcmppd
call
loop
pop
scas
out
not
push
jge
ins
mov
cdq
push
cs
mov
jae
lahf
mov
push
xlat
(bad)
push
ds
push
dec
or
push
push
imul
push
jo
sub
scas
and
push
pushf
(bad)
add
fmul
pop
or
retf
cmp
sbb
loop
pop
and
sub
jns
js
sub
add
jmp
fsub
push
(bad)
pop
sbb
dec
jp
add
cdq
repz
mov
loope
mov
and
jp
adc
retf
loop
pop
cmps
sbb
aaa
dec
push
fwait
xor
cmp
add
rol
push
sar
xchg
test
arpl
(bad)
push
(bad)
push
call
xchg
gs
push
popf
sahf
and
cmc
cmps
mov
add
retf
out
inc
(bad)
xlat
push
jo
inc
out
enter
xor
xor
pop
in
jbe
mov
fwait
xor
sbb
ret
inc
test
mov
pushf
sbb
or
call
sub
mov
jb
mov
inc
mov
scas
xor
dec
fnstsw
pop
or
fisttp
or
das
mov
bound
stos
cdq
mov
js
aad
ror
(bad)
fisub
fbstp
leave
sbb
fiadd
retf
push
pushf
movd
icebp
push
jge
mov
call
or
push
retf
repnz
and
jp
sub
push
add
or
jmp
cmp
ret
xor
and
cmp
add
jl
fisub
out
aam
and
mov
aad
push
dec
xchg
and
xor
cli
sbb
movs
les
out
sbb
mov
dec
cmc
dec
into
test
xchg
push
gs
mov
sbb
add
mov
aad
sub
in
fdiv
icebp
sbb
adc
push
fadd
rcl
aaa
add
dec
lahf
outs
sub
fst
addr16
mov
out
and
jge
and
stos
dec
xchg
cmps
shl
(bad)
push
xor
repz
out
cli
inc
adc
sbb
outs
jb
outs
lds
xchg
sbb
aad
fisubr
inc
jne
push
addr16
retf
jo
in
repz
(bad)
pop
push
mov
or
ficomp
mov
sub
and
mov
jle
cmp
pop
movs
sbb
push
lods
rcl
mov
add
jb
adc
test
sbb
loop
out
sub
nop
push
jmp
pop
dec
shr
and
cmp
add
or
nop
cmp
jmp
pusha
jp
jmp
sub
lahf
sub
sub
xchg
mov
shr
mov
outs
stos
mov
xchg
sub
repz
jne
push
jmp
add
dec
in
adc
push
bound
inc
mov
mov
mov
dec
or
mov
dec
mov
jo
sbb
jmp
xor
add
xor
shl
loope
sbb
mov
out
retf
xchg
mov
add
xor
pop
inc
sub
in
enter
call
adc
in
xor
or
sbb
repnz
(bad)
mov
test
mov
xor
push
call
push
shl
pop
js
xchg
dec
mov
ror
add
xlat
ss
addr16
data16
mov
mov
loopne
lds
cli
ins
sub
je
xor
mov
pop
iret
cli
sub
pop
outs
psllq
test
fld
and
dec
loop
fbld
imul
dec
adc
adc
imul
mov
sbb
ins
repnz
loopne
jl
mov
outs
dec
lock
xchg
jg
pop
or
movs
sbb
mov
inc
in
push
mov
sti
pop
mov
add
mov
pop
movs
cmp
inc
mov
push
xor
pop
mov
test
or
dec
je
fstp
ss
ret
in
xor
pop
push
xchg
cmp
xchg
push
jmp
sub
lea
sbb
inc
inc
inc
pop
(bad)
aas
js
mov
test
jmp
xlat
rcl
gs
dec
cmps
add
call
xchg
in
or
push
or
sub
sub
scas
jge
mov
xor
cmp
mov
outs
cmp
data16
jmp
xor
sbb
das
mov
cwde
call
leave
lods
outs
cmp
pop
icebp
mov
jp
push
mul
test
jns
inc
jmp
mov
adc
sub
pop
xchg
cs
jbe
fstp
mov
sub
out
into
rcr
adc
(bad)
dec
rcl
and
outs
push
add
push
cli
inc
rcr
push
add
xor
and
test
and
pop
cli
not
inc
mov
sub
adc
add
mov
pop
ror
and
or
fisub
jne
mov
mov
jg
sar
test
mov
test
or
inc
jne
mov
mov
xor
fnstcw
rcl
aas
out
mov
mov
retf
mov
jne
push
cli
or
in
mov
sbb
sub
cli
or
xor
jg
dec
sar
lds
sbb
sub
and
inc
jmp
add
dec
mov
lods
dec
sub
in
push
mov
into
mov
les
jne
outs
sub
movs
stos
pop
sbb
cmc
popa
mov
movlhps
xchg
inc
mov
test
ficom
enter
cli
daa
call
icebp
lds
sbb
push
or
call
sahf
pop
push
outs
mov
jl
cwde
xchg
int
cmp
cmps
std
and
inc
iret
(bad)
call
adc
adc
xchg
mov
mov
(bad)
push
call
imul
add
loop
push
out
mov
js
out
and
mov
push
mov
cmps
sbb
cmp
cmp
retf
inc
iret
aam
int3
add
sbb
sar
lds
xchg
movs
in
js
sub
sbb
sub
add
jmp
jb
jmp
mov
jp
push
ja
mov
test
xor
xlat
in
xor
dec
out
pop
fs
cmp
push
inc
xor
jge
add
mov
xlat
in
xor
loopne
cmp
sub
cmp
jmp
call
adc
(bad)
inc
call
mov
cdq
cmp
dec
xlat
popa
mov
jne
(bad)
jmp
xchg
sar
dec
push
cdq
movs
das
div
gs
idiv
lods
iret
pop
adc
(bad)
push
shl
outs
jbe
sub
xchg
xchg
movs
loop
lds
sbb
daa
push
push
add
inc
scas
retf
stos
push
fwait
lea
jp
xchg
sub
dec
cmc
jno
enter
gs
fcom
test
mov
xlat
push
push
pop
pop
hlt
dec
sti
cld
dec
sub
ins
jmp
(bad)
mov
sbb
mov
pop
xchg
sub
xchg
sbb
ins
sub
dec
in
push
dec
in
sub
pop
jle
int
dec
repz
sbb
or
cmp
in
dec
lahf
xchg
js
movs
ins
sub
dec
jecxz
fiadd
movs
and
lods
fmul
push
in
inc
jmp
out
xchg
movs
cmc
dec
js
aam
scas
adc
mov
inc
dec
push
cwde
fwait
sbb
pop
cmp
mov
sti
icebp
aad
cwde
(bad)
cli
pusha
imul
jno
jne
retf
test
dec
mov
aad
and
mov
jne
leave
cli
daa
jmp
sbb
test
sub
not
sbb
ss
mov
jne
inc
mov
jmp
dec
sbb
xchg
fs
jne
jp
push
movs
xor
test
inc
in
retf
inc
sahf
pop
ror
movs
loopne
aad
or
push
gs
push
jns
iret
pop
pop
test
push
in
dec
(bad)
cld
mov
mov
sub
and
lds
sbb
add
add
inc
mov
mov
cmp
aad
movs
dec
dec
jle
jmp
xchg
call
cmps
fdivr
add
mov
xlat
and
or
movs
xchg
pop
sbb
cmc
sar
dec
push
adc
inc
mov
adc
(bad)
push
xlat
in
or
sub
dec
js
dec
xchg
push
call
push
sbb
push
adc
sbb
cmp
xchg
fisttp
cli
enter
call
call
cwde
cmp
(bad)
xchg
test
frstor
pop
rcr
fidiv
adc
aad
cli
out
xchg
movs
mov
xchg
nop
sahf
pop
or
mov
jmp
(bad)
retf
lods
addr16
fsub
arpl
add
add
icebp
jge
cmc
sbb
xchg
mov
xchg
push
gs
jp
or
mov
movs
lds
call
mov
cmp
xchg
cli
mov
loop
xor
or
dec
push
aas
out
mov
mov
retf
mov
pop
xor
jg
sahf
push
test
xchg
dec
push
sub
idiv
in
push
call
bound
pop
and
out
xchg
movs
sub
arpl
sbb
or
sti
in
push
sub
mov
test
mov
jge
xor
xchg
mov
test
fcomp
mov
idiv
sub
dec
js
inc
xchg
jmp
loope
pop
inc
das
cmp
push
fiadd
clc
jne
addr16
fimul
js
or
sar
lds
xchg
outs
jecxz
cmp
push
(bad)
sbb
and
inc
jmp
jmp
mov
lds
sbb
dec
fcmove
cmps
cmp
mov
scas
retf
push
shl
xchg
stc
lds
idiv
in
aad
pop
mov
cmp
dec
retf
push
cwde
fwait
sbb
xor
dec
test
xchg
movs
sar
push
dec
push
push
add
popa
push
xlat
fiadd
jmp
xchg
adc
call
aad
sbb
sub
inc
imul
(bad)
cmc
cmp
mov
and
enter
in
mov
movs
push
mov
cmp
outs
adc
sbb
sub
inc
add
mov
pop
cmp
pop
or
jp
sbb
add
mov
and
imul
and
js
cmp
adc
sub
dec
bound
(bad)
push
mov
popw
xor
sbb
or
movs
xchg
pop
jp
cmc
mov
mov
stc
mov
inc
popa
push
push
dec
enter
sbb
in
pop
mov
push
fdiv
mov
jne
mov
pop
mov
add
dec
or
in
fwait
pop
ins
aad
rcr
iret
(bad)
call
pop
cdq
outs
or
scas
(bad)
xchg
movs
enter
sub
es
jne
mov
pop
xor
pop
and
jmp
mov
enter
mov
sbb
fisubr
xor
dec
push
lahf
or
adc
inc
jne
shl
add
xor
call
aad
call
sub
cdq
call
adc
gs
inc
daa
adc
ins
dec
push
repnz
mov
aad
xchg
call
cmps
fcomp
mov
pop
js
jnp
push
sbb
dec
cmp
inc
addr16
addr16
xchg
cli
mov
pop
xor
and
jmp
mov
inc
pop
int3
jb
mov
cli
pop
adc
ja
mov
cld
pop
and
retf
fstp
jp
fcom
mov
fild
addr16
and
jne
test
xchg
lock
cs
mov
jmp
xor
retf
and
enter
call
inc
aaa
dec
push
aas
out
mov
mov
out
ss
test
mov
add
mov
call
cmp
push
out
lds
mov
mov
lahf
cli
rcl
sbb
mov
mov
inc
ds
es
clc
cli
pop
adc
xor
jg
stos
cld
pop
gs
pop
sbb
retf
fstp
jp
std
and
repz
push
pop
and
stos
mov
xchg
dec
out
jb
(bad)
cmp
jb
mov
cli
lock
push
pop
and
lock
or
dec
xchg
xchg
movs
mov
and
gs
(bad)
cmc
dec
sub
pop
xchg
xor
push
inc
inc
mov
mov
inc
mov
call
addr16
fadd
inc
jns
imul
dec
inc
pop
xchg
aad
or
aaa
mov
push
mov
lds
cmps
jg
(bad)
cmc
enter
xchg
stos
add
fcmovbe
out
ss
pop
int3
call
std
ret
adc
xchg
movs
mov
jl
gs
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
enter
jbe
push
iret
mov
in
sub
icebp
jb
repnz
or
jb
jmp
pop
jb
mov
pop
test
inc
inc
in
inc
dec
pushf
add
loopne
stos
(bad)
pop
xchg
inc
and
mul
jg
aaa
call
mov
lods
aaa
(bad)
ins
add
push
not
inc
into
adc
jl
jp
fiadd
cmps
jne
xor
pop
mov
cmc
jp
push
sbb
icebp
cmp
sbb
mov
or
jnp
xchg
std
mov
dec
std
push
sbb
sub
in
pop
hlt
ja
shld
aas
xchg
push
sbb
add
sub
xor
jl
fs
dec
call
ins
shr
or
and
or
inc
dec
call
out
inc
out
lahf
xor
jl
fs
scas
mov
rcl
sbb
scas
inc
xor
sbb
and
xor
je
mov
push
lahf
movs
or
push
xor
jp
fisub
jne
aad
push
cwde
and
stos
cmc
pop
in
cmc
jp
push
xor
jp
fisub
jp
jmp
int
adc
js
push
xor
sub
cli
aad
push
cwde
and
stos
cmc
pop
in
cmc
jp
jmp
test
int
gs
inc
jb
call
adc
in
movs
jp
jb
sbb
sub
cli
inc
jp
call
adc
jb
push
sbb
jb
(bad)
or
gs
push
adc
jp
xchg
aad
lds
mov
test
add
sti
and
fimul
adc
cld
jo
data16
test
cmp
add
sti
inc
jmp
cmp
jp
dec
cmc
test
imul
mov
mov
(bad)
adc
aaa
mov
out
idiv
push
xchg
inc
test
push
fs
in
push
xchg
sub
ds
mov
jnp
imul
xor
bound
mov
jne
inc
push
stos
jmp
ins
aad
lods
or
inc
gs
inc
call
xor
sbb
js
outs
rcr
add
fisub
cli
inc
adc
xor
jp
dec
cmc
test
xchg
xlat
sbb
aad
(bad)
push
inc
inc
jmp
and
dec
cmc
jp
and
sbb
xchg
inc
test
push
inc
bound
mov
jne
inc
add
dec
idiv
push
sbb
sub
mov
bound
cli
stos
adc
in
lock
(bad)
fcom
cmps
add
xor
add
sti
and
fimul
adc
lds
lds
mov
sub
test
and
std
push
in
(bad)
(bad)
jne
add
cmc
and
cli
(bad)
add
and
adc
js
and
sbb
mov
movs
mov
(bad)
adc
retf
test
pop
loopne
bnd
pusha
fidivr
lds
xchg
fldenv
je
cmc
loop
mov
add
mov
pop
test
aad
movs
or
sub
mov
inc
retf
and
test
adc
dec
test
jp
xchg
fisub
jge
dec
jmp
add
dec
aad
and
cmp
call
popa
retf
dec
push
pop
call
adc
jp
and
pop
or
fsub
jbe
cmc
loop
mov
and
push
jp
xchg
cmc
inc
movs
or
test
xchg
fisub
push
inc
inc
jmp
add
or
push
in
bound
fisub
push
inc
inc
jmp
and
push
jp
xchg
cmc
inc
movs
or
add
retf
ja
test
push
gs
stos
adc
lds
test
imul
movs
or
test
mov
gs
test
push
gs
stos
adc
jp
push
cmp
or
ficomp
jmp
cli
mov
jnp
imul
lds
xor
push
gs
push
adc
jp
xchg
aad
lds
mov
test
xchg
fldenv
jne
dec
jmp
add
dec
hlt
jnp
imul
movs
or
jne
addr16
dec
in
xchg
cmp
mov
inc
lds
fs
cmc
inc
movs
or
test
xchg
(bad)
jae
dec
out
jne
and
stos
adc
in
bnd
pusha
ficom
scas
add
sbb
retf
je
inc
jmp
popf
and
lds
in
hlt
jg
dec
test
movs
cmc
mov
xchg
xchg
fsub
ja
dec
retf
and
mov
hlt
js
outs
xlat
sbb
or
push
ja
push
call
sub
push
mov
inc
cli
dec
aam
out
lock
and
dec
out
inc
enter
call
adc
js
outs
xlat
sbb
or
imul
pop
mov
sub
stc
push
data16
leave
cmp
push
pushf
adc
cli
imul
adc
sub
or
cmp
inc
div
imul
cli
mov
mov
pop
loope
aad
lds
cmp
or
inc
gs
inc
call
xor
in
idiv
push
mov
jp
xchg
fsub
ja
inc
retf
and
test
std
jae
popa
ficom
stos
sub
cmp
leave
jno
inc
jmp
or
aad
lds
sbb
sub
shr
test
mov
es
push
mov
lds
xchg
aad
lds
mov
test
mov
gs
test
push
fidiv
call
lds
xchg
aad
movs
or
and
mov
jne
inc
add
mov
inc
lds
sbb
aad
cli
(bad)
add
and
stos
adc
jp
xchg
cmc
inc
movs
or
test
xchg
(bad)
jb
inc
jmp
and
push
jp
xchg
cmc
inc
movs
or
add
bound
mov
mov
call
test
jp
mov
gs
mov
jne
inc
add
dec
hlt
pop
test
in
bound
fisub
mov
inc
jmp
inc
and
stos
adc
inc
lds
cmp
or
ficomp
jmp
and
push
jp
xchg
sub
pop
cmc
dec
aas
movs
mov
push
inc
inc
jmp
pop
bound
jp
push
sbb
mov
gs
test
push
gs
mov
jnp
imul
movs
or
test
add
fiadd
mov
push
jmp
xchg
sub
cmps
or
sub
idiv
bound
pop
lds
jp
push
sbb
mov
gs
inc
call
xor
call
push
sbb
xchg
cli
(bad)
add
and
mov
hlt
pop
test
in
or
gs
and
fimul
adc
jns
outs
rcr
cmps
or
fisub
fiadd
mov
mov
sbb
jp
xchg
cmc
inc
movs
or
add
bound
mov
jne
inc
add
dec
cmc
jp
push
lds
test
xchg
(bad)
ja
inc
in
pop
xchg
das
cmp
pop
in
aad
lds
sbb
sub
cli
inc
retf
and
test
repz
popa
fst
stos
add
cmp
and
fimul
adc
aad
lds
cmp
or
fldenv
jae
inc
jecxz
xchg
sub
pop
dec
icebp
push
jp
xchg
aad
test
cmp
xchg
fsub
jo
inc
loop
nop
xchg
mov
mov
loopne
in
aad
pop
sub
cmp
leave
ja
inc
in
pop
popf
das
cmp
dec
neg
outs
ror
movs
cmc
xchg
inc
test
push
fs
out
push
xchg
and
sbb
pop
out
shr
inc
movs
or
add
retf
ja
inc
call
cmp
pop
sbb
js
outs
rcr
add
cmc
ret
test
push
gs
stos
adc
out
lock
dec
test
movs
cmc
mov
xchg
xchg
fbld
jge
inc
retf
and
stos
adc
jp
xchg
aad
lds
mov
test
add
sti
inc
jmp
inc
and
stos
adc
jp
xchg
aad
test
cmp
mov
gs
test
push
gs
mov
inc
lds
cmp
or
ficomp
jmp
and
dec
aad
lds
sbb
sub
add
fisubr
adc
jp
push
cmp
or
inc
gs
inc
call
xor
in
lds
xchg
cmc
inc
movs
or
movs
mov
push
inc
inc
jmp
cli
stos
xor
jp
and
sbb
xchg
inc
test
push
(bad)
add
and
stos
adc
jp
xchg
sub
lds
mov
test
xchg
fsub
jae
dec
jecxz
call
adc
jp
xchg
aad
lds
mov
test
add
sti
and
fimul
jmp
ins
rcr
sub
(bad)
add
fisubr
adc
jg
dec
test
movs
cmc
mov
test
xchg
(bad)
sti
inc
jmp
fwait
add
mov
inc
lds
sbb
xchg
cli
(bad)
add
and
adc
pop
test
in
or
inc
bound
mov
jne
inc
add
dec
cmc
test
and
sbb
lds
test
push
(bad)
add
es
ss
lds
test
and
sbb
lds
test
xchg
cli
(bad)
add
fimul
jmp
imul
movs
or
imul
push
gs
stos
jmp
push
cmp
or
ficomp
call
aaa
mov
sbb
jp
xchg
cmc
inc
movs
or
add
bound
mov
jne
inc
add
(bad)
cmc
jp
push
sbb
sub
(bad)
add
fisubr
xor
pop
test
in
bound
fisub
jne
test
push
gs
mov
inc
lds
cmp
or
ficomp
jmp
add
dec
or
push
mov
jp
add
inc
inc
jmp
add
dec
idiv
imul
cmp
jne
and
fisubr
xor
pop
test
in
bound
fisub
jne
and
fisubr
adc
test
and
sbb
lds
test
mov
gs
test
push
gs
push
xor
pop
test
in
bound
fisub
push
inc
inc
jmp
add
test
dec
test
movs
cmc
mov
add
into
jne
inc
inc
adc
sahf
add
dec
xor
ds
movs
ret
test
or
inc
mov
or
fs
arpl
mov
pop
push
leave
es
inc
aad
xchg
or
cli
test
in
jne
mov
mov
iret
repnz
and
push
pop
fcomp
stos
movd
mov
push
mov
pop
jmp
into
cmps
jo
mov
(bad)
ret
out
movs
aas
aam
adc
or
rcr
es
lds
je
dec
ror
pop
in
add
and
mov
inc
fild
cli
call
dec
fst
dec
(bad)
mov
mov
push
repz
jmp
popa
mov
add
dec
ret
pop
fnstcw
sub
push
call
push
ss
push
nop
outs
retf
inc
fimul
in
mov
push
les
sti
(bad)
out
inc
fild
cmp
sub
imul
inc
xchg
mov
push
popf
push
cmc
push
out
push
aad
fisttp
sub
outs
xlat
pop
fimul
loope
pop
mov
call
inc
pop
pop
and
jp
or
jns
arpl
test
test
cmp
inc
inc
jge
inc
xor
push
mov
retf
push
test
or
and
sbb
inc
stc
jl
imul
sbb
outs
xchg
push
out
out
xor
adc
test
push
inc
movs
outs
add
cmp
call
jno
sbb
inc
(bad)
dec
mov
out
dec
imul
in
dec
stc
sahf
and
and
dec
retf
dec
xchg
ja
shr
push
test
xchg
jnp
imul
mov
add
inc
mov
addr16
ds
cmp
jns
dec
lds
cli
test
and
jne
cmp
jb
xchg
or
shl
aad
pop
xchg
xor
movs
push
retf
and
sub
xchg
sub
and
neg
test
fst
cdq
add
retf
inc
xchg
dec
cmp
xchg
push
loope
rcr
and
je
jno
inc
push
xchg
cmp
in
cmc
push
icebp
adc
xor
std
inc
stc
jne
aaa
fwait
adc
push
test
mov
inc
div
add
clc
inc
(bad)
push
sbb
sub
pop
ror
out
out
xor
cmp
gs
jne
fs
mov
cmp
cld
add
push
stos
pop
mov
hlt
xor
gs
jne
fs
cli
pop
xchg
pop
call
mov
cmps
xor
inc
retf
jno
dec
cmp
push
xchg
pop
call
mov
mov
jp
es
push
retf
inc
fcom
mov
and
dec
lds
in
movs
xor
fisub
fld
push
or
or
les
jp
push
sub
ins
in
push
shl
jno
mov
sbb
dec
les
in
lahf
add
gs
sub
movs
setns
les
mov
xlat
dec
jecxz
lds
xchg
pop
stos
sbb
sub
cmp
fisubr
int
sub
add
repnz
jmp
loope
or
daa
jmp
fcom
sbb
pop
push
cmp
inc
retf
mov
xor
push
adc
shr
popf
or
add
data16
inc
aam
cmps
mov
and
(bad)
mov
jb
adc
push
mov
xor
fstp
adc
call
jge
jae
or
adc
movs
or
fisub
jne
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
jbe
fld
jl
sbb
xchg
call
xor
call
out
adc
mov
aad
fldcw
add
push
int
in
sar
ins
cmps
sub
mov
sub
stos
pop
add
into
ins
inc
inc
sbb
xchg
sar
int
push
div
mov
pop
lds
xor
pop
loopne
in
gs
jne
sub
pop
fstp
adc
adc
or
test
mov
inc
cmp
dec
mov
iret
gs
xchg
sbb
or
pop
loope
retf
stos
push
mov
aaa
in
inc
jmp
xlat
pusha
(bad)
jl
nop
dec
sbb
or
dec
loope
cld
scas
adc
test
stc
dec
out
push
fnstenv
jle
xchg
push
jp
inc
xchg
jg
push
xchg
outs
test
mov
aam
mov
pop
iret
and
daa
mov
mov
jle
dec
mov
lock
mov
jne
add
fdiv
mov
or
jg
adc
dec
in
dec
mov
daa
call
pop
jne
into
cdq
test
sbb
jns
xor
dec
xchg
mov
push
xchg
mov
out
add
cmp
push
jp
jmp
or
jns
xor
cli
xor
and
sti
jg
rcr
mov
add
and
push
jmp
fldcw
retf
das
jp
push
jp
daa
bnd
outs
fcomp
dec
xchg
mov
movs
push
mov
int
call
and
jo
xor
pop
lods
or
push
out
hlt
scas
or
add
fmul
pop
into
pusha
retf
xor
adc
jg
pop
(bad)
or
or
sub
imul
sti
ja
jo
xchg
push
fwait
pop
mov
mov
(bad)
push
hlt
mov
mov
aaa
repz
mov
or
or
fnstenvw
cmps
push
out
push
outs
xor
inc
leave
push
out
add
or
adc
les
push
jmp
cli
adc
pop
fist
inc
sub
add
jnp
arpl
pop
cmc
pop
hlt
mov
mov
xchg
inc
call
jno
je
mov
xchg
mov
mov
adc
inc
shl
sub
xor
push
out
mov
mov
test
lods
add
pop
loopne
scas
mov
leave
push
pop
jmp
and
and
sub
lds
sbb
jb
pop
aad
xor
inc
in
mov
push
out
jne
test
loop
scas
inc
shr
(bad)
push
push
leave
and
jle
outs
xor
mov
mov
retf
mov
cli
jno
or
mov
mov
cmp
jmp
add
jno
pop
outs
add
mov
jno
dec
xchg
inc
jmp
out
imul
cmp
add
in
dec
out
and
and
jbe
push
shl
sbb
sbb
cmp
sub
dec
jmp
jmp
inc
fcom
into
jo
xchg
push
pop
movs
ja
sbb
js
mov
aaa
test
hlt
pop
out
inc
(bad)
cmp
jge
fisttp
repz
adc
pop
xchg
and
pop
cmc
aaa
(bad)
jl
in
cwde
jp
pop
mov
adc
adc
cmc
push
mov
jl
lds
ds
outs
rcr
loop
movs
cli
adc
push
fisub
iret
jl
jno
inc
mov
jo
popa
mov
jmp
cmc
scas
xor
or
loope
sar
sub
(bad)
and
xchg
into
leave
cmps
or
mov
dec
sbb
sub
pop
inc
pop
mov
mov
push
in
or
outs
retf
jns
fisub
lahf
cmp
jbe
popa
retf
pop
das
sbb
dec
cmc
add
push
loopne
loop
pop
mov
xor
dec
out
push
mov
xchg
cmp
sbb
data16
cmp
pop
fdiv
or
jle
imul
pop
and
jmp
dec
cli
fwait
add
add
inc
in
ret
jo
xchg
das
xchg
pop
or
retf
dec
loopne
lock
cmp
or
dec
out
jge
push
cmc
inc
cmp
and
imul
inc
std
xchg
mov
add
ret
xor
aas
sbb
mov
dec
enter
push
movs
jne
sub
pop
into
imul
or
dec
out
mov
mov
test
pop
mov
xor
and
mov
mov
aad
mov
mov
dec
test
push
scas
adc
pusha
jecxz
fisub
cmp
pop
mov
mov
cmp
pop
mov
inc
jmp
inc
out
push
aad
fisub
lds
cmc
adc
sbb
sub
gs
dec
test
retf
sub
push
jmp
xchg
cmp
dec
jmp
outs
(bad)
pop
call
jmp
inc
stos
inc
fld
jns
xchg
das
xchg
mov
mov
push
test
mov
and
pop
stc
jno
jo
mov
fwait
pop
mov
mov
push
neg
mov
mov
add
jbe
add
pop
mov
xchg
dec
mov
dec
movs
sbb
mov
popf
sbb
dec
mov
aam
mov
in
call
fs
or
inc
int
or
sbb
jmp
mov
cmps
pop
cmc
cmp
ins
jmp
ret
es
fst
push
lds
dec
lds
sub
jns
pop
jmp
in
and
adc
jmp
lds
mov
pushf
jp
cmp
push
call
xchg
mov
dec
in
in
inc
out
inc
or
push
aad
movs
and
pop
test
or
adc
cmp
or
dec
mov
sar
and
lods
xor
(bad)
div
mov
cmps
sub
dec
int3
push
imul
nop
adc
push
jbe
imul
mov
scas
sbb
inc
in
fbld
popf
or
pop
call
jp
or
or
push
mov
loope
cdq
sbb
push
cmc
sub
xor
and
adc
mov
ds
jne
xchg
cs
ret
cmc
loop
inc
icebp
mov
jge
pop
lds
add
add
(bad)
lds
add
repnz
jge
mov
cmp
pop
cdq
push
push
cs
mov
add
pop
mov
mov
(bad)
adc
push
xor
or
sbb
cmp
ret
mov
xchg
sub
inc
mov
in
(bad)
movs
or
fisub
jne
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
mov
fild
movs
or
inc
gs
adc
data16
or
add
in
stos
or
fisub
jne
inc
jmp
add
icebp
arpl
outs
int3
sbb
sub
fisub
jne
pop
jmp
add
dec
cmc
cmp
push
sbb
and
es
inc
mov
rol
add
aad
movs
jb
test
jne
inc
mov
shl
out
adc
or
data16
xchg
aaa
and
lds
push
jecxz
adc
push
mov
enter
movs
push
clc
pop
fsub
xchg
es
push
icebp
dec
jecxz
enter
pusha
sub
sbb
xor
mov
scas
or
imul
push
fld
aaa
xor
test
in
out
jne
sub
jle
dec
movs
in
pop
std
add
mov
ins
call
xchg
mov
mov
pop
cmc
adc
(bad)
and
mov
inc
shl
outs
lods
sbb
cmp
xchg
(bad)
or
stos
clc
adc
cs
sub
scas
inc
fst
cmp
cmovnp
jmp
push
inc
ja
test
cld
sahf
loopne
dec
mov
das
gs
aad
in
cmp
(bad)
mov
cmp
ret
xchg
sti
mov
in
mov
add
adc
mov
xchg
cmp
jmp
jbe
ins
mov
mov
es
pop
push
sub
sbb
leave
jbe
push
stos
loope
retf
push
jmp
xchg
sub
sub
std
adc
push
ror
pop
sbb
sub
scas
mov
cmp
fwait
push
and
mov
fidiv
push
sahf
mov
movs
clc
mov
stc
out
imul
mov
in
mov
jne
inc
cli
inc
jmp
dec
mov
mul
cmp
and
xchg
and
push
and
stos
jb
mov
cmc
adc
sub
mov
xchg
ficom
jmp
call
push
cmp
push
inc
pop
or
arpl
(bad)
push
call
add
lds
mov
sbb
inc
xchg
ror
xor
jge
inc
mov
xor
and
pop
movs
push
mov
movs
cdq
mov
loopne
xchg
into
call
xlat
fidivr
xor
dec
cmc
mov
push
cmp
or
push
loop
mov
push
xchg
adc
ja
xor
aas
xchg
dec
cmc
dec
cmp
pop
loop
sti
mov
adc
xor
add
test
adc
push
dec
fstp
sub
xchg
sub
lds
retf
sub
xchg
mov
sbb
sub
cli
push
xchg
call
jmp
dec
mov
push
jmp
mov
push
call
pop
aas
in
cs
adc
scas
outs
shl
dec
xchg
mov
retf
push
mov
pop
in
imul
xor
enter
out
xor
cli
fisttp
inc
aad
out
jp
stc
sbb
outs
aad
repnz
cwde
jnp
aaa
cdq
sbb
inc
out
jl
add
or
jp
add
sar
repnz
scas
sbb
sub
cmp
dec
out
pusha
jmp
out
aad
jmp
mov
xor
dec
cld
mov
lods
ja
sub
(bad)
push
retf
jl
xchg
xor
int
idiv
mov
stos
sub
aaa
shl
jp
jmp
push
int3
and
push
pop
xchg
mov
sahf
adc
dec
into
jbe
push
cmp
movs
push
movs
sbb
inc
xchg
scas
ins
scas
sbb
dec
lea
inc
iret
pop
and
add
pop
xchg
scas
add
xor
ins
ret
add
mov
xchg
jae
outs
rcl
sar
xchg
inc
jecxz
pushf
push
popa
pop
test
push
mov
retf
push
cmp
mov
sahf
jge
daa
out
dec
mov
lds
sub
mov
retf
jge
or
mov
enter
call
ds
fs
cs
cdq
ss
push
mov
push
retf
scas
addr16
jae
sub
inc
enter
pop
jecxz
mov
jg
inc
(bad)
dec
fild
es
jne
xor
xlat
jo
adc
cmp
enter
or
sub
sbb
dec
inc
push
jp
in
mov
je
jp
sub
add
test
mov
fst
push
out
jno
push
pop
(bad)
das
bnd
cs
retf
cmp
sub
test
and
pop
shl
sbb
mov
xchg
push
scas
push
mov
cmps
arpl
jns
sub
scas
pop
retf
and
adc
pop
jecxz
fwait
add
push
loope
in
dec
mov
or
add
sub
repnz
adc
cmp
cs
cs
jge
add
jle
outs
idiv
sub
dec
mov
lods
dec
repz
lods
or
stc
jae
jle
mov
sub
pop
fsubr
pop
adc
mov
(bad)
jb
imul
mov
xor
in
xchg
cmc
arpl
pop
test
cmc
cmp
dec
mov
sbb
or
jmp
dec
shl
pushf
jae
add
dec
xlat
pop
fmul
push
mov
mov
test
rcl
arpl
jmpw
popf
and
pop
stos
inc
shl
(bad)
sub
mov
mov
cmp
dec
in
shl
adc
lods
add
jae
inc
movs
dec
out
stc
sahf
add
sbb
jno
push
(bad)
in
adc
cs
jno
addr16
hlt
push
sahf
ss
dec
test
imul
jp
mov
nop
jns
cmp
jg
outs
mov
mov
lods
add
call
les
jl
sbb
in
bound
shl
fsub
mov
push
sbb
or
pop
fidiv
icebp
sub
dec
movs
add
addr16
retf
popa
hlt
xchg
dec
call
jecxz
ror
cli
sahf
or
add
push
ficom
push
retf
jae
lea
rcr
jge
ror
lods
adc
push
inc
push
ret
jo
cmps
dec
nop
aaa
mov
aad
retf
push
loop
out
sub
adc
in
pop
repnz
das
xchg
adc
or
pop
loopne
clc
xlat
add
adc
pop
ins
fidiv
popf
das
call
data16
loopne
clc
mov
into
add
adc
lods
xor
or
or
jl
sub
lock
and
dec
in
das
mov
call
js
dec
in
arpl
sub
sub
cmp
add
fist
nop
and
adc
js
outs
int3
jle
push
pop
mov
lods
and
adc
inc
loop
stc
inc
lds
mov
xchg
sbb
or
not
and
pop
aam
leave
pusha
xor
stc
adc
jg
test
adc
stos
push
test
mov
repz
in
cwde
daa
fldenv
mov
xchg
sbb
inc
mov
sar
icebp
inc
mov
pop
movs
inc
mov
es
retfw
mov
push
mov
pushf
ja
jns
push
test
loope
or
push
retf
ins
cld
push
lds
ss
sub
or
ja
add
pop
div
pop
cld
push
xchg
jns
ja
adc
popa
xor
out
(bad)
retf
rcr
push
sti
or
enter
pop
pop
cwde
xchg
je
xor
dec
mov
mov
cli
inc
test
sbb
inc
mul
sti
add
pop
movs
loopne
enter
add
add
addr16
movs
shr
cmp
push
test
push
iret
popa
xor
jbe
fistp
aaa
add
push
or
mov
sbb
sbb
mov
mov
cdq
or
call
gs
lds
hlt
ret
dec
xchg
aad
lds
cdq
adc
mov
or
push
enter
stos
in
push
scas
out
das
xchg
retf
jl
jmp
js
int
cmp
mov
aas
sbb
dec
popa
cwde
adc
bound
call
aad
sub
adc
jp
push
stos
dec
aam
retf
adc
xchg
and
mov
movs
sub
pop
pop
mov
daa
cmp
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
dec
cmc
jp
push
sbb
sub
cli
inc
jmp
add
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
ds
cmp
mov
and
shr
scas
add
popf
mov
xchg
mov
psrlw
lods
or
and
adc
je
xor
lahf
pop
adc
fwait
mov
sub
and
ret
mov
pop
out
or
fnsave
add
inc
or
xchg
inc
dec
xchg
push
fcomp
sub
scas
add
fisub
outs
xchg
movs
lds
retf
in
stc
aas
xchg
pushf
jo
retf
pop
mov
jl
adc
in
(bad)
dec
xchg
fistp
mov
xchg
retf
mov
xor
imul
pop
inc
sub
jle
xor
jmp
push
pushf
ficom
inc
rol
imul
cmp
jo
daa
push
adc
push
sar
xlat
pusha
call
ins
pop
mov
pop
scas
sahf
imul
or
imul
jmp
xor
popf
fistp
in
push
sar
dec
and
push
pop
test
lds
mov
pop
mov
fxch
aad
jne
sbb
and
mov
mul
(bad)
jmp
dec
int
sbb
and
imul
pop
inc
sub
loope
aad
mov
cmp
lds
push
mov
cmp
inc
jp
dec
popf
int
and
mov
mov
popa
jae
iret
xchg
mov
jae
inc
iret
inc
xchg
pop
das
sbb
pop
dec
and
dec
mov
push
and
dec
daa
mov
and
xor
(bad)
jo
push
les
cmps
in
in
fwait
xor
add
push
imul
call
jns
and
xor
and
push
mov
dec
shr
pop
movs
movs
pop
jmp
sti
les
or
int3
mov
dec
aas
outs
(bad)
call
fiadd
xor
xchg
mov
(bad)
fisttp
inc
xchg
jb
daa
aam
bound
(bad)
pusha
push
shl
pop
cmp
shl
hlt
test
sbb
mov
xor
xchg
hlt
stos
outs
xchg
xor
inc
mov
xor
sbb
ror
test
call
mov
fwait
mov
inc
jecxz
inc
mov
jle
leave
push
mov
popf
mov
xor
adc
mov
xor
xchg
shr
fwait
pop
mov
pop
add
mov
ins
in
scas
ds
cli
test
dec
mov
xor
mov
xor
sbb
sub
push
ror
sbb
xchg
rcl
(bad)
cmp
outs
sub
mov
pusha
xchg
push
dec
jecxz
add
aam
inc
clc
adc
and
movs
sub
and
ret
mov
inc
lock
pop
iret
add
inc
imul
dec
xchg
adc
sbb
sub
scas
or
popf
nop
icebp
xchg
movs
adc
xor
mov
inc
pushw
test
cmp
imul
and
in
rcr
or
adc
xor
fistp
mov
sbb
push
and
inc
mov
pop
shl
scas
or
lahf
lahf
inc
xchg
(bad)
js
jl
mov
xchg
fiadd
mov
das
sar
scas
add
jle
fstp
test
and
mov
in
mov
sub
add
adc
test
push
and
aas
dec
mov
fxch
mov
hlt
in
js
retf
adc
xor
and
jecxz
sub
or
rol
inc
mov
and
pop
mov
pop
scas
sbb
(bad)
repnz
mov
xchg
adc
dec
cmp
aas
dec
mov
xor
aaa
xchg
sahf
in
vmulss
mov
sbb
xchg
push
inc
test
mov
retf
movs
outs
mov
jne
popf
mov
xchg
in
mov
cdq
shl
aam
stos
shl
inc
scas
es
stos
les
mov
dec
dec
scas
or
popf
xor
jecxz
jl
jg
and
push
fs
cmp
mov
pop
sbb
lahf
mov
push
outs
fs
test
mov
jle
xor
pop
and
fwait
ss
cmp
and
sti
sub
popf
mov
inc
dec
mov
and
cli
mov
mov
int3
shr
out
xor
popf
xchg
sub
mov
fcom
jnp
cmps
and
and
sbb
aam
push
rcr
loope
outs
mov
ja
lds
add
push
test
push
fld
and
ficomp
inc
loopne
pop
dec
mov
push
pop
imul
sub
cmp
jmp
(bad)
fcomp
xchg
dec
outs
mov
mov
fild
loope
mov
and
fcmovnbe
inc
test
fcmovbe
les
(bad)
retf
in
inc
test
cmps
in
ret
cmp
pusha
mov
sbb
push
inc
and
bound
dec
cmp
pop
push
jo
imul
ret
retf
ss
aam
push
imul
dec
push
imul
aam
inc
adc
push
pop
pop
mov
int
push
mov
arpl
lds
stc
lds
adc
cdq
outs
ins
les
push
repz
loop
jo
imul
fstp
pop
mov
ffree
and
dec
fwait
in
xchg
les
add
pop
retf
dec
cmp
and
(bad)
and
dec
or
int
jmp
(bad)
imul
sub
in
outs
scas
sub
rcr
xchg
fadd
out
and
xchg
mov
jne
mov
and
sar
push
xchg
out
nop
enter
jmp
cmp
sbb
movs
sbb
enter
dec
xor
xor
bound
shl
mov
adc
cmps
push
add
imul
push
inc
push
sub
adc
cmp
fadd
cmp
pop
inc
in
(bad)
dec
lahf
mov
dec
pop
fs
fs
shl
mov
xchg
mov
xor
xchg
xor
dec
cmp
mov
movs
push
inc
xor
jns
xchg
mov
pushw
retf
imul
imul
xchg
sbb
mov
cdq
fwait
xor
fucomi
in
test
jecxz
rcr
int3
cs
loop
in
mov
leave
fild
cmps
mov
nop
imul
hlt
shl
outs
gs
movs
cli
imul
push
mov
mov
stc
sub
fwait
je
inc
cmps
mov
outs
lods
in
popf
dec
xchg
mov
jp
mov
push
sbb
sbb
shl
mov
and
inc
xchg
lahf
ror
dec
pop
cmp
ficom
xchg
mov
inc
div
(bad)
fadd
lock
nop
nop
nop
nop
nop
nop
int
(bad)
adc
add
jl
dec
test
(bad)
ss
cmps
push
sub
cmp
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
lods
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
outs
push
loopne
push
gs
ins
es
test
pushf
cli
cmp
std
shr
xchg
repz
into
adc
sbb
push
fsubr
mov
ins
les
dec
int3
dec
addr16
pop
mov
inc
sbb
ror
gs
outs
xchg
mov
push
test
mov
or
xchg
and
nop
daa
(bad)
push
pop
ins
adc
pop
in
rcl
inc
(bad)
mov
xor
push
loopne
cmp
dec
adc
and
inc
jne
mov
arpl
stc
push
or
ins
imul
es
arpl
test
or
cwde
sub
jecxz
bnd
xchg
cwde
mov
jne
push
pushf
mov
in
push
pop
fst
in
sbb
or
and
cmp
inc
(bad)
les
jmp
add
or
mov
cmp
cmp
cmp
test
pop
pushf
popf
cmp
cli
loop
das
cdq
mov
std
cwde
sub
sbb
sbb
rep
pushf
or
pop
sbb
je
xchg
mov
in
lds
outs
pusha
jecxz
mov
imul
lea
fnstcw
mov
and
pushf
in
sahf
adc
loope
pop
in
test
in
dec
loope
arpl
pop
add
push
cmp
fistp
hlt
pop
sub
mov
and
pop
sub
mov
push
and
sbb
sub
mov
xor
jmp
adc
xor
push
in
int
cmp
dec
dec
bound
mov
pushf
cld
xchg
pop
lock
ins
add
popa
in
lods
ret
std
fucomp
pop
sbb
pop
or
lods
pop
jl
mov
fs
sahf
mov
dec
and
popa
fs
jmp
adc
pop
mov
jmp
mov
sbb
push
or
int
fstp
in
cmc
add
daa
pop
ss
push
jl
les
sub
imul
mov
cmp
hlt
lock
lods
pop
xchg
mov
lods
sbb
neg
mov
or
jno
rol
stos
pop
inc
test
aaa
shr
mov
aad
sub
repnz
cdq
pop
xchg
lock
popf
loope
and
es
aad
xchg
pop
hlt
dec
repnz
jl
cmp
call
lods
frstor
mov
add
sub
std
cwde
sub
xchg
call
xchg
push
in
add
or
std
sbb
inc
sar
adc
dec
mov
popf
lea
icebp
pop
mov
xor
jge
js
popf
call
add
mov
call
sar
repnz
inc
inc
jb
jmp
popf
ins
(bad)
lock
je
lods
mov
jge
push
add
adc
cmp
sub
aad
jmp
adc
pop
mov
sti
das
sar
cdq
push
cld
cmc
test
cmp
jp
or
int
les
inc
(bad)
jge
lods
jge
div
mov
ret
cmp
jl
dec
adc
xchg
imul
jl
or
push
rcr
sti
(bad)
fnstsw
push
xchg
lods
popf
mov
jne
mov
prefetch
cmp
inc
mov
out
push
xor
sub
mov
stos
inc
xor
jae
hlt
icebp
inc
sti
enter
cmp
iret
not
ins
out
mov
mov
xchg
adc
pop
jns
or
push
fdiv
std
ror
mov
cmps
lea
jae
stc
loop
sub
retf
call
or
cmp
jns
popf
xor
sub
in
dec
and
and
cmp
scas
in
mov
fsub
lods
fadd
and
xchg
push
in
jnp
cmp
jg
push
dec
retf
into
jns
popf
ss
dec
(bad)
fdivr
mov
sbb
xor
adc
mov
mov
mov
jmp
gs
sbb
mov
sub
push
mov
pop
push
jno
or
xor
shl
loopne
loopne
xor
and
(bad)
mov
pop
sub
and
std
scas
sub
pop
std
dec
push
jg
push
movs
xor
dec
dec
hlt
add
sub
mov
sub
jo
(bad)
pop
mov
lods
pop
sar
or
sub
retf
cmp
shr
jno
push
pop
clc
push
mov
sbb
arpl
mov
xor
cmp
add
jl
lods
push
in
inc
dec
jbe
gs
dec
adc
adc
ret
adc
xor
cmp
repnz
cmp
xor
mov
pop
stos
loop
lds
sti
dec
sar
adc
fs
adc
js
cmc
into
ds
cmp
std
and
pop
repz
lea
push
sbb
cmp
push
cld
inc
xchg
jb
in
pusha
fstp
repz
icebp
pop
pop
push
popf
xor
lods
int3
or
jge
in
push
cld
mov
in
(bad)
xor
push
pop
test
mov
xchg
jl
cmp
dec
adc
dec
push
daa
adc
(bad)
lods
popf
jge
je
dec
in
dec
aam
int3
movs
pop
and
aaa
jb
lea
mov
mov
pop
push
adc
stc
mov
jg
sub
push
mov
loope
call
dec
loope
add
sahf
cmp
pop
jne
int
fld
bound
jno
dec
stc
fwait
lods
sub
jo
repnz
sub
mov
int
push
popa
clc
pop
mov
or
pop
mov
push
mov
stc
gs
jmp
gs
cmp
test
(bad)
sbb
mov
aas
mov
jno
adc
mov
xchg
cld
repz
sbb
bsf
dec
sub
inc
sub
int
aad
sub
mov
mov
or
iret
mov
mov
fs
sub
mov
dec
jo
jb
mov
sbb
mov
sbb
cli
cmc
or
arpl
fnsave
sub
mov
jmp
lods
sbb
cld
sub
mov
aam
jp
adc
test
mov
std
lods
pusha
(bad)
leave
icebp
adc
xchg
ffree
xchg
loop
pop
push
icebp
shr
jp
mov
and
int3
or
ins
leave
int3
or
outs
sub
sub
dec
push
shr
sub
jge
int
xchg
in
mov
xchg
mov
mov
jne
pop
ins
out
add
(bad)
or
(bad)
add
mov
sti
mov
test
and
je
lods
mov
xor
sub
pop
movs
push
ret
mov
lods
retf
fild
lods
mov
mov
into
cmp
fdivr
or
sbb
inc
dec
xchg
cdq
sbb
icebp
mov
dec
xor
add
int
aam
cmp
adc
lock
popf
stos
out
mov
dec
dec
aaa
sub
sbb
adc
xchg
add
dec
inc
dec
mov
cmp
inc
cdq
cmps
pop
repnz
xor
xchg
ja
sbb
pop
add
sbb
out
leave
leave
in
inc
sub
std
inc
mov
mov
lea
fist
pop
cmp
pop
pusha
pushf
outs
xchg
(bad)
jg
ins
and
sub
or
jge
cmp
cwde
pop
ins
push
inc
adc
fdivp
fadd
push
ret
jle
in
mov
jge
lea
inc
lods
mov
inc
(bad)
sahf
mov
adc
sbb
les
sbb
out
xchg
push
inc
aam
push
ins
movs
ss
cmp
jmp
xchg
cwde
pusha
aam
xchg
mov
enter
sbb
test
mov
das
push
pop
hlt
jae
in
hlt
gs
sahf
xor
jl
xchg
add
daa
xchg
sti
mov
mov
add
les
cmp
cmc
add
je
nop
es
mov
inc
mov
js
call
test
daa
iret
xor
dec
aad
pop
dec
aas
aam
cmp
xchg
pcmpeqw
and
(bad)
or
jmp
adc
movs
sub
movs
xchg
scas
sub
out
push
jno
sub
sub
lods
xchg
pop
lds
pop
das
in
test
hlt
sbb
fsubr
int3
dec
mov
jp
hlt
push
push
add
call
inc
inc
xchg
rol
jg
and
aad
rcr
aam
jno
mov
jne
push
imul
xchg
gs
test
aad
push
shl
out
popf
xchg
dec
test
daa
ds
add
outs
cdq
jo
mov
pushf
inc
pop
dec
ja
inc
outs
movs
cmp
adc
aam
(bad)
vorps
neg
dec
(bad)
enter
cmps
jb
dec
add
xlat
xlat
in
enter
movs
jmp
and
adc
mov
das
test
loop
and
mov
jecxz
lahf
movs
loopne
cmc
aad
es
mov
xor
test
(bad)
mov
jnp
inc
cmp
popa
fs
cmc
add
sbb
sahf
enter
pop
jo
nop
xor
push
and
in
sub
jmp
xor
inc
adc
sub
adc
call
into
cmp
jmp
fcomip
stos
push
inc
xchg
xchg
(bad)
jp
cmp
lods
loopne
cmp
mov
and
das
dec
mov
lea
sbb
pushf
jbe
fisubr
pop
jne
adc
mov
lds
pop
sub
ret
cmc
das
cmp
iret
mov
dec
int3
movs
es
cmps
sub
mov
mov
shr
sbb
dec
mov
sahf
aas
imul
int
repnz
scas
cmps
and
cmp
push
in
adc
or
adc
lods
adc
loope
arpl
pop
cdq
push
dec
lahf
mov
jg
inc
std
sbb
pop
bound
(bad)
mov
cmp
inc
lods
inc
fdiv
jge
popf
ret
sbb
sub
scas
or
aaa
pop
cli
stos
loope
jge
cld
loop
mov
cli
frstor
fmul
out
cld
dec
lods
pop
push
pushf
pop
mov
dec
sbb
or
in
imul
adc
or
push
cdq
xchg
jge
jo
lods
in
cmp
xchg
std
pusha
xchg
sub
push
sbb
je
sbb
hlt
ds
and
inc
lods
pop
adc
ins
mov
(bad)
xchg
lods
dec
dec
mov
push
jo
mov
sar
cmp
cld
int
add
cmp
xor
inc
or
mov
push
cmp
cmps
in
lods
xchg
dec
sbb
dec
add
mov
out
std
sbb
int3
int
pop
cmp
or
cs
mov
push
lods
adc
inc
mov
xor
jns
jns
out
push
mov
fadd
mov
shl
and
sub
call
mov
pop
test
sbb
mov
in
outs
lds
xor
pop
in
adc
dec
inc
mov
mov
inc
sub
hlt
repz
inc
ret
pop
ins
in
stos
cli
dec
and
stos
xchg
stos
xchg
adc
push
push
lods
adc
mov
xor
jmp
arpl
dec
gs
push
lods
les
cmp
ins
ins
jo
add
mov
in
in
lock
dec
push
xchg
fs
add
dec
push
ror
lods
pop
shl
mov
mov
or
jae
and
inc
int
nop
adc
ins
fist
mov
cmp
ins
ins
jecxz
iret
cmp
test
fwait
aas
cmc
outs
add
dec
retf
clc
jns
popf
xor
mov
jge
addr16
(bad)
mov
popa
cwde
imul
popf
in
mov
jge
pop
call
nop
adc
mov
add
mov
xor
dec
mov
lods
or
jl
or
pop
cld
jp
or
shl
sbb
adc
mov
mov
mov
mov
icebp
adc
pusha
xor
cld
xlat
cli
enter
xor
movs
mov
ror
nop
mov
sahf
or
les
sbb
inc
enter
lea
ss
cmp
dec
xchg
cmp
cmp
sub
xchg
addr16
sar
pop
or
jmp
pop
test
out
xor
or
cwde
cdq
pop
aad
in
dec
sbb
int3
cdq
mov
mov
pushf
sub
cmp
sub
pop
xor
sub
stc
mov
clc
dec
int3
sbb
xor
clc
lock
sti
add
movs
sbb
ins
f2xm1
leave
or
push
pushf
and
push
mov
lea
adc
call
icebp
shr
ins
je
mov
loope
shl
mov
pop
mov
lea
ins
pop
mov
fild
xor
icebp
adc
test
int
ffree
pusha
hlt
cmp
sbb
cmc
xchg
pushf
lock
cld
fucomi
jmp
ret
mov
sub
(bad)
retf
jns
(bad)
fnstenv
jne
adc
mov
jno
popa
out
dec
or
jns
in
test
mov
jb
mov
int3
jmp
jo
in
mov
cld
movups
pop
pusha
pop
mov
lea
and
pop
push
push
mov
xchg
mov
sub
xchg
shl
jge
fld
dec
push
mov
add
in
sar
cmp
and
aad
xor
out
add
fldcw
aas
inc
adc
enter
mov
sar
dec
movs
jp
lods
stos
cmp
pop
in
lds
cmp
sub
xchg
std
in
stc
or
cld
dec
in
push
daa
and
(bad)
push
push
jns
sub
sub
or
icebp
dec
loopne
jl
(bad)
ins
jb
std
movs
arpl
mov
and
mov
and
pushf
std
in
jl
out
sti
jmp
lds
ja
in
jge
cmp
movs
shr
mov
sub
(bad)
xor
pop
movs
lods
jl
dec
cli
cmp
inc
ins
or
jg
mov
int
sbb
dec
icebp
or
jo
mov
sti
test
mov
dec
loopne
test
ins
lea
fsubr
xor
or
jge
nop
inc
fcom
ret
cdq
outs
shl
adc
clc
cwde
sub
xchg
add
pop
ins
scas
adc
cwde
pop
mov
jl
leave
cld
pop
popa
cmp
cmp
mov
add
iret
lods
sub
sub
js
jg
das
std
(bad)
xor
test
inc
pusha
push
repnz
push
mov
dec
lods
xchg
adc
leave
pop
cld
nop
in
inc
and
mov
add
nop
lods
call
or
xor
sub
xor
aad
mov
xor
inc
add
dec
xchg
dec
cmp
leave
sub
xor
pop
mov
lock
test
aad
jl
sbb
jecxz
or
xor
test
pop
in
(bad)
mov
pop
jmp
or
push
pop
iret
xor
lods
or
sbb
or
xchg
adc
jae
xchg
sbb
xor
push
shr
sbb
mov
aaa
push
pop
jge
pop
cld
nop
in
and
or
sub
fld
inc
(bad)
mov
xchg
call
jge
cld
ins
fnstcw
adc
or
mov
jb
fild
lods
add
push
push
jne
pop
sbb
cdq
xor
pushf
ret
mov
pop
mov
icebp
arpl
dec
mov
daa
mov
mov
aad
or
add
ins
inc
fdivr
inc
in
lock
sub
je
xchg
int
enter
mov
pop
xor
inc
cmp
mov
or
sbb
cmp
mov
cmp
int3
inc
mov
mov
add
jno
pushf
lds
jne
(bad)
xor
rcl
ins
jo
out
sbb
shr
pushf
mov
popa
xor
lods
and
pop
out
jb
pop
pop
std
rol
mov
mov
dec
in
loop
jne
push
mov
mov
jo
xchg
test
mov
mov
fwait
out
stos
pushf
cmp
pop
add
popf
inc
shl
adc
add
jl
xchg
sub
inc
mov
pop
cmp
loop
shl
mov
popf
cmp
shr
fimul
mov
or
outs
lods
ins
fldcw
mov
xor
hlt
xor
jo
ins
jl
dec
push
cmc
inc
dec
push
leave
xchg
mov
dec
add
adc
mov
ror
pop
xchg
sbb
xor
push
js
cmp
mov
xor
in
pusha
sbb
or
sbb
mov
push
jmp
xor
xor
xchg
shr
fidivr
ins
and
rol
sub
xchg
pop
mov
int
and
jl
lock
cmp
sar
and
f2xm1
hlt
bnd
in
nop
rcl
adc
or
sub
aaa
or
sub
or
jae
mov
lahf
jnp
xchg
jne
enter
aad
xor
dec
push
sbb
das
pushf
cmp
dec
(bad)
das
mov
mov
in
rcr
sbb
lea
adc
push
add
push
lods
ins
fld
scas
sub
jo
mov
sti
inc
inc
and
jns
in
clc
sar
pop
push
popa
aaa
lock
test
adc
cmp
les
js
gs
test
loopne
in
sbb
sahf
xor
mov
and
xor
add
fs
mov
imul
mov
int3
pushf
mov
jecxz
loopne
hlt
enter
lods
cmovno
pop
push
loopne
cmp
test
pop
fs
xchg
js
int
adc
sbb
test
pop
xchg
mov
loope
pop
aas
jo
mov
retf
call
jo
jae
bound
pop
aad
mov
out
xchg
iret
add
jno
adc
xchg
icebp
int
push
sub
frstor
xchg
jl
mov
lock
test
pusha
ins
lea
loope
add
icebp
xchg
loope
shl
outs
leave
stc
or
or
fdivr
or
ins
jmp
bound
sbb
mov
lods
cmp
or
stc
test
lahf
ret
cmp
sbb
or
or
call
stc
mov
add
test
stc
xor
jecxz
dec
lea
mov
imul
xchg
mov
int
lahf
shr
std
pop
push
or
mov
pop
adc
ja
cdq
mov
sub
ffree
in
xchg
or
je
push
lods
mov
dec
dec
mov
jno
add
push
cmp
xchg
dec
out
jl
das
lods
or
retf
lods
ja
retf
jns
into
mov
out
out
ins
or
call
push
cmc
shr
in
inc
pop
(bad)
lods
and
mov
in
mov
xor
cs
mov
jbe
cmp
inc
lahf
mov
or
hlt
cmc
popa
arpl
adc
xor
fsubr
sbb
pop
retf
sub
ins
adc
push
push
xchg
jae
mov
and
(bad)
lahf
mov
and
push
push
fs
pop
ss
inc
mov
sub
xchg
adc
fidiv
es
stc
lock
cmp
outs
scas
pop
jg
jbe
mov
jbe
mov
push
nop
dec
cwde
xlat
mov
mov
scas
mov
aaa
push
test
adc
pop
jmp
mov
inc
cmc
in
pop
je
sbb
retf
sbb
mov
in
mov
sbb
mov
jecxz
jns
or
inc
fidiv
lds
mov
daa
sbb
xchg
cmps
fnsave
xchg
dec
mov
and
fnsave
dec
dec
cmp
inc
mov
add
out
or
mov
leave
iret
leave
pop
mov
sbb
xor
mov
in
xchg
jg
pop
scas
pop
xor
and
(bad)
mov
(bad)
lods
or
jge
or
xor
mov
jno
sub
imul
mov
(bad)
lods
xor
dec
in
cmc
mov
mov
jecxz
sbb
fstp
dec
sbb
pushf
or
sbb
push
sub
sbb
or
out
shr
mov
and
sahf
hlt
cmp
fcom
adc
ds
mov
dec
test
lods
cmp
ja
add
fdivr
sub
push
into
ins
es
inc
inc
pusha
xchg
jno
ins
pushf
fbstp
cmp
cwde
in
cmps
xor
int3
cwde
dec
test
(bad)
shld
push
xchg
jmp
dec
xor
test
xor
adc
sbb
aaa
lea
div
and
ins
cmp
repnz
xchg
in
adc
ins
and
jecxz
push
lea
pop
loope
push
mov
repnz
jge
jns
popf
cwde
xlat
fsincos
lahf
mov
es
inc
mov
nop
arpl
cmp
arpl
int
sbb
in
repnz
loopne
neg
cld
ja
mov
test
sbb
add
jns
sub
inc
mov
es
xor
jmp
(bad)
pop
outs
push
cmp
sub
loopne
repz
not
xchg
repnz
ss
les
je
je
or
xchg
fs
mov
jnp
jecxz
pop
mov
mov
je
push
jge
jle
in
les
jg
nop
arpl
inc
mov
mov
jge
cmp
push
adc
cmc
xor
(bad)
(bad)
xchg
je
inc
jle
sub
push
cmc
xchg
pop
fsubr
ja
in
fst
int
aam
imul
xchg
mov
gs
mov
cdq
mov
int
lahf
ja
sbb
add
pop
lahf
enter
push
dec
pop
jb
xchg
cld
sbb
fwait
dec
ret
les
jl
xchg
clc
or
aaa
adc
and
add
jg
mov
int
lahf
(bad)
mov
mov
out
cli
push
lock
in
mov
test
fmul
fnstsw
enter
inc
push
mov
jl
mov
dec
scas
loopne
js
mov
cmp
inc
int
shl
jl
cs
mov
lods
bound
packuswb
inc
fistp
mov
xor
popf
cmps
cwde
jecxz
xchg
sbb
test
jmp
into
cmp
inc
and
lahf
jle
jl
clc
jmp
or
xor
pop
(bad)
xchg
ret
dec
ja
outs
pusha
push
cmp
in
dec
jecxz
dec
mov
lods
lods
ffreep
movs
ins
inc
push
lods
ins
call
das
cmps
and
cdq
xor
jl
inc
sbb
dec
shr
and
fdivrp
mov
dec
in
sub
ret
push
movs
outs
pop
xor
sbb
out
xchg
iret
and
jge
loop
and
ins
inc
xor
test
mov
bound
mov
sbb
lea
in
cdq
cld
xor
frstor
add
js
call
xor
or
jg
mov
lds
(bad)
adc
dec
push
jl
push
fs
or
cli
adc
int
xchg
mov
loope
push
sub
in
jne
push
shl
shr
clc
fld
sbb
or
mov
mov
fstp
xor
mov
or
js
xchg
out
push
jno
mov
fs
or
or
cli
lods
dec
sub
sub
jecxz
test
std
pop
enter
movs
or
pop
xchg
call
fistp
and
jns
fnstcw
or
jne
in
xchg
dec
test
cmps
fadd
xor
pop
add
popf
sub
add
hlt
mov
loopne
test
sbb
or
mov
mov
add
adc
mov
xor
imul
imul
test
inc
js
jne
push
push
test
(bad)
adc
cmps
repnz
or
imul
movs
cmp
je
lods
or
mov
int3
dec
(bad)
ins
in
test
and
shl
pushf
sbb
pop
xor
rol
xchg
pushf
jne
push
hlt
nop
adc
sbb
sbb
mov
cmps
jbe
es
mov
mov
push
aas
or
sbb
xor
sub
push
sub
pcmpeqd
ror
ret
addr16
sub
je
mov
mov
aas
add
push
sub
add
aas
je
clc
sub
add
(bad)
push
adc
jnp
sub
adc
or
sbb
and
mov
test
xor
enter
sub
sub
or
or
out
lods
xlat
inc
sbb
xchg
fstp
pop
jbe
int3
adc
or
jge
sub
ins
fisttp
and
sbb
xchg
xchg
in
and
cmc
aad
loope
jbe
push
neg
or
xlat
leave
mov
jecxz
dec
ins
xchg
aas
fild
loop
in
inc
xor
cmp
std
or
inc
bound
jnp
pop
pop
pushf
or
sub
jns
cmp
shl
inc
stos
inc
(bad)
adc
cmp
repnz
mov
push
pop
xchg
ins
cmp
mov
inc
js
push
inc
lods
cmps
cmp
sbb
inc
into
sub
push
add
popf
sahf
loopne
rol
aaa
dec
and
repnz
es
(bad)
cmc
sub
sbb
das
imul
mov
sub
jmp
mov
inc
jle
in
jmp
icebp
pop
ins
sbb
mov
and
aas
push
dec
dec
pop
stc
outs
sbb
inc
test
jecxz
lock
adc
adc
bound
push
jae
cmp
and
mov
rcr
std
cmp
jl
sbb
outs
xor
repnz
cwde
scas
push
sar
int3
cmp
std
or
icebp
sub
ror
jo
pop
mov
sub
fdivr
fldenv
pop
cmp
loope
pop
xor
(bad)
jp
mov
sbb
pushf
std
cwde
mov
lea
ins
pop
cld
mov
mov
jns
or
xchg
hlt
sub
rol
cmp
out
rcl
fdivr
cmps
lock
lods
xchg
adc
mov
aam
cli
and
data16
or
xchg
push
and
dec
pop
cld
out
or
call
xor
and
xor
js
lods
and
mov
loope
pusha
xor
cld
pop
mov
inc
cmp
pop
adc
je
push
sub
sub
mov
aaa
add
pushf
jne
lahf
jg
cli
and
cmp
and
lea
mov
inc
test
jge
into
cld
lods
and
cmp
jle
add
popf
cmp
in
mov
iret
or
out
cld
movlhps
(bad)
adc
push
rep
pop
not
cmp
leave
ins
mov
mov
mov
or
push
lea
neg
push
(bad)
dec
jmp
lahf
jnp
jne
xchg
xchg
cmps
fdiv
xchg
stc
inc
cld
inc
in
push
out
pop
arpl
mov
and
dec
cld
out
fadd
add
jbe
in
xor
gs
xor
cdq
and
mov
push
hlt
jbe
add
shl
call
push
aam
xchg
ja
rol
push
dec
inc
leave
jp
movs
fwait
inc
lods
in
mov
xor
bswap
(bad)
inc
in
and
push
fdivr
mov
xchg
scas
xchg
mov
mov
test
pushf
aam
push
mov
aad
pusha
hlt
ret
je
push
es
xor
sub
sti
repnz
pop
lock
imul
leave
mov
pop
in
adc
inc
out
std
push
(bad)
mov
test
repz
jb
lds
add
cdq
outs
test
cmc
aam
xchg
xchg
fisttp
push
(bad)
das
pop
ds
mov
inc
add
movs
mov
sahf
fisubr
cwde
hlt
test
clc
sbb
scas
mov
and
jecxz
jecxz
jl
xchg
mov
push
dec
(bad)
mov
or
xchg
inc
popa
clc
and
dec
jle
sar
ins
mov
push
inc
mov
lock
sub
nop
(bad)
jne
push
in
mov
mov
fmul
int3
test
out
adc
cmp
pop
mov
cmp
mov
daa
cmp
mov
sbb
cwde
pusha
sub
sbb
push
jl
sbb
xchg
pop
xchg
pushf
jge
add
fst
(bad)
xor
sbb
or
js
push
stos
push
mov
dec
cmc
arpl
(bad)
cmp
add
mov
inc
cmp
mov
shl
jmp
push
adc
adc
mov
fwait
cli
dec
jge
out
xchg
dec
lea
adc
lods
test
repnz
retf
xchg
fld
and
lea
push
sub
ss
sbb
mov
pop
mov
in
sub
inc
mov
sub
jecxz
sbb
mov
lods
push
xchg
arpl
int
sbb
pop
xor
pop
adc
clc
icebp
(bad)
xor
dec
xor
leave
cmps
pop
js
sub
daa
pusha
jmp
in
lock
scas
dec
sub
mov
push
retf
test
jmp
cmp
sub
or
mov
xchg
cmp
sbb
test
test
dec
in
rcr
add
ins
frstor
shr
int3
fs
inc
clc
(bad)
pop
(bad)
sub
sub
into
test
cmc
in
sub
cmp
cdq
iret
int3
nop
pop
sub
add
and
neg
movs
fsubr
mov
repz
ret
xchg
mov
push
mov
inc
dec
int
lahf
jg
xchg
std
pop
lea
sub
xor
(bad)
repnz
cmp
(bad)
aam
repnz
add
sbb
hlt
push
or
adc
gs
lahf
std
inc
int
fstp
mov
xor
inc
xor
mov
loope
add
ret
jge
int3
jg
xor
lock
movs
mov
mov
lea
pop
push
leave
mov
icebp
or
xchg
pushf
pop
lea
shr
fsubr
xchg
cmp
jg
xchg
std
in
dec
sub
push
or
(bad)
mov
ins
sbb
sti
int3
int
sub
adc
push
push
(bad)
mov
push
or
lock
push
ins
ror
mov
jns
xchg
fld
aas
pop
sub
fmul
gs
mov
mov
std
xchg
fisubr
and
test
or
into
rcl
fstp
jo
jb
pop
sbb
lods
es
dec
inc
xchg
cld
sub
mov
cmp
and
cmp
(bad)
in
inc
add
popf
and
push
ficomp
mov
mov
push
dec
adc
pop
xor
repz
adc
in
dec
das
mov
mov
test
inc
adc
sbb
add
ffreep
lds
ret
pop
mov
xor
fadd
sbb
pop
jge
pop
and
lock
push
(bad)
outs
popf
add
add
test
int
cmp
or
out
mov
sub
lahf
add
mov
fld
push
cmp
les
or
stc
pop
xor
sbb
test
shl
lock
mov
jns
std
mov
and
mov
in
(bad)
mov
xor
imul
imul
iret
dec
in
mov
add
sbb
and
mov
jns
dec
jne
sbb
pusha
sub
popa
sub
std
xor
adc
call
mov
inc
push
and
leave
aam
ins
sbb
add
jle
sub
stos
sbb
dec
cwde
ds
ins
jne
jecxz
cmp
jge
retf
lods
in
out
pop
mov
and
dec
jo
and
add
cld
mov
jge
int3
inc
push
sub
or
enter
jbe
iret
mov
xor
xlat
ss
mov
es
sub
add
pushf
mov
outs
cwde
lahf
mov
or
daa
js
push
in
outs
cdq
push
or
lea
pop
sbb
ins
xchg
sbb
push
das
hlt
mov
adc
or
fwait
or
lea
xchg
cdq
iret
jb
popf
cmp
mov
leave
das
mov
retf
in
push
cdq
sub
sub
jbe
out
popf
popa
mov
sub
pop
mov
jle
cdq
push
(bad)
int3
cwde
inc
clc
or
xchg
fist
sbb
pushf
mov
mov
in
dec
xor
pop
fisttp
out
mov
mov
jge
inc
and
dec
pop
ja
in
cmc
sbb
xchg
clc
out
mov
popf
imul
inc
sar
test
stc
mov
mov
adc
dec
lods
or
sbb
sub
stc
jmp
repnz
mov
add
pop
clc
iret
adc
fdiv
mov
adc
mov
adc
sbb
add
je
xchg
jo
add
push
pop
push
sub
ret
cmp
fadd
lahf
std
inc
jns
(bad)
in
call
xchg
es
je
mov
adc
push
cmp
fcomp
in
inc
mov
dec
shl
add
adc
jo
xchg
adc
or
inc
and
mov
push
imul
adc
mov
dec
pop
add
sub
cwde
pop
test
je
clc
ss
mov
push
cmp
sbb
xor
cwde
pop
(bad)
xlat
fisttp
jno
(bad)
scas
pop
mov
push
out
movs
cmp
adc
test
popa
test
push
inc
sub
push
jg
inc
jg
gs
sbb
int3
cld
xchg
mov
dec
rcr
and
or
add
or
lods
xlat
cmp
pop
lock
mov
mov
ret
or
or
sub
dec
loopne
addr16
push
add
fidivr
out
das
push
mov
ret
aam
in
int
je
dec
es
adc
jmp
hlt
pop
cmc
jne
gs
rol
fstp
sbb
aaa
sti
mul
pop
mov
jnp
cmps
cmp
inc
ins
test
in
fild
ins
xlat
loope
daa
or
push
cdq
xchg
jge
xchg
sub
fs
dec
fidiv
adc
js
mov
rcl
ds
mov
fwait
cmp
out
adc
std
add
outs
xchg
cld
mov
mov
jge
or
pop
sub
aad
mov
lea
jmp
mov
pop
mov
in
lea
jmp
sub
dec
std
repz
mov
sbb
inc
out
xchg
retf
into
add
in
jnp
ret
sub
test
pop
pop
sbb
test
cmp
sbb
arpl
mov
cmp
adc
call
inc
rcl
f2xm1
add
sub
int3
xor
mov
push
xor
cmp
movs
test
add
cmps
xchg
or
sub
inc
push
push
stc
scas
mov
test
sub
fsubr
cmp
sub
fnsave
dec
and
lods
psllw
lods
arpl
add
pop
in
cmp
mov
loop
repz
bound
push
pop
inc
xchg
mov
jge
lds
adc
jle
ror
jl
cmp
jl
daa
mov
or
and
ret
push
and
xor
push
int
sub
mov
inc
dec
push
cmp
cmc
fild
mov
add
xchg
scas
mov
sbb
or
pushf
ins
pop
int
dec
cld
fistp
cmp
sub
lods
std
jl
repnz
cs
test
dec
inc
pushf
lods
ins
pushf
ret
fild
loop
jmp
fmul
inc
sbb
and
pop
scas
inc
push
jl
ins
or
les
and
adc
jae
sbb
mov
into
jno
shr
loop
mov
push
push
in
mov
fst
adc
pop
push
cmps
xchg
mov
loope
and
xchg
cmp
imul
mov
jmp
in
adc
movs
movs
lea
add
cmc
mov
test
jecxz
cld
cld
or
cld
fdivr
jbe
dec
xchg
pushf
aas
and
add
fldenv
bnd
adc
push
ret
jle
imul
adc
std
sub
lods
adc
or
data16
jns
icebp
mov
jno
icebp
ins
cmps
or
lods
mov
shl
xchg
jmp
dec
popa
add
ret
push
inc
add
xchg
ficom
add
push
push
scas
arpl
jae
mov
ret
jnp
sub
jl
ins
push
aam
hlt
dec
stc
or
sar
inc
or
js
xor
and
jmp
cli
sbb
mov
pop
scas
loopne
cs
push
cld
fst
cmps
cdq
xchg
mov
add
jo
jb
fcom
inc
(bad)
adc
call
mov
ret
int3
fst
test
dec
pop
add
inc
iret
sbb
adc
dec
add
dec
jl
int
xor
cmps
scas
shl
je
sub
mov
or
test
mov
sahf
ret
shr
jno
jo
push
mov
and
xchg
stc
push
mov
ins
cmp
mov
iret
xchg
popa
add
lods
out
mov
adc
pop
ret
mov
js
fnstsw
popf
jmp
dec
jp
and
add
sub
std
and
xchg
call
aas
enter
mov
adc
add
cld
sbb
rcl
mov
std
xchg
add
push
mov
adc
inc
test
into
loope
loop
js
push
int
and
shl
push
loop
pop
ss
out
lods
adc
or
sbb
push
out
adc
lods
mov
pop
bound
dec
(bad)
shr
iret
lock
cmp
nop
in
and
int
push
sub
jmp
fbld
push
ss
jmp
adc
inc
leave
pop
sub
lea
xor
cmp
enter
cmp
retf
push
pop
dec
popa
mov
or
jns
shl
xor
fsubr
in
mov
pushf
jge
or
(bad)
cmp
in
imul
imul
mov
(bad)
movs
cld
lods
in
rcr
mov
lods
sbb
sbb
retf
ss
cmc
mov
and
popa
rol
mov
daa
imul
or
ss
dec
sahf
aam
test
leave
or
(bad)
fwait
inc
jle
jl
sub
or
jl
xchg
ins
sar
sbb
cs
mov
cld
and
aad
bound
outs
lods
aad
mov
(bad)
pushf
xchg
pushf
push
scas
push
mov
int
cmp
stc
int3
(bad)
icebp
fild
add
sbb
ins
mov
dec
call
fld
lahf
jns
mov
ficom
mov
mov
pop
movs
sbb
jmp
mov
adc
sub
aam
jns
inc
pop
aam
(bad)
enter
int
mov
cdq
inc
scas
pop
repz
mov
jns
adc
push
push
leave
add
xchg
js
retf
xchg
imul
mov
call
sbb
and
int3
stos
sub
into
mov
push
(bad)
shl
jb
sbb
stos
in
mov
inc
xor
or
shl
fmul
dec
adc
inc
sbb
fbstp
scas
mov
mov
imul
fisub
leave
ja
mov
or
stos
cmp
cmp
push
dec
mov
add
xchg
xor
adc
in
fstp
and
add
mov
cmp
mov
dec
add
push
nop
mov
iret
std
test
pop
xor
jl
out
lahf
jnp
mov
mov
dec
sbb
xor
std
iret
cwde
sbb
cmp
inc
jg
jmp
dec
dec
pop
dec
cmp
(bad)
sub
stc
daa
(bad)
push
ret
movs
push
push
or
lds
pusha
add
fisttp
add
push
int3
pop
add
es
xchg
movs
pushf
add
bound
add
xor
(bad)
mov
adc
mov
push
dec
inc
jmp
cmc
gs
dec
xchg
xor
sub
scas
sub
or
ds
mov
pop
test
mov
and
pushf
imul
iret
adc
cmp
ror
imul
ins
xchg
popf
aas
sbb
xor
sub
ret
mov
xchg
movs
sbb
mov
aad
pop
sbb
dec
test
rol
lods
out
and
outs
adc
pop
or
fsub
push
ins
popa
pop
jge
and
pop
int
fnstsw
or
enter
dec
dec
aas
aaa
mov
ins
jns
in
lds
sub
dec
lea
mov
mov
out
xchg
pop
jge
sub
in
pop
bound
mov
ds
and
out
pop
fadd
test
cmp
call
jns
mov
cmp
pmovmskb
mov
pop
or
mov
pop
cwde
je
dec
call
loope
pop
jl
dec
(bad)
mov
pusha
popf
pop
fsubr
and
(bad)
xor
jo
out
daa
(bad)
jge
lods
stc
stos
out
lods
test
mov
dec
cmp
in
adc
mov
bound
or
(bad)
ins
stc
push
fistp
lea
mov
test
pusha
xlat
pop
retf
sbb
stc
or
jle
ins
int
in
cdq
sub
mov
int
adc
mov
mov
push
lods
xor
in
jbe
xor
cmps
mov
cmp
adc
cmp
xchg
(bad)
repz
xlat
mov
fst
out
(bad)
push
mov
lods
mov
outs
xchg
jne
push
sbb
ficomp
rol
out
dec
imul
lock
outs
cmp
scas
inc
(bad)
test
or
sbb
or
xor
inc
jnp
push
dec
jl
or
scas
push
ds
(bad)
push
loopne
into
mov
xor
sub
outs
movs
inc
test
mov
leave
pop
ret
lea
push
repnz
xchg
fcomp
jg
lods
ins
scas
shl
call
rol
popa
inc
in
inc
and
push
dec
jae
lock
lods
xchg
dec
pop
fwait
imul
(bad)
retf
popa
fisubr
ret
shr
out
jne
(bad)
lahf
pop
add
mov
jno
pop
repz
push
adc
jmp
mov
dec
sahf
xchg
pop
push
or
out
inc
inc
mov
and
push
and
lock
shl
sbb
aas
scas
and
jg
adc
call
stos
hlt
mov
out
mov
push
lods
gs
imul
mov
cmps
jg
outs
xchg
div
jp
popf
popf
dec
mov
movs
ins
mov
or
push
mov
push
mov
in
or
jne
push
xor
test
cld
loop
in
mov
dec
jg
shr
sbb
int3
dec
xlat
adc
lods
mov
scas
pop
loopne
in
fidivr
dec
stc
mov
mov
rcl
dec
call
jns
xchg
mov
test
ja
imul
mov
sub
cld
enter
jge
in
or
pop
aas
leave
or
fnstsw
jae
imul
ins
movs
mov
xchg
popa
nop
call
and
mov
loopne
dec
push
jg
ins
outs
xlat
xchg
mov
fs
jae
xchg
das
test
pusha
mov
int
cmc
sbb
mov
lods
mov
xor
(bad)
leave
lods
jmp
rcr
jecxz
add
push
pop
ins
fld
js
adc
inc
push
shl
dec
xor
daa
and
add
(bad)
popa
ins
(bad)
pop
inc
mov
xor
jo
mov
in
fnstsw
test
sahf
sub
jecxz
int
cwde
pop
xlat
cmps
add
stc
mov
ins
mov
pop
icebp
lods
nop
xor
jg
int
(bad)
add
dec
jl
sbb
mov
fmul
std
in
rcl
cmp
xchg
cmp
xchg
mov
aaa
or
sub
in
push
push
int
inc
cmp
cld
test
cmp
xchg
and
jns
popf
jne
sbb
sub
mov
pop
pop
mov
jb
popf
test
push
pop
dec
sbb
jmp
addr16
fst
push
jno
js
(bad)
fisubr
lods
xlat
push
sbb
xor
test
arpl
mov
idiv
pop
in
std
cld
ret
jmp
lods
cmp
inc
push
xlat
jmp
pop
jge
add
push
cmp
or
call
fsubr
in
dec
movs
aas
pop
inc
mov
aas
pop
or
call
loope
mov
lea
mov
ins
xor
mov
and
cmp
or
jns
push
out
xlat
xchg
pop
lods
out
mov
dec
pop
push
push
sbb
out
cmp
adc
rcl
fld
dec
leave
cmovae
gs
add
pop
and
xchg
inc
outs
scas
in
data16
cmp
in
cmp
jl
les
dec
lods
push
xor
sbb
(bad)
cmp
pushf
mov
jne
je
fs
xchg
jle
mov
add
loope
lahf
movs
dec
(bad)
leave
sar
jne
xor
mov
jo
add
in
in
sbb
aam
cmps
push
sti
mov
sbb
and
dec
and
push
cmp
add
pop
outs
push
mov
pop
ins
cmp
movs
loop
cmp
loope
int
or
fwait
pop
mov
lods
stos
sbb
dec
popa
jmp
int
pop
mov
out
cmp
jg
loope
cmps
enter
fsubr
or
inc
and
or
pop
mov
out
loopne
mov
test
imul
gs
data16
movs
xor
in
sbb
xchg
add
mov
in
in
mov
dec
sbb
fdivr
mov
arpl
mov
outs
outs
int3
sbb
scas
dec
test
and
sub
or
sub
and
cmps
fldenv
sbb
stc
ror
jne
inc
std
or
movs
pop
cmp
inc
cmp
sbb
(bad)
leave
xor
xchg
(bad)
stc
movs
ins
outs
jle
sbb
int3
idiv
pop
fbld
int
or
sar
sub
mov
jge
cmp
sbb
rcl
mov
jl
out
(bad)
ss
(bad)
mov
push
and
xor
in
jo
mov
(bad)
in
pop
jo
mov
shr
fwait
push
leave
dec
jg
and
jns
loop
mov
jns
shr
mov
frstor
push
and
jg
mov
int
push
cmp
sbb
aam
xor
sbb
aaa
push
gs
hlt
mov
test
int
adc
scas
xchg
std
pop
fnsave
sub
mov
cmp
ror
or
(bad)
adc
jb
nop
test
mov
lock
dec
or
fadd
adc
mov
inc
push
cwde
mov
cmc
test
mov
xchg
cmp
mov
adc
lea
cmp
dec
add
cld
loop
and
cmp
xor
or
xchg
pop
leave
pop
mov
clc
mov
or
test
std
int
and
and
cwde
mov
lds
fsubr
call
movs
or
je
test
psubb
mov
lods
sar
pop
and
jo
jg
rcr
pop
adc
push
shl
dec
inc
cmp
clc
mov
in
cmps
and
in
dec
std
aad
sub
rcr
test
lea
(bad)
(bad)
xchg
push
cdq
ins
add
pop
stos
and
cmp
clc
in
jecxz
or
movs
fsubr
jl
jl
into
mov
lahf
ds
jge
repnz
cmp
int3
cmp
mov
loope
stos
xor
stc
fidivr
push
cmp
jmp
mov
inc
cmp
in
test
clc
xor
clc
test
test
adc
popf
hlt
in
jecxz
repz
fwait
lods
mov
or
je
jae
sub
outs
adc
add
ss
add
fadd
jne
or
das
scas
cmp
les
pop
sbb
push
call
popf
or
es
je
mov
mov
pop
bound
mov
aam
or
mov
std
add
lea
loope
cmp
sub
daa
and
gs
xchg
push
mov
outs
fstp
in
adc
cs
mov
lods
rcr
or
xor
xchg
std
pop
hlt
cdq
call
fisubr
out
test
out
test
add
in
ror
sub
jecxz
(bad)
hlt
movs
popf
mov
dec
loope
push
js
test
mov
stc
outs
push
mov
inc
xchg
pop
add
jl
ins
lods
pop
mov
pop
xchg
bound
mov
int
pusha
sub
addr16
test
add
lods
out
fild
cmp
fcomp
add
jecxz
pop
push
mov
xlat
cmovge
fdivr
aas
pop
in
jns
ins
and
add
fstp
shl
and
xchg
sbb
cmps
and
aaa
xor
loope
sbb
and
mov
mov
mov
in
out
push
push
mov
xor
pop
inc
repz
push
scas
sub
loopne
or
jnp
arpl
xchg
adc
(bad)
rol
fnsave
rcl
sub
dec
enter
int3
arpl
mov
sub
ins
and
outs
in
aam
or
stc
mov
call
mov
dec
cdq
mov
pop
in
sub
mov
jno
hlt
clc
pop
and
ins
lods
sbb
lds
pushf
sbb
or
and
mov
aad
jo
pusha
cs
mov
sub
push
popf
dec
repnz
dec
scas
fdivr
int
and
outs
cld
jo
or
inc
sub
pop
and
aas
jae
mov
fs
mov
cmp
loope
or
mov
inc
add
pop
push
popf
dec
or
xor
lds
jno
jmp
pop
mov
dec
leave
push
sbb
xor
test
retf
in
cwde
(bad)
pop
mov
nop
push
fstp
or
fwait
jl
nop
lock
dec
jg
adc
pop
rcr
push
jo
aam
sbb
cs
iret
add
cmc
cmp
jmp
rcr
mov
pop
in
cs
cmps
enter
std
and
cmc
loopne
div
mov
ret
ret
pop
sub
sbb
jb
pop
in
push
xlat
test
das
arpl
pop
dec
scas
pop
das
outs
fsubr
mov
shl
fwait
iret
imul
jmp
jp
repnz
je
mov
sahf
cmp
cmp
sub
fucomp
jnp
sub
ins
cmp
inc
push
shl
sub
scas
cmp
sbb
mov
or
push
xlat
mov
add
mov
jae
mov
adc
shl
sar
lods
or
cli
mov
pushf
loope
ret
jge
pop
mov
jg
fdiv
cmc
retf
repz
cmp
adc
inc
mov
xor
add
cwde
pop
adc
jl
fimul
popf
cmc
or
adc
jo
dec
add
and
iret
int
(bad)
ds
mov
pop
enter
popf
or
fsubrp
sub
jle
jl
jecxz
add
call
scas
int3
or
jmp
ret
mov
shl
or
cmp
mov
pusha
pop
jmp
fnstcw
stc
icebp
sub
jnp
cmp
call
jno
fsub
sub
dec
jge
sbb
mov
popa
in
mov
mov
test
cmp
out
cmp
out
add
cdq
jmp
dec
mov
cmp
dec
jp
cmp
add
std
call
dec
sbb
pop
aas
leave
or
and
pop
fldcw
xchg
std
shl
mov
aad
push
cld
pop
mov
mov
mov
cld
push
xchg
add
pop
int
cwde
inc
sub
cmp
add
mov
xchg
les
or
and
dec
pusha
pop
jbe
jb
adc
jbe
inc
ja
xchg
fdiv
add
in
fcmovu
mov
xor
pop
adc
cmp
ins
mov
inc
dec
push
ins
mov
js
pop
das
cmp
push
mov
scas
ret
scas
js
jns
xchg
sub
pop
push
jmp
xor
mov
aad
sub
mov
iret
fisubr
fist
lea
mov
jbe
scas
ror
enter
inc
int
rcr
ins
mov
call
loope
pushf
cmp
repnz
sbb
xor
fnsave
in
popf
or
in
pushf
jmp
or
sbb
and
jbe
(bad)
lea
aas
call
mov
jl
dec
(bad)
nop
xor
cmp
fnstenv
lahf
pop
sub
dec
mov
ins
mov
push
lods
sbb
jge
loope
xchg
sbb
mov
mov
in
cmc
cld
repz
ins
push
nop
push
adc
sbb
cmp
icebp
push
loope
xor
xor
jnp
dec
jp
(bad)
mov
cdq
repnz
pusha
icebp
fwait
int3
fst
rol
cld
cmp
dec
mov
daa
ins
fidivr
xchg
sbb
inc
leave
push
hlt
xor
icebp
pop
mov
xlat
shr
in
add
pushf
cdq
mov
mov
js
sub
jp
sbb
repz
fist
lods
mov
lds
push
clc
rcr
xchg
pop
mov
mov
dec
das
hlt
scas
pushw
idiv
inc
push
movs
pop
por
loopne
mov
mov
sar
inc
das
mov
in
dec
in
ret
icebp
pop
push
fprem
fadd
hlt
dec
popa
rcl
inc
fsub
or
loopne
inc
les
arpl
jae
cld
loop
and
or
shr
mov
jb
bound
call
out
adc
fmul
ja
cdq
sub
jle
sub
xchg
and
xor
or
dec
mov
sub
(bad)
nop
addr16
xor
xor
add
pop
and
aad
push
pop
sbb
push
shl
out
cmp
mov
int
xor
cmps
scas
shl
ins
and
mov
jmp
cmp
xor
pmullw
inc
stos
or
and
dec
aaa
stos
daa
imul
js
enter
in
dec
jno
call
inc
adc
sbb
pushf
mov
cs
jnp
ds
mov
push
stc
(bad)
out
ja
es
ret
dec
cmp
das
pop
ds
mov
inc
add
movs
pop
popf
mov
cdq
or
push
mov
xor
push
jns
sbb
xchg
addr16
ins
cmp
dec
daa
adc
stos
fs
ret
xor
cmps
cwde
dec
add
inc
bound
sbb
xor
push
rep
loop
outs
pop
cmp
adc
dec
cld
int
push
addr16
lea
fld
in
jge
ror
popf
lods
xor
dec
cmp
push
add
xchg
or
fdivr
int
enter
add
lock
jne
fcom
clc
sbb
stc
sbb
test
lds
mov
mov
lods
data16
sbb
leave
cdq
scas
test
or
ins
inc
std
and
in
or
mov
sbb
cld
js
sub
ins
pusha
and
shr
(bad)
bound
mov
push
jle
dec
add
adc
leave
ret
popa
cmp
xor
cmp
nop
push
pop
mov
and
cdq
xchg
cdq
xchg
addr16
jmp
cmc
ret
out
sub
sbb
repz
bound
dec
mov
clc
leave
test
or
mov
adc
test
dec
popa
icebp
inc
ins
hlt
mov
adc
cld
dec
or
sbb
fsubr
es
dec
dec
or
movs
adc
dec
push
jmp
lds
data16
std
xchg
jge
outs
aam
cmp
popf
inc
loope
stos
in
scas
aad
push
ja
mov
jns
fsubr
daa
mov
(bad)
dec
mov
xchg
fdiv
add
adc
cmp
pushf
outs
(bad)
mov
mov
movs
mov
es
aam
popf
push
outs
dec
sahf
adc
jb
fidiv
js
popf
mov
mov
push
into
sbb
lahf
sub
aam
add
retf
std
iret
xchg
jl
cmp
adc
daa
sbb
call
ret
jg
cmp
add
push
and
mov
mov
cmps
xchg
dec
icebp
sub
push
(bad)
sar
sbb
push
gs
and
mov
inc
loopne
mul
inc
add
lods
test
(bad)
mov
xor
(bad)
dec
xchg
shl
dec
cld
pop
test
vdivps
sbb
js
sub
ins
call
xor
int
icebp
std
loop
push
cmp
dec
adc
std
push
(bad)
neg
add
pop
mov
in
and
mov
pop
das
dec
mov
lea
sbb
pushf
jbe
fisubr
pop
jne
adc
mov
lds
pop
sub
ret
cmc
das
cmp
iret
mov
dec
int3
movs
es
cmps
sub
call
cmp
(bad)
lods
cmps
push
inc
mov
jmp
xchg
out
lods
fdivr
adc
pop
shr
cs
xor
push
lods
sysenter
pop
jbe
pushf
hlt
push
mov
jl
lock
sub
sbb
fs
std
iret
jb
push
sub
(bad)
fdiv
mov
int3
sub
cli
sub
fidivr
jl
mov
and
int3
in
loop
and
shl
in
xchg
repz
jl
ins
lods
in
sbb
in
lea
(bad)
in
outs
pop
cmp
sar
imul
dec
(bad)
aas
pop
mov
dec
mov
addr16
cmp
fild
adc
push
ins
aad
dec
fdivr
shl
adc
test
inc
(bad)
outs
jmp
jl
pop
ss
inc
fimul
pushf
pop
pusha
inc
shr
sub
sbb
imul
pushf
cmps
(bad)
in
xchg
daa
imul
rol
add
add
mov
int
fistp
jne
pop
ins
mov
jle
lods
pop
cwde
stos
add
push
sub
rol
xor
mov
pop
xchg
cdq
fnstcw
(bad)
fsub
mov
(bad)
rcl
fidivr
sub
xlat
cmp
push
(bad)
lods
cmp
fld
cmp
push
or
cmp
(bad)
movs
lahf
aas
add
pop
mov
or
jle
xchg
popa
inc
pusha
test
mov
pop
ja
movs
mov
xor
cld
dec
or
sbb
fsubr
es
dec
dec
jl
out
push
inc
sbb
pop
jle
js
mov
mov
sbb
(bad)
int
(bad)
push
jbe
iret
mov
dec
or
inc
adc
add
xchg
sbb
or
fnstsw
sbb
lea
inc
leave
mov
add
fst
sbb
and
add
adc
mov
fadd
mov
ins
loope
rcl
in
test
and
(bad)
jo
iret
xchg
push
ins
rol
movs
hlt
loope
add
add
(bad)
xbegin
mov
push
iret
mov
push
lods
aad
inc
in
jg
in
das
fstp
es
sub
adc
dec
sub
(bad)
mov
fdiv
jno
test
sbb
lods
push
pop
(bad)
out
mov
or
mov
or
(bad)
xchg
js
(bad)
mov
push
cmp
sbb
mov
mov
fistp
push
xlat
inc
test
inc
fsubr
xchg
arpl
inc
imul
out
shl
jb
pop
sub
out
mov
das
arpl
ins
dec
fdiv
cmp
adc
cmp
add
dec
sbb
mov
sub
fdivp
jae
sub
adc
jns
shl
add
push
icebp
ins
and
pop
stos
ins
push
mov
test
and
dec
in
pop
mov
mov
mov
inc
daa
jge
inc
out
pop
xor
cld
xchg
cmp
popf
cmp
test
lea
cdq
arpl
inc
xor
les
pop
adc
lods
in
ins
sub
sub
mov
push
jns
jae
push
mov
inc
scas
mov
jmp
and
call
or
fild
imul
mov
pop
or
loop
out
push
daa
int3
movs
and
fild
es
cmc
arpl
aam
push
pop
data16
mov
rcl
xor
pop
xchg
ins
repnz
in
fst
dec
(bad)
cmp
std
or
and
ins
fwait
pop
(bad)
pop
jbe
push
jl
mov
dec
stos
sub
add
fist
rcl
in
inc
sbb
lods
pop
xlat
pop
dec
add
cli
lea
in
outs
sar
int3
mov
ffree
addr16
mov
aaa
hlt
dec
jecxz
ret
lods
fcomp
jge
dec
cld
or
outs
xchg
jo
int
push
shl
mov
shl
fdivr
mov
les
xchg
dec
or
or
cmp
int3
add
pop
xchg
jp
or
imul
push
jno
or
jne
sub
popf
mov
in
sub
gs
jl
mov
push
loope
aas
lea
ja
adc
fadd
lock
jl
xor
imul
push
mov
aas
scas
in
inc
call
iret
iret
nop
bound
xlat
mov
daa
ins
cwde
add
cwde
fidivr
cmp
fld
jecxz
or
mov
xlat
pop
mov
pop
lods
pop
jae
mov
aam
test
fnstsw
pop
test
std
lea
ins
std
mov
inc
and
cmp
xor
test
pop
popa
xchg
ins
test
lods
mov
out
hlt
and
jne
in
mov
jno
jp
fnstsw
ins
inc
pop
popa
dec
push
mov
xor
nop
in
sub
cmp
imul
mov
jno
jle
adc
pushf
sub
push
cmp
xor
cmc
sub
lea
sbb
pop
movs
xor
sub
out
mov
in
inc
lea
lea
jmp
mov
(bad)
aaa
xor
les
fxch
xor
jl
sbb
test
ins
test
pop
xor
and
xchg
adc
call
mov
mov
ror
imul
je
popf
aas
sbb
xor
sub
ret
mov
xchg
movs
sbb
mov
aad
pop
or
dec
test
rol
scas
out
and
int3
fwait
cmp
jp
or
add
lds
clc
cmovge
cdq
jne
sbb
xchg
fwait
retf
in
xchg
xor
popa
es
sbb
mov
test
js
xchg
and
mov
cmp
clc
not
sbb
mov
cmp
stos
mov
lea
jle
jmp
test
mov
xchg
dec
jge
push
add
and
imul
je
dec
lods
js
and
push
sub
jle
lds
add
sti
out
ds
xchg
sbb
int3
idiv
sub
push
cmp
cwde
mov
clc
enter
lods
xchg
call
call
les
cmc
or
fisttp
cmp
leave
mov
fsubrp
push
cmp
imul
pop
push
cmp
in
in
cmp
fidivr
jmp
mov
xor
into
test
sbb
shr
cmp
jl
sbb
aaa
push
jl
outs
retf
pop
mov
sbb
cs
mov
ret
sbb
out
fidiv
ror
jecxz
dec
cdq
lahf
lods
movs
clc
hlt
pushf
in
mov
cmp
sub
pop
lods
(bad)
sbb
mov
lods
add
out
cdq
out
push
cmp
loopne
cmp
add
stos
repz
inc
fs
mov
xchg
xlat
shl
or
stc
pop
leave
xchg
push
xchg
dec
xchg
outs
mov
call
aas
into
and
out
pop
sub
sbb
into
lea
test
in
iret
(bad)
fcomp
repnz
scas
rcl
icebp
mov
int3
lahf
and
jge
bound
mov
xchg
or
cmps
fadd
xor
cmc
jl
jno
cwde
ins
lods
xlat
mov
and
inc
loop
pusha
and
jmp
lods
jecxz
repz
mov
test
lock
int3
fdivr
loop
in
xchg
mov
(bad)
mov
adc
nop
fist
bsf
out
xor
adc
scas
sub
jle
fsubr
mov
ins
lods
pop
ss
add
inc
mov
add
and
ret
inc
int
sbb
enter
mov
mov
mov
das
ins
mov
hlt
add
int
pop
sub
lahf
std
or
jl
xchg
out
mov
fisub
or
cmp
mov
sbb
dec
jmp
push
in
push
mov
mov
sub
scas
ror
icebp
mov
ret
or
and
jo
test
popf
dec
push
pop
cwde
mov
cdq
pop
pusha
das
arpl
scas
shr
xor
cld
jo
in
bound
xor
aas
jae
mov
int
int
and
add
add
lock
sar
and
inc
dec
and
in
adc
push
cs
lods
push
das
arpl
adc
sahf
ret
jle
fsubr
movs
bound
push
cld
pop
jae
mov
in
ret
xor
sbb
adc
mov
movs
push
rcl
sub
inc
and
adc
pop
sub
(bad)
std
mov
and
mov
cs
mov
sbb
xchg
rol
jae
sbb
fild
(bad)
std
mov
mov
bound
ins
cmp
mov
stc
fst
arpl
repnz
cmp
adc
ret
sbb
repz
mov
pop
push
popf
fimul
jmp
sahf
or
cmp
pop
add
iret
cmp
in
mov
in
arpl
scas
ins
and
add
jecxz
ror
(bad)
fsub
sar
dec
sub
add
dec
rcr
adc
cmc
adc
dec
enter
shl
dec
cmovb
inc
das
push
xor
loop
shl
ret
ret
and
adc
int
add
push
movs
movs
push
mov
test
hlt
bnd
in
dec
cmp
or
adc
add
jb
bound
mov
mov
gs
hlt
add
xor
dec
or
and
mov
(bad)
lods
xchg
in
gs
hlt
adc
aad
fs
enter
imul
(bad)
int3
ins
push
adc
adc
jmp
mov
iret
and
sub
hlt
std
cdq
mov
xchg
js
pop
inc
mov
adc
and
ror
icebp
adc
inc
mov
xchg
jo
in
push
nop
mov
sbb
adc
(bad)
mov
int3
mov
push
pushf
loop
rcl
xor
xor
pusha
jl
xor
xor
mov
pop
inc
nop
adc
cld
shl
and
sbb
adc
sub
mov
shr
jge
sub
icebp
mov
rcr
repz
bound
(bad)
mov
inc
bnd
add
or
fidivr
adc
jb
sub
push
sub
js
push
pop
jmp
test
mov
loope
cmp
ror
sub
adc
repnz
scas
in
mov
and
jecxz
dec
dec
adc
int
inc
dec
(bad)
mov
inc
repnz
fcom
retf
add
jecxz
in
jb
arpl
mov
int3
push
rcl
add
xchg
mov
xor
or
and
ins
lea
or
cdq
or
out
lods
jne
into
sar
jmp
in
fdiv
mov
in
push
cmp
inc
repnz
sub
xor
loop
jbe
stc
(bad)
cwde
push
cmp
aas
dec
ins
cld
shr
and
lahf
loopne
leave
adc
inc
and
mov
popf
loope
adc
in
loop
ins
and
ret
popa
imul
fbld
add
pop
out
nop
arpl
and
stc
jg
(bad)
std
mov
repz
fbld
dec
dec
push
mov
add
cmps
fmul
sbb
rcl
les
or
mov
js
mov
lock
loop
pusha
push
xor
jne
and
test
add
ds
add
mov
pop
ins
or
ja
in
and
add
mov
outs
sub
fmul
out
fnstenv
dec
in
inc
lods
movs
dec
dec
int
dec
jns
in
in
xor
lahf
in
in
sbb
int
xor
mov
xchg
jge
jne
sbb
mov
in
in
xchg
mov
(bad)
and
adc
mov
push
cs
lods
jmp
xor
adc
add
(bad)
mov
ret
fneni(8087
scas
jecxz
dec
ins
xor
and
mov
pop
push
popf
fiadd
test
(bad)
and
add
ds
add
mov
rol
pushf
loop
dec
and
shl
std
ror
je
lods
jns
dec
push
pushf
jge
or
and
add
popf
repz
int
xor
xor
add
movs
adc
pop
mov
int
lahf
in
test
jo
jb
shl
lods
push
inc
and
inc
mov
add
nop
mov
push
pop
xor
fucom
scas
in
(bad)
shl
dec
push
xlat
mov
sar
loopne
add
mov
lea
movs
pop
add
inc
ds
xchg
adc
xor
push
fisubr
add
in
mov
push
dec
adc
(bad)
aam
mov
xor
test
test
cmp
sub
jecxz
sub
fbld
add
das
arpl
in
xor
fdiv
xor
jno
lods
outs
adc
or
xchg
sbb
mov
mov
and
mov
and
and
and
cmp
xchg
adc
clc
enter
out
in
arpl
scas
rcr
int3
in
ret
or
test
iret
movs
bound
push
or
pop
jo
and
or
fdiv
mov
frstor
cdq
mov
jmp
shr
or
add
mov
mov
cmp
lea
je
inc
mov
pop
ins
ins
pushf
aas
repnz
cmp
jg
xor
aam
sti
sar
xchg
inc
push
cwde
pop
cmp
test
cmp
jg
and
cmp
lods
lea
mov
pushf
push
and
jge
int3
add
sub
mov
outs
in
jecxz
add
sub
mov
lods
rcr
les
test
pop
clc
lds
lock
mov
mov
lods
inc
mov
xchg
out
lods
arpl
add
sahf
aam
sub
xchg
std
dec
dec
adc
xchg
ins
adc
dec
(bad)
mov
jbe
aas
in
and
sub
std
fsubr
cmc
add
jb
push
ins
mov
aad
cmp
adc
and
push
jmp
in
pop
or
nop
mov
movs
push
inc
jno
in
inc
inc
pusha
das
pop
xchg
jae
mov
in
outs
sbb
fucom
into
sbb
pop
lea
mov
adc
arpl
repnz
cld
xor
sbb
pusha
fst
lods
loopne
inc
mov
jo
out
lods
(bad)
adc
movs
rol
pop
shl
adc
xchg
or
popf
xchg
out
in
arpl
dec
movs
hlt
scas
loope
or
dec
cmp
sub
jecxz
sub
adc
in
mov
xchg
out
in
arpl
dec
movs
sahf
push
shl
nop
xchg
adc
fld
iret
movs
bound
push
or
push
jo
ins
and
repnz
cmp
jle
inc
enter
fs
in
xchg
icebp
jns
push
add
dec
in
loop
in
mov
pop
jle
ror
sar
cs
mov
mov
jge
lods
mov
cld
inc
in
loope
or
in
lahf
and
dec
xor
push
in
inc
ja
das
in
iret
sar
je
aad
sub
sbb
repz
movs
je
lods
(bad)
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
rcr
dec
mov
mov
in
sub
cmp
sub
jp
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
mov
mov
fdivr
enter
sub
sbb
or
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
sub
in
sub
cmp
shr
sbb
or
jl
ins
lods
pop
mov
push
ins
pushf
jge
or
and
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
or
cmp
sub
sbb
or
sbb
dec
mov
jge
or
and
sub
sbb
repz
lods
pop
mov
lods
xchg
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
inc
dec
dec
mov
jge
repnz
sbb
int3
int
and
jl
ins
push
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fadd
int3
int
(bad)
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
or
cmp
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
shr
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
inc
lea
repz
sub
dec
and
xor
ins
stc
push
lds
test
int3
mov
jo
or
jl
add
sub
fisubr
clc
jg
sbb
scas
int
mov
jle
adc
push
aad
fbld
lock
bound
pop
mov
mov
imul
pop
shl
sub
cmp
ins
scas
jg
or
js
sub
cmp
sub
jo
jg
sbb
push
lods
cmp
sub
cmp
outs
repz
bound
cmp
jnp
push
(bad)
out
add
pop
ror
fcomp
ins
ficom
sti
pop
lahf
jno
sub
push
mov
pop
(bad)
adc
mov
enter
jmp
push
push
mov
imul
cmp
lods
and
test
cmp
inc
mov
adc
aas
or
pushf
add
dec
mov
dec
pushf
jl
test
pop
fldenv
dec
cdq
sub
sbb
or
sbb
call
pop
enter
int3
mov
jae
dec
lea
out
dec
int3
sub
or
out
int
call
popa
mov
sbb
lahf
push
cld
sbb
sbb
push
dec
lea
fild
hlt
or
bound
repz
pop
int3
or
and
xor
arpl
or
iret
adc
add
or
bound
movs
mov
sbb
xor
sub
sub
xor
iret
sub
mov
push
pop
lods
jo
or
fstp
and
xor
or
push
int3
outs
into
dec
lods
fs
scas
mov
pop
int
out
push
mov
sub
mov
or
bound
int3
movs
pop
popf
sub
pop
std
gs
stc
push
fimul
leave
or
shr
push
fisttp
loop
mov
ins
mov
lods
push
mov
dec
mov
cs
sub
sub
mov
inc
scas
jl
enter
lahf
outs
pushf
jle
sub
add
cmp
aas
or
pushf
sbb
push
outs
lods
dec
out
ins
mov
push
mov
mov
outs
mov
das
call
fbstp
pushf
pop
in
popf
outs
lods
dec
out
ins
int3
mov
jne
dec
lea
cdq
sub
pop
ret
or
pushf
add
mov
push
jmp
and
cld
(bad)
fistp
call
and
mov
leave
pop
std
push
jmp
aad
int
fcomp
mov
dec
mov
mov
mov
dec
cld
push
(bad)
in
cmp
cmp
sahf
or
lahf
sub
inc
jmp
or
sti
add
push
call
jle
pop
pushf
imul
outs
xchg
imul
fisttp
lahf
or
das
mov
adc
imul
popf
ins
in
outs
mov
or
and
pop
xchg
push
leave
or
sub
addr16
cdq
pop
xchg
dec
leave
aas
popf
add
cmp
and
jecxz
cld
jle
sbb
push
xchg
inc
sahf
jg
adc
push
xchg
xor
xor
outs
sahf
jg
or
fmul
mov
sbb
pusha
jmp
sub
rol
leave
or
sbb
or
jecxz
mov
push
popf
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
pop
mov
push
out
and
dec
aas
enter
call
call
push
mov
mov
or
paddd
fnstcw
loop
sub
mov
jns
sub
push
fnsave
jns
pusha
lea
clc
ins
ret
xor
das
aas
mov
jge
imul
mov
or
adc
ins
les
loop
xor
pushf
jge
jge
push
int3
int
(bad)
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
(bad)
fmul
xor
ins
pushf
jge
or
fcomp
int
(bad)
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
xchg
cmp
sub
sbb
js
jl
sbb
pop
leave
dec
dec
fdiv
int
mov
outs
mov
dec
loopne
inc
mov
arpl
adc
dec
iret
xor
aas
ins
aad
int
mov
imul
lahf
jns
jns
pop
repnz
les
int
frstor
mov
js
inc
mov
test
cmp
call
pop
mov
lods
ins
jmp
jl
inc
pushf
push
mov
int
leave
imul
iret
xor
or
sahf
sub
push
mov
push
lods
pop
mov
lods
ins
pushf
jge
imul
cmp
inc
mov
(bad)
in
popf
psubusw
enter
cmp
cld
je
sub
push
std
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
pop
sbb
enter
fdiv
mov
lods
add
or
cld
dec
int3
int
(bad)
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
pop
leave
sbb
push
sar
dec
mov
imul
cdq
push
arpl
pop
sar
and
jecxz
cld
sbb
int3
int
(bad)
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fcom
mov
mov
or
jl
ins
lods
pop
mov
in
les
loop
iret
xor
sub
cmp
dec
lahf
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
jg
sbb
(bad)
int
(bad)
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fcomp
mov
sbb
or
xor
ins
lods
pop
shr
sub
sub
push
lock
outs
test
int
fisttp
sbb
js
jl
or
mov
jge
or
fdivr
sub
ins
std
or
sbb
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
pop
clc
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
jmp
sbb
int3
int
(bad)
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
sub
dec
fldcw
lods
ds
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
sbb
ins
lods
sub
dec
dec
mov
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
add
pop
mov
lods
ins
pushf
jge
jg
sbb
int3
int
(bad)
jl
sub
pop
leave
or
mov
jge
or
fdivr
dec
in
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
lods
ins
pushf
jge
or
pop
mov
sub
sbb
or
cld
popf
in
sub
mov
jge
or
pop
mov
stc
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
call
lods
cmp
in
sub
cmp
jns
sbb
or
sub
dec
dec
mov
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
adc
or
mov
nop
in
mov
les
jge
fsubr
mov
scas
xor
sub
dec
mov
bound
mov
repnz
inc
(bad)
jb
inc
mov
jecxz
dec
movs
pop
iret
lea
push
cmps
add
jb
jl
mov
(bad)
cmp
add
js
mov
ins
sbb
mov
clc
add
mov
xor
add
inc
mov
jg
add
int
dec
add
imul
pop
mov
mov
ss
and
into
jl
or
sahf
xchg
pop
imul
xor
mov
mov
jb
mov
test
dec
lods
ins
or
fld
mov
ror
mov
sub
cmp
sub
sbb
or
dec
popf
pop
sahf
fbstp
pop
ins
test
cmp
rcr
cmp
sub
xchg
in
xor
fs
jg
pop
movs
ret
jle
pop
lahf
pop
pushf
jge
or
and
xor
ret
sbb
add
lea
push
loopne
fs
mov
jae
addr16
push
cmp
jp
ret
dec
mov
and
fidiv
or
mov
add
mov
es
add
adc
push
fdiv
dec
mov
push
jmp
pop
clc
lock
adc
aaa
ret
cmp
sub
sbb
or
std
pop
mov
lods
ins
pushf
jge
or
fsubr
int
fnstsw
std
or
jl
cmp
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
push
pop
mov
lods
ins
pushf
jge
pop
cld
sbb
int3
int
(bad)
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
sub
ins
lods
pop
mov
lods
ins
pushf
jge
repnz
sbb
int3
int
and
jge
ins
lods
pop
in
dec
dec
mov
sub
mov
int
(bad)
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
pop
lea
lods
pop
inc
dec
dec
mov
jge
or
fdivr
sub
jecxz
or
jl
ins
lods
pop
inc
dec
dec
mov
jge
pop
cld
sbb
int3
int
lea
jl
ins
lods
pop
mov
lods
cmp
cld
sbb
int3
int
(bad)
jl
ins
lods
pop
mov
enter
clc
jns
dec
lock
mov
test
mov
ins
loopne
lea
fnsave
lods
and
lock
pushf
pmulhuw
jno
inc
xchg
jle
int
mov
jns
or
ins
ficomp
imul
stc
or
inc
fwait
mov
sub
fstp
jle
or
pop
shl
cmp
xor
add
adc
bound
dec
mov
cdq
sbb
add
ficomp
dec
psubusw
jecxz
cli
push
sbb
retf
test
test
arpl
jae
shl
dec
add
jae
add
pop
clc
adc
mov
retf
inc
scas
jb
and
or
sub
xor
sub
adc
dec
repz
out
mov
into
adc
mov
js
add
xor
xor
popa
std
cmp
bound
push
mov
mov
jp
or
cs
lds
repz
popa
xchg
jo
inc
mov
mov
mov
pop
jmp
cmc
push
jmp
clc
outs
stc
dec
(bad)
fs
pop
jmp
mov
mov
call
popf
cmp
pop
aam
sbb
jg
jns
js
push
cmp
movs
je
sub
adc
cmp
dec
cli
das
inc
into
sub
or
adc
mov
pop
mov
out
jne
dec
into
jp
sbb
pop
(bad)
sub
lock
add
xor
or
fdivr
int3
mov
push
repnz
cmp
cmp
mov
mov
fidivr
mov
arpl
adc
sub
adc
clc
fs
jae
pop
mov
mov
cwde
sbb
imul
jb
and
fbstp
ret
and
sbb
dec
(bad)
je
inc
mov
mov
mov
das
clc
sbb
push
leave
and
or
into
push
xchg
dec
sahf
lds
pop
mov
bound
pop
mov
sub
sub
and
or
ins
fsubr
popa
mov
mov
lds
imul
pop
mov
or
cmp
add
imul
mov
pusha
imul
cmp
sub
mov
cwde
dec
mov
fwait
retf
xor
arpl
adc
fstp
add
fstp
lods
add
jg
inc
(bad)
jb
pusha
test
fld
jns
js
adc
or
add
xor
cld
adc
sub
pop
fisttp
jb
pop
lds
inc
(bad)
sub
cs
sub
in
hlt
outs
test
jo
mov
dec
icebp
js
jne
sbb
cmp
add
xor
inc
stc
cmp
bound
mov
imul
in
enter
cmp
dec
lahf
js
inc
out
push
add
outs
mov
jnp
pop
les
cmp
call
jg
add
push
scas
sub
cmp
mov
shr
sbb
bound
xor
call
inc
lods
pop
test
mov
imul
adc
jecxz
lock
popa
mov
sahf
leave
retf
and
test
fs
pop
mov
add
jnp
add
push
call
pop
test
iret
movs
dec
mov
mov
or
jl
push
fisubr
mov
out
or
adc
push
mov
fs
iret
mov
ins
mov
add
das
sti
sub
fnstenv
movs
cmp
xor
sub
outs
mov
bound
mov
lds
repz
mov
sub
retf
cdq
daa
sahf
jge
outs
loope
repnz
sub
add
mov
les
fistp
push
mov
test
cdq
pop
cmc
imul
sbb
and
rcr
fmul
cli
pop
mov
push
mov
jmp
aas
clc
ins
fstp
fsub
cmp
push
fcomp
std
add
jns
imul
test
imul
xor
les
lock
test
cmp
cmp
jg
adc
dec
(bad)
pop
aam
dec
enter
icebp
adc
push
lahf
push
call
mov
pop
out
fldcw
leave
sub
sbb
mov
mov
mov
out
xchg
imul
sub
dec
dec
rcl
clc
and
dec
movs
inc
mov
movs
mov
jo
fs
pop
jmp
les
sub
xor
dec
repnz
fisttp
cmp
icebp
mov
mov
adc
or
fild
(bad)
int3
sbb
outs
mov
ins
mov
scas
inc
ret
arpl
adc
add
xor
jo
int3
push
sahf
pop
test
ins
int3
sbb
adc
dec
inc
movs
jp
outs
jmp
cmp
fcom
inc
in
and
pop
scas
movs
pop
jecxz
mov
sub
push
adc
ins
repnz
(bad)
leave
cmc
xchg
pop
pop
jg
pop
int3
cld
or
mov
ins
lods
lods
dec
mov
outs
add
clc
arpl
in
sbb
in
rol
jp
jle
lods
dec
in
adc
repnz
adc
outs
fmul
int3
xchg
scas
sbb
or
int3
lock
loop
dec
in
sbb
sub
mov
fstp
je
cdq
test
mov
int
dec
fcomp
pop
fidivr
ins
pushf
shl
(bad)
ret
pop
cmp
fidiv
mov
inc
lods
dec
shr
dec
mov
outs
retf
jge
mov
shl
outs
scas
push
pop
int3
sub
loop
repnz
sbb
ins
pushf
pushf
ins
jg
mov
mov
adc
in
dec
mov
fstp
pop
mov
outs
pushf
(bad)
sti
dec
dec
lods
pop
das
fwait
outs
(bad)
dec
scas
pop
loop
push
push
cmp
dec
mov
ret
and
test
fist
sub
jo
or
pop
in
push
loopne
in
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
sub
sbb
or
jl
ins
lods
pop
mov
lods
ins
pushf
jge
or
fdivr
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
popa
adc
add
xor
and
cs
and
dec
add
or
push
pop
stos
fcomi
mov
(bad)
or
jnp
imul
pusha
ret
mov
mov
mov
fild
pop
lea
adc
sub
sub
xchg
stos
sbb
jmp
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
in
dec
ss
and
and
shr
mov
xor
fcom
fsub
popa
xchg
add
cmp
mov
rol
into
mov
xchg
rcl
dec
call
(bad)
or
lock
push
jae
jecxz
ficomp
and
sub
fidivr
push
and
retf
pop
push
push
xchg
(bad)
stc
sbb
sbb
jnp
sti
pop
pop
int3
push
inc
retf
idiv
movs
sub
or
sti
lods
and
xor
push
fwait
mov
add
mov
retf
jge
mov
and
or
sbb
ins
(bad)
rol
xchg
jle
loop
out
mov
mov
jnp
xor
push
addr16
mov
push
lock
loope
sti
sub
ds
mov
xchg
fild
push
jecxz
leave
sti
sub
add
xor
push
fild
and
mov
(bad)
xchg
stos
adc
outs
bound
adc
xchg
push
out
out
cmp
sub
pop
push
fnstsw
(bad)
pop
xchg
mov
(bad)
retf
sub
or
cmp
out
(bad)
(bad)
sbb
imul
mov
sub
retf
loop
aad
mov
cmc
or
mov
push
out
xor
es
sahf
pop
add
jle
xchg
add
stos
mov
jae
shl
xchg
out
jg
in
cs
repz
call
xchg
fst
push
out
mov
sub
xor
push
cmc
mov
repz
inc
dec
movs
or
mov
sti
adc
or
(bad)
out
test
jae
arpl
cmps
mov
int3
shr
add
or
push
nop
xor
push
call
shl
jo
pusha
jecxz
jnp
and
outs
repz
mov
imul
adc
sahf
mov
stos
inc
sbb
mov
std
fcmove
call
sub
ss
push
es
jmp
mov
retf
or
xor
sub
and
sbb
sbb
out
cmp
aaa
inc
jp
xchg
cmps
inc
lahf
mov
sub
and
sub
add
call
inc
mov
lods
cwde
inc
pop
mov
in
inc
shr
sub
mov
inc
pop
push
es
loop
push
imul
in
inc
jb
mov
jbe
and
sbb
push
mov
and
pop
mov
es
icebp
addr16
adc
add
and
inc
loope
sub
cld
dec
xor
nop
outs
push
fcmovne
pop
sub
push
ret
fwait
mov
mov
arpl
adc
loopne
inc
jg
xor
not
push
pop
jae
mov
into
stos
rcl
leave
out
sti
xchg
jmp
xor
and
cs
jmp
push
cs
call
jmp
cmp
inc
lods
mov
sub
jmp
ret
ss
xchg
or
adc
xor
add
or
imul
push
jbe
fwait
sub
imul
clc
mov
mov
mov
cs
sar
dec
push
jae
sbb
sahf
aam
xchg
loopne
push
aas
push
loopne
movs
lock
cs
ins
push
retf
neg
repz
mov
mov
pop
das
inc
sbb
and
pusha
out
add
es
leave
lock
pop
arpl
jp
pop
cmp
xlat
ret
dec
and
fwait
dec
retf
dec
xchg
es
call
(bad)
xor
leave
sbb
shl
test
fucomi
imul
inc
cs
popa
into
adc
jmp
retf
mov
in
or
mov
ss
cmp
ins
push
fwait
mov
pop
test
jmp
cmp
ja
add
mov
gs
add
(bad)
mov
jbe
dec
in
not
xchg
jecxz
add
jecxz
sti
gs
push
or
xchg
xchg
or
dec
xchg
stos
pop
push
push
(bad)
call
add
push
jbe
jno
mov
jg
push
mov
sbb
inc
cdq
mov
in
add
in
xchg
mov
sub
es
outs
ss
push
movs
data16
out
jae
dec
fstp
ja
pushf
sbb
adc
ret
pop
lods
es
movs
data16
mov
push
(bad)
cmp
int
mov
sbb
cmps
lock
cs
ret
dec
mov
adc
pop
xchg
in
fisttp
mov
pop
xor
xchg
mov
mov
movs
inc
xchg
out
jl
cmp
sub
adc
ret
push
test
in
ret
push
push
jnp
ins
cmps
cdq
fs
cs
adc
xor
(bad)
in
outs
push
ficomp
hlt
retf
mul
cmp
pop
mov
movs
mov
mov
dec
sti
cmp
iret
xor
or
out
aam
cwde
popf
inc
popa
xchg
pop
dec
mov
mov
dec
(bad)
loope
sub
jae
mov
pop
(bad)
in
jl
sbb
dec
in
cmc
test
sti
enter
sub
repz
leave
jbe
mov
sbb
fucomp
cld
xchg
es
loop
add
jae
jae
arpl
jecxz
sub
cmp
les
mov
and
in
push
dec
inc
popf
ret
dec
push
mov
mov
adc
sub
imul
jecxz
mov
mul
jnp
loopne
jecxz
sbb
mov
inc
mov
fstp
jecxz
in
cmps
push
sbb
imul
push
mov
push
mov
out
sti
ror
aam
(bad)
cmp
in
inc
outs
or
stos
psrlq
or
adc
dec
stos
fidivr
sub
imul
ret
sbb
inc
test
pop
es
(bad)
mov
inc
fidiv
fnstenv
out
fwait
cdq
mov
lds
jo
cs
es
popf
xor
pushf
inc
aam
jg
jne
(bad)
retf
and
push
aam
in
sub
mov
push
xor
and
jbe
test
lahf
fisubr
jns
mov
push
pop
mov
scas
retf
push
mov
adc
jle
mov
inc
cmps
sub
mov
out
shl
in
aad
add
fninit
xchg
fisubr
inc
xor
popa
mov
lock
inc
sbb
push
addr16
ficomp
adc
cmp
mov
jecxz
pop
push
arpl
fild
iret
adc
pop
mov
dec
(bad)
xchg
cmp
push
add
and
add
jmp
jecxz
mov
into
mov
mov
adc
fdivr
add
dec
cs
inc
jmp
mov
push
out
push
cmp
hlt
jecxz
add
inc
adc
int3
rol
int
xchg
sti
sahf
adc
repnz
nop
popf
fbld
or
add
jmp
out
xor
retf
and
fstp
not
retf
sub
inc
push
ret
ret
stc
push
add
dec
rep
adc
retf
pop
cmp
mov
test
pop
pop
pop
inc
or
neg
fwait
ds
out
ror
out
mov
xor
xchg
mov
iret
ins
in
pop
dec
dec
imul
js
loope
dec
jbe
pop
push
jns
push
add
sbb
mov
mov
cmovbe
sbb
ins
into
cmps
(bad)
cdq
xchg
mov
cmps
add
and
sbb
in
ret
inc
dec
int3
add
xchg
imul
jle
ja
retf
imul
mov
inc
arpl
inc
xchg
aaa
add
lahf
mov
lahf
call
sbb
call
mov
push
cmps
repnz
push
cmp
sub
push
push
pop
pop
mov
mov
sub
jmp
push
cmp
iretw
test
or
push
fwait
adc
inc
xor
aas
cmp
mov
push
ds
mov
fs
shl
mov
pop
and
sti
mov
loop
or
sbb
jp
xchg
xor
jp
fdivp
dec
sub
outs
aaa
and
jp
out
enter
and
xchg
mov
mov
rcr
add
dec
ins
add
jae
sub
sar
dec
dec
mov
mov
lahf
ret
fild
das
sub
xchg
stos
cwde
jnp
mov
popa
int3
imul
out
(bad)
and
mov
jle
and
jg
jae
mov
jmp
mov
add
jecxz
shl
add
pop
and
adc
clc
mov
js
mov
mul
mov
sub
xchg
mov
sub
pop
iret
hlt
sbb
push
inc
push
sub
mov
mov
lods
add
xor
pop
jmp
adc
cwde
mov
mov
mov
stos
(bad)
fild
jb
nop
aaa
lods
and
(bad)
jmp
nop
(bad)
scas
test
hlt
mov
adc
adc
rcr
inc
push
sar
imul
dec
xor
(bad)
cli
(bad)
fist
or
dec
jmp
add
add
mov
iret
xchg
scas
fcmovu
pop
add
loopne
shr
sti
call
ror
arpl
mov
cmp
into
adc
ret
loopne
push
jmp
pop
mov
xor
mov
and
(bad)
std
jo
adc
xor
push
add
(bad)
sub
jnp
loopne
fwait
inc
imul
mov
push
or
mov
dec
mov
jbe
push
outs
aaa
dec
sub
scas
sbb
dec
es
mov
lods
push
sub
and
push
adc
ss
jl
mov
out
fist
sbb
mov
push
jnp
xchg
and
sbb
fs
xchg
add
pusha
mov
js
out
aaa
call
inc
fsubr
mov
fwait
mov
ins
mov
mov
out
aaa
push
in
inc
dec
xor
daa
mov
mov
xchg
mov
ficom
adc
dec
or
jecxz
adc
push
cmp
dec
lock
mov
dec
mov
in
loope
(bad)
mov
xor
dec
push
mov
sub
adc
or
scas
addr16
mov
popf
sbb
add
mov
adc
out
dec
mov
pop
pop
pop
inc
dec
and
aad
jb
lock
sub
sbb
jnp
sti
push
jmp
xchg
shl
mov
and
mov
inc
or
add
sar
add
sar
(bad)
les
(bad)
das
test
loopne
in
ja
sbb
cmp
ss
dec
(bad)
jne
push
sti
pop
sahf
adc
jno
popa
repnz
fild
ds
sbb
pop
sub
dec
push
push
xor
mov
sub
dec
jno
and
and
and
fscale
fnsetpm(287
pop
xchg
movs
xchg
pushf
jns
inc
push
arpl
adc
pop
add
rol
adc
ret
daa
jae
scas
cs
loop
xchg
xor
lock
sub
fisubr
push
(bad)
jbe
and
lods
cmp
aam
push
int3
retf
push
fwait
or
push
(bad)
inc
call
call
and
mov
dec
mov
or
jnp
scas
xchg
sub
add
cmp
xor
loop
(bad)
stos
test
dec
dec
add
nop
or
(bad)
stos
mov
sahf
ret
daa
lods
mov
xor
std
xchg
mov
daa
push
arpl
mov
arpl
fwait
push
jl
jo
stos
jo
add
(bad)
leave
pushf
sbb
or
je
shl
outs
adc
xor
jmp
loope
ror
and
retf
pop
cli
sti
cli
inc
adc
aaa
and
or
sti
stos
or
sti
sub
dec
gs
mov
sbb
and
out
sbb
mov
mov
jb
mov
inc
jecxz
adc
shr
outs
loope
aam
mov
psubq
ret
jbe
mov
imul
popa
xchg
jle
call
push
outs
shr
push
sbb
ins
jecxz
adc
fsubr
shl
add
ror
pop
pop
pmaxub
adc
push
sub
xor
push
arpl
adc
and
(bad)
sub
xchg
les
inc
test
jmp
cmps
pop
lahf
inc
bound
(bad)
xor
mov
pop
shl
outs
xor
sbb
outs
stos
xchg
das
mov
mov
fld
jge
popa
iret
or
xchg
fisubr
mov
dec
mov
sahf
lock
nop
jmp
push
xchg
daa
xor
xlat
les
int3
xchg
and
mov
and
bound
mov
inc
sti
sahf
jmp
mov
(bad)
jecxz
cmp
jecxz
not
jbe
jae
cs
stos
imul
adc
into
shr
popf
xchg
jle
jecxz
fwait
cmps
out
iret
jecxz
es
cmps
push
sbb
sbb
jl
mov
cs
pop
test
aas
repz
xchg
sub
sbb
inc
push
jnp
lea
cmps
arpl
adc
aas
push
out
push
jbe
(bad)
sbb
cmp
cmps
mov
adc
call
cmp
sub
xlat
or
fsub
xor
jae
out
(bad)
xchg
inc
inc
fwait
or
dec
jbe
xchg
ret
aam
xchg
push
push
mov
mov
int
out
jnp
pushf
retf
test
scas
shl
push
sysenter
sbb
xor
scas
xchg
dec
push
fmul
mov
push
sahf
push
(bad)
retf
xchg
dec
test
jmp
ror
mov
inc
mov
pop
or
cmp
xchg
push
movs
icebp
push
movs
or
mov
cmps
xchg
push
jecxz
adc
jmp
and
jae
fsub
inc
mov
imul
pop
outs
(bad)
jbe
xchg
dec
push
movs
and
imul
pusha
mov
imul
jae
pushf
jmp
les
arpl
aaa
test
sub
sub
fidivr
scas
mov
inc
xchg
cmc
xor
enter
xchg
cmp
jb
push
add
fild
cmps
pop
and
push
adc
lock
aam
retf
sub
jo
push
pop
mov
xchg
xchg
mov
ror
or
push
out
xor
xor
jle
or
xchg
cmps
inc
shl
xchg
test
or
dec
or
cdq
movs
xor
std
in
sub
cmp
imul
dec
out
jb
sahf
sbb
add
xchg
xchg
cmp
or
retf
repz
(bad)
fsubrp
push
fidiv
and
aaa
out
cmps
(bad)
shr
push
or
jnp
out
aas
mov
xchg
mul
es
xchg
cmp
repz
aad
retf
(bad)
or
sbb
into
fwait
mov
sub
pop
scas
ret
mov
jecxz
cwde
sub
test
dec
or
xchg
enter
dec
pop
mov
mov
fst
sahf
push
add
outs
push
fild
(bad)
mov
out
ret
dec
sahf
out
dec
xchg
popfw
jg
xor
ror
add
jle
fdivr
loopne
sbb
and
pop
cmps
mov
pop
repz
add
outs
add
push
and
neg
mov
push
push
rcr
sahf
scas
pop
sahf
repz
xor
outs
ds
inc
or
mov
stc
(bad)
stos
imul
repz
mov
in
add
arpl
div
imul
dec
mov
stos
rcr
pop
into
ret
test
jecxz
inc
push
jae
push
imul
popf
out
jecxz
cld
leave
out
cmp
jge
jae
mov
jle
scas
idiv
push
stos
jecxz
clc
jmp
jbe
scas
add
cmp
dec
push
mov
cmp
cmps
mov
pushf
or
fwait
dec
fild
push
sub
daa
repz
pop
repz
or
mov
stc
push
push
push
addr16
fistp
mov
push
sbb
retf
mov
inc
dec
arpl
iret
stos
push
mov
mov
dec
push
jle
cld
mov
sub
mov
or
mov
cmp
adc
fpatan
or
call
dec
jmp
popf
jae
arpl
mov
mov
fistp
or
jge
imul
mov
inc
ins
lods
jl
mov
or
xchg
retf
in
cmp
ret
jecxz
jnp
cmp
jae
es
es
mov
rol
cmp
test
push
in
hlt
xchg
test
(bad)
dec
jmp
es
jne
inc
adc
and
xor
(bad)
inc
dec
fdiv
repz
cs
add
mov
cmps
repz
retf
mov
pop
sti
adc
aaa
ffree
inc
aam
dec
push
sub
jnp
cmp
pushf
fwait
jnp
sbb
pop
(bad)
jmp
push
mov
sbb
aaa
cmps
and
fld
lods
cs
mov
es
dec
push
mov
sbb
dec
aam
dec
jbe
data16
dec
imul
mov
adc
inc
xor
data16
dec
mov
stos
mov
inc
push
icebp
jl
ds
cmp
or
sbb
in
cmp
cmp
fmul
mov
inc
push
inc
jge
jnp
pop
lods
sub
jne
(bad)
add
fcomi
test
ins
xchg
inc
popf
xor
and
mov
mov
mov
popf
iret
pop
data16
lea
fidivr
iret
jecxz
repz
and
stos
mov
dec
mov
xchg
push
push
jae
push
jae
cli
or
leave
pop
cmp
adc
retf
push
nop
iret
hlt
popa
test
mov
inc
(bad)
stos
jle
mov
inc
sti
adc
retf
or
xlat
data16
or
cs
mov
mov
mov
sub
retw
mov
repnz
push
imul
shr
sbb
adc
lds
cmp
inc
test
adc
lds
fsubp
mov
jge
stos
sbb
pop
ret
push
ret
jns
iret
add
push
retf
mov
mov
gs
xchg
inc
into
sub
psrlq
add
inc
sbb
dec
cmps
cld
add
pop
and
mov
and
ds
mov
stos
xor
jbe
outs
mov
inc
out
ror
dec
xor
ins
stos
inc
fwait
mov
dec
jg
outs
dec
xor
loopne
(bad)
dec
xor
out
push
es
out
ss
xor
outs
sti
and
mov
bswap
mov
in
arpl
hlt
mov
xor
ja
add
in
xchg
push
mov
idiv
and
push
sbb
enter
add
lar
inc
pop
cmp
out
add
outs
mov
and
out
jmp
pop
mov
sti
jmp
jle
outs
or
jecxz
push
aas
mov
pop
mov
loopne
cs
retw
mov
(bad)
out
adc
inc
out
jecxz
outs
lods
es
popf
xor
loopne
stos
shl
adc
sub
xchg
std
(bad)
lock
sahf
xlat
mov
push
jae
inc
out
fidiv
movs
mov
mov
sar
adc
and
out
dec
and
xchg
adc
jae
es
push
rcr
xchg
adc
sahf
mov
jge
pop
xor
push
lahf
mov
arpl
fidivr
out
mov
mov
(bad)
mov
pop
fsub
es
push
movs
cs
call
repz
nop
cmps
fdiv
jecxz
in
call
repnz
fistp
push
(bad)
mov
in
out
mov
add
cmp
and
sub
fdivr
enter
push
dec
mov
out
ja
ds
repz
aas
sahf
sbb
cld
cmc
icebp
pop
das
mov
pop
mov
pop
dec
fwait
and
adc
dec
retf
sti
ret
push
nop
mov
loop
mov
mov
(bad)
out
jns
xor
cwde
add
add
cmps
jmp
imul
hlt
and
add
or
cmp
lods
or
xor
imul
push
push
dec
sar
rcr
dec
add
out
sub
dec
fistp
lock
mov
ret
inc
outs
mov
mov
xor
dec
jno
cmps
icebp
dec
outs
add
jp
xchg
les
loopne
js
push
mov
inc
test
or
xchg
sub
fist
xchg
in
cmp
and
(bad)
inc
shl
clc
inc
out
adc
adc
xlat
sti
ret
or
pop
daa
rcr
repz
push
xchg
stos
inc
shl
mov
inc
sub
pop
mov
pusha
mov
add
push
repnz
leave
push
cs
mov
cmp
nop
jl
pop
ins
fsubp
sub
xchg
cmps
mov
push
loope
aam
inc
fistp
js
retf
dec
sbb
and
xchg
pop
mov
push
repz
mov
add
and
sti
(bad)
in
not
(bad)
(bad)
xor
jmp
add
inc
jmp
sub
iret
or
into
jo
clc
and
cmp
sub
shl
dec
add
sbb
push
jge
cwde
jmp
xlat
jnp
imul
sbb
fs
outs
dec
sahf
mov
push
aad
push
cmc
fistp
pusha
xor
es
(bad)
jge
pop
pop
sar
jecxz
adc
fmul
adc
ror
stos
push
push
fwait
cmp
sti
pop
xchg
ret
(bad)
push
cwde
inc
inc
and
add
cld
xchg
fcmovb
xchg
mov
int3
dec
rol
pop
outs
xor
and
push
push
adc
clc
dec
stos
sub
fwait
xchg
mov
add
inc
sahf
repz
jecxz
shl
ss
add
ds
call
inc
cmp
scas
cli
mov
xor
sbb
lahf
retf
icebp
mov
inc
cwde
shr
jnp
(bad)
pop
cmp
lods
das
push
out
sti
and
ret
xchg
jbe
and
popf
jecxz
shl
aas
loopne
out
(bad)
fs
inc
mov
jle
mov
rcr
neg
dec
nop
stc
push
stos
jo
out
mov
ret
jae
pop
rol
push
push
int3
rol
popf
adc
jae
sbb
ds
cmp
xor
pop
xor
push
jno
mov
sub
movs
mov
cmp
mov
xchg
mov
xor
xchg
mov
xchg
fwait
dec
stos
imul
pop
shr
sub
mov
dec
shl
add
clc
cs
ret
or
es
imul
jecxz
mov
lea
cmps
repz
jle
xchg
jae
loopne
fisubr
cs
pop
jecxz
mov
and
adc
xchg
aaa
add
push
add
mov
fwait
xlat
movs
sti
shr
test
ins
sbb
add
pop
dec
jnp
push
sub
cwde
rcr
xor
pop
and
ret
sub
mov
add
jb
pop
push
sub
pop
mov
push
retw
sbb
retf
fs
iret
and
xor
jl
push
dec
outs
pop
add
lea
repz
cli
xor
push
imul
repz
push
shr
and
sbb
ret
sub
(bad)
cli
pop
mov
mov
push
jae
pushf
in
stc
rcl
or
jno
retf
iret
fistp
jecxz
pop
aam
aad
mov
inc
push
mov
iret
inc
push
add
xchg
daa
or
mov
sbb
add
push
es
out
push
jg
adc
push
mul
popf
lea
sbb
bound
nop
bound
iret
sub
mov
xor
add
sbb
call
mov
dec
cmps
jge
jmp
pop
not
cli
not
retw
pop
cmps
cmp
jbe
ins
test
dec
(bad)
out
pop
adc
imul
jecxz
push
jne
nop
cmp
imul
rol
lock
(bad)
jo
mov
push
pop
jbe
(bad)
test
daa
xchg
add
pop
lock
and
je
dec
xor
not
xchg
loop
push
hlt
jnp
mov
ret
test
idiv
inc
stos
imul
push
mov
push
pop
sbb
inc
sahf
mov
mov
or
fadd
mov
fimul
ds
sub
push
pusha
aas
push
mov
mov
xchg
sahf
push
jnp
push
push
leave
ss
idiv
push
sahf
ficomp
pop
jmp
sub
aaa
outs
sahf
out
mov
fild
dec
push
sar
cmp
pop
xchg
dec
(bad)
arpl
ja
pop
das
dec
aaa
push
xchg
add
xor
das
nop
neg
ds
(bad)
dec
xor
adc
retw
dec
mov
ret
and
cmps
es
rcr
imul
inc
add
repz
daa
icebp
retf
xchg
mov
sub
mov
xchg
scas
push
mov
pop
(bad)
adc
lods
or
das
nop
aaa
cld
aad
xor
enter
adc
retf
xor
call
(bad)
das
add
fstp
out
pop
add
jmp
(bad)
mov
shr
dec
adc
dec
jecxz
pop
mov
fidivr
dec
jo
mov
fwait
into
xchg
bound
mov
xchg
cmp
stos
push
adc
xchg
jno
mov
addr16
(bad)
mov
push
retf
out
jns
sub
aas
inc
push
test
push
inc
dec
(bad)
jae
and
mov
fcomp
adc
mov
psubsw
add
stos
retf
outs
and
stos
or
ror
sti
shl
ret
(bad)
rcr
imul
inc
pop
lahf
mov
jmp
std
mov
jae
pop
mov
loop
push
call
jne
lods
jnp
push
xchg
mov
pop
inc
mov
pop
movs
shl
push
add
push
or
ret
test
xchg
loop
pop
arpl
fld
pusha
retf
retf
movs
mov
nop
movs
or
push
loop
mov
sbb
add
(bad)
scas
sti
fisttp
jmp
into
test
jmp
rcr
call
sbb
dec
dec
cmps
test
ret
popf
or
pusha
dec
bound
test
scas
pop
inc
dec
cli
shl
in
sub
pop
adc
test
daa
xchg
int
sub
aam
or
jae
outs
enter
call
test
ret
mov
mov
xchg
arpl
xor
sbb
push
imul
int3
hlt
rcl
mov
inc
addr16
sahf
pop
jbe
(bad)
mov
xor
imul
imul
push
jge
cs
pop
ja
fs
les
inc
jne
mov
mov
mov
sbb
sti
jne
mov
icebp
call
fwait
div
mov
jo
sbb
push
sub
sbb
or
cmp
pop
jae
fistp
int3
sbb
mov
push
mov
dec
mov
adc
and
mov
jl
sbb
cmp
js
jecxz
adc
inc
mul
jp
stos
add
(bad)
inc
push
cmp
sub
and
call
fwait
push
cmp
shr
ret
xchg
(bad)
aas
add
xor
sahf
sub
jno
outs
jnp
push
push
dec
push
mov
and
int3
sub
mov
cs
mov
mov
or
(bad)
mov
pop
(bad)
ret
xor
xlat
dec
jmp
stos
add
fwait
push
(bad)
jnp
add
ins
daa
jmp
(bad)
popf
jbe
fisttp
repz
pop
lahf
mov
dec
ret
push
(bad)
pop
dec
arpl
sub
push
dec
retf
add
sbb
and
push
sub
push
jbe
ss
inc
xchg
rol
sahf
sahf
stos
and
retf
aam
push
push
hlt
scas
mov
and
test
jl
(bad)
jg
repz
jecxz
dec
retf
daa
jb
inc
lds
fcomip
fistp
pushf
jmp
(bad)
js
outs
ret
and
mov
iret
push
mov
mov
adc
mov
scas
xchg
mov
sub
lods
cmp
sbb
jmp
pop
movs
mov
push
stos
push
mov
xor
mov
mov
sbb
mov
pop
arpl
enter
mov
arpl
push
jle
jmp
out
xchg
aas
cmp
jnp
xor
sub
xchg
push
cmp
dec
sti
in
or
mov
sub
push
push
and
or
fsubr
mov
mov
jb
scas
jg
jae
scas
repz
rol
mov
jne
fiadd
cmp
les
stos
inc
jecxz
fwait
mov
js
jecxz
rol
rol
and
lock
movs
ins
repz
out
lahf
or
xchg
jmp
push
enter
cwde
ins
dec
in
cmovae
push
xor
cmp
stos
jae
shl
outs
jae
mov
scas
mov
das
cmp
jne
sub
or
(bad)
sti
xchg
stos
cs
cmc
mov
fld
mov
sub
inc
push
clc
loope
xchg
clc
push
data16
adc
pop
in
mov
es
inc
push
push
ds
mov
scas
mov
repz
inc
outs
jbe
leave
sbb
pop
lods
into
mov
adc
scas
adc
jecxz
out
stc
sbb
sub
imul
sbb
push
xchg
mov
pop
mov
mov
and
inc
sub
mov
jo
lods
ds
inc
adc
rcl
inc
add
mov
jbe
fcomp
test
jle
push
sbb
(bad)
mov
jnp
sbb
push
outs
mov
iret
iret
lahf
mov
cmp
arpl
inc
(bad)
sub
retf
loop
sbb
sti
dec
push
fdivr
adc
sbb
ins
inc
lahf
cli
je
cmp
sub
xchg
xor
jbe
xor
(bad)
scas
jbe
ja
(bad)
sub
shl
pop
icebp
(bad)
int
jbe
dec
imul
lock
jo
addps
mov
mov
loope
(bad)
mov
aaa
add
cmp
cli
mov
fild
and
push
cmp
clc
adc
stc
fisub
fs
mov
and
sti
cmps
pop
pop
mov
loop
shl
mov
lds
jl
jecxz
dec
js
mov
outs
jle
outs
add
mov
fmul
clc
mov
jae
ins
or
xor
or
push
push
push
pop
or
enter
jbe
(bad)
and
call
daa
(bad)
mov
jl
xchg
test
mov
mov
inc
push
test
fwait
lock
add
data16
xchg
in
adc
dec
and
ss
out
xor
jl
mov
std
jo
mov
jecxz
sahf
sub
lock
cs
fsub
ret
scas
mov
jl
pop
cmp
add
call
jbe
packsswb
scas
cmps
cmp
pusha
mov
or
jmp
cmp
(bad)
adc
mov
hlt
push
and
and
stos
pop
retf
pop
xchg
arpl
cmp
xor
sub
or
or
mov
add
and
out
xchg
shl
fisubr
mov
cmp
ror
int3
add
mov
xchg
dec
push
mov
jg
cmp
pusha
jae
adc
into
xor
out
push
jnp
loop
call
jl
dec
je
out
pop
pusha
adc
shr
imul
loop
pop
arpl
in
pop
fwait
mov
test
pusha
xchg
ficom
mov
xchg
or
sub
inc
sbb
jmp
(bad)
xchg
stos
rcr
aaa
push
popf
mov
div
adc
dec
fcmove
push
jae
add
mov
or
jmp
mov
jmp
mov
add
jnp
xchg
push
push
stos
dec
ret
imul
mov
mov
into
inc
or
sbb
dec
jg
sbb
push
movs
mov
jmp
out
(bad)
jbe
pusha
les
mov
cld
sbb
lods
xchg
movs
cmp
sti
retf
push
leave
mov
or
imul
xchg
es
fdivr
adc
xchg
jae
es
stos
out
mov
pop
sti
pop
adc
fcmovnu
or
push
jle
hlt
sub
sub
stos
ja
test
sahf
adc
fisubr
jecxz
cwde
jmp
dec
add
and
jae
es
sahf
test
push
cmps
(bad)
jg
getsec
ret
mov
mov
jne
mov
push
or
gs
jb
out
cmp
mov
jecxz
dec
sub
adc
push
bound
dec
jmp
mov
xchg
and
adc
xchg
mov
push
call
sbb
dec
mov
sahf
or
data16
sub
fnsave
retf
fwait
stos
push
pop
jno
xor
rcr
loop
arpl
mov
sub
dec
jmp
xor
sub
fidivr
call
and
adc
mov
mov
dec
xchg
xchg
dec
repz
mov
inc
inc
addr16
sahf
sub
mov
mov
dec
jae
hlt
push
sub
rol
ins
mov
repz
add
sbb
add
add
fwait
mov
data16
mov
inc
dec
ds
jne
ror
outs
cmp
retw
hlt
sub
repnz
push
fisttp
inc
nop
fld
mov
sub
sub
in
das
call
nop
sbb
push
inc
push
clc
adc
test
xor
pop
cmp
adc
ret
div
cli
or
cmc
adc
push
fwait
int3
jmp
jp
sub
xor
dec
dec
pop
(bad)
sub
mov
jbe
pop
xor
jnp
fsubr
jae
jg
and
ror
je
cmps
sahf
pusha
cmps
sbb
mov
push
dec
inc
pop
int3
mov
sub
and
aad
jnp
pop
jo
and
sub
inc
jecxz
inc
das
adc
push
inc
pop
repz
jnp
stos
(bad)
popf
jne
out
sub
sub
retf
loop
in
fisttp
jnp
stos
arpl
clc
mov
adc
test
ror
jecxz
in
sbb
out
or
jnp
dec
inc
movs
jae
mov
pop
add
out
adc
retf
addr16
sub
pop
cmp
(bad)
fwait
js
into
or
xor
cmc
fwait
jae
push
test
push
repz
std
push
outs
add
mov
loope
call
arpl
adc
or
bound
add
inc
dec
dec
push
aam
xchg
es
loop
push
push
movs
xchg
fstp
jb
pop
or
xchg
mov
mov
xor
sub
or
and
ret
stos
rcr
(bad)
sar
and
or
fld
test
push
add
mov
call
int
dec
in
aas
jecxz
scas
hlt
clc
and
or
cmp
adc
scas
or
mov
cdq
jl
stos
add
xchg
and
sbb
and
push
outs
ss
cli
ret
sbb
or
ja
scas
(bad)
jmp
push
repz
dec
cwde
adc
cmp
xor
mov
or
adc
mov
scas
mov
cmc
shl
data16
and
sub
scas
xor
retf
dec
push
fsub
ret
mov
cmp
clc
push
push
pop
stos
adc
dec
ja
mov
(bad)
pop
xor
pop
das
adc
test
dec
push
push
push
jnp
pushf
into
xchg
repnz
test
(bad)
stos
repz
dec
mov
nop
cmp
and
xchg
inc
aaa
pop
mov
dec
push
jnp
or
shr
push
repz
scas
cmp
dec
rol
jg
jnp
cmp
ss
dec
(bad)
jne
sub
retf
imul
or
lock
loopne
jecxz
inc
jmp
mov
jmp
sahf
xrelease
fdiv
sbb
or
pop
mov
xor
shl
call
ret
xor
jecxz
shr
inc
sbb
fbstp
rcr
dec
stos
ficomp
mov
cmp
scas
ret
cwde
dec
aaa
sub
sti
sub
sbb
xor
mov
dec
inc
std
adc
aaa
ret
push
dec
add
cmp
daa
sbb
xor
add
mov
fwait
jne
gs
es
xchg
jp
jecxz
push
cmps
inc
xchg
fist
cmc
adc
ss
aas
pop
mov
outs
sbb
jecxz
fwait
repz
repz
sub
push
(bad)
pop
out
jp
outs
push
inc
adc
out
cwde
sub
test
inc
test
rcl
pop
push
adc
mov
add
js
and
dec
pop
mov
cld
or
mov
mov
push
jl
cmp
out
lock
xchg
inc
xor
cmps
imul
xchg
stc
hlt
or
mov
inc
xchg
es
icebp
aam
aas
sub
dec
imul
scas
mov
cmps
cld
dec
int3
int3
popa
jbe
out
pop
jae
arpl
out
imul
aad
es
sub
push
fisubr
data16
sub
sbb
clc
and
mov
inc
fs
rol
loop
nop
ret
sbb
sbb
add
int
hlt
ja
mov
lods
aas
cdq
mov
gs
pop
iret
dec
ins
sub
imul
jae
mov
stos
jecxz
mov
cdq
lods
retf
mov
sbb
xor
or
(bad)
jecxz
cmp
call
arpl
fsubr
cmps
jle
in
inc
repz
xchg
and
xchg
movs
jae
movs
(bad)
xchg
push
jg
test
push
rcr
jg
adc
sub
adc
xchg
cs
ja
jle
pusha
add
fwait
xor
arpl
xchg
mov
(bad)
pushf
xchg
ins
mov
mov
push
js
and
lds
push
outs
inc
or
pop
and
push
lock
por
cmp
cmps
push
xchg
int3
neg
or
mov
aaa
push
push
pop
adc
jmp
mov
inc
shr
in
inc
in
dec
and
xchg
mov
(bad)
and
pop
adc
or
inc
ret
xlat
sbb
pop
data16
xchg
adc
jae
pushf
shr
fidiv
sub
push
cmp
mov
outs
repnz
add
repz
dec
(bad)
out
xchg
adc
cdq
mov
cmps
aaa
push
es
scas
test
imul
jnp
xor
push
mov
out
jo
and
or
lds
hlt
pop
jnp
adc
mov
arpl
(bad)
or
dec
pop
mov
sbb
call
fcom
mov
xor
push
mov
mov
sub
(bad)
mov
popa
and
test
arpl
out
aad
jne
dec
js
push
aas
xchg
jle
lahf
cmp
dec
sbb
dec
scas
sub
pop
into
fwait
ss
xchg
es
cmps
mov
rcr
xchg
stos
pop
mov
int3
in
imul
cmc
dec
dec
cmp
mov
ss
or
push
mov
xor
aad
jae
(bad)
fst
fwait
into
jo
push
push
add
pop
(bad)
out
cdq
mov
sub
hlt
loop
push
retf
and
ret
ss
or
out
mov
mov
aam
(bad)
std
(bad)
sub
xchg
repz
(bad)
fwait
out
(bad)
cmps
fisttp
mov
test
repz
hlt
and
lods
pushf
push
movs
rol
xchg
mov
(bad)
dec
retf
fdivr
in
sub
push
out
cmps
cmp
out
push
ins
pop
fwait
dec
sahf
daa
cmp
cmp
xchg
cmp
jnp
sbb
push
lock
mov
jns
and
jo
fistp
mov
xchg
xchg
push
or
and
inc
or
(bad)
into
dec
jb
jmp
sub
outs
(bad)
popf
sub
xor
test
jl
push
fs
movs
rol
xchg
mov
in
jnp
sbb
arpl
jb
jle
jns
pop
mov
pop
dec
inc
(bad)
sti
sub
retf
pop
ror
aaa
gs
and
(bad)
xlat
imul
retf
pop
pop
sahf
mov
and
nop
cmps
inc
xchg
int3
hlt
sub
sysenter
jnp
push
jg
pop
ja
movs
sar
mov
push
jno
popa
xor
jae
arpl
ins
push
pop
ds
pop
cmp
jmp
jnp
xchg
jecxz
shr
mov
xchg
adc
adc
jae
and
mov
pusha
add
retf
ret
imul
shr
test
jnp
or
xchg
les
loope
adc
xchg
mov
aam
idiv
loopne
push
imul
push
push
mov
aam
fstp
test
xor
out
in
clc
inc
nop
mov
loopne
movs
jnp
stos
std
push
sti
xchg
dec
or
fcmovnb
adc
jl
xlat
cld
leave
jbe
stos
adc
loopne
call
push
add
lods
xchg
dec
xchg
fs
jbe
inc
add
fsubr
ss
cwde
ret
test
pop
pop
mov
test
aad
sahf
jge
or
pop
outs
push
cwde
jnp
inc
mov
push
dec
pop
pop
sub
cmp
(bad)
lock
dec
mov
pop
icebp
cli
sub
add
dec
pop
loop
stos
aad
cmp
mov
enter
push
adc
sbb
push
jno
or
add
call
xchg
mov
sub
cmp
mov
sti
outs
cs
sbb
and
fwait
loopne
mov
test
add
inc
fwait
mov
jecxz
(bad)
inc
or
mov
stos
es
shl
push
outs
dec
mov
outs
and
lds
stos
adc
fucomi
mov
addr16
push
jae
loopne
push
inc
rcl
fstp
jecxz
sahf
data16
out
sub
(bad)
ins
setae
dec
out
pop
add
cli
pop
aam
fdivr
and
xchg
imul
hlt
adc
xor
int
mov
mov
push
dec
aaa
xor
ja
loop
movs
jg
jmp
stos
cmps
pop
adc
and
or
xor
mov
(bad)
into
faddp
pusha
in
pop
cmp
sti
dec
sbb
or
xor
cli
popa
mov
jnp
mov
inc
mov
push
not
jmp
push
adc
mov
scas
jmp
clc
xchg
mov
sub
xchg
sub
repz
adc
xlat
dec
cwde
pop
hlt
dec
mov
jae
arpl
jb
dec
add
pop
ret
xor
pop
mov
sbb
jecxz
daa
xchg
imul
inc
pop
rcr
push
add
mov
jecxz
shr
mov
push
data16
imul
mov
pop
test
adc
xrelease
in
jo
sbb
popaw
dec
mov
cmps
fwait
sbb
sbb
retf
push
pop
call
and
iret
mov
sbb
out
xor
ja
int
je
mov
jb
jecxz
sbb
inc
iret
jbe
test
fisubr
mov
into
and
cmp
add
cwde
mov
loop
adc
adc
push
test
ins
repz
in
inc
lahf
jno
jnp
and
jg
cmp
shl
addr16
pop
mov
addr16
and
push
mov
out
xlat
sahf
ret
fcomp
pusha
imul
in
push
pop
jo
jbe
sbb
dec
retf
mov
bound
and
repz
loop
xchg
loopne
pop
lahf
mov
call
add
mov
mov
add
mov
stos
adc
dec
addr16
and
add
aaa
setbe
sbb
sbb
repnz
adc
adc
add
mov
cwde
bnd
push
pop
jo
or
clc
mov
mov
xlat
mov
outs
pop
add
scas
addr16
mov
jle
dec
push
jns
pop
loopne
fdivr
retf
lds
aam
inc
adc
popf
ins
arpl
push
push
sbb
loopne
and
retf
sbb
cmps
ror
in
cmp
mov
popf
data16
imul
sub
xor
jmp
ror
fdiv
outs
xchg
mov
out
dec
fs
ja
mov
cmp
sbb
inc
cmp
sbb
pop
xor
fidivr
mov
cmp
dec
sub
clc
jg
adc
push
or
xchg
test
repnz
push
fiadd
jno
add
xor
fwait
rcl
pop
jle
fsubr
mov
xchg
ds
imul
xor
add
fisub
lds
add
test
xor
int
xchg
mul
or
push
jmp
push
cmp
jnp
push
and
jae
loopne
sub
mov
sub
xchg
nop
cmp
mov
inc
(bad)
push
into
arpl
jae
add
imul
test
mov
cmp
jnp
dec
out
imul
xchg
adc
out
ret
into
loop
xchg
imul
rcr
dec
jo
mov
jecxz
out
jnp
dec
arpl
cmps
push
cs
push
cli
(bad)
push
pop
mov
mov
jmp
pop
cmp
mov
fmul
call
inc
push
mov
adc
into
enter
in
jp
fnsave
jmp
fsub
jbe
jnp
xchg
leave
cli
cmp
sahf
xlat
sbb
inc
popa
and
pop
dec
mov
xchg
pushf
sar
add
ret
sbb
cwde
mov
es
pop
loop
ror
push
jg
out
pop
mov
sub
test
shl
pop
mov
mov
inc
mov
pushf
call
sub
out
sbb
xchg
imul
xchg
add
inc
repz
pushf
push
pop
cmps
dec
lods
test
test
mov
jns
dec
sbb
push
(bad)
ds
mov
ja
addr16
fwait
outs
neg
sahf
xrelease
adc
push
outs
mov
sub
and
and
mov
dec
cdq
movs
or
dec
outs
push
pop
out
or
or
mov
add
xchg
mov
pop
xchg
push
das
mov
jns
sub
data16
loop
pop
ins
or
mov
mov
mov
xchg
mov
sub
ret
push
jnp
loop
shl
push
cmc
sbb
push
sub
call
xchg
ds
xchg
fsubp
cmp
inc
or
and
int3
hlt
shl
jecxz
es
and
stos
or
icebp
inc
push
add
(bad)
call
aam
in
push
test
push
stos
shl
adc
stos
and
fwait
icebp
fist
lea
sub
inc
jne
jb
lods
xchg
repz
mov
outs
mov
dec
xchg
sti
pop
pusha
or
mov
mov
xchg
aam
fidiv
pop
loop
add
sbb
cmps
imul
into
sub
and
sbb
inc
(bad)
push
out
cmovnp
jecxz
jge
out
push
mov
arpl
out
std
movs
jo
lea
mov
outs
cld
fidiv
(bad)
fsubr
push
rol
push
sti
shl
mov
mov
sub
nop
repz
arpl
clc
mov
out
out
mov
sub
jns
(bad)
(bad)
or
sbb
mov
inc
jg
js
into
inc
scas
ins
mov
(bad)
fmul
mov
mov
mov
outs
jnp
jbe
gs
popa
or
ss
inc
cmp
in
repz
and
ret
mov
repnz
fsubr
loope
popa
loop
and
dec
into
sub
sahf
pusha
dec
arpl
cwde
imul
test
lea
retf
enter
push
mov
sti
sahf
pusha
inc
sahf
sub
adc
test
mov
dec
fadd
or
dec
arpl
(bad)
aaa
adc
mov
retf
fisub
test
inc
imul
(bad)
out
(bad)
dec
push
imul
xchg
sbb
sti
scas
mov
xor
inc
stos
and
jae
sub
sahf
pusha
dec
arpl
(bad)
jae
ror
repz
fsubr
imul
stc
mov
rol
cli
arpl
or
rol
rol
and
xlat
push
cmps
xor
mov
stos
mov
test
sub
jns
ret
xchg
cmp
xchg
adc
inc
lahf
mov
ds
mov
push
sti
push
push
xchg
jno
xchg
push
cmp
(bad)
outs
sbb
dec
inc
push
inc
dec
jnp
mov
pop
retf
pusha
cli
enter
jecxz
je
push
sub
dec
pushf
sub
repnz
cwde
pop
ror
xchg
push
inc
(bad)
punpcklwd
fs
inc
xchg
mov
mov
(bad)
adc
and
mov
cwde
xlat
dec
and
jle
movs
(bad)
pop
pushf
addr16
stos
imul
inc
pop
pop
xlat
or
(bad)
retf
scas
mov
ds
idiv
and
inc
jg
shl
scas
arpl
icebp
add
test
sub
pop
out
fild
pop
fistp
outs
push
push
sub
(bad)
jae
enter
cmp
arpl
adc
sbb
fidivr
call
push
cmp
je
cmp
movs
xor
xor
or
outs
(bad)
fs
movs
fwait
mov
mov
in
mov
aam
daa
cmp
push
xlat
push
fisub
ds
push
mov
or
jne
or
pop
jecxz
adc
dec
dec
ror
les
jle
jae
popf
pushf
repz
arpl
mov
jg
push
test
cdq
retf
shr
push
push
mov
imul
and
xchg
pop
daa
mov
fwait
push
ret
and
(bad)
jmp
outs
mov
scas
jnp
add
xor
into
shr
push
fild
cmps
push
call
arpl
jno
cmp
rol
je
ss
stos
push
in
call
ret
mov
push
pop
mov
dec
jnp
sub
pop
(bad)
sub
jns
jb
nop
jo
retw
cmp
cmps
cmp
sub
xor
push
not
add
push
pushf
mov
mov
mov
fidiv
xchg
js
mov
test
(bad)
clc
push
loopne
clc
out
jnp
xchg
lods
pop
pop
ret
scas
clc
jnp
leave
xor
(bad)
mov
dec
mov
push
outs
fndisi(8087
stos
dec
mov
sahf
dec
iret
pop
xor
sub
inc
arpl
xor
sub
mov
cdq
repz
jecxz
adc
add
iret
jo
scas
sbb
ficom
dec
and
scas
retf
fwait
addr16
inc
call
xor
add
sub
cmps
loope
pop
add
cmp
xor
jns
sub
lds
hlt
sti
push
jle
adc
inc
out
(bad)
cld
rcr
push
out
daa
out
adc
sbb
scas
(bad)
clc
sub
ss
xchg
jae
es
shr
adc
jns
mov
mov
and
xor
out
ss
sar
or
daa
bound
cli
shr
repz
xrelease
sbb
les
loopne
or
sub
rcr
jmp
and
aaa
jecxz
adc
add
jo
and
sub
mov
mov
jnp
dec
mov
sahf
mov
stos
inc
inc
sub
outs
mov
fstp
jmp
pop
call
jb
(bad)
and
add
sbb
xlat
push
in
fsub
call
ret
pop
cmp
call
jb
pop
xor
and
xchg
mov
icebp
jmp
into
sti
shl
nop
lods
std
adc
gs
jnp
cmps
dec
pop
call
(bad)
mov
cmps
add
push
xchg
in
sub
sbb
cmp
imul
mov
cmp
out
or
jae
and
mov
mov
push
and
ins
jo
inc
ret
jnp
or
test
cmp
adc
xchg
adc
call
adc
rcr
cmps
mov
bound
or
mov
xlat
call
fsubr
pusha
add
fimul
lea
mul
sub
rol
cmp
adc
or
cmp
loopne
xchg
das
lea
xchg
cmps
test
add
mov
in
mov
mov
xchg
sbb
and
out
cmp
inc
and
iret
mov
and
fisubr
xchg
mov
imul
pop
or
and
fwait
mov
sbb
hlt
retf
mov
and
pop
data16
out
sub
mov
xchg
loop
pop
push
sbb
scas
jle
mov
push
jecxz
push
ror
jb
cli
stos
xchg
out
ret
sahf
adc
and
push
fcmovne
jecxz
fidivr
mov
xchg
cmps
pop
data16
out
push
mov
cdq
sti
iret
and
pop
in
inc
out
pop
outs
cmp
loopne
or
pop
and
sti
push
shl
add
add
ror
aas
jle
imul
sub
lahf
sbb
mov
jge
and
ds
inc
cmp
or
xlat
js
out
hlt
ret
jae
out
or
xor
inc
pop
mov
test
mov
sub
add
loop
movs
fcomp
push
pop
data16
pop
add
js
adc
adc
or
push
int
xlat
or
inc
push
and
rol
(bad)
stos
jae
pusha
dec
push
movs
or
inc
cmp
ficom
aaa
mov
mov
inc
out
mov
jo
hlt
mov
sahf
(bad)
and
dec
and
ins
inc
or
push
nop
xchg
dec
out
in
sbb
mov
shl
push
push
jno
fadd
scas
mov
mov
mov
fcmovb
dec
in
retf
sbb
dec
fcomip
xchg
fs
ds
es
shl
adc
fdivr
iret
cmps
inc
imul
xlat
gs
fisubr
sar
and
add
jecxz
xchg
mov
adc
cmp
or
mov
xor
int
out
into
jmp
cmp
cmp
call
loopne
add
loop
xor
mov
cmps
jecxz
jmp
mov
pop
cmps
mov
bound
and
push
ret
sub
shr
movs
xor
outs
les
fistp
stos
or
ds
xchg
push
or
push
(bad)
xchg
jmp
cs
adc
xor
cwde
call
jae
lods
fs
ss
stos
into
fdecstp
mov
mov
ret
psllq
add
mov
add
sub
enter
repz
pop
jecxz
pop
sti
mov
mov
fiadd
dec
js
sbb
lahf
sub
inc
jg
ja
cli
xchg
sub
scas
repz
scas
(bad)
sti
imul
fisubr
xchg
and
ffreep
jmp
pop
pop
fbstp
mov
in
pop
dec
jae
push
adc
sbb
fsub
retw
push
mov
jmp
jmp
sbb
hlt
dec
mov
ja
xchg
movs
and
ret
mov
repz
cld
nop
cmp
jnp
stos
ss
mov
sub
xchg
push
lods
test
(bad)
frstor
cmp
sub
jae
cdq
(bad)
xchg
dec
sbb
test
cmp
sub
jo
dec
jnp
mov
lock
shr
shl
sti
mov
xchg
in
inc
ret
or
push
mov
xor
inc
jl
inc
mov
por
jns
xlat
xchg
cwde
mov
imul
xchg
or
sar
adc
les
and
push
stos
enter
and
sbb
mov
cdq
repz
les
jmp
in
inc
lock
movs
jae
es
outs
push
(bad)
out
popa
adc
mov
jbe
arpl
outs
cmps
fild
call
sbb
push
pop
add
data16
in
xchg
jg
jno
loop
add
push
daa
fwait
rcr
pop
sahf
jg
pop
jmp
fstp
(bad)
pop
cmp
sub
stos
cmp
clc
dec
mov
mov
cmp
stos
add
mov
jmp
inc
mov
js
push
mov
pop
mov
mov
(bad)
mov
mov
and
call
xchg
mov
xchg
shl
shr
mov
push
js
or
ret
mov
xor
lock
push
xchg
sbb
inc
addr16
fdivp
das
or
out
pop
add
pop
stos
stos
push
add
mov
cmp
out
adc
(bad)
xchg
or
or
jo
sar
imul
retf
imul
test
mov
mov
jnp
sub
pop
(bad)
mov
inc
push
push
jle
mov
cs
dec
mov
out
cmps
jbe
es
popa
sub
adc
ss
gs
fwait
mov
(bad)
jo
in
xlat
xor
and
xor
popa
ss
mov
jge
jmp
mov
adc
in
inc
mov
popa
and
jnp
adc
and
repz
sub
jb
idiv
orps
xchg
sbb
js
sar
jl
retf
scas
push
dec
dec
cwde
jmp
adc
sub
push
retf
outs
std
fs
push
mov
mov
pop
mov
xchg
sub
jle
loopne
pop
mov
loop
scas
xchg
ret
dec
xchg
push
data16
adc
pop
sbb
loopne
inc
push
push
ds
push
neg
xlat
jecxz
loopne
(bad)
sbb
nop
jb
fiadd
test
push
sbb
arpl
ins
jae
add
(bad)
push
pop
xchg
pop
pop
inc
push
dec
call
mov
xchg
or
loopne
or
jbe
imul
push
adc
aas
aas
pop
mov
cmp
lods
(bad)
jmp
xchg
sti
and
outs
mov
sbb
data16
in
clc
sar
(bad)
out
jbe
sub
or
pop
cmps
ret
xchg
jns
sar
ins
shl
mov
dec
repz
in
hlt
ss
xchg
push
push
sti
xor
jbe
ret
inc
push
fs
(bad)
out
xchg
mov
and
out
arpl
(bad)
out
jl
jb
out
das
adc
xor
xlat
push
push
mov
xor
fidiv
and
dec
fisub
fisttp
sbb
in
sub
int
iret
lea
sub
inc
xchg
inc
(bad)
imul
pop
cmp
(bad)
cmp
xchg
mov
push
dec
pop
bnd
scas
cmps
push
xor
not
xor
cmp
es
sbb
and
and
mov
(bad)
sti
bound
into
mov
idiv
push
dec
nop
xor
test
add
pop
shl
push
(bad)
in
xlat
push
pop
mov
sub
adc
ficom
push
int3
vmovapd
test
jae
pop
in
pop
inc
push
ja
mov
pop
dec
mov
in
inc
rcr
or
lods
test
(bad)
clc
mov
xchg
adc
add
add
scas
(bad)
mov
aam
inc
pop
or
repnz
mov
cs
cs
js
fiadd
mov
idiv
or
aam
and
and
add
jae
pop
mov
jo
je
adc
sahf
mov
pop
push
loopne
int3
push
fdivr
add
mov
xor
stos
mov
dec
dec
aam
shr
(bad)
mov
imul
or
or
fisttp
fisttp
cmp
or
sbb
adc
aad
repnz
addr16
xor
cwde
outs
mov
sbb
inc
jecxz
in
jnp
sbb
mov
pop
loopne
jmp
(bad)
and
call
sub
mov
shr
adc
dec
cmps
test
add
jo
cmp
pop
or
sub
cmps
pop
xor
scas
icebp
call
xchg
adc
adc
adc
adc
ror
daa
cld
repz
test
fsubr
mov
fwait
mov
ins
mov
mov
out
aaa
push
in
inc
dec
xor
daa
mov
mov
xchg
mov
ficom
adc
dec
or
jecxz
cwde
adc
push
mov
pop
ds
xor
test
call
jmp
popa
jnp
imul
inc
sbb
pop
sub
repz
shr
inc
aas
jle
nop
inc
adc
xor
repnz
icebp
(bad)
mov
(bad)
ret
fdiv
or
sbb
and
xor
(bad)
cmp
push
ja
and
cmps
push
xchg
push
pop
jae
loopne
xchg
or
jmp
sbb
jecxz
loopne
mov
test
stos
retf
fisub
xchg
mov
bound
repz
out
loop
jno
popaw
test
dec
push
loop
adc
jb
lods
cmp
icebp
inc
scas
cmp
mov
cmp
pushf
jmp
sti
pop
mov
xor
pop
in
fwait
ror
sub
imul
pop
push
pushf
xor
loope
cmp
mov
ret
pop
xor
and
imul
or
fdiv
push
jmp
xchg
jecxz
fxch
or
jae
ss
arpl
mov
shl
out
out
fld
jo
sub
mov
push
sbb
xchg
jnp
rol
ss
push
jl
fwait
pop
and
enter
adc
cmp
mov
xchg
enter
push
push
mov
enter
dec
cwde
ror
and
dec
stos
clc
mov
mov
mov
(bad)
push
pusha
push
idiv
push
dec
nop
xor
test
ins
test
cmc
lahf
not
ret
jl
jb
retf
sti
inc
jmp
(bad)
xchg
ins
inc
jmp
mov
dec
or
jl
and
cs
rcl
call
sub
div
jecxz
cmp
aas
call
and
sub
xchg
repz
les
mov
mov
fwait
scas
movs
mov
cs
pop
push
pop
mov
(bad)
mov
fdiv
fcom
xor
sahf
push
adc
push
pop
dec
mov
ja
gs
mov
test
jno
hlt
and
fld
movs
(bad)
dec
out
fwait
add
mov
fpatan
fwait
out
mov
pop
jbe
fistp
jae
imul
push
fadd
and
arpl
mov
repz
les
ret
or
lods
mov
pop
arpl
outs
push
fwait
mov
or
loope
inc
es
sbb
aas
and
lods
add
repz
mov
rcr
pop
sub
cmp
cmp
xchg
mov
imul
(bad)
mov
call
jmp
scas
test
sub
mov
es
jecxz
loope
pop
adc
shl
cld
imul
push
sub
dec
adc
inc
xor
xchg
repz
jecxz
jns
dec
in
or
mov
dec
pushf
xor
into
(bad)
mov
js
jecxz
nop
mov
and
inc
sbb
xor
add
arpl
jmp
mov
inc
lds
xchg
cmp
and
sbb
repz
mov
mov
mov
mov
xor
and
lods
lods
mov
enter
sbb
fwait
jo
out
(bad)
scas
dec
xor
out
mov
cmps
add
dec
test
movs
mov
scas
stos
fs
inc
mov
repz
pop
cmp
jmp
or
xchg
inc
movs
add
mov
mov
xor
mov
or
jns
imul
hlt
push
adc
adc
rcl
xchg
mov
sub
ret
and
aaa
jmp
add
jae
js
sub
arpl
xchg
push
or
xchg
lahf
dec
pop
js
jecxz
sti
mov
popa
fwait
and
push
add
xchg
push
add
shr
mov
add
dec
popf
xchg
call
jmp
lahf
out
cmp
xor
iret
adc
add
gs
mov
add
push
imul
mov
fcmovnbe
add
stc
adc
add
mov
xchg
arpl
mov
pop
xchg
adc
test
in
push
jmp
push
lods
inc
mov
pop
mov
inc
mov
cs
sar
sahf
and
adc
test
adc
sbb
mov
in
movs
enter
shr
mov
adc
jg
jnp
cmp
xor
scas
jl
dec
mov
pop
shl
dec
and
xor
cli
adc
icebp
int
and
test
rcr
(bad)
test
cdq
retf
mov
sbb
imul
hlt
push
adc
imul
movs
arpl
mov
out
into
(bad)
sti
and
cmp
sub
jecxz
jecxz
push
repz
xchg
sbb
shr
fs
sbb
jbe
jmp
xor
jecxz
push
mov
jae
or
and
inc
push
inc
mov
inc
jbe
pop
and
adc
loop
xor
shr
fwait
dec
dec
dec
sti
cmp
mov
sbb
hlt
jnp
fadd
mov
dec
mov
sub
repz
cld
out
retf
dec
fist
push
xchg
out
cmp
out
xchg
dec
(bad)
retf
mov
push
cli
add
push
xchg
into
xchg
scas
dec
xchg
mov
ins
lods
fidivr
ja
not
jmp
push
adc
mov
scas
jmp
clc
xchg
mov
sub
xchg
sub
repz
lods
xlat
dec
cwde
pop
hlt
dec
mov
jae
arpl
jb
dec
add
pop
ret
xor
pop
jecxz
lods
in
sbb
addr16
test
or
mov
inc
fs
sbb
nop
sub
stc
loop
add
and
enter
or
mov
lods
mul
sbb
sahf
sub
xchg
clc
push
imul
and
xor
sahf
repz
cs
sub
ficomp
fdivr
imul
fwait
mov
xor
mov
add
ret
aad
dec
retf
mov
call
jae
xchg
xor
adc
push
push
ret
aaa
jmp
and
imul
cmp
call
outs
xchg
adc
stos
xchg
mov
bound
and
xchg
xchg
into
pop
ss
xor
aad
jg
mov
inc
daa
push
add
fcomi
fild
adc
inc
out
shl
js
adc
and
mov
mov
sbb
fisub
adc
sbb
retf
das
imul
or
sahf
shl
cmps
and
sub
rol
xlat
push
retf
iret
cmp
loopne
push
mov
cmps
xchg
and
(bad)
dec
pusha
loope
ffree
pusha
xchg
sbb
pop
(bad)
bound
shl
or
test
imul
push
mov
mov
mov
mov
push
xor
push
fdivr
outs
stos
ja
jnp
shl
jl
jp
sub
xchg
cmp
repz
addr16
pop
mov
jg
shl
js
out
(bad)
std
xchg
or
jge
push
icebp
mov
sbb
lods
push
outs
movs
cmp
inc
stos
add
sub
lahf
cmp
add
xor
jnp
stos
inc
cli
arpl
jl
icebp
cld
out
jo
jmp
push
xchg
retf
scas
mov
jmp
xchg
loopne
call
jl
xchg
or
sub
dec
fistp
arpl
adc
repnz
retf
test
inc
push
mov
push
or
sub
mov
jb
and
punpckhwd
sbb
or
adc
into
call
outs
pushf
pop
fisub
sbb
dec
ret
fisubr
xor
jbe
and
mov
imul
xor
add
stos
into
fs
scas
and
repz
pop
shl
loop
xor
xchg
sahf
adc
fs
mov
xchg
dec
xor
out
cmps
add
arpl
imul
imul
shl
inc
sti
dec
mov
jecxz
and
pop
jmp
mov
sub
ja
cld
out
mov
adc
pop
or
sbb
push
jmp
mov
dec
add
sti
xchg
leave
out
jo
jmp
push
xchg
retf
scas
sub
add
xchg
xchg
into
call
push
cmp
bound
jmp
push
fwait
or
adc
fdivr
stos
mov
neg
sub
sub
js
and
movs
hlt
push
xor
pop
push
mov
sahf
ins
stos
jl
dec
push
pop
push
cmp
and
xor
les
aam
sbb
div
imul
adc
jecxz
cmp
bound
mov
cmp
mov
and
jmp
and
(bad)
arpl
push
ret
jl
mov
bound
or
sbb
pop
cmps
add
push
retf
xor
pushf
stc
push
ret
adc
dec
retf
sti
sahf
cmps
dec
(bad)
sub
jle
scas
jnp
mov
pushf
ss
mov
(bad)
sti
jmp
arpl
jecxz
sahf
sub
pop
mov
(bad)
jae
mov
repz
(bad)
pop
mov
push
mov
pop
inc
mul
scas
sub
cmps
xor
fild
or
jb
pop
fwait
shl
sbb
shl
dec
mov
retf
mov
jp
retf
inc
and
mov
mov
arpl
jecxz
cwde
dec
ret
imul
jmp
and
lahf
cs
inc
jecxz
icebp
(bad)
cs
cmp
jecxz
rol
dec
xchg
xor
pop
sbb
xlat
xchg
push
adc
(bad)
out
mov
cmps
mov
pop
dec
push
jle
scas
jnp
xchg
mov
ret
cli
loop
je
add
mov
push
push
jle
outs
ss
es
cmps
mov
arpl
ins
inc
dec
jecxz
repz
mov
inc
lahf
int3
xchg
pushf
push
es
push
ds
neg
movs
mov
or
movs
pushf
cmp
rcl
mov
bnd
sbb
mov
ja
fwait
jae
int3
(bad)
cs
mov
aam
(bad)
inc
outs
ss
into
pop
mov
out
ror
cmp
jns
aam
jnp
xchg
test
mov
inc
adc
dec
sbb
adc
cdq
or
dec
cld
push
mov
sbb
repz
push
gs
sti
pop
add
adc
and
in
cmps
jo
and
xchg
or
cmp
pop
loope
mov
shr
cmps
arpl
mov
sub
rol
push
ror
cmp
mov
scas
mov
jmp
xchg
loopne
call
jecxz
cmp
mov
stos
sub
xchg
int
dec
adc
lea
inc
push
(bad)
in
sti
cmp
sub
cli
jae
cld
sbb
retf
imul
or
dec
dec
cmp
mov
push
jmp
push
dec
mov
imul
push
jecxz
mov
mov
sub
sahf
cmps
mov
push
out
pop
xor
jl
xchg
je
daa
pop
sbb
mov
fisttp
sbb
and
mov
enter
pushf
(bad)
push
cdq
adc
push
outs
cli
in
cmps
ret
(bad)
fadd
push
stos
mov
add
out
jo
dec
mov
adc
fcmovnbe
cmp
push
jecxz
es
shl
test
push
mov
mov
fxch
(bad)
cs
xchg
mov
xchg
dec
jmp
es
push
cmp
imul
add
and
(bad)
dec
es
xor
inc
adc
add
ds
mov
sub
xchg
mov
sub
jle
fcom
es
movs
sbb
arpl
adc
or
aam
jae
pop
ss
xlat
pop
cs
push
out
sbb
jmp
cmp
or
jmp
or
push
out
sbb
out
fwait
icebp
dec
ret
fisubr
retf
pop
mov
in
mov
xchg
xor
jp
sub
add
fwait
jb
loopne
pop
in
push
repz
pop
data16
repz
scas
jnp
or
xor
stos
push
data16
ret
dec
not
sahf
ja
jae
stos
aam
fidivr
mov
call
imul
cmp
retf
scas
sub
add
arpl
ret
lods
add
iret
(bad)
sahf
jp
push
push
sti
dec
push
ret
add
mov
pop
repz
jecxz
stos
aam
fimul
out
sbb
push
out
jb
xchg
test
cmp
add
jnp
int3
ss
cld
dec
mov
push
sti
into
pop
ret
(bad)
pop
or
test
arpl
mov
cmps
(bad)
sahf
mov
es
pop
xor
fs
pop
mov
fist
jns
data16
jno
scas
ss
out
stos
xlat
ds
dec
inc
push
retf
cmps
cmps
leave
pop
das
xchg
adc
cdq
or
mov
push
mov
dec
pop
lods
repz
call
shl
sbb
stos
sbb
jae
mov
xchg
jnp
sar
push
and
add
mov
xrelease
push
aam
pop
int3
out
popa
test
sub
push
stos
rcr
mov
push
cld
ret
outs
cmp
cld
xchg
repnz
scas
mov
pop
dec
cs
adc
dec
fs
dec
jp
and
mov
stos
adc
shr
mov
out
fs
jnp
and
or
mov
jle
cmps
xchg
inc
cmps
mov
mov
dec
jecxz
sti
adc
mov
(bad)
jmp
in
inc
es
inc
mul
jmp
sub
repz
rcl
push
cs
cmps
dec
(bad)
and
mov
jnp
pushf
shl
jl
icebp
je
sub
and
pop
mov
nop
sub
jle
and
jns
inc
inc
xor
push
fwait
jae
pusha
cmp
xchg
jae
add
xor
je
sar
fisub
and
loopne
pop
jmp
mov
xchg
lods
inc
es
jle
and
cmp
push
inc
ins
mov
cmp
into
cmp
mov
mov
in
xchg
dec
mov
xchg
imul
jl
fild
sbb
cmps
jnp
hlt
stos
mov
imul
test
mov
into
push
mov
pop
arpl
or
ss
jae
jmp
not
xor
mov
neg
stos
cmp
mov
sbb
into
cmp
jle
mov
in
sub
push
lock
mov
mov
and
cmp
jmp
xchg
jle
mov
fistp
fcom
push
es
movs
sbb
add
(bad)
mov
xchg
not
xchg
jle
mov
push
int3
cld
outs
test
arpl
(bad)
das
push
jg
mov
mov
xor
pop
ss
ds
or
lods
repz
fistp
out
push
mov
loope
cmp
push
push
ss
jae
fwait
outs
not
xor
mov
ja
stos
into
and
mov
adc
xor
sub
sbb
xchg
mov
mov
into
and
mov
adc
(bad)
aas
nop
or
scas
jmp
xchg
sub
repz
lds
(bad)
pop
pop
scas
outs
mov
jg
les
add
loop
mov
mov
push
das
(bad)
cs
pusha
adc
push
xrelease
rcr
cld
jae
inc
fwait
test
imul
mov
and
push
stos
rcr
pop
mov
mov
mov
or
xlat
sub
dec
add
(bad)
or
sahf
retw
cdq
xor
add
int3
cld
outs
ss
loope
jae
int3
mov
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
and
add
bound
push
jp
mov
mov
repz
mov
mov
and
xor
jns
dec
add
repnz
(bad)
fcomip
mov
mov
repz
push
jg
outs
aaa
pop
daa
movhps
pop
das
neg
out
(bad)
inc
out
sti
jmp
cmc
in
vpmullw
es
ss
ds
dec
addr16
ja
inc
jg
mov
mov
ret
fcomi
retf
jecxz
jg
add
xor
and
cmp
pop
mov
jbe
mov
mov
fistp
jl
sub
or
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
inc
fwait
xchg
scas
mov
sti
xlat
jmp
fcomi
iret
out
pop
das
pop
pop
aaa
(bad)
jg
outs
inc
pop
ja
jge
mov
out
int
xchg
in
lock
jo
jnp
dec
pusha
addr16
or
das
aaa
sub
push
(bad)
(bad)
xchg
fwait
cmps
mov
and
xor
les
add
or
mov
imul
cmp
xchg
test
test
retf
sub
adc
add
ins
or
mov
imul
and
ror
ret
fstp
stos
jecxz
fldcw
add
xor
call
pop
jae
arpl
js
mov
xor
sub
adc
add
call
jnp
imul
dec
scas
xor
inc
mov
pop
repz
jecxz
adc
(bad)
sbb
(bad)
and
imul
dec
arpl
stos
sbb
es
fcomi
retf
jecxz
sahf
sub
aad
or
jnp
movs
int
jae
arpl
jge
mov
fcomi
xor
cmp
cs
sbb
hlt
and
imul
dec
lods
mov
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
mov
mov
xchg
push
sbb
jmp
fcomi
retf
jecxz
ret
in
or
jnp
imul
call
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
pushf
mov
mov
mov
fcomi
into
xor
adc
add
xor
and
imul
dec
arpl
dec
mov
rcl
or
retf
sbb
adc
add
xor
and
imul
mov
outs
xchg
stos
jl
mov
mov
fcomi
push
jecxz
in
sub
sbb
or
jnp
imul
dec
pushf
mov
mov
mov
fisttp
jecxz
lds
add
xor
and
outs
xchg
pop
jae
arpl
mov
pop
inc
sbb
cmp
sub
sbb
fsub
jnp
imul
dec
pushf
mov
dec
mov
adc
or
retf
sbb
adc
add
xor
and
mov
pop
mov
mov
dec
mov
fisttp
jecxz
adc
add
xor
and
imul
xchg
push
sbb
jmp
fcomi
retf
jecxz
adc
fld
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
pushf
mov
mov
mov
fcomi
pop
jecxz
in
sub
sbb
xlat
and
imul
xchg
arpl
mov
cmps
daa
shr
cmp
repz
jecxz
adc
add
xor
and
mov
movs
jae
arpl
outs
mov
jmp
and
into
cmp
push
in
aad
test
mov
mov
mov
jge
rcl
and
retf
jecxz
int3
sub
sbb
push
cld
movs
push
xchg
inc
pop
mov
mov
mov
cmps
and
jmp
fcomi
xor
cmp
sub
sbb
or
jle
mov
jae
pushf
mov
mov
mov
mov
retf
jecxz
adc
add
ss
jae
arpl
push
mov
and
sub
cmp
cs
xor
es
push
imul
stos
xchg
mov
jmp
fcomi
retf
out
adc
cld
push
ror
and
dec
cmp
mov
jmp
and
das
jecxz
in
cs
xor
es
push
imul
stos
sbb
(bad)
fisttp
jecxz
imul
add
xor
es
push
imul
stos
jl
push
mov
ficom
int
sbb
or
jle
imul
lods
arpl
push
mov
fisttp
add
adc
add
xor
fdivr
imul
dec
test
push
mov
fcomi
xor
cmp
cs
xor
and
imul
dec
arpl
mov
cmps
adc
jmp
ficomp
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
es
push
imul
stos
sbb
jmp
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
sbb
out
sub
repz
cmp
sub
sbb
push
iret
jnp
xchg
inc
pop
jae
arpl
mov
dec
sti
rcl
fcomi
es
in
sub
sbb
or
jnp
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
and
cmp
sub
sbb
or
jnp
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
dec
mov
and
retf
jecxz
adc
push
jmp
mov
dec
dec
xchg
stos
jl
mov
mov
fiadd
retf
jecxz
adc
add
xor
and
cwde
inc
pop
mov
mov
mov
push
sti
rcl
fcomi
retf
jecxz
adc
add
xor
and
outs
mov
jae
arpl
mov
mov
fcomi
retf
jecxz
adc
push
out
xor
fdivr
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
cmc
sbb
hlt
and
imul
dec
dec
xchg
stos
jl
inc
mov
fiadd
jecxz
in
cs
sbb
hlt
and
imul
dec
pushf
inc
xchg
pop
sbb
adc
sub
retf
sbb
adc
push
jecxz
or
jnp
xchg
inc
pop
mov
fs
pop
sti
rcl
fimul
retf
jecxz
in
cs
sbb
hlt
adc
pop
jae
arpl
mov
mov
fcomi
xor
cmp
cs
sbb
hlt
adc
arpl
sbb
jmp
fimul
retf
jecxz
adc
add
xor
and
imul
mov
inc
xchg
stos
jl
dec
mov
rcl
and
retf
sbb
adc
add
iret
or
test
inc
pop
mov
mov
mov
cmps
pop
shr
cmp
push
retf
jecxz
adc
push
out
or
jle
imul
mov
mov
mov
pop
sti
shr
ret
fcomi
xor
std
sbb
hlt
fadd
mov
mov
mov
pop
sti
shr
ret
std
repz
cmp
aam
sbb
or
jnp
imul
dec
inc
xchg
stos
jl
dec
mov
fisttp
jecxz
adc
add
xor
es
imul
push
sbb
jmp
fcomi
retf
loop
adc
add
xor
fdivr
imul
push
sbb
jmp
push
sub
sbb
or
jnp
imul
dec
mov
jl
mov
mov
fcomi
retf
jecxz
adc
push
sbb
or
jnp
imul
dec
arpl
mov
mov
fcomi
iret
jecxz
in
sub
push
aaa
or
test
inc
pop
jae
mov
jl
mov
mov
fdivp
retf
jecxz
adc
add
xor
and
imul
dec
pushf
mov
mov
mov
fcomi
int
cmp
cs
jge
imul
lods
sbb
adc
(bad)
retf
sbb
adc
add
imul
jnp
outs
inc
pop
jae
arpl
mov
mov
fcomi
into
jmp
adc
push
adc
or
jnp
arpl
mov
mov
mov
stos
sti
rcl
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
push
adc
or
jle
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
or
xor
and
pusha
inc
pop
mov
mov
mov
mov
fcomi
retf
jecxz
adc
add
ss
and
outs
dec
pop
jae
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
cs
xchg
inc
push
jae
pushf
mov
mov
mov
fcomi
retf
jecxz
adc
add
xor
es
imul
stos
sbb
in
fcomi
(bad)
in
cmp
sub
sbb
or
jnp
imul
dec
arpl
mov
in
fisttp
jecxz
adc
add
xor
xor
xchg
inc
pop
jae
arpl
mov
mov
rcl
fsubp
retf
jecxz
adc
adc
xor
and
imul
dec
jb
xchg
push
sbb
jmp
fsubp
retf
jecxz
adc
adc
xor
and
jns
pop
mov
sahf
mov
stc
ret
fisttp
lock
aam
or
or
jle
imul
pop
arpl
mov
jmp
fcomi
(bad)
cmp
sub
rdpmc
or
jnp
jg
pop
mov
scas
xchg
stos
jl
mov
mov
fcomi
xor
cmp
add
int3
or
jle
imul
dec
data16
xchg
stos
jl
mov
mov
fsubp
retf
jecxz
adc
adc
ins
push
imul
stos
xchg
(bad)
std
ret
fisttp
out
adc
cld
sbb
sbb
jnp
imul
dec
pushf
mov
mov
mov
rcl
fsubrp
retf
jecxz
in
sbb
xor
fdivr
imul
dec
arpl
mov
mov
fisttp
jecxz
adc
sbb
xor
and
imul
dec
jp
xchg
push
sbb
jmp
ret
sbb
adc
add
xor
and
jno
pop
mov
mov
mov
mov
fcomi
xor
cmp
sub
sbb
push
cmp
xchg
inc
pop
jae
arpl
mov
mov
fisttp
(bad)
cmp
aam
pop
xor
fdivr
imul
dec
arpl
mov
mov
fcomi
xor
cmp
sub
push
or
test
inc
pop
jae
arpl
dec
mov
(bad)
repz
sbb
or
adc
pop
pop
jae
pushf
mov
mov
pop
sti
shr
ret
fcomi
retf
jecxz
or
add
ss
jnp
outs
pop
pop
jae
arpl
mov
mov
(bad)
repz
sbb
xor
add
xor
and
imul
dec
arpl
xchg
mov
fisttp
sbb
adc
push
cmp
or
jle
imul
push
mov
mov
mov
fcomi
jmp
and
xor
es
push
imul
mov
sti
rcl
stc
repz
sbb
push
or
sbb
or
jnp
imul
dec
pushf
mov
mov
mov
fcomi
xor
pop
adc
cld
push
pop
or
test
inc
pop
mov
mov
xchg
mov
fisttp
(bad)
cmp
aam
xor
fdivr
imul
outs
arpl
mov
pop
add
out
out
repz
sbb
xor
and
dec
inc
pop
mov
mov
mov
pop
sti
rcl
(bad)
retf
jecxz
in
sub
sbb
or
pop
push
imul
stos
and
sti
sub
in
repz
adc
sub
push
sbb
and
dec
dec
mov
mov
mov
fcomi
xor
cmp
add
and
jnp
outs
push
jae
xchg
xchg
stos
jl
call
fcomi
xor
adc
sub
push
sbb
and
dec
dec
mov
mov
pop
add
jmp
and
retf
jecxz
cmp
add
xor
or
xchg
inc
pop
pop
dec
arpl
sbb
mov
adc
hlt
jmp
or
or
sub
sbb
and
jae
push
mov
xchg
retf
icebp
jmp
and
xor
add
adc
imul
xor
and
lods
xchg
mov
shr
mov
push
outs
inc
and
imul
push
push
cmp
sub
fsub
iret
xlat
inc
out
mov
cmps
(bad)
xchg
mov
dec
push
js
adc
gs
jne
inc
jle
mov
mov
imul
xbegin
xor
xor
push
sbb
sbb
cld
out
mov
hlt
mov
rep
lods
cmp
pusha
jle
push
sub
adc
ret
into
in
jmp
cmps
lahf
cmps
scas
xchg
push
addr16
push
sbb
sbb
or
dec
neg
rol
mov
dec
add
pop
pop
aaa
xor
dec
push
cli
(bad)
cld
iret
aad
out
(bad)
pushf
mov
xchg
mov
inc
inc
jo
inc
jns
sbb
inc
xor
not
loop
(bad)
fcmovne
mov
xchg
push
adc
sbb
sub
and
push
cs
xchg
fiadd
sti
mov
mov
push
push
data16
and
es
jae
push
jmp
(bad)
fmul
sahf
cmps
mov
xchg
pop
ja
xor
and
aaa
jae
arpl
fsubrp
int
mov
stc
jecxz
adc
jne
inc
dec
adc
sub
cmp
lods
ffreep
fdivp
mov
pushf
mov
jno
push
jg
cmp
sub
jg
je
enter
(bad)
aam
mov
mov
add
imul
push
cmp
sub
sti
shr
sar
mov
inc
addr16
dec
and
cmp
or
mov
stc
jecxz
mov
sbb
dec
outs
pop
jae
arpl
pop
jl
add
adc
xchg
iret
sar
stc
jecxz
mov
cdq
test
test
dec
push
jge
pop
add
arpl
and
das
pop
or
cld
int3
in
call
mov
mov
inc
jg
push
xor
aas
psubq
scas
ret
(bad)
hlt
aam
les
mov
ja
pop
dec
jns
and
and
shr
jecxz
mov
sbb
scas
mov
sbb
and
add
cmp
outs
add
(bad)
jmp
rol
sar
sti
jecxz
jp
bound
push
jl
add
ret
fucomip
sti
ror
scas
mov
jne
push
pop
outs
dec
aas
adc
inc
sbb
cmp
lods
ffreep
fdivp
(bad)
jecxz
xchg
mov
in
mov
pop
ins
dec
sbb
adc
pop
add
cmp
out
ret
(bad)
cli
mov
movs
xchg
mov
in
mov
pop
or
push
cmp
sbb
and
ret
fwait
(bad)
stc
jecxz
mov
xchg
cmps
fs
jle
pop
pop
fs
and
sbb
adc
and
mov
jmp
mov
cmps
dec
push
jno
inc
pusha
dec
and
xor
jl
add
daa
test
int3
mov
xchg
in
add
inc
push
push
push
sbb
comiss
or
test
(bad)
neg
xchg
in
mov
fwait
mov
dec
jp
jg
or
or
das
xor
add
sar
xlat
mov
xchg
outs
pop
xor
sub
das
xor
and
repnz
repz
retf
int3
mov
nop
mov
pop
xor
sub
xor
adc
lock
cmp
scas
ret
stos
cmps
cdq
lahf
mov
pop
push
dec
inc
imul
inc
pop
xor
ret
sbb
inc
sahf
mov
mov
cmp
add
or
and
ds
and
imul
sar
retf
jmp
scas
nop
leave
jecxz
addr16
add
jne
and
sbb
pop
push
cmp
int
into
fcomp
add
popa
popa
imul
push
jnp
jnp
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
add
jp
dec
jo
(bad)
cmps
jl
or
sbb
out
sbb
push
gs
xchg
mov
xchg
mov
jbe
js
or
sub
and
(bad)
(bad)
into
out
imul
cmps
lahf
mov
inc
jg
dec
addr16
ja
pop
aas
pop
or
sbb
xlat
iret
out
imul
mov
pop
push
adc
or
sub
cs
xchg
mov
mov
retf
jecxz
jnp
ja
push
arpl
xor
das
jae
sbb
lock
div
jmp
test
retf
adc
je
gs
pop
cmp
aaa
sub
adc
mov
(bad)
sahf
cmps
xchg
mov
pusha
sub
push
jns
push
aas
imul
jae
pop
enter
fwait
mov
mov
mov
retf
jecxz
adc
add
sti
xor
or
inc
pop
jae
pop
aam
les
sti
shr
ret
fcomi
retf
jecxz
popa
sub
sbb
or
jnp
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
lods
into
sti
(bad)
aam
pushf
mov
jge
dec
gs
jne
push
ds
push
es
ss
(bad)
(bad)
(bad)
int
fdivp
scas
test
mov
inc
jle
dec
pusha
pop
jbe
push
cmp
or
vaddsubpd
loopne
lock
mov
jecxz
adc
add
xor
sbb
push
mov
or
xchg
fldln2
fwait
xchg
fmul
(bad)
mov
mov
push
popa
dec
sub
adc
imul
loope
out
fisub
mov
push
adc
jo
pop
jg
(bad)
add
cmp
jmp
out
(bad)
sbb
cmps
xchg
or
jnp
push
and
test
jmp
push
mov
sar
sbb
scas
mov
retf
lea
jp
ins
imul
xor
aas
or
cld
(bad)
iret
xchg
mov
mov
and
pop
fs
push
jo
pop
sub
sub
idiv
mov
pushf
xchg
mov
add
push
popa
dec
add
sub
xor
jecxz
neg
mov
mov
popf
jmp
add
or
sbb
or
jnp
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
xor
ins
imul
pop
mov
adc
hlt
(bad)
jmp
mov
cmps
fist
sub
sbb
or
jnp
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
jge
jno
xor
jne
add
push
ss
(bad)
(bad)
(bad)
into
out
imul
cmps
popf
mov
inc
jg
dec
addr16
ja
pop
aas
adc
and
call
into
in
cmc
scas
cmp
ins
inc
jge
dec
gs
jbe
push
ds
push
es
ss
(bad)
(bad)
(bad)
into
out
cmc
scas
xchg
mov
inc
jg
dec
addr16
ja
add
pop
(bad)
sbb
ror
loopne
lock
jmp
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
push
das
push
mov
(bad)
jmp
xchg
stos
mov
addr16
gs
adc
or
or
sub
adc
test
(bad)
fcmovnbe
jmp
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
xchg
pop
adc
sbb
or
jnp
imul
dec
arpl
loope
retf
mov
retf
jecxz
adc
dec
jb
or
jnp
imul
dec
arpl
mov
mov
fcomi
mov
push
dec
gs
jne
push
ds
push
es
xor
into
out
imul
cmps
lahf
mov
inc
jg
dec
gs
jne
add
adc
in
(bad)
enter
test
cdq
mov
cmp
and
imul
dec
arpl
mov
mov
mov
push
dec
jp
xor
and
pop
es
jae
push
enter
mov
mov
mov
test
sbb
or
imul
jae
or
fmul
lods
fcomi
retf
into
cmp
sub
sbb
and
pop
inc
pop
jae
arpl
xchg
stos
sbb
jmp
fcomi
retf
jecxz
adc
add
pop
or
or
inc
pop
jae
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
(bad)
loop
call
jecxz
adc
push
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
(bad)
jmp
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
xlat
in
(bad)
xchg
push
jmp
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
jbe
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
cmp
sub
sbb
mov
(bad)
push
imul
dec
xor
int
fdivp
scas
xchg
mov
inc
jle
dec
addr16
ja
pop
aas
pop
(bad)
pop
aaa
out
(bad)
call
iret
in
imul
movs
sahf
mov
inc
js
dec
pusha
pop
jo
ins
sbb
xchg
dec
and
faddp
std
aad
in
cmc
scas
xchg
mov
inc
jle
dec
pop
ja
pop
aas
pop
(bad)
pop
aaa
out
(bad)
call
iret
loopne
cmc
scas
xchg
mov
inc
jg
dec
pusha
pop
jo
add
arpl
mov
mov
mov
adc
add
xor
and
push
sub
je
mov
mov
mov
fcomi
retf
jecxz
adc
cmp
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
jl
add
xor
and
imul
and
mov
mov
mov
fcomi
retf
mov
push
cs
push
ss
es
imul
dec
arpl
mov
mov
fcomi
iret
jecxz
pop
sub
pop
xor
daa
jnp
outs
inc
pop
ja
or
xchg
les
xchg
shr
lods
fcomi
movs
jecxz
jl
add
dec
jnp
add
pop
jae
arpl
mov
cmps
dec
xlat
pop
(bad)
ins
div
adc
mov
les
inc
xchg
jae
arpl
or
mov
cmp
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
cmp
int3
and
arpl
test
mov
mov
sub
jle
cmp
dec
fs
arpl
mov
stc
xlat
xchg
out
les
dec
jo
data16
jnp
sbb
dec
xor
and
cmps
cwde
into
(bad)
fidivr
lods
lahf
call
je
ds
inc
ss
ds
jnp
lea
mov
stos
out
cmps
fisttp
sub
pusha
push
aas
adc
mov
xor
cli
mov
or
and
pop
leave
jnp
ss
test
jbe
inc
sub
mov
xor
xchg
or
pop
lods
mov
jns
or
jge
add
push
cwde
sub
xor
idiv
mov
jmp
fcomi
retf
adc
and
js
and
push
jmp
ror
and
xor
add
mov
pusha
pop
jo
inc
js
cmp
mov
and
xor
(bad)
in
(bad)
mov
cmc
push
loope
movs
mov
sbb
push
jl
dec
js
add
jmp
and
xor
cmp
aam
in
or
test
stos
pop
mov
mov
adc
daa
or
sbb
paddq
pop
int3
test
mov
xor
inc
std
add
cmp
adc
sbb
adc
add
xor
and
jae
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
popa
mov
dec
mov
fcomi
retf
jecxz
adc
add
xor
and
push
pop
jae
arpl
mov
mov
fcomi
retf
jecxz
adc
add
int3
or
jnp
push
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
sbb
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
(bad)
stc
mov
mov
mov
push
and
adc
pop
adc
aas
cs
xlat
mov
mov
cmps
mov
bound
inc
pop
and
aas
das
jo
jmp
rcr
mov
retf
jecxz
push
inc
xchg
sbb
dec
push
cmp
xor
add
fs
(bad)
mov
mov
mov
xchg
pusha
inc
inc
sub
push
push
inc
add
in
mov
out
into
pop
mov
ins
imul
or
sub
mov
(bad)
idiv
(bad)
jmp
out
call
je
and
xor
pop
cmp
ffreep
idiv
(bad)
enter
scas
mov
inc
ja
inc
add
pop
push
sub
adc
ins
icebp
shl
loop
cmps
in
enter
movs
push
jbe
ins
pop
outs
dec
sbb
and
aaa
jb
xor
loope
icebp
call
mov
mov
xchg
mov
add
cmp
add
pop
or
hlt
fcmovnbe
stc
mov
out
xchg
cmps
mov
outs
jb
add
inc
bound
aas
pop
pop
aas
aas
and
fdiv
scas
adc
mov
push
addr16
bound
cmp
sbb
dec
xor
pop
sbb
repnz
imul
(bad)
loopne
stc
mov
int3
in
adc
jle
jg
adc
add
fcom
(bad)
mov
loopne
test
lahf
mov
fisub
addr16
adc
jae
or
out
jb
lock
(bad)
fimul
jmp
gs
sub
jne
imul
call
rcl
and
push
push
xor
jge
dec
fs
retf
in
xchg
mov
or
dec
bound
and
cmp
or
cld
into
sti
cmc
retf
mov
(bad)
cmps
jmp
call
outs
xor
pop
cvtpi2ps
adc
or
fsubr
mov
test
pop
sub
je
dec
and
das
adc
xor
repnz
mov
sahf
xchg
ret
enter
sub
dec
pop
addr16
jg
sub
xor
cs
mul
lock
mov
mov
lahf
iret
mov
jbe
and
push
outs
inc
push
aas
add
cmp
and
shl
fcomip
pushf
mov
in
lds
pop
push
mov
cmp
dec
push
jmp
enter
ret
mov
fbld
movd
pop
cmp
gs
and
stc
(bad)
xchg
(bad)
out
ror
call
dec
pop
outs
dec
push
aas
es
adc
aas
cmp
neg
neg
cmps
in
ret
scas
pushf
stos
lds
ins
jbe
and
add
push
dec
pop
push
(bad)
out
(bad)
out
cwde
mov
mov
push
jo
push
pop
addr16
adc
add
or
cmc
fcmovnbe
out
(bad)
in
xchg
sahf
out
stos
mov
bound
inc
outs
and
aas
sub
ss
or
clc
into
out
fwait
out
jmp
mov
ins
and
sub
xor
or
retf
sti
ret
neg
lahf
test
xchg
iret
loopne
jbe
inc
sbb
cmp
inc
movhps
and
fsubr
stos
cwde
xchg
cmp
inc
jno
xor
das
push
cmp
leave
fcmovu
shr
(bad)
call
xchg
mov
mov
push
jne
pop
dec
or
xor
js
adc
out
lock
mov
repz
fimul
xchg
mov
inc
outs
push
or
es
and
cli
out
cli
cmc
fdiv
cmps
xchg
cmps
scas
mov
push
and
and
or
idiv
xor
mov
int
imul
outs
pop
xor
dec
jno
or
cmp
jmp
(bad)
jmp
mov
int
fst
inc
ins
cmp
push
sbb
add
nop
icebp
loop
stos
(bad)
nop
mov
scas
mov
jl
and
bound
cmp
xor
inc
dec
call
fsubr
in
mov
movs
mov
pop
and
push
ds
and
sbb
or
mov
xlat
call
(bad)
pop
addr16
add
push
pop
inc
push
cmp
inc
ds
imul
faddp
repnz
xchg
je
push
cmp
jnp
and
pop
jae
add
(bad)
jmp
in
xchg
xrelease
push
xor
sub
cmp
popa
sub
retf
(bad)
int3
xchg
mov
movs
xchg
jo
xor
(bad)
sub
add
(bad)
cld
(bad)
mov
(bad)
cmps
xchg
mov
jge
data16
aaa
dec
or
push
sub
adc
sbb
cld
(bad)
retf
jmp
retf
std
xchg
outs
pop
cmp
inc
xor
addr16
imul
out
fmul
mov
repnz
stos
mov
pop
mov
retf
pop
sbb
jns
leave
mov
sub
mov
mov
sbb
retf
jecxz
inc
push
jae
xchg
mov
imul
(bad)
xor
push
dec
arpl
loope
and
ret
jmp
cli
and
jns
push
cmp
push
adc
scas
xchg
mov
mov
shl
aaa
dec
xchg
in
fwait
pop
aam
sbb
xlat
mov
sub
loope
push
(bad)
lods
(bad)
sbb
and
fcomi
stos
or
mov
mov
inc
pop
test
adc
adc
xchg
mov
(bad)
mov
inc
xchg
leave
js
xchg
ret
jmp
pop
ins
test
push
jns
leave
fwait
mov
inc
jp
mov
add
retf
inc
push
pop
sub
stos
or
push
call
xchg
pop
jae
fld
mov
push
mov
hlt
adc
mov
fwait
mov
sbb
pop
scas
fst
jmp
and
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
adc
add
xor
and
imul
dec
arpl
mov
mov
fcomi
retf
jecxz
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
cmp
inc
loopne
retf
test
dec
cmp
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
int
dec
mov
sub
jecxz
rcr
dec
ror
cmp
das
mov
inc
lods
dec
pop
movs
dec
mov
sub
out
loop
ret
frstor
int
std
add
adc
daa
scas
push
pop
mov
ins
repz
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
neg
cmp
ins
jbe
loopne
bnd
test
and
inc
mov
int
cli
pushf
mov
lods
fcomp
pushf
push
adc
push
cld
data16
inc
xor
xor
jmp
and
pop
(bad)
cdq
push
cdq
mov
xchg
(bad)
in
or
test
mov
fmulp
aas
xor
sbb
outs
or
sbb
lods
adc
mov
das
sbb
add
pop
fucomp
xor
push
xchg
(bad)
lea
lods
loop
out
mov
inc
ins
and
ret
enter
jge
adc
(bad)
stos
out
mov
loopne
inc
jl
xchg
push
loop
push
jg
shr
jo
sub
cwde
bound
push
int3
movs
fisttp
xchg
jl
psllq
(bad)
inc
adc
mov
pop
and
mov
mov
ins
arpl
ret
outs
pop
push
and
adc
sbb
bound
aas
xor
push
mov
rcl
xor
and
(bad)
lock
or
or
repnz
retf
lahf
xchg
popf
retf
in
push
adc
lods
fisttp
or
cmp
pop
sbb
int
cs
repnz
dec
pusha
mov
and
out
cmp
ins
xchg
inc
sbb
rol
out
jp
ror
stos
push
movs
push
mov
out
pop
mov
jg
dec
push
aaa
std
les
popa
and
loop
fimul
mov
pop
cli
add
pop
add
xor
and
inc
xor
arpl
loope
(bad)
lods
pop
dec
push
cmps
xchg
sbb
sahf
mov
pop
daa
dec
(bad)
out
enter
icebp
(bad)
xor
in
adc
pop
out
cmp
int
pop
pop
in
pushf
popf
out
enter
sub
mov
mov
cwde
jg
out
xchg
mov
mov
push
xor
clc
xchg
add
or
movs
imul
jecxz
mov
lahf
jmp
daa
mov
popf
popf
or
adc
cli
dec
dec
aas
shr
sbb
jmp
nop
test
ins
retf
aam
mov
sub
xor
loopne
xchg
push
out
push
icebp
adc
(bad)
mov
arpl
sub
dec
mov
test
push
fisubr
adc
(bad)
clc
inc
inc
call
cld
jl
xchg
ror
cmp
in
push
fisub
int
mov
and
jae
mov
push
dec
xor
stos
shl
mov
mov
xchg
addr16
shl
jb
mov
push
xor
cmp
ins
jmp
ret
pop
les
std
add
jb
pop
cdq
mov
mov
ss
jg
cdq
in
push
in
hlt
std
jmp
mov
and
hlt
cmp
push
popa
repnz
cmp
fmulp
xor
in
rcr
test
adc
sbb
shl
frstor
xor
addr16
in
fucomip
xor
inc
pushf
cld
test
xchg
loop
push
sar
int
mov
xor
push
arpl
xchg
nop
push
bnd
iret
sub
mov
out
push
idiv
sub
pop
cmp
mul
sbb
inc
icebp
ins
push
jmp
fstp
(bad)
pusha
add
mov
jae
leave
in
xchg
pop
sti
jbe
hlt
jge
xchg
pushf
pop
xor
add
xchg
push
inc
aam
sub
aas
call
enter
adc
hlt
adc
int
aaa
mov
jb
or
mov
inc
xchg
push
nop
sbb
rol
jo
adc
sahf
fstp
push
mov
ret
in
jg
jmp
fucom
(bad)
into
scas
std
pusha
pop
adc
lea
(bad)
pop
sub
ins
bound
sub
mov
sbb
push
adc
mov
pop
mov
cmps
sbb
outs
sbb
jg
scas
mov
pop
cmp
call
sbb
inc
jle
and
jo
mov
push
adc
push
mov
mov
cmp
jecxz
cwde
mov
rol
add
pusha
dec
jne
jb
inc
stos
out
lods
ins
das
or
add
loop
xor
xor
mov
cdq
lahf
or
dec
mov
mov
push
popf
mov
rcl
mov
jmp
dec
mov
(bad)
mov
jge
xor
and
cmp
xor
inc
test
pop
jmp
jb
inc
imul
or
mov
cmp
xchg
int
(bad)
adc
daa
jb
clc
inc
push
fsub
jge
push
push
or
xchg
inc
jo
aam
adc
cmp
jb
xor
mov
xchg
xchg
push
mov
sub
jo
std
in
adc
ja
mov
inc
inc
jno
pop
ror
ins
xlat
xchg
sbb
rep
lahf
pusha
add
inc
outs
adc
int3
fnsave
mov
jno
pusha
sbb
jle
and
(bad)
jne
mov
xor
jno
rep
mov
out
fsubr
js
add
mov
bound
pop
aaa
jl
(bad)
fcomp
arpl
loope
add
sbb
ret
push
pop
(bad)
gs
mov
in
lods
shl
ins
xchg
sbb
inc
sub
ret
adc
popf
mov
ss
pop
enter
xchg
pop
sbb
out
rcl
inc
and
adc
or
xchg
xor
dec
sub
xchg
or
std
mov
int
sub
mov
bound
or
imul
xor
in
cmps
test
mov
push
adc
mov
xchg
shl
sbb
cmp
xor
add
ja
and
lods
mov
jae
mov
cmp
sub
adc
dec
call
and
pop
sub
mov
iret
mov
fsub
inc
mov
(bad)
repz
mov
(bad)
mov
dec
cmp
retf
addr16
in
inc
mov
(bad)
fidiv
je
cmps
call
test
js
push
cmp
outs
xor
neg
dec
rol
enter
jne
sahf
test
or
jne
and
sub
popf
bound
add
sbb
in
loope
sub
shl
mov
sahf
jns
sahf
out
lea
jge
jnp
or
pushf
enter
stos
jg
cdq
popf
push
mov
iret
lods
ss
mov
xchg
inc
test
add
nop
cwde
and
(bad)
rcr
push
xchg
lahf
dec
into
xlat
jle
test
test
and
sti
mov
test
adc
(bad)
(bad)
mov
mov
test
mov
into
inc
jbe
mov
out
pushf
popf
jno
lock
fst
arpl
aas
xchg
push
sbb
leave
repz
xchg
hlt
fisttp
cdq
retf
(bad)
jmp
mov
fld
pop
or
dec
shl
dec
aam
popf
bound
jb
inc
sub
dec
mov
or
sub
xor
dec
cwde
adc
mov
pop
pop
aas
mov
xchg
out
xchg
or
js
fisubr
mov
and
pushf
mov
js
push
sbb
jge
push
aaa
fwait
daa
mov
arpl
and
pop
add
mov
push
pop
jg
dec
rcl
cwde
pusha
int
mov
pop
dec
icebp
adc
femms
aas
dec
call
jmp
std
add
ds
sti
xchg
(bad)
repnz
mul
scas
xchg
ficomp
sar
mov
xchg
push
outs
lea
in
sub
aaa
jns
xor
sbb
(bad)
loop
push
fs
popa
(bad)
mov
shr
push
dec
in
icebp
rol
mov
in
jmp
fld
(bad)
sbb
xchg
lods
add
mov
or
lds
adc
sub
or
cmp
icebp
push
retf
mov
imul
dec
jns
test
pop
sub
leave
xor
ja
gs
add
enter
sbb
xor
fnstsw
loopne
cli
inc
sub
mov
jmp
add
ss
fcom
daa
(bad)
sub
or
cwde
js
in
stc
pop
popa
fwait
cmp
or
dec
in
imul
shl
fist
ja
pop
in
cmp
mov
inc
fwait
pop
test
push
leave
call
out
sub
in
imul
push
fnstenv
jle
mov
jecxz
data16
sbb
pop
fimul
mov
sbb
push
mov
sbb
(bad)
repz
or
dec
leave
cmp
sbb
or
xchg
pop
pop
sbb
xchg
nop
push
mov
addr16
push
ja
or
(bad)
sbb
(bad)
jb
sub
jmp
shl
adc
scas
mov
push
inc
sbb
(bad)
fdivr
or
xchg
mov
sub
xor
inc
test
push
clc
sub
sub
sbb
imul
movs
mov
adc
ficom
add
outs
push
call
mov
leave
xchg
out
mov
push
scas
adc
push
mov
das
inc
aaa
jmp
mov
iret
in
in
test
mov
js
sbb
inc
int
add
fcmovnbe
jmp
and
mov
test
shr
inc
mov
pop
mov
pop
dec
jmp
pop
in
sub
xchg
fnstenv
jmp
(bad)
xor
daa
enter
int
sub
xchg
jne
cmp
fidiv
sub
push
inc
fnstenv
movs
ror
dec
push
xlat
sub
outs
adc
sbb
jmp
cdq
sbb
imul
movs
pop
sbb
cmp
repnz
or
ficom
(bad)
fs
mov
adc
jmp
push
push
dec
dec
xor
loop
xchg
(bad)
ds
cmps
frstor
mov
cwde
ja
adc
or
xor
lods
mov
xor
loop
xor
xchg
mov
jl
gs
mov
jb
inc
in
lods
pushf
das
mov
and
repnz
and
ja
rol
cli
iret
stos
sbb
mov
call
xchg
push
fnsave
xor
cld
add
in
lods
pusha
lea
add
(bad)
xchg
mov
jge
ins
jp
mov
sbb
int
pop
in
outs
int3
xchg
jge
inc
add
loop
mov
je
or
cmps
int3
jns
ss
sub
cmp
pusha
adc
push
sar
sbb
jae
xor
xchg
cmps
stc
xor
xchg
cmps
sub
std
adc
xor
lods
bound
jge
aam
mov
jnp
add
and
jl
adc
daa
push
scas
in
(bad)
mov
(bad)
pop
push
loop
jns
ret
and
xor
je
in
loop
loope
xchg
das
pop
mov
call
mov
jo
jae
stos
int3
jo
mov
inc
bound
scas
mov
call
or
push
mov
movs
fiadd
add
push
fcomp
mov
mov
push
dec
push
jl
stc
jmp
jb
dec
movs
mov
or
mov
ror
in
inc
int
inc
add
shl
jb
mov
movs
repnz
jns
(bad)
pop
fmulp
loope
mov
mov
sbb
sbb
ret
mov
jge
retf
cmp
xchg
push
sub
jno
add
mov
dec
sbb
pop
pop
xchg
push
and
pop
pop
mov
xor
call
sti
mov
loop
movs
jle
cmps
fwait
sbb
int
add
(bad)
mov
out
mov
add
mov
xor
xor
in
mov
jbe
iret
jb
jnp
shr
sti
adc
push
xchg
fnstenv
push
jno
nop
mov
pop
cwde
daa
popa
xor
xchg
pop
dec
push
pop
cmps
mov
push
push
cmp
sub
jmp
fild
dec
xchg
xchg
xchg
fdivr
or
shl
addr16
into
std
add
jle
mov
cmp
jno
das
jle
sbb
outs
push
frstor
inc
add
sub
cmc
data16
mov
push
aaa
jge
loopne
shr
cmp
scas
pop
lds
(bad)
aam
clc
push
std
inc
aaa
enter
xchg
in
call
and
mov
adc
mov
aas
retf
xchg
mov
rcr
test
iret
pop
xchg
(bad)
cmp
fisub
(bad)
movs
bound
add
leave
dec
loop
mov
in
jb
jg
inc
sub
pop
std
add
pop
das
lea
push
idiv
repnz
and
lahf
(bad)
repnz
push
mov
iret
sbb
sbb
cmp
and
sbb
lock
push
mov
mov
pop
sub
repnz
and
leave
ja
xor
push
iret
out
call
ins
mov
push
push
and
mov
push
push
xor
add
or
cmps
jb
js
rol
jo
sub
push
and
cmps
pcmpgtb
adc
in
sbb
push
rcl
mov
bound
add
sbb
pop
sub
repnz
and
out
rcr
pop
push
movaps
sti
ret
and
fidiv
dec
push
mov
lea
mov
cmp
dec
cmp
or
frstor
xchg
sti
add
jns
lea
data16
lock
and
pop
loop
xor
sub
jg
add
lahf
retf
(bad)
retf
pop
pop
fs
jp
cmp
rol
shl
addr16
or
jnp
cmp
outs
faddp
add
jne
repnz
xchg
clc
or
fdiv
cmps
mov
pop
ror
xchg
fistp
ret
mov
imul
sti
and
and
cmp
into
inc
and
mov
ret
push
mov
jg
mov
pop
push
jbe
stos
pop
dec
ins
mov
loopne
lock
inc
das
outs
nop
imul
jp
ror
mov
lahf
cli
loop
inc
mov
out
pop
cmc
pavgb
or
push
shl
scas
fmul
aas
jno
xor
shr
dec
lock
shr
push
ret
fnsave
bound
popf
shl
dec
out
pop
loop
push
mov
jo
mov
jb
fidivr
mov
pop
sahf
rcl
add
mov
lods
ins
sbb
xchg
sub
ins
inc
or
jbe
cdq
adc
stos
lea
ret
jbe
aam
mov
lock
call
lds
pusha
enter
sub
jne
imul
mov
mov
jg
iret
es
fiadd
mov
or
jb
adc
in
(bad)
cld
push
loop
xchg
cmp
je
mov
pop
adc
add
das
dec
fild
push
sub
xchg
sub
xor
inc
in
out
adc
enter
lods
mov
push
lods
fist
retf
mov
sbb
popf
xor
(bad)
in
adc
daa
sub
mov
mov
ins
call
sub
hlt
std
jmp
xchg
inc
call
dec
push
mov
fnstcw
scas
fdivr
jne
dec
lea
lods
xchg
ss
dec
lock
outs
pop
mov
jg
xchg
sub
xchg
movs
lea
mov
jne
and
push
lds
das
je
jbe
outs
fbstp
call
mov
setno
push
inc
mov
cmp
iret
mov
psubsb
sub
ffree
shr
push
pop
stos
int
jmp
mov
lods
add
pop
mov
or
adc
ret
fucom
sbb
outs
adc
lea
repz
dec
add
push
loop
retf
repnz
test
and
adc
(bad)
jb
inc
inc
std
cmp
lock
mov
xor
mov
popf
daa
jbe
inc
repnz
pop
mov
bound
xor
sahf
rol
and
mov
aaa
call
pop
popf
pop
or
scas
cmp
fld
jo
(bad)
cli
sub
and
jl
lock
outs
nop
inc
cmp
fld
push
popf
daa
add
push
(bad)
pop
ins
sbb
xchg
and
mov
jb
cdq
popa
popf
iret
lea
xchg
pop
dec
mov
popf
push
ins
dec
adc
adc
addr16
add
sub
int
jno
inc
iret
xchg
fistp
mov
xchg
out
xchg
pop
inc
sbb
push
xor
inc
adc
jge
add
inc
mov
dec
or
jge
outs
cwde
mov
mov
ret
(bad)
add
mov
mov
(bad)
or
pop
pop
push
in
lea
sub
aas
mov
in
aam
movs
lea
lods
dec
mov
jo
xchg
xchg
(bad)
rcr
ror
int
add
daa
cmp
and
das
mov
xchg
jge
leave
aam
inc
push
test
repz
rol
lea
lods
xchg
in
in
dec
test
inc
pusha
pop
push
call
ret
stos
out
enter
shr
(bad)
idiv
sbb
sub
cwde
cmps
inc
mov
(bad)
pusha
push
pop
bound
pop
pop
dec
mov
pop
test
mov
sbb
into
xchg
cmp
adc
pop
(bad)
iret
sahf
out
inc
lock
pop
sti
or
sub
loop
mov
xchg
and
repz
dec
shl
fnsave
cdq
arpl
xchg
add
xor
sahf
(bad)
ja
push
adc
pushf
aaa
jl
mov
cmp
dec
or
push
sbb
mov
mov
xchg
or
sahf
adc
adc
push
adc
rcr
out
repz
push
jb
pop
into
push
add
imul
sub
bound
imul
lock
add
aam
jbe
loop
scas
push
nop
shl
sahf
mov
cwde
inc
xchg
daa
lea
mov
xor
inc
ret
sub
jg
clc
bound
and
push
mov
mov
(bad)
push
(bad)
test
lahf
enter
or
ja
and
lods
shl
out
(bad)
not
push
dec
jnp
xchg
and
hlt
add
adc
pop
mov
mov
ins
setno
loop
add
xchg
shl
and
hlt
std
(bad)
outs
in
sub
iret
icebp
mov
adc
cmp
sti
adc
and
jge
std
jmp
test
dec
adc
adc
fucomip
or
add
jnp
add
push
jmp
xchg
fstp
or
pop
xchg
cmps
stos
xor
lds
add
fwait
jg
mov
cmp
popa
dec
fmul
inc
push
ins
mov
dec
cwde
push
aam
and
mov
sub
jp
xor
sbb
jecxz
div
sbb
fnsave
push
mov
hlt
or
and
push
sbb
sbb
les
scas
shl
call
adc
into
aas
test
xchg
xchg
mov
sub
push
leave
push
add
cdq
mov
outs
jb
in
es
sub
or
imul
mov
popf
bound
mov
pop
add
xchg
jns
pop
adc
retf
push
test
lahf
xchg
push
xchg
dec
jmp
pop
push
scas
mov
jle
or
out
sbb
shl
mov
jge
in
push
push
dec
ss
push
stos
xlat
xlat
mov
test
ds
inc
cmps
inc
xchg
sub
inc
movs
inc
test
xchg
popf
clc
dec
stos
es
push
icebp
(bad)
jae
imul
les
jns
cmp
push
mov
fnstsw
sar
mov
mov
xchg
jb
xchg
repnz
adc
sbb
jmp
aam
mov
add
rcl
mov
es
sub
std
mov
out
(bad)
aad
sub
in
push
popf
fisttp
sub
loopne
test
lds
sub
add
data16
xor
rcr
fisttp
sub
mov
int
jns
js
call
pop
pop
fst
sbb
int
ins
mov
push
jmp
xchg
out
jb
xchg
inc
test
arpl
xchg
cmc
imul
cmps
jo
lahf
push
mov
mov
sub
xchg
inc
or
jns
ret
sub
out
std
int
adc
inc
lods
popf
stos
mov
in
sbb
sub
cmp
sub
jge
(bad)
ror
sub
das
enter
or
mov
mov
out
mov
sub
repnz
out
jge
pop
rol
push
ret
jb
xchg
loopne
sbb
ss
and
inc
and
sbb
sub
lods
nop
pop
mov
jg
ds
fucom
int3
or
xchg
lahf
add
pop
mov
ins
sbb
or
repz
scas
mov
add
pop
xchg
jb
mov
out
fbld
(bad)
sub
dec
sbb
xchg
(bad)
popa
call
daa
mov
inc
rsqrtps
lods
shl
int
lea
cmps
out
xchg
xor
inc
adc
inc
pop
sahf
add
sub
mov
adc
adc
cmp
cmps
popf
push
loop
movs
fcomp
mov
out
icebp
add
xor
sub
jo
xor
cdq
bound
pop
mov
mov
out
in
xchg
add
std
loope
pushf
daa
out
xor
push
lea
xchg
iret
xchg
outs
or
push
aas
std
(bad)
out
sub
leave
cmps
jb
and
sbb
or
cmp
and
cmp
sbb
pop
mov
shl
sbb
(bad)
enter
std
addr16
icebp
adc
test
or
pop
outs
in
scas
mov
pop
(bad)
xor
xor
jmp
mov
or
out
mov
mov
and
jo
std
or
sbb
sub
cdq
mov
std
adc
out
pop
push
sti
lds
loopne
dec
icebp
adc
dec
out
std
(bad)
cmp
cmp
loop
xor
or
and
repz
jnp
jge
ins
sbb
shl
mov
and
ret
outs
mov
inc
push
xor
iret
dec
xchg
sbb
mov
and
inc
int
inc
sub
mov
mov
mov
jge
das
sbb
ret
xor
int
push
cwde
cdq
sub
shr
lods
xlat
mov
xchg
(bad)
push
pop
outs
daa
call
int
jo
mov
aaa
mov
mov
lock
jne
mov
and
jo
and
jne
jb
jl
lods
fcmovnbe
mov
in
push
imul
cmps
js
js
inc
inc
lods
add
cmp
sti
jp
sub
or
inc
imul
xor
fisttp
sahf
lock
and
pop
mov
mov
jge
xchg
outs
xor
mov
cmp
mov
mov
data16
ins
out
fbld
and
mov
ss
ja
xchg
into
jo
in
loop
pop
clc
stc
lock
lods
xchg
pop
call
push
sbb
vucomisd
xchg
jo
jmp
shr
fisubr
movs
aas
dec
push
adc
push
jns
fisubr
xchg
push
and
inc
gs
jbe
mov
cmp
and
add
(bad)
mov
js
xor
mov
jb
sbb
arpl
xchg
dec
inc
cmc
bnd
out
ficom
and
test
popf
xor
pop
enter
sbb
inc
lock
imul
push
loopne
(bad)
mov
fs
push
loope
call
lods
dec
xchg
or
mov
inc
jo
stc
loopne
jp
push
(bad)
cdq
pop
arpl
mov
mov
sbb
repnz
xchg
sbb
cmp
jbe
data16
push
jb
pop
jl
inc
inc
rcl
cmp
loopne
icebp
mov
pop
pop
sub
mov
adc
aaa
test
mov
movs
mov
div
js
dec
repz
push
fstp
mov
mov
movs
popa
push
ss
cmp
dec
mov
scas
xor
push
loop
jns
cmp
loope
adc
aaa
push
jb
mov
dec
cmp
mov
adc
ret
fs
jno
add
pop
popf
mov
mov
out
jo
or
mov
aam
jge
int
inc
mov
sbb
stos
lods
push
pop
mov
addr16
aam
mov
(bad)
pusha
sub
add
xchg
stos
dec
cmp
push
call
out
imul
pop
and
mov
cdq
mov
jmp
mov
adc
call
inc
sub
fistp
adc
loop
sti
push
inc
and
sbb
test
mov
cmps
or
or
nop
xchg
jmp
lods
stos
xor
mov
mov
gs
adc
les
(bad)
mov
int3
les
sub
push
jecxz
pop
ja
mov
jmp
sub
popa
jae
adc
pop
ror
std
adc
xchg
ss
mov
add
inc
cli
sbb
sbb
add
pushf
cmp
add
cmp
and
and
or
cmps
push
xor
or
pop
in
mov
push
pop
lea
outs
xchg
lods
loop
mov
inc
shr
or
fadd
add
push
pop
daa
iret
mov
and
sub
jns
jb
sub
jmp
mov
adc
cmp
push
dec
fild
add
xchg
dec
repnz
adc
jp
lock
add
and
dec
sub
mov
adc
sbb
dec
sub
mov
inc
push
cwde
push
cmp
and
xor
mov
mov
pop
loopne
in
shl
xchg
cmps
rcr
and
xor
(bad)
call
push
scas
out
into
aas
jge
mov
aam
dec
mov
add
adc
ret
mov
imul
stc
movs
rcr
inc
out
dec
mov
push
sbb
lahf
sbb
cmp
add
push
call
dec
sbb
xchg
xchg
loop
or
add
scas
inc
fdivp
mov
jb
add
sbb
xlat
sbb
dec
rcr
and
dec
lahf
push
jmp
adc
mov
or
addr16
pop
xor
std
data16
mov
call
cmp
(bad)
sbb
pusha
bound
std
mov
imul
inc
inc
cmc
adc
test
or
mov
pop
(bad)
mov
and
pop
mov
inc
movs
push
rcr
sbb
push
hlt
sbb
mov
inc
xor
add
retf
jmp
add
imul
daa
xor
test
data16
retf
es
and
(bad)
std
imul
test
push
test
push
js
adc
(bad)
xlat
cmp
imul
jp
add
pop
push
cld
shr
adc
pop
push
imul
jne
ins
sbb
test
test
stos
cdq
push
jmp
es
xchg
hlt
ins
lds
or
mov
outs
sub
cld
mov
in
add
ss
repz
nop
mov
sbb
dec
or
fldcw
mov
jb
mov
gs
adc
sbb
mov
sar
mov
xchg
popa
sub
fisub
jle
stos
mov
cmp
ins
test
push
or
(bad)
or
and
ss
in
push
inc
int3
mov
or
frstor
neg
mov
das
push
xchg
mov
xchg
add
sahf
bswap
cli
mov
and
outs
xchg
push
jmp
stc
inc
inc
dec
pop
sub
push
lods
xchg
push
adc
shl
test
sub
bound
push
jbe
mov
mov
lahf
test
cmc
push
or
rcr
and
xor
fwait
into
push
(bad)
popf
sub
cmp
xchg
xchg
imul
mov
jmp
repz
pusha
jp
pop
dec
push
leave
test
je
jne
out
cmps
mov
ficom
fnstcw
daa
mov
mov
push
fst
or
pop
scas
xchg
dec
pusha
jmp
(bad)
mov
sbb
sub
sub
es
out
xchg
lea
ins
and
cmp
aam
es
jo
push
std
adc
popf
iret
mov
add
push
sbb
push
shr
(bad)
fisttp
mov
sbb
jo
fstp
jmp
pop
test
push
mov
in
fwait
sbb
mov
jbe
and
bound
cs
out
add
cmp
ins
loop
in
aad
sar
add
in
js
das
push
call
sbb
xchg
pop
movs
dec
xor
scas
adc
fstp
jbe
test
push
xchg
jb
in
and
mov
dec
call
or
ins
cwde
inc
int
inc
add
mov
pop
mov
sub
arpl
sub
(bad)
in
ror
xor
push
in
lods
mov
mov
imul
out
out
inc
push
mov
bound
or
push
test
mov
pop
ins
retf
fsub
in
int
cmp
mov
pop
bound
jb
test
add
dec
xlat
cmp
icebp
and
call
dec
and
out
clc
adc
xchg
out
or
test
fsub
dec
jnp
mov
shl
int
dec
adc
inc
pop
cli
lea
sub
jge
test
xchg
dec
adc
scas
cmp
test
scas
adc
sbb
dec
imul
mov
outs
push
je
icebp
std
mov
push
inc
jge
inc
test
ins
dec
lods
xchg
ins
mov
xor
repz
cmp
fmul
and
cwde
fcomp
push
cmp
pop
lods
xchg
pop
loopne
lea
mov
pop
jle
ret
cmp
clc
pop
inc
pop
inc
jb
mov
cmc
mov
or
mov
out
cld
repz
test
push
and
in
lods
ss
lahf
inc
cmp
inc
in
dec
and
fst
or
std
rcr
test
std
lods
adc
and
mov
fst
xor
pop
pop
inc
pop
pop
mov
inc
pop
movs
pop
dec
push
sub
cmp
shr
inc
jo
scas
adc
test
adc
cwde
mov
gs
and
jns
inc
mov
xor
add
adc
add
lock
push
stos
mov
inc
xor
jmp
stos
sub
sub
push
scas
ret
in
adc
vpmulhuw
pop
cmp
mov
xor
or
push
jb
jno
sub
push
fwait
pop
dec
cmp
mov
jnp
push
and
add
push
adc
mov
lods
xchg
sub
(bad)
aam
jge
adc
mov
jns
xchg
in
cs
push
daa
mov
and
popf
xor
inc
jno
add
ins
jp
sbb
stc
rcl
or
inc
pusha
rcr
(bad)
enter
lods
add
cld
push
cmp
xor
outs
(bad)
aaa
mov
cmp
sub
cmps
(bad)
fnsave
or
push
shr
pop
and
mov
outs
outs
adc
(bad)
xor
push
scas
lods
cmps
popf
jns
movs
sub
mov
sub
inc
and
push
outs
cmp
add
adc
out
shl
pop
push
movs
(bad)
mov
dec
mov
loope
cld
ret
fmul
and
inc
mov
push
scas
out
lds
sbb
xchg
lahf
scas
adc
(bad)
pop
push
popf
arpl
push
mov
adc
push
inc
xchg
mov
jmp
retf
fbld
pop
push
mov
mov
aas
mov
pop
push
pop
or
push
dec
shl
inc
in
dec
shr
into
aaa
jmp
lock
cmp
(bad)
out
loope
inc
adc
pop
pop
push
push
mov
(bad)
xor
(bad)
retf
xor
jg
sar
and
inc
xchg
add
push
ret
push
inc
aas
mov
push
sbb
jge
and
sbb
out
cmps
nop
adc
cmp
cdq
jmp
add
aad
jge
sbb
or
xchg
cwde
jne
rep
push
scas
dec
and
add
xchg
pop
mov
push
push
xchg
in
shr
outs
inc
xor
fucomp
ins
add
xlat
push
inc
lods
sub
das
xchg
dec
sbb
jno
in
jle
int
std
add
rcl
fstp
dec
mov
sub
in
push
xor
mov
dec
cli
std
inc
in
out
bound
sti
lods
mov
and
xchg
lahf
dec
movs
sub
adc
and
cwde
lea
(bad)
jmp
and
pop
test
jns
cmp
(bad)
int
push
test
adc
lea
pop
dec
aas
mov
xor
cmp
xor
jle
mov
xor
push
das
sbb
xchg
sbb
dec
and
daa
xor
pop
lahf
sahf
movs
iret
fwait
mov
mov
stos
shl
mov
push
aad
and
add
adc
repz
in
mov
mov
shr
sub
hlt
std
inc
test
push
popf
jns
mov
bound
adc
xchg
loop
repnz
dec
in
sbb
or
jb
leave
ins
xchg
popf
mov
sub
sbb
into
and
sbb
es
into
sbb
cbw
cmp
fldcw
pop
into
mov
mov
xchg
imul
and
loopne
outs
lea
push
add
push
sub
xor
jmp
dec
mov
dec
fstp
jge
xlat
push
ds
xchg
push
and
xor
mov
data16
mov
(bad)
jno
push
out
sbb
sbb
loope
lock
push
adc
pop
jge
lods
fisttp
mov
adc
sbb
sub
cmp
movs
dec
inc
call
xor
mov
jo
cmp
or
call
add
call
pop
fadd
or
xchg
sbb
arpl
int
pop
in
(bad)
push
bound
inc
sbb
dec
dec
aas
(bad)
rcl
mov
cmps
cmps
lahf
in
or
std
ret
popw
push
bound
inc
sub
dec
les
jle
ins
xchg
adc
frstor
int
ret
in
(bad)
ror
dec
pop
dec
dec
dec
pop
sbb
cld
ret
jg
fwait
bound
bound
mov
scas
hlt
jae
outs
inc
xor
mov
mov
fwait
sub
xor
fisttp
sub
xchg
or
movntq
aad
adc
mov
inc
mov
popf
clc
or
popa
aas
ins
(bad)
mov
cmp
mov
sub
bound
jb
jb
inc
or
icebp
jae
stos
xchg
loop
or
adc
popa
(bad)
and
and
test
mov
pop
and
cmp
sbb
fsub
fstp
(bad)
mov
pop
test
and
stos
mov
mov
aad
jle
or
pop
sub
fadd
lea
add
shl
lock
ret
and
int
mov
xor
add
aas
jl
add
shl
call
mov
dec
push
aaa
jne
data16
push
mov
adc
pop
test
idiv
fs
repnz
push
cmp
or
dec
sub
mov
aam
mov
(bad)
mov
sbb
ret
in
and
add
inc
out
adc
popf
fnsave
adc
push
mov
ins
loop
bound
nop
push
addr16
jo
dec
adc
popf
dec
lea
sub
test
into
sbb
pop
fucom
int
stos
pop
sub
loope
int3
inc
mov
std
mov
mov
jge
sbb
dec
shr
jno
xor
in
daa
bound
and
mov
test
nop
loop
repnz
enter
test
loope
gs
enter
and
mov
mov
sub
push
sbb
call
cdq
int
inc
call
cmp
mov
idiv
or
mov
icebp
rol
(bad)
adc
jl
std
xchg
pop
cmps
or
loop
fs
shl
pusha
xor
mov
push
mov
push
out
xchg
shl
xchg
ret
repnz
and
inc
pop
std
inc
mov
jb
inc
fst
pop
das
mov
sub
and
jg
xchg
jmp
sahf
fnsave
mov
fstp
and
(bad)
(bad)
adc
int
xchg
data16
or
adc
add
sbb
bound
mov
cmc
mov
xlat
xchg
and
mov
pop
xor
mov
stos
rol
dec
jb
adc
dec
idiv
js
dec
daa
aas
jg
xchg
push
nop
ret
mov
cmps
enter
pop
pop
or
push
ins
out
in
ret
cmp
rcl
bound
daa
lods
pushf
cmc
or
jp
pop
xchg
inc
sub
jae
ffree
mov
pop
xor
mov
pop
std
lods
mov
mov
lock
ins
ret
jo
fs
jo
mov
inc
xor
mov
lea
retf
mov
ins
xor
cmps
xor
rcl
nop
ret
call
loope
shr
stos
es
cld
pop
mov
or
es
cdq
ret
adc
adc
bound
dec
fdivr
icebp
(bad)
mov
inc
loop
push
mov
loope
nop
inc
pop
popf
popa
clc
aaa
xor
std
pushw
das
pop
cs
mov
repnz
enter
std
mov
pop
mov
sti
mov
mov
xchg
int3
retw
pop
pop
(bad)
out
add
adc
int
enter
es
mov
rol
mov
ds
xchg
lea
mov
pop
pop
aam
popf
dec
lea
jle
dec
sub
out
or
fst
add
push
jp
mov
clc
add
mov
mov
movs
(bad)
mul
sub
in
fisub
lods
fcomp
mov
sbb
jecxz
repnz
adc
fld
jnp
cmp
ret
stos
out
inc
adc
adc
jne
loop
sub
imul
call
enter
inc
lods
(bad)
pop
jl
das
pop
pushf
imul
frstor
xor
push
repnz
(bad)
push
addr16
xor
loop
xchg
lahf
scas
xor
cmc
std
in
in
ret
stos
push
jb
mov
adc
xchg
sub
dec
jle
and
(bad)
jne
mov
fistp
ins
push
mov
dec
jmp
and
fst
push
enter
repz
or
mov
inc
gs
inc
push
pop
xchg
cmps
sub
mov
sub
inc
inc
push
pop
mov
ins
mov
sar
ja
hlt
sub
popf
dec
clc
jle
test
mov
cmp
xchg
adc
mov
cmps
aad
and
stc
adc
fimul
cdq
ins
daa
push
aad
mov
dec
test
(bad)
mov
sbb
test
push
sub
pop
jge
inc
nop
sub
adc
push
(bad)
je
push
push
mov
inc
jb
stos
dec
lds
int3
push
mov
scas
jmp
stos
xor
fucomp
fs
fcomp
dec
pop
dec
ins
cmp
test
fs
(bad)
push
scas
int
and
xchg
xchg
fmulp
mov
mov
xchg
xchg
mov
xchg
push
push
mov
lds
clc
jno
add
jmp
push
js
add
push
mov
sar
push
fs
fistp
sti
add
hlt
cmp
mov
xchg
sub
mov
mov
popf
inc
in
inc
sbb
sub
adc
jne
and
out
ret
sbb
fdivr
frstor
pop
xlat
pop
call
xlat
cmp
push
jns
cmp
dec
xor
in
scas
in
jns
gs
add
pop
cdq
mov
sub
and
and
ficomp
jno
std
fstp
jmp
xor
es
das
xchg
dec
iret
xchg
(bad)
jp
imul
test
fst
and
add
call
mov
mov
fidiv
inc
cmps
jmp
mov
mov
or
dec
pop
nop
adc
xor
cmp
clc
cdq
popf
mov
inc
shl
or
jb
sbb
mov
mov
popf
(bad)
out
mov
xchg
mov
and
bnd
sub
int
inc
or
mov
add
fild
ror
retf
sbb
enter
add
in
stos
pop
mov
mov
push
push
mov
xchg
test
or
cwde
retf
mov
popf
jb
mov
lods
into
inc
das
retf
add
or
and
mov
pop
and
mov
packuswb
loopne
cwde
add
mov
ret
xchg
push
clc
popfw
(bad)
sar
scas
push
add
shl
stos
shl
sbb
push
rcl
in
movs
mov
ins
add
xchg
(bad)
(bad)
rcl
retf
in
aaa
inc
mov
fdiv
ins
push
pop
loope
outs
iret
xchg
adc
or
push
retf
mov
jno
or
xor
mov
dec
cmps
inc
cwde
jp
adc
test
int
add
push
ret
bound
int
and
mov
dec
mov
pop
pop
push
mov
jmp
fsub
mov
(bad)
jnp
inc
xlat
mul
add
shr
cmp
add
gs
ja
lea
es
sub
daa
pop
mov
mov
movs
dec
icebp
mov
push
or
in
pushf
sahf
inc
scas
xchg
mov
sub
mov
imul
pop
(bad)
cmp
hlt
xchg
jp
(bad)
leave
ins
fld
mov
mov
loope
cli
pop
lahf
retf
xchg
mov
imul
(bad)
push
jno
fst
shl
mov
sbb
mov
fsin
mov
xor
cmp
sahf
mov
inc
jge
cmps
jno
arpl
cli
nop
outs
xchg
inc
or
cmp
and
mov
pop
mov
sbb
mov
push
push
pop
int3
jns
sbb
pop
adc
mov
push
test
dec
mov
xchg
scas
mov
loope
adc
pop
in
pop
fimul
out
sub
scas
push
into
dec
mov
push
fsubr
(bad)
sub
cs
cmp
add
push
push
cdq
arpl
data16
mov
cs
sbb
ds
jmp
cmp
lea
cmp
or
or
pop
pop
and
in
mov
sbb
inc
addr16
out
xchg
cdq
sbb
popa
(bad)
(bad)
es
push
call
es
cmps
lock
rol
clc
xchg
sub
push
sti
inc
call
pop
mov
aas
fstp
dec
addps
push
test
xchg
cli
cmp
outs
ja
addr16
pop
inc
inc
imul
jge
inc
mov
int
ins
lahf
in
cmp
push
(bad)
(bad)
call
out
push
pop
es
iret
mov
lahf
int3
es
jl
(bad)
retf
xchg
add
aas
or
xchg
rol
cmp
sub
jmp
int
(bad)
and
ss
lods
mov
inc
ins
xchg
sahf
imul
cmp
adc
push
bound
push
shl
js
aas
cdq
xchg
sbb
pop
mov
(bad)
js
nop
retf
mov
adc
jb
lea
bound
push
test
dec
sahf
imul
xchg
mov
jne
repnz
and
bound
outs
daa
bound
or
lods
(bad)
sbb
retf
cmps
(bad)
xor
mov
test
jae
pop
cmp
ret
sub
cmps
mov
ret
sbb
jb
shl
hlt
mov
jne
lods
ins
inc
mov
push
mov
and
pop
pop
push
sar
leave
out
pushf
mov
aad
pop
sbb
(bad)
movs
sar
std
movs
inc
jge
(bad)
(bad)
lock
hlt
les
shl
js
sub
push
ret
jge
aaa
jb
pop
and
mov
(bad)
test
loop
mov
mov
popf
(bad)
in
inc
test
or
das
pop
pop
or
ins
int
icebp
push
ret
popf
sub
ja
add
ret
mov
aad
xor
pop
pop
in
or
sbb
xlat
jae
out
stos
inc
xchg
std
add
pop
xchg
in
inc
mov
fwait
add
das
(bad)
xor
int
sbb
pop
pop
icebp
ss
fadd
or
rcl
sbb
in
test
add
mov
mov
mov
mov
data16
loop
dec
mov
xor
test
ja
repnz
shr
or
lock
pop
mov
pop
das
xchg
fsub
or
cmp
push
sahf
int
mov
mov
shr
packsswb
xchg
sbb
mov
popf
repnz
add
ss
inc
mov
lock
inc
push
dec
gs
in
mov
ds
in
inc
mul
lea
inc
pop
lods
xlat
popf
jle
mov
pop
loop
mov
xchg
inc
sub
cdq
in
test
shl
sub
mov
imul
xchg
mov
jp
enter
stos
shl
out
push
add
or
pop
xlat
xlat
mov
inc
test
adc
fld
fcom
hlt
lds
aad
mov
cmp
loopne
jge
imul
inc
sub
xchg
cdq
mov
das
mov
popa
or
jbe
cmp
cwde
mov
pop
sub
and
push
enter
fsubr
out
idiv
mov
cs
xchg
cmp
mov
xchg
jmp
pop
inc
jmp
aaa
div
ins
xchg
scas
mov
ret
xchg
test
int
mov
scas
dec
xchg
popf
pop
pop
inc
add
pop
xlat
pop
mov
(bad)
sahf
cmp
std
mov
jge
pop
and
ror
call
pop
cmc
jo
jnp
xchg
xchg
fucom
dec
sbb
test
mov
ins
lahf
(bad)
(bad)
mov
dec
mov
cs
loop
repnz
js
shr
lods
inc
lahf
dec
imul
mov
cmc
push
dec
in
repz
inc
loop
ja
add
frstor
xor
push
mov
ret
pushf
xlat
int
clc
not
dec
sbb
and
and
ds
push
in
sub
pop
push
stos
pop
dec
shr
ins
ret
or
jl
nop
stos
add
pop
aad
fidiv
xor
cs
repnz
xor
or
ror
push
pop
cmp
mov
(bad)
cmc
jae
lods
pushf
stos
adc
lods
adc
sti
ret
loop
pop
(bad)
fidivr
enter
out
data16
adc
pop
mov
sub
loop
mov
xchg
fnsave
jbe
cld
adc
mov
in
iret
mov
je
or
ins
jne
mov
lahf
mov
inc
aas
jbe
scas
inc
ins
xor
sub
add
aas
jge
jle
pop
shl
mov
nop
and
and
or
sub
sub
sub
cs
ins
shr
jge
(bad)
sbb
sahf
repz
add
in
aad
(bad)
(bad)
mov
loopne
dec
mov
mov
in
rcr
ja
dec
mov
in
pop
pop
xchg
mov
xchg
xchg
push
repnz
sub
sahf
jne
or
jbe
rcr
add
in
add
mov
jge
xchg
fisub
enter
test
in
adc
xor
push
idiv
jmp
push
cmp
mov
rcl
(bad)
sar
xor
push
imul
scas
mov
ds
mov
mov
mov
cmps
dec
pusha
sti
xor
adc
movs
sbb
(bad)
adc
fisttp
repz
int
retf
cmp
aad
fnstenv
adc
mov
push
jmp
test
dec
cmps
add
push
inc
pusha
pop
xor
dec
sbb
fidiv
or
inc
dec
ins
ins
and
out
cmp
fadd
mov
movs
iret
aaa
out
and
pushf
push
mov
loop
or
xor
shl
(bad)
int
jle
cwde
rcr
mov
jb
add
xchg
pop
stos
dec
add
ds
fucomp
mov
pop
mov
push
adc
pop
loop
stc
dec
(bad)
jns
jge
es
ret
ins
and
adc
jg
inc
popf
jmp
adc
ins
sahf
pop
push
gs
les
xor
test
lea
mov
daa
mov
ret
push
sbb
inc
xchg
loope
sub
xor
jge
cdq
cmc
and
aas
or
mov
adc
sbb
ret
fnstsw
in
sbb
push
sub
mov
inc
ins
xchg
hlt
cmp
dec
jnp
push
cmps
mov
inc
jl
push
scas
cmp
stc
hlt
xchg
pop
push
xor
(bad)
fld
icebp
adc
rcl
out
cmp
cmps
pop
and
mov
sbb
push
aam
dec
mov
sub
int3
repnz
mov
addr16
iret
and
pop
pop
imul
loop
dec
cmp
push
inc
xor
jmp
test
pop
pop
cmps
mov
or
ret
cmp
cs
ja
push
popf
bound
enter
pop
popa
push
mov
jmp
cld
add
ja
add
adc
jmp
es
or
push
cli
mov
rcl
fs
cmc
xchg
adc
inc
clc
pop
adc
jmp
mov
test
mov
sub
leave
in
jmp
inc
pop
pop
pop
mov
int3
mov
ret
shl
call
xor
addr16
movs
rcr
sti
cmp
inc
(bad)
cmp
adc
sub
pop
lea
gs
(bad)
sub
fistp
imul
arpl
cmp
shl
inc
test
inc
shl
lea
add
push
or
fist
mov
frstor
add
outs
repnz
xchg
clc
aaa
and
pop
scas
sub
jge
js
pop
sbb
int
test
mov
jb
inc
push
or
dec
dec
and
(bad)
push
dec
addr16
inc
ret
cmps
push
dec
xor
add
outs
repnz
(bad)
(bad)
mov
arpl
mov
fidivr
inc
nop
mov
clc
ret
rcr
pop
imul
inc
push
ins
xchg
lea
loope
(bad)
pop
ja
in
xor
retf
add
aam
mov
jb
sbb
pop
mov
push
mov
adc
aad
sar
push
addr16
daa
js
test
adc
iret
mov
outs
add
cmp
outs
or
out
xchg
push
push
pushf
ds
nop
and
test
jo
scas
cmp
call
mov
jge
outs
sbb
repnz
xchg
test
(bad)
mov
cwde
fwait
out
mov
mov
push
(bad)
and
imul
enter
je
in
cdq
xchg
xor
fstp
test
jne
xor
clc
push
(bad)
jg
ins
lea
sbb
xor
add
sub
pcmpeqb
xor
or
cmp
ret
rcr
push
scas
inc
push
sahf
(bad)
test
ins
lods
mov
(bad)
ins
xchg
pop
ret
sub
in
sbb
and
shr
xor
scas
pop
mov
(bad)
lods
fimul
mov
and
int
rcr
stc
inc
aas
push
xchg
pop
sub
idiv
pop
xchg
pop
and
ret
xchg
pop
sub
mov
in
enter
push
inc
cli
cmp
jge
(bad)
js
or
fnstsw
shl
mov
pop
adc
(bad)
shr
xchg
pop
outs
int3
or
and
(bad)
bound
iret
sti
mov
dec
adc
cmc
or
or
sub
aad
int
call
cmp
push
pop
mov
inc
jmp
neg
cld
xchg
jmp
(bad)
std
inc
(bad)
out
cld
hlt
sahf
sahf
sub
xor
sbb
or
popa
dec
(bad)
mov
arpl
test
lods
lods
mov
into
loop
xchg
inc
loope
std
ret
sub
scas
push
iret
lea
ins
mov
cdq
dec
dec
xchg
repnz
pop
sbb
xchg
cmps
xchg
mov
pop
xor
bound
lods
push
int
retf
or
xchg
loop
mov
pop
sub
std
cmp
jb
inc
lods
lods
push
or
sub
push
ret
or
aad
dec
xor
arpl
mov
bound
(bad)
lea
ins
fst
pop
test
push
and
test
pop
inc
dec
mov
icebp
neg
call
pop
fst
and
xor
add
mul
lea
add
loopne
dec
dec
sub
mov
inc
cmp
int
mov
mov
and
or
pop
dec
lock
ins
rcr
loop
js
adc
lahf
ret
call
mov
mov
icebp
xor
out
pop
and
idiv
fiadd
rcl
(bad)
jecxz
cmp
mov
mov
rcr
rcr
(bad)
movs
cli
cwde
jl
jo
shl
and
cli
mov
sub
fsubr
and
es
fwait
rol
xor
aad
push
out
add
xor
pop
push
mov
dec
xor
ins
push
fsub
not
loope
sahf
scas
int
add
sub
push
(bad)
shl
inc
and
dec
add
cs
fldenv
scas
retf
push
jge
fild
push
jb
ss
jns
cmc
(bad)
mov
xor
imul
xchg
outs
int
int
and
cdq
jmp
jp
jb
(bad)
sub
mov
pop
bnd
jmp
(bad)
int
popa
(bad)
jmp
xchg
aam
movs
jae
(bad)
sub
ds
jnp
push
repz
jb
pop
daa
add
loopne
add
jge
ins
arpl
push
sub
ret
test
add
out
jne
mov
enter
dec
sub
and
or
imul
aad
les
ds
push
and
loopne
mov
and
sbb
mov
jp
push
clc
push
fsub
and
sub
xchg
xchg
dec
cmps
or
pop
enter
mov
mov
sbb
push
lods
shl
in
cmc
bound
and
jmp
ds
adc
arpl
mov
shr
test
xchg
xor
and
mov
adc
or
jp
pop
xchg
inc
sub
std
dec
rcr
push
retf
xor
mov
repz
fimul
mov
loop
or
shl
fldl2e
stos
jmp
add
push
pop
pop
mov
xchg
inc
pop
inc
repnz
mov
xor
and
sar
jge
pop
dec
aaa
xlat
push
mov
xchg
and
add
test
das
push
xchg
mov
xchg
jge
xchg
sbb
and
ret
std
mov
pop
mov
and
xchg
repnz
std
ja
adc
(bad)
rol
in
daa
fcomp
pop
icebp
pop
cmp
mov
or
out
fmulp
xor
add
mov
test
popf
or
ss
ins
push
in
mov
mov
(bad)
fstp
xor
jg
fwait
cmc
repnz
pop
add
dec
dec
jne
xchg
xchg
xchg
xchg
sub
stos
sbb
jne
sub
int
cmps
call
lock
push
sbb
(bad)
jle
test
mov
ins
das
sbb
mov
pop
push
mov
mov
jg
std
call
xchg
clc
iret
xchg
pop
dec
cdq
dec
xor
rol
push
sbb
adc
in
ins
inc
pop
inc
out
popf
pusha
jb
add
dec
aas
mov
push
cmp
sub
sbb
pop
jo
inc
cmp
idiv
pop
dec
mov
jge
ret
or
test
outs
into
je
sub
fucomip
add
xchg
inc
out
lods
mov
cmp
mov
xor
shr
and
dec
adc
popf
loopne
inc
mov
dec
scas
and
test
sub
cmp
movs
push
je
popa
jmp
hlt
mov
mov
ins
clc
or
gs
inc
add
fcmovu
es
unpckhps
iret
stc
enter
pop
cmps
cmps
repnz
fptan
sti
push
ret
push
loop
repnz
in
fwait
popf
mov
and
xchg
jle
xlat
icebp
xor
xchg
sbb
jb
mov
movs
jbe
cmp
sar
ins
pop
loop
xor
ret
lahf
fnsave
sbb
push
adc
ins
xor
(bad)
sub
sub
loope
jp
fucomp
in
ja
pop
mov
ficom
jmp
sub
and
or
rcl
int
cld
aam
cmp
jg
push
mov
mov
aas
cmp
mov
sub
in
retf
fst
mov
mov
loop
mov
pushf
jmp
push
add
sti
mov
jne
mov
fldcw
loop
dec
lods
jg
push
aad
cli
xchg
xor
ss
iret
lea
stc
sub
imul
cli
or
lea
mov
lock
xchg
adc
int3
not
rcr
or
aam
out
ss
bound
(bad)
cmp
fidiv
sub
push
inc
fnstenv
movs
ror
dec
push
xlat
sub
outs
adc
sbb
jmp
cdq
sbb
imul
movs
pop
or
mov
push
and
sub
sbb
ret
popa
out
jp
dec
movs
imul
gs
imul
das
stc
test
sbb
jp
inc
es
pop
pop
mov
jns
popa
sahf
cli
imul
xor
movs
sub
cld
add
adc
out
mov
stos
es
call
mov
xchg
ret
pop
cmps
mov
mov
dec
dec
loope
mov
iret
in
pushf
xlat
adc
jge
dec
pop
fsubr
push
cmp
dec
imul
in
out
jge
lea
push
lods
jmp
or
loop
dec
call
outs
adc
retf
mov
xchg
aam
jecxz
mov
pushf
mov
cs
or
dec
mov
push
fst
xor
fs
shl
ret
arpl
add
add
add
push
and
rcr
loope
pop
inc
and
push
aaa
xlat
in
add
jno
aam
cmps
cwde
test
out
push
lea
xor
xchg
mov
jge
xchg
ret
mov
add
mov
je
mov
mov
ins
not
loop
mov
shr
repnz
jb
leave
cwde
pop
adc
mov
xchg
ja
adc
push
and
aaa
outs
xor
add
jb
mov
(bad)
div
enter
out
cmp
aad
and
pop
je
dec
dec
leave
ss
aaa
test
xor
enter
jbe
add
je
popa
jmp
hlt
mov
mov
ins
clc
or
mov
imul
adc
inc
loopne
popf
and
push
enter
hlt
rsqrtps
fstp
aam
mov
cmp
popa
int
std
inc
mov
mov
leave
mov
sub
sbb
dec
sub
xor
push
add
into
shr
sahf
popa
inc
pop
mov
jge
popf
ins
dec
or
push
fst
retf
sbb
fwait
inc
xchg
xor
movs
push
shr
imul
repnz
cmc
sub
inc
xchg
adc
into
jb
sbb
sbb
mov
pop
cmps
pop
ds
sar
jecxz
ins
std
inc
mov
push
mov
pop
xchg
xchg
xchg
ins
xchg
sbb
ret
sbb
and
push
repnz
ds
jb
inc
out
push
outs
mov
xchg
outs
rcr
rcr
adc
stos
(bad)
jmp
fbstp
popa
mov
dec
push
sub
outs
retf
loope
pslld
push
ror
(bad)
pusha
out
push
movs
iret
mov
stos
out
push
push
sub
inc
mov
repnz
mov
int
sbb
popf
popf
inc
das
xor
push
adc
jge
xlat
nop
push
adc
ret
adc
mov
inc
das
cmp
ins
fdivrp
lods
fsub
imul
ret
cmp
into
loopne
shl
push
cmp
mov
xchg
(bad)
popf
mov
repnz
ret
inc
mov
test
fbld
shl
push
jo
bnd
xchg
rcl
outs
inc
repz
int
jge
lea
pop
sub
cmp
cmps
xchg
retf
retf
cmp
stos
int
ds
adc
pop
mov
mov
loop
adc
popa
dec
adc
outs
neg
test
push
mov
dec
mov
setb
xchg
and
dec
cmp
jmp
adc
sbb
sti
pop
(bad)
pushf
jne
jge
ins
ja
(bad)
jmp
xor
std
pusha
in
js
mov
pop
aad
lods
push
pop
mov
mov
or
frstor
cli
jo
sub
and
pop
jns
std
mov
sbb
sub
shl
and
jne
inc
lea
enter
jge
and
pop
nop
or
jge
loopne
dec
aad
cs
add
sub
fsubrp
dec
jns
lea
aaa
mov
or
lea
ret
fist
mov
std
jmp
pop
xchg
hlt
inc
add
or
mov
cmp
mov
add
bound
(bad)
mov
dec
int
mov
xchg
sbb
(bad)
xchg
ror
add
adc
movs
lea
inc
iret
lods
add
mov
loop
movs
cmp
ffree
jg
push
or
cmp
jo
push
mov
data16
mov
cmps
fisub
loopne
sbb
and
and
xor
inc
(bad)
in
adc
pop
and
mov
inc
aad
push
mov
cmps
xchg
push
push
xchg
cmp
push
pop
or
js
popa
out
mov
retf
stos
cmp
push
stos
sar
jne
sbb
(bad)
clc
nop
jno
lods
push
mov
fcmovne
ins
(bad)
ds
fnsave
mov
call
jmp
test
dec
push
or
iret
out
cli
loop
int3
jnp
ret
mov
push
mov
lea
inc
push
and
lahf
jno
ret
test
cwde
ds
mov
imul
xor
stos
jae
sbb
dec
scas
not
js
xchg
in
sbb
inc
vorps
sub
and
push
out
neg
popf
ret
xchg
push
sar
out
fucomip
gs
xchg
lods
push
mov
inc
pusha
cdq
xchg
push
addr16
fldcw
add
adc
retf
shl
or
dec
dec
sbb
mov
mov
popf
(bad)
out
mov
xchg
mov
cmp
bnd
sub
int
inc
or
mov
mov
out
jae
shr
int3
inc
loop
repnz
cmp
mov
(bad)
fcomp
ss
call
sbb
loope
xchg
aad
int
add
out
xchg
mov
lea
sub
mov
push
pop
or
sahf
scas
int
add
sub
mov
adc
lods
add
in
xor
int
std
or
add
imul
ins
inc
loop
repz
sub
int
inc
clc
rcr
shl
lock
loop
jg
xlat
out
(bad)
xor
or
mov
or
xor
sub
loop
or
fs
cmp
jmp
jns
mov
das
movs
push
or
neg
loop
jns
sub
lahf
test
scas
cdq
jge
dec
jb
leave
dec
adc
mov
ins
(bad)
mov
fnsave
outs
inc
in
sbb
sub
in
imul
mov
pop
push
iret
xor
push
add
dec
vpermq
out
push
sahf
xor
or
pop
dec
imul
int
push
adc
sahf
enter
push
pop
pop
and
sub
int3
mov
xchg
or
jo
rcr
test
dec
aaa
retf
bound
or
iret
jne
dec
push
out
xor
pop
stc
repz
or
sbb
sub
out
push
jge
or
stc
out
fcmovnbe
cmp
inc
rol
cwd
(bad)
inc
cdq
leave
mov
loope
ins
push
loop
dec
ds
push
xor
int
jle
push
(bad)
shl
inc
mov
add
(bad)
inc
xor
in
mov
jl
sub
popf
jmp
bound
aam
nop
xchg
xchg
loop
or
clc
fnstsw
in
cdq
jmp
ins
pop
pop
cmps
dec
mov
cmp
add
and
cmp
popf
add
mov
dec
lods
adc
mov
lods
outs
xor
fadd
push
jb
stos
out
sahf
pushf
mov
jae
iret
lods
ret
jge
ret
push
mov
add
fwait
dec
repnz
mov
jge
lods
ins
gs
sar
lahf
frstor
jo
out
scas
adc
mov
cmovge
arpl
int
in
repnz
xor
jle
sbb
ins
popf
test
jno
push
(bad)
mov
lods
mov
pop
in
icebp
add
and
(bad)
in
(bad)
shl
inc
mov
add
mov
jne
and
(bad)
mov
shl
lea
pushf
dec
in
aas
inc
or
or
aad
or
push
shl
dec
movd
and
mov
rcr
fld
push
std
mov
bound
mov
inc
mov
lock
ins
nop
and
add
or
repz
dec
sub
bound
loopne
mov
add
iret
lods
jnp
mov
xor
adc
frstor
int
(bad)
in
push
pop
or
mov
add
loop
sbb
pop
frstor
fisttp
neg
aas
xor
(bad)
leave
out
shl
loop
cs
in
sub
std
ret
enter
adc
mov
aas
inc
add
ds
sub
xor
in
popf
push
jb
mov
inc
dec
jge
xchg
xchg
adc
ret
and
fnstsw
xor
aas
jl
lods
pushf
mov
jae
jb
push
cmp
mov
or
pop
std
sub
ins
das
dec
push
mov
ins
mov
adc
sub
xor
shl
nop
call
and
cmps
loopne
pop
loopne
push
xor
xchg
ins
fcomp
les
add
jns
imul
fnstenv
and
nop
outs
cmp
outs
sub
fdiv
int3
add
adc
inc
lea
inc
ins
pop
sahf
inc
dec
bound
inc
popf
mov
sub
add
adc
arpl
lods
mov
cmps
add
xor
add
jp
addr16
int
bound
in
arpl
adc
dec
cdq
dec
add
ins
fcom
nop
adc
and
std
loope
into
bound
jae
jl
(bad)
push
jge
push
leave
scas
inc
mov
and
(bad)
int3
add
cwde
addr16
psubsb
pop
(bad)
mov
mov
or
or
fisttp
mov
fnstsw
mov
pop
mov
inc
xchg
ins
loop
repz
ret
push
jecxz
and
daa
adc
inc
addr16
fild
pop
ror
outs
loop
int3
or
push
push
xor
call
mov
shl
xchg
mov
loop
das
ret
cmp
and
jo
pushf
in
mov
inc
jae
adc
cmp
rol
ins
(bad)
in
cmp
cmp
repz
dec
sub
dec
outs
jb
inc
mov
dec
data16
das
ins
jecxz
bound
and
int3
cmp
xor
iret
mov
addr16
push
pop
arpl
jl
scas
adc
xchg
popf
daa
adc
mov
lods
ja
mov
xchg
es
outs
ins
or
sbb
xor
cld
add
push
dec
add
fnstsw
repnz
ret
or
(bad)
enter
iret
mov
pop
outs
mov
xchg
cmp
pop
sbb
cmp
int
mov
adc
sti
add
frstor
ds
pop
adc
sbb
in
repz
cmp
xor
or
cwde
inc
div
and
push
cmp
or
std
dec
sub
mov
adc
xchg
or
pop
mov
lea
ins
sti
ds
stc
push
rcr
and
out
push
popf
lea
in
mov
popf
sub
aas
loope
mov
(bad)
sub
ins
xchg
iret
cmp
mov
jl
out
shl
or
cmp
add
and
or
aaa
cmp
push
mov
dec
inc
jg
sub
clc
(bad)
jo
(bad)
enter
jb
aad
cs
xor
bound
sbb
sub
clc
(bad)
jo
scas
sar
inc
push
jb
add
xor
(bad)
rcr
xchg
xor
inc
test
jge
or
mov
lea
movs
sbb
in
ret
and
add
rol
test
pop
dec
shr
ins
iret
lods
mov
jo
or
(bad)
adc
popf
gs
inc
mov
(bad)
iret
lods
mov
sbb
jge
lahf
jecxz
mov
(bad)
out
dec
pop
pop
inc
push
mov
ins
call
cmp
test
int
inc
sub
mov
inc
mov
jge
pop
in
(bad)
outs
sub
mov
add
xor
inc
dec
mov
sbb
or
cld
in
aaa
bound
xor
inc
rcr
cmp
xchg
ds
adc
scas
or
fdivr
in
aaa
arpl
mov
pop
dec
jnp
stos
xchg
push
jge
repnz
scas
sar
xor
std
in
aaa
(bad)
retf
inc
iret
ins
lods
shl
aas
mov
adc
sub
jbe
scas
shl
dec
(bad)
lock
lods
ja
mov
xchg
xchg
cmp
in
cmp
outs
inc
xor
mov
aas
clc
(bad)
push
pop
shl
xchg
cmps
pop
and
sbb
add
and
jecxz
xor
sbb
stc
mov
xor
xor
lock
mov
fstp
clc
frstor
add
jmp
adc
(bad)
int
jge
adc
jno
xor
or
sbb
xor
fsub
inc
std
sub
popf
and
pop
sub
jge
xchg
xchg
in
inc
repnz
and
sub
add
adc
xor
mov
es
add
pop
or
mov
cmp
lods
int
add
in
mov
popa
xchg
xor
bound
sbb
jmp
clc
fisttp
jbe
in
bound
pop
inc
mov
imul
cld
ret
sub
mov
ret
test
push
das
xor
pop
in
mov
jge
and
loop
repnz
cmp
out
in
push
inc
pop
popa
xchg
xor
jge
xchg
sbb
inc
rcl
jbe
push
loop
inc
ins
fiadd
ins
cmp
inc
ins
xchg
loop
aad
test
and
mov
test
(bad)
retf
mov
adc
mov
cmps
xchg
jb
outs
or
sub
cmp
or
bound
out
xchg
xor
cmp
or
inc
std
pusha
adc
dec
enter
push
pop
arpl
ins
fmul
in
inc
ret
xor
fisttp
sbb
in
pop
or
push
js
dec
or
pop
fst
and
in
cmp
into
lds
sub
dec
cli
sar
sub
add
mov
adc
(bad)
repnz
retf
jns
mov
pusha
adc
cmp
push
stos
adc
mov
cmps
xchg
adc
or
xchg
adc
and
in
std
sub
jge
jb
sti
mov
(bad)
jno
pop
sbb
or
and
and
push
std
sub
jge
jb
dec
inc
cmp
lods
jnp
sub
xor
and
fdivp
mov
in
dec
cli
push
xchg
mov
rcr
sbb
xor
fdivr
or
call
int
mov
and
adc
outs
inc
xor
inc
in
(bad)
out
mov
mov
lods
loop
inc
test
jmp
and
dec
adc
sti
xchg
(bad)
mov
outs
mov
test
stc
shl
(bad)
dec
out
(bad)
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
outs
xchg
push
loope
icebp
shr
fisub
into
xor
add
adc
inc
scas
push
pop
mov
outs
xchg
push
loope
icebp
shr
fisub
into
xor
add
adc
inc
scas
push
pop
mov
outs
xchg
push
loope
icebp
shr
fisub
into
xor
add
adc
inc
scas
push
pop
mov
outs
xchg
push
loope
icebp
shr
fisub
into
xor
add
adc
inc
lods
push
pop
ret
dec
mov
sub
mov
ins
nop
lahf
bound
repnz
call
adc
loopne
repz
jecxz
mov
cmp
sub
and
sbb
xor
jns
adc
jmp
xor
jp
bound
cld
sbb
cs
leave
mov
stc
cli
inc
dec
mov
inc
mov
jp
bound
mov
and
xor
add
adc
loopne
lock
shr
pop
mov
outs
nop
lahf
pusha
(bad)
xor
add
adc
add
mov
shr
loop
repnz
and
adc
inc
lods
adc
dec
mov
shr
loop
repnz
and
xor
bound
push
pop
loopne
mov
sub
loop
mov
ret
frstor
xor
inc
in
adc
inc
lods
adc
dec
mov
shr
sbb
ret
sahf
and
jno
add
jb
inc
lods
push
pop
mov
das
xchg
sbb
sub
push
popf
(bad)
iret
jb
inc
lods
push
pop
loope
mov
sub
loop
mov
ret
frstor
int
outs
inc
in
adc
push
xor
mov
xchg
xchg
mov
mov
xor
xchg
scas
adc
inc
lods
push
pop
mov
ins
xchg
sbb
cmp
xor
std
add
adc
inc
lods
push
into
loopne
mov
sub
loop
repnz
fstp
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
adc
mov
jge
ins
xchg
sbb
ret
fnsave
jle
popf
bound
inc
lods
lods
pop
mov
ins
xchg
sbb
ret
lahf
and
int
add
adc
shr
push
pop
pop
dec
mov
sub
loop
popa
jg
sub
jo
add
adc
mov
dec
mov
adc
cmp
and
mov
push
and
push
pop
pop
dec
mov
adc
xchg
sbb
ret
fnsave
jle
popf
bound
inc
lods
pop
mov
ins
xchg
sbb
cmp
(bad)
xor
std
in
adc
mov
dec
mov
sub
loop
mov
cmp
xor
std
xchg
scas
adc
inc
lods
push
pop
mov
xchg
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
sub
add
in
adc
shr
push
pop
pop
dec
mov
adc
xchg
sbb
push
outs
rcr
fstp
std
add
sbb
inc
lods
push
pop
mov
ins
xchg
mov
sub
xor
inc
in
in
push
and
adc
mov
out
shr
loop
or
rcr
pusha
int
std
add
fbld
jb
inc
lods
push
pop
loopne
dec
jge
(bad)
rcr
repnz
and
sbb
inc
push
push
pop
mov
ins
xchg
mov
sub
xor
bound
push
sbb
adc
rcr
ret
frstor
int
std
inc
in
adc
and
push
pop
pop
fdivp
jge
xchg
add
or
rcr
and
mov
popf
bound
rcr
dec
dec
out
shr
jno
repnz
and
mov
push
and
push
pop
pop
fdivp
jge
xchg
add
or
shl
and
xor
in
adc
iret
jb
mov
dec
mov
sub
loop
or
lahf
and
int
inc
in
adc
lea
add
mov
jge
xchg
mov
outs
rcr
(bad)
xor
in
adc
iret
jb
mov
mov
jge
ins
ins
mov
mov
xor
in
adc
push
xor
mov
xchg
xchg
mov
sub
xor
add
sbb
add
mov
sub
loop
repnz
and
xor
add
adc
inc
lods
push
pop
mov
ins
add
or
rcr
and
xor
add
sbb
inc
lods
push
pop
mov
ins
xchg
sbb
sub
std
add
adc
inc
push
push
pop
mov
(bad)
rcr
ret
frstor
int
std
add
popf
bound
mov
pop
dec
mov
sub
loop
repnz
and
xor
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
xchg
scas
adc
shr
push
pop
pop
dec
mov
sub
loop
repnz
and
xor
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
fnsave
in
adc
and
push
pop
mov
ins
ins
mov
sub
int
add
adc
add
mov
sub
jno
repnz
and
xor
add
popf
bound
mov
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
ins
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
xchg
xchg
mov
sub
int
inc
in
adc
jb
add
lock
xchg
xchg
sbb
ret
and
in
adc
jb
inc
lods
pop
mov
ins
ins
sbb
cmp
int
add
jle
popf
bound
add
lock
xchg
add
or
rcr
and
xor
add
adc
(bad)
iret
jb
shr
push
pop
pop
fdivp
jge
xchg
add
or
shl
mov
xor
std
adc
add
mov
adc
ret
inc
lahf
and
int
std
jle
popf
bound
inc
lods
mov
shr
jno
repnz
and
int
add
sbb
add
and
sub
mov
outs
rcr
(bad)
mov
popf
bound
push
pop
pop
fdivp
jge
xchg
ins
loop
repnz
fstp
int
mov
bound
push
pop
xor
lock
ins
xchg
sbb
ret
lahf
and
int
inc
in
adc
iret
jb
mov
mov
jge
ins
add
or
xchg
frstor
xor
outs
inc
scas
adc
lea
inc
lods
adc
fdivp
jge
xchg
ins
sbb
ret
frstor
xor
std
std
in
adc
mov
push
icebp
jge
ins
xchg
sbb
ret
sahf
and
int
add
adc
inc
lods
push
pop
mov
ins
ins
sbb
ret
dec
popa
int
add
jle
popf
bound
mov
pop
dec
mov
shr
loop
repnz
and
int
xchg
scas
adc
add
mov
sub
loop
popa
jle
sub
xor
in
adc
lea
shr
push
pop
pop
fdivp
jge
xchg
add
or
shl
mov
xor
std
jle
popf
bound
inc
lods
pop
mov
ins
rcr
ret
frstor
int
std
add
adc
inc
adc
mov
sub
jno
repnz
arpl
jo
add
popf
bound
mov
mov
ins
xchg
sbb
ret
dec
popa
int
add
lea
inc
lods
push
pop
mov
ins
ins
mov
sub
xor
add
adc
inc
lods
push
pop
mov
xchg
xchg
sbb
cmp
int
std
add
adc
inc
lods
push
pop
mov
cs
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
(bad)
rcr
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
add
or
shl
and
xor
add
adc
shr
adc
dec
mov
sub
loop
repnz
popa
int
outs
inc
in
adc
into
jb
mov
dec
mov
cmp
sbb
ret
frstor
int
std
add
popf
bound
add
icebp
jge
xchg
xchg
mov
mov
xor
add
sbb
add
icebp
jge
xchg
xchg
sbb
cmp
int
outs
inc
in
adc
into
jb
mov
mov
sub
mov
outs
rcr
(bad)
xor
in
adc
lea
pop
pop
dec
and
sub
jno
repnz
and
int
add
adc
inc
push
push
pop
xor
mov
jge
xchg
mov
sub
int
add
adc
add
icebp
jge
xchg
add
or
rcr
(bad)
mov
popf
icebp
into
jb
mov
dec
dec
jge
cs
sbb
ret
dec
popa
int
add
jle
popf
bound
add
icebp
jge
xchg
ins
mov
sub
xor
add
adc
mov
fdivp
jge
xchg
xchg
mov
mov
xor
xchg
scas
adc
inc
lods
lods
pop
mov
ins
xchg
sbb
cmp
int
add
push
xor
mov
(bad)
rcr
ret
frstor
int
std
add
adc
mov
mov
sub
loop
repnz
popa
int
add
in
adc
inc
push
push
pop
mov
ins
xchg
loop
or
rcr
mov
xor
std
jle
popf
bound
inc
lods
into
loope
mov
adc
xchg
sbb
ret
dec
popa
int
add
in
in
popf
bound
push
into
loope
mov
adc
xchg
sbb
ret
dec
popa
int
add
(bad)
loope
inc
lods
lods
into
loope
mov
sub
loop
repnz
and
xor
in
adc
into
jb
mov
mov
sub
mov
outs
rcr
(bad)
xor
add
adc
shr
push
pop
pop
fdivp
jge
xchg
add
or
shl
mov
xor
std
jle
popf
bound
inc
lods
pop
xor
mov
jge
xchg
sbb
ret
dec
popa
int
add
push
xor
mov
ins
xchg
loop
dec
repnz
and
xor
in
adc
into
jb
mov
mov
sub
mov
outs
rcr
(bad)
mov
bound
push
rcr
dec
dec
jge
ins
xchg
sbb
cmp
xor
popf
bound
add
mov
sub
loop
or
dec
popa
int
add
push
xor
mov
ins
xchg
loop
dec
repnz
and
xor
xchg
scas
adc
inc
push
push
into
loope
mov
adc
xchg
sbb
ret
sahf
and
int
inc
in
adc
push
xor
mov
ins
xchg
loop
dec
repnz
and
mov
bound
jb
inc
lods
push
into
loope
mov
cmp
sbb
sub
adc
inc
scas
push
pop
mov
outs
xchg
pop
loop
repnz
and
xor
add
adc
inc
scas
push
pop
mov
outs
xchg
push
loope
icebp
shr
fisub
into
xor
add
adc
inc
scas
push
pop
mov
outs
xchg
push
loope
icebp
shr
fisub
into
xor
add
adc
inc
scas
push
pop
mov
outs
xchg
push
loope
icebp
shr
fisub
into
xor
add
adc
inc
scas
push
pop
mov
ins
ret
jb
bound
xchg
popa
int
mov
xor
pop
fisttp
fst
retf
push
call
popa
movs
pop
sbb
mov
mov
aam
int3
xor
(bad)
fst
in
pop
rcr
dec
mov
dec
call
jb
push
(bad)
sub
and
adc
or
jb
outs
repnz
mov
cmps
fld
pop
pushf
push
cmp
enter
shr
or
jp
jg
dec
mov
sar
jbe
jge
das
lea
clc
ss
xchg
sub
inc
repnz
fs
arpl
test
jno
inc
rol
pop
fimul
ret
and
out
fsubr
sar
jle
bound
mov
mov
adc
(bad)
call
ds
pop
mov
mov
je
xor
cmp
ds
cs
lock
je
aas
int
mov
cmps
popf
push
mov
ss
xor
or
push
jmp
(bad)
pop
mov
or
stos
inc
mov
push
rol
in
adc
in
cmp
fs
pop
mov
mov
jae
pop
sahf
inc
lahf
push
retf
add
xor
add
and
retf
adc
sub
cmp
xchg
jb
inc
mov
mov
sub
cmp
(bad)
or
(bad)
cmp
mov
xchg
mov
inc
mov
mov
adc
adc
cmp
mov
pop
scas
push
popf
popa
mov
popa
cld
adc
xor
xor
and
cmp
mov
dec
mov
mov
push
mov
inc
fst
xor
sub
cmp
mov
dec
or
data16
inc
mov
mov
sub
pop
(bad)
retf
or
lods
imul
mov
jbe
dec
fnstcw
in
pop
cmp
or
rcr
mov
scas
bound
jae
add
push
rol
in
arpl
fcom
mov
js
popf
push
mov
sub
cdq
sub
jb
sub
sub
mov
mov
mov
sub
cdq
sub
or
out
rcl
jl
dec
mov
bound
push
mov
add
ror
pop
out
xchg
fs
jge
ins
test
test
xlat
push
into
pop
fst
sub
dec
lds
pop
lods
inc
cmp
mov
xchg
in
jge
mov
jge
and
adc
lea
xchg
dec
popf
jge
fs
stc
push
repnz
mov
data16
jecxz
fisub
ficom
ds
sbb
or
xchg
popa
mov
xchg
ins
mov
mov
jbe
bound
xor
(bad)
or
cmp
xchg
dec
(bad)
push
mov
nop
xchg
push
pushf
jno
jno
xor
dec
std
sbb
cmp
cmp
push
mov
sbb
inc
lea
imul
stc
cs
mul
(bad)
push
out
loop
test
cmps
mov
mov
jbe
or
aaa
push
(bad)
sbb
jae
pushf
repnz
push
mov
jg
adc
fidivr
xor
(bad)
or
cmps
fnstsw
ins
jl
in
ja
xor
push
cmp
aam
pop
iret
adc
sbb
and
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
loop
repnz
mov
ins
xchg
pushf
arpl
fbld
iret
xor
add
adc
loopne
lock
sub
mov
outs
xchg
sahf
popa
mov
inc
scas
push
fisub
into
xor
add
adc
loope
icebp
shr
pop
mov
outs
xchg
sahf
popa
mov
inc
scas
push
fisub
into
xor
add
adc
xchg
aas
mov
sub
loop
xchg
cmp
and
popa
popf
or
lods
push
cmp
dec
fistp
out
or
jl
or
mov
cwde
add
ja
adc
es
and
adc
or
mov
dec
scas
pop
std
add
jnp
add
aaa
add
dec
aad
in
int
or
fst
sbb
inc
mov
inc
call
sub
add
jge
sub
pop
mov
bnd
outs
xchg
mov
mov
adc
or
xchg
and
and
jb
aaa
xchg
push
ret
mov
xor
jb
xor
rcl
test
loop
mov
or
arpl
ja
and
sbb
jg
outs
mov
rcr
dec
mov
sub
mov
and
xor
add
adc
loope
icebp
shr
pop
mov
outs
xchg
sahf
popa
mov
inc
scas
push
fisub
into
jb
inc
fistp
pop
shr
inc
sub
pop
loop
mov
lods
pop
mov
std
je
ja
pop
call
xor
js
or
sar
jno
xor
add
push
mov
mov
add
jb
push
mov
lea
(bad)
stc
pop
lods
pop
aam
lea
pop
retf
cs
pop
mov
arpl
pushf
inc
mov
push
popf
and
push
ror
lods
es
cmp
xchg
outs
mov
dec
movs
dec
mov
push
mov
ja
pop
(bad)
sbb
and
and
jge
add
jg
or
fcmovu
and
pop
mov
and
sbb
inc
out
adc
loop
mov
out
mov
mov
mov
cmps
std
dec
in
adc
add
iret
and
jb
sar
adc
inc
loope
and
mov
add
push
xchg
daa
fnstcw
cmp
sub
push
mov
js
jl
dec
mov
(bad)
cmp
adc
add
(bad)
pusha
xlat
or
(bad)
popa
popf
cmp
and
adc
inc
cdq
push
pop
(bad)
ficom
add
pop
mov
outs
xchg
sahf
popa
mov
inc
scas
push
fisub
into
xor
add
adc
loope
icebp
shr
pop
mov
outs
xchg
sahf
popa
mov
inc
scas
push
fisub
into
xor
add
adc
loope
icebp
shr
pop
mov
outs
xchg
sahf
popa
mov
inc
scas
push
fisub
into
xor
add
adc
loope
icebp
shr
pop
mov
outs
xchg
sahf
popa
mov
inc
scas
push
ficom
clc
adc
xor
add
xor
inc
std
mov
movs
inc
xchg
outs
ret
push
inc
shr
cmp
lods
add
dec
cmps
dec
mov
mov
jbe
inc
std
push
leave
ins
fldenv
lock
loop
xchg
fs
pop
loop
mov
or
inc
std
jno
jl
bound
aaa
jge
cmp
cld
sbb
loop
mov
dec
mov
lea
jle
pop
les
shr
mov
pop
(bad)
je
push
mov
mov
mov
sbb
and
mov
icebp
psubd
ror
add
in
add
jl
outs
sahf
adc
das
call
cmp
shr
pop
mov
outs
xchg
sahf
popa
mov
inc
scas
push
fisub
into
xor
add
adc
loope
icebp
shr
pop
mov
outs
xchg
sahf
popa
mov
inc
scas
push
fisub
into
xor
add
push
add
dec
push
into
and
pop
test
push
data16
mov
jb
pop
retf
fisubr
test
scas
sub
inc
fnstsw
push
popf
bound
and
shr
sar
or
sbb
mov
mov
dec
mov
xchg
js
jle
or
ret
into
dec
mov
in
ins
rep
xchg
mov
xchg
mov
jge
sub
(bad)
xor
std
js
or
mov
mov
psrlw
inc
clc
push
sub
(bad)
in
ds
outs
and
mov
scas
inc
cdq
push
lahf
adc
das
mov
bound
and
dec
in
sbb
pushf
dec
stos
pop
repnz
test
daa
in
popf
lea
retf
ds
sbb
outs
repnz
ret
scas
and
repz
jmp
cmp
ins
mov
out
cld
js
bound
inc
mov
jle
push
loop
fdivr
call
retf
ins
repz
test
data16
popa
cld
pop
call
shl
int3
aas
cs
sub
xor
dec
in
dec
int
frstor
xor
adc
popf
push
cmp
add
push
loop
sar
push
mov
ins
mov
or
shl
aas
mov
jmp
sti
xor
ret
mov
lods
push
(bad)
imul
shl
enter
cmp
cmp
ins
imul
fs
cmps
inc
mov
xchg
jbe
jnp
pop
inc
lea
pop
(bad)
ins
les
ins
idiv
lock
inc
cwde
jo
and
adc
lods
and
mov
dec
lds
imul
mov
test
int
call
and
cmp
lss
push
jg
push
mov
sar
add
add
cmp
sbb
lods
inc
mov
xchg
push
mov
daa
jmp
shr
jge
ins
cmc
pop
xchg
xor
in
jbe
jae
add
jb
push
call
out
(bad)
ins
xchg
imul
pop
rcr
dec
int
std
jb
pop
ret
add
add
fisttp
loope
loopne
xchg
jle
mov
mov
add
jb
sub
cmp
rol
je
lods
push
mov
xchg
push
pop
mov
jbe
adc
add
jno
adc
mov
cs
pop
mov
cmpps
mov
and
xor
add
adc
loope
icebp
shr
pop
mov
outs
xchg
sahf
popa
mov
inc
scas
push
fisub
into
xor
add
adc
loope
icebp
shr
pop
mov
inc
movs
scas
popa
mov
inc
scas
push
fisub
into
xor
add
adc
loope
icebp
shr
pop
mov
outs
xchg
sahf
popa
mov
inc
scas
push
fisub
into
xor
add
adc
loope
icebp
shr
pop
mov
pop
mov
mov
jnp
(bad)
iret
xor
add
cmp
(bad)
sub
jb
dec
pushf
cmp
dec
mov
ja
(bad)
cmc
pop
mov
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
iret
dec
mov
sub
loop
repnz
and
xor
add
adc
inc
lods
aas
pop
mov
ins
xchg
sbb
ret
frstor
int
nop
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
mov
adc
bound
push
pop
iret
dec
mov
sub
loop
repnz
and
xor
add
adc
inc
scas
push
pop
mov
outs
xchg
push
loop
bnd
fisub
into
xor
add
adc
inc
std
adc
jmp
idiv
pop
mov
(bad)
outs
cmp
test
xchg
sub
call
div
cwde
sub
cmp
dec
test
movs
outs
xchg
cs
jnp
jb
int3
outs
fstp
pop
mov
pop
lods
inc
movs
mov
imul
xchg
pusha
fisub
jae
arpl
js
jne
pop
dec
in
sbb
jg
jb
and
es
pop
ins
xchg
push
fstp
icebp
inc
out
nop
pusha
fwait
je
sbb
in
lahf
pop
test
(bad)
test
jl
ins
jge
dec
push
scas
test
retf
mov
inc
loop
cmp
fist
and
pop
or
daa
pop
inc
in
adc
mov
dec
mov
fwait
jb
xor
mov
idiv
add
fidiv
stos
cld
and
aas
mov
in
pop
xor
jp
push
and
lock
and
xor
sar
jp
ret
int3
sbb
and
push
mov
popa
outs
mov
ins
sub
repnz
cli
push
loope
adc
add
add
or
mov
mov
ins
mov
cmp
fstp
out
bound
(bad)
cli
cmp
lock
ds
xchg
dec
repz
out
cmp
das
int
xlat
push
push
je
add
daa
push
mov
mov
fs
lock
and
dec
setl
inc
cmps
push
lods
mov
jmp
xchg
push
mov
rcr
cmp
inc
(bad)
je
adc
inc
lods
retf
pop
xlat
dec
mov
add
(bad)
or
rcr
mov
out
pop
pop
pop
lea
inc
lahf
dec
pop
mov
ins
nop
adc
repnz
sub
pop
lea
adc
inc
lods
dec
fbld
sbb
jl
jle
outs
scas
dec
rcr
sub
mov
pusha
lock
lea
inc
fdivr
cs
and
sbb
dec
loopne
loop
repnz
scas
sub
xor
sub
xchg
loopne
inc
pop
aad
ret
dec
mov
mov
sti
jnp
inc
call
mov
sbb
inc
fnsave
fisttp
jae
push
xchg
sbb
loop
mov
std
imul
aad
adc
dec
mov
jecxz
xchg
inc
loop
popf
pop
lods
sub
pop
xchg
adc
push
jmp
ror
jg
out
out
mov
rcr
push
adc
inc
mov
mov
jno
sub
mov
std
or
adc
inc
lods
cmp
sbb
idiv
push
rcr
and
jnp
jo
aad
(bad)
in
aam
rcl
mov
les
test
ins
xchg
xor
push
hlt
push
cmc
(bad)
into
sub
dec
rcl
sbb
outs
mov
mov
jb
jne
(bad)
jmp
push
sub
cmp
out
xchg
fs
push
xchg
pop
xchg
iret
dec
mov
adc
jmp
stos
and
sbb
add
jb
arpl
mov
add
ja
cs
push
jecxz
fnstcw
jecxz
fcom
add
pop
nop
dec
mov
lds
fwait
inc
(bad)
dec
(bad)
sahf
or
jp
sub
add
fwait
jo
jns
dec
retf
xchg
inc
mov
push
fist
retf
xor
inc
(bad)
aaa
sbb
inc
retf
adc
data16
sub
stos
dec
cmps
test
retf
ins
mov
dec
out
xor
sub
cmp
xor
sbb
jae
inc
xchg
pop
xchg
mov
add
jmp
push
aam
scas
cmp
(bad)
and
cmp
mov
mov
ja
or
push
aam
rcl
sar
bound
dec
mov
cmps
pop
mov
mov
fld
push
je
aaa
jmp
retf
adc
sbb
add
adc
or
sbb
xor
add
xchg
aas
cmps
jns
mov
movs
push
mov
(bad)
fstp
cmp
inc
fdiv
iret
gs
mov
cmp
cmps
rcl
cmp
ss
out
push
fild
xor
cmp
adc
sbb
mov
mov
mov
push
push
mov
sbb
sub
les
outs
cmp
stc
jb
xor
xor
adc
or
imul
jge
test
jbe
jge
popa
cwde
cmp
ror
add
js
jns
push
mov
mov
push
les
jbe
mov
mov
(bad)
push
mov
sbb
pop
mov
push
mov
jbe
add
ss
dec
cmp
or
push
mov
sahf
pop
mov
mov
pushf
jbe
jno
push
in
mov
retf
sub
or
dec
out
in
adc
iret
push
test
pop
into
jo
and
lock
outs
xchg
push
loopne
popf
pop
nop
and
push
xchg
data16
icebp
sub
aas
out
ror
imul
iret
aaa
std
add
push
xchg
add
lods
cmp
push
cmp
xor
push
shr
add
hlt
sub
sbb
test
fdivr
inc
shr
fs
push
scas
and
mov
jbe
xor
add
pop
mov
int
fisttp
test
ret
dec
ret
mov
ins
cwde
adc
leave
daa
out
xor
mov
add
push
xchg
xor
mov
jno
add
push
mov
int3
dec
(bad)
jl
push
loop
mov
mov
mov
and
jae
or
jb
cs
cmp
sub
ds
add
sbb
mov
mov
dec
stos
adc
add
add
test
icebp
jl
dec
cmps
pop
mov
lds
ins
test
adc
push
aam
mov
ror
jmp
out
nop
add
jns
inc
mov
mov
sahf
jae
xor
es
enter
cmp
or
psllq
or
mov
sti
jne
jl
(bad)
xor
sub
and
sbb
pop
fwait
jb
jns
movs
mov
mov
call
push
aam
cmps
cmp
push
mov
pop
xchg
outs
cld
pop
lea
mov
test
pushf
inc
cwde
pop
jmp
sub
push
sub
dec
mov
in
add
jo
pop
xchg
rol
movs
inc
mov
call
ds
and
jp
or
push
lea
push
mov
mov
jge
push
sbb
es
cmp
(bad)
sbb
sbb
imul
push
mov
aad
outs
ret
add
adc
or
scas
cmp
mov
add
jo
ins
mov
scas
sub
jae
and
xor
sub
cmp
cs
data16
push
mov
idiv
enter
dec
mov
jl
inc
in
mov
in
and
jge
adc
ror
dec
mov
inc
mov
popa
stc
ud0
xchg
xor
xor
jo
sbb
push
lock
jle
pop
mov
mov
mov
cs
or
and
loope
hlt
jl
das
xchg
dec
lods
pop
cld
lods
dec
mov
ja
adc
pusha
outs
and
sbb
xor
out
paddw
mov
sub
daa
fnstsw
sbb
sub
push
repz
fst
xchg
xor
ret
and
lea
xlat
jecxz
or
imul
std
lock
repz
jle
adc
mov
jecxz
int3
icebp
adc
dec
idiv
imul
loop
and
stc
ins
pusha
int3
jb
cmp
pop
add
lds
das
inc
in
adc
loop
addr16
mov
ins
dec
fistp
jne
and
push
adc
sub
in
jl
imul
scas
xor
push
popf
xchg
jge
jae
and
push
push
mov
dec
xchg
or
mov
xor
pop
push
popf
sub
sub
cmp
lods
push
in
and
jg
in
adc
adc
mov
lods
pop
lahf
xchg
jl
cmp
cmp
or
pop
fsub
mov
lods
fs
dec
pop
xchg
inc
jmp
(bad)
ins
bound
push
frstor
lea
lahf
popa
or
mov
sbb
lahf
jg
jb
sub
sub
loop
repnz
and
xor
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
pop
mov
ins
xchg
sbb
ret
frstor
int
std
add
adc
inc
lods
push
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
arpl
jae
inc
push
push
push
and
adc
or
cmp
sub
pop
sbb
adc
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
push
inc
push
daa
and
xor
push
adc
ret
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
es
dec
xchg
sub
xor
sti
and
cmp
mov
mov
mov
rcr
push
nop
data16
mov
shr
jecxz
xor
jmp
cmp
jg
jnp
sbb
fist
and
inc
add
repz
mov
or
xchg
lods
out
leave
(bad)
mov
push
pop
jg
sbb
add
push
pop
and
xchg
xchg
adc
inc
jnp
add
(bad)
push
es
jae
add
xchg
xchg
mov
mov
and
imul
arpl
push
inc
jmp
mov
pop
in
jo
or
aam
out
enter
ds
or
sti
push
(bad)
xchg
push
test
mov
sbb
adc
pop
jecxz
mov
dec
nop
shl
xchg
shr
es
mov
mov
xor
mov
push
sahf
sbb
mov
adc
push
cmc
xlat
bound
scas
arpl
pop
test
mov
add
shl
mov
mov
xor
lods
and
push
cld
xchg
push
cmps
loop
into
jp
xchg
shr
adc
jp
sar
cli
mov
fild
cld
fist
jecxz
data16
cld
fist
sbb
(bad)
rcl
ss
mov
addr16
pop
add
mov
dec
push
sub
inc
and
inc
push
scas
in
jge
inc
stos
push
icebp
idiv
jnp
xchg
loope
div
and
or
and
mov
in
mov
mov
mov
test
jnp
js
inc
mov
mov
push
adc
in
out
jp
cmps
and
sub
push
loop
push
cmps
and
xchg
cmps
imul
xchg
xchg
arpl
sub
ss
dec
arpl
pop
inc
add
ss
xor
out
adc
sahf
pop
rcr
pop
(bad)
hlt
dec
scas
xchg
int
and
clc
out
dec
push
fcomp
push
ficomp
xchg
push
shr
jb
cmp
mov
into
push
push
call
push
adc
jle
ins
rcr
imul
leave
es
or
arpl
inc
nop
push
push
cmp
mov
mov
jecxz
push
xchg
jae
popf
js
scas
es
and
jmp
outs
loope
test
sbb
adc
xor
call
imul
adc
data16
scas
arpl
add
aad
ret
xchg
jecxz
psrld
ss
add
in
and
ret
fidivr
xchg
xchg
sub
mov
sub
fldenv
clc
inc
(bad)
std
cmp
addr16
sub
cmps
push
mov
fs
out
jge
mov
xchg
xchg
push
mov
shl
arpl
rol
adc
nop
aaa
sub
cs
loop
adc
out
ss
mov
add
cmc
xor
inc
cwde
cmps
jecxz
jle
aas
es
scas
div
fs
cmc
dec
jae
push
popf
sub
jbe
adc
and
mov
dec
sbb
and
pop
test
push
jecxz
add
sub
mov
xchg
sub
out
aaa
mov
adc
inc
cmp
sti
push
adc
inc
int3
imul
jmp
or
cmp
rcl
es
cmc
and
adc
pop
lahf
loopne
and
xchg
daa
jecxz
inc
dec
fcmovnbe
in
bound
jae
sub
ss
fild
in
das
imul
out
or
scas
arpl
jbe
pop
add
loopne
imul
out
inc
jnp
pop
cmp
test
pop
ret
and
retf
inc
fwait
mov
inc
or
in
cmc
cmps
mov
or
(bad)
sub
adc
cmps
xchg
xor
mov
sti
mov
cmps
mov
xchg
shr
not
sub
dec
ins
ret
rol
add
adc
mov
jecxz
rcr
push
sbb
loopne
mov
xchg
adc
xor
cmp
dec
xrelease
rcr
pop
mov
(bad)
aam
ins
ds
ss
pop
and
and
xor
ret
mov
pop
jbe
xchg
adc
cmp
retf
add
jno
ret
outs
sbb
imul
mov
ss
cmp
into
imul
or
sti
and
data16
loopne
sub
out
dec
jl
push
jbe
leave
clc
rcl
lods
cmp
push
out
bound
sbb
pop
mov
xor
outs
mov
push
push
popf
sbb
push
sbb
inc
or
(bad)
dec
mov
pop
or
cmp
sub
fnstenv
ss
mov
sti
sub
jecxz
cmp
shr
mov
gs
stc
xchg
jmp
arpl
fucomp
stos
ret
ret
dec
xchg
adc
cmp
mov
scas
push
fdiv
test
stos
adc
and
mov
ret
push
sub
push
jge
sub
ss
adc
outs
ss
add
push
pop
xchg
scas
mov
xchg
mov
pop
ror
jne
imul
adc
and
es
inc
sbb
pop
hlt
mov
(bad)
repz
test
xchg
fisub
js
add
xor
push
cmps
adc
lea
jp
or
xchg
push
mov
add
xor
data16
xchg
mov
pop
push
jo
ins
popa
and
(bad)
imul
out
je
pop
push
cld
adc
jbe
dec
movs
les
shl
cs
ds
imul
push
adc
jbe
push
test
mov
push
and
xchg
pushf
ss
mov
adc
push
cmpxchg
sub
lds
adc
loopne
jg
(bad)
test
jmp
stos
jp
mov
mov
pop
das
call
ins
out
cmp
adc
mov
jae
cmc
inc
inc
test
bnd
test
mov
push
es
fiadd
repnz
fdiv
movs
cmc
test
ss
add
jmp
sub
out
fild
xor
sbb
cmp
mov
mov
adc
push
addr16
xor
mov
pop
mov
xchg
sbb
mov
inc
adc
adc
mov
arpl
and
push
cld
xchg
sahf
outs
in
jns
aam
mov
div
jns
ss
div
fsub
jbe
mov
cmps
cmp
mov
inc
adc
movs
mov
push
push
cs
and
xchg
and
mov
repz
push
repz
(bad)
into
data16
pushf
pop
mov
jae
xor
adc
pop
pop
pop
mov
aas
cmp
pop
mov
call
xor
dec
and
push
mov
outs
push
or
add
mov
xchg
ins
push
sub
xor
jno
add
stos
movs
jecxz
or
adc
xor
idiv
push
adc
add
add
adc
cmp
aas
ins
mov
lods
adc
enter
shr
dec
mov
sahf
pop
xor
xchg
xchg
fisub
scas
xchg
jno
ss
(bad)
xlat
lods
mov
mov
std
push
jp
ins
out
cmp
xchg
ret
or
fwait
lea
(bad)
and
adc
and
push
jmp
idiv
out
fiadd
push
sti
adc
stos
ss
retf
add
out
push
cmp
xor
pop
imul
(bad)
stos
jbe
mov
inc
push
mov
call
mov
ret
aam
adc
jp
jl
ret
es
push
mov
xor
push
ret
movs
and
gs
out
jnp
add
scas
dec
retf
out
call
btc
adc
loop
adc
lods
stos
jo
push
inc
lahf
lods
in
jle
mov
test
movs
js
jge
loop
xchg
jmp
pop
lea
add
xor
scas
call
dec
push
out
stos
scas
dec
adc
mov
in
aas
data16
xor
xchg
shl
cmp
pop
out
jge
out
lds
mov
dec
popa
push
add
pop
push
dec
sbb
mov
jo
xor
ficomp
ror
push
or
scas
jmp
mov
dec
loop
loop
mov
pop
adc
fild
arpl
pop
xor
dec
dec
mov
sbb
dec
arpl
outs
mov
jl
(bad)
lods
jmp
sub
add
fucomi
fsubr
mov
pop
outs
cmps
fnsave
mov
lea
push
push
aas
gs
mov
enter
push
mov
inc
ficomp
loope
jo
push
mov
sub
sbb
dec
pop
sub
pop
adc
mov
xchg
cs
jne
add
es
jbe
cwde
or
shr
xchg
cmp
stos
mov
xchg
inc
cs
enter
pop
push
jl
add
sub
nop
lods
pop
cmp
mov
jae
push
add
cmp
ins
outs
pop
adc
(bad)
retf
push
out
pusha
pop
mov
and
cs
dec
push
pop
mov
xor
push
dec
loopne
mov
jbe
rcl
out
sub
add
inc
ss
mov
std
cmp
dec
or
push
cmps
mov
loopne
imul
popa
cmp
jae
pop
mov
or
fucomp
sub
xchg
xchg
cmps
jmp
push
or
ds
and
cmc
push
xor
cwde
fldpi
aas
jecxz
retf
sbb
cmp
neg
push
imul
in
add
or
pop
sbb
and
cmp
stos
(bad)
cmp
(bad)
pop
cmps
ret
imul
pop
enter
daa
mov
lods
ret
push
mov
xor
xor
dec
js
lea
mov
jmp
je
or
jae
(bad)
retf
sbb
xchg
cld
push
inc
push
popf
xchg
gs
test
push
jb
loope
jo
into
mov
push
jae
push
mov
inc
cmps
sbb
iret
bound
lahf
sub
mov
in
adc
call
mov
jae
xor
push
push
pop
cli
mov
xchg
cs
ds
and
xchg
cmp
data16
xor
add
push
xchg
pop
pop
loope
mov
(bad)
std
sub
call
pop
push
lahf
test
es
inc
fwait
pop
sbb
jle
bound
imul
dec
ror
(bad)
xchg
jle
je
push
adc
and
inc
pop
add
ret
les
jle
test
ss
into
inc
fisubr
xor
push
mov
cmps
jmp
xor
cs
xchg
cmp
push
push
lods
and
jae
jb
xchg
sub
lahf
mov
in
cmps
jnp
cmp
pop
outs
add
cmps
dec
or
xor
mov
pop
and
lahf
call
rcr
hlt
mov
jg
ins
out
mov
or
sahf
ret
fild
cmps
push
fdiv
imul
jecxz
psrld
xor
push
push
sbb
int3
mov
xchg
cmp
dec
mov
jb
mov
sub
inc
push
adc
or
jge
scas
out
xor
pop
add
mov
leave
arpl
pop
add
dec
pop
outs
sub
adc
lds
xor
or
mov
aaa
xlat
xchg
cmps
icebp
xor
int
sbb
lods
sti
mov
out
stos
cmp
lods
nop
jp
inc
enter
jp
inc
cmp
cdq
out
loopne
les
aaa
sbb
jne
push
push
nop
jbe
call
call
movs
addr16
nop
rol
enter
out
inc
jmp
bound
movlps
dec
cdq
xchg
ins
and
stc
es
and
push
mov
mov
out
lods
inc
in
out
rep
ret
pop
test
div
lods
or
(bad)
pop
xchg
and
xchg
mov
cmps
mov
mov
dec
adc
inc
dec
mov
das
es
inc
add
adc
pop
mov
xchg
sahf
shl
cs
test
pop
enter
push
aas
mov
mov
adc
mov
cmps
mov
rcl
push
cli
cmps
div
push
jmp
inc
pop
pop
adc
rol
jb
xor
stos
stos
dec
lahf
not
jg
ss
sbb
or
push
arpl
or
xor
inc
rcr
dec
xor
ret
into
out
ss
stos
pop
xchg
std
mov
jbe
sub
iret
push
sahf
daa
cmc
cmps
jb
sar
push
daa
(bad)
leave
out
dec
repz
push
push
js
ror
add
nop
cmp
jecxz
or
push
(bad)
ror
add
and
imul
out
test
xchg
cmp
inc
push
lahf
mov
mov
jle
add
cmps
xchg
bound
mov
lds
add
in
outs
jbe
inc
lds
jle
dec
add
jb
(bad)
xchg
loopne
lock
cmps
push
scas
out
sub
adc
add
out
mov
push
adc
fwait
push
retfw
mov
dec
test
idiv
aad
inc
iret
idiv
xchg
into
(bad)
jnp
xlat
or
mov
scas
add
adc
jecxz
adc
mov
stos
pop
jnp
push
inc
(bad)
imul
test
jle
push
jecxz
jl
mov
scas
mov
add
cmps
or
outs
out
cli
cmps
inc
push
sbb
(bad)
mov
push
retfw
(bad)
gs
lds
jle
mov
stc
mov
mul
outs
dec
push
jmp
sub
xchg
jecxz
test
and
das
(bad)
out
jge
or
inc
mov
outs
cmps
jbe
add
push
scas
sub
xor
shl
in
test
adc
dec
cs
call
cmps
jecxz
jae
clc
sbb
mov
fwait
rol
data16
adc
aas
jecxz
mov
jge
lods
adc
fwait
jne
push
mov
or
mov
xor
mul
lods
into
data16
ficomp
xchg
data16
shl
mov
shl
ret
(bad)
adc
movs
lahf
dec
(bad)
add
mov
call
adc
mov
xor
push
xchg
stc
xchg
arpl
add
pop
sub
cmps
(bad)
dec
push
push
inc
dec
mov
sahf
out
es
(bad)
push
mov
arpl
push
mov
fist
int
mov
mov
sbb
test
ss
into
fwait
scas
outs
jae
xchg
add
adc
mov
shr
aaa
jne
xor
inc
mov
fwait
rol
fisub
add
bound
jo
les
adc
add
sbb
test
iret
xor
mov
out
addr16
lahf
cmp
outs
test
inc
mov
and
push
inc
jb
(bad)
out
jae
pop
xchg
dec
jnp
ror
retf
fnstenv
ret
inc
into
adc
mov
inc
int3
jmp
sbb
adc
sahf
imul
dec
and
pusha
sub
sbb
outs
cmp
mov
jecxz
push
stos
es
inc
push
sbb
xor
fist
jecxz
repz
nop
cld
retf
or
dec
(bad)
adc
mov
nop
loope
outs
dec
jle
add
or
iret
mov
arpl
jae
mov
mov
aad
and
imul
xchg
or
ins
fs
xchg
scas
(bad)
arpl
stos
adc
jmp
dec
jnp
call
arpl
or
cld
fstp
inc
cmp
sub
mov
pop
stos
(bad)
mov
mov
data16
mov
out
inc
std
mov
pop
jae
into
(bad)
(bad)
outs
and
mov
sbb
push
or
dec
sbb
mov
fisubr
push
stos
es
inc
push
push
cmps
data16
add
sbb
push
sub
out
mov
sbb
ins
leave
jae
push
dec
scas
jmp
repz
cmps
cmps
dec
xor
imul
call
rcl
mov
cld
inc
push
shr
mov
or
bound
mov
sbb
pushf
fidivr
fwait
data16
ins
jecxz
add
xor
mov
or
ins
pop
or
cmp
xchg
loopne
fimul
jmp
jbe
mov
mov
repz
sbb
mov
jnp
mov
(bad)
outs
stc
pop
jmp
xor
add
sub
ss
sub
sbb
es
cmp
(bad)
push
dec
and
jp
retf
xor
cld
adc
(bad)
sbb
xor
pop
jnp
dec
xor
mov
add
data16
retf
(bad)
fistp
mov
outs
aas
sbb
jne
inc
(bad)
(bad)
jo
leave
inc
mov
lods
retfw
lock
inc
fcomi
pop
pop
in
repz
add
pop
sbb
int3
inc
leave
sub
jmp
mov
pop
add
ret
ret
push
xchg
push
lods
jnp
dec
mov
xchg
es
adc
scas
jp
inc
mov
push
xchg
adc
pop
jae
repz
(bad)
xchg
arpl
(bad)
adc
jmp
fcmovne
cld
nop
sti
mov
jle
jns
lds
cs
sub
out
leave
mov
and
xor
dec
outs
(bad)
or
dec
adc
xor
fbld
xor
jae
into
popf
aaa
movs
fwait
and
add
out
cmps
cmps
dec
mov
or
and
or
and
add
shl
sub
cmp
stos
push
add
cld
xchg
and
sub
and
inc
sbb
jp
add
sbb
mov
pop
mov
dec
(bad)
outs
stos
dec
jae
push
into
push
add
inc
(bad)
fld
les
scas
mov
push
sub
push
inc
push
push
xor
sti
xor
call
xchg
and
test
xchg
xchg
xor
push
jne
rcr
and
xchg
push
test
jecxz
fsub
enter
pandn
(bad)
div
loopne
je
adc
cmps
push
jmp
sahf
mov
(bad)
sbb
mov
out
or
sahf
bound
inc
mov
inc
cld
stc
inc
imul
imul
fs
xlat
push
data16
push
inc
inc
push
adc
stos
dec
or
pop
push
xchg
sbb
mov
fst
pop
cmps
xor
inc
adc
add
jle
xchg
inc
cmps
daa
movs
push
cmp
cmp
dec
mov
(bad)
sub
and
jmp
repnz
mov
es
call
jbe
retf
xchg
out
xchg
push
cmpxchg
sub
xchg
rcl
inc
mov
(bad)
or
inc
data16
jbe
jmp
out
sbb
and
imul
(bad)
mov
pushf
and
into
sbb
jae
mov
pop
jecxz
mov
xlat
push
sub
pop
inc
ret
xchg
push
xchg
cmps
sub
(bad)
push
into
add
popaw
std
repnz
pop
jbe
sbb
test
push
repz
mov
jbe
mov
mov
bound
fisttp
cmp
push
sub
xlat
shl
ficom
fisttp
clc
lahf
push
xchg
push
xchg
aaa
mov
sub
or
cli
rcl
pop
lds
stos
jmp
cdq
das
mov
mov
in
scas
push
call
or
lahf
sub
mov
or
xor
adc
clc
out
ret
mov
aad
rep
inc
cmp
xchg
lods
mov
push
push
arpl
pop
dec
inc
adc
fsubr
sbb
cmp
push
test
pop
fnsave
jg
shl
jmp
popa
out
xor
es
or
jnp
mov
inc
repnz
or
pop
out
dec
aaa
add
cli
jge
(bad)
xor
mov
push
xor
fstp
xchg
xor
sbb
(bad)
in
ins
daa
lahf
mov
out
mov
mov
push
mov
cwde
cmps
repz
inc
test
jo
or
sbb
lods
outs
sub
mov
push
lock
mov
pop
adc
es
sub
ins
dec
jbe
clc
mov
idiv
gs
repnz
imul
push
push
mov
mov
out
mov
pop
sbb
int
std
push
mov
iret
scas
push
lods
cmps
pop
dec
retf
cmps
mov
cmp
sahf
mov
(bad)
jne
ins
cmps
ss
retf
pop
enter
inc
ja
sub
ret
sub
jle
dec
mov
mov
test
and
lock
adc
push
ror
add
jo
xrelease
xchg
cmp
pop
jle
ja
mov
or
mov
push
dec
xchg
push
bound
mov
jl
mov
push
into
xlat
push
xchg
iret
inc
add
mov
jb
xchg
cmp
shl
jle
inc
arpl
es
dec
mov
cmps
mov
xchg
push
mov
(bad)
push
arpl
add
sbb
enter
pop
push
adc
jl
push
xchg
or
lods
jne
jae
cwde
push
imul
pop
das
xor
push
inc
stos
xchg
pop
scas
pop
xchg
xchg
out
ss
into
mov
xor
fbld
jle
pop
push
cwde
sub
mov
or
mov
pop
ss
out
aad
xchg
jo
jle
add
xacquire
jae
push
push
(bad)
(bad)
mov
enter
fiadd
repz
outs
dec
icebp
in
ret
fld
lock
push
push
(bad)
(bad)
and
mov
lods
cmp
and
retf
call
and
ret
fs
imul
(bad)
cmp
sbb
arpl
mov
std
inc
mov
push
and
cmc
or
mov
rcl
lods
dec
lock
fst
stos
mov
pop
inc
(bad)
pop
popf
arpl
mov
call
dec
or
ins
fcmove
sub
xchg
mov
add
inc
cmps
and
ror
cmp
dec
(bad)
fcom
mov
gs
add
pop
jns
outs
mov
xlat
(bad)
sbb
jmp
add
jnp
ss
sti
add
dec
mov
pop
dec
stos
adc
ret
daa
repz
xchg
into
cs
xchg
sti
pop
es
imul
or
pop
call
xchg
out
aam
mov
(bad)
ret
dec
ins
jae
jnp
fld
sub
popf
fsubr
jecxz
mov
test
jl
(bad)
into
pushf
leave
cwde
lea
fsubr
mov
cmp
mov
sbb
dec
jle
daa
mov
sub
dec
sub
xor
mov
mov
enter
inc
push
lock
in
cmp
repz
adc
cmp
pop
out
and
shr
ss
mov
adc
mov
ja
ret
adc
xor
or
cli
call
xlat
jbe
jne
inc
ret
(bad)
jns
push
or
addr16
pop
rcr
push
stos
jg
mov
push
pop
and
cs
dec
xor
jne
mul
mov
mov
dec
add
jecxz
push
jecxz
mov
mov
int
out
mov
push
inc
sbb
inc
mov
or
cmp
sbb
cwde
sar
jno
je
dec
push
popf
(bad)
data16
mov
mov
or
jae
arpl
jnp
inc
sbb
pop
pop
lods
ss
iret
lds
sbb
pop
push
dec
out
(bad)
jle
dec
fidivr
test
into
imul
mov
mov
inc
imul
int
pop
sahf
add
retf
test
sub
push
pop
fidivr
movs
sar
sbb
mov
js
dec
jecxz
cli
(bad)
test
and
lds
push
(bad)
adc
xor
aad
pop
(bad)
inc
cli
inc
ret
sbb
(bad)
arpl
out
fmul
mov
faddp
(bad)
shl
xchg
cwde
pop
or
jo
xchg
(bad)
jbe
pop
ins
lods
pushf
fdivrp
jae
push
shl
enter
add
jle
nop
xchg
jbe
jae
stos
xchg
outs
cmp
retf
push
mov
pop
sub
retf
jmp
out
jecxz
mov
xchg
out
ja
push
pushw
or
arpl
jmp
jbe
add
push
push
sbb
mov
lock
sbb
arpl
out
into
popf
inc
push
(bad)
mov
imul
movs
and
jbe
hlt
push
mov
adc
jge
popf
xchg
xchg
adc
repnz
sti
push
stos
xchg
jecxz
push
jle
shl
(bad)
scas
cmp
mov
mov
int
pop
adc
out
call
clc
rcl
nop
sub
pop
data16
call
jecxz
js
retf
sahf
jecxz
mov
rcl
push
pop
arpl
jbe
inc
push
jmp
add
pop
ret
inc
sub
jne
cld
or
push
call
xchg
push
jae
dec
sbb
repz
rcr
cld
cmps
in
es
xchg
lods
jg
jae
enter
and
cwde
mov
dec
pop
shr
sub
push
retf
les
cmp
lahf
nop
adc
cmp
xchg
sti
jmp
imul
mov
rcl
xlat
imul
push
add
xor
add
sti
push
pop
pop
ret
repz
out
mov
jnp
and
or
inc
push
adc
mov
sub
and
nop
jl
sbb
mov
fisub
mov
xor
(bad)
sub
jmp
or
xor
add
cwde
loope
mov
inc
inc
dec
pop
imul
mov
sbb
mov
cs
jae
and
std
aas
iret
push
push
sti
cmc
push
js
dec
xchg
mov
pop
or
xchg
pop
jae
test
int3
adc
fbld
mov
mov
inc
xchg
fild
or
dec
xchg
lds
or
dec
add
inc
add
mov
dec
cmp
dec
jge
sub
pop
xchg
scas
jnp
jnp
dec
push
lods
data16
cmp
jecxz
xchg
scas
shr
or
ret
xchg
mov
or
mov
cwde
xchg
stos
jg
pop
mov
int3
mov
cmps
mov
push
xchg
and
cmp
cwde
fldlg2
add
add
inc
in
cmps
es
aad
ret
shr
mov
xchg
xchg
(bad)
cs
mul
in
mov
dec
cld
ss
mov
imul
(bad)
jl
daa
shl
mov
mov
xor
inc
jle
inc
cmps
inc
mov
sahf
ret
xchg
pop
fs
or
cmc
rcl
fcmovu
pop
push
and
push
sahf
neg
repz
dec
fbld
pop
aaa
dec
addr16
xchg
daa
bound
fwait
push
mov
xor
mov
shl
(bad)
ins
sub
dec
pop
xchg
pop
xchg
es
stc
mov
xor
cmps
mov
jle
call
or
into
pop
adc
adc
aaa
movs
and
inc
sti
jb
jp
jbe
xchg
mov
mov
lahf
retf
(bad)
adc
int
movs
cwde
jmp
pop
jle
dec
cmp
dec
or
xor
pushf
fimul
scas
cmc
ret
iret
mov
mov
das
sbb
xor
fwait
and
into
arpl
fwait
mov
xor
xor
aad
cmps
pop
jle
mov
stos
scas
not
inc
or
ins
stos
mov
push
stos
pop
push
mov
es
int
test
cmps
jecxz
shl
jmp
dec
jnp
cmp
(bad)
rcr
or
sahf
shl
cmp
sbb
xchg
mov
not
push
push
sub
add
pop
shr
mov
xchg
xchg
push
pop
sbb
popa
fdivrp
push
push
jmp
hlt
xor
pop
loopne
lock
jns
mov
pushf
arpl
mov
xor
iret
add
sbb
(bad)
stc
mov
int
sbb
call
push
fisub
inc
aaa
int
inc
adc
xchg
mov
shl
cmps
mov
xchg
push
mov
and
push
sub
cmp
push
pop
sub
dec
sbb
jb
imul
inc
mov
push
adc
daa
jle
inc
mov
cwde
stos
adc
(bad)
mov
test
in
cmp
dec
inc
fsub
jbe
add
pop
jecxz
xchg
cmp
push
mov
stos
bound
data16
movs
or
call
(bad)
pop
cmps
sub
out
or
outs
inc
and
adc
test
movs
sar
aam
mov
pop
fwait
scas
imul
add
xchg
dec
jae
jne
push
push
adc
dec
xchg
mov
cmps
or
shr
add
popf
aaa
iret
add
arpl
push
cld
or
ins
(bad)
test
(bad)
call
pusha
add
jmp
dec
clc
icebp
ja
(bad)
aaa
xchg
xlat
int
mov
ret
sbb
es
lea
inc
in
sub
xor
pop
pop
stos
mov
stos
mov
aam
repz
jge
cmp
movs
and
jge
cmp
push
in
cmps
pop
ja
out
adc
xchg
aam
lock
cmovae
xchg
cmp
call
sbb
mov
xchg
fwait
sbb
mov
add
dec
stc
mov
fcom
push
cdq
pop
pusha
addr16
(bad)
xchg
test
dec
mov
(bad)
push
stos
lahf
push
out
xor
call
sbb
rcl
cdq
fcom
shl
xchg
(bad)
adc
cdq
jae
push
and
mov
rcr
lods
sub
(bad)
jnp
in
dec
lods
call
push
shr
aaa
xchg
loopne
(bad)
(bad)
cmc
lahf
inc
xchg
bound
bound
push
test
jnp
adc
in
mov
dec
mov
xor
xchg
or
ins
mov
mov
jbe
lods
pop
adc
or
shl
or
mov
jle
inc
push
fisub
xchg
mov
xor
push
sahf
adc
jb
mov
rcl
and
or
cmps
es
push
imul
aam
xor
ins
sbb
push
into
fwait
xchg
and
clc
cmp
inc
jmp
int3
(bad)
cmps
movzx
cld
xchg
sbb
div
add
xor
shl
add
or
data16
sbb
jle
rcr
or
(bad)
xor
xor
inc
add
lahf
mov
pop
jecxz
mov
mov
fst
adc
mov
cmps
push
fidivr
add
add
out
fwait
adc
scas
jbe
int
inc
adc
push
movs
and
ss
mov
dec
icebp
scas
repnz
push
dec
xchg
push
ins
loope
out
rcr
ror
es
and
push
push
push
xor
push
ins
adc
mov
mov
xchg
movs
pusha
cmp
bound
in
push
or
cld
push
adc
push
inc
and
loop
jg
(bad)
arpl
jb
push
inc
(bad)
pop
popf
mov
repz
jno
and
xchg
les
pop
daa
stos
jle
not
(bad)
jae
inc
add
xor
repnz
push
cmps
push
jbe
sub
pop
sbb
add
cdq
stos
jbe
adc
fcomi
xchg
or
sbb
idiv
push
adc
in
test
mov
and
mov
(bad)
dec
pop
xchg
xlat
push
fldenv
mov
dec
inc
scas
push
xor
add
shl
xchg
xchg
rol
(bad)
(bad)
xchg
bound
lods
ss
std
jge
(bad)
push
in
mov
cmps
xchg
mov
jb
sub
jbe
mov
inc
aas
push
cdq
pushf
mov
inc
push
in
(bad)
out
xor
mov
arpl
fiadd
mov
sbb
call
pop
push
push
sub
shr
arpl
data16
push
sub
push
pusha
and
inc
shl
repz
xchg
dec
xchg
shl
rcl
adc
or
mov
adc
xchg
mov
fistp
jge
leave
mov
adc
inc
and
jbe
call
fist
(bad)
aam
push
es
(bad)
ds
sub
nop
adc
adc
mov
les
shl
cmc
cmps
icebp
inc
or
xchg
jo
or
cwde
data16
iret
inc
xor
pop
xchg
xor
cmp
call
pop
ss
xchg
sub
jbe
lock
rcl
cmps
data16
retf
push
(bad)
fnstsw
push
out
aaa
test
xchg
jo
xor
pop
rol
jae
mov
inc
retf
push
jmp
sbb
mov
jl
adc
sbb
xchg
fucomi
cmps
cmps
int3
mov
out
aaa
mov
aam
xchg
arpl
lahf
fsubr
cld
fstp
pop
out
mov
pop
out
neg
mov
mul
retf
push
xlat
push
data16
sti
es
jle
aas
je
inc
push
inc
cmp
jg
pop
jae
push
retf
loop
repnz
sbb
repz
cmp
adc
inc
xor
retf
aaa
jbe
adc
and
std
std
inc
cld
inc
inc
mov
mov
mov
push
sar
jae
shl
lahf
test
mov
jl
mov
jne
sub
and
mov
push
mov
sahf
mov
test
xchg
xchg
cli
imul
(bad)
push
enter
stos
xlat
xor
adc
sub
jmp
dec
ret
rol
pop
add
sub
dec
mov
xor
jbe
add
cmp
rcl
sbb
nop
jb
inc
jae
out
and
pop
cmps
mov
int3
mov
cmp
jle
aas
cld
shl
test
es
jae
sahf
adc
push
and
jbe
test
cmps
or
jns
add
xchg
mov
neg
mov
mov
inc
pop
push
xor
jbe
xor
mov
xchg
shl
or
es
ss
inc
mov
pop
data16
xor
inc
push
out
and
sbb
adc
xchg
or
ss
inc
jmp
jecxz
inc
test
pop
jns
push
mov
out
call
fld1
leave
jb
adc
scas
arpl
dec
inc
push
mov
adc
arpl
xchg
pop
xchg
xor
fisub
ret
sub
push
sub
cwde
js
mov
dec
pop
mov
add
cmp
pop
mov
int
imul
inc
pop
add
push
xchg
xor
sub
cmp
aad
addr16
jbe
ret
out
jae
lahf
neg
cmp
jae
push
dec
jmp
add
pop
mov
(bad)
(bad)
scas
cmp
adc
out
inc
ja
enter
push
std
and
or
inc
mov
(bad)
fwait
dec
scas
out
mov
mov
inc
cmp
or
and
repz
add
repz
out
mov
cs
push
stc
dec
out
stos
sahf
jp
inc
adc
(bad)
ins
ret
mov
aad
push
rcl
arpl
fchs
push
add
pop
data16
adc
pop
pop
nop
pop
push
jbe
and
sub
mul
mov
pushf
arpl
es
inc
pop
pop
pop
and
ret
sbb
mov
out
arpl
test
and
call
mov
pop
ret
les
scas
std
rcr
xchg
rcl
fst
loop
xor
push
cmps
jecxz
sbb
jle
sbb
nop
sub
fs
pushw
add
add
pusha
xor
add
stc
jecxz
out
cmp
nop
adc
push
mov
bound
jmp
xchg
mov
xchg
ja
xor
adc
xor
shr
in
add
rcr
xor
push
push
in
push
xor
xchg
stos
adc
clc
bnd
aas
aam
out
sbb
cmc
jae
fisub
call
jp
jle
inc
add
sbb
xchg
dec
cmp
adc
jbe
(bad)
jae
adc
cdq
sub
xchg
push
cmps
jecxz
bnd
imul
(bad)
(bad)
sbb
rol
test
xor
gs
pop
shl
adc
gs
mov
ja
xchg
sub
dec
cmp
push
lahf
add
pop
pop
and
mov
es
jnp
test
mov
mov
repz
jmp
out
sub
jbe
retf
dec
int
movs
xrelease
test
ins
inc
pushf
xchg
data16
mov
dec
mov
xchg
div
(bad)
ret
shl
xchg
push
retf
bound
ficomp
cld
pop
sahf
pop
mov
repz
cmp
xchg
movs
jge
mov
fsubp
jmp
(bad)
fsub
into
mov
pop
or
dec
push
jb
mov
cmp
ret
xchg
scas
ret
mov
mov
jae
jbe
xchg
push
adc
pop
hlt
jge
(bad)
xchg
shr
mov
(bad)
dec
out
jnp
push
mov
xchg
jle
mov
push
pop
sbb
clc
psrlq
and
das
pop
addr16
ret
jbe
retf
mov
mov
movs
outs
push
mov
sbb
jnp
(bad)
jno
push
(bad)
leave
daa
stc
test
scas
sti
xor
push
div
cmps
ret
xchg
cmp
rcr
mov
push
ror
arpl
jb
mov
cmps
ud1
fst
in
ja
add
xchg
push
ins
push
or
dec
arpl
inc
mov
data16
mov
jecxz
dec
rol
in
push
pop
(bad)
jne
cmp
in
jecxz
push
add
shl
jecxz
mov
cmps
sbb
mov
dec
xor
popa
imul
(bad)
stc
pop
jmp
arpl
mov
push
sub
sub
dec
cmp
sub
out
mov
inc
xchg
inc
ss
push
push
adc
cmps
and
push
loope
or
call
enter
fwait
ja
iret
mov
in
jnp
xchg
jle
push
sbb
xchg
jno
and
xor
jmp
int3
xchg
mov
sub
sub
ds
push
xchg
aam
mov
lods
mov
jmp
jle
cmp
mov
scas
or
stos
pop
outs
out
data16
xchg
data16
mov
inc
sub
lahf
or
xchg
or
add
sahf
xor
neg
scas
inc
aas
rol
neg
cmp
ins
cld
movs
je
inc
mov
mov
sub
retf
add
sar
(bad)
ins
sbb
leave
pop
mov
repz
inc
or
add
ja
fidivr
dec
addr16
dec
cmps
es
jbe
leave
(bad)
push
push
lods
xchg
fstp
sti
into
scas
out
jns
imul
out
jno
add
jl
cmp
dec
test
movs
retf
and
mov
ds
fldcw
jmp
and
sahf
jp
hlt
lods
xchg
mov
loop
div
add
jbe
ds
push
popf
xchg
cdq
out
mov
mov
ins
or
adc
cmps
test
xchg
out
pushf
repnz
into
retf
and
iret
adc
push
dec
push
push
xchg
out
mov
pop
jl
ins
xor
daa
mov
add
outs
dec
mov
inc
mov
cmps
jmp
xor
mov
xor
pop
sbb
outs
ss
out
adc
std
aas
inc
jbe
and
inc
sti
mov
cmps
lahf
in
out
pop
into
pusha
clc
jae
inc
call
iret
enter
div
repz
sbb
pusha
add
(bad)
jl
fcmovnu
out
loope
push
inc
push
sbb
in
mov
mov
sub
jp
rcl
mov
add
mov
mov
faddp
pop
std
int3
cmp
test
movs
jns
imul
(bad)
xchg
push
repnz
jb
out
outs
cmp
cmps
scas
fsub
or
pop
and
(bad)
xchg
rcl
pop
pushf
idiv
(bad)
into
inc
repnz
ss
add
push
dec
xchg
mov
push
(bad)
out
cmps
jmp
adc
inc
push
ffree
mov
dec
in
cmps
div
dec
xchg
shr
pushf
mov
ror
jae
add
cmp
push
adc
jecxz
xchg
in
scas
std
rcr
adc
js
mov
jbe
out
stc
cmps
mov
shr
pop
arpl
repnz
stos
mov
(bad)
in
leave
push
push
mov
jle
vorps
(bad)
loope
lods
mov
sahf
cmp
push
std
jnp
arpl
pop
mov
jb
inc
je
pop
xchg
and
js
aas
pop
pop
gs
scas
cs
pop
jo
pusha
(bad)
sub
data16
sub
lock
pop
outs
sub
dec
mul
jnp
adc
mov
xchg
mov
jmp
xchg
ret
fucomi
aam
jae
inc
(bad)
sbb
push
gs
aas
jbe
xor
mov
add
mov
add
mov
ret
fisub
sti
pop
(bad)
sub
iret
push
jmp
cmps
icebp
ds
nop
(bad)
and
retf
and
xor
jecxz
push
add
je
dec
push
xchg
sub
es
(bad)
xor
adc
push
aas
fcomp
inc
addr16
enter
mul
cmp
ds
xor
xlat
push
jmp
mov
mov
fcomp
xchg
sahf
mov
fcmovbe
leave
pop
add
jbe
xor
jbe
pop
cmp
sub
pop
or
adc
adc
(bad)
enter
ret
push
push
add
call
pop
mov
cwde
mov
push
retf
aas
jle
xor
jecxz
js
ins
retf
xor
pop
imul
popf
push
jb
add
sub
dec
sbb
and
(bad)
imul
jae
enter
fsubr
xchg
pop
repnz
adc
cmp
or
adc
xor
loopne
mov
cmp
jbe
inc
pop
sbb
lock
mov
cmp
daa
out
imul
push
(bad)
stc
(bad)
je
cli
rcl
push
jmp
shl
imul
mov
xor
or
es
mov
mov
mov
movs
call
pop
retf
ficomp
push
add
jle
outs
inc
jle
jmp
xchg
lds
add
enter
arpl
in
jae
es
rol
out
mov
add
mov
fwait
push
(bad)
arpl
inc
mov
xchg
arpl
inc
push
shl
hlt
test
fcmovbe
mov
es
(bad)
sub
mov
test
cmps
out
add
imul
or
(bad)
mov
pop
xchg
ins
fnstenv
cli
arpl
push
sub
push
pop
sub
jle
sbb
imul
cmp
xchg
add
mov
fwait
add
add
gs
js
les
es
jae
mov
jmp
xchg
adc
push
cmp
scas
imul
xchg
dec
sbb
mov
dec
xchg
stc
ret
and
jp
push
mov
xchg
add
jecxz
cmc
jns
shl
imul
ins
es
mov
adc
test
mov
out
dec
nop
mov
xchg
cmps
dec
cmp
sub
aaa
ja
and
xchg
daa
test
mov
sub
xor
sub
or
test
imul
adc
inc
jne
mov
sub
ins
bound
dec
fidiv
lock
jl
or
pop
adc
mov
xchg
jne
pop
mov
int3
inc
pop
push
in
sub
(bad)
fwait
dec
xchg
mov
mov
xor
and
cli
inc
dec
je
imul
adc
and
lods
mov
dec
adc
inc
daa
sub
js
push
adc
aaa
inc
repz
cmp
outs
push
push
sbb
lea
jno
push
ss
xor
mov
sahf
cmp
and
add
dec
add
out
fisubr
inc
or
mov
scas
mov
sbb
jb
ficomp
mov
push
std
test
call
mov
ja
sbb
cwde
mov
es
push
iret
sbb
jbe
add
das
adc
jns
adc
pop
dec
or
push
pusha
call
jmp
addr16
cmp
cs
popa
or
xor
dec
dec
pop
mov
arpl
jae
inc
add
and
add
jne
xor
and
adc
add
je
sbb
sbb
inc
outs
ss
push
push
inc
data16
and
in
cwde
outs
inc
mov
out
add
mov
fstp
push
int
(bad)
cmp
mov
pop
dec
push
jecxz
out
idiv
(bad)
or
xchg
es
add
cdq
sti
xor
inc
mov
adc
repz
xchg
sahf
movs
pop
sub
mov
sbb
enter
aam
icebp
pushf
retf
pop
shl
out
ja
retf
pop
repz
(bad)
mov
dec
mov
pop
pop
mov
ret
and
mov
xchg
cmp
cmp
sahf
mov
lea
dec
xchg
push
loop
cmp
stos
pop
pop
scas
xor
mov
not
inc
std
out
movs
mov
fdiv
add
push
push
push
jecxz
mov
sbb
inc
push
fsub
and
dec
pop
lock
xchg
fidiv
fisubr
jae
addr16
xor
inc
adc
mov
mov
xchg
lods
jp
into
sub
pushf
leave
mov
push
add
test
jno
xor
repz
aaa
out
dec
dec
(bad)
ins
xor
dec
push
in
inc
mov
adc
adc
inc
(bad)
push
pop
sbb
or
lods
xor
mov
push
out
arpl
add
xor
mov
jbe
push
xor
stos
(bad)
ret
pop
mov
mov
inc
add
adc
jecxz
sbb
cs
add
sub
fldcw
xchg
mov
pop
push
sti
cmc
cmovns
retf
jns
call
stos
sbb
test
add
in
jbe
xchg
mov
adc
(bad)
dec
adc
or
push
cs
push
fsub
sbb
dec
mov
movs
psrlq
ins
scas
aaa
push
mov
fcmovb
and
idiv
push
fcom
jmp
addr16
adc
mov
fwait
push
mov
das
jo
push
push
mov
mov
popa
xchg
xor
add
das
sti
cli
sbb
mov
jl
dec
arpl
pop
ret
push
sub
add
add
xchg
adc
dec
out
or
scas
repnz
bound
sbb
call
arpl
(bad)
std
sbb
call
mov
iret
cmp
ja
enter
jnp
out
cld
and
retw
ret
or
ret
adc
out
or
adc
push
sbb
xor
ret
stos
sar
(bad)
mov
sbb
fsubp
aas
mov
lahf
(bad)
and
cmc
outs
pop
add
inc
gs
xchg
das
stos
pop
add
arpl
mov
data16
test
push
dec
adc
mov
adc
sub
outs
ss
push
lahf
sbb
dec
add
push
mov
pop
cmc
mov
push
mov
scas
loopne
add
jmp
xor
cld
cmps
stos
cmps
mov
repz
sub
js
xchg
dec
add
push
jo
cmp
cmps
test
or
jbe
sti
out
je
cs
or
add
rcr
call
fwait
(bad)
cmps
(bad)
adc
rcr
movs
mov
cmps
push
xchg
scas
mov
fnstenv
push
adc
mov
lds
pop
stos
lea
jae
cmp
into
jl
enter
fadd
push
pusha
scas
hlt
lock
xchg
mov
xchg
lahf
jmp
inc
jae
arpl
call
js
rcl
mov
pop
jecxz
sbb
lahf
es
movs
pop
add
data16
mov
aaa
pop
test
or
adc
repnz
into
push
fnstsw
js
fidiv
fsubr
mov
pop
(bad)
pop
jecxz
js
cmp
mov
or
es
jnp
cli
push
fisubr
jecxz
inc
sub
in
jne
ror
xor
arpl
ins
cs
div
cmovo
imul
inc
jbe
jbe
les
xchg
stos
sub
shl
out
inc
and
add
sti
cmp
adc
sub
jbe
data16
fisttp
jae
mov
inc
lds
test
cmp
dec
sbb
mov
cmp
data16
xor
div
push
push
push
cmp
pop
stos
shr
push
repz
xchg
sub
pop
and
xor
imul
fadd
adc
jo
jns
push
packsswb
and
rcl
cli
outs
mov
push
add
push
adc
xor
jecxz
mov
jl
(bad)
daa
mov
mov
movs
stc
or
push
jmp
ja
add
xchg
in
xchg
or
pop
jmp
mov
cmp
je
or
mov
outs
add
fbld
xchg
and
je
mov
and
in
jp
mov
cmps
or
xchg
les
scas
loop
adc
xor
ins
test
retf
ret
xchg
and
and
dec
(bad)
adc
aaa
and
into
and
dec
inc
push
fbld
(bad)
mov
sahf
outs
div
ss
and
add
or
add
xor
xchg
cmps
inc
or
hlt
mov
sbb
int
cwde
adc
add
pop
jg
dec
adc
into
aaa
pop
jmp
ja
xchg
mov
jecxz
cmp
fwait
push
movs
arpl
sub
jno
fwait
inc
fwait
popa
mov
add
orps
ja
xchg
imul
dec
xchg
rcr
mov
xchg
cdq
xchg
sti
es
dec
pop
adc
mov
push
jle
out
div
dec
cmp
movs
jmp
jl
and
mov
adc
push
adc
mov
adc
(bad)
jl
ins
xchg
xor
mov
and
inc
addr16
sbb
das
popa
pop
ins
dec
jnp
inc
aad
xchg
fnstenv
push
call
fndisi(8087
mul
cmp
lock
pop
xchg
fwait
cmp
jae
adc
lods
data16
mov
add
sbb
mov
cs
ficomp
mov
and
mov
loop
cld
xchg
iret
inc
push
dec
jae
cmp
push
xchg
jl
dec
add
stc
xchg
pop
loop
mov
pop
dec
xchg
popf
es
pop
adc
das
int
xchg
test
mov
ret
inc
pop
sbb
in
push
sbb
popa
lea
pop
adc
add
cmps
jecxz
stos
or
shl
es
push
into
xchg
xchg
sub
bound
cmp
call
sbb
mov
stos
xchg
loope
xchg
sub
push
cmp
stc
push
push
pop
cmps
jne
gs
adc
or
enter
pop
mov
ins
fnstenv
ss
(bad)
ret
xor
mov
loope
sti
inc
xchg
imul
mov
inc
xchg
(bad)
adc
mov
sti
jmp
or
ret
iret
adc
(bad)
mov
fidiv
arpl
in
sub
xor
jge
cmps
and
fsubr
jecxz
test
push
ins
lods
arpl
and
in
xor
xchg
jbe
or
in
test
ret
imul
pop
xchg
mov
xor
mov
dec
inc
inc
in
imul
pop
nop
out
jnp
pop
inc
xchg
xchg
loopne
retf
inc
jmp
mov
jecxz
or
(bad)
adc
mov
mov
cmp
fwait
push
fnstcw
aaa
jae
aaa
inc
push
data16
int3
ret
inc
cmps
out
stos
jns
push
and
dec
mov
and
push
retf
fdiv
push
and
in
ret
ret
imul
and
jb
adc
xchg
mov
push
lds
repz
push
sbb
jnp
dec
push
(bad)
xchg
imul
and
sub
ds
push
ret
xchg
in
cmps
mov
repz
jg
sbb
cmc
jb
iret
adc
jne
mov
out
data16
jno
aam
rcr
dec
add
out
mov
shl
and
jae
xchg
int3
aas
ret
test
rdmsr
cmp
fist
or
stos
out
push
push
mov
jle
test
shr
add
cmp
aad
pop
or
xchg
sub
movs
ss
mov
es
push
xchg
sahf
cmps
and
xchg
sbb
in
nop
xchg
(bad)
push
cmp
jg
enter
iret
std
mov
jp
sub
scas
xchg
dec
jne
lahf
jl
popf
adc
cmc
push
jb
xchg
rcl
repz
adc
hlt
js
ret
sbb
mov
sub
pop
mov
std
lods
add
repnz
xchg
jle
dec
xchg
cmp
movs
or
sbb
out
call
inc
lods
push
sub
lds
addr16
pop
imul
cmps
mov
or
cwde
and
lock
mov
jbe
sbb
push
push
clc
jecxz
sti
xchg
xchg
xchg
xlat
movs
mov
ret
shl
mov
lods
data16
arpl
mov
sbb
retf
sbb
mov
add
push
xor
mov
inc
mov
adc
sar
pop
fild
xchg
cmps
out
jge
leave
nop
sub
fs
mov
stc
into
jmp
push
test
movs
or
(bad)
imul
push
mov
(bad)
scas
stos
es
mov
ret
retf
shld
pop
dec
rol
push
ja
mov
stc
or
inc
sub
sti
out
add
test
mov
arpl
mov
xchg
xchg
sbb
push
sbb
repz
jecxz
xor
fisubr
cs
sbb
xchg
loop
adc
gs
pusha
push
inc
push
push
pusha
mov
(bad)
ret
repz
mul
ret
data16
enter
(bad)
cmp
cmps
xor
adc
adc
push
jne
push
push
add
mov
es
test
shl
pop
rol
test
in
cmp
xor
inc
call
add
mov
pusha
std
repz
imul
(bad)
jmp
pop
out
add
ss
data16
pop
mov
xchg
hlt
movs
xchg
sub
pop
idiv
jne
ss
pop
lods
loopne
popf
mov
cld
push
xchg
out
pusha
mov
mov
mov
test
lds
inc
add
push
mov
cmc
mov
mov
mov
shr
mov
mov
push
mov
lahf
jbe
add
cmps
mov
stos
pop
cmps
push
mov
sub
or
cli
mov
arpl
inc
add
loop
push
xchg
sahf
cmp
xchg
jmp
div
add
arpl
adc
jbe
xchg
adc
mov
addr16
cmps
mov
xchg
rcl
(bad)
or
xor
push
jmp
int3
dec
push
inc
call
fwait
rol
sbb
and
xchg
xchg
and
jbe
dec
or
jle
add
sub
jg
jae
pop
test
push
cdq
ss
aaa
push
in
mov
dec
adc
push
xchg
out
mov
cmp
push
jae
or
and
aaa
lahf
mov
mov
cmp
iret
out
push
mov
imul
outs
(bad)
mov
or
mov
mov
jge
sbb
pop
sbb
push
xor
cmps
fisubr
inc
mov
loopne
mov
retf
ret
cmp
dec
mov
cmp
sbb
xor
not
fadd
mov
jo
push
addr16
repz
or
jl
les
ss
push
leave
lahf
mov
test
jle
jbe
sub
outs
mov
sub
mov
fwait
xchg
arpl
sti
out
mov
xor
int
adc
mov
test
fcmovbe
pop
loope
jecxz
inc
scas
xchg
test
(bad)
jecxz
mov
push
mov
jmp
dec
rol
xchg
scas
fwait
scas
or
inc
je
inc
xchg
mov
mov
cmp
push
pop
xchg
xchg
and
dec
push
rcr
xlat
push
cwde
pop
jecxz
or
ret
push
imul
xchg
or
add
std
iret
pop
inc
test
xor
xchg
pop
adc
sbb
loope
jo
jae
inc
fcom
data16
push
mov
and
leave
setbe
jge
lods
test
lods
nop
jl
dec
retf
xchg
mov
lahf
pop
int3
loopne
bnd
int3
sahf
add
mov
cmp
jmp
inc
dec
add
sbb
test
pop
push
xchg
(bad)
not
call
dec
nop
call
pusha
add
jmp
dec
clc
in
xor
cmp
inc
or
mov
(bad)
es
shl
mov
lgdtd
(bad)
jmp
jo
dec
sbb
dec
jg
addr16
xor
inc
adc
and
sub
xor
mov
cmp
push
les
jp
adc
fwait
and
inc
frstor
imul
repz
and
aam
ss
mov
mov
push
imul
xlat
add
pop
and
xchg
push
push
gs
cmc
ret
bound
ss
das
xchg
inc
sub
xor
div
push
(bad)
adc
xor
cmp
fcmovne
mul
dec
mov
arpl
mov
mov
cwde
xchg
mov
ins
imul
xchg
and
xlat
mov
pop
cmps
mov
pop
cmp
pop
mov
(bad)
aam
cli
es
push
popaw
sti
repnz
push
push
addr16
dec
jecxz
ret
mov
jg
fisub
leave
ds
mov
rcr
fmul
mov
les
aad
mov
add
jp
sbb
jnp
xchg
adc
(bad)
pop
clc
clc
mov
dec
xor
push
mov
and
aam
out
(bad)
xchg
ror
inc
push
xor
stos
pushf
mov
fsub
jno
dec
clts
clc
sub
push
out
mov
rol
ss
mov
xor
pop
mov
out
ret
pop
rol
aad
push
arpl
(bad)
push
mov
or
clc
xchg
inc
fbld
rcl
cmp
dec
test
es
push
xchg
mov
aad
imul
fstp
shl
test
cmp
test
fnsave
in
push
xor
adc
lods
jno
xor
cmps
xor
inc
pop
mov
idiv
ret
pop
xor
lock
mov
rcr
mov
(bad)
mov
sub
mov
mov
daa
dec
leave
jae
mov
sbb
mov
push
xor
sub
aam
mov
hlt
test
arpl
inc
into
inc
scas
or
jnp
mov
sbb
and
loope
fwait
(bad)
stos
cld
sti
fldenv
mov
sub
jge
inc
out
sbb
inc
lock
xchg
outs
pop
add
and
in
jo
push
dec
loop
push
outs
inc
xchg
jp
xor
scas
mov
into
aam
fs
dec
icebp
sub
xchg
dec
out
xor
cwde
pop
cmps
nop
cmp
pushw
push
icebp
(bad)
ds
fchs
(bad)
mov
and
adc
xor
xlat
jmp
sbb
push
pop
imul
gs
dec
dec
jecxz
imul
sub
inc
and
call
cmc
mov
jmp
je
or
jae
(bad)
retf
sbb
enter
push
das
and
cwde
rol
cmp
repnz
jnp
ins
jno
cwde
mov
push
sbb
retf
jne
cmp
test
mov
mov
push
mov
or
fwait
pop
push
inc
pop
ja
int
sbb
repz
sub
push
dec
mov
mov
push
jb
add
cmps
jecxz
or
iret
fist
mov
push
fldenv
push
pop
jmp
loopne
inc
xchg
sbb
pop
(bad)
pop
(bad)
xor
or
push
inc
mov
jbe
jbe
push
sti
cmps
push
repz
(bad)
sbb
mov
scas
outs
mov
mov
lahf
push
or
dec
push
adc
test
or
pop
(bad)
mov
sbb
call
popf
adc
mov
inc
punpckhbw
stos
jns
pop
fld
mul
imul
jae
add
jne
fld
and
scas
in
sbb
repz
les
(bad)
hlt
xor
cmp
movs
je
pop
iret
add
cwde
cmps
sbb
daa
inc
rcr
repz
adc
fwait
push
dec
arpl
jae
pushaw
inc
jmp
sub
mov
mov
imul
popf
outs
inc
stc
ficom
mov
data16
mov
mov
test
mov
xchg
sub
cmp
icebp
in
pop
mov
push
inc
repz
ins
stos
jp
push
sub
movs
or
push
xlat
or
(bad)
in
pop
fwait
lods
dec
jnp
jg
sub
or
js
cwde
sub
(bad)
xchg
fild
aad
push
arpl
(bad)
push
mov
cld
cmp
pop
daa
jo
ret
xchg
jmp
pop
xchg
xor
and
aaa
movs
push
mov
sahf
jp
out
pop
or
push
stos
mov
mov
lea
cmp
mov
xor
int
(bad)
sub
inc
dec
pop
push
out
push
dec
xchg
imul
fisubr
mov
repz
jle
das
dec
cmps
push
sub
or
sar
xchg
in
push
fwait
or
lods
cdq
scas
mov
sbb
jecxz
mov
outs
pop
idiv
sbb
pop
mov
stc
inc
ds
ins
out
mov
outs
add
test
ret
sbb
pop
push
test
lods
pop
mov
jge
push
push
fisub
and
inc
in
xchg
jp
ret
mov
mov
cmp
(bad)
xchg
jne
retf
into
add
fmul
adc
inc
imul
push
push
ds
and
xor
push
fsub
inc
fcom
loop
sub
xchg
rcl
and
div
(bad)
cld
(bad)
xchg
jbe
clc
(bad)
adc
mov
scas
int
es
push
out
imul
xchg
jbe
push
stc
into
jmp
jns
cwde
jecxz
push
mov
sub
daa
divps
out
leave
inc
enter
dec
int
or
mov
les
jmp
loope
dec
adc
aad
fldz
and
adc
retf
inc
loop
xor
mov
imul
inc
or
push
adc
jle
mov
jnp
sbb
lods
mov
lods
xor
cli
mov
add
fdivr
push
inc
add
mov
mov
add
(bad)
mov
xchg
outs
in
push
inc
xchg
fcomp
addr16
in
push
stos
in
pop
loop
js
ret
push
test
and
stc
push
popf
adc
jl
retf
test
and
sub
adc
clc
les
sbb
cs
cmp
jno
mov
in
xchg
imul
cmp
or
jo
sub
or
add
adc
mov
jns
jecxz
loop
mov
(bad)
jg
out
adc
mov
inc
iret
pop
adc
cmc
jecxz
shr
adc
cmp
mov
ss
fcomp
iret
imul
test
and
push
dec
cmp
jnp
mov
jmp
mov
call
push
rcr
mov
mov
mov
dec
inc
mov
push
mov
jbe
xor
jne
sti
mov
cmp
pop
nop
dec
lds
fwait
sahf
es
arpl
aas
and
scas
add
adc
addr16
jns
sbb
mov
into
aas
sbb
pop
ss
push
or
mov
jno
xor
pop
inc
cli
mov
xchg
jl
stc
xor
je
xchg
(bad)
dec
add
aad
fimul
xor
cmp
cmp
repz
jl
movs
aaa
xchg
pop
xchg
sub
out
idiv
cmp
mov
out
mov
push
dec
fadd
inc
aad
cmp
retf
mov
sbb
imul
(bad)
jmp
ss
inc
jle
push
fadd
xchg
cmps
pop
mov
ret
dec
enter
div
ss
jnp
pusha
mov
pop
cdq
stos
std
push
test
adc
sub
mov
bound
das
push
out
div
es
jae
cdq
and
sub
adc
adc
cmp
xchg
push
dec
scas
cmps
cwde
dec
cmc
sub
arpl
push
jae
xor
push
gs
cdq
repz
sti
(bad)
push
cs
inc
sbb
inc
or
xor
adc
sti
sbb
in
(bad)
arpl
lods
in
jge
cmp
add
in
push
fdivr
shr
arpl
mov
mov
add
sti
push
add
stos
ja
mov
cmps
inc
or
das
add
xor
loopne
mov
cmp
jbe
inc
pop
sbb
lock
mov
cmp
daa
out
imul
push
(bad)
stc
(bad)
je
cli
rcl
push
jmp
shl
imul
mov
dec
xchg
jp
icebp
mov
adc
add
xor
cmc
repz
jge
aaa
mov
shl
ja
sub
and
jno
mov
xchg
push
mov
ins
retf
mov
add
sti
mov
scas
cmp
dec
int
out
mov
stc
out
inc
dec
push
adc
ja
jae
mov
fcmovbe
jns
mov
or
mov
shl
xor
dec
scas
mov
lods
cmp
imul
(bad)
mov
dec
rol
call
push
push
xor
adc
mov
push
xchg
(bad)
ins
cld
neg
shl
mov
push
and
xlat
ret
out
jecxz
out
leave
xchg
shl
xchg
arpl
loop
stc
push
pop
fidiv
cmps
jbe
xchg
add
rol
sahf
daa
mov
pop
xchg
jmp
jbe
das
xchg
cmps
mov
xor
ret
sbb
scas
inc
mov
and
sub
adc
stos
sub
data16
repnz
xor
adc
popa
jge
mov
and
pop
icebp
sbb
add
pop
cmps
add
(bad)
in
call
dec
into
arpl
arpl
leave
jnp
inc
push
push
xor
xor
dec
out
jecxz
sahf
dec
sti
or
pop
frstor
and
loope
jle
(bad)
cmp
mov
mov
inc
jmp
mov
clc
test
dec
mov
aaa
out
push
and
mov
cmps
das
cmps
out
rcl
xchg
push
and
into
iret
shl
imul
les
push
nop
inc
loop
(bad)
mov
and
sub
loope
dec
ss
(bad)
and
mov
and
xchg
repz
push
(bad)
aaa
xchg
inc
add
sub
out
or
cmps
xchg
pop
fs
repnz
sti
jmp
push
(bad)
imul
jns
pop
sub
out
pop
xor
jg
xchg
arpl
lahf
and
mov
inc
xchg
jae
sbb
mov
daa
pop
(bad)
icebp
cmp
mov
cmp
inc
(bad)
push
lods
mov
fild
mov
jb
add
sbb
(bad)
pop
fs
(bad)
xor
mov
lods
xchg
popa
mov
arpl
dec
repz
cmp
fsubp
outs
mov
cmp
pop
add
mov
lds
jae
cmps
(bad)
xor
shr
mov
push
xchg
add
ss
test
rol
loop
fidivr
das
dec
es
jnp
cmp
xchg
mov
loop
fisubr
ss
mov
lods
xchg
fadd
inc
jecxz
jo
dec
or
add
or
mov
ins
icebp
scas
je
stc
into
jle
cdq
and
inc
es
add
aam
or
mov
arpl
inc
add
lods
sub
adc
dec
sbb
cmp
and
xchg
ins
(bad)
ins
ss
sbb
int3
retf
ret
addr16
jle
sub
imul
mov
mov
stos
mov
xlat
lods
push
mov
jecxz
sbb
mov
xor
rcr
or
jl
rol
pushf
(bad)
xor
mov
mov
cmp
pop
sub
hlt
or
mov
shl
sub
pushf
repnz
add
mov
sub
pop
sub
hlt
jle
dec
xchg
xchg
or
mov
sub
mov
retf
stc
stos
jmp
int3
into
pop
adc
fisub
not
sub
mov
mov
push
add
push
popaw
lahf
int3
call
repz
imul
jg
leave
sub
mov
lahf
int3
pop
jmp
les
pop
movs
dec
inc
test
fs
(bad)
xor
mov
xor
mov
adc
or
paddq
and
mov
loopne
push
mov
xchg
in
xor
dec
mov
sub
xchg
pop
mov
das
jl
fisubr
push
jmp
dec
es
mov
pop
jg
aas
jns
jg
cmovp
pop
das
push
jp
mov
call
cmp
mov
pop
sbb
or
cmp
sub
ret
xchg
dec
mov
fstp
out
stos
(bad)
mov
retf
add
aas
jns
imul
jl
ins
fldenv
jmp
fisubr
adc
sub
pop
or
pop
xchg
fdivr
lea
fisttp
adc
pop
xor
cmp
imul
push
push
adc
(bad)
mov
or
sahf
sub
or
sub
mov
xchg
ins
stos
push
leave
mov
stos
call
int3
retf
mov
in
dec
sbb
or
sub
dec
push
pop
xchg
fstp
fsubrp
and
in
mul
imul
fcomp
and
mov
in
sub
imul
push
push
push
pushf
es
mov
pop
inc
mov
outs
(bad)
or
sub
cmp
sub
leave
or
jmp
jno
out
adc
pop
adc
jns
aam
subps
cmp
fsub
push
lods
cdq
popa
mov
xchg
mov
or
cmp
div
pop
jecxz
push
es
mov
push
mov
dec
(bad)
sbb
mov
mov
mov
repz
ss
stc
inc
xor
mov
pop
push
jp
add
mov
(bad)
dec
xchg
mov
lock
push
xchg
(bad)
fsubr
fwait
or
inc
aas
les
imul
test
scas
es
je
add
ret
dec
es
(bad)
and
push
and
ds
mov
ins
es
leave
jae
rcl
and
mov
mov
das
dec
sbb
push
add
loope
jae
inc
ss
out
ss
inc
xlat
mov
fdiv
mov
dec
fist
jo
mov
imul
cmp
pushf
leave
movs
out
add
lods
mov
lahf
fisubr
ss
xchg
sub
cmp
fimul
je
pop
inc
push
xor
inc
call
mov
mul
add
inc
fnstenv
jmp
int3
mov
jae
sbb
aas
les
xchg
shl
(bad)
pop
mov
xlat
xor
(bad)
jle
add
(bad)
sbb
repz
div
sbb
ss
out
cli
xor
inc
push
adc
add
mov
cmp
dec
xchg
xchg
daa
ret
push
mov
sbb
out
adc
outs
mov
mov
das
hlt
jbe
ret
push
cmp
push
call
add
call
inc
iret
adc
push
mov
imul
fldenv
xor
scas
push
mov
mov
test
aas
mov
imul
cmp
jecxz
and
push
lods
pusha
out
xor
cs
jecxz
cmp
xchg
sbb
sub
stc
dec
ficom
sbb
jle
add
repz
push
(bad)
or
ret
aam
xchg
cmp
mov
stos
add
(bad)
mov
cdq
sub
ss
out
mov
bound
dec
int3
dec
xchg
push
dec
inc
leave
clc
or
fimul
mov
or
dec
jle
cmp
mov
fidiv
sahf
pushf
leave
iret
dec
into
jle
(bad)
mov
push
push
pop
mov
sbb
dec
jecxz
push
inc
pushf
mov
dec
push
int3
inc
sbb
jle
cmp
mov
pop
ss
cmp
ins
ss
jae
mov
jnp
add
ds
sub
dec
xor
dec
xchg
xchg
sbb
mov
es
pop
repz
push
mov
fdivr
sbb
adc
pop
aas
sti
jle
adc
daa
sub
ss
stc
inc
xor
inc
jecxz
xlat
sti
dec
repz
sub
push
dec
pop
idiv
das
add
cmps
adc
mov
push
call
jecxz
mov
or
xlat
xchg
mov
jecxz
sub
rcr
dec
or
leave
mov
ins
fldenv
xchg
push
in
mov
adc
paddq
mov
fbstp
out
mov
mov
(bad)
jle
loopne
add
jae
cmp
ins
(bad)
push
pusha
retf
fsub
mov
dec
es
(bad)
push
ja
retf
dec
(bad)
mul
sbb
out
ss
mov
ss
mov
(bad)
dec
inc
ret
inc
imul
jmp
mov
add
fst
add
cmp
push
cmp
jnp
dec
test
je
out
mov
mov
mov
sbb
jle
mov
aaa
shl
rcr
out
adc
and
or
dec
xor
jnp
push
out
or
fldcw
mov
fsub
cld
xor
dec
dec
push
mov
inc
jl
ins
mov
xor
ret
pop
add
enter
fninit
jl
shl
pushf
jae
stc
pop
jmp
push
lds
push
stos
pop
sbb
jle
cmp
pop
jmp
push
fwait
push
es
sbb
mov
mov
mov
in
mov
pop
(bad)
sub
bound
push
dec
pushf
mov
fcomp
mov
xchg
aam
subps
test
push
fldenv
pop
fsubrp
dec
push
mov
pop
push
(bad)
jle
or
mov
pop
out
or
mov
xor
ret
push
and
paddq
jo
hlt
pop
fldenv
jmp
push
add
mov
aam
sbb
sub
iret
loopne
sub
(bad)
push
mov
cmp
fistp
pop
jo
cdq
xchg
pop
sbb
aaa
pop
cs
sub
iret
pushf
idiv
mov
mov
mov
sbb
sub
imul
and
pop
xchg
xchg
pushf
adc
stos
popa
mov
cli
pop
pop
sti
dec
jns
mov
or
jl
pop
fs
pop
retf
mov
mov
in
(bad)
das
hlt
jle
jmp
push
dec
xchg
ins
es
leave
mov
sti
jmp
int3
xchg
in
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
shl
mov
jae
inc
push
push
and
(bad)
cld
push
adc
cmp
sub
mov
(bad)
xchg
arpl
jae
and
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
xchg
mov
cmps
jecxz
xlat
out
repnz
adc
and
ja
inc
adc
daa
jb
inc
pop
push
adc
ret
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
pop
div
fldenv
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
ret
xchg
rcr
mov
sub
push
inc
jmp
xor
jecxz
repz
xchg
shl
pop
div
arpl
jae
inc
push
push
data16
inc
cld
dec
adc
ret
xchg
shl
mov
(bad)
xchg
aas
arpl
jae
inc
push
push
and
inc
sbb
cmps
sbb
repz
imul
mov
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
iret
xchg
es
jae
inc
push
push
and
inc
add
cmps
cli
mov
xchg
shl
mov
(bad)
ins
arpl
jae
inc
push
push
and
inc
add
or
ret
xchg
shl
mov
(bad)
xchg
es
ss
inc
push
push
and
inc
add
cmps
jecxz
repz
imul
(bad)
jl
xchg
aas
arpl
jae
inc
jmp
xor
test
jmp
div
es
ss
pop
push
push
data16
inc
add
cmps
cli
mov
xchg
shl
mov
(bad)
ins
arpl
jae
inc
push
push
data16
inc
cld
push
adc
cmp
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
cld
dec
adc
ficom
mov
adc
arpl
jae
inc
jmp
xor
push
adc
ret
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
mov
ret
xchg
shl
mov
(bad)
xchg
es
ss
pop
push
push
data16
inc
sbb
cmps
sbb
repz
imul
mov
jae
inc
push
push
jg
jbe
mov
jecxz
repz
xchg
sub
mov
iret
xchg
es
jae
inc
push
push
cdq
and
inc
add
cmps
jecxz
or
ret
(bad)
shl
mov
(bad)
xchg
arpl
mov
inc
rcpps
mov
inc
cld
push
adc
ret
xchg
retf
test
xchg
arpl
jae
mov
jbe
mov
jecxz
repz
imul
mov
jae
pop
push
push
data16
inc
add
cmps
jecxz
repz
xchg
sar
mov
(bad)
xchg
es
das
jae
inc
jmp
int3
inc
add
cmps
jecxz
jmp
div
arpl
mov
inc
push
push
cdq
cmp
inc
cld
dec
adc
ret
xchg
sub
mov
(bad)
xchg
es
das
jae
inc
jmp
int3
pop
add
pop
jecxz
repz
ret
xchg
rcr
mov
(bad)
xchg
aas
arpl
jae
inc
push
dec
and
inc
add
cmps
jecxz
or
ret
xchg
rcr
mov
(bad)
xchg
fnstcw
jae
mov
jbe
mov
sbb
repz
ret
xchg
rcr
mov
iret
xchg
es
jae
inc
push
lods
jg
jbe
mov
jecxz
repz
ret
xchg
rcr
mov
sub
push
inc
jmp
xor
jecxz
repz
xchg
retf
test
xchg
fldenv
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
dec
and
inc
add
cmps
jecxz
repz
xchg
retf
test
xchg
arpl
jae
inc
push
push
and
pop
add
pop
jecxz
repz
xchg
shl
mov
sub
push
inc
rcpps
mov
inc
add
cmps
jecxz
repz
(bad)
shl
mov
(bad)
xchg
es
ss
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
pop
div
es
ss
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
cli
mov
xchg
sar
mov
(bad)
xchg
arpl
push
inc
push
lods
jg
jbe
mov
jecxz
or
ret
xchg
shl
mov
(bad)
xchg
fldenv
jae
inc
push
push
data16
inc
cld
push
adc
ret
(bad)
shl
mov
(bad)
xchg
fldenv
jae
inc
push
push
and
inc
add
repz
xchg
shl
mov
(bad)
xchg
arpl
push
inc
push
lods
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
jmp
xor
jecxz
or
ret
xchg
rcr
pop
or
(bad)
xchg
fstp
push
and
inc
add
pop
cli
mov
xchg
rcr
pop
or
es
push
inc
push
lods
data16
inc
cld
test
repz
(bad)
shl
mov
(bad)
xchg
fstp
dec
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
es
das
jae
inc
jmp
int3
pop
add
pop
cli
mov
xchg
retf
test
xchg
fldenv
jae
inc
jmp
xor
jecxz
or
cmp
shl
mov
(bad)
ins
fldenv
jae
inc
push
push
cdq
cmp
inc
cld
dec
adc
ret
xchg
retf
test
xchg
fldenv
push
inc
push
lods
jg
jbe
mov
sbb
jmp
div
es
das
jae
inc
jmp
int3
inc
sbb
cmps
sbb
jmp
div
es
jae
mov
jbe
inc
add
cmps
jecxz
or
ret
xchg
rcr
mov
iret
xchg
es
jae
inc
push
dec
and
inc
add
cmps
jecxz
repz
ret
xchg
rcr
mov
(bad)
xchg
arpl
jae
inc
jmp
int3
inc
add
cmps
jecxz
xrelease
shl
mov
(bad)
xchg
es
jae
mov
jbe
inc
add
cmps
jecxz
or
ret
xchg
shl
mov
(bad)
xchg
arpl
push
inc
push
lods
and
inc
add
mov
ret
(bad)
shl
mov
(bad)
xchg
es
ss
inc
push
push
cdq
and
inc
add
cmps
jecxz
or
ficom
mov
adc
fldenv
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
ret
xchg
rcr
mov
(bad)
xchg
es
das
jae
inc
jmp
int3
pop
add
pop
cli
mov
xchg
shl
mov
(bad)
ins
arpl
jae
inc
push
push
and
inc
add
repz
xchg
shl
mov
iret
xchg
es
push
inc
push
lods
data16
inc
cld
push
adc
ret
(bad)
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
mov
ficom
mov
adc
arpl
push
inc
push
lods
jg
jbe
mov
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
jmp
xor
push
adc
ret
xchg
shl
mov
(bad)
xchg
arpl
jae
pop
push
push
data16
inc
add
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
rcpps
mov
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
dec
and
pop
add
pop
jecxz
repz
xchg
shl
mov
(bad)
xchg
es
ss
inc
push
push
and
inc
add
cmps
jecxz
repz
ret
xchg
rcr
mov
(bad)
xchg
arpl
jae
inc
rcpps
mov
inc
add
cmps
jecxz
repz
(bad)
shl
mov
(bad)
xchg
fldenv
jae
inc
jmp
xor
jecxz
repz
xchg
retf
test
xchg
fldenv
jae
inc
jmp
xor
test
or
ret
xchg
rcr
mov
iret
xchg
es
push
inc
push
lods
jg
jbe
mov
sbb
repz
ret
xchg
rcr
mov
(bad)
xchg
es
ss
inc
push
lods
data16
inc
cld
push
or
ret
xchg
shl
pop
out
mov
sub
es
jae
mov
jbe
mov
jecxz
or
ret
xchg
shl
mov
(bad)
xchg
fldenv
jae
inc
jmp
int3
inc
sbb
cmps
sbb
jmp
div
arpl
mov
pop
push
push
data16
inc
add
mov
ret
(bad)
shl
mov
(bad)
xchg
fstp
lods
jg
jbe
mov
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
jmp
xor
jecxz
repz
xchg
shl
pop
imul
arpl
jae
inc
push
push
data16
inc
cld
push
in
mov
ficom
mov
sub
arpl
jae
inc
rcpps
mov
inc
add
cmps
jecxz
repz
xchg
shl
mov
iret
xchg
es
push
inc
push
lods
and
inc
add
mov
ret
xchg
shl
mov
sub
pop
inc
push
push
cdq
and
inc
add
cmps
cli
mov
xchg
shl
mov
(bad)
ins
aas
arpl
jae
pop
push
push
data16
inc
add
repz
xchg
sub
mov
(bad)
xchg
aas
arpl
jae
pop
push
push
data16
inc
add
repz
xchg
shl
pop
imul
aas
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
ret
xchg
rcr
mov
(bad)
ins
fldenv
push
inc
push
lods
jg
jbe
mov
sbb
repz
xchg
shl
mov
(bad)
xchg
es
das
jae
inc
jmp
int3
pop
add
pop
cli
mov
xchg
shl
mov
(bad)
ins
es
jae
mov
jbe
inc
add
mov
ficom
mov
sub
arpl
mov
inc
push
push
cdq
cmp
inc
cld
dec
adc
ret
xchg
rcr
mov
iret
xchg
es
push
inc
push
lods
jg
jbe
mov
sbb
jmp
out
mov
sub
arpl
mov
inc
push
push
data16
inc
cld
dec
adc
ret
xchg
sub
mov
(bad)
xchg
fstp
dec
and
inc
add
mov
ficom
mov
sub
arpl
mov
inc
push
push
cdq
cmp
inc
cld
dec
adc
ficom
mov
sub
aas
arpl
jae
pop
push
push
data16
inc
add
or
ret
xchg
rcr
mov
sub
pop
inc
push
push
cdq
cmp
inc
cld
dec
adc
ret
xchg
sub
mov
(bad)
xchg
aas
arpl
jae
inc
rcpps
mov
pop
add
pop
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
xor
xor
add
pusha
enter
out
mov
ror
iret
xchg
fild
pop
push
arpl
adc
push
add
jb
mov
xchg
ror
cdq
(bad)
movs
in
mov
sbb
inc
adc
xor
xor
mov
aam
fs
jg
jb
fs
add
xor
mov
mov
out
fst
arpl
je
bound
add
xor
push
and
loop
ret
xchg
in
out
not
mov
bound
pop
adc
push
adc
ja
jo
loop
call
test
push
or
push
cmp
xor
xchg
mov
xchg
mov
xchg
in
in
push
add
ins
inc
jge
push
and
pusha
or
cmps
xchg
xchg
rol
popf
ret
mov
or
dec
and
push
or
push
bound
popa
aad
les
xchg
xchg
fstp
and
outs
aaa
push
cmp
fs
daa
push
jp
(bad)
repnz
cdq
jmp
test
adc
inc
addr16
es
jae
inc
add
mov
leave
xchg
(bad)
mov
test
mov
xor
and
add
bound
push
out
clc
int3
cmc
xchg
loop
ret
icebp
(bad)
in
hlt
inc
adc
xor
push
sbb
inc
pop
push
das
cmp
loop
int3
cmc
xchg
loop
ret
mov
mov
adc
jae
adc
ins
push
inc
cld
mov
mul
(bad)
lock
xor
bound
adc
ja
jl
movs
xlat
xlat
repnz
in
xchg
xor
xor
push
and
add
inc
push
push
aaa
push
out
jmp
xchg
ret
jmp
in
movs
rcr
or
xor
add
es
jb
ins
ds
mul
mov
mov
test
cmp
sub
jl
adc
popa
sub
pop
pusha
push
popa
out
xlat
mov
ret
mul
test
or
push
xor
push
bound
popa
aad
les
xchg
pushf
test
cmps
icebp
mov
pop
cmp
xor
aaa
imul
fnstenv
xchg
pushf
test
cmps
icebp
mov
xor
aaa
cmp
adc
pusha
push
popa
out
xlat
mov
mov
in
xlat
mov
lods
ret
(bad)
mov
adc
adc
push
aaa
cmp
adc
sub
mov
loop
mov
not
mov
movs
loopne
xor
push
ins
daa
push
adc
add
mov
int3
hlt
mov
mov
mov
movs
loopne
adc
pop
sub
ss
je
pop
jbe
xchg
xchg
xchg
repnz
(bad)
mov
mov
xchg
lds
je
jbe
jg
cmova
je
xor
(bad)
mov
call
xchg
shl
mov
adc
sub
daa
pop
push
add
inc
cmps
xchg
mov
add
cmps
loop
in
stc
lock
inc
pop
add
gs
sbb
sbb
cdq
xchg
div
cmc
lods
(bad)
cmps
cmps
int3
mov
xchg
xchg
xchg
pop
inc
es
xor
and
inc
bound
jl
adc
shl
int
fiadd
adc
jbe
adc
add
xor
push
push
rcl
mov
shl
stos
div
jae
das
outs
and
inc
jbe
sbb
pusha
cmps
xor
and
fadd
and
jbe
js
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
push
inc
push
push
cmp
adc
jnp
jecxz
repz
std
mov
movs
loop
xchg
push
add
sbb
ss
adc
jbe
sub
es
xchg
xchg
xchg
xchg
mov
stos
in
(bad)
sti
inc
pop
push
pop
bound
or
dec
xor
xchg
xchg
mov
mov
push
pop
and
adc
pop
xor
and
cmps
xchg
repz
xchg
ror
adc
arpl
jae
inc
inc
cmp
inc
add
rcr
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
adc
jl
mov
xchg
xchg
xchg
shl
mov
mov
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
movs
xchg
arpl
jae
inc
push
add
xor
adc
mov
xchg
xchg
mov
mov
dec
add
push
inc
gs
push
jbe
and
adc
mov
mov
mov
add
js
or
data16
adc
add
out
in
mov
jecxz
add
jne
jg
orpd
and
lock
cli
cdq
out
mov
loopne
or
outs
xor
push
inc
push
push
xor
ins
xor
ret
rcl
out
lahf
(bad)
test
mov
sbb
or
jbe
inc
add
cmps
jecxz
lahf
xchg
xchg
test
adc
dec
and
jae
arpl
mulps
les
jecxz
mov
mov
es
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
inc
push
push
push
es
je
or
xor
inc
xor
fcmovbe
jmp
xlat
(bad)
rol
mov
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
es
push
and
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
pop
xor
ret
mov
repz
mov
or
bound
ss
push
sbb
and
ret
xlat
xchg
xchg
xchg
cmps
xchg
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
repnz
arpl
push
inc
push
push
and
inc
add
cmps
jecxz
mov
xchg
hlt
mov
mov
add
push
push
and
inc
add
cmps
jecxz
repz
xchg
rol
and
push
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
xchg
xchg
pop
xor
or
inc
push
push
and
jp
add
cmps
jecxz
shl
jecxz
mov
(bad)
mov
ss
inc
push
cmp
jbe
inc
add
cmps
jecxz
xrelease
test
adc
arpl
jae
and
push
inc
jbe
inc
add
(bad)
mov
xchg
div
arpl
jae
es
push
adc
jbe
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
xrelease
div
arpl
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
xrelease
div
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
xor
push
adc
lods
inc
mov
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
inc
xor
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
data16
xor
aaa
push
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
and
push
adc
ret
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
push
inc
add
ja
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
and
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
es
mov
push
inc
push
push
and
inc
add
xchg
cmps
jecxz
repz
xchg
shl
mov
(bad)
mul
ret
xchg
shl
mov
push
adc
ret
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
xrelease
not
mov
jae
inc
push
and
xor
push
adc
ret
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
dec
inc
dec
sbb
inc
add
rol
repnz
sti
in
(bad)
dec
aam
mov
adc
dec
pop
arpl
push
adc
adc
and
lds
fmul
test
mul
push
and
cmp
xor
ins
daa
xchg
shl
leave
repnz
scas
xchg
movs
loopne
(bad)
in
xchg
mov
arpl
daa
cmp
dec
push
pop
add
sub
hlt
mov
(bad)
mov
mov
es
retf
jno
jns
cmp
sub
sub
addr16
imul
xchg
test
imul
jecxz
and
pop
ror
xor
and
pop
inc
movs
or
jnp
and
sbb
push
repz
fadd
jbe
arpl
mov
adc
arpl
jae
inc
push
push
data16
jns
gs
adc
shl
addr16
mov
stos
adc
jo
rcr
stc
xor
sub
ret
xchg
shl
mov
sub
jmp
mov
int3
mov
sbb
lea
dec
adc
xchg
lods
out
and
adc
cmp
iret
pusha
pop
jp
cmp
leave
and
dec
je
mov
int3
jl
test
add
cmp
aaa
imul
fldenv
jb
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
repz
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
(bad)
shl
mov
(bad)
xchg
arpl
jae
inc
push
add
jbe
inc
add
cmps
jecxz
repz
xchg
shl
mov
xchg
pop
inc
push
push
and
inc
add
mul
mov
xchg
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
mov
out
div
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
and
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
ss
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
es
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
sahf
xchg
scas
clc
nop
and
movs
cld
dec
xor
push
jne
push
push
jp
add
add
jg
cs
jmp
stc
inc
xchg
hlt
xor
movs
xlat
dec
or
jae
push
je
push
and
iret
cmps
mov
add
in
mov
call
adc
dec
jae
daa
adc
add
ja
jb
sbb
sbb
stc
in
int3
out
mov
sbb
adc
dec
xor
(bad)
mov
fimul
adc
gs
xor
jp
and
push
aaa
popa
xor
lahf
jecxz
cli
xlat
mov
xchg
repnz
in
not
push
and
jae
add
subps
or
mov
mov
mov
(bad)
dec
gs
push
inc
sub
xor
jb
xchg
cmc
clc
cmps
mov
lahf
mov
not
jbe
xor
add
push
push
and
mov
sub
xchg
adc
pop
out
and
sbb
or
xor
xor
movs
xchg
fisttp
in
sbb
lock
inc
push
xor
add
cmp
gs
adc
xchg
shl
jecxz
xchg
mov
cmps
rep
out
pusha
pop
pop
imul
inc
sbb
es
lods
mov
jmp
movs
xchg
xlat
mov
mov
pop
jb
adc
add
pop
inc
adc
mov
call
mov
mov
cmps
out
push
bound
arpl
push
push
das
push
sbb
repnz
mov
cmps
jmp
(bad)
mov
out
sti
(bad)
scas
out
fisubr
pop
add
pop
and
inc
push
adc
cmp
pop
sub
cwde
mov
stos
fsub
out
(bad)
xchg
jnp
push
bound
dec
aas
inc
and
push
ror
nop
std
test
xchg
mov
in
mov
and
inc
imul
addr16
addr16
add
out
mov
mov
in
mov
dec
sub
jle
inc
sbb
add
pop
and
xchg
mov
rcl
(bad)
out
rol
inc
or
jb
js
xor
xor
popa
call
stc
cmps
add
mov
jae
sbb
add
sub
xor
test
xchg
retf
adc
(bad)
ror
jecxz
add
and
bound
and
gs
adc
mov
mov
stos
out
xlat
test
push
push
cmp
sub
adc
mov
nop
out
into
xchg
fbld
or
and
jo
push
dec
add
adc
nop
mov
adc
mov
retf
not
fimul
push
push
arpl
pop
and
jns
push
and
adc
xchg
fild
mov
mov
mov
mov
cmp
inc
dec
adc
jle
in
xchg
repnz
icebp
cmps
mov
xchg
fmulp
out
xchg
outs
or
outs
jae
dec
sbb
cmp
retf
or
fist
scas
hlt
mov
aaa
arpl
cmp
or
inc
jmp
mov
cmc
(bad)
into
in
ret
inc
pop
push
and
sub
cmp
pop
sbb
ja
addr16
mov
jecxz
jecxz
loope
cdq
mov
shl
addr16
bound
ins
push
adc
imul
iret
nop
lds
mov
div
stos
xchg
cli
outs
xor
dec
fs
and
sub
push
pop
retf
or
(bad)
icebp
fsubr
pop
inc
add
sub
ss
dec
cmp
ins
and
xchg
mov
mov
mov
xchg
and
je
or
and
inc
jbe
or
iret
in
cld
mov
jecxz
cmps
mov
mov
push
addr16
jb
push
dec
je
inc
add
lods
test
sti
jecxz
icebp
shr
loop
loope
or
push
jb
pusha
and
inc
add
ins
push
push
(bad)
into
icebp
out
stos
xchg
cmps
stos
xlat
xchg
ret
rol
push
and
sbb
jb
mov
stc
pushf
in
xlat
xchg
out
repz
and
sbb
dec
jle
push
dec
cmp
xor
pop
retf
xchg
les
mov
out
test
sbb
push
inc
sbb
ja
sbb
xchg
mov
or
xchg
mov
xor
arpl
sub
jae
popa
and
aas
addr16
mov
call
test
xchg
neg
in
pop
sbb
arpl
push
daa
sub
jg
push
cmp
xchg
lock
mov
aam
jmp
das
push
push
sub
xor
adc
and
push
mov
xchg
push
stos
mov
div
xchg
out
push
adc
pusha
and
aas
adc
sbb
jo
jge
mov
iret
push
call
push
push
and
bound
add
pop
sub
gs
into
mov
lock
int3
retf
mov
inc
add
and
inc
xor
xchg
fcmovnbe
fsub
mov
mov
fwait
into
shl
sbb
es
sbb
add
xor
popa
sar
add
cwde
fidivr
pop
xlat
xchg
jb
add
cmps
jecxz
mov
push
test
and
pushf
repz
xchg
sub
push
push
inc
div
ja
inc
repz
adc
mov
add
mov
and
sbb
bound
movs
test
xchg
cmp
or
loop
mov
dec
ret
dec
jmp
sbb
mov
mov
sbb
xchg
xor
xchg
xchg
xchg
stc
movs
jbe
icebp
data16
sbb
cmp
add
pop
add
fsub
loop
rcl
movs
sub
xlat
rcl
mov
push
iret
push
mov
test
mov
(bad)
jno
dec
push
adc
mov
ret
xchg
addr16
adc
push
pop
pop
sahf
push
movhps
sub
repz
mov
addr16
adc
ss
fbld
or
mov
repnz
sbb
inc
or
inc
icebp
ja
aam
retf
mov
jae
push
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
arpl
jae
inc
push
push
and
inc
add
cmps
jecxz
repz
xchg
shl
mov
(bad)
xchg
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
lea
push
call
lea
push
call
call
mov
mov
mov
mov
not
mov
push
mov
push
push
push
mov
push
call
mov
mov
push
push
push
push
mov
push
call
mov
call
test
jne
mov
push
call
test
jne
mov
jmp
mov
mov
mov
cmp
jbe
mov
push
call
push
call
and
test
je
jmp
push
call
mov
push
call
cmp
je
mov
and
test
je
push
push
push
push
push
push
mov
push
call
mov
mov
not
mov
push
mov
push
call
push
push
mov
push
push
call
push
push
push
push
push
push
call
mov
not
mov
push
push
push
call
add
jmp
mov
push
call
mov
mov
push
push
mov
push
call
mov
push
push
push
push
push
push
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
jne
test
je
push
mov
call
add
inc
push
mov
call
push
call
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
mov
jb
add
pusha
jb
addr16
jno
imul
aas
xor
and
inc
push
push
bound
jae
add
adc
and
adc
ret
rcl
loop
repnz
mov
arpl
push
bound
adc
add
push
inc
and
xor
jecxz
repz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
scas
or
mov
pop
adc
and
mov
mov
rcl
cmp
fwait
add
js
repnz
rcr
(bad)
mov
sub
(bad)
sahf
pop
mov
ja
adc
(bad)
pop
shl
or
push
adc
pop
mov
inc
push
mov
push
adc
and
mov
(bad)
(bad)
mov
jp
jg
xchg
sbb
out
je
test
add
arpl
daa
scas
daa
jae
xchg
sub
push
mov
arpl
and
inc
stos
push
ficom
dec
and
ja
xlat
dec
xchg
adc
in
mov
sbb
mov
inc
adc
jmp
ja
push
add
in
jns
xor
js
or
shl
mov
mov
jbe
stos
adc
ins
mov
ss
cmp
mov
out
or
push
cmps
cs
xor
add
(bad)
std
dec
mov
gs
mov
dec
iret
fs
icebp
iret
mov
lea
push
cld
neg
dec
ret
pop
shl
pop
stos
xor
out
test
jb
xchg
add
leave
sahf
adc
outs
jecxz
mov
rcl
mov
push
pop
jecxz
jo
test
jo
add
shl
cmps
repnz
(bad)
xchg
sub
dec
dec
sbb
adc
push
pushf
cmp
fst
xor
add
pushf
shl
or
mov
leave
push
pop
in
lahf
xor
das
test
pop
ret
xchg
push
mov
inc
imul
pop
(bad)
in
mov
bound
std
xor
adc
fdiv
ret
and
jg
loop
xchg
repz
shl
arpl
jb
inc
mov
scas
scas
int
ret
shl
mov
cdq
inc
mov
inc
xchg
adc
xor
add
(bad)
dec
mov
sbb
mov
sbb
mov
mov
std
jmp
and
fwait
adc
outs
jl
pop
(bad)
push
ins
sub
mov
push
add
mov
dec
js
retf
push
cmp
in
or
xchg
out
pop
mov
jno
lods
movs
popf
mov
js
in
ja
dec
dec
cmp
repnz
es
lahf
mov
aaa
mov
inc
cli
dec
frstor
cld
lds
loop
repz
cli
pusha
xlat
fnstsw
mov
mov
cli
stc
inc
ret
shl
test
outs
cmps
xor
adc
jecxz
and
fwait
and
jg
dec
jnp
and
mov
xchg
jge
and
popa
loop
pop
dec
(bad)
les
adc
ds
cmp
xor
dec
mov
mov
adc
test
aas
adc
lods
fnstenv
jae
cmp
cmp
push
std
jmp
xor
repz
into
xlat
ret
mov
push
shl
arpl
and
mov
fwait
test
xor
sub
popf
mul
xor
and
enter
inc
retf
xchg
sub
cli
adc
jmp
push
outs
sbb
repz
ins
test
inc
fild
push
cli
jmp
loop
jg
cmp
das
and
mov
pop
pop
rcl
pop
mov
xchg
push
repnz
mov
sahf
retf
arpl
sahf
pop
shl
jl
push
pop
cmps
mov
mov
jb
mov
and
pusha
add
push
cld
sub
cmp
lea
call
(bad)
out
sub
mov
test
push
lods
arpl
cwde
sbb
and
ret
lahf
and
mov
pop
cdq
repz
(bad)
pop
add
arpl
xchg
pop
das
dec
jno
into
int3
dec
aas
sub
inc
xchg
add
inc
push
gs
adc
add
push
push
pop
data16
dec
ret
push
sahf
loop
cmp
into
xchg
pushf
mov
inc
xchg
xchg
daa
arpl
pop
xor
dec
mov
add
rcl
jecxz
scas
(bad)
mov
(bad)
out
scas
pop
test
xchg
add
adc
and
xchg
ret
sub
in
out
call
sbb
jp
pusha
add
sahf
pop
popa
repnz
mov
outs
repz
xlat
xchg
pop
xchg
loop
inc
out
inc
add
std
ret
in
bound
aam
or
push
pop
std
jl
inc
sub
or
push
inc
push
dec
test
dec
xchg
pop
outs
push
cmp
out
repz
mov
pushf
aaa
mov
pop
aam
(bad)
retf
mov
push
sbb
sbb
imul
(bad)
dec
mov
mov
xchg
mov
std
lahf
dec
aad
jg
es
scas
nop
pop
sbb
cwde
ins
xchg
mov
repz
push
jmp
in
scas
cmp
sub
fdivr
or
add
push
aas
mov
jb
inc
jmp
inc
lahf
in
scas
je
arpl
cmps
stos
mov
inc
xlat
xchg
pop
cs
adc
jmp
cld
adc
pusha
retf
int
iret
mov
and
fidiv
sub
mov
xor
add
add
repnz
add
imul
dec
jb
add
push
jb
push
jb
and
and
and
int3
add
xchg
sbb
jl
xchg
mov
inc
and
add
jb
int3
xor
xchg
and
or
push
mov
test
out
arpl
jecxz
xor
mov
inc
xchg
inc
movs
xchg
(bad)
sti
or
dec
push
inc
lods
fsubp
push
cdq
mov
fdiv
xor
(bad)
pop
loop
stos
repz
ficomp
je
jmp
scas
syscall
in
out
(bad)
fsub
repz
pop
xor
push
ret
sub
add
jb
pop
push
adc
ret
xchg
mov
push
sbb
add
push
das
mov
cli
mov
adc
push
dec
cs
ret
sub
repz
out
jle
mov
add
call
fild
mov
push
loop
jle
ins
dec
ins
push
pop
push
sbb
xor
add
cli
dec
and
pop
xlat
inc
rcl
loop
jns
or
ins
pop
adc
mov
enter
jae
sub
push
into
and
inc
sub
(bad)
push
and
xchg
sahf
cmps
repz
mov
out
mov
aaa
jae
add
jns
and
iret
dec
cmp
add
xchg
inc
ret
loope
mov
scas
mov
inc
mov
fnsave
jo
or
ret
rcr
xchg
xchg
loopne
mov
sbb
sar
jmp
xor
pop
sub
sbb
xchg
push
fs
mov
stos
dec
push
popf
(bad)
cmp
ss
add
cmp
loopne
sbb
inc
xchg
outs
and
mov
dec
adc
stos
sub
ss
pop
rol
sbb
and
mov
pop
mov
jb
add
out
aaa
outs
xor
mov
not
mov
push
adc
push
js
xor
ret
cmps
jbe
jns
iret
xor
push
std
mov
mov
clc
mov
pop
pop
(bad)
div
lock
adc
sbb
aam
fnsave
outs
addr16
and
pop
in
fwait
retf
jle
ret
rol
loop
cli
in
fisttp
sbb
leave
dec
pop
add
xor
stos
mov
fwait
mov
jp
sbb
inc
pop
push
jae
mov
pop
aam
and
xor
popf
nop
test
test
pusha
pop
fadd
inc
mov
jb
mov
ja
push
add
mov
rcl
inc
setg
dec
cld
pop
(bad)
jecxz
out
xor
repnz
aad
xchg
ins
jae
idiv
sbb
cmp
inc
jmp
dec
in
cmp
xlat
outs
div
jge
sbb
pop
sub
mov
outs
jb
ret
mov
xchg
mov
lods
or
out
in
ss
cs
aaa
push
inc
call
daa
fadd
dec
mov
out
div
mov
push
pop
and
mov
xchg
cmp
add
mov
nop
push
retf
sbb
mov
mov
test
xchg
bound
aad
jne
fxch
add
movs
cmps
repz
pop
mov
cmps
in
in
or
adc
or
xor
sub
adc
retf
sbb
shl
jbe
inc
outs
sbb
and
jae
jmp
adc
cmp
sub
pop
(bad)
mov
sahf
ret
xchg
fxch
ss
lods
push
jp
push
or
sti
jb
cmp
sub
mov
shl
(bad)
mov
add
lods
mov
add
data16
ss
clc
cmp
test
mov
enter
outs
icebp
fwait
mov
inc
cdq
jmp
repnz
dec
sub
add
lock
push
or
add
inc
stos
and
fmul
cmp
or
sbb
mov
push
push
inc
dec
aaa
ja
inc
cdq
ror
test
inc
sub
pop
pop
jmp
shl
stos
push
pop
sti
mov
adc
test
mov
mov
js
mov
add
mov
jne
push
and
cmps
mov
push
fld
or
ret
jnp
out
out
jmp
call
mov
jmp
mov
cmps
std
mov
scas
bound
mov
or
lock
aas
rcl
jmp
lds
cmp
pusha
out
and
sub
(bad)
fld
repnz
pop
xchg
stc
sub
jp
fwait
push
cmp
ja
push
jbe
clc
xor
push
jle
clc
xchg
cmp
jl
frstor
stos
shld
icebp
dec
test
addr16
push
imul
retf
aad
and
iretw
aaa
dec
push
cmp
addps
cmps
repnz
push
push
addr16
sbb
adc
and
jno
push
and
rcl
and
push
and
jns
int3
not
bound
popa
in
pop
leave
call
fisub
push
enter
sti
or
stos
call
push
mov
scas
outs
xchg
mov
push
cmp
mov
dec
ret
rcr
jle
out
mov
push
push
xchg
jmp
add
adc
fdiv
jae
sahf
mov
mov
or
(bad)
sti
sub
adc
popf
mov
adc
in
div
dec
(bad)
shl
jecxz
mov
pop
xchg
xchg
mov
icebp
adc
fist
bound
sti
jle
mov
call
scas
int3
or
(bad)
fnstsw
dec
cmp
shr
cdq
fucom
gs
les
repz
xchg
retf
icebp
sub
icebp
or
adc
xor
add
in
jle
xor
ret
xchg
sub
loop
rol
shl
loop
push
sti
ja
add
adc
pop
popa
out
ret
shr
retf
mov
or
push
sbb
xor
push
dec
fwait
dec
das
and
inc
dec
ret
sbb
loop
jns
add
fld
dec
out
loope
aas
pop
retf
in
jl
test
rcl
loop
mov
mul
(bad)
div
arpl
jae
push
out
push
fucom
mov
push
sbb
int
push
dec
inc
jb
push
push
ja
push
fisub
adc
mov
add
pop
imul
mov
sub
idiv
xchg
jp
jmp
xor
mov
push
imul
(bad)
jmp
mov
mov
push
cwde
cli
jbe
adc
retf
sub
mov
xchg
fisttp
jae
xor
mov
mov
sbb
mov
mov
shr
pop
lock
push
bound
retf
inc
popf
xchg
popa
int
ret
sub
jecxz
rep
(bad)
sbb
loope
push
fild
push
lods
arpl
jae
pop
and
arpl
int3
mov
shl
mov
popa
add
mov
pop
add
js
popa
ret
sub
jecxz
dec
aam
cli
daa
mov
test
sub
(bad)
pop
(bad)
push
pop
mov
sbb
push
scas
jecxz
xor
sar
dec
mov
es
mov
cld
cli
sahf
fnstsw
mov
loop
jg
jge
adc
mov
pop
pop
aas
push
inc
(bad)
push
add
xor
xchg
adc
sbb
pop
cs
add
stc
add
sbb
out
into
xchg
into
shl
scas
jns
or
out
scas
mov
jae
mov
and
psubd
dec
push
push
mov
test
outs
mov
push
xchg
push
out
push
adc
xlat
xchg
pop
enter
aaa
sar
cs
mov
mov
shl
push
mov
pop
sub
and
out
mov
inc
mov
fwait
pop
aam
jmp
ror
outs
repnz
dec
cs
xor
push
jge
push
jb
icebp
add
and
mov
repnz
pop
xchg
mov
sbb
pop
push
out
arpl
scas
data16
dec
xchg
rcl
inc
aas
mov
into
pop
push
mov
push
popa
xchg
mov
mov
jg
add
(bad)
ss
push
push
cmp
push
inc
ffree
fidivr
out
repnz
sbb
shl
sub
dec
loop
cli
xor
or
enter
(bad)
xor
mov
mov
sti
add
mov
pop
es
ror
or
dec
adc
pushf
push
popf
pushf
rcl
add
push
in
fidivr
push
jno
shl
sbb
imul
in
inc
aas
pop
push
out
lahf
aaa
(bad)
sahf
scas
data16
dec
dec
fs
xlat
jecxz
mov
push
sbb
mov
sbb
pop
cmp
repz
ins
call
fisub
jbe
ret
pop
inc
call
push
push
fs
mov
push
addr16
jnp
push
and
pop
(bad)
mov
jecxz
ss
xchg
xlat
outs
dec
or
in
test
fwait
xchg
xchg
push
test
fs
imul
dec
jno
imul
jbe
mov
mov
xor
cmp
sub
movs
loop
(bad)
repz
rcr
repz
mov
mov
call
sub
push
xchg
pop
stc
or
rol
ret
mov
mov
call
outs
inc
gs
sbb
jecxz
jle
not
lock
push
jae
mov
sahf
popa
jmp
xor
dec
cmp
push
fistp
out
mov
or
fisub
arpl
mov
cmps
mov
(bad)
pop
shl
cmp
add
in
inc
in
xor
retf
mov
repz
loop
hlt
dec
xchg
sub
ret
xchg
shr
push
bound
inc
sbb
call
cmps
mov
xchg
and
div
dec
rcl
mov
adc
sub
add
adc
in
xor
cmp
lods
mov
sub
pop
cs
dec
inc
into
lods
push
and
jb
dec
pusha
dec
(bad)
sar
or
fwait
js
mov
add
mul
inc
adc
dec
jecxz
and
mov
bnd
jb
pop
xchg
pop
(bad)
retf
arpl
cmp
shl
scas
mov
mov
push
push
daa
cmps
aaa
jae
mov
inc
and
div
ror
js
rcl
inc
xchg
push
xor
mov
cld
(bad)
adc
outs
ja
xchg
sbb
repz
adc
adc
scas
push
and
jb
les
adc
or
ret
sahf
push
cmps
jg
push
cmps
mov
std
mov
push
das
pushf
aaa
pop
imul
xor
xchg
outs
mov
jp
sub
xchg
lods
bound
jb
std
xchg
test
cmp
jno
fmulp
fbld
repnz
test
pushf
div
dec
push
mul
cli
aaa
xchg
dec
cs
sbb
or
jg
jnp
sbb
test
(bad)
xchg
popf
pushf
call
fmul
xchg
nop
adc
add
(bad)
push
mov
adc
mov
lahf
sahf
and
cmp
sub
loope
cmp
adc
pop
push
xor
mov
call
mov
outs
xor
enter
jnp
mov
jb
dec
inc
push
push
push
jmp
bound
sub
repz
push
xchg
push
pop
gs
sub
xor
jae
mov
sahf
jbe
int
retf
pop
out
sti
or
xchg
out
div
adc
stos
push
jae
call
cs
or
js
pushf
ins
xchg
fs
mov
adc
pop
mov
frstor
repnz
sbb
pop
mov
out
jb
rep
pop
popf
arpl
adc
lahf
cs
pop
push
ret
mov
fild
pushf
loop
cld
call
into
outs
ret
xchg
outs
sbb
fimul
scas
sar
mov
or
and
aas
mov
cmp
sbb
stos
jge
rcl
out
dec
iret
or
scas
das
cmp
add
mov
idiv
rcl
cmps
mov
jle
xchg
ins
xchg
dec
pop
icebp
dec
iret
mov
mov
inc
mov
sahf
pop
scas
push
iret
sub
mov
mov
ret
stos
loop
iret
mov
xor
test
aas
adc
sbb
or
jl
push
mov
mov
mov
sahf
addr16
mov
outs
fdiv
cdq
cmp
adc
mov
(bad)
movq
ficom
sbb
(bad)
dec
fcmove
add
xchg
pop
sbb
cwde
call
mov
aas
cli
mov
stos
repz
and
outs
rol
in
mov
inc
fsubrp
jmp
loope
pop
and
mov
or
xchg
(bad)
cmc
mov
mov
les
jmp
or
int3
push
(bad)
pop
push
or
push
sbb
(bad)
scas
fsubrp
es
add
and
jnp
add
mov
xchg
out
cs
ds
push
add
out
mul
and
xor
adc
(bad)
jmp
xchg
bound
mov
cld
cli
cdq
and
pusha
ret
sar
adc
pop
add
lods
xlat
mov
dec
inc
(bad)
pop
mov
neg
add
mov
and
mov
ins
inc
out
(bad)
mov
in
arpl
fwait
push
jmp
out
je
xor
jmp
out
inc
jl
xchg
mov
jb
inc
adc
movs
xchg
(bad)
(bad)
fsub
in
and
mov
(bad)
and
adc
mov
scas
enter
pushf
jmp
shr
pop
pop
sbb
jecxz
int
push
movs
and
push
fucom
ja
cmp
sub
xor
ret
out
mov
ja
jb
mov
push
adc
inc
daa
int3
add
jp
inc
leave
out
loope
dec
xchg
mov
inc
das
push
inc
inc
or
fnstenv
das
sbb
test
mov
mov
lea
mov
pop
pop
(bad)
mov
mov
shl
dec
xchg
ja
cs
add
fidiv
iret
jb
nop
mov
dec
add
sub
nop
arpl
fwait
add
adc
retf
xor
adc
mov
repz
(bad)
cld
cmp
push
xchg
fwait
mov
mov
rcr
xor
cmps
cmps
mov
xchg
retf
hlt
inc
inc
add
mov
push
dec
cmp
or
shl
(bad)
xlat
jno
out
pop
aaa
push
cdq
add
stc
jnp
add
arpl
clc
(bad)
add
xchg
ins
or
(bad)
mov
and
rcr
sti
xchg
sub
ja
inc
pop
out
call
test
jae
mov
rcr
loope
sti
retf
inc
call
mov
adc
mov
fcom
pushf
xor
rcl
jecxz
mov
jne
xchg
jns
xchg
add
test
pop
pop
push
aas
pop
lods
adc
push
xor
out
fldln2
in
int
fmulp
retf
shr
jnp
jle
xlat
adc
sbb
es
sbb
ja
mov
ror
bound
inc
mov
jmp
and
cmp
cmps
push
xchg
or
cwde
pop
pop
mov
push
(bad)
call
inc
pop
sbb
ds
out
sub
push
(bad)
imul
jb
enter
mov
xchg
sub
enter
push
pop
and
scas
test
dec
mov
mov
pop
push
mov
xchg
inc
bextr
xchg
xchg
pop
imul
mov
jb
add
loope
ss
cmps
add
movs
jmp
adc
cmps
cmp
inc
inc
push
call
cli
pusha
cmp
rcl
loop
repnz
or
sbb
out
adc
pop
mov
retf
add
pushf
shl
xor
or
and
cmps
repnz
icebp
jae
inc
pop
push
bound
xor
(bad)
cli
in
and
cmp
ror
cdq
sbb
xor
mov
jae
add
test
inc
(bad)
ror
in
aad
sub
mov
or
push
popa
cdq
cwde
add
push
adc
xor
dec
add
js
test
sbb
fs
push
lods
pop
dec
clc
push
ret
adc
push
cmp
mov
adc
pop
xor
das
mov
in
out
xchg
js
jne
mov
shl
mov
adc
pop
mov
popf
loop
retf
mov
outs
xchg
cmps
loop
(bad)
repnz
aas
add
lods
mov
addr16
aas
into
xchg
out
push
and
stos
push
lods
scas
ja
and
ret
lahf
adc
mov
sahf
and
imul
xchg
or
sti
push
mov
icebp
stc
dec
inc
test
das
rcr
push
xchg
push
adc
scas
push
mov
dec
fwait
xor
std
(bad)
es
or
in
inc
sub
add
jnp
jae
inc
lahf
adc
dec
mov
ds
mov
dec
outs
fsubrp
pop
mov
stos
push
push
jmp
imul
rcl
xor
mov
mov
mov
and
neg
mov
ret
add
push
shl
xor
es
jecxz
mov
mov
mov
jb
mov
cdq
cwde
stos
sub
jbe
ret
shr
int3
jno
call
xlat
mov
inc
inc
jmp
mov
adc
popa
int
add
or
or
dec
test
arpl
jb
jecxz
jns
ss
bnd
sub
sahf
fist
ins
ja
arpl
push
inc
fist
jecxz
pop
ret
push
rcl
ret
push
push
ret
xor
add
mov
call
ja
test
cmp
sbb
jecxz
jecxz
or
dec
inc
inc
push
push
pop
call
fmul
jg
inc
ins
push
rcl
or
dec
sub
mov
xchg
push
aaa
lods
bound
clc
add
sbb
loope
mov
pop
push
or
xchg
jp
push
mov
mov
cmp
pop
dec
and
mov
or
ss
mov
cmp
scas
ds
fsub
aad
xchg
mov
cmps
sub
jnp
mov
daa
imul
push
imul
jb
dec
in
dec
retf
ds
xchg
pop
(bad)
dec
and
xchg
gs
icebp
mov
pop
mov
in
jno
add
mov
mov
push
fist
jmp
imul
push
pop
scas
pusha
jno
mov
xlat
mov
push
or
push
sub
ret
ret
call
test
shr
dec
ds
retf
dec
jg
mov
cld
mov
and
xchg
cmp
dec
pop
shl
xchg
pop
jns
arpl
loopne
push
or
cmps
aas
xor
xacquire
pop
addr16
push
push
aaa
ss
mov
jb
add
scas
and
mov
loopne
xor
push
push
es
push
pop
mov
cmp
pop
jecxz
gs
add
nop
addr16
dec
xchg
into
dec
ja
loop
loop
jle
xchg
cmps
data16
ds
mul
jg
adc
mov
(bad)
cli
repz
sbb
push
jns
arpl
bound
cmps
push
push
scas
xchg
test
or
sbb
mov
push
es
xor
mov
fidivr
imul
xlat
scas
aam
xlat
cmps
in
cmp
xor
nop
cmp
int
pushf
ret
call
jnp
push
sub
mov
adc
sbb
cli
add
imul
ret
cmps
nop
outs
push
fistp
dec
cmp
(bad)
jmp
sbb
cmp
adc
mov
dec
jne
fisub
jmp
and
jecxz
jbe
sbb
mov
ffree
out
sub
fdivr
fwait
mov
(bad)
test
cwde
sub
xchg
scas
xchg
sub
sub
mov
dec
pop
fstp
imul
adc
jp
test
push
mov
xchg
gs
mov
stos
inc
push
push
bound
fwait
inc
mov
outs
xor
sahf
(bad)
cmp
jns
call
cmp
(bad)
cld
retf
sbb
xchg
xor
pop
shl
xchg
movs
js
xchg
into
cmc
mov
mov
je
call
cli
data16
sbb
mov
and
repnz
mov
stc
xor
imul
shr
xor
outs
sbb
arpl
mov
mov
mov
push
pop
jecxz
fs
xchg
dec
(bad)
popa
scas
dec
repnz
xor
xor
fld
cmp
xor
sub
rcl
out
repnz
mov
xchg
cwde
fs
clc
ret
pop
xchg
in
and
add
popa
jmp
mov
sub
mov
sbb
mov
ret
mov
ret
jo
xchg
sbb
imul
jecxz
repz
mov
loopne
mov
stc
jae
jecxz
jmp
cmp
mov
add
xchg
(bad)
pop
stos
mov
push
add
clc
inc
int3
rcl
aam
add
ret
push
cmp
add
mov
sbb
pop
mov
enter
movs
push
mov
push
in
cli
jno
jno
dec
ret
adc
mov
jg
sbb
sub
jb
inc
adc
and
sahf
and
inc
adc
fstp
push
(bad)
jns
mov
cs
add
(bad)
mov
jb
rcr
inc
jecxz
xor
ret
ficomp
mov
sti
(bad)
cld
jnp
add
adc
jnp
or
lock
fdiv
jbe
sbb
shl
aas
ins
repnz
push
daa
fyl2xp1
cmp
cmp
xor
rcl
or
jbe
(bad)
xchg
dec
sub
jp
mov
sar
xor
div
test
mov
call
ret
ret
cwde
movs
cmp
jmp
cld
shl
dec
int
ds
xchg
loop
jg
femms
ins
pop
pop
cs
pop
into
push
fsubrp
jmp
das
pop
xor
ret
pop
loop
xchg
dec
in
bound
ror
and
in
cmp
jp
dec
iret
lds
jbe
sub
pop
ss
fsub
dec
xchg
jbe
adc
int
ds
sub
or
fcomp
int
sti
mov
cmps
mov
mov
mov
pop
sar
and
jno
pop
or
push
xchg
retf
mov
stos
mov
add
call
bound
xor
inc
or
push
out
inc
jo
push
pop
xor
dec
inc
inc
in
add
(bad)
inc
retf
pop
xchg
and
push
pop
mov
mov
mul
jmp
(bad)
jmp
mov
jg
nop
sub
mov
cmp
das
and
mov
imul
mov
mov
enter
addr16
ja
sbb
gs
sub
jp
sub
cmp
retf
dec
mov
jae
mov
cwde
and
ds
cmp
pop
outs
jnp
mov
mov
push
add
jmp
stc
mov
adc
and
mov
shr
idiv
add
cmp
mov
push
mov
inc
xchg
test
iret
cmp
xchg
jns
xchg
int
icebp
out
out
cmp
push
lods
jmp
sti
jae
add
cwde
and
rol
adc
and
out
inc
int3
(bad)
jl
imul
sub
sub
mov
cmps
sub
push
ins
shr
mov
stc
pop
mov
call
(bad)
pop
imul
cwde
cdq
(bad)
jae
inc
sbb
fs
adc
fdiv
cmp
push
test
xor
inc
xchg
(bad)
mov
cdq
and
in
and
mov
dec
cmp
call
fisub
xor
lods
adc
loopne
rcl
fnsave
push
ret
test
lea
lods
cmp
in
mov
xor
mov
add
adc
xchg
add
sub
mov
mov
cli
(bad)
lock
push
rcr
cwde
cs
or
ror
xchg
xchg
test
add
popf
popf
jg
test
int
mov
xchg
adc
jbe
mov
sub
inc
inc
inc
xlat
arpl
push
addr16
ss
xchg
mov
sub
sbb
leave
mov
inc
ss
dec
fldenv
mov
in
loope
test
jno
xchg
mov
and
jnp
std
mov
inc
inc
push
sbb
arpl
data16
test
ret
push
jge
jmp
stos
call
push
add
pushf
xor
push
imul
arpl
mov
ins
imul
pop
or
jb
jmp
cdq
mov
push
cmp
dec
or
xchg
jg
inc
loop
inc
pop
fcomp
call
in
dec
and
and
push
mov
inc
mov
pop
dec
dec
arpl
jae
push
push
push
loope
mov
nop
cmps
mov
int
enter
pop
into
push
sbb
arpl
shr
(bad)
sub
xor
pusha
(bad)
fstp
and
loop
clc
je
dec
(bad)
adc
sbb
cmc
fadd
mov
xchg
jae
add
and
daa
jno
add
das
lahf
sbb
repz
xchg
bound
dec
cmp
out
cmps
ja
add
adc
jno
out
rol
add
xchg
mov
repz
cmps
push
mov
or
pop
cli
stos
xor
aaa
sar
mov
sub
clc
jnp
sub
daa
(bad)
lahf
dec
jae
out
push
sbb
xor
nop
sub
mov
push
sbb
cli
idiv
dec
clc
push
ror
scas
bound
mov
loope
shl
test
ins
sbb
sub
sbb
ror
fld
out
xlat
cmps
leave
inc
(bad)
rcl
scas
jae
adc
push
je
int
mov
lahf
rol
mul
(bad)
pop
(bad)
mov
jmp
data16
xor
add
cmp
jecxz
add
mov
add
adc
out
mov
pop
in
outs
fmul
xor
cmp
mov
sub
jmp
mov
mov
arpl
leave
mov
sub
cmp
sbb
jg
push
loopne
aas
jecxz
inc
pop
lods
daa
and
paddusw
xor
stc
adc
fild
mov
jnp
pushf
lods
repnz
std
iret
sbb
in
mov
outs
jecxz
mov
arpl
lock
bound
shl
in
iret
jl
repnz
out
mov
stc
pop
inc
rcl
push
out
mov
mov
jl
mov
inc
pusha
jbe
cmp
(bad)
push
mov
jo
ficom
mov
js
clc
outs
ror
jecxz
scas
xor
sbb
or
ins
mov
out
cmp
and
aas
call
adc
retf
daa
dec
xlat
cs
es
push
sub
out
dec
retf
or
cli
pop
stos
jne
pop
lahf
add
loop
mov
not
ins
xchg
call
push
pop
or
inc
push
call
adc
or
test
jns
test
cmps
jne
not
add
cmps
mov
inc
inc
outs
xchg
jg
inc
cmp
mov
aaa
inc
pop
shr
pop
dec
mov
into
add
arpl
(bad)
pop
lds
in
(bad)
int3
cmps
sub
mov
shr
adc
pop
jp
mov
aas
sti
scas
and
and
xchg
inc
rcr
mov
lods
xor
jnp
cmc
neg
scas
jo
push
(bad)
mov
jg
mov
push
pop
loop
push
mov
xlat
mov
push
xchg
movs
mov
pop
iret
in
cli
aas
push
cmps
nop
pop
div
clc
ins
je
je
leave
mov
mov
pop
inc
retf
loop
xor
test
xlat
sub
jb
push
mov
add
adc
mov
mov
scas
js
dec
cli
lds
adc
push
xchg
xor
adc
jecxz
mov
nop
imul
or
(bad)
cmc
lock
cmp
mov
cli
push
outs
ret
xor
imul
repnz
arpl
cmp
jb
stc
adc
add
xor
pop
jg
out
sbb
adc
add
pop
pushf
xor
fisub
mov
outs
push
mov
ret
out
loop
add
scas
push
(bad)
push
aaa
and
xor
out
or
jge
xchg
hlt
pop
inc
iret
cmps
pop
push
and
inc
mov
mov
ins
or
aam
mov
sbb
add
arpl
repnz
cld
adc
scas
repz
outs
idiv
imul
lods
pop
bound
jo
stc
adc
dec
fild
pop
mov
rol
test
pop
adc
inc
inc
lods
pop
popf
arpl
inc
test
ret
push
mov
mov
or
jg
ins
mov
jnp
mov
and
sahf
shr
jno
lock
xor
adc
adc
clc
cs
dec
inc
push
fisub
arpl
mov
repz
push
xchg
sub
mov
inc
mov
icebp
cli
pop
mov
test
das
mov
jmp
sbb
cmps
mov
inc
(bad)
loopne
sub
jb
pop
cs
cli
cmp
adc
jecxz
mov
and
mov
jmp
mov
mov
out
xchg
xchg
adc
cdq
pop
mov
movs
ds
push
inc
rcpps
enter
ins
fist
loope
lock
fwait
cmps
cli
out
dec
inc
mov
jb
mov
aaa
inc
retf
pop
sbb
jp
jg
sbb
mov
(bad)
leave
inc
mov
fwait
and
add
sub
xchg
shl
out
out
in
mov
mov
xchg
leave
adc
nop
jnp
mov
pop
jmp
sbb
cmp
push
(bad)
lock
mov
or
ret
xchg
repnz
mov
or
jnp
pusha
stos
(bad)
ss
push
retf
pop
ds
inc
cdq
fucom
gs
les
stos
mov
(bad)
(bad)
mov
cdq
inc
or
call
inc
dec
adc
add
sub
adc
inc
cmps
cmp
arpl
adc
sub
(bad)
jecxz
jns
or
xchg
cld
mov
push
inc
pop
add
jbe
jae
imul
and
mov
pop
mov
(bad)
lds
mov
mov
sub
push
pop
jmp
cdq
dec
and
xor
jecxz
fwait
adc
stos
sub
and
or
and
repz
pusha
jo
xchg
repnz
sub
loope
test
adc
inc
push
add
mov
push
ror
mov
mov
lock
pop
test
out
addr16
iret
inc
lods
add
mov
mov
xchg
adc
sbb
rol
repnz
pop
mov
int
adc
jne
xor
mul
push
sbb
adc
rcr
mov
mov
pop
adc
gs
cmp
dec
mov
mov
mov
inc
cld
stos
xchg
scas
cmp
xor
sbb
mov
push
fist
(bad)
jmp
inc
xor
int
dec
lahf
xchg
sub
imul
sahf
outs
arpl
test
xlat
pop
xor
jb
adc
adc
in
mov
in
push
js
aad
psllq
dec
dec
add
push
jmp
xor
and
outs
mov
mov
mov
(bad)
xchg
cli
xchg
out
cmp
bound
sub
sub
add
pusha
fsub
push
retf
rol
mov
xchg
fwait
out
sub
pop
jmp
sti
and
repz
(bad)
mov
lahf
xchg
ins
sbb
test
ficomp
les
ret
ja
cmp
mov
fist
or
add
xchg
inc
push
nop
scas
xchg
int3
cmp
push
push
xor
dec
or
popf
pusha
and
add
adc
popf
ret
add
repnz
imul
inc
leave
bound
pushf
mov
add
jle
dec
outs
sub
das
(bad)
clc
mov
fist
xor
adc
ds
xchg
rcr
jl
out
bound
sbb
xor
inc
sti
in
xor
dec
ret
xor
add
out
addr16
(bad)
div
(bad)
and
scas
into
mov
xchg
neg
jl
or
push
inc
mov
add
fsub
lods
cs
adc
outs
stos
out
xor
sbb
aad
push
jae
sbb
mov
movs
and
jnp
xor
mov
mov
xor
jmp
pop
daa
xor
jnp
sub
add
nop
xchg
mov
or
mov
bound
jmp
enter
and
mov
loope
inc
push
fild
and
mov
cli
adc
repnz
(bad)
shr
mov
xchg
rcl
inc
push
push
lods
xchg
gs
not
add
inc
dec
retf
popa
int3
(bad)
jae
(bad)
pop
mov
ror
test
sub
std
or
and
mov
and
xchg
ror
cmp
mov
jb
add
ret
and
fwait
(bad)
cmp
pop
and
or
xchg
cli
sub
sub
sar
adc
daa
jo
(bad)
nop
mov
packssdw
outs
test
push
out
xchg
push
bound
aaa
jae
mov
je
jae
add
lea
sub
dec
xlat
(bad)
stos
push
push
add
push
in
dec
inc
ss
(bad)
sub
xchg
and
adc
mov
add
int3
fs
fild
cmps
mov
rol
xchg
push
loopne
jae
repnz
push
lods
add
add
jno
mov
cmp
loope
mov
aad
push
in
pop
dec
(bad)
enter
and
and
and
mov
pop
adc
stos
mov
and
pop
pop
mov
inc
jecxz
popf
movs
lea
(bad)
call
cmp
and
cmp
jecxz
(bad)
popf
xor
pop
lds
fstp
pusha
xlat
rcl
jle
nop
pop
push
cs
mov
xor
mov
rcr
mov
pop
mul
or
outs
dec
sub
xchg
xor
mov
ja
out
and
ret
jae
mov
push
mov
dec
(bad)
mov
dec
push
adc
sub
adc
jae
repnz
add
inc
jecxz
xor
push
ins
push
mov
inc
mov
xchg
cld
les
push
jl
gs
sub
repnz
outs
or
ds
or
jb
pop
mov
sahf
and
xor
or
ret
(bad)
(bad)
cmp
xor
cmp
stc
pop
cmp
sub
adc
retf
cmp
out
test
enter
jmp
fsubr
add
cmp
(bad)
sar
xchg
pushf
cmps
stos
mov
or
fsub
pop
stc
pop
add
xchg
cwde
jecxz
inc
repnz
add
(bad)
fdivp
pop
mov
pop
dec
pop
and
mov
loope
jnp
mov
pop
imul
xlat
into
out
mov
xor
mov
pop
retf
sub
cmp
retf
push
mov
xchg
js
bound
pop
movs
xor
inc
in
int
pushf
cmp
repnz
mov
js
adc
push
mov
les
jne
adc
(bad)
xor
mov
push
scas
pop
pushf
and
cli
stos
xor
dec
rcl
cmp
jbe
loopne
cmps
idiv
xor
mov
in
push
fsubr
or
cmp
out
xchg
pop
cs
test
and
jmp
sar
je
ret
xor
xor
ins
daa
leave
dec
pop
xor
dec
sub
cmps
fdiv
xor
sbb
mov
repnz
lock
dec
fst
call
je
hlt
je
dec
(bad)
ins
adc
mov
add
jb
test
pusha
and
jb
paddsw
jnp
mov
xchg
cmps
sbb
cs
xchg
mov
pop
push
pop
mov
std
add
dec
and
mov
sbb
mov
or
ret
push
and
push
jno
mov
sbb
sbb
lods
add
jb
es
and
add
adc
test
nop
xor
mov
sub
push
xor
bound
aas
mov
push
rcr
es
xor
call
xor
inc
popf
ss
ret
aaa
push
fsubr
cmp
sub
xor
arpl
xchg
jo
inc
mov
aas
mov
cld
data16
int
add
cmps
or
pop
popa
out
iret
dec
inc
push
lods
aaa
mov
cld
imul
popa
mov
or
out
imul
stos
cmp
loopne
or
push
lods
xchg
pushf
retf
push
fwait
sti
popa
fbstp
jb
jecxz
mov
imul
push
push
xchg
sub
push
retf
jo
pop
ds
adc
sbb
push
out
call
push
sub
and
dec
out
data16
xchg
and
scas
out
div
aam
ins
std
xchg
icebp
mov
cmp
add
shl
in
repnz
mov
ins
xchg
jb
cmp
xchg
push
pusha
ins
test
in
(bad)
jno
lds
js
inc
inc
lahf
sub
jle
mov
cwde
stos
xchg
cs
pop
xchg
push
or
(bad)
dec
(bad)
dec
inc
push
sbb
(bad)
jge
mov
adc
xchg
aas
add
or
and
jno
dec
or
jmp
test
adc
lock
(bad)
jl
jb
dec
pop
cld
jnp
ucomiss
ret
push
xor
adc
push
jle
ins
jmp
into
add
mov
cmp
cmp
mov
es
jo
inc
jmp
sti
cdq
sbb
cmps
repz
loope
adc
inc
or
adc
mov
jecxz
add
aad
sub
or
(bad)
inc
sbb
mov
xchg
pop
push
(bad)
jp
inc
push
adc
test
cmp
or
in
xchg
or
dec
add
dec
outs
add
cdq
sbb
(bad)
xor
dec
(bad)
jbe
jns
adc
inc
inc
addr16
dec
pop
iret
mov
add
cld
shl
mov
imul
xchg
jo
imul
dec
fist
jo
aam
in
test
inc
add
adc
shr
jns
mov
sbb
cmps
and
xor
fstp
call
cmp
data16
enter
pop
enter
cmp
dec
pop
cmps
ins
movs
mov
stos
mov
xor
ss
out
xchg
cwde
(bad)
cwde
cmp
repz
and
push
mov
jae
popa
retf
jno
inc
jmp
sti
and
loop
loop
repnz
xor
and
bound
retf
jo
inc
cli
push
mov
retf
mov
push
or
sar
out
mov
aaa
sub
(bad)
popa
das
lea
pop
dec
inc
and
adc
mov
xor
dec
(bad)
pop
(bad)
pop
mov
push
test
rol
sbb
jl
push
loopne
cmp
xor
mov
fiadd
cmp
mov
pop
and
mov
stos
mov
mov
mov
psrlw
jmp
mov
add
rcr
sbb
or
add
stos
sub
lods
xchg
arpl
test
sar
test
add
jo
mov
iret
stos
mov
xchg
lahf
test
into
sub
mov
aam
or
adc
inc
add
ret
add
ret
int3
mov
(bad)
loopne
icebp
dec
add
fist
and
jae
add
pop
jecxz
jo
ret
xchg
outs
jecxz
or
mov
push
pop
pop
cmps
bound
cmp
gs
(bad)
int
adc
fdivr
sub
push
shr
sub
or
fst
lods
pushf
sub
test
mov
xor
fild
mov
mov
xchg
ret
jecxz
adc
xor
out
mov
jl
jg
sub
mov
pop
push
and
pop
mov
push
inc
jno
div
sahf
ret
xchg
pop
cmps
mov
mov
rcr
out
mov
push
rcl
cli
inc
add
repz
cmp
mov
fisttp
mov
push
arpl
push
mov
mov
xor
data16
push
xchg
push
xchg
(bad)
loopne
mov
cmp
push
iret
iret
cmp
imul
and
mov
push
jnp
cmps
push
loope
inc
push
mov
shl
pop
push
out
outs
stos
addr16
cmp
add
cdq
jle
call
rcl
sub
add
jg
push
lock
lahf
sub
mov
adc
mov
push
xchg
jmp
pop
(bad)
jp
shr
mov
mov
lods
or
sbb
dec
mov
fld
xchg
jp
pop
push
cdq
sti
stos
test
mov
xchg
mov
mov
out
stos
bound
fsub
xchg
mov
jl
ss
pop
cmp
imul
dec
mov
sbb
and
push
jbe
inc
loop
inc
jno
iret
adc
idiv
sti
mov
push
add
jmp
(bad)
sbb
and
fwait
xor
sbb
sbb
dec
retf
push
add
pop
ja
outs
retf
mov
ret
pop
mov
mov
mov
push
push
bound
mov
jle
shl
jo
ror
fstp
and
repz
jp
out
and
dec
fldenv
pop
or
add
push
in
(bad)
fadd
ret
pop
xchg
and
xchg
cli
xchg
out
cmp
adc
xlat
push
mov
into
shr
sub
mov
or
xchg
sbb
xchg
fcom
call
out
clc
dec
xor
shr
and
ins
dec
hlt
mov
lods
cmp
into
sahf
out
data16
mov
mov
loop
leave
repz
xlat
(bad)
jb
aaa
adc
clc
fs
push
sub
and
xor
mov
shl
imul
add
fisub
stc
and
jp
inc
push
dec
stc
arpl
jnp
adc
arpl
cmps
ret
adc
pop
mov
cmp
add
add
mov
pusha
mov
std
adc
and
jb
mov
ficom
ret
adc
leave
xchg
bound
neg
and
ret
shr
add
shr
pop
pop
dec
cmps
leave
push
adc
jmp
push
shl
cmc
arpl
cmp
repz
(bad)
out
jae
inc
dec
or
inc
mov
rcl
fdiv
int3
faddp
lahf
mov
jecxz
mov
jl
xchg
dec
stos
add
push
xor
inc
pop
lds
je
xor
jne
pop
sub
mov
xrelease
jae
repnz
scas
jmp
inc
pop
movs
(bad)
fnstsw
int3
pop
fcmovbe
mov
or
push
imul
ds
into
mov
ss
cld
retf
test
xchg
pop
sbb
imul
arpl
and
arpl
inc
push
push
sub
push
popa
bnd
shl
jecxz
adc
sub
es
in
jp
or
jno
dec
mov
and
test
inc
adc
repnz
lock
std
sbb
sub
mov
adc
(bad)
cmp
xchg
mov
out
jecxz
repz
loopne
mov
adc
xchg
xor
dec
push
jecxz
xor
cmp
aas
(bad)
stc
adc
sbb
addr16
inc
inc
mov
clc
(bad)
push
adc
scas
xchg
mov
mov
shl
out
mov
ror
ins
scas
out
mov
mov
es
repz
not
mov
and
or
push
and
mov
dec
stc
xchg
push
(bad)
(bad)
dec
mov
fidiv
fimul
dec
cmp
mov
jmp
pop
jle
xlat
lahf
bound
dec
xchg
dec
loop
int3
pushf
(bad)
mov
shr
adc
jecxz
bnd
out
out
mov
fiadd
mov
adc
shl
int
and
shr
sbb
jl
jno
xchg
mov
cmc
in
and
scas
std
add
rcr
fsubr
dec
mov
mov
fwait
das
mov
pop
lods
das
shl
ret
sub
xor
adc
ret
repz
mov
jae
add
imul
(bad)
cs
outs
cmps
stos
mov
shr
add
pop
push
pop
cdq
and
pop
add
in
in
mov
or
xchg
mul
cmp
bound
cmp
leave
or
mov
mov
mov
ret
pop
sub
dec
rcr
ficom
mov
fsub
xor
mov
shl
inc
and
std
jl
ret
stos
aaa
push
addr16
or
and
push
loop
dec
or
cmp
rcl
mov
mov
mov
aaa
jae
jbe
adc
mov
push
clc
rcl
mov
xchg
push
aas
sbb
jb
add
and
mov
adc
jge
rcr
sbb
add
lods
addr16
jae
pop
daa
mov
inc
xchg
rcr
outs
xor
loopne
outs
xor
mov
and
adc
ret
push
in
dec
jo
adc
lahf
or
pop
inc
ror
imul
cld
dec
lods
jp
repnz
xchg
das
add
mov
mov
hlt
arpl
(bad)
aaa
enter
loopne
xor
ret
mov
pop
mov
(bad)
push
xchg
imul
add
mov
cmp
sub
cmps
sub
jecxz
jbe
inc
push
jp
fs
mov
cdq
(bad)
lock
cmp
in
int
dec
sub
jecxz
scas
ret
sub
jge
or
xlat
(bad)
cmovae
and
mov
cli
ret
scas
and
mov
fisubr
mov
enter
call
inc
cwde
and
int
xlat
add
push
repz
fs
loopne
inc
lods
pop
jmp
push
mov
ja
adc
lea
shl
or
add
mov
push
div
retf
outs
add
jae
aam
push
popa
cmps
dec
fwait
ret
cmps
cmps
mov
out
ss
outs
xchg
(bad)
rcl
mov
push
pop
and
xor
cmp
push
add
jbe
(bad)
out
hlt
mov
push
pop
pop
xor
pop
(bad)
push
in
(bad)
data16
push
inc
mov
mov
out
jle
pop
jae
out
jne
inc
pop
fidiv
data16
shl
outs
in
in
adc
and
jle
rcl
mov
add
mov
push
adc
rcl
scas
and
inc
mov
push
mov
(bad)
and
xor
cmp
adc
div
jb
les
jno
lods
fcmovu
fwait
jb
ja
rcl
mov
push
xchg
or
xchg
sub
dec
jmp
lea
test
mov
inc
shl
clc
xchg
jle
int
sti
in
sub
daa
lods
aaa
arpl
add
gs
add
jno
mov
mov
pop
or
pop
jl
mov
ret
inc
sub
dec
xor
jecxz
or
or
sub
mov
or
ret
add
fucom
xor
xchg
add
sahf
mov
jl
sbb
mov
stos
dec
pop
lods
out
popa
jmp
jae
stos
jecxz
xor
sbb
neg
sbb
push
pop
xchg
out
jb
add
mov
pop
loop
lods
repz
leave
outs
mov
sbb
pop
bound
sbb
dec
mov
ins
ret
out
mov
inc
in
mov
fsub
fiadd
cmp
or
push
je
loope
xchg
add
push
mov
rcl
inc
push
xchg
lods
popf
out
mov
fist
in
jecxz
daa
jle
add
mov
addr16
aam
fs
jecxz
inc
xlat
and
call
out
out
popa
stos
mov
and
pop
repz
outs
div
test
add
inc
aas
mov
shl
hlt
daa
cmc
xchg
dec
cs
jg
ror
ja
int3
in
inc
dec
adc
bound
lea
aaa
test
test
outs
xor
xchg
into
dec
push
arpl
cmp
inc
addr16
adc
pop
jbe
fs
sahf
(bad)
and
xchg
(bad)
sbb
inc
sbb
movs
mov
fnstcw
gs
dec
cld
out
test
xchg
iret
push
mul
lds
mov
push
push
popf
(bad)
pop
xor
pusha
pop
mov
or
or
pop
or
xor
ret
push
cwde
push
fdiv
jmp
xchg
jne
retf
fs
cmp
jbe
daa
hlt
xor
add
into
jecxz
cdq
imul
jno
leave
add
add
pushf
hlt
movs
inc
cmp
push
sub
sub
sbb
rcl
mov
and
push
and
cmp
cmp
idiv
repz
xchg
xchg
mov
pop
fsub
mov
pop
add
addr16
into
jle
stos
sub
repz
jae
adc
xchg
add
adc
sub
xchg
add
push
jmp
call
mov
pusha
stos
push
jbe
cmps
adc
mov
cwde
test
lock
adc
cmp
and
xchg
adc
(bad)
adc
scas
repnz
xor
push
mov
add
add
cdq
sub
jne
repnz
seta
mov
(bad)
stc
movs
out
dec
adc
and
pop
(bad)
push
fstp
repz
cmp
mov
jl
xchg
dec
pop
dec
icebp
leave
mov
aas
mov
add
adc
mov
xchg
lods
idiv
xlat
cmps
xchg
(bad)
mov
lahf
inc
leave
adc
add
jecxz
jb
into
mov
outs
and
fisttp
or
(bad)
scas
push
adc
loopne
lock
inc
data16
test
pop
mov
jbe
cdq
cs
inc
mov
icebp
cs
inc
in
stos
jae
outs
arpl
sub
adc
bnd
xchg
sub
hlt
in
dec
push
cmp
ss
cli
(bad)
ds
sti
cmc
ret
mov
sahf
imul
or
pop
bound
mov
jbe
jl
cld
std
sbb
mov
ds
adc
call
out
(bad)
mov
sub
inc
shr
adc
outs
out
jge
outs
ins
(bad)
loope
(bad)
mov
and
dec
and
push
mov
mov
xchg
xchg
pop
out
cmp
inc
mov
arpl
jb
pop
psrad
je
ds
xchg
pop
(bad)
outs
jecxz
mov
or
outs
inc
push
fild
and
mov
jecxz
stos
das
inc
in
xchg
xchg
pushf
cmp
and
test
xchg
fwait
lock
push
or
or
repnz
sbb
aam
adc
addr16
aam
cmps
pop
pop
stos
aaa
out
xchg
push
pop
pop
cmps
rcr
(bad)
sbb
shr
pusha
jg
or
aaa
out
cdq
mov
jae
enter
nop
aas
test
les
cwde
sub
dec
aas
add
mov
xchg
cwde
cdq
(bad)
jae
inc
sbb
fs
and
fdiv
dec
mov
(bad)
dec
adc
xchg
mov
fmul
push
clc
or
stos
int
stc
dec
jmp
jecxz
(bad)
pop
xchg
out
mov
xchg
pop
push
lea
add
imul
in
or
xchg
mov
pop
fnstcw
ds
push
enter
std
add
push
popa
and
inc
stos
mov
test
xchg
int
lods
stos
jno
dec
dec
xchg
adc
xor
pusha
popa
mov
pop
and
sbb
sahf
inc
add
das
mov
mov
repnz
adc
pop
or
jmp
cmps
rol
aas
xor
mov
push
adc
les
adc
and
xor
movs
add
push
mov
xor
fidiv
adc
or
into
pop
ret
mov
into
inc
xchg
and
lahf
pop
cld
(bad)
(bad)
frstor
sub
jae
jge
pop
outs
mov
jnp
popf
xor
inc
stos
inc
cmp
stos
push
fdiv
mov
sub
loop
mov
jae
sti
add
lahf
adc
imul
add
pop
maxps
dec
mov
jbe
retf
add
daa
jecxz
push
jnp
ret
dec
jecxz
xor
pop
in
mov
stos
nop
retf
cwde
and
es
fwait
sub
test
or
shr
aaa
sbb
fidiv
ja
(bad)
rcl
mov
test
jge
shl
xchg
mov
stc
and
inc
mov
xchg
leave
mov
mov
or
scas
out
stos
(bad)
imul
mov
je
adc
jecxz
cwde
imul
mov
stos
int
mov
inc
ficom
jmp
jno
xchg
sbb
iret
or
into
add
sub
mov
jmp
cmp
jae
mov
or
and
push
mov
paddw
mov
dec
adc
adc
xor
dec
cmp
push
imul
or
xchg
ins
retf
mov
or
leave
call
pop
xlat
outs
cmps
icebp
das
imul
xchg
div
jno
inc
pop
cmp
and
xchg
ror
and
repz
mov
mov
sub
mov
inc
(bad)
cs
div
(bad)
push
and
jle
aas
xor
sbb
js
jl
xchg
pop
repz
test
fild
push
adc
fnstsw
mov
imul
cmps
pop
inc
retf
bound
rcl
daa
cmps
repnz
push
push
addr16
sbb
adc
and
jno
push
and
rcl
and
push
and
jns
int3
not
bound
popa
in
pop
aas
push
ja
ret
xchg
mov
ror
out
jns
aam
mov
rcl
xor
mov
sbb
cmps
repz
pushf
cmps
popa
adc
fsubr
aad
in
cdq
mov
inc
push
por
sub
adc
jl
cmp
ret
pop
sub
test
cmps
mov
pop
mov
std
add
dec
and
int
ret
call
mov
mov
dec
inc
enter
push
stc
je
cld
shl
and
mov
mov
fstp
sbb
add
inc
inc
adc
jb
dec
dec
cdq
adc
int
ret
xchg
pop
pop
mov
push
sub
mov
inc
and
inc
das
mov
cli
in
fst
xor
ret
pop
nop
test
push
xchg
xchg
mov
mov
repz
ret
pusha
retf
fs
sbb
mov
ins
push
fimul
sub
push
mov
retf
mov
xorps
int3
cmp
retf
test
mov
cwde
lods
jae
xor
jnp
je
fild
add
cmps
push
sbb
push
push
inc
jnp
pushf
data16
jmp
inc
push
push
ds
xchg
shl
sbb
int
and
adc
jbe
mov
push
push
sar
jmp
js
lds
mov
push
daa
jmp
mul
pop
repnz
loop
aaa
add
xor
test
sbb
sub
xor
mov
data16
rcr
daa
repnz
repz
loopne
in
mov
stos
nop
retf
mov
xor
ret
xchg
sahf
scas
push
xchg
xchg
mov
or
popf
or
adc
es
xchg
adc
or
xchg
jle
fmul
outs
xchg
xchg
imul
mov
jbe
and
xor
cmp
shl
pop
jp
gs
mov
mov
add
out
into
adc
enter
mov
xchg
adc
pop
add
xchg
inc
mov
fist
stos
and
jl
inc
cdq
xchg
jb
jg
xor
sub
icebp
imul
arpl
lock
mov
(bad)
cli
push
and
push
ret
shl
push
pop
and
sub
mov
imul
adc
daa
jo
(bad)
pop
mov
or
les
inc
push
add
cs
and
mov
xor
test
mov
jnp
push
cmp
push
push
push
jmp
jmp
adc
and
xor
push
out
or
mov
jmp
mov
jae
add
outs
int3
cmp
or
(bad)
iret
stc
jle
fcomp
popf
out
and
push
in
adc
shl
outs
mov
xlat
inc
loopne
repnz
ret
pop
lock
aaa
adc
jmp
add
push
ret
rcl
call
mov
mov
cmp
jae
cld
and
loope
adc
add
lds
popa
ret
and
push
aad
dec
(bad)
mov
stos
adc
pusha
cmp
(bad)
(bad)
std
inc
xchg
(bad)
addr16
cmp
xlat
sbb
out
rcl
lock
stos
push
nop
push
arpl
add
xor
loop
or
sbb
adc
call
inc
in
(bad)
xor
cmp
mov
mov
mov
enter
fwait
xor
and
jnp
in
int3
ret
add
xor
xchg
repnz
lock
inc
add
call
adc
hlt
pop
xor
sbb
fwait
add
int
leave
mov
mov
mov
cmp
test
xor
ret
add
push
xchg
in
xlat
mov
ja
adc
push
mov
pop
mov
nop
push
cmp
xchg
sbb
cdq
sub
mov
mov
adc
push
xor
ret
cmp
mov
je
mov
jnp
sti
adc
arpl
add
adc
outs
mov
(bad)
loop
add
retf
jb
sub
bound
inc
in
fs
aas
rcl
stos
iret
push
stc
sub
mov
mov
jo
shr
(bad)
mov
rcl
in
jle
not
jge
test
adc
jae
add
pop
frstor
div
fwait
daa
mov
loop
out
ror
xchg
out
pop
(bad)
mov
pop
jbe
mov
cmp
and
jmp
or
(bad)
mov
jb
mov
loopne
xlat
inc
aas
adc
out
sbb
jo
ja
push
mov
xor
push
shl
push
std
pop
jp
and
jecxz
jmp
sbb
fwait
mov
fcmovu
mov
or
jge
and
xchg
sbb
loopne
mov
xchg
arpl
jne
cmovae
mov
std
pop
pop
call
test
jge
xchg
jnp
jg
mov
sub
loope
mov
adc
xor
ret
pop
loop
jg
shr
mov
mov
out
adc
ret
xor
(bad)
add
jp
mov
aaa
ins
push
inc
or
inc
sub
xor
sub
and
mov
les
cmps
fs
jo
nop
sahf
mov
and
cli
jbe
int3
ret
adc
fst
ins
xchg
mov
mov
mov
xor
inc
ficomp
call
fild
outs
inc
sti
add
jb
es
lods
arpl
jg
add
adc
test
nop
xor
mov
sub
adc
push
inc
bound
aas
mov
push
rcr
xor
xor
call
xor
push
ja
sub
inc
mov
xor
push
repnz
xchg
jle
dec
mov
push
fcomp
arpl
dec
jmp
add
popf
rol
test
and
sbb
ficomp
cld
pop
iret
in
jg
xchg
pop
xchg
xchg
imul
push
xchg
pop
leave
jno
add
jb
mov
adc
xor
dec
pop
push
xchg
or
sti
xor
pop
in
rcl
push
cli
clc
rcr
leave
and
xor
sbb
xor
rcl
mov
or
arpl
into
adc
dec
xor
mov
jp
jle
pop
pop
call
mov
mov
inc
loop
inc
xor
pop
sets
ins
mul
mov
push
jmp
xchg
ret
in
sbb
mov
call
sar
mov
and
push
test
dec
mov
out
rcl
rcl
(bad)
and
jae
push
(bad)
inc
inc
or
les
mov
xchg
dec
loope
cmps
jle
push
ja
pushf
mov
pop
and
int3
loop
sub
repz
(bad)
out
(bad)
pop
mov
daa
mov
push
mov
imul
ficom
daa
cmps
cmp
mov
repz
fistp
out
mov
lahf
jmp
hlt
push
shl
loopne
dec
adc
mov
sbb
mov
cmps
pop
addr16
dec
jp
cmp
jmp
xor
psrld
jecxz
not
xchg
data16
fbld
arpl
mov
sbb
pop
xchg
lahf
adc
sub
mov
ja
jmp
es
adc
mov
adc
inc
mov
mov
add
mov
inc
mov
stc
jae
es
jnp
loop
jno
stos
adc
or
lea
cmps
mov
leave
inc
pop
lods
xchg
jno
clc
add
aaa
in
scas
and
mov
scas
jg
shr
pop
loope
shl
push
lock
call
aaa
nop
and
mov
out
mov
and
repz
pop
cmp
rcl
loopne
push
add
repz
add
rcl
(bad)
jae
imul
gs
aas
add
lods
(bad)
das
out
jb
std
fucomi
push
jecxz
push
repnz
mov
jns
iret
jl
sbb
ret
jae
and
adc
pop
mov
pop
ds
lods
inc
into
push
jp
adc
xchg
push
jmp
mov
cli
test
dec
pop
pop
loop
xchg
add
inc
xchg
add
push
mov
std
mov
scas
dec
int
stos
cmp
sub
pusha
repnz
add
xchg
xor
lods
push
out
arpl
mov
scas
xor
xchg
out
or
xlat
jo
cmps
adc
ret
movs
mov
popf
std
add
mov
cmp
out
sbb
jle
ins
cs
dec
add
call
pop
mov
out
rol
pusha
repnz
mov
rcl
loopne
popf
daa
inc
cdq
adc
push
int
(bad)
dec
shl
sbb
rcl
cs
jg
lods
mov
arpl
mov
aaa
push
scas
mov
sar
sbb
fnstenv
cmp
out
popf
xchg
mov
in
ss
fdiv
push
cmp
jecxz
sbb
cmp
sub
push
out
arpl
test
jg
ret
pop
loop
xchg
xlat
cli
xchg
sbb
or
sub
jnp
pop
jno
ret
not
(bad)
mov
sub
mov
rcl
inc
icebp
jae
adc
pop
popa
mov
mul
add
pop
rcl
call
lahf
adc
push
push
cmp
lahf
xlat
or
push
xchg
shl
xchg
psubq
inc
cld
push
in
jecxz
xor
sub
mov
call
icebp
mov
jno
jno
fwait
mov
out
cmps
outs
outs
mov
pop
outs
outs
xchg
or
inc
jmp
data16
dec
iret
mov
jno
icebp
call
cmp
pop
outs
outs
jg
femms
pop
push
das
cs
ds
mov
(bad)
retf
std
call
icebp
out
inc
shl
femms
pop
push
mov
cmps
jno
das
out
(bad)
inc
cld
in
push
(bad)
repz
jmp
push
sbb
or
push
pop
push
mov
mov
jno
daa
jmp
(bad)
mov
outs
jecxz
or
jge
jp
cs
dec
iret
mov
(bad)
inc
ja
in
outs
scas
int3
int3
cs
shl
popa
jecxz
mov
push
sub
ds
into
push
dec
jno
aas
ds
mov
fidivr
and
ins
das
bound
mov
pushf
dec
(bad)
imul
jl
outs
xchg
icebp
call
lods
push
jno
push
retf
fdivr
cmp
jecxz
mov
pop
loop
dec
dec
xchg
rol
jmp
es
adc
mov
pop
rol
pusha
repnz
jl
push
das
cs
mov
cs
dec
lahf
icebp
int3
(bad)
dec
pop
pop
loop
or
xchg
loopne
dec
dec
inc
adc
cld
jbe
fnsave
sub
or
or
daa
aas
jb
push
fbstp
popf
out
adc
inc
push
in
imul
push
out
pop
shl
scas
xor
xchg
push
dec
cs
stos
mov
xor
es
in
mov
int3
jno
nop
pop
loop
xor
mov
into
push
lods
mov
cld
aaa
nop
and
mov
sbb
cmps
ins
xchg
loopne
ror
lods
fiadd
xor
mov
push
cmp
mov
dec
or
sbb
(bad)
loope
mov
dec
push
adc
xor
es
pop
xchg
jg
cmp
sbb
or
sti
ins
mov
cs
ds
into
jmp
call
xor
pop
daa
xchg
repz
(bad)
mov
pop
gs
mov
call
stos
in
movs
and
test
repnz
cli
inc
sub
or
out
popf
inc
xor
add
aaa
push
scas
and
mov
mov
mov
mov
add
mov
es
mov
xor
cmp
pop
loop
xor
loopne
mov
add
stc
jae
es
fld
xor
mov
jg
rol
loopne
aas
mov
cmp
popf
stos
aas
clc
or
mov
rcl
scas
and
sti
pop
mov
ja
mov
mov
mov
ss
test
push
inc
ret
sbb
repz
push
sti
inc
mov
fst
loopne
gs
pop
in
mov
or
sub
out
and
jl
add
push
popf
inc
loopne
push
inc
mov
push
jecxz
int
dec
ret
imul
(bad)
or
shl
sub
addr16
push
inc
and
jae
es
imul
mov
sub
outs
repnz
jl
push
pop
cs
iret
sub
daa
inc
cdq
cwde
inc
loop
push
add
adc
xor
adc
(bad)
mov
cs
sub
push
out
ret
arpl
in
xchg
scas
repz
dec
add
xor
push
jp
sub
push
mov
mov
loopne
adc
inc
push
int
out
rcl
jge
push
ins
das
bound
cmp
inc
ret
scas
xor
cmp
sbb
xor
cmps
ins
xchg
xchg
xchg
mov
inc
lea
es
sahf
and
int3
(bad)
dec
pop
fsubr
scas
jg
cmps
jl
mov
(bad)
jb
into
xchg
lods
out
mov
lahf
ror
test
cmc
out
dec
sahf
outs
jecxz
mov
and
fbstp
popf
out
adc
and
repnz
rcr
inc
xor
or
dec
lahf
cmp
mov
add
into
add
repz
ins
(bad)
es
mov
inc
popf
inc
xchg
jae
jmp
dec
add
mul
inc
push
mov
and
adc
sub
loopne
jno
ret
nop
outs
xchg
call
add
rol
out
arpl
nop
and
mov
outs
xor
arpl
mov
(bad)
fst
inc
lea
scas
scas
xor
mov
xlat
out
adc
arpl
push
mov
imul
jecxz
lock
sub
lahf
cmps
jl
push
mov
into
push
adc
lea
push
fild
retf
test
and
push
ret
mov
xor
and
jb
dec
shr
dec
dec
pop
fsubr
xchg
or
shr
cs
mov
arpl
in
cmp
lea
dec
ret
outs
neg
cmps
ins
jnp
xchg
fsub
sbb
jecxz
sahf
and
pop
out
leave
pop
loop
xlat
mov
adc
retf
mov
mov
push
ret
jecxz
xor
mov
jl
ins
xchg
iret
inc
adc
add
mov
or
jle
rcl
pop
push
cmp
sub
xchg
cmps
and
sub
outs
repnz
cmps
cmps
jnp
mov
add
ds
jp
and
fstp
sbb
jl
rcr
xchg
ds
add
fsub
sbb
mov
repz
mul
rcr
pop
xchg
ds
dec
pop
mov
pop
sar
fmul
mul
rcr
dec
or
push
lods
mov
jb
daa
inc
lahf
adc
cmp
xor
sbb
jle
adc
mov
lods
sub
lea
(bad)
xor
pop
and
loopne
pop
ja
or
rcl
pop
mov
lahf
out
jbe
sbb
mov
ds
icebp
ja
out
arpl
jge
add
cli
scas
and
(bad)
(bad)
mov
ins
daa
out
cs
stos
into
fstp
(bad)
mul
inc
lahf
cwde
sub
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
(bad)
outs
mov
jne
test
inc
popa
sbb
cli
fild
cmps
mov
adc
pop
pause
inc
mov
sub
jmp
retf
fcomp
push
jmp
(bad)
xchg
mov
and
mov
int3
loope
xchg
jnp
adc
stos
xor
gs
xlat
movs
popf
pop
jns
aas
and
rol
movs
repnz
xchg
mov
es
push
bound
jae
jno
dec
fnsave
mov
shl
sbb
or
in
scas
jp
retf
dec
cmp
add
adc
and
xor
retf
(bad)
cli
call
xlat
stos
scas
mov
test
aas
adc
push
bound
pop
xor
loop
push
push
sub
add
sti
mov
ja
dec
inc
inc
cmp
push
push
push
loop
push
push
mov
loop
inc
cs
jle
pop
loop
and
cld
(bad)
sub
xchg
out
or
rcl
loop
repnz
mov
inc
push
lods
bound
jae
add
push
and
xor
fwait
repnz
mov
inc
mov
lea
add
push
and
dec
xor
mov
jecxz
jecxz
repz
dec
inc
jmp
push
push
xor
adc
and
push
jmp
repz
mov
inc
inc
stos
push
cmp
mov
adc
adc
mov
ret
rcr
xor
push
inc
add
popf
arpl
jae
xor
inc
and
int
inc
ret
rcl
xor
bnd
adc
inc
inc
lods
push
loop
jb
add
adc
and
xor
jecxz
repz
xchg
xchg
mov
fcom
bound
mov
add
adc
ret
ret
shr
repz
fidiv
ret
int3
fistp
adc
fistp
ret
retf
(bad)
xlat
mov
loop
in
adc
xor
push
(bad)
fistp
add
and
xor
inc
shl
jecxz
mov
(bad)
and
loope
out
movs
mov
xchg
in
hlt
adc
and
pop
test
and
jo
mov
push
jae
pop
inc
inc
dec
dec
jnp
movs
cmps
xchg
jae
rcl
loop
repz
inc
mov
jns
pop
aaa
inc
push
adc
or
cmp
ret
ror
adc
cmp
popa
test
mov
sahf
imul
cmp
and
xor
mov
shl
jecxz
addr16
sbb
inc
inc
push
push
xchg
adc
and
sbb
sbb
add
mov
iret
(bad)
iret
(bad)
popa
jb
add
xor
and
rcl
loop
repz
xchg
imul
mov
adc
and
rcl
loop
adc
jnp
xchg
xchg
mov
inc
jg
and
adc
adc
push
mov
xor
ret
push
pop
jae
repnz
sub
outs
pop
mov
ja
bound
push
add
push
outs
jne
pop
mov
and
xchg
mov
imul
push
adc
and
retf
ret
rcl
mov
adc
cmp
cmps
mov
inc
xchg
mov
add
add
or
xor
ret
shl
jecxz
inc
fnstenv
aas
xlat
loop
loopne
cmps
mov
adc
and
xor
shr
xor
mov
push
bound
add
adc
mov
xor
add
mov
inc
or
loop
je
add
adc
repnz
rol
rcl
in
arpl
add
mov
cmp
bnd
add
adc
or
xor
adc
jae
dec
ins
lahf
mov
stos
push
ret
jae
add
pushf
pop
mov
pop
shl
jecxz
xor
mov
push
push
bound
jnp
add
and
(bad)
(bad)
fnclex
jecxz
jge
loop
stc
rcr
aaa
mov
inc
push
jecxz
arpl
retf
adc
ret
xor
ret
shl
jecxz
jecxz
adc
inc
add
bound
jb
add
arpl
and
xor
dec
jbe
jecxz
repz
inc
inc
push
push
sahf
data16
add
cmp
push
jnp
ret
mov
jecxz
repz
sbb
mov
inc
push
push
bound
adc
into
and
xor
ret
fcmovnb
jecxz
repnz
adc
inc
inc
push
push
add
or
add
adc
mov
xor
ret
push
jecxz
repz
push
xchg
xchg
mov
inc
push
push
bound
push
or
adc
push
pop
ja
xchg
popf
mov
xchg
arpl
add
mov
repz
repz
bnd
test
test
jmp
aaa
cs
out
sti
xchg
pushf
mov
jno
add
adc
add
add
sbb
add
pop
inc
sahf
xchg
pop
sbb
xor
or
and
pop
inc
jle
add
add
add
push
ja
(bad)
icebp
repz
mov
repz
imul
adc
repnz
xchg
call
adc
ss
push
push
idiv
xchg
popf
lods
mov
lahf
cmc
add
pop
adc
je
xchg
mov
xchg
out
repz
xor
repz
inc
xchg
pop
sysret
xor
or
or
xchg
jae
sbb
cmp
imul
push
inc
cmp
inc
jae
push
mov
pop
addr16
and
das
sbb
imul
cmp
push
or
xchg
mov
xchg
jecxz
out
rcl
loop
repz
mov
push
bound
repz
adc
mov
fwait
cmp
ret
rcl
sub
cs
outs
jbe
xchg
stos
mov
jns
pop
daa
aas
es
or
adc
push
dec
mov
push
dec
jbe
push
loop
add
dec
mov
addr16
and
pop
adc
and
nop
popf
mov
mov
jmp
adc
in
sti
xchg
dec
bound
stos
jecxz
loope
sub
adc
cli
adc
jge
fadd
rol
fdiv
ret
push
push
bound
out
add
adc
jmp
xor
ret
sar
out
repnz
xchg
fwait
xchg
mov
jbe
push
bound
and
jns
and
xor
loop
push
pop
xor
mov
movs
push
bound
jg
add
adc
adc
or
ret
rcl
mov
sub
mov
loop
push
bound
jns
add
cmp
repnz
aad
cmp
ret
(bad)
fwait
or
shr
mov
inc
rcpps
arpl
jb
add
imul
xor
dec
rcl
loop
pop
repnz
mov
lods
push
dec
push
xor
add
add
adc
ret
shl
and
repz
pop
mov
push
pop
arpl
jae
add
adc
pop
aaa
xor
ret
call
adc
shl
std
push
bound
mov
add
adc
and
xor
das
sub
loop
repnz
mov
mov
inc
and
bound
push
test
xor
add
shl
jecxz
adc
ins
(bad)
mov
inc
push
push
bound
popa
add
adc
and
push
xor
ret
sar
jecxz
repnz
repz
inc
inc
ss
add
mov
ret
add
loop
repz
pushf
xchg
mov
add
bound
pop
xor
pop
inc
js
pop
mov
and
xchg
xchg
mov
inc
push
push
bound
jae
add
adc
or
sbb
mov
nop
out
test
or
xor
pop
bound
dec
idiv
adc
cmp
sbb
rol
ror
add
push
mov
inc
mov
jae
imul
sbb
cmp
xor
ret
rcr
sub
adc
fcomi
call
fidiv
push
and
xor
fucomip
out
out
repnz
(bad)
jmp
push
push
bound
jb
add
fbld
and
xor
ret
loop
repz
xchg
imul
jle
bound
xor
adc
and
jg
popf
mov
xchg
cwde
jbe
sbb
and
imul
inc
inc
push
push
bound
addr16
add
adc
pop
mov
faddp
mov
repz
shr
int
lock
(bad)
int3
mov
fdivr
in
sub
adc
ret
rcl
mov
xlat
into
sti
(bad)
and
sub
repz
push
bound
stos
adc
adc
cmp
(bad)
int
(bad)
movs
mov
adc
mov
bound
lahf
cmc
sbb
adc
imul
loopne
stc
in
mov
xor
sbb
mov
bound
add
or
and
pop
pop
inc
pusha
push
jae
pop
inc
inc
dec
dec
jbe
in
jae
add
and
xor
xchg
pusha
jle
aas
dec
inc
jb
push
dec
mov
and
add
jg
and
xor
pop
inc
jns
repnz
mov
inc
mov
mov
pop
xor
sbb
xor
ret
cli
push
jecxz
repnz
xchg
xchg
mov
repz
lahf
mov
add
sbb
xchg
mov
lock
mov
xchg
push
push
bound
pop
add
adc
or
xor
ret
movs
xchg
adc
imul
push
push
bound
stos
jecxz
adc
and
daa
xor
ret
sar
jecxz
bnd
xchg
mov
inc
cmp
arpl
add
adc
mov
xor
ret
imul
repnz
pop
jo
jnp
mov
inc
inc
stos
push
bound
pop
add
adc
jp
xor
ret
shr
sub
xchg
mov
inc
push
push
bound
mov
add
adc
or
cmp
ret
shl
xchg
or
xchg
bound
jno
add
push
and
xor
cli
loop
loop
repnz
fiadd
and
iret
popa
jb
add
fist
and
xor
rol
rcl
sbb
repz
mov
jb
push
bound
lsl
adc
pop
mov
pop
and
and
mov
pop
push
push
bound
pop
add
adc
inc
jnp
xor
ret
inc
push
outs
loope
repz
cdq
mov
scas
cmps
lods
pushf
imul
and
push
ret
rcl
mov
repnz
xchg
mov
jmp
jge
add
sbb
daa
add
cwde
cmp
xchg
xchg
mov
inc
loop
bound
popa
(bad)
into
(bad)
int3
retf
xor
(bad)
fidivr
xchg
mov
fxtract
loope
arpl
loop
loopne
es
jmp
repz
xlat
inc
inc
push
push
sbb
jae
(bad)
adc
and
xchg
call
cmp
inc
push
jb
dec
push
dec
mov
inc
push
push
inc
bound
add
adc
and
bound
ret
rcl
mov
repnz
xchg
mov
inc
push
push
cmp
fcmovb
sti
(bad)
fmul
(bad)
int
cmc
jecxz
repnz
sub
call
arpl
add
adc
(bad)
das
xor
ret
(bad)
(bad)
int3
retf
ror
test
mov
inc
(bad)
push
push
bound
jb
add
mov
add
rcl
loop
repz
mov
inc
push
push
bound
dec
inc
dec
inc
adc
and
pop
ret
ret
rcl
data16
repz
xchg
mov
inc
push
xchg
arpl
jae
add
adc
iret
xor
ret
shl
jecxz
repz
adc
inc
inc
push
push
bound
sbb
add
adc
xor
ret
shl
jecxz
dec
inc
dec
xchg
xchg
mov
inc
push
cmps
lahf
imul
add
adc
sbb
xor
ret
sahf
(bad)
loop
repnz
jmp
mov
int3
hlt
rcr
retf
jbe
add
fcomip
ret
ret
ret
rcl
jmp
xchg
mov
inc
push
pop
arpl
jae
add
adc
dec
xor
ret
pop
jo
repnz
xchg
mov
inc
push
push
mov
jae
call
adc
and
xor
ret
shl
loopne
bnd
xchg
mov
inc
push
sub
jb
mov
adc
and
data16
jecxz
push
dec
push
dec
jo
jns
pop
inc
inc
push
push
jbe
jo
add
sub
and
xor
jecxz
repz
xchg
(bad)
mov
inc
bound
mov
(bad)
adc
sti
pushf
mov
mov
pop
lods
cwde
ja
push
xchg
shl
aad
or
mul
retf
mov
ret
in
fs
mov
ins
retf
ins
or
cdq
adc
jbe
add
jp
adc
cmp
cdq
jle
shl
movs
mov
pop
dec
push
cmps
test
add
(bad)
icebp
mov
jp
xchg
jne
daa
ss
xchg
mov
shr
aaa
and
hlt
aad
pop
add
push
addr16
cmp
add
pusha
inc
gs
inc
mov
movs
mov
xchg
and
fcmovnbe
ss
aaa
or
push
sbb
inc
je
inc
cld
mov
xchg
mov
ret
int
fild
ds
or
cmps
add
jno
pop
test
xchg
test
(bad)
out
mov
cmp
xor
jle
push
inc
inc
inc
movs
mov
mov
cmps
repnz
mov
shl
add
sbb
fs
inc
popa
add
enter
aad
sub
arpl
inc
inc
jge
inc
and
mov
mov
popf
(bad)
out
ret
and
pop
xor
sbb
pop
add
pusha
push
outs
gs
ret
test
xchg
shl
xlat
in
inc
aaa
add
and
xor
jb
dec
pop
push
add
add
cmc
(bad)
ss
adc
jbe
inc
push
push
push
mov
xchg
mov
mov
sti
test
jl
xor
adc
adc
inc
adc
dec
pop
inc
sub
in
loope
rcl
and
add
pop
pop
xor
jge
or
in
xchg
mov
mov
in
loope
hlt
mov
adc
pop
inc
dec
push
sbb
and
jecxz
out
or
repz
add
and
xor
jb
jl
push
arpl
cmp
not
icebp
ror
xor
xor
and
cmp
jae
bound
add
cld
mov
xchg
out
(bad)
ror
popf
retf
xor
xor
inc
sbb
je
push
jb
lock
out
ret
test
inc
repnz
add
adc
pop
xor
pop
push
dec
data16
jae
adc
icebp
out
xchg
rol
jmp
xor
or
xor
inc
pop
sub
inc
push
inc
and
xchg
jecxz
mov
pop
daa
and
add
adc
jl
ins
xchg
cmps
xchg
mov
xchg
call
jecxz
sbb
xor
adc
and
inc
inc
push
arpl
push
push
mov
xchg
mov
mov
repz
jecxz
in
xor
and
push
pop
inc
addr16
adc
push
push
mov
mov
mov
cmps
repz
jecxz
repz
adc
add
add
push
je
jbe
xchg
cmps
xchg
fisttp
xlat
lods
retf
repnz
shl
xor
push
(bad)
xor
inc
dec
pusha
ja
jb
lods
mov
mov
loope
repnz
cmp
and
jae
push
arpl
xor
mov
test
xchg
(bad)
add
add
jo
inc
jb
popa
jb
mov
(bad)
mov
mov
ror
in
cmc
mov
add
or
adc
jbe
jge
bound
xor
lods
mov
mov
shl
cli
ror
fild
or
data16
inc
fs
or
ret
aad
xlat
(bad)
shl
and
cmp
pop
xor
dec
sub
jbe
jae
lods
loop
mov
ret
or
adc
inc
dec
jbe
jge
inc
pop
lods
cmps
mov
mov
mul
(bad)
jge
pop
ins
push
es
dec
and
mov
stos
xchg
xchg
repz
lock
mov
inc
ds
pop
sbb
pop
push
jbe
inc
scas
inc
test
mov
xchg
rol
std
std
lods
xlat
out
sub
adc
add
adc
and
xor
ret
shl
jecxz
repz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
lahf
mov
cmps
(bad)
push
xchg
ins
or
lock
or
bound
mov
fcmove
daa
cmp
pop
sub
xchg
arpl
xchg
push
or
xor
push
movlps
jnp
xchg
mov
ror
inc
push
aaa
inc
cmps
mul
cmp
pop
scas
dec
outs
(bad)
sbb
sahf
(bad)
scas
mov
push
daa
xor
outs
jno
jge
push
inc
xor
mov
int3
leave
xlat
fcmovnu
sub
xor
jbe
ja
inc
push
pop
xor
xchg
xchg
xchg
lock
std
(bad)
rol
mov
sub
or
je
inc
push
pop
pop
mov
shl
in
lock
sti
ret
rol
shl
ds
or
add
jnp
popa
jb
push
pop
inc
mov
mov
repz
out
loopne
out
xlat
(bad)
and
cmp
popa
inc
cs
outs
and
ja
mov
enter
repz
(bad)
retf
xor
xor
adc
adc
data16
push
adc
mov
xchg
xchg
ret
xchg
xchg
out
mov
ror
or
add
adc
jno
ja
ret
mov
add
mov
shr
xor
pop
push
jnp
jecxz
xlat
call
(bad)
cli
jecxz
sbb
push
push
and
and
repz
stos
pop
(bad)
xchg
call
ja
dec
inc
mov
(bad)
xlat
call
(bad)
aaa
jle
and
jno
adc
arpl
out
hlt
mov
(bad)
rol
ret
lock
xor
xor
imul
xor
add
mov
popf
popf
out
mov
test
ret
push
xor
inc
push
adc
jb
add
mov
mov
cli
(bad)
(bad)
add
cmp
dec
and
xor
and
xor
mov
add
icebp
xchg
and
xor
pop
push
daa
ins
data16
add
xor
lea
test
xlat
xchg
and
cmp
ss
dec
dec
jle
adc
clc
sahf
mov
loop
repnz
shl
pop
adc
adc
xor
jl
push
pusha
push
cmps
mov
mov
out
mov
mov
sub
or
jb
jl
push
dec
pop
inc
mov
sbb
int
shl
dec
push
push
cmp
adc
inc
inc
scas
stos
mov
repz
(bad)
xchg
mov
es
imul
cs
ja
pop
xor
test
mov
rcl
mov
xchg
mov
add
push
or
push
imul
push
cmp
and
out
push
add
jp
xchg
push
daa
sar
ss
data16
div
cmp
push
mov
sahf
pop
out
retf
mov
push
adc
jb
fmulp
shl
xchg
sti
scas
fild
jbe
mov
ds
test
jnp
(bad)
outs
(bad)
scas
dec
ficomp
inc
mov
jecxz
jmp
cs
cmp
push
jno
adc
pop
popa
mov
in
mov
out
loop
cli
ror
loopne
sub
push
add
jo
xor
add
loopne
mov
mov
loopne
(bad)
adc
push
add
ja
inc
and
movs
xor
shl
ret
into
ret
and
ds
pop
or
pusha
dec
inc
push
push
lods
mov
mov
int
shr
cmp
mov
aaa
and
adc
jbe
jge
dec
push
xor
mov
cwde
icebp
mov
iret
repnz
imul
add
inc
outs
pusha
ja
dec
adc
push
loop
repnz
ret
fcmovnb
out
fdecstp
mov
xor
pop
inc
jp
loop
(bad)
stos
mov
dec
loop
sbb
and
repnz
repnz
push
cmps
ret
sti
jbe
dec
mov
sub
jmp
cmp
mov
sub
cmp
inc
pop
dec
jo
pusha
jo
pushf
or
ffree
xlat
(bad)
fsubp
adc
and
dec
add
inc
ja
push
adc
lods
xchg
add
(bad)
shl
adc
ds
adc
inc
xor
ret
mov
xchg
jmp
xchg
out
(bad)
rcr
es
aas
bound
push
add
jle
inc
bound
mov
xchg
xchg
repz
jmp
sub
and
jge
inc
dec
push
xor
mov
xchg
(bad)
imul
loope
xor
adc
das
ins
ja
jg
push
inc
inc
mov
mov
loop
xchg
xchg
cmp
pop
jo
xor
inc
pop
lods
xchg
loopne
lea
icebp
cld
cmc
int3
mov
inc
and
pop
add
pop
adc
popf
and
std
mov
adc
inc
push
jae
push
addr16
add
mov
repnz
loop
xchg
xchg
jmp
pop
xor
gs
or
adc
jbe
addr16
inc
push
lods
lods
cmps
cmps
add
repz
mov
add
add
xor
inc
and
xor
pop
stos
lods
test
lock
not
add
xor
xor
inc
dec
pop
fs
cmps
mov
mov
rol
retf
mov
and
adc
push
sbb
and
dec
jbe
adc
xchg
rol
xlat
rol
xchg
ss
and
push
or
push
imul
add
inc
ret
mov
icebp
icebp
mov
cmc
int3
in
adc
xor
inc
inc
adc
pop
mov
mov
shr
lock
fdiv
push
and
adc
sbb
and
dec
inc
xor
sbb
jno
and
inc
push
jb
jno
xor
dec
push
inc
lods
nop
mov
mov
popf
(bad)
in
lock
nop
int
in
adc
arpl
xor
dec
push
ins
and
inc
sbb
xchg
rol
(bad)
repz
sub
ss
and
push
dec
sbb
xchg
adc
fsubrp
not
out
lock
and
or
pop
xor
cmp
or
adc
cmps
mov
xchg
aad
int
int3
sar
mov
das
or
pop
pop
pop
je
push
push
dec
pop
popf
cmps
mov
lods
in
cld
int3
(bad)
int
fst
sbb
aas
cmp
imul
pop
pop
ins
popf
mov
xchg
repz
out
int
std
xchg
mov
das
pop
ds
arpl
or
dec
pusha
and
xchg
sti
mul
add
dec
inc
es
cmp
(bad)
out
aas
pop
not
scas
cmp
es
ss
scas
cmp
inc
dec
pop
into
dec
fmulp
ret
outs
dec
jg
jnp
dec
jl
and
jae
inc
mov
repz
pop
push
push
pop
sub
ss
push
push
xchg
bound
cmps
mov
(bad)
arpl
xchg
mov
out
ds
ficomp
aas
sar
cmp
outs
adc
adc
dec
or
lods
cmps
mov
in
fwait
xchg
ret
cmc
mov
and
push
sbb
jl
and
xchg
xchg
cmp
inc
push
daa
or
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
add
jmp
adc
ret
rcr
add
loop
add
mov
mov
jb
xor
adc
xor
ret
inc
adc
inc
repnz
bound
xchg
arpl
add
add
and
popf
xor
ins
rcl
and
xchg
ror
mov
ret
iret
(bad)
lahf
adc
and
loop
ret
shl
jecxz
repz
mov
xor
push
jb
out
jae
add
xor
or
ror
fwait
repz
mov
sbb
xor
pop
inc
jo
cmp
enter
lods
mov
shl
icebp
loope
pop
adc
adc
jg
adc
mov
add
in
sbb
jno
push
push
inc
sub
sbb
repz
stos
lock
mov
ret
es
jge
pop
or
bound
pop
add
cli
div
xchg
stos
xchg
repnz
or
or
add
popa
pusha
pop
inc
add
mov
mov
lahf
xlat
ret
sub
sbb
jb
jp
sub
adc
ret
dec
gs
movs
sbb
inc
scas
and
inc
lock
jns
pop
add
push
dec
imul
sbb
xchg
call
pop
sub
pop
js
test
cdq
fnsave
aaa
cmp
push
xchg
stos
adc
retf
and
popa
(bad)
fst
mov
inc
inc
rcl
loop
lea
adc
add
dec
loope
ins
sti
rol
jnp
pusha
xchg
nop
and
icebp
xor
and
sbb
mov
lock
loopne
retf
jecxz
inc
sub
pop
dec
dec
mov
pushf
lea
fidiv
stos
mov
sbb
bound
(bad)
ins
adc
mov
repz
add
repz
out
xor
out
add
dec
xchg
pop
push
retf
dec
lods
stos
cmp
call
clc
lods
int
popf
data16
sbb
jl
ins
pop
inc
dec
dec
inc
dec
pop
mov
push
push
adc
aaa
int
dec
jnp
mov
cmp
mov
pushf
push
sbb
adc
inc
xor
icebp
sub
or
mov
and
inc
adc
and
adc
loope
mov
push
push
rol
sbb
jo
adc
add
xor
ret
xchg
sbb
pop
rcl
add
add
add
in
dec
and
and
jecxz
scas
jge
mov
cmp
or
and
shr
repnz
xchg
loopne
xlat
fidiv
inc
push
jmp
and
jae
cdq
in
jbe
push
pop
pop
in
ret
rcl
jecxz
xchg
xchg
adc
jmp
(bad)
pop
jb
ds
gs
dec
xor
shl
mov
(bad)
repnz
movs
stos
shr
and
pushf
cmp
js
bound
or
cmps
(bad)
mov
xchg
mov
inc
push
pushf
popf
or
adc
cmp
push
add
mov
sti
shl
test
shl
and
adc
push
imul
push
pop
and
xchg
mov
nop
xchg
lock
and
inc
or
adc
push
outs
inc
push
popa
xor
(bad)
loop
lahf
mov
mov
mov
or
or
xor
data16
push
inc
popa
ret
xchg
xor
cld
int
out
inc
cs
xor
mov
pop
inc
mov
mov
nop
out
(bad)
shl
int3
fdivr
and
xor
imul
dec
dec
xor
out
mov
cmc
movs
mov
ja
pop
pop
adc
inc
or
je
lods
(bad)
mov
mov
movs
movs
neg
xor
add
gs
jle
dec
ja
jg
mov
lahf
loopne
xchg
mov
hlt
aam
inc
cmp
sbb
imul
popa
mov
mov
ror
cmc
cmps
(bad)
in
sar
(bad)
(bad)
rol
add
jo
addr16
sbb
xor
xchg
cmps
cmps
mov
loope
xchg
loop
loope
jmp
in
sub
cmp
and
jno
ja
dec
popa
inc
xor
xchg
nop
cld
(bad)
loopne
fisub
das
pop
add
fs
ins
dec
jnp
addr16
cmp
shl
xchg
jmp
xchg
mov
inc
loop
cmp
push
jb
add
xor
mov
aad
mov
fwait
xchg
rol
clc
add
daa
popa
or
jno
ins
ja
sub
pusha
mov
icebp
out
xlat
out
in
mov
xor
pop
or
push
xor
addr16
sub
stos
cmps
mov
mov
fistp
and
arpl
sbb
jae
inc
push
inc
adc
xchg
test
icebp
shr
aaa
aas
das
popa
sbb
dec
data16
dec
jno
xchg
add
jmp
xlat
loope
push
and
xor
fs
jp
push
inc
cmp
xchg
sti
in
add
movs
movs
rcl
xor
and
xor
jbe
adc
dec
push
pop
shl
cmc
shr
shl
movs
(bad)
fdiv
and
sbb
and
and
pop
inc
jmp
aam
mov
int3
(bad)
xchg
sti
mov
sub
push
ins
(bad)
pop
fs
adc
dec
inc
jp
stos
mov
xchg
lock
cli
test
mov
sub
or
dec
ins
dec
adc
push
sub
mov
fisub
mul
loop
(bad)
icebp
mov
daa
add
adc
xor
lods
xchg
cmps
loope
xchg
xchg
retf
cmp
les
aaa
and
ja
fs
push
pop
jo
mov
mov
div
loopne
jmp
inc
(bad)
es
aas
cmp
add
addr16
push
jno
mov
fisub
mov
out
mov
aaa
add
pop
imul
jo
dec
jg
cmps
sbb
in
xchg
fwait
test
mov
pop
push
push
dec
inc
push
add
dec
and
lods
imul
(bad)
jecxz
xchg
scas
div
test
fcmovnu
add
aas
prefetch
xor
jno
dec
push
push
lods
mov
popf
jmp
adc
shl
xor
jno
das
dec
inc
xor
(bad)
test
xchg
scas
(bad)
aam
sub
xor
or
jo
push
ins
push
jne
and
mov
in
xchg
in
icebp
cdq
loope
out
out
daa
add
inc
je
dec
add
pusha
dec
outs
pop
scas
mov
mov
jmp
call
aaa
ds
pop
add
jl
push
outs
pop
pop
leave
mov
popf
sar
cld
jmp
mov
movhps
ins
dec
adc
inc
push
pop
pop
movs
mov
mov
sbb
(bad)
mov
and
push
bound
xor
jo
inc
and
cmp
mov
xchg
cmps
out
mov
nop
retf
fidiv
pop
cmp
jo
jnp
dec
push
cmps
fimul
jmp
and
push
sbb
adc
inc
sub
cld
imul
xlat
fcmovnbe
pop
cs
or
push
push
add
push
pop
pop
cmps
stos
repnz
in
jmp
and
aaa
sbb
or
add
xor
pusha
pop
mov
xchg
retf
int3
repnz
sub
jge
inc
push
inc
scas
stos
xor
in
test
ss
sbb
adc
and
jnp
dec
jae
push
mov
mov
loop
sahf
mov
in
stc
cld
test
rcr
aaa
cmp
push
push
dec
das
gs
jb
adc
cmps
mov
rcl
mov
rol
cmp
add
or
ja
inc
push
pop
or
movs
mov
xchg
(bad)
in
neg
adc
(bad)
and
add
jnp
jb
sbb
stos
push
xchg
mov
ret
ja
es
xor
push
or
lock
xchg
hlt
stos
xlat
in
fimul
add
bnd
rcl
sub
repnz
adc
imul
mov
mov
jno
rcr
add
test
cmp
adc
ins
push
pop
call
jae
add
inc
frstor
push
or
xchg
ret
jecxz
inc
adc
add
ret
and
jmp
adc
jb
fcmovnu
ins
fsubr
jmp
jne
adc
lahf
add
xchg
ret
iret
inc
aaa
push
mov
jb
(bad)
sub
cmp
mov
ret
ret
repz
mov
ret
and
sti
cld
xor
dec
and
dec
mov
pop
rcl
xor
in
loope
icebp
bound
into
mov
add
jae
inc
sar
ja
repnz
mov
xor
xchg
mov
push
pop
mov
ret
fwait
repz
mov
cmp
out
les
add
add
lea
adc
add
bound
mov
adc
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
inc
push
push
bound
jae
add
adc
and
xor
ret
rcl
loop
repnz
mov
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
leave
call
test
mov
fnstcw
jmp
nop
nop
push
mov
push
mov
call
push
mov
mov
call
xor
pop
ret
nop
adc
and
add
sub
in
imul
gs
xchg
add
push
aad
lds
pusha
in
adc
mov
inc
lock
adc
and
jo
arpl
nop
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
sub
inc
or
mov
push
lds
push
pop
add
xchg
aas
aad
movs
retf
imul
mov
xor
xor
shl
xor
xchg
jmp
hlt
xchg
xchg
int3
clc
jne
gs
jno
jns
mov
push
mov
je
pop
jo
shr
mov
and
cdq
retf
xor
movs
push
pop
push
lds
pushf
lock
aam
mov
adc
pop
std
clc
sbb
in
sbb
or
cmp
not
movs
mov
mov
ja
push
jns
add
dec
cwde
dec
fstp
and
in
mov
mov
in
dec
push
dec
xor
loope
adc
mov
adc
std
cmps
ins
nop
nop
add
fdivr
ss
es
adc
stos
movs
push
adc
xchg
adc
(bad)
rol
sub
aas
sub
rcr
lea
in
out
or
add
js
test
std
fdivr
jecxz
pop
rcr
pop
or
loopne
clc
leave
mov
imul
popf
(bad)
cmps
sbb
mov
gs
sbb
inc
mov
jno
inc
add
gs
aad
lds
pushf
jl
dec
mov
mov
test
adc
xor
fstp
xchg
gs
test
adc
in
jne
inc
dec
push
ss
sub
sar
inc
add
mov
xlat
adc
cmps
push
cmc
jle
mov
std
xor
push
dec
jo
sbb
mov
mov
call
jle
js
or
inc
popf
inc
test
fmul
ins
lock
push
cwde
jne
cmp
cmp
and
inc
dec
(bad)
cmp
ret
add
cli
jecxz
pop
and
mov
sbb
push
push
ja
loopne
xchg
inc
cmp
and
xchg
xchg
xor
jp
cmps
in
adc
add
xor
call
xor
rol
das
pop
(bad)
enter
fwait
rcr
lea
in
pop
push
xchg
int
loope
mov
dec
jmp
sub
test
test
leave
int3
test
enter
int
mov
rcl
clc
retf
popf
fadd
icebp
mov
adc
jmp
imul
out
pop
or
in
shr
ret
cld
lock
sbb
fist
aad
jne
hlt
and
les
cmp
inc
adc
dec
inc
lock
loopne
adc
fucomip
loopne
add
adc
ror
mov
or
imul
sbb
xor
fsub
push
sbb
dec
mov
cs
sbb
aaa
repz
pop
add
enter
call
gs
test
adc
xchg
adc
pop
movs
rcr
sbb
cmp
mov
sbb
movs
loopne
add
fdivp
in
inc
fst
loop
lds
jecxz
jp
cld
test
enter
inc
cmp
sub
pop
jno
mov
iret
jns
sbb
pop
xchg
jne
push
dec
fcom
std
cmc
cmp
pop
mov
stc
pusha
das
xchg
aas
cdq
jge
loopne
enter
jne
jo
scas
add
sub
cli
dec
retf
xchg
or
cvttps2pi
test
pop
fstp
idiv
test
mov
add
shl
cmp
cmp
sbb
sub
adc
loopne
loope
dec
and
aam
lds
je
cmp
inc
dec
xor
dec
add
(bad)
push
aad
out
call
xor
or
mov
aas
inc
or
mov
cmp
inc
cmp
jmp
xchg
push
rol
mov
call
cmp
adc
inc
rol
fld
stos
rol
sti
call
test
nop
inc
cmp
adc
std
scas
cmp
xor
adc
push
test
cmp
or
jg
ret
aam
(bad)
mov
and
sbb
fadd
push
cwde
mov
(bad)
jle
cdq
rcl
cmp
rcl
enter
outs
aam
dec
and
fcomip
adc
js
movs
nop
aam
fnstenv
test
mov
mov
bound
push
stos
ret
mov
sbb
lods
xor
push
daa
stos
mov
jge
aad
dec
jno
in
and
pop
mov
push
dec
mov
sub
mov
gs
xlat
(bad)
test
in
retf
cmp
adc
pop
in
retf
adc
in
push
in
sbb
(bad)
jp
cmp
adc
loopne
mov
pop
dec
cmp
adc
add
pop
out
push
out
iret
or
jl
in
loopne
lahf
rcr
lods
pop
das
push
fisttp
mov
test
xor
xchg
cwde
inc
mov
shr
jo
cmp
aad
mov
mov
jb
ds
repnz
sub
mov
jae
jb
faddp
outs
lea
push
gs
jmp
sbb
jno
push
mov
in
jnp
jge
or
sub
int
fnstenv
in
sub
mov
push
fsubrp
jae
mov
adc
sbb
jo
pop
jecxz
push
xchg
cld
add
cdq
cmp
outs
nop
adc
loop
xor
inc
dec
or
pop
xchg
xchg
(bad)
jp
cmp
pop
scas
aam
(bad)
xor
inc
aad
mov
mov
adc
call
cmps
xchg
in
xchg
xor
mov
adc
or
outs
rcl
loopne
jp
inc
xlat
pop
dec
in
adc
dec
gs
mov
pop
cmp
fcom
cmc
xor
loopne
adc
add
iret
ds
cmc
movs
aad
inc
std
lods
and
nop
jl
movs
cld
mov
int
and
ret
cmps
xor
adc
scas
adc
and
xor
leave
adc
popa
and
mov
rol
or
dec
dec
cmps
sbb
jmp
hlt
(bad)
in
cmps
add
cmc
cmps
aaa
sub
xor
shr
xor
sub
ins
cmp
mov
sub
inc
jnp
lods
movs
and
inc
sbb
mov
sbb
(bad)
std
hlt
div
test
jecxz
fcmovnb
call
test
mov
mov
jmp
lds
aas
push
push
jne
movs
dec
xchg
adc
rcl
sar
clc
push
dec
add
dec
test
push
dec
inc
or
loop
adc
jp
inc
and
aad
xchg
xor
(bad)
nop
adc
sub
mov
fwait
push
dec
inc
add
bound
mov
lahf
push
lock
(bad)
ficom
mov
inc
and
scas
mov
pusha
add
popf
xor
mov
rcl
xor
rcr
rol
cwde
dec
icebp
test
popf
ds
cmps
jl
std
xchg
xor
dec
inc
xchg
mov
idiv
add
push
mov
pusha
cwde
js
int
pop
jp
in
inc
cmp
push
lahf
lock
mov
or
cmp
or
pop
cmp
(bad)
jg
dec
jbe
push
adc
cmp
inc
xchg
inc
lds
aad
mov
xlat
mov
push
sub
mov
(bad)
outs
push
lock
(bad)
push
(bad)
test
xor
adc
mov
adc
adc
(bad)
xlat
cld
(bad)
iret
inc
push
xor
sub
pop
dec
cmp
es
pop
cdq
enter
mov
jp
xchg
push
jmp
arpl
or
and
(bad)
out
popf
push
cld
pop
div
xor
xchg
push
pusha
jg
pop
cmp
out
inc
sub
add
shl
pop
dec
shr
mov
or
cmp
arpl
jno
mov
loope
and
add
sub
jg
mov
xchg
sub
mov
imul
jbe
xchg
xchg
push
sub
push
fst
repz
pop
push
push
mov
xor
adc
jle
sbb
out
and
dec
ficomp
fcom
dec
or
call
fmul
mov
stos
cmp
lahf
dec
mov
jecxz
outs
jne
push
sahf
adc
cmps
push
shl
loopne
nop
push
xlat
or
adc
inc
inc
xor
sbb
aas
dec
inc
jns
arpl
inc
adc
xor
lea
cmc
jb
mov
xchg
push
mov
mov
dec
je
bound
into
sbb
bound
mov
in
loopne
inc
inc
cmp
out
nop
pop
retf
mov
addr16
or
sti
mov
enter
sbb
sbb
stos
gs
inc
iret
jmp
jmp
std
fucom
xchg
(bad)
int3
jnp
imul
ret
daa
jmp
jmp
retf
in
inc
jae
and
pop
fiadd
test
rcl
mov
push
inc
mov
sub
sbb
test
push
or
dec
sbb
rol
adc
dec
mov
sahf
hlt
add
aam
xor
mov
gs
xchg
(bad)
push
fidiv
leave
or
pusha
outs
xchg
inc
jg
jmp
in
mov
dec
cdq
add
clc
shl
push
ror
aaa
test
cmc
sbb
sub
movs
xchg
int3
into
cld
sub
jne
xchg
shr
cmp
sub
add
inc
fwait
out
mov
cmp
jne
retf
in
adc
mov
dec
xor
or
lds
aam
test
in
jge
call
stos
fs
mov
sub
test
movs
push
enter
mov
test
ds
adc
or
frstor
jae
imul
inc
loopne
sub
sbb
outs
mul
push
test
xor
inc
xor
sar
adc
add
cmp
movs
mov
jle
jmp
jns
lods
imul
aas
into
lock
gs
icebp
ret
test
mov
adc
nop
adc
js
hlt
sub
mov
pop
lds
ins
mov
movs
(bad)
inc
sub
into
inc
inc
add
dec
mov
test
add
xor
stos
adc
pop
xor
lock
push
movs
ja
add
mov
es
popf
dec
or
pop
and
shl
ins
add
push
std
mov
aad
pcmpgtw
out
or
push
rcr
xchg
xor
or
push
dec
add
clc
mov
sbb
dec
and
ror
nop
jo
adc
adc
jb
jbe
pop
xchg
mov
(bad)
adc
lock
pop
sbb
jo
pusha
data16
jns
sub
lds
jo
xor
fwait
xchg
inc
ror
mov
inc
xor
sbb
xor
or
mov
rol
retf
mov
aam
mov
cmc
pusha
call
arpl
ror
xor
shl
jge
xor
nop
cwde
adc
dec
cmp
inc
sbb
jge
inc
adc
jmp
icebp
mov
shl
outs
sbb
jo
xor
add
gs
sub
imul
xor
jno
js
add
mov
or
sar
and
inc
jmp
pop
mov
and
mov
push
call
xchg
inc
das
lock
call
shr
aad
lds
dec
pushf
sub
std
sbb
rcl
mov
pop
xor
fsubr
aad
or
sbb
test
add
shl
(bad)
clc
stos
mov
pop
and
shl
sub
std
xor
cmps
and
push
jno
mov
cmp
cmp
js
adc
cmps
call
xor
jp
lods
mov
ins
or
fadd
imul
inc
adc
mov
es
cmp
xor
jae
gs
cld
xchg
and
adc
xor
loope
push
cmp
mov
in
int
std
retf
das
inc
dec
lods
xor
mov
push
fdiv
xchg
mov
pushf
sub
pop
gs
test
push
shr
(bad)
hlt
mov
sub
nop
inc
and
lock
mov
inc
shr
pusha
outs
test
loopne
int3
jno
(bad)
jne
xchg
sub
fsub
lds
adc
mov
sbb
shl
sub
lods
shl
es
inc
and
fnstcw
popf
popf
add
loop
test
stos
call
xor
lds
pop
pusha
rol
ins
and
jge
or
lock
mov
xchg
xchg
sti
cmp
ins
pop
ss
mov
mov
inc
or
push
cmp
jno
xor
lods
mov
aad
lds
cwde
add
std
inc
and
mov
or
pusha
pop
lods
pop
das
aad
mov
cmc
adc
adc
sub
xor
sahf
gs
xchg
add
test
movs
adc
xor
sbb
inc
pop
add
daa
aas
inc
(bad)
fsub
mov
add
pop
xchg
inc
or
mov
jbe
data16
popf
sbb
push
fnstsw
pop
mov
test
adc
pop
sub
fisttp
ret
xor
ret
mov
lock
lods
pop
sub
test
mov
cmp
ins
xor
in
and
pushf
xor
adc
test
adc
lds
(bad)
add
rol
inc
jge
pop
adc
mov
jp
lock
loopne
int
std
lock
js
add
mov
loope
push
imul
call
std
cmc
cmps
cmps
pop
icebp
sub
inc
push
push
push
push
cmp
loopne
popf
push
test
push
and
cmp
aam
cmp
mov
movs
out
sbb
movs
mov
loopne
in
sahf
dec
or
push
aas
push
jns
loopne
popf
and
dec
pop
movs
fsubr
lds
sbb
push
cmc
mov
xor
loopne
and
cmp
cmp
stc
nop
js
add
(bad)
xchg
stos
adc
jne
lock
adc
jo
sub
nop
cwde
jl
dec
fld
pop
fadd
sub
add
fst
in
das
addr16
inc
and
retf
adc
jo
mov
adc
push
xor
nop
hlt
enter
cli
mov
test
fs
dec
mov
stos
inc
mov
rol
test
mov
idiv
ror
test
adc
retf
xor
jns
call
dec
scas
aad
jge
jl
in
adc
pop
xchg
retf
shl
mov
mov
imul
sbb
iret
inc
cmc
xor
nop
push
inc
xor
test
jae
movs
mov
add
frstor
sub
sbb
push
sbb
ins
mov
lea
push
mov
inc
(bad)
cmc
mov
mov
enter
mov
gs
ror
and
xchg
xchg
fsub
sub
int
(bad)
pop
test
int
mov
jg
aad
inc
ret
repnz
loope
lods
ss
addr16
sbb
add
add
vpavgb
ret
sbb
xor
stos
mov
adc
add
test
scas
sub
cwde
or
call
jno
mov
push
test
inc
iret
add
int
mov
inc
sbb
jg
(bad)
loop
sar
or
xchg
inc
test
jnp
scas
mov
jecxz
fs
out
fisub
push
rol
jle
ror
dec
and
mov
aas
push
addr16
rol
pop
pop
repz
xchg
mov
mov
enter
in
add
lock
pusha
gs
xor
dec
inc
clc
popf
or
dec
xor
pop
mov
fcomp
push
cmc
xor
dec
aad
mov
or
cmp
inc
mov
mov
mov
jg
jno
lock
fdivr
cld
mov
call
iret
xor
add
adc
and
push
pop
int
fs
enter
call
iret
jae
cld
scas
sbb
and
mov
retf
fdivr
pop
gs
xlat
mov
xchg
xor
sbb
jg
dec
xor
inc
pop
paddd
adc
sti
inc
iret
add
mov
in
jmp
pop
xor
xor
cwde
adc
lods
mov
sub
sub
inc
jmp
pop
stos
dec
jbe
inc
jo
add
lods
pop
sbb
sbb
or
adc
loopne
and
add
xor
fsub
or
cmc
dec
mov
aas
shl
mov
mov
sub
cwde
or
call
repnz
add
inc
push
cld
jp
dec
loope
push
cmc
inc
lds
shr
nop
push
into
add
sar
aad
adc
xor
add
outs
sbb
(bad)
mov
add
movs
in
pop
push
jge
pop
stos
movs
fiadd
and
pop
or
fistp
in
call
movs
xchg
gs
mov
cmc
and
leave
mov
mov
xor
jge
movs
arpl
xor
xchg
adc
hlt
repz
in
inc
and
test
ins
jo
xchg
call
sub
fmul
std
loopne
in
push
jmp
xchg
jne
sbb
lea
mov
mov
and
jg
dec
test
rol
mov
pop
fadd
imul
movs
or
sbb
or
mov
jge
es
jge
jb
and
aad
xchg
xor
and
inc
mov
and
add
push
jns
icebp
xor
jo
adc
or
and
cwde
mov
rcl
dec
adc
jae
movs
aad
cmp
sbb
int
cmc
xor
aas
mov
adc
sub
adc
push
cmp
jg
mov
les
lock
push
inc
int3
out
movs
pop
pop
mov
or
xor
jecxz
and
mov
push
inc
icebp
lock
dec
aad
dec
gs
mov
add
mov
lea
inc
popf
inc
fnstenv
imul
sbb
cmc
lahf
or
pop
mov
int
mov
arpl
adc
jp
dec
nop
arpl
sub
add
cwde
push
in
cmc
inc
sub
sbb
mov
gs
sbb
jp
jae
popa
or
shl
add
push
ror
mov
xchg
lock
cmps
(bad)
daa
mov
(bad)
out
xchg
pop
inc
das
jnp
stc
lods
ror
out
xor
add
test
vpavgb
push
stos
dec
or
jno
sar
(bad)
lock
adc
or
xchg
xor
add
imul
fsubr
ja
xchg
fwait
imul
mul
sbb
pop
fisttp
push
imul
enter
shr
fstp
dec
stc
jl
sbb
adc
sub
retf
popf
rcl
or
push
aad
fwait
mov
imul
aam
add
cmp
pusha
cmp
add
dec
push
pop
cmp
cmc
dec
popf
xchg
add
sub
cmp
mov
cdq
push
mov
add
cmp
inc
xlat
out
inc
push
cmp
lods
push
adc
movs
jns
xchg
lea
jle
lock
in
jne
imul
or
mov
mov
push
enter
xchg
call
(bad)
pop
sub
int
cli
pushf
and
push
and
jmp
pop
enter
movs
cmp
ret
jle
and
xlat
bound
cmp
jno
test
nop
fimul
lods
imul
mov
sub
je
in
sub
inc
sub
cmp
popf
and
jge
ret
xor
push
pusha
aad
and
and
dec
rcl
inc
in
pop
movs
adc
mov
popa
cmp
sub
adc
dec
xor
sahf
xlat
outs
movs
mov
xchg
shr
in
out
(bad)
mov
cmc
sub
jo
lods
in
adc
mov
push
lock
pop
sbb
xor
aaa
test
cmp
sub
test
mov
xor
rcl
jge
stos
movs
push
jnp
mov
xor
add
and
jno
and
xchg
pop
test
aad
les
sbb
js
mov
dec
int3
movs
(bad)
iret
dec
lock
gs
jle
lea
(bad)
retf
sbb
cwde
adc
fdiv
outs
aas
push
mov
xchg
mov
popa
mov
aas
outs
sbb
cmp
shl
dec
mov
(bad)
add
mov
pop
inc
xchg
xor
or
mov
imul
cmps
push
pop
add
ins
add
sbb
inc
and
pop
mov
xchg
push
test
xor
loopne
sub
mov
imul
fmulp
in
std
or
mov
icebp
mov
sar
and
enter
in
mov
jno
mov
je
cmp
sbb
pop
push
sub
test
cmps
in
sahf
dec
(bad)
imul
xor
dec
test
(bad)
and
pop
lods
int
jne
push
inc
sbb
repnz
mov
lods
call
shl
movs
lods
push
in
mov
push
add
popf
dec
lods
jge
imul
retf
mov
out
fstp
dec
cwde
aaa
mov
in
ja
rcl
pop
in
mov
inc
lds
inc
xor
sub
retf
mov
sub
repnz
pop
test
imul
inc
(bad)
test
sar
jmp
ret
mov
ins
adc
lods
mov
sti
jle
ins
nop
jmp
fistp
adc
inc
inc
outs
mov
arpl
in
in
adc
cli
pop
mov
loopne
idiv
loopne
rol
enter
inc
int
mov
imul
out
fsub
aad
mov
popf
push
xor
or
fst
and
sbb
mov
mov
pop
fmul
retf
enter
dec
sahf
mov
les
in
push
xchg
inc
sti
xchg
in
inc
push
add
mov
xchg
aas
jns
call
cmc
pop
je
or
inc
jge
mov
fst
mov
jmp
in
lds
cmp
lahf
adc
mov
imul
jecxz
and
sub
jmp
hlt
imul
pop
clc
cmp
gs
jne
aad
pop
sbb
icebp
xor
mov
xor
aas
lods
jnp
loopne
push
xchg
call
lods
lea
mov
adc
mov
inc
test
mov
sar
pop
test
sti
xor
outs
js
and
scas
pop
push
(bad)
into
lock
out
rol
cmp
pop
add
cmc
pusha
outs
mov
and
push
fwait
xchg
pushf
add
ins
dec
popa
add
inc
clc
push
mov
or
inc
cli
mov
and
inc
sbb
movs
push
xchg
movs
xor
inc
jne
add
sbb
in
arpl
jge
or
add
dec
jne
dec
push
nop
int
mov
lahf
ficomp
cmc
aad
jne
mov
shl
and
mov
add
aad
fldenv
cmc
jmp
loope
inc
add
mov
cdq
or
cld
shl
sub
cmp
in
pushf
ret
push
mov
in
movs
and
sub
mov
xchg
adc
cmp
sub
pop
inc
dec
fs
jmp
rcr
push
cmp
fwait
out
xchg
dec
and
lods
es
dec
lds
jle
loope
adc
fild
jnp
and
cdq
call
xchg
fistp
shl
or
adc
mov
in
mov
xchg
pop
in
dec
js
ins
nop
pop
imul
cmp
dec
outs
jns
or
pop
push
mov
mov
sub
push
hlt
xchg
sahf
xor
hlt
sub
movs
xchg
xchg
popa
push
add
push
and
jp
adc
cmp
or
jo
mov
jne
stos
loopne
fld
sub
jne
test
imul
xor
jp
cmp
or
je
adc
cdq
mov
in
adc
int3
cwde
push
add
mov
mov
or
xchg
pop
div
xor
aas
inc
sbb
or
adc
ds
and
inc
mov
dec
inc
pop
retf
rol
inc
inc
lea
aaa
push
enter
dec
and
push
pop
pop
xor
or
sbb
xchg
add
cmc
dec
push
pop
fdivp
iret
test
add
xor
ret
mov
repnz
sbb
cli
pop
mov
enter
lods
xor
mov
cs
or
sti
cmc
mov
test
and
ret
jp
out
sti
lock
scas
stc
mov
sahf
std
shl
or
call
jp
imul
pop
jg
dec
cmc
inc
loopne
loopne
sub
mov
stos
movs
xchg
or
mov
mov
frstor
in
xchg
pop
pop
cmc
cmp
push
pop
fidiv
mov
jb
stos
adc
mov
rol
std
cmc
in
in
and
and
adc
adc
jne
sub
push
scas
push
jne
stos
sub
and
mov
dec
jbe
aaa
loopne
inc
push
mov
int3
inc
inc
mov
pop
lock
push
jl
repnz
dec
pop
mov
mov
dec
pop
sbb
ror
sub
iret
adc
dec
fcmovbe
sbb
(bad)
pop
mov
sub
push
or
jne
test
and
lock
pop
fiadd
dec
and
js
push
xchg
push
or
lea
mov
jecxz
out
iret
aad
not
sub
test
add
nop
adc
pop
and
mov
out
pop
and
movs
adc
jo
jg
jno
mov
xchg
movs
or
sbb
fsubr
push
(bad)
jecxz
sbb
xor
xchg
mov
jnp
push
adc
les
mov
nop
shr
jl
xchg
sub
lods
lock
pxor
jp
in
loopne
lods
cmovno
sbb
or
push
push
adc
sahf
xchg
imul
test
dec
inc
addr16
je
dec
cmc
cmc
mov
push
pop
jbe
scas
push
cld
push
push
xchg
add
or
dec
adc
lds
sahf
fiadd
cmp
ret
into
test
(bad)
or
mov
cs
sub
xor
mov
inc
add
xchg
sub
xchg
push
add
shl
mov
mov
cli
pop
xor
sub
clc
(bad)
dec
js
jo
adc
mov
call
shr
inc
hlt
cmp
mov
ds
sub
mov
add
test
loopne
sbb
and
shl
dec
pushf
call
mov
(bad)
into
jmp
push
jne
and
push
fnstsw
std
cvtps2pi
dec
leave
lods
sub
jns
xor
push
je
mov
ror
lds
pushf
cmps
push
jmp
fist
jle
xor
ret
(bad)
(bad)
sahf
mov
push
xchg
call
pusha
cmp
fwait
adc
cld
mov
sbb
jne
cmp
stos
sahf
mov
jle
sbb
mov
stos
rcl
in
push
xchg
jne
xor
ret
mov
cmc
cmps
mov
mov
movs
scas
rcl
inc
enter
popf
adc
inc
mov
mov
adc
(bad)
sahf
test
mov
outs
dec
xchg
int3
pop
ins
and
pop
lock
or
dec
sahf
add
cmp
into
sub
imul
mov
retf
aad
cmc
pusha
jmp
mov
add
test
aaa
add
lock
inc
lds
and
push
call
pusha
adc
sar
and
mov
mov
or
in
out
ret
pop
arpl
adc
xchg
sub
aas
fistp
pop
retf
dec
jl
and
or
dec
xor
rol
dec
pop
lods
gs
mov
mov
push
or
push
xor
add
xchg
add
sub
dec
cmp
out
and
stc
fisubr
mov
add
aam
gs
mov
inc
mov
outs
imul
mov
call
and
inc
pop
inc
inc
retf
sub
adc
mov
xchg
data16
dec
jne
mov
dec
(bad)
cmc
lock
adc
xchg
xor
fimul
lock
cdq
daa
(bad)
xor
ins
pop
push
mov
adc
xchg
jmp
add
jecxz
add
mov
pcmpgtw
jb
nop
test
sbb
adc
pop
fidivr
push
add
jae
mov
test
ds
push
aad
add
cmc
and
nop
inc
(bad)
in
xor
or
mov
cmps
inc
xchg
adc
mov
mov
in
push
inc
add
leave
sbb
lock
out
push
ret
mov
add
(bad)
mov
in
aam
add
mov
xor
jno
in
adc
test
jle
fcomp
dec
std
cmc
mov
push
fucompp
mov
int3
hlt
bound
ins
in
and
sub
nop
rcr
jno
push
xchg
xchg
test
pop
ins
jp
rol
mov
cs
inc
out
lods
test
or
in
inc
jge
jns
mov
loope
xor
and
xor
div
jbe
outs
test
jns
inc
mov
pop
inc
mov
jns
sub
cmp
mov
or
ins
call
lods
jns
xchg
sbb
xor
sahf
dec
add
mov
aaa
loopne
dec
xchg
add
sbb
dec
jnp
movs
mov
stos
aam
dec
xor
pusha
das
xchg
test
mov
jns
or
xor
not
adc
adc
or
add
lock
mov
(bad)
(bad)
push
cmp
mov
lahf
(bad)
lahf
pop
sbb
mov
push
loope
stc
mov
int
jge
xor
mov
sub
lds
in
add
and
enter
xor
mov
test
and
cmp
(bad)
push
pop
or
mov
adc
inc
add
lea
imul
dec
jo
int3
mov
push
cmp
cmp
inc
jge
loope
inc
xchg
adc
cmp
inc
xchg
pusha
in
sbb
inc
xor
mov
shr
test
icebp
clc
or
jne
and
imul
add
xchg
rol
jecxz
rcr
mov
aam
dec
lods
cmp
add
fcom
enter
xchg
sbb
pop
and
daa
mov
inc
cmp
lock
fimul
inc
punpcklbw
in
add
fdiv
jae
rol
jo
imul
xor
loopne
nop
add
cmp
and
adc
push
mov
ins
and
je
and
fdivr
fsub
mov
in
sbb
mov
xchg
mov
clc
and
cmp
jge
sub
cmp
rcl
jo
jbe
sbb
mov
pop
out
pop
and
stc
inc
fist
aad
mov
xor
(bad)
js
inc
adc
add
cmp
in
adc
jl
pusha
mov
das
scas
adc
xchg
and
loop
sbb
dec
mov
inc
sbb
push
int3
mov
pop
sbb
jge
mov
or
sbb
dec
cdq
mov
push
enter
movs
xchg
pop
inc
dec
std
cmc
xor
or
adc
ret
jge
imul
mov
cmp
sbb
pop
sub
jg
loopne
int3
xchg
pop
inc
fdivr
gs
aad
xchg
lahf
and
push
sub
inc
fadd
int
(bad)
test
xchg
push
or
mov
ins
push
ins
inc
xchg
daa
loopne
sbb
cmp
retf
jmp
lea
lock
movs
push
xlat
add
int3
in
movs
mov
add
movs
ins
mov
dec
hlt
inc
rcl
jg
xchg
add
jmp
movs
fnstsw
rcr
mov
inc
js
lock
push
rol
(bad)
aad
cmp
retf
mov
mov
in
stc
push
stos
aas
das
mov
push
test
lock
les
jmp
mov
cld
js
push
aas
mov
jp
mov
test
dec
jno
pusha
aad
adc
pusha
adc
into
fucomi
cmp
and
add
inc
dec
jo
in
in
adc
and
inc
clc
jecxz
add
xchg
gs
cwde
inc
xlat
sub
sub
add
shr
shl
add
jecxz
call
(bad)
stos
pusha
or
dec
(bad)
mov
add
mov
nop
jb
xor
clc
push
lahf
lock
xor
sahf
inc
mov
lds
iret
add
js
mov
div
ins
in
rcl
jp
cmps
movs
inc
xchg
mov
xchg
sub
scas
cmp
pusha
out
stos
pusha
inc
inc
mov
lods
push
xchg
mov
add
xor
jecxz
adc
lock
into
call
adc
loopne
jmp
or
sbb
cmp
test
xor
mov
lock
dec
loopne
enter
clc
pop
fnstsw
(bad)
push
adc
(bad)
(bad)
cdq
dec
xor
mov
lock
sahf
push
cmps
xchg
pop
imul
sub
xchg
pusha
fisttp
adc
repz
lea
mov
xor
stos
cmps
sbb
sub
pusha
or
repnz
test
mov
fdivr
xor
test
lods
push
ds
mov
inc
std
mov
out
push
add
xchg
ret
shl
ins
add
push
std
mov
shl
cmps
out
pop
add
retf
fbld
and
cwde
mov
(bad)
mov
pushf
shr
xlat
push
fdiv
pop
and
adc
std
(bad)
mov
mov
fidivr
mov
in
int
je
cmc
adc
lahf
(bad)
nop
cmp
sbb
sar
mov
inc
int3
add
dec
dec
movs
enter
ror
or
loop
mov
inc
nop
jne
push
jge
je
repz
or
outs
adc
in
lods
fdivr
rcl
mov
pop
inc
int3
aas
test
inc
pop
inc
dec
std
sbb
sar
inc
mov
popa
adc
add
jo
lods
mov
sbb
push
jl
loopne
in
das
sbb
enter
loopne
jge
test
movs
push
sub
push
or
jle
lock
nop
add
lock
sar
fs
add
inc
div
cdq
nop
push
cwde
adc
movs
adc
mov
call
iret
popf
jo
or
pushf
pop
cmc
sahf
mov
movs
mov
retf
cmc
enter
out
push
jo
mov
fbld
xor
push
mov
icebp
in
pop
adc
shl
loopne
in
adc
ins
mov
pusha
pop
mov
or
sbb
cmp
imul
fwait
xchg
inc
(bad)
addr16
mov
xchg
add
ret
add
inc
repnz
xchg
pop
xchg
push
mov
mov
(bad)
arpl
add
jne
adc
add
sub
(bad)
jnp
pop
fs
add
push
fadd
jo
mov
pop
cmp
sbb
test
sbb
out
std
les
js
test
popf
add
push
bound
shld
add
dec
sub
or
mov
pop
cmp
jne
pop
mov
jne
movs
mov
nop
inc
lds
jmp
mov
push
shl
out
movs
add
cdq
aad
lds
mov
sbb
or
xchg
add
lock
mov
jne
jo
xchg
test
pushf
cld
test
mov
cwde
or
xchg
aas
iret
js
pop
mov
push
or
sbb
lds
jo
mov
dec
cmc
pop
pusha
push
xchg
popa
adc
out
push
cmp
test
cmp
inc
cli
pushf
retf
adc
cmp
xchg
test
push
xchg
lods
xchg
and
or
pop
test
push
rcl
es
cmp
ins
adc
xchg
push
or
mov
jecxz
mov
adc
rol
add
std
js
mov
cmp
popa
(bad)
fiadd
mov
out
adc
jp
mov
mov
nop
inc
inc
bound
or
stos
cmp
lock
xchg
daa
ficom
icebp
ds
gs
jl
in
push
or
scas
xor
mov
jge
daa
pop
scas
push
sub
cmp
push
jg
in
mov
rcr
dec
test
pusha
mov
test
mov
mov
pop
ins
aam
outs
mov
lock
jne
loopne
sbb
jnp
mov
pop
push
adc
mov
ja
dec
arpl
and
lock
movs
fwait
leave
pop
out
xor
into
stc
mov
xchg
mov
in
jl
cmp
mov
pop
mov
jbe
movs
pop
pop
(bad)
cmp
fxch
mov
retf
xchg
enter
loopne
push
call
xor
add
mov
push
les
fadd
pop
mov
xchg
lock
lods
xchg
mov
and
cmp
ficomp
dec
mov
push
push
lds
mov
or
in
add
scas
xchg
and
arpl
cdq
inc
fdivr
gs
mov
call
or
movs
retf
and
clc
dec
gs
push
inc
mov
cmp
pusha
sbb
xor
xchg
xor
xchg
test
mov
sub
cmp
cmps
lahf
sub
jle
cmp
push
mov
push
ins
pop
gs
cwde
mov
ror
adc
in
push
jo
dec
jb
stos
aas
enter
rcl
and
out
add
sbb
lds
rol
aad
lock
imul
push
(bad)
(bad)
xchg
dec
xor
xchg
sub
cmp
lock
mov
inc
shl
or
aam
add
jle
push
mov
pop
js
pop
aas
test
loopne
push
ret
addr16
push
add
nop
mov
cli
jno
cld
imul
jne
jno
call
movs
fist
and
pop
jo
inc
int3
fldcw
mov
cmp
dec
sub
push
out
sub
cmp
mov
call
mov
xor
loopne
adc
lock
dec
test
sbb
sub
and
cmp
jl
outs
(bad)
adc
or
movs
mov
loopne
adc
add
pop
push
sub
or
jmp
imul
jo
cmp
push
ret
fisttp
xor
push
std
or
cmp
int
jbe
lods
xor
inc
add
adc
les
in
in
adc
mov
and
dec
out
sub
add
ds
leave
jge
add
sub
in
pop
add
call
test
pushf
(bad)
in
ins
xor
sub
icebp
xchg
pop
out
in
mov
stos
mov
xlat
int
sub
loop
jg
pop
aad
or
cmp
rol
clc
cmp
adc
shl
mov
std
mov
lea
adc
(bad)
call
push
lods
sub
mov
ins
int
jnp
(bad)
cmc
sub
xor
xchg
mov
jae
xchg
sub
popf
xor
sbb
and
xor
test
stos
pop
inc
push
add
add
or
and
cmp
sub
jne
dec
test
dec
xor
sub
(bad)
push
or
jle
push
gs
lock
mov
enter
in
sub
lods
push
and
ins
dec
pop
popa
lods
mov
jne
sub
ret
push
inc
jne
fistp
aad
les
in
inc
dec
leave
xor
test
push
rol
pop
(bad)
push
xchg
inc
mov
stc
mov
push
lds
and
dec
mov
in
push
mov
stos
dec
xchg
jg
sub
ins
adc
pushf
and
fcomp
pusha
loopne
xchg
push
mov
jecxz
popw
push
adc
lds
in
stos
push
sub
push
rcl
fbld
and
(bad)
xor
sbb
movs
jne
jo
call
and
rol
int
jne
dec
retf
fist
sub
js
jl
ror
mov
mov
sub
xchg
xor
in
cmp
jo
add
inc
imul
test
and
not
mov
loopne
in
dec
xchg
stos
inc
cmp
jne
psubusw
adc
push
sub
add
(bad)
mov
rcr
and
adc
test
rol
aad
xchg
icebp
jmp
mov
in
cmps
cmc
mov
jp
rol
lock
sahf
xor
cmc
inc
mov
adc
scas
jne
gs
ret
test
jo
add
adc
or
or
cmp
mov
outs
in
dec
fdivrp
ins
mov
pop
adc
cmp
push
ret
jbe
(bad)
sbb
and
lods
jg
sbb
sbb
sbb
pop
inc
test
cmp
inc
add
scas
jae
or
push
bound
dec
mov
ret
jbe
outs
jecxz
daa
jne
imul
mul
ja
jnp
jno
imul
test
xchg
sbb
out
push
imul
mov
hlt
mov
in
cld
popf
mov
push
lea
mov
inc
arpl
(bad)
jae
adc
aam
ss
das
mov
mov
jle
stc
rcr
xor
mov
test
jnp
cld
and
es
add
mov
daa
mov
dec
sti
jmp
sbb
mov
into
int3
mov
or
das
adc
cs
imul
xchg
jne
inc
dec
jl
adc
aaa
push
es
push
fidivr
fidivr
dec
mov
cmp
sbb
inc
pop
ja
cmp
sub
xor
inc
mov
data16
jno
add
outs
sar
ret
(bad)
iret
xchg
mov
loopne
icebp
pop
loop
sar
les
mov
test
outs
test
imul
scas
aaa
or
popf
sti
inc
js
not
arpl
mov
push
out
mov
das
push
retf
mov
or
fbstp
add
out
adc
pop
jne
adc
mov
adc
or
ror
outs
dec
inc
mov
or
sbb
xchg
(bad)
xor
movs
push
mov
and
adc
or
jo
xor
jne
movs
cmp
out
xchg
mov
lock
pop
rol
pop
lea
ins
jmp
pop
pop
rol
sahf
cld
imul
inc
push
add
ficomp
cs
ja
in
aad
aas
inc
mov
xor
icebp
fild
loopne
test
jb
hlt
mov
mov
dec
and
jns
ins
call
in
rcl
add
sub
and
mov
or
outs
(bad)
mov
movs
pop
sub
mov
xor
cwde
vpslld
xchg
push
jp
and
push
loopne
and
stc
inc
mov
aad
inc
jl
jne
(bad)
pop
int
in
ja
jae
push
lea
or
push
(bad)
iret
pop
cmp
pop
add
pop
add
or
inc
cmps
xchg
popf
xor
mov
fadd
inc
adc
add
adc
adc
clc
cmc
vaddsubpd
jp
cmp
inc
push
cwde
inc
and
inc
lea
test
movs
jo
dec
add
pop
sub
mov
mov
pop
jne
stc
enter
pop
out
adc
lock
xchg
rcr
aad
mov
pusha
in
push
adc
mov
out
std
ja
call
fbld
adc
sti
cmc
mov
cwde
sbb
popa
jp
push
dec
cmp
(bad)
xchg
call
inc
dec
stos
adc
mov
cwde
nop
inc
or
fist
pusha
mov
retf
test
dec
int3
jns
pop
adc
outs
(bad)
aam
inc
mov
idiv
mov
inc
lods
shr
stc
cld
xor
ja
mov
push
adc
imul
push
nop
ror
loopne
inc
cdq
ret
mov
imul
(bad)
popa
in
or
cli
out
mov
lock
aas
push
and
mov
fcomp
xor
sar
pusha
sbb
shl
pop
sub
xor
movs
out
cmp
test
add
or
inc
fiadd
stc
mov
jmp
popf
inc
inc
sar
and
and
outs
adc
cmp
(bad)
sti
jle
and
push
dec
mov
scas
sbb
inc
int
loopne
cmps
xchg
aam
cmp
rcl
and
mov
out
adc
loope
sbb
mov
cmps
jl
jg
cmp
rol
or
out
push
add
xchg
xor
lds
adc
les
(bad)
jmp
xchg
sahf
inc
sbb
mov
xchg
ret
pop
test
test
or
int
std
xor
xor
lahf
mov
mov
push
cdq
dec
bt
pop
repz
jmp
or
xor
mov
cmc
aad
movs
xchg
rol
les
ss
ficom
mov
int3
pusha
lds
fs
sti
push
nop
mov
adc
xor
adc
mov
rcr
push
jno
not
push
or
cld
mov
ins
push
inc
arpl
out
loopne
lds
dec
mov
pop
cmc
sar
mov
cwde
xor
adc
inc
jno
movs
xor
jo
pop
in
lods
test
mov
xor
jmp
xchg
div
add
cmps
mov
inc
wrmsr
mov
int
cmp
xchg
add
or
cmp
mov
int3
mov
loopne
fcom
lds
nop
mov
mov
fiadd
mov
push
mov
cmp
xchg
and
pop
jecxz
adc
push
call
and
adc
push
cmp
icebp
in
lock
inc
ins
push
mov
push
dec
enter
mov
or
movs
loopne
pop
mov
push
sbb
clc
in
xchg
mov
dec
jne
mov
inc
loop
movs
pushf
adc
xchg
(bad)
push
or
cmc
sub
lock
xor
in
mov
retf
mov
cmc
in
in
jmp
jmp
jbe
sub
mov
jae
popf
cli
lds
inc
int
les
mov
push
cmps
aaa
fldenv
mov
jae
jo
adc
je
inc
jmp
ficom
jnp
pop
gs
xchg
add
bound
mov
mov
push
hlt
mov
rol
pop
mov
pusha
mov
std
scas
ror
nop
dec
dec
outs
and
lds
or
push
adc
fistp
nop
inc
lds
in
pusha
and
rol
aas
push
repnz
fbld
pop
mov
pushf
dec
mov
cmp
dec
outs
imul
jae
lahf
inc
push
inc
push
loope
bound
xchg
lahf
push
inc
or
jo
pusha
movs
xor
sbb
and
xchg
aam
outs
dec
cwde
jmp
int
and
jne
js
xchg
xchg
js
lock
add
popa
sbb
xor
add
sub
pop
xor
adc
mov
test
dec
dec
fwait
out
dec
fisub
and
jo
jl
push
xor
push
test
mov
cli
push
stos
dec
mov
adc
stos
cs
int
mov
leave
push
jno
sub
lods
test
jmp
gs
loopne
xor
rol
push
push
rol
(bad)
vmwrite
enter
xor
dec
lock
xor
ror
addr16
rol
cli
mov
sbb
cmc
int
in
scas
add
pop
and
dec
or
pusha
(bad)
pop
psubb
and
xor
dec
pusha
xchg
or
jbe
fcmovbe
call
push
loope
(bad)
xor
ret
sbb
in
nop
sahf
adc
mul
mov
loopne
dec
ret
sbb
adc
movs
sar
xlat
(bad)
pop
ins
fcom
inc
jne
pop
mov
push
out
xor
push
aad
sbb
and
shl
sub
mov
out
(bad)
std
enter
jecxz
or
mov
loopne
data16
push
and
pop
in
cmc
(bad)
out
ret
adc
pop
add
xor
mov
and
sti
dec
xchg
movs
push
nop
pop
mov
retf
mov
cmc
or
leavew
adc
mov
movs
lods
fcom
inc
fisttp
and
mov
ficom
push
jl
sbb
or
pop
retf
rcl
mov
cmp
lea
clc
arpl
push
xchg
mov
int
mov
popa
scas
pop
stos
int3
inc
mov
imul
sahf
call
dec
std
cmc
ins
sbb
add
popf
mov
pop
or
pop
call
iret
je
lods
or
xor
lds
jne
inc
aas
icebp
xor
dec
pop
out
dec
cs
hlt
add
cmc
and
in
jg
jecxz
in
stc
das
push
aas
test
mov
std
(bad)
cmp
and
cwde
int
sub
pusha
nop
in
xchg
dec
and
mov
int3
and
mov
stos
inc
xchg
sub
xchg
xor
pusha
mov
jecxz
in
stc
xchg
add
imul
dec
arpl
inc
mov
or
mov
jmp
adc
cdq
and
loope
cwde
xor
leave
mov
adc
clc
lea
push
repnz
neg
push
mov
mov
push
sbb
and
push
sub
xchg
jo
xor
sbb
hlt
pop
and
stos
lea
ret
nop
jge
mov
dec
fcmovnbe
cmp
or
retf
movs
xchg
enter
pop
fcom
(bad)
and
jns
ins
sub
sahf
mov
jno
and
aaa
cmc
pusha
xchg
xlat
dec
cmps
cmp
or
mov
mov
ficom
(bad)
call
repnz
popf
push
sahf
push
and
fbld
sbb
jae
jl
pop
aas
ror
and
popf
push
jp
mov
sub
adc
sbb
retf
xchg
fadd
add
ja
loopne
push
xor
iret
mov
mov
ins
xor
mov
inc
sti
xor
add
sahf
add
fld
ins
test
or
out
adc
add
(bad)
mov
inc
inc
call
dec
dec
cmps
pusha
mov
out
mov
aas
dec
lock
pop
or
pusha
adc
dec
gs
and
cli
test
push
cmc
pop
sub
lock
xor
cld
jp
dec
enter
inc
xor
and
adc
mov
stos
push
cmp
pop
loopne
xchg
(bad)
jp
lock
rcl
inc
xchg
add
leave
mov
loop
popf
fdivr
mov
imul
out
aad
(bad)
mov
adc
jmp
mov
jne
out
sub
(bad)
iret
in
movs
test
and
mov
xchg
add
aam
daa
inc
xchg
dec
jp
div
je
inc
add
or
cmps
xchg
cdq
inc
xor
and
mov
xor
(bad)
imul
retf
ss
xor
add
jae
pop
add
adc
jp
mov
add
(bad)
shl
inc
fstp
mov
mov
fwait
mov
neg
pop
cwde
lods
xchg
mov
xor
inc
test
and
push
xchg
mov
cmp
nop
xchg
sbb
pop
fisubr
stos
inc
jno
mov
xor
ret
mov
and
mov
push
in
popa
add
dec
fadd
xchg
mov
gs
int
(bad)
pop
fisttp
push
aad
xchg
addr16
(bad)
clc
jge
cli
mov
inc
lea
push
jno
pop
and
mov
(bad)
cwde
and
ins
test
mov
mov
loopne
popf
xchg
push
add
inc
data16
fld
sub
sbb
cmp
leave
inc
push
popa
dec
and
loopne
sub
fild
sti
aad
ins
mov
xor
rcl
arpl
push
sar
ins
cs
and
mov
cwde
add
lods
shl
mul
and
int3
pop
dec
mov
push
mov
inc
push
fidiv
sub
enter
es
xchg
push
ins
cmp
xchg
mov
test
jmp
sub
sahf
mov
loopne
or
mov
inc
xchg
je
cwde
pushf
aad
(bad)
mov
test
rcr
sub
cmps
sub
mov
xor
rol
cmp
push
push
push
aad
dec
pop
pop
cmp
jmp
test
dec
lods
adc
arpl
adc
mov
stc
mov
bnd
add
cmps
push
push
jg
loopne
in
das
fadd
lods
sbb
xchg
call
test
stc
sti
or
popa
adc
ret
push
sub
push
mov
pop
ss
fadd
jp
je
pop
fstp
sar
(bad)
xor
(bad)
cwde
or
aam
std
std
js
daa
out
push
inc
in
push
imul
js
adc
or
fisub
pop
push
aas
mov
out
push
rol
push
pop
retf
sahf
mov
jg
or
fimul
and
inc
lock
pop
xchg
popa
test
and
add
mov
rcr
cld
test
ds
xchg
je
or
jl
add
jl
push
push
add
xchg
inc
inc
xor
inc
nop
sti
jle
cwde
nop
add
mov
dec
add
imul
shr
push
push
xor
or
sti
fidiv
jne
cdq
inc
xchg
mov
and
push
into
mov
mov
jecxz
arpl
xchg
push
aam
outs
dec
xchg
int3
pop
ins
adc
pop
movs
sbb
cmc
jo
dec
std
mov
arpl
xchg
rol
or
inc
mov
lods
aam
pusha
cmp
sbb
mov
int3
sbb
sbb
call
sub
loopne
cmp
xchg
in
jmp
hlt
add
loop
cdq
scas
cmp
adc
push
lds
sub
lds
rcr
fwait
inc
icebp
pusha
imul
mov
repz
movs
jmp
pusha
cmps
and
mul
stos
cmp
mov
pop
(bad)
(bad)
neg
arpl
and
call
cli
xor
jl
rcr
adc
push
xchg
inc
shl
jae
scas
adc
xchg
or
stc
mov
loop
lds
arpl
adc
add
nop
adc
sbb
pop
dec
fst
rol
add
loopne
add
out
jmp
cmp
loope
pop
dec
xor
ds
xchg
std
adc
iret
sub
mov
ins
add
mov
fcmovb
push
jo
add
pop
cdq
add
mov
inc
pushf
adc
mov
popf
mov
scas
xor
aas
adc
retf
leave
jge
je
adc
aad
xchg
pusha
cmps
fstp
add
rcr
xor
dec
mov
inc
mov
sub
sti
jle
mov
push
mov
jo
mov
push
cwde
add
out
inc
inc
pop
push
push
cwde
stos
push
test
pop
pop
cmp
pop
dec
scas
jge
dec
call
pop
lock
cmp
and
mov
leave
or
ins
mov
mov
call
cmp
jae
sub
or
aad
lds
inc
jae
dec
and
fwait
add
es
xor
push
xor
lods
movs
sbb
call
adc
or
aas
xor
lock
repz
dec
and
sub
mov
dec
(bad)
mov
ins
bt
in
out
sbb
sbb
cmc
popa
inc
mov
sti
cmc
inc
popa
push
jecxz
repz
cmp
repz
mov
das
jmp
push
int
and
aad
pop
add
pop
mov
loopne
out
push
push
out
mov
pop
sbb
cmc
push
in
mov
mov
pop
dec
enter
fs
pop
fsubr
xor
push
xchg
dec
cmp
jo
ficom
mov
xor
iret
clc
and
push
cmp
sub
push
add
(bad)
mov
and
ins
out
fs
mov
sub
test
movs
push
enter
mov
test
ds
adc
or
frstor
jae
imul
inc
loopne
sub
fwait
push
add
xor
sub
pop
dec
mov
jle
std
(bad)
push
hlt
push
mov
aam
mov
dec
loope
or
shr
add
mov
mov
mov
les
sbb
aad
mov
xor
xor
and
sbb
test
stos
pop
inc
push
add
cmp
repnz
cwde
mov
imul
ret
mov
mov
jne
pop
push
aad
jl
xor
dec
adc
test
popa
jne
gs
rcl
je
dec
scas
sub
and
ja
fld
dec
inc
lock
mov
sar
adc
push
push
scas
in
pop
inc
ds
add
dec
mov
adc
mov
sub
mov
xchg
push
std
cmp
dec
mov
lock
aam
or
cmp
jmpw
push
jge
jge
into
mov
pop
jmp
mov
and
fist
or
add
stos
sub
jge
or
shl
jne
fdivr
loopne
adc
retf
xor
or
jmp
adc
gs
ror
mov
test
sub
jmp
mov
shl
in
rcl
stos
fcomp
push
retf
cld
popa
aaa
jmp
stos
inc
or
xchg
pop
dec
(bad)
imul
sbb
dec
shr
push
mov
fmul
mov
adc
and
jp
add
lods
out
push
inc
mov
mov
sar
push
push
int
mov
sbb
pop
pop
or
cld
adc
cmp
movs
push
inc
sub
nop
add
stc
mov
in
popf
mov
pop
push
cdq
lods
add
push
and
popa
in
(bad)
mov
rol
mov
rcr
and
sub
adc
mov
push
js
or
pop
sbb
pop
adc
sbb
jp
sahf
lods
data16
push
xchg
mov
push
push
or
mov
(bad)
das
push
dec
int
cmp
test
mov
lods
fisttp
adc
lahf
mov
xchg
push
(bad)
or
movs
retf
inc
int3
pop
mov
test
pop
and
xor
jo
mov
sub
je
nop
enter
and
jae
call
mov
inc
js
mov
sub
neg
in
bound
jle
pop
jp
leave
fwait
mov
or
les
jg
dec
inc
(bad)
xchg
shr
rcl
inc
test
cmp
jmp
adc
adc
cmp
jmp
scas
nop
ret
add
jmp
pop
sbb
xchg
xor
mov
mov
ret
jp
in
pop
sbb
xor
(bad)
xchg
push
adc
mov
inc
in
cmp
rcl
sub
cmp
movs
add
in
nop
push
cmp
mov
and
jae
pusha
adc
inc
mov
jno
(bad)
mov
or
inc
retf
rcr
adc
add
test
and
scas
mov
add
jp
mov
pop
push
xchg
add
pop
movs
cs
pop
movs
and
mov
ins
dec
pop
aad
movs
fisubr
jns
mov
mov
arpl
add
rcr
xor
and
inc
pop
es
jp
add
cmp
iret
add
dec
scas
jo
cmp
cli
cmp
cwde
pop
pop
and
lock
mov
jp
mov
movs
ins
fist
pop
lea
out
fcmovbe
push
xor
imul
and
je
shl
mov
jb
jle
pop
inc
int3
test
movs
push
add
adc
mov
div
mov
cmp
mov
xchg
test
clc
loope
add
in
adc
add
mov
imul
adc
pop
test
fbld
xor
leave
nop
adc
pop
jne
stos
mov
sbb
loope
sbb
test
and
pop
push
sub
jo
pusha
mov
adc
movs
loope
hlt
nop
adc
nop
push
shr
shl
sahf
aam
xchg
xor
push
and
gs
fldenv
add
inc
xor
lea
add
inc
popf
jo
and
inc
jmp
pop
add
and
push
mov
in
inc
cmp
nop
add
or
inc
lock
jecxz
xor
(bad)
repnz
mov
cmps
add
xor
inc
sahf
sub
pop
and
es
xchg
fcomp
data16
push
jp
fbld
movs
push
es
inc
jo
or
inc
push
ins
push
in
pop
jl
das
xchg
xor
lock
call
bnd
cmp
cmps
mov
mov
mov
add
or
cld
sbb
test
lods
movs
lods
xor
jne
sub
inc
inc
cwde
stos
rol
mov
rcl
fcomip
adc
test
mov
mov
pushf
add
je
or
lods
push
sub
sub
hlt
outs
ja
test
jne
push
fs
test
dec
or
push
mov
sbb
inc
push
aad
mov
aas
dec
es
jne
outs
test
cmp
pop
or
pop
jle
push
jbe
lock
mov
enter
out
sub
jnp
and
ins
dec
pop
popa
lods
mov
jne
sub
ret
push
inc
jne
fistp
aad
les
in
inc
dec
leave
xor
test
inc
sbb
jmp
addr16
ja
fisubr
stos
inc
and
mov
jb
dec
movs
and
xchg
dec
and
xlat
add
mul
adc
mov
lea
and
mov
in
add
mov
sub
pop
aad
sub
loopne
sti
and
jbe
cmp
pusha
mov
xor
add
push
cdq
gs
das
jne
fcom
aad
add
rol
adc
cmps
jne
call
sub
leave
hlt
ret
cmp
cmc
and
outs
adc
lds
mov
mov
retf
push
jmp
mov
cld
movs
scas
xor
test
aad
inc
dec
fdivrp
(bad)
sbb
test
call
shl
movs
icebp
shl
loopne
adc
mov
inc
shl
push
xlat
add
jb
and
push
xchg
mov
das
popf
and
xor
xor
rcr
mov
jnp
push
and
scas
aad
xor
outs
lods
cwde
ret
mov
lea
imul
movs
push
loope
ins
lock
imul
cmps
jmp
push
xor
dec
inc
adc
loopne
fchs
inc
xor
cmc
pusha
call
dec
pop
mov
mov
xchg
cmps
dec
loope
sub
les
popa
in
mov
daa
push
or
mov
arpl
shl
inc
je
repz
jle
push
aas
iret
(bad)
out
mov
and
adc
jns
adc
mov
adc
xchg
ja
in
inc
aas
test
xor
shr
test
xchg
sub
add
sub
xchg
pop
push
cmp
cmc
pusha
push
adc
push
aad
xchg
cmp
call
rcl
sub
in
aam
and
inc
push
mov
xchg
add
pop
ins
fs
add
mov
sub
adc
and
icebp
cmc
ins
xor
pusha
in
adc
inc
fisub
mov
sub
iret
or
mov
(bad)
sbb
sbb
jmp
push
xor
pop
xchg
push
push
(bad)
iret
inc
bound
mov
sub
cli
xchg
ja
fdivr
(bad)
shl
push
dec
icebp
movs
ins
fs
and
lahf
and
mov
aad
lea
sar
loopne
pop
movs
stc
gs
(bad)
out
fld
cmp
jmp
loopne
aas
test
cmp
push
cwde
push
jp
clc
lods
int
sub
xchg
aam
add
popf
xchg
or
adc
icebp
sub
test
int
(bad)
js
sbb
enter
fadd
out
aad
loopne
out
sbb
in
clc
lods
ins
scas
lds
aad
aam
dec
jno
in
int3
xchg
cdq
add
mov
(bad)
out
push
adc
icebp
test
pop
xchg
cmp
push
(bad)
xor
shr
(bad)
fcom
pop
lds
icebp
mov
push
push
push
dec
mov
or
cli
pop
retf
das
test
and
shl
and
lds
mov
or
and
pop
or
mov
xchg
aas
xchg
test
call
stos
stos
pop
ins
mov
dec
fstp
dec
popf
das
mov
pop
lea
pop
cwde
pop
mov
or
and
jo
add
mov
xchg
pop
push
and
xchg
in
cmp
xor
inc
ficom
inc
lea
test
fld
pop
xchg
cmp
mov
cmc
and
adc
popa
dec
shl
mov
jb
inc
pop
mov
adc
or
cmc
pop
stc
pop
fld
stos
ds
out
imul
into
je
lds
or
push
jge
int3
das
push
aas
ss
loopne
out
sub
ficomp
sub
shr
rcl
push
mov
cmc
pusha
xchg
push
lds
inc
add
sub
sbb
add
jo
adc
pop
sub
push
ins
iret
push
xchg
popa
sbb
js
push
pusha
in
and
stc
pop
int3
das
mov
xchg
mov
sbb
jp
neg
pop
xchg
mov
inc
or
jmp
pop
fmul
rdtsc
pop
inc
out
sbb
mov
sub
test
js
int3
push
lods
aas
pusha
sbb
jnp
pop
leave
dec
scas
adc
in
xchg
outs
cwde
jle
dec
xor
lods
or
push
call
nop
fisubr
and
int
cdq
or
outs
cwde
inc
cli
loopne
test
pop
daa
aas
enter
call
frstor
cdq
or
sbb
js
fld
cmc
add
add
shr
test
xchg
mov
dec
jno
loopne
cs
lods
sub
(bad)
jnp
dec
les
cwde
or
or
icebp
inc
mov
js
popf
das
stos
je
jge
lds
adc
mov
dec
adc
lahf
in
aam
dec
cmp
add
pop
gs
and
push
or
cld
pusha
inc
xor
mov
cs
cwde
call
ins
sbb
push
or
fscale
mov
sbb
leave
jno
popf
iret
je
adc
add
(bad)
je
sbb
aas
or
mov
stc
jb
stos
movs
mov
mov
and
sbb
pop
jmp
movzx
sub
push
dec
inc
lock
jecxz
fst
lds
aam
and
stc
popa
inc
cmc
pop
or
sbb
sti
dec
into
dec
int3
pop
pushf
sub
or
mov
loop
and
aas
test
jge
aas
adc
push
aas
mov
mov
test
adc
mov
cs
mov
mov
test
cld
ja
push
lock
in
xlat
imul
push
aaa
or
call
pop
and
(bad)
pop
sub
popf
std
mov
sbb
jge
and
rol
enter
sbb
pop
push
xchg
retf
pop
push
add
xor
inc
pop
nop
fist
lock
or
cmc
lds
adc
cwde
jne
call
ffree
push
cmp
and
mov
xor
fadd
pop
jne
and
sar
icebp
xchg
ins
pop
mov
mov
dec
or
rcr
inc
add
mov
icebp
movs
ins
fs
mov
sbb
inc
cli
cmp
stos
(bad)
into
(bad)
jge
call
shr
scas
adc
loopne
fstp
and
in
test
jo
inc
aad
loopne
out
xchg
and
imul
in
cli
inc
ja
and
sbb
jmp
pop
push
xchg
and
mov
pop
and
add
shl
dec
and
lods
push
retf
push
xor
push
mov
pop
and
push
jne
call
cwde
call
or
mov
cli
mov
pop
and
xor
sar
fcomip
scas
adc
or
cdq
pop
or
adc
pop
gs
mov
pop
push
lock
sbb
movs
cli
or
and
mov
add
icebp
jne
add
iret
loope
pop
aam
sub
adc
mov
test
push
add
je
cmps
fcmovnbe
mov
mov
outs
nop
push
inc
in
js
pusha
push
lock
loopne
loopne
jb
cld
dec
movs
cs
push
pushf
jns
mov
jg
pop
in
in
das
mov
test
je
daa
stc
jno
cmp
xchg
cmp
or
mov
inc
in
movs
retf
xchg
cdq
add
adc
movs
pop
dec
sub
imul
retf
mov
(bad)
enter
sub
je
inc
push
adc
and
push
inc
gs
xor
inc
mov
lock
push
xchg
test
jge
aam
add
adc
and
iret
je
movs
mov
clc
cmp
aam
cli
cmp
stos
dec
inc
mov
cmp
popf
xchg
inc
inc
fst
and
cmc
and
lds
push
jbe
mov
cmp
dec
dec
sbb
in
mov
sub
movs
lock
mov
push
jge
cmp
mov
cmps
push
jge
loope
retf
sbb
dec
inc
mov
dec
sub
mov
call
pop
call
cmps
sar
lds
jb
leave
inc
fsubr
sub
in
cli
jno
mov
pop
xor
inc
dec
fdecstp
in
dec
adc
mov
sbb
or
or
js
das
xchg
pushf
mov
pop
sbb
mov
aad
inc
sti
xlat
adc
fmul
add
push
jge
cmp
mov
push
jo
jg
pop
aad
ficom
mov
or
cld
dec
leave
pop
test
xchg
xchg
jg
pop
aad
ficom
mov
les
test
pop
xchg
cmp
xor
mov
jg
cmp
adc
or
js
pcmpeqw
call
iret
nop
in
pop
push
and
test
cld
jle
mov
popa
dec
shl
aas
mov
fcom
cwde
dec
loope
mov
mov
sbb
movs
inc
jl
dec
stc
cmp
mov
cmp
or
ror
fistp
pop
xor
and
cmc
mov
nop
cmps
mov
imul
pop
xchg
cmp
xor
nop
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jae
arpl
xchg
push
add
mov
inc
lock
adc
and
jae
arpl
xchg
push
add
mov
inc
repz
adc
and
jae
arpl
xchg
push
add
mov
inc
repz
adc
and
jae
arpl
xchg
push
add
mov
inc
lock
adc
and
(bad)
mov
cmps
rcl
add
xchg
cmp
addr16
mov
les
rol
push
aad
lds
popa
loopne
sbb
add
js
jo
dec
mov
shr
inc
sar
xor
mov
imul
jo
mov
mov
imul
and
bnd
addr16
pop
add
aaa
mov
(bad)
jb
(bad)
out
xchg
add
rcl
add
rcl
add
loopne
push
xchg
add
mov
movs
adc
inc
xchg
pusha
in
adc
mov
inc
lock
gs
add
xor
inc
xchg
and
nop
push
add
pop
and
mov
loopne
adc
add
push
sub
jo
and
rcl
mov
inc
lock
daa
adc
and
xchg
inc
lds
cmc
and
nop
jmp
rcl
rol
jne
daa
adc
add
push
xchg
inc
xchg
lahf
in
adc
mov
inc
lock
loopne
adc
and
push
xchg
inc
lds
adc
mov
inc
lock
daa
push
xlat
add
push
aad
lds
mov
in
adc
mov
pop
mov
mov
(bad)
jb
(bad)
out
aad
lds
pusha
in
adc
loop
xchg
pop
add
aaa
mov
test
(bad)
out
xchg
add
nop
push
add
pop
add
aaa
mov
(bad)
jb
(bad)
out
xchg
add
jo
pusha
cmps
rcl
inc
bnd
addr16
pop
add
aaa
loopne
adc
(bad)
out
xchg
add
rcl
mov
inc
lock
daa
push
xlat
add
xor
(bad)
out
xchg
inc
lds
and
nop
adc
loop
xchg
pop
add
jne
gs
inc
(bad)
jb
(bad)
out
xchg
add
jo
pusha
cmps
rcl
add
xchg
push
rol
mov
test
(bad)
out
xchg
inc
lds
and
mov
mov
inc
mov
loopne
adc
inc
(bad)
jb
and
jo
pusha
cmps
rcl
mov
inc
lock
daa
push
xlat
inc
(bad)
jb
(bad)
out
aad
lds
and
mov
loop
xchg
push
rol
mov
(bad)
jb
(bad)
out
aad
lds
mov
in
adc
mov
pop
mov
mov
test
mov
out
aad
xchg
mov
cmps
rcl
inc
bnd
addr16
pop
add
aaa
mov
(bad)
jb
(bad)
out
xchg
add
jo
and
bnd
addr16
pop
add
jne
gs
inc
(bad)
jb
and
xor
pusha
in
push
add
push
rol
aaa
mov
(bad)
jb
(bad)
out
aad
lds
cmc
and
rcl
add
rcl
inc
mov
loopne
adc
and
xor
ret
inc
repz
and
lock
mov
lds
and
xor
and
lock
and
mov
loopne
push
xchg
add
push
aad
lds
and
rcl
add
nop
push
aas
inc
lock
gs
add
jb
and
jo
and
mov
jecxz
rcl
inc
mov
loopne
adc
add
push
aad
xchg
mov
cmps
rcl
add
xchg
pop
add
aaa
mov
(bad)
xor
inc
lds
pusha
in
adc
mov
inc
mov
loopne
adc
add
push
aad
xchg
pusha
in
push
ret
xor
rol
mov
test
bound
xor
add
mov
pop
lock
gs
xchg
add
push
aad
lds
cmc
pusha
in
push
ret
xor
rol
loopne
adc
(bad)
out
aad
lds
mov
in
adc
mov
inc
lock
daa
push
xlat
add
push
aad
lds
mov
cmps
rcl
inc
bnd
and
lock
gs
xlat
inc
(bad)
jb
(bad)
out
xchg
add
rcl
inc
bnd
addr16
pop
add
aaa
mov
(bad)
jb
bound
xor
ret
ja
and
mov
mov
(bad)
jb
(bad)
out
xchg
add
rcl
inc
bnd
addr16
pop
rol
mov
(bad)
jb
and
xor
ret
ja
and
mov
loopne
adc
inc
(bad)
jb
(bad)
out
xchg
add
rcl
inc
bnd
addr16
pop
add
aaa
mov
(bad)
jb
(bad)
out
xchg
add
rcl
inc
repnz
add
jne
gs
inc
(bad)
jb
(bad)
out
xchg
add
rcl
inc
bnd
addr16
pop
add
aaa
mov
(bad)
jb
(bad)
out
xchg
add
rcl
inc
bnd
addr16
pop
add
aaa
mov
(bad)
jb
(bad)
out
xchg
add
rcl
loop
rcl
inc
mov
mov
test
mov
out
aad
lds
mov
in
adc
loop
xchg
pop
add
jne
gs
xlat
inc
(bad)
jb
(bad)
out
aad
lds
and
bnd
and
mov
mov
(bad)
jb
(bad)
out
xchg
inc
lds
and
bnd
addr16
pop
add
aaa
mov
test
mov
out
xchg
add
rcl
inc
bnd
addr16
pop
add
aaa
mov
test
mov
out
aad
lds
mov
in
adc
mov
pop
lock
gs
xlat
add
adc
pusha
cmps
rcl
loop
xchg
pop
add
loopne
push
xlat
inc
test
mov
out
aad
lds
and
bnd
and
lock
gs
xlat
add
push
aad
xchg
mov
cmps
rcl
inc
bnd
and
mov
loopne
adc
add
push
aad
xchg
pusha
in
adc
loop
rcl
pop
lock
gs
xlat
inc
(bad)
jb
(bad)
out
aad
lds
mov
in
adc
mov
inc
lock
daa
push
xlat
inc
(bad)
xor
inc
lds
pusha
in
adc
loop
rcl
pop
lock
gs
xlat
inc
test
mov
out
aad
lds
cmc
pusha
in
push
ret
xor
add
jne
gs
add
adc
pusha
in
push
ret
xor
aas
inc
lock
loopne
push
xchg
add
push
aad
lds
and
nop
adc
mov
inc
lock
loopne
adc
bound
xor
ret
xor
add
loopne
push
aam
test
mov
out
xchg
add
rcl
inc
bnd
addr16
push
rol
mov
test
mul
adc
inc
lds
and
nop
adc
loop
xchg
pop
add
aaa
mov
test
mov
out
xchg
add
nop
adc
mov
pop
mov
loopne
adc
inc
(bad)
xor
add
nop
adc
mov
pop
lock
gs
xlat
inc
(bad)
jb
(bad)
out
xchg
add
jo
pusha
cmps
rcl
inc
mov
mov
pop
mov
loopne
adc
add
push
aad
xchg
pusha
in
adc
mov
inc
lock
daa
push
xlat
inc
jp
mov
movs
adc
and
bnd
addr16
pop
add
aaa
loopne
adc
and
adc
inc
lds
and
nop
adc
mov
pop
mov
mov
(bad)
jb
(bad)
out
xchg
add
nop
adc
mov
pop
mov
mov
test
mov
out
aad
lds
mov
cmps
rcl
inc
bnd
addr16
pop
add
aaa
mov
test
mov
out
aad
lds
and
bnd
addr16
pop
add
aaa
mov
(bad)
jb
and
jo
and
bnd
addr16
pop
add
aaa
mov
(bad)
jb
and
jo
pusha
cmps
rcl
inc
bnd
addr16
pop
add
aaa
mov
(bad)
jb
bound
jo
pusha
in
push
ret
ja
and
mov
loopne
adc
inc
(bad)
xor
add
nop
adc
mov
inc
lock
mov
(bad)
jb
and
xor
ret
ja
and
lock
gs
xlat
add
push
aad
lds
mov
in
adc
loop
rcl
pop
lock
gs
xlat
add
adc
inc
lds
and
nop
adc
mov
inc
lock
loopne
adc
and
push
aad
lds
cmc
pusha
in
push
ret
xor
add
jne
gs
inc
test
mov
out
aad
lds
and
nop
adc
loop
xchg
pop
rol
mov
test
mul
push
aad
lds
mov
in
adc
loop
xchg
pop
add
jne
gs
xlat
add
push
aad
xchg
cmc
pusha
in
push
ret
xor
rol
mov
(bad)
jb
and
jo
pusha
cmps
nop
adc
mov
pop
lock
gs
xlat
add
push
aad
lds
mov
cmps
rcl
inc
bnd
addr16
push
rol
mov
test
mov
out
aad
lds
mov
in
adc
mov
inc
lock
daa
push
xlat
inc
(bad)
jb
(bad)
out
aad
lds
and
repnz
rol
mov
(bad)
jb
and
xor
ret
ja
addr16
push
rol
loopne
adc
and
adc
and
bnd
addr16
pop
rol
mov
(bad)
xor
add
rcl
mov
inc
lock
daa
adc
and
jo
and
bnd
addr16
pop
add
aaa
mov
test
and
jo
and
repnz
add
loopne
adc
(bad)
out
xchg
add
rcl
inc
mov
mov
inc
lock
mov
test
mov
out
aad
lds
cmc
pusha
in
push
ret
ja
addr16
pop
add
jne
gs
add
push
aad
xchg
pusha
in
adc
mov
inc
lock
daa
push
xchg
add
adc
pusha
cmps
nop
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
loopne
adc
and
push
aad
lds
cmc
pusha
in
push
ret
xor
rol
mov
(bad)
jb
(bad)
out
aad
lds
pusha
in
adc
mov
pop
lock
gs
xlat
inc
(bad)
jb
bound
xor
add
pop
rol
mov
(bad)
xor
inc
lds
pusha
in
adc
mov
inc
lock
daa
adc
and
jo
and
nop
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
pop
mov
mov
test
and
jo
pusha
in
push
add
xor
rol
jecxz
adc
and
jo
arpl
nop
push
add
mov
inc
repz
adc
and
jae
arpl
xchg
push
add
mov
inc
repz
adc
and
jae
arpl
xchg
push
add
mov
inc
repz
adc
and
jae
arpl
xchg
push
add
mov
inc
repz
adc
push
mov
mov
leave
push
mov
lds
and
xchg
jno
jb
xor
inc
movs
add
push
xchg
push
mov
xchg
inc
lds
xchg
push
mov
out
popa
dec
shr
cmps
xchg
in
lds
pop
mov
inc
test
test
jne
outs
lock
repnz
loop
sbb
je
mov
mov
xor
shl
shl
(bad)
mov
mov
add
ja
push
retf
xor
sub
loope
cmc
inc
mov
loop
mov
add
push
jae
in
dec
movs
xor
jne
inc
jmp
aam
rol
xor
ins
lds
xor
movs
sub
jb
inc
ror
pushf
dec
mov
cld
jno
rol
in
inc
lahf
xor
adc
stc
inc
call
cmp
or
xor
add
fs
pop
ret
pop
rcl
and
mov
movs
(bad)
je
inc
loopne
loopne
xchg
or
jno
arpl
push
fldenv
push
icebp
xor
add
repz
push
mov
adc
push
inc
loope
mov
and
xor
nop
sub
fst
inc
mov
dec
xchg
xor
jmp
add
fldcw
leave
inc
mov
adc
push
jns
ins
ret
push
repz
or
movs
mov
push
shl
xor
movs
cmp
lds
pusha
inc
adc
pop
xchg
rcl
aam
mov
dec
mov
not
pusha
call
adc
fst
inc
mov
pop
mov
test
jp
xor
xor
das
mov
mov
(bad)
ins
ror
sub
and
inc
fldenv
push
out
test
xchg
jecxz
repnz
or
jp
or
push
stos
jae
inc
cmc
add
and
xchg
sar
inc
xor
add
adc
jae
pop
shl
xchg
jb
xor
hlt
inc
cmc
xor
mov
lahf
xor
inc
rcl
ror
mov
pop
xchg
jecxz
repnz
out
push
shl
mov
fist
jns
popa
div
adc
int3
icebp
xor
shl
pop
hlt
push
sbb
xchg
and
pextrw
jp
push
mov
mov
mov
fdiv
addr16
les
gs
push
mov
sahf
sbb
inc
mov
mov
and
fs
add
jbe
push
xchg
je
push
xor
pop
xchg
add
loope
xchg
push
(bad)
pusha
xlat
adc
je
repz
repnz
out
loopne
cdq
push
and
les
push
push
retf
cmp
push
movs
scas
xor
cmp
inc
rcl
shl
sbb
or
stc
inc
lds
frstor
adc
add
out
jno
popa
out
and
pop
dec
hlt
imul
adc
ret
jl
aaa
lock
mov
mov
or
cli
pop
mov
in
push
(bad)
ret
mov
cld
ja
ins
push
xor
add
xchg
push
dec
cmp
std
push
(bad)
and
daa
mov
test
popf
aas
or
fbld
inc
dec
jnp
cmp
das
loope
icebp
popa
(bad)
ja
push
aad
lds
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
gs
aad
lds
pusha
in
xchg
add
push
rol
addr16
pop
add
aaa
mov
(bad)
jb
and
xor
ret
inc
repz
xchg
push
add
mov
(bad)
jae
arpl
adc
and
repz
xchg
push
add
mov
jmp
and
inc
mov
xchg
pop
in
in
jbe
push
inc
mov
movs
and
cli
outs
fidiv
mov
movs
and
adc
cmc
adc
int
mov
sbb
pop
fldenv
xlat
cmps
sub
adc
add
daa
movs
and
outs
test
rcl
cmps
xor
cmc
adc
lds
adc
(bad)
stc
arpl
xor
jg
and
pusha
xchg
cld
add
cmp
jge
jb
adc
inc
test
mov
and
nop
push
rol
rcr
pop
loope
call
and
xchg
add
fist
mov
gs
inc
(bad)
jae
arpl
adc
and
repz
xchg
push
add
mov
(bad)
jae
arpl
adc
and
repz
xchg
push
mov
xchg
cmp
sbb
stc
gs
mov
int3
ds
mov
cmc
adc
hlt
je
jno
push
iret
dec
mov
scas
das
test
pop
fs
je
pop
mov
test
nop
or
ja
push
add
daa
lock
add
jo
inc
lds
jo
and
mov
in
aad
ror
ss
rcr
adc
loopne
mov
mov
(bad)
rol
pop
ror
cmps
xor
jae
push
fmul
aad
mov
inc
in
xor
aam
mov
movs
and
add
loop
rcl
inc
lds
pusha
in
nop
adc
mov
push
jno
dec
jmp
iret
jne
and
pusha
in
nop
adc
cmc
xor
loopne
rcl
adc
cmp
push
fimul
mov
xchg
pusha
mov
cmp
imul
ret
dec
test
mov
gs
and
inc
mov
shl
inc
lds
fwait
and
pop
shl
test
xchg
gs
jns
pop
ror
aas
mov
adc
les
inc
repz
addr16
pop
sub
loopne
fs
jp
pop
fwait
and
adc
and
repz
xchg
push
add
mov
(bad)
jae
arpl
adc
and
repz
xchg
push
add
mov
(bad)
jae
arpl
adc
and
repz
xchg
push
add
mov
(bad)
jae
arpl
adc
and
repz
xchg
jp
xor
lock
xor
xor
pop
add
push
mov
adc
icebp
push
(bad)
pop
test
xor
adc
jno
inc
mov
push
xchg
xor
adc
loope
fsub
out
mov
and
pop
mov
and
hlt
imul
cmp
xchg
mov
cmc
push
adc
test
pop
fs
in
push
fadd
mov
lds
fwait
or
jecxz
add
lds
addr16
cwde
push
xchg
inc
adc
dec
mov
cmp
mov
pop
mov
sub
inc
(bad)
jae
arpl
adc
and
repz
xchg
push
add
mov
(bad)
jae
arpl
adc
and
repz
xchg
push
add
ss
cs
(bad)
dec
test
ins
in
push
or
xor
push
lds
jle
jl
push
(bad)
and
xchg
outs
test
mov
xchg
cmp
cmp
clc
jae
ja
pop
lds
cmp
gs
add
push
(bad)
leave
aas
mov
mov
xchg
pusha
in
adc
leave
and
lahf
adc
or
outs
cld
xor
push
(bad)
push
cmps
and
in
ins
loope
mov
shl
jne
gs
inc
movs
push
cmps
xor
leave
push
ror
inc
int3
inc
mov
and
icebp
pop
mov
mov
cmp
cmc
jp
bound
push
mov
sbb
xor
push
test
cmc
pop
stos
jo
push
mov
jl
ins
ret
adc
mov
cdq
add
ss
data16
inc
add
push
loope
mov
cmc
je
ja
xor
mov
lock
icebp
push
lock
movs
jo
inc
mov
icebp
popa
lds
adc
shr
inc
mov
jle
gs
fild
and
sub
(bad)
addr16
ret
lds
xchg
cmp
pop
je
jae
inc
rcl
push
mov
xchg
adc
xor
lds
xchg
or
lock
add
and
xor
jmp
dec
clc
xor
adc
gs
ror
aas
mov
add
cmc
pop
mov
cmp
and
imul
xor
mov
push
mov
gs
add
test
mov
pusha
xor
jne
sub
inc
mov
xor
jo
push
fiadd
and
in
xor
add
movs
adc
adc
and
add
jb
adc
adc
out
repnz
mov
mov
lock
or
lock
add
push
mov
mov
add
les
push
rcl
inc
popf
pop
or
loop
les
sbb
aam
rcl
repnz
inc
jmp
inc
in
fbld
mul
data16
inc
retf
dec
mov
adc
fiadd
int3
add
cmc
adc
inc
leave
push
or
bound
push
stos
jo
or
les
and
lock
loopne
xor
outs
loope
mov
movs
aas
mov
and
repz
xchg
push
add
mov
(bad)
jae
arpl
adc
and
repz
xchg
push
add
mov
(bad)
jae
arpl
push
mov
lds
or
rcl
inc
repz
xchg
push
add
mov
(bad)
jae
arpl
adc
and
repz
xchg
push
add
mov
(bad)
jae
arpl
adc
dec
and
in
fdiv
shr
jne
adc
jbe
inc
int
rcl
test
or
les
push
lock
shl
adc
cmc
jo
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
popa
in
adc
mov
inc
lock
adc
and
jo
popa
in
adc
sbb
push
rol
loopne
adc
and
jno
jl
nop
or
cmp
push
fadd
loope
or
add
push
leave
inc
lds
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
and
(bad)
inc
mov
sub
pop
xchg
add
fild
inc
in
in
cdq
adc
or
lahf
inc
retf
and
add
jnp
cmc
pop
in
cld
pop
mov
or
jg
js
adc
pusha
stc
push
xchg
pop
(bad)
test
pop
ret
and
xchg
hlt
push
jmp
or
xlat
shr
lea
pusha
loopne
lea
add
sub
je
pop
xchg
inc
xchg
lds
movs
aaa
in
aam
xchg
sbb
imul
xchg
mov
std
int3
sbb
push
out
int3
push
cmp
add
dec
mov
in
ss
add
xchg
cmps
ficomp
mov
int
add
inc
std
sbb
into
fbld
test
les
add
and
mov
mov
iret
mov
adc
and
inc
in
in
sub
sbb
push
fdiv
inc
loopne
and
mov
push
(bad)
iret
cld
inc
cmc
pop
(bad)
mov
xor
aas
mov
out
push
push
int3
dec
fistp
inc
retf
cmp
jmp
das
push
aas
mov
out
push
or
movs
fistp
call
outs
or
pop
add
stos
lds
cmovs
call
push
jne
lea
inc
retf
int3
sar
dec
retf
adc
pop
call
dec
xor
jo
loop
nop
sbb
lds
lock
imul
dec
cli
xor
jne
in
sbb
data16
cdq
and
push
shl
xchg
or
pop
mov
jmp
pusha
pop
nop
jno
imul
pop
inc
sub
jne
mov
test
ror
xor
pusha
in
adc
add
rol
xchg
or
loope
test
dec
inc
adc
pusha
icebp
nop
adc
mov
ja
jne
imul
inc
ret
pusha
test
jecxz
out
jbe
xor
rol
pop
jg
add
push
fadd
mov
call
xor
dec
mov
rol
loopne
adc
cmps
pop
push
mov
nop
adc
test
mov
rol
xchg
adc
cmp
mov
lahf
in
adc
int3
and
lock
loopne
jl
add
xor
adc
push
mov
and
lock
add
inc
leave
push
fimul
and
adc
adc
and
rcl
sub
inc
lahf
push
jge
arpl
inc
cdq
push
lds
aas
lds
sbb
rol
push
mov
mov
shl
stc
shr
inc
mov
xchg
xchg
fst
mov
sub
xchg
ins
neg
sub
push
fsubr
mov
nop
or
in
ret
ins
repz
iret
addr16
daa
xchg
jb
or
dec
(bad)
pop
mov
xor
sbb
sub
xchg
pop
out
jno
pop
out
sar
les
xchg
adc
jmp
adc
pop
mov
xchg
mov
popa
rol
test
xchg
cmp
adc
(bad)
pop
fimul
adc
adc
cld
add
dec
mov
push
xchg
adc
out
cmp
dec
lods
xor
cld
push
xor
hlt
ja
pop
in
xchg
cmp
ss
sti
jne
xor
es
sbb
pusha
cmps
call
jno
popa
iret
dec
mov
mov
mov
mov
out
rcl
xor
lea
fcom
xchg
xchg
mov
xchg
push
loope
aam
jecxz
mov
aaa
lods
cwde
xchg
push
ror
sbb
inc
xchg
pop
jmp
cld
imul
push
repz
pop
aam
mov
pop
mov
jae
arpl
xor
push
mov
test
not
xor
ret
adc
cdq
jg
imul
cmp
mov
fsubr
inc
aam
shl
test
adc
push
neg
dec
in
and
xor
push
adc
dec
fild
ins
movs
xor
sub
lds
pop
xchg
inc
mov
or
les
push
xor
pusha
cld
outs
lock
xlat
daa
mov
adc
jo
pusha
mov
add
adc
ins
(bad)
pop
ror
rol
jns
or
les
out
ja
popa
les
pop
scas
aaa
movs
adc
addr16
imul
xor
data16
mov
shl
mov
push
adc
js
jns
dec
loope
pop
xor
(bad)
push
out
out
pop
scas
dec
and
sub
adc
inc
jecxz
mov
aaa
jecxz
jl
add
shl
test
fs
add
pop
stc
dec
sar
and
les
shl
push
lods
sub
jo
addr16
rol
cmp
mov
jmp
add
repz
out
jno
inc
in
mov
sbb
adc
inc
test
dec
rcl
and
xchg
mov
call
push
mov
add
int3
inc
ror
xor
push
xchg
les
hlt
pop
(bad)
push
mov
cmp
mov
jo
sub
xchg
push
jno
shl
push
shl
lods
inc
neg
add
dec
loopne
mov
inc
mov
nop
setno
jp
add
mov
adc
adc
inc
mov
inc
mov
stc
jo
pop
lds
xchg
push
lods
pop
xchg
add
es
xchg
ins
jmp
das
(bad)
jne
bound
nop
adc
xor
in
loopne
xchg
push
xlat
xor
or
icebp
js
imul
push
mov
sti
push
test
jne
inc
icebp
pop
mov
and
xchg
(bad)
arpl
pusha
aad
cmps
and
jae
or
jmp
cmp
or
add
and
std
inc
hlt
jno
pop
aad
pushf
pop
lods
sub
jo
jl
sti
pop
mov
and
aas
rcl
adc
pop
in
repz
mov
inc
repz
cs
outs
(bad)
push
fadd
adc
setb
pop
in
aad
in
sub
mov
mov
inc
fdiv
test
mov
adc
(bad)
jb
jbe
adc
mov
xchg
sbb
icebp
pop
int
shl
clc
xor
xchg
in
repz
jbe
and
test
add
loope
loopne
xchg
push
les
mov
or
nop
pop
test
scas
xor
add
cmp
inc
shl
sub
push
pushf
inc
mov
xchg
les
(bad)
adc
ins
in
ror
xlat
cs
test
loopne
test
in
iret
push
mov
cmp
call
cmp
outs
lods
add
push
and
adc
loop
ficom
mov
jb
cmp
pop
mov
ins
mov
mov
fwait
adc
ret
push
mov
movs
xor
stc
gs
push
(bad)
cmp
or
icebp
pusha
iret
pusha
popf
push
nop
inc
push
mov
lds
push
sub
fs
adc
xor
sub
les
jecxz
cmc
cmp
mov
mov
in
and
cmp
cmp
js
int
inc
rol
mov
std
jle
and
mov
push
mov
lds
movs
and
jmp
std
adc
aad
addr16
lds
shl
jo
mov
jp
and
xor
test
xchg
lods
lds
fadd
movs
ins
outs
mov
and
or
mov
repnz
std
xchg
adc
inc
pop
adc
nop
pop
(bad)
pop
lods
imul
xor
gs
add
jge
jp
xor
xor
adc
ror
inc
movs
mov
movs
loopne
xchg
xchg
mov
in
dec
fistp
cmps
mov
add
jno
retf
mov
jmp
xchg
in
aad
pop
call
xchg
cmp
pop
jl
rcl
push
lock
add
call
aad
mov
add
mov
mov
cmps
xor
inc
lds
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
adc
and
jo
pusha
in
adc
mov
inc
lock
gs
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
push
xor
push
mov
cmp
jne
push
push
mov
mov
mov
mov
mov
call
push
push
mov
call
push
mov
call
mov
lea
push
mov
mov
call
test
jne
pop
xor
pop
add
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
cmp
mov
pop
pop
setne
add
ret
nop
nop
nop
push
mov
push
mov
mov
seto
push
call
push
call
add
mov
mov
pop
ret
nop
nop
in
cmc
and
adc
add
push
fimul
neg
cwde
inc
hlt
and
les
add
test
xor
add
add
je
je
push
xchg
adc
mov
movs
inc
xchg
push
test
aam
aam
xor
in
adc
add
and
fs
add
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
les
add
xchg
adc
pusha
out
jo
xchg
adc
test
sub
movs
and
inc
and
(bad)
pushf
ins
cmp
nop
(bad)
in
mov
push
push
je
jmp
movs
cli
cmp
cmc
jo
les
inc
jae
ficomp
fs
push
lock
adc
js
hlt
and
les
inc
nop
add
ss
aaa
jp
and
mov
push
fimul
sub
xor
call
pop
add
test
mov
inc
sbb
js
retf
add
mov
aad
arpl
loope
jge
gs
movs
mov
cmc
jo
add
retf
icebp
cmps
fwait
popf
add
lock
inc
fcom
jge
movs
jbe
or
imul
adc
mov
gs
mov
jl
retf
and
push
aad
push
sub
imul
or
jbe
retf
pop
jmp
jl
inc
adc
xchg
jne
addr16
imul
xor
sbb
mov
mov
(bad)
fild
les
add
repnz
push
arpl
aad
popf
dec
mov
add
loopne
div
nop
fstp
pop
mov
push
test
(bad)
mov
jge
adc
je
nop
test
mov
fwait
mov
aam
xchg
or
dec
pushf
je
mov
cmp
int3
les
sub
xor
xchg
sbb
pop
popf
sbb
cmc
and
aad
add
cli
dec
es
add
movs
inc
xchg
adc
adc
sahf
fst
mov
in
xchg
inc
jne
pop
sbb
test
js
sub
fdiv
lods
out
pop
add
pushf
mov
inc
xor
adc
jnp
xor
adc
je
enter
mov
es
xchg
mov
xchg
stos
test
repz
rcl
rcl
test
mov
rcl
jmp
push
(bad)
test
mov
dec
out
or
scas
jmp
(bad)
pushf
push
adc
push
fld
scas
call
fbld
jbe
jmp
xor
aam
pop
ss
or
pop
inc
call
(bad)
fwait
les
adc
in
adc
mov
stos
imul
stos
js
or
ins
mov
enter
sahf
nop
(bad)
pop
xchg
mov
sbb
mov
rol
fs
push
jmp
popa
adc
enter
cmpxchg
cmps
jne
adc
cmp
mov
xor
rol
push
cmp
mov
push
fs
call
imul
(bad)
jmp
and
adc
mov
push
sbb
pop
dec
push
fs
outs
cmp
and
add
adc
mov
sbb
push
in
or
imul
mov
push
popf
test
mov
dec
call
jae
test
sbb
add
jnp
jl
in
(bad)
rcr
mov
vunpcklpd
xor
loope
pop
popf
mov
test
jns
adc
xchg
mov
lahf
aad
movs
test
ss
gs
push
adc
and
jns
imul
push
ret
int
mov
adc
push
es
aam
xchg
jno
and
adc
mov
lods
push
inc
cmc
out
cs
cmps
leave
scas
jb
in
cmp
or
je
aaa
or
mov
int
stos
pop
jecxz
xor
cmp
das
pop
inc
sub
or
jno
sub
aad
inc
lock
loope
or
les
xor
cmp
dec
adc
inc
push
in
or
test
test
dec
cmp
jno
das
pushf
das
pop
add
jne
test
mov
sbb
mov
int3
sbb
and
adc
sti
mov
ds
movs
cmp
enter
daa
jns
mov
(bad)
cwde
cmp
mov
add
ss
xor
push
sbb
fs
ins
scas
dec
xor
movs
xchg
sbb
movs
xchg
pop
aam
stos
lds
and
mov
rcl
mov
jmp
ret
sub
arpl
fcom
(bad)
cmps
fnstenv
sti
fld
adc
test
mov
in
and
retf
mov
push
push
ins
jge
data16
xor
xchg
push
inc
adc
pushf
dec
jno
stos
mov
rcl
hlt
enter
cmp
mov
inc
sub
enter
movs
test
js
mov
outs
cli
pop
adc
xor
jmp
in
sar
fistp
gs
pop
adc
mov
dec
xchg
mov
jle
cmp
and
add
idiv
hlt
add
ret
lods
test
mov
sbb
mov
mov
push
call
sbb
and
movs
sub
dec
ins
xchg
or
lds
add
je
lods
test
push
call
ret
inc
or
and
add
mov
lock
push
push
mul
pop
push
imul
pop
adc
push
mov
(bad)
sti
fstp
xor
into
and
mov
into
test
pop
and
(bad)
push
(bad)
out
idiv
jne
in
mov
and
cmc
pop
lods
push
(bad)
xchg
dec
in
sbb
fs
cmp
and
int3
and
ss
aaa
jp
and
xchg
cmps
retf
xchg
loopne
mov
adc
je
mov
push
dec
(bad)
pusha
and
or
xchg
in
xor
ret
mov
or
sbb
xor
inc
sbb
addr16
rcl
push
aad
sbb
push
les
std
and
int
jnp
add
fdivr
fs
lds
pop
jge
fnstenv
mov
or
je
gs
mov
in
call
sbb
mov
enter
shl
jl
addr16
add
cmp
or
gs
fidiv
adc
and
jmp
in
stos
mov
fwait
xor
dec
div
push
add
cmps
inc
aam
jl
xor
sar
xchg
sti
fdiv
or
xchg
je
mov
shl
pop
out
sub
xchg
cmp
clc
mov
dec
mov
ds
inc
call
jp
mov
adc
imul
stc
mov
or
xchg
add
sbb
mov
sub
dec
push
aas
out
imul
xor
pop
lock
in
imul
(bad)
shl
add
jge
sub
mov
(bad)
pop
push
mov
add
fdivr
jge
popf
sub
cmp
imul
push
aad
out
je
pop
or
int
mov
or
sahf
retf
rcr
xchg
push
aad
out
jmp
mov
jmp
fimul
and
aam
add
lds
aaa
shl
dec
inc
mov
arpl
cmp
cmc
mov
(bad)
imul
iret
xor
push
mov
outs
dec
pusha
fstp
xor
or
rcl
dec
es
or
(bad)
jl
jmp
gs
nop
xor
push
adc
pop
add
aas
je
dec
retf
inc
fldenv
ins
lods
in
rcl
ins
xor
es
dec
fisttp
and
rol
adc
pmulhw
adc
xor
sbb
jae
jo
cmps
add
push
mov
mov
ja
mov
loope
icebp
les
add
std
jmp
cmp
(bad)
jae
fisttp
pop
pop
dec
dec
jmp
lea
test
test
bound
mov
test
cmc
pop
xchg
inc
fisttp
push
inc
push
push
mov
in
xor
inc
pushf
fiadd
mov
mov
pop
pop
xchg
mov
popf
pop
xchg
push
frstor
cmps
das
fsub
pop
jnp
cld
retf
fcom
sub
std
fisttp
out
rcl
std
add
push
mov
pop
out
mov
lahf
adc
jecxz
jecxz
lock
call
loope
sbb
inc
and
sub
ss
fwait
sbb
jl
out
fcomp
adc
mov
cmp
and
aam
or
mov
fnsave
fs
pop
push
(bad)
cmp
xor
mov
cmp
cdq
xchg
(bad)
sub
mov
or
ret
cmp
pop
pop
sub
sahf
inc
fdivr
pop
lds
xchg
movs
out
icebp
cmp
sbb
sbb
and
fsub
and
out
pop
loopne
mov
push
xchg
add
cmp
mov
sbb
out
(bad)
jg
or
je
push
fst
push
adc
in
movs
inc
(bad)
pop
shl
lock
mov
and
les
mov
jp
ret
xor
js
paddsb
adc
mov
daa
test
sahf
js
or
in
(bad)
int
(bad)
xor
out
add
loopne
or
and
xor
(bad)
movs
or
xchg
(bad)
ja
in
jno
sbb
sub
inc
fld
jb
dec
loope
xchg
push
inc
xor
pop
test
mov
shl
pop
clc
sub
mov
lea
int
mov
ins
sub
dec
xchg
mov
xor
dec
aad
add
mov
push
inc
pop
jmp
stos
inc
and
push
jmp
jo
stc
call
add
popf
lods
shl
in
xchg
sahf
cmp
sar
jmp
mov
lds
xlat
mov
adc
fsub
adc
push
fcmovnbe
push
xchg
inc
sub
mov
fcmovu
push
mov
sub
mov
leave
les
sar
and
movs
push
or
mov
mov
or
imul
inc
jle
pop
in
add
nop
push
push
sbb
movs
into
lock
ins
jb
retf
xchg
jmp
and
das
cld
adc
inc
or
movs
mov
in
and
jno
scas
cmp
fadd
add
fadd
cmp
sbb
xor
je
in
aad
inc
sub
in
xchg
mov
aaa
mov
jl
(bad)
fidivr
stos
mov
aam
in
mov
jmp
mov
mov
adc
in
test
das
inc
(bad)
add
or
ins
mov
repnz
(bad)
add
push
or
push
retf
sub
cmp
dec
outs
mov
scas
mov
in
sub
xchg
push
xchg
and
or
or
push
sbb
test
loope
xor
jl
cld
leave
in
or
inc
std
and
lahf
ror
jo
addr16
and
adc
stos
mov
or
and
cmps
dec
dec
pop
sti
repz
xor
xchg
fnstsw
pop
(bad)
movs
in
stos
inc
test
xor
(bad)
cmc
xor
and
aad
aam
dec
aas
daa
or
cmp
in
and
jbe
add
ja
xor
inc
imul
push
call
loope
das
push
xlat
xchg
(bad)
hlt
pop
icebp
add
ja
scas
call
out
nop
pop
push
iret
cmp
lods
dec
push
cmp
add
jno
int3
sub
cld
mov
enter
or
pop
push
clc
jl
xor
cli
(bad)
std
xchg
or
jmp
inc
arpl
adc
or
not
sbb
adc
adc
mov
xor
aam
sub
out
xchg
into
(bad)
sar
popf
rol
inc
mov
jo
jo
xchg
cmp
jmp
inc
movs
je
xor
and
push
call
test
mov
in
pop
sub
fadd
int
rcl
stc
movs
sub
adc
sub
std
movs
adc
jb
out
fs
mov
outs
pop
add
stc
pop
mov
mov
push
or
loope
in
xchg
and
lock
loopne
push
cmp
gs
push
gs
pop
lods
retf
push
push
cmp
xchg
adc
imul
stc
lock
fcomp
mov
xor
and
cdq
and
in
cmc
push
adc
shl
(bad)
fadd
mov
lea
ins
or
cmps
cld
adc
cdq
nop
add
cld
cmp
cmp
mov
inc
jo
aam
jg
xchg
inc
aam
popf
sbb
int3
mov
xchg
test
push
push
or
mov
hlt
pop
pop
sbb
and
xchg
frstor
in
or
sub
dec
jmp
push
mov
dec
inc
xchg
add
add
xor
imul
push
xchg
inc
gs
movs
mov
cmp
nop
in
push
xor
jle
pop
cmps
sti
adc
push
rcl
xchg
jo
loope
hlt
adc
pop
inc
cmp
cmp
test
add
fs
leave
call
shl
(bad)
sti
and
or
inc
adc
sub
test
pop
cmp
sbb
fsubr
jp
xchg
mov
cmps
cld
push
and
cdq
sub
jb
sbb
aas
aas
clc
movs
mov
or
cmps
fdiv
fidivr
and
popf
cdq
mov
or
js
inc
ret
fldenv
dec
push
adc
mov
mov
aad
lds
out
stc
sbb
add
gs
push
cmp
lods
clc
loopne
cmp
sti
(bad)
leave
mov
jl
or
frstor
add
retf
or
inc
dec
outs
pop
mov
mov
dec
push
call
test
adc
mov
or
sbb
test
dec
int
ror
hlt
xor
les
and
add
cmp
test
loope
sbb
scas
cmp
sahf
dec
cmps
cli
movs
jns
rcr
sub
push
jns
add
sub
add
cmps
int
adc
and
cld
pop
ret
neg
stos
dec
div
jns
and
outs
cmp
vmovaps
loopne
popa
jmp
(bad)
xor
add
sbb
mov
adc
add
movs
xor
add
std
cmp
jno
test
pop
je
cmps
push
add
inc
gs
inc
popf
inc
push
mov
dec
or
push
push
mov
and
jmp
gs
clc
gs
pusha
and
adc
push
lock
loopne
pop
mov
call
jo
jnp
jns
jmp
and
ret
movs
fwait
or
inc
lea
pop
mov
or
and
retf
or
sub
fs
mov
mov
pop
imul
jecxz
fld
loope
jmp
and
call
mov
test
imul
sbb
jbe
xchg
mov
aam
inc
sbb
test
movs
mov
or
clc
or
fdivr
sbb
sbb
mov
xchg
(bad)
repnz
(bad)
fistp
not
dec
add
cdq
dec
aaa
pop
cmc
imul
and
pop
cwde
jmp
jno
in
add
add
mov
jge
out
mov
xchg
jnp
rol
cli
push
mov
test
xor
xchg
xlat
out
pop
je
lock
stos
push
sub
test
ja
adc
dec
ins
mov
ja
out
cld
cli
clc
sub
jge
jmp
inc
adc
mov
and
retf
or
movs
jae
cmp
fld
shl
push
ins
(bad)
cmps
jo
mov
and
movs
test
gs
lea
movs
adc
test
xchg
xor
mov
xchg
cdq
sub
test
push
lea
add
pusha
hlt
jo
stc
push
sbb
mov
cdq
push
pop
dec
mov
inc
fst
bound
or
inc
aam
dec
sbb
fucomp
pop
(bad)
mov
push
mov
imul
mov
jmp
adc
cli
and
dec
out
or
add
(bad)
stos
test
inc
mov
cmp
repnz
(bad)
pop
es
loope
popa
mov
movs
enter
push
sbb
mov
cmps
push
pop
sti
sub
and
dec
xor
sbb
inc
adc
mov
fsubr
xor
adc
inc
sub
mov
or
gs
sub
or
sbb
inc
cmp
rcr
adc
push
movs
stc
mov
jl
dec
and
jnp
jae
imul
jbe
and
(bad)
hlt
not
dec
hlt
(bad)
iret
cdq
dec
aaa
pop
test
inc
and
sub
fadd
gs
call
stos
imul
enter
test
test
dec
adc
cmp
cdq
sub
test
mov
adc
sbb
(bad)
cmp
les
xchg
and
mov
sub
adc
std
das
int3
sub
shl
mov
(bad)
in
inc
push
push
sub
popa
cmp
lea
mul
cmc
icebp
fisttp
sub
outs
lea
xchg
popf
ins
add
inc
push
xchg
dec
lea
popf
and
jl
mov
mov
adc
and
imul
stos
and
jle
enter
jle
push
in
fdiv
add
jno
test
mov
xlat
rol
test
adc
popa
call
and
dec
jge
enter
and
pop
adc
adc
inc
je
mov
mov
mov
pop
xchg
mov
into
mov
loope
imul
mov
aad
xchg
add
cmp
inc
addr16
imul
jle
movaps
aad
rol
adc
xlat
pusha
hlt
xor
and
add
out
sbb
lea
mov
and
jge
movs
imul
adc
inc
pop
daa
lock
push
jno
call
push
pop
jnp
cld
fnsave
lock
or
cdq
aad
call
test
pop
daa
shl
and
(bad)
dec
lods
inc
js
(bad)
aad
lds
je
fwait
jp
rcl
je
adc
movs
jno
cli
pop
adc
(bad)
rcl
rcl
dec
lods
mov
jl
shl
inc
lds
adc
cld
mov
fs
fld
sub
vmaxps
inc
sbb
test
jl
cmp
out
lock
adc
mul
inc
pop
fdivr
mov
xchg
inc
into
mov
xor
xor
pop
push
iret
fidivr
lock
sbb
jge
popf
mov
cmps
inc
pop
push
mov
jae
outs
sub
cmp
rol
cmp
pop
call
push
mov
call
test
jmp
js
cli
(bad)
repz
nop
addr16
mov
cmp
pop
add
aam
call
in
inc
mov
and
js
out
inc
push
loope
lods
ins
cld
inc
into
shr
daa
mov
lods
jp
xchg
sub
gs
push
aaa
test
test
jo
inc
jmp
sbb
cs
rcr
inc
dec
das
test
shl
ins
jl
pusha
in
pop
adc
std
mov
dec
ins
pop
jne
inc
loope
or
mov
enter
in
push
jno
loopne
cmp
(bad)
fmul
movs
aas
adc
ror
pusha
mov
fbstp
cs
outs
lds
dec
xlat
cmps
aaa
mov
mov
cmp
inc
fldenv
jnp
adc
or
cmp
and
jb
out
aad
xlat
test
lock
mov
pop
jl
or
in
jno
cs
fdivrp
mov
leave
inc
pop
in
pushf
stc
inc
shl
mov
stc
ror
test
in
xchg
(bad)
aam
fmul
test
movs
je
jmp
in
loope
les
stos
ja
mov
mov
pop
xchg
mov
test
jge
and
mov
or
push
add
xor
imul
pushf
out
adc
inc
adc
aas
test
xor
ss
and
rcl
movs
pushf
hlt
jmp
gs
mov
outs
int
xor
dec
or
adc
xchg
ds
ret
inc
out
mul
hlt
psrad
xor
int3
fisttp
inc
movs
push
mov
lea
and
adc
sub
call
mov
cld
iret
sub
sub
xchg
test
xor
sbb
xchg
imul
xor
jle
in
jnp
push
sub
inc
mov
cmp
pop
nop
mov
jg
push
or
push
call
mov
in
aad
mov
test
and
ins
push
xchg
jmp
mov
xlat
jne
adc
into
dec
stos
xor
mov
push
xchg
xor
mov
xchg
jmp
cdq
mov
mov
ins
mov
aam
in
cmc
jae
popf
pop
dec
or
(bad)
push
pop
sub
les
add
xor
call
jl
mov
loop
gs
mov
clc
mov
xor
shl
test
loopne
clc
out
xchg
sahf
or
dec
jne
scas
lds
and
rcl
fcmovnb
inc
pop
ret
push
fs
pusha
gs
aad
xor
push
lea
xchg
cli
sub
je
int3
adc
out
mov
ins
fst
movs
retf
or
test
adc
out
fwait
push
(bad)
jecxz
jle
rcl
dec
pushf
(bad)
jmp
loopne
out
jns
mov
and
push
in
pop
mov
push
test
daa
jge
pop
dec
sbb
pusha
mov
outs
dec
pusha
pop
(bad)
loope
inc
push
xor
add
std
add
push
gs
inc
cmp
and
out
cmp
mov
or
aad
in
enter
in
xchg
fnstenv
push
push
push
lods
int
add
push
sub
and
xor
dec
adc
add
push
sbb
xor
je
inc
test
(bad)
outs
dec
pusha
jmp
push
dec
(bad)
jo
idiv
test
mov
int3
(bad)
fbstp
xchg
scas
dec
lods
or
inc
cdq
pop
add
in
std
adc
loope
cs
xchg
and
in
xchg
call
jle
xor
mov
mov
rcl
out
lods
mov
fild
cmc
les
(bad)
cs
scas
pop
jle
retf
dec
add
sub
xor
and
in
lahf
call
ror
adc
call
(bad)
mov
xchg
jg
and
pop
vcvtsi2sd
loopne
leave
xor
adc
inc
mov
push
pop
cmp
in
inc
sbb
clc
and
pop
pop
sbb
sub
push
rol
fldenv
hlt
mov
fcomp
mov
fwait
pop
movs
or
and
mov
add
imul
cmps
cwde
mov
cmc
cmps
add
fwait
jb
stc
in
test
mov
movs
test
or
outs
mov
xor
pop
adc
xor
sbb
or
lds
jno
inc
push
xlat
in
sbb
pop
sub
dec
enter
popf
inc
jb
enter
sbb
in
pop
mov
push
adc
mov
mov
loope
(bad)
cld
jmp
cmps
push
xor
mov
mov
mov
ror
push
sub
in
mov
ds
fadd
push
xor
scas
(bad)
adc
rcr
(bad)
icebp
jns
out
mov
and
leave
sub
cwde
loopne
xor
enter
and
aaa
ds
adc
aas
jne
clc
add
rcr
and
aam
adc
jmp
push
movs
sub
jecxz
dec
aas
jno
xor
xchg
scas
movs
icebp
cmp
dec
outs
pop
lods
cmp
adc
mov
cmp
sbb
mov
in
pusha
dec
ins
int3
icebp
lods
lds
(bad)
cs
pop
(bad)
and
leave
rcl
out
adc
xor
(bad)
inc
dec
outs
pop
cmc
push
rcr
addr16
sbb
mov
mov
je
fcomp
(bad)
fldl2e
cmp
ja
push
dec
mov
aas
call
pop
push
and
rcr
fs
test
adc
xor
rcl
and
fist
add
pushf
adc
int
adc
mul
stos
push
mov
enter
and
sub
and
jbe
dec
xchg
aad
pop
(bad)
aas
adc
xchg
push
jmp
fmulp
sub
cmp
cmp
pop
mov
xchg
sti
stos
push
iret
push
ds
ror
repnz
out
push
shl
jns
cld
and
inc
mov
xchg
cmp
jge
pop
xchg
or
(bad)
sahf
les
jl
inc
adc
or
je
inc
lea
adc
and
xor
in
xchg
pop
mov
sahf
rcl
lahf
dec
push
add
(bad)
jne
das
xchg
(bad)
jnp
div
test
shl
cmc
inc
add
test
pushf
out
sbb
punpckhbw
imul
into
(bad)
xor
inc
or
xchg
aam
loop
and
pop
push
por
cmc
xchg
sbb
adc
scas
fadd
scas
mov
push
xlat
push
xchg
or
and
inc
sbb
fidivr
pusha
pop
aam
dec
push
xor
imul
mov
sar
cmc
pop
pop
jne
jbe
or
shl
cmc
xor
and
mov
cmp
lods
xchg
test
cs
xchg
adc
xchg
je
je
xlat
inc
mov
imul
test
neg
hlt
les
cmp
pop
adc
mov
pop
and
hlt
xor
(bad)
in
cmc
inc
vpsrad
sub
dec
add
push
xlat
test
and
adc
hlt
xlat
and
sbb
lea
(bad)
shr
adc
fild
inc
adc
mov
xlat
and
mov
ins
lods
fwait
xchg
test
mov
mov
cdq
sti
mov
lods
call
jbe
mov
std
dec
sbb
imul
mov
mov
into
scas
push
or
fwait
sahf
out
mov
sub
add
fwait
outs
add
mov
lods
push
stos
ins
scas
hlt
mov
or
xor
mov
mov
loopne
enter
enter
mov
sbb
jnp
cmc
(bad)
in
push
fcom
and
add
jns
xchg
aad
rol
popf
arpl
rcr
and
inc
daa
add
pop
into
daa
test
or
mov
push
add
inc
out
dec
jne
dec
imul
pushw
push
mov
test
cmp
jl
pop
ins
or
sub
nop
fdivrp
and
aam
aam
cmp
mov
sub
out
fidiv
test
addr16
je
dec
pop
pop
xor
xor
pop
dec
cmp
add
fild
jmp
pop
das
mov
xchg
cmp
cmp
jmp
push
fmul
in
mov
sub
or
sbb
call
lahf
xchg
lea
mov
xor
mov
mov
cs
xor
iret
lds
outs
sub
retf
stc
mov
or
push
xor
xchg
inc
stos
je
pusha
cmp
outs
movs
repz
mov
mov
or
push
sub
sbb
push
mov
inc
xor
bound
test
sub
scas
lds
push
sar
mov
lock
iret
dec
pop
or
inc
push
adc
aam
movs
in
retf
push
scas
nop
push
in
aad
ds
push
jg
mov
out
add
add
sub
shr
cmp
repz
dec
pop
js
in
jp
shl
pop
mov
dec
inc
pop
rol
fsubr
adc
in
jno
sub
pusha
sbb
rcl
cmp
shl
sbb
pmulhuw
mov
outs
retf
cmc
scas
cmp
push
pop
std
pop
mov
cmp
push
shr
add
and
(bad)
push
sub
jns
call
(bad)
data16
xor
cdq
and
das
into
sbb
jns
and
xor
jo
dec
aad
and
xchg
push
pop
js
xor
add
xor
int3
mov
xor
lods
rcr
sub
push
or
inc
cmps
mov
push
movs
in
hlt
and
adc
lds
mov
push
pop
cmps
inc
arpl
dec
pusha
movs
cmp
push
aad
cld
sbb
jge
jg
mov
div
ds
pop
inc
call
mov
jmp
(bad)
sub
sahf
fwait
mov
je
xor
call
inc
and
cmp
inc
cmps
hlt
js
dec
jmp
dec
fs
xor
push
fstp
(bad)
xchg
stos
jnp
test
inc
aam
mov
retf
pmulhw
adc
mov
dec
xchg
jp
xchg
mov
adc
fbld
mov
popa
push
out
test
je
out
jns
xchg
add
jne
mov
stos
jnp
xchg
push
mov
cmp
les
or
push
sbb
frstor
cmp
add
call
xchg
xchg
(bad)
movs
test
pusha
rcl
aas
mov
or
xchg
retf
xchg
sbb
pop
or
(bad)
cs
mov
jnp
mov
(bad)
cld
es
sbb
mov
cmps
jno
dec
add
and
ds
inc
call
shl
out
xor
(bad)
xor
popa
add
mov
fs
pop
xchg
push
and
inc
sub
xchg
cmps
leave
test
mov
cdq
jmp
push
pop
add
mov
les
sbb
mov
mov
mov
sub
fs
jns
adc
mov
inc
stos
sbb
(bad)
fiadd
das
int3
scas
push
xlat
(bad)
mov
xchg
and
xchg
pop
xchg
push
cmp
outs
or
jge
aad
aaa
sub
push
xlat
xor
int
mov
xchg
aad
fs
xor
scas
inc
xor
dec
pop
shl
jmp
enter
mov
or
xchg
add
and
les
mov
add
nop
lock
out
and
pop
int3
xchg
pop
and
xchg
rol
cmc
fadd
neg
mov
call
leave
jecxz
or
push
adc
or
call
sbb
scas
inc
addr16
push
and
rcl
mov
adc
sti
sar
lods
pop
lock
xchg
add
xchg
push
loopne
hlt
popf
es
aam
(bad)
in
sbb
(bad)
cs
mov
(bad)
outs
sub
or
pop
out
xor
cs
in
or
adc
pop
inc
fbld
or
les
mov
jmp
call
or
xor
ffreep
mov
xchg
(bad)
sbb
cli
push
jge
in
sbb
xchg
xlat
shl
shl
sbb
leave
call
rcl
xchg
aam
xchg
jmp
and
in
add
jne
dec
test
cmp
inc
rol
xlat
fimul
mov
adc
pop
aad
pop
mov
enter
cdq
not
cmps
adc
fild
rcl
(bad)
retf
jl
mov
aaa
dec
push
push
mov
sub
mov
mov
cmc
pop
or
nop
outs
movs
jno
jno
xchg
and
int3
mov
sahf
xor
les
xchg
aad
xor
mov
adc
out
fmul
cmp
or
mov
jne
test
add
(bad)
in
jmp
in
jnp
mov
in
cdq
int3
lds
cmp
lea
xchg
nop
enter
pusha
mov
mov
loope
movs
add
popa
sub
fwait
mov
imul
xor
icebp
pop
xor
call
inc
xchg
outs
jns
fbld
push
adc
ror
dec
stos
test
mov
in
xchg
inc
cmp
adc
jno
dec
mov
or
test
mov
xchg
push
dec
lock
rol
pop
add
ss
(bad)
pop
xchg
or
jne
movs
mov
mov
leave
xor
push
mov
mov
imul
sbb
sbb
mov
and
push
sbb
xor
push
add
adc
sub
in
xchg
xor
xor
(bad)
aad
pop
or
jmp
inc
mov
or
mov
jg
iret
cmc
nop
std
add
adc
inc
scas
cld
mov
(bad)
push
(bad)
mov
jne
inc
imul
cmps
or
in
rcr
push
sahf
sub
sub
cwde
(bad)
fsubr
div
xchg
inc
or
inc
pop
add
fwait
adc
call
jns
xlat
leave
and
clc
repnz
(bad)
loopne
cmp
(bad)
in
ror
jb
xor
push
lds
mov
inc
xchg
aad
and
pop
fcmovnb
sbb
out
cs
mov
mov
sbb
sbb
dec
icebp
jo
in
cmp
xchg
sbb
mov
or
sub
(bad)
lods
enter
adc
jg
add
xchg
clc
movs
fs
inc
test
push
mov
cmps
adc
xor
nop
dec
pusha
xor
inc
sti
cwde
mov
test
jge
lods
mov
mov
sahf
xor
inc
loopne
lods
jb
rcl
aaa
push
xchg
xchg
xor
lods
sub
cmps
aam
mov
pop
aam
mov
sbb
cmp
mov
xchg
push
jns
inc
ins
mov
and
adc
and
sbb
xchg
(bad)
(bad)
out
mov
mov
nop
add
std
scas
mov
push
cmp
pushf
mov
xor
inc
rcl
int
ins
stos
or
xor
sti
mov
cs
sahf
dec
out
pop
cdq
xor
jge
into
pushf
push
test
test
(bad)
jmp
jmp
add
mov
lock
pop
fs
dec
mov
into
xchg
push
test
jg
nop
cli
push
sub
cmp
hlt
imul
call
xchg
inc
mov
mov
push
pop
inc
int
mov
mov
in
xor
dec
call
arpl
dec
mov
into
lock
inc
(bad)
ja
les
std
xchg
outs
retf
xor
sbb
lods
test
dec
inc
cmp
xor
xor
les
aad
repz
ss
dec
lock
mov
push
push
push
shl
std
lds
xor
fwait
or
aad
fs
daa
inc
push
rol
mov
jl
pop
and
aam
add
lds
inc
sbb
dec
inc
out
or
dec
and
aam
jp
sti
stos
int3
(bad)
enter
cld
adc
test
xchg
or
mul
mov
sbb
loopne
sbb
mov
xchg
mov
sbb
jl
sub
inc
pop
and
xor
push
fcomp
rol
cmp
or
fsubr
add
lds
xor
adc
das
mov
jns
mov
mov
and
out
inc
fs
add
mov
cmc
xchg
aas
test
ja
pop
adc
inc
leave
add
fadd
cmp
or
jle
and
mov
mov
and
push
mov
and
pusha
fmul
pop
pop
jo
sbb
dec
sbb
clc
loopne
lock
xchg
add
jne
add
xchg
and
inc
fcom
je
call
dec
out
adc
and
imul
sbb
cmps
push
sub
cmp
xor
jne
adc
sti
fs
je
jp
sbb
test
stos
inc
test
gs
pop
aam
sbb
js
mov
adc
fs
aam
fs
cmp
movs
inc
push
push
shl
sbb
fst
test
out
mov
test
fdivr
mov
jns
cmps
add
or
cmp
(bad)
in
ins
ins
fldcw
jo
aaa
jmp
jne
test
sbb
add
mov
mov
jo
aam
inc
shl
icebp
fidiv
jo
mov
jmp
in
or
adc
mov
jp
sbb
mov
aad
pusha
pop
sub
mov
lahf
lods
fs
pop
movs
ss
daa
jae
xchg
mov
and
lds
test
test
mov
push
loope
cmp
cmp
mov
xchg
fdiv
sbb
add
inc
arpl
shr
pop
and
adc
or
fsubr
rcl
sub
and
call
neg
movs
stos
mov
push
out
gs
stos
jmp
jmp
pop
movs
aam
hlt
pop
sub
mov
ins
add
inc
mov
jp
sbb
test
sbb
nop
in
lock
daa
dec
mov
inc
imul
jno
push
or
ins
rcl
fwait
test
ins
inc
rol
in
aam
jmp
mov
pop
clc
repz
jmp
es
mov
mov
or
add
push
sub
test
dec
rcr
cs
les
mov
in
js
dec
jmp
js
sub
sbb
jne
js
xchg
cdq
leave
inc
ss
div
jmp
add
pushf
dec
fwait
or
add
add
sbb
push
hlt
jnp
jg
cmps
adc
nop
retf
sbb
inc
movs
mov
rcl
dec
loopne
add
in
test
jl
rcl
dec
sub
push
and
and
int3
pop
rcl
or
test
fmul
sub
mov
xchg
cwde
daa
stc
inc
mov
gs
mov
xchg
and
push
adc
cwde
jns
rol
cmp
lds
mov
shl
fdivr
xchg
sti
loopne
xor
in
mov
test
mov
and
cmc
dec
xor
pop
sub
inc
inc
out
aas
jno
sbb
add
mov
pop
sub
cmc
pop
xchg
adc
jl
mov
popf
jne
shl
arpl
loop
xor
les
xor
loop
push
pop
clc
sub
mov
repnz
leave
sub
ins
cmp
cmp
jae
adc
pop
pop
adc
mov
mov
or
cld
fucom
stos
pop
jmp
sbb
push
cli
pop
mov
int
sbb
sub
mov
in
xchg
adc
in
sub
pushf
ds
loop
fs
loope
jo
hlt
retf
adc
xchg
(bad)
push
sub
sub
add
idiv
hlt
sbb
jae
cmps
cli
xchg
and
inc
push
add
ins
mov
fiadd
push
in
jne
pop
xchg
add
test
push
and
scas
(bad)
jmp
adc
fucomp
test
lfs
sbb
sbb
sbb
push
in
nop
fcom
or
inc
ja
or
push
jge
shl
rcr
mov
cmc
and
mov
pop
xchg
sahf
and
push
test
or
scas
hlt
inc
pusha
sbb
and
mov
pop
cmps
sub
arpl
add
cld
cmp
cmp
(bad)
and
add
mov
pop
push
adc
mov
mov
pop
adc
es
adc
add
mov
add
mov
sbb
in
add
shl
jbe
call
mov
add
cmp
test
sub
inc
faddp
jle
mov
dec
lds
ret
pop
xchg
push
add
pop
(bad)
push
mov
xchg
outs
xchg
push
and
sub
shl
stos
stc
jne
pop
ret
fld
fld
nop
inc
mov
dec
jl
push
loopne
mov
xchg
and
mov
pusha
sub
mov
mov
enter
dec
out
fist
les
sti
and
aam
xor
dec
adc
popa
cmp
inc
or
les
xchg
push
pop
adc
and
sahf
sbb
gs
in
jp
mov
ds
dec
pop
mov
test
nop
add
(bad)
add
icebp
sar
icebp
sub
ss
and
sbb
or
(bad)
ds
test
dec
shl
mov
and
jo
and
retfw
jle
lea
lds
(bad)
xchg
or
ds
movs
pop
fisub
sub
sbb
cmps
dec
adc
(bad)
cld
je
fs
adc
hlt
mov
sub
cmps
in
xchg
stc
dec
cmp
ror
in
je
push
nop
push
sub
movs
icebp
in
and
cmp
pusha
popf
je
lahf
add
sbb
fwait
popf
and
sub
mov
mov
loope
rcl
sub
jno
pushf
cmp
loopne
and
out
jbe
mov
cmp
int3
jle
aad
sub
mov
push
adc
xchg
(bad)
into
ret
pop
(bad)
pusha
das
in
hlt
xor
nop
rcl
dec
(bad)
pushf
inc
xchg
pop
jnp
or
add
jge
xchg
mov
aam
movs
mov
inc
in
inc
xor
push
mov
in
stos
popf
add
fsincos
pop
jo
xor
mov
push
test
cmc
pop
mov
push
rcr
pop
dec
les
popa
adc
and
mov
rcl
or
dec
jo
and
push
adc
hlt
jne
add
ja
jno
push
sbb
mov
test
lods
dec
xor
dec
adc
data16
mov
movs
test
jae
adc
xchg
mov
add
xor
cmp
pop
(bad)
out
dec
pushf
mov
movs
rcl
xchg
mov
(bad)
jmp
aam
xchg
adc
in
xor
in
pop
popa
xchg
stc
cdq
xor
test
mov
adc
clc
and
push
int
mov
jbe
fldln2
adc
push
pop
push
dec
xor
or
out
add
ror
ror
mov
sub
jecxz
in
dec
repz
inc
xchg
jg
jp
mov
dec
pop
pop
test
jmp
cmp
out
aas
loop
xor
sbb
push
outs
cmps
addr16
dec
inc
jge
movs
pushw
xor
mov
add
int
pop
minps
outs
ja
jne
xchg
xor
and
ret
les
push
sub
cmp
scas
into
int3
add
xchg
pop
sub
ins
lods
addr16
jl
push
fidiv
ret
iret
sub
sub
movs
call
mov
fwait
dec
mov
cmc
test
out
aas
cmp
sbb
fdiv
pop
mov
or
cmp
adc
mov
sahf
add
mov
outs
mov
gs
aam
dec
popf
aas
add
mov
hlt
inc
pushf
inc
pop
popf
les
jle
lds
rcr
push
stos
push
into
lods
jno
popa
test
inc
in
hlt
outs
and
popa
and
push
jne
jge
or
jne
adc
loopne
mov
adc
in
hlt
nop
les
test
sbb
call
jnp
xor
xchg
pop
or
ss
xchg
aam
add
int3
sbb
xchg
or
add
cld
stos
icebp
jl
jo
inc
sub
mov
lds
xchg
shr
mov
loope
int
xlat
dec
xor
add
call
movs
stc
ds
movs
fadd
jne
pop
imul
mov
jmp
imul
push
push
pop
popf
in
push
(bad)
loope
pop
jne
jbe
mov
in
push
cmps
cmp
push
sahf
inc
daa
jne
adc
inc
xchg
xchg
push
inc
sub
inc
sbb
rcr
xchg
sbb
sub
pop
mov
mov
aas
(bad)
outs
push
popa
repnz
test
int
mov
stc
sub
pop
(bad)
shl
jge
xchg
jl
mov
sub
adc
fcom
scas
dec
adc
sti
pop
sub
xchg
or
dec
mov
xor
outs
adc
leave
xchg
in
in
retf
adc
mov
mov
fnop
in
in
mov
ficomp
sbb
mov
push
sti
push
jns
fs
push
push
xor
push
push
inc
mov
and
sbb
push
in
pop
call
or
iret
add
movs
adc
push
test
test
mov
xor
dec
or
inc
es
adc
hlt
js
stc
xchg
mov
mov
sub
stc
mov
enter
push
mov
data16
xor
cmp
mov
xchg
inc
shl
sahf
aam
rol
pop
mov
mov
sbb
nop
in
fcomp
and
dec
ror
test
cdq
jg
(bad)
push
aam
mov
cwde
xchg
in
pop
les
mov
fwait
jno
push
lods
adc
and
adc
ins
outs
scas
mov
les
adc
push
fs
sbb
sbb
gs
mov
pushf
push
(bad)
in
xor
shr
jle
push
inc
mov
ins
xchg
push
out
out
mov
fistp
in
pop
daa
adc
mov
sub
and
pop
pop
xor
jl
jl
movs
leave
in
xchg
adc
sbb
pop
xor
ss
test
inc
ror
into
or
xchg
cli
add
pusha
xor
jp
aam
jo
jl
fwait
lock
(bad)
inc
adc
movs
rcl
cmp
pop
and
jl
pop
(bad)
aaa
test
sub
add
jno
test
cs
mov
xor
ror
and
fsub
jo
push
sub
pop
inc
adc
xor
inc
add
shl
cs
jb
aad
jmp
push
mov
sub
jno
stos
es
out
mov
mov
push
sub
jmp
retf
jnp
lock
(bad)
je
jmp
mov
loope
imul
add
cmp
and
in
inc
movs
popa
mov
test
mov
dec
stos
jnp
test
xchg
xor
jmp
dec
aad
das
enter
cwde
sub
jno
jl
xchg
or
ja
cmp
add
shl
or
movs
mov
xchg
jmp
inc
retf
movs
test
jl
cmp
cli
in
inc
dec
cmps
int3
int3
jns
pop
nop
or
ja
jp
push
test
sar
in
mov
xchg
outs
retf
test
(bad)
jne
mov
fs
jne
xor
std
jo
movs
inc
scas
(bad)
imul
pop
es
push
push
sar
shl
xchg
push
ins
pop
add
and
push
or
scas
jmp
shl
fst
movs
cmp
and
shr
sub
cmc
and
gs
or
leave
daa
mov
das
into
push
mov
mov
xchg
out
adc
mov
stos
xchg
mov
inc
xchg
test
or
cmp
xor
fisttp
xchg
mov
popa
or
xor
les
test
ds
adc
and
cmc
es
cld
pop
lea
stos
xchg
push
aad
sub
push
cmc
mov
and
jge
sbb
imul
les
mov
mov
in
stos
popf
lock
icebp
jae
lahf
mov
gs
pop
ret
jecxz
das
dec
loop
inc
and
pop
adc
je
push
aad
jns
mov
xor
clc
movs
inc
jge
shl
xor
xchg
stos
mov
fs
mov
jp
das
inc
call
sqrtps
xor
xchg
inc
adc
out
in
(bad)
and
sbb
xchg
imul
paddq
outs
inc
outs
test
mov
xchg
dec
aaa
es
or
xchg
scas
jae
or
mov
ins
xor
and
push
push
(bad)
jne
push
ret
and
(bad)
(bad)
xlat
pop
pushf
pop
sub
mov
in
xchg
mov
and
push
mov
leave
and
pop
scas
dec
lods
arpl
xor
adc
xor
jl
in
loope
sbb
and
mov
fs
aad
mov
sub
call
test
push
xchg
inc
arpl
ins
lds
in
xchg
inc
and
jnp
rep
sbb
jmp
aad
add
ss
movs
js
xchg
leave
mov
les
aam
cld
retf
and
aas
add
das
cs
adc
mov
add
(bad)
cmp
lds
daa
xchg
mov
push
mov
movs
scas
cmc
pop
sbb
jp
mov
pop
mov
mov
pushf
jmp
push
pop
xor
fs
stos
sub
cmp
sar
sti
inc
sbb
pop
(bad)
xor
adc
add
mov
push
cmp
mov
pop
cmp
stos
xchg
data16
mov
sub
dec
jmp
inc
xor
push
jl
sbb
test
or
in
push
push
cmps
adc
mov
adc
inc
out
push
jnp
jg
popf
sti
xchg
sahf
inc
pushf
mov
pop
xchg
int3
aaa
test
gs
aaa
movs
mov
(bad)
and
xor
rcr
fstp
test
jl
outs
mov
mov
adc
cmps
add
retf
cmc
ja
xchg
popf
sub
sbb
sti
lods
xchg
cmp
xor
retf
fmul
pop
inc
movs
popa
jmp
inc
stos
loopne
movs
and
jo
imul
sub
mov
or
push
aad
dec
lea
out
add
sbb
sbb
xor
in
rcr
sbb
cmp
movs
mov
jmp
into
or
push
(bad)
cmps
cmc
enter
ret
xchg
test
push
cdq
adc
jge
(bad)
sti
fimul
push
or
enter
scas
ret
sti
mov
dec
movs
test
icebp
xchg
fstp
test
inc
cmps
mov
aam
ins
cli
loopne
xor
nop
lds
push
loopne
add
popf
loope
cdq
push
aam
loope
and
sbb
scas
ret
pop
pop
dec
shl
sub
sahf
or
push
or
xor
popaw
stc
pusha
jmp
cdq
xchg
div
add
jns
push
xchg
fcom
inc
mov
inc
cmp
stc
mov
test
xor
adc
xchg
mov
fisttp
aad
jns
mov
inc
test
or
xchg
in
sbb
mov
or
adc
in
adc
jmp
sub
mov
inc
(bad)
push
add
jns
in
xchg
jmp
xor
not
xor
inc
xor
rcl
lds
scas
outs
aam
fistp
int
test
inc
mov
adc
jl
mov
int3
adc
push
lds
jno
ss
(bad)
push
xchg
or
push
inc
push
jmp
shl
iret
stc
mov
mov
mov
mov
stc
or
mov
in
loope
dec
jb
les
mov
test
inc
daa
mov
push
inc
(bad)
mov
in
or
scas
dec
add
jp
xchg
into
ss
(bad)
mov
daa
mov
rcl
cmc
add
cmp
adc
fs
push
scas
outs
xor
cmp
inc
in
jns
inc
sub
xor
jl
mov
gs
pusha
repz
pop
push
sub
call
or
pushf
pop
add
xor
(bad)
push
fmul
add
fiadd
(bad)
cmps
sub
lock
mov
adc
add
enter
xchg
xor
fwait
mov
rcr
add
arpl
and
repz
add
lds
cmp
test
pop
leave
les
test
loopne
fbld
movs
rol
(bad)
adc
test
add
xor
fistp
mov
in
test
pop
xchg
fldcw
cdq
aam
sbb
test
arpl
jno
cmp
jno
enter
and
xchg
cwde
les
mov
loopne
shr
push
pop
add
arpl
movs
adc
inc
hlt
and
push
push
lea
adc
pop
es
sub
test
(bad)
es
movs
xchg
xchg
cmps
xor
out
push
mov
pop
popa
jmp
dec
xor
push
jg
hlt
retf
test
xchg
in
mov
add
jp
adc
inc
cmp
xchg
stos
frstor
sub
mov
sub
not
add
sbb
mov
xchg
inc
jne
push
imul
push
nop
(bad)
in
shl
jmp
sti
rol
cmp
imul
cld
jmp
les
inc
xchg
and
stos
jp
dec
loope
test
pop
fadd
xor
add
out
lea
push
mov
mov
ins
sbb
(bad)
icebp
dec
in
adc
adc
jl
movs
add
test
xor
cmp
add
fs
xchg
push
es
movs
push
fstp
(bad)
mov
sbb
jne
xchg
in
pop
mov
std
push
test
push
pop
and
push
mov
adc
xchg
or
aad
add
std
cmp
gs
mov
and
aam
les
inc
cmc
clc
iret
ja
movs
repnz
call
ins
scas
or
cli
fucomip
inc
mov
cld
je
call
lock
xlat
leave
movs
dec
test
xchg
push
mov
jge
mov
and
je
fadd
shl
test
aam
dec
mov
inc
mov
mov
push
xchg
mov
in
test
fmul
pop
xor
ins
call
sub
je
and
xlat
pop
mov
sbb
mov
in
cmc
jp
push
cmp
ja
xor
fst
iret
pop
icebp
mov
rcr
loopne
cdq
js
jmp
pop
sbb
mov
add
push
mov
int
add
in
xchg
inc
(bad)
in
mov
xchg
sub
cmp
imul
pop
leave
and
sub
add
rcl
in
int
int
(bad)
adc
daa
dec
aaa
loope
rcr
leave
xor
pop
add
adc
movs
je
cmp
dec
mov
std
xchg
data16
xor
cdq
in
or
pushf
in
lock
or
dec
cmp
(bad)
push
test
fcomp
sbb
lock
ds
ret
or
lods
inc
je
xor
mov
pop
sub
xor
jg
adc
(bad)
dec
pop
mov
rcr
int
shr
push
stos
stc
lds
cdq
mov
dec
cmc
mov
or
pusha
enter
xchg
test
repnz
sbb
pop
leave
cmc
icebp
mov
mov
jns
push
aas
mov
jb
add
adc
fild
pop
loopne
add
sub
shr
cmp
repz
xchg
pop
js
in
jp
shl
pop
jg
mov
div
cmp
mov
aas
mov
jp
push
clc
or
add
pushf
inc
(bad)
clc
test
adc
adc
add
push
imul
in
xor
into
cmp
sbb
test
fild
in
sbb
imul
retf
mov
retf
xor
xchg
mov
jmp
pusha
and
cmps
mov
pusha
xchg
and
movs
and
sub
mov
mov
hlt
inc
rol
(bad)
mov
or
adc
jle
xchg
add
imul
inc
xor
rcl
push
test
and
jo
or
mov
fs
fld
jb
rcl
icebp
loope
jo
add
jns
lods
lds
or
mov
sbb
fstp
sbb
sbb
or
jmp
push
sub
rcr
icebp
mov
push
jge
cmps
inc
sub
sbb
and
pop
es
sbb
inc
inc
repz
nop
push
xchg
std
cmp
shl
(bad)
enter
push
dec
or
stos
imul
pop
int
ins
and
rcr
mov
test
inc
out
jo
das
rcl
and
div
sub
sbb
cmc
imul
jno
jne
into
ins
jge
push
xor
push
cdq
nop
(bad)
lea
xor
sbb
mov
movs
add
fimul
cmp
mov
and
out
outs
fnstcw
out
call
(bad)
adc
imul
adc
inc
lds
add
dec
mov
dec
cmps
jno
jbe
stos
or
mov
popa
add
push
cmp
adc
fstp
gs
movs
inc
mov
repnz
cli
sub
popf
add
hlt
inc
jae
loope
and
xor
imul
in
cli
pop
sbb
outs
cmc
lahf
push
lds
pop
out
jecxz
out
mov
add
leave
mov
mov
xor
cmp
pusha
push
push
call
pop
mov
xor
adc
(bad)
lds
clc
loopne
dec
out
ins
push
rcl
sbb
or
outs
cli
push
adc
fstp
xchg
jb
movs
push
inc
push
jne
fwait
or
mov
ss
jb
dec
loope
xchg
push
inc
xor
pop
test
mov
shl
pop
clc
sub
mov
lea
int
mov
ins
sub
dec
xchg
jmp
xchg
inc
fs
mov
stos
push
int
lea
push
adc
mov
ds
ins
enter
sbb
das
fdivr
shr
push
test
jge
lods
sbb
cmp
call
push
test
pop
test
(bad)
mov
mov
mov
out
aam
inc
sbb
or
(bad)
ds
test
mov
pop
mov
fisttp
jno
and
call
imul
ins
push
push
add
mov
sub
add
stc
nop
neg
jge
cld
xchg
mov
pop
add
xchg
clc
test
add
inc
jno
mov
lods
or
or
scas
and
xchg
sar
fdiv
das
lods
rcr
test
or
call
sub
cli
js
out
fwait
push
inc
xor
sbb
and
adc
pop
adc
mov
adc
jp
das
push
(bad)
jno
scas
test
add
(bad)
ja
inc
mov
or
stos
retf
add
out
jo
stc
push
sahf
pop
lods
retf
or
dec
add
addr16
out
stc
lahf
loope
out
in
das
enter
push
test
scas
sbb
nop
adc
mov
fcom
jmp
push
push
(bad)
pop
inc
iret
(bad)
sub
cdq
jg
int
mov
std
test
and
adc
sbb
add
ins
adc
popf
outs
popf
jbe
rcr
pop
ins
and
rcr
mov
popf
test
movs
fst
dec
loope
pop
add
aam
in
cmp
mul
daa
dec
and
movs
cdq
or
jnp
je
les
cmp
mov
sub
adc
ds
out
push
inc
cmp
movs
imul
or
pop
aad
push
mov
mov
push
sbb
mov
push
inc
imul
test
jo
mov
and
out
jp
sbb
out
mov
inc
fwait
shl
inc
pop
adc
data16
rol
in
add
popf
mov
inc
sbb
icebp
xchg
mov
loope
in
jl
and
adc
loop
fimul
cmp
lock
inc
sbb
mov
cld
pop
add
mov
adc
movs
sub
jno
sbb
inc
out
mov
push
push
jg
jg
mov
cmc
int3
xor
cmp
out
enter
push
mov
pop
sbb
ins
dec
lock
cmp
mov
push
and
add
mov
xor
aaa
icebp
in
or
push
cmp
in
pop
stc
dec
fs
push
xor
xchg
stos
or
sub
test
retf
jge
xor
sub
pop
sbb
sbb
pop
test
pop
add
cmp
daa
movs
push
mov
gs
cld
or
xchg
jno
adc
xor
cmps
retf
sbb
inc
cld
mov
fwait
or
mov
push
jnp
jge
mov
adc
scas
pop
aad
mov
loopne
mov
pop
loope
or
arpl
test
cmc
or
sbb
int3
call
popf
std
add
cmc
dec
ins
xchg
stos
jnp
hlt
loope
mov
les
inc
rol
push
push
mov
dec
scas
inc
push
lods
fimul
stc
in
pop
adc
xor
sub
add
je
imul
mov
das
inc
jge
and
aam
cmp
adc
outs
int
dec
cmps
jp
sar
fisub
test
mov
rol
sub
retf
cmc
data16
add
add
xchg
push
mov
in
mov
scas
test
sbb
xchg
dec
(bad)
shl
test
idiv
test
int3
inc
lea
or
mov
fmulp
jbe
sub
cmp
fadd
pusha
movs
std
xchg
add
aad
sbb
sub
addr16
popa
aad
arpl
push
mov
adc
inc
mov
(bad)
in
cmc
addr16
call
mul
xchg
xlat
test
mov
sbb
ret
jne
scas
icebp
bound
sub
loopne
hlt
and
pop
aad
cs
fwait
paddusb
loope
int
ror
mov
inc
pop
adc
cmp
add
or
fist
call
cld
add
shl
dec
movs
out
sbb
xchg
mov
stos
test
cdq
adc
and
inc
xor
in
loope
or
add
cmp
rcr
jae
inc
jge
jne
cmp
jbe
cdq
xor
xor
and
jo
outs
movs
sbb
or
push
xchg
inc
call
je
movs
(bad)
pop
push
push
cmp
inc
sub
inc
imul
je
fnsave
stos
cld
fnstsw
loopne
lds
aad
call
xchg
push
movs
xchg
sti
push
pop
and
in
cmc
xor
xor
jp
xchg
lods
fs
pop
ins
and
xor
les
push
xchg
(bad)
mov
push
xchg
iret
call
lods
lods
hlt
mov
cmp
mov
mov
in
mov
shl
add
retf
aam
rcl
push
fild
cmp
shl
sbb
fisub
sub
sbb
cmps
dec
adc
pop
cld
je
fs
adc
hlt
ins
int
loopne
(bad)
in
cmps
in
xchg
stc
dec
cmp
ror
in
je
push
nop
push
sub
movs
icebp
popf
jnp
mov
or
xchg
(bad)
les
fisttp
out
(bad)
sub
fsub
and
pop
retf
and
arpl
lods
aam
dec
outs
xor
loop
inc
rol
ins
fs
add
push
inc
gs
add
pop
cwde
xchg
cmps
retf
or
xor
fild
popa
adc
call
pcmpeqw
retf
(bad)
push
dec
in
jle
les
adc
stos
xchg
sbb
inc
cmp
mov
out
(bad)
aam
dec
add
jmp
dec
sub
xor
stos
enter
xlat
gs
pop
out
hlt
fucom
cli
mov
cmp
jl
aad
dec
(bad)
je
aad
neg
das
xchg
mov
pop
(bad)
aam
and
cmp
int
inc
rol
dec
mov
xchg
gs
jns
ins
mov
push
sub
cld
pop
add
add
xor
jne
test
cmc
fst
shl
add
lock
stos
stc
inc
shl
mov
hlt
(bad)
lea
fs
lds
pop
je
adc
imul
test
mov
xor
cmc
and
xor
enter
xor
push
push
popa
cmps
mov
sub
pop
lods
adc
lock
aam
dec
mov
sub
add
mov
outs
rcl
ds
movs
das
test
test
cmp
add
aaa
cmc
call
lods
xchg
adc
pop
test
scas
jno
and
iret
dec
out
sub
das
dec
lahf
pop
and
(bad)
inc
xchg
push
aam
daa
aam
dec
fdiv
sbb
aad
out
adc
and
nop
sub
stos
or
pop
cdq
in
dec
retf
ins
jmp
lahf
mov
cs
out
in
push
and
jne
out
xchg
push
leave
int3
jne
and
pop
retf
repnz
cmp
in
and
je
cdq
push
nop
inc
daa
jne
pop
mov
sbb
int3
jne
or
aam
les
mov
dec
sbb
fst
pop
mov
bswap
imul
pop
pop
fs
movs
push
xor
iret
add
xchg
push
test
mov
les
mov
xor
movs
aad
fs
movs
inc
(bad)
xlat
inc
gs
dec
(bad)
hlt
xchg
jns
mov
cwde
cmp
rcr
jge
pop
mov
cmps
jns
xchg
sbb
jne
jmp
leave
shl
dec
adc
mov
test
je
nop
in
push
and
stc
cmp
inc
cdq
outs
xor
sub
sub
movs
aad
fs
enter
gs
cmp
enter
in
retf
ins
jmp
pop
xchg
lds
je
or
lods
pop
sub
dec
retf
pop
jge
pop
retf
or
mov
cmp
(bad)
push
out
pop
xor
outs
gs
out
mov
mov
jnp
mov
gs
pushf
pop
enter
or
ja
cli
fcom
sbb
add
cdq
aad
pop
int3
dec
add
fcomip
test
aam
das
and
cmp
mov
scas
movs
aad
sti
lds
jp
mov
aad
clc
int3
pusha
imul
test
ja
in
cdq
cwde
cmp
shl
lahf
mov
call
test
int
mov
pop
push
sar
fld
test
or
or
jns
add
jne
or
out
push
cdq
lods
cmp
cdq
aad
call
stos
or
call
jg
inc
into
add
pmaddwd
(bad)
xor
fild
out
push
mov
xchg
inc
mov
adc
leave
popf
or
mov
pushf
cmp
int
or
iret
add
fldln2
jnp
xor
lods
cmp
pop
ins
sti
lds
test
push
and
idiv
sub
xor
in
mov
cmp
in
inc
loopne
cwde
dec
sub
mov
(bad)
stos
imul
imul
pop
mov
jg
outs
mov
mov
popf
pop
fwait
popa
loopne
or
stc
cmp
or
xchg
jnp
mov
or
(bad)
retf
adc
ins
lods
jl
or
fwait
adc
mov
or
sbb
push
cdq
pop
mov
xor
lds
out
imul
loop
add
xchg
sbb
push
fistp
(bad)
cwde
dec
sub
cmp
xlat
out
sub
mov
pop
and
mov
cwde
les
retf
mov
cmp
mov
inc
ins
mov
cmp
or
fmul
and
pop
jmp
mov
xlat
fisttp
sub
out
dec
fwait
push
mov
popa
daa
stc
inc
test
xor
sbb
fs
test
js
mov
xor
call
push
pop
inc
(bad)
mov
sbb
xchg
cld
cmp
or
push
mov
push
jp
xlat
lods
cwde
cmp
adc
sahf
retf
cmps
jmp
jmp
inc
pop
and
fwait
pusha
stos
sbb
mov
mov
fldenv
lahf
mov
cs
out
in
sub
das
and
or
dec
push
mov
dec
call
mov
mov
enter
stc
or
add
mov
gs
lds
mov
aam
sub
xchg
jnp
dec
retf
sub
xchg
mov
adc
or
test
pushf
in
jnp
(bad)
fldenv
test
xlat
lds
add
adc
inc
jp
test
enter
fisttp
test
push
cmp
jns
pushf
cmp
pop
mov
xchg
or
mov
les
sbb
xchg
aam
push
adc
pop
fwait
jne
inc
and
shl
dec
sbb
nop
dec
in
js
inc
cdq
aad
sub
fs
add
pop
xor
test
jns
(bad)
sbb
add
xor
dec
je
mov
aaa
loopne
add
jns
and
pop
push
inc
pop
enter
mov
mov
repnz
stos
aam
sbb
adc
fisttp
cmp
dec
sbb
fst
jmp
out
pop
add
adc
mov
mov
nop
fwait
pop
sbb
inc
daa
dec
std
jmp
inc
hlt
js
add
das
mov
(bad)
je
nop
fwait
and
jne
cmp
out
pop
dec
in
xor
loopne
push
inc
and
xchg
test
(bad)
stos
dec
sbb
dec
adc
and
and
popf
add
pop
and
cmp
add
sbb
and
or
pop
cmc
fstp
or
aam
add
movs
aad
into
in
jns
inc
fcomip
test
dec
out
mov
or
movs
in
dec
fld
cmp
fs
xchg
push
sub
adc
or
mov
cmp
xor
scas
movs
adc
mov
and
ja
pop
aad
fadd
int3
push
cmp
jmp
enter
sub
test
push
aad
and
cdq
cwde
les
or
pusha
out
aad
jp
xlat
mov
pop
imul
dec
cdq
call
add
push
mov
inc
xor
leave
add
imul
loope
jmp
adc
mov
test
mov
in
retf
sub
fisttp
sub
push
xlat
mov
lods
sbb
or
sub
xchg
loopne
fild
push
sub
out
xchg
es
sbb
or
pop
pop
mov
aam
loope
clc
js
cmp
aad
enter
call
jnp
mov
jmp
xchg
push
dec
pop
je
lea
lods
mov
enter
out
retf
add
mov
xchg
aam
pop
scas
clc
sub
fst
int3
inc
(bad)
mov
xor
add
push
in
(bad)
int
clc
fdivr
xchg
or
dec
sbb
jnp
cmp
cli
(bad)
fldcw
lahf
fimul
xchg
xchg
or
cmp
mov
mov
pop
dec
in
mov
xchg
sbb
inc
daa
jne
add
jg
in
mov
mov
mov
sub
pop
popf
cld
call
cmp
jbe
mov
jns
and
jl
inc
call
pcmpeqw
push
pop
inc
(bad)
xchg
in
or
dec
in
xor
lds
or
push
push
inc
sub
xor
lods
lea
in
cdq
cwde
(bad)
ror
imul
and
sub
int3
pusha
imul
pushf
adc
mov
xor
ins
or
test
imul
les
pop
dec
in
jbe
lods
push
cwde
(bad)
std
and
movs
icebp
sbb
test
mov
push
ins
icebp
jmp
jl
dec
sbb
in
push
gs
int
sub
hlt
ja
ins
icebp
jmp
or
add
sbb
pop
(bad)
fldln2
jnp
pushf
movs
sbb
xor
fcmovnb
xor
pushf
int
je
test
cs
pusha
jge
adc
or
jo
push
mov
xor
ins
or
out
sub
int3
inc
fldln2
jnp
hlt
js
cli
mov
sbb
or
(bad)
shl
push
int3
inc
fldln2
jnp
hlt
js
inc
cdq
pop
cmp
pop
ins
sti
int
clc
fdivr
xchg
or
imul
push
xchg
pop
dec
xchg
pop
rcr
gs
sub
jp
fdivr
call
mov
and
sar
sbb
jge
mov
or
and
or
cld
push
leave
pusha
jo
int3
leave
mov
popf
and
lods
sub
dec
scas
enter
gs
int
sub
pushf
adc
rcr
mov
int
clc
and
mov
jne
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
rol
ret
and
add
inc
test
cmps
jbe
xchg
jbe
data16
lds
test
sub
cmp
push
fisttp
add
ins
ret
or
cmp
jg
outs
mov
dec
jmp
sbb
or
stc
cmp
or
sbb
sbb
loop
repnz
rcl
and
xor
pusha
mov
xchg
jne
push
test
aam
(bad)
in
cmc
and
adc
add
es
jp
std
sub
inc
and
xor
xchg
(bad)
ins
cmp
jo
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
inc
mov
test
push
test
hlt
xor
shl
icebp
and
adc
add
push
pop
jbe
xchg
mov
clc
fdivr
out
lea
jnp
pop
xchg
inc
sbb
out
or
retf
fdiv
inc
xchg
push
test
aam
les
sub
je
lods
test
xchg
inc
call
test
hlt
imul
in
cmc
jnp
adc
add
je
scas
test
pop
inc
gs
clc
inc
xchg
stos
test
aam
cmp
(bad)
cmc
and
adc
add
mov
inc
xor
test
hlt
push
in
sub
and
adc
sti
movs
mov
int3
inc
gs
jne
mov
cmp
or
mov
sbb
push
push
test
sbb
(bad)
stc
in
sbb
and
adc
retf
mov
jp
xchg
inc
stos
mov
movs
inc
xchg
push
test
xor
test
pop
cmc
and
adc
push
jmp
mov
leave
sub
mov
js
mov
dec
test
mov
test
xchg
inc
gs
retf
cmp
dec
call
in
cmc
and
jp
push
sbb
or
push
xchg
inc
(bad)
inc
xchg
and
mov
jp
mov
dec
stos
jnp
imul
lds
xchg
xor
les
hlt
push
test
jne
adc
push
mov
movs
jne
add
in
adc
jne
inc
in
test
aam
mov
inc
cmc
push
lds
jbe
push
mov
test
mov
gs
(bad)
aaa
out
not
inc
xchg
ja
adc
push
mov
cmps
ja
pop
(bad)
test
push
(bad)
jne
inc
xchg
not
xor
mov
xor
and
cmps
ja
add
xor
rol
inc
xchg
push
lock
aam
(bad)
in
adc
add
test
adc
test
aam
mov
inc
adc
mov
test
loopne
adc
icebp
push
hlt
xor
mov
xor
push
mov
mov
shl
gs
shl
xchg
push
test
mov
cmc
and
adc
jae
je
adc
and
xor
ret
add
xor
and
push
add
mov
adc
lods
jl
or
test
gs
movs
cmp
mov
jge
adc
pop
mov
or
xchg
inc
gs
movs
inc
xchg
sub
and
lods
ins
mov
mov
je
fs
push
in
inc
pop
into
or
inc
xchg
or
and
scas
adc
pop
lds
jmp
out
inc
gs
jecxz
fcom
and
scas
outs
(bad)
in
lods
outs
pushf
pop
aad
movs
je
push
call
gs
std
or
sbb
scas
adc
and
pop
mov
je
test
out
inc
push
iret
jne
inc
int
(bad)
retf
sub
in
cmc
jbe
adc
add
bswap
pop
test
push
iret
push
movs
inc
xchg
add
and
aam
(bad)
in
cmc
and
adc
add
je
sbb
sub
cmp
enter
xchg
push
clc
pop
mov
jns
imul
lds
test
xchg
inc
gs
movs
inc
xchg
push
stc
and
aam
(bad)
in
cmc
and
adc
add
je
sbb
leave
or
inc
xchg
push
test
xor
mov
mov
je
sbb
sub
inc
gs
fiadd
push
test
dec
call
cmc
and
push
jp
je
fs
push
xchg
inc
gs
or
inc
xchg
push
test
xor
(bad)
in
mov
imul
cli
sub
fild
push
test
xor
mov
lds
fs
xor
and
adc
test
aam
les
movs
inc
xchg
push
test
aad
(bad)
hlt
and
movs
jne
test
inc
fs
movs
inc
xchg
push
add
je
out
(bad)
pop
(bad)
out
mul
(bad)
push
xlat
test
push
xchg
inc
addr16
cmps
inc
xchg
push
xchg
div
out
push
xchg
inc
out
mul
(bad)
pop
(bad)
pop
cmps
ja
in
aam
inc
data16
cmps
inc
xchg
aad
movs
je
loopne
rcl
shl
icebp
and
adc
and
aam
(bad)
in
jno
inc
nop
push
and
xor
add
adc
loopne
lock
adc
add
push
nop
inc
pusha
mov
mov
and
xor
add
adc
jecxz
repz
xchg
push
test
aam
(bad)
in
jae
inc
xchg
push
and
xor
add
adc
loop
repnz
adc
add
push
xchg
inc
bound
pop
mov
fcomp
sub
sbb
or
jl
ins
mov
dec
ins
mov
pop
lea
sbb
in
mov
movs
inc
sbb
xor
dec
outs
mov
aad
movs
je
pmaxub
inc
gs
cs
push
fisttp
scas
jle
outs
add
mov
pop
(bad)
cs
fs
push
iret
out
aas
(bad)
das
into
pop
push
test
pop
sahf
dec
outs
mov
pop
mov
clc
mov
test
jmp
sbb
or
pop
cdq
dec
imul
cmp
or
sbb
call
sbb
or
pop
cwde
dec
push
adc
mov
fstp
inc
gs
sub
push
test
aam
les
cmc
and
adc
mov
cli
cmp
xchg
retf
jne
inc
sbb
or
aam
dec
imul
mov
je
fs
sbb
gs
movs
retf
test
aam
les
cmc
and
adc
add
je
hlt
or
sbb
jmp
test
aam
(bad)
in
cmc
and
adc
add
je
hlt
test
cmc
mov
movs
inc
add
test
aam
les
fs
test
je
fs
add
gs
xor
and
aam
push
je
addr16
adc
add
je
fs
xchg
inc
gs
xlat
push
mov
cmps
addr16
adc
xchg
movs
je
fs
push
xchg
inc
gs
inc
xchg
push
pop
mov
cmps
ja
aam
(bad)
in
cmc
and
adc
xchg
ss
not
push
xchg
inc
gs
out
inc
xchg
push
pop
mov
retf
sub
and
add
je
test
mov
gs
xor
push
test
inc
adc
mov
add
je
lock
xchg
inc
gs
xor
push
test
aam
les
adc
xchg
xor
and
adc
add
lock
xor
add
adc
inc
adc
cmc
and
add
je
test
mov
xor
add
adc
inc
adc
arpl
loop
repz
add
gs
movs
rol
push
test
aam
(bad)
in
bound
cmp
int3
or
cmp
xchg
push
test
aam
les
ins
mov
cmp
push
xchg
(bad)
sub
push
test
adc
and
adc
add
je
std
test
cld
mov
movs
inc
or
scas
in
aam
pop
jg
lods
fcmovnb
adc
add
jae
test
jmp
out
fisttp
iret
push
mov
dec
adc
and
adc
lahf
ds
fs
int3
mov
sbb
jg
dec
mov
scas
outs
mov
ds
call
enter
mov
movs
fst
js
dec
mov
test
and
adc
cwde
movs
je
fs
or
clc
sub
cmp
or
sbb
dec
mov
test
dec
cdq
cmp
test
or
sti
sub
cmp
or
sbb
dec
mov
stos
imul
jmp
test
cli
sub
cmp
or
sbb
dec
mov
xchg
push
test
aad
movs
je
test
lds
and
push
xchg
inc
movs
je
gs
xchg
push
test
add
je
lds
adc
push
test
aam
(bad)
in
push
test
adc
cmps
pop
(bad)
pop
(bad)
daa
div
inc
gs
aad
xchg
push
test
jbe
inc
xchg
push
xchg
aad
movs
je
(bad)
div
out
pop
(bad)
pop
out
push
test
aam
les
cmc
and
adc
cmps
movs
je
fs
xchg
inc
gs
add
xor
test
aam
les
cmc
and
adc
mov
test
xor
jne
inc
xchg
push
test
jno
(bad)
in
push
and
adc
mov
and
gs
add
push
test
aam
(bad)
in
push
and
adc
mov
test
xor
jne
jecxz
repz
aam
bound
cmc
and
mov
mov
and
xor
jne
loop
repnz
aam
les
cmc
and
adc
add
je
int3
sub
sbb
movs
inc
xchg
push
sub
hlt
xor
(bad)
in
cmc
mov
aad
movs
fcomp
in
gs
movs
in
cmp
test
aam
les
and
adc
lods
movs
je
fs
cmp
int3
sbb
cld
sub
add
sahf
cmc
and
adc
scas
movs
je
fs
(bad)
xchg
inc
gs
push
out
xchg
push
test
aam
outs
dec
sahf
pop
mov
jle
push
je
fs
ds
gs
movs
out
xchg
push
test
aam
outs
dec
lahf
pop
(bad)
outs
mov
sbb
sub
cmp
leave
sbb
or
cmp
sub
js
(bad)
in
pop
and
adc
test
sub
cmp
gs
movs
call
pop
xor
imul
aad
or
sbb
sub
cmp
retf
mov
movs
inc
cmp
and
aam
push
xor
and
adc
add
fidiv
jmp
sti
sub
jp
imul
cmc
and
adc
add
(bad)
jmp
mov
movs
jmp
in
aam
imul
cmc
and
mov
sbb
sub
cmp
aad
lds
hlt
xor
je
test
lds
fs
add
in
xchg
inc
test
aam
(bad)
in
cmc
and
adc
add
je
aad
push
xchg
inc
aam
jne
inc
and
test
add
xor
and
cmps
addr16
mov
test
gs
movs
not
in
aam
(bad)
in
cmc
xchg
lds
fs
xchg
inc
gs
pop
inc
xchg
push
test
addr16
and
adc
mov
je
fs
xchg
inc
gs
(bad)
movs
inc
xchg
push
aaa
xchg
inc
xor
(bad)
in
cmc
xchg
jbe
popa
mov
je
fs
xchg
inc
gs
movs
inc
xchg
push
xor
aam
les
inc
nop
jno
popa
add
je
shl
loopne
lock
movs
lock
push
test
aam
(bad)
in
cmc
xchg
lds
fs
xchg
inc
gs
adc
xchg
push
test
aam
jno
xor
and
adc
add
shl
gs
adc
push
test
aam
(bad)
in
cmc
xchg
lds
fs
xchg
inc
gs
movs
inc
xchg
push
xor
bound
and
mov
add
test
rol
jne
imul
les
xlat
aad
mov
test
jae
add
movs
fs
lds
aad
out
not
pop
(bad)
pop
mul
in
xchg
cmp
es
adc
dec
call
or
dec
popf
pop
and
popf
inc
loop
mov
retf
pop
fimul
cs
cmp
or
sbb
imul
mov
add
inc
adc
mov
xchg
jo
popa
mov
rol
xor
es
add
adc
sub
jbe
sbb
fs
push
sti
adc
fidiv
and
and
dec
xchg
inc
lea
jnp
test
jno
jo
je
fs
xchg
and
int
lock
inc
cwde
xor
xchg
in
cmps
and
jo
imul
xchg
add
shl
and
add
push
xchg
inc
mov
cmps
jl
xchg
addr16
addr16
mov
fs
(bad)
or
hlt
adc
push
loope
xchg
aaa
mov
add
pop
ficom
test
cld
and
sbb
inc
cli
push
in
and
xor
xchg
mov
dec
mov
adc
cld
inc
pop
fild
rol
loopne
cmps
inc
mov
adc
dec
lods
inc
aad
movs
adc
ss
inc
out
test
js
jge
adc
and
out
mov
call
ficomp
movs
and
mov
jns
sbb
stos
inc
out
shl
in
imul
je
cmp
dec
pushf
inc
movs
push
push
sahf
xchg
jne
fs
and
mov
in
xor
aaa
and
xchg
sub
xchg
fs
push
les
js
pusha
dec
xor
adc
sub
hlt
adc
xor
inc
movs
xor
push
fwait
mov
push
xchg
cmp
and
and
cmp
add
hlt
sbb
aaa
mov
lock
mov
mov
mov
push
xchg
pop
retf
add
push
mov
aaa
mov
lock
mov
out
mov
loopne
inc
cdq
test
inc
(bad)
xor
and
xor
push
xlat
sub
and
dec
mov
movs
cmp
xchg
test
add
ss
and
adc
and
sub
cmp
dec
mov
aad
aad
sti
xchg
popa
and
loopne
lds
aaa
xor
mov
lock
mov
mov
lods
imul
shr
and
xor
xor
test
inc
mov
push
movs
rol
mov
cmps
jo
inc
mov
mov
nop
sbb
xchg
fs
push
(bad)
in
stos
pusha
call
adc
cmp
xor
je
es
xchg
pop
sub
cmc
mov
jge
push
repnz
aad
and
into
es
xchg
pop
sub
sahf
xchg
push
xchg
lds
inc
movs
sbb
and
daa
shl
nop
sbb
jp
jne
jno
pop
movs
xchg
push
popf
push
test
inc
movs
dec
ficom
mov
shl
out
rol
xchg
pusha
mov
mov
nop
jge
ja
pop
fadd
pop
rcl
sub
cmp
gs
push
test
mov
lds
cli
xor
and
add
repz
mov
and
jge
gs
xor
push
aam
xchg
sub
adc
add
hlt
inc
mov
push
stos
movs
je
push
test
ins
(bad)
sbb
movs
jbe
mov
icebp
xor
jno
push
movs
outs
xchg
cmps
xor
lahf
pusha
mov
in
sti
inc
icebp
imul
add
xor
les
jne
push
mov
sti
movs
push
xchg
movs
pusha
mov
or
xor
fwait
or
push
xchg
xchg
push
mov
jp
ficomp
sbb
aam
test
add
les
cmps
inc
xchg
push
test
inc
out
mov
fwait
inc
popf
jno
imul
and
retf
sbb
push
fist
mov
dec
test
push
lods
dec
lds
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
cmc
and
pop
mov
and
ss
lds
dec
call
cmps
adc
add
and
xor
add
adc
loope
icebp
adc
add
jo
arpl
mov
mov
push
lock
aaa
rol
ret
adc
out
not
ret
jae
data16
xchg
mov
cmc
inc
mov
cdq
popa
les
mov
loopne
lock
add
sbb
and
cmp
dec
xchg
addr16
test
push
lds
add
adc
sbb
xor
inc
pop
fist
enter
not
pop
xchg
jbe
je
in
cmc
dec
mov
aad
int3
add
fisub
hlt
adc
test
pop
and
lods
mov
and
js
imul
es
xor
mov
movs
inc
xchg
push
test
sbb
xor
and
adc
imul
mov
xchg
and
inc
xchg
push
test
aam
les
adc
add
je
test
xchg
inc
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
fs
in
add
int3
push
rol
push
test
aam
(bad)
in
mov
push
lock
xor
add
adc
loope
icebp
adc
add
jae
popa
mov
add
pusha
mov
push
icebp
and
aaa
rol
rcl
loop
not
mov
mov
addr16
in
cmc
and
adc
jbe
je
add
or
add
ja
xor
lods
addr16
inc
xchg
dec
test
sbb
pop
movs
cmp
sub
inc
cli
daa
movs
inc
fwait
pop
mov
pop
xchg
inc
mov
cmc
and
sbb
lock
aad
shl
xor
dec
xchg
mov
cmps
test
inc
mov
cmps
popa
int3
aaa
rol
test
adc
xor
jmp
hlt
push
mov
test
test
push
fiadd
jmp
test
daa
jmp
fwait
pop
and
stos
mov
inc
mov
adc
dec
inc
mov
movs
inc
xchg
push
lock
hlt
xor
lods
mov
inc
mov
cmc
gs
push
fwait
adc
and
and
inc
xchg
es
hlt
inc
test
mov
movs
xchg
inc
nop
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
les
xor
mov
loopne
aad
or
pop
movs
gs
xor
cmps
jo
in
cmc
and
adc
add
je
test
rcl
shl
push
test
aam
les
adc
push
repz
xor
add
adc
loope
icebp
adc
add
jo
pusha
mov
add
xchg
inc
adc
add
pop
ss
not
rol
jbe
data16
xchg
mov
mov
push
lock
xor
add
adc
loope
icebp
adc
add
jo
popa
mov
add
pusha
mov
push
mul
jecxz
(bad)
add
adc
out
not
mov
in
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
sub
add
push
jecxz
mov
dec
(bad)
dec
shl
xor
dec
hlt
inc
and
inc
mov
pop
rol
add
pop
sahf
inc
xchg
push
out
inc
hlt
xor
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
lods
mov
lds
test
gs
loop
ret
push
lds
add
xor
inc
mov
aad
movs
je
test
gs
movs
inc
xchg
push
test
xor
mov
xchg
inc
adc
loopne
rol
rcl
loope
icebp
adc
add
jno
popa
mov
add
pusha
mov
push
icebp
daa
out
rol
ret
adc
loopne
not
mov
xchg
ja
adc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
cmps
jp
test
and
adc
add
adc
add
rol
(bad)
and
and
mov
mov
les
adc
popa
movs
je
add
gs
movs
inc
clc
push
test
xor
mov
lds
add
pop
mov
test
xchg
inc
gs
movs
inc
std
push
test
aam
(bad)
in
cmc
and
jnp
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
icebp
xor
dec
hlt
xor
(bad)
in
lea
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
sti
cmp
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
add
push
xchg
inc
fadd
movs
aaa
loopne
mul
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
les
adc
add
icebp
mov
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
xor
and
adc
add
jo
pusha
mov
add
bound
push
icebp
and
xor
add
adc
loopne
repnz
add
jbe
data16
add
cmps
ja
inc
xchg
sbb
test
ret
loop
repnz
add
jo
pusha
mov
add
nop
inc
adc
add
adc
loope
lock
ret
jo
data16
xchg
mov
cmps
ja
inc
xchg
daa
mov
repnz
xchg
inc
gs
movs
inc
xchg
push
test
xor
(bad)
in
cmc
and
adc
add
je
adc
mov
movs
inc
xchg
push
test
aam
(bad)
in
cmc
pop
test
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
jne
test
fs
movs
inc
xchg
push
xchg
(bad)
scas
(bad)
out
mul
(bad)
push
(bad)
pop
cmps
ja
xchg
gs
jg
xchg
push
test
hlt
xor
(bad)
in
cmc
and
adc
add
push
cs
popa
pcmpeqw
and
push
icebp
inc
adc
add
scas
mov
test
gs
movs
inc
xchg
push
test
hlt
aaa
in
aam
(bad)
in
cmc
and
adc
add
je
xchg
addr16
movs
inc
xchg
push
test
hlt
ss
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
nop
fwait
sbb
xchg
adc
or
push
hlt
inc
dec
add
sbb
cmp
ret
es
pop
xchg
xchg
std
xor
dec
adc
jo
mov
mov
pop
clc
or
cmp
retf
add
pop
mov
int3
js
push
adc
sbb
adc
adc
cmc
dec
shr
gs
aam
mov
popa
movs
and
xor
lods
sub
fdivp
sbb
jnp
cmp
add
pop
mov
mov
test
mov
test
inc
and
or
mov
lods
int
popa
imul
xchg
into
mov
cld
sub
in
xor
or
jecxz
cmp
add
mov
movs
inc
jmp
sti
xchg
inc
xchg
ins
cmps
ja
xchg
test
mov
(bad)
and
ss
aad
pop
(bad)
pop
aam
out
xchg
dec
ss
mov
cmps
ja
xchg
jbe
push
test
hlt
retf
sub
cmp
retf
adc
cmp
sub
sub
sub
fisub
mov
cmc
mov
add
retf
cmc
cmps
cmp
psubq
stos
xchg
repz
lods
test
mov
cli
jmp
adc
repz
das
outs
fwait
ret
jecxz
adc
pop
mov
or
sbb
xor
cmp
xor
and
adc
add
je
xchg
gs
movs
inc
xchg
push
test
aam
les
xor
and
jmp
add
je
test
mov
hlt
xor
shl
cmc
fcmovnb
adc
add
je
fs
xchg
inc
popa
mov
movs
inc
xchg
push
test
aam
rcr
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
sub
and
adc
add
je
fwait
test
data16
movs
inc
xchg
push
test
hlt
xor
les
xor
and
adc
add
je
test
gs
movs
inc
xchg
push
test
hlt
xor
(bad)
in
cmc
and
adc
add
je
test
gs
movs
mov
hlt
xor
(bad)
in
or
mov
inc
gs
movs
inc
xchg
push
test
rcl
and
jmp
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
stos
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
ret
push
xchg
xor
pop
cmps
sub
xchg
dec
xchg
jne
adc
je
pop
jmp
fnstenv
rcl
push
in
xor
aam
mov
lds
retfw
or
shl
test
in
mov
je
mov
inc
lods
imul
hlt
xor
sar
dec
std
push
call
push
jno
sbb
stos
jno
popa
shl
fisttp
loopne
loope
or
imul
add
ins
pushf
sbb
mov
addr16
cmc
jo
add
and
cmp
sub
cmc
sbb
push
pushf
push
nop
inc
fdiv
and
cmps
push
mov
mov
es
and
push
out
cmp
push
cmp
mov
fwait
das
lds
jo
sbb
popa
add
or
add
fld
cwde
pop
nop
pop
call
mov
sahf
push
leave
sbb
sub
ss
adc
(bad)
sbb
inc
xchg
pop
std
dec
test
mov
lods
mov
xor
adc
xor
cmp
test
cmc
xor
ins
mov
test
ror
retf
adc
adc
push
nop
inc
jo
add
and
cmp
inc
xchg
xor
ins
xchg
pusha
inc
loopne
test
push
(bad)
je
jge
jb
shl
jmp
shl
inc
mov
jns
mov
dec
pop
adc
sbb
rcl
xor
les
add
out
push
mov
inc
xchg
addr16
mov
xor
add
xor
int3
pop
rol
daa
lock
inc
stos
nop
inc
fwait
dec
mov
rcl
je
xor
xlat
sbb
es
and
push
mov
pusha
mov
pusha
fwait
imul
and
ss
cmc
jae
and
mov
mov
add
add
cmp
dec
or
pop
hlt
and
neg
(bad)
pusha
movs
out
mov
test
inc
(bad)
jmpw
push
ins
mov
je
cmp
and
inc
stos
add
or
adc
sub
adc
push
xchg
push
loope
mov
(bad)
xchg
inc
nop
and
jno
popa
shl
ins
loop
lock
rcl
sub
push
loope
xchg
aas
or
int3
inc
inc
pushf
dec
cmps
jge
or
pop
mov
in
push
nop
inc
shl
cmps
xor
xor
or
inc
mov
sub
and
inc
ins
(bad)
sbb
inc
push
push
test
cmp
inc
stos
pusha
(bad)
add
push
cld
sub
and
and
es
sbb
test
std
push
mov
mov
mov
and
dec
add
es
sar
jbe
inc
mov
mov
cwde
push
mov
mov
pavgb
push
mov
jne
push
push
mov
jl
adc
jmp
mov
ret
sbb
xor
push
shr
add
hlt
and
cli
jbe
mov
dec
ret
push
out
cld
aaa
xlat
add
mov
sbb
movs
pusha
mov
sub
cmp
rdmsr
cld
jb
and
and
dec
mov
popa
(bad)
out
nop
dec
cmps
js
popa
test
loope
add
jae
sub
mov
jp
mov
push
lods
fsubr
je
adc
xor
ss
shl
enter
lea
push
jecxz
mov
lods
mov
xchg
adc
outs
icebp
cmp
shl
out
lock
xchg
push
nop
or
lock
iret
pusha
mov
add
or
push
aam
sti
ss
mov
pop
(bad)
mov
push
xchg
sbb
imul
mov
int
div
adc
pop
retf
push
aam
mov
je
mov
push
mov
mov
push
repz
sub
fdivr
jmp
imul
push
retf
adc
sub
xor
fnsave
xor
jne
inc
xchg
jno
jb
cmps
pop
add
jne
add
cmp
add
xchg
push
ret
jbe
mov
push
lods
jns
popa
test
rcl
and
sub
xor
aam
xchg
adc
mov
push
lds
jle
push
out
jmp
loop
inc
(bad)
jecxz
add
xchg
jns
retf
rcl
adc
add
cmp
dec
icebp
pmulhw
xor
mov
repnz
lds
ja
add
or
jp
js
fcomp
shl
mov
lock
fld
xor
pusha
rcl
jno
dec
fwait
adc
add
sbb
sbb
jns
xor
pop
mov
sub
sti
jge
cmp
sbb
pop
jmp
fbstp
js
sbb
ja
sbb
push
xchg
jne
xor
cmc
je
je
rol
or
sbb
inc
xchg
push
test
jl
mov
cdq
dec
lods
les
push
add
inc
xor
cmp
push
pop
leave
pop
(bad)
aad
pop
stc
pusha
mov
add
mov
mov
aam
pop
psubd
pop
jmp
lds
xor
ja
movs
gs
in
xchg
inc
cmp
adc
mov
cmps
push
aam
xor
retf
in
hlt
adc
dec
fs
add
call
jne
cmc
inc
fs
mov
pop
call
push
xor
or
out
push
adc
push
lods
jl
pop
fld
stos
popa
and
shl
test
je
inc
xor
hlt
lds
ds
jge
add
pop
cmp
fs
(bad)
xchg
inc
jne
cmc
(bad)
pop
int
fs
push
lods
ss
aad
movs
or
push
jecxz
xchg
push
inc
test
pop
and
ins
cdq
jo
push
call
fiadd
jmp
xchg
inc
push
sub
aas
(bad)
daa
add
cmps
in
mov
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
in
cmc
and
adc
add
je
test
gs
movs
inc
xchg
push
test
aam
(bad)
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
test
je
mov
xor
mov
test
je
mov
inc
xor
je
dec
je
test
jne
sub
jb
push
mov
shl
add
mov
shl
add
jmp
pop
add
je
mov
inc
xor
je
dec
jne
pop
ret
sub
jb
mov
xor
mov
add
xor
xor
add
and
je
mov
xor
je
xor
je
shr
xor
je
xor
je
jmp
pop
lea
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
push
call
add
test
jge
or
jmp
mov
test
je
push
call
and
pop
mov
and
pop
pop
ret
call
test
jne
ret
push
push
push
push
call
add
ret
push
push
push
call
add
ret
call
call
mov
call
fnclex
ret
ret
mov
mov
mov
mov
mov
mov
mov
ret
push
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
push
call
pop
push
call
ret
push
mov
push
push
mov
test
je
mov
cmp
jne
push
call
pop
test
push
je
push
call
pop
pop
jmp
cmp
jne
lea
push
lea
push
push
call
add
test
je
push
push
push
call
add
jmp
push
push
push
call
pop
leave
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
and
test
je
push
call
pop
jmp
xor
jmp
and
mov
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
test
je
push
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
push
call
add
cmp
jne
mov
test
je
and
mov
jmp
or
or
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmp
jne
push
call
cmp
pop
je
inc
jmp
cmp
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmp
mov
je
mov
pop
pop
pop
ret
push
mov
push
push
push
push
mov
push
mov
xor
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
push
pop
mov
inc
cmp
je
cmp
je
movsx
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
mov
or
jmp
cmp
jne
mov
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
mov
and
jmp
cmp
jne
mov
or
jmp
test
je
xor
jmp
or
jmp
push
push
push
push
call
mov
add
cmp
jge
xor
jmp
mov
inc
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
push
push
xor
xor
xor
cmp
push
jle
mov
mov
mov
cmp
je
test
je
inc
add
cmp
jl
jmp
mov
jmp
mov
push
shl
call
pop
mov
mov
mov
mov
cmp
je
mov
cmp
je
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
push
push
call
pop
pop
ret
push
mov
sub
fld
fstp
fld
fstp
fld
fdiv
fmul
fsubr
fstp
fld
fcomp
fnstsw
sahf
jbe
push
pop
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
mov
movsx
push
call
cmp
pop
je
inc
cmp
jle
movsx
push
push
call
pop
pop
jmp
movsx
mov
mov
and
test
jne
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
pop
ret
mov
mov
mov
test
je
cmp
je
mov
inc
test
jne
mov
inc
test
je
mov
test
je
cmp
je
cmp
je
inc
jmp
mov
dec
cmp
je
cmp
jne
dec
mov
inc
inc
test
mov
jne
ret
mov
fld
fcomp
fnstsw
sahf
jb
push
pop
ret
xor
ret
push
mov
push
push
cmp
push
je
lea
push
call
mov
pop
pop
mov
mov
mov
mov
leave
ret
lea
push
call
mov
pop
pop
mov
mov
leave
ret
push
mov
cmp
push
push
je
mov
mov
xor
mov
test
setg
push
xor
cmp
sete
add
push
call
pop
pop
jmp
mov
push
push
fld
fstp
call
mov
mov
push
mov
lea
push
xor
cmp
sete
xor
test
setg
add
add
push
call
add
cmp
mov
jne
mov
inc
test
jle
mov
push
lea
mov
mov
mov
pop
mov
xor
push
cmp
sete
add
add
push
call
cmp
pop
pop
mov
je
mov
mov
inc
cmp
je
mov
dec
jns
neg
mov
inc
cmp
jl
mov
push
cdq
pop
idiv
add
mov
cdq
idiv
mov
inc
cmp
jl
mov
push
cdq
pop
idiv
add
mov
cdq
idiv
mov
add
mov
pop
pop
pop
ret
cmp
push
push
mov
push
push
je
mov
mov
mov
cmp
jne
xor
cmp
sete
add
add
mov
mov
and
jmp
mov
push
push
fld
fstp
call
mov
mov
push
mov
add
push
xor
cmp
sete
add
push
call
add
cmp
mov
jne
mov
lea
mov
test
jg
push
push
call
pop
mov
pop
inc
jmp
add
test
jle
push
push
call
mov
pop
mov
mov
inc
pop
test
jge
cmp
je
neg
jmp
neg
cmp
jl
mov
push
push
call
push
push
push
call
add
pop
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
push
fld
fstp
call
mov
mov
dec
mov
mov
xor
cmp
push
push
sete
add
mov
push
call
mov
add
mov
dec
cmp
setl
mov
mov
dec
cmp
mov
jl
cmp
jge
test
je
mov
inc
test
jne
and
push
push
push
call
add
jmp
push
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
push
push
push
call
and
add
ret
push
mov
push
push
call
and
add
ret
push
mov
cmp
je
cmp
je
cmp
jne
push
push
push
call
add
pop
ret
push
push
push
push
call
jmp
push
push
push
push
call
add
pop
ret
push
mov
test
je
push
mov
push
call
inc
push
push
add
push
call
add
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
test
pop
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
push
mov
push
and
call
cmp
jne
mov
test
je
add
mov
mov
mov
mov
pop
ret
push
mov
mov
call
lea
push
push
mov
call
test
je
cmp
jne
cmp
jb
push
pop
jmp
lea
push
push
push
call
test
je
xor
lea
cmp
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
push
push
call
add
test
jne
lea
jmp
lea
push
push
push
call
cmp
lea
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
lea
push
call
pop
pop
cmp
je
push
push
call
pop
cmp
pop
je
inc
mov
cmp
je
cmp
jne
mov
jmp
inc
cmp
jne
push
push
push
call
add
cmp
je
cmp
je
cmp
je
lea
push
call
cmp
pop
sbb
add
pop
leave
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
cmp
mov
jne
push
call
pop
jmp
cmp
jne
call
test
jne
push
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jb
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
push
push
call
test
mov
jne
ret
mov
and
and
push
mov
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
push
push
mov
mov
push
mov
add
sub
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
mov
lea
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
mov
shr
lea
not
and
dec
jne
mov
and
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
jae
mov
mov
shr
not
and
dec
jne
mov
and
jmp
lea
mov
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
cmp
push
push
push
push
jne
mov
jmp
push
push
push
call
mov
test
je
mov
push
push
push
push
call
mov
test
je
push
mov
push
push
push
call
test
je
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
xor
mov
xor
cmp
setge
dec
and
dec
inc
mov
mov
add
cmp
jl
push
push
push
call
add
mov
add
cmp
jae
or
lea
mov
mov
add
jmp
mov
jmp
push
push
push
call
cmp
je
push
push
push
call
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
call
cmp
jne
mov
mov
cmp
je
mov
mov
push
push
mov
mov
mov
mov
push
call
pop
ret
or
pop
ret
push
mov
push
push
push
mov
push
cmp
je
and
lea
mov
cmp
jne
mov
push
add
push
push
call
test
je
or
dec
mov
test
je
cmp
jbe
mov
inc
dec
je
sub
sub
test
jge
cmp
mov
mov
je
cmp
jne
push
lea
pop
cmp
jne
inc
add
cmp
jl
cmp
jne
push
call
pop
cmp
je
cmp
jg
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
mov
and
cmp
jb
mov
mov
mov
mov
and
sub
mov
sub
pop
sar
lea
ret
xor
pop
ret
mov
mov
sub
sar
lea
mov
movzx
add
and
cmp
mov
jne
inc
cmp
jne
push
call
pop
ret
push
mov
push
push
push
push
mov
push
mov
cmp
je
mov
lea
mov
sub
sub
sar
shl
add
cmp
mov
jae
mov
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
lea
add
cmp
mov
jb
jmp
mov
mov
mov
lea
mov
cmp
mov
jae
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
add
add
cmp
jb
jmp
mov
mov
cmp
je
jmp
mov
sub
mov
jmp
mov
mov
cmp
je
cmp
jne
mov
cmp
je
jmp
mov
and
mov
mov
sub
sub
sar
shl
add
cmp
jne
cmp
jge
add
inc
cmp
je
mov
push
shl
push
push
push
mov
call
cmp
jne
push
push
push
call
mov
add
test
mov
jle
lea
mov
or
lea
mov
mov
mov
mov
mov
add
add
dec
jne
mov
lea
cmp
jae
cmp
je
add
jmp
cmp
sbb
and
mov
mov
mov
mov
sub
sub
lea
lea
mov
jmp
call
test
je
mov
mov
lea
mov
mov
mov
sub
mov
movzx
sub
lea
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
mov
push
push
mov
push
mov
lea
cmp
mov
mov
mov
jb
lea
mov
cmp
jae
add
sub
jmp
and
lea
mov
lea
jmp
add
cmp
je
mov
lea
cmp
jae
mov
test
jne
push
lea
pop
cmp
jne
inc
inc
jmp
cmp
jae
cmp
jne
mov
jmp
sub
cmp
jb
mov
mov
jmp
movzx
add
lea
cmp
jb
lea
cmp
jae
lea
cmp
jae
mov
test
jne
push
lea
pop
cmp
jne
inc
inc
jmp
lea
cmp
jae
sub
mov
mov
jmp
and
lea
mov
mov
add
jmp
cmp
jae
sub
cmp
jb
mov
jmp
movzx
add
jmp
lea
cmp
jae
sub
mov
mov
jmp
and
lea
mov
mov
lea
imul
shl
sub
jmp
xor
pop
pop
pop
leave
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jb
cmp
jb
cmp
ja
mov
ret
mov
mov
ret
cmp
jb
cmp
mov
jbe
mov
ret
push
push
push
or
xor
xor
mov
mov
test
je
lea
cmp
jae
test
je
add
jmp
or
sub
sar
add
mov
cmp
jne
add
inc
add
cmp
jl
jmp
mov
push
call
test
pop
je
add
lea
lea
mov
cmp
jae
and
or
mov
mov
add
add
jmp
shl
mov
pop
mov
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
cmp
jne
cmp
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
and
mov
or
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
and
mov
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
test
lea
je
mov
ret
and
mov
or
ret
mov
cmp
jae
mov
mov
sar
and
mov
test
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
mov
or
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
test
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
inc
mov
cmp
jne
inc
mov
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
mov
mov
jmp
call
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
je
mov
mov
jmp
sub
jmp
and
mov
or
pop
pop
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
or
add
inc
cmp
jl
pop
ret
call
cmp
je
jmp
ret
push
mov
sub
mov
push
xor
push
test
push
mov
mov
je
mov
mov
jmp
and
mov
mov
test
jne
test
jne
cmp
je
or
push
mov
pop
and
sub
je
dec
je
dec
je
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
and
mov
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
jmp
mov
jmp
mov
mov
mov
test
je
mov
not
and
test
jne
push
pop
test
je
or
or
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
and
mov
jmp
push
push
push
lea
push
push
push
push
call
mov
cmp
je
push
call
test
jne
push
call
call
push
call
pop
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
pop
mov
pop
mov
mov
or
sar
and
mov
lea
shl
mov
and
mov
jne
test
je
test
je
push
push
push
call
add
cmp
mov
jne
cmp
je
jmp
and
lea
push
push
push
call
add
test
jne
cmp
jne
push
push
call
pop
cmp
pop
je
push
push
push
call
add
cmp
jne
push
call
pop
or
jmp
cmp
jne
test
je
mov
or
lea
mov
pop
pop
pop
leave
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
mov
push
mov
cmp
jne
cmp
ja
push
call
test
pop
je
pop
ret
cmp
jne
mov
test
je
lea
and
jmp
push
pop
cmp
ja
mov
shr
push
call
test
pop
jne
jmp
test
jne
push
pop
add
and
push
push
push
call
pop
ret
push
mov
push
push
fstcw
push
call
mov
mov
not
and
mov
and
or
push
call
pop
mov
pop
fldcw
mov
pop
leave
ret
mov
and
push
push
call
pop
pop
ret
push
mov
xor
push
test
push
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
movzx
push
mov
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
pop
je
cmp
jne
or
jmp
or
pop
pop
test
pop
je
or
ret
push
mov
xor
push
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
and
je
cmp
jne
or
jmp
or
pop
test
pop
je
or
ret
push
mov
push
mov
lea
cmp
ja
mov
movzx
jmp
mov
push
mov
sar
movzx
test
pop
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzx
and
leave
ret
push
mov
push
cmp
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzx
test
je
and
push
mov
mov
pop
jmp
and
mov
mov
push
push
lea
push
push
push
lea
push
push
push
call
add
test
je
cmp
jne
movzx
jmp
movzx
movzx
shl
or
pop
pop
pop
leave
ret
mov
push
push
cdq
pop
idiv
push
mov
mov
cdq
idiv
pop
mov
sub
or
shl
not
test
jne
inc
cmp
jge
lea
cmp
jne
inc
add
cmp
jl
push
pop
pop
ret
xor
pop
ret
mov
push
push
push
push
mov
cdq
pop
idiv
mov
mov
cdq
idiv
lea
push
push
pop
push
pop
sub
shl
push
push
call
add
dec
js
lea
test
je
push
push
push
call
add
dec
sub
test
jge
pop
pop
pop
ret
push
mov
push
push
mov
push
push
push
lea
push
pop
and
lea
push
mov
pop
cdq
idiv
push
mov
mov
cdq
idiv
mov
pop
push
mov
lea
mov
sub
pop
mov
shl
test
je
inc
push
push
call
pop
test
pop
jne
push
push
call
pop
mov
pop
mov
or
mov
shl
push
pop
and
mov
inc
cmp
jge
mov
sub
lea
xor
rep
mov
pop
pop
pop
leave
ret
mov
mov
push
push
sub
pop
mov
mov
add
dec
jne
pop
ret
push
mov
xor
stos
stos
stos
pop
ret
mov
xor
cmp
jne
inc
add
cmp
jl
push
pop
ret
xor
ret
push
mov
sub
mov
push
push
push
push
mov
pop
or
cdq
mov
mov
idiv
mov
mov
cdq
idiv
and
mov
shl
sub
not
mov
mov
and
mov
mov
shr
or
mov
mov
mov
add
shl
dec
mov
jne
mov
push
pop
mov
push
pop
shl
cmp
jl
mov
mov
sub
mov
mov
jmp
mov
and
dec
sub
jns
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
movzx
mov
and
mov
mov
mov
mov
movzx
mov
and
sub
mov
shl
cmp
mov
jne
lea
xor
push
call
test
pop
jne
lea
push
call
pop
push
pop
jmp
lea
push
lea
push
call
push
lea
push
call
add
test
je
inc
mov
mov
sub
cmp
jge
lea
push
call
pop
jmp
cmp
jg
sub
mov
lea
push
lea
push
call
lea
push
push
call
push
lea
push
call
mov
inc
push
lea
push
call
add
xor
jmp
cmp
jl
lea
push
call
push
or
lea
push
call
mov
add
add
push
jmp
push
mov
and
lea
push
add
call
pop
pop
xor
push
pop
sub
mov
shl
mov
neg
sbb
and
or
or
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
xor
push
push
push
push
push
lea
push
lea
push
call
push
lea
push
call
add
leave
ret
push
mov
sub
xor
push
push
push
push
push
lea
push
lea
push
call
push
lea
push
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
mov
mov
push
mov
push
mov
mov
push
lea
mov
test
mov
jle
mov
xor
mov
test
je
movsx
inc
jmp
push
pop
mov
inc
dec
jne
mov
and
test
jl
cmp
jl
dec
cmp
jne
mov
jmp
inc
cmp
jne
inc
jmp
push
call
inc
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
lea
push
call
pop
lea
pop
push
push
push
sub
mov
movs
movs
movs
call
mov
add
movsx
mov
pop
movsx
mov
mov
mov
pop
leave
ret
push
mov
push
mov
push
push
push
mov
mov
mov
and
shr
and
mov
mov
mov
movzx
mov
and
test
mov
je
cmp
je
lea
jmp
mov
jmp
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
lea
mov
mov
shr
shl
or
mov
or
shl
mov
mov
test
jne
mov
add
mov
shr
or
lea
mov
mov
add
mov
jmp
mov
or
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
ror
in
dec
inc
add
dec
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
(bad)
dec
inc
add
add
add
add
add
add
add
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
dec
inc
add
inc
add
inc
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
dec
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
call
pop
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
inc
add
push
inc
add
push
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
inc
add
add
add
add
add
add
add
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwde
push
inc
add
push
inc
add
push
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
pop
push
inc
add
inc
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
push
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
push
push
call
add
ret
push
mov
sub
push
and
push
push
mov
mov
lea
mov
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
mov
inc
jmp
cmp
mov
jne
or
jmp
cmp
jne
mov
inc
mov
mov
test
jl
cmp
je
cmp
jg
push
test
pop
jne
cmp
je
mov
jmp
mov
cmp
je
cmp
je
mov
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
inc
inc
mov
or
xor
div
mov
mov
cmp
movzx
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsx
sub
jmp
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsx
push
call
pop
mov
sub
cmp
jae
mov
or
cmp
jb
jne
or
xor
div
cmp
jbe
or
jmp
imul
add
mov
mov
inc
mov
jmp
mov
dec
mov
test
jne
test
je
mov
mov
and
jmp
test
mov
jne
test
jne
and
je
cmp
ja
test
jne
cmp
jbe
test
mov
je
or
jmp
mov
and
neg
sbb
neg
add
mov
test
je
mov
mov
test
je
mov
neg
mov
mov
jmp
mov
test
je
mov
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
inc
cmp
je
test
je
mov
inc
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
inc
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
jne
mov
jmp
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
and
lea
mov
jmp
and
mov
or
pop
pop
pop
ret
push
mov
push
mov
imul
cmp
push
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
mov
cmp
jne
mov
cmp
ja
push
call
mov
pop
test
jne
jmp
cmp
jne
cmp
ja
mov
shr
push
call
mov
pop
test
jne
push
push
push
call
mov
test
jne
cmp
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
push
jmp
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
test
je
push
call
cmp
pop
je
inc
cmp
jl
mov
push
call
mov
pop
and
inc
cmp
jl
mov
pop
pop
ret
push
mov
mov
call
push
mov
push
xor
cmp
jae
mov
mov
sar
and
mov
test
je
push
push
push
call
add
cmp
mov
je
push
push
push
call
add
cmp
je
push
mov
sub
test
jle
push
lea
push
push
call
push
push
call
add
mov
mov
cmp
jge
mov
push
lea
push
push
call
add
cmp
je
sub
test
jle
jmp
cmp
jne
mov
or
push
push
call
pop
pop
jmp
jge
push
push
push
call
push
call
add
push
call
mov
neg
sbb
neg
dec
cmp
jne
mov
call
mov
push
push
push
call
add
mov
pop
jmp
mov
or
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
cmp
jae
mov
and
sar
shl
lea
mov
add
mov
test
je
and
mov
cmp
mov
je
test
jne
test
je
mov
cmp
je
dec
mov
mov
lea
mov
mov
lea
push
push
mov
push
push
push
call
test
jne
call
push
pop
cmp
jne
mov
mov
jmp
cmp
jne
xor
jmp
push
call
pop
jmp
mov
mov
add
lea
mov
test
je
test
je
cmp
jne
or
jmp
and
mov
mov
mov
mov
add
cmp
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
inc
jmp
dec
cmp
jae
mov
inc
cmp
jne
add
jmp
mov
inc
mov
jmp
lea
push
push
inc
lea
push
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
mov
cmp
je
mov
mov
inc
mov
jmp
cmp
jne
cmp
jne
mov
jmp
push
push
push
call
add
cmp
je
mov
inc
mov
cmp
jb
jmp
mov
lea
mov
test
jne
or
mov
sub
mov
mov
jmp
and
mov
or
pop
pop
pop
leave
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
mov
push
mov
xor
lea
cmp
jb
cmp
jae
push
pop
mov
pop
mov
ret
push
mov
push
mov
push
push
push
call
add
test
je
lea
push
push
push
call
add
test
je
inc
lea
push
push
push
call
add
test
je
inc
lea
push
push
push
call
add
pop
pop
ret
mov
push
push
mov
mov
mov
add
mov
lea
shr
or
mov
mov
mov
shr
shl
or
pop
mov
pop
ret
mov
push
push
mov
mov
mov
mov
shl
shr
or
mov
mov
shl
shr
shr
or
pop
mov
mov
pop
ret
push
mov
sub
mov
push
mov
xor
cmp
push
mov
mov
mov
mov
jbe
push
mov
mov
lea
movs
movs
push
movs
call
push
call
lea
push
push
call
push
call
mov
and
and
movsx
mov
lea
push
push
call
add
inc
dec
jne
xor
pop
cmp
jne
mov
mov
shr
mov
mov
mov
shr
shl
or
shl
add
mov
mov
jmp
mov
test
jne
push
call
add
pop
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
push
mov
lea
push
mov
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
push
pop
mov
inc
cmp
ja
jmp
cmp
jl
cmp
jg
push
jmp
cmp
jne
push
jmp
movsx
sub
je
dec
dec
je
sub
jne
jmp
push
mov
pop
jmp
and
push
pop
jmp
cmp
mov
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
jle
cmp
jg
push
jmp
dec
push
jmp
cmp
jl
cmp
jle
cmp
je
cmp
jne
mov
jmp
mov
cmp
jle
movzx
push
push
call
pop
pop
push
pop
jmp
mov
movzx
mov
and
test
je
cmp
jae
mov
inc
sub
inc
mov
jmp
inc
mov
inc
jmp
cmp
jne
mov
jmp
cmp
mov
mov
jne
cmp
jne
dec
mov
inc
jmp
cmp
jle
movzx
push
push
call
pop
pop
push
pop
jmp
mov
movzx
mov
and
test
je
cmp
jae
mov
inc
sub
inc
dec
mov
mov
inc
jmp
cmp
je
cmp
je
jmp
cmp
mov
jle
movzx
push
push
call
pop
pop
push
pop
jmp
mov
movzx
mov
and
test
je
mov
jmp
lea
cmp
mov
jl
cmp
jle
movsx
sub
je
dec
dec
je
sub
jne
push
jmp
mov
cmp
jne
mov
inc
jmp
cmp
jl
cmp
jg
jmp
cmp
jl
cmp
jg
push
pop
dec
jmp
cmp
jne
jmp
cmp
je
movsx
lea
sub
mov
je
dec
dec
jne
or
push
pop
jmp
push
pop
jmp
push
dec
pop
cmp
je
jmp
mov
jmp
mov
xor
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
movsx
lea
lea
cmp
jg
mov
inc
jmp
mov
mov
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
mov
inc
jmp
dec
jmp
mov
mov
cmp
mov
je
push
pop
cmp
jbe
cmp
jl
inc
mov
mov
dec
inc
jmp
mov
cmp
jbe
dec
cmp
jne
dec
inc
jmp
lea
push
lea
push
push
call
mov
xor
add
cmp
jge
neg
add
cmp
jne
add
cmp
jne
sub
cmp
jle
mov
mov
mov
mov
mov
cmp
je
xor
mov
mov
xor
mov
jmp
cmp
jge
mov
jmp
push
push
lea
push
call
mov
mov
mov
mov
add
jmp
xor
xor
xor
xor
jmp
xor
xor
xor
xor
mov
jmp
cmp
je
xor
xor
xor
xor
mov
mov
or
pop
mov
mov
mov
mov
pop
mov
pop
leave
ret
mov
add
gs
add
inc
add
inc
add
addr16
add
inc
add
addr16
add
push
inc
add
addr16
add
in
sub
mov
push
mov
push
mov
mov
and
and
test
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
jmp
mov
mov
test
jne
test
jne
cmp
jne
and
mov
mov
mov
jmp
cmp
jne
mov
mov
cmp
jne
cmp
je
test
jne
push
jmp
test
je
cmp
jne
cmp
jne
push
jmp
cmp
jne
cmp
jne
push
lea
push
call
pop
mov
pop
and
jmp
push
lea
push
call
pop
mov
pop
jmp
movzx
mov
mov
shr
imul
shr
and
push
lea
mov
imul
mov
lea
mov
sar
mov
movsx
neg
push
lea
push
call
add
cmp
jb
lea
inc
push
lea
push
call
pop
pop
test
mov
je
mov
movsx
add
test
jg
jmp
mov
cmp
jle
push
pop
movzx
sub
and
mov
lea
push
call
dec
pop
jne
test
jge
neg
and
jle
lea
push
call
dec
pop
jne
lea
lea
test
mov
jle
mov
lea
lea
movs
movs
lea
push
movs
call
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
mov
and
add
add
inc
dec
mov
jne
mov
mov
dec
dec
cmp
lea
jl
cmp
jb
cmp
jne
mov
dec
jmp
cmp
jae
inc
inc
inc
sub
sub
mov
movsx
and
mov
pop
pop
pop
leave
ret
cmp
jb
cmp
jne
dec
jmp
cmp
jae
and
mov
mov
mov
and
push
pop
jmp
push
mov
push
cmp
push
jne
mov
cmp
jl
cmp
jg
sub
jmp
mov
cmp
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzx
test
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
push
call
add
test
je
cmp
jne
movzx
jmp
movzx
movzx
shl
or
pop
leave
ret
mov
push
cmp
jae
mov
and
sar
mov
lea
mov
test
je
mov
mov
and
cmp
jne
and
jmp
cmp
jne
or
neg
sbb
mov
and
add
pop
ret
mov
jmp
mov
or
pop
ret
push
mov
sub
push
mov
push
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
xor
and
and
and
cmp
lea
mov
jae
cmp
jae
cmp
ja
cmp
ja
xor
jmp
test
mov
jne
inc
test
jne
xor
cmp
jne
cmp
jne
jmp
xor
cmp
jne
inc
test
jne
cmp
jne
cmp
jne
mov
mov
mov
jmp
mov
lea
mov
mov
mov
add
cmp
jle
add
lea
mov
mov
mov
mov
mov
mov
movzx
movzx
imul
mov
add
push
push
push
call
add
test
je
mov
inc
add
sub
dec
jne
add
inc
dec
cmp
jg
add
cmp
jle
test
jne
lea
push
call
add
pop
cmp
jg
cmp
jg
add
cmp
jge
movsx
neg
add
mov
test
je
inc
lea
push
call
dec
pop
jne
cmp
je
or
cmp
ja
mov
and
cmp
jne
cmp
jne
and
cmp
jne
and
cmp
jne
inc
mov
jmp
inc
jmp
inc
jmp
inc
mov
cmp
jae
mov
or
mov
mov
mov
mov
mov
mov
jmp
neg
sbb
and
and
add
and
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
sub
cmp
je
jge
mov
mov
neg
mov
sub
cmp
jne
mov
mov
cmp
je
push
push
mov
add
sar
and
cmp
je
lea
cmp
lea
jb
lea
movs
movs
movs
dec
lea
push
push
call
pop
pop
xor
cmp
jne
pop
pop
pop
leave
ret
int3
jmp
