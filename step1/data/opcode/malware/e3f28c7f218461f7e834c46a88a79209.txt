sti
mov
and
add
push
push
call
add
ret
mov
sti
(bad)
jnp
leave
je
or
mov
mov
shl
push
mov
ret
rep
adc
jbe
fcmove
data16
add
push
call
jl
test
jmp
mov
out
int3
(bad)
jmp
add
add
add
dec
jne
xor
pop
ret
sub
rol
inc
push
xor
or
lea
bound
(bad)
fwait
shl
retf
sar
pop
mov
clc
inc
shl
in
lock
cmp
mul
(bad)
(bad)
mov
mov
inc
test
jne
sub
pop
icebp
dec
idiv
std
loopne
push
pop
push
sbb
pop
ret
jmp
jg
adc
cs
push
mov
xor
push
sbb
pop
sar
cld
mov
mov
or
mov
adc
mov
dec
imul
or
and
and
or
fucomi
(bad)
mov
cmp
jne
lea
push
lea
(bad)
or
hlt
fdiv
iret
cmps
ins
mov
scas
xor
in
sub
popf
and
ror
jne
adc
repnz
mul
pop
push
das
mov
je
push
sbb
movs
mov
xor
mov
cmp
and
or
imul
sbb
nop
dec
xor
add
ret
mov
pop
adc
pop
xor
cmp
mov
add
in
push
ss
pushf
mov
loopne
out
mov
push
cmp
add
cld
(bad)
out
jge
or
inc
inc
mov
ror
pop
leave
ret
pushf
sub
lock
(bad)
fmul
or
adc
jp
cmove
mov
sub
loop
test
push
cwde
shl
cmp
mov
call
das
jne
mov
scas
jge
inc
sbb
add
outs
in
or
jae
inc
add
mov
add
ss
xchg
adc
cmps
cmp
push
mov
mov
adc
adc
and
push
sub
in
cmp
inc
clc
push
fcomp
es
ins
scas
int
adc
adc
cmp
and
add
push
inc
lea
add
inc
test
retf
adc
mov
cmp
adc
fmul
sub
push
push
push
or
push
xor
mov
jle
add
inc
sub
jne
inc
cld
(bad)
sti
fbstp
add
mul
seto
neg
or
push
dec
lods
mov
fisubr
or
inc
ins
push
mov
call
(bad)
adc
sbb
push
push
push
xchg
or
clc
add
and
test
mov
add
pushf
push
in
lds
cmp
ror
lds
pop
adc
or
push
mov
push
mov
mov
push
fsubr
and
mov
jnp
lock
outs
pop
mov
pop
jb
pop
leave
ret
jmp
cmp
in
sub
out
add
cmp
(bad)
push
les
dec
mov
add
pop
cmp
ds
cmp
jne
push
cmc
add
sti
jge
mov
test
je
(bad)
cmps
fincstp
mov
add
out
push
push
mov
inc
fst
jge
sar
mov
test
or
jnp
sub
js
pop
(bad)
retf
int
cmp
push
lahf
inc
cmps
mov
in
or
jmp
jns
int
pop
inc
push
jecxz
mov
movzx
icebp
iret
scas
dec
lods
scas
xchg
or
je
imul
push
lea
inc
push
push
aas
mov
inc
inc
xor
jne
pop
leave
sbb
arpl
xchg
adc
clc
clc
ret
(bad)
mov
sub
ror
(bad)
in
add
jns
jle
ret
fiadd
adc
jne
das
scas
adc
lahf
scas
xchg
pop
js
xor
mov
cdq
das
or
sar
mov
add
dec
push
lock
scas
mov
cmp
aaa
hlt
stc
push
fadd
inc
fcmovnb
push
bound
test
pushf
ror
dec
dec
add
adc
retf
pop
in
and
call
rcl
or
(bad)
fld
and
add
mov
push
xchg
xchg
push
pop
sub
xor
sub
sub
sub
div
loop
cmp
dec
ins
xchg
rcr
pushf
mov
inc
push
mov
imul
mov
pop
push
mov
call
je
add
ins
adc
in
leave
inc
pop
pop
je
xchg
and
jno
retf
std
sbb
daa
std
cmp
jle
call
sub
pusha
or
inc
sbb
or
add
pop
mov
dec
retf
leave
push
sbb
lahf
sysret
mov
push
in
stos
sub
mov
push
mov
call
aas
inc
call
in
out
icebp
dec
xchg
adc
lds
rcl
div
movs
js
das
xchg
sbb
rcl
cld
xor
mov
arpl
or
or
add
mov
or
or
cmp
imul
sub
lock
inc
cmp
or
ret
ret
aaa
das
and
and
dec
(bad)
dec
add
or
stos
jg
mov
shl
or
mov
or
mov
clc
push
call
dec
jns
push
enter
pusha
xchg
dec
or
add
adc
call
ror
aam
sbb
enter
es
push
ficomp
lock
gs
adc
jge
add
dec
push
or
add
or
shl
mov
push
mov
dec
fidiv
xor
cmp
inc
add
add
pop
adc
int
mov
pop
dec
cmp
xor
cdq
rcl
call
pop
xor
inc
push
sub
rcr
rcl
ror
pop
loope
push
in
jae
mov
sbb
(bad)
test
push
les
jne
cmp
icebp
adc
or
nop
add
js
xlat
mov
loopne
add
sbb
sbb
or
mov
out
out
adc
sbb
push
jmp
or
jne
mov
cmps
xor
stos
fisubr
push
mov
test
xchg
dec
sti
dec
jl
xor
or
mov
add
adc
inc
adc
add
inc
sbb
(bad)
clc
add
daa
xchg
dec
test
xchg
pushf
mov
fidivr
jbe
out
sti
mov
cwde
xlat
mov
push
ror
mov
xlat
frstor
stc
mov
push
pop
out
xor
adc
inc
mov
sbb
mov
push
adc
or
push
mov
sbb
add
dec
mov
push
push
and
inc
push
push
loopne
pop
xor
push
push
mov
cdq
cmp
inc
pop
aas
(bad)
repnz
ret
push
test
scas
and
or
pop
mov
outs
mov
pop
retf
pop
in
sbb
add
pop
idiv
enter
or
mov
fsub
cld
fcom
jne
js
lahf
dec
es
or
sub
inc
dec
dec
jmp
cld
push
inc
cs
dec
rol
cs
or
or
inc
add
pop
jb
mov
enter
adc
add
or
pop
enter
test
or
pop
enter
sbb
pop
jb
dec
push
cmp
or
sbb
pop
and
adc
mov
add
pop
jb
adc
test
hlt
add
test
push
nop
mov
sub
or
inc
cs
in
mov
or
in
cs
push
jl
add
mov
and
mov
and
and
cs
fsub
in
lock
or
inc
daa
cld
pop
jb
mov
enter
or
add
sub
pop
enter
test
sub
enter
sbb
pop
jb
xor
enter
sbb
mov
cwde
lds
nop
or
dec
jb
pop
enter
sbb
pop
jb
cmp
and
enter
mov
dec
xor
nop
or
stc
or
nop
or
cmp
cmp
and
sub
aas
je
popw
sahf
lea
add
adc
test
pop
xchg
out
xchg
inc
and
ret
pusha
js
imul
jo
sbb
inc
sbb
sub
inc
dec
call
test
and
pusha
xchg
retf
nop
inc
nop
xchg
dec
call
cs
inc
pusha
mov
xor
xchg
pushf
dec
xor
cmp
dec
jae
add
outs
pop
enter
cmp
int3
xchg
pushf
dec
rcl
ror
hlt
inc
fstp
pop
mov
icebp
cmp
jno
in
sub
leave
jle
jo
pop
jns
inc
push
in
push
cmp
call
adc
mov
mov
inc
ds
and
and
fs
mov
mul
pop
(bad)
int
(bad)
fcmovu
sub
inc
cmp
inc
je
cmp
jae
cli
adc
push
dec
arpl
imul
outs
pop
mov
or
adc
inc
(bad)
cmp
sbb
js
jle
add
adc
rol
add
rol
pusha
xchg
dec
jmp
dec
int3
lea
jmp
adc
stc
jb
rcl
sub
cmp
ja
or
push
jbe
sar
or
test
je
xor
lock
fnstsw
sub
push
lea
gs
cs
push
push
dec
imul
jge
pop
jg
add
lods
and
sbb
out
add
mov
add
jge
or
cmp
clc
ja
cmp
je
push
in
(bad)
lods
cmp
movsx
ss
xchg
xor
test
add
arpl
inc
cmp
push
mov
popa
xchg
ficomp
stos
mov
into
sub
xchg
push
sahf
loopne
add
popf
push
mov
or
idiv
xlat
cmovb
sbb
jmp
push
push
push
add
or
add
fwait
mov
scas
cmp
fwait
adc
adc
dec
pop
pop
ret
push
adc
loop
inc
shl
add
call
cmp
and
push
push
mov
(bad)
push
stos
mov
add
inc
clc
mov
mov
out
inc
xor
push
dec
add
sbb
out
iret
jbe
bound
mov
sar
clc
fwait
cmps
or
enter
push
xchg
sbb
in
inc
icebp
mov
pop
je
call
push
and
add
loopne
sar
mov
cmp
sbb
and
sub
(bad)
add
inc
add
arpl
push
add
pop
cmps
and
cld
add
or
sti
add
in
(bad)
fdiv
fstp
loope
mov
loopne
test
or
or
lock
outs
aas
in
jl
pusha
call
aas
(bad)
adc
push
mov
stos
push
mov
outs
bound
movzx
dec
push
and
aam
iret
fcmovnb
in
stos
stos
push
and
add
inc
jmp
push
in
ds
jne
mov
sbb
or
adc
fimul
pusha
push
or
sbb
inc
dec
inc
out
add
fnstcw
push
and
(bad)
and
inc
jo
adc
iret
sbb
daa
nop
out
mov
or
(bad)
es
xor
and
mov
test
je
mov
xor
xchg
or
push
lods
xchg
call
mov
in
sbb
call
push
xor
dec
mov
push
or
push
aam
sbb
mov
cmp
pop
dec
xor
call
xchg
ret
das
clc
inc
inc
or
push
or
inc
or
add
push
pop
jmp
cli
adc
retf
in
jns
push
xchg
call
test
test
(bad)
push
or
or
push
nop
cmps
adc
jae
repnz
pop
sar
in
mov
or
inc
mov
add
fidiv
mov
adc
jno
xor
movs
mov
mov
xor
sbb
adc
adc
push
push
sbb
movzx
fbstp
lods
ret
push
sbb
pop
mov
cmp
mov
jle
aam
inc
or
adc
or
sbb
pop
jmp
repnz
or
pop
mov
xor
adc
adc
sbb
xor
pop
jo
arpl
inc
mov
rcl
shufps
cdq
dec
adc
mov
mov
pushf
or
or
mov
jge
ror
push
ror
sbb
adc
and
pop
dec
xchg
dec
test
jg
rcl
test
xor
dec
cmp
or
mov
les
pop
xor
jl
jg
aaa
or
pop
cs
cmp
jg
jl
cmp
(bad)
fimul
jbe
es
int3
and
sbb
push
add
out
push
out
or
pop
scas
or
and
sbb
add
jmp
cdq
jmp
je
or
call
pop
and
mov
inc
sbb
(bad)
(bad)
fistp
adc
add
adc
dec
mov
adc
jl
test
jno
add
pop
or
add
stos
jmp
sub
inc
push
fs
and
nop
add
and
sbb
sub
xor
pusha
lahf
and
mov
mov
sbb
sbb
mov
and
inc
xor
push
leave
and
test
cmp
or
xor
adc
repnz
or
add
mov
ret
inc
and
jne
xchg
sub
sub
add
ins
out
mov
mov
arpl
fstp
cmp
and
iret
inc
loope
mov
data16
jecxz
jp
lods
mov
adc
in
xchg
xor
mov
js
push
inc
and
inc
cmps
iret
call
jl
shl
jg
lock
jo
cs
(bad)
mov
push
xlat
add
mov
or
add
inc
sub
jbe
jno
cli
adc
sbb
repnz
xor
rol
or
sub
mov
mov
rol
inc
or
add
mov
cmp
adc
mov
inc
dec
or
shl
xor
push
loopne
and
push
xor
xor
mov
aad
and
daa
xor
lea
adc
sub
es
mov
das
enter
and
pop
push
dec
xor
push
icebp
push
daa
adc
pop
mov
or
dec
mov
dec
inc
aad
ror
popa
or
fdivr
inc
sar
push
and
dec
inc
imul
addr16
cmp
jb
dec
sub
xchg
push
or
mov
push
scas
push
xor
nop
add
cld
fcos
push
inc
lea
addr16
imul
push
add
test
ins
add
or
and
inc
icebp
jae
cmp
inc
sub
push
mov
sub
lods
jne
push
mov
inc
dec
xchg
hlt
enter
imul
add
push
xor
pop
add
pop
fcomp
leave
int
jno
fs
adc
add
pop
mov
sbb
mov
jl
or
add
jo
call
add
cmp
jne
adc
mov
sub
add
es
das
push
fisub
sub
idiv
sub
mov
or
sbb
inc
fs
repz
arpl
outs
or
pop
stc
jae
cmp
ja
sub
add
pop
push
cld
icebp
clc
cmp
push
mov
mov
dec
mov
cld
cmp
adc
lea
or
mov
push
lds
mov
bound
aaa
enter
popf
cmp
bound
dec
and
or
inc
mov
mov
int
pop
push
xor
push
lea
inc
push
add
add
adc
mov
and
add
les
fdiv
pop
lea
dec
cmp
push
pusha
mov
ss
(bad)
xor
sub
or
test
sbb
mov
lock
test
cmp
fld
push
imul
jne
sbb
pcmpgtb
cld
cwde
lea
lds
cwde
jmp
mov
xor
jle
xor
mov
shr
popa
loopne
loopne
sbb
loopne
xor
lock
out
mov
jg
xor
imul
into
hlt
xor
or
add
push
stos
je
add
cmp
push
mov
xchg
dec
movs
pop
ret
adc
mov
add
sub
dec
aam
pop
pop
adc
or
std
xchg
push
push
cmp
jne
or
fild
scas
sbb
call
out
mov
push
cmp
pop
jae
pushf
mov
add
mov
adc
retf
test
arpl
es
xor
adc
shl
dec
jge
add
mov
pop
repnz
sub
mov
mov
outs
fisttp
(bad)
jmp
test
cmp
cmp
pop
das
cli
xchg
jmp
jb
mov
mov
or
(bad)
jg
(bad)
jae
shr
jne
(bad)
jbe
push
add
sbb
cmp
sar
add
jmp
inc
icebp
test
push
nop
dec
mov
jne
(bad)
cmp
sbb
sbb
stos
add
sbb
fstp
sbb
inc
or
jmp
xchg
cmp
neg
add
mov
aad
cmp
retfw
jne
add
or
pop
jo
sub
adc
sahf
inc
psrad
mov
cmc
mov
and
rol
shr
pushf
test
push
arpl
fs
das
fadd
pop
xchg
fcomp
and
mov
pop
pop
pop
das
rcl
lods
adc
sbb
cmp
or
xor
fsubr
push
arpl
fmul
cmp
push
test
xor
jne
mov
xor
ret
aaa
popa
or
add
sbb
add
test
add
pop
add
js
xor
inc
cmps
jne
(bad)
(bad)
pop
and
cmp
jbe
cmp
jae
mov
xor
and
mov
daa
sti
dec
ins
scas
into
push
mov
mov
inc
pop
lods
aad
call
enter
sub
test
mov
sub
cmp
push
inc
jne
push
stos
mov
mov
mov
jg
push
xor
jmp
sbb
adc
or
or
dec
cwde
imul
mov
in
sar
scas
jp
cmp
bsr
fisttp
cmp
ja
into
sub
or
and
imul
add
mov
mov
dec
add
add
(bad)
fild
fsubr
cmps
and
jl
adc
mov
xor
or
cmps
mov
ja
cmc
popa
call
jne
or
movs
add
xchg
(bad)
ins
cli
js
pop
mov
ins
mov
xchg
inc
pop
mov
mov
pop
sbb
adc
das
sub
clc
jne
push
adc
stc
mov
add
shr
or
cmps
cmp
sbb
cmps
and
test
jnp
inc
push
in
xchg
lock
popf
xchg
dec
inc
inc
fimul
cmp
ins
inc
sub
inc
out
imul
imul
sbb
jmp
out
mov
cli
adc
jl
jge
mov
imul
jg
imul
jo
out
ficom
fld
xchg
into
xchg
sbb
mov
dec
jle
cs
push
dec
mov
nop
mov
sti
add
and
dec
sbb
add
jg
add
push
add
hlt
je
fs
mov
jle
in
add
dec
add
iret
dec
jl
repz
test
push
mov
ret
pop
mov
fs
pop
cmp
cmp
xor
loope
add
adc
retf
(bad)
cmp
cdq
fadd
aaa
or
jg
aaa
push
cmp
jae
sbb
dec
dec
pusha
push
push
push
pop
sbb
add
and
jbe
push
inc
push
outs
cmp
jne
push
movsx
dec
mov
pop
cmp
cmovne
push
arpl
enter
push
into
cmp
push
sub
test
push
mov
sbb
push
inc
push
outs
sub
lea
outs
and
push
icebp
(bad)
mov
jbe
cmp
ds
push
jae
cmps
mov
lea
mov
rcl
sub
or
mov
jb
call
js
leave
jge
jg
lahf
cmp
js
imul
dec
adc
pop
sub
cmp
push
xor
test
cmp
jne
test
mov
cmp
jne
push
sbb
xor
aaa
push
dec
jp
das
sti
dec
jmp
cld
sahf
sbb
push
push
pop
xor
ret
bound
int
ret
mov
or
xchg
xor
in
les
add
adc
iret
call
mov
aam
xchg
cmp
jae
cmp
je
inc
jmp
adc
add
inc
mov
mov
vmaxsd
push
dec
push
adc
push
dec
bound
dec
mov
mov
mov
pusha
add
dec
cmp
je
mov
or
ins
pop
cmp
je
mov
aad
inc
in
clc
add
and
into
inc
add
add
sbb
cmp
xor
imul
sbb
call
fidiv
clc
je
and
fwait
sbb
and
push
rol
add
mov
xor
fstp
fisubr
and
sbb
es
mov
loop
sbb
jne
inc
test
shr
cmp
cmp
push
sub
push
pop
nop
dec
jo
mov
sbb
inc
cmp
mov
mov
xchg
push
inc
aam
jns
mov
(bad)
dec
lea
jge
lea
add
push
mov
call
push
in
xor
pop
mov
push
in
jb
scas
xchg
or
add
adc
outs
je
and
or
(bad)
pop
out
dec
or
mov
jne
out
jbe
ret
cmp
rcr
ds
or
or
jmp
shl
je
add
fild
ins
dec
(bad)
jl
pop
mov
cmc
aaa
push
ins
jmp
sub
and
std
shr
adc
jne
jns
mov
mov
adc
push
adc
fwait
pop
or
pusha
xor
jo
or
jne
adc
imul
cmp
aaa
and
not
adc
dec
and
xchg
push
mov
adc
or
adc
lods
jmp
inc
pushf
mov
pop
pusha
ret
lods
fs
inc
add
add
xor
and
push
bound
jb
push
xchg
push
xor
retf
mov
mov
add
je
sahf
jnp
add
sub
mov
sbb
pop
je
cmp
adc
sahf
inc
or
inc
adc
push
pop
sbb
adc
mov
cmp
leave
cmp
pop
in
jle
cdq
into
mov
dec
pop
pop
dec
loop
mov
pop
or
mov
push
sbb
mov
mov
arpl
es
aam
jns
xor
push
xchg
or
mov
sar
jge
aam
daa
loopne
inc
add
inc
push
mov
inc
sbb
cmp
mov
cmp
imul
add
inc
out
cmp
adc
ins
add
cmp
cmp
pop
inc
pop
sbb
ins
mov
pop
aaa
pop
dec
or
loope
xor
push
pop
test
inc
repnz
add
call
and
mov
sub
mov
push
mov
pop
(bad)
mov
out
push
add
sbb
retf
push
pop
or
xchg
xchg
xchg
sar
loope
daa
fist
and
adc
js
enter
xchg
cmp
mov
sub
add
sar
add
ret
xchg
leave
imul
sbb
push
push
push
ja
inc
ret
leave
cld
(bad)
cmp
dec
add
mov
fwait
cmp
mov
ret
sbb
jae
clc
repnz
std
test
inc
mov
sub
add
fcomp
call
outs
add
mov
hlt
sbb
or
mov
ror
add
xchg
fsub
push
xchg
cli
ror
lds
jecxz
mov
adc
int3
xor
mov
jmp
shl
outs
cli
je
push
(bad)
out
inc
and
mov
add
aaa
or
mov
xchg
mov
test
cmp
test
jg
dec
(bad)
push
cld
push
mov
mov
jo
inc
add
out
dec
cmp
inc
add
(bad)
push
cmp
cmp
xor
sub
mov
mov
inc
setl
out
fidiv
mov
and
aam
sbb
ret
pop
push
enter
cdq
and
dec
push
leave
push
sbb
or
jl
push
add
cld
ins
inc
dec
std
add
sub
adc
adc
add
xor
add
mov
imul
lea
cmp
ins
xchg
sbb
mov
test
or
push
rcr
shl
stos
or
inc
dec
xchg
push
inc
ds
or
cmps
in
shl
mov
and
scas
pop
int
ja
pop
in
out
adc
jg
jge
mov
call
fwait
or
sub
mov
xchg
add
rcr
xchg
cmps
mov
cdq
js
fld
fwait
dec
sub
sar
pop
dec
or
add
cmps
aas
cmp
pop
or
mov
xchg
mov
enter
mov
call
pop
lock
sbb
imul
in
mov
jo
xchg
mov
iret
lods
push
add
pop
ds
dec
mov
lea
mov
shl
lods
and
mov
in
and
mov
cwde
jns
dec
dec
lea
shl
push
or
aaa
ins
cld
jbe
adc
test
hlt
mov
mov
jo
test
cmps
mov
call
lods
rcr
(bad)
leave
stos
add
and
scas
lea
cwde
aaa
outs
inc
inc
inc
pop
mov
loopne
and
fcomp
loope
ffree
movs
push
stos
and
inc
in
int
nop
mov
repnz
rcr
cwde
inc
pop
and
adc
pop
inc
mov
ret
test
mov
pop
clc
inc
cwde
push
sahf
cli
adc
inc
je
push
pop
js
and
jmp
cld
dec
inc
ins
push
pop
mov
pop
adc
or
das
test
dec
pop
xor
(bad)
nop
or
mov
xor
jle
retf
add
lahf
mov
and
adc
mov
movs
add
fstp
pop
xor
add
pusha
and
cli
sbb
dec
cwde
les
jb
add
ds
sbb
xor
inc
(bad)
and
add
jb
mov
stc
cmp
cmovb
sub
(bad)
fild
sub
cmp
mov
and
out
rol
sub
lds
jbe
add
sub
add
jb
push
or
cli
aas
xor
jo
push
push
pop
cmp
je
add
mov
into
jb
sub
jmp
pop
out
cmps
loopne
jp
(bad)
mov
std
adc
mov
jmp
scas
push
add
or
add
cmp
out
ja
loopne
or
add
jne
add
(bad)
pusha
adc
fimul
inc
mov
sbb
jmp
ins
mov
dec
jge
adc
and
cs
nop
out
int
and
xor
fisttp
sahf
add
pop
sub
push
out
mov
retf
sbb
je
jb
sbb
and
pop
test
cli
and
push
push
les
in
sub
outs
ret
jmp
shr
(bad)
push
mov
das
or
enter
pop
xor
lds
je
or
mov
std
lds
ins
repnz
mov
cmps
and
push
cmp
inc
popf
add
outs
in
or
jne
cmp
push
call
iret
jae
ds
ja
mov
add
scas
mov
stos
lock
pushf
sbb
dec
jle
repz
push
movsx
push
or
fcomp
loop
pop
push
xchg
push
push
push
retf
dec
add
lea
push
adc
add
mov
ret
sub
mov
cmp
ja
cmp
jae
push
or
(bad)
shr
xor
jae
mov
ret
into
inc
(bad)
sahf
pop
lea
daa
sti
jb
dec
push
and
or
js
add
loop
(bad)
sbb
neg
push
mov
clc
sbb
push
icebp
push
aad
aaa
jo
mov
sbb
es
push
push
push
push
adc
popa
xchg
lds
pushf
mov
jo
adc
or
mov
inc
xchg
sub
js
mov
mov
sub
psubsb
jno
pop
je
push
adc
mov
push
push
push
adc
loopne
mov
cmp
adc
add
inc
xor
je
les
mov
lea
cmps
dec
in
pop
(bad)
mov
cmp
hlt
call
xchg
call
and
in
es
xor
sbb
ror
push
lds
adc
je
jg
add
rcr
xor
cmp
ins
pusha
add
add
or
or
mov
adc
jno
sti
sub
add
jmp
or
nop
mov
jae
fsincos
cmps
sbb
mov
add
or
je
jb
loope
into
movzx
iret
or
mov
inc
sub
fcomp
push
int
mov
ret
mov
test
scas
pushf
sub
loope
add
sar
mov
popa
(bad)
jmp
ret
xor
add
adc
loope
outs
cs
jbe
mov
push
lea
cwde
push
dec
sbb
mov
push
(bad)
dec
ja
inc
push
push
cmc
sub
in
into
push
pop
ret
jo
or
jmp
ret
cmp
cmp
jb
sub
cmp
mov
cmp
jne
pushf
das
fwait
and
ret
sti
and
push
jmp
cmp
inc
and
push
or
push
xchg
scas
mov
push
cmp
mov
shl
push
push
out
retf
xor
inc
aad
sub
dec
ror
adc
pop
sbb
std
cmp
cmp
xor
sub
sbb
shl
ret
sub
int
in
xchg
sub
add
sbb
or
or
push
rol
pop
push
or
sub
psubusb
and
push
inc
add
add
into
inc
sub
cmp
mov
xor
push
and
int3
push
pop
mov
sub
dec
push
xchg
jnp
sbb
cmp
ja
test
adc
xchg
mov
(bad)
or
or
test
inc
dec
sub
sub
dec
cmp
ja
rol
neg
push
mov
sub
stc
mov
dec
not
loope
ror
jecxz
push
jo
xor
xor
push
cmp
pop
or
dec
xor
nop
ja
and
inc
mov
jns
adc
or
pop
jle
mov
repz
ret
lock
stc
in
pop
ja
push
mov
ret
(bad)
push
daa
sbb
jo
xlat
push
out
imul
sbb
dec
ins
xor
pop
je
ffreep
pusha
inc
dec
jnp
xchg
mov
cmps
xor
xor
jmp
push
call
xchg
scas
and
jle
adc
mov
jmp
jp
jp
les
retf
jae
sub
jmp
outs
test
cmp
lods
lock
hlt
(bad)
lea
xchg
add
in
or
push
xor
outs
push
lods
mov
jne
xor
nop
xor
into
adc
add
pop
pop
cmp
push
jge
sub
stc
movs
adc
shr
mov
cmps
aas
sub
sar
push
adc
push
xchg
pop
pop
pop
adc
lods
ror
shl
adc
push
adc
push
fadd
lods
(bad)
jbe
dec
mov
push
xor
add
mov
aas
cmc
ins
movs
mov
and
ins
fstp
jne
idiv
push
jae
sub
pushf
rcr
xor
sub
cwde
jb
sub
lea
push
scas
(bad)
stos
jmp
mov
shr
sub
sbb
loop
add
xor
pop
mov
fs
js
jns
inc
scas
jp
push
movs
fcom
or
push
retf
stos
adc
inc
popf
cmp
push
adc
adc
sahf
into
jl
xor
aam
loopne
sbb
xor
sub
iret
ret
push
xor
iret
cmp
push
mov
jne
mov
mov
test
push
or
sub
je
inc
dec
add
test
sub
inc
clc
sar
pusha
adc
xor
jmp
sbb
push
push
jmp
push
pop
ret
cdq
pusha
mov
push
cmp
lock
add
and
clc
cmp
pop
call
je
bound
cdq
pop
adc
cld
jg
or
cmp
push
push
dec
lods
and
xor
cmp
add
test
sbb
inc
push
movs
jo
and
add
mov
pop
or
pop
mov
push
jmp
push
push
mov
leave
test
(bad)
cmove
aad
pop
sbb
dec
je
rol
pop
dec
add
retf
(bad)
dec
push
mov
inc
mov
(bad)
cld
clc
or
sete
mov
mov
push
sub
sbb
dec
or
or
add
or
add
mov
sub
xor
add
xchg
inc
dec
in
or
icebp
cmp
in
push
sbb
sub
rol
add
adc
xor
cwde
lahf
and
dec
cmps
mov
or
jmp
add
add
adc
sbb
int
rcl
rcl
std
cmps
inc
sahf
xor
cmovae
lea
mov
sbb
and
mov
imul
or
mov
ret
and
clc
aaa
and
sub
into
sub
sbb
jne
ins
cmp
mov
and
test
jnp
mov
movs
dec
fmul
inc
jmp
mov
mov
mov
xor
lods
mov
and
sbb
mov
mov
shr
sub
pop
fmul
add
push
or
cwde
mov
push
and
jle
push
sbb
pop
lea
jno
add
push
inc
xor
push
cmp
push
inc
jbe
mov
mov
sub
or
dec
push
jne
add
cmp
sbb
ins
ja
cmp
(bad)
add
mov
adc
sbb
and
cmp
shr
adc
mov
or
shl
sub
inc
sahf
scas
xchg
cmp
pop
add
inc
inc
push
and
stc
or
jmp
and
jmp
adc
scas
xchg
add
sbb
clc
sbb
sti
xor
mov
pop
and
loop
pop
push
loopne
icebp
cmp
xchg
pushf
stos
push
add
dec
inc
pop
pop
sar
jo
sub
xor
pusha
out
int3
xor
outs
mov
cmp
jns
add
fnstenv
stc
inc
add
inc
aaa
jne
fldcw
add
(bad)
pop
jmp
mov
jbe
pop
xor
jb
sbb
pop
xlat
add
ds
xchg
or
inc
cli
lods
test
test
nop
mov
push
cmps
pop
loope
sub
xor
push
push
ror
retf
mov
inc
sbb
cmp
lahf
adc
inc
adc
push
test
xchg
inc
xlat
ret
adc
lds
add
neg
xor
mov
sbb
je
sub
xlat
jmp
pushf
jmp
or
rol
and
pusha
aam
test
pop
cmp
xor
push
mov
jbe
mov
cmp
jbe
sub
clc
mov
and
je
stos
sbb
sub
ins
push
push
aas
scas
adc
outs
das
mov
mov
jecxz
sub
add
inc
adc
mov
sbb
adc
js
sub
and
mov
inc
mov
ins
cli
mov
mov
mov
addr16
and
push
push
or
call
test
dec
jl
pop
cmp
xchg
or
sbb
pop
push
xor
sbb
or
dec
adc
or
xchg
push
(bad)
xor
fsubp
cmp
push
fisubr
mov
inc
add
mov
neg
add
clc
sbb
push
dec
retf
mov
mov
cli
repz
mov
sbb
sbb
and
or
in
nop
xor
push
sbb
fucomp
cwde
inc
inc
mov
dec
adc
cld
jno
pop
test
pop
popf
sub
and
push
and
outs
loopne
xor
mov
lods
lea
jg
clc
push
mov
or
movups
cdq
sub
sbb
or
and
add
fld
test
pop
mov
add
rcr
pushf
xor
sbb
shl
das
ror
xchg
rcl
aas
out
jne
adc
retf
xor
sub
push
and
xchg
cli
adc
stc
mov
or
sti
pop
int3
add
inc
jae
loop
rcr
retf
(bad)
les
pop
xor
inc
jb
cmp
div
ret
push
outs
pop
sub
pop
jg
jl
fidivr
lods
inc
or
add
pop
sub
pop
fisttp
or
pop
push
jmp
daa
cmp
jae
cmp
dec
mov
push
dec
jno
sub
push
loopne
push
test
push
jo
inc
xchg
test
mov
rol
in
inc
rol
add
inc
dec
push
fs
add
les
shr
sbb
stos
push
(bad)
jns
mov
jno
xchg
add
and
push
mov
adc
test
mov
inc
scas
xor
sub
push
sub
jno
dec
inc
sar
jb
outs
aaa
adc
jnp
mov
lods
repz
sub
xchg
jmp
add
pop
sub
aas
fimul
rcl
push
or
sbb
jmp
or
xor
jno
mov
leave
mov
or
mov
js
pop
or
lods
xor
jmp
jmp
push
inc
test
xor
adc
and
inc
adc
add
stos
imul
daa
sub
sbb
dec
push
and
mov
push
mov
int
pop
cmp
sub
push
or
daa
add
xlat
cmp
xor
push
gs
and
fcom
inc
jmp
rcl
dec
sar
cs
cmp
or
inc
imul
pop
push
pusha
push
rcr
mov
or
sbb
shl
fdivr
call
adc
adc
and
movsx
xor
inc
ins
add
add
aad
adc
mov
pop
jo
iret
(bad)
jbe
adc
sub
ror
cld
outs
cli
dec
and
jne
mov
retf
shr
cmp
jbe
push
pop
add
jg
fdiv
lea
jmp
sbb
fisttp
jge
sbb
jo
das
push
push
inc
(bad)
mov
push
pusha
das
sbb
cmp
inc
rcl
jb
or
je
pop
lds
jne
push
push
leave
push
test
sub
in
shr
sub
sub
bound
sbb
out
popa
stos
push
fwait
pop
retf
sbb
or
jmp
aad
lea
inc
xor
je
pop
push
dec
outs
mov
in
add
sti
loopne
mov
xor
sbb
enter
shl
leave
jbe
popf
test
and
stc
pop
into
movs
xchg
pop
mov
imul
push
das
iret
mov
add
jecxz
stos
inc
xor
pusha
test
mov
ins
call
sub
add
fidiv
push
adc
xor
ins
ror
sbb
adc
xor
mov
pusha
or
loop
inc
call
sub
dec
neg
fisttp
cmp
add
repz
or
jecxz
sahf
adc
add
xor
and
outs
inc
jne
lock
pop
sbb
ja
sub
xchg
fwait
and
mov
or
ss
les
lds
sub
rcl
add
inc
adc
pop
dec
push
and
push
outs
add
xor
add
or
adc
sub
add
stos
cmp
add
fistp
test
add
icebp
leave
je
inc
jbe
out
push
sbb
(bad)
or
loopne
xor
outs
popf
shl
sbb
movs
add
or
ret
sub
hlt
cmp
jb
in
push
jno
pop
inc
push
movs
jle
dec
adc
inc
or
hlt
adc
divps
mov
xchg
pushf
pop
enter
sbb
imul
sub
pop
aaa
push
pop
add
ja
push
stc
jne
mov
jmp
or
sar
inc
dec
inc
jmp
adc
cmp
pop
rol
push
jns
cmps
movs
push
cmp
jb
pop
push
and
pop
loope
out
icebp
ret
pop
cmp
jbe
lock
rol
fidivr
inc
(bad)
fnstenv
jmp
add
push
pop
pop
ja
pop
mov
shr
push
add
dec
push
push
mov
movs
push
imul
cmp
dec
les
loop
cdq
and
push
pop
mov
sbb
neg
js
stos
iret
add
cmp
je
fistp
push
inc
dec
int
add
cmp
jne
clc
sub
repz
push
stc
iret
and
add
loopne
xlat
sub
push
pop
add
mov
pop
mov
pop
push
pop
xchg
(bad)
ins
xchg
push
pop
xchg
mov
or
loopne
cmp
je
jmp
push
adc
mov
clc
push
sbb
adc
lea
adc
sbb
jae
pminsw
cmp
jle
pop
sbb
or
xlat
sub
rcr
clc
test
dec
sub
icebp
xchg
inc
fwait
inc
xchg
push
jne
cmp
jle
or
pop
or
je
test
pop
cmove
or
mov
shl
or
add
movs
add
mov
(bad)
xor
pop
and
and
add
inc
test
mov
mov
mov
push
mov
sub
test
div
or
mov
mov
(bad)
mov
sub
adc
xchg
fiadd
cmp
push
(bad)
fldcw
shl
outs
out
ror
inc
and
mov
jmp
pop
(bad)
fcmove
mov
pop
push
gs
or
jp
or
mov
pop
enter
pop
add
jns
push
pop
jno
inc
push
pusha
js
xor
jbe
and
retf
sbb
xchg
xor
xor
sub
js
cwde
jp
sub
aam
inc
dec
mov
jp
ret
mov
lea
sbb
mov
shl
cmp
xor
sub
add
stc
js
add
clc
push
jns
fsubr
hlt
aam
sub
sub
outs
mov
inc
cdq
xor
sbb
xor
adc
jns
movs
and
cmc
sbb
mov
mov
sub
xor
sbb
xor
out
xor
scas
dec
bnd
lods
dec
jbe
dec
cmps
outs
jo
test
push
jb
pushf
dec
mov
push
ins
inc
jge
or
sbb
push
xor
fiadd
das
inc
xchg
mov
dec
stos
jb
pop
(bad)
xor
mov
jecxz
push
cmp
sbb
cmp
dec
sub
mov
or
or
lods
adc
jmp
and
sub
xor
(bad)
dec
or
and
arpl
sub
sbb
xchg
rcl
in
enter
push
repnz
lea
imul
pop
cmp
or
jg
cmp
movsx
mov
mov
and
fld
jno
inc
scas
jg
mov
addr16
loop
jnp
imul
stc
push
lock
loope
stos
movs
xor
add
arpl
div
aas
sub
loopne
sub
add
sub
sbb
adc
adc
pop
pop
stos
jno
sub
movs
(bad)
jmp
mov
add
push
loope
mov
ss
mov
imul
jmp
xchg
and
fcomp
mov
ret
loope
loop
dec
adc
imul
adc
pop
add
mov
xor
push
mov
sbb
and
jo
adc
retf
je
jge
mov
add
repz
add
add
jno
xor
inc
mov
js
loop
add
cmps
mov
fimul
dec
add
inc
adc
stos
mov
test
sub
loopne
jmp
push
inc
add
mov
add
mov
cli
outs
call
out
aad
mov
jmp
push
or
mov
jmp
shl
xchg
aaa
(bad)
not
and
or
mov
push
in
adc
pop
push
dec
call
dec
push
bound
and
ins
loopne
jmp
inc
adc
mov
cmp
cmp
sar
push
cmp
cli
scas
mov
das
call
rcl
ins
jmp
int3
cmp
xor
mov
xor
push
inc
dec
adc
mov
or
in
scas
mov
stc
das
adc
sub
scas
not
clc
sub
inc
dec
in
or
inc
sub
xchg
inc
inc
inc
sbb
in
shr
shl
jmp
sub
and
xor
retf
aad
sub
mov
xor
sub
daa
mov
retf
sub
add
xchg
cmps
xchg
push
inc
add
dec
or
fidivr
popf
jb
push
popa
das
jae
test
sub
sub
xor
push
es
cmp
mov
dec
mov
(bad)
jmp
push
inc
inc
jle
and
cmp
push
push
push
out
cmp
inc
cmp
push
jne
arpl
inc
inc
enter
mov
adc
test
mov
ret
fwait
push
add
hlt
or
dec
jne
pop
sub
ror
add
imul
retf
repnz
xlat
add
mov
adc
jmp
ins
xchg
int
push
adc
sbb
cmp
or
mov
xor
sub
push
push
inc
and
(bad)
jo
mov
push
pop
add
xchg
xor
push
xor
push
inc
sub
pop
sub
sbb
js
jo
pop
add
pop
mov
test
mov
or
aaa
push
or
aaa
in
and
aas
adc
sbb
push
xor
or
push
cs
pop
je
dec
jmp
sub
sbb
cmp
adc
test
xor
pop
cmp
sar
sub
ret
mov
add
cmp
adc
jmp
sub
icebp
jo
enter
pop
or
test
push
pop
cmp
jg
popa
data16
scas
adc
daa
mov
data16
jmp
test
and
mov
inc
cdq
mov
lods
ds
add
adc
sub
or
pop
mov
daa
aad
sbb
pshufw
add
cs
inc
mov
mov
(bad)
dec
mov
imul
inc
or
pop
add
test
xchg
loopne
imul
ret
push
xor
loope
daa
pop
pop
add
cmps
cmp
cmc
stos
in
pusha
es
ret
xor
pusha
add
fs
mov
sbb
js
add
sbb
adc
inc
mov
add
sbb
(bad)
and
inc
cmp
call
call
xchg
push
sti
push
jecxz
cmp
mov
call
xlat
sbb
loopne
movs
pop
adc
pop
rcr
shl
mov
mov
push
push
sub
iret
pop
jo
jo
or
mov
shr
sub
movs
xchg
mov
mov
jne
stos
mov
iret
jb
and
mov
inc
and
lock
in
mov
cmovae
mov
push
shl
pop
aam
cmps
jns
xor
lock
xchg
mov
xor
pop
mov
pop
daa
sub
cmp
ret
sub
in
fdivr
cmp
stos
mov
mov
aad
mov
push
fmul
and
into
jl
jg
cmp
out
(bad)
jbe
adc
jg
sub
sub
sbb
add
adc
movs
push
mov
inc
in
call
add
add
fdivr
cld
sub
int3
add
pusha
xchg
mov
add
dec
jne
sub
mov
inc
push
fnstcw
aas
js
cwde
mov
dec
fisttp
push
movzx
inc
cmp
or
sbb
retf
add
rol
dec
into
test
xchg
or
popa
inc
fdiv
cmp
jne
mov
pop
push
sbb
imul
cmp
sar
sar
pushf
(bad)
xor
jo
sub
mov
or
in
clc
push
and
nop
push
fmul
push
fimul
shl
push
jo
push
dec
or
push
add
push
enter
adc
mov
(bad)
neg
lea
mov
inc
sbb
ss
mov
sar
push
in
xor
fadd
jl
add
out
jg
jbe
cmp
jl
adc
jbe
sub
sbb
xlat
pop
icebp
ror
jmp
ins
rol
push
jno
or
jb
ins
mov
ja
xor
add
add
push
int3
scas
and
jg
and
imul
push
test
into
retf
fwait
loopne
dec
cmps
sub
sahf
int3
mov
fcmovb
pop
js
sub
popf
jo
adc
mov
lds
movs
jne
mov
add
into
jmp
inc
stos
in
cs
lock
jno
and
(bad)
sbb
adc
mov
scas
cmp
ja
or
xlat
aam
mov
sti
hlt
push
imul
ins
jge
test
inc
adc
inc
adc
and
data16
push
jbe
add
or
sub
cs
xchg
or
or
dec
pop
out
jmp
into
(bad)
xchg
and
and
and
adc
add
or
jnp
ror
dec
in
pop
mov
mov
mov
jno
dec
test
or
jmp
in
rol
add
fdivr
cmp
add
dec
xor
adc
add
mov
push
scas
inc
jb
inc
icebp
inc
inc
push
push
xor
push
add
pop
mov
iret
(bad)
mov
out
fmul
pop
push
push
xor
js
dec
int
outs
push
ret
and
adc
inc
jle
and
xor
(bad)
add
sahf
xchg
cmps
outs
leave
or
or
shl
sub
call
and
cmp
cmovb
adc
stos
cmp
sub
push
lods
popf
xchg
inc
cmp
sahf
pop
xchg
test
jp
paddb
(bad)
push
mov
push
xor
xchg
mov
xor
mov
das
mov
call
inc
xor
mov
jae
push
mov
clc
rol
xor
mov
adc
adc
adc
cmp
fld
push
cdq
jge
jp
inc
cmp
and
xchg
push
push
sbb
push
mov
mov
cmp
jns
and
push
push
cmp
(bad)
push
aaa
inc
cmp
or
jle
shl
pop
xor
cli
rol
dec
push
pop
or
inc
movs
cli
ret
sub
mov
push
push
jmp
loop
jmp
add
adc
in
and
inc
mov
movs
push
inc
or
inc
cmp
pop
in
add
cmp
call
call
adc
inc
push
lock
pop
sub
push
or
inc
or
inc
dec
test
push
jae
jmp
mov
or
push
xor
loop
mov
xchg
sbb
push
push
add
pop
arpl
mov
jle
mov
xor
inc
aam
pushf
fmul
sbb
fadd
in
jmp
push
lahf
sbb
lds
sbb
ret
add
add
cmp
ret
lods
xchg
pop
pop
out
add
xor
pop
mov
push
(bad)
jb
add
inc
scas
inc
lds
pop
push
jmp
xchg
mov
jg
and
mov
mov
push
dec
pop
add
push
rol
and
inc
dec
mov
sub
jno
inc
clc
mov
sbb
cmp
je
out
and
ja
jo
ins
and
mov
adc
js
sub
inc
push
mov
icebp
test
mov
aad
cmp
adc
mov
aas
(bad)
movsx
pop
gs
in
inc
loope
adc
sahf
aaa
scas
add
popa
loope
and
mov
xchg
inc
movs
xchg
lock
sub
mov
mov
inc
dec
jne
out
movs
mov
arpl
pop
lods
push
adc
fld
sub
push
dec
and
fiadd
jo
cmp
jne
jmp
cld
xor
lea
and
push
or
(bad)
sbb
and
fbstp
sub
pop
shr
xor
mov
int3
add
or
jmp
cmp
mov
push
cld
inc
jbe
adc
into
push
ret
xchg
or
shl
iret
fistp
cmp
shl
pop
mov
dec
shr
jmp
push
lock
fnsave
mov
mov
or
and
push
lea
sbb
nop
xor
jne
jl
or
inc
cld
mov
add
mov
(bad)
dec
dec
add
sbb
rcr
popw
fld
add
loop
and
xor
cmp
je
bound
mov
add
aas
xchg
or
sub
ja
lock
sub
mov
ds
aas
xor
out
enter
inc
or
popf
fisttp
inc
(bad)
mov
dec
inc
inc
leave
push
inc
pop
mov
mov
aaa
push
adc
arpl
imul
jecxz
mov
xor
sub
test
xchg
xchg
cmp
push
enter
test
imul
ror
or
adc
mov
push
jnp
jmp
sub
test
in
cmp
cmps
or
push
pop
adc
stos
xchg
out
xor
ret
pop
mov
les
sub
or
fadd
pop
movs
mov
cmp
or
jg
enter
fadd
mov
test
and
enter
loopne
scas
xchg
jns
jb
invd
push
(bad)
or
pop
jo
test
xor
mov
and
jo
push
push
call
pop
add
adc
mov
mov
mov
add
add
adc
jo
aas
xchg
test
mov
sbb
mov
or
ror
cwde
mov
test
adc
jmp
add
jae
shr
popf
je
mov
cmp
data16
mov
fiadd
xor
popa
mov
dec
rol
push
loope
lods
and
jl
pop
das
or
stc
xchg
mov
xchg
pusha
call
add
neg
jmp
pusha
and
push
arpl
push
push
mov
mov
adc
out
test
push
jmp
(bad)
sub
mov
shr
je
pusha
mov
cmp
jns
dec
sbb
push
sbb
sub
shl
aaa
je
push
fwait
or
inc
jns
push
xchg
jmp
jnp
cmc
push
add
mov
and
sbb
jb
add
xchg
or
cmp
inc
add
cmc
or
mov
out
adc
inc
xchg
cmp
fwait
repnz
xchg
inc
inc
nop
cmp
jge
mov
cmp
or
pop
xchg
mov
add
dec
sbb
push
jmp
fsubr
cmp
(bad)
jmp
mov
jmp
dec
cmps
hlt
fwait
sub
sub
pop
call
or
aam
fld
push
pop
inc
loopne
ficomp
add
jne
mov
push
and
or
xor
ds
mov
movs
test
mov
add
inc
imul
jle
int
lock
mov
cmp
dec
lock
sub
inc
imul
test
cmp
sub
adc
pop
sbb
(bad)
or
jmp
cmp
and
jge
inc
fiadd
dec
cwde
shr
adc
inc
pop
adc
(bad)
sbb
mov
mov
xor
pop
jae
test
call
xchg
enter
ror
mov
jge
sbb
push
leave
sub
jae
in
add
(bad)
cld
aaa
add
mov
mov
loope
jge
dec
push
sub
mov
cmps
inc
xchg
xor
push
inc
clc
pop
adc
inc
dec
stos
adc
dec
and
push
ja
xchg
inc
push
inc
sbb
jmp
xor
adc
cmp
lods
cmp
sbb
push
ja
ret
xor
mov
mov
adc
mov
repnz
mov
mov
jmp
in
out
and
sbb
jmp
jo
sbb
mov
test
mov
inc
mov
pop
cmps
mov
push
jge
and
lds
push
lahf
xor
pop
jmp
mov
push
adc
add
xor
popa
loop
out
push
mov
jecxz
xor
ja
add
fisttp
push
xlat
xchg
push
mov
repnz
jmp
mov
outs
inc
xor
scas
push
dec
dec
jno
in
std
mov
mov
pop
adc
jmp
fiadd
lods
pop
dec
or
push
sbb
adc
add
adc
pushf
in
xor
mov
xor
pop
jmp
mov
int3
adc
test
(bad)
and
and
inc
xchg
jmp
push
cmp
jae
jno
sbb
dec
gs
xor
push
or
pop
push
mov
stos
pop
mov
or
push
js
pop
lock
dec
ja
jno
fcom
mov
jmp
sub
cmps
and
jns
push
inc
lea
stos
popf
jbe
push
test
pop
dec
add
cmp
push
lock
mov
retf
jno
call
push
ja
or
mov
inc
mov
xlat
lds
push
sub
xor
and
dec
vmovups
cmp
inc
add
js
cmp
dec
test
and
add
test
adc
std
push
call
in
add
cmc
add
cmp
jo
lea
ss
out
(bad)
addr16
int
ss
dec
dec
mov
outs
test
dec
stos
mov
pop
stos
pushaw
ins
ins
sti
adc
rcl
int3
fwait
inc
daa
pusha
enter
sub
fsub
xchg
cld
in
inc
dec
ins
(bad)
jmp
out
cwde
sub
pop
mov
mov
mov
adc
adc
cmp
push
xor
mov
xor
ror
mov
daa
inc
fidiv
(bad)
in
sub
pop
inc
or
sar
dec
inc
mov
or
or
(bad)
sub
sub
repnz
mov
lea
inc
and
jb
mov
pop
aam
dec
inc
mov
mov
bound
or
or
cmp
mov
fnstenv
mov
shl
pop
pop
std
fisttp
add
add
clc
xor
and
clc
int
(bad)
jne
push
out
jo
or
out
mov
cmp
div
add
bound
dec
sbb
fmul
add
lods
mov
adc
xlat
shl
add
xchg
loopne
push
add
ret
jecxz
mov
out
lods
mov
inc
add
adc
fnstsw
or
jno
sbb
dec
push
arpl
pop
push
outs
les
dec
inc
push
push
retf
xor
dec
stc
mov
lahf
or
xor
lea
dec
cld
mov
push
out
mov
jns
add
mov
adc
mov
xor
or
sbb
popa
inc
sub
inc
mov
bound
inc
or
lock
(bad)
aad
xchg
int3
lods
pop
ret
add
xchg
ss
pop
push
mov
or
cld
movs
inc
test
adc
cld
adc
js
vmread
dec
call
lea
scas
or
or
or
and
dec
or
sub
adc
jmp
inc
push
dec
fnstsw
hlt
xchg
jo
cmp
inc
(bad)
cmp
pop
push
pop
dec
add
out
mov
and
and
(bad)
loop
push
push
iret
xchg
pusha
je
pop
sti
xchg
cmp
in
xor
test
sar
ins
cmp
jne
sub
shr
mov
mov
mov
mov
mov
cmp
test
cmps
mov
cmp
jne
(bad)
rol
mov
add
pop
in
add
xor
pusha
ds
push
sbb
push
jle
jbe
inc
or
pcmpeqb
int
(bad)
inc
pop
or
inc
fmul
dec
add
dec
dec
dec
jl
(bad)
ds
mov
adc
jmp
push
mov
dec
or
mov
cmps
sbb
pusha
cmp
and
btr
adc
inc
add
inc
or
dec
or
cwde
or
mov
dec
or
inc
call
outs
xchg
cs
sbb
pop
inc
push
cmp
jne
popw
jne
or
or
mov
call
xor
or
mov
push
ret
and
fistp
and
jmp
fiadd
jnp
adc
iret
adc
or
dec
or
xor
push
adc
imul
cmp
sti
cmp
div
inc
adc
mov
mov
test
mov
jp
and
pop
enter
mov
push
sbb
jmp
pop
push
sbb
xchg
ret
dec
sbb
or
aas
leave
inc
mov
mov
push
mov
ret
push
and
add
add
loop
sub
mov
daa
ret
outs
or
xchg
inc
mov
lock
pop
lea
maxps
mov
mov
call
sub
outs
xchg
mov
popa
iret
pop
cmps
push
test
inc
adc
and
cs
cmp
pop
nop
xchg
sbb
jl
and
call
dec
sbb
mov
push
in
imul
push
cmp
icebp
or
(bad)
or
clc
and
push
sahf
ret
push
outs
xor
mov
fstp
add
xchg
iret
jno
dec
pop
adc
xchg
dec
jb
adc
cmp
mov
or
sub
inc
stos
xchg
aam
inc
out
and
je
mov
mov
xchg
lods
push
xchg
sbb
and
and
mov
ret
cmp
pop
mov
scas
ss
lahf
add
scas
mov
add
adc
pusha
and
sub
inc
push
cmp
mov
adc
das
cdq
xor
sbb
jne
cmp
inc
push
push
and
cmp
or
movs
jno
xchg
nop
popf
mov
xor
or
and
and
je
cmp
xor
out
xor
cmps
fisub
sub
dec
inc
(bad)
sub
pop
push
jne
test
fdiv
mov
sahf
test
cmp
into
(bad)
mov
mov
pop
pusha
ret
jl
add
aaa
push
xchg
dec
jns
dec
mov
inc
test
test
push
push
jno
push
movs
inc
dec
and
cmp
test
das
adc
clc
adc
ins
loopne
and
ret
add
aam
pop
les
lea
mov
call
clc
jae
les
ins
scas
push
sub
sar
xor
clc
dec
jl
fwait
jg
sbb
adc
jge
push
test
test
dec
fwait
push
xor
sub
clc
ret
call
lahf
mov
(bad)
mov
es
ret
cli
sub
inc
sar
shr
sub
cmp
push
sub
cmps
rcl
sar
(bad)
xor
mov
cmp
jo
xchg
adc
mov
hlt
jo
ja
cmp
shl
cmp
xor
push
and
rcr
pop
in
aaa
push
jmp
das
je
or
add
sbb
jge
push
push
sahf
mov
mov
mov
cmp
jnp
clc
adc
or
rol
sti
je
in
xor
and
add
push
daa
dec
sub
sbb
xchg
dec
sbb
sbb
push
cmp
fsubr
dec
and
leave
and
adc
xchg
dec
add
es
and
(bad)
fsub
xchg
dec
sbb
or
pop
push
cmp
sbb
adc
fstp
pop
inc
popa
jae
dec
arpl
imul
and
jb
ins
adc
imul
jae
outs
add
fucomip
in
imul
ins
gs
je
and
add
test
sub
jo
sti
push
mov
popa
arpl
cmp
repz
push
add
pop
cmp
repz
aas
jg
add
jns
out
pop
nop
iret
repz
sahf
jg
add
pop
cvtpi2ps
repz
aas
jg
add
out
add
nop
add
bound
pushf
adc
scas
sbb
jle
mov
fnstcw
jmp
fcmovbe
pop
ror
cld
jg
pop
or
jmp
sub
mov
sub
ja
inc
dec
mov
in
outs
push
sub
push
shl
dec
mov
sbb
fwait
test
inc
add
sub
mov
pop
xor
sar
(bad)
cmp
add
cmp
or
das
lea
ja
add
sub
mov
call
rcl
fdiv
stos
lea
mov
mov
sub
enter
sub
add
ret
jmp
shl
jle
cmp
push
mov
adc
fwait
fwait
jg
imul
push
pushf
mov
popf
pushf
pop
xor
je
lds
mov
jne
cmp
push
jl
jne
cmp
sub
shr
lods
not
sub
cld
push
jne
test
cmc
pop
dec
jmp
mov
add
pop
pop
jmp
nop
cmp
ja
(bad)
lods
lock
aaa
clc
mov
add
and
aad
inc
ret
xchg
mov
sub
shr
mov
call
adc
xchg
cmp
(bad)
aas
cmp
ja
mov
fs
shr
mov
test
test
lods
pop
psadbw
and
je
cmp
jae
mov
stos
mov
inc
and
in
push
sub
and
cmps
fs
add
cld
cdq
sbb
pop
ret
mov
cmp
add
sbb
add
ret
(bad)
xchg
add
inc
push
sub
sub
sub
sub
pop
mov
mov
xor
inc
out
jno
in
add
jo
addr16
cmp
jbe
sti
shl
sub
outs
mov
push
add
dec
rcr
mov
test
sbb
push
jbe
(bad)
cli
add
mov
cmp
aas
jmp
inc
mov
fnstenv
mov
ficom
retf
mov
add
pusha
lods
add
push
lock
mov
push
or
js
push
sbb
(bad)
inc
jecxz
xor
sub
xor
icebp
sub
jnp
mov
arpl
lods
cmp
aaa
ja
push
adc
dec
or
or
or
sti
fidiv
pusha
or
movd
mov
or
jg
or
bsf
out
leave
dec
jmp
nop
psrlq
cmp
pushw
ja
xor
add
mov
repz
(bad)
in
add
or
jg
les
leave
pushf
pushf
cmp
sbb
mov
ret
loopne
je
mov
(bad)
mov
sub
and
shl
dec
rcr
pop
call
ja
and
in
imul
leave
push
(bad)
test
retf
rcl
jle
or
dec
mov
push
mov
mov
js
pop
sbb
popa
scas
pop
ficomp
sbb
adc
test
bound
dec
jmp
retf
dec
mov
jae
mov
push
jns
clc
shl
sub
mov
dec
inc
pop
pop
xchg
cmp
sub
pop
sbb
inc
and
mov
adc
inc
les
or
movs
stos
cld
push
add
mov
adc
lahf
mov
cli
pop
cwde
fsubr
dec
cmp
and
push
and
fnstsw
mov
fisttp
in
sbb
cmps
inc
loope
pusha
dec
popf
push
sti
js
mov
sub
push
jbe
jne
sbb
mov
mul
xor
sub
add
mov
mov
jecxz
dec
fwait
or
(bad)
(bad)
aas
ror
jbe
sub
add
mov
jg
ins
(bad)
not
(bad)
jo
add
fbstp
sub
ret
add
neg
add
adc
pop
pop
pop
ret
and
or
or
push
lea
loopne
enter
pop
and
adc
sub
dec
or
sbb
xchg
shr
add
mov
lock
(bad)
cmp
adc
pop
mov
mov
shl
sar
or
inc
cmp
fidivr
sar
daa
mov
cmp
je
add
mov
les
pushf
xor
dec
int
pop
push
fcom
add
mov
fdivr
xchg
push
in
inc
mov
push
add
dec
add
inc
push
xchg
dec
je
cmp
imul
xchg
repz
or
pop
push
mov
pop
cmp
inc
movs
sub
inc
ror
sbb
int
mov
int3
rol
adc
pop
mov
fmul
push
cmps
leave
and
sub
aad
push
jmp
cmps
and
jge
pop
push
pop
gs
and
pop
ret
ficom
outs
and
cmp
and
lods
pushw
jg
movs
pop
int
push
mov
cmp
icebp
jbe
scas
je
cmp
dec
and
les
aas
add
push
inc
adc
sbb
test
add
inc
dec
cmp
inc
sbb
push
and
test
xchg
cdq
fdivr
enter
jno
or
mov
mov
or
dec
ss
ja
loope
sbb
fld
loop
mov
ret
pop
pop
push
into
nop
cmps
scas
mov
dec
int
add
inc
ins
test
push
jnp
fs
or
das
movs
dec
mov
or
pop
pop
xor
mov
xchg
add
mov
fild
rol
outs
and
and
and
inc
jl
sahf
push
inc
sub
ret
ret
or
and
or
jo
xor
daa
js
enter
imul
sbb
xor
cmp
cmp
add
movs
int3
test
add
cmp
push
push
mov
aas
dec
rcl
pushf
loop
and
ja
and
push
push
ja
and
pop
adc
mov
jns
in
jb
cmp
es
enter
mov
cmp
aam
fst
daa
dec
adc
sub
push
lea
gs
add
movs
inc
xor
pusha
jae
(bad)
and
aam
ret
cmps
sar
cwde
hlt
hlt
dec
xor
or
pop
aam
fdiv
sub
mov
test
fiadd
call
jle
or
pop
aaa
div
or
dec
push
clc
(bad)
jp
sar
stos
fimul
and
cmps
mov
xor
or
xor
fidiv
pop
(bad)
mov
add
pop
xchg
les
push
je
out
mov
out
jo
push
mov
inc
jl
lds
or
fdivrp
add
mov
sbb
push
or
icebp
mov
adc
mov
adc
iret
fsub
sar
nop
mov
movs
pop
ss
ret
jmp
adc
cmps
dec
mov
and
and
je
or
test
mov
and
lods
xor
pop
or
stos
fadd
sub
lock
jne
or
add
or
nop
or
add
das
xchg
jo
or
test
popa
out
jmp
cmp
je
mov
ret
push
fidivr
push
pop
mov
add
retf
jecxz
sub
inc
inc
xor
push
cli
loopne
fcmovnbe
adc
test
cmp
cmp
pop
cmp
add
rcl
sub
sub
adc
jb
sbb
ins
(bad)
jg
rol
sub
sbb
leave
in
or
or
jecxz
inc
ret
jp
jo
inc
push
pushf
and
test
add
sbb
(bad)
dec
loop
or
and
cmc
xor
push
push
xchg
or
add
xchg
cmp
adc
aaa
nop
arpl
jmp
js
std
xor
call
pop
mov
mov
xchg
aam
and
jmp
jae
lock
or
in
adc
ror
aas
loop
test
js
cmp
jmp
aas
xor
push
hlt
movzx
movzx
and
movs
sbb
rol
cli
or
mov
mov
add
mov
mov
pop
jmp
adc
push
or
add
je
mov
push
push
(bad)
clc
push
retf
jo
cmp
inc
ret
and
out
pop
xchg
xor
sbb
or
shl
(bad)
push
inc
add
pop
push
sar
sub
cmp
mov
loop
(bad)
mov
bound
fwait
test
sub
jae
fbstp
adc
sbb
or
and
and
push
mov
push
push
scas
and
push
or
int3
pop
mov
cmp
enter
ror
in
pop
mov
jmp
add
aad
xchg
xchg
push
adc
and
hlt
lahf
sbb
mov
out
cmp
sbb
ror
jne
cmp
xchg
sbb
sbb
ret
pusha
sbb
test
movs
ror
lea
jle
jo
or
mov
pop
je
mov
adc
add
sub
xchg
or
add
cmps
or
dec
push
xor
pop
add
xchg
sbb
outs
aas
jp
or
ror
jne
idiv
shr
test
mov
push
mov
push
mov
pop
popa
jmp
xor
mov
cmp
aam
mov
jmp
cmp
dec
push
(bad)
mov
les
pop
mov
scas
mov
js
ret
in
cmp
ins
gs
sub
push
leave
push
dec
mov
lds
call
and
cmp
inc
add
out
lea
mov
inc
add
or
sbb
add
ror
fimul
push
neg
sbb
fnstenv
xor
xchg
dec
xor
mov
inc
out
and
mov
pusha
outs
dec
pusha
pushf
sbb
jp
cmp
sbb
(bad)
and
pop
push
cmps
adc
in
call
push
inc
retf
inc
fistp
add
stc
push
mov
pop
cld
test
jne
push
sub
cli
aam
or
mov
mov
sbb
ins
mov
push
add
xor
and
jne
push
imul
and
adc
mov
mov
add
clc
jb
and
dec
add
push
nop
int3
mov
and
in
cmp
push
loop
push
clc
dec
fdivr
test
loope
inc
ds
add
sbb
xor
add
loope
push
push
push
and
loope
ret
mov
lea
leave
xchg
adc
push
dec
jmp
rcl
shr
push
das
inc
out
aaa
sub
gs
clc
or
add
push
dec
xchg
in
dec
push
push
test
inc
repnz
push
or
push
sub
add
jnp
mov
sbb
push
js
pop
push
pop
js
sbb
cmc
cmps
add
push
mov
pop
push
setno
loop
fldl2t
and
sub
sub
add
inc
push
mov
cwde
xor
dec
dec
mov
push
push
cmp
add
xchg
xchg
cs
xor
jg
jae
mov
outs
pop
mov
mov
loopne
push
call
mov
in
push
mov
cs
retf
add
cmp
lock
xchg
enter
mov
rol
(bad)
and
xchg
mov
mov
sbb
cdq
lea
cmp
mov
or
push
adc
inc
lea
loopne
stos
cmp
adc
inc
jmp
add
enter
pusha
lods
sub
pop
rol
loopne
push
or
jmp
ret
xor
mov
js
fadd
shl
push
(bad)
rcr
jp
mov
lods
stos
adc
daa
int
scas
adc
and
inc
call
xchg
ror
jbe
or
push
ss
das
(bad)
sbb
xor
cmp
or
xor
test
mov
cwde
add
add
movs
mov
and
push
test
ja
add
add
and
xor
call
movd
push
add
movq
or
fstp
add
je
cmp
add
sub
outs
dec
hlt
inc
hlt
push
pop
adc
aaa
fild
sub
xor
cmp
(bad)
sub
sbb
ret
sbb
adc
mov
in
outs
and
xor
ins
fisub
cmpxchg
dec
add
or
or
cmps
jnp
or
push
mov
cld
mov
scas
adc
inc
add
add
loope
and
adc
outs
imul
jg
adc
call
nop
sub
test
adc
xchg
loopne
inc
ror
jg
jmp
mov
jb
rep
jmp
mov
pushf
jb
and
add
xor
lock
sub
or
push
push
and
fwait
xor
add
ds
int3
cwde
outs
in
xor
push
dec
add
xchg
push
push
push
mov
pop
nop
dec
push
xchg
mov
cmp
mov
hlt
push
in
in
repz
iret
aam
mov
mov
call
iret
in
in
lock
hlt
sub
repz
clc
cld
push
inc
int3
lock
(bad)
jns
add
cli
es
nop
inc
pop
xchg
mov
sti
and
outs
(bad)
or
push
lea
jl
cld
push
jo
sub
and
std
(bad)
cld
out
adc
ret
out
mov
(bad)
mov
cmp
xor
sub
push
add
in
sbb
add
in
pop
ss
add
dec
inc
fcomp
add
jbe
mov
jmp
ins
pop
add
push
push
sahf
not
sbb
push
sahf
out
or
out
ss
sbb
adc
jns
out
adc
or
test
jns
or
add
lock
cmp
les
int3
fdiv
sub
push
add
inc
pusha
mov
pop
(bad)
ja
es
push
repnz
(bad)
pop
and
loope
shr
je
scas
pop
pop
fnstsw
adc
push
pop
lods
jg
push
dec
and
push
jg
lahf
outs
stos
pop
shl
or
jbe
jle
loopne
iret
div
addr16
jg
jg
jo
mov
mov
fmul
mov
fmul
xchg
fisubr
ffreep
aaa
mov
push
imul
inc
out
sbb
jno
mov
and
push
mov
lods
or
aad
test
xor
add
sgdtd
push
idiv
mov
test
mov
rcr
retf
ret
mov
mov
shr
test
push
int3
dec
mov
mov
test
xor
inc
mov
fwait
nop
inc
ins
loope
lock
push
pop
inc
neg
out
fcom
adc
dec
frstor
add
cmp
jge
(bad)
mov
movs
rol
mov
mov
mov
sbb
mov
add
pusha
mov
cli
(bad)
and
into
mov
sbb
loopne
iret
fsubr
call
(bad)
cli
les
adc
rol
xor
cmp
retf
lods
out
frstor
mov
and
std
cmp
jb
int3
sahf
shl
(bad)
sbb
rol
mov
dec
or
pop
jmp
lea
push
sti
push
add
xchg
pop
clc
adc
push
push
into
fiadd
dec
pop
inc
sbb
mov
int3
xor
fcmovnb
jb
cmp
lock
bound
ins
mov
jae
test
in
lods
jne
stc
fcom
arpl
xor
inc
shl
sbb
(bad)
xchg
outs
enter
iret
into
int
xor
iret
imul
enter
dec
icebp
and
in
and
or
test
inc
stos
adc
lods
push
popa
inc
mov
xchg
jle
add
or
loopne
or
push
mov
sbb
push
pusha
(bad)
cmps
jge
or
add
inc
pop
dec
sbb
push
cmp
je
and
mov
mov
inc
and
nop
fisub
sub
jmp
pop
adc
repz
dec
inc
cmps
lods
sbb
mov
jb
adc
xchg
inc
cmp
js
add
sub
jmp
pshufw
movlhps
rcr
pop
jmp
retf
xchg
fidiv
out
rol
je
retf
push
jmp
jmp
xlat
retf
cld
dec
add
jmp
bsf
add
jle
push
mov
fidiv
leave
cmp
and
and
scas
mov
rcl
ret
fst
adc
cmp
je
pop
jmp
sub
or
push
(bad)
add
outs
adc
(bad)
jle
div
retf
dec
imul
mov
ret
iret
xor
jo
pop
push
xor
call
or
push
sub
or
jmp
jle
call
cld
push
adc
cmp
je
and
cmp
je
repz
lock
je
mov
adc
iret
push
iret
jmp
fs
or
js
adc
xchg
xchg
std
cld
dec
(bad)
and
push
or
jne
icebp
xor
cmp
inc
in
pop
in
and
js
add
in
cmps
sub
mov
fist
and
xchg
or
inc
xchg
inc
cli
or
mov
std
push
push
and
push
xchg
pop
xchg
mov
push
pop
fnsave
push
test
bt
fmulp
jnp
push
movs
cmc
dec
jo
cs
push
push
fadd
pushf
xor
sbb
cld
add
iret
scas
pop
pop
jno
mov
ins
jmp
lods
add
push
test
adc
push
test
fld
idiv
lods
jp
ret
into
jns
dec
sahf
mov
push
push
clc
pop
dec
and
mov
cmp
xchg
or
or
int3
mov
mov
fisttp
shr
xor
call
cmps
mov
jb
mov
or
jmp
sbb
add
arpl
mov
lds
loop
in
lock
icebp
js
pop
add
lock
out
cli
in
xor
pop
and
jmp
shr
cmp
icebp
repz
add
enter
mov
jl
cld
aad
or
rol
sti
les
popa
call
push
ret
pop
not
jl
test
or
das
dec
or
fcomp
rcr
rol
add
int3
and
cmp
or
nop
pop
and
cmp
sub
inc
mov
push
mov
icebp
sbb
js
mov
mov
xor
std
pop
or
aas
xor
mov
add
mov
adc
pop
(bad)
push
aas
ret
pop
add
inc
aas
jo
and
test
push
or
and
loop
pop
adc
xor
adc
add
xor
pushf
mov
jge
mov
pop
test
push
push
fwait
jl
dec
xor
fiadd
inc
cmp
cmp
push
sub
pop
inc
cmps
std
inc
jg
jmp
test
add
getsec
jne
(bad)
dec
loopne
inc
fadd
cmp
test
out
jmp
cdq
loopne
push
shl
ret
mov
ins
ret
outs
sub
lea
sar
or
pop
popa
xchg
hlt
pop
sbb
mov
sbb
or
data16
add
pop
mov
cli
or
clc
ja
fs
aam
dec
jo
pop
pop
pop
retf
mov
add
(bad)
push
xor
ins
fwait
call
aam
or
push
mov
mov
add
pop
sub
cmp
sub
je
jbe
inc
or
rcl
sahf
push
lods
sub
popa
ins
pop
daa
int3
mov
dec
loope
xlat
add
add
in
and
mov
pop
ins
pop
test
jle
(bad)
xchg
mov
cmp
jle
dec
push
lods
add
fs
mov
adc
mov
inc
adc
sub
inc
and
cmp
jo
mov
or
adc
loope
lahf
add
xchg
mov
cmp
adc
mov
sbb
sbb
call
(bad)
sbb
adc
leave
mov
and
push
jb
and
leave
and
inc
in
adc
push
add
pop
mov
int
mov
test
sbb
out
div
cli
xchg
fmul
inc
in
lahf
leave
jg
nop
pop
xchg
add
leave
jns
mov
in
jecxz
fstp
dec
inc
xor
call
pop
xor
adc
add
xor
fmul
add
loopne
sahf
hlt
clc
lea
es
jae
pop
inc
loop
and
pop
add
sbb
ss
bound
cld
into
(bad)
jb
outs
and
out
cmp
fist
es
icebp
xchg
ds
jo
lea
in
iret
push
sub
je
lea
push
mov
xor
add
push
mov
or
inc
inc
mov
(bad)
and
jae
and
in
mov
pusha
pop
dec
jae
mov
adc
push
xchg
xchg
jo
and
cmp
cs
sbb
mov
mov
or
lahf
lock
out
or
es
popa
ret
and
xor
inc
mov
cs
or
or
fiadd
(bad)
call
(bad)
pop
std
mov
int
adc
sub
sub
rcr
std
add
int3
jo
pop
jo
pop
out
add
cli
movs
mov
sub
cdq
daa
icebp
movhps
adc
test
aas
adc
ret
sub
mov
and
push
mov
jmp
sbb
mov
sbb
and
shl
test
pop
rcl
ret
push
adc
sbb
push
add
pushf
and
dec
jle
dec
je
vmovups
push
outs
scas
test
mov
push
in
add
adc
pop
xor
or
pop
pushf
fild
push
mov
je
sbb
add
cmp
or
mov
mov
loop
or
ret
in
sub
xchg
aam
lahf
fimul
bound
int3
lods
inc
and
or
cmovb
loope
adc
xor
dec
repz
add
adc
inc
jne
or
inc
mov
or
fdivr
pop
pop
loope
mov
sbb
pop
pop
icebp
or
jns
and
or
jbe
or
ret
fs
mov
into
adc
sub
jmp
xchg
sub
push
and
or
or
or
sbb
js
pop
push
cmps
inc
dec
mov
int
ret
and
xor
push
clc
jg
inc
sub
inc
retf
stos
sbb
and
xchg
add
pushf
xor
push
xor
jge
ror
and
push
lock
adc
cmp
adc
sub
pop
sub
lock
add
rcr
sub
or
mov
mov
nop
stos
adc
data16
xor
xor
add
cld
or
mov
sub
adc
add
sbb
add
xlat
sub
push
xchg
cvttps2pi
jno
jge
imul
mov
daa
sbb
test
push
adc
in
ss
mov
sub
stc
ficomp
cmp
clc
push
shl
sub
adc
mov
loop
(bad)
push
out
iret
inc
sbb
mov
inc
add
sub
cmc
or
mov
sti
mov
pusha
push
xchg
or
(bad)
repnz
adc
pop
mov
ret
mov
adc
mov
nop
cmp
jb
jne
mov
pop
push
mov
or
fisub
jae
and
ss
jne
gs
jmp
sub
sbb
jecxz
pop
mov
pop
cmp
cli
test
jle
xor
div
sbb
mov
imul
pop
pop
add
sbb
jmp
rcr
cmps
or
fist
adc
pop
pop
cmp
aas
popa
sub
mov
xchg
ret
je
mov
mov
sub
push
add
test
sahf
sub
add
pop
cmp
jb
or
adc
xchg
cmp
cmp
jbe
or
or
ret
cdq
in
pop
mov
mov
scas
pop
jmp
add
sub
cmp
mov
push
sbb
jbe
xor
sar
xchg
leave
jg
xor
inc
adc
hlt
sub
add
push
sti
add
add
and
or
sbb
enter
push
inc
adc
cmp
mov
scas
lea
jo
rcl
pop
sahf
enter
or
mov
add
cmp
or
cwde
mov
mov
mov
pop
xor
pop
fs
fsub
lahf
loopne
pusha
xchg
loopne
bound
xor
adc
or
and
add
xor
inc
pop
sub
inc
je
jl
xor
xor
or
mov
and
aad
adc
test
les
add
jmp
add
push
aas
shl
movs
mov
mov
cmp
pop
dec
je
ins
mov
jb
sbb
retf
pop
scas
jbe
ss
rcr
add
ret
push
retf
pop
sbb
mov
push
or
jmp
push
pop
inc
add
xor
push
aam
xor
sbb
bound
int3
inc
imul
pop
xor
ret
add
pop
xchg
dec
(bad)
push
xor
cmp
push
adc
sub
or
jnp
data16
cmovo
aam
inc
test
iret
ja
punpcklbw
(bad)
jmp
in
test
(bad)
sbb
repz
push
shr
mov
push
movs
mov
nop
sbb
clc
push
jmp
(bad)
push
cmp
push
dec
cwde
xor
js
sub
or
add
mov
mov
or
repz
push
adc
sub
mov
cmps
push
mov
hlt
mov
mov
sbb
fiadd
fcom
jle
adc
cmp
or
into
cmp
inc
in
jbe
fisttp
nop
add
cmp
ins
loopne
or
(bad)
mov
ret
jg
mov
cwde
jb
(bad)
repz
outs
dec
pop
test
inc
cmp
mov
xor
ret
mov
push
add
pop
repnz
xor
mov
pop
jno
push
sub
pushf
mov
inc
ficom
jnp
pop
mov
in
(bad)
and
cmp
loop
lds
xlat
push
push
xlat
(bad)
xchg
imul
fdiv
xchg
xchg
dec
adc
xlat
js
push
cs
in
iret
inc
(bad)
add
mov
xor
jmp
fadd
jp
leave
adc
cmps
xor
sbb
push
push
xor
xor
dec
rol
push
mov
enter
dec
leave
push
add
inc
leave
sub
mov
add
fstp
add
push
cmps
in
sbb
jbe
imul
cmp
and
mov
cmp
addr16
pop
sub
pop
in
cmp
std
pusha
add
mov
jne
sbb
cdq
push
dec
movs
inc
jns
pop
cwde
cs
test
jle
add
mov
loop
pop
test
mov
cmp
xchg
sti
or
jmp
push
dec
fisttp
adc
adc
add
add
and
xchg
push
mov
and
inc
clc
jmp
je
xor
test
adc
dec
pop
nop
mov
xchg
jmp
push
or
outs
dec
jne
and
jg
add
dec
inc
aaa
sub
jne
push
loope
sub
pop
jb
imul
in
cwde
sub
pop
ror
mul
ins
das
in
ins
mov
out
lahf
mov
xor
es
(bad)
test
popa
fadd
and
scas
push
sub
jbe
invd
les
xchg
out
mov
inc
adc
add
daa
xchg
fsubr
mov
(bad)
jmp
int3
imul
das
cs
sub
icebp
inc
inc
popf
lea
cmps
inc
ss
fwait
xchg
into
rcr
aam
fbstp
test
xchg
mov
sar
mov
rcr
mov
jmp
pop
push
sub
pop
pop
or
in
je
add
or
ja
in
and
ror
or
adc
or
add
jno
sbb
add
cmp
scas
jo
rcr
(bad)
sub
push
ror
pop
movs
or
scas
adc
inc
mov
(bad)
fmul
inc
call
pop
ficomp
rcr
ret
push
sub
dec
ret
je
clc
and
dec
gs
and
or
test
ja
mov
pop
add
jmp
xlat
and
and
sub
pop
ss
pop
mov
or
xchg
cmc
dec
mov
movq
clc
xchg
and
jb
cmps
nop
test
or
mov
cmps
lock
adc
fisttp
adc
cmp
mov
sbb
out
ja
jne
xor
push
jbe
cmp
test
lahf
movs
movs
call
push
in
jge
fstp
pop
and
xchg
(bad)
and
jns
xor
mov
sbb
mov
aam
iret
dec
mov
dec
lea
pop
ret
jl
or
leave
push
or
mov
loop
cmp
mov
jmp
xor
push
and
and
add
fild
inc
push
loopne
aas
jbe
cwde
add
jge
add
pop
stos
jmp
(bad)
mov
push
dec
add
and
push
and
loope
(bad)
push
enter
dec
loope
sub
nop
dec
loopne
loope
loopne
cwde
mov
mov
cwde
mov
or
dec
loope
out
out
lods
xchg
push
sub
loop
jns
sbb
or
push
cld
shl
(bad)
jmp
push
pusha
ins
sbb
mov
xchg
fidivr
xchg
call
clc
adc
inc
sbb
sub
mov
cwde
jns
out
push
mov
add
pop
addr16
ret
inc
or
push
cld
jecxz
jp
jecxz
xchg
js
sbb
push
xor
adc
jg
clc
or
jge
inc
adc
fdiv
fiadd
add
sbb
inc
jp
and
sbb
lock
push
cdq
fdiv
(bad)
xchg
les
shr
inc
push
xor
sti
std
mov
shr
rcr
or
jne
lock
jp
sbb
shl
cmp
ins
pop
cmp
jbe
dec
cwde
mov
dec
jne
fsub
sbb
lahf
inc
push
enter
mov
cmp
mov
pop
adc
add
mov
je
inc
pop
mov
pop
out
mov
fwait
(bad)
add
or
fmul
sub
xor
retf
and
pop
dec
clc
sbb
push
jno
sub
mov
push
add
mov
enter
pop
leave
jl
inc
aam
inc
dec
out
sbb
fdiv
in
ins
pop
dec
ffree
pushf
mov
repz
retf
popf
es
dec
and
add
in
mov
push
std
ret
mov
inc
cmp
pop
cmps
jmp
aaa
ja
mov
pushf
mov
(bad)
sub
add
mov
or
cmp
add
shr
jg
add
xchg
iret
add
js
addr16
sbb
dec
imul
push
or
rol
jle
cmp
je
mov
shr
mov
sbb
(bad)
outs
jg
or
add
and
add
sar
cmp
js
mov
loopne
sbb
xor
cmps
shr
mov
movs
and
je
mov
add
fadd
mov
sub
idiv
sbb
jle
ins
xor
lock
push
out
and
xchg
es
int3
mov
mov
mov
pop
ror
in
into
cmp
adc
mov
mov
jg
arpl
push
lea
xcrypt-cfb
cmps
arpl
ret
sahf
imul
je
push
stc
jne
mov
cmps
push
and
sbb
xlat
sbb
in
ja
pop
repnz
fisub
out
mov
pop
jnp
movs
mov
enter
rcr
jmp
pop
retf
leave
dec
jnp
push
loopne
in
jmp
dec
inc
retf
out
add
sub
jmp
xchg
mov
out
xchg
pop
mov
stc
sub
inc
adc
(bad)
and
shl
out
loop
push
or
jnp
sbb
dec
popf
les
test
or
add
enter
push
mov
les
ins
loop
cwde
shl
or
mov
bound
cmp
daa
inc
out
mov
jle
jb
lea
push
adc
push
pop
ins
es
mov
push
pop
cmp
xchg
ins
ror
sbb
in
lods
adc
cwde
adc
and
pop
inc
xchg
hlt
mov
test
jne
or
jle
mov
push
jo
inc
adc
and
mov
sub
loope
jb
rcr
add
fs
(bad)
fnstenv
call
test
or
lea
dec
and
add
sbb
out
push
leave
push
rcr
mov
jb
scas
xchg
adc
test
and
push
cli
int
jmp
xchg
(bad)
std
je
mov
inc
sub
mov
repz
add
test
ss
repnz
inc
sbb
clc
sub
fsub
and
cdq
add
jp
(bad)
mov
add
retf
fcmovu
ret
dec
hlt
xor
sub
lock
lods
sbb
mov
lock
push
cmp
fs
fmul
jne
inc
das
(bad)
cld
hlt
jmp
adc
in
mov
or
push
mov
shr
inc
in
jno
rol
xchg
dec
into
fld
jbe
add
mov
jbe
inc
or
dec
dec
or
(bad)
mov
movs
inc
dec
data16
jg
fbstp
mov
jmp
push
pop
mov
lahf
and
or
adc
mov
or
inc
or
out
mov
add
mov
and
stos
jge
sub
pop
addr16
cmp
fimul
sbb
ret
jecxz
jmp
call
dec
xchg
sbb
xor
mov
pop
xor
hlt
ins
adc
test
out
jmp
cli
xchg
in
sub
test
and
leave
cmp
mov
jne
outs
in
fmul
mov
pop
pop
out
add
enter
or
sahf
int3
xor
push
enter
lea
or
or
fsub
adc
lock
adc
call
call
test
enter
or
fwait
adc
mov
add
mov
(bad)
push
clc
xchg
pushf
jge
cmps
test
pop
fs
jno
pop
push
adc
enter
sbb
add
shl
loope
push
cmps
dec
je
inc
clc
push
dec
push
inc
mov
cmp
adc
loope
or
outs
xchg
push
dec
fsubr
jg
cmps
adc
push
or
jle
inc
jo
jne
rcr
dec
imul
sbb
jmp
mov
js
ja
cmp
jbe
xchg
jecxz
pop
imul
pop
lea
pop
std
push
pop
inc
xor
inc
or
ins
fisub
loopne
rol
push
sbb
clc
cmp
loope
add
mov
cld
mov
ins
mov
std
inc
inc
add
cmp
push
clc
mov
add
adc
push
mov
cwde
dec
add
mov
mov
push
daa
jnp
sti
mov
adc
push
mov
stos
xchg
shrd
call
icebp
cmp
outs
jae
syscall
jmp
mov
call
jno
cmc
loopne
adc
lods
retf
repnz
(bad)
shl
cld
dec
stos
rol
shr
test
data16
int
and
not
mov
popa
je
push
lahf
sub
in
xchg
jae
dec
in
xchg
xor
push
(bad)
and
push
js
fbstp
cwde
adc
daa
jp
jb
sti
mov
icebp
movs
push
push
xor
adc
les
mov
xchg
pusha
jae
xor
and
sbb
or
lds
cmps
xchg
or
out
ror
push
sbb
push
dec
cwde
test
push
add
inc
sbb
lock
gs
clc
ins
pop
cmp
ror
fsubr
dec
repz
pop
sar
and
sbb
jb
lods
push
retf
ret
mov
std
cmps
adc
jge
lahf
ret
add
mov
sti
sbb
ins
adc
and
jecxz
dec
cmp
test
jmp
popf
or
pop
pop
movs
(bad)
(bad)
and
inc
fisttp
fld
or
add
stc
aas
cmp
clc
adc
loopne
mov
repnz
pop
mov
adc
push
in
inc
ins
addr16
pop
call
fcomp
fnstcw
xchg
push
sbb
adc
push
mov
or
daa
cs
or
jl
jmp
pop
push
movs
dec
cmp
or
push
add
(bad)
pop
sub
or
and
rcr
push
sbb
or
loopne
mov
inc
lock
inc
push
iret
gs
mov
push
lahf
pop
mov
sbb
cld
sub
pop
push
jg
repnz
xchg
pop
cmc
test
ds
sub
sub
adc
sbb
addr16
push
sbb
mov
loope
mov
fdivrp
jmp
jne
cmp
jne
cmp
je
adc
mov
and
mov
and
cs
inc
mov
daa
mov
mov
push
cmp
dec
(bad)
jmp
mov
mov
movs
lock
add
js
enter
xor
mov
imul
test
or
inc
cwde
push
xor
enter
xchg
sar
jmp
push
xchg
mov
add
add
sbb
adc
xor
test
jae
js
sbb
fdivr
in
retf
inc
mov
cmc
xor
not
pop
mov
cwde
lods
aas
ret
enter
cmp
mov
dec
or
or
movs
jmp
inc
mov
mov
push
cwde
xor
mov
cmp
and
data16
jbe
push
push
or
cs
dec
or
add
sti
dec
sub
add
int
xchg
or
cmp
push
push
push
cmp
cld
adc
js
lods
pop
or
test
dec
sbb
ret
pcmpgtb
les
out
xor
sbb
push
jae
and
cmp
jns
js
cmp
jle
and
je
xchg
cmp
and
sbb
ficom
or
pop
pop
(bad)
or
adc
inc
pop
fiadd
je
dec
sti
icebp
adc
adc
dec
cmp
adc
sbb
push
aam
mov
add
out
push
dec
lahf
cld
dec
push
inc
mov
shl
sub
jne
push
fmul
sub
pop
pop
mov
sbb
xchg
xchg
or
popa
rcl
and
and
clc
inc
adc
xlat
push
sub
pop
imul
sbb
ficom
mov
inc
sbb
mov
and
pop
cmps
or
cmp
mov
mov
or
jp
jg
jmp
pop
fadd
outs
inc
or
sbb
adc
add
dec
dec
mov
inc
mov
jne
test
std
fisub
or
pop
sbb
push
xchg
cwde
loope
test
lahf
and
or
add
mov
add
sub
or
gs
xchg
stos
mov
je
and
mov
xchg
fadd
xor
cmp
jle
add
dec
je
outs
or
and
fisttp
sbb
(bad)
js
dec
mov
inc
cli
push
adc
test
pop
test
add
xchg
and
push
push
and
add
mov
cmp
jae
clc
mov
lea
scas
cli
lods
lock
pop
or
lock
mov
hlt
adc
hlt
fdivr
or
ret
loopne
loop
fdiv
dec
mov
inc
or
ror
fs
and
add
pop
(bad)
adc
imul
xor
mov
mov
sub
mov
jg
aas
jnp
push
mov
ror
mov
mov
daa
xor
test
pusha
mov
mov
aam
shl
mov
or
addr16
adc
cmp
lock
mov
sbb
cmp
fs
cld
not
push
push
jae
jns
pop
and
ret
pop
cmp
jg
push
pop
lds
leave
cmp
and
mov
ret
loop
shl
js
retf
call
pop
dec
xor
pop
jo
pop
push
push
pop
cli
ja
loope
pop
jmp
dec
xor
and
inc
sbb
ins
mov
(bad)
(bad)
or
sub
ins
call
mov
les
fucomp
add
or
or
loopne
call
into
test
pop
aam
xchg
mov
aas
add
sbb
icebp
imul
or
dec
daa
js
test
mov
js
fild
xor
dec
inc
loopne
sub
push
inc
and
or
sbb
mov
jnp
add
push
js
cwde
call
xlat
test
(bad)
add
retf
lea
cmp
jl
mov
clc
jg
stos
jle
shl
jl
hlt
pop
or
retf
inc
dec
pop
add
sar
or
cmp
(bad)
lock
mov
test
loop
cmp
lods
loopne
adc
cmp
loop
into
cmp
clc
adc
cwde
fdiv
jb
rcr
or
mov
cld
pop
push
cmp
jle
mov
push
xlat
xchg
mov
les
dec
jo
scas
xor
stos
pushf
and
imul
stos
data16
(bad)
outs
cld
data16
jmp
mov
inc
lods
dec
das
scas
pop
icebp
cmp
jl
(bad)
mov
fld
int3
adc
add
sub
sbb
nop
out
das
js
pusha
add
cmp
mov
adc
pop
outs
inc
jnp
or
into
out
pop
cmp
xor
div
fbld
add
sbb
push
fwait
setl
je
inc
pop
icebp
pop
dec
jne
fiadd
mov
mov
jae
sub
jle
into
xchg
sub
sbb
cmp
xchg
mov
pop
imul
in
or
adc
nop
xchg
xchg
add
aam
sar
movs
pusha
stc
in
inc
mov
sub
ret
or
xor
or
adc
call
xchg
push
inc
mov
cli
call
mov
jmp
jb
mov
add
mov
or
cmp
pop
push
or
add
mov
scas
lods
call
aaa
jmp
cmp
cmp
je
popf
je
xchg
push
popf
cdq
neg
sbb
sub
xor
inc
mov
pop
xchg
ins
enter
push
jmp
dec
push
sti
push
lea
mov
test
sbb
sub
pop
data16
jb
nop
jmp
or
adc
mov
ss
pop
adc
into
lahf
rcr
and
sbb
lods
test
je
ds
push
xor
cmps
inc
lahf
push
adc
ret
cmp
call
rcl
add
inc
out
daa
mov
(bad)
pusha
xchg
out
aaa
mov
(bad)
jmp
lds
out
sbb
mov
push
and
lahf
cmps
int3
sbb
idiv
or
jmp
sbb
add
js
loopne
movs
or
inc
and
fbstp
test
je
cmp
add
sbb
jne
(bad)
push
pushf
push
pop
jmp
inc
or
adc
pop
fadd
je
mov
xchg
jb
cmp
rol
add
push
into
cmp
add
loope
adc
push
jmp
jo
pop
das
xor
dec
(bad)
imul
movs
inc
cmp
xor
xor
add
cmp
aas
push
aaa
test
push
adc
aam
push
inc
pop
inc
in
cmp
xor
and
pop
add
repnz
test
sbb
in
dec
sbb
sub
icebp
loopne
int3
inc
cld
daa
jmp
dec
xchg
hlt
cmps
cs
push
sti
adc
call
into
repnz
inc
push
pusha
or
cmp
das
push
push
dec
sbb
cmps
mov
inc
shl
pop
pop
mov
sbb
test
dec
cmp
jge
or
stc
pusha
nop
dec
cmp
jg
add
add
pop
add
mov
arpl
ret
pop
push
add
jmp
sbb
retf
iret
push
jae
mov
iret
push
pop
in
inc
adc
pop
test
jns
out
add
push
sub
fdivr
(bad)
sbb
mov
stc
adc
jb
imul
inc
jl
add
or
pop
inc
push
and
lahf
ror
rcl
test
xchg
or
jns
add
jns
inc
push
dec
add
cmp
rcr
nop
rol
dec
xor
inc
cmp
inc
je
enter
and
pushf
adc
or
iret
add
iret
in
repnz
mov
pop
rcl
mov
cmp
or
adc
or
or
xor
xor
or
sahf
dec
ror
or
inc
inc
push
and
inc
sahf
retf
or
mov
add
adc
push
dec
and
and
dec
adc
push
in
repnz
adc
push
push
push
dec
and
adc
call
or
adc
and
add
adc
dec
and
push
push
jge
pop
call
sbb
nop
inc
sbb
sbb
add
push
sbb
daa
nop
sbb
add
sbb
add
sbb
adc
fs
add
push
or
sbb
in
cdq
inc
pop
pop
pop
sti
call
pop
sub
add
add
cmp
jae
out
js
repz
pop
pop
ja
add
sbb
push
in
cmp
inc
mov
enter
cwde
out
pop
dec
and
inc
in
jns
call
or
adc
jmp
xor
or
xchg
push
loop
in
in
repnz
fsubr
jmp
in
enter
xchg
out
sub
test
adc
out
out
sbb
lock
push
icebp
xchg
icebp
nop
out
add
add
repnz
daa
fiadd
repz
call
xor
enter
jmp
cmc
cmc
jns
cdq
pusha
inc
neg
out
add
div
add
cmps
sbb
clc
clc
in
dec
mov
jmp
stc
nop
adc
or
daa
stos
add
sti
fwait
loopne
jb
add
cld
je
and
push
leave
adc
fdivr
cmp
add
jns
inc
(bad)
(bad)
sbb
and
push
sub
nop
retf
pop
sbb
xor
jecxz
shl
and
in
in
pop
enter
cmp
push
jno
jno
push
out
arpl
or
jp
call
or
dec
push
sub
(bad)
jmp
jno
dec
mov
jmp
fild
mov
imul
push
sub
add
out
jmp
(bad)
lock
hlt
scas
outs
mov
inc
dec
push
call
repz
ins
inc
repz
add
hlt
pop
push
and
add
cmp
mov
div
imul
out
adc
lds
inc
push
mov
inc
dec
push
pop
jge
pusha
add
push
sti
sti
sti
jmp
push
cld
inc
cld
cs
add
or
adc
mov
(bad)
out
hlt
jb
jp
push
jp
push
bound
xor
push
push
nop
cmps
jb
loop
das
adc
mov
inc
jecxz
in
jmp
mov
rcl
lds
mov
imul
jmp
(bad)
cli
out
(bad)
loopne
sbb
inc
dec
int
cmps
jb
sub
xlat
enter
jmp
sub
adc
cli
sub
and
in
(bad)
fadd
out
out
jmp
sar
out
int
stc
lock
or
int
out
inc
sub
enter
jmp
mov
idiv
mov
cmps
nop
out
cmc
sar
div
test
stc
mov
inc
sub
push
repnz
das
cmps
jb
loope
pop
cmp
cli
enter
cli
cli
jmp
xlat
sti
int
mul
inc
dec
int
mov
dec
data16
data16
xchg
test
sbb
loope
loope
and
add
popa
loop
or
sbb
pop
lods
xor
and
cmc
mov
in
test
rcl
aam
xchg
lods
sub
pusha
jmp
ins
jmp
pop
xchg
cmc
sub
in
in
leave
cmc
in
xor
push
movs
in
in
movs
pushf
jmp
lods
push
jge
sbb
lods
cmp
push
dec
xor
icebp
icebp
icebp
sbb
add
aaa
xchg
pushf
loop
loop
rol
ret
xlat
dec
scas
pop
call
cmc
cmc
movs
xlat
add
ins
in
dec
hlt
lods
enter
sub
cs
add
stc
jno
dec
mov
jmp
jmp
dec
dec
mov
xchg
inc
dec
or
loopne
sub
add
inc
out
jle
and
les
cmpxchg
add
xor
lock
add
in
js
icebp
add
inc
add
mov
add
nop
sub
push
or
mov
add
js
in
lea
push
dec
inc
add
sbb
lahf
out
add
jmp
xchg
and
into
pop
add
out
inc
bound
inc
rcr
and
mov
ins
aas
cmp
or
add
aaa
push
mov
ins
sahf
push
adc
mov
iret
pushw
mov
ror
or
or
repz
jno
pusha
adc
adc
leave
push
inc
ins
sahf
in
jns
xor
adc
pop
xchg
scas
mov
push
adc
js
loop
xchg
add
add
push
ss
adc
stc
mov
(bad)
(bad)
mov
dec
nop
test
xchg
xchg
cmp
pusha
dec
add
sub
pushf
or
dec
sbb
icebp
in
popf
inc
cld
pusha
xor
mov
jle
push
jae
shr
ret
and
push
mov
aad
ret
fsubrp
jle
push
push
sub
jmp
mov
punpckhbw
and
inc
popa
shl
add
out
push
ror
mov
popa
es
js
add
mov
pop
add
push
inc
in
xor
in
push
push
test
mov
push
(bad)
jb
lea
pusha
fisttp
dec
add
ror
loop
jmp
sbb
sbb
dec
xor
fwait
retf
dec
jae
fcom
std
data16
jp
gs
sbb
push
dec
pusha
sub
push
mov
inc
inc
in
dec
push
mov
push
xor
pop
div
cmp
cmp
mov
cld
or
pop
shl
mov
jl
fcomp
push
(bad)
mov
adc
enter
ins
pop
test
or
fnsave
in
ror
ret
loopne
fcmovne
(bad)
adc
les
loope
xor
inc
cmps
mov
in
push
rcl
imul
push
adc
sub
jle
adc
aas
hlt
test
push
icebp
pop
sahf
out
test
in
ins
gs
sub
fld
push
or
inc
imul
sbb
inc
loopne
icebp
mov
push
fwait
shr
dec
je
mov
pop
push
add
icebp
or
(bad)
mov
int3
mov
jge
inc
enter
and
cli
cmp
je
inc
(bad)
cmc
dec
sub
dec
add
repnz
sbb
je
test
ins
fwait
lea
shr
adc
movs
jne
dec
mov
add
call
inc
push
adc
push
imul
enter
(bad)
lsl
jmp
int3
jnp
loop
push
push
inc
shr
rcr
push
imul
adc
mov
movs
adc
cmp
or
xor
rol
push
hlt
adc
or
or
adc
(bad)
ror
aam
pop
aad
mov
lsl
cmp
and
or
out
xchg
inc
xor
(bad)
lea
jl
mov
adc
push
int
cld
fwait
repnz
sub
adc
lds
gs
jmp
movs
pop
icebp
pop
inc
mov
xlat
in
clc
(bad)
icebp
call
cmps
in
adc
or
nop
mov
cmp
sub
or
das
sbb
xor
(bad)
in
sub
cmp
adc
and
mov
stc
inc
or
jo
jo
call
sbb
div
lea
fcom
push
data16
and
sbb
push
je
leave
push
and
ins
aaa
pop
popa
scas
and
or
push
mov
push
ret
push
mov
adc
(bad)
in
je
call
cmp
sub
sbb
inc
sub
add
clc
aas
mov
hlt
pop
mov
daa
add
mov
icebp
cmp
sahf
test
push
jno
jle
mov
jne
fldenv
mov
call
loopne
iret
(bad)
int3
pop
dec
lea
aam
mov
xor
ss
sub
jmp
lock
pop
xchg
adc
and
lahf
adc
mov
imul
(bad)
fbld
leave
add
pop
push
or
std
or
lods
shl
ror
ror
int3
and
xor
fucom
adc
add
or
ret
jl
push
cmps
add
cmps
jl
mov
lock
pop
pop
icebp
dec
sub
in
or
add
adc
rep
jmp
dec
cmp
data16
mov
sbb
cli
add
xor
fnstcw
sbb
jmp
mov
and
xchg
sahf
adc
mov
mov
rep
fmul
dec
jmp
dec
lahf
jg
jne
mov
cmp
xor
xor
sbb
sub
add
adc
add
jne
mov
out
ins
mov
and
mov
je
mov
(bad)
xchg
not
jp
out
fsubr
add
pop
(bad)
into
ret
mov
jmp
pop
js
pop
dec
and
fisttp
push
fcomip
mov
fnclex
hlt
mov
adc
sub
mov
mov
add
sbb
or
xor
retf
cs
cmp
mov
xchg
out
xchg
inc
inc
jbe
pop
dec
mov
shl
cmp
push
add
jmp
mov
in
add
enter
enter
ss
cmp
sbb
dec
mov
mov
push
ins
or
pop
mov
inc
push
and
jge
add
movzx
ror
adc
xor
pop
leave
cmp
xor
sbb
rol
(bad)
mov
aas
dec
sub
xchg
jne
pop
test
cmp
mov
xor
sub
mov
lahf
dec
retf
(bad)
test
add
dec
push
call
mov
add
pop
push
mov
or
gs
ins
push
mov
push
in
test
sar
retf
sbb
in
sbb
stos
or
jb
nop
retf
and
cmp
gs
add
fs
mov
cwde
das
adc
sbb
mov
gs
cs
movs
lock
leave
test
or
and
gs
cs
mov
add
mov
pusha
sar
pop
les
sbb
pop
push
in
jne
arpl
sbb
push
gs
fiadd
lea
cmp
xor
data16
das
popa
or
push
mov
enter
add
pop
loop
(bad)
(bad)
push
or
add
popf
js
adc
add
pop
xor
inc
push
inc
call
mov
inc
movs
test
sbb
enter
adc
or
div
leave
mov
movs
fs
sub
cmp
sub
test
jns
(bad)
enter
icebp
dec
inc
mov
sub
fld
rdpmc
(bad)
mov
lock
hlt
sar
push
lods
add
mov
pop
jle
adc
in
push
fsub
mov
mov
les
mov
xchg
fisubr
das
pop
push
loop
add
and
pop
cmp
xor
or
es
mov
jg
out
inc
add
daa
in
push
shl
xor
push
fistp
call
rcl
ret
lea
lods
and
ja
lar
adc
dec
jae
add
gs
push
cdq
add
lods
test
or
cmp
pop
outs
inc
add
pop
mov
and
mov
mov
imul
mov
sub
add
lods
mov
enter
adc
test
dec
or
add
je
sbb
das
arpl
push
push
pop
push
pop
sub
es
push
push
call
pcmpgtd
ret
ret
sub
call
dec
je
pop
stc
leave
stos
inc
shl
pop
or
push
icebp
loopne
or
adc
or
in
or
(bad)
(bad)
and
push
fstcw
retf
je
adc
xchg
ror
das
jno
pop
pop
fsqrt
xor
mov
ficom
push
jle
mov
out
ret
pop
dec
lock
sub
or
sbb
dec
push
or
jmp
or
xor
bnd
daa
test
fcomp
sub
fsub
adc
add
sub
js
sbb
xchg
or
xor
movs
loopne
add
sbb
sbb
push
xor
imul
and
std
or
retf
(bad)
fcom
ror
retf
out
iret
mov
clc
or
out
retf
retf
test
movs
shr
retf
add
call
lock
hlt
(bad)
jmp
shl
movs
pop
and
dec
add
sti
push
fiadd
adc
les
aad
mov
push
pusha
ror
rcl
or
xchg
or
lods
stos
push
hlt
inc
add
loopne
mov
mov
or
gs
pusha
mov
mov
push
mov
neg
add
outs
loop
and
ret
dec
cld
mov
test
leave
or
sub
(bad)
inc
test
inc
je
cmp
loop
fwait
aam
out
add
push
and
jge
imul
xchg
inc
or
add
jl
lahf
cmp
or
sub
mov
mov
push
push
ret
call
(bad)
in
jp
icebp
inc
test
push
(bad)
push
add
jno
inc
sub
dec
out
add
xchg
mov
jle
push
push
push
adc
mov
jmp
or
out
jmp
jo
push
cs
ror
(bad)
cli
iret
mov
adc
dec
dec
add
adc
push
int
aam
lods
dec
sahf
and
fnstenv
loop
dec
adc
adc
mov
or
cwde
jp
jmp
adc
jmp
xor
lods
sub
inc
dec
(bad)
rol
movs
add
stc
mov
test
ins
push
lea
loopne
leave
je
int
dec
outs
or
push
and
popa
mov
hlt
sbb
mov
cmp
scas
or
cmp
add
push
hlt
pop
lea
inc
or
or
mov
xor
sbb
test
lods
pop
lods
test
inc
and
dec
adc
mov
cmp
mov
test
push
mov
mov
xchg
les
pusha
xchg
sbb
sbb
fsubr
jnp
(bad)
mov
add
adc
mov
mov
mov
sub
push
sub
in
sub
mov
add
les
mov
or
lods
or
xor
dec
clc
cmp
sub
cmps
add
enter
jmp
scas
out
and
push
push
data16
sbb
mov
mov
jmp
les
sbb
mov
add
pop
xor
inc
mov
ret
jg
ja
sbb
add
pop
cmc
int3
push
push
mov
inc
pop
cmp
(bad)
push
or
push
dec
xchg
mov
dec
add
push
mov
pop
sar
ss
add
(bad)
jmp
xlat
inc
scas
add
add
or
inc
and
mov
mov
cs
mov
or
sbb
mov
mov
and
call
pusha
sub
sub
js
addr16
mov
inc
add
mov
test
push
aam
jge
jge
cmp
int
pop
push
push
mov
retf
outs
fsub
jnp
shr
test
or
inc
jecxz
(bad)
push
mov
fs
test
jne
movs
cli
mov
add
xchg
mov
out
xor
stos
fistp
mov
ins
leave
push
pop
add
add
pop
dec
pop
add
loope
jp
jl
inc
jle
jmp
mov
lock
mov
jge
pushf
shr
mov
push
test
add
cmp
lods
adc
pusha
ror
ds
movsx
or
dec
imul
add
or
(bad)
mov
cmc
pop
sbb
inc
jg
mov
dec
inc
push
pop
add
mov
and
or
or
mov
or
add
or
add
push
cmp
push
stos
add
sahf
test
call
pop
popf
sbb
test
jmp
push
dec
push
adc
adc
ins
rol
and
test
in
jno
xor
push
or
push
sub
mov
adc
xor
sub
mov
(bad)
pop
jmp
jne
pop
data16
mov
pop
and
mov
xlat
popa
test
add
pusha
and
fs
push
jo
sahf
add
cs
push
mov
outs
push
add
add
fiadd
or
dec
mov
mov
test
fiadd
dec
ret
gs
cmp
aad
and
loop
mov
add
xchg
data16
xchg
nop
(bad)
iret
mov
cmp
setge
call
pop
push
leave
iret
adc
dec
and
or
sub
sub
xor
jns
push
clc
inc
out
and
jne
pop
or
sti
adc
xchg
add
neg
les
dec
ret
movs
and
ins
mov
lea
xchg
xchg
pop
in
test
fadd
out
mov
icebp
dec
cmp
test
fisubr
inc
dec
xchg
inc
adc
or
xchg
inc
sbb
addr16
adc
pop
shl
pop
bound
aas
clc
mov
mov
inc
fmul
mov
test
(bad)
out
mov
es
mov
ins
lock
test
jmp
adc
ja
test
stos
push
push
aam
cmp
movs
skinit
out
add
(bad)
sub
bound
in
sti
add
mov
xchg
ins
xchg
xor
jae
(bad)
fmul
mov
or
inc
xor
repnz
je
or
inc
ss
(bad)
call
dec
je
sbb
sub
jge
or
cmp
add
call
jecxz
add
lock
add
jecxz
stc
sub
sbb
ror
add
push
jp
(bad)
ins
adc
imul
daa
mov
mov
adc
push
rcr
les
dec
jo
jmp
imul
fdiv
jno
test
ror
jmp
fcmove
mov
das
dec
je
or
and
ins
sub
ja
add
mov
adc
mov
adc
push
mov
mov
cmp
in
stos
sub
cmps
pop
xchg
jg
mov
mov
xor
xor
adc
and
mov
test
jp
pop
cmp
push
mov
movs
call
dec
push
pop
xor
jge
mov
sub
xor
fadd
scas
call
call
ret
ja
shl
loopne
or
(bad)
mov
sar
outs
bound
test
add
data16
in
xchg
jnp
mov
je
push
push
or
shr
and
cwde
add
(bad)
dec
xor
jno
xchg
xchg
inc
idiv
push
push
or
hlt
mov
dec
xor
(bad)
dec
push
cmp
pop
mov
cmp
test
add
sub
fistp
cmp
xor
mov
clc
retf
aaa
popa
add
call
push
ins
cmp
push
mov
mov
jmp
dec
cmp
movs
sub
or
sub
sar
fdivr
ja
pop
pop
ror
mov
daa
int3
gs
in
sbb
and
leave
je
das
or
shr
rcl
daa
in
rcl
or
neg
adc
fadd
ficomp
jo
dec
jnp
adc
lock
mov
add
js
adc
arpl
lea
sbb
adc
pop
xlat
push
mov
pop
mov
sbb
jl
jle
je
add
enter
je
dec
test
loope
or
jmp
repz
adc
jg
int3
xlat
xor
ret
adc
jmp
call
push
icebp
lds
push
pushf
pop
imul
mov
imul
push
and
mov
xor
jbe
xor
addr16
add
xchg
dec
cmp
hlt
ret
rcr
in
jle
lea
cmp
pop
mov
adc
lock
jmp
mov
mov
pop
jecxz
cmp
dec
xchg
es
test
out
adc
dec
mov
xchg
ret
mov
sub
inc
ror
xchg
cld
sti
inc
and
movs
and
sub
ja
push
push
inc
inc
add
push
mov
ds
mov
inc
cmp
fsubr
sbb
jae
fnstcw
xchg
pusha
and
scas
jo
imul
gs
cli
stos
xchg
adc
jl
add
and
stc
mov
inc
xor
aad
int3
add
pop
je
test
adc
or
and
jmp
imul
or
or
sub
dec
popa
sub
(bad)
daa
sbb
(bad)
movs
add
jmp
neg
adc
neg
jns
push
neg
add
pop
ins
sub
and
mov
nop
sub
mov
inc
aad
aad
(bad)
mov
loopne
movs
stos
out
call
mov
push
push
xchg
sbb
sbb
cs
jle
add
jecxz
mov
mov
mov
scas
push
inc
and
fbstp
sbb
add
ss
div
je
dec
jmp
(bad)
or
(bad)
cmc
push
xor
and
mov
jl
lock
sub
or
jmp
xor
sub
shl
mov
sbb
jmp
scas
add
and
add
mov
mov
push
or
push
xchg
push
mov
shr
inc
loopne
dec
xlat
mov
inc
push
outs
out
fisub
mov
rcl
or
retf
test
xchg
add
sbb
mov
adc
lods
je
add
mov
dec
cdq
inc
push
push
ins
test
fisubr
add
aas
cmp
je
sbb
push
sbb
movs
and
movs
mov
dec
adc
jl
jmp
mov
xchg
mov
js
xor
je
xor
mov
or
adc
pop
stos
sahf
data16
or
push
xchg
add
ficomp
pop
ret
inc
jecxz
jnp
arpl
cmp
push
out
ss
ss
test
cmc
cmp
clc
and
out
inc
or
imul
arpl
pop
sbb
leave
pusha
sbb
add
outs
fistp
or
mov
push
add
test
mov
ror
add
add
inc
inc
inc
inc
cmp
or
lods
pop
dec
mov
leave
pop
mov
movs
dec
or
hlt
xor
hlt
pop
loop
cmp
xor
adc
cmp
std
cmp
neg
cld
jmp
push
push
pop
pop
mov
ror
js
and
push
push
outs
or
cmp
pop
sub
inc
pop
cmp
add
or
test
sub
push
push
pushf
mov
gs
inc
or
xchg
shl
sbb
clc
js
and
retf
push
pop
and
xor
jge
mov
sar
sti
test
adc
sub
test
and
inc
adc
sbb
jl
shr
mov
and
sub
hlt
ins
jmp
push
pop
sbb
fadd
(bad)
jecxz
enter
or
loope
pop
adc
push
outs
push
push
fldcw
loopne
lock
outs
rcr
or
data16
in
stos
jae
add
dec
add
shl
or
pop
jmp
pop
xor
mov
xchg
jb
add
jo
ja
pop
and
cmps
xor
cmp
push
xchg
inc
pop
cmp
in
sbb
or
ja
movs
mov
inc
cmp
pop
mov
xchg
div
sbb
xchg
test
psubusw
or
or
or
adc
or
jns
cld
and
cmps
out
mov
jge
pusha
cmp
sar
adc
push
test
div
xor
mov
je
push
mov
sub
add
cwde
add
inc
or
sti
jbe
int
or
pop
pop
or
pop
shl
mov
cmp
or
mov
lock
mov
in
push
dec
popf
xor
inc
shr
loopne
dec
fs
sbb
fcmovnbe
add
cmp
ins
jge
test
add
jmp
add
rol
sbb
xor
arpl
pop
mov
and
pop
jge
ds
ja
sub
or
sti
jb
idiv
pop
je
cdq
sub
std
push
inc
push
push
lock
sbb
cwde
pop
mov
cmp
jne
mov
inc
loopne
scas
adc
loopne
test
jmp
pushf
arpl
clc
cmps
cmps
imul
or
fld
inc
jns
push
jnp
mov
sbb
test
or
jb
aad
xchg
add
or
es
mov
cmps
push
xchg
inc
mov
push
dec
or
jno
jmp
adc
loopne
or
or
inc
sbb
mov
add
adc
in
ror
jmp
iret
jo
push
add
adc
loopne
push
push
iret
jmp
shr
fidivr
scas
shl
pushf
mov
popf
inc
movs
daa
push
push
push
mov
imul
mov
out
call
in
jge
mov
sub
push
pop
test
or
mov
push
hlt
or
cmc
or
xlat
or
jae
add
sar
pop
test
loopne
mov
loop
push
sub
dec
in
mov
add
sar
test
fiadd
(bad)
loopne
imul
dec
je
mov
add
cdq
sub
sbb
sbb
mov
xor
aad
pop
jae
idiv
dec
stc
int3
add
out
lea
mov
stos
adc
jge
jl
xor
push
mov
shr
sbb
lds
mov
xchg
int3
dec
or
pop
sub
sub
mov
pop
ss
dec
mov
syscall
in
add
add
(bad)
adc
cmp
add
mov
cmp
inc
lods
mov
xor
push
inc
lock
inc
fnstsw
hlt
ret
test
jg
and
mov
test
sbb
dec
mov
hlt
not
add
dec
outs
sub
mov
add
add
and
push
or
sbb
shr
mov
in
inc
sub
lea
jns
xor
add
xor
mov
sbb
inc
sbb
dec
push
pop
cmp
add
neg
jb
ret
adc
(bad)
cwde
jge
xor
cmp
mov
or
stc
(bad)
je
test
not
jp
jnp
pop
mov
popa
fld
push
stos
mov
rdtsc
shr
lds
jae
inc
mov
shl
pop
lock
shl
or
pusha
cmp
mov
out
cmp
hlt
add
xchg
jmp
push
push
aaa
repnz
push
push
gs
sbb
or
test
jge
or
mov
add
enter
pusha
test
cdq
add
mov
out
sub
and
fimul
(bad)
adc
push
jmp
sbb
ror
jo
js
or
outs
push
or
es
adc
popf
into
xor
xor
xlat
push
sbb
(bad)
and
call
push
pop
pop
sbb
dec
ja
add
fsubr
lods
jbe
sti
scas
mov
cmp
sbb
fisubr
lock
sbb
mov
icebp
pop
mov
inc
push
and
adc
dec
jo
popf
mov
sub
test
adc
jns
test
jg
push
cmp
cld
xor
xor
imul
xchg
arpl
sar
xlat
jmp
xchg
dec
clc
push
inc
inc
push
jno
adc
loopne
push
jo
shl
or
fadd
movs
bnd
inc
push
call
mov
xchg
adc
in
mov
es
add
iret
and
push
mov
outs
clc
cmp
ja
int
and
hlt
adc
mov
dec
sar
int3
lds
mov
fs
lods
jecxz
(bad)
push
scas
cmp
mov
dec
retf
lea
sbb
inc
mov
arpl
call
cmp
dec
shr
push
jge
push
data16
and
mov
sub
mov
mov
ret
(bad)
add
lock
mov
or
lods
xchg
sub
std
stos
je
call
dec
pop
aad
cmp
movs
or
add
or
mov
scas
push
imul
jge
sahf
xor
outs
mov
adc
ficomp
sti
cmp
xchg
xchg
rcr
clc
not
test
sbb
mov
inc
ret
shl
aas
jb
(bad)
or
out
push
push
icebp
data16
ret
icebp
inc
call
stos
push
cmc
mov
cs
inc
ins
(bad)
(bad)
mov
test
sbb
outs
dec
adc
xor
sti
loope
jb
out
in
stos
mov
mov
es
fistp
mov
push
push
out
cmp
xchg
and
add
xchg
lea
xchg
cmp
sub
test
ja
fld
mov
ss
hlt
inc
mov
ret
jl
ds
mov
mov
and
test
push
jmp
iret
js
cmp
mov
aam
sar
imul
add
loopne
cmp
xchg
les
cmp
retf
wbinvd
enter
fistp
pop
in
xchg
add
(bad)
cmp
es
pusha
scas
xor
aad
inc
mov
call
js
jle
xchg
ret
ret
popa
jne
mov
add
push
arpl
out
jnp
in
hlt
push
jmp
mov
ret
mov
mov
gs
ret
fs
lods
dec
sbb
or
add
xchg
(bad)
movs
call
mov
sub
stos
and
xor
cmp
sbb
mov
cmp
push
mov
movs
data16
lds
jbe
cs
push
inc
jns
dec
out
push
sub
loopne
pop
xchg
pop
ror
push
mov
and
sbb
push
icebp
outs
dec
shr
sub
mov
sub
les
imul
xor
stos
xchg
mov
dec
cmp
shl
adc
into
add
push
mov
fistp
loope
ret
mov
mov
dec
hlt
mov
lock
popf
dec
int
xor
mov
sar
or
mov
cdq
in
dec
jle
jne
xchg
mov
inc
inc
mov
(bad)
mov
add
mov
shl
test
fsubr
sub
mov
push
inc
pop
xchg
push
popf
sub
sahf
test
call
call
mov
adc
push
fld
and
sbb
rol
fcmovnbe
xor
cmc
ds
xor
lds
shl
or
icebp
ret
xchg
nop
push
mov
push
cmp
sub
mov
pusha
or
add
add
loope
rol
sbb
stos
(bad)
adc
mov
sbb
add
jbe
add
mov
sub
sti
cmps
mov
stc
retf
jae
clc
ds
(bad)
xor
retf
mov
mov
lahf
retf
xor
cmp
test
xlat
pop
add
or
addr16
jmp
test
fwait
add
lock
scas
cmp
jmp
sub
or
xor
xlat
push
call
mov
mov
push
and
lea
sbb
jg
jmp
in
imul
aas
mov
pop
arpl
lock
mov
sub
fucom
popf
adc
(bad)
xchg
jmp
scas
ror
pop
or
test
or
push
push
mov
dec
mov
ds
sub
and
xor
xor
inc
je
cmp
xchg
int3
test
popa
and
add
pop
pop
ret
mov
or
pop
xchg
mov
inc
(bad)
es
imul
xchg
rcr
je
movs
and
mov
or
fild
add
inc
or
dec
cmp
add
push
jp
mov
hlt
inc
add
mov
add
in
not
test
xchg
push
sbb
mov
not
inc
loop
pop
xchg
mov
pop
ss
iret
xchg
mov
and
cmp
pop
or
push
add
push
mov
or
sub
xchg
inc
adc
mov
dec
cld
add
por
xor
or
xor
push
cmp
mov
sbb
mov
mov
sar
mov
das
jl
push
les
dec
mov
pop
lea
mov
add
cmp
mov
pop
or
into
adc
sub
cld
out
fld
pop
jae
daa
ret
adc
jne
mov
pushf
add
scas
mov
lea
adc
xchg
add
cwde
call
cmps
xchg
js
pop
or
or
sbb
mov
jo
push
popa
mov
pop
ins
inc
jl
in
adc
mov
imul
sub
xor
inc
push
mov
mov
(bad)
and
rcl
xchg
pusha
lock
cmp
add
pushf
ret
and
mov
adc
jg
mov
push
cmp
in
(bad)
push
mov
push
xchg
retf
rol
pop
xor
add
aaa
ret
push
shl
sub
xchg
add
xchg
cmp
dec
push
call
cmp
in
xchg
(bad)
mov
push
cdq
or
xlat
pop
retf
leave
xlat
xlat
mov
xchg
lods
ret
add
sbb
sub
mov
hlt
cmps
lock
jo
and
add
out
sbb
jo
push
inc
shl
xchg
imul
adc
inc
add
sub
iret
add
ins
inc
dec
pop
push
cmp
aam
imul
cmp
ins
mov
push
mov
sbb
mov
add
pop
ret
cmp
scas
pop
jb
push
or
loopne
movs
fcom
add
add
pop
and
rcr
gs
dec
sub
xor
jb
in
cmp
inc
inc
pop
push
mov
dec
inc
mov
pop
mov
push
add
cmp
xor
push
push
fwait
adc
pop
pop
and
push
dec
cli
lock
xor
xchg
lods
adc
adc
aas
sbb
sbb
mov
daa
fld
push
pop
mov
dec
mov
pop
cs
push
ins
mov
shl
cmp
jnp
inc
push
mov
add
sub
dec
sti
iret
ds
aas
sbb
pop
sub
xchg
or
or
movs
xor
adc
pop
test
ffree
ret
inc
mov
inc
cdq
xchg
rcl
ret
les
sbb
std
inc
xor
jo
inc
xchg
xchg
test
scas
inc
push
test
cmp
out
stos
pop
leave
xor
push
push
mov
sub
ins
fbld
xchg
xor
add
jae
adc
push
outs
push
repnz
sbb
add
pop
push
and
pop
outs
cld
add
or
jecxz
and
xor
in
adc
ret
mov
ja
test
or
mov
dec
loopne
pop
lea
call
js
gs
pop
sbb
call
movs
lods
or
mov
rcr
xchg
xor
xor
repz
cmp
adc
test
or
adc
jle
in
retf
sbb
outs
fsubr
sub
std
dec
add
inc
loopne
adc
movs
mov
xor
sahf
adc
push
cli
lea
inc
and
loop
xor
or
shl
or
lea
or
in
jnp
stos
add
rcr
mov
cmp
pop
mov
sbb
add
cmp
and
pusha
and
xchg
xor
cs
jl
jecxz
sbb
push
push
popa
gs
push
push
inc
(bad)
pop
adc
test
mov
test
pop
mov
rcl
jmp
fiadd
or
ins
or
ret
mov
push
jne
push
mov
call
jecxz
fmul
xor
or
inc
sub
xchg
out
cld
push
inc
stc
outs
ret
xchg
pushf
dec
and
retf
data16
fdivr
push
sbb
or
mov
cmps
je
(bad)
adc
push
ds
push
jmp
mov
lea
push
pop
imul
xchg
add
add
adc
fist
ret
or
jo
js
sub
les
push
mov
and
nop
rol
push
sub
xchg
mov
adc
or
inc
loop
jo
jg
inc
push
mov
cmp
add
inc
loopne
imul
int3
sbb
shr
inc
idiv
push
imul
(bad)
mul
adc
pusha
mov
xchg
stos
dec
dec
pop
scas
mov
sub
cdq
xor
(bad)
pop
fidivr
mov
in
pusha
outs
add
and
push
pop
mov
add
(bad)
sti
rep
pop
xor
inc
adc
bound
pusha
mov
dec
dec
sbb
push
mov
call
push
sbb
nop
jp
cmp
imul
dec
mov
inc
add
hlt
push
jbe
or
jae
lock
cmp
jge
mov
leave
ficomp
loop
sub
inc
jmp
xor
ss
or
mov
mov
mov
push
ret
mov
sbb
repnz
jmp
dec
adc
cmp
pop
push
mov
xor
xor
mov
and
cmp
xor
sbb
push
sub
dec
pop
inc
xchg
or
call
xor
arpl
iret
inc
ret
add
cmp
scas
push
repnz
inc
into
xor
cmp
cmps
cmp
cld
call
jmp
les
adc
adc
iret
in
pop
mov
mov
lods
lea
push
pop
jb
dec
mov
jg
sbb
pop
call
out
jb
je
mov
mov
test
je
jmp
mov
div
arpl
push
add
mov
mov
dec
or
inc
(bad)
stc
sbb
jae
push
pop
mov
cmp
sar
pop
nop
ret
jle
pop
cmp
ror
and
add
bound
inc
jbe
imul
lea
daa
add
dec
inc
or
ds
pop
mov
jnp
icebp
adc
inc
push
sub
inc
cmp
push
push
and
jbe
hlt
cmp
cmp
mov
inc
js
xchg
add
mov
mov
push
or
jge
xchg
call
xchg
in
adc
cld
scas
jmp
add
icebp
imul
mov
sbb
rdtsc
test
mov
cdq
pop
jmp
(bad)
mov
mov
mov
push
inc
and
push
clc
popa
ret
xchg
in
inc
stc
test
and
push
pop
imul
pop
xchg
ret
adc
push
and
test
xor
pop
leave
out
popf
jno
retf
mov
pushf
xlat
mov
stos
push
push
outs
mov
or
int3
aam
inc
mov
sar
cwde
sti
push
jb
loop
cld
nop
push
lea
retf
push
ror
push
cmp
cmc
push
test
jecxz
(bad)
and
aam
push
shl
mov
lea
icebp
pop
sbb
mov
push
bound
and
or
leave
rol
pop
push
add
sbb
arpl
push
push
fist
and
jo
hlt
fist
daa
jne
call
in
scas
addr16
push
pop
xchg
inc
je
enter
aas
and
(bad)
and
push
or
adc
xchg
cmp
sahf
pop
fdiv
loope
cdq
(bad)
data16
inc
add
or
push
pop
data16
push
rol
cmp
je
push
push
scas
jmp
jo
jl
push
push
sub
outs
outs
addr16
push
xor
jne
adc
data16
outs
daa
sbb
jne
adc
or
in
adc
pop
cmp
clc
or
cmp
es
adc
sub
inc
and
test
adc
or
or
outs
push
ror
popf
pop
adc
bound
and
enter
lea
lock
inc
jl
adc
sbb
add
(bad)
lock
or
sbb
lea
xchg
jbe
push
mov
push
loope
jne
and
push
adc
stos
pusha
in
in
test
xchg
jle
sbb
lds
add
das
jb
or
or
sub
dec
xchg
jecxz
pop
retf
push
daa
or
in
sahf
jbe
xor
xor
sbb
in
mov
mov
inc
sahf
cmp
mov
and
and
popa
add
imul
inc
neg
sbb
push
not
push
and
ins
push
pop
inc
mov
ja
push
lock
adc
add
mov
add
dec
loope
inc
cmp
cmp
mov
ins
xor
in
inc
push
sbb
sbb
push
sbb
or
leave
sub
pop
adc
jbe
adc
stos
and
sbb
xchg
lock
out
mov
push
scas
dec
jnp
pop
xchg
sbb
push
mov
add
jl
mov
adc
mov
outs
pop
sbb
stos
sub
mov
mov
sbb
xchg
xor
and
in
jmp
dec
xor
pop
jl
xchg
adc
pop
lods
sbb
scas
add
mov
adc
push
add
ret
ffree
and
cmp
inc
std
jno
clc
sbb
pop
adc
mov
repnz
aaa
std
in
jnp
repz
mov
jl
mov
add
stos
push
fst
add
or
ins
cmp
xor
or
and
push
daa
test
dec
out
es
push
shl
jge
add
cmp
adc
ins
mov
pushf
push
stos
mov
sbb
push
ds
inc
fisttp
ret
add
gs
mov
xchg
dec
or
imul
imul
and
adc
je
rcl
jo
sbb
shl
xor
dec
sbb
or
xor
cmc
ins
inc
rcl
and
mov
jne
xchg
mov
push
clc
cmp
jl
xor
jg
ret
jae
pushw
cmp
loopne
pop
push
jbe
lods
cld
add
shl
std
ins
push
push
mov
pop
loop
inc
and
hlt
retf
mov
sbb
adc
ror
sbb
aaa
mov
inc
loopne
cmp
xor
rol
xchg
jne
ret
aad
enter
pop
cmp
inc
clc
add
fdiv
ret
je
push
and
mov
xchg
sbb
shl
sbb
mov
adc
rcl
enter
mov
retf
aam
mov
stos
adc
mov
sub
js
adc
stos
and
pop
adc
leave
pop
dec
int3
mov
push
mov
add
jo
xchg
fisubr
clc
jo
add
(bad)
adc
aas
lock
inc
pop
add
cmp
adc
in
dec
sti
adc
(bad)
adc
inc
adc
sub
pop
dec
xor
sub
jo
and
lods
add
ror
shl
and
cmp
out
lods
adc
cmp
mov
push
pop
mov
mov
pop
jo
inc
sbb
xor
jbe
adc
push
add
mov
cmp
jle
neg
clc
loopne
shl
mov
out
test
jmp
xchg
repz
movs
pushf
add
out
cmp
push
sbb
(bad)
add
ins
js
xor
cmp
stc
sub
gs
cmp
adc
xor
pop
inc
mov
mov
pushf
push
adc
ins
mov
(bad)
stc
mov
movs
std
or
dec
sbb
pop
fisub
ja
adc
retf
jp
adc
sub
dec
xchg
and
mov
out
in
sbb
and
sbb
adc
inc
adc
sahf
pusha
jmp
sbb
clc
or
xor
call
in
ins
or
std
inc
add
sbb
and
popa
repz
shl
dec
int3
cmp
std
mov
sbb
jmp
xchg
out
(bad)
jnp
lea
pop
xor
das
and
inc
inc
movnti
cwde
xchg
mov
and
cmps
xchg
dec
sub
adc
xor
push
xchg
cmp
adc
add
cs
xor
dec
push
mov
sub
aaa
inc
xchg
pop
lods
clc
cmp
lock
pop
pop
lock
and
popf
mov
jmp
jmp
fbstp
sub
cli
add
mov
mov
push
cmp
les
and
call
or
add
lds
push
mov
add
fwait
cmp
and
xchg
xchg
inc
mov
scas
(bad)
(bad)
pop
retf
addr16
in
jl
adc
jl
inc
pop
clc
add
sbb
ja
stos
jg
sbb
pop
and
fstp
or
and
adc
jl
jb
(bad)
int
aam
or
clc
sbb
xchg
test
pusha
dec
mov
in
jo
popf
add
js
inc
rol
lock
sbb
mov
mov
jp
jb
sub
pop
mov
jl
shl
jnp
cmp
or
or
push
push
jmp
or
jne
les
call
cld
push
xor
push
dec
cmp
pop
adc
ja
inc
add
cdq
daa
jno
ins
gs
hlt
in
movs
cmp
cmp
iret
sbb
adc
ins
scas
xor
mov
inc
(bad)
in
and
mov
jmp
jb
aam
inc
mov
loop
dec
dec
pusha
fcomp
inc
rcl
dec
or
sbb
sbb
mov
cmp
shr
ins
cmc
sahf
mov
xchg
ret
mov
mov
cmp
dec
sar
iret
sub
xor
(bad)
and
lds
cmp
sbb
jns
mov
mov
jmp
push
jmp
enter
mov
arpl
stc
(bad)
iret
and
pop
and
jl
pop
jl
and
cli
pop
test
or
dec
outs
inc
inc
jle
lods
jne
mov
jne
call
and
push
les
add
shl
inc
pop
fs
dec
add
and
call
sub
je
cmp
je
cmp
je
inc
cld
xor
mov
fild
icebp
add
or
and
inc
inc
inc
jl
mov
adc
jp
dec
(bad)
jl
ror
ins
sub
in
adc
daa
test
dec
je
push
sbb
or
and
shl
add
mov
nop
mov
cmc
sar
xchg
mov
adc
pop
inc
cwde
aaa
inc
push
clc
add
or
jg
jecxz
imul
outs
pop
imul
jmp
fcom
pusha
or
je
sub
sbb
ds
fwait
inc
add
cmp
shr
sbb
aaa
stos
sub
inc
and
sbb
iret
xor
jmp
mov
push
jo
add
fmul
pop
into
and
rol
jno
push
push
dec
les
out
push
dec
pop
sbb
mov
adc
ss
dec
cmp
je
outs
idiv
lods
push
cmp
add
or
pop
dec
mov
clc
add
movs
push
inc
and
fcom
push
fadd
imul
int3
(bad)
or
xor
std
inc
xchg
adc
inc
je
dec
jae
mov
jb
inc
mov
gs
mov
dec
loope
sbb
js
mov
cmc
test
add
jle
push
out
mov
fld
sub
cmc
or
stos
(bad)
pop
retf
inc
enter
sub
push
xchg
add
and
lea
lea
or
or
adc
push
inc
int3
xor
aas
in
ds
or
push
sbb
mov
pop
sub
nop
inc
push
inc
jo
cmp
in
sub
rcr
sbb
call
add
adc
pop
inc
jns
pop
mov
add
cmps
dec
and
push
add
sub
imul
add
out
rep
sbb
je
and
sub
mov
mov
xor
out
or
jmp
push
fcmovnb
rcl
mov
ins
enter
imul
sub
and
xor
inc
imul
push
inc
idiv
movs
jno
push
lds
in
fmul
(bad)
mov
je
sbb
inc
les
pop
fist
adc
adc
punpckhbw
or
repz
je
pop
jb
cmp
mov
cmp
push
xchg
nop
cld
jge
cmps
or
mov
clc
jns
push
or
and
adc
shl
idiv
pop
push
inc
adc
(bad)
xor
adc
adc
jo
xor
icebp
fistp
xchg
in
into
inc
aaa
dec
push
inc
in
test
jns
mov
idiv
cmc
jbe
mov
inc
push
hlt
add
ds
rcl
cmp
xor
add
aam
adc
pop
sub
(bad)
loopne
lock
adc
sbb
sbb
call
pop
arpl
push
aaa
sub
push
into
push
fbld
add
and
mov
hlt
popf
lock
jmp
cmp
ret
retf
mov
mov
push
pop
cmp
je
inc
cmp
sahf
test
jle
sbb
and
dec
mov
and
sbb
arpl
pop
mov
pop
mov
inc
das
(bad)
rcr
pop
adc
aas
mov
inc
je
xchg
add
jb
mov
jl
ds
cmp
mov
or
xchg
sti
adc
je
jbe
xchg
xchg
or
adc
mov
mov
jae
or
cmp
addr16
dec
xor
push
pushf
pop
mov
lods
inc
and
shr
pop
push
or
xor
or
inc
or
jge
inc
xchg
jo
or
or
movs
loop
and
stos
dec
out
pop
xor
iret
out
mov
(bad)
cli
(bad)
or
push
pusha
pop
push
push
and
mov
aaa
lahf
jle
(bad)
cmp
jl
(bad)
and
call
and
out
in
(bad)
ja
test
mov
(bad)
mov
xor
test
xor
aaa
pop
inc
punpcklbw
ret
adc
mov
jne
adc
inc
out
stos
loopne
push
jge
pusha
imul
pop
push
mov
pop
add
cwde
sub
and
add
push
jle
xor
js
dec
shr
lds
jbe
lods
add
xor
xor
int3
jns
jae
rol
push
jecxz
mov
push
dec
pop
mov
jle
cmps
popa
or
int
lods
dec
and
push
jne
(bad)
pop
xor
test
fdiv
sbb
inc
inc
sbb
ficom
cli
mov
pop
inc
sbb
xchg
sbb
sbb
aam
mov
mov
inc
cmp
sub
inc
iret
sbb
inc
sbb
pop
push
mov
lods
cmps
mov
mov
ins
pop
ret
xchg
stos
push
les
add
add
pop
ins
push
jg
push
sar
and
(bad)
mov
loopne
icebp
inc
push
jno
jmp
sub
ds
ffree
add
data16
sub
fadd
sub
jmp
jmp
pop
add
or
dec
add
push
ds
push
jmp
or
es
js
push
pop
lea
sbb
jne
sbb
popa
xchg
jle
cli
mov
mov
hlt
and
xchg
mov
and
jne
push
mov
ja
pop
jbe
push
cmps
mov
out
lea
ja
push
popw
push
fs
into
out
add
inc
add
xor
fidiv
mov
add
jmp
cmp
jae
push
lahf
add
fneni(8087
or
fdiv
lock
fnsave
xchg
es
lods
jmp
imul
add
loope
cmc
retf
or
loopne
inc
mov
inc
adc
pop
or
xchg
jl
mov
or
sub
push
pusha
jbe
cmp
inc
gs
into
pop
inc
or
enter
or
add
addr16
ret
dec
iret
aaa
and
add
neg
fcmovnu
and
jg
pop
jle
and
lods
inc
or
mov
das
mov
mov
ret
nop
xchg
outs
and
inc
cmp
and
int3
dec
int
pop
jmp
mov
stos
and
sub
cmps
clc
jnp
sbb
inc
popa
je
pop
mov
pop
cmp
xor
js
sbb
mov
add
clc
shl
lods
adc
dec
pshufw
add
sub
pop
push
cmp
pop
add
in
stos
push
sbb
dec
or
inc
cmp
jne
cli
pop
pop
xchg
sahf
test
cmp
sar
xor
test
add
in
add
xor
imul
sahf
sub
pop
sbb
ins
scas
push
retf
idiv
and
es
pusha
or
add
jg
push
out
xor
fdiv
ret
call
mov
mov
mov
mov
mov
inc
jmp
sbb
xchg
and
mov
mov
into
(bad)
lods
sub
push
sub
or
pop
add
mov
cld
jae
xor
adc
(bad)
xor
in
outs
push
xor
pop
aam
inc
js
cmp
je
add
out
jo
(bad)
push
cs
push
sub
inc
(bad)
add
mov
stos
ficomp
add
dec
adc
pop
push
rcl
push
cli
and
pop
leave
xchg
or
dec
xchg
or
jle
je
cmp
cmp
and
call
daa
jbe
dec
or
xchg
xor
inc
lock
mov
and
adc
(bad)
mov
in
int
ss
call
xor
add
push
out
daa
push
dec
mov
sub
cmp
loopne
verw
rol
and
pop
or
push
or
push
or
fbld
or
and
adc
loope
popf
xchg
call
aad
dec
leave
push
in
add
js
enter
mov
mov
aad
ror
add
sbb
rol
rcl
std
xor
or
outs
adc
push
lea
dec
mov
es
dec
je
pop
sub
jnp
jecxz
rcl
jmp
adc
movs
test
fwait
push
add
pop
sbb
data16
jmp
jns
ins
pop
pusha
(bad)
jne
and
add
push
lods
sub
popa
je
mov
or
push
push
retf
je
or
imul
mov
add
jne
test
add
(bad)
cdq
xor
sbb
jne
push
or
dec
xor
jg
push
push
shl
cmps
jmp
or
inc
xchg
jne
gs
pushf
cmp
xchg
pop
push
js
cmp
xlat
sbb
sahf
cdq
mov
pop
pop
pop
rcl
add
call
mov
mov
inc
loopne
mov
fsubp
dec
fdivr
popf
mov
add
std
test
jnp
cmp
rol
adc
into
jnp
test
cwde
inc
aad
fistp
in
pop
ret
call
push
add
add
or
adc
mov
int3
sub
pop
in
inc
push
mov
in
sub
sub
add
leave
xchg
aad
cdq
dec
and
xchg
add
lea
(bad)
mov
enter
sti
ins
jle
cmp
je
xor
std
mov
jge
call
data16
rcl
dec
sbb
pop
mov
hlt
imul
mov
add
add
mov
push
and
dec
push
sub
sub
inc
inc
test
shl
ror
sub
out
mov
xchg
mul
jnp
cmp
pop
lea
mul
xor
stos
xor
and
sbb
push
stos
and
and
ja
popa
push
iret
rcl
cmp
adc
clc
ins
lds
repnz
inc
imul
and
jmp
mov
jne
or
mov
jl
and
imul
in
add
daa
iret
cmp
in
jmp
jno
push
movs
push
or
mov
adc
xchg
or
sub
push
add
xchg
cmps
mov
jb
gs
pushf
sub
and
add
adc
sub
rcl
jecxz
inc
sbb
push
ins
mov
addr16
jb
test
inc
dec
dec
shr
in
adc
mov
mov
cmp
and
fisttp
rol
or
aam
cmp
and
fild
add
sbb
cmp
inc
sbb
adc
test
adc
adc
imul
fwait
nop
pop
inc
ret
in
hlt
test
ins
mov
xchg
mov
xchg
mov
aad
add
pop
jmp
mov
outs
or
stos
inc
inc
sbb
pusha
js
(bad)
cmp
fild
data16
add
bound
cmp
and
sub
inc
shl
xor
imul
sbb
xor
inc
lods
or
arpl
xor
fild
jmp
popa
test
push
pop
adc
scas
and
cmp
sub
test
or
jae
sub
fcmovnb
xor
bound
push
or
cwde
dec
pop
test
or
or
mov
sbb
loope
or
mov
ds
sub
call
cs
add
fs
cld
lods
inc
jl
cmp
faddp
mov
jne
fs
lods
xor
adc
imul
push
lea
push
push
add
push
sbb
sub
fs
lea
mov
mov
outs
fs
pop
or
or
pushf
sbb
mov
js
push
popa
add
outs
gs
mov
push
sub
mov
push
and
push
add
xchg
aam
sub
pop
adc
cmp
push
mov
sti
mov
loopne
inc
push
retf
inc
add
dec
stc
push
lea
cmp
jb
push
mov
sub
add
push
push
jns
pop
mov
push
dec
add
fcom
test
ins
cmp
dec
and
mov
ss
push
and
adc
push
and
enter
jg
mov
jmp
inc
test
jl
inc
sbb
push
inc
push
neg
xor
cmp
dec
daa
push
cs
and
or
ds
mov
dec
xor
add
sbb
stc
jle
inc
jmp
sub
xor
mov
ss
mov
je
inc
dec
pop
je
dec
xor
pop
add
pushf
add
sbb
movs
adc
ficom
sbb
(bad)
mov
jmp
add
pop
pop
inc
dec
leave
ret
xchg
cmp
push
or
fstp
cmp
sub
loope
push
jne
pop
adc
mov
push
sbb
ja
(bad)
sub
add
jo
ror
and
mov
dec
push
pop
cdq
fs
push
dec
xor
add
jmp
push
mov
inc
pop
add
cmp
add
int3
fimul
loopne
test
adc
ds
je
imul
adc
and
stos
test
rol
inc
push
push
lahf
sbb
dec
push
add
jne
dec
sbb
push
mov
daa
add
dec
pop
(bad)
sbb
add
loopne
and
imul
ret
pop
sbb
add
cmc
cmp
and
jle
cmps
clc
lods
or
add
or
outs
mov
push
xchg
dec
jmp
arpl
sub
dec
out
mov
mov
(bad)
je
not
outs
adc
mov
sar
jle
dec
fdivr
xor
cld
add
icebp
or
fcom
mov
aaa
cmp
and
add
cmp
add
mov
push
into
sbb
leave
cmp
ror
fist
xchg
xchg
not
maskmovq
mul
adc
stos
leave
push
movs
or
or
sbb
inc
aas
adc
scas
xchg
push
adc
ficom
mov
push
xor
adc
outs
jg
std
jne
(bad)
push
mov
loop
xor
not
inc
adc
loopne
clc
inc
mov
jmp
mov
ins
xchg
sub
adc
stos
adc
mov
bound
adc
pusha
push
shl
sub
mov
inc
mov
cmp
ja
sahf
das
dec
push
(bad)
push
dec
and
call
jmp
mov
sar
pop
inc
addr16
lds
rol
ins
pusha
jo
inc
jmp
adc
retf
sbb
push
or
add
fsubr
xor
fidiv
xchg
xchg
jle
cmp
rcr
call
mov
dec
jb
mov
mov
sbb
add
hlt
push
sbb
hlt
ret
ins
sbb
push
out
push
clc
push
inc
add
sub
lock
in
push
xchg
mov
or
inc
add
loopne
out
and
jbe
ins
cld
xchg
cmp
rol
mov
outs
fstp
pop
jmp
stos
out
nop
js
add
pop
cmps
push
dec
dec
scas
add
cmp
mov
rol
adc
pushf
pop
push
mov
mov
nop
add
adc
jl
jbe
icebp
xor
cdq
jne
(bad)
fild
aaa
jecxz
push
call
movs
xlat
xor
mov
mov
in
xor
push
fmul
movs
add
mov
inc
loope
push
call
cmp
jecxz
pop
setb
shl
or
push
inc
inc
and
inc
sbb
gs
add
pop
mov
cmp
jmp
jne
push
rcr
push
push
cmp
mov
aaa
jne
and
jo
gs
sbb
mov
dec
xchg
mov
lock
push
sbb
jmp
test
and
pop
pop
adc
ins
or
mov
mov
pop
sbb
or
or
and
arpl
xchg
cmp
jl
xor
not
xor
cmp
pop
xor
retw
add
push
imul
push
rcr
xchg
adc
jmp
adc
test
xlat
xchg
xchg
popa
je
pop
push
pop
das
inc
lods
or
dec
or
mov
jns
jno
cwde
out
rcr
jno
xchg
call
cmovae
sbb
xor
sti
cmp
add
inc
call
pop
mov
data16
lea
loopne
data16
inc
cmp
jb
test
sbb
lea
pop
rcr
stos
add
cs
xor
icebp
neg
sub
sar
inc
fimul
push
sbb
loope
je
push
sub
sub
rol
pop
sbb
push
neg
int
or
push
out
test
lods
ss
push
cmp
out
sbb
retf
cdq
repz
push
mov
add
mov
push
ja
popa
cmps
cmp
rol
mov
sub
jl
scas
sub
shl
and
add
or
ss
mov
ins
clc
ret
jle
movs
mov
push
cmp
xor
cmp
ret
call
push
or
sub
shr
inc
add
or
ficom
(bad)
in
popa
mov
xor
inc
sub
mov
jmp
shl
jne
adc
sbb
sub
or
loopne
fs
shl
shl
imul
xchg
push
add
shl
push
stos
cs
mov
mov
loopne
fild
add
cwde
cmp
jge
and
lea
shl
imul
dec
out
mov
xchg
jmp
lahf
test
inc
inc
and
pop
neg
icebp
xor
das
sbb
mov
adc
cmp
rcr
cli
pop
jnp
pop
mov
add
jmp
mov
mov
popf
sbb
rcr
test
push
fisttp
xlat
and
clc
xchg
leave
jns
jae
mov
shr
xchg
lock
inc
fucomi
in
cmp
and
rcl
cli
xchg
div
or
or
sub
rol
mov
mov
sbb
jp
cli
add
mov
adc
(bad)
clc
rcr
cmc
push
shr
mov
sbb
sub
push
push
cmp
push
xor
cmp
ins
popf
popf
lahf
xchg
adc
sbb
sahf
in
ins
dec
push
loop
cmp
mov
adc
int3
jp
sbb
dec
adc
fcomp
pop
shl
sti
adc
stc
popa
(bad)
clc
sub
and
jae
sbb
(bad)
adc
inc
ins
mov
(bad)
(bad)
adc
test
nop
out
pushf
mov
add
dec
and
jae
xchg
or
mov
(bad)
(bad)
sbb
repnz
cli
rcl
inc
in
mov
push
and
jns
pop
enter
inc
lock
test
mov
retf
(bad)
(bad)
jecxz
int3
or
into
adc
je
dec
or
popa
cmps
xchg
mov
sahf
add
in
and
ret
hlt
push
jp
push
add
sar
aad
push
push
sub
push
int
adc
sbb
sti
jmp
imul
jo
in
cmp
(bad)
lds
ror
popa
push
xor
mov
inc
add
pop
scas
push
jbe
push
inc
je
sbb
je
or
adc
jb
and
mov
inc
mov
mov
ror
mov
xor
or
test
and
jns
sti
lahf
sti
lahf
sti
and
and
pop
inc
xchg
xor
push
sbb
dec
cmp
loopne
mov
fdivr
sub
shr
lea
dec
dec
cmp
ja
push
fmul
enter
and
or
push
mov
adc
and
xchg
pop
movs
sbb
push
inc
arpl
sub
(bad)
jns
dec
xor
loop
and
xor
cs
mov
test
rol
or
jmp
sub
or
lods
sbb
xchg
sub
mov
and
imul
inc
and
lea
repnz
fmul
inc
rcr
or
pop
jmp
or
add
fcmovne
test
adc
add
push
inc
xchg
and
movs
lea
jl
adc
not
pop
push
in
inc
dec
sub
add
mov
mov
inc
jbe
push
imul
stos
adc
sub
cmp
and
and
xchg
je
and
push
sub
js
and
adc
lods
and
pop
sbb
fdiv
jg
push
dec
sbb
push
adc
pop
jne
das
adc
jle
clc
push
rcl
mov
movs
fsubp
lds
or
jecxz
ja
es
xchg
mov
mov
je
xchg
adc
mov
push
xchg
sbb
jo
jmp
mov
js
inc
retf
inc
pusha
push
in
mov
mov
mov
inc
pop
test
jl
add
dec
je
lods
outs
mov
mov
jo
and
ins
shl
jne
sbb
int3
(bad)
or
and
mov
call
rcl
mov
sar
mov
imul
pop
pop
dec
rcr
and
inc
ss
jmp
frstor
in
add
mov
and
or
push
fcomp
loopne
adc
adc
xor
cmp
(bad)
or
xor
dec
jge
adc
adc
pop
or
fsub
(bad)
jge
or
ror
push
shr
ror
js
xor
or
jne
pop
adc
test
jg
sub
ret
jl
add
fld
push
fstp
movs
jecxz
les
cmp
or
shl
add
js
adc
or
leave
and
push
out
push
mul
cdq
outs
sub
jno
inc
maskmovq
sbb
mov
xor
mov
iret
jbe
cli
out
fucompp
fnstsw
mov
or
loopne
inc
nop
jno
ja
push
mov
dec
and
cmp
jmp
fucom
or
add
ja
mov
push
jne
mov
outs
jne
leave
std
mov
div
shl
push
fnstcw
inc
clc
outs
inc
out
mov
adc
add
std
push
inc
leave
add
add
dec
das
je
movs
mov
test
clc
sbb
and
js
or
cmp
(bad)
sbb
xor
jle
and
fsub
lock
out
add
pop
cmp
jle
sub
out
(bad)
mov
add
or
push
adc
out
pushf
pop
clc
lea
and
retf
and
clc
xchg
cmp
rcr
xor
pop
mov
lds
push
jnp
fcom
je
retf
icebp
push
cmp
call
pop
leave
les
sub
mov
pop
repz
xchg
add
or
add
inc
mov
pop
sub
shl
push
jns
add
sti
pop
or
cmp
call
add
inc
fcomp
mov
inc
jmp
sbb
test
and
push
mov
adc
jnp
jmp
sub
mov
outs
pop
sub
jmp
sub
mov
or
fldcw
cmps
shr
adc
cdq
adc
sbb
pop
lock
pop
(bad)
cmp
pop
push
movs
out
fst
dec
lods
cli
and
push
cmp
outs
inc
jge
fmulp
inc
jmp
int3
xor
(bad)
jmp
cli
hlt
enter
or
jb
add
jge
sub
fdiv
add
ins
push
cwde
push
inc
repnz
sbb
out
cwde
push
cdq
hlt
and
xor
adc
add
clc
dec
jne
fst
jbe
sub
sbb
add
pusha
pop
sub
xor
xchg
repz
ja
call
fsubr
sub
sbb
inc
sub
dec
adc
pop
retf
or
jmp
pop
inc
push
jo
mov
mov
shl
pop
or
mov
jb
push
sub
je
xchg
xor
data16
and
xchg
add
inc
inc
call
daa
mov
stos
mov
ret
shl
inc
or
or
enter
xor
shl
shr
and
pop
cmp
call
pop
fmul
add
lods
push
mov
push
sub
mov
adc
push
imul
or
add
outs
push
imul
mov
inc
aam
imul
dec
inc
sub
jle
add
(bad)
fucomp
outs
pop
mov
adc
lock
and
mov
shl
and
aaa
jecxz
push
data16
fdivr
adc
imul
das
or
adc
and
push
push
xor
sub
aam
je
and
push
fstp
cmp
ins
pop
sbb
pusha
loope
add
push
jmp
scas
in
push
mov
and
adc
inc
call
adc
out
pusha
fld
aas
push
mov
jecxz
mov
pop
or
mov
adc
cmps
repnz
sahf
sti
add
add
loop
push
xchg
add
movs
add
cld
test
das
dec
je
add
dec
jne
or
cmps
or
and
in
push
jmp
test
pop
xlat
adc
lods
test
jnp
je
sbb
pop
imul
jmp
shl
mov
inc
add
adc
mov
xchg
je
inc
push
fstp
jmp
fisttp
loop
movs
adc
sar
ja
pop
outs
xchg
dec
sub
sbb
cdq
nop
repnz
dec
mov
jnp
pop
jl
dec
pop
pop
inc
add
adc
ldmxcsr
js
test
cmp
adc
adc
add
adc
popf
and
pop
or
imul
mov
sti
pop
neg
fnstsw
fnclex
movsx
fstp
das
mov
cmps
not
and
cld
or
add
(bad)
sbb
or
call
mov
adc
pop
or
scas
add
sbb
das
inc
sub
and
call
push
fstp
fcomp
repnz
xor
fisttp
or
sahf
mov
and
jmp
or
push
pusha
popa
jo
add
lds
push
push
jecxz
and
mov
and
shr
mov
mov
and
inc
push
pusha
jbe
mov
or
ror
aaa
jp
jb
popa
je
mov
scas
jle
adc
mul
jmp
sub
dec
outs
push
dec
loopne
push
enter
pop
ret
mov
int
neg
imul
rcr
rcr
jmp
xor
dec
cwde
arpl
xor
sbb
sbb
sbb
je
or
pop
les
pusha
and
dec
xchg
in
dec
pop
cmps
mov
jle
jle
sbb
mov
jmp
xor
add
inc
mov
jnp
ret
xchg
pop
dec
lods
cld
movs
inc
adc
clc
add
add
icebp
add
or
out
add
and
jns
adc
mov
inc
or
ss
jl
int
pop
mov
mov
mov
call
add
jbe
mov
in
push
ds
adc
cdq
xchg
fdiv
mov
mov
push
lea
push
push
sahf
mov
loopne
mov
daa
add
xchg
cmp
jne
sbb
mov
pop
mov
stc
inc
mov
and
add
mov
inc
push
lock
adc
jp
ins
imul
sar
adc
lods
or
add
ret
cld
xchg
lock
adc
fidiv
test
daa
sub
jle
mov
or
out
daa
shr
dec
int
es
sub
jne
pop
and
mov
xor
push
xchg
rol
cmp
cmp
inc
xor
into
repnz
add
add
(bad)
bound
xchg
inc
loopne
das
xchg
mov
cmc
ja
cmp
xchg
pop
adc
add
xor
aad
dec
or
push
xchg
push
add
adc
shl
cmp
and
arpl
push
pop
add
cmp
jbe
add
xor
retf
lods
adc
fadd
xchg
shr
sub
pushf
lds
test
sbb
add
or
mov
cmp
cli
mov
cmp
cs
mov
popa
ret
jmp
push
xor
outs
xor
sub
or
rcr
inc
adc
cmp
push
mov
add
and
loopne
mov
or
jmp
loope
pop
or
add
mov
out
push
jmp
ret
mov
fsubr
dec
clc
sbb
js
xor
or
cmps
add
cmp
adc
sub
or
pop
mov
mov
cli
ja
lock
xchg
push
retf
push
push
or
daa
int3
add
jp
add
cmps
or
cmp
fld
mov
sub
mov
inc
push
or
jbe
call
mov
push
inc
clc
jns
and
es
imul
push
cmp
call
(bad)
jmp
push
or
sub
sar
push
xor
iret
mov
sub
pop
xor
outs
dec
add
cmp
mov
adc
pop
sbb
fcmovu
cmp
lea
inc
es
adc
cmps
dec
lock
and
mov
ret
inc
out
ret
xchg
fld
sub
into
lock
push
add
test
add
into
sbb
or
mov
cld
dec
jns
neg
dec
int3
pop
cmp
jl
mov
idiv
add
sbb
pop
push
add
or
test
jbe
clc
and
push
push
in
femms
jmp
vxorps
sbb
jno
pop
popa
shr
or
and
fmul
push
lods
push
mov
xchg
xor
add
popa
jmp
test
or
jp
test
aam
cmp
sub
ret
jle
fisub
leave
add
in
in
fidiv
movs
out
scas
add
dec
call
mov
sbb
test
in
mov
cwde
test
or
dec
and
out
inc
xor
push
dec
cwde
xor
xor
cld
dec
jne
ss
mov
sbb
inc
cmp
sbb
inc
pop
ds
shl
xor
sbb
js
or
outs
jg
push
dec
pop
scas
mov
inc
pop
lock
sbb
cmp
sub
in
pop
pop
cmp
fwait
cmp
xlat
push
clc
neg
jmp
gs
popf
scas
cmp
jl
push
push
imul
inc
ret
adc
imul
arpl
enter
push
sbb
jmp
adc
sti
xchg
jmp
icebp
sbb
or
sbb
xor
(bad)
push
pushf
and
sbb
sbb
bound
mov
inc
xor
xor
adc
and
fs
xor
dec
dec
mov
sub
inc
loopne
adc
sub
cwde
add
push
and
sar
push
outs
cmp
fdivr
jl
cmp
adc
pop
jge
mov
mov
inc
xor
mov
pop
rcl
fisubr
cmp
dec
add
stc
add
mov
scas
mov
push
adc
xlat
out
lock
lock
enter
mov
cmc
xchg
je
jmp
cmp
je
cmp
sbb
mov
icebp
and
dec
cmp
(bad)
fld
pop
cli
imul
enter
push
inc
inc
xchg
neg
pop
ins
int3
test
scas
pop
js
mov
icebp
dec
add
clc
fldenv
arpl
clc
clc
cld
retf
pop
cs
dec
adc
or
or
pop
shr
mov
(bad)
lock
lods
test
mov
jmp
inc
movzx
(bad)
push
pop
call
js
add
mov
ins
aam
push
xlat
dec
inc
lock
jnp
push
mov
or
repz
cmp
cli
inc
mov
fld
sub
into
mov
ja
mov
push
adc
inc
sub
pop
neg
dec
adc
or
add
mov
add
pop
sub
fdivr
push
jae
xchg
xor
sub
pop
pop
or
adc
push
pop
or
inc
mov
mov
add
sub
lods
rol
mov
movs
pop
mov
and
icebp
je
and
inc
add
add
je
mov
sar
add
stos
jge
pop
and
pusha
in
cdq
clc
dec
jmp
sub
sbb
cmp
push
psadbw
xchg
xchg
xor
xor
pop
and
jne
and
cli
in
jbe
push
xor
cvtpi2ps
push
jp
mov
shr
dec
dec
xchg
mov
and
and
xchg
cmp
loopne
ins
neg
leave
(bad)
lds
aam
pop
and
lds
fimul
(bad)
xchg
adc
push
out
(bad)
bound
enter
mov
lock
push
pop
js
pop
clc
int
or
cmp
xor
or
or
inc
pop
push
add
cmp
pop
add
inc
loop
mov
pusha
sbb
in
jne
adc
fild
dec
or
jge
cmp
push
sbb
xlat
jl
jg
push
jle
mov
bound
jl
mov
lock
jle
jge
out
fst
int3
imul
add
femms
imul
dec
cmp
movs
pop
setge
ret
setl
loopne
xor
add
or
cmp
fistp
loopne
pop
jnp
clc
movs
popa
shl
sbb
cwde
and
mov
mov
aam
(bad)
int
rol
jp
mov
cmp
out
mov
popa
gs
sub
(bad)
push
and
or
js
pop
je
sub
popa
cmp
push
push
pop
sub
push
fisttp
and
out
fwait
mov
mov
mov
dec
add
cmp
and
rcr
or
dec
or
(bad)
inc
mov
mov
push
popa
adc
jle
in
rcr
xor
and
loop
mov
xor
sub
in
mov
out
fwait
push
push
push
out
popa
push
call
mov
push
or
imul
jmp
adc
outs
jo
jno
jae
nop
call
mov
mov
adc
in
test
sahf
mov
adc
xchg
fmul
push
mov
xor
sub
sub
pop
push
xor
xor
mov
nop
cmp
push
dec
test
add
inc
stc
xlat
(bad)
aas
cwde
inc
sub
xor
push
push
mov
cmp
call
mov
sbb
jg
inc
jmp
pop
mov
xlat
pop
mov
jecxz
ret
std
test
jne
ja
out
sti
ror
xchg
jmp
popw
inc
test
adc
fnstsw
dec
sbb
mov
add
mov
push
inc
cmps
add
bound
push
and
loop
jnp
mov
and
push
or
adc
mov
out
adc
and
(bad)
jns
dec
or
inc
push
hlt
mov
push
pop
dec
push
cld
sbb
call
cdq
jmp
scas
jne
add
test
sbb
adc
pop
ss
sub
inc
es
pusha
clc
push
add
or
sbb
ret
icebp
sub
test
mov
cdq
pop
pusha
add
jg
fcom
jg
add
add
add
add
sub
add
inc
cdq
pop
sub
mov
xor
inc
adc
xor
fs
jle
sub
jmp
retf
pop
aaa
sbb
push
test
push
add
mov
pop
pusha
add
and
ror
mov
sub
sub
shr
sbb
clc
mov
add
dec
cli
mov
sti
pop
push
inc
shl
lds
pop
shl
sbb
lea
jns
push
add
jo
rol
sbb
sub
and
pop
ret
pusha
jmp
int
je
pop
cmp
js
xchg
aad
cmp
dec
push
in
fadd
jns
ins
or
push
enter
js
mov
pop
jne
mov
inc
or
and
mov
add
mov
popf
pop
aam
sub
or
dec
mov
pop
fstsw
icebp
(bad)
sti
add
shl
sar
rol
mov
and
xlat
sbb
loope
fiadd
fcomp
jmp
fwait
gs
push
fxch
iret
cmp
add
lods
icebp
in
std
rol
mov
mov
or
test
add
les
push
shr
jle
in
fstp
ret
adc
test
out
ret
or
call
test
lods
or
test
ret
in
add
pop
ret
stgi
add
pushf
call
jbe
into
pop
faddp
test
test
mov
mov
mov
jg
xchg
add
jecxz
ds
pop
(bad)
loopne
mov
mov
sbb
leave
repnz
add
cmp
lock
ins
inc
pop
rcr
xor
mov
jne
and
add
sbb
fldcw
sar
frndint
fsub
jb
f2xm1
xchg
mov
add
fscale
fstp
test
and
sahf
sbb
push
pusha
fcmovnu
ins
push
ret
test
sahf
aam
rcl
int
jmp
ret
xchg
dec
cmp
adc
add
sub
or
lds
shld
shl
push
add
out
add
or
fld
or
cmp
add
ret
mov
and
pop
sbb
push
inc
cmp
and
je
loop
loop
cld
adc
push
pop
and
dec
or
or
add
jmp
daa
je
xlat
or
jb
pop
mov
jne
sbb
stc
mov
cmp
je
mov
std
jo
je
pushf
jb
mov
fcomp
push
mov
mov
or
in
mov
add
and
xchg
sahf
movs
jmp
rcl
sbb
ret
add
or
mov
mov
jb
pop
jp
mov
pop
loope
push
and
ds
mov
mov
shl
dec
ficom
shr
dec
pop
or
inc
lds
pushf
rcl
push
in
fst
or
dec
add
mov
inc
jp
mov
shl
ins
jl
inc
mov
(bad)
xor
lds
mov
les
popf
clc
mov
jecxz
icebp
inc
call
mov
push
mov
jmp
les
cmp
pop
mul
or
add
add
cs
xor
sar
popa
jg
push
adc
push
or
cmp
inc
xchg
or
push
sbb
js
mov
add
mov
mov
dec
or
retf
mov
call
push
in
loopne
mov
test
xchg
jmp
inc
push
sbb
test
mov
or
sub
pop
repnz
inc
jmp
(bad)
mov
into
scas
and
xchg
int3
(bad)
xor
not
push
mov
xchg
jbe
mov
or
mov
or
pop
adc
mov
and
or
lea
xchg
test
shr
ficomp
mov
js
mov
cdq
add
sbb
or
sbb
loopne
cmc
mov
gs
(bad)
shl
or
repz
push
mov
jnp
xor
mov
test
adc
int3
add
scas
test
pop
and
cmps
sbb
mov
inc
shl
pushf
dec
stc
mov
loop
popf
mov
ret
pushf
aas
xor
mov
cmp
or
(bad)
mov
test
push
inc
mov
push
cmp
xor
iret
mov
cmps
sahf
and
and
xchg
mov
and
mov
cs
int3
or
inc
dec
outs
gs
das
rcr
xor
in
dec
push
int3
(bad)
in
retf
adc
call
mov
dec
cmps
call
cdq
in
mov
add
and
mov
into
and
gs
add
jae
push
cdq
in
call
push
enter
in
in
daa
cmp
int
xor
nop
inc
cmps
movs
mov
call
loopne
loopne
test
in
mov
xor
lods
in
sbb
in
ror
fsubr
fs
mov
in
loopne
sbb
add
lods
and
in
or
dec
in
xor
add
fcomp
fcom
in
fsub
fs
cs
test
and
xchg
xor
push
gs
in
iret
bound
or
mov
dec
or
js
mov
dec
inc
xchg
inc
jle
push
mov
and
mov
dec
cs
test
test
adc
cmp
mov
xor
popf
fadd
enter
sbb
push
xchg
icebp
(bad)
cs
leave
push
jmp
inc
mov
jp
dec
pop
push
popf
subps
mov
jmp
dec
or
dec
mov
xchg
mov
add
shl
sbb
(bad)
ss
cmp
pop
test
dec
dec
rol
mov
leave
push
adc
dec
sub
inc
lock
add
mov
dec
outs
or
adc
pop
and
test
dec
jle
ins
inc
lods
inc
dec
cmp
fnstsw
and
push
idiv
jo
sub
ror
jmp
inc
mov
cs
push
mov
movs
sbb
out
push
imul
fwait
push
sub
mov
jecxz
and
jg
mov
adc
stos
adc
jmp
pop
add
push
pusha
ins
pop
push
cwde
dec
adc
shl
je
cmp
pop
mov
jge
pusha
push
or
pusha
sbb
mov
sbb
sub
stos
push
add
jecxz
and
lods
fdecstp
dec
adc
and
cmps
or
adc
mov
xchg
push
sub
bound
ret
mov
jns
pop
cli
sub
std
adc
xchg
shr
adc
add
and
pop
xchg
outs
xor
cmc
push
data16
cmp
shr
or
push
inc
movs
(bad)
xor
jl
out
dec
bound
arpl
ja
push
sbb
jmp
adc
dec
jb
cmp
push
out
ret
jmp
arpl
imul
ror
sub
inc
add
xor
push
ror
and
pop
add
enter
add
and
mov
and
or
jb
rcr
push
rol
pop
fadd
sub
adc
inc
and
add
adc
cmps
retf
shr
add
call
xor
jbe
nop
cmp
cmp
pop
aad
jb
call
call
(bad)
pop
or
ins
ror
push
xor
sahf
int
daa
fsub
test
xor
add
loope
(bad)
mov
inc
cmp
xor
pop
push
mov
jle
cs
push
(bad)
inc
movs
mov
add
xchg
dec
loope
ror
dec
jl
ret
cmp
sub
test
xchg
loopne
ror
dec
je
dec
stos
adc
pusha
inc
sbb
xor
adc
jmp
popf
(bad)
mov
and
jae
push
pop
sbb
movs
mov
cmp
or
rcr
mov
cmp
fadd
std
ret
mov
lock
cs
sbb
outs
adc
ror
and
or
inc
js
cwde
call
mov
ret
(bad)
adc
mov
fld
add
sbb
cmps
sti
test
sub
add
pop
pop
and
addr16
sub
sbb
push
pop
arpl
or
pop
dec
mov
dec
lock
dec
cld
jo
pop
je
add
jle
mov
add
je
sahf
call
ret
xor
shr
pop
and
dec
(bad)
add
jo
dec
ret
jb
(bad)
xor
leave
adc
bound
jmp
push
retf
jle
fisub
pusha
pop
dec
jl
push
lods
mov
outs
jmp
jle
sahf
and
rcr
and
mov
jns
push
mov
into
ja
add
mov
xchg
retf
push
add
pusha
push
enter
aaa
mov
(bad)
jmp
add
ret
rcr
test
mov
daa
inc
in
shl
cmp
in
xor
sbb
call
mov
fcomp
xchg
add
repnz
imul
dec
mov
sbb
inc
(bad)
or
pop
mov
js
fstp
mov
inc
in
pop
adc
call
xchg
mov
and
mov
arpl
sbb
shr
stos
or
jl
add
push
pop
mov
movs
or
jo
add
rcl
cmp
dec
dec
adc
mov
jb
dec
lea
outs
sbb
cmp
pop
je
push
push
jmp
sub
(bad)
mov
or
loope
lahf
mov
mov
inc
rol
ficom
xor
ret
js
mov
and
mov
or
fcmovu
sub
pop
jg
stos
push
dec
inc
shl
je
fcomp
add
cli
shr
inc
sbb
icebp
js
bnd
sbb
sub
mov
out
rcr
cs
jl
cmp
push
enter
and
push
es
test
pop
mov
neg
jbe
push
sbb
and
sbb
mov
es
div
adc
xor
xchg
sub
dec
retf
xor
sbb
add
dec
xor
mov
adc
(bad)
push
ins
sub
jmp
inc
push
(bad)
or
and
pop
into
lea
adc
loop
loop
xchg
in
pushf
pop
loopne
shl
je
nop
or
sahf
ins
pop
and
adc
mov
push
pop
sbb
cmp
ja
fldenv
(bad)
pop
inc
push
(bad)
jmp
scas
pop
xor
sbb
inc
and
into
push
mov
pop
pop
(bad)
adc
and
retf
pop
adc
lahf
adc
cs
loope
lock
adc
cld
bnd
mov
dec
hlt
sub
mov
inc
out
pop
push
ja
test
adc
cwde
cs
jae
clc
xor
push
ins
add
push
jnp
leave
add
mov
test
xor
fiadd
sub
xor
stc
and
xor
pop
mov
loopne
je
shr
fsub
jbe
stc
outs
dec
mov
popf
ret
jmp
xor
test
push
les
cs
push
pop
cmp
pop
add
xor
ja
cmp
and
cli
call
mov
popf
or
ret
and
fwait
inc
les
lods
mov
pop
int
push
xor
and
push
pop
inc
daa
inc
xor
or
xchg
pop
pop
push
pushf
and
dec
call
and
mov
pusha
in
fadd
or
pop
or
pop
lock
rcr
or
sub
cld
push
cmp
(bad)
inc
inc
mov
mov
dec
sbb
loopne
mul
push
sub
rol
inc
inc
or
add
in
mov
je
pop
cwde
jo
or
ja
movs
inc
sub
loopne
loop
pop
mov
jo
or
imul
xor
sar
les
add
fld
cdq
xchg
mov
shr
ss
call
add
mov
nop
outs
adc
adc
js
loopne
(bad)
adc
dec
test
or
(bad)
ss
sbb
mov
sub
pop
adc
outs
add
pop
jae
xchg
pop
push
clc
sar
lock
sbb
jns
cs
add
call
adc
xor
jmp
hlt
jmp
or
jmp
div
ret
or
test
and
pop
stos
sub
mov
jns
movs
imul
or
sbb
push
push
pushf
pop
mov
mov
adc
std
ret
inc
pop
or
retf
retf
dec
sar
pop
jne
sub
ror
dec
push
test
jnp
or
mov
jbe
pop
cmps
je
inc
xchg
cdq
push
sub
xchg
shl
mov
clc
sub
sbb
adc
lea
pop
jno
or
mov
call
stos
pop
pop
mov
push
hlt
hlt
push
and
clc
xchg
dec
cs
adc
sbb
jb
in
add
and
in
and
cmp
cmp
inc
and
inc
sub
in
retf
dec
xor
cmps
jbe
inc
sub
cmp
in
dec
outs
or
cmp
mov
movs
shr
in
mov
mov
in
push
cmp
test
in
push
ins
fiadd
xchg
jne
jmp
adc
cmp
or
dec
cmp
adc
cmp
push
push
sbb
sti
rcl
pop
mov
pushf
adc
(bad)
sub
call
push
sub
imul
sbb
dec
dec
sub
xchg
and
sub
and
push
sub
push
movs
pop
in
or
scas
movs
sbb
push
sub
sub
sub
mov
imul
sub
jo
int
das
push
cmp
adc
scas
movs
sbb
push
inc
dec
call
imul
xor
cdq
inc
mov
sub
loopne
outs
das
push
lahf
mov
adc
mov
cs
retf
cmp
dec
or
adc
xor
or
push
xchg
adc
xor
add
imul
je
cmp
add
lea
js
jmp
out
adc
ret
je
xchg
push
nop
jmp
clc
inc
add
xor
or
xor
jl
dec
mov
xor
enter
lods
add
pop
or
jnp
fdivrp
jae
pusha
loope
xchg
sbb
pusha
loope
xchg
cs
xchg
shr
mov
shl
in
dec
inc
push
jmp
jne
in
or
adc
and
sbb
out
pop
ror
xor
lods
clc
mov
add
pushf
test
inc
dec
or
sub
inc
sub
std
mov
lahf
mov
mov
jmp
cld
out
push
loopne
call
jg
push
or
cmp
jbe
add
jno
inc
imul
xchg
cmps
jmp
add
call
cwde
xchg
(bad)
ret
in
or
pop
and
or
mov
sbb
inc
inc
xchg
out
imul
dec
out
inc
shl
cmp
or
(bad)
mov
jecxz
js
fcom
pop
sbb
xchg
test
ror
(bad)
or
mov
push
call
add
sbb
xchg
xchg
mov
dec
push
or
xchg
xchg
xchg
adc
ss
outs
(bad)
sub
dec
dec
dec
dec
xor
cmp
popf
mov
mov
cmp
cmp
dec
push
push
pop
dec
dec
dec
cs
dec
dec
dec
dec
ins
jo
js
push
inc
dec
jl
repnz
leave
and
dec
mov
xor
xor
movs
test
mov
rol
xchg
dec
es
gs
mov
es
fs
fsub
cdq
fs
loopne
call
dec
in
lock
jb
dec
es
cld
add
ss
inc
push
add
or
or
xchg
dec
es
adc
dec
es
fs
and
cdq
fs
sub
xor
fs
dec
cmp
dec
cmp
lahf
dec
xor
and
push
push
pop
(bad)
and
dec
pop
pusha
sbb
inc
mov
int
sub
sub
fld
inc
inc
ret
test
add
adc
(bad)
loopne
(bad)
adc
call
fisttp
ds
jmp
xchg
jnp
ror
aas
mov
jg
lea
repnz
rol
das
repz
aam
inc
sbb
push
push
push
add
sbb
push
mov
in
or
pop
lea
xor
clc
push
imul
daa
jl
add
xor
adc
ror
xor
ffree
out
push
push
cs
push
ja
sub
ficom
cmps
mov
xchg
sub
sub
call
sbb
inc
call
inc
sbb
dec
and
movs
dec
dec
dec
xchg
dec
call
movs
sbb
pop
dec
dec
call
sbb
dec
call
sbb
cmp
push
shr
and
xchg
sub
test
outs
loopne
and
inc
into
and
mov
xor
or
aaa
nop
sub
add
jne
in
xchg
dec
pushf
sub
pop
xchg
shr
ret
lods
cmp
fbld
and
fwait
mov
xchg
retf
and
xor
repnz
jb
ret
les
retf
nop
jl
enter
push
jb
xchg
ss
aam
gs
cs
sub
sub
sub
in
call
das
shl
cs
jb
in
inc
lock
or
gs
hlt
inc
clc
and
cld
dec
or
pusha
dec
add
cs
repnz
mov
mov
and
xchg
add
adc
sbb
jl
jb
and
fbld
sub
xchg
in
and
cmp
cmp
cs
jb
inc
inc
inc
inc
or
gs
dec
inc
dec
dec
mov
popa
sub
xchg
outs
push
sub
scas
pop
inc
int3
xor
mov
xor
(bad)
js
cmp
fdiv
jne
pop
leave
sub
lods
cli
jle
sub
sub
inc
dec
jne
fs
mov
movzx
rcl
lea
ret
mov
and
mov
jmp
pop
cmp
fistp
jne
je
neg
mov
sub
jbe
add
loop
test
jl
shl
xor
pusha
shl
jecxz
xor
mov
jmp
jg
shl
push
cld
cmp
movs
push
data16
enter
out
xchg
jne
test
sar
pop
sar
icebp
cmp
cmc
add
add
push
dec
shr
inc
xor
xor
cmc
add
call
nop
or
retf
jo
imul
loopne
dec
lods
or
pusha
adc
xor
jmp
or
pop
add
out
mov
add
iret
test
mov
aas
or
fimul
or
jmp
sub
sub
mov
pop
loop
lea
push
dec
mov
les
add
or
lar
mov
pop
jmp
out
jo
imul
rol
ret
adc
je
ins
lock
xchg
retf
fdivr
push
push
repnz
mov
dec
or
push
pusha
mov
repz
sub
push
js
lea
ins
xchg
or
sbb
sbb
xchg
out
mov
and
test
adc
add
xor
mov
adc
(bad)
arpl
sar
adc
pop
inc
xor
cmp
scas
pop
icebp
test
push
movups
push
not
push
(bad)
ss
jne
data16
out
add
(bad)
shl
nop
mov
add
adc
and
aam
adc
push
or
or
(bad)
adc
lock
ret
jb
ror
add
pushf
sbb
and
dec
adc
xchg
cmp
loope
lock
cmps
ret
ret
jne
and
cdq
and
sar
dec
push
push
jbe
outs
ret
sub
add
add
sti
call
dec
scas
lahf
mov
lea
mov
or
dec
in
mov
fst
or
inc
push
xchg
fmul
xchg
neg
jne
or
lods
adc
cdq
imul
test
mov
push
movs
cli
jmp
int3
sub
sbb
adc
cmp
adc
pop
push
adc
rcr
push
and
pop
test
lock
sbb
push
adc
jnp
dec
sbb
push
mov
mov
jne
mov
mov
and
and
or
mov
jecxz
sub
cdq
das
pop
lods
gs
xchg
or
lock
inc
lock
mov
xor
push
sbb
push
dec
dec
stos
or
xchg
mov
in
(bad)
loop
or
add
fstp
push
and
inc
dec
adc
and
push
pop
add
fcom
fild
sub
add
push
jge
push
jo
and
jae
(bad)
in
jmp
jmp
and
or
loope
popa
push
add
gs
mov
xchg
mov
mov
add
popf
add
pop
shl
pop
push
pusha
and
or
sbb
push
in
pop
push
aad
scas
lds
jle
push
push
fisttp
push
mov
xchg
inc
sbb
push
mov
dec
fiadd
add
lahf
ins
dec
fcom
sti
mov
daa
icebp
mov
mov
mov
and
loope
xor
or
adc
shl
mov
pop
push
call
js
jnp
cmp
jle
pop
loop
fisub
inc
jecxz
mov
xor
(bad)
leave
adc
call
lea
add
push
mov
xchg
loope
hlt
adc
push
(bad)
jmp
sub
sti
xor
mov
lods
fsubr
not
inc
jl
pop
jne
and
sbb
xchg
or
jmp
popa
or
neg
pop
or
jno
in
push
aas
cmp
cli
push
gs
mov
(bad)
call
das
inc
pop
aam
mov
xchg
or
ja
daa
jbe
js
lock
test
inc
sub
bound
inc
xchg
push
xchg
mov
lock
cld
inc
pop
mov
sub
stc
push
push
mov
push
fwait
sbb
or
fcomp
push
or
or
jo
jb
sub
pop
movs
add
test
mov
sbb
pop
cdq
add
pop
mov
fwait
mov
pop
mov
iret
inc
stos
pop
add
pop
mov
lods
mov
stos
adc
cmc
add
test
popf
int3
cmove
add
aad
xchg
lea
dec
sbb
sbb
mov
add
mov
inc
aas
xor
inc
js
add
dec
add
xor
loopne
adc
mov
(bad)
lods
push
pop
in
call
xlat
or
test
add
fild
pop
hlt
daa
add
dec
call
or
inc
mov
adc
xchg
or
or
fld
popa
jo
or
repz
mov
mov
ret
pop
popf
(bad)
mov
cmp
mov
je
push
clc
call
test
sub
dec
jmp
add
push
mov
test
sbb
add
pop
jne
mov
mov
test
(bad)
fmul
test
cld
xchg
mov
stc
add
xchg
pusha
add
xchg
cmp
and
or
inc
pop
xor
rol
inc
inc
jmp
jnp
cmp
xor
pop
icebp
adc
aaa
push
sahf
jg
mov
gs
push
mov
adc
jmp
loopne
cwde
ret
pusha
imul
scas
mov
js
dec
pop
sbb
dec
dec
call
inc
ret
cmp
add
cmp
scas
jge
push
and
pop
push
stc
pop
jno
cmp
xchg
jb
rol
int3
pop
cmc
sub
mov
cmp
lock
nop
and
mov
jno
and
imul
push
push
xchg
ret
pop
aad
adc
mov
mov
pop
xor
adc
out
adc
es
dec
push
add
cld
into
jl
lods
(bad)
and
xor
inc
cmps
jle
inc
add
shr
jne
lea
mov
push
out
sub
test
xor
sbb
lock
arpl
dec
mov
inc
in
mov
or
ins
mov
in
nop
inc
daa
mov
mov
or
pop
(bad)
mov
sbb
cmp
lea
mov
js
(bad)
push
sbb
pop
mov
push
jbe
mov
inc
or
repnz
bound
or
(bad)
xor
in
dec
jmp
adc
jo
jno
in
xchg
pushf
push
outs
dec
jge
nop
mov
adc
inc
jo
and
adc
setb
mov
dec
(bad)
mov
ja
cs
hlt
pop
or
push
lods
xor
ficomp
mul
lock
pop
clc
cdq
push
mov
dec
mov
sti
pop
jne
int
adc
call
sti
push
fst
xor
pop
in
fstp
enter
and
cmp
ret
stc
movs
xlat
mov
inc
das
xor
sub
pop
jne
push
adc
xchg
mov
sub
enter
cmp
sbb
push
xchg
xor
call
and
mov
lods
test
adc
sbb
pop
xchg
test
call
dec
add
and
and
leave
aam
sbb
ret
sbb
push
sbb
xlat
pop
add
mov
lock
cmp
xchg
mov
test
in
call
and
icebp
sbb
mov
or
ss
xchg
pop
popa
mov
adc
call
xchg
cld
add
pop
xor
push
and
scas
push
add
add
jns
pop
xor
lock
movs
cs
fimul
inc
push
push
add
lock
sub
push
jns
int3
dec
stos
sti
xor
rcr
call
clc
pop
mov
movzx
mov
dec
and
test
ins
jmp
pop
je
in
push
xor
fwait
push
aad
pop
(bad)
retf
jne
mov
and
jmp
mov
lock
mov
test
sub
adc
xor
inc
jno
imul
pop
push
push
mov
adc
and
shl
fsub
inc
mov
or
ins
std
pop
inc
std
jmp
sbb
and
dec
mov
es
pop
(bad)
hlt
mov
mov
popa
into
loopne
mov
push
inc
cmp
scas
popa
les
sbb
and
push
push
sub
call
pop
xor
xchg
dec
pop
pusha
or
jl
test
(bad)
or
in
popa
cmp
and
add
or
daa
mov
fcmovnb
xor
jb
in
cld
jmp
cmps
add
adc
rcl
lock
pop
ror
jb
or
mov
add
jmp
and
jb
das
xchg
cld
adc
and
jmp
push
ror
push
or
mov
fsub
(bad)
jns
or
inc
rcl
lock
dec
cmp
xchg
bound
push
and
hlt
(bad)
cld
push
cs
jbe
jne
pop
repnz
inc
inc
mov
repz
adc
adc
sub
es
adc
pop
rol
test
test
and
adc
or
pushf
dec
(bad)
imul
enter
adc
cmp
lock
add
arpl
push
push
and
test
jmp
nop
aaa
inc
movs
lahf
xor
dec
cld
mov
push
sub
and
or
and
jb
clc
cs
push
nop
dec
rol
push
mov
push
add
mov
mov
sub
pop
xchg
and
je
sub
sub
sub
mov
test
mov
xor
fcom
pusha
jmp
ins
lods
pop
ins
loope
xor
cld
pop
cmp
test
or
add
pushf
les
in
or
mov
shl
rol
imul
ret
push
nop
xchg
jle
rol
cdq
and
call
push
pop
mov
call
loopne
rcl
call
push
push
cmp
mov
adc
test
mov
inc
pop
and
and
inc
sti
push
dec
and
loop
fcmovnb
sub
push
sub
fst
jle
jo
push
aam
mov
(bad)
aaa
daa
cld
dec
aaa
in
inc
in
adc
ins
ja
or
sub
das
push
icebp
scas
add
mov
xchg
call
xor
jge
je
aam
adc
in
or
or
sbb
outs
in
sbb
ret
ja
cmp
push
push
dec
in
sbb
xor
mov
ret
sub
ror
sbb
push
push
xor
pop
push
mov
push
xor
and
or
add
pop
ret
adc
das
dec
or
push
xor
push
or
or
jo
int3
xor
xor
aam
dec
and
sbb
pop
mov
adc
jmp
shl
inc
inc
jmp
add
inc
add
jno
dec
mov
sub
mov
mov
jae
sub
das
lock
add
jne
addr16
sbb
jmp
mov
and
fwait
popf
sub
js
or
cmp
shl
and
jns
call
jle
(bad)
repz
sbb
cmp
inc
clc
rol
mov
cmp
pop
sub
sahf
(bad)
(bad)
and
inc
mov
sbb
test
adc
adc
clc
push
ror
jnp
sbb
fucompp
dec
and
or
mov
jmp
cmp
mov
pusha
ins
push
(bad)
mov
inc
adc
mov
mov
jbe
lea
push
dec
outs
jg
inc
jb
mov
or
leave
test
pop
mov
xchg
movs
out
add
fist
jns
fdivr
shl
arpl
das
inc
xchg
xchg
das
es
pop
push
push
push
jb
pop
sbb
addr16
add
or
adc
jbe
loopne
daa
jg
(bad)
xor
in
sub
cwde
sbb
jnp
add
xlat
xor
loope
xor
push
push
pop
enter
pop
inc
js
jp
test
jne
mov
ss
cdq
jmp
adc
pop
dec
and
jae
in
or
mov
jmp
sbb
mov
sub
dec
dec
imul
mov
cmp
push
clc
xor
mov
push
xchg
loopne
xor
cmps
xchg
xor
jmp
mov
mov
pop
adc
mov
sbb
jnp
and
mov
and
jne
es
int3
loop
add
mov
dec
mov
mov
sub
add
inc
data16
xor
repz
add
mov
sub
and
mov
rcr
sbb
cld
adc
adc
add
push
add
jecxz
add
fwait
sbb
inc
pop
in
cmps
inc
or
pop
ins
jae
outs
mov
mov
jb
lea
mul
dec
add
dec
mov
cmp
add
xor
pop
inc
mov
mov
into
and
loope
sub
call
les
jns
mov
(bad)
ficomp
aam
inc
(bad)
call
adc
mov
and
pop
xor
lods
pop
jae
jb
inc
sbb
movs
test
sub
jns
and
jb
std
sub
inc
and
or
sbb
ror
mov
jbe
ja
retf
inc
and
pop
add
mov
xor
rcl
dec
mov
push
ret
push
add
enter
outs
mov
jl
add
dec
xor
inc
in
ja
cmps
fst
adc
sbb
adc
jae
(bad)
sbb
or
xor
shl
add
lea
or
xor
(bad)
mov
jo
(bad)
cmp
or
add
or
add
mov
or
xchg
adc
push
jb
ror
stc
add
imul
add
mov
pop
loop
add
push
pop
inc
(bad)
mov
push
sub
jle
inc
pusha
or
jl
dec
cli
retf
cmp
ror
xchg
retf
in
and
aam
enter
push
cs
xlat
mov
bound
or
add
xchg
cdq
in
push
add
dec
jecxz
call
(bad)
adc
repnz
jl
push
adc
sub
retf
cmp
fsubr
cmp
retf
sbb
xor
mov
rol
fisttp
rcr
fucomi
test
pop
gs
pop
mov
add
fmul
shl
xor
js
je
mov
(bad)
sub
push
int3
fwait
(bad)
loop
add
jmp
test
js
movs
xor
adc
cmp
dec
les
push
add
sti
ret
add
pop
fs
add
fiadd
push
add
into
das
fcomp
in
loopne
cmps
push
and
fadd
sub
cmp
ins
lahf
fs
push
call
into
and
push
shr
pop
xchg
push
pop
mov
push
cmp
jmp
mov
adc
stos
ret
add
jno
xchg
sbb
adc
mov
or
addr16
and
call
es
mov
jle
dec
add
lods
fwait
js
sub
dec
shr
and
push
jb
inc
shr
in
rol
cdq
test
dec
mov
jne
add
jb
jo
ss
scas
lea
push
xor
pop
adc
call
xor
mov
push
push
sbb
mov
dec
adc
ins
aas
or
fs
add
pop
ror
into
je
std
cmp
scas
out
stc
and
in
hlt
je
xchg
fidivr
sbb
(bad)
jmp
or
cmc
ret
cmp
push
and
mov
call
push
stos
xchg
arpl
sub
cmp
mov
ror
sbb
je
or
stos
cwde
push
rol
adc
mov
int
push
loopne
mov
mov
sbb
fcmovnbe
test
push
add
push
or
add
xchg
add
sub
dec
or
push
cmps
ds
nop
sub
mov
and
cmps
sbb
lsl
push
add
nop
idiv
jmp
mov
or
and
fwait
push
inc
mov
pop
dec
cmp
sub
icebp
cmp
(bad)
je
push
sub
adc
inc
jne
fstp
gs
jmp
xor
or
xchg
(bad)
sub
adc
scas
loopne
hlt
dec
and
pop
call
je
fs
jns
(bad)
adc
dec
js
add
or
cmps
sub
jmp
xor
add
or
sub
and
add
cmp
fs
push
call
sbb
fst
inc
and
push
mov
sbb
and
push
push
inc
cld
cdq
and
into
inc
or
cmc
push
test
outs
adc
or
or
inc
add
popf
pop
push
or
push
adc
adc
add
and
sbb
xchg
and
xor
sub
dec
lea
or
sub
cmp
push
pop
dec
push
xor
pop
hlt
clc
dec
add
inc
sbb
pusha
fwait
jae
add
cs
mov
popf
push
(bad)
jecxz
xor
xor
test
std
mov
jg
push
jmp
sub
xor
fnsave
dec
mov
sbb
adc
jmp
(bad)
and
mov
sbb
jmp
jl
sbb
mov
cdq
or
cwde
xchg
les
mov
ins
sbb
retf
push
into
xor
dec
(bad)
and
pop
mov
and
mov
popa
popa
jecxz
dec
test
jns
add
pushf
aas
xchg
jp
dec
aaa
(bad)
and
stos
or
adc
mov
movs
mov
cmp
add
loopne
sbb
inc
test
cmp
sub
fst
or
sbb
pop
add
pop
add
adc
xor
es
mov
shl
sub
pop
mov
inc
ret
adc
or
out
mov
and
je
cmp
and
add
pop
dec
stos
pop
cmp
hlt
add
pop
shr
dec
ret
cmp
push
aad
sbb
adc
aam
pushf
mov
mov
add
adc
rcr
fst
add
and
cmp
jbe
push
or
in
push
pop
into
push
out
push
shl
in
or
add
cmp
cmc
jb
hlt
mov
test
out
mov
es
add
dec
scas
sbb
sub
cmp
push
mov
dec
into
xchg
adc
push
sbb
sar
ja
mov
je
popa
fnsave
xchg
jne
sbb
fdiv
dec
loopne
jbe
je
jmp
enter
rcl
jns
mov
push
sbb
add
call
icebp
mov
clc
outs
or
(bad)
add
add
inc
adc
mov
mov
xor
mov
dec
xor
loope
and
iret
outs
or
mov
cmp
push
dec
or
scas
pop
out
jmp
(bad)
jge
test
or
jmp
cmps
mov
jmp
mov
cmp
aaa
leave
daa
and
cmp
ror
sar
mov
dec
cmp
add
pop
mov
xor
sbb
aad
nop
inc
les
es
add
mov
mov
(bad)
fistp
cli
pop
je
cli
das
jne
mov
data16
jne
mov
rcr
inc
mov
cs
and
fistp
ret
cs
or
mov
inc
ja
test
je
and
and
push
pushf
push
mov
pusha
call
xor
xor
cmp
push
pop
pop
or
xchg
ret
(bad)
push
(bad)
push
inc
loopne
mov
mov
popf
and
pop
mov
and
ficom
push
dec
sahf
inc
mov
(bad)
repz
repnz
cld
dec
neg
pop
jmp
and
mov
push
shl
cmp
fs
pop
into
test
retf
push
or
mov
clc
dec
xor
ins
inc
inc
inc
imul
test
cmp
cmp
mov
dec
je
aas
jmp
mov
inc
mov
lock
pop
ret
pop
adc
outs
pop
sbb
enter
and
imul
lock
ror
or
push
cmc
mov
sub
cmp
or
add
push
mov
and
mov
stc
int
mov
iret
mov
loopne
stc
xor
int3
add
or
leave
bsr
shl
clc
ja
shr
push
xor
and
shl
sbb
inc
dec
and
pop
dec
inc
ret
xchg
or
outs
cmp
(bad)
aad
std
in
dec
sbb
inc
je
inc
sub
aaa
cld
fistp
cmp
lock
lea
inc
shl
es
in
rol
and
fcom
loop
clc
and
push
cmp
inc
sbb
bsf
add
jmp
clc
xchg
mov
mov
out
scas
fucomip
xchg
movs
or
out
add
mov
cmp
js
(bad)
cld
pop
cli
and
adc
nop
shl
and
sbb
and
mov
cmp
mov
and
std
dec
ror
int3
push
lea
xor
movs
mov
pop
jp
sbb
xor
jp
sub
dec
sub
fcmovb
mov
call
js
cmp
jl
sbb
dec
cmp
je
(bad)
sub
push
pop
sahf
xor
inc
in
push
adc
mov
push
sbb
fadd
add
imul
jbe
mov
leave
cmp
movs
push
push
inc
adc
test
xor
push
xchg
hlt
sub
and
sqrtps
sbb
or
pop
loopne
loopne
add
in
stos
shl
dec
pop
and
aam
dec
mov
add
mov
mov
xor
adc
and
out
or
pop
mov
ror
or
pop
lods
mov
add
push
scas
stos
cmp
(bad)
cmp
xchg
outs
or
test
les
xchg
dec
mov
dec
movs
sbb
mov
or
sub
or
retf
xor
add
or
inc
adc
adc
pop
add
lea
add
ss
mov
jns
clc
or
lods
mov
sub
or
mov
or
dec
cmc
push
inc
mov
inc
es
pop
add
push
movs
mov
arpl
(bad)
into
or
jge
movs
movs
movs
xor
xor
fcom
and
mov
or
les
dec
(bad)
fcmovbe
clc
or
xchg
add
xor
xor
sub
cdq
gs
inc
inc
movs
xchg
sbb
in
lods
xor
xor
sbb
mov
dec
mov
jb
adc
sbb
inc
adc
cli
bound
jns
pop
sub
sub
int3
and
idiv
inc
jae
or
jae
lods
rcl
in
lock
and
shr
sub
les
(bad)
adc
add
shl
cld
lock
fcmovnbe
pop
lds
push
sub
call
push
pop
out
dec
or
add
mov
xor
outs
adc
dec
js
test
or
fdivr
sbb
and
je
jbe
fwait
xchg
or
inc
add
test
fs
aam
push
adc
push
sbb
cmp
cmp
dec
imul
pop
jge
js
mov
ins
cmp
jmp
loopne
push
inc
in
dec
add
push
sub
adc
push
and
mov
out
xor
xchg
add
mov
call
pusha
loop
jp
adc
push
mov
icebp
outs
push
mov
shr
jb
loopne
rcl
mov
jbe
aas
out
dec
imul
adc
push
je
sbb
ds
adc
fstp
mov
shl
fbld
lea
sbb
jne
jo
pop
push
rol
test
not
add
test
inc
add
gs
fwait
adc
push
push
out
adc
mov
pop
ret
in
je
push
mov
aam
fidiv
dec
aam
out
cmps
push
and
mov
pop
or
test
or
xchg
mov
or
or
ficom
shl
pushf
sub
or
pop
push
push
pop
and
or
enter
adc
push
mov
adc
adc
mov
or
dec
inc
test
dec
loop
stc
loopne
pop
add
pop
pusha
lea
and
mov
ffreep
imul
(bad)
wbinvd
jbe
jle
inc
sbb
pushf
pop
inc
dec
pop
and
inc
fiadd
lock
or
jp
inc
jecxz
mov
push
xchg
add
push
add
add
ficom
sbb
cmp
add
es
jmp
adc
mov
push
ret
push
sbb
dec
inc
mov
mov
and
add
unpcklps
(bad)
pop
add
test
enter
xlat
rcr
xchg
pop
push
iret
or
sub
push
cmp
pop
dec
ins
jmp
push
rcl
out
sbb
mov
bsf
add
jmp
das
and
pusha
inc
sar
xor
jmp
push
ret
adc
push
sub
or
jne
mov
jne
dec
inc
fadd
sbb
div
cld
test
dec
cmp
ds
adc
push
cmp
jmp
push
inc
test
push
repnz
into
xchg
push
add
add
and
push
mov
sbb
xor
mov
jecxz
ret
or
push
sub
cmp
sub
test
add
in
test
adc
ret
add
or
jl
dec
sbb
bound
cdq
push
fimul
xor
sti
push
pop
sub
xchg
mov
xchg
es
loopne
js
push
inc
mov
or
mov
rcr
sbb
mov
add
(bad)
inc
xchg
and
in
add
ins
ins
or
and
cwde
popa
adc
aad
xchg
or
sub
lea
adc
call
mov
popf
loope
xor
rcr
xchg
adc
add
inc
adc
sbb
dec
mov
mov
idiv
inc
push
and
hlt
pop
or
push
or
push
jmp
hlt
test
(bad)
aad
mov
call
sbb
scas
arpl
add
sbb
je
mov
pusha
and
sbb
inc
mov
in
add
jl
popa
xor
and
imul
fcompp
cli
retf
sub
in
ins
xchg
or
inc
xor
ret
addr16
sub
sbb
ret
mov
mov
test
or
cmp
dec
jmp
mov
shr
bound
dec
xor
enter
icebp
xor
movs
pop
cli
jb
inc
jb
mov
push
mov
adc
cmovge
adc
mov
jg
icebp
cmp
mov
pop
and
rol
xchg
push
dec
cwde
jmp
daa
inc
js
jg
(bad)
jae
inc
mov
dec
or
add
cmp
popa
sub
mov
dec
dec
dec
pop
mov
and
pop
(bad)
test
adc
in
idiv
and
add
add
fbstp
mov
xchg
and
cmps
ret
jp
jmp
jns
(bad)
sub
add
shl
mov
movsx
or
cli
mov
mov
shr
and
push
or
mov
(bad)
xor
or
aaa
add
and
das
jmp
inc
add
jbe
pop
dec
and
xchg
add
mov
cmps
(bad)
push
(bad)
outs
cmps
neg
sbb
and
add
retf
pop
sub
jge
dec
mov
mov
data16
or
pop
add
cmp
xchg
hlt
or
dec
mov
call
jmp
pusha
mov
inc
xchg
jbe
shl
in
or
out
das
pop
fwait
push
add
loopne
fmul
call
test
enter
lea
mov
jl
adc
(bad)
iret
dec
or
inc
jae
lea
loop
jmp
sub
stos
inc
dec
xor
sub
mov
cdq
test
inc
outs
and
add
add
nop
inc
clc
enter
jmp
shl
(bad)
add
cmp
repz
pop
test
ror
hlt
adc
mov
pop
cmps
and
stos
add
les
inc
test
rcl
xchg
fisubr
in
dec
movs
les
sub
cdq
push
movs
pop
and
add
or
add
jbe
cwde
les
jmp
inc
je
dec
or
adc
pop
test
mov
jecxz
or
sub
rcr
jmp
add
jbe
or
jl
fidiv
xor
sti
dec
ret
mov
pop
jmp
test
cs
movs
jmp
pop
test
push
cmp
push
xor
cmp
jb
cmp
jae
inc
ins
aas
mov
dec
mov
js
daa
push
imul
clc
pop
jge
or
cmp
jns
push
lds
cwde
inc
and
add
test
sub
cmp
add
stos
dec
loopne
mov
shl
mov
add
mov
jge
test
es
mov
sub
fisttp
ret
movs
fwait
loopne
loopne
jl
movs
nop
fiadd
into
sub
movs
ror
cmp
pop
and
loopne
pop
xchg
pop
sub
mov
mov
mov
nop
and
ds
push
mov
cmp
jl
mov
xor
lahf
add
add
rcr
add
test
or
ins
ret
pop
jb
(bad)
lock
mov
jmp
mov
(bad)
int3
inc
test
mov
nop
aam
repnz
pop
sbb
or
add
or
pop
jmp
jbe
sbb
test
xchg
movs
and
adc
(bad)
sbb
out
cmps
mov
add
add
inc
sbb
sub
push
sub
sub
sub
and
dec
add
movs
lds
aam
in
sbb
jno
sub
or
dec
lods
xlat
add
int3
sub
add
es
nop
cwde
or
cli
pop
sub
not
in
call
or
jecxz
and
loopne
add
sbb
inc
dec
and
xlat
push
or
inc
je
into
and
or
or
js
aas
scas
jmp
inc
xor
jl
jo
cmp
sbb
push
int3
sub
push
add
and
cmp
dec
bound
aaa
dec
fdiv
inc
and
inc
aaa
cmp
pop
test
inc
lock
mov
jl
add
shl
dec
popa
inc
jne
mov
inc
xchg
repz
mov
sub
mov
push
jns
lahf
cwde
mov
dec
stos
rcl
inc
dec
dec
nop
mov
cwde
call
mov
add
scas
adc
mov
mov
or
adc
clc
repnz
hlt
push
or
je
sbb
jne
aaa
add
and
add
cli
cmp
in
cmp
inc
jb
inc
sar
push
add
push
les
mov
and
in
xor
mov
adc
sbb
les
adc
pop
enter
sub
pop
add
or
xor
imul
bound
xchg
add
pushf
test
jmp
aad
in
lods
cmp
adc
inc
xor
inc
cmp
jmp
mov
adc
or
je
or
and
outs
or
out
inc
loope
add
outs
push
adc
xchg
lea
cmp
ja
loope
ins
mov
and
add
and
lods
push
inc
clc
inc
mov
je
aas
pop
jle
fld
add
fistp
xchg
jmp
sbb
pop
fwait
and
jbe
mov
sbb
je
cld
jbe
outs
xor
jle
jle
sub
addr16
cmovs
(bad)
add
or
cmps
jbe
outs
scas
push
dec
ins
add
call
clc
pusha
inc
xchg
adc
test
out
mov
jne
cmp
push
jae
int3
xor
mov
inc
sub
fisubr
or
cmp
dec
repz
xchg
jbe
dec
sub
je
imul
push
add
mov
and
cmps
dec
test
movs
jb
jo
and
das
enter
out
or
cmps
loope
add
inc
jle
inc
inc
out
shl
mov
loop
dec
(bad)
xchg
pop
shl
mov
add
sub
frstor
sub
daa
xchg
and
cmp
repnz
or
mov
call
popf
loopne
shl
xor
or
jp
xor
stos
leave
outs
cmps
fnstcw
cmp
scas
out
retf
mov
test
pop
adc
rol
or
jo
(bad)
fisub
jmp
aaa
push
jno
sub
test
(bad)
rol
pop
push
adc
mov
xor
or
jmp
push
and
or
mov
repz
scas
push
cwde
mov
mov
push
pushf
inc
mov
lahf
sbb
mov
cmp
jl
inc
mov
lods
dec
push
daa
xor
sbb
push
xchg
sbb
push
aas
sub
push
dec
cmp
fs
les
pop
test
push
pop
add
pop
inc
push
pop
stos
mov
adc
xor
movs
add
xor
xor
xor
sub
push
mov
(bad)
mov
sti
cwde
adc
sar
test
mov
out
shl
and
adc
sub
loopne
pop
adc
test
icebp
add
cwde
and
les
pop
leave
mov
push
mov
jb
mov
sub
dec
sub
mov
or
into
add
xor
(bad)
shl
js
loope
repnz
(bad)
data16
ins
fadd
movs
cmp
jae
jbe
clc
and
test
aas
das
test
sbb
pop
int3
inc
adc
loopne
inc
int3
cs
adc
fwait
fwait
scas
mov
into
push
sbb
jne
inc
or
cmc
and
cmp
cmp
je
loopne
and
xchg
xchg
dec
nop
lea
(bad)
mov
or
cwde
add
push
jle
lea
push
add
lods
call
iret
pop
sub
push
mov
clc
inc
add
pushf
push
push
dec
sbb
rcr
test
daa
xchg
inc
sbb
fiadd
lods
clc
jl
sub
cmp
loopne
mov
jbe
aam
test
jns
fist
xor
adc
test
sti
push
loopne
cmp
add
or
dec
loope
mov
sar
(bad)
or
fs
jg
or
aad
loope
xor
jns
mov
loopne
inc
imul
cmp
mov
inc
sub
pop
sub
loopne
push
shr
or
ja
jg
inc
pop
shr
shr
or
test
and
mov
into
push
rcr
data16
loope
pushf
inc
or
stos
aam
jmp
and
and
pusha
adc
fmul
jmp
push
mov
xchg
jge
ins
jne
xor
cs
xor
lahf
inc
lods
adc
mov
cmps
and
retf
nop
push
fcompp
jmp
test
inc
mov
add
pop
adc
pop
mov
inc
mov
jae
jb
or
dec
les
pusha
adc
sbb
out
adc
sti
and
push
loop
jp
enter
ss
fs
ret
adc
out
adc
sub
call
inc
mov
ror
and
or
mov
jmp
mov
mov
mov
adc
jge
or
hlt
lldt
inc
pop
inc
or
addr16
xor
nop
add
fwait
imul
mov
push
cdq
push
mov
adc
not
dec
and
inc
inc
jmp
icebp
add
pop
and
push
outs
loop
or
inc
inc
and
test
add
push
or
sub
sti
aas
sahf
mov
sahf
loope
inc
jp
mov
movs
or
(bad)
jae
pop
dec
fs
sbb
fisubr
pop
xchg
repz
mov
or
mov
shl
daa
lock
das
out
add
mov
or
cwde
ret
mov
cs
js
sub
mov
in
clc
mov
adc
adc
and
mov
rcr
push
in
lods
or
jmp
add
pop
push
adc
out
or
inc
ret
adc
or
cmc
pop
or
sbb
in
mov
and
enter
cmp
fiadd
fst
xor
mov
fcomp
ror
and
xchg
out
test
fstp
jns
imul
mov
inc
rol
mov
sbb
stc
dec
loope
xor
adc
(bad)
(bad)
scas
pop
sbb
or
mov
add
mov
and
cmp
pop
xor
hlt
mov
hlt
adc
jae
neg
sbb
xchg
adc
fdivr
test
call
ffree
mov
jp
ds
adc
(bad)
jmp
and
push
pop
jge
mov
push
pop
add
in
sbb
shl
outs
lea
call
rcl
mov
rol
mov
into
icebp
add
xor
mov
ins
adc
shl
inc
mov
cwde
fnsave
mov
test
mov
add
xchg
jge
push
push
(bad)
pop
push
add
or
xor
add
and
jne
add
add
mov
hlt
mov
add
mov
ret
loopne
jno
sbb
cdq
xor
lods
test
xor
(bad)
jg
and
xchg
add
jl
mov
xor
and
loop
pop
or
inc
test
je
fild
in
je
ret
cdq
rcl
ror
rcl
add
int3
mov
push
cli
outs
push
jmp
and
ins
pop
pop
je
(bad)
data16
cmp
in
lock
cdq
lock
imul
pop
repnz
cs
cli
mov
mov
cwde
dec
cli
inc
cli
test
lock
shl
jae
or
imul
mov
js
mov
out
and
jmp
nop
pushf
call
lahf
cmp
xchg
mov
test
sbb
neg
js
dec
scas
imul
xor
sahf
adc
mov
jno
pop
adc
(bad)
and
pop
sahf
inc
mov
inc
int
xor
mov
inc
mov
rcr
nop
inc
sub
leave
nop
xlat
call
sbb
add
popa
or
jne
and
mov
mov
pop
cmp
pop
call
push
and
cmp
xchg
jae
adc
call
mov
sbb
ficomp
cli
std
and
inc
push
cwde
mov
push
jne
and
dec
inc
test
fdiv
xor
xchg
mov
dec
push
push
lds
jb
lock
mov
jo
inc
je
mov
or
inc
in
enter
ret
mov
aam
jne
shl
xchg
cmp
sub
std
pop
movs
dec
lock
enter
loop
iret
cmps
ds
sbb
lods
retf
stos
jo
sbb
cli
ds
inc
idiv
(bad)
jl
xlat
and
or
lock
add
xor
push
ss
or
cs
js
dec
sub
sbb
sbb
jl
push
mov
test
mov
into
ins
dec
sbb
dec
imul
pop
pushf
out
mov
sbb
push
sbb
add
push
adc
push
dec
loope
mov
nop
cmp
mov
popa
aaa
mov
and
add
inc
hlt
pop
add
sbb
pop
int3
and
or
adc
rcl
or
or
pop
mov
sub
dec
push
pop
mov
aaa
cmps
push
mov
(bad)
shr
jle
test
lds
aaa
neg
fisub
sub
(bad)
js
xchg
jmp
jbe
sbb
xchg
shl
push
jb
jecxz
inc
iret
test
cmp
enter
xor
pusha
push
(bad)
sbb
pop
mov
lea
movs
(bad)
fnstsw
add
retf
xor
add
pop
icebp
pushf
dec
mov
or
jae
sub
hlt
push
aad
add
add
inc
dec
adc
loop
adc
inc
sbb
mov
add
call
add
mov
in
ss
mov
fsub
retf
inc
jp
cmps
stos
pop
inc
dec
or
or
sub
jne
or
clc
fimul
mov
cmps
lock
add
cmp
mov
fild
ss
push
add
push
push
(bad)
nop
nop
sub
push
xchg
ror
hlt
dec
add
mov
add
dec
xchg
pop
je
mov
rcr
into
sbb
xchg
cdq
jnp
inc
add
inc
sbb
push
add
cmps
std
fs
cli
add
(bad)
xor
xor
adc
jl
push
add
jmp
sub
mov
mov
nop
cmp
push
cmp
je
mov
push
dec
jecxz
inc
pusha
cmp
cmp
add
retf
dec
(bad)
into
cmp
pusha
mov
adc
fimul
ins
loope
and
inc
pop
or
or
push
mov
or
pop
test
add
pop
test
or
leave
or
fmul
scas
add
or
cmps
outs
mov
cmp
sbb
xor
fiadd
jg
jno
push
adc
or
iret
jmp
jge
jo
repnz
cmp
lock
into
jne
and
mov
xor
cmc
xchg
ret
fs
adc
xchg
div
(bad)
and
cmps
push
dec
pop
(bad)
lock
test
ficom
pop
cld
fldcw
pop
inc
cmp
pop
into
lea
into
loopne
sbb
retf
je
push
mov
sbb
stc
retf
jne
or
pmaxsw
adc
add
or
jnp
sbb
mov
cmps
out
or
scas
loopne
pop
in
fdiv
test
jns
(bad)
jecxz
dec
xor
adc
or
xchg
cwde
ret
out
test
js
xor
pusha
fild
and
xchg
xchg
out
inc
ins
ror
leave
and
push
and
test
push
xor
pop
jp
mov
and
adc
jge
inc
pusha
cmc
jns
mov
mov
push
dec
test
adc
dec
pop
pop
mov
dec
jae
or
adc
and
mov
jb
xchg
(bad)
fimul
jg
shl
or
test
xchg
mov
push
add
xor
pushf
aas
add
push
or
adc
and
sub
and
sub
add
cmovnp
data16
push
pusha
clc
dec
pop
pop
pop
jne
mov
stos
mov
mov
push
dec
dec
jecxz
mov
add
or
fnsave
gs
push
les
cmp
dec
iret
and
ss
push
xor
or
cs
ds
push
jmp
movs
sti
xchg
shl
mov
xchg
cwde
xchg
leave
mov
andps
sub
jmp
(bad)
adc
pop
add
jno
scas
bound
pop
or
(bad)
mov
mov
mov
and
repnz
jmp
xchg
and
jne
pop
pop
inc
mov
inc
add
jecxz
mov
push
sub
jle
lea
xchg
xor
mov
or
or
inc
mov
mov
jl
and
es
xor
mov
lock
(bad)
pop
push
push
cmp
ja
add
cmp
adc
cdq
sahf
dec
std
(bad)
cmp
jne
sbb
or
sbb
add
pop
xchg
(bad)
fs
(bad)
enter
loope
adc
jno
jbe
inc
jmp
jo
test
shr
or
cld
mov
enter
xor
sbb
add
imul
(bad)
mov
add
cmp
jbe
cld
cli
cli
mov
hlt
mov
inc
enter
jnp
lods
adc
lock
stos
lock
or
retw
or
xor
inc
loope
jmp
inc
add
jg
cmp
mov
mov
fwait
ins
pop
(bad)
adc
cmp
shr
mov
xor
fs
call
loopne
push
clc
cmp
xor
dec
retf
inc
mov
adc
punpckhwd
add
jne
retf
ror
push
add
or
mov
cmp
cwde
cmp
call
cs
rol
lock
xor
add
ficomp
neg
mov
loopne
rcr
out
jp
push
hlt
pushf
add
push
push
cmp
dec
push
jp
add
jnp
retf
and
jne
mov
or
call
mov
shr
adc
sbb
div
fs
sub
cmp
loope
out
(bad)
movs
cld
or
add
mov
(bad)
push
cdq
jbe
inc
js
dec
pop
outs
xor
push
mov
and
sbb
test
sbb
pop
mov
add
std
fild
sbb
xor
cmp
je
mov
jnp
pop
or
and
retf
test
fild
mov
xchg
icebp
dec
or
sub
cmps
je
sbb
dec
pop
pop
retf
jmp
push
mov
aam
inc
ss
mov
iret
sar
ret
mov
mov
add
sub
jne
pop
xor
mov
pop
pop
adc
add
inc
pop
mov
loope
mov
pop
xchg
push
dec
add
inc
cmp
repnz
aas
jae
jno
dec
mov
and
pop
xchg
cmp
xchg
sbb
jmp
xchg
jno
in
xchg
fwait
enter
and
xor
sub
mov
inc
loopne
or
out
shl
mov
jmp
pop
sbb
add
pop
dec
sub
mov
imul
out
mov
sub
add
cld
inc
add
mul
inc
cmovp
add
lahf
xor
sbb
cmp
and
pop
retf
aad
adc
daa
mov
pusha
or
push
fisubr
dec
dec
sub
aad
or
xor
and
test
pushf
cdq
mov
push
sbb
or
cmp
lods
fadd
and
add
dec
in
fdiv
ja
xor
xor
or
push
push
xchg
push
lds
adc
or
sahf
and
and
adc
fnstenv
call
sub
pop
cld
add
sub
and
out
or
and
add
push
repnz
cdq
push
add
and
pop
or
add
and
or
ja
add
push
test
jne
mov
adc
sbb
xchg
xor
mov
mov
sub
lods
xchg
pop
adc
push
popa
push
adc
imul
pop
add
or
or
mov
ds
mov
xor
fadd
adc
push
and
retf
(bad)
lds
mov
inc
xlat
dec
cmp
js
mov
and
or
ret
jp
leave
and
xlat
adc
stos
pop
in
mov
shl
sub
jo
xchg
imul
(bad)
jne
and
add
and
cdq
or
mov
jae
(bad)
sti
and
xor
push
push
dec
mov
and
mov
sahf
(bad)
mov
and
push
xchg
inc
or
jmp
pop
and
pusha
jle
push
push
push
fidiv
pop
pop
push
js
pop
xor
or
mov
xchg
sub
movs
test
pusha
jb
pop
bnd
cmp
fs
inc
mov
push
movs
clc
sbb
sub
hlt
sti
inc
and
mov
jmp
adc
or
outs
cmovae
sbb
push
push
mov
(bad)
dec
and
and
mov
sbb
push
push
sub
pop
fdivr
aad
movs
jne
mov
adc
jne
fwait
mov
div
inc
hlt
jle
adc
add
aad
int3
xchg
or
das
sbb
dec
pop
push
mov
or
and
sahf
rcl
into
push
cmp
sub
push
ror
mov
and
test
pop
push
sbb
dec
sbb
add
fcom
sub
inc
call
inc
xor
xor
ret
repz
pop
add
sbb
call
and
adc
push
jmp
std
sub
sub
push
data16
adc
daa
inc
mov
mov
mov
shl
mov
(bad)
in
add
add
movs
test
cmp
push
adc
and
mov
xchg
inc
addr16
icebp
push
test
push
jb
dec
leave
inc
pusha
sub
popf
test
pop
sbb
adc
cs
rcl
cmps
sub
mov
dec
mov
in
mov
adc
push
das
push
leave
lidtd
xor
add
mov
ins
adc
or
push
test
xor
sub
cli
add
mov
mov
xlat
je
mov
pop
cld
test
mov
hlt
fmul
imul
and
sub
mov
sbb
je
dec
pop
pop
mov
mov
mov
sub
es
rcl
cld
mov
shr
push
xchg
js
add
mov
jb
mov
add
int
and
xchg
pop
fs
icebp
stc
cmp
mov
mov
sub
xor
(bad)
inc
inc
push
pop
inc
mov
test
jae
push
retf
xor
fwait
and
jne
push
push
mov
cmp
push
xchg
sbb
fist
pushf
dec
dec
fsubr
nop
lock
xchg
add
xchg
add
sti
adc
and
xor
lock
sbb
sub
shr
dec
je
sub
push
adc
push
push
out
out
xchg
cmp
jo
pop
jmp
je
bound
pop
adc
mov
push
shr
retf
push
fsubr
inc
in
jmp
cld
adc
xor
mov
sub
jmp
shr
call
jmp
test
or
xor
jns
sbb
sub
cmps
int
add
pop
dec
sub
push
push
ins
jl
and
mov
fimul
jns
stc
aaa
cs
std
sbb
adc
push
xor
in
pop
jmp
or
jnp
jnp
(bad)
dec
cmp
fist
out
fst
jne
test
je
arpl
cwde
fs
daa
imul
jo
fs
pop
mov
push
pop
(bad)
mov
jmp
aaa
in
cmp
movs
or
pop
loope
sub
xor
(bad)
(bad)
adc
clc
sub
pop
add
push
xchg
or
cmp
pop
xchg
test
(bad)
sub
and
call
cmp
jne
imul
and
adc
inc
vmwrite
mov
cmps
icebp
sub
dec
loope
shl
xchg
je
mov
xchg
fnstsw
jp
push
adc
mov
pop
cmp
sub
stos
lds
sub
cmp
xchg
jmp
inc
push
fistp
cmp
or
pop
pusha
daa
ret
scas
mov
mov
jmp
rcr
jmp
fldcw
and
sbb
push
dec
jb
add
adc
es
out
outs
bound
mov
xchg
out
cs
shr
(bad)
xchg
out
sti
(bad)
arpl
retf
mov
cmc
clc
adc
xor
(bad)
and
xchg
xchg
es
and
(bad)
and
mov
xchg
fld
retf
ret
out
cmp
cmp
push
sahf
mov
fdiv
mov
gs
add
push
lock
imul
push
add
mov
or
call
int3
adc
ret
ss
ds
push
xchg
mov
adc
pop
or
test
sbb
in
push
sub
call
or
popa
call
push
add
and
push
push
inc
xor
push
cmovo
pop
aad
fdivrp
sub
push
push
jl
push
ja
xchg
int3
inc
and
(bad)
into
mov
add
adc
jmp
inc
adc
sbb
push
je
dec
or
arpl
repnz
xor
(bad)
icebp
mov
inc
sbb
mov
sbb
ffree
adc
(bad)
loop
sub
xchg
mov
dec
and
sub
sbb
arpl
movs
cmp
push
int3
lea
imul
xchg
xor
push
xor
outs
pop
or
inc
sbb
outs
sub
pusha
inc
push
dec
es
mov
adc
cmc
sbb
cdq
mov
(bad)
jecxz
or
pop
dec
or
xor
popa
sub
test
or
mov
push
jecxz
adc
pop
cmp
and
or
and
and
cmp
or
push
xchg
jp
push
dec
or
sub
lods
pop
pop
pop
xor
sub
pop
pop
sbb
add
adc
inc
push
and
fisubr
int
ret
ins
retf
jo
and
iret
push
ds
adc
mov
ins
xchg
cs
or
xor
(bad)
pop
xchg
clc
push
arpl
mov
lods
push
push
push
nop
push
xchg
sbb
test
or
iret
mov
push
pop
or
call
test
jle
fisubr
sbb
gs
sub
add
xchg
lahf
push
fimul
add
push
mov
mov
or
sbb
in
cmp
or
mov
inc
add
mov
imul
xor
outs
cld
dec
aad
cmp
mov
stos
or
inc
push
(bad)
cmp
push
pop
sahf
stos
dec
xchg
inc
jp
dec
mov
or
mov
dec
sar
call
mov
sub
daa
xlat
inc
call
add
jmp
std
xor
jns
dec
je
aam
xor
and
add
add
pop
test
and
inc
and
cmc
repnz
cmpxchg
cmps
sbb
fimul
sbb
or
push
dec
mov
sbb
rol
mov
inc
inc
loopne
je
out
and
scas
and
sar
add
inc
and
and
push
ficom
push
mov
or
ficom
nop
xlat
mov
ins
cmp
xor
outs
sub
pop
and
add
push
pop
jle
xchg
and
sub
push
add
stc
fadd
sub
jo
inc
jo
xor
cli
jne
test
pop
add
out
dec
jmp
or
int3
leave
cmp
ja
and
mov
push
cmp
xor
imul
add
mov
aaa
sbb
in
mov
and
js
mov
cmp
ins
dec
and
mov
add
mov
or
jmp
sbb
push
jo
inc
rol
add
inc
ret
shl
mov
mov
out
jmp
lea
lea
dec
mov
xor
bound
icebp
or
adc
int3
push
out
test
mov
push
fwait
je
or
fadd
cmp
aas
into
jle
clc
push
lods
cmp
jge
inc
add
inc
test
push
adc
aaa
jmp
jmp
(bad)
movs
leave
sbb
pop
push
nop
dec
aaa
sub
sub
mov
pop
cmp
aad
popa
xchg
jl
dec
inc
sbb
inc
mov
inc
es
mov
test
cmps
add
iret
icebp
mov
mov
pop
pop
leave
hlt
mov
int3
cmp
sahf
mov
jg
dec
adc
mov
or
or
xchg
sub
test
jg
jnp
lods
aaa
mov
mov
inc
aad
in
fwait
xchg
jle
mov
sbb
or
push
lds
adc
inc
or
mov
or
mov
push
shr
and
shl
add
and
dec
mov
retf
(bad)
mov
enter
add
sbb
adc
clc
mov
lods
int
xor
sub
xor
jns
rcl
test
sub
das
push
push
mov
inc
sbb
or
cmp
inc
add
fs
and
or
adc
jo
je
sbb
mov
mov
je
inc
xor
js
jl
jecxz
iret
push
mov
mov
cs
lods
enter
in
ret
ror
pop
or
je
jbe
in
mov
xor
leave
inc
cmp
xor
pop
push
aaa
leave
dec
add
and
test
push
add
xor
cmp
cmp
imul
push
(bad)
inc
mov
sar
push
loopne
jl
mov
js
int
lods
and
cs
pop
or
add
ins
shl
pop
jne
push
pop
cmps
out
add
out
sbb
stos
popa
jae
push
add
aam
dec
push
call
mov
mov
ja
daa
out
mov
in
jmp
or
add
pushf
xchg
out
dec
or
in
ins
or
or
leave
inc
rol
ins
test
fisub
xchg
adc
enter
xor
adc
cs
adc
nop
dec
sahf
inc
pushf
mov
cdq
push
pop
mov
lds
cmp
or
sbb
jnp
inc
punpckhdq
mov
cmp
call
mov
call
pop
arpl
add
rcr
push
mov
mov
mov
inc
inc
jnp
xor
cdq
mov
pushf
add
inc
inc
in
jnp
shr
(bad)
ss
imul
test
je
inc
fsub
rcl
pushf
pop
cmp
clc
and
pusha
cmps
pop
cmps
or
sbb
add
jne
jnp
inc
and
pop
cmp
inc
aas
pushf
pop
retf
mov
pusha
ss
cmp
mov
push
in
imul
pop
mov
add
inc
aas
or
out
fstp
xor
dec
adc
xor
inc
xchg
adc
rcr
sbb
sub
lods
pop
enter
mov
xchg
pop
fs
pop
jo
and
and
dec
inc
and
add
and
push
ret
xchg
inc
sbb
sbb
sub
cmp
loope
inc
mov
inc
fldenv
clc
push
psubb
pop
mov
call
mov
and
push
push
cmps
in
xchg
cmc
xor
retf
(bad)
adc
xor
dec
daa
and
pop
icebp
in
mov
cmp
jbe
inc
and
or
pop
and
push
sub
orps
mov
mov
dec
les
mov
xor
pop
es
in
in
adc
jo
sub
pop
mul
xchg
cli
call
cmc
jns
add
fdiv
jo
add
sahf
add
inc
daa
in
lahf
outs
sub
add
or
add
enter
sub
add
add
xor
sub
push
mov
and
mov
int
add
ret
sub
stos
rcl
ret
xchg
and
push
push
rol
dec
inc
or
pop
cmp
test
adc
cs
dec
mov
sub
loope
(bad)
pop
sbb
sbb
ret
jge
add
push
in
test
add
pop
fild
cmp
fidiv
sti
addr16
dec
adc
dec
stos
lds
sbb
outs
mov
call
mov
add
sbb
sub
push
rcr
je
add
pop
adc
xchg
and
push
(bad)
call
or
std
adc
adc
adc
outs
leave
mov
movs
xor
das
jbe
aas
xor
in
iret
shl
sbb
xor
sbb
add
add
mov
dec
jl
and
inc
sub
adc
push
xchg
add
leave
mov
out
sub
mov
arpl
xor
aam
xchg
push
sub
ret
test
or
xor
jae
pop
push
add
dec
lods
out
das
repz
or
push
pop
pushf
jge
dec
add
test
in
sub
retf
add
das
fld
jo
push
inc
mov
pushf
cmp
xor
ins
push
mov
loope
pop
mov
scas
jl
jge
jnp
cmp
imul
push
dec
or
lea
mov
mov
xchg
xchg
jp
dec
repnz
xlat
lds
movs
enter
xchg
mov
add
fisttp
popa
push
pop
xor
shr
in
pop
adc
int3
inc
idiv
sbb
(bad)
add
or
cwde
xchg
push
imul
xor
int3
add
rcr
cmp
clc
xchg
outs
add
add
mov
push
loope
xor
pop
xchg
adc
es
adc
push
push
or
not
sbb
and
inc
shl
push
push
lds
adc
push
xrelease
fnsave
dec
adc
fadd
add
push
xor
sti
sahf
add
push
sub
loopne
sub
push
mov
hlt
push
push
or
mov
cmp
add
jne
ja
or
lock
pop
push
jbe
rcr
sbb
cmp
xchg
clc
ret
stos
and
push
xor
push
push
jo
xor
xchg
xchg
push
pusha
scas
ror
push
xor
mov
outs
addr16
mov
and
pushf
pop
cwde
pop
mov
dec
clc
dec
cmp
sbb
jne
pop
sbb
jmp
push
pusha
int
or
shr
clc
xchg
scas
divss
cs
mov
adc
lods
pushf
loope
fiadd
sahf
cmp
(bad)
or
jne
test
sbb
fcom
cs
stc
out
arpl
and
jae
mov
cli
jns
add
outs
cwde
add
push
scas
or
rcl
dec
clc
mov
jo
push
sbb
pop
mov
gs
pusha
les
push
cmp
in
aaa
lods
div
loopne
mov
add
js
pop
mov
shr
inc
push
push
ret
mov
test
pop
inc
shl
add
xchg
and
add
stc
loopne
(bad)
pop
sbb
nop
add
fs
or
push
gs
rol
je
add
popa
inc
pop
mov
jno
addr16
dec
mov
push
add
fisttp
jnp
or
mov
xchg
sbb
int3
or
xchg
pop
add
enter
in
cmp
inc
lsl
adc
xor
adc
add
push
cmp
pop
push
mov
mov
mov
sub
or
or
or
adc
int3
nop
loop
pop
loopne
push
adc
mov
unpckhps
pop
hlt
sbb
mov
sbb
icebp
ret
pop
test
or
jo
sub
inc
mov
jg
or
sti
mov
cmp
test
data16
and
add
add
addr16
popa
add
enter
adc
mov
adc
enter
sbb
jmp
fstp
data16
mov
push
js
in
add
jns
fisttp
cmp
mov
and
inc
enter
test
add
mul
jo
push
ds
lods
pop
dec
test
jbe
das
pusha
test
xchg
inc
js
sub
inc
add
fwait
test
es
out
bound
js
fs
xchg
dec
les
les
adc
pop
adc
jb
add
sub
lock
icebp
outs
les
call
shl
daa
pop
sbb
jb
push
push
es
lds
jo
mov
push
xchg
and
mov
or
mov
sbb
call
icebp
adc
stos
lock
xchg
and
cs
mov
jo
push
retf
aaa
and
inc
jbe
rdmsr
test
push
jbe
sbb
mov
mov
cs
cmp
pop
adc
shr
sti
jle
push
lods
lds
sbb
gs
dec
sar
mov
and
sbb
or
(bad)
jg
xchg
xchg
sbb
add
add
add
push
push
mov
rol
mov
lds
cdq
daa
call
sbb
popf
data16
sbb
or
in
mov
clc
jmp
shl
test
sub
or
and
ror
add
cmp
xor
clc
push
adc
cld
rcl
cmp
mov
dec
dec
clc
adc
(bad)
fstp
pushf
adc
xchg
pop
pop
bound
or
sbb
jnp
popf
pusha
adc
jo
add
xchg
add
xchg
mov
pop
int3
cwde
dec
mov
in
out
adc
sbb
xor
cld
sub
cmp
sbb
and
sbb
out
xor
push
out
loopne
add
sub
test
(bad)
inc
pushf
inc
scas
or
pop
mov
xor
jno
push
sbb
cmp
movs
and
aas
inc
movs
hlt
cmps
sti
or
inc
jmp
xor
mov
and
cs
ds
mov
clc
add
ret
out
arpl
push
in
jmp
and
cmp
ret
mov
and
or
(bad)
lea
imul
mov
sbb
push
add
inc
push
fidiv
bound
mov
and
cmps
mov
pop
nop
dec
out
and
add
ret
inc
dec
dec
pop
jb
aam
add
add
add
cmps
xchg
ror
idiv
mov
imul
je
cmp
xchg
aam
int
push
or
xlat
and
push
cmp
ret
inc
jae
ss
xchg
lea
ret
icebp
retf
loopne
mov
cmp
ja
push
adc
movaps
jle
lea
pop
ret
or
sub
mov
stos
lds
pop
sub
loopne
or
cwde
xlat
ret
arpl
mov
or
repnz
or
cmp
or
cmp
(bad)
int3
fisubr
cmp
(bad)
idiv
mov
xor
push
inc
push
imul
mov
sti
xor
fimul
cmps
les
or
mov
mov
pushf
leave
leave
test
add
jb
sub
scas
add
fs
es
aas
scas
ss
sbb
sub
jle
add
add
and
pop
retf
cmp
inc
sbb
or
mov
icebp
les
arpl
xchg
(bad)
call
push
jno
adc
test
ret
fidivr
fwait
out
push
xchg
mov
mov
jnp
and
jge
mov
mov
sbb
loopne
ins
outs
shr
add
fs
xchg
jmp
nop
fs
push
imul
(bad)
mov
sub
mov
or
add
xor
push
inc
loope
xchg
pop
xor
fsubr
sub
add
jb
mov
jg
pushf
xchg
add
test
adc
stos
popf
rcl
push
mov
popw
push
push
mov
sub
je
adc
inc
test
cmc
push
aas
inc
sar
mov
loope
cmp
pop
ins
sub
rol
inc
rcl
ins
mov
cmp
pop
aad
cmovno
add
or
xchg
and
push
dec
movs
std
fdivr
stos
je
or
and
dec
push
fldcw
cmp
lea
pop
mov
and
add
xchg
rcl
push
aaa
pushf
push
add
mov
pop
add
push
stos
push
(bad)
retf
jno
adc
add
dec
push
pusha
and
pop
cmp
push
shr
push
add
dec
or
xchg
pop
pusha
sub
pusha
ja
mov
stos
xchg
sbb
in
mov
and
daa
dec
scas
popf
movs
pop
cmp
adc
mov
(bad)
mov
pop
or
in
adc
and
push
adc
and
dec
icebp
bound
adc
pop
mov
push
push
push
je
ins
mov
jnp
iret
mov
sub
sbb
bound
pop
daa
loope
mov
pop
push
addr16
xchg
push
adc
xchg
push
adc
sbb
push
xor
in
add
mov
icebp
push
mov
imul
dec
push
cmp
jecxz
and
ret
or
sbb
(bad)
fcmovne
je
lea
call
sahf
pop
jno
pusha
ret
out
jns
or
clc
and
inc
or
pop
xchg
ins
mov
add
dec
and
pop
add
dec
cmp
popa
nop
nop
jmp
shl
stos
retf
jmp
pop
scas
push
dec
pop
pop
pushf
mov
push
loope
cdq
sbb
dec
push
mov
cli
inc
or
jae
mov
test
adc
mov
or
add
pop
cmp
ror
add
fs
jmp
mov
and
xor
cmp
dec
dec
sbb
mov
cdq
fs
and
push
mov
sbb
jge
add
pop
inc
and
dec
dec
stos
cmp
lea
push
pop
jmp
jae
lods
xor
xor
cmp
stc
stos
jmp
adc
push
loope
fimul
and
sbb
clc
inc
or
test
ret
pop
xchg
xchg
inc
dec
adc
rol
dec
sbb
push
leave
push
jnp
adc
or
popf
dec
(bad)
imul
add
add
ret
dec
shl
or
jo
popa
and
sub
lods
jl
mov
mov
or
stc
xchg
sub
js
call
int
jae
lods
int3
push
pusha
cmp
add
arpl
ins
xchg
jge
jp
dec
adc
pop
sub
sub
sub
jns
sub
ret
inc
cmp
mov
dec
add
icebp
jmp
inc
cmp
clc
pop
cmp
cmp
fld
jle
gs
push
and
and
in
push
mov
add
shl
push
clc
shl
(bad)
rol
dec
push
pop
push
sub
mov
jno
inc
mov
and
and
sbb
jle
push
adc
inc
clc
pop
cwde
or
push
fiadd
pop
movs
inc
dec
test
loope
daa
cwde
xchg
fdivr
xlat
cmp
cmp
add
lock
stos
jg
sahf
jbe
cmp
cli
sbb
mov
push
cs
xchg
mov
aas
ins
inc
popf
and
mov
pusha
sub
sar
scas
fmul
or
in
jl
rcl
dec
inc
inc
jb
or
gs
(bad)
korw
nop
mov
sub
push
rol
mov
push
ret
xchg
je
xor
loope
sbb
dec
pop
xchg
clc
pop
ja
mov
dec
jge
jae
xchg
mov
mov
sub
push
and
and
inc
jbe
adc
stos
pop
dec
bswap
xchg
push
pop
adc
movs
sbb
test
cmps
in
das
xorps
lods
lahf
push
mov
cmp
add
pop
fbld
hlt
cmp
sbb
sub
and
loopne
jge
mov
nop
add
sub
xor
je
pop
mov
movs
dec
inc
mov
test
xor
or
fsub
cmp
xor
lea
(bad)
cmp
push
push
jmp
adc
sbb
ins
xchg
or
fsub
xchg
mov
clc
xor
push
add
cwde
in
xchg
aam
jmp
or
adc
or
inc
jo
pusha
out
inc
jle
xchg
push
jecxz
cwde
sbb
js
or
imul
add
pop
xlat
pushf
xor
xor
inc
sub
jb
mov
and
sub
push
pusha
call
and
and
and
and
lea
lea
lea
xchg
and
jg
and
mov
outs
imul
dec
inc
fiadd
ds
push
or
cli
xor
fcom
es
inc
mov
nop
inc
mov
pusha
dec
sbb
mov
test
inc
mov
enter
add
mov
adc
push
pop
loopne
and
lea
pop
jnp
cs
nop
and
push
pop
sar
sub
je
jo
mov
mov
stos
mov
test
retf
pop
mov
mov
or
cs
shl
cmps
or
mov
cmp
jbe
jne
add
or
mul
sub
mov
int3
enter
push
adc
jmp
sbb
jmp
out
movs
sub
dec
dec
add
cs
adc
loopne
mov
push
je
xor
pop
jl
js
cmp
push
push
adc
mov
shl
dec
imul
or
sub
sahf
pop
test
mov
mov
and
pop
addr16
pop
loope
jae
mov
sar
ss
or
inc
test
cmc
ret
fst
loopne
cmp
xchg
sbb
leave
les
or
sbb
sbb
cmps
test
lds
adc
add
pop
cmp
js
or
aad
or
adc
push
or
call
mov
mov
(bad)
sub
or
push
imul
adc
es
or
cmp
or
adc
mov
sbb
mov
rol
dec
add
mov
and
ret
push
or
dec
mov
(bad)
icebp
js
enter
lods
adc
adc
inc
clc
std
imul
mov
mov
jo
add
popf
pusha
loope
jge
mov
test
sbb
cmp
adc
adc
rol
or
pop
push
in
scas
mov
xor
add
pop
call
call
mov
or
inc
xor
addr16
lea
lods
mov
push
sub
mov
lds
fsubr
push
leave
lahf
jb
sub
jg
xor
lock
cwde
cmps
repz
ins
scas
ret
or
push
in
jmp
cdq
into
mov
sahf
mov
add
mov
cmp
shl
cmp
push
test
mov
imul
and
jbe
push
ja
dec
push
push
xor
or
jl
or
rol
xchg
sub
sbb
int3
adc
enter
add
das
loopne
lds
int3
or
xor
ror
sub
sbb
pop
or
adc
inc
and
jmp
mov
(bad)
jecxz
xchg
call
inc
push
push
(bad)
push
rcr
and
sbb
sbb
sahf
lea
pop
adc
rcr
xor
out
sub
mov
call
daa
pop
push
jl
inc
lods
jle
cmp
jbe
inc
xchg
adc
push
add
and
mov
js
mov
ja
sub
adc
add
push
in
mov
leavew
mov
pop
add
pop
sbb
inc
dec
and
mov
dec
add
stc
push
adc
xchg
sub
lahf
cmp
mov
adc
add
sbb
add
cmp
test
retf
push
jnp
sbb
or
clc
mov
sub
lahf
inc
leave
pop
xchg
nop
mov
mov
js
or
and
xchg
fwait
sbb
jnp
xor
mov
push
or
out
repnz
jns
hlt
add
jl
or
cdq
sbb
sub
adc
push
test
adc
dec
dec
in
dec
dec
jge
dec
mov
adc
imul
jmp
lock
sub
cmp
aad
nop
xor
out
xor
jne
(bad)
jmp
add
arpl
mov
mov
cld
adc
stos
js
fadd
int3
adc
test
(bad)
jecxz
or
or
loope
or
mov
push
dec
fsub
fimul
mov
push
or
cmp
repnz
rol
xor
div
jmp
pushf
jl
jle
lods
mov
mov
sbb
(bad)
in
and
imul
es
mov
mov
addr16
xchg
mov
fcom
push
stc
pop
inc
cmp
inc
in
inc
sbb
mov
(bad)
leave
add
cmp
imul
int
or
gs
add
and
ss
or
xor
or
or
xchg
daa
cmp
jl
sub
mov
push
jbe
and
sbb
or
adc
and
pusha
add
nop
xchg
pushf
lods
or
pop
inc
loopne
or
add
xor
inc
mov
or
repnz
inc
pop
fmul
adc
push
nop
inc
ds
xor
or
push
lock
lock
and
rcl
and
add
in
or
adc
rol
jo
push
pop
mov
or
out
xor
sbb
jb
mov
or
cmp
dec
dec
push
ins
or
sbb
xor
sbb
and
add
push
ret
push
sbb
inc
xor
cmp
lods
lea
std
pop
mov
loopne
push
in
and
inc
enter
cs
xor
sbb
aad
xor
leave
retf
test
and
pushf
in
inc
and
pop
sahf
outs
adc
in
inc
and
or
inc
and
cmp
add
pushf
cs
pop
mov
sbb
fs
in
xchg
jbe
jns
xchg
popf
mov
or
inc
adc
and
and
add
mov
retf
in
jmp
loope
xchg
jne
or
and
push
mov
xor
adc
(bad)
push
add
xchg
mov
add
ret
retf
xchg
and
pop
test
mov
pushf
pusha
or
dec
or
fmul
mov
cmc
daa
dec
sbb
mov
mov
xor
movs
or
cmovae
or
and
mov
out
or
adc
(bad)
repnz
cmp
push
stos
dec
or
dec
sbb
ins
sbb
and
sbb
ja
jns
mov
xchg
enter
(bad)
xchg
jp
sbb
dec
add
cmp
jecxz
(bad)
test
xor
push
sar
xchg
dec
sahf
test
inc
shl
xor
jo
loope
jmp
pop
jmp
cdq
adc
fcom
test
stc
je
jecxz
or
add
push
enter
or
ins
(bad)
(bad)
fist
push
outs
fild
add
adc
add
push
jecxz
test
sub
lods
jp
in
das
cmp
rcr
add
jp
je
repz
add
or
int
ficom
sub
lock
sub
outs
inc
mov
test
xchg
aaa
ss
cdq
idiv
sub
rcl
xor
and
(bad)
ror
rol
div
pop
test
inc
dec
test
cmp
js
mov
fs
mov
(bad)
xor
sub
and
scas
pop
add
out
add
sbb
mov
dec
mov
add
xor
dec
mov
movs
mov
xchg
ss
xor
movs
mov
call
sub
in
out
xor
jo
and
inc
adc
inc
xor
sbb
cmps
imul
push
ja
jbe
lds
dec
movs
shl
or
adc
dec
or
push
push
xor
bound
mov
rcl
dec
mov
push
sub
sbb
les
fild
out
inc
sbb
aaa
sub
adc
imul
mov
or
(bad)
nop
aaa
xor
retf
cmp
(bad)
mov
mov
cmp
push
mov
js
movs
add
and
mov
push
xor
add
pusha
sub
cmovnp
mov
inc
jle
lods
inc
les
mov
mov
call
hlt
and
retf
adc
xlat
mov
adc
retf
cwde
sbb
rol
rol
cmp
xchg
stos
rcl
pusha
push
push
push
fwait
ret
fcmovnbe
test
or
cmp
loope
out
cmp
ffree
je
inc
fs
rol
cwde
cmp
cmp
push
lock
jno
cmp
popa
loope
inc
inc
addr16
sub
adc
(bad)
cmps
xchg
jle
sbb
or
push
push
dec
push
push
dec
mov
push
imul
cmp
js
int3
shl
inc
or
mov
pop
aas
pop
or
je
js
sysret
adc
push
mov
js
ins
imul
fisub
mov
fimul
mov
push
dec
adc
aad
shr
pushf
push
mov
punpckhdq
jge
retf
xor
cs
ja
push
xor
in
sbb
dec
sbb
inc
ds
adc
es
aas
pop
lock
mov
add
inc
sbb
inc
inc
push
ins
mov
pop
pop
shl
mov
je
shl
adc
or
inc
inc
dec
xor
cld
pop
leave
inc
enter
mov
inc
jmp
nop
xchg
add
or
push
ret
or
add
sbb
inc
dec
pop
out
shl
fld
and
pop
push
inc
cdq
or
adc
lods
jg
stos
pop
es
retf
out
push
clc
jmp
sbb
jl
cld
xchg
inc
dec
dec
cmp
lea
xchg
sbb
bound
fisubr
inc
add
cld
push
add
or
pop
leave
adc
dec
test
ds
stc
push
loopne
add
jb
retf
je
sub
pop
pop
xchg
out
and
push
loopne
(bad)
fcmovnu
xor
pusha
adc
sbb
xchg
mov
adc
in
fs
push
test
dec
push
jns
lods
inc
or
cmp
test
mov
sub
ret
outs
inc
mov
les
int
inc
mov
test
sti
mov
aaa
pusha
and
in
test
dec
xchg
daa
clc
add
popa
nop
retf
retf
xchg
bound
nop
push
jno
add
movs
add
imul
or
add
mov
js
sbb
dec
jmp
xchg
dec
cs
cmp
sar
inc
push
es
xor
add
fwait
enter
dec
mov
adc
xchg
retf
or
mov
push
jno
or
pop
xchg
call
inc
mov
fidiv
nop
ins
ins
lock
lea
pusha
outs
imul
in
outs
mov
inc
in
dec
lods
or
and
pop
xchg
pop
xor
pushf
add
mov
adc
mov
je
add
iret
and
in
or
adc
add
loope
div
xor
adc
out
pop
push
jb
and
movs
add
cmp
movs
add
xchg
jne
out
add
mov
pop
test
in
jo
jbe
lea
push
pop
or
scas
adc
xchg
inc
or
ret
bound
add
xchg
inc
push
jns
push
js
jne
push
add
call
mov
jl
in
mov
gs
sbb
test
xor
add
std
and
mov
pop
pop
mov
repnz
xor
ins
dec
jae
or
pop
ror
adc
daa
push
adc
add
enter
or
add
neg
or
adc
add
enter
cmp
adc
dec
shl
mov
sub
mov
mov
pop
jl
pop
mov
jno
rcl
dec
mov
or
clc
push
push
imul
cmp
int3
shr
sbb
jo
nop
xchg
ins
leave
dec
scas
pop
les
hlt
and
and
test
adc
inc
cmp
jne
add
add
and
pop
movs
shl
lock
paddb
add
popa
stc
test
adc
push
inc
sbb
les
loopne
push
movs
sbb
xchg
in
loope
cmps
add
rcl
lahf
push
mov
adc
es
cwde
test
stc
pop
not
xchg
or
in
mov
in
mov
add
xchg
add
in
or
mov
lea
fld
mov
or
jg
push
push
mov
mov
or
mov
out
xchg
inc
or
cmp
jns
cmp
loopne
sub
enter
pop
xor
call
or
xor
pop
sahf
enter
out
cmp
leave
fs
mov
int
jmp
mov
loope
sbb
sbb
stos
jno
xor
sahf
(bad)
jo
lock
xor
movs
pop
rcr
push
out
dec
cmps
loopne
mov
jbe
pop
in
push
sbb
sahf
pop
jb
outs
cmps
cmps
dec
add
leave
nop
pop
and
aad
test
fstp
pop
repnz
inc
pop
aaa
bnd
out
test
mov
sahf
pop
push
push
inc
loopne
mov
pop
test
sbb
sbb
stos
stos
push
ret
ins
push
lods
sub
fadd
xor
lods
fadd
dec
xor
cmp
jns
jl
or
mov
or
shr
mov
xor
dec
or
or
pop
mov
mov
sbb
or
mov
leave
mov
mov
and
ins
ficomp
mov
shr
sub
or
mov
and
mov
dec
sbb
mov
or
pop
hlt
xchg
pop
xor
and
push
test
adc
inc
mov
movs
aam
leave
and
add
xor
xor
neg
pop
lods
push
and
or
std
iret
push
add
cmc
dec
fcomp
jmp
add
adc
pop
push
dec
sub
pop
rcr
jp
mov
xor
mov
mov
mov
add
gs
add
sbb
cmp
call
and
leave
xor
jb
cmp
push
or
jmp
or
ret
cs
inc
(bad)
enter
mov
stc
imul
(bad)
or
in
xlat
pop
hlt
and
push
dec
push
dec
cs
pop
sub
mov
jg
add
push
and
sbb
mov
mov
(bad)
fisub
sbb
add
nop
adc
lea
std
aaa
sub
mov
or
or
loopne
enter
xor
push
add
fldcw
mov
fbstp
int
mov
push
mov
shl
lods
mov
ins
pop
mov
mov
outs
add
(bad)
int
sub
xor
add
daa
and
lock
pop
fnstsw
icebp
and
adc
scas
sbb
push
(bad)
pop
adc
push
pop
test
mov
jae
jmp
lods
adc
sub
mov
pmaxub
cmp
add
and
lock
jle
jne
stc
or
ret
out
movlps
popa
and
cmp
repz
inc
nop
clc
retf
cmp
sub
jecxz
sbb
popa
jo
push
mov
test
dec
add
push
mov
cmp
pop
mov
mov
push
inc
mov
fwait
jo
outs
or
mov
inc
ins
and
pop
lea
dec
pop
sbb
push
(bad)
lods
shl
cmp
ins
mov
test
test
jg
stos
lods
mov
xchg
cmp
jne
in
jge
movs
inc
push
jne
jmp
mov
sbb
out
mov
inc
cmp
pop
inc
test
or
add
jno
mov
push
or
add
push
and
mov
into
into
es
clc
xor
adc
pusha
aam
push
sub
add
mov
in
jne
cmp
add
dec
xchg
sub
aam
sub
outs
imul
add
xor
add
cli
ins
xchg
ret
sbb
scas
mov
jb
mov
(bad)
xchg
mov
dec
mov
sub
mov
in
loop
push
call
test
movs
pop
push
pop
cmp
inc
outs
das
mov
adc
xchg
in
xchg
push
add
lods
add
or
mov
dec
xor
imul
dec
pop
sub
xchg
ss
pop
call
pop
jb
rcr
lock
mov
or
mov
inc
push
sbb
in
inc
push
inc
adc
cmp
aaa
cld
adc
(bad)
cmp
inc
sbb
pop
adc
bound
out
or
ret
adc
pop
mov
xor
sub
mov
pop
or
add
xor
cmp
aaa
xor
pusha
sub
jbe
sub
jge
jne
cwde
into
push
ret
out
leave
repnz
cli
ins
xchg
mov
push
enter
loop
and
js
lods
mov
es
sub
sub
jbe
imul
mov
lds
mov
loop
push
push
imul
jmp
jnp
push
push
adc
(bad)
arpl
push
call
sub
adc
iret
dec
int3
dec
push
pop
je
push
or
adc
in
lods
rcr
add
sahf
(bad)
mov
sbb
nop
adc
jmp
inc
xor
mov
(bad)
hlt
jo
add
push
ins
xor
aaa
das
mov
xor
out
stos
pop
mov
mov
dec
push
add
sbb
dec
and
add
sbb
(bad)
mov
or
dec
inc
aad
adc
and
sub
or
jmp
mov
pop
mov
out
push
pop
out
xchg
pop
sbb
pusha
enter
mov
inc
push
add
xor
pop
inc
sar
inc
imul
and
cmp
or
nop
or
fs
pop
push
pop
cmp
or
add
sub
add
js
scas
dec
scas
adc
or
adc
mov
add
or
sbb
sbb
sbb
sub
push
sbb
sub
les
push
and
enter
test
sub
pop
and
test
adc
test
sub
or
test
enter
hlt
sub
je
add
and
push
or
das
nop
add
lods
adc
dec
scas
xor
and
adc
test
xor
jb
or
ss
enter
aaa
cmp
adc
and
adc
add
cmp
ds
push
and
aas
and
enter
test
inc
nop
or
adc
inc
inc
pushf
jo
jb
inc
movs
dec
shr
movs
xor
test
sbb
dec
test
mov
es
dec
dec
in
sbb
dec
jmp
fmul
icebp
push
ret
sub
mov
addr16
ret
fdiv
pushf
xchg
and
and
xchg
adc
xor
jne
jo
neg
sub
dec
sub
and
shl
jo
rcr
call
adc
sti
ins
xchg
xor
sbb
or
enter
and
lods
ins
mov
push
rcl
cmp
jne
push
outs
add
jns
mov
movs
add
pushf
sbb
enter
les
sahf
cmp
es
es
imul
ret
ret
fucomip
push
or
loop
push
pop
loop
cs
clc
mov
mov
or
out
push
add
cmp
jecxz
(bad)
mov
call
aaa
stos
and
add
clc
xor
sbb
dec
sbb
mov
or
dec
outs
or
js
jno
or
addr16
in
ret
adc
call
or
ja
or
push
sbb
adc
or
loopne
ret
pop
and
push
int
dec
ins
or
xor
cli
(bad)
pop
sbb
mov
add
add
pop
and
(bad)
popa
jg
out
inc
cmps
imul
mov
and
bound
je
add
or
jmp
mov
push
push
or
jns
test
add
or
add
or
fadd
or
scas
movs
jle
shl
pusha
push
sub
lea
retf
les
ss
add
pop
fnsave
cmp
inc
add
je
adc
ret
sub
add
emms
aas
adc
movs
cmp
movs
clc
inc
stos
loop
sbb
xor
enter
in
and
ror
iret
inc
xor
dec
jl
adc
cmp
add
mov
pop
pop
fs
xor
mov
or
js
pop
into
and
push
jo
add
ins
into
or
add
push
jmp
cli
jbe
add
jg
sar
and
add
cpuid
mov
jne
je
or
jp
int3
sahf
pop
push
adc
xor
and
dec
adc
fidiv
js
xor
jo
xchg
jl
adc
xlat
or
add
add
pushf
ins
mov
and
enter
fisttp
dec
dec
push
xchg
mov
push
push
mov
jg
push
pusha
pusha
pop
mov
ds
push
or
push
mov
daa
push
or
test
or
out
div
mov
loop
add
out
jae
push
retf
adc
faddp
add
rcr
sub
cmp
ja
xor
or
or
imul
push
lds
cld
push
icebp
test
inc
aas
ds
dec
dec
mov
jmp
outs
pop
cld
jg
and
mov
or
shr
or
or
cmp
(bad)
aas
or
mov
mov
cld
adc
mov
jmp
out
je
aas
and
jmp
pop
fsubr
int
mov
xor
fisttp
sbb
pavgb
test
add
mov
or
sub
mov
mov
jne
ds
xchg
fs
pop
das
push
or
in
cmp
jmp
dec
push
in
and
push
or
inc
push
or
or
cmp
mov
(bad)
ins
(bad)
retf
daa
and
lds
xchg
bound
add
ficomp
cmp
inc
pop
sbb
xchg
addr16
mov
jo
iret
xchg
add
push
mov
push
or
add
out
adc
bound
mov
fst
cli
cld
adc
fwait
dec
icebp
cmp
je
adc
push
add
fdivr
jmp
sub
sbb
xor
push
ror
adc
lahf
add
add
xor
adc
and
push
cmp
mov
inc
jmp
popf
add
jae
cs
pop
push
pushw
outs
lea
dec
movs
add
mov
add
jno
add
cmp
mov
movs
mov
mov
loopne
je
push
dec
inc
push
jne
outs
pop
outs
pop
imul
imul
add
push
jno
cmp
push
inc
leave
lock
mov
retf
or
(bad)
or
mov
fmul
sub
dec
jo
sub
inc
aam
adc
push
lock
jg
jnp
arpl
aaa
stc
or
jnp
aaa
or
push
add
pop
cmp
cdq
sbb
int3
add
push
dec
les
push
sbb
jge
mov
hlt
jb
movs
cdq
xor
ss
cdq
push
leave
sbb
ret
or
mov
sbb
(bad)
add
mov
adc
add
cmp
call
jbe
popa
ins
mov
inc
(bad)
jae
gs
or
xchg
push
ret
cmp
loop
movs
add
add
push
xor
or
(bad)
xchg
jo
adc
stos
pop
cmp
jne
loop
gs
js
xchg
ins
in
(bad)
fmul
inc
std
cmp
add
ds
xchg
cmps
lea
inc
dec
pop
pop
mov
mov
icebp
lds
in
sub
loop
not
and
inc
mov
je
push
pop
hlt
inc
loop
dec
shl
mov
cmp
push
cmp
popa
(bad)
std
dec
mov
pop
xchg
push
bound
test
jge
jae
pop
mov
mov
outs
movs
cmp
mov
dec
cmp
pop
outs
das
xlat
test
sbb
or
or
push
cli
out
pusha
add
int3
out
or
pop
or
out
and
mov
jne
pushf
mov
xlat
mov
clc
dec
outs
xor
or
arpl
fincstp
dec
add
push
jl
jo
retf
mov
sub
push
or
pop
fwait
cli
jmp
je
gs
pop
jecxz
div
sub
enter
push
mov
bound
xor
push
pop
cmp
jne
pop
inc
add
mov
or
pop
or
jae
fdivr
adc
mov
and
cmps
lods
push
cmp
out
in
retf
jmp
aad
adc
mov
nop
in
jne
mov
repz
rcr
sti
test
loop
lock
fstp
mov
cmove
inc
mov
inc
mov
pop
dec
or
gs
jo
int
mov
jne
sbb
rol
ret
or
lds
cmp
imul
(bad)
adc
pop
outs
rcr
sbb
or
adc
cld
add
adc
movs
test
je
jge
push
cwde
js
lock
pop
dec
ret
inc
cmp
add
push
test
mov
das
add
xchg
push
mov
lods
ins
test
and
mov
inc
mov
imul
adc
push
mov
add
cmp
jge
and
add
and
call
mov
push
mov
adc
pop
and
inc
mov
jmp
cmp
movs
jmp
or
push
mov
out
xor
dec
je
dec
mov
or
in
sbb
or
les
inc
or
stos
push
mov
shr
jg
pusha
jns
or
call
mov
adc
cwde
mov
cld
ins
popa
mov
push
fcom
mov
push
ja
int3
jmp
icebp
test
rcr
jmp
sub
xchg
test
outs
sub
and
sbb
sti
repz
sub
pop
(bad)
in
popa
scas
or
pop
mov
adc
add
jmp
iret
fwait
or
inc
test
push
pop
xchg
shl
inc
pop
sbb
pop
pop
pop
and
inc
adc
ror
ficom
inc
jb
or
jecxz
mov
mov
sub
inc
fdivr
or
mov
push
ss
xor
mov
fdivr
jae
inc
pop
sub
fistp
push
sbb
iret
push
mov
test
or
dec
les
stc
popa
popf
mov
mov
lahf
and
mov
leave
adc
xchg
into
rol
pusha
push
push
and
loop
mov
jb
daa
popa
push
cwde
cmps
fadd
fdivr
pushf
push
xor
mov
mov
or
aaa
mov
pop
push
dec
and
push
fidivr
mov
psllw
pop
or
cdq
jmp
add
adc
bound
sbb
inc
ds
and
test
rcl
and
stos
mov
dec
add
scas
hlt
bound
scas
ins
nop
movs
das
inc
inc
cmps
in
add
les
lahf
xor
out
mov
loope
sbb
ror
inc
inc
mov
ss
xchg
xor
push
fbstp
movs
in
mov
sbb
jmp
test
test
or
add
rol
and
daa
mov
push
lds
sub
(bad)
stos
sub
rol
add
daa
cmp
add
pop
pusha
fwait
cmc
push
or
test
inc
xor
xor
push
add
push
dec
adc
xor
push
xor
cmp
mov
cwde
enter
fbstp
imul
mov
sub
mov
push
push
mov
cwde
(bad)
cs
xchg
leave
jae
mov
mov
sub
test
sub
mov
adc
or
jns
loope
mov
mov
adc
jo
ds
add
loope
pop
ffree
test
cld
pop
push
xor
ret
sti
dec
mov
jmp
ret
out
mov
pop
jmp
scas
dec
imul
xor
add
test
jp
cmp
add
mov
outs
clc
push
stos
loopne
adc
or
fild
pop
mov
ja
js
in
lock
xchg
es
lods
mov
and
mov
mov
jmp
cmp
je
mov
push
cli
cmps
xor
jbe
push
pop
or
sahf
mov
idiv
ss
sbb
ret
aam
inc
add
pushf
pushf
fcomp
or
or
pushf
pushf
pushf
pushf
adc
adc
pop
icebp
lahf
pushf
sbb
mov
mov
outs
cmp
push
stc
add
inc
int3
leave
adc
cmp
jecxz
clc
and
xor
sbb
inc
fwait
cmp
dec
add
sbb
or
test
and
scas
add
clc
std
add
adc
neg
lea
dec
out
mov
adc
test
jo
jo
daa
ss
rcr
shl
aad
or
inc
repnz
pop
mov
push
xchg
mov
loopne
and
mov
inc
icebp
dec
enter
cli
mov
add
xchg
fwait
movs
imul
xor
inc
add
inc
rcr
xor
jle
and
or
mov
cmp
jne
cmp
mov
cmp
push
cmps
lea
out
(bad)
mov
(bad)
cmp
in
(bad)
in
enter
imul
mov
jno
hlt
jb
add
xchg
fld
adc
mov
mov
add
stos
pop
hlt
adc
cmp
jle
mov
add
iret
and
(bad)
pusha
test
push
jl
xchg
cmc
mov
inc
sbb
mov
int
in
push
mov
mov
and
jl
bound
inc
std
push
or
dec
daa
cmp
popa
mov
pop
lods
mov
adc
retf
shl
push
mov
sub
or
adc
(bad)
aam
test
ret
pop
mov
dec
cs
sbb
popa
leave
add
test
adc
sub
dec
les
jne
in
scas
sbb
out
fwait
sub
push
push
sub
inc
test
retf
or
xchg
cmp
push
and
and
add
imul
or
xchg
dec
add
sub
loopne
pop
push
sub
stos
cmp
inc
pusha
xchg
dec
add
dec
enter
mov
cmp
aas
push
mov
push
in
push
mov
neg
sbb
clc
xchg
ret
jmp
and
aad
cli
jno
dec
push
push
add
sbb
and
aad
int
xor
pop
sbb
jae
icebp
pop
fistp
inc
(bad)
pop
cmp
jl
dec
and
pop
or
cli
or
inc
sbb
adc
jne
(bad)
adc
cmp
sub
xchg
stos
into
mov
ret
adc
into
dec
sub
ficom
add
sbb
cmp
test
je
lahf
sub
test
pop
test
mov
or
mov
leave
in
pop
int3
dec
enter
or
sbb
adc
icebp
cmps
xor
inc
inc
adc
add
inc
ins
popf
inc
or
pushw
mov
(bad)
cs
ret
mov
aad
stos
add
gs
cmp
and
mov
in
or
out
and
or
inc
fwait
xchg
movs
pop
xor
mov
mov
loopne
push
loopne
pop
or
fimul
test
les
ins
pop
add
mov
sbb
push
xor
cmps
fwait
cmp
jb
retf
inc
cmp
aaa
cmp
pop
xor
out
cmps
out
das
je
adc
mov
movs
xor
pop
cmp
add
add
cmp
jnp
loop
je
or
sub
daa
jo
push
aam
push
sar
movs
or
and
out
je
dec
jb
popa
xchg
ret
mov
mov
xchg
icebp
pop
dec
scas
sub
or
cmp
dec
adc
adc
inc
dec
pop
aas
sbb
and
lahf
ret
in
addr16
sbb
push
add
lods
mov
cmp
mov
seta
inc
ret
fist
jmp
fiadd
test
inc
sbb
fld
xor
or
inc
inc
cmps
add
or
add
add
adc
jg
aam
mov
loop
dec
pop
inc
and
aad
push
mov
and
adc
mov
int3
and
inc
inc
mov
ficomp
inc
inc
dec
lea
rol
call
pop
ror
mov
cwde
js
cmp
popa
(bad)
ret
ins
or
dec
or
and
aam
lock
push
cmp
bswap
mov
test
rcl
mov
cwde
xchg
popa
mov
scas
dec
lea
ds
cmp
lds
fimul
rol
mov
dec
repnz
pop
test
or
mov
xchg
and
inc
test
mov
(bad)
pop
add
pop
rcl
dec
je
or
adc
(bad)
mov
js
(bad)
call
mov
add
push
cli
js
lea
adc
add
adc
push
call
xor
stc
retf
or
inc
jb
or
(bad)
add
leave
mov
push
pop
(bad)
mov
push
out
jno
js
out
or
xchg
cld
and
sti
or
xor
test
out
sbb
jo
add
mov
inc
add
ins
jb
or
test
sbb
loopne
int
jno
dec
lock
pusha
mov
cmp
adc
daa
pop
adc
adc
daa
lods
dec
ja
stos
mov
fisub
test
outs
push
fldenv
xchg
bound
xor
add
inc
push
movs
pop
sub
xchg
mov
jmp
jl
or
ret
daa
jo
in
xchg
repnz
ds
sbb
add
inc
pop
add
mov
je
jl
sbb
or
or
cmc
sbb
sub
inc
(bad)
xchg
sub
(bad)
pop
in
cmc
adc
pushf
and
ret
sbb
inc
push
loopne
sub
dec
mov
aaa
aam
or
adc
daa
repz
movs
adc
or
or
inc
xchg
cmp
je
rol
and
pushf
push
xchg
inc
je
sbb
or
sar
sbb
cmp
inc
or
aam
sub
add
push
dec
(bad)
sbb
add
pop
xor
push
gs
mov
pop
rcr
mov
fxch
inc
push
mov
mov
popa
xor
test
jne
enter
push
out
sbb
fld
je
jg
fld
cwde
pop
rcl
ins
movs
dec
mov
push
mov
rol
mov
test
push
(bad)
leave
and
cmp
and
and
jbe
and
inc
or
mov
mov
pop
inc
mov
stos
jl
cmp
cwde
dec
and
pop
mov
dec
call
mov
fidiv
ja
mov
dec
movs
xor
inc
test
jge
test
sbb
enter
mov
test
iret
call
int3
mov
lea
rol
cmp
int3
sbb
fistp
pusha
push
mov
xor
sbb
pop
inc
add
test
sub
inc
inc
add
xchg
xor
push
mov
lods
and
out
inc
push
fild
mov
adc
fidivr
sub
xor
mov
jl
sbb
sbb
or
sub
jl
add
cmp
and
lahf
sub
es
es
add
cmp
or
cmps
pusha
push
ins
cld
mov
nop
xor
and
rcl
inc
and
dec
or
cmps
arpl
mov
mov
scas
dec
fnsave
out
rcr
push
inc
lods
push
xchg
and
jne
mov
xlat
lock
push
sub
mov
js
mov
add
or
or
into
xchg
sub
sub
cmp
adc
add
add
cs
jo
cmp
and
push
jae
pop
push
pusha
sub
inc
and
push
sbb
data16
jmp
iret
sub
lock
and
cmp
sbb
adc
mov
cs
or
cwde
mov
push
pop
sar
sbb
or
jl
xchg
xchg
(bad)
mov
pop
loopne
adc
adc
fstp
mov
cmp
inc
dec
jo
pop
xor
mov
cmp
dec
add
fwait
icebp
movs
loopne
imul
rcr
xchg
pop
xor
adc
push
jmp
inc
or
xor
xchg
mov
pop
imul
out
sub
push
jmp
(bad)
sub
fmul
pop
push
(bad)
xor
push
mov
or
in
push
and
std
jnp
inc
inc
add
xor
pop
mov
cmp
cmp
and
pop
xchg
fwait
jmp
lock
cs
inc
es
sahf
jge
mov
rol
or
add
repz
mov
jns
pusha
cmp
gs
sbb
dec
adc
push
je
inc
sbb
mov
or
inc
or
sbb
retf
mov
and
and
mov
add
and
mov
mov
inc
fld
repz
add
inc
push
push
push
mov
cwde
out
sbb
lds
or
inc
scas
mov
loopne
sbb
cdq
sar
adc
clc
hlt
push
sbb
leave
adc
push
add
pop
imul
les
xor
mov
push
jle
push
dec
mov
push
xchg
or
in
loope
lahf
push
adc
add
movs
push
aam
xchg
dec
clc
mov
loopne
adc
xor
sahf
push
cmovae
std
into
scas
dec
out
push
loope
adc
xor
mov
dec
push
fcom
dec
dec
push
loopne
add
pop
sar
fwait
mov
pop
push
loope
and
sbb
and
xor
sub
or
test
push
add
imul
cmp
ret
jge
mov
and
and
xchg
int
(bad)
dec
dec
popf
adc
pop
and
sub
and
dec
sbb
xchg
lea
pop
push
mov
inc
jno
mov
or
lock
rcl
fcomip
inc
push
inc
jns
add
je
mov
add
mov
lahf
test
xchg
rcl
inc
push
cmc
into
jmp
fs
pop
pop
popa
(bad)
fst
pop
data16
call
or
sbb
xor
pop
push
sbb
sub
sbb
jne
retf
fcomp
cmp
adc
adc
cld
xor
sbb
adc
rcr
pop
sub
inc
sbb
imul
sub
adc
leave
fwait
dec
(bad)
iret
sbb
test
popa
dec
push
adc
call
cmp
push
shl
test
add
loopne
clc
push
and
loop
xor
cld
cmp
jmp
sbb
mov
inc
xor
inc
cmp
jbe
sar
dec
hlt
mov
pop
jb
inc
adc
push
hlt
stos
mov
sub
arpl
push
scas
xor
bound
add
loopne
stos
aaa
ficom
mov
jle
push
rol
ror
xor
xchg
push
imul
xor
loopne
sub
xor
fwait
popf
jle
cmp
push
push
out
dec
shr
sub
jne
aam
pop
loopne
mov
fs
sub
cmp
jae
test
mov
push
mov
inc
cmp
or
mov
adc
inc
sbb
push
sub
cmp
ja
adc
cmp
loopne
and
add
inc
mov
pop
loop
aaa
pushf
jg
nop
mov
inc
mov
cld
xor
cwde
sbb
mov
imul
test
and
fwait
div
aam
and
inc
sub
mov
mov
fs
inc
inc
inc
inc
fs
inc
inc
inc
mov
mov
rcr
cmps
or
cmp
push
inc
inc
add
ss
mov
or
push
mov
into
inc
ins
mov
test
rcl
fadd
mov
dec
test
out
sbb
add
mov
sub
jb
sub
cs
xor
mov
pop
dec
add
push
(bad)
stc
in
pop
lea
pop
or
push
inc
inc
push
push
sub
sbb
dec
inc
inc
sub
out
fs
and
cmps
add
dec
adc
fmul
int
popf
adc
shl
xchg
add
cmp
mov
jge
add
xor
aas
inc
sub
je
mov
icebp
jnp
lea
xchg
and
dec
add
std
iret
jmp
inc
dec
xchg
bnd
jge
arpl
sub
es
push
push
retf
lds
xor
pop
mov
xor
jno
sub
push
and
scas
inc
aaa
or
outs
adc
xor
xchg
sbb
movs
enter
hlt
add
ret
adc
(bad)
sti
les
popa
add
fild
iret
ror
jne
cli
cmp
je
push
adc
pop
xchg
mov
stos
movs
push
es
imul
mov
es
lea
(bad)
ror
mov
imul
or
and
jmp
adc
adc
and
nop
mov
add
ss
adc
inc
mov
pop
and
and
out
jno
rol
push
push
mov
or
sbb
push
sar
in
push
mov
xor
push
xor
cmp
mov
sub
fild
lods
pop
cmps
push
sbb
cmp
cmp
imul
ficom
je
sub
clc
jae
call
mov
push
xor
and
(bad)
sbb
(bad)
icebp
push
jg
push
inc
not
fs
shr
iret
adc
sbb
add
xchg
(bad)
neg
cmp
fdiv
mov
inc
rcl
dec
sub
and
or
int3
dec
jae
push
sbb
jl
adc
outs
dec
ss
mov
lea
inc
je
shr
push
sub
mov
loop
pop
pop
retf
push
push
inc
xor
push
xchg
cs
int3
mov
push
or
add
inc
push
(bad)
dec
push
jae
push
sbb
aas
cmp
xor
xor
adc
mov
push
dec
add
pop
scas
outs
nop
mov
jecxz
add
jmp
mov
add
neg
push
adc
call
test
xchg
adc
add
pop
mov
jg
clc
jg
rcr
int
fld
push
lods
fistp
adc
add
sub
xor
fsubrp
xor
fstp
icebp
test
fstp
ss
sub
sbb
ficom
or
rcr
ret
mov
imul
scas
adc
aam
add
and
pop
(bad)
shr
cmp
pushf
mov
fidiv
ror
and
inc
repz
or
add
jo
adc
adc
adc
jae
sub
vaddps
pop
adc
mov
dec
or
mov
mov
adc
rcl
sbb
mov
invd
sub
pushf
or
mov
cmp
aad
jae
jg
mov
inc
test
retf
int
jns
test
enter
lock
xlat
es
push
and
jnp
sbb
adc
push
adc
sbb
iret
out
lock
sahf
rcl
pop
ret
add
add
pop
loope
shl
es
and
adc
(bad)
out
ins
xor
cli
stos
fadd
mov
int
ror
in
mov
out
maskmovq
mov
and
push
(bad)
cld
mov
sub
aam
out
(bad)
mov
fist
cmps
pop
repnz
and
inc
arpl
pop
icebp
xchg
sub
mov
sub
loope
and
cli
mov
or
out
enter
and
ret
mov
pusha
jb
(bad)
rcl
jmp
imul
hlt
push
sbb
mov
dec
sub
push
loope
sub
ja
cmp
jo
out
adc
xor
push
or
or
or
out
add
rol
sar
xchg
pop
icebp
pusha
cmps
js
fstp
in
inc
js
jge
ja
aam
sub
loope
popf
cmps
in
ror
jo
(bad)
mov
cs
sub
cli
add
fistp
outs
leave
dec
call
in
sub
cmp
stc
push
out
movs
(bad)
vdivps
loopne
shr
clc
ret
fdiv
(bad)
adc
mov
jecxz
push
mov
mov
icebp
ret
je
cmps
out
adc
push
retf
cli
shl
leave
stc
jp
add
xor
mov
pop
lea
fiadd
xor
shr
fucomi
sar
fst
cli
jp
cmp
out
repz
rcl
ret
out
pop
or
push
imul
xchg
inc
cmp
inc
jo
cmp
sar
fadd
xor
lock
mov
pop
(bad)
mov
scas
aad
fbstp
pop
adc
push
mov
jmp
pop
pop
or
(bad)
sbb
pop
rcr
into
out
jle
xlat
loopne
push
js
mov
and
mov
cmp
and
xchg
add
mov
inc
pop
and
sar
mov
mov
mov
pop
in
loopne
je
dec
pusha
add
pop
pop
adc
jg
ror
shl
dec
test
(bad)
shl
and
mov
xchg
ja
(bad)
and
xor
pop
pop
retf
ins
icebp
inc
jno
and
loope
cmp
mov
push
dec
(bad)
mov
push
fmul
dec
xlat
loope
push
mov
iret
arpl
loopne
add
sub
adc
jne
mov
push
jl
outs
scas
jg
mov
xor
sbb
shl
lock
pop
call
pop
xchg
and
mov
inc
inc
cwde
jl
shl
inc
adc
mov
mov
rcl
stc
or
ret
imul
(bad)
xchg
jl
rcr
dec
adc
add
mov
mov
(bad)
ret
add
cmp
xchg
aas
retf
xor
cs
pop
mov
push
cmp
mov
arpl
ret
enter
add
mul
jp
sbb
add
xchg
jb
jg
ret
and
or
retf
jae
ret
pop
ja
jp
in
outs
xchg
sbb
sub
sbb
ja
mov
dec
lea
push
es
xchg
lods
sti
push
push
paddd
or
add
jmp
dec
dec
or
sub
call
push
add
dec
sbb
(bad)
cs
shr
jle
jmp
xchg
mov
dec
add
dec
mov
add
cmp
loope
ret
dec
sbb
loopne
jnp
ja
add
les
neg
sar
add
cmp
and
sar
mov
adc
cmps
idiv
lock
jbe
retf
test
xchg
ss
mul
adc
sbb
loop
fnstcw
mov
test
out
adc
inc
jg
pop
rol
iret
and
jmp
lahf
ret
sbb
sbb
test
push
xor
add
pop
jno
enter
jns
std
ret
std
or
or
shr
push
out
push
rcl
cld
je
inc
in
push
pop
dec
imul
loope
out
adc
dec
or
mov
cmp
leave
mov
pop
lock
push
shr
adc
add
call
xor
test
mov
inc
push
aaa
push
cdq
(bad)
in
shl
repz
loop
xchg
xor
fldcw
cmp
add
mov
sub
ss
aad
popa
movs
add
ins
xor
push
mov
xchg
in
pushf
movs
dec
jnp
jg
add
sbb
hlt
iret
shl
test
aaa
push
sbb
mov
retf
dec
lock
out
and
sbb
or
pusha
ins
out
sub
(bad)
outs
aas
(bad)
fstp
push
lea
call
lock
jp
mov
sbb
shl
jnp
popf
xchg
nop
sub
scas
ins
arpl
sub
xchg
xor
mov
sbb
or
jmp
pushf
sbb
mov
data16
push
add
das
sbb
dec
rcl
ror
retfw
in
jp
cmp
xchg
push
pop
pop
dec
mul
pop
neg
push
sub
mov
adc
fcmovnu
dec
sbb
adc
fstp
mov
(bad)
pop
sbb
sbb
clc
and
lds
mov
addr16
scas
jmp
icebp
mov
in
mov
fs
mov
ficom
nop
inc
jo
and
addr16
push
icebp
dec
clc
fst
pop
enter
sub
xor
mov
adc
lock
pop
and
or
mov
enter
jns
lock
out
int
test
pop
popa
jns
mov
ins
and
jns
push
ret
cmp
cmp
test
test
mov
dec
cvttps2pi
inc
fnstenv
cs
mov
outs
adc
loopne
jne
repnz
cmc
nop
jg
xor
dec
stos
xor
imul
and
pop
sbb
int3
inc
fld
adc
es
or
push
fwait
jg
add
sbb
fiadd
sti
sub
pop
daa
pop
daa
test
xor
out
jo
sub
fcmovnu
icebp
dec
pop
add
mov
adc
mov
sbb
cmp
cmp
test
ret
loope
scas
or
xor
shl
lds
lock
pop
mov
add
dec
push
push
push
imul
jns
xchg
push
or
pop
ins
ret
or
sbb
inc
jne
jp
inc
dec
pop
xchg
jbe
int3
push
add
fdivr
shl
jno
xor
popa
or
add
js
popf
inc
xlat
cmc
fwait
dec
jmp
and
jge
es
mov
jmp
fadd
mov
pop
dec
or
daa
sahf
mov
rcr
cmp
in
pop
mul
pop
jne
fld
pop
mov
test
je
mov
rol
int
(bad)
xchg
sub
cli
mov
jnp
ins
adc
ror
ret
pushf
and
and
add
mov
in
fcmovnu
fwait
xor
shr
fldenv
add
ret
ins
ret
fisub
inc
add
sahf
xchg
xor
pop
cmc
leave
call
push
lds
inc
mov
mov
fisttp
leave
mov
pop
mov
mov
sub
in
ror
sub
and
rcl
inc
jb
loopne
mov
nop
and
sbb
in
js
lock
repnz
add
cmp
mov
mov
sbb
jns
adc
push
mov
jns
or
lea
xchg
and
in
sbb
xchg
inc
push
xchg
inc
ficomp
in
nop
add
inc
pusha
cmp
sub
and
mov
mov
pop
ja
inc
fucom
jmp
jb
jl
or
das
daa
xchg
and
test
and
jmp
mov
test
adc
adc
inc
nop
push
test
iret
add
das
cld
and
aam
movs
fldz
loope
and
xchg
sbb
lea
mov
ret
sub
and
fisttp
mov
or
scas
mov
inc
add
or
and
test
into
mov
mov
lea
and
sbb
dec
es
add
call
cmp
xor
mov
lds
pop
xor
es
inc
test
out
add
nop
xchg
fs
add
arpl
pop
scas
and
push
mov
sbb
dec
enter
test
sbb
icebp
xor
test
aam
test
scas
inc
adc
inc
adc
sub
add
add
and
call
jb
daa
(bad)
std
xchg
mov
mov
cld
test
cmpxchg
and
das
cld
adc
and
sub
push
stc
sub
xor
nop
add
rol
lods
dec
in
jne
test
pop
gs
jmp
and
in
fldl2e
fidivr
add
ret
in
test
sub
je
sbb
les
dec
adc
and
xchg
mov
rcr
add
call
cwde
loope
scas
cmp
or
xor
rol
fldln2
inc
in
iret
es
rol
push
ret
dec
add
loopne
out
mov
in
jmp
sbb
adc
mov
retf
ret
es
sub
fwait
cmps
in
jmp
xor
aam
add
or
rcl
add
ret
pop
add
mov
xor
xchg
sahf
jns
ins
ins
fsub
daa
jbe
lock
xor
xchg
test
sbb
pop
xchg
jp
xor
je
outs
mov
jns
clc
dec
jmp
push
xor
or
inc
or
cmp
movs
jbe
adc
data16
movs
push
imul
adc
rcl
les
and
add
iret
sbb
loope
in
fstp
cmps
jge
jl
sub
adc
inc
clc
pop
xor
in
fucompp
inc
sub
push
jnp
inc
or
pop
loopne
and
xchg
sahf
pop
movs
jmp
mov
(bad)
cmp
jne
jb
push
mov
jne
xchg
fcom
imul
ret
mov
mov
cs
xlat
xor
es
xor
fmul
and
inc
cmp
imul
adc
(bad)
fstp
inc
pop
retf
dec
mov
sub
lods
shl
ins
(bad)
fldenv
jge
fcom
jmp
hlt
in
xor
cmps
bound
pop
push
dec
xor
shr
pop
js
enter
fwait
out
in
jecxz
sahf
sbb
push
fwait
jp
and
inc
jo
or
push
or
fisttp
ret
fstp
div
sub
ret
mov
fstp
dec
or
inc
adc
push
mov
outs
dec
in
enter
sbb
out
test
test
sar
test
ja
mov
adc
sbb
clc
mov
sbb
les
cmps
dec
jo
rcl
test
add
loopne
fst
cmp
sbb
sti
repz
cmc
aam
loopne
or
sti
cld
js
and
mov
cmps
call
inc
movs
fmul
leave
les
es
fcmovnbe
pop
call
lods
imul
inc
lock
pop
popa
xchg
gs
xlat
mov
ret
fld1
pop
xor
cmp
cmps
sub
arpl
and
outs
aam
add
add
cwde
stos
sbb
fsub
dec
arpl
loopne
mov
mov
fdivr
dec
push
xlat
clc
mov
daa
cmps
sbb
mov
mov
enter
sub
inc
in
push
xor
scas
in
xor
inc
and
or
dec
cs
in
xlat
fdiv
stc
xor
dec
rcr
sbb
push
in
hlt
or
inc
enter
mov
mov
shl
mov
test
ret
pop
mov
adc
ror
adc
mov
xchg
jns
push
mov
fld1
call
and
mov
rol
and
xchg
dec
test
pop
sub
aam
fild
cdq
in
adc
push
or
sbb
gs
dec
and
leave
mov
rcl
loope
ror
add
rcl
sbb
call
rol
dec
jmp
cmc
mov
xor
rcl
xchg
push
dec
push
enter
test
(bad)
out
add
(bad)
das
das
nop
data16
enter
xchg
ret
jae
int
fcomp
shr
dec
or
ja
in
sar
pop
or
(bad)
es
add
jns
add
imul
add
pop
clc
fld
test
xor
scas
in
test
mov
sbb
mov
push
jb
les
sbb
sub
mov
cmp
jp
arpl
in
sbb
mov
out
sbb
push
mov
xor
lea
call
vmread
sbb
setnp
jbe
test
pop
pusha
xor
add
add
dec
push
ins
es
ror
in
inc
mov
lock
dec
push
add
enter
xor
cmps
mov
and
add
mov
dec
test
fnstenv
dec
pop
fadd
pusha
nop
or
loopne
in
xor
push
xor
clc
(bad)
int3
cld
arpl
sbb
inc
and
push
sub
xor
adc
cld
cld
cmp
sbb
add
test
cld
in
mov
scas
in
enter
pop
add
movs
std
xchg
or
ins
popf
or
pop
pop
push
jbe
pop
fistp
and
js
int3
pop
mov
adc
das
adc
inc
repz
inc
retf
and
mov
mov
scas
mov
imul
sbb
add
sub
leave
pusha
clc
pusha
clc
popa
sub
shr
daa
imul
inc
xchg
imul
sbb
adc
loopne
clc
add
and
xor
enter
loopne
ds
leave
adc
push
clc
push
clc
(bad)
or
mov
mov
stos
dec
ret
mov
(bad)
adc
movs
aam
ds
and
aaa
and
js
push
sbb
je
data16
adc
cdq
xchg
jecxz
xor
in
sbb
sub
clc
inc
sbb
pop
adc
loopne
xchg
fs
ror
dec
sbb
movs
mov
aaa
(bad)
std
enter
in
aam
mov
cmp
int
and
xor
leave
leave
ins
xchg
pusha
fmul
js
add
ss
adc
test
push
lock
xor
mov
push
push
sub
mov
or
or
leave
and
or
jb
or
push
adc
or
adc
test
inc
(bad)
test
mov
jmp
cdq
or
mov
mov
jl
and
or
cmp
shr
shl
dec
cmp
mov
rcr
mov
push
pop
mov
shl
and
add
adc
adc
retf
push
nop
imul
xchg
dec
js
test
ja
fadd
sbb
sbb
inc
lea
push
or
mov
and
inc
movs
add
icebp
call
pop
add
mov
inc
dec
mov
loopne
and
mov
xor
(bad)
pop
lods
in
mov
leave
shr
and
push
ins
outs
pushf
cmp
sub
xor
inc
xchg
pop
in
lahf
and
cmp
sub
mov
push
rcl
shr
adc
clc
nop
cmc
inc
js
arpl
cdq
fs
test
hlt
push
and
jns
mov
loopne
sar
dec
fwait
ss
inc
nop
icebp
mov
and
jo
shl
nop
xchg
cmc
add
and
cdq
add
dec
cmp
stc
icebp
sub
cmp
mov
repz
xor
not
push
test
pushf
fs
push
mov
lock
enter
fadd
push
jno
cwde
sbb
outs
push
repnz
and
push
push
mov
inc
or
sub
fimul
clc
mov
out
mov
mov
cdq
inc
adc
sub
scas
enter
add
adc
cmp
inc
cli
ins
cmps
sbb
fist
and
dec
jo
imul
fs
lock
xchg
dec
fwait
jbe
sub
cmp
mov
sub
test
icebp
hlt
jb
dec
mov
jmp
mov
cli
aad
inc
cmps
jno
ror
imul
jmp
add
add
hlt
call
mov
mov
add
js
scas
dec
mov
xor
cdq
in
mov
adc
dec
xor
and
cwde
push
cmp
fdiv
in
add
or
test
imul
add
mov
inc
icebp
mov
ficom
icebp
and
or
pop
add
shl
xor
cmps
lods
or
adc
dec
js
dec
sbb
cli
mov
es
sub
stc
leave
and
sbb
cwde
push
cmp
fdivr
fcom
test
lock
adc
and
xor
xchg
dec
xor
cld
cld
cld
cld
and
and
adc
scas
and
and
ret
jecxz
cs
adc
mov
leave
mov
adc
push
mov
push
loop
and
aas
inc
or
loopne
(bad)
addr16
jo
les
nop
xchg
xchg
cmp
xor
inc
mov
adc
dec
cmp
mov
or
fiadd
xchg
xor
fdivr
push
push
mov
adc
xchg
inc
or
ret
inc
enter
aad
aam
cmp
test
jmp
imul
shl
and
cmp
xor
(bad)
push
leave
xor
lock
or
cld
add
and
dec
and
push
aad
or
push
mov
mov
nop
sub
inc
int3
pop
pop
lock
add
in
imul
lea
or
sub
test
xor
inc
jns
sub
sbb
loope
in
pop
call
mov
inc
mov
sub
pushf
inc
adc
dec
jmp
rcl
sub
xlat
cmp
xor
int
sbb
fimul
(bad)
int3
xchg
add
nop
xchg
in
xchg
xchg
sub
int3
add
mov
loopne
or
mov
into
and
add
ins
nop
ja
fs
cs
jb
dec
lock
mov
(bad)
dec
fwait
pop
ror
stc
jg
xlat
pop
mov
stos
and
jmp
ins
mov
imul
sbb
xchg
add
mov
add
inc
push
xchg
dec
mov
aaa
daa
imul
jge
adc
(bad)
enter
(bad)
pop
gs
push
in
mov
adc
pop
cmps
jp
popf
clc
jl
fst
mov
mov
adc
in
cmp
add
jns
out
add
push
push
inc
push
and
cmp
mov
retf
out
lahf
ins
jle
popf
mov
fdivr
add
pop
jb
js
cmps
push
daa
add
sbb
push
fsubr
ret
punpcklbw
mov
push
push
adc
adc
jae
adc
pop
push
jo
xor
repz
adc
or
pusha
and
xlat
pop
cmp
loopne
push
pop
sbb
jns
aas
nop
add
pop
cmp
cmp
add
pop
adc
out
push
(bad)
jns
out
lock
adc
adc
out
sub
or
fs
add
jg
ja
inc
call
cwde
add
out
loopne
sahf
push
jl
fcomp
iret
repz
mov
cmp
repz
add
mov
and
les
bound
repz
movs
add
repz
pop
sbb
jp
aam
jle
jns
out
sub
sahf
out
add
ins
and
xor
iret
repz
int3
pcmpgtd
lods
push
cmp
repz
inc
in
or
cmp
repz
pushf
arpl
mov
sbb
outs
cs
sahf
out
mov
call
jns
sub
xor
jns
out
popa
and
xchg
out
loop
sbb
jns
shr
jns
out
mov
mov
sub
in
cmp
push
mov
jmp
cmp
jne
retf
xchg
out
sahf
stos
add
cmp
pop
sbb
jns
xchg
fisubr
mov
sahf
lea
push
adc
jns
xchg
ret
jae
(bad)
arpl
jns
out
cmps
add
xchg
out
sbb
out
(bad)
imul
cmp
out
mov
push
xchg
out
in
ja
into
sahf
out
sahf
addr16
scas
pop
xchg
out
jns
pop
pop
sahf
iret
cmp
jg
fisubr
das
mov
push
lahf
(bad)
push
dec
(bad)
(bad)
mov
mov
or
nop
mov
leave
cs
cs
in
fnstcw
stc
lds
in
xchg
or
cs
cs
in
inc
cs
popf
fnstsw
std
ret
or
nop
or
cs
mov
cs
jmp
in
cs
mov
mov
cmps
nop
or
cs
or
cs
scas
out
in
cs
fistp
(bad)
jle
pop
push
fild
fs
push
sbb
adc
add
adc
add
add
sbb
mov
daa
xchg
(bad)
sbb
and
add
addr16
inc
push
jle
sbb
xchg
cmps
rcl
add
xor
xor
or
add
jo
jns
repnz
outs
mov
cdq
retf
fisubr
inc
dec
out
outs
and
cdq
push
mov
bound
(bad)
jg
call
popa
push
out
mov
ins
pop
(bad)
hlt
push
xor
xchg
fs
hlt
(bad)
call
movs
mov
aad
mov
rcl
jl
jle
sub
mov
nop
adc
push
jno
repz
test
ficomp
jmp
(bad)
mov
(bad)
(bad)
call
hlt
mov
imul
std
in
leave
mov
add
ins
push
arpl
(bad)
(bad)
fcomip
psubd
or
cmp
imul
addr16
add
(bad)
(bad)
(bad)
call
add
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
mov
inc
iret
or
shr
and
push
adc
push
popa
sar
mov
mov
and
mov
cdq
xchg
mov
mov
or
or
and
or
xchg
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
dec
cli
(bad)
dec
mov
push
movs
in
lahf
xor
mov
js
(bad)
(bad)
(bad)
mov
xchg
sbb
push
sub
ins
fs
add
hlt
push
imul
cmp
std
ins
sbb
xor
repnz
ins
jnp
add
shl
(bad)
call
push
les
cmc
(bad)
fnstenv
adc
mov
mov
bound
ficom
(bad)
jl
mov
aam
pop
popa
mov
into
pop
cmp
mov
inc
movs
fisttp
(bad)
(bad)
in
xlat
xchg
fadd
(bad)
shl
jmp
outs
xor
mov
sar
(bad)
(bad)
(bad)
inc
in
add
pop
dec
or
cmp
add
daa
adc
or
and
jmp
mov
outs
and
aam
mov
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
or
mov
(bad)
mov
call
mov
cmp
jmp
fild
push
fdiv
or
lock
jmp
test
fs
ds
or
or
push
in
jmp
daa
scas
jmp
sahf
pop
jge
xchg
(bad)
shl
push
inc
push
imul
push
(bad)
test
ss
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
(bad)
(bad)
jmp
mov
mov
mov
aad
mov
call
xchg
shl
push
repnz
(bad)
(bad)
push
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
inc
(bad)
(bad)
(bad)
inc
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
push
(bad)
(bad)
(bad)
call
inc
or
das
es
lds
or
sub
mov
(bad)
(bad)
(bad)
jmp
iret
shl
sbb
ret
es
pushf
mov
ins
add
out
cli
jmp
ss
jmp
addr16
jb
jl
or
adc
mov
(bad)
(bad)
(bad)
(bad)
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
cmp
(bad)
jmp
sbb
int
mov
mul
ja
outs
ja
mov
out
cli
jo
pop
std
(bad)
dec
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
(bad)
(bad)
jmp
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
(bad)
(bad)
(bad)
jmp
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
nop
push
(bad)
push
mov
retf
mov
cmps
mov
(bad)
mov
xlat
int
push
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
aaa
jmp
mov
mov
sbb
add
sub
sbb
lock
ret
push
sub
hlt
ja
xchg
inc
(bad)
(bad)
out
xchg
mov
ret
call
hlt
jecxz
dec
mov
dec
jle
(bad)
(bad)
jmp
sahf
iret
sbb
xchg
ret
and
push
shl
js
inc
out
popa
push
xlat
scas
cs
(bad)
(bad)
(bad)
push
sbb
test
sbb
add
call
out
ins
(bad)
(bad)
(bad)
jmp
aas
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
out
(bad)
push
push
call
gs
fisubr
inc
inc
sub
imul
jo
scas
imul
push
(bad)
(bad)
(bad)
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
add
push
pop
dec
or
mov
sar
sbb
xor
pop
nop
sti
mov
jns
test
(bad)
(bad)
out
mov
(bad)
jns
jae
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
xor
push
adc
cmps
(bad)
(bad)
(bad)
jg
and
or
hlt
mov
or
xchg
lea
or
int3
pop
dec
xor
inc
pop
hlt
push
cld
mov
outs
retf
push
pop
mov
mov
lea
(bad)
call
ficom
test
loope
xchg
retf
les
jb
out
(bad)
(bad)
(bad)
jns
fidiv
dec
pop
pop
adc
push
sbb
adc
and
inc
and
jmp
jl
or
push
fs
dec
mov
mov
and
cmps
xor
fcomip
jmp
mov
lods
out
sar
mov
adc
stos
and
leave
jmp
shr
inc
jle
push
jns
das
mov
and
je
or
repnz
dec
(bad)
(bad)
(bad)
call
fisub
xor
jle
(bad)
repz
mov
xchg
rcl
cmp
mov
(bad)
(bad)
call
cmp
test
cwde
cmp
test
mov
mov
scas
adc
out
pop
push
ins
hlt
(bad)
(bad)
(bad)
inc
aas
fldcw
push
ret
adc
add
inc
jmp
ja
inc
xlat
ss
push
out
(bad)
(bad)
(bad)
dec
test
jno
mov
ja
(bad)
ins
pop
push
dec
sub
fisub
(bad)
dec
sub
add
adc
cwde
mov
(bad)
mov
rcl
xchg
push
(bad)
push
hlt
out
les
fdecstp
jmp
lea
sbb
xchg
out
sub
dec
jo
outs
sbb
cs
jmp
(bad)
sub
loope
fisub
lds
push
call
dec
in
mov
movs
ret
(bad)
(bad)
(bad)
jmp
test
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
(bad)
(bad)
(bad)
(bad)
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
jo
cmc
shr
mov
push
add
mov
arpl
lods
(bad)
loope
int3
mov
stc
dec
(bad)
(bad)
(bad)
call
loopne
adc
mov
jo
popf
mov
test
and
pop
ins
cmp
les
adc
(bad)
(bad)
dec
sub
dec
add
sar
push
or
cmp
popf
cmps
push
mov
xchg
(bad)
(bad)
(bad)
call
in
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
(bad)
(bad)
(bad)
dec
bound
mov
xor
call
mov
pop
lods
ret
outs
xchg
dec
ins
das
mov
push
jne
adc
test
pusha
sub
adc
jns
(bad)
push
movs
dec
mov
movs
daa
sub
repnz
in
(bad)
(bad)
jg
and
out
mov
shl
es
xchg
aas
mov
adc
(bad)
(bad)
jg
out
sar
mov
gs
pop
jle
aaa
or
jbe
dec
div
(bad)
fucomip
call
aas
mov
and
push
push
add
test
pop
mov
(bad)
jmp
retf
push
mov
lea
push
adc
(bad)
(bad)
out
xor
(bad)
test
or
stc
sbb
sub
sahf
or
es
leave
in
push
ja
pop
sub
(bad)
(bad)
(bad)
jmp
sbb
fild
sbb
repnz
adc
dec
jae
adc
(bad)
(bad)
(bad)
(bad)
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
(bad)
(bad)
(bad)
inc
test
cmp
push
add
outs
jge
aaa
ss
fidiv
test
push
xor
imul
fld
adc
nop
in
and
(bad)
mov
(bad)
(bad)
call
daa
leave
pop
sub
and
mov
and
mov
sub
fidivr
inc
cld
sub
ds
sbb
sub
call
das
ror
jno
(bad)
jg
scas
pop
cmp
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
(bad)
(bad)
(bad)
jle
mov
jg
or
jl
je
jns
push
inc
js
mov
(bad)
jnp
cs
ins
xchg
outs
jmp
loop
sbb
pop
in
ja
xor
cmp
imul
(bad)
call
stos
sub
shr
aam
cmps
gs
fs
imul
addr16
xlat
dec
pop
mov
outs
jns
dec
cld
arpl
(bad)
(bad)
(bad)
fimul
or
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
shl
inc
xor
(bad)
(bad)
dec
inc
jae
cmovo
out
inc
sbb
push
xor
mov
mov
mov
cld
(bad)
(bad)
(bad)
clc
push
mov
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
movs
pop
(bad)
(bad)
push
jmp
add
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
fcos
(bad)
(bad)
jmp
cmp
imul
out
addr16
in
dec
es
mov
out
push
sahf
mov
(bad)
push
pusha
in
in
das
call
mov
stos
jmp
pop
imul
fdivr
(bad)
(bad)
jg
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
inc
les
clc
dec
jmp
(bad)
(bad)
inc
test
adc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
push
(bad)
(bad)
(bad)
push
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
xlat
out
(bad)
(bad)
(bad)
jmp
(bad)
mov
out
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
and
adc
pop
lds
(bad)
(bad)
(bad)
call
(bad)
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
dec
retf
lahf
aaa
mov
(bad)
push
leave
enter
pop
inc
int3
jmp
xchg
sbb
ror
mov
xchg
ja
ins
nop
cs
sub
(bad)
(bad)
call
stos
push
fs
repnz
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
(bad)
call
adc
xor
xor
dec
mov
or
ficomp
fcomi
inc
mov
jle
and
mov
push
pop
and
push
adc
fadd
(bad)
call
test
sbb
xchg
shl
test
into
add
stos
stc
outs
movs
stos
jl
(bad)
(bad)
(bad)
(bad)
jmp
dec
adc
scas
adc
lods
sbb
xor
inc
aas
mov
les
(bad)
(bad)
(bad)
(bad)
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
(bad)
(bad)
(bad)
dec
mov
mov
mov
cmovns
push
dec
adc
mov
mov
test
mov
ficomp
mov
jmp
mov
push
or
push
xchg
bound
pop
imul
xor
dec
or
loopne
outs
add
(bad)
(bad)
(bad)
call
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
(bad)
(bad)
jnp
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
mov
aas
sahf
rcr
xchg
call
iret
sbb
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
rol
xchg
adc
push
das
or
in
xchg
loop
xchg
(bad)
push
inc
fstp
(bad)
iret
aas
sub
xchg
in
jecxz
pop
push
or
mov
in
jmp
lahf
xchg
dec
sub
and
loop
outs
dec
jg
or
(bad)
jge
jmp
shl
mov
(bad)
lds
xchg
lahf
mov
inc
std
mov
jl
inc
add
call
fwait
pop
aas
test
mov
sbb
(bad)
(bad)
(bad)
dec
push
retf
pop
jg
test
push
shl
pop
mov
sbb
pop
mov
adc
dec
test
ret
cmp
das
retf
jnp
dec
ja
prefetchw
or
jae
(bad)
(bad)
(bad)
(bad)
inc
dec
mov
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
mov
out
fild
adc
mov
mov
mov
xlat
cmp
fcomip
call
sub
pop
outs
xchg
add
cmp
inc
mov
das
xchg
in
pop
xchg
sub
mov
std
(bad)
(bad)
inc
clc
or
test
push
mov
fist
inc
addr16
fwait
push
add
in
mov
push
inc
das
dec
leave
xor
inc
arpl
adc
push
mov
(bad)
(bad)
dec
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
dec
and
jmp
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
(bad)
call
pusha
inc
aad
in
jmp
bound
inc
xchg
out
xor
or
sub
call
pop
push
in
cmp
pop
cmp
outs
xor
or
xchg
movs
loope
mov
adc
add
dec
dec
cmc
scas
repz
xor
mov
xchg
and
(bad)
jmp
push
rol
shl
pop
xchg
idiv
sub
out
jp
dec
xchg
sbb
repnz
and
sbb
pusha
jle
cmc
mov
(bad)
out
(bad)
(bad)
(bad)
push
or
aaa
jmp
add
and
(bad)
push
arpl
popa
stc
(bad)
and
(bad)
(bad)
call
mov
mov
push
or
adc
jmp
into
movs
adc
(bad)
(bad)
jmp
(bad)
bswap
fst
xchg
test
lods
sub
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
(bad)
(bad)
(bad)
dec
jae
and
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
dec
fs
jns
stc
xor
xchg
inc
fidiv
jmp
(bad)
stc
mov
mov
(bad)
jmp
lock
imul
ss
test
(bad)
cs
mov
call
call
jno
mov
loope
into
cs
out
add
add
jecxz
call
pop
jmp
icebp
and
sub
aam
(bad)
(bad)
(bad)
mov
jle
inc
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
(bad)
(bad)
jmp
repz
adc
mov
jle
cmp
pushf
in
(bad)
jmp
adc
add
sbb
cmps
push
data16
jno
ds
outs
sub
mov
(bad)
(bad)
inc
mov
mov
dec
rol
pop
outs
sti
ret
neg
jmp
pop
jmp
int3
jp
or
xchg
popa
mov
fdivrp
ja
xor
cdq
(bad)
(bad)
(bad)
dec
push
mov
jo
hlt
(bad)
xor
push
fisttp
movs
loopne
jmp
(bad)
call
(bad)
jle
jl
out
sub
xchg
sbb
mov
repnz
mov
(bad)
mov
aam
ins
fucom
jmp
aam
push
sub
push
imul
std
(bad)
stc
jp
gs
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
call
pusha
inc
in
addr16
cmp
in
dec
add
inc
ror
mov
xor
mov
ins
clc
(bad)
(bad)
(bad)
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
or
pop
fnstenv
lods
push
add
jmp
mov
enter
mov
mov
mov
mov
ins
loopne
pop
cwde
xchg
cdq
mov
add
(bad)
jmp
loopne
fnstenv
das
outs
jl
pop
push
sbb
cmp
(bad)
(bad)
call
cwde
shl
mov
jno
test
lahf
mov
mov
js
leave
les
and
or
sbb
(bad)
(bad)
jmp
mov
xchg
fs
xchg
out
pop
add
push
hlt
sbb
popa
bound
bound
dec
ins
(bad)
(bad)
(bad)
inc
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
mov
jl
cwde
(bad)
jg
fstp
mov
jl
sti
aam
gs
mov
test
fwait
or
aam
xor
dec
fbld
(bad)
(bad)
fcom
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
(bad)
(bad)
(bad)
inc
sbb
pop
fisttp
jno
daa
add
mov
or
xchg
mov
and
(bad)
mov
mov
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
jecxz
(bad)
call
cmp
xor
mov
mov
add
mov
jmp
scas
add
es
jecxz
or
xchg
cmp
push
jp
pop
test
push
iret
or
add
mov
setae
(bad)
(bad)
(bad)
jmp
push
mul
pop
and
sbb
outs
imul
(bad)
aam
jbe
sar
(bad)
(bad)
jmp
loopne
fidivr
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
sar
xchg
push
fadd
les
repnz
sar
addr16
fld
(bad)
push
ss
fmul
sbb
dec
loopne
scas
jb
mov
pusha
out
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
(bad)
inc
and
push
mov
lds
or
sub
add
xlat
jmp
(bad)
(bad)
push
sub
sahf
mov
scas
sbb
in
arpl
es
mov
or
ss
(bad)
(bad)
(bad)
aas
jb
test
add
xchg
mov
jp
jnp
sub
xchg
ror
(bad)
(bad)
dec
or
fbld
xchg
rcl
icebp
aam
inc
push
fiadd
ja
call
int
mov
ja
sbb
out
punpckhdq
push
cmp
(bad)
mov
(bad)
gs
(bad)
clc
bound
rcl
(bad)
(bad)
(bad)
jmp
mov
or
adc
ret
es
shl
test
(bad)
(bad)
jmp
fld
(bad)
pop
fadd
or
fdivr
lock
mov
iret
jg
(bad)
(bad)
(bad)
push
repnz
mov
xchg
xor
mov
add
push
ficom
and
(bad)
jg
fldenv
data16
les
mov
sub
xchg
mov
mov
mov
pop
add
out
(bad)
call
sbb
inc
xor
bound
(bad)
(bad)
call
lds
pop
cmps
xchg
xchg
(bad)
enter
rol
mov
mov
hlt
fcos
(bad)
(bad)
dec
lods
mov
or
scas
jle
sahf
sub
dec
ret
push
fldenv
adc
jo
popa
out
inc
(bad)
(bad)
(bad)
call
aaa
mov
adc
cwde
mov
add
sbb
sbb
ss
(bad)
(bad)
(bad)
call
jmp
aam
aas
(bad)
pop
push
sahf
xchg
test
mov
inc
and
(bad)
jmp
call
shl
ret
fiadd
gs
scas
stos
inc
inc
lahf
jmp
imul
jbe
(bad)
(bad)
push
imul
sub
or
or
sbb
ins
fild
repz
pop
pop
mov
jo
jno
(bad)
(bad)
jmp
repz
sbb
jne
pop
mov
sti
push
test
jmp
mov
cmp
jns
push
dec
push
lds
jge
fisubr
cmp
(bad)
(bad)
push
jns
add
ret
xchg
push
sbb
xchg
adc
mov
cmp
(bad)
(bad)
cmp
hlt
dec
or
xchg
into
pop
int3
add
inc
xlat
xor
cli
bound
ret
mov
ins
adc
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
(bad)
(bad)
(bad)
jmp
shl
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
(bad)
jmp
sbb
jo
cmp
std
imul
and
(bad)
(bad)
jmp
scas
mov
xor
std
pusha
lods
and
scas
mov
shr
lahf
adc
(bad)
(bad)
mov
ins
leave
dec
and
rcl
jmp
ja
das
aas
jns
ss
mov
or
jmp
adc
xor
dec
lea
pusha
jle
xor
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
ret
rcl
cmp
call
js
cmps
cmp
sbb
call
cli
leave
adc
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
(bad)
(bad)
(bad)
inc
add
ins
jo
fdiv
adc
out
movs
add
test
mov
push
pop
mov
cwde
pop
ins
(bad)
adc
ss
daa
mov
frstor
cwde
add
mov
scas
bound
(bad)
lds
(bad)
out
hlt
push
out
shr
sar
call
pop
mov
test
xor
imul
outs
pop
in
shl
lods
clc
pop
sbb
inc
sub
data16
loope
lds
cld
arpl
lods
mov
in
test
xchg
sub
(bad)
jmp
mov
(bad)
repz
cmp
call
imul
or
stos
test
(bad)
(bad)
(bad)
cmp
sbb
mov
pop
adc
xor
xor
dec
jo
mov
imul
jp
xor
pop
cmp
push
dec
shl
out
stc
add
xlat
push
scas
xchg
out
es
call
dec
mov
and
popf
mov
movs
and
sbb
(bad)
(bad)
fstp
ins
je
aas
les
push
push
test
cwde
inc
jle
test
ror
cmp
call
cwde
and
pop
mov
cmps
popf
stos
adc
add
cld
dec
xor
bound
into
jns
fmul
dec
(bad)
mov
cli
jle
jnp
sub
sub
xchg
mov
xchg
push
mov
fnop
pop
jle
in
inc
gs
dec
xchg
outs
jne
mov
call
or
cmp
or
sub
jns
(bad)
mov
sbb
das
clc
(bad)
mov
retf
mov
mov
out
and
loope
or
(bad)
(bad)
cld
mov
jle
shl
imul
inc
cmp
ja
fsub
cld
(bad)
call
jle
hlt
out
push
or
test
mov
adc
xor
(bad)
outs
sub
test
outs
add
pop
lods
test
(bad)
(bad)
(bad)
inc
retf
ret
lea
dec
push
test
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
mov
xchg
push
or
cmp
sbb
mov
(bad)
call
pusha
sbb
lods
sbb
popa
fwait
sbb
mov
adc
cwde
call
mov
cmps
(bad)
(bad)
(bad)
call
jae
xchg
adc
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
(bad)
(bad)
(bad)
cmp
clc
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
test
rol
imul
das
and
xor
and
in
mov
(bad)
(bad)
jg
cmps
daa
aam
es
dec
dec
and
cdq
and
and
adc
(bad)
push
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
(bad)
(bad)
dec
div
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
(bad)
(bad)
(bad)
(bad)
fdivr
dec
mov
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
cs
jl
outs
cmp
fisub
nop
jmp
(bad)
jmp
in
pop
push
repz
arpl
popa
sub
(bad)
(bad)
inc
push
cmps
xlat
aam
fs
mov
dec
xlat
retf
and
mov
or
dec
dec
fs
arpl
dec
sbb
retf
dec
(bad)
(bad)
(bad)
call
xchg
dec
cwde
frstor
inc
push
lock
inc
inc
dec
test
inc
int
inc
inc
addps
(bad)
(bad)
(bad)
dec
sub
mov
push
xor
addr16
jne
ds
mov
or
ror
(bad)
(bad)
(bad)
jl
loop
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
cld
(bad)
jmp
pop
pop
lods
das
ins
loope
sbb
loop
iret
out
jecxz
movs
movs
cmp
pop
(bad)
(bad)
mov
stos
mov
or
cmp
in
paddsb
hlt
(bad)
(bad)
(bad)
jmp
das
loop
jmp
stos
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
(bad)
(bad)
(bad)
jmp
sti
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
(bad)
(bad)
(bad)
call
hlt
or
cmc
retf
sub
test
fnstcw
pusha
fdivr
mov
fstp
jecxz
(bad)
(bad)
(bad)
cmp
jno
mov
(bad)
and
fdiv
dec
in
imul
test
fdiv
(bad)
(bad)
inc
shl
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
(bad)
(bad)
dec
push
push
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
(bad)
mov
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
nop
(bad)
(bad)
jmp
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
jo
(bad)
dec
jle
iret
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
add
dec
call
jge
mov
pop
mov
mov
sbb
mov
or
and
sbb
sbb
out
(bad)
rol
cmps
arpl
aad
(bad)
(bad)
push
test
and
into
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
(bad)
and
cmps
xor
das
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
xchg
popf
mov
jae
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
jmp
mov
adc
test
xchg
pushf
xor
loopne
mov
cwde
(bad)
(bad)
mov
mov
or
mov
mov
out
(bad)
bound
xor
(bad)
pop
fcomp
jl
jge
dec
mov
loopne
xlat
or
mov
mov
loopne
ja
pop
arpl
(bad)
(bad)
call
push
lahf
call
adc
jno
jnp
enter
lods
jne
or
into
outs
es
(bad)
push
std
lods
jg
sub
mov
xchg
rcr
mov
(bad)
and
jp
leave
mov
mov
pop
or
addr16
xchg
shr
push
cmp
in
pop
or
pop
lock
outs
(bad)
(bad)
cmp
xchg
mov
(bad)
dec
pop
loop
aas
jmp
jecxz
in
jg
inc
cld
fmul
sbb
pop
and
sbb
push
sub
sahf
push
dec
jg
outs
test
or
rcr
(bad)
(bad)
push
and
lds
sub
mov
inc
and
(bad)
xchg
test
call
call
test
pop
xor
not
adc
iret
push
retf
mov
ret
pusha
test
std
(bad)
call
jo
out
pop
mov
test
fistp
ret
imul
inc
dec
imul
setl
(bad)
sub
mov
cwde
cmc
cld
sar
(bad)
(bad)
(bad)
call
push
fidiv
sbb
mov
inc
sub
mov
cmp
ja
call
jg
sar
xchg
outs
pop
hlt
cmp
test
das
aas
mov
xchg
pop
in
mov
(bad)
(bad)
inc
or
pop
xor
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
(bad)
(bad)
push
dec
mov
(bad)
xor
inc
out
imul
pushf
rol
push
jb
jmp
(bad)
call
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
inc
clc
(bad)
dec
and
pop
jle
js
mov
xlat
scas
xor
in
pop
mov
push
in
out
clc
jg
pop
inc
pop
mov
in
sbb
bound
and
inc
sbb
jmp
(bad)
dec
sahf
aam
push
stc
mov
in
pop
cmp
cmps
(bad)
xor
add
ror
cmp
movs
add
sub
scas
cmc
clc
(bad)
(bad)
mov
repz
mov
sbb
ror
sar
add
jmp
outs
movs
not
cmp
(bad)
(bad)
(bad)
mov
icebp
repnz
imul
cmc
xlat
jle
out
ror
ret
push
jp
jmp
mov
rol
mov
xor
xor
(bad)
and
stc
popa
call
cld
outs
mov
mov
ss
dec
call
(bad)
push
(bad)
loope
xchg
adc
int
lods
mov
inc
and
jne
jp
adc
(bad)
(bad)
push
scas
dec
jae
fwait
push
movs
icebp
and
sbb
test
jbe
out
push
into
icebp
mov
inc
jmp
stc
das
jns
inc
xchg
push
xor
es
jmp
(bad)
(bad)
inc
mov
(bad)
jmp
sbb
push
bound
fwait
push
mov
xchg
(bad)
(bad)
(bad)
call
(bad)
push
es
mov
cld
mov
adc
push
ja
ss
adc
(bad)
(bad)
(bad)
aas
out
mov
loopne
jbe
pop
not
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
(bad)
(bad)
(bad)
dec
test
cmp
es
jl
mov
pop
sbb
mov
repz
(bad)
(bad)
call
in
test
adc
ja
mov
ret
add
cmp
cdq
in
(bad)
jg
cld
or
pushw
cmps
fidiv
sub
fisubr
sar
(bad)
(bad)
inc
xchg
mov
mov
push
inc
sar
dec
sti
outs
pop
sub
add
mov
pop
je
into
jp
mov
push
fist
mov
push
mov
push
hlt
cmc
jns
repz
xor
ss
inc
and
imul
loope
jns
jae
jb
popa
ins
and
test
ins
gs
ins
jae
jb
outs
call
je
sti
ins
sti
inc
imul
imul
outs
mov
pop
call
arpl
jo
imul
jbe
jae
das
and
data16
sub
enter
xor
xor
cmp
jo
jb
addr16
mov
cmp
xor
xor
dec
imul
fs
pushf
adc
xchg
adc
push
mov
or
or
jmp
adc
pop
add
pop
lock
and
sub
xor
cmp
inc
add
arpl
add
inc
push
into
ret
add
add
add
adc
adc
push
fs
cmps
xchg
pop
or
sbb
(bad)
mov
add
add
(bad)
add
add
push
add
add
add
add
add
add
pusha
jmp
out
fbstp
xlat
(bad)
push
add
sbb
sbb
sbb
inc
mov
popf
jge
adc
add
add
pop
cs
jl
add
add
add
pop
enter
adc
nop
or
mov
adc
fistp
or
scas
int
mov
and
leave
loop
mov
adc
push
xchg
dec
xor
(bad)
lods
idiv
push
mov
adc
ds
shl
mov
mov
stos
ins
jg
inc
mov
rol
pop
and
es
mov
dec
idiv
fld
sbb
not
mov
ds
xchg
mov
mov
out
adc
call
and
aam
loopne
lock
fucomi
in
in
add
push
pop
repz
sbb
pcmpgtd
xchg
cmc
adc
aaa
(bad)
or
sbb
aas
push
cmp
push
push
fcmovne
jbe
out
sub
fs
or
xchg
mov
xchg
(bad)
das
add
cmp
(bad)
leave
xchg
and
add
xchg
mov
or
lods
adc
outs
cmp
mov
jecxz
xchg
hlt
push
add
fwait
cmp
add
sbb
and
add
or
and
pop
sbb
wrmsr
inc
inc
aas
pop
jb
enter
sbb
mov
rol
call
in
xchg
and
sub
mov
jb
dec
pusha
sub
dec
enter
cwde
inc
lods
inc
mov
in
inc
loopne
lock
xchg
add
xchg
and
adc
and
cmp
xchg
enter
xor
add
inc
into
jle
mov
gs
retf
xchg
pop
call
sbb
inc
mov
and
cmp
inc
push
addr16
xchg
and
ins
cwde
adc
cmp
adc
das
sub
rcr
sbb
sbb
in
iret
stc
cmp
sub
outs
hlt
outs
setns
sub
mov
sbb
ficom
and
ja
sbb
sbb
push
jae
js
mov
jbe
sbb
mov
loopne
and
mov
call
cmps
sbb
jl
and
sysenter
adc
into
push
cdq
(bad)
loopne
das
push
adc
pusha
adc
and
jge
jle
or
sbb
pop
mov
add
mov
clc
test
in
in
in
adc
cvttps2pi
into
outs
cmp
and
or
and
jl
xchg
and
seto
cmp
aam
mov
pshufw
mov
or
imul
mov
dec
std
std
adc
jae
arpl
jbe
arpl
outs
popa
ins
push
test
pop
ins
push
sub
addr16
and
and
jae
jne
push
bound
inc
adc
jmp
arpl
xor
pop
and
je
in
fiadd
jne
outs
cmc
fbstp
out
inc
xor
fwait
outs
out
test
les
arpl
lods
sbb
fisttp
jo
je
outs
cmp
neg
mov
push
mov
outs
or
push
adc
jo
add
jle
adc
and
outs
popa
jmp
xor
fistp
ins
sbb
pusha
inc
outs
mov
int
in
popa
fs
pop
imul
push
loopne
ret
mov
data16
es
mov
cs
or
xchg
jns
jo
ins
add
bound
pop
adc
mov
pusha
xchg
bound
inc
imul
or
and
fidiv
jne
(bad)
fild
add
pusha
adc
fs
sahf
sub
movs
popa
sub
mov
inc
outs
je
sbb
or
sbb
cmp
add
pop
adc
out
jb
ins
pushf
fcom
jp
dec
pop
pop
dec
fld
ja
imul
pusha
adc
jne
hlt
sbb
outs
jp
pop
sub
add
push
ins
lock
scas
aas
xchg
pop
adc
js
cld
lods
test
(bad)
call
add
test
sub
je
ja
ins
sub
inc
cmps
ret
shl
and
mul
enter
push
mul
and
dec
mov
push
mov
stc
das
xor
data16
jl
ins
push
outs
ins
outs
push
and
or
daa
addr16
pusha
adc
push
rcl
jo
sub
mov
xor
mov
aas
xchg
add
sub
adc
push
rcr
add
ins
push
jge
or
push
ja
fiadd
fiadd
mov
pop
bound
mov
inc
out
mov
jns
jae
inc
arpl
push
add
jo
add
nop
sub
cmp
sbb
je
push
mov
test
in
inc
and
and
and
nop
xchg
or
sbb
push
arpl
push
in
jp
adc
aaa
add
xchg
and
adc
pusha
cmps
mov
push
xlat
add
aaa
icebp
pop
mov
popa
outs
dec
pop
lds
pop
arpl
pop
or
jo
mov
rcl
mov
das
pusha
xchg
scas
pop
and
xor
arpl
mov
fcomp
lea
or
pusha
sub
fisub
jns
test
out
add
popf
mov
(bad)
adc
aas
sbb
je
mov
sbb
or
mov
lds
arpl
or
mov
je
push
sub
xor
mov
add
das
aas
xor
push
ins
in
jae
inc
ins
data16
jmp
gs
ins
mov
jne
add
sub
add
loopne
aam
int
mov
or
or
cmp
daa
test
aaa
nop
cld
mov
xchg
rol
div
and
dec
xchg
clc
fiadd
adc
(bad)
js
cmps
and
imul
cs
xor
enter
sub
ins
adc
mov
popf
in
cmps
push
pusha
mov
push
xchg
jns
push
iret
pop
add
jns
ins
push
shl
popf
js
fnstcw
in
test
mov
jmp
xchg
(bad)
mov
popa
punpckldq
ja
bound
neg
xor
popa
push
push
aam
mov
cmp
iret
jae
fcomp
in
hlt
jnp
addr16
sahf
add
adc
mov
add
cmp
imul
sahf
ja
dec
punpcklwd
push
add
jns
out
or
and
sub
jns
out
adc
and
and
jle
mov
add
mov
es
adc
lods
js
push
cmp
inc
pop
out
in
cmp
pop
pop
sbb
test
pop
mov
sahf
int
dec
push
mov
or
sahf
out
aaa
mov
cmc
daa
fisttp
jp
lea
fldcw
adc
push
into
push
mov
shr
ficom
jl
push
pop
mov
jns
mov
sti
push
adc
xor
xor
mov
stos
stos
(bad)
addr16
ins
mov
jno
or
jbe
js
mul
xchg
(bad)
aas
add
adc
or
or
or
pop
inc
and
sbb
push
inc
sahf
cmps
std
adc
adc
adc
push
or
lahf
inc
inc
inc
inc
inc
inc
fld
add
sti
sbb
or
or
push
ud2
cmp
std
int3
cmp
push
xor
and
nop
(bad)
adc
mov
movs
xor
mov
sbb
xchg
pcmpgtd
hlt
jmp
stos
xor
test
ud0
push
and
sub
dec
pop
add
btc
mov
aas
push
popa
adc
arpl
or
sbb
int
inc
and
push
lock
ss
out
lahf
mov
and
xor
test
xchg
mov
push
in
mov
test
add
and
repnz
jb
sub
dec
add
sbb
jb
add
pop
add
push
sbb
ins
sub
push
mov
sub
add
fcom
and
add
ja
push
mov
mov
imul
mov
mov
pop
rcl
inc
pop
inc
out
and
add
(bad)
(bad)
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
(bad)
call
movs
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
(bad)
mov
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
fdivrp
(bad)
(bad)
(bad)
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
inc
add
inc
jmp
adc
adc
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
inc
test
(bad)
cmp
cmp
ds
inc
lods
jne
shl
pop
mul
or
aas
jnp
jge
jg
and
inc
inc
cmp
loope
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
data16
pop
pop
pop
(bad)
aas
sbb
or
jmp
hlt
(bad)
out
(bad)
and
ins
jae
mov
jp
inc
jb
cmova
push
adc
outs
xchg
in
pop
dec
outs
imul
arpl
xchg
push
fld
add
gs
in
fwait
or
ins
popa
jo
outs
push
and
jo
xor
push
push
(bad)
sbb
js
jne
pop
inc
gs
xor
jo
outs
ins
push
push
(bad)
pop
sub
popa
rol
das
inc
mov
jnp
and
cmps
jae
jbe
xchg
or
add
sub
pop
ins
xchg
out
jne
push
pop
and
gs
imul
dec
imul
js
push
mov
jb
inc
or
js
adc
cmp
jne
bound
ss
outs
addr16
xchg
mov
inc
and
or
imul
push
addr16
mov
inc
rcr
pop
daa
push
inc
sub
outs
mov
pop
fcomp
sub
mov
ins
and
dec
jmp
fidivr
inc
test
retf
pop
pop
repz
outs
aas
push
and
add
scas
fisttp
psadbw
jae
inc
sub
jmp
sub
xchg
push
add
mov
add
add
adc
and
sub
xor
cmp
xchg
and
inc
or
push
or
jb
enter
push
push
inc
mov
adc
jb
enter
adc
inc
mov
mov
mov
sbb
enter
sbb
inc
pop
cmp
and
and
cwde
and
and
mov
pop
adc
cmp
enter
sub
sub
sub
inc
mov
sub
sub
in
xchg
ss
aaa
pusha
cmp
inc
mov
jo
js
add
in
xchg
and
inc
mov
jb
inc
mov
mov
xchg
and
dec
ror
push
sbb
jb
loopne
call
gs
pop
mov
test
add
add
adc
in
xchg
add
add
add
sbb
inc
pop
push
or
or
enter
or
or
cmp
shld
adc
enter
loopne
sbb
jb
in
push
clc
sbb
xchg
and
sbb
sub
sbb
inc
push
dec
pop
pop
and
inc
mov
and
and
jb
enter
lods
daa
mov
cmp
sub
sub
sub
sub
mov
sbb
sbb
jb
xor
dec
cmp
xchg
and
cmp
ins
cmp
jb
js
test
nop
inc
pushf
inc
xchg
and
test
mov
int3
inc
cmp
enter
inc
lock
cld
dec
and
jl
or
dec
and
jb
enter
push
inc
push
push
push
inc
mov
pop
push
push
imul
xchg
and
add
mov
repnz
fmul
in
enter
lock
adc
or
sbb
jb
adc
and
sub
cmp
push
sub
cmp
jns
enter
imul
mov
pop
int3
or
or
repnz
xchg
or
sbb
cmp
adc
inc
mov
add
pop
dec
or
enter
or
ins
sbb
cmp
pop
enter
lods
or
cmp
in
sbb
cmp
add
ret
enter
adc
sbb
sub
sbb
jns
xor
dec
add
or
retf
and
je
cmp
add
cmp
in
test
mov
sar
add
inc
mov
cmp
add
enter
adc
sbb
sub
sub
(bad)
sbb
xor
inc
or
pop
or
in
and
add
or
or
add
retf
and
mov
ror
scas
jl
repnz
inc
call
dec
les
or
xchg
xchg
das
or
jl
sbb
test
das
lock
inc
(bad)
pop
les
jno
pushf
popf
int
add
cmp
cmovs
push
mov
xchg
and
mov
sbb
jb
test
nop
rcr
inc
mov
dec
jo
enter
mov
sub
fwait
xchg
lds
and
ins
sub
pop
cmp
test
push
mov
add
push
inc
and
inc
jo
jae
add
push
jb
enter
shld
fstp
enter
pop
aam
and
out
pop
pop
in
inc
or
in
xchg
mov
paddb
(bad)
or
jb
xchg
sub
cmp
inc
mov
xchg
and
(bad)
pop
shr
mov
jno
je
adc
or
mov
enter
sets
movs
xlat
mov
mov
jb
mov
rcl
loopne
enter
in
lods
clc
ffreep
add
sbb
jb
adc
sbb
sub
xor
xchg
and
inc
fisttp
fld
les
and
jo
dec
sub
enter
ins
sub
mov
and
test
cs
in
mov
xchg
(bad)
movs
into
mov
les
(bad)
test
inc
call
mov
popf
push
bound
or
and
pushf
aas
jo
sbb
and
enter
outs
xor
or
cmp
sub
inc
pop
pop
inc
into
out
push
popa
ja
pop
pusha
push
js
enter
ins
xchg
das
js
adc
addr16
test
sub
jno
enter
js
cmp
mov
adc
lock
mov
cmova
cmps
(bad)
les
xor
sar
and
fsub
and
data16
jae
hlt
mov
sub
leave
add
mov
pop
sbb
and
test
xor
enter
jne
push
ja
xchg
mov
adc
pusha
xchg
(bad)
push
js
and
cmps
adc
nop
mov
pop
pushf
push
test
xchg
and
test
lfs
jecxz
rcr
pop
lock
es
xchg
and
cmp
and
bswap
or
into
into
cmps
(bad)
sub
xchg
sbb
cmp
or
xchg
and
inc
fs
mov
in
jo
cmp
retf
(bad)
daa
sbb
mov
les
jecxz
cmp
mov
in
cmps
xchg
in
ins
in
add
sbb
sbb
movaps
and
aaa
xor
xor
clc
inc
test
mov
in
xchg
mov
scas
pop
and
mov
je
outs
inc
sbb
adc
enter
jl
and
(bad)
in
xchg
and
push
movs
pusha
cwde
xor
cmp
mov
das
enter
loopne
and
pushf
paddsb
add
or
sbb
enter
mov
xchg
jmp
es
cs
sar
jp
shl
movs
dec
mov
aas
fs
gs
jb
repnz
data16
mov
pcmpeqw
pop
ds
fimul
je
push
add
jbe
mov
jo
jb
jb
fucomi
jb
push
jno
(bad)
jb
push
(bad)
jne
dec
sahf
or
iret
gs
pop
jo
ins
jg
dec
data16
(bad)
xchg
pop
imul
jne
(bad)
push
scas
popa
jg
mov
imul
daa
mov
out
sub
jne
push
mov
lods
ins
iret
sub
gs
scas
xchg
ins
sbb
popa
pop
outs
outs
ins
iret
mov
jns
fs
jbe
jecxz
jecxz
sub
inc
add
loope
mov
push
inc
xor
in
call
das
dec
pop
aaa
mov
inc
add
inc
inc
sub
(bad)
push
dec
mov
push
idiv
dec
jb
push
jnp
dec
pop
jne
bound
push
rcl
out
push
add
retf
jnp
ins
mov
mov
xchg
ja
push
bound
jo
shl
js
(bad)
push
cmps
inc
push
xchg
pop
xchg
out
jb
push
push
ds
aas
dec
(bad)
mov
push
cs
cs
ds
mov
jb
out
dec
shl
inc
pop
out
inc
xchg
out
jb
pop
cmps
ins
dec
pop
stc
fidivr
xlat
jmp
je
aaa
cmps
push
aas
sub
ror
dec
dec
dec
pop
mov
sbb
mov
ja
dec
ds
out
jb
pop
js
pop
mov
pop
sbb
inc
(bad)
pop
iret
xlat
inc
push
mov
das
cmps
outs
dec
fbstp
sub
pop
mov
(bad)
gs
mov
jae
(bad)
imul
outs
shl
jns
das
push
mov
cmp
push
push
ja
cmp
out
ja
movs
sub
je
gs
pop
rcl
ins
pop
jb
fbld
pop
dec
arpl
sahf
push
packuswb
out
shl
jmp
mov
jno
xor
pop
jae
fisubr
dec
sbb
push
add
dec
jg
mul
xlat
pop
fidiv
jne
test
in
ins
jg
jle
push
dec
xor
push
jnp
pop
mov
imul
fild
test
dec
scas
pop
pop
jo
ins
pop
pop
mov
sbb
neg
push
push
sub
push
out
push
out
add
inc
xor
pop
xchg
inc
inc
imul
pop
aaa
stc
dec
add
inc
test
(bad)
test
add
or
xchg
vmwrite
mov
ins
(bad)
in
pop
(bad)
scas
push
sub
pop
jae
inc
add
dec
pop
in
cmp
shl
inc
scas
push
das
inc
add
outs
scas
popa
(bad)
xchg
or
sbb
inc
mov
xchg
pop
xchg
ins
(bad)
fisubr
inc
bound
dec
pop
imul
dec
addr16
addr16
ss
inc
pop
dec
sbb
outs
sub
mov
or
jg
pop
out
cwde
inc
push
out
push
dec
fcom
push
pop
inc
inc
jbe
fucomip
dec
das
outs
mov
mov
stos
cmp
push
aaa
das
inc
pop
ret
mov
pop
push
das
push
iret
add
add
xlat
fidivr
mov
push
aaa
pop
sbb
btr
popw
jnp
cmp
gs
bound
push
fs
pop
inc
addr16
pop
sub
repnz
imul
xchg
ins
add
ins
xchg
sbb
imul
ins
das
jno
rcl
pop
ja
addr16
jp
arpl
test
mov
inc
or
or
imul
xlat
imul
jno
les
sbb
mov
fcmovnu
test
or
jg
push
fcmovu
(bad)
push
imul
jne
ins
or
ja
ffree
jb
popa
dec
pop
in
pusha
in
bnd
dec
pop
bound
cmp
test
jo
push
adc
jae
jp
bound
pop
pop
imul
ins
pop
das
xor
nop
ud1
push
pop
jae
add
fsubr
push
pop
sub
pop
jp
gs
nop
dec
cs
mov
das
jne
ja
sub
mov
xchg
cmps
aas
or
or
or
mov
pop
push
mov
daa
pop
ins
dec
das
mov
adc
pop
ja
sub
jmp
outs
das
pop
lea
mov
inc
or
jecxz
(bad)
xlat
popa
ret
lock
jecxz
ja
(bad)
lods
(bad)
ins
pop
dec
pop
or
or
sub
adc
outs
push
jp
(bad)
in
pop
mov
sbb
dec
jb
jns
jecxz
(bad)
addr16
or
inc
sbb
or
mov
or
stos
outs
and
jb
jecxz
(bad)
mov
inc
jns
or
xchg
jbe
adc
pop
or
jae
mov
cwde
pop
fcmovbe
pop
arpl
outs
or
mov
fisub
push
pop
rcl
fcmovbe
sti
pop
jae
push
call
or
jae
jno
and
ja
ror
pop
imul
xchg
imul
test
(bad)
pop
imul
cdq
lea
push
sti
pop
jae
fimul
pop
das
sub
pop
jnp
mov
pop
das
pop
scas
loopne
inc
jbe
pop
div
cmp
push
imul
into
and
gs
or
dec
mov
loopne
repnz
aaa
jne
jne
and
rcr
data16
xchg
jbe
(bad)
aad
adc
xor
jb
pop
je
pop
imul
ins
add
fbstp
or
sub
out
jnp
out
ins
ins
sub
xchg
sub
mov
aaa
mov
push
adc
add
add
add
add
mov
cmp
mov
cs
push
push
shl
and
add
pusha
push
loopne
jo
add
inc
loopne
fstp
add
sbb
jl
jb
cs
out
popf
ret
outs
jb
js
xchg
jbe
int
es
jne
push
push
jne
pop
mov
push
push
popa
jnp
push
mov
movs
cmovbe
(bad)
int
dec
outs
adc
pop
jb
outs
shl
not
jbe
daa
dec
popa
mov
gs
out
mov
and
push
dec
sub
out
(bad)
ins
push
jne
push
cmps
dec
arpl
jne
ins
(bad)
dec
outs
ds
arpl
jns
jnp
es
add
addr16
sahf
into
loopne
imul
mov
test
test
scas
and
dec
jnp
dec
push
push
dec
dec
das
fs
jns
fs
lahf
mov
and
sub
dec
cmp
cmp
cmp
out
mov
sysret
fidivr
push
push
gs
or
ins
inc
out
loope
jmp
cmp
pop
(bad)
fcmovnu
ins
(bad)
lahf
inc
daa
mov
(bad)
mov
jb
iret
pop
fisttp
jp
mov
dec
outs
push
push
loope
sahf
inc
div
jne
outs
push
dec
mov
ins
aas
push
or
gs
sahf
call
dec
jbe
mov
mov
jb
out
sahf
mov
scas
out
mov
mov
dec
fsubr
xchg
ins
mov
ins
xchg
jb
pop
das
mov
add
inc
daa
out
sar
adc
push
dec
add
add
jbe
or
add
aas
jnp
sbb
add
and
dec
add
mov
ins
or
(bad)
adc
ret
(bad)
adc
not
daa
shr
jae
jbe
dec
mov
int
out
in
loope
cld
in
shl
call
dec
push
pop
out
sub
pop
xchg
push
push
pop
out
das
push
pop
addr16
call
dec
and
fidivr
push
ss
es
push
pop
or
das
add
sbb
xor
sahf
stos
or
scas
fdivp
lea
shr
arpl
push
push
inc
sub
outs
rdtsc
ss
ins
push
dec
dec
inc
inc
mov
adc
add
ficom
xchg
add
icebp
test
icebp
adc
push
mov
jmp
push
add
fidivr
ins
push
data16
add
and
jb
ins
fstp
xor
loopne
add
mov
and
and
imul
ret
imul
mov
xchg
push
ret
aad
mov
popa
aas
aaa
lahf
aad
push
aaa
js
bound
ins
js
mov
mov
imul
(bad)
add
stos
mov
cmp
jo
(bad)
in
xchg
ins
xlat
je
mov
cmp
pop
jae
lds
or
scas
inc
xor
jl
scas
xor
xor
pop
jnp
xor
xchg
sub
scas
sbb
in
loopne
and
fbstp
jo
scas
xchg
out
bound
arpl
xor
sbb
xor
das
ss
pop
xchg
imul
imul
sub
fist
fbstp
out
fwait
call
xor
(bad)
push
xchg
push
stos
pop
xchg
adc
scas
mov
and
out
enter
ins
xor
or
(bad)
lds
pop
inc
mov
out
fs
loope
jl
daa
popa
imul
js
mov
out
jo
or
cs
xor
adc
xchg
int3
xor
pop
xor
mov
dec
imul
fs
je
xchg
pop
ins
push
pop
addr16
xchg
stos
das
das
ret
pop
push
push
push
sbb
pop
sahf
or
mov
sbb
mov
fild
pop
mov
bnd
add
cmp
jb
shl
jl
pop
jb
data16
or
xchg
imul
das
retf
xchg
xlat
sub
cmp
outs
inc
inc
mov
loop
out
jae
daa
cmp
clc
les
imul
mov
ret
aas
and
addr16
sar
sub
cmps
add
inc
cmp
je
inc
packuswb
pop
in
mov
push
outs
dec
prefetchwt1
inc
push
cmp
outs
pop
enter
ins
aas
inc
stc
sub
mov
shr
or
inc
mov
or
cmp
in
xchg
adc
cmp
inc
mov
clc
sbb
push
retf
xchg
das
(bad)
and
push
mov
and
mov
jns
adc
xchg
ja
sub
pop
add
pushf
dec
mov
data16
div
pop
icebp
out
mov
push
imul
xor
xchg
aaa
addr16
add
inc
and
push
sbb
sahf
mov
scas
cmp
fistp
movq
icebp
mov
add
lahf
out
lock
popf
rol
out
add
mov
and
sbb
mov
mov
add
(bad)
outs
pop
in
or
iret
pop
or
iret
and
xchg
lea
jb
and
leave
and
xchg
mov
es
add
je
aas
or
xor
call
xor
push
es
loope
mov
mov
ins
outs
addr16
xor
imul
aaa
sti
in
pop
cld
cmps
outs
jae
je
pop
popa
xor
mov
xor
xor
out
ret
jno
lods
jg
outs
push
gs
retf
mov
cmps
lock
popa
bound
outs
fs
ins
fs
lock
pop
arpl
jns
mov
(bad)
ja
outs
jb
jns
push
xor
data16
ss
data16
push
test
mov
xor
xchg
pop
dec
sub
sub
test
sbb
outs
add
or
xchg
bnd
xchg
dec
fcmovbe
(bad)
ss
dec
cs
pop
add
or
xor
fimul
addr16
leave
(bad)
aas
and
pop
cmp
add
pop
lock
jg
ds
mov
pop
jbe
stc
push
cwde
rol
loope
or
add
push
xchg
inc
add
add
adc
sbb
daa
cmp
int3
fistp
push
push
mov
sub
jmp
cmp
push
ja
jg
out
daa
xchg
loop
inc
aaa
pop
cmp
test
inc
cwde
xchg
retf
loop
das
test
dec
in
sar
xchg
mov
inc
fsub
push
mov
jecxz
pop
das
dec
push
mov
xlat
jecxz
pop
pop
mov
test
dec
in
sub
(bad)
pop
in
pop
inc
sub
mov
dec
pusha
pop
movs
xor
js
movs
push
dec
ror
inc
lock
in
cdq
pop
or
pop
and
movs
xor
pusha
dec
test
lods
ror
mov
sub
xchg
xchg
inc
call
outs
loope
inc
jg
inc
sub
cmp
outs
das
pusha
push
push
pop
je
cmp
mov
fisubr
mov
inc
sub
movs
xor
dec
dec
ins
xchg
xchg
retf
xchg
inc
int3
inc
push
pop
sub
in
inc
call
test
dec
dec
movs
xor
dec
das
xchg
xchg
retf
loopne
jmp
sub
push
dec
aaa
push
sbb
adc
pop
inc
pop
lods
xchg
xchg
out
jmp
fidiv
arpl
mov
ss
enter
push
loop
xlat
jb
mov
repz
ins
and
cmp
imul
gs
or
imul
inc
mov
mov
(bad)
ins
and
or
mov
or
lods
xchg
xlat
fild
dec
xchg
jne
sbb
inc
ret
push
popa
sub
push
xchg
fisubr
mov
outs
mov
das
jecxz
mov
or
add
das
test
arpl
aas
mov
das
jae
das
inc
jmp
sete
push
scas
pop
add
and
popa
push
outs
fbld
dec
ins
das
jae
push
fadd
mov
pop
aas
and
mov
aas
inc
sbb
js
adc
jae
mov
lds
jg
(bad)
not
pop
mov
sti
(bad)
push
xor
push
cmp
mov
retf
jnp
outs
test
push
imul
hlt
push
or
test
push
jns
out
rcl
mov
retf
arpl
pop
xlat
mov
xor
push
pop
outs
addr16
xchg
mov
popa
es
aad
jp
mov
push
ins
aaa
ja
ret
inc
mov
fisub
mov
fs
jecxz
cmp
mov
jecxz
bound
outs
dec
xlat
sbb
aas
fidiv
pop
mov
out
dec
mov
fwait
aas
pop
mov
xchg
mov
adc
out
push
(bad)
jbe
push
sub
ret
daa
inc
pusha
pop
loopne
sbb
add
add
pop
push
icebp
cs
jne
jne
push
mov
stos
sbb
retf
aas
out
add
lods
push
jp
loop
mov
inc
data16
out
mov
scas
pop
pop
add
xchg
cmp
fcom
in
ficom
ret
(bad)
cld
outs
dec
jmp
xchg
je
in
bound
adc
pop
and
pop
in
adc
pop
push
mov
cs
cmp
dec
pop
jl
mov
mov
dec
adc
test
sbb
inc
pop
lock
aaa
in
or
and
cmp
dec
mov
nop
adc
in
pusha
pop
loope
(bad)
xor
pop
stos
jnp
je
cmps
pop
je
fwait
sub
pop
popa
pop
xlat
mov
ja
and
out
addr16
xor
outs
je
mov
ins
push
(bad)
sub
retf
into
(bad)
aam
pop
sti
ret
popa
push
pop
jo
outs
sub
sbb
sub
imul
sub
pop
or
inc
mov
sbb
push
test
es
xchg
outs
scas
daa
imul
add
sbb
pop
cld
(bad)
outs
add
xchg
xlat
stos
push
push
dec
or
sbb
adc
mov
sub
adc
sbb
pop
rol
mov
dec
dec
mov
lods
outs
xchg
push
xchg
inc
(bad)
jbe
push
imul
ja
jae
push
outs
jo
movs
scas
xchg
or
pop
dec
bound
shr
cmp
fwait
jp
call
adc
jae
out
rol
fsub
lock
sahf
out
ss
or
sub
jge
loopne
cmp
dec
repz
mov
add
sbb
hlt
push
push
push
pop
out
sahf
out
fs
out
sahf
js
or
jnp
xchg
outs
lahf
cwde
push
pushf
mov
ror
movs
push
test
repz
mov
mov
sub
rcr
mov
jns
out
rcl
fcomp
loopne
jns
out
call
repz
lock
and
inc
cmp
repz
js
mov
repz
icebp
sbb
pop
jl
jns
out
rcl
fmul
repz
in
repnz
and
push
ss
repz
cwde
shr
adc
sahf
out
xor
ror
adc
bound
push
rcl
arpl
xchg
push
adc
fs
ins
je
idiv
push
data16
push
jb
gs
bound
jo
jb
xor
test
mov
cmp
daa
dec
popa
mov
jne
and
cmp
and
mov
mov
cmp
mov
cmp
add
push
pop
pop
add
in
into
sti
mov
sub
push
es
jae
lods
cmc
sub
and
xchg
push
sahf
sti
or
(bad)
jl
push
jl
repz
sub
sub
cld
mov
inc
cmp
dec
mov
add
(bad)
neg
push
jmp
data16
hlt
mov
es
ins
and
arpl
add
sub
sub
das
jae
jp
xchg
es
push
out
sbb
push
cmp
fs
or
mov
xor
js
jb
jae
fist
popa
jg
jge
int
ss
ins
mov
aas
jne
cmp
ficom
inc
imul
jo
add
sbb
push
adc
inc
inc
sub
mov
or
adc
jns
test
sub
jne
push
mov
pusha
inc
dec
push
push
push
push
dec
ja
les
fistp
mov
ja
pop
adc
loopne
cmp
and
jae
out
dec
retf
rcr
dec
jge
sbb
outs
int
cmp
shl
jns
xchg
and
sbb
push
mov
mul
fsubr
ja
xchg
dec
cmp
inc
nop
aaa
add
pop
inc
mov
aad
and
pop
jmp
pop
sbb
and
inc
jbe
aad
mov
ins
pop
jnp
(bad)
or
mov
inc
(bad)
mov
ret
sbb
aam
push
xor
ds
inc
jmp
cmp
cmp
inc
imul
push
das
push
arpl
pop
mov
sbb
je
imul
fwait
dec
pop
jbe
push
and
and
inc
dec
shrd
jns
dec
inc
add
das
mov
cmp
push
adc
ror
jmp
pushf
shr
or
ins
shr
ins
xor
or
inc
xchg
loopne
test
fstp
cmp
bound
add
jbe
push
das
jmp
das
mov
lock
test
jae
sbb
idiv
es
dec
xor
push
push
and
js
and
rcl
pop
ins
xor
inc
pop
lods
add
iret
popa
outs
in
mov
fldenv
ins
sbb
cwde
lods
mov
jns
imul
or
ins
imul
ror
mov
xor
enter
test
sbb
das
ins
xor
dec
popa
push
or
out
sbb
jp
jb
push
mov
xlat
jae
and
pop
popf
pop
stos
sbb
ins
and
xor
popa
popa
gs
push
and
cmps
rol
pop
lods
add
pop
jbe
scas
sbb
arpl
jp
fbld
addr16
cmp
mov
dec
mov
imul
mov
aam
les
cmp
and
dec
inc
gs
pop
ins
test
retf
pusha
xor
popa
xchg
fs
movs
je
mov
popa
aaa
push
das
addr16
das
imul
or
jl
out
ja
adc
push
jl
add
outs
jne
mov
or
dec
stos
xor
clc
and
outs
popa
outs
fs
sbb
jne
aaa
push
test
dec
cld
jb
ret
jge
jp
jns
ret
dec
or
mov
mov
jns
aaa
js
cmp
lea
dec
jo
outs
shl
not
xor
cs
jmp
ja
sbb
bound
js
jbe
int
outs
mov
jb
cmps
push
sbb
mov
jne
popa
pop
div
daa
iret
sbb
outs
jb
mov
sbb
adc
outs
ins
clc
jmp
mov
add
add
ja
data16
pop
cmp
pop
pop
sub
add
add
das
add
inc
rol
xchg
jnp
and
inc
loope
and
pop
call
out
dec
mov
jo
add
adc
sub
sbb
pop
mov
mov
pminub
mov
je
xchg
or
out
dec
mov
jg
cli
test
add
jae
push
inc
(bad)
mov
(bad)
and
push
ss
ss
jp
xor
cmp
dec
aaa
inc
in
cmp
push
xor
cmp
shr
ins
adc
imul
cmp
sbb
mul
sub
out
loope
dec
das
mov
sub
cmp
cwde
inc
mov
jae
inc
jne
mov
ja
jb
dec
inc
sub
cdq
ins
push
aas
push
pop
in
pop
inc
dec
pop
test
and
inc
mov
sub
into
push
mov
or
loop
push
mov
sub
mov
std
xchg
and
les
jno
pop
or
sub
xchg
pop
daa
dec
mov
mov
push
xor
inc
push
sub
xor
sbb
mov
mov
inc
aaa
(bad)
xor
add
(bad)
daa
pop
push
and
loope
mov
(bad)
das
(bad)
pop
pop
xor
pop
mov
push
das
inc
sub
push
jne
xchg
mov
mov
push
pop
scas
pusha
pop
dec
adc
jg
cmp
inc
rcl
or
imul
sub
pop
and
test
adc
mov
data16
pop
xor
dec
dec
add
int3
(bad)
test
jae
daa
es
jb
call
cmp
imul
xchg
test
jbe
add
dec
and
inc
sbb
and
jae
gs
imul
fnstcw
jo
cmp
and
sub
sbb
popa
loope
and
push
arpl
xor
add
mov
(bad)
adc
push
aas
pop
jns
xchg
fild
pop
popf
mov
int
shl
call
inc
cmp
repz
dec
sahf
fmul
inc
sahf
addr16
cld
xor
adc
nop
and
and
outs
ror
pushf
sub
sub
ins
mov
(bad)
xchg
ins
jns
retf
push
outs
mov
and
ja
jp
mov
iret
and
loopne
mov
fmul
inc
pop
xchg
xchg
scas
push
sub
fst
push
dec
jb
leave
mov
xchg
test
hlt
(bad)
movs
out
or
xor
inc
scas
aaa
scas
ss
in
cmp
cmp
ror
inc
push
push
xchg
sbb
sub
jle
pop
das
(bad)
les
mov
jno
sub
sub
aas
pop
pop
jl
sub
cmp
in
or
or
mov
fwait
test
or
mov
mov
add
std
xchg
enter
das
sahf
dec
repz
add
push
and
pop
mov
icebp
push
icebp
fbstp
test
inc
sahf
mov
es
sub
loop
mov
jg
outs
jmp
pop
or
imul
mov
cmp
push
jo
adc
iret
pop
sub
sub
outs
jae
push
jp
jns
dec
jl
and
ds
ins
ret
and
xchg
add
pop
arpl
inc
jns
push
mov
jnp
out
push
pop
mov
push
dec
sbb
cwde
lahf
or
adc
push
not
jne
scas
xchg
outs
jp
push
jmp
mov
pop
retf
jo
inc
sbb
xchg
mov
pop
jae
sub
inc
ret
ret
dec
je
dec
mov
xlat
popa
pop
push
rol
mov
mov
stos
mov
pop
pop
and
push
out
mov
push
jp
ins
cmp
adc
fistp
shl
movs
xlat
(bad)
mov
pop
dec
sbb
scas
fs
xchg
jbe
nop
fild
inc
inc
cmp
addr16
mov
push
xor
inc
js
arpl
pop
xor
bound
xor
dec
jns
push
pop
jbe
inc
or
inc
in
scas
xchg
hlt
pop
pop
inc
dec
dec
inc
push
pop
push
dec
dec
push
daa
in
in
and
pop
push
push
out
push
pop
push
xor
xchg
stos
or
pop
dec
dec
inc
inc
dec
pop
dec
inc
mov
dec
dec
dec
inc
pop
addr16
mov
fcom
pop
cmps
inc
dec
dec
inc
dec
inc
imul
imul
dec
push
xor
pop
repnz
data16
movs
loopne
dec
frstor
lods
call
and
test
push
jbe
mov
cdq
pop
je
mov
dec
repz
aaa
sbb
add
fimul
adc
pop
sub
arpl
xor
(bad)
ss
inc
push
fsubp
enter
ja
daa
rcl
outs
jnp
adc
or
push
jnp
xor
mov
les
(bad)
cmp
sbb
mov
ins
mov
sub
mov
mov
in
fstp
ja
(bad)
shl
jae
bound
fadd
xor
push
mov
int3
jg
scas
arpl
mov
pusha
loopne
xchg
add
jbe
aaa
je
push
xor
mov
mov
mov
xor
or
jne
mov
jg
jmp
push
pop
inc
fiadd
scas
test
mov
pop
test
sub
mov
xor
dec
mov
lock
in
mov
retf
cwde
lock
sbb
scas
or
or
add
ret
sub
dec
add
and
dec
arpl
ins
jmp
inc
add
xchg
das
sub
imul
mov
pop
add
ret
mov
mov
or
mov
sahf
out
sub
push
jns
out
(bad)
or
push
cld
shl
add
jge
cmp
dec
jae
dec
cwde
mov
scas
push
sub
inc
outs
call
ret
mov
pop
jae
jb
push
retf
aas
data16
push
xor
push
jbe
push
ins
dec
push
push
addr16
pop
push
xor
xor
mov
fst
push
push
jp
inc
inc
jae
inc
aaa
arpl
ins
pop
sar
bound
xor
js
push
xor
ds
fs
mov
ins
xchg
inc
cmp
cmps
mov
daa
rcr
clc
push
inc
ins
imul
push
push
popa
xor
jbe
ja
ins
scas
clc
or
js
daa
fisttp
jp
sti
in
xor
arpl
push
in
add
mov
dec
ins
pop
into
jp
jge
ins
push
dec
xor
bound
mov
sub
xchg
inc
dec
jns
fs
push
push
ins
pop
xor
xor
dec
add
outs
push
cmp
fild
je
rol
pop
ins
das
sahf
push
push
dec
outs
cmp
call
aas
pop
ins
jae
xor
push
ja
pop
push
pop
push
ss
mov
arpl
xchg
fdiv
scas
pop
jo
pop
ja
sub
imul
push
xor
ins
cmp
(bad)
scas
aas
lods
or
bound
daa
int3
mov
jae
mov
push
daa
pop
adc
(bad)
das
gs
ficomp
xlat
mov
mov
je
and
int
shl
popa
pop
or
jno
inc
push
stc
pop
in
dec
mov
popa
je
mov
pop
xor
push
mov
and
arpl
pop
and
dec
das
mov
sub
jbe
fbld
fdiv
mov
push
jp
xlat
into
icebp
popf
dec
pop
pop
outs
pop
neg
push
sub
xor
xor
pop
stos
clc
sbb
(bad)
jo
mov
fs
and
jbe
xchg
cmp
aaa
mov
xor
add
xor
pop
(bad)
cmps
popa
inc
and
pop
cmc
aaa
mov
shl
push
or
stc
lock
jns
iret
lock
(bad)
push
add
movs
adc
popa
jb
jle
or
arpl
push
jo
xchg
jp
sub
dec
inc
adc
push
dec
mov
add
sar
int
mov
imul
jae
dec
xlat
movs
movs
js
mov
daa
inc
and
(bad)
call
xchg
jbe
cmp
add
and
jbe
pusha
add
inc
pop
mov
inc
add
xchg
push
pusha
xchg
inc
enter
imul
add
(bad)
xor
inc
aas
shl
inc
aad
ror
ret
xor
cmps
fnstcw
xor
jmp
mov
inc
jne
lods
cmp
pop
push
imul
add
ja
out
sbb
xsha1
cmps
dec
test
stc
out
stc
fmul
fadd
add
popf
xchg
cmp
sahf
dec
out
fimul
(bad)
mov
sahf
out
sahf
mov
pop
dec
popf
nop
in
jns
cmp
push
(bad)
jne
jns
out
push
mov
sahf
daa
sbb
add
shr
cmps
push
pusha
dec
setns
mov
(bad)
sahf
bound
xchg
push
std
neg
repz
in
jecxz
iret
lds
cld
(bad)
mov
loop
cmp
mov
out
cmps
and
rcl
xchg
aaa
add
mov
nop
fld
mov
call
(bad)
push
xchg
ret
mov
xchg
mov
cdq
lock
ror
push
aaa
sub
iret
sbb
push
jmp
jbe
out
rol
push
or
sahf
neg
repz
cdq
arpl
mov
lock
push
sahf
and
hlt
movs
sahf
out
imul
push
cmps
(bad)
clc
push
jmp
xlat
jns
lds
push
ins
test
xchg
lahf
mov
inc
xchg
jmp
aaa
outs
call
loopne
xor
push
scas
sahf
rcpps
call
cmp
add
rcl
mov
mov
jo
or
cld
shl
mov
push
push
dec
push
sbb
pushf
int3
mov
jp
repz
fcmovnu
pusha
aaa
pop
inc
push
push
sub
xor
add
mov
sbb
pop
dec
xor
xor
bound
sldt
mov
ss
stos
adc
push
sub
xchg
cmovnp
loop
out
ror
pop
or
dec
je
mov
daa
mov
das
outs
mov
fwait
jmp
je
shr
push
daa
sbb
popa
call
arpl
push
inc
dec
pop
push
dec
pop
pop
dec
push
fild
ret
adc
iret
sub
bound
call
mov
mov
mov
xchg
stos
cmp
test
es
loopne
and
je
jg
inc
(bad)
and
add
dec
(bad)
jb
inc
xor
jo
es
add
shr
inc
into
inc
or
inc
rol
int3
out
and
jle
inc
xchg
push
add
shl
outs
scas
xadd
pop
or
fcmovne
and
in
movs
(bad)
pop
xor
enter
push
inc
fucomp
lods
(bad)
jb
jb
jge
pop
inc
and
jmp
add
fs
in
push
dec
in
jmp
dec
outs
aaa
push
adc
dec
pop
and
call
shr
lods
xchg
sub
mov
popa
cmp
sbb
hlt
out
rcl
mov
addr16
addr16
das
and
add
loop
scas
shl
outs
cmovo
add
xchg
daa
mov
inc
and
add
mov
leave
verw
xchg
fcmovne
inc
push
cmp
sbb
mov
xchg
in
imul
aas
xchg
in
and
inc
sub
psubq
das
loop
pop
fcmovne
leave
in
mov
aas
cdq
sub
push
(bad)
and
dec
mul
fisttp
outs
loopne
add
mov
sahf
cmp
mov
pop
dec
dec
div
jb
pop
or
in
fs
pop
inc
mov
in
jbe
aas
sbb
leave
dec
xor
pushf
loope
loopne
in
loopne
loopne
in
jbe
das
mov
je
jae
bound
jbe
mov
xor
das
adc
add
daa
icebp
jmp
shl
std
xchg
div
fld
sahf
ret
std
(bad)
jp
and
adc
fs
aas
inc
push
xchg
xchg
bound
mov
xlat
pop
xchg
dec
call
add
cmp
cmp
pop
arpl
(bad)
retf
push
mov
or
das
xchg
xchg
pop
dec
pop
test
aas
push
(bad)
(bad)
inc
cs
adc
push
clc
dec
push
aas
test
xor
mov
pusha
and
inc
rcl
(bad)
iret
call
es
call
jb
mov
and
sti
dec
adc
sar
add
xor
(bad)
fadd
aas
dec
je
stos
mov
iret
(bad)
aas
pop
inc
scas
daa
jp
ret
aas
mov
gs
mov
push
jbe
lahf
(bad)
fistp
fwait
and
ret
dec
push
pusha
nop
fs
rol
push
lds
js
repz
out
jmp
sbb
faddp
cli
pop
dec
enter
mov
rcr
mov
push
mov
aas
adc
push
ror
sub
xor
retf
xchg
mov
(bad)
(bad)
aas
scas
adc
or
mov
(bad)
(bad)
stc
dec
int
sub
mov
sub
aas
repnz
jle
jecxz
mov
(bad)
aas
aaa
push
data16
mov
push
ss
js
aas
add
or
icebp
cmp
mov
cld
nop
mov
into
adc
mov
cmp
lock
or
jle
or
xchg
aas
ds
nop
movs
inc
sar
pop
aam
call
lods
push
jg
icebp
mov
push
ds
cmc
xor
dec
xchg
mov
(bad)
(bad)
(bad)
std
hlt
jecxz
rcl
dec
pop
pop
inc
test
aam
ins
cld
sti
dec
mov
sbb
loope
movs
int3
add
int
adc
pop
sub
mov
cmp
stc
fwait
outs
push
add
jmp
jle
(bad)
aas
clc
fwait
outs
inc
cmp
sub
daa
loop
nop
jle
and
xor
neg
fdiv
outs
shl
scas
mov
mov
fdivr
jbe
ss
fxch
mov
pop
cmp
mov
loop
and
sbb
aas
addr16
mul
ds
(bad)
mov
(bad)
mov
or
xor
fcmovnu
(bad)
jle
sub
jne
dec
jle
mov
mov
nop
xor
pop
sar
jg
repz
gs
fstp
pusha
pop
sahf
or
dec
js
jle
push
and
or
repz
aas
outs
mov
inc
inc
xor
(bad)
jg
loop
pop
add
and
cdq
fnstsw
add
call
push
sar
(bad)
(bad)
int
in
stos
mov
sub
loop
lock
aas
loope
mov
or
(bad)
out
add
shl
sub
jo
sahf
xor
(bad)
call
xor
std
push
popf
imul
cmp
jns
test
mov
adc
sub
cmp
fwait
mov
js
mov
add
push
push
shl
inc
mov
repz
xor
pop
dec
mov
mov
int3
inc
rcl
sbb
retf
je
arpl
inc
jp
pop
pop
push
and
push
pop
add
cld
(bad)
outs
mov
std
jno
add
and
push
add
je
inc
push
cmps
adc
xor
dec
stos
sub
sahf
xor
mov
cmc
add
mov
ds
push
adc
fist
mov
call
mov
outs
push
and
push
cmp
jg
idiv
outs
xchg
hlt
sbb
ds
and
(bad)
iret
and
stc
rcl
xor
enter
add
inc
aaa
inc
int
jl
lahf
div
xor
inc
or
and
stc
jmp
mov
pop
sub
push
call
dec
mov
jg
push
out
rcl
xchg
mov
push
mov
aas
sahf
ja
cdq
imul
out
xor
sbb
pop
lahf
not
mov
cld
scas
dec
shr
cmp
pusha
sbb
jns
call
(bad)
(bad)
jle
mov
sub
adc
popf
sar
push
jg
out
(bad)
mov
sub
xor
or
mov
aaa
(bad)
cmps
cmp
xor
xchg
mov
or
jle
fistp
nop
ins
inc
(bad)
shl
mov
shl
adc
and
push
and
aas
cmp
sti
sar
or
lods
lods
sub
push
mov
mov
hlt
mov
sbb
enter
sahf
mov
iret
mov
jbe
stc
dec
adc
jle
into
mov
cmps
outs
ss
ins
(bad)
push
lods
int
(bad)
jg
mov
test
call
cmp
xchg
in
cmc
add
stc
repz
cmp
daa
cmp
es
pop
jmp
(bad)
mov
in
dec
retf
(bad)
bound
inc
loop
jge
mov
push
(bad)
out
arpl
ds
or
pop
repnz
and
in
outs
(bad)
cld
movs
or
inc
push
jg
mov
out
(bad)
push
ins
cmp
ds
(bad)
(bad)
stc
push
mov
and
lods
arpl
mov
aaa
or
lahf
(bad)
fistp
xchg
les
xchg
mov
mov
pop
jmp
call
push
loopne
push
stc
ret
ss
ret
jg
int
cmp
add
sub
jecxz
xor
cmp
mov
popa
sar
inc
mov
sar
pop
mov
ds
pop
or
xor
call
xchg
cld
mov
pop
in
js
mov
sbb
cld
(bad)
ds
mov
mov
stos
retf
adc
mov
mov
pop
lock
cli
daa
aaa
sahf
mov
(bad)
stos
idiv
fcomip
out
(bad)
cmp
mov
retf
add
stos
xor
jmp
pop
adc
inc
std
sti
dec
sub
mov
dec
sbb
pop
iret
jne
mov
aad
mov
mov
dec
pop
fdivr
test
mov
int3
scas
jmp
jg
(bad)
mov
lods
mov
cmp
cmp
mov
xlat
jl
data16
out
clc
push
lahf
add
js
sahf
push
scas
repnz
xor
push
and
jmp
jmp
jg
mov
inc
inc
sub
movs
dec
and
or
(bad)
jmp
out
xor
repnz
mov
inc
push
jp
jge
xchg
mov
icebp
add
iret
(bad)
aas
adc
aas
jecxz
mov
lock
pop
sub
mov
test
js
les
ja
fstp
lock
mov
in
test
paddd
cld
in
in
sti
cli
stc
clc
in
in
div
cmc
hlt
in
in
repz
lock
in
out
out
in
in
in
in
jmp
jmp
in
out
in
in
in
loop
loopne
in
in
(bad)
fsub
in
in
fcmovu
fsub
in
in
(bad)
aad
jb
jb
rol
jb
jb
into
int
jb
jb
retf
retf
jb
jb
mov
jb
ret
ret
adc
mov
mov
xchg
xchg
xchg
xchg
femms
push
push
xchg
xchg
xchg
xchg
push
or
xchg
xchg
or
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
or
pop
pop
xchg
xchg
xchg
xchg
pop
push
push
push
xchg
xchg
xchg
xchg
push
add
xchg
xchg
add
xchg
xchg
xchg
add
add
xchg
xchg
xchg
xchg
add
add
xchg
xchg
xchg
xchg
add
add
pop
outs
xchg
xchg
add
cmovo
dec
and
lock
aas
push
popa
xor
or
jg
int3
or
add
xor
sbb
push
or
sub
cmp
mov
mov
xchg
jecxz
retf
retf
dec
imul
sub
xor
leave
idiv
int
cwde
push
aas
sub
lods
sub
jp
adc
push
aas
mov
fisttp
cld
(bad)
sti
jg
push
pop
push
aas
in
adc
xchg
mov
inc
sahf
jo
mov
aam
(bad)
hlt
inc
push
scas
or
jg
fild
loopne
or
fild
dec
(bad)
mov
mov
adc
loopne
lahf
push
nop
(bad)
cld
push
pop
dec
pusha
xor
aas
xor
lock
dec
gs
(bad)
aas
(bad)
aas
xor
dec
cwde
mov
inc
div
sbb
push
inc
xor
pop
mov
dec
mov
mov
imul
mov
jmp
aas
test
sub
xchg
in
int3
mov
out
lahf
cmp
jns
stc
ins
aas
ds
jl
cmp
aad
imul
ds
cld
(bad)
stc
adc
mov
aam
clc
outs
jo
jp
add
or
sti
fwait
mov
ins
sub
push
inc
inc
pusha
loope
xchg
jge
pop
add
pop
cld
(bad)
std
mov
aas
mov
fld
push
fstp
push
jae
mov
mov
fbld
or
lock
(bad)
push
in
sar
fidivr
mov
mov
push
enter
pop
in
xor
xor
or
and
jbe
fwait
aas
(bad)
aas
out
adc
test
xor
inc
pop
dec
jle
pop
stc
dec
out
ja
jno
inc
or
js
xor
or
fist
jg
pop
mov
push
jns
lds
mov
cmp
adc
and
(bad)
std
pop
sub
int
mov
jp
mov
rol
ss
out
jmp
(bad)
jnp
rcr
xchg
ret
jl
ja
xor
mov
(bad)
(bad)
out
dec
mov
pop
sub
loopne
jge
nop
sahf
stc
repz
out
and
jns
jle
jl
les
pop
sbb
stc
dec
mov
inc
fiadd
pushf
pop
mov
int
outs
(bad)
nop
xchg
xor
or
push
cmp
(bad)
je
out
(bad)
cld
push
int3
lea
dec
push
xor
push
and
stc
(bad)
cld
mov
cmp
aaa
ret
and
shl
popf
scas
cld
out
data16
call
mov
inc
(bad)
jbe
mov
fidivr
sub
and
or
aaa
jg
adc
jmp
inc
push
fadd
sbb
pop
cmp
aaa
loope
aam
adc
cmp
cmp
out
mov
hlt
div
idiv
or
adc
pop
clc
aad
dec
push
clc
rcr
cli
fwait
aas
jg
jno
out
daa
cmp
jle
iret
mov
push
aaa
repz
aam
test
and
xor
aam
stc
fwait
aas
jg
retf
in
ret
inc
fsub
(bad)
repnz
inc
sbb
(bad)
inc
fiadd
aas
daa
stos
xor
imul
mov
jecxz
fwait
sbb
int3
xchg
retf
mov
dec
mov
pop
mov
inc
iret
push
gs
ins
cli
sbb
cld
stc
jmp
mov
cmc
jne
sar
aam
cld
dec
mov
cdq
jl
mov
out
and
cmp
push
inc
dec
pop
lock
shl
je
mov
(bad)
mov
or
and
test
adc
mov
mov
sub
pop
dec
ins
es
add
repz
add
jno
jle
(bad)
aaa
test
fdiv
mov
adc
mov
scas
mov
cs
loope
sub
repz
jg
lea
jbe
dec
mov
sbb
or
call
inc
add
push
aaa
jg
hlt
int3
jp
outs
out
fucom
or
add
jo
add
jg
stc
test
sti
test
jl
push
xchg
or
dec
loopne
scas
cld
out
inc
xor
das
xor
sbb
outs
mov
mov
mov
xor
outs
adc
inc
mov
inc
push
or
add
jmp
mov
pop
and
push
into
mov
(bad)
mov
repz
clc
fistp
mov
repnz
push
push
es
sbb
inc
jg
test
imul
mov
ja
sar
js
test
mov
cld
pop
push
movs
lock
int
jmp
jns
scas
jle
push
and
dec
popa
cmp
fldcw
(bad)
(bad)
sbb
imul
inc
cmp
dec
mov
jge
sbb
in
and
or
or
mov
es
xor
jnp
stc
out
xor
mov
mov
adc
cmp
pop
loop
gs
inc
fwait
mov
mov
fs
mov
xor
push
ret
sub
(bad)
clc
mov
sbb
inc
push
inc
stos
fnstenv
mov
xor
clc
(bad)
aaa
jg
std
jnp
bound
mov
sbb
stc
push
jb
jge
jle
pop
mov
popa
mov
sahf
jb
rcl
push
xchg
pusha
mov
icebp
int
(bad)
movs
push
jo
into
mov
(bad)
jbe
jmp
fistp
push
test
aad
mov
mov
push
mov
jg
sbb
mov
pop
mov
imul
and
dec
fwait
aas
clc
int
pop
or
push
mov
pop
(bad)
fcomp
push
xor
dec
inc
sahf
inc
aaa
adc
sbb
dec
std
mov
mov
scas
cld
fwait
mov
cdq
ins
std
nop
inc
imul
or
or
dec
jp
cmp
jl
call
fistp
push
mov
xor
lahf
(bad)
jg
pusha
aaa
mov
into
xor
repz
mov
adc
in
aaa
inc
push
sbb
xor
and
or
(bad)
adc
sar
cmc
or
push
mov
inc
mov
repz
out
adc
and
mov
(bad)
aas
call
ret
js
cmp
jne
jmp
adc
mov
in
ja
jecxz
lahf
scas
lea
ds
dec
sub
cmp
pop
adc
adc
pop
mov
dec
fstp
xchg
dec
mov
sub
pop
(bad)
mov
pop
rcl
aas
inc
inc
adc
jnp
lea
push
inc
add
jbe
jb
inc
inc
ds
cmp
fstp
pop
cmp
outs
aaa
fmul
outs
pop
xor
xor
jb
mov
sub
leave
in
in
sub
daa
outs
and
xchg
xchg
(bad)
pop
and
push
outs
sbb
sbb
sbb
outs
pop
cmp
mov
adc
outs
in
in
jb
nop
fcmovne
or
pop
pop
push
outs
add
add
add
call
outs
and
std
adc
pop
cli
stc
xchg
xchg
and
clc
xor
dec
outs
daa
mov
outs
repnz
out
in
mov
outs
jmp
pop
call
out
in
pop
loop
fcmovne
in
loopne
(bad)
pop
fsubr
mov
fcmovnu
outs
fcom
pop
aad
popf
fmul
outs
rcl
pop
iret
in
jb
into
outs
int3
retf
pop
leave
fcmovne
in
in
(bad)
outs
(bad)
outs
daa
mov
ret
mov
popf
fmul
outs
mov
jb
cmp
pop
fcmovne
in
in
scas
outs
lods
stos
pop
outs
daa
mov
stos
test
cmps
movs
pop
movs
popf
fmul
mov
jbe
cmp
call
xchg
xchg
outs
xchg
xchg
pop
data16
adc
fxch
pop
mov
leave
leave
leave
leave
lahf
sahf
popf
popf
xchg
xchg
xchg
fistp
daa
daa
mov
aas
cwde
cwde
xchg
xchg
dec
dec
dec
outs
outs
xchg
xchg
xchg
xchg
pushf
pushf
pushf
fdivr
xchg
xchg
xchg
nop
cmp
mov
mov
lea
mov
jb
mov
mov
leave
in
in
xchg
xchg
test
mov
xchg
add
jle
outs
jl
pushf
fmul
jnp
aas
jns
mov
ja
outs
jbe
cmp
cmp
je
jae
jb
jb
jno
jo
in
in
in
outs
outs
ins
aas
fcmovne
leave
leave
ins
ins
imul
xchg
xchg
xchg
push
push
daa
daa
daa
gs
dec
dec
outs
outs
arpl
popa
pushf
pushf
pushf
fdivr
pusha
pop
pop
pop
cmp
mov
pop
pop
jb
jb
pop
aas
pop
pop
pop
in
jbe
push
push
outs
push
push
leave
leave
in
in
push
aas
push
push
xchg
xchg
fcmovne
push
push
outs
push
push
daa
daa
mov
dec
dec
aas
dec
dec
dec
dec
outs
daa
daa
dec
dec
outs
dec
dec
scas
mov
dec
dec
ud0
push
lds
rcr
ds
jmp
inc
cmp
inc
add
ds
sar
push
mov
inc
stc
jg
add
xlat
ds
(bad)
pop
dec
dec
sbb
(bad)
out
(bad)
sbb
imul
out
lahf
push
daa
add
mov
ds
sub
sar
inc
mov
out
add
es
stc
dec
fistp
add
retf
fistp
les
dec
or
in
ds
jns
mov
mov
sub
add
sub
mov
sub
scas
mov
or
or
mov
inc
hlt
xchg
mov
retf
mov
inc
pusha
or
cmc
bound
inc
cwde
or
idiv
mov
or
mov
ds
loope
into
fmul
int3
push
add
das
jmp
(bad)
ds
mov
inc
adc
pushf
es
adc
out
or
mov
jle
inc
(bad)
ds
ins
xchg
jb
inc
pop
or
sar
ja
pop
(bad)
and
xor
add
stos
int3
cmp
iret
pop
push
(bad)
or
std
aaa
xchg
inc
aas
mov
and
adc
add
lea
and
mov
xadd
inc
mov
call
scas
cld
mov
xchg
xor
in
inc
add
jno
ins
loope
ins
sub
adc
stc
mov
cs
das
jg
adc
add
and
jg
adc
ins
cld
loop
or
pop
and
aas
xor
cdq
or
imul
pop
xchg
sbb
jecxz
jb
hlt
sti
in
cmp
sub
or
sub
dec
(bad)
clc
in
popa
mov
jle
mov
pop
jb
jae
call
cmc
jae
shr
inc
sub
rcl
inc
pop
call
and
aas
mov
aad
test
(bad)
std
ja
or
out
jo
pusha
jno
pop
dec
and
cld
bnd
imul
in
inc
mov
mov
aam
inc
push
iret
jmp
(bad)
aas
iret
jmp
pop
test
aas
daa
push
lock
fmulp
cmp
int
shl
ret
inc
pop
sti
push
inc
adc
mov
outs
jnp
pop
fist
nop
out
addr16
and
cld
sti
int
lock
pop
(bad)
mov
sahf
cmp
out
call
sbb
xor
popa
sbb
cld
int
call
aas
or
mov
sbb
push
leave
pop
dec
jg
outs
scas
xchg
push
rol
jg
mov
rcr
and
aas
aam
mov
(bad)
repnz
jmp
jno
push
sub
add
(bad)
mov
rcr
mov
pop
jo
xor
jl
aaa
pop
and
das
pop
stc
fwait
sub
and
pop
mov
dec
sbb
xchg
lock
daa
xor
inc
adc
sahf
sub
cmp
aaa
ja
cmps
sub
mov
(bad)
out
inc
push
aas
mov
xor
push
xor
mov
mov
sub
inc
out
mov
adc
dec
cmp
adc
aas
and
outs
scas
cld
shl
add
mov
sub
pop
ds
xor
lods
adc
sbb
sbb
outs
jg
dec
fiadd
clc
jg
xor
push
bound
add
clc
cmp
jg
lds
cmps
test
data16
inc
sbb
outs
out
jle
jnp
jle
dec
pop
push
cmp
fnstcw
jae
cmp
inc
pop
(bad)
out
jae
stc
mov
daa
cmp
sbb
int3
jnp
and
loope
mov
(bad)
(bad)
jle
or
iret
rcr
movs
jmp
add
inc
jo
out
fistp
cld
jnp
scas
and
dec
out
sar
stos
out
cmc
or
xchg
call
inc
and
mov
jne
and
cmp
inc
or
outs
scas
cld
imul
ins
dec
loopne
cmc
outs
mov
stc
bnd
dec
xor
aaa
mov
jmp
fcmove
pop
test
fmul
xor
add
dec
into
dec
push
push
stc
fwait
sub
aas
or
daa
mov
push
mov
inc
scas
inc
aaa
push
(bad)
pop
jbe
add
aas
sub
inc
jle
pusha
dec
and
js
mov
sub
outs
cmp
push
or
push
aas
jmp
ror
mov
sub
dec
mov
push
jle
xor
shr
cwde
ds
and
pop
(bad)
out
xor
lods
mov
adc
push
nop
and
call
and
mov
and
lahf
or
push
push
repz
scas
cld
pop
adc
out
inc
cs
jne
inc
cmp
ja
jae
ss
mov
push
fld
xor
sub
cmps
jle
(bad)
jmp
or
aas
mov
and
and
cmp
mov
out
push
hlt
pop
js
jns
inc
cmp
inc
adc
popf
sar
push
lahf
cmp
sbb
cmp
sub
mov
fdiv
adc
jle
int3
inc
sub
ss
aas
and
sahf
daa
pushf
xchg
loope
fisttp
push
test
sub
dec
jge
add
dec
adc
test
jae
outs
sub
aaa
pop
inc
fcomp
cld
jg
call
push
lods
popf
retf
aas
sub
inc
xor
xchg
xor
sbb
fistp
dec
pusha
push
push
cmp
loope
fsubr
retf
mov
mov
dec
call
jmp
jnp
cmp
cmp
cmp
movs
push
push
(bad)
out
ja
dec
pop
sahf
dec
dec
mov
fstp
add
mov
jns
pop
inc
repnz
or
cmp
sub
xchg
push
shl
fs
cld
in
out
call
aas
jle
dec
jl
or
xor
push
les
sti
shr
push
pop
repz
ret
dec
pop
push
pop
mov
xchg
mov
wbinvd
adc
pop
mov
enter
adc
scas
cld
int
call
and
adc
movhps
movs
retf
retf
mov
mov
ins
mov
div
push
(bad)
mov
adc
or
pop
sbb
push
movs
shl
pop
jle
ret
aam
mov
(bad)
jl
das
push
mov
stc
jg
into
fs
xor
call
adc
sbb
jmp
xor
xor
sahf
xlat
lahf
jno
sbb
push
test
scas
push
fsubr
add
out
and
aas
in
pop
jle
out
mov
stos
ja
pop
push
xor
and
fistp
es
adc
dec
xchg
pushf
cmp
inc
rcr
mov
inc
scas
cld
int
test
jg
(bad)
xor
jne
inc
retf
adc
fcomp
repz
lea
clc
mov
xchg
mov
(bad)
sub
call
mov
pop
ret
sbb
outs
scas
cld
and
mov
dec
fwait
sub
sub
cmp
dec
ds
fisttp
ja
fistp
push
pop
loopne
movs
nop
xchg
sub
mov
loope
adc
jl
sbb
sbb
scas
cld
int
inc
inc
loop
dec
and
test
pop
cmp
loop
jg
in
adc
xor
je
das
loope
cli
mov
fwait
sub
jecxz
lock
and
jmp
fistp
mov
loopne
shr
out
(bad)
cld
int
inc
xchg
in
push
push
adc
je
and
dec
cld
out
outs
adc
mov
ret
test
mov
ret
mov
jle
test
cmp
jl
xor
outs
out
pop
int3
out
inc
shr
add
adc
call
jg
cmps
(bad)
sbb
xor
mov
outs
int
jmp
mov
es
cli
mov
cs
(bad)
jg
jle
cld
jae
xchg
mov
or
add
aad
jg
jecxz
mov
dec
or
nop
push
mov
xor
std
fist
sub
xlat
lahf
cmps
and
cs
inc
sti
mov
ja
jg
jge
xor
(bad)
xor
and
adc
stc
aas
sub
lahf
repnz
dec
jge
mov
fstp
push
inc
and
or
cmp
cld
mov
mov
scas
xchg
dec
cld
fdivr
or
out
cmp
fwait
lods
xor
pop
rcr
mov
sbb
(bad)
rcr
add
pop
adc
pop
inc
cmps
bnd
mov
mov
add
outs
push
mov
mov
lahf
push
push
or
cld
mov
dec
loopne
dec
mov
(bad)
mov
jg
in
inc
clc
mov
std
mov
aas
push
xor
jl
push
aas
pop
in
or
mov
out
(bad)
out
fistp
test
dec
mov
out
xlat
shr
out
aas
cli
lahf
out
js
sbb
pop
cmp
jg
aaa
push
dec
jbe
sbb
call
fisttp
xor
cld
mov
mov
shl
jmp
mov
fild
jmp
add
sbb
dec
pop
loopne
lahf
mov
rcl
stc
(bad)
xor
xchg
push
scas
movs
mov
inc
xchg
add
fmul
cmp
pop
stc
fwait
jg
dec
xchg
fld
shl
pop
out
aas
adc
repnz
bound
add
fild
mov
lods
jbe
cmps
out
jg
fistp
cmp
push
inc
clc
mov
(bad)
pop
loop
mov
push
inc
fiadd
pop
xchg
push
or
add
adc
inc
mov
or
dec
repnz
push
or
push
repz
adc
(bad)
cli
add
mov
repz
and
imul
fwait
lahf
cmp
dec
test
aas
sub
stc
ret
push
jmp
mov
(bad)
push
adc
jmp
fsubrp
mov
push
push
fbstp
jp
test
or
call
fnstsw
push
(bad)
jmp
inc
loopne
pop
inc
out
mov
mov
cmp
in
sbb
int
adc
sahf
sub
mov
dec
sti
mov
(bad)
sti
xchg
xlat
int
inc
push
mov
mov
test
(bad)
stc
mov
je
xchg
inc
call
sbb
xchg
xchg
mov
push
cld
retf
push
jg
mov
(bad)
repz
repz
or
(bad)
mov
push
mov
xlat
push
dec
push
push
(bad)
jmp
sub
cmc
mov
mov
iret
test
xchg
jg
in
idiv
hlt
mov
sub
aas
inc
xchg
cmp
inc
(bad)
(bad)
(bad)
jg
idiv
mov
fldl2t
pop
cmp
repnz
shr
jle
push
pop
sbb
push
in
inc
push
pop
pop
test
aas
(bad)
(bad)
outs
idiv
cmp
xor
jg
mov
or
sub
das
call
cmc
jg
mov
pop
and
idiv
mov
call
in
mov
jo
aaa
sbb
fbstp
jmp
ins
fnstsw
adc
xor
xchg
mov
out
dec
jmp
jmp
(bad)
mov
lock
jmp
mov
xor
xor
std
bnd
sti
jg
mov
shr
pop
sti
jmp
mov
jmp
(bad)
frstor
aas
xor
jmp
mov
xor
inc
cld
jg
mov
std
mov
inc
stos
sahf
cmp
pusha
movs
cmp
jle
clc
outs
sub
mov
cmp
mov
mov
aaa
pop
inc
std
call
scas
cmp
mov
rcl
(bad)
jg
mov
cmp
ss
(bad)
call
mov
out
(bad)
fstp
fistp
retf
mov
push
push
cmp
(bad)
mov
loope
xchg
dec
nop
(bad)
pop
(bad)
in
std
adc
shl
push
mov
pop
push
aas
pop
das
idiv
out
jmp
mov
add
mov
mov
aam
les
out
push
fs
cmps
ret
jns
arpl
add
inc
imul
cs
(bad)
mov
test
(bad)
push
popa
fwait
cmp
xor
sub
or
adc
call
fwait
inc
outs
leave
ja
sbb
nop
mov
mov
gs
movs
loop
(bad)
int
outs
(bad)
cmp
neg
sub
es
loop
xchg
mov
xchg
aaa
mov
push
jg
(bad)
fstp
sahf
push
xor
dec
xchg
cmp
mov
ins
pop
mov
popa
fmul
cmps
cwde
int
outs
(bad)
cmp
inc
jb
xchg
int3
jno
loop
fcomp
nop
cmp
rcl
xor
jecxz
(bad)
mov
daa
pop
cmp
sbb
(bad)
scas
data16
jnp
dec
(bad)
in
fwait
imul
push
(bad)
push
aas
cmp
xchg
mov
mov
mov
mov
mov
(bad)
out
call
das
xchg
pop
mov
stos
out
stc
(bad)
in
(bad)
mov
jnp
jge
mov
xlat
mov
jmp
aaa
(bad)
mov
and
xchg
mov
pop
mov
dec
pop
mov
pop
add
cld
jmp
test
mov
xchg
mov
xchg
cmp
mov
fwait
inc
sahf
cmp
frndint
and
mov
(bad)
mov
cmp
mov
lock
adc
xchg
fdivr
dec
pop
push
in
movs
xchg
cld
jmp
call
bound
jp
jb
(bad)
mov
mov
cmp
cmps
mov
into
push
mov
hlt
push
push
ror
inc
imul
inc
cdq
xor
and
jge
aas
mov
dec
call
sahf
push
(bad)
mov
call
(bad)
sar
mov
or
or
in
aaa
cld
out
test
aam
fist
sahf
push
das
ds
mov
aad
bswap
jno
adc
push
repz
in
xor
push
xor
dec
cld
jo
push
sbb
push
jl
sbb
push
sar
(bad)
(bad)
jmp
daa
xchg
cmp
lahf
xchg
pop
lds
inc
dec
pop
out
pop
mov
jg
call
mov
data16
add
cmp
xchg
sahf
int
outs
(bad)
mov
(bad)
ss
mov
sub
mov
clc
jmp
xor
dec
cmps
(bad)
mov
ficomp
(bad)
jg
sub
push
stc
and
xchg
mov
or
hlt
aas
js
xor
repz
int
outs
(bad)
mov
cmc
xor
mov
(bad)
mov
add
fwait
dec
cmp
add
mov
xchg
pushf
cmp
cmp
mov
xchg
out
aaa
lock
cmp
rcl
lock
(bad)
retf
cdq
cmp
(bad)
(bad)
daa
sub
aad
mov
xchg
inc
jge
or
fdiv
js
add
jmp
fucomi
cwde
cmp
sub
jbe
stc
outs
cli
scas
out
stos
ror
mov
mov
push
cmc
sahf
xchg
mov
mov
jbe
mov
sub
lods
ficomp
setb
movs
push
dec
jmp
call
mov
inc
outs
xchg
sbb
cmp
(bad)
jg
jg
xchg
aam
(bad)
out
call
push
dec
fld
stos
inc
inc
add
push
xchg
cmp
inc
pop
mov
leave
push
mov
dec
cmp
dec
and
call
pop
out
xor
cmps
push
or
jbe
loope
idiv
inc
ficom
inc
loop
out
mov
jle
push
xchg
mov
jle
and
int3
xor
inc
fwait
jecxz
div
mov
and
(bad)
xor
jg
call
or
dec
aam
and
cmp
cmp
sahf
mov
push
fs
xor
mov
rcr
or
addr16
mov
jmp
mov
mov
stos
mov
cmp
push
stc
jge
neg
cld
(bad)
dec
xchg
je
in
call
cdq
jp
xchg
add
cmp
gs
fldcw
inc
push
jmp
shr
push
pop
and
call
dec
imul
xchg
jmp
adc
jmp
jg
cdq
add
ja
test
rcl
push
ror
cmp
dec
iret
ss
(bad)
dec
repz
jns
mov
adc
ds
daa
add
aas
sub
xchg
mov
stc
into
dec
cdq
mov
sbb
(bad)
and
inc
sti
int
cld
jmp
jmp
in
xchg
inc
fldcw
not
fwait
clc
(bad)
lahf
mov
(bad)
mov
fwait
(bad)
fistp
mov
repz
cmp
mov
es
xchg
jmp
jbe
jg
mov
xor
stos
jecxz
xor
jo
sub
cld
(bad)
jmp
mov
(bad)
call
aas
and
in
int
aaa
jmp
push
mov
(bad)
pop
addr16
inc
pop
cmp
movs
xchg
jl
jbe
in
aaa
mov
lahf
cmp
test
jl
sbb
mov
stc
jmp
into
xchg
mov
lock
bnd
inc
jl
cmp
add
outs
out
arpl
push
outs
dec
out
retf
mov
mov
or
pop
aad
pop
dec
pop
mov
fwait
xor
pop
in
ficomp
stos
ss
pop
xor
and
push
loope
mov
fld
popf
mov
sahf
jns
arpl
retf
fwait
cmp
std
jns
imul
std
test
jp
sar
out
xor
(bad)
(bad)
in
pop
jle
rcr
lahf
call
xor
mov
lea
pop
push
sti
aas
and
mov
dec
cmc
ficomp
mov
test
pop
and
pop
in
jb
jmp
push
jecxz
mov
mov
jbe
cmp
mov
dec
push
mov
mov
sar
mov
das
cli
in
nop
push
int3
push
test
fimul
push
xlat
pop
ret
jb
or
jno
imul
std
pushf
push
test
sbb
aas
fisttp
mov
cmp
push
or
add
inc
jle
rcl
icebp
addr16
push
dec
xchg
cmp
out
xchg
ins
(bad)
push
inc
pop
or
jno
imul
fisttp
ror
add
cli
ret
pop
push
or
jb
adc
sti
jmp
pop
dec
sub
jp
inc
aaa
fidivr
das
dec
jmp
ja
popf
jno
dec
popf
mov
sbb
aaa
pop
xlat
add
cmp
adc
push
jecxz
call
push
test
fild
out
pop
jmp
jg
mov
imul
mov
repz
ret
js
ficom
xor
cld
pop
dec
sbb
movs
sub
(bad)
push
fistp
and
out
push
push
(bad)
int3
(bad)
jg
jmp
cmp
dec
(bad)
sti
push
jp
lea
and
xchg
cmp
nop
movs
mov
pusha
outs
xchg
sub
sub
(bad)
mov
mov
xchg
pushf
mov
sbb
mov
movs
xchg
(bad)
popf
cmp
mov
push
sub
or
cmp
inc
outs
pop
jbe
mov
cdq
cmp
(bad)
(bad)
adc
pushf
lods
std
jnp
xor
popf
mov
shl
jmp
cmp
jno
sub
shl
jns
xchg
sti
(bad)
pop
push
mov
or
or
(bad)
xchg
push
sbb
jmp
dec
aas
mov
imul
cmp
lds
sub
out
cmp
cs
clc
popa
gs
sbb
xor
(bad)
ud0
(bad)
gs
loopne
loopne
xchg
fimul
icebp
xchg
(bad)
jg
add
fcom
mov
fs
rol
sti
jg
std
retf
jno
icebp
pusha
inc
mov
clc
ret
movs
add
cmps
add
push
adc
dec
push
adc
movs
test
inc
retfw
jmp
fsub
jno
or
xchg
cmp
cwde
sbb
xchg
std
inc
add
into
sahf
dec
add
xor
js
fcmovnb
cmp
sub
outs
pop
add
adc
out
das
lock
mov
add
pushf
push
lods
xchg
aam
dec
add
xor
mov
faddp
lahf
sub
fadd
inc
in
add
mov
push
clc
lea
xchg
or
pop
enter
sub
xlat
fimul
inc
mov
daa
and
fs
mov
xchg
add
jae
test
aam
and
repnz
les
test
mov
mov
dec
adc
mov
in
or
cmc
inc
xchg
inc
test
mov
xor
(bad)
aas
(bad)
je
in
nop
xor
mov
or
inc
daa
outs
add
(bad)
push
or
nop
xor
or
xchg
push
cs
sbb
outs
adc
sbb
daa
sbb
or
rcr
sahf
(bad)
mov
xchg
adc
cwde
add
adc
mov
xchg
nop
xchg
xor
adc
outs
dec
add
outs
inc
mov
out
add
push
or
not
push
stos
sbb
ja
rcr
mov
in
push
out
push
push
push
dec
rol
es
jl
daa
in
pusha
ror
test
mov
inc
or
(bad)
out
xchg
pushf
pusha
daa
adc
cmps
(bad)
xchg
add
xor
mov
push
or
add
mov
mov
xor
sub
loopne
mov
inc
adc
add
mov
xor
fs
ficom
push
jbe
pop
sbb
(bad)
xchg
add
cmps
dec
outs
pop
out
xchg
mov
fdiv
adc
sbb
lahf
xchg
sbb
popf
nop
jo
pop
mov
or
sbb
gs
or
int
and
test
mov
stos
iret
add
stos
xor
out
nop
pop
jg
daa
movs
aad
int3
xchg
push
scas
push
or
xchg
in
enter
mov
push
loop
inc
dec
rcl
test
pop
mov
inc
and
scas
mov
out
aas
lea
loope
inc
les
mul
fcom
(bad)
daa
nop
or
or
(bad)
jo
in
jnp
aaa
out
ss
add
aaa
adc
push
call
ret
mov
shl
xor
xchg
jo
or
sbb
inc
xor
sbb
xchg
inc
test
shl
les
dec
addr16
mov
and
and
lea
adc
jg
xchg
mov
into
cmps
mov
add
test
sahf
add
mov
sub
bound
mov
cmps
xor
rol
(bad)
rol
out
cmp
sbb
les
sbb
addr16
setbe
(bad)
pusha
and
inc
pop
or
push
xchg
retf
sub
fistp
sbb
mov
movs
aaa
mov
jg
cmp
jno
dec
or
pop
xchg
mov
xchg
nop
pop
in
xchg
ss
pop
mov
inc
add
mov
adc
imul
das
cmps
enter
das
daa
(bad)
enter
test
adc
and
xor
xchg
lahf
cwde
scas
stos
add
fcom
scas
inc
pop
ror
push
fild
adc
pop
ds
les
call
fisubr
aaa
xchg
mov
cmp
xchg
out
pop
pop
push
mov
push
push
and
pop
inc
clc
outs
xor
add
pop
xchg
lock
(bad)
addr16
mov
jne
inc
daa
inc
or
cwde
push
ja
xchg
adc
pop
rol
cwde
pop
test
jmp
inc
inc
or
cmps
scas
out
fcom
in
and
pop
xchg
jbe
sahf
pop
es
or
mov
loopne
mov
es
pcmpeqd
fisub
inc
pop
enter
add
in
sbb
xchg
aaa
mov
loope
sub
cwde
xor
lock
movs
sysret
aaa
adc
mov
not
cmps
sbb
fs
sahf
cmp
mov
inc
adc
sahf
pop
jg
push
(bad)
(bad)
in
adc
dec
mov
push
mov
pop
(bad)
cwde
pop
mov
inc
sti
xor
pop
nop
ins
js
call
xor
jg
pushf
push
nop
inc
push
pushf
loopne
sub
cdq
aaa
sbb
ja
bound
daa
seto
fdivr
ror
adc
pushf
js
mov
xor
popf
je
and
add
jnp
fwait
mov
in
mov
lahf
int3
cmovs
sbb
aaa
lock
inc
mov
jns
mov
adc
sbb
sub
rcr
pop
adc
xchg
push
push
sahf
sub
push
lods
popa
xchg
mov
pop
scas
inc
mov
add
xchg
fucomip
mov
enter
fidivr
push
addr16
sbb
pop
data16
les
sbb
sbb
(bad)
out
pop
rcl
jg
mov
push
in
cwde
xchg
push
cmps
sbb
(bad)
popf
shl
cmps
xchg
aaa
or
jns
and
aaa
sbb
push
xchg
(bad)
shl
cmps
neg
lahf
outs
lahf
mov
cmp
pop
jg
shr
mov
cmps
add
js
sub
mov
daa
or
and
mov
jecxz
sbb
add
das
xor
xor
or
add
or
int3
scas
or
imul
push
lock
in
outs
js
loop
jb
mov
ja
inc
daa
sbb
(bad)
repnz
pop
(bad)
aas
adc
bnd
adc
(bad)
lahf
pushf
adc
fst
add
dec
adc
fistp
aam
and
xor
aaa
cmp
xchg
call
push
and
pop
mov
popf
mov
push
mov
sar
and
pushf
mov
lahf
clc
push
dec
mov
xchg
fwait
les
mov
pop
callw
mov
out
ds
(bad)
pushf
lock
call
push
adc
pop
or
(bad)
mov
in
sub
cmp
pop
(bad)
jmp
mov
outs
push
xchg
add
adc
cmp
aaa
dec
pop
inc
adc
data16
push
dec
movs
loop
jbe
add
add
dec
and
outs
cdq
les
sbb
and
call
or
mov
cmp
xlat
and
add
cmps
adc
push
rcr
out
shr
outs
out
adc
cmps
mov
sbb
mov
in
mov
add
add
mov
add
cld
mov
sbb
sbb
inc
ror
inc
push
inc
cmp
dec
mov
fst
dec
inc
push
cmp
clc
adc
push
pop
jg
imul
dec
sub
xor
shl
dec
jbe
mov
xlat
cli
inc
dec
dec
push
cdq
out
ds
(bad)
and
test
jns
mov
test
sahf
frndint
pop
push
arpl
fist
mov
push
iret
repz
dec
outs
mov
cli
sbb
pop
cs
aam
pop
cmp
cmp
out
push
pop
push
mov
in
and
push
push
pop
cmps
stc
cmp
pushf
sar
cmp
cmps
stc
xor
mov
imul
xchg
lock
push
mov
adc
imul
ins
ror
repz
mov
movs
(bad)
ss
fidivr
mov
das
movs
sbb
xchg
cmp
pop
dec
mov
push
ds
inc
pop
mov
or
cmp
inc
and
sub
in
cmps
test
mov
scas
jl
ja
leave
test
mov
pop
mov
pop
aam
pop
add
aas
rcl
xor
daa
xchg
adc
xchg
in
xor
inc
lds
xor
push
fs
jp
inc
ret
sbb
and
xchg
vaddss
icebp
cmp
(bad)
std
and
xchg
sub
xlat
xlat
jecxz
fisubr
jbe
bound
jg
rcr
shl
(bad)
fdivr
loope
outs
rdpmc
push
and
mov
push
hlt
xor
lahf
push
test
(bad)
pop
pop
adc
sub
xchg
push
popf
mov
pop
push
outs
inc
out
xchg
addr16
cmps
xlat
test
out
add
hlt
daa
test
push
push
cmp
fiadd
jg
lahf
test
test
mov
sgdtd
(bad)
aas
add
jl
pop
aas
cmp
add
jle
pop
inc
adc
and
ds
ins
sub
sub
xchg
dec
test
pop
pop
mov
pop
adc
add
pop
cdq
dec
pushf
(bad)
xlat
dec
pop
(bad)
pop
(bad)
fbld
or
pop
bound
ins
loopne
outs
pop
iret
pop
add
cmp
jo
(bad)
gs
dec
jne
fmul
jg
mov
out
mov
push
into
aas
xchg
leave
ror
mov
sar
push
mov
push
popf
mov
mov
call
dec
push
mov
add
sbb
sub
aad
and
adc
fimul
je
je
fnsave
add
test
in
in
xchg
pushf
je
in
sbb
imul
xor
adc
adc
dec
or
cmps
add
mov
add
fwait
sub
fild
push
add
pop
fcomp
and
xchg
push
pop
and
pop
cmps
scas
adc
pusha
aaa
scas
xor
enter
sub
push
push
mov
sti
add
sbb
fadd
cmp
jne
sub
in
enter
jg
mov
mov
test
inc
scas
push
add
add
movq
sub
das
mov
jbe
iret
fadd
sub
das
push
mov
les
dec
xchg
(bad)
ja
jo
pushf
popf
mov
iret
mov
aad
adc
aad
mov
mov
xor
aaa
test
cmp
xor
mov
add
rcr
add
xchg
xor
out
mov
adc
push
mov
adc
rcr
pop
pop
mov
outs
movs
mov
cmovne
jno
push
xchg
ja
jecxz
rdmsr
(bad)
add
or
leave
(bad)
leave
cmp
mov
mov
cmps
popf
nop
sbb
mov
and
je
push
adc
test
enter
cmps
in
lock
pop
(bad)
pop
test
add
xor
leave
sub
mov
push
cmp
push
xchg
mov
scas
shl
test
inc
hlt
out
jo
(bad)
mov
cmps
je
inc
or
leave
inc
jb
inc
mov
sar
shl
outs
daa
ret
dec
aaa
mov
hlt
add
ja
clc
(bad)
mov
fadd
daa
push
stos
leave
sub
inc
add
mov
mov
mov
adc
mov
out
sbb
outs
mov
mov
add
fist
push
loopne
pop
inc
clc
addr16
push
lock
push
mov
push
jbe
mov
adc
xchg
inc
aas
out
ins
push
pop
adc
mov
xor
lahf
xchg
xchg
adc
mov
cmp
mov
add
pop
shr
and
(bad)
mul
push
add
ja
push
jb
aaa
and
ficomp
leave
adc
cmp
leave
xchg
cmp
mov
in
pop
push
push
mov
mov
adc
and
mov
mov
xor
pop
leave
dec
fisub
mov
push
ins
packuswb
xchg
out
mov
inc
repnz
maxps
jmp
test
add
xchg
and
daa
add
or
in
in
pop
or
pop
push
or
cmp
inc
mov
fs
adc
adc
jb
jp
test
adc
xor
fistp
jnp
inc
add
or
pop
cs
and
inc
mov
and
jno
jl
xchg
xchg
daa
xchg
xchg
popf
sub
fs
test
sub
int3
xor
fild
push
sbb
cmp
sbb
add
cmp
pop
pop
mov
push
mov
sbb
mov
and
movs
scas
add
xchg
add
fstp
out
das
icebp
in
xchg
xchg
or
inc
pop
or
adc
mov
jb
or
or
stc
scas
and
adc
push
pop
adc
inc
mov
adc
sbb
jns
dec
mov
pop
fiadd
and
mov
in
lock
sti
cdq
in
daa
sti
or
inc
push
mov
push
inc
call
dec
or
mov
or
mov
(bad)
stos
add
xchg
and
dec
jb
jp
test
mul
cwde
gs
pop
and
push
das
jbe
mov
push
mov
pop
pop
dec
fs
ins
xchg
in
cmp
mov
in
mov
(bad)
dec
and
xchg
lods
sbb
mov
dec
xor
leave
and
dec
dec
clc
inc
cmp
and
inc
jb
leave
scas
mov
rcr
jb
in
dec
adc
leave
dec
ja
sbb
add
mov
inc
add
dec
add
adc
ret
or
jb
inc
mov
cwde
jnp
jb
mov
pop
in
jns
rol
jg
push
jbe
in
dec
or
dec
adc
xchg
daa
out
fdivr
leave
jecxz
enter
cmps
rcl
jl
pop
dec
fbstp
add
adc
dec
sbb
cwde
(bad)
and
pop
mov
cmp
pop
mov
add
fiadd
cld
sbb
hlt
add
or
and
mov
sub
ss
enter
or
or
in
(bad)
adc
adc
mov
adc
enter
mov
xor
leave
(bad)
sbb
sbb
sbb
cmp
adc
sbb
mov
and
dec
and
pushf
sbb
pop
es
pcmpeqw
daa
daa
inc
mov
sub
daa
daa
and
lods
fmul
mov
ret
xor
xor
xchg
and
xor
xor
loopne
push
add
comiss
cmp
and
inc
xor
cmovbe
mov
popf
pop
popa
push
addr16
jb
lea
inc
mov
mov
test
data16
dec
mov
dec
outs
mov
mov
aad
pavgb
dec
repnz
leave
dec
push
not
add
repnz
or
push
pop
pop
dec
sahf
mov
pop
sub
and
das
cmp
pop
dec
pop
fst
fs
outs
jp
(bad)
jb
enter
gs
data16
and
sbb
push
shl
enter
ins
call
cmp
xor
das
push
or
adc
cmp
cmp
jb
jno
jne
sbb
inc
ja
js
push
jns
dec
dec
mov
ja
ins
jge
leave
xchg
and
cmp
in
enter
and
scas
test
mov
enter
mov
mov
mov
mov
lea
mov
sbb
push
inc
daa
lahf
push
xor
cmp
xchg
push
cmp
pop
xchg
mov
imul
call
enter
sahf
mov
in
leave
mov
sahf
mov
jns
int3
xlat
cmps
loop
test
inc
mov
push
add
in
xchg
lods
and
das
scas
cmp
inc
mov
mov
mov
mov
enter
mov
mov
mov
sbb
jb
mov
mov
sbb
das
push
leave
mov
mov
cmc
rcl
in
xchg
ror
push
ret
and
ja
sbb
sub
aaa
scas
push
sub
enter
add
mov
push
mov
enter
or
or
sub
shr
outs
dec
leave
pop
pushf
loopne
repnz
rcl
pop
push
xor
inc
push
dec
ds
add
cmp
cmp
ins
je
jg
xchg
daa
and
or
in
movs
or
or
mov
retf
adc
adc
out
xchg
das
inc
into
psllw
adc
jbe
enter
sbb
sbb
sub
cmp
xchg
and
pop
pop
arpl
outs
and
enter
and
sbb
xor
sub
retf
sub
in
leave
enter
lock
psubq
mov
repnz
push
xor
add
xor
xor
dec
inc
into
aas
sub
xor
aaa
inc
in
enter
cmp
cmp
cmp
cmp
cmp
and
xchg
inc
sahf
inc
cmps
scas
fs
xchg
inc
mov
mov
repnz
fmul
dec
out
and
sahf
test
dec
adc
mov
mov
sahf
retf
fucom
daa
xchg
retf
push
int3
pop
push
sbb
mov
push
add
add
sbb
inc
mov
push
cmps
add
jnp
add
xlat
cs
mov
push
loopne
leave
dec
dec
pop
sub
dec
inc
sub
cmp
shl
mov
push
cmps
add
mov
mov
aas
mov
retf
test
fcomi
jecxz
inc
xor
mov
and
or
push
sub
xor
lock
leave
imul
test
pop
leave
and
bound
js
in
adc
cmovno
in
in
pop
popa
imul
jns
mov
in
in
cdq
mov
in
mov
in
rcr
loope
jb
in
icebp
stc
inc
add
jb
jb
adc
and
jb
jb
xor
inc
dec
jb
jb
push
pop
popa
imul
or
jb
jb
mov
ror
jb
jb
fabs
jmp
icebp
stc
inc
add
cmp
cmp
adc
and
cmp
cmp
xor
inc
dec
cmp
cmp
pop
gs
jne
cmp
cmp
xchg
sahf
dec
and
sbb
hlt
inc
dec
dec
and
push
shl
cmp
xchg
dec
push
fwait
jb
push
(bad)
cmp
push
in
in
xchg
and
add
add
jb
add
and
sar
and
jnp
push
scas
shr
cmp
pushf
nop
push
rcl
mov
adc
test
mov
rol
call
pusha
movs
cmp
in
dec
jmp
repnz
jo
add
jmp
mov
add
dec
xlat
xor
pop
jg
rcl
ss
and
not
lods
les
add
rcr
jmp
pop
fcom
xchg
retf
xchg
inc
dec
movs
push
es
outs
ss
and
enter
add
in
je
pop
lahf
aam
mov
cmp
scas
in
in
aam
clc
and
add
aad
ror
xchg
aad
push
mov
hlt
(bad)
aas
push
push
cmps
test
sbb
xor
sbb
add
pop
dec
lahf
add
pop
imul
adc
enter
add
ins
inc
pop
mov
test
mov
sub
jns
push
cmp
add
(bad)
aas
sbb
pop
add
cmps
aas
mov
pop
add
popa
popa
sub
std
push
sub
xor
cld
xor
and
dec
cs
out
aam
ins
mov
sub
popf
or
jo
pop
or
xor
ins
idiv
dec
cmps
dec
inc
dec
dec
and
inc
dec
push
push
or
js
mov
inc
cs
in
dec
push
inc
jg
rcl
jle
xchg
pusha
pop
mov
pop
enter
lock
aas
add
cmp
inc
ds
add
dec
aas
push
stc
lods
or
push
add
or
dec
xor
das
aas
mov
push
inc
pop
lea
push
pmulhuw
or
jg
pop
adc
iret
cmc
cmp
pop
cmps
xlat
add
aam
xor
pusha
outs
test
ins
adc
add
or
xchg
fcmovne
leave
or
or
or
or
daa
adc
fmul
leave
adc
and
popf
pushf
inc
push
addr16
das
push
sysret
mov
in
push
mov
ins
push
and
leave
repz
sbb
push
pop
xchg
fucomi
add
or
add
pushf
fmul
fbld
or
sbb
data16
mov
das
xchg
test
ins
aas
pop
aas
add
add
or
adc
test
aas
add
push
test
mov
movs
inc
add
cwde
jae
lods
arpl
mov
mov
cmp
int3
pusha
push
push
sahf
addr16
cld
push
int
add
or
jns
out
adc
and
cmp
jnp
xor
pop
push
pop
pusha
repz
repz
repz
js
add
xchg
mov
jns
out
ror
fsubr
loopne
sahf
out
clc
cld
into
or
push
sub
xor
jns
out
inc
dec
push
pop
pusha
out
sahf
out
adc
sahf
enter
hlt
cld
cmp
rep
iret
add
adc
and
cmp
repz
cmp
pusha
iret
repz
push
test
repz
fsubr
hlt
cld
xchg
mov
fnop
adc
movs
push
adc
out
rcl
arpl
mov
shld
xchg
test
push
das
adc
jbe
outs
xchg
outs
call
or
and
stc
enter
pop
movs
sbb
mov
fisub
bswap
add
pop
inc
cmps
nop
(bad)
fbstp
mov
call
aam
std
jle
push
add
mov
xor
fcmovu
cld
rcr
fsubp
stc
xor
add
add
xor
inc
nop
sbb
add
adc
test
and
bound
or
jp
call
clc
inc
pop
bound
pushf
inc
mov
cvttps2pi
xor
xor
in
xchg
and
inc
and
sbb
jb
or
ins
add
je
jl
and
cmp
test
or
and
mov
sbb
jb
enter
pop
enter
and
sbb
and
and
mov
or
pop
add
fmul
sub
aaa
fxch
stos
rol
jo
icebp
das
mov
pop
scas
push
push
jle
shl
push
add
ins
or
imul
jb
add
push
(bad)
add
jns
push
xor
out
sahf
out
xchg
mov
repnz
sti
cmp
adc
das
dec
ins
add
out
sahf
out
pop
js
mov
loopne
xor
repz
xor
add
ins
push
add
add
add
xor
mov
xchg
cdq
inc
xlat
call
push
jnp
stc
mov
add
cli
or
or
ret
nop
cmp
adc
sbb
pop
stc
and
leave
sbb
into
sbb
ror
and
sahf
mov
(bad)
(bad)
push
test
lds
std
and
sbb
add
xlat
xchg
inc
push
add
inc
jg
(bad)
(bad)
stc
mov
adc
mov
dec
js
inc
outs
(bad)
loopne
jmp
dec
inc
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
push
int3
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
(bad)
jmp
int3
(bad)
xchg
push
cmps
scas
es
inc
or
add
(bad)
inc
cmps
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
clc
call
mov
popa
sar
mov
sbb
stc
(bad)
xchg
clc
repz
mov
jmp
dec
leave
fwait
xchg
and
and
ins
int
add
sti
aas
jno
or
mov
pop
fs
(bad)
(bad)
(bad)
dec
xchg
outs
adc
sub
sbb
pop
pop
mov
icebp
aas
ror
and
cmps
out
aas
fild
inc
mov
ins
scas
add
jle
inc
jp
aad
(bad)
(bad)
call
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
(bad)
(bad)
(bad)
cmp
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
(bad)
(bad)
(bad)
aas
popa
push
pop
sar
jl
mov
das
lea
mov
inc
inc
(bad)
jmp
cmps
loop
movs
daa
jmp
mov
inc
rcr
push
ds
(bad)
(bad)
jmp
push
int3
and
call
cmp
jp
and
cmp
mov
cmp
(bad)
(bad)
inc
std
xlat
cmp
mov
sbb
add
mov
aaa
fld
cmp
jno
sar
(bad)
(bad)
jmp
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
(bad)
(bad)
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
std
outs
(bad)
call
and
dec
dec
gs
std
or
pop
ficomp
frstor
sub
lahf
mov
sub
dec
pop
outs
aad
and
movs
or
push
cs
add
pop
sbb
jae
jae
mov
outs
xor
add
ja
add
pop
mov
jbe
xchg
and
add
add
adc
mov
jne
pop
jo
popa
add
ins
pop
push
sbb
test
xor
and
inc
jle
ins
xor
addr16
ror
aaa
sbb
sub
scas
mov
aas
jo
pop
xor
and
mov
lods
or
xchg
jbe
or
cmp
adc
setge
cmp
test
rcl
out
daa
and
mov
dec
movs
mov
lods
addr16
jns
mov
aas
add
dec
jnp
fbstp
push
xchg
adc
sub
(bad)
lahf
jg
scas
inc
push
outs
pop
rol
pop
retf
iret
ret
call
xlat
mov
outs
xor
shr
dec
xchg
add
xor
lahf
xchg
bound
imul
inc
fld
push
inc
(bad)
(bad)
in
push
mov
cmp
loopne
pop
das
shl
out
data16
jo
push
jae
mov
add
pop
cmps
mov
lock
movs
ja
dec
je
jo
dec
mov
pop
dec
cmp
inc
aas
pop
push
dec
inc
mov
push
adc
inc
js
push
sbb
jo
mov
or
(bad)
inc
std
push
test
push
and
outs
push
jl
mov
sub
popa
lock
xor
push
sub
lods
pop
test
or
push
dec
add
mov
push
ret
mov
into
sahf
outs
mov
push
add
mov
clc
aas
aaa
cwde
loopne
lds
rcl
sub
sub
pusha
je
jbe
sub
dec
xor
scas
loopne
popa
sub
int
jb
test
mov
ror
pop
sub
mov
inc
sub
mov
popa
mov
pushf
retf
jb
loopne
outs
push
orps
mov
push
add
sub
xor
cld
pop
aaa
adc
adc
out
or
pushf
mov
dec
leave
aad
cmovs
jp
push
aad
mov
inc
adc
xchg
and
push
and
or
add
add
push
push
mov
inc
xchg
add
xor
adc
mov
ins
movlps
adc
xor
and
sahf
out
(bad)
mov
jno
out
cmps
push
inc
mov
mov
mov
addr16
xor
sbb
shl
xor
movs
(bad)
push
add
adc
push
sbb
fsub
arpl
and
xor
shl
cs
jne
adc
inc
mov
add
addr16
dec
dec
dec
inc
sub
in
rol
xor
clc
jl
sub
xor
or
mov
ins
lods
cmp
test
dec
add
jae
sub
in
arpl
cmp
pop
sub
lds
and
inc
in
mov
xor
cs
ins
or
pop
sar
xchg
test
sti
movs
cmc
inc
int
dec
dec
not
rcr
jo
bound
add
adc
add
ret
mov
xor
xchg
cmp
sbb
fdiv
fdiv
dec
cs
loope
in
mov
sub
sub
lods
loopne
add
ins
adc
jae
scas
push
sar
pop
push
inc
popa
outs
jae
arpl
addr16
pop
or
je
jae
push
inc
add
push
push
inc
popf
in
sub
test
pop
add
xor
and
adc
inc
push
add
add
add
adc
enter
xchg
inc
add
xchg
popa
add
sub
add
and
or
cmp
es
in
jns
mov
mov
adc
int3
jo
inc
pushf
addr16
out
add
(bad)
add
pop
sbb
cwde
sub
fs
gs
cdq
ret
imul
out
inc
push
dec
inc
fst
jns
gs
mov
adc
imul
jb
bound
inc
rcr
and
xchg
aad
mov
adc
cmp
fs
inc
sub
pop
inc
je
shr
inc
add
pusha
inc
and
mov
xchg
popa
mov
add
xchg
int3
data16
sbb
movs
in
xor
je
fild
clc
adc
mov
push
mov
jo
fistp
popw
or
imul
push
bound
outs
fs
imul
xchg
sub
mov
ins
call
arpl
sub
gs
jo
sar
push
push
outs
imul
dec
gs
jbe
mov
loope
xchg
push
pop
dec
sub
jne
jns
push
xor
mov
push
fdivr
cs
loop
inc
fist
push
inc
js
add
push
pop
xchg
push
add
loop
(bad)
mov
mov
xchg
jnp
dec
jo
mov
dec
inc
dec
inc
push
adc
fsub
sbb
cli
xor
addr16
xchg
jne
out
cmps
xor
pop
and
cmp
xor
and
and
mov
rol
jp
pop
mov
inc
pop
sar
test
pop
aad
aaa
sbb
add
stos
mov
or
jp
dec
sbb
ror
dec
or
test
and
mov
pop
mov
dec
sbb
pop
sbb
in
loopne
add
push
repz
popa
mov
and
nop
je
jne
xlat
push
in
ss
je
xlat
add
push
je
cmp
adc
imul
and
xor
ins
int3
jo
inc
mov
inc
push
in
push
je
fmul
inc
jae
pop
pop
je
xor
dec
jge
je
mov
push
dec
or
sub
add
mov
jo
dec
je
push
dec
(bad)
jmp
cmp
inc
jae
sbb
aaa
inc
dec
je
mov
xchg
ins
xor
and
ss
or
xor
out
add
push
gs
fst
sbb
pop
aaa
ds
xor
aam
imul
and
loope
jecxz
retf
push
outs
dec
inc
jb
fidiv
push
dec
mov
dec
sub
or
ret
xor
aas
sub
call
retf
xchg
cmp
add
push
and
push
cmps
imul
push
add
or
stos
mov
mov
cs
int3
cmp
out
add
in
and
sub
xchg
loope
push
cmp
scas
pop
rcr
arpl
ins
inc
inc
pop
daa
dec
mov
imul
and
into
mov
mov
jmp
adc
jbe
add
cmps
xor
stos
mov
sbb
movs
lods
add
mov
jae
dec
arpl
xor
mov
bound
inc
and
dec
je
jp
mov
pop
jnp
inc
rcl
shr
or
adc
mov
loopne
jo
cdq
pop
loopne
call
jmp
test
pop
lahf
pop
jb
jnp
inc
nop
cdq
xor
outs
pop
fsub
outs
xor
mov
sub
lods
iret
sbb
xchg
fsubr
mov
inc
lock
pushw
cmp
xor
pop
or
pushf
mov
push
xchg
sub
dec
push
mov
les
sbb
inc
pop
and
pop
cdq
aaa
dec
pop
ins
daa
pop
imul
fimul
gs
xor
push
movs
lods
dec
call
aad
push
pop
arpl
jb
and
fwait
mov
sbb
xchg
mov
test
adc
push
push
ret
push
cmp
es
imul
(bad)
push
stc
add
lods
adc
push
xor
inc
add
adc
xchg
adc
dec
xor
lock
cmps
jl
(bad)
(bad)
call
sbb
push
sbb
or
inc
adc
or
pop
mov
cmp
xor
push
add
enter
daa
sub
jmp
into
xor
lock
xor
add
xor
(bad)
dec
xchg
adc
in
or
or
sbb
add
pop
or
(bad)
push
adc
pop
or
pop
sub
push
sbb
push
lock
mov
in
stc
dec
into
push
xor
push
dec
femms
lock
cmp
mov
dec
and
fidivr
sbb
xor
dec
add
fild
pop
push
or
push
and
and
sub
inc
(bad)
(bad)
in
fist
xor
push
adc
xor
or
inc
jp
pop
das
lock
lock
mov
or
adc
add
fs
cld
std
fwait
mul
and
push
sbb
mov
or
xchg
test
enter
inc
jnp
sbb
inc
add
pop
es
push
add
call
or
jns
sbb
or
test
das
mov
lock
add
and
inc
lock
xchg
retf
push
inc
xor
cs
adc
fcomp
or
or
or
adc
adc
or
enter
mov
outs
jg
add
daa
push
adc
ud2
or
add
loopne
(bad)
mov
int3
sub
fcom
add
stos
jle
dec
push
mov
or
mov
and
sbb
pop
jmp
xchg
and
and
adc
adc
mov
pop
or
and
sub
mov
mov
xchg
sysenter
or
sbb
or
add
push
imul
adc
push
cld
fld
mov
xchg
or
sbb
jbe
and
(bad)
(bad)
fld
pop
or
adc
pop
push
and
pop
and
adc
and
push
and
clc
push
inc
jg
sub
lods
call
add
es
std
popf
push
cmps
add
dec
push
or
sbb
sub
sub
cmp
inc
lock
push
adc
sbb
or
adc
and
jmp
xor
sbb
xor
push
or
push
fadd
xor
das
pop
adc
aaa
pop
cld
adc
sub
add
add
call
mov
push
daa
pop
adc
push
add
or
mov
sbb
mov
or
adc
add
mov
movs
das
xor
sbb
sub
or
leave
jo
xor
gs
pop
bt
push
and
inc
dec
add
test
push
fldenv
mov
or
loopne
jmp
or
out
sahf
add
push
out
and
adc
or
add
dec
sbb
sbb
adc
push
adc
mov
and
fistp
cs
or
inc
ds
and
mov
push
lock
add
add
lock
adc
scas
mov
inc
pop
stos
jp
sbb
jo
sbb
loop
or
pop
push
inc
or
add
adc
dec
and
std
add
xor
adc
adc
or
mov
sbb
lods
or
mov
or
push
or
(bad)
fwait
mov
sbb
adc
or
adc
adc
jmp
sbb
dec
add
mov
push
inc
ins
xor
cmp
pop
xor
clc
mov
pop
push
cmp
xor
add
fidivr
jo
daa
lock
add
frstor
push
pop
outs
fwait
jmp
sub
and
sbb
pop
jmp
cmps
jl
or
pop
daa
or
sbb
sub
daa
or
or
or
add
lds
push
and
pop
jbe
push
(bad)
mov
pop
inc
in
pop
ja
and
outs
ret
sbb
pop
std
or
sbb
sbb
sbb
jae
xor
push
pop
ret
sub
push
or
or
call
mov
mov
dec
or
push
adc
lock
stos
(bad)
(bad)
dec
pop
inc
pop
mov
adc
bound
and
sub
sbb
and
(bad)
es
or
sbb
adc
sub
es
adc
cld
ins
add
cmp
mov
adc
sbb
sbb
xor
(bad)
cmp
cmp
sub
adc
xor
lods
and
fs
shl
push
add
or
cmc
jmp
pop
sbb
pop
jnp
sub
lock
or
pop
mov
lock
sub
add
pop
adc
push
cmp
adc
(bad)
push
cld
jo
sbb
cli
adc
or
adc
pop
lock
fucomi
jg
jp
or
add
jnp
inc
lock
and
inc
loope
pop
icebp
push
add
dec
add
dec
push
add
arpl
or
jp
push
pop
push
push
jmp
scas
or
add
or
aad
sub
push
sbb
and
repnz
clc
mov
pop
xor
adc
and
cmp
(bad)
mov
cmp
sub
xor
pop
cmp
xor
mov
std
(bad)
cmps
or
pop
lock
sub
dec
add
pop
or
(bad)
in
outs
clc
add
push
push
or
add
or
xor
mov
lock
mov
mov
push
clc
adc
or
sbb
adc
mov
push
push
les
push
sbb
pop
and
adc
je
fist
push
dec
invd
in
das
mov
sub
or
cvtps2pd
xlat
or
and
in
cmps
and
sub
addr16
mov
adc
aad
out
mov
js
adc
cmps
dec
sub
sbb
loope
adc
or
lock
(bad)
mov
cmp
inc
mov
pop
adc
pop
(bad)
mov
daa
xchg
rcl
sbb
daa
sbb
scas
fwait
(bad)
push
imul
sbb
and
inc
adc
outs
cmp
fdivp
call
sbb
pop
dec
adc
adc
and
pop
and
add
lock
add
inc
adc
dec
or
lock
lock
mov
jl
(bad)
(bad)
(bad)
inc
mov
xor
in
push
jbe
or
inc
push
dec
mov
push
fist
and
pop
cmovae
or
dec
push
adc
jge
mov
cwde
add
js
or
mov
jle
in
jb
cs
adc
add
adc
sbb
sub
inc
push
shl
and
out
jmp
and
and
or
or
push
pop
add
loope
jbe
pop
and
arpl
or
mov
sahf
sbb
inc
int3
out
and
sub
push
mov
add
fwait
adc
xor
lock
add
fwait
mov
jno
adc
inc
push
sbb
sbb
pop
mov
and
and
mov
xor
lock
xchg
or
outs
jl
sbb
or
sub
ss
adc
and
lock
lock
push
inc
add
(bad)
rdpmc
or
xor
cmp
outs
pop
jnp
cld
aaa
js
xor
sbb
bound
cs
cmp
and
in
cwde
ins
sbb
push
pop
push
sbb
sub
ins
aad
add
or
or
rdmsr
retf
clc
sbb
adc
and
mov
and
and
clc
fcomip
inc
adc
cli
or
sbb
or
das
test
sub
push
inc
test
push
pop
mov
(bad)
jo
or
sbb
inc
xchg
adc
dec
sbb
je
arpl
jmp
push
and
pop
hlt
jmp
lock
inc
sbb
dec
imul
mov
and
sbb
and
pop
and
adc
push
sbb
adc
inc
sbb
push
jmp
cmp
je
es
pop
xchg
and
scas
inc
lock
add
sub
sub
and
cmps
or
cmp
cs
jmp
es
and
adc
retf
or
adc
in
push
not
xor
adc
ins
sbb
or
inc
jp
sbb
das
push
jle
mov
or
cmp
or
cmc
jg
pop
cwde
push
sbb
push
sbb
xchg
mov
mov
sbb
xor
sbb
mov
pop
inc
pop
and
xlat
adc
pop
or
or
pop
sub
lock
adc
add
cmp
or
in
imul
sub
add
push
push
and
and
and
sbb
or
(bad)
mov
xchg
sbb
adc
adc
stos
dec
jmp
int3
sbb
jge
mov
adc
dec
xor
push
add
sub
xor
jg
add
adc
sbb
sub
sub
push
push
adc
dec
add
dec
sub
xchg
inc
(bad)
aas
push
dec
sub
outs
push
inc
add
inc
pop
cmp
lock
dec
inc
push
xchg
pop
mov
pop
add
(bad)
je
enter
and
sbb
(bad)
fstp
pop
nop
xor
and
or
cmp
cmp
mov
nop
(bad)
(bad)
(bad)
in
ins
test
jl
push
adc
pop
mov
and
inc
and
inc
dec
or
push
sbb
fbstp
or
ins
imul
xor
cmp
daa
push
daa
and
and
push
push
pop
sbb
or
sbb
aad
mov
aaa
cmp
jge
in
sbb
es
leave
sar
xor
jne
pop
or
or
pop
inc
ins
mov
or
daa
xor
dec
or
pop
movaps
std
aaa
inc
sbb
or
or
cmp
push
or
push
or
or
cmp
outs
mov
and
xor
pop
or
pop
lock
and
inc
xor
or
pop
dec
or
ds
and
sub
or
cmp
(bad)
mov
cs
sub
pop
or
or
or
stos
jbe
mov
and
in
xchg
out
ins
lods
pop
sub
clc
sub
das
aas
cwde
jecxz
lock
inc
aaa
sbb
into
dec
lea
or
dec
dec
sub
xor
aad
xor
cmp
sub
sbb
and
or
dec
dec
jbe
push
gs
dec
and
dec
adc
xor
cwde
add
(bad)
pop
loopne
aaa
and
aaa
add
sub
xor
sub
pop
sub
pop
xchg
xor
dec
pushf
pop
xor
mov
mov
neg
push
mov
xor
ins
pop
cmp
cmp
into
in
cdq
push
adc
add
add
ins
nop
xchg
add
or
scas
sub
lock
or
sub
enter
cs
adc
les
imul
cmp
sub
xchg
mov
rol
data16
sbb
ds
cwde
sub
add
add
and
clc
stos
lock
push
adc
push
sti
sub
enter
add
pop
loop
jge
mov
xor
add
adc
push
add
xor
inc
ins
iret
lock
add
sbb
repz
sub
lods
add
loop
stos
jae
mov
pop
mov
adc
sbb
adc
rdtsc
dec
les
out
dec
adc
adc
jae
out
loope
inc
cmp
sub
(bad)
add
fistp
adc
out
pop
jbe
jnp
add
shl
or
xor
sub
xlat
(bad)
ret
push
or
addr16
fdivp
mov
jg
xchg
cmps
loope
arpl
sbb
jbe
push
inc
jg
popa
shr
xchg
mov
movs
ins
aad
sti
addr16
jbe
stc
xchg
add
popa
aad
pusha
mov
mov
cmps
sub
arpl
xor
adc
test
jg
cmps
cmp
inc
dec
xchg
cmovle
inc
mov
xchg
out
fisttp
xor
add
cwde
add
xor
add
or
sbb
add
push
sbb
and
sbb
push
adc
or
jne
add
cmp
sub
jnp
or
pop
cs
push
rcr
adc
lds
daa
jle
inc
push
sti
or
imul
cmp
jbe
ja
push
adc
(bad)
sbb
in
movs
(bad)
cvttps2pi
test
sbb
outs
bound
jnp
dec
jmp
sbb
or
mov
adc
stos
or
gs
mov
lea
mov
iret
jae
in
call
adc
adc
inc
and
nop
sbb
mov
fsub
add
stc
mov
mov
add
arpl
sub
or
loopne
(bad)
sbb
add
mov
lock
outs
cmp
cmps
lods
pop
or
sbb
stos
ins
sti
adc
cmp
inc
push
and
sbb
inc
pop
mov
sub
sbb
xor
add
sub
pop
test
xor
inc
add
push
push
adc
loopne
add
or
mov
data16
add
idiv
cdq
(bad)
sbb
push
jo
popf
add
fld
inc
pop
add
push
sti
fdiv
cmp
mov
push
div
or
aaa
dec
ins
mov
xchg
sbb
or
add
lods
mov
xor
test
arpl
mul
push
jle
call
and
add
(bad)
mov
pusha
and
cs
sar
add
into
lock
jbe
sbb
and
cld
mov
shr
jae
arpl
sahf
xchg
or
jb
ss
mov
iret
add
add
dec
xchg
lock
pop
pop
add
mov
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
or
pusha
mov
add
