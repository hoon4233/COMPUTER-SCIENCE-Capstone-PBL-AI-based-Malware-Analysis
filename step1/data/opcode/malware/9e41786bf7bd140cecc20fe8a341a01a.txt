mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
push
outs
(bad)
test
pop
dec
outs
je
addr16
and
rcr
xor
add
jns
ins
daa
push
outs
jb
add
pop
jns
inc
outs
(bad)
mov
repz
add
cwde
or
jae
jb
movs
push
sub
stc
dec
or
fs
pop
mov
or
push
ins
mov
popa
hlt
or
push
add
add
iret
imul
cwde
dec
movs
push
test
mov
call
inc
pop
push
dec
bound
arpl
push
lock
sbb
push
push
jns
movs
ins
ss
pop
cmp
or
jb
popa
arpl
cmp
cdq
int
rcr
movs
push
mov
jae
popa
je
push
add
nop
int3
add
jmp
adc
in
mov
int3
xchg
sbb
dec
fidiv
jbe
adc
push
jge
js
sbb
inc
mov
jo
xchg
cmp
test
adc
inc
cmp
jle
fdivrp
and
(bad)
js
cmp
cmp
dec
push
fs
pop
pop
cmp
jns
push
aam
push
dec
cmp
cmp
dec
inc
rol
jb
cmp
cmp
jbe
jb
sub
and
iret
in
in
sbb
adc
leave
leave
leave
in
adc
or
mov
mov
add
in
in
fsubr
in
clc
hlt
lock
int
das
(bad)
push
add
mov
inc
add
imul
mov
add
xor
ret
addr16
fmul
loopne
add
aaa
in
mov
dec
and
jb
stos
and
out
call
je
outs
outs
and
xor
or
ficomp
jb
and
imul
out
gs
push
jle
push
push
je
popa
inc
inc
gs
ins
jmp
ins
gs
add
cmpxchg
ret
push
mov
mov
mov
mov
push
dec
add
inc
or
and
sub
xor
shr
push
adc
adc
dec
sti
dec
rcl
fild
fild
add
sbb
dec
jnp
xor
cs
jp
add
sub
aas
call
sub
dec
shl
sub
in
adc
dec
xor
push
pop
xor
xor
cmp
int3
xor
mov
inc
imul
call
into
sub
add
add
neg
jns
fistp
fbstp
push
cmp
add
js
and
mov
mov
int3
mov
xor
push
adc
mov
nop
call
cmp
mov
(bad)
ja
jge
je
push
sub
retf
add
mov
mov
aas
adc
shl
xchg
sub
jne
pop
mov
and
jecxz
xchg
sub
jmp
mov
retf
adc
push
add
retf
cmps
pop
push
adc
add
out
gs
inc
pop
shl
or
sbb
loopne
into
out
xchg
or
outs
mov
fucomi
sub
cld
add
or
adc
dec
add
or
cmp
dec
pop
mov
jmp
sub
call
pxor
mov
inc
push
mov
je
int
push
lock
(bad)
fadd
int
fimul
enter
mov
sbb
loop
mov
fucomip
add
mov
mov
not
mov
mov
sub
sbb
xor
mov
aaa
or
nop
cmp
jmp
mov
(bad)
pusha
mov
frstor
out
in
mov
add
int
or
test
push
xor
jle
inc
jle
push
push
mov
lea
mov
push
mov
adc
and
xchg
push
cld
mov
je
sti
mov
or
ja
stos
cld
jle
pushf
pop
ins
mov
or
jb
add
mov
pop
pop
pop
clc
mov
mov
sub
jae
(bad)
neg
pop
out
jle
adc
mov
push
and
or
test
jne
in
cmps
inc
mov
outs
loop
jns
add
(bad)
jmp
or
shr
or
mov
mov
and
push
push
lea
or
push
mov
jo
push
jne
push
push
mov
cmp
cli
(bad)
out
jbe
sub
add
jmp
test
jne
lods
(bad)
fimul
and
fisubr
idiv
retf
les
inc
loopne
repnz
sub
pusha
fcmovnbe
or
fadd
fidivr
loope
pop
scas
fdivr
shl
add
cmp
jbe
jmp
pusha
lock
adc
xchg
xor
push
mov
cmp
outs
pop
cmp
adc
test
push
cmp
jae
(bad)
fnstsw
int3
mov
add
dec
and
jae
push
jmp
test
repz
lods
iret
or
aaa
sbb
sub
pop
xor
test
add
push
retf
mov
dec
pusha
or
lds
or
outs
imul
cmp
jbe
ret
push
mov
mov
or
xchg
mov
mov
ins
mov
repz
add
das
dec
(bad)
neg
es
and
mov
cmp
and
shl
add
dec
ja
pop
test
je
rcl
lds
rcr
(bad)
ss
mov
inc
or
scas
scas
or
and
idiv
je
or
sub
and
add
movzx
add
cmp
ja
inc
or
jbe
mov
cmp
add
adc
add
mov
std
pusha
and
and
xchg
xchg
popa
mov
pause
jns
js
loopne
aas
je
lods
aad
ret
in
jecxz
inc
and
xor
je
xchg
inc
or
outs
rol
mov
bsf
lea
push
scas
or
mov
leave
rcl
add
cld
mov
cmp
add
push
jns
cld
push
test
add
cmp
jne
mov
test
add
mov
mov
outs
fdivrp
pusha
or
ins
mov
dec
jnp
sub
lea
xchg
and
push
or
ja
sbb
mov
jg
ror
mov
sub
sub
jl
jnp
cmp
and
inc
sbb
mov
mov
mov
fs
cld
test
lds
mov
mov
inc
and
icebp
pop
mov
adc
push
or
imul
iret
mov
addr16
push
xor
cmp
mov
(bad)
(bad)
enter
add
mov
lea
loopne
inc
paddb
lea
or
shr
mov
push
je
pusha
fbstp
ror
jmp
mov
aas
fstp
ror
mov
and
fnstenv
jo
or
adc
fdiv
push
loopne
clc
sub
mov
jmp
mov
dec
mov
test
pop
or
inc
les
rol
cmp
cmp
mov
push
ror
pop
xor
jb
into
sbb
push
xchg
or
test
fisttp
jns
or
ret
mov
test
rol
cld
iret
xchg
sbb
mov
jne
sub
loop
jge
je
pop
ror
xchg
sub
xchg
dec
pop
xor
push
xor
adc
aad
mov
adc
cmp
jne
and
enter
push
mov
iret
mov
loop
cwde
cmps
(bad)
(bad)
xchg
scas
jmp
mov
pop
leave
outs
xor
xchg
pop
sbb
jmp
aaa
inc
or
add
and
add
or
loop
fmul
scas
test
sub
xor
test
jne
xchg
loope
cmp
inc
fiadd
xor
ret
xchg
xchg
mov
xlat
mov
mov
je
add
cmp
das
ret
pop
dec
clc
sub
sub
mov
xor
sub
popa
mov
in
mov
lahf
mov
stos
fld
add
fmul
outs
lea
cld
add
ins
push
add
loop
shr
dec
rol
shr
in
or
pop
ja
cmp
jb
sbb
jp
retf
jb
mov
ret
cmp
sbb
mov
jg
or
rcr
dec
or
xlat
loop
pop
pop
(bad)
(bad)
rol
add
hlt
sub
jbe
clc
iret
mov
call
js
mov
shl
cmp
mov
mov
add
jecxz
cmp
push
pop
loope
stos
xchg
cvttps2pi
cmp
jb
sbb
jmp
jl
pop
mov
and
stos
jmp
add
xor
cmp
les
push
jge
(bad)
mov
push
cmp
mov
(bad)
and
or
mov
push
mov
add
or
push
jmp
data16
mov
rol
xlat
idiv
lds
add
add
sahf
sub
sbb
push
inc
mov
out
add
sbb
lock
call
imul
add
scas
loope
cmp
cmp
dec
fistp
iret
fs
pusha
pusha
call
psubq
iret
ja
cmp
or
pop
mov
call
mov
loopne
jmp
rol
add
pop
add
xor
and
push
add
push
ret
push
add
jb
lea
pop
mov
mov
push
pop
add
and
fisttp
outs
jae
pop
ret
pop
inc
push
push
xor
jecxz
loop
cmp
je
xor
cmp
and
pop
push
push
cmc
popf
fsubp
cld
(bad)
(bad)
lea
or
jle
std
jg
adc
fcmovnu
out
fst
add
js
or
sar
mov
imul
xor
mov
fadd
ror
hlt
aas
sbb
rol
(bad)
pop
std
je
mov
adc
cli
and
rcl
adc
ins
cmp
mov
(bad)
(bad)
(bad)
mov
cmp
jne
mov
cmp
jbe
mov
mov
sub
sbb
jecxz
scas
inc
add
fmul
sbb
dec
mov
cmps
push
mov
mov
inc
pop
jo
mul
fs
mov
loop
pop
rcr
mov
add
enter
mov
fadd
stc
rcr
inc
aas
wbinvd
shr
xchg
popa
push
cmp
dec
aaa
sbb
in
mov
inc
cs
enter
retf
cmp
jg
xchg
push
es
aas
adc
ret
xor
inc
add
icebp
mov
pop
(bad)
xor
inc
ds
mov
add
addr16
add
loop
in
push
inc
cli
push
push
ins
js
arpl
fdivr
shl
pop
(bad)
fistp
or
push
lock
push
jae
ss
mov
push
jge
sbb
add
push
mov
inc
sbb
add
push
out
mov
js
cs
push
test
je
adc
add
mov
pop
pop
sub
sahf
push
nop
test
cli
loop
call
data16
call
push
data16
mov
fdivr
fcom
(bad)
sti
sbb
sbb
test
daa
dec
mov
sti
out
adc
lea
mov
and
sbb
sti
push
dec
lock
rcr
pop
test
and
shl
lods
dec
fistp
pop
mov
dec
scas
imul
xchg
outs
push
mov
mov
add
add
pop
mov
setne
xchg
ret
mov
sub
aas
inc
sbb
adc
pop
test
adc
add
jp
loop
or
pusha
out
jbe
lock
push
cmp
dec
pusha
jl
inc
pop
mov
cmp
call
adc
mov
and
aaa
sbb
or
jne
mov
js
addr16
(bad)
cld
mov
arpl
fadd
add
jg
lea
lea
(bad)
call
icebp
in
adc
add
jmp
mov
mov
cmp
ror
mov
dec
sti
mov
adc
call
add
mov
pop
mov
or
cmp
mov
xor
int3
or
dec
or
mov
mov
inc
out
adc
test
jle
sbb
cmp
mov
sub
cmp
jb
jo
jp
add
dec
loopne
(bad)
adc
xchg
aaa
push
sub
cli
cmp
je
or
inc
cmp
jg
mov
mov
das
push
(bad)
inc
fiadd
add
sbb
sbb
in
xchg
aam
scas
lock
mov
push
add
fstp
jne
data16
test
jl
lea
and
nop
lock
pop
inc
add
xchg
(bad)
jb
clc
push
(bad)
aam
test
call
push
lock
jb
call
cmps
cmp
les
add
or
in
(bad)
loope
rcr
mov
and
fnstcw
mov
and
(bad)
nop
mov
(bad)
int3
loope
xchg
cmp
xchg
and
and
mov
jg
test
jle
ds
cmp
ss
aaa
adc
cmp
es
in
xchg
mov
mov
xchg
sti
mov
je
dec
jl
cmp
sub
xchg
neg
xchg
ins
clc
std
(bad)
mov
sub
xor
rcl
out
ffree
test
cmp
and
fmul
icebp
pushf
fld
(bad)
sub
movs
loope
add
in
scas
mov
mov
(bad)
mov
gs
xchg
pushf
cmp
xchg
add
sti
jne
mov
icebp
mov
add
mov
inc
push
or
jge
stc
cmp
ins
and
ror
add
rcl
in
or
jmp
fs
das
cmp
adc
xchg
je
jmp
mov
jmp
mov
push
fwait
xchg
xchg
movzx
add
js
loop
inc
push
pop
dec
pusha
or
mov
inc
push
dec
and
mov
mov
pop
sbb
push
sbb
jo
cmp
cmp
imul
jb
inc
js
outs
js
out
jno
mov
mov
pextrw
and
ja
jmp
dec
not
pushf
dec
jne
mov
adc
mov
sub
push
lock
stos
mov
add
push
ss
outs
and
gs
push
sar
gs
ins
outs
jb
pop
popa
mov
and
jae
outs
arpl
jl
cs
pop
mov
fs
popa
ins
ins
and
jnp
pusha
scas
dec
imul
cmp
jg
add
imul
outs
add
sti
in
sbb
xchg
jp
mov
cdq
jbe
pmaxub
ins
nop
outs
and
addr16
popa
mov
dec
cli
push
push
xor
xor
cli
iret
pushfw
mov
test
jne
arpl
imul
repnz
out
add
cmp
jbe
mov
mov
adc
cmc
mov
add
cmp
jne
es
jbe
add
xchg
mov
jmp
add
mov
or
jbe
mov
mov
rol
and
clc
lea
add
add
mov
shr
cmp
jbe
aad
(bad)
aas
ja
mov
shl
mov
shl
add
mov
sub
shl
lea
add
mov
xor
jae
mov
ja
push
mov
cmp
sti
(bad)
xlat
mov
xor
div
imul
mov
sub
les
or
(bad)
in
dec
inc
xor
hlt
sbb
mov
mov
in
or
mov
or
repz
cmp
pop
adc
jg
push
push
mov
add
adc
push
rcl
std
cmp
jne
mov
mov
dec
adc
add
inc
or
jo
inc
loop
or
and
stos
sbb
and
ror
mov
xchg
inc
mov
fistp
fisubr
fdivrp
mov
mov
or
adc
(bad)
hlt
xchg
dec
sti
xchg
pop
push
mov
sub
sbb
mov
sbb
mov
push
add
add
call
and
ja
add
ret
mov
add
ret
cs
cmp
rcl
inc
xchg
xor
mov
test
je
test
je
ins
and
in
push
mov
inc
xor
or
mov
jae
jmp
bound
out
int
rcr
arpl
ss
data16
sbb
pop
lds
adc
adc
fmulp
enter
or
dec
jl
dec
push
enter
mov
jo
cmp
fadd
scas
ins
sahf
or
mov
dec
dec
sbb
(bad)
jne
lahf
cwde
push
jmp
cmp
lahf
frstor
ja
movzx
add
inc
mov
pop
inc
pop
hlt
push
add
scas
call
outs
xor
in
push
push
push
xor
pop
and
pop
jne
mov
out
push
mov
mov
mov
jl
push
ret
sbb
js
js
mov
ret
(bad)
pop
or
je
jb
sbb
ret
sub
inc
hlt
outs
mov
jg
adc
sar
(bad)
mov
inc
rep
jmp
mov
jmp
iret
cmp
in
mov
jmp
mov
test
sahf
mov
popa
or
mov
(bad)
fistp
cmp
je
cmp
ja
sub
jg
jmp
push
outs
iret
outs
sub
or
pusha
push
push
add
adc
push
test
sahf
out
sahf
mov
jmp
hlt
push
mov
or
adc
movs
sti
push
neg
and
adc
jnp
fwait
sbb
cmp
jle
or
shr
retf
pop
sbb
lea
jbe
adc
add
clc
sub
pop
in
xchg
pusha
inc
cmc
pop
push
or
cs
or
or
push
mov
adc
mov
add
add
mov
test
cmp
push
add
ret
mov
out
out
push
cmc
jmp
push
aaa
mov
mov
or
jbe
and
mov
jnp
or
xor
mov
jmp
sub
fistp
adc
sub
pop
xlat
ss
call
adc
push
xlat
or
out
mov
aad
jb
sti
in
dec
push
xor
jmp
jne
imul
pop
in
or
jbe
out
add
inc
sbb
repz
frstor
arpl
fcomp
loope
lock
pop
inc
add
loope
cld
push
xor
push
push
mov
add
into
jl
jnp
lea
sahf
and
adc
in
div
cmp
add
jmp
pop
pop
pop
pop
adc
jo
add
mov
ret
stos
cmp
das
fcomp
fdivr
clc
in
(bad)
xlat
movs
fisubr
inc
test
jne
push
mov
lock
ins
xchg
mov
aas
inc
sbb
push
std
dec
and
clc
outs
or
sbb
mov
jmp
sbb
xchg
pusha
mov
into
mov
or
mov
jle
pop
fild
mov
(bad)
xor
imul
ja
cld
adc
cmp
jb
cmp
ja
sub
cmp
loop
sub
test
cmp
pop
(bad)
fld
(bad)
in
add
frndint
out
stos
and
fwait
or
ins
frndint
fldcw
ins
dec
loope
push
add
jmp
dec
or
in
dec
pop
fistp
or
push
add
movs
jmp
imul
sub
(bad)
xchg
xchg
inc
ins
sub
cmp
push
ret
scas
aad
or
data16
and
sub
hlt
sub
jae
push
dec
add
clc
sub
cmp
mov
iret
sbb
mov
mov
std
add
mov
sbb
(bad)
push
mov
and
mov
ficomp
div
or
lea
push
mov
push
adc
pop
pop
ins
add
jo
push
loopne
ret
cmp
jne
mov
in
push
or
push
sub
pop
pop
out
es
push
add
pop
sub
call
or
mov
lea
sete
xor
in
mov
fidiv
inc
jle
and
or
push
adc
aas
dec
push
sub
dec
je
add
loop
(bad)
xchg
daa
dec
xor
jle
(bad)
aam
cmp
daa
das
inc
inc
cmp
mov
mov
ins
out
or
movs
and
ror
mov
push
or
je
adc
inc
dec
push
sbb
cmp
mov
jle
mov
sti
fisubr
dec
dec
push
inc
pop
inc
inc
out
sub
scas
loopne
add
xchg
push
aaa
mov
mov
jnp
test
inc
jo
dec
out
pop
add
jae
cmp
push
inc
inc
jmp
push
xchg
sub
jp
sar
out
dec
jne
jmp
lea
popa
shl
lods
push
push
push
rcl
ror
inc
add
cmp
fist
cmc
movs
pusha
dec
mov
shl
dec
pop
mov
shl
push
pop
clc
push
int3
stos
mov
xor
imul
jmp
and
or
dec
add
ret
adc
add
push
push
fadd
push
push
jae
push
mov
addr16
mov
pop
push
das
mov
mov
dec
add
pusha
cmovns
jmp
sbb
sbb
fucomi
pop
cmp
(bad)
rol
xlat
and
and
push
sbb
daa
aam
and
in
mov
jne
push
sahf
icebp
push
mov
jl
push
lock
add
sar
ret
js
cld
imul
push
push
mov
call
lock
inc
mov
jmp
mov
cld
fist
sub
cli
or
push
push
mov
jmp
cmp
je
arpl
pop
call
clc
cmps
fstp
push
sub
sbb
cmp
bound
push
sub
add
movs
push
sbb
inc
out
neg
xor
mov
ja
and
ret
adc
call
rol
mov
adc
sbb
add
jl
adc
inc
mov
pop
xor
scas
(bad)
push
hlt
(bad)
(bad)
dec
ror
jb
cmp
ja
mov
mov
mov
inc
add
rep
mov
mov
sub
jbe
mov
jmp
fimul
inc
xchg
out
idiv
cmp
jbe
mov
mov
inc
inc
sub
leave
xor
xchg
(bad)
lods
push
xchg
inc
inc
push
ja
add
push
stos
call
div
push
mov
cmp
jne
dec
je
mov
aad
out
mov
sbb
add
add
loop
push
adc
repz
jmp
pop
and
je
mov
cmp
jne
dec
je
mov
cmp
jne
add
dec
or
rcr
add
adc
cmp
jne
shr
shr
sbb
ds
cmps
pop
push
mov
shr
or
push
movs
jns
pop
cmp
fistp
adc
rol
pop
and
mov
cmp
rep
call
and
add
sbb
jecxz
push
das
and
js
sbb
adc
push
adc
mov
test
push
add
mov
cmp
jne
mov
ret
sub
enter
sbb
dec
sahf
outs
cmp
mov
jl
cdq
adc
push
add
(bad)
cmp
fst
fst
mov
and
fdivr
sub
shl
fisubr
data16
add
push
mov
addr16
fistp
data16
cmp
adc
mov
es
xchg
cmp
repz
push
adc
out
cmp
repz
or
sti
enter
push
or
ret
daa
push
jmp
in
js
daa
xor
dec
shl
jnp
dec
xchg
aam
mov
jg
push
pop
je
in
test
pop
je
xor
sbb
push
loope
mov
je
inc
mov
aam
fldenv
ret
and
sbb
mov
pop
xor
sbb
inc
inc
int
inc
mov
pop
mov
mov
(bad)
(bad)
loopne
push
push
pop
mov
adc
mov
out
loopne
adc
rol
push
adc
jl
mov
inc
cmp
push
cmp
je
cmp
aaa
mov
dec
jg
jmp
into
inc
bnd
cmp
jne
dec
cs
or
sbb
mov
outs
sahf
shr
mov
sub
dec
xor
mov
push
inc
ds
pop
adc
in
jbe
es
mov
leave
sub
add
mov
mov
stc
mov
inc
nop
cmp
jne
add
mov
into
mov
cmp
fiadd
xchg
adc
cwde
pop
popa
je
add
xchg
(bad)
aam
lahf
fiadd
jne
daa
or
push
jo
dec
xlat
daa
jns
mov
scas
call
jmp
mov
and
mov
mov
jnp
adc
ja
out
mov
sahf
scas
jno
loope
mov
push
and
cmp
fisttp
pop
add
mov
hlt
aad
jo
mov
pop
mov
and
pop
sub
inc
xchg
mov
inc
or
pop
pushf
sbb
sti
xchg
add
xor
fld
fwait
loopne
inc
jmp
mov
add
fnstcw
push
cwde
or
clc
add
mov
jl
sub
fs
and
add
shl
inc
sbb
ret
jl
inc
or
loop
xor
icebp
jp
add
jmp
scas
jo
ins
cld
fstp
(bad)
or
push
inc
cmp
je
mov
sti
sub
je
and
aaa
aaa
push
js
pop
pop
je
xor
dec
and
mul
je
jmp
or
(bad)
aaa
and
ja
cmp
ja
lea
out
add
push
fcomip
in
lahf
out
dec
je
sar
jmp
inc
sub
fdivr
js
push
jle
dec
pop
sub
jmp
inc
inc
jmp
mov
(bad)
je
and
xchg
and
xor
(bad)
jle
ja
add
scas
leave
shl
stos
aad
or
pop
xor
mov
pop
jo
or
call
jb
mov
dec
pop
push
push
movs
aas
mov
clc
pop
das
xchg
clc
or
xor
js
in
stos
outs
mov
or
out
retf
add
push
idiv
stos
mov
add
pop
jmp
xchg
adc
mov
xor
inc
mov
inc
jle
sub
fs
stos
je
fcom
jg
push
ret
and
int3
mov
jg
loopne
xor
cs
(bad)
pop
sbb
hlt
inc
and
or
add
cdq
fucomp
adc
sub
pop
sub
cmp
(bad)
pop
ja
xor
mov
push
cmp
sbb
jno
mov
sbb
repz
sub
mov
pop
retf
push
fsub
mov
mov
shr
add
lea
dec
rcr
(bad)
lods
push
fild
(bad)
dec
pusha
fmulp
shl
pcmpeqb
xchg
in
icebp
enter
je
sahf
and
jmp
sar
push
jmp
push
cdq
xchg
xor
sbb
jmp
adc
fstp
fld
fldz
bound
(bad)
shl
aas
in
dec
mov
cli
or
pushf
or
ret
mov
adc
inc
repnz
sbb
imul
xchg
jg
stc
add
mov
enter
(bad)
es
test
out
sub
pop
iret
scas
cld
retf
add
leave
sbb
mov
iret
(bad)
cld
jbe
imul
cmp
mov
(bad)
mov
bound
aaa
jmp
fild
xlat
fadd
outs
xor
xchg
push
or
(bad)
mov
test
into
sbb
ror
mov
push
pop
test
enter
(bad)
call
push
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
or
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
(bad)
push
test
lds
iret
dec
js
inc
mov
stos
mov
cmp
(bad)
(bad)
(bad)
jmp
xchg
test
stos
pop
out
sub
imul
(bad)
div
jl
xor
cmp
(bad)
jmp
(bad)
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
sar
(bad)
jmp
int3
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
(bad)
(bad)
(bad)
jmp
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmps
scas
(bad)
(bad)
(bad)
jmp
pop
or
add
cmp
xor
in
cmp
call
pop
cmps
lock
mov
popa
mov
and
addr16
repz
mov
mov
outs
fwait
xchg
and
and
outs
bound
xor
jmp
gs
fild
or
xor
shl
push
pop
adc
rcr
repz
shr
ins
mov
fst
mov
jl
inc
clc
out
jne
rol
xchg
loopne
push
mov
dec
out
inc
xor
repz
mov
data16
add
aad
repz
mov
sbb
shr
fucomip
jecxz
jp
int
and
pop
aas
or
cld
aas
add
inc
push
push
inc
push
inc
pop
(bad)
dec
mov
inc
gs
jo
imul
push
dec
popa
jae
xchg
ins
jne
fninit
fwait
std
or
push
(bad)
mov
dec
mov
or
retf
das
xlat
sbb
add
mov
xor
mov
inc
and
or
or
test
sbb
or
cld
ret
inc
and
add
lea
sbb
bnd
test
cmp
mov
loope
arpl
test
sete
xor
inc
ret
loopne
js
ja
inc
fadd
adc
sti
xchg
je
std
ss
aaa
mov
add
pop
aaa
mov
cmp
sti
loop
sbb
test
inc
inc
ja
adc
movups
fs
pop
pop
cs
cmp
xor
test
data16
pop
mov
or
push
cld
(bad)
jg
popa
das
jo
mov
xor
push
shr
dec
rep
pop
cmp
rep
mov
mov
sub
pop
fdiv
fwait
add
in
cmp
je
sti
sbb
sbb
sahf
push
mov
mov
push
(bad)
in
(bad)
ja
dec
jne
jne
iret
lods
(bad)
mov
mov
push
pusha
or
jbe
pop
push
test
fdiv
adc
sbb
inc
xchg
cmp
test
call
shufps
and
loope
loope
adc
shl
or
and
pop
pop
push
jmp
out
pop
clc
mov
mov
clc
or
inc
test
xchg
movs
xor
add
mov
shl
call
call
lea
lock
push
inc
(bad)
scas
jb
cs
jns
inc
clc
xor
or
add
mov
in
pop
mov
cmp
jne
jb
cmp
jne
push
or
jne
or
push
inc
inc
and
xchg
lds
jnp
not
and
mov
idiv
js
inc
jl
das
inc
mov
iret
adc
outs
popf
ror
mov
leave
jne
mov
in
mov
xchg
jmp
retf
test
test
add
call
clc
scas
je
pop
in
neg
pop
add
sub
mov
pop
sbb
push
xchg
add
sbb
jmp
pop
mov
push
mov
xor
mov
mov
jmp
out
les
dec
or
pop
push
data16
mov
pop
cmp
inc
push
stos
add
mov
pop
mov
test
scas
jb
ds
mov
rcr
dec
sti
xchg
adc
mov
cmp
sbb
add
dec
(bad)
(bad)
out
fnstenv
icebp
fucomi
sbb
add
sbb
and
jne
dec
jmp
inc
add
lahf
push
popf
enter
in
push
sbb
pop
sti
in
and
pop
jmp
push
xor
call
ja
push
pop
add
mov
jl
push
lods
(bad)
out
cli
hlt
xor
lea
mov
mov
mov
mov
call
cmp
or
cmp
dec
jmp
jbe
mov
inc
or
adc
call
adc
push
clc
ret
pop
mov
ror
and
inc
in
jae
jmp
mov
push
sub
mov
idiv
push
ja
pop
jo
mov
add
xchg
dec
sub
dec
(bad)
in
push
call
mov
aaa
push
push
pusha
push
xor
test
pop
dec
mov
repnz
add
add
mov
sub
or
xlat
std
jg
test
push
and
sbb
jmp
(bad)
mov
movsx
inc
inc
jmp
add
mov
arpl
jecxz
fld
adc
pusha
fsub
nop
loop
fdivr
adc
(bad)
dec
fwait
(bad)
jecxz
pop
(bad)
sub
out
les
jne
fiadd
mov
pop
je
inc
rcl
je
add
shl
out
push
mov
dec
add
je
dec
sti
xchg
jbe
test
lea
add
add
fwait
and
mov
xor
arpl
jne
jbe
adc
mov
cli
push
jns
sbb
fdiv
dec
add
jbe
or
cmp
sbb
push
sub
push
sbb
sub
ja
outs
pusha
mov
mov
xor
add
pop
xchg
jmp
and
mov
mov
mov
cmp
leave
xor
outs
je
dec
or
fisubr
push
add
cmp
mov
leave
jle
std
push
cli
pop
add
lds
das
and
clc
repnz
fdivr
dec
mov
cmp
mov
outs
sti
dec
aas
xchg
or
sub
mov
push
rcl
dec
jne
hlt
rcl
mov
jmp
in
js
sbb
push
adc
lahf
adc
adc
ins
or
das
push
seto
add
inc
mov
or
push
inc
cmp
add
jbe
cmp
fs
nop
popa
rcl
sub
aaa
add
dec
add
aad
je
push
sar
cmp
stos
lods
adc
(bad)
jecxz
and
mov
dec
in
push
cmp
or
dec
test
in
loopne
out
(bad)
adc
out
mov
or
ror
cld
jo
fdiv
pop
push
push
push
push
push
mov
mov
leave
mov
pop
push
xor
mov
dec
sahf
aas
ror
sbb
or
pusha
add
sbb
mov
into
cmp
std
xchg
inc
adc
adc
cmps
cmc
lea
and
mov
cld
pop
(bad)
lock
ret
xor
rol
push
pop
add
rcl
inc
xchg
outs
ja
push
jmp
jg
je
cmp
(bad)
adc
push
sub
sti
mov
pusha
add
add
je
jmp
cmp
push
mov
xchg
cs
adc
jmp
sub
call
dec
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
xlat
jmp
mov
jmp
mov
jmp
mov
jmp
mov
cli
retf
ja
(bad)
dec
mov
push
or
jne
lods
scas
push
xchg
mov
fisttp
xlat
sub
mov
je
push
mov
dec
or
pop
clc
cmp
loopne
lahf
icebp
push
outs
inc
sbb
fld
ins
(bad)
cli
sub
ret
add
popf
inc
(bad)
cmp
or
fdiv
cmp
(bad)
pop
cs
or
fidiv
inc
mov
add
mov
enter
ror
pushf
ret
or
mov
out
sbb
enter
repnz
push
add
and
lock
fbld
sbb
jle
js
sbb
push
test
jle
dec
mov
ror
pop
js
fild
cmp
sub
adc
xchg
jmp
mov
mov
or
dec
inc
sub
cld
nop
mov
outs
retf
sti
jle
in
in
sub
fadd
iret
cmp
jg
lea
or
ins
out
jns
dec
jle
sbb
xor
mov
fild
mov
(bad)
mov
jbe
jo
dec
xchg
mov
lahf
cli
(bad)
sbb
mov
mov
add
gs
pop
fild
jmp
pop
push
dec
mov
inc
or
in
hlt
inc
fistp
mov
mov
mov
out
adc
xchg
jb
idiv
add
mov
jle
and
and
(bad)
dec
mov
cld
jbe
xchg
add
loopne
inc
sub
pop
mov
mov
push
scas
sbb
fisttp
neg
sbb
inc
mov
mov
adc
ja
add
mov
mov
push
xchg
push
leave
out
xchg
sub
mov
data16
(bad)
mov
adc
scas
push
hlt
or
cli
or
shl
jns
push
push
pop
inc
xchg
inc
ror
pop
ret
inc
xor
scas
mov
push
movs
jb
imul
leave
cmp
add
pop
sbb
gs
jle
fidivr
push
es
mov
pop
out
sbb
icebp
cmp
lahf
add
cs
fs
lock
pop
call
add
add
jno
xor
xor
jnp
sahf
sbb
cmp
scas
js
cwde
mov
jne
cmp
je
loopne
add
sbb
loopne
inc
in
add
pushf
out
adc
inc
enter
lock
inc
adc
scas
jecxz
add
sti
mov
mov
(bad)
fcmovnb
out
mov
pop
out
jmp
leave
inc
shr
stos
push
cmps
and
push
push
push
sbb
xchg
retf
pop
es
or
pop
xlat
fst
or
push
push
jl
cmp
mov
or
cmp
push
hlt
lea
sbb
leave
jle
rol
push
push
or
push
mov
sub
ds
add
add
mov
sbb
add
mov
je
rol
mov
dec
clc
dec
jl
lock
lds
adc
pop
in
jb
out
mov
push
sbb
add
or
add
sub
dec
jne
push
dec
lods
aam
fbld
inc
jg
fadd
lock
pop
push
dec
and
add
pop
pusha
pop
xor
ins
xchg
adc
xchg
or
out
pop
ss
jle
push
add
stos
(bad)
push
inc
pop
mov
rcl
ror
cmp
inc
clc
mov
push
xchg
mov
das
cmp
hlt
rcr
push
or
call
mov
xor
jb
push
jnp
(bad)
in
push
push
cmp
add
les
inc
lahf
add
push
(bad)
jmp
lea
cmp
and
jge
push
mov
loop
dec
iret
inc
dec
(bad)
jl
(bad)
sti
iret
ret
(bad)
mov
movs
sub
fld
fistp
cmps
faddp
ror
push
call
pop
jge
xor
add
addr16
inc
add
push
nop
inc
mov
je
aam
dec
add
or
je
add
in
add
xor
mov
pop
sub
jmp
add
sub
and
pop
lods
fnstsw
je
push
addr16
in
add
jae
ja
mov
inc
xchg
pop
or
xchg
push
push
stos
repnz
ins
(bad)
add
pop
add
pop
pop
xor
pop
(bad)
sbb
jg
add
cld
cmps
push
pop
mov
inc
js
xchg
sbb
cmp
jl
(bad)
and
rcl
pushf
movs
test
pop
inc
(bad)
lods
mov
into
je
jns
or
adc
cli
jo
cmp
mov
or
dec
sub
es
jae
jo
sahf
sub
lock
out
shl
adc
adc
or
inc
cmp
push
xchg
inc
xor
mov
cld
add
jo
cmp
cmps
cmp
(bad)
or
cli
aad
add
push
sbb
push
rcr
dec
clc
pop
jmp
fist
mov
push
push
push
out
xchg
adc
or
ins
mov
mov
dec
jmp
sub
add
jo
cmp
xchg
push
dec
jne
mov
neg
dec
lock
in
ja
popf
fisubr
add
dec
jmp
xor
inc
pushf
rcl
push
call
add
xchg
pop
popa
dec
jne
sahf
fmul
xor
loopne
dec
pop
xor
lea
(bad)
fcomp
and
out
xor
and
jne
fcomp
sub
jb
outs
jg
adc
and
sub
mov
xor
lods
pop
sbb
enter
fild
jmp
add
jns
mov
cmp
pop
and
or
mov
cmp
outs
push
push
mov
xchg
repnz
clc
inc
test
scas
cmp
jl
add
adc
sub
xchg
sbb
adc
pop
adc
dec
inc
retf
shl
mov
jg
dec
in
inc
nop
mov
dec
sbb
fidivr
sub
dec
sbb
jg
(bad)
dec
cmc
mov
adc
shr
in
sub
jmp
movs
pop
push
jae
mov
xor
adc
jl
int3
jge
mov
ss
loopne
dec
sar
add
lea
inc
dec
sub
cmp
repz
push
or
xchg
jbe
mov
lods
cmp
adc
imul
add
xor
pop
cmp
fimul
adc
lock
mov
add
mov
push
mov
cmps
xor
cmp
clc
rcr
enter
cld
fdivr
fidivr
cmp
dec
or
dec
add
add
mov
fsubr
fild
fisttp
scas
push
jne
mov
or
inc
dec
fdivr
xlat
mov
or
or
add
xor
and
add
jne
in
ret
(bad)
shr
mov
sbb
les
and
inc
dec
in
mov
push
xor
and
xor
test
pop
or
daa
and
xor
mov
xor
xor
jne
pusha
or
jmp
add
stos
push
icebp
arpl
mov
dec
fidiv
add
clc
scas
sbb
push
mov
stos
loopne
xor
cs
(bad)
push
fild
fcmovnu
jmp
test
arpl
out
jne
add
push
cmp
xor
clc
jb
js
leave
mov
cmps
sahf
retf
xor
test
dec
(bad)
xor
mov
add
fdivr
lea
or
adc
lock
add
ror
push
jo
jg
push
scas
pusha
lods
in
push
sub
or
xor
es
add
call
jp
mov
imul
jge
sub
sbb
aas
sub
dec
and
pop
pop
ret
mov
jmp
mov
xchg
or
sti
ins
loopne
adc
cmp
or
or
dec
push
aaa
enter
fwait
(bad)
pop
push
mov
ret
daa
add
xchg
push
dec
mov
ja
jp
mov
inc
xor
pusha
or
push
ret
inc
cld
shr
pop
mov
jb
push
call
and
in
test
fwait
add
cmps
pop
add
inc
and
(bad)
jmp
cmps
or
pop
das
xchg
jo
inc
or
adc
imul
outs
stc
std
jg
mov
cmp
jge
pop
dec
cmp
imul
push
or
cld
call
or
ret
cmp
push
ja
(bad)
pop
or
rol
xchg
dec
or
ret
xlat
std
call
cdq
dec
cld
jnp
cmp
jl
stos
cmp
jle
cwde
sahf
std
(bad)
mov
add
xchg
adc
jo
jg
mov
lea
or
add
mov
iret
push
adc
jg
adc
push
pop
(bad)
mov
aaa
push
ins
mov
push
add
(bad)
and
xchg
or
lock
cmp
je
cmp
mov
je
mov
push
lea
bound
cmps
mov
clc
jmp
adc
add
jg
call
xor
aad
push
cs
adc
pop
cs
cs
adc
cmp
xchg
stc
into
out
pop
jmp
cmp
mov
sub
add
iret
pop
rcr
(bad)
xlat
adc
pop
pop
push
popf
pop
ret
adc
cmp
adc
sahf
out
push
mov
jbe
adc
mov
add
lahf
out
push
into
mov
jg
sub
and
loopne
push
fcomi
cmps
call
jmp
es
push
pop
push
dec
fcom
repz
cmp
xchg
or
inc
push
test
dec
mov
add
test
outs
into
int3
sbb
and
icebp
jmp
fidiv
mov
add
jmp
adc
xor
outs
inc
ins
clc
inc
ss
add
cld
cmp
adc
push
lock
jle
ret
bound
inc
add
outs
outs
or
or
je
or
dec
repz
outs
outs
or
jo
or
mov
pop
xor
mov
fs
jb
mov
push
jmp
and
ins
lea
in
mov
dec
mov
push
or
and
mov
fsubrp
cmp
add
out
add
mov
and
ds
add
ret
and
in
punpckhbw
cmp
test
pop
ror
sbb
jmp
pop
cmps
sub
adc
paddsw
popa
inc
push
mov
imul
test
pop
push
repnz
mov
push
or
dec
ror
sub
std
adc
sub
mov
cmp
cmp
or
sbb
push
inc
pop
add
inc
call
mov
mov
je
pushf
cdq
shr
add
je
cmp
mov
pusha
and
ret
jae
adc
popa
push
sub
int3
xchg
in
pop
jg
pop
push
pop
cmp
xor
arpl
xchg
xchg
xchg
push
xchg
out
inc
cmp
jne
mov
cmp
push
xor
push
sbb
or
fld
mov
test
stc
mov
sub
or
xchg
mov
aaa
cli
retfw
in
mul
mov
loop
sti
fdivrp
fs
add
push
adc
pop
pop
ret
test
ja
adc
outs
inc
sar
xor
xor
sub
sbb
sar
(bad)
xor
xor
sub
sbb
jne
push
jbe
idiv
fidiv
mov
xchg
add
jmp
(bad)
or
mov
fstp
pushf
sub
jmp
mov
clc
lods
sti
add
shl
(bad)
push
jbe
and
sub
sub
add
adc
test
rol
sub
pusha
or
lock
cmp
(bad)
pop
or
push
or
loop
pop
das
push
sub
push
pop
es
jmp
(bad)
fadd
inc
sbb
(bad)
out
sub
inc
jmp
cmp
jne
mov
inc
and
sub
and
cmp
je
sub
jbe
fidiv
cs
and
mov
dec
mov
add
sub
jb
add
sub
jb
add
pop
(bad)
jle
or
jmp
xor
sub
jmp
getsec
jmp
push
cmp
push
dec
js
push
jg
and
jl
and
add
xor
shl
cs
cdq
inc
cli
push
shld
add
inc
imul
cmps
mov
inc
xor
enter
mov
jns
sbb
mov
xchg
rol
test
push
pop
ds
mov
pop
adc
sbb
jnp
sub
dec
inc
int3
jne
adc
rol
iret
or
and
jg
hlt
or
push
and
repz
ds
rol
or
jmp
and
data16
mov
jmp
or
std
pop
setb
jmp
setl
cmp
je
dec
int
pop
cld
push
and
fdiv
jmp
das
pop
adc
adc
push
mov
daa
push
push
mov
dec
xchg
inc
jle
dec
or
mov
add
cmp
scas
pop
clc
cmp
pop
mov
dec
imul
lods
xchg
push
fld
push
or
or
add
pop
pop
js
push
cwde
inc
add
(bad)
dec
push
or
xchg
jmp
sub
popa
dec
ror
cdq
idiv
cmp
je
clc
jmp
and
test
mov
cmp
jge
sub
dec
lea
icebp
iret
(bad)
data16
sub
dec
push
in
jno
lods
(bad)
mov
pop
dec
stos
bound
adc
mov
xchg
jge
or
js
cmp
test
fld
lock
in
push
rcl
(bad)
mov
xor
push
dec
shr
inc
leave
dec
imul
cmp
push
sub
mov
test
add
cmps
cmp
or
jo
jle
cwde
or
xchg
ds
push
outs
loope
and
wbinvd
call
sar
js
mov
dec
jne
enter
dec
icebp
sub
add
outs
call
xor
lock
jne
jne
or
add
mov
inc
pop
fwait
jnp
jb
mov
fwait
mul
dec
mov
jl
push
push
sbb
pop
adc
inc
clc
out
pop
pop
jo
push
in
sbb
jmp
push
sub
shl
adc
inc
sbb
rcl
sbb
jecxz
mov
mov
jne
iret
inc
cld
add
mov
rol
mov
pop
push
jl
pop
sub
aam
nop
xor
or
mov
bound
int
jl
ss
jae
or
icebp
out
add
je
or
ret
ffreep
mov
jmp
or
(bad)
(bad)
js
push
dec
aas
ins
sub
(bad)
mov
push
test
pop
jne
jae
sbb
lods
xchg
push
outs
xchg
cs
clc
pop
xor
or
mov
mov
or
mov
(bad)
mov
and
imul
popf
mov
popf
test
push
addr16
cwde
or
test
pop
cmp
pop
cli
sbb
cmp
cmp
js
pop
push
sbb
add
inc
cmp
cmps
pop
jno
std
lock
and
popa
jmp
fstp
loopne
inc
add
mov
(bad)
(bad)
inc
cmp
inc
or
addr16
cmp
xor
xor
mov
je
fld
ror
fdivrp
mov
lea
mov
test
ret
mov
sbb
push
mov
jg
add
imul
aad
repnz
hlt
fucomip
push
imul
gs
xor
cs
ins
scas
inc
gs
outs
cmp
out
jmp
push
popa
je
dec
popa
ins
gs
and
loopne
mov
jecxz
inc
sti
in
or
int3
push
inc
call
inc
cmp
shr
add
ja
das
loop
pop
jmp
dec
shr
xor
lds
mov
pop
and
xchg
cmp
stc
int
ror
aas
iret
cwde
cmp
fwait
rol
repnz
mov
inc
out
sti
imul
(bad)
push
lods
repz
std
mov
clc
xor
cmp
mov
es
mov
out
fs
imul
sar
je
neg
add
cmp
lock
cmp
jne
adc
popf
inc
xor
cmp
ret
or
push
fistp
add
aam
icebp
je
das
xor
xor
sub
fist
cmc
add
bound
and
xchg
ficom
inc
mul
jbe
lods
es
add
pop
test
pop
enter
and
mov
dec
sar
pop
add
adc
in
add
mov
fstp
dec
cmp
jne
mov
mov
jo
sbb
mov
mov
ds
xlat
add
pop
adc
push
mov
and
aad
pop
mov
add
(bad)
mov
mov
mov
inc
push
add
jno
(bad)
xchg
or
cmp
mov
(bad)
xchg
add
jecxz
movs
inc
mov
or
das
cmp
jo
add
pop
sub
(bad)
inc
pop
jo
add
or
out
mov
pop
mov
pop
pusha
push
push
cld
jne
mov
mov
test
popf
ret
(bad)
and
(bad)
mov
call
sub
ins
les
nop
add
pop
mov
(bad)
ja
movs
adc
nop
mov
push
inc
(bad)
mov
dec
sbb
inc
nop
cmp
mov
xor
jmp
pop
imul
in
xchg
mov
mov
pop
ret
sbb
add
push
push
in
xor
cmp
push
call
jo
in
out
aam
push
inc
jg
dec
adc
sub
mov
clc
mov
pop
cwde
xor
xchg
mov
ins
lahf
bound
pop
cmp
fistp
or
pop
pop
into
enter
inc
jns
mov
dec
jo
sti
add
js
shl
fmul
xchg
xchg
jbe
movs
aaa
pop
shr
xor
and
jle
or
pop
dec
jl
les
sbb
sub
leave
dec
retf
pushf
hlt
jmp
std
call
inc
cmp
ja
mov
inc
jmp
and
(bad)
xchg
lea
cmp
ja
fcmovb
jmp
or
mov
adc
in
and
sbb
and
retf
add
in
mov
imul
inc
sbb
dec
or
loopne
mov
outs
jbe
add
dec
mov
and
sbb
js
dec
jbe
pop
add
aam
add
jb
lea
ret
mov
lock
in
adc
dec
push
cli
cmp
(bad)
aam
mov
(bad)
mov
das
cmp
cld
mov
call
movzx
inc
test
je
add
jae
test
aas
and
je
cmp
fiadd
or
outs
xor
mov
rol
loope
ffreep
cmps
test
mov
push
lea
inc
dec
cld
cmp
adc
push
adc
inc
nop
(bad)
jbe
shl
xor
add
fdivr
mov
mov
mov
xor
aaa
stos
sbb
(bad)
mov
loop
xor
sbb
sub
cs
jb
inc
adc
ret
fdiv
das
shl
mov
cmps
cmp
dec
xor
fstp
shl
lea
adc
es
mov
or
cmp
pop
or
pop
push
jnp
pop
js
jl
mov
dec
ja
or
aam
dec
push
xchg
fnstcw
je
pusha
aad
aad
jbe
sbb
inc
xchg
dec
and
imul
ret
ffreep
or
int3
xchg
add
jae
push
jbe
in
pop
imul
pop
pop
je
pop
cmp
and
dec
mov
nop
in
xchg
dec
and
enter
nop
jne
or
fisub
lahf
dec
jne
and
ror
cmc
cmp
mov
jge
mov
and
xchg
dec
imul
pushf
mov
ret
xchg
imul
iret
mov
add
(bad)
fcom
hlt
test
sub
faddp
xor
push
cmp
pop
(bad)
sbb
nop
mov
or
cmp
retf
leave
ins
nop
jl
adc
and
daa
mov
cmp
cmp
mov
and
mov
ins
cmp
sub
je
shr
mov
ror
or
and
sbb
mov
jns
push
fadd
add
mov
js
std
fcmovnb
mov
push
mov
mov
mov
mov
sub
enter
les
jge
inc
fcomp
int3
ret
push
push
dec
pop
cmp
add
js
add
jle
push
cmps
loope
fdivrp
jle
shr
lods
or
ja
mov
pop
add
outs
add
push
or
ja
add
push
dec
push
dec
inc
(bad)
aam
cmp
xor
cmp
and
outs
fs
gs
xor
adc
jb
jns
cmp
pushf
adc
mov
ins
adc
push
pop
fild
cmp
inc
outs
arpl
inc
gs
jne
out
jbe
mov
je
imul
mov
gs
mov
mov
arpl
or
or
mov
inc
xor
xor
(bad)
outs
ins
bound
outs
lock
push
imul
cmp
pop
mov
cmp
andps
outs
dec
inc
xor
je
dec
out
pop
add
dec
bswap
xchg
xchg
xchg
or
cld
jecxz
leave
leave
leave
clc
hlt
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
pushf
cwde
leave
leave
leave
leave
xchg
nop
mov
test
mov
jge
add
rol
icebp
ret
pop
sub
imul
pop
js
pshufw
in
fs
pop
in
in
pop
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
dec
dec
dec
sub
sbb
dec
dec
dec
sbb
or
dec
dec
dec
or
cld
loop
daa
daa
and
hlt
lock
daa
daa
daa
daa
call
daa
daa
daa
fcom
ror
daa
daa
daa
daa
enter
daa
daa
daa
daa
mov
daa
daa
daa
test
mov
daa
cwde
xchg
nop
mov
daa
daa
daa
mov
daa
js
jo
daa
daa
daa
daa
push
daa
daa
daa
pop
push
push
dec
daa
daa
daa
daa
dec
inc
inc
cmp
daa
daa
daa
cmp
sub
daa
daa
daa
sub
sbb
daa
daa
daa
sbb
or
daa
daa
daa
or
cld
xchg
xchg
xchg
xchg
loope
hlt
lock
xchg
xchg
xchg
in
call
xchg
xchg
(bad)
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
movs
mov
xchg
xchg
nop
mov
test
xchg
xchg
je
ins
push
fs
pop
pop
xchg
xchg
xchg
xchg
push
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
xchg
adc
or
leave
enter
add
loopne
leave
leave
leave
leave
hlt
lock
call
in
(bad)
leave
leave
leave
leave
aam
int3
enter
leave
(bad)
sar
mov
test
leave
leave
leave
movs
mov
leave
leave
xchg
nop
mov
je
fs
leave
leave
leave
pusha
jo
jl
leave
leave
leave
js
pop
push
leave
leave
leave
leave
push
dec
dec
inc
leave
leave
leave
leave
inc
cmp
xor
leave
leave
leave
xor
and
leave
leave
leave
and
adc
leave
leave
leave
adc
add
fs
add
(bad)
hlt
in
in
lock
call
in
(bad)
aam
leave
in
in
int3
mov
leave
leave
sar
mov
test
leave
leave
leave
leave
mov
leave
leave
leave
nop
mov
leave
cmp
leave
leave
leave
jo
push
leave
pusha
pop
pop
push
leave
leave
leave
leave
push
dec
dec
inc
leave
leave
leave
leave
inc
cmp
xor
leave
leave
leave
xor
and
arpl
leave
and
fbstp
jb
(bad)
(bad)
es
jb
(bad)
psubb
dec
dec
hlt
lock
call
in
(bad)
dec
dec
dec
dec
aam
int3
enter
dec
(bad)
sar
mov
test
dec
dec
dec
movs
mov
dec
dec
xchg
nop
mov
test
in
je
ins
in
in
push
in
in
push
push
dec
cs
in
inc
inc
cmp
dec
dec
dec
cmp
sub
dec
dec
dec
sub
sbb
dec
dec
dec
sbb
or
dec
dec
dec
or
cld
frstor
daa
daa
and
hlt
lock
daa
daa
daa
daa
call
daa
daa
daa
fcom
ror
daa
daa
daa
daa
enter
daa
daa
daa
daa
mov
daa
daa
daa
test
mov
ja
sub
rcr
lods
dec
(bad)
pushf
addr16
cli
mov
cmp
adc
push
adc
cmp
repz
and
enter
imul
jo
xor
mov
nop
jnp
aaa
sbb
stc
imul
xchg
aam
mov
pop
addr16
jae
mov
push
cmp
mov
push
sbb
add
inc
dec
xchg
pusha
call
or
push
sbb
addr16
or
aas
inc
pop
or
jl
jo
mov
jg
xor
jmp
loopne
gs
loopne
dec
push
push
dec
inc
inc
dec
add
outs
mov
pop
xchg
jp
push
and
dec
push
inc
fistp
pop
and
push
push
dec
push
push
pop
sub
push
inc
xor
in
ja
pop
dec
dec
dec
inc
push
das
aaa
pop
int
pause
xchg
js
push
or
cmp
lahf
pop
jb
xchg
push
jp
cld
cmp
pop
mov
push
imul
mov
inc
mov
add
sti
fsub
push
pop
xchg
cs
ins
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
pop
push
push
dec
pushf
pushf
pushf
pushf
dec
inc
inc
cmp
pushf
pushf
pushf
cmp
sub
pushf
pushf
pushf
sub
sbb
mov
pushf
sbb
lock
dec
out
push
psllw
leave
leave
leave
leave
repz
cmc
test
leave
leave
idiv
stc
cli
leave
leave
leave
leave
sti
cld
std
dec
leave
leave
leave
jmp
loope
leave
leave
leave
leave
jecxz
in
leave
leave
leave
leave
out
jmp
leave
jmp
in
out
leave
leave
leave
leave
out
rcl
ror
leave
leave
leave
rcl
aad
leave
leave
leave
leave
xlat
fcomp
fcmove
leave
leave
leave
fcmovnu
fstp
leave
leave
leave
leave
ffreep
rol
leave
leave
leave
ret
(bad)
(bad)
leave
leave
leave
(bad)
enter
leave
leave
leave
retf
int3
int
leave
leave
leave
leave
iret
mov
mov
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
mov
leave
mov
leave
leave
leave
mov
leave
leave
leave
mov
leave
leave
leave
cmps
test
stos
leave
leave
leave
leave
stos
lods
lods
scas
lods
iret
leave
leave
scas
nop
xchg
sbb
jg
test
or
ins
gs
nop
sub
push
or
test
cli
gs
jb
push
js
jns
sbb
adc
xchg
add
sub
xor
cmps
mov
push
mov
femms
xchg
add
aas
and
pop
dec
or
arpl
add
or
cld
mov
cld
jmp
push
inc
inc
bound
je
push
mov
pop
xchg
push
rcr
(bad)
mov
dec
inc
jo
nop
lods
xchg
cmp
push
loopne
sar
inc
dec
jne
dec
dec
xchg
shl
test
mov
adc
pop
sti
std
add
inc
dec
outs
mov
pusha
scas
push
lods
inc
cs
jb
pusha
xchg
pop
pop
xor
gs
scas
mov
adc
adc
sbb
or
sub
push
sbb
pushf
pop
mov
scas
jo
pop
and
jg
inc
inc
imul
outs
nop
enter
pop
cmp
and
and
out
outs
jbe
jb
ins
outs
ja
mov
xor
sar
xor
mov
shr
jb
xor
(bad)
jbe
imul
dec
sbb
mov
test
adc
cmp
fsubr
in
sub
fs
xor
(bad)
push
and
xor
movsx
sahf
and
push
outs
imul
add
mov
push
dec
sbb
xchg
mov
adc
inc
inc
mov
aad
dec
shr
push
and
dec
xchg
adc
pop
cmp
jae
push
adc
pusha
mov
mov
pop
scas
push
jb
ins
aam
nop
adc
nop
add
mov
jp
imul
pop
loope
in
mov
or
fcom
fbstp
inc
(bad)
mov
and
(bad)
adc
adc
xchg
mov
sub
sub
cmp
js
add
fs
jo
or
mov
push
dec
jo
mov
shl
and
int3
mov
cmp
adc
jo
nop
pop
push
js
xchg
(bad)
push
and
inc
push
stos
adc
mov
addr16
adc
data16
mov
icebp
fistp
aaa
xor
add
mov
or
inc
ins
jae
mov
inc
cmp
add
stos
sbb
inc
aas
xor
push
adc
adc
adc
jb
popa
fs
les
fwait
hlt
pop
push
int3
add
mov
push
dec
into
pop
out
sbb
and
aam
(bad)
jae
sahf
out
push
jge
push
pop
popa
out
(bad)
mov
adc
sbb
push
loopne
sbb
mov
inc
mov
add
fnstsw
xor
xchg
in
jl
push
dec
jne
push
push
xchg
lock
push
fcom
or
arpl
cmp
lds
jb
je
dec
(bad)
adc
pop
pop
shr
adc
lock
xchg
sahf
retf
mov
mov
pop
inc
xor
mov
or
sub
daa
cmp
aas
lock
push
in
inc
std
pop
rcpps
ficom
mov
mov
neg
sbb
dec
add
jle
mov
imul
loope
add
push
(bad)
nop
jge
jle
xchg
pop
push
push
push
dec
adc
jmp
je
jo
cmp
cld
mov
mov
or
sub
sti
xor
sbb
pop
add
mov
dec
cmp
sub
add
das
ins
outs
mov
add
outs
jo
test
cmp
and
pop
add
and
cmps
dec
sbb
out
dec
mov
xchg
or
or
push
cmps
add
ret
cli
xor
cwde
movs
leave
dec
push
repz
add
inc
mov
rcr
lock
sub
stos
mov
ret
sub
mov
xor
clc
or
fidiv
push
jg
sahf
cmp
(bad)
fistp
sub
jg
sub
pop
add
pop
adc
outs
or
sub
or
idiv
add
or
sub
sbb
sbb
pop
jg
xor
cmps
(bad)
pop
pop
cmp
jne
inc
inc
sahf
shl
ror
pusha
sub
into
rol
add
push
push
push
sub
cld
mov
fstp
pop
mov
je
mov
xor
adc
fdiv
push
sub
add
pop
cmp
jg
jle
ins
add
sbb
and
fdiv
lods
mov
cld
je
hlt
or
pop
adc
pop
push
pop
pop
jl
mov
pop
pop
aam
add
sbb
pop
or
loope
push
data16
cmp
jne
pusha
add
sar
mov
mov
movaps
pop
dec
mov
imul
xor
add
(bad)
fiadd
(bad)
and
mov
inc
push
nop
pushf
(bad)
jmp
fwait
cmc
test
adc
ss
cld
sbb
test
adc
add
xor
jmp
dec
out
xchg
(bad)
sti
add
dec
shr
(bad)
cmp
mov
add
repz
jl
jmp
jbe
add
mov
adc
or
add
dec
sub
mov
jb
sub
inc
push
add
inc
loope
cmps
test
jbe
lahf
inc
cmp
jns
inc
xchg
repz
sbb
ja
or
in
mul
in
and
cmp
cmp
cmp
jo
xchg
mov
cmp
(bad)
xor
mul
or
call
test
cmp
jo
sbb
or
or
mov
pushf
leave
jmp
ds
sbb
in
xchg
fiadd
loope
call
sbb
outs
inc
mov
js
dec
sti
jb
je
or
mov
(bad)
jae
inc
dec
jne
jmp
test
sbb
ins
jp
push
fimul
add
jo
jg
mov
jo
lea
mov
inc
dec
mov
ret
push
mov
pop
push
push
sahf
icebp
dec
xchg
jne
bound
add
pop
mov
sbb
cli
ja
jmp
adc
shl
mov
popf
jne
xlat
call
in
adc
push
outs
cdq
and
inc
jmp
add
or
jnp
xor
jmp
push
mov
neg
sbb
and
jae
mov
dec
inc
dec
mov
mov
loopne
fsub
or
(bad)
adc
aad
daa
mov
test
add
fild
fistp
ret
pop
aaa
add
add
xor
ror
shr
fprem
(bad)
fdivr
mov
xor
or
pop
rol
lods
push
sub
rcr
loope
pop
ins
sub
ffree
ffree
ffree
pop
add
ins
dec
aad
(bad)
add
or
and
mov
dec
or
mov
pop
xor
loopne
push
jbe
inc
push
push
ins
xor
mov
push
mov
jle
rcl
adc
push
mov
mov
hlt
inc
lahf
or
inc
outs
add
mov
pop
loop
or
mov
mov
push
and
pushf
(bad)
data16
jo
imul
arpl
xchg
into
cmps
mov
mov
nop
or
(bad)
aas
fs
mov
push
add
mov
cmp
sub
test
xchg
pop
pop
in
(bad)
cdq
mov
and
mov
xchg
pop
adc
adc
aaa
adc
into
ja
or
push
push
mov
(bad)
or
inc
inc
test
jl
inc
mov
inc
add
add
cmp
inc
xor
mov
cmc
mov
out
jb
push
out
aas
(bad)
ss
or
gs
add
push
or
push
mov
push
dec
dec
jne
cli
inc
shl
lods
(bad)
dec
loopne
imul
pop
lea
shl
add
inc
adc
ins
lock
(bad)
lock
setne
jmp
cmp
dec
pop
movs
mov
pop
imul
mov
ins
cwde
ds
add
mov
add
neg
daa
fsub
in
stos
adc
xchg
stos
es
loope
(bad)
mov
and
adc
(bad)
push
idiv
xchg
push
sbb
daa
and
aas
fisubr
test
or
mov
jo
std
das
hlt
cmp
ja
mov
and
ja
xlat
popa
addr16
repz
adc
retf
imul
shl
test
push
mov
dec
push
loope
jecxz
imul
sbb
shr
cwde
xor
lahf
xor
sub
push
ins
and
jecxz
push
pop
pop
and
test
adc
cmp
jl
nop
hlt
mov
stc
jle
push
mov
je
cld
cmc
gs
sbb
sbb
fmul
push
dec
jecxz
add
pusha
dec
arpl
and
ins
or
leave
push
push
mov
lea
push
sahf
mov
add
adc
ret
loopne
pushw
mov
pop
cli
mov
xor
sbb
and
mov
cmp
mov
mov
dec
xchg
mov
sbb
pushf
nop
jp
aad
add
jo
inc
cmp
mov
outs
mov
daa
adc
xchg
dec
or
push
xchg
test
jo
add
(bad)
inc
jmp
test
nop
leave
nop
push
jge
pusha
inc
in
lock
movzx
or
sbb
ds
in
push
xor
push
adc
pop
movs
jb
push
rol
dec
fsub
pop
test
lods
sbb
int
in
repz
or
jmp
xor
add
ficom
aad
push
adc
fdivr
mov
sbb
rcl
cmp
inc
jmp
or
test
out
add
or
aam
cmp
(bad)
adc
push
dec
mov
push
mov
test
daa
call
clc
not
and
pop
sbb
xor
adc
sbb
push
push
cld
call
jl
and
xor
dec
pop
add
and
je
(bad)
popf
cmp
or
ds
push
sbb
scas
or
outs
push
inc
daa
adc
jmp
sbb
lock
aad
cmp
je
cld
xchg
inc
or
(bad)
(bad)
not
mov
fwait
mov
jns
ja
mov
sub
xchg
mov
(bad)
mov
lock
cmps
aam
movs
dec
ds
(bad)
not
cmp
sbb
xor
dec
lock
dec
xor
in
mov
ror
xchg
pop
cmp
mov
add
xchg
sahf
cmp
jl
push
int3
jge
adc
mov
lds
cmp
sbb
imul
cmp
(bad)
sbb
sti
std
add
inc
cdq
dec
or
mov
outs
cmp
push
inc
inc
sub
adc
inc
movs
mov
adc
arpl
das
inc
(bad)
mov
inc
sbb
icebp
(bad)
cs
push
jg
in
push
jmp
cs
xchg
test
xchg
push
lea
push
or
fmul
dec
sub
xchg
loope
jp
push
sar
cld
shl
ficom
hlt
clc
cld
push
jnp
stos
jbe
jg
cld
imul
jp
call
cmp
mov
mov
dec
or
xor
or
sub
mov
(bad)
enter
push
js
mov
cli
stos
fcom
cmp
(bad)
or
popa
cmps
cmp
pop
lock
call
shr
or
xor
sub
shl
jl
hlt
or
sti
jle
data16
cmp
shl
inc
div
cli
cmps
jmp
or
mov
or
inc
or
pop
sub
je
mov
neg
cli
jecxz
adc
out
data16
test
jne
test
push
jp
mov
out
fiadd
inc
or
fsubr
sub
pop
fadd
ins
push
jo
cli
inc
test
and
jno
and
loope
sub
test
fwait
push
je
pop
add
sub
inc
adc
ds
scas
or
retf
shl
ret
mov
in
retf
jg
or
xor
sub
mov
mov
sahf
pop
or
(bad)
movs
mov
movs
arpl
lds
push
pop
pop
pop
mov
or
fimul
retf
lahf
cwde
lock
or
jns
cmp
data16
call
dec
cmp
jne
cli
jb
mov
sub
add
sbb
fst
adc
add
jne
retf
outs
dec
or
jno
jae
jae
sub
pop
iret
popa
cmc
jb
jne
mov
lock
pause
(bad)
mov
xor
or
or
stos
sar
adc
repz
je
mov
aas
mov
cmp
clc
aaa
imul
or
sub
sub
je
xor
jl
mov
mov
icebp
es
pushf
inc
xor
cmp
mov
dec
je
push
(bad)
pop
sub
jbe
sbb
pop
mov
clc
es
adc
pop
mov
jne
call
inc
jmp
mov
add
movs
mov
jmp
shr
jno
dec
sub
mov
or
sub
cmps
or
xor
dec
push
xchg
cwde
test
or
or
adc
push
mov
clc
pop
xor
fldl2t
cmp
jbe
mov
pop
adc
and
jmp
not
mov
add
(bad)
and
sbb
js
mov
sub
les
aas
mov
dec
sbb
adc
cmovp
inc
pop
inc
pop
lods
xor
jo
push
xor
mov
ins
es
xor
cmc
loopne
in
adc
or
sub
lods
cmp
je
stos
aam
in
sub
clc
sub
lahf
add
sbb
sar
mov
mov
mov
jge
fsubr
dec
cs
and
lods
fst
aad
jmp
int3
mov
push
(bad)
pop
in
mov
fcomp
adc
jmp
push
jg
in
adc
out
or
retf
add
outs
movs
xchg
xchg
fdivp
popa
pop
mov
rep
sbb
imul
mov
or
pop
fwait
nop
pop
pop
mov
fcmovnb
mov
mov
cmp
imul
clc
sub
dec
push
je
add
add
pop
dec
(bad)
push
mov
or
cmp
or
jl
std
add
je
ret
je
xchg
ret
and
mov
sub
arpl
cmp
pop
clc
stos
cmc
add
lea
mov
push
add
and
icebp
lods
imul
push
sub
arpl
das
pop
cld
daa
jo
dec
repz
retf
dec
mov
xchg
fsubr
rcl
faddp
or
cmps
adc
jne
and
or
dec
mov
je
xchg
push
dec
ret
xor
dec
push
or
jmp
push
sub
dec
cmps
pop
outs
adc
out
ret
or
outs
sbb
shl
(bad)
add
test
xchg
(bad)
repz
movnti
add
sub
scas
rol
dec
xor
inc
inc
sbb
jne
lods
and
jmp
mov
stc
mov
or
cld
aas
and
aas
add
in
mov
add
mov
xchg
or
cmp
ja
or
jmp
jecxz
xor
pop
test
adc
rol
out
ret
xor
jbe
mov
outs
mov
inc
je
mov
jnp
outs
mov
mov
inc
je
mov
dec
je
dec
jl
pop
out
dec
mov
pop
cmp
jbe
mov
cli
fcom
add
lods
scas
inc
fdivr
xchg
cmp
ss
pop
pop
retf
xchg
mov
inc
iret
dec
faddp
xlat
mov
ret
xor
and
retf
pusha
xchg
mov
dec
mov
fsub
test
inc
stos
pop
mov
xchg
adc
int3
fwait
pushf
lock
outs
dec
adc
dec
bound
stos
or
xlat
jg
push
inc
ror
aam
aas
lahf
test
das
push
lods
cmp
xor
test
cmp
add
and
clc
dec
cld
lea
hlt
mov
movs
cmps
(bad)
jle
jmp
push
mov
cmp
jg
jmp
add
popa
inc
or
adc
or
fdivp
mov
ds
movs
cmp
retf
fcmovne
lea
add
pop
rcl
stos
or
jne
scas
inc
jge
mov
neg
jmp
or
add
pusha
mov
mov
stos
xchg
push
mov
into
mov
pushf
push
jmp
aam
adc
enter
jg
dec
mov
stos
cmp
inc
inc
sbb
jne
pop
pop
aas
cwde
push
jg
loopne
sub
mov
sti
mov
or
jb
cs
mov
repnz
cld
mov
adc
dec
lds
out
jge
sbb
jle
jmp
data16
daa
push
sbb
adc
jb
fiadd
mov
aam
(bad)
cmp
sbb
mov
mov
mov
in
ror
push
sub
hlt
(bad)
(bad)
lods
pop
mov
je
add
or
mov
test
sar
add
pop
sbb
(bad)
sti
mov
rol
xchg
aad
clc
aas
daa
in
xor
dec
inc
dec
inc
dec
lods
or
hlt
or
dec
into
jge
xchg
ins
jo
jo
ret
std
mov
aam
aad
(bad)
push
dec
or
sbb
sbb
dec
stos
mov
je
mov
stos
neg
sbb
stos
jmp
jge
(bad)
jle
inc
mov
loop
movlps
pop
push
mov
clc
dec
mov
test
push
mov
mov
mov
jbe
sub
rcr
dec
mov
mov
mov
mov
mov
jne
test
cli
adc
lahf
add
xchg
jmp
push
jge
add
enter
xrelease
cld
(bad)
inc
test
jne
sbb
(bad)
imul
jmp
adc
sti
add
js
js
je
inc
jne
pop
in
test
ret
inc
repz
or
repnz
and
lea
pop
pop
iret
mov
je
push
push
cmp
mov
adc
sbb
add
(bad)
mov
loop
push
xchg
movs
loopne
out
mov
idiv
and
inc
add
and
and
adc
and
sub
fucomp
sub
xor
sub
iret
jne
xor
or
sub
sub
or
sub
popf
mov
loopne
sub
cmps
loopne
xor
add
repnz
jle
in
movs
jmp
mov
mov
mov
and
adc
test
popa
je
adc
or
(bad)
test
inc
inc
push
int3
fld
mov
aas
imul
adc
pop
mov
push
pop
jge
pop
dec
xor
pop
frndint
rcr
scas
or
fstp
fnstsw
fwait
mov
test
je
fidiv
jne
ja
cld
sti
lea
mov
inc
sub
nop
rcr
or
xor
jmp
bound
mov
fimul
mov
cmp
pushf
or
cmp
add
or
dec
js
dec
and
pop
cmp
leave
jmp
mov
aaa
dec
sbb
je
not
mov
shr
mov
add
xchg
out
aad
push
dec
push
sahf
push
adc
inc
ror
test
rcr
or
inc
or
or
in
lock
adc
jl
mov
in
(bad)
jl
sbb
jae
dec
add
jge
inc
mov
fild
cli
lea
ror
or
mov
(bad)
setnp
or
push
sub
pushf
and
jne
dec
ja
mov
enter
and
jg
cmp
jmp
enter
ret
add
aas
(bad)
div
pop
jmp
scas
add
sbb
inc
mov
pop
cld
push
in
dec
mov
fldcw
cs
nop
push
fldz
jle
std
pop
cmps
cmps
jg
ds
lods
or
icebp
mov
mov
pusha
jne
inc
sbb
cmp
icebp
je
and
fistp
sub
fiadd
ret
jne
mov
sahf
cs
push
mov
add
loopne
adc
aas
jmp
fstp
test
test
push
add
dec
test
ins
and
and
add
and
mov
sub
add
jae
fimul
addr16
add
jmp
aaa
mov
neg
or
adc
es
push
inc
imul
push
cmp
hlt
nop
jb
aaa
add
loopne
cmp
wbinvd
inc
movs
add
push
cld
test
loope
adc
push
shl
fistp
call
push
fist
leave
aam
movs
call
or
pop
ret
or
or
fiadd
jmp
adc
bnd
mov
in
aam
xchg
cmp
fisub
lock
push
sbb
fwait
push
push
repnz
(bad)
mov
in
cmps
xchg
xor
cmp
inc
or
sub
adc
cli
cdq
iret
mov
in
adc
mov
xor
push
adc
and
inc
add
pop
mov
pop
or
add
repz
sbb
or
cmp
inc
stc
inc
fdivp
push
sub
cmp
mov
fiadd
ins
mov
adc
imul
adc
mov
fmul
call
fild
xor
test
sbb
add
mov
adc
push
jo
pop
inc
imul
inc
loope
dec
test
dec
fnstsw
pop
push
inc
sub
ror
jg
xchg
gs
mov
ror
(bad)
cmp
mov
xor
retf
(bad)
rep
mov
push
cmp
xor
and
shl
mov
cdq
push
pop
enter
jp
and
and
fldenv
mov
sbb
mov
sbb
nop
add
lods
rol
inc
das
pop
into
idiv
add
repz
or
dec
outs
call
add
ja
call
js
or
jb
sti
ins
jp
adc
je
mov
ja
adc
pop
mov
add
inc
dec
jne
jmp
mov
mov
aas
cdq
idiv
imul
sbb
shr
jns
ret
cli
add
repnz
mov
fild
add
pusha
ret
or
js
jne
inc
std
std
xchg
or
xchg
clc
shl
(bad)
bound
xchg
push
dec
mov
and
pop
(bad)
call
outs
mov
xchg
call
jg
mov
mov
push
clc
hlt
or
inc
push
jbe
lods
mov
inc
fbld
push
ds
pushw
cmp
call
inc
add
scas
data16
and
icebp
rol
bnd
xchg
lods
mov
aas
mov
dec
cmp
imul
mov
push
sub
mov
mov
cmp
mov
cmp
xchg
dec
pop
lock
pop
mov
push
cmps
lds
jp
cmp
(bad)
je
ins
(bad)
dec
cmp
jb
adc
sub
inc
jmp
ja
mov
sub
inc
adc
pop
pop
sub
mov
xchg
outs
repz
popf
stos
nop
pop
lahf
sub
add
xor
inc
jne
ins
push
push
add
cmp
sbb
mov
fcomp
pop
xor
push
push
dec
into
mov
iret
or
sbb
adc
cs
sbb
mov
add
sbb
dec
(bad)
inc
inc
ret
or
mov
mov
fstp
or
push
or
sub
(bad)
dec
sbb
push
adc
push
arpl
mov
push
test
lods
pop
and
out
mov
cdq
ins
sbb
sbb
jnp
lock
xchg
and
lahf
pop
pop
adc
and
xchg
add
adc
ficomp
jle
ret
fcom
adc
pop
and
add
imul
push
dec
lods
pop
pop
aaa
jmp
push
mov
loopne
in
enter
sub
pushf
mov
scas
lock
aaa
mov
add
rcr
fmul
fimul
push
or
cmc
lahf
out
cmp
je
mov
inc
das
and
daa
push
xor
add
push
cmp
add
jbe
push
mov
xchg
bnd
in
iret
or
adc
inc
in
add
jecxz
mov
xor
push
in
jge
ds
jb
jmp
js
iret
in
lahf
aam
in
jbe
xlat
cmps
retf
lods
leave
push
sar
jns
cwd
inc
cmp
loopne
out
repnz
imul
add
cmps
dec
dec
stos
pop
aas
sahf
adc
mov
lea
mov
sbb
cdq
(bad)
fisub
or
outs
or
shr
(bad)
sbb
sti
std
and
pusha
add
sub
pop
(bad)
sub
mov
pop
out
lods
arpl
add
aad
cmp
aas
dec
shl
lock
add
dec
mov
in
inc
and
sbb
inc
fdiv
push
mov
jo
adc
arpl
repnz
(bad)
addr16
imul
inc
and
daa
cmp
in
jg
cmc
sub
jmp
and
adc
shl
loope
or
inc
cmp
jne
lahf
inc
cs
sub
into
dec
add
lods
in
pop
mov
jge
vmwrite
pop
add
or
ret
inc
pop
movs
push
aam
fadd
sub
xor
cmp
lods
mov
les
add
pop
inc
ins
loop
push
in
add
loope
mov
xchg
mov
push
jbe
pop
fbld
scas
out
repnz
(bad)
ins
cmc
int3
stos
pop
xchg
xlat
dec
adc
imul
xchg
jge
in
aaa
xchg
lock
sbb
adc
aad
popf
mov
jge
dec
add
scas
nop
mov
pop
loop
pop
mov
push
ja
sub
mov
and
popa
or
sbb
or
stc
pop
or
or
add
add
add
or
and
xor
sbb
ror
pop
les
xchg
xor
iret
repz
(bad)
xchg
(bad)
repz
and
mov
cmp
pop
cmp
add
loopne
fwait
inc
outs
or
mov
mov
inc
mov
bound
popf
dec
push
lea
sub
test
pop
pushf
in
jb
aam
and
xlat
fcmovb
sub
dec
inc
adc
jmp
sbb
push
inc
push
add
sub
xchg
xor
push
pop
leave
mov
push
dec
je
add
jmp
out
aad
add
lods
sub
scas
adc
shr
dec
cmp
and
daa
mov
pop
or
sbb
push
mov
loopne
aaa
xor
adc
or
or
xor
dec
jg
je
mov
aaa
mov
or
push
jmp
sub
je
pop
je
jmp
push
outs
mov
dec
mov
out
scas
lahf
sbb
sub
test
loopne
inc
mov
add
adc
or
sub
push
popa
push
inc
jmp
adc
(bad)
xor
out
in
or
and
jmp
sbb
ins
loope
sub
sbb
or
repz
popa
and
add
out
loope
sbb
movs
xor
sub
add
push
xor
add
push
jmp
daa
sub
scas
pushf
fist
mov
(bad)
cmp
add
ror
cmp
add
dec
push
add
clc
ja
adc
and
mov
dec
ficom
dec
xor
add
mov
add
xor
mov
out
pop
iret
adc
push
or
in
dec
repz
sbb
or
pop
sbb
hlt
sub
and
push
mov
and
push
jae
mov
sbb
inc
mov
sbb
xor
push
cmp
fnstsw
jg
aam
loopne
dec
cwde
shl
pop
sub
or
inc
push
push
jmp
or
data16
cmp
cld
clc
out
adc
inc
mov
enter
in
mov
imul
das
push
dec
jp
push
adc
cmp
cmovle
clc
xchg
mov
retf
mov
(bad)
sub
sbb
push
mov
adc
(bad)
cmp
lea
or
aad
pop
sbb
inc
add
in
dec
icebp
shufps
fdivr
je
mov
lods
adc
adc
adc
idiv
xchg
ret
test
push
mov
sbb
call
mov
test
mov
pop
pop
ret
jb
ja
aas
add
sbb
xchg
adc
sbb
test
pop
mov
ficom
imul
test
test
mov
stc
sbb
sete
retf
pusha
adc
outs
mov
loop
repz
push
xor
js
scas
into
cmp
popf
les
loope
xchg
xrelease
pop
xor
lock
sbb
sub
xchg
ret
cmp
add
jge
push
adc
mov
push
aaa
and
mov
daa
mov
xor
fldenv
jg
dec
cmp
jl
push
inc
push
(bad)
cmp
jne
sub
adc
or
call
inc
notrack
sub
je
mov
enter
sub
je
jmp
loop
mov
mov
jmp
push
push
push
sahf
jbe
push
inc
push
inc
mov
retf
out
scas
aad
scas
nop
inc
sub
aad
fdiv
sar
mov
pusha
jl
mov
add
mul
add
mov
mov
adc
dec
outs
je
push
pop
push
pop
mov
mov
jl
push
sub
je
dec
xor
cvtps2pd
sub
adc
sbb
(bad)
jmp
mov
mov
push
cmp
shl
and
arpl
in
or
jmp
sti
arpl
sbb
jmp
sub
add
push
fs
mov
push
imul
add
stos
cld
add
pop
xor
push
popa
dec
cld
shl
ret
xchg
jbe
add
loopne
mov
mov
gs
sbb
call
cwde
push
repz
mov
or
push
adc
addr16
scas
mov
jl
mov
dec
sbb
add
adc
js
dec
mov
outs
test
jge
mov
mov
mov
cli
mov
out
lods
mov
in
fiadd
mov
das
mov
dec
and
out
or
push
jns
rol
in
sbb
pushaw
repnz
jb
and
dec
adc
mov
bnd
es
dec
and
loop
and
jmp
call
lock
in
lock
cmp
lock
mov
les
ins
mov
ja
fld
mov
pop
data16
fistp
ds
add
cmp
loopne
(bad)
jle
and
fs
jne
mov
add
sub
test
jl
inc
inc
xor
push
cmp
xor
ror
repnz
mov
stos
and
stc
jmp
jne
adc
(bad)
outs
jb
jne
ret
cmp
mov
and
test
xchg
fsubr
mov
push
outs
cmp
fsub
das
push
dec
inc
imul
test
add
out
(bad)
aam
jle
adc
iret
fdivr
add
jecxz
and
inc
(bad)
pop
gs
retf
fs
(bad)
mov
mov
(bad)
or
add
rcr
sbb
mov
dec
mov
push
and
inc
pmulhuw
xor
lds
dec
push
and
cli
push
xor
or
or
dec
mov
fs
enter
add
xchg
pop
xor
add
loopne
push
cmp
push
test
mov
cmp
pop
ins
sbb
je
(bad)
ja
xchg
sbb
pop
adc
(bad)
cmp
xor
ret
xchg
adc
or
sub
cmps
or
add
sbb
les
xlat
xchg
pop
push
push
inc
dec
jecxz
inc
jno
jecxz
mov
ins
call
pandn
lods
mov
pusha
outs
mov
(bad)
enter
xor
cmps
cdq
mov
and
cmp
adc
ds
adc
mov
loope
or
sub
jne
cmp
add
jo
pusha
repnz
adc
add
pop
test
sub
fcomp
adc
fcomp
pop
fmul
fstp
adc
or
fs
jb
jle
les
push
aad
or
push
push
push
sbb
jg
push
jmp
xor
retf
fdivr
add
sub
jb
or
xchg
xchg
pop
ret
jae
fwait
mov
cmps
cmp
mov
fdiv
shl
mov
push
push
jmp
adc
and
mov
mov
push
xor
pop
push
sub
or
adc
or
test
or
ret
xor
or
mov
sbb
pop
icebp
nop
addr16
in
fcom
out
aam
add
push
mov
lahf
or
or
or
mov
inc
inc
dec
retf
sbb
out
(bad)
(bad)
pop
xor
inc
lock
lock
pop
or
cs
mov
push
or
lods
pop
add
out
aam
push
in
sub
in
add
pop
add
loope
call
add
leave
mov
in
or
jo
cmp
leave
stos
ins
mov
xor
inc
fsubr
arpl
jl
je
xchg
cmp
sub
sub
add
adc
int
scas
push
les
lahf
lods
aad
retf
xchg
sub
inc
(bad)
out
(bad)
xchg
mov
enter
mov
sbb
adc
in
push
(bad)
jl
dec
mov
ins
es
add
fdiv
xor
fidivr
mov
add
mov
or
pop
jl
fsubr
aam
xor
rol
mov
add
and
push
dec
and
dec
movs
enter
xor
or
inc
fcom
cmp
mov
and
in
pop
fmul
clc
fwait
es
test
or
or
cmp
stc
popa
hlt
mov
jmp
mov
jmp
je
sub
je
sbb
push
add
mov
jle
test
and
arpl
test
mov
push
ins
cs
je
lock
mov
(bad)
loopne
add
jge
mov
pop
jb
in
imul
mov
jo
add
mov
sahf
dec
adc
add
pop
mov
shl
jns
daa
icebp
pop
je
jne
ss
jmp
fs
push
or
in
jle
or
xor
in
mov
addr16
sbb
mov
xchg
ret
jae
sub
and
icebp
adc
mov
inc
pusha
add
push
ins
add
or
out
cmp
add
pusha
iret
push
and
nop
push
push
enter
mov
sub
pop
add
fidiv
rol
repz
cwde
lock
adc
das
push
out
mov
sbb
fdivr
add
mov
jecxz
sti
call
jmp
xchg
xor
inc
movs
loopne
push
cld
fcomp
inc
sbb
aaa
je
adc
push
cmp
lods
mov
cld
mov
sbb
push
inc
retf
rcr
mov
sar
mov
xchg
out
mov
stc
push
(bad)
sti
push
sbb
sub
lahf
push
psubq
movs
shl
cs
add
mov
push
pop
dec
addr16
mov
das
movs
pop
mov
sbb
dec
iret
and
or
in
cmp
mov
adc
hlt
movs
imul
sbb
ins
and
inc
xor
loope
push
ins
pop
mov
and
inc
lds
sub
pop
or
jne
outs
or
add
push
fadd
in
test
inc
ret
loope
pop
pusha
mov
jg
push
xchg
fcmovnbe
dec
add
dec
or
lahf
xchg
sbb
pop
stos
rol
pop
add
mov
sbb
out
ja
pop
adc
push
sub
inc
xchg
fdiv
sub
push
test
sbb
add
xchg
jo
movaps
fsub
sbb
push
pop
push
aam
push
ins
or
cmps
sbb
jmp
cmp
jg
cmp
jne
shr
sbb
sbb
fbstp
sbb
into
push
fsub
pop
dec
call
lock
pop
inc
jns
aas
xchg
addr16
rcl
add
sar
retf
std
iret
and
adc
jmp
cmp
sub
and
and
pop
push
sub
pop
outs
in
push
pop
aam
adc
js
ror
loopne
cld
or
je
fiadd
mov
imul
fs
mov
dec
out
mov
mov
or
jge
nop
mov
inc
clc
cmps
in
push
loopne
add
jns
dec
loopne
les
xchg
outs
fsubp
mov
pop
adc
rcl
int3
mov
ds
cmp
add
(bad)
cmp
push
int
lea
cmp
and
into
je
(bad)
fsub
leave
inc
pop
adc
cmp
cmp
je
jmp
mov
je
jmp
xor
pop
push
jmp
and
ret
mov
shl
pop
or
push
shl
push
enter
sahf
scas
into
mov
test
rcr
lods
es
add
mov
psraw
cld
mov
pop
cld
cmp
movaps
inc
sbb
jo
arpl
mov
ins
mov
mov
adc
cmp
test
jl
in
js
push
cs
dec
adc
add
mov
and
jae
imul
mov
shr
cmps
cdq
adc
lea
push
bnd
pop
outs
cld
xchg
jmp
sub
cwde
mov
mov
movs
test
add
sub
and
jae
loope
loope
jge
push
jmp
scas
test
mov
sub
cld
std
rol
ret
jmp
jae
imul
cmp
cmp
jmp
or
repnz
mov
mov
jns
push
call
mov
pop
(bad)
loopne
lock
jb
ja
xor
je
ret
cmps
mov
pusha
mov
(bad)
sbb
call
dec
adc
fwait
add
loope
cmp
les
in
mov
idiv
mov
mov
inc
clc
test
or
test
mov
in
mov
add
sbb
mov
inc
and
adc
aaa
neg
adc
sbb
clc
dec
mov
pop
adc
mov
clc
add
shl
push
js
push
fldcw
xchg
adc
jo
mov
add
adc
in
mov
ja
dec
das
add
and
sahf
mov
adc
fisub
add
int3
mov
push
cmp
jne
cmp
mov
pop
call
cld
popf
jp
add
clc
movs
mov
xchg
dec
xor
mov
xor
pop
mov
imul
mov
out
jge
pop
dec
xor
inc
hlt
xchg
adc
xor
fs
hlt
or
mov
sub
test
and
mov
pop
push
sub
dec
mov
cmp
mov
outs
loopne
ror
jmp
imul
dec
jmp
dec
test
jl
and
cmp
pop
test
or
sub
and
(bad)
jns
dec
or
inc
in
mov
jmp
adc
lea
mov
add
mov
sbb
push
ret
pop
add
xor
cmp
dec
test
js
or
push
adc
inc
jmp
push
pop
adc
(bad)
cmc
inc
dec
iret
xor
test
jg
adc
mov
inc
inc
fmul
cmp
nop
dec
loopne
jl
push
pop
ror
push
push
inc
inc
inc
jge
mov
or
shl
hlt
pop
int3
mov
ss
and
cmp
jge
lods
(bad)
add
(bad)
jne
sbb
popa
xchg
xchg
loop
and
into
addr16
and
add
ret
and
mov
jle
jmp
not
cmp
pop
sti
dec
xor
cmp
jle
adc
jp
mov
add
addr16
pushf
and
shl
mov
ret
pop
rol
mov
ret
stc
xchg
out
fiadd
pop
mov
adc
ret
push
dec
daa
mov
cmp
outs
movs
sub
cs
pop
push
ret
fisubr
jecxz
imul
pop
and
sahf
or
adc
lsl
dec
fldenv
or
xchg
imul
inc
imul
sub
and
outs
sub
std
popf
xchg
or
xor
cmp
adc
sbb
add
add
popa
mov
and
icebp
and
xlat
in
or
jb
and
fstp
sbb
fnstenv
add
dec
inc
xor
jmp
mov
inc
xchg
or
mov
sbb
pop
add
int3
sar
inc
lds
push
loopne
xchg
and
dec
jne
clc
pusha
pop
es
in
icebp
mov
in
lds
inc
jmp
popf
or
adc
mov
and
inc
sub
aad
fdiv
mul
lock
je
pop
inc
jbe
xchg
jge
mov
lahf
sub
and
loop
mov
imul
and
inc
sub
jle
add
push
push
push
rcr
leave
mov
sub
aaa
mov
(bad)
cmp
sub
ror
popf
mov
sar
cli
jbe
nop
int3
sbb
cmp
fimul
mov
adc
xor
jbe
adc
(bad)
imul
jne
repz
cmp
adc
xlat
dec
cld
adc
scas
add
inc
inc
inc
(bad)
jne
jg
loope
add
pop
dec
in
push
mov
fs
sub
aaa
pop
pop
aaa
pop
sub
jb
inc
mov
ret
lds
stos
(bad)
sbb
retf
jne
add
neg
ret
or
or
push
pop
jne
sbb
adc
out
or
pushf
(bad)
or
or
and
sahf
xor
xchg
adc
sbb
add
ret
call
mov
mov
jmp
mov
jle
dec
jno
scas
mov
xchg
punpckhdq
ins
aaa
stos
ss
xchg
ror
mov
(bad)
ret
pop
or
pop
push
test
or
mov
jne
push
retf
fisttp
hlt
dec
pop
ret
in
dec
or
vpextrw
lds
or
adc
jmp
mov
loopne
xor
inc
xor
pusha
sub
lods
enter
inc
call
sti
xor
cmp
and
daa
fbld
xchg
fmul
das
mov
imul
in
or
mov
fwait
aam
enter
pop
stc
movs
fcomp
mov
push
fnstenv
push
(bad)
sbb
jle
sub
imul
mov
add
mov
pushf
mov
hlt
enter
or
enter
inc
ds
out
add
jl
dec
xor
daa
and
aas
sbb
rcl
stc
hlt
mov
and
popa
mov
push
mov
push
sbb
cmp
bound
daa
sub
or
cmp
adc
sahf
out
mov
push
repnz
test
push
ins
das
fs
outs
cmp
add
fs
(bad)
frstor
add
pop
jo
push
inc
push
fstp
pop
popa
pop
sbb
push
pop
cmp
pop
push
cmp
xchg
pop
cmp
lods
ss
bound
jne
or
nop
lock
mov
mov
jle
jmp
lea
adc
hlt
sub
and
fchs
pop
lods
jnp
enter
inc
retf
(bad)
ret
daa
sar
push
mov
int3
pop
ror
in
adc
fs
cwde
cmc
imul
and
push
pop
pop
arpl
adc
xor
in
pop
sbb
hlt
xchg
call
rcr
jge
or
retf
cld
scas
test
hlt
mov
in
mov
sbb
cmp
pop
adc
push
push
outs
mov
je
popa
jae
inc
jb
sbb
push
jo
(bad)
or
mov
(bad)
jns
aam
or
fs
gs
outs
outs
jmp
mov
rol
aaa
mov
call
adc
inc
jl
pop
jg
(bad)
push
loope
or
xor
inc
jmp
pop
pop
ret
pop
hlt
jmp
dec
lods
or
inc
add
push
loop
in
adc
cmc
in
mov
inc
fsubr
js
cmp
pop
adc
or
pop
jmp
xor
or
sbb
jmp
add
call
add
xor
lea
cmp
adc
dec
rol
adc
outs
cmp
jmp
cmp
lea
push
leave
clc
das
popa
inc
ret
lock
or
add
sti
loope
nop
inc
cmp
sub
popf
sub
mov
mov
add
xchg
cmp
xchg
adc
inc
in
adc
cwde
movs
sbb
cmp
ins
mov
rcr
adc
pop
jge
popf
xchg
adc
sar
mov
pop
and
push
rcl
cmp
ja
in
loop
xchg
jl
xor
cmps
in
inc
add
lods
cdq
(bad)
xchg
aaa
mov
hlt
mov
inc
inc
loope
add
xchg
and
dec
cld
jecxz
add
(bad)
dec
dec
sub
lock
es
cwde
dec
mov
sub
or
popa
or
dec
pop
sub
push
gs
push
sbb
adc
and
test
call
push
test
add
icebp
mov
test
adc
xchg
fist
jno
fwait
test
adc
push
add
or
mov
iret
ror
and
or
add
push
mov
inc
pop
push
add
push
push
mov
and
sbb
pop
push
xor
sbb
mov
fucomi
mov
imul
push
cdq
icebp
add
ret
cli
add
dec
inc
dec
(bad)
push
imul
cmp
jecxz
push
mov
rcl
jecxz
xchg
mov
mov
jnp
mov
jne
cmp
je
cmp
jle
inc
(bad)
dec
push
sub
ret
mov
jno
dec
pop
sub
jge
jne
or
in
cmp
in
add
adc
ror
sub
push
ss
xchg
pop
and
mov
push
movs
jmp
xchg
cli
imul
sbb
mov
mov
push
adc
adc
jb
sar
inc
js
jg
test
mov
add
call
dec
ret
xchg
out
daa
push
push
mov
call
int3
pop
mov
popa
icebp
dec
cdq
rdtsc
cld
mov
in
jmp
jne
movzx
cld
dec
ss
pop
mov
sbb
shr
inc
sbb
(bad)
pusha
xlat
cmp
aaa
push
xor
and
aaa
out
cmp
pusha
movs
mov
rcl
sub
and
xchg
add
aaa
dec
xchg
cs
div
adc
push
out
leave
jne
mov
scas
push
in
mov
inc
or
mov
int3
addr16
inc
mov
adc
push
xor
add
cli
or
cmp
loope
test
dec
aam
in
lea
jbe
and
(bad)
sbb
inc
mov
jge
sbb
es
mov
sbb
shl
sbb
jb
inc
xlat
sbb
add
dec
outs
fwait
and
add
dec
sbb
inc
xchg
stos
adc
xchg
clc
out
mov
out
(bad)
out
mov
lea
mov
(bad)
mov
pop
sub
mov
imul
jle
mov
dec
(bad)
(bad)
dec
in
dec
xlat
pop
ins
adc
sbb
adc
adc
adc
inc
jl
xlat
call
jge
mov
out
inc
sub
xchg
or
and
xor
sub
nop
popa
sbb
jge
mov
xor
out
outs
test
sbb
dec
cmp
mov
inc
sbb
movs
inc
mov
cmp
jne
imul
ret
mov
rcpps
or
sbb
xor
inc
cmc
jo
clc
inc
mov
popa
fcomp
je
call
(bad)
dec
jmp
inc
jecxz
ins
sti
arpl
pop
xor
push
dec
lods
or
jg
xchg
and
fisttp
cmp
pop
sahf
or
ror
cmp
pop
mov
sbb
adc
hlt
(bad)
(bad)
inc
xor
sub
dec
or
je
xchg
inc
ss
jno
loopne
popa
mov
mov
push
shl
or
es
inc
out
stc
cmp
pusha
fdivr
xchg
mov
mov
retf
imul
push
push
jne
cmp
imul
cld
pop
test
mov
sbb
push
add
fnstcw
push
imul
and
imul
mov
xor
rol
pxor
adc
arpl
pop
jl
and
and
adc
push
and
add
enter
push
cld
int
stc
stos
mov
push
hlt
dec
or
dec
add
test
cld
sbb
mov
lahf
out
jl
dec
in
ror
mov
xor
xor
aam
int3
out
fdivp
mov
push
push
dec
mov
movs
lods
in
movs
pop
fmul
cmp
xchg
ds
mov
mov
je
jo
dec
repz
fs
pop
jle
cmps
jne
lods
push
dec
dec
mov
inc
xchg
repz
cmp
(bad)
and
fidiv
sub
xor
sbb
sbb
inc
ds
dec
sub
inc
and
daa
out
in
and
mov
pop
xchg
iret
enter
mov
adc
dec
ja
dec
sahf
adc
pop
repnz
add
dec
add
dec
fimul
cld
sbb
hlt
out
test
in
pop
fs
sahf
xchg
dec
call
dec
sahf
xchg
ja
push
rcr
fdivr
aam
shr
loopne
xor
popf
int3
push
js
enter
dec
faddp
mov
iret
enter
mov
xor
fcom
mov
test
inc
movs
pushf
mov
sar
js
enter
(bad)
sbb
nop
jp
jns
pop
add
or
fisttp
fisttp
jmp
call
or
nop
into
jecxz
sar
fcom
aam
addr16
mov
mov
movs
lods
cmps
adc
and
in
inc
and
sub
push
jp
xor
cld
or
mov
movs
pop
lods
fadd
daa
add
inc
enter
aaa
xor
mov
dec
sbb
sub
push
repnz
(bad)
sub
sbb
dec
pop
pop
frstor
aad
adc
push
and
cwde
xchg
(bad)
aas
ror
nop
pop
inc
je
addr16
push
dec
push
dec
pop
push
dec
or
outs
nop
and
jl
invd
dec
push
gs
imul
and
ror
pop
xchg
nop
lods
push
pop
push
inc
pop
inc
inc
push
repnz
and
add
ror
aam
setae
enter
xchg
xchg
xchg
mov
enter
fadd
in
jl
xchg
(bad)
pmuludq
jge
add
add
cmp
cmp
push
sbb
test
cli
mov
push
pop
rcl
fld
adc
dec
hlt
pop
or
dec
mov
cwde
outs
cmp
or
inc
enter
(bad)
(bad)
dec
mov
dec
std
rol
(bad)
sub
sbb
push
sbb
inc
xor
push
pop
xor
inc
xlat
jbe
xchg
pop
and
sbb
loop
enter
jmp
in
ret
add
cmps
in
addr16
sub
and
adc
cmp
sub
clc
clc
lea
nop
xor
pop
inc
sbb
adc
mov
std
inc
add
xlat
mov
adc
enter
or
mov
or
or
or
adc
popa
mov
jecxz
dec
and
mov
pusha
nop
fbld
cmp
ja
fistp
and
and
adc
pop
xor
add
pop
pushf
std
push
push
cmp
add
dec
jmp
sbb
jno
push
iret
adc
add
cmp
fnstenv
in
call
in
sar
jns
clc
adc
xor
mov
fldenv
mov
ja
push
(bad)
ins
ret
push
mov
clc
and
hlt
rcr
shr
or
cdq
fs
inc
adc
sbb
cdq
movs
jb
sbb
and
fs
dec
and
fs
dec
es
cmp
dec
es
sub
xor
cdq
fs
xor
jb
fs
cmp
movs
jb
movs
fs
mov
cdq
in
cdq
inc
sbb
jl
jb
movs
jb
mov
jns
movs
pushf
push
pusha
add
int3
mov
jns
add
pop
mov
fsub
add
and
shl
xor
mov
das
or
inc
push
jl
mov
add
outs
je
fs
pop
(bad)
mov
dec
jne
inc
imul
retf
imul
jb
out
pop
stc
repnz
outs
jb
ins
jo
inc
jb
ins
push
je
cwde
nop
and
pop
push
cmp
xor
and
adc
jb
adc
inc
jns
(bad)
pop
enter
outs
iret
and
inc
repnz
xor
adc
or
and
mov
add
and
cmp
push
xor
and
bound
push
inc
imul
xor
inc
sahf
enter
mov
pop
push
add
inc
xlat
mov
xor
pusha
dec
push
popa
push
fmul
(bad)
jns
adc
sub
dec
pop
push
test
mov
xor
push
and
xchg
lock
inc
jne
sub
mov
(bad)
nop
sbb
pop
xor
cmp
addr16
or
jae
mov
pop
add
(bad)
xchg
fild
es
sub
ins
mov
nop
mov
add
pop
shr
inc
test
gs
or
pop
or
push
and
mov
pop
pop
push
inc
jb
retf
and
(bad)
sti
sub
inc
and
inc
popa
adc
(bad)
mov
adc
inc
fimul
cmp
inc
scas
sbb
outs
or
adc
mov
push
or
push
or
xor
cmc
inc
jb
clc
iret
mov
mov
push
pop
dec
ins
jo
xchg
and
and
cmc
iret
mov
sub
inc
sti
(bad)
and
in
(bad)
or
popa
mov
pushf
cmc
xor
loop
pop
push
(bad)
lods
or
pop
xor
xor
fimul
popa
sbb
call
add
out
mov
add
mov
or
add
(bad)
call
or
in
enter
xor
ret
out
in
inc
lock
jmp
fistp
nop
or
nop
sysenter
dec
xchg
inc
and
inc
(bad)
cmovo
enter
adc
inc
dec
cmp
adc
nop
pop
jb
dec
or
and
pop
adc
add
jge
into
cmp
add
jg
pop
sbb
fld
int
fisubr
es
sub
pop
add
sti
imul
js
add
dec
je
sbb
mov
cmp
fldcw
int
push
nop
es
jbe
add
(bad)
adc
ins
dec
mov
or
lock
jae
dec
clc
mov
jl
jns
dec
hlt
mov
or
stc
xchg
lock
xchg
mov
or
nop
out
call
mov
aam
loopne
pop
sbb
xor
push
lock
mov
adc
add
enter
pop
ror
inc
call
rcr
js
fcomp
enter
jne
ret
cmps
jns
std
scas
test
push
xor
pop
dec
dec
loopne
or
jno
push
out
push
les
sub
pop
push
int
jmp
out
push
fucom
inc
push
or
jne
jmp
xor
enter
inc
jmp
lahf
inc
jecxz
mov
push
sbb
cmp
(bad)
mov
lock
add
outs
daa
fs
xor
xchg
movs
mov
test
mov
call
inc
mov
add
mov
push
cmp
pop
mov
rol
mov
dec
cli
rol
shl
xchg
and
lahf
bound
push
add
push
jecxz
test
iret
or
repnz
cmp
mov
dec
add
xchg
jne
pushf
xchg
sti
lea
ins
cdq
shr
push
add
mov
fist
push
dec
push
add
pop
in
pop
mov
pop
pop
inc
cs
dec
clc
test
bound
pop
mov
je
sbb
inc
jne
cs
test
dec
loopne
sub
inc
shl
(bad)
add
clc
jmp
and
and
pop
or
or
jl
inc
xor
lea
in
(bad)
push
call
push
stc
rcl
test
aaa
jnp
sub
xchg
inc
sub
inc
pop
jmp
mov
sahf
jmp
leave
ror
mov
mov
in
xor
dec
repz
dec
jnp
mov
xchg
jbe
call
pop
in
jnp
add
xchg
daa
in
xor
jne
push
cld
lock
and
push
jl
in
fwait
lods
adc
adc
or
add
fmul
jne
sbb
and
je
mov
scas
cmp
lds
fsubr
xor
je
fld
jmp
retf
pop
jg
push
je
retf
jle
icebp
les
sub
or
or
rol
mov
fcmove
sbb
jne
in
add
xor
ret
xchg
cmp
jne
dec
cmp
ds
shr
pop
dec
imul
cmps
dec
scas
jae
jnp
or
mov
adc
pusha
jb
xchg
dec
pop
(bad)
add
cmp
add
push
je
sub
data16
and
sub
clc
push
outs
jne
cmp
add
fwait
adc
sub
jmp
sub
pop
inc
inc
pop
pop
lahf
push
retf
test
test
ror
dec
cmp
adc
cli
rcl
fsubr
aad
je
arpl
lahf
inc
in
pop
push
pop
mov
test
(bad)
clc
fimul
nop
stos
add
pop
movs
aad
or
sbb
in
adc
test
loopne
in
add
inc
loopne
mov
std
stc
push
push
jno
xchg
imul
loopne
movs
in
push
jbe
adc
repnz
pop
or
nop
cmps
dec
call
imul
mov
sub
pop
fld
mov
jmp
push
jecxz
mov
jmp
sub
xor
test
notrack
mov
fimul
push
sbb
(bad)
mov
add
and
and
or
cmp
add
mov
test
retf
cmp
inc
(bad)
adc
sbb
jl
sbb
dec
(bad)
push
jp
aam
xor
sub
pop
idiv
repz
pop
jne
push
daa
bound
(bad)
cmps
imul
or
int3
pop
or
rol
mov
inc
scas
dec
lock
repnz
adc
jne
(bad)
xor
lock
iret
xor
or
test
pcmpgtb
lock
and
(bad)
iret
fdiv
push
pop
cld
inc
pusha
mov
out
call
pop
and
scas
xchg
mov
adc
inc
sub
inc
pop
enter
dec
push
cmc
pusha
or
sbb
jb
test
inc
sbb
imul
lea
scas
jge
jb
xchg
pushf
mov
push
stc
push
repz
mov
clc
push
push
mov
pusha
adc
lds
jp
xor
int3
add
in
jae
push
push
pop
mov
stos
daa
adc
and
adc
add
pushf
std
cmps
cmp
sar
pop
or
adc
cmp
adc
jmp
jmp
push
aaa
in
xor
jmp
mov
inc
pop
pop
xchg
rol
cmp
mov
jns
jne
dec
or
(bad)
adc
or
add
in
lock
mov
pusha
shl
sub
push
jns
mov
push
clc
iret
repz
add
sbb
dec
bound
stc
cmp
push
pop
sub
push
(bad)
out
jmp
mov
cld
add
dec
sbb
sub
and
adc
ror
or
xlat
pop
add
ret
push
mov
xor
in
hlt
dec
loopne
dec
inc
add
int3
leave
and
clc
(bad)
dec
repnz
xor
sbb
and
aaa
jb
dec
dec
ror
adc
mov
pushf
and
inc
pop
cwde
pop
repnz
pusha
clc
jl
in
inc
jle
pop
cwde
and
push
lahf
sbb
les
mov
adc
cmp
sub
add
dec
sbb
pusha
jmp
callw
mov
or
fbstp
jecxz
aaa
iret
add
inc
dec
test
es
fwait
mov
xlat
mov
les
add
fild
or
xchg
fisttp
sti
(bad)
std
jg
sub
xor
jle
mov
lea
sbb
test
and
ds
pusha
test
and
imul
push
cmp
or
push
mov
add
pop
aad
and
adc
mov
in
add
add
(bad)
cmp
push
loopne
cmp
shl
sub
lock
add
jle
dec
inc
inc
cld
scas
in
pop
adc
push
push
outs
sbb
pop
add
push
test
dec
mov
call
adc
shl
mov
or
and
cmp
jmp
mov
iret
repz
mov
repz
out
das
push
in
push
pusha
jns
outs
leave
rol
outs
jle
and
out
mov
je
movs
push
aad
or
data16
push
ss
sub
pusha
rcr
jbe
jle
in
clc
pop
cmp
pop
imul
aam
pop
(bad)
xor
sbb
mov
sbb
inc
rol
xchg
es
aaa
and
adc
add
xchg
mov
push
and
pop
dec
je
jmp
mov
pop
add
je
fwait
or
test
push
push
ficomp
mov
(bad)
mov
test
repz
pcmpeqb
mov
jge
iret
out
and
push
and
data16
cmps
pop
repnz
fadd
ja
xchg
xchg
jns
mov
add
mov
fldcw
xchg
mov
sub
xchg
fwait
or
pop
add
inc
jo
lods
jmp
sbb
fidivr
adc
push
push
mov
push
and
or
aaa
or
add
jmp
add
mov
add
push
xor
pop
push
not
mov
pop
and
enter
or
add
sbb
xor
cmp
adc
or
xchg
pop
push
daa
cmp
rcl
test
mov
pop
or
pop
adc
add
and
push
push
ret
mov
dec
lock
jbe
and
xor
leave
adc
sub
out
push
in
cmp
pop
dec
push
push
sbb
and
pop
push
adc
call
adc
inc
pop
push
mov
add
sahf
neg
add
stc
xor
push
sbb
and
jle
jns
(bad)
out
pop
nop
mov
or
mov
sub
mov
and
jns
add
xchg
xchg
pop
pop
adc
jb
mov
and
add
jl
sub
xor
push
or
adc
nop
sub
add
lds
and
mov
and
inc
cmps
adc
adc
stos
adc
iret
loop
sahf
div
(bad)
push
lock
add
or
sbb
adc
iret
adc
sbb
test
pop
mov
lock
adc
mov
mov
adc
pop
and
or
xchg
hlt
inc
mov
les
and
mov
jns
fld
in
or
jne
adc
shr
sbb
popf
or
mov
add
add
sub
test
fdiv
jecxz
(bad)
sub
enter
adc
mov
dec
(bad)
dec
test
rcr
sub
cdq
add
xchg
push
hlt
jmp
dec
loopne
add
mov
mov
enter
xor
inc
mov
iret
and
cmc
add
adc
mov
jg
call
and
cs
mov
outs
call
test
sbb
(bad)
outs
aas
(bad)
inc
es
inc
sbb
aaa
pop
enter
aam
retf
out
ucomiss
cmp
push
bound
sahf
mov
fdivr
push
sub
lods
mov
iret
repz
xor
pop
outs
adc
pop
(bad)
dec
lods
xchg
in
push
push
mov
ins
inc
aaa
and
fsub
sub
add
pushf
sbb
and
sbb
push
cdq
sub
mov
and
and
jle
pop
push
or
out
mov
pusha
inc
and
inc
xchg
adc
pusha
outs
xchg
and
arpl
inc
test
cs
das
pop
jns
cmps
cmp
mov
out
jmp
out
sahf
outs
pop
sub
push
gs
adc
lahf
ror
daa
scas
das
fstp
mov
and
add
and
pop
inc
xor
push
sub
add
js
mov
fiadd
adc
add
inc
out
sub
daa
jmp
retf
and
inc
nop
push
cmp
sbb
sub
cmp
adc
inc
jmp
lea
inc
push
and
dec
pushf
push
fs
push
mov
jmp
ins
add
loope
pop
jne
dec
xor
test
adc
or
mov
mov
xor
xchg
fs
in
xor
out
out
push
rol
in
stc
jb
nop
out
xor
dec
jmp
sbb
jmp
imul
adc
scas
inc
add
xor
sahf
out
sahf
aaa
push
fs
popf
cmp
leave
inc
xor
jl
ins
repnz
xor
daa
call
mov
mov
cdq
in
test
add
call
dec
xchg
adc
pusha
iret
sbb
sbb
inc
mov
push
scas
jp
xor
dec
rcr
fild
pop
sub
sub
add
mov
add
sbb
or
push
sbb
and
rcl
mov
int3
sbb
clc
adc
push
das
sbb
mov
pop
add
loope
dec
mov
hlt
push
add
sahf
out
adc
sub
jae
cmps
pop
repnz
inc
sbb
pop
xchg
push
out
sahf
popf
test
or
inc
int
repnz
ret
mov
fst
pop
push
sbb
xchg
sbb
pop
rcl
push
imul
sbb
inc
mov
jne
and
mov
popa
cmp
inc
jmp
loopne
cmp
div
int3
xchg
add
push
xor
pop
leave
xor
lock
(bad)
lds
loopne
rol
cmps
fld
fstp
dec
ds
fwait
jmp
add
daa
shl
(bad)
xchg
and
out
lock
pusha
add
test
adc
add
adc
push
xor
daa
jns
popa
mov
clc
fwait
and
sub
leave
xor
clc
push
inc
scas
call
loopne
sub
jns
out
push
push
jbe
mov
lods
mov
repz
fnstsw
push
pop
cmp
cmc
or
jns
pop
push
xor
mov
arpl
sub
inc
fbstp
pop
repnz
pop
fcmovnu
pusha
in
jl
adc
imul
aaa
sbb
dec
cmp
inc
cmps
jbe
neg
and
inc
or
push
sub
add
mov
mov
repnz
in
or
inc
dec
dec
repz
and
cmp
or
sub
and
je
int3
iret
rcr
and
cs
aaa
in
repz
jb
cmp
push
out
rcl
push
aad
sbb
sahf
jmp
aam
push
jbe
sbb
mov
sbb
dec
cmc
inc
rcl
adc
icebp
sub
gs
mov
mov
jno
dec
dec
mov
jnp
out
loopne
ins
jmp
inc
adc
adc
jmp
jno
imul
test
dec
xchg
cmp
les
jg
stos
div
repnz
outs
or
push
dec
repz
int3
in
sti
or
lea
push
sbb
cs
inc
push
cmp
cmp
xchg
leave
xor
add
sbb
fisttp
xchg
fild
sub
mov
sbb
push
movs
and
gs
inc
(bad)
fild
sub
dec
jle
inc
repnz
sbb
jo
das
add
inc
shr
push
lahf
and
dec
adc
xchg
xchg
mov
xchg
call
pop
mov
in
movs
xor
loopne
dec
dec
dec
loopne
inc
mov
pushf
add
xchg
adc
mov
mov
adc
pop
mov
ds
fld
test
ds
data16
cmp
les
or
xor
xor
or
call
sub
cmp
and
mov
mov
push
mov
(bad)
rcr
out
add
test
lahf
out
mov
fs
xor
or
xor
and
gs
(bad)
movs
jge
push
sub
xchg
enter
sub
add
pop
xor
ret
rcl
sub
addr16
push
mov
xor
jo
or
inc
or
inc
pop
repnz
pop
pop
inc
ins
jp
imul
scas
push
ss
or
repz
(bad)
lock
sbb
cmp
aaa
nop
sub
adc
cmp
mov
xor
xchg
or
cmp
fwait
push
and
enter
and
inc
add
(bad)
xchg
inc
or
add
in
cmp
push
push
and
or
inc
in
fild
jb
add
push
sbb
leave
push
fild
leave
add
fild
das
xchg
add
inc
test
add
jge
in
pushf
cmp
ins
fisub
fs
mov
sahf
cmps
stc
push
or
push
bound
test
pop
xchg
jns
ins
repnz
cmp
scas
retf
in
sub
push
and
aaa
inc
jnp
add
or
repnz
(bad)
xor
rcl
jo
jl
stos
pop
mov
adc
mov
add
mov
in
inc
inc
xor
stos
inc
mov
mov
inc
sbb
pop
ror
fdiv
nop
push
inc
pushf
jle
xchg
cmps
cmp
and
add
sub
cmps
jge
cmp
inc
ins
push
adc
daa
mov
sbb
cld
inc
inc
daa
fild
dec
adc
push
stos
pop
sub
xchg
and
test
mov
mov
mov
mov
pop
pop
mov
sbb
fisub
xor
xadd
xlat
(bad)
and
lods
cmp
aam
inc
js
jle
inc
retf
arpl
in
dec
pop
and
cmps
xor
les
popf
push
mov
xchg
and
or
push
cli
dec
push
and
jae
jae
inc
cld
mov
mov
dec
movs
jmp
inc
lock
bound
int
fdiv
jnp
add
and
call
xor
dec
dec
shl
in
sub
shr
inc
inc
add
and
add
bound
cmp
ja
dec
push
(bad)
and
sbb
call
arpl
push
ss
popf
dec
cmp
adc
sbb
scas
dec
shl
aaa
push
and
cmp
xor
leave
mov
nop
out
cs
test
or
sub
and
adc
inc
rcl
cmp
push
test
push
add
in
gs
dec
ror
or
adc
jb
cwde
in
outs
rcl
or
jo
stos
add
imul
jle
rol
fiadd
dec
and
cmp
repz
mov
stc
sahf
out
dec
lods
fcomp
or
sahf
out
adc
test
add
aas
sbb
add
dec
adc
dec
cmp
lea
pop
add
data16
clc
sbb
xchg
pop
push
(bad)
cmp
sub
stc
cmps
fadd
rcr
nop
xchg
lock
add
rcl
iret
aaa
push
add
inc
inc
call
xor
sbb
ror
dec
push
loopne
jg
xor
lods
shl
xchg
dec
xor
pop
loope
fdivr
jb
(bad)
xor
aam
nop
out
xor
ror
fld
int3
cmp
jne
shr
shl
ins
int
mov
mov
call
sub
sub
xor
push
(bad)
ror
in
mov
add
push
dec
repz
lea
pop
pop
dec
ja
fucom
cmp
ds
pop
sub
shr
inc
bound
mov
dec
es
and
xchg
sar
mov
lods
jno
mov
mov
ret
retf
mov
in
cmp
outs
xchg
cmp
push
popa
and
loope
iret
fwait
test
push
imul
es
outs
mov
(bad)
shl
fld
stos
or
cwde
jmp
add
aaa
xchg
dec
mov
jmp
pushf
nop
nop
inc
sub
loope
dec
dec
sahf
cmp
jb
mov
ja
mov
pop
loopne
cli
or
retf
add
adc
nop
mov
add
mov
sub
push
and
lods
(bad)
ret
in
push
mov
push
xor
in
inc
inc
cwde
call
cmps
xchg
push
inc
pusha
xchg
push
adc
xor
enter
push
in
xchg
xor
jne
pusha
mov
fistp
in
dec
in
jb
ds
in
sub
adc
loopne
es
test
cmp
test
icebp
repz
out
std
and
cmps
stc
cmp
pushf
mov
out
dec
mov
pop
or
es
aas
pop
js
cmp
pushf
fs
das
or
dec
movs
dec
es
stos
or
mov
xor
inc
cmp
cwde
cmp
sbb
lods
cmp
or
in
inc
mov
or
(bad)
loopne
or
pop
mov
ret
daa
pop
mov
lods
adc
add
lock
xor
jl
adc
push
push
and
jl
mov
xchg
inc
xor
outs
adc
xor
and
push
sahf
cmps
cmp
into
push
pop
ins
push
mov
jns
or
sub
cmp
out
repz
pop
push
je
scas
or
adc
retf
push
and
(bad)
in
call
aaa
lea
or
mov
mov
imul
mov
mov
mov
cmp
and
lods
dec
sbb
adc
lods
fwait
test
or
and
popf
pop
mov
es
add
pop
mov
and
dec
out
cwde
pushf
jno
and
ficomp
xchg
jecxz
dec
inc
pusha
xchg
popf
xchg
pop
mov
cwde
nop
cmp
dec
mov
jmp
adc
cwde
mov
mov
and
shl
shl
xor
test
xchg
mov
push
pop
or
or
fisttp
and
dec
pusha
and
sub
inc
inc
sub
stc
or
jg
je
pushw
jg
std
das
outs
or
bound
or
mov
add
jmp
std
or
js
dec
cmps
add
or
push
stos
jns
data16
push
cmc
pop
sar
test
aam
and
mov
clc
ja
or
add
in
data16
and
(bad)
dec
retf
stos
lods
movs
hlt
ret
pop
sbb
repz
pushw
cmp
push
lea
sub
outs
inc
ins
cs
xchg
dec
or
in
rol
pop
inc
lock
scas
or
push
and
add
pop
arpl
xor
js
cmps
aam
mov
pop
mov
add
mov
call
inc
lahf
ss
lahf
repnz
adc
mov
push
or
xor
mov
and
add
aas
push
jmp
sub
xchg
xor
dec
bound
jmp
mov
push
pop
dec
pop
xor
or
add
(bad)
repnz
or
cmps
dec
lahf
and
ficomp
outs
fstp
fwait
data16
pop
add
fistp
in
sbb
or
test
scas
fadd
push
or
push
lahf
cmp
xor
(bad)
xchg
sbb
inc
or
inc
sub
or
or
xchg
add
mov
ror
mov
lahf
cld
add
inc
ins
jo
jns
jo
and
test
or
into
xor
lea
pop
push
mov
push
ds
pop
jnp
ins
add
inc
outs
jne
xchg
or
jg
jmp
add
ins
mov
(bad)
mov
addr16
mov
dec
imul
sbb
repz
inc
pop
lahf
mov
aam
aas
inc
arpl
adc
push
pushf
pop
and
inc
adc
adc
push
rcl
cmp
pop
xchg
enter
shl
aaa
ss
xchg
loopne
lock
int
jle
jge
and
adc
push
dec
cmps
call
dec
push
mov
inc
sti
not
cmp
in
push
add
push
jb
xor
cmp
movs
hlt
retf
xchg
cld
mov
or
aaa
loope
pop
and
push
or
jg
xor
or
mov
lods
test
dec
pusha
test
repnz
je
inc
fst
jb
jmp
and
(bad)
aas
in
cmps
test
inc
enter
outs
inc
outs
jns
inc
dec
sub
test
pushw
aas
aad
or
pusha
or
push
cli
push
mov
imul
adc
sbb
ja
nop
fisubr
push
stc
ins
cld
pop
imul
push
ins
dec
xor
jl
jnp
sbb
cmp
cs
inc
lock
out
jb
imul
cmp
in
mov
xor
cld
scas
push
cmp
ret
out
push
adc
popf
shl
and
hlt
pop
pop
jge
and
int
and
jnp
je
or
imul
(bad)
adc
into
add
aad
jo
or
pop
mov
lea
test
cmp
inc
pop
and
add
push
add
ficomp
inc
add
add
mov
fimul
and
adc
adc
inc
mov
push
sti
or
lods
std
scas
pusha
jo
jo
and
pop
cmp
xor
push
mov
push
test
repz
adc
mov
push
dec
rcl
stos
hlt
movs
loopne
or
cmp
aaa
lock
pop
sub
sbb
mov
stos
ret
daa
lods
add
push
ret
xor
lock
jle
add
stc
mov
push
pop
add
fidivr
cmp
adc
aas
push
leave
xor
cmp
dec
pop
or
jbe
and
sub
call
cmp
das
popa
or
adc
mov
sti
cmp
(bad)
pop
inc
cmp
setg
inc
mov
lods
pop
ds
fiadd
push
fnstenv
loope
xchg
inc
push
daa
bound
add
lahf
das
lock
dec
bnd
push
or
movs
cmps
and
jo
je
mov
xor
dec
sbb
push
add
cmp
dec
gs
push
lock
sbb
ja
mov
loop
or
in
fidiv
hlt
inc
sub
sbb
adc
imul
push
jb
add
pop
fwait
arpl
jne
aaa
rcr
jnp
idiv
mov
ins
adc
mov
and
mov
shl
sbb
repz
and
xchg
xchg
sete
xchg
xchg
cwde
xchg
xchg
xchg
xchg
cdq
call
popf
sahf
lahf
adc
add
xchg
mov
xchg
xchg
lea
xchg
xchg
jno
jae
inc
sbb
les
add
or
xchg
add
dec
push
inc
call
pop
mov
jmp
leave
mov
push
add
mov
test
add
xor
ret
fbstp
jp
aad
ins
jmp
cs
dec
xor
cmp
jle
fcomp
rcr
cmp
mov
mov
xor
in
js
jge
mov
sar
sbb
lock
mov
(bad)
test
ins
add
ror
or
pop
pop
adc
fbld
sbb
mov
push
pop
dec
jo
push
or
sbb
xchg
and
cmp
je
mov
dec
and
sbb
inc
add
and
jmp
mov
and
je
jmp
cmp
sbb
test
or
das
sub
mov
mov
cmp
je
out
push
(bad)
fistp
push
lar
dec
ja
mov
adc
loop
mov
mov
std
dec
sub
push
add
add
cmp
mov
add
mov
xor
or
jle
add
cmp
ss
ds
mov
pop
push
push
adc
add
sar
or
(bad)
or
test
call
(bad)
fnstenv
retf
out
mov
mov
or
sbb
or
xlat
cli
mov
jae
push
mov
and
inc
adc
mov
push
adc
pmaxsw
pop
xchg
outs
sbb
sub
jmp
or
stos
add
(bad)
cld
push
lds
out
xlat
call
test
addr16
lock
jle
mov
jb
inc
cmp
pop
push
ret
call
or
rol
bound
or
enter
stos
mov
inc
or
mov
fadd
and
or
sbb
sub
jo
sub
inc
fmulp
ret
faddp
push
or
xor
jmp
cmp
mov
or
xchg
mov
test
inc
pop
lock
(bad)
cld
and
sbb
popa
mov
scas
push
cmps
mov
push
push
push
add
or
or
fnstenv
aam
xchg
sbb
pop
imul
hlt
xchg
jno
das
pop
scas
imul
or
inc
jp
hlt
sub
hlt
or
scas
popf
cmc
pop
mov
bound
mov
dec
sar
in
fadd
jl
mov
cmp
sub
push
loopne
mov
xchg
xchg
inc
push
jne
xchg
cmp
(bad)
pop
push
push
xor
iret
push
push
inc
data16
pop
ja
imul
xbegin
cmp
xor
xchg
pop
inc
jnp
adc
jmp
loop
loopne
sahf
ja
sahf
out
dec
pop
push
sub
dec
push
pop
mov
jmp
pop
cmps
adc
movs
add
add
outs
pushw
or
mov
cmp
cmp
or
push
stc
fwait
arpl
pop
retf
add
mov
mov
stos
and
cmp
aaa
or
iret
repz
jecxz
push
imul
mov
or
mov
pop
sub
mov
fisub
fistp
or
adc
sub
ja
and
inc
dec
push
pop
jo
mov
xchg
and
add
cmp
jmp
adc
push
xor
iret
or
pop
xchg
pop
fist
jnp
sub
pop
pop
add
enter
push
int3
rcl
std
fild
sbb
adc
ss
adc
fdiv
mov
mov
ja
jae
mov
loopne
inc
pop
adc
into
js
add
or
dec
(bad)
aam
sub
pop
fimul
cmp
jecxz
fprem1
js
pop
retf
mov
jnp
inc
fdivr
mov
mov
inc
mov
neg
mov
mov
fldenv
out
push
(bad)
cmp
pop
mov
pop
dec
add
xchg
inc
ins
nop
dec
sbb
or
and
inc
imul
call
inc
cs
data16
outs
push
sar
mov
sbb
sbb
adc
add
inc
ins
outs
sbb
inc
jmp
lea
mov
ins
jns
inc
ins
popa
nop
scas
dec
dec
xor
mov
push
pop
rol
mov
ss
push
imul
mov
je
ins
neg
ja
or
cmps
or
dec
imul
in
push
shr
or
add
add
xchg
(bad)
add
dec
cmp
lock
cwde
gs
add
ror
add
add
es
jmp
sbb
fimul
jns
out
ins
addr16
jae
js
outs
xchg
fcom
inc
jne
and
call
inc
jbe
push
gs
test
sub
sbb
stc
xchg
and
push
sub
and
aaa
mov
pusha
test
shl
mov
pop
rol
and
adc
and
add
or
mov
sbb
mov
jo
jge
int
dec
lods
outs
mov
scas
cs
xor
ds
or
in
stc
scas
int3
int3
sub
iret
jmp
lods
nop
and
scas
add
nop
adc
pop
mov
mov
scas
hlt
hlt
or
jl
inc
and
inc
sbb
nop
fdiv
cmps
push
mov
inc
sti
xor
xor
mov
jb
jns
or
dec
imul
enter
imul
in
push
add
push
sbb
daa
ficom
inc
jae
inc
jae
sub
bswap
ins
jo
fcmove
and
push
mov
inc
enter
push
cwde
nop
jb
or
mov
cld
adc
jno
dec
sbb
add
(bad)
je
push
out
ins
je
fldcw
and
lods
call
in
add
stos
dec
push
mov
and
mov
dec
jle
fwait
inc
add
mov
jne
fs
jne
or
js
push
xlat
cs
pusha
pop
push
ins
cmps
cwde
pop
js
push
leave
jnp
xchg
pop
test
mov
push
sub
push
add
(bad)
jmp
in
pusha
lock
lahf
mov
add
jnp
out
pop
and
add
test
mov
adc
or
shl
push
int3
int3
mov
jne
outs
repnz
sbb
add
mov
cwde
push
xchg
aaa
mov
(bad)
lahf
inc
or
pop
je
ins
sub
adc
nop
fucom
pop
xor
cmp
ja
movs
cli
sub
cmovns
(bad)
fs
jo
vdivss
jg
xor
pushf
jae
push
rcl
sahf
cmps
pusha
scas
cmp
add
ja
call
ja
loop
sbb
push
push
dec
mov
mov
int
mov
cmps
pmuludq
addr16
push
adc
ss
xchg
outs
lods
pop
fsubr
out
idiv
pop
pop
sbb
push
scas
fstp
das
xor
lahf
cmps
jne
stos
sahf
hlt
dec
in
mov
in
adc
add
push
les
lods
ror
nop
mov
ret
pusha
cli
xchg
es
push
shl
xchg
or
mov
fstp
inc
add
loope
fsubr
jns
sbb
outs
cld
jbe
daa
in
cmp
push
xchg
dec
sub
outs
movs
mov
mov
lock
adc
movs
mov
loope
into
outs
inc
mov
sub
outs
mov
les
aam
outs
or
out
into
ins
dec
pop
push
pusha
or
mov
mov
pop
cwde
add
mov
push
icebp
or
mov
push
lods
mov
mov
ds
pop
push
cs
mov
lahf
or
add
fisttp
push
mov
push
mov
dec
inc
mov
out
pushf
pop
pop
leave
repz
scas
out
or
adc
cmps
add
fmul
jnp
imul
and
pinsrw
mov
ret
add
sti
sti
test
movs
adc
repnz
repnz
cmp
rol
push
and
repnz
out
add
inc
repnz
shl
aaa
shr
push
cmp
test
or
test
sbb
xchg
or
ret
inc
lea
std
out
out
in
push
in
daa
or
or
inc
push
in
adc
in
push
in
and
pop
inc
push
sub
fs
pusha
jno
iret
jnp
sbb
dec
jge
push
bound
sahf
cmps
stc
cmp
mov
ret
rcr
ds
jns
sti
or
and
adc
adc
inc
scas
test
outs
jle
cmps
jge
aad
call
dec
repz
sub
inc
add
xor
mov
fwait
or
dec
push
or
lock
push
pop
rol
pushf
into
add
or
inc
cmps
sbb
je
xchg
xchg
retf
add
shl
mov
aad
ret
xabort
pop
push
mov
mov
jle
xchg
jns
call
cmp
mov
push
and
push
push
int3
xor
shr
je
push
inc
lock
push
xor
lock
jg
(bad)
and
inc
xor
sbb
inc
adc
enter
inc
add
sub
mov
sub
xor
and
adc
aad
inc
inc
nop
(bad)
mov
mov
jecxz
sbb
call
adc
mov
mov
scas
fcom
movs
cmp
or
inc
aam
xchg
inc
push
aam
test
out
push
shl
jmp
add
xchg
pop
inc
(bad)
int
dec
add
in
add
call
scas
mov
and
adc
cmp
gs
push
cmp
int
push
sahf
xchg
push
pop
inc
mov
cmps
xchg
sub
adc
inc
push
add
add
lahf
data16
into
hlt
add
xor
push
push
je
clc
xor
(bad)
push
cmp
cli
idiv
(bad)
sti
dec
cli
(bad)
stc
(bad)
clc
push
push
idiv
push
push
push
jmp
call
lahf
in
add
cmp
adc
sahf
idiv
int3
into
loopne
or
cwde
mov
fdivp
push
fadd
sub
or
xor
mov
adc
xor
sbb
add
arpl
cmp
pop
add
jmp
popa
addr16
sub
adc
or
test
shl
hlt
pop
mov
push
adc
imul
arpl
cli
imul
add
xlat
fcomp
mov
mov
dec
sub
cwde
inc
call
clc
out
out
mov
mov
add
inc
neg
or
fadd
sub
sbb
inc
and
ss
pop
xlat
add
dec
xchg
fcom
or
ret
adc
jne
add
pop
push
and
inc
imul
out
add
mov
cmp
or
and
xor
push
or
push
xchg
aaa
loopne
addr16
jb
jne
(bad)
push
lods
dec
mov
scas
aas
and
lock
inc
call
lea
ja
daa
sub
pop
sub
in
push
mov
adc
outs
cmps
add
and
bound
dec
popf
inc
xchg
test
je
mov
sbb
test
lds
loope
imul
inc
sub
mov
mov
outs
iret
in
fcmovnb
je
sub
sub
(bad)
jne
test
fwait
sti
jp
adc
xor
sbb
outs
jmp
pop
xchg
sbb
add
and
rol
(bad)
cmp
stc
mov
stos
test
ret
xchg
adc
dec
xchg
pop
jl
mov
js
mov
popa
push
push
xor
pop
xor
inc
gs
add
dec
or
dec
dec
inc
imul
add
push
and
jnp
inc
rcl
mov
inc
sar
jne
pop
or
pop
add
shl
push
cmp
or
sub
add
pusha
sub
ins
out
mov
push
pop
add
add
mov
mov
int3
sbb
int
dec
ja
lea
in
xchg
cmc
cmp
add
mov
repnz
hlt
ja
xor
bound
jae
jno
xor
(bad)
es
ins
and
or
mov
sub
push
xchg
loope
jnp
jae
pop
aas
cmp
mov
js
jne
addr16
adc
out
mov
push
mov
dec
test
mov
mov
push
mov
mov
cmp
sbb
sub
mov
and
jle
jg
js
or
xchg
pusha
(bad)
movs
imul
pop
mov
xor
adc
test
mov
dec
(bad)
jne
sub
sub
xchg
popf
and
mov
inc
and
push
mov
test
data16
add
pop
stos
mov
and
sbb
xchg
pop
dec
push
std
push
dec
ja
mov
inc
push
ret
fisubr
xchg
(bad)
dec
lea
and
imul
cmp
sbb
hlt
xor
fcmovbe
push
adc
(bad)
mov
cmc
pop
cmp
mov
sbb
in
je
push
rol
fdivr
(bad)
adc
fst
fsubr
and
shr
xor
cdq
test
daa
aas
call
push
add
and
repz
sub
jne
cmp
jne
or
xchg
ss
jmp
adc
inc
std
lea
xchg
sub
(bad)
scas
into
sub
and
test
cmps
dec
pop
dec
mov
jbe
loopne
inc
inc
pop
in
mov
rcl
es
fld
mov
adc
pop
call
add
sub
jp
cmc
jne
push
sbb
aam
and
pop
cmp
loopne
inc
ins
add
ret
jle
push
call
arpl
push
in
int
pop
lock
dec
or
in
(bad)
dec
cmp
add
fld
ins
jne
push
stc
cmp
in
mov
lock
push
mov
adc
ins
scas
mov
call
out
or
scas
mov
(bad)
lock
adc
mov
push
cld
adc
inc
inc
js
xor
fisttp
test
adc
xor
pop
aad
into
shl
jge
and
int
shl
mov
les
sub
mov
lock
stos
loopne
xchg
cmp
add
xchg
push
lahf
jmp
sbb
mov
cmp
daa
mov
js
xchg
ins
hlt
jl
inc
inc
mov
into
pop
or
shl
mov
aad
lods
adc
fdiv
fchs
imul
inc
mov
rol
inc
or
adc
test
cdq
cmp
call
mov
push
std
inc
mov
stos
mov
stos
mov
test
lahf
(bad)
jo
inc
sub
js
in
xor
imul
jb
addr16
push
pop
pop
pop
and
and
cmps
and
aad
enter
sub
add
test
cli
cwde
arpl
sahf
mov
or
nop
sbb
jno
shr
shl
es
jae
xlat
enter
xchg
(bad)
fnsave
jp
mov
icebp
popf
cld
adc
ret
jg
fs
ins
or
in
nop
push
and
sbb
sbb
das
sub
je
push
shl
and
fistp
jbe
enter
cdq
shl
push
xchg
mov
push
jb
sbb
add
popf
addr16
push
enter
jnp
outs
or
push
mov
mov
xchg
cld
mov
sub
push
enter
xchg
sbb
pop
and
xchg
mov
adc
add
loopne
mov
jae
addr16
call
or
mov
dec
stos
or
inc
or
movs
jg
mov
xchg
cmp
mov
mov
aad
dec
(bad)
mov
lock
not
pop
popa
and
cmps
loope
mov
or
xor
std
js
les
mov
sbb
mov
mov
gs
lea
mov
aas
and
cmp
cld
mov
mov
or
xchg
loope
and
mov
xchg
adc
movs
cmp
jne
sbb
sub
or
inc
test
test
adc
sub
or
repz
jne
fcom
daa
in
and
adc
or
fisttp
or
ja
test
mov
xlat
ret
div
mov
test
xor
pop
dec
(bad)
call
or
mov
cmps
sub
mov
outs
adc
leave
and
pop
test
retf
sahf
push
mov
and
xor
jno
xchg
and
dec
push
xor
cmp
jbe
fstp
xchg
adc
movs
inc
push
push
stos
mov
cwde
or
cmp
dec
inc
inc
bound
sub
cmp
push
or
or
sbb
repnz
mov
popa
movs
mov
adc
or
hlt
rcr
mov
cdq
(bad)
rol
or
out
cmp
cdq
pop
pop
adc
jle
xor
mov
mov
lahf
add
clc
push
or
mov
jne
and
adc
dec
pop
mov
xchg
call
pop
aas
xor
cmp
push
ja
inc
clc
je
ret
icebp
std
jnp
ret
hlt
movs
cdq
lods
cmp
add
sub
mov
test
xchg
shl
xor
pop
jns
sbb
mov
fmul
push
xchg
or
sbb
and
sbb
cmp
mov
sub
cmp
call
imul
mov
fidivr
add
test
cmp
das
jo
push
arpl
aas
or
inc
sub
mov
cdq
rol
add
pop
or
dec
inc
push
aas
nop
rol
adc
mov
or
leave
gs
mov
aam
lahf
dec
add
cmc
add
add
jmp
add
mov
stos
mov
sbb
xor
loop
sub
lea
or
push
inc
ins
clc
in
mov
ins
enter
jb
out
mov
iret
inc
shl
push
mov
add
jecxz
and
call
add
mov
adc
mov
into
in
mov
test
call
inc
dec
xchg
mov
push
adc
dec
data16
and
outs
sbb
retf
or
ficomp
rol
stc
add
adc
dec
mov
jmp
xchg
retf
aaa
and
cmp
lea
jle
inc
cmp
jge
add
adc
jne
sbb
int3
cmps
fidiv
leave
dec
mov
leave
mov
std
jle
loopne
push
lds
mov
inc
inc
sbb
sub
sbb
fsubr
push
mov
rol
mov
mov
leave
shl
add
pop
push
lods
push
pop
pop
stos
shr
xchg
lods
enter
lea
ror
mov
pop
shr
(bad)
add
add
aam
xor
mov
test
dec
mov
push
fstp
lock
jle
fidiv
and
add
or
push
fs
dec
add
das
xor
dec
mov
sub
jg
or
shl
mov
cmp
pop
push
cmps
mov
sbb
xchg
inc
ja
mov
xchg
and
outs
(bad)
and
rcr
mov
dec
fisttp
push
push
inc
xor
cmc
in
sbb
fucompp
cld
sub
and
cmp
adc
popf
inc
jne
xor
in
push
cmp
jne
or
cmp
adc
shr
test
das
dec
or
or
pop
pushf
and
mov
popaw
xor
mov
loop
sbb
sbb
or
inc
jb
cdq
add
and
cmp
cmps
std
shr
push
mov
je
pusha
int
dec
mov
and
add
sbb
add
add
sbb
call
pusha
mov
dec
popa
mov
pop
fadd
pop
rcl
push
cmovns
es
push
loop
mov
ffree
sar
push
in
adc
sbb
xchg
sbb
and
jo
or
je
stos
adc
btr
dec
mov
das
pop
add
mov
xchg
inc
shr
pop
movlps
fisubr
fmul
out
or
adc
mov
enter
add
mov
jo
xor
into
jb
movs
(bad)
das
mov
pop
ja
and
bt
jb
ins
mov
add
aam
ret
ret
ret
inc
cmp
jne
imul
pop
scas
adc
xor
dec
xchg
inc
adc
pop
ins
add
add
or
push
sbb
cmovge
in
push
sbb
scas
adc
shl
xchg
js
inc
adc
and
push
shl
adc
pop
outs
imul
mov
mov
xchg
or
ins
mov
lods
mov
sbb
xchg
push
(bad)
mov
push
xchg
fsub
gs
jne
push
in
aas
and
pusha
outs
cs
or
mov
push
aam
sar
pop
pop
jne
jb
jne
inc
sub
mov
add
xor
jmp
pop
aas
mov
inc
or
xor
mov
sub
push
sbb
sbb
aam
xchg
inc
push
push
add
mov
push
add
and
mov
or
fld
cmps
jns
pop
jnp
push
sbb
pop
jns
jl
test
add
nop
daa
lahf
cmp
in
lds
add
shl
sub
dec
pop
mov
ret
sbb
or
rcl
inc
inc
mov
xchg
pop
imul
clc
xor
call
xchg
cmp
or
mov
cmp
dec
jne
pop
sub
outs
mov
shl
or
jno
cld
jbe
push
add
imul
movs
xchg
dec
cld
inc
mov
inc
add
inc
add
test
or
and
mov
sub
cs
pusha
inc
cld
and
add
push
adc
mov
aam
jns
add
or
inc
adc
mov
mov
sub
and
xor
cmp
xor
je
push
fisub
and
lahf
ret
push
ja
(bad)
or
sbb
jle
loop
inc
xor
fsubr
jo
and
sar
inc
sbb
adc
mov
es
push
dec
adc
fst
inc
jae
movs
je
imul
dec
push
jno
mov
fadd
lods
jo
out
adc
xchg
dec
(bad)
xor
cld
lock
cmc
xchg
mov
in
push
in
pop
dec
jo
or
dec
inc
pop
adc
js
repnz
jecxz
pusha
add
imul
cwde
jb
shr
xchg
clc
imul
test
movs
out
push
lock
aaa
mov
rep
xchg
mov
popa
in
into
sub
cld
jmp
add
rol
mov
sbb
and
push
and
fsub
nop
data16
sbb
hlt
and
push
ja
mov
sub
add
adc
pop
jecxz
ins
sub
xchg
push
cmps
fimul
xor
sbb
or
rol
add
inc
sbb
xor
fsub
leave
dec
inc
lock
hlt
lea
jbe
xor
add
rol
dec
hlt
lahf
pop
mov
pop
aas
inc
add
(bad)
stc
lea
push
xchg
stos
inc
je
xchg
xor
or
xor
test
sbb
inc
leave
mov
sbb
inc
sbb
add
mov
cld
shr
inc
cld
or
push
test
sub
or
ja
pop
sbb
inc
clc
in
sbb
stc
test
xchg
cmps
jmp
cmps
mov
jecxz
sub
sbb
enter
sub
hlt
(bad)
xor
sbb
xor
inc
push
jo
or
jb
nop
ins
mov
cmp
aaa
mov
xchg
retf
jne
nop
cmp
jmp
addr16
movs
hlt
hlt
pop
js
and
mov
push
cs
mov
fmul
mov
js
mov
movs
sbb
push
jno
fld
fnstenv
(bad)
clc
test
jo
or
jne
les
repnz
sub
mov
pusha
or
sti
scas
push
(bad)
stos
enter
sbb
or
leave
cmp
int
iret
cmp
cmp
mov
sbb
and
push
retf
jp
sub
pusha
jb
stos
les
add
sub
(bad)
in
test
pop
dec
sub
xchg
inc
xor
pop
add
daa
or
movs
ss
jne
dec
cmp
pop
sub
scas
nop
(bad)
retf
cmp
push
or
leave
imul
mov
add
sub
sub
bound
dec
push
in
scas
add
pop
jmp
mov
icebp
pop
pop
loop
loope
jmp
fidiv
pop
xlat
xchg
sbb
inc
pushf
sub
stos
sbb
loopne
mov
push
and
push
ficomp
test
and
mov
(bad)
stos
int
cmps
out
stos
mov
daa
push
out
aas
lods
adc
inc
mov
lods
js
mov
xlat
xchg
popf
lods
dec
add
enter
pop
(bad)
pusha
test
cmp
loop
sub
ror
stos
outs
sub
outs
and
mov
dec
(bad)
das
xor
lock
imul
jo
adc
push
mov
pop
adc
xor
pop
cmp
mov
inc
sbb
add
clc
rcl
dec
loopne
aam
jmp
xor
adc
push
sub
std
and
or
mov
jne
push
adc
jns
icebp
movs
fxch
sbb
jne
or
add
inc
dec
jge
out
sahf
jno
sub
or
outs
add
mov
pop
dec
(bad)
jmp
mov
call
or
add
inc
loopne
adc
or
mov
call
and
nop
pop
cmp
cs
jne
push
or
hlt
add
sub
jns
scas
les
sub
mov
mov
out
adc
sbb
cmp
cmp
in
add
mov
call
mov
imul
and
xor
push
mov
or
mov
nop
inc
inc
lea
out
ja
pop
sub
call
push
jg
or
mov
pop
cli
rol
add
adc
cmp
lock
inc
or
add
xchg
or
in
pop
or
sbb
daa
mov
or
sub
xchg
ror
xor
mov
or
into
inc
mov
sub
push
dec
inc
cmps
test
sbb
cmp
icebp
or
jg
leave
xchg
cmp
pop
arpl
pop
rol
jb
sbb
das
sahf
(bad)
sbb
xchg
fadd
push
test
jo
mov
or
add
add
and
mov
imul
repz
es
jg
mov
xlat
jnp
imul
mov
or
cmp
sub
and
xor
fisttp
dec
add
sbb
mov
inc
mov
inc
aam
sbb
inc
fmul
xor
sbb
fld
add
push
loopne
(bad)
into
es
sub
push
sbb
lock
(bad)
mov
xchg
aaa
fld
push
or
iret
out
sti
or
sub
fbld
mov
fmul
mov
mov
mov
jo
ror
mul
inc
sbb
das
or
or
cmp
mov
xlat
add
cmp
dec
mov
(bad)
call
adc
or
jge
xchg
inc
add
inc
adc
or
lea
jmp
cld
imul
cmp
xor
xchg
jle
popf
ret
mov
dec
stos
imul
and
(bad)
sub
push
shl
ret
push
in
mov
in
inc
add
push
mov
repnz
call
(bad)
mov
outs
add
and
inc
outs
sbb
(bad)
xchg
cwde
retf
sbb
dec
mov
pop
pop
push
outs
dec
(bad)
mov
(bad)
mov
je
in
dec
test
push
sbb
sbb
nop
push
(bad)
outs
add
add
push
sub
inc
and
jg
push
push
test
lea
push
seto
ret
xchg
sbb
jle
push
in
pop
xchg
sub
nop
cdq
ja
dec
inc
fcmovnb
ins
mov
push
sbb
add
ror
lds
pop
lock
add
shr
shr
or
and
or
and
jg
jl
(bad)
sar
and
push
loope
mov
cmp
jne
add
jb
mov
sbb
jle
jne
loop
push
xchg
and
hlt
jl
ret
dec
in
mov
sbb
sub
pop
cmps
and
adc
test
call
mov
or
shl
lock
adc
xor
xor
mov
fsub
cwde
xchg
xchg
pop
popf
sub
add
push
cmp
dec
ret
rol
jnp
call
lods
das
sbb
or
add
add
xor
jmp
sbb
call
pop
js
test
jne
sbb
sbb
lahf
xlat
sbb
mov
mov
out
ins
outs
mov
sub
fwait
push
pop
sub
ins
xchg
mov
mov
and
clc
ins
xchg
cmp
cmp
in
ficomp
adc
sbb
jbe
and
or
pop
pop
jl
inc
mov
js
jecxz
cmps
mov
and
pusha
daa
scas
mov
sub
mov
push
and
lea
loope
sub
rcl
ja
sbb
popf
xchg
cmp
sbb
add
and
xor
cmps
cld
pop
or
cs
add
cmp
xor
div
adc
stc
stos
xchg
retf
push
ret
pop
ror
adc
mov
jmp
push
(bad)
fidiv
jb
test
retf
test
les
inc
cs
(bad)
outs
adc
lods
push
dec
fmul
mov
pop
sbb
popf
sbb
jns
int
cmp
or
inc
mov
stc
inc
mov
xor
add
add
jbe
mov
sbb
or
sbb
adc
add
xchg
adc
or
cdq
cmp
add
mov
push
fdiv
add
nop
(bad)
inc
push
cmp
into
mov
push
sub
push
int3
mov
ins
xchg
mov
aad
pop
sub
xor
rcl
cmps
movs
test
dec
xor
jg
dec
xchg
xor
test
hlt
mov
xor
mov
push
or
adc
mov
movs
add
pop
inc
and
xchg
mov
pop
in
or
xchg
adc
inc
loopne
push
and
and
mov
adc
das
arpl
retf
jno
mov
out
ins
pop
or
or
popf
and
sub
or
(bad)
push
and
call
add
icebp
xchg
(bad)
add
pop
add
and
or
repnz
and
mov
jno
sbb
jge
xchg
add
xchg
or
dec
xor
sbb
in
xor
or
rcl
in
add
mov
xchg
xchg
push
sar
enter
test
pusha
or
enter
movs
sbb
popf
pop
mov
ins
retf
and
mov
or
push
pop
add
mov
pop
jp
hlt
dec
push
dec
or
jnp
js
push
sbb
test
xor
test
cmp
and
mov
add
mov
or
(bad)
sbb
add
je
dec
jecxz
ins
fimul
jmp
mov
add
add
sbb
inc
lods
push
ret
mov
xchg
ret
fwait
imul
mov
jno
enter
adc
cmp
scas
mov
lock
mov
push
shl
jae
or
inc
xchg
push
rcl
add
cmps
inc
nop
mov
mov
repnz
mov
es
icebp
shr
sub
inc
mov
adc
mov
mov
movs
loop
idiv
pushw
and
rol
cmp
sub
adc
and
or
retf
adc
scas
daa
jl
call
retf
nop
psraw
or
cmp
ret
adc
add
or
cmp
jne
xchg
mov
mov
aaa
jno
test
lods
jmp
push
call
add
mov
cmp
or
mov
push
adc
xlat
xchg
and
push
mov
lds
and
adc
xor
shr
pop
mov
adc
adc
stc
je
add
retf
(bad)
xlat
outs
push
ret
or
jg
xlat
into
mov
dec
push
aam
cwde
inc
mov
mov
pop
sub
push
add
adc
sbb
push
rcl
and
arpl
jbe
jge
and
xor
cmp
xchg
mov
xchg
pop
out
test
les
adc
pop
push
jb
mov
stos
call
rol
mov
xor
jecxz
jo
nop
xlat
mov
lea
ret
mov
rol
icebp
fwait
mov
push
inc
sub
mov
rol
jmp
or
dec
dec
lock
inc
int
movs
and
inc
out
sbb
retf
cld
push
push
lock
daa
inc
inc
push
adc
mov
lahf
dec
or
in
adc
or
ins
lods
jmp
cmp
cmp
add
pop
xchg
push
adc
jg
push
inc
cld
dec
push
(bad)
push
dec
lea
push
ficomp
mov
popa
inc
sbb
mov
push
push
sbb
pop
cwde
sbb
or
adc
sbb
dec
jecxz
dec
les
pop
daa
add
push
mov
sar
lds
adc
adc
retf
add
or
inc
imul
add
(bad)
les
cld
ret
inc
test
test
pop
shl
jmp
fwait
out
lods
or
or
inc
xchg
cmps
jge
clc
mov
adc
pushf
inc
cmp
ficomp
mov
add
add
mov
sub
mov
jo
sub
mov
add
inc
sbb
xor
rol
dec
repnz
adc
and
rol
mov
rol
aaa
test
inc
mov
not
js
call
adc
leave
inc
add
inc
imul
mov
mov
cld
rol
(bad)
jmp
cld
inc
or
and
add
sub
jae
add
dec
hlt
(bad)
hlt
push
es
pop
not
ins
sub
adc
or
push
dec
imul
pusha
out
push
sub
sbb
sbb
popf
mov
adc
push
mov
and
shl
nop
out
pop
push
and
jl
inc
dec
ins
add
arpl
jl
cmp
xchg
xor
mov
jae
jge
push
sbb
call
ret
int3
mov
clc
call
or
bound
or
or
xchg
xor
call
adc
cmp
push
mov
sub
enter
push
xor
inc
mov
mov
test
jne
adc
cmp
je
mov
sti
xchg
ret
push
imul
ss
fcmovnbe
pop
sar
push
jmp
scas
dec
clc
xlat
push
cmp
jl
xchg
push
add
dec
pusha
dec
ret
push
ja
arpl
dec
cmp
and
and
push
fldcw
xchg
arpl
sbb
cmc
clc
enter
loope
adc
leave
mov
and
mov
mov
cmp
sbb
lea
dec
adc
mov
or
xchg
(bad)
lock
or
cmp
and
ins
lahf
xor
daa
adc
inc
dec
pusha
or
ret
loopne
lods
or
dec
je
xchg
or
mov
cdq
and
cmp
xlat
ror
and
dec
retf
or
scas
retf
in
push
icebp
sub
mov
xchg
out
sbb
or
dec
push
lock
pcmpgtd
loopne
add
jg
enter
aaa
mov
mov
push
adc
data16
cmps
pusha
adc
test
dec
push
add
pop
outs
int
mov
adc
fmul
ret
ja
add
jmp
ss
xchg
cmp
sbb
into
adc
push
adc
pop
cmp
dec
outs
fistp
add
mov
cmp
mov
popf
add
pop
lds
lock
push
xchg
and
push
stos
sub
mov
adc
cmp
int3
add
mov
arpl
jo
jmp
aaa
cmp
arpl
enter
int3
add
push
fiadd
inc
sub
adc
dec
push
mov
and
push
inc
and
sahf
or
inc
nop
xchg
mov
hlt
adc
int
dec
data16
inc
and
loopne
push
cs
cmp
add
sahf
mov
mov
push
lea
push
cmp
rol
dec
fadd
add
cmp
adc
mov
or
arpl
dec
add
sbb
fbstp
(bad)
in
push
push
pop
jecxz
cs
or
add
cmp
outs
push
jmp
mov
inc
pop
push
push
xor
sbb
inc
xchg
imul
jne
push
or
jne
in
push
pop
cmp
and
inc
popa
cmp
inc
xorps
push
xor
mov
xor
mov
stc
cmp
sub
into
cmp
push
call
movs
cmps
rcr
pop
push
pop
push
adc
loope
inc
aad
add
(bad)
fnstenv
sbb
or
add
fadd
ds
inc
jl
js
or
clc
imul
inc
jb
mov
xor
leave
xor
rcr
jne
jmp
add
fstp
xchg
(bad)
and
rcr
mov
or
cs
adc
sahf
mov
(bad)
into
xor
das
imul
xchg
push
ja
rcl
ret
icebp
dec
inc
mov
jmp
mov
sub
mov
mov
popf
add
mov
push
xchg
inc
jmp
mov
xor
loopne
nop
fdivr
sub
ds
(bad)
mul
dec
add
addr16
stos
adc
or
pop
dec
js
aad
pop
pop
fist
into
sub
sub
xlat
out
cmp
mov
pop
sub
ss
mov
sti
aas
mov
mov
jmp
mov
dec
adc
mov
xchg
sbb
fnstenv
fst
retf
sbb
cmp
movs
jle
inc
add
repnz
or
jne
pop
aas
xor
pop
test
stos
dec
push
xchg
lods
lds
xor
push
mov
inc
rol
pushf
or
add
(bad)
sbb
xchg
add
and
xor
cmps
lods
mov
xchg
(bad)
jno
lea
addr16
rcr
jne
lock
cli
or
nop
mov
add
sub
jae
loope
test
cmp
cwde
xchg
and
push
aaa
sub
je
xchg
imul
xor
rcl
xchg
ins
ins
pusha
pusha
rcl
ss
xchg
xor
pusha
xchg
xchg
lahf
mov
mov
pop
and
addr16
mov
lds
fs
test
xor
shl
test
pop
pop
jg
aam
inc
scas
sbb
inc
mov
in
dec
jne
rol
stos
xlat
pop
cmp
cmc
pop
xor
add
cmp
cmps
movs
cmp
mov
add
add
jge
jnp
or
inc
sbb
or
xor
shl
test
data16
int3
ret
adc
not
jnp
(bad)
shl
mov
cmp
ds
addr16
jno
dec
mov
(bad)
xchg
mov
pop
test
out
js
inc
sbb
pushf
cs
cmp
jle
popa
pop
push
or
outs
mov
push
loopne
loopne
retf
inc
popa
jb
sub
cwde
sub
into
jb
int
aad
mov
imul
adc
inc
jo
in
push
jno
js
fiadd
jae
stc
sub
mov
dec
sbb
adc
pusha
add
or
aam
dec
sub
test
or
mov
add
xchg
popa
dec
pop
das
(bad)
(bad)
(bad)
sub
mov
mov
xor
stos
and
mov
fidiv
push
sub
hlt
add
imul
xor
dec
aam
adc
xor
int
or
jne
in
sub
inc
pop
inc
(bad)
cwde
in
adc
sub
adc
daa
pop
lods
add
mov
stos
push
jb
pushf
adc
sbb
xor
inc
cld
xor
das
iret
fcom
mov
xor
xchg
fdivr
nop
cwde
call
adc
sub
adc
adc
sub
sbb
fsub
(bad)
dec
cld
push
mul
or
fstp
mov
enter
les
pop
ss
hlt
stos
or
enter
pushf
imul
push
les
pop
and
lahf
jne
lds
sbb
or
add
addr16
add
add
shr
xchg
add
in
call
xor
cmp
dec
jecxz
adc
and
fs
stc
sbb
(bad)
out
sbb
xor
dec
xor
jl
aaa
outs
sbb
and
xor
fidiv
or
mov
sbb
mov
pop
xor
sub
fdiv
inc
int3
daa
out
fdiv
or
in
xor
add
out
fst
repz
and
xor
dec
xor
xor
or
cld
leave
sbb
enter
mov
cld
mov
dec
or
das
ja
test
jmp
cmp
sbb
jmp
push
and
adc
or
sti
aaa
sub
rcr
and
js
enter
add
jge
popa
sub
xor
jb
add
(bad)
ins
cdq
jmp
cli
clc
adc
sub
push
xchg
mov
test
aam
lahf
adc
add
push
movs
pop
retf
add
imul
xchg
sbb
test
adc
sbb
mov
repz
out
inc
add
add
fnstcw
xchg
add
pop
xor
or
pusha
or
push
sbb
nop
dec
add
adc
mov
(bad)
dec
mov
cdq
ins
fstp
sbb
dec
sahf
out
out
add
and
in
or
jo
add
add
dec
(bad)
dec
mov
sub
sbb
dec
jbe
or
das
sbb
sbb
sbb
sub
cmp
adc
pop
xor
loop
(bad)
jle
std
cmp
sub
and
ss
jno
sbb
push
xchg
mov
test
add
adc
cwde
popf
adc
fs
sbb
mov
rcr
push
pop
movs
mov
push
lods
adc
jno
mov
cmp
mov
add
fstp
lock
ret
and
test
dec
rcr
nop
mov
pop
pop
cmps
adc
jns
fdivr
sbb
loopne
add
movs
push
add
mov
mul
xor
add
and
sub
fmul
xchg
shl
es
push
push
cs
call
aas
fmul
or
or
cmp
das
movs
(bad)
cmp
mov
adc
xchg
es
scas
in
movs
loopne
test
in
loopne
mov
nop
dec
mov
das
mov
and
mov
mov
xchg
std
push
retf
xor
dec
cmp
stos
pusha
out
icebp
cmp
mov
mov
(bad)
add
movs
in
gs
mov
pop
inc
pop
gs
push
mov
mul
fld
mov
fisttp
xchg
in
add
mov
sub
or
nop
adc
dec
and
cmp
mov
pusha
xor
pop
int3
pop
add
xlat
cmps
and
and
pop
and
into
cmp
push
lock
inc
inc
jle
les
mov
lea
cmp
sbb
fwait
sbb
cmps
shl
inc
inc
sub
lods
cmovl
addr16
aaa
fadd
repnz
fild
loopne
inc
sub
xchg
stos
loopne
and
add
out
mov
mov
call
mov
in
shr
fwait
adc
dec
pop
mov
xchg
pop
(bad)
adc
push
in
xchg
mov
inc
push
cld
ret
mov
mov
xor
xchg
xchg
(bad)
mov
sbb
mov
lock
pop
loop
or
mov
pop
enter
dec
rcl
fadd
sub
push
inc
mov
loop
push
fdivr
std
or
mov
push
add
lods
cmp
test
adc
clc
jge
pop
mov
xor
les
push
loop
add
aaa
popf
call
loope
add
sbb
push
sbb
fs
sbb
inc
daa
shl
cmps
add
sub
sbb
mov
sub
fiadd
mov
xor
jp
pop
cmp
adc
xchg
out
xor
sahf
cmps
jge
sub
push
outs
movs
int3
jmp
cmp
inc
mov
daa
or
jns
out
or
push
mov
cmc
cmp
and
aad
js
call
aad
xor
(bad)
enter
sar
adc
xor
jnp
fimul
in
ret
mov
push
leave
in
or
mov
loopne
(bad)
sbb
jle
pop
mov
int3
imul
test
add
sub
xchg
enter
sbb
sub
lds
cmp
mov
add
mov
jge
cmp
fdivr
pop
add
icebp
arpl
sbb
push
pop
or
pop
in
mov
mov
movs
xor
mov
pop
sbb
bound
imul
and
cdq
sar
pop
fwait
ror
shl
inc
jmp
xchg
pop
(bad)
and
in
fadd
nop
or
mov
bound
adc
ret
add
and
jge
loope
in
and
movs
fist
jnp
enter
fld
loopne
mov
cmovne
and
out
xor
add
fsub
imul
icebp
call
scas
adc
mov
iret
dec
sbb
jns
xchg
movs
inc
adc
mov
sub
(bad)
frstor
cwde
call
lods
repz
sub
adc
sbb
mov
cmp
jne
aaa
or
or
jmp
sub
(bad)
mov
add
ror
mov
ins
out
add
sbb
stc
dec
cmp
popf
push
jle
add
pop
jge
mov
adc
xchg
je
xor
nop
push
jg
cmp
mov
jmp
jecxz
(bad)
adc
movs
sbb
hlt
bound
adc
xchg
mov
pop
fst
retf
adc
retf
movs
xor
ss
nop
mov
imul
xchg
outs
fcom
cmp
inc
lds
sbb
xor
xchg
sbb
fwait
test
or
out
sbb
call
pop
cmp
scas
sbb
add
jmp
ficom
test
jge
or
sub
mov
(bad)
jmp
ja
jmp
mov
push
xchg
lock
call
es
call
rol
adc
std
sbb
aaa
pop
or
mov
cmp
adc
cmp
adc
clc
(bad)
cmp
clc
pop
ja
bts
jmp
js
jl
push
movs
rol
mov
cdq
pop
jo
jne
inc
sbb
outs
push
arpl
and
add
sar
add
mov
(bad)
pop
ret
aas
mov
xchg
pmulhw
mov
adc
add
les
adc
jecxz
inc
mov
mov
push
je
push
adc
xchg
adc
push
dec
pop
inc
stos
sar
stc
or
adc
push
jmp
and
clc
and
cmp
pop
jae
jmp
xchg
push
sahf
push
push
push
sbb
ins
imul
jae
cld
xor
adc
je
jmp
push
clc
(bad)
fbstp
mov
fmul
push
cmp
push
mov
in
mov
cmps
pop
das
inc
add
cmp
(bad)
lds
push
stos
adc
pushf
push
in
sub
mov
cmps
lock
nop
dec
add
cmp
sbb
inc
add
pop
aas
sub
and
push
daa
outs
and
scas
rcl
loopne
scas
(bad)
push
add
cmp
leave
leave
(bad)
gs
repz
sub
mov
shr
sub
pop
out
xlat
inc
pop
in
inc
pop
dec
push
jo
cmp
sahf
xchg
cmps
mov
mov
jecxz
push
cli
or
push
daa
xor
fiadd
pcmpeqb
stos
sbb
and
and
push
and
xchg
add
mov
fsubr
(bad)
mov
imul
cld
jl
jmp
xor
gs
jmp
mov
inc
push
inc
cmp
fsubr
cmp
ror
mov
and
and
pop
(bad)
out
mov
xchg
inc
nop
mov
mov
pop
aam
ror
dec
fwait
mov
(bad)
hlt
adc
fcom
gs
xchg
ret
ret
ret
jmp
inc
clc
fisubr
cmp
cmp
addr16
add
push
jmp
mov
inc
les
push
and
cli
or
retf
inc
test
push
sub
pop
push
lods
sar
pop
icebp
inc
pop
call
cmp
jbe
sbb
ror
push
jno
dec
(bad)
sbb
xchg
mov
and
fisttp
push
mov
push
mov
sbb
rcl
stc
cmps
pop
jo
loopne
push
mov
mov
mov
mov
dec
adc
or
into
mov
imul
jmp
lea
dec
repnz
sbb
push
push
into
push
jae
sub
ins
push
mov
inc
add
mov
mov
movs
mov
repz
add
push
fs
loopne
adc
sub
dec
outs
into
and
ins
pop
jg
jmp
repnz
sub
(bad)
sub
mov
sub
sbb
sbb
sbb
jo
cld
imul
out
stc
sub
inc
hlt
xchg
push
jb
js
mov
or
jge
retf
add
xor
mov
movs
xor
mov
lock
push
cmp
or
mov
fdivr
mov
xor
inc
test
arpl
add
xchg
jae
or
mov
mov
mov
pop
enter
lock
cdq
test
call
inc
das
xor
out
addr16
inc
pop
sub
aas
sbb
xor
call
and
hlt
push
cmp
jnp
in
dec
call
pop
and
repz
lock
hlt
sbb
fld
cwde
pop
cs
sub
daa
iret
repz
inc
imul
add
fcom
push
and
dec
cwde
in
cmp
sbb
push
movs
mov
(bad)
cs
repnz
xor
jae
pushf
daa
retf
jb
push
and
les
sub
add
mov
add
xor
jmp
loop
or
movs
ret
stc
dec
add
push
daa
icebp
fldcw
aas
ret
jmp
push
inc
push
aad
and
sub
fs
pop
and
mov
inc
add
add
jns
xchg
push
mov
adc
adc
(bad)
popf
aaa
int
data16
(bad)
dec
or
dec
js
sbb
sub
mov
or
inc
or
inc
adc
cmp
sub
or
and
inc
dec
adc
(bad)
mov
add
(bad)
and
add
mov
xorps
mov
and
jg
sbb
test
stos
(bad)
imul
jge
pusha
ds
jl
adc
std
push
ret
mov
push
add
enter
mov
mov
mov
adc
out
push
cmp
dec
jo
adc
sbb
stos
scas
enter
jecxz
adc
dec
ss
lods
pop
test
dec
push
orps
movs
add
scas
push
or
and
jmp
dec
lods
cmps
lahf
stc
test
das
dec
loope
cld
mov
out
mov
test
pushf
daa
fcmovnb
xchg
inc
push
sahf
jae
push
mov
out
cmp
or
pop
ins
retf
add
dec
addr16
mov
mov
xchg
sbb
pop
xchg
jnp
push
pop
in
sar
fs
dec
ins
add
call
jne
(bad)
pop
inc
nop
movs
push
unpckhps
lods
arpl
mov
sub
pushf
in
test
and
loope
jmp
(bad)
jnp
in
jo
inc
jns
push
push
fld
dec
push
cmp
retf
jg
(bad)
jg
shl
jae
fucomp
dec
pop
rol
jmp
outs
daa
sbb
ret
mov
fsub
std
clc
mov
rol
xchg
stos
pop
loopne
inc
fbstp
add
sbb
in
xchg
dec
shl
lods
add
(bad)
mov
mov
pop
or
xchg
sti
jmp
sbb
mov
inc
jg
daa
icebp
add
jg
adc
stc
lods
hlt
xor
sub
ja
pop
add
inc
push
and
or
enter
push
ret
test
mov
dec
fadd
cmp
sub
lea
jne
adc
adc
icebp
xchg
hlt
jmp
adc
mov
shr
xchg
xchg
push
adc
sbb
(bad)
add
call
cmp
lock
cs
add
lock
or
push
pop
mov
sbb
mov
pop
cmps
nop
push
inc
inc
jne
xor
inc
jmp
inc
lock
mov
xchg
dec
retf
in
xor
or
adc
sub
add
icebp
addr16
pop
or
cmp
cmp
out
adc
or
add
(bad)
mov
and
jmp
adc
dec
ret
mov
(bad)
aad
sbb
jg
cli
add
inc
add
daa
(bad)
xchg
jle
pop
push
add
push
mov
stc
pushf
mov
adc
and
inc
repnz
adc
daa
loope
adc
sbb
xor
sbb
and
pop
adc
cld
int3
je
cmp
shl
mov
add
xor
clc
mov
ins
movs
rol
imul
popa
jmp
psubd
out
pop
daa
push
std
lea
push
fdiv
jns
popa
cmp
jmp
inc
dec
rol
imul
cmp
dec
mov
pop
jb
jne
adc
push
gs
(bad)
jno
sub
ret
pop
ret
popf
dec
bound
cmp
mov
sti
adc
push
shr
je
cmp
fsub
add
cs
push
addr16
popf
hlt
jmp
add
xchg
sbb
clc
in
rcl
loopne
lock
or
(bad)
es
inc
pop
add
js
pop
push
mov
jns
jne
je
daa
inc
sbb
cmp
loop
mov
jae
add
outs
adc
inc
inc
daa
sbb
sub
popa
rcl
loopne
mov
arpl
cmp
cmp
or
and
out
adc
adc
mov
xor
adc
scas
mov
jae
mov
push
sub
or
push
es
cmp
sub
dec
or
test
inc
mov
pop
jge
inc
dec
jne
mov
mov
inc
or
mov
loope
and
pop
xor
mov
test
pop
xor
inc
jmp
inc
mov
jae
push
push
test
sbb
fwait
nop
push
(bad)
ret
add
pop
mov
cld
mov
or
cwde
push
fwait
loope
mov
mov
mov
sub
leave
sahf
and
loopne
cmps
inc
and
dec
inc
stos
xor
icebp
jl
sub
(bad)
iret
ret
aad
je
daa
test
stos
sub
or
aad
mov
mov
rcr
push
sub
arpl
jmp
fist
xor
xor
cdq
shl
sub
loopne
aaa
movs
int3
dec
imul
hlt
dec
inc
shl
in
or
cli
je
or
xchg
adc
fstp
ins
pop
lds
sbb
lock
or
cmps
(bad)
or
pop
pop
xor
sbb
sbb
add
jmp
in
push
nop
add
push
adc
repz
mov
xor
cmp
leave
or
outs
adc
mov
adc
xchg
sbb
arpl
cmp
lock
mov
pop
div
xor
and
fs
push
mov
pop
add
fs
or
out
adc
pop
adc
jnp
imul
ins
outs
push
sbb
inc
arpl
rcr
sub
cld
rcr
and
inc
sbb
adc
jo
stos
jo
push
fst
lea
mov
mov
inc
xor
imul
loop
jmp
lea
popf
lea
adc
je
hlt
pop
add
sbb
test
mov
adc
(bad)
retw
es
mov
mov
fild
or
and
and
inc
push
pushf
imul
add
repnz
adc
mov
je
jb
sbb
adc
cmp
pop
push
push
sub
cmp
xchg
ret
push
cmc
inc
and
xor
inc
(bad)
cld
push
push
mov
adc
jle
js
adc
xchg
and
sar
inc
add
test
inc
inc
fcom
adc
repnz
data16
outs
jo
and
xlat
ins
lods
leave
pop
pop
sti
nop
arpl
ins
add
popa
inc
daa
inc
pop
pop
arpl
mov
push
dec
enter
(bad)
inc
xchg
cmps
xchg
add
sub
out
jne
xchg
cmp
jne
das
hlt
loopne
and
jne
xchg
push
mov
jb
push
shl
(bad)
adc
je
icebp
jno
push
cmp
sub
ret
hlt
pop
mov
fs
lds
sub
inc
sub
and
push
aas
add
jo
pop
arpl
inc
dec
jne
loopne
mov
xor
inc
add
jno
das
(bad)
call
push
outs
and
and
div
aad
push
push
das
(bad)
jmp
sbb
and
xchg
inc
jne
shr
shr
mov
lahf
pop
pop
push
arpl
mov
jl
mov
mov
xchg
jl
adc
inc
add
stc
xor
sbb
int3
addr16
push
les
je
and
imul
stos
es
cmp
jg
push
dec
cmp
out
sahf
movs
or
inc
ins
sub
adc
sbb
mov
push
push
data16
sub
xchg
push
ins
cmp
mov
push
fdivr
push
sbb
and
adc
add
not
or
adc
inc
or
nop
cli
sub
arpl
or
sub
loope
xchg
jmp
and
push
ja
add
imul
pop
or
push
or
add
cmp
mov
inc
and
inc
and
fldenv
adc
xchg
add
pop
or
cmp
test
sbb
popf
or
jmp
push
leave
loope
mov
into
fxch
inc
pop
jg
adc
shl
jbe
pop
add
xchg
or
sub
and
nop
cmps
adc
das
or
pop
pop
addr16
out
jo
and
or
lock
fsubr
arpl
dec
cli
mov
xchg
xchg
out
fbld
je
int
rol
add
or
fs
out
jo
pusha
or
loop
add
rcr
or
push
push
test
and
clc
lds
shl
cmp
sub
jge
dec
add
push
(bad)
clc
lock
int3
ins
ror
ja
in
repnz
lea
xor
adc
lods
lahf
push
inc
xlat
mov
lock
movs
clc
mov
or
ja
stos
outs
in
jp
inc
push
dec
inc
add
add
cld
dec
int
popf
mov
lahf
aaa
dec
dec
dec
xchg
mov
shr
ret
les
inc
je
dec
push
dec
ins
cdq
test
stos
xor
out
sar
mov
push
and
je
cmp
loop
test
movs
and
sbb
not
es
sub
retf
cmp
jne
and
imul
and
add
or
push
in
repnz
mov
mov
dec
push
add
or
adc
inc
ss
inc
shr
pop
sbb
jmp
pop
pop
xor
or
inc
xor
and
aam
btc
xchg
mov
xor
scas
xor
xor
push
xor
add
push
adc
arpl
fisubr
enter
and
sbb
pop
and
adc
add
or
adc
xchg
mov
add
sbb
add
imul
retf
ss
mov
or
adc
dec
dec
mov
or
pop
adc
xlat
pop
sti
add
dec
scas
mov
or
push
adc
jb
loop
sub
retf
(bad)
inc
pop
add
mov
push
or
jl
(bad)
femms
add
xchg
mov
inc
sar
inc
ja
push
inc
pop
or
in
call
or
clc
adc
add
fiadd
xor
add
adc
je
leave
add
clc
jne
add
xchg
cmps
(bad)
jnp
test
mov
jne
pop
mov
inc
adc
mov
jne
hlt
(bad)
mov
jno
pop
add
popa
stc
cmps
lock
aad
ror
pop
mov
cmps
in
add
dec
nop
lods
xor
lea
jae
add
cld
or
add
fcomp
imul
jp
push
and
fsubr
aad
or
shr
and
adc
rcr
repz
loopne
push
jp
or
ja
ror
adc
cmp
jmp
push
call
je
call
int
lds
adc
rol
xchg
or
mov
pop
sbb
mov
out
or
jne
and
add
sbb
adc
fdivr
div
pcmpeqb
loopne
and
cmp
xchg
sahf
or
popf
lods
push
test
and
sub
jb
popf
add
(bad)
xchg
mov
pop
aaa
or
push
cwde
sub
dec
popf
aaa
aas
shl
popa
cmps
lds
adc
mov
dec
leave
ret
and
cdq
jo
outs
pop
xor
add
adc
test
pop
dec
add
push
mov
and
out
lock
ins
repnz
and
push
call
ins
aam
lock
push
add
dec
sbb
sub
adc
mov
jns
inc
add
inc
pop
or
add
dec
push
fistp
jae
and
or
or
cmp
fisttp
mov
cld
pop
mov
pop
push
or
and
call
sbb
mov
push
inc
loopne
rcl
or
mov
xchg
xor
pop
je
mov
(bad)
adc
xchg
xchg
cmps
mov
push
and
jp
pop
test
inc
pop
push
jne
push
aam
dec
les
sub
push
mov
addr16
inc
aad
popa
outs
js
push
xor
icebp
adc
adc
sub
or
cdq
scas
ss
jo
push
pshufw
xor
inc
inc
xor
inc
ret
rcl
adc
pop
iret
mov
add
in
sub
mov
outs
mov
out
dec
xchg
lea
xor
loop
aaa
mov
test
pop
mov
mov
mov
mov
dec
(bad)
adc
iret
aam
sub
pcmpeqd
js
jp
xchg
xchg
xchg
jnp
jge
xchg
xchg
xchg
xchg
jg
popa
bound
fs
xchg
xchg
xchg
addr16
xchg
xchg
imul
xchg
xchg
xchg
outs
push
push
push
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
push
pop
pop
pop
xchg
xchg
xchg
xchg
pop
pop
pop
pop
xchg
xchg
xchg
xchg
pop
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
inc
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
xor
xor
xor
ss
xchg
xchg
xchg
aaa
cmp
cmp
mov
push
dec
xchg
cld
sbb
pop
adc
js
fld
adc
pop
mov
and
jb
jecxz
cmp
push
mov
pop
daa
and
lods
cmps
sub
xor
or
pop
enter
dec
fs
add
or
mov
add
jle
xlat
cmp
push
adc
adc
sbb
in
mov
add
lock
or
push
call
mov
jmp
add
repz
add
jmp
add
and
jge
inc
and
add
pop
pushf
add
mov
mov
popa
add
ret
outs
add
pop
or
test
add
ror
inc
ja
pop
ins
or
and
in
imul
adc
adc
addr16
ins
cmps
xlat
or
cmp
mov
movs
inc
sbb
pop
ins
jg
shl
sub
test
ficom
out
push
(bad)
adc
in
cdq
pop
repnz
aam
inc
push
xchg
adc
and
add
add
mov
jae
or
inc
ins
popf
push
jmp
xor
xchg
int3
test
xor
push
clc
jmp
mov
or
jns
mov
ror
sbb
int
add
pop
test
inc
in
push
nop
push
inc
ds
or
mov
cmc
sub
les
imul
leave
dec
mov
ret
pop
and
cld
add
push
je
push
test
aam
sbb
push
push
dec
push
mov
xor
or
lock
cli
push
sbb
pop
pop
inc
pop
shl
mov
sbb
ror
(bad)
or
cmp
mov
or
aam
nop
(bad)
jmp
or
dec
call
adc
add
ss
iret
cmp
lahf
rcr
and
jo
call
les
les
lds
loopne
test
test
cmps
scas
fistp
push
add
adc
adc
push
sub
in
mov
shl
inc
(bad)
sbb
dec
bound
adc
(bad)
xlat
and
xor
popa
mov
(bad)
pop
enter
int3
mov
fistp
lock
pop
shr
add
adc
sbb
outs
add
(bad)
xchg
jne
aam
mov
call
add
(bad)
mov
and
push
pop
xchg
mov
dec
add
test
imul
arpl
lahf
stos
scas
fmul
jecxz
jno
pop
add
add
push
or
jbe
test
gs
jle
imul
push
push
adc
cmp
xlat
xor
push
in
add
add
or
iret
mov
mov
in
or
icebp
add
xor
fadd
sbb
xor
aas
pusha
fdivr
in
rcr
hlt
add
stos
inc
xor
xchg
mov
xor
or
test
aam
sbb
push
pop
xor
and
and
in
or
xor
push
jbe
or
cmp
jmp
in
xchg
jno
adc
enter
sub
cwde
push
add
xor
pop
dec
xchg
add
fs
dec
adc
pusha
dec
push
pop
push
add
jl
aas
js
add
ja
push
or
clc
add
adc
enter
xor
mov
push
ror
dec
or
cdq
add
dec
push
cmp
adc
in
dec
or
fimul
mov
mov
add
sbb
or
mov
push
pop
ret
ss
push
sahf
xchg
int
cmp
sub
add
ret
pop
xor
int3
jmp
add
outs
jmp
sbb
xlat
xchg
push
inc
dec
pusha
aaa
fimul
push
push
mov
test
cmp
jg
push
lea
mov
pop
sbb
pop
(bad)
mov
shr
mov
cmp
es
cmps
mov
aas
inc
add
inc
sbb
jge
add
iret
or
xchg
rcl
rol
(bad)
dec
push
enter
add
xchg
rol
in
(bad)
pop
ret
sbb
loopne
cli
and
mov
sub
add
sub
xchg
and
or
push
hlt
mov
sbb
push
ret
or
test
in
xor
sahf
adc
fld
push
mov
and
and
out
test
sbb
mov
and
clc
xchg
jne
xchg
add
xchg
and
daa
add
mov
mov
mov
cmp
repnz
jmp
jbe
add
push
jge
jg
xor
xchg
pop
push
lea
pop
xchg
inc
mov
mov
push
jb
sahf
jg
jg
mov
pusha
xor
mov
(bad)
rcl
dec
ja
mov
jns
(bad)
jno
lock
xor
adc
pusha
outs
fadd
test
adc
push
pop
pop
jae
push
cmp
and
jns
dec
mov
shl
xchg
(bad)
push
or
mov
popf
and
lock
sar
or
or
adc
mov
xlat
(bad)
jo
cmp
sub
out
push
xor
sbb
daa
mov
(bad)
hlt
ds
inc
mov
push
jno
cmp
rcl
and
sub
xor
mov
xor
aad
loopne
add
adc
push
popf
mov
in
ficom
mov
adc
mov
add
mov
je
jb
fsub
sub
xchg
push
dec
sub
popf
mov
dec
jp
hlt
fmul
and
xor
jmp
in
test
and
sub
adc
sbb
call
pop
xchg
sub
cmps
jecxz
dec
cmp
or
sahf
xchg
or
add
and
fadd
inc
dec
shl
or
cli
ins
xchg
xor
popa
(bad)
pop
hlt
and
scas
push
push
fcom
mov
ret
mov
mov
push
xchg
xor
inc
call
adc
sub
clc
add
pusha
sub
sub
test
out
outs
mov
outs
pop
rol
jecxz
in
add
adc
fisttp
dec
bound
add
sub
and
push
ins
ret
out
xchg
or
je
imul
add
jo
fsub
xor
add
xor
add
and
div
nop
xchg
or
push
add
adc
lock
je
mov
fist
jns
jmp
jg
push
data16
enter
je
fwait
daa
or
arpl
adc
adc
gs
jl
jo
imul
(bad)
cdq
scas
cmc
mov
or
ins
or
mov
(bad)
push
outs
int
and
pop
jo
outs
scas
sbb
sbb
push
inc
ss
jns
je
sbb
or
push
inc
mov
mov
push
ror
aam
les
sbb
jb
int3
inc
add
push
inc
ins
movs
or
xchg
outs
sbb
movs
dec
rcl
mov
fst
xor
push
push
(bad)
push
push
inc
jns
sbb
or
dec
mov
gs
and
xor
out
ret
sbb
xchg
jge
ss
xor
aas
mov
inc
jmp
aaa
int
mov
add
jne
sbb
or
pop
sub
mov
loope
push
xor
dec
jl
jp
lods
push
sub
data16
push
fidiv
add
cs
inc
imul
out
fisubr
outs
jae
es
adc
and
out
dec
pop
xor
cmp
mov
pop
add
outs
test
jmp
inc
xor
sub
push
aad
pusha
pushf
mov
and
les
push
lds
movs
or
out
out
js
push
inc
pop
adc
not
imul
cmps
inc
xchg
add
pop
clc
xchg
cdq
mov
add
sub
pop
push
push
unpcklps
jl
inc
mov
inc
out
ret
or
and
retf
add
push
pop
pop
adc
mov
adc
push
in
push
in
add
stos
sbb
(bad)
(bad)
cld
inc
inc
push
add
or
mov
dec
aas
mov
push
dec
gs
pop
repnz
push
mov
outs
jge
dec
cmp
dec
xchg
jo
nop
dec
or
sahf
add
mov
mov
add
jmp
inc
ss
push
add
push
push
and
adc
sub
jl
mov
clc
xchg
cmp
das
out
icebp
pop
ins
mov
movs
sbb
pusha
cmc
es
dec
mov
add
jns
scas
cmp
lahf
pop
sbb
or
and
inc
add
dec
stc
loop
jns
add
cwde
dec
add
es
add
jo
mov
mov
mov
sti
jo
(bad)
fdivr
in
xor
je
outs
jae
pop
inc
xor
xor
outs
xchg
push
dec
sbb
js
push
ret
ins
fstp
lahf
pop
sbb
add
add
scas
and
(bad)
(bad)
in
int3
push
xor
adc
mov
(bad)
(bad)
xor
pop
nop
scas
mov
int3
push
inc
pop
pop
rcl
jo
push
push
lods
imul
popa
nop
jae
pop
sbb
push
pushf
sub
movs
lods
xor
popa
push
add
xlat
daa
and
pop
aas
push
int3
push
or
and
test
imul
lods
das
cmp
mov
shl
inc
push
mov
into
mov
fcom
push
xchg
outs
sbb
mov
sbb
inc
push
sbb
cmp
out
xor
cs
mov
dec
mov
sbb
pusha
mov
pusha
cs
(bad)
loopne
je
add
inc
(bad)
jnp
pop
dec
push
push
sub
adc
ins
inc
in
(bad)
fadd
ins
inc
push
test
(bad)
hlt
sti
int3
outs
fwait
outs
clc
outs
pop
outs
pmulhuw
pop
mov
mov
outs
add
mov
pop
add
add
call
or
(bad)
loopne
add
les
nop
je
std
fdivr
sub
fmul
fcom
mov
push
test
aas
pusha
ins
cwde
mov
inc
cmp
sbb
xchg
dec
push
js
add
lock
push
jb
jecxz
ja
push
fdiv
jne
es
je
add
les
enter
in
cmp
je
jb
out
pop
and
push
push
ret
sub
in
add
mov
or
mov
push
popa
fsub
popa
addr16
inc
xor
fwait
dec
ds
cwde
mov
sub
push
push
inc
in
out
jno
popa
data16
nop
movs
mov
sbb
pop
or
xchg
inc
mov
inc
loopne
inc
jge
retf
xchg
add
push
or
jp
pop
jge
xchg
push
fdivr
jl
inc
push
imul
js
cwde
jle
sahf
cmps
jge
pusha
pusha
sbb
add
or
scas
loop
inc
popf
pop
jne
mov
dec
call
push
(bad)
cmp
or
push
sub
out
mov
xor
in
xchg
pop
aaa
cmp
daa
jns
inc
xchg
adc
loopne
xchg
cdq
dec
call
rcr
call
mov
mov
xchg
paddusw
imul
push
adc
sbb
jle
dec
inc
in
pop
cmps
sahf
pop
outs
xchg
jo
pop
sbb
ss
ficom
aaa
xchg
fdiv
sbb
out
push
movs
ss
push
or
outs
outs
bound
cmp
pop
leave
stos
mov
sbb
jle
daa
cmp
scas
lock
sbb
inc
inc
sub
add
mov
xchg
push
ins
push
sahf
enter
sahf
div
ror
imul
cs
pop
sbb
jae
cmp
add
ret
nop
and
xchg
mov
jmp
aaa
sub
lahf
ret
push
clc
dec
lock
cmp
and
popa
outs
push
int3
call
and
inc
les
inc
cmp
mov
dec
inc
ror
or
xor
inc
dec
jne
cmps
xor
dec
and
fist
test
mov
bound
adc
ja
inc
pop
and
pop
retf
add
movs
call
dec
push
cmp
rol
mov
ins
or
je
sbb
jne
(bad)
xchg
jo
loope
jge
adc
push
rol
jecxz
sbb
xor
jb
mov
dec
fild
xchg
(bad)
xchg
sub
adc
dec
je
ret
inc
add
outs
daa
add
dec
add
or
(bad)
cmp
(bad)
dec
and
push
movs
hlt
pop
pop
lea
adc
push
(bad)
enter
sub
dec
enter
pusha
or
xor
fs
setb
imul
and
and
adc
cmps
cmp
mov
xor
jb
test
mov
pusha
sub
aaa
sti
cld
cmp
push
outs
and
cmp
adc
aaa
xor
cmp
je
pushf
lea
and
xlat
cmp
adc
movs
in
dec
dec
cmp
or
sbb
pop
ins
icebp
mov
sar
je
jmp
xchg
fst
pop
or
dec
mov
loopne
jp
mov
inc
sbb
pop
mov
push
(bad)
out
xor
adc
nop
cmp
jg
fst
repz
adc
or
add
stos
call
cmp
iret
ins
push
call
loope
push
daa
inc
imul
int3
jmp
inc
xor
popa
(bad)
mov
mov
shl
jae
sbb
fidivr
jb
pop
push
cmps
dec
inc
popa
sbb
fwait
or
or
push
add
rol
add
arpl
into
jg
packsswb
jb
outs
outs
inc
inc
cld
mov
pop
inc
outs
pop
dec
ins
imul
push
xchg
jbe
add
jb
ins
gs
gs
ins
pop
sbb
pop
dec
jbe
push
imul
adc
dec
imul
pop
pop
gs
ins
outs
ja
jne
enter
or
arpl
imul
add
pop
inc
or
add
ja
imul
ins
inc
dec
leavew
pop
mov
sub
les
das
cmovae
push
int3
jg
jo
push
pop
imul
adc
sub
dec
add
sbb
jmp
dec
fs
sbb
inc
ins
das
or
rol
ins
jg
gs
mov
pusha
cmp
mov
inc
and
xchg
ss
lahf
sbb
fisub
or
sbb
inc
pop
or
push
test
and
mov
js
ins
jg
fcomip
fwait
and
aaa
adc
adc
add
out
enter
mov
ret
cmp
outs
jne
jl
lds
xchg
daa
bndstx
das
lahf
sbb
inc
inc
dec
cs
push
arpl
addr16
add
imul
das
cmp
(bad)
jg
aaa
and
or
les
or
adc
ret
push
mov
dec
cmps
or
dec
out
pop
add
pop
or
dec
or
mov
or
fdivr
aas
int3
mov
dec
pop
inc
dec
inc
push
push
inc
push
add
int3
mov
inc
inc
inc
inc
mov
or
jg
not
dec
inc
dec
dec
arpl
xchg
cmp
dec
dec
inc
push
dec
dec
push
pop
mov
cmp
addr16
dec
dec
and
out
inc
inc
xor
(bad)
dec
enter
mov
and
mov
aas
fiadd
xchg
inc
push
inc
inc
dec
int
in
mov
push
push
dec
dec
push
dec
dec
mov
push
ins
imul
sbb
mov
nop
jl
inc
dec
push
mov
dec
inc
dec
mov
out
push
dec
pop
test
inc
inc
push
push
push
dec
push
inc
scas
mov
aas
in
inc
dec
push
mov
daa
xchg
add
mov
lods
mov
sub
cmp
mov
xchg
add
outs
dec
(bad)
mov
and
test
neg
adc
lock
outs
(bad)
jl
or
adc
adc
xchg
addr16
or
push
pop
clc
pop
mov
xchg
cmp
jg
and
xlat
sbb
mov
test
sbb
out
adc
pop
xor
jmp
dec
xor
cld
or
jmp
mov
inc
inc
pusha
shl
mov
scas
mov
jge
push
inc
fs
loopne
test
arpl
mov
lahf
mov
or
test
jmp
xor
add
sub
lods
sbb
aad
aas
dec
push
popa
aam
adc
popa
fstp
in
inc
jnp
inc
ret
das
pop
and
xchg
dec
push
sbb
fild
shr
xor
test
jne
std
sahf
(bad)
cmp
lock
inc
popa
gs
mov
ror
cmp
test
fdiv
push
inc
cmp
fimul
jo
cli
inc
cdq
test
xor
add
retf
pop
leave
mov
jae
fsubr
clc
daa
dec
icebp
xchg
je
cmp
je
or
cmp
or
(bad)
xor
cmp
xchg
lods
jne
mov
es
clc
test
test
(bad)
xor
mov
mov
mov
sbb
rcr
arpl
xor
xor
sbb
pushf
jge
sbb
dec
mov
enter
mov
je
shl
jmp
adc
retf
in
mov
inc
aam
add
jmp
(bad)
popa
push
cmp
and
mov
rcl
in
xlat
jmp
or
cld
dec
loopne
cwde
add
jecxz
mov
mov
sub
mov
xor
mov
and
sbb
sbb
pop
mov
jb
inc
jl
jno
fisub
mov
xchg
inc
inc
arpl
cmp
jo
xor
add
mov
aaa
(bad)
or
jo
add
dec
fwait
out
out
jge
sbb
fadd
jmp
fadd
fld
push
(bad)
inc
popa
mov
push
push
or
loop
or
into
fild
or
dec
(bad)
or
dec
test
loopne
retf
aaa
mov
stos
imul
test
lods
movs
fwait
add
adc
or
pop
dec
shl
outs
outs
loope
sub
adc
push
cmps
sub
or
and
lods
mov
inc
inc
movs
jbe
pop
mov
add
sub
jg
pop
inc
scas
pop
ror
push
dec
movhps
outs
inc
sbb
xor
es
ins
add
sbb
aaa
and
dec
xor
cmp
fcomi
fimul
das
pop
neg
push
aam
push
aaa
mov
sbb
cmc
adc
out
add
sbb
mov
adc
(bad)
xor
push
out
loope
xchg
jp
bound
js
(bad)
sub
push
dec
cs
push
out
sbb
pop
push
ffree
(bad)
in
sbb
dec
dec
mov
inc
cmp
xchg
cmp
mov
dec
das
test
add
and
xor
adc
adc
sub
cmp
inc
and
cs
mov
add
add
nop
int3
dec
addr16
xchg
or
cmp
cmp
xor
xchg
adc
push
jne
fild
xchg
cmp
xor
cmp
rol
imul
xlat
fild
repnz
dec
or
das
xchg
add
leave
inc
mov
ss
lock
mov
or
push
sbb
or
xchg
adc
sub
hlt
nop
sub
enter
xchg
dec
jmp
repnz
dec
fadd
push
or
push
nop
mov
pop
or
mov
out
mov
fisttp
inc
ds
cmp
inc
xchg
jmp
add
adc
inc
jne
mov
test
xor
xlat
sar
xchg
lock
add
je
pop
mov
cmps
mov
ret
add
fld
aaa
jo
test
dec
jmp
bound
fst
movs
ror
jmp
sub
add
jbe
adc
rcr
arpl
lock
out
pop
ins
rcl
or
lods
aas
ss
adc
and
or
adc
(bad)
arpl
nop
pop
addr16
add
ja
test
and
jb
jle
imul
inc
cmp
es
xor
enter
dec
das
cmp
mov
test
or
test
lods
test
mov
pop
jp
push
clc
cdq
mov
jne
jns
pop
adc
push
(bad)
add
cmps
aad
cwde
pop
pop
lock
push
adc
mov
les
cmps
jge
jmp
shr
loopne
test
pushf
cmp
mov
mov
push
mov
sub
lods
cmp
or
or
fcomp
pop
shl
push
or
push
push
dec
int3
fisub
outs
pop
mov
sbb
movs
xchg
in
sbb
cwde
cmp
xor
js
pop
push
mov
mov
shl
ins
xchg
adc
jnp
cmp
and
sub
bound
iret
mov
sub
mov
dec
in
movs
loopne
adc
pop
and
sti
dec
mov
push
pop
xchg
call
jecxz
jnp
int3
test
or
and
(bad)
out
jge
push
ins
fcom
outs
or
fisttp
inc
push
sbb
inc
dec
mov
lea
int3
cmovge
aaa
mov
push
push
mov
pop
and
shl
adc
popf
pop
push
rcl
ret
iret
adc
call
inc
test
je
push
add
jmp
adc
rol
mov
or
pop
adc
and
frstor
or
mov
ins
inc
add
test
adc
sbb
(bad)
lds
jae
sbb
or
pushf
mov
xchg
pop
pop
cmp
add
neg
adc
pop
dec
ret
xor
sbb
and
fisttp
push
or
(bad)
outs
jl
mov
add
pusha
loope
add
xor
or
in
mov
mov
call
in
and
adc
mov
in
pop
or
inc
xchg
pop
xchg
or
dec
xor
push
clc
or
sbb
adc
mov
jl
pushf
adc
mov
pop
ret
lods
xchg
lea
movs
movs
pop
pop
sbb
adc
or
ins
sub
mov
and
dec
pop
xchg
popf
in
push
inc
outs
adc
or
jge
and
xchg
pop
jnp
fld
xchg
call
dec
cli
fldcw
jmp
not
and
push
or
shl
or
outs
or
mov
adc
xor
cdq
jle
(bad)
rol
ja
xor
imul
mov
push
fcom
cmps
dec
jle
retf
dec
popa
add
arpl
(bad)
sbb
jmp
dec
or
add
push
jl
rcr
jl
xchg
mov
not
and
(bad)
fs
cmp
je
mul
dec
adc
and
adc
ins
push
jo
jne
xchg
dec
mov
in
repz
dec
mov
add
and
and
mov
sub
in
call
mov
cmp
aaa
cmp
sub
adc
aad
nop
cld
adc
and
xchg
arpl
pop
sub
mov
out
out
and
inc
jo
push
add
and
push
xor
dec
push
movs
add
add
sub
lds
cmps
idiv
es
ds
pop
and
mov
or
leave
ret
loopne
inc
pop
enter
test
int
adc
push
pop
dec
jns
imul
pusha
dec
push
jae
inc
add
pop
inc
mov
in
or
rcl
inc
add
push
push
mov
cmp
in
add
add
out
das
lea
or
aas
test
jmp
dec
sbb
sub
popa
adc
cld
pusha
pop
dec
or
push
popa
ins
jle
int3
int3
js
rcl
(bad)
cmp
adc
in
vmwrite
xchg
jbe
int3
push
push
sub
loop
push
dec
test
xor
sbb
adc
iret
cmp
jno
arpl
cmp
imul
in
je
pop
jle
pop
nop
mov
inc
movs
jae
mov
pop
or
daa
lahf
pop
inc
call
movs
cmps
cmp
es
mov
out
inc
push
out
pop
in
sbb
inc
inc
or
loop
push
aas
in
mov
ins
les
adc
sbb
rol
ja
or
add
nop
adc
scas
mov
pop
fild
add
fiadd
fincstp
or
loope
and
frstor
mov
das
outs
ret
outs
and
adc
pop
pop
daa
fisub
jmp
jno
jne
adc
jne
xchg
sbb
enter
dec
adc
je
cs
pushf
adc
jae
push
add
lahf
push
push
xor
ret
sub
shl
jecxz
and
push
test
mov
add
test
sahf
ins
or
push
push
sbb
or
sub
xor
and
cmps
push
(bad)
fmul
adc
and
mov
push
sub
dec
jmp
jns
xor
pop
int3
dec
pop
or
popa
add
sbb
and
lock
das
or
adc
inc
aam
loope
mov
dec
sbb
sti
push
loopne
mov
mov
mov
inc
add
stos
dec
jbe
xor
jo
or
or
pop
mov
and
punpckhdq
adc
fimul
and
sbb
add
sbb
xchg
lea
add
xor
pop
push
dec
pop
add
add
mov
inc
adc
pushf
add
fcmovnb
inc
adc
sub
adc
dec
rol
je
shl
pop
into
mov
lea
pop
pop
test
int
pop
push
inc
dec
jne
dec
punpcklwd
and
sbb
adc
mov
mov
nop
rol
aad
(bad)
imul
inc
jae
jae
dec
sbb
push
cmps
jo
mov
js
push
mov
and
adc
cmovl
mov
fmul
mov
dec
jns
imul
sbb
xor
and
(bad)
mov
sub
shl
mov
mov
pop
push
inc
stos
jmp
out
jle
mov
outs
test
xchg
and
or
pop
popa
inc
add
loopne
push
sub
adc
mov
or
jge
cmp
ret
arpl
out
in
add
ds
ds
out
int
inc
movzx
lea
ins
xchg
sbb
dec
jnp
cs
jmp
addr16
iretw
popa
inc
xchg
or
fs
cld
cli
jno
and
and
outs
sahf
cmp
aad
ja
pop
jmp
mov
cmp
clc
mov
das
mov
icebp
inc
das
outs
dec
in
push
movzx
lea
or
add
add
jmp
pop
pop
pop
adc
cmp
sub
cmp
pop
push
push
pop
clc
test
lods
pusha
push
inc
ss
sbb
je
add
push
inc
mov
ss
es
mov
xor
jae
cmp
xor
shl
je
pop
or
pop
add
or
push
push
lods
sub
xor
push
addr16
aaa
add
sbb
push
nop
jp
or
lods
inc
adc
jmp
push
outs
push
dec
xchg
fnsave
inc
add
shl
enter
in
shr
pop
adc
cdq
push
push
xchg
iret
and
test
aas
adc
push
das
test
inc
and
xor
mov
jge
add
xor
jb
xchg
adc
or
retf
add
dec
push
es
pand
les
retf
dec
pop
cmp
nop
xchg
std
loop
ins
aam
loopne
es
and
cli
and
push
pop
pop
adc
shr
and
fisttp
and
repnz
das
jns
sbb
xchg
fs
or
mov
and
jae
(bad)
push
repnz
cmp
ins
out
jno
push
or
mov
push
adc
add
movs
sbb
cmps
or
pop
sbb
jne
ss
and
sar
lods
and
mov
(bad)
cmp
jg
test
jle
cmp
dec
xor
enter
add
cmp
jg
test
pop
clc
jle
imul
dec
mov
ret
(bad)
push
dec
push
xor
or
nop
cmp
add
mov
add
ins
adc
or
jb
ret
lods
push
pop
mov
adc
add
xor
psubusb
or
test
lods
xchg
dec
pop
mov
sbb
scas
(bad)
cmp
inc
xchg
or
in
inc
sub
(bad)
or
lds
sub
sbb
add
cmp
daa
retf
mov
sbb
pushf
mov
div
xor
or
jl
push
cmp
int3
lock
mov
add
jne
je
(bad)
jle
dec
jne
cmp
jnp
rol
adc
ret
xor
cld
(bad)
mov
push
aam
and
inc
adc
and
inc
ret
int
xor
pop
aam
xor
push
or
pop
push
pop
add
movs
xor
enter
mov
test
jbe
nop
mov
shl
mov
mov
ficomp
push
mov
add
dec
in
sub
xor
sbb
dec
das
cmp
inc
rol
repz
test
hlt
push
popa
ret
ins
jnp
push
mov
mov
add
push
push
mov
mov
adc
xor
outs
aam
ret
xor
imul
pop
mov
fadd
inc
aam
test
shl
fs
rcr
push
scas
dec
or
ror
lock
xor
push
inc
pop
out
lods
push
sbb
xlat
fidivr
push
lea
dec
push
hlt
jmp
and
sbb
mov
js
sub
mov
fild
mov
and
sub
add
add
(bad)
fidiv
lock
dec
or
jle
lock
jmp
jo
adc
jmp
setb
ss
dec
jmp
adc
inc
dec
adc
ins
and
cld
js
int3
sub
or
inc
and
ins
xchg
pop
jae
and
xlat
sbb
and
push
sub
gs
or
jmp
adc
mov
cmps
fcom
loopne
(bad)
arpl
pop
test
fist
pusha
icebp
out
cwde
imul
add
add
es
lea
mov
push
adc
mov
sbb
push
push
mov
add
and
xor
cmp
das
mov
imul
push
dec
dec
push
or
clc
pop
int3
mov
lods
and
data16
add
push
dec
xor
clc
clc
hlt
hlt
ret
or
pop
lods
or
das
xchg
add
mov
sub
add
mov
pop
scas
call
test
lods
outs
imul
mov
adc
stc
and
pop
push
cdq
mov
push
in
xor
pop
inc
fld
sub
cmp
stos
and
sub
pushf
in
loopne
add
loop
dec
shl
jmp
lds
push
cmp
add
and
out
repz
and
adc
or
push
(bad)
mov
(bad)
out
push
scas
add
push
lods
or
lods
ja
add
push
or
mov
stos
mov
mov
mov
sbb
mov
mov
hlt
lods
sbb
in
daa
adc
sbb
sub
rcl
adc
test
daa
int
xlat
adc
adc
and
in
sub
mov
and
mov
add
adc
add
test
aas
mov
test
jns
jg
sbb
adc
mov
rcl
fcom
and
xor
nop
mov
je
push
adc
out
sbb
add
mov
and
jp
movs
jmp
or
and
adc
and
fmul
cmp
ret
sub
je
imul
pop
loop
push
test
int3
fild
outs
xchg
clc
mov
inc
dec
hlt
ret
(bad)
repnz
mov
inc
adc
adc
and
scas
xchg
add
push
cmp
xlat
pop
retf
mov
push
or
inc
leave
ror
inc
mov
retf
pop
push
adc
les
aas
push
jo
retf
outs
xchg
cld
nop
retf
push
ror
cld
push
push
dec
cmp
pop
js
iret
push
sbb
pop
adc
or
test
fld
jecxz
mov
ins
mul
popf
pop
imul
mov
and
sbb
nop
faddp
mov
fsub
lods
jmp
das
cmp
and
pushf
and
in
inc
aas
dec
movs
ror
dec
enter
xor
cs
(bad)
jge
push
sbb
test
lods
sub
xor
inc
repnz
leave
movs
jo
(bad)
pop
push
cmp
aas
jle
rcl
mov
adc
adc
jo
outs
add
jb
add
mov
and
loop
pop
xor
inc
inc
mov
mov
and
pushf
add
sub
inc
mov
dec
and
sbb
or
and
or
pusha
sbb
xor
cmps
cmp
pop
pop
test
jmp
sbb
data16
mov
shl
jmp
repz
add
scas
push
cmp
jmp
pop
add
daa
mov
or
inc
test
mov
pop
cmp
loopne
mov
and
aas
xlat
pop
jne
mov
popa
or
dec
or
mov
dec
mov
pop
dec
inc
jl
in
pusha
fisub
sbb
add
rol
dec
test
cmp
mov
test
or
pop
je
jnp
ins
(bad)
out
and
mov
push
mov
push
sti
ret
push
adc
sbb
sbb
ins
sbb
into
lock
pop
adc
dec
popa
adc
mov
inc
scas
dec
shr
mov
mov
adc
mov
daa
inc
push
nop
in
dec
xchg
mov
inc
test
clc
or
and
inc
test
popa
sub
mov
pushf
push
cmc
cmp
pusha
sub
push
mov
xchg
sub
or
lds
xchg
ficomp
pop
sub
aaa
sbb
adc
data16
xlat
dec
pushf
push
popa
sbb
repnz
cmp
in
xor
pop
clc
sbb
mov
sbb
je
jo
jnp
inc
xor
or
sbb
stc
rcl
bound
ins
or
and
(bad)
rcl
mov
imul
mov
xchg
dec
mov
mov
(bad)
cmp
pushf
jecxz
mov
cmp
lods
cmps
jl
inc
inc
xor
xor
cmc
and
mov
inc
xor
sti
sub
add
js
sbb
out
ror
cmp
cmps
nop
sbb
mov
adc
inc
cmp
jmp
push
or
add
pop
xchg
xchg
mov
add
fist
ret
push
mov
shl
xor
or
jl
in
sub
pop
sbb
sbb
punpckhbw
adc
sbb
dec
sti
pop
push
mov
fild
lds
jmp
adc
ja
ds
popa
cli
addr16
and
mov
jno
add
dec
inc
sbb
adc
int3
push
add
out
xchg
sub
inc
pop
mov
inc
sub
dec
loop
mov
and
and
push
jl
add
sub
pop
jbe
sbb
xor
imul
inc
js
xchg
dec
push
sub
loope
inc
sub
inc
sub
adc
clc
xor
jecxz
or
pop
(bad)
es
xor
mov
cmp
hlt
or
(bad)
pop
inc
and
mov
mov
daa
push
jo
mov
popa
imul
sub
in
pop
ret
or
push
jge
xor
movs
outs
call
daa
loopne
(bad)
(bad)
fsub
fdecstp
and
test
dec
adc
adc
add
sub
xor
adc
arpl
lea
mov
cmp
pushf
cli
mov
jge
mov
pop
sub
and
sub
push
lods
mov
pop
clc
jmp
push
push
cmp
push
adc
call
cmp
push
int
std
sub
cmp
not
xchg
push
push
clc
push
imul
retf
div
inc
enter
unpcklps
(bad)
dec
add
ss
adc
xor
cli
lea
cdq
nop
or
fistp
and
enter
or
inc
or
lar
push
sbb
sbb
outs
(bad)
jns
adc
enter
pop
and
(bad)
popa
pop
xchg
push
add
inc
or
mov
xor
scas
mov
cmps
icebp
add
or
js
jb
fadd
jmp
cmp
xor
pslld
adc
sbb
dec
dec
cwde
push
(bad)
cdq
lea
inc
xchg
loope
xlat
cmp
push
dec
pop
mov
xchg
out
pop
sub
jge
inc
ja
push
lock
or
fs
fs
dec
inc
cdq
mov
je
mov
inc
mov
mov
call
adc
cmp
push
(bad)
enter
xchg
or
xor
popa
and
movs
jo
int3
push
lods
fidivr
xor
(bad)
call
js
ins
movs
repnz
xor
movs
loopne
clc
push
sar
hlt
xchg
ins
fcomp
sbb
in
xchg
jmp
in
loopne
daa
test
in
push
retf
cmp
mov
push
in
ret
iret
rol
cmp
out
xor
mov
into
or
shl
(bad)
fimul
retf
rol
shr
inc
jo
into
fs
ret
sub
or
lock
adc
enter
lods
movs
inc
shr
and
and
dec
arpl
sbb
push
xchg
inc
sti
das
pop
enter
popf
sub
shl
ins
xor
das
mov
xor
fimul
mov
dec
mov
pop
mov
test
out
cmp
dec
shl
cs
add
ins
data16
inc
inc
jmp
js
je
jb
cwde
stos
mov
pushf
stc
jns
add
push
scas
in
cmps
ror
push
stc
test
jp
push
pop
cmps
pop
jg
outs
in
pop
pop
or
sbb
inc
and
jo
je
mov
jbe
daa
jno
in
adc
ja
inc
call
adc
sbb
das
movs
xor
jo
cmp
jmp
inc
sti
cmp
jle
xor
fs
leave
push
gs
mov
(bad)
mov
and
rol
pop
repnz
sub
add
adc
mov
rcr
mov
test
add
jle
xor
add
adc
pop
icebp
ins
pop
jp
test
pop
ficom
adc
or
movs
pop
ficom
sbb
sbb
mov
int
and
mov
rdtsc
rol
pop
iret
dec
clc
cmp
add
daa
in
hlt
test
xor
jle
xchg
ja
push
xlat
jb
xor
cdq
fcom
lods
fldenv
cdq
test
mov
call
mov
xor
pop
pop
repnz
or
dec
popa
cmp
ins
shr
scas
pop
pop
mov
xchg
and
sbb
inc
pop
fcom
test
add
jb
and
add
test
retf
popa
and
or
or
shr
fs
aaa
sub
mov
push
sbb
add
or
bnd
and
pop
jno
test
pushf
xchg
pop
sub
sbb
jmp
pop
sub
mov
imul
out
or
jnp
test
mov
hlt
out
xor
mov
enter
stos
xchg
js
jge
sub
and
mov
in
inc
imul
sar
loopne
sbb
xchg
stos
cmps
mov
sub
fmul
jmp
lods
lods
adc
push
sub
fbstp
xor
xor
or
js
jmp
shl
mov
adc
push
xor
fidiv
jnp
test
add
jb
cmc
fs
adc
inc
mov
add
jl
dec
mov
or
in
leave
pop
jmp
and
mov
jge
nop
outs
repz
inc
dec
cdq
mov
leave
push
pop
dec
stos
push
jg
adc
or
loop
mov
mov
pusha
mov
ja
xchg
xchg
xchg
inc
add
dec
cld
in
push
stos
dec
mov
ins
jg
adc
shl
push
push
mov
dec
jb
mov
es
movs
lock
sub
cmp
add
add
fidivr
xchg
outs
and
cmp
pop
out
adc
enter
inc
enter
adc
mov
add
inc
int3
cmp
mov
(bad)
push
adc
mov
pusha
punpckhdq
xor
dec
or
pop
adc
cwde
ja
test
sbb
mov
nop
pop
push
add
inc
inc
pop
rol
daa
sub
pop
xchg
mov
pop
xor
mov
shl
pop
sub
pop
cmp
dec
jo
xchg
mov
adc
push
pop
push
xlat
es
pop
jmp
jae
dec
adc
xor
cmp
int3
push
hlt
pusha
pop
rol
push
loope
dec
leave
inc
pop
mov
shl
das
mov
push
dec
(bad)
(bad)
pop
push
call
adc
or
push
push
leave
adc
sub
or
es
retf
lea
mov
ja
in
mov
or
sbb
fist
imul
into
stos
inc
popa
adc
lock
sbb
add
jle
aas
jns
or
xchg
sub
mov
jp
lock
mov
cs
sub
and
mov
push
scas
inc
outs
adc
arpl
mov
cmp
mov
popa
xlat
xchg
jecxz
inc
inc
not
add
add
and
jne
les
data16
adc
mov
push
or
loopne
dec
lods
cld
mov
and
add
enter
add
or
dec
and
(bad)
fidiv
je
adc
repz
inc
mov
push
sbb
sbb
in
mov
add
sbb
add
mov
push
dec
sbb
js
push
fild
cmp
ins
xor
fnstenv
(bad)
dec
mov
aad
jecxz
xchg
jmp
jae
aas
mov
or
pop
mov
data16
xor
out
or
test
jmp
arpl
loope
or
mov
inc
fs
fadd
pusha
mov
xchg
inc
inc
div
add
sub
and
lahf
pop
xchg
mul
ror
mov
dec
mov
or
mov
lea
out
mov
push
movlps
test
fisttp
lods
ss
fistp
aad
xchg
or
push
(bad)
fsubr
push
inc
add
rcl
jge
pop
fldpi
sub
cmps
hlt
mov
mov
stos
add
sub
mov
popa
mov
sti
dec
fadd
jmp
pop
or
sbb
and
in
jmp
outs
rcl
adc
adc
sub
mov
adc
imul
and
jno
mov
inc
icebp
mov
lock
mov
ins
inc
push
or
mov
test
dec
fdiv
jle
inc
xor
jbe
xchg
test
in
adc
cmp
xchg
rol
sbb
stos
xor
(bad)
mov
leave
invd
xchg
xchg
out
not
int3
xor
imul
jg
movs
sbb
pop
int3
imul
daa
and
cmps
inc
sub
retf
(bad)
out
dec
test
dec
in
jb
ins
mov
jo
jno
in
inc
in
inc
in
aad
cmp
cld
pop
pusha
pop
mov
fsub
adc
mov
and
rol
and
jmp
push
or
mov
dec
repnz
imul
xrstor
pop
test
cs
pusha
xchg
fcom
cwde
lea
cld
or
rcl
dec
and
pop
js
ins
push
inc
push
aaa
xchg
or
inc
push
jns
mov
loopne
(bad)
sub
(bad)
mov
mov
loope
bound
imul
mov
jg
call
add
into
sbb
mov
lock
push
push
adc
mov
inc
push
scas
enter
xor
push
add
cmps
push
shl
pusha
inc
mov
aaa
or
xchg
sub
dec
fild
push
adc
rcl
adc
shl
xor
retf
xchg
emms
and
mov
add
mov
iret
jp
repnz
in
ds
rcl
popa
or
imul
jb
nop
add
lods
mov
xchg
movs
cmp
loopne
adc
ror
dec
jnp
adc
jo
sbb
push
seto
ret
jns
and
pop
hlt
lahf
sub
adc
xchg
addr16
sub
mov
stos
scas
(bad)
add
test
inc
lea
fadd
push
push
mov
xchg
mov
sbb
sub
popa
lea
out
popa
rcl
or
push
mov
mov
cmp
cmps
fwait
add
add
and
xor
cmp
cmp
test
or
dec
xor
test
xchg
test
adc
sub
shl
scas
push
jecxz
xor
stos
cmp
rol
js
add
lods
shr
sar
and
push
popa
jns
xor
fs
jmp
push
sbb
sbb
es
cmp
xchg
sbb
jge
aam
lahf
lods
and
sub
cli
or
jmp
mov
push
mov
add
sbb
cmp
icebp
cmp
mov
loopne
push
popf
pusha
sub
and
sbb
fldcw
or
rcr
mov
scas
aaa
es
ret
dec
lds
cld
and
aas
das
mov
ja
add
sar
xor
loope
pop
les
(bad)
fsub
inc
les
sbb
int
jl
push
sbb
jo
mov
sbb
(bad)
rol
jl
push
scas
push
pop
test
jecxz
pop
jmp
cmp
leave
add
cdq
ret
fcmovnbe
into
xchg
lds
inc
adc
and
sbb
adc
sbb
loop
sbb
or
jmp
sub
dec
in
retf
shr
rcl
cmp
gs
cmps
jge
cld
push
sbb
cmp
push
dec
pop
cmp
or
push
test
push
mov
imul
push
cdq
ret
sub
pop
addr16
pop
lods
add
sbb
cmp
in
mov
repz
in
mov
add
loop
and
adc
test
cdq
pop
dec
inc
or
inc
retf
repz
jnp
sbb
pop
and
lods
mov
adc
pop
movs
dec
dec
les
or
stos
or
cmp
and
inc
sbb
and
add
mov
jmp
mov
clc
jmp
and
out
lock
test
sbb
test
pop
mov
mov
(bad)
ficom
lahf
mov
push
rol
hlt
dec
pop
and
mov
sub
sub
push
das
inc
pop
sub
in
sub
or
push
sub
movs
out
xor
jl
lahf
aas
test
sub
pop
or
mov
inc
xor
jno
add
xor
rol
add
cmp
sbb
pop
pop
ja
divps
ret
push
adc
pop
sbb
add
out
pop
inc
mov
mov
push
fisttp
or
add
inc
jbe
add
add
stos
adc
and
xchg
btr
mov
addr16
sub
sub
xchg
ret
stc
adc
daa
dec
je
sub
je
sub
inc
or
ss
lock
or
cmp
or
xor
aas
lea
into
pop
or
jmp
aam
jmp
and
in
fwait
xchg
mov
jmp
mov
or
xor
ror
test
sbb
mov
add
mov
les
les
into
inc
in
dec
jle
sub
cdq
cmps
icebp
movs
mov
push
aas
sub
xchg
hlt
pop
jmp
inc
adc
pop
pop
jmp
mov
jmp
jo
pop
push
xor
dec
and
rcr
imul
xor
scas
repnz
push
arpl
jecxz
dec
pop
dec
xchg
or
ins
dec
pop
mov
js
mov
add
sbb
or
mov
sbb
in
inc
and
test
xor
jo
sub
push
dec
adc
cmp
push
ja
jae
adc
sar
int3
jg
jbe
xor
or
cmps
jne
imul
push
inc
test
adc
or
fistp
xlat
xor
inc
cmp
out
sub
fist
add
mov
stos
aas
pop
pop
push
loop
xor
or
xor
enter
scas
push
or
mov
push
aad
mov
push
adc
add
dec
mov
or
xor
inc
(bad)
mov
cmp
mov
ss
adc
adc
loope
mov
jmp
sub
mov
mov
push
fwait
ret
or
jne
fsubr
jo
sbb
pop
bnd
push
push
mov
push
mov
in
iret
or
jg
sub
jmp
jno
pop
and
push
movs
inc
and
mov
mov
or
mov
mov
ins
lock
add
bound
leave
xor
lods
add
pop
mov
seto
cli
jmp
sub
dec
loopne
sti
inc
and
push
ret
dec
ret
mov
ret
lea
cdq
pop
bound
dec
dec
cdq
sub
add
lahf
or
jo
cs
push
jecxz
jp
mov
dec
and
jo
pushf
mov
out
frstor
ror
cwde
clc
dec
mov
ins
pop
sub
jns
(bad)
les
mov
movs
lahf
cmp
inc
cwde
outs
ret
inc
xchg
stos
lahf
jb
push
fsub
or
ins
pop
add
add
mov
push
mov
test
loopne
cli
fcmovnb
and
cmc
loopne
mov
mov
fild
jmp
xlat
mov
dec
or
add
xor
sub
ins
mov
movs
mov
dec
mov
or
mov
sbb
sbb
sti
xor
or
or
or
pushw
fisub
push
sub
ds
jl
pop
test
pop
cs
call
add
jmp
add
rcl
(bad)
enter
retf
push
sbb
push
push
jle
add
and
retf
scas
nop
add
sbb
in
fmul
or
mov
add
pop
pop
and
(bad)
jg
icebp
sbb
mov
test
xor
adc
dec
icebp
mov
xchg
add
inc
in
pop
jo
cld
or
je
or
jne
mov
xchg
fidivr
push
sub
and
mov
add
imul
je
inc
mov
or
and
push
and
dec
or
(bad)
and
mov
cs
dec
sub
test
fld
push
enter
das
xor
cmp
jbe
mov
shl
adc
jp
hlt
pop
push
inc
xor
and
in
or
icebp
fscale
lock
in
jno
mov
xchg
into
imul
or
jns
mov
jnp
data16
jmp
jbe
mov
cmp
rol
int3
std
(bad)
xchg
ds
or
push
push
push
aaa
dec
mov
inc
or
addr16
(bad)
jp
fistp
cdq
xchg
mov
mov
fistp
aam
je
push
std
shl
add
xchg
int3
or
sbb
shl
icebp
cmp
inc
in
inc
mov
ret
and
inc
fcomp
push
loop
loopne
in
(bad)
push
or
add
in
push
jbe
adc
mov
dec
and
or
xchg
into
retf
fmul
imul
sbb
and
mov
loopne
outs
or
imul
mov
mov
pop
movs
push
addr16
rol
push
sub
mov
je
add
push
mov
inc
fisub
jne
mov
or
icebp
int
jb
mov
push
int3
push
adc
daa
mov
(bad)
loopne
lahf
fcomp
test
retf
sub
jle
and
jbe
cmps
mov
jo
inc
push
or
pop
push
add
xchg
adc
or
imul
test
in
or
inc
dec
ds
push
pop
cmps
push
mov
(bad)
mov
inc
sub
adc
fldcw
pop
lea
cmp
dec
shl
sub
call
sbb
pop
adc
adc
test
sbb
xchg
mov
push
adc
xor
imul
repnz
(bad)
or
add
ret
sub
mov
adc
adc
fidivr
mov
cwde
int
aaa
sar
lea
dec
adc
pop
mov
js
or
adc
jne
xchg
lea
sar
sbb
sbb
xor
inc
adc
jmp
xor
add
lahf
inc
mov
jmp
push
pop
push
add
or
call
sbb
iret
mov
retf
adc
lods
icebp
shl
inc
xor
or
add
and
cdq
add
add
pop
cmp
(bad)
ja
test
rcl
add
adc
and
cmp
adc
js
pusha
xchg
adc
mov
jecxz
cld
adc
(bad)
daa
sbb
cwde
repz
sbb
arpl
fninit
nop
pop
cmp
hlt
test
arpl
xchg
and
iret
mov
adc
sbb
das
push
cld
mov
push
xchg
inc
dec
cmp
mov
and
add
mov
mov
aaa
jo
es
test
sbb
mov
sbb
fsub
les
inc
mov
push
cwde
(bad)
sbb
(bad)
and
rol
dec
jp
dec
lods
push
scas
leave
aam
ja
mov
mov
adc
jmp
sbb
icebp
push
jge
jmp
jae
push
or
outs
pop
in
push
jne
ror
jbe
sbb
retf
add
xchg
mov
out
jmp
jl
inc
push
push
pushf
mov
sbb
pop
pop
mov
xor
xor
or
int
stos
and
fld
fnstcw
sub
jmp
repnz
mov
rcr
push
pop
aam
adc
sub
adc
mov
xchg
bound
mov
pushf
push
cmp
sub
(bad)
outs
nop
add
dec
pop
ins
fild
adc
cli
dec
jl
ins
popf
pop
mov
mov
icebp
(bad)
loopne
push
push
dec
cli
movs
lock
(bad)
jo
sub
mov
cmps
inc
sub
adc
add
cmp
lods
and
push
push
call
push
jo
out
aam
imul
mov
pop
or
(bad)
mov
ret
inc
sbb
ror
sub
imul
push
or
ss
inc
gs
push
ficomp
adc
inc
(bad)
outs
scas
sub
dec
inc
adc
dec
cmps
mov
ins
adc
add
popf
or
stos
popa
and
inc
movups
xchg
movd
out
daa
and
lods
and
(bad)
adc
dec
jmp
out
mov
and
push
push
sar
pop
inc
and
or
cmp
cmp
bound
aas
stc
dec
adc
jle
popf
je
push
mov
daa
jmp
inc
push
xor
std
adc
adc
je
ss
jns
ins
pop
dec
jo
mov
pop
adc
fwait
push
inc
inc
loopne
adc
inc
outs
pop
sbb
inc
add
fidivr
xchg
push
aas
push
fadd
cmp
add
or
sbb
pop
adc
ret
adc
xor
push
movs
jo
xchg
and
test
adc
(bad)
sub
mov
sbb
mov
pop
daa
add
pop
imul
cmps
adc
sahf
imul
inc
ror
pop
mov
jl
and
sbb
push
xor
adc
add
ja
sbb
mov
cmp
push
or
push
jle
or
mov
xchg
aaa
mov
cmp
xor
mov
in
call
sbb
push
push
rcr
add
inc
mov
inc
or
add
xor
nop
scas
pushf
add
mov
ds
test
or
sbb
scas
jnp
push
outs
cmp
adc
ror
inc
cs
daa
adc
ficom
lock
imul
and
mov
ret
sub
aas
sub
adc
or
call
test
and
or
jnp
in
adc
adc
add
movs
mov
xchg
mov
inc
pop
inc
xchg
out
shl
mov
or
cmps
mov
cld
aas
dec
mov
or
cmp
pop
cmp
lahf
out
inc
test
and
pop
mov
dec
test
cli
or
pop
mov
adc
(bad)
ror
sub
mov
shr
inc
lock
(bad)
stos
pop
add
xchg
out
mov
ins
jmp
(bad)
(bad)
dec
lods
jmp
or
push
push
push
movs
or
sbb
cmp
leave
inc
ins
adc
les
daa
rcl
dec
dec
adc
lods
test
inc
push
stos
aam
into
ret
pop
sbb
cmps
adc
inc
adc
cmp
aam
aam
and
ret
cmc
and
cmp
push
dec
fisub
cmp
jns
(bad)
xor
mov
and
mov
dec
sti
cmp
dec
xor
ins
xchg
cmp
ja
dec
pop
inc
jae
(bad)
xchg
inc
cwde
mov
inc
push
lods
fbld
jmp
movs
inc
daa
push
xchg
xor
and
sbb
xchg
ds
mov
push
loope
mov
or
pop
mov
push
pop
inc
(bad)
adc
or
imul
adc
add
cmp
fstp
shl
cmp
mov
mov
jg
dec
cmp
sbb
add
push
pop
push
pop
out
add
xchg
mov
push
pop
inc
cmp
les
aaa
dec
mov
sub
in
(bad)
mov
sbb
add
push
mov
fimul
adc
and
in
scas
ds
nop
(bad)
dec
and
shl
and
jnp
inc
movs
in
or
test
push
push
popa
push
cmp
adc
les
push
ins
out
jae
pop
or
adc
sbb
mov
cwde
ret
push
pop
jmp
imul
into
daa
dec
fld
lock
and
jb
inc
ins
and
push
dec
mov
sbb
xchg
aas
and
dec
andps
mov
sub
or
dec
adc
(bad)
inc
add
sbb
or
jo
dec
cwde
adc
cmp
xor
sub
adc
cmps
test
xchg
inc
pop
pop
dec
nop
(bad)
outs
or
dec
imul
jmp
inc
call
mov
pushf
ss
add
addr16
mov
out
xor
daa
add
mov
inc
rcl
aaa
loopne
xchg
mov
mov
mov
jbe
xchg
movs
add
inc
inc
adc
fcmovnbe
and
mov
enter
dec
(bad)
in
je
dec
or
inc
cmp
jo
or
mov
enter
fistp
jne
inc
cmp
ret
push
mov
mov
jl
adc
sar
aad
xchg
jns
sbb
pop
or
jo
ins
lock
dec
and
fiadd
jne
stc
mov
pop
and
mov
jne
inc
out
ret
pmulhuw
pop
dec
fsub
mov
test
mov
sahf
sub
sahf
imul
fist
inc
ficom
jb
fdiv
dec
adc
xchg
add
(bad)
jo
ret
mov
xor
mov
mov
add
in
pop
sbb
leave
sub
mov
pop
cmp
cmp
in
and
adc
aas
or
mov
imul
pop
aas
adc
cmp
retf
dec
add
or
(bad)
rcr
out
cmp
mov
stos
in
(bad)
daa
push
sbb
dec
fisttp
dec
inc
jo
mov
jb
sub
inc
jb
lock
dec
clc
inc
outs
je
pop
dec
gs
inc
dec
movs
pop
ins
ds
js
fst
xchg
xor
test
pop
ins
mov
cmp
cmp
xor
adc
stos
add
test
push
sub
jb
inc
iret
dec
movs
and
xlat
hlt
rol
add
xchg
sti
jns
loop
mov
xor
xlat
push
xor
jge
mov
and
pusha
xchg
pand
jmp
in
in
test
add
adc
test
inc
inc
scas
(bad)
mov
and
nop
daa
cmp
repnz
ds
das
sbb
(bad)
pop
in
loope
movs
hlt
jl
adc
adc
dec
inc
push
sbb
push
mov
mov
adc
stos
popa
push
iret
lods
retf
or
dec
test
movs
inc
adc
dec
inc
shr
(bad)
out
clc
sub
pushf
sub
sbb
sub
rol
aaa
jns
cmc
mov
or
loope
mov
mov
add
inc
dec
in
or
pop
and
inc
inc
lahf
jecxz
icebp
(bad)
mul
push
push
inc
out
lock
and
or
push
ror
and
loopne
jl
test
jbe
sbb
and
sbb
mov
sub
inc
test
adc
loopne
sub
sbb
in
add
test
push
sub
mov
inc
cmp
sbb
leave
cmps
add
test
add
mov
mov
ror
adc
pop
push
repnz
sar
add
add
sbb
inc
call
push
sub
or
cmp
fdiv
mov
adc
pop
add
imul
adc
clc
inc
add
push
pop
push
xchg
rcr
(bad)
ror
mov
loopne
je
dec
mov
inc
arpl
sbb
or
test
add
sub
test
xchg
jmp
mov
push
sbb
push
aas
sbb
pop
out
call
pop
push
out
push
in
adc
add
sub
and
mov
cs
jb
scas
push
shl
es
test
ins
inc
jg
enter
lea
mov
enter
inc
in
pop
nop
shl
gs
call
out
scas
test
in
jb
jg
sub
ret
xchg
arpl
inc
clc
shr
mov
push
xor
adc
xor
pop
push
pusha
add
pusha
push
xor
and
pop
mov
cdq
movs
call
dec
sub
inc
add
cmp
inc
outs
add
cmp
outs
es
outs
popa
outs
daa
sbb
inc
push
retf
push
add
pop
call
and
or
ja
xchg
jmp
das
jae
ins
gs
ja
loop
imul
jne
arpl
xor
push
mul
les
adc
xchg
ds
inc
or
xchg
cld
imul
adc
loopne
(bad)
sbb
push
push
dec
mov
test
imul
sbb
fs
and
enter
hlt
xor
lock
mov
jmp
dec
shl
imul
push
sub
inc
stos
(bad)
pop
dec
fmul
repnz
fdivr
out
xor
add
(bad)
in
xor
or
(bad)
movzx
sub
rcr
mov
dec
inc
inc
rcl
ret
inc
or
(bad)
aam
pop
or
test
in
sbb
out
adc
enter
ins
loopne
add
sar
and
aam
pop
ror
test
add
add
adc
ins
pop
add
dec
cmp
sub
lea
mov
shl
mov
out
fld
les
shl
sub
xchg
or
enter
mov
les
mov
sub
add
jl
xlat
or
repz
int3
inc
cli
or
and
lock
or
jne
iret
ror
aaa
push
mov
add
adc
xrelease
push
rol
std
rcr
das
sbb
jmp
mov
xor
push
adc
push
push
add
or
lock
mov
dec
or
xchg
xor
jl
or
dec
cld
outs
fild
sti
jne
cwde
loop
imul
or
mov
jge
xor
and
and
dec
mov
add
and
mov
popa
push
sbb
mov
in
add
fs
mov
(bad)
pusha
dec
xor
dec
add
and
push
int3
fld
not
mov
push
or
push
movs
test
lea
add
push
pop
shr
dec
lea
jne
jle
repz
push
push
xchg
jns
and
inc
aas
(bad)
or
adc
test
sbb
xor
jp
out
dec
bound
jno
dec
btc
pop
(bad)
push
sub
cs
leave
daa
dec
stos
push
pushf
dec
icebp
shl
adc
xor
dec
push
sbb
daa
aam
cld
xor
pop
std
inc
shl
sub
jo
cwde
fs
jo
sti
daa
jmp
ret
add
add
xchg
adc
call
adc
xchg
sub
fistp
add
retf
mov
push
or
push
inc
fiadd
jge
jne
sub
sub
xchg
cmc
call
push
add
push
dec
mov
pop
jmp
add
jmp
jb
adc
dec
add
dec
lods
pop
iret
loopne
pusha
ss
or
jl
scas
popf
clc
inc
jbe
arpl
mov
xchg
dec
push
dec
push
or
mov
sbb
push
push
sbb
dec
add
mov
enter
add
inc
add
movs
xor
test
jp
adc
lea
outs
jmp
push
adc
sbb
add
stc
leave
cmp
sub
adc
mov
test
jmp
adc
add
lock
daa
bound
sbb
adc
add
adc
dec
out
pushf
leave
jmp
sbb
push
sbb
sub
shl
add
test
mov
xor
inc
lea
js
shl
shr
ret
or
test
sub
mov
cmp
jb
cmp
ja
push
rol
fs
push
cmp
pop
push
(bad)
in
mov
add
and
adc
(bad)
jg
push
push
je
gs
pop
dec
jne
mov
lock
lods
shl
inc
mov
stos
adc
push
gs
xor
sub
stc
mov
add
add
mov
pop
das
pop
add
push
inc
shr
adc
adc
add
aas
lods
or
lock
shl
(bad)
adc
or
inc
sbb
mov
pop
add
xlat
mov
out
adc
bound
pop
add
inc
nop
mov
push
inc
mov
mov
cmp
mov
pop
fidivr
out
in
push
or
(bad)
fidiv
pop
ret
and
fild
sbb
aad
push
iret
xlat
add
add
inc
addr16
jo
ins
daa
daa
mov
dec
in
or
inc
inc
outs
and
jmp
ds
cmp
inc
jae
sbb
mov
dec
cs
cmp
inc
mov
icebp
mov
ins
pop
mov
mov
add
jo
mov
jg
stc
adc
not
add
pop
out
loopne
ret
aas
jg
push
cmp
int3
pop
fimul
add
jno
mov
mov
add
cmp
or
add
(bad)
nop
sub
(bad)
sha256msg2
inc
jl
clc
mov
or
dec
mov
call
cs
iret
mov
lock
(bad)
push
push
xchg
mov
(bad)
aas
nop
shl
cmp
int
pop
adc
add
orps
push
pop
xlat
xor
pop
dec
or
and
push
mov
das
or
fwait
imul
mov
dec
aad
sub
pop
daa
mov
adc
in
dec
dec
daa
daa
daa
daa
inc
inc
cmp
daa
daa
daa
daa
xor
sub
daa
daa
daa
daa
and
sbb
daa
daa
daa
daa
adc
or
add
add
sbb
sahf
or
push
scas
add
and
pop
xchg
cld
mov
pop
rcl
mov
sbb
inc
ror
jmp
push
push
outs
or
pop
enter
push
mov
iret
adc
test
dec
nop
fnstenv
shl
imul
lods
pop
mov
rcl
pop
add
jnp
and
add
rol
push
add
rol
and
jmp
into
mov
(bad)
leave
ins
shr
ftst
dec
fcom
fdiv
mov
xrstors
daa
inc
int
test
fs
inc
mov
fsub
ret
ret
les
inc
dec
add
jg
mov
pop
iret
repz
gs
retf
aad
fwait
cmp
repz
stos
mov
ret
imul
sti
add
and
add
add
ret
dec
inc
cdq
(bad)
icebp
sbb
(bad)
dec
stc
xchg
cmp
shr
lds
jno
inc
mov
movs
leave
aam
pusha
mov
ja
mov
(bad)
jg
jmp
mov
adc
pop
push
sub
in
test
and
inc
add
pop
pop
mov
daa
lahf
and
stos
clc
rol
adc
inc
add
and
jbe
aam
in
cwde
iret
cwde
out
mov
scas
stos
pop
ror
mov
push
ror
inc
dec
dec
mov
jb
jns
and
mov
adc
lock
cmp
add
loopne
mov
jmp
dec
or
mov
clc
cs
add
loopne
nop
mov
inc
push
push
dec
cmp
push
popa
ret
inc
and
mov
pusha
and
mov
mov
or
adc
leave
sbb
movs
xchg
(bad)
mov
clc
add
js
xor
xchg
mov
and
push
jg
test
ficom
cmp
jmp
cmp
push
adc
aaa
rcr
sub
adc
bound
adc
iret
dec
dec
shl
sahf
adc
jno
ret
lock
mov
inc
dec
and
mov
sub
mov
shr
jp
rcr
dec
xchg
push
jl
mov
xor
inc
push
mov
mov
movs
xor
jl
push
sbb
adc
pushf
push
stos
inc
and
iret
ret
dec
stc
mov
in
mov
pop
mov
xor
jp
jmp
adc
inc
rcl
test
sub
xchg
mov
fucomp
sbb
retf
adc
fisttp
dec
scas
sub
dec
jne
sbb
fwait
dec
in
jne
sti
or
imul
cmp
cmp
fild
sub
adc
pop
push
dec
push
mov
mov
and
and
sbb
out
push
push
repnz
cdq
arpl
adc
inc
aaa
pop
mov
pop
(bad)
hlt
addr16
and
stos
add
jnp
mov
stos
(bad)
mov
push
xlat
mov
jo
or
ins
mov
sar
inc
mov
jmp
dec
sub
jne
jg
iret
(bad)
fisttp
jecxz
and
jnp
scas
push
adc
(bad)
cmp
clc
and
div
(bad)
rcl
jmp
fstp
cwde
(bad)
stc
or
inc
js
pop
and
xor
retf
je
pop
push
ficomp
xor
rol
cmp
stos
pop
jp
pop
rcr
inc
xchg
enter
ret
sbb
jne
push
mov
xor
xchg
test
dec
je
(bad)
cmp
outs
les
mov
hlt
int
push
jmp
iret
and
and
icebp
fld
pop
dec
imul
push
lods
jge
loopne
je
movs
cmp
xchg
push
call
jmp
leave
jne
dec
(bad)
sub
test
in
fbstp
jmp
test
jg
jle
aam
arpl
scas
call
xor
sbb
pop
inc
cs
jmp
pop
es
xlat
dec
xor
push
and
popa
pop
clc
fld1
adc
jmp
cwde
or
loopne
retf
or
cmp
mov
inc
adc
sbb
ins
enter
nop
add
and
or
mov
repnz
dec
ja
inc
inc
sti
je
jge
add
xlat
pusha
pop
sub
push
mov
fucom
sub
xchg
sahf
xor
mov
mov
int3
xchg
jae
sub
fcomi
pop
ins
enter
mov
neg
sahf
push
(bad)
(bad)
xor
push
push
sahf
push
inc
or
pusha
fwait
out
aam
ss
loopne
pusha
rcl
adc
retf
jp
inc
pop
and
push
sub
lock
or
mov
nop
cmp
stc
sub
sbb
fadd
pop
sbb
jge
arpl
ret
fadd
mov
aam
call
or
rcr
mov
pop
cmc
xor
lock
aaa
xor
mov
sbb
lods
fsub
int3
push
ret
push
xchg
int3
pop
jmp
pop
rcl
mov
out
or
jno
in
(bad)
lds
mov
aaa
sti
out
inc
lock
aaa
mov
das
(bad)
idiv
aas
hlt
push
sub
stos
sar
ret
sbb
mov
fs
xor
and
retf
inc
fimul
push
(bad)
xor
inc
adc
add
cmp
dec
cmp
pop
fiadd
mov
pop
xor
or
pop
sub
push
sbb
add
pop
push
push
shl
pop
push
addr16
test
cs
pop
mov
add
arpl
xlat
dec
inc
fsubr
xchg
pop
fbld
mov
mov
dec
out
icebp
mov
sub
mov
sub
mov
xchg
xchg
jg
sti
int3
jmp
sbb
jmp
jbe
es
jmp
push
xchg
and
sbb
mov
cs
inc
add
mov
xor
fst
loopne
in
mov
jl
out
mov
push
test
hlt
pop
loop
mov
mov
(bad)
cmp
aad
pop
js
test
ja
mov
sub
out
std
inc
xchg
cld
(bad)
sar
adc
rol
out
(bad)
rcl
out
aaa
sbb
test
cmp
mov
test
push
cs
mov
jo
popa
fimul
dec
pop
cdq
inc
or
dec
adc
mov
loope
iret
and
movs
enter
dec
adc
jmp
pop
mov
shl
in
cmp
int
cmp
adc
mov
jns
imul
repnz
scas
imul
hlt
or
sbb
loope
jns
loop
imul
xor
(bad)
in
mov
push
pop
rcr
les
pop
add
out
cmp
pop
and
(bad)
mov
pop
aas
data16
das
repz
sbb
mov
cwde
les
add
jl
mov
cmp
je
mov
xchg
push
movs
movs
cmp
pop
sub
and
mul
push
inc
cmps
js
sub
lods
imul
(bad)
push
mov
loopne
pop
js
push
pop
inc
sub
mov
jmp
push
and
mov
adc
sbb
jae
dec
mov
or
in
dec
sbb
xchg
movs
jb
in
mov
mov
adc
dec
adc
sub
mov
xchg
jg
lock
sbb
jecxz
outs
rol
add
push
sbb
loope
adc
ss
dec
jo
and
lods
jle
or
push
popa
or
jle
push
pop
inc
add
add
and
sub
lahf
into
xor
cdq
and
cmp
xor
and
pop
test
hlt
jl
pop
rcl
dec
ds
test
cs
mov
jb
mov
out
mov
push
lock
push
adc
and
in
mov
xchg
(bad)
dec
adc
cmp
in
test
test
mov
ret
push
test
(bad)
and
jmp
xor
es
rol
lock
and
lock
pop
jl
sub
or
dec
enter
das
adc
cmp
mov
xchg
sahf
cmp
push
mov
jge
pop
in
add
int
cmp
pusha
cmp
jo
jecxz
jb
adc
xor
leave
cmp
jl
hlt
mov
jb
inc
or
or
add
push
lea
mov
jg
dec
loop
pop
(bad)
(bad)
ds
outs
dec
jl
jb
push
sub
xor
add
daa
push
or
xor
inc
pop
cmps
push
test
out
add
mov
dec
cmovno
cmps
cmps
add
nop
push
adc
adc
nop
mov
pop
push
out
jge
cmps
cmps
cs
rol
pop
or
or
push
push
jmp
fsub
jmp
test
xor
inc
in
in
gs
pop
adc
sbb
mov
or
gs
loope
ficomp
sbb
jb
push
sub
sub
mov
xor
ficom
sub
and
adc
add
(bad)
adc
aaa
jl
add
jae
xor
icebp
add
call
add
stos
pop
out
adc
sub
in
and
test
or
mov
jae
mov
dec
les
xchg
out
sbb
ret
push
push
inc
push
xchg
sbb
daa
fucomp
js
shl
cwde
popf
in
add
sbb
out
push
fldcw
jo
and
cmp
push
(bad)
pop
jnp
mov
mov
push
push
push
sti
or
sub
and
mov
inc
push
push
add
inc
(bad)
add
xor
ja
and
or
iret
dec
jmp
adc
mov
push
or
(bad)
mov
push
inc
jb
lahf
pushf
add
xor
dec
adc
sbb
sahf
inc
retf
sub
jno
ret
std
adc
pop
dec
adc
mov
fmul
inc
xchg
jbe
xor
fs
xchg
push
pop
mov
push
clc
pop
sti
cmps
and
lock
sbb
dec
popa
imul
push
and
aaa
loopne
jne
or
cld
jp
push
fidivr
mov
push
push
and
fadd
mov
push
mov
out
lods
pop
movs
sti
ins
loopne
xchg
int
lock
push
jne
adc
jmp
test
mov
popf
and
fcomp
add
movs
sub
sub
sbb
add
test
and
jne
jmp
jae
sub
test
jmp
icebp
call
pop
icebp
call
into
dec
sbb
cmp
cmp
xchg
push
jl
or
test
and
popf
aas
adc
cmp
lods
xchg
mul
sbb
push
push
sub
push
inc
cmp
mov
mov
adc
add
movs
sub
xchg
jo
(bad)
test
shr
call
lea
imul
adc
sbb
cmp
stos
fdivr
dec
add
(bad)
daa
or
loope
(bad)
jg
cs
xchg
adc
xor
or
cmp
fldcw
out
fsubp
outs
push
push
je
sub
or
push
adc
jae
mov
mov
pop
inc
jecxz
test
dec
or
fdivr
shl
and
mov
icebp
imul
adc
sub
sbb
sub
add
sbb
(bad)
div
fild
jmp
add
pop
pop
lock
or
fwait
sbb
inc
cld
sub
aas
retf
scas
xor
jo
xor
dec
out
ror
mov
sbb
inc
adc
mov
adc
inc
jne
cs
popa
retf
add
arpl
adc
or
xor
test
inc
imul
push
dec
xchg
ffreep
inc
sub
rol
(bad)
sub
retf
test
jmp
mov
sub
lock
jno
pop
jp
or
dec
les
push
gs
bound
xchg
pop
shr
push
js
faddp
out
frstor
jle
jle
dec
jp
loop
aaa
sbb
add
and
sbb
call
mov
and
and
rcl
fsub
and
and
loopne
call
in
lock
clc
and
fwait
add
and
and
or
adc
and
and
sbb
and
fs
sub
xor
fs
inc
fs
dec
push
push
fs
pop
pusha
fs
test
in
mov
(bad)
loopne
enter
popa
data16
mov
arpl
mov
mov
test
ret
add
xor
push
fnstcw
dec
aam
add
and
cdq
je
in
dec
push
push
movs
hlt
mov
and
dec
gs
sub
enter
test
je
movs
xor
aam
fcom
fdivr
loopne
in
mov
add
in
inc
sub
push
adc
and
or
gs
xor
inc
cmp
xchg
add
push
add
fs
push
sbb
cwde
gs
sub
adc
dec
mov
and
xchg
dec
push
push
and
clc
sub
push
movs
xor
sub
xor
xor
sub
push
sbb
fs
or
gs
inc
test
add
push
movs
xor
fcomp
nop
retf
lock
adc
stc
pop
sbb
sbb
pop
inc
cmc
dec
add
xchg
inc
push
stos
inc
add
cmc
jge
adc
push
nop
loopne
sub
sbb
in
cmps
jns
ins
outs
jae
and
add
sub
xlat
es
daa
rcl
mov
es
mov
mov
push
pop
jnp
and
mov
test
je
xchg
mov
ret
mov
mov
jae
mov
inc
fcomp
dec
arpl
jae
pusha
bound
dec
into
fs
lea
sbb
(bad)
ss
ins
jns
jp
jae
mov
sbb
pop
repz
pop
pop
pop
adc
sahf
ins
xlat
pop
es
int
mov
call
mov
imul
addr16
pop
add
fcom
mov
pop
pop
test
(bad)
loop
adc
mov
mov
stos
jns
in
test
dec
outs
push
retf
xlat
cmps
cmp
push
pusha
in
push
mov
and
add
and
or
fstp
lods
sbb
xchg
pop
adc
shl
xchg
icebp
add
fsub
test
and
ret
xchg
mov
into
in
icebp
and
xchg
jne
ins
outs
jo
mov
das
pop
fs
sub
imul
int3
rcr
cmp
test
inc
outs
arpl
mov
pop
add
xchg
pop
outs
loopne
xchg
popa
pop
in
sbb
adc
add
cmp
adc
push
or
hlt
sbb
ins
jne
xchg
xlat
fld
add
repnz
sbb
cmp
inc
mov
scas
mov
and
punpckhbw
dec
test
cmps
mov
inc
call
test
inc
push
dec
inc
push
dec
sar
jle
inc
ja
aas
sbb
pop
js
cld
outs
sbb
and
arpl
sbb
xchg
jmp
xor
dec
in
daa
push
push
jge
or
jg
push
or
daa
les
cmp
leave
push
jl
add
jl
ret
(bad)
(bad)
dec
pop
ret
push
or
xchg
mov
adc
sub
fwait
sub
jbe
outs
dec
dec
outs
xchg
in
ins
push
dec
pusha
pop
cmp
pop
pop
icebp
cwde
or
fcomp
xor
add
xchg
mov
outs
scas
inc
cmp
(bad)
adc
enter
popa
dec
aaa
adc
popa
jbe
push
ins
arpl
inc
mov
fs
and
or
or
inc
and
add
push
fs
popa
arpl
gs
adc
out
sbb
imul
int3
or
xor
push
outs
add
(bad)
pfnacc
inc
inc
jbe
je
cmps
or
mov
push
mov
jo
xchg
or
sbb
pop
(bad)
es
jns
enter
retf
outs
adc
popa
push
stc
iret
dec
adc
pop
shl
mov
inc
xor
inc
mov
outs
fs
jp
push
and
inc
adc
arpl
dec
mov
and
adc
ja
or
outs
mov
dec
push
inc
call
data16
pop
adc
or
mov
fs
inc
mov
enter
cmp
pushw
xor
push
jb
or
popa
mov
xchg
test
pop
ret
pop
imul
xor
jnp
jg
inc
mov
cs
dec
add
xor
popf
adc
push
push
popa
mov
dec
adc
int
arpl
or
iret
adc
or
add
ins
jae
mov
sub
adc
cmp
add
xor
push
inc
mov
inc
xchg
push
daa
in
imul
pop
das
inc
imul
add
out
in
push
cmp
mov
adc
gs
popa
push
pushf
jne
xlat
lahf
push
test
out
xor
lahf
adc
mov
loop
mov
and
xlat
sbb
arpl
mov
adc
movs
lods
push
xchg
fbstp
fadd
sub
mov
sbb
in
stos
je
push
gs
push
jno
inc
xlat
leave
ds
ins
shr
pop
fist
mov
imul
pop
lods
adc
bound
push
fist
sar
imul
mul
addr16
out
(bad)
cwde
cmps
or
adc
aas
adc
and
ret
xchg
pusha
pop
inc
mov
(bad)
push
aaa
pop
sbb
pop
add
addr16
imul
das
fisttp
xchg
push
push
jo
aaa
push
enter
xchg
inc
call
mov
mov
aaa
jl
ins
cmp
outs
imul
jg
xor
or
das
cmps
adc
sbb
push
popa
jno
mov
adc
ja
or
stc
lock
outs
unpcklps
pusha
add
cmp
or
lea
nop
sub
pop
sbb
pop
or
call
mov
push
adc
xchg
test
pcmpgtb
shl
aam
out
inc
popa
sub
xor
imul
mov
xchg
add
jae
out
outs
ins
leave
xchg
addr16
and
mov
bound
push
enter
and
arpl
sbb
nop
inc
test
add
inc
dec
enter
outs
xchg
xor
dec
cmp
(bad)
cmps
adc
cli
mov
adc
addr16
inc
cmc
mov
mov
les
xchg
daa
sbb
(bad)
xor
xchg
pop
pop
sub
cmps
push
push
add
or
lds
adc
je
adc
push
jmp
cmp
daa
push
mov
imul
sub
pop
or
es
pop
(bad)
xchg
(bad)
lock
repnz
rcpps
imul
les
sub
imul
stos
inc
jns
gs
pop
es
push
aaa
addr16
or
ret
stos
sub
or
lahf
pop
js
jns
or
xor
lock
repnz
cwde
xchg
cmc
leave
retf
mov
loopne
mov
mov
inc
shl
sbb
or
lock
push
fwait
jmp
scas
loopne
adc
aas
sub
pop
dec
or
push
push
push
jne
outs
adc
jb
test
add
xchg
or
push
jle
scas
add
ret
sbb
push
adc
xchg
in
sub
add
inc
imul
fs
add
mov
mov
cmp
imul
dec
outs
xor
xor
(bad)
aam
and
daa
jl
push
push
sbb
sar
add
xor
idiv
or
add
jns
lock
in
push
sub
xor
and
ss
add
adc
mov
mov
or
mov
mov
loope
inc
movs
adc
or
fst
(bad)
fmul
add
(bad)
inc
test
adc
jae
stos
test
inc
cmp
cmps
xchg
push
leave
add
int3
inc
mov
ret
in
cmp
dec
or
loop
and
mov
push
inc
mov
push
lods
or
or
cmp
push
mov
pop
dec
and
mov
cmp
sub
xchg
or
pop
mov
daa
cmp
daa
fmul
or
imul
push
inc
jge
and
inc
push
cld
scas
jl
push
sar
push
shr
push
mov
add
enter
(bad)
out
inc
and
jo
or
add
and
inc
jle
pop
sub
push
xor
clc
add
(bad)
in
pop
pop
mov
xor
pop
inc
loopne
dec
pop
sahf
or
push
stos
or
push
shr
inc
pop
add
pop
repnz
add
test
xor
sub
add
or
mov
xchg
inc
xchg
test
cmps
add
jbe
sbb
idiv
and
cmp
push
sbb
les
loopne
fiadd
xor
or
ror
ror
out
xor
mov
xchg
push
and
jne
adc
cwde
(bad)
fstp
xchg
mov
sar
sub
ficom
push
push
push
sbb
outs
xchg
add
cmp
ja
cmovae
sbb
pop
cwde
inc
mov
popa
in
scas
dec
xchg
mov
pop
or
je
add
cmps
shr
rcl
mov
adc
cmp
aas
inc
push
add
outs
fcmovu
into
add
adc
test
aam
push
cmps
js
jno
fild
or
jnp
shl
adc
(bad)
sar
fistp
adc
xor
pop
sbb
jnp
fild
adc
aam
enter
push
out
outs
xchg
mov
pop
pop
and
push
repnz
outs
add
xchg
add
dec
test
imul
cs
pop
dec
outs
outs
xchg
xchg
ins
ins
pop
push
outs
pop
or
and
icebp
xor
sub
push
ins
mov
push
add
(bad)
push
ja
mov
sub
push
sbb
lea
fsub
sub
mov
adc
jl
adc
loop
mov
ret
pop
rcr
in
std
fs
addr16
push
mov
ins
hlt
dec
in
jo
(bad)
push
retf
cmp
sub
mov
jl
mov
les
loopne
leave
xor
lea
sbb
dec
fimul
dec
test
leave
xor
cwde
dec
adc
repnz
js
fadd
dec
ja
daa
iret
inc
or
pop
cmp
sbb
add
sub
pop
sbb
into
sub
rol
sbb
dec
and
pop
dec
repnz
adc
adc
mov
pop
push
movs
(bad)
sbb
mov
inc
and
jnp
lods
add
push
cwde
adc
and
jmp
push
les
xlat
nop
mov
pop
push
adc
sbb
rol
jae
(bad)
jmp
or
leave
leave
ret
sub
xlat
adc
inc
and
lahf
cmp
jnp
fdivr
std
or
cmps
jo
sbb
or
mov
sub
mov
loopne
dec
jecxz
sub
arpl
push
push
mov
scas
push
mov
or
js
add
push
dec
imul
inc
les
and
push
dec
ins
aas
push
xlat
inc
push
daa
push
push
inc
in
adc
iret
adc
sub
daa
ss
mov
xor
dec
add
add
inc
push
add
push
push
mov
je
cmp
mov
mov
loopne
fwait
rcr
fnstcw
inc
add
inc
adc
mov
adc
jl
add
jno
adc
add
adc
mov
retf
and
out
scas
nop
add
std
pop
rol
or
loope
je
fist
or
cmp
jnp
add
mov
aas
fcom
inc
push
jno
adc
inc
and
mov
cld
dec
aad
fs
lods
enter
ret
push
mov
sti
and
clc
push
(bad)
clc
dec
or
outs
fisttp
mov
mov
or
retf
fist
sbb
and
iret
or
jns
imul
sbb
aaa
add
inc
pop
repnz
movs
dec
push
dec
movs
pop
xor
les
push
int
leave
add
imul
call
rcl
push
ret
je
mov
or
jmp
aaa
pop
mov
pop
dec
in
rol
adc
das
lock
inc
and
xchg
sbb
jns
sub
test
rol
inc
neg
lea
repz
xlat
cwde
sbb
inc
leave
and
pop
adc
and
pop
adc
fisttp
cmps
push
xchg
sbb
nop
nop
pushf
lahf
clc
mov
rcl
adc
movs
(bad)
arpl
(bad)
or
(bad)
lahf
xor
bound
pop
aad
and
pop
dec
das
and
imul
pop
imul
push
cmp
pop
dec
or
or
pop
xchg
adc
inc
mov
add
inc
repnz
inc
xlat
daa
mov
sbb
sub
je
pop
ins
add
jecxz
in
jbe
pop
cmps
test
pop
pop
imul
out
cmp
push
js
push
pop
push
stc
dec
(bad)
pop
sbb
enter
hlt
inc
sbb
in
sbb
sysret
mov
jg
cmps
dec
(bad)
and
inc
add
add
inc
fidiv
jns
sbb
movs
mov
xor
and
jl
lods
or
pusha
or
pop
and
les
mov
push
je
outs
jae
pop
jl
ret
add
and
aaa
add
hlt
mov
push
sub
daa
cmp
into
rcr
mov
loope
add
enter
aad
xchg
int3
fist
push
dec
clc
sar
xchg
test
in
adc
mov
push
jl
gs
retf
lock
xor
aam
shl
sbb
mov
scas
mov
adc
fs
enter
aam
pop
sub
fsub
push
sbb
inc
fmul
fmul
inc
push
movs
xor
cwde
test
sbb
inc
sub
nop
inc
push
movs
push
in
call
mov
inc
push
jo
out
and
inc
xor
int
daa
push
sub
pop
test
or
out
fcom
push
sbb
ss
pop
int3
sub
imul
shl
stos
movs
xor
jg
int3
or
push
fbstp
popf
pop
ja
das
cmp
movs
pop
hlt
push
or
cld
ds
mov
mov
mov
push
push
push
push
mov
add
iret
sbb
jae
xchg
daa
sub
ins
cld
dec
sbb
stos
add
popa
push
and
imul
arpl
dec
sub
(bad)
hlt
rol
sub
outs
pop
arpl
ins
push
arpl
imul
jge
adc
outs
pop
js
bound
mov
es
jb
jb
popa
or
mov
popa
dec
es
ins
bound
popf
dec
mov
scas
imul
fwait
popf
xlat
add
addr16
jb
addr16
outs
jnp
add
pop
mov
arpl
ja
ficomp
daa
push
jg
sub
scas
cmp
ins
das
je
cmps
nop
mov
mov
xchg
pop
ffree
sub
cmp
xchg
idiv
jo
jb
arpl
jge
fsub
jns
outs
dec
pushw
das
sti
ficomp
outs
add
or
outs
pop
and
and
adc
push
inc
movs
mov
movs
dec
retf
and
cmp
aas
sbb
jmp
add
push
adc
fiadd
shr
jne
xor
retf
mov
and
(bad)
cs
loop
mov
mov
cmp
ins
setae
sub
sbb
jno
sbb
lods
aad
out
cmps
out
ss
in
lea
pop
aaa
mov
mov
and
sub
add
jg
clc
loop
xchg
(bad)
sti
and
push
xor
std
mov
cld
xchg
mov
clc
add
dec
mov
js
dec
jmp
arpl
loopne
test
arpl
push
les
add
nop
into
mov
rcl
mov
mov
inc
sahf
jne
pop
retf
adc
inc
loopne
scas
and
mov
icebp
movs
mov
jle
pop
sbb
imul
cld
hlt
test
in
ror
jns
xchg
enter
or
jg
add
ss
cmp
xchg
mov
dec
xchg
lahf
xchg
dec
or
add
int3
loopne
or
add
rol
sub
xor
inc
call
add
push
jns
pop
push
jmp
sbb
or
push
or
add
adc
xchg
(bad)
lods
mov
jbe
inc
fcom
ja
(bad)
mov
mov
add
idiv
repz
add
pop
and
push
jbe
out
inc
dec
fistp
push
jns
inc
add
xor
add
dec
in
and
add
add
push
scas
pop
aaa
xor
les
mov
sbb
lea
add
jmp
aas
push
add
pop
or
or
or
or
or
or
jns
adc
adc
out
sahf
out
adc
out
sahf
sbb
sbb
and
and
repz
and
es
lahf
mov
rcr
hlt
add
sahf
out
cmp
imul
out
sahf
scas
rcl
sar
repz
adc
repz
pop
push
xchg
cmp
repz
mov
mov
jmp
xchg
push
scas
or
add
adc
and
xchg
retf
pop
adc
mov
or
push
cs
sbb
dec
sub
in
retf
and
mov
adc
cs
xor
dec
sub
xchg
retf
adc
jb
in
dec
sbb
push
mov
sub
sbb
mov
xor
xchg
retf
popa
imul
test
adc
or
sbb
push
push
test
mov
mov
in
mov
mov
sub
jg
jne
mov
inc
loope
les
aaa
and
push
div
xor
movs
movs
adc
fadd
jb
loopne
or
push
lea
lea
call
lock
outs
push
adc
and
xor
push
sbb
clc
xlat
lods
fst
jb
inc
(bad)
call
lods
sub
mov
sub
enter
or
int3
mov
push
pop
and
inc
add
xor
jnp
loopne
fadd
fadd
jmp
lea
mov
test
adc
(bad)
jge
and
call
sbb
push
xchg
jnp
pop
or
and
mov
fs
inc
sbb
mov
out
addr16
jne
add
or
inc
xchg
lods
sub
mov
inc
xor
adc
(bad)
and
sub
pushf
scas
xor
lock
mov
add
push
enter
test
mov
push
int3
js
sub
ins
sub
add
ds
dec
outs
jne
outs
dec
adc
inc
pop
imul
inc
pop
js
push
ins
(bad)
out
sti
ds
or
popa
jb
add
xchg
mov
or
pop
add
rcl
sub
clc
mov
pop
push
bound
ins
fs
shr
repnz
pop
jnp
nop
das
into
adc
out
(bad)
mov
movlps
add
adc
inc
jp
push
or
cwde
mov
jge
and
sub
push
inc
fs
fs
and
cwde
add
xor
xor
ret
ins
test
push
xchg
in
pop
and
pop
fucomp
add
mov
pop
fcmovnb
jb
dec
ss
cli
push
pop
je
sub
jne
outs
out
ja
sbb
or
das
lea
imul
ins
adc
sub
or
pop
add
and
xor
push
push
dec
outs
push
adc
lods
inc
inc
in
sbb
fdivr
adc
inc
out
stc
out
aam
jo
movs
inc
add
lahf
out
push
js
hlt
adc
xor
idiv
loopne
push
jo
cmp
repz
mov
mov
pmullw
cmp
or
rcr
inc
das
pop
das
pop
pop
xchg
pushf
inc
dec
outs
shl
data16
xchg
dec
push
cmp
cmp
pusha
aaa
out
fldcw
cld
dec
lock
imul
inc
outs
add
xor
cmp
outs
std
push
adc
pusha
push
out
ins
ffree
pushf
imul
repnz
push
out
push
clc
push
arpl
cmps
pusha
nop
(bad)
cmps
pop
sbb
jo
sbb
push
sar
push
popf
inc
cmps
or
mov
jl
xor
xor
imul
push
pop
imul
inc
jbe
add
inc
dec
pop
inc
adc
jmp
jns
dec
cmp
ja
sti
xor
retf
and
jne
push
jo
jmp
cwde
jl
xor
push
xlat
packssdw
scas
dec
cwde
hlt
arpl
outs
fbstp
add
fs
inc
push
sbb
pause
iret
repz
cmp
ins
add
add
mov
push
nop
sbb
add
and
and
inc
push
je
cmp
shl
repz
cmp
inc
mov
loopne
stc
mov
gs
lods
dec
std
rcr
push
pop
and
push
gs
xchg
sub
dec
repz
xchg
seto
push
pop
adc
test
repnz
rol
sbb
jo
adc
push
push
outs
cdq
sub
inc
je
pusha
nop
aam
sbb
pop
pop
mov
ds
call
pop
sbb
stos
mov
xchg
out
mov
adc
inc
add
lea
mov
fucomp
nop
adc
ja
sar
xchg
cmp
add
and
cwde
das
in
mov
pop
fwait
nop
or
cmp
mov
pop
push
nop
pop
push
pop
pop
jb
dec
mov
sbb
enter
mov
sub
add
sub
(bad)
pop
pop
dec
pop
cmp
pop
daa
dec
sub
push
enter
outs
push
xor
push
pop
sbb
add
inc
xor
cs
inc
stc
out
add
pop
sbb
fs
inc
ds
push
pusha
not
xor
sub
add
call
clc
cmps
fs
jbe
inc
add
or
div
pop
bnd
add
stos
add
add
dec
jp
lds
xor
inc
fstp
add
inc
or
cdq
dec
lea
mov
or
in
or
inc
ss
inc
jp
int3
xchg
and
inc
mov
mov
cmp
or
or
pop
ret
mov
(bad)
xor
fisub
outs
jo
pushf
sbb
push
sub
xor
cmp
sub
popa
push
inc
inc
adc
push
mov
clc
dec
inc
adc
popa
xor
adc
into
out
ja
xor
je
imul
cmp
sbb
jmp
outs
imul
xor
add
ss
xor
sub
ins
popa
fstp
fisub
inc
outs
mov
jnp
adc
sub
sbb
int
fwait
nop
out
nop
cwde
into
push
push
add
loop
ss
aaa
pop
stos
push
inc
iret
inc
js
mov
mov
cmp
in
mov
sub
jns
pop
imul
and
adc
inc
pusha
ss
xchg
add
inc
push
inc
add
xchg
loopne
push
and
dec
pop
pop
and
sub
jo
cwde
clc
or
sub
ins
or
ss
imul
jecxz
stos
mov
imul
call
pop
xchg
pushf
sbb
and
jo
jo
lock
paddb
out
mov
adc
test
inc
xchg
je
mov
ficomp
nop
or
xlat
stc
dec
loopne
sbb
out
dec
int
les
or
add
jmp
mov
xor
xor
xor
inc
adc
dec
std
fwait
or
dec
dec
dec
dec
dec
dec
loop
push
push
push
push
pop
pop
pop
js
dec
dec
pop
add
clc
pop
mov
lea
jle
add
and
pop
pop
retf
or
push
mov
mov
add
inc
retf
mov
mov
popa
popf
stc
xor
mov
or
dec
test
data16
in
mov
add
test
fimul
inc
fcom
dec
shl
and
ficomp
icebp
xchg
(bad)
push
push
enter
sbb
mov
add
mov
(bad)
test
mov
dec
clc
sub
js
push
push
push
or
je
push
pop
sub
jle
fwait
sti
or
or
jge
cmps
pop
mov
shr
mov
or
call
sbb
mov
mov
test
jbe
add
(bad)
jmp
cmp
and
sbb
sahf
pushf
jg
and
jl
or
push
gs
movs
sbb
out
add
and
adc
push
inc
inc
cmp
ins
aas
dec
pusha
sub
call
sbb
ins
and
xchg
add
jl
ret
mov
xor
mov
call
cdq
sub
int
mov
leave
enter
pop
dec
adc
inc
pusha
mov
xor
sbb
les
lock
hlt
xchg
lea
dec
rcr
imul
adc
push
xor
push
icebp
jmp
jg
or
(bad)
int
inc
cmp
jo
ror
pop
push
icebp
call
cmp
jge
xchg
xor
mov
jbe
jne
dec
and
(bad)
ins
and
jecxz
inc
pusha
cli
jl
or
scas
dec
imul
xor
fist
add
or
out
mov
jge
inc
xor
int
pusha
lods
(bad)
in
xor
jmp
aam
or
mov
fisttp
add
cmp
pop
les
xchg
jne
hlt
loope
(bad)
pop
sbb
ja
or
add
sti
sar
jmp
inc
(bad)
call
jne
or
getsec
cmp
ds
mov
or
mov
aas
xchg
not
push
sbb
mov
cwde
(bad)
std
or
cld
shl
test
div
out
xor
or
test
xchg
icebp
lock
lods
out
sbb
(bad)
out
mov
push
sbb
push
(bad)
fcomp
sbb
jbe
mov
cld
jne
xchg
pop
jl
bound
test
sbb
test
inc
or
jae
jo
or
pop
popa
pop
adc
xor
movs
sbb
xchg
jmp
sbb
mov
das
add
jne
jle
loop
xchg
add
sub
or
push
fs
fnstsw
(bad)
xlat
cmp
and
jmp
mov
repnz
dec
aaa
add
pop
jne
or
rcr
cmp
cmp
inc
in
push
rcr
adc
in
jbe
lahf
and
or
adc
push
pushf
inc
cmp
outs
inc
test
push
cld
sbb
xchg
push
call
sar
dec
xor
(bad)
push
sbb
and
test
or
adc
xchg
ret
mov
js
iret
xor
inc
jl
bound
cmps
ds
outs
ja
neg
imul
nop
arpl
pop
and
enter
cmp
xchg
cld
add
jl
cmp
nop
sbb
mov
jl
push
inc
pusha
sti
(bad)
jl
adc
mov
cmp
cmp
sbb
inc
push
aas
cmp
adc
pusha
fisttp
rol
inc
push
addr16
movs
sbb
sub
cmpxchg
cmp
clc
int3
enter
adc
and
sbb
mov
mov
(bad)
pop
cmp
cwde
cmp
movs
adc
(bad)
sbb
dec
sbb
adc
jb
fistp
je
enter
es
jns
test
add
cdq
or
jae
cmp
ror
xchg
pop
in
cmp
aas
inc
push
in
push
sub
jg
jo
fisttp
jp
nop
add
out
adc
xor
(bad)
movaps
ins
ds
inc
add
cmp
add
aas
push
clc
add
push
mov
xor
xor
add
loopne
outs
mov
inc
mov
ins
push
popa
fsub
call
pop
cmp
jmp
and
and
daa
hlt
(bad)
mov
jle
(bad)
adc
ficomp
movs
sbb
stc
inc
xor
js
pusha
out
mov
mov
cmp
outs
adc
dec
adc
test
test
cmp
(bad)
les
outs
push
(bad)
mov
xor
mov
add
sbb
fcmovnb
dec
(bad)
out
add
cmp
test
push
push
jmp
fsub
inc
mov
movs
dec
add
fs
call
or
and
dec
test
popa
xabort
(bad)
jo
push
les
push
out
sahf
add
adc
inc
retf
into
aas
rcr
ja
pop
pop
xor
aaa
mov
jle
out
and
sub
clc
adc
dec
add
int
jno
push
mov
jle
test
inc
xchg
and
cmp
xor
dec
or
or
ja
cld
rcr
cli
enter
mov
jbe
cmp
outs
div
test
cmp
(bad)
les
cmp
inc
or
loop
mov
test
imul
leave
or
retf
or
(bad)
add
movs
bound
jg
xor
test
lock
sahf
dec
js
cmp
jo
sbb
push
test
or
jg
les
into
adc
pushf
jmp
or
jge
xor
push
add
test
inc
les
and
or
retf
lds
cmp
sub
or
sti
xor
int3
xor
loope
jecxz
jo
ret
les
push
sbb
je
ror
mov
adc
pop
or
mov
push
push
outs
push
fdiv
js
mov
daa
or
sahf
dec
inc
(bad)
sbb
lahf
cwde
pusha
mov
add
movs
dec
inc
leave
add
iret
outs
js
cli
dec
test
push
mov
stos
and
dec
lods
lahf
sub
ds
lods
mov
ins
shr
push
fsubrp
vmwrite
sub
test
adc
ret
add
cmp
pop
jnp
add
mov
in
xlat
out
mov
mov
jmp
and
ins
out
pop
and
push
mov
sti
jo
xchg
(bad)
setbe
mov
xor
pop
pusha
out
pop
idiv
dec
push
inc
les
sub
jae
mov
jg
sub
aad
push
dec
cmp
int3
jo
shr
adc
popf
push
mov
aaa
mov
cmovno
sub
mov
mov
sub
aaa
cmp
jge
mov
mov
mov
fld
cmc
sub
sbb
add
mov
dec
pop
xor
cmp
dec
mov
or
inc
push
or
fcom
mov
test
in
data16
add
push
(bad)
aas
imul
adc
fcmovnb
inc
dec
or
adc
pop
in
xchg
dec
sar
dec
xchg
xchg
ror
loope
add
mov
add
dec
arpl
jmp
fiadd
lods
sub
add
push
and
das
jo
outs
add
hlt
xor
call
je
not
cmp
sbb
ficom
sbb
dec
inc
mov
xor
mov
in
enter
in
add
dec
mov
jo
xor
sbb
adc
jo
sar
dec
dec
sahf
push
jg
imul
out
mov
js
mov
cmp
or
mov
sbb
(bad)
outs
fbld
mov
jne
outs
mov
mov
fisubr
lds
sbb
mov
adc
mov
fst
sub
or
adc
sbb
lock
mov
out
adc
loope
xchg
xchg
dec
in
or
add
pop
lock
cmp
add
sub
mov
in
dec
sub
nop
or
cs
cdq
add
jle
inc
(bad)
(bad)
jae
in
adc
jo
add
nop
and
or
add
outs
imul
(bad)
(bad)
fadd
mov
xchg
or
loopne
push
sbb
dec
rcl
cmp
sbb
loopne
in
retf
push
inc
inc
pop
cmp
inc
iret
ins
mov
shl
push
mov
iret
mov
das
jnp
pop
xor
call
lock
hlt
enter
push
add
dec
jo
or
inc
and
js
(bad)
(bad)
int
loopne
inc
push
cmp
int3
cdq
ja
popa
loopne
inc
cmp
and
dec
in
inc
shl
dec
sub
aas
(bad)
cmp
jo
pop
mov
test
cmp
mov
jl
ret
mov
dec
enter
call
in
and
add
sub
fisttp
mov
rol
cmp
sub
movs
in
retf
and
cld
jmp
push
xor
adc
cmp
jb
push
cdq
xchg
or
push
push
fsubr
(bad)
mov
mov
mov
js
mov
jmp
xchg
fcom
adc
push
mov
or
inc
popa
push
ins
inc
cwde
pop
add
sbb
leave
dec
jge
pop
push
push
mov
adc
cmp
or
(bad)
arpl
fs
fxch
push
(bad)
jae
mov
int3
push
(bad)
popf
pusha
ins
pop
mov
pop
push
pushf
dec
ret
jae
or
nop
rol
rcl
jb
pop
push
or
xchg
cmc
dec
or
sub
inc
pusha
add
rol
xchg
retf
and
push
add
inc
push
sub
pop
pop
pmulhuw
sub
rol
pop
cmps
inc
lods
inc
xor
or
icebp
(bad)
adc
ins
loop
in
and
lea
movs
dec
ins
sbb
xchg
push
lock
adc
dec
cmp
sbb
sbb
mov
lods
xor
iret
hlt
cmp
enter
hlt
hlt
pop
jne
cmps
ss
hlt
das
add
js
add
movs
lock
mov
pop
dec
clc
or
xor
pop
jnp
inc
mov
and
inc
mov
aas
leave
lock
movs
loopne
in
dec
add
repnz
adc
ds
mov
fild
fstp
repz
mov
xchg
adc
inc
or
jne
dec
shl
xor
jo
dec
int
ja
movhps
gs
push
bound
inc
loopne
inc
cmp
dec
add
lock
inc
xchg
jne
add
dec
xor
ins
sbb
leave
or
loopne
test
call
daa
hlt
shl
enter
push
pushf
add
or
pop
test
or
nop
fs
and
cmp
in
or
adc
daa
js
test
xlat
xchg
pushf
or
xchg
add
(bad)
mov
push
(bad)
repz
dec
mov
test
in
in
ret
push
popa
adc
test
ds
xor
and
sbb
test
push
cmp
(bad)
mov
pusha
ret
cmp
call
outs
pop
lods
(bad)
sbb
push
sub
mov
mov
sbb
push
test
pop
xchg
pop
sar
xchg
add
cmp
pop
adc
sbb
movs
jb
dec
clc
adc
xchg
push
fcos
mov
add
clc
mov
dec
mov
mov
enter
clc
sub
inc
movs
nop
lock
dec
lock
and
jb
inc
xor
inc
and
push
xchg
cmp
int
ret
clc
arpl
push
movs
sub
pop
xor
ins
adc
push
inc
iret
in
and
sbb
dec
sub
adc
ret
and
mov
add
ja
pushf
dec
ror
adc
sbb
xchg
mul
and
inc
cmp
aad
addr16
loopne
or
push
or
sar
pusha
mov
sbb
cwde
loopne
add
push
adc
adc
xchg
rcl
rcl
add
push
jle
xor
jne
mov
add
mov
adc
mov
dec
sub
or
sub
jmp
ss
loopne
mov
cwde
push
(bad)
push
je
xor
adc
mov
add
sbb
pop
pop
mov
call
xchg
sbb
and
fadd
xchg
sub
mov
dec
or
pop
test
push
mov
pushf
daa
cwde
shl
(bad)
sar
adc
movs
fadd
cmp
pop
adc
xchg
sbb
fs
jl
enter
cmp
jmp
mov
adc
push
pop
or
int
dec
lahf
lods
mov
pop
cmps
mov
sbb
xchg
inc
dec
repz
nop
aam
or
xor
or
mov
shl
add
cmps
add
xor
cmp
jmp
push
mov
ja
dec
jl
js
or
in
arpl
out
leave
call
dec
pop
sbb
cld
(bad)
inc
gs
xchg
lods
inc
call
mov
dec
movs
push
mov
mov
sbb
mov
aas
cmp
sbb
aaa
dec
dec
repnz
call
sbb
jo
pop
sbb
int
js
add
and
les
or
xchg
sbb
pop
ja
lods
sbb
cmp
(bad)
fldcw
sbb
inc
push
and
popf
ja
sbb
loop
xor
xor
icebp
fsub
dec
or
inc
les
sub
inc
push
and
or
outs
pop
push
dec
test
iret
ret
jmp
adc
sub
loopne
pop
inc
add
mov
ret
shl
adc
stos
mov
pop
fldenv
fsubr
or
(bad)
dec
bound
and
mov
xchg
xor
lea
inc
add
setns
ret
add
outs
or
inc
mov
add
xchg
pop
fs
sub
add
push
stc
inc
sbb
and
aas
sub
and
or
in
sete
pop
(bad)
cmp
or
jle
inc
test
ret
and
or
push
and
sbb
xchg
aad
mov
es
scas
sub
cmp
stos
sahf
clc
push
mov
adc
inc
mov
movs
add
mov
shr
add
or
dec
adc
outs
out
aas
je
(bad)
fisub
xlat
clc
popa
pop
out
retf
adc
xor
inc
ja
push
add
and
mov
aam
push
cs
call
xor
stc
or
sub
pop
push
add
sahf
pop
outs
test
pusha
mov
outs
(bad)
adc
ds
inc
push
mov
inc
xchg
sbb
ror
outs
(bad)
mov
xor
adc
jg
movs
inc
jo
push
push
adc
pop
mov
mov
in
sahf
retf
adc
inc
add
add
aas
jecxz
mov
inc
ficomp
jae
pop
push
std
ds
in
pop
inc
add
inc
cmps
mov
retf
in
clc
sub
call
dec
rol
inc
pop
cmp
fs
and
frstor
mov
pop
mov
xchg
int3
mov
mov
push
daa
adc
adc
sahf
out
xlat
ret
jmp
enter
or
add
pop
mov
cmp
sub
xchg
xor
cld
inc
sub
call
inc
aas
jbe
and
nop
dec
adc
mov
inc
or
inc
aad
fmul
mov
test
cmc
inc
and
js
or
and
xchg
adc
sti
sbb
fistp
jnp
push
push
sbb
push
int3
mov
xchg
or
jmp
mov
leave
mov
cmp
outs
sbb
ds
or
rcl
icebp
sbb
and
pop
xor
neg
bnd
mov
sub
imul
adc
dec
or
xor
fmul
dec
inc
inc
fild
dec
in
fcomp
popf
push
arpl
sub
js
clc
jo
sub
adc
ret
or
loopne
ret
retf
xor
sbb
pop
(bad)
xor
dec
repnz
sahf
jmp
and
(bad)
inc
cwde
dec
out
jbe
leave
xchg
push
shl
inc
in
pusha
mov
adc
lock
test
rcr
cmp
sahf
jb
cmp
scas
xchg
push
je
push
adc
ins
jo
or
sub
rol
sub
sub
dec
test
js
adc
popf
push
xor
push
push
es
pop
sahf
jno
jmp
add
cs
adc
and
push
push
pusha
je
cli
cmp
or
adc
and
mov
or
popf
adc
xor
jo
out
or
rcl
addr16
pop
or
adc
pop
sub
mov
adc
pop
mov
mov
pop
cld
xor
jp
add
jo
int3
xor
xchg
adc
lds
aaa
enter
inc
and
cmp
dec
dec
cmp
test
retf
mov
xlat
idiv
pop
xchg
into
inc
retf
push
cmp
dec
movs
pop
dec
cmp
jnp
xchg
push
test
fistp
jae
cmp
pop
and
daa
cmp
push
gs
call
out
xor
mov
xor
shr
push
fs
data16
out
cli
push
or
sub
cs
cmp
push
jnp
aaa
imul
pop
inc
je
push
pop
pop
jb
ror
lea
mov
fld
mov
test
xor
push
inc
call
xchg
jge
hlt
dec
jmp
pusha
add
popf
sbb
xor
mov
add
mov
xchg
jp
in
pusha
mov
push
adc
xchg
inc
mov
adc
mov
sub
fst
(bad)
dec
xchg
xor
sub
add
inc
jb
sbb
sub
leave
cmp
cmp
inc
jb
inc
inc
pop
and
or
(bad)
js
cmp
retf
je
fmul
fiadd
push
jmp
movs
std
fimul
pop
daa
cdq
in
adc
dec
add
mov
push
push
mov
xor
mov
and
retf
sbb
add
sub
pop
and
push
cmp
dec
loop
(bad)
pop
pop
shr
push
push
scas
rcl
loopne
or
repnz
mov
inc
scas
jge
cmp
inc
pop
cmp
add
pop
outs
jl
sbb
inc
push
leave
mov
cmps
push
push
add
push
(bad)
lds
test
inc
aaa
mov
cmp
stc
stos
cmps
lea
gs
mov
ss
sub
popf
and
jge
adc
or
or
inc
inc
sub
xchg
ss
and
push
sbb
pop
vmaxss
cmp
arpl
push
sti
xor
add
or
pusha
dec
jno
add
sbb
xchg
jae
xor
mov
and
add
xor
add
in
or
sub
(bad)
pop
pop
ret
xor
jne
cld
pop
add
test
dec
pop
pop
dec
outs
(bad)
dec
shl
and
mov
stos
fstp
add
push
cli
fdiv
sbb
push
cmp
dec
xor
push
xchg
fisubr
sbb
dec
inc
jo
jmp
(bad)
scas
loope
adc
dec
mov
xchg
jno
adc
arpl
add
nop
xor
xchg
or
(bad)
pop
sub
adc
cld
(bad)
(bad)
adc
fimul
mov
or
mov
int3
jne
xor
push
ret
or
rcr
shl
in
movs
push
and
sbb
enter
sbb
dec
dec
clc
cmc
data16
in
add
repz
jecxz
sub
movs
inc
push
add
xor
les
mov
cmc
push
das
lea
add
xor
jne
and
pop
dec
xor
ret
lea
jmp
sbb
not
out
pop
je
push
sbb
imul
dec
repz
out
mov
nop
mov
pop
out
ja
inc
test
jmp
cwde
add
dec
ds
fld
cmp
arpl
pop
xchg
cmps
ds
fsubr
push
out
aad
in
(bad)
inc
pop
(bad)
ja
mov
cmp
mov
cmp
xor
call
add
xor
xchg
aam
mov
inc
sbb
rol
add
js
sar
inc
fwait
ror
je
gs
pop
inc
fdivr
add
shl
mov
fwait
sbb
dec
in
xor
jle
xchg
inc
fisttp
int3
outs
nop
jge
test
out
adc
sub
mov
clc
jle
pop
test
repnz
popa
pop
test
ins
xor
push
fisubr
pop
and
push
dec
mov
test
jo
sar
mov
mov
lds
int3
xor
std
jp
sub
add
pop
stos
add
xor
outs
retf
mov
pop
inc
push
sub
(bad)
call
or
mov
out
rcl
sub
pop
movs
push
stc
ja
sbb
fdivrp
push
(bad)
sbb
icebp
jmp
pop
jg
inc
(bad)
jmp
adc
add
fcomp
sbb
mov
fcomp
sub
rol
sbb
and
das
add
push
dec
or
test
jns
inc
stos
mov
mov
jg
xor
xchg
inc
and
xabort
sbb
mov
sbb
add
in
fisttp
inc
jb
cmps
sub
jl
inc
mov
je
sbb
je
adc
jno
out
inc
rol
jmp
mov
(bad)
push
ret
inc
sbb
sti
fisttp
push
cmp
mov
inc
rol
daa
add
jne
loope
in
sub
and
and
jb
aaa
dec
and
dec
inc
jne
sub
or
cmp
dec
adc
dec
push
push
test
cmps
mov
inc
adc
sbb
lods
and
stos
out
stos
add
jb
fild
pop
cmp
mov
jle
test
or
xor
inc
mov
iret
xor
lea
jmp
pop
jo
je
mov
or
inc
mov
lods
test
ret
cmp
inc
cmps
and
fsub
push
scas
adc
push
(bad)
enter
xor
loop
adc
jnp
push
sub
jo
ret
and
add
xor
pop
and
(bad)
daa
fsub
inc
stc
daa
pop
dec
jns
push
push
mov
pop
push
test
sbb
test
call
mov
dec
mov
retf
sub
cmp
push
add
das
add
cmp
mov
sub
mov
in
adc
sar
retf
jecxz
mov
dec
mov
jne
shl
aaa
cwde
or
movs
fidiv
mov
and
mov
pop
scas
in
pop
dec
adc
(bad)
mov
pusha
inc
dec
test
xor
lds
scas
daa
int
add
aas
and
jg
pop
adc
sbb
and
pushf
int
push
inc
fs
js
mov
adc
xor
shl
adc
mov
pop
cmp
dec
ja
in
push
add
pop
mov
cdq
sahf
or
dec
les
add
fistp
mov
or
sub
mov
or
dec
fcmovne
mov
inc
into
aas
adc
mov
mov
mov
mov
adc
out
adc
cmps
xor
stc
or
mov
dec
jo
inc
add
pop
icebp
jne
sbb
pop
test
sbb
or
mov
add
sbb
arpl
xchg
dec
pushf
push
rcl
out
jl
jp
adc
aas
test
dec
xor
hlt
div
adc
hlt
xor
lea
mov
fwait
or
add
sub
or
dec
repz
jge
hlt
mov
add
test
mov
and
push
clc
add
test
rcl
inc
inc
stos
sub
add
xchg
add
loopne
or
adc
cmp
int3
cmp
idiv
add
add
or
pop
push
pop
enter
mov
imul
and
and
outs
jne
cwde
popf
out
je
pop
ja
and
mov
add
fs
gs
jb
jo
mov
ss
or
jno
scas
jge
push
je
cmp
add
sbb
shr
mov
call
movs
push
mov
lock
aas
add
in
add
xchg
push
cs
pop
lock
popf
add
push
and
out
and
inc
push
or
je
sub
outs
xchg
mov
mov
add
imul
pop
hlt
jg
out
sbb
inc
ror
add
add
cmp
les
add
pop
lods
loopne
int
xor
sub
push
add
sub
bnd
push
inc
fwait
mov
in
mov
mov
cli
aad
fisubr
push
push
cli
xchg
mov
jo
imul
fsubr
add
ja
outs
or
in
mov
in
xor
sub
mov
outs
ins
aam
adc
cmp
jp
and
stos
mov
shl
inc
mov
retf
add
push
add
pop
or
xor
mov
adc
push
push
pop
xor
mov
fadd
push
or
add
fisttp
adc
mov
cwde
retf
mov
cli
push
dec
dec
bound
jp
mov
mov
cmp
(bad)
repz
bound
outs
or
imul
jg
xor
sub
mov
movs
add
cmp
and
repz
sub
push
or
dec
inc
enter
fwait
mov
loop
xor
jae
jnp
cmp
daa
sahf
xchg
mov
xchg
mov
int
adc
lea
push
arpl
jge
sub
xor
inc
or
mov
mov
js
xor
adc
mov
or
cmp
je
xor
dec
clc
imul
call
ret
push
and
mov
add
add
and
imul
fs
add
sti
jmp
imul
push
call
xor
adc
sbb
jge
out
inc
push
lahf
les
inc
adc
call
and
push
add
inc
inc
sub
pushf
add
or
inc
cmp
cmps
stos
jb
fisttp
push
mov
or
adc
xchg
in
adc
jecxz
xor
sub
add
cmp
cmp
sub
inc
cmp
xchg
jge
ins
push
jns
cdq
sbb
ret
lock
pop
xor
mov
dec
je
push
lds
int3
out
sti
je
test
push
push
adc
inc
mov
inc
dec
push
test
or
call
ret
pop
push
pop
xor
mov
inc
xor
jg
pop
dec
out
out
jae
and
xor
push
and
push
inc
int3
out
xchg
jmp
shl
fnsave
lock
add
cmp
sar
cmp
xor
sbb
add
jle
inc
inc
push
sar
xor
(bad)
fdivrp
pop
inc
push
add
push
dec
mov
es
imul
or
jne
sar
jo
aas
test
jnp
ja
push
ror
and
imul
je
nop
xchg
out
pop
or
xor
into
xchg
test
je
push
(bad)
mov
sti
add
xchg
aas
lock
xor
and
xor
adc
xor
cmp
add
xor
sar
bound
dec
pop
xchg
daa
add
enter
idiv
ds
fiadd
push
clc
jmp
lods
and
ins
and
or
xor
xchg
jg
lea
cmp
mov
jne
into
cmps
pop
pop
hlt
jp
das
pop
hlt
movs
(bad)
retf
xor
xor
sub
nop
in
sbb
sub
sbb
mov
push
ds
and
or
mov
add
jo
jg
ror
mov
and
or
js
mov
pop
sbb
dec
pop
pop
mov
or
scas
out
sbb
or
push
addr16
fdiv
sti
inc
dec
add
jge
(bad)
popa
pop
mov
sbb
lock
xor
pop
add
add
or
cdq
ja
fidivr
in
cmp
jne
data16
jl
pop
les
jmp
xchg
pop
and
das
jb
push
ds
add
and
popf
jmp
and
dec
xor
mov
outs
inc
iret
and
jmp
rol
ss
in
aaa
in
sbb
cmps
inc
(bad)
and
icebp
inc
jnp
mov
ja
clc
dec
xor
inc
xchg
inc
jo
es
xchg
mov
dec
push
and
mov
ret
mov
sets
mov
add
or
sar
popa
push
xchg
cmp
mov
dec
or
jo
daa
inc
inc
js
daa
jmp
sbb
inc
ficomp
xchg
dec
cli
sbb
out
cdq
mov
jge
hlt
dec
ins
add
movs
or
xor
xor
mov
arpl
jne
push
outs
inc
cmp
inc
sbb
push
pop
je
mov
(bad)
cmp
sysret
test
mov
push
push
ss
rcl
rol
xor
push
mov
xchg
jne
arpl
cdq
les
push
test
cli
adc
mov
adc
push
cld
inc
cmp
nop
ss
in
outs
dec
push
or
lods
push
pop
adc
adc
or
js
push
cmps
and
sub
mov
add
inc
push
pushf
adc
mov
ror
adc
fwait
bound
pop
jbe
call
jp
cmp
pop
dec
in
in
sub
jmp
or
add
daa
sub
xchg
cmps
lock
inc
jle
sub
jmp
pop
add
sbb
jl
es
(bad)
push
mov
add
push
(bad)
ror
or
cmp
or
fcomp
ds
xor
retf
push
pushf
add
(bad)
cmp
jl
jl
add
dec
daa
and
imul
pop
push
push
test
adc
and
push
repz
dec
push
leave
jecxz
sbb
hlt
aam
es
add
xor
cdq
mov
xor
pusha
rcl
into
and
sub
sub
aaa
inc
dec
pop
add
jne
xor
sub
ins
int
and
ror
nop
xor
mov
or
inc
test
jge
mov
pop
cwde
ret
mov
rol
jle
(bad)
mov
ret
xchg
or
add
and
xchg
or
ret
lock
nop
xor
ins
pop
dec
sbb
xchg
fdivr
xor
es
pusha
imul
xlat
pop
sar
sbb
xchg
mov
ins
inc
sbb
inc
inc
sbb
cmp
dec
in
sub
sub
sar
push
inc
sub
inc
cmp
aam
fcom
lea
aad
test
aad
rcr
pop
mov
push
xor
out
cmp
stos
(bad)
mov
xchg
sbb
xchg
sub
xchg
add
cli
fld
scas
and
adc
aad
movs
aad
gs
dec
in
pusha
cwde
in
mov
dec
sbb
xor
sub
inc
mov
inc
fmul
loope
or
enter
in
loope
sbb
inc
jne
push
outs
cmp
call
stos
scas
push
dec
mov
jo
movs
cmps
push
xchg
pusha
jo
les
mov
aad
and
push
and
push
push
lds
pop
dec
fsub
data16
push
repnz
das
out
mov
aaa
sbb
(bad)
loop
push
push
push
sbb
xor
enter
xor
push
test
icebp
lock
add
sub
inc
pop
push
inc
pop
call
aad
ss
lahf
data16
inc
xchg
inc
cmp
inc
sbb
(bad)
add
or
hlt
lock
dec
push
popa
jg
mov
and
out
push
or
or
je
rol
push
ja
inc
push
nop
adc
jo
xor
cmp
sahf
syscall
xor
pop
(bad)
sub
or
pop
adc
dec
fisubr
xor
push
or
pop
repnz
jns
cmp
ror
mov
jmp
jmp
comiss
push
pop
dec
add
ret
adc
test
xor
inc
je
jmp
jb
xchg
test
mov
mov
sub
jle
inc
xor
cmp
in
gs
add
push
mov
xchg
mov
sub
push
cmc
outs
out
push
daa
mov
sbb
shl
or
loope
ss
(bad)
ffreep
jnp
inc
push
movs
and
pusha
push
sbb
lahf
adc
mov
push
inc
push
pop
jne
inc
inc
adc
sub
call
and
ret
call
xchg
fs
nop
pop
call
jmp
in
push
mov
push
dec
scas
shr
inc
or
sub
or
and
add
sbb
nop
push
sar
jl
jmp
and
je
add
push
fs
adc
aaa
mov
popa
leave
pop
sub
stos
imul
mov
out
mov
bound
repz
jne
loope
fild
nop
and
cmp
inc
xor
ins
cmp
xchg
pop
test
sbb
sbb
cmp
sub
dec
push
add
ins
add
out
cmp
xchg
jne
sbb
xacquire
lea
hlt
(bad)
sub
xor
xchg
add
push
push
add
push
call
aad
popa
xchg
jo
in
xor
push
sbb
pop
inc
jle
cwde
jg
xor
jle
lds
ja
xchg
cmps
(bad)
mov
add
cmp
jl
mov
scas
xlat
adc
and
push
or
test
mov
sbb
test
test
retf
add
cmp
push
or
xor
(bad)
xchg
ins
mov
jge
sbb
sbb
inc
and
mov
lock
dec
cmps
jne
cld
dec
loopne
fld
fiadd
xchg
xchg
add
fwait
pop
out
xor
scas
(bad)
mov
push
pop
sti
cmp
repz
lock
pop
and
fmul
ds
mov
or
dec
pusha
dec
cmp
mov
cmp
idiv
xor
jle
xor
cmp
repz
hlt
sub
sub
out
retf
and
(bad)
cwde
xchg
adc
div
add
pop
adc
mov
movs
pop
adc
mov
and
inc
add
add
arpl
stc
scas
inc
rol
add
sbb
add
add
and
xlat
sar
jae
mov
sbb
push
adc
je
and
inc
or
ds
jae
xchg
xchg
sahf
mov
pop
dec
and
mov
lods
adc
pop
xor
xlat
xor
in
and
push
cmp
and
lds
add
dec
add
pop
add
and
sbb
and
call
add
lock
and
or
or
cmp
fisubr
sbb
inc
push
and
xchg
add
pop
ds
mov
aad
adc
sbb
(bad)
adc
or
inc
adc
mov
sub
pop
xor
pop
mov
xor
xor
mov
mov
xor
pop
xor
and
or
cmp
cmp
inc
nop
out
jge
push
pop
sbb
mov
adc
mov
pop
pop
cwde
rcl
sub
je
xor
ja
dec
in
(bad)
ds
or
dec
inc
imul
push
adc
mov
pushf
test
pop
rcr
xchg
push
fs
pusha
enter
inc
ds
inc
cmp
dec
les
ins
fist
push
dec
inc
push
sub
sbb
push
inc
ffreep
leave
mov
addr16
call
jl
mov
xor
int3
cmp
add
cli
push
pusha
mov
push
in
pop
dec
call
or
or
test
loopne
xor
in
aam
push
les
inc
cs
out
jns
xlat
je
add
test
(bad)
call
fnstsw
pop
cdq
or
rcr
fidiv
es
test
xchg
int
or
push
enter
out
add
cmps
jge
mov
int3
and
repz
add
adc
(bad)
loope
lds
pop
xor
or
mov
cmp
hlt
sub
inc
push
add
inc
push
lods
push
pshufw
outs
inc
sbb
arpl
std
mov
pushaw
gs
pop
xor
pop
ret
xor
push
add
inc
jo
push
mov
jl
inc
mov
or
dec
push
mov
push
in
dec
in
add
push
imul
clc
sbb
push
loopne
and
div
or
add
add
mov
mov
es
or
push
outs
mov
popf
or
adc
fwait
(bad)
fwait
inc
data16
fbstp
pop
dec
imul
add
sub
dec
mov
dec
arpl
std
das
mov
pop
or
add
cmp
sub
dec
mov
ficomp
loope
shl
mov
adc
stc
popf
dec
inc
dec
mov
sub
outs
fcom
nop
sbb
fcomp
cli
data16
mov
sbb
adc
pop
inc
mov
retf
dec
imul
pushf
sahf
or
add
xor
out
sub
cmp
repz
cs
imul
or
movs
adc
fadd
adc
aas
fsubr
and
or
add
(bad)
add
add
jle
jo
mov
jnp
push
adc
data16
jnp
dec
adc
dec
and
cld
add
dec
add
jge
and
xor
sub
ret
and
xor
add
in
cvttps2pi
adc
cmp
fs
mov
push
repnz
or
mov
out
sub
cmps
test
jp
outs
push
popf
dec
ret
jo
xor
fcomp
pop
and
or
dec
push
ds
add
stos
jo
push
icebp
mov
xchg
arpl
dec
imul
or
and
mov
or
or
push
rcr
shl
shl
pop
adc
jo
xchg
loopne
or
lahf
push
(bad)
imul
pushf
xchg
xchg
add
loope
adc
dec
jae
push
push
push
dec
and
pop
mov
fs
js
or
neg
outs
add
pop
push
je
or
pop
rcl
push
into
gs
popa
or
jl
popa
xchg
mov
jp
lea
mov
mov
rol
in
xor
mov
pop
hlt
jo
xchg
pusha
and
inc
add
xor
mov
pop
out
pop
jg
add
mov
mov
inc
ins
or
fcomp
inc
loope
xor
fadd
and
out
lods
xor
shr
inc
movs
loop
js
outs
test
or
inc
out
mov
in
enter
pop
inc
cmp
mov
inc
xchg
and
pop
cmp
xchg
pusha
adc
push
repnz
inc
or
pop
xlat
cmps
push
adc
or
push
fcom
cmps
sub
or
pushf
in
add
add
add
pusha
test
mov
out
cmp
lods
cmp
adc
mov
add
mov
ret
add
add
add
mov
or
call
and
sub
add
pop
inc
daa
in
sbb
cmp
outs
mov
dec
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
jmp
jg
sub
push
lock
out
dec
dec
jmp
adc
mov
jns
jns
adc
push
mov
pop
push
es
movs
jl
data16
cwde
sbb
in
sbb
repz
rol
inc
sbb
mov
xor
in
inc
sbb
cmp
mov
mov
push
push
pop
and
push
pushf
fnstcw
sbb
inc
add
in
hlt
cld
in
jge
mov
std
push
js
and
sub
or
out
jns
sub
cld
pop
ins
push
mov
mov
les
mov
stc
mov
push
push
jp
push
nop
lock
push
icebp
cmp
shl
xor
and
call
adc
pushf
hlt
mov
or
ds
es
or
jbe
stos
xor
and
pop
or
in
lock
add
pushf
add
call
mov
xchg
push
pushf
pop
add
xor
pop
dec
iret
les
cmp
ins
lahf
out
daa
and
daa
adc
mov
jg
or
add
(bad)
sub
inc
inc
jl
xor
cmps
push
fcmovnbe
or
test
or
adc
xor
ds
jb
cld
inc
rcl
and
aam
and
sub
into
test
lahf
dec
sahf
xlat
lock
dec
sub
adc
xchg
packuswb
dec
popa
mov
jbe
add
loopne
aam
outs
arpl
loope
xchg
sbb
loope
mov
std
dec
pop
xlat
xchg
pop
push
(bad)
rol
dec
out
in
xor
je
les
sbb
into
inc
cwde
push
xor
mov
cmp
xchg
inc
jnp
jno
mov
add
out
fmul
in
mov
add
les
adc
dec
mov
cld
add
(bad)
xchg
or
push
xchg
cmp
push
imul
dec
fnsetpm(287
loopne
push
mov
push
and
dec
adc
das
in
pop
add
(bad)
dec
push
mov
pop
push
push
pop
movs
shl
push
cdq
mov
jns
and
nop
xlat
mov
push
push
xor
inc
dec
mov
fs
pop
mov
push
je
mov
inc
and
sbb
mov
push
or
and
xor
adc
stos
xchg
mov
daa
xor
cli
jp
inc
inc
fidiv
mov
mov
push
es
aaa
cmp
mov
fwait
nop
jno
(bad)
popf
push
inc
xor
and
dec
(bad)
push
(bad)
fiadd
mov
fmul
test
inc
pop
(bad)
fs
(bad)
in
inc
sub
mov
xor
mov
and
and
iret
sub
dec
enter
sar
add
sub
in
loopne
sahf
test
lea
aaa
ds
out
out
(bad)
cmp
fsub
xchg
cmp
dec
inc
push
shl
sub
add
and
js
mov
lods
add
daa
xchg
jns
cmp
int
div
xchg
mov
jne
jne
test
adc
jbe
in
pop
add
enter
add
xor
repnz
push
adc
rcr
dec
retf
jl
sbb
jb
jl
sbb
test
ror
stc
outs
outs
(bad)
nop
das
jle
enter
into
mov
and
enter
adc
call
js
xlat
xchg
jae
stos
ror
vsubpd
dec
adc
outs
(bad)
or
mov
enter
sti
inc
cmp
leave
test
add
xor
push
hlt
xchg
loopne
or
in
les
loopne
cmp
bndldx
jge
lea
add
out
shl
dec
cmp
lock
dec
sbb
cli
and
cwde
jne
mov
cmp
(bad)
sub
jo
movs
in
outs
inc
or
(bad)
pop
repnz
dec
or
inc
cmp
push
push
pop
inc
mov
push
test
lods
dec
repz
inc
das
stos
inc
pop
enter
dec
mov
add
ds
inc
retf
push
test
add
pop
shl
or
ret
arpl
ror
ror
or
adc
adc
dec
and
add
add
sub
cmp
pusha
jbe
push
es
adc
push
dec
push
pinsrw
fadd
xrelease
push
inc
loopne
mov
add
out
mov
jo
add
xor
adc
add
inc
pop
or
add
dec
jmp
jbe
push
sbb
push
sti
dec
add
repz
popf
or
inc
add
cmp
pop
enter
(bad)
and
dec
scas
adc
cmp
mov
call
dec
shr
int3
mov
aad
ja
fcomip
inc
or
mov
dec
call
xor
adc
xor
inc
cs
mov
pop
bnd
jo
cli
clc
push
jbe
sbb
mov
out
jns
mov
or
jbe
nop
cmps
ret
retf
clc
clc
ds
gs
aam
lock
repnz
lock
inc
pop
enter
or
fwait
sbb
dec
gs
outs
dec
inc
adc
sti
add
pop
push
lods
xor
push
cs
sbb
sbb
pop
jb
cli
push
jo
mov
in
sbb
addr16
sahf
cmps
inc
adc
rol
sbb
inc
cs
outs
cmp
outs
lods
iret
pop
dec
inc
(bad)
dec
xor
loope
in
pop
dec
pop
in
sahf
push
cs
enter
out
or
rcl
adc
mov
or
and
enter
inc
pop
in
dec
ins
mov
nop
dec
dec
dec
adc
add
rcl
pop
enter
push
popa
push
push
fdivr
push
add
push
xchg
int
push
fucom
jno
push
dec
arpl
cmp
xchg
loope
fcomp
fsub
dec
mov
rcl
adc
inc
scas
push
sbb
mov
add
data16
jb
nop
mov
mul
and
sbb
inc
stos
(bad)
mov
mov
and
leave
pop
adc
pop
mov
movs
aaa
inc
or
ss
or
sub
inc
mov
mov
mov
(bad)
mov
cmp
push
stc
xor
iret
fdiv
cmp
sub
ss
push
dec
mov
aaa
lock
pop
mov
into
sysret
sub
repnz
pop
push
or
adc
or
nop
or
sbb
push
ficom
jb
outs
scas
popa
lock
out
nop
push
mov
mov
aad
xchg
sub
(bad)
sbb
sbb
push
movs
outs
push
add
(bad)
and
or
cmps
and
lock
add
xchg
jg
or
fs
xchg
mov
xlat
mov
lods
call
push
and
sub
and
xchg
fucomi
fiadd
push
andps
or
mov
ret
push
adc
rol
xchg
popa
xor
rcl
dec
pop
ret
push
mov
pop
les
pop
(bad)
mov
dec
mov
inc
into
sbb
cdq
bound
scas
pop
or
mov
and
repnz
mov
ins
or
or
ficom
inc
ins
sbb
cmp
je
adc
adc
add
test
or
aas
push
and
add
pop
enter
aas
sub
add
es
lods
scas
push
sahf
sbb
sub
adc
mov
cmp
xchg
ret
fsubr
(bad)
(bad)
add
movntq
or
dec
or
or
jne
or
mov
and
shl
jecxz
push
shl
les
clc
xor
inc
mov
test
sub
popf
repz
jo
or
add
fdiv
inc
pop
jae
fbstp
or
cmp
movs
jno
push
jbe
shr
outs
movzx
or
je
jecxz
rol
js
adc
paddsw
jle
enter
ins
add
jnp
sbb
push
mov
add
sbb
aam
pop
icebp
adc
xor
popf
mov
js
inc
inc
call
lea
adc
bnd
mov
cmp
push
cmps
je
rol
retf
ficom
jb
jle
fsub
jne
and
adc
jo
sbb
adc
cdq
xchg
mov
hlt
pusha
adc
clc
jae
hlt
mov
and
sub
in
xchg
out
retf
sbb
mov
(bad)
mov
mov
test
or
test
mov
push
test
aam
loope
mov
scas
stos
sub
fidiv
in
or
sbb
mov
enter
aam
xchg
enter
dec
sub
je
stos
ss
shl
(bad)
push
test
jne
xchg
pop
enter
mov
mov
adc
jg
or
sbb
sbb
lahf
je
mov
mov
sbb
mov
cmp
mov
mov
add
add
pop
mov
mov
cmp
dec
std
sbb
mov
sar
test
push
fwait
jl
and
add
cld
push
xor
and
out
in
or
ret
jae
mov
push
pop
shl
fmul
add
popf
call
and
cmp
push
add
sub
icebp
pusha
test
mov
jmp
cmp
jae
pcmpgtb
xor
pusha
movs
dec
cmp
push
loopne
dec
push
mov
test
dec
mov
iret
aam
test
in
cmp
or
or
and
mov
gs
icebp
ret
add
add
dec
jb
inc
ret
cwde
jg
fadd
call
or
pop
sub
out
pop
call
inc
imul
add
xchg
mov
dec
popf
cld
dec
rcl
xstore-rng
cmps
add
pop
lods
in
adc
mov
js
das
retf
xor
mov
xchg
or
ffreep
inc
jnp
xchg
(bad)
daa
loop
je
and
jmp
inc
push
std
add
push
cmp
add
sar
or
lods
mov
daa
push
push
xor
add
and
movs
mov
hlt
xor
ins
add
push
sub
cld
sbb
push
repnz
or
shl
push
or
pusha
add
push
mov
adc
sub
push
test
dec
lods
shl
into
pop
pop
mov
inc
sub
mov
mov
push
add
sbb
or
inc
mov
and
mov
and
mov
int
push
add
xchg
fidivr
mov
aam
push
adc
push
mov
push
sub
adc
test
test
add
out
push
rol
cs
add
movs
mov
inc
and
adc
jns
push
jo
stos
add
add
ins
cdq
add
sub
push
cmc
or
add
jno
add
xchg
imul
jb
xchg
fnstcw
shl
add
adc
and
and
add
dec
stos
movs
fstp
xchg
jo
push
outs
inc
add
hlt
jae
ss
sbb
das
add
mov
mov
inc
test
lods
imul
test
push
inc
adc
add
push
xor
mov
or
mov
dec
mov
pop
cmp
cmp
pop
fdivr
pop
mov
adc
add
dec
loop
dec
or
fld
inc
add
lock
sbb
outs
cmp
pop
and
bound
imul
bswap
pop
dec
xchg
push
or
pusha
adc
enter
sub
mov
inc
les
sahf
clc
sbb
mov
xchg
xchg
xlat
sub
neg
jmp
arpl
adc
jne
je
mov
cli
wrmsr
cmp
test
dec
push
add
loop
push
test
(bad)
xor
push
repnz
mov
lahf
mov
stos
ins
add
push
add
add
dec
in
aaa
inc
or
cs
push
and
dec
test
push
sub
sar
test
or
pop
iret
test
add
test
inc
jno
and
call
movsx
push
shl
add
sbb
ret
cwde
mov
out
cmps
pop
leave
cmp
sbb
add
cli
call
and
or
and
lea
mov
or
inc
jo
ret
lock
pop
ror
adc
jmp
inc
inc
or
adc
cmp
cli
mov
sti
adc
sti
jmp
xor
retf
cmp
mov
and
push
sub
cmp
and
loop
push
sbb
sub
loop
pushf
xor
or
or
mov
cmp
dec
cdq
int
movs
sub
shl
and
cs
adc
cmp
dec
inc
leave
push
daa
jmp
pop
call
test
je
ss
fadd
mov
vmovntps
push
ins
loopne
cmps
jmp
cmp
mov
lahf
jle
xchg
mov
(bad)
neg
lds
call
adc
sub
mov
shl
add
dec
scas
pop
mov
or
inc
xor
icebp
lds
jle
push
add
pop
dec
out
fs
cdq
icebp
call
push
sub
mov
fmul
pop
gs
adc
and
cmp
jo
sbb
repnz
scas
dec
mov
int3
add
sub
push
ror
inc
mov
add
push
pop
and
mov
sub
or
push
std
test
dec
inc
pop
sub
adc
or
or
add
iret
fcomp
sub
scas
inc
jge
mov
lock
inc
add
xor
and
sub
out
loopne
add
or
dec
in
test
das
sub
add
jno
mov
retf
pop
mov
scas
cs
adc
mov
add
adc
jmp
xor
(bad)
(bad)
push
xchg
dec
pop
jp
adc
push
push
in
push
cmp
dec
addr16
pop
enter
xor
add
xor
aas
xor
cvtdq2ps
mov
or
cmp
mov
dec
sbb
das
sub
adc
dec
clc
push
mov
add
adc
dec
sub
add
pusha
xlat
lds
(bad)
cld
das
fidivr
or
test
pusha
sbb
out
add
and
mov
pop
pop
add
push
cmp
sub
enter
xor
cmp
test
and
inc
enter
xor
inc
cdq
sub
add
mov
pop
dec
out
adc
mov
addr16
je
ror
mov
ret
clc
mov
sub
mov
imul
ret
push
mov
clc
cmp
nop
retf
push
pop
rol
pop
loop
shl
inc
aaa
out
adc
and
jp
imul
mov
not
xchg
mov
pop
push
sbb
sub
mov
jb
mov
loopne
dec
fadd
sbb
lods
or
jne
or
popa
pusha
nop
cs
aam
adc
xor
xchg
cmps
call
pop
fimul
jmp
add
add
mov
mov
or
add
scas
sbb
xchg
or
xor
push
mov
and
and
xchg
sub
fwait
jnp
adc
push
xor
add
arpl
cld
pop
add
jo
add
xchg
gs
call
or
or
push
ins
out
sbb
add
pop
pop
call
movs
inc
adc
and
or
je
sbb
ja
lock
in
pop
or
and
sbb
jecxz
ss
ret
jo
out
xchg
add
sub
mov
or
mov
mov
daa
push
clc
pop
xor
out
and
dec
add
xlat
or
(bad)
and
int3
ss
mov
jae
pop
mov
imul
mov
js
adc
mov
mov
dec
rol
jns
test
pop
mov
dec
jnp
jmp
adc
push
jp
clc
and
xchg
pop
je
mov
ins
and
outs
add
push
and
sbb
ja
xor
push
jnp
bound
fistp
jns
adc
call
inc
xchg
mov
cmp
loope
fs
test
or
inc
xchg
jmp
dec
outs
push
(bad)
push
in
push
and
sub
mov
mov
imul
fidiv
add
cdq
popa
or
jbe
iret
rcl
(bad)
mov
adc
mov
xor
xlat
inc
setnp
rcl
jle
(bad)
pop
sub
add
xlat
sbb
sti
xchg
xchg
and
inc
cmp
xchg
sbb
jbe
sub
push
adc
push
push
lea
push
sub
pop
pop
push
adc
call
push
pop
repnz
or
lds
sbb
out
outs
scas
jnp
sbb
pop
mov
cdq
shr
push
mov
ja
mov
sbb
or
jo
mov
sbb
mov
xor
push
or
pop
add
bound
enter
out
nop
loopne
jge
inc
ficom
inc
sub
adc
xchg
sbb
jne
stos
inc
pop
push
cmp
fcomp
lock
push
push
jmp
in
push
xor
add
clc
adc
pop
js
add
mov
mov
push
bswap
xchg
aad
mov
xor
cwde
cmp
mov
pusha
mov
jmp
add
arpl
xchg
loopne
out
scas
fstcw
mov
mov
sbb
retf
jge
jns
rcr
xchg
mov
ficomp
nop
popa
pop
popa
dec
fwait
cdq
popa
mov
mov
stos
or
int
cmp
mov
jns
or
mov
ret
or
inc
push
push
xor
mov
xor
sbb
and
call
push
jle
mov
aas
push
xchg
call
adc
into
and
cwde
adc
in
into
dec
cmp
shl
sub
pop
cmc
shl
pop
mov
rcl
and
xchg
jo
cmp
movnti
xchg
shr
pusha
or
or
add
je
pop
mov
push
pop
and
jg
jmp
mov
popf
adc
sti
in
sbb
leave
js
mov
cmp
pop
xor
or
or
cmps
lock
rol
or
mov
inc
mov
and
jne
pop
add
and
adc
adc
xchg
add
pop
sub
pop
dec
xchg
sub
fwait
cs
sbb
add
(bad)
xor
jl
hlt
movs
cmp
mov
xor
sbb
inc
movs
mov
int3
jg
in
adc
sub
inc
lods
mov
repz
cmp
out
icebp
test
mov
mov
popa
add
adc
or
xor
push
pop
jo
je
add
lods
test
xchg
call
mov
xchg
mov
mov
sahf
les
push
fs
sbb
push
daa
or
adc
mov
adc
movs
mov
dec
jmp
add
ror
in
outs
lods
add
xor
call
jns
mov
xor
add
mov
xor
xchg
jo
cmp
aam
outs
cmp
jnp
or
lock
jno
or
jge
ret
popa
pusha
lods
dec
cmc
xchg
stc
leave
sub
adc
adc
in
sbb
or
add
pop
stc
dec
inc
lock
iret
ja
jb
sub
mov
outs
stos
jmp
pop
cmps
dec
add
cmp
jmp
mov
into
jge
lods
inc
icebp
adc
add
call
xchg
push
cld
fstp
and
mov
cmp
aad
xlat
inc
dec
add
(bad)
add
xor
into
inc
mov
xor
retf
add
inc
cmp
fcmovb
mov
pop
sbb
aad
pop
add
or
adc
and
mov
pop
shl
dec
jmp
cwde
movs
imul
jmp
pop
and
pop
cmps
push
sbb
cmp
or
test
cmps
nop
repnz
inc
in
adc
pop
cdq
push
mov
lods
mov
test
pop
mov
push
pusha
jecxz
xchg
mov
xor
jecxz
mov
xchg
jp
cli
int3
mov
or
xor
outs
in
xchg
add
(bad)
addr16
ds
dec
fcmovb
ror
sub
repz
xor
(bad)
mov
xor
jle
adc
(bad)
mov
call
mov
mov
jne
sub
mov
jecxz
int
xor
in
je
add
(bad)
jp
pop
ins
jmp
and
dec
xchg
dec
and
cmp
mov
inc
push
xchg
xor
les
adc
and
cmp
adc
aas
lods
cmps
xor
fsub
and
inc
sub
mov
cwde
in
adc
inc
dec
sbb
inc
fsubr
pop
sbb
or
xchg
test
hlt
and
or
cmp
mov
pop
idiv
push
and
(bad)
or
jae
dec
pop
adc
inc
jo
xor
or
push
inc
push
loopne
out
dec
sbb
lock
cmp
cmp
or
xchg
enter
or
cmp
and
add
dec
add
mov
je
mov
jae
inc
pop
and
sbb
sbb
mov
fs
push
mov
je
inc
test
add
jge
jl
test
mov
aas
jbe
push
mov
and
or
push
and
xchg
mov
sub
pop
jno
mov
out
xchg
or
push
fcom
dec
inc
dec
adc
mov
add
dec
bound
jbe
cmp
mov
xchg
inc
add
retf
jb
jnp
rcl
jb
sbb
and
xor
imul
add
mov
rcr
adc
pop
add
mov
fiadd
mov
xor
cmp
fadd
or
pusha
sub
test
xor
push
loopne
dec
int
jg
jbe
int3
xor
les
or
nop
dec
fs
in
nop
retf
fadd
fwait
and
lods
pushf
clc
xor
enter
xor
and
add
cld
aam
add
and
sbb
add
mov
add
xor
push
jg
cmp
inc
arpl
hlt
xor
pop
xor
push
outs
aaa
and
fbld
cmp
xadd
push
or
pop
jno
and
pop
aas
push
jmp
test
pushf
jg
cs
rcr
rcl
jmp
mov
pushf
mov
cmps
rol
and
xor
sbb
xor
mov
or
and
ret
(bad)
movsx
adc
js
ds
adc
and
xchg
sbb
lds
cs
inc
(bad)
xchg
test
pop
mov
jmp
pop
pop
mov
lock
cmp
loopne
xor
or
test
mov
sbb
inc
and
mov
push
out
push
sbb
mov
inc
mov
dec
inc
cmp
mov
add
pusha
sbb
xchg
ficom
mov
sbb
mov
xchg
scas
adc
sbb
js
lock
cmp
sbb
adc
or
shr
shr
movs
mov
push
or
xlat
ror
add
sbb
adc
fiadd
adc
adc
push
and
or
xor
cmp
clc
mov
mov
adc
adc
push
xchg
adc
mov
dec
loop
add
call
daa
push
cmp
pop
push
cmp
push
inc
int3
sub
add
dec
or
cli
mov
sbb
(bad)
push
mov
push
fwait
sar
call
add
shl
mov
sbb
aaa
stc
inc
clc
mov
jl
mov
xor
clc
jne
cld
dec
jecxz
aaa
push
cmp
loopne
pop
adc
mov
add
adc
or
push
mov
cdq
ret
call
and
loopne
stos
ins
mov
mov
dec
inc
cld
fld
ss
fs
into
imul
sbb
adc
xchg
sbb
into
into
jo
mov
(bad)
outs
sub
adc
in
test
out
push
pusha
mov
sub
outs
jl
adc
lods
sub
test
test
je
mov
xchg
push
and
add
enter
and
or
adc
adc
jg
test
je
rol
sbb
and
xor
cmp
xchg
aam
inc
(bad)
in
popf
add
mov
inc
movs
mov
fnsave
in
loop
call
rol
rcr
dec
daa
adc
cmps
and
jne
push
je
mov
jb
call
mov
pop
pop
aam
and
adc
adc
das
jmp
mov
test
fimul
test
(bad)
outs
cmp
daa
cmp
ins
add
mov
loopne
mov
aam
xchg
scas
push
cmp
lds
xchg
int3
mov
or
push
pop
ret
sbb
nop
mov
add
(bad)
jmp
shl
mov
inc
xor
or
cdq
mov
dec
in
xor
out
fcom
das
and
add
sbb
sti
add
add
scas
xor
(bad)
sub
pop
add
movs
jb
pop
adc
dec
or
or
or
sbb
pop
(bad)
ss
add
(bad)
pop
add
pop
mov
ficomp
add
xchg
xor
push
sub
add
pop
or
bound
sub
pop
mov
jge
lds
faddp
mov
fld
or
outs
cmp
ins
pop
add
sbb
pusha
test
dec
xor
lods
dec
shl
sbb
and
xchg
sub
popa
lock
push
xchg
shl
pop
add
fwait
push
repz
jae
xlat
in
hlt
in
adc
jno
push
xor
sub
out
dec
iret
dec
bound
add
fld
fcomip
mov
mov
js
mov
jne
inc
stos
mov
xor
jo
and
mov
sub
mov
cmp
cmp
clc
and
xchg
iret
js
pop
scas
fs
mov
cmp
sub
inc
das
loopne
cld
mov
inc
test
pop
pop
cmp
pop
les
adc
jp
pop
scas
jae
call
add
add
ss
outs
retf
add
sub
sti
xchg
mov
add
push
rcr
cmps
push
sar
xchg
mov
nop
gs
add
or
nop
add
dec
xchg
push
stc
pop
hlt
shr
inc
rol
cmp
hlt
std
dec
test
xor
in
in
scas
inc
rol
xchg
xchg
sub
(bad)
jp
push
pushf
sbb
add
test
pushf
add
fs
outs
pop
sbb
out
jmp
jmp
stos
xor
and
adc
dec
or
xor
jmp
sbb
movs
cmp
or
adc
jmp
fmul
jmp
and
and
nop
or
popa
inc
add
adc
add
adc
popf
mov
mov
je
push
pop
jmp
sub
pop
inc
scas
add
and
movs
lods
dec
fst
sub
mov
push
jmp
add
mov
sbb
add
retf
xor
scas
add
sub
(bad)
fisttp
mov
pop
es
cs
inc
or
dec
fstp
push
sbb
or
jbe
or
and
mov
jecxz
dec
cmp
push
fwait
pushf
sub
inc
jnp
sbb
jo
test
mov
add
lods
add
call
sbb
push
loope
adc
mul
mov
mov
outs
test
add
out
sbb
sub
pop
inc
xchg
lea
sbb
mov
inc
retf
outs
mov
mov
neg
xchg
movs
neg
in
sbb
ficomp
and
retf
jo
and
mov
pop
sti
sbb
mov
mov
adc
mov
loope
add
push
cmp
sub
push
call
pop
push
sub
push
push
push
push
fld
push
mov
push
popa
or
ins
mov
pop
mov
or
mov
cmp
dec
and
cmps
ror
fistp
fist
and
push
in
loopne
je
sar
push
sub
and
and
adc
sbb
push
and
and
loopne
mov
js
xchg
inc
add
jge
popf
sbb
or
ror
mov
push
pop
push
jb
test
sub
or
mov
lds
cmps
inc
add
inc
das
or
pop
or
inc
lods
aaa
sub
add
clc
inc
lea
sbb
add
lea
popa
and
add
popa
sbb
add
inc
sbb
in
jno
aaa
enter
data16
lea
xchg
jbe
inc
js
adc
or
pop
inc
lea
fadd
sahf
push
add
or
sub
test
adc
mov
(bad)
(bad)
inc
sbb
repnz
xor
push
mov
sbb
or
mov
add
add
aam
or
enter
jp
adc
add
in
add
or
pop
or
out
faddp
aaa
test
mov
jge
das
pop
mov
test
pop
mov
or
xor
or
xchg
dec
or
arpl
test
lods
xchg
jle
mov
stos
rcl
push
test
inc
pop
sub
(bad)
jmp
aas
in
iret
lds
adc
and
cmp
sub
rol
pop
and
sbb
ret
mov
mov
fwait
push
push
pop
inc
cmp
add
cmp
scas
(bad)
repnz
mov
repnz
and
jle
iret
add
dec
xchg
jbe
jne
or
rol
ins
les
inc
push
jmp
or
adc
or
std
(bad)
add
jae
mov
mov
mov
cmps
dec
inc
add
dec
push
or
retf
rcr
push
or
pop
dec
adc
sar
call
pop
pop
add
in
xor
jge
jnp
pop
push
cmp
mov
cmp
pusha
test
and
xchg
pop
xchg
repnz
out
out
mov
add
out
push
add
cmp
xchg
xor
ret
cs
loope
jecxz
mov
out
jno
imul
mov
and
aam
push
mov
push
(bad)
jl
add
cmp
je
mov
int3
jp
data16
cld
daa
cmp
mov
aad
in
push
mov
bound
sub
or
pop
(bad)
sbb
and
pusha
inc
pop
or
ja
shl
mov
push
fdiv
lock
adc
xor
and
out
sub
mov
add
jmp
pop
retf
aaa
jmp
sbb
xchg
mov
fwait
icebp
popa
test
adc
cmp
cld
ret
and
and
sub
pop
loop
xchg
jmp
aaa
sub
inc
or
cmp
lea
arpl
add
out
ret
push
add
cmp
or
xor
add
loop
pop
dec
inc
add
adc
mov
cmp
sub
add
outs
dec
mov
add
jno
in
xor
dec
clc
(bad)
les
in
inc
sub
mov
aam
and
into
(bad)
dec
retf
cmp
test
push
inc
push
sar
add
dec
mov
test
xor
jl
sub
lea
rcr
clc
jmp
cwde
ja
push
add
or
repz
sub
jne
and
pop
pop
mov
sbb
fsubr
push
adc
lahf
stc
ins
mov
sbb
pushf
push
cmp
inc
fadd
jne
js
ret
push
xchg
fucomp
(bad)
xchg
rcl
mov
test
clc
xchg
push
cmps
es
dec
popa
dec
rol
push
sbb
cmps
mov
lods
repnz
adc
in
adc
or
test
jno
xchg
adc
pop
cli
inc
dec
and
cmp
cmp
and
div
cmp
or
(bad)
sbb
xchg
xchg
ret
push
add
nop
pop
or
dec
and
(bad)
ror
pop
xor
inc
adc
lock
enter
jle
out
jmp
ret
pop
es
call
or
jns
sti
or
hlt
js
movs
pop
les
int3
or
cmp
hlt
pusha
daa
fdiv
je
xor
dec
dec
sbb
nop
or
inc
mov
mov
sbb
rol
mov
les
xchg
push
adc
mov
and
xor
cmps
gs
and
mov
xor
pop
mov
mov
mov
sub
sbb
push
mov
les
sbb
cmp
ss
test
outs
pop
sub
fs
(bad)
mov
imul
icebp
push
sahf
sub
pop
gs
inc
jge
inc
mov
jae
mov
rol
add
jg
sti
xor
add
lock
jne
iret
mov
sub
rcl
jne
mov
pop
dec
cmp
or
stos
xchg
aas
jle
jmp
sti
and
and
add
add
outs
cwde
xchg
iret
sar
mov
jns
ror
adc
dec
mov
jmp
pop
cmp
xor
jae
(bad)
add
bound
push
es
push
mov
popf
or
inc
or
mov
xlat
push
imul
dec
ud1
ds
adc
cmp
jne
add
aaa
sbb
inc
or
push
aas
es
mov
pop
stc
sub
cmp
fist
dec
shr
stos
or
xor
lock
push
cmp
or
add
sbb
mov
imul
lahf
je
pushf
push
fild
jne
xchg
dec
mov
jo
in
xchg
inc
push
xor
nop
inc
pop
or
cmp
aas
mov
(bad)
shr
adc
cmp
(bad)
in
jg
rol
fisub
pop
inc
mov
inc
add
(bad)
stc
add
sbb
rol
shr
inc
pop
cmp
push
xor
jp
adc
push
fwait
scas
inc
lock
imul
jns
add
jo
add
jbe
ret
push
mov
sub
into
js
mov
pop
push
sbb
outs
pusha
les
add
push
fldcw
xor
push
inc
jge
imul
les
push
push
push
mov
mov
js
jne
add
imul
loop
std
or
pushf
push
and
mov
pop
pop
add
push
cmp
and
push
push
or
mov
enter
icebp
xor
mov
mov
sbb
cwde
pop
jae
sub
push
mov
xor
sub
adc
shr
imul
mov
rol
iret
adc
mov
arpl
jle
jne
add
and
popa
sub
mov
adc
ja
pop
or
enter
dec
mov
adc
repnz
add
sub
daa
sbb
jmp
cmp
or
jmp
leave
pop
inc
inc
and
push
aad
sub
outs
out
sub
pop
xor
movs
pop
inc
(bad)
cli
call
mov
retf
jg
daa
cmp
popf
mov
pop
ret
js
add
sub
or
test
mov
mov
(bad)
cmp
sub
jne
xchg
in
test
mov
mov
jle
jmp
pop
dec
test
imul
push
and
movs
loop
cdq
ret
mov
adc
sub
popa
xor
aas
mov
loopne
jg
cmp
add
push
push
fild
sbb
nop
pusha
mov
pop
dec
inc
xchg
out
pop
not
or
icebp
push
dec
adc
mov
ins
push
jne
cmp
mov
or
pop
xor
aad
sub
add
mov
out
inc
mov
je
shl
mov
pusha
cmp
daa
xchg
xor
ja
sbb
inc
jbe
loope
or
jo
jmp
and
loope
push
sub
or
add
outs
push
dec
call
icebp
dec
fisttp
and
and
pusha
or
sbb
jle
inc
in
je
popf
and
cld
mov
mov
mov
add
iret
pop
cmc
stos
das
ja
(bad)
retf
push
sbb
dec
push
lods
rcr
or
lea
cli
lea
lea
test
cmp
jmp
add
sub
pop
xchg
xor
push
call
sbb
daa
add
clc
shr
add
inc
push
(bad)
inc
mov
pop
pop
das
test
pop
fldenv
call
or
call
stos
mov
jo
fmul
add
or
dec
or
add
cdq
dec
dec
rol
push
xor
ret
das
sbb
test
loopne
lock
addr16
popf
cmps
add
jecxz
mov
adc
pop
pop
jl
add
inc
jmp
and
xor
loop
ins
loope
dec
add
loope
xor
clc
int
mov
push
mov
mov
mov
dec
out
xor
push
rcl
(bad)
cld
test
imul
inc
shl
sbb
jmp
iret
mov
adc
sbb
pop
pusha
and
ins
cmc
cmp
daa
xchg
mov
jo
clc
int
movs
pop
loop
cmps
push
xor
dec
mov
sbb
enter
call
iret
sbb
icebp
xlat
add
pop
add
dec
inc
dec
push
pop
in
and
dec
call
retf
ror
inc
movs
add
movs
mov
cmp
arpl
fnstcw
sub
xchg
sbb
js
push
pop
mov
jmp
pop
inc
hlt
add
loopne
xor
sti
and
call
dec
rcl
sbb
add
cmp
dec
clc
and
data16
cmp
in
push
je
push
js
pop
xchg
or
push
pop
mov
jbe
or
mov
idiv
xchg
test
dec
sub
out
adc
sub
or
repz
inc
dec
(bad)
out
das
lods
or
cmp
je
jnp
add
add
adc
out
jb
cmp
cwde
mov
lds
retf
push
add
cmp
rcpps
add
push
sbb
fild
push
xchg
movs
dec
sti
pop
and
retf
xchg
in
fist
into
sbb
mov
loopne
dec
lea
jns
or
movs
fcomp
test
mov
xlat
or
stc
xchg
loop
dec
in
jne
and
sub
ret
(bad)
xor
push
push
mov
aas
js
mov
adc
add
and
and
jl
sub
aaa
fild
test
(bad)
imul
jmp
cmp
sbb
xor
dec
pop
(bad)
sbb
mov
cmp
mov
js
dec
test
fbstp
dec
sbb
sub
pop
adc
dec
mov
test
mov
sbb
add
jg
(bad)
mov
push
adc
mov
dec
arpl
cdq
pop
jp
mov
nop
out
dec
xchg
xor
retf
xchg
cmp
cmp
push
fadd
aam
ss
scas
ins
sbb
inc
mov
add
jo
test
outs
jne
ret
out
jmp
adc
pop
fs
mov
sbb
xlat
sbb
iret
sbb
adc
fsubr
sub
jnp
test
fwait
inc
xlat
shl
arpl
lock
inc
adc
or
inc
mov
sbb
push
inc
jns
pop
mov
push
inc
cdq
js
push
shl
mov
or
pop
sbb
shl
add
cmp
dec
add
push
push
ins
push
mov
mov
dec
adc
stc
jmp
out
mov
jmp
out
adc
add
sbb
cmp
test
ret
mov
iret
ss
iret
ins
adc
xor
lahf
inc
cmp
sbb
sbb
or
xchg
adc
(bad)
and
cld
and
in
fdiv
ss
inc
jbe
js
push
or
test
fstp
cmp
sub
sub
add
sti
sub
and
push
push
or
push
pusha
mov
(bad)
and
nop
data16
ret
icebp
push
nop
and
mov
(bad)
or
call
movs
je
xor
mov
(bad)
ret
jp
push
mov
aam
bound
push
sbb
cs
hlt
or
sub
(bad)
cs
jmp
xchg
imul
pop
push
retf
mov
add
fistp
sbb
(bad)
or
outs
(bad)
adc
mov
mov
std
js
into
rcl
sbb
out
shl
mov
arpl
mov
cmp
(bad)
jl
imul
or
test
or
iret
mov
cmp
inc
inc
je
hlt
jnp
pushf
mov
mov
and
pop
arpl
les
jo
ret
shl
inc
jae
sbb
adc
or
test
stc
mov
push
les
shr
cmp
sti
sub
push
arpl
in
rol
mov
pop
das
add
(bad)
rol
mov
pop
retf
and
pop
add
in
xchg
push
sbb
sbb
dec
sub
ror
jp
scas
or
xchg
sbb
inc
movs
aaa
xchg
repnz
adc
mov
pop
adc
test
mov
cmp
mov
adc
and
das
push
cwde
call
and
push
nop
int
(bad)
pop
sub
xor
jle
call
and
adc
idiv
inc
jmp
outs
lock
and
adc
ins
(bad)
jecxz
jge
mov
int3
jmp
sub
pusha
cmp
sub
push
mov
add
xchg
jo
xchg
outs
cld
sbb
xor
div
les
adc
sbb
jmp
popf
ja
rcr
aam
sub
bound
pop
aas
test
ret
fadd
leave
hlt
aaa
or
pop
bound
enter
inc
add
in
mov
lock
sub
sub
daa
jb
adc
xchg
add
dec
add
dec
cmp
pop
dec
in
icebp
add
pop
sub
mov
xchg
mov
cmp
data16
sub
mov
xchg
mov
push
dec
jne
gs
addr16
lea
aas
sar
sub
mov
fsubr
pop
or
mov
jecxz
int3
das
cmp
xor
xor
adc
cmp
dec
inc
jo
loop
adc
inc
inc
cmp
sbb
mov
add
neg
fmul
inc
adc
dec
add
sub
cmp
ds
mov
lock
jge
mov
pop
nop
inc
mov
dec
outs
and
jno
inc
fidiv
test
stc
fld
test
jnp
xchg
and
push
jge
push
sub
mov
and
icebp
arpl
pusha
dec
adc
jmp
sbb
sub
mov
xor
dec
dec
pop
jmp
je
add
push
push
cmp
ja
push
call
push
adc
or
add
loop
ret
stos
cmp
or
imul
push
mov
or
sub
xchg
adc
gs
add
and
mov
mov
fadd
popa
ret
sbb
dec
ret
adc
fmul
sbb
sar
xor
pop
imul
sub
pop
call
out
cmp
cmp
inc
mov
xor
sub
pop
in
(bad)
jecxz
pop
push
jle
pop
call
cmc
test
jbe
and
xor
push
add
mov
inc
adc
jne
data16
mov
inc
nop
es
add
push
ret
xchg
das
cld
or
mov
ret
fs
in
and
aad
addr16
aaa
out
pop
sbb
clc
sub
add
and
sub
jne
aaa
push
cld
sub
pop
push
lods
and
push
dec
rol
and
or
sbb
ins
inc
or
adc
sub
ja
xchg
pop
mov
mov
mov
cmp
pop
sahf
jp
sub
inc
add
add
call
mov
inc
or
cwde
add
ror
sbb
inc
sbb
dec
pusha
shr
jecxz
mov
push
xchg
sbb
pop
and
add
or
or
add
add
mov
daa
je
fld
or
mov
shl
lods
pop
das
or
inc
sbb
daa
xchg
hlt
or
mov
adc
cmp
jecxz
iret
adc
test
sbb
jp
int3
jae
push
arpl
xchg
fwait
xchg
loope
lods
jo
loopne
pop
inc
ret
jl
imul
sbb
xor
or
dec
addr16
cmp
lock
enter
ret
dec
adc
popa
data16
jecxz
ss
mov
cdq
enterw
sub
test
adc
or
lods
shl
add
fdiv
or
xor
push
fcmovb
sti
or
mov
adc
ss
adc
xor
cmp
push
ret
outs
add
adc
adc
out
mov
xchg
shl
cmp
sbb
inc
or
and
inc
xor
test
mov
test
push
add
mov
mov
scas
clc
pop
cmp
ret
scas
dec
inc
inc
(bad)
mov
leave
js
jno
push
popf
cmp
lods
pusha
(bad)
cmp
rcl
nop
rcl
jbe
test
sbb
leave
mov
cmovl
push
pusha
shr
in
add
sub
dec
repz
pop
add
shr
add
jne
outs
adc
fs
shl
add
adc
int3
das
enter
adc
push
test
and
dec
cmp
push
mov
xor
mov
or
sbb
mov
pop
int
push
jge
hlt
repz
and
sub
sbb
inc
in
xchg
je
push
inc
out
(bad)
cmp
jecxz
out
jmp
jge
pushf
sub
leave
ja
icebp
mov
sub
ins
mov
mov
fcmovnbe
test
cmp
(bad)
test
sub
rol
pop
pop
dec
out
mov
enter
hlt
mov
psubw
cwde
fcmovu
sub
jmp
add
xchg
inc
sbb
clc
pop
js
mov
clc
ret
dec
push
mov
push
jb
dec
pop
les
inc
sbb
mov
or
xor
cmps
adc
add
lahf
rol
mov
sbb
inc
je
cdq
fiadd
inc
dec
daa
or
stos
lds
add
sub
adc
leave
les
adc
sbb
mov
sub
mov
outs
mov
pop
xor
dec
pop
rol
cmc
clc
sub
test
sub
mov
xchg
scas
jnp
jae
adc
fcom
dec
test
dec
jne
cmp
cmp
popa
lock
mov
and
dec
jae
aas
cmp
ror
mov
gs
das
and
dec
dec
fdivr
lock
lock
jo
push
xchg
inc
into
jle
push
in
pop
popa
loop
mov
out
push
sahf
mov
and
int3
cli
mov
sbb
jb
sub
or
dec
(bad)
(bad)
(bad)
or
stos
mov
mov
imul
push
push
jg
ins
jle
loopne
and
xor
push
and
xchg
adc
add
test
test
adc
mov
in
sbb
jle
sub
or
dec
or
xchg
in
jmp
fsub
in
sub
fdiv
xchg
cmp
xchg
sub
adc
cdq
mov
gs
xor
bound
mov
cmpps
or
add
scas
sub
mov
xor
push
sti
or
and
add
lods
and
daa
or
pusha
imul
add
cld
mov
cdq
add
xor
addr16
inc
push
(bad)
(bad)
pop
test
sbb
popf
shr
xor
inc
add
sub
movs
push
push
push
shl
cli
daa
je
or
je
inc
push
imul
push
neg
adc
es
sub
push
add
jo
mov
pop
leave
clc
movs
popa
shl
test
xchg
add
mov
rcl
add
pop
add
xchg
ins
pusha
add
and
dec
inc
movs
jmp
dec
and
push
dec
cmp
movs
and
cmc
push
jecxz
imul
jne
mov
fsubr
(bad)
xor
pop
dec
sar
rol
aaa
xor
push
push
push
mov
jo
sar
jns
adc
jmp
push
(bad)
imul
movs
xor
xor
cwde
repnz
or
jle
mov
lock
sbb
add
or
dec
in
push
push
shr
shl
push
push
jne
jo
mov
stos
ret
jae
loope
and
jne
loopne
push
mov
stc
push
sub
cmp
into
dec
pop
not
xchg
sbb
add
pushf
or
into
inc
aas
or
stos
movs
jecxz
cmp
adc
add
in
pop
mov
aaa
sbb
xchg
syscall
ss
mov
lock
or
jl
dec
lock
xor
mov
sbb
inc
sub
int3
or
sahf
sub
sbb
push
movs
retf
in
test
mov
or
fidiv
adc
ret
ror
js
xchg
movs
add
hlt
lahf
(bad)
jmp
fimul
dec
or
daa
lods
pop
add
add
cmp
push
inc
nop
cs
out
je
push
fmul
inc
aaa
(bad)
fld
jo
nop
add
sbb
pop
jp
jl
and
pop
imul
sub
sub
add
adc
add
push
add
xchg
add
and
sub
inc
repnz
inc
jecxz
dec
clc
cmp
xchg
js
xor
rol
(bad)
ror
cmp
cs
aad
cmp
imul
gs
push
neg
popf
js
xor
push
inc
push
pop
adc
pop
pop
and
in
sub
cld
pop
leave
inc
or
shr
inc
sar
add
jg
lea
inc
scas
adc
cmps
fild
cmp
(bad)
adc
sbb
mov
sbb
adc
fwait
push
jmp
or
cmp
adc
xor
cmp
ds
daa
ss
push
sbb
jne
adc
pusha
push
mov
pop
sbb
dec
mov
jle
fild
inc
call
mov
and
pusha
sub
int3
adc
dec
ret
mov
psubw
sub
xchg
cmp
cmps
scas
adc
test
sbb
ror
por
dec
cdq
jmp
test
sbb
inc
in
pop
or
xchg
mov
xchg
sbb
push
lahf
inc
sub
ror
dec
ins
js
or
mov
sub
leave
xchg
push
pop
adc
jb
pop
dec
sub
gs
inc
mov
pop
mov
in
inc
mov
jg
mov
adc
push
sub
or
imul
mov
mov
cmp
sbb
ror
and
add
loopne
loopne
adc
sbb
add
aas
jno
sbb
cwde
jno
(bad)
sti
mov
or
mov
test
pop
xchg
cs
cmp
lods
rcl
in
add
cwde
add
daa
movs
pop
mov
dec
sub
(bad)
shl
sahf
inc
or
aad
adc
add
gs
mov
xor
inc
dec
int
xchg
mov
icebp
mov
push
sbb
xlat
or
xchg
or
shl
xor
movs
rdpmc
jo
mov
xchg
or
jecxz
push
loop
daa
sahf
mov
int3
adc
fld
xlat
(bad)
mov
cmps
mov
retf
pop
ret
dec
ret
inc
xchg
data16
out
xor
fiadd
xchg
sbb
cmp
cmp
scas
and
loop
and
pop
sub
cli
push
in
js
pop
sbb
js
or
fimul
mov
adc
push
mov
mov
(bad)
adc
xchg
adc
cmp
mov
and
cwde
es
push
jo
mul
test
enter
push
jmp
jl
fcmove
lock
inc
sbb
sbb
sbb
(bad)
ret
cmp
push
xchg
dec
lea
in
add
xor
xchg
loope
add
mov
xchg
stos
add
ins
inc
shl
fld
push
jge
hlt
push
cmp
add
clc
adc
xchg
ds
push
pop
bound
jne
scas
mov
fdiv
xchg
xrelease
aad
xor
pop
lock
and
dec
adc
jo
(bad)
push
and
imul
lods
sbb
sbb
loop
xor
mov
stos
ds
dec
xor
xlat
test
scas
adc
lock
xchg
fs
cmps
and
and
xor
jns
sub
push
ins
lock
or
or
rcl
pushf
sbb
sbb
cwde
sbb
jne
rcr
xor
cmps
(bad)
inc
pop
fdivr
mov
push
lock
add
xor
test
stc
mov
xchg
adc
push
fadd
pop
out
adc
or
cdq
leave
icebp
fwait
test
dec
ja
dec
or
push
push
inc
push
mov
in
cli
and
imul
pop
sbb
(bad)
ins
lea
add
inc
test
loope
std
rol
mov
inc
sub
es
push
popa
stos
add
mov
dec
aad
push
mov
sub
ds
fcom
pop
test
or
push
push
cmp
loop
push
and
enter
cmp
cs
add
ficomp
jmp
and
sbb
rcr
out
cmp
pmulhuw
sub
mov
nop
push
mov
daa
inc
lock
xadd
push
adc
test
sahf
and
push
sbb
mov
and
je
cmp
pop
ret
add
loope
dec
or
cs
xor
and
shr
jg
inc
cmp
mov
add
movs
xchg
(bad)
add
xor
pusha
test
pop
sbb
loop
jge
cmps
mov
cwde
rol
sahf
sbb
(bad)
mov
hlt
sbb
or
push
imul
test
arpl
xchg
xchg
or
pop
clc
je
xor
sbb
gs
test
jne
push
dec
xor
cmp
(bad)
jmp
mov
sub
ins
or
popa
sub
push
inc
arpl
add
mov
xor
sbb
pop
(bad)
sub
inc
xor
inc
fcomp
cmp
or
or
push
adc
or
mov
jnp
xchg
es
sbb
lods
and
std
pop
nop
pop
loopne
lock
pop
sub
retf
es
sub
pop
pusha
add
movs
push
xor
rcr
and
lods
int3
inc
dec
fs
inc
xlat
ret
int
sbb
jg
lea
xor
or
xchg
add
xor
push
mov
add
dec
ret
pop
adc
in
pushf
div
nop
retf
aas
jl
jae
test
push
fwait
pop
xlat
jle
push
movs
lock
pop
leave
nop
mov
fs
add
mov
(bad)
fist
fsub
mov
fwait
ret
aam
inc
jns
push
or
mov
jg
mov
mov
(bad)
mov
xchg
mov
fisub
add
mov
(bad)
cs
sub
add
test
jnp
push
das
jmp
push
ins
jge
mov
or
int
adc
cmp
add
iret
and
enter
cmp
mov
les
sub
shrd
and
daa
popf
or
xor
add
sahf
push
sub
add
xor
test
jne
cmps
add
scas
mov
or
fld
cmp
or
lahf
and
(bad)
and
add
or
push
dec
dec
aam
rcr
sub
cmps
sub
fmul
into
sbb
call
xor
ret
outs
mov
add
pop
jae
aaa
push
xor
ds
sbb
aas
into
and
add
inc
imul
or
sub
cwde
nop
pop
jl
fiadd
push
es
mov
pop
push
mov
push
sub
mov
cdq
fcom
and
mov
xor
popa
not
inc
mov
pop
add
cmp
and
js
mov
dec
rcl
test
(bad)
daa
daa
daa
daa
dec
xor
shr
pop
lfs
lds
es
add
pop
adc
lock
push
dec
cmp
dec
jb
and
add
adc
jb
pop
pop
sbb
push
push
mov
push
inc
and
sub
mov
push
ins
xor
loop
je
nop
cmp
mov
movs
nop
call
fs
xchg
test
xchg
iret
pop
cmps
ror
mov
aaa
adc
xor
xchg
ins
stc
es
adc
jb
cs
std
sbb
mov
cmp
push
lock
call
pop
mov
pop
inc
inc
call
ins
sub
mov
(bad)
cmp
out
jl
or
jle
or
mov
xor
xor
cmp
add
cmp
inc
into
push
fcomp
out
mov
pop
pop
sti
pop
adc
jae
(bad)
cdq
(bad)
mov
or
scas
sub
jo
cmp
cmp
mov
mov
pop
dec
push
into
outs
pop
mov
sbb
stc
mov
and
mov
mov
or
sub
retf
pop
ds
outs
mov
or
aas
xchg
lea
mul
pop
test
jge
ret
cmp
inc
scas
sbb
inc
mov
adc
pop
lock
ror
retf
and
add
out
(bad)
fstp
sbb
ror
cmp
sbb
test
sbb
arpl
clc
mov
imul
mov
in
xchg
repnz
inc
add
das
adc
and
cmp
jb
std
and
jecxz
in
sbb
mov
or
sub
cmp
push
out
jno
adc
inc
arpl
add
fcmovb
mov
neg
mov
inc
and
mov
sub
push
dec
in
add
ret
pop
adc
pop
clc
pop
xchg
test
sbb
paddsb
add
ror
jecxz
aad
add
add
and
test
das
cmp
dec
and
sbb
push
xchg
pop
imul
scas
push
and
in
xor
cmp
sub
popf
(bad)
dec
pop
push
or
mov
push
add
cmc
adc
es
dec
sbb
sar
idiv
xor
jae
je
mov
mov
and
jmp
mov
mov
mov
mov
jne
movs
or
sahf
lods
into
add
pop
sar
xor
stos
pushf
dec
loopne
rcr
add
and
dec
mov
jl
inc
inc
imul
cs
cmovae
push
push
dec
mov
push
shl
enter
or
mov
ret
sbb
push
xchg
movs
test
daa
cmp
rcr
ret
or
retf
sub
test
cmp
test
es
call
xor
mov
and
test
pop
out
dec
not
mov
push
sbb
nop
pop
mov
cld
add
jle
push
pop
les
sub
iret
xchg
(bad)
xchg
shl
ret
push
mov
add
mov
or
xor
mov
popa
fwait
dec
mov
and
mov
aas
dec
jmp
cmp
add
adc
fcom
dec
sbb
data16
add
inc
add
cmp
addr16
(bad)
ins
and
dec
inc
test
dec
scas
sub
adc
pop
gs
jbe
imul
ror
sbb
or
pop
adc
dec
popf
or
jmp
lock
leave
xor
add
dec
test
retf
(bad)
xor
es
push
ins
fwait
ins
movs
mov
adc
js
cmp
(bad)
pop
mov
mov
shr
adc
mov
lock
stos
and
or
iret
sub
arpl
add
jmp
adc
sub
pushf
and
add
mov
xchg
adc
xchg
cmp
adc
sub
out
adc
je
adc
add
repz
mov
add
scas
inc
mov
iret
fsubr
daa
dec
stos
add
int3
push
sub
inc
and
inc
push
xor
mov
xor
lock
ins
rol
jmp
sbb
lea
or
inc
jecxz
push
sbb
lea
(bad)
cmp
adc
bound
push
inc
das
adc
ins
add
and
pushf
sub
mov
cmc
adc
jae
cs
add
xor
inc
adc
test
arpl
cmp
korw
push
dec
clc
cmp
je
push
add
cmp
inc
mov
in
push
mov
or
xor
(bad)
cmp
or
sub
sub
imul
xchg
xor
pop
pop
adc
add
popf
clc
jo
sar
scas
mov
jl
adc
sub
mov
inc
push
ja
lock
mov
addr16
dec
cmp
add
jo
das
cs
loope
dec
jnp
pop
or
add
adc
or
and
iret
popa
(bad)
xor
sub
mov
mov
xlat
int
arpl
sbb
sbb
nop
in
xchg
xchg
mov
sti
push
cmp
out
fsubr
or
jb
push
mov
cmp
push
mov
sub
mov
sub
pop
retf
adc
les
xchg
xchg
xor
pminsw
or
sbb
test
cdq
pop
dec
aaa
or
dec
lock
add
jnp
ja
cmp
jmp
cmp
push
lock
sub
adc
clc
cmps
mov
xchg
cmp
mov
int
pusha
sbb
rcr
ret
pop
pop
sub
imul
jp
pop
(bad)
push
mov
cmp
mov
add
pop
inc
push
push
in
inc
cmp
fisttp
(bad)
lods
mov
pop
adc
push
jbe
adc
je
mov
cmp
(bad)
retf
ja
imul
xor
rcr
cmp
leave
je
pop
mov
sbb
lock
ins
ins
mov
push
sbb
jecxz
in
fs
shl
push
sub
jne
mov
or
push
dec
sub
adc
push
push
push
jp
or
or
pop
cmp
sbb
not
enter
dec
dec
mul
ss
cmp
mov
ja
loope
rcr
push
cmps
and
mov
xor
push
mov
jmp
in
or
push
test
out
outs
xor
mov
lock
mov
mov
xor
add
mov
lds
cld
aas
les
pop
mov
mov
pop
repnz
adc
ins
push
test
test
jae
pop
leave
imul
dec
push
cmps
cmc
out
imul
inc
xor
mov
out
pop
cmp
pusha
or
pop
cmp
and
jl
xor
xchg
add
jns
or
add
mov
aad
inc
sub
ds
sub
mov
ins
or
inc
mov
pop
scas
(bad)
(bad)
arpl
daa
or
mov
gs
dec
rol
jb
cmp
mov
mov
shr
lea
je
loop
xchg
addr16
add
sub
inc
aam
mov
cmp
inc
mov
xchg
push
pop
pop
add
dec
test
bound
ins
lods
jg
movs
mov
dec
inc
dec
dec
dec
inc
xor
icebp
mov
inc
js
test
dec
jmp
jmp
pop
push
outs
call
sub
sub
inc
sbb
sbb
mov
js
adc
jg
cmp
xchg
enter
jmp
enter
mov
push
push
push
push
lock
sub
mov
and
out
add
invd
xor
jge
jns
add
js
inc
dec
call
cmc
inc
inc
xor
lods
inc
adc
cwde
mov
ja
call
mov
jecxz
sbb
jmp
push
inc
push
pop
sub
dec
add
int3
pop
and
mov
add
add
add
cmp
clc
imul
inc
sub
je
es
and
rcl
xchg
test
add
adc
and
fsubr
adc
cmc
mov
(bad)
lods
rol
mov
push
mov
in
push
fs
jo
or
aaa
mov
jbe
and
sbb
fst
xor
sbb
sar
mov
(bad)
mov
mov
imul
adc
add
push
fs
mov
mov
push
push
rol
imul
add
xchg
xor
scas
adc
jmp
push
push
push
cdq
pop
lods
and
int3
stc
inc
xor
out
js
lods
dec
mov
or
push
adc
clc
adc
es
fcom
sub
mov
sbb
fsubr
scas
clc
lock
and
cs
jle
ret
adc
mov
xchg
xor
sbb
pusha
add
dec
jle
jo
and
and
movs
ss
lods
dec
std
leave
push
aaa
sub
jp
adc
pop
rcl
iret
addr16
aad
(bad)
inc
xchg
call
add
adc
add
sbb
mov
adc
adc
lock
rol
mov
xchg
push
adc
push
(bad)
mov
inc
mov
add
xchg
and
dec
mov
pop
mov
movs
mov
mov
xchg
mov
nop
scas
mov
push
and
sbb
ret
adc
ins
cwde
fmul
(bad)
xchg
cld
push
inc
(bad)
xor
sahf
outs
sar
daa
mov
aaa
adc
js
xor
and
loope
mov
into
sbb
(bad)
cwde
and
or
sahf
mov
mov
inc
mov
je
and
xchg
or
je
mov
stc
push
jmp
test
loop
movs
inc
cs
bound
or
and
cmps
mov
fiadd
xchg
pushf
jl
ins
sub
xor
jbe
mov
aaa
daa
(bad)
and
adc
and
imul
in
dec
cmp
or
inc
pop
test
adc
das
dec
fcomp
clc
fwait
clc
loopne
xchg
not
or
mov
and
test
mov
pop
jne
ins
sub
xor
jg
fwait
cmp
fbstp
das
add
push
adc
or
sbb
ss
test
cmp
lea
ins
jae
rcr
addr16
pop
mov
shl
cmp
arpl
repnz
gs
xor
call
and
push
sub
rcr
loopne
pusha
and
mov
inc
adc
sbb
outs
inc
sub
dec
cld
mov
ror
mov
shr
jo
inc
or
mov
jle
pop
jl
cld
xchg
cmp
push
daa
cmp
lea
call
fcom
inc
popa
pop
sub
xor
cmp
(bad)
hlt
dec
adc
aas
aaa
mov
jg
add
and
add
add
pop
push
inc
fwait
in
test
pop
daa
dec
pop
xlat
pop
outs
test
mov
dec
sti
ins
mov
call
mov
pop
sub
push
loopne
inc
sub
je
test
dec
add
cmps
jg
(bad)
out
cmp
pop
loopne
pop
jp
bnd
fidivr
pushf
mov
xor
and
cmps
add
mov
enter
add
xchg
pop
cmp
jbe
sahf
add
dec
fadd
aam
aaa
xor
push
add
repnz
adc
retf
and
ror
sub
into
shl
jecxz
mov
sbb
cmp
dec
pop
xor
jno
cmp
lahf
or
arpl
lock
imul
cmp
xchg
dec
or
jl
scas
sub
out
xchg
fsubrp
xchg
cmp
call
repz
ins
nop
push
ins
and
les
neg
push
fnstenv
xchg
xchg
outs
pop
enter
sub
mov
cmp
adc
and
icebp
add
adc
push
or
push
cmp
xor
fst
jnp
push
add
in
cmp
xor
shl
rcr
lock
cmp
jmp
adc
adc
add
sub
push
and
mov
jecxz
push
fwait
movs
and
aaa
in
sbb
mov
dec
or
pop
ins
push
rcl
adc
imul
cmp
and
sub
and
in
add
mov
jne
and
popa
or
loopne
(bad)
pop
add
mov
stc
or
jae
xor
cmp
fwait
jmp
lock
add
add
adc
xor
and
inc
test
or
into
and
add
dec
lock
xor
sub
jae
sbb
xor
sbb
movs
in
add
push
inc
mul
cdq
out
or
fcomp
aam
push
ds
sti
icebp
push
push
mov
cmp
cmp
pop
test
jne
(bad)
retf
fnstenv
pop
pop
sub
mov
jmp
arpl
(bad)
fst
sub
mov
adc
dec
mov
aam
jmp
lods
xchg
jg
jmp
cmps
adc
cmp
adc
fisub
dec
mov
xor
movs
sub
push
and
imul
out
and
inc
nop
dec
and
iret
fadd
or
inc
inc
sbb
xlat
or
adc
je
mov
inc
hlt
gs
pop
and
cmp
sub
pop
sbb
iret
mov
adc
movs
ret
jge
test
movs
inc
call
or
add
add
into
pop
pop
adc
adc
add
mov
adc
jmp
or
cmp
dec
sub
push
icebp
cmp
add
push
pop
push
das
and
(bad)
push
inc
pop
inc
add
adc
cwde
ret
cmp
arpl
push
jne
pop
setb
sbb
pusha
dec
dec
dec
shl
mov
mov
inc
ja
cmp
je
add
sbb
push
jge
lahf
pop
xchg
pop
jmp
xchg
scas
cmc
sbb
xchg
add
movs
pcmpeqb
or
and
mov
repz
ss
popa
repnz
mov
add
mov
div
xor
retf
mov
sub
aam
xchg
or
pop
nop
push
add
test
jno
jne
pop
rol
push
and
pop
or
enter
inc
push
mov
and
and
imul
sar
add
clc
push
cmp
sbb
test
pusha
add
neg
sub
inc
repz
je
jmp
(bad)
pop
mov
out
or
push
xor
adc
pop
cmp
add
push
jl
mov
mov
jne
jns
jmp
popa
inc
vaddsd
pop
or
out
inc
push
inc
js
pop
(bad)
in
jp
inc
sbb
inc
xor
mov
add
sar
push
push
inc
xor
jnp
je
cmc
test
xchg
or
push
mov
add
or
inc
dec
pop
adc
mov
mov
test
fsubr
scas
shr
jl
cmp
mov
lods
loopne
xchg
sub
dec
cmp
iret
or
inc
pop
cmp
adc
add
sbb
jmp
sbb
daa
or
rol
xchg
pop
popf
pusha
mov
inc
pushf
das
js
rcl
add
push
shr
or
cmp
xor
add
mov
sub
(bad)
jo
pop
xchg
adc
test
xor
movs
int3
sar
pop
dec
sbb
(bad)
call
aas
xlat
jne
mov
mov
push
je
in
idiv
lock
and
mov
cmc
mov
jo
jmp
cvttps2pi
push
cmp
push
xchg
pushf
pop
(bad)
inc
call
aad
push
adc
pop
fdiv
scas
adc
push
add
mov
pop
and
xor
test
dec
mov
xchg
rol
cld
rcl
adc
retf
pop
add
inc
cmps
adc
cmp
fwait
addr16
mov
shl
cmp
push
mov
sbb
stos
adc
(bad)
mov
jmp
lods
inc
xor
add
xchg
add
aad
mov
xchg
outs
sub
mov
push
push
xchg
lds
pusha
push
xor
jmp
sahf
(bad)
pop
mov
inc
xor
and
out
std
add
inc
inc
daa
mov
jae
loopne
inc
les
pop
cmp
push
push
nop
rol
dec
and
sub
and
push
sar
pop
lods
hlt
cmp
xor
and
cli
or
add
jmp
inc
inc
loopne
jnp
cmp
lock
xor
add
dec
push
imul
fidiv
call
inc
adc
and
sbb
cmp
ins
imul
inc
cli
xchg
out
push
shr
sub
dec
rcl
sub
cmps
test
mov
fild
rcr
outs
je
bound
xor
loopne
jp
push
icebp
dec
in
out
fs
adc
pushf
imul
push
in
pop
add
mov
or
cmp
and
sbb
imul
lahf
xor
xor
bound
xor
clc
clc
push
dec
sub
ret
mov
sbb
xchg
adc
xor
adc
jmp
inc
test
xchg
adc
pop
push
lea
push
scas
jns
add
test
jno
pop
(bad)
pop
adc
cmp
imul
push
clc
adc
icebp
and
cs
xchg
sbb
ret
pop
imul
jecxz
aad
xchg
mov
adc
dec
or
js
call
dec
adc
sbb
mov
call
mov
cmp
adc
mov
xlat
pop
inc
add
cmp
adc
inc
and
xchg
push
sbb
movs
bound
repnz
dec
mov
mov
pusha
cmp
lahf
sbb
cmp
addr16
jnp
xor
dec
push
add
(bad)
pop
push
movzx
push
push
pop
popa
mov
test
test
(bad)
pop
sub
mov
lahf
pop
and
repnz
out
je
je
mov
xchg
add
lock
mov
lods
data16
sub
jbe
jns
sbb
mov
sbb
stos
xor
enter
add
dec
dec
loope
xchg
adc
test
add
femms
ret
add
or
and
mov
add
daa
sub
imul
push
inc
ins
cmp
dec
les
pop
sub
push
sub
adc
nop
adc
mov
retf
aam
mov
js
shr
retf
or
and
dec
cli
rcr
xchg
clc
cli
add
adc
dec
sub
mov
xchg
retf
cmp
sbb
aam
dec
push
(bad)
pop
sub
sub
in
mov
test
in
into
and
xor
pop
adc
loope
add
cmp
je
mov
sub
test
rcl
cmp
adc
sbb
mov
mov
fcomip
lds
jo
pop
dec
inc
mov
pushf
jno
dec
xchg
add
movs
add
int3
mov
hlt
jl
ds
push
sub
lahf
data16
sub
and
inc
cmp
ficom
call
sbb
imul
lock
push
adc
pop
cmp
pop
icebp
aam
push
pusha
and
mov
adc
xchg
xor
lock
xchg
jae
dec
addr16
add
cld
fiadd
jo
dec
sbb
dec
cmps
inc
jmp
jae
and
fidivr
ss
cli
lods
sub
(bad)
repnz
pop
xchg
cmps
push
jbe
inc
push
loop
xor
fsub
adc
clc
jmp
push
mov
sbb
or
sbb
add
dec
xlat
add
test
repnz
jno
sbb
jno
inc
and
pusha
in
outs
call
pop
cmp
cmp
je
dec
sub
lsl
mov
mov
xchg
mov
ins
and
pop
sbb
ins
aaa
adc
and
sbb
push
fst
mov
push
adc
jg
fs
push
sbb
ja
or
aam
mov
xchg
(bad)
jg
popf
and
(bad)
pop
lods
push
and
push
mov
icebp
push
lahf
mov
mov
inc
cmp
cmp
cmps
dec
adc
or
fsubp
push
data16
sub
sub
lahf
aam
jmp
outs
or
movsx
adc
push
mov
or
and
adc
pop
js
popf
fisub
pop
(bad)
mov
or
add
or
pop
js
or
aam
in
xchg
pop
inc
jmp
inc
mov
sbb
in
cmp
sbb
sbb
ja
(bad)
cmp
pop
lea
stc
call
imul
sbb
cli
jecxz
add
aaa
bound
mov
push
and
fadd
adc
inc
inc
dec
and
mov
mov
mov
inc
adc
iret
fcmovnbe
add
addr16
push
push
jo
or
scas
inc
or
dec
cmp
jnp
out
neg
stos
jne
daa
fs
wrmsr
out
inc
pop
mov
outs
cs
and
fadd
popa
xchg
push
sub
sbb
dec
lods
lea
nop
push
(bad)
dec
push
pop
jmp
lea
popf
push
out
add
xor
add
mov
movs
clc
xchg
fild
scas
mov
mov
xlat
sbb
mov
push
xchg
sub
sbb
fsub
or
add
or
popf
add
xchg
dec
jl
stos
pop
rcr
dec
icebp
jne
sbb
add
jne
lahf
mov
pop
mov
lock
jne
ret
outs
lods
shr
push
xor
loop
jg
mov
cli
add
ins
jnp
add
cs
mov
sub
mov
xlat
ror
add
xchg
inc
enter
adc
rol
pop
sub
retf
adc
dec
cmps
adc
les
add
sub
dec
mov
scas
ret
aas
daa
jmp
sub
xchg
daa
jbe
dec
sbb
test
mov
dec
les
out
mov
xor
aaa
mov
push
push
icebp
mov
je
cmp
outs
sbb
cld
lods
mov
push
sub
or
sbb
cwde
das
out
mov
ja
clc
movs
jbe
xor
retf
xlat
ins
and
ror
call
pop
out
and
adc
scas
add
scas
or
mov
inc
cmp
inc
pop
sbb
aaa
jo
adc
cdq
je
and
mov
movs
jmp
inc
cld
ins
add
pop
adc
push
sar
mov
adc
mov
jmp
push
fdivp
add
add
stos
add
xor
or
retf
ja
lods
and
jne
fld
inc
or
mov
enter
push
sub
call
pop
mov
xor
dec
sbb
sub
fs
retf
add
daa
ret
sub
sub
xlat
sti
lea
aas
jmp
cs
push
cmp
test
sbb
es
in
dec
jp
pop
xchg
pop
les
inc
inc
or
mov
or
lods
stos
loope
ret
xchg
aam
js
scas
mov
out
sti
dec
das
test
ret
xchg
jl
lea
add
pushf
out
sub
jmp
push
je
push
pushf
mov
ja
pop
dec
call
add
xor
push
mov
mov
pop
lods
pop
or
or
mov
push
jl
mov
pop
push
or
mov
mov
cwde
ror
mov
neg
xchg
sar
or
xor
js
pop
aam
add
je
in
das
adc
push
sub
movs
addr16
int3
ret
ins
add
xor
les
or
mov
inc
push
ds
hlt
nop
pop
xchg
add
sub
cmps
pusha
js
sbb
out
inc
fsub
adc
fmul
jo
push
shr
imul
xchg
xchg
in
cmp
push
xchg
mov
fs
or
sar
dec
mov
int3
push
aam
sbb
inc
repz
sbb
adc
jp
inc
mov
xor
pusha
add
jmp
jbe
cmp
fisubr
push
div
pop
fldcw
cwde
lock
push
add
cmp
inc
cmc
ror
les
imul
scas
aaa
call
cmp
sbb
nop
jb
add
and
in
mov
das
add
lea
or
adc
out
ins
ficom
mov
pop
cmps
push
xor
adc
xor
mov
ja
sahf
push
test
mov
adc
and
dec
test
es
pop
inc
stc
aam
xor
mov
or
inc
mov
push
ret
dec
retf
cld
clc
fcom
cmps
inc
sbb
adc
xrelease
cmps
push
mov
push
call
mov
dec
les
cmp
je
test
inc
fwait
shl
lds
mov
xchg
and
das
cld
cmps
sbb
int
in
jnp
inc
dec
sbb
cwde
adc
xchg
inc
xchg
push
sar
loopne
lods
(bad)
push
in
loopne
dec
in
clc
sbb
jge
push
xchg
pop
inc
test
repnz
or
inc
push
jae
jb
dec
push
je
add
add
pop
rol
jb
jnp
xchg
inc
push
mov
loop
dec
dec
push
add
pusha
xor
in
dec
dec
mov
mov
xor
jns
je
sbb
or
adc
pop
or
inc
sbb
mov
pop
je
push
pop
mov
add
or
adc
inc
add
and
or
cmps
dec
or
jno
(bad)
mov
pop
jle
pop
mov
ins
mov
adc
or
pop
adc
mov
bnd
adc
aam
outs
push
popa
xchg
aam
addr16
jns
shr
add
fsub
or
push
clc
sbb
or
das
sbb
invd
mov
mov
imul
stc
adc
sbb
shl
dec
loope
loopne
push
and
push
jmp
adc
push
sbb
(bad)
mov
inc
or
daa
pusha
data16
nop
fisttp
mov
ins
and
bound
cmps
outs
or
and
adc
call
mov
or
adc
and
adc
mov
retf
out
or
nop
mov
xlat
mov
mov
push
or
or
adc
adc
and
dec
mov
loope
invd
cmps
sbb
popa
jb
xchg
and
lahf
xor
call
je
jns
imul
adc
xchg
gs
sub
cmp
je
sbb
push
pusha
xor
pusha
das
push
mov
push
mov
pop
sti
outs
test
je
dec
(bad)
add
jmp
cmp
je
mov
rcr
sbb
inc
jne
mov
push
and
je
adc
fwait
dec
and
sbb
nop/reserved
add
ret
cmp
inc
rcl
or
stos
jle
inc
call
adc
push
sbb
test
or
punpckhbw
push
adc
pop
push
mov
out
pusha
jbe
adc
xchg
test
int
sahf
inc
mov
inc
and
jp
bound
mov
push
xor
idiv
xor
add
pop
scas
movs
mov
add
or
test
movs
test
inc
clc
movs
cmc
mov
ror
or
add
add
dec
and
rcr
call
cmp
retf
push
inc
push
push
ja
test
push
hlt
xchg
movs
mov
test
(bad)
scas
xchg
mov
jl
frstor
fldcw
nop
jg
(bad)
mov
push
adc
sbb
aaa
pop
xor
and
rol
xchg
and
cmp
ret
inc
rol
mov
daa
sub
mov
movs
icebp
inc
out
adc
inc
pusha
adc
scas
sub
and
sbb
and
xor
(bad)
daa
push
sbb
cmc
repnz
mov
add
loopne
les
push
push
inc
or
dec
pop
and
push
cmps
inc
dec
fxch
and
jl
cmp
or
xor
jge
adc
and
adc
inc
cmp
pop
push
mov
xchg
call
fs
cs
jne
dec
test
dec
out
sub
cld
mov
retf
xor
test
add
punpcklwd
nop
ret
(bad)
call
xchg
push
and
pop
fwait
je
shl
xor
sub
inc
ss
and
fisttp
inc
sub
loope
push
push
lock
xchg
or
icebp
adc
jmp
(bad)
(bad)
push
push
lods
xor
mov
sbb
out
je
jnp
popa
retf
push
mov
xor
mov
and
and
sub
adc
xor
adc
and
sar
sar
ins
popf
jmp
sbb
pusha
out
addr16
pop
adc
or
mov
and
shr
jo
vmovlps
ins
push
mov
into
push
js
xor
pop
and
fild
ror
cmp
call
sbb
bound
gs
aaa
sub
lahf
jo
loope
aad
adc
sub
cmp
xlat
or
add
xor
add
mov
inc
hlt
shl
mov
lock
mov
or
jl
hlt
mov
push
cmp
mov
arpl
inc
push
jb
push
cmp
add
jmp
push
and
push
ins
jg
(bad)
pop
les
and
iret
sbb
cmc
xchg
xchg
jl
and
push
jbe
retf
push
push
int
std
mov
and
rcr
out
xchg
mov
and
nop
jmp
cmp
adc
out
ret
outs
cwde
jg
dec
es
ins
dec
pop
sbb
imul
mov
mov
rol
sbb
rcl
ss
mov
loope
jmp
push
movs
shl
jb
aas
cdq
lods
mov
cmp
fdiv
push
xor
adc
xor
pop
and
inc
mov
add
in
push
cmp
pop
or
push
add
fld
aaa
inc
cmp
call
mov
adc
sub
xchg
jne
movs
inc
adc
sub
push
in
push
xchg
mov
mov
xlat
inc
inc
pop
loop
adc
int3
jnp
inc
or
ins
push
fwait
adc
ins
cs
cdq
xchg
mov
cld
cmp
scas
inc
and
inc
dec
push
and
mov
adc
movs
mov
pop
adc
shl
xor
fild
mov
or
pop
gs
mov
mov
cmp
aad
and
icebp
movs
xor
outs
xchg
push
test
dec
pop
in
outs
add
jmp
je
jne
hlt
cmp
jns
jne
jl
sub
out
mov
cmp
pop
push
in
lock
and
push
cli
sbb
pusha
mov
int3
fbstp
int3
push
cmovnp
(bad)
jg
jno
shl
mov
int
push
and
xchg
xchg
call
imul
add
stc
inc
mov
pop
and
hlt
jmp
bswap
jl
js
pop
add
enter
pushf
aam
mov
xor
iret
push
jne
lock
daa
push
pop
jbe
add
imul
inc
mov
or
inc
lods
jns
mov
inc
add
inc
inc
retf
sbb
push
popa
dec
jne
stos
inc
je
aaa
jmp
popf
daa
or
gs
dec
and
ins
pushf
or
mov
lods
adc
sub
pop
and
xor
mov
add
and
imul
or
dec
es
cmp
adc
jl
pop
sub
xor
(bad)
push
push
cmp
je
mov
add
sbb
cmp
retf
pop
movs
mov
adc
call
or
loop
and
sbb
ins
mov
ds
mov
push
sbb
jmp
xchg
bound
xor
(bad)
cs
xor
arpl
(bad)
daa
mov
inc
aaa
add
aaa
sbb
xchg
shr
dec
dec
stc
shl
mov
addr16
mov
mov
call
fcmovnb
mov
icebp
add
lea
test
sbb
mov
into
xchg
int3
rcl
mov
add
xor
cmp
mov
ins
dec
movs
stos
dec
hlt
mov
hlt
mov
pop
clc
stos
inc
loope
ds
dec
or
or
outs
xchg
inc
mov
rcr
xchg
pop
inc
mov
adc
movs
fidivr
xchg
adc
sbb
xchg
movs
jo
and
ss
cmp
dec
iret
int
dec
add
xchg
inc
xchg
inc
ror
ja
nop
sbb
shr
jmp
mov
jae
inc
cmp
aas
in
add
sbb
ss
in
xchg
inc
inc
cmps
call
iret
data16
mov
xor
push
pop
shl
adc
dec
dec
ins
adc
push
in
cmp
inc
xchg
retf
in
mov
mov
fimul
or
xor
data16
fcom
jo
adc
xor
push
mov
shl
adc
movs
add
pusha
inc
imul
(bad)
adc
je
inc
aas
jb
pop
ficom
hlt
sub
ret
mov
dec
js
sub
in
jae
add
inc
sub
sbb
add
(bad)
(bad)
cmp
popf
xchg
xchg
push
shl
fadd
inc
loopne
mov
in
xlat
xchg
pop
scas
mov
enter
fsubr
and
mov
rol
add
push
call
dec
ja
leave
pop
lea
jb
xchg
inc
test
jns
daa
cmp
imul
fistp
add
out
jo
ret
push
xchg
dec
jne
or
int3
xchg
xchg
fcom
test
cmp
daa
mov
or
xchg
stos
push
pop
sbb
dec
or
in
je
inc
xor
pop
xchg
scas
or
or
in
and
pusha
clc
cmp
ins
mov
setne
fcomip
xlat
adc
cli
aam
mov
int
fiadd
sbb
clc
xchg
sbb
and
cmc
push
inc
adc
mov
xchg
test
xchg
mov
pop
cmp
dec
jl
dec
data16
inc
popf
add
fcom
add
nop
mov
push
adc
mov
ja
daa
shl
pinsrw
mov
and
xor
js
adc
mov
aaa
xrelease
cld
push
cs
push
les
sub
add
push
jecxz
jae
mov
jl
lods
dec
lods
popf
call
fs
jne
mov
push
adc
jo
jecxz
or
add
js
pop
cmps
push
cwde
inc
pop
out
xchg
lock
cli
jle
dec
dec
je
inc
dec
add
call
add
fs
add
or
call
push
rcr
push
add
sub
loopne
inc
push
lahf
inc
or
inc
movs
mov
cs
add
(bad)
out
sahf
out
popf
pop
and
dec
push
xor
ficom
add
dec
adc
shl
push
out
gs
and
add
out
mov
sar
xchg
sub
dec
or
jnp
inc
jle
dec
and
cs
pusha
add
pop
add
xchg
push
scas
fwait
mov
push
mov
and
adc
add
pop
movs
inc
push
repz
mov
cmp
inc
es
adc
lods
rol
xchg
pusha
dec
ret
adc
or
mov
mov
test
nop
xor
enter
lock
sbb
xlat
out
nop
fadd
sub
xchg
xlat
jo
push
popf
test
in
adc
imul
fdivr
and
clc
movs
inc
jbe
shr
push
add
stc
mov
add
out
mov
loopne
push
or
loope
inc
bound
in
pop
add
push
mov
lea
repz
cs
add
adc
sub
repz
cmp
fs
mov
mov
int3
rcl
repz
repz
loopne
call
in
lock
or
xor
xchg
repnz
xchg
lock
sub
or
adc
sahf
and
pop
loopne
scas
add
or
test
xor
adc
sbb
mov
test
inc
ins
stc
push
ins
sahf
xor
and
(bad)
adc
dec
jle
cld
pop
mov
pop
mov
mov
and
outs
push
pop
or
in
out
lea
pop
and
imul
dec
cmps
pop
sbb
mov
sar
mov
in
xchg
(bad)
(bad)
movs
cmp
popa
jnp
mov
sbb
xor
sub
and
stc
mov
movs
adc
or
mov
lock
sub
aas
push
adc
and
sbb
adc
add
xor
ds
inc
inc
sub
jae
mov
mov
sub
sbb
dec
(bad)
ja
mov
lods
mov
pop
add
dec
inc
mov
pop
cdq
nop
mov
mov
cmps
sbb
pop
into
or
add
call
xor
lea
sub
pop
aad
loope
(bad)
shl
xlat
leave
add
push
xchg
jmp
nop
dec
and
xchg
aaa
enter
lock
mov
sub
test
cmp
jmp
push
rol
pop
sbb
nop
cdq
arpl
inc
dec
pop
mov
and
sbb
fsub
xchg
sub
ret
(bad)
nop
mov
inc
out
jo
mov
push
data16
scas
mov
push
pop
and
xlat
call
movs
and
xchg
inc
in
and
push
in
push
sub
es
mov
xchg
data16
xor
dec
loop
jbe
sbb
sbb
adc
adc
test
test
sbb
add
pop
and
pushf
inc
mov
or
adc
push
in
scas
pop
inc
lods
mov
fild
nop
mov
mov
mov
inc
inc
xchg
cmp
dec
call
fwait
aas
inc
cmp
fidivr
add
es
je
fcom
in
cmp
inc
je
mov
cdq
and
aas
hlt
adc
call
sub
imul
sbb
adc
push
xchg
dec
inc
mov
mov
jmp
add
xchg
mov
and
cmp
push
(bad)
and
lock
sub
aaa
xchg
stos
add
xchg
dec
sbb
add
lods
jno
add
fcomp
inc
pop
das
mov
add
mov
in
adc
jp
adc
jo
enter
lods
(bad)
ss
test
cmp
lods
div
scas
jne
inc
add
nop
adc
imul
mov
or
cmp
mov
cmp
cdq
(bad)
push
push
push
aaa
imul
adc
push
sbb
push
xor
inc
dec
outs
mov
in
aad
dec
hlt
rcr
inc
sbb
aas
adc
cwde
hlt
xor
fiadd
sbb
or
dec
or
xor
out
or
cmp
pop
jo
mov
sub
leave
add
aas
adc
adc
push
cmps
fiadd
or
xor
std
shl
inc
clc
movs
inc
retf
or
mov
pop
mov
adc
or
mul
loopne
lds
ret
rcl
or
and
mov
adc
push
xchg
push
shr
push
arpl
sbb
pop
xchg
adc
mov
and
adc
sub
cmps
mov
mov
add
inc
lds
mov
dec
push
or
gs
push
mov
mov
xor
leave
pusha
lock
js
mov
sbb
daa
icebp
dec
pusha
sbb
cmps
sbb
lea
pop
rol
jl
mov
push
pusha
outs
pop
inc
jne
sbb
sbb
mov
movs
mov
push
rcr
xor
ret
lock
mov
and
les
jge
test
xchg
push
or
mov
or
or
aam
sti
add
(bad)
xor
adc
jno
mov
xchg
dec
pop
dec
in
cmps
add
inc
push
push
jo
cmp
xor
push
dec
sub
mov
imul
lods
dec
mov
sbb
cmc
jge
push
pop
or
nop
xchg
jb
dec
dec
pop
out
nop
add
mov
pop
push
sbb
or
or
push
movs
rcl
fadd
jo
xchg
sub
enter
movs
shl
nop
rcr
adc
lods
enter
outs
xchg
add
push
xor
repnz
bound
lods
sbb
ret
rcr
lods
cli
int3
nop
xchg
mov
add
les
jae
jb
or
cmp
add
push
or
pop
xor
(bad)
add
sub
popa
push
add
fcomp
or
or
out
sub
popa
ins
je
xchg
dec
cs
adc
add
shr
leave
(bad)
fmul
or
das
call
popf
push
push
cmps
in
fcom
ins
mov
push
xor
xchg
fdiv
ror
out
fiadd
pop
ror
(bad)
adc
pop
and
mov
or
scas
loopne
xor
lods
inc
nop
jl
adc
inc
ins
fistp
cwde
xor
fwait
dec
es
push
push
dec
mov
loopne
gs
xlat
pusha
ror
push
or
xchg
jl
add
into
inc
scas
add
xor
ds
xchg
inc
dec
enter
mov
fild
push
jg
pop
repnz
xchg
mov
clc
add
xchg
push
adc
js
dec
call
js
ins
xor
frstor
fadd
or
inc
push
mov
sahf
shl
lock
jnp
sub
sub
loop
pusha
(bad)
leave
dec
sub
enter
(bad)
mov
adc
dec
and
sub
add
push
cmp
inc
fs
mov
sbb
cmp
sub
das
cmps
outs
push
add
mov
cs
pop
mov
add
or
add
ret
das
fdiv
loopne
call
push
mov
add
dec
in
aaa
add
inc
out
cmc
inc
mov
cmc
inc
mov
cmp
xchg
psubw
test
cld
hlt
inc
pop
out
jns
jnp
ror
jl
dec
cwde
js
mov
mov
sub
ds
data16
mov
pushf
outs
push
pop
or
adc
sub
mov
pop
push
into
sbb
add
mov
mov
in
inc
jno
bound
mov
cmp
jle
clc
cmp
add
cmp
ins
popa
xchg
dec
mov
adc
lods
rol
ss
and
lock
fdiv
mov
test
aam
or
loopne
fs
pop
or
and
mov
mov
cs
out
and
in
or
xchg
ss
pop
mov
or
fcom
xor
add
xchg
push
pextrw
cvtdq2ps
in
xor
push
imul
push
nop
push
ja
xchg
jbe
push
js
or
push
sahf
arpl
cmc
add
or
pop
or
mov
pop
rcr
cli
in
fimul
aam
add
push
movs
xchg
movs
adc
pop
repnz
popa
dec
xchg
push
pop
push
and
(bad)
jno
add
icebp
inc
out
out
dec
jae
test
adc
dec
(bad)
scas
imul
pop
xor
xchg
retf
push
xor
jne
cmp
add
or
inc
or
jmp
or
jb
out
lea
add
dec
cs
in
outs
adc
add
js
jl
outs
jbe
mov
lock
cmp
daa
in
mov
mov
mov
inc
sahf
add
fadd
fst
mov
ja
fisubr
dec
push
lods
cs
xchg
(bad)
cmps
xchg
fadd
and
xchg
mov
or
ins
fld
in
out
push
cmp
sub
add
cmp
jnp
je
add
cmp
sbb
dec
or
xor
inc
mov
nop
cmp
inc
mov
es
inc
push
je
shr
(bad)
pop
out
pop
and
mov
es
mov
in
cmp
add
add
das
jo
add
xor
(bad)
push
ret
add
call
stos
lods
cmp
pop
jg
xor
fwait
add
or
(bad)
call
out
setle
add
or
push
pop
sahf
pop
mov
mov
nop
or
pop
pop
fsub
gs
and
or
xor
and
pop
inc
outs
add
or
dec
gs
add
mov
ins
inc
out
pop
mov
push
int3
push
push
xor
ret
mov
and
ret
sub
ja
push
push
mov
fwait
push
pop
xor
mov
sbb
jecxz
(bad)
test
sbb
iret
push
sbb
mov
pop
push
out
adc
cmovs
mov
ja
mov
mov
sbb
mov
xchg
pusha
je
shl
(bad)
sub
outs
arpl
push
enter
mov
inc
cmp
iret
push
iret
mov
stos
mov
cmps
cmp
xor
mov
pop
mov
pop
call
lock
mov
mov
call
jmp
popf
jne
int3
fnstenv
xchg
jmp
leave
or
adc
dec
xchg
movs
fld
adc
or
add
or
dec
xchg
scas
push
cmps
add
and
pushf
xchg
test
add
add
mov
sbb
imul
das
add
push
add
cmp
and
add
pop
xchg
test
(bad)
jl
pop
push
pusha
or
mov
mov
out
cmp
js
lods
pusha
xor
pop
xor
sbb
rcl
cmp
sub
or
mov
mov
inc
lods
pop
sbb
mov
xchg
movlhps
retf
push
jo
mov
lea
gs
jp
sbb
mov
pop
push
aaa
sbb
mov
lods
rcl
mov
pop
push
loopne
hlt
cmp
nop
(bad)
stos
rol
clc
push
inc
hlt
not
das
push
cld
inc
dec
push
and
sti
inc
add
inc
mov
imul
sbb
sbb
call
xchg
pop
xchg
add
add
nop
inc
test
sbb
sub
or
adc
test
inc
sub
sub
das
push
add
add
add
add
inc
mov
add
pop
add
or
lea
xor
mov
sub
push
mov
mov
mov
mov
mov
fidivr
sub
ins
add
test
jmp
(bad)
jmp
jmp
jmp
xchg
jmp
jg
jmp
jmp
jmp
dec
fdivrp
(bad)
fdivr
(bad)
push
(bad)
(bad)
fcos
fcom
call
call
call
call
call
mov
inc
push
out
iret
mov
mov
into
repz
dec
mov
idiv
inc
push
and
and
cmp
push
pop
mov
adc
repz
dec
clc
jl
pushf
mov
mov
pushw
cmp
mov
ins
shr
xchg
push
test
or
pop
(bad)
jns
sub
sbb
xchg
lods
sub
iret
jnp
jle
cmp
or
out
ins
out
jne
bswap
add
and
imul
push
and
cwde
lahf
idiv
jbe
adc
int3
push
adc
xor
test
fdiv
int
imul
mov
push
mov
clc
xor
mov
add
push
or
or
js
xor
cs
push
aam
rol
sti
sbb
mov
sbb
push
sbb
hlt
js
lock
adc
adc
push
push
rol
(bad)
and
adc
add
call
scas
adc
dec
pop
add
jmp
adc
dec
(bad)
in
add
sbb
jbe
movs
add
push
fistp
mov
pop
mov
jb
add
pop
rcl
xchg
pop
add
mov
dec
daa
and
les
shl
adc
inc
and
or
test
add
cwde
dec
dec
call
sbb
sbb
xchg
mov
xchg
lds
and
add
add
inc
and
inc
xchg
and
xor
and
mov
ret
stos
dec
mov
cmp
in
jne
fadd
mov
sbb
(bad)
dec
push
mov
jns
sbb
dec
mov
mov
movs
push
(bad)
pop
rol
mov
push
pusha
lea
xchg
fadd
movs
xchg
sbb
inc
cmp
shl
push
inc
pop
sbb
test
cmp
adc
xchg
inc
pushf
js
and
and
pop
test
or
mov
dec
mov
or
mov
add
leave
out
push
pusha
(bad)
int3
pop
sahf
cmp
leave
xchg
test
adc
inc
xor
inc
pop
mov
inc
add
or
xor
inc
je
or
dec
jnp
mov
push
enter
cdq
adc
lea
sub
push
aad
test
add
or
pop
mov
add
add
jne
add
jmp
nop
jbe
jo
jp
adc
sbb
sub
push
inc
hlt
js
test
add
aaa
mov
call
or
or
loope
dec
adc
mov
mov
(bad)
jmp
push
or
and
mov
mov
mov
add
lock
clc
inc
mov
xor
cmp
mov
add
in
inc
inc
inc
inc
inc
inc
fdivr
inc
mov
test
mov
test
mov
mov
mov
mov
mov
mov
cmp
sub
shl
push
and
repz
mov
clc
sbb
ds
imul
push
int
imul
out
push
cld
int3
jbe
ja
fwait
int
jns
in
pusha
push
mov
dec
xchg
push
call
jns
jge
je
test
in
jns
data16
sbb
xor
jns
out
pop
mov
and
outs
jnp
out
push
pusha
loopne
jl
mov
imul
or
push
jo
js
es
pop
neg
jge
jg
push
loopne
hlt
pop
push
test
jno
jb
inc
xchg
aam
cmp
add
xor
xor
sahf
push
adc
mov
and
sti
out
sar
and
fisub
mov
jne
inc
dec
in
add
(bad)
jne
jge
mov
nop
js
test
ins
sub
imul
or
mov
mov
add
outs
cld
pop
add
lock
daa
mov
mov
int
int
dec
and
push
enter
inc
and
inc
mov
ret
movs
shl
ss
mov
pop
loopne
push
mov
cmps
adc
jg
into
xlat
dec
iret
jl
int
sbb
ss
pusha
jo
and
cmp
dec
fwait
sbb
popf
int
popf
mov
rol
pop
add
xchg
pop
add
cmp
mov
rcr
dec
iret
and
icebp
mov
idiv
mov
aas
sub
adc
sub
jl
and
dec
fiadd
fsubr
push
sub
popf
cmp
cmp
sub
or
enter
adc
or
sub
dec
adc
mov
pushf
mov
fdiv
inc
sar
iret
sub
iret
int
sar
fucomp
test
iret
push
sub
rcr
or
mov
push
xchg
mov
rcl
jl
push
xchg
and
shr
lods
push
call
pusha
mov
fldcw
rcr
shr
mov
jge
mov
push
lds
mov
icebp
es
in
mov
stos
mov
mov
test
stos
mov
xchg
aas
xor
lahf
les
push
and
add
hlt
adc
ret
mov
add
mov
xor
add
inc
xor
add
pop
test
fwait
imul
dec
xor
jbe
jmp
xchg
lods
push
test
mov
push
shrd
lods
lea
xchg
sub
add
push
lods
loope
inc
mov
lds
mov
push
test
mov
adc
mov
aam
sbb
lods
pop
mov
pop
xor
add
mov
je
stos
add
jne
adc
mov
xchg
ret
leave
(bad)
sub
jmp
lock
adc
jne
cmp
jge
test
adc
lea
jo
push
(bad)
inc
movs
dec
fisub
out
add
nop
push
out
inc
xchg
jb
daa
and
pop
and
int
sbb
dec
inc
gs
ins
or
inc
pop
nop
pop
dec
fwait
adc
daa
push
dec
leave
and
bound
push
inc
push
inc
in
lock
jo
daa
or
inc
ror
cmp
push
ror
xchg
daa
dec
push
jo
imul
pop
test
ficomp
push
mov
inc
cmp
lea
das
retf
lods
mov
test
mov
xor
out
jmp
outs
daa
push
push
mov
mov
neg
add
stos
pop
push
ja
movs
aad
and
inc
or
xchg
mov
mov
dec
shl
lea
je
mov
lea
bound
push
xchg
mov
outs
xchg
adc
add
inc
mov
cmovo
dec
xor
test
add
mov
cmp
daa
cmp
add
and
into
pop
adc
push
mov
daa
add
pop
dec
jo
outs
out
push
mov
or
sbb
les
movs
dec
clc
(bad)
sub
pop
or
jl
or
cld
xlat
inc
rcl
push
loopne
push
inc
sub
lahf
xlat
adc
push
and
retf
inc
pop
shr
xor
jne
(bad)
cwde
inc
sub
cmps
imul
ror
or
jno
leave
pop
popa
repnz
cmps
mov
lock
push
adc
mov
lock
(bad)
jbe
dec
pop
add
(bad)
and
mov
pusha
sub
pop
dec
pop
aas
add
fcom
pop
dec
add
inc
retf
push
cmp
push
sbb
push
inc
or
clc
add
mov
xor
or
sub
jo
xor
pop
jne
dec
dec
jne
pop
loopne
or
cmp
cmp
(bad)
adc
or
xchg
sbb
or
adc
mov
add
in
sbb
mov
sti
xchg
dec
shl
adc
xor
shl
sbb
sub
xor
shr
sub
xor
add
dec
xor
scas
adc
movs
push
push
fisub
or
in
and
and
cmp
adc
xchg
movs
shl
pusha
dec
lods
xchg
mov
addr16
popf
push
pop
mov
dec
das
fisubr
ret
sub
add
je
or
js
sub
shl
push
iret
je
arpl
retf
mov
push
dec
je
and
inc
movsx
loope
loop
or
repnz
mov
clc
or
fld
and
les
mov
outs
hlt
adc
cwde
jmp
mov
mov
xor
inc
xchg
fwait
(bad)
jge
jne
mov
adc
and
push
sbb
rcl
rol
adc
inc
add
pushf
add
xchg
mov
xchg
retf
pop
cmp
pop
mov
ss
ja
push
mov
push
repz
and
bswap
inc
or
xor
inc
mov
inc
stc
mov
sbb
cmp
push
pop
mov
cdq
inc
les
push
add
push
enter
loopne
adc
movs
nop
neg
fadd
fs
nop
dec
frstor
lahf
dec
dec
popa
push
(bad)
sub
inc
fisttp
adc
jmp
popf
imul
jle
and
dec
popf
add
hlt
sbb
jbe
and
pop
adc
xchg
push
hlt
mov
jmp
dec
adc
dec
sub
cmova
or
mov
call
dec
inc
enter
add
sbb
adc
inc
jge
mov
cmp
push
pusha
mov
fsubr
je
lea
dec
sar
adc
push
fs
(bad)
dec
dec
test
jb
(bad)
and
ret
inc
sbb
and
enter
mov
nop
shl
stos
es
or
(bad)
adc
push
stos
or
es
pop
xchg
sub
int
icebp
mov
adc
dec
or
adc
lock
pop
or
shl
es
jmp
sbb
inc
dec
fld
cmovae
push
out
push
add
daa
ficomp
out
inc
sbb
xchg
and
inc
dec
jecxz
and
mov
adc
cmp
jmp
(bad)
mov
or
enter
push
xchg
mov
shl
retf
retf
mov
cdq
movs
dec
inc
or
pop
nop
lea
dec
(bad)
mov
pop
mov
push
adc
(bad)
icebp
dec
jns
call
mov
push
retf
sbb
and
sub
and
pop
mov
je
sbb
jne
ja
add
scas
in
movs
test
cmp
sbb
inc
inc
pop
fst
movs
outs
inc
inc
add
push
retf
push
and
xchg
adc
dec
or
and
pushf
lods
dec
fild
enter
or
fidiv
sub
xor
add
or
add
mov
inc
sbb
adc
les
xchg
add
cmps
xor
dec
or
popa
and
nop
mov
je
fiadd
mov
xchg
add
sub
ret
pusha
frstor
in
inc
shl
pop
rcl
call
jle
sbb
cmp
cmp
pop
cli
and
sbb
sbb
xlat
jae
mov
add
shr
mov
shl
and
lock
jno
add
mov
cmp
or
je
aaa
bound
cmp
dec
fcmovbe
add
dec
add
ins
push
(bad)
xor
inc
ins
idiv
cmp
fcomp
inc
mov
fdivr
add
and
xchg
push
jge
je
and
dec
inc
and
imul
cmp
and
sbb
cwde
mov
call
ss
jg
aad
icebp
xor
shl
jl
inc
(bad)
and
sub
jne
and
adc
ret
mov
mov
pop
js
push
mov
jle
sbb
pop
dec
or
and
(bad)
xor
or
xor
dec
pop
mov
dec
clc
jo
add
push
movs
push
push
xchg
dec
iret
and
in
std
je
push
push
mov
jns
addr16
jo
jo
hlt
sub
mov
cdq
les
cmc
push
test
repnz
jne
mov
xor
shl
shr
(bad)
sub
dec
mov
jmp
loopne
xchg
hlt
call
rcl
jecxz
cmp
sub
or
pop
adc
cdq
adc
or
test
mov
pop
jne
pop
or
mov
dec
movs
sbb
dec
jg
sub
pop
dec
xor
std
and
jbe
mov
dec
sbb
out
fist
xchg
cmc
fsub
movs
add
in
std
xor
push
pop
ds
fimul
and
rol
adc
jecxz
cmp
cli
jmp
ins
mov
(bad)
sti
add
repz
or
jecxz
and
mov
sbb
sub
in
inc
pushf
jge
mov
in
daa
inc
add
ins
mov
test
or
mov
adc
fcomp
jmp
mov
movs
jnp
xchg
mov
arpl
xlat
mov
xor
call
mov
btr
xchg
push
sbb
add
cmp
shr
test
cdq
iret
sbb
add
mov
cmps
xor
sub
lahf
sbb
add
rol
xchg
push
(bad)
inc
pop
(bad)
lods
clc
xchg
mov
imul
int
jnp
repz
push
cs
sbb
sar
mov
mov
xchg
fimul
inc
(bad)
pusha
jmp
push
and
push
adc
test
(bad)
adc
sub
jne
sahf
nop
dec
ret
xor
push
jmp
(bad)
ds
fidivr
and
in
adc
xlat
xor
xchg
bound
leave
call
neg
adc
and
jmp
out
nop
or
jmp
movs
adc
stos
rcr
scas
js
and
mov
daa
pop
fcom
retf
mov
sub
sahf
xchg
pop
jnp
pop
cmp
(bad)
dec
les
sbb
add
repnz
add
xlat
aad
mov
and
xor
(bad)
stc
mov
xor
fs
mov
and
out
mov
xor
sbb
push
mov
add
xchg
adc
and
test
imul
ret
pop
aas
das
inc
xor
mov
push
sub
sahf
and
hlt
inc
sbb
mov
fild
dec
es
inc
pop
xchg
sub
cwde
fdivrp
fstp
fwait
jmp
inc
jb
and
push
fld
add
mov
and
jns
sub
imul
jnp
and
ins
pop
xor
push
rol
push
cmp
pusha
push
adc
fcomip
xchg
xor
jmp
pop
push
cmp
out
fcomp
popf
jmp
sub
mov
push
inc
or
(bad)
inc
push
mov
mov
adc
and
push
mov
jns
jns
sbb
or
sub
mov
ror
mov
mov
(bad)
clc
stos
sub
ficomp
and
daa
scas
iret
and
scas
in
sbb
dec
fldz
xchg
jecxz
xchg
fbld
mov
add
lock
jo
sbb
inc
sub
int
retf
mov
pop
loope
out
imul
mov
(bad)
retf
sbb
and
call
cs
cmps
and
lea
repz
in
fidivr
jo
push
push
sub
add
fdivr
inc
dec
pop
jno
push
leave
(bad)
xor
pop
sbb
mov
dec
cli
xor
push
ret
sub
sbb
arpl
fild
pop
and
adc
xchg
cs
jmp
mov
cmp
sbb
inc
bound
mov
inc
adc
sbb
out
fs
mov
mov
aaa
cmp
fild
daa
add
cmps
inc
(bad)
add
mov
or
das
inc
mov
inc
add
push
(bad)
outs
mov
mov
leave
sbb
push
inc
adc
inc
adc
loopne
push
push
and
pop
movs
lods
adc
out
push
out
or
jmp
and
adc
fisub
pop
add
lods
scas
stc
push
xchg
or
hlt
or
cmps
adc
in
clc
jne
mov
jne
arpl
pop
dec
mov
je
(bad)
mov
xchg
lea
mov
inc
jno
sub
adc
int3
add
push
cmp
push
iret
jmp
test
jmp
mov
fsubr
inc
or
and
ins
js
pop
sbb
loope
mov
xor
add
sub
or
xchg
pop
jecxz
sub
inc
push
adc
mov
dec
or
xchg
ret
mov
inc
popa
std
jbe
and
mov
mov
dec
inc
sbb
ror
cli
xchg
lods
je
mov
aad
mov
or
aam
cmp
call
mov
mov
in
inc
sbb
mov
add
retf
inc
je
dec
sahf
push
call
outs
daa
adc
mov
stc
(bad)
or
pusha
int
fld
mov
dec
mov
push
aam
jg
mov
lods
das
jae
add
and
mov
pushf
cmp
mov
retf
sbb
enter
xor
jno
push
push
dec
mov
js
add
call
inc
shl
add
arpl
or
or
ret
push
data16
push
or
(bad)
xchg
mov
or
imul
rcl
ds
dec
adc
xchg
out
in
jge
mov
aas
jnp
and
fbstp
add
or
ficomp
pusha
dec
inc
xchg
lods
nop
and
fchs
lahf
dec
xchg
xchg
add
xchg
dec
ja
sub
inc
loopne
push
mov
add
jns
or
imul
inc
jo
xor
push
adc
sub
mov
ja
jmp
jmp
sub
pusha
add
add
dec
push
adc
out
fmulp
pop
lea
aad
add
movs
mov
je
leave
jge
clc
adc
lock
pop
add
clts
push
dec
or
daa
jmp
inc
sbb
sbb
push
push
mov
pop
movs
pusha
xchg
cmp
mov
fs
or
loope
sbb
mov
pop
dec
fldcw
outs
adc
loopne
stos
push
fs
or
movs
pop
and
mov
mov
jmp
lock
and
push
adc
call
sub
enter
pop
add
jecxz
adc
pop
jmp
cmp
je
mov
out
ins
push
or
adc
adc
or
push
or
pop
xchg
retf
pop
je
movs
sti
adc
cmp
cmp
xchg
pop
je
cmp
or
fs
cmps
test
nop
nop
inc
call
xchg
repz
or
sbb
icebp
dec
jbe
mov
pushf
sub
je
(bad)
frstor
pop
jnp
jl
push
cmp
dec
aam
mov
pop
jmp
inc
shr
sub
xlat
test
rol
xchg
cwde
lods
add
mov
and
enter
sub
sbb
inc
mov
sub
mov
sbb
sub
sti
dec
dec
retf
push
mov
mov
call
sbb
jne
ins
add
sbb
pushf
fcmovnu
pop
cmp
adc
mov
aas
(bad)
ss
arpl
and
lea
ins
or
(bad)
sub
in
lods
popf
sbb
xchg
pushf
inc
mov
xor
dec
pusha
popf
pop
pop
and
adc
mov
dec
pusha
(bad)
pusha
or
xor
jo
rcr
jae
add
push
xlat
fisttp
div
inc
popa
add
inc
add
nop
lock
fild
cmp
shl
cwde
jp
cdq
sbb
inc
jo
xchg
cmps
retf
or
pop
bound
cwde
bound
js
xchg
add
xor
pop
add
add
and
inc
add
adc
mov
add
or
or
dec
push
verw
xchg
push
out
add
xchg
push
lock
mov
add
popa
mov
shl
or
sbb
sbb
xchg
sub
cmp
add
clc
xchg
jo
mov
jo
sbb
lods
out
std
faddp
les
pop
add
pop
aam
dec
jle
jmp
and
jo
repz
stos
add
dec
and
iret
add
adc
sbb
or
bound
inc
dec
fild
enter
push
das
mov
cwde
xor
cmp
xor
mov
imul
aas
adc
push
in
fld
inc
ins
push
sbb
pushf
mov
push
sub
add
imul
sbb
xchg
xchg
add
pop
push
jb
dec
gs
fcom
fild
sbb
push
push
in
dec
sbb
pusha
je
adc
push
push
std
dec
mov
lock
xor
push
adc
cmp
and
(bad)
cmp
mov
ins
and
xchg
stos
sub
sub
popa
xor
jbe
out
pop
popa
and
mov
mov
pop
adc
adc
mov
cmp
jne
adc
inc
jne
sub
dec
jne
mov
push
and
mov
xchg
jg
or
inc
outs
in
add
sbb
pop
scas
inc
lea
add
or
and
or
pop
jbe
xor
dec
enter
ins
dec
shr
or
inc
adc
adc
push
adc
xor
dec
add
sub
sub
mov
jno
sbb
cmps
mov
bound
or
(bad)
cmp
add
push
jo
cld
call
test
jge
xor
push
xchg
mov
push
dec
mov
jb
pop
add
or
not
je
or
jb
fistp
or
xor
cmp
add
cmp
add
jmp
mov
sti
add
cmp
sub
sub
adc
mov
mov
iret
movs
sub
dec
cmp
loop
xor
ret
sub
nop
jmp
mov
or
cmps
movs
add
out
and
push
or
cmp
adc
test
(bad)
std
retf
ret
jmp
xor
adc
jbe
add
push
inc
cmp
xor
jne
inc
mov
cmp
dec
inc
sbb
call
movs
call
lea
or
imul
aaa
leave
sar
add
push
adc
or
ror
sub
jnp
xchg
cmp
inc
adc
xor
or
sbb
(bad)
out
sbb
mov
inc
mov
sahf
inc
mov
je
and
dec
xor
inc
jp
inc
mov
mov
int
adc
call
imul
xlat
ja
adc
pop
add
inc
js
push
mov
sub
inc
clc
xchg
inc
add
inc
sub
mov
jne
pop
add
or
mov
adc
xchg
out
and
and
jne
dec
jg
call
adc
test
adc
ss
fsubrp
cmp
out
adc
mov
sahf
out
je
add
imul
cld
sub
daa
fadd
enter
sahf
pop
push
jmp
lea
fs
movs
lahf
out
adc
inc
sub
xlat
scas
mov
(bad)
cli
inc
or
jmp
addr16
inc
movs
sbb
add
stos
ins
pop
addr16
leave
arpl
or
and
dec
mov
add
xchg
or
sbb
and
call
mov
inc
inc
sbb
adc
test
or
aam
pop
inc
and
js
aam
test
xchg
cmp
rcl
cmp
cmp
push
xor
push
and
add
adc
pop
movs
adc
xchg
ficom
aam
in
add
ret
gs
gs
cmp
loope
jmp
aam
add
or
arpl
add
sbb
pusha
push
jmp
test
test
pop
xor
dec
aad
sbb
in
mov
or
ret
xlat
and
loop
push
or
into
xor
mov
pop
loop
mov
lea
fbstp
sbb
cmp
mov
push
cld
jbe
dec
add
add
fcomp
add
adc
and
and
xor
into
push
mov
imul
idiv
cmp
inc
jo
lock
scas
dec
in
add
aaa
movs
stos
xor
es
adc
fcomp
xchg
or
(bad)
(bad)
and
retf
aaa
pop
inc
add
and
ror
mov
pop
jne
push
add
lock
adc
add
test
fisttp
mov
cli
inc
inc
add
lahf
ret
sub
jg
je
imul
dec
sti
loopne
or
loop
cmp
enter
adc
(bad)
and
or
stos
adc
dec
cmp
scas
pop
mov
ss
pop
and
pop
adc
dec
dec
pusha
in
cli
and
jl
pop
mov
push
xchg
jo
or
in
or
xchg
add
cwde
add
sbb
and
cld
inc
xor
push
jae
test
fsub
lea
mov
leave
pop
adc
and
sar
jle
sti
sbb
and
icebp
add
mov
sbb
and
add
not
xor
dec
mov
ds
xor
cmp
jb
adc
and
dec
add
xor
mov
mov
xchg
and
push
dec
adc
popa
out
cmp
cmp
ret
mov
dec
in
or
jo
mov
sbb
jb
pop
dec
call
or
sbb
push
dec
and
pop
sub
repnz
cmps
cmp
dec
div
lods
pop
push
pop
jns
dec
mov
and
adc
mov
push
nop
ins
sbb
sub
lods
mov
ror
or
pop
xor
dec
ror
sahf
out
pop
dec
cmp
pop
mov
pop
stos
inc
adc
shl
inc
push
and
gs
mov
xchg
mov
adc
fstp
and
xor
inc
rol
pop
dec
xchg
or
call
sbb
dec
and
and
sbb
mov
jmp
sub
pop
or
adc
adc
ss
sub
ret
fst
add
es
cmp
dec
ds
cwde
mov
or
int3
xchg
push
add
push
push
inc
lahf
clc
cmp
mov
adc
add
mov
xchg
nop
push
inc
aaa
or
nop
aad
cmp
xchg
sub
mov
ds
sahf
pop
push
add
or
mov
nop
mov
push
movs
jns
dec
mov
fwait
sbb
test
sbb
mov
mov
fist
cwde
lods
or
fcomp
and
test
or
xlat
outs
sub
lea
pop
inc
jnp
test
adc
cmp
xlat
or
dec
pop
sbb
inc
fs
lea
adc
xor
dec
jl
ins
(bad)
and
inc
js
inc
or
je
mov
mov
dec
or
cmps
push
cmps
sub
add
push
test
dec
sub
inc
leave
xor
or
sub
(bad)
leave
push
ss
push
push
and
or
clc
cmp
mul
cwde
xor
adc
nop
pop
xor
adc
rcl
jg
aas
or
nop
lea
mov
sub
mov
dec
and
sbb
ss
cmp
or
mov
and
pushf
sbb
ja
xchg
enter
and
mov
inc
push
jns
pusha
pusha
cmp
sahf
jl
mov
and
mov
cmp
fcom
into
mov
sahf
xor
fistp
fist
push
(bad)
movs
add
into
xor
adc
or
out
dec
ret
jl
push
mov
add
inc
loop
add
xor
mov
shl
xor
mov
cwde
es
fwait
pop
mov
add
je
pop
adc
dec
sbb
cmp
rcl
ret
inc
mov
or
les
dec
sbb
and
xor
inc
sub
and
adc
push
or
add
popa
sahf
adc
mov
(bad)
or
loopne
xchg
add
mov
and
and
shl
or
sub
icebp
xchg
sbb
adc
mov
arpl
pop
inc
jg
push
xchg
xchg
or
jg
jo
xor
test
add
cmps
or
xor
test
xor
mov
mov
es
cmp
aas
push
cmp
or
mov
loope
jae
imul
loop
rol
xor
inc
les
inc
adc
daa
push
push
pop
adc
pop
js
or
dec
adc
adc
nop
into
(bad)
aaa
push
and
push
ja
dec
adc
xor
xchg
sbb
out
sub
adc
or
add
pop
fnstsw
cmp
out
std
xor
sbb
dec
jmp
inc
cld
add
mov
rol
jecxz
jl
and
adc
xchg
sub
xor
sub
les
(bad)
inc
call
pop
xor
popf
sbb
ret
xor
dec
jle
inc
cmovne
inc
hlt
div
pop
pusha
pop
cld
add
push
popa
inc
mov
sbb
mov
xchg
xchg
inc
inc
out
push
aaa
mov
mov
fldcw
jecxz
adc
mov
(bad)
loopne
adc
pop
das
sub
lods
in
das
add
mov
aam
pop
shl
xchg
pop
pushf
les
cmp
test
int3
mov
test
adc
pop
(bad)
enter
(bad)
(bad)
xlat
and
lds
popa
cli
xor
js
add
adc
jne
mov
repnz
js
jb
icebp
or
aam
sub
or
pusha
inc
popa
jecxz
push
add
popf
mov
cmp
rcl
into
jne
pusha
jo
imul
dec
adc
mov
mov
hlt
mov
and
add
cmp
outs
dec
inc
stos
sub
xor
ficom
jmp
push
adc
push
push
test
add
dec
leave
popa
dec
add
xor
in
xchg
sub
(bad)
aam
fisub
or
jne
ins
inc
inc
sbb
ds
clc
adc
inc
ret
add
xchg
fmul
fild
fiadd
push
mov
sbb
mov
fst
in
lock
xlat
push
ffree
adc
pop
mov
add
or
adc
out
ins
cld
xchg
sub
inc
mov
sub
mov
js
jo
xchg
pop
push
outs
push
add
xor
add
fsubr
dec
add
(bad)
pop
pop
inc
pop
cmps
repnz
and
(bad)
cli
and
clc
repnz
adc
push
fild
mov
cwde
adc
rol
fld
stos
dec
or
aad
jno
sub
inc
lea
sbb
stos
loope
adc
inc
pop
dec
mov
fiadd
sbb
not
lahf
dec
loopne
lock
add
adc
push
jne
add
div
bound
neg
ja
and
out
addr16
adc
neg
xor
mov
loope
inc
scas
ins
fsubr
adc
inc
cwde
jge
js
mov
xlat
leave
sbb
xchg
cmp
cmp
push
inc
or
dec
imul
add
or
cmp
pop
bound
sub
cmps
xchg
leave
in
cmp
push
dec
dec
xchg
or
dec
and
cdq
pop
push
mov
enter
mov
dec
xor
pop
and
mov
cmp
xchg
xchg
les
sub
dec
xchg
out
scas
ret
dec
jecxz
fld
xchg
mov
jne
sub
sub
sbb
in
test
dec
mov
sub
(bad)
cmp
(bad)
aaa
call
add
push
sub
imul
push
add
inc
dec
adc
cmpxchg
jp
inc
arpl
leave
shr
jge
test
mov
call
loopne
inc
sbb
jmp
or
cmp
mov
cmp
(bad)
fdiv
clc
scas
ss
adc
inc
cmp
cmp
push
jle
sbb
jmp
push
mov
pop
jb
lahf
cmps
mov
cmp
stc
or
mov
inc
dec
mov
push
push
ret
std
and
mov
mov
retf
mov
movs
sbb
add
sbb
pusha
push
retf
dec
dec
in
mov
int3
or
bound
add
lods
test
mov
cmp
inc
shr
and
inc
pop
mov
add
pop
adc
jmp
xor
clc
adc
dec
xor
jl
fadd
pop
dec
nop
xchg
ss
aas
imul
int3
push
pop
aas
and
cs
inc
jne
movs
cmps
or
cmp
or
jmp
mov
dec
jl
(bad)
xor
inc
xor
rcr
int3
add
retf
add
push
sub
fwait
inc
ss
mov
xchg
(bad)
test
in
leave
inc
mov
and
sbb
add
and
scas
add
jmp
in
pop
adc
sahf
test
pusha
adc
js
jne
fcom
imul
jns
(bad)
xchg
xor
test
popa
or
inc
ins
nop
into
rcl
add
clc
clc
mov
(bad)
push
mov
int
call
xchg
xor
repnz
pop
adc
sbb
rcr
cmp
inc
and
sub
push
add
lods
cmps
int3
and
pop
and
mov
(bad)
aaa
mov
mov
pop
lds
push
sbb
mov
mov
pusha
sub
icebp
sub
pop
add
and
mov
or
iret
add
test
mov
jp
pop
cmps
test
lock
(bad)
stos
adc
adc
pop
and
sbb
sbb
lsl
or
inc
aas
xor
lock
push
cdq
xor
pop
cli
mov
jge
cmp
idiv
mov
cdq
mov
dec
out
push
push
test
movs
push
dec
int3
pop
out
push
jmp
add
xor
mov
lock
add
pop
dec
or
dec
pop
loopne
push
push
aas
les
push
nop
add
jbe
ins
jp
imul
push
fistp
inc
jnp
sub
sub
cs
daa
or
or
and
rcl
fst
pop
sbb
jmp
mov
adc
sub
jge
mov
xchg
ja
push
or
or
xchg
out
add
jmp
sub
push
add
push
or
push
pop
aaa
dec
sub
and
sub
or
aaa
pushf
sub
ds
inc
jmp
addr16
add
push
xchg
and
pushf
aad
inc
sub
mov
sbb
xchg
out
sti
add
imul
je
ror
mov
repnz
movs
pop
add
mov
inc
and
ss
push
sub
dec
or
and
inc
sub
out
call
sub
cli
adc
movs
add
ror
leave
popa
inc
mov
mov
sbb
ins
test
xor
frstor
add
out
jb
pop
jns
xchg
push
fnstenv
push
push
add
or
test
sub
push
fisttp
test
inc
pushf
les
inc
lock
add
cmps
stc
or
push
inc
push
pop
inc
add
mov
aas
fdivr
popa
mov
aam
retf
shl
mov
lock
inc
push
(bad)
xor
retf
push
inc
xor
in
and
jmp
adc
mov
sub
xchg
je
inc
sbb
sbb
sub
push
cdq
aam
fisttp
mov
xor
sub
pop
out
sub
nop
add
mov
xor
(bad)
fs
mov
(bad)
push
xor
pop
sbb
cmp
in
sub
stos
loop
dec
push
add
jle
push
(bad)
jmp
and
popf
sbb
popa
mov
aas
xchg
and
push
lea
add
add
sbb
mov
sub
dec
adc
mul
fwait
(bad)
xor
in
push
push
and
les
adc
pop
ins
lods
and
mov
shl
fcomp
push
dec
dec
dec
add
jmp
cld
ret
mov
add
add
dec
loop
jl
inc
mov
lock
push
xchg
and
loop
pop
sbb
add
and
xor
sbb
das
adc
xchg
bnd
cmps
mov
(bad)
mov
xchg
stos
cmps
jne
jno
imul
cmc
daa
sbb
lods
cmp
dec
mov
das
stos
sbb
aas
je
inc
mov
ins
fsin
enter
or
pop
sbb
cmp
aad
xchg
cmp
jmp
jbe
stos
cmp
mov
ds
adc
fst
clc
arpl
popa
and
and
ja
es
popf
ret
inc
inc
dec
jmp
jb
repz
test
xor
sbb
in
in
rcr
xchg
mov
jle
sbb
pop
jb
mov
jp
test
and
leave
jge
sbb
imul
or
sbb
xchg
pop
addr16
aad
add
fisttp
imul
xchg
push
mov
sbb
add
mov
fmulp
call
or
into
aam
sar
mov
xor
pusha
test
add
enter
add
shl
cwde
sbb
add
lods
das
xchg
jae
ins
popf
dec
jae
daa
or
lods
xchg
and
or
add
mov
sub
push
ret
or
das
push
pusha
inc
inc
push
rcl
add
shl
nop
adc
rcl
add
xchg
mov
shr
fst
add
sbb
adc
dec
lea
inc
add
or
or
ror
inc
scas
clc
ret
dec
les
push
test
cmp
xchg
(bad)
imul
dec
jle
mov
inc
xor
adc
pop
xchg
enter
xchg
pusha
sbb
aam
retf
scas
and
mov
dec
jg
jbe
pop
mov
rol
cld
push
add
ja
pop
cli
int3
sbb
test
sahf
mov
xchg
lea
dec
push
push
adc
inc
xor
mov
rcl
dec
sub
lods
jmp
fadd
cdq
xor
add
push
sbb
jmp
mov
fs
loope
jb
xor
mov
gs
mov
cmp
adc
jbe
fisttp
or
adc
lock
es
dec
mov
sbb
lea
shr
and
repnz
sbb
cdq
sbb
fistp
pop
ds
es
add
nop
test
push
jb
lods
scas
add
push
dec
in
mov
xchg
push
retf
fcmovbe
sbb
out
arpl
xor
pop
inc
pop
pop
inc
jnp
xor
inc
xchg
pop
cmp
add
mov
mov
dec
ret
mov
imul
mov
scas
leave
inc
mov
shl
jb
aam
jecxz
rol
rol
mov
and
in
nop
pop
xchg
jnp
rcl
enter
cmp
pop
xor
or
fild
add
pop
xor
pop
mov
es
(bad)
in
mov
loop
pop
xchg
aaa
enter
inc
inc
aas
add
push
pop
ud1
sbb
mov
ficom
sbb
xor
leave
push
sahf
imul
and
adc
xchg
xchg
hlt
(bad)
sub
(bad)
or
mov
gs
ret
sbb
outs
push
cld
sub
sub
cmps
(bad)
(bad)
push
ss
call
sahf
jbe
inc
adc
es
retf
jl
push
adc
or
push
call
inc
aas
inc
fnstenv
pop
mov
pushf
test
shl
rcl
gs
add
add
mov
sub
je
push
cld
inc
shl
(bad)
xor
push
inc
inc
pusha
ret
and
push
imul
imul
adc
pop
dec
xchg
adc
test
outs
and
movs
pop
push
imul
push
or
push
or
adc
sbb
adc
fld
sbb
(bad)
jb
mov
xchg
pusha
dec
mov
jle
ret
sar
pop
fwait
je
(bad)
call
inc
iret
jne
sbb
lea
or
loop
outs
jge
sbb
pushf
repnz
dec
shl
add
sub
int3
mov
fwait
adc
add
dec
ins
sub
test
xchg
loope
ss
sub
jns
outs
jecxz
fnstsw
and
ja
pop
dec
and
lea
jmp
push
push
mov
fdiv
test
fcom
stc
loop
sbb
das
mov
mov
adc
dec
adc
inc
ss
retf
and
jnp
push
ja
xor
xor
pop
mov
sub
xor
sti
test
adc
add
dec
push
ror
or
cmp
inc
cmp
inc
ret
movs
adc
mov
fldln2
push
sub
repnz
sub
add
cmps
loopne
fsubr
jmp
hlt
cli
add
cmps
test
or
pop
inc
xlat
inc
adc
clc
pop
xor
lock
inc
adc
out
test
pop
mov
cld
mov
mov
push
(bad)
mov
cmp
or
dec
dec
push
dec
or
mov
shr
cld
in
hlt
add
and
mov
xchg
popa
jp
test
xlat
adc
aam
in
adc
call
sbb
push
cmp
push
dec
xor
pop
cli
cmp
pop
dec
and
ret
ret
xchg
(bad)
(bad)
cmp
or
ds
cld
adc
add
cmc
xchg
mov
pop
push
adc
movs
push
clc
fst
popa
mov
clc
shl
xor
push
cmp
xchg
imul
jo
push
pop
pop
cmp
retf
sbb
sbb
inc
jle
push
add
mov
add
sbb
add
push
sbb
xor
mov
cmps
or
and
xchg
fcom
push
mov
cmps
or
ins
dec
cs
imul
xor
mov
pop
lahf
arpl
movs
push
and
lahf
mov
jg
pop
inc
push
fnstcw
push
pushf
xor
push
pop
mov
dec
popa
popa
cdq
in
movs
or
call
or
adc
adc
xchg
sbb
(bad)
out
xor
mov
inc
jmp
xor
or
push
(bad)
dec
outs
fcomp
mov
fbld
push
fiadd
dec
jne
dec
loope
mov
jo
pop
mov
or
dec
jge
pop
mov
idiv
jns
lock
add
jns
test
cs
jp
push
add
ins
cmp
push
add
sti
sub
test
fisttp
inc
inc
fwait
test
lock
call
out
jns
jl
xor
and
jg
xor
cmp
ret
sub
mov
dec
test
dec
je
add
or
out
mov
jmp
in
aam
int3
inc
fs
mov
lds
or
and
sbb
aaa
push
popa
push
fwait
push
add
inc
xor
test
mov
pop
xor
cdq
out
in
jp
cmp
and
cmp
movntps
dec
push
sub
and
or
rol
add
mov
mov
push
fdivp
aas
adc
adc
outs
cmp
mov
into
ffreep
out
xchg
scas
adc
mov
adc
mov
mov
sub
daa
loopne
push
cmps
adc
test
in
dec
push
out
or
cmc
dec
sahf
inc
ins
(bad)
dec
cmp
jg
add
mov
inc
ins
xchg
aam
sbb
pusha
xchg
lods
(bad)
jb
push
adc
dec
sbb
retf
gs
sbb
mov
mov
lods
pop
(bad)
fdiv
sar
je
data16
and
inc
cmp
retf
lahf
xor
outs
js
test
ret
cld
xor
and
and
sbb
dec
dec
pusha
inc
xchg
fs
cmp
outs
popa
out
push
inc
jne
cdq
and
rcl
cli
ror
test
mov
gs
and
repnz
mov
ja
add
mov
mov
(bad)
test
enter
push
lods
xor
clc
inc
out
mul
jge
call
enter
pop
push
ror
mov
cld
and
mov
sbb
jns
ins
sub
adc
add
mov
add
mov
retf
and
dec
fimul
inc
mov
jo
ins
xor
shr
bound
xchg
sbb
xchg
add
xchg
dec
xchg
inc
cwde
or
dec
dec
push
mov
pop
dec
push
test
dec
push
push
ss
and
push
pop
(bad)
inc
pop
loope
lods
sbb
mov
jbe
add
pushf
lea
pop
clc
test
sub
in
pop
xor
cmp
fmul
push
scas
rol
ins
test
cmp
dec
pop
retf
add
cwde
imul
movs
popf
jne
enter
inc
pop
mov
jae
mov
mov
push
xor
push
adc
and
nop
js
hlt
push
sbb
push
or
popf
and
sbb
nop
daa
inc
pop
xor
add
dec
in
(bad)
pop
jge
lods
dec
rcr
mov
les
bound
xchg
lock
inc
out
and
ret
dec
call
or
and
mov
cmp
fidivr
sub
outs
xchg
pop
daa
push
imul
adc
or
cmp
cmp
dec
mov
pop
add
or
or
dec
add
adc
dec
or
fld
out
icebp
test
jbe
rol
inc
inc
outs
jge
xor
inc
fiadd
outs
mov
xchg
sar
dec
mov
xchg
jns
ja
xchg
push
mov
add
add
inc
lock
add
lds
xor
xchg
cmps
div
leave
sub
jmp
sub
jmp
push
sbb
xchg
push
add
xchg
adc
push
fmul
gs
cdq
pop
push
pusha
cmp
dec
aam
add
in
mov
in
jmp
sub
jmp
arpl
add
(bad)
imul
cdq
out
sub
xchg
lods
cmp
dec
pop
or
ins
jb
inc
or
dec
adc
lods
loop
pop
xchg
mov
int
nop
dec
xchg
cmp
cmp
leave
pusha
jno
and
push
mov
xor
sub
cmp
cmps
dec
test
into
push
imul
push
add
rcr
pop
mov
clc
scas
hlt
dec
cmp
ja
push
cmp
jns
push
jl
push
push
pop
imul
jle
add
imul
cmp
jle
test
jmp
or
dec
mov
retf
sub
xor
inc
inc
gs
mov
(bad)
lea
fmul
adc
mov
or
cmp
xchg
push
int3
inc
xchg
cmp
movs
xchg
loopne
xchg
movs
repz
or
cmp
inc
pop
jb
jle
add
sub
outs
sub
push
push
fisttp
add
pop
jmp
sub
sbb
sub
mov
inc
dec
mov
xor
pop
xor
dec
pop
mov
mov
inc
or
inc
jp
or
jne
dec
or
push
sbb
inc
fisub
push
add
xchg
scas
fs
push
mov
push
sti
cmp
or
xchg
cmp
ds
push
cmp
push
loop
out
sub
std
das
dec
out
xor
popa
mov
or
cmp
es
add
and
add
(bad)
jbe
in
(bad)
push
inc
frstor
xlat
ds
mov
add
arpl
lds
adc
mov
xchg
test
push
call
jno
addr16
or
(bad)
stc
call
and
jb
add
rcl
(bad)
fmul
nop
dec
std
hlt
lock
mov
dec
cli
das
lock
mov
sub
jmp
sbb
cmp
jne
sub
add
lock
adc
xchg
(bad)
(bad)
inc
add
mov
xor
cmp
jae
cmp
jge
xor
sbb
rcl
adc
or
or
gs
pop
nop
jbe
xchg
mov
cmp
out
in
sub
je
hlt
and
popa
adc
mov
jecxz
pop
add
cmp
inc
add
xchg
pop
mov
inc
rol
inc
mov
inc
add
adc
push
addr16
mov
int
into
pop
inc
addr16
enter
cmps
jne
pop
dec
rol
(bad)
hlt
ror
test
add
and
cmps
cmp
(bad)
sbb
test
or
add
inc
push
popa
pop
add
lods
add
ret
jne
mov
fsubr
pop
fist
inc
mov
jge
mov
pop
aas
sub
xor
and
or
imul
xor
mov
xchg
pop
add
add
inc
adc
add
push
mov
push
xor
xchg
adc
sar
(bad)
aad
inc
mov
or
and
fadd
xchg
cmp
sbb
jno
add
cld
outs
nop
xchg
sbb
adc
es
adc
test
and
pop
mov
push
(bad)
movs
mov
jg
pusha
push
out
adc
adc
add
std
or
sbb
hlt
pop
dec
inc
ins
lock
aaa
cmp
mov
hlt
add
out
hlt
stc
inc
inc
sbb
sub
sub
xchg
sbb
enter
sahf
sub
add
add
hlt
inc
inc
adc
shl
add
mov
jmp
in
mov
pop
add
cmp
dec
cmps
inc
mov
sbb
jbe
push
adc
inc
cmps
cmps
mov
imul
add
mov
rol
rol
sar
mov
inc
(bad)
mov
add
(bad)
jl
xor
adc
adc
inc
in
test
inc
lock
shr
or
mov
adc
add
xchg
jbe
xor
and
or
mov
stos
or
cmc
push
int3
pusha
test
cmc
inc
push
mov
je
aad
and
lea
or
push
sbb
jmp
sbb
push
pop
xchg
mov
das
(bad)
dec
ins
pusha
shl
test
push
add
aaa
and
ins
xor
scas
les
mov
inc
das
ds
repz
mov
adc
jne
inc
and
je
cmp
xchg
inc
adc
sbb
mov
pop
nop
push
add
mov
scas
fld
mov
in
pop
das
lods
dec
nop
push
add
daa
movs
shr
add
pop
push
js
jmp
das
dec
es
mov
shl
ss
jbe
mov
xlat
movs
or
xlat
or
repz
push
inc
inc
imul
popa
push
push
movs
pop
sbb
cmp
jle
movs
inc
outs
cmp
jmp
mov
lock
and
mov
je
add
dec
ficom
sbb
ret
sbb
ja
lar
and
daa
cmp
sbb
call
fld
loop
sbb
sub
mov
mov
popa
lods
test
dec
pop
loopne
ja
xchg
adc
ja
or
mov
mov
shl
inc
retf
or
aaa
mov
(bad)
ror
daa
add
(bad)
xor
jb
mov
mov
xchg
inc
add
sub
sahf
cli
inc
adc
sub
imul
inc
scas
fiadd
es
movs
adc
pop
ss
inc
and
mov
lea
aaa
pushf
cld
add
mov
sub
push
test
in
add
mov
inc
retf
pop
dec
popf
dec
shl
dec
adc
or
xor
xchg
or
add
sub
add
fimul
sar
cwde
sbb
pop
lods
push
xchg
addr16
cmp
inc
sbb
inc
outs
inc
xor
pop
or
in
test
inc
ins
ins
inc
or
inc
inc
adc
dec
add
mov
nop
adc
test
inc
je
popf
movs
or
jecxz
je
inc
pusha
and
inc
nop
je
sub
inc
jmp
popf
xlat
add
dec
call
aaa
adc
mov
sub
inc
pushf
mov
inc
pop
inc
ret
dec
test
mov
or
cmp
cdq
fistp
mov
xor
inc
push
mov
(bad)
ficomp
and
aas
push
call
inc
adc
test
add
add
fstp
pop
and
sub
adc
inc
arpl
xchg
adc
or
imul
inc
adc
popa
and
add
imul
add
ret
and
ret
sub
dec
inc
inc
push
cmp
out
fimul
or
adc
sbb
mov
sbb
push
cli
push
sub
cmp
pusha
jmp
mov
inc
fcomp
inc
add
call
mov
inc
retf
jae
lock
in
xchg
inc
sbb
pop
rcr
inc
or
dec
xor
jle
inc
lods
add
mov
xchg
outs
add
arpl
and
pop
dec
add
test
in
xchg
add
lahf
clc
mov
out
int3
xchg
xchg
cmp
pop
xor
cmp
mov
adc
jne
add
xchg
inc
jb
or
ror
mov
push
scas
pop
dec
call
lock
dec
enter
inc
jl
inc
add
inc
xor
clc
xor
mov
push
cmp
cmp
xchg
js
popa
fdivr
jmp
dec
xchg
push
(bad)
stos
xor
clc
faddp
pop
int3
int3
pusha
fild
in
dec
or
mov
xor
arpl
xor
arpl
imul
dec
ds
pop
sbb
and
jno
dec
std
inc
jo
lods
in
outs
mov
or
in
ror
push
sub
out
ins
fcomp
sbb
or
fdivr
ret
sbb
inc
adc
cld
mov
repz
ret
and
push
rol
push
mov
inc
ret
and
inc
and
jbe
pop
div
in
xor
push
cwde
or
nop
cmp
repnz
mov
xor
add
rol
in
jne
in
cmc
inc
lock
mov
daa
push
mov
int
retf
or
mov
xchg
xor
cmp
xchg
push
cmps
cmp
dec
imul
frstor
and
sbb
push
pop
out
sti
sub
cs
(bad)
test
or
ret
(bad)
sbb
aam
push
xchg
loope
retf
mov
data16
or
add
mov
sti
and
adc
push
xor
sbb
call
dec
inc
inc
pusha
jp
out
fistp
pop
movups
pop
pop
xor
shl
pop
pop
je
movs
or
push
and
xchg
fst
lds
jne
pop
inc
push
or
jb
or
lds
pop
pop
xchg
cwde
mov
push
loope
adc
nop
fwait
arpl
repnz
call
add
inc
jbe
nop
push
add
jmp
adc
pop
push
and
das
jns
psrlq
or
iret
and
sbb
fcomp
inc
cmp
jne
inc
popa
sbb
inc
xchg
out
rol
or
mov
scas
adc
cwde
pop
imul
out
or
pop
pop
xchg
dec
call
mov
je
xor
push
mov
adc
adc
jbe
test
outs
add
push
mov
in
out
push
fild
add
aad
call
or
lods
inc
push
jb
inc
mov
ja
or
cmp
mov
arpl
sbb
dec
dec
or
sub
add
hlt
pop
add
push
xor
add
or
or
iret
nop
mov
stc
push
add
loop
pop
inc
(bad)
aad
sbb
arpl
mov
mov
adc
dec
fist
nop
xor
movs
repz
xchg
data16
adc
push
and
adc
pop
in
add
push
pop
mov
add
cmp
add
mov
add
pusha
xchg
or
push
lds
jmp
cdq
jb
inc
xchg
add
in
sbb
pusha
pop
or
inc
pusha
push
adc
outs
inc
pop
sub
ins
int3
aaa
add
and
xchg
(bad)
cmp
(bad)
mov
(bad)
ins
cmps
pop
clc
ds
or
or
sbb
xchg
lods
lea
ror
jmp
adc
inc
inc
dec
call
bound
and
mov
mov
adc
sahf
xchg
or
inc
sbb
fcom
ins
pop
cmp
sub
cs
xchg
sub
xchg
xchg
and
cmp
arpl
pop
pop
test
dec
or
scas
retf
gs
(bad)
std
das
push
sbb
mov
(bad)
(bad)
mov
sub
adc
jmp
test
(bad)
xor
cmp
dec
nop
jnp
mov
shl
xchg
push
or
push
inc
das
dec
cdq
xchg
add
aam
xor
loopne
mov
sbb
pop
call
pop
dec
out
pop
adc
adc
inc
lods
mov
push
das
test
push
mov
fs
test
shl
xchg
and
inc
sbb
inc
xchg
out
push
mov
xchg
push
jne
push
(bad)
sbb
add
add
xor
call
jo
std
xor
fisttp
in
daa
test
cmp
and
rol
sub
cmp
mov
fild
daa
xchg
inc
xor
ins
cs
add
jmp
pusha
jmp
sub
cmp
and
xchg
aam
repz
xor
adc
jp
call
push
sbb
cdq
retf
aam
adc
in
or
es
fcom
add
in
ins
inc
mov
add
add
loope
ret
call
push
xor
add
mov
lock
xor
cmp
push
or
or
out
cwde
stos
or
sub
loope
cwde
sar
int3
inc
test
mov
xchg
add
cmp
add
dec
add
adc
add
and
xchg
jmp
adc
sbb
test
add
les
add
js
(bad)
mov
(bad)
or
cmp
adc
push
mov
ds
add
or
dec
sahf
lahf
lock
cmp
shl
cmp
adc
cmp
stos
cmp
addr16
add
push
fldcw
add
invd
ja
pushf
fcom
outs
mov
ins
and
loop
xchg
or
cmp
ret
add
inc
aam
or
test
test
out
and
adc
clc
xor
xor
mov
xor
pop
add
push
or
das
aaa
add
mov
sub
icebp
mov
lods
jnp
mov
fiadd
out
add
add
sbb
mov
into
test
adc
pop
fdiv
adc
dec
imul
xchg
movs
inc
out
cmp
pop
mov
or
jb
mov
movs
inc
and
pop
sbb
sbb
mov
xor
pusha
xchg
cmp
adc
xor
inc
cli
pop
mov
cmp
sti
push
in
mov
inc
pusha
or
xor
fadd
push
mov
add
jb
add
or
cmp
jmp
jbe
into
shl
jmp
push
xchg
outs
imul
push
outs
fisubr
jge
daa
call
sbb
pop
imul
push
cdq
or
arpl
pop
out
or
mov
pop
pop
push
dec
clc
push
inc
add
or
mov
add
adc
(bad)
dec
stos
ret
movs
sbb
and
mov
test
pop
test
add
mov
int3
mov
cmp
xchg
les
fnsave
jns
jb
retf
jnp
push
pop
or
inc
pop
pop
jne
sbb
sbb
sub
je
mov
push
stos
retf
loopne
adc
push
push
push
add
push
cdq
add
(bad)
or
lods
inc
lock
dec
je
push
or
jns
inc
lock
pusha
mov
clc
arpl
mov
inc
ret
sub
adc
inc
mov
add
test
(bad)
sbb
mov
(bad)
push
and
es
arpl
xchg
adc
cwde
and
fsubr
mov
sbb
mov
mov
mov
(bad)
push
(bad)
loope
ror
push
xor
je
in
xlat
call
js
inc
daa
and
imul
pop
sub
in
push
add
xchg
jnp
sub
mov
push
je
pop
jle
push
test
cmp
or
aam
std
retf
mov
scas
dec
sbb
mov
sbb
jmp
xchg
ins
sub
xchg
pusha
call
jecxz
cmp
jge
iret
ficomp
inc
in
or
push
sub
mov
sub
cmps
push
in
ret
leave
rol
pusha
push
xchg
repnz
xor
lods
or
inc
lods
test
cdq
rcr
hlt
rcl
and
push
fstp
call
ja
jle
sub
xchg
adc
mov
ror
inc
xchg
add
inc
inc
inc
shr
movs
pushf
(bad)
dec
inc
sahf
stos
dec
sub
push
or
in
add
adc
inc
mov
mov
jmp
js
dec
and
dec
jmp
mov
add
push
pop
cmp
in
adc
stos
fxch
xchg
rol
cld
lds
pop
push
fst
jns
ret
adc
sub
aad
adc
(bad)
xlat
cld
test
clc
push
push
push
inc
pop
addr16
mov
sub
and
(bad)
mov
out
sbb
enter
cld
or
das
mov
ins
dec
adc
pop
test
jmp
lock
je
mov
or
les
mov
lahf
jno
and
pop
lea
push
pusha
sub
test
or
clc
addr16
or
inc
push
dec
int3
mov
push
push
enter
ret
jne
mov
shl
push
test
push
cmps
mov
adc
mov
enter
push
mov
push
and
adc
inc
mov
mov
mov
sub
cld
and
sub
mov
or
jb
jbe
out
je
leave
jecxz
sahf
xlat
movs
mov
inc
cmps
cld
test
retf
call
pop
loopne
scas
inc
add
loope
push
inc
(bad)
push
add
mov
dec
shl
test
leave
dec
dec
sbb
push
scas
mov
jle
(bad)
gs
add
sub
fisubr
mov
nop
sub
and
add
add
push
or
mov
add
enter
fild
stc
data16
or
dec
out
xchg
xor
and
ret
dec
je
repnz
xor
es
sbb
ret
dec
mov
repnz
mov
test
push
gs
loopne
lods
push
int3
jp
and
sti
daa
rcl
push
jge
mov
xor
or
enter
mov
daa
jge
shl
push
push
lock
pop
ins
les
push
mov
adc
les
packuswb
popa
sub
sbb
rol
and
ins
shr
mov
adc
dec
jmp
daa
pop
mov
addr16
or
inc
nop
inc
or
sbb
adc
pop
pop
jmp
mov
jns
pop
add
inc
imul
loopne
pop
call
jle
mov
cwde
inc
xor
test
push
(bad)
push
cmps
in
ja
test
pusha
adc
pop
xor
mov
or
inc
or
fld
add
adc
jns
jge
lods
lahf
aam
mov
jo
dec
ins
xor
pusha
lods
out
xchg
stos
jbe
push
pop
outs
add
sbb
inc
(bad)
test
shr
xlat
xchg
pusha
adc
adc
or
ins
(bad)
je
push
sub
push
lods
sbb
in
inc
test
sbb
sbb
inc
(bad)
cs
addr16
sub
addr16
push
or
add
fsub
jg
lea
lea
sbb
and
push
call
xchg
aaa
mov
rcr
and
nop
sub
pop
test
ja
sub
(bad)
pop
cvtdq2ps
xor
mov
mov
add
in
cmp
shl
push
out
add
xor
jne
add
and
dec
and
loope
and
inc
mov
inc
push
or
add
pop
jne
ret
inc
jmp
inc
xor
and
dec
ss
ss
mov
popa
mov
jb
push
xor
or
(bad)
mov
loopne
pushf
adc
pop
mov
inc
mov
aaa
pop
sub
add
and
xchg
pop
xchg
in
and
daa
add
popa
pusha
adc
cdq
pop
ins
test
adc
xchg
pop
or
mov
add
jecxz
lea
xchg
imul
mov
push
add
mov
and
popf
loopne
je
lods
das
pop
sub
pop
js
add
in
sar
xchg
movs
adc
mov
mov
clc
fcom
retf
dec
ins
mov
push
add
es
mov
and
pop
fdivr
mov
add
dec
mov
jns
imul
ins
and
and
or
mov
cmps
rcl
adc
sar
mov
cmp
ins
jg
repnz
leave
daa
xor
xor
sar
adc
cmp
mov
xchg
cmc
jl
dec
movs
dec
mov
call
mov
sbb
mov
push
in
imul
mov
popf
cmp
sub
test
cmp
out
aaa
fsub
mov
sub
sbb
nop
hlt
add
fwait
mov
ror
and
add
adc
cmp
and
push
adc
loopne
jmp
and
pop
and
not
mov
xchg
pop
push
mov
push
mov
imul
push
out
addr16
inc
pusha
mov
add
js
xchg
je
add
push
dec
int3
pop
push
fs
popa
pop
mov
ds
add
inc
inc
daa
mov
mov
rol
rol
xor
mov
ins
xchg
(bad)
mov
xor
(bad)
xchg
cs
daa
adc
push
fstp
adc
push
es
mov
and
inc
sub
icebp
jne
mov
ret
and
add
(bad)
push
es
popa
and
sbb
inc
nop
pushf
test
pop
sub
jno
lahf
push
je
mov
movs
icebp
bswap
or
bound
xor
adc
std
mov
cld
ss
sbb
add
dec
retf
cmp
or
sbb
outs
scas
add
jns
jno
dec
call
cmpxchg
sub
cmp
call
jno
retf
enter
ja
clc
xchg
cmp
and
lods
xor
loopne
and
bound
ins
xchg
cmps
arpl
sbb
jb
jecxz
inc
out
or
sbb
mov
fcom
sbb
or
pop
std
push
sbb
jo
push
into
xor
mov
push
or
mov
lock
jns
mov
mov
pop
jae
pushf
sbb
mov
cmp
dec
xchg
push
imul
sbb
les
cmp
push
ds
out
push
add
or
or
sbb
adc
push
test
or
push
cmp
cli
mov
jne
or
dec
pop
test
pop
jg
mov
ins
data16
pop
jae
push
jbe
nop
mov
mov
mov
inc
push
shl
add
jbe
xchg
add
(bad)
lods
adc
pop
xchg
fwait
inc
adc
pop
and
push
sbb
push
in
sbb
push
push
inc
repnz
mov
sbb
xor
mov
fnstcw
enter
push
pop
aas
repz
mov
adc
and
sub
xchg
adc
jns
pop
add
mov
loopne
aam
mov
daa
ds
mov
inc
movs
data16
mov
cmp
(bad)
dec
pop
adc
and
or
je
push
cld
call
test
push
aas
data16
mov
pop
pop
push
and
nop
imul
iret
or
cmp
and
mov
lods
or
je
adc
mov
mov
icebp
lods
adc
sub
data16
push
pop
push
shl
fild
add
or
sub
xchg
sbb
add
add
push
pop
(bad)
outs
push
or
outs
cmps
icebp
and
push
push
jecxz
rep
xor
dec
js
cld
xchg
out
inc
call
vpsubb
sbb
imul
add
sub
aaa
mov
arpl
sbb
fwait
cmp
jle
xor
xchg
popf
xchg
sahf
(bad)
(bad)
mov
xor
out
test
add
jecxz
pop
or
pop
push
movs
sub
(bad)
inc
cmp
out
pop
add
mov
push
aas
sbb
fadd
inc
retf
jno
push
das
dec
das
stos
prefetch
or
sbb
(bad)
push
pop
xlat
or
mov
cmp
ret
mov
xchg
es
imul
test
and
nop
ret
imul
cmp
cmp
dec
scas
and
nop
neg
sar
push
push
jbe
cmp
sbb
pop
cmp
push
inc
adc
and
sbb
pop
inc
scas
stos
rcpps
faddp
cmps
xchg
mov
dec
mov
rcl
daa
sbb
sub
mov
push
adc
adc
dec
push
push
xchg
push
inc
jmp
pushf
sbb
stos
test
sbb
inc
add
loope
test
push
push
jno
push
or
dec
icebp
xor
sub
sub
mov
scas
dec
xor
pop
sbb
xor
rcr
xchg
mov
mov
push
mov
shl
imul
dec
xor
dec
mov
lds
rol
movs
jg
dec
and
inc
call
dec
inc
ret
jle
pop
iret
xchg
fld
xor
dec
add
adc
dec
inc
add
adc
into
cmp
xchg
mov
cmovo
sub
pop
jle
adc
cld
push
sub
jmp
cmp
test
aad
add
add
cwde
dec
xchg
or
and
or
add
xchg
in
adc
xchg
sub
push
jmp
pop
pop
inc
arpl
adc
cmp
jb
mov
xchg
push
adc
cs
and
mov
neg
or
jo
inc
cmp
nop
dec
add
push
ins
imul
add
cmp
aas
stc
jae
add
dec
jnp
and
mov
or
dec
inc
stos
movs
gs
call
add
xor
inc
and
cmp
clc
cs
add
push
jo
(bad)
push
in
out
adc
pop
jmp
add
jb
jmp
jmp
mov
xchg
daa
push
xor
mov
push
jne
mov
and
daa
xor
fdivr
ret
imul
inc
mov
stos
xchg
inc
push
jle
(bad)
dec
in
movs
xor
sbb
jmp
mov
ret
push
iret
(bad)
ins
adc
jns
test
imul
loope
xor
(bad)
xor
push
ret
stos
out
and
mov
push
and
and
out
das
or
iret
mov
mov
adc
je
jo
sub
sbb
adc
test
sub
add
out
cmp
mov
je
dec
shl
cld
mov
push
mov
adc
push
mov
stos
mov
mov
lds
cmc
test
pop
adc
in
fs
and
dec
jae
call
xor
xor
inc
rcl
jecxz
push
push
pusha
pop
push
nop
shl
push
mov
dec
mov
inc
dec
push
xchg
cmc
popf
add
pop
mov
or
and
je
or
fwait
or
lds
push
jecxz
imul
shl
imul
or
in
mov
inc
inc
push
or
mov
xor
jne
inc
ret
test
jl
pop
inc
add
sub
add
int
sub
dec
or
xchg
add
mov
sbb
jne
add
jnp
nop
int3
add
jb
xchg
mov
cmp
and
aas
sub
aas
test
test
sbb
xlat
sub
sub
cmp
inc
ret
mov
mov
dec
ja
cmp
test
gs
sbb
mov
adc
in
in
fnstenv
and
inc
mov
les
sub
rol
clc
jmp
mov
mov
or
int3
xor
cwde
nop
pop
ss
and
mov
adc
cld
dec
sbb
sar
ret
out
pop
pop
outs
rcl
cmp
shl
push
sbb
movs
mov
in
push
xchg
leave
add
cmc
scas
push
not
bound
jge
inc
imul
mov
inc
push
pop
retf
adc
pop
jl
call
ret
jb
adc
xor
sub
sub
jo
rcr
jl
scas
pop
mov
dec
or
(bad)
adc
jne
arpl
lods
xor
adc
sub
jge
sub
fmul
jmp
mov
inc
pop
add
push
daa
dec
pop
pop
xchg
mov
shr
push
shr
pop
add
pusha
jne
(bad)
fist
mov
in
push
call
pop
movs
scas
xor
fwait
jmp
and
ret
pop
pushf
ja
or
jns
lds
xchg
cmp
popf
sar
cwde
das
adc
jp
sub
jo
sub
push
scas
mov
pusha
xchg
xor
mov
add
aas
mov
adc
mov
cmps
inc
das
push
jge
ret
push
test
int
inc
xor
sbb
add
adc
mov
neg
imul
aaa
add
cmp
jle
aas
xchg
pushf
lods
cdq
dec
mov
cmps
test
xchg
or
(bad)
wbinvd
nop
push
ins
ja
rcl
add
sub
push
not
sbb
mov
les
push
jae
xor
or
icebp
jnp
push
dec
aaa
xchg
and
in
icebp
cmp
je
cmp
ss
sbb
sbb
adc
sub
add
test
arpl
outs
jge
jecxz
push
dec
adc
nop
xor
inc
ror
stos
arpl
rdmsr
into
cmp
dec
and
adc
mov
inc
imul
pop
sbb
js
mov
xchg
fld
mov
out
cmc
icebp
ud1
sbb
ret
cmp
adc
rcl
or
and
pop
je
into
adc
mov
cmps
push
test
sub
xlat
jle
jmp
push
xor
jle
test
adc
xlat
dec
and
jae
cmc
adc
(bad)
mov
leave
(bad)
adc
popa
loopne
inc
push
cmp
mov
addr16
test
or
jo
push
sub
push
dec
xor
sub
adc
mov
aad
mov
cmp
mov
pop
adc
push
dec
push
push
cmp
mov
sbb
and
dec
mov
pop
outs
dec
pop
daa
jnp
sub
sub
or
and
mov
fsubr
loop
or
dec
(bad)
ret
or
jp
pop
jno
mov
xchg
adc
adc
es
pop
aas
movs
iret
adc
idiv
jge
add
aam
and
pushf
movs
es
and
mov
add
stos
push
push
push
cld
fwait
xchg
sbb
xlat
cmc
test
and
sbb
xchg
rol
sbb
lods
loop
daa
mov
push
push
sub
cmp
movs
clc
int3
mov
or
(bad)
ds
je
jbe
popa
xlat
or
je
pop
je
jmp
jae
nop
data16
adc
mov
sbb
sub
mov
add
pop
out
mov
call
add
fs
loopne
rcr
sbb
lods
ret
inc
xor
xor
js
inc
adc
test
jle
add
hlt
add
out
sub
cmp
add
xor
pop
push
js
das
pop
pop
lods
retf
mov
inc
xor
jmp
jge
fild
inc
adc
fistp
adc
or
and
sub
mov
dec
repnz
add
mov
pop
in
sub
jle
movs
std
dec
inc
pop
sub
push
clc
xor
xchg
out
lock
in
push
cmps
cmp
push
pop
inc
mov
fmul
sbb
jns
rcr
enter
pusha
pushf
or
add
push
popa
add
mov
cmp
add
mov
inc
mov
mov
sti
add
adc
pop
jb
idiv
or
or
outs
mov
add
addr16
retf
pop
cmp
sub
ins
push
push
sbb
or
imul
mov
sub
mov
or
add
jmp
or
or
in
retf
mov
cmp
movs
mov
cmp
(bad)
sbb
mov
cs
dec
ror
mov
mov
lock
jo
dec
call
jbe
inc
or
test
out
jge
scas
adc
loopne
scas
mov
mov
jo
inc
cs
jle
out
jae
out
push
and
jle
adc
jmp
sbb
jb
ror
mov
clc
test
clc
mov
cmps
push
clc
fdiv
push
or
xchg
or
add
pop
inc
lea
(bad)
jmp
dec
adc
stos
loopne
fadd
loopne
push
sbb
jle
sbb
call
shr
cmps
jge
fmul
or
push
imul
fdivr
enter
dec
fld
les
sbb
xor
repz
jb
pop
add
mov
jae
push
(bad)
or
imul
shl
mov
or
ror
add
(bad)
daa
rol
push
or
pop
cld
dec
ficomp
mov
je
or
inc
aad
sub
mov
in
test
jge
dec
loope
pop
xor
cdq
sub
mov
inc
mov
mov
mov
in
mov
add
in
hlt
sub
sbb
pop
adc
fldenv
xchg
add
mov
sub
jne
xor
add
jge
movups
data16
sub
push
add
sub
jne
add
iret
in
or
cmp
(bad)
dec
jmp
dec
or
mov
jne
push
sub
sub
ret
xor
out
cwde
mov
sub
out
cld
add
into
outs
mov
or
sub
sub
push
cmps
add
xor
dec
movs
jmp
mov
jg
loopne
xchg
cmps
cmp
hlt
add
dec
rol
pop
adc
(bad)
shr
call
and
(bad)
push
mov
into
add
adc
push
add
imul
and
loopne
div
inc
rol
mov
cwde
add
adc
xchg
fwait
cdq
pop
pop
add
inc
or
adc
ins
add
add
in
adc
fcomp
push
mov
xchg
daa
jmp
call
jae
in
lods
xor
dec
imul
fadd
sub
pusha
inc
aam
inc
or
jae
pop
jecxz
ret
sbb
lea
lea
js
int3
daa
adc
ins
and
in
inc
enter
mov
push
mov
cmp
mov
push
sub
adc
loopne
xchg
rol
pop
xchg
ffree
mov
sbb
mov
sub
fcmovnbe
cmp
mov
test
add
add
cmp
xor
add
sbb
push
loopne
mov
cmp
push
or
or
cmp
and
(bad)
cld
mov
mov
mov
or
or
lock
mov
pushf
pusha
xchg
es
outs
pushf
(bad)
les
or
ss
clc
add
and
aam
dec
ror
jl
es
cdq
in
mov
es
dec
and
xchg
enter
adc
add
xchg
shl
xchg
push
xchg
cmps
addr16
lods
cmp
ins
imul
or
add
dec
popa
xchg
xchg
dec
imul
xor
dec
loopne
jo
scas
jnp
pop
inc
outs
rol
or
adc
cmp
mov
mov
or
ret
in
adc
and
and
aaa
mov
and
add
mov
(bad)
xchg
dec
js
enter
call
fwait
dec
mov
shr
retf
sbb
es
mov
cmp
add
movs
push
sub
and
mov
jnp
mov
stos
or
mov
or
pop
jmp
not
and
test
add
sbb
les
hlt
dec
xor
add
mov
xor
or
or
mov
mov
push
push
nop
push
pop
retf
iret
dec
and
jae
es
jmp
sahf
fnstenv
pusha
cmp
jg
add
sub
jo
loopne
mov
push
mov
jg
dec
cmp
add
gs
(bad)
fisttp
or
and
sbb
dec
out
pop
icebp
sub
add
and
inc
aad
lsl
cmovnp
cs
push
push
inc
and
or
push
cs
and
mov
stos
jnp
inc
or
sbb
sub
xchg
pop
daa
ins
add
clc
dec
test
fisttp
push
and
mov
call
out
cmp
push
sub
adc
daa
sbb
xchg
cmp
or
xor
pusha
popa
push
cmp
pop
cdq
ins
adc
rcr
add
add
div
xor
add
adc
ret
push
or
mov
int3
(bad)
dec
jbe
add
mov
fs
outs
int3
pusha
xor
mov
shl
lods
mov
ja
adc
fcom
inc
and
imul
aas
mov
lea
xor
or
cmps
nop
push
hlt
add
mov
aas
cs
scas
and
or
(bad)
adc
mov
inc
popa
mov
xor
rol
mov
cmps
pop
cmps
inc
add
lods
or
dec
fiadd
mov
add
cmp
push
sahf
xor
sub
add
jge
popa
jb
dec
jbe
push
or
mov
bound
cmp
daa
mov
shr
dec
adc
add
mov
lock
ret
xchg
xchg
adc
push
ret
test
test
fnstenv
nop
iret
cmp
lods
lahf
test
clc
ror
xor
mov
sbb
or
daa
mov
int3
inc
mov
dec
rcr
mov
push
and
movs
call
rcr
pop
sub
xchg
push
pop
or
ret
or
ret
push
xchg
push
hlt
or
and
xchg
dec
jmp
pop
inc
popf
cmp
mov
test
cli
pusha
and
sbb
sbb
mov
int3
in
add
scas
mov
push
xor
jo
sub
dec
call
sbb
add
mov
or
rcr
dec
adc
cwde
and
loopne
pop
push
xor
pop
add
sbb
iret
pop
jne
xchg
push
(bad)
cmp
lock
frstor
xchg
sub
sub
push
or
and
movs
shl
pop
jb
dec
dec
mov
sub
bound
push
pushw
rcl
mov
xor
imul
jbe
ins
push
ds
add
add
retf
rol
(bad)
mov
jns
je
jo
adc
movs
pop
call
jne
int
mov
xchg
xor
clc
enter
add
in
mov
arpl
push
js
bound
push
jnp
dec
mov
cmps
push
lahf
or
or
(bad)
loop
out
sbb
(bad)
retf
rol
push
cwde
jp
xor
xor
ds
dec
cmp
cmp
inc
je
in
dec
cdq
clc
bound
dec
xchg
adc
ror
in
std
ins
add
add
inc
jl
cmp
push
push
or
out
add
inc
fdivrp
jmp
out
mov
push
mov
mov
scas
les
in
fimul
iret
nop
rol
add
inc
or
enter
adc
popa
push
sbb
inc
fisub
rol
bound
iret
and
pop
les
fst
movs
or
and
jbe
xchg
addr16
js
loopne
loope
and
or
mov
cmp
fcomp
cdq
xchg
pop
fadd
pop
fwait
jl
mov
pusha
xchg
inc
mov
and
push
add
xchg
pusha
add
push
sbb
and
(bad)
push
mov
sbb
ins
test
inc
movs
(bad)
ins
add
push
push
push
mov
outs
aaa
sar
inc
cwde
addr16
test
fisttp
dec
mov
les
xchg
dec
dec
sbb
sub
dec
cs
call
xor
and
or
jmp
lea
mov
adc
and
(bad)
sbb
mov
push
mov
or
clc
popf
fistp
neg
fwait
pop
(bad)
hlt
push
dec
adc
repnz
or
jbe
mov
and
cwde
pop
mov
or
sbb
ss
test
jp
or
hlt
dec
adc
add
repnz
cld
ret
push
add
mov
cmp
or
and
(bad)
xchg
sbb
add
xchg
add
popf
pop
sahf
adc
push
jg
adc
inc
adc
mov
aam
sub
js
push
call
sbb
pop
fst
push
ss
aam
mov
xlat
pop
ins
xchg
test
jnp
adc
hlt
retf
xchg
mov
ret
xchg
dec
shl
mov
jae
jne
dec
jge
xchg
jno
cmps
adc
ss
mov
jo
sbb
cmp
jo
dec
adc
mov
call
sub
jmp
adc
xor
(bad)
stos
mov
push
ins
sub
jmp
mov
sti
jmp
cmp
cmp
xchg
inc
ret
stos
xor
popa
lds
lock
(bad)
nop
adc
add
outs
xlat
mov
adc
lds
dec
or
and
into
adc
pop
fadd
rcr
dec
aaa
call
or
and
movs
aaa
adc
fcmovne
fs
jp
adc
mov
daa
or
mov
ret
mov
sub
mul
or
mov
fwait
push
dec
add
xor
aaa
(bad)
or
add
ds
loope
cmps
inc
cld
mov
fstp
shr
pop
inc
cmp
aam
fst
out
sbb
mov
test
adc
or
sbb
cmp
sub
pop
sbb
popa
(bad)
jl
ficom
jmp
aam
pop
pop
dec
pop
add
dec
fwait
adc
sbb
push
test
popa
icebp
cmps
and
mov
adc
cmp
sbb
hlt
add
clc
mov
loopne
add
pop
sbb
pop
or
xor
adc
jne
push
in
jnp
mov
mov
jmp
mov
fs
adc
push
sbb
jl
je
clc
daa
ins
mov
pop
mov
xchg
add
aaa
jo
mov
xchg
lock
mov
pop
add
cmp
shl
or
fs
lds
nop
mov
or
mov
movs
mov
stos
dec
repz
mov
and
into
daa
pop
js
or
push
mov
cmp
and
cld
pop
cmp
shl
or
push
pop
imul
pop
imul
fsubr
sbb
adc
(bad)
mov
dec
jmp
xchg
pop
sbb
add
push
push
push
imul
mov
pushf
loopne
popa
xchg
cwde
iret
pop
sbb
nop
xchg
xchg
sbb
add
jo
aas
retf
enter
add
and
mov
and
or
loopne
(bad)
fsub
mov
mov
or
mov
das
stos
xor
mov
fsubr
fst
xchg
lea
ret
repnz
in
cmp
jne
add
or
push
jl
pusha
(bad)
loope
mov
dec
pusha
xchg
imul
inc
loope
mov
lods
sahf
xchg
xchg
xchg
lea
out
mov
xchg
cmp
rol
les
shr
cmp
mov
and
mov
addr16
add
push
xor
inc
jecxz
mov
sbb
scas
pusha
inc
adc
fild
jmp
or
add
inc
ret
dec
jmp
jg
imul
adc
or
cmp
outs
or
pop
clc
add
or
nop
imul
in
push
pop
aaa
or
pop
test
fs
mov
push
fisttp
add
or
or
aam
mov
inc
jo
aam
popa
xchg
xchg
fdivr
pop
push
adc
mov
and
push
mov
inc
mov
inc
mov
cmc
mov
and
mov
ins
cmp
pop
sub
sbb
and
add
ins
not
cmp
cdq
or
inc
fs
or
push
pop
dec
jbe
mov
sub
push
cmc
ja
sti
ins
adc
jge
aam
ret
scas
xor
stos
movs
movs
adc
cld
pop
xchg
xor
or
cmp
out
iret
int
inc
je
loopne
ins
rol
ret
xchg
xchg
adc
pop
cdq
push
repz
push
fs
ror
sub
rcl
leave
in
cmp
add
fisttp
sbb
bound
sub
adc
xor
add
dec
mul
dec
dec
nop
rol
or
into
adc
test
loop
cmps
(bad)
adc
fadd
(bad)
jo
je
pop
(bad)
jnp
inc
ds
add
pop
xor
inc
call
cdq
xor
add
add
idiv
add
sbb
xchg
push
ret
mov
jno
jge
not
mov
inc
sbb
popa
inc
inc
sub
aad
pop
dec
pop
fdivr
add
cmp
push
idiv
jne
push
inc
mov
shl
imul
pop
add
cwde
add
test
and
call
inc
pop
sahf
enter
loopne
xor
sbb
inc
or
add
push
nop
aas
add
inc
fadd
mov
fsubr
pop
cdq
xchg
test
xor
ja
sbb
push
mov
cmps
or
sbb
or
xor
or
push
adc
jne
push
mov
pop
adc
push
into
rcl
sub
js
jmp
mov
or
ins
xor
jbe
adc
sub
hlt
add
fldenv
mov
nop
pop
sub
or
push
jne
sbb
and
add
imul
inc
inc
call
sub
sbb
das
and
pop
and
sbb
movlps
shl
xchg
add
sbb
add
or
repz
adc
mov
jg
not
mov
jp
cmp
and
lea
mov
dec
cmps
adc
pop
clc
jg
or
sub
sub
cmp
jge
pop
sub
pop
gs
jmp
or
stos
jl
add
jl
or
jecxz
fstp
sbb
push
xchg
jg
idiv
imul
mov
jl
scas
sbb
push
sbb
and
inc
add
ret
sub
xor
call
adc
adc
jb
push
stos
gs
fiadd
xor
jns
sbb
xchg
push
xlat
push
push
add
es
movs
add
sti
add
loopne
data16
adc
jae
pop
pop
and
call
js
inc
xor
and
addr16
das
and
sub
or
adc
cmp
add
(bad)
lahf
mov
enter
add
add
cmc
rol
mov
and
outs
xchg
xchg
xor
clc
fs
loope
scas
inc
add
ror
jmp
adc
or
pop
dec
pop
pop
inc
loopne
movs
pop
ja
push
push
sbb
nop
inc
dec
loope
stc
dec
push
xor
mov
outs
sbb
dec
and
call
aad
push
cmp
add
jle
in
sbb
inc
mov
imul
push
lods
lds
mov
dec
inc
and
inc
mov
push
rcl
ds
inc
rcl
out
idiv
mov
pop
mov
xor
jno
and
nop
(bad)
sbb
addr16
arpl
adc
imul
push
pop
(bad)
outs
loopne
pusha
movs
sbb
outs
xor
xchg
ret
in
push
push
je
add
xchg
pop
jmp
pop
test
jl
sub
sbb
js
sbb
push
jns
xchg
adc
mov
popa
xor
nop
jb
adc
and
or
fld
lea
cmps
adc
cmp
cdq
jo
xchg
dec
mov
ins
sbb
lock
dec
xchg
pop
lock
shl
test
(bad)
jmp
ror
mov
fs
jle
enter
cwde
dec
pusha
sbb
cmps
inc
scas
test
test
in
in
hlt
adc
adc
je
xchg
xchg
js
mov
pop
add
mov
fwait
sbb
adc
bound
dec
cmps
adc
xchg
dec
cmp
or
cli
clc
jp
mov
or
aad
and
aas
outs
fdivr
or
mov
or
jbe
mov
push
mov
inc
xor
into
push
fsubr
push
pop
jle
sub
push
inc
cmps
add
mov
data16
in
sub
sbb
sub
jb
jge
fmul
or
shl
mov
lods
mov
and
jns
mov
jno
mov
adc
mov
test
rol
enter
test
mov
fild
or
add
cmp
(bad)
sar
add
sub
loopne
or
adc
add
xor
cmp
xor
lds
gs
mov
adc
jo
adc
test
inc
or
adc
mov
sub
and
jb
inc
hlt
xlat
xchg
dec
or
in
in
adc
(bad)
add
fnstenv
dec
and
pop
push
stc
cmp
or
adc
add
rcl
adc
mov
xchg
xor
jae
pop
adc
jle
mov
fimul
mov
mov
push
inc
or
call
fcomp
inc
mov
inc
adc
call
inc
push
dec
push
sbb
sti
jge
movs
mov
dec
inc
pop
inc
xchg
fsub
int
push
xchg
dec
adc
sbb
sub
iret
mov
test
lahf
add
and
add
das
jmp
push
aaa
add
jo
jo
and
dec
xchg
add
add
int
mov
push
dec
lods
mov
pop
(bad)
enter
pop
les
mov
push
adc
frstor
cs
mov
sbb
inc
iret
out
inc
mov
hlt
loope
(bad)
or
jne
cmp
stos
cmp
xor
sti
rcr
cld
lods
retf
les
and
stos
cwde
rol
xchg
jno
add
out
cmp
mov
and
cmps
in
lock
cmps
es
test
push
add
les
retf
dec
pop
imul
inc
nop
ror
(bad)
movs
cmc
out
call
inc
push
push
add
sahf
or
cmps
scas
or
or
dec
cdq
rol
pop
mov
xor
bound
inc
add
pop
add
in
or
xchg
push
add
leave
add
lods
inc
inc
leave
pushf
icebp
add
mov
cmc
ss
(bad)
jns
pusha
sub
dec
sub
sub
xchg
mov
mov
or
jge
jl
add
hlt
add
lock
std
ins
retf
dec
and
inc
loop
sbb
add
fcom
scas
sub
les
ss
ss
push
pop
push
outs
sbb
mov
add
or
sbb
push
jmp
leave
sbb
out
cmp
xchg
adc
das
sub
icebp
pop
pop
test
dec
daa
cmp
xchg
or
mov
push
ds
mov
sub
jne
enter
ret
pusha
dec
scas
dec
mov
mov
mov
shl
popf
xchg
dec
mov
in
xor
mov
ror
hlt
jg
hlt
and
and
and
mov
inc
pop
xor
fild
jmp
adc
cwde
mov
jnp
xchg
pop
pop
jp
or
push
jne
sbb
js
push
mov
sbb
mov
cmps
arpl
push
jb
das
sar
or
mov
repz
(bad)
nop
mov
adc
adc
test
in
adc
sub
inc
push
mov
cmp
and
or
cmp
sub
push
sub
jle
loope
sub
outs
out
cdq
inc
add
dec
add
and
push
lods
ror
mov
mov
pop
mov
inc
aaa
inc
sbb
pop
or
lods
movs
and
mov
loope
sbb
ja
cmps
lods
inc
jns
cwde
ret
xor
add
add
mov
das
(bad)
lea
fmul
std
jne
std
push
push
mov
cmp
rcr
mov
xor
fist
std
dec
jmp
fnstenv
adc
add
js
retf
sbb
pop
sub
and
pop
push
push
adc
retf
sbb
xor
pop
or
xor
inc
push
adc
xor
faddp
inc
dec
and
pop
add
mov
out
xorps
push
outs
sub
cmps
add
cs
sub
or
inc
dec
scas
ret
add
fild
dec
inc
xchg
imul
and
aaa
les
test
lods
xchg
sub
jle
rcl
(bad)
fidivr
ds
sbb
fiadd
div
scas
inc
pop
and
dec
or
scas
adc
and
inc
xor
and
mov
ins
test
xchg
cli
hlt
add
loopne
mov
jnp
mov
inc
sub
in
daa
pop
adc
lods
shr
lea
sti
(bad)
(bad)
mov
jo
call
or
imul
inc
ins
das
mov
clc
adc
jno
cmc
push
xor
adc
push
sar
mov
jge
push
jle
push
or
cmp
pop
fs
sub
rcr
scas
es
or
arpl
test
call
loop
sub
int3
stos
jnp
movs
xchg
(bad)
shl
jecxz
imul
clc
stos
hlt
mov
dec
push
push
inc
or
push
sbb
add
lods
movs
repnz
call
lahf
jbe
jne
inc
or
ds
mov
add
jae
cmp
jne
pop
das
dec
and
jg
aam
cmp
or
and
pop
pusha
add
mov
shr
push
or
imul
xor
call
lods
rcr
push
loopne
jbe
je
lahf
adc
retf
pop
lock
cmp
xor
xlat
lods
xchg
les
mov
not
(bad)
cmp
je
push
sbb
pop
cmp
std
lea
mov
or
dec
add
fisubr
xchg
cmp
jmp
pusha
dec
cmp
adc
push
sub
daa
push
jge
add
fstp
mov
mov
rcr
cmp
outs
sub
push
loopne
lods
xor
pusha
adc
push
mov
inc
mov
dec
pop
loopne
test
loop
daa
xlat
loope
(bad)
inc
out
jae
add
cwde
es
inc
lods
add
inc
adc
mov
sbb
inc
inc
and
jno
xchg
rol
sbb
inc
fisttp
push
adc
inc
inc
mov
cmps
mov
fsubr
xor
push
adc
lods
xor
and
pusha
imul
sar
adc
mov
sbb
pop
cld
je
in
xchg
mov
call
add
xchg
nop
fucomip
jle
lods
iret
push
aam
or
or
(bad)
pop
push
sar
inc
inc
push
int3
mov
sbb
int
pop
and
ds
bound
or
or
xlat
inc
sbb
xchg
sbb
dec
test
add
in
outs
mov
sbb
mov
pusha
nop
fadd
add
lahf
cmp
mov
in
outs
bound
jle
test
jl
xor
lock
jnp
dec
loopne
ss
ss
es
push
lahf
pushf
sub
mov
xor
cmp
lock
push
push
inc
and
inc
sbb
inc
lods
sbb
mov
js
lea
fld
or
gs
push
sub
adc
(bad)
call
(bad)
jnp
ins
and
aad
clc
pop
adc
sahf
jg
push
push
sbb
es
dec
xor
jecxz
xor
inc
or
or
(bad)
cmp
call
stc
pop
test
mov
mov
je
jbe
sub
mov
iret
mov
and
addr16
mov
aaa
adc
popa
sub
inc
mov
mov
in
fld
jo
mov
shl
dec
mov
pop
sub
add
test
scas
mov
push
pop
push
mov
fucomip
pop
adc
les
lock
cmp
and
lods
dec
mov
ret
js
dec
jecxz
push
movs
mov
loopne
or
mov
cmp
inc
jg
pop
cmps
sti
and
sbb
cld
dec
arpl
call
loope
jno
out
pop
ins
shr
add
push
jno
shl
imul
sub
mov
test
rol
xchg
out
jmp
popf
mov
and
cmp
ret
or
sbb
and
cmp
out
sbb
or
adc
add
add
lds
sbb
and
pop
dec
push
adc
das
enter
push
bound
mov
data16
shl
add
mov
fisub
icebp
mov
les
xor
add
or
jne
ror
inc
je
shl
inc
inc
addr16
adc
fidiv
push
xor
popa
sbb
outs
js
aaa
inc
push
movs
out
xor
ins
xor
pop
shr
lods
in
fidivr
mov
test
xchg
imul
push
daa
mov
pop
fdiv
xchg
xor
enter
jg
add
pop
mov
or
(bad)
mov
pop
pop
stc
fmul
or
in
outs
mov
push
pusha
pop
mov
int3
inc
and
inc
fwait
popf
mov
add
sub
inc
add
inc
push
adc
sub
add
sub
and
or
rol
and
test
ret
or
daa
aam
cmp
sar
bound
ret
inc
inc
aad
aam
adc
push
push
scas
xchg
aam
and
dec
sbb
out
ficom
rol
ja
jge
(bad)
adc
popa
popa
ins
sub
dec
sbb
ss
mov
sub
sbb
sbb
sbb
jmp
shl
mov
les
rcr
jne
dec
pop
popa
call
mov
or
loopne
shr
dec
pop
dec
inc
cmp
pusha
add
sub
sahf
and
sub
iret
or
adc
mov
xor
jo
pusha
or
aaa
mov
or
pop
pop
repz
pop
sar
mov
pop
xor
xchg
sub
jmp
push
movs
lea
push
xor
push
icebp
inc
push
pop
mov
cmp
jle
loopne
dec
sub
hlt
test
repz
push
lods
mov
push
push
ins
ret
push
fsub
inc
dec
sti
iret
add
sub
and
and
dec
lea
cmp
sbb
or
das
cmp
adc
loope
ret
(bad)
mov
and
js
cmps
xchg
dec
sbb
mov
jg
and
inc
daa
ins
or
and
call
or
ret
aad
les
jge
inc
jnp
or
jo
je
xor
rcl
inc
push
imul
cwde
les
jnp
fisub
call
shr
loop
nop
mov
popa
clc
lea
mov
ret
mov
out
aam
fmul
or
sub
adc
add
cdq
or
mov
sub
push
ja
cmps
cwde
sub
jge
inc
dec
mov
inc
sbb
mov
or
rol
push
push
pusha
jecxz
and
stos
inc
sub
inc
sub
mov
inc
jg
cmp
jnp
icebp
jge
(bad)
fcmovbe
or
mov
outs
mov
add
add
sub
fcom
fild
push
adc
pop
enter
fisttp
fild
pop
and
inc
pop
(bad)
and
inc
adc
neg
cmps
cmps
aad
xchg
xchg
pop
and
sbb
shr
or
and
adc
out
add
mov
mov
mov
add
arpl
cvttps2pi
cmp
bswap
xchg
pop
pop
sbb
shl
mov
inc
adc
addr16
jmp
mov
sub
or
adc
cmp
cwde
jnp
test
pop
xchg
sbb
inc
jmp
movs
cmps
jo
jns
add
fisttp
push
adc
sub
pop
mov
dec
fadd
sar
mov
mov
fs
ret
dec
lea
jnp
sbb
je
in
sub
cdq
jne
in
rol
mov
sub
test
aam
movs
jb
int3
call
push
add
aam
xchg
or
inc
imul
and
addr16
or
mov
loopne
cld
popa
movs
cmps
xor
nop
lock
dec
dec
dec
push
xchg
lods
fist
imul
or
inc
xchg
add
pop
push
daa
arpl
cwde
or
out
adc
das
push
mov
pusha
movs
or
mov
loope
mov
dec
push
das
inc
in
adc
mov
inc
out
push
mov
dec
jae
pop
in
fmul
add
test
into
cmp
sbb
push
sbb
(bad)
cwde
jo
je
mov
mov
dec
add
mov
push
in
cmc
push
mov
cmp
mov
lahf
xor
push
jae
int
push
xor
ret
fisttp
(bad)
sub
and
das
ja
rcr
cs
mov
in
sbb
dec
mov
pop
jmp
call
fcom
xchg
xchg
sbb
mov
mov
xchg
or
sub
dec
in
push
popa
call
mov
fsubr
test
shl
fldcw
stos
js
inc
sub
mov
or
dec
stos
hlt
push
mov
pop
pop
fsubr
dec
mov
or
dec
(bad)
sub
ret
mov
dec
(bad)
mov
xchg
xor
pop
push
shr
xchg
and
icebp
inc
aas
ficom
and
xchg
js
sub
xchg
xor
cdq
cmc
retf
je
lods
mov
cmp
les
add
inc
mov
sub
jg
xlat
mov
sub
mov
pop
add
ins
or
aas
xor
ins
mul
nop
mov
loopne
add
rol
imul
fadd
and
add
jmp
enter
add
(bad)
jmp
pop
daa
adc
mov
jae
aaa
mov
adc
push
push
add
push
fist
add
into
mov
repnz
pop
cmp
sbb
iret
test
je
adc
es
pusha
es
fcmovb
cli
sub
inc
or
or
jb
inc
inc
or
add
mov
cmp
mov
scas
sub
adc
sbb
je
int
in
inc
adc
fild
jp
inc
xlat
scas
add
add
mov
add
and
pop
mov
lahf
fiadd
fst
xor
dec
sbb
outs
inc
pop
push
test
or
jo
out
add
and
hlt
mov
adc
test
jmp
mov
pop
and
cmps
adc
jno
xor
push
add
les
cmp
inc
mov
cli
jnp
mov
iret
xchg
iret
repz
out
push
sbb
loope
lds
pavgb
aad
movs
cmp
push
iret
fild
inc
or
shr
movs
cdq
bound
adc
mov
cdq
inc
sbb
int3
dec
add
dec
dec
call
dec
and
dec
mov
add
xchg
pop
ret
test
sbb
sub
pusha
ret
mov
push
and
cmps
mov
xchg
mov
cmp
popa
mov
inc
cmp
aaa
xchg
push
pusha
adc
scas
retf
jmp
dec
xor
pusha
ficom
xor
dec
fisub
call
sub
or
sub
sbb
movs
xchg
wbinvd
dec
ins
ds
cmp
push
cmps
ds
xchg
add
retf
sbb
arpl
jne
lea
or
and
das
adc
int3
xor
or
xchg
adc
inc
je
arpl
outs
mov
out
mov
jb
add
adc
in
inc
sub
pusha
pop
in
and
mov
out
push
int
fwait
movs
scas
push
mov
or
or
scas
dec
lods
and
pop
(bad)
xlat
sbb
and
or
shl
push
cmc
xor
shl
push
ret
lfs
mov
fldenv
cdq
int3
cmps
push
mov
out
sub
imul
jecxz
(bad)
loop
push
pushf
push
add
push
push
mov
outs
inc
sahf
cmp
inc
mov
add
or
in
ror
rol
mov
out
xor
sar
sbb
add
idiv
pop
and
cs
dec
(bad)
and
pop
cmp
jp
or
push
add
mov
or
and
push
push
fs
xor
mov
dec
push
mov
fs
add
lds
outs
cmp
add
fld
and
mov
(bad)
xor
cvttps2pi
iret
sub
mov
adc
aaa
cmp
jnp
mov
dec
mov
inc
or
nop
scas
imul
aas
je
dec
adc
pop
aad
adc
and
cmps
dec
adc
sbb
sar
ins
sub
out
stos
and
aam
cmp
loopne
xor
aam
les
jle
pop
adc
sbb
inc
jnp
rol
es
lea
push
or
cwde
dec
mov
inc
loopne
out
push
mov
or
mov
or
es
popa
sub
cwde
inc
js
dec
arpl
cmp
enter
inc
cdq
je
shl
mov
and
cmp
push
cs
mov
ret
ss
ror
retf
jmp
adc
and
xor
sar
push
xchg
xchg
mov
test
adc
out
add
dec
imul
mov
cmps
add
inc
and
mov
jmp
cmp
stc
test
aam
mov
jge
xchg
add
aam
lea
in
mov
outs
aaa
or
or
xchg
xor
add
fsub
push
fild
(bad)
call
ja
sub
and
xor
xchg
xor
cmp
fmul
inc
scas
inc
add
xchg
sbb
inc
leave
lock
test
dec
mov
imul
sub
lods
mov
lock
or
xor
lods
inc
sbb
xor
xlat
adc
lock
shl
and
sbb
imul
ja
sbb
adc
sbb
and
(bad)
mov
pop
push
add
mov
inc
and
ins
enter
dec
xchg
xor
(bad)
sar
adc
aaa
popf
out
cmps
je
aaa
cmp
test
ins
ss
ret
bswap
retf
jbe
shl
loope
jl
imul
lods
jmp
and
jmp
push
jg
(bad)
dec
dec
into
outs
(bad)
jmp
xor
mov
ss
popf
out
adc
xor
push
dec
inc
dec
sub
mov
or
mov
nop
xor
jb
mov
ja
hlt
xor
popf
retf
add
and
inc
aas
xor
adc
pop
fimul
jle
rcl
jmp
(bad)
mov
mov
loopne
mov
push
mov
sub
sbb
inc
mov
daa
and
pop
mov
in
pusha
lds
or
adc
aam
nop
add
outs
es
xchg
mov
mov
or
lds
mov
adc
push
cli
add
sub
mov
pop
scas
and
bound
das
xchg
std
sub
cmp
jb
and
ret
inc
inc
inc
jae
stos
stos
add
or
loopne
cmovnp
jg
add
mov
inc
mov
push
add
ss
and
retf
les
mov
movs
test
rol
push
adc
mov
jmp
mov
jae
mov
outs
adc
mov
sub
add
ins
mov
add
xor
jbe
sbb
adc
cmp
cmp
loopne
push
xor
and
xor
clc
sar
out
sub
inc
jmp
sti
xchg
inc
mov
xor
mov
jmp
clc
or
call
stc
mov
mov
mov
jmp
test
ud2
inc
clc
mov
or
jmp
xlat
ss
xchg
jmp
push
shr
or
add
pop
and
int
fist
push
rcl
inc
rol
sbb
int
rcr
and
inc
rcr
aam
pop
and
sub
sub
pop
and
inc
xor
xor
int
shl
cmp
fiadd
pop
cmp
add
lock
xchg
inc
call
xor
imul
add
add
in
cs
dec
adc
adc
adc
sub
mov
add
cmp
shl
(bad)
sub
or
pop
dec
xor
and
cmp
xchg
xor
or
jae
xor
and
xchg
xor
dec
and
and
pop
dec
jae
sub
inc
sub
dec
mov
xor
add
sbb
xor
jmp
push
adc
adc
adc
cmp
pop
cmp
mov
adc
and
cmp
dec
xor
and
dec
cmp
imul
sbb
out
and
xor
cmp
sbb
or
cmp
sbb
or
out
push
pushf
dec
sbb
xchg
xchg
add
adc
out
js
jmp
jmp
xor
adc
jl
sbb
dec
shr
xor
mov
test
and
sub
xchg
mov
nop
imul
sbb
xor
adc
sub
push
test
add
mov
adc
and
outs
xlat
add
fmul
shl
rcl
adc
add
or
or
cs
inc
test
pop
fwait
mov
les
xor
xor
mov
sbb
out
(bad)
cmp
iret
pop
test
gs
xchg
ja
ret
sub
(bad)
aam
sbb
cwde
cmp
fld
dec
into
arpl
rcl
lahf
test
mov
pop
jle
dec
shl
xchg
mov
or
add
xchg
ret
icebp
repnz
cmp
loope
add
jno
mov
and
fs
mov
outs
enter
add
xchg
out
inc
jmp
fsub
xchg
test
fwait
push
push
lock
dec
mov
div
sbb
add
arpl
cs
jnp
cmp
imul
jnp
lea
leave
stos
or
inc
call
popa
or
xchg
sbb
xor
sti
cmp
repz
mov
je
or
sbb
jecxz
js
je
(bad)
pop
add
inc
dec
jne
into
dec
and
sub
xchg
xchg
xchg
xchg
movs
mov
xchg
xchg
xchg
nop
mov
mov
clc
out
clc
pop
je
and
push
mov
push
mov
jne
in
movs
or
lock
bswap
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
adc
xchg
ins
add
test
call
push
cdq
nop
aaa
mov
jo
or
stc
aas
pop
push
add
add
inc
add
push
aas
mov
mov
clc
rol
pushf
or
dec
loopne
or
or
sti
scas
or
push
pop
mov
inc
jl
mov
das
pop
arpl
test
push
add
cli
fld
movs
push
lds
xlat
mov
mov
xor
leave
cdq
int
cli
sub
adc
fucomp
or
outs
(bad)
sbb
les
ret
or
daa
es
add
mov
stos
js
sbb
in
pop
inc
xchg
push
and
scas
sbb
and
add
jbe
cmp
mov
push
and
lahf
mov
rcl
and
leave
nop
in
dec
pop
fsub
sub
or
or
jb
or
adc
cwde
push
xchg
or
daa
aas
iret
and
cld
push
sub
loopne
cmp
aam
dec
jb
and
fcomp
and
xchg
pushf
fsub
loopne
cmp
leave
in
mov
leave
popa
(bad)
push
jg
cld
push
xchg
mov
ror
ins
outs
jae
std
and
or
add
push
fld
adc
sti
sbb
mov
lock
xchg
push
test
cmp
cli
cmp
out
imul
mov
add
xor
inc
stos
xchg
and
xor
ret
xor
mov
jns
xchg
xlat
add
retf
xchg
lahf
(bad)
std
call
mov
xlat
xchg
lea
mov
pop
pop
adc
xchg
pop
mov
mov
iret
xchg
jmp
cmps
test
clc
or
push
hlt
jmp
mov
scas
push
adc
push
sbb
pop
lock
push
dec
fcom
push
nop
es
in
jmp
inc
not
add
rcl
aas
cmp
(bad)
sbb
ja
or
xchg
fst
xchg
jmp
arpl
iret
aas
dec
push
jno
xor
mov
push
mov
retf
sub
mov
scas
mov
or
cdq
dec
out
std
sub
add
cmp
shr
xchg
test
adc
aam
popa
je
or
jb
stos
push
jmp
bound
push
jae
inc
cli
add
imul
jo
dec
das
enter
and
aas
in
add
ret
or
inc
pusha
dec
ja
inc
cmp
sahf
push
in
fdivr
pop
retf
mov
xchg
add
inc
sahf
daa
in
inc
add
pusha
mov
sahf
pop
add
mov
pop
repnz
or
jo
enter
mov
or
xchg
add
je
scas
dec
in
and
mov
pop
push
cmps
sub
mov
add
mov
push
inc
je
mov
mov
lahf
and
inc
xor
push
(bad)
and
pop
and
mov
adc
(bad)
int3
mov
or
push
mov
enter
imul
and
fist
mov
jne
xchg
push
add
inc
adc
add
push
mov
les
dec
dec
daa
mov
pop
js
cmps
popf
xor
fisttp
daa
mov
pop
xchg
dec
and
iret
lds
ins
pop
pop
cwde
iret
adc
nop
add
sub
xor
push
ins
mov
js
xchg
loopne
das
pop
sub
or
cmp
add
in
cmps
aam
xor
cmp
cmp
inc
ds
pushf
call
dec
cmps
shl
(bad)
push
pop
mov
pusha
fs
ins
push
in
mov
adc
add
cli
div
ds
ret
ret
inc
scas
sub
cmp
sub
ja
xchg
pop
js
add
inc
cmc
mov
movs
and
xor
jne
lahf
cmp
jg
push
sub
jmp
cmp
rcl
pop
pop
add
je
imul
pop
into
add
out
pushf
add
arpl
mov
nop
fs
jl
sub
or
ja
adc
loopne
add
push
retf
push
add
out
or
adc
pop
popa
and
inc
jne
xchg
push
popa
rcl
aaa
das
inc
psraw
adc
or
sub
pop
lea
in
movs
jns
push
je
jl
add
mov
push
ret
daa
hlt
imul
fmul
inc
mov
sbb
inc
loope
enter
sbb
ja
test
dec
in
div
mov
add
xor
ret
and
jmp
loopne
cmp
(bad)
cmp
fcom
mov
(bad)
sahf
jbe
stc
inc
je
ret
xchg
adc
inc
cli
cmp
mov
arpl
sbb
jns
retf
adc
add
push
iret
sbb
icebp
mov
imul
pop
inc
mov
xor
pushf
sbb
jmp
jnp
add
add
fbstp
add
cs
fimul
xor
push
aam
add
aaa
xchg
(bad)
sbb
add
or
in
add
push
push
push
jbe
aam
cmps
add
dec
(bad)
ins
or
loop
lds
adc
int
in
xchg
cmps
je
inc
or
inc
inc
addr16
(bad)
(bad)
dec
jl
jp
rcr
mov
nop
clc
lods
adc
dec
pop
xchg
lock
fs
sub
mov
mov
push
and
cdq
mul
adc
push
xchg
out
inc
sbb
hlt
fmul
mov
and
pop
in
pop
in
and
add
mov
cmp
pusha
cmc
mov
(bad)
hlt
int3
inc
xchg
cmp
add
mov
xor
das
add
ds
xchg
test
pop
in
push
cmp
lock
ja
mov
fmul
jl
inc
mov
add
push
push
inc
(bad)
imul
enter
or
shl
cmp
sbb
es
dec
or
sub
cmovnp
jns
out
or
imul
repz
js
cmp
dec
clc
and
dec
outs
xchg
push
out
movups
dec
dec
dec
or
cld
sar
xor
sahf
xchg
jno
inc
xor
imul
sub
sbb
mov
add
and
pop
test
push
xchg
add
push
movs
pushf
mov
push
sbb
int3
gs
sub
mov
or
in
(bad)
cld
dec
in
xchg
enter
sbb
add
jnp
ret
rol
add
or
push
mov
adc
repnz
je
sar
aaa
dec
xor
jle
data16
retf
pop
dec
pop
pusha
fcmovnu
mov
aaa
das
arpl
imul
ins
jnp
add
ins
pop
jne
adc
aas
push
push
ffree
(bad)
out
js
cmps
jge
jge
pop
fidiv
push
or
fiadd
inc
in
adc
or
in
mov
dec
cs
mov
int3
ss
retf
mov
pmulhuw
jae
jecxz
(bad)
add
push
pusha
xchg
adc
xchg
or
gs
call
in
lock
hlt
nop
retf
sbb
xor
dec
add
inc
add
or
add
xchg
or
adc
sbb
and
push
movs
xor
and
sub
xchg
dec
push
add
sub
jne
movs
xor
xor
and
push
push
xchg
adc
xlat
add
adc
inc
sub
mov
inc
pop
push
add
daa
stos
inc
sbb
push
mov
push
(bad)
adc
add
xchg
mov
jbe
and
fstp
inc
add
fidiv
call
(bad)
in
adc
push
jae
(bad)
add
jo
gs
inc
or
imul
mov
imul
or
inc
cmps
push
push
fld
sbb
aaa
scas
cmp
sbb
add
or
(bad)
and
push
pop
push
push
test
dec
sub
test
xor
ds
or
lahf
add
adc
or
xchg
test
adc
push
push
sub
xor
cmp
sub
jg
adc
in
jbe
adc
dec
jge
cdq
jle
mov
mov
lods
ret
mov
lea
xchg
xor
mov
push
outs
jnp
adc
pusha
fst
lahf
fwait
add
adc
add
dec
lds
inc
popa
or
inc
add
(bad)
pusha
fiadd
inc
clc
add
in
scas
lea
add
and
jmp
outs
shl
push
adc
sub
jbe
pusha
sub
sub
jae
xor
add
ret
cmp
cmps
mov
loop
sub
(bad)
fdiv
push
add
not
sbb
div
ins
or
sti
inc
(bad)
push
(bad)
inc
dec
in
sbb
adc
pop
neg
mov
sti
pop
sub
popf
adc
inc
pcmpeqw
xchg
test
clc
fistp
sar
pop
cmp
jle
and
hlt
pushf
arpl
ja
aam
arpl
rol
add
push
adc
ficomp
dec
and
shl
adc
push
ins
lea
sbb
test
int
inc
add
push
xor
stos
test
lea
dec
test
mov
pop
sahf
jno
jg
adc
sbb
ret
and
or
fiadd
pop
and
mov
mov
mov
mov
sub
add
inc
sub
jo
pop
jno
mov
imul
rcr
jo
jb
and
retf
xor
inc
add
or
or
imul
add
ret
and
ja
pop
les
xor
and
test
pop
pop
pop
push
in
xchg
lds
in
xchg
push
js
xchg
iret
bound
enter
mov
icebp
lods
xor
xor
mov
popa
lods
fst
push
or
int
sbb
and
xchg
sub
mov
sub
or
popf
cld
cwde
add
mov
ffreep
ds
sub
sub
add
lahf
xor
xor
shl
and
add
push
push
imul
adc
or
push
ror
and
push
push
add
pop
pop
jge
or
jge
push
aaa
sbb
push
push
fmul
popf
inc
jp
push
or
jo
sbb
aas
mov
cmp
push
dec
adc
jb
jmp
cmp
es
mov
ss
cmp
jmp
sub
pop
dec
iret
or
or
sub
out
mov
scas
cmp
shl
daa
test
xchg
mov
xchg
je
ss
jo
add
sahf
idiv
or
stc
or
fild
add
je
test
fdivr
or
pop
loope
cmp
loopne
movs
fbstp
add
adc
std
add
mov
mov
fstp
mov
(bad)
outs
add
inc
or
aad
adc
nop
sbb
addr16
fld
cmps
and
nop
sub
cmp
pop
add
rol
inc
inc
pop
sbb
adc
xchg
add
dec
es
jg
adc
inc
outs
inc
add
outs
cmove
xchg
push
pop
test
hlt
mov
enter
lods
mov
or
call
jns
lea
cmp
lds
imul
dec
mov
and
and
mov
fdivr
jnp
sbb
xor
cmps
retf
mov
and
sbb
cmps
jno
xchg
lea
rol
pop
push
push
xchg
ja
jecxz
shl
mov
test
dec
ror
mov
outs
stos
dec
clc
push
sub
fcom
add
cdq
leave
inc
mov
dec
es
mov
setp
hlt
jl
and
test
es
mov
and
je
xchg
mul
inc
ret
sub
or
in
xchg
(bad)
aas
rol
and
dec
sub
test
(bad)
sub
sub
cs
cmp
and
loopne
dec
aaa
dec
aas
aas
scas
push
ret
fsub
xor
into
ins
loop
inc
jg
sbb
clc
loop
jecxz
add
rcl
jmp
mov
cmp
push
push
sbb
test
xchg
outs
(bad)
clc
das
ins
dec
push
and
aaa
mov
add
sbb
mov
(bad)
inc
data16
les
sti
pop
add
lods
das
add
and
xchg
xchg
pushf
inc
inc
(bad)
shl
call
cdq
(bad)
cmp
mov
adc
inc
sbb
imul
(bad)
cmc
cmp
inc
ffree
dec
adc
mov
cmp
add
(bad)
aam
icebp
push
sbb
inc
jae
xchg
or
es
outs
stc
pop
cmp
paddusb
push
adc
add
inc
adc
pop
push
cmps
sub
push
and
push
dec
cmps
jge
or
adc
inc
lahf
cmp
test
inc
mov
push
or
inc
dec
lar
or
popa
je
xor
dec
push
push
cmp
xor
pop
ret
dec
shl
jg
jle
ror
add
add
push
aam
dec
dec
loop
or
jb
inc
adc
fdivr
paddusb
jo
push
add
dec
sub
push
enter
lahf
or
in
sbb
jmp
push
sub
dec
scas
nop
out
(bad)
ins
xor
inc
xchg
add
pop
test
or
scas
nop
shl
cld
and
jnp
outs
adc
clts
data16
shl
movs
in
push
sub
push
mul
jecxz
jg
and
and
clc
cmovns
vmovdqu
push
imul
loope
lods
xor
adc
jle
mov
add
ja
aas
stos
sbb
fs
ins
jo
pusha
js
jb
add
out
push
pop
cmp
outs
(bad)
xor
stos
add
inc
movs
call
or
retf
mov
xchg
and
jae
or
outs
or
mov
mov
push
imul
or
jb
ret
(bad)
out
add
cmp
xchg
shl
xchg
mov
adc
sbb
outs
fadd
dec
movs
bound
inc
inc
xor
dec
adc
bnd
xchg
dec
mov
out
adc
inc
test
jmp
gs
into
dec
xchg
lods
mul
je
add
xlat
(bad)
(bad)
xchg
scas
sub
out
scas
sbb
push
xchg
rol
pop
push
push
in
outs
jbe
movs
or
add
add
mov
adc
or
sbb
sbb
push
test
cs
call
iret
sar
push
sbb
fnstcw
sub
push
or
(bad)
out
fcos
mov
push
add
nop
sub
sbb
adc
imul
es
adc
cs
ins
sub
sub
pop
daa
jecxz
ret
jae
push
(bad)
in
cmp
and
ss
or
stos
shl
sahf
out
fimul
inc
adc
movs
and
out
iret
jnp
ds
push
ins
and
repz
sahf
pop
sub
xchg
xor
js
mov
xor
xchg
les
pop
movs
push
mov
test
push
scas
sub
or
sahf
cmps
pop
add
adc
pop
shl
xchg
mov
shr
bswap
push
lahf
dec
xor
aaa
push
sbb
mov
movs
pushf
jge
gs
dec
jle
ror
sahf
repz
dec
or
shr
loopne
xlat
dec
daa
dec
sub
push
retf
inc
or
pop
int3
dec
mov
retf
or
ins
sub
cs
dec
imul
add
es
or
xchg
adc
or
adc
and
add
dec
cmp
outs
jmp
sub
mov
pop
punpckhbw
dec
xchg
js
out
test
inc
repz
dec
dec
cld
mov
dec
ins
test
mov
xor
neg
push
int
sbb
mov
lds
or
or
sbb
mov
pop
sub
push
cmp
adc
das
xor
push
test
or
pop
sbb
mov
adc
mov
or
clc
in
dec
ins
pop
fist
sub
or
lahf
in
xor
js
adc
push
add
call
shl
cmps
jne
cmp
push
sti
push
xchg
xchg
xchg
xchg
or
adc
(bad)
jb
imul
jb
jb
xor
sar
sub
add
dec
sbb
xchg
or
xor
or
and
sbb
cmovb
mov
imul
and
icebp
pop
nop
mov
sbb
scas
mov
das
adc
jns
das
adc
dec
inc
inc
arpl
push
and
enter
dec
push
enter
xchg
sub
hlt
inc
pop
pop
scas
ss
addr16
fcomp
inc
and
dec
inc
daa
lods
pop
jle
inc
xor
cmp
sahf
xor
add
retf
jmp
push
mov
fbld
push
adc
mov
out
jnp
mov
repnz
inc
inc
cmp
mov
dec
or
ret
sbb
mov
mov
lods
dec
sbb
and
sbb
inc
or
leave
and
jns
or
dec
cs
inc
dec
adc
pop
fiadd
repnz
or
dec
aaa
adc
cmp
lods
push
xor
mov
into
arpl
scas
mov
cmp
mov
addr16
(bad)
bound
adc
paddsb
push
ret
ss
fmul
ror
test
add
xchg
pusha
mul
cmp
repnz
and
pusha
in
in
add
shr
pop
mov
push
pop
push
rcr
imul
mov
xchg
shl
int
inc
mov
je
retf
push
fwait
and
add
sti
cmp
or
nop
sti
pop
and
fs
mov
dec
rol
or
clc
xor
jmp
add
or
and
inc
icebp
xchg
push
popa
xchg
xor
jecxz
push
or
cwde
ins
pop
lahf
lods
adc
(bad)
mov
and
pop
cmp
out
sar
and
shld
push
push
cmp
icebp
loopne
adc
cmp
jecxz
push
out
mov
ins
and
cmp
adc
outs
and
shl
add
mov
mov
in
pop
jne
idiv
or
(bad)
out
add
add
shl
push
out
mov
pop
ins
xor
mov
add
test
das
je
mov
sub
loopne
lahf
sbb
outs
cs
fwait
cmps
add
xor
loope
or
(bad)
je
pusha
imul
adc
(bad)
mov
or
js
mov
pushf
(bad)
jle
dec
mov
out
je
sbb
xchg
inc
sub
mov
jnp
scas
and
push
dec
sub
xor
ja
add
je
pop
ins
fcomp
pop
pop
(bad)
(bad)
cmp
cld
inc
cmp
in
imul
cmc
ins
add
inc
inc
cs
pop
loopne
pop
xor
mov
sbb
add
idiv
fcom
add
jecxz
psraw
fisubr
pop
adc
test
ret
mov
dec
pop
push
js
xor
and
and
ins
pop
mov
push
push
jecxz
sbb
inc
sti
mov
dec
repz
or
jne
ret
xor
adc
les
stc
outs
das
sbb
cmps
fld
(bad)
(bad)
lea
loop
(bad)
outs
(bad)
xchg
jno
xchg
jo
in
fcmovbe
stos
jb
push
jmp
ins
sbb
inc
outs
retf
mov
add
xlat
shr
dec
push
ss
push
imul
je
fdivr
fiadd
ret
adc
bound
inc
xchg
xor
js
pop
inc
mov
inc
sbb
mov
adc
xor
xchg
lea
pmuludq
(bad)
loopne
cld
sbb
int
sbb
shl
fwait
cwde
retf
mov
xchg
test
add
dec
fmul
mov
cli
pop
repnz
sbb
and
add
add
add
push
shl
inc
test
in
test
or
cmps
adc
inc
jne
cmp
popa
and
xchg
ja
push
dec
hlt
and
sbb
fdivr
mov
imul
mov
mov
jo
sbb
mov
inc
sbb
stc
(bad)
pop
xor
in
inc
outs
pop
add
int3
pop
lea
cmp
cmp
or
inc
pusha
sbb
pop
xchg
loop
or
lods
and
cmp
inc
sbb
or
stos
sbb
mov
add
sbb
sub
es
jb
pop
test
sbb
xchg
popa
cmps
add
movs
or
mov
jmp
mov
or
mov
xor
pushf
cs
pop
inc
push
dec
dec
dec
sub
daa
xchg
dec
inc
push
daa
test
jns
or
call
mov
or
punpckhbw
jmp
add
je
hlt
lea
jb
(bad)
mov
xchg
jo
jge
push
js
mov
or
iret
call
adc
adc
and
xor
ins
cmp
je
push
pop
push
pop
xor
push
je
ret
jl
push
cmp
imul
add
out
out
aaa
cmp
je
push
je
push
xor
jbe
jbe
pop
push
enter
shl
call
lahf
pusha
clc
in
inc
push
xor
cmp
mov
out
push
mov
adc
push
add
push
jns
loopne
lock
sub
or
je
inc
adc
or
pop
sbb
adc
adc
or
push
jp
mov
adc
add
jle
and
test
movs
out
pop
cld
fistp
adc
dec
scas
adc
lea
jle
cmp
jg
div
adc
sub
xor
rcr
pop
sbb
push
ret
sbb
dec
pushf
add
push
lea
dec
sub
dec
cs
sbb
shr
cmp
add
ja
repnz
push
outs
push
or
push
std
stos
or
add
pop
aaa
dec
dec
xchg
cmp
rol
and
inc
(bad)
scas
fs
jl
add
mov
and
push
movs
rcr
xchg
ret
or
(bad)
das
dec
xchg
cmp
mov
das
loope
push
leave
(bad)
cs
jae
inc
add
xor
sub
movs
sub
cmp
aaa
sbb
cli
xor
mov
cli
div
jmp
mov
daa
adc
test
mov
or
mov
enter
and
adc
pop
adc
inc
and
inc
(bad)
dec
cmp
mov
gs
push
pusha
sub
test
pushf
es
js
mov
or
xchg
xor
xor
jns
cmp
mov
mov
test
shr
dec
dec
add
test
or
and
mov
mov
ret
jg
rcr
adc
inc
push
daa
je
and
and
addr16
aas
es
dec
adc
jmp
cdq
je
add
dec
dec
or
adc
xor
and
add
cmp
outs
and
sub
imul
and
sbb
jae
sub
inc
add
add
pxor
mov
inc
mov
js
inc
mov
setl
add
add
cdq
and
fcomp
cmp
sar
push
mov
pop
xor
cdq
jo
aas
inc
adc
jmp
stos
cdq
scas
jge
pop
xor
and
adc
or
(bad)
js
jmp
add
dec
mov
add
xor
dec
stos
cld
xlat
sbb
mov
ins
cmp
ret
movs
sbb
ret
and
jne
pop
ror
add
fwait
inc
mov
and
pop
ins
movs
(bad)
ficom
xor
cmps
test
inc
sub
fidivr
lods
or
aas
(bad)
(bad)
into
mov
add
cmp
cmc
pop
fistp
mov
lea
scas
call
outs
add
inc
pusha
xor
add
or
xor
pop
jne
pop
idiv
imul
neg
mov
sub
fidivr
add
popa
std
push
sbb
lds
add
jmp
pop
inc
sbb
adc
mov
lea
jb
pop
pop
outs
movs
jnp
push
mov
mov
and
sbb
lea
and
js
cwde
ja
push
mov
inc
cmp
inc
clc
sbb
inc
cmp
inc
mov
pop
pushf
fs
test
xchg
in
adc
mov
adc
cmp
mov
add
dec
scas
dec
adc
xchg
and
pop
or
test
inc
and
cmp
inc
cld
dec
sub
xor
sbb
adc
dec
or
and
test
or
mov
les
or
mov
push
sub
pop
push
dec
mov
jecxz
or
nop
inc
aaa
gs
mov
inc
imul
sub
mov
lock
push
lods
dec
jb
rol
mov
xor
hlt
popa
cmp
daa
dec
or
addr16
and
movhps
iret
sbb
(bad)
pushf
nop
or
mov
push
pop
xchg
adc
dec
add
in
xor
adc
push
sbb
mov
mov
hlt
push
mov
inc
aad
xor
and
popa
pusha
por
daa
push
pop
out
fcomp
fs
outs
sbb
inc
mov
hlt
cmps
mov
sub
xor
cld
sbb
in
or
mov
fs
sub
mov
xlat
pop
sar
xor
or
jmp
int
test
dec
inc
mov
add
dec
mov
sub
sub
fs
or
sub
out
cli
xor
jl
xchg
inc
sub
or
xchg
or
aam
and
inc
inc
fbstp
jle
lea
pop
jge
or
outs
mov
lock
or
add
mov
add
in
and
stc
jle
mov
add
retf
mov
xchg
enter
xchg
in
jl
std
in
cld
aas
xor
push
mov
mov
push
cmp
jg
fisttp
pop
sub
(bad)
jmp
push
jbe
push
test
push
mov
sbb
fbld
xchg
daa
icebp
(bad)
leave
call
mov
dec
cmps
test
adc
push
pop
inc
inc
fsub
and
sbb
and
add
cwde
xchg
xchg
push
mov
sub
movs
out
xor
xor
cmp
push
sbb
mov
fcom
cwde
push
and
push
mov
(bad)
inc
add
dec
ret
xchg
adc
aam
enter
sar
stc
or
mov
ror
bound
mov
ja
in
into
inc
pop
dec
or
test
mov
test
adc
js
inc
(bad)
or
and
ja
inc
or
dec
cmovle
xor
jo
sbb
or
or
mov
mov
clc
fisttp
push
retf
xor
fst
sub
movs
push
pop
dec
add
dec
sub
or
mov
loope
add
aam
add
idiv
xor
xor
add
ret
adc
jle
cwde
adc
sbb
sar
mov
add
dec
inc
jae
daa
xchg
adc
mov
pop
sbb
stc
ins
aaa
inc
jmp
xchg
or
xchg
xchg
xlat
dec
cmp
ja
push
rcl
test
adc
call
pop
es
sbb
or
and
mov
dec
jnp
push
cwde
adc
test
xor
jecxz
adc
xor
sbb
sub
jg
outs
sub
lea
sbb
sti
sub
add
pusha
fdiv
mov
or
jmp
xchg
or
out
push
fs
cwde
cmp
sbb
je
mov
test
fwait
pop
imul
add
mov
adc
sbb
and
in
aaa
lods
jmp
cmp
xchg
jmp
mov
push
push
fldenv
loope
fwait
add
dec
mov
add
dec
jmp
test
sti
movs
movs
pop
add
sub
push
mov
pop
inc
mov
dec
pusha
push
add
std
neg
ins
push
push
int
xor
and
nop
in
enter
add
fidiv
mov
dec
inc
pop
sbb
or
add
fimul
add
mov
mov
add
mov
cdq
or
scas
and
sub
fadd
jb
inc
pop
fcmovnbe
out
aas
in
mov
cmp
and
inc
outs
jne
rcr
in
inc
inc
add
ss
and
cli
call
(bad)
sub
or
mov
or
add
add
or
xchg
out
ss
adc
add
and
cmp
mov
jl
fwait
cdq
dec
es
lods
aam
dec
(bad)
outs
and
jmp
ins
bound
inc
pop
adc
cmp
jmp
and
hlt
fist
ret
jge
into
dec
jmp
pop
mov
and
into
mov
pop
mov
mov
add
dec
cmp
sub
dec
and
inc
mov
jp
or
or
or
inc
or
test
call
dec
inc
aas
or
or
or
inc
je
or
loop
lds
jle
cmp
cmc
test
inc
xor
pop
daa
enter
add
add
fmul
mov
hlt
into
jnp
ds
adc
mov
sub
xchg
adc
in
dec
xchg
xor
dec
retf
clc
and
xchg
jno
bound
test
aaa
add
int
inc
cmp
xchg
adc
jmp
enter
stc
mov
adc
xchg
cs
push
jne
push
mov
jo
adc
cmp
cmp
mov
xchg
xlat
sbb
inc
ss
out
mov
and
ja
adc
add
adc
push
sub
fwait
push
lock
in
xchg
test
cmp
and
repz
sub
add
dec
in
lods
mov
pop
push
dec
retf
push
add
cmp
test
mov
and
shl
mov
jns
adc
push
pop
pop
push
inc
test
pop
sbb
xchg
icebp
or
push
adc
lock
xchg
xor
sub
push
or
mov
les
mov
push
pop
bound
adc
in
sub
inc
cmps
idiv
and
rcl
sub
and
add
ret
adc
fist
sub
adc
lock
pop
ins
push
fist
shl
cmc
repz
xor
sub
push
out
or
mov
fs
push
add
sbb
add
or
bound
nop
data16
nop
lods
in
and
loopne
dec
pop
cdq
imul
add
test
jb
lods
and
fmul
retf
push
cmp
cmp
add
or
test
inc
popf
push
rol
cmp
ret
mov
call
and
jecxz
cmp
add
lods
cmps
xchg
loop
sbb
hlt
push
mov
and
mov
sahf
je
or
pop
shl
lods
push
rcl
dec
pusha
inc
test
jle
adc
outs
or
gs
inc
mov
jle
jo
fcmovnu
imul
adc
xchg
(bad)
(bad)
mov
bound
jl
xchg
dec
test
aaa
dec
or
pop
add
mov
jne
ffree
dec
lods
add
mov
add
sbb
das
call
adc
out
or
out
xchg
jbe
dec
sbb
mov
push
inc
aaa
hlt
loopne
adc
mov
xor
mov
std
cmps
and
or
in
fild
fdiv
sbb
jmp
pop
popa
jb
inc
mov
shr
dec
sbb
adc
inc
sub
ret
lock
inc
add
dec
jne
mov
xchg
pop
das
add
sbb
inc
adc
imul
aas
fcomp
push
fcom
or
cmp
and
inc
psubusb
add
repnz
inc
pop
jno
inc
imul
mov
dec
push
xchg
dec
lea
mov
push
cmp
test
mov
dec
inc
ja
push
je
or
arpl
in
mov
cs
sbb
pop
ret
xchg
push
(bad)
pop
sbb
lea
add
adc
fs
xor
add
in
(bad)
mov
push
pop
ins
adc
adc
daa
fs
jl
jmp
xchg
cwde
gs
sbb
adc
dec
(bad)
adc
aam
xor
inc
out
xor
push
lock
or
in
cmp
adc
inc
jmp
add
add
jno
popa
pop
xchg
adc
push
adc
arpl
or
dec
pushf
xor
fisttp
push
sub
cmp
jmp
ss
or
push
push
(bad)
call
es
arpl
daa
je
ins
outs
popa
and
jb
jb
push
push
sub
push
ins
or
daa
stos
pop
arpl
cdq
mov
pop
daa
or
retf
xor
add
sbb
popa
pop
add
add
iret
mov
retf
and
test
fstp
shl
cmp
inc
or
jmp
and
push
adc
jmp
xchg
sub
dec
cdq
xchg
or
jmp
or
xor
add
push
mov
outs
or
add
pop
icebp
data16
sbb
pop
push
add
dec
das
loope
mov
test
je
fimul
pop
xlat
or
and
and
jmp
jnp
mov
dec
js
dec
and
gs
add
into
jnp
fldcw
clc
ret
pop
or
and
mov
or
mul
in
mov
sub
xlat
hlt
add
adc
pop
jmp
add
dec
add
or
adc
in
mov
lds
jae
push
imul
pop
sahf
inc
movs
imul
inc
cmp
cmps
adc
cld
test
pop
push
stc
mov
call
jge
dec
pop
je
xor
push
and
mov
dec
push
mov
and
inc
sar
cmp
hlt
mov
stc
shl
test
mov
push
dec
xor
cmp
aas
xor
lods
shr
add
pop
adc
adc
and
mov
invd
and
adc
inc
retf
adc
daa
adc
fdivr
lea
cdq
ret
or
(bad)
pop
sbb
mov
fisttp
mov
fadd
mov
ins
pop
rcl
sub
push
(bad)
rol
pop
pop
call
test
inc
xchg
inc
jl
and
shl
jae
push
xor
test
sbb
add
sub
or
das
rol
ja
movs
xchg
xor
cli
sahf
(bad)
fwait
arpl
dec
xor
xor
inc
test
fnstsw
or
mov
add
xor
ins
xor
inc
push
outs
mov
pusha
jne
push
xor
movs
mov
outs
std
dec
in
dec
dec
inc
inc
inc
pop
dec
push
pop
push
dec
inc
dec
inc
cdq
pop
and
daa
sbb
inc
and
and
ss
pop
pop
mov
adc
inc
imul
add
js
or
and
jns
or
addr16
or
push
adc
add
iret
inc
xchg
inc
or
leave
mov
call
dec
pop
imul
ret
sbb
scas
jbe
mov
adc
test
pop
inc
call
bound
mov
inc
fiadd
in
adc
jnp
sub
aad
push
adc
ror
aaa
shl
rcr
pusha
pop
loop
pop
adc
mov
in
or
das
push
jecxz
inc
rcr
dec
adc
(bad)
adc
dec
xor
loopne
xlat
or
push
jg
jecxz
ret
fstp
inc
sub
js
and
enter
outs
xor
or
sub
xor
jns
push
add
rcr
jns
bound
xchg
out
cmp
adc
pop
and
jnp
ss
jne
cwde
ror
push
push
adc
add
ins
jmp
cmp
push
sub
sbb
push
xchg
enter
dec
xchg
call
mov
(bad)
inc
repnz
inc
inc
push
sbb
or
mov
mov
push
cmp
add
lods
pop
cdq
inc
retf
jne
aad
jle
les
imul
adc
and
xor
push
das
sub
mov
pmulhuw
xor
popa
adc
in
mov
nop
bound
mov
ins
xor
adc
dec
out
push
push
sbb
dec
push
outs
adc
out
stos
cmp
lods
sar
add
call
aam
add
jl
and
or
iret
not
and
mov
dec
push
or
push
push
loopne
push
add
out
jb
jb
xor
and
push
hlt
jb
adc
daa
aas
clc
out
shl
daa
jl
or
loopne
imul
push
mov
(bad)
jecxz
rcr
rol
sub
xchg
push
lock
ins
aaa
imul
sub
and
dec
or
dec
aas
mov
xchg
or
mov
cld
push
fs
inc
or
push
out
movs
movs
in
or
add
out
jne
in
jl
fst
lea
inc
push
ficomp
and
or
push
mov
push
or
add
pusha
fucomp
mov
jmp
lods
nop
and
cwde
test
popa
add
push
or
and
xchg
or
clc
mov
inc
adc
sbb
hlt
sbb
mov
inc
and
sub
jo
mov
mov
pop
mov
fnstsw
adc
xchg
sub
aaa
mov
arpl
clc
adc
mov
inc
pushf
xor
out
sub
pop
hlt
add
pushw
or
and
mov
sub
sub
hlt
jecxz
out
in
xlat
in
add
mov
sbb
mov
sbb
std
dec
xchg
push
and
mov
add
ret
pushf
addr16
aad
push
(bad)
test
verw
push
dec
outs
xor
aam
out
daa
pop
xchg
push
push
lahf
push
lahf
lock
nop
sub
sub
jl
push
rcl
sub
jmp
add
xchg
sbb
sub
sub
and
xchg
imul
sub
inc
and
pop
jo
enter
call
and
cs
sbb
dec
mov
add
adc
test
cwde
aad
pop
cli
xchg
xchg
and
pop
add
inc
call
sbb
xchg
xchg
int3
cmp
inc
pop
or
gs
inc
pop
pop
hlt
cvtps2pi
or
and
inc
retf
push
push
xlat
inc
sbb
rol
add
xchg
js
js
es
lock
dec
ror
ja
jb
adc
sub
inc
mov
leave
dec
pop
fadd
mov
xor
jmp
(bad)
cmp
nop
xchg
sub
xlat
jl
add
or
mov
or
pop
sbb
jo
cld
xchg
fsubr
cmp
add
in
lods
lea
movzx
push
push
iret
mov
dec
std
movs
cmps
sbb
dec
les
hlt
lea
cmps
call
jmp
ja
and
lods
daa
pop
fmul
test
jge
out
pop
cmp
dec
aaa
call
pop
mov
mov
shl
adc
sub
(bad)
sbb
test
or
out
shr
jecxz
out
out
sub
and
jae
xor
mov
mov
jg
adc
or
adc
push
scas
mov
and
xor
in
lea
xor
fsubr
add
(bad)
or
not
pushf
and
pop
iret
cli
in
pop
or
std
cmp
je
ret
add
std
pop
mov
inc
jmp
push
cmp
stos
add
and
enter
push
js
xlat
pop
cdq
sbb
xor
sbb
lea
out
xlat
fstp
loop
cmp
sahf
std
rcr
cld
(bad)
and
in
(bad)
cmp
fcomp
add
sbb
cmp
push
and
jae
enter
ins
push
jns
fxch
adc
in
clc
adc
or
pop
in
or
cmp
(bad)
adc
movs
cdq
in
in
inc
cwde
xor
xchg
mov
adc
inc
cmps
sbb
enter
cmp
shl
xchg
sub
(bad)
mov
in
adc
adc
clc
cmps
imul
call
adc
not
push
rol
popa
push
jecxz
rcl
jmp
mov
hlt
hlt
or
cmp
xchg
test
nop
stos
adc
jmp
fldcw
imul
rol
xchg
sub
xor
xor
xor
in
dec
push
xchg
call
inc
jmp
leave
mov
jne
mov
mov
retf
cmps
nop
jne
push
mov
pop
mov
jne
push
rol
movs
sar
or
test
or
adc
dec
popf
cmp
adc
ret
xchg
or
fsubr
fdivr
xchg
jo
cmp
movs
xchg
dec
xor
enter
xchg
or
(bad)
lock
xor
inc
rol
xchg
xchg
loopne
cmp
fsub
or
inc
add
adc
in
sub
enter
cld
inc
mov
adc
cmps
in
cdq
mov
cmp
(bad)
call
hlt
mov
cmp
outs
(bad)
mov
data16
mov
loopne
cs
lods
inc
call
xor
test
dec
sub
add
or
out
in
and
jb
in
in
in
xchg
xchg
jbe
push
push
push
call
hlt
in
lock
add
loopne
and
adc
gs
push
lock
pop
rcl
shl
dec
mov
xchg
sbb
cwde
cwde
push
nop
sbb
aaa
lock
lock
and
fs
inc
iret
enter
push
cld
mov
xchg
mov
test
pop
adc
fld
xchg
cs
pop
cmp
pop
inc
pmulhuw
data16
and
push
add
jg
sub
push
pop
outs
rcr
add
cmp
sbb
jmp
mov
adc
xor
dec
adc
inc
add
push
int3
and
hlt
xor
adc
cmp
pop
add
cwde
mov
and
add
test
out
dec
ret
xchg
push
push
push
adc
sbb
pop
out
dec
adc
push
xchg
xchg
addr16
sbb
mov
(bad)
mov
mov
add
xchg
mov
cs
addr16
ret
mov
das
fist
push
inc
mov
adc
test
aad
xchg
sub
rol
clc
outs
mov
xchg
add
jp
jmp
dec
mov
xor
jle
lock
mov
add
jne
ins
imul
jmp
in
pop
dec
pop
inc
dec
js
inc
adc
sar
jb
mov
xchg
dec
xchg
sar
adc
pusha
je
ret
cmp
in
rcr
xchg
mov
inc
pusha
mov
rcl
add
int
mov
jne
inc
inc
sub
and
push
or
and
push
clc
mov
mov
dec
ds
mov
push
shr
mov
push
aam
call
std
add
mov
add
(bad)
sub
icebp
and
push
sub
push
or
outs
pop
out
loopne
add
cmp
(bad)
loopne
lods
sbb
adc
in
pop
repnz
add
inc
outs
mov
add
sbb
es
pop
(bad)
jne
fwait
cmp
pop
cmp
retf
pop
mov
jbe
popa
pushf
or
and
and
sbb
add
push
pop
or
sbb
or
or
nop
inc
push
or
xor
mov
sub
ret
shr
xchg
xor
push
push
xchg
inc
test
cmp
iret
xor
add
xor
fcomp
fs
outs
xor
xchg
adc
movs
fdiv
inc
or
push
movs
fdivr
pop
bound
rcr
adc
pop
test
mov
test
(bad)
gs
dec
aas
mov
imul
imul
dec
aaa
xchg
js
shr
sbb
sub
and
rcr
add
add
dec
sub
push
cmc
xchg
xchg
pop
ins
xor
(bad)
loop
add
pop
movd
sbb
out
popa
(bad)
push
add
ja
movs
and
in
cli
add
cdq
mov
mov
jecxz
mov
in
add
push
sahf
cmps
or
xlat
(bad)
add
mov
mov
cmp
pushw
outs
mov
dec
test
sbb
pop
pop
and
and
pop
cmp
sub
and
and
jo
push
push
sti
pop
mov
mov
sahf
mov
cli
ins
mov
fs
or
jg
test
jne
or
movq
or
or
adc
(bad)
xlat
push
or
std
pop
mov
or
pop
mov
mov
sub
push
pop
inc
ficom
das
pop
cld
mov
shl
(bad)
mov
push
sbb
outs
inc
fisubr
xor
loop
sub
sar
imul
mov
xor
invd
mov
sbb
xor
dec
rcr
fldcw
mov
iret
mov
and
leave
dec
xor
cmp
add
mov
push
ins
xchg
pop
scas
fild
rol
mov
dec
dec
xchg
sub
loop
call
jmp
adc
cmp
inc
or
sbb
add
jl
mov
sti
loopne
popa
int
inc
adc
push
cld
les
adc
jg
or
add
mov
cwde
fild
(bad)
mov
pmaddwd
xchg
outs
mov
inc
iret
loopne
jle
jae
call
inc
sbb
stos
or
cmp
cmp
hlt
inc
mov
sub
mov
pop
sbb
mov
inc
xor
jae
push
mov
jae
dec
and
sub
and
int
call
pop
adc
js
adc
pop
mov
mov
mov
popa
push
push
push
xchg
add
ret
push
es
ss
outs
cmps
push
xor
add
xor
and
xchg
inc
data16
xor
enter
lods
mov
data16
dec
dec
inc
sbb
adc
aas
pop
xchg
cmp
jbe
pop
xor
retf
scas
push
popf
xchg
psubb
jle
movs
or
mov
mov
and
adc
or
shr
add
sbb
fs
xor
sar
loope
xor
or
mov
pop
int
jno
jecxz
push
cmps
mov
mov
mov
dec
sbb
icebp
nop
(bad)
js
inc
test
mov
je
pushf
in
jbe
shl
callw
ret
and
push
je
aam
cs
std
push
mov
fcmovbe
test
jno
mov
ret
stos
add
inc
push
inc
push
push
sbb
or
rol
clc
cmp
pop
jbe
aam
jo
pop
sub
jnp
push
cmp
mov
je
cwde
dec
lods
cmp
ja
or
jnp
mov
cmp
seto
fst
adc
lods
and
xchg
es
and
shl
pop
sub
mov
or
or
mov
outs
adc
push
fild
dec
add
mov
outs
ror
aaa
adc
sbb
jne
push
mov
and
pcmpeqb
mov
and
dec
test
and
dec
or
test
dec
clc
(bad)
xchg
or
or
inc
or
or
push
hlt
call
jmp
dec
nop
js
jl
push
add
or
outs
xchg
jp
add
push
sbb
inc
dec
imul
and
sub
dec
sbb
jno
je
xchg
and
xlat
add
dec
inc
pop
xchg
wbinvd
sub
leave
mov
je
xor
dec
sbb
pop
ds
aaa
test
inc
jne
pop
inc
dec
or
adc
pop
add
adc
ins
sti
dec
mov
cmp
mov
xchg
xchg
mov
lock
fmul
and
loope
jo
or
jge
adc
sbb
mov
mov
adc
outs
sbb
jne
xchg
pop
and
enter
jbe
dec
call
pop
add
or
adc
push
mov
add
iret
add
icebp
pop
int3
push
xor
jbe
bound
js
jg
test
push
pop
pusha
adc
xor
pop
sbb
push
and
mov
clc
cmovno
out
jl
aaa
pop
add
adc
push
inc
or
sar
ficomp
add
sbb
adc
ret
xor
xchg
dec
mov
call
lock
mov
add
and
cmp
push
pop
mov
pop
je
movs
test
and
push
adc
or
mov
jmp
cmp
pop
xchg
scas
push
mov
inc
and
rol
fwait
dec
mov
xchg
nop
add
dec
sbb
sub
mov
xor
jmp
or
rol
inc
jg
aas
jmp
xchg
mov
cmp
lea
jb
adc
aaa
mov
xor
mov
or
and
je
dec
xor
sbb
adc
sar
(bad)
cmp
and
das
popf
shl
and
xchg
cmp
js
cmp
or
and
mov
dec
in
xchg
pop
rol
out
mov
aaa
xor
cmps
or
lods
dec
cld
jge
inc
mov
sbb
cmp
push
adc
push
rol
imul
push
arpl
dec
jne
jno
xchg
dec
fisttp
pop
ins
aam
xor
test
or
inc
ffreep
mov
shl
dec
pop
or
xor
(bad)
adc
iret
in
addr16
dec
inc
inc
adc
and
adc
pop
xor
sub
push
or
stc
mov
mov
shr
jmp
mov
and
loope
cdq
add
xchg
adc
push
cmp
scas
enter
and
or
pop
popa
daa
xor
cmp
and
(bad)
adc
sbb
ret
jo
add
push
jo
push
mov
push
or
aas
adc
add
add
arpl
adc
fcmove
pop
or
dec
jne
xchg
push
mov
ret
mov
push
test
mov
add
mov
test
mov
lea
es
push
push
jge
mov
jo
sbb
add
push
fs
call
cld
in
or
fsub
push
js
push
mov
mov
add
sub
mov
jbe
inc
sbb
sub
add
push
or
cmp
out
idiv
xor
cwde
xor
pop
cmp
add
jo
inc
jecxz
add
je
cwde
mov
jb
shr
jo
enter
mov
dec
fdiv
xor
xor
pop
cmp
lods
xor
cmp
call
sbb
sti
shr
inc
adc
sub
add
dec
dec
outs
fistp
sbb
push
jne
sysenter
sub
dec
dec
dec
dec
sbb
or
or
push
in
scas
fisubr
fst
inc
(bad)
jmp
(bad)
adc
clc
bound
mov
mov
inc
jge
lock
or
mov
pop
add
xor
je
sbb
xchg
jle
or
or
call
mov
pushf
add
sar
mov
mov
mov
add
mov
dec
add
std
rcl
mov
clc
pusha
outs
mov
outs
ins
ins
sub
lds
iret
cmp
jge
add
add
jae
pop
add
shl
mov
jnp
sub
add
sub
test
pop
push
and
(bad)
sub
aaa
jecxz
dec
int
(bad)
cmp
ja
push
repnz
push
es
add
push
test
push
fisubr
ss
or
les
push
mov
ja
data16
into
xchg
adc
lods
mov
call
xor
mov
or
sub
ror
lds
jo
dec
add
or
clc
push
add
and
xor
les
iret
and
cmp
xor
jae
or
loope
clc
and
mov
jbe
mov
nop
xchg
or
call
test
or
jo
mov
jne
jl
or
add
std
sub
or
loope
xor
jo
pop
pop
jge
clc
mov
ja
jo
gs
push
inc
or
cmps
pop
pop
inc
out
sub
xchg
pop
aam
mov
cmp
cmp
adc
outs
in
dec
push
retf
sahf
stos
nop
rcl
and
movs
jb
xor
sub
sub
xchg
sub
js
add
fstp
pop
push
movs
adc
cld
(bad)
sub
mov
or
mov
cmp
data16
jp
lods
mov
bound
pop
test
cs
push
xor
inc
mov
cmp
lock
push
inc
and
or
push
mov
lds
jo
mov
push
add
rcl
inc
jnp
adc
add
push
clc
jle
fstp
lods
pop
jmp
pop
add
mov
add
mov
dec
push
add
and
ror
fnstsw
mov
outs
inc
(bad)
sbb
shr
adc
aas
int
cdq
in
pop
dec
inc
adc
loop
popf
adc
retf
inc
mov
into
mov
jo
mov
mov
and
mov
jo
mov
rol
pop
mov
ret
ficomp
dec
cmp
add
or
add
xor
aas
cld
pop
cmp
ja
ja
call
inc
push
aad
mov
inc
mov
and
dec
mov
inc
push
repnz
inc
push
pop
mov
mov
mov
and
rcr
cmp
adc
xchg
push
pop
xchg
cmp
push
aas
mov
or
xchg
jl
inc
jns
xchg
aas
mov
and
cmp
mov
sbb
pop
lock
dec
push
enter
stos
push
je
jbe
or
xlat
(bad)
xor
mov
sub
pusha
cmp
adc
mov
and
inc
je
jne
push
push
imul
ins
dec
mov
push
addr16
xchg
je
sbb
adc
retf
ins
cmp
mov
call
push
and
mov
dec
push
test
retf
cmps
and
dec
iret
adc
je
cs
hlt
cmps
dec
fadd
push
cmps
lds
inc
jae
inc
call
jno
js
cli
retf
aad
jne
in
mov
ror
(bad)
push
mov
jbe
cwde
sub
dec
lahf
inc
mov
sub
or
sub
sbb
or
add
xchg
push
jmp
inc
nop
popf
add
jne
popa
xor
jmp
pusha
fs
mov
mov
cmc
mov
cmp
dec
sbb
cmp
or
daa
add
jmp
xchg
ja
and
or
pop
ins
xor
sub
sbb
xchg
adc
outs
inc
and
sbb
xor
sub
repnz
and
sub
iret
enter
dec
xor
iret
dec
or
and
pusha
fs
loop
push
cmp
xor
cmps
sub
jae
xor
push
adc
add
sub
imul
and
and
push
add
loopne
inc
test
into
rol
mov
xor
je
sbb
sar
sti
xor
dec
inc
mov
or
inc
loop
imul
and
add
pusha
jbe
sbb
(bad)
fist
(bad)
and
cmp
xor
pop
mov
fwait
mov
cmp
xchg
xor
pusha
test
add
adc
pop
cmp
adc
mov
add
cmp
jae
popf
ins
repz
mov
pop
aam
jmp
adc
test
push
(bad)
jmp
sbb
into
add
cmp
jbe
sub
inc
inc
mov
mov
mov
or
sub
jmp
mov
jbe
in
movs
jne
add
and
sub
mov
cmp
cmp
sbb
and
xor
sbb
call
and
jmp
pop
test
push
xor
pop
popa
jbe
outs
(bad)
mov
in
sbb
add
push
sub
(bad)
mov
xchg
cmp
dec
pusha
loope
push
xchg
hlt
inc
pop
test
push
cdq
mov
jno
pop
lea
jns
and
test
jp
movs
(bad)
sub
and
mov
or
outs
sub
inc
pop
inc
sbb
sub
or
jae
and
movs
or
adc
xor
mov
rcl
ds
push
gs
mov
hlt
cmp
cli
scas
stc
jne
pushf
ja
mov
scas
mov
nop
push
xchg
xor
or
and
mov
adc
push
scas
jae
and
dec
loop
ret
add
or
or
and
adc
jbe
pop
jge
test
inc
xor
clc
jb
push
inc
dec
cwde
inc
mov
sbb
and
sbb
not
lods
jge
je
add
adc
sbb
(bad)
lods
xchg
scas
stos
add
or
add
and
inc
pop
sbb
lea
push
push
add
dec
lods
sub
and
call
adc
cmp
jg
call
dec
and
cmp
jecxz
pop
lods
push
add
xchg
cmp
test
mov
add
add
test
sbb
add
xchg
inc
dec
sub
outs
lods
(bad)
sub
jmp
and
pop
sbb
add
jge
or
sub
dec
cld
sar
inc
push
add
inc
js
or
mov
pop
aas
mov
ss
sti
inc
xchg
fcom
push
xor
aam
or
push
mov
jnp
cmp
mov
dec
and
or
inc
daa
inc
push
into
or
sbb
add
jecxz
xchg
sbb
mov
sbb
outs
xchg
adc
xor
pushf
inc
push
clc
add
xor
mov
dec
xchg
ret
push
xchg
inc
es
push
movs
(bad)
shr
out
cmp
test
sub
enter
inc
sbb
and
pop
add
int3
jb
ss
clc
rol
sbb
into
push
xor
arpl
idiv
or
ficom
popa
cmp
fwait
cmps
pushf
push
push
sbb
jnp
sub
mov
mov
and
add
pop
push
dec
sbb
push
in
xchg
aaa
ret
dec
add
fst
push
adc
cmp
add
shl
xor
rol
mov
add
push
add
mov
inc
popf
adc
je
and
pop
ret
sub
stos
adc
push
outs
call
shr
and
das
pushf
cmps
stc
xor
dec
push
jnp
out
inc
sahf
dec
mov
xor
repnz
mov
add
pop
cmps
cmp
cmps
(bad)
test
or
test
daa
add
pop
add
mov
lods
push
pusha
cwde
or
mov
mov
pop
pop
xor
loopne
inc
dec
mov
test
outs
cmp
loope
dec
mov
loopne
fild
jmp
jl
int3
adc
pop
jp
push
icebp
mov
ins
and
pshufw
inc
fucom
pop
inc
jae
inc
shr
sbb
push
shl
es
dec
in
add
or
adc
sbb
ds
xor
xchg
sbb
and
mov
sub
pop
lods
fcmovnu
adc
into
xor
push
mov
shr
or
sbb
call
aas
pfmul
adc
shr
or
pusha
and
fimul
sbb
popf
lea
rcr
mov
dec
adc
sti
mov
ret
adc
stos
ret
movs
add
movs
add
pop
inc
outs
aaa
dec
jmp
add
sar
pop
add
pushf
sub
dec
push
jecxz
sahf
out
add
push
mov
out
lock
ret
dec
add
(bad)
xor
dec
je
add
jmp
cmps
mov
cmp
push
dec
stos
sbb
pop
adc
cwde
mov
add
inc
xchg
inc
xor
cmp
sub
cmps
xchg
or
retf
(bad)
jmp
or
sbb
jb
out
and
jnp
js
sbb
xchg
or
imul
sbb
or
out
mov
jb
or
push
push
cmc
leave
cmp
ins
ja
out
fisubr
sub
push
or
imul
aas
sub
enter
mov
inc
(bad)
or
sti
or
inc
mov
and
daa
jbe
pop
push
cmp
js
ja
pusha
push
push
inc
mov
and
xor
js
xchg
or
mov
mov
inc
data16
jmp
inc
movs
dec
push
shr
icebp
add
repnz
mov
pop
jb
jmp
dec
adc
clc
lea
mov
in
xchg
fiadd
push
push
push
cmp
in
lea
xor
add
mov
adc
inc
ins
enter
sub
jbe
pop
pusha
xchg
push
pop
or
cmp
and
cmps
dec
mov
mov
cli
xchg
cmp
jae
xlat
into
pop
jmp
fiadd
inc
jge
jmp
je
add
dec
cmps
xchg
jb
shl
enter
(bad)
cmp
shl
pop
and
inc
ins
daa
test
fs
dec
stc
adc
push
and
adc
scas
fstp
pusha
add
fld
xor
push
push
xor
sbb
xchg
and
xchg
cld
add
jne
rol
jl
inc
push
add
and
sub
movs
jge
xor
or
xor
adc
pop
in
push
pusha
les
retf
in
dec
shl
ds
jmp
dec
rol
inc
push
dec
popf
fld
aas
outs
mov
add
pusha
cmp
xchg
lods
inc
aam
idiv
adc
clc
adc
cmp
repz
shl
lods
pop
repz
pop
sti
sahf
cmp
dec
push
pusha
push
pushf
push
mov
imul
dec
push
outs
pop
inc
sbb
adc
shl
pop
nop
imul
pushf
pushf
jb
add
jl
sub
dec
inc
sbb
js
mov
sub
cmp
push
xor
adc
mov
rol
mov
jns
dec
adc
or
ret
out
imul
add
loop
hlt
(bad)
jo
jle
pusha
lock
or
mov
and
in
mov
and
mov
adc
rcr
sbb
mov
repnz
add
cmps
sbb
push
pusha
ret
jmp
jecxz
cwde
pop
xchg
and
and
or
into
sub
xchg
xor
dec
ret
pop
cmp
retf
or
fisttp
je
add
inc
or
daa
and
pop
fld
xchg
inc
sub
retf
cmp
in
xchg
xchg
cmp
daa
cmp
adc
adc
sbb
inc
repz
nop
or
push
in
add
add
add
leave
mov
xchg
loop
xor
clc
push
inc
inc
inc
pop
enter
cmp
adc
dec
cmps
inc
mov
add
fs
jae
clc
mov
push
xor
mov
fld
cmp
sub
xor
mov
cmp
adc
out
sub
scas
pop
imul
pusha
adc
mov
push
imul
pop
cmp
mov
or
iret
and
sbb
mov
adc
mov
push
jae
sbb
or
or
bound
mov
add
retf
or
pop
imul
mov
mov
adc
loopne
or
sub
int3
mov
mov
leave
xor
imul
jmp
and
adc
inc
loope
cmp
loop
add
aam
fstp
rcl
inc
fwait
dec
dec
adc
xor
push
and
inc
daa
jne
fstp
cmp
mov
jne
std
xchg
inc
or
jge
add
push
and
or
add
out
mov
add
adc
shr
adc
inc
ficom
dec
cmp
inc
sbb
sbb
lea
popf
pop
cmp
in
jo
mov
bound
xchg
pusha
xor
dec
cmp
mov
and
add
push
mov
out
adc
test
adc
setle
jmp
ror
pop
mov
add
add
test
jmp
dec
sub
mov
sbb
test
clc
test
mov
dec
fwait
adc
shr
loop
call
aas
mov
js
push
push
call
sbb
inc
push
xchg
fisttp
xor
sbb
push
add
sub
push
lods
fild
push
xor
pop
fdiv
add
(bad)
movs
sub
pop
adc
inc
sbb
dec
nop
and
xor
out
push
xor
jmp
mov
jp
adc
movs
jno
pop
xor
mov
inc
inc
cmp
jbe
pop
add
retf
mov
imul
jle
inc
jb
sub
mov
jae
add
cmp
inc
cmps
adc
popa
cmp
cmp
shl
std
push
(bad)
mov
jle
or
aam
jp
mov
push
cld
inc
shr
imul
lea
or
xchg
cli
inc
jmp
or
mov
inc
out
adc
sub
jo
ds
push
mov
fs
sbb
dec
outs
xchg
fist
sbb
mov
out
dec
fldenv
or
add
mov
sub
xchg
pop
iret
push
xchg
add
lds
pushf
popf
mov
mov
(bad)
bt
in
nop
lahf
xor
push
sub
inc
pusha
inc
add
and
push
push
pop
add
push
mov
ret
pop
and
lea
mov
sar
pop
fistp
adc
xlat
add
dec
cmp
loop
add
cmps
test
sar
test
push
push
sbb
out
xor
mov
cmps
jl
mov
and
shl
dec
mov
jbe
push
inc
or
addr16
push
inc
push
ja
mov
bound
dec
shl
inc
or
ins
retf
rcl
clc
dec
in
dec
inc
jae
mov
cmp
jbe
icebp
es
shl
rol
rol
rol
jo
ins
mov
jbe
mov
sbb
push
or
add
push
jle
cmp
sahf
loop
inc
mov
pop
es
sbb
push
lock
jae
fcmovnb
or
fwait
dec
sahf
add
sub
mov
retf
movs
iret
jbe
shl
cs
adc
xchg
(bad)
or
out
jle
loope
mov
and
pop
add
mov
mov
es
scas
ret
sahf
sbb
jecxz
into
push
in
mov
xor
push
pusha
xor
sbb
sbb
xor
and
cmp
inc
jge
dec
xchg
test
iret
test
adc
aaa
pop
les
or
pop
add
cmp
enter
or
or
les
rep
retf
les
add
idiv
lock
add
imul
or
mov
pusha
or
or
call
shl
aam
adc
(bad)
ja
cmp
and
add
or
in
call
mov
sub
mov
and
or
sub
sar
clc
dec
test
mov
je
sbb
push
cmp
mov
mov
adc
jbe
cmps
sub
pusha
pop
add
dec
add
(bad)
adc
jmp
lock
in
(bad)
jmp
and
mov
xor
je
push
xor
mov
jmp
loope
std
retf
icebp
add
push
mov
(bad)
push
pushf
clc
or
and
push
xor
mov
jo
or
cmp
lock
jbe
nop
lea
and
push
fcom
sbb
retf
lock
or
sbb
sub
or
and
or
jbe
je
enter
call
mov
or
cmp
(bad)
test
call
clc
sub
sbb
fmul
shr
xchg
mov
sub
push
push
mov
scas
cmp
push
ss
lea
jnp
jo
xor
sbb
push
push
mov
add
dec
and
(bad)
fmul
mov
dec
and
lahf
dec
push
mov
cmp
scas
call
jg
nop
test
sub
ret
lea
jle
sub
jl
jns
add
test
scas
and
nop
in
jns
pop
mov
xor
data16
or
inc
mov
inc
not
imul
adc
lea
sbb
add
push
jl
fldcw
fnstenv
test
cmp
or
cdq
add
sbb
sahf
lds
nop
test
or
lods
pushf
xchg
cld
xor
mov
mov
into
dec
addr16
dec
lea
push
adc
or
fstp
mov
sub
mov
jge
push
mov
mov
or
sbb
test
jne
jbe
ja
mov
or
pop
aaa
jno
sahf
sbb
jg
push
mov
inc
sbb
and
out
fwait
xchg
mov
jg
or
jle
mov
nop
cmp
inc
loopne
call
adc
popf
jns
sbb
or
adc
pop
jb
sub
cmps
loope
cmp
int
movd
shr
push
adc
xchg
xchg
push
xchg
dec
push
mov
inc
jo
jbe
stos
fcom
dec
loopne
lods
push
jge
fidivr
outs
inc
movs
cmp
stos
rol
and
sub
sbb
ins
pop
adc
std
push
inc
mov
adc
sub
pop
jl
add
add
add
push
sahf
data16
jb
imul
ret
jno
mov
lock
lock
aas
mov
into
out
xchg
sbb
ror
adc
xchg
pop
loopne
popa
jle
xor
repnz
enter
inc
fcmovne
pop
adc
(bad)
cwd
loopne
sub
out
sahf
ja
add
sub
imul
data16
cmps
push
mov
out
je
mov
retf
and
imul
sbb
outs
loope
adc
aas
inc
ret
sar
mov
cli
xchg
adc
int
out
cmp
shr
mov
(bad)
outs
mov
pusha
lds
push
shr
and
mov
retf
add
and
je
or
or
mov
pop
shl
add
add
test
sar
out
lea
sbb
mov
inc
aam
cs
dec
dec
add
sub
xor
pop
sti
cwde
inc
inc
add
jle
(bad)
jne
bound
sub
cmp
int3
adc
adc
mov
int3
mov
inc
dec
adc
mov
mov
sub
bound
pop
je
push
sbb
pop
dec
mov
popa
(bad)
or
ins
push
jmp
push
rcl
jbe
jl
jmp
rol
in
xor
add
add
xlat
inc
mov
xchg
jg
xchg
jg
outs
mov
arpl
mov
xor
or
std
icebp
mov
mov
push
loope
ret
mov
push
push
jl
xor
inc
sbb
dec
mov
loop
jge
or
repz
mov
dec
pop
adc
jl
push
mov
inc
aad
outs
pop
and
test
push
mov
and
xlat
retf
mov
mov
mov
push
pop
mov
xchg
xor
xor
adc
pop
xor
mov
xlat
loope
test
std
test
mov
push
mov
out
adc
pop
out
or
mov
jmp
mov
xor
xor
lds
movs
pop
dec
dec
pop
xlat
(bad)
in
cmc
mov
stos
pop
add
pop
jp
ins
mov
fdivr
or
fs
xchg
enter
push
adc
pop
(bad)
xchg
scas
les
data16
mov
stos
fsqrt
fcmovnu
xlat
cs
xchg
sbb
into
jle
fidiv
jmp
jmp
cmp
add
dec
jmp
or
ret
test
shr
or
aaa
cmp
jb
xchg
aam
push
or
cmp
add
adc
add
mov
ss
push
dec
adc
fild
xor
retf
add
pop
mov
jmp
dec
push
push
and
push
or
mov
pop
je
inc
ins
ss
jle
cmp
jb
inc
jo
push
cmp
add
out
add
jo
nop
jp
ret
sub
cmp
sbb
xor
add
call
shl
or
int3
int
adc
mov
mov
sub
xor
push
imul
mov
pop
neg
lahf
sub
add
mov
jmp
pusha
or
jno
inc
xchg
and
hlt
mov
inc
xor
adc
fdiv
adc
jne
sbb
sbb
int
jb
sbb
cmp
add
jge
add
pop
mov
dec
and
sar
dec
cwde
or
sti
arpl
sub
jecxz
ror
aas
xchg
and
push
inc
mov
sbb
adc
test
sbb
inc
push
(bad)
nop
dec
adc
and
adc
rol
push
pop
inc
shl
jmp
mov
inc
push
fcomi
xchg
mov
les
leave
and
(bad)
stc
outs
test
cli
daa
(bad)
xor
pop
jp
adc
xlat
cli
mov
imul
mov
xchg
dec
retf
sbb
rol
and
mov
and
fadd
push
dec
dec
add
icebp
inc
add
add
cmp
mov
mov
clc
ror
jge
mov
pusha
add
imul
popa
clc
and
pop
mov
mov
xor
mov
movs
jecxz
sbb
mov
sar
sbb
call
imul
(bad)
loop
imul
push
cs
inc
clc
(bad)
xchg
sbb
inc
inc
adc
(bad)
inc
add
enter
gs
adc
dec
add
(bad)
in
sar
mov
stc
or
mov
xchg
mov
sub
add
stc
sqrtps
xor
pop
mov
mov
adc
cs
mov
ss
jbe
cmps
cmp
mov
lock
jge
inc
shl
dec
arpl
test
inc
push
js
mov
mov
xchg
sbb
cs
imul
dec
adc
out
call
into
or
jg
nop
cli
or
adc
pop
push
nop
int
cwde
cwde
sub
mov
xchg
xor
das
push
and
stos
xchg
xlat
mov
add
add
(bad)
dec
xor
inc
push
mov
test
data16
std
mov
cmp
cmp
inc
jae
cwde
xor
adc
xchg
pusha
or
inc
icebp
mov
push
xor
es
ja
or
bswap
jb
pusha
mov
dec
mov
mov
xlat
xchg
sub
push
add
jl
jbe
adc
dec
imul
pop
mov
mov
adc
out
push
shrd
mov
lods
adc
jmp
push
push
out
push
inc
mov
mov
adc
sbb
or
inc
rol
xor
ret
ror
sar
loopne
jb
jmp
lea
or
dec
add
shl
cli
or
push
and
shl
dec
dec
push
and
cmps
daa
xchg
xor
out
fwait
ds
cmp
lea
repz
rol
shl
add
adc
shl
xchg
sub
leave
mov
repnz
leave
add
add
adc
lds
mov
mov
(bad)
pop
or
jmp
dec
add
mov
pop
das
popf
mov
movs
test
cwde
mov
add
mov
mov
push
sub
or
movs
jmp
inc
lods
mov
inc
pop
fidiv
enter
mov
push
or
adc
aaa
inc
jg
ror
or
dec
cmp
retf
mov
leave
adc
rcr
cmp
or
mov
pop
xchg
push
movs
sbb
lock
or
sbb
hlt
out
jp
mov
cmc
cmp
not
(bad)
push
aas
ret
dec
mov
call
xor
mov
jecxz
call
jno
iret
xchg
add
xor
or
lahf
inc
nop
or
sub
add
movs
mov
mov
or
or
mov
pop
add
inc
call
ss
jl
sub
and
inc
or
inc
adc
rol
mov
dec
cmp
rol
shr
cdq
add
add
add
dec
adc
cmc
xor
mov
mov
leave
inc
test
popf
not
aam
(bad)
retf
popf
add
pop
mov
iret
iret
sub
and
js
mov
add
mov
sbb
pop
add
push
push
call
push
lock
dec
jo
mov
sahf
dec
and
pop
mov
loopne
and
imul
adc
add
mov
push
or
icebp
or
in
call
and
sub
into
nop
jge
push
sub
dec
cwde
shl
sbb
shr
or
add
and
inc
adc
jg
mov
sbb
sub
int
ret
or
mov
jg
mov
sub
sar
icebp
add
icebp
int3
lods
push
xchg
lea
jl
adc
lea
shr
jl
push
out
jle
jmp
and
imul
adc
push
xchg
test
sbb
pop
mov
daa
cmp
imul
push
mov
or
jge
pop
not
pop
and
push
es
mov
jmp
leave
xor
test
xor
sub
push
push
inc
mov
(bad)
call
stos
mov
xchg
mov
adc
ret
enter
retf
cwde
mov
rcr
js
fdivrp
addr16
in
or
mov
int3
inc
xor
add
inc
xchg
push
enter
adc
inc
add
inc
je
cmps
mov
mov
fdiv
mov
sbb
inc
call
nop
nop
(bad)
cmp
ins
ret
xor
mov
or
or
push
add
add
ss
mov
or
add
cld
jno
dec
add
(bad)
or
adc
jne
jo
inc
xor
xchg
daa
jbe
cmp
xor
std
jg
outs
and
dec
inc
inc
inc
xor
adc
mov
mov
pop
nop
push
pop
add
add
jb
push
mov
mov
mov
mov
adc
inc
fsub
nop
jb
nop
arpl
call
xchg
mov
cmp
test
mov
cmp
nop
mov
cmp
rcl
mov
rol
cmps
mov
jno
push
push
clc
cmps
push
push
pushf
adc
inc
add
push
xor
js
sub
cmp
fcmovnu
pop
adc
push
push
cmp
shr
pusha
lock
and
clc
aaa
or
xchg
cmp
adc
jg
pop
das
das
imul
arpl
cs
dec
es
cmp
mov
cwde
fiadd
and
cmp
mov
jge
and
(bad)
das
fld
jecxz
cld
ds
in
or
cmp
aas
shl
js
pop
sbb
cmp
jle
in
mov
push
movs
fwait
sbb
inc
push
in
mov
nop
add
call
nop
fs
ds
mov
imul
icebp
sub
fmul
add
daa
leave
jle
mov
adc
or
stc
jl
or
out
push
pop
retf
leave
movs
std
push
mov
shl
and
push
rcl
(bad)
fsubr
xlat
xlat
or
cmps
push
adc
push
shr
leave
pop
mov
adc
cld
xor
sbb
daa
popf
test
xchg
lock
pop
clc
xchg
push
add
jl
daa
xor
add
ror
leave
leave
add
hlt
inc
je
adc
cs
test
aaa
fdiv
sub
in
adc
pushf
enter
sub
cmp
mov
mov
inc
add
outs
rcr
stos
clc
push
out
stos
jb
shl
inc
enter
inc
add
movs
add
enter
xor
movs
mov
pop
inc
push
ror
push
add
xchg
fs
push
pop
or
pusha
and
jbe
call
or
jbe
add
inc
pop
je
xor
inc
inc
sub
add
scas
push
inc
dec
(bad)
pop
pop
sbb
das
xchg
(bad)
mov
mov
ins
add
sub
push
cmps
leave
push
cmp
mov
add
adc
aam
cmp
push
add
push
add
xchg
mov
movs
push
mov
fsub
and
sub
xor
pushf
mov
add
popa
xchg
cmps
jne
nop
jl
in
nop
jg
and
sbb
mov
loope
sbb
push
push
cld
sbb
or
cmp
rcr
sub
jno
sbb
push
xor
fadd
adc
mov
aam
cmp
add
sub
adc
pop
xor
adc
cmp
movs
loope
and
add
pop
jno
xor
and
lahf
pop
adc
adc
xchg
adc
push
and
push
sub
and
mov
mov
ins
adc
sub
aam
in
mov
xchg
or
sbb
repnz
or
mov
add
movs
push
mov
je
test
jge
add
push
nop
dec
ficom
push
and
pushf
or
add
xchg
fisttp
cmps
inc
jo
or
add
paddq
stos
push
mov
cld
ins
rcr
mov
jb
fcomp
fadd
inc
outs
add
addr16
lea
addr16
dec
push
mov
xor
xor
fcmovb
cmp
cli
pushf
cwde
xchg
je
lahf
push
push
or
add
inc
dec
mov
ficom
lods
fcomp
sbb
arpl
or
jp
je
sbb
or
sub
or
add
adc
(bad)
clc
inc
movs
xchg
retf
inc
push
pop
mov
cdq
mov
xchg
and
inc
int3
mov
and
adc
cwde
cld
pop
sbb
fistp
sar
stos
xor
shr
push
icebp
pop
into
imul
fidiv
(bad)
jmp
mov
xchg
adc
outs
sbb
push
hlt
lea
mov
jo
scas
pop
in
push
mov
push
fild
dec
sbb
jb
pop
clc
jecxz
add
mov
test
push
out
or
or
out
inc
xchg
mov
mov
(bad)
xor
imul
dec
jno
push
ja
into
loopne
jbe
add
adc
add
adc
sahf
repz
ja
mov
loope
loopne
pop
jmp
sti
sbb
fdivr
fiadd
add
add
inc
fucomi
les
cmps
push
cmp
adc
add
jmp
dec
inc
jb
inc
add
inc
jb
add
inc
and
push
aad
push
sbb
pop
ja
cmp
mov
cmp
add
loope
push
fs
out
test
gs
ret
add
push
fcom
inc
jmp
aas
push
nop
inc
push
add
inc
push
nop
inc
ds
push
push
popa
mov
lock
or
scas
sar
loop
loope
rol
push
iret
xchg
jecxz
jns
mov
push
shl
xchg
mov
inc
jecxz
mov
rcr
mov
and
hlt
sbb
mov
cmps
mov
cwde
jecxz
xchg
test
xchg
pop
inc
add
mov
test
repz
inc
mov
or
jae
xchg
xchg
mov
adc
into
es
dec
fcomp
outs
mov
pop
in
mov
adc
adc
xor
ja
inc
add
mov
das
lods
lea
je
cmp
pop
pop
bnd
nop
adc
dec
fstp
fwait
sbb
pusha
mov
js
mov
jecxz
sub
in
(bad)
aad
and
or
inc
dec
push
je
mov
test
adc
xchg
inc
or
nop
not
sub
mov
jnp
push
movs
push
push
and
pop
dec
adc
jmp
dec
dec
dec
and
xchg
lock
push
and
and
adc
push
push
(bad)
test
push
test
out
and
xor
inc
add
add
or
or
push
xchg
push
imul
or
sbb
pop
adc
mov
add
jns
add
mov
out
and
fild
inc
sbb
mov
mov
sbb
mov
cmp
imul
cmp
lock
add
and
mov
xchg
or
jne
cmp
enter
inc
enter
xchg
mov
fldcw
adc
sbb
sbb
xchg
inc
and
mov
pop
rol
aas
pop
movs
adc
mov
dec
inc
or
test
inc
xor
add
rcr
mov
mul
push
inc
push
mov
mov
xor
movs
or
cmps
mov
adc
xor
retf
xlat
or
xchg
test
das
in
movs
mov
test
test
push
jno
push
dec
or
and
mov
out
mov
adc
test
jmp
sub
cmc
jne
fimul
push
iret
dec
mov
push
or
inc
fcom
adc
aam
adc
leave
add
enter
int3
dec
cs
enter
enter
rol
(bad)
fbstp
and
rcl
aam
xor
imul
pop
inc
dec
inc
sbb
and
add
pop
clc
pop
add
mov
or
add
xor
inc
jns
out
mov
fsubp
out
mov
cmp
mov
cmove
in
add
add
(bad)
jno
xor
or
adc
lock
shr
int3
fldcw
xchg
pop
pushf
scas
add
adc
cmp
movups
fcomp
sbb
ins
adc
retf
sub
scas
jmp
sub
inc
adc
retf
or
inc
or
and
adc
push
popa
(bad)
lods
adc
rol
in
sbb
outs
add
jmp
adc
rol
adc
push
sbb
or
xor
aaa
add
out
or
pop
imul
rcr
jb
xchg
and
(bad)
lock
or
add
lods
push
mov
push
xor
aam
pop
sub
mov
adc
pop
lods
fdiv
bound
scas
fisttp
hlt
add
mov
rcl
dec
mov
jmp
out
pushf
int3
mov
add
add
je
xchg
or
and
adc
add
add
movs
ret
pop
ss
mov
pop
shl
pop
dec
mov
dec
mov
mov
nop
cmps
and
add
xor
icebp
cmp
iret
xchg
push
loop
jmp
push
xchg
ss
sub
popa
jp
sbb
sub
loopne
push
inc
inc
pop
push
pop
paddd
div
dec
push
inc
aas
or
inc
dec
inc
inc
dec
test
add
mov
ja
or
add
jae
mov
or
inc
cmc
dec
out
jae
lock
mov
push
jns
mov
push
out
lock
adc
xlat
jp
imul
ret
push
lock
and
dec
or
xor
lock
xor
jns
lock
and
icebp
jns
inc
enter
adc
sub
icebp
push
push
mov
xor
mov
in
cdq
out
jae
pop
adc
push
sbb
fst
test
adc
mov
lahf
or
inc
mov
and
sub
and
pop
add
or
loop
aam
or
dec
dec
shr
mov
dec
rcl
inc
int3
pop
mov
xor
xchg
jbe
and
or
dec
add
cmp
sub
nop
xchg
out
or
pusha
and
add
or
mov
push
inc
pop
mov
inc
push
clc
xchg
(bad)
cmp
lods
fxch
aad
cs
sub
jle
or
les
or
out
mov
mov
pop
xchg
outs
hlt
repnz
fsubp
test
adc
or
add
inc
inc
imul
inc
das
push
dec
sbb
ins
ja
xor
mov
pop
dec
gs
jo
icebp
inc
fmul
aam
fs
inc
xchg
ja
cmc
in
and
sub
and
cmc
je
dec
leave
ins
cmc
test
push
in
jb
pushf
cmc
pushf
cmc
pushf
cmc
and
iret
add
push
or
and
or
mov
cld
nop
cmp
daa
mov
out
mov
sar
mov
and
cmp
shl
xchg
test
sub
xchg
or
mov
push
or
cmp
xor
or
inc
in
xchg
into
cmp
sbb
cmp
test
movs
mov
pop
std
or
popf
out
fisub
cmp
sbb
jo
xchg
lods
iret
into
fmul
or
jne
jo
sub
adc
fisttp
pop
dec
les
dec
add
enter
cmp
add
cmp
and
cwde
std
and
call
and
jmp
mov
aad
inc
dec
push
movs
mov
test
out
out
lods
lods
mov
cmp
movs
in
sbb
movs
movs
clc
dec
push
add
mov
nop
pop
jb
aam
add
push
cwde
sbb
xor
std
cmp
dec
out
cmp
(bad)
(bad)
sbb
loopne
inc
sbb
fdivr
xor
mov
adc
dec
(bad)
fmul
std
hlt
add
pop
rcl
dec
dec
lahf
mov
nop
inc
test
test
mov
arpl
pop
dec
or
ins
(bad)
je
ret
push
and
mov
and
(bad)
hlt
mov
inc
xchg
(bad)
lods
jg
sbb
test
push
inc
les
adc
push
adc
xchg
pop
xchg
add
nop
inc
inc
scas
jns
aam
dec
dec
shl
lock
repnz
push
add
pusha
fs
nop
retf
and
mov
push
gs
mov
jb
push
lock
and
in
dec
adc
sbb
sbb
call
pushf
sti
es
clc
push
jmp
stc
nop
and
mov
scas
push
sub
push
jne
pop
push
cmp
cmps
dec
dec
stos
add
movs
in
xor
push
xor
mov
and
fcmovbe
xchg
push
pop
jae
xor
dec
nop
jl
xor
dec
add
daa
fcmovnb
adc
pop
js
scas
or
xor
ss
push
add
xlat
xor
daa
ins
or
push
outs
xchg
les
leave
aaa
pop
(bad)
mov
xchg
cmp
stos
data16
das
pop
add
mov
xchg
inc
fst
fistp
shr
xor
sub
add
mov
add
hlt
gs
jmp
push
or
inc
fidiv
dec
jp
add
pop
inc
push
adc
adc
lods
pop
inc
nop
aas
mov
mov
pop
xor
or
jae
mov
or
or
pop
aaa
mov
and
inc
jb
and
inc
pusha
dec
xchg
and
dec
jne
loop
sbb
movs
fcmovb
imul
call
not
enter
xchg
lods
imul
add
cmps
mov
rol
inc
ret
add
mov
scas
or
cli
enter
and
dec
cld
ins
or
dec
push
mov
stos
pop
arpl
xor
cmp
inc
dec
in
pop
mov
je
or
je
imul
jmp
mov
call
pusha
clc
push
or
nop
out
addr16
sbb
xor
out
out
inc
sbb
nop
out
ins
cdq
sub
mov
dec
sub
pop
dec
push
pop
add
data16
dec
outs
in
xor
sbb
imul
pop
inc
jne
or
ret
mov
out
mov
mov
dec
fs
outs
inc
mov
ja
ja
or
cmp
push
push
jae
das
clc
es
movs
icebp
outs
and
sbb
das
lock
and
test
div
add
repnz
adc
dec
push
xor
(bad)
lock
fs
pop
adc
in
mov
loopne
mov
or
and
jo
ins
cdq
push
mov
or
fcomp
fbstp
jl
adc
stos
movs
imul
jle
arpl
retf
mov
nop
aas
xchg
xchg
out
aam
lock
cmps
cdq
sub
stos
jl
xchg
aaa
inc
dec
cmc
mov
arpl
lock
inc
(bad)
mov
addr16
cmp
pop
sub
sbb
lock
dec
pop
test
les
push
enter
lds
push
lods
hlt
sbb
jge
ror
lock
call
add
xchg
(bad)
pop
push
pusha
xchg
stos
xor
push
aam
test
lods
loopne
in
inc
inc
pop
or
add
dec
scas
(bad)
mov
mov
inc
add
sbb
or
add
or
add
inc
lahf
adc
push
and
or
inc
lods
adc
imul
sbb
inc
xor
or
mov
lock
inc
mov
xchg
gs
add
jne
sbb
loope
rcr
fdiv
call
retf
cmp
or
push
cmp
(bad)
(bad)
ror
sub
dec
and
call
pop
push
hlt
mov
mov
js
mov
xchg
clc
mov
push
push
xor
or
or
or
xchg
cmp
jle
push
push
or
cmps
cmp
mov
or
adc
pop
test
jno
sbb
loope
bound
sbb
fcom
(bad)
cdq
movnti
push
sub
ins
cmc
and
ror
pop
add
and
pop
ret
out
ins
in
cdq
fwait
pop
repz
aas
and
les
push
sub
aas
add
lea
xlat
xor
xchg
mov
xchg
xchg
idiv
inc
or
cmp
neg
dec
add
lock
dec
sar
and
fmul
into
mov
arpl
xchg
es
mov
outs
jb
add
push
and
inc
test
fiadd
xchg
aam
jno
mov
xor
outs
repnz
hlt
and
dec
add
adc
pop
cld
mov
dec
add
test
cmc
das
or
dec
mov
mov
fcomp
cmc
mov
xchg
inc
nop
push
add
add
push
mov
jmp
jbe
jp
mov
(bad)
dec
repz
pop
ss
inc
nop
mov
or
or
lds
stc
(bad)
test
and
mov
xchg
inc
pop
jne
outs
imul
rcr
je
add
fdiv
pop
ds
movs
(bad)
jns
jbe
sbb
xchg
test
and
sbb
imul
hlt
and
pop
mov
sub
shr
lods
pop
test
arpl
imul
cmp
rcl
test
push
jp
jge
dec
ins
test
add
and
(bad)
push
lods
mov
adc
lods
nop
dec
outs
mov
sub
push
push
jne
jbe
xchg
clc
or
add
mov
add
mov
scas
add
push
sti
dec
dec
add
push
push
fadd
mov
arpl
cmp
or
add
adc
(bad)
xor
mov
sub
sub
add
and
(bad)
jmp
inc
stos
test
call
movs
mov
loopne
add
out
pop
pop
or
ret
test
add
xor
xchg
jns
adc
dec
and
xchg
pop
test
cmp
fimul
lods
or
or
adc
xchg
adc
or
push
imul
or
sbb
or
sbb
push
sbb
inc
mov
pop
dec
test
test
pop
movups
mov
mov
push
arpl
mov
lds
cs
ror
add
mov
in
add
jno
enter
jbe
cmp
neg
movs
lea
mov
cli
sub
ret
cmp
(bad)
shl
or
pop
inc
ficom
jbe
mov
push
adc
and
fs
and
lods
(bad)
cmc
(bad)
test
dec
dec
dec
dec
push
mov
ret
inc
push
push
inc
dec
dec
dec
inc
neg
arpl
push
inc
push
push
pop
inc
push
push
and
or
in
mov
stos
dec
inc
push
sub
or
mov
dec
xchg
imul
mov
fs
imul
or
dec
cmp
sbb
jle
iret
mov
add
daa
lods
ret
jp
clc
xor
pop
clc
and
jne
inc
push
jmp
rcl
xchg
xor
push
sub
iret
sub
adc
jecxz
inc
add
add
inc
dec
fwait
movs
adc
fwait
pop
inc
das
push
dec
scas
adc
not
js
(bad)
int3
jbe
push
pop
cmp
inc
mov
iret
call
xchg
xchg
inc
mov
ss
xor
add
mov
dec
out
add
idiv
jb
jbe
mov
or
loopne
in
popf
retf
in
jmp
sbb
lea
xchg
push
push
enter
in
popa
mov
test
mov
mov
arpl
inc
xchg
jb
hlt
and
mov
inc
lea
xor
scas
ror
inc
sbb
jmp
sbb
in
push
mov
adc
sbb
xchg
add
arpl
add
daa
in
movs
or
mov
and
loope
mov
lea
ins
pop
add
and
jo
sbb
pop
dec
movs
stc
jbe
mov
dec
add
xor
das
pop
fadd
add
or
das
jbe
mov
fs
call
pop
push
inc
stos
or
sub
inc
inc
imul
push
cmp
cdq
addr16
jmp
sbb
repz
push
inc
test
rol
or
rcr
or
mov
sbb
sar
ss
in
and
pop
dec
pop
add
add
mov
jge
lock
push
ret
jecxz
aad
push
pop
(bad)
push
inc
ror
leave
sub
add
outs
enter
add
clc
pop
test
cmp
je
pop
hlt
or
sbb
push
call
ja
iret
sbb
pushf
rol
call
inc
sbb
adc
push
enter
cmp
dec
pop
test
pop
sbb
mov
ins
in
cmp
iret
pop
xchg
mov
nop
pop
and
sbb
sbb
jb
pop
push
pusha
js
pusha
js
mov
pushf
sbb
and
add
mov
arpl
rol
add
sbb
sbb
mov
loopne
inc
aam
or
mov
outs
(bad)
push
xor
pop
push
mov
pop
sbb
sbb
mov
and
add
mov
dec
gs
imul
adc
out
sub
cmp
push
jne
popa
and
xor
jecxz
and
mov
inc
push
in
loopne
pop
in
hlt
or
sti
and
cmp
mov
lahf
data16
and
cmp
push
or
mov
inc
inc
test
dec
pop
aaa
adc
imul
push
popa
imul
aas
push
lods
inc
fsub
ins
ins
scas
jns
movs
jo
pop
je
pop
pop
xchg
pop
pop
cmp
pop
xor
jmp
and
and
in
add
cmp
inc
push
in
push
lock
and
lods
and
cmp
and
and
pusha
jmp
and
in
push
mov
pushf
and
outs
push
inc
xchg
jg
jae
jae
arpl
xchg
add
add
daa
and
and
in
and
and
dec
ds
and
and
push
jo
mov
and
fisttp
push
ss
cmps
cmp
nop
test
shl
mov
int3
and
loopne
in
and
push
pop
cmp
or
add
push
in
xor
cmc
sbb
adc
xchg
xchg
sbb
mov
push
repnz
enter
or
fild
rol
test
scas
xlat
add
pop
sbb
sub
nop
cmps
outs
daa
daa
cmp
daa
mov
push
repnz
dec
stc
pop
and
sub
sbb
add
jb
loopne
sub
inc
cmps
dec
or
adc
mov
and
fidiv
sub
pop
ja
jp
xchg
jo
or
inc
or
clc
push
xchg
xchg
or
popf
lods
ror
sub
xlat
xchg
push
xor
jb
cs
or
sbb
pop
push
out
int
push
repz
sub
(bad)
sub
and
cmp
mov
pop
(bad)
sbb
and
daa
ins
fisttp
jb
push
mov
neg
mov
xor
pop
sbb
movs
jb
ins
sbb
inc
mov
cmp
add
jo
sbb
and
inc
clc
xchg
in
and
ss
sar
sub
pop
or
loopne
mov
popa
jns
mov
stos
mov
sub
shr
cld
nop
and
dec
int3
xor
push
fistp
sub
adc
sbb
adc
dec
inc
pop
gs
pop
jp
mov
dec
mov
add
xor
mov
cmp
and
and
sub
outs
mov
sbb
out
stos
cdq
in
xchg
sub
retf
or
sahf
inc
cmps
fnsave
push
das
and
and
fdivr
pop
pop
das
outs
repz
mov
shr
daa
jmp
repz
xor
dec
inc
fucomi
and
jmp
xchg
cmp
cmp
mov
lods
inc
test
push
out
sub
sub
(bad)
scas
mov
sub
push
(bad)
fprem
inc
and
adc
fadd
adc
sahf
push
jno
iret
inc
sub
and
fistp
bound
add
popa
jne
push
push
inc
lods
mov
lea
dec
addr16
repnz
aad
jb
push
pop
adc
jne
and
cmp
(bad)
cs
stc
adc
or
xchg
mov
js
add
js
mov
push
jno
mov
mov
repnz
inc
pop
pop
push
adc
loope
dec
push
test
in
pop
add
arpl
push
jl
je
inc
inc
jg
ja
dec
stos
movs
mov
setne
fistp
repz
and
icebp
push
in
ss
and
or
sti
test
adc
xor
cmp
push
lea
cmp
mov
jb
pushf
pushf
jmp
loopne
ins
out
add
push
inc
or
out
adc
jmp
xor
xchg
add
mov
nop
and
ds
xor
enter
xor
and
dec
call
add
mov
or
xchg
mov
ins
push
rcr
cmp
daa
or
in
add
inc
daa
adc
(bad)
ins
arpl
cli
arpl
push
xor
sbb
addr16
sbb
push
push
das
push
cmc
add
push
inc
dec
push
dec
aas
ror
rcr
adc
push
mov
in
dec
dec
lahf
adc
bound
pop
daa
xor
in
iret
sub
sub
adc
xor
pop
and
add
xor
push
cmps
inc
sar
leave
mov
dec
cmps
or
mov
mov
jb
xor
ja
jo
jne
imul
(bad)
xor
lock
mov
in
push
stos
pop
call
imul
xor
mov
int
dec
ret
and
dec
cdq
xchg
sbb
inc
or
jns
je
ficom
or
add
dec
jmp
pop
pop
aad
aam
ins
and
movs
pop
xchg
or
add
pop
fiadd
or
push
leave
shl
aam
cld
retf
cmp
xchg
mov
mov
retf
jp
adc
add
and
out
mov
mov
mov
ficom
jbe
jmp
cwde
adc
add
sub
inc
ds
push
in
neg
mov
aam
mov
xlat
ins
or
les
fmul
xchg
sub
dec
mov
fwait
cwde
mov
je
rcl
cmp
inc
and
and
and
pop
push
pop
aaa
int
aam
add
fbstp
adc
xor
xchg
add
jge
jno
shl
popf
sbb
inc
cmp
xchg
in
dec
sub
aaa
inc
or
call
mov
cld
dec
push
retf
mov
mov
mov
daa
(bad)
mov
retf
ret
jmp
inc
mov
push
sbb
mov
adc
mov
pop
addr16
popa
mov
pop
nop
xor
cdq
fsubrp
xchg
das
leave
sbb
outs
push
dec
pop
enter
push
cmp
xchg
and
ja
mov
call
mov
jg
cmps
out
rcl
lock
jno
stos
mov
lock
adc
mov
mov
call
shl
test
ins
sbb
or
gs
lea
ret
adc
imul
(bad)
xor
leave
mov
mov
loopne
dec
fcomp
and
test
or
clc
mov
pop
out
mov
ret
adc
push
push
push
mov
outs
nop
mov
mov
int3
pop
ins
and
lods
pop
ja
and
bound
dec
mov
push
inc
push
inc
nop
pop
push
(bad)
lods
daa
cmp
je
shl
mov
js
xchg
icebp
clc
cld
sub
push
dec
addr16
push
mov
sbb
jo
sub
leave
and
cmp
sub
dec
xchg
push
popf
iret
pop
sub
add
push
add
and
inc
or
and
push
mov
xchg
and
xchg
sbb
ret
mov
in
nop
ret
test
jno
xlat
cmp
sub
dec
into
mov
and
pusha
daa
add
imul
push
icebp
inc
cmp
in
sub
adc
in
dec
cmp
mov
leave
leave
inc
and
adc
sub
and
loop
sbb
add
adc
lock
ss
inc
pop
lahf
aaa
ins
call
dec
in
in
push
int
sub
jne
enter
jns
adc
loopne
adc
imul
or
push
lock
dec
cld
test
shr
je
movs
mov
dec
jp
sub
jle
enter
das
xor
ret
adc
adc
add
hlt
xchg
inc
test
mov
cmp
and
lds
jno
pop
add
sub
sbb
pop
add
push
and
mov
adc
inc
lock
je
mov
inc
inc
nop
inc
fist
mov
nop
ins
push
ins
cmp
imul
xor
pop
stos
pushf
dec
pop
pusha
aas
push
fld
inc
jbe
sbb
int
retf
test
mov
mov
or
xchg
dec
(bad)
lahf
loopne
fild
fdiv
xor
call
call
push
adc
adc
sub
imul
push
outs
or
add
or
inc
jg
sub
popa
enter
add
and
add
outs
dec
mov
inc
or
rcr
fcomp
dec
xchg
stos
add
div
jnp
out
inc
cmp
add
add
add
iret
aad
or
add
cmps
add
(bad)
mov
and
jg
dec
jne
imul
or
add
dec
inc
pop
or
shl
stos
adc
sbb
xchg
mov
popa
mov
shr
push
shl
fisttp
fidivr
mov
scas
sub
and
test
and
les
sbb
call
cmp
push
test
mov
cmp
aas
sub
ins
mov
and
pop
mov
sbb
adc
cmp
cs
mov
xchg
add
cmp
jg
pop
cs
in
pop
push
or
add
test
cmp
cmp
adc
mov
in
xchg
and
xchg
inc
xor
add
scas
dec
dec
push
sub
sbb
aas
mov
aaa
popa
fdivr
jmp
cmp
imul
xor
outs
xchg
adc
iret
xor
and
jp
mov
lods
je
sub
push
push
mov
and
clc
pop
addr16
xlat
and
xor
scas
ins
sub
in
sub
out
sub
add
mov
mov
mov
jo
dec
ins
xchg
adc
add
in
loopne
add
in
inc
push
xor
mov
mov
pop
add
mov
inc
inc
mov
adc
dec
es
push
inc
inc
out
mov
fld
cs
push
cmp
push
cmc
sub
pusha
cmps
dec
cwde
outs
ins
xor
retf
pushf
push
push
gs
mov
movs
sbb
or
or
(bad)
push
inc
gs
popa
sub
stos
repnz
mov
ror
add
jae
inc
pop
call
mov
in
jae
aas
sub
inc
fldenv
push
inc
sbb
in
dec
sbb
xor
lods
lods
mov
mov
pusha
jg
addr16
daa
je
sub
in
ret
jg
cwde
mov
je
dec
je
loopne
xor
sbb
cmp
arpl
inc
add
and
hlt
nop
mov
sbb
cdq
push
fs
cdq
nop
or
xchg
mov
cmp
xor
xor
mov
pop
adc
xor
push
loop
stos
mov
pop
out
push
push
inc
pop
cli
leave
not
dec
pop
or
dec
inc
ret
or
inc
pop
or
jmp
out
jl
push
pop
push
daa
pop
repnz
inc
shl
test
push
fwait
(bad)
and
sub
xchg
cmp
cmp
ret
xor
cs
adc
mov
test
mov
and
call
adc
xor
xchg
aas
pop
add
xchg
xor
ja
(bad)
jbe
dec
dec
jg
inc
inc
dec
arpl
enter
xor
xor
pop
mov
inc
pop
inc
push
dec
push
push
and
and
and
sbb
mov
add
rol
push
jg
rol
imul
pop
or
add
fs
call
icebp
daa
aaa
daa
add
(bad)
call
call
dec
cmp
add
mov
cs
mov
sub
cmps
add
mov
xchg
fadd
adc
call
(bad)
fisub
jbe
add
std
mov
or
mov
ins
mov
inc
add
pop
add
mov
push
dec
or
sar
mov
push
repnz
xchg
imul
in
xor
add
inc
ins
std
adc
das
pop
push
popa
adc
inc
into
(bad)
inc
and
addr16
cmp
clc
cmps
int
dec
jb
mov
xchg
xchg
sbb
and
(bad)
fld
aaa
or
enter
cdq
mov
push
pop
addr16
in
mov
adc
inc
imul
test
push
or
cdq
mov
jne
sub
adc
dec
push
gs
sar
xchg
pop
inc
in
mov
pop
cmp
fimul
and
test
movs
int3
rol
and
aad
pop
xchg
push
pop
and
(bad)
das
fs
and
mul
cmps
clc
push
dec
xor
dec
inc
dec
retf
sbb
ror
jecxz
pushf
add
out
popf
test
xor
sub
jmp
sbb
jne
push
outs
outs
call
mov
and
and
es
sbb
sbb
mov
ret
push
pcmpeqw
test
xor
add
push
xor
shr
std
mov
inc
jmp
and
cld
call
adc
jo
retf
push
aam
mov
dec
jne
inc
je
or
jmp
js
mov
push
sar
adc
sbb
test
lds
and
xor
add
add
or
push
sbb
dec
(bad)
arpl
test
inc
add
mov
mov
in
fld
or
das
clc
test
dec
into
add
pop
jl
pop
ja
(bad)
push
cmp
out
add
inc
out
cmpxchg
add
imul
jns
and
movntq
(bad)
in
dec
into
in
mov
add
dec
xor
sub
retf
pop
adc
mov
test
loope
into
add
hlt
stc
xchg
rol
mov
inc
icebp
or
cmp
int
inc
add
adc
adc
sbb
dec
push
adc
fistp
lock
sbb
mov
je
les
test
inc
jl
cmp
leave
xor
out
call
cli
callw
or
push
and
pop
sub
inc
push
adc
add
add
pop
add
sub
test
adc
sbb
inc
jg
cmp
lock
cmp
je
inc
dec
sbb
sub
xchg
xchg
aam
push
scas
fimul
jo
loopne
fistp
adc
adc
pop
push
jo
xor
mov
or
inc
outs
sbb
add
push
repnz
dec
hlt
(bad)
push
add
shr
mov
push
ficom
push
push
push
push
(bad)
sbb
mov
cmps
dec
adc
idiv
out
rol
cmp
into
push
adc
scas
imul
push
lock
adc
or
cmc
inc
inc
mov
pop
xor
ins
inc
xchg
aad
adc
add
in
push
push
cmp
xor
dec
cmp
adc
xor
rol
dec
jae
int
push
and
rcr
push
sub
sbb
mov
cmp
and
in
pop
gs
loop
sub
dec
adc
or
(bad)
dec
inc
out
and
adc
mov
xchg
icebp
adc
jne
add
push
adc
jo
push
(bad)
jl
jbe
movs
push
jo
pop
inc
gs
iret
rol
jb
imul
pop
in
popa
int3
cmc
das
pop
push
inc
lods
das
inc
and
or
dec
sbb
fs
adc
adc
je
xor
bswap
mov
cmp
cmp
inc
mov
cmove
or
add
push
mov
mov
ror
out
fcomp
push
pop
push
std
push
addr16
push
ins
push
push
add
in
stc
push
or
mov
push
in
in
sbb
sbb
shl
add
add
push
movs
loop
add
push
cmp
and
and
sbb
dec
push
inc
jne
ror
outs
(bad)
jo
add
mov
test
ins
gs
es
inc
outs
call
inc
js
je
sbb
push
mov
dec
or
bound
pop
push
(bad)
push
mov
dec
outs
cmps
lods
je
daa
into
ins
das
lods
imul
xor
sub
inc
outs
fs
dec
(bad)
sar
inc
dec
mov
ins
enter
xlat
add
sub
sbb
or
inc
push
xor
ror
adc
pop
sbb
xor
adc
movs
mov
sub
call
cmp
jo
sahf
add
and
aam
das
adc
rcl
ss
ss
push
mov
call
xor
add
push
sub
and
je
push
cwde
push
jg
dec
(bad)
mov
sub
(bad)
or
adc
sbb
enter
out
mov
ror
jmp
mov
jbe
jmp
mov
xor
unpckhps
xchg
ja
lea
jo
call
or
pop
adc
dec
pop
or
adc
inc
pop
jb
sbb
xor
dec
add
push
enter
fs
jo
pusha
add
js
test
push
mov
dec
mov
mov
mov
adc
mov
bswap
outs
xor
mov
sbb
push
inc
pop
retf
sub
je
test
aad
fs
and
xor
inc
sub
cs
or
js
in
push
push
pop
or
inc
ds
sbb
push
adc
sbb
mov
ds
ds
cld
xor
jle
or
adc
inc
push
inc
sbb
and
pop
rcr
pusha
add
pop
pop
(bad)
and
add
inc
push
push
ret
adc
sub
mov
fldenv
add
mov
cmp
add
inc
ja
lods
push
lods
push
push
daa
sub
and
adc
lock
add
xlat
xor
add
inc
(bad)
xchg
hlt
pop
inc
push
dec
cmovns
push
push
jo
add
mov
cmps
ins
pop
push
push
push
inc
inc
dec
dec
or
lods
jno
sar
pop
and
mov
pop
inc
inc
push
pop
iret
and
pop
sub
jb
jb
jmp
xchg
lock
cdq
dec
cmp
and
leave
adc
int
aam
imul
or
jbe
xchg
(bad)
ret
sbb
(bad)
mov
scas
pop
imul
test
adc
xor
pushf
sar
and
and
jle
jns
dec
pop
(bad)
int3
aaa
dec
hlt
mov
jle
adc
and
out
or
lock
push
fbld
imul
stc
jl
das
push
or
or
clc
adc
repz
fcom
and
jno
fcom
dec
mov
inc
adc
sub
ins
xchg
jne
sub
or
mov
mov
pop
aas
jl
lock
fsubr
loopne
push
add
fadd
or
add
stos
push
lods
sbb
imul
mov
int3
add
inc
daa
dec
adc
and
add
and
inc
dec
inc
push
add
mov
mov
psubsb
popa
cmp
dec
dec
clc
and
out
push
add
fisttp
(bad)
cmps
sub
pusha
mov
aam
jns
add
add
dec
retf
imul
pop
fcom
pushf
or
push
xor
sub
popa
pop
mov
in
xor
(bad)
mov
or
mov
test
pusha
adc
inc
inc
hlt
movs
adc
pop
dec
fimul
dec
stos
fld
mov
adc
hlt
adc
push
sub
mov
clc
push
lods
sbb
cmp
pusha
shr
xchg
das
sub
push
add
cs
cmp
imul
cmp
inc
aas
xchg
rol
out
imul
pop
pop
dec
sub
jp
or
mov
jl
mov
lahf
inc
fcmovbe
dec
loope
push
in
retf
sub
cmp
nop
std
cld
std
enter
pop
and
push
jb
xchg
clc
push
clc
fdiv
inc
inc
int
pop
sbb
dec
push
imul
in
rol
cmp
xchg
sbb
cmp
mov
ret
inc
or
inc
pop
lock
std
cld
shl
pop
in
in
shl
xor
add
dec
jge
shl
loop
rcr
sbb
popf
lock
pusha
enter
mov
mov
mov
add
push
xor
or
call
sub
iret
fld
dec
sar
and
imul
adc
cdq
xchg
fdiv
f2xm1
addps
xchg
cs
mov
xchg
jns
scas
and
cdq
mov
add
adc
push
js
int3
(bad)
dec
jae
add
ror
pushf
pusha
xchg
test
or
sbb
dec
call
(bad)
(bad)
loope
in
adc
enter
int
adc
jae
int3
sub
outs
in
cld
sub
retf
mov
sub
hlt
ret
pop
xchg
mov
inc
mov
inc
sub
mov
test
mov
hlt
xor
movs
clc
pop
lods
sbb
xchg
dec
lods
push
adc
test
movs
sub
pushf
adc
cdq
xchg
retf
and
add
mov
inc
mov
div
pushf
and
enter
retf
add
mov
pop
gs
jnp
add
ja
int3
xchg
pop
mov
push
mov
fs
movs
sub
pusha
cwde
jne
aam
pop
es
aam
xor
xchg
call
dec
push
pusha
sbb
mov
fs
sbb
add
push
or
pop
dec
cmps
jmp
and
jno
loopne
cld
lock
jbe
push
jmp
mov
pop
icebp
add
enter
dec
in
jl
mov
jno
arpl
ins
cs
xor
jg
jo
fnstsw
fs
mov
xchg
sbb
aam
aam
int3
cmp
jo
mov
xchg
mov
push
pop
mov
mov
mov
push
pop
test
pusha
cmp
shl
pop
ins
cmp
fstp
mov
pop
or
sbb
inc
sub
aad
sub
js
or
inc
xchg
sub
push
pusha
aad
ds
ror
fisttp
push
jo
adc
shld
push
push
push
es
add
dec
mov
xor
dec
pop
ret
ret
hlt
test
dec
mov
in
mov
data16
xor
bound
sub
adc
mov
in
call
nop
out
add
cmp
pop
shl
nop
retf
popa
push
pop
test
dec
add
in
mov
push
jb
xor
enter
out
pop
(bad)
and
push
(bad)
dec
jle
xor
fsub
jle
and
or
hlt
adc
pop
jle
sbb
sbb
or
hlt
hlt
sub
inc
lock
cs
jmp
shr
adc
dec
gs
sub
aam
or
jb
jb
push
dec
enter
xchg
(bad)
jmp
fmul
xchg
stos
sbb
or
repnz
or
mov
sub
sbb
arpl
and
or
jg
xchg
and
ror
and
cdq
and
push
cdq
xchg
or
dec
or
push
xor
add
sbb
dec
sub
pop
add
gs
cs
sbb
dec
je
and
lods
adc
in
dec
dec
mov
add
jmp
cmp
lahf
mov
jno
addr16
xchg
test
das
outs
adc
inc
mov
enter
jmp
call
cmp
mov
lahf
or
call
clc
inc
dec
push
xlat
repnz
pushf
jl
xlat
dec
(bad)
in
nop
out
das
mov
or
pusha
shl
or
or
push
repnz
add
dec
push
clc
mov
pop
ja
add
push
xchg
push
mov
outs
inc
pop
test
dec
dec
jno
jae
adc
lahf
pop
leave
lock
mov
mov
adc
dec
in
not
adc
xor
in
and
hlt
adc
add
jg
div
push
outs
push
adc
stc
gs
inc
rcr
lea
(bad)
dec
in
cld
sbb
loopne
inc
sar
lock
sbb
cmp
(bad)
push
cld
mov
adc
repz
or
dec
in
xchg
call
lods
lahf
call
test
sbb
sbb
inc
inc
inc
lods
add
push
retf
ret
mov
add
xchg
loopne
in
nop
pop
outs
mov
jb
pushf
pop
stos
aam
cmp
fsubr
adc
inc
out
xor
enter
sbb
or
and
rol
cmps
add
cmp
cmps
inc
je
pop
mov
sbb
xor
inc
jmp
mov
mov
xchg
mov
dec
pop
sub
daa
mov
cmp
rcl
in
mov
mov
mov
out
and
mov
adc
cld
in
clc
mov
cmp
push
retf
push
fld
enter
shl
xchg
xor
movs
or
cmp
test
add
pop
cdq
test
fadd
push
lods
push
add
retf
mov
shl
or
cmp
fucomp
loop
fsub
mov
leave
adc
stc
movs
scas
lock
fsub
cld
push
cmps
enter
jmp
daa
push
xchg
xchg
cwde
pop
fsub
mov
add
xchg
cdq
int3
mov
xchg
ins
sbb
xchg
in
addr16
xchg
sub
push
das
push
aad
or
mov
icebp
jns
jmp
(bad)
lea
xor
xchg
push
addr16
fsubr
nop
add
push
mov
cwde
outs
lods
or
pushf
fadd
addr16
xlat
and
data16
mov
inc
sub
lods
xor
fcmovbe
pop
push
jp
xchg
or
mov
shl
push
pop
shl
xchg
push
xchg
lea
iret
sbb
xchg
sbb
lock
das
int
popa
push
into
add
in
xchg
and
pusha
pusha
hlt
jbe
adc
clc
mov
cmp
push
xor
je
loopne
test
lods
out
jg
add
or
aam
xchg
pop
cld
jae
push
adc
sbb
test
pop
test
data16
scas
(bad)
jge
add
sub
ror
(bad)
adc
mov
sbb
cmp
adc
test
outs
gs
adc
mov
sub
pop
or
sub
sbb
xchg
push
enter
pop
out
dec
cld
in
fwait
adc
fldenv
dec
add
ud1
inc
dec
loop
cwde
cld
or
push
cli
inc
jge
inc
cmp
loopne
fidiv
aad
call
daa
test
push
test
or
and
enter
fild
lock
nop
push
(bad)
mov
or
js
fsub
cmp
adc
pusha
pop
add
jb
add
xchg
imul
retf
xor
int
pop
adc
inc
sub
add
xchg
and
and
sub
ror
pop
mov
add
dec
fild
inc
and
imul
jmp
sbb
adc
or
xchg
sbb
sbb
fistp
sbb
adc
sbb
mov
or
jge
bound
jecxz
test
dec
fwait
adc
mov
aas
nop
loope
xor
push
rol
or
and
mov
in
fldenv
push
sbb
adc
mov
add
hlt
fld
cdq
repz
sbb
cld
sti
cld
sti
sbb
push
clc
inc
sub
add
es
xchg
and
sub
cdq
xchg
retf
nop
lock
nop
sub
adc
add
xor
int3
push
fstp
add
call
xchg
jl
adc
and
sti
in
cmps
in
(bad)
ficomp
or
imul
hlt
or
adc
add
adc
fdivr
xchg
fidiv
js
add
or
push
fsubr
aam
push
cmp
or
loopne
sar
dec
ss
xchg
int
sti
rcr
mov
dec
lea
adc
ror
enter
jb
adc
les
ins
(bad)
ror
movs
xor
lock
push
inc
dec
jnp
add
test
or
retf
push
mov
adc
ret
adc
xor
push
(bad)
fstp
repnz
ins
xor
mov
and
mov
mov
out
je
or
adc
dec
shl
(bad)
cmp
sbb
arpl
adc
push
xor
push
add
mov
inc
jmp
dec
arpl
xor
xchg
push
les
out
or
(bad)
in
push
xchg
jo
xchg
and
mov
add
mov
or
dec
sub
sbb
test
aas
imul
movs
or
mov
cdq
xchg
or
cwde
les
xchg
xchg
pop
ror
cdq
fsub
pop
nop
nop
push
jno
and
imul
jo
push
pop
enter
dec
sti
mov
mov
pop
lds
imul
enter
test
pop
xor
aam
cmp
dec
js
ins
leave
nop
pop
dec
jl
je
and
jb
jo
test
call
sbb
inc
push
imul
in
push
add
pop
scas
lods
add
nop
retf
call
sbb
or
jecxz
xor
imul
push
xchg
pusha
or
push
push
jns
and
and
pop
sbb
lock
cwde
pop
in
jb
and
sub
(bad)
push
dec
add
xlat
mov
mov
test
or
add
js
movs
xchg
or
cs
fwait
pop
or
inc
aaa
push
clc
ror
movs
mov
and
rcr
sbb
repnz
cmp
inc
sti
fsubr
inc
adc
pop
test
adc
cmps
daa
jnp
out
fldenv
test
push
dec
out
pop
add
test
or
or
add
adc
inc
enter
add
mov
hlt
dec
dec
or
and
ror
shl
das
sub
hlt
(bad)
xor
sub
outs
push
xchg
or
push
xchg
inc
add
mov
pop
je
cmp
jle
sub
pop
aas
mov
shl
jae
or
dec
out
das
dec
or
push
nop
sbb
aad
nop
iret
add
add
inc
add
sub
cmp
idiv
mov
push
xor
add
sbb
push
xchg
enter
and
and
add
push
or
movs
sub
movs
movs
fwait
xor
les
xor
adc
adc
nop
dec
push
loopne
hlt
movs
or
push
adc
inc
and
loop
jns
or
fdivp
mov
inc
lea
mov
add
sbb
jecxz
xchg
add
mov
call
mov
(bad)
or
cmp
and
(bad)
mov
lods
imul
aad
jo
or
imul
rol
xor
ret
push
inc
outs
aas
cld
cli
xchg
adc
sub
shl
hlt
dec
imul
imul
xor
es
xchg
dec
call
jmp
loopne
cli
ror
icebp
adc
dec
arpl
(bad)
aam
xchg
popf
inc
ss
mov
dec
sub
cmp
adc
int3
cli
daa
clc
push
fnstcw
int3
mov
add
xchg
xor
enter
enter
xchg
les
push
pop
pop
sub
jg
inc
adc
cli
sub
sar
fisub
add
(bad)
and
je
adc
and
mov
add
or
adc
ins
mov
mov
adc
arpl
add
mov
and
adc
or
cli
or
es
fimul
xchg
dec
pop
sub
cdq
mov
mov
mov
lods
adc
xchg
nop
ds
dec
mov
push
fstp
ficom
xor
fldcw
fidiv
dec
ror
sti
cmp
pop
sub
movs
mov
mov
movs
int3
pusha
mov
sbb
push
imul
xor
sar
pushf
loopne
jns
push
or
fdivp
nop
xchg
fist
(bad)
fisttp
fwait
iret
jecxz
mov
cmp
inc
(bad)
sub
jo
jmp
lea
das
push
mov
or
xchg
pushf
loopne
test
cli
mov
pusha
fild
out
std
adc
je
push
dec
bound
add
in
nop
iret
sbb
js
aas
xchg
add
adc
js
scas
push
test
dec
fdiv
dec
push
mov
les
mov
ret
and
inc
in
ins
push
push
cdq
xchg
or
cwde
or
jb
and
pushf
adc
mov
and
and
retf
daa
les
xchg
or
mov
or
adc
dec
gs
mov
push
retf
add
add
movs
xor
xchg
dec
daa
xchg
sub
mov
mov
enter
fsubr
and
add
add
rol
fild
sbb
sub
loope
xor
dec
enter
push
adc
add
aam
je
aaa
sbb
leave
out
cli
js
push
call
cmp
adc
pusha
inc
pushf
cmp
out
push
xchg
pusha
lds
and
jmp
aas
dec
test
test
test
test
mov
ins
and
in
jmp
in
sbb
adc
xchg
mov
paddusb
aas
jo
xor
push
mul
mov
outs
or
nop
loope
call
or
mov
dec
or
dec
or
or
inc
dec
leave
mov
add
pop
pop
mov
pop
and
movs
push
and
cmp
xchg
mov
movs
push
inc
push
leave
sub
jo
cmp
mov
mov
xor
loop
sbb
adc
dec
out
dec
int3
cmp
xor
es
dec
jecxz
mov
add
xchg
pop
inc
mul
cwde
stos
mov
ins
sbb
retf
or
call
hlt
or
inc
or
inc
dec
es
pop
aam
push
popa
fadd
cmp
sbb
inc
mov
stc
pop
jne
inc
sbb
push
adc
ds
and
and
xor
adc
push
or
sub
loopne
dec
jbe
add
cdq
in
sbb
and
in
inc
sbb
lahf
clc
mov
loop
mov
adc
lahf
aam
cmc
jecxz
adc
pop
mov
mov
sbb
and
sbb
mov
sub
or
pop
jecxz
lods
xchg
sbb
or
int
jmp
cmp
cli
lods
data16
cs
leave
add
add
push
cmp
push
cmp
inc
mov
clc
stc
psubw
stc
jbe
loopne
popf
dec
in
mov
lock
push
hlt
popf
in
stc
cmps
ins
shr
lods
in
add
sbb
xor
jb
mov
adc
xchg
xor
or
pusha
sbb
sti
push
fdivr
aad
add
mov
addr16
cmps
das
in
sub
cmps
test
cld
xchg
xchg
aad
(bad)
hlt
or
sti
or
fsub
(bad)
fdivr
pop
pop
in
mov
pop
stc
pop
adc
xchg
push
mov
hlt
cmp
rcl
and
push
cs
aam
or
movs
(bad)
or
fadd
in
int3
push
movs
and
ret
add
sbb
jb
rol
in
or
xor
mov
mov
inc
push
movs
mov
inc
test
in
sub
pop
and
cmp
nop
mov
mov
in
xor
test
test
cmp
bound
sub
pop
(bad)
mov
xchg
stc
hlt
loopne
inc
jb
stc
mov
sbb
push
sbb
test
leave
test
sbb
push
les
inc
pop
push
test
rol
adc
inc
adc
pushf
enter
and
or
xchg
adc
stc
xor
in
dec
push
cdq
movs
lea
xchg
xchg
cld
push
les
out
adc
int
test
in
push
xor
mov
mov
loop
pop
jbe
dec
call
pop
xchg
enter
aam
test
dec
cmp
xchg
add
aaa
xor
sbb
xor
xchg
aam
inc
das
push
stc
daa
into
cmp
pop
call
xchg
pop
adc
or
pop
cmp
pop
das
sub
nop
stc
pop
cmp
mov
or
jns
dec
dec
push
or
daa
push
xchg
in
push
test
and
dec
leave
or
xchg
add
xchg
or
inc
ss
push
(bad)
stc
xchg
out
push
cmc
ja
cmp
mov
aad
frstor
addr16
push
mov
stc
daa
ins
cmp
pop
nop
test
stc
test
sub
pop
(bad)
stc
inc
ss
mov
out
mov
ret
push
push
aaa
mov
push
xchg
push
in
les
xchg
dec
cmps
push
movs
das
icebp
add
stc
dec
sbb
enter
stc
jb
cmp
inc
stc
sbb
sub
jmp
sub
sub
stc
movs
inc
pop
inc
inc
or
pop
mov
test
cmp
push
inc
and
je
or
or
xchg
xchg
pop
xchg
sbb
sbb
mov
xor
mov
mov
or
and
mov
and
retf
inc
mov
movs
cmp
scas
sbb
jmp
add
add
out
je
or
or
sub
xchg
push
int3
in
fwait
or
pop
jl
add
and
mov
push
and
in
mov
mov
lea
add
movs
add
sbb
es
jl
rcr
lods
adc
xchg
xor
data16
adc
sbb
cld
ror
add
shl
stc
enter
pop
or
add
inc
or
loope
dec
aam
and
inc
movs
or
lods
xor
add
sub
sub
mov
sbb
call
or
add
sbb
adc
sbb
xor
cwde
or
(bad)
xchg
hlt
dec
mov
push
push
add
mov
ds
push
rcl
fsub
cmps
fs
push
xor
or
push
jb
mov
add
mov
enter
outs
outs
add
add
adc
jmp
sbb
mov
imul
add
sbb
retf
in
cmp
in
xor
push
fs
or
call
add
sbb
movs
inc
js
inc
scas
and
jno
ret
add
in
inc
ss
cwde
mov
(bad)
xor
nop
add
mov
movs
sbb
adc
and
mov
pop
mov
test
xchg
sbb
adc
jmp
test
nop
jp
dec
leave
in
lock
fmul
fmul
xchg
or
mov
cld
lock
mov
cmp
pop
or
push
and
xchg
(bad)
enter
dec
jecxz
and
mov
xor
icebp
add
ins
jns
cmps
push
pop
xor
sbb
mov
and
aam
sbb
test
push
test
sub
xor
adc
xor
mov
ins
movs
adc
retf
and
dec
sbb
mov
mov
jecxz
jb
aas
mov
dec
lock
jns
dec
push
lock
sbb
(bad)
hlt
(bad)
inc
pop
cdq
xchg
retf
or
dec
sbb
pop
pusha
lahf
cmove
jo
bound
nop
retf
adc
enter
adc
les
pop
push
cmp
add
cmp
or
jns
aas
pcmpgtb
jle
retf
push
adc
add
dec
dec
push
in
fadd
nop
xlat
mov
imul
fmul
xor
call
sbb
fsubr
or
dec
xchg
je
cmps
or
rol
jb
ja
movs
es
iret
add
pusha
cmps
ins
jns
test
pop
mov
xor
or
or
jp
pop
xchg
pop
inc
inc
inc
jb
mov
jns
daa
jo
push
ins
cld
add
cmps
movs
lock
pop
ins
repnz
int3
out
inc
dec
mov
adc
inc
dec
movs
ret
add
push
clc
out
loopne
add
adc
jno
loope
pushf
xchg
and
mov
arpl
cmp
pop
add
ja
xor
adc
add
jecxz
sbb
stos
test
xor
pop
cmp
retf
pusha
dec
pusha
dec
pusha
dec
dec
cmp
add
push
add
lock
cld
call
clc
pop
sti
test
inc
pop
xor
test
jmp
dec
icebp
or
dec
fcmovnu
fs
xlat
movs
mov
and
add
pop
push
rol
pop
dec
pop
add
fwait
adc
clc
push
jmp
fadd
mov
push
sub
mov
sbb
inc
mov
push
pop
packssdw
int
ficom
mov
imul
xlat
mov
xor
mov
je
fwait
outs
repnz
dec
mov
je
stos
mov
adc
jmp
jg
fsubr
mov
cli
pop
je
shl
xchg
and
adc
test
test
mov
fdiv
outs
ret
lea
stc
adc
lods
and
es
mov
lea
cwde
shr
add
or
push
or
inc
inc
fimul
pop
dec
movs
adc
pop
es
lock
jns
call
sbb
mov
xchg
scas
pop
inc
rcl
push
fsubr
or
js
adc
fwait
cmps
mov
shr
or
add
or
dec
push
add
hlt
nop
sub
dec
repnz
jnp
sbb
xor
push
and
lahf
and
dec
shr
jo
js
dec
xor
jl
test
mov
ror
jmp
pop
xchg
je
or
mov
xor
cld
xor
add
movs
es
add
fdivr
mov
or
dec
not
inc
push
pop
push
inc
daa
inc
push
push
add
cmp
xchg
and
fwait
and
mov
cmps
sbb
mov
xor
mov
dec
sub
dec
das
add
mov
cmp
outs
pop
and
xor
bound
pop
mov
shl
xor
jg
mov
enter
outs
gs
and
and
cmps
add
pop
(bad)
pop
xor
mov
div
sub
inc
aaa
add
sub
push
outs
daa
mov
loope
test
jl
inc
scas
push
(bad)
adc
stos
and
pop
or
mov
and
ins
aaa
cmovg
xchg
xchg
push
or
or
jmp
fistp
lahf
or
dec
dec
dec
dec
push
dec
push
push
mov
sbb
adc
pop
inc
push
dec
push
push
(bad)
xor
inc
es
xor
inc
dec
inc
popa
aas
xor
inc
inc
or
outs
arpl
or
mov
dec
adc
(bad)
or
outs
add
mov
mov
jle
add
or
rol
push
jo
mov
push
and
and
mov
cs
dec
and
and
xchg
push
xchg
sbb
jae
fs
test
xor
xor
fdivr
or
xor
scas
adc
and
fs
mov
scas
int3
jle
dec
fsub
mov
sbb
jae
das
(bad)
adc
cmp
rcl
xor
or
add
cmp
push
add
adc
fiadd
ins
and
jecxz
enter
scas
das
sbb
or
das
xlat
or
xor
ja
dec
cli
mov
sub
(bad)
cmp
lock
(bad)
jb
lea
dec
add
fwait
push
sahf
int
sub
cmps
adc
and
pop
mov
mov
mov
jl
xchg
or
inc
jg
popa
into
or
dec
daa
(bad)
sbb
outs
mov
call
scas
aad
shr
mov
jg
daa
lea
inc
mov
rol
retf
jns
cmp
dec
(bad)
jno
inc
pop
cs
xchg
pop
in
ret
pop
and
das
jae
jno
or
pop
or
add
popa
(bad)
and
into
jle
fidiv
push
push
xchg
mov
(bad)
cmp
inc
out
sbb
push
inc
push
jne
ds
dec
inc
push
sbb
inc
push
dec
push
loope
jo
or
jne
push
sub
test
or
pop
push
fcom
pop
push
addr16
sub
dec
xlat
imul
aaa
out
scas
fadd
inc
ja
dec
dec
jmp
add
and
xchg
pusha
mov
shl
ror
xchg
push
cmps
call
daa
pop
lods
dec
rol
push
pop
jg
sbb
imul
call
mov
ins
lds
inc
xor
or
popa
push
sbb
add
das
push
inc
push
push
cmps
xor
mov
and
pop
fld
xchg
sub
(bad)
push
gs
xchg
or
xor
and
pop
out
push
xchg
or
stos
inc
rcl
mov
add
iret
test
inc
cmps
mov
or
repnz
fadd
stos
daa
pop
inc
push
push
pop
pop
cdq
in
ds
push
inc
pop
addr16
inc
or
inc
adc
xchg
dec
push
push
daa
add
out
or
ins
in
imul
scas
cmp
mov
xchg
push
ss
arpl
xor
inc
adc
inc
dec
xchg
sub
push
xor
adc
stos
retf
lods
mov
mov
outs
pop
mov
scas
mov
dec
inc
xchg
mov
lock
push
sub
dec
push
test
in
and
jae
not
data16
mul
or
push
mov
push
dec
outs
imul
inc
xlat
(bad)
add
je
adc
xor
xlat
scas
sbb
adc
punpckhdq
and
fmul
push
sub
outs
(bad)
(bad)
leave
popa
cmps
or
mov
fild
jne
rcl
push
test
call
test
mov
imul
movs
adc
mov
sbb
xchg
mov
gs
xor
sub
mov
ja
or
dec
ja
or
pop
lods
mov
push
daa
inc
jg
add
mov
pop
ror
ret
ficomp
mov
inc
or
movs
test
shl
pusha
or
push
mov
rcl
xchg
rol
pushf
mov
cs
push
ja
ins
add
scas
inc
daa
or
push
daa
das
daa
add
or
mov
xor
lahf
mov
add
(bad)
ins
cmp
adc
ret
inc
mov
out
bound
in
ins
aaa
outs
aaa
or
and
ficomp
iret
mov
mov
mov
aaa
xchg
mov
xor
push
pop
aaa
adc
mov
mov
cmp
push
inc
inc
ins
mov
and
frstor
mov
sub
or
push
jbe
xor
push
push
dec
ret
xchg
aad
cmp
xor
push
imul
mov
cmp
daa
mov
mov
jb
(bad)
je
out
and
adc
daa
jae
cmp
push
adc
addr16
es
gs
dec
aaa
and
xor
pop
outs
ret
imul
in
loopne
or
sub
dec
xchg
rcl
xchg
mov
push
jb
pop
das
sub
push
cmp
das
dec
push
push
push
cmp
das
jg
ds
ja
cs
push
mov
push
jl
dec
push
xchg
and
jl
xchg
cmc
and
mov
movaps
sub
or
dec
rol
(bad)
jecxz
and
outs
stos
xchg
lods
cmc
shl
mov
and
and
ins
das
and
test
(bad)
cmp
jae
jae
push
or
arpl
fistp
test
mov
iret
cmp
jge
cs
and
jns
fidiv
adc
pop
add
ja
mov
frstor
cdq
mov
aaa
sbb
sub
mov
adc
cmps
enter
adc
push
inc
push
push
dec
push
dec
xor
pusha
ficomp
loop
cmp
and
sbb
data16
adc
push
data16
or
xchg
cmp
inc
arpl
or
adc
push
inc
outs
mov
cmp
pop
fcom
(bad)
push
inc
leave
clc
sub
sbb
dec
(bad)
fiadd
ss
inc
jo
fmul
adc
pop
xor
xor
xchg
or
push
inc
dec
push
or
inc
jmp
lods
(bad)
fstp
dec
dec
lods
and
dec
fcomp
(bad)
pop
ret
xchg
aaa
adc
rol
popa
add
outs
iret
jb
dec
mov
mov
dec
dec
dec
inc
das
or
daa
mov
push
pop
dec
sub
add
pop
mov
pop
lahf
sbb
dec
inc
out
mov
addr16
(bad)
fidiv
jnp
adc
dec
gs
inc
sub
clc
fadd
(bad)
dec
fs
push
pop
inc
jg
cs
or
test
shl
xor
pop
dec
jbe
ins
imul
dec
mov
xchg
and
out
push
push
pop
push
pop
lods
jns
fist
mov
and
and
enter
rol
dec
imul
aas
pop
dec
push
inc
ret
add
cmc
sbb
pop
sub
xchg
div
movs
data16
jl
add
mov
test
mov
push
dec
inc
push
mov
inc
inc
inc
push
dec
inc
pop
inc
mov
dec
push
xor
inc
gs
daa
inc
sahf
push
pop
and
dec
push
adc
push
inc
mov
call
sub
adc
ja
push
neg
dec
pop
popw
or
sti
inc
inc
push
inc
dec
daa
push
dec
das
cmp
inc
push
ret
or
sbb
dec
test
cmp
inc
dec
fadd
cmp
das
scas
fnsave
push
dec
in
or
adc
das
sbb
aaa
push
inc
inc
fs
push
add
fisub
dec
inc
ja
dec
adc
xchg
push
fdiv
arpl
sbb
dec
push
retf
push
mov
xchg
mov
add
fist
dec
inc
dec
push
push
add
xor
outs
dec
scas
push
outs
and
lods
imul
push
(bad)
scas
outs
sbb
pop
pop
iret
pop
dec
pusha
fidivr
(bad)
inc
movs
neg
push
inc
or
mov
adc
ja
adc
ret
inc
fisttp
mov
mov
popf
in
ja
add
and
test
and
dec
in
jmp
or
xor
push
sub
je
xor
aam
and
and
mov
cmp
in
sub
inc
add
mov
in
or
sub
inc
scas
xor
fidiv
or
mov
jge
stc
adc
xor
mov
sbb
sbb
push
mov
dec
pop
sbb
mov
or
lock
xchg
sub
in
leave
test
xor
(bad)
mov
in
es
xchg
dec
call
lock
pop
int3
pusha
in
mov
retf
and
shl
sub
sbb
in
mov
push
xchg
jbe
adc
or
add
cwde
fbstp
inc
ins
loop
in
imul
push
movs
stos
sub
ret
inc
or
push
inc
mov
fistp
sub
and
cmp
jle
aas
mov
sbb
or
inc
popa
sub
cmp
sub
adc
nop
aad
jmp
or
xchg
cmp
or
adc
jb
and
sub
jl
add
push
push
push
jne
dec
mov
fimul
setae
lock
out
and
or
and
or
push
jae
fsubp
ret
icebp
jbe
ficomp
cmp
adc
in
inc
jmp
cdq
add
imul
rcr
xor
xchg
test
cmps
scas
push
inc
inc
and
add
in
adc
popf
daa
(bad)
jb
sub
imul
add
mov
rol
aam
(bad)
mov
jg
je
and
or
icebp
inc
ins
xor
es
sub
mov
push
push
call
call
mov
addr16
pushf
dec
not
xchg
adc
add
inc
lods
cmps
mov
jl
mov
adc
cld
push
loopne
int3
push
ins
cmp
mov
push
in
icebp
add
icebp
sub
xlat
and
lahf
cmp
push
inc
add
adc
inc
out
test
ficom
aas
inc
xor
mov
sbb
dec
and
mov
lea
retf
push
adc
(bad)
dec
xor
stos
sbb
dec
push
push
dec
add
cld
inc
pcmpgtb
nop
scas
inc
test
sub
hlt
and
sbb
pop
in
mov
getsec
mov
cli
out
xor
or
jle
outs
dec
jno
or
xor
or
in
mov
dec
push
push
stos
leave
hlt
and
mov
adc
or
add
cmp
or
xor
bound
jnp
lods
popa
loop
inc
mov
or
inc
scas
test
pusha
adc
add
lods
or
iret
add
sti
mov
dec
in
push
test
dec
inc
mov
inc
sub
mov
and
loope
cmp
jne
daa
inc
adc
lock
mov
shl
sbb
clc
pop
fsub
enter
ins
leave
pop
xchg
sbb
es
inc
inc
cwde
or
inc
push
xlat
aas
dec
dec
cmps
outs
jae
and
push
and
movs
adc
icebp
aas
inc
inc
movs
rcr
push
dec
pop
xchg
hlt
xor
dec
xlat
cmp
ret
add
retf
movs
dec
ret
pop
xor
test
dec
ds
xor
test
push
xor
ror
mov
stc
push
(bad)
cmps
add
add
dec
les
ret
xlat
push
nop
push
adc
mov
xchg
sub
add
pop
hlt
daa
ins
je
mov
sub
and
add
nop
add
das
xchg
ror
dec
dec
sub
push
push
and
rcl
loope
mov
inc
ror
lods
js
cli
lods
pop
jp
pop
movs
test
movs
std
outs
xchg
jae
push
jo
adc
lock
mov
xchg
scas
sbb
inc
(bad)
jbe
fstp
add
pusha
xchg
and
daa
aas
daa
cmp
cmp
xchg
fimul
mov
inc
sar
cdq
pop
cld
xor
push
push
sbb
mov
inc
and
enter
mov
sbb
test
je
fld
jne
mov
add
pop
xlat
dec
loopne
fcom
adc
ins
fadd
add
movs
icebp
adc
fidivr
daa
pusha
push
ret
push
call
sub
out
iret
ins
inc
mov
xchg
retf
ins
jo
adc
push
jns
push
rcr
into
mov
ins
pop
scas
or
pop
mov
jg
jmp
adc
movs
adc
mov
jle
fcmovnu
loop
cmps
dec
adc
je
lea
jns
inc
retf
push
sub
or
outs
inc
push
fidivr
jp
popa
cmps
mov
sbb
shl
mov
xor
dec
aaa
cld
setae
popa
imul
push
bound
push
je
or
ds
jl
sbb
adc
out
(bad)
aad
daa
inc
pop
or
xchg
push
pop
movs
xor
mov
sbb
test
inc
sar
mov
cmp
loop
dec
iret
sbb
or
je
sbb
mov
xlat
inc
pop
jmp
mov
push
jne
hlt
xchg
or
xchg
add
cmp
or
fbstp
cmp
push
pop
adc
fisttp
aam
sbb
(bad)
xchg
push
add
(bad)
add
add
jb
(bad)
(bad)
inc
add
bound
int
imul
push
xlat
cmp
lea
sbb
cwde
ins
cwde
std
mov
xchg
lahf
jge
add
mov
add
mov
in
xchg
(bad)
mov
in
push
sbb
pop
add
or
inc
call
call
inc
adc
pop
mov
cmp
popa
rcl
xor
out
mov
icebp
cmp
adc
or
pop
mov
pushf
jmp
mov
inc
and
ret
lds
jne
inc
jl
fdivr
mov
xor
in
and
call
jmp
add
or
popf
xor
fld
adc
cmc
push
not
imul
pop
add
shr
movs
dec
adc
adc
inc
inc
(bad)
jmp
inc
ins
jne
push
jno
xor
loop
and
sti
jmp
fimul
dec
inc
std
mov
enter
jnp
sbb
cmps
or
retf
add
in
clc
mov
in
and
sti
clc
mov
and
jns
add
sti
in
clc
pop
ins
int
add
and
sbb
pop
jns
fdivr
inc
fdivr
loopne
dec
in
aas
ins
add
sti
clc
lods
dec
and
push
ss
scas
add
sbb
stos
jg
sbb
pop
push
sub
loopne
ret
hlt
and
or
int
xchg
scas
imul
jmp
bound
adc
les
test
movs
and
out
ins
test
add
shr
and
clc
clc
ds
test
or
xchg
retf
adc
loopne
dec
push
inc
xstore-rng
cmps
les
loop
sbb
ins
pop
lock
push
retf
fistp
test
jge
dec
or
mov
dec
bound
rcr
mov
retf
cld
or
mov
add
aad
inc
add
inc
fdiv
push
mov
jmp
xchg
jmp
adc
int
(bad)
sbb
adc
sti
fidiv
adc
pop
adc
loopne
xor
fidivr
and
mov
rcr
add
test
jae
icebp
clc
fistp
(bad)
enter
(bad)
sub
jo
xchg
dec
js
test
sub
jns
xor
dec
hlt
cwde
add
push
mov
add
inc
or
xor
mov
iret
and
repnz
(bad)
test
ds
dec
ds
dec
aam
cdq
inc
add
xchg
or
out
inc
ja
xchg
mov
es
stos
and
mov
cld
and
mov
push
lods
push
sbb
stos
pop
xchg
push
dec
mov
js
ud1
dec
sbb
dec
and
es
retf
cmp
push
ins
lock
xor
add
mov
inc
idiv
inc
push
xchg
add
lods
inc
mov
add
pop
sbb
pop
cld
ret
adc
rol
mov
adc
and
ja
inc
je
jno
xchg
icebp
pushf
cs
inc
inc
inc
add
jmp
cmps
push
or
inc
push
or
sub
js
je
(bad)
adc
sbb
cwde
mov
add
xor
(bad)
jb
sti
(bad)
sbb
and
test
test
ret
jle
push
push
inc
dec
push
inc
cli
add
jnp
inc
mov
inc
dec
enter
shld
das
loopne
pop
sbb
add
das
cmp
test
inc
rcl
dec
enter
cmp
mov
push
mov
mov
outs
jnp
add
and
leave
inc
dec
push
xor
pop
dec
and
rcr
(bad)
jo
jmp
or
pavgw
aas
jg
mov
cmp
inc
xchg
adc
sub
ror
les
or
adc
std
jo
inc
jg
cmp
out
and
inc
inc
or
loopne
mov
jg
nop
test
clc
jl
shr
xchg
stc
shl
cmp
pop
enter
je
xchg
leave
add
and
xor
xchg
lock
xchg
cld
mov
nop
int
enter
ficom
ins
xor
ins
add
sti
(bad)
(bad)
xchg
lock
cmp
hlt
scas
cs
rol
jmp
mov
add
movs
rol
in
test
inc
enter
ror
jp
inc
leave
or
or
xor
shl
rcl
sbb
inc
movs
aaa
ins
xor
push
subps
jl
sub
lods
jl
in
push
shl
dec
movs
xchg
js
hlt
xchg
mov
push
adc
pop
mov
jmp
xchg
je
loopne
retf
pop
xor
scas
cmc
jmp
fdiv
movs
and
jb
inc
pop
ror
xchg
dec
mov
and
or
sbb
mov
push
or
xor
jne
scas
out
test
cmps
pop
movs
(bad)
aad
aaa
aaa
adc
daa
adc
adc
adc
add
hlt
dec
inc
dec
sub
cmps
pop
pusha
fild
sub
retf
add
inc
hlt
imul
jne
jl
imul
clc
repnz
clc
test
sbb
movs
fnsave
ins
xor
push
cld
clc
sar
(bad)
mov
call
inc
push
add
sbb
or
sbb
dec
xor
inc
lsl
je
outs
add
add
xchg
adc
fcom
in
inc
ltr
stc
retf
adc
mov
cmovs
inc
es
aas
repnz
sub
mov
pusha
push
test
xor
jecxz
aaa
lds
test
sbb
test
push
xchg
fist
sub
and
mov
sbb
(bad)
lahf
mov
push
sub
mov
ss
or
xlat
and
cmp
mov
in
adc
mov
cmp
mov
mov
push
rol
or
jg
push
outs
adc
rcr
cmp
test
or
dec
jnp
sbb
mov
mov
pop
and
adc
rcl
sub
imul
adc
xor
push
mov
test
rol
mov
mov
call
aas
xchg
call
loopne
dec
xor
mov
fadd
popa
gs
sub
xchg
stos
jge
aad
mov
retf
push
fimul
hlt
int3
enter
in
enter
(bad)
jns
dec
fcmovb
sbb
sar
mov
lods
cmp
mov
adc
dec
popa
jmp
int3
shr
sahf
int3
sub
ret
stos
xor
call
imul
in
pop
adc
inc
push
push
mov
sub
dec
pop
sar
cmp
dec
push
jmp
pop
je
stos
add
xchg
aaa
mov
dec
adc
or
imul
add
or
in
cmp
inc
dec
sub
sub
pop
sbb
jle
mov
ffree
mov
adc
or
int3
pushf
push
ds
push
(bad)
out
rcl
shl
xchg
(bad)
les
push
movs
pushf
mov
nop
sub
adc
adc
jne
and
bound
and
jns
fwait
mov
lock
clc
push
push
push
push
sti
sub
pop
push
fcom
das
js
in
ja
pushf
mov
or
xchg
cmps
rcr
pop
out
arpl
pop
adc
cmp
popf
xor
fcomp
fsubr
sbb
mov
mov
test
inc
pop
inc
and
lods
push
fadd
xor
or
loop
mov
pop
movs
mov
jb
and
sbb
mov
ret
push
movs
xchg
mov
push
inc
push
mov
dec
cmp
push
adc
jge
mov
cwde
aas
aam
cmc
pop
pop
inc
add
mov
or
and
mov
jo
clc
pusha
test
mov
lock
xchg
fnstenv
das
push
fs
rcl
inc
cmp
fisttp
pop
sbb
and
movs
xor
dec
mov
dec
and
xchg
pop
cmp
(bad)
jge
adc
push
dec
pop
inc
add
out
mov
pop
sub
jge
add
je
cmp
mov
push
mov
mov
mov
jl
nop
shl
and
stc
adc
je
mov
mov
ins
bound
push
or
or
pop
fisub
lock
stos
mov
jmp
xor
shr
cmp
mov
pop
in
xor
push
pop
jae
popa
arpl
ret
cmp
and
inc
data16
aas
or
out
loopne
xchg
(bad)
dec
scas
add
bound
ror
leave
xor
or
dec
imul
jne
jo
push
or
xchg
cmc
add
sbb
xchg
add
ror
pop
push
mov
add
mov
adc
fdivr
add
jg
push
sub
ins
clc
clc
or
lock
mov
cmp
cmps
sub
or
sbb
pop
mov
fadd
in
add
nop
out
cmp
sub
sbb
xor
cmps
push
loopne
nop
and
add
mov
sub
push
bound
in
jns
stos
test
sub
popf
adc
inc
xor
and
xchg
sbb
mov
enter
sbb
in
cld
dec
xchg
xchg
or
sbb
dec
mov
sub
dec
mov
dec
mov
dec
mov
dec
mov
mov
rol
push
push
jno
stos
popa
jecxz
mov
or
cmp
push
sub
xchg
jbe
xchg
daa
pop
dec
pop
xor
or
stos
cs
or
push
loope
pop
rol
out
(bad)
mov
cmovs
sbb
xor
pop
test
gs
pop
jl
sub
or
rol
inc
and
mov
ror
js
or
add
pop
jge
xor
or
pop
cmp
pop
add
rol
push
dec
pop
dec
cdq
mov
(bad)
enter
xor
xor
mov
nop
or
nop
push
push
mov
dec
pop
and
xchg
adc
leave
jg
dec
inc
push
push
dec
dec
push
push
dec
inc
inc
pop
(bad)
fdivr
inc
dec
and
mov
or
retf
push
in
inc
mov
ret
fsubr
mov
or
lea
push
pop
and
dec
and
dec
jne
gs
push
movs
dec
clc
clc
clc
sahf
pop
xor
and
in
pop
jb
inc
in
lea
hlt
call
call
mov
sub
loopne
adc
arpl
fadd
or
ret
leave
push
and
or
xchg
xchg
(bad)
(bad)
ja
push
aam
or
adc
xor
push
clc
pop
cmps
ret
xchg
xlat
jecxz
sbb
out
outs
mov
jb
ins
pop
jg
js
out
and
sub
adc
stos
inc
and
and
mov
test
test
add
push
pop
(bad)
mov
cmp
xchg
add
and
add
dec
ret
or
clc
call
es
popa
bound
gs
imul
jo
popa
std
outs
dec
cwde
jne
ja
jns
pushf
or
add
das
sub
mov
push
ret
xlat
ror
xlat
pop
sub
cmp
and
cmp
jbe
test
nop
fwait
sbb
dec
pop
sti
add
inc
pop
lock
inc
dec
jle
shl
xor
or
ror
or
and
sbb
rcl
mov
sahf
push
in
jo
and
rcl
push
clc
sbb
add
adc
mov
pop
and
imul
rol
pop
mov
arpl
pushf
inc
mov
cmp
or
push
push
retf
sbb
leave
ret
pop
test
push
(bad)
sbb
or
shl
push
push
and
cld
jb
sbb
dec
or
lea
ins
mov
and
ror
call
jecxz
push
sbb
aam
xor
movs
call
movq
clc
add
inc
or
fcomp
adc
jbe
jbe
mov
mov
mov
mov
fmul
mov
loopne
test
push
xlat
sbb
pop
and
or
adc
add
enter
out
pop
mov
push
and
outs
fs
push
dec
dec
jmp
imul
xchg
pop
clc
pop
add
sub
xchg
inc
and
inc
aad
sbb
push
(bad)
and
dec
mov
or
mov
inc
adc
or
shl
into
add
adc
and
repnz
and
xchg
daa
shl
test
or
push
push
out
add
push
js
push
iret
and
jae
adc
cmp
jb
imul
xchg
lods
inc
dec
test
add
sub
repnz
adc
adc
add
sub
sub
sub
and
sbb
adc
xchg
inc
leave
or
sub
sub
stc
xchg
stos
and
push
adc
xor
mov
jo
or
mov
ds
or
mov
adc
sbb
xchg
ror
and
shr
lds
and
jne
jmp
adc
xor
jb
in
xor
pop
adc
mov
test
jne
sub
test
pop
daa
nop
dec
inc
jne
fld
shl
xor
xadd
dec
cdq
lea
push
pop
fwait
stc
loopne
shl
dec
jmp
imul
xor
or
test
or
mov
mov
xchg
gs
mov
pop
dec
call
dec
dec
jmp
sub
pop
adc
in
sub
mov
jg
dec
pop
mov
sub
jl
inc
pop
repnz
push
inc
xchg
or
les
xchg
jae
xchg
xchg
es
call
loope
bound
lods
sar
data16
dec
adc
pop
mov
cdq
fwait
(bad)
xchg
scas
or
adc
push
mov
cmp
push
or
mov
sub
and
pop
les
push
jge
push
add
push
jle
xor
shl
dec
in
add
xchg
int
shr
mov
add
sub
pop
data16
push
sbb
in
shr
jl
les
push
jns
mov
mov
xor
and
push
add
mov
aas
fimul
push
or
add
jmp
sub
push
pusha
jmp
cs
xor
jmp
sbb
in
pop
lock
xchg
push
(bad)
sub
xor
add
rol
js
inc
mov
mov
add
and
fcom
xor
inc
mov
cmp
sub
xor
sub
add
dec
(bad)
cli
dec
jecxz
inc
dec
and
push
mov
jnp
sub
sbb
ins
cmp
mov
in
call
in
xor
mov
xor
mov
lods
inc
inc
retf
mov
mov
cli
inc
xchg
push
sbb
es
mov
or
mov
sbb
xor
jbe
jmp
in
or
test
mov
pop
ret
shl
fmul
adc
and
xor
push
fisubr
stos
or
push
test
and
out
jmp
add
dec
imul
psubusb
pop
pop
push
je
jb
xor
mov
sbb
jo
jmp
jo
xor
cmp
popa
add
pusha
jb
jecxz
mov
aad
xor
sbb
loopne
xor
mov
rcl
add
mov
fwait
stc
lea
adc
int
or
inc
xchg
shl
adc
xchg
shl
ret
in
mov
std
(bad)
sti
adc
daa
fidivr
cs
mov
pop
jb
cdq
retf
enter
or
sub
mov
(bad)
fld
hlt
ror
pop
push
jmp
je
arpl
sbb
aam
mov
mov
cmp
jle
jecxz
int
push
jge
sbb
push
mov
fmul
xchg
mov
retf
sub
cmp
push
xor
adc
push
dec
popa
mov
int
arpl
dec
faddp
mov
pop
dec
enter
call
fdiv
or
(bad)
fdiv
cs
(bad)
or
loopne
xchg
push
mov
inc
xor
bound
xor
shl
inc
add
leave
fs
mov
ret
and
inc
movs
adc
retf
ss
inc
(bad)
movs
inc
call
loope
dec
mov
pushf
or
in
fs
test
xlat
test
nop
(bad)
or
pop
loopne
or
mov
cmp
xor
or
jecxz
cmp
push
sub
cmp
movs
(bad)
adc
les
push
mov
fs
push
mov
or
ins
mov
and
mov
ss
xor
js
xchg
jo
sub
and
movs
movs
cmc
fwait
sbb
xchg
xor
add
and
sub
cmp
cmps
pop
pop
pop
xchg
mov
je
ud2
jge
test
in
inc
sbb
in
fsubr
enter
cmp
push
dec
xor
push
mov
jns
cmps
xor
int
push
je
test
sub
call
call
in
jns
jns
in
call
fs
push
call
loopne
loope
or
and
call
das
imul
cs
jo
xor
xor
movs
push
mov
daa
add
test
dec
sbb
test
or
sbb
fdiv
jb
cmp
mov
test
mov
push
xchg
cmp
push
sub
add
stos
inc
and
aam
lock
pop
sub
ret
push
dec
inc
rol
fwait
add
lods
fistp
fldcw
ss
aaa
add
or
add
and
adc
adc
pop
push
adc
adc
add
jecxz
jmp
repz
repz
and
das
iret
repz
ss
cmp
repz
outs
jne
ret
inc
and
cmp
jge
xchg
enter
adc
push
scas
(bad)
lahf
jl
add
jne
add
mov
sub
or
or
or
repnz
dec
inc
mov
or
test
mov
push
pop
sub
syscall
dec
inc
push
dec
jp
dec
add
ret
mov
xor
ret
sbb
cmp
cmc
ficom
adc
je
add
fsubp
xchg
inc
ret
lock
aaa
mov
push
outs
test
dec
addr16
shr
aas
inc
push
in
adc
enter
dec
fdiv
xchg
lds
mov
adc
inc
arpl
int3
cmp
jnp
clc
adc
sub
mov
sub
xor
mov
adc
mov
dec
ins
sub
mov
dec
movs
movs
and
rcr
pop
ins
push
inc
or
adc
inc
inc
sbb
cmp
cmp
jbe
mov
int
add
push
ret
xchg
not
fild
sub
add
push
push
das
sbb
cmp
fdivr
imul
or
test
scas
mov
dec
and
push
popa
add
xchg
ins
pusha
jns
fbld
les
mov
fisub
pop
adc
movs
adc
add
hlt
int3
jmp
sbb
fwait
mov
in
(bad)
sti
arpl
xchg
or
inc
xor
(bad)
lahf
sbb
push
mov
add
retf
and
(bad)
jbe
jmp
and
outs
push
call
(bad)
jo
ja
nop
imul
and
inc
add
fadd
dec
push
pop
add
(bad)
repz
add
pop
je
or
fadd
mov
sbb
rol
outs
pop
pop
xchg
(bad)
out
cdq
cmp
sbb
dec
(bad)
es
out
inc
mov
xor
push
push
jmp
inc
ins
add
dec
adc
add
xchg
mov
push
outs
inc
je
outs
fwait
sub
mov
xor
(bad)
(bad)
out
jmp
scas
mov
pushf
rol
js
stos
xor
ds
int3
inc
mov
pavgb
push
or
or
aas
sbb
add
imul
es
or
cli
cli
retf
sbb
pop
jmp
jb
ficom
dec
std
pop
cmp
cmp
aaa
retf
add
ins
inc
sbb
mov
mov
inc
nop
adc
push
bound
jmp
push
or
push
cmps
daa
push
add
xchg
lahf
je
dec
xchg
mov
retf
fadd
sub
xor
lea
outs
mov
in
je
lea
add
jp
cmp
add
add
mov
or
icebp
fild
cmp
dec
cmp
adc
xchg
and
push
retf
cmp
pop
pop
mov
fcomp
cmp
fld
aam
fist
outs
mov
fdivr
sbb
cmp
or
inc
inc
jl
fmul
(bad)
push
dec
pop
mov
push
and
dec
jmp
inc
dec
sub
and
pop
sbb
or
push
pop
call
ins
and
test
movs
mov
xchg
addr16
mov
ins
dec
xchg
push
xlat
ds
mov
cmp
mov
ja
adc
xor
aaa
dec
ins
jb
loope
dec
ds
or
loopne
cwde
dec
pop
or
push
sbb
xchg
(bad)
hlt
ins
mov
or
dec
and
in
mov
out
nop
inc
fstp
mov
push
cmp
inc
add
into
pop
inc
or
icebp
daa
lea
(bad)
push
add
data16
xor
xor
xor
clc
jmp
pushf
and
dec
inc
inc
and
js
xor
dec
pop
rol
fild
dec
add
adc
(bad)
dec
in
push
das
jnp
loop
inc
dec
and
test
dec
dec
dec
ret
lahf
xchg
adc
fsub
xchg
sub
push
aam
add
sbb
or
lods
cmps
jge
shl
inc
mov
stos
sbb
xchg
push
jne
repnz
ins
xor
fcom
popa
loope
and
dec
jnp
jp
aaa
sub
pop
inc
cmps
or
aas
ror
xor
call
leave
mov
pop
mov
sub
cs
push
lods
in
or
test
or
lods
out
cs
test
in
mov
fs
push
xchg
jl
or
cmp
scas
pop
loopne
or
adc
sahf
loope
retf
call
or
retf
movs
dec
and
loope
or
mov
add
loope
(bad)
lea
add
(bad)
fnstsw
push
nop
and
pop
jmp
push
int3
int3
lods
pop
(bad)
aad
test
jns
inc
push
jmp
rcl
sub
push
dec
out
cmp
dec
or
adc
pusha
xchg
or
adc
push
inc
jecxz
dec
stc
imul
adc
int3
and
aam
lods
inc
and
inc
jmp
or
daa
or
cdq
iret
cmps
daa
clc
inc
or
dec
and
ror
or
or
adc
int3
lea
in
pop
int
jno
add
add
lods
push
dec
pop
and
cmp
inc
les
outs
mov
movs
std
test
adc
jl
addr16
or
sub
sbb
push
add
test
pusha
ins
imul
push
popa
or
pushf
jae
or
add
xor
adc
sbb
dec
sub
jae
pop
aam
add
jbe
mov
xor
les
shl
cdq
sub
and
push
dec
mov
xor
mov
inc
inc
aam
add
repnz
cmp
dec
push
dec
inc
shl
jmp
lods
adc
push
test
lock
outs
jp
popa
push
add
dec
sub
jno
add
pop
pop
das
mov
push
call
sbb
inc
inc
rcr
sti
rol
cmp
fild
pop
or
push
adc
adc
stc
or
or
dec
dec
add
clc
ds
sub
lods
mov
sub
aad
add
add
mov
mov
adc
add
enter
mov
cmp
inc
push
bound
add
movs
in
add
sbb
aam
retf
and
adc
aam
adc
sbb
sar
(bad)
jb
fiadd
nop
lahf
dec
pushf
pop
fs
add
and
call
je
dec
jb
outs
or
mov
rol
clc
movs
xchg
and
btr
pop
in
or
adc
dec
loopne
xor
mov
clc
and
aaa
cmp
stos
das
or
in
adc
pusha
mov
ins
aas
movs
jl
or
push
dec
stc
or
in
push
(bad)
mov
jae
fild
adc
add
add
mov
sbb
mov
mov
movs
lea
adc
sub
mov
and
add
cmp
inc
ins
dec
aad
imul
dec
mov
adc
iret
jnp
xchg
add
in
push
loope
cmp
jno
pop
push
outs
pop
stc
rcl
push
dec
in
ja
add
adc
jmp
arpl
clc
jne
sbb
mov
aaa
add
mov
or
jno
add
scas
sub
test
cmp
xchg
bound
sbb
mov
jns
xchg
(bad)
out
clc
or
sub
add
push
mov
sbb
sub
cld
aad
push
mov
repnz
(bad)
add
push
dec
imul
sbb
push
outs
push
mov
rcr
xchg
shl
xchg
push
push
push
iret
push
and
add
push
dec
dec
sbb
sbb
adc
dec
aam
dec
mov
push
enter
aaa
sbb
sbb
add
jmp
jno
xor
jmp
ret
ror
loope
push
movs
(bad)
mov
xor
(bad)
xor
adc
fdivr
push
mov
sub
lods
xchg
adc
dec
das
xchg
push
and
jmp
lods
and
push
cmp
push
inc
jp
movs
pop
lock
xor
dec
lock
or
ret
and
jecxz
cdq
mov
cmp
push
leave
inc
xor
xchg
add
ret
add
cmps
push
mov
xchg
popf
sub
pop
sbb
(bad)
and
fs
test
push
cmp
sub
xchg
shl
dec
pushf
adc
fnstenv
movs
cmp
rol
test
adc
xchg
cdq
inc
call
mov
bound
mov
xchg
pop
fs
pop
loopne
jns
es
fdivr
fs
fcomp
mov
fs
aam
add
aam
sar
and
cld
repnz
dec
dec
(bad)
int3
dec
int3
inc
test
adc
pop
inc
out
and
out
inc
mov
pop
test
push
dec
jmp
xor
xor
sub
fild
leave
and
xor
and
aaa
xor
pop
jb
cmp
xor
pop
dec
pusha
pop
jp
sub
push
pop
sbb
inc
dec
adc
or
jae
outs
arpl
mov
pop
cmp
xchg
xchg
das
dec
push
pop
dec
pop
adc
cmp
pop
inc
pop
dec
inc
stos
pop
and
inc
push
inc
mov
movs
dec
mov
push
sbb
das
out
mov
and
mov
loopne
dec
movs
movs
and
cmps
and
fimul
stc
in
lock
add
test
xor
dec
loopne
enter
mov
fadd
nop
xchg
div
test
fcomp
in
mov
aam
aam
dec
add
adc
retf
int3
or
es
int3
pop
int3
xor
sub
jg
shl
dec
test
mov
fmul
xor
sar
xchg
xchg
pop
push
push
dec
mov
jl
neg
mov
sub
dec
nop
or
adc
lock
push
dec
in
lods
cwde
inc
imul
add
adc
loope
outs
push
sub
clc
adc
jns
pop
or
and
mov
bound
and
inc
mov
adc
inc
jae
imul
pop
hlt
push
mov
leave
and
sub
cmp
movzx
fadd
mov
cmp
adc
imul
adc
pushf
push
ja
push
push
sahf
xchg
pusha
dec
xor
sbb
jg
push
push
inc
out
push
mov
lods
je
push
nop
lock
and
loop
gs
jbe
scas
mov
mov
out
pop
mov
ret
push
push
cmp
xlat
dec
adc
(bad)
call
dec
call
ja
pusha
jnp
fisttp
inc
mov
inc
xchg
add
push
inc
add
and
jge
inc
jne
pop
sub
inc
push
xchg
add
add
jge
pop
push
pop
and
push
out
mov
xchg
mov
push
add
inc
push
leave
call
mov
jae
add
aaa
lahf
mov
test
xchg
xlat
jns
push
and
mov
mov
pop
out
sub
cmps
ror
push
push
aaa
cwde
jne
mov
dec
popa
inc
sub
dec
test
mov
pop
dec
inc
sub
cmps
rol
int3
repz
test
dec
pushw
lock
cld
jle
xor
push
imul
add
not
sub
cmp
cld
or
inc
enter
push
int3
stc
xor
lds
adc
lods
mov
mov
adc
ss
and
mov
mov
shr
nop
pop
std
pop
je
adc
popa
iret
pop
call
xlat
push
dec
inc
pop
cmp
cdq
loopne
pop
clc
scas
outs
pop
xor
xor
and
clc
jmp
sbb
dec
or
add
jae
loop
call
outs
xor
lock
jp
ror
popa
jb
xchg
push
ins
and
test
fdivr
xor
loopne
inc
xchg
or
pop
mov
and
int3
cs
add
xchg
mov
test
stos
add
adc
mov
enter
mov
inc
sahf
popa
push
lock
add
push
dec
push
mov
jl
(bad)
or
push
and
push
dec
cmc
push
push
sub
dec
lock
ins
lock
or
movs
cmp
xor
add
xor
adc
pop
out
push
and
movs
cmps
adc
push
push
and
pop
nop
mov
jg
or
repz
pop
jg
popa
and
dec
test
add
jno
adc
pop
inc
scas
sub
push
and
xor
(bad)
das
fimul
adc
jne
or
add
out
and
jmp
mov
or
cmp
jne
xor
dec
mov
leave
push
push
and
mov
xor
gs
int
nop
out
gs
in
adc
adc
xchg
out
les
and
ret
lds
adc
dec
and
mov
cmp
adc
dec
xor
out
fsub
mov
add
mov
or
ret
aam
(bad)
or
ror
fmul
dec
mov
sub
ret
xor
ss
pusha
add
(bad)
jo
pop
dec
sbb
add
cwde
sub
inc
pusha
imul
jmp
enter
shl
xchg
daa
or
cmp
mov
jmp
xor
shl
add
and
rcl
dec
lea
inc
mov
mov
dec
sbb
adc
pushf
cli
mov
mov
pop
dec
in
mov
movs
(bad)
mov
in
dec
or
mov
out
in
fxch
add
jecxz
outs
pop
pop
and
adc
leave
cmp
jg
mov
adc
shl
pusha
mov
pop
sahf
cmp
(bad)
lea
xor
pop
xlat
(bad)
pop
repz
cdq
les
inc
inc
add
add
jle
and
mov
cmp
inc
push
fild
push
es
push
loopne
(bad)
pop
jno
pop
adc
fdivp
xchg
push
test
imul
add
pop
xor
sbb
test
sbb
dec
stc
lea
pusha
lods
sub
loope
inc
in
outs
dec
shr
jne
add
clc
or
mov
dec
test
arpl
cmp
add
inc
sbb
loopne
iret
push
add
sub
dec
sbb
xchg
xor
sub
cmp
aaa
outs
popa
sbb
adc
add
outs
inc
mov
cdq
lods
stc
dec
popw
movs
mov
pusha
ins
in
mov
add
std
mov
sbb
ret
lea
sbb
inc
mov
sbb
xor
or
inc
fdivr
test
jecxz
or
add
dec
add
mov
addr16
clc
out
mov
mov
pop
push
and
cmp
sbb
add
push
movntq
call
xrelease
xchg
fldpi
inc
xor
(bad)
std
or
push
xchg
xchg
ins
mov
inc
dec
ja
jmp
ret
ins
cmp
bound
sar
mov
test
jg
push
sti
test
pop
xor
mov
mov
add
aaa
sbb
jno
lahf
popf
push
pop
fcom
hlt
hlt
sub
push
sub
dec
pop
imul
adc
dec
call
mov
pop
add
pusha
jmp
jle
push
push
jecxz
adc
imul
adc
(bad)
repz
sub
ret
pop
dec
jmp
fwait
rcl
cmp
ss
movs
pop
cmp
(bad)
inc
xchg
inc
or
shl
sbb
add
or
je
xor
inc
sbb
sbb
and
das
ja
inc
jl
or
stos
dec
(bad)
cmp
dec
jmp
lock
daa
jp
xchg
pusha
imul
sub
or
push
fisub
pop
push
jmp
jmp
and
mov
sti
stc
jo
and
dec
fstp
or
pop
outs
dec
das
dec
shl
cwde
adc
xor
shl
test
mov
clts
mov
mov
or
enter
mov
stos
push
pop
enter
dec
pop
lea
aam
pushf
daa
sbb
lock
xchg
xchg
scas
xchg
push
add
lea
(bad)
repz
push
jmp
fs
sbb
cwde
and
in
lods
pusha
and
adc
mov
pusha
shl
loopne
ret
push
repz
mov
adc
xor
mov
lea
fild
sbb
adc
mov
inc
or
mov
imul
or
xchg
fwait
xchg
or
test
mov
lods
dec
movs
push
sbb
jmp
push
or
dec
outs
dec
xchg
movs
push
cwde
cwde
lods
out
cs
dec
ins
inc
mov
push
or
cwde
test
mov
dec
dec
jl
(bad)
push
(bad)
push
(bad)
pop
adc
xlat
and
jmp
pop
cmp
sub
mov
daa
in
mov
neg
mov
popa
xor
mov
lods
jnp
push
loopne
adc
push
mov
jo
mov
cwde
mov
(bad)
(bad)
or
add
aaa
jb
or
jae
fwait
cmp
hlt
or
mov
(bad)
retf
loopne
(bad)
mov
in
outs
mov
cmp
test
sub
adc
jge
lock
call
in
dec
jns
push
and
cmp
add
sub
icebp
loope
xchg
jp
sbb
adc
jmp
xor
mov
out
add
mov
les
je
dec
xor
push
pop
dec
cmps
adc
ins
ja
jb
cmp
push
mov
mov
and
adc
push
pop
pop
call
dec
je
sub
and
jp
(bad)
jb
jmp
inc
mov
inc
push
inc
and
cwde
nop
in
pusha
in
mov
popa
ins
jb
cmp
in
sbb
inc
jns
aad
xchg
or
call
sbb
hlt
sbb
mov
nop
push
cmc
dec
xchg
add
shr
rcl
or
push
js
cmp
lock
pop
or
xchg
js
xor
cmp
in
push
mov
ja
jl
mov
inc
iret
call
fdiv
xchg
call
out
js
cmc
iret
jns
fs
pop
imul
in
lock
push
retf
loope
movs
pusha
dec
(bad)
nop
sub
lods
push
pop
sti
jno
cmps
mov
inc
loopne
xchg
(bad)
sub
cmp
xchg
loopne
adc
sub
jbe
xor
mul
in
(bad)
mov
mov
ror
jp
cmps
loopne
sar
clc
(bad)
jecxz
test
sub
xchg
jbe
pusha
and
clc
hlt
leave
mov
adc
lock
(bad)
je
push
cmp
sub
out
jns
mov
(bad)
add
mov
or
sbb
popa
imul
lods
mov
cmp
fdivr
sqrtps
mov
or
xchg
shr
xor
xchg
pop
fs
fistp
add
mov
ret
inc
pop
fisttp
inc
test
inc
ficom
push
dec
add
nop
jp
ret
icebp
inc
jmp
cmp
cmp
pop
pop
xor
cmove
push
inc
and
call
or
arpl
nop
out
je
jle
daa
fmul
fdivr
shl
in
sub
jge
ret
add
mov
call
xchg
loop
ja
xchg
xlat
and
fbstp
outs
stc
and
xchg
inc
fsub
and
and
xchg
or
jge
rol
fnstcw
aaa
pusha
xchg
test
cmps
mov
fdivr
push
inc
(bad)
ds
adc
ins
pop
add
add
xchg
jmp
in
ret
loope
add
clc
or
shl
xor
adc
push
dec
cmp
popa
lock
cmp
push
xor
add
imul
and
adc
xchg
mov
mov
arpl
xchg
pusha
adc
movs
js
cmps
add
pop
inc
inc
rol
sbb
inc
and
ret
lods
movlhps
adc
(bad)
rcr
inc
mov
test
add
jle
mov
push
call
push
(bad)
cmps
fcom
sbb
addr16
je
inc
fimul
push
(bad)
in
push
shl
add
cmps
sbb
add
fcom
mov
nop
pusha
adc
add
leave
mov
fcmovnu
mov
(bad)
pop
(bad)
sbb
enter
(bad)
pop
ret
lods
adc
push
out
xchg
aam
rcr
adc
lds
mov
inc
adc
fdivr
and
(bad)
fist
loope
sbb
repnz
and
ficom
int
rcl
inc
push
inc
(bad)
rcl
jl
jae
jo
pop
dec
enter
bound
sti
mov
inc
push
dec
fnstcw
mov
ja
adc
in
add
xchg
sbb
and
loopne
inc
data16
jo
not
adc
out
in
shl
bnd
adc
add
movs
mov
fs
and
and
jge
shr
ret
and
fucomip
sbb
loopne
and
add
xchg
push
stos
ja
inc
into
(bad)
xchg
jnp
add
fwait
or
popa
sbb
dec
sar
sbb
test
cs
ror
xor
mov
or
mov
jne
aaa
mov
vpsignw
sub
sbb
arpl
mov
mov
add
xchg
inc
push
sub
lahf
nop
hlt
ins
or
add
jne
dec
pop
and
or
das
or
or
ins
outs
in
xor
add
hlt
cmp
pop
or
sbb
jns
test
inc
push
or
inc
and
(bad)
(bad)
or
mov
push
retf
scas
dec
sub
cs
push
xor
test
enter
push
call
test
pop
and
or
sbb
xor
dec
xor
dec
outs
jo
je
leave
enter
sar
enter
or
cmp
enter
adc
push
dec
imul
movs
nop
push
repnz
push
add
ror
xor
dec
jle
and
add
jo
cmp
pop
mov
xor
ds
mov
add
in
push
and
ds
pop
out
cmp
xor
dec
push
fisttp
dec
sbb
xor
aad
xor
jmp
clc
push
dec
rcr
push
jbe
sbb
dec
movs
repz
or
push
xchg
(bad)
enter
push
cdq
enter
out
and
mov
mov
push
or
push
test
xor
mov
lock
mov
in
dec
lock
push
xchg
outs
scas
mov
pop
rcr
iret
pushf
in
in
in
sub
in
jno
sub
data16
mov
xchg
mov
mov
add
xchg
or
mov
test
push
mov
std
test
lahf
mov
add
pushf
inc
mov
or
xor
dec
dec
inc
mov
jmp
gs
stc
pop
add
add
(bad)
push
inc
bound
xlat
pop
add
dec
cmp
pinsrw
dec
inc
or
xlat
mov
add
inc
jmp
adc
jo
push
mov
movs
xchg
sub
in
mov
xor
or
sbb
stos
cdq
sub
ins
popa
repnz
and
push
fadd
retf
rcl
mov
sbb
shl
add
lods
mov
das
or
test
enter
fs
mov
repnz
fimul
add
push
dec
call
leave
repz
nop
push
ret
lods
inc
push
push
dec
dec
dec
scas
in
scas
and
lods
mov
adc
mov
or
fdiv
js
imul
push
jl
mov
cmps
mov
mov
sar
imul
push
sar
push
mov
add
pusha
xor
cmp
inc
push
xchg
push
xor
int
mov
cmp
cmp
addr16
jmp
xchg
xchg
in
lods
mov
test
inc
jmp
push
and
test
pop
inc
test
and
or
and
add
xchg
pop
call
pusha
cmp
mov
leave
sahf
hlt
push
loope
pop
push
sbb
cwde
mov
shr
cld
movs
add
inc
sbb
add
or
sub
or
retf
inc
inc
or
adc
scas
pop
xor
cmp
push
ss
rol
pop
push
das
fisttp
test
fs
or
or
adc
push
sub
adc
adc
movs
inc
jp
xlat
mov
or
jecxz
in
fstp
lea
jbe
aaa
(bad)
push
(bad)
hlt
ret
ds
test
push
das
je
mov
sbb
mov
add
adc
retf
sti
and
mov
fs
jno
dec
xchg
imul
push
mov
or
and
lahf
and
push
icebp
in
xchg
adc
mov
mov
shl
mov
js
bound
pop
pop
add
ins
test
fadd
lea
push
xchg
inc
push
mov
mov
shl
mov
jge
hlt
ins
push
rol
cmp
imul
lock
jb
jb
in
hlt
outs
or
(bad)
jge
sbb
inc
or
or
dec
push
int
sub
ret
xchg
dec
inc
ins
sbb
std
call
adc
xchg
(bad)
jo
stos
add
pop
fstp
int3
je
push
ret
call
pop
xchg
sbb
lock
int3
hlt
sbb
sbb
(bad)
and
aas
jg
dec
sub
dec
je
jmp
jb
adc
add
add
or
imul
ds
or
pop
es
push
and
aas
xchg
jno
in
mov
dec
lahf
fnstcw
fadd
add
test
or
stc
mov
dec
inc
fadd
cs
inc
pop
mov
or
movs
jbe
jo
push
hlt
mov
mov
mov
and
in
add
inc
xchg
inc
cld
lea
dec
leave
inc
inc
jns
pop
imul
xchg
cmp
cmp
cmp
in
adc
xchg
sbb
lock
add
fwait
xchg
dec
repnz
sti
jge
daa
loopne
and
mov
inc
push
push
outs
xchg
test
sbb
adc
add
sbb
je
stos
movs
mov
jae
xchg
jo
dec
add
shl
xchg
movs
mov
rcl
sbb
cmps
jmp
mov
or
int
sti
add
xchg
pop
je
xchg
xchg
inc
mov
sbb
add
or
xchg
sub
xchg
jb
push
call
adc
test
rcr
mov
push
or
or
iret
add
or
adc
inc
cwde
lock
mov
imul
retf
xchg
xor
in
out
and
lock
xchg
push
xor
stos
inc
pushf
pop
sbb
lock
pop
or
add
inc
int3
xchg
sub
sub
fsubr
mov
pushf
stos
dec
loope
call
scas
outs
push
add
adc
sbb
cdq
(bad)
in
jg
ins
mov
mov
mov
mov
mov
addr16
and
mov
loop
ror
pop
outs
add
call
inc
cmp
cmp
or
dec
jne
mov
out
cmc
jl
xchg
inc
movs
and
and
loop
push
and
sub
movs
sbb
push
sbb
add
das
rcr
loopne
jle
or
mov
or
std
inc
fisubr
ins
es
mov
repz
or
xchg
mov
mov
imul
sti
pop
xor
push
inc
cmc
sar
je
add
dec
push
push
inc
inc
bound
pusha
xrelease
pop
inc
(bad)
mov
and
fs
and
xor
xor
out
mov
cdq
inc
add
test
cmovl
push
inc
pusha
pusha
jns
cmps
push
ins
jne
mov
test
(bad)
jl
pop
xchg
add
mov
sti
cdq
push
ins
loopne
add
aaa
mov
les
call
sub
and
push
dec
sbb
push
xor
mov
cmp
dec
cld
int3
add
ret
das
mov
mov
cmp
in
mov
int3
test
call
xor
add
popa
adc
or
out
leave
in
or
dec
mov
out
mov
ins
jo
fwait
dec
sub
push
imul
call
push
rol
(bad)
(bad)
cmps
das
lods
and
and
fwait
dec
push
sbb
sbb
or
pusha
(bad)
fild
stos
fwait
nop
and
adc
pop
pushf
dec
ds
outs
xor
xchg
pop
inc
je
dec
je
dec
mov
stc
and
dec
inc
pop
les
call
push
and
cmp
xchg
mov
cs
test
jb
push
add
add
cmps
add
and
jne
dec
mov
or
dec
mov
dec
or
and
pop
daa
xor
mov
dec
cmps
inc
xchg
xchg
add
cs
les
or
pop
lods
fwait
adc
mov
or
add
loop
lahf
gs
fstp
cdq
sbb
ret
pusha
pop
(bad)
adc
(bad)
movs
enter
adc
je
push
inc
(bad)
mov
add
xchg
mov
xchg
and
int
in
test
lea
jmp
dec
sbb
mov
arpl
test
jmp
arpl
or
scas
adc
(bad)
and
jae
jae
push
sbb
push
jmp
nop
push
push
ja
push
push
lea
pop
pop
sbb
or
and
mov
xor
sahf
rcr
dec
gs
adc
shl
inc
xor
mov
push
popf
mov
push
adc
push
xchg
xchg
mov
or
xchg
push
gs
gs
mov
add
and
dec
pushf
dec
dec
sub
xor
cmp
lods
sub
adc
xchg
xchg
jecxz
fstp
shl
pop
add
test
add
jmp
jno
scas
mov
es
movs
adc
(bad)
or
mov
jg
rcr
and
push
jmp
rcl
jne
add
sbb
push
add
sar
mov
pop
or
xor
dec
inc
and
stos
inc
lock
mov
outs
popa
xchg
add
xchg
mov
sub
lods
mov
ins
inc
cwde
sbb
mov
push
(bad)
sub
adc
push
dec
adc
pop
mov
ret
and
dec
in
add
sub
and
inc
loop
pop
inc
scas
data16
sub
rcl
mov
stos
or
pop
js
je
fcom
cmc
push
movs
dec
jb
inc
daa
ficomp
loop
mov
mov
pop
fdivr
popf
push
push
out
out
push
inc
fiadd
push
add
out
sub
dec
loopne
push
data16
mov
add
jl
fist
jo
lahf
add
in
adc
lods
mov
mov
push
adc
stc
mov
pop
fisub
pop
(bad)
loopne
fdiv
pusha
sub
pop
pushf
xor
cmps
sbb
mov
repnz
call
rcl
fnsave
or
in
in
push
clc
hlt
lock
xor
fdivr
call
test
inc
pop
loopne
xor
xor
(bad)
adc
or
rol
inc
outs
sbb
cmp
inc
jmp
and
adc
sbb
mov
ss
add
or
and
daa
push
xchg
outs
iret
cmovl
inc
add
call
bound
push
cmp
fwait
mov
xchg
test
or
push
shr
dec
shr
or
or
adc
std
cdq
cmps
xor
push
or
jmp
or
nop
test
setno
sbb
test
lods
sub
xchg
repnz
xor
or
add
adc
add
call
enter
dec
clc
movs
push
xchg
adc
dec
stos
shr
dec
ret
out
je
inc
sub
ja
aaa
jo
or
dec
adc
cmc
add
xor
clc
push
stos
ror
outs
jmp
pop
lods
inc
in
push
pop
or
ins
and
xchg
fild
out
hlt
adc
inc
cs
jo
outs
in
hlt
adc
popf
push
lods
push
das
je
xor
fsub
pop
pusha
lods
xchg
dec
loopne
xchg
add
lods
sbb
sbb
add
out
sbb
sar
retf
addr16
retf
dec
je
adc
cwde
mov
aaa
sub
mov
aas
jl
inc
xlat
push
adc
in
jmp
ret
pop
les
adc
mov
add
not
shl
retf
and
xchg
add
scas
mov
fsubr
sbb
sub
cmp
mov
ffreep
xor
enter
(bad)
stos
xor
pop
nop
in
sub
aaa
push
outs
imul
jle
cmp
outs
sbb
int
sub
aas
sbb
in
or
mov
inc
and
js
pop
push
lods
(bad)
outs
and
(bad)
and
push
daa
sub
and
sub
sahf
add
inc
adc
hlt
test
(bad)
scas
xchg
scas
sbb
rol
rcl
dec
or
pop
ror
hlt
mov
push
inc
mov
inc
and
jo
call
loopne
pushw
inc
(bad)
mov
lock
jge
xchg
icebp
or
xor
or
and
dec
leave
and
dec
jns
addr16
cmp
cmp
loopne
repz
sbb
movs
mov
ds
push
aaa
sub
push
jge
aas
je
xlat
inc
xor
xchg
dec
les
pop
inc
jnp
xchg
cmp
jbe
dec
jb
cmp
xchg
push
test
push
pop
jae
loopne
mov
sub
aaa
jns
sahf
movs
cs
dec
jne
pop
(bad)
adc
(bad)
xchg
pop
mov
dec
adc
push
push
dec
loopne
mov
mov
jo
test
dec
call
je
push
pop
sbb
or
inc
loopne
cmc
add
add
loopne
mov
pop
push
(bad)
imul
pop
int3
mov
or
cmp
pushf
inc
enter
inc
aas
adc
cvtps2pd
arpl
mov
mov
dec
cmp
pop
pusha
xor
int3
fnsave
clc
ds
sbb
dec
test
hlt
mov
test
cmp
inc
arpl
add
nop
ins
cmp
mov
pusha
add
push
xor
clc
in
dec
and
and
mov
cmp
push
addr16
cmc
mov
mov
(bad)
mov
xchg
pushf
xor
mov
mov
dec
sbb
pop
or
ss
and
das
push
and
out
inc
inc
or
mov
mov
lods
mov
jno
cmp
push
inc
pusha
sbb
push
sbb
xor
add
cmps
jge
mov
push
push
adc
xchg
dec
int3
inc
xor
pop
xchg
dec
enter
dec
enter
push
cld
enter
pop
pop
push
nop
inc
dec
or
ss
dec
ja
inc
xor
inc
mov
enter
inc
dec
leave
mov
mov
sbb
dec
inc
pop
cs
cs
inc
pop
inc
cs
push
pop
xor
das
in
inc
add
and
je
daa
dec
jecxz
dec
mov
xchg
js
iret
jns
or
je
push
arpl
jne
xchg
sub
sar
cmp
push
ss
mov
test
jne
dec
iret
push
mov
js
mov
fldcw
mov
xor
test
dec
shr
push
cdq
ins
ins
and
rcl
cmp
and
dec
xor
dec
shl
sub
add
bound
or
fcom
inc
add
in
mov
xchg
movs
daa
jge
out
and
dec
xor
inc
mov
or
test
je
add
es
mov
int3
push
push
sbb
sub
aad
xchg
inc
sbb
or
dec
clc
mov
scas
xchg
xor
push
bound
jne
dec
leave
and
cmp
vcvtsi2ss
aaa
stos
test
xchg
xor
fsub
mov
sub
sbb
ins
je
idiv
sbb
adc
pop
js
add
inc
popa
ret
dec
out
push
jne
xchg
cmp
inc
js
mov
xchg
jl
arpl
test
add
jns
outs
cmp
xchg
pop
shl
cmp
dec
arpl
push
sub
pop
adc
mov
pop
and
mov
push
push
shr
or
dec
xlat
repnz
adc
or
lea
sbb
mov
test
push
test
aad
and
imul
clc
mov
add
and
imul
lock
mov
xor
rcl
mov
mov
cld
in
and
push
in
loope
add
fsub
call
cmps
pop
(bad)
mov
jb
mov
xchg
inc
xchg
mov
jae
push
or
aad
lahf
mov
push
inc
nop
sbb
or
push
or
push
dec
push
cmp
lock
aad
into
add
sub
test
pop
pop
test
mov
inc
add
push
mov
in
adc
jmp
retf
ins
and
jae
push
or
and
call
into
scas
fdivr
or
iret
mov
mov
imul
ror
and
test
push
mov
add
inc
or
jecxz
icebp
jo
(bad)
je
(bad)
mov
mov
dec
mov
add
jns
pop
mov
shl
mov
cmp
pop
sbb
test
xchg
mov
push
pop
outs
ret
adc
add
shl
rol
test
push
arpl
daa
sbb
iret
xor
push
or
add
test
cmp
xchg
shl
xchg
cmp
adc
and
adc
arpl
pop
out
or
inc
addr16
dec
jp
addr16
inc
add
xor
push
xor
cmp
or
pop
clc
fwait
loop
xlat
frstor
pop
inc
sbb
mov
je
mov
or
xchg
(bad)
jle
test
and
popa
sbb
add
mov
ret
dec
xchg
push
pusha
call
push
push
push
mov
lea
push
pusha
movs
xchg
enter
loopne
out
or
mov
add
sbb
xor
or
sub
push
movs
outs
rol
cmps
sbb
cmp
push
fcom
or
dec
(bad)
xchg
and
test
ret
and
imul
repnz
mov
push
cdq
dec
jae
pop
jb
and
cld
clc
in
retf
and
ret
sti
pop
ja
push
ror
push
inc
loope
sub
pop
mov
loope
loop
cmps
push
adc
imul
jae
lods
(bad)
test
push
ret
js
cwde
sub
xchg
gs
add
inc
call
loopne
adc
xchg
loopne
or
sbb
scas
in
adc
mov
mov
and
jo
mov
cs
dec
repnz
add
xchg
les
(bad)
pusha
pusha
and
popa
scas
push
js
mov
(bad)
cs
dec
stos
mov
or
add
pop
add
fisub
les
loopne
or
adc
add
sbb
adc
movs
lods
adc
mov
popa
lahf
call
loope
dec
add
push
and
iret
cmp
stos
cld
fstp
or
cs
hlt
pop
loopne
loope
rcl
cmp
and
(bad)
(bad)
loopne
add
loope
xchg
aam
add
adc
sbb
ffree
add
outs
aad
adc
cmp
fnstsw
add
dec
push
or
int3
sbb
or
push
mov
or
enter
xchg
and
ret
inc
jge
push
imul
mov
mov
aam
sub
lahf
adc
xor
push
test
je
jmp
xadd
mov
(bad)
repz
bound
cmc
cmp
cmps
xor
dec
ins
and
xchg
adc
sub
jmp
fadd
lock
leave
inc
int
xor
popf
leave
dec
jne
sbb
pop
inc
ficom
pop
or
sub
mov
inc
(bad)
nop
lock
or
call
pop
adc
dec
cmp
test
icebp
add
retf
fcom
js
or
mov
pop
pop
push
in
mov
iret
retf
adc
(bad)
sbb
imul
add
in
xchg
inc
or
or
dec
push
inc
push
add
or
add
dec
push
popa
ins
mov
sub
xchg
adc
add
mov
sbb
adc
lock
dec
push
and
add
xor
pushw
call
push
loopne
cmp
outs
or
int3
mov
repnz
push
stc
xchg
retf
xchg
or
add
jb
and
cmp
cwde
adc
bound
add
xchg
fsub
sbb
pop
add
add
shr
push
xchg
std
or
and
add
ja
mov
shl
and
mov
cli
adc
xchg
sub
pop
aam
jle
aam
xchg
test
adc
jmp
mov
cmp
jle
pop
jne
nop
clc
sbb
popa
ins
popf
std
push
sbb
test
ror
mov
mov
inc
sbb
nop
cmp
pushf
inc
pop
arpl
loopne
imul
test
test
add
adc
cmp
aaa
les
loope
out
xchg
sub
xor
jl
shl
or
fadd
dec
add
ja
ins
das
or
jmp
(bad)
and
pop
pop
mov
or
push
push
xchg
dec
cmp
sbb
or
aam
fisttp
iret
cmp
sbb
(bad)
pop
pop
mov
iret
lods
iret
xchg
cmp
std
add
cmp
pushw
mov
shl
pop
test
xor
or
xor
push
(bad)
mov
call
enter
movs
inc
in
idiv
in
test
lods
mov
mov
icebp
jge
sub
popf
mov
sub
out
jnp
push
or
and
push
or
call
mov
mov
lock
mov
jae
outs
ja
xor
ss
and
or
add
add
adc
es
mov
sub
adc
cmp
lock
enter
sub
mov
ror
xchg
jo
imul
movs
inc
mov
jns
mov
sar
sbb
inc
cli
scas
mov
cmp
push
push
dec
dec
dec
pop
ins
xor
out
and
lahf
sbb
or
and
or
and
rcl
ret
push
dec
sbb
fs
cs
inc
mov
test
dec
dec
lds
pop
or
stos
inc
sub
pop
ror
js
in
xchg
sub
ins
lods
popa
inc
jmp
push
(bad)
pop
push
push
pusha
and
cmps
pusha
adc
sub
aad
leave
add
aad
dec
outs
test
jnp
hlt
adc
ror
fist
inc
or
call
sar
mov
add
mov
pushf
xchg
shl
(bad)
and
dec
and
jl
push
fsub
lock
mov
mov
push
aam
ja
imul
cmp
fwait
in
or
or
ja
sbb
dec
dec
dec
sbb
inc
nop
out
pusha
or
xchg
fidivr
inc
js
mov
dec
mov
inc
fs
test
in
cmp
adc
add
outs
push
mov
rol
adc
lds
dec
aaa
ret
iret
mov
sbb
scas
cs
xchg
out
push
mul
xchg
pusha
stc
and
xor
and
mov
or
fldenv
ss
das
pop
push
daa
out
rcl
xchg
adc
gs
dec
mov
imul
aad
aaa
mov
xor
loopne
dec
fbld
ret
jmp
dec
pop
pop
xlat
ret
add
push
retf
and
(bad)
loop
pop
pop
int3
pop
mov
xchg
je
or
frstor
dec
mov
or
xor
ficomp
cmp
pop
je
xchg
mov
(bad)
mov
call
popa
sub
inc
mov
rol
and
test
adc
jae
scas
adc
and
inc
cmp
cmp
add
inc
jp
rcr
dec
jecxz
xor
xor
pop
mov
out
mov
ret
mov
xchg
ins
in
mov
xchg
daa
nop
cli
mov
and
aas
push
jg
je
push
dec
pop
and
daa
cwde
add
pop
mov
sub
add
and
repz
sahf
cmps
add
add
jns
retf
cmp
add
inc
in
sbb
fsub
imul
xchg
iret
dec
push
repz
ret
in
add
adc
add
add
test
rcl
clc
test
std
inc
push
xor
cmp
bound
movs
les
into
cld
push
push
ja
mov
nop
push
add
dec
dec
or
mov
jne
ds
cwde
or
inc
push
sahf
sub
or
push
(bad)
lahf
or
idiv
pop
fist
add
test
scas
xor
or
icebp
dec
sbb
in
fisttp
je
mov
(bad)
out
add
jp
adc
mov
popa
imul
sbb
in
sub
mov
lock
mov
inc
mov
mov
cmp
cwde
jne
js
or
xchg
into
push
add
mov
cmp
mov
enter
and
xchg
dec
mov
adc
cmp
add
fcmovnu
dec
jae
dec
mov
nop
pop
and
and
aam
or
es
ret
jl
and
outs
mov
ret
mov
mov
aad
inc
mov
data16
ror
pop
add
and
pusha
cmp
(bad)
mov
pop
mov
in
fld
mov
mov
add
lock
scas
sbb
and
es
in
jb
and
push
sub
xchg
retf
leave
xor
cmp
pushf
pop
cs
push
inc
xor
xor
sbb
mov
test
fstp
cdq
push
and
ja
inc
cs
and
fs
sub
and
sbb
cmp
push
iret
push
leave
fcom
sbb
aas
test
push
adc
sub
lods
call
or
add
enter
loope
xchg
push
pop
scas
dec
add
mov
rol
push
or
fldcw
xchg
sbb
and
cdq
imul
loop
add
xchg
add
sbb
(bad)
mov
push
or
addr16
lods
add
pop
cmps
xor
pop
mov
je
fidivr
enter
mov
mul
adc
and
adc
clc
xchg
mov
push
xor
adc
int
fimul
int3
inc
add
daa
(bad)
ins
dec
js
outs
add
and
or
mov
int
stos
sbb
cmp
jle
ficom
dec
inc
add
sub
sub
adc
sub
inc
fcmovbe
inc
jecxz
icebp
pushf
call
adc
adc
inc
and
imul
xor
adc
xor
adc
cmp
leave
sub
dec
sub
and
enter
loopne
fimul
push
int3
rol
fdivr
push
movs
cmps
aam
add
loope
mov
or
push
xchg
or
ss
loopne
push
nop
inc
sbb
inc
sub
mov
sbb
sub
lods
sub
nop
sahf
add
cmp
add
mov
inc
push
mov
mov
mov
xchg
cmp
fiadd
rcr
inc
loop
mov
or
or
mov
(bad)
fwait
push
adc
inc
sbb
aad
pusha
lods
or
mov
mul
sub
mov
hlt
arpl
dec
xchg
push
sub
mov
loopne
or
dec
aam
aam
mov
dec
inc
and
xor
jae
int3
int3
add
popf
add
push
fwait
adc
ins
in
jo
bound
inc
in
and
sub
cdq
add
jp
dec
int3
mov
inc
and
xor
aaa
xor
(bad)
push
sbb
pop
les
mov
cmp
cld
dec
add
icebp
xchg
mov
and
pop
(bad)
aaa
cmc
lds
mov
pusha
cmp
std
ficom
(bad)
shr
shr
fmul
shl
add
loopne
inc
inc
xchg
mov
movs
retf
neg
mov
inc
xchg
daa
(bad)
or
xchg
pop
psubsw
aad
in
add
je
fsub
mov
es
push
mov
inc
pop
add
int3
xchg
mov
adc
xchg
std
add
jae
(bad)
dec
cld
pop
jle
sub
inc
(bad)
jg
xchg
push
hlt
ins
clc
push
sbb
inc
add
xor
and
daa
stc
cmps
out
pushf
push
inc
mov
add
mov
in
fwait
adc
out
jle
loope
ins
mov
sub
push
sar
cmc
cs
inc
xor
nop
stc
test
sub
xchg
dec
xor
xor
adc
outs
sti
push
enter
or
mov
cmp
inc
cmc
sub
cmp
push
les
sbb
aam
js
add
cmp
fsubr
and
jmp
add
outs
mov
int
js
test
mov
inc
aas
push
into
lods
jp
dec
mov
pusha
add
xor
scas
lock
rol
xchg
cmp
mov
inc
mov
jns
mov
add
dec
add
cmp
dec
pop
cld
cmps
in
inc
pop
and
cs
rcl
adc
push
add
add
push
xchg
ret
add
sbb
add
iret
gs
xor
push
add
(bad)
add
cmps
std
or
mov
adc
push
in
dec
int
push
ds
mov
mov
inc
movs
mov
mov
loopne
add
or
jle
mov
push
icebp
std
adc
sbb
mov
sbb
lea
cmc
ja
xchg
in
dec
inc
nop
lock
in
mov
xchg
ja
rcl
adc
mov
xor
enter
or
sbb
add
hlt
in
ja
pop
adc
jns
jle
ja
dec
mov
add
push
adc
mov
dec
mov
push
inc
in
not
pop
xchg
cwde
pop
sbb
push
fisttp
inc
dec
ror
inc
and
nop
ret
mov
xchg
mov
ret
addr16
cs
pop
out
xchg
popa
test
cwde
sbb
push
or
sub
out
(bad)
xchg
and
push
jns
mov
inc
push
jns
das
sub
mov
cmp
rcl
call
add
sbb
adc
and
mov
push
movs
xor
ins
lds
js
mov
mov
fcmovbe
cmp
and
in
adc
sub
dec
cmp
loopne
fistp
push
and
mov
push
mov
fmul
push
inc
mov
shl
push
jl
cmp
es
inc
pushf
sub
neg
mov
mov
sbb
inc
dec
fwait
mov
inc
or
and
xor
das
pop
nop
push
movs
mov
cdq
ret
popf
mov
loope
cmps
pop
in
jo
mov
mov
add
fwait
adc
mov
fwait
or
mov
jl
fcmovnb
adc
inc
sbb
sbb
and
sbb
xlat
sbb
cld
and
movd
movaps
in
add
pop
fldl2e
or
sbb
lock
sar
xchg
lods
imul
fdiv
dec
push
jmp
test
mov
mov
in
adc
or
add
sbb
dec
push
xor
fnstcw
je
ror
data16
and
test
cmp
rcr
ret
add
ror
and
popa
sub
call
sub
or
fwait
cmp
lock
add
aaa
pop
jnp
mov
xchg
mov
lods
cs
shl
xor
adc
int3
sbb
jb
xor
push
cmp
ror
push
call
add
das
mov
clc
aaa
xchg
add
push
push
inc
mov
and
sbb
das
clc
cmps
mov
mov
loopne
cmp
pop
add
xchg
mov
pop
ret
cmp
add
fadd
add
and
popa
idiv
add
ss
cld
in
push
loop
into
ret
movs
or
in
cmp
xor
or
hlt
(bad)
cld
cmp
adc
mov
ja
popf
xchg
mov
out
inc
and
adc
mov
dec
dec
inc
je
(bad)
adc
jae
mov
pop
jecxz
fcmovnu
mov
inc
cmp
jg
cmp
ret
sbb
movs
xor
outs
fsub
fstp
ret
pop
loopne
push
xor
loopne
cmc
shl
push
push
dec
clc
jbe
cmp
lahf
in
sbb
jmp
call
lods
leave
or
adc
mov
add
add
and
sub
push
(bad)
in
push
dec
nop
nop
mov
jno
sub
(bad)
ffree
mov
sbb
out
(bad)
fs
call
mov
sub
test
daa
js
fadd
clc
test
dec
rol
or
fstp
adc
ja
adc
pop
cdq
ret
movs
out
and
or
adc
jae
sbb
adc
jle
jb
fs
ja
mov
jle
adc
and
mov
int3
lods
in
and
cmp
dec
fsub
jbe
sahf
movs
mov
and
in
cwde
mov
push
and
mov
pushf
mov
mov
push
sbb
pop
xchg
push
adc
ins
cmp
fcomp
push
fs
fidivr
mov
inc
sbb
pop
int
add
test
jns
and
ins
sub
pop
inc
mov
push
and
or
(bad)
and
push
lock
aaa
mov
jno
cmp
cld
xor
mov
les
cmp
pop
inc
sub
pop
shl
rol
pop
les
push
add
pop
sbb
pop
test
mov
lods
test
xchg
test
nop
or
and
movs
mov
loopne
pushf
popa
mov
ror
mov
push
add
in
add
outs
sbb
pop
push
and
enter
and
pusha
enter
and
pop
sbb
addr16
and
xchg
pop
mov
movs
and
lea
shl
pop
mov
or
int3
push
enter
pop
cmp
and
ins
pop
xchg
and
out
add
jl
xor
dec
ins
inc
xor
xor
test
mov
mov
pop
popa
sub
aad
fiadd
sub
dec
sub
sbb
mov
or
xchg
sbb
rcr
retf
sub
adc
pop
dec
sti
daa
dec
pop
sbb
jmp
cmp
adc
ins
stc
xor
cmp
jp
or
pop
mov
push
sar
dec
movs
or
or
push
xor
add
or
add
test
push
and
sbb
or
adc
das
jmp
cmp
mov
(bad)
cmp
sub
mov
mov
inc
loopne
popf
out
and
xor
loopne
mov
rol
loopne
xchg
pop
push
loopne
adc
icebp
dec
jbe
adc
call
push
xor
fmul
ret
jp
scas
loopne
nop
dec
sub
fcomp
push
cmc
cdq
add
push
in
xchg
icebp
xchg
add
lods
push
imul
mov
test
or
rcl
jl
jl
adc
ficom
clc
cmp
(bad)
fadd
test
mov
xchg
push
xchg
enter
pusha
imul
les
xchg
push
test
pushf
loop
dec
in
shl
movs
ror
dec
repz
sbb
fs
int3
mov
adc
xchg
or
push
xchg
dec
sub
mov
xchg
dec
sub
or
mov
mov
movs
rcr
xor
call
pop
push
idiv
xchg
push
(bad)
jmp
cld
mov
push
mov
movs
or
xchg
(bad)
sbb
in
push
aaa
pop
push
push
fldenv
iret
loopne
add
call
retf
test
lods
mov
inc
mov
pushf
into
and
and
inc
pushf
xchg
xchg
out
enter
mov
movs
cwde
sub
xchg
xor
fs
or
mov
xchg
retf
inc
push
xchg
sar
nop
inc
lahf
iret
and
les
dec
add
mov
mov
and
aas
repz
repz
push
mov
xlat
or
add
push
sbb
add
add
dec
call
mov
lea
mov
push
lds
jmp
ds
ret
es
mov
pop
dec
sahf
les
push
clc
call
sub
push
or
jge
sbb
cs
dec
push
xchg
mov
or
call
je
mov
cmp
popa
push
popa
or
pop
cmps
push
dec
inc
cmps
and
and
jae
push
aas
imul
ja
and
jnp
and
dec
aas
dec
inc
dec
and
leave
(bad)
dec
retf
add
inc
or
mov
inc
pop
inc
inc
push
dec
fstp
xchg
test
mov
push
idiv
dec
ret
fiadd
push
push
inc
mov
push
addr16
in
push
out
out
push
or
sbb
dec
push
and
pop
push
mov
cmps
mov
es
ds
mul
and
jae
push
push
sbb
pop
and
dec
sub
scas
dec
inc
dec
push
das
adc
dec
not
(bad)
push
out
dec
xor
cs
xor
dec
aaa
cmp
mov
add
(bad)
mov
xchg
xchg
jne
ins
jmp
popa
rcl
add
mov
add
sub
adc
dec
or
es
enter
aas
sbb
inc
cs
pushf
sub
nop
retf
adc
call
(bad)
or
inc
cmp
push
push
std
pop
aas
pusha
and
cs
mov
js
mov
and
cs
mov
mov
cs
loopne
add
leave
inc
xor
and
xor
leave
inc
jb
and
loopne
mov
inc
adc
inc
and
sub
jmp
add
mov
mov
xchg
pop
and
xor
and
add
leave
jo
adc
sar
mov
or
adc
and
or
fwait
lods
adc
pop
mov
ss
jl
retf
int3
enter
enter
jmp
(bad)
(bad)
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
lea
xor
and
movs
(bad)
dec
ins
mul
add
xor
mov
and
ds
popa
mov
sahf
pop
add
push
adc
das
add
xchg
inc
punpckhwd
jo
adc
inc
ret
popa
pop
mov
push
push
xor
rcr
or
pusha
mov
out
jmp
and
inc
call
repz
mov
sbb
sub
repz
xor
inc
dec
push
pop
cmp
repz
push
cmp
xrelease
repz
mov
ror
fdivr
repz
dec
sub
icebp
cmps
sub
inc
push
gs
enter
sahf
and
enter
fcom
fs
test
xchg
add
xchg
pop
mov
pop
jno
lahf
stos
mov
mov
push
aas
out
in
ret
inc
mov
mul
dec
test
xchg
and
mov
pop
aam
dec
not
stc
cmp
adc
adc
adc
repz
rcl
push
in
out
sahf
out
pop
sbb
cmp
sahf
out
sahf
pop
jo
nop
mov
jns
int3
loopne
add
cdq
mov
adc
add
adc
into
fs
in
loopne
retf
push
mov
jbe
inc
(bad)
jmp
pop
js
jmp
fwait
dec
jae
adc
push
sbb
and
add
test
or
push
popa
outs
daa
imul
mov
cmp
xchg
jae
jnp
sbb
sub
cmp
jnp
repnz
pusha
push
jo
add
pop
xor
push
xchg
xchg
aas
adc
push
mov
adc
aas
inc
fdivr
add
push
cld
jg
or
push
cmps
retf
jg
iret
add
sti
cmp
or
jns
mul
push
add
sahf
out
sahf
add
sahf
out
adc
adc
or
inc
aaa
and
push
sbb
cmp
iret
repz
scas
push
adc
iret
repz
sbb
or
imul
adc
sbb
jns
out
pop
inc
add
sahf
out
sahf
push
fs
pop
jle
cld
pop
movs
inc
inc
mov
adc
enter
hlt
push
or
or
outs
sahf
out
sahf
push
add
out
in
clc
adc
sub
mov
repz
pop
mov
cmp
repz
mov
mov
repz
lock
inc
out
mov
out
(bad)
cmp
add
add
push
fimul
push
mov
or
or
pop
punpckhdq
pop
push
pusha
and
add
add
adc
sbb
nop
in
jbe
jb
adc
sbb
jmp
shl
pop
add
loope
imul
push
nop
mov
add
loopne
cli
cs
ss
sbb
lock
ja
test
out
push
das
jmp
clc
fadd
push
(bad)
xor
xchg
push
cli
jmp
add
repz
lahf
(bad)
lock
push
push
clc
lock
imul
scas
or
cmc
retf
jmp
add
repz
out
aad
push
fisubr
add
fidivr
(bad)
mov
add
mov
scas
sub
lock
cld
cli
int
push
call
in
add
je
std
out
add
mov
je
inc
mov
mov
xchg
pushf
(bad)
push
mov
loop
lahf
out
loopne
pop
pop
add
cli
xor
repz
push
(bad)
add
xor
imul
fcom
jmp
sbb
push
movs
pusha
cmps
mov
jp
mov
movs
push
xor
inc
push
and
lahf
jg
popf
scas
push
mov
add
mov
int
jg
stc
out
add
xchg
jp
je
(bad)
pop
mov
call
push
pushf
movs
cmp
pop
inc
aas
in
stc
scas
stc
mov
mov
push
lods
jmp
add
jg
lahf
pop
mov
out
nop
add
sahf
push
mov
add
movs
and
nop
jl
test
jmp
dec
imul
push
call
xchg
loop
add
cwde
sti
cwde
add
jg
stc
data16
add
mov
add
or
jo
mov
ret
imul
push
imul
movs
nop
ror
ja
fidiv
mov
pop
push
lock
stc
out
mov
and
and
mov
out
add
push
xchg
push
lods
fsub
add
into
cli
add
fs
in
ss
aas
fistp
cld
push
dec
cli
adc
push
dec
ror
add
inc
loopne
mov
sub
pusha
push
mov
jle
add
out
mov
imul
pusha
ret
sbb
jo
into
shr
(bad)
lock
sahf
mov
and
int
fld
inc
push
push
nop
ins
cld
rep
jne
add
test
rol
lods
out
mov
call
pop
fmul
mov
hlt
call
test
push
into
(bad)
push
(bad)
stc
outs
mov
loop
mov
xchg
jo
add
iret
pushf
dec
call
movzx
std
cld
repz
add
out
sub
loopne
jo
add
frstor
xor
pop
fdivr
mov
xor
add
scas
ror
dec
mov
fdivrp
ds
out
add
retf
mov
rol
out
jne
mov
lahf
in
inc
sbb
pop
mov
outs
jo
sub
jmp
test
add
sti
stc
daa
mov
add
push
jmp
loope
test
mov
or
dec
dec
push
fadd
sahf
push
loopne
test
add
push
mov
retf
mov
idiv
(bad)
int3
cmps
adc
push
int3
fsubr
clc
or
out
jns
cmps
sbb
dec
aam
fdiv
out
push
in
cld
add
or
ds
repz
and
adc
inc
add
out
call
jns
out
nop
mov
xor
out
in
add
or
iret
repz
xor
push
pusha
jo
mov
lods
shl
data16
leave
mov
movs
(bad)
sbb
mov
and
movs
mov
aam
and
pop
mov
add
xchg
neg
ja
adc
add
imul
bound
inc
iret
retf
cmps
inc
push
adc
pop
xor
inc
outs
ret
inc
out
fdivr
push
xchg
ja
pop
add
jg
jg
stc
sahf
out
sahf
mov
jns
out
std
(bad)
inc
add
jns
out
add
sahf
add
add
sbb
mov
xchg
stos
add
add
jecxz
add
or
lsl
repz
cld
jg
rol
push
std
aam
ds
repz
cli
hlt
stc
or
jns
out
clc
sbb
xor
out
sahf
out
cmc
pop
hlt
ins
sahf
out
sahf
repz
nop
icebp
movs
jns
out
lock
jns
out
in
lock
add
jae
cmp
jmp
jmp
add
lahf
push
(bad)
xchg
sbb
leave
add
jge
bound
addr16
add
test
push
ja
mov
daa
or
add
or
or
push
mov
lds
sub
cld
cmp
add
inc
mov
(bad)
fdivr
(bad)
jmp
int
js
push
push
mov
call
out
into
mov
cmc
(bad)
(bad)
jmp
mov
add
sub
inc
mov
mov
(bad)
(bad)
(bad)
call
nop
imul
jns
and
mov
bound
inc
rcl
es
(bad)
mov
pop
(bad)
(bad)
(bad)
call
das
(bad)
push
adc
add
sti
shl
out
loope
(bad)
pop
aaa
ret
xchg
pop
inc
add
jmp
out
cld
fld
outs
mov
lea
bound
popa
popf
ins
(bad)
(bad)
(bad)
dec
in
inc
jmp
pusha
dec
mov
mov
cli
daa
mov
aam
(bad)
(bad)
inc
rcl
fxam
cdq
(bad)
clc
jl
pop
gs
lods
les
hlt
xchg
jmp
inc
cmps
and
cmp
pop
gs
int3
or
jge
rcr
test
test
loopne
sub
adc
(bad)
(bad)
inc
mov
cmp
xor
rcl
sub
ja
les
sbb
pushf
fstp
adc
out
out
xchg
xchg
ja
add
dec
push
test
or
or
inc
xchg
jbe
inc
inc
daa
test
sub
pusha
push
jmp
and
test
test
cmp
xchg
mov
lds
mov
mov
or
jbe
fs
and
call
ins
jle
fwait
jno
jmp
in
push
ds
push
loope
enter
xchg
mov
aaa
popa
lds
mul
aas
adc
pop
sbb
fist
pop
mov
pop
add
and
and
push
mov
mov
aas
sar
sahf
aaa
or
mov
pop
shl
addr16
inc
and
out
sahf
xlat
push
xor
inc
inc
push
pusha
enter
ins
xor
jbe
dec
out
jnp
cmp
jb
ror
add
and
pop
fcomp
sti
jns
adc
pop
adc
pop
(bad)
fmul
add
add
in
mov
push
or
cmp
ins
call
sbb
push
push
cmp
xor
adc
ins
outs
jne
xor
mov
ds
imul
pusha
xchg
aad
outs
aam
and
cmp
retf
(bad)
call
mov
fsub
pusha
xor
xchg
lock
cmp
pop
push
jo
xor
jmp
or
pusha
and
mov
add
push
pop
sahf
mov
jns
nop
jbe
cmp
cmp
jns
jg
add
pop
adc
mov
out
sahf
or
out
sahf
jg
add
xor
out
sahf
enter
test
xlat
popf
out
test
pop
push
js
out
sbb
add
push
jl
fdiv
cmp
cmp
mov
iret
mov
push
adc
repz
and
(bad)
repz
repz
movs
add
repz
add
pop
sbb
repz
inc
jp
aam
jns
not
jle
sub
mov
add
pop
xor
ss
out
sahf
int3
pcmpgtd
lods
push
jns
out
xchg
or
jns
out
pushf
arpl
jnp
repz
fcomp
push
outs
cs
push
cmp
mov
call
adc
cmp
cmp
push
ret
iret
jae
and
daa
iret
inc
loop
sbb
jns
shr
repnz
repz
mov
ret
jae
adc
out
push
retf
jns
out
stos
add
xchg
out
pop
sbb
out
jns
ins
sub
out
lea
push
adc
jae
(bad)
sahf
out
sahf
arpl
cmps
add
jns
pop
sbb
jnp
(bad)
imul
out
sahf
mov
mov
jns
dec
sahf
push
pop
ja
into
jns
out
addr16
scas
pop
xchg
xchg
out
out
pop
pop
sahf
mov
aas
fisubr
das
stos
out
idiv
dec
(bad)
dec
mov
nop
or
cs
or
cs
test
in
fnstcw
stc
lds
in
mov
mov
inc
cs
int
in
cs
popf
fisttp
std
nop
or
mov
shl
repz
in
cs
jmp
cs
fstp
dec
(bad)
cmps
mov
xchg
xlat
and
in
cs
scas
out
cs
cs
fistp
(bad)
jle
pop
cld
push
shl
out
add
adc
rcr
add
push
add
xor
add
adc
add
push
inc
push
jle
sbb
sbb
push
popa
pusha
movs
test
xor
or
or
push
dec
shl
ss
push
add
shl
add
outs
add
xor
and
add
jne
adc
and
je
outs
fs
push
mov
test
sub
and
(bad)
push
lods
and
int3
xor
adc
mov
rol
ret
popa
inc
mov
jno
imul
je
mov
mov
ret
je
imul
iret
sub
icebp
pop
xor
xchg
push
nop
cdq
arpl
sbb
or
inc
mov
inc
ds
(bad)
or
inc
mov
mov
leavew
adc
shl
adc
lds
sbb
add
leave
leave
leave
adc
adc
add
add
arpl
jo
(bad)
pop
or
push
xchg
outs
adc
xchg
fmul
mov
cmp
xchg
mov
int
jb
and
mov
ret
push
add
iret
repz
sbb
sbb
sbb
inc
dec
call
xor
dec
js
inc
in
mov
push
pop
pop
jb
pop
add
add
pop
jb
add
mov
add
cmps
xchg
pop
or
or
add
test
mov
dec
int3
sub
ins
repz
repz
sbb
pop
fmul
repz
cmp
jl
add
inc
ret
(bad)
loop
xchg
push
ror
repz
xor
cmp
repz
retf
push
cmp
repz
cmp
cmp
cmp
repz
(bad)
cmps
data16
repz
xchg
push
(bad)
iret
repz
ss
test
cmp
repz
into
cs
outs
repz
repz
push
sahf
pop
fmulp
repz
ds
cmp
repz
shl
popa
repz
repz
xchg
push
ror
repz
xor
cmp
repz
leave
sub
repz
iret
repz
cmp
cmp
repz
lds
iret
repz
xchg
push
aad
repz
xor
lea
repz
int
lods
ins
repz
repz
sbb
repz
cmp
add
sahf
out
dec
add
sar
out
shl
xor
out
jae
repz
mov
sahf
out
retf
sub
stos
stos
out
sahf
out
imul
sbb
fwait
fwait
pop
pop
fstp
out
fstp
cmp
out
jnp
sti
pop
sahf
out
sahf
pop
xchg
sahf
out
(bad)
daa
daa
cmps
cmps
out
sahf
out
addr16
pop
sahf
out
sahf
pop
xchg
xchg
push
push
xlat
jns
out
xlat
aaa
aaa
mov
out
sahf
out
ja
test
jg
jns
out
iret
das
das
scas
scas
out
sahf
out
outs
out
out
pop
sahf
out
sahf
pop
lahf
lahf
pop
pop
fistp
out
fistp
aas
mov
out
jg
dec
iret
repz
inc
push
and
push
xor
repz
or
push
sbb
js
iret
repz
inc
and
adc
xor
mov
add
cmp
and
repz
mov
adc
iret
repz
sbb
adc
repz
repz
push
push
push
iret
repz
add
or
add
cmp
sbb
cmp
repz
pop
add
or
or
adc
sbb
xor
add
sub
cmp
inc
push
pusha
jo
xchg
cmps
imul
xlat
or
sbb
outs
mov
xchg
sar
ins
adc
mov
mov
push
push
cmovge
lahf
aam
add
add
call
adc
add
push
or
fidivr
cli
or
test
or
or
and
xchg
mov
or
sub
enter
adc
pop
sbb
leave
test
sbb
and
sbb
test
arpl
adc
in
in
adc
push
pop
sub
mov
sbb
loop
pop
xor
or
rol
aam
loopne
imul
lock
in
push
hlt
jns
cmps
stc
push
or
and
inc
push
std
dec
inc
in
adc
in
add
fisub
pop
add
lahf
cmps
add
sahf
or
jb
jbe
inc
pusha
add
push
mov
call
or
sub
in
add
adc
das
leave
mov
mov
bound
fstp
inc
loopne
movs
outs
inc
in
add
inc
add
xor
jb
addr16
add
add
adc
into
jo
inc
mov
dec
ja
dec
xchg
(bad)
mov
adc
outs
add
inc
or
inc
push
mov
sub
add
add
pop
pushf
sub
scas
cdq
neg
stos
and
push
add
add
add
sub
add
inc
add
loope
js
inc
das
push
cmp
ins
pop
dec
scas
add
and
nop
jl
daa
inc
aas
add
loopne
fst
add
adc
add
ds
adc
push
and
inc
xlat
jbe
inc
ror
pusha
cld
in
adc
in
jnp
pop
and
daa
mov
and
and
jg
in
ficomp
and
aas
add
add
lods
or
mov
push
sub
mov
add
push
in
inc
jle
xchg
sub
xchg
add
xor
pop
inc
add
(bad)
jp
add
pop
jmp
(bad)
jmp
stos
sbb
scas
jg
xchg
ret
push
jg
xor
jnp
test
add
sub
add
in
neg
sub
int3
ficom
outs
inc
mov
sub
and
add
mov
xchg
ja
or
mov
mov
cs
jmp
call
call
xor
xchg
jno
adc
pop
xlat
sub
dec
jl
ficomp
mov
mov
pop
outs
loope
sub
lods
push
cmp
fwait
out
jns
pop
movs
push
pop
les
push
mov
jmp
sub
test
nop
xchg
sub
pop
fmulp
dec
repz
iret
cmps
pushf
push
fcomp
push
les
int3
xchg
out
mov
cmps
pop
lods
mov
jno
cs
ficomp
out
push
adc
jo
inc
jbe
nop
xchg
icebp
sahf
mul
adc
xchg
pushf
jle
dec
jnp
xor
sbb
mov
push
mov
pop
fsub
push
inc
mov
push
cmp
sbb
js
retf
sbb
sbb
out
jns
or
mov
ds
mov
push
sub
scas
mov
out
pushf
pop
faddp
ret
in
data16
push
pop
push
fs
stc
imul
adc
jl
retf
mov
push
loopne
sbb
jnp
cmp
push
push
xor
nop
in
test
jge
sti
fmulp
push
mov
push
push
xor
push
in
dec
sti
mov
push
push
adc
ss
jge
out
dec
shr
push
mov
movlhps
pop
(bad)
xchg
or
inc
daa
fcomp
rcr
out
js
loopne
xor
push
dec
es
fcomp
mov
sahf
fisubr
inc
ja
dec
sbb
in
jbe
out
pop
mov
push
mov
fcomp
div
test
push
shl
cmp
daa
sub
repz
fisubr
inc
fdivr
idiv
push
arpl
or
sub
mov
loopne
inc
fidivr
sbb
mov
cs
push
push
sbb
js
fdivp
(bad)
data16
xchg
mov
cwde
fcom
je
repz
ss
adc
xchg
(bad)
xchg
out
sub
sub
push
fisubr
xchg
cmp
aas
sar
int3
push
xchg
idiv
lock
(bad)
cs
cmp
sub
jne
jl
sbb
(bad)
mov
push
out
fnstcw
push
inc
les
imul
jns
xor
sbb
and
pop
dec
mov
cmps
jl
aam
cmp
sbb
js
ds
enter
sub
mov
ds
push
lods
(bad)
xchg
mov
mov
movs
lea
pop
push
call
(bad)
jmp
sbb
neg
push
scas
outs
mov
lods
push
xor
sbb
mov
out
in
push
xchg
rcl
xor
ss
adc
xchg
xchg
ror
mov
xchg
sub
adc
(bad)
dec
mov
es
ja
dec
mov
es
int3
dec
adc
loopne
cs
(bad)
or
outs
xchg
ficomp
mov
ss
fist
out
push
call
push
cmp
push
js
test
cmp
js
dec
setle
xchg
fdivr
xor
push
cwde
les
sbb
ds
popa
fsubp
cs
dec
aam
push
lahf
sub
fidiv
(bad)
lods
(bad)
mov
push
mov
sar
inc
push
pushf
repz
pushf
cmp
rcr
into
fs
loopne
cld
js
loopne
hlt
mov
enter
jbe
clc
ins
imul
add
add
test
push
push
push
add
sub
and
sbb
jge
and
cmp
sub
xor
add
adc
or
adc
nop
jg
test
syscall
add
add
out
mov
push
adc
push
push
inc
popf
and
add
mov
adc
push
inc
inc
push
inc
ds
sbb
push
dec
push
or
push
push
sbb
add
mov
xchg
mov
xor
cmp
xor
mov
push
push
add
dec
adc
ss
adc
fsub
arpl
and
inc
and
add
pusha
shr
js
and
fist
mov
cs
and
or
xor
pop
jl
sti
popa
pop
xchg
test
dec
bswap
pop
jbe
pop
adc
imul
pop
bound
xchg
pop
jb
aas
(bad)
add
xor
inc
(bad)
pop
xor
xor
movs
push
int
add
addr16
inc
dec
add
in
cmp
mov
add
add
pusha
push
and
jbe
imul
adc
mov
(bad)
pop
push
add
addr16
out
std
mov
aaa
cmp
pmaxsw
int3
adc
ret
int3
nop
cmps
mov
sbb
stc
push
mov
add
add
push
pop
xor
das
dec
add
dec
xor
and
iret
sar
cmp
call
dec
inc
cs
pushf
mov
arpl
push
dec
mov
clc
call
xor
cmp
out
and
int
shr
dec
dec
fistp
jp
mov
adc
pop
sbb
(bad)
(bad)
(bad)
jmp
movs
outs
rol
jecxz
sbb
push
aad
ja
into
pop
fnstenv
jmp
out
inc
arpl
xchg
mov
mov
push
mov
aam
repz
push
pop
pop
lods
mov
(bad)
(bad)
jmp
ins
movs
fisttp
inc
jmp
push
out
repz
pop
lods
push
push
jo
(bad)
(bad)
call
xchg
jmp
push
in
dec
cwde
(bad)
dec
jmp
push
adc
push
(bad)
(bad)
(bad)
inc
or
jns
cmp
jp
xchg
arpl
add
les
pop
mov
or
and
(bad)
(bad)
(bad)
inc
pop
ja
in
xchg
jo
xor
mov
(bad)
dec
inc
jge
sub
retf
inc
inc
(bad)
push
sbb
iret
push
adc
loop
mov
inc
int
xor
(bad)
(bad)
std
div
fs
ins
in
dec
xchg
and
test
daa
shl
(bad)
ss
outs
bound
(bad)
(bad)
(bad)
jmp
loope
jnp
sbb
retf
cmp
add
hlt
dec
pop
cdq
mov
mov
in
(bad)
(bad)
(bad)
dec
and
inc
sahf
(bad)
mov
mov
dec
push
dec
mov
cld
jns
scas
scas
and
inc
and
(bad)
(bad)
(bad)
push
inc
ins
dec
or
lahf
out
stc
ret
pop
in
ja
mov
or
add
(bad)
(bad)
dec
sbb
cmp
adc
push
and
inc
or
data16
xor
or
ss
mov
aam
arpl
sbb
dec
fld
mov
lods
(bad)
mov
enter
sub
(bad)
(bad)
cs
mov
dec
int3
dec
popf
adc
dec
adc
xor
mov
inc
(bad)
(bad)
(bad)
jmp
add
shl
mov
fstp
add
add
adc
cdq
sub
jle
(bad)
(bad)
jmp
fs
mov
pop
cmc
pop
pop
movs
and
adc
mov
pop
js
cmp
xchg
cmp
(bad)
(bad)
(bad)
call
mov
lea
or
scas
call
jl
test
fdivr
(bad)
(bad)
inc
data16
pop
fdivr
movs
jo
inc
scas
inc
repnz
mov
cli
sbb
(bad)
(bad)
jmp
push
test
or
pop
fst
jge
xchg
or
cli
dec
(bad)
or
xor
imul
cmp
dec
mov
jecxz
test
sub
cwde
pop
(bad)
(bad)
(bad)
jmp
push
push
pusha
cmp
in
xor
in
dec
xor
mov
test
(bad)
(bad)
dec
test
movs
mov
test
stc
fdiv
ret
ja
(bad)
(bad)
(bad)
jmp
std
fsubr
cld
(bad)
mov
sub
mov
inc
dec
xor
sbb
xor
xchg
push
loopne
jb
xchg
jne
je
retf
popf
out
cld
(bad)
(bad)
dec
aad
and
cmp
mov
mov
div
inc
adc
sub
fwait
ret
inc
and
ja
or
(bad)
not
push
mov
ret
sahf
aam
or
(bad)
(bad)
(bad)
(bad)
fistp
and
mov
jae
dec
pop
popa
pusha
jmp
not
dec
adc
scas
mov
dec
scas
cdq
dec
sbb
push
fild
mov
adc
mov
push
shr
and
mov
(bad)
fld
cmp
inc
imul
push
out
add
sbb
pushf
hlt
(bad)
(bad)
(bad)
fidivr
fstcw
iret
stos
shl
mov
mov
xchg
mov
(bad)
(bad)
fistp
retf
test
out
sub
dec
iret
aad
aam
mov
(bad)
xchg
cmp
(bad)
push
add
call
(bad)
pushf
retf
out
mov
or
movs
sbb
push
push
xor
out
sub
clc
(bad)
(bad)
jmp
loopne
xchg
push
mov
(bad)
ficomp
and
(bad)
(bad)
jmp
loop
arpl
cmp
ret
or
sbb
loope
movs
(bad)
mov
(bad)
(bad)
jmp
ret
mov
fadd
inc
dec
sub
popa
ret
and
out
sar
jg
push
fstp
int3
and
jo
pop
(bad)
(bad)
(bad)
jmp
shr
test
jne
or
test
pop
add
call
pop
xlat
ja
ja
cli
inc
and
pop
fcmovnu
xchg
sbb
inc
mov
(bad)
(bad)
inc
call
cmp
shl
ss
stos
inc
fdivr
sar
rcl
call
xor
lahf
fcomp
add
xchg
mov
and
retf
inc
sub
pop
sub
jae
(bad)
(bad)
jmp
xchg
push
cld
sbb
push
jne
dec
mov
jo
sub
call
(bad)
(bad)
(bad)
(bad)
jle
loop
inc
rcl
inc
rcr
jp
mov
xor
test
cmc
aam
(bad)
(bad)
inc
sbb
in
in
dec
push
fnstsw
adc
push
push
mov
getsec
inc
inc
fnstcw
or
(bad)
(bad)
push
push
(bad)
popa
test
sbb
adc
mov
fnstenv
mov
fiadd
xchg
mov
xchg
div
cli
repz
mov
xchg
(bad)
(bad)
(bad)
jmp
push
repz
push
xor
sbb
(bad)
mov
hlt
ret
add
and
jg
add
repz
fidivr
daa
pop
(bad)
(bad)
push
pusha
sbb
push
jne
push
icebp
retf
sbb
scas
adc
lahf
cwde
repz
adc
adc
lods
mov
pusha
mov
(bad)
cs
jp
or
jg
retf
(bad)
jg
jmp
add
(bad)
(bad)
jg
enter
mov
mov
mov
call
mov
fsub
adc
pop
pop
push
pop
mov
movs
or
inc
sbb
ficom
mov
or
pop
pop
cmc
(bad)
push
sub
cmps
sahf
sti
sub
fs
adc
mov
xchg
clc
cmps
stos
(bad)
or
(bad)
(bad)
push
outs
dec
add
xchg
add
lods
inc
fistp
adc
adc
xchg
rcl
inc
cmps
cld
push
ret
lods
sbb
fistp
mov
pop
out
pop
popf
jne
pusha
fmul
call
mov
mov
inc
mov
rol
arpl
iret
lahf
cmp
push
iret
in
push
test
(bad)
cli
rcl
push
aad
fld
sbb
pushf
mov
pop
(bad)
(bad)
call
mov
int3
fisttp
shr
clc
cmp
rcl
popa
ficom
pop
sub
push
push
jmp
bound
xchg
call
inc
add
stos
xor
imul
dec
cmp
mov
leave
dec
scas
(bad)
(bad)
(bad)
call
dec
(bad)
add
push
pusha
in
mov
push
inc
inc
mov
ds
call
(bad)
clc
cmp
mov
mov
rol
cld
push
xor
nop
lds
xor
(bad)
(bad)
(bad)
push
ret
push
scas
ret
mov
out
iret
push
stos
iret
inc
ins
xchg
pop
xor
inc
pop
sub
mov
(bad)
mov
in
in
mov
test
jnp
jg
push
xor
jno
ret
(bad)
(bad)
dec
cmp
cs
fld
cli
pushf
js
rcr
arpl
cmps
std
jne
(bad)
(bad)
fild
fistp
lock
(bad)
jle
pop
in
jmp
jno
push
or
iret
(bad)
movs
repnz
cmp
(bad)
stc
cmp
imul
xor
add
jl
mov
adc
call
pop
hlt
inc
das
scas
inc
mov
mov
push
xlat
jne
sbb
jns
adc
(bad)
(bad)
inc
mov
clc
mov
dec
and
or
call
jb
or
(bad)
(bad)
push
dec
or
sbb
cmp
fwait
inc
pop
mov
jns
pop
cmc
ror
inc
test
and
test
jecxz
ret
push
daa
sbb
icebp
mov
shl
(bad)
mov
sub
xchg
sbb
daa
sbb
retf
repz
lods
imul
test
xchg
cmps
mov
imul
adc
imul
jg
js
and
and
rol
pop
call
jle
adc
jno
cld
pop
cld
jmp
bnd
xor
inc
mov
push
js
xchg
xchg
(bad)
ins
jmp
(bad)
push
outs
sub
jge
imul
xchg
loop
bound
stos
jg
in
push
mov
push
cmp
(bad)
(bad)
call
ror
push
xor
jae
daa
xor
aam
sbb
inc
mov
gs
retf
ret
mov
sub
sbb
jo
pop
pop
(bad)
(bad)
(bad)
call
dec
js
mov
mov
dec
jae
jb
sbb
xor
(bad)
cmc
in
mov
pusha
sar
pop
mov
jmp
and
cmp
and
das
fsub
(bad)
call
pop
loop
out
fild
jno
mov
mov
mov
into
(bad)
push
jle
in
(bad)
(bad)
(bad)
inc
lods
push
pop
push
jnp
pop
dec
nop
cmp
popf
mov
mov
mov
cmp
repz
add
(bad)
dec
mov
inc
mov
rol
pop
in
sbb
(bad)
(bad)
jg
add
rcl
inc
jecxz
jno
lods
imul
mov
xor
add
rcr
mov
cli
mov
cmp
mov
xor
addr16
mov
push
movs
add
mov
dec
sub
retf
sbb
mov
push
cmp
sbb
call
sbb
sub
(bad)
cmp
ds
fild
fsub
idiv
aad
aas
into
(bad)
(bad)
(bad)
inc
cmp
inc
push
sbb
imul
aas
icebp
adc
sbb
or
add
dec
out
int3
and
xlat
dec
(bad)
(bad)
(bad)
jmp
or
int3
(bad)
shr
aas
xor
jl
nop
pop
cdq
lock
mov
adc
jle
cld
aam
xor
jne
(bad)
adc
mov
jmp
dec
xlat
mov
jmp
mov
mov
icebp
mov
jae
cmc
lods
fcomp
xchg
test
(bad)
(bad)
jmp
xchg
adc
mov
jecxz
movs
mov
movs
dec
scas
inc
pop
sub
mov
(bad)
(bad)
fisubr
or
and
xchg
ret
popa
popf
aas
arpl
std
cmp
add
mov
stos
cmp
adc
daa
push
sbb
sub
push
jnp
jmp
pop
and
lahf
xchg
ror
retf
lods
push
shl
fmulp
add
cmp
mov
mov
sub
dec
pusha
data16
gs
outs
scas
bound
inc
mov
jl
in
outs
push
(bad)
(bad)
(bad)
jmp
rcr
into
into
add
repz
fadd
fs
adc
or
(bad)
(bad)
inc
rcl
in
popf
inc
fwait
retf
loop
mov
adc
fsub
cli
(bad)
(bad)
(bad)
inc
pushf
xlat
addr16
jmp
jbe
cmp
add
or
(bad)
xor
xchg
xchg
xchg
test
(bad)
(bad)
push
push
xchg
cmps
mov
mov
push
fldz
popf
xlat
mov
pop
jecxz
cmp
popa
xchg
cmp
call
push
loop
fst
or
sbb
inc
ds
mov
xchg
test
fsubr
dec
call
dec
aam
shr
cmp
imul
cmp
pop
out
lods
int3
imul
mov
(bad)
(bad)
(bad)
(bad)
aas
jmp
cmps
jae
adc
(bad)
and
pop
adc
movs
test
push
cmp
mov
movhps
cmp
adc
mov
les
outs
adc
rcl
jmp
(bad)
clc
scas
lock
cmp
neg
jmp
mov
jns
mov
(bad)
call
popa
nop
sbb
retf
pop
inc
add
mov
dec
dec
push
repz
mov
rcr
mov
pop
call
in
or
xchg
mov
dec
sar
retf
xchg
into
mov
mov
fnstcw
stc
les
leave
push
sbb
in
sar
aaa
sar
(bad)
(bad)
push
and
aam
mov
pusha
sbb
sbb
cld
mov
mov
(bad)
(bad)
out
pop
sub
adc
into
shl
test
popa
xlat
in
jmp
pusha
(bad)
jg
das
out
sar
call
cld
cmp
cmp
out
(bad)
(bad)
(bad)
out
mov
dec
adc
pop
xor
xchg
or
gs
add
jge
adc
or
scas
clc
jecxz
xchg
mov
adc
xchg
adc
xchg
jb
out
clc
(bad)
(bad)
jmp
test
xchg
inc
(bad)
and
in
mov
hlt
pop
push
xor
(bad)
(bad)
inc
das
mov
xchg
xchg
pop
ret
pop
jmp
push
in
and
(bad)
(bad)
jg
fsubr
into
inc
mov
ins
fcmovnb
pop
test
pop
dec
push
(bad)
(bad)
(bad)
call
sbb
mov
xchg
jmp
in
gs
dec
or
je
into
gs
ss
xchg
and
cmp
xlat
inc
stos
into
clc
ins
cmps
push
(bad)
(bad)
jmp
sub
in
das
jae
leave
sub
or
fcmove
mov
adc
loopne
cwde
shl
or
dec
loop
out
push
fwait
or
jmp
nop
in
xor
(bad)
(bad)
call
lods
push
dec
loope
data16
push
dec
jl
in
cld
mov
jae
fistp
add
cmp
sub
jecxz
jl
or
(bad)
jl
dec
push
jmp
or
mov
data16
gs
(bad)
dec
ins
cmp
arpl
int3
fisub
adc
je
xor
cmps
pop
sahf
add
jg
(bad)
fldcw
add
pop
fidivr
push
add
or
cwde
mov
cmps
lods
stos
jmp
mov
(bad)
jmp
lock
adc
cwde
jmp
jle
pop
jns
jmp
les
aas
add
xchg
sbb
mov
cmp
pop
(bad)
(bad)
(bad)
jmp
sub
fadd
outs
divps
out
fucomip
sbb
inc
sbb
(bad)
mov
dec
scas
addr16
inc
mov
dec
add
push
mov
inc
dec
fisubr
cmps
jns
stos
lea
push
out
dec
shl
sbb
repz
push
cmp
jecxz
dec
dec
mov
movs
sti
inc
lahf
add
shl
pop
dec
push
out
cld
(bad)
jg
mov
or
mov
lahf
cmp
data16
je
scas
aas
(bad)
(bad)
(bad)
(bad)
clc
xlat
jne
cmps
in
add
out
add
loopne
in
outs
clc
in
mov
cmp
(bad)
call
aas
out
pop
sbb
test
dec
and
mov
movs
sub
adc
cmps
(bad)
(bad)
dec
sbb
or
sub
or
jb
jno
push
sub
mov
scas
xor
add
dec
fldenv
sti
mov
pop
mov
outs
movs
(bad)
pop
gs
scas
das
xchg
add
jnp
clc
cld
push
xchg
(bad)
mov
ret
scas
stos
(bad)
(bad)
(bad)
dec
fistp
test
popf
in
mov
sbb
jo
push
push
pop
jecxz
fwait
mov
ss
(bad)
(bad)
(bad)
cli
inc
adc
enter
icebp
and
adc
inc
jmp
cmc
mov
(bad)
(bad)
mov
ja
in
out
fs
mov
and
call
mov
cli
jmp
sbb
sub
sub
xor
jecxz
cmp
adc
(bad)
(bad)
jmp
jns
jne
xor
fisttp
xchg
sahf
or
xchg
ja
pop
popf
sti
mov
(bad)
js
shl
(bad)
pop
ds
pop
scas
jle
add
jb
aaa
(bad)
dec
push
(bad)
(bad)
mov
out
jae
dec
outs
sahf
sbb
out
lods
or
shl
or
mov
cmp
(bad)
(bad)
push
in
mov
scas
inc
mov
mov
push
lea
jl
sahf
sub
mov
(bad)
(bad)
call
mov
sbb
fs
add
inc
sub
or
jbe
icebp
popf
call
std
jmp
inc
jle
jmp
xchg
in
and
and
std
(bad)
(bad)
jg
jmp
sub
aaa
xor
inc
cli
int3
adc
cmp
adc
mov
and
(bad)
call
bound
int
sbb
stos
push
pushf
(bad)
sbb
pop
mov
pop
aam
sbb
sub
sbb
(bad)
(bad)
jmp
out
gs
in
sti
push
mov
sbb
fnstsw
or
popa
or
jle
cmp
(bad)
mov
loop
mov
in
in
test
fmul
pop
mov
pusha
push
mov
(bad)
(bad)
(bad)
call
xor
or
push
and
(bad)
and
pop
sub
mov
(bad)
jmp
out
add
fiadd
loopne
aaa
push
adc
data16
test
jg
push
sub
call
lock
mov
jge
jp
(bad)
out
loope
xor
es
lock
mov
es
(bad)
(bad)
in
inc
fst
(bad)
nop
sub
imul
rol
mov
cmp
jno
iret
sbb
cmp
das
jo
data16
and
outs
mov
shl
(bad)
(bad)
inc
lds
mov
ins
pop
push
sar
sbb
ud0
(bad)
dec
repnz
popa
xchg
inc
push
xchg
xor
shl
inc
ror
or
jo
clc
push
retf
inc
cli
lahf
and
inc
cli
retf
(bad)
mov
fsub
dec
ret
mov
mov
dec
adc
movs
push
pop
add
(bad)
dec
in
add
inc
push
sub
loope
adc
add
or
retf
sub
(bad)
fild
ss
inc
frstor
outs
mov
ins
and
fdivr
cmp
test
(bad)
(bad)
(bad)
jg
lds
and
(bad)
fiadd
int
jle
shr
push
dec
(bad)
stc
loop
mov
add
scas
jnp
and
dec
test
dec
sbb
(bad)
(bad)
(bad)
call
mov
push
stos
iret
xor
mov
add
add
sub
fwait
mov
mov
(bad)
(bad)
(bad)
jl
jmp
dec
js
mov
das
jmp
xor
jo
mov
xor
xchg
(bad)
(bad)
(bad)
jmp
jne
(bad)
sbb
popf
mov
and
and
push
into
movs
(bad)
jns
in
daa
xchg
xor
arpl
xchg
(bad)
(bad)
(bad)
call
and
mov
pop
pop
inc
pop
jmp
push
je
mov
loop
sub
mov
mov
(bad)
(bad)
call
pop
mov
pop
sub
out
cmp
pop
mov
jns
leave
fs
test
jl
nop
into
mov
(bad)
(bad)
(bad)
(bad)
ficom
js
and
fistp
lock
pop
stos
push
pop
jb
fwait
sub
adc
scas
gs
cmp
xchg
(bad)
(bad)
(bad)
jmp
in
test
push
mov
cld
(bad)
or
daa
cdq
ja
dec
lods
add
ficom
add
(bad)
(bad)
repnz
outs
push
ret
into
xor
mov
xor
pop
iret
loopne
(bad)
jmp
dec
mov
jp
adc
test
fldcw
ds
jnp
mov
pop
enter
xor
pop
dec
xor
mov
mov
std
(bad)
(bad)
(bad)
(bad)
cld
les
(bad)
sti
pop
inc
xchg
xor
or
inc
(bad)
push
add
clc
popa
mov
ja
aad
(bad)
jle
sub
lods
mov
call
push
popf
inc
adc
jmp
jg
dec
lahf
dec
shl
sub
mov
ficomp
jo
mov
jg
or
inc
fcomp
jl
xor
xor
fiadd
cmp
(bad)
(bad)
inc
and
pop
push
xchg
dec
jbe
call
sbb
cmp
push
mov
mov
jge
push
jnp
mov
xchg
mov
jp
mov
push
xchg
mov
inc
clc
(bad)
(bad)
call
jae
cs
aad
rol
jle
dec
mov
and
adc
scas
add
popa
jmp
add
aad
xor
xor
jmp
enter
lods
shl
pop
xor
sbb
jmp
or
jle
imul
xchg
jo
mov
cmp
clc
jmp
jb
cmps
cmp
pop
sub
(bad)
loopne
adc
popa
lahf
jmp
jmp
dec
and
sub
xchg
jo
or
dec
cmps
cli
(bad)
add
xchg
pop
or
push
mov
(bad)
jmp
ret
sub
clc
lods
add
aas
aam
mov
or
xchg
xchg
movs
mov
mov
ins
rol
mov
test
push
test
xor
mov
mov
xchg
int3
call
das
js
(bad)
mov
sub
les
cdq
ret
pop
(bad)
(bad)
(bad)
(bad)
jmp
xchg
adc
sub
lock
aad
out
dec
mov
nop
cmp
or
jo
out
popa
test
fcomip
call
mov
les
and
sbb
fs
(bad)
frstor
mov
cdq
fcomip
(bad)
jmp
fist
xchg
arpl
out
and
mov
daa
add
in
xchg
push
add
mov
std
sub
mov
add
(bad)
(bad)
(bad)
jmp
ds
imul
adc
je
sti
xor
(bad)
(bad)
ds
mov
push
cmp
pop
out
(bad)
xor
jno
stos
cdq
adc
shl
(bad)
(bad)
(bad)
dec
mov
int
cmp
mov
mov
inc
adc
sbb
dec
(bad)
call
hlt
mov
out
call
(bad)
cs
jnp
dec
xor
push
xor
loop
inc
sahf
or
sub
dec
int
fiadd
fs
(bad)
enter
and
call
xor
lds
shl
xchg
mov
or
mov
(bad)
jge
mov
jp
gs
outs
and
adc
pop
movs
dec
and
loopne
inc
xor
add
fs
aaa
rol
mov
cmp
inc
std
cli
cmp
inc
hlt
mov
mov
xor
int3
inc
int
test
jp
outs
pop
fist
mov
jle
test
adc
bswap
sti
mov
add
ja
xlat
imul
or
fld
cdq
shl
pop
jp
mov
(bad)
(bad)
call
das
inc
iret
in
ror
mov
mov
add
daa
adc
(bad)
push
into
out
(bad)
(bad)
mov
mov
rol
sbb
sbb
vmovupd
xor
inc
mov
add
dec
adc
div
xchg
aas
push
pushf
(bad)
pop
gs
dec
data16
jmp
inc
imul
mov
daa
xor
pop
dec
shl
mov
loopne
call
(bad)
call
xchg
add
into
add
cmp
neg
pop
add
popf
addr16
push
jmp
jg
out
push
test
pop
ds
dec
sub
push
inc
jecxz
retf
xchg
popf
mov
(bad)
(bad)
mov
rcr
push
ds
(bad)
fnsave
cmp
sahf
out
mov
daa
inc
cmp
mov
mov
popf
enter
dec
call
mov
xor
out
jle
pushf
dec
(bad)
jg
push
cmp
cmp
mov
pop
enter
ret
lock
sbb
push
std
(bad)
std
aas
mov
sub
arpl
popf
loopne
pop
push
dec
push
jns
jnp
xor
(bad)
(bad)
jg
fs
js
rol
cmp
test
jns
outs
add
inc
(bad)
(bad)
(bad)
call
inc
stc
daa
xchg
mov
ror
repz
mov
push
ror
cwde
(bad)
(bad)
(bad)
(bad)
inc
pop
jbe
fld
lahf
out
mov
sti
rcr
sti
test
ret
or
outs
mov
(bad)
(bad)
dec
loope
(bad)
sub
in
clc
jno
mov
test
data16
jmp
lods
inc
and
mov
ret
push
jmp
loopne
out
fldpi
mov
stos
add
sti
fdivr
mov
mov
mov
(bad)
js
dec
cmp
std
mov
mov
xchg
idiv
(bad)
push
cmp
movs
xchg
hlt
or
(bad)
mov
jmp
add
fucomip
cmp
outs
lods
xlat
movs
and
and
jp
dec
cmps
popa
hlt
shr
xchg
ss
dec
jae
out
and
and
or
(bad)
(bad)
jg
xor
or
jl
test
popa
xchg
das
xchg
imul
sub
popf
and
lods
mov
jno
test
cmp
call
adc
push
stos
pop
jecxz
call
inc
scas
ret
xchg
mov
dec
pop
fsubp
jecxz
(bad)
inc
mov
cwde
sbb
or
sbb
shl
js
inc
(bad)
adc
fcomip
dec
xchg
jmp
mov
xlat
dec
leave
icebp
jne
outs
cmp
(bad)
and
(bad)
jg
out
and
(bad)
gs
stos
sbb
enter
enter
stos
jecxz
mov
jne
cmp
popa
and
jle
sbb
test
les
cmp
hlt
xor
(bad)
(bad)
(bad)
std
jmp
pop
push
loopne
out
and
sub
loope
in
dec
push
ins
xchg
jmp
push
xchg
loopne
call
lahf
xor
cmp
xchg
add
fwait
jbe
lock
inc
xor
cmc
out
or
icebp
push
jmp
out
push
dec
push
push
test
dec
mov
mov
dec
(bad)
pop
inc
movs
add
jge
(bad)
(bad)
call
out
std
dec
cdq
popf
cmp
movs
sbb
xchg
push
addr16
movs
call
pop
(bad)
scas
(bad)
(bad)
(bad)
call
fidiv
sar
mov
test
fs
ret
pop
fisttp
sub
xor
pop
or
dec
out
hlt
pop
repz
scas
pusha
aad
fs
out
fwait
dec
out
jp
jge
hlt
adc
adc
mov
mov
inc
std
or
adc
mov
sti
sar
outs
or
(bad)
es
(bad)
lods
mov
pop
sub
mov
das
pop
or
dec
push
pop
loop
adc
xchg
jbe
arpl
mov
push
call
stos
ss
sub
dec
(bad)
cld
cs
aam
xchg
jecxz
test
scas
popa
xor
push
lods
loop
cmp
mov
add
ucomiss
pop
push
pusha
movs
adc
mov
mov
(bad)
(bad)
fistp
rol
cmp
dec
jb
cwde
mov
scas
ret
inc
push
shl
pop
std
(bad)
mov
repz
call
mov
fisubr
push
add
(bad)
enter
(bad)
jg
pop
pop
call
out
shl
gs
(bad)
or
mov
(bad)
(bad)
(bad)
fldcw
dec
or
mov
push
add
jo
jmp
(bad)
(bad)
mov
int3
add
mov
pop
aad
jecxz
mov
sbb
(bad)
(bad)
jg
and
pusha
mov
test
mov
vpsubusb
(bad)
(bad)
call
inc
xlat
mov
dec
cmps
iret
sbb
ins
imul
jmp
call
rol
call
add
aad
dec
leave
pop
aam
sub
add
lods
mov
fisubr
xor
sub
pop
add
aaa
jmp
cmps
test
(bad)
mov
aam
daa
add
js
(bad)
jmp
jbe
cmp
bound
cld
popa
mov
in
loopne
sti
enter
mov
(bad)
(bad)
(bad)
cmp
add
add
adc
jle
and
xor
(bad)
(bad)
dec
mov
xchg
(bad)
jl
inc
cmps
pop
push
dec
dec
popa
xchg
(bad)
fs
xchg
pop
mov
retf
ds
or
fcmovu
es
sub
leave
sub
xchg
shl
pop
jns
(bad)
(bad)
jg
mov
add
dec
enter
mul
cmp
adc
push
mov
(bad)
cmp
bnd
inc
out
retf
scas
sbb
jg
retf
and
(bad)
(bad)
(bad)
(bad)
aas
in
shl
ret
jp
cli
in
push
enter
fistp
xchg
jmp
sti
pusha
(bad)
push
push
inc
xor
sub
or
adc
repnz
(bad)
(bad)
(bad)
jmp
add
les
sbb
push
out
or
int
mov
mov
lock
int
jle
jg
(bad)
mov
popf
lods
rol
cmp
pushf
es
aaa
mov
pop
or
dec
cmps
mov
fmul
mov
std
sub
loopne
pop
imul
movs
paddsw
mov
mov
das
ror
cld
cmp
and
mov
stos
fldenv
(bad)
jne
(bad)
(bad)
call
xchg
xor
lahf
aad
push
outs
add
cmp
inc
sbb
ror
dec
ss
inc
ds
cmp
(bad)
cmc
das
cmc
stos
retf
ins
adc
add
sub
(bad)
dec
cmps
scas
add
ror
pop
retf
test
adc
adc
jmp
cmps
leave
shr
push
mov
mov
das
addr16
pusha
pop
sbb
shl
adc
ja
ret
adc
xor
(bad)
call
mov
jp
pop
(bad)
cmps
xlat
retf
rol
sub
cmps
xor
dec
mov
sub
scas
call
ins
ds
mov
rcl
inc
mov
fcom
sbb
leave
xor
rol
xchg
ret
(bad)
cmp
pop
jp
pop
mov
mov
jge
shr
(bad)
dec
mov
(bad)
jmp
retf
outs
(bad)
inc
nop
in
and
push
outs
ror
movs
push
inc
(bad)
(bad)
(bad)
jmp
das
(bad)
jo
sahf
call
popf
aad
stc
repnz
fist
mov
dec
movs
stos
stos
(bad)
(bad)
push
mov
jb
or
data16
int3
jae
or
push
les
fs
mov
lock
jb
xchg
sub
fdivp
outs
fidivr
adc
dec
mov
sar
mov
(bad)
call
add
in
gs
mov
in
jle
mov
in
jmp
(bad)
(bad)
jmp
jecxz
test
aam
sbb
enter
lods
adc
mov
push
(bad)
(bad)
(bad)
jmp
pop
retf
ds
xor
pop
jp
push
das
sub
out
jns
dec
stos
jmp
sar
shl
ds
iret
add
fnstenv
out
sbb
pop
mov
fldenv
mov
outs
push
mov
bound
mov
pop
pop
(bad)
gs
(bad)
(bad)
call
mov
out
in
ret
enter
add
mov
push
mov
mov
cmp
mov
xor
out
mov
rcl
les
mov
pop
inc
mov
mov
xor
ja
xchg
(bad)
(bad)
call
fdivr
mov
sub
std
pop
(bad)
or
inc
mov
adc
cdq
mov
mov
jnp
test
aaa
or
add
xor
mov
pushf
jb
xchg
bnd
jmp
aas
jne
shl
jp
mov
(bad)
jg
call
movs
xor
ret
mov
test
push
jns
scas
pop
mov
or
jle
(bad)
(bad)
(bad)
jmp
xchg
mov
mov
popa
adc
sub
mov
retf
(bad)
(bad)
(bad)
(bad)
(bad)
sub
and
xchg
fsubr
enter
cmps
and
sbb
pop
(bad)
(bad)
(bad)
call
retf
lods
stos
xchg
sti
xchg
in
sbb
or
das
add
fwait
pop
xor
pushf
aam
ficomp
lock
push
jnp
push
push
pusha
call
movs
sub
adc
sub
sub
call
or
inc
nop
ins
loopne
and
pop
call
int3
cli
in
mov
clc
(bad)
inc
out
rcl
mov
cmp
fild
(bad)
(bad)
pop
cmps
push
sbb
(bad)
(bad)
fiadd
xor
out
pop
jnp
xor
dec
shl
cmp
jecxz
(bad)
(bad)
jmp
push
test
ja
or
dec
adc
enter
imul
(bad)
jg
jmp
gs
add
sub
das
jb
scas
jg
ins
cmp
movs
mov
(bad)
(bad)
(bad)
inc
pop
and
push
mov
adc
mov
aam
fild
and
arpl
call
addr16
add
xchg
mov
repnz
inc
push
dec
xchg
js
or
(bad)
(bad)
cmp
inc
arpl
mov
pop
sar
pop
std
call
(bad)
push
pop
cmc
and
sbb
mov
xor
pop
repz
test
pop
pusha
jp
enter
sar
fsin
shr
and
call
mov
fs
test
into
jmp
push
cmps
and
fwait
sbb
adc
(bad)
cmc
scas
cmp
push
scas
adc
(bad)
(bad)
(bad)
(bad)
cmp
jne
inc
dec
dec
sahf
or
jbe
(bad)
mov
scas
or
js
mov
(bad)
(bad)
jmp
shl
pop
dec
push
call
inc
adc
dec
nop
call
(bad)
(bad)
inc
loope
mov
inc
xchg
aad
sbb
add
adc
add
mov
(bad)
(bad)
dec
add
sbb
cwde
in
mov
adc
outs
jl
sbb
push
mov
(bad)
push
or
push
jle
imul
xchg
les
nop
jge
imul
sbb
outs
clc
(bad)
push
xchg
retf
outs
push
pop
xor
ja
lods
inc
out
(bad)
(bad)
(bad)
inc
imul
mov
push
test
int
mov
mov
xchg
retf
dec
in
(bad)
(bad)
(bad)
(bad)
jl
call
or
(bad)
xchg
(bad)
cmp
adc
stos
hlt
xchg
je
xchg
mov
mov
push
push
stos
out
and
repz
mov
dec
hlt
(bad)
(bad)
(bad)
out
(bad)
jo
xchg
std
stos
mov
sub
rcl
ret
jae
xchg
int
(bad)
jo
leave
push
cli
mov
push
std
dec
aaa
pop
mov
and
mov
cmps
jge
gs
les
mov
xor
adc
out
call
in
xchg
mov
pop
cmp
sub
(bad)
(bad)
push
push
mov
inc
push
call
xchg
shl
std
xor
cli
adc
fstp
imul
dec
fst
push
cmc
mov
sub
xlat
xor
cmp
jg
mov
xor
ins
lods
lods
add
sub
adc
(bad)
(bad)
dec
dec
sub
jbe
jne
xor
in
retf
out
test
test
dec
ds
xchg
out
stos
loopne
(bad)
(bad)
dec
pop
jne
jmp
push
or
jo
rcl
push
add
out
test
(bad)
jg
scas
mov
mov
int3
mov
test
cmp
mov
out
xchg
inc
lods
shr
xchg
adc
xchg
add
jmp
pop
sub
(bad)
jecxz
dec
ja
push
cmc
pop
lea
clc
(bad)
repnz
sub
dec
mov
(bad)
mov
add
pop
cmp
(bad)
(bad)
mov
adc
and
mov
imul
movs
xchg
xchg
mov
adc
fild
sbb
stos
repnz
lods
into
stos
test
pop
mov
out
(bad)
(bad)
(bad)
inc
loopne
jbe
push
fwait
test
cs
fs
data16
fld
rcl
(bad)
pop
or
(bad)
(bad)
(bad)
call
or
inc
xor
(bad)
ror
sbb
lock
cwde
push
sub
test
inc
sbb
in
sub
(bad)
call
pop
sti
loope
dec
mov
pop
add
cmp
aam
and
sbb
dec
fwait
or
inc
push
mov
in
fiadd
jmp
or
or
test
leave
es
pushf
scas
xchg
data16
(bad)
dec
dec
ja
inc
pop
bound
sahf
ficom
jbe
push
lds
loope
pop
movs
inc
inc
inc
int
lods
jne
hlt
aam
stos
test
enter
pop
(bad)
call
loopne
(bad)
ffree
sbb
not
inc
dec
retf
xor
(bad)
(bad)
jmp
adc
add
scas
pop
xchg
xor
mov
int
pusha
imul
sub
push
push
or
es
push
jne
cld
cmps
outs
push
loope
mov
fcomp
popf
adc
(bad)
(bad)
push
mov
dec
dec
and
cwde
addr16
imul
je
mov
ds
lock
mov
add
call
mov
test
mov
jo
mov
aaa
push
push
cmp
loop
repnz
jg
(bad)
(bad)
(bad)
fcomi
vshufps
outs
or
bound
retf
data16
inc
cli
pop
xor
mov
imul
in
dec
bound
div
sbb
daa
push
loop
pop
push
pop
push
je
mov
nop
add
(bad)
(bad)
(bad)
(bad)
push
pop
sbb
xor
xchg
cli
inc
dec
lds
call
xchg
ret
loop
(bad)
(bad)
(bad)
jmp
sti
sti
mov
jmp
in
loope
sbb
xchg
push
(bad)
add
(bad)
(bad)
(bad)
jl
mov
stc
(bad)
es
sti
adc
pop
cmc
pop
test
cmp
ja
mov
(bad)
(bad)
(bad)
cmp
push
pushf
xor
jp
shl
imul
inc
push
mov
and
ror
xchg
loopne
(bad)
call
pop
sub
and
(bad)
sar
mov
mov
dec
mov
aas
mov
mov
adc
jmp
mov
xchg
xor
push
icebp
fs
adc
es
adc
lods
jmp
xchg
jbe
popa
(bad)
(bad)
(bad)
dec
mov
jne
in
and
add
sub
mov
movs
dec
(bad)
dec
(bad)
fcmovnu
dec
push
and
(bad)
cld
mov
ror
ss
pop
xor
pop
rcr
inc
adc
daa
mov
lds
cdq
mov
push
or
stos
pop
inc
aas
sub
pop
push
pop
(bad)
lahf
hlt
add
jmp
std
fxch
pop
sub
fisttp
dec
sbb
test
(bad)
jp
pop
lock
(bad)
stc
in
add
and
adc
jno
and
fdiv
ror
(bad)
push
lea
xchg
bound
push
lea
jecxz
cmp
and
call
out
push
enter
(bad)
(bad)
jmp
pop
(bad)
or
jb
(bad)
or
adc
rcl
cmps
dec
aaa
cld
(bad)
(bad)
mov
test
ds
inc
loope
fst
xchg
jno
adc
(bad)
(bad)
(bad)
jmp
shr
repz
pop
mov
call
jne
push
aas
(bad)
cmp
sub
(bad)
dec
gs
pop
inc
shl
add
addr16
(bad)
push
dec
mov
in
sahf
cmp
(bad)
inc
mov
call
popa
cmp
out
add
mov
pop
jecxz
cmps
scas
fbld
xor
(bad)
(bad)
inc
push
jmp
(bad)
and
xlat
fcmovnu
lahf
dec
inc
(bad)
je
adc
jnp
and
(bad)
(bad)
(bad)
push
in
and
or
sbb
leave
push
add
enter
dec
add
imul
dec
fldcw
ret
cmp
daa
sub
and
lea
in
call
jge
imul
rcl
neg
sub
mov
cmp
dec
xchg
dec
xchg
(bad)
dec
int3
and
mov
fnsave
scas
cli
push
(bad)
jmp
retf
jo
jle
xor
pop
fs
(bad)
mov
cli
push
jb
dec
lock
jp
mov
jbe
xor
(bad)
rcr
in
(bad)
ds
inc
pop
rol
mov
push
mov
ins
jge
iret
repz
(bad)
mov
inc
pushf
mov
xor
inc
sysenter
or
mov
xchg
call
(bad)
inc
out
out
mov
and
add
mov
ud1
(bad)
push
rcr
cmp
xchg
jne
mov
aas
jmp
push
jnp
sbb
cmp
call
cmp
pop
cmp
cmp
es
in
in
jg
cmp
fwait
call
jmp
and
jne
pop
mov
aas
inc
lods
retf
pop
inc
into
inc
xor
(bad)
cmp
inc
jbe
xchg
or
dec
and
mov
test
call
inc
imul
scas
cli
(bad)
call
sahf
and
std
push
scas
rcr
aad
mov
jg
mov
and
(bad)
(bad)
(bad)
dec
movs
push
fcmovne
sbb
inc
adc
aam
mov
xor
daa
lds
mov
mov
mov
adc
je
ss
pop
cmps
xchg
or
jecxz
jnp
std
(bad)
(bad)
push
clc
dec
out
and
and
mov
stos
or
cmps
clc
push
sti
enter
sbb
ja
push
sbb
mov
outs
pop
mov
dec
sbb
xchg
(bad)
(bad)
(bad)
push
and
inc
sbb
or
sbb
jne
xchg
adc
push
jge
push
cdq
ror
cli
sub
and
mov
aaa
pushf
shl
pop
push
adc
loope
or
jmp
jmp
push
add
push
cmp
shr
add
mov
mov
ret
(bad)
(bad)
(bad)
(bad)
call
mov
push
or
stos
sub
xchg
fdiv
test
call
mov
xchg
xchg
outs
call
push
pop
inc
push
jmp
mov
stc
das
adc
inc
inc
jg
(bad)
inc
pop
shr
and
aad
dec
lahf
jge
sub
and
cli
inc
adc
cmp
outs
clc
(bad)
inc
bound
mov
(bad)
(bad)
call
mov
cmp
sub
(bad)
(bad)
(bad)
call
jae
cmc
dec
jecxz
aaa
inc
add
adc
dec
(bad)
jno
lods
jnp
add
pusha
sbb
inc
cwde
fidivr
(bad)
sti
retf
inc
out
dec
(bad)
dec
and
arpl
and
aaa
std
adc
xor
adc
sub
jp
adc
in
std
(bad)
call
mov
loope
daa
(bad)
(bad)
outs
int3
retfw
std
cmp
xchg
ds
in
retf
(bad)
push
pop
fst
cmp
loopne
sar
cmps
push
out
push
xchg
jmp
pop
jmp
(bad)
dec
sti
jmp
sti
or
sub
movs
push
cdq
adc
xchg
icebp
adc
cs
xor
jge
jmp
sub
sbb
push
push
cmp
(bad)
jmp
push
jne
mov
mov
pop
into
push
xchg
push
or
call
inc
sub
jl
int3
retf
mov
pop
cmp
jp
push
and
fbld
pop
xchg
cmp
jnp
xlat
xchg
(bad)
push
fstp
in
cli
mov
push
jg
scas
mov
popa
and
pop
add
add
pop
test
inc
or
sub
inc
fild
pop
push
loope
sub
pop
(bad)
cld
mov
mov
cmp
(bad)
(bad)
fcomip
or
xchg
or
xchg
or
mov
cdq
in
jmp
repnz
sub
loopne
sti
sub
pop
and
pop
xchg
mov
pop
ficomp
(bad)
(bad)
(bad)
jmp
adc
xchg
loop
cmp
ja
mov
aas
or
test
dec
ins
lds
(bad)
call
and
pop
pop
cmp
cmps
div
ins
mov
sub
sbb
and
cld
(bad)
jmp
rcr
test
fsubr
ja
icebp
loope
mov
dec
test
cmp
(bad)
dec
inc
cdq
and
sar
je
(bad)
xor
iret
and
mov
sbb
call
stc
nop
(bad)
fcom
mov
popf
xchg
add
xor
dec
sbb
dec
sti
lock
sbb
or
clc
dec
retf
cs
push
dec
out
(bad)
(bad)
(bad)
fisttp
pop
std
mov
mov
push
cli
jo
mov
lock
bound
(bad)
(bad)
call
std
mov
pop
dec
pop
fistp
out
and
push
data16
sub
call
xor
dec
pop
adc
enter
or
enter
(bad)
ret
ret
mov
(bad)
dec
push
dec
loopne
cs
bound
inc
movs
mov
pop
aas
jle
xchg
add
call
inc
movs
add
xchg
sbb
pop
mov
dec
scas
or
mov
(bad)
call
leave
aaa
lahf
adc
sbb
xor
xchg
pop
mov
push
shl
(bad)
(bad)
(bad)
(bad)
call
addr16
xlat
mov
test
xor
scas
idiv
mov
(bad)
(bad)
call
scas
in
dec
sub
push
push
stc
stos
mov
inc
or
gs
push
mov
test
(bad)
dec
das
and
mov
inc
mov
in
idiv
and
cmps
cdq
daa
and
out
push
xor
dec
div
jp
cmp
frstpm(287
and
jo
push
(bad)
push
cmps
inc
mov
(bad)
aad
jno
cmp
xor
movs
test
lds
push
inc
(bad)
and
cmps
push
add
cmp
enter
xchg
fbstp
cmp
(bad)
(bad)
(bad)
dec
sbb
movs
xchg
push
retf
lods
mov
inc
ins
std
out
mov
or
dec
sub
sar
(bad)
(bad)
inc
add
dec
jb
pop
repnz
je
inc
into
data16
cmp
sbb
fild
lock
(bad)
dec
jbe
out
and
pop
test
add
movs
inc
cmp
jmp
stc
(bad)
(bad)
call
cwde
icebp
test
lds
pop
loope
stc
addr16
sbb
lock
ins
pop
jecxz
sub
push
(bad)
(bad)
(bad)
dec
sahf
(bad)
mov
xor
dec
and
lock
push
mov
cmp
loop
aaa
sub
(bad)
(bad)
inc
sub
jl
jle
mov
cmp
inc
mov
sub
outs
sbb
inc
xchg
popf
dec
push
sub
(bad)
jg
(bad)
out
pop
scas
add
nop
xchg
cmp
push
ror
push
aam
(bad)
(bad)
in
daa
inc
and
lock
cmc
push
mov
or
aas
and
mov
push
xchg
jmp
pushf
sub
or
or
cmp
ins
mov
push
add
push
mov
retf
retf
pusha
and
xlat
stos
std
(bad)
(bad)
push
mov
sbb
or
es
retf
lea
fimul
ins
mov
std
das
int3
dec
cli
scas
push
hlt
(bad)
(bad)
(bad)
mov
xor
stos
push
js
jl
lds
pop
ficomp
mov
jle
push
aad
(bad)
push
mov
dec
hlt
xchg
cli
int
push
test
mov
fscale
xchg
adc
outs
sbb
(bad)
(bad)
jg
and
ja
xchg
(bad)
cdq
jmp
enter
aas
in
xor
(bad)
mov
mov
(bad)
push
cld
rol
inc
sti
mov
add
out
(bad)
repnz
or
mov
(bad)
(bad)
dec
add
or
(bad)
cmp
pop
mov
mov
xchg
and
push
adc
xor
(bad)
(bad)
(bad)
mov
mov
xor
gs
mov
out
mov
movs
shr
iret
aad
cld
scas
(bad)
(bad)
(bad)
inc
hlt
pop
mov
dec
int3
pop
dec
mov
movs
jns
enter
adc
inc
fst
sbb
(bad)
inc
jne
jge
dec
sar
dec
jmp
pop
and
jno
test
dec
(bad)
call
mov
and
and
push
test
mov
std
push
push
sbb
(bad)
(bad)
(bad)
(bad)
jmp
shr
ret
int
mov
outs
and
sti
aaa
and
mov
mov
xor
repz
or
dec
lea
cmp
jnp
loop
repnz
jmp
push
rcr
or
mov
jo
(bad)
(bad)
(bad)
call
adc
add
cmp
out
(bad)
outs
or
lds
daa
mov
and
fbld
(bad)
jg
fcom
push
clc
lods
xlat
out
and
mov
movs
mov
sub
(bad)
push
add
bound
push
mov
push
test
adc
pop
ret
dec
jb
outs
cli
jmp
mov
push
ror
in
and
inc
push
jae
mov
mov
(bad)
jg
dec
inc
cwde
push
sub
mov
into
xchg
in
mov
je
pop
(bad)
(bad)
(bad)
jmp
call
aas
idiv
call
(bad)
push
cs
scas
mov
sub
out
arpl
lods
(bad)
(bad)
(bad)
call
rcl
icebp
xor
sub
imul
jp
xchg
mov
sub
mov
sti
cmp
(bad)
(bad)
jns
(bad)
jle
pop
aad
sub
jno
pop
jo
lods
or
pop
inc
(bad)
pop
mov
out
pushf
add
adc
dec
adc
dec
cmp
jne
add
(bad)
(bad)
jmp
xor
je
test
push
sbb
mov
pop
fcomp
jge
(bad)
dec
mov
pop
mov
icebp
and
call
mov
pop
shl
stos
xor
mov
add
inc
jg
(bad)
(bad)
(bad)
call
or
and
push
pop
or
jmp
rcl
sbb
push
adc
jmp
out
sub
sub
popa
mov
mov
pop
inc
mov
cmps
cmp
(bad)
(bad)
call
pop
push
call
test
repnz
mov
(bad)
(bad)
(bad)
mov
inc
adc
push
dec
mov
push
shl
mov
cmps
fldcw
xchg
sti
(bad)
(bad)
(bad)
jmp
stos
cmps
leave
sar
in
push
push
sub
mov
out
repnz
in
inc
scas
cmc
call
cld
dec
test
iret
inc
cmp
cmps
or
scas
out
mov
in
das
js
(bad)
mov
fsubrp
sub
cmp
add
push
jg
das
rol
adc
mov
lock
(bad)
push
or
fidivr
xchg
imul
out
push
sub
lahf
jmp
call
xchg
outs
mov
sbb
mov
(bad)
scas
fs
pop
movs
push
mov
(bad)
jp
mov
(bad)
ja
pop
repz
outs
xchg
lea
and
push
into
jo
mov
pop
sbb
movs
in
jp
out
test
cmps
mov
sub
mov
repnz
dec
out
das
into
pop
(bad)
jmp
test
pop
fld
mov
fucom
aam
std
jg
jg
not
pop
mov
out
dec
sbb
sub
(bad)
(bad)
(bad)
jmp
std
mov
pop
scas
mov
mov
popf
jb
jbe
cmp
movs
stos
inc
popf
jns
and
(bad)
dec
retf
inc
push
mov
test
sbb
and
xchg
sbb
(bad)
(bad)
(bad)
dec
rcl
mov
jo
nop
fist
pop
loope
(bad)
add
jecxz
and
int3
mov
mov
(bad)
(bad)
inc
lahf
imul
es
icebp
mov
into
lods
cdq
add
mov
fdiv
(bad)
(bad)
jmp
mov
cmp
and
adc
inc
sbb
push
push
xchg
cmp
fs
cmp
(bad)
push
hlt
mov
add
les
(bad)
fild
adc
addr16
mov
sub
jmp
xchg
outs
adc
fcmovb
outs
into
sbb
xchg
call
jmp
mov
push
inc
mov
adc
xor
pop
mov
dec
jmp
push
(bad)
(bad)
(bad)
jmp
hlt
mov
sbb
jnp
loop
mov
pop
pop
loope
jmp
sub
(bad)
(bad)
mov
or
or
jmp
imul
jle
jg
jmp
test
jae
js
pop
or
ss
mov
rcl
aaa
(bad)
push
mov
in
cmp
push
shr
lock
push
fidivr
mov
xor
jl
mov
clc
mov
xor
mov
fsubr
cli
fcmovnbe
test
outs
stos
call
jmp
mov
or
fisub
cmp
(bad)
sub
mov
push
(bad)
(bad)
(bad)
fnstsw
js
xchg
loope
sbb
out
and
setp
mov
out
jecxz
push
(bad)
jg
imul
fs
jecxz
lea
(bad)
(bad)
(bad)
jmp
push
in
pop
fld
aas
push
sub
push
data16
and
lock
pop
jle
(bad)
(bad)
(bad)
(bad)
jle
fsubr
sbb
xor
scas
xor
jl
mov
shl
jg
fwait
cli
call
test
pop
test
js
(bad)
(bad)
(bad)
jmp
in
fld
cmp
sbb
(bad)
pop
int3
push
sub
xchg
cmp
push
add
repnz
jno
(bad)
(bad)
(bad)
call
enter
adc
dec
out
nop
mov
ret
shl
ja
adc
(bad)
jmp
gs
dec
(bad)
sbb
jecxz
cmps
add
nop
mov
pop
(bad)
(bad)
(bad)
jmp
dec
in
cmp
ror
call
retf
mov
movs
push
aaa
loope
js
mov
call
std
jmp
add
pushf
push
repz
fimul
push
inc
inc
mov
inc
inc
cmc
(bad)
(bad)
fbld
xor
out
out
push
out
enter
(bad)
mov
adc
shr
pop
scas
add
clc
jg
(bad)
jmp
retf
enter
jge
in
jo
xor
loope
inc
fisttp
sub
or
(bad)
(bad)
jmp
pop
ficomp
or
sbb
pop
lea
sbb
inc
imul
(bad)
inc
sub
adc
xchg
mov
outs
clc
mov
mov
push
retf
xor
jmp
(bad)
push
push
jae
mov
mov
mov
jbe
adc
(bad)
mov
retf
xchg
pop
jo
ins
mov
sti
or
mov
mov
call
ins
pusha
xor
xlat
mov
ret
cmc
les
sbb
or
jb
in
stc
add
xchg
daa
mov
and
rcr
add
popf
xor
xchg
jp
sbb
mov
(bad)
push
push
mov
test
retf
push
sub
nop
or
pusha
add
pusha
aad
mov
or
(bad)
(bad)
inc
mov
stos
xchg
mov
cmp
test
sbb
lods
mov
mov
dec
jmp
shl
sub
mov
and
enter
fs
xchg
sub
pop
(bad)
(bad)
(bad)
call
push
xor
fcomp
adc
xor
add
adc
sbb
dec
xor
es
aam
into
ror
(bad)
call
push
xor
xor
mov
sub
cmp
cmp
(bad)
(bad)
js
bound
inc
adc
ds
popa
jnp
test
sub
sub
sbb
push
hlt
test
(bad)
(bad)
call
mov
and
mov
jae
xchg
mov
retf
push
sbb
push
push
xlat
lock
and
adc
mov
(bad)
out
sub
mov
cmp
and
loope
movs
mov
cmp
call
imul
mov
or
out
stos
adc
push
mov
push
inc
lods
inc
fwait
jbe
adc
mov
add
imul
or
sbb
(bad)
jg
adc
jl
test
nop
lods
xchg
cmps
add
idiv
outs
add
inc
(bad)
dec
lock
out
sub
pop
jg
jl
scas
inc
(bad)
fwait
dec
out
mov
add
(bad)
(bad)
(bad)
call
(bad)
pop
push
mov
cmp
inc
in
add
xchg
push
pop
out
or
leave
fdivrp
(bad)
(bad)
push
fdivrp
xchg
cs
and
arpl
out
neg
ja
inc
test
(bad)
rol
add
stc
aas
cmp
push
sub
mov
jo
xor
popa
fidivr
cmps
mov
call
loopne
push
fstp
xor
fcmovnbe
imul
jecxz
xchg
movs
jno
inc
mov
(bad)
ins
inc
shl
push
push
pusha
pop
and
fimul
cmc
(bad)
(bad)
jmp
test
mov
daa
xlat
xchg
or
push
ret
push
(bad)
(bad)
mov
and
jmp
xor
mov
out
aam
idiv
jmp
add
test
cmps
aad
call
stos
in
mov
jb
stos
sbb
lods
push
in
(bad)
push
adc
dec
daa
out
nop
xchg
adc
out
xlat
xor
rol
xchg
jge
test
outs
ror
xor
xor
sub
arpl
(bad)
mov
std
push
jns
iret
(bad)
in
rol
repnz
xchg
xchg
inc
sbb
(bad)
push
je
mov
xor
je
jne
(bad)
(bad)
inc
aas
(bad)
push
cmp
xor
dec
sub
or
(bad)
iret
popa
sub
mov
cmps
das
(bad)
(bad)
(bad)
push
repz
or
repnz
inc
xor
cmp
xlat
jmp
(bad)
(bad)
(bad)
push
loopne
mov
ja
inc
lock
pusha
push
neg
or
mov
mov
mov
adc
jmp
call
cld
push
outs
sbb
(bad)
(bad)
dec
test
cmp
rcl
and
rcr
jl
or
data16
shl
mov
(bad)
jmp
(bad)
(bad)
lods
mov
ficomp
int3
mov
xor
pop
xchg
jle
retf
int3
xchg
cmc
in
adc
test
call
cld
inc
int3
xor
daa
imul
cmp
jl
fcom
xchg
push
sar
sub
cs
dec
jmp
pop
pop
mov
cmp
dec
sbb
push
or
adc
adc
(bad)
(bad)
call
stc
dec
adc
jl
jl
sub
loopne
mov
xor
in
lock
dec
lahf
mov
xor
jb
mul
lods
sti
sub
and
pop
xchg
lods
xor
(bad)
(bad)
jg
adc
daa
xchg
xchg
mov
not
gs
push
dec
psubb
mov
(bad)
dec
test
ins
enter
cwde
nop
mov
jp
sbb
(bad)
pusha
jne
cmc
(bad)
sub
pop
push
inc
mov
inc
cdq
lock
stos
das
cld
xchg
pop
cmp
mov
sbb
dec
cmp
movs
rcr
enter
sub
retf
out
xchg
mov
sar
adc
jbe
stos
mov
cld
(bad)
(bad)
jp
addr16
lar
jo
sub
push
mov
push
jl
xor
(bad)
(bad)
call
xchg
pushw
xor
cdq
xor
jecxz
mov
cmps
fld
mov
js
ss
mov
(bad)
(bad)
jg
iret
call
push
mov
jae
xor
jbe
lods
sahf
gs
lds
inc
fcom
mov
popa
add
pop
stos
or
fst
jo
imul
lahf
cmps
sbb
(bad)
mov
lea
push
and
jmp
aad
lock
ds
inc
xchg
cmps
(bad)
dec
(bad)
and
jae
bound
div
es
adc
or
or
sub
cli
pop
push
xchg
push
ds
mov
aaa
(bad)
(bad)
(bad)
call
mov
rcr
int3
mov
aaa
in
in
xor
addr16
inc
cdq
sbb
(bad)
(bad)
inc
sti
in
mov
fstp
js
dec
fs
and
retf
push
std
lea
dec
inc
(bad)
mov
fdivr
mov
sub
mov
dec
pop
test
(bad)
(bad)
call
nop
jle
sbb
adc
imul
and
inc
and
add
push
bound
(bad)
(bad)
(bad)
(bad)
fist
aad
inc
in
jl
test
test
iret
(bad)
jae
push
add
jmp
bnd
xchg
adc
or
adc
jb
or
cmp
xor
in
mov
mov
(bad)
call
push
adc
inc
sbb
push
(bad)
movs
mov
push
inc
sbb
loop
jp
jbe
or
(bad)
(bad)
(bad)
cli
mov
jnp
retf
call
ret
fsub
test
sub
clc
jmp
shl
stos
xor
jbe
ret
adc
(bad)
(bad)
(bad)
mov
(bad)
jp
leave
sub
jecxz
(bad)
es
xor
mov
(bad)
dec
mov
adc
clc
inc
nop
mov
push
and
ret
adc
data16
(bad)
(bad)
inc
int
leave
xchg
push
mov
mov
sbb
ins
mov
sahf
stc
out
loop
out
cli
dec
xchg
stos
jb
dec
xchg
and
not
ret
in
add
in
ss
pop
(bad)
(bad)
jg
test
mov
mov
out
mov
cli
dec
jle
adc
(bad)
(bad)
jmp
lods
push
xchg
push
leave
jecxz
push
sti
(bad)
retf
les
mov
clc
push
or
fild
xchg
mov
inc
(bad)
(bad)
push
push
jl
or
push
pop
rcl
or
xor
ret
mov
outs
cli
call
sbb
(bad)
mov
test
mov
lock
(bad)
(bad)
(bad)
push
and
add
pop
dec
dec
test
cmc
adc
sub
jmp
fdivr
(bad)
(bad)
call
fild
pop
push
sbb
jge
int3
iret
dec
loope
and
in
inc
push
aas
jne
(bad)
mov
in
mov
xor
push
xchg
in
call
dec
add
je
and
(bad)
(bad)
(bad)
(bad)
call
xor
xor
btc
popf
xchg
out
hlt
movs
pop
mov
add
(bad)
(bad)
inc
sti
mov
add
lea
std
mov
jg
jmp
imul
sub
mov
inc
push
not
es
(bad)
call
mov
jne
dec
add
add
add
push
clc
(bad)
(bad)
push
dec
push
movs
loopne
mov
imul
cdq
jmp
or
push
in
enter
push
xor
cmp
loopne
sbb
clc
dec
dec
fistp
leave
dec
(bad)
(bad)
jmp
pusha
adc
js
(bad)
cwde
mov
scas
fbld
mov
cmps
fcomip
push
idiv
stos
(bad)
dec
cmp
fild
xchg
push
ror
out
push
cwde
fist
(bad)
jmp
call
inc
jbe
push
and
stos
ror
(bad)
(bad)
push
loopne
ja
fnstenv
or
(bad)
leave
popf
and
mov
pop
pop
mov
or
jno
(bad)
cld
adc
xchg
call
jmp
(bad)
(bad)
call
das
jmp
idiv
into
daa
gs
mov
ins
inc
push
mov
popf
push
(bad)
std
(bad)
(bad)
(bad)
dec
loop
jge
jbe
ret
and
fcom
lock
cdq
or
rcr
jle
push
mov
fwait
call
aas
push
pop
cdq
jae
into
and
popa
mov
jmp
out
int3
mov
jle
dec
das
ins
lods
fwait
popa
loope
xchg
pusha
pop
or
mov
stos
(bad)
dec
jnp
adc
repz
dec
(bad)
push
dec
sub
mov
(bad)
mov
and
or
pop
jns
sbb
popf
or
and
inc
(bad)
fwait
and
(bad)
(bad)
(bad)
inc
out
outs
push
outs
lds
dec
jp
adc
shl
clc
jmp
cmp
outs
(bad)
(bad)
(bad)
dec
xor
in
jge
add
out
cmp
mov
adc
xor
outs
(bad)
(bad)
(bad)
(bad)
cmp
dec
cmp
mov
ins
jne
fisttp
mov
inc
and
ins
push
outs
(bad)
(bad)
(bad)
jmp
mov
xchg
cmp
push
loop
fs
cmps
shl
sbb
jecxz
xlat
xchg
scas
(bad)
and
and
push
dec
test
ins
adc
(bad)
fbld
(bad)
lds
test
out
and
fld
xor
xchg
(bad)
out
push
test
pushf
sbb
xor
push
jge
lea
jmp
imul
hlt
xor
mov
adc
fsubr
call
(bad)
(bad)
push
mov
das
add
add
xchg
frstor
test
shl
mov
(bad)
(bad)
(bad)
dec
mov
dec
pop
popa
lock
ja
cwde
int
jmp
repz
mov
push
adc
(bad)
(bad)
(bad)
(bad)
jge
rol
mov
dec
inc
in
pop
push
out
mov
ss
mov
aas
dec
ja
rcl
lds
stc
jnp
jmp
js
push
xchg
test
mov
push
popf
dec
sbb
xor
inc
or
cmp
mov
ins
jo
movs
cmp
clc
cdq
test
cli
cmp
adc
mov
daa
movs
sbb
or
mov
ja
(bad)
push
jo
push
push
and
add
push
jg
mov
das
inc
push
mov
(bad)
pop
in
(bad)
(bad)
call
sbb
fs
ret
repz
pop
mov
and
jbe
(bad)
push
std
and
dec
rcl
pop
inc
mov
shr
xlat
sub
jecxz
retf
(bad)
call
icebp
cmc
adc
out
pop
pop
movs
cmps
test
sub
stos
(bad)
inc
outs
loopne
sbb
xor
out
and
xchg
push
iret
jmp
cld
(bad)
(bad)
(bad)
dec
inc
jp
mov
aaa
push
imul
je
or
(bad)
fdivr
rcr
das
cli
(bad)
jmp
dec
jbe
jmp
(bad)
cli
jne
fninit
mov
lods
add
mov
mov
jg
outs
adc
ror
inc
int
pop
dec
pop
jp
(bad)
into
sub
in
clc
(bad)
(bad)
fidiv
popa
push
inc
add
mov
push
cmp
xor
sti
sar
jo
and
(bad)
call
xor
stc
int
xchg
aad
fsubr
push
hlt
cmp
jg
cld
call
(bad)
(bad)
loop
stos
dec
xor
xor
(bad)
inc
xor
nop
xchg
int
ficomp
mov
cmp
xchg
repnz
(bad)
jmp
lea
stos
movs
sbb
push
mov
mov
adc
fnsave
(bad)
(bad)
(bad)
push
jno
aaa
inc
(bad)
sbb
inc
jno
jp
cmps
cmp
inc
aaa
cmp
sbb
xchg
(bad)
inc
xchg
mov
nop
cmps
xchg
adc
sbb
mov
imul
sbb
or
(bad)
(bad)
(bad)
cmp
pushf
jae
(bad)
je
inc
jmp
fdiv
mov
movs
popf
fisub
(bad)
inc
jo
inc
(bad)
dec
cmp
jae
xchg
mov
or
mov
push
pop
mov
cmp
es
mov
enter
(bad)
jmp
cmps
mov
in
dec
mov
imul
scas
je
mov
int3
retf
sbb
xor
(bad)
(bad)
call
sbb
std
lods
or
outs
push
mov
sbb
(bad)
(bad)
(bad)
(bad)
dec
fldenv
aas
movlps
mov
in
inc
out
dec
repnz
(bad)
cld
(bad)
(bad)
call
xchg
aaa
lahf
pop
sbb
inc
test
adc
pusha
call
or
push
push
ins
(bad)
inc
sub
dec
fld
bound
jnp
cmps
(bad)
inc
sub
push
add
jbe
popf
(bad)
(bad)
mov
push
jecxz
aam
mov
adc
dec
jmp
cli
(bad)
fdiv
mov
aas
std
js
adc
mov
movaps
sahf
mov
xchg
xchg
es
aaa
(bad)
fcomip
(bad)
(bad)
arpl
call
jbe
mov
icebp
mov
xchg
cwde
sbb
cdq
push
sbb
xchg
add
dec
pop
fidivr
out
test
cmp
shl
mov
mov
jae
fnsave
xor
out
xor
retf
add
(bad)
dec
mov
or
xchg
dec
inc
adc
push
ja
(bad)
(bad)
(bad)
jmp
push
out
es
xchg
sub
mov
push
mov
xchg
cwde
or
(bad)
inc
test
mov
dec
cdq
enter
daa
jle
mov
dec
add
pop
scas
or
add
mov
in
(bad)
dec
inc
jnp
jmp
in
and
pusha
aaa
movs
add
(bad)
(bad)
fild
dec
sbb
in
(bad)
out
or
xor
inc
adc
(bad)
inc
rol
lahf
push
and
dec
repnz
mov
jecxz
std
(bad)
(bad)
(bad)
cld
fwait
daa
sbb
or
or
inc
sbb
jnp
xchg
mov
(bad)
push
mov
mov
loopne
ja
sub
mov
push
and
mov
mov
cmp
(bad)
(bad)
jmp
bound
lea
fwait
lds
sahf
ins
outs
jno
ins
rcr
cmp
sar
fisttp
inc
(bad)
(bad)
(bad)
jmp
clc
push
shl
and
dec
add
mov
pop
sbb
mov
test
mov
outs
push
jg
xchg
mov
aam
shl
aam
iret
into
and
(bad)
jnp
fcomp
cs
push
(bad)
call
sbb
push
jp
dec
pop
cmp
clc
fidiv
dec
xchg
es
retf
push
(bad)
(bad)
(bad)
(bad)
call
sar
fisubr
sbb
or
cmp
lods
jne
test
test
(bad)
(bad)
(bad)
jg
mov
in
jne
aam
fwait
gs
adc
inc
in
inc
scas
int3
and
ins
pop
mov
call
push
sbb
sub
pushf
push
cmp
jb
clc
ror
mov
into
pop
shr
cli
add
(bad)
jg
sbb
and
test
xchg
call
(bad)
aam
cld
jg
out
call
fnstenv
int
scas
or
cli
jae
imul
pop
pop
add
icebp
mov
or
fdecstp
gs
aad
and
sub
scas
movs
es
(bad)
(bad)
call
shl
rcl
inc
shl
dec
lea
lahf
sub
inc
int
aad
mov
lods
int3
mov
cmps
cli
push
addr16
adc
mov
lods
repz
stc
sahf
dec
in
(bad)
mov
and
(bad)
mov
call
inc
mov
ficom
mov
mov
mov
cwde
and
(bad)
(bad)
jmp
lods
in
jmp
fist
mov
out
out
dec
jle
in
mov
and
into
(bad)
(bad)
(bad)
(bad)
mov
inc
ja
jecxz
dec
xchg
add
js
mov
inc
ins
xor
(bad)
(bad)
(bad)
(bad)
aas
call
test
jg
rcr
mov
rcl
adc
jmp
fcomi
xchg
addr16
push
ds
lods
into
out
arpl
(bad)
(bad)
call
adc
jae
xchg
ficomp
fsub
(bad)
xor
imul
mov
mov
dec
fdivr
jbe
jge
imul
rcr
adc
(bad)
hlt
jo
aam
ficomp
jg
(bad)
loope
sub
mov
movs
gs
mov
stos
or
mov
(bad)
lds
or
or
aaa
jge
ins
cs
scas
jp
imul
xor
mul
sbb
bound
cmps
xchg
jg
es
dec
test
and
push
jecxz
push
shl
jo
mov
(bad)
call
jmp
ret
jp
pop
test
jle
pop
nop
xchg
adc
mov
imul
jmp
sub
or
aaa
stc
mov
stos
in
mov
jmp
or
pop
popa
js
daa
sbb
mov
jge
(bad)
(bad)
(bad)
push
xchg
les
xchg
and
jge
xchg
xchg
pusha
mov
lods
pop
add
inc
rcl
jg
mov
mov
sti
in
cmp
jge
aam
inc
rcr
and
inc
mov
pop
mov
xor
retf
sbb
cmc
jle
jb
(bad)
(bad)
(bad)
(bad)
jg
cmp
lea
lods
retf
cmp
lds
mov
inc
xchg
or
movs
mov
(bad)
dec
retf
xchg
out
or
jle
or
adc
sbb
xchg
sar
(bad)
(bad)
(bad)
jmp
pop
jb
ja
pusha
call
std
add
and
mov
aas
fdivr
(bad)
(bad)
jmp
(bad)
fnstcw
int
retf
and
jmp
jl
xchg
adc
sbb
fmul
inc
test
(bad)
(bad)
call
(bad)
xchg
pop
(bad)
xchg
push
sbb
dec
push
rcl
cmp
(bad)
(bad)
mov
push
and
cdq
test
js
test
test
cmps
push
stos
cmp
call
movs
cld
into
clts
mov
(bad)
push
xor
lahf
jle
adc
hlt
and
(bad)
jmp
push
das
mov
or
cmps
popa
sahf
inc
jae
dec
adc
pop
das
mov
retf
hlt
inc
fidivr
cmps
xchg
fmulp
xchg
(bad)
lock
inc
pop
clc
or
sahf
mov
cmc
bound
push
cld
(bad)
fcomip
jmp
rcl
mov
call
push
or
(bad)
(bad)
(bad)
call
jnp
ja
cmps
jmp
inc
cmp
popf
lods
mov
mov
inc
or
xlat
ffreep
(bad)
dec
loopne
pop
lahf
movs
mov
aam
adc
jmp
lea
and
retf
jg
pop
(bad)
(bad)
(bad)
jmp
addr16
sahf
push
enter
lods
xor
cdq
cmc
or
xchg
and
sbb
idiv
(bad)
mov
pop
data16
pop
pop
cmp
test
push
iret
xchg
fisubr
(bad)
mov
icebp
sub
test
push
pop
rol
cmps
xor
int
jmp
sbb
adc
addr16
(bad)
mov
push
sbb
mov
xor
(bad)
and
das
ss
(bad)
(bad)
call
push
loop
pusha
icebp
mov
scas
cmps
gs
fwait
data16
mov
mov
jnp
(bad)
(bad)
(bad)
out
jmp
inc
dec
inc
iret
or
loopne
rol
gs
mov
(bad)
xor
(bad)
inc
jg
cmp
dec
outs
cmp
add
and
gs
dec
jg
ret
(bad)
(bad)
(bad)
jmp
aaa
mov
ins
ja
sti
mov
sub
mov
jl
push
jle
push
das
add
jmp
(bad)
pushf
dec
cmp
sbb
cmp
adc
retf
and
sbb
jnp
repnz
(bad)
(bad)
(bad)
push
arpl
xchg
repnz
std
call
mov
mov
sub
(bad)
jmp
cli
xchg
pop
inc
movs
sbb
push
popa
and
fs
js
pop
ss
(bad)
sbb
inc
jl
(bad)
(bad)
jmp
sbb
jbe
test
mov
add
add
(bad)
jmp
pop
scas
sbb
push
enter
rcr
(bad)
aaa
or
mov
fadd
clc
call
out
push
fidiv
push
inc
(bad)
inc
stc
fdivr
ficom
mov
(bad)
(bad)
(bad)
jmp
cmc
je
imul
xor
adc
cli
dec
mov
fsub
cld
mov
pop
in
enter
jp
xchg
mov
or
outs
fs
jge
pop
aad
cmp
or
inc
mov
fldcw
pop
mov
jg
sub
adc
xor
xchg
(bad)
(bad)
(bad)
jmp
inc
inc
js
pop
jb
jo
bound
in
jo
pop
jae
in
icebp
jns
cmp
push
cld
scas
dec
add
and
icebp
icebp
add
pop
std
cmp
(bad)
jmp
xchg
mov
jmp
shl
jg
std
push
pusha
add
sbb
jg
add
in
dec
les
(bad)
(bad)
(bad)
call
loopne
loope
xor
int3
cmp
cdq
scas
push
ret
rol
push
jnp
sub
mov
jb
inc
sub
not
lds
and
mov
add
repnz
(bad)
call
cmp
aad
jo
xor
push
movs
lahf
(bad)
cmp
xor
push
(bad)
(bad)
cmp
aam
fdiv
ds
bound
call
iret
jnp
movs
adc
mov
mov
adc
sbb
mov
aas
lahf
dec
cmps
aaa
(bad)
ja
dec
fs
rcl
sbb
lahf
xor
sub
pop
sub
pop
in
adc
cld
mov
sub
call
or
xchg
jnp
xchg
pop
inc
div
(bad)
scas
loop
mov
stc
or
leave
inc
ds
(bad)
(bad)
(bad)
(bad)
std
adc
in
xchg
mov
pop
cmp
(bad)
shr
adc
(bad)
(bad)
(bad)
push
adc
mov
fucomp
cdq
push
aam
pop
mov
sbb
mov
call
adc
adc
adc
loopne
jns
(bad)
(bad)
mov
sti
add
sbb
jmp
sbb
mov
jbe
jmp
push
dec
mov
jmp
add
jle
mov
clc
fcomp
jo
and
jns
icebp
mov
test
mov
fist
mov
pop
jmp
outs
movs
test
lods
dec
out
cmps
out
pop
mov
popa
fsubr
pop
inc
fst
(bad)
(bad)
(bad)
in
popf
push
add
popf
ins
out
dec
into
int
outs
or
shl
and
maxps
std
(bad)
(bad)
(bad)
call
push
xchg
mov
and
fadd
call
xchg
sbb
dec
in
retf
xchg
(bad)
fild
test
cdq
in
call
xchg
cld
sub
(bad)
call
in
push
hlt
mov
fs
mov
mov
mov
lock
add
fimul
sub
test
jnp
or
cli
ss
shl
push
pop
cmp
dec
and
pop
xchg
adc
out
push
jo
xlat
jge
or
sti
fcomp
and
or
movs
jecxz
(bad)
(bad)
dec
xchg
cmp
and
pop
pop
jmp
adc
xchg
(bad)
jg
inc
adc
xchg
(bad)
imul
(bad)
mov
sub
(bad)
jmp
fld
xor
test
fbstp
je
push
cwde
add
retf
ja
sub
mov
in
(bad)
push
and
jl
out
loop
adc
clc
mov
pop
jae
ss
jmp
add
fnstenv
xor
cmp
dec
(bad)
(bad)
(bad)
call
sbb
jae
test
pop
out
sbb
out
shr
mov
cwde
clc
or
mov
(bad)
(bad)
jmp
push
jecxz
or
mov
inc
mov
and
sbb
retf
pop
mov
add
jno
jge
mov
daa
xchg
repz
add
or
or
mov
and
(bad)
(bad)
(bad)
cmp
div
cmp
scas
inc
stc
mov
mov
out
test
dec
jmp
(bad)
call
add
add
cdq
jl
ficom
scas
aad
sbb
jmp
pop
(bad)
aam
jne
mov
inc
cdq
fstp
scas
cmp
(bad)
cmp
repz
pop
cld
pop
xchg
fxch
fsubr
gs
push
sahf
pop
shr
jmp
push
push
loop
mov
jae
sbb
adc
gs
out
cli
(bad)
jmp
jbe
cmp
bound
scas
push
sbb
dec
jnp
pop
sbb
movs
mov
(bad)
(bad)
jmp
enter
inc
or
jbe
xor
pop
hlt
out
xor
loopne
cmp
into
push
(bad)
(bad)
call
movs
enter
xchg
pop
out
ss
out
out
addr16
imul
ss
inc
pop
sbb
jae
retf
daa
ins
(bad)
jbe
cmps
jmp
lea
(bad)
(bad)
(bad)
in
push
dec
xor
cld
push
cmps
sahf
inc
push
fild
dec
push
iret
cmp
ins
imul
cmp
mov
(bad)
(bad)
(bad)
jmp
jl
dec
in
adc
or
inc
mov
dec
xchg
jp
stos
dec
and
adc
sbb
imul
shl
mov
daa
test
mov
popf
loope
call
mov
add
mov
adc
je
int
clc
(bad)
(bad)
(bad)
jmp
outs
test
(bad)
mov
pop
test
adc
movs
cwde
fild
jg
push
mov
adc
icebp
daa
loope
aad
fmul
add
in
push
xchg
(bad)
(bad)
(bad)
(bad)
in
pop
adc
in
and
sub
add
jnp
pop
xor
mov
or
outs
repnz
(bad)
jmp
sub
rcr
and
mov
clc
xor
push
sbb
test
jmp
push
push
xchg
pop
in
bound
dec
adc
push
cld
dec
jae
pop
pop
inc
(bad)
movs
jecxz
xor
add
dec
jl
push
jo
or
(bad)
(bad)
(bad)
(bad)
fiadd
push
and
or
inc
adc
mov
pop
jb
mov
xlat
dec
fldcw
pop
cwde
push
inc
into
in
xor
(bad)
mov
push
adc
mov
aaa
mov
push
(bad)
(bad)
(bad)
call
fisub
and
push
retf
pop
shl
mov
and
mov
stc
and
loope
fdivr
lahf
movs
push
stos
jo
add
push
loope
mov
rcl
int
shl
mov
mov
pop
jne
lahf
outs
sar
jmp
shl
pop
inc
inc
outs
and
test
mov
(bad)
(bad)
dec
ret
rcr
jmp
in
cld
les
inc
movs
loopne
in
clc
pop
push
inc
out
retf
(bad)
(bad)
(bad)
mov
sbb
js
mov
cwde
loopne
scas
sub
sub
xor
ins
fst
(bad)
repz
(bad)
(bad)
jmp
cs
pop
add
push
out
sbb
popf
cmp
xchg
out
out
scas
movs
loope
call
sub
sahf
xchg
test
push
movs
or
scas
daa
sub
ret
dec
mov
mov
mov
cdq
scas
or
dec
in
scas
js
fld
out
jg
sbb
dec
(bad)
(bad)
inc
jb
movs
sub
push
jp
inc
inc
jnp
push
xor
(bad)
(bad)
(bad)
dec
lock
(bad)
inc
pop
xor
sbb
rcl
nop
pusha
neg
stc
jne
jmp
rcl
(bad)
dec
stos
(bad)
jbe
popf
sbb
jp
pop
sub
push
sub
inc
sbb
mov
(bad)
call
xchg
loope
jbe
in
jmp
xchg
aaa
jle
cmp
inc
hlt
and
std
lods
dec
in
(bad)
(bad)
jmp
push
xor
xor
fnstenv
jmp
fisubr
mov
inc
sub
ficomp
xor
inc
cli
(bad)
inc
pusha
addr16
adc
das
cs
adc
xchg
dec
pusha
(bad)
(bad)
(bad)
mov
scas
jmp
mov
adc
jne
out
aam
stos
mov
mov
out
cli
(bad)
call
(bad)
mov
shr
js
mov
mov
jmp
jg
pop
scas
jmp
xor
jle
fwait
mov
rol
cmp
in
stos
pop
add
(bad)
(bad)
jmp
jbe
jmp
add
hlt
pop
push
xchg
inc
mov
jg
adc
pushf
fcom
(bad)
(bad)
(bad)
mov
loope
mov
cwde
mov
dec
xchg
ds
inc
adc
pop
sbb
jl
mov
(bad)
jg
(bad)
out
mov
call
(bad)
adc
adc
cli
cmc
mov
(bad)
(bad)
jmp
(bad)
add
repz
xor
cmp
or
push
or
cmp
fild
js
mov
in
cmp
js
out
lods
dec
(bad)
(bad)
mov
add
hlt
jg
jp
wrmsr
lods
dec
adc
cdq
js
and
mov
stos
(bad)
push
stos
stos
(bad)
push
cmp
sbb
sbb
into
aas
fdiv
mov
scas
(bad)
(bad)
(bad)
jmp
cmps
cmps
mov
loope
push
shl
xor
rcr
sub
test
clc
or
lods
test
pop
cdq
call
inc
les
out
or
dec
imul
stc
xlat
xchg
cmp
mov
mov
mov
movs
add
nop
add
jns
jnp
popa
nop
adc
(bad)
(bad)
mov
loop
dec
jno
mov
and
xchg
or
loopne
(bad)
(bad)
(bad)
dec
(bad)
aaa
jnp
cs
jmp
lahf
in
push
repz
call
xor
fst
inc
loope
(bad)
(bad)
jmp
xlat
push
dec
loop
dec
adc
mov
dec
push
dec
iret
fcomip
(bad)
(bad)
out
adc
cs
adc
sub
loop
out
scas
es
mov
(bad)
(bad)
(bad)
jmp
aas
or
xchg
outs
xchg
dec
mov
loope
mov
or
xchg
mov
add
(bad)
jg
pop
and
add
mov
xchg
fild
sbb
xchg
(bad)
jl
shl
inc
sbb
jecxz
(bad)
(bad)
(bad)
(bad)
jg
mov
and
aad
(bad)
mov
or
test
or
data16
jne
jo
popf
jg
cmc
ins
mov
(bad)
push
and
jmp
inc
adc
xchg
mul
imul
pop
cmc
or
(bad)
(bad)
call
loope
adc
mov
jbe
retf
lods
pop
out
mov
ret
(bad)
(bad)
(bad)
(bad)
jmp
sbb
retf
xlat
xor
or
and
push
ret
outs
dec
lds
pop
(bad)
call
mov
test
inc
ins
repz
fst
inc
jns
cdq
pushf
fwait
add
out
push
das
data16
(bad)
(bad)
(bad)
inc
aam
ret
fstp
mov
dec
inc
pop
jbe
js
inc
mov
jmp
(bad)
(bad)
(bad)
push
cdq
inc
shufps
in
mov
push
pop
mov
pop
cli
jnp
add
not
arpl
sub
call
and
cmp
out
pop
adc
xor
mov
jmp
leave
ss
push
cli
jns
jmp
shl
or
icebp
mov
sti
mov
pop
arpl
arpl
popa
aad
and
inc
push
nop
nop
mov
push
out
in
out
sub
sbb
ins
inc
mov
push
pop
in
out
sbb
push
xchg
and
(bad)
(bad)
jmp
lods
cmps
mov
or
clc
and
imul
or
in
jl
(bad)
js
lods
fidivr
(bad)
(bad)
(bad)
push
or
retf
test
cs
mov
rol
jo
inc
(bad)
cmc
lahf
outs
xor
mov
aad
(bad)
(bad)
(bad)
call
pop
cmp
std
popf
mov
mov
lods
adc
cmp
push
xchg
(bad)
(bad)
(bad)
jmp
bound
hlt
ror
and
dec
and
retf
sbb
(bad)
push
pusha
xor
es
fidiv
aas
repz
clc
clc
ds
jge
sub
cmps
sbb
add
jmp
sbb
sub
jb
sub
(bad)
(bad)
inc
mov
xor
loope
xchg
fadd
mov
lds
cmp
dec
shl
loopne
jl
int3
inc
or
xor
fisub
fs
(bad)
(bad)
jmp
adc
fcomp
fld
jae
call
je
dec
add
inc
out
xor
outs
(bad)
dec
fmul
push
pushf
cdq
cmps
in
int3
sub
or
xlat
int
out
xor
(bad)
fwait
(bad)
ficomp
sub
jl
sub
repz
xchg
fscale
cmp
(bad)
(bad)
call
stos
shr
adc
jns
dec
jp
sub
aad
jg
mov
sub
iret
movs
xchg
sbb
or
mov
fstp
mov
(bad)
js
hlt
in
jle
loopne
into
sub
movs
test
lea
pop
cld
int3
adc
(bad)
(bad)
(bad)
(bad)
call
sti
(bad)
sbb
es
cs
or
sub
pop
aaa
adc
das
add
hlt
(bad)
inc
xor
push
lock
adc
lea
cmp
push
iret
das
pop
rcl
mov
mov
adc
mov
mov
lods
stc
sbb
test
fs
bnd
add
popf
or
push
clc
jmp
sub
pop
daa
pusha
dec
push
and
(bad)
(bad)
call
jmp
pop
in
nop
xchg
cmp
int
mov
lods
bound
jl
push
shl
bound
mov
mov
loop
daa
outs
jp
xchg
fistp
addr16
clc
(bad)
inc
test
ins
pop
ja
repnz
sbb
test
xor
mov
jle
cld
jmp
inc
test
inc
fwait
ds
das
pop
out
adc
(bad)
(bad)
push
mov
mov
repnz
push
or
in
jge
lahf
call
sbb
lods
cmps
mov
jmp
pop
dec
add
mov
daa
arpl
retf
mov
mov
(bad)
(bad)
(bad)
inc
xlat
int3
repz
or
pop
mov
mov
fdiv
arpl
xchg
cmps
jb
xchg
jg
or
and
jnp
inc
sub
add
cmp
xchg
fs
call
inc
jecxz
xchg
sbb
dec
push
popf
mov
add
popf
hlt
mov
push
in
cmp
(bad)
call
test
sbb
imul
loope
xor
xchg
xor
fldcw
inc
mov
dec
ss
test
hlt
pop
je
and
movs
(bad)
lahf
pop
adc
ins
sar
in
cmp
xor
sub
push
loop
fcomip
(bad)
(bad)
jl
shl
adc
(bad)
div
and
cmp
aam
or
pop
pop
fisubr
test
iret
add
xchg
pop
or
pop
imul
cmp
scas
sar
scas
stos
xchg
pop
je
jg
(bad)
(bad)
(bad)
call
out
sbb
arpl
xchg
push
push
retf
xchg
adc
mov
bound
into
xchg
sub
call
dec
outs
mov
xchg
sbb
jae
ds
inc
adc
or
lock
(bad)
jmp
push
pop
cmc
imul
adc
mov
repz
or
pop
(bad)
fcom
imul
test
(bad)
inc
lock
or
pop
mov
(bad)
(bad)
call
rol
adc
add
or
(bad)
movs
loop
out
shr
xchg
lahf
jmp
jmp
(bad)
(bad)
xchg
popf
(bad)
cs
inc
adc
rol
jae
cmp
in
fxch
cmps
popf
(bad)
(bad)
mov
push
sbb
xchg
out
inc
fadd
cmp
pop
dec
jb
rcr
cmp
retf
pop
and
std
(bad)
in
test
call
aaa
jmp
jno
adc
(bad)
(bad)
(bad)
call
imul
mov
je
imul
jmp
call
loopne
inc
(bad)
(bad)
(bad)
dec
fstp
scas
push
mov
pop
(bad)
jp
dec
dec
jmp
fmul
adc
inc
cld
push
jo
(bad)
(bad)
(bad)
dec
test
(bad)
pop
pop
std
and
inc
std
in
cmp
imul
jg
fcomip
mov
iret
and
js
pop
xchg
ds
pop
(bad)
(bad)
jg
adc
test
fadd
adc
add
movs
jne
mov
(bad)
(bad)
(bad)
call
adc
add
xchg
out
or
xchg
pop
in
and
test
xchg
mov
pop
shr
repz
mov
repnz
add
inc
lods
rcl
fcom
(bad)
cld
(bad)
rcr
and
pop
das
(bad)
jg
push
scas
inc
int
add
repnz
aas
adc
jne
mov
std
or
mov
(bad)
js
push
das
xor
xchg
push
adc
inc
sub
(bad)
push
add
movs
mov
dec
xor
and
call
hlt
scas
push
es
push
xchg
loope
enter
push
movs
dec
mov
cld
push
and
jle
mov
jg
push
and
aam
in
fndisi(8087
seto
loope
fidivr
(bad)
push
dec
dec
retf
test
jp
jnp
scas
and
mov
xchg
stos
push
dec
sbb
(bad)
(bad)
fcmovnu
push
outs
out
and
je
pop
xor
xchg
les
out
push
add
aam
mov
adc
xor
push
stos
daa
jmp
cmc
and
adc
sub
jns
std
fild
stos
js
ds
(bad)
jmp
mov
lock
cmps
int3
inc
pop
and
or
pusha
ins
push
xchg
int3
sub
loope
fsubr
push
mov
push
dec
inc
lds
mov
shl
icebp
push
lock
(bad)
(bad)
(bad)
stc
push
aas
mov
adc
fnsave
push
shl
or
sbb
test
sbb
(bad)
(bad)
jg
test
bound
les
out
movs
lods
pusha
sbb
(bad)
(bad)
(bad)
dec
mov
and
js
and
xor
(bad)
in
pop
inc
int3
js
adc
stos
(bad)
out
sub
les
je
(bad)
sar
(bad)
(bad)
call
cli
and
mov
pop
in
in
pop
push
xor
shl
push
frstor
test
(bad)
(bad)
(bad)
clc
inc
or
outs
sub
xchg
and
push
ror
repnz
(bad)
in
push
into
xor
(bad)
(bad)
call
daa
jbe
nop
dec
ret
pop
mov
adc
sub
hlt
in
xchg
call
inc
jle
mov
inc
inc
gs
rol
or
(bad)
(bad)
(bad)
mov
jle
inc
sub
cmp
push
idiv
jp
push
cmps
(bad)
(bad)
(bad)
dec
jmp
mov
popf
movs
xlat
(bad)
cmp
mov
cmps
xor
inc
mov
xor
(bad)
(bad)
(bad)
jmp
fld
add
cmp
int
(bad)
pop
fdivr
jne
(bad)
adc
adc
push
push
mov
ror
push
into
sbb
in
pop
inc
xor
addr16
mov
retf
data16
adc
leave
inc
xor
add
xchg
sub
inc
push
jmp
inc
xchg
pop
adc
(bad)
sub
mov
jo
add
fucom
pop
(bad)
(bad)
(bad)
call
sahf
add
cld
cmp
push
and
lods
enter
mov
dec
into
mov
pop
aad
jmp
pop
(bad)
jns
pop
in
inc
xchg
int3
out
out
(bad)
(bad)
(bad)
(bad)
jns
popa
inc
popa
cmps
test
mov
mov
add
dec
mov
out
scas
mov
adc
test
adc
pop
idiv
pop
mov
loopne
jle
inc
jmp
(bad)
(bad)
fcomip
dec
mov
outs
lods
test
aad
cmc
(bad)
int3
mov
fs
sbb
lds
fcomip
cmp
test
clc
test
fidivr
shl
xor
mov
ins
sbb
xchg
(bad)
(bad)
(bad)
fistp
jecxz
pop
mov
mov
mov
jae
jmp
pop
xlat
jg
call
(bad)
(bad)
(bad)
call
and
imul
test
mov
sbb
push
pushf
adc
test
fs
jb
xor
and
dec
out
xor
inc
mov
dec
rcr
add
ds
(bad)
(bad)
jg
push
fistp
adc
ja
aas
dec
iret
mov
mov
pusha
add
and
(bad)
(bad)
dec
pop
fs
mov
imul
xchg
pushf
or
mov
ret
push
sub
(bad)
mov
or
inc
stos
xor
rcr
jl
ja
(bad)
cld
or
neg
cmp
(bad)
jmp
inc
or
and
popa
loopne
dec
jg
dec
lds
(bad)
in
pop
repz
and
int
mov
test
(bad)
jmp
add
retf
fst
(bad)
stc
cli
cdq
arpl
jo
dec
cdq
test
(bad)
(bad)
fistp
shl
test
sbb
sbb
jecxz
sbb
sub
call
mov
dec
pop
addr16
pop
pop
inc
fcmovnu
icebp
xor
nop
ret
jg
(bad)
(bad)
(bad)
(bad)
cmp
xor
mov
fcomp
fcomip
fnstcw
repnz
lods
pop
add
add
xchg
aam
(bad)
(bad)
(bad)
call
(bad)
and
sbb
jmp
mov
xor
repnz
mov
and
inc
(bad)
jp
xor
jg
(bad)
dec
ret
adc
fisubr
ins
(bad)
(bad)
call
sub
mov
mov
sub
xchg
mov
pop
rol
push
cld
inc
arpl
daa
call
test
jo
jecxz
(bad)
(bad)
(bad)
(bad)
inc
test
mov
dec
mov
and
loope
xchg
push
adc
and
xchg
bound
jecxz
pusha
(bad)
jmp
lock
mov
cdq
mov
fs
dec
mov
jmp
(bad)
(bad)
(bad)
call
ins
bound
adc
xchg
inc
mov
dec
push
(bad)
mov
xor
(bad)
pop
std
(bad)
push
rcl
xchg
sbb
movs
popa
dec
retf
inc
inc
daa
mov
(bad)
(bad)
jmp
repz
xor
movs
fidivr
xlat
push
addr16
shl
stos
loope
rol
(bad)
push
sbb
test
clc
and
pop
xchg
sbb
lock
(bad)
(bad)
(bad)
cmp
mov
add
cmp
mov
ins
imul
sahf
mov
xchg
push
dec
(bad)
(bad)
(bad)
(bad)
out
and
mov
cmps
and
jbe
sub
and
mov
cmps
repz
pop
dec
jecxz
mov
call
(bad)
fsubp
leave
ins
shld
cmp
sub
xchg
inc
sub
shl
retf
dec
inc
xor
mov
jmp
pop
xor
popa
rcr
add
popa
inc
add
xchg
xor
(bad)
(bad)
(bad)
in
jmp
or
mov
cmc
mov
movs
jno
(bad)
nop
out
mov
pop
pop
(bad)
(bad)
(bad)
(bad)
cmp
pop
cmp
mov
cdq
cli
das
mov
inc
leave
push
lock
ins
aaa
sahf
pop
(bad)
(bad)
(bad)
dec
int3
lea
push
jp
or
shr
mov
lods
sub
inc
js
enter
mov
imul
dec
mov
jg
mov
sub
pop
push
and
imul
jnp
scas
inc
(bad)
mov
into
int
icebp
(bad)
(bad)
(bad)
call
outs
nop
fs
sbb
mov
inc
push
retf
mov
icebp
push
loope
out
(bad)
(bad)
(bad)
(bad)
dec
ror
ret
inc
cmp
test
loopne
dec
std
(bad)
jge
inc
dec
scas
mov
jb
inc
rcl
xchg
or
aas
ins
inc
mov
ins
inc
ror
cmp
cmps
inc
mov
outs
(bad)
scas
data16
(bad)
jg
add
shl
mov
fdivr
dec
dec
(bad)
fadd
push
(bad)
dec
loope
pop
jp
jno
fadd
inc
pop
inc
mov
in
pop
sub
inc
(bad)
(bad)
(bad)
dec
jp
out
lds
mov
xor
push
mov
push
pop
out
xchg
dec
pusha
ror
je
xor
push
mov
cs
nop
pop
add
dec
sub
js
(bad)
jmp
mov
nop
mov
jp
in
sbb
and
ffree
shl
cld
ins
mov
(bad)
(bad)
dec
or
cwde
mov
out
je
shl
mov
(bad)
(bad)
(bad)
jg
push
push
popa
das
cs
jae
or
jmp
mov
add
xchg
mov
inc
lds
outs
in
(bad)
or
xchg
dec
push
xchg
les
cmovno
xchg
cmc
ret
(bad)
call
sar
mov
icebp
jl
pop
in
je
enter
cmp
mov
ret
(bad)
jmp
clc
test
or
mov
aas
rol
fisub
scas
pop
pop
mov
(bad)
(bad)
fcomip
lods
and
mov
mov
call
movs
aaa
fld
loope
xchg
movs
mov
rcl
mov
xchg
xchg
daa
imul
cmp
sbb
jb
out
sbb
mov
inc
js
cmc
sub
sahf
adc
into
and
daa
sub
(bad)
(bad)
(bad)
jmp
lea
or
sbb
mov
cmc
ds
icebp
mov
stc
xor
fcomip
inc
cmp
xor
stos
xchg
or
imul
pop
add
clc
(bad)
(bad)
sti
jle
sbb
jae
fcmovbe
xchg
cvtps2pd
lea
outs
(bad)
(bad)
(bad)
mov
mov
xor
shr
push
(bad)
sti
pop
out
jno
into
mov
shl
clc
push
(bad)
adc
ins
shr
das
movs
jge
les
push
mov
out
shl
into
jmp
imul
push
stos
xlat
mov
hlt
sub
test
xchg
dec
push
or
pop
sahf
retf
pop
jp
dec
jno
mov
pop
add
(bad)
(bad)
(bad)
(bad)
aas
pop
vshufpd
std
mov
mov
mov
fcomp
inc
push
ror
in
icebp
idiv
(bad)
(bad)
jmp
in
(bad)
xlat
adc
ins
cwde
dec
outs
xor
pushf
shr
ins
(bad)
sbb
and
lods
inc
cmp
mov
jne
mov
int
call
ins
test
shl
ss
mov
(bad)
and
pop
je
push
and
clc
add
pop
inc
pushf
pop
cmps
aas
fwait
test
(bad)
mov
jne
stos
in
lods
pop
(bad)
(bad)
(bad)
inc
xchg
adc
rcl
ret
pop
lods
dec
leave
jmp
jmp
pop
out
(bad)
(bad)
(bad)
call
jge
std
(bad)
adc
test
add
ins
pop
retf
fstp
pop
inc
mov
(bad)
(bad)
mov
jl
out
jge
mov
test
aad
push
lahf
or
clc
push
push
cmps
pop
sahf
xchg
in
mov
iret
div
push
or
mov
(bad)
(bad)
dec
lods
pop
mov
cmps
push
popf
sub
mov
outs
xchg
rcl
or
(bad)
jg
jnp
mov
fcmove
push
test
pusha
mov
adc
cmc
push
xchg
jae
inc
test
icebp
in
js
pop
js
movsx
or
(bad)
jl
in
push
inc
in
(bad)
(bad)
(bad)
fisttp
adc
mov
mov
outs
mov
movs
push
pop
ror
call
xor
into
ss
neg
(bad)
imul
les
rcr
aad
sbb
xor
call
mov
ins
add
sub
xchg
and
ds
(bad)
(bad)
(bad)
jmp
add
stc
rol
dec
mov
mov
xor
add
mov
pop
jnp
mov
jg
sahf
jle
enter
inc
sub
lods
mov
cli
xchg
mov
mov
jb
inc
sbb
sub
(bad)
ds
(bad)
(bad)
(bad)
out
test
jmp
jecxz
jg
sbb
sbb
mov
xchg
(bad)
jg
hlt
scas
dec
retf
or
mov
mov
fdiv
(bad)
(bad)
(bad)
jmp
mov
xchg
xor
ds
pop
mov
jle
lods
mov
fmul
and
in
out
in
pop
out
sar
inc
inc
xlat
sbb
js
dec
jecxz
cmp
je
xor
and
(bad)
jmp
nop
test
nop
fwait
push
sti
xor
das
lea
rcl
inc
(bad)
(bad)
jmp
iret
mov
or
pmaxub
jmp
fwait
(bad)
push
dec
pusha
scas
rol
mov
std
(bad)
dec
push
xor
test
aam
cmp
push
(bad)
(bad)
dec
lds
inc
inc
jp
lea
pusha
jnp
push
call
pushf
mov
stos
xor
mov
add
push
pop
(bad)
call
fcomip
inc
cmps
cmp
js
fisubr
cs
or
mov
and
cmp
mov
aam
inc
es
sub
shl
fsub
es
push
or
rcl
fidiv
add
(bad)
(bad)
(bad)
(bad)
cmp
add
cmp
sbb
in
pop
xchg
xor
jge
jl
(bad)
(bad)
call
mov
les
shl
popa
shr
cmp
sbb
jmp
arpl
add
enter
push
add
(bad)
jmp
dec
pop
enter
or
jmp
repnz
test
scas
(bad)
(bad)
jmp
push
inc
mov
or
push
test
xchg
in
mov
mov
(bad)
(bad)
(bad)
inc
mov
aaa
arpl
xor
mov
fidiv
mov
mov
(bad)
(bad)
(bad)
call
movs
ror
xor
mov
cmc
xor
jb
mov
(bad)
aas
mov
sar
(bad)
pop
sahf
mov
cmp
es
(bad)
(bad)
jmp
cmps
push
mov
dec
bound
dec
mov
icebp
cmp
loopne
xor
ins
dec
xchg
jl
fstp
mov
or
inc
push
dec
jg
(bad)
(bad)
(bad)
(bad)
cli
xchg
pop
test
dec
mov
fild
nop
lahf
jns
xor
push
inc
repnz
(bad)
(bad)
call
jle
and
loope
lods
in
dec
xor
dec
enter
dec
pusha
(bad)
(bad)
mov
add
popa
or
cdq
mov
cli
adc
in
sbb
inc
inc
push
mov
push
bound
sub
sub
nop
jae
or
jle
(bad)
popa
push
cdq
(bad)
(bad)
(bad)
dec
sbb
shr
mov
adc
nop
sbb
pusha
sbb
mov
(bad)
(bad)
push
jle
inc
(bad)
fdivr
dec
jmp
je
pop
lea
dec
sub
(bad)
(bad)
(bad)
(bad)
mov
(bad)
sub
xor
ds
fs
call
mov
add
mov
xchg
pop
and
sub
(bad)
out
pop
mov
fsub
inc
(bad)
mov
call
(bad)
(bad)
jnp
mov
mov
add
jbe
dec
jnp
aad
adc
fist
sbb
scas
lea
je
fild
ficomp
inc
jle
cs
sbb
sbb
(bad)
push
adc
fisub
inc
setge
bound
add
add
(bad)
inc
fdiv
pusha
push
mov
adc
mov
das
pusha
stc
mov
into
and
mov
and
adc
cmp
clc
fwait
pop
and
inc
adc
pop
pop
in
cld
icebp
in
mov
das
mov
inc
(bad)
(bad)
call
push
fwait
int
push
push
into
sbb
sub
add
jo
(bad)
(bad)
push
pop
dec
ret
in
push
mov
stos
adc
ja
cmp
(bad)
sub
mov
sub
stos
ja
mov
cmp
lahf
jmp
adc
xor
mov
(bad)
call
stc
inc
pop
bnd
iret
(bad)
mov
cmp
popf
shl
in
in
popa
cld
dec
icebp
xor
cmp
sbb
stos
pop
xor
and
add
(bad)
clc
add
(bad)
(bad)
(bad)
call
sbb
push
fdivr
push
adc
repnz
pop
jecxz
add
xor
in
fdivr
(bad)
(bad)
(bad)
jmp
pusha
(bad)
jmp
or
or
fsubr
mov
push
push
test
(bad)
(bad)
inc
push
push
test
jle
stc
xor
or
ret
cmp
call
push
push
shl
inc
pop
das
cli
(bad)
inc
pop
lods
pop
aad
pushf
iret
push
mov
aaa
add
cwde
(bad)
fcomp
(bad)
mov
sar
cmp
jmp
xor
inc
adc
mov
outs
inc
xchg
or
ja
or
xchg
test
xchg
push
sbb
or
jmp
pop
add
mov
jae
push
xchg
adc
loope
push
inc
and
mov
push
(bad)
in
(bad)
(bad)
(bad)
push
in
aam
fcom
es
inc
fneni(8087
pusha
loope
shl
mov
nop
stos
(bad)
(bad)
(bad)
dec
push
mov
scas
fmul
dec
mov
nop
adc
mov
icebp
icebp
repnz
cmps
cmp
cwde
dec
push
int3
pop
adc
scas
mov
push
mov
lods
int3
dec
sub
mov
xor
mov
jbe
sub
loope
or
jl
shl
inc
xor
cmp
sbb
fs
pop
jecxz
aad
sub
stos
adc
aad
xor
(bad)
(bad)
call
cmp
in
xor
push
das
retf
push
fld
xchg
data16
push
test
stos
jns
jl
(bad)
(bad)
(bad)
(bad)
fsub
cmp
std
outs
scas
cli
cmc
jns
sub
popa
stos
add
xor
add
div
ins
pop
test
mov
aaa
dec
add
shl
sub
mov
add
pop
call
mov
loop
enter
(bad)
(bad)
(bad)
cld
or
xor
push
stos
outs
icebp
add
inc
rcr
(bad)
retf
aaa
or
test
out
jp
fs
gs
mov
rcr
jg
(bad)
mov
fld
out
xchg
xchg
mov
fbstp
rcr
clc
stc
jl
fstp
push
pop
fsubr
(bad)
jnp
mov
(bad)
push
or
(bad)
dec
test
call
aaa
leave
nop
fwait
mov
ss
addr16
(bad)
(bad)
(bad)
(bad)
mov
jb
pop
sbb
adc
jo
jge
mov
adc
cmp
(bad)
(bad)
jmp
xchg
gs
outs
mov
inc
and
mov
jle
add
(bad)
jg
in
les
jl
mov
mov
adc
daa
mov
mov
mov
mov
sbb
sub
mov
jge
std
and
jne
mov
(bad)
inc
jp
aad
jae
jmp
cmps
pop
push
mov
and
icebp
jbe
call
(bad)
push
clc
mov
enter
push
(bad)
rol
ins
jl
stos
mov
popf
adc
(bad)
(bad)
push
out
sbb
xchg
mov
and
dec
push
push
test
cli
js
xor
pop
adc
call
sti
push
sub
lock
mov
mov
loopne
addr16
sbb
call
pop
imul
retf
or
fild
je
and
(bad)
mov
pop
or
inc
dec
pushf
pop
movlps
(bad)
(bad)
(bad)
call
pop
(bad)
jmp
inc
out
les
pop
mov
lods
ror
push
jle
stos
cs
jne
gs
jecxz
jp
jecxz
push
and
mov
shr
cli
(bad)
inc
xchg
iret
jb
mov
in
sahf
cmp
sets
xor
icebp
add
(bad)
fcomip
jmp
xor
lods
js
bound
and
inc
pop
inc
repz
daa
inc
(bad)
(bad)
(bad)
call
adc
pop
lea
mov
(bad)
daa
lahf
mov
inc
inc
xor
sub
fs
lock
out
idiv
sub
mov
(bad)
(bad)
call
lock
sbb
push
mov
aam
mov
mov
sub
addr16
(bad)
jmp
push
addr16
int
sbb
jae
add
mov
push
cmp
fmul
pushf
sub
movs
jmp
xor
pusha
xchg
xor
ret
dec
xchg
mov
imul
mov
cli
(bad)
and
push
movs
test
hlt
mov
(bad)
out
loop
push
inc
jo
aad
xchg
sub
add
jge
jns
or
mov
dec
adc
data16
(bad)
(bad)
fistp
adc
xor
outs
sub
int3
mov
loope
and
pop
std
(bad)
jmp
scas
mov
mov
(bad)
mov
mov
scas
pop
in
leave
dec
dec
lock
mov
and
ds
sar
pop
mov
sbb
(bad)
(bad)
call
xor
pop
xlat
jecxz
pop
ret
call
jb
les
xlat
mov
adc
(bad)
(bad)
(bad)
dec
sahf
bound
jb
movs
enter
rcr
push
mov
fidiv
std
(bad)
(bad)
(bad)
jmp
push
dec
(bad)
scas
xlat
mov
jo
idiv
or
cmp
jmp
dec
dec
mov
push
and
stc
movs
push
inc
cmps
cmps
ret
pop
cmp
(bad)
(bad)
call
xchg
(bad)
(bad)
mov
mov
dec
add
scas
in
sub
push
cmp
cld
dec
stc
xchg
movs
push
add
scas
cli
mov
inc
ss
sbb
push
xchg
jecxz
(bad)
(bad)
call
cmp
cmp
jp
scas
sub
cmp
(bad)
pop
pop
sub
dec
cmp
cs
outs
xchg
fdivrp
test
imul
or
jge
(bad)
(bad)
(bad)
dec
adc
xor
int3
mov
repnz
cs
scas
and
pop
jp
ins
les
fnstcw
push
(bad)
mov
sbb
mov
cmps
push
pop
icebp
push
mov
out
adc
loopne
jmp
pop
mov
and
push
mov
push
js
jbe
fwait
cwde
movs
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
mov
ins
outs
scas
adc
(bad)
test
jbe
pop
pop
aaa
or
scas
or
(bad)
call
xlat
dec
mov
fnsave
jo
aam
stc
enter
movs
stos
dec
push
in
jl
xchg
push
mov
mov
fcom
push
in
adc
call
xor
mov
xor
(bad)
(bad)
inc
mul
mov
mov
and
ins
sbb
arpl
shld
cld
xor
loope
push
test
clc
pop
push
jno
xchg
mov
daa
(bad)
(bad)
jmp
pushf
xor
mov
ror
shl
ror
sbb
test
(bad)
(bad)
jmp
outs
add
xchg
cwde
mov
add
scas
call
test
or
push
cmp
jmp
aas
sbb
jb
cmc
icebp
dec
inc
imul
mov
mov
retf
jg
sub
pop
mov
add
and
loope
jmp
xchg
dec
pushf
sub
cmp
jl
sub
xchg
fdivr
mov
(bad)
dec
ret
xor
xor
lock
push
mov
rcl
test
addr16
adc
(bad)
(bad)
out
cli
jl
stos
pop
in
push
popf
test
xchg
add
shl
and
sbb
(bad)
mov
loope
sub
add
adc
in
mov
add
daa
sub
jmp
(bad)
(bad)
(bad)
push
and
mov
or
and
lahf
sbb
fiadd
push
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
sbb
xlat
push
imul
js
or
mov
dec
repnz
int
sar
push
adc
push
stos
ror
add
stos
pop
cld
and
shl
sbb
jle
xchg
sbb
jns
leave
movs
dec
movs
or
(bad)
(bad)
(bad)
mov
int3
(bad)
imul
mov
sub
push
ficom
pop
movs
and
push
dec
cmp
xchg
jg
outs
cli
cwde
add
scas
pop
call
(bad)
xlat
adc
lock
(bad)
jmp
inc
mov
lods
int
daa
or
jp
lods
ds
or
ror
(bad)
(bad)
inc
jle
jl
push
repz
das
mov
nop
fisubr
stc
mov
(bad)
(bad)
cmp
inc
aam
or
call
mov
icebp
lahf
inc
(bad)
mov
cmps
(bad)
jle
sbb
pop
inc
mov
cmp
push
inc
sahf
sub
shl
das
clc
(bad)
call
mov
mov
or
mov
call
test
mov
je
(bad)
loopne
push
mov
bound
mov
(bad)
(bad)
(bad)
jmp
dec
jmp
fiadd
xchg
mov
das
nop
fbstp
leave
fiadd
add
jmp
(bad)
dec
pop
repz
xor
out
cmp
mov
cmc
and
ror
dec
loopne
(bad)
dec
sub
push
outs
sbb
push
bswap
clc
mov
mov
push
add
icebp
push
push
(bad)
(bad)
mov
popf
into
das
enter
jne
loop
fst
gs
mov
xchg
(bad)
(bad)
(bad)
mov
rcl
not
movs
jge
mov
aad
loope
mov
repz
retf
xchg
(bad)
(bad)
jmp
xchg
jge
out
into
jnp
lds
pop
lds
xchg
test
push
ins
pop
sti
sub
(bad)
(bad)
jmp
in
pop
sub
mov
push
xchg
in
gs
xchg
mov
das
out
sahf
xlat
mov
(bad)
(bad)
(bad)
jmp
retf
push
or
push
mov
iret
push
and
outs
adc
cli
aas
xchg
(bad)
fcomip
adc
test
xchg
adc
and
iret
in
fst
js
clc
std
mov
scas
xchg
xchg
les
xchg
outs
fimul
jp
rcl
fisubr
xor
push
sbb
or
cmp
xchg
inc
sti
pushf
js
mov
minps
cmp
pop
xlat
jbe
sbb
shr
cli
es
and
(bad)
push
repnz
cmc
push
mov
or
or
jne
leave
lock
(bad)
jmp
test
xchg
mov
idiv
xor
push
jp
push
fiadd
enter
fcomip
dec
sbb
outs
out
cdq
xlat
sti
popf
jo
iret
dec
in
cmp
outs
jle
cmp
call
jmp
inc
pop
cli
dec
scas
dec
sti
jne
pop
pop
call
loope
add
aam
(bad)
lods
push
(bad)
(bad)
(bad)
call
or
push
pop
in
jae
lea
ret
xchg
mov
pop
add
dec
xor
fs
or
(bad)
sbb
call
pop
jge
mov
or
mov
push
iret
(bad)
(bad)
(bad)
call
push
es
rcl
xor
add
cmp
arpl
cmp
mov
(bad)
(bad)
fisubr
xchg
pop
push
mov
cmp
dec
imul
shr
jmp
neg
xor
mov
fnstenv
cmp
rcl
rol
imul
push
sub
rol
int3
mov
sub
bound
(bad)
(bad)
push
in
mov
xchg
adc
mov
shl
lods
jae
fcmove
sub
out
(bad)
call
jmp
pop
mov
clc
mov
fcom
dec
xor
aad
popa
xlat
pop
(bad)
(bad)
(bad)
call
mov
xchg
loope
call
mov
pushf
cmp
(bad)
jg
xchg
cmps
into
jle
(bad)
cli
mov
sbb
inc
xor
(bad)
(bad)
push
inc
mov
mov
cs
pop
push
mov
lods
out
add
loopne
(bad)
(bad)
(bad)
(bad)
aas
stc
in
scas
xchg
ficomp
dec
data16
xchg
cmc
call
pop
push
lock
xor
(bad)
pop
cld
mov
addr16
inc
xchg
jo
xchg
push
arpl
imul
aam
sbb
(bad)
inc
mov
cli
pop
and
cdq
push
mov
fidiv
jb
clc
or
(bad)
mov
lods
xchg
lock
add
mov
mov
repz
inc
(bad)
jno
pop
(bad)
(bad)
(bad)
call
addr16
rcr
es
fcom
(bad)
push
dec
or
jnp
imul
(bad)
(bad)
(bad)
(bad)
jmp
out
dec
sbb
js
jbe
lahf
icebp
addr16
mov
repz
rol
mov
push
xchg
mov
outs
mov
inc
lock
imul
iret
aad
jmp
shl
in
outs
aam
inc
dec
push
inc
cmp
cmp
mov
(bad)
dec
mov
out
lds
mov
inc
push
loop
gs
jo
outs
(bad)
(bad)
(bad)
call
or
or
mov
mov
and
and
jne
ror
in
(bad)
(bad)
dec
loope
pushf
retf
xchg
je
hlt
(bad)
or
inc
jae
sbb
ins
dec
fldcw
jmp
(bad)
(bad)
(bad)
call
xchg
test
inc
mov
ret
fstp
jae
ja
or
mov
jp
in
lea
(bad)
sti
mov
ds
and
adc
(bad)
push
mov
movs
les
mov
lea
(bad)
(bad)
inc
dec
and
ds
mov
sub
lahf
out
lods
iret
or
mov
xor
(bad)
inc
cld
jne
mov
sar
xchg
sbb
lods
int3
mov
inc
push
and
(bad)
dec
dec
mov
aam
test
xor
pop
cmps
dec
icebp
jbe
std
ja
push
int
inc
scas
aaa
cld
call
adc
push
mov
int
dec
or
push
mov
adc
(bad)
(bad)
dec
push
mov
sbb
sbb
movs
sbb
pushf
pop
dec
sbb
push
gs
dec
lods
xchg
clc
(bad)
jmp
mov
mov
faddp
sbb
clc
push
pop
daa
js
inc
les
lock
inc
(bad)
dec
cli
(bad)
movs
jg
push
jae
jae
mov
ins
hlt
(bad)
(bad)
(bad)
(bad)
mov
and
mov
icebp
adc
js
fnstcw
mov
psubb
aaa
or
aas
jl
pop
sbb
dec
ficomp
enter
(bad)
(bad)
(bad)
cmp
inc
mov
or
or
cs
jg
hlt
sbb
inc
xchg
cli
(bad)
(bad)
(bad)
dec
xlat
inc
dec
xor
cld
adc
lahf
cli
lods
sti
das
retf
ins
(bad)
adc
inc
(bad)
(bad)
(bad)
call
jnp
lods
xchg
cmp
stos
xor
add
mov
sbb
mov
mov
dec
adc
inc
mov
pusha
xor
jmp
mov
hlt
fxam
mov
adc
(bad)
(bad)
(bad)
call
adc
repnz
loope
(bad)
loopne
je
pop
jbe
inc
(bad)
ja
adc
cpuid
jle
movs
fisub
(bad)
(bad)
fcomip
xor
add
es
add
push
movs
sub
les
mov
iret
add
jecxz
movs
sub
jns
push
(bad)
jge
std
pop
mov
call
cmp
pop
loop
sbb
(bad)
call
pop
fsubr
push
adc
mov
cmp
leave
sub
test
(bad)
(bad)
call
pop
sub
arpl
xor
dec
jge
shl
idiv
(bad)
(bad)
inc
cmc
neg
or
movs
mov
add
sbb
xor
out
and
inc
or
(bad)
inc
cld
push
shr
cdq
cs
xor
push
pop
cmp
sbb
push
jmp
(bad)
jecxz
xchg
clc
adc
jmp
jmp
xor
fsub
xchg
jo
push
js
out
jp
data16
add
cmp
jmp
mov
dec
jg
push
movs
inc
mov
mov
call
pop
das
xor
les
push
leave
popf
(bad)
(bad)
(bad)
push
mov
pop
sar
cli
and
aam
inc
lea
ja
(bad)
(bad)
(bad)
cmp
sahf
into
cmc
cwde
cmp
test
sbb
sbb
jl
dec
aaa
mov
inc
std
mov
nop
sbb
scas
sub
int3
pop
in
add
xchg
outs
clc
(bad)
cmp
clc
cwde
scas
call
xlat
add
xor
adc
push
vmread
call
mov
fucomi
push
push
dec
cmp
hlt
inc
and
imul
sbb
cli
xor
sub
mov
hlt
arpl
retf
sub
sar
sbb
jbe
mov
movsx
ja
inc
loopne
xchg
(bad)
xor
clc
inc
(bad)
adc
into
inc
mov
xchg
(bad)
(bad)
(bad)
(bad)
in
or
stos
stos
sbb
sub
ret
addr16
add
mov
stos
add
push
test
movs
mov
call
nop
and
outs
shl
cmps
mov
sbb
xchg
mov
data16
enter
xchg
push
aaa
inc
and
(bad)
(bad)
inc
push
sub
in
cmp
(bad)
push
jp
out
ins
mov
mov
popa
loop
int3
lods
fmul
frstor
je
dec
ss
(bad)
(bad)
dec
sbb
sbb
int3
cmp
pop
jo
nop
xor
mov
in
mov
das
cli
(bad)
jmp
in
lea
push
jmp
ja
cmps
jb
mov
(bad)
(bad)
jmp
add
(bad)
aas
stos
adc
aam
sbb
xchg
je
pop
sbb
arpl
out
(bad)
(bad)
in
push
dec
in
into
aaa
pop
es
adc
loopne
sbb
ds
(bad)
mov
(bad)
(bad)
inc
inc
dec
sbb
sub
out
dec
cli
fld
mov
data16
mov
adc
(bad)
(bad)
call
pop
push
in
mov
mov
aam
je
aaa
mov
or
shl
into
lock
cld
outs
cli
mov
fidivr
sub
mov
lahf
int
(bad)
(bad)
jg
or
sahf
jg
in
pop
aad
push
jo
jne
cmp
imul
(bad)
(bad)
call
xchg
lods
movs
loop
lods
sbb
dec
outs
xchg
and
push
not
jle
adc
pop
std
call
stc
fcomp
retf
dec
sahf
jecxz
stos
pusha
inc
enter
pop
test
call
(bad)
(bad)
call
jle
mov
call
in
cmp
adc
jae
int
in
xchg
inc
call
call
dec
jle
int
(bad)
jle
mov
pop
push
cwde
mov
mov
sub
lock
call
test
mov
xchg
jns
adc
movs
dec
xor
mov
xchg
dec
aad
je
ficom
pushf
mov
pop
or
cmp
(bad)
inc
or
fs
cmp
and
sbb
stos
es
and
mov
xor
mov
das
(bad)
(bad)
(bad)
inc
(bad)
or
mov
cmps
push
adc
into
ins
punpckldq
retf
sbb
in
sub
(bad)
(bad)
(bad)
inc
jle
xor
dec
jno
aam
mov
std
dec
mov
lods
movs
jge
ins
jnp
jge
out
movs
or
test
jb
lods
sub
cdq
add
push
pushf
cs
rcr
jmp
(bad)
push
out
mov
inc
out
jo
pop
sbb
and
inc
daa
dec
(bad)
test
xor
(bad)
inc
adc
leave
cmp
pop
icebp
or
test
arpl
ins
jp
push
cli
(bad)
(bad)
jmp
xchg
test
sahf
mov
pop
pop
mov
add
mov
mov
inc
aam
(bad)
(bad)
inc
or
shr
mov
adc
pusha
paddq
scas
fmul
mov
fistp
dec
inc
or
xchg
pop
js
imul
sahf
loope
in
bnd
retf
sti
(bad)
(bad)
call
call
add
je
popa
or
movs
add
test
jge
pop
icebp
push
gs
cli
and
retf
data16
or
jg
jp
in
add
dec
xchg
sti
dec
xor
mov
and
mov
or
xor
jae
call
mov
loope
and
push
sub
rcr
inc
(bad)
jb
jne
xchg
std
sub
(bad)
(bad)
inc
mov
ror
test
mov
call
cs
pop
xor
pop
push
xchg
jmp
leave
(bad)
jg
inc
sub
jbe
pop
je
shl
ret
push
mov
sbb
cdq
test
hlt
lods
(bad)
(bad)
(bad)
(bad)
js
and
sub
inc
inc
loope
xchg
push
mov
inc
or
div
jbe
push
or
dec
jae
mov
xor
bnd
stos
dec
rcr
jmp
inc
arpl
ror
(bad)
(bad)
(bad)
call
repz
imul
data16
mov
sub
xor
pop
cmp
neg
ins
(bad)
(bad)
jmp
adc
mov
imul
add
(bad)
inc
mov
lds
mov
or
mov
aaa
cld
jmp
mov
js
imul
das
jp
push
pop
push
imul
(bad)
push
fld
sub
pop
cmc
pop
xchg
add
stc
(bad)
aad
repz
es
xchg
sbb
cmp
and
jmp
mov
pusha
push
inc
cld
sti
ss
push
mov
inc
pop
(bad)
stos
(bad)
call
loop
pop
push
data16
pushf
sbb
test
mov
fisttp
fild
clc
dec
(bad)
push
add
cmp
ds
sub
lock
dec
xor
and
scas
pop
jno
add
mov
(bad)
(bad)
(bad)
call
fisttp
add
test
inc
ins
rcr
stc
cmc
cmp
adc
(bad)
(bad)
inc
clc
xor
mov
adc
and
(bad)
sbb
mov
(bad)
(bad)
(bad)
sbb
imul
add
(bad)
das
pop
out
jns
xor
sbb
(bad)
(bad)
jmp
jl
data16
out
retf
mov
in
xor
ficomp
pop
loop
or
call
push
and
or
lea
jle
std
pop
add
push
std
inc
repz
(bad)
and
cmps
cmp
lds
mov
(bad)
jle
test
(bad)
cmp
aad
test
int3
sbb
leave
cmp
pop
lock
(bad)
xchg
movs
push
cmp
xchg
(bad)
(bad)
jmp
(bad)
adc
pop
ins
cwde
pusha
icebp
xchg
add
pop
in
daa
pop
je
fidivr
pop
jns
push
cld
inc
mov
test
xchg
sub
mov
mov
(bad)
(bad)
push
mov
jle
(bad)
ret
mov
les
aas
bnd
add
out
push
cmp
add
(bad)
(bad)
jmp
inc
mov
mov
lods
xchg
js
test
(bad)
(bad)
(bad)
mov
sbb
sbb
mov
aas
scas
jno
or
dec
or
shr
push
retf
(bad)
(bad)
call
xchg
jge
sub
pop
xlat
mov
and
pusha
pop
(bad)
and
call
cmp
xchg
pop
mov
icebp
and
push
add
das
mov
lds
outs
or
int
sbb
xor
repnz
ins
jnp
sar
(bad)
inc
int3
js
(bad)
pop
push
fld
fsub
jmp
pop
xor
icebp
cmp
(bad)
(bad)
dec
es
xchg
jmp
add
push
xchg
add
mov
cli
js
cli
test
(bad)
(bad)
(bad)
in
mov
sbb
test
mov
mov
repz
sub
sbb
(bad)
(bad)
inc
(bad)
sub
sub
xor
fldcw
jno
fist
das
sbb
(bad)
dec
or
cdq
jns
dec
popa
dec
pop
inc
pusha
and
les
lods
ror
pusha
mov
jp
sbb
mov
test
(bad)
call
pusha
cdq
fsubr
mov
mov
xor
sar
cmp
(bad)
fild
(bad)
(bad)
(bad)
(bad)
js
clc
or
jle
jecxz
cmp
xor
sar
jbe
dec
add
arpl
and
cmp
or
cmp
push
std
(bad)
jp
inc
in
imul
clc
sbb
sub
(bad)
inc
stos
test
jp
out
leave
push
add
mov
pop
or
dec
(bad)
(bad)
(bad)
jmp
push
dec
xchg
pushf
in
add
sub
push
fwait
jnp
leave
arpl
mov
cmp
(bad)
(bad)
inc
call
dec
jmp
mov
dec
mov
mov
mov
movs
cwde
jbe
(bad)
(bad)
push
push
xchg
jge
mov
cmove
inc
jge
or
dec
sahf
mov
mov
xlat
mov
shr
data16
lea
ret
(bad)
(bad)
inc
fadd
add
pop
inc
xchg
adc
push
xchg
rdmsr
pop
dec
iret
mov
(bad)
mov
das
xor
mov
inc
aas
sbb
or
cs
mov
arpl
xor
rcr
pop
mov
sbb
(bad)
(bad)
(bad)
(bad)
mov
es
loop
xchg
das
jge
jl
into
ins
sbb
sub
pop
xchg
cwde
neg
lods
(bad)
inc
lea
in
adc
scas
jmp
clc
outs
push
call
bound
xor
pop
cmp
and
jo
(bad)
(bad)
jmp
add
mov
mov
cmp
in
xchg
and
add
adc
jnp
mov
(bad)
(bad)
(bad)
jmp
sbb
lahf
dec
popa
pop
popa
cmp
add
retf
pop
sbb
nop
cmp
pop
and
and
dec
xchg
fadd
jbe
cwde
pop
inc
push
jb
sub
sub
(bad)
(bad)
mov
les
xor
scas
fs
adc
mov
mov
dec
mov
pop
fadd
scas
mov
stos
xchg
lock
(bad)
pop
loope
jle
cmc
xor
(bad)
les
pop
xor
scas
into
jl
movs
mov
pop
icebp
jmp
ins
int
(bad)
dec
and
mov
jg
sub
call
sub
in
mov
mov
pop
cld
inc
sub
adc
leave
xor
push
js
xlat
clc
mov
call
in
(bad)
(bad)
(bad)
dec
cmp
fisttp
jl
and
loop
pop
mov
pop
sub
(bad)
(bad)
(bad)
(bad)
clc
sub
or
mul
push
imul
adc
add
test
xor
fbld
(bad)
(bad)
(bad)
call
fwait
(bad)
cmc
test
(bad)
mov
jge
mov
add
sbb
push
mov
test
(bad)
push
dec
push
mov
jmp
cdq
cmc
daa
stos
(bad)
jne
mov
addr16
mul
(bad)
iret
xchg
push
cmp
cmp
(bad)
call
inc
(bad)
ficomp
pop
js
push
jnp
aaa
iret
jo
inc
ret
(bad)
(bad)
(bad)
call
push
loop
mov
sbb
mov
call
loope
test
mul
call
mov
and
mov
imul
push
ja
cli
or
inc
imul
(bad)
(bad)
inc
jg
test
daa
gs
into
lods
jge
xchg
pushf
loopne
cmp
int3
ins
in
inc
addr16
push
(bad)
(bad)
(bad)
call
cmp
xchg
cdq
sub
mov
push
test
push
push
int3
and
jmp
pop
push
shr
inc
jecxz
sub
fldenv
push
dec
scas
sbb
das
(bad)
(bad)
(bad)
mov
loopne
jecxz
add
outs
jae
loope
mov
inc
out
sbb
loopne
mov
sub
xchg
lahf
shl
(bad)
(bad)
jmp
(bad)
fadd
in
mov
(bad)
dec
and
xor
test
(bad)
(bad)
(bad)
fimul
test
pop
push
dec
outs
xor
jg
push
xchg
popa
cmps
enterw
sub
sahf
push
xor
inc
push
jo
cmp
sbb
and
data16
je
ffree
dec
arpl
outs
outs
mov
(bad)
(bad)
jmp
sbb
std
jg
push
sbb
(bad)
pop
imul
push
fisubr
movlhps
(bad)
(bad)
jg
lahf
mov
mov
cmp
sahf
inc
repz
retf
pop
xchg
dec
in
and
jmp
adc
jle
dec
pop
dec
ins
test
popa
iret
test
mov
(bad)
(bad)
(bad)
inc
mov
mov
int3
sub
add
ds
sub
mov
and
(bad)
(bad)
(bad)
dec
cmp
inc
mov
mov
xlat
outs
and
sub
mov
mov
dec
mov
xor
out
jecxz
adc
nop
jp
mov
(bad)
int3
sub
(bad)
(bad)
jg
pop
mov
imul
je
xor
inc
test
cli
shr
sub
(bad)
jmp
xor
cmp
(bad)
jmp
sbb
inc
movs
fs
lods
pop
push
adc
cdq
nop
dec
ss
push
shl
ja
call
test
jle
adc
lods
pop
and
leave
inc
jecxz
xor
dec
push
cmc
inc
adc
stc
loop
ss
lods
and
(bad)
(bad)
jmp
add
pop
in
and
(bad)
bound
ss
push
(bad)
aad
out
xchg
pushf
push
out
call
sub
(bad)
jmp
dec
inc
in
inc
scas
or
repz
push
(bad)
(bad)
call
pop
sbb
outs
mov
inc
lods
in
pop
int
outs
ret
mov
shl
mov
mov
push
push
jp
mov
dec
fisubr
in
dec
cmp
adc
or
ja
xchg
cmp
pop
loop
ds
mov
js
je
mov
int3
xchg
clc
add
stos
(bad)
(bad)
dec
pop
scas
cmp
iret
scas
idiv
pop
test
(bad)
jmp
movs
jge
int3
cmps
test
mov
sbb
(bad)
sti
push
cmps
or
pop
xchg
cmp
mov
imul
rol
and
sbb
sbb
arpl
test
mov
or
enter
pusha
shl
std
adc
jp
jge
mov
dec
(bad)
jg
dec
dec
dec
arpl
mov
inc
pushf
repnz
xor
idiv
test
out
movs
loop
rcl
shl
jmp
popa
dec
inc
scas
imul
xchg
jo
(bad)
push
fsubr
(bad)
(bad)
(bad)
dec
or
jns
stc
xor
ror
aad
pop
jae
xchg
mov
dec
inc
inc
sub
jmp
imul
mov
mov
cmc
or
xchg
xchg
mov
(bad)
(bad)
(bad)
call
aad
dec
mov
shl
jo
mov
leave
xor
clc
fistp
into
mov
(bad)
(bad)
call
jae
cmp
cmps
out
fst
movs
mov
mov
iret
xchg
lods
les
out
call
push
mov
xor
xchg
cmp
loopne
sub
test
clc
pop
(bad)
(bad)
(bad)
call
shr
fiadd
cmp
std
fist
push
ins
lock
mov
(bad)
(bad)
call
xchg
mov
dec
pushf
or
add
sub
cmps
in
shr
push
stc
cmp
call
cli
xchg
ins
call
jbe
jno
(bad)
(bad)
inc
pop
in
cld
fiadd
sub
addr16
mov
sbb
sbb
int
jnp
out
(bad)
(bad)
(bad)
jmp
imul
int
rcl
(bad)
mov
xchg
not
ins
or
mov
dec
sbb
mov
push
imul
xchg
mov
dec
push
add
out
ins
(bad)
(bad)
(bad)
jg
cld
xor
loope
call
popf
ins
dec
cmp
repz
push
imul
in
xchg
stc
or
fwait
add
cmp
arpl
push
stos
popa
ret
adc
ret
(bad)
(bad)
jmp
or
jp
jae
scas
cwde
sbb
push
dec
jmp
addr16
je
movs
(bad)
(bad)
(bad)
(bad)
jge
das
or
(bad)
mov
mov
inc
jno
sub
test
imul
das
cli
(bad)
inc
shr
and
outs
mov
test
push
test
cmp
cmp
jmp
call
popa
test
and
xlat
sahf
out
shl
in
gs
xchg
mov
data16
lahf
pop
das
popa
nop
mov
inc
dec
(bad)
test
mov
mov
in
hlt
sub
add
pop
cmps
xchg
das
dec
mov
push
cli
pop
ja
test
inc
rol
call
adc
fld
add
xchg
and
(bad)
(bad)
(bad)
jg
inc
push
cmp
jns
add
into
xchg
add
inc
aad
in
ds
mov
mov
and
cmc
pop
retf
hlt
add
mov
push
(bad)
(bad)
(bad)
inc
and
jmp
adc
pop
scas
sar
faddp
jmp
dec
pop
fisubr
das
adc
or
xchg
fnsave
(bad)
(bad)
(bad)
jmp
mov
ror
shl
mov
pop
jbe
repnz
das
mov
adc
leave
rcr
ret
dec
push
repnz
or
dec
std
jno
sbb
dec
lahf
stos
push
cld
inc
dec
aad
xchg
ret
cwde
int
xor
dec
outs
lock
cmp
je
jb
xchg
pop
cmc
fwait
aaa
mov
loopne
fcom
ret
mov
pop
jle
or
dec
scas
and
push
xchg
outs
ss
retf
(bad)
or
in
(bad)
mov
push
inc
xor
jbe
(bad)
into
int3
(bad)
std
mov
sub
(bad)
(bad)
dec
dec
call
je
in
jmp
mov
jnp
cdq
jp
cmc
xor
rcl
or
out
cli
call
mov
mov
(bad)
pop
push
clc
(bad)
(bad)
mov
pop
pusha
xor
xchg
mov
jne
mov
push
mov
ret
pop
add
mov
add
(bad)
jmp
xor
adc
add
sbb
nop
add
lea
sbb
call
mov
mov
add
jns
pushf
mov
out
mov
inc
push
fnstsw
aad
ret
xchg
jo
jge
lods
(bad)
jg
(bad)
sub
mov
pushf
mov
loop
(bad)
sar
jno
fnstsw
adc
dec
es
out
xchg
lock
out
ja
jns
in
add
stos
add
ret
stos
inc
jmp
inc
mov
mov
pop
and
(bad)
(bad)
jmp
pop
mov
shr
xor
jl
dec
jge
mov
dec
enter
dec
imul
pop
sub
cld
dec
mov
in
sbb
push
pop
rcl
clc
(bad)
fadd
mov
inc
jle
cmps
xchg
and
js
cmc
sub
cmp
(bad)
(bad)
jg
js
jl
and
and
in
xchg
in
xchg
or
cmp
mov
cmp
data16
jae
not
mov
and
mov
pop
push
gs
repz
fst
(bad)
(bad)
(bad)
push
sbb
push
xor
pop
mov
jmp
adc
mov
(bad)
retf
loopne
(bad)
call
test
mov
jle
sub
(bad)
push
es
lods
sbb
int
out
add
(bad)
call
rol
sbb
clc
inc
push
or
xor
push
das
clc
(bad)
(bad)
out
lahf
fmul
retf
(bad)
adc
movs
imul
(bad)
(bad)
jmp
add
mov
int
hlt
xchg
xchg
fdiv
add
idiv
jmp
(bad)
cmps
dec
xor
cld
pushw
xchg
push
pop
test
(bad)
(bad)
inc
jl
or
mov
jg
cmps
xchg
stc
imul
jb
inc
adc
pop
jns
jg
call
movs
test
sub
push
push
xchg
mov
cli
and
inc
(bad)
(bad)
call
dec
push
das
sub
cmp
repnz
sbb
push
sub
in
jg
out
in
adc
stos
(bad)
jmp
inc
dec
xor
xlat
lods
scas
shl
jp
ins
retf
inc
add
push
(bad)
(bad)
(bad)
(bad)
jg
cmp
xchg
xchg
shl
lds
dec
cmp
loopne
retf
cmps
rcl
outs
xchg
mov
jecxz
xchg
rcl
(bad)
(bad)
(bad)
inc
bound
div
xchg
fabs
dec
aad
leave
or
out
lahf
jmp
call
xor
popf
or
jle
and
cwde
jecxz
repz
mov
(bad)
(bad)
(bad)
fimul
lods
pop
mov
jle
jb
cwde
ret
inc
jecxz
and
mov
daa
cdq
popa
mov
(bad)
(bad)
(bad)
cli
(bad)
dec
ss
sti
loopne
xor
jge
in
stc
push
pop
mov
test
mov
pop
jbe
pop
(bad)
(bad)
(bad)
push
xchg
mov
(bad)
mov
out
lods
retf
ret
bound
into
jns
push
jmp
sahf
out
rcr
mov
sub
(bad)
and
jmp
loope
sbb
(bad)
(bad)
(bad)
push
cmp
cmp
lahf
movs
mov
lods
out
std
stos
fs
mov
xchg
cwde
rcl
int3
sub
popa
mov
fdiv
cmps
jno
mov
mov
pop
cmc
xchg
xchg
push
mov
adc
call
repnz
sub
jne
xchg
fcomip
dec
mul
retf
test
add
xchg
aaa
push
and
and
mov
(bad)
out
inc
inc
dec
and
dec
pop
cmp
shl
jmp
add
xchg
sbb
aam
in
xchg
mov
jge
xor
or
shr
iret
mov
iret
pushf
xchg
rcl
mov
leave
cmps
(bad)
(bad)
(bad)
cld
sbb
mov
dec
sub
je
or
ins
psrlq
(bad)
dec
push
pop
aad
push
adc
movs
repnz
loop
jbe
xchg
lods
xor
adc
lock
outs
cli
inc
retf
out
ret
mov
jnp
xchg
test
xor
rcr
out
adc
call
mov
imul
add
ss
dec
dec
test
xor
push
mov
(bad)
(bad)
(bad)
out
pushf
out
out
(bad)
dec
sub
repz
mov
rcr
(bad)
aam
sbb
outs
cli
(bad)
jmp
les
cmps
cdq
mov
sbb
push
cmp
jo
and
sbb
dec
jecxz
inc
repnz
rol
pop
mov
add
scas
push
retf
inc
in
mov
jno
or
arpl
mov
push
dec
pop
rcr
ds
pushf
in
sub
fmul
(bad)
(bad)
(bad)
(bad)
jmp
mov
or
xor
out
test
stos
and
mov
leave
bound
jmp
cli
dec
rcr
sub
data16
dec
dec
xor
push
xor
jne
(bad)
(bad)
(bad)
inc
pusha
push
lods
das
and
fdiv
sbb
lods
push
sbb
das
xchg
push
lock
pop
(bad)
(bad)
(bad)
jmp
bound
(bad)
loop
fsubr
mov
xchg
dec
(bad)
cmp
xchg
push
xor
jecxz
sub
jae
(bad)
(bad)
inc
xor
cmps
js
or
add
inc
pop
aas
in
out
repz
and
test
hlt
sbb
adc
mov
mov
jp
(bad)
call
div
ret
ficom
push
xchg
dec
push
mov
adc
xor
(bad)
(bad)
(bad)
inc
ret
nop
stc
pop
(bad)
adc
inc
cli
adc
loopne
in
js
mov
inc
inc
pop
mov
jmp
inc
out
repz
push
pop
push
inc
pop
push
test
loopne
in
pop
or
mov
(bad)
(bad)
(bad)
jmp
pop
xor
jmp
xor
xor
xchg
ja
xor
std
mov
dec
mov
call
es
(bad)
sti
jmp
sti
lahf
imul
in
out
std
out
(bad)
(bad)
(bad)
inc
adc
inc
dec
jecxz
adc
push
(bad)
jno
movs
leave
and
add
(bad)
cmp
xchg
sbb
add
nop
ds
in
fs
popf
daa
xchg
test
(bad)
call
(bad)
scas
pop
xchg
sbb
enter
(bad)
jmp
rol
push
pop
jp
dec
pop
pop
xor
test
in
nop
mov
push
stos
(bad)
(bad)
(bad)
inc
ret
dec
idiv
out
inc
xchg
popf
jno
je
push
mov
mov
mov
out
dec
(bad)
pop
icebp
jmp
bound
add
cmps
mov
mov
xchg
jnp
mov
push
icebp
stc
adc
int3
sub
adc
add
loopne
xacquire
faddp
fistp
dec
pop
sti
inc
jmp
es
(bad)
inc
push
sub
arpl
dec
loope
add
mov
mov
mov
(bad)
(bad)
std
in
dec
mov
sbb
add
xor
cmps
mov
je
xor
cmp
pop
leave
push
call
js
in
mov
(bad)
call
in
jmp
enter
mov
cwde
outs
cmps
xchg
iret
push
inc
or
add
pop
std
outs
data16
dec
and
jmp
sar
call
cmp
lods
std
ficom
jno
pop
inc
xchg
ret
out
int3
dec
bound
(bad)
call
mov
lods
ficomp
pushf
add
outs
je
in
repz
ss
(bad)
(bad)
inc
push
ret
sub
(bad)
in
cmc
daa
fistp
adc
jmp
pop
shl
xchg
add
js
jmp
fnstenv
sub
inc
rcl
xchg
push
cs
mov
ret
rcl
dec
nop
imul
js
mov
sbb
adc
sub
(bad)
call
mov
mov
les
jge
push
xlat
ret
popa
sar
(bad)
(bad)
in
data16
xchg
dec
int
mov
enter
or
fiadd
dec
(bad)
(bad)
push
sar
mov
les
add
stos
aad
and
adc
rcr
jnp
popf
out
lahf
std
(bad)
(bad)
call
jbe
inc
daa
push
or
jmp
mov
or
rol
mov
out
pop
add
cmp
dec
push
fisubr
fmul
mov
add
mov
inc
mov
and
adc
pusha
stos
mov
je
mov
jg
jmp
pushf
jno
lds
scas
fiadd
ja
inc
repnz
sub
in
jno
(bad)
(bad)
(bad)
inc
(bad)
repz
pop
and
lds
jle
loop
hlt
sub
inc
ret
sahf
rol
jmp
mov
push
xchg
inc
iret
mov
xchg
sub
sub
cmp
cmp
jmp
cwde
in
dec
mov
cmp
call
(bad)
(bad)
(bad)
mov
inc
sub
xlat
js
sbb
fwait
ret
scas
jbe
xor
push
add
retf
cld
lds
(bad)
cli
mov
push
xchg
imul
or
dec
add
adc
pop
loop
dec
(bad)
(bad)
(bad)
inc
sar
inc
imul
jns
retf
mov
gs
test
(bad)
movs
cmovg
jbe
gs
repnz
push
test
test
(bad)
jmp
dec
jae
imul
jmp
hlt
ficomp
or
sar
imul
(bad)
(bad)
cli
push
dec
add
mov
out
test
es
cmp
jmp
stos
inc
add
mov
jmp
pop
test
in
pop
push
xor
dec
shr
int3
cwde
add
xor
je
jp
outs
mov
ror
retf
(bad)
inc
cmp
mov
pop
xor
daa
aas
mov
mov
inc
push
pop
(bad)
jmp
pop
lahf
dec
sbb
sub
inc
cld
movs
out
push
mov
ret
call
ss
inc
mov
jg
out
jno
pop
pop
repnz
sar
pop
(bad)
jmp
fadd
jg
pop
in
repnz
mov
mov
xor
mov
fadd
(bad)
(bad)
dec
test
mov
push
imul
test
pop
add
popf
push
(bad)
(bad)
(bad)
fstp
movs
fdivr
xchg
call
(bad)
ins
test
push
sar
jmp
pop
jae
sub
mov
in
int
pcmpgtd
cwde
(bad)
(bad)
(bad)
jg
dec
adc
sub
cwde
scas
ds
call
add
montmul
cmps
xchg
add
(bad)
call
jle
es
adc
or
das
push
ja
cmp
add
das
push
repnz
(bad)
(bad)
(bad)
jmp
add
inc
movs
loope
(bad)
adc
out
(bad)
mov
mov
scas
cmp
xor
and
in
(bad)
cdq
repnz
arpl
adc
lahf
jo
push
pop
js
pushf
fs
sub
(bad)
(bad)
call
bound
or
test
aam
or
pop
lods
imul
(bad)
(bad)
(bad)
call
cmp
xchg
mov
sbb
test
pop
repnz
sub
es
sbb
(bad)
(bad)
(bad)
push
sbb
lods
cmp
hlt
add
adc
sysexit
mov
sti
mov
push
cmp
(bad)
(bad)
(bad)
jmp
xor
aad
push
retf
rol
rcl
cmps
mov
jns
les
jnp
call
inc
sbb
xchg
je
sbb
xchg
test
out
mov
xchg
fsubr
ror
imul
push
xor
pop
ds
jb
daa
ret
pop
gs
aam
fisub
cld
(bad)
(bad)
(bad)
jle
out
dec
mov
movs
shl
int3
ror
loop
cmp
inc
xor
scas
enter
(bad)
(bad)
inc
test
outs
adc
push
mov
cli
daa
mov
dec
push
popf
mov
retf
(bad)
(bad)
(bad)
dec
mov
fucom
fist
mov
nop
inc
xchg
inc
adc
movs
leave
and
fcmovne
(bad)
(bad)
(bad)
jmp
loop
setns
sbb
cmc
mov
inc
ins
fisttp
mov
into
jae
lock
out
sar
cli
(bad)
lock
dec
gs
fimul
not
in
add
sahf
(bad)
(bad)
push
shl
jmp
dec
push
xor
loope
jmp
add
fs
xor
(bad)
(bad)
jmp
and
jae
shl
sub
pop
repnz
sub
fwait
push
(bad)
(bad)
(bad)
push
cmp
adc
inc
sbb
or
in
rcr
mov
loop
pop
retf
ficomp
jbe
pop
std
stos
xchg
cdq
cmps
dec
jle
nop
cmp
jecxz
call
loopne
cwde
(bad)
(bad)
(bad)
call
int
sbb
mov
push
iret
icebp
ret
jmp
fidivr
(bad)
lods
fwait
pop
cmp
(bad)
(bad)
(bad)
inc
mov
dec
jo
in
repnz
bound
out
stc
mov
mov
jg
push
(bad)
fld
hlt
pop
jne
jno
add
push
adc
call
loope
adc
fdivr
fnstsw
sbb
mov
sbb
mov
(bad)
dec
pop
jge
lock
inc
jno
jecxz
jno
cmp
pop
sub
xchg
shl
sbb
or
clc
sbb
xor
inc
call
push
call
jmp
cmp
shl
mov
adc
mov
adc
sbb
fcomip
je
ds
inc
shl
push
sub
or
(bad)
(bad)
inc
(bad)
inc
fld
or
in
jbe
dec
xchg
mov
out
adc
cwde
ja
pop
daa
(bad)
(bad)
(bad)
call
test
add
sub
dec
or
inc
inc
inc
mov
xor
dec
ret
sti
in
(bad)
sar
(bad)
dec
out
adc
mov
jne
push
mov
test
lods
(bad)
dec
lods
inc
(bad)
jmp
int3
mov
mov
or
adc
pop
test
lods
xchg
mov
or
(bad)
(bad)
(bad)
jl
inc
(bad)
movs
jle
cld
data16
inc
sbb
mov
cmps
in
sbb
fdiv
arpl
call
sub
xchg
dec
in
dec
cmp
add
sub
xor
mov
(bad)
fcomip
mov
add
xchg
inc
pop
shr
stos
ja
and
stos
jmp
or
dec
pushf
and
mov
iret
fcomp
xchg
sbb
jge
fadd
(bad)
(bad)
(bad)
inc
bound
sahf
mov
push
retf
fwait
xor
mov
ja
pop
and
xchg
xor
(bad)
(bad)
(bad)
jmp
xchg
cld
inc
cmp
es
fsub
xor
add
adc
(bad)
push
jo
inc
shr
out
(bad)
(bad)
call
scas
fdivr
pop
mov
jmp
push
pop
sbb
or
fnsave
and
pop
dec
repz
call
ret
retf
push
cwde
(bad)
repz
sbb
pop
popa
inc
retf
repz
jmp
jns
mov
icebp
dec
data16
cmp
pop
je
xchg
adc
dec
xor
jg
ss
sbb
stos
push
fldl2t
(bad)
jno
scas
adc
mov
inc
and
pop
arpl
in
pushf
dec
lahf
mov
setbe
(bad)
(bad)
jmp
dec
adc
dec
push
bound
adc
jmp
jno
les
(bad)
(bad)
(bad)
jmp
mov
pop
jbe
mov
hlt
adc
add
adc
adc
outs
repz
add
mov
(bad)
(bad)
call
lods
pop
cmp
bound
sub
lods
shl
leave
mov
dec
outs
imul
push
lock
icebp
ja
inc
(bad)
(bad)
fnstenv
fcomip
inc
and
bound
dec
mov
call
and
push
dec
pop
mov
push
or
mov
(bad)
(bad)
mov
and
cmps
push
xchg
outs
rcl
jmp
jmp
mov
(bad)
(bad)
(bad)
jle
mov
mov
retf
fcmovb
or
xor
fst
cmp
(bad)
dec
pusha
push
lds
sbb
addr16
add
dec
push
scas
clc
dec
cmp
(bad)
call
cmp
into
sahf
(bad)
jnp
test
push
mov
xor
inc
dec
shl
sub
dec
add
pop
in
pusha
retf
add
pop
inc
gs
loope
(bad)
dec
ins
xlat
das
mov
mov
test
push
ror
push
mov
call
mov
rol
in
jg
cmps
dec
mov
jne
div
mov
inc
add
pop
push
cmps
test
lahf
(bad)
xchg
ins
pop
and
jnp
ja
mov
test
aas
push
pop
ins
repnz
pop
ret
mov
cwde
imul
stos
inc
loop
aaa
push
es
cmp
cmps
imul
(bad)
mov
stos
(bad)
stos
rcl
inc
rcl
pop
(bad)
sbb
shl
push
(bad)
(bad)
(bad)
inc
pop
sar
stos
mov
les
ror
jecxz
push
js
movs
movs
cmpps
(bad)
idiv
(bad)
(bad)
(bad)
mov
xchg
cmps
push
push
mov
xor
push
xchg
in
mov
inc
sbb
mov
out
and
(bad)
(bad)
fistp
push
fild
(bad)
or
push
fwait
(bad)
xor
sbb
call
in
popf
ins
pop
(bad)
cmps
sub
clc
push
inc
into
stc
hlt
mov
mov
(bad)
(bad)
mov
jle
xchg
pop
inc
sbb
aaa
call
outs
sbb
cmp
ret
push
(bad)
bound
mov
out
(bad)
pop
rcl
xor
(bad)
call
mov
in
mov
mov
sbb
(bad)
(bad)
call
xchg
movs
aam
and
xchg
sub
mov
dec
pushw
push
aaa
out
shl
mov
pusha
cwde
fistp
movs
push
mov
xlat
mov
push
(bad)
pop
fdiv
sub
fsubr
dec
loopne
repz
(bad)
(bad)
dec
sbb
xchg
imul
adc
out
mov
(bad)
loop
jne
data16
and
(bad)
(bad)
(bad)
(bad)
mov
inc
pop
into
mov
(bad)
or
fsqrt
popa
ja
mov
int3
call
(bad)
(bad)
(bad)
(bad)
out
popf
(bad)
jge
pop
loopne
mov
inc
inc
adc
sbb
dec
sti
mov
in
rcr
dec
xchg
or
js
mov
dec
cmp
cld
fsin
imul
sti
mov
retf
lock
add
jecxz
push
and
lea
ja
add
xchg
popa
mov
mov
sub
(bad)
call
mov
mov
scas
fisttp
rcl
sbb
jmp
cli
sub
mov
imul
imul
fcos
(bad)
dec
cs
jecxz
jmp
(bad)
push
nop
sub
or
(bad)
(bad)
(bad)
inc
xlat
or
aam
scas
xor
sti
int3
pop
test
xchg
stc
dec
int
popf
mov
rol
mov
sahf
inc
sbb
push
jl
adc
in
add
test
add
mov
mov
cmp
pop
add
xor
or
mov
repnz
mov
pop
add
outs
or
pop
aaa
sub
pusha
icebp
outs
pop
cmc
mov
(bad)
dec
dec
(bad)
jmp
add
inc
jbe
mov
add
pusha
cmps
div
adc
pushf
xchg
pop
(bad)
(bad)
(bad)
dec
inc
test
inc
bound
and
in
fsubr
int3
add
fist
or
inc
pop
(bad)
cmc
dec
cmp
push
and
test
mov
jmp
inc
cmp
in
iret
out
test
iret
mov
hlt
mov
std
stc
in
add
neg
ds
push
shl
mov
pop
push
cmp
(bad)
fcomip
(bad)
ret
ins
add
loop
neg
in
and
xchg
jle
(bad)
(bad)
push
popa
mov
jmp
iret
mov
cmp
sar
sub
test
mov
mov
(bad)
dec
pop
mov
scas
inc
mov
shl
(bad)
(bad)
(bad)
jmp
bound
in
jmp
sbb
lea
dec
sbb
stc
or
mov
(bad)
(bad)
(bad)
jmp
inc
push
inc
sbb
hlt
push
inc
cdq
fiadd
(bad)
(bad)
mov
gs
(bad)
jg
or
mov
test
pop
stos
xchg
scas
adc
addr16
and
pop
cmp
xor
jno
stos
aam
sub
jmp
stc
(bad)
push
xchg
sbb
(bad)
(bad)
inc
pop
mov
test
jmp
mov
add
fld
xchg
or
add
loop
outs
push
and
cmp
or
or
(bad)
jmp
hlt
out
test
fiadd
push
jge
lahf
push
mov
sbb
sar
inc
aad
inc
rcr
outs
(bad)
(bad)
(bad)
inc
jne
jne
movs
xor
mov
jb
xchg
rcr
dec
adc
lods
pop
push
xchg
dec
add
(bad)
(bad)
jmp
or
ds
into
and
pop
mov
cmps
cld
in
xchg
or
mov
add
cmp
cmp
(bad)
push
test
aaa
inc
or
cmp
stos
imul
es
inc
lock
cmp
sbb
std
mov
pushf
dec
mov
(bad)
mov
adc
add
mov
jmp
js
(bad)
cmp
adc
loope
cld
call
ret
push
cmc
cmp
test
outs
adc
(bad)
fild
sbb
les
lds
std
xchg
sbb
(bad)
(bad)
(bad)
jmp
jle
mov
and
cmps
mov
and
retf
dec
iret
jmp
leave
jmp
(bad)
inc
pop
and
cmc
test
inc
pop
out
and
adc
mov
pop
inc
popa
fiadd
loopne
mov
iret
or
lods
jbe
repz
test
scas
cli
call
cs
arpl
xor
scas
or
jmp
(bad)
(bad)
jmp
jno
sahf
jae
sub
mov
hlt
stos
mov
mov
or
(bad)
(bad)
(bad)
(bad)
mov
daa
fwait
arpl
retf
aam
mov
jmp
mov
add
(bad)
(bad)
(bad)
out
xor
pop
call
cdq
mov
push
and
add
loope
mov
push
fst
(bad)
(bad)
call
mov
mov
jno
push
xlat
adc
xor
adc
pop
push
ud1
lock
add
(bad)
(bad)
(bad)
jmp
xor
imul
mov
mov
lds
pop
mov
hlt
pop
mov
(bad)
inc
rcr
ret
inc
lds
push
dec
sub
jg
(bad)
(bad)
(bad)
jmp
aam
into
ret
push
pop
rcl
jge
cmp
push
(bad)
cmp
add
cmp
push
icebp
scas
push
inc
aam
ret
xor
or
js
(bad)
(bad)
dec
popa
loop
cs
dec
or
inc
cmc
mov
unpckhps
push
dec
(bad)
call
iret
mov
ins
mov
push
mov
movs
call
sar
inc
fstp
mov
(bad)
jmp
cmp
(bad)
(bad)
push
mov
pop
(bad)
xlat
ret
jo
xchg
movs
dec
shl
sbb
adc
lds
(bad)
(bad)
dec
shr
cmp
or
pusha
jno
push
lds
fist
push
push
or
inc
mov
or
xchg
lods
xlat
dec
retf
sub
popa
jg
pop
int3
sbb
dec
add
mov
sbb
sub
mov
inc
fld
test
mov
sar
pop
or
(bad)
jmp
test
sub
sbb
mov
(bad)
scas
sbb
(bad)
(bad)
dec
mov
sbb
pop
xor
std
fwait
cmps
add
inc
xchg
sar
(bad)
jmp
mov
test
les
cmp
dec
push
mov
xchg
inc
(bad)
(bad)
jg
push
jge
adc
jle
iret
jg
mov
pop
sbb
cmp
dec
mov
push
out
inc
fidivr
jge
xor
test
(bad)
(bad)
(bad)
call
sub
lea
(bad)
nop
push
jg
xchg
repz
ja
jno
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmc
sbb
stos
test
hlt
fs
add
call
xor
(bad)
nop
out
(bad)
(bad)
jmp
es
sbb
shl
push
lds
dec
or
test
add
jmp
xor
push
push
std
adc
inc
movs
cmc
pop
cmp
pop
cmp
retf
les
pushf
hlt
daa
sbb
cdq
sub
(bad)
dec
pop
nop
mov
in
(bad)
jmp
mov
mov
fst
mov
cmp
xchg
xchg
lea
mov
and
and
adc
mov
jmp
(bad)
(bad)
jns
sub
sbb
fsubr
xor
mov
dec
retf
xchg
dec
imul
push
leave
icebp
outs
mov
fdiv
push
jle
xchg
sub
cmp
(bad)
(bad)
(bad)
inc
or
jg
mov
retf
cmp
shr
add
scas
rol
dec
mov
cs
push
jmp
push
ja
jmp
js
dec
or
fidivr
mov
inc
mov
sbb
arpl
mov
mov
add
call
call
or
sub
and
fwait
cmp
cmps
int
mov
jb
(bad)
adc
(bad)
(bad)
inc
test
lock
std
cmp
xor
fnstcw
cmp
fmul
aad
ret
dec
(bad)
cmps
popf
shl
pop
inc
ret
scas
repnz
scas
movs
mov
(bad)
(bad)
(bad)
jg
adc
push
nop
cmp
loop
out
mov
(bad)
hlt
xchg
retf
sar
(bad)
(bad)
(bad)
jns
mov
jne
jbe
stos
stos
sub
jmp
sbb
pushf
loop
mov
(bad)
(bad)
jg
jae
into
gs
stos
in
mov
mov
out
inc
and
push
sar
(bad)
(bad)
call
sahf
repnz
test
scas
das
sub
hlt
outs
sbb
mov
data16
fcomip
(bad)
out
or
or
out
xchg
pop
iret
cmp
inc
mov
mov
mov
jmp
ret
das
gs
push
(bad)
fdiv
test
mov
scas
fisub
inc
mov
mov
cmp
call
out
pusha
ds
mov
test
mov
movs
add
mov
(bad)
(bad)
(bad)
call
pop
mov
adc
xor
push
pusha
clc
inc
and
aaa
jbe
pusha
sub
es
popf
fdiv
cmps
sbb
repz
retf
or
adc
fidivr
pop
(bad)
(bad)
(bad)
jl
and
push
arpl
push
adc
jmp
cli
mov
fnsave
loope
lock
(bad)
(bad)
(bad)
push
inc
aad
popa
push
and
je
pop
jp
test
ds
xor
mov
push
es
push
xchg
xor
scas
call
jmp
aad
sub
push
ja
adc
std
test
std
push
mov
cmp
sbb
pop
hlt
sub
lock
push
sbb
and
and
dec
(bad)
cwde
clc
(bad)
(bad)
(bad)
dec
stc
out
fs
and
xor
arpl
cmp
retf
sbb
out
xor
jge
sbb
(bad)
(bad)
(bad)
inc
adc
cli
xor
call
nop
or
push
es
xor
mov
and
fist
(bad)
(bad)
jmp
ret
xchg
jne
shr
pusha
cdq
jb
adc
jnp
sbb
fdivr
(bad)
(bad)
jmp
push
xchg
out
push
stc
scas
popa
xchg
(bad)
fdivp
inc
sti
rol
ror
ins
movs
loop
pop
(bad)
(bad)
push
add
cmp
cmp
jo
jge
pop
xor
xchg
hlt
bound
mov
(bad)
call
pop
mov
cmc
jp
dec
icebp
jne
test
imul
sbb
cld
out
cld
(bad)
mov
push
ret
lea
mov
fst
popf
leave
mov
push
xor
cmc
(bad)
js
mov
pop
fdiv
jle
cmps
iret
test
inc
fadd
loop
mov
movs
(bad)
jg
call
jo
mov
xchg
lods
(bad)
(bad)
(bad)
jg
icebp
jle
jecxz
ja
call
addr16
push
push
cmp
aam
sbb
leave
mov
(bad)
(bad)
(bad)
(bad)
cmp
cmp
mov
sub
adc
cwde
xor
(bad)
(bad)
(bad)
mov
fsubr
push
data16
addr16
pop
and
jne
sub
pop
dec
adc
inc
ds
bound
(bad)
mov
and
xchg
sti
fisubr
cmp
push
inc
fisub
mov
add
ret
ret
(bad)
(bad)
call
test
xor
enter
test
pop
aam
add
sbb
pop
(bad)
or
jmp
rcr
push
xlat
add
lock
(bad)
sbb
cmc
pop
(bad)
(bad)
(bad)
jmp
xchg
cmp
shr
pop
stos
stos
aad
call
inc
into
adc
mov
out
add
div
pushf
sub
(bad)
jmp
mov
jl
std
in
or
stos
adc
xchg
xlat
mov
(bad)
(bad)
(bad)
call
into
cmps
sbb
and
icebp
fwait
jle
xchg
cmc
and
cld
mov
test
test
cmp
(bad)
(bad)
(bad)
(bad)
sti
pop
jae
cmp
push
out
mov
dec
mov
or
xchg
xor
fsubr
gs
(bad)
mov
dec
rcr
js
push
push
fistp
mov
bnd
mov
mov
and
sar
call
(bad)
lods
fldcw
jg
(bad)
sti
pop
pop
sbb
dec
ret
shr
(bad)
and
movs
fisubr
mov
imul
cli
(bad)
call
fisttp
xchg
cmp
imul
sbb
out
(bad)
(bad)
call
push
push
retf
fnstcw
sub
lock
retf
push
leave
push
and
js
std
nop
clc
(bad)
fild
imul
dec
mov
push
cmp
fidiv
mov
jbe
fisttp
xchg
lahf
test
(bad)
(bad)
push
pusha
(bad)
or
push
mov
pop
call
jne
sbb
ds
xchg
in
(bad)
(bad)
(bad)
call
jge
sub
not
push
sbb
mov
xor
jg
mov
jb
mov
loope
push
mov
add
clc
(bad)
call
inc
lods
cmp
enter
mov
iret
daa
inc
or
add
lahf
fld
sub
mov
add
xchg
scas
repz
sar
jae
mov
dec
jae
xor
jg
jl
bound
(bad)
(bad)
(bad)
inc
pop
jb
jmp
test
or
add
int3
jge
aaa
lock
das
push
cmps
call
retf
push
in
out
xor
loope
loopne
fnstsw
or
inc
stc
xor
call
fucomi
rol
sbb
cmp
cmp
lds
xor
sbb
(bad)
(bad)
out
ja
push
cmps
jo
scas
push
ret
ret
jl
fsub
push
sub
(bad)
cmp
leave
sti
push
sub
stos
lahf
fisubr
(bad)
(bad)
push
sub
xor
ss
adc
mov
sbb
add
and
xor
(bad)
mov
ja
sbb
xchg
sbb
daa
in
jb
push
loop
(bad)
(bad)
(bad)
inc
mov
lods
add
and
jnp
call
inc
pop
push
inc
dec
jne
in
(bad)
(bad)
(bad)
jmp
(bad)
mov
cdq
xor
fwait
or
rcl
iret
cmp
je
push
sbb
(bad)
(bad)
(bad)
dec
div
and
push
stos
loope
inc
jne
stos
jg
or
dec
ds
fist
ds
out
cmp
retf
call
push
int
jmp
push
push
adc
pop
inc
aas
in
sahf
inc
jmp
inc
and
cli
or
mov
pusha
push
add
push
push
or
ror
test
mov
xchg
(bad)
out
cvtps2pi
mov
(bad)
(bad)
(bad)
jmp
stos
gs
mov
cdq
pop
mov
addr16
jnp
lock
mov
add
(bad)
push
xor
add
sbb
mov
(bad)
(bad)
(bad)
jmp
sbb
mov
aad
sbb
cmp
nop
test
out
cld
and
jnp
ins
loope
xor
enter
(bad)
dec
mov
(bad)
out
clc
call
sar
mov
sbb
push
adc
(bad)
sub
mov
shl
imul
test
dec
or
mov
(bad)
(bad)
(bad)
push
fdiv
inc
push
pop
jmp
mov
jmp
inc
jg
addr16
mov
dec
faddp
or
pop
xor
dec
imul
adc
jmp
sbb
into
dec
dec
(bad)
retf
fcmove
stos
ins
nop
cmp
inc
fs
ss
(bad)
(bad)
(bad)
jmp
mov
and
push
mov
mov
jg
mov
inc
cmp
sub
xchg
add
xchg
jmp
scas
add
mov
mul
les
dec
fisubr
ficom
scas
mov
das
clc
(bad)
inc
stos
arpl
paddusw
sub
(bad)
shl
(bad)
(bad)
(bad)
push
int
cmp
inc
push
cmp
or
cmc
popf
retf
dec
inc
adc
jne
std
(bad)
dec
(bad)
hlt
imul
dec
and
jns
inc
or
(bad)
(bad)
mov
pop
scas
mov
scas
cmps
data16
jg
add
mov
add
inc
mov
aaa
sbb
jne
xchg
fsub
pop
mov
(bad)
popf
cmp
inc
(bad)
adc
mov
test
dec
in
(bad)
(bad)
push
mov
mov
jnp
mov
pop
jmp
retf
popfw
xchg
stos
out
rol
lahf
push
(bad)
(bad)
(bad)
mov
add
popf
cmps
inc
inc
push
ret
add
xor
push
adc
out
or
jns
jmp
lock
sbb
xchg
cmp
mov
or
hlt
stc
or
adc
and
cmovg
mov
and
add
ret
and
pop
jecxz
(bad)
xor
(bad)
(bad)
(bad)
dec
retf
ds
ret
xchg
jecxz
scas
pop
ins
repnz
adc
push
or
dec
idiv
test
(bad)
(bad)
dec
pop
xchg
pushf
ret
cmp
fist
imul
inc
mov
sub
(bad)
in
xlat
popa
and
xchg
or
(bad)
(bad)
inc
adc
mov
(bad)
rcr
push
mov
loopne
in
adc
aad
aam
mov
jmp
dec
addr16
jg
ret
and
jno
sbb
loopne
mov
jle
fwait
pop
xchg
je
(bad)
(bad)
(bad)
(bad)
cmp
jmp
(bad)
rcr
push
adc
(bad)
and
add
(bad)
(bad)
(bad)
mov
pop
cli
mov
xchg
fnstcw
cli
xlat
and
movs
mov
bound
(bad)
dec
xlat
cmp
mov
push
scas
cmp
mov
or
add
pop
mov
retf
lock
(bad)
push
test
sub
fmul
pop
fdivrp
sub
mov
ret
(bad)
(bad)
(bad)
dec
cld
mov
lods
push
retf
mov
dec
retf
shl
xor
mov
inc
xlat
daa
cli
add
icebp
jge
daa
dec
nop
ucomiss
div
mov
dec
loope
mov
(bad)
cmp
shl
inc
add
xchg
repnz
cmp
cmp
ror
and
call
fimul
xor
call
push
nop
into
sbb
(bad)
(bad)
jmp
jp
jmp
sub
out
loop
inc
cli
adc
data16
lea
(bad)
jmp
icebp
jne
lods
push
xchg
mov
jne
mov
dec
in
(bad)
cmps
in
xchg
(bad)
(bad)
(bad)
fisub
repnz
cmps
cmc
and
or
sar
mov
push
lds
fs
pop
add
(bad)
(bad)
call
hlt
arpl
(bad)
xchg
test
stos
dec
xor
mov
pop
mov
sub
or
daa
pop
mov
(bad)
(bad)
(bad)
(bad)
(bad)
mov
out
fld
cmp
in
ja
mov
rcr
add
pop
(bad)
(bad)
(bad)
jmp
sar
adc
jl
adc
nop
dec
xor
xor
adc
sar
test
dec
pop
push
mov
sti
inc
inc
iret
add
movs
loope
xchg
and
mov
addr16
pusha
add
ins
push
dec
dec
jmp
(bad)
(bad)
call
or
cld
sub
out
jne
or
add
jb
aaa
scas
inc
aad
mov
retf
jae
jg
(bad)
call
sbb
mov
and
(bad)
in
jp
cli
cmp
(bad)
(bad)
(bad)
call
mov
(bad)
scas
push
inc
sub
adc
arpl
mov
adc
and
jnp
(bad)
mov
adc
pop
pushf
mov
pop
not
and
and
pop
out
jae
jbe
jmp
call
test
aam
(bad)
xor
mov
lods
(bad)
in
xor
push
(bad)
(bad)
(bad)
(bad)
mov
push
pop
ret
fdiv
movs
xchg
xor
mov
je
cmp
mov
jmp
cmp
mov
mov
xchg
mov
or
or
aad
(bad)
jmp
icebp
retf
ss
ins
push
in
mov
mov
pop
add
and
sar
(bad)
jg
out
cmps
dec
cmp
rcl
pop
and
push
fs
test
cmps
dec
shr
pop
xchg
pusha
cld
in
(bad)
push
mov
jge
mov
adc
das
mov
enter
(bad)
(bad)
call
jb
jnp
sti
jecxz
pop
mov
jne
dec
pop
add
jnp
dec
arpl
add
icebp
(bad)
call
mov
pusha
stc
aam
pop
xor
jg
call
push
adc
std
nop
jp
jmp
ins
(bad)
(bad)
(bad)
call
mov
jne
mov
loope
push
inc
mov
cmp
ud1
outs
or
ss
mov
(bad)
(bad)
jmp
and
xchg
mov
pop
or
mov
xlat
inc
sahf
inc
jbe
adc
out
dec
adc
add
push
imul
in
mov
jno
outs
imul
into
xchg
xchg
test
cld
(bad)
dec
fs
cmp
stos
pop
inc
adc
arpl
add
call
adc
mov
sahf
add
stc
or
dec
ret
dec
xchg
sub
mov
mov
movs
sub
ffree
add
dec
inc
cld
movs
cwde
arpl
psrlw
or
(bad)
(bad)
(bad)
push
pushf
ins
inc
push
xor
mov
in
mov
mov
dec
ss
push
or
hlt
pop
cmps
(bad)
fdivrp
(bad)
(bad)
(bad)
jmp
cmp
fmul
aaa
pop
sbb
lds
mov
loop
sub
(bad)
(bad)
call
aas
sub
mov
pop
sub
loop
jb
inc
xchg
test
mov
(bad)
(bad)
jmp
sbb
test
push
stos
hlt
mov
mov
ds
dec
mov
test
sbb
imul
sar
cmp
jp
in
push
push
add
pop
(bad)
call
popa
test
dec
aaa
imul
(bad)
(bad)
jmp
xchg
sar
mov
push
xlat
xchg
pop
lock
mov
push
js
cwde
fmulp
iret
retf
xor
cwde
(bad)
(bad)
(bad)
inc
and
ror
stos
inc
inc
mov
add
xchg
and
jecxz
mov
push
jp
sub
jmp
shr
and
add
mov
movs
shr
ins
repz
mov
(bad)
into
retf
mov
ret
push
dec
and
push
and
pop
pop
push
cmp
dec
ret
iret
repz
call
jmp
mov
les
or
jmp
ins
loop
(bad)
retf
imul
xlat
push
(bad)
es
pop
jo
cmps
aad
cli
bnd
xchg
jne
push
and
jnp
hlt
shr
(bad)
(bad)
call
mov
pop
push
shl
call
pop
inc
imul
out
out
daa
cmps
cmp
ja
and
mov
lahf
das
xor
mov
cmp
gs
inc
not
add
push
jmp
div
xchg
inc
mov
xchg
push
mov
xor
(bad)
(bad)
(bad)
call
or
xchg
inc
sub
or
aas
inc
inc
inc
aad
ds
(bad)
jmp
(bad)
fcom
call
dec
pop
ret
push
xor
fwait
cmc
adc
pop
and
ins
aam
cli
dec
push
pushf
jmp
mov
sbb
pop
(bad)
sbb
jnp
mov
mov
sbb
mov
leave
fstp
xor
mov
(bad)
sbb
cmp
(bad)
(bad)
inc
les
push
cmp
push
mov
test
add
iret
sub
push
daa
sbb
mov
loopne
pop
(bad)
jmp
std
(bad)
call
jl
cmp
jne
pop
icebp
pop
aam
cmp
frstor
test
xlat
inc
(bad)
(bad)
(bad)
push
movs
ror
cmps
sbb
inc
adc
fidiv
sbb
aam
(bad)
(bad)
call
lds
push
icebp
jp
or
add
cmp
aaa
repz
stc
sti
xor
scas
call
sbb
jae
cli
jge
outs
and
mov
push
pop
add
shr
jae
sub
lods
(bad)
inc
fnsave
jge
test
mov
dec
jne
ins
sub
(bad)
dec
inc
nop
shl
arpl
pop
mov
push
push
ins
movs
jns
int
pop
and
ds
(bad)
(bad)
(bad)
call
xor
add
cwde
cwde
rep
iret
fcomp
cwde
mov
mov
pop
sub
xchg
add
push
(bad)
(bad)
(bad)
inc
dec
lahf
mov
or
mov
xor
pop
push
mov
pop
(bad)
(bad)
call
icebp
adc
push
es
repz
ja
imul
xchg
pop
movs
push
enter
mov
jge
pusha
scas
mov
(bad)
(bad)
(bad)
jmp
shr
leave
in
movs
xchg
das
call
jl
(bad)
test
mov
(bad)
dec
xchg
push
movs
dec
es
das
ror
in
scas
adc
and
int
jo
jmp
and
pop
push
ffreep
cmp
mov
pop
cs
push
std
jmp
loop
fisttp
cmp
lods
(bad)
ret
or
xor
and
lahf
daa
aaa
fdivr
dec
adc
push
pop
out
adc
sar
dec
mov
mov
call
sar
fs
push
mov
sbb
push
sub
pop
jbe
inc
ja
(bad)
(bad)
dec
sbb
int
das
pop
sub
sub
add
push
test
push
test
or
inc
inc
ret
cmp
(bad)
call
bound
cmp
mov
and
jo
sar
(bad)
(bad)
push
cdq
out
lods
jp
fst
jge
fwait
lods
loopne
fs
push
arpl
jp
popa
jle
pop
push
jne
dec
loopne
(bad)
(bad)
call
xchg
and
mov
adc
enter
mov
inc
fsub
xchg
mov
and
mov
out
scas
cli
mov
sbb
jg
scas
jns
pop
dec
sbb
add
xchg
push
mov
mov
loope
dec
inc
sbb
and
dec
leave
fisub
(bad)
jmp
cwde
bound
es
fwait
ds
xor
loopne
mov
sub
cmp
(bad)
(bad)
push
mov
dec
fwait
adc
jl
icebp
mov
test
adc
sbb
rol
inc
mov
mov
push
mov
imul
push
mov
xchg
or
add
outs
and
lods
mov
cmp
pusha
in
(bad)
(bad)
(bad)
jmp
jmp
mov
inc
or
fdiv
ss
ror
xchg
jmp
add
(bad)
cmp
out
imul
shl
cmp
rol
jno
(bad)
sar
(bad)
(bad)
ds
sbb
iret
push
out
pushf
in
ret
aad
dec
sub
cwde
inc
mov
mov
(bad)
(bad)
(bad)
dec
scas
mov
adc
mov
and
bound
xchg
leave
pop
mov
stos
or
dec
sub
rcl
arpl
fild
repnz
(bad)
call
mov
jbe
xor
std
dec
repz
mov
sbb
lods
push
retf
fsub
push
inc
(bad)
(bad)
call
push
test
sar
inc
inc
dec
jecxz
stos
add
mov
jg
sbb
(bad)
mov
(bad)
(bad)
(bad)
jmp
pushf
jge
mov
mov
out
shl
add
jp
add
sbb
pop
das
jg
lock
imul
cmp
(bad)
(bad)
(bad)
mov
(bad)
lock
pop
xor
ret
stc
mov
lahf
aam
cli
(bad)
jmp
(bad)
(bad)
(bad)
inc
jne
adc
dec
and
aam
inc
mov
sbb
dec
xor
pop
add
mov
(bad)
(bad)
jmp
ret
gs
fsubr
sbb
int3
sub
int
pusha
push
test
jl
(bad)
(bad)
(bad)
(bad)
mov
add
dec
pop
jecxz
push
sti
cmp
aam
sar
mov
mov
xchg
in
or
sahf
mov
test
xor
loop
lea
mov
dec
cld
(bad)
in
repnz
xor
xor
call
jmp
loopne
loop
rep
and
sbb
outs
push
jb
addr16
cwde
xchg
(bad)
(bad)
(bad)
jmp
add
outs
jb
inc
or
in
sbb
pop
(bad)
lods
push
xchg
pop
(bad)
out
sbb
fwait
jl
jmp
xor
inc
mov
sbb
rol
sbb
fnstenv
js
(bad)
(bad)
(bad)
jmp
add
popf
mov
push
jae
(bad)
iret
aam
mul
sbb
mov
cld
cwde
pushf
jns
(bad)
(bad)
(bad)
(bad)
jns
jecxz
mov
cmp
cmps
call
(bad)
inc
dec
popa
adc
xor
push
jge
jbe
xlat
sub
(bad)
(bad)
push
cdq
and
es
jne
pop
xchg
mov
in
movs
arpl
xchg
fiadd
(bad)
dec
mov
(bad)
imul
mov
xchg
pushf
div
movs
push
jp
call
sub
ds
sub
push
mov
sbb
mov
xchg
sbb
mov
enter
arpl
jg
clc
(bad)
jmp
mov
jns
out
and
dec
ss
addr16
add
and
or
jmp
mov
sbb
dec
sub
cmp
push
push
mov
(bad)
sub
inc
sbb
pop
aaa
dec
ins
push
sar
ret
aaa
jne
xchg
repz
shl
nop
(bad)
(bad)
jmp
or
push
mov
enter
mov
movs
cmp
dec
retf
gs
add
cmp
add
clc
add
(bad)
(bad)
jmp
enter
add
into
loope
or
cs
mov
jbe
sbb
(bad)
call
fwait
sub
(bad)
out
push
retf
cli
mov
cmp
ja
in
retf
loopne
and
clc
sub
icebp
(bad)
push
jle
jmp
jnp
cmp
cmc
sti
xor
fs
ret
ror
pop
mov
xchg
shl
xor
xchg
sub
aad
loope
into
jmp
(bad)
(bad)
jmp
dec
in
pop
js
in
pop
rcl
and
repz
mov
repz
(bad)
(bad)
push
add
lock
sub
rcr
or
and
push
sbb
sub
(bad)
(bad)
inc
and
aaa
sub
aaa
mov
jg
xchg
push
pop
leave
adc
popa
je
pop
pop
aaa
(bad)
(bad)
(bad)
(bad)
in
(bad)
pop
imul
(bad)
adc
inc
mov
and
pop
imul
push
inc
dec
(bad)
ds
(bad)
(bad)
call
push
cmp
and
lock
sub
mov
out
cmps
inc
jp
stc
(bad)
call
enter
push
test
sub
sbb
mov
mov
in
ss
(bad)
retf
jnp
enterw
dec
pop
and
dec
aam
call
call
loope
jne
push
aam
(bad)
pop
leave
data16
icebp
xchg
mov
clc
pop
(bad)
fnstsw
inc
aas
sbb
push
ret
or
out
fdivr
(bad)
(bad)
call
sbb
ret
in
inc
test
pop
adc
ins
push
ret
fwait
pusha
mov
popa
mov
mov
add
stos
cmp
into
mov
jo
jmp
fild
sub
jle
mov
dec
push
test
mov
popa
loopne
(bad)
inc
and
jb
les
push
dec
mov
nop
jl
call
fwait
push
mov
jmp
inc
xchg
jle
repz
adc
cli
jle
and
bound
call
push
adc
fisub
cmp
cld
and
test
js
lock
(bad)
(bad)
jmp
inc
inc
dec
or
lock
test
and
push
sar
or
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
push
out
jp
shr
jno
pusha
mov
pushf
push
scas
xor
clc
push
outs
pop
xchg
dec
scas
js
(bad)
jg
mov
retf
cmp
jl
mov
and
cmp
xchg
aad
push
and
jmp
dec
aam
(bad)
call
bound
mov
lock
call
retf
aam
xor
je
mov
adc
push
fcmovb
sti
add
sbb
mov
pop
cwde
inc
dec
mov
ret
jne
bound
pop
test
inc
xchg
aaa
outs
cli
(bad)
call
push
push
inc
push
jle
repnz
dec
ror
xchg
aaa
es
sbb
(bad)
dec
sahf
jns
jns
jnp
mov
adc
pop
jmp
jno
outs
pop
inc
rol
add
test
aaa
loope
fist
mov
(bad)
out
cli
push
xor
cmp
add
xor
xchg
je
mov
cmp
push
xchg
add
je
dec
add
cmp
mov
or
jmp
mov
push
or
(bad)
(bad)
(bad)
dec
and
jmp
into
in
sub
xlat
cmp
sbb
(bad)
(bad)
push
mov
ret
imul
jns
add
arpl
or
or
(bad)
(bad)
and
pop
fs
pop
adc
ds
leave
mov
mov
bndldx
(bad)
(bad)
(bad)
(bad)
jmp
int3
ret
rcr
adc
mov
mov
mov
movs
dec
(bad)
(bad)
mov
(bad)
jmp
pusha
je
popa
rcl
stos
cmps
ficom
daa
dec
cmp
movs
adc
(bad)
fcomip
mov
inc
std
push
pop
sub
jle
jp
or
xor
(bad)
jge
pop
or
(bad)
jmp
inc
pop
nop
jmp
iret
jecxz
stos
cmp
jno
repz
js
js
(bad)
(bad)
(bad)
inc
das
mov
xchg
adc
cdq
cdq
add
adc
cld
cli
push
arpl
pop
mov
xor
mov
or
jo
xor
lods
mov
mov
fmul
mov
not
inc
pop
push
push
sar
(bad)
mov
pop
into
sub
repz
xchg
xor
or
iret
push
add
sbb
jae
iret
fld
jbe
push
fst
sar
mov
push
mov
js
(bad)
(bad)
dec
mov
mov
xor
(bad)
xchg
jp
push
(bad)
push
jp
jmp
pop
iret
outs
das
cli
(bad)
jmp
jg
shl
lahf
jl
mov
(bad)
push
add
(bad)
mov
sti
xchg
sbb
pop
adc
or
in
ret
mov
std
mov
(bad)
(bad)
(bad)
(bad)
fimul
cmp
xor
fs
xchg
jbe
mov
xor
mov
jmp
test
(bad)
push
std
hlt
into
es
sub
shl
lods
mov
add
xor
mov
(bad)
fild
(bad)
(bad)
inc
pop
pop
into
jae
jmp
jbe
xchg
fistp
ret
fdivr
mov
add
(bad)
(bad)
(bad)
push
ja
cmp
sbb
pop
aam
or
cmp
push
xor
cdq
shl
call
pop
mov
stos
mov
ror
dec
repz
call
(bad)
push
jmp
retf
mov
pushf
iret
addr16
mov
sub
fnstsw
push
out
sub
(bad)
pop
(bad)
(bad)
(bad)
call
dec
(bad)
mov
out
aam
ins
loopne
mov
mov
ins
fwait
dec
and
inc
(bad)
(bad)
(bad)
inc
sbb
fild
mov
fs
(bad)
sbb
int3
sti
ror
mov
(bad)
sbb
repnz
adc
inc
mov
or
shl
std
movs
mov
adc
dec
pushf
or
fisub
and
mov
in
fnsave
in
sub
in
xchg
(bad)
(bad)
(bad)
(bad)
mov
adc
xor
iret
mov
push
cmps
or
rcl
xchg
aas
mov
dec
xchg
cmp
sub
sbb
xchg
dec
stos
pop
dec
loope
dec
(bad)
(bad)
(bad)
(bad)
jnp
adc
movs
inc
mov
jecxz
shl
mov
out
xor
jo
push
mov
(bad)
(bad)
(bad)
cmp
pop
test
mov
mov
xchg
sub
push
hlt
pop
adc
xchg
aad
pop
sub
mov
mov
pop
sub
mov
aaa
or
push
in
mov
inc
icebp
push
jmp
sar
stos
xlat
repz
sar
and
out
ins
fsubp
hlt
push
call
cmp
or
test
stc
mov
mov
push
pop
jl
mov
(bad)
(bad)
(bad)
mov
inc
xchg
cmp
sub
jae
lock
enter
fmul
(bad)
(bad)
(bad)
jmp
add
or
in
jmp
mov
jg
mov
jecxz
(bad)
(bad)
(bad)
jg
retf
clc
sti
adc
or
adc
push
dec
daa
es
in
test
jns
(bad)
(bad)
(bad)
push
in
fmul
push
push
pop
call
(bad)
rcr
loopne
push
or
inc
movs
inc
mov
aad
mov
pusha
pushf
lock
xor
xlat
jmp
jmp
mov
test
mov
xor
js
outs
cli
(bad)
dec
dec
inc
fwait
mov
(bad)
cmp
pusha
xchg
dec
aaa
lds
jmp
(bad)
(bad)
(bad)
call
mul
out
ffree
cld
icebp
mov
xor
aad
fbld
sbb
sar
movs
test
jmp
clc
fwait
dec
xchg
out
sbb
sbb
pop
push
mov
test
xchg
stc
aam
dec
test
mov
adc
xchg
push
lods
test
or
ret
push
pop
inc
aas
dec
mov
call
jmp
retf
ja
push
pop
bound
test
jg
mov
(bad)
scas
fdivr
mov
stos
or
jo
movs
jnp
xor
add
(bad)
in
push
out
pop
add
aad
sbb
stc
mov
and
sahf
out
mov
scas
pop
(bad)
pop
cmp
jnp
xchg
loope
aas
aaa
jno
jmp
pop
cli
mov
(bad)
jmp
sub
cmc
sub
mov
mov
int3
call
sbb
xchg
loopne
fdivp
das
fist
adc
(bad)
fimul
icebp
cdq
neg
(bad)
(bad)
(bad)
inc
in
stc
jb
call
inc
ror
(bad)
mov
sub
mov
mov
(bad)
(bad)
push
add
xchg
pop
adc
dec
lahf
sar
clc
sub
call
(bad)
call
arpl
sbb
mov
(bad)
jle
fnstenv
inc
cmp
xchg
nop
jmp
fsubr
inc
or
std
sub
ret
fst
jno
mov
fadd
mov
ss
push
push
or
inc
adc
and
dec
push
adc
xor
mov
or
mov
pop
cmc
into
adc
mov
fcomp
xchg
xor
adc
mov
mov
(bad)
fisttp
jmp
arpl
mov
add
out
cs
(bad)
(bad)
clc
aad
repz
dec
sbb
shr
jp
inc
iret
push
js
scas
jle
mov
ffree
(bad)
(bad)
(bad)
dec
jecxz
sub
adc
mov
fs
popa
mov
sub
loopne
(bad)
(bad)
call
ror
xchg
jp
stc
je
push
pop
xor
jo
int3
jno
add
ud0
inc
(bad)
add
fldcw
jns
cmp
inc
mov
call
js
xchg
fidiv
add
inc
bound
mov
mov
dec
arpl
aam
inc
mov
push
(bad)
mov
pop
out
mov
pop
mov
(bad)
pushf
fcomip
(bad)
push
mov
xor
cmp
xor
scas
pop
push
fld
adc
jae
imul
mov
lods
xchg
push
push
mov
test
test
inc
test
and
loope
(bad)
(bad)
jg
jo
lahf
xchg
xor
xchg
jmp
into
out
mov
mov
(bad)
(bad)
(bad)
inc
cmp
jmp
sahf
mov
pop
mov
leave
rcr
mov
add
out
movs
xchg
stos
arpl
inc
adc
aam
(bad)
(bad)
(bad)
(bad)
cmp
je
adc
int3
and
and
or
mov
adc
xor
in
pop
data16
clc
(bad)
jmp
and
dec
call
sbb
push
cmp
inc
cwde
cld
xchg
jno
(bad)
(bad)
jmp
inc
movs
icebp
or
cmp
or
movs
fs
les
es
push
movs
(bad)
(bad)
(bad)
jmp
fdiv
retf
nop
in
into
and
leave
or
xor
and
out
fdivrp
call
and
fwait
xor
mov
mov
and
pop
fcomip
(bad)
call
cwde
jnp
sub
cwde
xchg
push
fisubr
lods
iret
in
jb
inc
xchg
jmp
mov
and
push
sbb
sti
shl
push
sub
mov
das
ins
ret
mov
cli
(bad)
inc
std
imul
pop
std
and
cmp
jle
(bad)
(bad)
call
fisttp
(bad)
fist
mov
popa
mov
test
nop
das
sar
add
mov
ret
mov
stos
ret
xor
adc
(bad)
(bad)
dec
test
leave
(bad)
xchg
loope
clc
dec
inc
mov
mov
pop
adc
test
mov
cmp
jne
add
push
push
inc
shl
xchg
(bad)
inc
in
push
pop
je
jae
add
in
dec
scas
lea
(bad)
sub
test
call
inc
int3
repz
sub
jbe
inc
mov
jae
pop
cmp
ret
dec
jne
jns
jle
xchg
cmp
mov
xchg
fcom
or
cld
mov
sbb
mov
cwde
lods
out
hlt
xchg
mov
addr16
(bad)
(bad)
inc
cmp
jne
pop
fild
and
(bad)
jmp
adc
lahf
sbb
(bad)
(bad)
(bad)
call
jbe
fst
dec
inc
and
mov
push
pop
sbb
mov
cmc
inc
outs
stos
jg
xlat
movs
call
call
test
jmp
mov
(bad)
dec
rcr
out
cmp
arpl
xor
dec
sub
and
ret
(bad)
(bad)
mov
ret
or
jmp
xchg
fidivr
mov
call
pop
inc
jl
nop
sbb
jge
stos
ja
xchg
inc
(bad)
xor
jg
cld
xchg
add
and
xchg
dec
test
(bad)
jg
sbb
sbb
mov
ror
mov
or
rcr
jmp
mov
(bad)
nop
mov
push
cmc
cwde
mov
xchg
(bad)
pop
hlt
iret
xor
adc
push
cmp
dec
xchg
(bad)
(bad)
(bad)
call
lods
shl
(bad)
xchg
xchg
xchg
movs
jnp
inc
mov
je
shl
mov
inc
mov
lds
add
(bad)
jg
cmp
mov
xchg
inc
adc
adc
adc
(bad)
(bad)
(bad)
dec
scas
cld
jecxz
jg
sub
enter
mov
adc
in
nop
xchg
(bad)
daa
pusha
push
jmp
cmps
and
pushf
ja
test
mov
mov
(bad)
jmp
xchg
ret
icebp
and
aaa
cmp
mov
pop
out
xor
(bad)
(bad)
push
pusha
inc
fwait
inc
sub
and
or
pop
fimul
cmp
neg
xor
jno
and
xchg
mov
push
imul
sub
xor
jo
mov
nop
jecxz
(bad)
(bad)
(bad)
call
sbb
dec
sub
out
jo
shld
push
mov
out
xor
fstp
cli
jmp
xlat
(bad)
sti
loop
xchg
add
lds
push
ret
ja
(bad)
(bad)
out
bound
mov
dec
movs
or
aas
popf
cmp
rol
cmc
jp
push
sbb
aaa
std
(bad)
call
test
mov
sbb
mov
sub
aad
loopne
(bad)
(bad)
jmp
adc
stc
fisubr
add
call
or
retf
jmp
jp
cwde
cdq
fs
in
scas
int
adc
push
jmp
or
(bad)
imul
imul
or
mov
adc
movs
retf
fist
call
(bad)
(bad)
(bad)
jmp
call
dec
call
leave
shr
jno
int
or
pop
push
inc
bound
dec
popa
cmc
pop
aam
or
sbb
into
je
(bad)
(bad)
(bad)
dec
test
ss
ss
push
add
cmps
imul
fs
(bad)
(bad)
dec
outs
aad
and
(bad)
aas
fdivr
inc
mov
sub
jno
and
arpl
jo
lahf
imul
(bad)
push
std
gs
sahf
adc
pop
jbe
xor
sti
outs
adc
repz
dec
bound
mov
mov
fstp
xor
rcr
mov
add
xchg
out
inc
mov
cmc
inc
mov
out
fild
rcr
and
aas
mov
mov
sbb
jae
xor
test
xchg
pop
jns
fnstsw
and
adc
(bad)
mov
inc
fcomp
pop
push
lds
pop
pop
pop
out
mov
(bad)
inc
pop
push
cli
inc
xchg
inc
pop
daa
lock
cdq
adc
fst
in
ret
fimul
sub
and
jmp
daa
out
out
sub
mov
pop
add
jmp
cmc
pop
(bad)
(bad)
(bad)
inc
sbb
mov
sbb
add
das
or
inc
xchg
add
out
hlt
sbb
(bad)
push
retf
xchg
rcl
mov
push
sub
pop
mov
es
stos
cmp
push
je
and
add
mov
cmp
pop
jne
popf
inc
sbb
retf
notrack
js
dec
mov
sub
not
nop
aaa
mov
imul
(bad)
(bad)
(bad)
jge
jg
ret
jnp
mov
das
cmps
dec
cli
mov
dec
xchg
push
pop
inc
je
int
dec
stc
enter
mov
lods
out
loop
hlt
pop
fs
fcompp
jmp
jle
xchg
(bad)
dec
lock
das
outs
xlat
es
xor
ds
inc
push
mov
pop
or
dec
stos
add
call
loop
add
(bad)
(bad)
jmp
outs
outs
or
dec
sbb
inc
int
cmp
aas
mov
and
sbb
cli
or
(bad)
(bad)
mov
ins
pop
aad
mov
movs
xor
lods
stc
jns
sub
add
daa
sub
call
push
lods
inc
or
sub
xchg
mov
lock
add
inc
nop
sbb
(bad)
(bad)
(bad)
jmp
inc
cmc
js
mov
and
lods
stos
pop
cmp
fsin
adc
in
inc
push
std
(bad)
cld
add
addr16
repz
sub
stos
jecxz
adc
(bad)
cmp
call
xchg
xchg
and
pop
(bad)
jmp
fild
aad
out
mov
out
mov
fiadd
dec
sbb
pop
cmp
sbb
retf
ss
popa
retf
xchg
adc
jmp
(bad)
(bad)
(bad)
(bad)
inc
fucomip
jns
out
mov
ret
inc
adc
clc
push
and
dec
push
mov
and
call
push
xchg
ins
movs
mov
into
lds
xor
jae
leave
or
add
pshufw
cli
inc
add
mov
int3
or
push
add
cmp
(bad)
in
call
js
addr16
sbb
stos
dec
jnp
adc
pusha
and
mov
jmp
call
dec
lods
sbb
sbb
dec
xchg
(bad)
(bad)
(bad)
jmp
sbb
cwde
out
stc
mov
mov
dec
in
jne
cmp
sub
call
mov
jae
retf
ja
pop
xchg
ins
bound
int3
inc
inc
mov
(bad)
(bad)
(bad)
fbld
cmp
pop
mov
mov
xor
retf
fst
or
repz
mov
(bad)
(bad)
call
dec
add
ret
jno
xchg
sub
cmp
mov
push
add
out
pusha
xor
fwait
pop
lock
jmp
in
ins
sub
add
imul
jne
mov
(bad)
mov
pop
sub
(bad)
inc
sbb
mov
xor
aam
movs
ret
sbb
(bad)
(bad)
dec
lods
lods
out
cmp
rcl
scas
mov
cmp
jmp
add
in
xor
mov
jnp
cmps
movs
jo
fadd
sbb
call
(bad)
push
push
aas
std
cmps
fdivp
cmp
push
sbb
aas
xchg
and
pushaw
adc
mov
jmp
iret
popf
push
jge
(bad)
cmp
ins
jp
adc
(bad)
(bad)
dec
sbb
xchg
inc
rcr
add
sub
pop
mov
add
jl
mov
mov
sti
push
ficomp
fwait
inc
pushf
xchg
in
jae
(bad)
(bad)
(bad)
jmp
call
out
rcl
lea
mov
mov
popf
nop
test
fistp
(bad)
(bad)
inc
ins
ret
enter
les
lea
mov
les
jecxz
mov
(bad)
(bad)
(bad)
dec
xchg
push
jo
ins
push
dec
loopne
push
lahf
dec
mov
lds
jno
outs
jns
loopne
and
add
cmps
clc
(bad)
jmp
jno
xchg
jne
inc
inc
fisub
xchg
cmc
movs
adc
(bad)
(bad)
(bad)
mov
(bad)
mov
jmp
retf
hlt
xchg
add
scas
(bad)
fst
push
fsub
mov
(bad)
dec
stos
mov
arpl
jb
(bad)
repnz
(bad)
cmp
cmc
mov
cmp
mov
fldenv
out
iret
(bad)
cdq
add
mov
adc
ja
sub
pop
loopne
fild
push
mov
lea
es
and
mov
shl
(bad)
(bad)
(bad)
dec
outs
inc
inc
ret
mov
loop
pop
cmp
into
(bad)
(bad)
out
jmp
(bad)
jmp
xor
sub
mov
or
jbe
mov
hlt
sbb
inc
(bad)
mov
inc
inc
pop
in
push
les
add
sahf
jno
mov
(bad)
les
out
(bad)
(bad)
(bad)
fst
add
push
inc
mov
hlt
sub
icebp
loopne
sbb
push
in
loop
(bad)
(bad)
(bad)
(bad)
mov
jbe
cmps
inc
cmps
and
mov
test
add
xor
aad
(bad)
push
inc
sti
adc
add
scas
out
sub
sub
(bad)
(bad)
(bad)
jg
out
pushf
mov
out
jo
fucom
mov
cwde
or
fistp
pop
(bad)
sahf
mov
cwde
(bad)
(bad)
dec
mov
cdq
push
call
inc
loop
fwait
out
retf
cmp
(bad)
(bad)
(bad)
jmp
or
mov
repz
push
mov
or
mov
div
pop
mov
push
jecxz
cmp
repz
(bad)
dec
xchg
ss
jae
ins
rol
loope
test
jmp
xchg
lods
(bad)
(bad)
jmp
je
cmp
out
fisubr
fbld
jnp
test
adc
ds
inc
pop
jecxz
xchg
(bad)
(bad)
(bad)
(bad)
mov
fild
mov
pcmpeqd
or
jle
pop
das
retf
pop
dec
fnstenv
pusha
retf
cmp
mov
jbe
icebp
test
mov
shr
inc
pop
(bad)
dec
(bad)
(bad)
(bad)
(bad)
clc
stos
push
scas
pop
(bad)
adc
and
test
sbb
fsubr
(bad)
(bad)
dec
and
mov
iret
or
pop
push
push
push
mov
cwde
(bad)
nop
fisttp
mov
add
out
int3
int3
or
cmc
cmp
out
test
hlt
(bad)
(bad)
(bad)
jmp
out
sub
sbb
sbb
xchg
add
mov
or
(bad)
(bad)
(bad)
dec
or
sahf
xchg
fsub
inc
outs
dec
cdq
xor
call
or
rcl
lods
mov
xlat
(bad)
(bad)
(bad)
(bad)
call
outs
pop
sub
cdq
imul
sub
scas
jge
push
cli
mov
cmp
pop
loopne
cli
cld
sbb
and
inc
add
jecxz
add
cmp
push
ror
or
sub
adc
mov
xor
fdivrp
inc
cld
or
xchg
movs
setg
popf
cli
or
into
mov
test
(bad)
dec
(bad)
push
sahf
sub
hlt
inc
jle
retf
(bad)
xor
mov
jae
lock
(bad)
(bad)
sub
(bad)
(bad)
dec
xchg
iret
ins
xchg
pop
xchg
retf
loope
mov
cmp
test
dec
mov
inc
xor
aas
scas
(bad)
(bad)
(bad)
jmp
inc
popa
sub
test
in
xor
out
jbe
shl
sub
mov
(bad)
push
ja
cmp
stc
push
cdq
out
iret
xchg
cmps
add
scas
fisubr
(bad)
(bad)
(bad)
cmp
adc
mov
or
int
stc
xchg
repz
add
sahf
jnp
or
sub
pop
and
or
mov
mov
fisttp
sbb
(bad)
sub
jecxz
sbb
or
push
jo
sub
mov
mul
rcr
push
inc
clc
and
inc
icebp
cmp
mov
or
pop
add
jmp
xchg
pusha
icebp
(bad)
(bad)
(bad)
jmp
pop
push
dec
cmps
inc
xchg
ds
cmovns
inc
faddp
push
jns
pop
inc
mov
push
call
and
jae
clc
ficom
push
push
pusha
inc
fisub
and
and
sbb
jl
and
pop
not
into
xchg
or
in
imul
cmp
sub
icebp
js
mov
xchg
dec
push
mov
ins
in
push
xchg
dec
mov
(bad)
(bad)
(bad)
clc
xchg
lods
icebp
fld
into
int
arpl
mov
neg
mov
mov
and
mov
jo
addr16
cwde
push
(bad)
(bad)
leave
xchg
xchg
push
cmp
(bad)
(bad)
call
push
dec
test
push
mov
add
scas
stc
xor
jb
or
inc
xor
push
cmp
sti
push
adc
repnz
dec
adc
lods
push
dec
jmp
(bad)
fcomip
out
dec
push
aas
or
fsubr
inc
mov
loope
jbe
into
out
stos
mov
ret
add
js
loopne
inc
sub
test
sti
push
sub
mov
(bad)
(bad)
inc
icebp
jno
pop
cs
fnsave
add
out
dec
inc
mov
cmp
jge
fs
or
stos
dec
add
loop
test
addr16
adc
sti
out
loopne
jne
out
call
loop
dec
push
cmp
sbb
(bad)
(bad)
(bad)
in
cld
push
mov
imul
or
fist
or
push
sbb
dec
test
(bad)
jg
fcomp
xor
out
ins
stos
add
pop
ret
xchg
icebp
(bad)
movs
mov
or
(bad)
call
push
jbe
adc
test
add
pop
pop
mov
inc
push
push
loopne
shl
imul
push
and
imul
xchg
or
retf
(bad)
(bad)
(bad)
dec
test
jge
mov
fiadd
in
sbb
call
cmp
pusha
adc
jmp
dec
iret
in
loope
push
xchg
xchg
and
mov
bound
(bad)
ds
(bad)
(bad)
jmp
rcr
inc
mov
xor
icebp
cmp
in
int
or
mov
dec
xor
push
pop
(bad)
mov
(bad)
call
test
add
test
dec
jae
std
push
inc
push
xor
(bad)
(bad)
cmp
lahf
xor
mov
mov
call
mov
push
and
fcomp
stos
jg
lock
(bad)
(bad)
(bad)
call
adc
mov
mov
push
sub
stos
es
rcr
inc
popa
lahf
ret
adc
fs
add
inc
aas
popa
dec
inc
daa
iret
cs
iret
jmp
(bad)
inc
push
enter
aaa
(bad)
dec
scas
test
aad
xchg
or
fwait
xor
push
std
cld
addr16
and
mov
xchg
arpl
imul
mov
aaa
int
cmps
outs
sar
push
test
dec
outs
sbb
std
mov
test
xor
data16
loopne
sbb
jmp
inc
mov
test
jmp
call
test
pop
sub
(bad)
(bad)
fidivr
jle
not
rol
mov
xchg
jmp
pop
push
mov
dec
dec
(bad)
cli
push
mov
clc
dec
hlt
cdq
jp
add
in
mov
inc
sahf
and
sub
sbb
retf
mov
pop
pop
in
pusha
stos
(bad)
(bad)
mov
adc
aad
cmp
scas
jnp
popa
(bad)
in
stos
loope
push
mov
mov
(bad)
(bad)
jmp
jo
jns
fs
sub
jmp
ss
xchg
dec
and
mov
clc
(bad)
jp
and
ret
rep
mov
sbb
pop
adc
pop
jo
jl
mov
mov
mov
push
(bad)
(bad)
mov
pop
inc
push
push
sbb
push
add
aam
mov
iret
loopne
in
int3
jg
(bad)
(bad)
inc
xchg
sub
or
push
popa
shr
cs
inc
xchg
add
mov
jmp
sbb
addr16
(bad)
mov
push
push
ss
sbb
pusha
dec
mov
mov
pop
jg
sub
(bad)
(bad)
(bad)
js
imul
jmp
and
dec
and
dec
inc
call
pushf
mov
ds
adc
jl
mov
mov
(bad)
(bad)
dec
jne
mov
hlt
jns
cmp
jo
push
or
out
mov
(bad)
(bad)
(bad)
dec
dec
dec
ins
js
cmps
adc
xor
lods
scas
or
inc
in
(bad)
push
(bad)
popf
dec
mov
dec
inc
or
loop
test
fstp
jl
addr16
inc
cmp
mov
(bad)
(bad)
(bad)
inc
dec
cmp
pusha
mov
pop
leave
push
pop
inc
mov
push
jmp
push
mov
jae
jne
jmp
jmp
pop
xor
pop
les
xor
cli
(bad)
push
dec
stos
movs
repz
iret
repz
mov
add
inc
pop
int3
inc
lock
(bad)
call
fnstsw
idiv
cmp
xstore-rng
cmps
ret
mov
add
(bad)
(bad)
(bad)
jg
mov
shl
cdq
cmp
push
mov
repnz
ins
xlat
out
dec
inc
xchg
(bad)
(bad)
(bad)
jmp
sbb
ja
imul
jl
out
jbe
pushf
dec
mov
movs
jns
into
cmp
push
(bad)
(bad)
(bad)
(bad)
cmp
or
(bad)
sub
pop
pop
jmp
scas
rcl
sar
mov
or
(bad)
(bad)
(bad)
call
cdq
in
add
jecxz
push
cwde
iret
mov
ret
cli
ins
mov
jno
call
jge
cwde
sub
daa
adc
repz
pop
xchg
mov
(bad)
(bad)
(bad)
stc
int
push
xchg
movs
jmp
div
loopne
popa
jge
rol
inc
sub
add
lods
repz
popa
jecxz
(bad)
(bad)
inc
add
push
mov
xor
jecxz
call
pop
inc
push
(bad)
xchg
(bad)
out
(bad)
out
jle
xor
sbb
test
ins
xlat
cmp
mov
(bad)
(bad)
jmp
inc
cmps
in
shl
ja
out
and
xchg
xchg
out
repz
sub
inc
and
mov
call
loopne
test
or
scas
adc
mov
push
ror
adc
fsub
js
push
scas
ret
(bad)
dec
adc
inc
or
and
jge
jle
cmp
(bad)
(bad)
call
push
iret
dec
adc
mov
int3
inc
in
mov
dec
jp
dec
ror
loop
(bad)
(bad)
aas
push
lds
test
jno
mov
neg
loop
fnsave
or
sub
or
mov
cmps
imul
push
ds
fidivr
rol
(bad)
mov
mov
sbb
pusha
pop
pop
jno
sbb
(bad)
jg
(bad)
repz
movs
jns
ds
inc
mov
stc
ins
stos
daa
arpl
call
(bad)
push
ucomiss
mov
adc
mov
mov
push
(bad)
cli
(bad)
push
jmp
jecxz
adc
pop
add
data16
ret
sbb
(bad)
(bad)
jmp
cmp
and
cli
cmp
call
rcl
retf
fst
(bad)
(bad)
(bad)
(bad)
jmp
mov
pop
add
push
mov
adc
add
ror
push
aaa
pop
aad
jns
ret
xchg
(bad)
call
loopne
cmp
cwde
pop
les
push
and
sbb
pop
out
retf
leave
mov
(bad)
(bad)
jmp
fdiv
cs
xor
ficomp
xchg
daa
aad
jnp
ss
cdq
inc
imul
pop
sar
dec
cwde
push
mov
sbb
sub
into
mov
jecxz
enter
cwde
or
mov
jnp
mov
xchg
sub
(bad)
call
into
pop
aad
rcr
sbb
movs
call
fisubr
mov
les
stos
xchg
in
add
and
sub
push
xchg
fidivr
(bad)
(bad)
jg
ret
mov
hlt
std
outs
es
and
mov
in
and
js
stc
je
push
dec
jecxz
call
push
popa
mov
movs
je
add
adc
inc
xchg
(bad)
(bad)
call
sbb
mov
and
adc
das
sub
sti
das
adc
fwait
and
jmp
xlat
scas
xor
outs
aam
pop
push
pop
(bad)
aam
stos
retf
mov
(bad)
(bad)
call
or
and
cmc
sbb
lock
out
push
mov
mov
cmp
inc
js
or
sub
push
lea
push
adc
je
pop
retf
sbb
jmp
sar
mov
xlat
daa
jo
mov
dec
repz
fiadd
outs
(bad)
(bad)
(bad)
inc
(bad)
mov
cmps
fild
pinsrw
pop
les
and
(bad)
call
scas
push
in
and
cmps
push
sbb
jmp
add
in
enter
jmp
mov
in
mov
mov
xchg
mov
imul
(bad)
(bad)
(bad)
jle
popf
xchg
sub
in
cmc
xor
ds
fs
ss
or
or
call
nop
push
ror
gs
outs
loopne
ins
push
bound
addr16
jle
ja
aam
pushf
fwait
(bad)
jmp
stos
xchg
imul
ret
out
mov
cmp
mov
and
or
inc
stos
lea
test
add
push
pop
mov
pop
push
dec
(bad)
(bad)
(bad)
(bad)
(bad)
in
mov
retf
lods
or
je
mov
dec
add
adc
inc
enter
jecxz
sub
cmp
inc
xchg
sbb
movs
pop
push
mov
add
push
add
(bad)
(bad)
(bad)
cmp
dec
mov
cli
mov
sbb
mov
movs
fwait
imul
(bad)
std
outs
push
cmp
dec
mov
movs
and
push
adc
push
xchg
jp
imul
add
out
or
inc
fisubr
movs
and
mov
outs
dec
call
cli
(bad)
call
(bad)
ja
mov
gs
pop
adc
(bad)
dec
hlt
or
jno
mov
jo
adc
loopne
mov
shr
add
or
inc
ins
dec
jle
or
cwde
pop
cmp
(bad)
(bad)
(bad)
call
cwde
popa
ffree
not
out
jecxz
icebp
mov
jl
test
test
adc
(bad)
(bad)
(bad)
(bad)
jp
cmp
xchg
outs
jae
test
retf
and
xor
(bad)
(bad)
dec
inc
dec
jl
jecxz
xchg
(bad)
out
sbb
inc
jmp
ret
lea
cmp
(bad)
cli
jnp
mov
pusha
rcr
rol
aam
jnp
add
popa
(bad)
(bad)
(bad)
push
mov
(bad)
ja
movs
jge
cmp
jbe
mov
xchg
rcl
sub
stos
sahf
imul
dec
js
lods
es
iret
ja
mov
add
in
fwait
push
cmp
xchg
and
and
loop
out
pop
jno
out
jmp
vcvtsd2ss
mov
shr
and
test
jmp
jmp
out
xlat
cmp
add
and
ficom
jg
(bad)
(bad)
cmp
adc
movs
mov
or
push
pushf
or
(bad)
push
fisub
mov
mov
push
inc
out
cmps
(bad)
cld
call
fwait
(bad)
(bad)
(bad)
push
lock
mov
aas
outs
dec
sub
mov
fwait
dec
cmp
jecxz
xor
jecxz
fist
jmp
fistp
mov
xchg
pop
xchg
xchg
sbb
test
inc
dec
(bad)
(bad)
(bad)
jmp
(bad)
enter
add
inc
xchg
sbb
pop
scas
fwait
lds
jg
sub
lock
inc
jmp
rcl
sub
mov
dec
mov
sbb
mov
loopne
(bad)
(bad)
(bad)
(bad)
mov
mov
pop
inc
mov
mov
bound
js
inc
retf
int3
dec
pop
mov
pusha
mov
test
ds
int3
sub
pop
loop
loopne
jp
mov
(bad)
(bad)
(bad)
jl
inc
dec
stc
mov
push
jns
cmc
mov
pop
test
sub
(bad)
(bad)
(bad)
call
sbb
push
and
aas
inc
(bad)
push
pop
mov
jne
xor
ins
add
stos
(bad)
(bad)
jmp
sbb
pop
ror
sbb
lods
jbe
inc
inc
mov
mov
sub
mov
das
es
in
popf
mov
inc
(bad)
add
(bad)
(bad)
(bad)
call
jno
xchg
ja
push
out
xchg
ret
enter
test
iret
ds
adc
(bad)
(bad)
push
xchg
in
in
aaa
mov
jo
ins
lock
pop
dec
movs
jno
or
adc
add
fistp
mov
jge
lds
xchg
mov
clc
xchg
mov
out
call
(bad)
(bad)
(bad)
call
mov
push
mov
sbb
ds
inc
test
jno
inc
xor
out
pop
icebp
scas
clc
push
call
mov
mov
jl
(bad)
(bad)
push
pop
or
pusha
loope
iret
add
jno
push
sbb
or
into
mov
jl
sar
mov
int
(bad)
(bad)
call
add
mov
movs
outs
popf
sbb
cmps
xlat
sub
add
rol
(bad)
(bad)
(bad)
(bad)
jmp
push
test
mov
daa
mov
push
jno
pushf
sub
sbb
pop
fimul
push
pop
out
jmp
(bad)
push
mov
or
pop
xchg
fst
aad
icebp
aas
es
xor
(bad)
inc
call
mov
in
leave
ins
mov
mov
push
push
loope
xchg
dec
mov
sbb
pusha
in
inc
(bad)
push
jbe
mov
icebp
(bad)
(bad)
(bad)
call
push
add
cmc
icebp
repnz
jb
aam
xor
dec
iret
dec
push
jle
xlat
xchg
cmp
je
jmp
adc
sbb
pop
xchg
push
arpl
jmp
xchg
inc
xchg
pop
push
(bad)
call
jl
ret
and
(bad)
mov
or
sub
add
sbb
inc
mov
push
dec
pop
(bad)
mov
sub
xor
adc
push
popa
movs
mov
ja
jg
(bad)
xor
test
movq
and
pop
aam
xchg
dec
lahf
int3
lahf
bound
xor
or
sbb
fcmovnu
cdq
sti
clc
mov
cmp
loope
push
retf
(bad)
gs
xlat
sub
call
int
call
lods
inc
ret
in
sbb
imul
and
das
clc
push
lods
mov
xchg
pextrw
mov
cmp
mov
enter
mov
(bad)
(bad)
push
jae
or
rcr
cmps
xbegin
or
(bad)
jmp
xlat
in
movs
leave
jmp
lea
je
rcl
(bad)
(bad)
(bad)
mov
fsub
inc
or
dec
(bad)
pop
ds
mov
dec
xchg
cmps
inc
cdq
lea
dec
mov
push
(bad)
(bad)
(bad)
inc
jp
das
call
pop
cwde
dec
add
and
mov
cmps
pop
popf
aas
fisttp
push
dec
aad
mov
fst
jle
scas
in
mov
rol
add
ret
(bad)
(bad)
(bad)
(bad)
cli
push
fadd
jb
das
nop
jl
mov
jns
cmc
jbe
push
dec
pop
loope
(bad)
xchg
outs
(bad)
outs
inc
(bad)
(bad)
(bad)
call
stos
cmp
lea
xor
rcl
sbb
adc
repz
and
(bad)
(bad)
push
push
or
sbb
sahf
jb
inc
cmps
dec
mov
mov
fnsave
call
dec
mov
ret
jbe
cs
out
and
adc
or
inc
aas
and
(bad)
(bad)
int
sbb
push
je
out
int3
dec
push
adc
jmp
pop
out
mov
jns
(bad)
(bad)
call
out
jle
(bad)
xchg
xchg
in
ss
pusha
cli
mov
and
or
ins
mov
imul
sbb
(bad)
jmp
inc
int
pop
add
call
test
pop
leave
mov
es
(bad)
(bad)
dec
sahf
lea
adc
and
(bad)
pop
mov
pop
mov
cld
mov
or
das
mov
loope
call
jmp
pop
ins
enter
jmp
or
inc
add
mov
adc
mov
mov
sub
jne
call
mov
sar
(bad)
inc
fmul
jp
loope
cmp
sti
sahf
rol
stos
mov
idiv
(bad)
(bad)
jg
inc
icebp
sub
inc
test
fnsave
pop
xor
scas
fwait
addr16
ror
and
ret
sub
(bad)
(bad)
inc
daa
mov
adc
lahf
mov
and
int3
xchg
jmp
mov
stos
add
dec
ds
and
push
jge
les
add
test
call
or
into
sbb
adc
dec
sar
add
jecxz
or
mov
clc
(bad)
(bad)
(bad)
in
ins
lea
or
add
pop
pop
ret
daa
inc
cmp
fstp
push
out
(bad)
(bad)
jmp
push
imul
movs
cs
sti
jge
jmp
js
mov
and
loopne
jmp
mov
mov
xchg
add
cmp
push
(bad)
(bad)
(bad)
push
cmp
arpl
stos
out
ins
repz
in
and
pop
push
pop
jmp
and
call
push
sub
std
repz
call
enter
mov
(bad)
(bad)
in
jmp
jne
mov
int3
mov
out
sub
pop
xchg
xchg
stos
inc
cmp
call
(bad)
mov
aaa
shl
pushf
retf
in
sbb
jns
add
lods
mov
(bad)
(bad)
(bad)
fnstsw
jge
cmp
lahf
arpl
add
sti
sub
imul
inc
jle
mov
shr
ret
(bad)
imul
mov
jb
jge
(bad)
(bad)
(bad)
(bad)
mov
je
movs
push
xor
not
jo
int3
ds
mov
mov
jns
lods
cmp
(bad)
ret
leave
mov
jne
js
call
xchg
shl
or
gs
(bad)
(bad)
call
cmp
outs
xor
pop
call
out
cdq
lods
adc
sub
jmp
cli
cli
fldenv
or
push
nop
ficom
xchg
xchg
(bad)
(bad)
jmp
ja
mov
push
and
xchg
jne
pop
movs
fwait
mov
push
sbb
inc
jno
cmp
scas
(bad)
jmp
add
inc
mov
pop
add
jle
mov
push
mov
call
adc
pop
or
div
aas
jp
es
xchg
aaa
(bad)
repz
cmp
mov
mov
xor
adc
es
or
mov
jmp
iret
xchg
imul
cmp
push
dec
inc
mov
icebp
fs
cmps
outs
push
mov
inc
or
adc
jmp
shl
mov
(bad)
dec
jg
popa
cdq
cmp
sbb
(bad)
(bad)
(bad)
jg
pop
iret
add
fwait
into
mov
ds
js
out
jmp
shr
(bad)
jmp
xor
repz
cmp
call
(bad)
fmulp
push
dec
cmps
test
(bad)
inc
dec
(bad)
mov
mov
ret
jno
outs
into
and
test
mov
(bad)
(bad)
mov
(bad)
jno
mov
mov
rol
hlt
lods
jge
mov
mov
in
or
mov
jecxz
shl
adc
(bad)
(bad)
dec
js
xor
inc
mov
scas
imul
xchg
push
jmp
outs
ret
test
inc
mov
jb
sbb
(bad)
call
adc
adc
cs
icebp
mov
inc
bound
push
mov
fbld
std
push
in
(bad)
(bad)
(bad)
inc
std
aam
mov
and
mov
mov
and
jl
out
xchg
dec
out
mov
es
pop
push
push
mov
int3
pop
mov
cwde
aas
dec
test
loope
sub
cdq
mov
(bad)
(bad)
(bad)
push
retf
fisttp
popa
dec
icebp
add
stos
xor
sti
jmp
mov
cmp
xchg
xchg
in
(bad)
(bad)
(bad)
call
xchg
xor
data16
sbb
xchg
jmp
push
rcr
inc
xchg
lea
push
xchg
clc
es
pushf
addr16
loopne
scas
out
sbb
pop
out
aas
add
frstor
mov
stos
lods
(bad)
retf
stos
dec
(bad)
sbb
jbe
popf
fistp
pop
adc
(bad)
(bad)
jmp
dec
xchg
jp
cwde
sub
push
adc
int
add
mov
xor
jg
mov
and
adc
xchg
ja
(bad)
jae
mov
(bad)
inc
xchg
iret
adc
ins
jne
std
inc
movs
shr
scas
fisttp
or
call
aaa
jb
int3
popf
sbb
xchg
sub
into
retf
xchg
pop
dec
ins
sub
or
shl
dec
push
call
dec
push
or
or
test
add
push
and
or
xor
outs
(bad)
jmp
aas
popf
fs
mov
(bad)
fild
and
ficomp
inc
das
addr16
add
jge
icebp
retf
push
mov
fs
(bad)
(bad)
(bad)
push
add
jae
and
mov
add
inc
cwde
mov
xor
adc
sbb
ins
inc
(bad)
mov
(bad)
inc
inc
lods
cld
out
(bad)
xchg
pop
stos
data16
clc
push
inc
test
xchg
sub
pusha
add
(bad)
fild
add
xor
lds
sbb
jle
sbb
push
xchg
cli
lds
mov
cmps
push
call
adc
pop
gs
or
cmc
shl
(bad)
hlt
je
repnz
scas
outs
xchg
mov
push
dec
jl
inc
pop
mov
in
(bad)
(bad)
(bad)
inc
cld
shl
dec
aam
int3
test
ret
xchg
out
cwde
(bad)
pop
adc
mov
(bad)
(bad)
(bad)
inc
popf
mov
mov
adc
int
ret
retf
ror
mov
int
leave
xor
jo
daa
mov
mov
push
jbe
pop
sbb
jnp
test
push
pop
and
rol
mov
call
sbb
pop
pop
xor
mov
out
mov
pop
push
clc
call
mov
std
jmp
ins
in
call
mov
(bad)
sti
xchg
leave
mov
into
enter
push
sar
(bad)
(bad)
call
(bad)
ins
fucomi
mov
mov
jnp
pop
sbb
adc
aas
aaa
push
popf
cmp
xchg
add
(bad)
mov
xor
into
jg
mov
adc
(bad)
bound
cli
call
inc
mov
fs
jo
cmp
ja
inc
in
xchg
loopne
(bad)
push
dec
inc
sbb
jbe
add
pop
mov
movs
or
jl
fcmovnbe
cs
sbb
mov
push
shl
stc
mov
xor
mov
les
lods
xchg
or
adc
es
or
xor
dec
scas
inc
pushf
mov
(bad)
dec
(bad)
fiadd
inc
and
sbb
lods
cmc
xlat
clc
xchg
pop
cld
(bad)
inc
test
jg
iret
sbb
loop
outs
xchg
out
or
sub
fs
(bad)
(bad)
push
lock
lds
add
jmp
ds
or
(bad)
dec
shl
fnstsw
in
jg
jne
ins
push
jecxz
pop
jp
lods
bound
cmp
cs
(bad)
(bad)
inc
(bad)
jnp
sbb
inc
mov
ror
mov
mov
mov
xor
dec
int
(bad)
call
sub
(bad)
hlt
mov
adc
out
cli
(bad)
inc
aaa
in
sbb
je
xor
sti
test
push
mov
dec
(bad)
(bad)
(bad)
push
daa
mov
stc
cli
mov
adc
pop
dec
pop
ja
mov
jl
dec
repz
(bad)
(bad)
call
or
movs
imul
jp
sub
out
cwde
pop
and
mov
(bad)
jmp
xchg
mov
loopne
push
dec
or
jle
(bad)
adc
add
dec
inc
clc
adc
imul
inc
ss
mov
cmp
mov
add
(bad)
jmp
(bad)
pop
enter
enter
jo
cmps
les
push
in
pop
movs
add
(bad)
(bad)
call
adc
dec
push
and
aam
jmp
shr
aaa
arpl
in
xchg
bound
sbb
inc
aad
fidiv
mov
dec
dec
(bad)
mov
add
les
dec
repnz
pop
cs
sub
(bad)
jg
dec
loope
nop
call
cmp
push
cmps
mov
and
nop
xor
call
adc
mov
xlat
jmp
hlt
mov
sub
xor
(bad)
(bad)
inc
sbb
sub
daa
mov
push
rcl
sub
shl
jns
cs
movs
xchg
popf
retf
cmp
(bad)
inc
dec
sbb
cmp
mov
and
scas
loopne
in
(bad)
jg
mov
movs
sbb
clc
test
sbb
cmp
imul
call
mov
cs
out
mov
xchg
shl
mov
push
adc
inc
mov
pop
adc
(bad)
(bad)
(bad)
inc
jnp
push
jmp
sub
int3
jl
mov
xchg
mov
lods
inc
push
push
and
xchg
in
clc
(bad)
inc
sub
cmc
pop
inc
int3
dec
ss
jnp
jecxz
sub
mov
(bad)
call
lods
movs
adc
(bad)
fs
stos
mov
cs
rcl
(bad)
(bad)
(bad)
jmp
xlat
adc
psubw
push
fcom
and
inc
and
xchg
movs
(bad)
(bad)
(bad)
(bad)
push
push
dec
cmp
sub
sbb
pop
cmps
iret
sub
mov
mov
mov
push
out
(bad)
pop
mov
icebp
xchg
(bad)
(bad)
jmp
jbe
fst
jno
daa
lahf
sub
add
push
dec
fsub
sub
sbb
push
pop
mov
clc
jmp
sbb
jo
dec
fstp
dec
loopne
cmps
push
fcmovb
push
addr16
adc
mov
rcl
xchg
mov
neg
fbstp
dec
inc
fild
call
scas
test
inc
clc
outs
adc
adc
mov
cdq
mov
(bad)
(bad)
push
pop
lahf
repnz
dec
cmp
std
sbb
cvtdq2ps
lahf
push
call
sti
(bad)
jmp
inc
pop
inc
mov
ret
dec
cmps
data16
pop
dec
psubsb
or
ror
rcr
(bad)
call
retf
xor
lea
pushf
data16
jmp
xor
popf
pop
call
(bad)
(bad)
mov
mov
sub
cmp
inc
leave
mov
and
(bad)
call
dec
sar
adc
inc
ror
pushf
mov
(bad)
adc
enter
cs
fcomp
aas
paddsw
jg
stos
lds
inc
ffree
loopne
into
mov
(bad)
(bad)
(bad)
dec
mov
movs
test
pop
jo
fisub
gs
cmps
das
xchg
in
push
ins
(bad)
dec
js
es
jo
add
shr
mov
leave
jmp
dec
pop
sti
loop
jmp
pop
mov
xchg
and
jmp
clc
stos
(bad)
sahf
jne
sar
mov
sbb
out
cmp
(bad)
(bad)
call
fucomi
jb
scas
and
pop
cli
pop
gs
mov
lock
dec
dec
jb
mov
cld
(bad)
(bad)
(bad)
jmp
test
loopne
sar
cmp
pop
pshufw
test
and
punpcklwd
xor
xor
add
loope
sar
mov
jge
fcomip
jmp
mov
stos
inc
xchg
dec
mov
cld
aas
mov
push
arpl
call
(bad)
jmp
int3
pusha
dec
fst
imul
xchg
outs
xchg
fsub
mov
mov
(bad)
call
std
aaa
cmps
gs
es
push
sbb
or
lods
add
add
mov
pop
fwait
scas
dec
xor
push
imul
outs
cli
(bad)
call
jbe
fadd
arpl
xchg
xor
xchg
inc
pusha
imul
and
bound
jmp
dec
test
test
push
call
retf
jle
(bad)
(bad)
mov
cs
cs
add
mov
cmp
push
jbe
cli
jo
cmps
(bad)
(bad)
call
ds
jl
shl
inc
mov
sub
out
jnp
pop
and
icebp
sbb
mov
cmc
xor
jo
sub
imul
mov
fimul
push
in
inc
in
ror
imul
or
sbb
(bad)
(bad)
cli
xlat
pop
pop
mov
loopne
adc
leave
and
imul
das
fild
aad
call
pushf
adc
jge
(bad)
jecxz
call
dec
ficom
outs
jbe
add
(bad)
cmp
push
cmp
dec
popa
jmp
(bad)
(bad)
fcomip
cmps
cwde
inc
jp
push
cmp
gs
mov
mov
(bad)
jmp
dec
pop
mov
scas
cld
mov
dec
(bad)
mov
sbb
dec
scas
cmp
xor
xchg
jb
(bad)
(bad)
(bad)
dec
sbb
sub
cmp
into
jo
out
scas
les
fadd
icebp
(bad)
(bad)
mov
call
shl
retf
cmp
fs
mov
mov
push
cld
(bad)
mov
ins
dec
mov
inc
cmp
pop
ds
push
xor
inc
pop
(bad)
(bad)
(bad)
(bad)
dec
hlt
jg
or
movs
retf
cmps
cmp
test
jae
dec
jmp
(bad)
mov
call
ror
mov
addr16
xchg
fidiv
and
jle
xchg
xchg
mov
(bad)
(bad)
(bad)
call
push
pusha
pop
fisttp
adc
dec
xchg
fst
cmc
jl
out
dec
mov
or
test
add
pop
mov
sar
retf
xchg
and
inc
fwait
lods
jg
or
(bad)
push
jg
(bad)
ins
add
out
xchg
mov
in
cld
xchg
mov
mov
adc
ficomp
mov
cmp
fldenv
mov
loope
inc
loopne
not
mov
test
and
mov
mov
fwait
(bad)
(bad)
(bad)
dec
mov
xchg
test
shr
pop
lods
movs
or
adc
enter
sbb
(bad)
(bad)
loope
sub
pop
pushf
stos
xchg
lea
cmps
lds
into
ret
and
(bad)
fbld
push
push
inc
in
neg
xor
xor
cmps
or
sbb
mov
xor
(bad)
clc
sub
fldcw
pop
into
cmp
(bad)
push
fiadd
jns
cld
xchg
cmp
stc
ins
xchg
add
mov
dec
(bad)
(bad)
push
(bad)
mov
stos
int3
add
xor
cmp
hlt
sahf
cli
mov
cmp
xor
(bad)
(bad)
inc
mov
add
(bad)
mov
js
test
add
mov
dec
adc
sbb
add
(bad)
jmp
inc
repz
popa
mov
in
dec
jl
aas
push
popa
imul
(bad)
mov
pusha
lock
and
out
movs
iret
ds
adc
into
mov
sub
std
(bad)
mov
shr
bswap
inc
ds
ss
lock
add
(bad)
mov
mov
dec
pop
gs
mov
(bad)
sti
loop
pop
or
adc
(bad)
(bad)
(bad)
jmp
sub
(bad)
sbb
rcr
movs
sbb
mov
sub
leave
sub
sub
xlat
(bad)
(bad)
(bad)
in
retf
mov
push
pop
(bad)
jg
pop
gs
add
aam
cs
stc
dec
fs
call
dec
xchg
sbb
lahf
pushf
add
cwde
and
xor
add
into
shl
ss
call
sub
int3
sub
(bad)
(bad)
(bad)
mov
jl
div
popf
std
sub
mov
xor
adc
cmp
xchg
in
xchg
arpl
add
(bad)
(bad)
fucomi
jns
scas
cmp
daa
ret
arpl
xor
xchg
in
xlat
mov
mov
ins
pusha
inc
sbb
ror
outs
in
push
fist
call
imul
(bad)
(bad)
(bad)
inc
pop
fadd
gs
dec
or
or
mov
mov
cmps
jnp
jne
arpl
mov
(bad)
fdivr
or
ret
out
adc
mov
fidiv
ret
xor
cmp
pop
(bad)
(bad)
aas
mov
mov
pop
scas
dec
sti
xchg
ds
pushf
jbe
mov
mov
push
cld
jmp
icebp
mov
fbstp
push
or
and
and
pop
mov
inc
cmp
call
add
iret
sahf
inc
mov
jmp
jmp
lods
or
fiadd
sub
imul
sub
hlt
(bad)
mov
call
popf
clc
jb
xchg
adc
test
pop
push
pop
mov
mov
ds
adc
inc
jo
scas
clc
(bad)
jmp
xchg
push
je
lds
fwait
not
addr16
mov
mov
lods
lds
lds
ds
stos
(bad)
inc
xchg
jae
mov
leave
push
fiadd
pop
push
mov
(bad)
(bad)
(bad)
inc
bound
push
hlt
in
xor
mov
dec
test
icebp
stc
adc
push
scas
(bad)
(bad)
(bad)
push
scas
mov
sbb
cmps
int
imul
std
xlat
add
ficom
addr16
(bad)
(bad)
(bad)
call
or
lahf
mov
retf
push
add
mov
jae
mov
ret
add
mov
cld
push
pop
js
cmp
or
push
imul
pop
push
jmp
mov
add
dec
stos
xor
shl
pop
rcl
fs
and
xchg
loop
imul
cmp
jnp
add
(bad)
push
dec
in
fsubr
repz
fmul
mov
dec
push
enter
(bad)
(bad)
(bad)
cmp
inc
push
dec
scas
xchg
pop
or
fdivp
push
mov
int
cmp
jnp
adc
cld
mov
outs
jl
out
and
(bad)
call
dec
xchg
das
adc
sub
and
mov
jo
cmp
call
outs
ja
rcr
push
xor
idiv
loopne
clc
out
cdq
add
cld
dec
jecxz
std
(bad)
lahf
cmp
(bad)
(bad)
jp
loop
lahf
mov
or
cmp
cmp
sub
dec
xchg
mov
jbe
(bad)
xchg
push
sub
mov
aas
sbb
and
fst
(bad)
(bad)
jns
and
adc
push
cmp
lods
rcr
pop
pop
loop
cmp
fwait
in
movs
in
(bad)
(bad)
(bad)
call
sbb
fwait
jne
cs
cmps
aaa
sbb
dec
iret
jbe
in
mov
xchg
cld
fsub
and
pushf
clc
mov
cmp
int3
stc
pop
or
ja
scas
cld
jle
(bad)
(bad)
jmp
aad
xchg
xchg
fstp
sub
movs
sub
sub
das
jo
pop
test
mov
(bad)
(bad)
(bad)
jns
sbb
fcomp
das
(bad)
or
out
mov
stc
push
stc
test
jo
sub
sub
add
inc
pushf
outs
icebp
inc
push
sub
mov
out
loopne
xchg
cwde
(bad)
(bad)
(bad)
push
into
mov
sahf
mov
pop
dec
js
or
mov
mov
sub
push
xchg
(bad)
(bad)
jmp
sbb
imul
test
imul
add
dec
pop
(bad)
(bad)
jmp
cmp
inc
aam
jg
pop
lea
mov
pusha
jecxz
mov
(bad)
call
jp
in
push
mov
ds
xchg
cld
in
icebp
(bad)
loop
test
das
aad
retf
pop
test
stos
cmps
xchg
add
pop
inc
fdivr
iret
fdiv
icebp
out
jne
sub
xchg
cmp
(bad)
(bad)
in
lea
ins
and
and
sti
cdq
push
add
sbb
adc
ja
inc
cld
push
scas
mov
cmp
mov
outs
lock
xchg
xor
adc
stos
in
sbb
inc
jp
mov
ror
xchg
nop
lods
push
(bad)
jmp
sbb
mov
lea
inc
sub
imul
adc
hlt
xchg
dec
adc
add
retf
(bad)
and
(bad)
(bad)
jmp
mov
xchg
repz
push
mov
sbb
sbb
cmp
or
jmp
push
xchg
and
inc
inc
mov
cs
scas
shl
push
mov
(bad)
(bad)
inc
pop
push
int
dec
sbb
or
mov
fist
inc
or
scas
xchg
jno
test
cli
mov
hlt
or
push
mov
cmp
mov
push
or
adc
dec
push
addr16
(bad)
jg
sub
mov
mov
data16
jo
dec
repz
retf
fisttp
dec
dec
adc
sub
mov
(bad)
(bad)
mov
pop
aaa
or
in
adc
sub
fiadd
addr16
(bad)
out
int
pop
xchg
push
retf
jge
push
dec
clc
push
jl
movs
cwde
js
fmul
das
push
push
add
rcl
call
adc
addr16
mov
je
scas
xlat
aas
jb
push
std
fiadd
rcr
adc
cmp
add
pop
cmp
(bad)
(bad)
push
and
out
js
pop
mov
mov
test
jmp
push
enter
dec
adc
(bad)
(bad)
(bad)
jmp
in
aad
adc
dec
xor
xchg
and
pop
inc
mov
push
xor
inc
popf
or
(bad)
(bad)
(bad)
jns
in
mov
stc
test
sbb
movs
nop
movs
loope
sub
sbb
stos
inc
int3
jmp
dec
es
cli
mov
stc
sub
scas
mov
pop
xor
xor
pop
aas
(bad)
(bad)
(bad)
(bad)
mov
push
rcr
cmp
(bad)
fcomp
hlt
mov
aad
xor
xchg
in
dec
dec
push
mov
and
pop
fmul
popa
add
dec
xor
mov
(bad)
clc
(bad)
ds
scas
les
iret
je
test
jge
dec
imul
sar
jne
inc
cmps
(bad)
(bad)
jmp
xchg
mov
aam
or
jle
pop
add
stc
fisub
imul
imul
and
push
leave
push
popf
mov
test
ror
dec
mov
retf
int
ror
add
(bad)
inc
cmc
movs
cdq
nop
jl
inc
mov
ja
inc
bound
xchg
std
psubusb
(bad)
(bad)
jg
ins
xor
iret
or
dec
jg
cdq
fnstenv
mov
stos
data16
(bad)
(bad)
mov
aad
into
xchg
das
aas
sub
pushf
jge
scas
mov
shl
int
cmps
and
(bad)
dec
outs
push
or
jmp
(bad)
sbb
test
xchg
xchg
(bad)
push
push
pop
(bad)
fcomip
adc
sti
sub
sub
xchg
imul
(bad)
dec
lock
mov
mov
and
mov
outs
adc
jmp
(bad)
push
adc
sti
push
test
mov
pop
ins
mov
mov
std
call
pop
bnd
test
mov
push
push
lods
sbb
(bad)
call
inc
out
jl
fisubr
stos
iret
and
xchg
xlat
ins
and
pop
mov
(bad)
(bad)
call
dec
pushf
sti
xchg
sub
mov
push
mov
sub
fs
xchg
scas
(bad)
(bad)
(bad)
jmp
sbb
cmps
adc
std
nop
fstp
mov
call
imul
push
pop
mov
dec
jp
(bad)
(bad)
call
xchg
movs
xchg
sar
hlt
and
sti
stos
mov
sub
cmp
xchg
pop
(bad)
out
mov
test
fwait
(bad)
cmp
(bad)
xor
pop
fidivr
jmp
mul
xor
call
dec
sti
mov
iret
lds
(bad)
inc
mov
(bad)
pushf
push
push
cmp
ficomp
ss
adc
pop
jo
pop
cmp
(bad)
call
mov
jg
lock
call
pop
inc
dec
pop
sbb
ficom
or
mov
and
(bad)
jg
mov
jge
mov
mov
cmps
(bad)
(bad)
(bad)
push
push
adc
lock
jg
(bad)
cli
ror
data16
add
rcr
(bad)
jmp
and
adc
sub
stos
xor
dec
idiv
rcr
fnstcw
js
(bad)
(bad)
(bad)
cmp
mov
cmc
adc
fiadd
scas
pop
pushf
xor
jne
jle
xchg
or
(bad)
xchg
(bad)
inc
inc
jecxz
push
iret
div
cdq
sar
or
mov
ins
call
outs
fadd
push
dec
jge
(bad)
mov
push
fsubr
nop
xchg
(bad)
jnp
in
mov
xchg
stos
cli
clc
sub
jmp
aam
(bad)
(bad)
(bad)
(bad)
jmp
idiv
repnz
push
in
out
and
jp
inc
jae
je
jne
mov
lock
arpl
cmc
(bad)
dec
mov
lahf
pop
pop
lods
dec
cmp
imul
sbb
add
and
jno
call
ds
aas
gs
or
or
dec
xchg
call
(bad)
(bad)
push
xchg
dec
mov
xchg
in
sbb
push
daa
jmp
mov
push
stos
and
dec
mov
(bad)
(bad)
inc
push
pmulhuw
sbb
push
test
add
sub
div
add
or
jg
rcl
dec
std
mov
inc
jne
das
leave
sub
mov
(bad)
(bad)
(bad)
jge
jns
int3
mov
jl
mov
mov
sbb
push
add
mov
cli
(bad)
inc
xchg
nop
or
ds
jecxz
lods
outs
mov
(bad)
(bad)
(bad)
jmp
and
push
pop
xchg
fstp
add
add
xchg
sub
dec
fcmovnb
das
test
lahf
mov
inc
and
(bad)
fcomip
(bad)
fimul
(bad)
loopne
fld
int3
jmp
jbe
loope
rol
push
cld
(bad)
inc
xchg
jno
jae
adc
mov
adc
sar
ins
push
dec
push
pushf
xchg
test
dec
test
pop
sbb
xor
sahf
xlat
lea
fwait
dec
push
cld
(bad)
dec
test
jae
inc
jns
retf
psllq
ficomp
cmp
arpl
repnz
or
(bad)
(bad)
(bad)
(bad)
ficomp
inc
adc
pop
pop
mov
xchg
ja
xchg
sbb
(bad)
push
ror
(bad)
(bad)
cmp
and
les
mov
mov
fwait
int
jmp
inc
popf
jmp
(bad)
outs
clc
jmp
stos
les
lahf
mov
sub
push
mov
clc
mov
(bad)
(bad)
jg
dec
push
dec
push
sahf
mov
adc
lods
pop
inc
rcl
js
fst
imul
add
mov
adc
shr
sahf
or
cli
push
push
mov
adc
out
(bad)
(bad)
(bad)
(bad)
jmp
js
cmp
jne
in
mov
or
(bad)
loopne
adc
fistp
mov
ja
daa
cmp
jecxz
push
cmc
das
push
std
fiadd
int3
ds
pop
inc
std
int
dec
jb
test
cmp
aaa
std
call
xor
pop
pop
int
dec
loop
loop
xchg
out
xor
xlat
(bad)
dec
leave
mov
jge
mov
or
inc
mov
fisub
or
lahf
(bad)
push
ins
and
push
xor
pop
jmp
call
sahf
(bad)
(bad)
(bad)
push
xor
mov
or
ja
mov
pop
pushf
jmp
dec
fs
std
(bad)
push
arpl
lods
nop
lock
push
push
push
add
leave
sahf
xor
out
push
mov
sbb
jno
sub
or
jmp
pop
add
jbe
jle
xchg
test
imul
jno
dec
pop
(bad)
(bad)
(bad)
inc
(bad)
ja
icebp
dec
mov
pop
pop
enter
cld
cmps
call
js
je
(bad)
(bad)
(bad)
call
add
dec
xor
mov
mov
or
and
and
or
stos
or
(bad)
jg
and
test
stos
mov
dec
jg
pop
test
je
mov
inc
lods
adc
(bad)
cmp
jbe
ins
xor
sbb
(bad)
jmp
lahf
jge
call
jle
es
or
or
fdivr
xchg
icebp
jg
sahf
jbe
lahf
sub
test
inc
outs
in
adc
adc
(bad)
(bad)
jmp
xchg
cmp
iret
in
xchg
rcr
icebp
pop
xchg
cmp
and
mov
call
sub
(bad)
(bad)
jmp
ret
adc
gs
mov
sbb
out
pop
js
bnd
jmp
push
and
jb
nop
cwde
sar
outs
adc
jle
je
sar
sub
test
sbb
mov
xor
and
(bad)
(bad)
inc
jle
xchg
cld
sahf
retf
adc
dec
cmp
jmp
jo
lods
(bad)
(bad)
(bad)
dec
adc
test
ss
repnz
ficomp
xchg
repz
scas
test
(bad)
(bad)
(bad)
jle
das
pop
lahf
jecxz
dec
sub
xchg
out
hlt
out
cmps
jle
pop
inc
into
adc
ret
push
adc
lahf
adc
(bad)
(bad)
(bad)
fist
jo
pushf
xchg
push
xchg
inc
pushf
ins
pop
push
fstp
stos
adc
call
sbb
loop
scas
bound
or
dec
or
sbb
(bad)
call
(bad)
(bad)
(bad)
push
cmp
pop
std
dec
dec
jle
sub
jae
rcl
outs
popf
mov
lea
xor
call
sub
inc
ret
sti
push
sub
mov
(bad)
and
and
ins
ins
int3
fsub
dec
mov
mov
call
call
mov
imul
hlt
xor
jecxz
cs
clc
into
test
mov
rcl
adc
jo
(bad)
cli
hlt
(bad)
(bad)
dec
push
xchg
int3
add
xchg
jns
shl
mov
ret
pop
jae
(bad)
(bad)
(bad)
call
sub
dec
mov
inc
mov
push
pop
movs
pop
dec
cmp
jmp
push
xor
push
jge
mov
jmp
retf
add
dec
mov
test
aas
sub
jmp
(bad)
jmp
mov
xchg
rcr
xchg
(bad)
pusha
cmps
js
(bad)
ds
pop
stc
repz
mov
mov
push
pop
mov
dec
aam
mov
pop
ja
movs
sub
(bad)
(bad)
dec
cmp
mov
and
inc
imul
inc
mov
adc
pop
sbb
outs
cli
call
ja
or
rcl
and
pushf
out
and
aas
xlat
fs
fisttp
loope
sbb
hlt
les
fbstp
scas
jmp
inc
mov
inc
jmp
cli
pop
lea
in
rcl
sub
jmp
int3
lods
mov
dec
std
pushf
push
jnp
jmp
lock
lods
jg
push
xchg
push
push
(bad)
(bad)
push
xchg
into
fidivr
scas
retf
xor
ins
movs
jge
pop
push
pusha
stos
(bad)
(bad)
(bad)
mov
loopne
(bad)
in
dec
call
imul
mov
push
jmp
dec
inc
lahf
fcos
imul
loope
jbe
rcl
mov
faddp
sub
das
sar
popa
inc
push
xchg
or
test
movs
ffreep
and
fdivr
(bad)
jmp
je
or
mov
push
gs
test
sub
mov
sar
(bad)
(bad)
jge
mov
xor
dec
jecxz
adc
jmp
(bad)
and
mov
add
add
inc
push
fdivr
ds
(bad)
(bad)
(bad)
mov
xor
movs
pop
outs
(bad)
and
push
sbb
(bad)
scas
mov
push
sti
(bad)
(bad)
(bad)
jmp
add
mov
sahf
xor
stos
dec
cmp
movs
sbb
retf
(bad)
(bad)
(bad)
inc
cdq
add
pop
rcr
out
mov
cmps
aam
inc
inc
fmul
jnp
je
fwait
jl
(bad)
(bad)
jmp
xor
cmp
jmp
push
icebp
pop
icebp
jns
lods
and
push
fisubr
int3
into
xchg
adc
mov
test
scas
ss
cmp
and
jmp
(bad)
js
cmp
or
hlt
(bad)
(bad)
fsubr
dec
mov
hlt
dec
popa
pop
mov
ss
fdiv
cs
imul
imul
inc
(bad)
mov
jb
xchg
cmp
ins
stos
push
mov
(bad)
fidiv
push
(bad)
(bad)
(bad)
inc
and
stos
push
inc
pop
mov
mov
test
cmps
neg
lea
mov
cmp
inc
sub
leave
add
ret
call
movs
sbb
cmps
(bad)
dec
ror
inc
push
or
and
(bad)
jmp
cmp
add
js
push
fs
sbb
xchg
fwait
push
cvttps2pi
iret
jl
pop
daa
(bad)
(bad)
(bad)
call
cmps
adc
ss
or
mov
adc
ret
and
fidivr
mov
jg
jmp
inc
rcr
leave
xor
mov
mov
(bad)
cmp
(bad)
(bad)
out
and
movs
ins
dec
mov
retf
ret
fisub
into
loop
push
dec
mov
je
push
shl
fst
sub
enter
les
fwait
aad
(bad)
push
jge
loop
pop
shr
aam
mul
mov
rol
(bad)
mov
pop
test
xchg
xchg
das
(bad)
mov
(bad)
fcomip
pop
inc
fs
inc
cs
cmps
sbb
pop
cmp
mov
loopne
xchg
(bad)
call
daa
adc
fisttp
(bad)
(bad)
call
or
push
cmp
jle
cmc
xchg
mov
mov
sbb
mov
stc
xchg
(bad)
(bad)
(bad)
(bad)
fistp
cmp
adc
aas
and
(bad)
cmp
pop
and
shl
fild
pop
and
test
out
sbb
cdq
and
icebp
mov
(bad)
(bad)
(bad)
jmp
adc
adc
das
test
xchg
mov
in
xchg
push
outs
add
push
and
ficom
repz
inc
lods
(bad)
(bad)
(bad)
dec
dec
in
add
mov
cmp
leave
fdiv
cmp
mov
pop
loop
xchg
pusha
and
(bad)
jmp
mov
and
jbe
and
adc
cmp
xlat
(bad)
(bad)
push
(bad)
(bad)
call
sub
xor
mov
mov
jp
and
xchg
sar
(bad)
(bad)
fcom
stc
sbb
lahf
or
cmp
inc
pop
push
jo
pop
pusha
pop
ins
push
test
(bad)
(bad)
(bad)
aas
nop
jnp
inc
inc
mov
stos
out
mov
or
out
test
add
sti
mov
test
(bad)
push
and
lds
(bad)
sub
mov
pop
push
js
sbb
cld
adc
ds
rcl
sub
imul
ror
mov
cld
dec
jl
mov
push
cmp
test
es
out
mov
(bad)
jg
mov
ret
and
mov
pop
cmp
adc
xor
and
(bad)
(bad)
jmp
xchg
std
cmp
shr
mov
popf
shr
out
cmps
and
loope
test
movs
mov
(bad)
(bad)
(bad)
push
imul
cld
mov
cs
enter
bound
cmp
mov
xchg
cdq
loop
jmp
sar
sbb
loop
ret
bound
sahf
call
pop
lock
(bad)
inc
xor
pop
clc
lods
cli
movs
leave
mov
cmp
pop
dec
push
jo
std
out
std
call
and
fcmovu
mov
mov
fisttp
inc
lods
jle
fstp
iret
hlt
(bad)
(bad)
inc
imul
mov
loope
jmp
lods
adc
fcomp
stos
sub
jno
sbb
imul
(bad)
call
mov
mov
hlt
movs
(bad)
repnz
push
shl
div
push
adc
add
jnp
sbb
sub
adc
(bad)
(bad)
(bad)
std
dec
(bad)
pop
pop
xor
xor
xchg
sub
inc
mov
adc
xor
or
fld
(bad)
jg
cmp
adc
(bad)
cmp
jg
mov
dec
pop
mov
stos
fld
cmps
push
ds
(bad)
jbe
(bad)
(bad)
(bad)
inc
imul
ss
or
mov
xor
stos
imul
inc
cmc
mov
jp
int3
mov
(bad)
(bad)
mov
xor
cmps
push
mov
adc
popa
test
(bad)
inc
loop
or
inc
pop
es
out
loop
pop
outs
jl
push
gs
push
data16
add
dec
bound
movs
inc
repnz
call
or
lock
xor
or
add
neg
jecxz
ja
(bad)
push
jmp
(bad)
(bad)
ds
clc
cmps
ins
sbb
outs
mov
add
in
xchg
xchg
add
cdq
cmp
xor
icebp
(bad)
jmp
cdq
pop
mov
mov
nop
fdiv
int3
and
(bad)
(bad)
push
sahf
mov
and
test
retf
mov
dec
xor
(bad)
(bad)
stc
bound
mov
mov
jb
jns
mov
or
jne
mov
xor
and
cmp
push
xor
mov
arpl
inc
ret
(bad)
(bad)
dec
addr16
retf
sbb
sub
ret
mov
pop
cmp
xchg
dec
test
xor
aas
mov
mov
stc
cmp
call
sub
retf
sub
daa
mov
add
mov
(bad)
(bad)
call
retf
mov
adc
popa
ret
rcr
clc
cmp
cmps
inc
jge
jne
imul
mov
lds
out
pop
outs
std
add
bound
gs
jns
popf
mov
or
mov
add
call
dec
cld
call
inc
iret
and
jge
or
xchg
cld
pop
repz
pop
(bad)
(bad)
call
jo
add
test
cmp
push
pop
js
in
dec
dec
push
int
(bad)
mov
cmps
sbb
add
xor
retf
push
mov
div
bound
(bad)
(bad)
(bad)
inc
xchg
inc
rol
lea
jp
dec
sbb
data16
dec
jbe
or
(bad)
(bad)
push
jl
pop
sbb
cmp
lahf
je
and
mov
sbb
xchg
sbb
mov
add
scas
dec
dec
(bad)
(bad)
jmp
(bad)
push
mov
call
cmps
mov
loope
adc
mov
pop
or
adc
(bad)
(bad)
inc
dec
pop
scas
je
lods
aam
inc
or
push
jp
cmc
outs
cmp
mov
in
cmp
jg
(bad)
fcmovne
adc
inc
lods
and
scas
and
dec
adc
pop
int3
pop
int3
dec
iret
(bad)
(bad)
(bad)
inc
mov
sbb
cmc
or
hlt
xchg
popf
add
mov
sub
rcl
cld
(bad)
call
and
mov
jmp
into
ss
(bad)
(bad)
(bad)
inc
add
mov
xor
mov
gs
push
(bad)
popa
(bad)
(bad)
(bad)
(bad)
jmp
outs
ja
xor
cli
outs
fldenv
call
pop
(bad)
sbb
(bad)
lods
out
or
call
sub
dec
(bad)
pop
mul
mov
adc
jmp
xchg
push
mov
int
(bad)
jmp
xchg
push
jno
mov
jb
fwait
(bad)
imul
adc
pop
ret
(bad)
(bad)
(bad)
jmp
(bad)
xchg
inc
mov
fdiv
jle
pop
sti
pusha
in
addr16
stos
ds
pop
mov
(bad)
(bad)
call
arpl
fisubr
adc
jp
jmp
jns
jp
or
(bad)
inc
mov
mov
icebp
lahf
ins
cmp
mov
mov
aam
push
cmps
in
jae
popa
push
xlat
pop
aad
mov
cmp
jl
dec
xor
adc
data16
adc
fld
(bad)
pop
jns
sti
dec
movs
xchg
hlt
xchg
stos
out
repnz
ret
jg
jmp
dec
mov
mov
push
shl
sub
xor
retf
ds
(bad)
(bad)
(bad)
call
jl
mov
jbe
cmp
jle
push
fptan
mov
leave
xlat
and
ret
adc
(bad)
call
mov
pop
inc
sub
push
mov
sar
dec
call
mov
leave
push
adc
out
adc
scas
and
loopne
idiv
jg
push
mov
adc
(bad)
movs
jecxz
and
mov
jae
sar
call
repnz
xchg
cmc
inc
test
jo
(bad)
or
mov
(bad)
(bad)
(bad)
jg
aas
sub
jmp
imul
and
jle
jmp
adc
outs
adc
icebp
push
cld
dec
jo
rol
retf
dec
push
sbb
xchg
jle
push
test
mov
pop
mov
fwait
adc
xchg
mov
adc
inc
ds
aad
ja
jg
ins
cld
les
fwait
pop
imul
(bad)
(bad)
call
fstp
lahf
sub
test
hlt
loop
dec
shl
mov
rcl
(bad)
(bad)
fbld
sub
and
sahf
inc
repnz
inc
push
adc
inc
es
dec
dec
or
xor
(bad)
(bad)
(bad)
mov
cmc
mov
movs
clc
(bad)
sbb
enter
pop
fbld
test
icebp
pop
jmp
push
cmps
add
fisubr
clc
std
xchg
mov
sti
push
imul
lods
rcr
add
call
mov
inc
test
inc
xchg
repz
mov
call
call
lea
outs
lea
push
dec
in
sbb
leave
std
or
(bad)
(bad)
(bad)
jmp
(bad)
cwde
jg
cmp
jmp
dec
mov
inc
inc
add
(bad)
mov
add
bound
xchg
addr16
clc
cmp
ss
pop
aad
pop
mov
push
add
mov
clc
or
nop
test
ret
repnz
(bad)
(bad)
inc
add
dec
imul
aas
mov
mov
add
mov
ret
stos
popf
xlat
scas
(bad)
(bad)
(bad)
(bad)
jmp
shl
test
dec
loope
aam
xchg
xchg
out
imul
pop
fld
dec
adc
mov
add
xchg
mov
call
push
cld
dec
push
mov
sbb
repz
test
cmp
(bad)
out
and
or
(bad)
mov
push
mov
out
xchg
popa
icebp
jmp
(bad)
(bad)
push
pop
es
out
mov
cmp
(bad)
push
jb
dec
ins
sbb
lock
stc
aam
or
xor
mov
aam
out
addr16
popf
iret
mov
dec
clc
mov
jmp
cmps
es
jmp
add
(bad)
jbe
xor
sbb
jbe
pop
xchg
jns
xchg
pop
dec
cs
push
xor
(bad)
(bad)
(bad)
jmp
or
xor
retf
dec
xchg
movs
movs
jge
jmp
loop
imul
sbb
imul
jmp
(bad)
(bad)
mov
rcr
repz
pushf
push
(bad)
(bad)
(bad)
(bad)
jmp
or
mov
pushf
bound
xor
fidivr
dec
inc
call
loope
aam
mov
std
jmp
mov
ror
(bad)
gs
out
(bad)
(bad)
(bad)
jg
ss
jmp
test
retf
cmp
movs
or
adc
pop
cmp
(bad)
jmp
mov
pop
fst
pop
and
loopne
icebp
test
adc
inc
jo
(bad)
(bad)
(bad)
(bad)
aas
mov
add
add
bound
xchg
adc
adc
not
sub
imul
pop
add
clc
xor
adc
push
lds
sub
mov
sub
rol
jecxz
ins
fisub
mov
(bad)
push
sbb
add
sahf
fbld
mov
jne
into
aaa
ins
add
cmps
jae
pop
mov
(bad)
(bad)
jmp
add
inc
aam
test
int3
inc
pop
push
loop
(bad)
xor
(bad)
(bad)
push
mov
fwait
call
sbb
leave
in
cmp
xor
(bad)
(bad)
jmp
int
popf
popf
mov
mov
and
aam
popf
add
jg
dec
pop
mov
(bad)
jmp
in
or
ins
dec
ins
or
xchg
sti
jmp
fcomip
(bad)
dec
inc
xchg
and
mov
fwait
fwait
xchg
mov
outs
adc
jmp
or
ja
mov
push
xor
xor
std
mov
inc
cld
ins
hlt
call
(bad)
jl
clc
cmps
ret
out
dec
sbb
(bad)
(bad)
(bad)
jle
inc
push
mov
inc
rcl
popa
sub
jmp
js
(bad)
retf
push
push
mov
clc
push
icebp
int
cmp
jg
test
and
jl
(bad)
(bad)
inc
mov
cmc
add
xchg
xchg
stos
pop
call
adc
inc
mov
(bad)
(bad)
call
add
clc
fnsave
outs
stc
mov
cli
xchg
xor
(bad)
das
mov
sar
fs
xchg
inc
pop
rcr
test
mov
sub
fld
push
xchg
(bad)
jmp
in
and
rcl
sbb
xchg
fsubrp
xchg
and
jbe
(bad)
(bad)
(bad)
(bad)
jp
clc
out
mov
shl
mov
(bad)
aaa
mov
retf
pop
xchg
(bad)
(bad)
call
push
sub
adc
cld
jnp
adc
push
fbld
add
mov
(bad)
jmp
aas
mov
push
out
cmp
addr16
dec
mov
rcl
loope
addr16
xor
nop
cmc
(bad)
call
mov
add
xchg
icebp
mov
add
test
cmp
adc
(bad)
jl
es
(bad)
hlt
pop
add
xchg
mov
jo
sbb
clc
test
lahf
pop
sahf
bound
add
(bad)
(bad)
call
jae
add
fs
aad
cmp
pop
add
sbb
pop
stos
ret
int
mov
push
clc
(bad)
(bad)
(bad)
cmp
fldcw
push
es
cmp
inc
jb
pop
test
xor
add
popf
push
loopne
sbb
cmp
and
cmp
les
out
add
scas
int3
sub
je
xor
push
loop
sbb
(bad)
inc
jns
imul
mov
dec
popa
int3
xchg
pop
stc
push
neg
outs
jb
(bad)
jmp
xchg
movs
test
sbb
shl
sbb
call
jmp
pop
add
xchg
fsub
cs
test
fmul
fwait
xchg
daa
push
jecxz
sub
cmc
rcr
ins
jmp
(bad)
push
imul
or
cmp
mov
push
or
movs
mov
jb
cmp
push
xchg
dec
cld
sub
(bad)
das
lods
(bad)
dec
or
mov
jl
sbb
(bad)
int3
js
iret
scas
dec
sbb
inc
sub
fisttp
mov
jae
mov
sub
(bad)
(bad)
call
bound
mov
movs
xchg
imul
gs
dec
mov
call
mov
(bad)
(bad)
push
jl
dec
sub
outs
sbb
cwde
ja
out
sti
dec
jno
loop
inc
pop
retf
(bad)
cmc
lods
stos
shl
jns
(bad)
(bad)
(bad)
call
mov
sub
sar
push
dec
ins
mov
mov
jp
mov
push
(bad)
(bad)
(bad)
(bad)
cli
cmp
pop
mov
pop
adc
dec
cli
push
in
ins
into
call
out
jl
xchg
cmp
(bad)
(bad)
dec
addr16
or
cdq
lods
rol
xchg
es
lds
jmp
cld
and
ins
xchg
push
retf
mov
js
mov
xor
fisttp
lahf
or
xchg
xor
fisubr
dec
add
jecxz
pop
mov
inc
sub
les
adc
cs
or
out
test
pop
lods
mov
sub
add
in
push
mov
adc
and
push
sbb
(bad)
jmp
push
fiadd
and
outs
sbb
xchg
ds
add
cmp
nop
cwde
(bad)
cmp
int
dec
leave
rol
or
mov
mov
nop
or
push
push
scas
mov
fild
(bad)
loopne
cdq
fild
inc
pusha
les
fwait
pop
or
retf
dec
aaa
sar
(bad)
(bad)
mov
pop
jns
pop
and
pushf
aas
loop
gs
out
cmp
fnstenv
jmp
add
mov
lock
out
xor
push
fwait
jge
jecxz
(bad)
(bad)
mov
outs
(bad)
je
pop
scas
ficom
push
cwde
mov
imul
inc
pop
cmc
pop
cmp
(bad)
(bad)
jmp
pmulhuw
pop
jg
add
dec
daa
bnd
repz
scas
(bad)
jg
jge
lods
mov
mov
push
adc
jecxz
jne
mov
aaa
cmp
(bad)
(bad)
inc
jne
push
popf
and
push
pop
xor
or
add
out
adc
mov
hlt
inc
jno
je
mov
adc
xor
push
mov
idiv
int3
mov
hlt
in
iret
jnp
pop
mov
push
cmc
int
cs
dec
cli
add
repz
inc
outs
sbb
loopne
pop
scas
out
jge
iret
sub
fdivr
cli
in
stos
test
loopne
pop
outs
jbe
ficomp
stos
xor
or
mov
jl
fsubr
call
out
sbb
xchg
inc
and
jmp
and
jbe
xchg
mov
into
push
mov
out
mov
call
cmp
ret
fs
pushf
das
out
out
cdq
cmps
pop
pop
mov
ja
mov
imul
add
(bad)
sahf
das
stc
sti
pop
stos
dec
sub
xchg
cmps
stos
push
(bad)
mov
pop
dec
es
ss
movs
pop
movs
or
adc
enter
stos
addr16
icebp
(bad)
(bad)
mov
int
fist
and
xor
pop
push
clc
das
sar
(bad)
(bad)
and
or
xlat
popa
test
fiadd
movs
cmp
jl
jb
cmp
(bad)
(bad)
call
mov
push
sub
cdq
ins
sbb
addr16
(bad)
pop
imul
add
xchg
push
and
and
out
into
jne
test
fisubr
popa
sar
(bad)
pop
cld
(bad)
cmp
add
into
cld
sbb
pusha
add
adc
xchg
jg
adc
gs
(bad)
mov
cmp
into
xor
sahf
popa
jmp
push
(bad)
(bad)
(bad)
(bad)
jl
xchg
cmp
fild
mov
cwde
mov
jns
dec
shl
push
out
js
push
scas
fmul
jle
loop
and
ins
jmp
jge
adc
das
xor
xor
(bad)
inc
stos
sub
cs
pop
sub
loope
xchg
jmp
aam
je
pop
enter
dec
(bad)
(bad)
mov
cmp
or
dec
test
mov
push
shr
lock
(bad)
(bad)
(bad)
(bad)
out
xchg
fwait
push
inc
rcr
(bad)
jmp
std
pop
mov
gs
mov
pop
icebp
add
xchg
cld
scas
clc
jmp
call
jl
mov
or
mov
push
retf
jnp
mov
mov
sbb
stc
add
fdivrp
(bad)
(bad)
(bad)
out
imul
je
iret
dec
or
seto
cmc
je
adc
daa
icebp
js
adc
(bad)
(bad)
(bad)
dec
movs
xchg
cwde
stc
cs
scas
pop
es
xor
jp
sub
clc
jo
push
iret
mov
(bad)
fistp
ss
pop
into
or
int3
push
jbe
stos
add
sbb
dec
retf
repnz
jmp
jbe
cmp
jno
xchg
mov
and
lds
loope
jbe
(bad)
(bad)
(bad)
jmp
inc
jmp
pop
stos
daa
push
push
popa
cli
sbb
push
les
dec
hlt
xchg
(bad)
call
xlat
out
les
sbb
cdq
push
push
imul
adc
gs
in
ret
shr
xchg
xchg
jge
jmp
jnp
(bad)
jg
add
movs
xchg
dec
gs
jns
cmps
out
sahf
(bad)
(bad)
(bad)
dec
stos
adc
xor
rcl
xchg
cld
js
imul
and
push
lock
sbb
(bad)
(bad)
(bad)
call
xchg
xchg
stos
sbb
jmp
(bad)
ror
jecxz
jp
mov
stc
sbb
mov
and
xor
jmp
ret
jecxz
loopne
stos
adc
(bad)
(bad)
(bad)
push
sbb
add
in
push
jbe
sub
ja
and
push
out
aaa
popf
imul
jg
jmp
add
mov
ror
dec
xor
mov
fsub
popa
js
aam
(bad)
inc
je
arpl
pushf
push
stos
jne
cmps
(bad)
add
or
inc
jmp
(bad)
inc
(bad)
pop
lds
push
aaa
xor
mov
push
cmp
dec
outs
imul
shl
pusha
mov
jno
cwde
add
jne
jle
(bad)
(bad)
(bad)
(bad)
js
sbb
loope
sub
mov
xchg
ja
vsubpd
and
popf
bound
sbb
(bad)
jg
lods
mov
mov
mov
pop
cmp
sub
add
and
(bad)
dec
call
and
cwde
rcl
mov
scas
retf
(bad)
(bad)
(bad)
dec
inc
arpl
cli
cmp
pop
lods
pop
outs
stos
arpl
aam
push
inc
(bad)
jge
pop
es
ror
jg
(bad)
in
cmp
not
xor
arpl
shl
(bad)
jp
add
imul
inc
cwde
(bad)
(bad)
jmp
or
xor
int
cmps
xlat
push
popa
loope
(bad)
daa
std
aam
mov
or
pop
mov
sahf
in
ins
inc
mov
push
repz
lods
add
cdq
jge
cmp
pop
pop
(bad)
(bad)
(bad)
inc
movs
sti
bound
cld
int3
pop
add
rcl
(bad)
pop
jmp
jp
jge
loop
push
or
sbb
(bad)
cli
adc
fbld
(bad)
(bad)
fisttp
adc
pop
push
mov
or
cld
call
inc
ret
imul
data16
(bad)
(bad)
(bad)
in
pop
dec
js
dec
call
sub
shl
int3
pop
iret
inc
xchg
in
imul
adc
ja
xchg
call
fisubr
dec
not
jb
bound
sbb
(bad)
call
arpl
cmps
aam
cdq
test
inc
stc
add
or
retf
lahf
dec
loopne
(bad)
mov
hlt
pop
or
cs
jae
mov
mov
shl
test
mov
call
cs
cmps
pushf
scas
icebp
lods
push
add
(bad)
(bad)
call
out
mov
jae
mov
movs
nop
add
setns
sbb
outs
test
(bad)
push
jo
repnz
xchg
mov
dec
ret
jle
repnz
xlat
and
xchg
inc
push
xor
loopne
out
inc
das
adc
sbb
xor
popa
call
inc
clc
xchg
xchg
sub
mov
nop
mov
(bad)
call
add
fimul
aam
jg
mov
icebp
test
pop
mov
shl
aad
sar
xchg
mov
push
or
or
dec
repz
push
or
(bad)
(bad)
(bad)
jmp
cmp
gs
or
xchg
jmp
pop
or
pop
xor
add
mov
call
imul
inc
inc
loop
dec
aaa
shl
or
jmp
mov
inc
push
cmc
cdq
not
jae
(bad)
mov
(bad)
(bad)
(bad)
mov
cs
shl
jle
je
mov
sbb
psrad
and
(bad)
jmp
lods
jmp
arpl
adc
mov
lods
out
push
cmp
int3
and
xchg
push
(bad)
in
es
or
test
xlat
lahf
test
(bad)
(bad)
(bad)
fcmovnb
cs
mov
lods
movs
mov
pushf
ud2
mov
add
pop
not
mov
jmp
jge
push
loopne
mov
lea
jecxz
mov
xchg
(bad)
call
mul
ds
dec
push
sbb
sbb
cwde
mov
xor
fld
(bad)
(bad)
inc
lea
inc
xor
push
outs
in
repz
mov
(bad)
(bad)
(bad)
call
mov
fadd
fsubr
lock
mov
adc
lods
add
cs
mov
scas
sbb
bound
jnp
(bad)
(bad)
mov
repnz
(bad)
lods
out
int3
lods
xor
aas
inc
jne
mov
xchg
mov
cmp
(bad)
jle
dec
rcr
cmps
xor
test
idiv
(bad)
(bad)
(bad)
cmp
nop
cmps
nop
test
outs
or
in
adc
ins
push
clc
pop
ins
inc
inc
pop
xlat
inc
call
call
and
scas
(bad)
aam
jns
add
pop
push
push
inc
(bad)
(bad)
jg
hlt
out
jl
push
inc
mov
mov
jmp
popf
(bad)
retf
or
hlt
out
cli
push
dec
popa
cmp
mov
cli
js
mov
or
jmp
lahf
or
call
sub
lahf
mov
adc
retf
mov
(bad)
inc
sahf
scas
dec
(bad)
fdivr
xor
push
scas
jmp
inc
shl
jmp
(bad)
inc
sub
pop
push
or
inc
pusha
push
int
pushf
(bad)
mov
movs
enter
(bad)
(bad)
call
loopne
jmp
xchg
jl
shr
out
add
ins
lock
xchg
fs
call
loope
pop
dec
xchg
inc
push
xor
adc
jmp
jmp
jp
mov
mov
shl
or
lods
push
lock
push
retf
xor
clc
data16
stos
mov
stc
push
aaa
xor
mov
fcmovbe
addr16
mov
pushf
dec
ret
or
mov
dec
inc
xor
jmp
(bad)
fiadd
daa
gs
mov
add
mov
jnp
loopne
cli
cli
pop
out
(bad)
(bad)
jmp
xchg
adc
lock
loop
push
cld
jg
jmp
and
(bad)
(bad)
(bad)
inc
and
int
mov
test
enter
mov
jle
loopne
dec
loopne
cmp
cld
inc
dec
or
inc
push
push
loope
sub
test
loope
push
jmp
jbe
(bad)
call
xor
jbe
xchg
ins
adc
(bad)
call
cmp
mov
xor
sub
adc
sbb
(bad)
(bad)
jg
aam
fneni(8087
call
mov
or
mov
xchg
(bad)
sbb
or
(bad)
mov
test
lock
add
mov
xchg
and
(bad)
inc
or
cmp
pop
imul
(bad)
jg
sti
loopne
and
push
mov
jecxz
inc
push
aaa
adc
scas
mov
add
jg
in
loopne
clc
pushf
popf
scas
mov
inc
or
sar
(bad)
(bad)
mov
pop
stos
cmp
xor
adc
adc
int3
mov
pop
dec
mov
xchg
cs
and
and
jl
es
cmp
jmp
push
popf
lock
fs
out
mov
adc
adc
inc
into
add
pop
lock
cmp
or
fist
or
popf
loopne
retf
xor
push
ja
(bad)
mov
or
jecxz
mov
fcmovnbe
cmp
ins
mov
(bad)
(bad)
call
sub
sub
xor
jbe
jmp
mov
inc
mov
adc
mov
(bad)
(bad)
call
add
xchg
sar
push
pop
rol
pop
mov
dec
cld
imul
mov
jmp
dec
fprem
jb
mov
jg
(bad)
jmp
mov
mov
fdivr
jnp
(bad)
jge
xchg
mov
inc
test
inc
cld
(bad)
(bad)
jmp
push
and
cmp
popa
(bad)
mov
hlt
cdq
test
jo
inc
xor
xor
push
inc
ror
movs
fchs
cmp
push
(bad)
fbld
or
xchg
cmp
sub
mov
mov
push
mov
cmc
scas
xchg
(bad)
cli
outs
pop
xchg
jnp
and
js
jp
int3
inc
hlt
jle
cs
dec
cmp
arpl
xchg
call
arpl
fadd
(bad)
aam
in
(bad)
(bad)
(bad)
(bad)
cmp
inc
mov
mov
mov
adc
fidiv
test
xchg
bound
dec
fnsave
std
(bad)
inc
jl
pop
mov
inc
sub
push
mov
push
cmp
lahf
(bad)
(bad)
(bad)
inc
ror
jl
pop
mov
dec
sti
ja
inc
inc
mov
cmp
das
cdq
in
out
(bad)
(bad)
(bad)
(bad)
(bad)
jg
ja
dec
leave
cwde
push
je
aaa
push
mov
jg
scas
in
lock
jg
lds
(bad)
(bad)
(bad)
jp
shl
mov
lock
fucomip
int3
mov
add
retf
repnz
fcomp
data16
pop
cmp
mov
int
pop
popf
xor
mov
and
in
(bad)
(bad)
jmp
xchg
xchg
int3
jae
ds
inc
mov
pop
mov
jns
and
(bad)
(bad)
(bad)
jmp
mov
cmp
lods
in
cmps
pop
mov
shr
test
(bad)
(bad)
(bad)
call
int
call
jb
outs
mul
hlt
jo
sti
sbb
lods
(bad)
imul
push
adc
(bad)
(bad)
dec
jecxz
push
shl
mov
fwait
dec
sbb
push
add
into
(bad)
push
(bad)
jmp
mov
lods
sub
xchg
daa
movs
sbb
pop
pop
dec
lahf
or
(bad)
(bad)
inc
dec
cmp
jp
arpl
sbb
push
ret
out
sub
js
retf
mov
dec
push
mov
inc
pop
pushf
cmp
call
out
cld
pop
sbb
xchg
fisttp
add
rcl
fwait
mov
inc
aas
inc
cwde
add
retf
rcr
ja
out
or
in
ja
(bad)
jo
jo
adc
ret
push
mov
push
(bad)
mov
es
cdq
cmps
cmp
and
xor
(bad)
(bad)
inc
popa
and
stos
push
push
xor
mov
mov
xchg
popa
xchg
xchg
out
fiadd
dec
lock
(bad)
(bad)
(bad)
(bad)
mov
cld
push
out
or
push
addr16
mov
mov
clc
outs
push
push
mov
jae
inc
(bad)
dec
addr16
pop
pop
shl
mov
dec
pushf
jae
push
lds
es
ins
js
nop
ja
push
movs
int
sub
test
pop
adc
out
cmp
sar
outs
mov
movs
fsubr
iret
leave
jle
push
push
(bad)
sar
(bad)
(bad)
in
daa
jo
xor
js
sub
scas
push
push
mov
sbb
and
(bad)
(bad)
push
ins
test
sub
lea
mov
and
fcmovb
call
in
stc
cmp
fimul
cmp
mov
mov
js
ins
push
sub
daa
int3
lahf
push
adc
(bad)
(bad)
jmp
aad
mov
add
mov
dec
aam
(bad)
xchg
jnp
int
bound
and
(bad)
(bad)
dec
cmp
test
and
dec
sbb
mov
inc
scas
icebp
add
xor
push
mov
jns
sub
mov
(bad)
mov
xchg
cmp
mov
xor
je
popa
ins
sub
gs
dec
(bad)
(bad)
(bad)
jmp
mov
in
and
mov
cld
adc
mov
jle
mov
(bad)
(bad)
(bad)
jmp
in
pop
(bad)
mov
cmp
xchg
sub
push
inc
jns
cmps
jge
rcl
and
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aam
(bad)
push
or
fadd
jle
pop
sbb
mov
retf
cwde
add
pusha
out
inc
addr16
hlt
cmps
jmp
pop
mov
pop
and
hlt
push
add
call
loop
add
jmp
or
mov
add
push
xor
cmp
call
cld
call
aaa
sub
mov
add
mov
xchg
dec
jae
and
imul
(bad)
(bad)
(bad)
std
ins
retf
in
push
popf
test
aas
inc
sub
jbe
cmps
dec
adc
xor
call
je
adc
sti
popa
mov
(bad)
in
(bad)
(bad)
(bad)
call
je
out
int3
movs
adc
mov
(bad)
aas
bound
push
sti
rcr
(bad)
sbb
mov
(bad)
(bad)
(bad)
jl
xor
test
and
sub
ret
adc
fadd
outs
cmc
jmp
jno
ret
pushf
adc
das
cmp
jno
jns
jge
adc
add
fistp
sub
fdivr
sar
sub
push
loopne
pusha
push
(bad)
mov
sub
retf
scas
dec
ja
(bad)
(bad)
(bad)
push
les
std
out
and
push
movs
dec
or
jle
sbb
jp
imul
cld
(bad)
(bad)
mov
xor
adc
(bad)
fidivr
adc
xchg
cmp
cwde
loope
(bad)
(bad)
call
dec
push
jne
lahf
dec
popa
cmp
sbb
xor
mov
cmp
pop
jno
(bad)
(bad)
mov
fnsave
into
daa
pop
xchg
push
iret
aas
icebp
outs
scas
pop
sbb
mov
fcomip
(bad)
jmp
clc
aas
call
int
test
or
xor
sar
pop
pop
sub
pop
cld
jmp
pop
mov
xor
pushf
sbb
pop
inc
sub
sbb
push
ficom
pop
mov
stc
cmps
pop
sub
push
sub
sbb
jp
(bad)
(bad)
(bad)
jmp
ror
sub
(bad)
and
adc
stc
aam
dec
cmps
ror
and
cmp
inc
adc
cmp
mov
xor
xor
(bad)
scas
int3
jmp
pop
outs
das
mov
jg
pop
jp
add
shl
lods
shr
xchg
(bad)
(bad)
inc
(bad)
jno
jbe
aam
add
and
inc
ror
xor
mov
call
(bad)
jmp
mov
nop
and
fs
mov
fwait
sub
or
or
es
(bad)
(bad)
inc
aad
hlt
mov
mov
nop
cmp
push
xchg
xor
sti
dec
call
out
std
in
(bad)
jg
(bad)
outs
enter
add
ja
xchg
jmp
sar
xor
(bad)
(bad)
(bad)
call
sub
(bad)
or
ins
fild
icebp
xchg
icebp
pop
pop
(bad)
adc
mov
pop
lock
(bad)
mov
push
ds
arpl
inc
ficom
mov
call
fldln2
push
(bad)
(bad)
(bad)
dec
ja
push
and
aas
add
xchg
nop
or
cmp
test
pop
nop
dec
add
(bad)
(bad)
inc
xchg
out
js
call
shl
sub
out
ins
xor
mov
(bad)
jmp
and
test
imul
(bad)
ds
sahf
mov
cmp
dec
sbb
(bad)
(bad)
push
iret
xor
outs
lock
sbb
jae
xor
or
jns
test
(bad)
call
mov
leave
sub
dec
retf
imul
cmp
outs
cli
scas
mov
sub
xchg
mov
mov
mov
jne
in
(bad)
(bad)
call
cwde
adc
add
mov
mov
adc
jecxz
mov
cmp
xor
cmp
loop
(bad)
cmp
jae
test
cmp
bound
dec
and
cmps
outs
xchg
mov
(bad)
(bad)
call
scas
push
sbb
jne
mov
cli
jb
push
(bad)
pop
jmp
cmp
cmp
(bad)
jg
inc
mov
adc
jmp
retf
fadd
pop
sbb
cmp
jg
xchg
fsubr
adc
inc
pop
shr
mov
add
ror
dec
jecxz
jmp
jmp
push
pop
movs
imul
(bad)
call
lahf
xor
(bad)
(bad)
(bad)
mov
jbe
test
cmp
xchg
mov
arpl
fnclex
and
xlat
inc
jnp
(bad)
(bad)
(bad)
jg
adc
sbb
mov
daa
xor
scas
and
mov
(bad)
(bad)
std
mov
sbb
add
pop
sub
cmp
nop
aad
call
jp
test
sahf
inc
fld
xchg
sbb
dec
(bad)
(bad)
(bad)
dec
or
mov
jo
shl
inc
xor
mov
and
aad
shl
cmp
inc
add
xlat
out
out
rcr
(bad)
std
add
xchg
add
push
cmc
popf
out
jbe
(bad)
jo
xchg
jmp
loope
mov
call
inc
aad
jns
ss
not
xchg
mov
cmp
lods
(bad)
xor
stos
push
(bad)
mov
and
test
dec
cld
fldenv
sti
std
mov
in
sub
(bad)
mov
loope
cs
mov
ficomp
bound
sti
(bad)
mov
outs
cld
(bad)
(bad)
(bad)
(bad)
jmp
mov
cmc
test
and
jne
out
into
xor
push
sbb
mov
bound
mov
mov
arpl
adc
push
xor
or
inc
aad
cmp
jmp
sub
in
mov
mov
mov
in
and
jge
cmp
(bad)
dec
cmp
sub
out
push
shl
mov
inc
push
jns
cmp
ror
aam
jp
test
inc
(bad)
(bad)
call
mov
inc
sub
cdq
mov
mov
push
xor
inc
(bad)
fcomip
inc
cmp
push
mov
repz
add
jbe
jmp
fs
dec
(bad)
(bad)
inc
mov
rol
lea
adc
sar
xchg
sub
inc
popa
arpl
mov
mov
mov
mov
sbb
lods
pop
and
(bad)
(bad)
cmp
pop
mov
inc
jmp
mov
shl
(bad)
jmp
xchg
stos
aam
enter
cmp
enter
in
lds
inc
call
inc
inc
stos
pop
and
sbb
adc
xor
cmp
push
inc
lods
cwde
mov
retf
jbe
div
div
cmp
cmp
mov
into
outs
sbb
xor
(bad)
(bad)
(bad)
dec
scas
mov
out
arpl
imul
adc
sbb
dec
lods
loopne
(bad)
push
imul
xchg
push
sub
cmps
jge
sbb
out
fdiv
or
std
(bad)
(bad)
(bad)
dec
nop
mov
mov
(bad)
in
ins
mov
fist
rcl
xchg
(bad)
xchg
jo
icebp
int
(bad)
dec
pusha
add
jae
out
push
sub
sbb
cs
mov
es
(bad)
(bad)
jmp
add
mov
es
repnz
cmps
(bad)
xor
push
inc
push
mov
mov
mov
sub
adc
xlat
retf
mov
(bad)
push
jecxz
test
(bad)
(bad)
(bad)
call
mov
(bad)
outs
add
cwde
or
inc
lahf
inc
ins
xor
popf
cmps
cmc
pop
or
mov
dec
cmps
mov
scas
jbe
(bad)
(bad)
inc
push
mov
pop
mov
and
sbb
sub
cmps
into
fild
in
or
(bad)
jmp
mov
dec
(bad)
les
push
jbe
(bad)
push
and
gs
(bad)
push
pusha
jo
(bad)
sub
outs
or
adc
aaa
fisttp
xchg
fdivrp
mov
sar
(bad)
(bad)
jmp
scas
fdivr
xchg
xlat
jb
and
cmp
aam
jne
dec
push
cmc
mov
pop
sbb
jmp
mov
inc
add
mov
imul
adc
cld
push
jb
inc
adc
repz
or
iret
inc
(bad)
(bad)
(bad)
jmp
fs
hlt
pop
cli
lahf
inc
std
xor
push
je
xchg
mov
sahf
sbb
xor
or
(bad)
(bad)
dec
sub
out
jmp
mov
call
pop
test
scas
jecxz
(bad)
call
cmps
das
jne
movs
add
cdq
and
sti
adc
stc
and
sub
lds
add
fnstenv
sti
outs
loopne
mov
cld
(bad)
(bad)
(bad)
call
cmp
jnp
push
loope
cmp
and
out
cmp
pop
fcmove
pop
mov
adc
aad
lahf
sub
xchg
sub
xor
or
add
mov
xchg
xor
mov
(bad)
(bad)
call
pop
cmc
push
dec
call
aaa
push
cwde
xchg
int
adc
addr16
dec
popa
mov
pop
inc
mov
(bad)
(bad)
(bad)
(bad)
cmp
test
and
mov
jmp
cmp
push
cmp
scas
push
inc
movs
and
and
fisttp
pop
shl
(bad)
mov
sti
pop
retf
aaa
push
mov
(bad)
push
scas
push
hlt
push
ja
aas
xchg
pop
(bad)
(bad)
inc
sbb
cdq
xchg
arpl
int
sub
in
aad
jne
(bad)
(bad)
inc
or
dec
(bad)
mov
imul
jmp
jp
mov
iret
cli
mov
(bad)
pop
fs
movs
in
neg
add
(bad)
xor
iret
dec
pop
push
inc
(bad)
sti
(bad)
sbb
jmp
mov
fsub
xchg
pop
test
pop
es
out
(bad)
(bad)
(bad)
jmp
jp
shr
sub
mov
jecxz
or
jp
xchg
cmps
inc
loope
scas
enter
xchg
cmp
ja
(bad)
(bad)
push
pop
or
fldcw
and
lods
shl
lods
cmp
push
(bad)
push
jb
in
cmc
aas
movs
xchg
and
xor
pop
je
iret
mov
jl
sahf
push
(bad)
(bad)
(bad)
inc
dec
sub
xor
or
jne
in
inc
xchg
dec
push
mov
(bad)
(bad)
call
mov
lea
sbb
add
inc
jns
loope
push
or
xchg
(bad)
mov
add
dec
mov
dec
push
and
aad
ror
mov
lahf
pop
stos
push
sub
icebp
mov
cmps
jl
xchg
outs
hlt
inc
(bad)
cs
xchg
add
loopne
jno
(bad)
(bad)
(bad)
(bad)
out
add
push
pushf
push
call
pop
pop
dec
jp
fidivr
in
mov
daa
and
cmps
push
lea
(bad)
(bad)
(bad)
(bad)
js
cmp
lahf
nop
jp
stc
cmc
outs
ss
jmp
jecxz
mov
(bad)
(bad)
(bad)
call
not
outs
xchg
out
mov
jo
dec
dec
shl
dec
clc
mov
test
(bad)
(bad)
(bad)
dec
jecxz
ret
test
and
sub
fst
imul
stos
dec
jg
pop
aas
pop
cdq
(bad)
(bad)
(bad)
call
inc
ss
sbb
pop
dec
not
cmc
mov
sbb
(bad)
xor
push
stos
popa
fs
cmps
cwde
push
sub
(bad)
in
sahf
jle
scas
and
(bad)
mov
nop
add
sbb
retw
pushf
mov
in
(bad)
call
push
loopne
jnp
ds
movs
mov
(bad)
jmp
dec
test
cmps
cmp
ins
test
xor
hlt
out
push
xchg
cmps
xor
(bad)
(bad)
(bad)
jg
add
loop
pop
fst
loop
imul
ficomp
mov
scas
cmp
clc
(bad)
jmp
inc
sub
ins
ret
xor
and
(bad)
(bad)
call
add
popf
shr
movs
pusha
shr
inc
aad
aad
repnz
fisubr
(bad)
(bad)
(bad)
(bad)
out
cmp
jae
or
stos
loopne
and
(bad)
or
call
shl
fidivr
sbb
or
xchg
mov
hlt
(bad)
push
(bad)
arpl
fwait
cmp
xchg
dec
mov
neg
or
or
mov
ss
jmp
xchg
mov
(bad)
(bad)
inc
loope
and
retf
pop
stos
mov
inc
mov
adc
mov
sub
mov
in
adc
add
push
mov
(bad)
cli
inc
mov
fwait
popf
mov
pop
or
fcom
std
sti
stos
fstp
rol
push
sbb
mov
std
pop
(bad)
dec
rcr
mov
push
xlat
mov
fcomip
sub
retf
call
jno
cmp
dec
test
mov
adc
fwait
(bad)
(bad)
(bad)
push
mov
cmp
xlat
loopne
jo
aas
push
aad
cdq
loop
mov
xor
popf
mov
(bad)
(bad)
jg
jns
sub
cmp
xlat
inc
inc
shr
icebp
iret
ins
mov
(bad)
mov
inc
ror
mov
inc
pop
xor
hlt
sub
(bad)
cmps
pop
test
mov
(bad)
(bad)
call
std
xchg
adc
test
fcmovb
js
stc
fcomi
mov
ret
xor
sbb
outs
inc
fs
pop
cwde
mov
leave
dec
mov
mov
adc
sar
(bad)
(bad)
(bad)
(bad)
out
jmp
cmps
sbb
jnp
sub
into
pushf
jnp
sbb
mov
adc
xor
lods
add
dec
jge
aad
(bad)
jmp
nop
jns
stc
dec
push
enter
mov
jmp
add
rol
(bad)
(bad)
(bad)
jg
xor
aad
and
mov
hlt
adc
xor
dec
push
lods
arpl
inc
cmp
enter
dec
push
cs
loopne
xor
push
push
xor
jmp
icebp
pop
xchg
dec
mov
jmp
inc
jnp
daa
jg
lock
stos
jge
mov
cmp
mov
jae
jne
mov
mov
popa
retf
push
fcom
fsub
(bad)
(bad)
dec
addr16
pop
iret
and
in
push
sub
inc
dec
cmps
mov
(bad)
(bad)
(bad)
jmp
cmps
(bad)
cmp
inc
inc
pop
aas
call
in
push
xchg
aaa
iret
iret
fcmovbe
mov
mov
(bad)
(bad)
fcomip
mov
mov
cmc
and
jae
dec
iret
dec
sbb
pop
lea
or
push
cld
inc
sahf
fwait
cld
push
mov
test
fs
call
or
add
xchg
or
push
(bad)
fs
les
sbb
or
aas
sub
(bad)
(bad)
dec
fld
mov
pop
sar
repnz
jne
int3
leave
div
stos
dec
cli
(bad)
(bad)
dec
mov
loope
mov
push
or
sbb
mov
jo
out
(bad)
inc
jo
or
mov
push
pop
sbb
enter
inc
xor
lock
jmp
jp
mov
daa
ins
jno
int3
add
mov
imul
jg
fldenv
dec
cmps
call
outs
xlat
push
xchg
lock
call
enter
pop
lods
(bad)
mov
sub
aas
adc
mov
pop
and
imul
inc
and
mov
push
(bad)
mov
into
mov
imul
in
jg
ja
adc
(bad)
fwait
sbb
jmp
push
push
xchg
out
mov
jne
pop
pop
scas
mov
iret
je
mov
dec
out
clc
(bad)
inc
ja
xor
out
sbb
cmp
mov
inc
cli
dec
aam
sbb
call
cmps
(bad)
(bad)
sbb
jnp
inc
push
and
das
pop
icebp
sub
pop
pushf
or
retf
cld
mov
adc
idiv
ins
add
int
add
repz
test
and
(bad)
xchg
shl
sbb
(bad)
(bad)
push
sbb
or
rol
mov
inc
in
sbb
shl
in
sbb
stos
cwde
int
(bad)
(bad)
call
shl
es
sbb
mov
mov
fistp
mov
(bad)
(bad)
(bad)
jmp
pushf
popf
iret
cmp
xor
push
in
dec
retf
sbb
je
pop
clc
(bad)
(bad)
(bad)
inc
inc
sub
repnz
push
ja
adc
sub
and
adc
push
rcl
(bad)
call
stc
aad
fstp
test
and
shl
dec
and
pop
imul
jmp
(bad)
(bad)
jmp
(bad)
sub
test
mov
xor
adc
jg
(bad)
(bad)
call
icebp
sbb
test
outs
repz
popf
lods
xchg
cld
mov
push
test
xchg
xchg
int
jg
in
(bad)
(bad)
(bad)
inc
cmps
pop
sbb
jae
mov
stc
arpl
(bad)
pop
fcmove
ja
icebp
mov
cmp
cmp
(bad)
jmp
push
lods
jmp
sub
jecxz
mov
mov
mov
(bad)
(bad)
jg
xlat
jns
ins
test
inc
shl
dec
cld
sub
(bad)
(bad)
dec
jbe
rcr
stc
sahf
shr
push
loop
sub
sbb
aam
jecxz
push
(bad)
(bad)
(bad)
jmp
mov
cmp
je
into
cli
jns
sub
in
jge
shr
mov
mov
cmp
jne
xor
sti
sahf
inc
add
inc
sbb
retf
pushf
loop
dec
(bad)
xor
and
fst
mov
(bad)
(bad)
(bad)
jg
sbb
mov
mov
pop
jno
adc
in
test
sbb
mov
jbe
mov
repz
in
inc
sbb
(bad)
call
fsubr
and
mov
and
scas
(bad)
dec
sbb
ret
mov
or
mov
fld
scas
lods
xor
loop
mov
cmp
call
dec
cld
imul
sbb
sti
(bad)
mov
mov
cmp
push
add
mov
push
pusha
adc
ss
mov
movs
lods
retf
pop
stc
jbe
mov
call
into
bound
repz
(bad)
ret
ja
inc
sbb
jbe
xor
test
cmp
jmp
sbb
jge
nop
push
inc
jmp
scas
call
jmp
mov
mov
int3
cmps
lahf
dec
inc
sbb
cmp
jg
mov
hlt
jecxz
movs
and
into
test
loope
mov
push
movs
dec
call
stos
xchg
aas
mov
mov
(bad)
cmp
mov
daa
movs
lods
ret
(bad)
(bad)
(bad)
inc
add
lds
cmps
jg
mov
fdiv
jb
adc
push
inc
aam
sahf
scas
call
retf
cmps
inc
sbb
adc
xor
(bad)
call
or
scas
das
or
mov
push
or
add
add
jmp
test
repz
(bad)
mov
js
es
mov
add
into
mov
jns
and
lahf
(bad)
(bad)
(bad)
(bad)
out
movs
(bad)
cwde
push
sbb
mov
adc
in
or
cmp
adc
leave
aas
cs
pop
push
and
outs
lea
icebp
lahf
fcomp
push
(bad)
addr16
pop
xchg
xchg
mov
push
add
push
pop
ins
je
mov
leave
(bad)
fcomip
call
xchg
mov
daa
pop
jbe
test
push
mov
push
jne
xchg
pop
std
cmp
sbb
(bad)
(bad)
push
jb
dec
add
jnp
sar
mov
xchg
dec
icebp
mov
mov
pop
in
test
stos
ret
fwait
mov
or
loopne
push
ds
mov
push
dec
ret
lahf
(bad)
(bad)
(bad)
dec
adc
pop
mov
pop
add
fdiv
adc
aad
(bad)
(bad)
(bad)
(bad)
call
retf
mov
add
pop
jns
mov
mov
mov
scas
ja
inc
aas
(bad)
(bad)
(bad)
call
pusha
xor
sub
jno
jmp
icebp
jne
es
mov
dec
out
pop
(bad)
(bad)
(bad)
(bad)
cmp
sub
dec
pand
sub
jbe
ins
(bad)
fisubr
dec
out
out
mov
cs
inc
dec
jl
repnz
call
ret
(bad)
(bad)
(bad)
jmp
mov
sbb
add
pusha
(bad)
jb
sub
jg
add
add
dec
or
in
aas
mov
cmp
test
add
nop
or
nop
cmp
ret
clc
lea
jbe
pop
mov
push
in
mov
xchg
and
(bad)
(bad)
(bad)
(bad)
dec
ins
or
or
add
xchg
lds
mov
(bad)
in
mov
sti
(bad)
inc
(bad)
retf
jge
push
inc
adc
pusha
scas
sub
cmp
or
pop
push
cs
in
xchg
dec
pop
adc
pop
pop
xchg
and
dec
out
and
shl
add
call
call
push
mov
cwde
mov
dec
xchg
jecxz
(bad)
(bad)
call
inc
icebp
dec
mov
jmp
push
dec
mov
add
push
inc
sub
jle
stc
sbb
pusha
pop
(bad)
jmp
jb
test
clc
mov
push
pop
scas
push
mov
and
dec
cmp
xor
adc
iret
fsubr
stc
loopne
pop
clc
jg
(bad)
push
sub
dec
enter
inc
inc
cmp
jmp
xor
mov
xchg
(bad)
(bad)
(bad)
fnsave
jle
mov
pop
test
(bad)
and
stos
inc
rcr
lock
std
(bad)
(bad)
(bad)
inc
mov
mov
xor
test
and
sbb
loop
mov
fpatan
jmp
je
and
add
scas
jns
scas
mov
pushf
aam
and
push
(bad)
(bad)
(bad)
jmp
mov
jl
add
jmp
xor
add
addr16
sub
mov
in
(bad)
(bad)
(bad)
call
bswap
xlat
cmp
push
dec
jge
mov
or
cmps
mov
fs
sub
sbb
inc
(bad)
movs
mov
int
ret
pop
push
sbb
(bad)
dec
retf
ins
out
(bad)
(bad)
(bad)
mov
push
nop
mov
sub
hlt
and
and
ja
sahf
push
cmp
fst
dec
popf
jl
sar
out
scas
repnz
(bad)
(bad)
(bad)
call
iret
popa
inc
or
sub
xchg
mov
xchg
adc
ja
mov
enter
or
(bad)
(bad)
push
repnz
xchg
jp
push
rcr
dec
ins
aas
cmps
cli
ins
daa
sub
pop
ror
scas
daa
stos
cli
(bad)
(bad)
call
outs
dec
cmps
xor
sbb
mov
repz
cmps
cld
scas
mov
(bad)
(bad)
(bad)
jnp
xchg
xchg
ja
rcr
popa
lahf
xchg
je
jmp
inc
mov
test
or
(bad)
cmp
jb
jb
sub
into
push
stc
das
or
sti
stc
pusha
or
(bad)
(bad)
call
dec
(bad)
into
rcr
ds
cld
mov
mov
mov
sub
or
(bad)
(bad)
jmp
sbb
or
jecxz
sti
pop
cmp
int
(bad)
(bad)
(bad)
call
fwait
or
add
fisttp
mov
cs
jecxz
in
mov
inc
sti
xchg
xchg
adc
mov
outs
call
jg
mov
cmps
dec
test
aaa
js
xchg
sub
xchg
xchg
jno
dec
mov
movs
inc
cmc
xor
test
(bad)
(bad)
call
xor
dec
xchg
call
pop
dec
cmp
push
mov
mov
loopne
aaa
push
pop
lock
int
dec
movs
mov
(bad)
pop
sub
daa
pop
test
sub
dec
lds
mov
imul
add
xor
in
lods
fstp
mov
lds
call
dec
push
test
bound
jmp
jo
minps
(bad)
(bad)
call
cs
movs
out
icebp
jl
clc
jbe
je
mov
mov
(bad)
leave
jo
(bad)
(bad)
(bad)
(bad)
jg
in
ret
cwde
retf
xchg
xor
push
xchg
add
imul
inc
lods
mov
std
movs
sbb
push
cmp
fcomp
not
mov
(bad)
inc
std
adc
adc
cmp
adc
out
jo
jbe
(bad)
mov
add
push
inc
dec
cmc
cld
xchg
mov
arpl
retf
inc
mov
(bad)
mov
movs
cmp
jae
je
cld
leave
shl
(bad)
(bad)
dec
in
adc
(bad)
jmp
pop
(bad)
mov
imul
inc
lods
inc
add
cld
inc
add
(bad)
sub
inc
gs
stos
fcos
(bad)
(bad)
push
in
add
dec
sbb
mov
fldenv
lahf
cmp
pop
das
pop
(bad)
mov
push
dec
fidiv
dec
rol
movs
and
xor
fcmovnbe
add
call
lahf
aam
ja
add
jecxz
dec
pop
push
mov
or
stos
inc
push
lods
fidivr
push
push
(bad)
cli
or
inc
and
inc
push
test
dec
adc
test
push
icebp
jmp
sar
sti
sub
push
sbb
add
and
mov
(bad)
(bad)
dec
and
ja
loop
dec
je
jb
cwde
cs
push
imul
addr16
sub
(bad)
(bad)
push
mov
inc
scas
fs
or
out
xor
test
clc
(bad)
dec
bound
test
fdivr
fmul
std
xchg
jo
in
jbe
(bad)
mov
icebp
pop
(bad)
push
outs
(bad)
cmp
cmp
xor
mov
pop
pop
call
mov
fcom
fs
inc
pop
xchg
pop
mov
mov
jg
(bad)
inc
clc
int
dec
xchg
xchg
inc
mov
xlat
fimul
cmp
(bad)
(bad)
(bad)
call
sub
adc
(bad)
in
pop
mov
dec
test
sbb
xor
xor
mov
lods
cmp
dec
jmp
adc
push
(bad)
(bad)
(bad)
inc
mov
ins
mov
mov
pop
and
scas
adc
sbb
(bad)
(bad)
dec
mov
je
push
adc
ins
pop
mov
test
enter
(bad)
jg
jmp
std
dec
jg
es
sbb
pushf
es
mov
adc
dec
mov
leave
push
mov
dec
jne
xor
out
mul
mul
push
push
or
sahf
adc
(bad)
mov
(bad)
(bad)
jmp
test
leave
out
rol
dec
jp
dec
pop
push
inc
cmp
(bad)
(bad)
inc
dec
test
xchg
fs
mov
imul
(bad)
in
mov
call
clc
sti
repnz
pop
mov
int3
aas
into
aam
ja
imul
jmp
push
adc
mov
(bad)
(bad)
(bad)
dec
adc
xor
or
ds
movs
test
das
xchg
(bad)
(bad)
xor
pop
xchg
and
mov
in
mov
add
xor
xchg
aad
mov
mov
cmc
xor
(bad)
(bad)
jmp
or
gs
(bad)
in
les
cmp
sub
push
ret
arpl
cmp
xlat
fdivr
(bad)
jmp
and
xor
fist
ins
repz
sahf
or
ret
adc
iret
mov
(bad)
(bad)
push
dec
in
fidiv
cdq
jno
sahf
mov
aaa
sbb
sti
out
or
in
jne
cmp
(bad)
(bad)
(bad)
jmp
and
xlat
es
scas
jae
setg
js
adc
ja
(bad)
(bad)
(bad)
inc
xor
add
add
lods
xor
mov
pusha
into
adc
(bad)
fisttp
dec
pusha
push
push
(bad)
jg
xchg
call
(bad)
(bad)
(bad)
(bad)
in
inc
xchg
fwait
mov
inc
dec
aam
xchg
adc
inc
jb
inc
jecxz
add
add
jmp
sub
and
fistp
pusha
jno
shl
sub
scas
in
push
sub
lods
pop
mov
sub
jmp
int3
sub
dec
(bad)
inc
loope
dec
(bad)
pop
rcl
arpl
jno
in
(bad)
jmp
nop
arpl
(bad)
jo
cli
test
repnz
das
jae
cmp
xchg
pop
lea
ins
jmp
push
mov
movs
shl
push
xchg
pop
retf
(bad)
(bad)
(bad)
dec
fwait
in
mov
dec
push
leave
lea
sub
push
cwde
repz
cld
mov
cld
cmps
jmp
push
inc
bound
inc
or
inc
inc
push
jl
push
xchg
(bad)
(bad)
(bad)
dec
jne
push
mov
mov
add
sahf
(bad)
mov
mov
(bad)
(bad)
(bad)
dec
or
mov
pop
in
ffree
hlt
sahf
push
jbe
sbb
gs
xchg
pusha
in
push
(bad)
(bad)
(bad)
dec
add
mov
jo
enter
fwait
jg
ror
xchg
ins
sbb
fnstcw
xor
ds
call
dec
mov
sti
imul
mov
push
dec
ss
(bad)
(bad)
call
aam
rcl
or
mov
sbb
inc
push
and
jb
push
add
sbb
jnp
rol
in
adc
mov
popa
push
stc
jg
enter
(bad)
jmp
test
or
icebp
or
cs
test
push
call
out
xor
mov
addr16
xchg
scas
inc
fiadd
cwde
mov
xchg
or
outs
(bad)
(bad)
(bad)
jmp
mov
cmp
push
scas
jnp
fld
ret
or
add
inc
stc
and
stos
(bad)
(bad)
(bad)
dec
ins
loopne
push
push
mov
push
shr
push
loope
jmp
test
push
fwait
fwait
cs
(bad)
cmp
xchg
mov
enter
jbe
cmp
inc
cld
(bad)
mov
jmp
pushf
out
adc
enter
(bad)
inc
in
dec
cmc
add
or
dec
mov
lods
adc
popa
pop
sbb
or
clc
push
shr
stos
mov
pusha
fst
pop
mov
inc
xor
scas
ds
add
and
int
mov
xor
leave
mov
js
int3
xchg
(bad)
(bad)
mov
mov
mov
xchg
and
sbb
fdivp
pushf
fld
(bad)
(bad)
inc
outs
mov
or
cs
fimul
scas
or
dec
sbb
pop
or
shl
in
jmp
(bad)
(bad)
jmp
mov
call
adc
cs
xlat
cmp
pop
hlt
mov
(bad)
(bad)
push
add
and
ficomp
lock
sbb
mov
call
xor
js
adc
das
adc
dec
mov
data16
(bad)
(bad)
inc
xlat
cmps
addr16
std
ja
xor
pop
in
aas
out
pop
jecxz
cmp
sar
(bad)
inc
sub
xor
hlt
leavew
(bad)
sub
aam
jbe
rcl
daa
shl
in
aas
push
call
cmp
stos
add
outs
in
pop
push
pop
pop
(bad)
(bad)
(bad)
dec
xor
inc
bound
xor
cmc
gs
stos
aad
shl
xchg
lahf
mov
(bad)
(bad)
(bad)
mov
fisubr
loope
mov
mov
(bad)
shl
and
sahf
out
adc
icebp
popf
and
daa
mov
jno
jmp
or
ins
push
pop
stos
or
cli
(bad)
(bad)
call
mov
clc
pushf
out
pop
fist
push
ficomp
lods
nop
mov
jnp
jmp
push
call
shl
jmp
(bad)
(bad)
(bad)
(bad)
fiadd
scas
cs
pop
movs
xchg
sub
bound
sub
xchg
ret
pop
pop
lea
(bad)
(bad)
out
jnp
or
xor
inc
hlt
fnstenv
pop
adc
sub
fild
out
(bad)
(bad)
(bad)
jmp
mov
f2xm1
aas
ja
scas
inc
cmp
inc
xchg
mov
cwde
mov
int3
data16
(bad)
fbstp
aam
mov
push
mov
jmp
retf
(bad)
(bad)
inc
xor
ss
call
jle
and
inc
mov
loop
mov
gs
(bad)
(bad)
(bad)
(bad)
fisub
xchg
mov
js
pop
ja
jle
mov
or
aas
xor
push
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
jge
add
int3
retf
mov
sub
inc
and
shr
mov
mov
pop
and
pop
adc
test
inc
push
pushf
(bad)
sahf
pusha
fnstcw
cmp
dec
sub
(bad)
(bad)
(bad)
jmp
popf
xor
adc
mov
or
outs
pop
(bad)
cmp
mov
lods
cmp
inc
xchg
into
mov
into
call
dec
aam
cmp
(bad)
fcomip
call
(bad)
mov
test
dec
arpl
daa
(bad)
(bad)
push
cmc
scas
cmps
pop
aad
retf
jl
xchg
aas
jmp
imul
push
jle
mov
(bad)
out
call
lods
push
mov
pop
in
ins
xor
aas
add
loop
mov
push
(bad)
call
adc
dec
fs
jns
mov
out
je
add
cmp
jp
mov
jl
call
in
adc
push
add
dec
(bad)
and
add
in
push
cmc
mov
(bad)
(bad)
(bad)
call
in
mov
jae
jmp
cmc
pusha
ins
stos
loope
rcl
jmp
cmp
fs
push
repz
pop
push
(bad)
(bad)
(bad)
jg
inc
pushf
sbb
mov
(bad)
test
jne
xor
mov
ret
bound
(bad)
(bad)
(bad)
jmp
push
adc
loop
cmps
shl
test
dec
mov
mov
pslld
(bad)
(bad)
(bad)
call
fadd
cmp
sub
or
sbb
mov
push
cmps
xor
push
fdiv
mov
(bad)
(bad)
(bad)
jmp
jle
out
inc
mov
enter
mov
mov
cmc
arpl
xchg
les
(bad)
jmp
mov
xor
and
shl
mov
pop
cmp
(bad)
(bad)
(bad)
jg
pop
bound
mov
xor
mov
out
jae
jg
fs
retf
xor
(bad)
(bad)
(bad)
jmp
jl
add
ja
das
jbe
or
stos
adc
in
adc
jno
pop
sub
(bad)
(bad)
(bad)
in
mov
out
cmc
movs
scas
call
int
push
ds
add
pusha
adc
push
cs
sbb
(bad)
(bad)
jmp
arpl
daa
or
(bad)
stc
sbb
adc
test
push
adc
mov
call
push
sbb
aaa
jl
shld
bound
push
into
mov
mov
(bad)
(bad)
inc
inc
fs
mov
fstp
icebp
cmp
out
and
shr
push
and
movs
(bad)
out
cmp
call
mov
sub
pop
sub
(bad)
(bad)
inc
jbe
test
mov
sar
fs
dec
test
and
in
xchg
lock
sti
adc
pusha
sbb
call
cmps
pop
pop
sbb
std
repnz
fdivr
pop
mov
add
mov
dec
cmp
xor
in
adc
repz
icebp
(bad)
(bad)
call
stos
retf
mov
pop
sub
or
out
(bad)
sub
(bad)
hlt
(bad)
call
sar
pop
sub
repz
pushf
cmp
call
fbld
mov
dec
push
jae
cmps
mov
or
jmp
(bad)
sahf
push
jp
repnz
xor
adc
adc
stos
or
int3
retf
push
adc
out
or
(bad)
(bad)
jmp
pushf
jmp
in
push
adc
aad
test
xor
pop
daa
call
mov
call
xor
in
scas
int
cmps
stos
aam
(bad)
call
mov
mov
adc
xlat
jno
mov
cwde
dec
pushf
dec
jnp
int
jg
(bad)
mov
sub
dec
jmp
fsub
pop
popf
pop
ss
jmp
mov
jnp
adc
mov
jmp
push
lahf
sub
addr16
adc
dec
dec
in
inc
in
div
xor
mov
fs
xor
or
(bad)
(bad)
call
jnp
or
sar
outs
push
jg
pop
retf
in
dec
psubsb
dec
pop
jmp
clc
dec
xchg
mov
loop
out
xor
mov
push
add
(bad)
jmp
clc
mov
xlat
iret
sbb
(bad)
inc
sbb
loop
out
out
repnz
xchg
xchg
lock
(bad)
jmp
ret
arpl
xchg
or
jl
fisub
stos
sub
jecxz
(bad)
(bad)
push
test
imul
cmp
cld
dec
and
frstor
push
std
mov
cmp
(bad)
jmp
les
mov
or
sahf
fiadd
scas
imul
fidivr
xor
sar
(bad)
(bad)
call
fchs
push
retf
xchg
xor
scas
cmp
cmps
jg
push
cmps
jo
jo
pop
or
sbb
(bad)
inc
inc
jge
ret
int3
xchg
sub
fmul
mov
push
jno
mul
or
mov
(bad)
pmaddwd
arpl
(bad)
(bad)
push
pop
and
fucomip
shr
ins
fcomp
leave
sbb
cmp
cmps
or
(bad)
(bad)
(bad)
(bad)
sti
and
sbb
lahf
xchg
push
inc
dec
mov
mov
pop
adc
test
cmp
div
jle
cli
(bad)
(bad)
inc
dec
popf
ins
push
push
addr16
mov
adc
mov
sbb
mov
lea
pop
lock
mov
aaa
lahf
loopne
and
clc
mov
mov
mov
test
mov
jo
(bad)
(bad)
(bad)
dec
stos
or
add
xchg
sub
idiv
ret
add
inc
xor
(bad)
(bad)
(bad)
inc
movs
inc
dec
or
sub
sbb
ins
sbb
fcomp
(bad)
(bad)
push
mov
and
cld
sbb
sbb
(bad)
push
add
stc
fwait
ins
loope
(bad)
fild
ret
pusha
mov
dec
ja
add
std
call
(bad)
jmp
inc
xchg
push
jae
mov
out
sbb
(bad)
shl
and
lods
(bad)
(bad)
(bad)
inc
cmp
xor
mov
lock
rcr
cmp
mov
lea
ja
clc
xchg
or
cmp
(bad)
(bad)
call
ds
pop
in
fild
pop
movs
mov
(bad)
pop
call
cmp
mov
(bad)
(bad)
(bad)
out
(bad)
repz
fcmovu
xor
dec
int
mov
mov
mov
or
lahf
(bad)
fst
mov
xor
xchg
ja
repz
jmp
add
pop
inc
pushf
or
and
(bad)
(bad)
call
call
inc
fwait
movs
popf
mov
loope
ror
mov
dec
fistp
(bad)
(bad)
(bad)
(bad)
aas
jp
sub
popa
out
cmp
jmp
lods
mov
div
sub
push
movs
(bad)
sub
cmp
fdivrp
(bad)
(bad)
dec
sub
sbb
nop
push
jne
lods
out
jne
mov
mov
jne
lods
retf
jb
ins
inc
jo
in
(bad)
dec
loopne
fdiv
sub
retf
movs
sbb
imul
xchg
xchg
xor
(bad)
(bad)
call
push
loop
bound
pusha
sti
push
or
mov
shr
fnsave
jle
pop
inc
mov
sub
sar
cmp
leave
inc
fimul
dec
out
push
push
xchg
sbb
and
fcomip
mov
repz
inc
fsub
jb
call
shl
std
inc
das
call
je
push
push
jmp
(bad)
int3
sar
(bad)
(bad)
push
ss
add
aam
retf
push
inc
imul
fcom
(bad)
(bad)
(bad)
jmp
mov
mov
fsubr
dec
loope
jmp
out
cmp
aaa
lds
cwde
mov
add
call
fst
inc
lahf
lods
call
sbb
dec
ret
adc
cmp
aad
add
pop
pop
sar
imul
dec
push
or
stos
inc
ficom
sbb
and
(bad)
(bad)
(bad)
push
add
out
mov
cmps
push
jle
in
mov
(bad)
sbb
sbb
fsubrp
sub
(bad)
dec
jb
push
icebp
pop
mov
dec
inc
das
adc
ins
gs
and
(bad)
(bad)
dec
jge
inc
aam
imul
mov
cwde
pop
push
xchg
mov
sub
add
aad
cli
(bad)
call
ret
rcl
or
pop
fistp
out
jo
pop
ins
push
dec
xchg
lods
(bad)
(bad)
(bad)
(bad)
jmp
data16
dec
add
(bad)
dec
mov
dec
mov
adc
and
call
cld
adc
mov
mov
fisubr
aaa
pop
mov
mov
or
fnstcw
cli
sar
(bad)
push
pop
(bad)
popa
push
push
xlat
push
push
jb
jne
jg
not
push
mov
jmp
retf
(bad)
jg
and
cmc
or
test
jae
fisubr
xlat
stc
mov
adc
xchg
sar
(bad)
inc
and
(bad)
or
daa
add
rcl
test
mov
adc
(bad)
clc
js
inc
cli
(bad)
(bad)
cli
add
jnp
les
inc
loop
xchg
ins
inc
arpl
mov
or
push
push
adc
push
pop
jge
aas
pushf
mov
push
lock
movs
push
ja
sbb
jge
jl
mov
push
in
pop
pusha
(bad)
(bad)
(bad)
cmp
ret
xchg
jb
lock
pusha
push
jo
cmps
out
or
jae
cmp
jecxz
jmp
jle
push
mov
ja
dec
ficom
jge
or
pop
test
xchg
nop
(bad)
(bad)
(bad)
call
xor
out
xchg
jnp
into
inc
push
div
ficomp
dec
mov
movs
cmp
dec
jb
outs
xor
cs
inc
adc
popf
mov
(bad)
mov
jns
mov
lock
cmp
shr
mov
xor
loope
(bad)
(bad)
inc
aas
js
pop
push
sub
push
cli
and
dec
stc
push
lahf
inc
or
fsub
jmp
(bad)
(bad)
push
repnz
sub
in
or
loopne
lock
pop
out
mov
adc
inc
mov
(bad)
(bad)
(bad)
inc
jns
test
jecxz
adc
xor
jl
cld
mov
mov
(bad)
(bad)
(bad)
call
inc
and
pushf
popf
fsub
or
dec
and
in
rcl
data16
add
jg
das
sar
(bad)
(bad)
fdiv
mov
inc
mov
mov
add
cmps
cmp
mov
or
lock
push
adc
(bad)
inc
daa
(bad)
fcmove
xor
sar
lods
mov
scas
(bad)
(bad)
(bad)
dec
dec
jns
mov
or
je
(bad)
fbld
pop
sub
ins
pusha
les
pop
in
fistp
dec
jmp
inc
outs
push
repz
test
scas
(bad)
jg
mov
pusha
push
sar
inc
bound
(bad)
call
ss
sub
loopne
adc
add
in
sbb
lds
push
or
add
sub
add
pop
clc
sub
outs
int
add
gs
cli
sub
dec
loope
int3
sub
adc
call
sub
lahf
dec
and
out
test
push
and
mov
jbe
(bad)
(bad)
jg
fcom
dec
fistp
inc
ret
sar
cmp
push
scas
mov
out
es
(bad)
(bad)
push
sbb
aad
mov
cmp
sbb
xor
in
mov
mov
lock
(bad)
(bad)
cmp
pop
add
stc
sub
cld
loop
(bad)
push
mov
jae
add
sbb
nop
push
xchg
sar
push
in
pop
pop
inc
and
pushf
ficom
push
jmp
test
lock
mov
cwde
mov
push
hlt
jp
push
mov
outs
(bad)
inc
std
inc
xchg
icebp
cmp
xchg
les
mov
(bad)
sti
jne
fstp
sub
cmp
cld
div
stc
sbb
push
stos
mov
cmps
mov
sub
mov
sub
es
add
leave
stos
inc
clc
je
shr
jmp
push
hlt
aad
sbb
xlat
jmp
cli
adc
mov
sbb
(bad)
(bad)
jg
ja
push
push
repz
fbld
cmp
mov
ins
fs
jb
and
xor
(bad)
ret
sub
inc
jp
add
xchg
add
mov
sub
push
sar
(bad)
(bad)
jmp
ins
jmp
pop
gs
nop
dec
repz
stos
adc
jnp
inc
iret
loopne
js
outs
pop
inc
test
outs
or
call
cwde
mov
sbb
mov
(bad)
(bad)
push
adc
jmp
data16
enter
inc
lea
icebp
popa
ins
inc
test
shl
pusha
aas
dec
pop
(bad)
(bad)
(bad)
push
fbld
fdivr
xchg
cmc
xor
xchg
out
jmp
adc
mov
arpl
ins
bound
call
push
jbe
addr16
in
stc
dec
leave
imul
(bad)
push
inc
jne
into
inc
dec
(bad)
jg
(bad)
out
pop
movs
push
adc
mov
xchg
mov
xchg
call
dec
pushf
and
push
sahf
inc
push
(bad)
in
inc
rcr
jne
clc
pop
icebp
jno
sar
pop
std
push
xchg
hlt
push
lock
dec
push
stos
and
fisttp
pop
adc
sbb
dec
adc
shr
div
push
dec
or
(bad)
sti
movs
ss
repz
(bad)
dec
or
mov
push
and
pop
(bad)
fadd
(bad)
(bad)
jmp
dec
loope
or
ror
or
sub
mov
xor
jl
(bad)
(bad)
inc
sub
les
fs
(bad)
sbb
mov
bound
test
(bad)
inc
xchg
inc
fiadd
sub
shl
adc
loopne
push
repz
call
call
(bad)
pop
or
push
daa
cmp
shl
xchg
into
repnz
adc
out
cmp
(bad)
(bad)
dec
in
lea
cmc
mov
pop
push
iret
pop
cmp
mov
push
leave
sbb
inc
aam
(bad)
(bad)
(bad)
push
dec
movs
xchg
mov
or
mov
mov
adc
lods
popa
jae
and
sar
(bad)
(bad)
call
or
ficom
ret
mov
test
and
xor
sbb
or
pusha
push
(bad)
(bad)
(bad)
jmp
out
jb
xor
fs
mov
sbb
mov
inc
mov
push
mov
xchg
jb
add
enter
mov
xchg
js
test
(bad)
(bad)
(bad)
dec
adc
cmc
cmp
mov
adc
sub
adc
adc
and
test
xor
scas
hlt
mov
es
cmp
arpl
data16
data16
adc
in
adc
(bad)
(bad)
(bad)
call
fucompp
pop
out
pushf
xor
or
jle
retf
pushf
xor
(bad)
dec
icebp
out
dec
add
test
sub
popf
pushf
mov
or
cmp
push
dec
(bad)
(bad)
(bad)
dec
aaa
sbb
fnstsw
(bad)
enter
sub
jnp
jle
cmp
cli
xchg
das
sbb
(bad)
(bad)
call
mov
shr
sub
in
mov
mov
inc
or
aad
jns
(bad)
(bad)
call
fmul
mov
pop
(bad)
dec
mov
pop
shr
mov
es
mov
(bad)
(bad)
(bad)
call
test
movs
je
int
adc
add
jge
movs
call
adc
shl
or
movs
add
jns
inc
into
push
mov
pop
test
inc
fnsetpm(287
int
jb
jno
jp
shr
and
push
cdq
shl
pop
adc
fwait
clc
jmp
lods
push
not
mov
(bad)
(bad)
(bad)
dec
addr16
pop
mov
or
cmc
mov
push
call
cmps
mov
(bad)
(bad)
call
inc
mov
std
mov
mov
mov
xor
aas
icebp
and
and
(bad)
call
enter
dec
push
dec
shl
stos
cmp
movzx
jge
sub
xor
adc
xor
add
cld
push
cmps
adc
(bad)
(bad)
(bad)
(bad)
mov
or
in
arpl
in
iret
jle
jbe
jmp
jns
inc
mov
(bad)
(bad)
call
mov
inc
inc
adc
push
repnz
adc
mov
call
sub
cs
js
mov
cmp
xchg
pop
xlat
add
(bad)
jle
mov
push
std
mov
push
rol
aad
jecxz
xor
inc
pop
push
imul
std
(bad)
(bad)
call
jle
and
inc
add
fld
retf
pop
push
fldenv
call
outs
clc
push
fdiv
(bad)
outs
inc
mov
mov
(bad)
fadd
cld
(bad)
(bad)
(bad)
push
pop
or
inc
push
arpl
iret
cli
adc
inc
dec
xor
and
aas
dec
mov
cli
mov
(bad)
(bad)
jmp
add
dec
sbb
push
fcomp
loope
and
mov
mov
inc
(bad)
(bad)
(bad)
(bad)
in
scas
or
pop
jle
jb
pop
(bad)
push
sub
mov
aas
rcl
test
mov
(bad)
(bad)
aas
or
jo
or
xor
sub
jmp
adc
(bad)
(bad)
(bad)
jmp
imul
push
pop
inc
cdq
xor
int
mov
sbb
xchg
and
push
fsub
mov
icebp
pop
cmc
(bad)
call
loop
(bad)
dec
pop
sbb
movs
and
ret
xor
xchg
pop
inc
call
inc
pop
in
cmp
or
stos
(bad)
(bad)
(bad)
sti
(bad)
mov
mov
inc
ja
mov
cmp
repz
(bad)
(bad)
call
sub
into
js
ror
mov
jmp
es
aaa
gs
sar
outs
sbb
add
xchg
jo
(bad)
jbe
push
bound
jmp
push
pop
inc
out
jge
cmps
pop
sbb
ret
test
jl
push
mov
repz
adc
sahf
cld
dec
mov
mov
and
fiadd
or
std
pop
std
(bad)
jmp
jecxz
cmp
inc
jp
adc
leave
jmp
mov
sub
das
sti
das
inc
sti
(bad)
cmp
inc
and
adc
cs
pop
dec
adc
(bad)
jmp
rep
pop
mov
outs
or
clc
jmp
call
xlat
xchg
lock
sbb
add
pop
xor
into
out
shl
(bad)
call
aam
jbe
(bad)
add
cmp
ss
ret
xchg
enter
add
lock
dec
mov
icebp
xlat
in
loope
fadd
and
push
mov
(bad)
(bad)
(bad)
(bad)
cmp
jnp
jns
hlt
jg
ds
xor
fnstsw
push
ss
pop
ins
fst
std
popf
lea
pop
lock
add
fnsave
push
fisub
loopne
jb
call
jg
push
ds
xor
pop
hlt
jbe
mov
jne
div
or
(bad)
(bad)
(bad)
cmp
mov
stos
xchg
jg
push
fcomp
mov
xlat
jmp
jp
xor
(bad)
(bad)
clc
cmp
mov
mov
fiadd
adc
frstor
push
sbb
push
jae
cmp
fistp
sbb
adc
lods
mov
push
sbb
(bad)
(bad)
inc
mov
sub
pop
lods
cmp
push
add
movs
stos
call
gs
dec
push
adc
mov
lock
sub
rcl
or
(bad)
jle
pusha
std
add
out
ins
jecxz
(bad)
xchg
cmp
pop
outs
mov
sub
cmc
rcr
out
push
xor
(bad)
and
dec
outs
push
xchg
arpl
(bad)
(bad)
(bad)
jg
push
mov
jmp
cmp
add
adc
mov
loopne
aas
test
fistp
and
inc
call
int3
ss
xor
dec
mov
and
out
jecxz
push
outs
dec
btc
call
push
adc
push
or
jno
xchg
push
ja
xchg
jecxz
icebp
xchg
movs
mov
retf
jno
(bad)
fcomip
cdq
fist
test
aam
jmp
jb
jae
mov
pop
(bad)
mov
sbb
dec
mov
pop
xchg
mov
adc
aaa
sar
pushf
fidivr
ret
cmp
jbe
fcos
pop
cmp
mov
or
cmps
ins
jle
inc
cwde
fdivr
push
add
jmp
mov
imul
or
mov
daa
test
cdq
in
les
sub
mov
inc
arpl
pop
lahf
mov
clc
(bad)
(bad)
cld
mov
call
push
and
test
call
xchg
pop
jecxz
jne
sbb
push
or
lldt
lods
sti
rcr
das
aam
xchg
and
push
mov
scas
clc
push
stos
daa
mov
or
pop
sub
inc
mov
fwait
and
(bad)
(bad)
(bad)
(bad)
mov
push
movs
out
pop
je
cmp
repz
shl
mov
call
jmp
arpl
scas
scas
rcl
cmp
mov
(bad)
ucomiss
add
jecxz
rol
push
mov
pusha
mov
(bad)
xchg
cld
pop
test
scas
sar
or
call
outs
or
jno
call
fbld
mov
jb
les
fistp
add
push
jmp
sbb
in
shr
and
(bad)
(bad)
(bad)
cmp
fidivr
inc
pop
fsub
pushf
sbb
pause
add
mov
cmp
(bad)
(bad)
jmp
aam
mov
mov
mov
or
add
mov
dec
in
enter
and
or
sbb
sti
stos
dec
shr
loope
dec
jb
leave
(bad)
(bad)
(bad)
dec
pop
shl
pop
call
xor
pop
and
ss
add
js
fcmovnb
retf
jmp
in
sub
dec
fidivr
xchg
cli
inc
test
add
ja
dec
jmp
retf
(bad)
push
mov
pusha
push
int3
sahf
leave
push
rol
pop
popf
add
mov
aas
repz
pop
icebp
(bad)
js
adc
int
mov
ds
dec
jnp
ins
std
js
pop
ins
inc
cmps
sti
jecxz
xchg
push
(bad)
(bad)
(bad)
call
popa
pop
xchg
int
retf
push
mov
stos
cmp
sbb
std
mov
loop
or
(bad)
(bad)
in
dec
cmps
add
cmp
jb
xor
stc
les
aaa
push
lahf
mov
mov
(bad)
call
ins
jmp
cs
xor
dec
arpl
adc
xor
(bad)
jmp
mov
add
cmp
bound
push
into
(bad)
(bad)
inc
cmp
add
inc
mov
push
not
xlat
ror
out
jbe
(bad)
(bad)
call
cmp
cmc
cmp
inc
xchg
sbb
jo
fs
ror
dec
xchg
(bad)
(bad)
inc
mov
shl
lahf
std
mov
retf
mov
test
fdiv
cli
mov
outs
xor
cmp
(bad)
(bad)
(bad)
mov
dec
ret
retf
adc
cmp
cmps
cmps
out
ret
and
mov
das
leave
lds
push
std
xor
ret
or
cmp
mov
js
rol
xlat
retf
pop
scas
shr
cld
(bad)
call
out
cdq
rol
pop
xchg
fistp
(bad)
je
popa
jo
sub
pusha
cmp
ret
(bad)
(bad)
call
pop
into
popa
iret
jp
xchg
mov
push
out
adc
int3
cmp
(bad)
(bad)
(bad)
jg
mov
jnp
inc
xor
pop
xor
clc
or
popa
fadd
xor
shl
enter
(bad)
jmp
push
call
adc
shl
test
inc
shl
xchg
ret
xchg
(bad)
(bad)
(bad)
(bad)
call
(bad)
imul
pop
es
mov
scas
mov
test
(bad)
mov
sub
jmp
jns
cld
cmps
movs
mov
shl
fcomip
dec
xchg
test
mov
sahf
and
in
sbb
in
icebp
(bad)
clc
sahf
adc
(bad)
(bad)
jmp
data16
mov
cmp
push
cmp
inc
outs
adc
fnstsw
sti
popf
mov
mov
shl
xchg
ja
push
and
in
stos
(bad)
(bad)
(bad)
jmp
loope
pusha
jecxz
jns
xchg
sub
movs
xor
test
mov
(bad)
fcomip
jnp
scas
pop
pop
add
pop
cmp
push
inc
mov
pop
add
(bad)
(bad)
inc
sub
jae
mov
call
sbb
push
xchg
inc
cmp
enter
mov
jg
ficom
adc
push
mov
push
mov
dec
xchg
(bad)
mov
pop
mov
xor
sub
mov
cmps
adc
ret
cmc
call
lock
jmp
mov
into
loope
inc
fwait
cmc
stc
cwde
loope
sbb
(bad)
(bad)
jmp
(bad)
adc
(bad)
call
fcom
dec
cli
mov
and
push
xchg
mov
stos
arpl
(bad)
(bad)
jmp
cmp
sub
jl
jb
inc
nop
xchg
adc
shr
and
or
lds
(bad)
shl
mov
mov
xchg
jae
adc
test
jge
(bad)
(bad)
(bad)
dec
aam
xchg
pcmpgtw
jmp
nop
adc
data16
sub
aaa
call
sahf
call
ins
jmp
or
test
xor
popa
std
(bad)
dec
out
std
jl
in
jnp
add
cmp
jnp
ss
call
ja
sbb
jb
ins
gs
add
xor
(bad)
inc
add
leave
jl
fs
sbb
icebp
iret
shr
stos
inc
inc
mov
bound
(bad)
(bad)
(bad)
jle
int3
push
pop
pop
call
in
retf
mov
and
and
adc
mov
mov
sbb
das
mov
hlt
mov
cli
aam
push
jmp
xor
icebp
sub
cmp
xchg
xchg
jnp
xchg
shl
cmp
(bad)
(bad)
(bad)
call
pop
dec
jmp
inc
out
movs
leave
jo
in
cmp
fisttp
pop
jmp
cmps
(bad)
(bad)
push
ror
mov
test
pop
xor
dec
popa
adc
jl
mov
(bad)
dec
idiv
dec
pop
or
pop
adc
jmp
or
gs
lods
jbe
add
aad
clc
call
(bad)
(bad)
call
add
dec
in
in
cmps
dec
fsub
nop
dec
icebp
pop
or
cmp
jnp
cmc
jmp
sbb
xchg
cmp
(bad)
(bad)
dec
call
mov
jge
cmp
out
fld
lds
xor
(bad)
(bad)
(bad)
jmp
popf
push
mov
mov
dec
adc
xor
fisub
in
push
inc
xor
cli
xchg
cwde
sub
stos
xchg
sti
xchg
sbb
dec
ins
data16
lahf
(bad)
jmp
loop
aad
or
adc
cmc
xchg
mov
outs
stos
push
loopne
or
mov
push
div
cmp
ja
loop
in
nop
aas
inc
cmp
leave
(bad)
mov
jmp
bound
cmp
inc
fdivr
push
mov
sahf
xor
call
test
sar
call
imul
imul
ret
jge
mov
ja
xor
(bad)
(bad)
jmp
inc
or
adc
popa
adc
mov
aas
mov
in
js
outs
add
dec
movs
xor
push
pop
fdiv
out
jmp
inc
jg
inc
sbb
inc
jle
aam
mov
dec
sub
(bad)
(bad)
(bad)
aas
aaa
dec
cmps
sbb
adc
lea
mov
addr16
push
inc
xor
and
std
imul
retf
sub
inc
out
add
sbb
dec
jmp
test
(bad)
mov
inc
enter
sbb
ret
jbe
jl
push
or
cmc
or
icebp
(bad)
loope
mov
jle
cs
(bad)
inc
xlat
sub
push
scas
in
cmps
repnz
cmp
xchg
mov
cmp
or
inc
pop
mul
stos
icebp
(bad)
(bad)
(bad)
dec
sub
pop
nop
jns
jp
js
push
mov
mov
xor
xlat
push
pop
mov
pop
fsub
jmp
inc
inc
add
mov
jle
mov
jmp
mov
aas
out
dec
aad
pop
call
cld
push
cmps
test
xchg
xor
shl
inc
add
(bad)
inc
in
or
mov
inc
mov
push
fild
jp
jl
mov
adc
(bad)
dec
mov
sbb
out
adc
outs
pop
mov
or
(bad)
(bad)
inc
add
out
xchg
mov
mov
sbb
push
inc
jle
xor
mov
and
call
cli
dec
and
iret
hlt
bound
push
or
(bad)
(bad)
dec
in
je
inc
int3
test
jp
push
outs
xor
cs
cld
(bad)
(bad)
dec
add
out
sub
inc
cdq
std
in
imul
or
mov
clc
(bad)
push
push
fcmovbe
rcl
into
mov
je
inc
retf
ficom
in
jge
(bad)
(bad)
jmp
pop
repz
jg
fiadd
xor
rol
add
or
and
jmp
lock
fcomp
cwde
pop
xor
rcl
nop
imul
add
shl
aam
(bad)
mov
adc
in
ins
inc
and
popf
sbb
arpl
and
(bad)
(bad)
mov
(bad)
mov
fcomip
sbb
and
ss
jno
cmps
pop
lahf
sahf
xchg
lock
jl
xor
test
loop
pusha
mov
sbb
(bad)
fcomip
and
pop
mov
pop
sbb
popf
cmp
int
xchg
pop
pushf
cld
shl
sbb
sbb
(bad)
(bad)
call
or
scas
push
loopne
inc
xor
cdq
mov
out
push
or
(bad)
(bad)
(bad)
inc
or
jo
jb
jnp
mov
push
mov
int
retf
sub
mov
(bad)
(bad)
call
sub
rcr
jg
push
push
sub
sbb
cmp
mov
jmp
cmp
aam
fisub
das
xor
popf
jmp
loope
pop
(bad)
(bad)
(bad)
inc
push
mov
mov
mov
fisttp
push
cmp
adc
aas
ror
repnz
cmp
inc
(bad)
iret
(bad)
clc
sub
sahf
sub
jmp
in
jl
fdiv
std
(bad)
call
std
stos
cmps
jp
outs
adc
iret
popf
rcl
loop
fadd
adc
push
or
mov
jecxz
pop
sub
mov
cs
dec
push
xor
dec
mov
inc
sub
lods
jle
in
dec
cld
jp
shl
adc
(bad)
pop
sub
xchg
sub
sahf
pop
pop
mov
in
mov
sti
mov
call
mov
mov
inc
call
in
sub
mov
leave
les
sahf
or
xchg
stc
(bad)
(bad)
(bad)
dec
sub
inc
jp
shl
(bad)
fs
neg
stos
test
inc
repnz
jl
cmp
mov
mov
add
fisttp
ja
push
and
jg
imul
out
daa
jne
(bad)
(bad)
(bad)
jg
retf
xchg
mul
add
pop
(bad)
mov
std
dec
das
(bad)
mov
fcmovnb
popa
(bad)
(bad)
(bad)
(bad)
mov
push
mov
dec
outs
mov
sbb
push
pop
xchg
adc
sub
in
(bad)
(bad)
(bad)
(bad)
jns
cmps
cwde
cmp
in
popa
lods
mov
lock
mov
das
inc
mov
xchg
shl
neg
cmp
(bad)
(bad)
(bad)
(bad)
mov
mov
xchg
shl
addr16
out
rcl
fist
xchg
fdivr
inc
dec
stos
les
cs
mov
popf
mov
xchg
jle
dec
(bad)
(bad)
(bad)
(bad)
jl
mov
pop
sub
les
xor
mov
xchg
adc
jmp
cmp
ret
(bad)
jmp
pushf
retf
xchg
mov
stos
ja
retf
xchg
scas
int3
fsubr
cmps
inc
mov
out
mov
adc
xchg
inc
std
inc
loopne
repz
xor
mov
jns
(bad)
(bad)
(bad)
jg
sbb
fisub
cmp
loop
sbb
cmp
adc
or
cmp
(bad)
(bad)
(bad)
dec
inc
mov
movs
add
inc
or
adc
pop
push
cmp
(bad)
(bad)
(bad)
(bad)
xor
cmp
aad
dec
or
sti
adc
es
jecxz
or
mov
cli
cmps
(bad)
mov
jo
or
cwde
stos
sti
dec
dec
pop
adc
gs
add
push
pop
jge
inc
stos
(bad)
(bad)
(bad)
dec
(bad)
jle
mov
lahf
les
jno
mov
mov
movs
addr16
push
add
jmp
cli
push
inc
in
shl
push
in
xchg
int
mov
cdq
or
adc
pop
test
out
mov
pusha
and
push
sub
ret
jbe
pop
dec
not
ficom
inc
int3
dec
les
jmp
rol
clc
mov
(bad)
popf
push
shl
xchg
jg
lock
and
xchg
(bad)
jmp
cs
add
jge
jmp
cmp
sar
and
xchg
push
icebp
test
retf
call
into
movs
or
inc
pop
add
mov
test
in
rcr
sub
test
or
pop
mov
imul
leave
inc
mov
clc
push
int
in
dec
aaa
mov
(bad)
mov
retf
clc
adc
movs
xchg
fild
xor
pop
adc
(bad)
(bad)
(bad)
pop
sbb
mov
lods
push
xchg
in
push
scas
es
dec
inc
dec
or
fnstcw
mov
(bad)
(bad)
inc
iret
in
lahf
mov
push
test
fnstsw
imul
dec
push
mov
xchg
or
loop
les
adc
call
test
out
xchg
xor
sub
mov
cmp
add
popa
sbb
adc
call
leave
rcl
bound
loope
mov
add
clc
(bad)
(bad)
(bad)
call
loope
repz
ds
mov
mov
sub
and
in
loopne
push
add
outs
in
jmp
xchg
push
mov
mov
jbe
xor
pop
inc
ja
dec
pop
mov
mov
xchg
jp
jmp
rcr
jge
imul
das
inc
lods
arpl
and
mov
pop
sub
(bad)
out
(bad)
or
out
(bad)
fcomp
push
cmp
les
sbb
rcr
movs
mov
cmp
fild
pushf
xchg
cmp
jg
(bad)
(bad)
mov
ds
out
int
ror
jmp
mov
les
test
jmp
call
bound
aad
xor
cmp
adc
xor
jle
call
mul
(bad)
(bad)
(bad)
dec
es
add
jne
rcr
nop
loop
sbb
dec
sbb
inc
xchg
xchg
mov
call
pop
loope
aas
sub
xor
mov
mov
xchg
sbb
xor
mov
(bad)
dec
and
test
cmp
nop
dec
bound
sbb
push
mov
aad
(bad)
(bad)
(bad)
jg
dec
(bad)
lock
xor
xor
xor
arpl
or
mov
mov
mov
jmp
add
push
clc
mov
(bad)
cmp
(bad)
inc
sbb
ret
xchg
mov
inc
lea
xchg
jns
icebp
pop
mov
dec
popa
icebp
or
jmp
les
popf
add
xchg
push
mov
inc
jmp
aaa
daa
ds
lds
xor
test
aam
inc
test
and
imul
(bad)
(bad)
push
adc
std
add
jne
call
imul
mov
push
jno
add
mov
(bad)
(bad)
call
mov
jmp
or
rcr
test
push
adc
loope
jg
mov
outs
jg
inc
mov
adc
test
dec
fs
and
cmp
ja
scas
jb
and
in
xor
mov
rcr
mov
mov
inc
mov
(bad)
mov
int
mov
(bad)
jp
cmp
(bad)
(bad)
(bad)
out
fisub
mov
out
hlt
enter
je
push
out
fisubr
and
add
clc
(bad)
(bad)
inc
(bad)
lods
dec
cs
pop
xor
fisttp
xor
lds
outs
cmp
sub
out
(bad)
lods
test
mov
add
(bad)
(bad)
jmp
xor
inc
pop
or
outs
scas
scas
mov
pop
and
lock
dec
icebp
or
push
(bad)
into
pusha
sub
adc
and
fsub
loope
scas
aas
dec
mov
sub
dec
or
adc
add
(bad)
adc
fimul
(bad)
(bad)
call
add
jno
sbb
aaa
outs
xchg
hlt
cli
pop
or
pop
call
push
(bad)
call
cmps
scas
jo
(bad)
cmp
or
lds
push
mov
scas
test
adc
jne
push
push
daa
jmp
(bad)
(bad)
dec
xchg
cmp
pop
sahf
hlt
jnp
jns
or
jns
and
(bad)
mov
add
add
push
mov
ret
jmp
and
pop
push
loop
das
cli
push
inc
popa
ins
mov
jg
inc
sbb
dec
jmp
movs
or
(bad)
(bad)
dec
dec
mov
jae
scas
sbb
inc
loop
mov
dec
stos
xor
add
sahf
bound
das
clc
mov
in
or
test
leave
jle
test
call
push
or
(bad)
(bad)
(bad)
dec
stc
out
retf
ss
jbe
cld
call
xchg
jmp
jge
pop
nop
sbb
(bad)
inc
jae
mov
lahf
pop
pop
repnz
aas
or
movs
call
jae
xchg
hlt
add
sbb
jg
mov
repz
arpl
mov
or
arpl
mov
stc
push
sub
push
cmp
and
rol
not
adc
inc
fcomp
std
pop
mov
jg
or
jmp
xchg
mov
mov
jae
outs
outs
movs
xor
adc
pop
and
call
(bad)
jmp
clc
mov
out
push
test
mov
inc
jno
sbb
js
inc
cmp
call
das
push
pop
(bad)
push
pop
popa
mov
cmp
inc
dec
sub
inc
pop
imul
mov
repz
gs
sti
sub
(bad)
push
or
and
push
(bad)
aam
pop
jmp
dec
sub
stc
popa
iret
mov
pop
(bad)
(bad)
(bad)
inc
jmp
push
mov
jb
sub
or
lock
sub
(bad)
(bad)
(bad)
(bad)
fnstcw
push
data16
xor
ret
adc
xchg
fcomp
ds
dec
mov
xchg
xchg
(bad)
jp
cmp
lock
add
js
(bad)
(bad)
(bad)
mov
call
shl
mov
mov
mov
pop
in
ja
(bad)
(bad)
(bad)
jmp
scas
test
jne
repz
test
jp
mov
and
stos
fdivp
or
jbe
dec
and
into
lods
sbb
cmp
(bad)
xor
std
sub
and
push
aas
mov
fbstp
xchg
and
push
add
movs
mov
outs
cs
into
push
push
mov
or
movs
movs
dec
push
jle
inc
(bad)
(bad)
(bad)
call
js
mov
and
out
cld
push
adc
sub
ds
push
sahf
sbb
lahf
(bad)
(bad)
mov
sub
in
jecxz
pop
jl
push
jb
add
xor
imul
pop
xchg
or
(bad)
(bad)
(bad)
call
sahf
shl
(bad)
(bad)
fcomp
popf
popa
xchg
in
sub
xor
inc
mov
cmp
dec
jb
(bad)
(bad)
cli
or
addr16
test
pop
add
sub
iret
or
cmp
(bad)
(bad)
jg
pop
or
aas
mov
mov
push
inc
add
jns
add
nop
(bad)
(bad)
(bad)
jmp
lods
sub
cdq
lds
pop
jno
imul
(bad)
mov
mov
pushf
dec
loopne
push
pop
inc
adc
(bad)
(bad)
jmp
(bad)
addr16
xchg
xchg
mov
fcomp
xlat
call
jb
mov
lds
shr
(bad)
aad
mov
fnstcw
(bad)
(bad)
(bad)
cmp
pop
out
and
pop
inc
mov
push
imul
add
sub
retf
jge
call
(bad)
(bad)
(bad)
jmp
dec
(bad)
sub
and
movs
shl
jne
cmp
inc
scas
cmp
mov
pop
(bad)
(bad)
(bad)
(bad)
jns
dec
lods
jnp
shr
or
paddsw
outs
cmps
inc
push
jns
mov
inc
popf
repnz
(bad)
push
push
mov
fucomip
xchg
movs
retf
mov
jnp
xchg
jmp
(bad)
(bad)
mov
sub
cmp
adc
jle
ret
inc
push
xor
mov
loopne
mov
(bad)
(bad)
inc
bnd
mov
loop
enter
xchg
sbb
push
or
xchg
cmps
les
mov
fcomip
push
outs
movs
rcr
mov
sbb
rcl
sub
bound
pop
daa
fbstp
retf
jno
push
data16
and
int
push
in
jmp
cli
(bad)
push
and
daa
sahf
xchg
in
sahf
icebp
ins
gs
enter
(bad)
jns
(bad)
call
sahf
jl
imul
mov
sbb
dec
in
add
inc
(bad)
loop
(bad)
push
cwde
inc
lds
clc
and
stc
shl
enter
sub
add
inc
jb
clc
jmp
mov
(bad)
jnp
test
adc
aam
(bad)
jmp
xor
xor
hlt
jmp
test
loope
push
adc
inc
sbb
(bad)
and
call
dec
ds
sti
inc
or
mov
sub
inc
cmps
mov
je
dec
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
in
adc
inc
cmp
cdq
cmps
(bad)
pop
dec
mov
rcr
out
jecxz
jmp
mov
xor
scas
in
or
pop
pop
(bad)
jg
aad
sub
rcr
sub
jo
stc
push
cli
add
inc
stos
and
adc
inc
ins
mov
fisub
dec
jbe
or
mov
push
dec
daa
les
mov
dec
ins
out
fisub
add
mov
(bad)
(bad)
(bad)
push
enter
xlat
jmp
or
in
pop
or
lock
wrmsr
scas
dec
adc
fwait
(bad)
jg
dec
mov
cmp
ret
adc
sub
loop
test
add
out
fucom
in
sahf
(bad)
(bad)
jg
sub
fistp
pop
and
or
push
imul
das
cmp
(bad)
dec
sbb
xchg
outs
(bad)
stc
loop
jns
(bad)
into
or
stos
pop
push
or
mov
lods
jo
pop
(bad)
(bad)
(bad)
call
mov
fcom
cwde
mov
inc
pop
(bad)
jmp
neg
mov
pop
into
mov
adc
(bad)
(bad)
(bad)
call
jnp
sub
outs
fstp
mov
in
shl
jb
mov
(bad)
push
push
adc
cmp
int
cli
scas
jecxz
enter
adc
dec
lock
inc
test
mov
ficom
inc
sbb
sbb
dec
jmp
mov
push
dec
test
cmp
jmp
and
jle
push
ror
adc
or
(bad)
(bad)
inc
(bad)
cmp
adc
xchg
dec
mov
or
sbb
jo
push
and
(bad)
jg
mov
out
cmp
jne
(bad)
cmp
jmp
les
scas
and
mov
pushf
cmc
mov
pop
test
cmp
out
add
adc
jnp
pop
add
(bad)
(bad)
call
pop
mov
dec
mov
call
fcomp
adc
dec
or
xchg
(bad)
(bad)
(bad)
jmp
sar
adc
dec
mov
(bad)
jne
je
(bad)
mov
dec
imul
std
ror
jmp
les
xchg
inc
push
test
xchg
std
ins
fcos
(bad)
(bad)
(bad)
xor
xor
pop
ds
fmul
push
pop
(bad)
and
cwde
push
fwait
(bad)
call
jae
fwait
mov
in
test
mov
ins
(bad)
fldenv
fdiv
daa
(bad)
push
movs
in
dec
fisub
icebp
lahf
xchg
jnp
enter
or
icebp
call
fs
jnp
sub
div
repnz
adc
mov
imul
dec
or
not
sbb
in
pop
mov
out
shl
aam
pusha
sar
(bad)
(bad)
push
cmp
mov
dec
les
or
mov
out
jns
daa
out
adc
and
pop
loop
push
add
je
shl
arpl
je
cld
dec
into
or
fmul
add
fnstcw
pop
sub
cwde
(bad)
jmp
or
(bad)
das
ja
or
shl
xchg
jl
scas
pop
rcl
ins
iret
sub
(bad)
and
mov
call
push
push
(bad)
rcr
or
scas
cli
(bad)
(bad)
out
xor
scas
loopne
pop
jp
ror
xchg
scas
mov
xchg
(bad)
(bad)
(bad)
call
jno
sub
movs
(bad)
cld
popa
mov
add
scas
out
into
inc
inc
mov
pop
mov
and
xor
lds
hlt
test
fdiv
popa
in
sti
lock
pop
xchg
cmp
loop
fimul
js
cmc
imul
and
cmps
sbb
mov
sbb
(bad)
(bad)
(bad)
jp
out
or
xchg
mov
sar
or
iret
mov
sbb
mov
xor
push
jb
mov
push
add
mov
mov
dec
adc
add
cmp
jns
pop
cmp
sbb
mov
(bad)
mov
mov
pop
jmp
pop
(bad)
or
add
(bad)
(bad)
dec
sub
test
push
ja
mov
mov
sbb
cdq
shl
(bad)
out
cli
movs
or
mov
pop
mov
and
int
mov
out
sub
dec
mov
ins
loop
mov
push
or
and
adc
sar
(bad)
(bad)
call
dec
jb
ja
(bad)
push
mov
push
jbe
mov
xor
cmp
(bad)
cli
icebp
and
push
std
(bad)
fstp
lock
shl
xor
and
mov
or
loopne
(bad)
(bad)
(bad)
push
ret
iret
mov
ret
inc
sub
ss
sbb
or
(bad)
(bad)
(bad)
(bad)
cmp
dec
sub
ret
cmp
js
xor
outs
jmp
push
adc
or
repnz
dec
cmp
sti
mov
outs
scas
mov
pop
push
add
mov
mov
or
(bad)
push
repz
retf
jmp
cmps
push
or
jge
hlt
js
mov
shr
addr16
rcr
cwde
call
aaa
lea
(bad)
(bad)
(bad)
jmp
(bad)
xor
jmp
loopne
xor
pop
jg
sbb
enter
pop
(bad)
call
ins
cld
mov
cmps
jle
std
push
retf
xchg
fstp
push
dec
aam
loopne
mov
jge
(bad)
(bad)
(bad)
jg
add
or
enter
jge
jb
ss
inc
xchg
dec
enter
xchg
fwait
adc
iret
(bad)
(bad)
(bad)
push
xchg
and
and
add
call
jne
push
rcl
inc
in
pop
test
or
(bad)
(bad)
cmp
int
lock
cmc
pusha
pop
pop
cwd
dec
xchg
xor
pop
leave
(bad)
(bad)
(bad)
dec
aad
je
fidiv
int3
add
iret
pop
cmp
bnd
push
inc
fs
(bad)
jmp
dec
jmp
addr16
arpl
int3
das
stos
sub
test
xchg
enter
in
mov
icebp
arpl
fist
sub
call
jmp
(bad)
jns
or
clc
xchg
(bad)
jmp
inc
push
mov
add
daa
pop
lock
loop
lahf
test
lock
cmp
or
dec
and
es
jmp
adc
ja
adc
(bad)
jmp
push
adc
pop
pop
inc
outs
mov
test
inc
fnstsw
call
fwait
add
inc
add
push
shl
sub
out
and
mov
(bad)
(bad)
mov
outs
repnz
call
(bad)
je
lods
ins
add
in
sbb
cmp
icebp
push
std
inc
jp
push
pop
ret
xchg
loopne
nop
push
cmp
mov
(bad)
jmp
sbb
outs
stos
mov
test
cmp
fadd
sar
mov
xchg
add
dec
outs
cli
dec
in
jnp
ret
fcmovnu
cmovg
outs
es
or
push
mov
cmp
loope
mov
sbb
add
xchg
lds
(bad)
(bad)
jg
enter
push
outs
das
lea
mov
push
xor
dec
add
cld
call
push
mov
dec
jb
xor
push
push
push
iret
std
dec
ds
mov
(bad)
push
in
mov
cli
or
rcl
mov
call
xor
retf
jns
add
retf
stc
repz
imul
ror
cmc
nop
mov
(bad)
call
dec
push
bound
add
in
inc
repnz
popf
mov
cld
(bad)
(bad)
(bad)
jmp
in
xor
fwait
repnz
push
fwait
add
jo
add
dec
gs
and
addr16
sbb
jg
dec
bound
pushf
out
and
(bad)
dec
push
inc
jo
xchg
ins
fwait
(bad)
jg
call
(bad)
mov
(bad)
dec
or
pop
add
adc
mov
add
jne
push
mov
ds
(bad)
and
repz
adc
sub
imul
pop
aam
test
sbb
(bad)
(bad)
(bad)
call
les
pop
mov
(bad)
fucomip
stc
add
jns
add
push
inc
sbb
fmul
mov
jno
test
jl
inc
ret
fsubp
sti
dec
out
hlt
(bad)
(bad)
(bad)
std
ins
or
(bad)
jg
mov
ret
test
dec
and
inc
pushf
add
ja
daa
dec
xchg
pusha
push
out
add
jecxz
aaa
jmp
push
loop
xchg
(bad)
jg
jmp
scas
dec
shr
pushf
cmp
xchg
and
repnz
mov
jne
in
inc
or
(bad)
(bad)
call
jmp
push
test
mov
and
push
dec
aad
dec
jge
(bad)
jmp
sahf
mov
test
in
aas
ss
sbb
sbb
call
dec
(bad)
push
test
mov
sti
mov
or
xchg
inc
dec
mov
(bad)
dec
mov
(bad)
push
movs
loopne
lahf
inc
mov
sub
(bad)
(bad)
(bad)
jmp
lods
mov
mov
mov
repnz
xor
bound
(bad)
call
aam
jnp
cmps
push
cmp
loopne
fstp
rcl
inc
mov
dec
loope
ret
fs
add
mov
lds
(bad)
call
fistp
in
fistp
jcxz
and
movs
std
(bad)
(bad)
(bad)
pop
lods
std
inc
(bad)
outs
retf
shl
inc
sub
arpl
sub
pop
xor
or
(bad)
(bad)
(bad)
(bad)
aas
mul
pushf
push
ja
jg
loope
push
adc
sahf
sub
pop
adc
push
xor
inc
ins
xlat
imul
cmc
cdq
adc
lods
xor
push
loop
clc
(bad)
(bad)
out
fcomp
cmp
adc
mov
xchg
(bad)
(bad)
call
into
jmp
pop
add
sbb
clts
mov
pusha
jmp
jmp
(bad)
(bad)
mov
or
xchg
retf
and
dec
lods
addr16
imul
scas
jnp
pslld
sti
push
push
(bad)
loopne
and
and
xor
mov
sbb
push
leave
movs
shl
and
push
shl
add
dec
add
xor
cmp
mov
(bad)
(bad)
push
cmp
xchg
sbb
mov
xrelease
add
mov
adc
or
dec
imul
pusha
aad
jns
push
popa
mov
test
ffree
pop
xor
mov
xchg
(bad)
dec
cmp
jne
adc
cld
(bad)
(bad)
(bad)
call
and
add
imul
jecxz
mov
inc
lock
mov
inc
and
hlt
inc
sar
(bad)
(bad)
push
xchg
repnz
in
mov
dec
cmp
mov
test
test
jb
cld
inc
aad
repz
xchg
ret
stos
mov
icebp
pop
(bad)
cmp
lods
fmul
dec
(bad)
(bad)
push
or
loop
clc
leave
dec
out
outs
fild
iret
mov
imul
or
mov
push
or
jmp
dec
pop
cmps
imul
out
and
jmp
stos
imul
(bad)
(bad)
dec
cwde
ror
and
mov
faddp
int3
mov
jmp
(bad)
dec
fiadd
jmp
movs
inc
dec
das
rcl
js
scas
retf
ror
xchg
(bad)
(bad)
jmp
jg
gs
xor
jecxz
in
ds
jge
sub
xchg
(bad)
(bad)
dec
mov
xor
push
and
jnp
std
std
mov
add
(bad)
push
cld
pop
push
mov
daa
mov
retfw
jge
call
push
jecxz
jge
js
ficomp
mov
add
xchg
inc
cmp
(bad)
call
push
cmp
add
inc
inc
sub
in
scas
mov
fucomi
scas
nop
arpl
and
dec
out
stos
mov
loop
pop
dec
sub
mov
(bad)
(bad)
call
scas
(bad)
pop
lock
xchg
shl
into
mov
mov
mov
aad
(bad)
(bad)
dec
mov
stos
enter
sbb
dec
push
add
or
cmp
fsub
add
out
scas
mov
push
mov
jmp
mov
or
(bad)
(bad)
jmp
cld
repz
out
sar
arpl
(bad)
xlat
push
scas
sub
jmp
xchg
fwait
jo
call
fwait
scas
arpl
mov
(bad)
call
adc
retf
fidivr
cli
daa
pop
fwait
retf
inc
add
lds
jg
aam
sbb
inc
dec
inc
sbb
pop
pop
dec
retf
adc
bound
lods
or
jnp
les
fcomip
(bad)
(bad)
js
fcmovnb
add
int
arpl
ins
(bad)
lods
push
xchg
sbb
arpl
dec
stos
shl
mov
imul
pusha
adc
fdiv
movs
push
(bad)
(bad)
(bad)
push
inc
sbb
in
inc
call
pop
(bad)
cwde
je
jmp
and
(bad)
(bad)
(bad)
mov
frstor
pushf
daa
test
push
in
xchg
loopne
pop
les
in
call
ja
add
jle
mov
fdivr
inc
push
js
add
mov
sub
sbb
sbb
call
test
leave
jbe
pop
sbb
adc
dec
fucomp
into
adc
add
jns
sub
sahf
add
pop
sti
call
(bad)
xchg
test
add
rcr
inc
pop
(bad)
(bad)
mov
sbb
leave
inc
mov
mov
jg
inc
inc
add
push
dec
jne
(bad)
(bad)
(bad)
inc
pop
jne
stc
jecxz
pop
dec
repnz
pop
pop
dec
fstp
push
loop
(bad)
test
inc
sahf
adc
scas
xchg
out
int3
rol
cmc
retf
scas
sbb
fidiv
jbe
inc
jae
mov
imul
mov
pop
(bad)
(bad)
jmp
in
jbe
out
mov
jo
icebp
add
scas
jb
mov
and
in
mov
mov
inc
sub
cmp
and
xor
ss
sbb
pop
jl
add
mov
(bad)
(bad)
(bad)
jge
mov
mov
push
lds
cmp
hlt
mov
mov
(bad)
(bad)
inc
fstp
dec
ja
inc
push
inc
hlt
pop
std
in
inc
push
sbb
push
pop
das
ret
sub
push
jmp
(bad)
and
jb
jbe
pop
pop
stc
ret
(bad)
(bad)
mov
arpl
jb
and
pop
(bad)
xchg
cmp
dec
(bad)
(bad)
fbstp
inc
sub
adc
or
or
cmp
and
sar
or
xor
xchg
cli
(bad)
(bad)
cmp
or
push
jmp
mov
into
(bad)
(bad)
jmp
ins
jne
xor
pop
sub
add
pop
fs
call
(bad)
(bad)
(bad)
(bad)
es
xchg
mov
push
sti
or
jno
mov
xchg
jbe
mov
loope
test
jmp
out
push
test
loop
adc
push
cmp
mov
(bad)
(bad)
(bad)
inc
cs
sub
ins
lds
sbb
cmp
popf
cmp
mov
cmp
add
pusha
data16
jne
(bad)
mov
push
and
xchg
dec
je
(bad)
(bad)
fld
outs
lahf
mov
mov
mov
pop
imul
and
mov
(bad)
jmp
rol
(bad)
pop
cbw
mov
cmp
jb
mov
jle
or
(bad)
(bad)
(bad)
cli
mov
add
dec
xor
call
fisttp
inc
xchg
lea
push
and
js
inc
arpl
jmp
popf
retf
sub
test
lahf
je
mov
push
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
mov
adc
cmp
out
fadd
mov
xor
cmp
inc
fs
stos
in
or
loope
adc
fild
sub
mov
push
xlat
(bad)
inc
(bad)
aad
das
fild
mov
mov
mov
rcr
inc
pop
jbe
lea
mov
adc
mov
pop
imul
jnp
inc
lds
lods
enter
jmp
jmp
imul
dec
mov
or
clc
fidivr
call
std
(bad)
call
sbb
sub
xor
inc
sbb
out
fadd
clc
movs
xchg
dec
loop
add
lahf
fistp
(bad)
push
mov
mov
xor
jge
mov
cld
test
mov
retf
(bad)
(bad)
(bad)
inc
jp
aas
jne
add
(bad)
int
jne
xchg
and
pop
push
mov
pop
mov
dec
ja
int3
mov
push
push
jne
jp
outs
sbb
out
sbb
(bad)
dec
gs
jecxz
dec
dec
repnz
fild
(bad)
sub
(bad)
nop
mov
fisubr
add
(bad)
push
mov
mov
fs
(bad)
push
add
in
pop
jno
sub
(bad)
(bad)
inc
push
or
(bad)
and
jge
(bad)
xchg
repz
fstp
cs
inc
xchg
(bad)
(bad)
(bad)
call
adc
jl
inc
sub
dec
enter
fidivr
call
out
mov
ins
add
xchg
mov
add
sub
push
adc
cmp
adc
jmp
sbb
ins
test
js
push
push
cmp
push
fimul
push
dec
adc
scas
mov
xchg
cmp
(bad)
(bad)
fadd
retf
pushf
jnp
int
fidivr
addr16
add
push
mov
jb
push
sub
call
test
imul
mov
push
pop
dec
test
cmps
ins
jb
inc
popf
(bad)
(bad)
call
in
test
cmp
daa
push
jmp
retf
pop
mov
jmp
jmp
xchg
fwait
dec
jecxz
adc
push
cmp
sub
xchg
addr16
ja
addr16
(bad)
(bad)
call
cmp
push
sub
inc
ror
xor
adc
jnp
(bad)
(bad)
fcomip
push
dec
xchg
outs
loop
ss
(bad)
xor
add
fdiv
jbe
jmp
das
fistp
xor
not
fcomp
pop
bsf
loopne
push
xchg
sar
cld
data16
mov
dec
pop
pop
mov
sbb
(bad)
jmp
add
lock
mov
cmc
test
cmp
adc
enter
les
jg
push
test
mov
gs
xlat
pop
(bad)
jb
xlat
cmp
(bad)
inc
mov
test
lods
(bad)
sti
mov
mov
in
inc
cmp
(bad)
dec
and
or
aam
mov
es
sbb
mov
push
loopne
js
(bad)
(bad)
(bad)
clc
mov
sub
ja
nop
and
push
setl
sub
out
(bad)
push
(bad)
(bad)
(bad)
jmp
cmp
push
out
or
sbb
call
popa
sub
imul
in
icebp
jg
dec
sbb
lods
adc
retf
inc
cs
(bad)
(bad)
inc
int3
adc
in
push
sbb
cmp
hlt
sti
xchg
pop
xchg
dec
mov
sub
(bad)
(bad)
(bad)
(bad)
cmp
test
mov
sub
pop
mov
mov
arpl
rol
loopne
and
xor
(bad)
(bad)
dec
sub
(bad)
outs
sub
inc
cdq
adc
mov
fadd
je
inc
outs
dec
ret
hlt
(bad)
inc
out
js
mov
add
mov
push
xor
rol
(bad)
mov
dec
cwde
jnp
out
inc
sbb
jae
xchg
call
push
stc
xchg
dec
js
inc
xor
and
inc
lock
(bad)
(bad)
(bad)
xor
sti
das
cdq
pop
push
push
push
sbb
jmp
sahf
in
adc
sub
push
push
hlt
hlt
sub
jo
mov
inc
cmp
(bad)
(bad)
jmp
pushf
inc
addr16
xchg
in
push
inc
mov
mov
dec
movs
cmp
xchg
in
(bad)
(bad)
call
idiv
stos
into
and
lock
loopne
mov
push
jg
mov
cdq
cmp
sbb
(bad)
(bad)
dec
cmp
xchg
adc
call
cmp
mov
or
push
xor
fstp
jmp
aaa
cld
(bad)
call
in
mov
xlat
iret
outs
jb
cdq
ss
imul
test
mov
(bad)
(bad)
fucomi
icebp
(bad)
push
dec
mov
xchg
xor
jmp
mov
(bad)
cmp
(bad)
(bad)
(bad)
jmp
cs
inc
xchg
cmp
repnz
xchg
pop
cmp
(bad)
jo
rol
(bad)
(bad)
sti
rcr
out
das
xchg
add
ficomp
popa
enter
adc
or
push
inc
pop
xchg
jno
ret
(bad)
(bad)
call
jae
ins
call
ficomp
fcmovnbe
mov
(bad)
(bad)
(bad)
jg
dec
adc
ror
dec
and
or
mov
cmp
add
jo
(bad)
(bad)
jmp
xchg
xchg
xchg
outs
in
push
push
xor
out
hlt
mov
data16
(bad)
call
ds
pop
je
cs
or
pop
(bad)
fld
jnp
sbb
loope
out
and
(bad)
(bad)
(bad)
jmp
sahf
imul
sbb
inc
mov
adc
push
lea
xchg
mov
push
and
sbb
stos
(bad)
(bad)
(bad)
call
jl
stos
retf
add
adc
xchg
in
stos
(bad)
jbe
shl
lods
sbb
test
scas
cli
add
cmc
lds
push
dec
mov
jae
dec
out
cwde
jecxz
lock
repnz
icebp
and
push
mov
and
adc
add
push
pop
pop
mov
jp
out
push
into
cdq
sub
adc
test
xchg
inc
leave
in
mov
(bad)
(bad)
push
cmp
pop
js
jg
xor
inc
add
cmps
inc
test
fst
push
loopne
(bad)
(bad)
(bad)
dec
sub
out
mov
outs
jno
aad
popa
jp
cwde
sub
aaa
sub
aas
jne
cmps
cmp
sar
(bad)
push
aad
fdiv
cmp
pop
inc
(bad)
jg
xchg
dec
js
rol
inc
sub
test
inc
xchg
add
dec
jo
ds
sub
adc
icebp
rcr
fcmovnb
xor
div
hlt
add
mov
inc
sub
je
imul
(bad)
call
pop
outs
add
icebp
mov
jno
jmp
push
gs
hlt
push
outs
sbb
mov
imul
imul
(bad)
(bad)
dec
add
and
popf
or
lods
mov
sbb
lds
push
pop
repnz
in
fwait
retf
stc
(bad)
(bad)
(bad)
inc
test
push
xor
pop
lods
dec
repz
call
adc
pop
std
call
xlat
movs
pop
and
pop
xor
mov
fbstp
cwde
ds
and
jmp
je
enter
sub
out
hlt
add
(bad)
fsub
sub
add
inc
loop
mov
lock
cmp
ror
aaa
stos
xchg
mov
inc
ror
mov
inc
das
cli
jg
ror
stos
das
pop
daa
pand
scas
mov
push
push
mov
scas
cli
cmp
sub
or
jmp
ficom
xchg
push
sar
mov
xchg
cli
retf
xchg
(bad)
(bad)
(bad)
jmp
inc
imul
mov
pop
push
int
call
cmp
and
push
mov
cmp
fnsave
sti
push
mov
xchg
sub
xor
scas
icebp
outs
and
xor
(bad)
(bad)
push
push
pop
int
test
mov
out
(bad)
call
fistp
pusha
xlat
pop
hlt
add
outs
(bad)
(bad)
mov
retf
dec
cmc
sub
add
fcom
gs
(bad)
cmp
jo
cmp
inc
shl
je
xchg
adc
stc
pop
ins
mov
iret
(bad)
jg
jmp
icebp
loop
rcr
xor
mov
mov
xchg
mov
(bad)
(bad)
push
std
call
clc
es
jge
in
mov
mov
push
and
mov
lock
scas
(bad)
(bad)
fild
arpl
test
test
inc
cmc
jmp
pop
int
sar
call
xchg
xchg
push
adc
sbb
pop
add
scas
xchg
or
mov
(bad)
(bad)
jmp
loop
stos
adc
movs
push
add
aad
pop
dec
jp
mov
inc
pop
(bad)
(bad)
(bad)
inc
sbb
movs
(bad)
push
push
jnp
pop
in
(bad)
scas
fmul
pushf
imul
ret
mov
push
mov
(bad)
(bad)
(bad)
jle
arpl
dec
mov
loop
neg
ja
ins
out
nop
push
(bad)
(bad)
jmp
cwde
pop
sbb
mov
xor
fs
dec
xchg
xor
ja
imul
add
out
cmps
inc
push
(bad)
(bad)
(bad)
mov
jbe
xor
int3
or
dec
push
jne
and
mov
mov
xchg
imul
push
pusha
and
pop
and
mov
push
pop
or
(bad)
(bad)
call
xlat
in
push
cdq
bound
mov
jbe
(bad)
lea
mov
or
pop
mov
(bad)
(bad)
call
in
and
add
jl
inc
mov
jbe
sbb
div
inc
inc
cmp
in
(bad)
(bad)
call
pusha
sti
(bad)
fxch
ins
fldcw
mov
int3
sbb
mov
shl
cmps
sub
(bad)
(bad)
jmp
pop
fisttp
cmp
mov
and
sbb
add
outs
cmp
(bad)
(bad)
(bad)
rcr
std
pop
aam
adc
mov
clc
xor
sub
or
mov
cld
(bad)
cmp
in
rol
jne
sbb
dec
inc
fwait
stos
jg
cwde
pushf
(bad)
(bad)
(bad)
dec
pop
mov
sub
iret
pop
fistp
in
cmc
popf
or
jg
enter
jg
jb
ins
(bad)
jg
push
lds
ror
hlt
aaa
add
mov
mov
leave
jne
leave
(bad)
mov
test
sbb
push
mov
adc
dec
mov
ss
inc
pop
imul
(bad)
call
(bad)
jle
retf
bound
xchg
xchg
or
out
mov
lods
popf
jp
loopne
(bad)
mov
mov
jne
sbb
jge
xchg
and
rol
shr
(bad)
jmp
sub
pop
fwait
and
mov
dec
in
mov
add
mov
or
(bad)
(bad)
(bad)
fimul
dec
xchg
addr16
jecxz
ds
scas
sbb
lock
ret
cdq
mov
cld
mov
cld
adc
(bad)
(bad)
jmp
fisttp
into
sub
hlt
lods
ds
aam
ins
int
(bad)
(bad)
(bad)
push
lods
repz
push
and
inc
pop
jle
push
xor
push
add
in
fild
inc
int3
(bad)
(bad)
(bad)
(bad)
mov
sub
into
int3
daa
imul
push
cmc
loop
jl
iret
push
pop
mov
fst
sub
push
call
add
(bad)
dec
ss
shrd
pop
not
sub
lds
dec
ret
(bad)
(bad)
(bad)
call
cld
xchg
into
mov
leave
jle
imul
mov
loop
sahf
xchg
mov
(bad)
jmp
pop
(bad)
(bad)
(bad)
inc
cli
rol
xchg
loope
adc
popf
int3
xchg
das
xor
mov
add
(bad)
(bad)
(bad)
mov
fidiv
xchg
dec
bound
ins
in
cmp
sbb
ds
push
dec
icebp
add
jecxz
(bad)
(bad)
(bad)
call
xor
das
mov
mov
out
mov
sbb
int
push
fld
ror
push
mov
cmp
lods
pop
aas
(bad)
in
ss
mov
mov
(bad)
out
and
popf
shl
cmps
and
lahf
lahf
cwde
sahf
addr16
mov
dec
and
pop
int
(bad)
(bad)
inc
jle
inc
mov
call
das
shl
dec
jbe
sub
jg
cdq
dec
mov
(bad)
fcomip
je
std
pop
cld
push
jle
movs
stc
mov
nop
es
cmps
(bad)
xlat
sub
aad
sbb
(bad)
(bad)
(bad)
(bad)
jmp
jae
mov
push
inc
dec
mov
mov
(bad)
(bad)
call
nop
adc
dec
mov
jb
daa
xor
sar
dec
aaa
mov
imul
inc
inc
outs
push
mov
(bad)
fwait
cmp
jne
pop
sub
das
movs
lahf
cmc
and
and
sub
loop
mov
mov
lock
fadd
inc
and
je
hlt
movs
test
jecxz
jmp
test
ins
retf
(bad)
fcomip
call
inc
lds
push
pop
push
jb
int3
lock
push
fwait
test
ds
(bad)
aas
dec
retf
push
sysret
imul
imul
aam
(bad)
(bad)
call
jl
cmp
(bad)
aad
pushf
xchg
dec
xchg
dec
sub
cld
ds
fdivr
(bad)
call
hlt
adc
xchg
cmp
out
dec
mov
lahf
outs
dec
push
mov
int
xor
shl
addr16
(bad)
(bad)
call
push
sbb
mov
mov
dec
aam
addr16
out
cmps
fdivr
jle
ret
iret
jmp
out
cli
inc
mov
jo
jmp
fsubr
pushf
push
mov
das
sar
adc
and
daa
scas
fdiv
pop
inc
inc
push
jo
dec
mov
(bad)
dec
mov
push
shl
inc
fwait
inc
std
cwde
mov
or
js
mov
push
jg
add
mov
dec
stos
sbb
cmp
(bad)
(bad)
(bad)
call
loope
ffreep
inc
jmp
mov
add
aad
je
movs
mov
or
call
test
xlat
and
cmps
mov
sar
sub
test
sar
inc
and
rol
and
mov
mov
in
sbb
push
(bad)
jmp
fsubr
inc
les
mov
pop
fmul
dec
dec
jae
cmps
sbb
push
mov
aad
add
test
fs
mov
inc
mov
ins
cmp
(bad)
(bad)
jmp
rcl
mov
mov
adc
and
sub
lds
mov
(bad)
sti
out
push
sub
cmps
fwait
xchg
lahf
pusha
mov
pop
cmp
(bad)
pop
mov
mov
pop
(bad)
(bad)
(bad)
call
fiadd
push
jne
jnp
jb
leave
arpl
jle
dec
xchg
dec
mov
rcr
jb
leave
mov
mov
jmp
nop
std
ins
(bad)
mov
data16
push
push
mov
fadd
mov
fisub
(bad)
mov
(bad)
das
sub
or
(bad)
pop
push
cs
retf
fwait
dec
dec
jp
mov
das
xor
inc
pop
sti
mov
imul
lods
jo
inc
push
xchg
xchg
mov
outs
(bad)
adc
jmp
in
jl
mov
adc
fmul
adc
fisttp
gs
cmp
and
jb
jp
sti
clc
stos
xchg
(bad)
vmovntps
fild
(bad)
(bad)
(bad)
inc
and
daa
sbb
or
shr
test
xchg
or
fldenv
ret
mov
adc
std
popa
in
nop
and
mov
mov
sbb
jbe
dec
mov
retf
out
mov
jmp
pop
xor
cmc
cmc
(bad)
(bad)
(bad)
push
mov
adc
test
rcr
sub
ficomp
mov
add
xchg
fldenv
(bad)
(bad)
(bad)
fidivr
iret
push
outs
add
add
adc
push
aas
add
mov
pop
je
and
push
and
nop
adc
outs
mov
(bad)
(bad)
(bad)
call
pop
add
in
mov
cmp
sbb
int3
je
mov
lahf
call
jmp
out
hlt
and
je
hlt
pusha
jb
loope
leave
mov
jne
push
movs
sbb
mov
int
imul
(bad)
jmp
dec
int
loop
inc
mov
fstp
cmc
cmp
mov
rcl
push
or
lahf
push
or
or
and
(bad)
(bad)
dec
add
dec
mov
inc
and
dec
xor
mov
and
stos
in
scas
lds
outs
es
add
out
aas
push
daa
jo
adc
adc
sbb
(bad)
shl
jp
addr16
stos
(bad)
mov
hlt
mov
or
fld
sub
(bad)
aas
cmc
(bad)
(bad)
call
inc
pop
repnz
jle
ror
cs
shl
ja
icebp
bsf
(bad)
(bad)
fist
xchg
(bad)
mov
or
sbb
or
jmp
push
(bad)
(bad)
mov
sub
xchg
stos
cmp
cmc
sbb
je
wbinvd
out
or
outs
int3
mov
push
cld
sti
mov
add
pop
pop
xchg
pop
pop
or
mov
int3
in
and
daa
pop
jo
sar
xor
xchg
inc
fwait
fs
adc
push
fild
dec
xchg
add
mov
and
sub
(bad)
mov
(bad)
(bad)
push
mul
dec
add
sbb
mov
push
clc
xlat
lods
dec
enter
mov
cmc
(bad)
jmp
adc
rcr
adc
jmp
ret
into
das
int3
mov
or
push
or
aam
cwde
jbe
repz
mov
jmp
outs
push
mov
inc
inc
mov
retf
mov
and
add
ja
and
movs
dec
add
adc
bound
outs
sahf
fcos
ja
push
retf
xchg
dec
push
cmp
pop
push
mov
xor
adc
(bad)
(bad)
(bad)
(bad)
jge
mov
or
dec
test
inc
movs
fisubr
test
(bad)
dec
xlat
cwde
xor
fldcw
icebp
fcom
xchg
add
or
rcr
(bad)
(bad)
(bad)
call
or
sar
and
test
es
cdq
push
icebp
das
lock
ins
(bad)
(bad)
(bad)
jmp
pop
fstp
shl
mov
lods
inc
add
cmps
jmp
les
xor
in
xchg
fidivr
movs
sub
lock
clc
pop
push
stc
dec
pop
test
inc
pop
data16
push
mov
adc
pop
les
(bad)
(bad)
(bad)
call
adc
out
xchg
int3
or
gs
push
ret
not
enter
push
pop
push
lods
push
das
lds
mov
dec
mov
dec
pop
lahf
xchg
call
(bad)
in
stos
jge
daa
jae
jmp
sub
sub
adc
mov
or
and
cli
pop
xor
pop
mov
xchg
mov
mov
xor
inc
fdiv
add
(bad)
mov
sbb
cs
sbb
(bad)
(bad)
(bad)
ffreep
mov
adc
arpl
adc
push
cwde
xor
xor
sbb
xchg
fs
inc
xchg
mov
(bad)
(bad)
mov
pusha
push
mov
retf
in
push
data16
call
add
or
or
(bad)
(bad)
out
mov
mov
mov
cmp
xor
cdq
(bad)
fsub
(bad)
out
sar
(bad)
jg
cmp
pop
xchg
iret
add
fidiv
pop
int3
push
mov
xlat
sbb
mov
sbb
adc
sub
call
sbb
push
inc
icebp
out
cwde
lods
je
(bad)
(bad)
jmp
add
mov
jb
sub
mov
pop
mov
lahf
ja
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
mov
lock
xchg
add
movs
push
and
push
mov
dec
add
pop
cmc
sub
rol
fiadd
repnz
lahf
call
(bad)
(bad)
mov
sbb
cmp
dec
xlat
pop
hlt
loop
ss
loope
fldcw
shl
cmp
cmp
jg
pop
lock
inc
jmp
in
div
xchg
inc
in
jb
lds
push
sbb
iret
in
bound
out
inc
outs
cli
mov
jbe
push
movs
loopne
loopne
pop
push
mov
test
(bad)
(bad)
push
out
call
iret
fnstsw
cmp
test
dec
mov
mov
(bad)
(bad)
jmp
mov
pop
lea
pop
and
or
xor
pop
xchg
(bad)
jmp
(bad)
std
icebp
push
out
jle
pop
xor
mov
icebp
in
push
imul
jmp
mov
daa
xchg
and
mov
aaa
and
shl
(bad)
(bad)
(bad)
(bad)
mov
mul
stos
sub
adc
xor
stos
scas
sbb
sbb
mov
(bad)
(bad)
(bad)
jmp
or
and
xor
xchg
sbb
push
fwait
popf
jmp
icebp
nop
sub
ins
(bad)
(bad)
(bad)
inc
sbb
retf
leave
cmp
inc
adc
sub
pushf
pop
fdiv
jmp
xchg
add
imul
or
adc
sbb
(bad)
call
mov
cmp
mov
mov
xor
mov
cli
pop
fidivr
pop
cmc
jmp
shr
out
repnz
inc
imul
popa
imul
cmp
(bad)
(bad)
jmp
cmp
xchg
jge
cmp
jne
(bad)
inc
sub
lods
ds
push
xor
mov
pop
xchg
(bad)
call
mov
xlat
sub
fdivr
jmp
xchg
add
sbb
(bad)
xlat
lea
push
dec
push
iret
mov
clc
(bad)
jmp
mov
inc
dec
imul
icebp
movs
pushf
pop
sub
(bad)
dec
add
imul
sub
cld
ret
push
mov
pop
xchg
(bad)
(bad)
(bad)
jmp
xchg
cld
cwde
or
xor
aad
and
jnp
mov
jle
dec
cli
hlt
xlat
out
add
scas
test
mov
cmp
js
inc
sub
ret
fcom
jbe
pop
cmp
pop
in
test
stos
mov
adc
std
retf
mov
sbb
aaa
pop
icebp
call
das
ficomp
shl
(bad)
push
in
push
push
(bad)
(bad)
(bad)
jmp
pop
scas
inc
push
pusha
or
pop
js
cmps
div
(bad)
icebp
jne
pop
jae
jo
ficomp
test
idiv
(bad)
(bad)
(bad)
cmp
(bad)
adc
jmp
daa
lods
js
adc
cli
test
(bad)
push
data16
pop
rol
(bad)
(bad)
push
into
pop
fimul
jle
mov
into
outs
cmc
inc
scas
push
rcl
arpl
pop
xor
(bad)
dec
dec
xor
leave
xor
rcl
mov
adc
jmp
xchg
mov
jg
lock
xor
jns
ret
jmp
test
(bad)
(bad)
(bad)
fucomi
daa
add
adc
fbstp
xchg
mov
xchg
push
sub
test
mov
pop
pop
xor
pop
bound
sub
ficomp
(bad)
(bad)
call
mov
adc
push
xor
dec
aas
jmp
mov
mov
(bad)
(bad)
jmp
xor
les
xchg
cwde
cmp
es
fcomip
sub
movs
das
dec
xchg
mov
mov
(bad)
(bad)
inc
push
js
aas
scas
in
sub
dec
(bad)
leave
lea
add
cmp
push
aaa
mov
ins
xchg
popa
lods
jmp
(bad)
inc
movs
mov
xlat
dec
xor
inc
push
and
xor
cmp
fnstcw
xor
inc
or
sbb
add
shl
mov
cmp
in
fstp
mov
pop
sar
(bad)
(bad)
push
sub
loop
test
mov
out
push
push
jns
mul
cmp
mov
nop
pushf
mov
(bad)
call
pop
call
mov
in
sbb
push
ins
jge
(bad)
(bad)
(bad)
(bad)
jmp
xor
push
adc
daa
cmp
xor
aam
jle
inc
(bad)
(bad)
inc
xchg
ds
ins
repz
aaa
je
or
mov
sbb
add
mov
cmp
mov
jmp
push
xchg
adc
outs
sahf
in
xor
(bad)
(bad)
jmp
adc
ja
scas
mov
mov
dec
mov
mov
mov
mov
popf
add
(bad)
dec
cmp
and
inc
(bad)
or
xor
add
movs
call
cmps
push
xlat
inc
xlat
je
in
mov
std
sub
(bad)
(bad)
(bad)
(bad)
(bad)
aas
push
pop
sub
push
jp
jae
mov
(bad)
mov
push
push
push
test
and
xchg
aad
jo
(bad)
(bad)
push
cmp
imul
test
fistp
in
iret
test
jmp
(bad)
jmp
fimul
sbb
ss
inc
js
adc
push
push
xchg
fdivr
push
xor
sbb
and
(bad)
(bad)
push
mov
outs
add
shr
cmp
mov
shl
sbb
cmp
jmp
cmps
xor
les
fistp
fcomp
bound
movs
test
leave
dec
cld
cmc
sub
test
inc
nop
lods
sar
mov
test
xchg
ja
cmps
dec
xchg
pushf
into
ja
adc
(bad)
jmp
call
inc
cld
xchg
xor
shufps
push
mov
(bad)
(bad)
(bad)
(bad)
jmp
ret
and
push
mov
leave
cld
in
fsubr
cmp
ins
jb
mov
mov
push
jp
neg
imul
ds
in
(bad)
xor
dec
or
retf
stc
jg
(bad)
(bad)
(bad)
call
fwait
push
jle
sub
sub
scas
xchg
inc
pop
ficom
mov
(bad)
(bad)
jmp
cmp
out
or
ret
push
jbe
in
jno
jecxz
xor
jge
les
hlt
add
aas
pop
icebp
sub
or
(bad)
fisubr
mov
inc
gs
xchg
pop
(bad)
(bad)
(bad)
inc
(bad)
mov
call
cmc
mov
adc
das
ror
loop
lock
call
enter
sub
(bad)
imul
mov
imul
(bad)
(bad)
(bad)
call
(bad)
add
ss
add
xchg
popa
pushf
dec
push
inc
push
imul
sbb
and
pop
loopne
push
pop
push
int3
cmps
test
ins
leave
adc
inc
mov
(bad)
(bad)
(bad)
jmp
cmc
int
jle
xor
jl
dec
retf
mov
into
ins
es
call
dec
hlt
(bad)
(bad)
dec
sbb
and
into
inc
mov
les
pop
dec
test
ss
test
mov
jl
test
sbb
inc
push
add
mov
mov
hlt
(bad)
shl
add
fild
and
test
enter
push
cs
lods
push
lahf
div
(bad)
(bad)
call
cmp
push
loop
sbb
pop
cld
cmp
es
ins
aas
sub
adc
adc
js
(bad)
jg
mov
mov
push
dec
arpl
retf
ret
adc
xchg
(bad)
cmp
jbe
call
push
stos
mov
dec
das
sbb
sti
les
arpl
out
popa
js
(bad)
(bad)
(bad)
(bad)
jle
sbb
jbe
pop
(bad)
in
aas
add
repnz
(bad)
stos
leave
std
aam
or
dec
xor
sbb
cmp
jmp
mov
cmc
and
nop
adc
push
or
(bad)
(bad)
(bad)
(bad)
jns
mov
lea
cli
sub
adc
xchg
daa
imul
(bad)
(bad)
in
mov
rcl
push
int
popa
in
jmp
mov
pop
cmp
adc
lock
out
jns
mov
es
xor
call
cmps
cmps
sub
cmps
cmp
pushf
push
mov
xor
pcmpgtb
push
(bad)
cli
or
lds
dec
mov
(bad)
fistp
adc
adc
leave
call
psllw
xor
adc
dec
push
push
daa
call
inc
call
mov
jg
(bad)
(bad)
mov
iret
dec
push
mov
or
div
lahf
dec
(bad)
(bad)
(bad)
(bad)
cld
popf
or
movs
ds
les
in
int3
hlt
sub
retf
xor
(bad)
call
dec
pop
(bad)
cmp
leave
scas
push
das
sti
in
dec
retf
mov
(bad)
dec
add
dec
jmp
pop
mov
dec
jmp
dec
(bad)
repz
sub
test
fldenv
or
jmp
shl
(bad)
out
jns
std
sbb
mov
or
out
stos
sub
jb
cdq
sbb
enter
(bad)
out
cli
mov
call
add
mov
hlt
fsubr
jmp
mov
ja
(bad)
jbe
outs
jb
mov
sub
(bad)
inc
cmps
dec
xchg
inc
mov
call
xor
jmp
and
jl
mov
jmp
into
(bad)
dec
lock
test
pushf
in
jnp
mov
mov
xadd
(bad)
(bad)
(bad)
fnsetpm(287
idiv
pusha
enter
data16
pop
and
ja
sub
fidiv
mov
(bad)
(bad)
call
mov
sbb
push
mov
mov
xor
mov
push
test
jecxz
(bad)
mov
stc
fadd
xchg
or
cmp
outs
out
arpl
sub
(bad)
(bad)
inc
push
inc
call
add
cmp
and
adc
pop
xor
push
fist
mov
mov
ffreep
jle
mov
dec
sti
movs
or
(bad)
(bad)
(bad)
dec
sub
scas
add
xor
je
and
ror
repz
stos
sar
(bad)
jg
jle
mov
push
push
test
cmps
aas
xor
or
cmp
xchg
push
xchg
lock
dec
ret
out
mov
or
aas
mov
push
(bad)
(bad)
(bad)
(bad)
out
adc
pusha
and
ins
sti
ins
outs
(bad)
xor
cdq
(bad)
xor
sub
xchg
repz
xor
(bad)
call
jmp
add
xchg
jo
add
jl
inc
push
(bad)
in
mov
mov
jmp
scas
lea
(bad)
fist
or
push
out
aam
jmp
mov
(bad)
(bad)
(bad)
clc
nop
loope
or
shl
fs
mov
jns
cmps
dec
test
std
(bad)
(bad)
mov
pop
and
fld
push
xor
cmp
(bad)
enter
pop
enter
adc
xor
push
dec
sbb
fisubr
add
stos
(bad)
scas
jns
dec
out
or
mov
xchg
popf
mov
lds
addr16
push
pop
mov
and
push
mov
add
cld
rol
cmp
aam
movs
pop
cmp
mov
mov
jno
shl
shr
loope
add
add
out
adc
(bad)
fcomip
(bad)
cmp
and
movs
pop
mov
fwait
shr
fdiv
jmp
pushf
(bad)
fbld
inc
gs
addr16
mov
mov
ret
arpl
cmps
inc
fistp
jno
sbb
loop
jmp
mov
xchg
mov
and
(bad)
mov
out
leave
aam
ds
pop
imul
sbb
push
gs
or
sahf
or
(bad)
scas
dec
sub
dec
jb
shr
es
xor
pop
fbstp
xchg
jo
(bad)
(bad)
(bad)
(bad)
dec
call
dec
mov
inc
pop
loopne
lods
sbb
pop
dec
enter
iret
pop
add
(bad)
fcomip
xchg
bound
int
sub
leave
inc
pop
mov
ja
jg
fwait
mov
(bad)
(bad)
jmp
mov
cmp
dec
xchg
jmp
xchg
nop
mov
aad
je
and
cmps
dec
cmc
add
push
sbb
shl
sub
sbb
jle
retf
xor
mov
mov
adc
push
shr
fimul
xor
jg
mov
cmp
sbb
sub
inc
test
fwait
cmp
sub
(bad)
(bad)
(bad)
inc
pushf
push
xor
push
dec
paddb
sahf
mov
dec
mov
sub
das
ds
aas
shl
stos
jecxz
(bad)
call
dec
imul
fadd
mov
xor
cld
aam
es
mov
dec
jb
dec
jne
test
das
stos
pop
mov
ja
popf
mov
or
(bad)
call
fisttp
dec
sbb
retf
(bad)
pop
pop
ja
or
add
xor
sub
retf
mov
jnp
mov
mov
(bad)
(bad)
(bad)
push
dec
cmp
and
cmp
(bad)
cmps
mov
pop
dec
in
in
push
shl
movs
in
jo
(bad)
(bad)
(bad)
jmp
add
les
cdq
dec
jl
lock
or
jecxz
cmp
outs
(bad)
(bad)
(bad)
cmp
iret
sar
repnz
pop
fcmovnu
mov
mov
xor
or
pop
ja
xchg
fdivr
sti
je
inc
outs
ror
in
sub
bound
(bad)
(bad)
(bad)
dec
stc
fnstsw
dec
test
stos
stc
lods
cld
adc
xchg
sahf
xor
clc
imul
int
inc
(bad)
js
popa
jns
mov
dec
inc
(bad)
cmp
jg
mov
loopne
sbb
pushf
rep
(bad)
(bad)
(bad)
inc
add
lea
add
xor
push
jmp
cmp
mov
add
jle
in
pop
daa
lods
stos
mov
push
rcl
cdq
xchg
outs
stc
inc
ret
es
inc
out
stos
jno
sahf
sbb
popa
test
retf
xchg
cmp
jmp
mov
add
div
mov
add
ja
lods
jbe
mov
push
mov
inc
data16
(bad)
(bad)
(bad)
(bad)
mov
or
or
push
adc
xor
fistp
or
jle
loop
(bad)
cmp
and
icebp
(bad)
(bad)
call
data16
xchg
mov
shl
shr
(bad)
(bad)
jns
pusha
std
cmc
in
(bad)
call
sbb
enter
inc
out
or
xor
test
(bad)
sti
sahf
je
aaa
cmp
pop
push
loope
cmc
fdiv
shr
jo
mov
(bad)
(bad)
(bad)
push
sub
adc
and
call
(bad)
in
mov
out
(bad)
inc
mov
inc
sbb
push
jns
int3
xor
mov
test
or
dec
lock
cmc
jnp
xor
push
sbb
cwde
cwde
bound
lds
mov
cmps
into
aam
mov
adc
ja
ret
adc
adc
(bad)
(bad)
(bad)
sti
pushf
sub
adc
jno
mov
push
jp
(bad)
fs
int3
scas
mov
jmp
adc
pop
pop
sbb
adc
call
xchg
sub
push
(bad)
(bad)
(bad)
call
das
push
sub
cmps
jg
js
jmp
sahf
mov
(bad)
inc
cli
push
out
dec
daa
sbb
xor
(bad)
jg
cld
mov
mov
xor
xor
ja
call
js
je
(bad)
(bad)
(bad)
(bad)
jmp
inc
adc
test
jb
xor
mov
(bad)
push
jmp
arpl
adc
pop
sbb
shl
or
data16
cmp
call
cmps
mul
cmp
leave
int3
aad
and
sbb
xchg
sbb
push
idiv
(bad)
(bad)
push
pop
jns
xchg
push
xor
aas
xchg
adc
push
in
push
test
jne
and
xchg
sti
(bad)
(bad)
push
dec
popa
ds
fsubr
or
sub
fisubr
mov
sbb
(bad)
dec
pop
jge
cmp
pop
mov
xor
add
test
es
jecxz
(bad)
(bad)
jmp
repz
inc
mov
iret
adc
inc
aam
or
gs
cli
add
inc
imul
push
jno
or
cmp
cmp
cmc
fnstsw
and
(bad)
dec
aaa
and
or
cmp
cs
je
mov
out
and
(bad)
xchg
inc
fild
in
or
dec
or
(bad)
fwait
sub
push
out
fisttp
loopne
fidivr
pushf
retf
ins
adc
push
(bad)
(bad)
(bad)
call
shl
ins
push
push
scas
push
xor
sbb
bound
mov
fdiv
popa
cmp
arpl
fwait
(bad)
(bad)
(bad)
inc
aam
inc
cmp
xor
mov
cmps
into
sbb
xor
or
xchg
imul
inc
sub
std
mov
popa
pop
cmps
pushf
mov
push
js
xchg
jecxz
std
loope
cs
(bad)
jmp
test
push
xchg
and
push
sbb
jmp
jbe
adc
jo
xchg
in
dec
mov
dec
leave
and
jg
mov
ja
add
mov
mov
inc
loop
xor
(bad)
(bad)
push
div
outs
sub
jbe
xchg
fdiv
push
push
xor
mov
inc
and
mov
es
dec
pop
cmp
adc
mov
sahf
(bad)
sbb
dec
cmp
outs
jmp
test
jecxz
or
push
pop
add
pop
stc
xor
fcomip
(bad)
call
and
aas
out
data16
mov
les
test
add
mov
neg
repnz
and
xchg
(bad)
call
cld
popa
(bad)
nop
ret
jmp
dec
dec
and
push
cmp
call
add
movs
mov
imul
xor
add
out
sub
xchg
xor
cld
mov
shl
jae
pusha
in
sbb
stc
aas
(bad)
pop
icebp
inc
and
pop
call
or
sub
(bad)
(bad)
(bad)
jmp
leave
vcvtsd2si
(bad)
or
and
in
sti
or
lods
lods
repz
dec
call
dec
dec
iret
das
mov
movs
iret
cmps
stos
bound
fst
test
outs
call
addr16
mov
add
lahf
mov
(bad)
mov
mov
sbb
pop
mov
jb
or
ficomp
ror
into
push
out
ss
add
cld
(bad)
(bad)
(bad)
(bad)
fisub
rol
jl
leave
jecxz
loopne
inc
aas
mov
(bad)
mov
loop
(bad)
(bad)
(bad)
call
retf
and
clc
cmp
neg
sbb
pop
sub
xor
call
pop
clc
mov
jg
aad
jns
cs
dec
lock
ficom
(bad)
(bad)
(bad)
call
sbb
pop
data16
lahf
pop
mov
adc
neg
fbld
mov
aam
pop
push
sub
enter
xchg
jne
(bad)
(bad)
call
enter
jl
aas
lea
retf
and
push
or
das
mov
(bad)
(bad)
(bad)
call
pop
jnp
sub
or
cli
sub
nop
(bad)
mov
cmp
in
jecxz
pushf
pusha
sub
cdq
sub
call
loopne
push
and
retf
retf
jns
mov
jnp
lods
stos
data16
mov
(bad)
dec
or
pop
or
jnp
and
inc
daa
adc
out
or
mov
retf
xchg
lock
(bad)
(bad)
(bad)
call
pop
aas
cmp
jmp
(bad)
cmp
test
cmp
movs
fdiv
mov
sub
(bad)
(bad)
push
cmp
jnp
imul
lods
mov
pop
sub
push
stos
(bad)
jmp
adc
xor
push
ins
pop
mov
aad
pop
pop
jl
(bad)
(bad)
dec
push
int3
in
xor
pop
bnd
mov
pop
stos
lods
pop
movs
pop
int
pop
mov
add
(bad)
call
sbb
jmp
in
and
lock
(bad)
(bad)
jg
and
push
mov
mov
loope
enter
mov
mov
leave
jnp
xchg
sub
mov
(bad)
(bad)
jmp
mov
xlat
dec
adc
sti
pushf
adc
inc
lahf
mov
cmps
inc
adc
mov
pop
push
sbb
pop
jmp
int3
(bad)
(bad)
(bad)
call
lods
xchg
mov
mov
mov
xchg
in
inc
inc
add
enter
mov
(bad)
(bad)
(bad)
(bad)
fmul
jb
popa
iret
lahf
mov
in
and
pop
push
outs
sbb
icebp
jb
dec
shl
(bad)
(bad)
(bad)
call
(bad)
lea
sbb
repnz
fstp
xchg
fwait
mul
push
pop
mov
and
sbb
(bad)
push
xor
sahf
cmp
cmp
cmc
cmp
jmp
movs
pop
movlps
and
sub
xor
cmp
sar
ins
loopne
inc
sbb
cmps
mov
sub
pop
(bad)
(bad)
(bad)
inc
stc
cld
fcomp
mov
sbb
sahf
dec
(bad)
fidiv
jle
call
stc
nop
out
add
or
loope
fisub
and
jo
cmp
fidiv
jae
aaa
push
pop
std
mov
(bad)
jmp
in
dec
or
mov
xor
not
jmp
(bad)
(bad)
(bad)
call
pop
in
push
gs
pop
xor
jecxz
xchg
iret
in
jbe
xchg
or
loopne
jmp
fistp
and
mov
push
call
mov
in
inc
ds
lods
inc
push
mov
sbb
push
(bad)
adc
mov
outs
daa
jmp
pop
mov
movs
(bad)
dec
jle
jg
jne
mov
xchg
push
mov
cli
jmp
in
push
fwait
add
fsubrp
sbb
(bad)
(bad)
(bad)
sti
test
add
cmp
jb
cli
ret
pushf
sbb
dec
ret
mov
clc
(bad)
jmp
loop
xor
(bad)
sub
adc
repz
mov
xor
call
add
fnsave
xchg
add
pop
in
mov
movs
mov
(bad)
(bad)
push
xchg
and
push
test
ins
jecxz
mov
push
loope
fild
pop
sbb
dec
pushf
inc
adc
pop
cld
sti
fwait
lods
jb
(bad)
(bad)
mov
movs
add
push
jmp
push
fist
push
pop
pop
stos
jnp
sbb
(bad)
(bad)
jmp
ror
xor
pop
dec
mov
jl
inc
or
retf
inc
sbb
int
sub
xor
jle
xchg
es
(bad)
(bad)
(bad)
call
pop
jge
je
dec
(bad)
mov
adc
adc
in
test
pop
scas
je
jae
mov
cmps
scas
fadd
(bad)
(bad)
(bad)
call
sbb
jae
leave
sti
sbb
xchg
ds
xlat
cmp
and
pop
cmps
dec
pop
popf
cld
dec
mov
and
cdq
dec
icebp
push
lods
and
push
leave
sbb
mov
fisubr
pop
sub
(bad)
(bad)
inc
jle
cmp
xchg
mov
imul
popf
stos
shl
scas
fimul
mov
pop
or
add
sub
enter
xchg
clc
jle
pop
mov
(bad)
jmp
retf
sbb
xchg
sbb
je
adc
int3
jnp
into
lahf
push
inc
jne
push
dec
mov
push
xchg
push
loopne
pop
push
fdivr
shr
and
retf
(bad)
(bad)
call
push
pop
jnp
in
fisubr
mov
sbb
inc
jle
mov
pop
mov
cmp
(bad)
jmp
xor
or
je
rcl
fst
dec
in
paddq
(bad)
(bad)
(bad)
call
leave
push
mov
enter
mov
outs
lods
dec
dec
addr16
fdivr
pop
and
(bad)
(bad)
(bad)
jmp
or
es
sub
js
pop
and
xor
sbb
lds
inc
rcr
lods
xor
(bad)
(bad)
fcomip
dec
push
clc
lds
push
std
or
cwde
stc
cmp
out
mov
scas
jmp
icebp
sahf
(bad)
(bad)
(bad)
(bad)
clc
aaa
int
fisubr
xor
cmp
clc
scas
xor
jns
mov
pushf
lahf
rcr
sbb
test
mov
repnz
mov
cmp
out
cmps
fidivr
das
adc
and
push
popf
sub
push
fisub
push
(bad)
(bad)
(bad)
jmp
inc
cmps
inc
repz
sar
fwait
jmp
data16
sub
scas
mov
(bad)
(bad)
(bad)
jmp
mov
mov
lods
std
dec
jo
inc
jecxz
pop
inc
(bad)
dec
ficom
jo
add
mov
jmp
leave
mov
or
adc
scas
and
outs
add
push
xchg
lock
(bad)
out
cli
loopne
mov
pop
mov
pop
fld
mov
push
(bad)
out
sub
(bad)
(bad)
(bad)
mov
mov
imul
fcomp
scas
pop
xchg
push
mov
or
cmp
stos
(bad)
(bad)
(bad)
inc
jg
jbe
add
inc
inc
push
fadd
and
dec
hlt
das
dec
push
aaa
inc
push
push
xchg
repz
(bad)
(bad)
(bad)
cmp
cmc
call
sub
and
sbb
xor
pop
(bad)
(bad)
(bad)
(bad)
mov
call
les
and
test
into
push
addr16
adc
(bad)
push
pop
mov
cli
rcr
cmp
push
(bad)
rcr
test
cmc
push
push
mov
pop
gs
jecxz
enter
aas
sti
add
loopne
cmc
mov
(bad)
jmp
es
inc
jbe
daa
pop
jecxz
enter
xchg
pop
icebp
idiv
(bad)
(bad)
jmp
mov
mov
dec
and
rcr
xchg
inc
sub
std
arpl
out
jb
iret
xchg
or
(bad)
(bad)
(bad)
mov
ja
in
aas
jmp
es
movs
scas
or
push
push
and
clc
out
inc
sar
(bad)
fimul
push
(bad)
sbb
(bad)
(bad)
cmc
inc
push
cmp
(bad)
jg
push
ins
jmp
and
sbb
and
xchg
arpl
popf
cmp
mov
cmps
fs
(bad)
(bad)
(bad)
fdiv
loopne
fsub
mov
aas
push
int
retf
adc
ficom
(bad)
mov
xchg
(bad)
mov
dec
cmps
jbe
pop
mov
in
cmps
js
dec
ror
fstp
mul
mov
cli
out
leave
inc
sar
(bad)
call
push
mov
cmp
adc
pop
adc
xor
out
out
dec
mov
int3
mov
adc
into
mov
cmp
mov
vpmacsdd
je
enter
push
popf
mov
js
stos
sahf
test
(bad)
(bad)
push
stos
aam
repz
rcl
arpl
xor
or
fmulp
dec
push
pop
pop
loopne
push
cmps
jle
or
jmp
loopne
das
inc
je
call
xor
push
(bad)
dec
ds
jns
movzx
mov
(bad)
jle
cmp
xchg
test
cli
or
xchg
pop
or
mov
out
out
(bad)
(bad)
call
adc
sbb
or
mov
idiv
mov
mov
inc
mov
lods
push
icebp
xor
jmp
inc
test
test
cmp
xlat
push
loop
xchg
inc
xor
inc
cld
call
outs
aas
mov
add
cli
fwait
mov
add
(bad)
call
scas
aad
jno
push
jecxz
sbb
js
xchg
adc
dec
cmps
pop
lock
push
in
out
(bad)
cs
inc
cmps
arpl
fnstenv
push
push
mov
or
(bad)
(bad)
jmp
jmp
inc
mov
inc
xor
jnp
or
inc
out
lea
jp
cs
fbstp
gs
push
std
(bad)
push
jecxz
mov
dec
xor
lahf
inc
mov
push
test
rcr
push
adc
es
push
dec
rcl
out
add
stos
(bad)
(bad)
jmp
sbb
inc
inc
les
loop
xchg
jge
inc
das
rcr
retf
jl
mov
in
sbb
add
fstp
cmps
ret
retf
mov
mov
adc
dec
int
push
pop
aaa
add
pop
adc
cmp
ja
aaa
push
(bad)
ds
sbb
and
jnp
(bad)
jo
aaa
mov
mov
(bad)
(bad)
call
sti
dec
mov
inc
xlat
into
dec
call
lods
ja
test
call
call
stos
mov
adc
and
mov
outs
push
sbb
fnstsw
or
sub
(bad)
or
mov
arpl
into
pop
addr16
inc
mov
int3
xchg
jb
jl
adc
sbb
dec
ins
jecxz
cmp
inc
neg
sbb
ss
mov
add
push
int3
adc
out
fsub
(bad)
jmp
mov
cmp
push
xlat
adc
pop
aaa
push
cmc
out
or
cmp
repz
mov
pop
sbb
stos
enter
mov
jnp
lds
mov
std
mov
mov
(bad)
call
jmp
jmp
icebp
mov
adc
xor
pop
enter
dec
retf
cmp
dec
pop
in
sbb
loope
add
ss
pop
mov
push
mov
mov
(bad)
(bad)
call
mov
inc
mov
test
jno
jbe
rcr
std
jb
js
cmp
jg
push
test
jg
lock
mov
pop
clc
(bad)
(bad)
inc
or
punpckhwd
scas
sahf
add
(bad)
aad
and
sbb
out
outs
pop
dec
adc
out
(bad)
inc
test
add
(bad)
movs
movs
ret
sbb
sbb
cmps
(bad)
shr
mov
add
inc
pop
fwait
adc
push
and
dec
mov
jbe
popa
gs
repz
adc
(bad)
(bad)
inc
test
sbb
mov
pop
aam
pop
lea
adc
push
mov
jmp
sub
rcr
mov
jns
repnz
inc
in
pusha
std
sbb
or
daa
pop
cmp
and
ret
cmps
sub
fcomp
rol
sbb
aas
lahf
pop
and
adc
(bad)
mov
adc
gs
xchg
enter
inc
movs
sub
fadd
pop
xchg
in
push
sti
inc
std
out
sub
(bad)
(bad)
(bad)
jmp
iret
sar
ret
push
fwait
out
mov
jge
stos
lods
add
out
cwde
(bad)
(bad)
call
cmp
aad
jne
lock
das
int
cmps
push
loope
push
mov
add
or
call
not
out
cmp
inc
push
ins
fiadd
cmps
or
xchg
push
adc
shl
push
loop
pop
in
clc
mov
stos
movs
out
inc
jo
sub
repz
call
pop
call
loop
jne
xor
test
and
xchg
and
push
std
stos
pushf
(bad)
outs
mov
pop
jb
mov
int
popa
test
xor
jbe
retf
cmp
mov
lods
test
dec
dec
cmp
lea
(bad)
mov
xchg
movs
movs
mov
bound
(bad)
lods
retf
sub
add
xchg
iret
or
or
popf
push
out
int
popf
iret
jecxz
scas
sti
es
call
fsubr
push
es
arpl
in
xchg
push
icebp
adc
(bad)
(bad)
(bad)
push
jbe
cli
or
int
push
daa
jmp
pop
xchg
(bad)
(bad)
call
pushf
ret
daa
jns
mov
mov
scas
or
inc
sbb
(bad)
(bad)
jmp
jno
mov
int3
mov
(bad)
mov
stos
fidivr
enter
pop
mov
(bad)
(bad)
inc
icebp
rcl
retf
shl
scas
cmp
and
cmc
popf
xchg
mov
push
out
pop
dec
mov
push
push
adc
sbb
pop
cli
mov
out
and
or
(bad)
xor
xchg
jmp
mov
sbb
cmps
cli
add
jge
push
pusha
sub
pop
mov
arpl
(bad)
(bad)
call
inc
and
add
and
cwde
xlat
adc
pop
add
(bad)
(bad)
push
jnp
scas
arpl
push
stc
dec
mov
dec
push
daa
xor
lahf
(bad)
(bad)
call
mov
and
push
adc
push
ins
add
lahf
fcomip
(bad)
inc
sub
push
cmp
mov
mov
cmp
ds
adc
out
dec
jmp
fdivr
out
lds
or
arpl
xchg
or
repnz
mov
pop
cmp
jmp
dec
mov
cmp
or
dec
dec
(bad)
idiv
add
(bad)
(bad)
ds
shl
addr16
imul
xchg
push
add
dec
aam
or
test
jge
jg
(bad)
dec
mov
fiadd
push
test
fwait
ss
adc
dec
data16
(bad)
fcomip
fwait
cmp
bound
cmps
dec
shl
rep
add
sub
imul
pushf
sub
push
push
inc
and
leave
push
and
dec
lahf
imul
lock
jmp
cmps
mov
mov
aaa
ror
call
adc
cmps
cwde
mov
pop
jg
sahf
push
daa
inc
rol
cmp
push
xor
clc
pop
sbb
sahf
adc
fwait
pop
(bad)
jmp
pop
lods
push
inc
call
jmp
int3
in
out
cmp
jmp
js
test
data16
out
sbb
je
and
loopne
xchg
div
inc
add
ins
dec
lock
in
(bad)
shl
ret
lahf
aad
sub
xchg
(bad)
(bad)
(bad)
push
pop
lods
pushfw
mov
hlt
inc
adc
mov
add
hlt
in
mov
test
(bad)
(bad)
call
pop
mov
jae
ins
inc
mov
inc
aad
retf
clc
xor
mov
push
aad
jg
(bad)
(bad)
mov
or
(bad)
hlt
outs
xor
adc
(bad)
(bad)
(bad)
(bad)
cmp
add
(bad)
scas
jne
xor
mov
daa
loop
mov
adc
cmp
and
add
sqrtps
ret
adc
dec
jmp
mov
cmp
into
aas
pop
(bad)
(bad)
jg
or
jnp
not
adc
mov
add
addr16
jo
loopne
sub
bound
push
jb
lods
sbb
or
(bad)
(bad)
(bad)
cmp
imul
in
sub
sub
jbe
sub
repnz
pop
scas
jo
(bad)
dec
dec
popa
neg
sub
jbe
pushf
mov
xchg
(bad)
(bad)
(bad)
jmp
jo
adc
icebp
gs
jg
sbb
mov
xchg
push
push
outs
or
cld
(bad)
(bad)
push
mov
ins
fstp
pop
(bad)
mov
arpl
jae
mov
push
not
mov
jg
add
gs
or
rcr
loopne
lock
fcomp
(bad)
call
movs
arpl
cmp
hlt
int
fld
std
pop
test
dec
xor
jmp
addr16
outs
cmp
and
pop
xor
stos
jbe
adc
aam
gs
mov
sbb
(bad)
(bad)
(bad)
call
mov
sbb
outs
pop
fnstcw
repnz
loope
jl
das
pop
cld
add
(bad)
dec
es
repz
call
fisttp
pop
je
lea
out
xor
(bad)
(bad)
(bad)
jmp
jecxz
hlt
sub
sbb
inc
sti
stc
add
fdivr
mov
ins
mov
(bad)
dec
rcl
inc
int3
test
and
jp
pop
adc
add
je
sub
or
push
repz
outs
mov
jmp
dec
cmc
lds
lods
xchg
jmp
pushf
cli
xchg
jecxz
dec
push
or
inc
out
shl
mov
mov
inc
mov
shrd
adc
dec
cmp
loop
in
push
inc
sbb
in
(bad)
(bad)
(bad)
(bad)
in
into
je
scas
(bad)
lds
je
(bad)
xor
dec
aad
xor
push
repz
sar
sar
xchg
xor
add
sub
mov
(bad)
jl
mov
pusha
popf
mov
les
cli
loopne
fbld
cld
mov
enter
or
and
std
(bad)
(bad)
(bad)
dec
int3
imul
mov
mov
mov
call
add
xlat
sbb
push
sub
shr
(bad)
(bad)
jmp
adc
fnstenv
int
pop
push
sub
(bad)
(bad)
inc
pop
cmps
cmp
dec
xchg
rcl
jecxz
lds
cmc
jmp
aaa
aam
imul
add
(bad)
(bad)
call
movnti
cmp
popf
pop
inc
cmp
mov
pushf
xor
dec
sbb
(bad)
(bad)
jg
jae
mov
je
and
iret
push
push
add
and
(bad)
(bad)
(bad)
(bad)
cmp
shl
pop
or
call
shr
jmp
mov
jmp
xchg
aam
xchg
call
mov
in
xor
into
cld
retf
std
mov
and
or
(bad)
cdq
add
mov
out
(bad)
adc
lea
pushf
loope
(bad)
(bad)
(bad)
inc
dec
sub
pop
popf
in
mov
add
(bad)
call
bnd
icebp
(bad)
dec
xchg
mov
mov
mov
sar
(bad)
call
push
cmc
push
pop
mov
or
jp
inc
and
repz
hlt
lods
popf
pop
pop
xchg
(bad)
(bad)
dec
inc
popa
clc
jne
fidiv
xchg
or
fdivr
sahf
pushf
push
push
or
(bad)
jmp
dec
mov
sub
sbb
sbb
mov
(bad)
(bad)
jg
(bad)
gs
imul
loop
scas
jmp
fist
(bad)
mov
xchg
lock
adc
dec
or
dec
dec
pop
mov
mov
(bad)
mov
ins
in
pop
adc
pop
test
jecxz
pop
add
push
(bad)
(bad)
mov
out
inc
mov
enter
push
push
out
cmc
mov
rcl
mov
push
(bad)
(bad)
(bad)
(bad)
jnp
sbb
mov
mov
sbb
fimul
mov
xor
fdivr
(bad)
push
adc
jmp
xor
pop
jl
mov
rol
push
pop
sub
xchg
(bad)
(bad)
(bad)
(bad)
jmp
cli
mov
mov
addr16
add
cmc
ficomp
pop
jmp
lods
mov
push
call
push
mov
pushf
jp
push
aas
pop
mov
dec
mov
fld
pop
clc
shl
pusha
(bad)
(bad)
(bad)
inc
adc
lods
pop
out
mov
push
dec
cmc
(bad)
xchg
cmovge
outs
dec
retf
(bad)
(bad)
jmp
das
out
jae
mov
ret
sbb
jg
test
jp
sub
mov
sbb
sar
add
inc
std
xor
ja
loope
in
fcom
xchg
push
mov
out
pop
bound
rcl
fs
jmp
dec
mov
pop
sbb
mov
cmp
(bad)
(bad)
call
cmp
outs
test
aaa
out
push
fiadd
pop
adc
mov
jae
jb
(bad)
mov
pop
mov
xor
retf
push
sub
push
push
lea
cmp
int3
sub
pop
sub
neg
sbb
outs
jl
cmc
cmp
push
cmp
loope
sub
mov
mov
mov
push
mov
xchg
jmp
(bad)
call
mov
lock
idiv
cmp
outs
rcr
outs
push
loop
cmp
push
xchg
cwde
ror
(bad)
(bad)
jmp
cmp
xor
jmp
aam
push
(bad)
nop
(bad)
les
dec
shr
add
cmp
jg
dec
jbe
call
inc
sbb
jecxz
and
or
ja
mov
dec
mov
(bad)
(bad)
(bad)
call
mov
xor
les
nop
pop
pop
add
mov
neg
or
xchg
cmp
js
or
aas
fnstcw
push
jg
dec
repnz
cdq
retf
inc
and
js
inc
adc
cmps
data16
sti
aas
call
call
and
xor
mov
lahf
leave
imul
fst
(bad)
cmp
div
enter
repnz
push
sti
mov
dec
cmc
sbb
(bad)
in
addr16
test
mov
fwait
push
inc
(bad)
out
fdivr
xor
adc
dec
jmp
xor
fnstsw
pushf
push
mov
pop
cmc
(bad)
jmp
std
inc
ret
pushf
es
and
icebp
cli
pop
dec
loopne
pop
add
cmp
call
dec
fisub
fwait
cmps
mov
ds
(bad)
mov
add
(bad)
(bad)
dec
out
lods
push
mov
ss
shl
ins
mov
cmp
mul
mov
mov
lods
cwde
adc
and
in
add
test
mov
in
and
mov
or
rcl
(bad)
jns
inc
std
ins
arpl
cmp
cli
mov
mov
ror
(bad)
(bad)
inc
sub
mov
sub
dec
sti
lea
sub
or
outs
fdiv
call
push
data16
iret
push
and
adc
fisubr
scas
ds
in
pushf
push
retf
or
dec
in
add
(bad)
call
adc
cmps
push
xchg
mov
dec
inc
je
jnp
inc
retf
fisubr
push
push
xchg
mov
(bad)
fcomip
pop
pop
xchg
lods
je
mov
(bad)
jne
push
rol
mov
(bad)
(bad)
inc
imul
pop
and
iret
sbb
lea
lds
sahf
lods
arpl
(bad)
(bad)
(bad)
in
call
(bad)
cmp
pop
push
jne
hlt
clc
lods
and
dec
stos
(bad)
popa
and
sbb
movs
mov
call
(bad)
(bad)
xor
and
mov
lods
pop
or
cmp
(bad)
(bad)
jmp
xchg
not
dec
dec
(bad)
mov
sub
push
push
mov
std
mov
(bad)
(bad)
inc
push
jmp
leave
hlt
out
pop
div
push
into
pop
imul
into
cli
loop
aaa
cmp
(bad)
dec
mov
mov
mov
and
out
fmul
pop
neg
(bad)
jmp
cld
inc
in
pop
retf
push
lods
mov
push
pop
xor
and
call
dec
jno
imul
mov
cmp
and
mov
test
stos
ins
mov
bound
mov
pop
(bad)
(bad)
(bad)
(bad)
fcom
pcmpgtd
mov
fwait
call
fdiv
bound
sbb
mov
std
(bad)
(bad)
(bad)
(bad)
jl
xchg
inc
pop
xchg
leave
add
out
jns
push
cmps
push
jg
sbb
add
mul
mov
xchg
adc
dec
adc
test
neg
push
mov
lea
jns
dec
dec
fisttp
outs
mov
mov
outs
inc
paddd
jle
add
(bad)
dec
inc
cmps
icebp
cmps
jno
scas
push
jns
inc
mov
sbb
jb
daa
aaa
sub
fwait
(bad)
sar
mov
ds
mov
(bad)
(bad)
cli
(bad)
repz
clc
in
movs
popa
idiv
rol
stos
aam
and
mov
sar
push
jmp
in
pop
popf
xchg
ss
lods
fisttp
jns
cmp
sbb
mov
(bad)
(bad)
(bad)
(bad)
jmp
mov
and
xor
dec
add
jbe
lea
icebp
push
out
in
mov
in
div
mov
sub
fsubr
sub
(bad)
push
ins
scas
pop
pop
js
lods
or
xchg
(bad)
jmp
mov
mov
std
mov
mov
and
cmps
jp
out
idiv
(bad)
(bad)
dec
mov
jae
nop
fcom
sub
jae
mov
push
xchg
iret
inc
in
mov
or
mov
ret
mov
dec
sbb
mov
jne
outs
(bad)
(bad)
cmp
sub
dec
int
inc
loopne
cmc
jae
push
out
jmp
retf
mov
mov
ja
cmp
push
jge
xchg
jbe
mov
jecxz
jg
leave
fs
mov
(bad)
(bad)
push
xor
inc
mov
mov
ud1
xchg
dec
movs
fsub
popf
push
cmp
(bad)
(bad)
(bad)
(bad)
mov
out
pop
xrelease
adc
cwde
and
sbb
mov
imul
and
clc
xchg
dec
xlat
jb
adc
mov
aad
pop
and
and
adc
repz
cmps
(bad)
call
pop
jbe
rep
js
xchg
push
and
lea
mov
(bad)
(bad)
out
(bad)
je
push
cmps
out
and
push
push
sbb
sub
mov
scas
jmp
lods
scas
and
mov
call
push
cld
push
xlat
xor
push
jmp
lods
add
lock
jg
pusha
imul
bound
cmp
xchg
loopne
imul
adc
dec
xor
jmp
cmps
daa
xor
jmp
idiv
pop
jae
gs
pop
pop
jbe
sub
(bad)
(bad)
fcomip
push
xchg
cld
cmp
in
inc
pop
xchg
mov
call
ja
push
(bad)
(bad)
call
cmp
loop
xchg
popa
cmp
inc
push
pushf
jl
inc
push
sbb
(bad)
(bad)
dec
pop
or
test
rol
push
repz
loop
pusha
push
fbld
lods
jmp
lods
sub
jno
add
add
test
(bad)
jg
dec
fst
retf
push
xchg
xchg
imul
(bad)
mov
xchg
mov
mov
call
push
arpl
mov
pop
(bad)
aas
dec
gs
mov
fadd
push
hlt
jae
sub
dec
data16
(bad)
jo
and
pusha
mov
adc
(bad)
(bad)
jg
test
clc
pop
mov
pusha
lock
inc
jp
cdq
push
xchg
push
pop
inc
pop
shr
jp
xchg
cmp
iret
out
loope
les
scas
loope
lods
pop
ss
ret
out
pusha
pop
add
inc
aam
dec
adc
xor
mov
aaa
and
inc
and
push
lods
adc
and
xchg
pop
dec
in
lea
loop
add
mov
loopne
mov
es
push
(bad)
jmp
(bad)
mov
mov
adc
(bad)
movs
(bad)
(bad)
(bad)
(bad)
jnp
and
sti
mov
jae
pop
sti
leavew
leave
cmp
inc
std
and
mov
mov
aaa
stos
fs
ret
push
mov
add
addr16
dec
adc
(bad)
cmp
sbb
sbb
ret
nop
cmp
add
call
cmp
xchg
shl
lock
(bad)
clc
jae
in
scas
jne
sbb
retf
mov
cmp
in
dec
(bad)
(bad)
call
mov
scas
out
imul
cwde
mov
add
scas
fs
das
nop
add
(bad)
(bad)
cld
jmp
out
cmp
jg
pop
gs
adc
push
aaa
jbe
cmp
adc
dec
(bad)
(bad)
call
repz
and
les
xchg
icebp
inc
(bad)
sbb
out
xchg
in
cld
(bad)
dec
mov
mov
cmp
(bad)
push
les
into
and
push
push
imul
pop
(bad)
(bad)
(bad)
jg
inc
icebp
in
pusha
add
test
ja
dec
scas
sub
loope
and
xor
xchg
mov
sub
sub
es
ins
pop
mov
and
jl
jg
dec
and
inc
jbe
mov
xor
mov
inc
or
and
aam
cmc
inc
pop
popa
pop
mov
xchg
rol
mov
jmp
mov
or
or
icebp
push
ja
in
(bad)
(bad)
(bad)
call
stos
test
fstp
or
shl
fcomp
inc
clc
retf
rcl
(bad)
jg
loope
movs
push
fcomp
pop
stos
jne
bound
push
cdq
xor
jmp
sbb
cmp
jmp
jg
cwde
les
push
jae
and
std
push
push
adc
gs
pop
icebp
or
stc
jmp
xchg
or
push
adc
lock
aaa
ret
jne
lahf
push
jp
pop
adc
pop
add
enter
(bad)
jns
test
aad
clc
popa
adc
idiv
(bad)
(bad)
fcomip
jge
js
jle
and
loop
pop
mov
fistp
mov
dec
repnz
(bad)
(bad)
(bad)
dec
ja
fadd
push
pushf
(bad)
sub
rcl
cmp
ja
fs
hlt
cmps
popf
(bad)
sub
js
and
(bad)
(bad)
call
data16
add
mov
ins
outs
repz
fs
xor
je
outs
pop
call
mov
mov
cmp
out
xor
adc
sbb
sub
cmps
sar
(bad)
(bad)
mov
stos
xor
and
mov
aaa
adc
dec
mov
mov
jecxz
scas
retf
aam
mov
mov
test
xor
mov
dec
jl
push
clc
jnp
inc
clc
(bad)
(bad)
inc
ret
mov
or
mov
lahf
rcr
push
lock
xchg
popf
clc
add
jmp
mov
inc
inc
leave
ins
xlat
adc
inc
in
jnp
cmp
or
push
sbb
cmp
cmp
cdq
(bad)
movs
lods
dec
or
call
addr16
and
pop
cmp
outs
leave
pop
je
dec
in
xchg
dec
inc
mov
dec
rcr
sbb
aad
(bad)
(bad)
call
mov
shl
cmc
cmps
inc
or
stos
ror
dec
(bad)
scas
fcomp
sar
xchg
fs
stc
daa
jl
cmps
add
pop
retf
pop
jp
(bad)
push
add
leave
mov
out
jmp
dec
sti
test
(bad)
inc
jmp
dec
xchg
add
pop
fadd
aam
iret
xor
fldenv
add
(bad)
call
mov
or
xchg
xor
sti
fdiv
mov
(bad)
(bad)
(bad)
jg
out
cmp
sbb
xchg
push
adc
pop
add
jae
(bad)
(bad)
(bad)
(bad)
cmp
int
int
hlt
repz
call
adc
lods
and
xlat
shr
add
call
cli
(bad)
sbb
xor
sbb
not
mov
movs
ret
mov
out
call
push
add
jo
xor
jmp
out
das
push
into
adc
retw
mov
mov
jbe
dec
jmp
xchg
mov
inc
mov
cmc
(bad)
mov
or
aam
ds
or
push
fs
iret
scas
jmp
inc
pop
jmp
(bad)
(bad)
inc
mov
(bad)
fimul
push
in
inc
(bad)
cmc
(bad)
out
pop
jns
(bad)
xchg
mov
xor
fistp
les
repnz
sti
lds
fbstp
mov
call
out
(bad)
jmp
and
movs
std
cmps
cdq
les
pop
adc
and
xor
out
(bad)
(bad)
(bad)
push
scas
pushf
jg
sub
or
dec
xor
and
jno
dec
call
std
jno
addr16
cld
in
jb
mov
push
loopne
jle
pop
fwait
(bad)
(bad)
call
loope
jle
cdq
jae
mov
mov
pushf
arpl
out
sbb
push
dec
sbb
(bad)
(bad)
push
mov
shl
cmps
(bad)
mov
push
and
pop
stos
add
xor
cld
jmp
sub
movs
jbe
fwait
sbb
jmp
jmp
xchg
nop
fsubr
out
sub
jg
xor
mov
add
fild
cmp
ins
sub
inc
jecxz
idiv
(bad)
mov
out
inc
out
inc
push
dec
fiadd
push
loope
addr16
or
jmp
and
ins
cs
(bad)
(bad)
push
ins
rol
adc
enter
loopne
jo
jno
(bad)
jmp
pop
mov
push
mov
ja
shl
xchg
push
jge
mov
stc
or
pop
cmp
inc
mov
and
inc
xchg
out
nop
fs
xor
mov
mov
int
push
mov
adc
aam
movs
or
add
(bad)
(bad)
call
stos
fwait
sbb
in
div
das
xchg
and
dec
(bad)
test
mov
or
add
(bad)
(bad)
(bad)
jmp
and
mov
movs
jae
and
push
push
int3
add
aaa
push
adc
push
xchg
outs
add
jle
aas
cmp
add
xchg
inc
dec
pop
loopne
mov
inc
sahf
mov
call
mov
sub
mov
(bad)
test
pop
xor
arpl
pop
lock
(bad)
(bad)
(bad)
ds
adc
adc
dec
pop
out
mov
fst
jne
outs
rcr
fild
xor
sbb
inc
xor
inc
jno
mov
(bad)
call
cmp
jle
lock
mov
mov
adc
sub
sub
cli
test
and
jno
(bad)
and
cmp
(bad)
(bad)
push
imul
jp
or
hlt
add
stos
mov
int3
mov
add
sbb
push
inc
(bad)
(bad)
(bad)
(bad)
out
dec
jne
les
and
aaa
test
pop
imul
ret
in
inc
fdiv
lock
(bad)
jmp
dec
in
call
mov
sub
(bad)
xor
sbb
push
enter
(bad)
(bad)
(bad)
call
neg
mov
test
movs
jmp
cmp
dec
push
aam
call
sub
(bad)
(bad)
dec
popa
and
fist
pop
and
fnstcw
sbb
dec
or
add
hlt
scas
pop
jnp
call
jmp
repnz
or
es
lods
cwde
std
add
fcom
pop
pop
fcomip
(bad)
jmp
(bad)
jecxz
fs
jmp
call
push
push
add
xor
(bad)
(bad)
(bad)
call
fist
stc
ja
leave
fcomp
ds
mov
push
clc
jmp
xchg
(bad)
(bad)
(bad)
call
call
cld
and
sub
mov
or
mul
int3
xchg
(bad)
(bad)
inc
popa
lahf
test
inc
adc
and
enter
call
add
shl
add
xchg
adc
shl
xor
(bad)
(bad)
jmp
dec
push
and
pushf
pop
movs
lea
enter
and
bnd
dec
mov
(bad)
(bad)
(bad)
jmp
and
dec
lea
jmp
sub
cmp
pop
or
(bad)
(bad)
(bad)
inc
jl
inc
fst
fnstenv
push
lds
dec
sub
test
mov
out
push
sar
dec
aaa
push
stos
out
test
mov
call
jo
aaa
xchg
cli
inc
xor
pop
push
inc
repnz
pop
inc
(bad)
int3
add
imul
mov
pop
push
adc
lods
push
cmp
fild
ret
and
inc
cmp
sub
(bad)
(bad)
(bad)
inc
daa
mov
jge
dec
pop
xor
ss
pop
bsr
adc
cmps
pop
retf
mov
mov
mov
scas
cmps
mov
dec
(bad)
(bad)
(bad)
inc
repnz
or
clc
das
mov
jl
and
fild
(bad)
or
adc
(bad)
(bad)
(bad)
call
movs
pop
cmp
cdq
mov
sbb
fdivr
cmp
xor
jmp
add
call
addr16
xor
lods
mov
xchg
icebp
ror
(bad)
jmp
inc
mul
sti
mov
retf
in
xchg
fistp
(bad)
mov
test
js
or
test
push
lods
ins
cmovns
sbb
(bad)
jmp
clc
sbb
or
pop
mov
call
cmps
pop
cmp
dec
sbb
jno
add
pop
and
push
in
or
shr
into
mov
jmp
cmps
adc
or
loope
adc
ss
data16
jmp
xor
test
loope
icebp
in
shr
test
aas
cld
mov
mov
stc
movq
loopne
ja
lods
inc
sar
xor
jl
xor
(bad)
(bad)
jmp
mov
loope
or
dec
sub
lock
mov
pop
mov
out
lock
loop
add
jge
cli
sub
cpuid
mov
outs
je
(bad)
(bad)
(bad)
dec
and
in
(bad)
movs
imul
movs
cdq
fwait
mov
push
into
push
xchg
xor
(bad)
jg
inc
jns
mov
les
sub
dec
pop
cmp
inc
xor
cmc
mov
dec
add
cmps
xchg
cs
pop
aaa
sub
outs
sahf
cmp
cli
(bad)
(bad)
(bad)
dec
movs
jo
leave
retf
cld
(bad)
(bad)
mov
mov
and
pop
ins
pop
stc
inc
xchg
pop
sub
pop
movs
jno
sub
push
(bad)
(bad)
(bad)
jns
ds
jae
and
cmc
mov
or
(bad)
(bad)
fst
jbe
rcr
pushf
cmp
jnp
mov
ss
inc
ins
cs
(bad)
(bad)
(bad)
(bad)
fdivrp
pop
mov
or
out
and
inc
mov
lods
jae
or
aaa
and
and
and
(bad)
(bad)
dec
scas
xor
out
shr
dec
jmp
fs
sbb
rcl
les
pop
loop
push
jno
jg
test
or
in
(bad)
popf
ds
push
pop
jmp
pop
lahf
jns
dec
adc
and
mov
rol
xchg
or
test
dec
enter
jae
inc
scas
mov
retf
imul
(bad)
inc
jno
(bad)
icebp
inc
push
into
dec
add
cwde
sub
xchg
sbb
sub
cld
shl
outs
and
push
pop
mov
jmp
inc
(bad)
(bad)
(bad)
jmp
mov
iret
pop
popa
cdq
inc
dec
daa
xchg
xor
pop
or
(bad)
das
jmp
push
cld
cmp
jmp
(bad)
inc
sub
mov
fs
je
mov
sar
mov
add
sub
shl
(bad)
(bad)
push
es
xchg
cmp
pusha
mov
jmp
cwde
retf
lea
imul
push
sub
(bad)
(bad)
(bad)
call
push
aaa
cmp
inc
test
pop
xor
push
shr
jbe
cmp
jb
(bad)
(bad)
call
shl
xchg
and
mov
pop
repz
jge
nop
(bad)
out
inc
xor
cld
adc
(bad)
(bad)
(bad)
cmp
jmp
(bad)
into
or
xor
mov
mov
stc
dec
aaa
popf
retfw
jg
or
call
popa
xor
leave
std
es
and
iret
jg
ins
xchg
xor
xor
(bad)
(bad)
(bad)
sti
bound
jle
sub
mov
ins
mov
(bad)
fmul
out
pop
pop
hlt
mov
pop
aaa
push
fldpi
sbb
add
push
shr
dec
mov
(bad)
jg
sub
popf
sub
jp
inc
sub
shl
ficomp
mov
(bad)
(bad)
dec
adc
jbe
jns
stc
inc
inc
xchg
lock
ds
adc
dec
mov
or
scas
call
add
repz
cmp
and
xchg
push
lock
xor
dec
sar
sub
xor
cld
daa
test
xchg
test
(bad)
in
(bad)
jmp
inc
das
out
fiadd
test
pop
mov
mov
cmp
xadd
(bad)
arpl
sub
aam
das
or
mov
into
or
mov
(bad)
inc
sbb
test
jecxz
xor
or
pop
jbe
or
mov
(bad)
call
shr
pop
cmps
stc
(bad)
xchg
xor
adc
jge
pop
pop
hlt
fwait
js
(bad)
(bad)
(bad)
jmp
test
aas
mov
movs
fisub
cmc
cmp
out
inc
xor
cmps
pop
sbb
adc
sub
fstp
push
cmp
pop
push
jbe
xchg
mul
das
je
sahf
mov
nop
add
sbb
inc
adc
std
cmp
cwde
pop
xchg
(bad)
(bad)
call
fist
fadd
fcom
dec
rol
cmp
dec
jo
sub
popa
test
cmp
shl
aam
stc
(bad)
(bad)
xchg
cmps
xchg
or
scas
cli
hlt
cmp
inc
add
cld
aad
test
inc
push
cmp
(bad)
(bad)
(bad)
push
pop
sub
rol
push
sub
neg
push
sub
stos
jae
ja
mov
adc
add
push
sbb
arpl
jle
inc
rcr
pop
xchg
(bad)
(bad)
(bad)
inc
nop
movs
inc
adc
fild
movs
mov
inc
test
mov
(bad)
(bad)
inc
jmp
xor
xor
add
or
xchg
mov
aam
(bad)
idiv
(bad)
(bad)
jmp
xor
adc
fcmovnu
push
or
fwait
jne
xor
sub
js
pop
push
cwde
inc
xchg
add
cmps
aaa
inc
adc
cs
ins
add
call
(bad)
aad
push
rcr
sub
out
and
pop
push
add
or
(bad)
(bad)
call
push
push
lods
pop
xchg
arpl
xor
xchg
enter
fwait
ret
sbb
out
test
fcomip
mov
scas
shr
nop
xchg
outs
icebp
push
in
addr16
and
aaa
push
sar
rcl
jbe
or
inc
mov
pushf
mov
loopne
lds
or
jbe
jb
scas
gs
pusha
xchg
(bad)
(bad)
push
mov
push
daa
inc
lds
mov
push
outs
sti
or
push
(bad)
jg
lods
fbld
inc
(bad)
fiadd
stos
sbb
(bad)
(bad)
(bad)
jmp
sub
clc
out
adc
imul
dec
test
stc
retf
dec
pop
xor
dec
int3
jno
add
(bad)
mov
mov
into
xchg
sub
and
add
test
(bad)
fdiv
call
inc
out
inc
(bad)
mov
ds
cmp
mov
shl
pop
call
sbb
fimul
dec
scas
fcomp
ins
popf
sahf
test
inc
cdq
push
int
and
mov
jg
dec
jb
movs
fisub
ret
push
stc
inc
mov
cld
repnz
(bad)
in
mov
test
call
fcmovbe
push
jno
adc
push
pop
ss
ror
or
xchg
pop
(bad)
(bad)
(bad)
dec
ret
mov
xor
cmp
push
ret
aaa
in
jl
sahf
(bad)
mov
jmp
jmp
lods
(bad)
pop
outs
mov
(bad)
(bad)
call
sub
das
and
fucomip
loop
push
jge
fwait
pop
inc
jle
pushf
mov
cld
mov
xlat
pop
cmp
rol
and
push
imul
cmp
mov
(bad)
jg
mov
pop
cmp
(bad)
ficomp
sub
dec
sub
(bad)
adc
inc
loop
sub
cmps
adc
fstp
in
mov
cdq
enter
das
(bad)
jg
lock
fndisi(8087
idiv
scas
mov
inc
mov
xor
(bad)
fcomip
fisttp
cmp
inc
test
inc
xchg
mov
sbb
stos
push
(bad)
mov
xor
add
(bad)
xor
(bad)
fild
scas
xor
push
into
dec
repnz
pop
mov
(bad)
fnstenv
mov
inc
mov
icebp
loop
(bad)
(bad)
jmp
add
stos
icebp
hlt
xchg
mov
outs
inc
gs
or
lock
jp
leave
addr16
pop
cli
test
leave
xor
(bad)
(bad)
dec
mov
repz
ins
xor
xchg
mov
or
stos
in
mov
aad
(bad)
(bad)
(bad)
jmp
fcmovne
sar
jmp
fist
ss
cmps
or
sub
(bad)
lea
enter
push
std
sti
adc
jae
fucomi
pop
ror
(bad)
jg
mov
or
cli
ja
mov
(bad)
jmp
sbb
(bad)
jmp
and
sar
fwait
xor
jecxz
out
iret
(bad)
call
lock
and
stos
movs
dec
cmc
sbb
pusha
cs
(bad)
(bad)
(bad)
push
fcomp
std
out
and
sub
inc
and
or
fld
popf
(bad)
js
(bad)
or
call
arpl
push
inc
rcl
loop
mov
cmc
je
cld
push
call
out
loopne
mov
shl
scas
and
rcl
cmc
pop
inc
and
sub
push
cdq
and
jmp
ds
lock
adc
push
adc
jmp
push
das
adc
(bad)
dec
push
pushf
movs
cmp
push
inc
jno
xor
mov
mov
jp
xchg
(bad)
(bad)
(bad)
(bad)
jns
aas
outs
repnz
jmp
cmp
call
and
jnp
enter
or
(bad)
(bad)
(bad)
jmp
arpl
pop
pop
sti
out
adc
jb
dec
mov
es
xor
(bad)
(bad)
(bad)
push
std
pop
nop
shl
mov
mov
inc
jo
mov
mov
(bad)
jmp
cli
call
mov
mov
dec
bound
jg
xor
mov
adc
jno
pop
mov
sub
dec
(bad)
(bad)
(bad)
mov
mov
add
mov
clc
lea
movs
adc
adc
data16
cmps
xlat
and
(bad)
(bad)
push
mov
adc
out
scas
ret
xchg
scas
test
mov
sbb
or
pop
lock
dec
inc
daa
popf
jb
xlat
nop
in
(bad)
cmp
jbe
jae
sbb
(bad)
(bad)
call
cmp
xchg
repz
lea
rcl
ficom
inc
test
xor
out
dec
aad
pop
test
push
retf
jl
int
and
and
ret
mov
or
mov
bound
xor
mov
sti
(bad)
(bad)
(bad)
jmp
popf
xor
add
xchg
add
xchg
mov
pop
or
ret
(bad)
(bad)
call
stos
loope
cmp
jmp
dec
pop
xor
dec
mov
add
push
(bad)
call
inc
ret
adc
sbb
fild
icebp
cwde
add
dec
out
out
arpl
das
pop
shl
mov
cld
in
mov
xor
adc
lahf
out
(bad)
push
sbb
xchg
jecxz
cmp
add
aam
fisttp
mov
(bad)
(bad)
(bad)
cmp
mov
mov
retf
xlat
mov
scas
in
retf
clc
enter
js
(bad)
jg
(bad)
jge
adc
shl
sar
xor
inc
xchg
aam
(bad)
(bad)
jmp
xchg
pop
mov
xchg
imul
or
outs
push
out
cmp
jecxz
div
mov
jmp
jno
xor
loope
push
dec
in
pop
lds
jmp
or
jg
js
arpl
aas
fisub
mov
(bad)
(bad)
jmp
aas
enter
fiadd
mov
in
(bad)
or
(bad)
(bad)
mov
xchg
cmps
mov
and
dec
sar
mov
sub
(bad)
(bad)
(bad)
in
pop
push
stc
jo
sub
mov
jmp
ds
mov
xor
(bad)
push
scas
rcr
gs
clc
fs
adc
inc
inc
imul
(bad)
jmp
mov
jmp
call
inc
(bad)
(bad)
(bad)
call
mov
push
sbb
pop
pusha
(bad)
rcr
divps
das
mov
inc
fistp
dec
push
inc
inc
(bad)
(bad)
(bad)
jmp
sub
pusha
loope
dec
nop
mov
mov
pop
rcr
ins
repnz
push
mov
stc
(bad)
or
(bad)
(bad)
jmp
lods
inc
scas
dec
or
(bad)
sbb
add
loop
lea
cs
stos
ret
(bad)
into
sbb
and
jmp
icebp
aad
popf
les
movs
sti
or
inc
aad
jbe
mov
lea
sbb
(bad)
inc
ds
(bad)
xor
dec
mov
dec
test
(bad)
inc
add
mov
inc
sahf
mov
fbstp
stos
aad
(bad)
(bad)
jmp
lock
xchg
nop
mov
jp
repz
dec
cld
(bad)
xchg
xor
jno
call
mov
sub
hlt
adc
int
outs
(bad)
lods
mov
pop
xchg
jmp
push
std
fisttp
shr
cmp
mov
fbld
inc
(bad)
(bad)
(bad)
jmp
js
jo
in
jae
lds
sbb
push
inc
test
(bad)
cmc
xor
mov
jnp
push
mov
test
shl
pop
jno
test
stos
mov
ror
pop
ds
ror
sub
lock
xor
xor
ficom
xor
aad
push
ja
(bad)
(bad)
jmp
test
mov
bound
mov
fcom
popf
mov
(bad)
inc
fimul
inc
mov
inc
loop
adc
cmp
mov
cmp
cli
(bad)
push
push
aad
cmp
mov
scas
xor
mov
lahf
jmp
push
leave
pop
xlat
adc
lahf
jg
or
cmp
cmp
and
mov
mov
mov
sub
mov
mov
not
ret
sbb
lea
test
push
push
or
add
dec
(bad)
(bad)
(bad)
jmp
xlat
jge
ret
ja
rol
mov
test
sahf
mov
loop
(bad)
(bad)
(bad)
jmp
arpl
add
mov
push
jmp
cmps
xchg
shl
loopne
or
(bad)
(bad)
(bad)
dec
mov
xchg
or
mov
cmps
imul
scas
sbb
pushf
lods
jns
mov
add
std
dec
mov
jl
outs
dec
loop
hlt
jns
mov
push
daa
mov
(bad)
call
ret
cmp
sbb
add
(bad)
call
jl
pop
xchg
inc
cmp
inc
dec
jmp
mov
mov
mov
mov
push
call
mov
cmps
jnp
aad
nop
gs
dec
add
sub
jmp
sbb
icebp
movs
push
cmps
shl
(bad)
(bad)
dec
mov
pop
jmp
lods
adc
xlat
out
push
xlat
test
pop
aad
out
movs
or
sub
aam
cmp
(bad)
(bad)
(bad)
dec
and
retf
or
fldenv
adc
cmp
dec
jecxz
jge
test
(bad)
(bad)
(bad)
call
repnz
scas
pop
ja
xchg
jge
mov
out
mov
pop
(bad)
ins
push
(bad)
(bad)
(bad)
sti
(bad)
retf
out
mov
sbb
sbb
xchg
out
inc
pop
daa
xchg
or
cmc
dec
mov
push
push
stos
bound
push
ret
mov
jae
(bad)
push
lods
aaa
int3
aaa
xor
jo
loop
stos
push
and
push
push
icebp
and
(bad)
(bad)
(bad)
push
xor
xor
mov
stc
xchg
inc
(bad)
lahf
push
(bad)
jbe
icebp
mov
mov
mov
fidiv
lods
sahf
sbb
fneni(8087
leave
and
and
cmp
stos
pop
test
stos
dec
add
adc
dec
aam
mov
sbb
(bad)
aas
push
jb
mov
jmp
mov
jo
es
rcl
cld
dec
add
fistp
sbb
(bad)
jmp
(bad)
in
(bad)
sbb
aam
pop
jecxz
xchg
ja
push
jno
push
and
int3
xor
call
daa
cdq
aam
in
imul
pop
les
rcl
int3
jb
push
pop
add
pop
and
xor
xchg
mov
mov
mov
jle
mov
pop
fadd
pop
push
inc
hlt
or
rcl
fild
jmp
hlt
out
pop
fwait
adc
push
sub
inc
(bad)
(bad)
(bad)
(bad)
out
push
mov
push
xor
mov
test
std
cli
mov
shr
test
dec
in
jne
cmp
xor
ja
cmc
repz
cmp
aam
jnp
sub
movs
aad
sar
pop
sub
call
inc
push
loop
loop
popa
bound
xlat
sar
pop
jg
xchg
xlat
sbb
call
(bad)
call
hlt
iret
cs
push
pop
or
ficomp
pop
mov
and
(bad)
(bad)
cmp
jmp
test
push
mov
rol
xchg
xor
dec
outs
mov
loop
mov
jnp
pop
jmp
inc
cmp
xor
mov
dec
inc
in
dec
add
gs
pop
push
aam
push
jae
cmp
inc
inc
ss
imul
or
(bad)
dec
xchg
adc
ins
cld
ss
or
enter
loop
clc
cmp
sar
pop
stos
inc
hlt
xchg
mov
aaa
jbe
add
cmc
ja
cmp
push
sub
das
pop
cmp
xchg
mov
(bad)
jb
aaa
js
pminub
sub
dec
push
out
dec
sub
mov
(bad)
and
stos
fisttp
mov
scas
outs
push
js
jne
movs
jg
(bad)
(bad)
mov
push
xchg
pop
mov
push
push
push
adc
test
loopne
call
jmp
xchg
inc
js
jae
sbb
cmc
jmp
push
cmp
mov
xchg
sub
xchg
add
push
fsincos
sub
cs
add
sub
xor
jmp
jl
aam
stos
adc
test
test
pop
push
sar
mov
(bad)
dec
leave
fsubr
push
cmp
fimul
push
inc
icebp
iret
repz
aaa
push
sbb
(bad)
(bad)
(bad)
mov
aas
sbb
jp
xor
xchg
pushf
sbb
in
sbb
mov
jns
loope
gs
(bad)
(bad)
call
sub
and
xor
push
movs
call
push
test
xchg
or
dec
(bad)
jmp
dec
push
lahf
movs
push
lds
sar
add
jmp
imul
(bad)
(bad)
(bad)
(bad)
jg
xor
fs
gs
push
jno
mov
mov
and
shl
lds
pop
pusha
xlat
dec
mov
mov
shl
adc
jl
loop
(bad)
(bad)
inc
inc
mov
dec
rcl
pop
leave
daa
popf
popf
sub
and
pushf
add
mov
(bad)
fimul
sub
xor
loopne
or
mov
inc
mov
jmp
fwait
ja
in
sbb
add
sbb
add
jmp
sub
fimul
inc
mov
inc
out
jmp
retf
(bad)
(bad)
or
inc
arpl
bound
pop
mov
movs
inc
aad
dec
mov
popf
mov
fcmovnb
cmp
clc
cli
push
cmp
test
movs
push
pop
(bad)
dec
movs
or
cld
nop
sub
test
jne
sbb
inc
(bad)
jmp
push
inc
dec
pop
pop
fidiv
mov
fwait
mov
cld
mov
fs
jg
dec
movs
jmp
mov
repnz
call
push
adc
lahf
push
ss
inc
movlhps
jmp
sbb
in
pushf
and
(bad)
stc
and
xor
adc
(bad)
(bad)
dec
shr
aas
movs
pop
lahf
retf
out
js
loope
and
mov
sbb
std
inc
inc
(bad)
(bad)
(bad)
dec
sub
fst
nop
test
pop
or
adc
(bad)
(bad)
(bad)
clc
in
or
cmp
push
shl
(bad)
outs
outs
les
jo
cli
fcom
(bad)
sar
jmp
sbb
pop
jge
int
jl
mov
sub
ja
push
jmp
sub
xchg
pop
mov
jle
shl
push
rol
mov
out
(bad)
mul
les
cmp
fadd
sbb
pop
retf
pop
mov
and
(bad)
call
cmp
(bad)
int
int3
jbe
retf
jo
xor
ficom
push
dec
and
dec
test
mov
mov
jp
fsub
cmps
cld
adc
adc
clc
popf
rcl
and
mov
(bad)
(bad)
call
push
pusha
ins
cli
aaa
or
(bad)
(bad)
int
popa
pop
neg
xchg
ret
mov
jmp
or
loopne
push
dec
es
dec
jl
(bad)
(bad)
(bad)
push
jns
push
push
std
out
xchg
and
cli
sbb
push
fnstenv
loop
(bad)
inc
daa
xchg
add
or
pop
cmps
xchg
xlat
pop
test
sar
stos
xor
(bad)
jmp
cld
mov
add
inc
dec
cmp
adc
(bad)
call
into
rol
and
int
sbb
outs
adc
shl
sub
iret
mov
(bad)
jmp
sar
ss
mov
sbb
loope
aaa
mov
aas
aad
(bad)
(bad)
(bad)
out
fimul
sub
pop
mov
addr16
adc
hlt
popa
retf
sub
sbb
(bad)
(bad)
(bad)
push
cmps
cmp
aaa
lahf
fistp
xchg
outs
push
mov
jns
jle
outs
ret
xchg
fidivr
jo
(bad)
(bad)
push
in
(bad)
xor
mov
jl
mov
lahf
retf
aas
sar
out
aad
(bad)
clc
js
(bad)
(bad)
inc
mov
xor
in
xchg
mov
xchg
cmp
add
push
adc
(bad)
mov
mov
mov
sti
into
xchg
shl
pop
pop
(bad)
jmp
pusha
outs
cwde
clc
icebp
test
ret
pushf
iret
movs
pusha
dec
(bad)
(bad)
(bad)
push
or
fs
and
fisttp
out
shr
inc
retf
movs
adc
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
mov
(bad)
and
idiv
into
ss
add
das
sub
add
mov
(bad)
jmp
stos
or
jmp
sar
les
je
add
or
(bad)
(bad)
mov
stos
(bad)
mov
mov
retf
xchg
test
dec
je
push
sbb
adc
fmul
pop
enter
and
and
sub
mov
sbb
jne
hlt
loope
shl
ja
mov
sbb
jo
out
push
xlat
push
xor
mov
(bad)
stc
or
sbb
xchg
scas
loope
push
push
jnp
aaa
mov
out
inc
push
inc
cmp
std
fdivr
ret
mov
fwait
mov
jmp
xchg
les
xor
jb
jmp
(bad)
(bad)
inc
sbb
mov
xor
and
or
retf
fst
test
(bad)
jmp
mov
ins
mov
pop
outs
les
icebp
in
daa
rcl
cmp
(bad)
(bad)
push
or
dec
mov
push
jl
and
pop
mov
mov
popa
inc
neg
jae
mov
clc
rol
leave
fisubr
adc
pop
hlt
sbb
dec
hlt
or
pop
repnz
jecxz
push
or
jecxz
mov
jmp
and
inc
(bad)
jge
lds
add
mov
(bad)
(bad)
(bad)
cmp
mov
dec
mov
loope
in
adc
sbb
push
in
dec
and
scas
(bad)
jmp
xchg
lahf
cmp
ins
mov
pushf
xchg
into
enter
inc
(bad)
call
or
sbb
leave
push
lock
cmc
jae
pop
cdq
jg
js
(bad)
(bad)
(bad)
(bad)
jl
mov
fdiv
popa
popa
add
mov
or
clc
or
in
xor
mov
jmp
xor
shl
jno
push
mov
aam
(bad)
push
sub
push
clc
pusha
xchg
(bad)
loope
pop
in
lock
adc
add
(bad)
(bad)
call
out
rol
push
pop
mov
sahf
mov
sahf
mov
xchg
sub
fwait
retf
push
fld
sar
(bad)
call
jp
stc
sub
and
ins
das
outs
mov
int3
xor
pop
(bad)
(bad)
(bad)
dec
popf
jne
cdq
sbb
and
shl
ins
jge
out
add
sub
fstp
dec
mov
test
(bad)
(bad)
push
adc
sahf
lods
xchg
pop
and
cmps
sbb
sub
inc
push
mov
nop
(bad)
(bad)
(bad)
push
jmp
shl
push
out
jmp
inc
xchg
es
test
(bad)
mov
jmp
push
popa
push
add
jae
(bad)
(bad)
(bad)
call
aas
add
ins
aad
adc
rcl
jp
inc
jl
test
popf
push
cld
leave
sar
(bad)
dec
and
adc
and
cmps
inc
call
adc
ret
dec
(bad)
(bad)
(bad)
(bad)
(bad)
cld
retf
lock
jmp
xchg
psrld
imul
bound
lods
lahf
adc
bound
mov
(bad)
(bad)
inc
ins
clc
pop
lods
inc
pop
push
popa
aaa
add
jmp
mov
push
push
dec
sbb
xor
(bad)
pop
pop
cld
pop
mov
xor
mov
pop
(bad)
std
mov
jecxz
(bad)
outs
sbb
mov
inc
scas
dec
(bad)
(bad)
inc
xor
call
mov
dec
ret
mov
popa
mov
(bad)
mov
pop
cmps
sub
lock
outs
or
push
nop
outs
out
and
(bad)
(bad)
mov
repnz
je
inc
lds
lahf
pop
ret
push
stos
out
invd
sbb
out
xor
std
jmp
out
sub
push
out
lock
(bad)
(bad)
call
js
dec
jo
jns
(bad)
mov
mov
fadd
int3
jb
ss
icebp
xor
call
(bad)
jnp
ins
pop
imul
enter
add
loop
sub
adc
movs
lods
into
hlt
cld
call
out
cwde
mov
mov
and
mov
jo
cmp
lock
(bad)
push
or
sbb
xchg
(bad)
mov
call
and
or
jmp
and
ret
fcomip
hlt
mov
mov
out
loopne
sub
pusha
sub
(bad)
(bad)
(bad)
inc
cmp
popa
mov
cdq
movs
xchg
xor
call
int
(bad)
(bad)
push
xor
pop
in
pop
sub
je
mov
sbb
aaa
fdivr
(bad)
(bad)
(bad)
in
aas
loop
aad
or
xchg
pop
add
sahf
jp
cmp
int3
pop
(bad)
jne
leave
in
fsubr
sar
stc
cs
adc
and
pop
xchg
fisttp
cmp
stc
paddb
(bad)
(bad)
mov
pushf
fbld
jb
sahf
(bad)
jle
ds
push
and
scas
mov
push
add
shl
mov
adc
jbe
and
(bad)
cmp
mov
je
call
cdq
add
push
pop
hlt
(bad)
inc
data16
(bad)
repnz
addr16
cmp
in
add
(bad)
(bad)
(bad)
jmp
pop
(bad)
jne
sbb
(bad)
xchg
ja
(bad)
in
pushf
cmp
clc
je
and
mov
mov
(bad)
jmp
call
dec
daa
cdq
push
dec
sbb
cmc
cmp
and
lock
push
add
pushf
pop
cmp
call
jmp
stos
cld
sar
lds
mov
mov
(bad)
(bad)
inc
mov
ret
mov
cmps
dec
or
sbb
mov
fwait
push
hlt
sbb
std
(bad)
movs
clc
cmp
or
adc
jnp
iret
cmps
scas
out
dec
mov
shl
ret
repnz
or
push
call
cmp
jns
sub
push
adc
(bad)
out
pop
mov
and
loop
das
ja
dec
(bad)
inc
je
jae
bound
mov
mov
dec
call
jae
jg
jmp
cmp
and
mov
repnz
out
(bad)
cld
outs
test
push
cli
adc
add
(bad)
mov
sahf
in
cs
call
dec
xor
repz
or
jecxz
sbb
dec
(bad)
call
scas
ins
adc
in
adc
adc
adc
jne
popa
pushf
(bad)
jmp
and
ret
icebp
mov
cmp
(bad)
mov
adc
jg
(bad)
dec
por
pusha
or
dec
in
mov
sbb
xchg
mov
outs
adc
test
adc
stos
popf
outs
or
sbb
add
mov
(bad)
int
pop
add
(bad)
jmp
sbb
adc
or
pop
and
push
cmp
sub
mov
xor
xlat
div
add
add
movs
repz
jmp
scas
jecxz
stos
(bad)
jecxz
cmp
adc
dec
cmps
call
or
jo
inc
das
jp
into
cld
ret
sub
bound
jecxz
jne
cmps
push
fbstp
sbb
lods
arpl
test
scas
push
test
out
or
(bad)
call
stos
gs
lods
sbb
out
xchg
mov
pushf
test
test
dec
pop
xor
mov
(bad)
(bad)
mov
stc
cwde
mov
inc
lods
dec
jp
(bad)
call
shl
mov
dec
mov
(bad)
(bad)
dec
repz
ss
daa
cmps
(bad)
cmc
jb
add
ja
loop
and
retf
icebp
and
add
pop
cwde
cmps
push
clc
(bad)
jmp
lods
inc
lock
sub
fistp
xchg
pop
outs
xchg
ret
cmp
jb
(bad)
(bad)
call
jge
lods
in
arpl
dec
dec
xor
and
loope
sbb
mov
(bad)
(bad)
push
adc
or
sub
add
sub
fcmovb
mov
xchg
cmp
inc
push
mov
stos
(bad)
(bad)
(bad)
(bad)
cmp
mov
imul
mov
push
scas
dec
out
xchg
std
fidiv
loopne
jmp
loop
xor
add
pop
xor
inc
mov
mov
(bad)
mov
cmc
xchg
cmp
stc
(bad)
cli
(bad)
(bad)
call
nop
xor
scas
pop
add
ja
and
jmp
scas
cld
(bad)
jmp
push
mov
mov
xor
mov
push
ret
stos
out
xor
jg
add
mov
jg
jne
rcl
call
jg
mov
dec
or
push
ins
xor
fmul
rol
(bad)
adc
mov
fs
ss
sbb
(bad)
push
pop
ins
or
sbb
and
loopne
sub
dec
xor
aaa
in
repz
xor
movs
shl
add
(bad)
jmp
and
stos
cmps
jno
out
sub
out
cli
xlat
sahf
cmp
inc
pusha
or
hlt
cmp
loop
mov
imul
je
adc
in
(bad)
jmp
sub
sar
mov
ins
jg
inc
leave
mov
dec
test
aad
icebp
dec
sub
dec
int
rcr
sbb
xor
xchg
xchg
jo
sub
mov
(bad)
jl
pop
idiv
mov
sbb
(bad)
mov
mov
loope
pushf
nop
dec
test
mov
outs
and
addr16
push
(bad)
call
jbe
xchg
fdivr
jns
and
push
leave
mov
push
dec
jnp
mov
jmp
xor
pushf
mov
gs
js
jp
icebp
jns
movs
lods
adc
ficom
movs
push
ja
aam
(bad)
(bad)
call
jmp
out
jge
mov
xchg
lea
popa
lahf
arpl
repnz
aaa
cld
cmps
or
sti
(bad)
in
(bad)
sub
push
mov
mov
call
mov
fucomp
fwait
xchg
rcr
add
(bad)
(bad)
(bad)
inc
and
aas
outs
add
inc
ja
cmc
test
jne
mov
jns
sbb
lock
inc
push
sub
adc
jmp
outs
push
xchg
fwait
add
test
cdq
pop
jmp
gs
mov
adc
xor
and
(bad)
(bad)
dec
adc
push
push
xchg
lods
cdq
mov
in
or
je
iret
neg
pop
jno
(bad)
(bad)
jmp
iret
mov
add
xchg
pop
gs
sti
or
(bad)
dec
add
or
je
fwait
out
dec
add
push
mov
in
adc
inc
add
push
xor
push
mov
cld
mov
outs
mov
(bad)
(bad)
(bad)
jmp
and
movs
jmp
jns
or
cdq
(bad)
arpl
mov
pop
(bad)
jmp
enter
movs
and
cmp
into
cmovg
or
dec
dec
xor
add
out
dec
fwait
or
cdq
out
rol
std
out
in
mov
ja
mov
adc
push
cdq
(bad)
(bad)
(bad)
(bad)
call
repz
dec
jno
or
sub
outs
int3
push
adc
dec
fld
es
push
cld
(bad)
(bad)
(bad)
in
xchg
xor
sbb
test
ins
xchg
movs
es
inc
jp
pop
sub
push
(bad)
pop
test
(bad)
add
and
sbb
sbb
push
iret
aaa
xor
imul
(bad)
(bad)
dec
mov
lods
mov
ficomp
mov
jle
mov
jge
mov
or
dec
(bad)
hlt
sbb
push
xchg
mov
aaa
pop
xchg
fnstsw
sub
xchg
cmps
jae
aad
(bad)
inc
sub
(bad)
inc
leave
loopne
stos
mov
pop
pop
popf
in
xor
cld
(bad)
(bad)
jmp
mov
cli
or
sbb
pop
or
add
(bad)
(bad)
call
test
out
(bad)
loop
aad
push
jl
sbb
dec
push
and
inc
jo
stos
sub
cld
jno
into
cmps
fcmovb
or
mov
(bad)
(bad)
inc
and
addr16
xor
cdq
cmp
dec
mov
mov
push
add
dec
dec
out
cli
sub
mov
push
lock
arpl
push
sbb
cli
mov
fimul
(bad)
(bad)
jmp
pop
and
jo
add
scas
nop
loopne
pop
test
idiv
mov
cmp
(bad)
(bad)
(bad)
jmp
daa
ror
or
or
inc
pop
xchg
pop
scas
pushf
mov
mov
inc
(bad)
pop
ja
daa
cmps
jne
cdq
div
(bad)
(bad)
out
and
lds
xor
mov
add
jns
pushf
adc
(bad)
(bad)
jmp
pop
mov
add
gs
push
jno
fcom
cld
sub
sub
(bad)
inc
out
nop
add
xlat
jecxz
icebp
or
inc
enter
lds
jge
jge
jno
(bad)
(bad)
jmp
retf
dec
mul
mov
jno
das
out
sar
jecxz
and
jmp
fnstenv
cmp
push
and
and
xor
push
push
stos
aas
sub
mov
xlat
call
(bad)
jmp
cmp
mov
push
sbb
adc
scas
xchg
cmp
cs
cmp
jno
(bad)
(bad)
call
ja
dec
lods
or
dec
inc
mov
mov
(bad)
(bad)
fisttp
inc
jae
shl
in
inc
scas
jmp
ins
add
(bad)
(bad)
(bad)
push
xchg
cmp
call
out
jns
and
xor
lahf
aas
jnp
xchg
inc
push
adc
push
adc
(bad)
(bad)
(bad)
push
ret
mov
in
(bad)
repz
push
jbe
iret
mov
jge
add
mov
pop
(bad)
(bad)
(bad)
call
dec
ins
adc
add
dec
shr
dec
pop
add
(bad)
push
cmp
in
pop
or
mov
xchg
push
push
mov
sti
dec
daa
cli
adc
push
mov
mov
frstor
xchg
ja
pop
dec
jmp
in
mov
cmp
(bad)
(bad)
out
clc
push
sub
je
pop
ret
cmc
lock
or
rcl
adc
jecxz
or
scas
stc
(bad)
push
test
mov
retf
shl
add
mov
shr
ins
out
mov
mov
mov
or
(bad)
in
hlt
jge
fsubr
les
fidivr
add
xchg
(bad)
inc
and
push
jne
int
pop
dec
lea
ret
pop
inc
mov
ins
push
ss
shl
cli
jg
pop
(bad)
mov
and
in
inc
shr
das
pop
pusha
mov
xor
loope
ins
mov
add
les
(bad)
(bad)
dec
inc
imul
cmps
pop
out
add
dec
imul
push
push
xchg
cmps
fcmove
fist
les
fsubrp
(bad)
fcom
and
xor
call
sti
sbb
xchg
out
loop
cs
int3
call
pop
pop
ins
adc
popf
(bad)
(bad)
(bad)
(bad)
clc
mov
xchg
push
inc
out
mov
mov
retf
imul
xchg
mov
jns
inc
sti
or
push
les
mov
jmp
sbb
sub
dec
mov
mov
inc
rol
mov
nop
push
pop
jmp
mov
inc
pop
mov
test
stos
cmc
lods
movs
shr
(bad)
(bad)
(bad)
mov
push
in
jnp
sub
bound
repnz
pop
inc
xchg
fild
mov
(bad)
(bad)
(bad)
(bad)
aas
pop
push
call
pop
jbe
pusha
xor
or
ret
mov
call
(bad)
(bad)
(bad)
call
(bad)
inc
inc
sbb
xchg
add
imul
test
mov
mov
fcom
(bad)
push
and
and
aad
xor
jecxz
dec
fnstenv
ins
std
call
mov
inc
rcl
mov
mov
call
ds
int
xor
movs
mov
dec
bound
mov
mov
jg
jmp
mov
mov
xchg
stos
fisub
pushf
cmp
stc
lods
and
movs
jo
xchg
sbb
push
bound
(bad)
inc
das
lock
shl
popf
xchg
gs
pusha
push
aaa
mov
test
fiadd
movs
std
add
jo
pop
imul
xchg
sbb
lods
(bad)
(bad)
(bad)
jmp
std
adc
jae
outs
adc
shr
aad
(bad)
mov
aaa
iret
sub
jo
or
adc
jmp
shl
call
fwait
mov
sbb
sub
div
(bad)
(bad)
(bad)
(bad)
cli
pop
xchg
sub
adc
pop
(bad)
push
outs
stos
jno
pop
cdq
inc
push
add
push
add
jae
push
(bad)
loopne
(bad)
dec
out
outs
sti
adc
ins
fisub
in
dec
into
jge
cmp
(bad)
(bad)
call
dec
mov
mov
stos
fisttp
pop
nop
cmp
or
bound
pop
hlt
push
inc
sbb
(bad)
call
repnz
sbb
jb
out
test
dec
mov
(bad)
(bad)
call
das
cmp
cmp
cmp
pop
test
add
push
hlt
mov
pop
ja
jmp
call
fcom
(bad)
iret
into
fiadd
stos
stos
(bad)
in
(bad)
jmp
push
mov
std
mov
pop
xchg
inc
fisubr
dec
add
stos
pop
xor
sti
jmp
add
ja
sub
jns
in
xlat
call
mov
loopne
xchg
into
inc
loop
mov
xchg
sbb
add
fadd
jge
cli
(bad)
jmp
call
add
retf
inc
sub
in
mov
enter
outs
xchg
mov
fxch
pop
int
mov
fist
sti
inc
cmovg
add
inc
cmc
xor
sub
lock
lods
jg
inc
pop
fistp
inc
retf
sbb
mov
push
or
sysret
push
jmp
and
mov
xchg
mov
cmc
push
pushf
push
ss
dec
fdivr
(bad)
(bad)
call
push
add
rcr
loop
sbb
int3
imul
test
popf
adc
adc
cld
mov
outs
cld
cmp
xchg
ja
sar
ss
popf
les
sub
mov
(bad)
inc
outs
je
cdq
icebp
mov
mov
mov
fsub
(bad)
and
add
dec
in
mov
add
jns
cmovb
(bad)
mov
mov
scas
adc
je
jg
pop
xchg
mov
or
ret
loopne
test
cmc
hlt
rcr
push
xchg
or
pop
cmc
and
mov
inc
inc
mov
(bad)
mov
mov
fbld
sbb
mov
inc
inc
or
rcl
sar
inc
xor
out
sbb
rcr
loope
daa
mov
ins
call
(bad)
pop
jo
pop
push
inc
out
inc
(bad)
cmp
adc
cmp
ss
out
js
scas
sahf
je
push
push
mov
xor
popw
cmp
jae
(bad)
(bad)
inc
pop
jl
enter
es
jae
and
or
jae
loopne
cmp
push
mov
(bad)
(bad)
(bad)
jmp
push
pusha
push
xchg
xchg
xchg
xchg
fimul
xchg
push
sbb
pop
mov
cmc
ins
jecxz
(bad)
in
jmp
dec
jg
hlt
dec
lea
push
cdq
cmp
xchg
mov
dec
and
sub
(bad)
jmp
and
push
ja
jb
sub
jg
dec
shr
jbe
scas
clc
inc
ins
rol
fisub
adc
push
dec
aas
(bad)
(bad)
(bad)
(bad)
fstp
inc
pushf
cwde
test
jb
sti
popa
pop
jnp
push
out
push
xchg
xor
mov
push
and
(bad)
(bad)
stc
outs
pop
retf
(bad)
mov
xor
xchg
inc
sti
xor
imul
and
mov
test
push
std
sub
sbb
push
adc
cmc
test
xchg
cmps
mov
(bad)
(bad)
(bad)
inc
jo
push
add
sub
icebp
dec
mov
jecxz
jnp
je
arpl
(bad)
mov
mov
out
out
xchg
mov
cmp
jnp
jne
std
pop
dec
jge
(bad)
(bad)
(bad)
(bad)
js
test
cwde
dec
jmp
icebp
adc
push
xchg
sbb
out
or
push
movs
push
xor
push
cmp
cmp
lock
(bad)
jmp
xor
aas
scas
adc
fwait
mov
cmp
jnp
into
cmp
(bad)
(bad)
in
call
sbb
xor
lock
pop
out
xor
(bad)
push
mov
(bad)
jmp
repnz
addr16
ror
sub
cwde
adc
mov
push
pop
cmp
pop
lds
mov
cmc
aam
mov
or
ror
(bad)
call
jns
xchg
xor
sub
inc
jb
xchg
repz
cmc
and
ins
push
cmp
dec
imul
jmp
sar
xor
es
xor
inc
adc
mov
adc
test
xchg
(bad)
jmp
test
mov
lahf
inc
add
es
cmp
(bad)
(bad)
(bad)
dec
das
xor
inc
cmp
outs
pushf
jo
mov
mov
push
stc
jg
push
dec
jmp
in
adc
adc
mov
(bad)
(bad)
(bad)
(bad)
fdiv
pop
cmp
push
pusha
inc
(bad)
cmp
loop
or
(bad)
jg
(bad)
call
mov
es
stos
mov
ins
inc
jge
inc
mov
(bad)
push
cld
jge
rcl
or
rol
aas
in
jmp
ins
fidiv
push
or
pop
std
(bad)
dec
xor
sbb
xor
repz
sti
out
jo
nop
in
pop
test
mov
(bad)
(bad)
inc
adc
pop
ins
adc
stc
cmp
repnz
cmp
lahf
pop
xor
arpl
icebp
(bad)
call
adc
jns
mov
sub
fs
outs
test
add
pop
mov
(bad)
(bad)
(bad)
cmc
mov
mov
ror
loopne
mov
lea
mov
aaa
or
cli
cmp
pop
add
jne
jne
add
pop
or
jmp
adc
adc
test
popf
cli
cmp
inc
(bad)
(bad)
(bad)
call
and
sub
add
cld
gs
or
add
mov
lods
or
and
call
(bad)
(bad)
out
cmp
push
jne
xor
stos
mov
ds
dec
jge
cdq
inc
jns
or
push
std
pop
xor
daa
jne
lock
cli
mov
jg
ret
push
sbb
call
cld
outs
rcl
sub
jl
sbb
xchg
scas
lahf
push
mov
(bad)
(bad)
inc
sbb
sbb
outs
jbe
aaa
cmps
sbb
adc
sbb
je
enter
ret
push
fcomp
pop
inc
mov
mov
bound
mov
fcomip
bound
add
mov
nop
fneni(8087
add
dec
icebp
pushf
pop
ret
xchg
fcomip
pop
xchg
xchg
inc
(bad)
fstp
(bad)
(bad)
call
dec
xchg
mov
mov
test
std
stos
xchg
jb
or
xchg
mov
pop
pop
mov
(bad)
(bad)
inc
jnp
ds
inc
dec
xor
aad
push
mov
test
(bad)
jg
sbb
not
test
sbb
fisub
mov
inc
sbb
cs
cmc
mov
(bad)
mov
xor
inc
xchg
xchg
mov
sbb
(bad)
ins
popf
jne
pop
cwde
jle
add
scas
call
inc
into
xor
jp
ins
call
cmp
sti
cmp
cmps
xor
jle
(bad)
(bad)
jmp
pop
cdq
jp
sub
xor
mov
and
fwait
out
outs
mov
jmp
cli
pop
or
mov
adc
out
lods
dec
sub
(bad)
dec
aaa
sub
xchg
js
sub
cld
add
push
sub
pop
inc
adc
adc
cmps
out
lods
or
inc
mov
pop
aas
mov
(bad)
mov
add
adc
call
in
loope
push
(bad)
jmp
mov
mov
mov
mov
iret
ud0
(bad)
call
jmp
inc
push
xchg
cmps
loop
ja
or
shl
fisttp
add
jecxz
add
(bad)
jg
pop
leave
movs
mov
push
xor
cmps
sbb
sar
fiadd
(bad)
(bad)
(bad)
(bad)
in
aaa
retf
jp
sub
sub
icebp
(bad)
sti
ret
in
mov
cli
loop
pop
std
jmp
(bad)
call
rsm
cmp
cmovge
sbb
cmp
cdq
fst
jne
(bad)
(bad)
dec
scas
test
adc
sahf
(bad)
loop
in
fidiv
stos
lods
xor
sub
pop
loopne
daa
out
retf
mov
add
jo
es
aad
cs
jg
addr16
retf
xchg
cmp
cmps
in
sar
dec
shl
cmc
xor
hlt
(bad)
call
adc
movs
mov
fimul
mov
pop
xor
(bad)
dec
out
or
jp
and
sub
lods
jl
test
mov
ins
das
pusha
pop
jp
push
fucom
mov
dec
push
fldcw
dec
push
shr
call
mov
mov
adc
fmul
xor
or
in
mov
xchg
(bad)
cld
shl
adc
call
or
push
xor
nop
movs
mov
lds
(bad)
(bad)
dec
fisub
cdq
test
xor
enter
jle
sub
pop
pop
dec
fwait
shl
(bad)
(bad)
push
mov
xor
pop
push
pop
imul
sub
sahf
pop
ins
call
adc
xor
sub
call
(bad)
jp
jmp
mov
push
out
std
or
das
push
cmp
mov
push
outs
adc
jmp
cmp
test
or
adc
pushf
mov
push
pop
push
imul
das
pop
lods
sub
retf
(bad)
(bad)
clc
daa
xor
lahf
aaa
mov
out
mov
push
jno
jmp
clc
scas
bnd
mov
ins
mov
inc
and
sbb
mov
jge
jp
push
add
pop
and
iret
cmp
and
dec
mov
mov
push
std
inc
mov
inc
fisttp
out
adc
stos
cmps
mov
cdq
dec
fbld
adc
fs
pop
clc
sub
arpl
mov
mov
(bad)
(bad)
jmp
pop
push
mov
shr
mov
jmp
dec
mov
lods
xor
ret
movs
aaa
mov
(bad)
call
loop
(bad)
fst
xor
rcr
dec
ins
add
(bad)
call
sub
fcomp
jne
mov
loopne
adc
jp
(bad)
(bad)
(bad)
inc
in
in
mov
int3
mov
pop
xlat
sbb
cwde
shl
sub
mov
mov
jecxz
test
mov
call
pop
or
adc
cmp
call
movs
fsub
(bad)
(bad)
call
mov
sahf
stc
pop
xor
jg
nop
jg
test
mov
stos
int3
sub
or
jg
dec
push
inc
and
lds
std
mov
(bad)
(bad)
push
and
mov
(bad)
push
adc
sahf
cwde
xchg
sub
add
ins
jmp
mov
pop
cld
dec
and
sbb
scas
pop
jecxz
movs
mov
inc
jbe
test
xchg
jl
pop
scas
xchg
inc
sbb
ss
(bad)
(bad)
push
loope
aam
retf
test
icebp
mov
bound
cli
scas
cdq
or
rcr
push
sar
(bad)
(bad)
call
inc
jnp
shr
or
ins
jbe
xchg
dec
lods
jp
sbb
mov
mov
mov
xor
push
lods
push
imul
rol
sti
xlat
int3
icebp
stos
out
shr
(bad)
call
or
fnsave
mov
pop
xchg
or
mov
sbb
mov
mov
pop
sti
mov
sar
mov
xor
inc
daa
mov
and
inc
arpl
inc
(bad)
(bad)
(bad)
call
pop
outs
(bad)
das
test
into
jmp
gs
retf
lds
cmps
add
cmp
cli
adc
adc
cmp
scas
int
fisubr
push
mov
aad
add
push
enter
adc
pop
push
scas
call
les
call
sahf
add
addr16
xor
icebp
sbb
jg
call
(bad)
(bad)
call
ins
jne
jbe
arpl
mov
cmp
shr
jbe
add
dec
dec
cmp
je
jo
pop
cmp
(bad)
js
aaa
mov
add
repnz
mov
add
(bad)
jmp
pop
sub
cmp
stos
(bad)
repz
cli
(bad)
sti
pop
cmp
(bad)
(bad)
out
mov
jge
scas
xor
fcmove
mov
adc
sbb
(bad)
(bad)
(bad)
mov
jle
mov
and
xchg
in
mov
mov
leave
sub
inc
jmp
sar
(bad)
(bad)
call
shl
(bad)
mov
mov
cmp
pop
sub
pop
(bad)
(bad)
(bad)
(bad)
(bad)
fbld
xor
pop
xchg
inc
arpl
jg
xlat
xor
(bad)
rcl
(bad)
(bad)
call
(bad)
(bad)
fs
add
mov
jle
in
(bad)
lock
mov
(bad)
int
mov
push
cs
(bad)
(bad)
jmp
mov
mul
(bad)
mov
adc
push
push
mov
(bad)
jmp
adc
out
loope
inc
push
aad
and
jecxz
imul
adc
or
add
stos
shl
lock
stos
movs
jns
std
cld
clc
pop
lds
mov
inc
ins
sbb
sub
stos
pushf
js
outs
sahf
mov
mov
and
call
push
xchg
push
jle
(bad)
stc
pop
or
inc
push
adc
mov
scas
xchg
push
(bad)
(bad)
(bad)
jmp
cwde
ins
and
adc
xchg
mov
cmp
mov
ja
packuswb
test
and
clc
fimul
stc
mov
hlt
adc
pop
jns
and
xchg
mov
fwait
(bad)
(bad)
call
imul
js
push
push
pop
les
pop
rcr
mov
call
cli
stos
test
pop
xor
push
jg
xchg
lods
cmp
cmp
fs
mov
adc
mov
dec
push
scas
(bad)
(bad)
(bad)
inc
inc
xlat
mov
inc
hlt
mov
test
stos
ss
xor
mov
dec
mov
(bad)
(bad)
dec
pop
mov
or
dec
test
ret
test
es
mov
cmp
aad
(bad)
(bad)
(bad)
in
das
mov
and
cs
pop
dec
cmp
jp
ins
adc
mov
and
lock
xor
(bad)
fisttp
ss
aad
movs
sub
and
(bad)
popf
push
lock
(bad)
dec
adc
pop
sbb
jbe
sub
xchg
gs
sub
cli
jbe
(bad)
(bad)
call
imul
xchg
cmp
icebp
pop
ficomp
aaa
call
inc
sahf
clc
lods
ins
aam
(bad)
(bad)
jmp
iret
mov
xchg
and
push
xor
xchg
jle
pop
hlt
imul
mov
pop
dec
adc
inc
jno
pop
ret
pop
inc
clc
adc
lahf
(bad)
(bad)
jmp
shl
pusha
xchg
xor
push
cs
push
iret
push
fs
pop
lock
loopne
pop
out
inc
data16
push
xor
cmp
dec
das
clc
cwde
or
mov
int3
jo
jne
cmp
jno
hlt
and
cwde
cld
(bad)
(bad)
call
cdq
shr
jne
pop
in
cmp
xor
push
ds
and
sub
aaa
bound
mov
arpl
idiv
mov
mov
dec
push
fmul
mov
(bad)
mov
jle
(bad)
fnstsw
pusha
inc
dec
(bad)
push
push
inc
std
push
xchg
dec
sbb
int3
and
mov
cmps
jmp
jb
mov
adc
sbb
mov
dec
mov
ret
jmp
inc
in
cmp
sbb
jecxz
pop
daa
inc
dec
pop
jl
mov
mov
fcomp
or
or
adc
dec
bound
nop
jae
jo
icebp
in
add
(bad)
(bad)
(bad)
mov
push
mov
jae
lods
movs
inc
in
xor
jge
xchg
pushf
das
pop
push
call
pop
scas
pop
bound
xchg
fistp
scas
lock
or
(bad)
(bad)
mov
add
mov
outs
fidivr
mov
fbstp
shr
popa
(bad)
(bad)
(bad)
(bad)
(bad)
jp
jo
ins
sub
and
push
dec
retf
jbe
in
popa
dec
mov
mov
repz
(bad)
(bad)
(bad)
jmp
outs
pop
mov
push
imul
sbb
xor
nop
iret
jl
dec
(bad)
in
and
pop
retf
ret
(bad)
(bad)
dec
lea
lahf
ret
and
or
add
jge
aam
add
loopne
mov
mov
(bad)
(bad)
push
cmp
push
mov
in
lds
pop
pop
loope
mov
rol
sub
(bad)
jmp
xor
pop
jmp
sbb
jecxz
xchg
or
js
ds
(bad)
(bad)
(bad)
fstp
sahf
popa
mov
xchg
mov
xchg
(bad)
inc
jne
sar
ret
hlt
into
jnp
(bad)
(bad)
(bad)
jmp
fcomi
mov
shr
xor
mov
adc
mov
(bad)
(bad)
(bad)
jmp
outs
xchg
bound
pop
lahf
sahf
ins
adc
push
inc
mov
out
arpl
(bad)
push
out
and
jecxz
mov
mov
adc
in
cdq
ja
rcl
ret
cmps
mov
inc
pushf
pop
mov
in
sahf
out
lahf
pop
je
ss
cli
int
mov
jbe
retf
call
shl
mov
call
fxch
int3
cmps
(bad)
(bad)
(bad)
inc
jecxz
(bad)
nop
sbb
mov
fdivr
push
xchg
hlt
cmc
inc
mov
mov
out
(bad)
(bad)
push
enter
sub
retf
retf
xchg
mov
push
sub
or
sbb
push
idiv
(bad)
(bad)
push
pop
je
jo
imul
xchg
movs
mov
shr
xchg
xlat
mov
outs
mov
call
jp
popa
xor
or
hlt
rol
outs
adc
(bad)
mov
clc
scas
mov
test
push
inc
xor
jl
(bad)
mov
jmp
outs
push
cmp
pop
outs
dec
mov
(bad)
call
cmp
lods
xchg
push
mov
cmps
and
xor
and
xor
mov
inc
mov
pop
enter
sbb
inc
and
sub
push
popf
stos
aaa
aaa
adc
in
mov
(bad)
(bad)
(bad)
inc
ror
jp
(bad)
sti
in
sub
inc
icebp
movs
scas
mov
mov
(bad)
(bad)
push
or
jb
mov
outs
xlat
cld
xchg
cdq
mov
xor
mov
mov
and
cmps
hlt
(bad)
call
sub
jnp
(bad)
xlat
xchg
ret
mov
pop
and
adc
jg
sub
pushf
retf
xor
pop
adc
mov
mov
push
loop
bound
les
fimul
test
and
(bad)
(bad)
(bad)
(bad)
mov
aad
jae
(bad)
movs
fiadd
jmp
out
call
stc
push
(bad)
(bad)
(bad)
(bad)
out
out
cmp
(bad)
pop
imul
xor
jp
push
push
adc
dec
imul
call
dec
movs
push
or
sbb
jp
mov
loopne
shl
sahf
push
repz
aas
jnp
nop
add
ins
aaa
stos
loopne
bound
(bad)
(bad)
jmp
pop
(bad)
dec
jg
nop
mov
ins
add
mov
retf
ror
out
mov
shr
jg
inc
out
sub
jmp
pop
push
add
and
fcomip
cli
dec
call
outs
cmps
lea
sbb
pop
xor
ds
(bad)
(bad)
(bad)
fist
pop
popa
or
mov
leave
adc
xchg
popa
out
pushf
cmp
movs
(bad)
(bad)
(bad)
(bad)
mov
adc
jl
push
arpl
repz
loope
inc
push
pop
inc
stos
pop
neg
fadd
sbb
dec
adc
fild
inc
mov
in
sbb
push
push
dec
mov
adc
pop
jg
gs
and
rcl
add
xor
add
sub
(bad)
(bad)
(bad)
in
cmp
loope
icebp
cld
sub
imul
mov
xor
xor
addr16
mov
jmp
dec
stos
xchg
lahf
les
pop
cli
nop
cli
mov
inc
fs
add
(bad)
(bad)
mov
and
push
shl
push
icebp
mov
fiadd
divps
pop
in
jle
xor
(bad)
(bad)
jmp
xor
jb
cmp
lock
cmp
adc
call
lods
(bad)
(bad)
jmp
xchg
popa
aaa
icebp
bound
ins
xchg
fs
test
sub
adc
cld
cld
outs
sahf
add
(bad)
out
xchg
sub
xchg
mov
adc
adc
and
xchg
(bad)
call
and
fisubr
ror
add
add
loopne
sbb
(bad)
(bad)
(bad)
jl
and
ret
clc
push
ret
int
add
or
and
movs
cs
test
dec
cld
mov
dec
push
xchg
adc
les
mov
enter
sbb
ror
xlat
push
sbb
(bad)
dec
lods
stos
retf
cld
inc
mov
mov
pusha
retf
(bad)
(bad)
mov
out
xchg
imul
dec
dec
enter
arpl
dec
dec
pop
dec
(bad)
(bad)
call
loop
jmp
push
fnstcw
mov
std
test
(bad)
(bad)
(bad)
call
add
xor
aaa
xchg
sbb
pop
(bad)
xor
fwait
mov
leave
add
fwait
(bad)
jns
mov
pop
push
out
mov
mov
push
cmp
into
jne
(bad)
gs
(bad)
(bad)
(bad)
jmp
fld
rol
mov
mov
push
and
fidivr
call
clc
cmp
in
push
cmp
mov
pop
push
mov
inc
repnz
movs
cdq
in
sbb
jae
xor
fist
repnz
popf
mov
sbb
push
inc
das
inc
test
pusha
mov
add
loopne
mov
(bad)
test
fs
ds
cmp
sar
(bad)
std
bound
mov
dec
pop
jbe
ins
jl
leave
stos
call
jmp
(bad)
inc
outs
add
mov
aad
mov
or
pop
cmps
call
mov
jmp
adc
jge
jp
shl
push
pushf
sub
aaa
cmp
xor
and
clc
inc
inc
adc
inc
mov
retf
xchg
shl
(bad)
(bad)
(bad)
call
pop
int3
fdivp
jb
push
sub
cdq
(bad)
jle
cwde
mov
jae
adc
(bad)
mov
int
repz
jbe
and
xlat
or
xchg
(bad)
call
push
mov
arpl
into
scas
jmp
ins
mov
retf
mov
(bad)
dec
jmp
jp
das
out
mov
fst
rol
shr
adc
mov
addr16
xchg
cmp
(bad)
call
or
jmp
popa
adc
rol
in
mov
and
test
mov
fisttp
and
loop
cmp
inc
push
jae
jae
cmp
dec
mov
fwait
aad
popa
ja
sbb
mov
neg
(bad)
call
aad
sahf
cmp
xor
jbe
ins
test
into
mov
(bad)
into
cmp
mov
jg
in
data16
sbb
dec
pushf
sbb
xchg
popf
repz
(bad)
call
push
sbb
mov
sub
mov
retf
pop
(bad)
jmp
mov
shl
ins
out
mov
loop
iret
cmp
loop
add
sub
stc
xchg
add
mov
or
(bad)
(bad)
(bad)
push
movs
ret
call
retf
stos
push
cmp
mov
sub
cmps
pop
(bad)
inc
rol
xchg
outs
xchg
xor
nop
cpuid
cmp
lea
push
ins
and
xor
mov
push
and
cmp
inc
adc
inc
ss
aas
cwde
int3
xor
push
push
push
push
dec
jmp
rcl
pop
push
aam
inc
(bad)
(bad)
(bad)
jmp
jmp
stos
push
in
mov
scas
test
pop
jae
and
int3
jnp
(bad)
(bad)
(bad)
jmp
ret
add
pop
dec
sub
jmp
add
pop
pusha
pop
fcmovu
jnp
sbb
into
in
(bad)
(bad)
(bad)
fnstsw
fcom
fisub
add
inc
mov
adc
call
pop
arpl
xchg
xchg
add
std
push
mov
call
lods
data16
push
loopne
ror
pop
dec
(bad)
in
ror
(bad)
(bad)
(bad)
jg
mov
mov
arpl
(bad)
xlat
jmp
(bad)
sbb
mov
in
fs
add
std
(bad)
jnp
push
imul
mov
jmp
jp
inc
mov
aam
cmp
fild
push
stos
and
(bad)
sub
call
rcl
test
jge
(bad)
in
push
test
add
scas
mov
cmp
add
hlt
mov
(bad)
(bad)
jmp
jmp
lds
mov
and
retf
hlt
daa
scas
mov
out
nop
(bad)
call
adc
cmp
mov
push
jecxz
xor
or
(bad)
push
std
push
leave
not
mov
xor
jnp
dec
sbb
pop
data16
(bad)
jmp
inc
xchg
mov
xchg
nop
jb
in
je
add
loope
xchg
mov
rcl
aaa
out
sub
sub
iret
or
fsub
loopne
(bad)
(bad)
jg
cs
mov
dec
pop
sub
cmp
jmp
mov
mov
aam
cmps
or
mov
scas
mov
xor
mov
sub
lea
aam
jle
sbb
push
mov
ss
(bad)
(bad)
call
sub
jb
dec
(bad)
js
xor
adc
stos
sub
mov
out
push
fisub
cmc
stos
hlt
idiv
add
xor
jg
shl
add
(bad)
call
push
xor
xchg
fs
dec
push
cmp
pop
push
pop
loop
cwde
inc
shl
push
mov
(bad)
(bad)
out
cli
xchg
sbb
pop
cs
(bad)
jae
into
fsubr
(bad)
inc
(bad)
xor
xchg
push
int3
(bad)
call
call
pop
jno
dec
cmc
lods
cmp
int3
or
loop
(bad)
jmp
push
data16
gs
add
jns
adc
(bad)
(bad)
inc
enter
push
sbb
out
sahf
xchg
lods
aad
xchg
clc
sbb
and
xor
cs
aad
push
ret
dec
lods
lahf
xchg
int3
es
xchg
and
jmp
xor
scas
sbb
lahf
cld
xchg
adc
out
(bad)
(bad)
call
gs
cs
stos
int3
jne
aad
dec
les
add
js
ja
(bad)
(bad)
(bad)
push
shl
push
out
popf
(bad)
in
or
test
mov
stos
cmp
jbe
mov
hlt
(bad)
call
retf
rcl
push
pop
push
cdq
sbb
jno
sbb
cmp
mov
stc
je
int
fsub
ins
outs
cmps
mov
(bad)
cdq
(bad)
dec
mov
(bad)
(bad)
(bad)
call
dec
out
dec
dec
xchg
pop
xor
cmp
mov
pop
pop
xchg
cmovs
pop
rcr
cli
dec
jmp
int3
dec
(bad)
jno
jmp
sti
pop
dec
push
sub
sahf
(bad)
(bad)
(bad)
(bad)
jp
dec
rcl
mov
(bad)
aam
mov
or
inc
test
push
mov
outs
daa
in
fnstsw
(bad)
(bad)
(bad)
fistp
sub
xchg
inc
mov
test
mov
idiv
inc
and
xor
rcr
jl
adc
ins
sub
retf
icebp
aad
add
xchg
xor
daa
dec
std
(bad)
(bad)
(bad)
mov
retf
es
mov
cmc
adc
loopne
jp
xor
aad
(bad)
call
mov
cmp
aad
ins
inc
movs
dec
das
loopne
pop
es
xchg
pop
xor
add
(bad)
(bad)
inc
je
aas
mov
(bad)
shl
mov
loope
rcl
inc
sbb
out
(bad)
(bad)
(bad)
(bad)
dec
iret
add
adc
xor
xor
ror
lods
xor
inc
and
cmp
(bad)
dec
xchg
and
xor
push
test
pop
stos
(bad)
(bad)
(bad)
jmp
ja
or
push
clc
lahf
mov
pop
pop
jne
fs
stos
sub
(bad)
dec
scas
outs
pop
shr
cmp
add
xchg
add
mov
push
sub
hlt
fistp
sar
movs
pop
mov
rcl
jmp
dec
add
rcl
mov
cmps
inc
jle
xchg
dec
and
and
test
pop
jle
stos
ss
mov
call
int
je
push
pop
cmp
in
sbb
inc
arpl
push
push
fdiv
pop
(bad)
(bad)
(bad)
in
mov
(bad)
fxch
test
iret
dec
sar
or
(bad)
icebp
fsubrp
push
dec
call
cld
(bad)
out
add
xor
mov
sub
leave
or
mov
(bad)
jg
inc
push
gs
std
ins
mov
xchg
add
cmp
mov
movs
ja
lahf
(bad)
(bad)
(bad)
jmp
stc
cdq
repz
sbb
daa
int
loop
jae
push
sub
push
das
xor
jns
outs
ret
and
(bad)
(bad)
(bad)
push
and
jle
cmp
movs
loope
jo
xlat
sahf
and
dec
sahf
add
leave
popf
nop
(bad)
call
mov
mov
and
dec
aaa
bound
xchg
cmp
(bad)
(bad)
(bad)
call
fdiv
ins
ret
fadd
scas
mov
and
add
movs
gs
cli
xchg
outs
xchg
(bad)
(bad)
fidivr
and
cmp
cli
out
pop
ja
push
push
sbb
add
(bad)
inc
jnp
iret
sub
das
repz
push
pop
and
(bad)
(bad)
mov
sahf
adc
inc
stos
push
cmps
pop
add
mov
std
cs
loop
fisub
adc
(bad)
or
dec
mov
push
cld
ds
rcr
fstp
fmul
and
cmc
scas
or
mov
mov
leave
xchg
(bad)
(bad)
clc
sbb
je
and
popf
pop
lods
pop
jnp
xor
es
icebp
adc
and
jmp
ficomp
xchg
cmp
xchg
sub
pusha
dec
enter
(bad)
(bad)
mov
mov
out
add
es
enter
mov
cmc
(bad)
(bad)
call
movs
jb
popa
or
jge
les
xor
jno
add
je
mov
pop
fild
(bad)
mov
test
pop
popf
ja
nop
inc
popf
adc
clc
pop
icebp
and
pcmpgtb
xor
jo
or
add
mov
jmp
inc
std
dec
or
ins
inc
out
cmp
jno
adc
xchg
dec
fiadd
(bad)
(bad)
(bad)
push
(bad)
enterw
mov
or
xor
sahf
inc
aad
dec
(bad)
in
(bad)
mov
jmp
mov
sbb
xor
mov
jecxz
sub
push
sub
fwait
mov
pop
cmovae
adc
(bad)
(bad)
(bad)
call
into
aad
pop
rcr
in
mov
ja
pop
adc
test
jne
std
sub
mov
(bad)
(bad)
jns
add
inc
aas
repnz
xor
movs
and
test
cmovl
fild
dec
test
in
jno
sar
jmp
or
sbb
fwait
and
jl
neg
jae
mov
sti
mov
fwait
push
sub
pop
enter
xchg
pop
movs
dec
fmul
(bad)
(bad)
(bad)
sbb
xor
inc
add
call
jp
addr16
(bad)
(bad)
push
push
fisttp
outs
loope
out
ins
ret
xchg
outs
and
pop
inc
rcl
inc
ins
(bad)
(bad)
out
cli
jne
mov
pop
sub
sahf
cmp
jp
xor
gs
and
push
dec
sar
js
int
pop
fdiv
pop
sub
xchg
sar
js
lods
(bad)
xlat
bound
popf
jne
pop
and
(bad)
les
nop
out
daa
cmp
inc
ins
cmp
and
jmp
rcl
xor
mov
fst
daa
loope
pop
adc
(bad)
(bad)
jmp
xchg
sahf
fcompp
lea
pop
ja
nop
shl
xor
mov
pushf
stos
loop
mov
test
jge
(bad)
(bad)
push
xor
fnstcw
les
mov
in
ds
sub
xor
shl
scas
retf
ja
(bad)
(bad)
fcom
imul
popf
pop
inc
or
std
dec
pop
or
(bad)
or
(bad)
jg
(bad)
cmp
(bad)
sbb
dec
lahf
fld
add
adc
xchg
(bad)
(bad)
(bad)
jmp
xchg
jle
inc
stos
in
repnz
jge
lds
repnz
xchg
popf
jge
pop
inc
(bad)
(bad)
(bad)
in
mov
xchg
outs
or
int
xchg
imul
mov
cmc
js
loopne
hlt
sub
adc
fs
(bad)
(bad)
inc
mov
mov
aam
jb
xchg
pop
add
repnz
icebp
pop
inc
(bad)
mov
pop
push
cmp
cmp
ins
sar
or
push
stos
cli
mov
jnp
lock
clc
(bad)
(bad)
(bad)
(bad)
in
daa
mov
and
iret
add
xlat
pop
or
dec
into
push
and
fisub
rcl
xchg
cmp
and
je
xchg
sub
add
or
(bad)
inc
mov
mov
mov
and
(bad)
(bad)
dec
xchg
test
cmps
and
(bad)
aas
sbb
mov
stc
sbb
call
scas
inc
xchg
leave
inc
iret
adc
not
pusha
sti
sub
(bad)
(bad)
(bad)
aas
cdq
and
mov
jmp
sub
ficom
mov
dec
and
iret
jecxz
jmp
push
mov
int3
in
int
call
movs
fwait
(bad)
(bad)
(bad)
mov
cmp
(bad)
jb
mov
sbb
loope
pop
adc
cmp
push
rcl
pop
popf
call
pop
pop
adc
add
jbe
or
imul
retf
es
in
arpl
adc
cmp
pop
call
sbb
adc
daa
inc
pop
cli
outs
inc
mov
cli
in
lods
mov
jmp
aas
xchg
mov
(bad)
call
adc
push
loope
xchg
pop
adc
xchg
pop
test
pop
out
jecxz
ret
outs
dec
call
push
jg
or
addr16
sbb
dec
je
(bad)
(bad)
call
sbb
mov
pop
adc
add
popa
daa
cmp
sbb
cmp
mov
cmc
jmp
push
and
fmul
sbb
jmp
outs
pushf
jecxz
in
mov
jp
adc
(bad)
(bad)
(bad)
mov
bound
js
in
inc
inc
mov
xchg
stos
xchg
jns
cs
movs
xor
or
js
mov
cmc
xchg
sbb
lea
xchg
add
xor
stos
mov
add
mov
jmp
xchg
push
push
popa
das
movs
xchg
xor
(bad)
retf
mov
repz
xor
xchg
ins
(bad)
nop
bound
out
xor
adc
(bad)
(bad)
(bad)
push
(bad)
lahf
cmp
enter
sub
or
in
gs
fisubr
clc
dec
jne
mov
pop
loopne
push
and
jae
sar
lock
xor
inc
xlat
mov
fs
(bad)
(bad)
jmp
dec
mov
jns
arpl
xchg
inc
adc
es
js
pop
dec
add
(bad)
fist
mov
lahf
test
sbb
pop
or
int
scas
pop
mov
dec
out
retf
call
lods
sbb
mov
mov
pop
mov
or
movs
cmc
aaa
gs
into
jp
(bad)
push
jl
mov
into
dec
pop
or
sub
jl
ret
jmp
sub
inc
pop
adc
adc
xor
jl
rol
(bad)
jmp
push
bound
pop
je
mov
jmp
lods
dec
(bad)
inc
sub
mov
mov
add
(bad)
pop
adc
mov
(bad)
dec
xchg
sub
pop
sbb
stos
outs
pop
xchg
adc
mov
or
(bad)
mov
clc
cmc
pop
push
push
fwait
stos
imul
inc
mov
fucomip
int
mov
(bad)
dec
(bad)
(bad)
(bad)
dec
out
xchg
push
mov
xor
sbb
sahf
bound
add
xor
mov
cmp
jle
stc
and
xlat
in
jge
cmp
push
aaa
xchg
bound
sub
imul
(bad)
(bad)
(bad)
inc
in
jno
pop
mov
xor
jl
iret
mov
jns
xchg
out
ja
cli
push
std
retf
frstor
cwde
dec
loopne
jmp
call
or
aad
inc
rol
cmp
out
push
imul
(bad)
aas
mov
jg
(bad)
call
or
xchg
ins
mov
dec
jbe
outs
pop
inc
cmp
sbb
push
add
cmp
mov
inc
fcomp
bound
mov
call
push
ins
add
xchg
es
(bad)
(bad)
call
xchg
dec
dec
popf
fs
sbb
or
sbb
add
loopne
(bad)
(bad)
push
pop
or
lods
call
xchg
dec
fadd
or
cld
pop
movs
ss
(bad)
(bad)
dec
cmps
sbb
mov
imul
inc
and
ret
iret
mov
popf
jo
pop
lea
inc
pop
ds
icebp
mov
xchg
loope
xchg
lahf
lods
int
ret
jmp
(bad)
(bad)
inc
stc
inc
(bad)
(bad)
cmp
in
es
iretw
cmp
jg
push
retf
xchg
xchg
addr16
outs
fs
fst
(bad)
dec
retf
out
in
js
pop
inc
lods
fidiv
retf
arpl
daa
shl
mov
mov
mov
stos
add
pop
(bad)
(bad)
fisubr
mov
ss
jno
xor
retf
mov
(bad)
jle
es
cmp
mov
push
xlat
mov
mov
(bad)
mov
dec
push
cmpps
pop
sbb
and
pop
cdq
aam
sbb
push
mov
leave
pop
mov
not
mov
into
(bad)
pop
stos
fiadd
in
push
js
clc
jmp
stos
sbb
fdiv
repz
(bad)
(bad)
jmp
pop
lea
stc
clc
push
jae
mov
xor
add
mov
push
fist
fadd
mov
neg
mov
aad
and
test
movs
jmp
jbe
int
call
inc
lds
int
fwait
sti
call
(bad)
(bad)
(bad)
inc
scas
xchg
hlt
add
and
push
inc
in
cmp
sar
(bad)
jmp
jns
outs
inc
mov
js
or
cs
xchg
int3
mov
pop
cmp
(bad)
(bad)
(bad)
jg
mov
cmp
jno
not
ficomp
push
and
add
and
adc
pop
retf
mov
(bad)
in
not
adc
shl
fadd
cmc
in
pop
shl
mov
ret
(bad)
(bad)
(bad)
push
xchg
rol
and
inc
or
adc
cmps
mov
cli
movs
jmp
pop
xor
(bad)
(bad)
inc
out
push
mov
xor
in
mov
data16
dec
icebp
mov
add
mov
jmp
clc
movs
xor
pop
call
gs
cmp
jmp
add
cmp
fst
sar
or
bound
and
loop
(bad)
(bad)
jmp
xchg
fdivr
aad
or
shr
in
or
retf
ds
mov
idiv
jmp
mov
mov
adc
pop
out
(bad)
(bad)
std
cmc
(bad)
(bad)
jmp
pusha
jle
jl
cmp
mov
movs
lds
(bad)
jge
dec
ret
sbb
jno
(bad)
call
movs
and
enter
leave
adc
pop
lods
xchg
outs
push
lods
sbb
(bad)
(bad)
(bad)
push
les
cmps
or
shr
call
rcl
(bad)
inc
lahf
lods
push
jecxz
push
push
hlt
enter
gs
pop
mov
mov
gs
(bad)
(bad)
(bad)
call
movs
add
cs
mov
nop
or
cld
enter
cwde
es
mov
sbb
and
(bad)
(bad)
(bad)
dec
pop
mov
scas
add
push
dec
cmp
push
jle
pusha
mov
(bad)
(bad)
(bad)
jmp
push
inc
sbb
inc
les
cmps
inc
mov
sti
add
ror
enter
adc
(bad)
(bad)
(bad)
(bad)
cmp
lea
pop
mov
mov
mov
int3
dec
imul
rcr
scas
adc
(bad)
(bad)
(bad)
jmp
xor
gs
mov
movs
(bad)
out
xor
push
iret
pushf
ds
pushf
dec
push
cmp
(bad)
(bad)
ds
pushf
and
cmp
lods
add
mov
outs
(bad)
call
sbb
mov
leave
jge
test
and
call
(bad)
into
push
fstp
xor
cmp
sbb
and
pusha
(bad)
(bad)
(bad)
dec
and
ss
adc
in
push
cmp
sar
or
mov
adc
in
(bad)
(bad)
(bad)
fadd
(bad)
(bad)
fld
ss
sub
and
loopne
pop
sbb
jo
bound
call
gs
add
es
mov
(bad)
dec
call
loopne
pop
call
in
cs
fnstenv
cmp
(bad)
mov
(bad)
jo
mov
fist
les
push
outs
cmp
mov
(bad)
dec
movs
pusha
dec
jl
mov
(bad)
or
pop
iret
(bad)
enter
dec
sub
pop
add
(bad)
dec
add
fs
xor
inc
lock
cmp
inc
add
aam
test
or
lock
(bad)
aam
jge
out
sahf
xor
fisttp
test
push
rcl
sbb
movs
mov
mov
(bad)
(bad)
(bad)
dec
fs
cmps
dec
xchg
lock
mov
or
retf
les
fisubr
dec
fucompp
(bad)
(bad)
jmp
mov
call
adc
clc
retf
add
push
xchg
cmps
sahf
(bad)
jae
out
dec
(bad)
dec
push
pop
inc
add
inc
cwde
and
ds
mov
dec
adc
mov
push
(bad)
(bad)
call
test
dec
push
inc
add
xor
mov
push
je
xor
movs
xchg
cmp
stos
mov
(bad)
jmp
ret
xor
or
mov
ins
jns
es
or
mov
and
out
int
lods
mov
lahf
hlt
and
and
xchg
aad
dec
movs
add
(bad)
(bad)
call
mov
cld
pop
lods
test
mov
repnz
and
dec
out
xor
or
cld
icebp
mov
xlat
jg
adc
mov
pop
push
cmp
sbb
add
fwait
xor
jg
(bad)
jg
push
inc
mov
clc
lds
lods
mov
aas
or
xor
xor
(bad)
daa
mov
inc
add
stc
retf
add
ins
ja
sbb
loopne
(bad)
ins
jne
sti
fcomp
lock
retf
sub
or
(bad)
(bad)
(bad)
call
dec
and
imul
and
add
pop
add
(bad)
add
(bad)
(bad)
(bad)
dec
fst
rol
sar
inc
stos
push
lock
mov
inc
adc
(bad)
jmp
les
or
aam
pop
xchg
jecxz
test
bound
(bad)
(bad)
push
(bad)
cmc
int
int
dec
or
sti
jmp
inc
and
aaa
fdivr
call
dec
sub
push
sub
push
mov
shl
call
sub
and
add
mov
icebp
ror
mov
lods
inc
and
ins
js
stc
sub
mov
cmp
out
cld
(bad)
(bad)
inc
outs
jno
sub
add
dec
pop
scas
jbe
addr16
jno
ds
mov
inc
loop
mov
outs
ss
ins
cmp
adc
(bad)
(bad)
call
sub
mov
mov
leave
cmc
push
xchg
ret
jnp
test
xchg
(bad)
xor
(bad)
(bad)
(bad)
(bad)
jp
rol
mov
sbb
rcr
pop
mov
cmps
cmp
in
pop
leave
jmp
retf
cmp
(bad)
cld
mov
jmp
movs
arpl
dec
in
mov
inc
sahf
inc
ja
mov
xchg
inc
sar
sbb
jl
push
fwait
test
pop
rcl
popf
sar
fst
or
dec
pusha
dec
cs
pop
dec
ret
imul
push
mov
and
cwde
int
fdiv
in
sub
xor
jne
push
fs
pop
loopne
mov
test
das
inc
push
mov
push
rcl
inc
cmp
jp
cmp
ins
inc
pop
out
outs
dec
ins
jae
cwde
ins
ret
cs
and
push
rcl
or
dec
call
cdq
inc
outs
stc
lahf
into
out
xchg
pop
pop
pop
xchg
pop
push
mov
jno
into
out
pop
sti
mov
inc
jmp
add
les
pop
mov
push
cmps
test
xor
mov
lahf
cmp
pop
icebp
dec
fidiv
fldenv
dec
es
mov
adc
mov
(bad)
dec
loopne
jno
mov
dec
stc
cld
push
je
enter
cmp
add
jg
(bad)
mov
dec
and
add
xlat
and
test
pop
cmc
aam
(bad)
(bad)
jmp
stos
call
sub
and
jns
ds
push
inc
das
jnp
(bad)
(bad)
(bad)
inc
addr16
pusha
push
test
or
gs
scas
popf
mov
(bad)
(bad)
(bad)
(bad)
inc
mov
out
push
xor
mov
fisub
das
mov
gs
cmp
daa
xchg
or
inc
jecxz
jns
sbb
(bad)
xchg
dec
jg
cmp
cmp
test
sbb
xchg
mov
sbb
(bad)
cmp
pop
call
out
pop
loopne
lods
jmp
cs
call
btr
sti
push
rcl
xlat
pop
(bad)
(bad)
(bad)
push
std
mov
out
and
aam
sbb
xor
arpl
outs
sbb
sbb
dec
add
shr
push
adc
mov
fisttp
test
ja
retf
loopne
retf
jl
call
cld
lods
mov
test
outs
add
sbb
cmp
(bad)
(bad)
mov
cmp
lock
cwde
push
ficom
jg
dec
popf
add
sbb
jmp
inc
or
cwde
push
mov
sub
inc
push
scas
and
repz
add
cmp
jl
xor
sub
mov
out
mov
(bad)
(bad)
(bad)
jmp
sbb
and
jp
adc
fsubr
mov
mov
int
out
(bad)
jmp
loope
sar
mov
stc
in
cmps
enter
aas
(bad)
(bad)
(bad)
jmp
mov
and
dec
mov
ret
and
xchg
push
out
(bad)
xlat
pop
inc
popf
(bad)
pusha
(bad)
dec
add
xor
mov
ficomp
mov
(bad)
(bad)
(bad)
jmp
pop
xor
mov
movs
jle
mov
push
or
pop
mov
in
ja
xor
jae
(bad)
(bad)
dec
(bad)
or
das
push
into
imul
mov
dec
lock
dec
add
icebp
gs
push
movs
std
inc
dec
mov
sub
bound
call
and
push
stc
les
outs
scas
retf
(bad)
dec
lock
cld
mov
out
fnstenv
sbb
pushf
cdq
jnp
(bad)
jmp
ss
sub
cmp
pop
jp
dec
mov
xchg
(bad)
dec
idiv
push
inc
jl
pop
(bad)
add
call
add
mov
movs
mov
aas
cld
xor
push
mov
add
arpl
pop
gs
dec
fldenv
mov
inc
mov
in
sbb
inc
or
imul
stos
(bad)
(bad)
jmp
mov
xchg
daa
fsubr
movs
adc
push
pop
stos
(bad)
std
in
cli
dec
les
dec
dec
out
jl
mov
adc
inc
push
push
sbb
je
xor
je
lahf
test
mov
in
dec
call
ret
(bad)
push
push
clc
call
stos
pop
lea
cmps
cmp
outs
pop
dec
adc
(bad)
(bad)
inc
stos
sbb
pop
pop
mov
mov
or
fwait
cmp
push
xchg
mov
(bad)
(bad)
(bad)
call
jo
mov
repnz
mul
sqrtps
int
cwde
sbb
fsubr
dec
cmps
sar
fcomip
jmp
test
mov
mov
mov
xchg
les
cmps
shr
lock
(bad)
(bad)
(bad)
fsub
and
out
adc
rcl
(bad)
mov
in
and
push
outs
and
(bad)
call
mov
test
outs
and
jl
push
dec
test
pop
lds
inc
mov
inc
popf
lock
jl
leave
cs
cmps
scas
xchg
(bad)
js
lods
(bad)
leave
int3
mov
(bad)
call
mov
push
or
pop
adc
jecxz
imul
lea
cmp
adc
(bad)
out
adc
cmps
cwde
xor
pop
icebp
jo
and
pop
loope
(bad)
jno
(bad)
(bad)
(bad)
dec
and
dec
ins
das
mov
fwait
xor
fwait
and
mov
xor
push
(bad)
(bad)
(bad)
(bad)
jns
pop
pop
cmp
daa
mov
cli
and
std
add
lods
aaa
push
inc
xchg
clc
xor
retf
add
inc
sysenter
scas
add
push
pop
sub
std
(bad)
(bad)
(bad)
jmp
push
add
pop
cwde
test
push
sub
jmp
cld
mov
mov
(bad)
jg
and
rol
mov
int3
add
push
cmps
(bad)
jg
jne
jp
jb
push
movs
fisub
stos
pop
xchg
lea
call
je
and
fwait
(bad)
jmp
or
push
add
lods
dec
ds
add
xor
(bad)
(bad)
(bad)
ficomp
or
mov
into
scas
hlt
nop
adc
ret
jo
inc
inc
xchg
std
ja
rcr
aaa
outs
and
ficom
pop
sbb
mov
(bad)
inc
dec
sar
ss
int3
fiadd
jl
push
and
jg
push
mov
js
in
xlat
dec
stc
retf
push
bound
push
jmp
(bad)
call
hlt
mov
ja
push
xchg
xchg
cdq
mov
(bad)
(bad)
out
jp
cmp
int3
jp
and
mov
lahf
aas
repnz
cld
(bad)
inc
(bad)
scas
stos
(bad)
outs
xchg
and
out
cdq
dec
outs
push
push
imul
popa
mov
or
loop
gs
scas
push
mov
pushf
movs
aam
dec
xor
jmp
mov
inc
jg
aam
lds
mov
loopne
loopne
(bad)
(bad)
(bad)
mov
and
loope
pop
xchg
bound
jle
call
loope
inc
rcr
add
js
sbb
nop
dec
or
nop
mov
add
(bad)
mov
cmp
or
imul
jecxz
(bad)
jmp
sub
jae
sub
sbb
mov
mov
(bad)
push
pushf
xchg
xor
mov
aas
push
imul
xor
push
lahf
xor
test
(bad)
and
(bad)
(bad)
jmp
mov
not
push
jb
dec
lods
inc
pop
jne
movs
sti
out
mov
mov
xchg
sub
(bad)
(bad)
(bad)
out
inc
movs
push
in
pop
repnz
gs
dec
cmp
sbb
mov
mov
(bad)
dec
hlt
into
xchg
or
test
push
iret
ror
mov
(bad)
(bad)
push
mov
dec
sub
movs
mov
repz
jmp
(bad)
push
stc
mov
adc
test
imul
sbb
push
xchg
out
dec
adc
loope
leave
dec
ja
stc
js
sub
add
sti
sub
add
xchg
test
push
sub
jo
inc
mov
daa
and
pop
jbe
daa
jl
push
push
enter
mov
dec
retf
mov
(bad)
cmp
add
adc
adc
push
retf
lods
shl
fadd
xor
(bad)
(bad)
(bad)
dec
loopne
mov
jg
mov
pop
adc
arpl
call
mov
xlat
mov
jmp
fmul
out
jne
mov
dec
sub
cmp
xchg
xor
(bad)
(bad)
mov
and
gs
aam
lds
sbb
loope
push
lods
dec
sbb
dec
push
mov
jo
jle
add
push
hlt
xchg
(bad)
(bad)
(bad)
inc
repnz
pop
mov
mov
mov
test
clc
out
xchg
dec
cmc
das
(bad)
xlat
mov
mov
movs
sahf
gs
mov
sbb
cmp
fadd
(bad)
(bad)
push
mov
hlt
and
fbstp
cmc
mov
rcr
(bad)
(bad)
(bad)
jg
inc
inc
cli
js
dec
jp
cmp
mov
jno
xor
outs
aam
aad
out
cmp
(bad)
(bad)
(bad)
dec
in
dec
sbb
pop
icebp
mov
pushf
mov
ss
clc
jnp
int
xor
jns
(bad)
(bad)
inc
loopne
xor
dec
and
mov
xchg
cmp
mul
stos
jmp
and
call
int3
(bad)
cmps
test
add
(bad)
call
arpl
jae
pop
fld
jmp
xchg
sbb
dec
sbb
pop
icebp
sbb
movs
shr
mov
mov
aas
(bad)
mov
rcr
(bad)
(bad)
jmp
sub
cmp
xchg
mov
pushf
pop
dec
shl
add
xor
xor
add
(bad)
(bad)
(bad)
jmp
js
dec
or
mov
and
stos
sbb
sbb
adc
push
in
(bad)
cmp
sub
xor
inc
sub
nop
aas
jae
lds
fdivr
push
iret
add
mov
(bad)
jmp
fsubr
sub
ins
mov
sbb
cmc
lods
ret
(bad)
dec
lock
dec
jbe
cmp
cmp
mov
adc
imul
(bad)
push
jmp
test
cmc
and
sub
mov
mov
(bad)
(bad)
(bad)
(bad)
push
rol
rcr
or
mov
and
xor
daa
jne
popa
loopne
inc
loopne
in
in
jp
pop
out
or
pop
mov
(bad)
jmp
jb
mov
sub
shl
mov
lock
mov
xchg
(bad)
(bad)
(bad)
jmp
xor
mov
add
cmp
push
outs
(bad)
pushf
cwde
bnd
(bad)
call
xor
push
retf
jl
lods
sub
mov
jne
bound
popf
ret
cs
sbb
sar
sbb
cs
jle
iret
add
int
sub
add
(bad)
(bad)
out
mov
push
fwait
imul
sub
fimul
pop
in
popf
mov
in
(bad)
push
jp
jecxz
jecxz
mov
mov
movs
ja
mov
into
pushf
loop
(bad)
call
out
mov
jecxz
cmp
arpl
mov
imul
xchg
and
imul
je
retf
leave
cmp
shr
lods
sbb
adc
add
xor
(bad)
(bad)
(bad)
call
mov
dec
cld
nop
pop
push
jb
sahf
popf
addr16
sub
jns
lahf
sub
pop
ret
dec
mov
or
shl
mov
(bad)
xchg
rep
int
dec
(bad)
(bad)
(bad)
(bad)
call
mov
mov
push
or
(bad)
jl
push
sub
push
cmp
sub
sbb
clc
fstp
pop
movs
or
call
leave
rcl
mov
cli
(bad)
(bad)
jg
(bad)
clc
jmp
cwde
and
retf
in
fisub
jg
(bad)
jmp
jo
sbb
mov
cwde
push
jno
mov
in
rcl
push
jno
dec
mov
test
(bad)
jmp
aaa
xor
imul
jb
das
xor
add
(bad)
jmp
jecxz
imul
and
sbb
daa
pop
sub
mov
or
call
mov
xor
or
mov
call
xor
bound
call
jg
mov
cli
jb
jmp
jmp
adc
and
scas
popa
dec
mov
sahf
mov
repz
(bad)
(bad)
jmp
ins
sub
pop
out
inc
not
sbb
mov
jmp
mov
clc
(bad)
call
(bad)
loopne
push
adc
(bad)
pop
stos
dec
test
or
lock
cmp
sar
jmp
fadd
pop
pop
shl
xor
sub
lds
repnz
loopne
loopne
xchg
mov
pop
xchg
(bad)
cmps
lea
adc
popa
in
std
(bad)
(bad)
(bad)
jmp
jle
mov
cwde
mov
sahf
cmps
lods
jp
sub
jae
or
dec
sbb
push
in
or
out
cli
add
jg
push
aam
iret
sbb
retf
(bad)
(bad)
push
xor
sti
aad
ret
sub
or
add
popa
icebp
mov
pop
or
mov
sbb
daa
sti
(bad)
call
xchg
inc
daa
dec
inc
lds
out
(bad)
jmp
push
pop
imul
mov
inc
xchg
(bad)
jmp
push
cmc
jecxz
inc
loop
xchg
imul
push
inc
data16
(bad)
(bad)
fcomip
xor
xor
aad
adc
std
ss
or
test
sbb
repnz
lock
push
aad
pop
push
mov
inc
pop
stos
(bad)
dec
mov
clc
test
cmp
(bad)
lods
sar
(bad)
inc
jmp
ficomp
push
and
in
cmp
idiv
dec
fcom
aaa
pop
fbstp
cld
sbb
(bad)
xor
add
test
(bad)
inc
retf
cmp
shl
ja
sti
jne
fld
xchg
dec
or
arpl
adc
xor
mov
mov
jl
push
stos
inc
cld
inc
mov
jbe
in
enter
(bad)
push
(bad)
xchg
popf
push
outs
int3
mov
pop
sub
ds
retf
or
push
pop
(bad)
(bad)
(bad)
cmp
inc
mov
mov
dec
and
cld
cld
jne
sbb
repnz
mov
push
mov
aas
sub
jbe
jae
pushf
or
cmc
fs
sbb
jbe
(bad)
(bad)
(bad)
sbb
pop
push
pop
dec
or
or
imul
ins
mov
or
fcomip
(bad)
jmp
mov
jns
out
out
xchg
mov
cmp
fdivr
stos
cmp
(bad)
(bad)
jmp
dec
pop
mov
outs
push
(bad)
push
xor
std
mov
xor
pop
dec
jmp
cmp
jmp
rol
xchg
push
(bad)
(bad)
(bad)
push
or
outs
inc
push
adc
dec
or
rcl
(bad)
repz
pop
add
ins
cmp
(bad)
(bad)
(bad)
jmp
loopne
mov
cld
cmp
movs
xchg
inc
cmps
push
sbb
mov
(bad)
(bad)
(bad)
call
push
jbe
add
sbb
outs
pop
(bad)
or
aad
fld
imul
(bad)
dec
pop
js
test
add
in
pop
shl
cmp
and
cdq
fcomip
or
icebp
lods
movs
retf
adc
div
into
cmps
ret
jne
ret
aam
(bad)
(bad)
(bad)
(bad)
call
(bad)
rcr
jg
jno
pop
adc
ja
loop
clc
cs
aam
aad
loope
call
jp
dec
aad
pop
xor
adc
pop
cwde
mov
(bad)
dec
and
lds
sub
cli
push
push
cmp
inc
xor
mov
dec
inc
(bad)
(bad)
inc
ds
pop
nop
jmp
sbb
add
and
std
jb
pop
je
fcomp
rcl
cli
push
push
inc
(bad)
jp
call
cwde
adc
(bad)
call
rcl
add
mov
stos
scas
sub
dec
retf
mov
movs
in
add
(bad)
(bad)
(bad)
jmp
sbb
xor
retf
mov
and
sti
lahf
cwde
or
sbb
push
lahf
adc
(bad)
(bad)
jmp
fdivp
dec
test
fidiv
fsubr
xlat
popf
stc
add
push
imul
(bad)
(bad)
push
cmc
push
mov
jno
sti
mov
inc
jno
dec
enter
xor
sbb
stos
(bad)
inc
pop
out
cld
movs
and
and
push
loopne
cmps
aas
loop
fstp
mov
clc
pop
loopne
push
dec
push
xchg
call
jnp
sbb
mov
into
dec
ret
scas
(bad)
(bad)
inc
pop
mov
stos
jnp
jno
(bad)
cwde
(bad)
enter
xchg
jmp
cmps
inc
mov
in
rcr
call
div
popa
ror
(bad)
call
and
out
rcl
mov
(bad)
icebp
ja
push
sub
cs
outs
clc
call
mov
aaa
cmp
loopne
ret
rcl
nop
push
loopne
cdq
or
(bad)
jmp
movs
inc
dec
mov
pop
cmp
mov
add
and
sahf
sahf
scas
jp
jmp
out
add
push
and
mov
or
(bad)
add
push
jae
aam
std
(bad)
(bad)
inc
popf
push
dec
sar
lahf
hlt
pusha
jg
sub
jmp
and
leave
inc
(bad)
(bad)
push
int3
shl
repz
fs
aam
cmps
into
mov
lea
lods
sub
outs
push
aaa
pop
stos
(bad)
arpl
ds
mov
push
inc
call
(bad)
(bad)
(bad)
inc
mov
pop
mov
mov
pop
push
fisub
lds
mov
frstor
jmp
jecxz
xchg
test
adc
rol
xchg
out
xchg
test
adc
fwait
cmc
in
sar
push
sqrtps
add
(bad)
retf
dec
fld
push
jp
(bad)
dec
dec
pop
dec
pop
add
pusha
ins
cmp
ja
int
lods
sub
and
mov
call
aam
test
rcr
(bad)
sbb
repz
mov
sbb
adc
mov
(bad)
(bad)
jmp
push
mov
pop
sbb
ror
jmp
lods
fcom
add
pop
push
fadd
dec
push
jmp
xor
xchg
icebp
mov
rcr
(bad)
(bad)
jg
add
xor
mov
mov
jmp
xor
shl
or
stos
(bad)
push
sti
loop
inc
cmps
shl
add
cmp
hlt
dec
and
jb
ja
iret
mov
cmp
jnp
sar
cmc
sbb
mov
mov
add
(bad)
inc
fdivr
push
cmp
aas
mov
rol
inc
(bad)
(bad)
call
xchg
dec
xchg
in
aad
retf
stos
clts
fld
test
sub
push
lods
cbw
imul
fs
inc
(bad)
fcomip
jmp
loope
cmp
cld
sub
loop
inc
sti
jl
inc
stc
xlat
sub
pop
scas
push
jg
test
mov
mov
in
sbb
lock
cmp
gs
(bad)
(bad)
push
lods
mov
push
das
xchg
repz
ror
js
xor
iret
aas
movs
aad
into
das
pop
pop
pop
(bad)
jg
pop
mov
push
or
aas
push
jp
push
jge
xchg
lods
fmul
(bad)
(bad)
push
(bad)
in
je
je
idiv
ins
dec
push
ins
loop
lahf
and
test
jp
xor
push
lods
fidivr
push
push
leave
js
call
or
retf
sbb
mov
xchg
cmps
out
jg
sti
mov
or
(bad)
jmp
pop
xchg
or
inc
adc
fs
imul
addr16
fsubr
aad
(bad)
push
mov
cmp
out
gs
sbb
sar
(bad)
(bad)
inc
dec
sahf
and
xor
popa
(bad)
cmp
sub
sbb
jmp
out
std
dec
fwait
stc
cld
(bad)
(bad)
jmp
movs
inc
imul
data16
push
mov
cmc
clc
mov
retf
push
cmc
mov
push
fsubp
(bad)
(bad)
push
loop
xchg
sti
lods
lods
faddp
mov
int3
jmp
cli
pushf
inc
mov
jb
(bad)
(bad)
(bad)
call
test
pop
ss
test
rcl
mov
pushf
add
add
jmp
clc
loop
jno
inc
fisub
xor
xlat
test
pop
fwait
ret
in
push
push
loopne
imul
leave
bnd
mov
add
cmp
ja
cmps
cmp
dec
mov
fild
lds
vprotb
inc
rol
fidiv
lods
mov
(bad)
dec
mov
jmp
icebp
push
out
rcr
or
(bad)
(bad)
mov
(bad)
aas
les
jge
pop
add
adc
push
jns
xchg
or
jle
(bad)
(bad)
dec
repnz
cwde
pop
loope
mov
dec
cmps
xchg
clc
mov
movs
push
pop
ja
sbb
loopne
mov
push
aam
sbb
xchg
lea
xor
dec
jmp
mov
(bad)
call
jbe
cmovno
mov
movs
mov
dec
sub
(bad)
push
push
dec
or
sti
fadd
adc
rcl
(bad)
(bad)
fild
mov
into
push
mov
mov
ins
or
outs
(bad)
(bad)
(bad)
jmp
and
sti
out
ret
(bad)
dec
and
ins
cld
test
adc
(bad)
(bad)
dec
push
mov
cdq
shl
mov
sub
cli
inc
dec
mov
adc
icebp
ds
push
scas
test
ins
scas
fmul
push
and
and
call
add
pop
cdq
inc
cmp
jne
(bad)
(bad)
(bad)
jmp
shr
inc
push
cmp
and
inc
rol
aam
pop
out
mov
daa
std
aaa
and
or
(bad)
(bad)
(bad)
call
leave
or
xor
int
mov
movs
ins
pop
sti
mov
inc
sub
(bad)
(bad)
(bad)
jmp
lods
fild
push
cmp
leave
sub
sbb
(bad)
fbstp
and
add
adc
outs
push
clc
(bad)
es
repz
and
call
push
mov
scas
(bad)
lods
fisttp
es
mov
fisttp
pusha
adc
clc
fdivr
xlat
mov
add
je
(bad)
jmp
(bad)
sub
test
jae
jb
(bad)
(bad)
call
adc
cld
lea
or
leave
mov
(bad)
mov
(bad)
pop
(bad)
retf
pop
popf
pop
adc
xor
lea
js
loop
scas
clc
pop
int
adc
test
or
dec
adc
add
sbb
xchg
(bad)
mov
aas
mov
imul
jb
or
js
push
mov
(bad)
jg
jmp
or
mov
jg
push
int3
cmp
iret
aam
jnp
ins
fst
mov
push
push
mov
or
mov
pop
mov
(bad)
(bad)
jg
fisubr
outs
rcr
mov
mov
mov
pushf
cmp
(bad)
(bad)
(bad)
call
mov
lock
or
xor
pop
push
sub
cmp
fmul
cmp
xchg
and
sub
loopne
(bad)
(bad)
(bad)
jmp
in
mov
hlt
imul
xchg
pop
sbb
push
or
and
cmp
call
xchg
mov
mov
movs
sub
bound
lods
xlat
jmp
retf
(bad)
(bad)
(bad)
call
cmp
mov
cwde
les
jmp
out
xor
push
push
and
ss
(bad)
(bad)
jge
adc
lods
fwait
xchg
in
sbb
inc
outs
push
pop
rcr
jnp
bound
jecxz
out
sub
cmp
ins
pop
dec
nop
add
mov
cli
jmp
and
xchg
or
pop
out
addr16
dec
loopne
jmp
outs
xor
sbb
push
add
clc
push
inc
lds
jg
(bad)
pop
fsub
(bad)
call
push
(bad)
push
sbb
push
pop
jle
shl
adc
jg
xchg
xchg
jbe
mov
mov
ins
out
dec
sti
jg
imul
add
call
outs
xlat
cmp
(bad)
fcomip
call
add
ret
push
pusha
pop
out
xchg
hlt
jmp
int
pop
cld
call
adc
pushf
repnz
cld
pop
cmps
sbb
jecxz
xchg
mov
sti
cwde
(bad)
(bad)
(bad)
inc
call
mov
sar
mov
lahf
inc
dec
xchg
call
sub
psubw
adc
pop
inc
push
jo
jb
pop
shl
dec
xchg
sub
imul
jmp
(bad)
(bad)
(bad)
jmp
hlt
xor
retf
add
in
(bad)
pop
popf
pop
lea
pop
fidiv
pop
add
shl
fcmovu
stc
(bad)
retf
pop
sbb
pop
cmc
jmp
pop
xchg
cmp
inc
dec
mov
addr16
xor
outs
neg
aas
sub
jns
jecxz
mov
fwait
les
pop
ret
loop
cmps
pusha
arpl
mov
push
int
les
popa
jmp
inc
pop
ja
inc
sub
ja
das
mov
cwde
loopne
mov
loopne
(bad)
call
or
mov
mov
fimul
mov
(bad)
push
inc
dec
xlat
jnp
bound
cli
add
add
enter
inc
xchg
xlat
dec
mov
cwde
add
pop
test
sbb
fyl2x
loope
inc
add
(bad)
test
ds
(bad)
(bad)
(bad)
std
push
jnp
out
pop
cmp
and
cli
aam
sub
(bad)
jp
pop
hlt
rol
popa
mov
sar
(bad)
(bad)
inc
leave
ins
and
lds
sbb
jae
mov
das
or
add
mov
inc
push
sti
or
xor
pop
repnz
cmp
xchg
jne
push
in
in
xchg
clc
(bad)
(bad)
jmp
xchg
mov
test
push
dec
mov
jb
xor
xor
jp
push
jmp
popa
cmp
jae
push
out
sti
xchg
jae
mov
ror
or
in
(bad)
mov
xlat
mov
cs
push
push
push
cld
std
and
cmps
mov
(bad)
(bad)
jmp
fidiv
mov
cmp
pop
mov
pusha
sbb
dec
lock
xchg
push
(bad)
and
push
cmp
inc
and
lods
sti
ror
xor
push
and
dec
cmpxchg
stos
mov
cs
iret
sbb
xchg
jnp
nop
(bad)
(bad)
mov
(bad)
and
push
cmps
ret
xor
(bad)
(bad)
mov
out
push
ds
movs
cmp
test
aaa
ss
(bad)
jmp
dec
jecxz
and
pop
clc
adc
rol
jle
and
(bad)
(bad)
dec
not
loope
xchg
pop
mov
retf
sbb
add
adc
clc
push
push
popw
loopne
sbb
call
xor
sub
jno
lods
xchg
test
cmc
(bad)
aad
push
dec
shl
imul
cmc
mov
(bad)
(bad)
call
dec
sub
sub
aad
call
popa
aas
test
or
(bad)
(bad)
mov
mov
lea
sbb
into
out
loope
jg
inc
aam
dec
cmp
outs
pop
(bad)
(bad)
(bad)
dec
dec
popf
mov
mov
and
sub
jae
test
mov
fs
int3
dec
movs
imul
dec
add
mov
shr
fsubr
mov
inc
retf
cli
arpl
pop
jbe
mov
(bad)
(bad)
mov
jge
cmp
jge
cld
ss
or
pop
imul
inc
dec
sub
ja
dec
mul
scas
jmp
pop
(bad)
jg
(bad)
sub
into
ins
rcr
push
pop
push
mov
in
sahf
fwait
into
loopne
adc
(bad)
dec
or
fnstsw
or
lods
lods
inc
mov
mov
test
(bad)
fild
rol
jo
xchg
call
adc
(bad)
push
cld
or
or
mov
xchg
and
cmp
mov
(bad)
(bad)
call
add
movs
inc
bound
iret
ss
hlt
or
hlt
clc
mov
mov
dec
mov
cmp
mov
ret
shr
lods
mov
push
iret
sub
int3
out
mov
(bad)
(bad)
(bad)
(bad)
std
inc
test
jl
fmul
lods
and
dec
sub
sahf
hlt
cld
jne
aad
out
icebp
dec
push
mov
ja
sub
or
out
xor
repnz
sbb
(bad)
popf
adc
(bad)
jbe
std
mov
call
clc
sbb
xor
sub
(bad)
sbb
mov
mov
outs
scas
pop
inc
pop
cwde
adc
mov
(bad)
jg
inc
jge
sbb
nop
adc
mov
dec
pop
push
ss
cmp
(bad)
(bad)
inc
lea
imul
sub
cwde
(bad)
pop
inc
or
shl
add
(bad)
(bad)
jmp
pop
inc
je
xor
out
enter
pop
fwait
add
xlat
xor
(bad)
out
adc
mov
scas
ret
mov
rcr
enter
mov
in
ret
sbb
inc
loop
int3
ds
push
ret
sub
je
lahf
mov
dec
jge
aam
pop
inc
int3
pop
idiv
(bad)
(bad)
dec
fsubr
mov
dec
cmp
jns
aas
(bad)
clc
sbb
add
or
add
mov
inc
fidivr
push
fldenv
lock
es
or
fisub
xchg
inc
xchg
hlt
or
test
(bad)
(bad)
(bad)
jnp
cld
retf
ins
enter
inc
das
pushf
fs
pusha
xchg
push
cld
pop
dec
inc
dec
clc
add
call
mov
pop
ins
mov
mov
dec
inc
pop
loopne
call
rcr
lea
mov
popa
lahf
cmp
mov
jno
ret
dec
mov
cdq
sub
(bad)
dec
(bad)
inc
ret
or
xchg
repnz
push
add
clc
mov
xchg
(bad)
(bad)
(bad)
jmp
cld
mov
adc
int3
jns
mov
scas
aaa
xchg
sub
push
add
sti
movups
(bad)
(bad)
(bad)
inc
xlat
pop
aaa
call
jmp
push
mov
sub
jnp
mov
jmp
push
dec
fld
mov
push
add
add
mov
fisttp
mov
ja
jle
out
sub
cmp
sti
sub
(bad)
(bad)
cmp
pop
sbb
push
cli
pop
hlt
jge
inc
dec
lock
sahf
mov
stc
sub
(bad)
(bad)
push
jb
leave
xlat
add
cmp
inc
out
out
test
repnz
cmp
add
jg
cmp
xchg
in
ins
xor
xor
shl
(bad)
(bad)
jg
inc
mov
out
xchg
pop
movs
in
nop
test
sbb
sub
mov
jge
(bad)
call
shl
push
or
data16
jae
pop
mov
xchg
xor
(bad)
dec
dec
mov
shl
sub
movs
pop
xor
retf
mov
or
(bad)
push
adc
sub
mov
jmp
fucomi
outs
mov
call
jl
cmp
jae
shl
dec
sbb
jbe
inc
mov
jns
pop
test
push
loope
or
ins
adc
test
dec
mov
adc
out
jp
mov
jmp
jnp
jo
mov
jmp
mov
out
iret
vrsqrtps
or
push
call
adc
loopne
fsub
xor
(bad)
(bad)
(bad)
call
das
shr
inc
cld
inc
cmp
and
imul
mov
(bad)
(bad)
fistp
sbb
test
in
sahf
xchg
jmp
push
int
and
jno
arpl
(bad)
(bad)
call
mov
mov
mov
scas
push
xchg
mov
cmps
sub
(bad)
mov
in
xlat
je
lods
jecxz
mov
lock
adc
jg
sbb
push
xchg
xchg
dec
fst
dec
test
adc
(bad)
(bad)
call
out
dec
shr
cmp
mov
nop
sub
cmp
jo
pop
not
retf
outs
cli
(bad)
call
sti
fwait
cli
push
sub
jo
in
cdq
lahf
cmp
add
test
pop
daa
jnp
ins
or
or
sub
push
data16
pop
ds
in
pop
(bad)
(bad)
mov
js
cli
(bad)
scas
xchg
scas
pop
(bad)
shr
ins
lock
mov
lock
fimul
dec
xchg
xlat
cmps
(bad)
(bad)
dec
push
push
pusha
fbstp
ins
push
lock
rcl
jnp
mov
dec
js
(bad)
(bad)
inc
push
stos
adc
and
push
sahf
std
sbb
or
adc
xor
(bad)
(bad)
(bad)
call
push
call
rcl
aam
sub
mov
fldenv
and
fst
ror
or
(bad)
inc
cmp
movaps
push
cmp
stos
adc
(bad)
(bad)
(bad)
cmp
add
mov
(bad)
adc
cmps
jbe
ss
mov
push
loopne
cld
mov
cld
mov
or
ja
fisttp
sbb
enter
sbb
ja
add
mov
lock
push
or
hlt
(bad)
call
jge
daa
adc
jmp
sti
adc
sub
(bad)
fild
retf
jmp
adc
(bad)
call
xchg
aad
fbstp
popa
and
push
add
push
push
in
add
(bad)
(bad)
(bad)
(bad)
aas
xchg
sbb
shr
mov
push
mov
inc
pop
in
sahf
in
arpl
dec
(bad)
call
rol
ss
xor
gs
xlat
push
cmps
movs
mov
imul
add
(bad)
(bad)
(bad)
jge
ret
fist
xchg
dec
cmps
mov
mov
bound
inc
fucom
pop
pop
xor
cmp
mov
int3
mov
out
aas
push
add
lods
mov
(bad)
push
ret
jmp
cmp
mov
int
rcr
js
jmp
dec
inc
out
icebp
pop
and
repnz
fild
and
xchg
cmp
(bad)
(bad)
inc
(bad)
xlat
mov
pop
std
mov
mov
push
adc
stos
pop
mov
fprem
(bad)
(bad)
jmp
clc
outs
leave
(bad)
icebp
fimul
xor
inc
lea
sahf
arpl
jmp
mov
mov
inc
pushf
ins
fstp
mov
je
(bad)
push
mov
jmp
sahf
nop
pusha
xor
ficomp
add
(bad)
(bad)
call
mov
dec
retf
push
neg
outs
inc
push
out
jbe
push
jo
movs
stos
push
clc
dec
add
push
cwde
(bad)
mov
inc
push
mov
sbb
mov
jecxz
fnstsw
nop
fsub
lock
(bad)
call
mov
jae
clc
mov
in
out
xor
and
adc
stos
xor
pop
movs
(bad)
(bad)
mov
(bad)
stc
pop
js
push
cmp
or
push
iret
sahf
xchg
(bad)
dec
mov
(bad)
(bad)
(bad)
(bad)
jp
fsub
mov
inc
sub
rol
or
xchg
push
adc
and
lock
(bad)
(bad)
(bad)
push
lea
mov
outs
not
idiv
lds
xor
in
imul
(bad)
(bad)
(bad)
push
adc
xor
mov
jno
mov
movs
inc
cmc
ds
add
call
enter
adc
(bad)
sbb
dec
pop
jne
pop
cld
mov
scas
test
das
js
sar
mov
mov
stos
(bad)
xor
test
push
(bad)
(bad)
jg
jl
iret
sbb
mov
mov
aad
inc
sahf
stos
jmp
mov
mul
push
sub
sub
push
(bad)
adc
sbb
ins
mov
adc
call
jmp
cmps
iret
dec
stos
stos
add
or
push
pop
enter
or
leave
notrack
loopne
or
sub
pop
pop
dec
dec
mov
xor
dec
mov
adc
(bad)
push
cld
pop
dec
jbe
addr16
ror
jp
rol
mov
jmp
adc
pusha
jae
aaa
(bad)
(bad)
(bad)
inc
add
push
add
and
cmp
sub
ja
outs
(bad)
xor
inc
mov
rol
daa
mov
aam
jno
mov
sbb
les
mov
clc
dec
lods
lahf
add
movs
inc
mov
cmps
cmp
mov
xor
aaa
je
shl
fcomp
daa
call
add
mov
push
sub
mov
(bad)
(bad)
(bad)
(bad)
(bad)
in
test
or
adc
mov
scas
hlt
fimul
pop
(bad)
push
mov
xchg
jnp
(bad)
(bad)
mov
sbb
mov
stos
ror
mov
pop
gs
dec
mov
(bad)
call
loopne
ds
cmp
(bad)
rol
push
inc
pop
mov
inc
leave
adc
(bad)
call
lods
cmp
arpl
pop
daa
mul
push
xor
std
daa
xlat
hlt
push
shl
mov
lock
rcl
fucomp
lds
and
iret
lock
mov
adc
icebp
and
push
dec
cmps
data16
mov
pop
dec
call
xchg
pop
push
pop
inc
inc
(bad)
je
jmp
and
mov
push
sub
push
xor
and
stc
adc
push
mov
lods
cmps
retf
add
(bad)
(bad)
mov
mov
mov
cmp
shl
mov
pop
or
pop
jle
jae
jmp
sbb
loopne
in
sbb
imul
(bad)
(bad)
aas
or
push
xlat
sar
loopne
sbb
jl
jge
leave
sahf
sbb
out
push
jmp
jmp
prefetch
or
std
test
dec
call
xchg
retf
add
(bad)
(bad)
jg
lea
pop
sub
aam
xchg
sub
loopne
push
ins
ror
fcomp
xor
xchg
jns
stc
fwait
jg
movs
dec
mov
mov
push
scas
sti
jmp
dec
dec
xor
ja
cmp
out
int3
mov
sbb
cwde
nop
cld
call
clc
stos
mov
xor
in
sbb
push
in
xor
mov
shl
popa
mov
push
lods
outs
ror
popf
mov
(bad)
cmp
test
fild
pop
mov
jmp
mov
mov
sub
jno
inc
and
(bad)
(bad)
dec
pop
push
jne
and
push
pop
or
mul
and
cwde
cld
das
mov
(bad)
(bad)
mov
push
call
loope
sub
dec
sub
fmul
(bad)
(bad)
call
jbe
cmp
mov
mov
xor
and
(bad)
(bad)
repz
enter
(bad)
dec
adc
xchg
enter
cmp
sbb
mov
sbb
test
std
(bad)
fbld
shl
jnp
and
repnz
mov
(bad)
(bad)
dec
in
jnp
in
call
mov
jecxz
jae
(bad)
or
xor
(bad)
(bad)
(bad)
out
mov
aas
and
cs
mov
xchg
int3
mov
daa
cmc
sti
fnstsw
(bad)
call
addr16
into
int
sbb
rcr
mov
sbb
gs
inc
or
mov
cmp
fs
cmps
push
loop
mov
cmp
rcr
(bad)
mov
mov
add
push
int
mov
mov
(bad)
(bad)
(bad)
cmp
ja
mov
push
cmp
ret
arpl
repz
popf
mov
pusha
mov
cld
lock
mov
push
adc
or
and
add
mov
(bad)
and
(bad)
call
pop
rcl
add
out
pop
jmp
in
fnstsw
(bad)
(bad)
jmp
fistp
repz
repz
push
repnz
push
hlt
sbb
scas
inc
cmp
mov
push
mov
adc
dec
jnp
pop
(bad)
inc
xor
icebp
jmp
retf
jo
cmp
loope
leave
jb
daa
jns
outs
sub
sub
cld
(bad)
dec
xchg
outs
rol
push
out
add
ret
xor
clc
retf
(bad)
(bad)
(bad)
dec
adc
mov
ds
pop
(bad)
neg
inc
cli
mov
pop
cli
mov
call
call
dec
clc
pop
fs
retf
mov
call
jb
mov
inc
pop
(bad)
dec
cmp
mov
mov
div
cmp
adc
scas
jbe
pop
and
(bad)
(bad)
fidiv
mov
js
mov
or
inc
sbb
les
inc
push
pop
lahf
pusha
(bad)
(bad)
(bad)
jmp
xchg
(bad)
out
or
lahf
scas
pusha
xchg
frstor
ss
arpl
or
mov
out
fisub
jmp
cdq
jl
inc
cdq
test
add
mov
enter
cmp
(bad)
dec
loopne
cmp
hlt
mov
xor
movs
out
xchg
or
(bad)
(bad)
call
jb
data16
mov
sbb
adc
mov
mov
mov
sub
not
mov
outs
data16
scas
or
(bad)
(bad)
(bad)
inc
bound
sbb
add
lods
sbb
outs
scas
nop
loop
push
addr16
xor
push
std
call
mov
jb
or
popa
cld
mov
lds
(bad)
(bad)
(bad)
mov
aad
stos
dec
add
dec
push
adc
cwde
ds
test
(bad)
(bad)
(bad)
(bad)
call
sub
rcl
mov
cmp
or
xchg
ss
ficomp
adc
aad
movs
mov
jae
inc
or
xchg
mov
dec
mov
sbb
cmp
(bad)
(bad)
jg
out
dec
and
add
call
in
mov
mov
iret
push
ficom
push
clc
sub
and
add
or
(bad)
(bad)
call
mov
pop
jno
pop
pop
cmps
push
dec
mov
and
loop
(bad)
fcomp
pop
jecxz
ja
ret
(bad)
es
lods
jp
mov
icebp
(bad)
(bad)
(bad)
jmp
call
fdivrp
loope
xchg
mov
mov
outs
fadd
call
sbb
pop
out
int
lods
ffreep
(bad)
nop
sbb
mov
bound
fcmovu
aam
xor
jg
(bad)
(bad)
pop
test
xor
xor
sub
jae
fwait
cli
repnz
jmp
aad
push
cmp
(bad)
mov
fdivr
test
call
(bad)
inc
mov
(bad)
dec
inc
ficom
bound
sub
or
add
aad
movs
dec
fbstp
call
(bad)
mov
shl
les
mov
outs
(bad)
cli
adc
cwde
pop
mov
pop
mov
jmp
daa
rcl
into
sub
jno
jae
cs
mov
jle
lods
jl
aad
fisub
inc
inc
pop
outs
fwait
mov
push
test
aas
sahf
jecxz
test
pop
pop
pusha
sbb
inc
popf
sbb
(bad)
(bad)
(bad)
call
xor
aam
xor
push
pop
mov
or
cmc
cwde
inc
xchg
and
push
add
(bad)
retf
leave
sbb
test
test
out
shl
sbb
int
out
xlat
cmp
add
test
xor
(bad)
(bad)
(bad)
aas
cli
aam
retf
pop
mov
or
fld
into
jns
pop
mov
sub
sar
(bad)
(bad)
fistp
xor
adc
imul
mov
mov
mov
aad
cmp
call
cmps
xchg
faddp
lods
sbb
fldenv
xchg
rcl
xor
xchg
mov
(bad)
jmp
mov
idiv
xor
or
xlat
cld
jg
mov
push
fwait
xor
mov
mov
jmp
ss
aaa
pop
into
icebp
dec
ret
leave
or
ret
mov
and
adc
scas
dec
adc
int3
push
imul
mov
rcl
jns
data16
and
arpl
mov
inc
nop
movs
fs
(bad)
(bad)
(bad)
(bad)
stc
out
xor
iret
mov
retf
sub
push
in
sub
mov
(bad)
sub
(bad)
(bad)
push
dec
add
push
push
jno
jl
outs
sub
pop
daa
mov
pop
(bad)
out
lods
cmc
lock
(bad)
(bad)
call
mov
cmp
nop
into
xlat
pop
(bad)
pushf
sbb
rcl
pop
ins
jo
(bad)
(bad)
(bad)
dec
push
pop
outs
stos
stos
xchg
rcr
and
mov
loopne
test
das
clc
jmp
push
add
sbb
jno
mov
xchg
movs
xlat
(bad)
(bad)
(bad)
inc
cmp
sub
xor
adc
pop
sar
pop
retf
aaa
sub
iret
add
jmp
ins
dec
xor
lea
jle
(bad)
(bad)
(bad)
jl
sar
sub
loope
cmp
aas
cmc
mov
cwde
jae
lock
(bad)
(bad)
out
pop
bound
mov
retf
push
test
test
mov
popa
sbb
or
(bad)
(bad)
(bad)
inc
mov
cmc
outs
(bad)
xor
outs
(bad)
out
gs
xlat
jle
sub
push
je
push
mov
or
call
mov
add
cwde
(bad)
(bad)
jmp
lods
sahf
out
and
cli
rcr
mov
in
lods
push
add
inc
gs
sbb
(bad)
(bad)
(bad)
(bad)
mov
lods
jmp
pushf
les
(bad)
fsubr
sar
inc
dec
jmp
jmp
push
mov
(bad)
inc
ret
scas
outs
mov
and
add
fs
xchg
xchg
pop
ins
cmp
add
cmp
ss
xchg
push
es
(bad)
(bad)
push
xchg
sub
mov
add
mov
sbb
aam
jmp
je
in
mov
std
jmp
add
fidivr
mov
push
jp
fisubr
psllq
push
div
data16
mov
lock
inc
sbb
loop
dec
or
(bad)
(bad)
(bad)
mov
inc
push
icebp
adc
call
movs
mov
or
cmp
mov
stos
lahf
js
sub
test
(bad)
pop
fadd
lock
jns
mov
lds
clc
in
add
xlat
ds
aad
adc
or
in
(bad)
(bad)
(bad)
jg
push
and
ror
outs
mov
xchg
mov
sub
ret
jge
sub
pop
loopne
and
test
fdivr
rcr
call
sbb
xlat
inc
popa
mul
rcl
sub
ins
sti
gs
test
push
mov
call
ret
xchg
cmp
movs
cmp
aas
lahf
in
out
jo
(bad)
or
sub
scas
jbe
push
retf
push
leave
not
cld
mov
(bad)
mov
mov
outs
test
pop
aaa
popf
jnp
dec
and
mov
jnp
add
pop
pop
add
xchg
pop
cmps
lods
mov
aad
or
xchg
int3
gs
mov
sbb
inc
cli
lock
(bad)
push
shr
xchg
cmps
movs
adc
mov
gs
mov
push
out
xor
jo
dec
pop
lods
mov
je
mov
cli
(bad)
call
fs
js
mov
mul
push
inc
sbb
jbe
jo
push
mov
call
xor
mov
or
pop
sub
movs
push
inc
loope
mov
push
sbb
(bad)
and
out
out
jge
mov
mov
push
adc
cmp
(bad)
(bad)
(bad)
(bad)
fbstp
sbb
std
xor
and
bnd
and
mov
mov
cld
dec
(bad)
mov
rol
and
je
stc
mov
cmps
push
mov
mov
(bad)
pop
xchg
hlt
mul
jo
(bad)
sbb
mov
(bad)
(bad)
(bad)
(bad)
cmp
xchg
cmp
in
add
push
movs
jge
pop
or
lods
jb
mov
jmp
leave
test
faddp
cs
pop
xlat
les
fsub
mov
idiv
(bad)
(bad)
call
outs
push
push
mov
test
test
inc
cmps
popf
mov
enter
pop
(bad)
(bad)
(bad)
inc
jg
out
and
cmps
leave
lods
jo
iret
pop
in
adc
jl
mov
lea
adc
(bad)
(bad)
call
jnp
or
mov
xchg
inc
shl
(bad)
fsubr
sbb
fidivr
jg
or
mov
push
sub
mov
inc
and
(bad)
pop
mov
inc
stos
rcr
popa
pop
sbb
mov
fs
(bad)
(bad)
inc
ins
mov
fwait
loop
xchg
retf
call
mov
dec
(bad)
jmp
add
call
dec
call
push
mov
dec
mov
cmp
jns
leave
iret
jp
outs
mov
ins
mov
push
or
pop
(bad)
imul
ret
jo
jb
mov
mov
(bad)
(bad)
(bad)
inc
pop
cdq
jb
inc
or
cld
jg
cmps
cmp
pop
pop
cmp
int
addr16
mov
mov
arpl
out
sti
iret
push
xchg
xlat
xor
mov
mov
cmp
sub
xlat
and
xchg
(bad)
(bad)
inc
mov
sbb
dec
dec
rcl
push
in
xor
cdq
mov
pop
lock
inc
loope
movs
jmp
add
int3
mov
mov
mov
sbb
(bad)
(bad)
jmp
or
mov
mov
pop
in
movs
mov
mov
in
fist
xchg
movs
call
ds
mov
in
scas
rcl
shr
movs
sub
enter
repz
inc
xchg
js
(bad)
(bad)
call
pop
int
aas
inc
mov
sub
jb
movs
mul
add
shr
(bad)
(bad)
(bad)
dec
aas
imul
push
mov
pushw
adc
inc
mov
xchg
je
xchg
call
test
(bad)
cmp
ror
pop
int3
xlat
adc
cmps
pop
imul
jmp
(bad)
call
or
loopne
int
pop
mov
pop
inc
nop
lock
adc
lods
mov
pop
xchg
add
mov
xchg
xchg
shl
sbb
jmp
push
scas
adc
jbe
and
mov
out
and
push
shl
test
retf
mov
(bad)
(bad)
jmp
xor
push
sbb
cmp
ja
je
iret
sub
xchg
scas
stos
jae
adc
sbb
(bad)
push
pop
in
mov
push
mov
xor
jo
fidivr
mov
(bad)
jmp
outs
mov
out
iret
cli
das
sub
fst
cmp
push
mov
mov
aas
iret
jge
dec
lahf
push
sti
sbb
sub
mov
push
jp
fwait
cmc
push
int3
(bad)
ins
pop
js
bound
retf
xchg
jp
(bad)
(bad)
(bad)
out
mov
sbb
xor
repnz
into
cmc
enter
pusha
fsub
repnz
call
(bad)
inc
lea
mov
cdq
mov
aad
addr16
jbe
loop
ror
dec
and
(bad)
(bad)
push
call
(bad)
fsubp
repnz
pop
push
mov
inc
push
in
mov
in
dec
cli
test
xlat
out
add
call
bound
(bad)
(bad)
(bad)
call
les
fild
or
cmp
mov
test
xchg
clc
popf
pushf
mov
movs
rcl
std
(bad)
mov
into
sbb
stos
jmp
or
lds
inc
aaa
mov
jecxz
loope
push
mov
loopne
xor
and
into
or
ins
call
mov
cmc
xor
aaa
push
cmp
mov
daa
jmp
mov
inc
xchg
jb
outs
js
pushf
xchg
cs
pop
inc
rcl
add
(bad)
(bad)
mov
ins
xlat
repz
scas
dec
es
jp
lods
ja
inc
dec
icebp
sub
jmp
jns
mov
mov
cdq
or
outs
(bad)
(bad)
(bad)
push
pop
and
out
add
adc
ficomp
pop
adc
(bad)
(bad)
(bad)
(bad)
xlat
cwde
or
lods
and
jmp
add
dec
push
nop
inc
lock
(bad)
(bad)
call
xor
jmp
jmp
bound
sti
neg
je
mov
mov
stc
pusha
or
(bad)
(bad)
dec
div
stos
int
pop
xchg
push
pop
dec
inc
jg
mov
pop
clc
jo
sbb
repz
out
out
gs
lds
int3
aad
(bad)
ds
repz
adc
(bad)
(bad)
mov
sub
movs
and
mov
out
bound
int3
and
jge
(bad)
(bad)
dec
jecxz
mov
jmp
sub
retf
cmps
dec
pop
or
xchg
hlt
or
das
clc
pop
cli
enter
jns
inc
mov
mov
add
movs
mov
stos
mov
add
cmp
xchg
or
push
inc
dec
js
(bad)
(bad)
inc
add
xor
outs
and
imul
and
push
ins
sub
dec
push
add
sub
or
ss
sbb
(bad)
(bad)
cmp
cmp
mov
mov
adc
jmp
call
aaa
push
(bad)
jnp
dec
mov
(bad)
(bad)
inc
movs
cli
dec
and
cmp
and
imul
cmp
xchg
aam
sub
lock
push
sbb
lds
cmc
jmp
sbb
or
ins
sbb
xor
add
(bad)
call
scas
mov
aaa
sbb
mov
rcr
pop
cld
(bad)
jmp
xchg
retf
cld
push
repnz
mov
retf
jmp
enter
mov
mov
pop
in
sub
mov
inc
cmp
cmp
(bad)
dec
pop
mov
xor
xchg
pushf
dec
mov
mov
inc
call
adc
(bad)
(bad)
jmp
in
cli
xor
inc
jne
push
addr16
(bad)
add
rcr
sub
(bad)
(bad)
(bad)
call
jae
fwait
push
dec
scas
lock
retf
xor
cmps
cmp
push
scas
push
rol
(bad)
(bad)
call
test
(bad)
pop
xchg
mov
fnsave
jb
int3
les
imul
(bad)
call
pop
mov
nop
jmp
mov
sbb
(bad)
(bad)
call
inc
ret
xor
xchg
or
ds
xchg
cmp
dec
or
cli
(bad)
(bad)
(bad)
push
cwde
aad
push
stos
jnp
stos
push
nop
xchg
pop
mov
test
pop
(bad)
mov
cmp
scas
shr
pop
test
int3
lods
cmp
mov
add
push
loopne
lods
sti
xchg
out
fcmovbe
cld
les
ss
push
jmp
cmps
add
mov
std
mov
sub
(bad)
adc
mov
(bad)
(bad)
jg
xchg
jns
in
mov
mov
pop
dec
jb
retf
setae
(bad)
(bad)
call
rcl
loopne
xor
bound
sti
stos
pusha
lock
inc
mov
cmp
jle
push
std
stos
fdiv
jmp
fwait
inc
xor
push
das
popa
rol
aam
xor
xchg
ret
fcomip
(bad)
(bad)
mov
loopne
nop
xchg
jmp
jne
ror
ins
outs
mov
pop
(bad)
(bad)
mov
ins
pusha
lods
mov
jb
(bad)
mov
enter
adc
outs
push
and
inc
adc
xchg
pop
cmp
mov
aas
dec
mov
frstor
xor
jno
ss
(bad)
(bad)
push
scas
pop
pop
and
add
outs
ror
pop
lds
xchg
and
xor
aam
push
push
push
retf
push
or
adc
and
jecxz
cli
(bad)
(bad)
call
add
or
pop
pusha
cmps
mov
loope
shl
nop
dec
sbb
mov
xchg
sub
jmp
xor
std
xchg
loopne
sbb
xor
int
pop
sti
push
push
rol
inc
fadd
adc
aam
jp
fsubr
ja
sbb
pop
ins
ret
dec
sub
(bad)
jmp
xchg
pop
scas
pop
stc
int3
fild
mov
push
push
out
xchg
gs
xor
mov
inc
dec
sub
inc
pop
icebp
test
push
out
mov
and
pop
(bad)
test
std
add
inc
push
pop
adc
fs
push
pusha
sub
loopne
ins
loop
aas
int
mov
daa
push
mov
in
jmp
mov
xlat
iret
sbb
bndstx
iret
cmp
nop
clc
clc
(bad)
(bad)
jmp
inc
xchg
mov
mov
fucomp
fsubr
sub
sar
xchg
pop
gs
(bad)
jmp
xor
popf
xor
and
movs
das
sbb
adc
xor
mov
jle
mov
mov
sub
or
(bad)
(bad)
(bad)
push
push
add
xchg
pop
mov
xor
inc
or
loopne
or
outs
nop
(bad)
(bad)
(bad)
(bad)
or
adc
ds
mov
mov
retf
imul
cdq
repnz
call
pop
dec
lods
cmp
cmp
jae
cs
jg
xchg
and
inc
pop
(bad)
(bad)
(bad)
fld
fsubr
inc
fidiv
(bad)
sub
add
out
push
cdq
out
(bad)
(bad)
(bad)
dec
push
pop
mov
aad
cdq
jg
(bad)
cmp
dec
fadd
mov
(bad)
(bad)
dec
dec
cmp
stos
movs
mov
dec
pop
adc
mov
and
loopne
mov
dec
test
dec
loope
dec
xchg
(bad)
add
adc
or
mov
pextrw
(bad)
push
xor
cmps
cmps
ins
adc
mov
xchg
mov
xchg
mov
dec
jg
(bad)
inc
push
cld
or
inc
cli
call
hlt
push
icebp
push
push
std
(bad)
call
pop
stos
cmpxchg
dec
push
pop
pop
xchg
cmps
cmp
out
cwde
xor
(bad)
(bad)
(bad)
jmp
sub
loop
cmc
fwait
cmp
outs
stc
gs
jae
mov
clc
(bad)
dec
pop
cdq
xor
inc
in
xchg
jl
and
imul
das
pop
icebp
(bad)
mov
scas
push
(bad)
sbb
(bad)
mov
loop
inc
stos
jmp
jmp
idiv
jmp
sar
push
imul
add
iret
test
mov
rcr
jg
clc
retf
aas
mov
call
jnp
int3
xor
or
(bad)
jg
call
push
imul
dec
push
repz
(bad)
call
jecxz
xlat
repz
mov
popf
add
ins
or
pushf
(bad)
(bad)
(bad)
jmp
mov
fwait
add
add
sbb
sti
sub
mov
cmp
add
dec
adc
int
push
xlat
(bad)
jecxz
adc
mov
mov
sbb
enter
movs
mov
pushw
call
(bad)
jg
cmps
dec
add
cld
jns
outs
cmp
pop
ins
ror
pop
mov
aad
mov
callw
scas
ja
rcr
clc
cmp
lahf
call
outs
push
es
aad
xor
std
sbb
sbb
fisttp
mov
mov
xlat
pusha
xor
adc
ins
inc
fxch
or
xor
aas
cld
das
mov
(bad)
cmp
dec
popf
int
lods
mov
int
test
add
dec
mov
dec
ja
add
mov
push
cmps
popa
xor
push
and
mov
sbb
or
or
jg
jnp
sub
cmp
or
mov
dec
xor
jmp
sub
test
repz
aas
mov
dec
inc
mov
(bad)
(bad)
dec
push
in
scas
pusha
(bad)
inc
ja
xor
nop
test
leave
sahf
cmps
sti
daa
cdq
mov
gs
mov
(bad)
fisttp
mov
xchg
sti
cmc
xchg
xchg
cwde
call
cmp
adc
dec
jg
mov
mov
addr16
out
xor
sub
or
jmp
cmp
(bad)
inc
movs
and
xchg
cmp
jecxz
outs
out
arpl
pusha
and
stos
dec
sar
(bad)
mov
mov
mov
pop
loop
cmc
adc
es
push
cwde
pop
mov
and
cmp
rcl
xchg
sub
pop
inc
lods
ss
sub
aam
jg
sub
stos
pusha
ror
aam
jp
jge
adc
cmp
imul
or
xor
int
enter
xchg
mov
sub
movs
xor
mov
and
sbb
loop
popf
sub
dec
aas
pop
fstp
cmp
je
aad
js
data16
jno
sbb
rcr
out
pop
call
xor
inc
sub
js
aas
jb
sbb
out
adc
or
and
cdq
push
or
jmp
inc
push
pushf
jo
dec
inc
fsubrp
cld
adc
mov
call
(bad)
(bad)
in
jmp
and
ins
mov
into
inc
adc
sbb
scas
adc
(bad)
(bad)
dec
ret
aam
scas
xor
xchg
and
fst
clc
sub
or
ins
fbstp
cs
(bad)
jmp
inc
enter
and
in
xor
in
stos
pop
xchg
(bad)
(bad)
(bad)
push
mov
cmps
push
add
push
stos
sti
mov
mov
stc
jecxz
and
jg
inc
sbb
rcl
hlt
pop
fstp
sub
test
out
(bad)
(bad)
(bad)
(bad)
jmp
fsubrp
pop
pop
je
lahf
pushf
das
sahf
hlt
pop
sti
imul
int
arpl
adc
xor
ret
(bad)
mov
(bad)
(bad)
inc
retf
jmp
pop
int3
cs
daa
push
mov
(bad)
jo
(bad)
into
fwait
retf
(bad)
inc
dec
lock
out
pop
arpl
test
pop
in
mov
shr
clc
(bad)
jg
scas
mov
cmp
mov
xor
ret
ds
jo
int
inc
cld
jmp
jg
fild
fiadd
mov
mov
mov
div
push
inc
push
les
jmp
dec
sahf
neg
sub
(bad)
(bad)
call
in
push
or
and
dec
xor
ret
ret
mov
push
mov
test
rol
scas
cli
push
push
push
test
inc
xchg
and
ret
and
mov
xlat
cmp
jns
add
mov
mov
mov
loopne
sbb
(bad)
std
icebp
add
addr16
push
call
cmp
pop
or
push
adc
add
fwait
push
pop
mov
std
sbb
shl
retf
(bad)
call
xlat
mov
mov
inc
aas
xor
aam
pop
dec
push
cwde
(bad)
ss
push
pop
loopne
jno
(bad)
jl
fs
xchg
jmpw
jmp
dec
loopne
or
into
xlat
jge
cmp
sub
(bad)
push
(bad)
ds
popa
adc
or
adc
mov
jnp
ja
je
(bad)
call
ficomp
and
push
pop
add
scas
push
nop
not
outs
(bad)
xor
scas
cmps
jle
cmp
fisttp
cmps
out
pop
mov
shl
jge
(bad)
(bad)
(bad)
push
mov
mov
(bad)
loope
jp
ss
and
retf
mov
lock
dec
(bad)
xchg
movs
(bad)
inc
cmp
xor
adc
or
iret
cwde
fwait
fs
pop
dec
cmp
(bad)
call
(bad)
out
push
sbb
repz
in
int3
mov
or
jg
and
adc
mov
(bad)
call
lds
movs
fsub
mov
pop
rcr
pop
push
in
shl
xchg
adc
(bad)
jmp
mov
popa
pusha
pop
mov
outs
xlat
sub
loope
sub
invd
jne
jle
sbb
(bad)
(bad)
inc
enter
pop
call
iret
xor
add
mov
out
mov
jge
call
pop
cmp
pop
out
lods
cli
repnz
pop
add
or
push
(bad)
fcos
dec
add
mov
mov
or
gs
nop
(bad)
(bad)
(bad)
jmp
add
cmp
fs
rcl
mov
dec
ret
cld
bound
psubusw
sbb
push
dec
in
fsub
jmp
mov
rcl
js
mov
adc
and
xchg
push
fisubr
jmp
inc
loopne
mov
retf
leave
mov
(bad)
cmp
push
mov
loope
mov
pop
push
(bad)
mov
sbb
pop
hlt
jp
es
adc
(bad)
(bad)
(bad)
inc
repz
enter
repnz
inc
cmps
cmps
mov
or
cmp
pusha
lock
das
add
jmp
(bad)
jmp
push
inc
fidivr
not
cdq
sub
mov
mov
(bad)
jmp
es
mov
dec
nop
inc
push
add
cmp
xchg
and
rcl
das
fsubr
mov
(bad)
(bad)
push
mov
dec
clc
dec
aas
test
push
pop
dec
xor
leave
out
mov
xchg
call
jmp
or
(bad)
mov
jg
push
inc
xchg
mov
inc
(bad)
inc
les
xchg
or
stos
fcmovnu
and
rol
and
push
sbb
jmp
push
jmp
aaa
sbb
dec
retf
in
or
and
in
imul
(bad)
call
and
jmp
adc
or
sbb
rcr
std
sub
(bad)
(bad)
(bad)
inc
jne
push
enter
mov
(bad)
cdq
xchg
imul
and
clc
(bad)
(bad)
fmulp
xor
(bad)
fcomip
mov
mov
fnstsw
in
dec
push
sbb
leave
std
xor
cmp
dec
vfrczsd
sbb
jle
outs
jae
scas
js
sahf
pop
movs
(bad)
(bad)
cmp
ret
int3
mov
cmp
mov
jp
push
(bad)
(bad)
(bad)
jg
cmps
dec
jb
bound
cmp
popf
xor
(bad)
fs
push
add
xor
(bad)
inc
adc
sbb
pop
mov
push
inc
push
pop
int3
add
loopne
(bad)
call
xchg
inc
popf
jo
pop
sbb
adc
xor
xchg
ror
es
mov
outs
mov
(bad)
loopne
int
push
(bad)
(bad)
(bad)
push
or
out
shl
repz
ret
repnz
xchg
inc
push
sub
mov
xlat
jmp
jnp
mov
pop
(bad)
(bad)
(bad)
call
rcr
sbb
mov
call
mov
cli
add
mov
(bad)
xchg
mov
pop
mov
(bad)
(bad)
push
test
js
aam
add
mov
lahf
aam
add
add
pusha
adc
arpl
add
mov
cmps
fs
movs
and
fsubr
stos
push
dec
sub
test
xchg
jmp
add
(bad)
mov
and
in
dec
cmp
jge
cld
(bad)
call
add
xchg
test
inc
fucompp
mov
jg
cmp
(bad)
dec
pop
clc
cmp
sub
shl
out
std
or
jg
test
clc
(bad)
dec
adc
imul
push
mov
neg
das
jmp
mov
push
pop
mov
sub
or
lock
xchg
mov
call
inc
fild
mov
mov
test
pusha
cmp
(bad)
jmp
inc
je
xor
stc
pop
ret
pop
jo
stc
sbb
pop
push
push
add
cld
cmp
sub
inc
mov
and
adc
mov
fstp
dec
lock
(bad)
jg
inc
(bad)
mov
cdq
inc
call
ret
jmp
rol
mov
(bad)
fnsave
rcl
mov
cmps
sbb
adc
test
(bad)
(bad)
(bad)
jle
mov
scas
aaa
ins
loop
sar
mov
repz
(bad)
cmp
hlt
mov
jmp
xchg
jno
(bad)
mov
(bad)
clc
lock
add
mov
jne
push
cwde
jecxz
hlt
(bad)
inc
sub
jno
mov
sar
jecxz
je
sar
mov
mov
addr16
dec
pop
aam
or
add
mov
push
add
cmps
(bad)
call
mov
dec
cmp
test
push
gs
daa
xlat
xchg
(bad)
(bad)
(bad)
call
mov
pop
enter
jne
inc
jb
or
movs
mov
ins
fstp
movs
fbstp
(bad)
(bad)
(bad)
ficomp
mov
int
lods
cmp
pop
or
sbb
mov
mov
and
pop
pop
aad
cmp
pop
push
mov
(bad)
dec
shrd
lock
jp
(bad)
fcom
and
xor
cmps
fiadd
(bad)
(bad)
jg
xor
dec
aad
(bad)
mov
aas
fs
mov
mov
fcmovnu
push
sub
(bad)
(bad)
(bad)
fadd
test
into
and
ficomp
xchg
(bad)
int3
dec
hlt
xchg
repnz
mov
(bad)
(bad)
(bad)
jmp
cmp
mov
push
fwait
iret
stos
mov
push
mov
inc
fcmovne
mov
fdivr
(bad)
(bad)
(bad)
in
push
cmp
push
std
mov
loop
mov
(bad)
outs
rcl
(bad)
(bad)
(bad)
call
mov
pushf
movs
jmp
js
xor
cmp
das
mov
jmp
push
(bad)
lock
push
jmp
pop
call
icebp
leave
aas
add
(bad)
(bad)
(bad)
(bad)
ficomp
loopne
add
push
das
jle
dec
xor
stos
or
pop
lahf
movs
and
(bad)
call
lahf
jae
shl
adc
ja
fidivr
adc
(bad)
(bad)
(bad)
(bad)
mov
daa
aam
mov
or
js
cmp
fadd
sbb
out
push
xchg
(bad)
mov
push
and
fnsave
cmp
rep
pop
cld
call
loop
inc
call
push
xchg
pop
xchg
dec
mov
lods
cmp
(bad)
enter
test
sub
aas
ins
pop
dec
(bad)
and
or
(bad)
cmc
jno
out
pop
addr16
mov
mov
and
xor
lods
mov
mov
xor
(bad)
jmp
cmp
push
or
mov
es
mov
loope
adc
mov
mov
push
add
(bad)
(bad)
(bad)
dec
mov
cmp
mov
in
jg
sbb
xchg
stos
pop
fdivr
xchg
mov
dec
or
(bad)
(bad)
jmp
retf
neg
push
ficomp
movs
fist
daa
jecxz
lock
push
pushf
and
(bad)
dec
dec
pop
test
mov
and
int
and
jecxz
or
sar
jmp
sbb
sub
call
ror
iret
fild
xor
pop
pop
arpl
cld
add
out
jge
cmp
int3
and
(bad)
(bad)
(bad)
call
jmp
or
test
in
daa
sar
jno
mov
(bad)
(bad)
call
iret
dec
scas
in
arpl
adc
lods
pop
dec
mov
add
xchg
pop
shl
push
inc
(bad)
dec
ret
cli
loopne
test
xor
jne
mov
pop
aad
ds
sub
shl
cwde
xchg
imul
sti
jmp
inc
or
jmp
or
movs
add
xor
cs
fimul
cmp
sub
cmp
stos
loopne
add
in
mul
(bad)
(bad)
(bad)
dec
xor
scas
dec
loopne
iret
pop
ret
movs
rcr
or
stc
or
add
dec
sbb
jg
(bad)
(bad)
call
mov
jle
fist
fsubr
and
cmp
dec
ficomp
arpl
push
aaa
sbb
cli
add
pusha
shl
(bad)
dec
pop
add
cwde
(bad)
mov
test
xchg
push
cdq
fstp
(bad)
jmp
xor
push
js
pop
inc
int
mov
adc
sbb
cwde
pop
shl
rcl
rcl
shr
pop
loopne
call
imul
xor
jbe
adc
jmp
ret
or
push
adc
loop
push
repz
icebp
icebp
int
or
ret
sar
dec
ror
movs
sub
and
and
or
or
pop
retf
(bad)
(bad)
(bad)
call
dec
pop
scas
xor
inc
xchg
or
(bad)
lahf
nop
xor
hlt
ja
adc
icebp
call
scas
sub
idiv
cmps
(bad)
inc
sbb
sub
inc
inc
inc
movs
mov
das
clc
(bad)
push
xchg
dec
repz
add
jp
mov
push
cmp
das
daa
and
push
inc
adc
inc
arpl
shl
stos
ret
mov
nop
sbb
(bad)
jmp
jmp
mov
lea
stos
cmp
xchg
lods
(bad)
(bad)
(bad)
(bad)
mov
mov
push
xchg
jecxz
aam
dec
mov
xlat
fwait
mov
enter
push
add
aam
(bad)
(bad)
(bad)
dec
ret
mov
repz
push
mov
dec
pop
in
imul
popf
cld
lock
(bad)
dec
mov
push
push
rcr
arpl
nop
push
lahf
jnp
jae
or
push
scas
push
mov
inc
lods
fstp
pop
in
lahf
pushf
pop
mov
add
clc
(bad)
(bad)
jmp
fisub
lahf
cli
int3
add
test
(bad)
mov
add
cmp
sbb
cld
lea
xor
cs
(bad)
(bad)
jmp
cmp
add
out
jne
stos
ins
enter
add
jb
in
ins
aad
inc
(bad)
(bad)
call
sub
ds
pop
mov
retf
dec
push
xchg
adc
dec
stos
xchg
or
(bad)
(bad)
(bad)
jge
clc
mov
in
pop
cmp
lds
dec
inc
imul
aaa
pop
and
rcr
popf
ss
nop
cmp
div
ins
cmp
out
bnd
mov
sub
sub
loop
ficom
(bad)
mov
inc
xor
mov
cmp
outs
cld
xor
and
push
pop
ror
div
(bad)
(bad)
fdivp
fs
js
in
pop
idiv
lods
das
adc
adc
mov
jg
(bad)
call
sub
gs
or
mov
cmp
ret
aaa
std
scas
cli
push
test
mov
(bad)
mov
or
sbb
xchg
or
(bad)
jmp
inc
inc
ins
sub
int
mov
outs
test
outs
push
inc
cld
call
xchg
cwde
mov
adc
test
jecxz
enter
test
outs
(bad)
call
pop
sub
test
mov
shl
dec
int3
or
call
dec
sbb
cmp
add
addr16
shr
mov
aad
dec
lea
cmp
aaa
fst
cmp
jp
xchg
sub
xor
movs
inc
pop
(bad)
out
fistp
pop
dec
das
jo
call
mov
pop
fcmovnu
out
push
adc
mov
inc
push
fsubr
ss
jno
jge
mov
sub
out
push
fdiv
(bad)
mov
add
leave
dec
(bad)
call
inc
push
and
dec
outs
imul
les
mov
(bad)
call
std
in
fldenv
call
adc
mov
pop
xchg
shl
cmp
call
rcr
xor
arpl
xlat
sub
adc
inc
rcr
push
fs
jmp
inc
mov
sbb
mov
and
(bad)
(bad)
call
cmp
inc
cdq
call
cmp
sbb
(bad)
jmp
push
ja
(bad)
(bad)
(bad)
jmp
(bad)
mov
sub
sbb
xchg
jae
(bad)
or
mov
repz
mov
in
dec
pusha
dec
mov
(bad)
pop
inc
push
fisttp
or
dec
add
add
sub
mov
cwde
pop
int3
sbb
in
dec
aad
(bad)
call
cld
lahf
pop
inc
loop
inc
ficomp
sub
outs
xlat
mov
sub
jecxz
xchg
xchg
inc
(bad)
(bad)
(bad)
push
jg
test
arpl
mov
xor
pop
pop
jle
add
(bad)
dec
jge
pop
fiadd
call
jnp
push
scas
ja
jecxz
jecxz
xor
dec
fcom
std
pop
imul
cmp
sbb
dec
(bad)
jecxz
nop
xchg
data16
inc
mov
add
(bad)
pop
mov
pop
(bad)
movs
xchg
mov
(bad)
(bad)
(bad)
jmp
rcr
shl
loopne
jecxz
fucom
daa
lock
xor
pop
pop
and
(bad)
jg
(bad)
jmp
sahf
cli
mov
ror
(bad)
mov
add
clc
hlt
add
rol
jns
(bad)
(bad)
(bad)
inc
xchg
add
fiadd
cmp
adc
stos
inc
cdq
mov
add
mov
stos
(bad)
(bad)
aad
sub
or
sbb
or
mov
(bad)
(bad)
mov
jb
dec
dec
pop
enter
bound
jae
inc
pop
test
jbe
push
(bad)
mov
sbb
jg
or
nop
hlt
(bad)
out
cwde
js
mov
mov
mov
ficom
call
xor
pop
jg
dec
sbb
push
jae
or
pop
xchg
js
push
in
mov
(bad)
push
lahf
imul
dec
mov
lods
rol
inc
pushf
lods
loope
fstp
cmp
loopne
mov
sbb
(bad)
add
mov
push
test
lods
bound
(bad)
jmp
inc
dec
dec
jnp
xlat
cmps
xchg
lds
neg
inc
sar
cwde
mov
fild
mov
push
aas
push
sbb
dec
loopne
stc
ins
in
mov
adc
bound
aad
xor
stos
or
jmp
pop
cmp
test
retf
add
dec
aaa
cmp
xchg
jmp
imul
cmp
push
(bad)
jo
stos
stos
mov
(bad)
dec
xchg
push
fisub
and
push
arpl
jp
jnp
nop
test
or
fwait
std
pop
cmc
(bad)
call
sbb
xor
popa
addr16
and
mov
push
pop
jge
(bad)
(bad)
call
inc
adc
(bad)
jmp
loope
cmp
fdivr
iret
xchg
pop
retf
and
(bad)
jmp
in
jbe
mov
and
push
push
repnz
pusha
loop
xor
rcr
cdq
ret
mov
xlat
dec
sub
ss
jns
ret
mov
movs
pusha
and
push
std
push
repz
push
or
xor
cs
ja
iret
or
add
call
pop
inc
push
inc
lods
fistp
ret
mov
xor
jg
fsub
loop
inc
push
cli
gs
jecxz
(bad)
stc
xor
(bad)
call
stos
neg
adc
mov
adc
add
sub
sbb
fcomip
(bad)
push
rol
sub
mov
sbb
(bad)
cmp
add
in
lea
sahf
in
(bad)
(bad)
dec
je
(bad)
int
cmp
stc
mov
dec
mov
xor
dec
cmp
sahf
es
xlat
loopne
mov
dec
aam
fst
add
popf
push
xchg
adc
jmp
jp
aad
dec
xor
or
(bad)
gs
std
dec
xchg
xchg
jbe
mov
inc
ds
loope
dec
(bad)
jle
pop
out
xchg
jmp
(bad)
(bad)
(bad)
dec
inc
sub
cmps
stos
cdq
dec
cmp
cmc
jb
push
cdq
and
imul
mov
jecxz
inc
xchg
retf
enter
lahf
shl
std
dec
push
xchg
xor
inc
mov
pop
clc
dec
enter
push
jle
outs
jo
retf
cli
jmp
mov
mov
mov
add
(bad)
dec
test
mov
inc
cmp
ror
pop
bound
int
mov
(bad)
(bad)
out
in
aaa
xor
dec
dec
int
mov
push
mov
pushf
dec
xchg
repz
dec
mov
mov
ja
sti
mov
or
(bad)
(bad)
inc
fisubr
jecxz
aaa
push
repnz
dec
clc
mov
mov
outs
lods
fadd
(bad)
(bad)
jmp
jecxz
lods
repnz
mov
pop
repnz
inc
pop
fst
pop
shl
dec
mov
(bad)
(bad)
(bad)
call
sbb
test
jle
das
mov
ins
rcl
aam
push
dec
mov
sbb
or
(bad)
(bad)
(bad)
call
cmp
inc
mov
sahf
mov
push
stc
(bad)
sti
call
test
(bad)
(bad)
call
in
mov
stc
jle
scas
cdq
or
outs
push
and
cli
mov
(bad)
(bad)
dec
ins
xchg
xchg
cmc
test
and
clc
(bad)
cs
dec
shl
or
sbb
add
aaa
mov
jns
cld
jl
into
xchg
outs
(bad)
call
lods
push
inc
jecxz
xor
ret
(bad)
pop
stos
xchg
stos
pushf
push
push
adc
pusha
jge
(bad)
(bad)
call
adc
es
jno
add
cmp
loopne
and
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
adc
sub
call
and
in
sahf
movs
xchg
pop
jmp
(bad)
(bad)
dec
jp
cmp
outs
xchg
cmc
jne
or
jmp
sub
dec
push
dec
push
call
call
data16
jnp
nop
sub
hlt
scas
jnp
xchg
std
adc
jmp
(bad)
clc
jno
dec
mov
add
add
(bad)
(bad)
call
inc
cmp
or
add
mov
xchg
mov
imul
sbb
(bad)
scas
xor
add
arpl
retf
(bad)
mov
test
jmp
scas
shl
jecxz
and
dec
icebp
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
fidivr
fdiv
pop
mov
loope
and
mov
inc
(bad)
dec
mov
xor
inc
and
clc
and
rol
(bad)
mov
dec
ins
iret
pop
push
inc
push
in
adc
xor
xlat
sbb
or
mov
jl
test
and
dec
sbb
(bad)
jmp
ret
mov
out
adc
or
call
(bad)
ficomp
push
and
and
mov
add
or
lds
sub
or
addr16
mov
(bad)
jmp
mov
fistp
xchg
leave
mov
mov
fwait
mov
(bad)
div
inc
(bad)
(bad)
(bad)
(bad)
jg
retf
jo
pop
jg
rcl
repnz
jp
add
sub
pop
dec
jp
cwde
lea
and
sub
jb
pop
into
pop
lock
je
push
mov
(bad)
(bad)
jg
test
arpl
inc
cmps
mov
mov
lods
xor
iret
clc
call
mov
stc
inc
das
aas
dec
dec
mov
test
ja
sub
jno
or
mov
(bad)
(bad)
mov
xlat
dec
test
sub
cmp
xor
por
or
call
call
cmp
jmp
cld
outs
xor
repz
inc
dec
lahf
retf
add
jle
pop
mov
dec
and
scas
and
outs
das
mov
pop
mov
(bad)
mov
shl
(bad)
dec
pushf
fist
test
(bad)
jle
xchg
push
push
mov
imul
retf
or
shr
pop
scas
push
arpl
jo
inc
add
(bad)
call
and
and
lds
inc
popf
mov
(bad)
xchg
popf
xchg
mov
mov
add
into
fwait
test
(bad)
call
sub
pop
or
xchg
and
outs
lahf
movs
not
leave
mov
or
pusha
add
jno
pop
sub
jmp
jl
(bad)
cmc
(bad)
in
xchg
xor
aam
jmp
(bad)
(bad)
fnsave
push
pushf
mov
imul
movs
iret
movs
xor
xor
(bad)
(bad)
(bad)
mov
fstp
scas
fsincos
adc
jp
cmp
ret
mov
mov
(bad)
(bad)
inc
xchg
and
into
push
mov
adc
and
ret
outs
mov
das
jmp
jg
dec
and
ja
adc
cmp
or
pop
inc
loope
jmp
call
in
lahf
xor
dec
and
neg
dec
mov
das
inc
leave
cmps
(bad)
(bad)
(bad)
(bad)
call
leave
loop
or
jns
cmc
sbb
mov
mov
outs
mov
dec
sub
pop
(bad)
(bad)
(bad)
(bad)
jmp
data16
xlat
hlt
adc
fidiv
test
pop
mov
repz
jmp
dec
cmp
or
fcomp
lea
and
(bad)
in
(bad)
sbb
(bad)
(bad)
(bad)
push
push
les
xor
das
pop
jne
xor
lods
and
or
(bad)
(bad)
call
inc
xchg
mov
xor
xchg
sub
cdq
sub
or
lods
jnp
xor
xchg
(bad)
(bad)
(bad)
jp
inc
mov
scas
adc
mov
xchg
mov
cli
shl
push
and
(bad)
(bad)
fisttp
iret
int3
mov
sub
xor
cmp
cli
fistp
in
xchg
sub
sbb
outs
ss
mov
adc
sbb
push
(bad)
(bad)
call
xchg
push
int
int
stc
fld
cli
dec
push
xor
sub
mov
jmp
mov
mov
or
mov
pop
xchg
cli
jmp
jmp
lods
(bad)
adc
iret
add
dec
mov
sar
ins
adc
add
cmp
pop
in
lock
sahf
adc
shr
sbb
jmp
lock
dec
ds
inc
xor
or
push
(bad)
(bad)
(bad)
dec
in
cmp
dec
mov
or
and
or
test
xchg
ret
(bad)
(bad)
(bad)
call
adc
icebp
xor
inc
cmp
pusha
call
adc
stos
(bad)
call
(bad)
mov
icebp
nop
hlt
in
fld
cmp
aad
call
(bad)
(bad)
(bad)
push
pop
jnp
fidiv
xlat
pop
xchg
lahf
ret
inc
daa
dec
mov
ins
cmp
(bad)
cmp
(bad)
(bad)
mov
sub
mov
pop
push
data16
pushf
sub
mov
sbb
mov
(bad)
jmp
xor
mov
xchg
dec
shl
cmps
(bad)
rol
repz
pop
outs
clc
dec
ret
pop
sbb
and
xchg
cld
push
adc
cmp
fwait
shl
or
push
stc
push
lock
pop
mov
pop
in
loope
(bad)
(bad)
(bad)
(bad)
fnstsw
in
and
ins
dec
sbb
mov
xchg
pop
fmul
popf
xor
pmovmskb
xor
icebp
in
(bad)
(bad)
inc
ror
mov
jnp
adc
cmp
les
inc
stc
add
push
push
jmp
lahf
or
(bad)
(bad)
(bad)
push
ret
sbb
test
fidiv
or
rcr
inc
adc
imul
sar
(bad)
(bad)
jmp
test
sub
jnp
pusha
jecxz
push
pop
jno
xor
dec
fbstp
pop
cmps
popa
push
xor
int3
test
(bad)
(bad)
(bad)
inc
xchg
cwde
callw
out
cmp
lea
and
mov
push
(bad)
(bad)
(bad)
mov
das
mov
jne
jb
sahf
(bad)
cmp
mov
outs
and
int3
push
ret
(bad)
jmp
ss
cld
in
mov
leave
mov
pusha
lods
(bad)
shl
mov
cmc
repz
pop
gs
push
mov
adc
sub
(bad)
outs
popf
add
push
inc
fnstenv
pop
inc
pop
cmp
(bad)
(bad)
push
sub
mov
mov
test
add
in
call
dec
mov
pop
cli
dec
jle
retf
sar
cs
pop
arpl
xor
fwait
or
jmp
adc
and
or
call
push
cld
mov
aam
daa
popa
stos
mov
pop
jmp
scas
(bad)
aad
(bad)
popa
lods
(bad)
lock
int3
push
bnd
add
add
lods
mov
mov
or
ins
ds
xchg
push
iret
std
jmp
loopne
adc
aaa
cmp
scas
pop
pop
aaa
or
stos
shl
fistp
cmp
mov
call
mov
out
in
fmul
mov
xabort
outs
out
fwait
dec
cld
(bad)
(bad)
jmp
data16
push
and
xor
cli
push
movs
mov
xor
bound
(bad)
(bad)
(bad)
call
xor
jle
mov
xor
push
lock
xor
in
fisub
icebp
(bad)
(bad)
push
cld
and
cs
shl
push
arpl
or
movs
mul
call
sbb
cmp
leave
jbe
mov
loope
(bad)
push
iret
inc
dec
ret
gs
ds
pop
xchg
ret
(bad)
fild
shl
repnz
mov
mov
inc
xlat
jb
jmp
mov
mov
movs
scas
xchg
ss
adc
cmp
cld
and
add
in
jmp
mov
adc
(bad)
cld
rol
inc
lods
ss
(bad)
jmp
cmp
sbb
jl
xchg
or
(bad)
(bad)
aas
sbb
icebp
add
pop
mov
jnp
fwait
sahf
and
pushf
aam
push
cld
cld
pushf
push
(bad)
jmp
jne
ror
sbb
mov
sahf
jg
les
xlat
or
test
mov
cmp
sub
cs
neg
les
jmp
scas
add
(bad)
(bad)
jg
cli
xor
xor
inc
pop
add
icebp
mov
mov
je
mov
inc
fcmove
xchg
inc
add
(bad)
(bad)
(bad)
inc
xor
push
fdiv
push
cmps
xor
fs
mov
cmp
pop
retf
clc
call
stc
(bad)
pop
leave
adc
or
cmp
dec
jae
(bad)
(bad)
jmp
dec
and
mov
and
push
xchg
int3
adc
inc
cld
jg
mov
push
pop
lahf
mov
sub
cmps
addr16
xor
icebp
jo
(bad)
call
retf
aaa
loopne
xchg
mov
xor
inc
dec
daa
dec
xor
cwde
fs
xchg
mov
(bad)
(bad)
(bad)
stc
mov
scas
xor
jge
mov
shr
outs
icebp
mov
and
push
mov
out
fs
call
inc
bound
xor
ror
xchg
push
fwait
sbb
(bad)
call
cmp
lock
dec
inc
icebp
pop
lods
sahf
out
(bad)
mov
stc
in
inc
retf
inc
add
pop
and
add
lds
(bad)
(bad)
(bad)
push
data16
inc
rcl
or
mov
xchg
cmp
call
call
into
out
inc
or
cmps
fs
adc
in
int3
cld
je
or
lea
mov
or
dec
push
mov
hlt
ret
xlat
pop
xor
cmps
(bad)
pop
outs
mov
scas
lods
push
or
(bad)
call
test
cwde
imul
inc
shl
aaa
mul
cmp
jmp
nop
adc
xor
imul
mov
push
(bad)
mov
dec
out
push
cs
fimul
lds
movs
inc
or
ret
jl
sbb
das
clc
(bad)
cmp
push
rcl
mov
mov
jno
mov
in
xchg
(bad)
scas
(bad)
(bad)
(bad)
inc
sahf
test
scas
jl
imul
scas
out
js
loop
lea
loope
pop
lahf
(bad)
(bad)
(bad)
push
ds
call
or
mov
clc
addr16
ret
sbb
or
xchg
adc
lds
mov
xor
nop
cmps
pop
xor
xor
fcomp
add
stos
out
ins
lea
pop
std
pop
jae
shl
imul
adc
ret
inc
xchg
shl
add
int
mov
stos
mov
gs
adc
push
jmp
jbe
pop
aam
push
push
jns
mov
rcl
sar
add
xlat
sbb
shr
dec
cwde
lahf
sbb
pop
cld
(bad)
(bad)
(bad)
jmp
jge
cld
pusha
pusha
icebp
xor
inc
stos
and
push
mov
xchg
jmp
jmp
sub
jge
(bad)
xor
sub
inc
push
movs
push
pusha
int
dec
in
mov
bnd
fs
test
mov
add
jmp
mov
test
xor
ins
adc
push
int3
sbb
scas
mov
(bad)
(bad)
(bad)
jg
xor
push
and
push
ss
mov
mov
pop
dec
and
shl
hlt
xor
mov
(bad)
(bad)
push
xchg
and
add
mov
clc
and
dec
les
jecxz
loopne
inc
xchg
xor
push
jno
ficom
mov
pop
in
rol
loopne
inc
(bad)
xchg
movs
xor
mov
(bad)
(bad)
jmp
lea
ja
ja
loope
rcr
sbb
std
xor
ins
add
ja
scas
cli
pop
sbb
push
call
mov
in
dec
iret
or
out
test
repz
shl
push
pop
mov
(bad)
(bad)
jmp
mov
mov
and
mov
mov
scas
sub
cmp
push
lahf
jmp
jmp
setb
sbb
and
popa
cmp
jmp
sahf
retf
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
jle
jp
cmp
jns
sbb
or
add
adc
call
inc
pusha
test
jg
mov
fmul
and
pop
sar
mov
lahf
and
(bad)
(bad)
fbld
out
or
and
inc
mov
jecxz
jb
inc
not
sub
cmp
jmp
dec
loopne
fbld
cwde
outs
add
adc
cmp
sub
(bad)
(bad)
mov
mov
ss
add
mov
adc
clc
sar
ja
loope
(bad)
push
lock
and
or
shl
(bad)
(bad)
call
cmc
fcmovnbe
ret
cmp
and
cli
inc
dec
idiv
push
ret
(bad)
(bad)
(bad)
(bad)
mov
dec
xor
lods
jg
dec
out
addr16
aam
pop
out
cld
jl
hlt
dec
ret
jnp
in
mov
and
cmp
or
cmps
dec
mov
(bad)
dec
test
inc
das
aad
cmps
movs
mov
js
iret
int
and
mov
ja
(bad)
(bad)
dec
adc
adc
mov
xchg
icebp
loopne
addr16
adc
(bad)
(bad)
(bad)
fisubr
enter
push
pusha
and
imul
jmp
or
ja
aaa
into
push
jmp
mov
aam
xchg
mov
(bad)
(bad)
jns
sub
xor
pop
mov
adc
dec
ss
xor
ror
std
inc
sbb
gs
nop
mov
movs
ins
test
inc
shl
cdq
jno
out
ret
jg
push
fcomp
aam
pop
push
mov
xchg
inc
sbb
lock
or
(bad)
call
outs
pop
sti
icebp
enter
or
cmc
dec
rol
or
mov
pop
imul
pop
or
or
movs
bound
mov
into
inc
mov
xor
(bad)
(bad)
(bad)
mov
cmp
xor
neg
xor
and
mov
aas
push
lods
ror
add
(bad)
(bad)
dec
fmul
dec
icebp
cmp
sub
sbb
xor
jmp
lds
sub
(bad)
icebp
test
(bad)
inc
stc
xchg
or
sar
mov
add
mov
(bad)
(bad)
add
in
push
scas
pop
add
mov
sub
mov
jp
call
les
mov
xchg
pop
test
sbb
jne
sbb
adc
dec
sbb
xchg
xor
loop
(bad)
(bad)
mov
std
ss
mov
push
or
loop
sub
and
lock
(bad)
mov
stos
sub
cmp
enter
sbb
pop
(bad)
(bad)
jmp
sub
xor
pop
and
pop
sub
cmp
stc
out
clc
ss
push
mov
cmp
inc
retf
push
or
mov
js
add
sbb
enter
pop
jp
das
jl
ins
test
or
(bad)
(bad)
call
jle
fcmovb
xor
sub
xchg
push
lock
xchg
cmp
cmps
ss
lahf
jle
test
(bad)
(bad)
(bad)
(bad)
cmp
ins
jbe
jae
lahf
nop
cmc
mov
imul
jne
data16
out
mov
ins
or
mov
inc
add
add
inc
out
cmp
aas
jo
sub
imul
lods
setne
sbb
es
(bad)
(bad)
(bad)
(bad)
cmp
call
enter
mov
xor
xchg
int
lods
xchg
adc
(bad)
(bad)
(bad)
mov
lahf
in
fs
test
xor
inc
pop
cs
int
lods
or
adc
push
dec
in
je
(bad)
(bad)
jmp
test
add
inc
mov
push
lds
das
(bad)
popa
dec
out
mov
xlat
adc
or
jmp
mov
sub
daa
(bad)
mov
leave
jbe
std
jmp
mov
mov
arpl
jge
sbb
(bad)
lds
cmps
cwde
mov
into
popf
stos
pop
lock
(bad)
sti
outs
inc
lods
dec
fbstp
push
push
dec
cdq
lock
or
pop
lds
gs
inc
ja
and
iret
popf
nop
movs
std
push
pushf
scas
adc
sbb
xor
loope
or
mov
ja
mov
pop
(bad)
(bad)
(bad)
inc
pushf
pop
(bad)
fcmove
es
test
ret
jp
xchg
(bad)
dec
pop
xor
cmp
sub
ins
ds
dec
adc
(bad)
jl
dec
push
pusha
loope
fnstsw
or
xlat
fimul
retf
cmp
scas
(bad)
(bad)
(bad)
cmp
or
jge
leave
jae
and
cwde
jb
test
out
shl
ds
mov
sub
test
jge
push
(bad)
(bad)
(bad)
mov
push
popf
icebp
in
push
icebp
dec
daa
scas
mov
mov
or
pop
adc
(bad)
(bad)
jmp
(bad)
push
push
cmp
cmp
inc
sub
mov
push
mov
mov
pop
push
xchg
dec
(bad)
(bad)
(bad)
(bad)
cmp
sbb
and
sub
jecxz
cmc
mov
ins
mov
sub
std
scas
jle
popa
ds
dec
iret
js
sub
dec
int
sub
push
fisubr
inc
sbb
(bad)
call
mov
and
loopne
sub
and
push
mov
xchg
jbe
push
and
cmc
dec
jmp
xchg
jmp
adc
add
xchg
push
push
and
and
(bad)
(bad)
jmp
and
jae
mov
fcom
in
jmp
lods
adc
sbb
rcl
stos
ret
pop
ficom
pusha
dec
shl
dec
lods
cmp
cmp
add
idiv
mov
mov
dec
mov
icebp
loope
jg
or
les
shr
std
xrelease
push
add
(bad)
(bad)
call
and
and
cmp
mov
lea
retf
mov
mov
and
push
mov
sbb
push
call
cld
call
mov
stos
xchg
jl
add
sahf
(bad)
sbb
shr
test
(bad)
(bad)
call
mov
retf
sub
xor
push
(bad)
das
pcmpgtb
jae
dec
in
sbb
cmc
es
jg
inc
cld
pop
sahf
mov
retf
mov
rcr
inc
push
(bad)
xchg
setns
and
adc
into
jo
pop
cmp
shl
(bad)
(bad)
push
imul
jl
sbb
mov
(bad)
(bad)
dec
fild
or
jae
cmps
sbb
xchg
movs
daa
pop
push
or
add
dec
jno
aaa
mov
jae
aad
sub
xchg
sar
xchg
mov
(bad)
in
enter
inc
jo
sub
push
inc
shl
adc
inc
(bad)
inc
cmp
cmps
push
or
mov
rcl
(bad)
(bad)
(bad)
inc
movs
clc
push
retf
jmp
add
inc
adc
and
in
xchg
retf
fs
push
pop
push
or
scas
jno
fcmovnb
push
scas
mov
frstor
and
shr
icebp
(bad)
(bad)
dec
mov
std
pushf
sub
inc
out
inc
in
test
xchg
out
lods
push
lods
dec
jg
dec
inc
clc
cmp
rcl
(bad)
cmp
shl
xor
loopne
pop
mov
sbb
scas
adc
out
dec
idiv
jmp
xchg
sub
cli
mov
adc
push
movs
adc
jmp
call
jo
inc
and
push
push
push
hlt
push
xchg
dec
mov
div
sub
(bad)
push
daa
sub
test
(bad)
push
(bad)
jb
jo
call
je
(bad)
rcr
call
ret
int
jmp
jge
dec
xchg
pop
mov
adc
sub
or
stos
(bad)
(bad)
(bad)
jmp
rcl
div
icebp
mov
push
(bad)
lock
das
inc
scas
out
loope
push
push
sbb
dec
std
aas
mov
xchg
add
mov
or
adc
ret
(bad)
(bad)
(bad)
push
movs
sbb
popf
xor
or
pop
adc
jg
and
inc
fnstenv
jb
(bad)
aaa
(bad)
(bad)
mov
sbb
das
out
mov
inc
test
arpl
into
cmp
das
sar
stc
aam
mov
sti
xchg
aaa
movs
(bad)
fs
jnp
push
xchg
ret
xor
out
(bad)
inc
pop
mov
mov
add
adc
sbb
(bad)
mov
lods
ins
pop
lods
loopne
fstp
cmp
(bad)
(bad)
call
ins
or
mov
hlt
xor
pop
clc
fadd
outs
in
out
push
adc
mov
(bad)
(bad)
(bad)
out
es
ret
call
mov
test
cmp
dec
add
pop
jne
jo
jmp
movs
push
test
(bad)
(bad)
jge
or
mov
fwait
pop
(bad)
mov
popa
xchg
or
xchg
xlat
sub
xor
xor
jg
scas
fisttp
rol
(bad)
out
mov
and
jmp
mov
shl
(bad)
(bad)
(bad)
cmp
es
das
cmps
sbb
cmp
ins
inc
pshufw
xchg
outs
add
shr
push
cmp
push
hlt
popf
jno
mov
push
cli
(bad)
jmp
cmps
daa
jns
retf
mov
push
mov
out
sar
(bad)
inc
push
cwde
js
retf
test
mov
push
jo
jb
lods
sbb
stos
shl
(bad)
(bad)
(bad)
jmp
xor
sub
jl
xchg
dec
cmp
jmp
jge
sbb
retf
ja
jmp
lahf
or
push
cmp
jge
mov
xchg
pop
mov
icebp
pop
and
inc
add
mov
in
test
les
dec
cwde
mov
jecxz
push
in
pop
stos
sbb
or
ficomp
fist
mov
lds
or
es
(bad)
popf
cmp
xor
jecxz
out
cmp
pushf
xchg
inc
and
sbb
xor
fst
sub
mov
mov
mov
std
(bad)
call
cmp
sbb
pop
mov
xchg
cmp
enter
(bad)
mov
and
mov
out
sahf
shl
popa
add
push
mov
mov
sbb
cmp
popa
cmp
(bad)
(bad)
(bad)
inc
jge
imul
add
loopne
stc
xor
add
test
(bad)
call
sti
fstp
jo
test
dec
inc
mov
rcr
cmps
(bad)
(bad)
(bad)
(bad)
jmp
lods
pop
ffreep
(bad)
and
jb
jo
or
sub
mul
push
clc
fmul
mov
(bad)
(bad)
(bad)
jmp
or
push
mov
add
push
outs
sub
sbb
(bad)
(bad)
inc
or
je
jne
push
or
jne
xchg
enter
mov
lods
xor
push
sbb
xchg
mov
dec
inc
aaa
dec
jb
cmps
imul
and
jg
jg
sub
leave
aas
fsubr
jbe
add
pop
sub
test
sbb
or
xor
ja
cmps
ins
lahf
jae
add
(bad)
(bad)
fist
and
inc
iret
sub
fsubr
mov
arpl
icebp
cmps
xchg
ret
aaa
cmp
hlt
jbe
or
je
test
xor
xor
jg
in
out
cmp
mov
stc
(bad)
(bad)
(bad)
push
xchg
pop
add
dec
mov
jbe
int
into
or
jbe
mov
test
jmp
(bad)
(bad)
aas
sbb
lock
sbb
pop
add
cmc
dec
ja
data16
sahf
jns
and
scas
pop
mov
sub
gs
(bad)
(bad)
call
in
scas
push
cli
lahf
das
xchg
mov
adc
cmp
stc
or
repz
out
int
xor
(bad)
(bad)
jmp
jb
dec
int
ja
out
sar
stos
cmp
sahf
cs
rcr
ret
clc
outs
(bad)
(bad)
(bad)
push
dec
test
popa
push
inc
popa
or
cdq
jl
sbb
cmp
mov
cmp
adc
sub
push
call
(bad)
(bad)
(bad)
dec
test
cmp
jns
sbb
inc
int
mov
leave
jmp
je
(bad)
(bad)
dec
or
dec
mov
jb
rol
add
inc
or
data16
mov
pop
(bad)
(bad)
(bad)
call
or
push
xchg
sub
stc
push
jne
and
mov
sub
sbb
(bad)
(bad)
(bad)
aas
retf
xchg
or
call
cmc
jmp
push
jg
data16
mov
or
mov
(bad)
(bad)
(bad)
jnp
std
ins
and
clc
mov
or
mov
pop
mov
push
jmp
(bad)
(bad)
call
outs
adc
and
or
fist
sub
popf
test
sub
ins
xchg
push
inc
cli
(bad)
(bad)
fisubr
retf
data16
dec
(bad)
xor
(bad)
(bad)
push
push
xchg
mov
je
xchg
in
fadd
push
push
and
fimul
adc
jmp
pop
and
push
enter
mov
fstp
inc
jae
(bad)
(bad)
(bad)
(bad)
dec
add
xchg
enter
loopne
pop
and
add
push
adc
sbb
mov
(bad)
(bad)
(bad)
push
retf
fcomp
jnp
data16
mov
lea
mov
or
pop
in
in
sub
mov
(bad)
(bad)
cmp
pop
xchg
cld
push
shl
push
jns
sub
(bad)
popf
pusha
cmc
cmps
ss
(bad)
(bad)
dec
iret
movs
mov
push
push
pop
mov
mov
push
cmps
jp
popf
test
mov
pushf
(bad)
mov
or
aad
mov
pop
(bad)
pop
repz
(bad)
cli
or
stos
ja
pop
in
popf
mov
test
call
pop
xor
mov
mov
sti
popf
daa
fdivr
jmp
stos
fstp
cmp
imul
cwde
xchg
xchg
inc
loope
call
call
inc
fdiv
out
(bad)
mov
out
ins
out
dec
inc
jle
pop
jb
(bad)
aam
dec
xor
jg
test
adc
imul
mov
dec
out
sbb
movs
sbb
hlt
(bad)
enter
mov
(bad)
sti
xchg
hlt
imul
mul
(bad)
mov
push
cmp
in
xor
in
dec
xchg
sti
push
std
cmp
(bad)
(bad)
jmp
and
jmp
sti
jo
and
cmp
mov
push
enter
jmp
movs
add
scas
call
stos
jecxz
(bad)
(bad)
out
cli
ror
pusha
dec
arpl
dec
sbb
das
and
imul
sti
add
sahf
repnz
call
(bad)
test
or
popf
xor
out
fisttp
dec
cmp
push
in
inc
sub
sbb
clc
cmp
mov
mov
jno
mov
and
jl
outs
clc
jmp
stc
inc
or
fidivr
push
sub
cmp
inc
push
(bad)
mov
test
test
movs
call
add
push
pop
scas
lods
das
out
(bad)
(bad)
(bad)
fimul
push
fsubr
lds
and
xor
xchg
sub
pslld
cwde
mov
(bad)
push
mov
jae
lock
icebp
push
int3
sbb
or
lods
or
pushf
jmp
pusha
std
(bad)
(bad)
jg
fs
sbb
sub
xor
and
xchg
test
jg
xchg
shl
adc
xchg
push
ror
lea
mov
(bad)
or
out
jne
(bad)
push
sub
out
mov
cmp
test
push
xor
loop
call
xchg
std
fnsave
xlat
push
or
mov
and
fwait
and
les
sub
vpmacssdqh
fucomi
leave
cld
frstor
lock
in
in
pop
inc
je
(bad)
push
(bad)
or
movs
call
xor
scas
and
mov
lea
std
(bad)
dec
pop
aad
mov
call
mov
stos
or
nop
push
test
sub
mov
(bad)
and
arpl
call
xor
xor
ror
dec
daa
out
(bad)
fisub
dec
fadd
aaa
ret
repnz
jbe
mov
hlt
xor
cmc
cmp
call
pop
(bad)
and
pop
mov
jbe
xchg
and
and
sti
loopne
cmp
(bad)
out
mov
push
jb
pop
(bad)
aas
in
dec
sar
(bad)
(bad)
call
hlt
ja
call
push
sub
xchg
adc
mov
push
mov
push
out
movs
cmp
(bad)
(bad)
call
dec
scas
repnz
sbb
popa
sub
enter
sub
adc
clc
(bad)
(bad)
call
or
push
jo
sbb
in
cmp
in
add
int
add
dec
in
stc
lahf
test
rcr
cld
fmul
scas
into
mov
jg
(bad)
(bad)
cmp
pop
hlt
std
mov
mov
mov
pop
xchg
call
fdiv
(bad)
(bad)
(bad)
inc
jno
sbb
sub
mov
popf
cwde
or
inc
fcmovb
pusha
(bad)
iret
and
(bad)
mov
jl
jecxz
cmps
fisub
inc
enter
fist
popf
das
xchg
sub
leave
push
cld
(bad)
(bad)
(bad)
fmul
mov
in
push
push
scas
scas
cmp
out
xchg
xchg
pop
imul
(bad)
call
outs
sar
add
push
xchg
and
out
adc
ins
mov
shl
cs
ror
(bad)
(bad)
jmp
xor
push
rcl
movs
mov
(bad)
dec
add
jne
push
xor
jle
inc
mov
push
loop
fcomip
inc
xor
hlt
jmp
pop
cmp
dec
mov
clc
xor
movs
pop
lods
mov
mov
cmc
mov
pop
sub
cli
out
xchg
enter
sbb
test
(bad)
(bad)
push
aaa
dec
test
call
xlat
cs
add
out
adc
or
and
push
out
sar
(bad)
jmp
in
sub
push
adc
ror
scas
test
loopne
(bad)
mov
fisubr
repz
fld
xor
nop
retf
movs
mov
push
xchg
add
call
ins
mov
jg
ret
ins
das
int3
add
(bad)
(bad)
jmp
mov
test
int3
fs
add
sub
popa
imul
cmp
inc
ret
xchg
lea
test
sbb
jmp
ja
adc
in
call
cld
push
imul
pop
sub
xchg
pushf
adc
push
(bad)
(bad)
(bad)
inc
ja
test
sar
add
ror
jo
push
call
aaa
sub
rcr
jp
jl
push
retf
rol
outs
push
pop
push
jno
and
sbb
imul
mov
mov
test
sub
enter
push
(bad)
(bad)
dec
sti
mov
movs
mov
sbb
or
add
sbb
(bad)
(bad)
call
mov
jmp
sar
xchg
fstp
addr16
jb
cmps
(bad)
dec
lock
ret
iret
neg
test
(bad)
aaa
jb
sub
dec
xlat
dec
call
das
(bad)
and
iret
in
push
mov
sub
and
cmp
(bad)
(bad)
jmp
jl
pop
fidiv
mov
push
loopne
imul
popf
inc
sub
push
mov
sbb
and
mov
mov
(bad)
(bad)
jmp
adc
mov
test
aad
outs
daa
push
in
push
adc
xchg
xchg
and
popf
dec
jecxz
mov
mov
fs
nop
xchg
pop
mov
cmps
sbb
in
(bad)
(bad)
(bad)
(bad)
fidiv
aas
cwde
aaa
sahf
ss
outs
cld
popf
cvtps2pi
in
arpl
sub
jns
daa
cmp
add
(bad)
(bad)
mov
mov
fsin
stos
sbb
icebp
push
cmps
mov
sbb
(bad)
(bad)
jg
jno
or
scas
add
push
sub
push
add
sub
imul
(bad)
(bad)
inc
aaa
jg
jns
add
rcr
or
fadd
repnz
jmp
cmp
xor
jg
(bad)
(bad)
inc
push
adc
sbb
lods
stc
adc
(bad)
repz
and
mov
add
(bad)
push
inc
fwait
hlt
adc
xchg
aad
push
mov
sbb
iret
dec
loopne
lock
jg
xor
adc
stos
and
les
into
jb
jns
sbb
(bad)
dec
dec
loope
lea
add
xor
in
lods
adc
(bad)
push
jg
mov
mov
and
(bad)
sub
ffree
fisub
(bad)
(bad)
jmp
(bad)
mov
xchg
shr
mov
cld
imul
test
(bad)
(bad)
(bad)
call
or
push
les
mov
ss
cmp
scas
imul
dec
cwde
mov
jg
or
inc
jnp
call
js
loop
pop
mov
pop
dec
jp
jae
mov
xlat
popa
int
aam
scas
addr16
in
(bad)
(bad)
push
pop
data16
stc
stos
and
cmps
mov
push
sub
mov
mov
inc
mov
outs
mov
or
out
sbb
or
in
js
(bad)
(bad)
push
mov
cmps
rcr
dec
push
xor
mov
out
(bad)
push
ret
mov
(bad)
fist
adc
cmps
into
(bad)
add
das
pop
out
scas
xchg
mov
adc
mov
jno
clc
sti
(bad)
(bad)
(bad)
(bad)
jmp
mov
jge
sti
loope
jmp
dec
sbb
fild
cmp
int
(bad)
fcomip
push
jecxz
mov
xchg
pop
and
outs
mov
stc
test
retf
inc
mov
mov
(bad)
mov
repnz
add
(bad)
cmp
test
inc
(bad)
(bad)
(bad)
jmp
xlat
(bad)
aaa
mov
push
inc
mov
adc
push
mov
mov
outs
sub
(bad)
(bad)
out
clc
mov
pusha
and
add
movs
scas
jmp
je
inc
idiv
(bad)
(bad)
(bad)
inc
in
jecxz
add
ds
clc
xchg
imul
jo
mov
push
mul
loop
outs
add
das
mov
inc
mov
test
cmp
clc
add
(bad)
in
not
jne
shl
sti
dec
lds
mov
in
pushf
xchg
xchg
mov
sub
jp
(bad)
(bad)
(bad)
jmp
mov
cmp
dec
call
and
sbb
fisttp
retf
xchg
jl
and
add
call
dec
sahf
dec
mov
inc
(bad)
(bad)
(bad)
jg
push
cmps
(bad)
pop
nop
clc
cwde
repz
mov
push
mov
dec
xchg
ja
jmp
(bad)
jmp
pop
std
and
jno
or
(bad)
aas
sub
addr16
xor
call
popa
jle
aaa
jno
js
(bad)
xchg
xor
je
aam
shr
inc
stos
test
dec
adc
cmp
test
mov
or
(bad)
(bad)
(bad)
(bad)
cli
sar
push
adc
es
cmp
push
sbb
or
cmps
mov
push
lahf
std
sbb
outs
fild
jne
push
int
jo
clc
mov
pusha
sahf
or
mov
ins
(bad)
and
pop
lea
and
mov
push
lds
and
sahf
xchg
add
cmp
(bad)
jg
popf
sub
call
push
adc
scas
int3
lods
mov
sub
je
cmp
ret
loopne
mov
rcr
out
mov
ret
test
clc
das
mul
(bad)
(bad)
(bad)
call
test
sbb
sub
or
in
mul
and
add
fisttp
loope
fsubp
xor
jne
inc
in
add
xchg
mov
retf
sub
lahf
xor
(bad)
mov
mov
(bad)
je
cld
jge
or
mov
jg
and
(bad)
mov
(bad)
(bad)
(bad)
call
mov
and
into
pop
fcom
movs
mov
mov
outs
in
mov
push
pop
lods
mov
(bad)
(bad)
(bad)
dec
ja
cli
jmp
hlt
inc
sbb
push
push
(bad)
movs
xlat
loop
adc
into
sub
or
sar
push
push
pop
ror
mov
(bad)
jg
and
mov
repnz
cmp
(bad)
out
jbe
xchg
cmp
mov
call
popf
jl
or
loop
mov
pop
cli
inc
xchg
xor
pop
inc
js
sub
movs
adc
js
(bad)
(bad)
(bad)
jg
sahf
cli
and
dec
out
pop
dec
inc
push
inc
ret
xor
call
pop
rcl
inc
mov
push
push
add
popf
jne
popa
rol
mov
mov
in
and
cmp
sub
inc
je
stc
retf
lods
mov
push
fdivrp
out
dec
nop
ror
lods
(bad)
(bad)
(bad)
jg
sub
cs
daa
or
ficomp
push
retf
sbb
xor
outs
inc
(bad)
(bad)
(bad)
call
aam
cmp
mov
mov
add
push
popf
mov
or
mov
jae
(bad)
call
mov
fcomp
div
pushf
les
dec
nop
or
fsubr
gs
(bad)
(bad)
jmp
mov
add
mov
xor
call
inc
mov
inc
mov
xadd
mov
(bad)
(bad)
(bad)
(bad)
(bad)
adc
jmp
aad
sbb
cmp
rol
adc
jmp
(bad)
(bad)
(bad)
clc
jle
xchg
xchg
mov
inc
adc
cmps
sar
and
jno
xor
mov
js
or
add
imul
dec
loope
and
lods
add
aad
(bad)
das
jb
xchg
dec
inc
retf
in
or
(bad)
(bad)
call
push
mov
mov
sub
es
adc
add
mov
(bad)
(bad)
(bad)
call
in
ins
and
xchg
and
js
jecxz
cmp
es
push
cdq
and
shl
push
das
(bad)
(bad)
(bad)
(bad)
fdivr
sub
outs
icebp
pop
movs
in
mov
retf
(bad)
jg
pop
mov
cmp
jo
add
(bad)
call
mov
jg
in
rcl
push
aaa
push
in
(bad)
(bad)
(bad)
jg
mov
dec
lods
int3
out
and
jbe
scas
fs
sbb
int
leave
sbb
retf
ds
and
jmp
ret
inc
jg
inc
adc
dec
sbb
pop
lock
add
add
and
dec
sub
inc
mov
xchg
ret
ins
mov
jns
and
pop
jg
ja
std
repz
(bad)
(bad)
jmp
jne
shr
or
rol
imul
xchg
repnz
push
inc
sbb
(bad)
(bad)
call
lea
scas
pop
into
test
pop
and
popa
xor
inc
sub
cmc
lods
mov
or
dec
(bad)
inc
aas
sahf
sar
aad
sti
cwde
(bad)
dec
(bad)
cmp
push
(bad)
sti
nop
jmp
(bad)
(bad)
jmp
jl
mov
clc
cmp
cmp
add
or
or
add
(bad)
(bad)
out
clc
mov
push
lods
in
stos
daa
retf
mov
shl
mov
fbld
into
and
adc
xor
or
imul
jmp
scas
cli
(bad)
jmp
dec
std
fdivr
mov
xchg
call
(bad)
push
and
push
mov
dec
mov
pop
test
push
fs
sub
loop
mov
(bad)
jb
jg
dec
fmul
arpl
mov
jp
fs
sbb
pop
inc
hlt
mov
pop
cmp
mov
mov
cli
test
dec
sub
(bad)
(bad)
jmp
dec
adc
arpl
add
push
pop
push
adc
mov
mov
ins
pop
inc
mov
dec
jae
pop
add
dec
test
(bad)
(bad)
(bad)
inc
ins
cmp
icebp
ins
mov
shr
std
daa
lahf
pop
dec
jmp
sub
retf
xchg
sahf
(bad)
adc
sub
(bad)
dec
les
dec
ins
sub
xchg
adc
in
(bad)
(bad)
inc
add
aaa
ins
(bad)
cdq
ret
shr
inc
test
cmp
adc
nop
call
adc
out
cmp
cmp
cmps
pop
loop
loope
cmp
(bad)
(bad)
(bad)
(bad)
jp
jg
stos
dec
loop
jge
outs
in
dec
inc
mov
rcl
push
je
or
(bad)
(bad)
(bad)
jmp
jg
or
out
cmp
cmps
jnp
fist
jae
cli
jnp
(bad)
call
jg
inc
dec
loope
(bad)
(bad)
(bad)
call
mov
mov
push
sahf
dec
jge
shl
pop
cli
daa
iret
(bad)
(bad)
mov
mov
xchg
pop
test
xchg
mov
aad
ficomp
push
dec
hlt
and
push
push
sub
sub
(bad)
(bad)
(bad)
jmp
movs
test
mov
pusha
pop
mov
mov
mov
xor
and
mov
call
jns
rcl
fidivr
jp
shl
xor
mov
gs
loopne
ret
(bad)
dec
add
jo
add
or
mov
jmp
mov
push
mov
out
mov
sar
(bad)
(bad)
(bad)
fiadd
sbb
pop
lea
(bad)
mov
push
jne
pop
loope
cld
dec
(bad)
mov
mov
aaa
push
in
fs
fldenv
fdivr
iret
cmc
xor
scas
adc
mov
mov
out
sub
dec
mov
jl
dec
aam
inc
xor
adc
hlt
(bad)
push
and
pop
dec
dec
repnz
add
add
(bad)
(bad)
jg
(bad)
jns
(bad)
push
pop
test
cmp
dec
sbb
mov
(bad)
jmp
clc
jns
mov
leave
cmp
xor
pop
jns
daa
fldenv
inc
jns
pop
movs
push
clc
jmp
retf
inc
jne
out
mov
mov
mov
into
in
call
(bad)
dec
pop
xchg
movs
ret
mov
(bad)
adc
jecxz
mov
mov
jecxz
(bad)
mov
fsub
mov
jmp
sar
jle
stc
out
(bad)
(bad)
(bad)
std
ret
sbb
mov
add
retf
adc
lods
pushf
scas
sti
(bad)
jg
into
in
xchg
in
popf
jno
gs
xchg
mov
test
in
sbb
jno
lods
jae
jno
in
push
sub
add
clc
push
imul
mov
(bad)
(bad)
mov
xchg
jg
push
or
jbe
arpl
call
cld
xchg
leave
adc
(bad)
(bad)
dec
or
mov
pushf
lods
mov
push
call
test
(bad)
dec
pusha
mov
xchg
xchg
dec
or
push
mov
pop
fstp
mov
cld
(bad)
stc
mov
sub
sbb
(bad)
(bad)
jg
mov
or
call
fsubr
xchg
ror
sub
fcomip
(bad)
jmp
and
test
sbb
or
out
add
ror
(bad)
push
sahf
mov
(bad)
(bad)
out
cli
jno
pushf
leave
xchg
add
dec
lock
cmps
arpl
movs
arpl
in
and
call
ins
jmp
cmp
ins
pop
and
popf
lods
push
aas
pop
add
imul
cmp
(bad)
mov
(bad)
inc
sub
daa
out
movs
xchg
(bad)
mov
aaa
xor
lahf
push
mov
rcr
and
mov
lahf
dec
(bad)
call
add
add
hlt
std
mov
mov
and
call
sbb
dec
aad
hlt
cmp
lock
sahf
mov
mov
push
jno
adc
lods
pop
mov
jmp
test
inc
push
mov
sub
jl
adc
xor
cli
xor
(bad)
call
call
jmp
std
out
out
ja
mov
sbb
mov
mov
jl
(bad)
(bad)
dec
lahf
pop
int
or
nop
jge
pop
jnp
in
jo
aad
aad
jmp
ss
pop
std
(bad)
jmp
inc
push
rol
lock
test
mov
or
movs
fisubr
cwde
pop
ins
push
mov
(bad)
(bad)
jmp
les
mov
inc
pop
lods
inc
cwde
adc
les
mov
arpl
push
shl
shl
mov
sub
mov
jae
sti
in
jg
and
adc
int
xchg
add
cs
pop
inc
jg
cmp
pushf
and
inc
test
fbstp
repz
ret
(bad)
call
dec
ret
push
xchg
fxch
sub
sbb
mov
int
aam
mov
(bad)
(bad)
(bad)
push
cmp
and
aad
mov
jp
mov
pop
jge
(bad)
fs
loope
inc
bound
(bad)
(bad)
dec
outs
ja
out
sub
or
stos
inc
jg
icebp
push
jmp
push
sub
(bad)
dec
mov
pop
jp
es
loop
arpl
pop
xor
sub
mov
add
je
cmp
dec
test
out
mov
or
sbb
add
(bad)
(bad)
fcomip
jecxz
push
neg
cmc
pushf
xor
outs
leave
xor
push
jb
cs
(bad)
jmp
jle
inc
loope
jns
sbb
fcom
cld
xor
hlt
push
push
ud0
out
cli
jmp
mov
loop
imul
call
jns
(bad)
jmp
pusha
xchg
mov
cld
push
add
xchg
nop
jp
mov
(bad)
xor
loopne
(bad)
(bad)
(bad)
jmp
dec
movs
dec
ficom
pop
pushf
arpl
ret
arpl
push
imul
sbb
in
(bad)
(bad)
(bad)
(bad)
jmp
call
pcmpgtw
int3
sub
mov
xchg
and
xor
jmp
mov
and
(bad)
and
cmp
int3
out
xchg
adc
neg
push
or
repz
jb
cs
out
mov
sbb
jne
(bad)
enter
(bad)
(bad)
push
mov
mov
or
mov
retf
in
jne
fbstp
mov
sub
sub
call
scas
jno
sub
lods
sub
int
pusha
in
out
movs
pop
popa
ins
(bad)
(bad)
(bad)
push
jmp
mov
data16
test
sub
cld
pop
inc
in
cmp
(bad)
(bad)
inc
dec
or
inc
sub
push
repz
cmp
ins
out
enter
sbb
push
push
add
cmp
xor
mov
out
inc
fisttp
sar
iret
cld
push
stos
movs
(bad)
(bad)
(bad)
dec
sub
test
rcl
js
stos
out
push
bound
cmc
adc
dec
(bad)
std
adc
or
jnp
jno
inc
loop
call
daa
call
jbe
js
mov
dec
movs
ins
or
cmp
sub
mov
push
dec
cmp
xor
push
pop
movs
les
or
mov
(bad)
jg
aam
lsl
or
stc
jns
mov
cmp
pop
mov
fcomip
call
push
pop
aaa
scas
adc
call
add
pop
cwde
(bad)
js
pop
cmp
stos
pop
adc
push
dec
sbb
bound
(bad)
dec
test
jmp
jge
std
push
outs
js
shl
xchg
movs
(bad)
arpl
scas
push
or
rcl
inc
cli
test
add
add
test
or
inc
and
mov
mov
and
inc
sub
(bad)
(bad)
push
and
imul
fadd
cmp
outs
int
jl
(bad)
(bad)
(bad)
call
repnz
inc
push
pop
cli
daa
sbb
sub
retf
mov
cld
pop
loop
sbb
repz
scas
call
fcomp
pop
jmp
sbb
fst
xchg
add
(bad)
call
fldcw
push
js
inc
dec
push
mov
push
dec
jns
aas
ss
(bad)
(bad)
mov
in
or
ins
mov
imul
sbb
jbe
ret
leave
cmp
inc
mov
dec
cmp
adc
pop
pop
mov
(bad)
sub
and
js
mov
call
sub
adc
or
mov
in
xor
scas
mov
in
aam
jl
(bad)
call
mov
xor
jnp
push
iret
imul
adc
jmp
(bad)
push
dec
push
rcr
and
gs
inc
and
dec
and
xlat
(bad)
call
cmp
rol
jp
cmp
xor
mov
idiv
jmp
call
pusha
popf
mov
and
adc
sbb
cmp
loop
(bad)
mov
xchg
pop
inc
pushf
aam
outs
xchg
inc
nop
adc
mov
sbb
mov
lods
pop
cmp
adc
ss
pop
inc
mov
push
push
aam
adc
int
retf
mov
(bad)
(bad)
jmp
sbb
ja
inc
loopne
out
(bad)
jmp
imul
push
mov
das
clc
(bad)
(bad)
jnp
xchg
adc
jnp
js
in
or
mov
test
in
jp
dec
fs
(bad)
(bad)
inc
clc
inc
xchg
mov
movups
jl
mov
mov
xor
inc
lds
(bad)
(bad)
(bad)
jmp
jae
sub
fisub
add
aaa
test
xor
das
push
into
mov
(bad)
call
jmp
inc
sbb
jmp
pop
std
or
(bad)
(bad)
dec
xor
int3
add
mov
jmp
or
inc
jmp
ins
ja
sub
push
pop
(bad)
loope
fmul
mov
jmp
xor
cmp
or
daa
cmp
inc
xor
cmp
cmps
jno
jg
fcos
(bad)
jmp
jle
add
inc
cwde
cli
in
push
cmc
stos
and
cmp
imul
(bad)
call
mov
outs
dec
mov
add
hlt
jns
pop
fadd
rol
jb
call
cmp
int3
xchg
xor
sbb
movs
sub
sub
imul
cmps
popf
and
iret
xchg
ds
pop
jmp
push
aam
pop
test
push
mov
jno
bound
loope
push
mov
lahf
push
inc
pushf
xchg
push
mov
jmp
pop
icebp
adc
cli
data16
shr
test
xchg
data16
mov
es
in
aam
dec
add
(bad)
(bad)
call
fnstenv
fst
out
push
mov
(bad)
out
test
jmp
or
lods
(bad)
(bad)
inc
ja
movs
jns
std
mov
int
mov
imul
(bad)
(bad)
(bad)
dec
repz
ds
test
bound
ror
pop
fisub
dec
lea
sbb
pop
mov
(bad)
(bad)
lods
push
mov
cmps
and
pusha
mov
(bad)
mov
aad
add
jl
or
(bad)
(bad)
call
ficomp
lds
adc
fnstcw
retf
sub
and
call
cmc
loop
inc
adc
lock
xchg
cmp
cmp
aas
push
add
(bad)
call
das
xchg
sub
jl
push
sbb
or
sbb
imul
mov
(bad)
(bad)
(bad)
(bad)
(bad)
std
mov
fisub
xor
pop
or
cmps
sub
and
xchg
movs
mov
adc
sbb
lea
lods
adc
and
dec
sub
movs
jle
daa
sbb
out
xor
cmp
mov
or
(bad)
sub
fcom
test
ins
push
stos
and
dec
adc
or
jmp
fisub
loop
or
xor
pop
adc
xchg
dec
jmp
ret
jns
xor
jg
imul
ds
out
outs
cmp
(bad)
(bad)
(bad)
jle
dec
lods
adc
sub
mov
popf
ss
out
nop
iret
in
xor
imul
push
lds
fs
xor
pop
inc
and
dec
iret
add
(bad)
(bad)
(bad)
inc
xchg
push
sar
fidivr
pusha
(bad)
cld
data16
xor
popf
dec
loope
adc
push
and
adc
(bad)
(bad)
(bad)
dec
out
pop
push
mov
xchg
es
out
inc
adc
pop
push
push
stos
and
vpsubd
mov
(bad)
push
fs
push
mov
push
rcl
mov
sar
push
retf
or
mov
cmp
push
adc
sbb
jno
sub
fdiv
adc
movs
(bad)
clc
(bad)
(bad)
call
rcl
dec
ds
test
(bad)
clc
jne
inc
jge
cmp
jg
or
sbb
cdq
sub
adc
stos
inc
popa
ss
shl
xlat
jns
in
mov
push
cmc
add
cmc
push
icebp
mov
xor
mov
loop
jg
pop
das
imul
xchg
ss
jle
retf
pop
inc
popa
add
imul
push
mov
jbe
and
fidiv
sub
xor
in
in
dec
sar
ret
(bad)
(bad)
in
pop
inc
and
retf
and
mov
pop
loopne
jecxz
xchg
push
jmp
std
push
push
cmp
(bad)
(bad)
(bad)
dec
test
adc
out
sbb
shl
mov
add
adc
(bad)
jmp
mov
push
xchg
mov
push
mov
(bad)
(bad)
jmp
in
dec
pop
sbb
add
push
ins
inc
fist
adc
sub
mov
adc
(bad)
jg
(bad)
clc
repz
and
neg
cld
mov
jo
call
cmps
and
mov
ret
xchg
lods
adc
mov
sub
cmps
xor
adc
arpl
pop
sbb
jmp
dec
cmp
(bad)
(bad)
(bad)
(bad)
in
adc
push
add
jge
outs
loope
push
push
sub
or
push
lea
or
pop
les
jle
(bad)
(bad)
call
aad
scas
pusha
mov
div
neg
nop
pop
int
shl
cmp
(bad)
(bad)
(bad)
(bad)
fadd
adc
jmp
add
pop
add
cmp
or
popa
sbb
adc
(bad)
call
(bad)
fdivr
(bad)
push
int3
in
in
adc
call
(bad)
mov
add
(bad)
aam
and
dec
mov
mov
push
out
mov
call
cmp
outs
neg
neg
pop
loop
jae
dec
mov
(bad)
(bad)
inc
scas
in
call
push
movs
and
pusha
or
adc
pushf
mov
cmps
arpl
(bad)
test
xor
pop
or
scas
fstp
stos
icebp
push
(bad)
ror
(bad)
(bad)
(bad)
inc
sahf
fld
add
ss
jbe
(bad)
lock
inc
sub
add
mov
mov
(bad)
and
push
not
dec
rol
add
adc
stc
es
fisub
shl
jmp
(bad)
out
ins
scas
inc
mov
scas
pop
scas
sub
sbb
gs
mov
bound
rcl
mov
(bad)
(bad)
jmp
les
(bad)
sub
loopne
shl
imul
(bad)
(bad)
push
arpl
pop
stc
fsubrp
mov
ins
rol
(bad)
clc
maskmovq
test
pop
(bad)
(bad)
(bad)
dec
dec
jg
xor
xor
xor
js
(bad)
cmps
inc
xchg
inc
retf
(bad)
(bad)
(bad)
call
std
xchg
mov
retf
pop
stc
adc
imul
aaa
and
pop
shl
jo
cmp
inc
cld
data16
int
int3
xlat
inc
jno
dec
or
adc
in
loopne
(bad)
leave
and
sbb
push
(bad)
(bad)
(bad)
mov
in
pop
or
sbb
aas
mov
aad
leave
push
(bad)
(bad)
jmp
sub
xchg
outs
cmp
js
into
jge
imul
add
mov
(bad)
mov
mov
rol
in
mov
inc
fmul
jg
(bad)
(bad)
(bad)
inc
or
cli
mov
nop
mov
lods
data16
mov
(bad)
push
in
daa
fstp
les
int
sbb
ins
jle
es
xchg
mov
ficomp
or
sbb
(bad)
(bad)
dec
daa
xor
stos
aad
scas
fstp
out
pop
fisttp
sbb
sub
mov
mov
mov
mov
loopne
(bad)
call
add
das
sub
cmps
je
lea
cmp
fisttp
jl
imul
std
(bad)
out
xchg
mov
retf
fisttp
sbb
scas
dec
cmp
(bad)
mov
ins
pop
(bad)
xchg
clc
(bad)
(bad)
call
mov
pop
push
cs
(bad)
into
scas
cmc
aas
cmp
and
xchg
(bad)
out
rol
pushf
(bad)
dec
pusha
inc
aaa
movs
test
movs
sub
std
mov
cli
lods
(bad)
mov
inc
in
push
das
pop
hlt
fistp
pop
dec
jo
xlat
(bad)
lods
rcl
mov
(bad)
jmp
mov
and
mov
fnsave
mov
ror
jge
add
cdq
iret
sbb
(bad)
(bad)
inc
cdq
and
mov
out
mov
inc
sbb
jbe
cmps
add
push
pop
and
icebp
(bad)
(bad)
call
cld
fdiv
cmp
sahf
pop
cdq
shl
nop
mov
inc
not
cdq
xlat
faddp
lods
call
cmp
stos
jmp
adc
mov
sbb
mov
inc
cmp
js
push
test
fidiv
popf
or
lds
mov
ss
adc
(bad)
push
push
jg
add
push
leave
ins
int3
or
mov
sbb
sub
(bad)
(bad)
(bad)
jg
movs
dec
retf
jno
fsubr
adc
dec
cmp
jno
xor
mov
(bad)
(bad)
(bad)
inc
mov
jo
mov
loop
hlt
js
into
js
pop
or
push
int3
cmp
cmc
lods
(bad)
call
sbb
sub
loopne
pop
mov
lss
add
cli
jmp
imul
(bad)
jmp
jae
jno
jmp
rcl
adc
mov
aad
cld
cmc
loop
mov
(bad)
(bad)
(bad)
push
push
call
sar
inc
and
cld
adc
jecxz
cmp
stos
jns
sar
scas
push
mov
aad
sti
aam
shl
pop
aaa
std
jns
adc
lock
mov
jo
sub
lods
(bad)
(bad)
(bad)
inc
adc
push
cmps
loope
imul
and
sub
inc
cmp
loopne
mov
out
ror
or
jmp
sbb
xchg
jmp
or
mov
sub
xor
js
or
pop
xor
(bad)
call
cmp
cwde
arpl
dec
in
add
(bad)
(bad)
aas
dec
jp
mov
call
dec
pop
retf
add
jb
push
push
loop
addr16
(bad)
(bad)
(bad)
fistp
idiv
push
xor
sbb
scas
leave
pushf
popf
jbe
stc
call
int
(bad)
(bad)
(bad)
fistp
data16
(bad)
jns
push
push
pop
dec
jno
retf
mov
(bad)
(bad)
inc
sbb
mov
xlat
mov
mov
das
pop
(bad)
(bad)
inc
push
test
pop
outs
jge
outs
push
push
nop
aas
mov
(bad)
clc
(bad)
(bad)
(bad)
(bad)
push
inc
jnp
xor
mov
ret
stos
movs
std
mov
add
xchg
cld
imul
pop
mov
mov
add
jae
or
jae
push
pop
repz
pop
cwde
pop
pop
xchg
sbb
dec
mov
mov
sti
stc
xchg
(bad)
loopne
mov
loopne
fild
cld
dec
js
cmp
cmp
fwait
js
jge
bound
(bad)
(bad)
(bad)
push
mov
aam
jg
fimul
call
(bad)
ds
push
cmc
xor
jecxz
(bad)
(bad)
(bad)
jnp
push
sub
in
test
jbe
(bad)
in
inc
mov
es
sub
push
dec
test
dec
in
ja
jmp
cmp
mov
or
sub
pop
adc
sti
jg
int3
xchg
jl
mov
sbb
(bad)
(bad)
mov
ins
push
mov
adc
add
cs
aad
jl
jp
pop
leave
mov
push
scas
pop
(bad)
jmp
sub
mov
loop
call
out
test
xor
cmps
dec
pop
dec
cmp
push
ins
into
cmp
mov
inc
push
call
mov
mov
mov
ss
(bad)
adc
iret
dec
aaa
mov
mov
dec
xor
fldcw
(bad)
cmps
add
mov
rcl
(bad)
icebp
lods
call
xchg
mov
mov
pop
clc
rep
(bad)
and
fidiv
dec
je
call
(bad)
(bad)
call
adc
(bad)
movs
icebp
jge
jmp
sub
xchg
out
jb
jno
pop
jb
daa
fwait
(bad)
(bad)
call
jbe
push
js
bound
ja
nop
push
adc
mov
pop
push
and
(bad)
(bad)
(bad)
call
or
sub
cmp
call
pushf
fisttp
sbb
cmc
outs
sar
(bad)
(bad)
(bad)
(bad)
cmp
inc
repz
in
inc
or
repz
(bad)
fild
loop
int
das
jmp
popa
mov
test
lea
push
mov
stos
dec
inc
sbb
(bad)
(bad)
(bad)
fisttp
mov
call
pop
adc
mov
and
(bad)
jmp
mov
mov
(bad)
fsubr
mov
sahf
pop
xor
inc
leave
sub
xor
test
aas
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
mov
push
jo
aaa
aas
dec
sbb
jp
push
jge
lods
inc
xchg
retf
(bad)
dec
mov
and
fldenv
cmp
ds
iret
mov
adc
push
xchg
fmul
adc
jb
cwde
(bad)
(bad)
(bad)
jmp
popa
clc
mov
adc
sti
in
jne
jb
in
lock
mov
daa
mov
ja
(bad)
(bad)
cld
ret
mov
and
inc
or
xchg
outs
rcl
(bad)
(bad)
dec
ds
cmps
xchg
sub
outs
loop
dec
div
mov
jg
(bad)
(bad)
(bad)
inc
inc
lahf
push
jle
cmp
rcl
mov
repz
xchg
mov
jecxz
push
aam
lods
and
cmp
adc
(bad)
mov
cdq
mov
adc
test
push
cmp
je
or
mov
or
lods
call
lods
jmp
fs
loop
bound
xchg
(bad)
sbb
and
mov
retf
inc
add
jbe
push
add
(bad)
(bad)
(bad)
(bad)
ds
outs
adc
mov
xor
aam
jg
dec
cli
cli
neg
test
sub
xchg
push
mov
pop
pop
ret
ret
push
adc
(bad)
(bad)
dec
adc
rol
scas
adc
xchg
sub
xor
sbb
clc
jge
scas
fisubr
lea
dec
add
arpl
ins
xor
out
(bad)
(bad)
call
mov
jle
mov
inc
mov
sub
call
mov
(bad)
(bad)
(bad)
(bad)
jle
jo
jge
push
(bad)
and
push
mov
xor
push
(bad)
(bad)
(bad)
inc
pop
rcl
fisub
xchg
outs
call
dec
or
mov
ss
fcos
jg
push
and
mov
sbb
enter
(bad)
outs
add
xor
and
jmp
(bad)
call
in
sbb
test
fnstcw
shl
mov
repz
pop
(bad)
(bad)
cld
lahf
mov
(bad)
hlt
out
test
pop
fsubrp
mov
dec
(bad)
(bad)
(bad)
(bad)
mov
xchg
mov
sub
adc
ds
adc
and
xchg
ins
(bad)
(bad)
(bad)
jmp
xchg
aas
rol
aas
dec
lock
mov
inc
sub
push
mov
icebp
sub
cmp
seta
loop
std
lods
cwde
push
int
(bad)
in
(bad)
inc
xchg
xor
bound
cmp
out
sub
loop
jmp
dec
outs
cmc
pop
adc
std
(bad)
(bad)
(bad)
push
xchg
ret
scas
aas
mov
lods
mov
push
mov
cmp
jne
rcl
(bad)
(bad)
(bad)
dec
xor
inc
xchg
jmp
test
retf
es
add
(bad)
push
mov
shr
fdivr
sbb
mov
(bad)
cli
int
jg
mov
cmps
jecxz
cdq
daa
shl
inc
ins
stos
test
push
mov
mov
fcomi
fwait
popf
call
in
push
mov
(bad)
(bad)
dec
(bad)
mov
addr16
jle
jmp
ret
sub
daa
xchg
les
xchg
jne
sbb
in
fld
clc
add
sar
hlt
gs
in
xchg
mov
inc
addr16
inc
ds
or
in
inc
ret
xor
inc
xchg
jle
jg
cmp
jmp
sub
pop
test
aas
int3
xor
adc
out
cmp
push
jl
xor
pop
rcl
imul
(bad)
(bad)
(bad)
push
jne
aam
repnz
adc
loope
mov
inc
in
jb
sbb
das
mov
or
enter
int3
xchg
lahf
mov
(bad)
fcomip
dec
pop
and
pop
adc
and
pop
adc
in
out
inc
fwait
jmp
sar
neg
test
sub
out
and
(bad)
jmp
call
jbe
xor
lods
sti
dec
pop
ins
or
hlt
mov
neg
jnp
cwde
mov
pop
popf
(bad)
(bad)
(bad)
(bad)
stc
addr16
aas
and
push
rcl
mov
xchg
inc
(bad)
xlat
lods
jp
fnop
pop
jns
(bad)
(bad)
inc
ja
adc
cmp
out
sbb
out
pop
pop
push
fs
test
(bad)
jmp
mov
sbb
cmp
int
je
push
das
ss
(bad)
mov
mov
mov
jg
enter
test
xchg
mov
sbb
(bad)
(bad)
(bad)
(bad)
cmp
rcl
imul
push
ins
and
(bad)
lea
xchg
(bad)
(bad)
(bad)
call
ss
ins
push
mov
repnz
rcl
hlt
sub
stos
pop
sbb
dec
jecxz
push
lods
ja
xor
pop
movs
pop
in
scas
fisub
jmp
or
jmp
(bad)
call
data16
movs
push
in
pop
or
pushfw
jnp
dec
repnz
xchg
pop
rcr
and
int
stos
mov
fcomp
push
test
sbb
les
movs
or
dec
push
ret
(bad)
dec
cmps
dec
jne
js
cli
or
xchg
push
fcmovbe
(bad)
jg
jp
scas
xor
sbb
test
xor
(bad)
(bad)
call
adc
outs
mov
jg
or
test
retf
xchg
dec
jns
pop
je
inc
in
(bad)
(bad)
(bad)
call
inc
retf
sub
pop
mov
je
fsub
cld
pop
(bad)
retf
lods
pop
sub
pop
inc
(bad)
(bad)
(bad)
jmp
ds
sbb
jb
leave
xor
mov
push
inc
pop
mov
lock
inc
pushf
in
cmp
std
mov
or
xchg
fdiv
cmp
add
jmp
aas
retf
retf
in
sbb
(bad)
jg
jmp
cmp
sub
cmps
push
mov
and
lock
std
dec
or
addr16
jo
mov
sub
fs
cwde
(bad)
pop
add
mov
sub
add
mov
(bad)
call
imul
xor
int
and
and
(bad)
jmp
in
push
add
inc
es
xchg
dec
mov
std
push
pop
lods
repz
(bad)
jg
lea
lods
pop
call
and
jmp
jne
xor
fiadd
push
call
sub
xchg
adc
(bad)
(bad)
out
clc
(bad)
arpl
pushf
popf
sti
bound
pop
(bad)
in
cld
adc
lods
pop
repnz
add
xor
jmp
jl
cmp
rcr
cmp
xchg
cmps
not
(bad)
out
clc
jg
repz
frstor
jg
dec
sub
cmp
fimul
ss
out
je
add
(bad)
push
add
sbb
(bad)
jmp
xchg
and
stos
in
not
(bad)
push
dec
push
cmps
jne
push
cs
arpl
out
sub
mov
xchg
push
out
and
mov
jmp
imul
push
inc
(bad)
and
add
lds
push
outs
xor
lea
add
mov
push
retf
arpl
push
retf
pusha
mov
jnp
aad
je
(bad)
(bad)
(bad)
jmp
xor
ins
mov
cmp
sub
sub
fisubr
jns
push
mov
mov
shr
mov
mov
test
mov
fidivr
repnz
(bad)
(bad)
push
(bad)
inc
movs
les
dec
and
jae
cmps
cmp
rcl
(bad)
(bad)
(bad)
jmp
lahf
mov
mov
sahf
sub
adc
gs
js
hlt
push
loop
(bad)
(bad)
call
imul
loopne
jp
inc
mov
adc
lds
nop
sbb
loope
sub
push
stc
jno
(bad)
(bad)
jmp
sbb
mov
push
fild
sbb
jno
imul
or
bound
mov
and
(bad)
dec
xor
adc
neg
and
daa
and
cmp
fdivrp
cmps
mov
pushf
push
pop
push
pop
sbb
xlat
cmp
jmp
(bad)
mov
jp
mov
or
jmp
arpl
(bad)
(bad)
(bad)
dec
push
cs
jo
shl
loop
xchg
out
push
add
stos
and
pop
inc
dec
push
aad
(bad)
cmp
xlat
fldcw
imul
xor
ins
mov
js
xchg
mul
movs
(bad)
(bad)
(bad)
call
scas
mov
push
sbb
pop
cdq
ins
and
iret
push
(bad)
stos
ins
hlt
xchg
fadd
addr16
push
jno
mov
pop
(bad)
(bad)
jmp
stc
icebp
jp
jmp
bound
mov
ds
out
test
dec
(bad)
(bad)
(bad)
jmp
push
pop
iret
push
push
mov
dec
mov
sub
sub
and
lds
(bad)
(bad)
dec
(bad)
fist
push
xor
outs
mov
repnz
out
sbb
(bad)
push
hlt
push
jb
add
cmps
inc
cmp
sbb
shl
lods
cli
call
pop
pop
push
xchg
retf
jmp
sti
rcl
mov
and
cmp
inc
shl
pushf
stc
inc
lods
cmp
xchg
push
test
(bad)
(bad)
out
jo
(bad)
dec
ja
fistp
sub
mov
scas
lds
std
std
dec
or
in
ins
mov
(bad)
call
fwait
cmp
mov
stos
pop
push
loopne
cmp
and
jp
(bad)
(bad)
out
xchg
xor
sbb
loop
jbe
xchg
(bad)
or
js
dec
mov
sub
mov
out
pusha
add
cmp
iret
rcr
(bad)
(bad)
(bad)
push
(bad)
daa
ins
or
xor
or
add
inc
fcmovnu
mov
icebp
xor
jne
(bad)
jg
into
xchg
es
or
lea
mov
call
push
dec
pusha
jp
inc
pop
or
sub
xor
mov
push
enter
adc
xchg
(bad)
(bad)
loopne
in
es
mov
inc
lds
cmp
add
inc
mov
(bad)
jmp
arpl
js
rcl
lock
xchg
adc
or
or
mov
adc
retf
leave
(bad)
(bad)
(bad)
call
in
fwait
xchg
(bad)
sub
fmulp
push
jno
clc
and
fnstsw
pop
icebp
(bad)
push
(bad)
mov
ins
mov
sub
retf
fnstcw
rol
jecxz
outs
cmp
xchg
(bad)
mov
stos
lods
mov
div
ss
xchg
push
in
sahf
vhsubps
pop
lock
fmulp
jp
popf
repz
out
int3
jae
das
pop
mov
aam
add
mov
push
mov
outs
out
sub
cli
icebp
(bad)
(bad)
jmp
push
cmp
in
jecxz
gs
rep
jle
inc
nop
inc
xchg
data16
sub
dec
xor
iret
pop
imul
data16
pop
(bad)
(bad)
(bad)
call
bound
and
cmps
cs
mov
int3
lock
fstp
mov
(bad)
(bad)
push
dec
loop
jecxz
gs
mov
pusha
sub
popf
ins
mov
jl
jnp
pop
movs
popa
shl
push
sub
(bad)
(bad)
inc
aad
jbe
cdq
mov
pop
lods
push
fisubr
clc
or
mov
inc
pop
shl
(bad)
mov
and
cld
shl
retf
pop
mov
(bad)
(bad)
(bad)
call
outs
hlt
push
call
or
fidiv
(bad)
call
ss
pop
jg
outs
add
(bad)
jg
(bad)
sub
jmp
mov
jns
fistp
mov
push
lock
(bad)
(bad)
fistp
jns
mov
pop
lods
ss
sbb
jbe
js
pusha
push
js
ss
push
cld
fbld
dec
aaa
loope
push
fbstp
push
cli
and
aad
and
jecxz
icebp
(bad)
dec
xor
popa
loopne
mov
pusha
call
mov
loopne
jp
(bad)
lds
test
addr16
lahf
scas
cmps
fcom
outs
out
imul
fld
(bad)
(bad)
fcomip
pmaxsw
xor
fidiv
jge
sti
call
call
pop
adc
test
nop
int
adc
inc
shr
arpl
gs
(bad)
(bad)
call
mov
push
pop
fild
shl
out
idiv
(bad)
mov
and
sbb
jmp
loopne
lock
mov
stos
(bad)
(bad)
(bad)
(bad)
aas
pop
retf
cmp
xchg
sub
xor
cmps
clc
push
ret
jne
fistp
retf
(bad)
(bad)
(bad)
(bad)
fcomp
outs
adc
dec
xchg
inc
ret
push
mov
inc
stos
xor
sub
push
sbb
sbb
mov
inc
call
out
fist
(bad)
jmp
cmp
test
dec
push
jecxz
ret
repnz
(bad)
push
xchg
inc
dec
repz
shr
bound
inc
mov
cmp
imul
jmp
fiadd
(bad)
(bad)
fsub
adc
mov
scas
jle
in
or
dec
out
adc
mov
mov
(bad)
push
test
inc
push
aas
push
imul
mov
inc
xlat
gs
cmps
fimul
adc
mov
in
mov
xchg
cmp
movs
das
jg
mov
test
or
(bad)
(bad)
jmp
cs
inc
lahf
or
cmp
lods
mov
pop
adc
ins
mov
mov
(bad)
(bad)
(bad)
(bad)
std
adc
(bad)
inc
jp
shr
dec
test
cmps
lods
sbb
adc
imul
fsqrt
(bad)
push
inc
(bad)
ins
mov
push
cmp
sub
jno
inc
or
inc
sar
mov
adc
pop
stos
js
sub
adc
dec
sub
psrlq
xor
sahf
nop
jnp
push
jne
gs
scas
lahf
xor
in
leave
out
jl
loop
cwde
jbe
pop
sahf
pop
iret
sub
pop
lock
push
mov
dec
out
pop
addr16
fs
cwde
xchg
sti
mov
fmul
call
mov
fisubr
movs
fwait
mov
mov
test
lock
mov
inc
push
nop
sbb
rcl
push
ret
stos
or
sbb
call
lock
mov
mov
arpl
daa
or
test
sub
adc
scas
push
jno
fld
inc
std
inc
sub
sbb
(bad)
push
int
inc
pop
clc
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
mov
cdq
dec
jg
in
jno
repnz
div
xor
stos
aaa
scas
ins
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
test
fwait
xchg
scas
fist
fisttp
jmp
mov
inc
cli
call
sub
mov
sub
jo
sbb
mov
(bad)
(bad)
jmp
outs
cmp
(bad)
retf
ins
sub
int
adc
aad
push
push
stos
fwait
sub
lods
mov
mov
imul
stos
sar
popf
xor
cmps
pop
cld
inc
push
sub
jbe
push
inc
test
jmp
mov
sbb
loopne
xor
dec
movs
fsubr
xchg
mov
xor
or
sbb
push
sub
idiv
push
sbb
addr16
add
mov
movs
dec
or
and
jmp
mov
nop
lock
and
mov
ja
xchg
test
xchg
sbb
lods
(bad)
(bad)
(bad)
(bad)
jmp
stos
push
inc
lock
push
push
add
cmp
cmp
inc
mov
stos
(bad)
(bad)
(bad)
call
cmps
jmp
push
shl
xor
jl
mov
jge
or
in
pop
nop
movs
loop
mov
(bad)
(bad)
jmp
arpl
mov
cmp
cmps
mov
dec
mov
and
mov
cmp
rcr
mov
cli
push
sub
jg
lea
(bad)
stos
movs
push
les
xor
into
sahf
sbb
test
cmc
(bad)
call
test
(bad)
push
push
cmp
(bad)
movs
aaa
xor
push
(bad)
(bad)
(bad)
(bad)
jle
push
sub
iret
(bad)
movs
push
sub
mov
aad
and
cld
add
and
ret
(bad)
loopne
test
dec
adc
sbb
add
(bad)
(bad)
call
pushw
mov
loopne
imul
mov
pushf
fcomp
xchg
inc
mov
adc
push
out
mov
mov
pusha
je
ja
(bad)
(bad)
(bad)
sbb
stc
and
clc
dec
stos
aam
cmp
std
(bad)
clc
cmp
je
ja
and
sbb
mov
mov
mov
add
mov
dec
(bad)
(bad)
(bad)
push
pop
rcl
dec
stos
data16
cmps
or
je
push
mov
jmp
inc
xor
add
dec
ins
arpl
mov
hlt
not
aas
jb
sar
mov
(bad)
mov
(bad)
stos
outs
sti
pop
or
and
call
and
inc
or
mul
ja
xchg
add
test
into
jg
push
fidivr
rcl
aad
(bad)
(bad)
jmp
mov
inc
jp
(bad)
and
mov
and
in
shl
into
(bad)
fild
pop
cdq
pop
adc
jb
movs
and
out
mov
(bad)
sar
or
mov
jmp
cwde
mov
mov
mov
hlt
scas
(bad)
jmp
mov
or
xchg
jmp
lods
fisubr
(bad)
(bad)
dec
add
adc
ja
jge
push
mov
pushf
into
retf
jb
(bad)
(bad)
(bad)
call
push
std
out
pop
movs
ja
fdiv
pushf
cmp
mul
sbb
data16
and
xor
(bad)
push
xor
sahf
add
test
lods
out
(bad)
call
(bad)
sbb
cdq
aad
jecxz
pop
aam
mov
(bad)
push
adc
cmp
(bad)
(bad)
call
out
imul
xchg
ins
cmp
or
push
adc
add
ja
jnp
ja
adc
(bad)
(bad)
(bad)
cmp
mov
(bad)
stc
aam
lock
js
mov
jbe
xor
cmc
test
add
xchg
(bad)
mov
xchg
sub
sbb
cld
cmp
retf
addr16
jne
add
in
aaa
mov
xchg
sub
dec
dec
pop
xor
push
inc
push
add
repnz
cwde
shr
(bad)
(bad)
cld
cmp
mov
xchg
jno
fidivr
cmc
cmp
(bad)
or
(bad)
jmp
inc
jbe
pushf
dec
sahf
xchg
pop
mov
push
bound
shl
aad
push
and
rcr
sub
(bad)
(bad)
jmp
scas
jle
sub
clc
add
int
popa
aaa
pop
jbe
xchg
or
stos
(bad)
(bad)
(bad)
jmp
lds
out
fist
test
cmp
xchg
(bad)
and
sbb
ret
adc
dec
hlt
mov
sub
mov
test
jb
loope
(bad)
jmp
rcr
test
and
and
push
(bad)
cmps
xchg
ins
popf
es
mov
fsubr
aaa
lock
jp
xor
sub
les
int3
repnz
jmp
(bad)
pop
pop
ror
jp
inc
call
in
dec
mov
int3
repz
cs
mov
pop
dec
shl
ins
retf
(bad)
dec
add
dec
cmp
mov
cli
jns
or
xchg
add
inc
inc
xchg
(bad)
(bad)
(bad)
push
mov
cld
sbb
and
shl
popa
sar
mov
pop
call
in
mov
icebp
mov
imul
repnz
adc
adc
je
xor
(bad)
(bad)
ds
xchg
mov
mov
loopne
lahf
jmp
jmp
pop
outs
les
cmp
mov
push
mov
(bad)
in
xor
jne
sub
sbb
mov
stos
push
data16
(bad)
(bad)
inc
dec
jmp
and
cmps
jg
call
stos
hlt
and
jecxz
aaa
sbb
test
mov
and
std
outs
hlt
cmc
outs
cmps
xor
pop
sbb
push
jbe
lock
mov
mov
pop
pop
cmps
mov
(bad)
push
fldpi
inc
sbb
call
data16
fwait
push
mov
mov
pop
cmp
(bad)
mov
push
loop
inc
adc
(bad)
(bad)
inc
or
mov
fadd
xor
mov
loopne
and
sti
sub
(bad)
(bad)
jmp
mov
sub
mov
jne
fwait
mov
(bad)
mov
inc
(bad)
std
test
cmp
out
mov
in
xchg
aas
out
dec
enter
(bad)
rol
call
sar
cs
ja
xor
dec
fcomip
push
(bad)
xor
out
mov
cld
(bad)
(bad)
(bad)
jmp
or
js
push
shl
xchg
push
pop
in
adc
dec
sub
mov
sub
test
dec
jnp
fmul
fld
int
push
push
dec
dec
sar
push
in
xchg
arpl
mov
(bad)
(bad)
dec
push
jecxz
dec
lods
(bad)
sub
or
int3
pop
mov
daa
int
cmp
pop
call
add
sub
or
and
cli
sbb
dec
pop
daa
ja
retf
(bad)
jmp
jbe
outs
or
into
dec
xchg
into
xchg
or
jo
fmul
pop
xor
into
mov
int
xchg
(bad)
(bad)
(bad)
dec
lods
packssdw
sbb
sbb
sbb
in
mov
enter
ss
(bad)
(bad)
jg
sbb
push
mov
push
pop
mov
ror
fsincos
jnp
(bad)
inc
(bad)
xor
cmps
push
mov
pop
leave
pop
mov
mov
ret
mov
(bad)
inc
es
pusha
dec
sti
adc
cmp
jmp
or
adc
(bad)
(bad)
jg
outs
and
into
popf
cmp
xor
aas
push
retf
add
(bad)
mov
(bad)
or
cmc
(bad)
leave
mov
and
add
xor
iret
xor
jae
in
push
sbb
scas
cmps
hlt
das
ret
stc
xchg
call
test
xchg
(bad)
(bad)
(bad)
dec
jbe
call
xchg
sbb
jmp
xor
repz
icebp
fsubr
mov
fcom
outs
jmp
stos
dec
loope
mov
aas
pop
cld
sar
mov
pop
or
dec
add
repz
mov
adc
mov
push
jbe
(bad)
(bad)
jg
retf
into
push
cmp
mov
pop
dec
add
das
mov
movs
or
cdq
fs
jne
sti
or
in
call
xchg
inc
stc
sar
and
xchg
movs
aad
sar
(bad)
(bad)
(bad)
inc
jne
xchg
outs
in
fistp
push
mov
cld
jo
sbb
jns
push
and
pop
add
mov
out
out
sub
and
or
repnz
dec
adc
call
lock
cmp
outs
mov
mov
jns
(bad)
(bad)
(bad)
call
mov
mov
stc
xor
sbb
es
pop
mov
lock
or
(bad)
(bad)
cmp
sti
aad
sub
outs
in
cmps
test
sub
(bad)
in
xchg
sbb
push
(bad)
(bad)
(bad)
jmp
ja
pop
mov
fnstenv
push
push
mov
fbld
stos
out
(bad)
(bad)
call
jmp
or
sub
(bad)
sub
adc
add
mov
out
(bad)
(bad)
(bad)
(bad)
jmp
pusha
(bad)
sbb
push
pop
fidiv
icebp
ror
add
lahf
and
jmp
aaa
push
sbb
mov
add
add
pop
aad
mov
(bad)
(bad)
(bad)
inc
and
xchg
push
xor
dec
inc
push
adc
stos
jp
cmp
add
add
(bad)
cmp
(bad)
(bad)
jp
cdq
nop
pop
xor
or
retf
xchg
cmp
iret
ja
push
and
jle
xor
loope
(bad)
jmp
add
ins
pop
mov
jl
add
adc
repnz
pop
fmul
sub
xchg
(bad)
mov
pop
fld
xlat
sub
fwait
jp
les
sbb
mov
mov
pop
mov
fndisi(8087
push
(bad)
push
mov
jmp
sbb
sar
(bad)
(bad)
push
ret
cmp
pop
lock
popf
adc
dec
add
enter
and
(bad)
(bad)
call
mov
xchg
mov
jmp
out
in
je
inc
in
sahf
add
jns
and
dec
cmc
mov
and
lahf
mov
stc
adc
mov
movs
ds
and
mov
jmp
inc
test
jo
test
inc
out
mov
imul
inc
imul
(bad)
push
mov
leave
push
(bad)
(bad)
and
jge
hlt
(bad)
retf
pop
pop
dec
pop
(bad)
mov
xchg
sti
or
cli
fcomip
jmp
lds
ret
jnp
fs
pop
jge
sbb
dec
pop
inc
test
(bad)
call
mov
sbb
daa
outs
jle
lahf
loope
mov
ret
add
inc
mov
clc
(bad)
jg
fistp
cmps
inc
call
mov
mov
sar
push
cmp
cld
(bad)
call
popf
addr16
shl
das
shl
lahf
(bad)
int3
fidiv
nop
jmp
(bad)
call
inc
push
inc
sbb
das
sub
mov
xchg
mov
leave
push
std
(bad)
(bad)
ds
inc
repnz
xor
lahf
cmp
enter
es
arpl
xchg
(bad)
call
or
rcl
jg
sbb
ret
push
rcl
xor
push
fild
xchg
push
(bad)
in
(bad)
fiadd
xor
mov
shl
retf
xor
xbegin
and
retf
push
(bad)
(bad)
dec
sbb
lods
lds
adc
pop
scas
out
xor
mov
mov
hlt
movs
fwait
push
jmp
iret
jne
cli
jnp
jb
dec
mov
add
sar
(bad)
(bad)
call
mov
out
mov
mov
cmp
jp
jbe
xchg
sub
jg
movs
call
mov
(bad)
jae
fsin
movs
sbb
push
mov
out
push
mov
ret
dec
cmp
pop
pop
cmc
call
jmp
into
jae
xchg
jmp
hlt
xlat
mov
aam
(bad)
(bad)
(bad)
jns
loope
or
scas
das
mov
das
sbb
mov
mov
adc
pop
jbe
jmp
add
fld
(bad)
daa
adc
inc
out
mov
les
push
cmp
mov
(bad)
(bad)
(bad)
jmp
das
inc
les
push
lahf
jnp
lods
sahf
sub
popa
and
jno
or
jo
leave
add
(bad)
(bad)
(bad)
call
xor
shl
jnp
fs
adc
inc
(bad)
(bad)
retf
cmps
icebp
(bad)
ds
jns
or
xor
cmp
(bad)
fcomip
repz
dec
jmp
or
outs
lds
sbb
stos
or
or
xchg
movs
call
cwde
and
icebp
or
sub
pop
adc
and
push
xchg
push
fisubr
xor
(bad)
(bad)
(bad)
dec
aas
sar
mov
dec
iret
cmp
xchg
les
jno
fbstp
and
es
cld
(bad)
jmp
rcr
js
(bad)
xor
js
or
frstor
lods
mov
(bad)
mov
dec
ret
xchg
je
cmp
fs
fcomp
fwait
outs
rcr
(bad)
xlat
inc
xchg
dec
enter
in
adc
jmp
neg
outs
sbb
mov
pop
repnz
nop
es
dec
into
retf
sub
jp
cmp
mov
(bad)
(bad)
(bad)
call
aam
dec
mov
xor
and
push
fcom
jp
mov
mov
(bad)
(bad)
(bad)
cmp
sub
stc
inc
ret
neg
or
test
imul
(bad)
sti
mov
push
or
stc
test
jmp
mov
cdq
(bad)
imul
stc
(bad)
(bad)
(bad)
call
sub
in
push
mov
repz
xchg
popa
jnp
xor
dec
cmp
(bad)
(bad)
jmp
ror
out
es
push
push
push
in
jae
stc
xlat
push
jmp
loope
idiv
(bad)
dec
mov
sar
out
fsubr
push
and
jne
inc
sub
(bad)
(bad)
push
in
jae
pop
ds
pop
push
and
or
or
jp
pop
sbb
cmps
outs
ret
mov
stos
xchg
(bad)
(bad)
inc
ss
mov
add
inc
jae
fiadd
cmp
cmp
adc
(bad)
(bad)
(bad)
dec
into
sahf
out
js
ret
jae
stc
fs
sbb
xchg
sub
fs
dec
dec
inc
dec
push
imul
test
inc
sbb
xchg
ss
mov
mov
pop
pusha
(bad)
or
(bad)
(bad)
(bad)
mov
pop
inc
daa
rol
sub
mov
js
jl
stc
(bad)
(bad)
out
dec
mov
dec
xchg
sbb
movs
neg
dec
lods
in
push
mov
lock
fbld
and
xor
and
jecxz
call
les
mov
jne
call
jge
mov
push
(bad)
cmp
in
push
movs
jno
mov
xor
cmp
cwde
push
inc
adc
retf
not
jmp
int3
cmps
(bad)
(bad)
(bad)
jmp
pop
jmp
cli
add
add
jmp
jg
cmp
jo
mov
sub
push
push
push
push
(bad)
(bad)
(bad)
push
mov
and
jo
pop
aaa
ins
dec
push
call
test
fiadd
push
xchg
inc
xor
lock
mov
loopne
stc
sbb
into
cmp
outs
add
fwait
(bad)
(bad)
mov
aaa
lahf
add
cmp
mov
aas
add
inc
sub
cmc
(bad)
jmp
fxch
lahf
jp
lods
dec
(bad)
jb
popf
outs
and
cmp
shr
leave
(bad)
(bad)
(bad)
jmp
sub
cmp
(bad)
fld
neg
mov
in
add
rol
ja
(bad)
push
xor
ja
shl
fsubrp
dec
inc
jbe
(bad)
or
and
mov
fbstp
adc
lock
pop
adc
mov
(bad)
inc
lods
xor
cdq
data16
xchg
loop
bound
xlat
add
(bad)
(bad)
push
cdq
xor
dec
(bad)
cld
push
mov
and
or
mov
cli
call
cmp
mov
(bad)
(bad)
jmp
dec
clc
push
je
adc
dec
shl
call
pop
xor
xchg
shl
out
and
sbb
clc
(bad)
push
ror
or
movs
cmp
je
sbb
cli
mov
and
jbe
mov
dec
(bad)
push
inc
xchg
or
aaa
cmp
cwde
xchg
add
cmp
movs
inc
xor
cs
(bad)
call
cwde
stos
mov
cmp
(bad)
shl
test
jg
data16
dec
pop
pop
jno
push
std
sbb
int3
outs
inc
push
mov
or
jmp
ds
ins
inc
mov
test
xor
adc
jb
sar
loopne
jge
fwait
inc
mov
sti
sub
mov
lock
xchg
xor
xor
mov
pop
int3
cdq
push
loop
(bad)
jmp
(bad)
lods
mov
mov
sub
cmp
(bad)
call
test
pop
pop
imul
fsubr
jbe
sbb
daa
jns
js
push
mov
mov
ins
inc
lods
cdq
mov
cdq
or
(bad)
(bad)
jmp
cdq
std
pop
adc
jb
mov
cmps
fs
push
jle
pop
mov
jmp
cmc
pop
(bad)
(bad)
(bad)
(bad)
mov
or
(bad)
in
out
mov
fsubr
test
cwde
pop
in
(bad)
(bad)
(bad)
dec
and
or
inc
add
outs
outs
(bad)
sti
or
adc
pop
mov
(bad)
adc
ins
mov
outs
xor
addr16
sub
jp
(bad)
call
dec
sbb
push
sub
mov
adc
(bad)
(bad)
(bad)
push
fdivr
out
ja
pop
fdiv
inc
push
hlt
jns
pusha
lods
mov
xchg
cmp
dec
push
fisub
cdq
dec
cmp
xor
mov
movs
sub
(bad)
(bad)
call
in
jmp
push
int
dec
into
dec
adc
jp
xor
inc
pop
adc
pop
dec
(bad)
(bad)
(bad)
dec
data16
nop
hlt
ret
pop
mov
fcom
pop
fistp
add
or
sub
and
push
je
mov
push
inc
push
jns
push
lock
jl
dec
mov
shrd
cld
(bad)
(bad)
(bad)
cmp
ja
push
in
xchg
mov
xchg
repz
mov
in
cmp
mov
test
mov
mov
sub
dec
mov
pop
retf
cwde
je
bound
jecxz
add
(bad)
inc
mov
cmpps
inc
movs
or
mov
test
push
call
add
outs
push
and
mov
call
jmp
adc
mov
clc
adc
push
pop
sbb
xchg
jo
sbb
mov
(bad)
mov
inc
push
int
push
add
loopne
retf
dec
pushf
jno
retf
aaa
js
call
call
out
push
out
pop
mov
repnz
(bad)
dec
call
jg
dec
pop
(bad)
pop
cwde
cmp
inc
mul
jmp
(bad)
(bad)
inc
xor
dec
retf
sbb
and
mov
in
dec
inc
adc
xor
(bad)
jmp
test
mov
fld
mov
cmp
jl
dec
push
push
retf
gs
test
sbb
xor
xor
mov
sar
call
jnp
adc
out
lock
loopne
mov
cmp
(bad)
(bad)
call
jle
hlt
out
xor
loope
fisubr
lock
sbb
(bad)
pop
and
out
cmc
xlat
dec
(bad)
(bad)
dec
cdq
add
inc
jmp
movs
dec
add
aam
into
sbb
xchg
call
mov
jl
sub
pop
outs
jns
ja
bound
lock
(bad)
dec
retf
xchg
(bad)
int
repnz
push
popa
shl
xor
cli
pop
inc
pop
mov
arpl
sbb
fistp
out
cmp
inc
push
xor
(bad)
movs
lahf
add
aam
(bad)
call
es
call
jle
xchg
xchg
rol
movs
shl
or
fisub
shl
idiv
(bad)
(bad)
(bad)
fisttp
xor
and
cs
fidivr
adc
push
cmp
int3
jmp
test
lea
xor
and
cmc
push
enter
xchg
fild
add
sar
(bad)
(bad)
dec
and
xor
dec
xor
add
push
in
gs
mov
fbld
jl
in
test
push
pushf
dec
addr16
repz
push
pop
cwde
movs
loope
(bad)
call
aad
or
loop
inc
dec
popf
int3
xchg
pop
loop
sub
fwait
inc
push
mov
jmp
clc
mov
mov
mov
mov
or
mov
(bad)
(bad)
(bad)
(bad)
ds
ss
mov
in
or
ss
or
and
ror
push
(bad)
(bad)
call
jle
(bad)
mov
int3
ja
lahf
inc
imul
sub
xlat
mov
mov
pop
int3
pop
sub
(bad)
(bad)
jmp
lock
mov
jge
mov
dec
movs
add
or
sbb
movs
dec
ja
arpl
(bad)
(bad)
jmp
add
mov
les
das
mov
(bad)
retf
jae
cmp
fwait
sar
pop
pop
add
or
cld
pop
mov
(bad)
mov
data16
(bad)
clc
fcomp
xor
psubsb
das
sub
sub
push
(bad)
(bad)
call
sub
push
ds
and
mov
jne
dec
pop
js
clc
mov
cli
jg
inc
ins
mov
mov
(bad)
cwde
ins
ds
in
scas
push
or
div
push
sahf
sar
cdq
cs
(bad)
(bad)
call
call
mov
test
jns
jno
jae
or
pop
inc
call
inc
and
add
scas
fidiv
shl
clc
test
or
fs
out
xchg
mov
cmp
xlat
pop
iret
push
pop
ret
mov
mov
or
aam
nop
(bad)
(bad)
(bad)
(bad)
mov
push
pop
sbb
mov
mov
add
xchg
jecxz
sub
cmp
es
int3
or
ss
test
test
jb
sbb
aad
stos
(bad)
ffree
add
(bad)
(bad)
call
stos
cli
jne
test
cmp
pusha
mov
addr16
mov
pop
pop
mov
mov
cmp
jp
mov
fdivr
scas
(bad)
(bad)
(bad)
inc
cmp
imul
shr
nop
cmp
inc
add
xlat
xor
cmp
cmp
mov
sbb
jle
ins
(bad)
fild
mov
and
nop
fs
pop
aam
mov
(bad)
(bad)
jg
imul
inc
cmp
push
test
fld
cmp
mov
adc
mov
(bad)
mov
jbe
mov
emms
xchg
sub
xor
pusha
push
inc
movs
add
inc
(bad)
dec
and
popa
jb
shl
sub
(bad)
lods
jns
mov
jp
retf
add
xor
mov
jg
pop
aaa
clc
xchg
pop
cli
(bad)
(bad)
push
cmc
push
sbb
lock
jno
inc
fnsave
out
xor
rol
(bad)
jmp
rcr
rol
popa
jle
js
scas
stc
out
(bad)
mov
push
mov
sbb
lock
(bad)
cli
aas
or
adc
or
adc
(bad)
(bad)
inc
int
shl
jg
xchg
shl
dec
inc
ret
dec
fcomi
mov
inc
hlt
jno
cmps
fcomip
call
cld
retfw
adc
cmp
rol
lods
scas
jl
xchg
daa
(bad)
(bad)
(bad)
jmp
lods
mov
xor
xor
div
dec
xor
lods
dec
scas
jo
jo
xor
(bad)
(bad)
(bad)
(bad)
std
jae
imul
test
jmp
(bad)
lds
pop
fist
sbb
cld
call
jg
leave
mov
repnz
addr16
push
xchg
jbe
adc
hlt
xor
sub
(bad)
call
inc
fcmovnbe
or
fidiv
popa
ficom
pop
xor
mov
inc
(bad)
(bad)
(bad)
(bad)
jnp
sbb
pop
iret
or
hlt
call
nop
jg
fidivr
aad
hlt
cdq
test
(bad)
(bad)
call
fild
mov
cwde
test
jo
clc
icebp
adc
xor
fidiv
bound
sub
jo
(bad)
(bad)
(bad)
(bad)
(bad)
fld
scas
adc
cmps
inc
test
daa
pop
jno
popa
adc
shl
cmps
push
push
mov
add
(bad)
(bad)
(bad)
mov
out
in
jbe
in
clc
pop
push
sbb
inc
ins
(bad)
adc
ss
cld
mov
shl
dec
push
je
leave
das
enter
jmp
jg
xchg
xor
cld
imul
mov
ffree
(bad)
sub
(bad)
(bad)
inc
add
pushf
std
mov
dec
pushf
inc
sub
jg
add
sbb
add
out
dec
mov
arpl
adc
lds
cmp
mov
ins
dec
in
ret
adc
adc
aam
or
dec
push
sahf
dec
sub
(bad)
(bad)
mov
mov
push
and
sbb
push
(bad)
mov
xchg
jg
adc
pop
pop
cld
(bad)
jg
jmp
sahf
mov
jg
into
test
pushf
mov
mov
(bad)
aas
(bad)
call
mov
test
xchg
in
jp
mov
pop
ins
inc
cli
pop
xchg
(bad)
jmp
mov
(bad)
pushf
mov
jl
std
mov
lock
xchg
loopne
inc
jmp
std
push
or
mov
push
cmp
mov
fcom
imul
repnz
(bad)
(bad)
(bad)
imul
outs
mov
lock
jg
mov
dec
jg
lods
cmp
cmp
jmp
mov
(bad)
call
cmp
(bad)
xor
(bad)
rol
mov
add
repnz
sbb
pop
push
adc
xchg
xchg
aaa
sbb
retf
pusha
inc
shl
xor
cmc
shl
(bad)
(bad)
call
movs
repnz
xchg
or
push
pushf
adc
or
test
dec
or
(bad)
(bad)
call
and
add
add
ss
sub
dec
and
imul
lahf
je
inc
dec
in
jbe
clc
(bad)
(bad)
call
cmc
adc
xor
rcl
repz
jbe
in
and
cli
(bad)
(bad)
jmp
loopne
jg
ja
les
ficomp
jg
mov
pop
add
mov
or
mov
mov
inc
mov
pop
inc
out
hlt
jecxz
pop
hlt
inc
push
nop
mov
sar
(bad)
shl
(bad)
mov
ins
popw
leave
or
mov
(bad)
(bad)
mov
sub
fbld
and
dec
xchg
xchg
test
call
in
xchg
mov
(bad)
jno
add
daa
dec
xchg
jbe
sub
jg
adc
stos
lds
xchg
and
data16
(bad)
jg
adc
test
pop
cmc
arpl
push
cmps
add
(bad)
sbb
(bad)
(bad)
inc
push
pop
push
mov
sbb
jns
inc
retf
or
lahf
(bad)
(bad)
(bad)
push
push
mov
xchg
sahf
xchg
scas
jg
mov
imul
popf
lods
fsubp
push
int3
adc
mov
pop
dec
pop
mov
mov
std
(bad)
call
das
(bad)
std
push
mov
push
push
fst
lock
cmp
test
lods
push
je
sub
cmps
fdivr
(bad)
dec
xchg
aam
cmps
jg
xlat
mov
inc
sahf
stos
daa
mov
inc
cli
(bad)
push
cli
ja
fld
push
jp
adc
shr
fild
xor
push
fbld
js
movs
shl
push
ret
fsub
jl
jo
fdivr
inc
xchg
loope
out
pop
mov
outs
mov
(bad)
(bad)
dec
mov
inc
push
sbb
xchg
stc
(bad)
mov
mov
sti
sub
or
pusha
cmp
(bad)
(bad)
(bad)
call
push
clc
jecxz
cmp
pusha
cmp
push
pop
jmp
adc
mov
mov
pushf
push
xchg
arpl
jmp
call
out
inc
outs
jg
inc
or
push
ret
cmp
and
cli
jno
(bad)
(bad)
call
sub
mov
xchg
jnp
mov
cmp
test
loope
mov
push
fucomi
in
inc
call
jmp
hlt
and
inc
inc
je
and
inc
adc
(bad)
(bad)
call
ss
pop
mov
push
cmc
(bad)
jl
mov
dec
retf
lds
fwait
or
mov
in
je
xor
movs
adc
pop
sar
and
pop
fcos
(bad)
(bad)
jmp
loope
pop
in
sahf
leave
pop
fld
outs
mov
gs
imul
outs
lods
in
mov
or
jge
(bad)
(bad)
(bad)
dec
xchg
stos
xor
xor
leave
ret
or
pop
test
stc
pop
fisubr
(bad)
(bad)
(bad)
inc
pop
aaa
ret
mov
fistp
in
sub
or
or
in
cmp
(bad)
(bad)
(bad)
push
cmc
scas
sub
push
repnz
push
repnz
add
fisttp
jno
push
mov
(bad)
(bad)
jmp
inc
or
sbb
pusha
jno
mov
jecxz
lds
aaa
je
cld
(bad)
mov
sbb
pop
lods
and
aas
addr16
mov
(bad)
inc
pop
call
jg
xor
pop
hlt
imul
mov
push
pop
add
mov
out
inc
scas
(bad)
(bad)
fcomip
retf
push
call
push
inc
neg
(bad)
pop
adc
dec
inc
fcmovnbe
jne
xchg
and
es
and
and
mov
in
(bad)
rcl
inc
das
mov
ja
adc
jle
mov
sbb
fcomp
cwde
fdiv
outs
push
repnz
jg
(bad)
(bad)
(bad)
(bad)
in
mov
push
fstp
dec
lock
xchg
jg
retf
in
cmc
adc
xchg
fdiv
ss
cmp
pop
cmc
add
jmp
adc
xchg
mov
ds
(bad)
(bad)
dec
pop
xor
mov
jne
fmul
hlt
push
lods
arpl
(bad)
lea
int3
(bad)
(bad)
mov
sbb
inc
pop
test
(bad)
enter
jg
fst
fdivp
(bad)
nop
mov
shl
cli
(bad)
(bad)
(bad)
inc
outs
hlt
call
aas
mov
fstp
and
adc
sub
pop
addr16
ret
push
xchg
pusha
xor
out
mov
inc
loop
mov
repnz
dec
aam
inc
shl
or
adc
(bad)
jmp
mov
bndldx
mov
movs
shl
loopne
(bad)
(bad)
cmp
xor
jns
mov
cmp
cmp
js
out
pop
in
adc
out
sub
icebp
sbb
sbb
inc
jge
push
inc
ret
push
cmp
mov
(bad)
(bad)
(bad)
(bad)
jp
push
sbb
xchg
xlat
fwait
in
ds
cmp
jmp
fisttp
clc
call
pusha
fwait
xlat
mov
into
jae
fisubr
mov
(bad)
(bad)
inc
mov
sar
dec
xor
pop
pusha
repz
hlt
(bad)
(bad)
(bad)
dec
sub
cmc
stos
popa
ds
cdq
adc
in
cmp
(bad)
(bad)
(bad)
(bad)
cmp
stos
and
loope
or
mov
xor
pop
mov
outs
(bad)
(bad)
inc
sti
lds
ret
shr
or
add
(bad)
(bad)
(bad)
inc
add
daa
add
ficom
cmp
fdivr
ror
adc
hlt
inc
inc
(bad)
cld
fldenv
cdq
pop
sahf
dec
cmp
jl
pop
(bad)
jg
mov
shl
(bad)
cld
out
movs
dec
jae
inc
hlt
jb
and
adc
xchg
or
test
(bad)
out
iret
adc
cmp
cmp
xchg
sub
pop
mov
(bad)
jmp
call
imul
jg
mov
outs
cli
stos
imul
jmp
ret
out
ins
adc
clc
jp
jmp
mul
jl
cmp
retf
(bad)
(bad)
(bad)
dec
jb
(bad)
mov
movs
pop
add
mov
mov
jmp
loope
push
es
(bad)
(bad)
jmp
fidiv
in
cdq
or
or
cs
xchg
dec
adc
mov
ins
ret
(bad)
or
sahf
xchg
inc
inc
add
retf
pop
and
pop
jns
xor
xchg
(bad)
(bad)
(bad)
mov
ret
push
(bad)
lods
aad
jnp
lar
sti
out
jge
pusha
(bad)
(bad)
inc
ins
mov
cmps
lock
mov
int3
adc
push
jns
jmp
sub
dec
inc
jo
mov
lock
(bad)
mov
(bad)
(bad)
fsubr
leave
mov
add
and
push
add
lea
fiadd
repnz
repnz
fadd
ret
jg
fs
xchg
push
popf
and
(bad)
inc
or
mov
mov
(bad)
fild
xlat
pop
test
call
mov
jmp
add
xor
fdivr
(bad)
(bad)
call
retf
popf
or
push
xchg
sbb
shr
mov
mov
or
xchg
dec
cli
call
mov
push
pop
sbb
out
enter
mov
outs
fst
add
das
jp
das
push
fadd
in
jo
imul
iret
fcom
(bad)
mov
jbe
mov
aas
movd
add
(bad)
or
sub
jmp
cs
pop
inc
dec
and
sbb
add
pop
ret
test
retf
xor
je
adc
push
ss
jl
int
push
(bad)
cli
cld
push
(bad)
fisub
adc
(bad)
(bad)
jmp
sbb
xchg
repz
sub
jb
sbb
aaa
daa
mov
sub
sbb
jmp
xor
jo
xchg
sub
jnp
or
pop
in
adc
(bad)
dec
sbb
or
xlat
mov
jae
cmp
setae
clc
fwait
pushf
mov
in
in
and
ins
loop
add
mov
push
int3
les
ss
jp
arpl
clc
(bad)
(bad)
inc
dec
sub
mov
cmp
out
pop
scas
ins
clc
inc
retf
xor
pop
icebp
dec
jmp
nop
dec
loopne
cmp
(bad)
lock
das
sub
lock
cmp
cdq
fisubr
inc
or
push
sbb
push
retf
sti
xor
and
(bad)
call
sbb
push
cmp
lods
mov
adc
(bad)
cmp
sar
in
shr
push
popf
pusha
lahf
dec
or
(bad)
(bad)
(bad)
mov
sbb
xchg
sbb
xchg
inc
sbb
pop
fild
lock
jmp
(bad)
(bad)
(bad)
fsub
call
or
stc
das
icebp
xor
mov
nop
pop
out
sti
push
or
and
(bad)
(bad)
(bad)
inc
inc
mov
cmp
pop
add
fcmovbe
sub
scas
add
mov
inc
and
(bad)
mov
mov
inc
and
pop
movs
pusha
dec
nop
ja
xchg
dec
or
mov
addr16
(bad)
(bad)
(bad)
jmp
or
mov
ss
retf
jmp
cmp
push
(bad)
popa
dec
mov
sbb
xor
(bad)
cmp
xor
clc
jbe
ins
in
fdiv
(bad)
pop
rcl
cmp
or
jnp
xor
mov
dec
(bad)
ds
js
in
mov
jnp
les
in
(bad)
(bad)
(bad)
dec
sub
imul
out
pop
scas
xchg
popa
int3
cwde
stos
inc
or
inc
jmp
in
xor
jnp
cli
popf
mov
mov
cmp
hlt
ret
dec
xor
dec
repnz
shr
dec
jg
mov
adc
lds
std
or
sub
jge
int
(bad)
call
ins
dec
pop
push
sub
shl
(bad)
sbb
test
loopne
nop
mov
push
dec
(bad)
(bad)
(bad)
jmp
leave
dec
int3
mov
push
loope
cwde
out
fisttp
sbb
add
shl
and
jnp
adc
(bad)
(bad)
(bad)
(bad)
jp
cmp
add
jge
inc
out
shr
pop
or
arpl
pop
clc
aaa
pop
pusha
dec
in
test
xchg
cmp
arpl
lods
jb
inc
dec
push
(bad)
(bad)
(bad)
inc
sbb
ficomp
mov
mov
or
push
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
sub
scas
inc
xor
xor
int3
dec
test
mov
push
call
xchg
mov
cmp
in
fisttp
sbb
adc
fcom
adc
mov
(bad)
call
push
enter
dec
xchg
pop
cmp
ret
hlt
adc
jmp
loopne
jno
test
inc
push
out
cmp
test
stc
pop
out
jl
xor
fwait
pop
jp
xlat
inc
shl
retf
mov
dec
frstor
cld
mov
cli
nop
or
or
(bad)
(bad)
aas
das
popf
xor
(bad)
pushf
sub
js
adc
leave
mov
pop
fcomp
les
fild
push
in
mov
push
gs
shr
inc
xor
or
and
dec
pop
outs
ret
lods
shl
inc
mov
adc
mov
cmps
loop
arpl
xchg
xchg
aad
pop
cmp
push
clc
call
xchg
inc
inc
pop
sub
(bad)
(bad)
(bad)
call
lods
add
jl
imul
push
stos
mov
fist
or
int
aas
mov
in
mov
mov
enter
sub
cmp
(bad)
(bad)
std
test
jno
adc
popa
lds
adc
(bad)
repz
(bad)
(bad)
(bad)
push
cmp
xchg
(bad)
and
xlat
push
mov
popa
ins
loope
out
outs
fidivr
(bad)
(bad)
jmp
sbb
test
test
pop
mov
sub
jg
xor
(bad)
jmp
pop
xor
xlat
jg
push
jbe
mov
out
clc
(bad)
inc
and
mov
cwde
dec
idiv
movs
xchg
repnz
(bad)
(bad)
(bad)
call
ds
jno
popa
mov
and
mov
add
jns
dec
sub
inc
imul
xchg
lock
fmul
in
mov
je
jno
test
sbb
xchg
test
and
mov
(bad)
(bad)
(bad)
(bad)
jg
pop
add
mov
mov
cmp
mov
mul
cmps
(bad)
(bad)
(bad)
(bad)
jmp
cmps
jmp
ss
push
jge
jb
dec
pop
fcmovb
ss
inc
push
mov
jae
(bad)
(bad)
(bad)
jp
(bad)
arpl
gs
mov
sub
js
lods
inc
pusha
addr16
fisttp
jbe
les
(bad)
mov
btr
inc
fadd
loope
xchg
addr16
(bad)
(bad)
jmp
pop
sub
mov
sub
pop
xor
mov
xchg
cmp
sbb
inc
mov
call
cld
mov
aam
mov
pop
fistp
xchg
aad
jmp
fdivr
push
fcmovnu
mov
(bad)
(bad)
push
pop
cwde
cmp
mov
shl
xchg
popf
stc
mov
mov
out
jmp
iret
stos
xbegin
mov
add
sbb
mov
test
mov
xchg
idiv
test
(bad)
call
fisttp
mov
add
fdiv
bound
jl
pop
xor
xlat
dec
je
cdq
movs
jmp
test
int3
pop
jmp
xor
(bad)
mov
xchg
dec
push
inc
aad
rol
jmp
jae
xchg
dec
cld
dec
mov
mov
xor
sbb
jg
and
(bad)
push
dec
mov
mov
sahf
dec
cdq
pop
scas
sar
inc
arpl
mov
jle
or
aaa
lock
sub
mov
mov
(bad)
(bad)
jmp
dec
test
push
inc
xchg
adc
xor
fldenv
adc
(bad)
jmp
pop
dec
add
jno
mov
pop
or
xor
push
sahf
sbb
cdq
mov
clc
gs
mov
fnstcw
mov
push
pop
sbb
fwait
gs
mov
pop
pop
jmp
movs
rcr
sbb
cli
(bad)
inc
cdq
or
and
shl
ss
cmp
cmps
adc
pop
dec
cli
push
inc
mov
lods
adc
das
xchg
lods
pop
js
mov
jge
in
adc
mov
mov
rcl
ja
push
inc
push
cmps
sub
mov
into
pop
shl
cmps
fiadd
xor
mov
rol
push
(bad)
(bad)
call
or
fidiv
loopne
iret
(bad)
das
cmp
nop
or
pop
dec
pop
fild
cmp
xchg
mov
mov
cld
es
mov
jno
push
fild
ins
sub
stos
movs
je
push
retf
iret
mov
addr16
mov
(bad)
(bad)
cmp
xor
jbe
xor
or
add
lods
cs
xor
jmp
fstp
stos
mov
in
iret
lods
mov
sub
add
xchg
fimul
mov
dec
xor
dec
aad
pop
jp
sti
sub
mov
cmp
ror
int
(bad)
(bad)
(bad)
jmp
jnp
aad
inc
push
in
pop
out
test
movs
xchg
jl
sbb
mov
mov
ror
xchg
(bad)
dec
scas
cmp
inc
jg
xchg
ss
cmps
movs
push
mov
xor
(bad)
pop
push
les
clc
call
(bad)
cmp
(bad)
call
cwde
rol
sbb
(bad)
(bad)
(bad)
call
cmps
aaa
jne
lods
cwde
xchg
mov
push
es
mov
fst
(bad)
(bad)
(bad)
jmp
push
sub
leave
pop
and
dec
clc
ins
out
bound
nop
je
push
jbe
scas
clc
push
fcom
scas
cli
lea
ret
sub
jbe
adc
jo
shl
rcl
std
lods
jmp
pushf
sub
jmp
movs
(bad)
inc
loop
in
rcr
jbe
or
mov
jno
(bad)
jmp
or
leave
call
cmp
sar
inc
(bad)
fbstp
les
(bad)
dec
jo
loopne
(bad)
mov
icebp
xlat
outs
pop
into
pop
retf
jnp
mov
jb
jmp
ins
mov
sub
movs
jb
push
inc
and
push
xor
shl
es
clc
(bad)
jmp
mov
mov
adc
cdq
es
jmp
mov
cmps
or
mov
cmp
mov
in
inc
enter
clc
aam
ins
mov
adc
(bad)
dec
sbb
ins
stos
add
dec
sbb
rcr
ins
outs
adc
jae
fs
jmp
jg
(bad)
call
arpl
inc
and
aaa
out
in
test
shl
push
or
jmp
jae
jle
jg
mov
inc
push
pop
in
pop
rcl
cmp
(bad)
(bad)
(bad)
(bad)
xchg
fsub
call
xchg
icebp
jp
lods
pop
call
pop
cmp
aad
cld
(bad)
dec
dec
out
add
je
sahf
rol
push
cdq
xlat
out
call
out
(bad)
jg
or
test
retf
jl
sbb
jmp
scas
aad
cmp
push
pop
sub
jns
cmp
jge
hlt
mov
(bad)
jmp
loopne
loopne
retf
and
mov
inc
fs
inc
push
cmps
loop
(bad)
(bad)
(bad)
(bad)
fisub
fst
stc
sti
iret
lahf
push
sub
ins
mov
cmp
daa
addr16
cmp
ins
scas
cli
(bad)
dec
rol
leave
popf
fs
add
test
push
movs
lock
push
push
test
push
sahf
and
fidivr
dec
mov
inc
xor
mov
loope
daa
pop
lds
in
mov
xchg
outs
push
jmp
dec
add
pop
int
mov
std
inc
add
jmp
daa
jb
xchg
lods
push
xor
enter
ror
dec
jle
fcmovbe
std
sar
inc
mov
test
(bad)
(bad)
(bad)
push
cli
cmps
xchg
mov
lds
popa
ss
mov
mov
push
shl
sti
fistp
jne
pop
jmp
push
dec
and
push
fs
mov
push
(bad)
pop
mov
outs
push
sub
out
and
pop
sub
mov
(bad)
(bad)
inc
in
inc
jmp
scas
mov
(bad)
xor
repnz
jo
mov
imul
test
(bad)
(bad)
(bad)
(bad)
cmp
jmp
sub
mov
pop
xchg
lock
into
enter
scas
push
das
sub
jmp
mov
push
cs
lds
das
and
sbb
in
clc
inc
or
(bad)
(bad)
(bad)
dec
cdq
das
test
jg
xchg
xchg
(bad)
das
jae
cmp
xor
int3
jmp
push
jno
pop
stc
fcomip
jg
icebp
dec
and
test
(bad)
out
mov
rol
shl
jmp
loopne
pop
push
dec
pop
inc
ror
mov
test
push
fsub
push
xchg
out
cmp
sbb
sbb
push
std
fld
fiadd
mov
mov
gs
sar
cmp
and
sbb
shl
sbb
sbb
(bad)
std
cld
(bad)
(bad)
jmp
jl
mov
inc
movs
in
(bad)
or
xor
sti
cs
dec
add
(bad)
shl
in
gs
(bad)
inc
and
bnd
popf
mov
xor
and
dec
cmp
mov
or
call
popf
pop
jmp
ins
mov
dec
test
lock
and
inc
pop
pop
movs
mov
cmp
scas
fwait
scas
mov
jge
int3
sbb
(bad)
inc
aaa
in
fld
add
jge
or
(bad)
mov
xlat
cs
ret
stos
sbb
pusha
sub
or
into
inc
(bad)
call
fld
mov
add
test
lds
rcl
bound
loope
add
jecxz
lock
scas
adc
jl
call
aaa
xchg
arpl
push
rcl
xor
stc
sub
(bad)
push
idiv
int
ja
push
lods
ds
lods
loope
(bad)
cmovns
and
or
call
call
xchg
lds
xchg
dec
cmc
fdiv
ins
xlat
inc
cmp
(bad)
(bad)
cli
shl
sbb
fcomp
cmps
mov
dec
jmp
xchg
dec
push
scas
rcl
std
(bad)
mov
sub
cmp
sbb
fistp
div
jmp
mov
(bad)
sbb
xchg
pop
imul
call
jo
add
in
call
(bad)
(bad)
inc
and
retf
sbb
pop
pop
fimul
sar
sbb
fcomip
les
in
sbb
mov
or
xchg
and
movs
cmp
fdiv
int3
fwait
xor
(bad)
and
pushf
(bad)
ins
ds
shr
pop
shl
(bad)
(bad)
lock
jbe
(bad)
mov
shl
jle
push
mov
test
mov
arpl
lods
div
call
(bad)
(bad)
(bad)
push
arpl
add
xor
div
lock
mov
sbb
mov
push
test
fbld
cmp
sub
mul
es
call
adc
xchg
iret
and
xchg
inc
xchg
add
rcl
xor
lahf
shl
int3
ins
fs
adc
hlt
addr16
loop
mov
(bad)
call
mov
cs
pop
inc
les
mov
(bad)
(bad)
(bad)
fdivr
jle
add
arpl
mov
(bad)
pop
ds
or
imul
push
in
(bad)
mov
mov
dec
stos
jp
and
mov
xchg
movs
fisttp
mov
mov
clc
or
pop
dec
mov
xor
jg
mov
dec
imul
xor
push
mov
(bad)
in
(bad)
jmp
adc
pop
cmp
cmp
add
inc
mov
hlt
mov
es
inc
fisubr
(bad)
(bad)
jg
cld
aad
nop
adc
fisub
push
fbstp
cmp
(bad)
call
mov
add
cmp
ret
in
sub
adc
(bad)
(bad)
push
lahf
mov
or
xor
adc
stos
rcr
ss
test
scas
loopne
(bad)
(bad)
(bad)
dec
inc
in
fild
or
push
mov
iret
mov
lods
mov
pop
jmp
push
cld
lods
or
int3
cwde
mov
clc
call
and
xlat
mov
cli
dec
xchg
cli
mov
inc
push
fdiv
xor
pop
xchg
pop
adc
or
(bad)
(bad)
call
cmp
es
xor
cmp
mov
pusha
jns
sub
(bad)
(bad)
(bad)
jmp
add
ffree
adc
(bad)
jmp
fbstp
mov
mov
clc
pop
(bad)
(bad)
(bad)
dec
mov
in
and
jmp
or
xor
inc
mov
popf
retf
lods
(bad)
(bad)
(bad)
call
jnp
das
mov
or
adc
add
je
mov
or
(bad)
inc
or
mov
pushf
fs
cmp
cmp
add
mov
(bad)
mov
fwait
sbb
sbb
adc
cmp
(bad)
(bad)
inc
ins
mov
add
nop
jle
dec
push
(bad)
pusha
pop
leave
jae
push
push
test
stc
pop
es
and
(bad)
call
mov
sbb
fadd
add
xchg
mov
cmp
and
shr
(bad)
(bad)
(bad)
jmp
or
adc
stos
mov
pop
dec
hlt
xchg
adc
or
sub
inc
pop
dec
inc
int
arpl
pop
pop
(bad)
cmp
call
imul
and
mov
fld
aaa
icebp
imul
sbb
inc
sti
mov
aam
mov
jno
ret
adc
pop
sti
xchg
sbb
jg
push
std
pop
dec
and
(bad)
lods
xor
out
loop
test
addr16
call
mul
scas
add
inc
add
and
loopne
xor
cmp
and
push
shr
adc
call
push
or
pop
(bad)
mov
icebp
sub
jne
outs
call
ins
xchg
cmp
and
outs
fimul
add
cwde
ret
sbb
cmp
jmp
pop
push
ins
gs
add
add
mov
(bad)
dec
shl
out
add
mov
add
jb
jo
adc
pop
xlat
or
inc
mov
clc
(bad)
call
jl
add
in
or
mov
xchg
and
scas
(bad)
(bad)
push
and
mov
fwait
cli
loop
pop
in
inc
fist
jmp
mov
ja
push
(bad)
jg
jmp
stos
dec
xor
mov
imul
jno
dec
mov
sub
(bad)
(bad)
call
push
movs
push
push
into
xor
xchg
add
sbb
adc
mov
loop
adc
(bad)
(bad)
push
add
cmp
and
rol
jmp
mov
(bad)
(bad)
fild
inc
sub
mov
fsub
mov
adc
adc
mov
(bad)
inc
xchg
xchg
mov
sahf
out
scas
sub
sbb
scas
test
les
jg
dec
mov
or
test
mov
(bad)
(bad)
(bad)
jmp
dec
adc
xchg
and
clc
inc
sbb
mov
sbb
(bad)
(bad)
cmp
out
mov
or
je
and
ss
imul
mov
(bad)
jmp
add
xor
pop
cwde
xchg
hlt
mov
jmp
jne
mul
(bad)
jmp
xchg
mov
mov
inc
imul
ror
or
repnz
arpl
stc
stos
jmp
in
or
(bad)
test
jg
fwait
(bad)
sbb
leave
or
retf
mov
add
add
mov
int
aaa
sbb
scas
mov
cdq
lods
lods
add
jmp
push
mov
mov
sbb
mov
(bad)
cmc
rcl
(bad)
data16
mov
(bad)
call
add
push
xchg
xor
stos
popa
dec
sbb
mov
jmp
fs
div
fwait
push
sbb
call
fcomip
dec
mov
cmps
sbb
ror
add
dec
frstor
scas
(bad)
jg
call
(bad)
(bad)
addr16
rcl
mov
leave
cdq
adc
dec
adc
adc
(bad)
inc
mov
adc
or
mov
idiv
mov
xchg
mov
push
or
(bad)
(bad)
(bad)
(bad)
dec
jb
jmp
das
hlt
outs
fild
pop
push
mov
jecxz
and
or
out
repnz
jecxz
sub
mov
(bad)
(bad)
(bad)
dec
mov
sub
call
push
sti
(bad)
mov
out
lahf
jae
pop
shl
jns
cmp
in
stos
stc
int
add
jle
ins
rcr
icebp
push
jl
mov
int3
leave
cmp
inc
push
movs
push
(bad)
(bad)
(bad)
(bad)
frstor
push
ret
dec
lock
jle
pusha
enter
ja
imul
ret
sti
and
lock
(bad)
mov
(bad)
fisttp
cld
lahf
inc
icebp
fidivr
xchg
or
add
push
mov
(bad)
push
shr
sub
clc
ja
enter
ficom
cmc
mov
leave
in
iret
dec
mov
pop
in
je
(bad)
(bad)
out
xchg
add
mov
lods
in
fldenv
loop
icebp
jmp
fwait
xor
je
test
mov
lock
jae
mov
mov
(bad)
(bad)
call
xchg
xchg
and
xchg
std
adc
inc
push
addr16
hlt
loope
mov
scas
lahf
push
nop
sbb
pop
and
cwde
jbe
mov
adc
lea
pop
test
int3
clc
icebp
sbb
sub
loope
(bad)
jmp
cdq
pop
xor
mov
push
aam
xchg
dec
ss
call
mov
xlat
inc
xlat
loope
jnp
mov
pop
es
or
bound
test
cmp
fidiv
(bad)
jmp
xor
fst
retf
mov
das
call
jmp
cmps
ret
in
adc
in
pop
int
xchg
lahf
popa
in
test
rcr
add
(bad)
pop
cmp
(bad)
(bad)
inc
hlt
jbe
pop
lods
xchg
int3
not
xlat
retf
cmp
xor
adc
jmp
shl
mov
mov
cmps
mov
sbb
fwait
push
repz
(bad)
(bad)
fisttp
js
call
sahf
sub
aaa
dec
iret
scas
mov
mov
ret
or
fisub
mov
cmp
xchg
sti
xchg
fistp
(bad)
(bad)
fisubr
sub
jo
popf
loopne
jnp
fstp
or
aaa
mov
dec
out
les
rcr
(bad)
(bad)
(bad)
(bad)
call
mov
jae
xchg
sub
dec
xlat
sbb
mov
pop
aas
cmp
or
(bad)
push
and
and
push
xor
hlt
icebp
mov
inc
inc
test
and
lds
mov
pop
fimul
icebp
jmp
mov
mov
sbb
movs
sar
cmc
(bad)
(bad)
fisttp
mov
xchg
and
scas
lods
lods
sub
push
mov
lods
jae
movs
(bad)
(bad)
(bad)
call
aaa
test
push
daa
jmp
iret
jmp
inc
jmp
es
daa
inc
sub
inc
dec
int
xchg
push
add
jle
inc
call
jmp
iret
iret
xchg
push
mov
out
clc
into
adc
mov
call
(bad)
dec
mov
addr16
jbe
push
add
mov
jne
jmp
(bad)
(bad)
jmp
inc
add
call
dec
mov
jp
lock
xlat
scas
adc
popf
mov
mov
stos
mov
xchg
in
clc
push
(bad)
(bad)
push
and
inc
push
push
stc
xor
inc
xor
dec
cld
stc
adc
jo
jmp
scas
bound
push
xchg
push
xor
dec
jge
push
repnz
fsub
sets
sar
ret
jg
jle
popa
shr
sbb
adc
push
shl
dec
loop
adc
outs
jl
scas
repz
lods
jg
and
mov
cwde
mov
cmps
mov
add
mov
jge
sub
dec
(bad)
lock
fcmovnb
call
add
call
loope
jb
push
(bad)
(bad)
(bad)
fild
cmp
xor
loope
popa
or
mov
mov
dec
pop
data16
add
push
(bad)
(bad)
fild
jae
sbb
jbe
push
sbb
adc
add
push
mul
ds
cld
jg
dec
les
into
cmp
fnstenv
fs
(bad)
(bad)
(bad)
fadd
test
xor
into
xor
dec
mov
(bad)
ss
jp
mov
leave
jb
cld
test
mov
scas
push
mov
outs
mov
mov
scas
jns
adc
addr16
xor
(bad)
jmp
hlt
fwait
mov
add
pop
mov
sub
push
rcr
std
(bad)
sbb
and
inc
adc
inc
adc
popa
xchg
scas
inc
aas
lds
or
std
(bad)
call
xchg
rcl
jge
iret
and
enter
sbb
pop
lods
sub
ret
xchg
jg
(bad)
(bad)
in
sahf
test
loope
fnstsw
mov
xor
and
mov
(bad)
dec
adc
sub
jg
lahf
dec
mov
or
lds
cdq
xor
(bad)
call
sbb
push
mov
mov
es
add
mov
pop
std
xchg
(bad)
(bad)
(bad)
cmp
jmp
push
jmp
sbb
fiadd
fsub
inc
xor
imul
sub
xor
fcom
adc
sub
jo
test
ins
pop
pop
inc
test
lahf
enter
jg
(bad)
jmp
sbb
mov
and
push
aas
imul
daa
cmps
(bad)
(bad)
inc
and
jg
jbe
xor
cmp
cwde
(bad)
add
aad
dec
jmp
aam
dec
jb
sbb
sub
and
(bad)
(bad)
dec
xchg
xchg
mov
cmp
mov
ret
push
dec
push
jmp
dec
ret
cmps
inc
pop
(bad)
(bad)
(bad)
jmp
lods
xchg
mov
or
sbb
jb
xor
out
aaa
mov
stos
das
mov
shl
call
inc
jmp
and
mov
add
or
jge
ret
loop
push
sub
(bad)
(bad)
call
adc
push
pop
test
ror
inc
and
xchg
mov
mov
sbb
out
(bad)
cli
fcom
dec
neg
imul
add
cli
push
ret
out
jp
enter
(bad)
(bad)
(bad)
fcomp
cmp
mov
mov
add
pop
(bad)
shl
das
aas
mov
push
test
clc
(bad)
(bad)
jg
mov
fild
imul
call
mov
pop
das
sar
icebp
push
and
int3
(bad)
(bad)
(bad)
call
mov
inc
jmp
lods
arpl
jbe
adc
cmp
dec
jns
inc
(bad)
mov
(bad)
dec
cs
sub
test
aaa
ret
sub
jnp
pop
push
jno
mov
cmc
(bad)
call
es
sbb
ins
xchg
pusha
mov
mov
ret
icebp
les
mov
(bad)
(bad)
(bad)
(bad)
out
and
les
ret
fmulp
xor
adc
(bad)
les
ins
loope
aaa
in
fidivr
cld
(bad)
dec
xchg
call
pusha
fstp
shr
inc
scas
add
(bad)
fisttp
sub
adc
hlt
test
dec
icebp
or
jmp
(bad)
pop
xor
mov
(bad)
retf
gs
and
fdiv
push
cmp
pop
cmp
push
stc
mov
jmp
mov
ins
add
mov
mov
add
mov
add
(bad)
jmp
cmp
pop
stos
push
pusha
inc
test
dec
aaa
push
mov
inc
fdiv
out
iretw
cmp
inc
dec
xor
pop
dec
fwait
clc
test
mov
or
daa
jp
mov
call
arpl
adc
xchg
pushf
lods
sbb
cwde
mov
sub
jns
dec
mov
add
cdq
jecxz
ins
fistp
cmp
in
and
icebp
mov
mov
(bad)
inc
inc
lods
mov
adc
aas
mov
adc
ins
leave
je
adc
cld
(bad)
(bad)
call
fsubr
xchg
ins
push
mov
shr
cmp
xchg
adc
adc
test
arpl
inc
(bad)
push
jmp
push
out
xchg
adc
mov
pusha
in
pop
out
mov
xchg
mov
jecxz
fwait
inc
cld
(bad)
push
mov
movaps
xchg
mov
cld
loope
cmp
(bad)
(bad)
aas
mov
fld
push
add
test
hlt
call
pminub
call
mov
stos
dec
xchg
push
not
xchg
mov
shl
pop
lahf
pop
fisttp
push
xor
push
ss
(bad)
(bad)
jmp
loope
(bad)
xchg
push
dec
movs
pop
dec
popa
dec
mov
jmp
cmps
cdq
xor
mov
cmc
xchg
mov
popf
push
add
test
in
mov
test
mov
daa
sub
leave
ret
test
std
jbe
(bad)
(bad)
jmp
mov
jecxz
cmp
out
sbb
inc
popf
ror
(bad)
(bad)
(bad)
call
aas
icebp
fcom
fcomp
xor
cmp
aas
cmps
repz
push
xor
mov
or
aaa
mov
lods
or
outs
addr16
fldcw
mov
fwait
loopne
lock
jo
xor
(bad)
call
add
xor
aaa
pop
arpl
xor
xchg
inc
push
mov
cmp
cld
jmp
test
out
jns
aaa
lock
mov
add
(bad)
dec
stos
fs
enter
xchg
add
inc
cli
sbb
jg
int
sub
sti
jno
cmp
(bad)
call
cmp
test
js
(bad)
lock
dec
dec
mov
in
push
fisttp
out
clc
call
ja
inc
iret
movs
jp
dec
mov
(bad)
(bad)
push
mov
mov
lahf
mov
dec
push
pop
pop
outs
rcl
in
inc
and
adc
pop
iret
popa
sbb
xchg
adc
jmp
mov
mov
fucomip
cs
shl
ss
test
(bad)
jmp
inc
jmp
arpl
mov
mov
(bad)
outs
inc
in
push
mov
inc
das
shl
inc
pop
jae
cdq
in
into
push
(bad)
(bad)
(bad)
inc
mov
outs
xor
cs
pop
push
jne
dec
fisttp
push
iret
rol
sbb
mov
(bad)
sbb
sbb
call
loop
push
clc
(bad)
ds
push
pop
xor
mov
cmp
xor
les
and
sbb
call
xchg
test
pop
fcmovb
jl
std
mov
sahf
sub
(bad)
pop
push
xchg
(bad)
(bad)
(bad)
mov
stos
mov
mov
inc
inc
cmp
xchg
add
pop
adc
neg
mov
(bad)
(bad)
(bad)
call
xor
cmp
in
add
enter
cs
push
test
aas
aas
pusha
xchg
lods
mov
fisttp
push
or
xchg
sub
jmp
push
(bad)
push
imul
call
outs
clc
xchg
out
loop
ins
ins
mov
stos
xchg
sub
(bad)
(bad)
rcr
ja
(bad)
(bad)
call
dec
stos
sbb
clc
jbe
aaa
out
fcomp
jmp
jnp
jno
pop
mov
mov
mov
dec
push
std
dec
push
pop
adc
(bad)
retf
(bad)
(bad)
mov
in
jg
neg
dec
mov
cmp
add
mov
ror
call
dec
lock
mov
xchg
cmp
hlt
fistp
(bad)
mov
lods
test
sbb
out
xchg
(bad)
inc
lods
(bad)
(bad)
jmp
push
or
cmp
clc
pop
rcl
arpl
in
aad
adc
dec
test
jge
cmp
dec
inc
gs
adc
rcr
fsubr
mov
mov
pop
call
test
mov
outs
push
or
fsub
cmc
push
cmp
out
cmp
(bad)
(bad)
(bad)
mov
pop
inc
pop
cmps
jp
push
scas
cdq
sbb
xchg
lods
in
inc
(bad)
ds
(bad)
mov
dec
rcl
stos
jg
rol
cmp
mov
(bad)
push
mov
add
aas
sub
jg
cmp
adc
mov
lods
pop
push
lods
pop
clc
cmps
cs
bound
mov
add
xchg
pop
jno
out
sub
sbb
jmp
(bad)
(bad)
enter
in
jae
in
movs
das
scas
inc
retf
or
dec
add
sbb
jmp
jmp
lods
mov
cmp
sti
mov
das
mul
ret
and
rol
or
icebp
ins
adc
push
push
arpl
cmc
pop
dec
xor
cmp
and
bound
sahf
icebp
cmps
(bad)
jmp
adc
jb
adc
and
cmp
mov
xor
inc
gs
mov
xchg
fst
hlt
inc
out
arpl
call
pop
adc
jno
push
fdivr
(bad)
(bad)
call
clc
aaa
inc
imul
jp
mov
mov
stos
sti
pop
xchg
mov
and
out
xchg
(bad)
(bad)
(bad)
call
(bad)
cmp
out
popa
enter
or
cld
jne
(bad)
fs
test
mov
movs
lahf
je
(bad)
dec
mov
clc
mov
cmp
(bad)
and
push
hlt
(bad)
(bad)
(bad)
jmp
mov
or
ret
cmp
pop
jns
push
ja
adc
cmps
ret
cmp
cmp
push
ins
jl
sub
mov
ja
dec
and
pop
pop
sbb
dec
add
(bad)
(bad)
(bad)
dec
mov
aad
adc
push
mov
inc
rcl
pop
add
call
jo
repz
(bad)
jg
cmc
add
arpl
movs
enter
jle
les
mov
(bad)
jg
jmp
adc
int
in
xchg
into
dec
mov
or
movs
scas
iret
xor
call
xchg
ret
xlat
lahf
xchg
int3
or
push
cmps
add
sub
test
call
adc
or
mov
sub
pop
mov
pusha
sbb
cmps
jnp
jl
mov
push
push
adc
out
or
inc
cmps
inc
cdq
retf
jg
xchg
(bad)
rcr
aas
xchg
add
dec
pop
sbb
ins
inc
aad
xor
les
add
adc
mov
mov
jb
jle
push
jp
(bad)
jmp
(bad)
cmc
mov
jl
sti
ins
(bad)
and
cmps
mov
pushf
pop
push
xor
pop
loope
mov
jge
lea
adc
in
mov
movs
sbb
mov
loopne
(bad)
call
and
cdq
test
adc
push
and
scas
mov
pop
xchg
fwait
dec
jno
cmc
idiv
movs
pop
adc
add
pop
(bad)
out
hlt
sub
push
add
inc
xchg
push
push
xor
cmp
or
idiv
(bad)
(bad)
(bad)
call
daa
and
cmp
mov
pop
(bad)
cwde
stos
xchg
std
inc
mov
push
lods
and
(bad)
(bad)
(bad)
jmp
xchg
rcr
sub
test
fdiv
xchg
loope
inc
mov
enter
mov
(bad)
push
popa
push
cwde
fdivr
add
inc
(bad)
xchg
xlat
mov
pop
(bad)
loopne
fcmovbe
adc
push
xor
ds
(bad)
dec
stos
inc
ror
cdq
lahf
fwait
punpckhbw
push
sbb
in
loop
sub
in
out
adc
popf
inc
daa
mov
push
jl
out
fdiv
jmp
inc
stc
sub
icebp
push
jg
ins
dec
add
(bad)
(bad)
(bad)
push
mov
push
stc
loopne
push
adc
or
leave
jnp
dec
cmps
inc
leave
or
cmp
dec
(bad)
(bad)
(bad)
(bad)
fcmovnb
sbb
scas
pop
ins
cli
mov
(bad)
js
test
sahf
daa
cdq
int3
loop
sbb
and
adc
ins
lahf
clts
not
dec
outs
sub
xchg
xchg
ror
(bad)
jmp
in
adc
fidiv
(bad)
imul
adc
jb
add
stos
(bad)
(bad)
inc
outs
jns
pushf
jmp
jl
sub
call
aad
xchg
inc
add
mov
(bad)
(bad)
push
pop
loop
movs
and
push
inc
xchg
sub
lods
dec
jmp
jo
xor
(bad)
(bad)
call
or
test
xchg
xor
xchg
in
sbb
inc
add
jmp
xlat
push
cwde
movs
cmp
(bad)
call
retf
pop
stos
xchg
clc
mov
push
fs
mov
adc
(bad)
(bad)
out
cli
pop
leave
mov
shr
scas
sti
sbb
jns
ins
and
in
mov
and
pop
jmp
icebp
dec
cmc
sbb
nop
shr
xlat
lea
popa
fmul
mov
xor
xchg
jmp
scas
push
mov
cdq
cmp
inc
retf
adc
in
mov
loopne
sbb
adc
(bad)
cli
inc
(bad)
inc
addr16
mul
out
xor
out
jne
cmp
stos
jg
outs
sbb
sbb
cmps
xchg
adc
sbb
cwde
add
retf
and
aam
lods
sbb
(bad)
call
push
lods
retf
sbb
data16
or
add
push
retf
adc
scas
lods
into
leave
adc
(bad)
jmp
addr16
sub
jp
or
(bad)
mov
jg
call
or
les
mov
mov
xor
aaa
xor
inc
(bad)
(bad)
(bad)
(bad)
mov
mov
jne
je
test
ja
aad
sbb
xchg
mov
(bad)
dec
imul
sub
push
idiv
add
loopne
aas
enter
(bad)
(bad)
fild
or
jae
or
dec
lds
cmp
scas
dec
bound
sub
add
adc
mov
addr16
mov
je
call
popa
jmp
call
out
or
pusha
adc
fst
jg
leave
popf
jns
(bad)
(bad)
(bad)
fbld
aam
mov
movs
cmp
popf
repz
aaa
pop
and
jmp
xor
sbb
(bad)
daa
jle
mov
mov
mov
dec
into
test
loopne
clc
loopne
call
sub
std
test
sbb
or
(bad)
(bad)
jmp
xor
data16
inc
sub
outs
push
xchg
jecxz
retf
ret
push
mov
(bad)
(bad)
(bad)
jmp
cli
adc
mov
mov
sbb
mov
rcl
mov
dec
mov
dec
pop
nop
sar
mov
outs
inc
aas
mov
xchg
mov
xor
xor
std
loop
cld
sbb
leave
mov
call
shl
add
fist
fstp
cmp
add
mov
cmp
cwde
adc
dec
push
adc
sub
push
out
push
test
pop
jge
dec
xchg
(bad)
scas
retf
nop
nop
(bad)
(bad)
(bad)
mov
ja
bound
mov
out
jmp
sbb
add
fld
movs
shl
repz
push
idiv
adc
or
adc
test
mov
call
mov
stos
push
cmp
mov
push
pusha
mov
and
sub
(bad)
mov
jne
fdiv
fldenv
(bad)
(bad)
(bad)
(bad)
(bad)
push
inc
push
loop
rol
pop
(bad)
pop
int3
lods
test
ret
lods
loop
mov
je
aaa
cld
jmp
clc
mov
cmps
sub
pop
dec
inc
(bad)
enter
jnp
aam
add
sub
jmp
mov
xchg
loop
sub
in
ja
mov
shl
jmp
or
(bad)
(bad)
jmp
jns
data16
das
mov
lahf
xor
lock
(bad)
(bad)
jmp
fwait
icebp
mov
cld
popa
inc
jmp
jecxz
or
lahf
or
sar
(bad)
pop
cld
dec
movs
add
lods
popa
fwait
jo
pop
mov
xor
jbe
adc
pop
hlt
xchg
(bad)
out
mov
movs
aas
jbe
cmp
(bad)
(bad)
call
movs
retf
ss
pop
add
jo
(bad)
repnz
xor
das
push
pop
(bad)
(bad)
(bad)
call
jmp
xchg
call
xchg
test
movs
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
int
sub
mov
cli
div
sbb
out
gs
sbb
test
(bad)
call
loopne
call
es
lds
mov
sub
lea
kmovw
(bad)
(bad)
push
in
sbb
dec
pop
sbb
push
ins
repz
lods
fcomp
mov
(bad)
(bad)
jmp
stos
jmp
jne
stc
inc
and
test
es
scas
sub
popf
rcr
icebp
adc
in
add
xchg
gs
stc
out
test
cmp
in
in
add
aam
mov
xor
pop
fild
lea
dec
xchg
mov
mov
arpl
inc
mov
xor
jmp
stc
push
leave
test
sbb
sti
imul
lock
sbb
push
sar
(bad)
(bad)
jp
push
pop
add
loope
pop
sbb
(bad)
inc
test
add
mov
idiv
dec
xchg
push
mul
sub
cmp
mov
int3
ficomp
(bad)
push
fistp
out
mov
push
pop
jae
cdq
inc
jmp
dec
sbb
cdq
mov
dec
add
(bad)
retf
pop
xchg
push
mov
sub
(bad)
(bad)
call
jl
pop
or
push
xchg
xchg
cmp
add
in
or
out
push
fst
(bad)
call
inc
mov
jecxz
jmp
sbb
xchg
fstp
ds
mov
cmp
push
lock
lds
pop
repnz
add
push
test
aam
popa
(bad)
(bad)
(bad)
inc
cmp
cdq
cmp
pop
xchg
ss
push
scas
and
xlat
mov
pop
jmp
out
jbe
or
cmp
mov
add
loope
sub
xchg
test
iret
push
pop
mov
sub
xor
(bad)
call
sti
sub
xor
jbe
nop
cmp
ret
push
pusha
mov
repz
repnz
cmp
lods
sbb
shl
sbb
jo
mov
mov
(bad)
(bad)
(bad)
dec
push
or
sar
inc
in
sbb
std
push
stos
sub
stos
fisubr
push
ins
enter
sbb
sbb
inc
inc
int3
les
push
or
jle
sbb
inc
aas
imul
push
jl
xchg
add
xchg
xor
sbb
sub
inc
pop
pop
mov
adc
shr
out
dec
xchg
dec
sar
push
lods
cmp
adc
xchg
out
hlt
loop
int3
jne
xchg
retf
adc
test
xor
xor
into
test
std
jecxz
test
das
and
cs
cmp
xlat
sub
(bad)
bound
jl
(bad)
(bad)
call
xor
lods
fninit
daa
cmp
cmp
inc
cmc
dec
(bad)
(bad)
(bad)
jmp
xchg
sub
leave
dec
mov
xor
xchg
dec
or
sbb
or
(bad)
(bad)
jmp
push
or
loope
and
inc
sub
jmp
dec
and
pop
fwait
(bad)
(bad)
(bad)
std
ret
push
adc
xchg
pushf
add
xor
or
push
(bad)
(bad)
(bad)
dec
inc
(bad)
push
dec
iret
pushf
fstp
cwde
jbe
pop
lea
sahf
(bad)
movs
inc
pop
dec
jmp
jbe
(bad)
(bad)
(bad)
sti
lea
arpl
pop
mov
jecxz
in
cmc
xchg
xchg
adc
icebp
hlt
mov
shl
xchg
loope
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
adc
lea
js
sub
inc
cmp
sar
popf
jle
(bad)
(bad)
call
and
xlat
inc
mov
add
ss
mov
mov
stc
int
pop
mov
cld
addr16
call
xor
hlt
push
call
pushf
push
xor
scas
clc
(bad)
(bad)
mov
jae
cmp
ss
jmp
fld
jmp
ins
cmc
xor
loope
jb
ss
sub
in
or
pop
outs
push
adc
(bad)
(bad)
(bad)
inc
(bad)
(bad)
retf
sbb
sub
push
aas
bound
repnz
cmp
mov
add
lahf
shr
push
cmc
mov
mov
dec
add
dec
cmps
cmc
ds
call
jmp
adc
mov
add
pop
sub
loopne
ja
loop
(bad)
inc
arpl
fwait
sbb
cmp
jb
int3
cmp
(bad)
jl
(bad)
call
pop
mov
rcl
ins
pushf
mov
(bad)
(bad)
mov
nop
mov
mov
loopne
mov
sbb
jae
in
mov
std
adc
into
leave
push
dec
movs
sbb
call
icebp
mov
and
lods
cwde
pop
aad
test
loopne
sbb
cld
pop
lock
in
pop
xor
pop
movs
ja
dec
(bad)
(bad)
(bad)
(bad)
cmp
add
cmps
call
mov
jp
in
inc
add
jmp
add
(bad)
jmp
les
rcl
xchg
call
jmp
add
ror
cmps
in
jns
cmp
jle
mov
sar
xchg
fisubr
xchg
pop
cdq
mov
fwait
adc
jl
(bad)
(bad)
jmp
jg
imul
loope
and
loop
dec
jmp
and
(bad)
cmp
pop
mov
mov
xor
sbb
cdq
ret
push
xchg
dec
je
cmp
fs
dec
les
pop
mov
(bad)
call
dec
mov
in
jae
add
(bad)
mov
xor
pop
mov
push
and
(bad)
(bad)
(bad)
call
xchg
cwde
shr
(bad)
ja
pop
in
fldenv
cld
or
mov
mov
mov
test
pop
dec
ficom
add
cmp
cld
pop
popa
cs
mov
sbb
bound
inc
cmp
daa
(bad)
(bad)
(bad)
jmp
fdivr
jle
cmp
aas
rcr
adc
int3
in
adc
test
or
(bad)
jmp
loop
sahf
pop
fsubr
mov
pop
pop
fcomip
ins
ss
fdivrp
(bad)
(bad)
push
and
and
arpl
mov
sub
cwde
ret
mov
jmp
fistp
cli
sbb
sbb
cmps
dec
xor
sub
stos
xor
add
(bad)
(bad)
(bad)
(bad)
mov
ret
outs
leave
xor
sub
pop
adc
xchg
xor
movs
sbb
xor
(bad)
(bad)
(bad)
inc
push
loop
(bad)
mov
mov
push
inc
jb
inc
or
cli
and
into
imul
mov
(bad)
stc
(bad)
pop
inc
int3
cmc
mov
fidiv
cdq
and
lock
mov
adc
(bad)
test
(bad)
call
scas
inc
adc
mov
lahf
(bad)
cmc
daa
mov
into
mov
inc
jp
(bad)
(bad)
(bad)
jmp
lock
xchg
lock
jb
(bad)
push
out
sbb
sbb
js
je
sub
sub
call
shl
cmps
retf
push
stos
adc
cmps
cwde
test
xor
(bad)
inc
test
jne
(bad)
and
pop
inc
lods
xor
jmp
jl
jb
inc
cmps
scas
xor
int3
pop
loope
(bad)
(bad)
jmp
stos
jnp
sbb
into
cwde
(bad)
in
push
movs
in
imul
pop
mov
mov
inc
mov
(bad)
(bad)
(bad)
jmp
vucomisd
inc
push
push
mov
outs
retf
arpl
lahf
pusha
loopne
rol
(bad)
(bad)
jmp
popf
or
(bad)
test
push
ins
jle
dec
out
xor
(bad)
(bad)
jmp
repnz
cmp
jae
pop
cli
jb
sbb
jecxz
in
cmp
mov
cmp
clc
(bad)
(bad)
(bad)
out
and
in
xchg
or
cmps
inc
push
int3
adc
rcr
(bad)
(bad)
(bad)
out
(bad)
dec
stos
out
and
neg
xchg
xor
les
cli
sar
(bad)
(bad)
push
lahf
jnp
dec
cwde
pop
or
test
lahf
lods
lahf
fdiv
das
ins
or
fcom
das
leave
fdiv
jg
(bad)
(bad)
(bad)
(bad)
cli
xor
or
xor
add
(bad)
cmp
push
and
jecxz
fs
mov
mov
in
fsub
sbb
lods
add
sti
in
ins
out
cmp
repnz
dec
(bad)
jl
mov
hlt
jmp
xchg
sub
movs
in
mov
cmp
test
icebp
sbb
(bad)
cmp
cmp
push
das
cwde
push
fisttp
(bad)
(bad)
(bad)
call
retfw
sub
das
loop
adc
cmp
cmps
test
sahf
add
in
mov
and
jmp
sub
mov
ja
shr
test
push
rcr
(bad)
(bad)
loope
inc
pop
ret
and
iret
add
imul
lahf
mov
scas
and
jmp
shr
mov
add
pop
inc
lods
jno
nop
xor
push
lea
mov
hlt
popa
add
mov
xchg
dec
cmp
pop
sub
mov
(bad)
(bad)
dec
or
sub
into
mov
das
push
ins
mov
sbb
hlt
stos
dec
rcl
fbstp
out
mov
and
fidiv
sbb
and
add
xchg
ss
stos
dec
ja
and
adc
dec
or
loopne
das
inc
push
hlt
mov
push
shl
(bad)
xor
inc
and
xor
(bad)
(bad)
das
sbb
jae
sbb
(bad)
(bad)
call
adc
pop
pop
iret
popf
out
pop
sbb
(bad)
lds
push
jmp
add
mov
shr
pop
test
div
jmp
out
mov
ret
(bad)
(bad)
call
int3
push
xchg
or
mov
lods
and
repnz
cmp
adc
inc
cmp
mov
(bad)
clc
fwait
push
popa
in
loope
jmp
into
clc
xor
shr
pop
repz
add
das
aam
nop
test
aas
cmp
(bad)
(bad)
(bad)
mov
pop
xchg
fwait
dec
jmp
adc
pusha
sub
das
mov
push
pop
loopne
(bad)
inc
mov
push
fsubr
aas
or
rcl
fidivr
or
fld
scas
ret
les
lods
out
push
jg
(bad)
push
mov
inc
cs
imul
pop
cli
mov
adc
jg
dec
rol
(bad)
(bad)
(bad)
inc
push
fsubr
push
stos
or
test
mov
dec
push
push
push
mov
push
jns
movs
cmc
call
lahf
je
lds
or
loopne
ret
mov
mov
mov
popf
sbb
(bad)
(bad)
(bad)
cmp
lea
repnz
fild
repz
adc
mov
xchg
mov
and
jg
add
or
out
hlt
sbb
fsubr
fs
(bad)
call
xchg
xchg
mov
mov
sbb
sbb
inc
ficom
push
jnp
(bad)
(bad)
inc
scas
sub
add
pop
in
(bad)
dec
mov
mov
js
loope
jno
cmp
lds
xor
loopne
call
(bad)
sbb
cmp
fst
jmp
push
hlt
fnstcw
mov
ret
add
xchg
into
xchg
cmc
sbb
jb
fbld
test
dec
push
push
xor
icebp
mov
clc
(bad)
(bad)
dec
inc
ss
sahf
std
dec
dec
xchg
leave
pusha
xor
ins
cmp
rcr
(bad)
mov
mov
test
jae
dec
jnp
ret
mov
(bad)
(bad)
cmp
pop
aaa
fist
call
xor
and
enter
outs
fcomp
(bad)
cld
sahf
(bad)
fidiv
in
adc
(bad)
(bad)
jp
fsub
aas
popa
sbb
retf
and
jno
popa
test
les
int
(bad)
(bad)
(bad)
(bad)
cmp
mov
dec
ss
push
ds
mov
call
stc
mov
idiv
mov
out
mov
adc
mov
fnstsw
sahf
mov
addr16
das
mov
call
out
sub
ds
(bad)
(bad)
mov
xchg
sbb
aas
add
xchg
fidiv
jno
inc
inc
pop
pop
push
and
jmp
adc
pushf
ss
pop
dec
int
retf
cli
(bad)
push
int3
in
add
lods
(bad)
mov
outs
cli
add
pusha
or
je
dec
inc
inc
xchg
fwait
call
mov
xchg
lock
cmp
pop
cmovns
jg
sbb
xchg
(bad)
push
mov
dec
mov
push
vmovq
jmp
sahf
call
les
fcomip
(bad)
fiadd
stos
movs
ret
in
inc
loopne
int3
mov
daa
aaa
iret
imul
(bad)
jmp
daa
sbb
das
test
aaa
(bad)
call
xchg
push
fmul
in
test
cmps
loop
mov
adc
cmp
movs
scas
adc
and
icebp
fstp
mov
bound
or
lds
push
fwait
test
lds
mov
sahf
stos
loopne
push
iret
inc
pusha
gs
ret
(bad)
(bad)
(bad)
jmp
xchg
jae
jmp
cmp
adc
push
and
pop
ret
inc
mov
inc
cmc
jle
loope
call
cmp
sub
cld
test
data16
adc
xchg
call
push
(bad)
(bad)
push
dec
and
push
sub
jge
jae
add
pop
call
pop
pusha
out
fldz
jmp
adc
cmps
and
push
mov
push
mov
(bad)
push
dec
lock
retf
aam
repz
or
add
ds
inc
clc
in
bound
or
sahf
cmp
call
dec
icebp
fs
add
or
scas
add
ret
mov
pop
mov
inc
fcmovu
inc
aam
les
ret
mov
mov
nop
(bad)
call
clc
inc
ret
stc
adc
cs
add
mov
push
loop
add
inc
jp
std
fistp
mov
(bad)
(bad)
jmp
xchg
xchg
push
adc
(bad)
add
push
pop
xchg
ficomp
cmp
leave
dec
xchg
mov
in
mov
jecxz
inc
sti
pop
ds
rcr
mov
mov
sti
or
dec
sti
dec
sbb
jge
sar
mov
cmp
(bad)
dec
sbb
xchg
mov
mov
xchg
push
ds
(bad)
cmp
fild
(bad)
(bad)
jnp
adc
test
cmp
fnstcw
and
aam
(bad)
jmp
retf
mov
gs
sub
ret
imul
pop
fs
out
cld
loopne
or
jmp
(bad)
out
sbb
add
xor
sbb
addr16
(bad)
(bad)
jmp
pop
in
xchg
or
sub
jge
or
cmp
(bad)
fistp
shr
out
or
sbb
das
(bad)
enter
stos
(bad)
(bad)
(bad)
inc
mov
adc
push
cmp
mov
sahf
shl
jbe
adc
lock
(bad)
call
pop
loopne
pop
mov
nop
out
jmp
mov
jae
and
lock
mov
out
xor
int
nop
scas
fmul
cld
(bad)
(bad)
(bad)
(bad)
fisttp
int
outs
mov
sbb
xor
jl
es
popa
cli
pop
or
pop
push
jne
dec
ret
fdiv
mov
mov
jb
add
(bad)
push
enter
jge
sti
(bad)
jmp
sbb
push
jns
jo
or
(bad)
mov
sub
adc
xchg
cmps
inc
(bad)
(bad)
(bad)
inc
rol
jp
cmps
fcom
jbe
ret
mov
in
retf
loop
pop
fst
jg
clc
cmp
mov
out
and
and
dec
push
bound
jle
push
div
test
push
add
repnz
jbe
test
cmps
dec
xchg
or
std
(bad)
(bad)
(bad)
fistp
mov
mov
cmp
cwde
mov
fcmovb
sub
inc
bound
jg
dec
in
es
hlt
(bad)
fwait
push
test
les
(bad)
(bad)
(bad)
cmp
imul
loop
out
sub
movd
mov
mov
mov
jge
jl
jmp
sahf
lods
in
push
mov
repnz
or
repz
sbb
pusha
aaa
popa
in
mov
mov
fidivr
jp
(bad)
(bad)
inc
retf
and
fadd
movs
mov
push
fist
scas
(bad)
xchg
(bad)
shl
mov
test
dec
adc
pop
in
sub
push
add
call
cmps
push
pop
pop
ret
daa
data16
dec
sbb
mov
xchg
scas
jae
jmp
xor
(bad)
(bad)
jmp
mov
dec
mov
mov
call
mov
add
dec
mov
pusha
fcmovu
pop
inc
cmp
sub
cmp
retf
dec
cmp
(bad)
(bad)
jmp
inc
(bad)
retf
ins
push
sub
imul
cmp
pop
(bad)
call
icebp
movs
(bad)
inc
fwait
cmc
pushf
dec
and
loopne
push
movs
mov
pop
push
push
lods
sahf
fs
dec
xchg
sti
stc
call
or
mov
jecxz
push
dec
pop
adc
enter
call
(bad)
jnp
jecxz
arpl
xchg
es
xor
in
arpl
mov
sub
(bad)
(bad)
dec
dec
push
call
dec
mov
mov
(bad)
out
fidivr
xor
mov
cmovnp
(bad)
(bad)
jmp
cmps
push
or
sub
pop
pop
imul
cmp
ins
fwait
or
adc
sub
(bad)
(bad)
jmp
dec
cdq
push
lahf
or
add
fs
out
add
stos
xlat
mov
sub
(bad)
mov
(bad)
mov
jle
out
imul
in
in
dec
and
jnp
(bad)
(bad)
(bad)
call
lods
pop
test
ins
out
push
mov
(bad)
pusha
dec
inc
jg
sbb
loope
adc
(bad)
(bad)
(bad)
jmp
mov
dec
or
dec
nop
push
xor
aam
movs
inc
jnp
inc
mov
jecxz
sahf
lahf
(bad)
(bad)
(bad)
dec
sub
add
test
lds
lahf
mov
imul
pop
jmp
dec
add
cmp
cmps
(bad)
(bad)
mov
and
jns
push
lods
movs
sub
je
sbb
xor
lock
enter
scas
pop
mov
cmp
cmps
out
add
neg
out
jle
call
mov
or
icebp
fadd
rol
mov
ins
adc
push
in
xor
add
(bad)
(bad)
(bad)
cmp
arpl
xchg
add
sti
mov
jo
mov
adc
jp
adc
(bad)
(bad)
mov
fmul
loope
ds
imul
(bad)
xor
inc
jae
(bad)
mov
xor
sar
mov
sbb
mov
pop
dec
test
push
(bad)
(bad)
jmp
jb
ficom
mov
and
mov
xor
jnp
(bad)
(bad)
jmp
add
loop
pop
rcl
sub
pop
xchg
ret
inc
jae
mov
(bad)
(bad)
inc
(bad)
sbb
or
lds
pop
pushf
mov
push
xor
adc
mov
jnp
push
push
jle
xchg
jge
or
push
adc
inc
ss
sbb
scas
in
push
dec
inc
(bad)
jg
nop
call
cmc
test
ss
hlt
cmp
call
mov
sar
hlt
dec
stos
iret
push
jb
jae
arpl
leave
(bad)
(bad)
(bad)
jmp
cmp
test
dec
and
inc
in
jmp
retf
push
jo
mov
pushf
imul
(bad)
xor
stos
in
in
and
inc
sub
addr16
sub
sti
(bad)
push
fdivr
pop
dec
sub
mov
mov
(bad)
(bad)
mov
add
data16
push
aaa
enter
push
fmul
sub
test
stos
(bad)
dec
jnp
sbb
mov
gs
lock
test
xchg
jbe
inc
mov
(bad)
(bad)
(bad)
jmp
popf
test
in
or
mov
data16
aam
inc
or
movs
jp
inc
int
(bad)
(bad)
dec
xchg
enter
jge
inc
xor
call
or
dec
fucomi
pop
jmp
add
(bad)
cmp
ins
scas
test
add
add
ret
inc
out
push
mov
jg
sbb
cmp
adc
arpl
(bad)
cmc
or
ss
mov
jb
test
(bad)
(bad)
(bad)
dec
pushw
icebp
dec
sti
sub
mov
outs
aaa
jecxz
f2xm1
dec
imul
fwait
jmp
mov
out
push
sub
fiadd
add
call
(bad)
jg
popa
cmp
adc
mov
out
mov
push
pop
push
lock
adc
enter
inc
nop
ss
mov
inc
mov
leave
mov
adc
in
push
arpl
add
mov
hlt
stos
push
test
or
or
xchg
imul
inc
iret
(bad)
out
xor
cmp
out
xor
push
daa
mov
(bad)
inc
push
adc
pop
fxch
push
outs
xchg
dec
mov
xchg
call
aad
ficomp
pop
sub
stos
inc
and
inc
and
clc
(bad)
(bad)
call
dec
ud0
cs
fwait
push
icebp
mov
stc
jb
fisub
pop
mov
jmp
ins
xchg
mov
ret
out
sbb
adc
or
xor
(bad)
jge
sar
add
fwait
pusha
push
cmps
sub
adc
jg
in
mov
sti
ficomp
inc
cmps
retf
push
or
(bad)
mov
fadd
cmp
mov
push
sbb
(bad)
(bad)
fild
xchg
outs
adc
or
out
cld
gs
mov
xchg
lock
fnstcw
inc
shl
pop
(bad)
dec
pop
call
(bad)
dec
nop
sbb
movs
pop
out
push
lock
ret
pushf
rcr
push
test
xchg
(bad)
sbb
(bad)
(bad)
jmp
fsubr
aad
adc
xor
imul
pusha
sar
mov
cdq
xor
jno
(bad)
(bad)
jmp
add
cmp
aas
inc
leave
les
loope
or
inc
shl
xchg
xchg
and
cwde
xor
loope
js
pop
lock
out
movs
mov
pop
icebp
pop
push
jmp
mov
loope
xor
add
xchg
cmp
mov
cld
(bad)
jmp
dec
lock
lock
adc
and
retf
lea
push
mov
push
sbb
sbb
sbb
cmps
dec
mov
dec
and
sbb
cld
adc
jmp
stc
mov
gs
ds
mov
icebp
(bad)
(bad)
call
cld
and
fdiv
test
test
lds
icebp
fbstp
xor
pop
div
(bad)
(bad)
jmp
xchg
call
aaa
dec
into
pop
dec
pop
cmps
cmp
jnp
adc
(bad)
(bad)
jg
sub
adc
or
call
inc
ds
mov
mov
mov
pusha
lahf
and
bound
in
es
mov
jecxz
ja
les
out
xchg
ss
sti
pop
sbb
nop
adc
mov
sbb
xchg
mul
(bad)
(bad)
inc
mov
scas
sbb
addr16
test
cmp
in
mov
or
pop
adc
clc
out
clc
es
mov
(bad)
icebp
xor
(bad)
(bad)
mov
nop
sar
mov
sbb
push
jg
xor
mov
call
vpacksswb
stos
inc
jne
in
push
or
out
and
adc
shl
test
sbb
and
loop
xchg
js
(bad)
ret
xor
sub
mov
in
inc
push
mov
lea
(bad)
(bad)
(bad)
jmp
test
jl
or
ds
jle
out
xchg
dec
push
mov
add
or
(bad)
(bad)
dec
lock
mov
lods
pop
pop
lods
dec
push
mov
mov
iret
mov
mov
cmp
or
sub
(bad)
call
icebp
mov
enter
mov
in
mov
inc
xchg
and
gs
fmul
les
xor
fisub
jne
ds
cmp
in
ds
or
rcl
aam
loop
jg
xor
movs
adc
inc
mov
icebp
sub
outs
nop
rcr
sbb
clc
mov
repz
jg
rcr
pop
xchg
sbb
inc
das
cli
outs
clc
push
iret
(bad)
lock
fs
out
std
jno
sub
sbb
cmps
sbb
fisttp
(bad)
(bad)
call
(bad)
push
xlat
mov
scas
sub
ds
push
out
adc
xor
call
add
push
sub
xor
(bad)
(bad)
dec
mov
xchg
std
bound
ins
mov
mov
dec
shl
sar
test
inc
(bad)
cmp
inc
mov
ret
adc
fcomp
pushf
sbb
cmp
in
push
imul
lahf
lahf
pop
clc
stos
push
mov
dec
sti
ins
pop
dec
adc
mov
mov
mov
or
(bad)
out
(bad)
(bad)
(bad)
inc
jmp
rol
cmc
fist
push
call
push
pop
icebp
adc
jg
mov
fs
lahf
add
(bad)
fcom
inc
test
(bad)
jnp
int3
jo
fdivr
mov
sbb
pop
mov
lds
or
scas
mov
push
pop
retf
retf
cs
sub
jb
xchg
ins
mov
sub
xlat
mov
ror
ja
inc
and
adc
pop
clc
inc
sar
push
pusha
add
outs
(bad)
(bad)
inc
inc
out
retf
loopne
dec
mov
mov
xchg
or
rcl
mov
add
dec
push
cli
xor
outs
xor
por
jae
xchg
jae
mov
pop
pusha
pop
in
cmps
gs
(bad)
(bad)
inc
popa
shl
daa
pop
jmp
adc
outs
mov
mov
cmp
(bad)
dec
adc
das
scas
fdivr
push
fs
inc
(bad)
in
mov
mov
cmc
sbb
(bad)
(bad)
call
mov
dec
or
ret
mov
jmp
inc
xchg
jmp
mov
(bad)
(bad)
(bad)
sti
lods
add
mov
std
aad
mov
dec
addr16
out
out
lahf
or
(bad)
(bad)
(bad)
jmp
shl
movs
cmp
sar
sub
and
(bad)
xlat
sbb
imul
add
mov
mov
(bad)
(bad)
fcomp
mov
mov
out
and
imul
inc
xor
ror
adc
(bad)
(bad)
(bad)
jmp
cmps
out
ret
mov
sahf
sar
in
mov
ret
xchg
xor
inc
xchg
mov
out
cmp
mov
push
ins
jb
(bad)
(bad)
jmp
dec
pop
mov
and
call
retf
fiadd
mov
dec
inc
xchg
jg
(bad)
jmp
les
push
and
ins
repz
mov
mov
call
js
or
sar
xor
cld
aas
idiv
xor
adc
cld
ds
xor
mov
std
retf
out
test
sbb
inc
hlt
push
repnz
jns
(bad)
iret
fsub
stos
and
retf
adc
add
jp
xchg
call
sbb
ret
jp
mov
(bad)
(bad)
jmp
ja
push
cmp
in
sub
test
lahf
jne
movs
movd
popa
cmp
(bad)
(bad)
jmp
pop
cmp
xor
mov
dec
and
or
sub
bound
ror
push
(bad)
(bad)
call
(bad)
jl
mov
jg
neg
jmp
or
pop
mov
fnstenv
xchg
(bad)
pop
std
call
add
ds
lock
pusha
pop
shl
scas
imul
jae
mov
es
movs
mov
clc
daa
(bad)
add
fsubp
je
push
(bad)
push
rcr
ror
mov
call
push
mov
mov
(bad)
mov
test
jnp
sti
mov
(bad)
mov
inc
aas
mov
sub
mov
mov
daa
call
jmp
daa
cmp
aas
add
in
mov
pop
inc
xchg
xchg
cs
retf
xchg
mov
call
push
inc
jl
scas
jmp
lods
mov
cmp
xchg
mov
pop
mov
dec
out
push
cmc
inc
test
out
repnz
xchg
iret
jmp
sar
mov
mov
loope
ins
mov
xchg
xor
push
or
stos
or
mov
(bad)
inc
(bad)
fs
imul
ds
es
mov
inc
test
sti
mov
or
(bad)
fimul
outs
stc
sub
dec
(bad)
(bad)
(bad)
jg
adc
mov
pop
push
jg
push
jmp
cld
sti
clc
out
fdivp
cmp
out
(bad)
(bad)
jmp
and
mov
fimul
mov
xor
jg
aas
loop
ins
repnz
ror
stc
test
or
outs
adc
imul
add
dec
push
fs
cmps
mov
mov
call
mov
pop
mov
mov
lahf
bound
movs
push
mov
jmp
jmp
bnd
ret
mov
push
add
(bad)
(bad)
(bad)
mov
jecxz
xchg
loop
fimul
rol
pop
xchg
jno
and
vminss
(bad)
(bad)
dec
mov
aaa
adc
into
sbb
jp
ins
mov
dec
leave
lea
inc
xchg
jle
jg
(bad)
push
ins
(bad)
leave
jg
and
sti
std
call
cmp
and
std
xor
pusha
movs
ins
mov
jbe
call
js
inc
and
shl
(bad)
inc
loope
sahf
(bad)
aam
inc
dec
leave
xlat
rcr
mov
mov
arpl
inc
mov
(bad)
ret
retf
ins
js
adc
(bad)
repz
das
and
mov
push
(bad)
out
clc
dec
adc
fdivr
cmc
mov
test
loop
mov
cwde
fnstcw
retf
call
shr
shl
shl
sbb
stos
(bad)
dec
(bad)
(bad)
call
mov
push
(bad)
mov
dec
test
lods
scas
ss
and
pop
hlt
(bad)
call
fisub
adc
into
sub
ret
fmul
push
inc
xchg
cmp
push
mov
cli
ins
jle
inc
adc
or
cs
daa
les
lea
jne
cmp
mov
pop
pop
or
push
sub
(bad)
aam
and
sub
jne
imul
cld
(bad)
call
xor
xchg
jge
bound
loop
fisttp
cmc
(bad)
(bad)
(bad)
jg
and
les
jl
fdiv
mov
lods
into
ins
scas
(bad)
xchg
fnstenv
push
lods
(bad)
(bad)
(bad)
dec
call
sbb
call
sbb
loopne
xor
dec
xchg
cmp
aad
int3
and
out
imul
xchg
stos
pop
pop
fs
(bad)
(bad)
dec
pop
pop
mul
push
ins
inc
jnp
mov
mov
xchg
xchg
aam
push
(bad)
(bad)
(bad)
(bad)
cmp
mov
cld
or
(bad)
imul
mov
fiadd
mov
cmps
(bad)
das
arpl
jmp
and
pop
(bad)
sbb
pop
stos
xchg
arpl
sub
test
je
and
pop
mov
std
(bad)
(bad)
jmp
sub
sbb
xchg
test
(bad)
jp
ds
(bad)
call
push
call
xchg
stos
not
push
jle
pop
stos
inc
or
add
(bad)
jmp
xchg
retf
pop
push
add
sub
xchg
(bad)
(bad)
inc
xor
cmp
les
adc
(bad)
push
lock
ins
hlt
xor
jg
ds
ins
(bad)
scas
outs
pop
or
mov
sub
fild
dec
enter
lods
pop
sub
imul
(bad)
(bad)
call
sti
dec
cmps
ret
ins
pop
mov
mov
clc
adc
popa
jg
cmp
add
(bad)
(bad)
(bad)
(bad)
fcom
adc
or
(bad)
aad
fdiv
ins
js
test
(bad)
adc
cli
into
and
mov
pushf
fmul
mov
cmp
xor
jge
mov
retf
(bad)
in
mov
sahf
sbb
nop
jecxz
shl
out
jae
sbb
pushf
cmps
(bad)
push
pop
mov
sub
cmp
stos
sbb
jmp
sub
sub
adc
(bad)
call
mov
outs
mov
mov
mov
addr16
lahf
push
pop
(bad)
(bad)
dec
mov
daa
xlat
xchg
inc
and
push
clc
arpl
pop
mov
xor
xor
dec
loope
dec
xchg
and
adc
push
mov
or
(bad)
call
cld
xchg
cmps
xchg
xor
sbb
imul
and
xchg
push
aas
pop
les
jecxz
xor
ins
dec
pop
sbb
clc
mov
(bad)
mov
mov
dec
cwde
xor
sbb
adc
xchg
cdq
dec
out
mov
(bad)
(bad)
(bad)
inc
out
loop
fdivp
jge
pop
pop
(bad)
je
add
retf
cmp
mov
je
scas
or
(bad)
(bad)
mov
pop
out
sbb
mov
lea
mov
xor
pusha
(bad)
(bad)
(bad)
(bad)
clc
fsub
and
mov
pop
or
mov
push
jbe
inc
(bad)
(bad)
jg
mov
cmps
cli
dec
cmc
hlt
add
stc
cmp
and
add
inc
dec
into
inc
inc
sbb
popf
sub
mov
cli
xchg
cmp
rcr
aam
(bad)
(bad)
mov
(bad)
lea
xchg
xlat
cmp
or
mov
fwait
sub
in
cmp
cmp
gs
xchg
fbld
or
sub
mov
(bad)
fidivr
sti
cdq
inc
ins
push
enter
push
and
loope
(bad)
(bad)
fbstp
xor
ss
hlt
call
mov
(bad)
lds
(bad)
fcom
mov
dec
adc
ins
or
inc
jg
int3
fild
es
(bad)
(bad)
jle
in
push
dec
lock
mov
retf
pop
ror
inc
outs
cmc
mov
adc
ret
xchg
inc
push
ja
(bad)
(bad)
mov
cmps
push
sub
dec
iret
cmp
test
into
cmp
jne
ss
jmp
pusha
add
repnz
dec
stc
push
or
out
and
dec
pop
retf
pushf
xlat
xor
jbe
(bad)
(bad)
jg
and
gs
cmps
jne
mov
dec
pop
sub
mov
fisub
(bad)
mov
cld
dec
inc
stos
inc
add
jno
adc
sahf
ret
push
repz
mov
xor
imul
fst
(bad)
fistp
(bad)
push
jne
dec
dec
xlat
aas
and
inc
lds
jno
xor
jb
or
mov
ret
sub
out
aas
test
jle
call
cmps
aad
enter
dec
mul
retf
push
pop
push
mov
cld
jmp
gs
das
lea
(bad)
(bad)
(bad)
jg
cmp
adc
pop
ret
sar
jmp
mov
or
das
clc
(bad)
call
xor
mov
lds
mov
hlt
pop
add
(bad)
(bad)
call
dec
mov
fsubr
sub
push
jne
cld
lahf
int
mov
out
cmps
bound
retf
(bad)
(bad)
fisttp
mov
jne
push
ja
fstp
test
sti
xchg
sbb
(bad)
(bad)
(bad)
inc
push
xchg
or
(bad)
in
jle
leave
dec
pop
xor
sahf
push
adc
mov
lea
les
cli
dec
cmp
jmp
lea
mov
mov
(bad)
(bad)
call
inc
retf
sti
retf
push
inc
dec
inc
sar
mov
adc
aas
mov
mov
push
je
xor
push
fld
scas
les
les
ss
out
fisubr
inc
push
out
sub
inc
inc
push
(bad)
(bad)
jmp
je
test
nop
xlat
jle
fst
daa
jb
test
das
icebp
mov
(bad)
(bad)
jmp
cli
dec
ins
pop
mov
adc
mov
jmp
hlt
test
xchg
xor
fcom
jmp
stos
xlat
(bad)
sti
mov
stos
lahf
movs
xor
pop
mov
xor
or
mov
and
stos
leave
mov
(bad)
lock
push
stc
lods
mov
lods
sbb
(bad)
call
in
sti
inc
jle
(bad)
push
scas
push
fs
push
loope
pushf
rcr
mov
rol
(bad)
(bad)
(bad)
jg
into
sub
adc
push
ins
(bad)
mov
or
adc
mov
dec
cs
(bad)
(bad)
(bad)
cmp
call
fiadd
pop
shl
jp
dec
pop
iret
pop
add
in
addr16
mov
call
iret
sub
(bad)
mov
cmp
fcom
neg
(bad)
(bad)
(bad)
dec
mov
add
jge
adc
(bad)
repnz
dec
inc
xor
movs
arpl
shr
xor
dec
jo
cmps
add
jns
movs
and
int
jo
sahf
pop
add
(bad)
(bad)
dec
sub
pop
xchg
imul
jbe
ss
fmul
(bad)
mov
push
cld
(bad)
(bad)
jg
mov
xchg
(bad)
retf
xchg
and
or
jmp
inc
push
(bad)
jg
add
cmp
inc
cs
push
jmp
js
ins
test
add
or
mov
mov
and
xchg
cmps
and
cmp
(bad)
(bad)
jmp
mov
imul
ret
dec
jmp
adc
push
test
in
mov
(bad)
(bad)
(bad)
inc
sub
rol
adc
mov
mov
in
sar
jns
test
and
jecxz
adc
repnz
hlt
mov
nop
dec
in
rcr
dec
mov
out
and
xor
push
sbb
int
xchg
aad
add
jae
hlt
hlt
mov
js
(bad)
(bad)
(bad)
mov
xchg
lea
test
and
jmp
or
test
cld
cdq
cmps
push
movs
cli
inc
jo
xadd
outs
stos
sbb
(bad)
(bad)
(bad)
inc
loop
fmul
xchg
mov
aam
adc
movs
push
xchg
lock
ds
xchg
(bad)
push
ret
imul
jo
mov
dec
dec
or
(bad)
(bad)
call
fs
jg
jbe
cli
sbb
ficom
lods
add
test
call
mov
inc
and
sbb
sbb
sahf
hlt
xchg
out
(bad)
jmp
xlat
xchg
into
pop
jnp
xchg
mov
mov
sbb
dec
adc
and
cld
call
mov
imul
js
or
(bad)
loopne
add
(bad)
(bad)
inc
mov
push
ret
and
jecxz
add
mov
and
inc
dec
out
pop
mov
lahf
in
hlt
adc
push
mov
(bad)
imul
lahf
xchg
clc
stos
add
mov
sbb
or
sub
jp
(bad)
call
fisttp
(bad)
cli
ret
loopne
daa
push
add
bound
icebp
(bad)
(bad)
dec
sbb
dec
and
fisub
pop
mov
mov
cmc
inc
and
loopne
(bad)
(bad)
frstor
into
and
pop
sub
pop
push
popf
lds
xor
mov
add
and
jmp
stc
dec
mov
lock
mov
loop
lahf
cmp
mov
arpl
test
sbb
(bad)
pop
push
(bad)
(bad)
call
push
mov
mov
test
sbb
aaa
movs
fadd
push
aaa
ret
clc
inc
inc
mov
jle
cwde
or
dec
xchg
shl
(bad)
(bad)
(bad)
(bad)
cld
loopne
push
movs
lds
movs
xor
movs
cmc
jae
(bad)
test
adc
jbe
cmc
pop
lock
(bad)
mov
jle
adc
pop
mov
ret
int3
pop
addr16
outs
dec
add
cs
(bad)
(bad)
cmp
icebp
mov
cmp
push
pusha
adc
fs
cmp
jno
jnp
sbb
mov
(bad)
(bad)
jns
in
aas
scas
or
cmp
push
mov
push
gs
iret
sbb
(bad)
pop
inc
sar
inc
mov
sbb
sahf
jne
lods
cmp
aad
pop
and
sub
inc
cld
pop
div
lods
mov
bound
and
call
call
or
and
and
and
(bad)
call
loope
aas
and
out
push
add
mov
cmps
cmps
sub
mov
mov
rcr
inc
mov
inc
cmp
cmp
ror
(bad)
(bad)
jmp
xchg
scas
pusha
mov
dec
not
ret
push
cmp
jne
test
daa
int3
cmp
shl
(bad)
(bad)
(bad)
call
mov
inc
mov
data16
fidiv
mov
dec
jmp
aaa
rcr
and
enter
cld
jmp
lods
imul
adc
and
add
fsubr
rol
sub
clc
(bad)
(bad)
call
or
add
imul
add
(bad)
(bad)
mov
cmp
popf
ja
(bad)
(bad)
(bad)
xlat
sub
pop
push
jmp
lods
mov
dec
std
rsqrtps
loopne
ja
fsubrp
add
push
loop
mov
sbb
push
repz
ficomp
mov
hlt
call
mov
lods
push
(bad)
das
fidivr
mov
jl
inc
mov
pusha
xchg
mov
dec
sbb
push
cmp
pop
out
and
into
test
pop
mov
(bad)
(bad)
dec
mov
xchg
or
icebp
xor
int
scas
push
xor
test
inc
aaa
inc
repz
(bad)
(bad)
push
fmul
ret
jne
adc
xchg
add
jge
sti
aam
xchg
sbb
xchg
pop
stc
push
cs
inc
ja
clc
mov
pop
rcr
aas
push
mov
jmp
cmp
cmp
in
nop
xchg
sbb
xor
in
push
fsubr
mov
hlt
or
test
hlt
push
retf
es
sbb
inc
and
cmps
sub
jl
(bad)
(bad)
(bad)
jmp
jnp
ret
into
add
sub
aas
mov
int3
sbb
pop
and
push
and
xchg
cmps
jne
(bad)
(bad)
(bad)
jmp
or
pop
push
je
cmp
bound
jns
dec
jns
fsubp
outs
ffreep
movs
loopne
cmp
addr16
jle
and
pop
mov
xor
(bad)
(bad)
out
mov
xchg
idiv
sbb
lahf
jle
xchg
ror
(bad)
or
mov
xchg
mov
pop
push
(bad)
(bad)
(bad)
inc
jns
and
mov
ror
pop
jmp
ins
pop
popa
(bad)
(bad)
(bad)
(bad)
jp
sbb
sbb
fimul
inc
(bad)
daa
mov
clc
jmp
leave
push
ss
dec
(bad)
sub
in
ret
cld
(bad)
jg
in
add
inc
aad
gs
shl
scas
outs
xor
ret
call
mov
jecxz
loope
inc
push
jl
and
(bad)
mov
sub
xor
mov
ficomp
dec
cmp
xor
call
(bad)
inc
lods
mov
cmps
clc
cwde
(bad)
(bad)
ss
xchg
and
xchg
test
mov
(bad)
(bad)
(bad)
call
jge
xor
js
xchg
mov
cdq
(bad)
xchg
cmp
sub
movs
movs
in
not
add
(bad)
(bad)
inc
push
pop
cld
jge
and
ds
retf
add
dec
dec
data16
jnp
and
daa
ret
xor
cmc
(bad)
jmp
push
jp
or
xchg
data16
inc
shl
mov
cli
sub
(bad)
test
pop
(bad)
(bad)
(bad)
jmp
add
dec
dec
loopne
pop
push
call
and
xor
ret
outs
push
push
push
(bad)
(bad)
(bad)
dec
sbb
aam
mov
int3
std
lahf
cmps
pop
adc
cmps
xor
fld
pop
xchg
inc
or
(bad)
(bad)
(bad)
jmp
cwde
jmp
cs
push
aad
or
jmp
je
outs
pop
mov
(bad)
(bad)
dec
aaa
scas
fs
movs
or
push
sbb
mov
push
push
sub
xchg
les
test
pop
cmp
dec
xor
and
(bad)
(bad)
(bad)
(bad)
cli
aam
cmp
push
mov
jmp
test
scas
jno
shl
push
pop
mov
inc
retf
lds
adc
pop
sahf
test
lock
cmp
push
in
inc
and
sbb
jge
add
sbb
mov
scas
ror
test
call
add
mov
dec
mov
ss
ins
and
out
ja
pop
bound
loop
(bad)
(bad)
call
pop
dec
aad
sbb
addr16
fs
cli
(bad)
aas
shr
push
xchg
das
sub
dec
in
(bad)
(bad)
(bad)
inc
mov
pop
dec
lea
inc
jp
stos
pusha
(bad)
ss
out
test
cmp
ror
dec
mov
retf
es
push
lahf
cmps
addr16
(bad)
push
inc
clc
(bad)
(bad)
push
jmp
sub
mov
aaa
add
adc
loopne
pusha
gs
pop
or
sbb
inc
(bad)
(bad)
fisttp
dec
inc
cmc
loope
inc
ret
clc
adc
xor
or
or
lock
mov
adc
inc
inc
cdq
(bad)
(bad)
(bad)
inc
aam
jbe
jns
mov
scas
out
lea
mov
adc
xchg
mov
retf
std
popa
loope
push
into
sbb
arpl
inc
fcom
fstp
adc
jp
inc
(bad)
(bad)
(bad)
call
mov
ins
(bad)
cld
push
inc
sub
scas
or
add
sbb
sbb
jne
ja
pop
mov
(bad)
(bad)
(bad)
push
int3
dec
lods
test
into
mov
out
add
mov
sub
mov
push
(bad)
call
cmc
cs
out
mov
inc
mov
leave
jae
(bad)
je
outs
(bad)
push
mov
test
fwait
inc
mov
hlt
pop
adc
ret
push
xor
stos
push
loope
inc
pop
enter
mov
std
(bad)
call
(bad)
push
jp
and
push
enter
lods
retf
mov
icebp
push
popf
ret
(bad)
call
add
pop
sbb
mov
push
sbb
call
loopne
cmps
jp
sti
rcl
aaa
or
fdiv
fwait
mov
or
aas
(bad)
cmp
bound
lods
mov
jo
push
std
jmp
sub
sub
push
push
(bad)
loop
outs
pop
mov
pop
mov
xchg
(bad)
(bad)
push
test
push
cwde
popa
mov
inc
cmp
and
stc
pop
in
mov
cmp
fcmovbe
(bad)
jmp
das
add
pusha
data16
cmp
xchg
adc
call
(bad)
push
rcl
ins
xchg
out
mov
mov
dec
in
push
mov
push
or
int
imul
mul
mov
or
cli
adc
or
mov
test
jg
gs
or
std
test
push
ret
hlt
outs
sbb
pop
add
(bad)
(bad)
jmp
lahf
cmp
bound
jb
xchg
xchg
mov
lahf
inc
push
dec
lods
jno
loopne
push
popa
outs
mov
sbb
loopne
push
mov
mov
popf
call
push
mov
daa
xchg
jp
mov
clc
push
std
or
cmps
scas
test
or
and
shl
cmp
add
jae
push
xchg
lods
mov
out
lods
cwde
and
(bad)
(bad)
jg
pop
dec
popa
and
dec
dec
xchg
les
fst
call
add
mov
(bad)
(bad)
(bad)
fadd
in
mov
int3
push
cmp
jge
retf
pop
mov
call
(bad)
call
jle
aad
stc
(bad)
mov
push
std
mov
mov
adc
(bad)
(bad)
jmp
popf
adc
sub
test
push
in
jnp
cdq
loopne
push
jnp
lock
les
dec
inc
in
xchg
cmps
test
xchg
cld
mov
jns
and
(bad)
(bad)
(bad)
cmp
imul
shl
xchg
pop
repz
sub
push
pop
inc
cmps
sbb
xchg
loope
(bad)
mov
mov
rcr
cmp
(bad)
jg
mov
inc
xchg
sbb
push
stos
mov
sbb
fidivr
inc
out
inc
ds
mov
(bad)
(bad)
(bad)
inc
inc
jno
mov
daa
pop
ficom
les
xor
pop
mov
xor
xchg
mul
cmp
xor
cmp
(bad)
push
mov
mov
sbb
dec
jne
(bad)
xchg
jb
add
fidivr
jg
pusha
pop
adc
dec
sub
sub
fsub
mov
cli
(bad)
(bad)
jmp
loopne
jne
ret
fnstsw
mov
push
xor
icebp
sub
(bad)
(bad)
out
xchg
pop
dec
fld
loope
out
test
and
push
mov
clc
(bad)
(bad)
(bad)
jp
cmp
mov
leave
(bad)
jae
pop
lock
aas
mov
cmp
pop
jmp
add
jg
sbb
test
xchg
inc
test
(bad)
(bad)
(bad)
(bad)
mov
pop
hlt
retf
mov
cs
cli
daa
mov
icebp
jmp
cli
outs
retf
(bad)
(bad)
(bad)
push
mov
ds
sbb
mov
cdq
or
bound
sub
sub
inc
int3
gs
xchg
sub
imul
hlt
(bad)
(bad)
(bad)
mov
inc
je
dec
adc
jg
inc
fstp
push
sbb
or
jmp
dec
push
test
movs
xchg
mov
mov
or
mov
repz
add
adc
inc
das
xchg
jmp
and
loopne
fiadd
(bad)
dec
adc
outs
clc
aaa
fs
mov
jecxz
ret
fistp
and
push
fdiv
dec
xchg
addr16
ins
ins
sub
es
addr16
adc
(bad)
(bad)
mov
ja
mov
imul
jo
clc
mov
cmps
dec
sti
dec
xlat
(bad)
(bad)
(bad)
(bad)
fbstp
mov
test
in
test
int
adc
push
push
adc
lock
xchg
gs
add
(bad)
jmp
push
(bad)
sbb
into
mov
std
mov
out
cmp
xchg
loopne
cdq
(bad)
sbb
retf
(bad)
mov
dec
cmovbe
sbb
(bad)
(bad)
(bad)
mov
(bad)
loop
add
arpl
sti
outs
ja
pop
fistp
mov
daa
push
adc
push
jns
(bad)
mov
mov
int
or
cwde
mov
call
sbb
push
pop
adc
mov
sub
cmp
cmps
(bad)
(bad)
cmp
jae
pop
int3
std
(bad)
dec
inc
enter
int3
bound
adc
and
call
out
xor
sub
(bad)
(bad)
jmp
pop
mov
mov
sbb
pop
mov
das
call
xor
xor
(bad)
jmp
pop
cmp
or
mov
cmps
sub
imul
stos
mov
mov
mov
xchg
xchg
lea
and
icebp
test
dec
jge
pusha
ret
icebp
into
mov
shl
dec
sub
cmp
fistp
fiadd
js
call
xlat
or
cmps
and
(bad)
call
std
loope
dec
sbb
mov
and
mov
push
ja
sti
sbb
dec
mov
clc
hlt
dec
and
in
loop
inc
cld
or
cmp
enter
xchg
into
jb
pop
imul
xchg
inc
sbb
push
mov
adc
pop
lods
push
jae
cmc
adc
aam
inc
dec
aad
das
aad
or
adc
sar
ffree
mov
(bad)
leave
or
jp
fistp
jb
pop
dec
js
(bad)
fs
cld
fidiv
adc
xlat
(bad)
(bad)
(bad)
in
inc
cmc
or
cmp
or
push
sbb
clc
cli
adc
cmp
and
stc
xchg
add
mov
push
cmps
cdq
cwde
fdiv
out
pop
lock
adc
cmp
lea
(bad)
into
into
or
test
sub
loopne
(bad)
(bad)
jmp
aad
scas
jae
xchg
sti
jp
mov
xchg
adc
sbb
gs
(bad)
call
rcr
in
pop
jns
pop
hlt
and
push
mov
bnd
push
or
ret
(bad)
inc
jmp
rcl
cmps
adc
inc
sti
dec
mov
jp
aad
jno
iret
rcl
icebp
(bad)
jmp
bound
mov
xor
pinsrw
xchg
cmp
call
inc
cwde
icebp
cmp
aam
mov
ret
push
outs
jbe
idiv
(bad)
jmp
xor
cmp
cmps
scas
je
adc
mov
dec
lock
test
cwde
nop
hlt
es
sub
bnd
inc
inc
in
cld
aad
sub
sbb
ds
cvtps2pd
aam
adc
fist
dec
or
pop
mov
outs
in
xchg
mov
mov
fs
push
(bad)
(bad)
(bad)
(bad)
aas
aam
test
sub
sbb
push
fild
mov
push
call
inc
clc
mov
js
imul
(bad)
mov
jmp
jmp
into
jmp
out
inc
retf
(bad)
(bad)
(bad)
dec
jmp
repz
loope
loope
int
scas
inc
stos
imul
(bad)
(bad)
call
data16
push
into
pop
cld
clc
cmps
and
push
add
repz
(bad)
mov
fnstenv
fist
inc
bound
xor
ins
movs
push
js
mov
(bad)
(bad)
jmp
mov
int
les
xchg
jle
jg
adc
and
std
jns
adc
leave
in
aad
jg
popa
sub
inc
dec
clc
cmp
pop
push
out
int3
(bad)
(bad)
(bad)
(bad)
mov
inc
fs
cs
test
mov
lods
mul
add
and
jmp
jg
(bad)
jg
sbb
test
sbb
lds
xor
(bad)
call
jb
pop
or
clc
lahf
xchg
(bad)
or
xchg
stos
das
xchg
ss
stc
ins
add
(bad)
jg
(bad)
jp
adc
add
or
dec
sub
or
push
and
(bad)
(bad)
inc
pop
jg
scas
cwde
adc
push
mov
mov
sub
sbb
add
icebp
push
(bad)
jg
test
loopne
and
jge
aas
es
sbb
arpl
(bad)
xchg
das
cli
neg
add
test
lods
xor
sub
fnstsw
push
inc
push
mov
sub
in
xchg
cs
std
shl
inc
add
pop
outs
push
cmp
and
(bad)
out
cmp
dec
movs
rcr
fwait
pop
and
movs
jmp
jmp
clc
ficomp
je
dec
leave
in
or
mov
(bad)
(bad)
call
and
test
sti
jg
ds
push
daa
mov
dec
add
push
push
fist
mov
(bad)
loopne
std
das
cli
mov
xchg
addr16
inc
sub
push
stos
imul
cmp
jge
repz
jge
push
and
xchg
xor
sub
outs
adc
test
fcomip
xor
fs
push
inc
enter
cld
gs
push
(bad)
das
sub
stos
loope
loope
movs
js
jecxz
dec
jecxz
jae
adc
jmp
cmp
rep
cmp
pushf
add
xor
(bad)
call
and
dec
xchg
jg
inc
mov
pop
imul
lods
test
inc
cld
mov
call
and
rcl
mov
dec
sar
(bad)
inc
and
(bad)
daa
data16
xchg
(bad)
test
out
(bad)
mov
int
pusha
loopne
out
or
pop
repz
dec
cli
(bad)
(bad)
(bad)
mov
movs
lea
aaa
ficom
adc
lods
sub
xor
arpl
(bad)
jg
jmp
popa
dec
(bad)
or
cmp
xor
pop
inc
xchg
out
call
pushf
(bad)
(bad)
(bad)
(bad)
mov
inc
in
ss
popf
mov
mov
ss
pop
das
in
das
mov
mov
add
out
cli
mov
push
jbe
push
enter
(bad)
(bad)
out
ss
mov
repnz
cs
xchg
adc
add
add
pushf
dec
inc
loopne
mov
dec
mov
cdq
(bad)
neg
cli
sti
sub
cld
pop
pusha
jmp
add
mov
ret
dec
call
mov
enter
mov
mov
jb
cmps
mov
sub
(bad)
inc
mov
dec
inc
lods
jnp
jmp
rol
lods
dec
pop
pop
cmp
retf
jp
outs
inc
(bad)
test
sbb
jg
shl
inc
in
sub
push
mov
in
call
cld
(bad)
mov
mov
mov
push
sub
push
dec
or
jp
or
imul
mov
stos
inc
jnp
push
out
mov
xchg
xchg
sub
fsubr
mov
mov
call
push
int3
(bad)
(bad)
(bad)
mov
les
stc
cmp
outs
cmp
(bad)
cmp
je
mov
(bad)
(bad)
call
add
push
bound
mov
pop
fisttp
es
aad
pop
ret
retf
jle
xchg
mov
call
jae
mov
test
dec
add
dec
sub
(bad)
(bad)
fisttp
aas
scas
pop
cmp
nop
aaa
and
inc
shr
das
jge
ins
push
mov
add
loopne
icebp
(bad)
(bad)
jnp
fwait
or
adc
jg
sub
mov
jns
(bad)
(bad)
fstp
mov
test
or
push
pop
dec
xor
(bad)
(bad)
push
sbb
daa
lea
adc
push
mov
call
(bad)
jmp
mov
push
cdq
fmul
inc
clc
daa
call
out
test
mov
iret
fs
xchg
in
inc
ja
movs
inc
call
sub
(bad)
mov
mov
mov
xlat
mov
ds
pop
out
pusha
xchg
xor
(bad)
(bad)
jl
(bad)
stc
mov
into
push
scas
test
in
jbe
push
imul
xchg
dec
movs
inc
test
jmp
jecxz
in
push
mov
sbb
push
cld
ds
out
pop
(bad)
mov
sbb
(bad)
(bad)
jg
xchg
sbb
dec
pop
push
inc
(bad)
neg
or
inc
sbb
ret
pop
xchg
add
scas
outs
pushf
and
(bad)
(bad)
inc
in
in
xchg
outs
mov
xchg
pop
mov
mov
(bad)
pop
rol
bound
data16
(bad)
(bad)
jmp
cmp
cmp
test
adc
xlat
imul
lods
call
or
mov
pop
and
repz
ss
push
leave
xor
sbb
push
js
retf
repnz
inc
(bad)
jp
repnz
fidivr
popa
pop
in
push
ds
loope
push
sub
ret
sub
fsubr
outs
cmp
xor
mov
xchg
inc
push
(bad)
(bad)
(bad)
call
sbb
inc
mov
mov
repnz
mov
lahf
push
cmp
aaa
dec
inc
jg
mov
jp
and
xor
push
(bad)
push
loope
sar
(bad)
dec
fiadd
jg
mov
addr16
sbb
xor
push
sbb
in
dec
(bad)
fcomip
jg
push
push
mov
xor
sti
dec
pop
std
mov
daa
retf
lods
cmps
xchg
jp
scas
cli
jmp
xchg
mov
or
jo
pushf
cwde
out
pop
fwait
pop
ret
bound
loope
(bad)
push
in
push
fistp
pushf
sub
push
inc
es
frstor
sub
aam
xor
mov
lods
enter
outs
cli
(bad)
inc
ss
sbb
in
xchg
jecxz
cmp
push
or
push
(bad)
ror
mov
mov
mul
call
popa
cmp
(bad)
mov
cld
xor
mov
(bad)
push
push
cdq
or
push
mov
cli
fldenv
test
jle
loopne
cmp
leave
mov
call
dec
push
aas
cmp
pop
adc
ret
call
call
jecxz
and
ds
push
jb
movs
mov
clc
lds
daa
cmp
imul
out
adc
adc
daa
jmp
mov
dec
lock
in
push
mov
(bad)
(bad)
(bad)
jnp
jbe
loopne
lahf
out
sbb
popa
cli
xchg
rdpmc
dec
pusha
jae
shr
fnsave
out
sbb
pop
sub
ja
sub
adc
mov
sub
or
add
not
loop
cli
(bad)
fist
pop
js
push
push
add
jae
fadd
push
mov
cmp
push
(bad)
adc
shl
ret
(bad)
dec
pop
add
in
not
retf
jg
fs
aad
imul
(bad)
xchg
stc
in
(bad)
(bad)
(bad)
rol
leave
xlat
leave
aad
xchg
mov
ins
sub
ret
mov
push
cmp
in
(bad)
(bad)
(bad)
dec
out
add
rcl
scas
scas
pop
mov
mov
mov
cmps
add
mov
(bad)
inc
scas
arpl
iret
sub
sub
mov
shl
lods
repnz
jne
dec
fmul
repz
mov
add
in
mov
and
iret
ja
dec
push
(bad)
pushf
add
out
enter
cwde
(bad)
(bad)
(bad)
push
mov
mov
pushf
nop
call
leave
fsubr
mov
sub
push
dec
xchg
les
mov
jne
xor
fld
jae
(bad)
(bad)
(bad)
call
pop
jmp
pop
retf
sbb
inc
enter
outs
sbb
mov
cli
(bad)
(bad)
call
dec
adc
popf
mov
out
rsqrtps
aam
mov
dec
mov
fs
push
(bad)
(bad)
(bad)
out
push
std
xchg
repnz
mov
bound
or
dec
adc
(bad)
call
cmp
and
lods
adc
adc
mov
mov
xor
(bad)
test
(bad)
jmp
adc
and
into
bound
pop
pusha
imul
or
loopne
ffreep
aam
sti
pop
icebp
int3
pop
(bad)
(bad)
push
ja
mov
mov
xacquire
movs
inc
cmp
and
push
ficom
(bad)
ins
mov
cmp
out
movs
(bad)
stos
xchg
push
int
adc
mov
cmp
loopne
sub
add
mov
pop
or
push
push
lock
jmp
ret
loope
mov
inc
outs
inc
pop
dec
fs
in
mov
mov
mov
(bad)
call
repz
repz
das
mov
cmp
xor
add
push
and
iret
pop
dec
adc
push
repz
or
xchg
xchg
es
mov
pop
lds
and
xor
loop
and
pop
std
(bad)
dec
lds
add
mov
adc
xor
push
out
mov
cmp
add
(bad)
loop
push
jmpw
mov
fcos
(bad)
mov
add
and
dec
dec
(bad)
cmc
xchg
je
pop
scas
sar
(bad)
(bad)
push
out
loop
sub
or
ja
mov
and
cvtps2pd
sbb
ret
ret
movs
repnz
mov
aas
mov
stc
sub
(bad)
push
jo
pop
not
cli
add
jmp
popa
shl
loope
(bad)
mov
(bad)
mov
jp
hlt
push
ins
repz
stos
mov
call
out
(bad)
(bad)
(bad)
(bad)
push
add
dec
data16
pop
and
jle
or
daa
or
xchg
cmps
or
(bad)
(bad)
(bad)
push
pop
adc
jp
arpl
nop
sahf
inc
je
add
mov
pop
mov
push
mov
(bad)
(bad)
(bad)
push
outs
inc
or
cwde
idiv
cdq
imul
jb
pusha
adc
push
call
sub
dec
push
scas
mov
(bad)
fstp
mov
lea
movs
xor
das
pop
or
jg
call
popa
push
retf
imul
adc
or
cmp
jl
jns
dec
adc
call
cld
dec
gs
(bad)
cld
sub
sahf
dec
sti
hlt
xor
cmp
scas
dec
sbb
pop
das
mov
out
rep
lock
cmp
fs
jmp
jmp
mov
sub
out
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
mov
inc
iret
into
cs
mov
and
out
fdiv
mov
xchg
int
bound
(bad)
(bad)
dec
cmp
aad
fistp
xor
clc
out
mov
mov
inc
adc
(bad)
(bad)
fistp
pushf
xchg
mov
pop
ins
push
mul
push
icebp
inc
lods
lock
xchg
push
(bad)
jmp
push
int3
into
mov
mov
idiv
shl
cmp
ins
sbb
(bad)
call
inc
push
mov
inc
cs
push
dec
jne
pop
adc
push
push
(bad)
(bad)
(bad)
(bad)
call
mov
jmp
or
xchg
inc
cmp
push
jb
fisubr
cmp
(bad)
jmp
mov
adc
addr16
xlat
push
and
sbb
mov
sub
(bad)
(bad)
(bad)
(bad)
jmp
test
ins
test
pusha
fnstenv
push
pop
cdq
imul
xor
or
shl
and
das
not
or
and
xor
shr
out
stc
cs
not
mov
mov
dec
imul
std
mov
fwait
(bad)
(bad)
jg
nop
loop
adc
add
push
in
std
out
inc
jns
leave
mov
ss
dec
(bad)
mov
add
(bad)
out
cli
fs
movs
or
add
mov
bound
sbb
jl
loopne
(bad)
cmp
jg
popa
pop
aaa
fs
dec
mov
popa
cld
call
leave
loope
in
out
and
dec
rcr
sbb
(bad)
daa
xchg
pushf
(bad)
in
(bad)
(bad)
dec
and
mov
leave
xchg
mov
push
sar
fs
or
add
push
push
(bad)
jmp
movs
call
push
lea
jmp
mov
jp
js
and
inc
and
mov
adc
adc
ds
push
push
(bad)
call
cdq
les
push
inc
shr
dec
sbb
mov
cmp
adc
push
cmp
jno
push
push
mov
pop
mov
pop
inc
pop
mov
cli
adc
dec
jbe
sub
push
pop
xchg
popa
loope
cmp
mov
sbb
movs
arpl
xor
sbb
lods
pop
std
(bad)
(bad)
mov
mov
mov
and
add
(bad)
stc
and
adc
ret
fs
or
cli
jb
rcr
jmp
adc
cli
scas
cmps
xchg
jbe
xor
js
ins
jecxz
add
repz
jmp
push
dec
loope
imul
inc
mov
xchg
je
sbb
and
call
mov
arpl
fwait
mov
repz
pusha
add
mov
or
dec
inc
outs
and
bound
cld
(bad)
call
retf
and
push
div
cmp
out
arpl
sub
sahf
mov
(bad)
(bad)
jg
jl
or
test
out
stos
fs
ins
push
add
ret
adc
sbb
pop
jp
add
or
mov
inc
sbb
outs
(bad)
(bad)
(bad)
push
dec
dec
imul
xchg
mov
test
mov
stos
ret
nop
and
sub
push
pop
or
(bad)
in
ret
stc
lods
repnz
lods
jmp
es
sub
dec
dec
add
inc
mov
inc
cmc
in
jg
push
sbb
inc
mov
mov
xchg
xchg
fcomp
push
push
shl
dec
shr
inc
ret
push
fnop
jl
aaa
xlat
daa
xlat
add
ins
sub
dec
(bad)
call
retf
add
popf
retf
jg
and
in
stos
sub
aaa
xchg
hlt
call
push
jbe
std
and
sub
sti
dec
std
dec
jae
(bad)
call
dec
fdivr
mov
xor
je
dec
cmc
push
iret
(bad)
(bad)
(bad)
(bad)
call
push
cwde
cmps
aaa
adc
push
and
sub
sahf
jp
hlt
push
mov
push
(bad)
(bad)
push
imul
in
mov
aad
pop
sub
cmp
dec
jae
pop
sbb
repz
dec
pop
pop
mov
cmp
ds
adc
ret
push
call
mov
(bad)
(bad)
stc
lahf
jge
pop
movs
dec
cs
iret
fdivr
daa
(bad)
sub
push
and
ins
mov
(bad)
(bad)
jmp
inc
pop
or
into
mov
pop
js
mov
sub
(bad)
dec
jnp
xchg
cmp
(bad)
(bad)
jmp
setb
jp
lea
gs
es
add
mov
aaa
mov
inc
(bad)
call
and
sbb
push
sbb
cld
pop
js
fnstsw
and
xchg
test
inc
xchg
popf
add
dec
aad
xor
(bad)
(bad)
(bad)
dec
xor
add
rcr
data16
push
adc
shl
pop
sub
(bad)
(bad)
(bad)
call
and
push
sahf
and
push
(bad)
stos
cmp
pop
pop
loope
dec
mov
leave
push
movsx
or
test
inc
arpl
stos
pushf
jo
or
repz
hlt
fisubr
(bad)
(bad)
jmp
ja
inc
xchg
push
pop
mov
arpl
pop
mov
jp
ds
imul
aas
int3
fist
imul
pop
gs
pop
mov
ins
(bad)
mov
lock
push
jle
pop
pusha
cmp
fiadd
xor
xor
lods
mov
retf
mov
das
jb
pop
cmp
out
dec
stos
or
xor
jmp
jmp
adc
mov
xchg
and
add
xor
push
push
pop
and
call
test
out
retf
mov
or
jo
test
inc
mov
mov
loopne
iret
mov
push
xor
out
or
mov
push
inc
cli
cmp
inc
(bad)
(bad)
(bad)
call
dec
mov
or
xchg
mov
cs
pop
dec
rcr
sub
mov
call
xchg
fild
and
mov
dec
popa
jnp
pop
or
xchg
(bad)
(bad)
(bad)
mov
ins
xor
mov
mov
push
inc
push
mov
push
sub
inc
les
or
icebp
jp
push
int
cs
push
aam
jle
jle
lods
outs
cmp
popa
pop
int
out
mov
jmp
adc
sbb
xor
icebp
(bad)
cmc
mov
(bad)
jmp
mov
mov
xor
scas
xor
(bad)
(bad)
(bad)
push
jmp
call
and
(bad)
cli
dec
nop
cmp
scas
(bad)
fisttp
jmp
sar
outs
cmp
les
mov
scas
xor
int3
into
pop
(bad)
(bad)
mov
mov
mov
sbb
mov
or
pop
aaa
add
jmp
and
aas
xor
and
(bad)
mov
fld
add
fnsave
mov
imul
aad
lods
lock
jo
jg
jle
xor
(bad)
jns
loope
into
push
add
mov
(bad)
(bad)
inc
scas
popf
xchg
push
cmp
lea
movs
or
(bad)
cmp
(bad)
sbb
clc
mov
inc
pushf
bnd
in
adc
clc
(bad)
out
rcr
sub
and
(bad)
call
ss
popa
ret
adc
pop
(bad)
std
add
or
and
bound
push
movs
clc
(bad)
cli
bound
fidiv
outs
xchg
int3
(bad)
or
out
or
dec
stc
jmp
mov
cmps
push
stos
inc
xlat
(bad)
(bad)
(bad)
inc
or
sub
test
and
mov
mov
jmp
jle
inc
aam
cwde
outs
or
dec
push
scas
mov
mov
fs
cmp
frstor
mov
sbb
lea
sahf
sbb
(bad)
(bad)
(bad)
(bad)
call
in
push
and
stc
xor
pusha
mov
lods
mov
cmp
call
clc
(bad)
call
mov
cwd
and
pop
aad
repz
inc
mov
xor
or
(bad)
jmp
sbb
xchg
stc
fdiv
ret
add
(bad)
dec
or
in
mov
fs
outs
out
fsub
mov
(bad)
(bad)
call
sub
mov
jg
ins
jnp
pop
sub
out
jg
sbb
leave
scas
cmp
cli
outs
lahf
jno
sbb
cmp
mov
retf
hlt
(bad)
jmp
pop
(bad)
or
sbb
or
mov
cmps
scas
dec
ror
clc
push
out
jb
int
test
mov
(bad)
(bad)
(bad)
inc
fcomp
js
aas
dec
mov
sti
pop
hlt
pop
psubd
pop
pop
mov
(bad)
xchg
jmp
shl
cmp
and
xchg
pop
cmp
jb
xchg
pop
sahf
loopne
cwde
bound
shl
cmc
jmp
push
je
fxch
out
enter
mov
adc
cmp
(bad)
jmp
add
hlt
(bad)
cmp
xchg
mov
push
or
(bad)
(bad)
(bad)
call
jmp
mov
dec
sub
cmp
fs
xor
mov
popf
lahf
mov
mov
mov
mov
js
(bad)
(bad)
(bad)
dec
cdq
cmp
mov
sub
mov
aas
imul
push
fnsave
mov
xor
(bad)
call
xchg
jle
push
js
cmp
lods
inc
push
mov
loop
fild
cmp
(bad)
inc
ret
cld
push
fimul
add
hlt
add
mov
sub
dec
(bad)
ret
pop
mov
jecxz
(bad)
(bad)
(bad)
(bad)
in
jge
shl
push
fadd
ror
sar
cmp
mov
or
adc
xor
(bad)
push
mov
popa
imul
popa
jp
out
clc
outs
ins
imul
loope
xor
cwde
(bad)
(bad)
(bad)
jmp
xor
ficomp
cli
lods
pushf
fs
call
cli
xor
or
sbb
(bad)
jmp
div
ror
jle
rcr
sbb
sbb
push
daa
out
test
loopne
dec
cmps
xor
adc
adc
cdq
and
sar
cmp
fwait
in
push
mov
adc
imul
xchg
add
add
das
test
call
cdq
cmp
mov
lds
mov
xor
call
xchg
(bad)
xor
dec
mov
sub
jmp
scas
pop
adc
jecxz
sar
mov
cmp
and
pop
sub
and
(bad)
jmp
push
or
arpl
cmp
popf
xchg
mov
push
bound
cld
pop
mov
int
test
(bad)
(bad)
(bad)
aas
mov
dec
fimul
(bad)
fs
dec
sub
xchg
xor
push
and
stos
add
(bad)
std
sbb
pop
call
mov
mov
(bad)
call
add
addr16
push
bound
dec
mov
xor
sahf
repz
jmp
xor
lea
lods
loopne
(bad)
nop
(bad)
lods
xchg
mov
or
jp
xchg
and
adc
mov
mov
push
mov
sub
pop
or
inc
(bad)
(bad)
(bad)
inc
pop
rol
mov
test
xlat
dec
push
mov
lea
(bad)
(bad)
jmp
push
jg
jae
sbb
aad
mov
shr
pop
aad
and
add
fmul
(bad)
(bad)
(bad)
(bad)
sti
sbb
loope
js
dec
inc
sar
pop
in
hlt
daa
shl
add
xor
add
push
pop
sub
add
push
bound
bound
das
enter
rol
xor
jne
xchg
imul
dec
int3
call
or
cmc
sahf
dec
cmps
ins
rcr
loop
xchg
jecxz
outs
dec
shr
aaa
std
(bad)
dec
sbb
dec
data16
cmp
dec
call
je
xchg
mov
(bad)
push
(bad)
(bad)
jmp
mov
fwait
adc
cli
dec
push
sub
pop
lods
mov
shl
(bad)
(bad)
push
mov
sbb
adc
xchg
adc
clc
sub
rcr
cld
mov
sbb
(bad)
push
movs
jo
les
repz
add
add
add
add
in
test
lahf
lock
adc
out
addr16
(bad)
inc
lock
int
add
cmps
cld
push
or
sub
inc
imul
rcl
xchg
out
sbb
mov
std
or
mov
pop
push
and
inc
add
push
pop
rol
inc
and
imul
xchg
or
push
(bad)
cmp
push
data16
cs
(bad)
aad
or
xor
sub
repnz
test
sub
ins
push
jns
jp
inc
pop
mov
xchg
loope
or
shr
hlt
aad
repnz
mov
or
jbe
adc
adc
or
(bad)
fstp
hlt
stos
jle
fs
fwait
imul
into
xchg
jmp
mov
lds
mov
fisttp
pusha
jge
out
ins
fiadd
ret
(bad)
(bad)
jge
stos
test
mov
leave
pop
jmp
lahf
push
imul
jno
jmp
fidiv
or
cmp
test
loope
scas
ret
inc
out
test
sbb
call
mov
mov
rcr
mov
push
add
daa
dec
hlt
(bad)
(bad)
mov
dec
inc
hlt
pop
jl
adc
jg
cmp
jno
xchg
stos
(bad)
sub
dec
out
clc
call
push
xchg
(bad)
call
sub
pushf
clc
test
(bad)
jmp
add
leave
sti
(bad)
adc
cmp
dec
rcl
into
cmp
pop
aam
(bad)
mov
xor
(bad)
hlt
shl
in
ins
mov
rol
int3
(bad)
(bad)
(bad)
call
cmps
and
push
nop
jge
bound
ss
(bad)
dec
nop
(bad)
(bad)
(bad)
dec
mov
dec
stos
cdq
dec
jmp
ret
adc
(bad)
push
mov
sar
(bad)
(bad)
call
(bad)
test
and
push
test
adc
pop
mov
lock
add
inc
gs
imul
arpl
sbb
pushf
inc
pop
pop
rol
pop
dec
sbb
imul
cmp
fcomip
xchg
ret
cmc
xlat
pop
fild
aaa
mov
bound
(bad)
(bad)
dec
loopne
push
adc
(bad)
pop
jg
mov
out
nop
cmps
cs
mov
or
and
iret
lahf
cmp
(bad)
inc
(bad)
jmp
std
jmp
fist
jg
sub
pop
fiadd
dec
adc
popa
ins
test
fisttp
icebp
popf
jle
sbb
cld
mov
mov
sbb
(bad)
(bad)
(bad)
dec
(bad)
mov
ror
push
mov
push
inc
lahf
pop
ds
xchg
fwait
(bad)
(bad)
(bad)
call
ds
lock
sti
cmp
enter
cmp
pop
adc
adc
cmp
(bad)
jmp
pop
mov
adc
sbb
cmp
das
mov
mov
arpl
movs
sbb
mov
cli
outs
cld
out
test
cdq
pop
mov
les
xchg
xor
jle
pop
dec
cld
inc
int3
push
mov
add
(bad)
(bad)
jmp
mov
sar
in
movs
ins
jne
neg
ds
(bad)
(bad)
mov
dec
push
fcom
(bad)
adc
jecxz
mov
jmp
jle
cld
call
lea
adc
in
or
cmp
xor
mov
mov
int
mov
mov
int3
mov
iret
push
in
adc
mov
(bad)
(bad)
jmp
mov
push
sbb
xor
dec
out
fsub
pop
sbb
stc
repnz
mov
pusha
ds
mov
add
and
imul
popf
or
loop
ins
pop
add
clc
call
loopne
(bad)
push
xchg
mov
nop
(bad)
(bad)
jg
leave
in
or
xchg
push
mul
pop
mov
test
sbb
lahf
popa
adc
xor
inc
ror
xor
jmp
clc
(bad)
mov
mov
cmp
push
loopne
or
imul
cld
addr16
adc
clc
(bad)
jmp
iret
jle
push
mov
rcl
sar
in
sbb
stos
and
mov
jg
push
cld
(bad)
xchg
mov
xchg
jnp
mov
jbe
daa
rol
or
ins
jo
lock
jmp
das
pop
mov
or
rcl
pop
dec
inc
inc
or
call
add
mov
mov
sbb
cmp
hlt
mov
fwait
(bad)
(bad)
jp
xor
cld
or
cmp
add
out
xchg
jmp
(bad)
(bad)
push
and
les
mov
std
retf
adc
dec
mov
inc
fiadd
int3
daa
(bad)
(bad)
(bad)
dec
jbe
adc
mov
mov
pop
fld1
(bad)
jne
aaa
cmp
lods
mov
(bad)
(bad)
(bad)
fcmovnu
lods
xchg
shl
and
js
jmp
iret
fwait
xchg
sbb
ret
and
in
cmp
(bad)
push
dec
or
sbb
add
or
pop
inc
cmp
outs
add
add
mov
cwde
fbstp
xlat
(bad)
inc
xchg
sub
jae
xor
call
aam
shl
fmul
ins
jae
cmp
call
sub
call
cmp
and
scas
mov
sub
pop
(bad)
(bad)
(bad)
dec
and
push
pop
xchg
cmp
xor
push
shr
js
test
mov
(bad)
jmp
ret
jmp
or
addr16
jb
int3
adc
mov
jbe
cwde
fnsave
(bad)
(bad)
(bad)
push
aad
cs
(bad)
pushf
jecxz
sub
mov
pop
fld
lahf
lock
(bad)
(bad)
push
fisub
repnz
jl
cmp
aaa
mov
xor
pop
xor
out
mov
mov
dec
dec
add
xor
dec
stc
push
gs
pop
mov
or
jo
fsubrp
cmp
je
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sbb
adc
pop
daa
push
dec
gs
dec
test
or
clc
and
adc
pop
sti
scas
lahf
dec
xor
jne
pusha
mov
dec
xor
pop
sub
scas
adc
movs
aam
xor
retf
jp
(bad)
push
stc
pop
(bad)
xchg
and
(bad)
in
pop
idiv
mov
cmc
ins
test
cli
lea
sbb
(bad)
(bad)
mov
inc
mov
ss
ins
pop
sub
cli
test
adc
(bad)
(bad)
dec
mov
fwait
xchg
stos
push
xchg
loope
in
div
pusha
sar
or
retf
leave
inc
sub
inc
test
pop
dec
adc
cmps
retf
movs
stos
xor
scas
jecxz
cli
mov
sbb
(bad)
pop
(bad)
call
ins
pop
pop
shr
sbb
inc
stos
div
test
jns
add
sbb
loope
xchg
pushf
mov
arpl
sahf
fwait
jo
mov
test
popa
out
sbb
lods
adc
(bad)
and
jg
cmps
test
outs
jl
aas
push
xchg
ins
sbb
mov
jmp
push
pusha
retf
std
cs
icebp
neg
adc
push
jns
adc
lahf
push
mov
ja
cld
xor
popa
out
cmps
nop
jnp
or
push
push
cdq
fsubrp
jmp
cli
or
fwait
adc
ds
out
icebp
sub
xor
push
enter
(bad)
(bad)
call
out
out
test
push
fcom
fsub
mov
(bad)
call
leave
cmp
xchg
repnz
xchg
mov
fidiv
data16
iret
pop
out
cli
(bad)
(bad)
inc
or
test
fwait
inc
sar
adc
jmp
xor
daa
ret
xlat
add
sub
cmp
out
sahf
test
jl
out
in
dec
ja
ror
add
mov
mov
popa
std
jg
popf
adc
push
sbb
sbb
retf
(bad)
(bad)
(bad)
dec
mov
repz
or
or
vpmacssdqh
test
test
(bad)
cmp
mov
lods
scas
ins
rol
das
in
ins
adc
jnp
dec
pop
or
fs
ret
mov
sbb
(bad)
(bad)
(bad)
jg
mov
cmc
in
fidivr
sub
or
dec
daa
pop
ror
pop
leave
test
into
(bad)
(bad)
(bad)
jmp
mov
xor
xor
jle
pusha
inc
(bad)
test
or
scas
(bad)
jmp
clc
cmps
cmps
mov
aad
inc
shl
cld
mov
call
sub
sti
popa
push
(bad)
(bad)
jmp
pop
cmp
mov
lods
sbb
or
retf
mov
push
outs
pop
or
inc
jo
pop
scas
nop
cs
xchg
jmp
mov
mov
pop
sub
mov
(bad)
aas
cmp
xchg
sub
clc
add
cmp
cdq
ins
add
sbb
aam
inc
(bad)
(bad)
mov
adc
fs
rol
xor
arpl
xchg
repz
(bad)
(bad)
inc
clc
ins
imul
cmp
jmp
les
ffreep
inc
outs
adc
(bad)
cli
repz
cmp
mov
push
and
(bad)
xor
or
(bad)
jmp
mov
(bad)
cmp
call
(bad)
(bad)
fucomip
(bad)
loopne
test
(bad)
daa
cmps
add
jae
jmp
stos
scas
ret
or
call
jecxz
ret
or
ins
cdq
xor
in
jae
dec
(bad)
(bad)
(bad)
dec
pop
lods
shr
inc
shl
jecxz
jb
call
(bad)
fs
fmul
cwde
(bad)
(bad)
(bad)
inc
fild
inc
les
repnz
jno
stc
and
sub
ins
mov
push
adc
(bad)
(bad)
(bad)
inc
jp
dec
out
jg
in
loop
sahf
adc
inc
lea
jno
mov
sub
(bad)
mov
xchg
in
jo
or
clc
cmp
jmp
jp
pop
inc
mov
push
dec
jl
nop
xchg
push
scas
loopne
popa
pop
daa
cmp
fsub
les
jle
popa
and
ror
inc
clc
(bad)
(bad)
jmp
or
sar
push
inc
add
fdivr
inc
pop
pop
jno
inc
dec
(bad)
repnz
jg
scas
in
xor
mov
popa
dec
ja
mov
sub
xchg
(bad)
(bad)
(bad)
call
mov
ret
add
shr
mov
push
mov
push
mov
(bad)
cmp
cmc
loop
(bad)
push
or
cli
mov
push
add
mov
cmp
inc
dec
dec
sbb
ds
(bad)
(bad)
call
fstp
ror
xchg
pop
nop
xor
test
xchg
mov
test
in
jnp
mov
cmps
dec
test
cld
xchg
push
push
add
(bad)
jmp
movs
sbb
push
int3
sti
xchg
dec
mov
dec
into
(bad)
fbld
fiadd
pop
in
ret
pop
(bad)
push
mov
sti
xor
stc
(bad)
dec
std
and
retf
loope
(bad)
inc
adc
icebp
lods
enter
pop
sbb
add
and
jmp
(bad)
mov
ret
aam
fwait
outs
je
loop
mov
call
in
stos
(bad)
(bad)
mov
push
sti
dec
lods
in
mov
sbb
add
push
sub
or
xor
in
jae
lods
(bad)
push
jmp
pop
fimul
das
es
mov
(bad)
cmps
xchg
(bad)
fcompp
ret
popa
les
(bad)
(bad)
(bad)
dec
(bad)
test
dec
std
adc
stos
nop
push
add
retf
movs
sub
cdq
xchg
ins
mov
dec
(bad)
inc
sub
mov
(bad)
pop
test
ret
mov
pusha
les
(bad)
jmp
leave
xchg
mov
sti
pop
hlt
(bad)
fbstp
test
dec
dec
(bad)
(bad)
mov
jae
aas
xlat
push
push
inc
(bad)
cmp
test
aam
(bad)
(bad)
call
cdq
test
cmc
pop
push
data16
push
dec
dec
mov
cmc
mov
fcom
adc
or
mov
lods
mov
(bad)
inc
and
aad
test
inc
int
inc
and
push
aas
cmp
(bad)
(bad)
call
jecxz
jne
jmp
(bad)
mov
outs
loopne
and
cmp
popa
fst
xchg
addr16
(bad)
(bad)
fcomip
pop
push
dec
fistp
sub
jmp
adc
in
cmc
hlt
jo
push
daa
pop
(bad)
in
(bad)
jmp
xchg
mov
mov
add
aaa
cmp
leave
ret
push
push
adc
adc
inc
pop
push
and
mov
lods
fist
ficomp
jg
hlt
in
cmp
cmp
(bad)
(bad)
call
xor
js
(bad)
ds
inc
xchg
sbb
inc
inc
or
fadd
mov
sub
(bad)
(bad)
(bad)
(bad)
ds
out
jnp
adc
mov
add
xchg
sub
das
rol
sbb
mov
cli
push
sbb
cld
ror
fs
fld
cmp
cs
cmc
(bad)
call
sbb
xchg
cmc
inc
leave
jno
jns
add
or
cmp
sbb
cmp
pop
retf
rcl
xor
cwde
xchg
pop
ss
addr16
(bad)
(bad)
(bad)
call
lock
mov
gs
lods
sbb
cmp
(bad)
popa
sbb
jne
clc
(bad)
push
int
ss
adc
fnstcw
push
mov
ds
(bad)
(bad)
push
test
pop
test
cmp
mov
cmp
mov
xor
aam
mov
xor
push
pop
lds
push
push
mov
pop
popa
(bad)
xor
(bad)
(bad)
call
repnz
stos
data16
inc
aaa
outs
mov
(bad)
or
das
jae
dec
mov
dec
call
push
outs
push
add
loopne
add
mov
adc
scas
(bad)
(bad)
fcomip
mov
xor
mov
fimul
and
jo
das
cli
(bad)
(bad)
(bad)
(bad)
out
mov
inc
stos
clc
inc
lock
dec
hlt
test
(bad)
retf
in
push
and
loope
hlt
pop
imul
aam
(bad)
cmps
sub
test
or
(bad)
stos
gs
or
pop
cmp
(bad)
(bad)
push
sub
loopne
or
(bad)
or
push
outs
mov
(bad)
(bad)
(bad)
call
mov
mov
sub
(bad)
inc
sti
push
lea
jle
push
mov
xchg
jb
lahf
sbb
(bad)
jg
push
inc
ret
inc
fmulp
jmp
addr16
ins
mov
(bad)
mov
xlat
dec
out
js
jge
(bad)
(bad)
inc
je
rcr
lods
sub
mov
xor
inc
fwait
adc
jg
fisub
pop
xor
dec
add
pop
and
jmp
mov
mov
inc
arpl
pusha
imul
jne
div
jmp
cld
(bad)
(bad)
(bad)
jmp
cmps
sbb
sbb
add
(bad)
ins
fwait
push
daa
mov
mov
jle
adc
pop
dec
inc
shl
push
call
scas
retf
(bad)
inc
inc
jns
add
jmp
dec
xchg
xor
or
(bad)
dec
cmp
out
push
push
hlt
adc
enter
pop
mov
mov
cmc
adc
adc
mov
sub
sahf
fcomip
(bad)
call
mov
mov
sbb
sub
mov
inc
out
(bad)
(bad)
(bad)
mov
mov
pop
in
xor
jbe
imul
mov
les
sbb
and
fisubr
shl
pop
std
aaa
fwait
mov
xchg
call
xchg
push
out
fsub
(bad)
(bad)
(bad)
call
adc
test
imul
int
cmp
pop
jp
sbb
and
pop
(bad)
(bad)
(bad)
(bad)
inc
mov
loopne
mov
cs
mov
xor
fdivr
and
sub
xchg
mov
(bad)
clc
cmp
dec
(bad)
pop
cdq
clc
adc
fidiv
sbb
and
dec
add
xor
shl
add
(bad)
dec
pop
or
test
jge
out
pop
mov
jg
dec
inc
sbb
(bad)
pop
adc
push
sub
jae
jp
jg
(bad)
mov
js
lock
iret
jae
in
push
sbb
fistp
push
dec
cmp
pop
into
jl
push
mov
bound
in
(bad)
(bad)
push
mov
mov
ins
xor
push
mov
mov
cwde
xchg
cmc
inc
nop
push
jno
cmpxchg
(bad)
(bad)
(bad)
inc
jge
sar
or
add
xchg
push
xchg
sub
pop
sbb
call
movs
xchg
jnp
daa
cmp
push
ret
loopne
cmp
pop
mov
lock
xor
out
(bad)
mov
(bad)
pop
std
(bad)
fucomip
cs
mov
dec
stc
sbb
das
cmps
sub
sbb
mov
sbb
add
pop
sbb
aad
sub
(bad)
(bad)
jg
xchg
js
scas
pop
or
gs
xchg
ror
pop
shl
rcl
sbb
or
push
arpl
in
cli
cmp
sub
fcom
sub
fsub
cmp
fbld
cmp
fcmovnb
xor
repz
inc
jmp
jns
cmp
jg
leave
fwait
adc
inc
(bad)
(bad)
(bad)
(bad)
jmp
pop
ret
jno
dec
xchg
ja
clc
clc
addr16
call
and
fnstsw
ins
icebp
bound
xor
push
jbe
add
ror
(bad)
call
xsaves
add
nop
jns
out
enter
and
enter
push
jp
ret
in
mov
in
test
mov
stos
call
(bad)
xchg
sbb
(bad)
fcomip
mov
xchg
ja
and
dec
mov
sub
enter
mov
inc
and
(bad)
(bad)
mov
sub
nop
gs
rcr
jl
add
(bad)
mov
inc
adc
pushf
xchg
pusha
add
sahf
sub
cs
(bad)
(bad)
jmp
push
mov
test
add
xchg
mov
push
jns
jns
adc
(bad)
call
fiadd
mov
call
sbb
jl
fcomp
pop
cld
loope
fs
add
jb
das
je
jne
ds
cmp
(bad)
(bad)
jmp
data16
xchg
inc
xchg
cmps
sbb
sub
stos
xor
bound
sub
call
push
sbb
or
cmc
xchg
(bad)
or
or
inc
scas
into
xchg
lock
(bad)
(bad)
call
aaa
and
cdq
inc
outs
sbb
leave
arpl
dec
jmp
ss
sbb
cmp
(bad)
inc
or
mov
inc
call
add
sahf
adc
(bad)
(bad)
push
xlat
xor
fsub
push
icebp
retf
cmp
fisttp
adc
jmp
clc
(bad)
push
dec
push
sbb
cwde
push
sahf
hlt
aam
or
aam
(bad)
(bad)
call
sahf
mov
adc
lock
dec
cmp
adc
xor
and
dec
test
inc
jg
ret
es
call
jge
iret
push
dec
jmp
jbe
popa
mov
(bad)
(bad)
jmp
adc
test
xchg
jne
mov
pop
push
or
mov
gs
xor
(bad)
call
pop
mov
stc
sub
xor
adc
fdiv
inc
movs
dec
icebp
mov
inc
push
xlat
iret
jb
jnp
(bad)
(bad)
(bad)
call
(bad)
mov
pop
retf
call
imul
shl
inc
(bad)
or
(bad)
(bad)
push
ds
fst
xor
out
mov
sbb
pop
cmp
fld
hlt
str
sbb
pop
and
fsub
iret
fadd
fistp
mov
(bad)
(bad)
(bad)
jmp
repz
mov
lods
sbb
push
leave
and
scas
inc
xor
stos
sub
std
and
(bad)
inc
leave
(bad)
cwde
and
sahf
das
hlt
mul
add
hlt
push
adc
sbb
cdq
fdiv
adc
clc
jmp
and
and
push
xor
(bad)
(bad)
jmp
add
jnp
call
adc
mov
outs
rcl
sar
arpl
push
loope
es
xor
and
jmp
imul
mov
inc
ins
sbb
dec
mov
push
push
sub
jne
mov
js
cmp
(bad)
mov
mov
cmps
dec
pop
cmps
cli
cmc
pop
jo
dec
or
push
leave
or
mov
call
mov
mov
fld
in
mov
push
fwait
push
and
mov
(bad)
(bad)
jmp
pop
dec
das
dec
enter
in
adc
sbb
inc
test
lods
cmps
inc
inc
cli
(bad)
dec
jne
js
(bad)
fs
fs
imul
sub
(bad)
jmp
out
pop
js
mov
dec
xchg
pop
shl
sahf
push
ret
mov
es
call
sbb
andnps
xchg
xchg
sub
jmp
or
fwait
pop
daa
mov
add
push
pusha
dec
adc
das
adc
cmp
inc
ins
mov
cmp
(bad)
(bad)
(bad)
push
ror
fstp
xchg
cmp
xchg
mov
icebp
sbb
lods
jecxz
int3
pop
popa
movs
(bad)
(bad)
jmp
or
adc
in
xor
mov
fninit
push
add
fbld
(bad)
lock
jno
xor
xor
jg
(bad)
jmp
cs
inc
(bad)
std
sti
adc
adc
aaa
dec
xchg
or
inc
xor
call
movs
daa
push
sub
lea
jle
les
jge
jb
and
aaa
sub
lock
(bad)
ficom
mov
movs
mov
leave
ret
in
pop
scas
popf
in
repnz
(bad)
(bad)
call
and
cs
dec
adc
cmps
or
xchg
or
or
lock
jle
icebp
loopne
(bad)
dec
sbb
push
bound
fild
imul
(bad)
(bad)
(bad)
jmp
enter
popa
pop
movs
inc
sub
dec
test
add
fwait
mov
(bad)
(bad)
jmp
sub
movs
sbb
rcl
pop
jmp
xchg
or
(bad)
and
jno
jne
cli
or
mov
dec
cld
jmp
sbb
jnp
add
cmp
dec
push
mov
icebp
dec
loope
xchg
adc
cdq
pusha
jp
(bad)
(bad)
(bad)
call
xchg
xchg
les
or
leave
or
(bad)
ret
pop
out
mov
mov
mov
(bad)
push
mov
(bad)
mov
cld
inc
(bad)
cmps
xchg
ins
iret
not
xchg
imul
cmp
gs
mov
cli
pop
and
(bad)
jecxz
mov
call
idiv
shl
or
movs
or
push
lahf
data16
and
in
(bad)
lahf
scas
stos
out
aaa
cld
push
xchg
inc
js
inc
xor
outs
sbb
mov
sub
movs
arpl
stos
(bad)
jmp
clc
xchg
adc
push
in
push
repnz
out
cmp
(bad)
mov
mov
mov
imul
adc
mov
and
cmp
call
add
or
push
xchg
pushf
imul
lods
and
fs
xor
(bad)
push
cld
push
and
xlat
shl
jecxz
loop
cmp
lahf
xor
hlt
(bad)
jmp
shl
jno
push
call
arpl
(bad)
(bad)
(bad)
jg
shl
mov
cmp
adc
adc
(bad)
mov
adc
pop
outs
and
(bad)
call
pop
mov
(bad)
in
mov
mov
xchg
mov
jnp
xchg
inc
cmc
retf
pop
icebp
(bad)
call
mov
cwde
mov
dec
data16
xor
xor
or
and
or
mov
call
int3
push
add
xchg
mov
xor
pop
add
call
repz
or
ror
mov
push
cmovae
in
cmps
cmp
fist
shl
xor
stos
mov
sahf
inc
cdq
imul
(bad)
jmp
jae
inc
push
pushf
repnz
mov
xor
loope
mov
mov
add
fsubr
std
(bad)
(bad)
inc
jbe
sub
lods
inc
repz
nop
in
ins
sti
icebp
shl
aam
or
outs
dec
out
and
(bad)
(bad)
push
pop
jmp
mov
dec
jp
cmp
dec
jbe
(bad)
std
imul
jp
or
(bad)
(bad)
(bad)
call
xor
rol
sbb
adc
cwde
int
aas
mov
(bad)
fisttp
add
cmp
push
xchg
je
push
(bad)
repnz
mov
in
xor
inc
cmps
jmp
inc
inc
mov
loope
test
mov
pop
and
push
jne
push
jmp
mov
jg
(bad)
(bad)
std
lods
or
das
inc
lahf
push
jmp
cmp
loope
push
jo
push
inc
jb
(bad)
(bad)
(bad)
(bad)
cld
in
call
sbb
rcl
stc
pop
and
mov
mov
test
pusha
jle
sbb
(bad)
(bad)
jmp
jnp
sub
shrd
call
sub
and
mov
jns
iret
(bad)
jmp
xchg
mov
sbb
xchg
dec
mov
xchg
add
in
jbe
adc
or
xchg
jne
call
das
es
das
push
in
scas
popf
mov
pop
enter
adc
cmp
jae
(bad)
(bad)
push
sbb
push
push
mov
mov
push
hlt
lahf
fidivr
retf
cmp
lock
lock
jno
ds
add
repz
(bad)
jmp
daa
rcr
inc
push
mov
push
pop
jle
sbb
cmp
daa
popf
je
out
add
out
xor
mov
push
inc
jmp
or
(bad)
aaa
cld
call
sub
mov
push
pushf
test
shl
aad
loopne
add
add
inc
add
or
fwait
mov
nop
dec
mov
dec
ret
psubb
(bad)
jmp
push
xor
repnz
push
push
inc
int
sbb
shr
fld
dec
jge
mov
(bad)
(bad)
jmp
xchg
push
std
mov
fist
scas
lods
add
push
sbb
sub
sub
icebp
and
mov
dec
dec
cmp
xor
sar
dec
lea
sbb
hlt
jg
mov
test
or
xor
(bad)
(bad)
(bad)
(bad)
stc
popa
dec
jbe
add
fs
add
or
xor
fwait
and
jmp
xchg
sub
mov
and
in
push
shr
sub
sbb
movs
fdivr
(bad)
(bad)
jmp
xor
lods
push
loop
adc
sahf
(bad)
ins
and
pop
dec
adc
(bad)
call
or
ja
sti
inc
cmp
mov
(bad)
(bad)
(bad)
mov
ja
inc
mov
jae
or
loop
sar
adc
xlat
pop
(bad)
(bad)
(bad)
(bad)
mov
jge
lods
lahf
(bad)
and
iret
inc
bound
xchg
jle
cli
push
retf
stos
add
(bad)
(bad)
(bad)
fcmovnu
or
add
jl
xchg
cmp
cmc
fs
mov
inc
add
mov
jl
dec
fcom
cmps
sub
dec
lock
xchg
pop
in
fistp
(bad)
(bad)
call
out
mov
call
ret
mov
dec
add
cmps
or
test
push
(bad)
(bad)
(bad)
call
xchg
inc
mov
cmp
and
outs
mov
sub
mov
pushf
(bad)
mov
ret
cld
sub
shl
lods
xchg
nop
sahf
test
inc
and
out
xor
xor
fldenv
(bad)
inc
add
cmps
and
xchg
mov
jae
push
jge
mov
xor
push
xor
adc
pop
aas
popa
(bad)
(bad)
mov
cli
ret
popa
push
icebp
repz
cmp
(bad)
call
lods
or
push
repz
gs
jno
mov
sbb
jns
push
mov
(bad)
(bad)
cli
jbe
and
xchg
push
out
js
call
pushf
shl
(bad)
jge
mov
cld
(bad)
dec
inc
push
repnz
mov
xchg
sub
(bad)
jg
pushf
daa
cmps
xchg
add
inc
dec
jmp
or
mov
inc
jmp
test
mov
cmc
pop
xchg
cmp
dec
outs
push
movs
and
(bad)
cmp
aad
mov
mov
xor
pop
fldenv
jecxz
mov
es
(bad)
(bad)
push
add
add
cmp
inc
nop
in
push
xchg
xor
push
scas
mov
loope
repz
adc
aas
sub
movs
sub
(bad)
cmp
aas
rcr
cmps
test
mov
mov
add
ss
sub
cmp
icebp
push
xor
fwait
(bad)
(bad)
jmp
sub
pusha
push
jecxz
push
xor
jno
movs
xchg
add
pop
cmp
xchg
outs
add
loope
sub
or
pop
sub
mov
fidivr
scas
dec
mov
fdivr
dec
mov
dec
add
sbb
leave
push
ss
scas
movs
and
dec
inc
jl
mov
jmp
cmp
mov
loope
inc
xchg
outs
clc
fucomip
es
mov
push
or
mov
inc
cld
pop
pop
jmp
(bad)
(bad)
(bad)
(bad)
dec
dec
mov
push
jae
mov
cmp
je
xchg
cmp
ins
(bad)
ror
sub
(bad)
(bad)
(bad)
jmp
push
rol
repnz
loopne
xchg
ins
inc
push
inc
jnp
pop
mov
mov
mov
lds
rcl
and
cld
dec
pushf
sahf
sbb
cmp
es
gs
inc
push
inc
daa
sbb
mov
(bad)
(bad)
jmp
ret
repz
push
mov
xchg
sahf
push
push
movs
dec
cmp
mov
jmp
push
cwde
jle
jnp
repz
xchg
cdq
xor
and
adc
js
(bad)
(bad)
call
sbb
xor
push
inc
cwde
call
cmp
jl
into
iret
inc
cwde
cmc
dec
(bad)
(bad)
(bad)
inc
add
lahf
int
push
outs
jo
cmps
pop
enter
or
(bad)
(bad)
call
jg
xor
pop
push
stos
inc
mov
and
cmp
dec
scas
jl
test
aam
in
xor
movs
sbb
in
int
push
add
mov
push
or
call
in
lahf
cmp
stos
ret
sub
sar
(bad)
call
int
push
aam
jnp
inc
jp
lock
push
mov
cld
ins
or
ss
(bad)
jg
mov
mov
mov
adc
add
fiadd
outs
and
mov
dec
xchg
(bad)
xchg
mov
(bad)
jmp
shl
mov
lea
sti
ds
ret
mov
les
jmp
xor
loop
ret
fbld
(bad)
push
les
lahf
(bad)
(bad)
call
push
dec
adc
jns
addr16
pop
mov
lds
xor
dec
push
xchg
add
dec
pop
push
xor
xchg
add
mov
and
mov
jmp
(bad)
mov
aas
in
iret
push
add
into
inc
cmc
daa
(bad)
(bad)
(bad)
dec
mov
or
mov
ins
aas
jmp
test
aaa
mul
(bad)
(bad)
(bad)
push
outs
fs
nop
ret
push
fisttp
outs
adc
sbb
out
dec
call
mov
(bad)
(bad)
push
fs
cdq
movs
xchg
lock
sub
cs
call
and
cmc
cmp
scas
test
cmp
(bad)
(bad)
call
jg
arpl
xor
hlt
push
sbb
mov
lods
adc
push
dec
xor
cmps
ins
out
cmp
jmp
cli
jge
fimul
push
std
loope
outs
sbb
clc
stc
and
std
and
jge
mov
(bad)
(bad)
dec
scas
mov
lahf
cmp
inc
cmp
xor
shl
fwait
mov
xchg
push
or
in
fmul
dec
adc
jo
push
adc
mov
sahf
mov
arpl
mov
mov
mov
cld
jl
cmp
jg
paddb
int3
mov
sub
daa
mov
loopne
add
inc
add
(bad)
(bad)
fmul
jno
jbe
xor
push
mov
(bad)
(bad)
push
push
or
lahf
jnp
mov
dec
jmp
rcr
push
push
enter
(bad)
jmp
out
cli
out
inc
or
xor
hlt
lea
pusha
push
add
jbe
lods
adc
dec
pushf
inc
and
aaa
adc
push
inc
add
in
call
push
sahf
inc
data16
jmp
dec
das
push
mov
xor
sbb
lock
fcom
mov
gs
retf
clc
test
scas
xlat
mov
(bad)
(bad)
(bad)
jg
arpl
and
(bad)
stos
pop
scas
inc
xor
mov
iret
push
sub
adc
repnz
pop
icebp
inc
or
int
call
adc
popf
mov
(bad)
(bad)
call
dec
cwde
loope
adc
outs
addr16
das
push
shl
sub
dec
int
push
(bad)
(bad)
mov
xchg
mov
dec
mov
ret
cmp
hlt
(bad)
(bad)
(bad)
push
sti
push
in
xchg
sti
cli
sbb
inc
jno
xlat
dec
mov
adc
sub
adc
stos
cli
jmp
mov
outs
call
shl
(bad)
(bad)
call
rol
scas
aaa
movs
xor
out
inc
and
adc
cmps
adc
and
(bad)
out
clc
call
loop
fadd
fs
xchg
pop
cmc
sbb
jns
push
(bad)
(bad)
(bad)
push
add
xchg
jecxz
sub
push
xchg
xchg
push
cmp
pop
push
bound
mov
push
(bad)
fst
and
jp
jg
std
(bad)
(bad)
jmp
ds
xchg
nop
(bad)
hlt
ins
pop
sbb
fcom
push
sbb
xor
and
ja
(bad)
push
out
mov
lods
ins
add
(bad)
xchg
mov
pushf
(bad)
mov
mov
xor
je
aam
mov
xchg
inc
xor
mov
sbb
pop
dec
(bad)
(bad)
(bad)
push
or
jl
xchg
cmps
cld
rcr
(bad)
fldcw
into
sub
in
(bad)
in
pop
and
(bad)
(bad)
(bad)
push
push
iret
xchg
cli
daa
test
test
clc
or
lds
cmps
imul
ins
ds
dec
aaa
loopne
sub
mov
jle
rcl
jnp
xor
(bad)
(bad)
push
rcl
shl
or
mov
dec
dec
add
bound
into
inc
ficomp
(bad)
(bad)
jmp
sub
nop
clc
mov
repz
adc
scas
sub
mov
not
or
inc
sar
sbb
je
leave
das
(bad)
sbb
cs
push
pop
push
(bad)
(bad)
jg
mov
add
js
cs
rol
repnz
pop
out
dec
and
in
ja
(bad)
jmp
sub
add
pop
xchg
xchg
push
and
loopne
fsubr
(bad)
(bad)
cli
jnp
mov
jae
aad
je
sbb
fisubr
outs
sbb
inc
call
test
(bad)
(bad)
(bad)
js
mov
xor
dec
test
xchg
push
stos
mov
(bad)
(bad)
(bad)
mov
cmp
adc
in
hlt
add
xchg
leave
adc
add
(bad)
(bad)
(bad)
dec
pop
ffree
out
or
fxam
out
loope
loop
cmp
xchg
add
iret
and
shl
(bad)
and
aas
fldenv
test
mov
scas
cli
(bad)
std
pop
lods
out
adc
xchg
adc
cmp
mov
add
std
(bad)
(bad)
(bad)
stc
jae
mov
test
or
loopne
or
fs
(bad)
(bad)
call
je
cmp
ja
pop
push
lods
push
daa
mov
inc
jl
(bad)
(bad)
mov
mov
fidivr
fldenv
push
xchg
stos
outs
cli
adc
mov
fcomip
or
ins
out
cmc
mov
hlt
add
or
test
je
pop
pop
addr16
pop
out
dec
les
(bad)
(bad)
(bad)
jmp
arpl
dec
scas
popf
xchg
pop
ins
clc
jmp
bound
pop
popf
les
add
retf
adc
inc
and
mov
data16
scas
mov
xor
movs
sbb
push
popf
js
(bad)
call
adc
arpl
mov
push
mov
inc
fadd
cmps
(bad)
bnd
ins
(bad)
cwde
cmc
sbb
(bad)
(bad)
out
add
fwait
push
clc
or
popa
xchg
dec
not
aam
mov
add
stos
mov
push
xor
sub
out
outs
scas
push
icebp
mov
shr
push
(bad)
(bad)
(bad)
call
adc
jae
stos
popa
loopne
xchg
adc
stc
fs
or
cmc
scas
mov
shl
sbb
pop
mov
fadd
ret
sbb
(bad)
(bad)
push
lods
mov
loope
test
mov
add
mov
xchg
xchg
pop
fistp
(bad)
(bad)
(bad)
in
popa
cmps
sti
cmps
mov
mov
xchg
fcmovne
ins
sub
cmp
push
xor
add
push
ret
dec
inc
inc
test
lock
(bad)
jbe
lods
retf
std
(bad)
jmp
jne
fld
xor
rcr
mov
sbb
mov
jge
cmp
jmp
push
adc
cmps
mov
or
cdq
fnstcw
outs
(bad)
scas
hlt
iret
call
or
idiv
pop
int
ins
outs
ds
jle
and
in
and
js
mov
(bad)
call
loopne
imul
sar
lods
(bad)
push
popf
outs
ins
cmp
(bad)
(bad)
(bad)
call
aad
shl
push
push
and
or
bound
ins
sbb
push
or
mov
adc
call
xchg
xchg
push
jb
push
sub
lea
cmps
test
(bad)
(bad)
(bad)
mov
jge
aas
adc
dec
and
cmp
adc
add
cmp
(bad)
jg
add
dec
hlt
inc
in
fst
push
add
(bad)
(bad)
mov
jecxz
push
test
push
add
scas
loope
adc
(bad)
(bad)
(bad)
cmp
lock
push
(bad)
fsin
outs
mov
fiadd
sbb
pop
jb
sub
movs
(bad)
(bad)
jmp
sbb
add
movs
pop
daa
das
mov
out
push
iret
cmc
bound
imul
mov
jge
mov
test
push
scas
cli
ret
ret
push
pop
(bad)
(bad)
(bad)
(bad)
jnp
push
mov
cdq
mov
repz
inc
push
and
xchg
sbb
mov
shl
call
ss
cmc
(bad)
inc
dec
pop
nop
mov
fsubr
or
inc
fldenv
das
movs
ret
shr
outs
fdivr
retf
fabs
push
or
push
sub
stos
jmp
or
outs
push
pushf
iret
jg
inc
cld
cmp
lea
retf
sub
adc
mov
or
add
mov
fdiv
lock
cwde
ret
inc
jmp
stos
fdivr
call
jmp
add
jl
mov
out
xchg
dec
dec
adc
cmc
subps
data16
out
dec
(bad)
(bad)
(bad)
mov
pop
and
retf
nop
or
pop
ins
movs
mov
enter
fisub
mov
cmp
(bad)
(bad)
call
xor
in
inc
repnz
popf
push
sbb
add
xchg
fld
int3
(bad)
(bad)
(bad)
inc
(bad)
test
lahf
jo
into
fwait
dec
shl
test
hlt
mov
ret
cdq
daa
shl
inc
mov
and
retf
push
xchg
push
push
fldenv
call
(bad)
(bad)
(bad)
(bad)
jg
in
sub
hlt
push
(bad)
adc
sub
push
xchg
mov
cmp
(bad)
(bad)
call
ret
loopne
xor
and
dec
clc
setno
push
in
mov
mov
repz
mov
test
jbe
and
or
into
push
in
xchg
retf
aaa
stc
push
pop
inc
jno
pop
mov
cmp
mov
lods
mov
ja
cld
pop
hlt
push
outs
data16
(bad)
mov
pop
lods
push
xchg
push
and
xor
xchg
mov
in
lea
xchg
and
sbb
sbb
mov
inc
call
icebp
sar
call
mov
ret
mov
push
(bad)
call
call
in
aas
mov
mov
and
(bad)
(bad)
(bad)
jmp
dec
and
sbb
xor
lods
(bad)
xchg
mov
push
cmps
loop
rcr
fst
jg
adc
(bad)
(bad)
(bad)
jmp
mov
ret
inc
jae
sbb
inc
shl
imul
les
(bad)
(bad)
(bad)
(bad)
fist
ins
in
push
mov
lock
adc
jl
bnd
and
cs
dec
inc
push
adc
dec
jo
cld
xor
call
int3
(bad)
xchg
and
ror
dec
inc
icebp
(bad)
(bad)
push
cmps
cwde
stos
retf
iret
test
fdivrp
sbb
imul
cs
xchg
gs
(bad)
out
add
dec
ss
sbb
dec
scas
and
mov
outs
adc
(bad)
(bad)
call
out
adc
push
ss
mov
pop
add
cmp
pand
fiadd
(bad)
call
adc
popa
sub
retf
js
adc
test
sub
in
pop
outs
(bad)
mov
(bad)
jmp
jbe
pop
jecxz
cmp
ins
(bad)
loopne
(bad)
(bad)
(bad)
inc
repnz
out
loopne
sar
scas
mov
inc
push
xor
push
addr16
pop
(bad)
(bad)
(bad)
push
jae
test
mov
in
out
cs
xchg
push
mov
cwde
sub
shl
test
jmp
xchg
sbb
inc
(bad)
push
das
xchg
adc
push
and
in
retf
(bad)
mov
and
in
repnz
cdq
sbb
mov
cdq
mov
movs
mov
push
inc
(bad)
jmp
lods
lods
and
cmp
mov
mov
(bad)
(bad)
call
in
xchg
adc
mov
sar
mov
ins
mov
dec
jl
and
clc
sub
push
or
clc
aam
cdq
ret
int3
cli
(bad)
mov
out
shl
retf
xchg
xor
in
pop
mov
push
hlt
(bad)
inc
(bad)
out
movs
sbb
cmc
adc
cmp
push
(bad)
(bad)
(bad)
(bad)
cmp
es
jmp
mov
push
test
push
fdivr
(bad)
jmp
xchg
push
jbe
movs
popw
add
jbe
jecxz
fidivr
cdq
cld
cmp
(bad)
(bad)
jmp
popa
xchg
fsubr
jmp
cwde
push
push
or
jne
lods
mov
lock
xlat
jmp
aad
(bad)
(bad)
(bad)
cmp
mov
sbb
jne
call
add
ret
outs
cmp
pop
inc
sub
mov
call
sbb
jle
(bad)
mov
(bad)
inc
inc
add
mov
lods
inc
jl
ja
mov
inc
mov
xor
test
(bad)
jg
jmp
int3
out
add
and
pop
cdq
xchg
sbb
jg
add
les
push
lods
ror
inc
inc
mov
sbb
pmullw
fs
addr16
push
into
ret
(bad)
(bad)
(bad)
jmp
(bad)
shr
xor
cmps
mov
loopne
xlat
dec
iret
or
lods
jge
inc
jmp
(bad)
(bad)
(bad)
jmp
pop
fcmovne
dec
push
mov
mov
pop
xchg
cwde
cmp
jle
ret
xlat
jno
sub
(bad)
pusha
dec
jecxz
dec
push
pushf
mov
xor
aas
in
mov
push
stc
cmc
cmp
cld
fmul
(bad)
ja
jae
add
and
rol
clc
out
and
inc
ficom
push
(bad)
jmp
fwait
xor
in
rcr
fisub
mov
(bad)
call
push
push
cld
inc
pusha
xor
(bad)
xchg
dec
(bad)
jle
leave
inc
scas
and
xchg
push
and
push
std
(bad)
fsubr
clc
enter
loop
mov
push
sub
fldcw
inc
arpl
add
(bad)
(bad)
dec
xchg
daa
push
sahf
mov
add
cmp
loop
push
xchg
pop
mov
(bad)
inc
push
sub
jnp
cwde
adc
popa
pop
inc
aaa
or
clc
mov
aas
mov
enter
push
retf
aaa
std
and
test
or
cdq
mov
cwde
retf
addr16
pop
not
cmps
jle
and
ror
pop
adc
stc
inc
pop
dec
or
aas
sahf
aam
(bad)
(bad)
(bad)
(bad)
cmp
in
(bad)
sbb
aam
inc
or
inc
adc
sub
inc
xchg
mov
adc
jmp
mov
aas
jbe
mov
mov
in
sbb
sub
out
pusha
mov
dec
addr16
and
add
dec
xchg
and
mov
dec
aas
(bad)
aad
xchg
(bad)
jmp
mov
test
xor
jg
jp
retf
loope
mov
cld
test
inc
push
shr
adc
sbb
popf
pop
add
or
jo
and
cwde
call
push
cwde
sbb
mov
lods
mov
les
and
(bad)
in
jp
ret
scas
je
push
cmp
inc
bound
(bad)
(bad)
(bad)
in
pushf
add
fcom
in
aas
aas
cmp
xchg
push
jnp
jmp
xor
push
stos
xchg
das
push
pop
push
jge
add
inc
mov
ret
push
fst
jle
jecxz
fcmove
cmp
jmp
mov
fsubr
loope
cmp
push
shr
test
sti
pop
xor
cld
out
clc
(bad)
push
popf
data16
enter
cdq
mov
mov
pop
pop
cld
inc
adc
adc
rcr
stos
test
frstor
call
out
out
or
retf
gs
mov
(bad)
jmp
not
jmp
cmp
outs
lods
pop
xchg
push
popa
das
adc
sbb
(bad)
(bad)
(bad)
(bad)
out
xchg
repz
sub
push
(bad)
push
neg
lock
lea
jnp
mov
mov
call
sbb
shl
cmp
fisttp
loopne
in
push
sar
sub
sub
sbb
pop
mov
inc
fisub
leave
dec
fprem1
pop
add
pop
lea
jmp
bound
jecxz
stos
lahf
pop
xor
and
push
in
lods
in
enter
(bad)
test
fadd
call
or
mov
ret
push
xor
or
jg
add
lock
hlt
push
imul
sub
call
(bad)
(bad)
inc
add
sbb
add
loopne
mov
pop
iret
mov
dec
in
dec
pop
icebp
ja
cdq
les
rcl
xchg
(bad)
ficomp
fist
mov
loope
or
adc
push
(bad)
(bad)
(bad)
call
cmps
rcr
outs
neg
pop
xchg
shl
stc
push
fcom
xor
daa
mov
pop
adc
jne
cmp
call
pop
inc
xchg
cmp
je
fistp
(bad)
gs
outs
(bad)
(bad)
(bad)
dec
jmp
hlt
scas
jo
dec
pop
test
int
push
inc
adc
cmps
in
ja
(bad)
(bad)
inc
fist
push
mov
jp
jmp
outs
mov
fist
cli
sbb
dec
jp
cmp
cwde
mov
mov
ins
repnz
mov
out
out
and
popf
xchg
clc
repnz
cmp
cld
(bad)
(bad)
stc
out
push
jmp
or
push
sahf
arpl
(bad)
(bad)
jg
mov
dec
push
retf
push
pop
push
retf
or
out
mov
push
(bad)
dec
ds
rcl
call
test
into
dec
mov
cmc
push
add
inc
repnz
fs
cmps
sti
shl
retf
mov
nop
xchg
ja
ins
and
mov
cli
pop
fcmovbe
mov
mov
pop
lock
out
ror
push
dec
mov
sub
xchg
stos
call
push
(bad)
mov
mov
imul
(bad)
(bad)
push
xchg
vpshufd
enter
adc
adc
arpl
das
adc
movs
inc
aas
cmp
stos
inc
jg
scas
jmp
repz
cld
add
int3
cmp
jnp
idiv
(bad)
(bad)
(bad)
mov
pusha
lods
ret
sbb
mov
lahf
mov
cmp
mov
or
je
inc
test
mov
repz
je
aaa
inc
jmp
and
xlat
das
stc
mov
sub
(bad)
(bad)
(bad)
fld
aam
mov
dec
mov
popf
and
cmp
or
(bad)
(bad)
(bad)
dec
xor
shl
sub
lds
push
je
sbb
fcmove
mov
iret
imul
dec
jo
(bad)
iret
cli
lds
cld
mov
es
stos
lds
imul
inc
fwait
add
stos
xchg
sub
lea
add
(bad)
push
retf
shl
sbb
xsaveopt
retf
in
cmp
and
inc
jmp
add
bndldx
mov
rol
daa
out
aad
push
and
(bad)
out
and
mov
scas
in
inc
outs
test
cmps
ins
pusha
jg
ja
es
lahf
sti
(bad)
sub
mov
and
imul
iret
add
inc
lahf
out
jae
xchg
test
or
mov
shl
mov
std
in
iret
jg
add
loopne
cmp
push
sbb
mov
xor
test
pop
xor
jecxz
(bad)
out
fsub
push
test
ja
popf
sbb
sbb
pop
(bad)
(bad)
(bad)
(bad)
cld
mov
mov
arpl
mov
mov
lahf
lods
push
inc
out
sti
xchg
(bad)
mov
pop
dec
sub
jge
jmp
data16
and
xchg
mov
mov
mul
push
inc
mov
(bad)
(bad)
jg
sahf
(bad)
adc
inc
imul
clc
mov
mov
pop
push
cmps
ss
xchg
add
push
clc
hlt
mov
(bad)
(bad)
aas
xor
(bad)
push
movs
jl
and
ja
stc
cmps
add
out
mov
(bad)
(bad)
(bad)
(bad)
jnp
cmp
push
mov
mov
in
add
icebp
adc
je
bound
(bad)
mov
js
cld
dec
xchg
inc
lods
jo
clc
cdq
scas
push
imul
js
cmp
stc
clts
(bad)
(bad)
(bad)
(bad)
(bad)
fisttp
xchg
jns
mov
jg
push
push
inc
out
test
lods
inc
pop
sub
arpl
push
and
pop
mov
and
clc
loopne
add
call
sbb
ror
lds
jno
mov
add
test
push
test
(bad)
(bad)
(bad)
dec
cs
mov
inc
enter
test
jmp
inc
addr16
mov
inc
push
loopne
jecxz
mov
cli
jb
push
or
mov
nop
repnz
(bad)
repnz
(bad)
(bad)
fcomip
data16
sub
xchg
pop
fmul
call
mov
mov
cli
jmp
jns
dec
pop
sbb
(bad)
dec
int
nop
(bad)
adc
je
(bad)
(bad)
jmp
(bad)
cmc
bound
cld
in
ficomp
and
stos
adc
mov
(bad)
(bad)
jmp
popa
and
test
jne
mov
mov
inc
cmp
push
rcl
adc
jmp
(bad)
leave
push
cmp
ins
pusha
fistp
loopne
fist
mov
xchg
(bad)
(bad)
jg
popa
out
cmp
adc
(bad)
data16
mov
stos
push
mov
or
outs
xchg
push
dec
imul
mov
aam
sbb
test
ja
xor
mov
xchg
mov
mov
lock
ret
outs
jl
(bad)
cs
(bad)
(bad)
(bad)
dec
popf
cmp
mov
cmp
ficomp
dec
iret
jecxz
retf
iret
inc
jo
outs
(bad)
(bad)
(bad)
(bad)
mov
in
lds
inc
mov
xchg
scas
push
retf
int3
or
(bad)
out
mov
cmp
mov
cmps
or
push
test
cld
mov
int3
(bad)
(bad)
(bad)
dec
add
popa
aad
fld
xchg
cld
adc
jae
inc
(bad)
cmp
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
jmp
mov
add
mov
jnp
cmp
loope
pop
(bad)
mov
hlt
rcr
test
fldcw
cmps
repz
jmp
mov
cmp
mov
xchg
add
out
inc
(bad)
ins
scas
jns
inc
add
sbb
mov
sub
sbb
add
test
cmp
call
dec
cli
(bad)
push
pop
daa
and
fidivr
inc
imul
inc
out
test
pop
(bad)
inc
fbld
sbb
(bad)
jmp
push
cld
inc
icebp
mov
dec
xchg
stc
(bad)
fdivrp
(bad)
(bad)
call
jbe
adc
lds
add
xor
imul
add
inc
lock
mov
fdiv
adc
mov
add
mov
outs
nop
test
and
fwait
lods
pop
or
pushf
push
or
(bad)
mov
mov
or
dec
inc
sbb
add
adc
aad
(bad)
(bad)
(bad)
call
dec
sar
loopne
test
pushf
lea
adc
sti
fsub
mov
(bad)
(bad)
(bad)
(bad)
jmp
leave
sub
sub
aaa
clc
pop
fisttp
mov
inc
or
(bad)
dec
retf
ins
das
sbb
imul
jno
xchg
push
ins
jno
fld
pop
(bad)
out
mov
lock
inc
xchg
sti
pop
jmp
dec
inc
push
mov
xor
stos
int
and
push
cmps
jmp
cld
(bad)
dec
je
mov
jecxz
and
mov
inc
mov
pop
addr16
call
mov
dec
dec
mov
sub
sbb
and
(bad)
(bad)
jmp
inc
cmp
fstp
ss
add
pop
rol
cld
and
mov
lea
sti
inc
scas
outs
clc
(bad)
dec
lock
dec
mov
adc
jecxz
dec
cwde
sub
out
test
pop
inc
mov
cmp
out
cli
(bad)
jns
xchg
or
cmp
das
aad
ss
xor
adc
(bad)
aas
(bad)
inc
bound
sub
ds
mov
lea
(bad)
(bad)
call
(bad)
leave
(bad)
cmp
push
call
or
xor
push
and
mov
(bad)
inc
fld
jge
mov
cmp
inc
push
adc
cld
std
(bad)
(bad)
(bad)
(bad)
and
cmc
cmps
and
dec
inc
xchg
push
and
lock
std
inc
cld
movs
mov
call
push
scas
repz
xor
dec
pop
xchg
cmovno
js
pop
fs
(bad)
(bad)
(bad)
fiadd
les
cmp
call
mov
pushf
sub
popf
xchg
pushw
aas
jp
(bad)
(bad)
(bad)
inc
out
xchg
fimul
imul
cmp
adc
sbb
cmp
nop
(bad)
out
cli
xchg
sahf
adc
xchg
(bad)
pop
sbb
iret
sub
sub
add
std
dec
popa
hlt
scas
bound
xor
(bad)
jle
sbb
add
in
and
(bad)
(bad)
call
imul
(bad)
sbb
mov
out
scas
shl
out
jge
adc
int
repnz
sar
inc
fdiv
cmp
jg
adc
outs
fldenv
out
pop
cli
xor
sbb
inc
push
add
xchg
ret
out
dec
xchg
and
ins
jge
sbb
sbb
mov
(bad)
dec
add
out
dec
enter
mov
lods
push
shl
inc
pop
and
jne
cli
int3
mov
nop
std
(bad)
(bad)
(bad)
jg
ficom
mov
(bad)
js
xlat
cli
pop
add
stc
jo
fist
ret
sbb
(bad)
(bad)
push
loop
pop
aas
fld
jl
xor
mov
std
(bad)
mov
fs
jmp
icebp
into
mov
loop
clc
pop
aas
jmp
jmp
in
bound
(bad)
std
jmp
lock
sahf
out
sbb
add
in
cmp
cmp
(bad)
aad
pop
xchg
cmp
sbb
push
fwait
mov
dec
cmp
add
ret
out
(bad)
pop
aas
jae
push
lds
(bad)
(bad)
call
push
sti
std
dec
and
push
aas
mov
enter
sahf
fidiv
or
dec
pusha
or
rcl
xor
or
ror
xchg
sub
dec
jl
call
fdiv
or
fcom
mov
jmp
sub
(bad)
adc
std
mov
shl
mov
xor
(bad)
(bad)
push
pop
aam
pushf
xor
mov
dec
clc
neg
shr
shr
push
mov
clc
(bad)
(bad)
call
sub
div
clc
ror
(bad)
cs
jg
(bad)
(bad)
jg
add
les
stos
aad
shl
int3
jo
xor
stos
call
daa
or
ror
fnstsw
ret
add
adc
push
cmp
stc
or
sub
mov
imul
mov
lods
pop
push
sub
dec
fisub
in
(bad)
(bad)
(bad)
cmp
fs
fstp
call
repnz
push
mov
sar
pop
lock
jnp
cmc
dec
xchg
push
rcr
mov
dec
cmps
xchg
inc
add
adc
loopne
enter
jmp
sbb
aad
mov
cmps
adc
inc
pushf
pop
mov
push
mov
shl
jg
or
inc
dec
rcl
mov
mov
call
inc
pop
pushf
xor
or
les
sub
dec
nop
xchg
pop
mov
pop
cdq
cmc
dec
sub
int
cmp
(bad)
jg
arpl
jecxz
jmp
mov
cmp
lea
icebp
mov
icebp
(bad)
dec
pop
cs
mov
(bad)
(bad)
jb
sub
xchg
adc
pop
icebp
or
or
je
inc
fnsave
inc
push
lods
and
xchg
(bad)
(bad)
call
mov
mov
ins
ins
cmp
enter
jb
mov
mov
cmp
mov
push
inc
ret
xchg
or
jo
inc
dec
popa
imul
cmc
ss
push
sbb
inc
cmp
inc
jg
mov
(bad)
(bad)
(bad)
jmp
mov
push
sahf
xchg
test
(bad)
ficom
bound
fidivr
jno
loop
xor
outs
ror
cs
sub
es
adc
inc
into
xor
inc
cmp
push
xlat
gs
xlat
(bad)
(bad)
(bad)
jmp
xor
mov
and
sub
scas
sub
je
push
push
ins
cmps
jmp
push
les
xlat
fldpi
mov
aas
mul
sbb
sahf
pop
jne
ins
enter
cdq
jecxz
call
in
or
cwde
lods
arpl
sbb
mov
(bad)
jmp
fsub
add
jmp
scas
push
push
sub
xchg
xchg
mov
rcr
outs
xchg
pusha
or
(bad)
dec
repz
xor
popa
popf
dec
pop
cmc
aad
loope
(bad)
(bad)
(bad)
mov
pop
cs
jle
(bad)
cmp
mov
sub
lahf
pop
inc
sub
mov
add
adc
dec
call
stc
hlt
pop
sbb
(bad)
pop
mov
add
adc
pusha
and
pop
or
(bad)
push
in
pop
pushf
sbb
xchg
mov
xor
add
jnp
lds
mov
(bad)
(bad)
(bad)
jmp
push
jns
data16
mov
aad
or
xchg
xchg
or
mov
mov
xor
repnz
mov
in
int
div
or
dec
add
adc
(bad)
(bad)
(bad)
call
div
add
mov
scas
out
jmp
adc
adc
pusha
xchg
mov
jmp
(bad)
mov
mov
mov
aad
push
pusha
inc
(bad)
xor
inc
pop
scas
popf
dec
add
jle
call
loop
sub
push
push
xchg
out
in
mov
and
add
(bad)
(bad)
inc
inc
repnz
inc
jae
pop
leave
clc
or
mov
sar
mov
repz
(bad)
(bad)
inc
in
test
pop
xor
stos
or
cdq
jno
push
xchg
jg
jmp
dec
push
(bad)
(bad)
(bad)
push
and
popa
movs
rcr
cmc
xor
addr16
(bad)
sub
shr
and
sub
(bad)
inc
pop
xor
pop
jae
lods
fnstsw
push
nop
fbld
or
push
rcl
inc
in
pop
pop
mov
add
adc
outs
movs
test
(bad)
(bad)
(bad)
push
in
dec
retf
in
sbb
mov
mov
fldenv
ins
pop
xlat
inc
imul
(bad)
(bad)
dec
mov
cmp
loop
inc
and
add
jle
adc
dec
(bad)
(bad)
(bad)
inc
iret
sbb
ja
xor
xor
sbb
jo
je
mov
(bad)
push
mov
(bad)
neg
jmp
and
push
or
(bad)
call
das
xor
ret
lock
cdq
(bad)
mov
inc
out
adc
jmp
bound
sub
mov
(bad)
call
sti
push
sbb
pop
sbb
icebp
mov
jnp
dec
(bad)
jg
daa
push
pusha
dec
loop
scas
ja
pop
loope
jge
pop
aaa
and
(bad)
jg
ds
mov
sub
xchg
leave
add
movs
xor
dec
sub
(bad)
(bad)
dec
cmp
cs
mov
add
scas
aam
lea
inc
pop
fcmovnbe
in
pop
movs
je
xchg
ins
pop
or
pop
cmp
add
xor
test
popa
mov
fs
les
inc
dec
adc
popa
and
jo
in
(bad)
push
mov
in
fcmovne
or
(bad)
and
jg
pop
nop
shr
(bad)
call
or
mov
sbb
ret
pop
inc
adc
cmps
inc
out
(bad)
(bad)
dec
je
sbb
cld
dec
dec
cmp
gs
sub
cmp
test
pop
or
fistp
out
sbb
push
(bad)
std
pop
lock
lds
ds
or
inc
mov
pop
in
(bad)
(bad)
cmp
dec
mov
sar
test
out
push
and
dec
(bad)
(bad)
(bad)
inc
pop
mov
xor
rcr
mov
out
mov
mov
jmp
clc
neg
lds
ins
dec
iret
jbe
test
retf
jmp
dec
aaa
or
(bad)
jmp
sti
xchg
ror
mov
add
sub
mov
pop
mov
stc
mov
add
or
cdq
xor
jg
cmps
dec
loope
ret
push
mov
imul
stc
repz
shl
(bad)
push
outs
push
push
mov
repz
mov
stos
(bad)
(bad)
dec
pop
movs
push
mov
scas
xor
xor
(bad)
(bad)
inc
jne
sub
out
les
jns
int3
jg
fcomp
push
adc
sbb
call
inc
aas
bound
jl
xchg
iret
test
mov
arpl
adc
les
addr16
mov
(bad)
faddp
jae
rcr
or
mov
retf
js
adc
jne
mov
stc
pop
mov
mov
mov
loop
add
ja
test
(bad)
and
(bad)
(bad)
(bad)
(bad)
fadd
repz
pop
mov
sbb
rol
push
shl
push
push
or
cmp
mov
dec
mov
mov
ins
fld
sbb
mov
lods
jb
test
(bad)
pushf
inc
(bad)
(bad)
(bad)
jmp
adc
loop
push
popf
xchg
or
xlat
dec
xor
xor
imul
clc
(bad)
(bad)
call
dec
or
test
in
jecxz
cdq
data16
lahf
adc
cli
call
(bad)
cmp
mov
jl
imul
mov
(bad)
jmp
mov
jns
or
xchg
loope
sti
call
jle
jecxz
pop
push
dec
pop
ja
pop
outs
lds
std
dec
out
mov
push
sbb
jno
sub
fldenv
fwait
ror
(bad)
(bad)
(bad)
call
sub
lods
lahf
ret
shr
sub
jne
or
fld
(bad)
(bad)
(bad)
jmp
dec
dec
stc
aad
mov
cli
jns
fxch
xor
addr16
out
(bad)
aad
ja
loope
inc
cld
pop
cld
out
push
iret
(bad)
mov
push
es
sbb
add
ror
cmp
cmp
sub
js
jmp
(bad)
jl
dec
cld
pop
fiadd
into
mov
ins
jmp
dec
mov
jmp
pop
(bad)
(bad)
(bad)
jmp
push
test
push
push
dec
dec
pop
sbb
sub
scas
sub
(bad)
and
(bad)
inc
xor
iret
push
mov
pushw
or
lahf
jl
fs
sub
mov
cdq
mov
cmp
movs
mov
out
aam
push
orps
pop
mov
xor
(bad)
dec
or
pop
mov
dec
iret
push
inc
inc
pop
fistp
out
(bad)
(bad)
call
pop
pop
sub
push
xchg
popa
or
and
stos
mov
clc
xchg
popf
(bad)
(bad)
jg
xchg
sbb
sbb
clc
fadd
sar
int
scas
xlat
dec
sar
(bad)
(bad)
call
sub
inc
dec
sub
popa
and
pop
sbb
imul
jge
ins
sbb
and
rol
hlt
push
xchg
scas
xchg
pop
and
add
adc
(bad)
(bad)
(bad)
clc
mov
mov
fwait
gs
mov
pushf
mov
or
sbb
jae
jecxz
(bad)
(bad)
(bad)
inc
shl
xchg
fimul
fcom
xor
ror
jl
dec
cmps
mov
loope
cli
movs
xor
inc
pop
call
clc
(bad)
in
(bad)
ficomp
dec
addr16
mov
nop
sar
std
fwait
adc
fwait
pop
retf
lds
ds
repnz
jnp
lea
cli
dec
pop
ss
dec
mov
adc
mov
or
in
(bad)
(bad)
jmp
rcl
mov
pop
repnz
(bad)
fcmovnb
les
adc
(bad)
(bad)
(bad)
inc
aam
sbb
xchg
outs
imul
pop
sbb
add
xchg
(bad)
(bad)
(bad)
jg
add
cmp
xchg
mov
stc
mov
inc
in
dec
imul
cmp
in
inc
fild
repnz
mov
and
mov
(bad)
jmp
lods
add
lea
pop
mov
mov
aad
xchg
data16
dec
in
xor
xchg
out
aaa
(bad)
jg
lock
mov
stos
jp
in
push
sbb
xor
fnstenv
pop
std
call
xor
xor
cli
inc
jo
jecxz
ret
rol
es
loopne
aaa
int3
sbb
hlt
clc
and
(bad)
(bad)
(bad)
dec
mov
loope
cmp
xor
ror
sub
imul
pop
popf
test
(bad)
(bad)
(bad)
push
pusha
je
dec
mov
xchg
jmp
push
daa
sub
mov
push
xor
sub
imul
ds
(bad)
aad
stos
outs
imul
rep
mov
cmp
or
ins
mov
jns
(bad)
push
lahf
ja
xor
pusha
mov
xlat
jns
lea
ss
add
add
pop
scas
call
sar
dec
fadd
push
push
pop
fadd
fs
or
pushf
hlt
or
pop
mov
push
mov
dec
jns
mov
dec
(bad)
(bad)
dec
xchg
inc
lods
loopne
pop
(bad)
mov
add
fwait
and
xchg
cmp
mov
lds
call
into
add
(bad)
mov
xchg
xor
(bad)
(bad)
(bad)
jmp
outs
popf
ins
test
ss
aas
jne
xchg
scas
nop
das
add
shl
push
xchg
pushf
imul
mov
add
daa
add
jg
mov
adc
add
loope
shr
adc
xchg
(bad)
fdiv
inc
iret
mov
daa
xor
clc
(bad)
(bad)
push
jp
pop
cmps
cs
es
daa
mov
gs
jp
fadd
call
out
mov
adc
fcmovnb
cmp
loop
xchg
and
sub
cmc
loope
xchg
sub
outs
cmp
iret
ja
fdivr
mov
je
fisub
daa
gs
lahf
lock
dec
xchg
inc
mov
int
test
(bad)
mov
sub
cmp
adc
jge
cmps
xchg
pop
pop
sar
(bad)
jmp
jp
jecxz
dec
mov
and
mov
outs
xchg
add
mov
fwait
out
sub
adc
or
aam
ss
mov
add
(bad)
inc
in
lea
ds
jns
pop
adc
test
in
sbb
aaa
mov
jno
jmp
add
(bad)
jg
ins
adc
push
adc
or
(bad)
retf
faddp
push
ret
retf
or
jmp
out
dec
inc
in
or
jg
xchg
ja
ins
test
push
push
xlat
pop
mov
bound
xor
(bad)
(bad)
(bad)
cmp
out
out
arpl
aas
fisttp
test
or
xor
test
cwde
sbb
mov
sar
push
outs
xchg
test
in
addr16
rcr
call
inc
popf
push
mov
shl
fdivr
(bad)
(bad)
call
gs
aad
sub
scas
push
pop
xor
lods
add
jecxz
and
(bad)
(bad)
mov
lock
or
and
xor
jl
push
mov
(bad)
(bad)
inc
push
push
movs
cmp
push
push
inc
and
cmp
mov
or
mov
sar
push
int
push
mov
popf
adc
mov
adc
mov
mov
hlt
pusha
mov
xchg
daa
enter
(bad)
ficom
jmp
movs
sbb
jmp
shl
add
cmp
scas
and
callw
(bad)
mov
dec
xor
cmp
jno
test
cs
push
out
fistp
imul
test
iret
je
sub
(bad)
call
aam
fbld
add
enter
jmp
pop
cmp
(bad)
(bad)
fild
inc
pop
mov
dec
mov
(bad)
(bad)
mov
ins
retf
and
adc
clc
movs
fadd
cmps
fadd
mov
push
push
in
jle
das
xor
test
jl
xchg
adc
push
jge
dec
xchg
les
cmp
jae
cmps
add
movs
sub
(bad)
(bad)
call
ret
inc
cmp
inc
aam
adc
fdivr
xchg
adc
(bad)
call
popa
add
pop
adc
fidivr
sub
or
push
in
pop
cld
pop
clc
(bad)
(bad)
dec
push
mov
imul
dec
push
imul
iret
test
sar
dec
fcomp
or
sub
xor
cli
retf
scas
cli
sar
mov
outs
xchg
push
into
scas
popf
fcomp
out
sub
(bad)
(bad)
inc
pop
bound
and
dec
les
inc
or
not
sub
(bad)
jg
leave
std
loopne
mov
(bad)
cld
mov
int3
stos
or
sbb
lods
(bad)
(bad)
(bad)
dec
(bad)
xlat
movs
(bad)
xchg
dec
retf
mov
jbe
(bad)
mov
xchg
stos
push
in
je
mov
sub
ret
in
inc
fiadd
sbb
(bad)
(bad)
inc
and
shl
fldcw
inc
pop
pop
fs
pop
push
ins
je
sub
or
cmps
jg
(bad)
(bad)
sti
scas
aaa
add
in
lods
mov
out
pusha
adc
enter
dec
scas
(bad)
(bad)
(bad)
(bad)
call
or
mov
inc
pushf
pop
rcr
cmp
lock
out
add
pushf
cli
(bad)
(bad)
push
scas
add
mov
add
shr
aas
outs
shl
dec
xlat
pop
outs
mov
call
cld
scas
mov
xor
cmc
and
cmps
movs
(bad)
xor
mov
sub
jno
push
stc
repnz
aaa
add
call
xlat
nop
hlt
push
call
jg
cmc
sbb
xchg
cmps
and
into
loopne
pop
jp
(bad)
(bad)
(bad)
call
bound
sub
loop
fistp
xor
adc
mov
loopne
jnp
push
(bad)
(bad)
(bad)
push
jb
adc
pop
in
nop
fxtract
mov
fistp
adc
mov
cmp
cmp
add
jmp
mov
(bad)
ror
add
pop
mov
(bad)
fsub
std
(bad)
(bad)
(bad)
test
inc
shl
xor
xchg
jbe
pop
jmp
adc
pop
add
repz
ret
cld
pop
and
les
je
(bad)
(bad)
(bad)
inc
ss
call
sbb
loop
mov
add
imul
lds
inc
sbb
cmp
xlat
inc
std
call
repnz
ret
sbb
sub
ret
(bad)
inc
push
(bad)
adc
and
mov
mov
pmaxub
clc
repz
test
(bad)
push
std
call
repnz
mul
adc
and
mov
stc
in
mov
(bad)
jb
sahf
jmp
adc
inc
outs
(bad)
(bad)
(bad)
call
jecxz
xlat
call
ret
in
mov
retf
xchg
dec
lea
(bad)
jg
sbb
and
cmp
adc
mov
(bad)
call
mov
mov
rcl
push
cmp
stc
or
dec
sbb
stos
add
mov
jmp
inc
(bad)
(bad)
(bad)
call
mov
push
call
ffree
sti
mov
addr16
xchg
pop
xchg
mov
(bad)
(bad)
call
jle
imul
push
cmp
adc
jecxz
sbb
fs
ret
aas
(bad)
jmp
ds
inc
mov
sub
(bad)
cmp
shl
pop
add
mov
(bad)
inc
dec
lock
xor
and
pop
in
sar
or
mov
imul
mov
or
(bad)
stos
mov
add
out
add
add
add
mov
jmp
or
out
xor
mov
pop
add
pop
cmps
and
pushf
cmp
push
cld
push
mov
jmp
or
or
nop
or
push
or
outs
retf
fsubr
adc
xchg
call
stos
mov
cld
ret
sbb
ret
lock
retf
mov
dec
or
int
mov
das
mov
lods
jno
jbe
or
mov
outs
sbb
repz
pop
std
adc
std
call
(bad)
adc
pop
and
outs
fcmovbe
add
ins
or
das
cli
lea
push
enter
pushf
dec
pop
fimul
jl
(bad)
(bad)
(bad)
jg
ds
xor
inc
test
sbb
or
mov
(bad)
(bad)
call
jae
xchg
mov
push
sbb
sbb
loopne
dec
fild
arpl
(bad)
js
imul
push
(bad)
cmp
cmp
std
(bad)
(bad)
(bad)
mov
aas
call
push
pop
push
push
xchg
ret
adc
ja
pop
in
inc
inc
ins
jle
cld
add
arpl
jmp
push
fabs
sbb
push
lahf
mov
in
jecxz
in
or
jmp
int
aaa
jbe
call
mov
pop
shr
mov
(bad)
(bad)
dec
mov
repz
aaa
jae
fs
jnp
pop
ja
(bad)
inc
sbb
cdq
inc
inc
adc
sub
std
das
(bad)
mov
int
push
fcomp
out
or
xlat
dec
mul
enter
mov
imul
pop
or
jecxz
push
test
mov
fincstp
movntps
(bad)
jmp
scas
add
push
mov
(bad)
nop
sahf
xlat
shl
xchg
es
mov
mov
push
pusha
jmp
dec
jmp
xchg
ret
(bad)
(bad)
out
shl
out
cli
xor
mov
sub
ret
jp
push
scas
sub
add
sub
inc
(bad)
(bad)
(bad)
push
adc
xor
add
mov
cdq
and
imul
cmc
test
mov
data16
mov
inc
fwait
pop
dec
(bad)
adc
in
add
sar
jb
dec
push
(bad)
movs
push
(bad)
mov
xor
(bad)
stos
(bad)
push
loopne
jge
cmp
daa
inc
frstor
inc
adc
lahf
sub
(bad)
(bad)
jg
inc
cld
inc
jbe
sub
mov
mov
in
xchg
in
mov
fistp
(bad)
push
mov
(bad)
pop
inc
add
ficomp
(bad)
adc
push
xchg
repnz
aas
neg
mov
fwait
inc
call
retf
pop
sbb
or
ror
scas
out
pusha
dec
xchg
xor
lea
cmps
adc
xor
(bad)
(bad)
call
pop
into
adc
push
pop
retf
js
add
jge
or
popa
(bad)
(bad)
(bad)
inc
sahf
add
add
or
pop
add
sub
and
jmp
mov
dec
jno
push
adc
call
jecxz
inc
push
fninit
pop
js
sbb
shl
movs
cmp
mov
into
test
in
in
repnz
(bad)
jmp
mov
adc
inc
std
div
imul
fnstcw
cmp
shl
mov
cmps
fcomp
jmp
and
dec
test
test
xchg
stos
adc
fcom
push
jg
popf
mov
(bad)
push
rcl
stos
inc
popa
mov
and
and
fidiv
hlt
jge
inc
cld
push
xor
int3
mov
pop
xchg
mov
out
out
(bad)
(bad)
(bad)
push
cwde
adc
mov
mov
pop
out
cmps
call
(bad)
push
jae
pushf
test
pusha
pop
js
cwde
iret
pushf
mov
(bad)
(bad)
call
shl
push
(bad)
scas
outs
mov
xchg
mov
adc
stos
pusha
repnz
and
jp
jo
xor
or
sub
fsub
bound
dec
add
and
daa
and
fwait
mov
mov
(bad)
(bad)
sti
jbe
pop
rcr
in
dec
add
push
pop
xchg
pop
jno
ficomp
repnz
scas
push
inc
and
xor
out
mov
stc
sub
push
(bad)
fucomi
cli
jmp
dec
push
icebp
sbb
jmp
aad
jbe
adc
icebp
(bad)
fbld
mov
out
lods
pop
push
cmp
cld
push
push
adc
outs
fsub
repz
sbb
sub
ins
cs
xor
mov
push
mov
add
jae
and
pushf
enter
jmp
mov
push
repnz
jae
repnz
ffreep
shl
fs
cmps
jb
loopne
jmp
or
(bad)
mov
mov
aaa
pop
lahf
shl
fistp
repnz
popf
(bad)
icebp
jmp
test
xor
xor
(bad)
(bad)
push
sbb
push
les
sub
cmc
stos
add
repnz
add
into
or
es
and
fldl2e
movs
push
and
(bad)
fadd
(bad)
out
inc
lods
ins
pop
std
stc
pop
cmp
(bad)
(bad)
(bad)
fistp
pop
xchg
sti
mov
mov
and
mov
mov
loopne
push
xlat
sub
mov
(bad)
(bad)
(bad)
dec
or
mov
xor
and
jecxz
mov
pusha
mov
inc
dec
xchg
arpl
(bad)
inc
test
ror
in
sub
test
cmp
div
daa
xor
jno
xor
bound
jo
inc
mov
(bad)
in
add
cmps
jmp
scas
dec
ja
lea
cmps
mov
mul
inc
jle
sub
inc
test
fwait
pop
cli
add
xchg
or
push
pop
fbstp
jl
dec
and
inc
push
scas
clc
(bad)
jmp
jmp
cdq
adc
xor
mov
js
jo
fldcw
mov
ud2
mov
add
dec
mov
and
sub
mov
xchg
xchg
retf
imul
mov
jge
inc
fwait
cmps
or
(bad)
jmp
enter
cmps
out
retf
lods
mov
loope
pop
clc
(bad)
(bad)
(bad)
(bad)
fnstenv
(bad)
jnp
mov
mov
(bad)
imul
lds
xchg
jmp
popf
fwait
(bad)
(bad)
(bad)
(bad)
out
pop
add
int
mov
out
jnp
pop
xor
adc
push
fidivr
cmps
loopne
jg
(bad)
inc
test
mov
xchg
push
or
pop
mul
mov
retf
cld
or
mov
inc
out
into
add
aaa
jge
mov
fs
loope
shl
mov
das
or
push
data16
dec
jp
scas
push
mov
add
sbb
xchg
mov
cmps
lock
(bad)
jnp
loopne
mov
sbb
in
lahf
and
data16
(bad)
jg
mov
add
inc
aad
addr16
mov
movs
jmp
lock
push
push
adc
cs
stc
xchg
push
pop
xchg
push
lds
(bad)
(bad)
dec
retf
adc
mov
enter
xchg
dec
ins
pusha
int
xor
clc
mov
pop
mov
movs
(bad)
(bad)
(bad)
jmp
push
jb
gs
cmp
mov
(bad)
mov
test
lahf
push
inc
(bad)
jmp
fbstp
mov
fstp
ss
(bad)
(bad)
mov
retf
lods
cld
adc
add
inc
les
mov
and
dec
xor
add
ins
xlat
(bad)
call
(bad)
jno
push
mov
or
sub
lea
es
xchg
ds
sub
mov
cmp
mov
cld
cdq
mov
rcl
adc
push
mov
mov
popf
retf
xor
outs
dec
inc
or
(bad)
(bad)
call
dec
retf
pop
stos
loop
movs
adc
jb
sbb
mov
push
(bad)
jmp
mov
or
(bad)
rol
out
inc
mov
pop
rol
push
int
test
jns
in
xchg
or
jg
mov
lods
push
(bad)
dec
or
xchg
nop
pop
mov
cmc
jbe
xor
pusha
into
nop
sbb
(bad)
dec
push
add
stos
(bad)
cmp
(bad)
(bad)
call
out
and
pop
out
sti
pop
aaa
out
inc
lahf
idiv
test
(bad)
call
or
pusha
ja
fnstsw
pusha
sbb
movs
mov
inc
idiv
(bad)
(bad)
dec
sub
rol
sbb
(bad)
sbb
das
das
dec
jne
scas
(bad)
(bad)
(bad)
inc
mov
cmp
pop
outs
into
out
fisub
(bad)
in
movs
imul
test
push
fwait
int3
pop
js
out
dec
xor
stos
pop
mov
add
popf
dec
jmp
cdq
repz
jmp
sbb
jb
mov
sub
push
xchg
cmp
cmp
mov
xchg
push
xchg
push
ficomp
dec
fnstsw
out
shr
nop
(bad)
rol
dec
pushf
mov
push
mov
ja
ins
cmp
(bad)
fdiv
jmp
loope
mov
inc
ret
int3
fcom
or
movups
(bad)
jmp
scas
push
inc
loop
in
cmps
icebp
sub
fiadd
loope
lea
pop
pusha
jmp
add
fst
xlat
daa
test
add
xor
es
pop
(bad)
adc
(bad)
(bad)
push
enter
inc
mov
hlt
dec
vpsrld
xor
or
inc
jge
aad
repz
(bad)
call
(bad)
mov
sar
adc
fwait
adc
and
dec
push
sub
loop
loopne
inc
addr16
pop
stc
mov
jmp
int3
cmp
(bad)
cmp
aad
xchg
outs
cmps
test
outs
xlat
or
and
(bad)
(bad)
dec
je
mov
sbb
stos
cmp
pop
pop
arpl
and
or
mov
aad
sar
sub
lods
jmp
xor
sbb
add
cdq
sub
bound
jo
jg
(bad)
fist
out
xchg
mov
inc
xchg
add
mov
adc
mov
mov
xchg
out
xor
and
push
cdq
fcmovu
(bad)
sub
cld
imul
mov
(bad)
(bad)
fcomip
sub
loope
and
iret
test
sbb
retf
mov
inc
retf
aaa
mov
test
cmps
mov
mov
inc
and
mov
in
call
cmp
xchg
fnstsw
push
add
std
or
pop
push
out
out
push
cs
(bad)
(bad)
(bad)
call
adc
mov
jge
mov
mov
sub
neg
sar
(bad)
(bad)
(bad)
dec
or
aam
leave
(bad)
cmp
mov
repz
adc
mov
repz
cmps
lock
jmp
ins
inc
add
das
add
add
mov
jmp
(bad)
(bad)
mov
add
mov
and
mov
xor
pusha
fadd
stos
out
daa
jg
cmp
hlt
sbb
adc
and
pop
out
dec
(bad)
(bad)
(bad)
(bad)
mov
xor
mov
aad
neg
(bad)
call
cs
outs
mov
call
adc
cdq
and
dec
dec
es
std
jmp
adc
das
shl
mov
inc
ret
inc
fwait
sar
jb
xor
into
push
add
jg
(bad)
(bad)
inc
fidivr
stc
xchg
adc
mov
pop
(bad)
cmp
leave
call
inc
fucomi
push
jo
add
movs
pusha
or
add
adc
jl
jl
scas
and
mov
dec
jge
dec
add
adc
cmp
adc
mov
mov
ret
mov
mov
(bad)
call
mov
xchg
adc
mov
dec
xor
sub
scas
mov
inc
(bad)
(bad)
(bad)
(bad)
cmp
xchg
iret
jbe
jmp
outs
neg
fdiv
pop
pusha
adc
stos
bound
cdq
push
sar
lock
sub
je
(bad)
call
xchg
jl
retf
lock
out
es
ror
jl
add
push
call
test
sub
mov
mov
and
add
mov
cmp
mov
out
sbb
xor
jecxz
vpsubb
dec
loop
int
cmp
fdiv
or
mov
frstor
add
in
xor
jg
outs
and
mov
in
aaa
movs
lock
sub
xchg
fnstcw
movs
ror
jecxz
into
mov
push
mov
push
mov
add
push
xor
mov
sbb
(bad)
(bad)
jmp
icebp
jnp
aas
(bad)
mov
div
data16
retf
pop
(bad)
pop
jns
add
lods
(bad)
shr
push
jmp
pop
jnp
mov
sahf
add
or
adc
(bad)
(bad)
push
pop
mov
push
xchg
push
cli
(bad)
(bad)
jmp
xchg
xchg
scas
pop
shr
xor
call
ds
xor
(bad)
dec
or
inc
popf
test
sar
inc
jle
push
(bad)
(bad)
(bad)
push
loope
and
or
xlat
and
sub
pop
test
sbb
(bad)
(bad)
(bad)
dec
out
xchg
adc
xor
mov
mov
sbb
les
add
and
into
int3
fmul
fild
push
ret
and
mov
cwde
inc
ret
fimul
(bad)
jmp
(bad)
scas
pop
add
dec
sahf
daa
retf
mov
jecxz
and
cld
(bad)
(bad)
fbld
rcl
mov
push
adc
sti
out
aad
ja
dec
loopne
pop
ffreep
push
mov
(bad)
(bad)
in
mov
cmp
adc
fsubrp
cmp
pop
jbe
pop
inc
(bad)
and
push
fcom
scas
inc
jno
inc
out
addr16
jns
not
adc
sub
outs
push
mov
push
std
pop
test
cmc
jp
rcl
out
mov
push
(bad)
sub
dec
retf
loope
push
push
ins
xor
sbb
push
repnz
shl
sub
je
pop
push
loopne
std
push
xchg
es
pop
dec
mul
mov
cmp
xor
dec
(bad)
dec
test
(bad)
icebp
in
cmp
cmps
mov
lods
cwde
pop
mov
ss
(bad)
call
xchg
dec
psrad
inc
or
jnp
mov
out
dec
adc
in
cmp
mov
jecxz
pop
or
sahf
pop
imul
call
add
sub
pop
push
mov
adc
int
outs
aas
mov
icebp
shl
(bad)
call
add
mov
sub
sbb
push
adc
sbb
pop
lock
test
sub
push
xchg
out
sbb
loope
inc
xor
test
push
xor
(bad)
pop
push
mov
(bad)
jmp
ja
dec
cdq
sbb
inc
les
(bad)
and
(bad)
in
mov
(bad)
(bad)
(bad)
call
jmp
stos
aaa
mov
xchg
add
sbb
popf
cmps
cmp
cld
inc
mov
lock
push
dec
push
sar
xchg
mov
outs
(bad)
push
(bad)
dec
imul
sub
pop
adc
pop
call
mov
imul
adc
cmp
xchg
ss
or
(bad)
mov
cwde
arpl
or
lods
cld
inc
popa
pop
into
add
dec
int3
scas
movs
aaa
lea
(bad)
mov
or
fdiv
sar
test
mov
inc
retf
gs
daa
ins
aad
push
mov
jle
inc
jge
call
lock
jne
retf
lods
adc
(bad)
cmps
aad
sub
ret
xor
(bad)
(bad)
inc
cmps
fisub
pop
sahf
mov
sbb
xchg
je
sbb
(bad)
mov
imul
gs
ja
jl
and
cmp
icebp
add
jmp
push
ror
movs
sub
addr16
or
and
leave
dec
pop
nop
mov
fimul
sar
or
ds
scas
cli
(bad)
inc
xchg
loop
inc
in
xchg
clc
ret
jno
(bad)
imul
data16
iret
out
fwait
push
out
push
and
clc
inc
sub
jg
call
push
rcr
add
mov
(bad)
(bad)
(bad)
call
add
out
aad
outs
outs
jecxz
leave
into
iret
call
rcr
fwait
sahf
pop
fistp
(bad)
(bad)
(bad)
(bad)
aam
push
aam
add
xor
jo
mov
mov
pop
jle
fwait
or
jmp
push
test
xchg
nop
stos
pop
add
test
cwde
cmp
cmp
call
call
sub
loope
ret
mov
(bad)
jnp
call
fwait
out
out
add
push
call
push
(bad)
dec
xor
sbb
cmc
call
and
ja
xchg
mov
ret
cmps
jmp
adc
jmp
cmp
test
rcr
jmp
xor
and
hlt
inc
(bad)
(bad)
jmp
ret
bound
lahf
jl
bound
push
inc
or
(bad)
fisttp
mov
cmp
mov
test
stos
jg
es
ins
xlat
push
test
sub
(bad)
jmp
push
bound
cmp
aaa
pushf
jle
or
push
xlat
ja
lods
imul
inc
retf
out
add
call
adc
jmp
(bad)
mov
fcomip
jb
mov
(bad)
cmp
jns
jle
out
push
enter
das
in
popa
(bad)
xchg
test
and
and
ds
out
jp
scas
mov
xchg
xor
aaa
xor
ret
jle
(bad)
(bad)
(bad)
call
retf
mov
call
repnz
out
jno
dec
inc
nop
inc
movs
dec
pop
ins
mov
adc
and
in
fdivr
ins
sbb
jmp
push
xchg
jmp
(bad)
fiadd
out
push
mov
fisttp
cwde
(bad)
(bad)
jmp
mov
xchg
rol
nop
push
adc
leave
mov
call
cld
ret
and
adc
out
and
or
int3
mov
mov
(bad)
(bad)
jnp
mov
(bad)
shl
push
test
into
(bad)
(bad)
call
mov
(bad)
cmp
xor
jbe
inc
ret
push
sar
cld
mov
movs
retf
adc
adc
test
(bad)
(bad)
dec
rol
pop
ss
push
ja
lock
out
shr
test
pusha
shl
retf
inc
mov
mov
sbb
sub
mov
lahf
jmp
(bad)
(bad)
(bad)
call
pop
pop
pop
out
add
xchg
mul
sbb
aad
jo
pop
push
(bad)
(bad)
(bad)
jmp
dec
xor
add
loopne
sub
and
dec
cmp
jg
add
mov
je
sbb
fcmovu
shr
mov
lods
fs
lahf
adc
(bad)
(bad)
(bad)
jmp
jnp
add
aam
mov
mov
in
inc
outs
sti
pusha
mov
mov
add
cdq
ins
dec
push
xchg
(bad)
(bad)
(bad)
call
push
adc
imul
lds
cs
cmc
ins
cs
mov
dec
ins
jno
(bad)
call
rol
out
repz
ret
adc
int3
(bad)
push
iret
fwait
jg
clc
(bad)
(bad)
(bad)
out
inc
(bad)
lahf
cmp
ret
(bad)
mov
xor
loop
mov
jb
fdiv
popa
pop
(bad)
jae
sahf
(bad)
dec
adc
sbb
xchg
pushf
outs
movs
stos
dec
cmp
bnd
aam
call
mov
stos
adc
int3
out
push
jmp
jmp
cmps
cmp
xor
mov
cmp
push
sub
fwait
(bad)
fld
mov
ss
(bad)
push
call
or
(bad)
mov
bound
push
clc
xor
add
(bad)
(bad)
(bad)
push
xor
pop
sub
test
or
arpl
or
mov
fsub
into
pushf
push
pop
fwait
je
cld
std
ss
mov
add
jne
inc
(bad)
imul
loopne
add
(bad)
(bad)
inc
xor
jo
and
jecxz
in
mov
jno
push
adc
mov
pop
mov
retf
(bad)
(bad)
(bad)
jge
xchg
fsubrp
inc
xchg
jne
adc
and
out
fsubr
push
clc
pop
retf
or
arpl
mov
test
cmp
repnz
or
fidiv
daa
or
loop
pop
or
repz
lods
aam
jns
ffreep
jmp
dec
loope
push
gs
jle
in
cwde
or
push
or
call
push
jo
adc
or
mov
xor
loop
call
cmp
jecxz
popf
(bad)
fidivr
push
cmc
adc
xor
(bad)
(bad)
(bad)
mov
loopne
mov
and
push
das
inc
xor
inc
mov
xchg
push
cmp
repnz
adc
xchg
adc
aad
mov
add
or
shl
cmp
mov
retf
mov
jmp
inc
cmp
or
hlt
int
dec
inc
inc
cmp
cmps
out
es
xor
cmc
lods
in
stc
pop
(bad)
(bad)
(bad)
dec
xor
inc
inc
inc
sub
xchg
pop
pop
imul
in
push
scas
call
cdq
push
(bad)
adc
(bad)
(bad)
push
dec
repnz
sbb
jmp
sub
mov
push
std
hlt
iret
jmp
inc
ror
jne
push
mov
add
xchg
sti
sub
add
into
clc
dec
in
xchg
inc
dec
mov
das
(bad)
(bad)
jmp
jp
inc
push
sbb
push
pop
adc
test
adc
mov
(bad)
jmp
or
xchg
pop
daa
mov
in
mov
cmps
push
sub
jge
mov
adc
mov
inc
popf
mov
(bad)
sub
jl
jmp
jmp
shl
lea
jmp
xlat
xchg
jle
mov
inc
(bad)
jmp
or
xor
out
daa
jp
ins
pop
or
push
jno
jae
xor
xchg
add
shl
ins
xchg
jmp
jmp
xchg
scas
stos
pop
retf
(bad)
(bad)
mov
test
jmp
(bad)
sub
inc
adc
mov
(bad)
push
clc
add
ror
pop
les
pslld
cmps
push
xchg
daa
add
mov
rcl
(bad)
jmp
inc
adc
ret
or
in
pusha
cs
sti
sub
jg
test
nop
clc
xlat
and
rcl
mov
pusha
test
ds
cs
pop
movs
test
repz
inc
call
mov
xchg
cmp
repz
and
mov
pop
cdq
loop
(bad)
(bad)
jmp
and
adc
ds
fmul
popf
les
mov
xchg
mov
dec
inc
push
popa
and
arpl
xor
inc
test
xchg
cmp
adc
jecxz
or
loopne
push
sub
(bad)
jg
int3
test
fcom
mov
bound
sar
les
imul
jle
add
xlat
(bad)
push
jnp
jmp
psllw
push
fcomip
xchg
addr16
(bad)
(bad)
out
push
fild
sub
mov
dec
adc
fsubr
loopne
sbb
xchg
cmp
ffreep
dec
cmps
das
cwde
xchg
and
mov
call
scas
xchg
(bad)
(bad)
jg
fs
mov
bound
xchg
ins
or
dec
sbb
cmps
mov
rol
add
inc
int
lods
mov
loope
jecxz
or
inc
jae
jne
outs
xchg
cmp
sbb
push
jl
lods
shr
test
fdivr
dec
popf
sub
cmps
cs
pop
xchg
or
(bad)
(bad)
(bad)
(bad)
(bad)
inc
cmc
add
out
pop
into
(bad)
mov
scas
mov
std
or
push
jl
aam
sti
dec
fs
dec
lock
push
aad
mov
add
mov
sub
dec
imul
imul
(bad)
call
push
xchg
test
cmp
ss
outs
mov
jg
test
adc
sbb
jb
add
dec
stos
sahf
std
sbb
aam
(bad)
(bad)
inc
cli
ror
into
mov
jp
cmp
ins
pop
push
(bad)
dec
popa
push
int
leave
sub
or
or
dec
sahf
jle
movs
rol
js
(bad)
(bad)
(bad)
mov
js
mov
and
lahf
xor
xor
push
aaa
adc
adc
(bad)
(bad)
inc
in
push
fstp
fdivr
add
aad
sub
or
inc
push
les
clc
push
loop
imul
dec
push
in
add
fdivr
and
(bad)
push
add
(bad)
jmp
sbb
dec
dec
jae
push
aaa
in
test
jmp
dec
cli
aad
pop
or
(bad)
in
les
fld
shl
lahf
jl
mov
push
sbb
and
mov
fs
outs
rcl
ja
mov
fcmovne
mov
xchg
popf
jg
xchg
and
mov
(bad)
push
outs
pop
mov
fisttp
lods
out
clc
cld
xor
out
movs
(bad)
(bad)
jmp
mov
shr
outs
iret
cmc
test
mov
or
dec
push
dec
sbb
lods
add
stos
aam
(bad)
(bad)
(bad)
dec
dec
sub
add
mov
mov
test
add
mov
mov
add
fdiv
leave
stos
add
or
scas
sti
sbb
idiv
(bad)
push
push
xor
ror
jle
mov
dec
cmp
xchg
retf
clc
aaa
adc
(bad)
ffreep
add
call
sbb
pop
je
(bad)
(bad)
(bad)
dec
jmp
fcmovb
fldz
adc
out
sbb
ss
add
sar
ins
out
mov
(bad)
mov
in
add
loopne
cmp
jle
dec
mov
shr
mov
je
ins
push
cmp
dec
xchg
mov
popf
aaa
pop
and
jg
bound
pop
mov
(bad)
inc
stos
cwde
push
add
dec
shl
xchg
push
add
out
add
mov
inc
mov
faddp
mov
push
cmps
adc
and
cmc
cli
or
movs
sbb
jno
xchg
xchg
jle
call
es
and
cld
(bad)
jae
push
jmp
or
stos
cdq
pop
or
inc
pop
ins
(bad)
(bad)
(bad)
push
mov
xor
add
jnp
cmp
out
cmp
mov
(bad)
(bad)
dec
retf
pushw
push
or
mov
add
cmp
add
clc
cwde
mov
(bad)
(bad)
(bad)
inc
outs
xchg
inc
sbb
adc
mov
jo
movhps
movs
mov
mov
(bad)
(bad)
inc
sbb
jne
(bad)
int3
jge
inc
add
and
fistp
dec
mov
jg
sahf
xchg
inc
rcr
hlt
add
std
pop
mov
jo
ins
cld
(bad)
jmp
inc
inc
or
retf
mov
mov
inc
jmp
cli
push
(bad)
(bad)
jg
(bad)
jno
sbb
jne
adc
test
xchg
cmp
push
movs
movs
sbb
pop
adc
mov
xchg
mov
cdq
movs
xchg
rcl
shl
(bad)
(bad)
(bad)
dec
icebp
cld
ret
popf
or
pop
mov
push
aad
ss
push
dec
idiv
(bad)
mov
gs
cmp
test
xchg
mov
xor
(bad)
call
stos
xor
push
push
outs
dec
mov
in
scas
sub
push
(bad)
call
int3
push
cmc
mov
aam
imul
js
lods
fbstp
fcomip
fistp
test
stos
mov
adc
(bad)
(bad)
call
jle
inc
neg
(bad)
pop
sub
dec
add
adc
xor
pop
(bad)
(bad)
(bad)
dec
add
lock
leave
imul
(bad)
mov
into
mov
pop
(bad)
pop
add
inc
(bad)
(bad)
(bad)
call
xchg
add
inc
and
add
out
sti
clc
test
cmp
ret
xor
(bad)
dec
pop
sahf
cmp
out
lods
adc
xor
js
add
push
push
call
push
imul
mov
sar
in
push
mov
and
cmc
or
movs
in
inc
fcmovnu
(bad)
(bad)
(bad)
jmp
and
sahf
lds
stc
inc
adc
aad
int
test
mov
std
or
shl
(bad)
(bad)
call
sbb
or
sahf
dec
fimul
pop
sub
mov
loop
pop
or
icebp
jb
daa
stos
dec
mov
or
mov
leave
shl
mov
in
sbb
xchg
pusha
and
(bad)
jg
sbb
mov
pop
fiadd
xor
repz
repz
repz
xor
call
sbb
stos
push
sbb
mov
mov
(bad)
(bad)
cmp
test
scas
sbb
add
shr
xor
popa
out
cmp
test
sub
push
fwait
ret
sar
fisubr
sbb
cmc
loop
cmp
shl
sbb
(bad)
mov
shl
enter
sub
popa
or
dec
shl
(bad)
repz
fisttp
sub
mov
mov
push
aad
ins
retf
and
jecxz
(bad)
(bad)
(bad)
call
jge
mov
xor
mov
xchg
or
pop
push
repz
cmps
js
(bad)
(bad)
(bad)
jmp
cmps
scas
test
in
push
nop
mov
enter
jns
rcr
vmovss
mov
gs
(bad)
(bad)
jmp
cmp
mov
aas
pop
iret
test
pop
ds
push
adc
push
sub
jg
jg
push
sbb
sub
mov
sbb
stos
xchg
rol
jno
jb
(bad)
(bad)
(bad)
inc
sti
jb
(bad)
pushf
ja
scas
dec
or
cmps
jae
push
mov
retf
aaa
and
push
rcr
lock
mov
pushf
push
push
jl
in
cmp
sub
movs
pushf
mov
fxch
sar
test
or
aad
jmp
arpl
sub
mov
jle
xor
fidiv
ret
add
add
add
test
shl
ja
sbb
or
jle
loope
(bad)
(bad)
push
aad
ins
or
int3
jecxz
mov
gs
or
outs
cmp
test
pop
das
mov
jmp
outs
les
jecxz
sub
adc
ficom
icebp
loope
(bad)
push
int
and
push
mov
pop
dec
mov
sub
inc
pop
mov
(bad)
(bad)
(bad)
mov
bound
xchg
mov
lock
xchg
pop
lods
sub
mov
ss
mov
sub
pop
sub
rcl
sbb
stos
sub
lods
or
bnd
(bad)
(bad)
call
(bad)
ret
test
fimul
repz
das
movs
outs
scas
dec
xchg
jge
pop
sub
or
inc
stos
jle
mov
movs
dec
jbe
stos
sahf
(bad)
loopne
cs
std
mov
xlat
(bad)
(bad)
inc
daa
xor
call
fsub
jne
jmp
int
fcomp
pop
call
sub
out
cmp
cmps
call
dec
sti
push
jmp
xlat
sub
cwde
jmp
rol
(bad)
(bad)
jg
mov
xor
ret
pop
cmps
out
xor
and
xor
(bad)
call
int
cmp
cmps
mov
cmp
fidiv
outs
jno
fisub
sbb
(bad)
(bad)
call
adc
mov
test
in
push
or
(bad)
lock
jg
add
mov
mov
jle
mov
pusha
jne
(bad)
div
xor
pop
popa
add
xlat
(bad)
fadd
(bad)
inc
ss
jbe
repz
loop
inc
adc
mov
in
in
jne
push
dec
lds
(bad)
(bad)
(bad)
fnstenv
shr
lahf
(bad)
aad
data16
daa
inc
nop
xchg
adc
out
xchg
bound
arpl
(bad)
mov
jns
loopne
es
(bad)
(bad)
jg
inc
je
rcl
sub
add
mov
pop
in
push
mov
leave
pop
into
outs
pop
icebp
popa
sub
push
jno
jmp
je
mov
pop
xchg
out
cmp
or
shl
or
mov
shr
data16
arpl
test
lods
dec
jmp
in
cs
dec
inc
inc
jmp
loope
mov
and
inc
imul
add
pop
ficom
sbb
mov
lea
jmp
inc
imul
add
inc
pop
fs
nop
and
(bad)
out
imul
mov
and
xor
push
cli
xchg
(bad)
jmp
add
mov
jl
je
jecxz
mov
mov
cli
push
mov
scas
adc
fadd
dec
fsub
push
mov
cmps
inc
js
jmp
or
push
cmps
push
mov
es
mov
add
(bad)
(bad)
(bad)
jge
int
(bad)
in
sbb
(bad)
loop
repz
aam
inc
or
pop
and
scas
jmp
call
pop
cmps
(bad)
je
and
int
cli
sub
xchg
push
ins
adc
scas
(bad)
pop
pushf
mov
(bad)
(bad)
(bad)
(bad)
jmp
pop
mov
movs
jle
and
cdq
dec
mov
imul
inc
jno
bound
sar
ss
movs
inc
(bad)
mov
test
ror
xor
push
repz
(bad)
mov
es
retf
jbe
sti
jno
xchg
(bad)
in
fcomip
or
xor
cmp
adc
jmp
nop
(bad)
xor
mov
(bad)
push
jnp
into
call
lea
mov
(bad)
push
cmp
push
addr16
cmp
cmps
ror
dec
scas
push
and
add
(bad)
inc
(bad)
mov
inc
jae
into
inc
and
push
xchg
cmps
jp
sbb
jg
inc
popa
loop
nop
stos
adc
jne
push
or
retf
(bad)
(bad)
(bad)
call
pop
js
push
mov
cld
push
jmp
xor
jmp
push
adc
jecxz
(bad)
(bad)
jmp
or
xor
sub
xchg
adc
pop
jae
enter
jecxz
(bad)
(bad)
push
fwait
inc
cs
test
sbb
fld
inc
mov
(bad)
retf
add
std
(bad)
(bad)
fcomip
add
pop
inc
les
dec
mov
daa
cmp
add
bound
gs
(bad)
ror
xchg
add
sbb
or
cmp
inc
shl
cmp
cld
mov
loope
dec
adc
dec
add
push
aas
and
jae
out
mov
inc
push
out
dec
imul
cli
(bad)
(bad)
push
mov
xchg
test
inc
je
ins
push
std
cli
xchg
mov
cmc
pop
and
sar
jmp
fnstcw
nop
(bad)
jo
or
and
sbb
mov
scas
outs
pand
and
(bad)
(bad)
mov
mov
sbb
ret
repnz
aaa
inc
mov
lock
dec
dec
or
xlat
push
inc
or
xor
(bad)
(bad)
mov
movs
repnz
ret
repz
and
sub
pop
pop
push
outs
cli
(bad)
(bad)
mov
xchg
leave
pmulhuw
fsub
pop
test
jbe
xor
push
fst
xor
les
(bad)
(bad)
jg
dec
test
ins
xor
repz
jmp
mov
pop
retf
pop
daa
fld
or
call
lods
test
add
(bad)
fist
mov
fistp
push
jmp
jp
fwait
(bad)
(bad)
fild
pop
dec
test
out
sub
push
iret
adc
outs
jns
(bad)
(bad)
call
mov
xor
out
mov
fst
adc
mov
add
mov
cmp
pushf
into
fisttp
imul
std
jmp
mov
mov
dec
ss
(bad)
(bad)
(bad)
inc
push
mov
in
cli
and
(bad)
pop
xchg
sbb
arpl
push
std
jmp
dec
aad
pusha
leave
push
xchg
(bad)
fstp
mov
mov
jmp
cdq
int
(bad)
(bad)
call
or
push
add
fstp
test
pop
pop
sbb
sar
mov
fmul
mov
xchg
(bad)
ins
push
and
mov
outs
xor
mov
ficomp
loope
xchg
sub
outs
or
jns
into
enter
adc
(bad)
(bad)
call
push
xor
pop
call
pop
xlat
pop
sub
mov
aas
(bad)
(bad)
call
test
jne
fsub
or
in
sar
inc
push
(bad)
(bad)
jmp
sub
sbb
mov
stos
cmp
mov
push
inc
lods
sub
int
mov
and
js
jge
push
jmp
clc
mov
add
aam
fucomp
mov
out
cmps
or
gs
and
jno
dec
push
fbld
cmp
sbb
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
test
cs
push
je
aam
add
in
and
pop
sar
inc
and
adc
fadd
dec
dec
pop
jno
ja
loope
push
or
out
fist
push
mov
mov
push
sbb
push
lods
push
push
inc
ins
mov
dec
into
lahf
sahf
sub
aas
lahf
outs
ja
(bad)
(bad)
(bad)
mov
pop
mov
outs
movs
das
mov
push
aaa
sub
add
(bad)
jg
jle
dec
mov
call
call
jmp
or
dec
test
cld
loop
mov
cwde
inc
mov
mov
inc
int3
lds
push
stc
mov
push
retfw
test
xor
dec
and
int3
sub
(bad)
(bad)
call
mov
das
(bad)
cmp
icebp
sbb
jp
je
popf
sub
(bad)
out
pop
sbb
popa
adc
xor
ret
(bad)
dec
(bad)
jl
enter
sti
lock
sub
cmp
lock
(bad)
cmp
mov
movs
call
out
aad
inc
pop
adc
push
das
(bad)
pusha
test
popa
je
fwait
rcl
imul
or
sbb
cdq
jno
nop
outs
xor
cmp
xor
aam
ret
adc
adc
or
aaa
hlt
(bad)
(bad)
(bad)
dec
jae
call
add
xchg
enter
neg
lock
popf
(bad)
jle
pop
dec
mov
(bad)
(bad)
(bad)
(bad)
call
scas
(bad)
mul
and
fs
jge
or
adc
pop
jle
(bad)
ror
sbb
xchg
pop
enter
(bad)
xor
stos
xchg
jg
(bad)
aas
push
mov
adc
(bad)
(bad)
(bad)
jmp
xor
add
test
sbb
sti
sub
pop
enter
mov
jmp
mov
stos
cld
mov
and
(bad)
mov
xlat
sub
jge
and
inc
popf
mov
stos
leave
pop
ret
push
jne
add
or
cdq
and
scas
cli
push
sbb
mov
nop
fcmovbe
pop
lods
sbb
mov
leave
(bad)
(bad)
(bad)
call
rol
das
call
pmovmskb
ins
das
xchg
push
cmp
and
xchg
icebp
(bad)
fild
loopne
fist
(bad)
(bad)
(bad)
(bad)
in
test
mov
jmp
(bad)
loopne
cwde
popa
mov
pop
xchg
mov
xchg
(bad)
dec
cdq
test
fdivr
jecxz
and
popf
xchg
push
(bad)
(bad)
(bad)
inc
das
sub
aas
shr
mov
push
adc
inc
mov
mov
cmp
push
in
sbb
loope
xchg
push
push
mov
add
jle
xchg
fcom
push
and
push
push
js
sbb
loop
pop
loopne
inc
pop
(bad)
(bad)
(bad)
call
mov
(bad)
jmp
retf
jmp
ins
jo
mov
mov
dec
stos
ins
(bad)
push
test
mov
or
lods
mov
(bad)
mov
(bad)
and
or
fwait
pop
aam
test
add
fst
(bad)
jmp
pop
sub
xchg
mov
std
bound
push
lods
pop
ins
cld
pop
ins
xchg
aam
pop
int3
pop
jmp
xchg
pop
(bad)
(bad)
(bad)
(bad)
jns
push
retf
nop
es
jmp
bound
pop
sar
mov
push
jmp
(bad)
(bad)
call
fdiv
js
pop
into
imul
push
aaa
push
jno
(bad)
adc
sbb
xor
mov
sar
push
jp
push
inc
enter
mov
aad
fdiv
sub
sar
jg
call
push
shl
and
jo
in
into
test
mov
sbb
(bad)
(bad)
jmp
jae
cwde
fistp
mov
aad
mov
outs
daa
jg
loope
inc
sub
aad
add
(bad)
(bad)
js
ret
aaa
lods
sbb
mov
jb
jg
retf
push
jg
push
fwait
dec
or
test
sub
test
xor
push
ja
xchg
outs
ins
pop
jns
add
nop
clc
(bad)
call
mov
aad
xor
outs
jae
sub
pop
fdivr
jmp
leave
sub
mov
inc
fcomp
inc
ss
push
aas
(bad)
mov
jae
jmp
mov
jp
cs
imul
push
xor
dec
test
(bad)
(bad)
push
test
verr
repnz
mov
(bad)
jg
cld
xor
pop
mov
(bad)
(bad)
dec
into
test
xchg
mov
(bad)
outs
pop
mov
cld
xor
xor
jmp
repnz
(bad)
(bad)
jmp
or
dec
add
xchg
mov
jp
xor
mov
inc
cmps
jmp
sub
add
add
hlt
scas
ss
(bad)
jmp
jl
sub
pop
xchg
test
cmp
mov
loop
mov
cmp
out
scas
sar
(bad)
jmp
or
hlt
and
fs
jle
mov
push
(bad)
call
rcl
dec
ret
arpl
xchg
pop
cmp
(bad)
(bad)
push
das
and
mov
and
sbb
xor
mov
aaa
hlt
(bad)
(bad)
in
sub
mov
fild
xchg
xlat
dec
das
lods
sub
(bad)
(bad)
jg
xchg
scas
and
sbb
in
les
(bad)
les
ja
inc
pop
call
fld
push
(bad)
(bad)
(bad)
call
repnz
or
mov
div
xor
push
in
aad
add
out
ins
call
jmp
lahf
popa
inc
rol
inc
cmp
sub
sub
dec
or
or
dec
ss
mov
mov
jmp
mov
mov
outs
add
sahf
cmp
mov
adc
or
out
fcom
stos
lds
icebp
xchg
sar
movs
inc
push
in
mov
mov
jb
aad
push
(bad)
(bad)
dec
inc
adc
jns
inc
cmps
jp
xchg
lods
pop
mov
rol
rcr
pop
xor
add
into
sub
imul
inc
fisubr
sbb
push
outs
or
lods
out
out
cmps
pop
sbb
xchg
mov
xor
mov
dec
int3
adc
aaa
pop
fisub
cmps
dec
(bad)
mov
dec
inc
or
fdiv
mov
sar
popa
xchg
or
pop
inc
aas
call
inc
xchg
add
and
add
and
sub
add
or
lods
cmps
mov
jmp
(bad)
(bad)
(bad)
dec
repnz
movs
das
push
ret
xchg
sar
pop
dec
je
sbb
pop
xchg
(bad)
out
das
imul
(bad)
inc
pop
out
mul
popa
and
retf
out
nop
inc
jl
gs
mov
(bad)
(bad)
inc
push
pop
and
or
jle
test
jnp
pop
jmp
cmc
(bad)
(bad)
call
cmps
mov
jl
daa
and
mov
mov
retf
(bad)
call
cli
popa
iret
adc
xchg
daa
dec
ror
xchg
rcl
add
iret
repz
test
pop
jmp
(bad)
(bad)
(bad)
(bad)
jle
add
das
(bad)
retf
mov
fimul
frstor
pop
jae
xchg
ret
(bad)
(bad)
(bad)
(bad)
cmp
add
sub
xor
vpsraw
ret
aad
ins
nop
in
or
push
and
add
ret
jle
push
push
sbb
movs
es
xlat
sbb
fidivr
shr
cmps
aas
push
mov
cmp
xchg
inc
das
add
and
das
cwde
(bad)
and
mov
fs
fmul
dec
icebp
push
pop
push
adc
scas
fwait
shr
(bad)
inc
ret
mov
fidivr
push
into
(bad)
(bad)
(bad)
(bad)
cld
lods
dec
mov
and
enter
xchg
test
mov
sub
jbe
pop
test
pop
stos
xchg
cs
jg
(bad)
call
and
imul
bswap
pop
or
push
popa
enter
call
xor
pop
xchg
in
push
ret
out
stos
and
jno
clc
sub
xor
push
(bad)
(bad)
(bad)
call
into
ffree
stos
and
bound
add
fiadd
pop
rol
loope
pop
pop
push
cwde
mov
push
cdq
pop
call
or
push
iret
and
mul
test
pop
cmp
xchg
retf
aaa
(bad)
cmp
ret
or
pusha
inc
xor
cdq
sti
sub
inc
mov
lock
nop
outs
clc
sub
movs
adc
rcl
xor
jle
bound
mov
(bad)
jmp
ret
or
jmp
sub
mov
(bad)
jmp
mov
xchg
mov
popa
sub
hlt
xchg
add
sbb
lods
(bad)
jmp
sbb
push
and
pop
test
(bad)
mov
sar
push
cmp
imul
je
loop
jno
xchg
in
jbe
lea
jmp
mov
or
test
jle
scas
imul
movs
push
mov
(bad)
(bad)
(bad)
dec
dec
mov
hlt
inc
icebp
fld
dec
push
fnstsw
dec
fstp
pop
dec
pusha
add
jmp
ja
rep
jl
adc
rcr
pushf
es
test
cwde
dec
rcl
cmp
pop
pop
cmc
pop
cld
cmp
outs
xor
inc
in
jmp
sub
jg
mov
ror
sahf
neg
call
sbb
cmp
loopne
xchg
add
mov
aad
push
or
leave
mov
mov
push
xchg
xchg
push
pop
clc
jmp
clc
call
out
xchg
push
sysexit
pusha
(bad)
(bad)
mov
add
xchg
mov
imul
rcr
cmp
mov
(bad)
(bad)
dec
add
call
xlat
or
xor
jne
mov
mov
std
fwait
(bad)
(bad)
(bad)
(bad)
aas
lock
outs
jae
mov
in
je
fiadd
fwait
jb
dec
mov
ja
inc
ins
fs
jae
cmp
cmc
xchg
mov
cld
cmp
jno
jns
scas
pop
(bad)
inc
and
ficom
retf
test
(bad)
jmp
scas
std
rcl
nop
xchg
mov
shr
add
cli
shl
xor
add
(bad)
(bad)
cli
add
outs
fimul
mov
fimul
cmp
pop
and
cmp
fistp
and
pop
(bad)
jmp
sbb
add
dec
add
inc
lds
jl
jb
xchg
or
(bad)
(bad)
jmp
shr
sbb
xchg
daa
pushf
pop
jb
jg
push
int
sti
jecxz
dec
fisubr
pop
pop
lds
(bad)
mov
add
mov
mov
cmps
call
bnd
out
ins
fxch
add
(bad)
jae
xor
xchg
mov
pop
cwde
xor
aaa
cld
fwait
push
mov
mov
int
or
mov
sub
in
(bad)
jmp
mov
leave
adc
sar
shl
push
jecxz
(bad)
(bad)
(bad)
push
mov
ror
fcomp
push
mov
test
in
in
cmp
loopne
call
push
cdq
sub
xchg
and
popa
push
in
ins
push
cmc
jno
(bad)
(bad)
call
popa
inc
fdivr
(bad)
adc
out
jne
test
out
xchg
adc
enter
inc
add
rcl
mov
add
inc
dec
sub
or
test
add
stc
ret
les
sbb
sahf
fbld
add
or
rcl
xchg
idiv
xor
(bad)
(bad)
(bad)
cld
jmp
push
cs
and
add
daa
outs
popf
cmps
xchg
ins
mov
pop
retf
xchg
ror
(bad)
(bad)
(bad)
call
ins
xor
xlat
aam
jmp
dec
mov
push
iret
ds
data16
mov
(bad)
jmp
mov
bound
pop
add
sub
or
shl
sub
(bad)
(bad)
fbstp
cmp
aas
push
sub
das
in
gs
test
mov
sbb
shl
imul
in
lds
lea
iret
adc
outs
sub
push
push
fcomp
fdiv
or
(bad)
(bad)
ficomp
test
pop
mov
xchg
ret
aaa
das
(bad)
enter
pop
clc
cs
scas
ror
ds
jg
push
jae
cdq
fld
ins
pop
dec
fisub
push
lahf
ins
add
pop
cmp
push
mov
inc
repnz
jge
mov
xchg
int3
popa
push
add
pop
(bad)
shr
in
fucom
pop
pop
ret
cli
xchg
test
mov
dec
test
(bad)
mov
inc
jno
xchg
addr16
and
mov
in
mov
pusha
xchg
add
sub
jnp
mov
and
lea
sahf
inc
js
cwde
sbb
sub
(bad)
(bad)
inc
and
iret
es
pop
adc
enter
(bad)
xlat
push
cmps
out
xor
add
jns
int
sahf
fistp
push
ret
(bad)
ins
outs
jl
pop
cmp
(bad)
(bad)
(bad)
push
sub
lahf
sub
movs
movs
mov
mov
sub
into
test
or
ss
dec
inc
adc
mov
int3
push
lahf
mov
sahf
sub
lds
cld
xlat
mov
add
call
std
aaa
outs
and
loope
retf
adc
sub
cmp
inc
icebp
test
int3
jne
out
mov
(bad)
(bad)
dec
lods
sbb
push
push
adc
sub
and
push
mov
repnz
std
fild
retf
push
cmp
pop
and
(bad)
jg
mov
pusha
cmp
push
sub
iret
xchg
(bad)
jg
pop
fwait
cmp
imul
out
outs
dec
dec
(bad)
sti
ret
dec
outs
pop
mov
test
pop
jnp
mov
out
in
pusha
jns
and
sub
(bad)
(bad)
push
sub
cmp
or
out
add
(bad)
xor
and
inc
xchg
push
std
mov
fimul
cmp
dec
rcr
sub
push
(bad)
(bad)
fbstp
std
cwde
retf
jp
mov
inc
push
add
(bad)
cmc
mov
dec
out
pop
sub
test
in
scas
jg
jecxz
pop
cdq
or
sbb
cmp
(bad)
call
arpl
je
inc
cmc
or
and
iret
mov
dec
test
(bad)
(bad)
cmp
mov
pop
adc
mov
xor
mov
fldenv
aaa
aad
dec
mov
cmp
repnz
xor
sub
sub
stos
(bad)
jg
inc
popa
daa
xchg
dec
in
jp
sub
(bad)
ror
and
adc
jge
and
in
dec
cmp
sar
and
xchg
(bad)
(bad)
(bad)
call
inc
mov
sbb
fwait
sub
mov
xchg
xchg
cmp
clc
lahf
jns
(bad)
(bad)
inc
loope
cmc
sbb
dec
or
sbb
stc
jo
push
inc
mov
sbb
adc
(bad)
(bad)
jmp
cmp
xor
test
jecxz
mov
add
cmc
and
test
clc
and
cmp
or
push
sub
fadd
int
and
mov
cld
push
(bad)
fld
jno
scas
push
fadd
jne
imul
movs
push
or
clc
(bad)
jmp
add
ret
sub
fsubr
data16
inc
pop
dec
imul
loop
stos
fisttp
imul
sub
inc
clc
push
rol
or
stos
push
xor
mov
jmp
dec
retf
inc
das
xor
jbe
add
pop
inc
inc
mov
dec
pop
pop
shr
push
loopne
cs
dec
mov
stc
ds
inc
stc
es
(bad)
(bad)
mov
cld
sbb
add
push
les
add
arpl
jl
daa
cmc
(bad)
jg
(bad)
push
bound
adc
test
jnp
inc
pop
pop
rol
(bad)
(bad)
(bad)
jmp
int
mov
dec
(bad)
int
js
cmps
popa
popa
pop
out
dec
movs
mov
xlat
jb
add
dec
jmp
ret
mov
(bad)
(bad)
(bad)
(bad)
mov
fwait
lds
sbb
ror
jmp
test
adc
cmp
push
scas
movs
inc
(bad)
call
ja
or
and
push
inc
imul
fcomip
call
mov
mov
mov
mov
or
fwait
mov
retf
in
lock
sbb
dec
cli
call
aaa
xchg
test
adc
bound
inc
aam
(bad)
(bad)
dec
icebp
arpl
adc
sub
pop
call
add
push
sbb
push
iret
add
xor
or
aas
into
jbe
ja
mov
dec
cmp
dec
enter
pusha
mov
cwde
aam
jne
adc
ffree
js
xor
sub
cmps
(bad)
(bad)
(bad)
call
popa
push
cld
or
mov
stos
ret
xchg
mov
xor
jge
jmp
dec
loope
mov
movs
fld
jp
cs
(bad)
lea
je
jo
push
pop
or
mov
out
out
std
les
jecxz
mov
push
fidiv
call
sbb
cmc
dec
pop
out
mov
xchg
gs
(bad)
dec
cmps
ror
hlt
cmovge
jl
call
push
cmp
jmp
pop
lock
mov
mov
popf
or
in
mov
cmp
jns
inc
jns
ins
(bad)
jmp
leave
jg
add
es
loope
mov
and
xor
(bad)
sti
aas
dec
gs
jns
sub
dec
jmp
fwait
pop
int
ror
push
xchg
stos
call
mov
pop
sub
inc
fwait
sub
inc
mov
jb
or
sbb
fucomp
push
adc
dec
in
pop
test
pop
pop
(bad)
jmp
inc
nop
jmp
cmp
xchg
bound
(bad)
(bad)
(bad)
jmp
stos
pusha
push
dec
mov
cwde
fild
mov
push
dec
aam
xchg
addr16
push
push
(bad)
dec
lods
jle
mov
xchg
xor
jmp
fbld
xchg
push
cli
icebp
xchg
xchg
es
jns
xor
adc
(bad)
jmp
xor
movzx
jle
push
in
push
out
les
dec
jg
sahf
or
(bad)
and
test
(bad)
(bad)
in
jg
xor
sub
ror
xlat
xor
cld
adc
test
(bad)
(bad)
(bad)
inc
call
mov
pcmpeqb
pop
scas
jg
fisubr
outs
or
jp
and
push
shl
(bad)
(bad)
(bad)
cli
mov
imul
aam
jb
jo
inc
fwait
mov
(bad)
jmp
bound
adc
into
repnz
sub
shr
push
mov
push
push
xor
or
int3
jae
push
ret
aad
neg
in
fucom
adc
cmp
push
rcl
(bad)
fisttp
nop
mov
mov
in
movs
stos
jle
or
fdivr
pop
lock
mov
out
push
jo
les
pop
mov
mov
xor
popa
cwde
(bad)
(bad)
(bad)
(bad)
cmp
cs
imul
mov
pop
xor
push
out
and
sbb
in
or
ss
dec
stos
movs
outs
jle
mov
call
mov
stos
rep
cmc
sbb
jp
in
xlat
cld
imul
xor
jo
in
ja
(bad)
cmp
fstp
(bad)
int
sti
dec
sbb
rcl
jmp
ins
out
int3
cs
cli
call
jp
int3
xchg
aaa
add
das
jne
dec
xchg
aam
and
jg
mov
pop
hlt
push
in
shr
jmp
pmulhuw
cmp
outs
lahf
xor
cmps
mov
int3
sub
ins
js
mov
lock
cmc
mov
cli
(bad)
call
mov
mov
sbb
(bad)
add
jbe
movs
jmp
fbstp
imul
(bad)
(bad)
dec
mov
arpl
mov
adc
and
cwde
inc
gs
xchg
inc
push
add
(bad)
dec
pusha
call
out
sahf
in
jae
mov
shl
or
jbe
(bad)
(bad)
(bad)
jmp
dec
lahf
int
sbb
repnz
stos
jbe
jne
icebp
hlt
xor
cli
sbb
stos
mov
sbb
or
adc
and
(bad)
(bad)
jmp
dec
jb
pop
sub
loope
xor
ja
es
aas
popf
pop
retf
imul
repz
xchg
jb
xchg
rcr
es
sub
and
xchg
das
cwde
mov
pop
cmp
es
push
and
jmp
fisttp
sub
nop
mov
nop
and
ins
loop
bound
(bad)
mov
jmp
fs
in
test
mov
(bad)
(bad)
(bad)
(bad)
jns
ret
mov
add
mov
push
lods
popa
cdq
scas
jge
jo
popa
sub
jg
xor
ret
xchg
fwait
adc
(bad)
call
leave
cmp
jnp
xor
stos
movs
movs
dec
pop
and
push
dec
lea
(bad)
call
jle
ds
push
fs
test
xor
stos
stos
imul
xchg
lods
xor
mov
jmp
loopne
xchg
xchg
xor
out
jb
bound
rol
(bad)
(bad)
(bad)
jmp
jg
inc
add
mov
mov
sbb
push
xchg
repz
rol
ret
dec
or
neg
xor
pop
aas
sub
in
inc
stos
setno
shl
int
inc
(bad)
aaa
or
mov
mov
cmp
dec
(bad)
(bad)
(bad)
jmp
inc
lods
mov
cmps
lods
and
inc
add
add
mov
shl
(bad)
jg
cmp
adc
iret
adc
je
std
adc
(bad)
call
dec
cmp
(bad)
jmp
pop
or
jb
ins
sub
(bad)
mov
imul
push
(bad)
js
sbb
sar
sbb
sar
call
push
cmps
imul
imul
jns
ret
jo
out
pop
and
test
jbe
jno
rol
(bad)
jmp
(bad)
in
jo
sar
sub
out
mov
jae
xchg
(bad)
fld
inc
rcl
bound
jmp
hlt
in
push
scas
sbb
das
jmp
push
es
sub
test
inc
xchg
xor
shl
xor
or
cmp
(bad)
(bad)
dec
mov
dec
xchg
fisubr
fadd
dec
mov
mov
xor
int3
dec
cmp
les
cli
cs
pop
pop
jmp
lock
fdivr
jg
(bad)
call
jecxz
ss
add
jno
and
test
arpl
cmp
(bad)
inc
pop
adc
out
stc
clc
dec
and
sub
jl
jg
dec
push
push
into
xor
or
xchg
push
sbb
aaa
cld
mov
xlat
xchg
clc
push
ret
outs
clc
adc
adc
inc
and
mov
(bad)
adc
adc
push
push
mov
pop
sbb
(bad)
(bad)
inc
pop
fnstsw
mov
jo
or
pop
mov
xchg
mov
not
inc
fild
and
cmps
cli
(bad)
(bad)
(bad)
mov
adc
sar
int
inc
fwait
cs
test
arpl
push
dec
into
adc
call
rcr
or
in
test
aas
inc
dec
mov
icebp
inc
loop
jmp
in
xchg
out
int
pop
inc
rcr
push
movs
ds
mov
add
mov
cmps
test
shl
hlt
xchg
movs
sar
(bad)
dec
jnp
adc
test
mov
repnz
fst
sbb
xlat
leave
mov
(bad)
jmp
add
ss
les
enter
les
mov
scas
and
mov
xchg
add
jg
cmp
mov
ins
push
mov
or
mov
imul
xor
xchg
scas
shl
bound
ja
mov
and
fsub
xor
add
mov
ret
loop
out
ret
and
xchg
popa
aas
in
mov
pop
scas
mov
inc
in
iret
sar
jnp
add
mov
rcr
icebp
fucomi
aad
out
fisttp
adc
cli
(bad)
fwait
into
jmp
call
adc
(bad)
mov
add
ss
add
ss
(bad)
(bad)
(bad)
(bad)
mov
push
cmp
arpl
xchg
loope
mov
cdq
data16
pop
movs
nop
adc
sahf
mov
fcomip
call
xlat
cli
jl
fld
scas
mov
repnz
dec
add
push
std
(bad)
call
mov
std
mov
vmptrst
repnz
inc
daa
fimul
(bad)
jg
icebp
stos
push
mov
cmps
jne
in
inc
jae
sub
pop
xchg
popf
cmp
xor
add
fist
xchg
stos
mov
mov
push
or
or
add
lods
fstp
ja
mov
stos
es
jle
add
mov
adc
iret
mov
sbb
lock
sub
or
jle
inc
(bad)
push
into
add
push
cmc
dec
inc
out
imul
mov
call
sub
mov
lods
jg
arpl
loopne
mov
in
pop
addr16
(bad)
(bad)
(bad)
call
push
scas
mov
loopne
dec
sbb
push
sbb
clc
dec
inc
xor
ins
cmovge
add
call
out
jl
addr16
sahf
sahf
(bad)
(bad)
mov
jecxz
jle
mov
rcl
push
cli
lods
fiadd
loopne
and
dec
cli
sub
data16
jmp
ficom
aas
jl
mov
pop
lds
mov
push
jb
rcl
adc
mov
(bad)
(bad)
(bad)
call
cld
bound
aad
xor
lods
ja
fisubr
adc
pop
inc
jne
stos
adc
int
icebp
dec
pusha
fstp
mov
xchg
(bad)
(bad)
call
(bad)
pop
rcr
(bad)
int
ret
in
and
pop
mov
mov
retf
pop
(bad)
call
sub
push
sub
xor
jl
mov
call
imul
cli
mov
test
xor
(bad)
sub
jmp
mov
xor
mov
or
push
rcr
popa
push
mov
inc
movs
jge
imul
xor
pop
int
mov
outs
dec
inc
jge
xchg
push
sbb
(bad)
(bad)
jmp
xchg
sahf
rcl
fs
retf
mov
in
xor
mov
dec
pop
mov
pop
call
and
xchg
cmp
xchg
xor
lods
ret
push
scas
js
out
cmc
fninit
leave
inc
(bad)
(bad)
(bad)
mov
das
lea
xchg
sub
lods
inc
or
stc
cwde
adc
mov
nop
(bad)
(bad)
jmp
jae
inc
xlat
(bad)
mul
mov
int
call
sbb
jne
scas
xlat
lea
pop
cmps
sbb
scas
cmps
push
jmp
outs
adc
(bad)
(bad)
mov
mov
fcomp
xchg
lods
in
or
xchg
mov
(bad)
jmp
jo
jge
out
mov
nop
jecxz
in
pop
mov
shl
arpl
ret
(bad)
mov
xor
pop
retf
lods
movs
fst
shl
adc
fcomp
mov
adc
xor
imul
js
jmp
mov
mov
call
cmp
(bad)
fdiv
lock
and
cs
mov
and
das
mov
(bad)
(bad)
call
pusha
cmps
push
lock
pusha
pop
dec
or
mov
rol
(bad)
(bad)
jp
pop
sub
adc
lea
(bad)
out
push
scas
lahf
mov
mov
push
std
mov
sbb
inc
fsubr
mov
ins
repz
sub
dec
jecxz
mov
(bad)
(bad)
(bad)
inc
sub
(bad)
addr16
repz
inc
jmp
retf
pusha
sti
sti
jnp
lds
cld
and
xor
push
(bad)
xor
pop
repnz
adc
(bad)
icebp
rol
(bad)
(bad)
(bad)
push
sub
retf
xchg
xchg
mov
clc
or
pop
outs
sbb
test
mov
ins
cld
(bad)
mov
pop
push
adc
ds
fiadd
and
jns
stc
and
add
(bad)
(bad)
dec
mov
das
fcom
mov
arpl
retf
inc
pop
int3
mov
jg
rol
mov
or
jmp
mov
cmps
mov
adc
(bad)
mov
xor
sbb
jp
mov
js
outs
mov
jno
xchg
cmp
(bad)
(bad)
(bad)
(bad)
push
jae
mov
xor
pusha
test
or
iret
jmp
popf
nop
addr16
cwde
(bad)
(bad)
(bad)
push
out
push
fisttp
mov
jbe
(bad)
xor
sbb
pop
jge
inc
or
push
(bad)
popf
(bad)
cmps
call
push
shr
shl
pop
enter
push
mov
std
(bad)
std
dec
fmul
in
push
(bad)
cs
je
(bad)
(bad)
call
jne
and
dec
into
(bad)
lods
xor
cdq
call
icebp
ds
push
or
sbb
call
mov
and
lock
popa
cwde
imul
ss
push
push
(bad)
(bad)
cmp
iret
ds
cld
stos
and
inc
pop
cmp
mov
arpl
fld
push
push
xor
ret
test
(bad)
(bad)
(bad)
(bad)
call
cli
dec
mov
xchg
xlat
call
(bad)
lahf
or
hlt
shr
xor
xchg
lahf
push
dec
sbb
cli
addr16
loop
ret
lods
push
fiadd
xor
dec
les
popf
xor
aas
(bad)
or
leave
int3
(bad)
jmp
push
pop
mov
(bad)
jns
sub
inc
stos
jae
dec
sar
stc
adc
(bad)
(bad)
(bad)
jmp
adc
test
or
jmp
call
xor
idiv
dec
stos
dec
adc
xor
nop
inc
cs
jl
(bad)
(bad)
(bad)
jmp
int
push
pop
in
and
popa
mov
je
sbb
mov
mov
aaa
or
call
icebp
lahf
cmp
sub
mov
inc
clc
mov
inc
in
mov
push
clc
(bad)
jmp
mov
cs
fcom
out
enter
adc
aaa
std
inc
fisub
sub
outs
ins
fbld
call
(bad)
mov
or
xor
add
adc
cmp
(bad)
(bad)
call
nop
test
sbb
repz
call
cwde
mov
cmp
inc
out
test
xchg
out
cmp
mov
(bad)
out
loop
and
mov
xor
cmp
popa
cmp
cmps
push
mov
call
nop
(bad)
lock
dec
pop
xor
sti
mov
fidiv
(bad)
(bad)
(bad)
jmp
mov
popa
fst
jne
dec
nop
push
es
add
push
fcom
dec
mov
xchg
inc
les
mov
push
sub
(bad)
cmps
outs
inc
call
es
mov
ret
jmp
sbb
(bad)
(bad)
call
or
ss
and
fidivr
es
or
inc
test
xor
(bad)
(bad)
(bad)
(bad)
jge
xor
repz
push
das
dec
loopne
fldenv
jle
movs
out
clc
xchg
mov
(bad)
call
rcl
int3
mov
ss
adc
jecxz
sbb
or
mov
jmp
mov
scas
dec
push
xchg
and
pop
repnz
test
pop
jp
sti
lods
jmp
(bad)
(bad)
call
pop
cld
je
dec
repnz
xchg
inc
ins
dec
int3
xchg
test
mov
inc
xor
add
enter
push
pop
stos
dec
mov
sub
hlt
(bad)
inc
lahf
and
mov
xor
nop
dec
jnp
or
hlt
jmp
or
loope
bound
int3
call
adc
mov
fstp
popf
fbld
std
jle
add
idiv
mov
jecxz
mov
inc
sub
mov
dec
dec
mov
fcomip
ja
out
fmul
mov
test
call
int3
out
push
retf
das
inc
ins
mov
sti
rcl
push
arpl
dec
sbb
inc
push
(bad)
jns
or
jg
scas
pop
inc
pusha
adc
ss
jmp
jns
cdq
pusha
sahf
or
inc
and
ror
lock
jns
dec
out
in
retf
es
aaa
jmp
mov
dec
call
or
cmp
(bad)
in
xlat
mov
(bad)
(bad)
(bad)
(bad)
mov
dec
enter
stos
iret
(bad)
fcmovbe
xlat
xchg
loope
arpl
xor
mov
adc
add
(bad)
jmp
or
adc
(bad)
aas
mov
(bad)
(bad)
mov
lahf
out
sbb
jg
es
adc
cmps
int3
pop
dec
pop
sub
mov
xor
hlt
outs
std
shr
frstor
and
loop
mov
imul
jecxz
pop
test
mov
xchg
test
jge
mov
fdiv
sbb
ds
mov
add
push
std
inc
cmp
mov
fmul
cmps
mul
les
mov
xor
sub
xor
mov
stos
xor
xchg
aam
jbe
gs
int3
in
cmp
add
dec
cmp
jns
pop
aaa
xchg
xchg
sbb
sti
or
pusha
int3
mov
and
adc
push
das
or
outs
shl
mov
(bad)
(bad)
(bad)
in
sub
sbb
dec
push
repz
aas
loope
enter
pushf
xchg
fimul
xchg
(bad)
inc
jmp
ret
mov
cs
cld
adc
xor
mov
mov
es
out
lock
sbb
(bad)
cwde
pop
mov
jmp
push
lds
cmp
ss
fcomp
mov
mov
call
push
jo
adc
cmps
pop
clc
mov
inc
pop
cmp
(bad)
(bad)
jmp
js
rol
pop
push
sub
push
imul
in
in
aas
jne
(bad)
dec
lock
mov
mov
and
xor
adc
(bad)
(bad)
push
mov
and
lock
fs
pusha
fcmovb
push
test
lahf
push
xor
stos
mov
and
jmp
inc
or
push
adc
sbb
jmp
mov
mov
mov
cmp
jmp
test
pop
in
fistp
sar
cmp
stc
ret
loopne
push
lea
scas
rcr
(bad)
(bad)
jg
push
xchg
in
inc
sbb
cmp
push
popf
fimul
adc
push
enter
inc
imul
add
into
hlt
call
adc
in
loope
(bad)
(bad)
(bad)
jg
inc
(bad)
or
pop
retf
xchg
lods
ret
inc
or
pop
shl
sbb
hlt
xlat
(bad)
cmps
inc
aad
icebp
inc
in
fnstenv
mov
pop
(bad)
(bad)
(bad)
jmp
sub
adc
ins
and
pop
jmp
push
aad
add
pop
and
das
clc
push
jp
popf
pop
out
bound
inc
ret
cmp
and
fisub
sbb
ds
sub
jl
mov
mov
clc
cmps
or
cmp
sub
mov
addr16
jmp
(bad)
(bad)
call
inc
ret
ror
xchg
ja
and
cld
and
jo
xor
push
int
(bad)
(bad)
call
outs
inc
imul
dec
int
dec
call
or
add
rcl
das
out
mov
ins
gs
mov
jmp
inc
pop
out
mov
in
(bad)
mov
pop
das
fucomi
mov
add
aam
outs
test
xor
cmp
push
call
mov
xor
xchg
nop
mov
out
inc
mov
sub
add
jmp
pop
int
sbb
loope
xor
in
push
das
and
lock
(bad)
(bad)
push
jle
xchg
or
dec
push
retf
es
dec
leave
xchg
dec
adc
mov
scas
(bad)
(bad)
(bad)
jmp
(bad)
mov
inc
rcr
sbb
and
jae
adc
out
test
mov
test
(bad)
out
pop
add
and
out
pop
cmp
xchg
(bad)
call
dec
push
xchg
inc
cmp
lods
push
dec
(bad)
stc
fdivr
fist
sahf
(bad)
(bad)
(bad)
(bad)
jns
push
or
cmps
fs
stc
repz
int
mov
fldcw
jno
fsubp
daa
(bad)
in
sbb
sar
dec
loop
(bad)
fs
adc
dec
test
(bad)
mov
push
ret
adc
fnsave
sub
jmp
in
cli
mov
aad
add
out
fbld
mov
movs
mov
xchg
pop
mov
rcr
xchg
fsubr
ss
dec
push
int
sbb
xchg
cmp
cmc
(bad)
(bad)
call
adc
call
dec
jecxz
test
iret
or
and
aas
daa
(bad)
(bad)
call
inc
lods
add
jle
adc
or
icebp
out
xchg
fs
or
cmc
xchg
mov
movs
ds
(bad)
(bad)
fisubr
add
arpl
jge
push
sti
rep
(bad)
pop
(bad)
push
cld
call
jle
sahf
inc
inc
mov
les
daa
or
popa
mov
dec
jmp
in
push
mov
mov
inc
fsub
adc
stos
cmps
aaa
sub
loopne
(bad)
(bad)
jmp
push
cmp
mov
call
mov
xchg
or
(bad)
(bad)
jmp
add
mov
push
sti
add
psubq
daa
push
and
(bad)
fbstp
dec
out
leave
ret
popa
mov
adc
jo
jp
jp
(bad)
call
dec
out
fs
push
add
push
cli
inc
call
or
das
cld
add
dec
xlat
lea
shl
jle
dec
(bad)
(bad)
(bad)
cmp
mov
xor
jmp
sbb
xchg
ror
inc
add
mov
nop
hlt
(bad)
(bad)
jmp
mov
mov
dec
ja
xor
shl
xchg
adc
(bad)
(bad)
les
add
stos
jbe
in
xor
(bad)
lea
imul
xchg
mov
jnp
(bad)
(bad)
(bad)
push
fsub
lahf
es
stos
adc
fcomp
fwait
cdq
xor
mov
xchg
xchg
xor
fistp
cli
dec
cmc
outs
push
test
pusha
jp
ror
add
pop
rol
stos
frstor
dec
bnd
into
dec
(bad)
jmp
sbb
sub
mov
shl
xchg
jnp
jmp
sbb
push
lock
dec
xchg
xchg
inc
fimul
push
adc
mov
iret
or
aas
mov
xchg
xchg
out
movs
imul
(bad)
into
outs
neg
(bad)
(bad)
push
imul
ficom
add
adc
and
imul
test
or
pushf
arpl
(bad)
dec
jecxz
movs
leave
call
xchg
stos
sbb
hlt
xor
(bad)
(bad)
inc
gs
out
icebp
scas
xchg
adc
cmp
sbb
out
add
inc
(bad)
jnp
dec
push
push
mov
mov
retf
mov
imul
out
(bad)
push
inc
pop
mov
popa
test
push
mov
(bad)
jmp
add
add
retf
mov
jmp
mov
aas
cld
fist
int3
xor
pusha
mov
test
int3
add
call
pop
mov
fwait
adc
xor
pop
dec
inc
out
stos
sbb
add
(bad)
(bad)
(bad)
mov
aam
mov
adc
inc
jmp
scas
and
dec
inc
in
xor
xchg
aaa
leave
(bad)
inc
ins
js
or
add
jmp
jg
(bad)
inc
jg
out
pop
js
dec
jmp
stos
ins
cld
pop
popa
or
inc
sbb
cmps
xor
popa
mov
jmp
imul
inc
sar
(bad)
out
push
sahf
inc
shl
or
arpl
test
inc
(bad)
adc
cmps
sbb
mov
idiv
cmc
pop
fs
cs
xor
daa
gs
daa
imul
lock
(bad)
(bad)
jp
mov
nop
xchg
push
out
and
leave
xor
jb
in
cmp
jmp
mov
(bad)
push
dec
mov
mov
mov
mov
sbb
cmp
js
mov
arpl
sbb
jmp
shl
sbb
ds
lock
test
ror
sbb
jecxz
leave
(bad)
push
mov
push
icebp
outs
js
or
(bad)
(bad)
(bad)
mov
mov
test
xor
or
dec
(bad)
sti
cmps
(bad)
or
mov
or
jmp
cmps
or
ja
inc
add
inc
cmp
cmp
cdq
es
and
xor
(bad)
call
jo
mov
push
lods
jle
sub
out
lea
add
adc
mov
in
(bad)
(bad)
(bad)
call
aaa
repnz
mov
pop
aaa
or
mov
dec
cmp
pushf
or
or
jecxz
pushf
push
mov
(bad)
(bad)
(bad)
push
pop
cmp
sub
fcom
popa
xor
inc
in
adc
neg
push
out
ins
push
jb
mov
lds
mov
cmp
(bad)
inc
outs
xchg
jge
push
in
ins
mov
sub
(bad)
(bad)
dec
mov
cli
jecxz
push
test
push
sbb
or
sub
(bad)
jmp
sahf
(bad)
inc
aaa
cli
fwait
sar
test
dec
aaa
(bad)
nop
and
mov
mov
mov
sahf
mov
jne
out
(bad)
jl
adc
mov
push
mov
ss
mov
aas
loop
js
push
or
or
loop
xor
outs
cli
sahf
sub
mov
xlat
fcmovbe
cmp
es
dec
ror
dec
ss
add
pop
cmp
in
idiv
mov
(bad)
(bad)
call
jge
loope
mov
dec
out
inc
movs
sub
sbb
bound
popa
cs
icebp
(bad)
(bad)
jg
fstp
ins
pop
mov
pop
std
mov
mov
popf
adc
sti
in
sub
jmp
jo
and
movs
xlat
popa
and
hlt
sbb
mov
out
or
(bad)
(bad)
(bad)
jmp
into
sbb
or
jg
repz
out
out
mov
and
cmp
or
add
adc
and
adc
in
repz
(bad)
jmp
les
adc
dec
daa
jecxz
dec
push
xchg
jl
mov
adc
jae
sub
ret
popa
inc
(bad)
dec
dec
imul
sbb
and
(bad)
call
repnz
stos
(bad)
inc
cld
mov
xchg
mov
call
mov
jb
and
sub
and
pop
fdivrp
xor
fild
dec
jmp
xor
xor
(bad)
(bad)
(bad)
inc
loop
xor
cmp
lahf
or
stos
push
xchg
retf
cs
(bad)
(bad)
(bad)
jmp
push
inc
jo
cwde
out
ss
das
iret
dec
test
jecxz
out
imul
mov
cmp
sub
inc
(bad)
jp
ins
daa
sbb
into
or
xchg
jmp
fidiv
loop
(bad)
popa
shl
lock
inc
je
mov
fstp
mov
push
adc
add
dec
add
loope
sbb
(bad)
(bad)
mov
in
and
adc
fs
sub
pop
retf
cld
push
loop
jbe
or
lock
(bad)
dec
xor
adc
xor
push
call
fidivr
(bad)
(bad)
call
or
xor
imul
fcomp
sar
(bad)
push
(bad)
mov
shl
mov
(bad)
call
fwait
stos
mov
sbb
dec
push
push
push
pop
rcr
jmp
aaa
sub
je
out
cli
mov
stos
jne
dec
jnp
push
jns
inc
out
sbb
dec
aad
aam
(bad)
(bad)
push
es
dec
or
ret
xor
movs
jl
push
test
jnp
and
xor
jnp
(bad)
(bad)
jmp
jp
test
ins
and
daa
and
je
xchg
stc
sub
(bad)
repnz
adc
dec
inc
xchg
dec
or
jbe
inc
xchg
fwait
ins
loope
retf
ins
test
ss
push
(bad)
(bad)
(bad)
(bad)
(bad)
mov
in
mov
add
inc
pop
pop
sbb
gs
test
lds
push
fnsave
(bad)
call
int
pop
scas
xchg
shl
iret
loop
or
push
push
sub
jle
add
sti
pop
push
or
xchg
push
test
popa
mov
mov
cmp
movs
dec
and
(bad)
dec
idiv
dec
pop
ret
dec
cmp
lock
inc
cmps
pop
push
sbb
int3
cli
add
loop
mov
into
enter
(bad)
(bad)
(bad)
fisttp
call
sbb
es
inc
aaa
sbb
sub
fnsave
push
mov
lock
lods
mov
jge
xor
(bad)
(bad)
call
add
sbb
mov
dec
mov
cli
in
cli
lea
jbe
inc
cld
push
and
(bad)
(bad)
(bad)
cli
fsub
fdiv
daa
int3
das
dec
lods
nop
pop
repnz
int3
mov
js
in
jg
gs
sub
clc
jg
inc
add
dec
or
push
and
mov
xchg
add
aaa
lahf
xchg
sub
addr16
nop
clc
inc
inc
pushf
cmps
sbb
clc
and
clc
and
aam
mov
adc
mov
call
call
scas
fcmovnb
outs
cmp
jp
cdq
dec
int
jg
jno
pusha
push
pop
out
xchg
and
cli
dec
icebp
ins
push
shl
pop
fld
dec
adc
(bad)
inc
movs
rcl
dec
or
int3
xchg
in
xor
(bad)
(bad)
mov
jle
xlat
(bad)
jle
mov
ins
jns
push
pop
ret
push
sbb
sahf
dec
pop
and
sub
inc
test
pop
mov
call
mov
adc
imul
fst
addr16
outs
out
pop
mov
pop
aaa
sbb
sub
in
sbb
into
neg
mov
and
cmp
data16
jb
add
add
jmp
rcr
xor
cwde
movs
push
(bad)
cmp
jle
(bad)
(bad)
push
ins
xor
mov
dec
popa
into
dec
cmps
jmp
add
mov
adc
pushf
inc
loopne
and
dec
cmp
out
add
ss
pop
gs
xchg
into
jecxz
loopne
pop
cmc
jmp
lea
fs
push
pop
or
popf
mov
(bad)
(bad)
(bad)
mov
enter
pop
sar
(bad)
or
lock
out
inc
push
and
dec
mov
out
jg
(bad)
(bad)
dec
jmp
js
iret
test
sub
cmc
pop
push
adc
dec
pusha
push
add
push
jnp
outs
stos
adc
adc
dec
lea
or
jmp
jg
test
nop
xchg
retf
jg
mov
push
mov
push
mov
in
retf
out
cli
dec
jmp
rol
or
jmp
pop
ja
(bad)
(bad)
fcom
enter
(bad)
(bad)
(bad)
in
lds
cmp
adc
push
sbb
dec
cmp
jp
add
mov
fild
(bad)
(bad)
(bad)
cmp
stos
sbb
cwde
push
mov
popa
fisubr
xor
push
or
jg
lods
sbb
(bad)
call
in
or
clc
into
ja
push
out
shl
in
js
out
std
push
dec
dec
icebp
(bad)
(bad)
(bad)
call
cld
jl
test
and
idiv
pop
mov
jnp
mov
push
outs
inc
or
repnz
(bad)
call
lods
scas
xor
jb
and
pop
outs
inc
into
das
imul
cld
cli
xor
pushf
inc
pop
jns
sar
out
mov
mov
add
stc
js
and
test
shr
cmp
mov
imul
cs
push
and
(bad)
mov
push
jmp
lock
neg
sbb
push
std
mov
lea
lock
cmp
rcl
out
(bad)
jmp
mov
int3
js
mov
jnp
cld
pop
pop
ins
dec
lods
js
clc
(bad)
jmp
cmp
mov
fsubrp
add
aas
xchg
adc
popf
(bad)
jmp
xchg
mov
inc
mov
sub
(bad)
(bad)
jmp
rcl
ins
pop
pop
popa
bound
repz
mov
fimul
retf
push
sbb
mov
ja
shl
test
dec
xor
(bad)
jmp
fnsave
cmp
xchg
push
inc
(bad)
jle
pop
dec
arpl
(bad)
(bad)
dec
jno
fistp
push
adc
(bad)
(bad)
mov
es
or
xor
or
gs
(bad)
push
sbb
lods
shr
cmps
fdiv
mov
test
fs
jge
mov
or
ficom
and
pop
mov
jle
adc
xor
(bad)
(bad)
(bad)
mov
mov
push
popa
mov
ins
repz
mov
ret
sbb
(bad)
std
(bad)
(bad)
(bad)
jmp
sbb
fadd
dec
sub
mov
pop
mov
mov
pop
out
rol
ds
setns
(bad)
(bad)
dec
test
and
jmp
mov
sub
sbb
and
mov
setae
sar
dec
mul
add
bound
outs
mov
add
adc
xor
gs
(bad)
call
pop
pop
cmp
movs
push
xor
test
sbb
dec
nop
mov
call
movs
stos
pop
add
jns
dec
js
scas
xchg
adc
imul
inc
inc
(bad)
mov
lods
retf
stos
loopne
adc
sbb
outs
pusha
(bad)
push
popf
push
mov
jge
(bad)
(bad)
dec
or
stos
ja
sub
sub
(bad)
fcmovne
xchg
out
loop
push
mov
jmp
add
in
xchg
mov
push
jae
xchg
gs
mov
cmps
add
fist
adc
test
(bad)
cs
adc
ins
and
minps
loop
add
inc
shr
add
ret
dec
jge
mov
adc
cmp
push
(bad)
(bad)
(bad)
call
lods
and
out
lods
js
das
mov
test
loope
adc
add
xor
(bad)
(bad)
(bad)
aas
pop
xor
sub
pop
neg
fistp
push
imul
iret
inc
mov
in
fwait
(bad)
pop
dec
dec
je
call
sbb
lea
and
pop
push
jno
sbb
add
push
inc
std
add
aam
dec
sti
inc
jmp
and
jb
(bad)
jns
adc
fbld
jb
mov
out
shl
inc
sahf
imul
push
jae
dec
or
push
cmps
ss
jmp
mov
hlt
add
fstp
mov
(bad)
(bad)
push
mov
pop
jmp
cmc
cs
push
inc
xchg
loop
push
push
hlt
sub
and
stos
or
(bad)
jmp
pavgb
(bad)
sub
mov
test
add
jp
sbb
jg
(bad)
(bad)
call
in
pop
push
loopne
std
movs
repz
leave
(bad)
dec
aad
cmps
lock
or
mov
or
jle
(bad)
(bad)
jmp
sub
into
jecxz
aas
les
shl
mov
and
jle
(bad)
call
pop
dec
adc
fnclex
sub
dec
in
call
je
(bad)
(bad)
dec
es
push
sbb
add
and
pop
cdq
mov
add
(bad)
(bad)
(bad)
call
xor
pop
jne
push
or
lock
xchg
xchg
inc
sbb
push
mov
icebp
mov
pop
mov
(bad)
(bad)
call
mov
sub
pop
adc
fwait
sahf
daa
inc
and
xchg
pop
adc
icebp
inc
xchg
jl
jle
mov
es
adc
pop
push
mov
sub
jne
jno
adc
cs
movs
rcl
jo
add
or
js
outs
movs
push
mov
inc
adc
jne
iret
mov
fidiv
pushf
fisubr
inc
cmp
lahf
in
and
add
loop
push
inc
jp
loope
or
mov
mov
xchg
add
add
add
jns
int
rcr
pop
(bad)
(bad)
jg
loopne
push
out
adc
mov
mov
jae
in
inc
test
push
mov
out
(bad)
(bad)
(bad)
push
stos
pop
xor
sub
push
(bad)
mov
lahf
pop
sahf
lock
test
or
(bad)
(bad)
mov
inc
pop
or
jnp
cmps
outs
mov
into
movs
(bad)
(bad)
(bad)
push
push
scas
mov
xchg
pop
jge
retf
cdq
dec
pusha
out
xchg
js
xchg
cmp
push
cli
(bad)
(bad)
call
mov
pop
dec
ss
add
add
daa
xor
stos
adc
or
xchg
jns
cmp
out
inc
in
out
daa
mov
mov
add
xor
mov
sub
mov
imul
jl
(bad)
es
dec
add
and
ins
sbb
jg
mov
inc
imul
mov
push
adc
(bad)
jg
inc
in
(bad)
aaa
fcomp
mov
int3
jecxz
outs
(bad)
mov
add
adc
scas
repz
jns
(bad)
(bad)
(bad)
jp
mov
pop
sub
jp
inc
es
and
daa
add
repz
push
jmp
ror
cmp
inc
sub
jbe
fstp
call
lds
rol
mov
xchg
push
lock
sub
mov
adc
jae
sub
dec
stos
scas
icebp
mov
sub
inc
lds
test
mov
mov
jg
out
sbb
push
inc
test
xchg
aaa
or
(bad)
ficomp
mov
dec
in
push
mov
mov
mov
adc
and
xlat
cmp
call
(bad)
rol
adc
push
mul
sbb
outs
cmp
mov
mov
inc
call
jbe
ss
adc
sbb
(bad)
(bad)
push
cmp
jg
dec
lods
sbb
push
idiv
pop
mov
rcr
cwde
pop
pop
sti
inc
(bad)
(bad)
jmp
repnz
aad
addr16
adc
mov
jle
fcmovbe
loop
(bad)
dec
push
push
fs
test
xchg
mov
push
inc
ret
(bad)
inc
xchg
xchg
iret
cwde
std
nop
or
or
inc
add
jne
pop
fcos
(bad)
(bad)
(bad)
std
and
push
dec
dec
xor
sub
sbb
xchg
or
cmp
data16
arpl
pop
hlt
jo
outs
inc
(bad)
sub
sbb
(bad)
jmp
jmp
mov
in
cmc
arpl
call
(bad)
call
lock
pop
dec
adc
cmp
(bad)
mov
ins
mov
sar
(bad)
(bad)
(bad)
inc
popa
movs
fwait
mov
sub
std
push
mov
nop
adc
sub
xor
xchg
(bad)
(bad)
(bad)
jmp
(bad)
dec
dec
loop
cmp
or
je
cmps
leave
dec
push
adc
and
into
or
pop
hlt
scas
clc
inc
sbb
enter
out
inc
jge
sub
add
gs
(bad)
cli
(bad)
call
cs
push
icebp
(bad)
jl
pushf
in
jge
or
pop
mov
push
and
cmp
push
and
push
inc
aad
faddp
push
(bad)
(bad)
(bad)
push
dec
xchg
cmc
into
pop
mov
inc
xor
sbb
xor
add
ret
(bad)
(bad)
(bad)
inc
dec
or
aam
push
inc
jne
push
rol
rol
jg
pop
(bad)
(bad)
fistp
js
and
lods
mov
jp
mov
(bad)
rol
call
add
minps
pushf
pop
repz
and
inc
rol
stos
gs
cmp
xchg
dec
hlt
std
push
cmps
jp
push
lahf
aad
push
push
inc
nop
cs
dec
int3
and
and
and
adc
shr
pop
fld
push
stc
iret
mov
les
push
or
jg
fistp
scas
call
retf
mov
sti
test
stos
call
sbb
popf
fcomp
pop
push
cwde
mov
icebp
pusha
mov
shl
xchg
cmc
push
xchg
(bad)
push
outs
mov
out
aam
adc
lahf
(bad)
int
(bad)
(bad)
jmp
fwait
adc
outs
jbe
addr16
cmp
inc
ret
dec
push
fs
test
mov
stos
xchg
lods
jno
mov
cld
(bad)
inc
pop
add
call
sub
fst
fnstenv
(bad)
(bad)
(bad)
dec
dec
clc
pushf
outs
adc
inc
or
pop
jmp
retf
mov
mov
xchg
inc
clc
pop
pusha
sti
shr
sbb
sbb
jmp
jmp
(bad)
jmp
cmp
mov
add
pusha
dec
leave
or
in
(bad)
(bad)
call
xor
xchg
push
push
jl
jl
adc
inc
cmp
fwait
pop
dec
lds
jae
outs
ret
fnop
(bad)
(bad)
out
cmp
mov
dec
scas
xor
in
(bad)
(bad)
push
xchg
(bad)
xchg
pop
mov
dec
mov
rcl
fistp
enter
(bad)
(bad)
(bad)
inc
sub
add
call
test
rcl
mov
call
(bad)
(bad)
(bad)
jmp
xor
shl
sub
lods
mov
ins
mov
gs
stc
and
mov
ins
out
cli
lea
(bad)
(bad)
fistp
js
xchg
push
popa
mov
les
(bad)
int3
or
xor
fistp
mov
dec
mov
(bad)
(bad)
mov
(bad)
jmp
hlt
or
push
push
sub
clc
retf
xchg
mov
cld
aad
jge
jg
mov
pop
sahf
loop
sbb
loope
jg
inc
xchg
pop
sub
mov
sub
dec
cmp
gs
xchg
cmp
scas
cmp
rol
adc
dec
(bad)
dec
cld
adc
inc
out
mov
dec
xchg
cmps
push
jmp
sub
mov
bound
or
xor
call
repnz
dec
add
mov
movs
movs
sar
bound
fwait
dec
push
mov
jno
call
ds
(bad)
jmp
pusha
(bad)
push
mov
xor
ret
fsubr
push
cmp
jbe
(bad)
jg
movs
cdq
fs
iret
(bad)
pushf
cdq
push
sub
sub
jo
call
loopne
ret
sbb
popa
cmp
movs
sub
add
test
cmp
and
and
je
das
add
mov
ins
ret
dec
lods
adc
(bad)
(bad)
(bad)
cld
add
retf
iret
jge
mov
pop
(bad)
scas
retf
fisubr
xlat
repnz
mov
into
imul
xchg
jb
aas
js
test
repz
sbb
mov
(bad)
repz
popf
je
inc
dec
imul
(bad)
fisub
call
sub
push
cs
rol
mov
mov
(bad)
call
mov
jnp
pcmpeqw
fstp
inc
call
ret
js
dec
sahf
mov
dec
pop
mov
pop
or
xlat
jle
(bad)
scas
into
dec
stos
cmc
inc
ins
std
and
movs
leave
jmp
fadd
(bad)
call
jmp
sub
mov
dec
jg
mov
xchg
add
loopne
pusha
sbb
jg
push
loope
int3
and
scas
sub
or
rcl
jne
and
mov
mov
jmp
dec
push
sub
jl
shl
pop
loopne
(bad)
dec
xchg
lahf
mov
add
pop
loope
mov
(bad)
(bad)
jmp
gs
jns
mov
es
lock
mov
(bad)
je
sbb
into
jl
jnp
idiv
(bad)
dec
mov
or
popf
std
pusha
mul
loop
ror
sub
clc
(bad)
(bad)
push
fstp
pop
rol
xchg
cdq
inc
mov
push
outs
add
idiv
mov
aam
clc
jmp
xchg
jge
jecxz
aam
iret
dec
pop
xchg
push
into
(bad)
jmp
adc
sbb
mov
stos
repz
inc
cmp
pop
lods
(bad)
(bad)
(bad)
dec
fmul
sar
adc
push
call
aas
sbb
test
(bad)
adc
xor
(bad)
push
sti
retf
fnstsw
sahf
mov
mov
sar
xor
xor
retf
push
jae
cmp
scas
imul
dec
xor
mov
jmp
mov
loopne
xor
mov
mov
inc
cmp
cmp
iret
jle
hlt
xor
dec
lods
call
sbb
inc
cld
sbb
(bad)
jmp
das
or
inc
nop
cmp
xor
mov
push
ud0
(bad)
jmp
mov
fldcw
push
(bad)
pop
(bad)
cli
mov
(bad)
xchg
icebp
xchg
arpl
push
(bad)
(bad)
(bad)
dec
mov
inc
les
pusha
sbb
dec
sbb
out
mov
std
call
(bad)
jmp
pop
hlt
sti
out
push
add
in
out
mov
repnz
loop
mov
pushf
jb
pop
mov
add
inc
out
gs
retf
fs
mov
mov
pop
std
(bad)
mov
call
ficom
jae
push
pop
movs
jle
rcl
adc
and
stos
scas
xchg
push
ds
sbb
push
xchg
das
jns
xchg
std
mov
xor
lods
cld
(bad)
(bad)
jmp
movs
or
fldcw
cmp
(bad)
inc
dec
test
mov
mov
es
jle
inc
cwde
in
scas
cmp
stos
add
cs
push
in
sub
xor
ins
xor
gs
sub
int3
and
adc
jnp
ffree
jno
inc
bound
or
(bad)
(bad)
jmp
retf
sbb
push
loop
ret
in
or
in
aas
rol
loop
sub
jo
loop
(bad)
(bad)
push
xchg
(bad)
mov
fld
and
into
mov
mov
in
ss
das
mov
sub
xchg
rol
xchg
xor
rcl
xchg
out
test
(bad)
(bad)
call
jne
cs
adc
push
mov
adc
retf
(bad)
sub
jne
mov
sbb
mov
jb
push
and
pop
inc
mov
and
mov
or
inc
outs
imul
(bad)
(bad)
call
lahf
dec
int3
add
cmps
and
mov
out
lods
pop
or
mov
loop
cmp
pop
retf
retf
(bad)
push
enter
jg
xchg
sub
mov
dec
mov
(bad)
out
dec
mov
imul
cld
aam
cld
out
bound
push
jbe
mov
into
jo
inc
and
jp
ret
dec
xor
push
mov
add
icebp
in
sbb
mov
push
outs
xchg
and
inc
and
out
neg
dec
xchg
out
(bad)
(bad)
(bad)
(bad)
jmp
mov
getsec
ret
dec
pop
scas
sbb
iret
cwde
or
ds
out
lock
(bad)
call
sbb
or
(bad)
out
ret
add
push
xor
je
sbb
mov
mov
pop
(bad)
(bad)
(bad)
mov
test
cdq
scas
sti
and
or
leave
aaa
or
jg
mov
cmp
inc
cs
xlat
inc
cmp
sbb
hlt
dec
xor
push
jmp
adc
sub
(bad)
(bad)
(bad)
inc
(bad)
jae
out
xlat
sar
and
adc
lahf
stos
inc
pop
inc
cmp
adc
inc
mov
(bad)
jmp
xor
dec
mov
pop
outs
inc
stos
aad
sbb
cwde
(bad)
(bad)
(bad)
jmp
(bad)
int
call
outs
jmp
jl
cmp
retf
push
in
in
mov
ds
add
(bad)
(bad)
(bad)
call
xlat
in
scas
addr16
inc
ror
jp
mov
jb
push
push
xchg
sbb
push
sub
pusha
in
push
jne
dec
(bad)
push
xor
adc
sub
xor
jmp
xchg
into
and
inc
scas
pop
(bad)
(bad)
mov
in
enter
das
idiv
pusha
out
call
shl
fucomi
shr
call
jmp
fsubr
xlat
push
std
mov
or
and
mov
call
push
xchg
pushf
inc
cdq
and
push
addr16
jb
fdivrp
inc
xor
(bad)
jmp
cli
mov
push
mov
icebp
push
adc
xchg
fwait
jbe
repnz
lea
xor
cmp
in
or
(bad)
call
adc
lods
(bad)
and
(bad)
shl
cs
add
inc
mov
dec
inc
push
push
fwait
mov
dec
mov
mov
inc
fwait
fwait
ins
(bad)
mov
(bad)
(bad)
(bad)
jmp
mov
push
sub
cmp
sbb
mov
popf
popf
(bad)
pushf
xchg
jl
fldenv
push
push
add
nop
xor
sahf
mov
or
jg
push
hlt
jl
push
sub
rcr
add
(bad)
(bad)
dec
leave
fidiv
(bad)
cli
xchg
lock
(bad)
scas
inc
pop
pusha
pop
sbb
xchg
xchg
or
push
in
bound
ficom
out
(bad)
(bad)
(bad)
jmp
push
add
in
out
jmp
addr16
rcl
push
test
add
push
call
aas
dec
out
jo
nop
sub
(bad)
sbb
mov
push
adc
xor
mov
cld
mov
or
jecxz
icebp
(bad)
call
sbb
loop
(bad)
xor
inc
and
sbb
or
(bad)
(bad)
(bad)
(bad)
in
in
iret
add
(bad)
test
push
(bad)
and
(bad)
movs
push
jb
(bad)
sbb
mov
add
js
mov
(bad)
(bad)
(bad)
jmp
mov
fdiv
neg
aam
test
mov
ret
mov
(bad)
(bad)
push
jp
cld
xchg
stc
mov
int
pushf
or
jecxz
mov
sti
sbb
(bad)
(bad)
call
icebp
iret
adc
(bad)
mov
retf
mov
jmp
mov
(bad)
(bad)
jmp
nop
lods
push
les
and
out
and
test
jae
aaa
(bad)
(bad)
(bad)
jmp
cmps
sub
sbb
call
cdq
mov
test
push
xchg
xor
fwait
jmp
(bad)
clc
xor
or
mov
pop
push
pop
pop
xor
mov
mov
clc
mov
in
bound
jnp
(bad)
mov
nop
fistp
cmc
mov
push
stos
das
add
std
jnp
jnp
xchg
push
pop
xor
(bad)
(bad)
inc
shl
addr16
push
test
loopne
mov
mov
fsubr
jp
loop
(bad)
(bad)
(bad)
jmp
sti
adc
adc
es
lods
or
in
ret
mov
or
lods
cwde
retf
mov
push
cld
inc
adc
inc
mov
xor
xchg
and
(bad)
(bad)
(bad)
jmp
dec
sbb
cmp
or
int
int3
fisub
inc
lahf
repz
lods
adc
push
push
sbb
push
pop
call
jecxz
sub
(bad)
(bad)
(bad)
call
sub
loope
or
mov
xor
in
sub
add
push
in
nop
(bad)
(bad)
(bad)
(bad)
jmp
ins
inc
data16
inc
bnd
push
scas
and
sub
xor
out
add
inc
movs
pop
xor
shl
(bad)
jmp
xor
ins
test
dec
int3
inc
stos
cli
ins
inc
dec
(bad)
mov
das
outs
dec
gs
adc
mov
adc
and
in
push
retf
sub
jb
xchg
fiadd
outs
je
pop
mov
(bad)
push
inc
icebp
add
shr
cmp
dec
mov
movs
bound
lods
xchg
and
and
dec
dec
lds
sub
add
retf
sub
(bad)
(bad)
push
ret
inc
imul
(bad)
hlt
jae
cmp
in
xchg
ss
ror
jne
in
mov
cli
(bad)
(bad)
(bad)
(bad)
cmp
loop
and
das
mov
mov
stos
pop
push
aad
loop
mov
cmp
mov
pop
test
das
xchg
hlt
adc
call
fwait
cmp
xchg
(bad)
(bad)
(bad)
(bad)
fstp
cmp
or
lods
mov
push
fisub
scas
xor
and
cmc
or
(bad)
inc
sar
ins
cdq
push
repz
outs
inc
sub
sub
int3
add
(bad)
(bad)
fsubrp
pop
fstp
lods
loop
int3
mul
sub
xor
mov
dec
dec
pop
add
sbb
sub
nop
push
into
jb
xchg
lahf
or
push
push
lock
mov
and
retf
cli
dec
mov
in
inc
mov
mov
(bad)
(bad)
jmp
mov
mov
movs
adc
jns
push
fs
inc
retf
pop
jnp
adc
(bad)
call
in
push
mov
sahf
adc
fimul
stos
int3
ds
fadd
pop
mov
stos
dec
xchg
and
or
jmp
addr16
repz
adc
(bad)
jg
pop
sbb
(bad)
dec
mov
cmp
in
imul
xor
jge
loopne
test
(bad)
(bad)
(bad)
call
cmp
test
ret
imul
push
fs
cs
pop
sub
(bad)
(bad)
dec
add
out
and
mov
pop
jl
pop
jns
inc
jnp
add
(bad)
(bad)
es
inc
cld
fwait
pop
test
or
fcmovu
movs
(bad)
(bad)
(bad)
call
add
out
maskmovq
imul
rol
and
mov
add
sbb
(bad)
mov
call
loop
add
sahf
jnp
sub
mov
(bad)
dec
daa
int3
gs
lahf
add
xor
test
pop
mov
fbld
fdivr
shl
jecxz
call
mov
add
loop
clc
push
pop
cmp
jmp
(bad)
(bad)
jmp
lock
stos
push
icebp
(bad)
dec
cli
(bad)
sub
and
es
not
outs
jl
sbb
(bad)
in
or
loop
int
(bad)
(bad)
inc
imul
es
int3
dec
lods
mov
or
mov
(bad)
(bad)
dec
cli
xchg
add
sbb
shr
push
and
sbb
add
in
dec
dec
xor
call
and
jp
je
xor
sub
fucomi
jle
mov
fst
mov
call
mov
or
pop
fsub
rcr
cmp
add
mov
add
std
(bad)
(bad)
(bad)
mov
jns
adc
sti
ret
(bad)
cmp
fsub
xor
fdivr
pop
js
jns
cs
xchg
dec
(bad)
(bad)
(bad)
call
fwait
mov
sub
push
sub
out
stos
jbe
sub
sub
(bad)
cld
xor
lea
or
mov
shl
sub
pusha
icebp
sub
arpl
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
call
les
(bad)
test
jnp
mov
jle
cmp
retf
jmp
xchg
nop
(bad)
(bad)
inc
outs
ret
lods
push
(bad)
mov
outs
movs
outs
push
adc
(bad)
(bad)
mov
stos
add
ds
fst
call
sti
pop
leave
daa
mov
mov
(bad)
call
stc
xchg
dec
xchg
xchg
or
popa
xchg
xchg
aam
add
es
dec
jp
(bad)
(bad)
dec
xlat
shr
int3
lahf
ins
cwde
popa
pusha
xlat
int3
inc
ja
mov
ror
mov
add
aam
mov
push
push
cmp
movs
inc
inc
adc
dec
cld
(bad)
jmp
push
jae
mov
adc
repz
(bad)
(bad)
jg
ins
sub
mov
pop
aas
dec
mov
and
adc
pop
xor
dec
xor
xor
fs
imul
jno
or
xchg
cmp
(bad)
call
adc
dec
mov
(bad)
in
fdiv
mov
cmc
daa
ja
call
fdiv
adc
movs
stos
nop
ret
xor
or
cmp
(bad)
mov
dec
mov
loop
fwait
and
sbb
adc
jnp
pop
sub
(bad)
(bad)
dec
rcr
aaa
mov
cdq
imul
inc
test
dec
in
fwait
or
cs
(bad)
(bad)
jmp
lea
popf
xor
imul
retf
xor
jmp
(bad)
mov
(bad)
(bad)
push
in
sbb
out
call
gs
pop
or
inc
stos
xor
int
fbstp
(bad)
(bad)
call
or
mov
mov
and
mov
mov
dec
bnd
cld
(bad)
jmp
loopne
add
pop
mov
mov
ins
or
call
cmp
dec
inc
sbb
jle
or
f2xm1
in
add
sub
les
cmc
fsubr
in
imul
iret
inc
ss
dec
imul
pop
dec
push
mov
hlt
call
leave
jge
jmp
fcom
hlt
pop
popa
in
mov
aam
mov
stos
cmp
or
faddp
sahf
add
and
mov
(bad)
push
cld
xchg
int
add
push
or
sub
cmp
mov
gs
call
nop
mov
mov
call
adc
or
aaa
cld
aas
sub
inc
jae
xor
bound
pushf
cmc
jo
bswap
loope
or
call
std
adc
pushf
dec
adc
lods
enter
add
and
pop
or
pushf
mov
rol
ficom
sbb
(bad)
(bad)
dec
push
xor
push
lods
pop
dec
retf
cmps
pop
cmp
cmps
cmp
xor
(bad)
(bad)
inc
mov
push
data16
mov
test
push
jo
in
imul
hlt
(bad)
call
sar
in
pushf
and
jno
ins
int
sbb
(bad)
xchg
jg
jmp
pusha
lock
adc
dec
in
xor
or
mov
into
or
(bad)
(bad)
(bad)
jmp
cmp
test
rol
int3
push
push
dec
aam
jne
ret
xor
cmc
xlat
test
adc
pop
mov
adc
mov
fs
mov
xor
sub
mov
mov
dec
(bad)
imul
push
sub
js
retf
cwde
mov
(bad)
(bad)
jmp
or
pushf
mov
mov
ucomiss
mov
sbb
(bad)
(bad)
(bad)
call
(bad)
mov
loope
ret
xchg
pop
nop
mov
jg
loop
aas
imul
inc
dec
inc
mov
aas
std
(bad)
jmp
mov
mov
mov
inc
xchg
adc
(bad)
lods
pusha
xor
sahf
pop
jmp
inc
mov
push
sar
call
pop
dec
das
dec
outs
mov
stc
pop
das
js
into
sub
cld
dec
pop
stc
xor
xchg
cld
fild
mov
xchg
inc
dec
clc
aam
dec
or
xchg
xchg
inc
mov
dec
je
repnz
(bad)
sub
mov
cmps
(bad)
(bad)
jmp
popa
rcr
retf
imul
mov
sub
or
sbb
stos
or
cld
mov
jecxz
adc
ja
mov
dec
lds
(bad)
(bad)
(bad)
(bad)
jmp
in
push
mov
inc
xor
loope
xchg
mov
push
mov
loopne
xchg
test
ror
fisubr
mov
add
jmp
shl
(bad)
daa
movs
or
ins
push
sbb
xchg
add
mov
mov
test
clc
pop
fsubr
xor
call
(bad)
push
sbb
cdq
sbb
dec
sbb
fs
dec
jae
xor
jns
call
popf
int3
popf
imul
(bad)
(bad)
push
arpl
pop
or
adc
out
bound
xchg
jg
(bad)
mov
shl
adc
mov
mov
pop
sbb
cmp
(bad)
(bad)
dec
popf
les
push
jmp
cmps
in
push
loop
add
jae
mov
xlat
jno
sbb
rcl
sti
jmp
(bad)
call
cmp
fild
mov
cmp
xchg
in
(bad)
dec
ss
inc
sub
fnstsw
fist
jmp
pop
mov
lahf
and
mov
outs
nop
in
addr16
push
dec
pop
xor
test
stc
aad
xchg
rcr
clc
(bad)
inc
jg
in
stos
test
shl
push
fnstsw
pop
push
cmp
xor
loop
(bad)
inc
test
test
jmp
cmp
shr
test
inc
mov
loope
mov
out
(bad)
(bad)
mov
xchg
cmps
xor
aas
or
test
(bad)
(bad)
call
les
push
daa
add
aad
fwait
popf
xchg
ja
movs
add
bound
sbb
dec
sub
(bad)
(bad)
(bad)
call
sub
jecxz
aaa
in
stc
inc
mov
inc
pusha
loopne
xchg
mov
and
dec
(bad)
(bad)
(bad)
jmp
push
and
enter
popa
pop
pop
popa
frstor
pushf
fadd
pop
mov
movs
inc
loope
fsqrt
(bad)
(bad)
push
fisubr
fisub
cwde
int3
xchg
call
add
cli
mov
daa
(bad)
(bad)
jmp
jecxz
adc
test
jbe
je
idiv
clc
ja
repz
jmp
adc
jl
lods
je
xchg
pop
gs
into
cmp
sahf
rcl
loopne
and
pusha
xor
xor
or
repnz
(bad)
(bad)
(bad)
mov
stc
pop
gs
mov
enter
pop
enter
adc
pop
les
in
imul
push
xor
repz
jae
sti
inc
sahf
mov
dec
mov
cmp
or
clc
dec
mov
call
pop
inc
repnz
(bad)
(bad)
jmp
shl
cs
push
fst
inc
xchg
shl
out
inc
cmc
add
and
sahf
push
pop
(bad)
fs
leave
stos
mov
fistp
fisub
cli
imul
cmps
retf
push
xchg
sub
add
nop
cdq
pusha
shl
jle
es
jmp
(bad)
(bad)
jmp
push
xchg
mov
cdq
leave
rcpps
sub
xchg
(bad)
(bad)
jmp
push
sti
push
adc
js
test
cwde
shl
mov
(bad)
(bad)
(bad)
jmp
aad
mov
cld
or
popa
push
xchg
stos
dec
fnsave
cmp
dec
mov
mov
dec
rol
xchg
mov
xchg
loopne
ss
sar
push
adc
jg
pop
sub
pop
add
xchg
mov
aas
(bad)
out
das
stos
cmps
cld
push
jg
jmp
movs
int
repz
(bad)
fld
lock
jne
(bad)
xor
jb
(bad)
(bad)
(bad)
call
adc
(bad)
cmp
(bad)
and
add
xchg
mov
test
jae
arpl
mov
dec
js
js
xor
fisttp
fld
or
sub
hlt
(bad)
call
les
sub
jle
ja
mov
cdq
sub
push
aas
add
clc
(bad)
dec
cmp
loop
ins
fnsave
xor
ss
jmp
push
setbe
pusha
cmps
xor
mov
(bad)
(bad)
push
(bad)
in
or
(bad)
int3
pop
cmps
das
scas
inc
hlt
int3
xor
icebp
mov
out
cmp
loope
(bad)
(bad)
inc
cmp
outs
pop
lods
mov
dec
cmp
xchg
pop
mov
leave
or
and
call
push
mov
dec
call
fld
push
ins
(bad)
fsub
add
fisttp
fcmove
fcmovne
push
call
mov
sub
pop
mov
(bad)
sbb
jae
add
shl
(bad)
loopne
ja
hlt
jmp
push
out
js
ficom
pop
(bad)
sti
push
inc
cmps
hlt
xor
dec
test
fdivr
pusha
mov
(bad)
(bad)
jmp
addr16
fiadd
rcr
fcomp
mov
pop
mov
mov
movs
or
scas
xor
hlt
jmp
retf
push
xchg
cld
lds
adc
in
push
cld
jg
dec
fnstenv
repnz
xchg
push
fdivr
rol
xor
data16
push
adc
pop
mov
js
(bad)
inc
or
hlt
cwde
mov
pop
jo
sti
jbe
adc
jl
mov
mov
cmps
mov
jg
shl
popa
mov
fnsave
sbb
adc
int3
xor
jne
push
mov
jg
jge
dec
pop
sbb
pushf
imul
inc
xor
daa
js
hlt
inc
mov
(bad)
(bad)
(bad)
push
xor
mov
xor
push
movs
jnp
arpl
fldl2t
add
in
adc
cmc
cmp
(bad)
(bad)
(bad)
jmp
sti
sbb
inc
push
pop
jg
or
adc
pushf
in
fld
movs
lock
(bad)
in
ror
pop
add
mov
pop
mov
cs
(bad)
call
hlt
push
shr
sahf
jnp
xchg
xor
daa
xor
sbb
out
mov
dec
mov
cmps
cmc
sbb
int
(bad)
(bad)
xor
cmp
fdiv
retf
dec
sbb
ins
(bad)
(bad)
(bad)
call
sar
xchg
push
into
push
in
pop
xor
xor
movs
xor
jae
mov
fistp
call
jnp
hlt
add
push
clc
in
xchg
in
int3
ret
xor
(bad)
stos
dec
(bad)
iret
sbb
(bad)
(bad)
jmp
pop
add
cwde
sbb
sbb
std
sahf
adc
rol
pop
sub
loop
mov
(bad)
mov
hlt
mov
xor
and
push
pop
cmp
lods
sub
dec
sub
sub
(bad)
(bad)
push
inc
call
push
xor
outs
push
addr16
dec
iret
clc
adc
out
inc
fs
ins
fdivr
int
push
(bad)
(bad)
(bad)
push
test
shl
(bad)
push
jo
sub
inc
adc
inc
ins
imul
add
daa
pop
clc
(bad)
call
push
loope
jge
out
test
push
in
cwde
je
cmc
test
(bad)
jmp
ins
inc
shl
inc
pop
fisub
das
cmp
imul
(bad)
inc
push
dec
retf
into
cwde
push
aad
(bad)
(bad)
in
not
xchg
repnz
aam
and
jle
std
add
(bad)
inc
(bad)
dec
cmp
xchg
lods
aas
in
push
loope
cs
push
dec
jmp
pop
mov
inc
dec
fcmovnu
aaa
xor
mov
dec
or
xor
lea
call
leave
mov
mov
add
out
xor
(bad)
dec
(bad)
adc
mov
ret
(bad)
pop
mov
fild
mov
fdivrp
(bad)
(bad)
dec
cmp
aaa
add
pop
pop
or
dec
(bad)
call
out
adc
ins
pop
nop
mov
(bad)
inc
(bad)
push
jl
push
mov
ret
loopne
sub
sub
inc
sbb
lea
mov
fsub
dec
jg
ret
add
(bad)
(bad)
dec
sbb
shl
push
fmul
mov
pop
pusha
ja
dec
movs
rcr
gs
lea
adc
stos
jl
sbb
cli
aam
mov
or
sbb
in
ret
mov
les
movs
jae
cmp
(bad)
push
mov
imul
jmp
pop
sbb
xlat
inc
ret
(bad)
jg
mov
pusha
xchg
aam
or
fist
push
mov
aas
mov
stos
mov
movs
fisub
fwait
jmp
lea
fiadd
imul
xor
idiv
jle
scas
leave
mov
jne
cmc
mov
and
fcomp
add
pop
or
inc
push
stos
(bad)
sbb
jnp
jge
ret
outs
cdq
dec
lock
aaa
push
(bad)
mov
jae
mov
sbb
xchg
(bad)
or
jbe
xor
(bad)
mul
jno
icebp
adc
out
sub
mov
xor
xor
lea
jg
jmp
fs
push
stc
(bad)
(bad)
(bad)
jmp
or
cmp
ins
sub
push
mov
mov
ror
fstp
and
add
(bad)
(bad)
push
lock
xchg
mov
jno
dec
cmp
neg
pop
rcr
add
(bad)
call
shl
pop
push
xchg
in
repz
xchg
lea
test
(bad)
mov
ja
popa
mov
or
les
pusha
sub
jecxz
(bad)
(bad)
mov
push
js
lock
fs
push
push
push
imul
mov
fsubr
not
(bad)
dec
(bad)
push
cs
or
adc
imul
and
jmp
or
sub
pop
aam
inc
shl
dec
iret
(bad)
(bad)
dec
movs
add
sbb
stos
inc
mov
fwait
cmp
xor
int3
mov
movs
inc
(bad)
(bad)
call
aas
xchg
mov
icebp
mov
jmp
jmp
jmp
pusha
ins
add
cmp
dec
leave
aad
dec
iret
arpl
loopne
add
ins
out
dec
sar
inc
(bad)
(bad)
jg
sti
outs
push
pushf
mov
adc
add
pop
cmp
(bad)
(bad)
(bad)
cmp
jl
(bad)
cs
ins
dec
cmp
cmps
push
xchg
std
cmc
adc
mov
addr16
js
in
jae
jg
add
sahf
dec
jo
push
mov
sub
es
inc
mov
pop
gs
mov
xor
or
jg
(bad)
(bad)
jmp
jb
xor
popa
sub
mov
and
pop
imul
out
pop
retf
sbb
mov
push
imul
aad
cmp
fsubr
push
cdq
mov
mov
(bad)
(bad)
dec
dec
sub
inc
xchg
in
neg
movs
dec
jmp
mov
mov
mov
mov
retf
jg
or
or
push
mov
(bad)
(bad)
(bad)
dec
idiv
call
enter
mov
mov
sbb
push
dec
scas
inc
add
daa
adc
repnz
sub
ins
(bad)
(bad)
(bad)
jmp
xchg
add
imul
int3
ret
ret
pop
ss
or
mov
dec
jb
cmp
adc
fimul
fistp
(bad)
call
lods
jbe
add
push
adc
fadd
(bad)
(bad)
(bad)
(bad)
mov
sub
imul
add
mov
sbb
loop
(bad)
(bad)
jmp
xor
repz
add
cmp
stos
sbb
jecxz
mov
push
or
push
cmp
aas
sar
call
pop
pusha
hlt
cmp
jmp
and
cmc
xor
(bad)
(bad)
dec
xor
mov
pop
retf
adc
mov
mov
push
sar
(bad)
xchg
or
out
inc
sbb
dec
nop
xchg
aas
fwait
jmp
adc
add
mov
adc
call
mov
pop
in
sub
jmp
adc
mov
call
aam
sbb
ja
add
fnstenv
mov
(bad)
jg
xchg
jns
retf
jno
lea
dec
inc
test
ja
pop
pop
pop
cmp
cmps
cmp
adc
cwde
and
fstp
jle
xchg
inc
xor
mov
mov
pminub
es
mov
xchg
mov
dec
xchg
(bad)
(bad)
dec
pusha
(bad)
mov
dec
leave
mov
jmp
retf
daa
xchg
sti
adc
(bad)
jmp
cmp
or
daa
pop
mov
push
pop
mov
mov
pop
mov
mov
(bad)
dec
and
sbb
call
and
call
sub
mov
mov
jae
outs
(bad)
call
retf
pop
mov
scas
add
mov
xor
out
pop
icebp
mov
in
shr
(bad)
cmp
lock
or
mov
inc
lds
ret
inc
pusha
adc
adc
hlt
jmp
cmp
pop
mov
pop
ins
test
(bad)
(bad)
call
push
or
je
pushf
cmps
fadd
lock
call
xchg
push
pop
hlt
mov
sub
inc
fsubr
cwde
pop
pop
lahf
pop
or
aaa
(bad)
call
xchg
test
test
pushf
adc
loope
xchg
mov
(bad)
jmp
pushf
or
loop
push
or
adc
jg
jecxz
fidiv
in
push
out
push
(bad)
call
into
xchg
cmp
add
lahf
loopne
xor
popf
push
imul
call
ja
repz
mov
mov
or
or
or
retf
arpl
mov
outs
sbb
adc
popf
(bad)
(bad)
jmp
and
mov
or
out
mov
(bad)
pusha
inc
test
cld
pop
lock
shl
sbb
pop
add
nop
cmp
sar
clc
(bad)
(bad)
call
push
in
pop
(bad)
repnz
out
cwde
in
and
in
out
call
cld
xchg
mov
add
push
out
rcl
mov
enter
ret
ss
(bad)
jg
bnd
icebp
sahf
mov
rcr
or
xchg
sar
sbb
lahf
(bad)
jle
inc
mov
in
pop
jecxz
(bad)
(bad)
jmp
and
or
repz
push
sub
cli
hlt
inc
inc
xchg
mov
add
sbb
nop
movs
in
pop
or
jmp
sbb
mov
(bad)
jmp
inc
aaa
xor
sbb
mov
(bad)
retf
call
fdiv
inc
jp
hlt
(bad)
dec
adc
xchg
jle
mov
(bad)
rol
mov
clc
add
jb
jne
add
out
int
loop
(bad)
push
fwait
(bad)
jg
or
jnp
mov
popa
mov
add
scas
sbb
and
stos
dec
in
mov
(bad)
sti
rol
sbb
gs
in
std
(bad)
(bad)
push
imul
and
jmp
mov
dec
or
(bad)
cmp
sub
cmp
push
dec
xor
push
dec
pop
mov
inc
xchg
inc
jmp
cs
in
shl
test
idiv
push
test
ins
bound
(bad)
jne
inc
and
call
sub
pop
mov
repnz
pop
(bad)
(bad)
dec
mov
add
cmp
lock
jg
mov
xchg
push
(bad)
(bad)
(bad)
(bad)
cli
dec
cmp
xchg
and
sub
mov
add
dec
fs
push
in
in
pop
(bad)
(bad)
jmp
mov
dec
cmp
jl
movs
jle
cmp
and
(bad)
mov
pushf
jmp
clc
sbb
je
mov
push
or
movs
jecxz
lock
xor
mov
jg
(bad)
xchg
inc
dec
push
ret
leave
(bad)
test
ret
xchg
adc
(bad)
(bad)
(bad)
fistp
outs
jg
pop
mov
sub
dec
aas
dec
fistp
xor
xor
sahf
mov
(bad)
adc
jmp
fadd
lea
adc
fwait
(bad)
xchg
nop
int
jns
lods
fsubp
(bad)
(bad)
jmp
loopne
pop
loope
daa
shl
xchg
ins
mov
adc
fcmovu
imul
fadd
xlat
loop
mul
lea
pop
(bad)
(bad)
jmp
outs
adc
push
push
push
out
sbb
mov
std
dec
adc
add
mov
icebp
(bad)
call
pop
mov
ins
aam
fbstp
fadd
(bad)
fbld
dec
jbe
mov
popa
push
icebp
ja
dec
dec
mov
sbb
nop
cmc
or
mov
(bad)
jmp
lods
sub
push
adc
and
movs
mov
or
xchg
cs
fs
push
(bad)
(bad)
(bad)
(bad)
jmp
ror
out
inc
fistp
mov
jnp
pop
(bad)
cmp
sbb
or
cmp
ja
mov
cmps
pop
sbb
adc
pusha
xor
call
xlat
es
xchg
aam
add
push
jnp
in
xchg
and
pop
(bad)
pop
add
fcom
jg
sahf
push
into
pop
jns
loope
push
pusha
std
fwait
jle
adc
sbb
(bad)
fbstp
inc
inc
sbb
arpl
mov
mov
inc
(bad)
(bad)
(bad)
(bad)
fdiv
xlat
lock
and
dec
(bad)
inc
popa
pop
ss
pop
je
jecxz
push
out
fcomip
scas
mov
fild
inc
add
icebp
movs
mov
(bad)
(bad)
jg
ds
mov
in
dec
cmp
mov
stos
xchg
stc
out
adc
dec
fs
fild
test
arpl
(bad)
sti
mov
jle
pop
mov
(bad)
call
stc
mov
cmc
sbb
call
mov
pop
std
dec
(bad)
cmp
mov
sub
mov
adc
inc
push
xlat
jmp
inc
mov
test
test
mov
mov
cmps
nop
push
test
out
adc
(bad)
(bad)
(bad)
jg
add
imul
cmp
jg
repnz
pop
push
enter
pop
cmps
sbb
push
(bad)
inc
sub
inc
mov
cwde
outs
(bad)
(bad)
(bad)
call
xchg
mov
inc
daa
pushf
cld
push
jno
cdq
stos
shl
dec
imul
jns
mov
imul
push
mov
lods
js
mov
xchg
int3
data16
bound
retf
or
leave
(bad)
(bad)
(bad)
mov
pop
mov
jmp
sbb
popa
sub
pushf
cmps
out
lea
xchg
int3
push
xchg
push
std
mov
push
dec
and
jbe
pop
fcomp
cli
sub
or
mov
and
fprem
jle
mov
add
and
out
lock
push
jl
leave
mov
add
mov
and
cmps
loope
cmp
cld
jmp
je
jl
and
push
adc
aas
repnz
fbld
pop
mov
ficomp
cmp
mov
(bad)
(bad)
(bad)
(bad)
out
fptan
adc
sbb
test
and
(bad)
fadd
push
pop
cmp
retf
mov
mov
fcom
sbb
inc
(bad)
(bad)
(bad)
push
push
xor
fistp
imul
add
fldenv
mov
xchg
imul
cmp
in
aad
or
ror
out
outs
(bad)
adc
(bad)
(bad)
(bad)
push
shl
nop
out
ret
jp
ficom
push
xlat
movs
adc
popa
call
and
aam
jnp
or
in
push
fsub
lds
add
stos
mov
add
in
adc
jmp
mov
arpl
adc
xor
(bad)
in
jmp
jle
xchg
gs
xchg
enter
aad
jle
in
xor
sbb
mov
(bad)
out
clc
loope
test
mov
mov
cmp
add
mov
sbb
fisubr
(bad)
(bad)
(bad)
push
outs
sti
mul
in
xchg
sbb
retf
inc
cmp
stc
inc
push
bound
sti
push
(bad)
(bad)
call
adc
fsubr
xchg
inc
mov
fdiv
es
jge
push
add
(bad)
(bad)
mov
sub
mov
stos
loop
cmps
fwait
xchg
dec
dec
push
push
(bad)
(bad)
jmp
pop
sub
mov
int
sub
adc
not
ret
and
and
(bad)
push
xchg
jb
or
sbb
xor
xor
xlat
out
mov
out
mov
or
(bad)
(bad)
(bad)
out
ds
jae
and
jmp
inc
imul
inc
in
mov
pop
cmp
movs
mov
add
push
popf
adc
xor
dec
xor
out
(bad)
jmp
cwde
mov
fs
jmp
or
jo
xchg
and
add
or
jbe
adc
lds
add
or
adc
je
cmp
into
scas
pop
inc
dec
stos
mov
mov
ds
cdq
es
(bad)
(bad)
in
mov
or
sub
cmp
sbb
sub
sbb
cmps
(bad)
(bad)
call
rol
popa
xor
sub
pop
ret
out
test
push
in
or
sbb
xchg
inc
(bad)
(bad)
(bad)
jmp
mov
imul
mov
mov
call
inc
jmp
dec
clc
(bad)
mov
shl
push
lods
adc
arpl
sti
aaa
jle
(bad)
(bad)
mov
and
loop
push
sub
mov
repnz
pop
and
mov
(bad)
(bad)
fcomip
sahf
inc
aad
xchg
inc
fild
leave
out
cmp
dec
cmps
mov
pop
sbb
dec
loopne
cwde
repz
call
mov
or
(bad)
(bad)
jmp
shl
jp
push
repnz
fstp
mov
fisub
mov
xchg
sbb
(bad)
(bad)
call
int
outs
dec
cli
cwde
shl
jmp
fiadd
mov
loop
mov
cmps
inc
adc
in
(bad)
jg
xor
popf
inc
inc
dec
mov
jbe
dec
outs
(bad)
(bad)
(bad)
call
xchg
fs
icebp
xchg
les
mov
sub
movs
mov
xchg
xchg
aas
dec
iret
adc
(bad)
jmp
and
int
aaa
scas
data16
out
sbb
pushf
sbb
(bad)
(bad)
inc
aam
jge
mov
sbb
rcl
popf
out
imul
push
shl
xchg
(bad)
(bad)
(bad)
(bad)
out
sahf
fwait
and
or
push
jmp
mov
inc
jle
movs
lea
test
jae
fld
(bad)
(bad)
(bad)
call
repz
lods
push
sub
hlt
jno
mov
movs
xchg
push
mov
push
cmp
mov
mov
mov
scas
clc
jmp
jmp
enterw
adc
out
cli
push
mov
pop
or
xchg
(bad)
inc
(bad)
cmp
or
mov
stos
push
jecxz
test
fs
sbb
add
in
pop
cmp
scas
xchg
pop
mov
sbb
scas
jne
iret
and
dec
(bad)
(bad)
(bad)
push
adc
into
xchg
jbe
jbe
mov
pop
push
es
jp
aad
sub
mov
fnstsw
out
sub
jmp
mov
xor
sar
push
jb
out
stos
ds
(bad)
call
stos
mov
stos
loopne
hlt
int
int
push
push
cmp
sub
pop
xor
(bad)
call
jle
xchg
test
stc
push
cmp
dec
inc
call
out
jmp
sbb
sti
test
lods
emms
jo
pop
scas
and
das
repz
adc
(bad)
cmp
mov
cs
(bad)
(bad)
inc
dec
test
cmp
sub
pop
(bad)
jmp
rol
(bad)
(bad)
(bad)
dec
stos
out
cmp
fnstenv
in
into
cmp
in
in
push
scas
repz
(bad)
(bad)
inc
into
in
and
jno
adc
dec
es
add
jae
in
mov
ja
jne
lahf
push
(bad)
(bad)
(bad)
call
pop
jp
dec
xor
pop
push
jo
movs
jge
xor
mov
fisub
dec
xor
add
pop
and
(bad)
(bad)
push
add
jbe
cmp
or
lahf
mov
dec
or
test
inc
mov
js
(bad)
(bad)
jmp
mov
sub
jmp
xchg
mov
push
ret
and
sbb
std
(bad)
mov
lods
scas
je
jecxz
jmp
hlt
(bad)
push
(bad)
scas
pop
jmp
adc
cmp
xchg
jg
add
mov
pushf
mov
repnz
test
jmp
jo
push
mov
jmp
mov
sub
dec
hlt
std
dec
or
mov
sub
(bad)
(bad)
(bad)
jmp
sbb
or
bound
fs
cmps
or
stos
push
out
inc
push
pusha
cmp
(bad)
(bad)
jmp
hlt
push
adc
pop
int3
push
sbb
pop
bound
jae
lods
mov
idiv
(bad)
(bad)
(bad)
mov
mov
ret
cmps
(bad)
mov
and
cmp
call
(bad)
jmp
shl
push
add
in
add
cmp
test
push
pop
dec
xor
(bad)
(bad)
jg
mov
mov
mov
iret
push
dec
js
sub
lods
and
sahf
outs
(bad)
(bad)
jmp
shr
into
sbb
xlat
std
or
jns
pop
ret
cmp
sub
push
add
inc
fcos
(bad)
(bad)
jmp
scas
and
sbb
dec
mov
(bad)
jp
popa
xlat
iret
xlat
adc
arpl
dec
sbb
sub
ja
sar
or
sti
cmp
push
call
or
or
mov
je
push
mov
dec
dec
add
jns
push
xor
into
push
jae
les
call
xchg
xor
in
adc
inc
shl
out
in
inc
mov
pop
fwait
pop
mov
(bad)
(bad)
jmp
cmps
adc
adc
jg
sub
jns
mov
jae
push
shl
mov
adc
mov
(bad)
call
in
std
push
cmps
cmp
(bad)
pop
jle
pushf
sub
sti
mov
scas
shl
(bad)
mov
(bad)
inc
dec
(bad)
dec
js
adc
stos
sahf
(bad)
fnstsw
push
cwde
fimul
jb
xor
mov
and
(bad)
(bad)
imul
and
mov
sub
imul
(bad)
(bad)
jg
cmp
leavew
xor
in
cmp
mov
std
das
in
push
cmps
sub
pop
jg
lods
inc
lahf
inc
imul
(bad)
(bad)
(bad)
dec
sub
shr
cdq
paddw
fidiv
pop
test
sbb
clc
jmp
inc
add
xor
mov
ds
rcl
(bad)
call
cmp
pop
mov
jmp
aaa
push
xor
pop
add
test
push
add
les
aaa
addr16
ror
sbb
sub
loopne
int
jmp
dec
movs
inc
mov
push
pop
sar
cmp
jb
push
shr
fld
icebp
ror
adc
fisub
sbb
and
or
call
(bad)
shl
jmp
pop
or
push
or
mov
(bad)
(bad)
(bad)
push
sbb
cld
(bad)
cmps
lods
loope
xchg
sub
cli
push
fstp
dec
outs
xchg
dec
in
jmp
jmp
ret
fistp
sub
shl
xor
xchg
mov
test
je
(bad)
(bad)
push
pop
or
in
add
jecxz
dec
push
add
retf
fwait
out
arpl
or
or
or
(bad)
(bad)
mov
jno
xor
inc
push
(bad)
jbe
(bad)
retf
sub
dec
push
dec
mov
es
(bad)
(bad)
(bad)
call
jl
fst
cdq
gs
add
cmps
idiv
jbe
mov
lods
sti
jp
call
lods
xchg
and
sahf
jmp
dec
inc
stc
fsub
fs
retf
xor
(bad)
(bad)
fistp
jge
sub
ja
pusha
push
adc
push
and
push
fbld
mov
or
out
jg
icebp
mov
jbe
shl
xchg
mov
pop
test
(bad)
fild
jecxz
mov
mov
xchg
or
jne
aaa
sub
daa
aas
sar
push
std
push
in
cmps
int3
push
mov
jb
outs
mov
enter
adc
or
ja
or
dec
cdq
pop
stos
jge
fist
stos
in
movs
add
shr
(bad)
(bad)
jmp
dec
and
rcr
sub
ja
sbb
(bad)
jmp
or
add
sti
dec
xor
mov
popf
outs
ss
retf
call
cwde
out
call
outs
inc
lahf
fcom
pop
add
jno
out
outs
add
mov
push
mov
repnz
sbb
je
pop
or
cmps
ins
stc
ret
jl
call
(bad)
(bad)
(bad)
dec
test
cmovge
mov
fld
adc
dec
(bad)
movs
stc
loop
test
pop
and
shl
push
push
and
lahf
loopne
mov
dec
inc
and
pop
or
fld
movs
sbb
scas
push
outs
mov
adc
push
xchg
sbb
dec
out
bound
hlt
out
cli
in
int3
test
aam
(bad)
dec
mov
dec
ds
xchg
xor
jmp
or
scas
int
lds
push
(bad)
(bad)
inc
jmp
and
out
(bad)
fst
es
aam
or
push
cmp
aas
test
inc
fs
repz
mov
inc
ins
call
(bad)
mov
(bad)
call
lock
lods
sahf
push
shr
sbb
or
lahf
pop
cmc
push
pop
mov
lods
dec
xchg
(bad)
(bad)
(bad)
call
retf
pop
sub
push
xchg
(bad)
in
mov
xchg
popf
push
xor
xchg
(bad)
(bad)
(bad)
(bad)
cmp
inc
jbe
add
xchg
call
inc
and
fist
mov
xchg
ret
mov
jl
dec
sbb
dec
pop
std
jle
push
sbb
jo
(bad)
(bad)
(bad)
(bad)
jmp
adc
mov
imul
mov
xchg
mov
jb
add
gs
add
(bad)
fisubr
scas
ins
das
pop
ds
mov
pop
mov
pop
rcr
in
or
into
repnz
xchg
out
(bad)
(bad)
push
(bad)
cwde
test
dec
cs
scas
sar
imul
push
test
xor
inc
dec
dec
(bad)
(bad)
(bad)
jmp
xchg
mov
mov
std
pusha
imul
outs
mov
lds
stos
xchg
imul
mov
idiv
mov
mov
mov
fcom
jle
movs
xchg
sub
cli
dec
sar
cld
xor
(bad)
(bad)
(bad)
cli
test
and
sahf
mov
(bad)
leave
sbb
adc
aaa
ds
(bad)
mov
lock
inc
loope
and
aaa
mov
ficom
out
(bad)
(bad)
(bad)
mov
xor
retw
inc
pop
test
dec
pop
inc
popf
inc
repnz
sbb
pop
inc
addr16
cmp
or
(bad)
(bad)
(bad)
mov
mov
cs
int3
jg
lea
pop
aad
(bad)
mov
int
xchg
es
call
pop
cmp
ret
add
inc
mov
ss
jns
jmp
jp
loop
fldcw
push
sbb
push
inc
ss
lds
pop
(bad)
(bad)
(bad)
inc
je
mov
pop
(bad)
and
in
lock
fldcw
push
mov
push
mov
aaa
(bad)
push
push
xor
pop
xchg
cmps
xchg
xchg
bound
mov
adc
mov
call
or
inc
call
pop
rcr
(bad)
mov
jle
not
clc
or
retf
sbb
mov
sahf
lock
je
pop
push
mov
shl
(bad)
mov
add
cmp
jns
mov
and
jmp
push
std
push
(bad)
cmp
retf
sti
sub
sti
dec
cmp
pop
lods
shl
dec
(bad)
mov
jge
xchg
mov
adc
clc
inc
push
rol
inc
and
inc
push
adc
dec
es
(bad)
(bad)
(bad)
fist
mov
(bad)
xchg
outs
int
data16
jbe
fs
call
push
lds
lahf
bsr
lods
jg
(bad)
dec
mov
push
lahf
test
add
or
(bad)
mov
xchg
lods
cdq
cmp
imul
mov
mov
jg
push
pushf
or
xchg
pop
out
mov
lods
test
and
sahf
(bad)
(bad)
(bad)
push
sub
pop
int3
retf
mov
xchg
mov
repnz
cmp
mov
sbb
call
adc
xchg
dec
movs
retf
dec
fdiv
add
out
and
inc
pushf
sar
(bad)
push
cs
adc
cwde
mov
cmps
xchg
jb
nop
xor
mov
das
shr
call
inc
jecxz
xor
push
push
aas
mov
cmp
adc
leave
hlt
fdiv
xchg
add
jno
(bad)
(bad)
call
popf
sbb
shr
mov
push
mov
add
or
push
xor
stc
cdq
clc
(bad)
jmp
mov
push
mov
inc
pop
jle
mov
xchg
sti
cwde
mov
xchg
or
add
mov
out
cmp
xor
mov
mov
jge
and
xor
dec
(bad)
sbb
adc
stos
(bad)
(bad)
(bad)
inc
pop
neg
jp
xlat
sbb
xor
jl
stos
sahf
mov
sar
fidivr
sub
cmp
xchg
xlat
jecxz
outs
sahf
fidivr
mov
sub
push
bound
pop
jg
jb
and
push
adc
(bad)
(bad)
(bad)
call
stc
xor
mov
mov
mov
retf
and
jne
(bad)
(bad)
(bad)
push
add
jns
pop
jno
lahf
fxam
or
sbb
ror
retf
jne
(bad)
(bad)
(bad)
(bad)
stc
fimul
fild
fst
daa
xor
jle
ja
jbe
repz
dec
adc
xchg
clc
(bad)
mov
and
test
inc
std
(bad)
(bad)
push
das
lea
push
loope
iret
and
dec
std
mov
xchg
mov
sti
(bad)
jg
add
mov
fwait
ja
jecxz
arpl
cmps
or
(bad)
jg
mov
xlat
mov
mov
xchg
cdq
jnp
icebp
pop
fiadd
int3
(bad)
(bad)
(bad)
inc
pop
ror
adc
pusha
mov
push
sbb
jmp
mov
popf
xor
pop
mov
mov
or
dec
jecxz
xchg
loope
std
(bad)
push
pusha
cmp
inc
and
shl
test
neg
sub
jg
loopne
xor
sbb
(bad)
cld
ss
(bad)
(bad)
(bad)
cld
push
iret
adc
add
mov
mov
jbe
xlat
mov
icebp
shr
mov
mov
jmp
sub
push
pop
jmp
add
call
or
push
cld
(bad)
jae
xchg
lea
cdq
ret
dec
xor
jae
mov
sbb
loop
cmp
inc
push
add
(bad)
call
add
stos
adc
mov
lods
(bad)
out
pop
mov
es
out
or
test
add
push
jno
pop
jge
pop
rcr
into
push
push
ror
(bad)
fidiv
(bad)
(bad)
mov
inc
mov
inc
xchg
loope
ror
sub
xchg
inc
(bad)
adc
cwde
inc
fmul
iret
(bad)
call
(bad)
ins
push
jle
push
(bad)
call
std
jne
pusha
add
(bad)
(bad)
call
imul
cli
test
mov
not
dec
(bad)
pop
mov
(bad)
jg
test
cmp
jge
aam
lods
inc
jb
mov
push
mov
mov
or
dec
shl
mov
ja
mov
dec
xchg
int3
cmp
(bad)
out
xor
rcr
push
mov
and
adc
call
pop
daa
imul
test
and
out
jae
fadd
xor
xor
ins
mov
pusha
fs
(bad)
fbstp
adc
cli
not
(bad)
(bad)
(bad)
(bad)
call
je
add
jp
fld
sar
mov
cmp
and
sbb
fdivr
mov
(bad)
(bad)
jmp
popf
cs
(bad)
mov
pop
mov
xchg
aas
inc
jge
scas
xor
pop
out
cmp
dec
test
popa
cmp
pop
xchg
cmp
jge
xchg
cmp
iret
movs
mov
sub
ss
ss
ds
mov
jg
inc
jl
inc
mov
fimul
sbb
movs
test
(bad)
(bad)
call
pop
les
adc
ret
sahf
sbb
repz
inc
gs
(bad)
call
mov
(bad)
(bad)
(bad)
(bad)
fadd
(bad)
cli
sbb
sbb
dec
and
ja
cmp
push
add
sahf
mov
(bad)
call
les
aas
sbb
out
cld
inc
xor
cmp
lods
sub
data16
cmp
cli
ja
(bad)
call
adc
xchg
fiadd
adc
enter
repnz
jmp
clc
call
test
push
pop
pop
imul
movs
in
adc
cmp
cld
(bad)
dec
sbb
mov
repnz
sahf
sub
and
mov
loop
fist
xchg
pop
icebp
pop
lock
inc
mov
shl
sbb
fldcw
fdivrp
pop
xchg
ret
and
mov
(bad)
mov
mov
xor
sbb
mov
dec
test
sub
xchg
aaa
int
fcom
or
mov
(bad)
mov
jp
xor
push
cwde
rol
cmp
ror
je
cmps
xchg
mov
xchg
cmp
ins
stos
jnp
not
(bad)
(bad)
out
jo
cmp
out
mov
movs
dec
(bad)
and
call
test
jmp
(bad)
(bad)
(bad)
jmp
(bad)
push
in
ds
push
jmp
adc
mov
push
rcr
adc
push
out
inc
and
push
(bad)
call
cld
adc
sub
ds
ret
inc
clc
(bad)
(bad)
js
cs
pop
ret
mov
mov
jbe
adc
sbb
dec
hlt
and
sub
mov
(bad)
cmp
sbb
std
mov
push
(bad)
adc
call
mov
xchg
shl
inc
or
mov
sub
cmps
(bad)
(bad)
(bad)
jmp
add
in
jmp
adc
fsubr
sub
or
xor
(bad)
(bad)
(bad)
push
sub
adc
dec
cmp
adc
fs
shl
push
jbe
mov
arpl
adc
dec
scas
movs
push
add
adc
adc
sub
(bad)
jmp
jbe
pop
int
sub
ss
push
mov
retf
sahf
retf
jns
jg
je
or
leave
out
out
arpl
fcomp
sub
and
clc
out
push
fdivr
sbb
mov
repz
xlat
xor
and
mov
std
push
imul
jmp
jne
push
pop
xor
or
lods
mov
xor
aas
stos
hlt
std
not
test
add
(bad)
(bad)
jmp
daa
stos
pushf
aam
fld
dec
inc
shl
add
enter
sub
push
pop
std
(bad)
(bad)
jg
es
push
(bad)
jg
cwde
int3
pushf
cmp
int3
xchg
mov
jmp
xchg
cmc
cwde
(bad)
(bad)
call
rcl
jo
ss
adc
rol
je
sbb
call
movs
cwde
mov
pushf
out
inc
or
(bad)
call
add
mov
mov
inc
popf
call
jecxz
inc
loopne
movs
iret
push
jl
sahf
ins
sahf
retf
jns
loope
test
dec
sub
shl
adc
(bad)
jl
xor
scas
jbe
stos
jo
jo
lahf
ins
sub
cwde
es
test
retf
ins
lds
or
or
add
clc
das
mov
imul
jmp
mov
mov
imul
or
scas
cli
call
pop
xlat
(bad)
test
in
test
xchg
jo
nop
xchg
(bad)
(bad)
(bad)
call
sbb
add
mov
sbb
adc
div
add
inc
mov
inc
popf
scas
test
mov
(bad)
(bad)
jmp
adc
lods
or
cmp
xchg
das
inc
sahf
dec
sbb
call
jmp
call
ror
add
cli
shr
fs
gs
(bad)
push
data16
inc
fsubrp
sbb
ins
mov
aam
xor
xor
call
mov
ror
(bad)
mov
and
push
jmp
inc
xchg
mov
mov
movs
mov
gs
rcr
fwait
inc
jl
sub
shl
mov
xchg
out
cli
(bad)
jmp
xchg
xor
loop
inc
in
inc
adc
int3
fcomp
cmc
(bad)
js
lea
inc
jno
push
jnp
ror
or
push
mov
push
add
out
jns
push
pop
out
data16
mov
xchg
int
fadd
pop
jae
in
sub
(bad)
(bad)
inc
jl
pop
fmulp
rol
xchg
iret
sbb
jg
add
pop
dec
ficomp
jo
cmc
jmp
(bad)
jmp
fisttp
dec
mov
add
out
xchg
ror
add
sub
add
stos
xlat
dec
add
sbb
mov
push
std
adc
aam
out
jmp
lds
(bad)
inc
outs
es
mov
test
sub
push
jl
sub
and
mov
outs
fisttp
or
test
rcl
and
or
sub
dec
xor
ficomp
push
dec
sar
add
call
retf
sbb
mov
repnz
mov
(bad)
idiv
jmp
rol
jmp
punpckhdq
dec
sub
push
and
cs
mov
stos
sti
in
daa
mov
(bad)
ins
movs
dec
dec
and
dec
rol
not
adc
ins
dec
fild
jg
fldcw
adc
scas
mov
retf
adc
cmp
test
cmp
inc
scas
or
loopne
inc
pop
fisttp
mov
or
ins
pop
cmp
inc
xor
cmps
jp
xchg
ds
clc
(bad)
dec
out
ss
dec
movs
mov
(bad)
fisttp
and
mov
dec
scas
jae
sbb
ret
sahf
jge
cmp
jnp
adc
jo
loop
cmp
sub
mov
mov
jmp
or
into
iret
and
cmps
mov
(bad)
mov
and
and
xor
xor
(bad)
(bad)
jmp
retf
sahf
sbb
fiadd
rcr
add
jns
push
(bad)
(bad)
(bad)
(bad)
mov
popa
retf
dec
daa
in
xor
mov
or
pop
iret
adc
or
jg
or
jecxz
adc
cld
daa
in
push
fist
jl
call
pop
mov
mov
pusha
and
pop
(bad)
(bad)
jmp
test
cmp
enter
mov
and
(bad)
dec
sub
out
mov
ret
and
or
(bad)
call
xor
scas
not
popf
scas
dec
mov
mov
jecxz
inc
or
out
(bad)
(bad)
(bad)
fbld
nop
pop
lea
adc
jb
mov
mov
add
popf
and
fild
retf
inc
mov
sahf
addr16
mov
sahf
jnp
xor
add
(bad)
arpl
ret
or
ins
sub
in
inc
mov
(bad)
jmp
scas
mov
out
and
les
jne
(bad)
(bad)
(bad)
dec
std
ja
add
ret
das
or
xor
ins
(bad)
ds
pop
fdiv
xlat
jae
shl
dec
lds
pop
adc
xchg
xor
enter
cld
push
xor
pushf
jle
(bad)
es
rcr
ds
iret
sti
scas
cli
pop
cld
(bad)
cld
fs
rdtsc
add
rol
mov
add
and
(bad)
jmp
retf
mov
loope
(bad)
mov
adc
repnz
push
pop
(bad)
(bad)
(bad)
inc
into
dec
outs
(bad)
jns
shr
jmp
test
add
pop
ror
jg
(bad)
fild
inc
pop
fisubr
scas
push
mov
out
mov
(bad)
(bad)
(bad)
dec
fadd
cmp
add
xchg
test
aas
out
sbb
icebp
cdq
(bad)
hlt
div
je
repz
pop
loope
into
push
mov
(bad)
inc
lds
mov
call
mov
fs
aaa
xor
loop
(bad)
(bad)
(bad)
dec
sbb
fs
call
mov
repnz
pop
fsubr
pop
loopne
stos
pop
mov
mov
rcr
jbe
xchg
push
mov
mov
fst
add
stos
dec
aas
xor
sahf
mov
iret
cmc
push
(bad)
(bad)
(bad)
(bad)
mov
add
pop
sub
inc
je
sbb
hlt
mov
pinsrw
jl
mov
mov
mov
mov
adc
adc
sbb
mov
(bad)
jmp
inc
ret
and
stos
repz
aam
inc
sub
addr16
or
(bad)
(bad)
mov
jmp
dec
repz
sub
dec
sub
pop
adc
dec
fistp
ins
cdq
dec
int
(bad)
(bad)
(bad)
cld
xlat
ror
mov
nop
pop
pop
movs
xchg
add
loope
or
scas
std
pop
pop
sar
(bad)
(bad)
(bad)
jmp
loope
daa
(bad)
cmp
arpl
call
push
sub
xchg
pusha
out
sub
sub
out
sub
iret
xor
add
pusha
dec
ins
add
pop
les
dec
push
aam
sti
outs
add
jns
push
mov
jmp
pushf
xor
sbb
in
xchg
sbb
(bad)
inc
sbb
add
mov
mov
(bad)
(bad)
(bad)
jmp
push
aaa
push
mov
icebp
jecxz
stos
jl
xor
pop
sahf
push
xchg
fdiv
out
adc
stos
cwde
jle
push
rcl
(bad)
(bad)
(bad)
push
sub
adc
jmp
retf
mov
jnp
fcomp
sbb
bound
dec
fwait
or
(bad)
jmp
sbb
loop
es
jp
cmp
ss
mov
(bad)
(bad)
jg
add
inc
dec
or
adc
sbb
cmp
adc
dec
pop
(bad)
(bad)
(bad)
(bad)
clc
adc
std
dec
(bad)
stos
inc
push
loopne
cmp
xchg
mov
mov
mov
mov
in
lock
(bad)
(bad)
(bad)
(bad)
(bad)
xor
jg
adc
ret
push
sub
pop
mov
mov
adc
mov
(bad)
(bad)
jmp
xchg
int3
popf
imul
inc
fs
mov
jecxz
rcr
inc
dec
dec
je
push
cld
jp
daa
test
dec
inc
les
xchg
std
sti
xchg
or
mov
mov
and
(bad)
nop
aad
or
(bad)
(bad)
(bad)
(bad)
fist
mov
and
mov
mov
es
test
call
add
ror
dec
inc
aas
aam
je
(bad)
jp
pop
jle
test
cmp
(bad)
(bad)
(bad)
mov
in
es
aam
mov
jbe
or
push
mov
addr16
dec
xlat
(bad)
(bad)
(bad)
call
inc
jle
jb
dec
mov
push
pop
sar
fwait
lock
push
jmp
std
(bad)
jmp
pop
mov
fsub
stos
call
jle
(bad)
(bad)
(bad)
mov
sbb
repz
repnz
sahf
sbb
cdq
jo
fnstcw
push
jne
jmp
mov
stos
(bad)
je
dec
mov
and
jmp
jb
(bad)
(bad)
dec
dec
repz
hlt
test
jne
ret
pop
cs
enter
dec
retf
fwait
mov
jmp
dec
sbb
enter
add
cs
cmp
mov
cld
xabort
retf
dec
dec
fisubr
int
xor
inc
inc
add
jae
dec
cmp
xor
mov
mov
xor
mov
mov
jmp
retf
cmps
jg
test
rep
inc
(bad)
(bad)
(bad)
(bad)
jmp
mov
retf
imul
push
data16
in
mov
dec
sbb
cdq
and
mov
cmp
ss
adc
sub
jbe
call
cld
pop
clc
cdq
sbb
push
pushf
out
jge
sub
inc
push
or
(bad)
adc
clc
push
idiv
call
fld
test
mov
and
scas
add
mov
xor
(bad)
leave
jbe
mov
add
dec
add
(bad)
(bad)
jmp
out
cmp
push
cs
pusha
mov
sbb
aam
movs
dec
cli
inc
sbb
sub
in
mov
jmp
dec
out
fidivr
mov
and
stc
push
(bad)
lock
outs
jge
and
int
add
sub
lods
(bad)
(bad)
(bad)
jmp
dec
aas
dec
pop
sar
adc
pop
outs
fs
fs
in
sub
xchg
jns
cli
(bad)
call
jmp
inc
lods
call
adc
sub
dec
repz
(bad)
popa
outs
je
call
dec
cmp
imul
sbb
jl
inc
sti
hlt
cmp
rcl
fwait
mov
cwde
xor
dec
push
jbe
(bad)
(bad)
jmp
lds
xchg
nop
loope
fdivr
inc
scas
aas
fisub
xor
dec
dec
(bad)
jbe
(bad)
(bad)
(bad)
dec
movs
cmp
aad
inc
sbb
mov
aam
daa
jge
shl
pop
test
(bad)
(bad)
(bad)
(bad)
push
jne
jbe
ror
mov
mov
dec
(bad)
(bad)
(bad)
out
sbb
inc
xor
push
outs
repnz
sbb
loopne
xchg
jl
inc
(bad)
ja
inc
mov
push
adc
nop
push
add
(bad)
(bad)
(bad)
inc
jne
inc
shl
sub
imul
arpl
mov
rcr
in
(bad)
jg
inc
xor
and
in
jns
pop
lahf
das
and
dec
pop
jbe
(bad)
(bad)
cmp
mov
out
add
lock
sub
int
bound
jmp
arpl
pop
mov
add
dec
jo
push
mov
dec
(bad)
xor
push
aas
mov
hlt
call
inc
shl
(bad)
sbb
xlat
ins
push
aam
(bad)
(bad)
(bad)
push
mov
and
(bad)
lahf
ins
xchg
push
nop
xor
xor
inc
xchg
and
xchg
xchg
clc
sub
test
xchg
cmp
sar
push
adc
call
cwde
call
(bad)
mov
jecxz
pop
(bad)
fild
call
ds
or
mov
(bad)
(bad)
call
mov
jbe
fisubr
fstp
outs
pop
mov
loopne
imul
scas
add
(bad)
(bad)
jmp
jb
sbb
int3
lods
jbe
movs
dec
cdq
(bad)
jp
mov
xchg
fldenv
pusha
es
jnp
mov
cld
inc
adc
xor
das
addr16
(bad)
(bad)
jg
pop
mov
cmp
js
sub
mov
dec
jns
mov
add
jbe
add
call
movs
mov
cwde
sub
mov
xor
dec
mov
xchg
les
clc
aad
daa
(bad)
(bad)
(bad)
mov
dec
dec
shr
xchg
inc
push
out
lods
mov
push
int
mov
test
(bad)
(bad)
(bad)
inc
xchg
mov
mov
and
mov
bound
mov
aad
jns
and
xor
sbb
xchg
and
pop
ds
idiv
sbb
or
mov
xor
(bad)
jmp
adc
push
leave
frstor
pop
(bad)
imul
inc
sbb
sbb
sub
or
add
and
int3
adc
ins
sahf
dec
test
gs
nop
sbb
adc
mov
cld
(bad)
push
jbe
inc
test
daa
shr
cmc
mov
xchg
(bad)
(bad)
call
out
mov
sub
and
in
dec
outs
arpl
xchg
fmul
xor
jl
jno
ret
jno
daa
ret
jg
gs
fs
mov
jae
into
popa
ss
mov
(bad)
(bad)
mov
cld
add
test
cmc
cli
arpl
mov
stos
sbb
xchg
push
push
(bad)
(bad)
fcomip
enter
aam
pop
mov
cmps
pop
push
fwait
aam
fnsetpm(287
jo
lods
mov
jl
mov
mov
daa
mov
in
mov
loopne
(bad)
(bad)
jmp
jmp
push
mov
or
sub
lea
pop
cs
inc
inc
call
pushf
pop
out
inc
lea
fdivr
es
clc
push
jle
jmp
iret
loop
call
adc
mov
cwde
jns
xchg
(bad)
mov
jns
pop
mov
jmp
add
out
and
fs
mov
(bad)
(bad)
(bad)
call
push
je
jmp
inc
cmps
fisub
pop
popf
mov
push
std
inc
or
mov
and
das
xor
push
sbb
cmp
mov
push
retf
or
pop
cld
ror
push
(bad)
pop
add
dec
movs
inc
cmps
jg
xor
int
jg
push
ss
xor
in
pop
scas
ins
cmp
jo
jae
(bad)
(bad)
(bad)
mov
mov
je
gs
xor
cmps
jnp
lea
push
(bad)
(bad)
(bad)
(bad)
dec
jns
or
(bad)
addps
mov
sti
dec
(bad)
cmp
movs
je
xchg
push
int3
lea
(bad)
push
mov
jns
jbe
retf
shl
sbb
mov
mov
outs
mov
lods
jmp
and
jmp
mul
(bad)
adc
repz
shr
call
in
and
(bad)
fwait
repz
cmps
push
mov
fsub
lods
mov
jno
(bad)
(bad)
(bad)
(bad)
fsubr
adc
fisub
adc
repnz
(bad)
idiv
xor
lock
xchg
sub
(bad)
push
add
mov
rcl
xchg
call
inc
sub
push
sbb
or
add
dec
mov
outs
mov
add
lock
(bad)
push
(bad)
jae
rcr
fstp
fdivr
repnz
mov
mov
pop
jecxz
pop
pop
sar
lods
jne
mov
pop
fwait
js
div
out
mov
jg
call
jae
in
mov
xchg
test
push
mov
inc
cmc
(bad)
(bad)
jmp
fcmovnb
pop
mov
mov
shl
jp
mov
add
mov
push
(bad)
(bad)
out
mov
scas
and
in
mov
cmp
dec
fcomi
mov
sar
(bad)
(bad)
(bad)
out
cli
xchg
call
sub
lea
jns
retf
push
mov
pop
sbb
cmp
xor
ds
outs
mov
imul
add
jo
xor
(bad)
imul
sti
inc
cmps
xor
(bad)
(bad)
popf
cmp
and
or
das
xchg
xor
inc
jne
out
out
scas
xor
sbb
ret
sbb
(bad)
inc
fbstp
pop
rcr
(bad)
jg
out
push
push
jle
inc
ret
leave
clc
jb
or
(bad)
cmp
inc
dec
loope
(bad)
jg
sub
dec
xor
shl
ja
fisub
retf
lods
fxam
lods
push
cmp
pop
pop
add
hlt
out
es
pop
dec
shl
pop
fsub
mov
inc
cld
(bad)
out
ja
lea
iret
rcr
cmp
jb
sbb
add
(bad)
(bad)
(bad)
(bad)
out
cmp
push
mov
ds
out
xchg
add
or
add
fs
test
add
push
inc
fdiv
xchg
jg
and
arpl
int3
std
ret
inc
mov
fwait
cmp
or
das
clc
add
(bad)
stos
inc
jae
jno
scas
inc
lss
inc
clc
aam
cdq
rcl
inc
rcl
sbb
repnz
(bad)
(bad)
jg
scas
adc
cdq
pop
rcr
cli
sahf
lahf
jp
jl
aad
push
cmc
aas
ins
jge
mov
(bad)
jg
lahf
rcr
fsubr
push
sti
repz
mov
in
gs
adc
(bad)
jae
aas
lock
(bad)
(bad)
(bad)
jmp
int3
mov
cmps
dec
ja
jne
add
les
adc
sti
(bad)
(bad)
(bad)
(bad)
cmp
ror
fstp
cmp
mov
cli
repnz
xor
retf
pop
(bad)
call
add
and
mov
jno
retf
push
(bad)
(bad)
(bad)
jmp
sub
fwait
xor
fld
loope
sar
test
jmp
jb
(bad)
(bad)
call
mov
jne
inc
int
and
aad
or
inc
ror
adc
(bad)
(bad)
inc
pop
fcom
ror
sub
outs
test
loope
fld
ss
int
adc
fstp
test
movs
push
repz
push
(bad)
dec
pop
or
in
(bad)
pushf
ficomp
mov
les
push
jg
push
mov
repnz
inc
cs
bound
std
jmp
(bad)
dec
sbb
stc
jl
inc
call
(bad)
pop
fisub
shl
icebp
push
sub
cmp
movs
xchg
in
cmp
sbb
add
xchg
mov
inc
sub
lds
jbe
call
or
rcl
shl
sti
push
mov
clc
rcl
pop
stos
gs
sub
inc
and
adc
fnstcw
shl
div
fcom
add
(bad)
(bad)
call
inc
mov
loopne
jmp
sub
pusha
loop
dec
pushf
jg
(bad)
jecxz
xchg
stos
inc
loope
inc
shr
stos
inc
cmp
dec
xchg
retf
cmp
stc
aaa
inc
arpl
inc
(bad)
into
pushf
and
inc
jae
sub
cmp
les
push
adc
cwde
mov
outs
mov
adc
mov
cmc
sbb
les
mov
dec
(bad)
fsub
into
stos
clc
inc
dec
mov
sub
ret
retf
(bad)
dec
ds
jecxz
cs
popf
pusha
cdq
xchg
out
ss
(bad)
(bad)
push
jae
and
imul
shl
jmp
icebp
mov
int3
jns
jl
gs
outs
inc
jg
xlat
(bad)
jle
mov
retf
mov
cmps
jnp
aaa
in
int3
jnp
(bad)
jg
cmp
fisubr
in
jecxz
dec
nop
in
test
mov
sti
rcl
push
pop
push
ret
rcr
add
push
(bad)
(bad)
dec
or
cld
data16
inc
pop
mov
stc
shr
inc
or
(bad)
(bad)
(bad)
mov
and
retf
js
mov
ret
out
les
jnp
xchg
pop
dec
push
(bad)
(bad)
call
ror
mov
push
pop
xchg
xchg
popaw
push
ins
jns
mov
daa
fisttp
(bad)
clc
dec
jmp
es
mov
xor
int3
sbb
repnz
aas
shr
jmp
fidiv
outs
inc
inc
mov
add
push
out
mov
sbb
je
jns
adc
mov
mov
loop
jl
add
dec
sbb
leave
inc
mov
add
or
jmp
xchg
pop
add
les
call
call
ja
inc
pop
push
sub
jns
lods
jmp
mov
ret
ds
sahf
(bad)
(bad)
(bad)
jmp
jmp
aad
jmp
mov
push
inc
not
imul
jmp
neg
fisttp
sahf
push
mov
(bad)
add
or
fild
call
mov
shr
adc
(bad)
(bad)
cmp
adc
jne
sub
push
shr
pop
(bad)
fadd
jns
dec
cmp
xchg
hlt
scas
cli
push
mov
daa
xchg
xor
mov
inc
loop
int
mov
leave
mov
shl
(bad)
(bad)
frstor
ss
(bad)
(bad)
dec
xchg
push
mov
jb
loope
lods
js
dec
dec
xchg
hlt
sti
fdivr
retf
test
int
cmpxchg
sbb
dec
cld
sti
mov
(bad)
(bad)
call
pop
jge
test
mov
cld
aas
and
jnp
and
push
xor
xor
xor
pop
cmc
mov
push
pop
int
jbe
cmp
fisubr
clc
nop
ret
std
(bad)
dec
or
aad
xor
mov
mov
cmp
nop
push
cs
xchg
pop
xchg
(bad)
(bad)
mov
ret
int3
cld
(bad)
xchg
movs
mov
fsubp
int
xor
(bad)
xchg
es
fcomip
fild
add
push
xchg
or
pop
push
lds
jo
sahf
movs
aaa
std
dec
push
fild
jmp
xchg
outs
and
push
imul
pusha
pop
push
add
(bad)
jmp
popa
and
jle
stos
pushf
xchg
push
or
sub
fwait
daa
mov
pop
add
jmp
lock
test
(bad)
(bad)
mov
and
sub
adc
fild
pop
iret
xchg
and
push
xor
ds
fmulp
xchg
(bad)
(bad)
fbstp
in
sbb
and
mov
mov
dec
and
(bad)
(bad)
call
push
xor
imul
push
out
sub
cmp
add
lods
aas
loopne
jb
aaa
les
and
out
add
pop
xor
sub
scas
loop
mov
jmp
push
mov
mov
jne
(bad)
(bad)
jmp
add
pop
popa
jecxz
out
gs
data16
adc
sub
push
cld
stos
cwde
stos
jp
mov
xchg
jmp
fidiv
jae
popa
mov
mov
aaa
pop
and
cmp
and
jb
sahf
cwde
xlat
push
loope
(bad)
(bad)
inc
inc
xor
xchg
xor
in
push
push
std
add
fstp
aad
bound
sub
movs
(bad)
cld
jl
in
lods
(bad)
(bad)
(bad)
dec
xchg
sti
(bad)
push
loope
and
pop
inc
inc
mov
rcr
add
call
mov
popa
ins
neg
jno
cld
aam
nop
sbb
pop
xchg
retf
xchg
clc
(bad)
fild
sbb
ja
push
stc
in
pop
rol
cmp
outs
mov
mov
je
adc
cwde
outs
mov
(bad)
push
sbb
push
sahf
push
jmp
cwde
js
add
dec
pop
cdq
(bad)
leave
es
(bad)
mov
cwde
mov
xchg
fiadd
in
jmp
xor
retf
mov
inc
jle
push
push
int3
adc
dec
push
imul
loop
in
fprem
(bad)
jg
xchg
cmc
pop
xchg
jle
inc
cmp
xchg
arpl
add
mov
dec
movnti
push
ins
pop
jle
jmp
popa
test
add
sub
out
xchg
nop
(bad)
aad
ss
dec
in
fldl2t
mov
inc
cld
fist
fisub
sub
lds
xchg
jmp
(bad)
push
dec
jmp
clc
jo
jns
jg
lock
inc
mov
movs
mov
mov
inc
cmps
shl
push
in
movs
pop
and
pushf
bnd
jne
cwde
cmp
dec
xor
xchg
outs
ja
(bad)
dec
mov
mov
rol
fisub
push
fcmovnbe
cmps
mov
and
(bad)
jle
add
hlt
out
xchg
(bad)
(bad)
inc
in
mov
imul
inc
jb
mov
cs
add
call
pusha
pop
and
aaa
test
loope
add
mov
(bad)
jmp
sahf
(bad)
push
cmp
and
(bad)
fcmovu
imul
dec
daa
cmc
cli
cmps
sub
push
mov
pop
(bad)
pop
cmc
add
add
enter
(bad)
jge
(bad)
(bad)
(bad)
push
inc
ret
add
pop
cmc
mov
add
mov
cmp
fnsave
test
call
call
jae
(bad)
mov
or
pop
jns
pop
movs
push
repz
cli
push
fild
push
int3
mov
xlat
dec
mov
or
not
or
test
gs
test
stos
lahf
sbb
jnp
(bad)
loopne
jnp
dec
out
(bad)
(bad)
(bad)
dec
push
mov
(bad)
lea
xchg
pop
mov
or
dec
add
hlt
in
mov
(bad)
(bad)
push
pop
ret
gs
sub
out
js
jbe
mov
dec
movs
das
es
clc
mov
add
loope
and
mov
gs
cmps
sahf
add
(bad)
(bad)
dec
add
int
adc
inc
sahf
jnp
pushf
mov
test
cmp
mov
nop
sbb
dec
pop
inc
mov
cmp
jb
push
mov
mov
(bad)
(bad)
(bad)
push
ret
lds
sub
mov
xchg
loopne
mov
out
sub
push
pop
js
push
(bad)
(bad)
mov
mov
sbb
call
add
mov
inc
or
aas
lods
inc
xchg
jp
push
mov
add
(bad)
dec
(bad)
jmp
mov
ret
scas
stos
adc
mov
(bad)
(bad)
(bad)
jmp
xchg
cmp
adc
sti
icebp
sbb
(bad)
sub
retf
xlat
into
add
fsub
and
inc
call
sar
(bad)
(bad)
jmp
fwait
(bad)
mov
pop
and
loope
mov
jb
data16
mov
(bad)
fs
adc
dec
push
and
sahf
(bad)
(bad)
(bad)
jmp
cmp
or
or
ins
or
adc
or
ficomp
and
popf
mov
(bad)
std
jb
fs
xor
fidivr
stos
(bad)
(bad)
inc
popa
jmp
imul
or
movs
leave
int
mov
data16
adc
(bad)
jge
mov
lods
pushw
jp
fiadd
adc
mov
and
sub
mov
xchg
lock
ffreep
and
cli
sub
test
adc
cmp
lahf
out
sub
scas
in
repz
or
push
ja
jno
movs
pop
xor
jae
jae
push
fdiv
mov
ftst
push
cmp
in
mov
ins
das
inc
stos
(bad)
(bad)
inc
dec
mov
cmp
in
imul
rep
sbb
mov
retf
das
sar
jmp
adc
stc
pushf
and
xchg
call
dec
inc
(bad)
or
cs
les
add
call
xor
pop
out
dec
leave
xchg
shr
in
out
cli
adc
xor
cmp
(bad)
out
push
sub
movs
jo
sub
(bad)
call
xchg
imul
push
or
fs
pop
xlat
addps
push
push
out
(bad)
ins
hlt
mov
cdq
dec
mov
scas
push
sub
pop
and
sbb
or
or
out
in
and
cmpxchg
jmp
stc
mov
jns
sbb
dec
jmp
nop
xchg
and
(bad)
(bad)
call
pop
mov
push
cld
movs
dec
xor
pop
ret
push
cwde
push
(bad)
xor
mov
movs
mov
push
lock
(bad)
call
call
mov
retf
sahf
cmp
repz
jo
out
fcos
aaa
cld
(bad)
mov
sub
aaa
cwde
or
sahf
xor
and
gs
sub
stc
dec
xchg
int
mov
sbb
ja
das
dec
mov
sub
sub
jmp
std
fmul
sub
ins
(bad)
(bad)
(bad)
(bad)
jmp
push
sbb
outs
ss
cli
mul
inc
xor
out
jae
xchg
pop
stc
cmp
movs
je
(bad)
(bad)
(bad)
inc
jl
add
fild
add
mov
cmp
hlt
pop
imul
ficomp
or
or
push
jno
fs
and
(bad)
jmp
call
or
pop
mov
sub
xor
add
dec
inc
(bad)
(bad)
(bad)
fild
shl
cld
cld
mov
out
sub
lea
lock
add
idiv
push
jmp
(bad)
(bad)
(bad)
(bad)
stc
fnsave
clc
jnp
mov
push
rol
xchg
jl
arpl
dec
pop
jge
repnz
add
sub
fwait
sbb
dec
loop
jbe
sti
jae
(bad)
(bad)
(bad)
call
pop
cs
ins
jbe
aaa
jne
daa
add
cmps
pusha
mov
xor
shl
(bad)
(bad)
jmp
scas
scas
jo
movs
cwde
lds
lods
jno
cmp
repnz
(bad)
jmp
and
inc
loopne
clc
cmp
call
(bad)
(bad)
jmp
cmp
lds
out
out
ja
aam
adc
dec
lods
lock
sbb
jg
sub
vmwrite
iret
frstpm(287
xchg
enter
test
lds
dec
das
xchg
mov
(bad)
lock
out
fucomip
adc
in
(bad)
(bad)
(bad)
call
pushf
pop
repnz
(bad)
pop
or
mov
pop
(bad)
and
neg
call
call
sub
adc
das
shl
test
adc
popf
push
pop
inc
sbb
(bad)
jg
(bad)
scas
add
xchg
sbb
xor
sti
xchg
push
call
adc
sahf
mov
xor
shl
mov
int
(bad)
(bad)
mov
nop
aaa
jno
cmp
mov
stos
shl
in
loopne
lahf
into
(bad)
and
(bad)
(bad)
jmp
popa
dec
cmp
test
es
cld
icebp
mov
dec
fdivrp
arpl
ret
jg
repnz
push
adc
lods
xchg
or
out
jnp
add
cdq
jns
sbb
scas
pop
pop
ss
pop
das
dec
jmp
movs
adc
int
hlt
mov
lahf
push
nop
cmps
(bad)
mov
jbe
in
(bad)
push
add
repz
ret
fsub
inc
shl
into
out
enter
xchg
loope
call
pushf
pop
sbb
pushf
pushf
adc
cli
(bad)
(bad)
mov
jecxz
and
pop
fst
mov
or
(bad)
out
movs
xor
mov
icebp
mov
int
dec
inc
je
sub
xchg
hlt
retf
lods
xchg
mov
cmp
(bad)
(bad)
(bad)
call
sbb
cmc
push
rol
test
int
(bad)
repnz
leave
test
pop
add
jmp
aaa
add
and
fistp
stos
push
aad
xor
jo
in
xchg
in
les
push
call
sub
scas
cli
push
test
xchg
popa
sub
arpl
xor
jg
jge
nop
hlt
(bad)
push
or
and
cmp
pushf
add
mov
mov
(bad)
mov
dec
or
or
(bad)
xchg
mov
xor
(bad)
(bad)
jmp
call
arpl
pushf
je
iret
int3
and
push
sub
cli
xor
cmp
mov
mov
ret
and
rol
add
inc
xchg
cdq
inc
mov
(bad)
(bad)
inc
stos
lods
xor
sti
or
(bad)
fstp
in
jbe
sub
pop
hlt
dec
or
lods
mov
(bad)
(bad)
jmp
mov
and
add
jnp
lahf
jb
fcomp
aam
xor
jne
sub
iret
mov
sbb
fbld
and
mov
and
iret
int
js
(bad)
(bad)
(bad)
in
pop
pop
push
mov
test
xchg
mov
test
ja
mov
jns
jno
in
jg
jae
dec
push
push
xor
mov
inc
or
(bad)
call
mov
gs
dec
stos
btr
or
pop
ins
sbb
in
(bad)
jb
imul
sbb
fisubr
dec
ds
jns
xchg
xchg
js
xchg
adc
sbb
cmp
popf
dec
pop
mov
mov
int3
repz
or
adc
dec
mov
sbb
pop
mov
in
mov
shl
clc
in
fcmovnbe
aas
repz
mov
call
pop
cmp
jmp
loop
icebp
daa
cdq
adc
int
fld
sbb
call
inc
mov
jns
inc
pop
add
add
push
int3
xor
pop
pop
nop
xlat
movs
jnp
cdq
loope
xor
(bad)
(bad)
inc
dec
mov
in
mov
popf
xchg
pop
add
(bad)
aaa
(bad)
in
aas
mov
(bad)
(bad)
(bad)
(bad)
(bad)
call
inc
int3
add
bound
sti
imul
lock
add
sar
(bad)
call
push
out
imul
mov
adc
fmul
xchg
and
jg
dec
adc
pop
cdq
sar
outs
call
mov
push
push
rcr
movs
mov
test
xor
(bad)
mov
loopne
rcl
inc
lods
or
mov
cwde
xchg
rcr
lods
pop
daa
arpl
enter
dec
daa
fld
and
nop
jl
and
fcomip
push
test
jae
aaa
(bad)
xor
pop
in
inc
xchg
ds
cld
mov
pop
jbe
shr
pop
cmp
in
cmp
je
xchg
cli
test
inc
fmul
lods
and
xchg
out
mov
dec
jp
loopne
repnz
push
femms
aam
xchg
test
fwait
cwde
pop
fld
jecxz
call
lods
jno
mov
push
dec
ficomp
les
lock
lock
test
cli
out
mov
shr
jae
stos
fneni(8087
cmps
call
dec
in
retf
sub
mov
mov
pop
cmp
out
(bad)
(bad)
jmp
std
std
dec
xchg
shl
sub
(bad)
in
aad
jecxz
mov
(bad)
(bad)
inc
cwde
fsub
(bad)
rcr
sbb
adc
in
in
lods
loopne
sub
std
fcomip
jmp
(bad)
push
outs
adc
mov
adc
arpl
stos
in
retf
call
push
dec
int3
mov
mov
movs
popf
outs
and
sbb
loop
fiadd
mov
cmps
sar
pop
xchg
cli
les
sahf
xchg
jg
(bad)
inc
fst
push
or
ror
mov
sub
mov
xchg
adc
(bad)
fucom
and
scas
mov
(bad)
(bad)
jg
inc
dec
idiv
(bad)
mov
js
outs
(bad)
rcr
ja
mov
mov
and
inc
stc
or
pop
js
ds
shl
into
jmp
push
out
dec
dec
mov
shr
dec
enter
mov
fist
jno
inc
aaa
or
jmp
inc
fsubr
jo
idiv
(bad)
(bad)
jg
sub
mov
inc
sub
pusha
add
mov
push
ficom
mov
iret
(bad)
(bad)
(bad)
aas
dec
pop
mov
fcomp
dec
(bad)
arpl
cdq
retf
test
(bad)
(bad)
(bad)
jmp
sub
cmp
mov
(bad)
xchg
(bad)
js
hlt
push
lea
test
sbb
adc
js
or
adc
iret
sbb
loopne
(bad)
jmp
rcl
and
mov
sahf
sub
stc
cmp
add
jae
daa
cs
repz
es
fistp
dec
out
iret
jge
repnz
push
scas
pop
les
repz
push
adc
iret
jne
test
cmp
sub
add
pop
aam
and
xchg
inc
repz
inc
jge
jne
(bad)
(bad)
call
mov
dec
scas
fwait
dec
xlat
mul
push
cmps
lahf
fisttp
and
pusha
jmp
(bad)
(bad)
(bad)
inc
or
repz
ror
cmp
sahf
out
jbe
dec
jecxz
mul
(bad)
fbld
or
retf
imul
sub
(bad)
jmp
push
lahf
dec
pop
xor
jmp
mov
aaa
dec
cld
and
scas
pop
xor
lahf
push
clc
dec
retf
not
sbb
jecxz
mov
push
(bad)
jmp
(bad)
or
pop
sub
ret
sbb
xor
pusha
shl
in
push
xchg
mov
(bad)
push
imul
xchg
cdq
push
ja
ror
mov
add
outs
adc
and
sub
xor
test
fst
pop
aaa
sub
push
xor
aas
xchg
outs
push
bound
cli
adc
imul
dec
fsub
cmps
test
test
lea
mov
jmp
push
cmps
sbb
xchg
fs
outs
pop
inc
mov
xchg
into
xchg
adc
stos
(bad)
mov
stos
inc
jo
sub
es
push
aas
in
popa
push
stc
jae
cmp
shl
xchg
scas
mov
in
mov
cmp
aad
xlat
sar
mov
(bad)
push
and
jmp
push
inc
jbe
repnz
outs
inc
adc
inc
add
mov
shl
imul
jg
dec
jecxz
or
push
xor
mov
out
or
retf
(bad)
mov
xor
xor
and
xchg
xor
adc
(bad)
inc
add
call
sti
mov
or
je
cmp
mov
(bad)
call
shl
and
xchg
js
scas
movs
mov
push
pushf
fnstcw
jnp
and
ins
adc
or
lods
aaa
lea
xchg
fisttp
add
aas
scas
pop
popa
cmp
data16
loop
or
and
push
inc
push
mov
test
or
push
cmp
and
(bad)
(bad)
dec
popa
aad
sbb
out
mov
addr16
not
sbb
push
inc
addr16
lock
lods
cmc
bound
gs
mov
(bad)
call
push
jne
jge
popa
scas
inc
add
push
arpl
and
jg
mov
aaa
aam
add
ss
jmp
in
and
mov
add
jecxz
cli
push
cmp
cmps
adc
or
ds
mov
cmps
xchg
add
and
and
repnz
add
sbb
btr
sti
adc
(bad)
(bad)
jmp
or
shl
add
push
xchg
pop
mov
add
jnp
push
or
gs
(bad)
call
js
cmp
jb
lock
mov
mov
mov
xor
sbb
test
dec
sar
ret
inc
jg
aas
in
push
data16
fild
cmp
or
movs
fwait
jl
rcl
lods
push
nop
(bad)
(bad)
call
loope
dec
loope
test
je
das
pop
cmps
rcl
sub
leave
sub
sub
jmp
ja
xchg
mov
(bad)
(bad)
call
cld
scas
and
aam
xor
xor
push
test
sbb
ret
and
jecxz
dec
sub
sar
jg
cmps
cdq
or
les
stc
ret
fwait
sbb
add
jne
cmps
and
sbb
dec
push
out
inc
mov
mov
(bad)
(bad)
jmp
pushf
into
fistp
movs
ret
inc
fadd
ss
jmp
sub
inc
xchg
(bad)
out
mov
jecxz
jle
cmp
adc
imul
aam
push
sbb
dec
inc
inc
in
push
cmp
or
ret
(bad)
push
aas
(bad)
sbb
ins
pushf
xchg
mov
xor
ds
cmp
(bad)
(bad)
jmp
pop
mov
dec
jp
push
pushf
jmp
cmps
jmp
shr
popa
add
(bad)
(bad)
inc
fs
(bad)
jmp
movs
push
push
cmp
retf
imul
dec
inc
fmul
inc
dec
pusha
jl
mov
push
inc
sbb
xor
cmp
inc
pop
int
push
pop
sar
pop
cld
ss
out
cmp
dec
and
fs
popf
add
push
inc
inc
imul
fs
dec
jmp
jb
dec
xor
stos
mov
push
sbb
inc
sbb
fsubr
xchg
test
(bad)
xchg
pop
sbb
daa
dec
(bad)
(bad)
call
(bad)
ret
push
call
out
pop
movs
push
sub
jge
and
push
inc
jl
fcomp
jl
adc
clc
or
sbb
sub
jmp
inc
cmp
ret
sar
(bad)
(bad)
inc
shl
rcr
test
movs
ja
ret
ret
dec
icebp
pop
xor
cmc
sub
shl
pushf
jg
(bad)
jmp
shl
cmc
fisub
les
inc
nop
cwde
aas
xor
(bad)
(bad)
(bad)
jmp
pop
jmp
adc
mov
mov
je
and
dec
jne
rol
xchg
mov
sar
scas
(bad)
dec
ret
ds
mov
pop
sub
lods
mov
gs
jp
out
cli
movs
ds
cmp
push
cmps
or
ins
jp
mov
hlt
jge
inc
ror
xchg
xor
cmp
or
dec
(bad)
mov
sbb
outs
or
push
or
dec
push
cmps
fldenv
add
and
mov
mov
(bad)
jmp
dec
sub
add
arpl
mov
in
pop
jle
(bad)
mov
mov
ja
push
(bad)
jbe
mov
push
(bad)
(bad)
(bad)
inc
and
ret
or
jg
(bad)
mov
xchg
push
mov
sbb
ins
cmp
test
mov
pop
and
and
(bad)
jo
scas
push
test
mov
out
(bad)
(bad)
(bad)
(bad)
mov
push
sbb
dec
cmp
jb
ret
ret
and
cdq
mov
in
addr16
jmp
(bad)
call
sbb
mov
aaa
jb
(bad)
xor
mov
and
(bad)
(bad)
call
pop
mov
xor
sub
mov
addr16
mov
sahf
out
mov
mov
mov
test
jl
cmp
mov
xor
mov
call
ja
popf
push
sbb
scas
enter
ret
mov
stos
aas
or
jmp
xor
push
mov
outs
mov
and
rcr
and
sub
ficom
(bad)
(bad)
call
js
or
cmp
or
adc
mov
enter
jmp
mov
out
popf
jb
int
shr
stos
es
fwait
cmc
fsubr
add
mov
(bad)
(bad)
(bad)
inc
and
adc
xor
aaa
(bad)
call
loopne
addr16
hlt
aaa
(bad)
dec
cmps
iret
jb
mov
fisubr
cmp
cmps
int3
(bad)
std
xchg
and
cs
repz
(bad)
(bad)
xor
mov
or
test
nop
push
imul
mov
ins
pop
icebp
cmp
cmp
add
(bad)
inc
dec
div
mov
dec
adc
add
jg
pop
(bad)
push
movs
lods
fild
inc
out
bound
repz
mov
(bad)
(bad)
jmp
enter
fmul
jno
neg
call
push
test
std
pop
sub
jp
fisttp
(bad)
fadd
(bad)
(bad)
mov
daa
out
outs
ins
jmp
aam
or
in
pop
lds
sub
(bad)
cwde
and
(bad)
call
and
cmps
or
das
int3
mov
and
(bad)
(bad)
jmp
mov
push
inc
mov
add
sub
loopne
fxch
ret
icebp
push
or
xchg
std
out
mov
xchg
jl
lahf
mov
sub
mov
dec
jnp
xchg
pop
cld
test
lods
and
mov
adc
and
mov
pushf
loopne
out
cmp
vpsubusb
in
(bad)
(bad)
jmp
repz
lods
mov
in
call
outs
adc
fdiv
test
(bad)
cmp
xchg
sti
cli
pop
pop
and
ja
std
mov
ror
(bad)
(bad)
dec
sub
movs
mov
mov
leave
xor
sbb
enter
movs
ret
xor
push
push
(bad)
(bad)
dec
(bad)
repnz
sbb
sbb
sub
(bad)
(bad)
out
movs
cmp
fs
ds
in
or
test
xor
dec
mov
pushf
daa
cs
jg
or
xlat
cld
xchg
mov
mov
(bad)
(bad)
call
idiv
mov
mov
hlt
lods
cmp
sub
(bad)
in
test
ins
(bad)
fcomip
call
xor
aad
push
call
shl
jge
in
cmps
icebp
jge
sub
rol
and
mov
sub
adc
cmp
jne
mov
mov
adc
iret
hlt
inc
xchg
loopne
and
and
out
pop
xchg
(bad)
dec
jo
xor
xor
cwde
outs
lds
dec
aas
(bad)
dec
(bad)
jmp
addr16
inc
mov
jmp
cmps
mov
fdivrp
push
scas
(bad)
(bad)
jg
and
inc
mov
add
sbb
in
push
fcom
in
push
(bad)
(bad)
(bad)
jmp
jb
rol
mov
push
push
js
mov
pop
push
cmp
mov
test
dec
dec
into
push
(bad)
(bad)
call
ss
and
pop
pop
sbb
cli
adc
int
fcom
mov
(bad)
(bad)
(bad)
jmp
icebp
imul
movs
and
inc
jl
pop
enter
dec
jp
jmp
cli
push
dec
push
jecxz
popf
aam
push
dec
push
mov
sbb
(bad)
(bad)
inc
stos
fcom
sub
xchg
sub
dec
sub
dec
dec
fs
and
and
(bad)
mov
fcmovnb
jbe
fmul
lock
(bad)
(bad)
dec
popf
and
xlat
mov
fs
mov
fsubr
xchg
popf
or
dec
sbb
pop
pop
scas
ss
(bad)
mov
jbe
inc
pop
daa
popa
inc
pop
repnz
mov
or
outs
imul
(bad)
fisttp
lahf
pop
cmp
xor
sub
ins
xchg
sub
jno
dec
cmp
(bad)
(bad)
jmp
(bad)
mov
inc
jmp
pop
mov
ins
inc
test
mov
push
mov
sbb
adc
dec
cmps
adc
fs
in
adc
dec
cli
stos
loope
mov
mov
and
sub
(bad)
(bad)
cmp
adc
or
inc
rcl
in
icebp
and
or
aaa
es
xchg
gs
cli
(bad)
(bad)
inc
pop
and
leave
xor
and
sbb
(bad)
(bad)
out
xor
adc
dec
std
fs
and
mov
fisubr
mov
shl
xchg
clc
cmp
lock
cmc
cmp
add
(bad)
(bad)
(bad)
jmp
jmp
jbe
cld
mov
mov
bound
packsswb
call
fsub
cld
(bad)
(bad)
call
fild
pop
scas
out
fadd
mov
add
adc
pop
jae
xchg
stos
dec
mov
adc
enter
add
popa
scas
in
inc
inc
fist
jmp
in
mov
fwait
cmp
out
mov
adc
cmps
xchg
in
inc
push
pop
push
sbb
cs
outs
xchg
pop
sbb
repnz
jecxz
(bad)
(bad)
mov
xor
aam
leave
popa
pop
and
retf
out
cmp
retf
clc
cmp
mov
lock
or
adc
mov
aad
jmp
push
clc
pop
mov
stc
out
out
jb
xchg
pop
adc
inc
(bad)
fwait
outs
imul
or
push
outs
jns
sub
mov
rol
mov
mov
sahf
mov
xchg
in
and
cdq
int
loope
(bad)
cld
outs
mov
(bad)
and
cmp
xor
inc
fbstp
into
test
jns
jne
(bad)
(bad)
(bad)
cld
sar
push
mul
pop
call
sbb
fnsave
pop
icebp
test
enter
clc
fdivrp
(bad)
(bad)
dec
shl
adc
cmp
lea
pop
cld
enter
pop
fst
dec
shl
adc
mov
out
hlt
mov
pop
jbe
fcomp
test
loopne
or
movs
xlat
ret
or
inc
mov
shr
je
fdivrp
(bad)
(bad)
(bad)
jns
stos
mov
pop
ror
dec
mov
je
(bad)
jbe
mov
add
mov
inc
jg
loope
mov
adc
imul
fild
sub
sbb
jmp
mov
mov
pushf
mov
ficom
scas
(bad)
jge
xor
push
rcr
fs
test
(bad)
(bad)
push
fldenv
test
(bad)
jmp
pop
test
mov
dec
xor
adc
call
fisub
ins
fbld
popf
ret
outs
popf
add
enter
inc
clc
shr
inc
mov
in
adc
and
pushf
mov
imul
xor
mov
adc
push
jle
fist
or
sar
xor
dec
stc
retf
call
sub
push
loopne
retf
inc
mov
repnz
out
shr
(bad)
jmp
cs
xchg
mov
dec
jno
push
push
xchg
not
in
pop
in
jne
(bad)
fld
dec
sub
inc
loop
jb
loop
add
mov
js
cs
(bad)
(bad)
call
add
and
dec
rcl
pause
sahf
adc
and
and
mov
ret
and
rcl
repz
lea
dec
dec
cmp
in
sbb
pop
repz
(bad)
(bad)
push
inc
cmp
aam
(bad)
ds
jns
jmp
push
mov
mov
je
jge
mov
retf
sar
pop
stc
inc
in
inc
pop
fisttp
les
data16
(bad)
dec
xor
ss
sub
or
dec
xor
and
popa
dec
mov
mov
fld
mov
ret
loop
mov
jbe
or
dec
pop
cli
inc
dec
xchg
lahf
mov
fild
(bad)
or
cdq
ret
or
dec
std
(bad)
jmp
inc
cmp
mov
call
shl
mov
fild
cmps
test
rcl
push
xor
cli
jnp
sbb
(bad)
mov
push
sub
jmp
iret
sbb
daa
cmp
jmp
mov
jg
push
loop
pop
add
sub
(bad)
jns
cmp
mov
pop
dec
hlt
jmp
sub
daa
mov
hlt
test
shr
sub
ret
clc
mov
xor
aad
xchg
and
push
test
out
jns
sbb
mov
xor
mov
clc
cmp
jg
ficom
sahf
dec
dec
xor
push
mov
mov
(bad)
(bad)
(bad)
jmp
jl
or
add
leave
ret
sbb
dec
frstor
clc
mov
mov
ins
and
pusha
jmp
mov
mov
add
dec
retf
mov
dec
push
inc
clc
int
stc
push
stos
dec
popf
pop
sbb
and
jns
push
dec
test
ret
cmc
pop
and
dec
lock
(bad)
(bad)
call
stc
ds
(bad)
push
inc
mov
out
dec
xor
ret
mov
xor
addr16
(bad)
(bad)
call
das
movs
ds
adc
push
and
jge
adc
and
js
add
(bad)
(bad)
(bad)
(bad)
clc
push
cdq
dec
(bad)
outs
int
je
fdiv
mov
repz
test
and
and
jmp
add
call
les
and
xchg
sub
adc
mov
add
fstp
dec
fcomp
push
or
bound
mov
xchg
fdiv
(bad)
out
clc
clc
test
call
dec
pushf
fnstsw
push
(bad)
jnp
xchg
jp
popa
icebp
push
(bad)
call
mov
loop
movs
mov
ds
pop
dec
hlt
shl
add
ds
out
mov
sahf
lods
ins
ins
adc
push
imul
and
(bad)
jmp
(bad)
xlat
cdq
stos
jbe
mov
stos
jge
out
lahf
mov
ja
stos
mov
mov
aam
ret
fwait
xchg
cmps
arpl
into
(bad)
in
outs
inc
enter
push
ret
(bad)
dec
pop
ret
jbe
call
pop
(bad)
cld
arpl
jle
mov
cmp
jo
pop
aaa
js
cmps
mov
push
leave
push
stos
push
call
(bad)
in
fwait
(bad)
(bad)
(bad)
call
popf
(bad)
pop
adc
mov
sar
stos
lds
loop
xchg
push
push
rol
(bad)
in
(bad)
dec
rep
pop
sbb
fwait
jns
xchg
or
aaa
icebp
mov
movs
jl
ffree
jno
cmp
inc
cmp
test
mov
fistp
(bad)
jmp
xchg
add
and
(bad)
pop
je
out
and
jecxz
add
sahf
add
push
in
fst
fmul
clc
int3
mov
(bad)
call
bound
pop
xor
pop
pop
push
mov
loope
hlt
jno
or
mov
(bad)
(bad)
(bad)
inc
aam
cwde
fcomp
cmp
outs
pop
mov
jbe
or
pop
and
dec
pushf
or
(bad)
push
jo
lds
in
pop
inc
cmps
movs
push
sbb
jne
je
and
(bad)
jne
jg
enter
sub
xchg
and
cmp
push
(bad)
(bad)
inc
(bad)
adc
fisub
push
jg
mov
adc
mov
jg
add
xchg
je
fsubr
fnstenv
mov
sbb
(bad)
(bad)
dec
sub
mov
dec
and
cdq
in
sbb
dec
cli
mov
xchg
cdq
addr16
jbe
jmp
int3
imul
and
jae
fs
push
aaa
std
jmp
loop
jae
fsub
push
rcr
enter
push
add
cld
iret
ins
shr
ror
(bad)
(bad)
(bad)
dec
add
pop
and
dec
adc
in
jno
daa
movs
shl
push
into
es
pop
and
(bad)
cmp
mov
cmps
push
cmp
cmc
repz
mov
mov
jg
lods
jmp
dec
shl
pop
(bad)
retf
ds
sar
(bad)
(bad)
(bad)
push
mov
or
pushf
xor
sub
dec
shl
js
