push
add
sub
clc
daa
inc
test
inc
test
in
pop
cmps
pop
out
inc
cmp
inc
or
adc
xchg
pop
or
jmp
jbe
sub
or
inc
out
inc
inc
or
enter
enter
xor
das
pop
aaa
cmps
sub
pop
push
cmp
enter
xstore-rng
cmps
pop
in
or
movlps
fiadd
int3
xchg
inc
or
(bad)
xchg
sub
pop
es
jl
outs
stos
in
jne
inc
ficom
sbb
jecxz
cmp
cmps
add
outs
adc
pop
xor
fiadd
in
push
mov
pop
adc
bound
pcmpgtd
inc
add
retf
(bad)
dec
data16
(bad)
imul
add
adc
sar
(bad)
sub
inc
push
add
sar
bound
jb
push
push
fs
(bad)
jecxz
inc
or
lds
dec
enterw
inc
and
(bad)
add
aaa
(bad)
add
sbb
add
enter
add
xor
add
dec
data16
push
cdq
pop
or
cmp
inc
jnp
cmp
out
mov
xchg
mov
inc
pop
jmp
cmc
test
or
xlat
sub
pop
jmp
cmc
test
push
cdq
mov
repnz
jmp
xchg
gs
adc
cwde
mov
jmp
mov
inc
jmp
pcmpgtd
inc
pop
outs
xor
or
inc
or
ror
inc
or
dec
imul
or
cmp
inc
and
sar
imul
dec
stos
leave
jae
inc
add
outs
mov
and
aas
or
xchg
(bad)
sbb
push
out
scas
fmulp
in
scas
mov
popa
sti
or
inc
push
dec
sub
push
inc
and
daa
and
inc
sbb
jmp
dec
sub
pop
es
shr
or
inc
add
jbe
aad
out
imul
cmps
imul
call
sub
femms
xor
sub
dec
sbb
imul
mov
(bad)
add
dec
retfw
(bad)
add
pmulhw
into
rep
leave
je
inc
dec
int3
add
or
inc
inc
rdpmc
retf
jle
or
in
cmc
pcmpgtd
aad
fsincos
loopne
pop
retf
or
jl
mov
sub
addr16
or
stos
xchg
ja
inc
or
fidivr
pcmpgtd
icebp
cdq
retf
popf
mov
push
mov
sub
mov
adc
adc
mov
adc
adc
ds
sub
por
mov
aad
jl
mov
data16
mov
xchg
cmps
add
in
xchg
mov
sbb
mov
test
lock
mov
cmp
or
aaa
adc
pop
fldcw
ins
push
and
shl
sub
or
jmp
lock
mov
inc
add
inc
add
aaa
xchg
cmps
test
lock
jp
mov
jl
jbe
div
mov
lock
add
aaa
xchg
cmps
test
mov
mov
or
out
enter
mov
es
(bad)
movs
push
or
in
(bad)
pop
xor
js
retf
cmp
retf
out
test
dec
call
gs
cdq
ss
xor
or
test
iret
lea
jp
mov
lahf
gs
cdq
ss
cmp
jp
stos
popf
jbe
inc
mov
adc
iret
lea
iret
es
xchg
mov
enter
int3
xor
data16
enter
push
jnp
jno
xchg
test
mov
or
mov
or
and
jb
test
mov
or
mov
cmp
test
test
mov
mov
fadd
add
push
mov
dec
out
mov
(bad)
cdq
add
xor
div
pop
xor
cdq
push
ja
and
dec
xchg
xchg
jnp
pcmpgtd
xchg
mov
dec
lock
mov
mov
mov
inc
mov
inc
cmp
(bad)
repz
cmp
cdq
inc
adc
dec
int3
xor
data16
inc
or
js
pcmpgtd
aad
in
pop
mov
shl
(bad)
jg
cwde
mov
or
cdq
inc
idiv
outs
retf
scas
mov
cmp
inc
jns
test
push
mov
lea
or
lea
test
xchg
xor
mov
pop
pushf
jmp
in
(bad)
jg
cwde
mov
jge
out
(bad)
ja
cwde
mov
jge
out
(bad)
jae
cwde
mov
jge
out
fwait
stos
jmp
mov
or
mov
inc
pop
out
cmps
add
jb
aad
in
push
(bad)
es
inc
inc
cmp
mov
(bad)
repz
mov
sub
enter
nop
into
ins
jbe
or
xchg
test
jp
dec
mov
fistp
retf
movs
and
sbb
mov
dec
outs
test
repz
push
ja
and
(bad)
jecxz
push
jg
cmp
dec
int3
xor
pop
ss
pop
in
push
(bad)
mov
call
movs
retf
push
mov
sub
enter
nop
into
ins
jbe
or
xchg
test
jp
dec
mov
fistp
retf
movs
and
sbb
mov
(bad)
push
inc
cmp
mov
(bad)
repz
inc
idiv
outs
test
push
scas
adc
adc
pop
xor
neg
in
push
xchg
enter
xor
retf
movs
retf
cdq
inc
idiv
lea
dec
outs
dec
cmp
es
enter
std
xchg
push
pop
xchg
test
push
mov
les
data16
push
cmp
dec
int3
xor
pop
ss
pop
in
mov
out
mov
jl
adc
ror
ss
cmp
xor
or
enter
adc
push
xchg
sbb
jle
cdq
adc
push
call
lock
rol
dec
or
xchg
movs
or
retf
cmp
dec
int3
xor
pop
ss
pop
in
push
(bad)
mov
pop
xlat
dec
fmulp
jmp
xchg
mov
mov
dec
aaa
or
test
(bad)
inc
jmp
jns
sbb
pop
or
jmp
pcmpgtd
mov
inc
je
out
push
jnp
mov
retf
cmp
dec
int3
xor
pop
xor
dec
cmp
push
jmp
(bad)
data16
adc
xchg
lds
sbb
jl
outs
enter
xor
rol
in
inc
jl
in
pop
jl
outs
retf
or
imul
inc
adc
dec
int3
xor
data16
enter
push
mov
es
retf
inc
inc
add
inc
jmp
pcmpgtd
(bad)
push
sub
xchg
inc
add
retf
cmps
dec
pop
add
or
mov
jp
adc
and
add
xor
iret
outs
cwde
mov
outs
xor
out
mov
iret
bound
jmp
xchg
add
xchg
sbb
or
add
or
aam
fild
and
mov
es
xchg
adc
jl
push
sbb
cmp
cmps
cmp
inc
and
xor
mov
xor
and
fwait
stos
xlat
out
add
sbb
ror
mov
add
push
test
mov
push
pop
(bad)
addr16
add
or
sar
adc
xchg
lds
sbb
jl
outs
ret
aaa
inc
or
jmp
cdq
inc
add
adc
stos
sbb
push
push
mov
dec
data16
push
out
cdq
mov
js
cdq
rol
mov
(bad)
mov
and
inc
push
addr16
or
ret
xor
mov
test
dec
or
adc
aaa
cdq
adc
xchg
mov
mov
in
jg
imul
add
inc
add
sbb
ror
mov
or
xchg
mov
jge
out
cmp
ror
push
ja
arpl
aaa
dec
xor
inc
aas
aaa
dec
inc
and
add
int3
arpl
imul
inc
adc
mov
out
and
and
jnp
and
add
mov
fs
inc
or
out
jb
enter
enter
arpl
dec
call
xlat
cdq
mov
(bad)
repz
addr16
loopne
femms
and
enter
enter
jle
pcmpgtd
dec
call
es
lahf
jl
cdq
adc
xchg
lds
sbb
jl
repnz
or
push
jg
cmps
ss
enter
dec
mov
enterw
(bad)
pop
lock
mov
add
inc
add
cli
loopne
pcmpgtd
mov
ss
dec
jl
sahf
enter
push
jnp
in
jl
cdq
shl
fiadd
mov
data16
xchg
xchg
jl
cdq
retf
cmp
dec
int3
xor
data16
cld
dec
inc
outs
jo
loopne
aas
or
mov
cld
out
mov
push
inc
or
ret
mov
lahf
inc
add
ss
enter
pcmpgtd
cld
out
mov
jnp
mov
push
inc
in
xchg
jp
enter
pop
or
ja
pop
pop
jbe
or
es
in
push
mov
push
shl
dec
stos
cdq
jl
inc
add
outs
retf
or
inc
or
loope
pcmpgtd
mov
adc
push
inc
add
inc
neg
pop
and
loopne
mov
out
mov
add
inc
mov
out
mov
jnp
mov
aaa
xchg
xchg
ss
in
inc
mov
pop
cmp
xor
xchg
jb
xchg
ret
mov
cmp
mov
or
test
jae
dec
stos
push
bound
push
sbb
jmp
or
jmp
(bad)
sub
or
xchg
mov
jmp
pusha
inc
or
retf
scas
mov
cmp
inc
gs
into
sti
aaa
adc
mov
in
pcmpgtd
add
sub
and
jl
sahf
stos
jmp
not
enter
test
stos
jns
inc
fcom
mov
out
cmps
cmp
inc
or
adc
popf
adc
lock
pcmpgtd
icebp
cdq
retf
movs
inc
mov
test
repnz
mov
arpl
stos
loope
inc
or
jmp
inc
lock
mov
jl
aas
dec
inc
add
pushf
mov
retfw
mov
stos
lods
jle
inc
imul
add
retf
mov
(bad)
jl
cdq
into
push
retf
cdq
mov
js
cdq
rol
jle
lods
and
cmp
fisttp
inc
je
out
(bad)
xor
cwde
mov
arpl
cwde
mov
ror
enter
or
dec
call
clc
test
push
mov
movs
into
push
rcr
and
enterw
mov
jl
pop
inc
or
retf
outs
or
sub
inc
push
mov
loop
lods
and
rol
push
jg
cmps
dec
push
or
ss
setns
inc
lock
mov
jl
mov
retf
cdq
mov
jl
cdq
loopne
scas
and
or
dec
fwait
or
jmp
cmp
scas
cli
loopne
(bad)
enter
aas
or
dec
inc
add
sti
test
and
fdivr
and
fstp
mov
or
jmp
xchg
add
adc
nop
mov
or
add
ds
movs
(bad)
mov
mov
mov
jl
dec
pop
ss
add
(bad)
and
pop
jmp
jle
cwde
mov
ret
mov
inc
add
push
test
bound
scas
daa
inc
or
add
or
ror
dec
push
int3
addr16
or
sub
femms
adc
dec
stos
test
retf
push
jl
inc
imul
or
jmp
xchg
add
adc
add
dec
mov
jnp
test
cmps
cdq
mov
and
inc
out
and
jmp
mov
out
mov
lock
(bad)
xor
fs
dec
data16
ds
mov
jbe
cdq
rol
mov
mov
jecxz
jl
cdq
inc
or
sub
femms
adc
dec
stos
and
retf
push
jl
inc
imul
or
jmp
xchg
add
adc
xchg
dec
mov
jnp
test
cmps
cdq
mov
and
and
and
jmp
mov
out
mov
lock
(bad)
xor
fs
dec
data16
ds
mov
jbe
cdq
rol
mov
mov
jecxz
jl
cdq
inc
or
retf
test
push
scas
cdq
mov
and
ror
adc
dec
stos
xchg
cli
cdq
mov
jl
inc
test
inc
jmp
dec
sub
scas
daa
inc
imul
mov
mov
jnp
test
cmps
cdq
mov
and
sti
out
and
jmp
mov
out
mov
lock
(bad)
xor
pop
jmp
dec
data16
ds
mov
ja
cdq
rol
mov
sahf
gs
out
and
push
mov
mov
adc
cdq
mov
jl
inc
test
inc
add
sub
pmulhw
sub
cwde
mov
xchg
add
lock
mov
jl
aas
test
leave
arpl
aaa
dec
inc
and
add
pxor
inc
mov
stos
cwde
or
add
and
por
pop
lock
mov
jl
cdq
adc
aaa
cdq
adc
xchg
mov
je
inc
push
mov
mov
push
xlat
cdq
mov
jl
inc
retf
out
fwait
adc
add
call
pmulhw
push
lock
mov
retf
pcmpgtd
fistp
(bad)
cmp
cwde
mov
or
ret
sbb
imul
(bad)
and
cwde
mov
push
mov
mov
push
xchg
cdq
mov
pop
lock
mov
aad
out
fwait
je
out
mov
cwde
mov
push
lock
mov
ror
(bad)
adc
cwde
mov
xchg
xor
or
push
jg
cmps
dec
push
xor
add
adc
mov
enter
xchg
or
retf
out
fwait
adc
add
call
por
imul
mov
jl
cdq
adc
aaa
cdq
adc
xchg
mov
dec
or
inc
add
mov
jge
mov
push
rcr
jnp
pop
pop
retf
fisub
pcmpgtd
icebp
cdq
retf
sbb
or
into
push
jmp
mov
imul
mov
aam
out
push
jg
mov
sar
dec
push
imul
mov
shl
cdq
mov
jnp
cwde
mov
add
adc
or
mov
mov
or
jmp
pcmpgtd
jo
and
lock
push
repnz
mov
arpl
into
push
repnz
mov
out
pcmpgtd
inc
sbb
fwait
stos
xlat
out
and
jecxz
jl
cdq
inc
add
push
lahf
cdq
mov
jl
cdq
adc
mov
in
xchg
xchg
inc
jo
jmp
or
cwde
mov
fs
inc
or
out
mov
mov
mov
dec
call
pcmpgtd
es
cdq
mov
jge
inc
push
mov
mov
add
and
or
ss
jle
pcmpgtd
dec
call
pcmpgtd
jo
aas
inc
add
adc
mov
mov
mov
dec
call
pcmpgtd
cmps
cdq
mov
or
sub
(bad)
retf
mov
(bad)
repz
mov
sub
cwde
mov
jge
jmp
add
cwde
mov
jl
cdq
shr
movs
cmp
inc
cmp
into
ss
mov
or
fild
pcmpgtd
jl
cdq
adc
xor
mov
cmp
retf
cdq
mov
(bad)
repz
push
push
inc
or
push
mov
mov
repz
and
or
ss
jle
pcmpgtd
dec
call
pcmpgtd
mov
(bad)
mov
inc
push
mov
mov
xor
mov
icebp
cdq
enter
mov
jl
inc
retf
out
fwait
stos
xlat
out
add
call
sldt
outs
cdq
mov
dec
pcmpgtd
mov
mov
pop
iret
inc
add
adc
mov
jo
cdq
rol
test
xchg
sbb
ret
ins
inc
or
inc
mov
mov
mov
jmp
lock
mov
jge
ss
out
and
push
mov
stos
movs
gs
add
jb
push
repnz
mov
ret
(bad)
pop
inc
cmp
push
neg
pop
sahf
pcmpgtd
and
jl
cdq
adc
mov
mov
pcmpgtd
inc
add
push
mov
sub
out
and
push
mov
stos
dec
data16
add
jbe
jo
and
mov
(bad)
jl
cdq
inc
test
cwde
mov
aad
out
fwait
je
out
(bad)
fcomi
cwde
mov
sub
cwde
mov
jge
pop
(bad)
sub
cwde
mov
jl
in
(bad)
daa
lock
mov
aad
in
(bad)
pop
lock
mov
aad
cdq
(bad)
outs
lock
mov
jge
pop
(bad)
outs
lock
mov
jl
in
jae
cwde
mov
push
repnz
mov
or
mov
xchg
jmp
icebp
cdq
retf
jecxz
jl
cdq
adc
aas
cdq
adc
jl
cdq
inc
test
cwde
mov
aad
in
push
lock
mov
push
fistp
jae
pop
outs
enter
mov
jl
outs
enter
mov
jl
outs
retf
mov
mov
or
cdq
adc
jl
cmp
or
or
jmp
rol
and
ret
lar
or
inc
shr
or
inc
add
jb
aad
out
es
cmps
mov
bound
test
repz
or
push
mov
or
dec
jmp
data16
xor
cdq
sar
adc
jg
cdq
mov
(bad)
out
addr16
or
push
arpl
in
es
lahf
cdq
outs
sahf
inc
or
retf
cwde
retf
(bad)
icebp
inc
dec
call
push
test
or
inc
adc
movs
inc
sbb
rcr
adc
sub
or
jmp
rol
and
and
ret
(bad)
inc
jmp
pcmpgtd
inc
pop
mov
int3
xor
data16
push
mov
out
mov
(bad)
out
test
test
sub
ret
pcmpgtd
jae
xchg
retf
inc
pop
sbb
inc
add
pop
fadd
pcmpgtd
cmps
pop
test
pop
inc
outs
xchg
daa
inc
xchg
inc
inc
or
fcmovb
punpckldq
pxor
ret
xchg
daa
inc
mov
dec
inc
add
cmp
jl
inc
mov
cdq
addr16
lahf
rol
or
add
fs
xor
aaa
aaa
dec
data16
(bad)
pop
arpl
bound
or
inc
xchg
stc
add
(bad)
dec
fwait
nop
daa
inc
ret
stc
addr16
mov
or
inc
ret
xchg
daa
inc
cmp
outs
xchg
daa
inc
or
fadd
jge
fadd
pxor
ja
mov
inc
jl
pop
fadd
jg
mov
cmp
pop
sbb
push
test
gs
or
ret
mov
stc
add
dec
data16
lahf
es
push
cdq
mov
sbb
inc
test
gs
or
ret
mov
stc
add
lock
mov
pop
stc
add
iret
(bad)
mov
inc
outs
add
pop
sbb
dec
and
add
jg
mov
pop
stc
add
iret
(bad)
test
xchg
retf
imul
inc
inc
or
inc
or
hlt
jge
cdq
mov
pop
stc
add
iret
(bad)
retw
imul
dec
inc
inc
or
fcmovb
pcmpgtb
jg
mov
xor
jnp
dec
retfw
xchg
retf
imul
add
addr16
sub
inc
mov
adc
retf
out
test
add
ret
stos
bound
inc
and
sti
add
or
ret
lea
xchg
daa
inc
or
rol
jg
loop
xchg
daa
inc
or
fadd
jg
mov
or
push
inc
add
rol
(bad)
data16
out
inc
or
dec
fwait
nop
daa
inc
mov
pcmpgtd
dec
dec
in
inc
and
add
scas
and
mov
sbb
add
ins
cmp
lock
(bad)
adc
inc
xor
dec
pcmpgtd
xor
rol
or
add
cdq
inc
idiv
(bad)
scas
push
dec
inc
xchg
stc
add
aaa
stc
add
xchg
add
iret
(bad)
adc
cmps
cs
xor
aaa
aaa
dec
data16
pop
stc
add
pcmpgtd
(bad)
daa
leave
sub
mov
(bad)
out
test
data16
pcmpgtd
dec
popf
dec
xor
pmulhw
mov
inc
add
retf
retw
(bad)
hlt
es
arpl
dec
retw
and
add
push
js
out
or
dec
and
add
dec
data16
adc
jb
inc
neg
ds
adc
add
outs
rol
pcmpgtb
xchg
ret
mov
stc
add
(bad)
out
test
(bad)
daa
leave
sub
cmc
xchg
sti
add
dec
pushf
ret
(bad)
cmc
arpl
mov
popa
rol
out
mov
(bad)
out
test
sub
ret
pcmpgtd
or
push
ret
paddsb
or
sbb
mov
sub
inc
(bad)
lahf
es
icebp
aam
lods
fsubr
inc
add
push
ret
pcmpgtd
or
push
ret
paddsb
or
and
mov
sub
inc
(bad)
lahf
es
icebp
aam
inc
idiv
dec
fwait
and
test
cmps
add
push
scas
adc
adc
pop
xor
int3
jnp
push
cmp
and
clc
or
repz
test
test
dec
stos
cmc
push
inc
or
push
push
cmp
adc
mov
inc
sub
cmp
adc
jle
inc
sub
mov
data16
xchg
mov
cmp
adc
pop
cmp
lods
xchg
faddp
femms
or
dec
data16
dec
cmp
lods
push
fadd
femms
sbb
imul
inc
sub
dec
int3
xor
data16
clc
pop
cmp
or
addr16
or
cdq
inc
idiv
fadd
add
pop
and
test
out
inc
or
fwait
adc
add
mov
dec
into
retf
mov
inc
or
shl
data16
mov
rol
or
pop
xchg
test
xlat
addr16
or
push
pop
push
inc
xor
mov
inc
and
dec
retfw
cdq
inc
idiv
(bad)
inc
or
sti
call
in
out
push
pop
xchg
inc
or
cmp
jmp
aas
adc
cmp
inc
cmp
into
(bad)
out
sub
dec
adc
sbb
fwait
mov
out
or
cli
adc
por
daa
pop
or
jmp
or
and
pop
cdq
ss
and
shl
stos
and
inc
jl
adc
ror
inc
jl
(bad)
sub
gs
mov
loop
data16
dec
dec
inc
je
out
push
adc
mov
jnp
add
lock
push
dec
adc
sbb
push
addr16
ret
inc
inc
adc
dec
int3
xor
data16
data16
enter
push
xchg
mov
(bad)
shr
push
jg
and
dec
xchg
enter
push
jnp
add
(bad)
jecxz
push
imul
and
(bad)
div
into
(bad)
out
mov
push
dec
xchg
adc
lock
ss
jae
sbb
enterw
inc
add
push
ret
pcmpgtd
rcr
inc
loop
jns
jnp
sahf
retf
arpl
aaa
dec
mov
or
jl
jbe
ret
movs
stc
pcmpgtd
enter
pop
out
cmps
add
push
aad
in
mov
test
mov
inc
cmp
xor
lock
cmp
xor
lock
cmp
xor
lock
cmp
xor
lock
add
dec
or
jmp
or
push
mov
dec
cdq
inc
mov
bound
mov
inc
mov
imul
or
sub
xor
add
retf
or
retf
mov
mov
adc
or
in
add
push
xchg
movs
ss
xchg
cmc
xchg
pop
stos
or
fld
rol
jl
cmps
dec
push
or
aas
dec
adc
cmp
add
push
jl
mov
push
sbb
aas
dec
adc
out
pop
or
push
jnp
scas
mov
xlat
sbb
inc
jns
mov
fbld
jnp
mov
dec
xchg
enter
pop
or
mov
(bad)
sti
out
push
xchg
inc
and
dec
xor
sbb
jg
fstp
add
dec
cdq
inc
push
cdq
mov
aaa
dec
retw
mov
xchg
inc
test
out
ret
mov
xchg
jg
or
jbe
mul
stos
xchg
rol
xor
aaa
xchg
xor
inc
or
dec
or
in
xchg
jo
pop
or
push
push
pop
pop
inc
add
(bad)
rol
inc
xchg
push
inc
or
retf
out
test
in
or
mov
xor
test
add
bound
pusha
jle
pcmpgtd
or
or
lods
mov
into
xlat
sbb
inc
jns
mov
fbld
add
(bad)
retf
in
push
xchg
and
xchg
sahf
shr
push
jnp
jb
or
inc
add
pop
inc
neg
mov
cmp
jnp
mov
xor
div
out
mov
mov
xchg
cmc
xchg
pop
jle
add
or
aaa
test
cdq
inc
or
pop
imul
push
push
pop
jne
xor
test
or
inc
les
dec
add
cmp
dec
int3
xor
data16
mov
add
push
movlps
mov
xor
or
xor
and
test
xlat
(bad)
data16
inc
idiv
xor
in
fs
rol
xorps
shl
loop
jl
aas
mov
add
inc
pushf
xor
fs
jnp
shl
data16
xchg
push
test
call
dec
call
adc
inc
popf
and
add
adc
xchg
or
addr16
sbb
push
ja
and
test
mov
pop
gs
xchg
arpl
or
cdq
stos
fucomip
mov
add
(bad)
retf
mov
pop
popf
push
in
push
jnp
jbe
xchg
add
imul
pop
popf
or
add
(bad)
retf
mov
jle
pcmpgtd
pop
imul
xor
and
imul
jl
mov
mov
out
cmps
cmp
inc
and
sbb
out
mov
pusha
rcr
sbb
(bad)
xor
cdq
inc
inc
mov
rol
out
pusha
rcr
dec
xor
lock
xchg
add
mov
pushf
jl
data16
nop
add
(bad)
jo
cdq
mov
aas
dec
inc
test
mov
lock
retf
mov
dec
push
add
aas
dec
data16
aas
inc
add
xchg
imul
jl
lods
pop
push
add
cmp
adc
fs
mov
push
rcl
ds
add
xchg
inc
rol
(bad)
(bad)
jo
cdq
mov
jo
cdq
mov
mov
pcmpgtd
cdq
mov
ins
lock
inc
mov
cdq
and
jg
das
test
sbb
inc
mov
cdq
and
push
xchg
pop
inc
add
mov
or
inc
mov
mov
cdq
retf
mov
aaa
aaa
dec
enterw
mov
push
xchg
inc
or
push
mov
xchg
pcmpgtd
imul
shl
movs
add
movs
inc
xchg
pcmpgtd
sti
mov
mov
sbb
pcmpgtd
mov
scas
ins
lock
inc
push
inc
and
or
imul
cdq
mov
jl
mov
cdq
rol
push
jg
cmps
aaa
loope
ret
ret
pop
lock
inc
or
lea
mov
out
cdq
inc
in
and
push
jg
push
stc
add
bound
mov
lods
jl
adc
mov
xor
cdq
mov
mov
inc
or
lea
or
mov
cmc
mov
ins
mov
push
jecxz
mov
add
jl
inc
mov
lock
jl
adc
ror
neg
cdq
mov
and
inc
or
cmc
push
cld
mov
sbb
adc
retf
mov
lock
inc
or
cmps
mov
push
cmps
mov
or
ja
bndldx
(bad)
ja
cdq
mov
pop
into
pop
out
fs
into
xrelease
add
mov
lock
inc
xchg
xor
arpl
aaa
dec
retw
ds
mov
sbb
push
fild
and
adc
and
cdq
mov
xchg
inc
add
rol
inc
or
in
(bad)
and
cdq
mov
jl
in
lahf
or
retf
mov
jecxz
lock
enter
mov
push
lahf
mov
out
pop
lock
enter
mov
pop
lock
sub
lock
adc
pushf
jl
mov
aam
enterw
mov
pop
lock
rol
push
mov
jecxz
pop
lock
ret
ds
mov
sub
inc
mov
mov
mov
test
sti
pop
lock
sub
sub
call
jl
adc
ror
cmc
push
cld
mov
cmp
push
rcr
jae
dec
dec
xor
lock
mov
mov
call
xchg
pcmpgtd
imul
inc
add
dec
inc
add
and
pop
dec
pop
xor
jecxz
ins
lock
dec
xor
pcmpgtd
mov
loop
or
stos
cwde
push
inc
or
in
push
xchg
inc
or
or
mov
mov
pop
lock
inc
or
out
mov
(bad)
pop
inc
mul
out
mov
out
ret
mov
jmp
stos
or
mov
out
ret
mov
jmp
stos
xchg
sub
aaa
dec
dec
xor
lock
mov
daa
aad
mov
jl
addr16
xor
pcmpgtd
xchg
test
or
inc
add
cdq
into
(bad)
aas
(bad)
retf
mov
retf
imul
jl
sahf
push
test
xchg
dec
pop
(bad)
rcr
out
out
and
cdq
mov
and
cdq
mov
aas
sbb
cdq
jl
mov
jle
pcmpgtd
jp
ret
mov
pcmpgtd
popf
(bad)
pop
jle
pcmpgtd
jp
ret
mov
pcmpgtd
mov
inc
cmp
push
lods
mov
cmp
(bad)
sbb
jnp
dec
xor
lock
jl
rcl
cmc
neg
ret
ds
mov
add
stos
xchg
lods
jl
enterw
mov
or
cmps
stos
or
call
lock
inc
xchg
lock
ins
lock
ret
mov
jge
mov
and
mov
jo
cdq
mov
jo
cdq
mov
mov
pcmpgtd
popf
mov
dec
int3
xor
data16
enter
push
jnp
push
mov
xchg
imul
dec
cdq
inc
push
jb
into
mov
fild
xor
out
dec
sahf
retf
out
push
dec
clc
add
(bad)
imul
ds
adc
dec
data16
mov
inc
jo
jmp
push
adc
dec
data16
test
inc
jo
out
jnp
pop
inc
or
ret
(bad)
lock
add
in
leave
add
push
jge
and
jp
ret
(bad)
lock
or
test
repnz
and
inc
or
cmc
(bad)
repnz
pop
xchg
xlat
imul
add
(bad)
retw
(bad)
lock
xor
pcmpgtd
ins
imul
or
sar
inc
add
inc
mov
in
test
mov
jnp
sbb
dec
cdq
inc
mov
addr16
in
test
push
jl
in
push
jnp
movs
push
xchg
mov
cmps
iret
inc
xor
inc
or
inc
add
inc
mov
inc
test
inc
add
inc
add
inc
add
dec
mov
mov
push
or
cmc
(bad)
repz
pop
xchg
ficom
inc
add
inc
push
push
out
jg
adc
add
jmp
xor
pcmpgtd
xchg
rol
jl
cmp
dec
int3
xor
pop
xor
jp
clc
xor
mov
push
or
mov
jmp
pcmpgtd
jb
scas
mov
cmp
inc
in
ret
mov
leave
and
lea
mov
fwait
mov
out
sbb
cmp
cmps
cmp
inc
inc
and
adc
mov
pop
stos
xchg
mov
inc
es
retf
adc
lock
mov
jl
ss
xchg
pop
inc
push
mov
jl
ss
mov
inc
add
jbe
jnp
sahf
retf
nop
sbb
(bad)
movs
push
or
xor
adc
loopne
dec
or
inc
jmp
gs
sbb
push
movs
push
or
in
(bad)
pop
xor
cmps
cmp
xchg
jb
addr16
or
inc
jmp
pcmpgtd
lock
adc
add
pop
add
inc
test
inc
inc
or
xchg
movs
or
retf
cmps
test
gs
aaa
inc
add
sub
out
adc
mov
sub
jnp
enter
push
ja
pusha
into
(bad)
imul
push
ja
adc
aad
scas
adc
pop
inc
or
test
xchg
sbb
push
scas
adc
adc
pop
xor
mov
dec
imul
enter
(bad)
inc
and
and
or
cmp
stc
pop
inc
or
out
retf
inc
add
cdq
xchg
cmps
test
gs
mov
inc
add
jl
out
or
mov
push
pop
call
out
adc
dec
call
dec
adc
aaa
inc
or
adc
xor
sbb
or
in
(bad)
pop
xor
xor
ret
sub
inc
cmp
retf
out
test
femms
ret
or
sub
addr16
or
ss
xchg
or
test
not
retf
cwde
mov
push
(bad)
inc
aad
adc
(bad)
inc
push
dec
call
add
stos
mov
test
push
inc
inc
mov
es
(bad)
movs
push
or
aaa
adc
pop
in
ss
and
add
int3
movs
pcmpgtd
xchg
inc
mov
jb
aas
ja
cdq
ss
addr16
mov
ror
retw
retf
add
dec
stos
jmp
retf
jbe
pop
in
dec
xor
cmp
adc
dec
pop
push
(bad)
jae
jb
in
ret
mov
leave
bound
dec
pop
ds
jae
adc
and
adc
test
mov
or
sbb
push
scas
adc
adc
pop
xor
fiadd
in
ss
push
sbb
xchg
and
imul
inc
adc
push
xor
sub
out
xor
or
push
inc
mov
ror
data16
dec
call
repz
or
in
scas
pop
xor
(bad)
xchg
and
or
or
push
cmp
inc
pandn
pcmpgtd
or
mov
inc
(bad)
sbb
jp
and
add
or
test
mov
and
dec
mov
push
jl
rol
xchg
in
popf
push
and
test
outs
or
inc
add
inc
add
inc
test
push
pop
rol
add
inc
mov
and
mov
ret
(bad)
icebp
fs
mov
cmp
pop
clc
test
(bad)
xlat
out
or
push
xor
in
push
mov
rcl
fisttp
sub
inc
mov
movs
inc
(bad)
jmp
fwait
adc
or
mov
dec
and
scas
mov
out
push
push
push
and
xor
pusha
enter
hlt
ror
dec
xchg
mov
movs
inc
(bad)
jmp
push
pop
rol
mov
dec
stos
fbld
test
cmps
push
xlat
out
sbb
cmp
rcl
lahf
idiv
sbb
inc
adc
cli
sti
adc
adc
div
lods
lahf
not
adc
outs
rcl
lahf
test
lahf
not
adc
rcl
lahf
test
lahf
not
adc
rcl
lahf
idiv
lahf
not
adc
rcl
lahf
idiv
cmp
mov
les
movs
add
mov
aaa
lahf
lahf
not
adc
outs
rcl
lahf
test
or
rcl
ss
outs
lahf
not
adc
rcl
lahf
mul
xchg
jl
push
rcl
lahf
not
in
inc
or
rcl
lahf
not
xchg
add
dec
ror
pop
not
adc
not
or
rcl
lahf
push
push
adc
(bad)
adc
not
jmp
not
adc
not
add
rcl
lahf
adc
loop
not
adc
fwait
mov
pop
and
push
cmp
inc
les
movs
add
not
adc
es
adc
rcl
lahf
neg
lahf
not
adc
aaa
rcr
loop
ret
psadbw
pop
lahf
not
adc
cmps
rcl
lahf
div
lahf
not
adc
rcl
lahf
test
lahf
not
adc
xchg
rcl
lahf
not
adc
not
adc
jno
adc
push
rcl
lahf
test
not
adc
xchg
rcl
lahf
idiv
cmp
inc
adc
not
adc
retf
not
adc
cmps
rcl
lahf
div
lahf
not
adc
rcl
lahf
test
lahf
not
adc
xchg
rcl
lahf
not
adc
not
adc
movs
add
ds
rcl
lahf
test
not
adc
xchg
rcl
lahf
mul
adc
(bad)
js
repnz
add
cmps
add
jle
aad
in
push
mov
dec
inc
dec
call
repz
add
dec
xchg
inc
and
inc
or
fwait
cmp
stos
sbb
xchg
js
adc
dec
pushf
inc
push
pcmpgtd
(bad)
jecxz
mov
test
inc
mov
dec
xchg
sbb
lahf
retf
and
inc
xchg
mov
cmp
mov
(bad)
repz
inc
popf
xor
xor
xchg
cmc
xchg
add
push
jns
lods
retf
xchg
add
inc
popf
xor
or
addr16
add
push
mov
out
push
add
repnz
pcmpgtd
mov
inc
or
push
jno
mov
int
dec
xor
xlat
addr16
and
mov
ss
or
inc
jmp
pop
out
fwait
cmp
stos
stc
inc
inc
add
inc
rol
ss
pop
inc
sub
jae
rol
pop
test
cmp
or
in
scas
pop
xor
into
jo
cwde
mov
stos
in
inc
inc
cmp
inc
inc
pop
out
xor
inc
cmc
imul
fistp
retf
xor
pcmpgtd
test
cmps
stos
(bad)
or
xchg
jl
outs
stos
cmp
cdq
mov
inc
push
cmps
dec
pop
and
inc
add
ds
into
add
dec
pushw
into
inc
pxor
add
ds
into
add
dec
retfw
pop
xchg
dec
data16
into
sub
gs
add
add
out
push
or
xchg
pxor
jg
jno
inc
addr16
inc
(bad)
repz
push
push
mov
inc
mov
in
jg
(bad)
mov
dec
inc
xchg
fild
xor
mov
ds
retfw
lea
lock
retf
out
or
gs
jnp
jae
ds
data16
mov
mov
ror
inc
pop
mov
inc
mov
out
push
or
push
pop
out
push
or
ds
add
mov
push
into
test
fsubr
jle
mov
inc
add
js
or
add
pcmpgtd
(bad)
xlat
mov
pcmpgtd
(bad)
xlat
imul
xor
cmps
mov
mov
gs
mov
inc
or
gs
inc
mov
inc
shl
xchg
or
xchg
pxor
ja
jno
push
xchg
push
push
mov
inc
mov
in
ja
(bad)
mov
dec
inc
xchg
fild
xor
mov
(bad)
(bad)
xchg
ds
retfw
lea
jmp
jae
jae
ds
data16
mov
mov
scas
mov
ror
inc
pop
mov
inc
mov
xchg
add
fiadd
ror
dec
push
mov
inc
or
pop
retf
pop
xchg
dec
dec
xor
test
addr16
inc
or
mov
dec
mov
pcmpgtd
(bad)
loopne
xchg
push
imul
or
inc
(bad)
stos
cs
mov
and
and
inc
or
mov
outs
or
mov
sub
lock
imul
xor
cmps
imul
inc
sbb
retf
pcmpgtd
dec
lea
mulps
clc
test
(bad)
fucomi
sbb
cmp
cmps
add
jle
or
adc
sub
cli
pcmpgtd
lock
retf
arpl
aaa
dec
jmpw
data16
sahf
lock
jb
xchg
inc
cmp
sub
xchg
pop
out
xor
test
lahf
pop
stos
(bad)
fiadd
out
mov
jl
mov
ins
imul
ds
mov
loope
aaa
retf
mov
pushf
lods
retf
out
add
xor
push
jl
in
push
jl
outs
xor
jl
cdq
inc
imul
add
dec
inc
mov
jl
push
test
or
mov
push
inc
push
mov
sub
scas
and
jmp
mov
mov
imul
inc
and
and
and
or
add
mov
stos
push
dec
inc
or
cdq
mov
ss
test
jmp
repnz
mov
or
mov
ss
fwait
mov
or
mov
(bad)
out
test
mov
lds
mov
rol
sbb
dec
data16
push
lock
mov
leave
pcmpgtd
push
hlt
fwait
mov
pop
dec
data16
push
lock
mov
or
stos
ror
inc
cmp
or
out
mov
xchg
add
femms
mov
into
push
lock
mov
or
stos
mov
or
push
ds
dec
sub
add
or
or
sbb
or
in
(bad)
pop
xor
jp
cld
mov
cld
outs
or
dec
mov
idiv
xchg
movs
or
retf
add
rol
sub
or
jmp
lock
cs
inc
add
ret
mov
xchg
mov
jmp
jp
mov
retf
ret
pop
inc
xor
mov
adc
dec
int3
xor
pop
(bad)
test
aaa
ret
daa
inc
xor
push
imul
inc
and
jl
jb
neg
cdq
ss
lock
cmp
or
or
aaa
adc
call
sahf
mov
xchg
mov
jmp
pop
cdq
ss
lock
jp
stos
test
inc
add
jle
dec
int3
xor
pop
ss
mov
lods
leave
xchg
into
(bad)
div
into
(bad)
repz
(bad)
inc
jmp
jp
mov
retf
pcmpgtd
jnp
jb
in
mov
xchg
lock
setns
xchg
lock
add
aaa
(bad)
lock
cmp
test
xchg
mov
retf
pcmpgtd
dec
cmp
add
jbe
aam
adc
dec
jle
or
cld
cmp
add
cmp
add
into
(bad)
repz
setns
(bad)
lock
cli
and
push
cmps
aaa
xchg
cmps
test
and
rcr
inc
jmp
lock
add
aaa
(bad)
lock
cmp
test
lock
add
push
fwait
in
sti
outs
sbb
je
out
push
jae
mov
push
or
aaa
adc
pop
fxam
in
jle
inc
dec
add
mov
imul
inc
(bad)
pcmpgtd
imul
mov
or
(bad)
mov
(bad)
not
ins
mov
es
sub
inc
jmp
femms
and
stos
(bad)
inc
and
mov
or
dec
inc
jp
jb
in
mov
and
add
jg
pusha
ret
jl
adc
inc
mov
xor
sbb
out
or
inc
inc
push
sbb
pushf
ror
adc
pop
xor
dec
or
test
repz
or
in
push
jg
movs
push
xchg
mov
add
pop
dec
mul
out
mov
jae
mov
stos
(bad)
inc
add
push
jnp
mov
inc
or
fs
mov
mov
les
mov
ret
mov
xchg
dec
neg
inc
add
(bad)
cmps
pcmpgtd
pop
dec
lea
jmp
shl
ret
pxor
pcmpgtd
jnp
retf
mov
stos
std
dec
inc
or
retf
movs
retf
out
fwait
xor
inc
mov
cmp
or
in
xchg
pop
xor
push
outs
test
inc
ss
push
inc
sbb
pcmpgtd
(bad)
imul
test
in
mov
add
and
mov
stc
lea
mov
pop
dec
inc
jnp
dec
xor
jle
inc
mov
pop
ss
add
inc
or
test
icebp
inc
push
icebp
imul
cmp
xchg
mov
loop
out
mov
xor
mov
(bad)
jecxz
xchg
add
pop
adc
jb
adc
push
mov
cmp
pcmpgtd
inc
sbb
mov
(bad)
icebp
pop
push
jnp
leave
enter
sbb
or
fimul
or
inc
rcr
std
iret
dec
call
sti
cdq
mov
outs
lock
mov
jl
cdq
adc
stos
sbb
cdq
mov
inc
xchg
dec
pop
jp
jb
out
dec
or
(bad)
jnp
cwde
mov
imul
stos
xchg
add
inc
jl
jb
int
inc
or
ficomp
pcmpgtd
xchg
xchg
jl
cdq
enter
mov
jl
cdq
jno
call
mov
pop
or
imul
add
ret
adc
lock
or
and
add
(bad)
out
test
dec
outs
retf
cdq
mov
dec
lock
mov
xchg
xchg
jl
cdq
inc
jns
mov
lock
rol
push
pop
dec
mov
mov
(bad)
pcmpgtd
inc
pop
push
or
ss
mov
or
xchg
pandn
pcmpgtd
je
in
xchg
sub
and
jl
call
pcmpgtd
inc
pop
out
mov
(bad)
out
test
and
mov
inc
or
mov
mov
(bad)
pcmpgtd
loopne
inc
sbb
lahf
adc
mov
mov
mov
out
pop
or
xchg
pandn
pcmpgtd
je
in
xchg
sub
and
jl
call
pcmpgtd
inc
pop
push
je
dec
mov
cdq
mov
or
xchg
pandn
pcmpgtd
je
in
xchg
sub
and
jl
call
pcmpgtd
inc
pop
mov
(bad)
pcmpgtd
mov
inc
sbb
lahf
sar
pusha
imul
xor
mov
pop
in
(bad)
jg
cwde
mov
ror
stos
in
inc
add
jbe
imul
push
push
pop
dec
enterw
mov
pop
dec
adc
and
mov
sbb
pcmpgtd
mov
inc
sbb
lahf
sar
push
jmp
xchg
xor
mov
ror
add
outs
sub
mov
mov
data16
test
pcmpgtd
mov
inc
sbb
lahf
sar
push
jmp
xchg
xor
mov
mov
inc
add
outs
sub
mov
mov
pop
mov
ror
cli
mov
inc
sbb
lahf
sar
pusha
imul
inc
or
mov
pop
in
(bad)
jg
cwde
mov
ror
stos
sbb
retf
jbe
mul
inc
je
out
(bad)
dec
lock
mov
ror
cli
imul
sbb
lahf
adc
repnz
popf
jl
cdq
adc
bound
popf
jl
cdq
adc
enter
mov
pop
dec
adc
and
arpl
and
inc
or
mov
mov
ror
cli
loopne
inc
sbb
lahf
adc
mov
mov
mov
out
add
xchg
mov
retf
xchg
add
pcmpgtd
je
in
xchg
sub
and
jl
call
pcmpgtd
inc
pop
mov
mov
inc
sbb
lahf
sar
push
jmp
mov
mov
imul
stos
and
add
xchg
mov
nop
addr16
mov
jg
cwde
mov
or
or
push
aam
dec
mov
in
(bad)
jg
cwde
mov
ror
stos
std
dec
inc
add
jb
fisttp
inc
cmp
xchg
mov
nop
lods
popf
ror
idiv
cwde
mov
or
xor
mov
mov
arpl
mov
jl
add
out
add
pcmpgtd
je
in
xchg
stos
or
inc
adc
mov
jmp
mov
mov
inc
pop
in
mov
push
inc
add
data16
int3
push
inc
inc
mov
jl
retw
adc
cmp
push
lock
mov
jle
pop
(bad)
jnp
cwde
mov
inc
lock
mov
jle
imul
cmp
xchg
mov
or
fistp
pcmpgtd
int3
jecxz
or
add
retf
mov
inc
xor
adc
push
mov
inc
xor
adc
data16
inc
or
cmp
retf
cdq
mov
push
iret
cdq
mov
jl
cdq
ret
or
dec
add
mov
jl
cdq
mov
or
mov
jl
cdq
adc
imul
ret
rol
mov
mov
inc
sbb
lahf
sar
push
jmp
mov
mov
popf
dec
inc
add
outs
stos
pop
dec
inc
cmp
xchg
mov
nop
lods
popf
ror
idiv
cwde
mov
or
or
mov
ret
pcmpgtd
mov
inc
sbb
lahf
sar
push
jmp
xchg
xor
mov
dec
dec
inc
add
outs
ret
cdq
mov
xor
mov
icebp
cdq
enter
mov
jl
cdq
dec
add
jecxz
jl
cdq
retf
or
iret
cdq
mov
clc
push
inc
or
retf
cdq
mov
or
inc
add
jg
pcmpgtd
jae
xchg
retf
and
fxsave
ss
jl
cdq
dec
add
inc
add
push
jecxz
mov
jmp
mov
mov
repnz
adc
es
or
jle
in
jl
out
or
mov
ds
cdq
mov
jae
mov
mov
push
leave
cdq
mov
ja
fwait
mov
or
(bad)
ja
fwait
mov
jl
in
xchg
cdq
mov
jl
adc
mov
in
(bad)
jg
cwde
mov
ror
stos
and
retf
jle
add
add
xchg
mov
nop
cmp
cdq
idiv
cwde
mov
or
or
mov
mov
pcmpgtd
clc
lahf
sar
push
jmp
mov
mov
stc
xor
add
outs
stos
mov
inc
cmp
xchg
mov
nop
addr16
mov
jg
cwde
mov
or
jle
mov
inc
dec
jo
xor
mov
icebp
cdq
into
push
pcmpgtd
lock
mov
jl
in
pop
cdq
dec
inc
add
sar
cdq
sub
mov
mov
data16
cmp
inc
sbb
lahf
sar
push
jmp
mov
mov
popa
xor
add
outs
stos
sbb
add
xchg
mov
nop
lods
popf
ror
idiv
cwde
mov
or
or
out
test
pop
inc
xor
mov
mov
arpl
mov
jl
jmp
addr16
popf
ror
idiv
cwde
mov
or
xor
mov
mov
mov
pcmpgtd
clc
lahf
adc
mov
mov
mov
out
jge
pmulhw
or
dec
or
fidiv
mov
(bad)
and
jl
call
pcmpgtd
inc
pop
out
cwde
and
pop
inc
xor
mov
mov
pop
dec
mov
cdq
mov
or
xchg
pandn
pcmpgtd
je
in
xchg
sub
and
jl
call
pcmpgtd
inc
pop
mov
mov
pcmpgtd
clc
lahf
sar
pusha
imul
xor
mov
pop
in
(bad)
jg
cwde
mov
ror
stos
cmc
xor
add
jbe
stos
shl
jl
call
pcmpgtd
inc
pop
out
mov
(bad)
out
test
pop
inc
xor
mov
mov
arpl
mov
jl
cmp
pmulhw
ror
idiv
cwde
mov
or
xor
mov
mov
arpl
mov
jl
inc
jle
pmulhw
ror
idiv
cwde
mov
or
or
test
pcmpgtd
clc
lahf
sar
push
jmp
xchg
xor
mov
xor
add
outs
into
push
rcr
(bad)
jg
cwde
mov
ror
stos
and
retf
jbe
add
add
xchg
mov
nop
addr16
mov
jg
cwde
mov
or
xor
mov
adc
inc
add
outs
stos
int
inc
cmp
xchg
mov
nop
addr16
mov
jg
cwde
mov
or
cmp
retf
cdq
mov
cdq
xor
cmp
gs
adc
test
test
mov
jmp
mov
dec
mov
pop
mov
pcmpgtd
clc
lahf
sar
push
jmp
xchg
xor
mov
lea
inc
add
outs
sub
and
jl
call
pcmpgtd
inc
pop
mov
mov
pcmpgtd
clc
lahf
sar
push
jmp
xchg
xor
mov
push
xor
inc
add
outs
ret
and
out
js
pandn
pcmpgtd
je
in
xchg
stos
stc
xor
inc
cmp
adc
mov
jmp
mov
xor
pcmpgtd
inc
pop
push
xchg
pop
dec
mov
cdq
mov
or
xchg
gs
pcmpgtd
jl
outs
stos
xor
mov
jb
inc
jl
call
pcmpgtd
add
adc
lock
ss
mov
or
imul
fwait
mov
xor
mov
and
inc
or
addr16
leave
xor
inc
or
cmp
or
out
mov
inc
aam
das
inc
mov
mov
jnp
cdq
mov
jl
lea
mov
in
sahf
ror
(bad)
jl
cdq
mov
or
mov
jmp
dec
data16
push
lock
mov
or
stos
je
cdq
mov
(bad)
lock
(bad)
lock
inc
icebp
mov
inc
jmp
mov
sahf
ror
inc
or
stos
push
call
add
femms
test
dec
sub
xchg
arpl
loopne
or
pop
out
cmps
add
repnz
or
adc
cmp
mov
add
enterw
jnp
add
add
addr16
fwait
mov
or
arpl
pcmpgtd
push
sbb
jnp
mov
dec
or
in
xchg
or
jmp
or
fwait
mov
mov
retfw
fwait
mov
jle
cdq
stos
movs
cmp
or
enter
mov
xchg
out
(bad)
sbb
cdq
mov
or
xor
or
cdq
mul
repnz
mov
add
mov
jl
xchg
paddsw
mov
into
xlat
add
fwait
mov
add
(bad)
or
cdq
mov
or
inc
push
dec
stos
cmp
mov
mov
outs
add
jmp
mov
mov
xor
push
inc
sbb
mov
push
inc
push
mov
mov
sub
and
jmp
mov
inc
or
rol
xor
xor
mov
(bad)
sbb
mov
cdq
mov
add
adc
mov
mov
loope
inc
jl
repnz
adc
cdq
mov
jl
cdq
test
cdq
mov
jl
cdq
mul
repnz
mov
jle
cdq
adc
xchg
mov
or
outs
xor
xor
mov
(bad)
mov
pcmpgtd
and
and
push
mov
stos
sub
inc
or
dec
mov
aaa
repnz
mov
jge
cdq
adc
pop
inc
and
lods
jl
out
mov
cdq
mov
push
mov
mov
xchg
aaa
inc
add
jp
jnp
sahf
retf
jecxz
jge
cdq
pop
or
test
jmp
mov
sub
imul
mov
pop
repnz
mov
inc
mov
inc
add
jns
or
(bad)
cmp
cdq
mov
jl
aas
into
push
stos
fwait
mov
cmp
cdq
mov
and
and
add
adc
jle
dec
inc
add
call
fwait
mov
or
mov
jl
repnz
pop
dec
sub
shl
push
mov
stos
sub
inc
add
jbe
push
jl
mov
add
ins
push
or
(bad)
jg
cdq
mov
ror
pusha
mov
retfw
cmps
ss
mov
jle
ret
push
jl
mov
lock
mov
mov
adc
jmp
push
inc
and
ja
pmulhw
adc
cdq
mov
cmp
inc
imul
inc
and
or
(bad)
jg
cdq
mov
mov
sub
por
jg
cdq
mov
jl
in
(bad)
xor
data16
data16
mov
fistp
cdq
inc
add
jns
or
dec
add
retw
push
inc
add
adc
push
inc
xor
movs
or
out
test
out
jo
(bad)
inc
jl
ret
lock
ss
fwait
mov
or
(bad)
pop
repnz
mov
mov
data16
xchg
das
jle
cdq
retf
cmp
dec
int
inc
(bad)
xchg
adc
cmp
push
jb
xchg
mov
imul
jb
xchg
clc
mov
retfw
out
push
jg
adc
mov
movs
and
imul
and
xor
cwde
dec
xor
call
push
mov
xor
xchg
into
(bad)
pop
dec
adc
jle
retf
mov
inc
mov
pop
add
or
xchg
retf
test
into
(bad)
pop
ss
ss
cmp
inc
add
push
test
mov
iret
arpl
imul
inc
xor
dec
mov
pusha
inc
ret
pop
mov
retfw
sahf
retf
adc
mov
pusha
inc
mov
jbe
shl
outs
jb
sysexit
dec
xor
cwde
into
(bad)
or
xor
call
and
sbb
mov
data16
(bad)
div
sub
dec
sub
cmp
out
jge
inc
jmp
cmp
sahf
adc
out
jb
wrmsr
stos
fnstcw
inc
or
sbb
push
scas
adc
cmp
adc
imul
adc
push
outs
cld
addr16
jp
or
dec
mov
mov
data16
xchg
sti
arpl
cdq
retf
jecxz
arpl
cdq
add
xchg
out
cdq
mov
ror
sub
dec
pop
lahf
inc
or
adc
mov
mov
data16
xor
cdq
test
mov
lods
aas
inc
or
xchg
movs
or
out
test
enter
lock
add
xchg
out
cdq
mov
lods
pcmpgtd
jnp
retf
sahf
retf
cdq
test
mov
or
jl
scas
mov
(bad)
out
ins
or
add
ins
ret
das
inc
and
jb
push
cmp
dec
int3
xor
data16
arpl
pcmpgtd
aad
in
push
mov
out
mov
jmp
or
xor
inc
imul
add
ret
mov
xchg
inc
jns
mov
lock
rol
push
pop
dec
data16
push
inc
or
or
mov
(bad)
out
test
inc
mov
inc
arpl
cdq
adc
push
inc
or
xor
mov
mov
arpl
into
push
jbe
mov
inc
pop
mov
mov
data16
mov
inc
sbb
lahf
sar
push
cmps
push
inc
xor
mov
pop
jmp
sub
mov
ror
inc
out
jo
pmulhw
or
dec
or
fidiv
mov
jae
and
push
mov
jl
ss
sbb
retf
outs
retf
xchg
retf
push
pushf
ror
mov
loop
or
xchg
pandn
pcmpgtd
je
in
xchg
sub
and
push
mov
jl
ss
fnstsw
inc
add
outs
stos
cdq
cmp
inc
cmp
xchg
mov
stos
out
jo
pandn
or
fidiv
into
ds
sbb
data16
ds
mov
inc
pop
cdq
ss
addr16
ror
mov
inc
pushf
ror
mov
mov
xchg
xchg
mov
lock
retf
(bad)
jno
pandn
pcmpgtd
je
in
xchg
sub
and
push
mov
jl
ss
dec
cmp
outs
sub
mov
jl
ss
cmp
outs
stos
cmc
cmp
inc
adc
ds
addr16
mov
sub
mov
or
xchg
por
sub
mov
or
xchg
xchg
mov
lock
retf
push
jno
pandn
pcmpgtd
je
in
xchg
stos
popf
cmp
inc
adc
inc
arpl
cdq
adc
push
mov
inc
arpl
cdq
adc
sbb
mov
add
lock
adc
push
inc
or
xor
mov
mov
arpl
into
push
jbe
mov
inc
pop
push
or
data16
push
jbe
test
pcmpgtd
inc
pop
out
mov
(bad)
out
test
push
inc
xor
mov
mov
arpl
into
push
jbe
cld
mov
data16
pop
pop
dec
data16
push
jbe
call
inc
pop
mov
pcmpgtd
mov
inc
sbb
lahf
sar
push
jmp
xchg
add
adc
push
inc
or
or
pop
cdq
adc
and
inc
arpl
cdq
adc
push
inc
or
xor
mov
mov
arpl
into
push
jbe
js
pcmpgtd
inc
pop
push
inc
pop
dec
data16
push
jbe
fs
data16
mov
mov
inc
sbb
lahf
sar
push
jmp
xchg
add
adc
push
inc
or
cmp
retf
mov
stos
sub
out
inc
adc
test
sbb
arpl
cdq
adc
sbb
inc
arpl
cdq
adc
xchg
push
inc
or
xor
mov
mov
arpl
into
push
jbe
fdiv
pop
push
popf
pop
dec
data16
push
jbe
les
pop
out
xor
inc
imul
inc
xor
mov
mov
arpl
into
push
jbe
sbb
pop
mov
data16
mov
inc
sbb
lahf
sar
push
or
xor
mov
pop
jmp
sub
mov
ror
inc
out
ins
or
xchg
por
sub
mov
or
xchg
gs
pcmpgtd
shl
out
outs
or
(bad)
jg
cdq
mov
or
mov
push
or
inc
push
mov
pushf
jl
xor
push
mov
mov
ss
outs
or
idiv
cdq
mov
cmp
add
out
mov
(bad)
out
test
push
cmp
cmps
add
loop
or
adc
js
out
mov
pop
hlt
cdq
mov
pop
repnz
mov
inc
jge
inc
add
or
push
mov
repz
jle
cdq
retf
or
jl
mov
inc
shl
push
ins
or
jnp
lock
ret
push
inc
and
ror
xor
pcmpgtd
push
scas
fwait
mov
add
adc
dec
inc
and
or
(bad)
aaa
repnz
mov
ror
neg
sub
out
cmp
imul
jmp
addr16
add
adc
mov
mov
mov
mul
or
cdq
mul
repnz
mov
jle
cdq
adc
pushf
mov
mov
imul
jmp
mov
mov
imul
idiv
cdq
adc
mov
stos
adc
stc
cmp
cdq
retf
sahf
retf
and
add
adc
dec
inc
or
or
(bad)
cmp
cdq
mov
inc
mov
inc
or
(bad)
sbb
cdq
mov
inc
mov
inc
add
adc
or
(bad)
cmp
cdq
mov
jl
aas
into
push
stos
fwait
mov
cmp
cdq
mov
and
and
add
adc
jle
dec
inc
add
rol
fwait
mov
or
mov
jl
(bad)
mov
pop
dec
sub
shl
push
mov
stos
xor
inc
add
jbe
push
jo
mov
add
push
jnp
por
jg
cdq
mov
ror
push
inc
push
cmps
ss
mov
jle
ret
push
jo
mov
cld
hlt
cdq
mov
mov
imul
jmp
xchg
inc
and
imul
or
add
adc
out
imul
and
jg
cdq
adc
aad
jl
mov
inc
add
test
sbb
xor
cdq
mov
inc
add
in
or
sub
lock
into
push
sbb
stos
pcmpgtd
je
or
fistp
cdq
adc
mov
push
lock
retf
rcl
jle
cdq
stos
leave
and
mov
imul
out
outs
or
xchg
ins
lahf
ror
mov
push
xchg
fwait
mov
rol
cdq
not
repnz
mov
jl
mov
(bad)
pop
repnz
mov
aad
rcl
jle
cdq
stos
cwde
xlat
cdq
mov
ins
jmp
stos
pcmpgtd
push
inc
add
adc
dec
inc
add
sub
lock
stos
mov
mov
mov
enterw
mov
je
add
adc
dec
int
inc
(bad)
xchg
adc
cmp
add
mov
adc
dec
inc
add
stos
leave
es
or
into
xlat
or
mov
stos
pcmpgtd
inc
pop
xor
cmp
sub
clc
or
shl
inc
push
setns
pop
mov
data16
inc
inc
add
adc
and
and
push
pxor
cmp
not
retf
and
movs
pcmpgtd
add
inc
pop
out
cmps
cmp
jbe
and
or
adc
jns
xor
mov
sub
repnz
inc
add
retf
nop
xchg
cmps
test
addr16
dec
or
mov
mov
lock
mov
jl
ss
lds
push
jl
inc
test
out
popf
imul
sub
leave
(bad)
in
fcom
adc
add
add
cld
ror
add
int
or
test
icebp
addr16
push
icebp
sub
dec
xchg
adc
dec
inc
or
into
(bad)
sti
sub
setns
scas
and
imul
inc
add
push
jge
cmps
inc
shl
cwde
ror
push
ja
mov
test
pop
jmp
ja
or
jmp
addr16
xor
outs
sbb
stos
jns
inc
in
and
add
imul
push
scas
adc
add
add
adc
jnp
pop
jmp
(bad)
dec
or
movs
or
retf
sub
arpl
and
and
adc
inc
jmp
or
imul
inc
add
inc
je
out
push
jnp
mov
jae
cmp
loop
jle
sub
cmp
cmp
pcmpgtd
sbb
jl
out
ror
sub
pcmpgtd
sbb
jl
dec
fadd
jle
sub
cmp
ret
jle
ret
xor
gs
aas
cdq
jbe
nop
daa
inc
imul
inc
and
jmp
nop
daa
inc
imul
inc
and
jmp
lods
and
imul
inc
and
jmp
scas
and
imul
inc
add
sub
cmp
ret
mov
pcmpgtd
sbb
jl
xchg
faddp
jle
sub
cmp
loopne
jle
sub
cmp
loopne
jle
sti
aaa
daa
inc
je
out
push
ja
mov
adc
int3
js
std
mov
sub
push
stos
push
dec
stos
lds
inc
and
repz
(bad)
mov
ret
js
pcmpgtd
jg
push
ret
and
stos
mov
xor
add
(bad)
mov
ror
push
movs
pcmpgtd
je
outs
inc
and
mov
stc
add
pextrw
addr16
sub
repz
jbe
nop
daa
inc
imul
inc
and
mov
repz
pextrw
inc
adc
sub
repz
jbe
call
and
mov
stc
add
pextrw
cmp
dec
sub
repz
jbe
nop
daa
inc
imul
mov
and
or
outs
sbb
sub
repz
jbe
nop
daa
inc
imul
jb
xchg
(bad)
and
stos
loope
inc
and
stc
add
(bad)
mov
ror
adc
pcmpgtd
pop
out
cmps
add
jb
aam
xchg
cmp
out
pop
sub
inc
jmp
mov
dec
imul
sub
and
aad
in
jl
in
xchg
lods
outs
fadd
(bad)
inc
shl
push
or
mov
adc
push
dec
xchg
adc
out
or
inc
jl
push
fadd
(bad)
inc
aad
and
or
push
and
or
adc
sar
cwde
ror
inc
or
inc
and
add
cmp
add
xor
push
jnp
and
jmp
pcmpgtd
shl
cwde
ror
cdq
pop
dec
sub
pextrw
inc
sbb
retfw
sahf
retf
mov
stc
add
dec
mov
test
in
push
jnp
and
jmp
push
retw
shl
pushf
ror
cdq
pop
dec
sub
pextrw
and
dec
sub
sub
sub
(bad)
inc
jmp
sbb
retf
addr16
xchg
inc
inc
and
mov
stc
add
dec
mov
gs
mov
inc
jmp
pcmpgtd
or
push
cdq
pop
dec
sub
pextrw
aas
and
ret
adc
gs
stc
add
dec
mov
gs
mov
ja
imul
inc
shl
cwde
ror
cdq
pop
dec
sub
pextrw
dec
sub
dec
sub
dec
sub
femms
jecxz
pcmpgtd
stos
addr16
sbb
pop
dec
sub
and
jmp
pcmpgtd
(bad)
nop
daa
inc
jmp
nop
daa
inc
jmp
scas
daa
inc
jmp
pcmpgtd
cmp
daa
push
inc
or
sub
aad
add
sub
and
stc
add
cmp
add
outs
mov
add
out
int3
inc
or
push
jmp
retw
shl
pushf
ror
(bad)
pop
dec
sub
pextrw
stos
push
dec
retw
inc
inc
and
ror
inc
jmp
addr16
sbb
cmps
pcmpgtd
not
and
jmp
pcmpgtd
out
or
inc
jl
push
fadd
(bad)
inc
jl
push
jecxz
femms
outs
or
sub
(bad)
cmp
or
ret
shl
pushf
ror
(bad)
pop
dec
sub
pextrw
dec
retw
and
gs
stc
add
outs
mov
addr16
inc
or
jg
movs
inc
and
or
inc
or
inc
jmp
mov
stos
dec
sub
inc
and
stc
add
lock
jl
push
fadd
(bad)
inc
jl
and
ret
push
jmp
pcmpgtd
jmp
inc
jmp
inc
shl
cdq
ror
cdq
pop
dec
sub
pextrw
dec
retfw
or
jmp
nop
daa
inc
jmp
scas
daa
inc
jmp
pcmpgtd
jl
inc
jmp
addr16
and
sbb
pop
dec
sub
and
jmp
pcmpgtd
imul
cdq
jbe
nop
daa
inc
jmp
scas
daa
inc
jmp
pop
addr16
and
or
inc
or
sub
aad
inc
jmp
mov
stos
lea
inc
and
inc
and
mov
stc
add
dec
mov
gs
jle
inc
jmp
addr16
and
or
adc
sbb
add
(bad)
inc
imul
inc
sub
jl
push
fadd
(bad)
inc
jl
and
ret
push
jmp
pcmpgtd
and
inc
jmp
inc
shl
cdq
ror
cdq
pop
dec
sub
pextrw
dec
sub
dec
sub
dec
sub
femms
rol
addr16
add
lahf
pop
dec
sub
pcmpgtb
out
popa
or
(bad)
and
sub
dec
sub
dec
sub
femms
add
inc
add
shl
dec
sub
pcmpgtb
out
popa
or
pop
push
dec
retfw
sahf
retf
mov
stc
add
outs
mov
gs
stos
addr16
push
jmp
retw
shl
pushf
ror
inc
pop
dec
sub
jmp
ret
inc
jl
push
fadd
(bad)
inc
jl
push
jecxz
(bad)
pop
jmp
pcmpgtd
xchg
addr16
add
lahf
pop
dec
sub
pcmpgtb
out
bound
dec
sub
dec
sub
dec
sub
push
jmp
inc
add
mov
jns
and
jmp
pcmpgtd
sbb
mov
jnp
mov
mov
(bad)
xchg
adc
cmp
lahf
xchg
sub
and
jl
outs
stos
stos
clc
cdq
mov
pop
dec
adc
xchg
mov
and
stc
add
xchg
dec
sbb
stos
test
inc
push
dec
xchg
adc
out
arpl
cmp
ret
inc
aad
and
or
push
and
or
adc
sar
cwde
ror
inc
or
inc
and
add
cmp
add
xor
push
jnp
and
jmp
pcmpgtd
shl
call
sub
pextrw
inc
sbb
retw
and
gs
stc
add
dec
mov
addr16
inc
or
push
jnp
and
jmp
push
retw
shl
pushf
ror
cdq
pop
dec
sub
pextrw
and
dec
sub
sub
sub
(bad)
inc
jmp
sbb
retf
addr16
xchg
jns
and
mov
stc
add
outs
mov
add
out
jb
xchg
addr16
add
lahf
pop
dec
sub
aad
inc
jmp
pcmpgtd
imul
push
or
cmp
sub
(bad)
stos
sub
jp
add
push
inc
jl
mov
ret
aam
pcmpgtd
mov
cmp
push
jmp
inc
addr16
xor
stos
push
dec
stos
stc
adc
push
femms
or
mov
sti
add
(bad)
inc
jl
push
fadd
(bad)
inc
jl
push
jecxz
femms
outs
or
sub
addr16
add
lahf
pop
dec
sub
aad
inc
jmp
pcmpgtd
add
addr16
jl
push
fadd
(bad)
inc
jl
push
jecxz
femms
outs
or
sub
pcmpgtd
or
ret
shl
pushf
ror
(bad)
pop
dec
sub
pextrw
outs
sbb
stos
sti
cli
cdq
mov
mov
daa
inc
jmp
scas
daa
inc
jmp
pcmpgtd
in
addr16
or
inc
or
sub
aad
inc
jmp
mov
stos
pop
adc
and
add
cmp
add
dec
mov
gs
in
loope
or
add
adc
dec
mov
cwde
ror
inc
imul
fcmovb
pmaxub
xchg
scas
or
or
jl
push
fadd
(bad)
inc
jl
and
ret
push
jmp
inc
and
or
daa
jmp
inc
shl
cdq
ror
cdq
pop
dec
sub
pextrw
mov
dec
sub
dec
sub
dec
sub
pcmpgtd
scas
inc
and
sbb
pop
dec
sub
and
jmp
pcmpgtd
pop
lods
and
jmp
nop
daa
inc
jmp
scas
daa
inc
jmp
pcmpgtd
pcmpgtd
adc
inc
or
sub
(bad)
and
jmp
mov
stos
imul
mov
mov
stc
add
dec
mov
gs
jle
inc
jmp
inc
and
or
adc
pop
mov
cwde
ror
inc
imul
loopne
(bad)
inc
jl
push
fadd
(bad)
inc
jl
push
jecxz
(bad)
pop
jmp
inc
and
xchg
addr16
add
shl
dec
sub
pcmpgtb
out
pop
or
pop
push
dec
retw
pop
inc
and
mov
stc
add
outs
mov
gs
stos
and
xchg
addr16
add
lahf
pop
dec
sub
pcmpgtb
out
pop
or
imul
sub
dec
sub
dec
sub
gs
or
adc
sar
cdq
ror
inc
or
inc
and
stc
add
cmp
add
dec
mov
gs
sbb
inc
jmp
addr16
and
or
adc
in
mov
call
jp
sub
jo
cdq
sti
pop
pop
inc
je
out
push
imul
mov
(bad)
xchg
adc
cmp
out
mov
outs
xchg
inc
or
inc
jmp
pcmpgtd
lock
xchg
jl
add
(bad)
adc
inc
jmp
push
inc
or
xor
add
inc
inc
dec
xchg
inc
or
retf
or
push
dec
xchg
adc
dec
xchg
adc
dec
call
mov
inc
add
das
loopne
lock
fwait
cmp
jl
call
pop
mov
dec
jl
outs
stos
pop
jmp
jle
(bad)
imul
imul
inc
jmp
pop
cdq
ss
addr16
test
(bad)
stos
cld
lods
cdq
mov
jnp
sahf
retf
cmp
dec
int3
xor
data16
adc
mov
ins
popf
imul
cmp
test
loope
add
xor
into
push
setns
pcmpgtd
cmp
inc
adc
push
jl
sbb
mov
mov
ss
mov
inc
or
dec
mov
leave
out
jl
adc
xlat
(bad)
add
lock
adc
jle
or
sub
and
push
mov
jl
ss
adc
cdq
inc
neg
push
push
xor
into
push
setns
pcmpgtd
jae
xchg
retf
sbb
mov
mov
ss
dec
sbb
add
inc
neg
push
or
dec
data16
push
setns
pcmpgtd
(bad)
lock
ss
addr16
ror
mov
(bad)
push
or
ds
adc
mov
add
lock
adc
jno
add
ret
(bad)
lock
ss
addr16
repnz
mov
or
out
jl
adc
rcl
add
lock
adc
jno
or
sub
mov
jl
ss
mov
jb
dec
neg
push
bound
dec
data16
push
setns
pcmpgtd
(bad)
lock
addr16
icebp
ror
mov
jbe
or
mov
jmp
cdq
mov
jl
adc
pop
aam
add
adc
jo
and
and
ror
or
data16
push
setns
dec
stos
outs
jmp
mov
and
ror
add
stos
fcomip
cdq
mov
and
pop
or
xchg
xchg
mov
inc
out
mov
dec
int
inc
(bad)
xchg
mov
out
mov
or
xor
push
push
pusha
inc
aam
mov
lock
rol
xor
or
aam
xor
(bad)
sbb
sbb
add
pop
dec
or
adc
ret
mov
arpl
add
inc
jp
femms
xor
dec
data16
push
loop
mov
xchg
pcmpgtd
cmp
inc
adc
mov
jo
cdq
mov
das
mov
mov
sbb
add
fs
addr16
por
outs
clc
cdq
mov
or
(bad)
jo
cdq
mov
fs
mov
sbb
cmp
or
jmp
mov
ds
sahf
mov
jmp
aad
add
adc
jae
or
inc
neg
push
pop
xor
into
push
loop
mov
xchg
pcmpgtd
ds
sahf
mov
jmp
aad
add
adc
jae
or
inc
neg
push
or
dec
data16
push
loop
mov
xchg
pcmpgtd
jae
xchg
retf
(bad)
neg
push
das
xor
into
push
loop
mov
xchg
pcmpgtd
ds
sahf
mov
jmp
aad
add
adc
jae
or
dec
neg
push
jmp
push
loop
mov
xchg
pcmpgtd
ds
sahf
mov
jmp
aad
add
adc
jb
add
mov
inc
(bad)
(bad)
neg
push
stos
xor
into
push
loop
mov
xchg
pcmpgtd
ds
sahf
mov
jmp
rol
add
adc
jb
or
dec
neg
push
arpl
dec
data16
push
loop
mov
xchg
pcmpgtd
repz
and
push
mov
stos
xchg
loop
mov
or
out
test
jg
add
jle
rol
(bad)
imul
mov
jl
push
aaa
mov
inc
mov
out
add
inc
or
xchg
movs
or
out
test
aam
inc
jmp
mov
out
cmp
mov
cdq
dec
inc
add
cwde
or
inc
add
dec
pop
(bad)
fs
or
jns
mov
or
(bad)
jl
cdq
mov
or
test
lock
pcmpgtd
lock
retf
jecxz
jnp
cdq
adc
cmp
mov
imul
dec
add
data16
stos
out
pop
or
adc
adc
into
xchg
test
jp
dec
mov
fistp
retf
pop
(bad)
jnp
cdq
mov
or
jle
xchg
daa
inc
cmp
inc
jmp
mov
mov
imul
inc
add
sub
scas
and
jmp
mov
mov
imul
inc
or
xchg
data16
push
repz
mov
xchg
pcmpgtd
xor
inc
je
out
(bad)
push
clc
cdq
mov
jg
cdq
mov
ror
(bad)
jg
cdq
mov
or
inc
pop
dec
data16
push
repz
mov
xchg
pcmpgtd
inc
sbb
(bad)
jg
cdq
mov
or
(bad)
jg
cdq
mov
push
mov
sub
and
push
mov
stos
stc
sbb
add
jbe
add
adc
jb
and
ja
and
push
mov
stos
stc
xchg
cdq
mov
inc
add
and
repz
out
push
or
retf
sahf
mov
gs
xchg
je
cdq
retf
fstp
mov
cdq
idiv
cdq
mov
and
ror
(bad)
jg
cdq
mov
or
xchg
por
jg
cdq
mov
or
(bad)
jg
cdq
mov
or
(bad)
push
clc
cdq
mov
push
clc
cdq
mov
jge
cdq
ins
neg
in
(bad)
push
clc
cdq
mov
jge
cdq
inc
push
clc
cdq
mov
jl
gs
xchg
(bad)
je
cdq
retf
sar
push
repz
mov
pop
dec
data16
push
repz
mov
xchg
pcmpgtd
inc
pop
jmp
jg
cdq
mov
or
(bad)
dec
clc
cdq
mov
jl
xor
or
jmp
test
xor
ret
out
push
or
(bad)
ja
cdq
mov
or
(bad)
jg
cdq
mov
jnp
cdq
stos
cmc
push
inc
push
mov
stos
cmc
sbb
inc
push
mov
mov
ds
sahf
mov
sbb
xchg
pcmpgtd
push
neg
inc
jl
xchg
mov
icebp
dec
sub
sbb
inc
shl
mov
or
(bad)
jg
cdq
mov
outs
neg
mov
or
outs
or
imul
cdq
mov
or
sub
js
inc
imul
inc
adc
jns
cdq
sbb
push
scas
add
jle
adc
pop
fucom
mov
inc
retf
mov
repz
inc
jmp
pop
and
push
or
(bad)
daa
loope
mov
shl
ss
or
inc
imul
inc
adc
sbb
dec
outs
loopne
nop
daa
inc
inc
or
faddp
pslld
pxor
aaa
loop
mov
push
dec
stos
loope
inc
jmp
inc
and
ror
pusha
xchg
pcmpgtd
shl
inc
push
or
test
sub
jmp
addr16
add
adc
stos
dec
pop
inc
jmp
dec
data16
push
mov
mov
lock
rol
mov
push
adc
or
push
sub
test
mov
add
jle
stc
push
inc
add
rol
pushf
inc
inc
idiv
dec
xchg
test
xchg
jl
jecxz
outs
lock
inc
push
pcmpgtd
aad
jl
fcom
or
xchg
test
jp
dec
mov
fistp
retf
mov
xlat
mov
(bad)
jecxz
outs
lock
inc
or
pop
dec
cmc
iret
out
(bad)
jnp
inc
inc
mov
scas
jl
stos
movs
sbb
or
nop
add
cmp
(bad)
sub
cdq
mov
outs
lock
adc
lahf
mov
ror
(bad)
sbb
cdq
mov
or
mov
sbb
jmp
sbb
cdq
mov
ins
lock
adc
jbe
add
adc
mov
loopne
lock
adc
mov
pop
jmp
jecxz
mov
or
inc
imul
inc
or
sub
xlat
and
jmp
mov
ror
add
stos
and
inc
push
mov
lods
jl
jmp
xchg
and
cmp
inc
cmp
out
mov
mul
ror
test
sub
scas
and
imul
add
into
ds
mov
dec
data16
sahf
pcmpgtd
imul
inc
jmp
mov
ror
arpl
dec
stos
rcr
push
mov
scas
jl
jmp
add
and
cmp
inc
cmp
out
lods
mov
loop
femms
test
sub
sbb
or
jl
jmp
inc
fldenv
cmp
inc
cmp
retf
mov
sub
sub
psubb
and
dec
or
push
aaa
gs
mov
and
jl
inc
push
dec
ficom
push
mov
lods
jl
ss
rol
inc
push
adc
jl
in
jl
out
or
mov
cmp
into
ds
cdq
ss
out
dec
or
inc
push
dec
ficom
jmp
dec
mov
mov
adc
inc
or
sti
jl
inc
push
dec
ficom
push
mov
lods
jl
ss
icebp
push
inc
push
adc
jl
in
jl
out
or
mov
cmp
into
ds
cdq
ss
out
dec
or
inc
push
dec
ficom
jmp
dec
mov
mov
pcmpgtd
pcmpgtd
push
jle
inc
je
out
(bad)
xor
cdq
mov
jl
out
or
xchg
arpl
out
push
dec
and
dec
retfw
push
inc
cld
pcmpgtd
and
dec
or
push
push
addr16
(bad)
inc
imul
xchg
add
mov
or
push
pop
pcmpgtd
gs
adc
inc
or
test
mov
inc
or
fwait
stos
xlat
out
add
or
test
(bad)
inc
or
push
aas
pop
mov
mov
sub
dec
sub
sub
shrd
mov
cwde
ror
inc
imul
inc
sub
xor
sub
add
jmp
lock
rol
xor
pcmpgtd
icebp
and
(bad)
pop
dec
stos
cdq
add
jmp
mov
mov
retfw
mov
pcmpgtd
jmp
mov
jecxz
ins
lock
inc
or
retf
mov
sti
outs
lock
adc
mov
lods
jl
ss
mov
mov
test
(bad)
stos
or
cdq
mov
inc
jp
shl
mov
inc
or
inc
imul
push
xchg
mov
jmp
dec
sub
add
shl
out
dec
or
(bad)
sub
cdq
mov
and
ret
(bad)
inc
jmp
pcmpgtd
imul
and
ja
inc
jmp
nop
daa
inc
imul
and
into
(bad)
jmp
stos
cmp
inc
add
pop
jg
por
addr16
mov
lea
sub
and
shl
xor
movq
fadd
movs
push
sbb
add
pop
inc
or
adc
shr
test
or
inc
or
sar
(bad)
adc
inc
cld
add
mov
or
stos
dec
pop
inc
mov
add
xor
push
inc
not
push
or
dec
cpuid
outs
inc
xor
inc
or
(bad)
std
push
inc
push
outs
inc
or
mov
push
mov
dec
mov
rol
and
cmps
jl
out
(bad)
outs
repnz
mov
or
push
scas
pop
dec
mov
fwait
mov
jl
in
xchg
xchg
stos
jle
cdq
into
push
xlat
fwait
mov
imul
mov
add
dec
pop
mov
add
adc
jecxz
jle
dec
inc
jnp
enter
mov
jle
cdq
shr
(bad)
push
repnz
mov
jl
pop
xchg
not
in
(bad)
addr16
mov
jl
in
xchg
push
jl
mov
mov
addr16
mov
jle
cdq
adc
mov
(bad)
pop
repnz
mov
xor
pop
and
stos
sub
inc
add
dec
dec
or
jle
mov
loop
test
data16
mov
rol
or
shl
out
repz
popa
adc
lea
mov
jecxz
test
mov
rol
and
movs
jl
aas
stos
clc
or
or
addr16
sbb
data16
pop
imul
jmp
pcmpgtd
and
stc
add
pop
cdq
ss
jb
or
pop
scas
pcmpgtd
lock
retf
push
inc
or
push
xchg
xchg
mov
je
dec
inc
xor
and
aaa
(bad)
xor
aaa
and
aaa
mov
dec
data16
mov
arpl
scas
xor
xlat
and
aaa
cmps
xor
aas
and
aaa
lahf
xor
jecxz
dec
data16
xchg
xor
dec
sbb
data16
(bad)
xor
push
sbb
dec
push
aad
inc
and
neg
mov
push
neg
aas
and
aaa
xchg
xor
jecxz
dec
data16
mov
ja
dec
data16
push
xchg
setns
xchg
out
dec
or
mov
neg
mov
(bad)
pcmpgtd
scas
and
je
out
(bad)
pop
repnz
mov
pop
repnz
mov
jle
cdq
inc
push
mov
stos
or
mov
test
adc
pusha
inc
add
sub
inc
push
mov
jl
ss
and
dec
or
inc
jp
sub
xlat
and
jmp
pcmpgtd
out
dec
or
mov
pcmpgtd
jnp
sahf
retf
jecxz
jl
cdq
retf
push
cli
fwait
mov
jle
cdq
inc
add
push
test
xchg
inc
and
or
mov
push
(bad)
and
stos
add
and
lock
jl
out
or
mov
sahf
gs
out
and
push
xchg
addr16
jge
cdq
mov
jl
inc
imul
or
jmp
dec
sub
setns
scas
and
imul
and
inc
or
lds
xchg
stos
jle
cdq
retf
jecxz
jl
cdq
adc
mov
sub
mov
stos
add
inc
add
jbe
jl
inc
push
mov
jl
ss
and
dec
or
inc
jp
sub
xlat
and
jmp
pcmpgtd
out
dec
or
mov
pcmpgtd
push
push
cdq
mov
ret
(bad)
pop
inc
cmp
jnp
adc
(bad)
inc
jmp
mov
and
mov
cmp
ret
jle
stos
inc
or
inc
mov
jl
data16
add
mov
arpl
lock
jg
jae
jg
jno
sub
fsub
jmp
pcmpgtd
out
dec
or
rol
cdq
mov
xor
mov
or
dec
mov
xor
mov
jle
cdq
adc
and
mov
lock
adc
ins
inc
or
add
adc
loop
jle
ret
ds
cdq
mov
jmp
enter
gs
jmp
cmp
loop
jle
stos
mov
inc
add
outs
sub
lock
mov
jle
cdq
adc
and
mov
lock
adc
ins
inc
or
add
adc
fadd
jle
ret
ds
cdq
mov
jmp
cmps
mov
and
add
dec
fadd
jle
stos
and
inc
or
push
mov
xor
mov
jle
cdq
adc
lods
mov
add
adc
ins
inc
or
add
adc
fadd
jle
ret
ds
cdq
mov
jmp
fs
and
sbb
inc
jl
dec
fadd
jle
stos
mov
and
lock
jl
out
or
mov
mov
addr16
xchg
ror
inc
imul
xor
imul
stos
xchg
pop
inc
push
gs
or
mov
push
lock
mov
xor
mov
mov
(bad)
inc
jmp
mov
and
movs
pop
inc
jl
dec
fadd
jle
stos
inc
or
cdq
mov
push
lock
mov
cmp
mov
mov
jbe
cdq
mov
ror
(bad)
jbe
cdq
mov
or
xchg
por
xor
mov
sbb
stos
ror
inc
add
mov
addr16
ror
inc
imul
arpl
stos
(bad)
inc
push
fs
or
mov
push
icebp
cwde
mov
xor
mov
mov
(bad)
inc
jmp
mov
and
in
or
jl
inc
fadd
jle
stos
mov
cwde
mov
push
push
cdq
mov
ret
(bad)
pop
inc
cmp
xor
lock
xor
imul
test
mov
jl
ss
push
cli
fwait
mov
pop
dec
data16
push
cli
fwait
mov
mov
data16
std
fisttp
data16
xchg
stos
jle
cdq
enter
mov
and
xchg
sub
dec
push
add
stos
adc
mov
inc
jmp
mov
mov
xchg
retw
mov
movlps
add
ret
pmulhw
or
mov
push
call
jmp
inc
xor
mov
lock
stos
pop
or
jmp
repnz
mov
jae
and
jl
xchg
mov
xchg
data16
push
cli
fwait
mov
ret
(bad)
pop
inc
cmp
add
adc
cmp
jle
cdq
adc
mov
xchg
sub
lock
adc
or
mov
cwde
mov
or
div
cdq
mov
xor
pop
and
stos
cmp
(bad)
inc
jmp
femms
inc
or
sub
mov
inc
add
retf
or
jl
jecxz
jle
cdq
retf
sub
sti
cwde
mov
or
dec
adc
cdq
add
xor
div
out
sub
jmp
jae
cdq
mov
and
mov
jl
xchg
inc
or
inc
push
mov
sub
setns
ja
cdq
mov
xor
mov
lock
stos
icebp
or
inc
inc
or
test
pxor
jmp
arpl
add
femms
adc
dec
sub
mov
mov
jmp
nop
daa
inc
imul
inc
xor
movs
or
out
test
cdq
ss
lock
jp
mov
xchg
data16
push
scas
adc
pop
xor
test
and
push
sahf
retf
and
packuswb
add
xchg
or
sar
outs
dec
push
enter
xor
(bad)
and
ss
push
stos
push
dec
stos
sbb
not
retf
push
stos
push
dec
data16
push
ret
and
stos
add
inc
mov
movlps
cmp
ret
sub
pcmpgtd
and
add
adc
add
pxor
ja
mov
add
daa
stc
add
minps
nop
daa
inc
test
mov
and
xor
sbb
ss
(bad)
pop
xor
dec
inc
test
imul
inc
xor
sbb
ss
(bad)
pop
xor
dec
inc
neg
cdq
jbe
scas
and
imul
inc
and
retf
or
mov
pop
jbe
xchg
daa
inc
test
pop
mov
cmp
loop
movlps
adc
ret
jbe
nop
daa
inc
test
pop
cmps
nop
daa
inc
add
stos
pop
or
jbe
call
sbb
fadd
movlps
adc
loop
minps
nop
daa
inc
test
pop
scas
xchg
es
mov
movlps
adc
ret
cwde
neg
adc
jp
adc
or
inc
add
pusha
pop
or
sbb
or
mov
and
adc
cdq
data16
cld
and
adc
cdq
xchg
cld
and
adc
cdq
xchg
cld
and
adc
cdq
mov
lahf
inc
or
scas
cld
and
adc
cdq
data16
and
adc
cdq
data16
and
adc
xor
pop
xor
or
out
mov
xchg
inc
or
xchg
iret
adc
enter
dec
out
mov
dec
imul
xchg
inc
les
fadd
adc
test
inc
pcmpgtd
push
xor
sbb
ins
lock
sbb
int3
aas
ret
jbe
and
push
or
inc
cmps
xor
or
test
retf
jecxz
cmps
lock
paddsw
cmps
pop
push
cmp
cdq
mov
sub
lock
pop
cmps
pop
lock
mov
cdq
loope
or
inc
inc
pop
inc
or
retw
cld
and
adc
cdq
data16
cld
and
adc
cdq
retfw
cld
and
adc
cdq
iretw
cld
and
adc
cdq
sar
and
adc
cdq
data16
cld
and
adc
cdq
data16
and
adc
cdq
data16
and
adc
cdq
data16
and
adc
cdq
out
and
adc
cdq
data16
and
adc
cdq
out
cld
and
adc
cdq
data16
and
adc
cdq
idiv
and
adc
cdq
data16
cld
and
adc
cdq
data16
cld
and
adc
cdq
add
and
adc
cdq
popw
cld
and
adc
cdq
or
and
adc
cdq
paddb
adc
cdq
adc
and
adc
cdq
popw
cld
and
adc
cdq
sbb
and
adc
cdq
popw
cld
and
adc
cdq
and
and
adc
cdq
data16
cld
and
adc
cdq
sub
and
adc
cdq
data16
cld
and
adc
cdq
xor
and
adc
cdq
data16
cld
and
adc
cdq
cmp
and
adc
cdq
data16
cld
and
adc
cdq
inc
cld
and
adc
cdq
inc
cld
and
adc
cdq
dec
cld
and
adc
cdq
dec
cld
and
adc
cdq
push
cld
and
adc
cdq
push
cld
and
adc
cdq
pop
cld
and
adc
cdq
pop
cld
and
adc
cdq
data16
and
adc
cdq
data16
and
adc
cdq
imul
inc
adc
cdq
outs
cld
and
adc
cdq
data16
and
adc
cdq
data16
and
adc
cdq
cmp
inc
adc
cdq
xchg
and
adc
cdq
mov
and
adc
cdq
data16
sti
and
adc
cdq
xchg
sti
and
adc
cdq
xchg
sti
and
adc
cdq
data16
sti
and
adc
cdq
data16
sti
and
adc
cdq
mov
lahf
inc
or
cmps
sti
and
adc
cdq
stos
sti
and
adc
cdq
scas
sti
and
adc
cdq
data16
and
adc
cdq
data16
and
adc
cdq
mov
inc
adc
cdq
mov
inc
adc
cdq
retw
sti
and
adc
cdq
data16
sti
and
adc
cdq
retfw
sti
and
adc
cdq
iretw
sti
and
adc
cdq
sar
and
adc
cdq
data16
sti
and
adc
cdq
data16
and
adc
cdq
data16
and
adc
cdq
data16
and
adc
cdq
out
and
adc
cdq
data16
and
adc
cdq
idiv
and
adc
cdq
data16
sti
and
adc
cdq
data16
sti
and
adc
cdq
add
and
adc
cdq
psubq
adc
cdq
adc
and
adc
cdq
popw
sti
and
adc
cdq
sbb
and
adc
cdq
popw
sti
and
adc
cdq
and
and
adc
cdq
data16
sti
and
adc
cdq
sub
and
adc
cdq
data16
sti
and
adc
cdq
cmp
and
adc
cdq
data16
sti
and
adc
cdq
inc
sti
and
adc
cdq
inc
sti
and
adc
cdq
dec
sti
and
adc
cdq
dec
sti
and
adc
cdq
push
sti
and
adc
cdq
push
sti
and
adc
cdq
pop
sti
and
adc
cdq
pop
sti
and
adc
cdq
data16
and
adc
cdq
data16
and
adc
cdq
imul
inc
adc
cdq
outs
sti
and
adc
cdq
data16
and
adc
cdq
data16
and
adc
cdq
data16
and
adc
cdq
data16
and
adc
