fucomp
(bad)
(bad)
mov
ret
push
mov
push
call
mov
pop
div
jmp
add
xor
inc
and
add
cmp
mov
xor
add
jmp
(bad)
mov
inc
jmp
nop
inc
add
add
adc
add
call
ret
sub
mov
cmp
jl
cmp
jg
and
ret
push
push
push
mov
mov
imul
repnz
jle
mov
mov
adc
fdiv
sub
or
inc
or
jmp
mov
aas
jbe
push
pop
jmp
or
jmp
xor
pop
pop
pop
jl
call
push
mov
sub
and
pop
xor
push
mov
push
or
inc
in
dec
pop
in
inc
out
push
pop
mov
dec
lock
dec
pop
repnz
xor
retf
in
hlt
cs
imul
call
mov
mov
mov
cld
lea
xor
inc
push
lea
mov
je
push
loopne
loope
outs
repz
das
jecxz
jae
in
dec
mov
out
popa
mov
jne
lock
jge
call
adc
arpl
push
push
push
rcl
push
xor
std
dec
fimul
out
push
sbb
fisubr
inc
pop
xor
cmp
cmc
lods
or
or
push
mov
mov
mov
adc
mov
jg
pop
push
cmp
or
cmp
mov
pop
(bad)
push
jne
mov
add
mov
cmp
sub
mov
jo
add
jbe
jbe
leave
test
cmp
std
fucomp
jne
and
pop
out
add
adc
adc
mov
dec
in
aas
call
or
mov
addr16
sub
mov
(bad)
pop
aas
retf
jge
add
pop
and
lods
push
jo
aas
jle
jge
in
xor
mov
imul
jge
mov
or
pop
jnp
inc
push
push
inc
les
(bad)
js
lock
dec
push
jge
rcr
inc
cmp
ud0
in
ror
push
push
mov
inc
jo
add
outs
je
inc
sbb
ja
je
jne
call
imul
jnp
fisttp
add
mov
and
je
dec
fdivr
push
dec
inc
cld
add
pop
loopne
jg
call
add
or
dec
sahf
inc
pop
fadd
jns
mov
push
push
pop
jge
(bad)
jle
inc
adc
cmp
dec
hlt
std
mov
sbb
pop
dec
mov
adc
mov
lahf
test
and
inc
add
movzx
lea
ffreep
add
xchg
sbb
cmp
jge
(bad)
fisttp
xlat
or
pop
cmp
sub
and
cmp
outs
cdq
pop
lods
js
push
inc
or
dec
or
pop
das
int3
ins
sbb
push
pop
push
dec
jmp
in
or
xor
add
adc
adc
pusha
jo
push
mov
pop
xchg
mov
es
pushf
ss
js
inc
ret
xchg
add
bound
dec
xchg
ins
and
jmp
scas
clc
(bad)
ds
push
xchg
push
add
jle
jbe
and
xor
jmp
and
and
jp
(bad)
inc
out
pop
test
je
mov
jae
add
outs
pop
jmp
mov
lea
test
mov
mov
iret
xchg
dec
mov
idiv
jne
test
je
mov
jmp
adc
jbe
clts
fstp
aaa
lock
push
push
xchg
and
cld
cmp
and
ret
sub
sub
inc
cmp
leave
ds
jo
jg
push
idiv
add
jbe
sbb
(bad)
mov
jo
push
outs
xchg
push
push
push
popf
or
xor
or
test
cdq
or
mov
cmp
pop
or
loope
emms
std
fsin
adc
pop
inc
shr
inc
xor
add
fild
cmps
ja
pop
pop
pop
pop
rol
dec
loopne
push
mov
mov
lock
out
test
adc
mov
pcmpeqw
mov
xchg
retf
mov
rol
ret
mov
cld
ret
jb
mov
gs
xchg
gs
stos
lods
lods
scas
shl
xchg
scas
mov
mov
ins
popf
dec
pop
push
pop
jne
aam
in
cmc
xor
inc
mov
add
fsub
sti
push
hlt
lock
cmps
aam
cmp
or
je
add
sub
pop
shr
inc
sub
lea
and
xchg
add
(bad)
push
pop
jne
add
clc
xchg
in
int3
(bad)
rcr
jmp
xor
mov
push
test
sub
rcl
scas
mov
sbb
icebp
aas
je
imul
jecxz
and
pop
xor
(bad)
in
jns
sbb
cmp
push
xchg
jbe
rcl
xor
sbb
add
leave
xlat
lds
shr
fxch
sub
mov
out
cmp
fcom
or
push
loopne
mov
dec
pop
xchg
dec
fdivr
fsub
fnsave
mov
fwait
jmp
mov
and
rcl
dec
push
xor
js
jg
push
add
inc
mov
mov
pop
cld
inc
push
sbb
icebp
cmp
cmp
push
adc
mov
dec
and
stc
std
std
add
add
and
jmp
mov
pop
add
push
xor
outs
cwde
pop
or
add
mov
fild
sbb
inc
jmp
ret
scas
loop
add
inc
adc
mov
sbb
jg
out
imul
je
or
fstp
repz
or
pop
adc
push
mov
push
push
mov
push
add
call
mov
sti
std
ja
sub
xor
(bad)
jle
cmp
jnp
cmp
icebp
cmps
pop
and
inc
cmp
jl
or
lock
pop
pop
jl
ret
je
out
push
mov
js
in
jo
icebp
xchg
ins
mov
push
popa
popa
rcl
mov
jb
add
xchg
call
bound
(bad)
movzx
cdq
mov
stc
icebp
adc
pop
push
mov
mov
inc
or
cmp
jle
jb
in
or
push
retf
dec
mov
xor
add
lea
fcomp
add
mov
loopne
push
pop
push
push
xor
xor
or
or
add
mov
outs
cli
jge
adc
and
and
repnz
push
je
call
les
jns
pop
mov
mov
jno
mov
cwde
stos
pop
hlt
jnp
add
aad
cwde
xor
daa
cmp
or
sbb
sbb
addr16
pop
or
fs
add
inc
inc
outs
cdq
fs
mov
mov
mov
nop
add
jge
mov
pop
shl
aaa
ds
xor
mov
push
xor
xor
cwde
sbb
sbb
add
mov
arpl
adc
shl
push
movs
bound
imul
push
outs
sbb
push
xor
and
inc
clc
sar
fild
mov
das
gs
lock
xor
in
pop
cmp
add
sub
push
push
jnp
call
in
push
mov
adc
xor
lock
imul
or
push
fcom
sub
call
fwait
inc
jb
cwde
in
push
pop
dec
and
cs
jne
sbb
jbe
sub
cwde
jmp
or
in
loope
xor
int3
ror
sub
push
push
push
imul
scas
pushf
sbb
fcomp
shl
mov
jo
enter
sub
push
call
push
and
or
clc
fidivr
xor
dec
mov
inc
hlt
sub
inc
cdq
sub
sar
push
sub
in
and
sbb
jne
inc
adc
int
mov
pop
mov
xor
inc
pop
ret
pusha
jno
and
push
sub
inc
pop
or
push
hlt
jecxz
mov
push
je
mov
cmps
shr
mov
outs
sbb
lods
or
jmp
fistp
mov
xchg
or
add
fisubr
std
ror
inc
jne
push
test
fucomi
mov
cmp
mov
add
pop
mov
cmp
sbb
fild
pop
lock
ret
push
pop
or
inc
sbb
or
retfw
in
mov
add
adc
mov
mov
mov
jmp
add
test
je
sub
hlt
pop
add
or
je
neg
sbb
and
inc
lea
push
xor
pop
and
pop
mov
jl
fst
pusha
push
mov
sbb
and
push
nop
rcr
sbb
mov
lea
jns
add
call
outs
pop
loope
adc
fmul
push
dec
sbb
mov
pop
sahf
push
push
jle
enter
push
mov
cmp
faddp
mov
push
mov
push
repnz
push
test
(bad)
mov
inc
adc
or
push
ins
push
mov
fidivr
ficomp
or
mov
push
addr16
and
push
push
jne
inc
pusha
mov
cmps
mov
jp
clc
shr
xor
xlat
out
add
adc
(bad)
lock
das
push
sub
cdq
fcomp
inc
add
(bad)
arpl
xor
cmp
ror
ds
clc
adc
or
(bad)
imul
jle
mov
popf
cld
adc
jne
or
cmp
or
sbb
inc
iret
enter
dec
clc
dec
lods
jne
dec
hlt
test
adc
adc
test
test
dec
push
inc
ds
(bad)
movs
test
repz
xchg
mov
pop
js
push
push
ds
out
xchg
adc
push
test
lea
pop
sbb
mov
data16
ret
rcl
idiv
push
mov
bound
jne
aam
pushf
mov
pop
or
inc
pop
or
adc
sti
pop
je
sub
scas
sbb
xchg
push
mov
xor
adc
push
cmp
sbb
pop
fistp
xlat
add
push
mov
adc
fisubr
cs
xor
loope
jmp
xchg
mov
arpl
push
adc
clc
mov
pop
cmp
push
jne
sub
push
mov
push
clc
mov
xor
stos
or
lea
mov
fisubr
hlt
lds
icebp
(bad)
test
add
or
call
data16
fidivr
pop
xor
inc
inc
in
or
xchg
pop
push
(bad)
imul
sbb
retf
repnz
adc
je
or
jnp
or
add
test
xchg
inc
or
(bad)
push
or
xor
jge
cmps
adc
xchg
fisubr
push
mov
add
or
retf
into
ret
push
rcr
or
aam
pop
cmp
cmp
push
pop
mov
add
js
int3
sti
je
push
push
test
xor
inc
clc
dec
sub
lahf
add
jge
(bad)
jecxz
cmp
daa
sub
adc
mul
push
ret
cmp
je
adc
movs
ret
bound
bound
leave
(bad)
arpl
xor
aaa
push
loopne
add
inc
sub
call
mov
jl
xor
lea
clc
jbe
mov
push
add
ret
xor
ins
inc
add
mov
std
imul
mov
push
xchg
mov
jo
cmp
push
jns
fldpi
ret
adc
jo
cmp
addr16
sbb
inc
cmp
mov
je
fisttp
int3
push
add
out
push
pop
cwde
mov
nop
add
and
loopne
mov
rol
repz
les
sub
add
je
mov
add
pushf
out
fidivr
add
mov
movs
xchg
scas
imul
inc
adc
(bad)
pop
jnp
sbb
sbb
lea
test
push
or
sbb
dec
mov
in
stos
pop
add
cmp
pop
dec
jp
xchg
addr16
les
(bad)
jle
xor
sbb
jb
mov
sub
jg
sbb
adc
nop
add
and
jg
test
sub
dec
cmp
jmp
jge
jnp
cld
hlt
ds
(bad)
je
es
call
les
hlt
pop
int
push
push
fistp
xchg
jecxz
jl
sbb
inc
cmp
add
push
jmp
jb
pop
fdivr
fmul
inc
neg
idiv
sub
movs
sar
xchg
(bad)
icebp
add
sub
sbb
ret
loop
rcr
(bad)
sbb
push
pop
pop
inc
mov
add
mov
adc
test
pop
sub
sbb
push
mov
push
push
out
add
imul
shr
sub
(bad)
push
(bad)
leave
loop
and
out
pop
xchg
adc
test
clc
data16
push
leave
out
inc
lods
neg
sbb
cmp
sub
xor
lock
mov
ins
clc
sbb
inc
adc
mov
sub
(bad)
pop
fidivr
mov
inc
adc
push
mov
aaa
push
ror
sub
jae
sbb
push
jge
lea
xchg
sbb
adc
adc
push
jae
jno
add
imul
je
mov
sub
push
jnp
fwait
xor
lea
sbb
int
cmp
data16
nop
push
loopne
xchg
push
sbb
ficomp
add
gs
ins
jno
loopne
arpl
pusha
imul
inc
adc
ret
pop
or
pop
(bad)
pop
ret
xor
adc
popa
les
cmp
sbb
enter
push
inc
xor
push
out
push
aas
cs
sbb
push
pop
push
pop
cwde
pop
jle
setne
push
shr
inc
sub
cmp
je
mov
push
call
out
mov
aas
mov
push
es
cdq
in
push
fcom
push
mov
jo
addr16
or
mov
sbb
int3
or
sti
and
out
inc
push
pop
popf
lldt
adc
or
shl
jne
sub
loope
or
mov
or
push
les
fild
fdivr
push
mov
add
jmp
mov
fdiv
jecxz
jg
mov
push
stos
(bad)
add
mov
jmp
int
into
pop
jmp
das
ror
leave
imul
aam
sahf
push
mov
ret
(bad)
es
push
(bad)
pop
lea
(bad)
inc
iret
cwde
outs
jnp
shl
(bad)
mov
idiv
fidiv
cmp
jb
mov
push
mov
or
inc
push
mov
add
fild
push
mov
lea
(bad)
fdivp
out
jne
movs
add
and
dec
and
jb
cs
push
out
(bad)
xchg
jp
or
out
mov
pop
or
aaa
call
jo
ret
shl
hlt
add
pusha
cmp
stc
sbb
les
pop
out
adc
(bad)
cmp
xchg
scas
rcr
fild
mov
loopne
pop
fbld
push
data16
xchg
push
cwde
inc
push
enter
and
enter
out
ror
sbb
cs
adc
test
inc
jo
sbb
add
xor
push
add
adc
push
add
pop
ss
sub
add
xor
add
jecxz
adc
aaa
inc
pop
pop
mov
dec
and
dec
push
jp
movsx
shr
or
mov
pop
in
std
inc
adc
fs
shl
stos
sub
sar
stos
mov
jnp
in
sbb
leave
push
test
(bad)
adc
dec
pop
test
sbb
mov
pop
push
mov
pop
fdiv
cmc
push
mov
sahf
jns
and
and
sub
pop
scas
cmp
xor
cmp
pop
pop
in
scas
inc
and
jns
(bad)
xchg
sbb
js
lock
cmp
fstp
sti
call
adc
sbb
adc
or
add
mov
jmp
jne
xchg
add
lock
xchg
out
std
ins
mov
mov
jle
mov
cmp
inc
and
test
dec
push
jbe
fbstp
ss
jne
loope
sub
cmp
push
mov
out
pop
adc
jmp
or
fidivr
jmp
pop
adc
cmp
imul
inc
out
pop
popf
inc
cmp
les
arpl
or
in
inc
add
test
(bad)
shl
(bad)
adc
call
xchg
or
lock
jp
leave
inc
fdivr
push
ret
mov
add
aaa
psubsw
loope
push
mov
xor
ror
ror
pop
lea
push
sbb
pop
loop
mov
pop
andps
inc
psraw
and
jl
fmul
out
and
inc
enter
adc
rol
jmp
or
push
inc
add
lar
dec
xchg
jmp
or
add
call
adc
stc
dec
icebp
inc
pop
mov
sbb
xchg
cmp
dec
repz
xchg
inc
scas
shl
inc
sar
add
test
mov
je
iret
mov
cmp
cmp
add
fist
clc
idiv
jne
cmp
jne
pop
les
inc
sbb
sub
and
(bad)
mov
add
fnstenv
sub
mov
lahf
jne
pop
shl
or
pop
call
sub
add
add
jge
jg
add
or
xor
adc
call
mov
pusha
je
test
mov
je
mov
jne
inc
or
cmp
popa
mov
xchg
inc
sbb
lock
das
adc
shl
stos
inc
je
jne
jl
or
cmp
pop
pop
sbb
repz
dec
or
dec
pop
pop
xor
mov
pop
fistp
or
pop
inc
call
xor
dec
in
xchg
or
sub
jge
sbb
pop
adc
loope
in
and
inc
sub
fdiv
xchg
lock
lea
add
jmp
call
xlat
cmp
mov
cmp
sbb
cmc
jnp
lock
test
jbe
adc
outs
fst
sub
stos
push
cli
lea
dec
jmp
sub
pop
(bad)
or
fimul
stc
and
sbb
pop
movs
mov
hlt
pop
add
sub
push
pop
popf
sbb
sub
icebp
mov
std
retf
cli
jo
std
rcl
sub
dec
stos
add
adc
xchg
pop
and
mov
jge
dec
shr
iret
mov
mov
aad
cmp
jp
inc
push
(bad)
in
in
sahf
mov
or
pop
cmp
sub
cmp
aad
sub
call
mov
je
std
mov
xchg
dec
sub
mov
push
lahf
scas
jmp
mov
xchg
push
cmc
rcr
cmps
inc
pop
movs
sbb
xlat
sub
jno
clc
mov
hlt
cld
pop
stos
mov
cmp
ficomp
add
xor
ret
mov
aad
fcomip
or
xchg
add
xchg
and
sub
loopne
mov
adc
pop
add
or
adc
pusha
or
(bad)
mov
adc
inc
push
jge
cmp
call
xlat
adc
in
aaa
and
mov
dec
jge
sbb
cmp
inc
inc
jne
push
sub
add
sbb
sbb
in
cmp
push
dec
xchg
dec
xchg
fild
adc
fwait
cmp
out
cdq
jns
fs
inc
push
adc
inc
icebp
mov
cmp
push
fistp
lahf
jbe
mov
aas
jle
jne
xchg
push
imul
fcomp
push
and
sub
test
or
inc
aaa
ret
push
add
mov
ds
push
or
cdq
cmp
sub
xor
js
rcr
movs
xor
js
add
jo
jns
(bad)
push
adc
cs
dec
daa
dec
cmps
or
pop
or
shl
dec
or
popf
in
sbb
jbe
outs
or
mov
mov
mov
add
xor
pop
test
dec
mov
sbb
pop
fnstenv
sahf
cmp
dec
ror
loope
mov
sbb
push
xlat
scas
xchg
jl
cwde
xor
pushf
lock
daa
mov
test
lahf
inc
xchg
or
xor
adc
xlat
and
add
in
(bad)
adc
push
jmp
(bad)
and
dec
lea
iret
lds
mov
ret
mov
jmp
and
rcl
add
lock
lea
out
dec
ins
hlt
cmp
cdq
ins
mov
inc
cmp
push
pop
pusha
mov
dec
cld
xor
mov
sbb
in
(bad)
imul
push
mov
cmp
and
clc
jge
rcl
icebp
aam
pop
retf
pop
lock
xor
cli
icebp
test
or
idiv
add
pop
ror
add
mov
std
pop
xlat
shl
xor
lods
and
mov
stc
cmp
mov
ins
add
imul
push
xor
ret
xchg
sbb
adc
pop
sbb
push
pop
jmp
sbb
leave
leave
push
retf
pop
cmp
mov
sub
sub
lods
ja
add
pop
dec
inc
cwde
in
jg
sub
push
mov
daa
push
sbb
clc
ret
xchg
adc
les
pushf
xor
push
mov
clc
(bad)
jge
ret
cmp
lahf
add
popa
dec
outs
mov
push
jo
sub
leave
jle
jmp
push
fimul
lods
add
icebp
std
add
ror
push
cmp
add
in
fldenv
dec
mov
adc
mov
iret
dec
fs
jmp
es
or
mov
push
cmp
mov
sbb
jo
inc
push
test
mov
fsubr
clc
test
mov
and
push
inc
push
jmp
adc
jae
sub
shr
jo
adc
leave
js
push
popa
push
inc
movsx
ret
movs
mov
adc
mov
xor
push
scas
lock
push
push
hlt
fbld
mov
cmp
je
cmp
jmp
dec
in
push
cmp
cmp
lmsw
mov
sbb
cmc
mov
lahf
stos
dec
mov
pop
ret
imul
add
add
enter
cmp
adc
mov
add
fisub
mov
fsub
mov
mov
xchg
movs
mov
sub
adc
mov
popf
enter
out
and
ins
add
(bad)
daa
push
fdivr
movs
rcl
cmp
xor
mov
cmp
pushf
jge
inc
lods
cmc
push
xor
cwde
push
xchg
add
outs
jae
add
(bad)
add
add
ror
inc
mov
cmp
inc
xchg
lea
aad
push
pop
dec
out
in
fsubrp
dec
or
aas
jmp
jbe
shl
out
ror
inc
cld
pop
loope
inc
dec
and
fld
mov
push
loope
push
mov
dec
pop
push
addr16
fwait
pop
imul
mov
test
add
adc
xor
pop
jnp
stc
jne
cvttps2pi
jbe
add
add
daa
adc
arpl
jb
mov
rol
in
stos
(bad)
out
(bad)
sbb
dec
mov
out
and
push
lds
dec
and
cmp
sbb
mov
mov
add
adc
popf
mov
lea
sbb
xor
pop
add
retf
into
sbb
in
fadd
loopne
je
inc
fsub
rcr
pop
jno
and
dec
pop
pop
xor
icebp
loopne
adc
in
or
xor
dec
jne
adc
mov
jmp
jmp
push
add
test
pop
lahf
fdivr
repz
fidiv
es
cld
sbb
push
xor
jmp
movs
xchg
and
cmp
mov
cmp
or
pop
call
add
sti
jbe
or
xchg
jae
imul
pop
in
leave
push
pop
sbb
lods
xor
in
dec
jecxz
dec
lock
dec
sub
std
lea
mov
jle
ins
adc
repnz
xor
dec
das
out
punpcklbw
fmul
mov
xor
xor
dec
or
xchg
(bad)
or
adc
rcl
les
pushf
int3
jl
outs
adc
sahf
clc
push
and
push
push
adc
sub
sar
xor
lods
push
dec
sbb
sub
push
test
shl
mov
add
and
jg
in
jbe
push
dec
rcl
(bad)
cmp
gs
lea
mov
adc
ins
xchg
sbb
js
shl
or
ds
push
fcom
mov
push
adc
ja
not
xor
popa
ins
imul
in
push
loope
icebp
adc
push
out
cmp
jmp
push
push
fistp
add
cmp
cmp
daa
ror
mov
adc
lea
mov
and
icebp
(bad)
pop
push
sub
jecxz
dec
icebp
sbb
repz
push
(bad)
inc
xchg
sub
sub
xor
dec
fsubr
pushf
shr
test
and
int3
sbb
push
dec
pop
pop
push
in
push
inc
ret
mov
pop
ins
jl
sub
jl
fs
hlt
sbb
inc
sub
(bad)
xor
sar
cmp
popf
shl
add
(bad)
sub
and
sub
sbb
mov
je
mov
pop
mov
aad
cmp
cmps
aas
loope
or
iret
xor
test
or
sub
cmp
add
call
daa
sbb
jnp
test
sbb
jne
sar
push
jo
enter
fwait
(bad)
cld
lds
adc
mov
adc
loop
cmp
fmul
mov
or
mov
rcl
sar
or
mov
daa
push
in
dec
iret
in
lods
outs
imul
xchg
call
pusha
movs
cmc
jo
inc
push
clc
jno
les
leave
push
add
add
gs
out
hlt
pop
mov
inc
adc
jge
ins
ins
je
lea
int3
inc
lea
outs
xchg
sub
jmp
fs
cmps
push
xchg
sbb
xor
adc
jnp
push
push
sbb
mov
ror
jl
test
cld
adc
jnp
cwde
push
push
sub
ror
adc
mov
mov
leave
std
fs
ret
or
std
je
cld
push
sub
femms
mov
adc
cmp
cmp
or
sbb
addr16
jmp
test
sub
aaa
push
inc
retf
jae
enter
mov
jb
xchg
push
stc
jae
aas
retf
mov
mov
and
leave
cmp
sbb
sbb
dec
and
bound
sub
and
lock
vorps
js
cmp
rol
lods
hlt
nop
test
xchg
sub
imul
xchg
adc
gs
clc
mov
jge
jne
or
outs
lock
fisttp
adc
inc
gs
mov
pop
enter
pop
les
(bad)
sbb
and
cmp
sub
cmp
iret
xor
sbb
push
ja
cld
pop
sbb
push
sti
mov
sbb
sbb
mov
stos
cs
jo
xor
push
(bad)
adc
or
mov
cs
mov
enter
cmp
nop
int3
xchg
(bad)
mov
inc
cmp
add
pop
jge
and
js
cwde
mov
cmp
ret
vhsubps
mov
mov
xchg
call
cwde
add
cmp
adc
jb
push
aad
nop
test
popa
sbb
out
sahf
sub
pushf
cmp
inc
mov
xor
mov
in
and
ret
unpckhps
push
pop
jge
ja
xchg
movs
xor
les
test
imul
mov
or
aaa
ja
sbb
jo
or
mov
ror
pusha
aam
push
pop
adc
movs
shr
in
pop
xor
inc
inc
movs
or
dec
mov
popf
push
aaa
push
dec
mov
add
xor
rcl
shl
mov
cmp
pop
sbb
push
loopne
cs
jo
mov
cmp
test
je
daa
add
les
or
xor
sbb
popa
inc
lea
cld
pop
jne
or
jl
(bad)
cmp
or
inc
push
pop
mov
jo
adc
call
pop
xor
scas
dec
(bad)
out
push
rcr
adc
mov
shl
or
xor
ror
nop
push
dec
mov
and
cmp
loope
add
mov
jmp
clc
dec
jmp
push
arpl
dec
xchg
test
push
fdivr
in
add
(bad)
ficomp
and
test
fcomp
out
jge
mov
push
add
sbb
push
jl
in
les
lds
icebp
or
sbb
pop
fdivp
jne
test
jnp
xor
call
sbb
push
les
xchg
sub
add
or
mov
inc
mov
pop
inc
iret
cmp
adc
lea
xchg
adc
in
fs
jnp
sub
pop
or
fnstsw
imul
test
adc
push
sbb
call
jge
pop
cmp
out
push
pop
mov
iret
pop
div
call
rcr
test
add
push
mov
out
sub
inc
dec
xor
outs
dec
pushf
mov
mov
xchg
(bad)
je
sbb
xor
sub
jno
and
inc
outs
test
ins
jne
ret
and
and
test
mov
inc
and
add
call
sbb
loop
cmp
je
in
xor
mov
dec
add
int3
(bad)
dec
mov
(bad)
pop
push
or
jbe
aaa
dec
cmps
inc
xlat
test
jns
popa
dec
div
or
jae
jge
cmp
mov
xor
adc
ins
xchg
aas
scas
cld
pop
xchg
jo
push
push
and
jb
jge
add
dec
ss
adc
sub
and
xor
loop
mov
and
js
inc
mov
push
aad
data16
xchg
hlt
ror
sbb
push
push
fstp
lea
sub
pop
jnp
add
mov
mov
test
adc
(bad)
in
leave
lea
or
mov
jnp
mov
sahf
lock
cmp
jbe
add
push
jae
xor
(bad)
cli
and
je
inc
lods
jns
(bad)
std
xor
lock
jmp
push
loopne
clc
push
pop
and
add
jno
es
pop
xor
xor
clc
call
lods
add
sbb
ret
sub
dec
dec
mov
lock
in
and
pop
shl
push
outs
(bad)
or
or
test
jg
call
pusha
cld
mov
add
cdq
and
into
pop
jecxz
lods
or
stos
jl
adc
jl
jecxz
cmp
push
lods
push
lea
shl
fisttp
test
dec
clc
pop
and
rcl
xor
mov
jle
mov
mov
cmp
data16
push
movzx
and
cmp
add
leave
pop
add
jmp
cld
jl
jmp
nop
inc
cmps
test
retf
dec
pop
pop
or
test
loope
test
js
jno
add
nop
lods
xchg
dec
mov
sbb
sbb
pusha
dec
mov
add
ins
imul
xor
push
jnp
loop
sbb
push
cmp
je
dec
and
paddusw
lock
mov
ret
fmul
lock
jo
mov
and
mov
cmp
xor
jnp
loope
jbe
dec
add
jnp
cmp
or
xchg
ret
sti
pop
call
cmp
pop
xchg
sbb
mov
(bad)
adc
fidivr
outs
mul
sbb
dec
adc
dec
cmp
or
jne
mov
dec
push
loopne
(bad)
aam
or
sub
adc
inc
cmp
aad
into
sbb
loop
cmp
(bad)
loopne
xchg
or
les
pop
and
inc
push
pop
mov
mov
push
pop
sub
cld
inc
js
mov
dec
and
popa
xor
daa
pop
xor
mov
div
push
lea
rcl
push
pop
femms
rcl
(bad)
enter
(bad)
and
push
add
sub
pop
pop
iret
sub
cwde
fdiv
rol
std
mov
dec
dec
push
das
push
cmp
pop
ret
mov
sub
push
mov
sbb
adc
ret
pop
nop
pop
call
adc
(bad)
test
jmp
or
adc
jo
in
call
aad
adc
and
ins
inc
loope
(bad)
mov
loopne
and
mov
clc
cmp
cmp
data16
adc
loopne
outs
loopne
(bad)
dec
in
push
(bad)
fild
fild
or
js
fs
jne
inc
es
add
dec
out
xor
dec
cs
pusha
jmp
adc
mov
into
retf
(bad)
push
pop
add
dec
dec
push
nop
ror
in
add
addr16
mov
ins
sub
js
jmp
shl
inc
ins
or
or
(bad)
pop
push
fcom
adc
cld
xlat
not
and
push
das
push
ret
fild
test
clc
arpl
mul
js
nop
in
fsub
clc
pusha
add
pop
add
cmp
push
push
pop
loopne
or
sbb
test
arpl
cs
stc
or
and
(bad)
popa
pushf
cmp
and
cdq
jge
or
jae
push
das
or
not
cmc
shl
jo
aas
add
fsub
in
test
dec
cdq
xchg
sbb
int3
jecxz
dec
mov
push
pop
out
add
mov
push
xchg
and
cmc
sbb
call
pusha
push
push
addr16
pop
sub
adc
pop
pop
stc
mov
adc
inc
mov
sar
popf
mov
mov
mov
jne
(bad)
push
bound
pop
mov
add
mov
cmps
lea
sub
mov
in
mov
lock
mov
xor
or
jle
out
push
jae
mov
sub
add
mov
or
add
pop
pop
push
push
xchg
test
cmp
push
add
adc
pop
enter
movs
(bad)
test
add
arpl
test
adc
xor
mov
sub
dec
call
(bad)
icebp
cmp
not
shr
and
jo
stos
add
stc
into
mov
sub
pop
push
or
add
cld
and
or
xchg
push
adc
inc
xor
push
sbb
and
(bad)
aam
ins
adc
clc
add
or
jle
add
push
pop
inc
inc
jecxz
jmp
push
push
or
or
dec
rcl
push
mov
push
lea
dec
and
push
cmp
scas
test
cwde
cmp
sbb
ficomp
push
sbb
pusha
call
or
jo
and
mov
pop
cmp
je
cmc
fdiv
and
inc
mov
jmp
loopne
inc
sub
sub
out
mov
or
dec
mov
cmp
dec
or
mov
fiadd
or
inc
push
pusha
xor
repnz
jmp
mov
retf
pop
cmps
mov
add
sbb
ret
push
inc
cmp
outs
pusha
cmp
(bad)
jecxz
add
mov
xor
pop
sbb
inc
jo
movs
mov
xchg
push
xor
mov
test
mov
push
retf
jmp
(bad)
mov
inc
and
movq
out
push
sti
or
retf
push
adc
mov
aaa
xor
loopne
sbb
mov
dec
bound
mov
sub
das
sub
outs
cmp
aas
add
fisttp
pusha
pop
xchg
loope
jo
inc
mov
fcomp
inc
add
pop
out
add
inc
ror
loope
(bad)
out
cmp
jne
jle
mov
dec
fldenv
iret
jb
push
imul
scas
pop
or
pushf
mov
dec
mov
mov
mov
pop
xor
inc
rol
add
mov
xor
test
and
outs
bound
jb
adc
(bad)
inc
cmp
and
sub
popf
cmp
nop
sub
inc
mov
mov
(bad)
fld
mov
pop
and
mov
mov
fld
lahf
cmp
mov
pop
sub
jle
mov
cmp
push
push
mov
sahf
adc
jo
or
pop
push
mov
cmp
(bad)
jo
push
in
inc
xor
bound
div
mov
mov
push
test
jmp
mov
or
pusha
ins
inc
loopne
add
xchg
mov
pop
inc
sbb
add
sub
xor
sbb
sbb
mov
sub
jmp
call
mov
push
jge
sbb
enter
daa
inc
inc
sub
sub
sub
pop
adc
adc
jno
mov
pop
rcr
cmp
adc
shl
mov
jo
xor
test
femms
fst
push
sbb
mov
push
jp
sbb
int3
sti
vsqrtps
js
push
hlt
inc
hlt
(bad)
sub
sub
sub
mov
inc
adc
sbb
addr16
adc
push
sub
mov
clc
fstp
outs
loope
or
or
fld
dec
(bad)
jnp
and
inc
mov
adc
pop
sbb
lds
or
in
mov
fistp
lods
adc
xor
repz
add
cmp
inc
cmp
mov
mov
popa
mov
in
inc
dec
cmps
nop
add
inc
push
test
add
mov
lea
outs
xchg
cs
iret
or
add
and
lods
shl
iret
je
push
dec
mov
sub
popa
rol
adc
jno
dec
movs
or
push
scas
repnz
pop
xor
jns
mov
pushf
pop
test
cmp
or
shl
add
pop
rol
out
xor
in
enter
lock
mov
rol
mov
rcl
mov
idiv
mov
xchg
xchg
movs
add
(bad)
mov
push
iret
fisub
daa
outs
ror
ret
jg
loope
push
push
mov
movs
pop
in
add
js
pop
and
or
(bad)
push
rol
lahf
cmc
movs
push
rcl
sbb
and
lea
cmp
std
add
call
and
fadd
inc
xchg
and
xchg
mov
ss
das
and
fsub
xchg
sub
jo
ja
jno
(bad)
xor
cmp
arpl
cmps
mov
std
enter
adc
int3
movs
xor
hlt
retf
add
nop
loop
xor
out
dec
xchg
in
mov
loopne
loop
jmp
aaa
push
cs
sub
add
fs
fnsave
add
mov
in
pop
retf
mov
call
out
push
mov
mov
call
jmp
jle
out
push
xor
call
(bad)
fist
outs
pop
push
rcl
xor
cmp
xchg
gs
inc
dec
mov
add
dec
mov
jmp
sub
sbb
scas
or
mov
pop
pop
scas
jno
mov
mov
call
aam
aaa
cld
pop
add
sub
nop
pusha
xor
push
stos
fcomi
push
mov
rcl
std
movs
shl
sub
jle
or
xchg
mov
shl
in
fnsave
mov
adc
test
jle
mov
add
cmps
adc
cmp
jge
sar
cmp
cmp
(bad)
loopne
ret
pop
(bad)
fist
adc
pop
mov
dec
jle
mov
adc
mov
ds
and
inc
(bad)
packuswb
loope
stos
cdq
adc
in
cmp
cmp
push
push
jecxz
scas
push
das
xchg
nop
inc
adc
adc
fcom
push
fstp
inc
xor
pop
push
sbb
fs
fwait
ins
fcom
and
dec
ror
es
adc
add
xchg
dec
pop
cdq
jbe
shr
cmp
ja
in
push
push
mov
sti
dec
aam
cmp
aam
and
loopne
add
pop
push
push
into
inc
sar
shl
lock
pop
lods
ins
jl
fmul
lds
cs
push
jp
push
xchg
sub
std
outs
add
aaa
sub
pop
push
cmps
mov
fwait
xchg
fmul
(bad)
mov
sbb
xchg
adc
ss
mov
xor
test
and
lods
mov
fs
ret
add
sub
jno
cdq
adc
add
add
icebp
bound
into
sub
cmp
popa
jb
xlat
cmp
push
daa
jns
adc
add
pop
daa
ficom
jae
pop
jb
dec
popa
sub
dec
imul
mov
mov
xor
inc
pop
test
add
add
pusha
shl
jno
dec
into
adc
xor
pop
cli
push
sub
lods
iret
pop
cmp
pop
int3
pop
jbe
adc
in
adc
push
mov
sub
repnz
mov
lock
cmps
jne
add
sbb
push
ds
int3
push
int
cmp
sub
leave
add
repnz
(bad)
sbb
(bad)
mov
sub
jne
cdq
(bad)
daa
dec
test
jns
pop
add
mov
pop
xor
mov
aaa
rol
push
ret
(bad)
int3
scas
mov
dec
cld
jl
mov
repz
mov
inc
fsubr
inc
push
adc
pop
push
mov
pop
mov
imul
ds
jbe
sbb
movs
ret
xor
movs
loopne
inc
xchg
clc
jp
cwde
dec
mov
mov
cld
clc
sub
push
cld
inc
jae
jp
mov
mov
cmps
sbb
sub
and
sub
cmp
mov
inc
mov
test
out
fwait
cmp
push
out
(bad)
cmp
xor
xchg
outs
nop
pushf
sbb
leave
inc
jge
mov
push
pop
sub
scas
cmp
ret
sahf
fild
mov
(bad)
jge
cmp
popf
enter
xor
push
aaa
stos
push
cli
jno
or
pop
mov
je
xchg
in
adc
add
jo
jbe
mov
outs
push
push
xchg
push
jo
mov
mov
(bad)
loope
add
or
outs
mov
lea
shl
leave
cwde
push
ja
and
jmp
push
jle
(bad)
mov
jns
lock
sub
fcom
in
adc
outs
movs
cmp
xor
outs
cmps
arpl
pop
inc
or
sub
mov
inc
or
xor
or
dec
and
lods
call
pushf
push
stc
inc
mov
test
mov
mov
lods
xchg
jo
push
loop
popa
mov
aam
add
jb
test
ret
add
leave
lea
aas
in
jl
xor
leave
push
jge
add
add
mov
push
push
cmp
jge
mov
mov
jnp
and
ja
ror
adc
pop
popa
and
jge
jle
xor
fiadd
(bad)
xchg
sub
cmp
push
push
add
out
cmp
adc
nop
mov
inc
rol
ds
iret
je
lods
jne
dec
add
jp
(bad)
push
inc
push
pop
add
pop
loopne
test
out
dec
test
mov
jmp
add
sub
sub
dec
call
add
loope
leave
add
push
(bad)
aaa
pushf
ds
sbb
xor
ja
or
add
call
les
das
int3
push
jmp
xchg
push
cmps
push
jmp
inc
and
retf
jle
stos
mov
push
jp
inc
or
out
push
or
or
cmc
mov
loop
dec
sub
leave
adc
jp
mov
mov
jge
les
push
(bad)
fnstenv
inc
push
pop
mov
dec
cmp
cmp
retf
lock
ret
ja
inc
inc
cmp
jb
adc
sbb
clc
inc
lock
push
mov
in
adc
add
xchg
adc
xchg
cmp
add
and
mov
sbb
loope
pop
bnd
xor
(bad)
xor
jb
loope
ss
loope
cmp
xchg
test
push
cmps
pop
cld
mov
call
stos
or
fdivr
sbb
cmp
rcl
jnp
ja
jge
adc
or
test
push
or
add
sbb
daa
test
push
cmp
mov
mov
push
pop
xchg
push
loope
jl
hlt
bound
mov
clc
and
or
add
inc
sbb
(bad)
aam
sar
shl
add
jne
or
mov
pusha
popf
push
mov
cld
jne
lock
ficom
jns
fmulp
or
loopne
jae
pavgb
jmp
add
jbe
out
add
cmp
push
lods
adc
pop
jg
test
iret
aam
push
(bad)
std
popf
jb
call
jmp
mov
push
cmps
xchg
add
jns
inc
cmp
jp
mov
retf
ins
fcmovnu
cmps
mov
movs
fcom
adc
icebp
mov
xchg
mov
pop
or
(bad)
inc
xor
shl
js
iret
sub
mov
add
push
mov
cmps
jne
dec
or
push
jb
push
mov
pop
imul
mov
xor
jmp
mov
push
dec
xor
cli
aam
jns
cmp
and
(bad)
adc
fcmovne
pop
and
or
jge
in
mov
inc
add
int3
and
dec
ret
sub
data16
aas
jne
jae
imul
adc
xchg
jmp
fild
cli
in
mov
xlat
push
in
xlat
test
in
imul
icebp
call
mov
cmp
out
adc
rol
fadd
sbb
or
call
repnz
clc
jg
add
xchg
inc
jo
add
and
call
imul
pop
mov
push
mov
loopne
loopne
adc
(bad)
xor
pop
jne
pop
hlt
sar
retf
cmp
xchg
leave
shl
pop
pop
(bad)
(bad)
outs
and
jmp
mov
mov
mov
inc
sbb
fisttp
leave
sbb
mov
pop
sbb
out
cmp
cmp
adc
pop
push
adc
sub
outs
sbb
cmp
jno
add
or
sbb
aas
outs
jns
loop
or
or
push
fistp
sbb
stos
mov
mov
test
mov
sbb
inc
mov
mov
jnp
mov
adc
xor
or
mov
rcr
add
or
jns
gs
add
movs
dec
pop
pop
push
shl
pop
xor
cmp
cmp
not
inc
push
jecxz
xor
or
jge
adc
mov
pop
push
lea
jmp
pop
out
test
adc
dec
xchg
inc
jne
push
push
ins
xor
out
cwde
cli
dec
pushf
imul
das
sub
fistp
fild
ret
inc
test
test
inc
jne
jnp
cmp
jl
xor
sub
pusha
jmp
(bad)
mov
call
dec
mov
xchg
push
xor
xlat
add
or
mov
fimul
push
xchg
jmp
add
int
jle
loopne
jmp
lea
push
fisttp
adc
das
shl
mov
push
or
bswap
out
inc
lds
or
dec
or
(bad)
xor
push
lahf
(bad)
loop
cmp
fcomp
imul
mov
movs
ds
jne
inc
(bad)
mov
cmp
leave
inc
adc
cmp
jb
xor
jmp
mov
mov
sbb
jmp
jmp
loope
push
mov
test
push
sbb
je
(bad)
dec
stos
xor
jb
dec
fst
jecxz
arpl
cmp
push
sbb
and
cmp
ret
adc
push
inc
push
pop
xor
les
inc
push
je
or
jle
cli
push
cwde
fs
imul
daa
dec
imul
mov
iret
jle
adc
sar
inc
stc
adc
or
push
cmp
sbb
push
push
push
cmp
cdq
inc
cmp
adc
jge
jle
or
cld
lahf
pop
je
lea
shl
rcr
push
xor
ret
dec
adc
adc
lds
mov
inc
cmp
outs
dec
push
dec
and
adc
sti
dec
and
inc
cmp
add
pop
pop
not
in
aaa
mov
jmp
add
(bad)
ins
lods
add
inc
jl
or
mov
adc
push
clc
mov
or
scas
pop
out
inc
pusha
and
inc
cmc
and
adc
dec
inc
inc
and
fstp
pop
sbb
xor
cmp
adc
xor
pop
daa
mov
out
test
aas
pop
cmp
sub
aas
and
test
push
ja
pop
lea
push
push
push
adc
or
pop
mov
push
adc
icebp
mov
and
and
inc
cs
mov
xor
into
fs
push
dec
push
mov
push
loope
dec
stos
repnz
add
in
pop
push
cmp
push
mov
dec
(bad)
xchg
mov
push
cmps
jecxz
sbb
loope
dec
loopne
mov
jg
cmp
cmp
jg
pop
sbb
rdtsc
add
dec
inc
ds
add
test
nop
out
fbstp
dec
inc
or
ret
cmc
jne
out
mov
fistp
clc
or
sbb
fucomp
test
aam
pop
add
popf
inc
clc
sbb
in
test
xor
pop
enter
popa
call
or
jecxz
pop
ret
inc
lods
ret
faddp
pop
arpl
jae
mov
jb
mov
movs
imul
je
sub
sub
sub
inc
pushf
push
fstp
enter
arpl
mov
inc
mov
or
in
xchg
das
(bad)
jle
add
or
fbstp
adc
test
or
jl
cli
push
lea
jo
or
xchg
add
mov
adc
push
jp
jmp
pop
nop
inc
pop
mov
pop
ss
iret
push
adc
mov
mov
leave
enter
push
outs
popf
add
dec
rcr
popa
sbb
or
or
or
inc
push
or
add
call
loopne
enter
xchg
cmp
shl
rcr
push
into
leave
xchg
jecxz
sub
mov
daa
and
mov
ror
and
jge
xor
ror
inc
shr
sti
jb
pop
dec
rcl
jne
movsx
push
sub
jle
xor
push
push
rcr
and
sbb
test
dec
adc
xchg
pushf
and
jle
das
fld
fsub
js
sbb
aaa
fldz
cmp
pop
int3
inc
data16
fadd
push
push
push
push
sub
inc
int3
es
fs
nop
or
xchg
adc
xor
xor
fs
lock
sbb
jnp
or
mov
adc
push
add
sbb
pop
repz
sub
in
aad
enter
pop
sub
movs
fild
mov
mov
dec
test
pop
rcr
rcr
and
jge
add
add
mov
sbb
test
jl
je
inc
repz
imul
adc
jl
out
sbb
leave
rol
imul
test
loopne
movs
or
cwde
xchg
adc
add
loope
bound
std
pop
clc
sub
dec
adc
rol
js
and
push
mov
sbb
dec
cmp
xor
mov
inc
jmp
inc
or
add
push
imul
sbb
aam
imul
inc
inc
nop
dec
lock
movs
inc
pop
inc
mov
push
inc
or
push
or
test
mov
jmp
(bad)
jmp
and
jo
sub
and
add
loop
gs
adc
popf
lea
dec
or
lods
iret
inc
push
xor
or
push
enter
sub
cmp
sub
clc
mov
fdivr
pop
movs
int3
les
jecxz
mov
xchg
fst
jnp
ror
pop
stc
and
jnp
pop
mov
or
or
out
int
xchg
cmps
mov
add
and
rcl
push
push
enter
add
rcl
test
dec
loopne
lock
dec
sub
cmp
mov
and
push
addr16
push
mov
xlat
mov
sbb
cmp
and
pop
sar
sti
sar
pop
cmp
pop
or
sbb
xor
retf
xor
or
sub
xor
xchg
inc
clc
or
mov
dec
xchg
or
jo
call
movs
mov
cmp
jne
mov
lea
mov
call
xchg
xchg
xchg
cmps
movs
or
push
or
dec
push
xchg
arpl
adc
pushf
inc
inc
sbb
pop
mov
ror
jo
test
jnp
call
je
cmp
(bad)
push
lock
lods
popf
xchg
add
lea
imul
jo
fisub
cdq
adc
cmp
hlt
and
aaa
das
ins
inc
ins
lea
cmps
inc
xor
mov
in
inc
push
and
push
js
ror
sbb
sbb
adc
out
kshiftrd
push
int3
add
dec
xchg
add
lea
xor
mov
dec
cmp
shl
sub
mov
mov
aaa
sub
adc
ja
mov
jle
mov
mov
sub
add
add
mov
add
daa
add
in
pop
ret
add
mov
adc
add
push
inc
cmp
call
and
xchg
sbb
adc
push
repnz
add
and
rcr
adc
mov
adc
loop
imul
jg
mov
mov
rol
mov
push
fisub
fwait
pop
js
ror
popf
movs
mov
mov
mov
cmp
and
xchg
or
sbb
or
push
js
jb
rol
inc
mov
out
(bad)
sbb
retf
xor
or
mov
adc
push
int3
sti
(bad)
mov
push
push
fstp
mov
pop
mov
mov
stos
push
call
mov
mov
and
test
js
pop
push
add
inc
movs
ret
lahf
shl
lods
mov
add
push
loopne
adc
cli
clc
xlat
or
sbb
xor
jmp
dec
inc
and
jo
out
push
rcr
sbb
lock
mov
push
in
mov
movs
ins
jle
inc
outs
xchg
retw
shl
int
inc
push
sbb
dec
test
inc
cmp
cmp
jle
dec
inc
lock
cmp
scas
mov
sub
mov
sub
cmp
jl
xor
push
adc
jge
push
or
cmp
dec
and
mov
lea
test
add
pop
les
adc
mov
cmp
mov
adc
call
stc
inc
jecxz
mov
sbb
xor
add
sub
and
xor
cmp
pop
xor
and
rol
das
mov
jle
or
je
or
(bad)
jmp
or
or
cmp
add
dec
(bad)
jne
or
popa
es
test
mov
mov
movhlps
in
std
add
jne
mov
adc
mul
dec
cmp
mov
mov
test
add
repnz
xchg
ret
or
inc
mov
add
jge
fsub
repnz
inc
sar
sbb
xor
mov
das
scas
mov
push
loop
sbb
mov
gs
enter
push
push
sbb
or
in
test
in
cmp
adc
loope
arpl
pop
in
adc
cmp
mov
ja
nop
fbstp
test
pop
or
adc
push
jns
repz
mov
outs
addr16
cmp
jb
sbb
not
shl
out
(bad)
sbb
(bad)
retf
add
mov
ret
jno
mov
ror
jmp
lock
xchg
or
add
mov
and
add
inc
dec
fcom
mov
mov
adc
sar
ins
add
adc
imul
push
pop
or
js
aam
dec
sub
repnz
add
and
xor
push
cmp
loope
add
sub
dec
add
outs
cmp
fiadd
push
xor
inc
neg
add
mov
sahf
shl
push
inc
add
(bad)
cmp
add
cmp
int3
sbb
pop
in
lock
loope
fcom
adc
daa
lock
aas
jne
outs
into
sub
add
jns
or
ret
jmp
or
outs
and
push
or
mov
mov
clc
xor
les
adc
or
enter
or
cwde
adc
icebp
dec
mov
sbb
jle
sub
inc
or
das
inc
into
jno
loopne
mov
sbb
pop
fsub
mov
imul
sbb
sub
and
push
add
push
rol
push
mov
or
mov
fidiv
push
pop
cmp
std
mov
push
push
push
cmp
mov
push
pop
and
aam
lods
or
pop
mov
test
ret
in
sub
mov
xor
sbb
dec
mov
icebp
mov
lock
(bad)
outs
mov
enter
xchg
ror
fimul
xor
in
mov
mov
xor
sbb
xor
cmp
adc
inc
and
adc
mov
jno
mov
je
mov
(bad)
adc
push
je
or
je
add
jb
add
sbb
rol
xor
test
and
sar
popa
cmp
fs
(bad)
fld
dec
add
ror
add
mov
add
xchg
jne
and
rol
in
xchg
adc
push
inc
jmp
cmc
div
dec
jmp
cmp
cmp
and
push
pmaxsw
in
adc
dec
(bad)
xchg
clc
sbb
mov
inc
lock
adc
push
sbb
fbstp
or
mov
and
mov
lea
sub
not
pop
or
add
mov
inc
imul
inc
dec
ja
movzx
lahf
inc
imul
inc
jae
jmp
pop
push
adc
jmp
adc
cmp
push
mov
or
jmp
cmc
jmp
adc
sbb
outs
pop
gs
js
icebp
ret
push
iret
ret
cmp
movs
(bad)
xor
sub
add
icebp
add
call
pop
pop
add
add
mov
adc
add
add
sbb
sbb
idiv
sub
je
dec
je
add
inc
mov
xor
sbb
adc
scas
push
cld
in
push
mov
pop
jmp
es
retf
xchg
or
sbb
xor
push
cmp
and
jae
ret
loopne
cs
sub
daa
pop
je
cmp
adc
das
popa
pop
or
sub
push
out
cmps
xor
adc
or
push
sub
or
pop
je
jg
sti
sbb
shl
aas
jne
mov
jmp
xchg
sbb
cmp
fisttp
clc
jle
and
fnstenv
cmp
cmp
inc
dec
cmp
jne
lea
cmp
sti
xchg
cmp
popf
aam
fmul
pop
test
pop
pmovmskb
(bad)
stc
aad
sbb
xor
sub
loope
inc
inc
fsubr
sbb
ss
sbb
or
clc
mov
jmp
jne
nop
jo
loopne
fmul
les
cdq
sub
loop
rcr
adc
arpl
push
pop
mov
test
jbe
or
test
pop
ret
mov
pop
retf
ret
fwait
lods
xchg
lock
adc
movs
push
inc
mov
mov
sbb
push
mov
test
data16
shl
loope
lahf
push
retf
mov
pop
mov
add
ins
or
das
imul
jb
sbb
stc
pop
push
mov
inc
or
ror
mov
xchg
pop
pushf
dec
test
mov
repnz
dec
mov
jbe
aaa
push
lock
or
push
loop
mov
cmp
fild
push
xlat
and
jne
sbb
mov
ss
sub
fisubr
push
push
test
popf
add
ret
(bad)
cdq
inc
lock
jp
lods
mov
js
and
jge
jbe
xchg
ins
inc
jne
test
add
je
les
cmc
je
jbe
mov
xor
into
inc
and
jmp
jle
cmps
shr
dec
pop
je
sbb
sbb
dec
pop
or
js
adc
std
xchg
leave
test
jne
push
jmp
leave
and
or
rol
push
xor
adc
jns
int
pop
cmc
pop
xlat
(bad)
sub
movs
ins
pop
mov
add
mov
cmp
add
daa
movs
sub
(bad)
mov
(bad)
(bad)
inc
cmp
sbb
mov
mov
in
mov
lea
pushf
cdq
fmul
jo
push
das
pop
sbb
add
loop
int3
or
and
inc
icebp
inc
jno
pop
pop
push
xor
and
add
add
sbb
cdq
clc
mov
das
inc
mov
fild
jp
adc
push
js
sbb
in
xor
mov
daa
loope
lahf
add
mov
cli
mov
jl
jne
cmps
nop
jle
(bad)
jmp
xor
dec
jmp
xor
jmp
pop
loop
loope
cmp
adc
jo
movs
fist
aad
outs
and
or
dec
mov
mov
mov
adc
call
ss
(bad)
lea
in
in
mov
or
and
pop
and
and
into
xor
jo
lock
push
or
push
add
rcr
adc
jbe
ja
jno
mov
mov
pop
ss
icebp
xchg
out
adc
pop
cmp
or
div
or
jmp
push
fstp
adc
dec
int3
sbb
lods
adc
ss
(bad)
jle
fstp
leave
and
jecxz
mov
fisubr
jns
cmc
mov
(bad)
jo
add
add
outs
add
imul
xor
test
cmp
add
jecxz
bnd
js
add
mov
xor
inc
pop
pop
adc
mov
rol
add
loopne
add
icebp
inc
call
shr
or
loop
dec
dec
push
adc
mov
xor
xchg
pop
inc
add
jecxz
mov
movs
loop
mov
adc
sbb
and
movs
mov
xchg
jl
pop
jnp
jmp
fst
fstp
sub
cmp
adc
int
mov
jnp
cmp
jl
div
in
test
sub
sbb
and
or
and
aas
mov
in
jl
movs
xor
mov
and
ret
xor
pop
sub
mov
loopne
inc
pop
add
add
add
ins
(bad)
shl
or
dec
fmul
or
xchg
sahf
(bad)
mov
jnp
call
jbe
and
or
mov
or
hlt
xchg
dec
push
mov
add
js
pusha
or
fldcw
cmc
push
pop
mov
inc
push
or
fwait
pop
mov
add
or
data16
push
or
and
stos
push
xor
xor
mov
or
popf
cmp
aas
adc
jne
sbb
adc
je
sub
jp
fiadd
add
(bad)
aam
das
popa
xor
sub
fnstcw
bnd
adc
ja
push
and
retf
js
or
xor
outs
dec
jge
sub
stc
cli
(bad)
ins
add
mov
test
jne
inc
sti
sti
pop
loope
stc
or
test
jne
adc
outs
dec
mov
jne
ins
xchg
mov
(bad)
jp
dec
test
sbb
mov
scas
sbb
test
or
jg
pop
mov
sbb
xchg
cs
add
cdq
push
out
cwde
xor
imul
retf
div
sbb
add
dec
mov
mov
adc
dec
dec
jp
dec
fdiv
add
inc
adc
fwait
jge
loope
test
push
push
test
loope
and
mov
leave
ds
call
sbb
sbb
adc
xor
push
inc
jle
popa
cmp
and
outs
in
cld
std
es
sub
clc
aam
cdq
pop
xchg
or
or
mov
data16
pop
adc
out
mov
cli
mov
jne
mov
jne
pusha
jb
or
cmp
cmp
push
mov
loop
fild
xchg
push
adc
push
pop
cwde
sub
adc
or
ss
sub
movs
scas
xchg
cmps
push
les
dec
push
test
shl
pop
fst
push
sbb
push
jae
adc
popfw
sbb
cmp
lods
or
jb
jmp
sub
ror
ret
cmp
pop
xor
add
adc
adc
loopne
ffree
repz
push
dec
int3
dec
aam
cs
mov
pop
sub
int3
inc
mov
stos
jmp
push
jbe
or
push
and
sub
mov
(bad)
cli
fist
cmps
add
mov
imul
mov
jl
cmp
aas
(bad)
rcl
mov
push
dec
jne
mov
mov
sbb
fadd
shl
mov
aam
call
icebp
jb
enter
pop
xchg
cdq
mov
or
and
in
push
mov
and
inc
mov
mov
jecxz
pop
push
mov
jne
ds
stos
jmp
enter
popa
add
int
mov
jnp
bound
aad
add
addr16
pop
icebp
mov
push
std
fs
mov
jb
mov
xor
fcom
adc
sub
cs
cld
mov
je
out
xor
cmp
add
cmps
or
jne
adc
and
fdivr
pop
xchg
jmp
data16
add
or
mov
outs
pop
or
push
or
xor
xchg
or
cmp
out
leave
(bad)
sub
or
std
jbe
shl
test
add
push
int
inc
pushf
and
mov
push
pop
push
push
loope
xchg
dec
or
cwde
ds
mov
xchg
mov
xor
lods
mov
push
cmp
sub
xchg
jns
pop
or
xor
or
idiv
and
pop
mov
sar
sbb
adc
(bad)
outs
add
sub
js
dec
mov
test
and
adc
lea
sub
add
cmp
jg
test
nop
adc
mul
sti
mov
in
sti
(bad)
divps
add
and
test
fdivrp
adc
enter
iret
aam
ja
(bad)
in
adc
sub
dec
sti
adc
sbb
cmp
ret
(bad)
xchg
adc
mov
cld
jmp
add
push
das
popf
movs
aas
jnp
add
loopne
retf
dec
xchg
dec
and
rcr
pop
fstp
jmp
inc
inc
pusha
fs
daa
and
mov
pop
add
jae
mov
test
push
pop
mov
push
push
loop
lea
cmp
cmp
stc
add
cmp
into
and
adc
in
adc
push
jmp
push
cwde
outs
mov
sbb
addr16
sub
arpl
(bad)
jae
push
inc
popf
test
or
movs
lods
repnz
adc
sub
stc
or
mov
add
push
add
out
test
sahf
add
rcr
dec
ret
xchg
xchg
sbb
daa
xchg
fadd
or
(bad)
jne
push
and
or
cmp
adc
out
sbb
push
add
sub
test
aaa
push
scas
cmp
or
nop
gs
lds
int3
add
push
fs
mov
add
xchg
jbe
sub
(bad)
cmp
stc
js
test
push
pop
bound
sub
movs
jmp
mov
stc
cmp
add
pop
mov
pop
cmp
mov
fsincos
jg
push
mov
mov
mov
mov
or
lods
dec
xor
adc
lea
mov
(bad)
push
dec
add
add
nop
inc
inc
inc
inc
jle
sub
(bad)
push
pop
or
push
add
cwde
hlt
rep
call
inc
mov
mov
dec
shl
lock
shl
hlt
clc
clc
cld
ret
dec
dec
fdivr
lea
outs
lock
adc
loopne
push
dec
pusha
and
pusha
cmp
pop
leave
ret
nop
cmp
repz
sbb
(bad)
sbb
lea
jl
cld
(bad)
(bad)
pop
xor
rcr
fst
stc
in
mov
enter
fcom
clc
in
cmp
push
and
fild
jne
add
dec
(bad)
jns
mov
aas
inc
sbb
out
add
nop
dec
xchg
xchg
mov
push
pop
add
mov
adc
je
jl
test
cmps
movs
mov
das
sbb
sbb
adc
adc
xor
ror
or
add
outs
pop
dec
add
ror
fadd
in
adc
das
lsl
fist
mov
shr
cmps
stos
adc
outs
mov
push
add
dec
inc
jecxz
adc
ins
jmp
lods
sti
cs
(bad)
pop
pop
xchg
sbb
pusha
jno
add
cmp
sub
pusha
mov
mov
ins
popa
std
xchg
aaa
mov
mov
shr
xchg
mov
in
add
cld
or
daa
add
ss
adc
loopne
mov
or
fs
and
cmp
sar
sub
adc
xor
mov
cld
in
add
dec
outs
test
nop
rol
mov
mov
enter
xor
shl
stos
jo
jo
sbb
push
jb
jo
mov
ret
icebp
fsub
cmps
je
sbb
sbb
mov
pop
hlt
clc
shr
mov
ror
fcomp
inc
int3
and
rol
pusha
sub
retf
lahf
mov
push
pop
addr16
add
loop
(bad)
pop
jnp
fsub
fcomp
int3
mov
mov
movs
and
pop
pcmpeqw
mov
inc
and
dec
ret
cdq
lods
ror
enter
adc
cli
mov
outs
adc
jmp
mov
es
push
imul
imul
arpl
pushf
xchg
push
add
aad
jmp
pop
scas
jns
adc
ins
ss
ror
jg
push
rol
cmp
jle
cmp
dec
dec
sti
dec
jecxz
push
dec
adc
mov
or
test
sbb
sbb
pcmpeqw
loope
int3
adc
mov
call
test
mov
imul
and
push
jbe
loopne
add
repz
jge
(bad)
push
xor
xchg
xor
das
add
cs
pop
loope
adc
movs
cmp
lock
cli
inc
adc
pop
mov
mov
call
jo
adc
ret
pop
jle
inc
in
or
sbb
jb
cmp
dec
adc
ss
mov
(bad)
jp
popa
adc
dec
add
pop
pop
(bad)
cwde
ror
stos
mov
push
mov
ins
push
sub
add
push
push
imul
mov
mov
loopne
xchg
movs
sbb
dec
dec
inc
(bad)
in
adc
adc
cmp
add
inc
pop
je
sbb
scas
rol
iret
(bad)
aas
inc
jmp
add
sub
or
ror
cli
fimul
or
sti
add
push
push
rep
je
lea
push
inc
dec
jl
cmp
mov
push
rcl
push
pop
and
xchg
inc
js
adc
mov
aam
adc
adc
or
push
enter
aas
out
ins
sbb
loope
retf
call
dec
in
xor
sahf
push
loop
sbb
rcr
dec
and
pop
fist
cmp
enter
mov
mov
mov
or
movs
push
xchg
push
fwait
jns
les
mov
lods
dec
mov
psubusw
movs
imul
pop
mov
and
dec
shl
push
jl
rcl
dec
cwde
push
or
stos
dec
push
mov
jne
adc
jg
pop
cmp
test
prefetch
retf
and
pop
dec
pop
dec
int3
xor
and
add
stos
push
stos
adc
inc
fild
and
cmp
or
out
mov
nop
ja
lods
loop
pushf
rol
or
es
ret
jmp
idiv
outs
and
push
sbb
push
cmp
sar
nop
xor
fs
xchg
adc
cmp
test
cmp
mov
cs
push
add
cld
add
xor
cmp
rcr
jae
pop
push
(bad)
xchg
not
test
pop
je
push
lds
aad
cmp
out
adc
and
hlt
pop
adc
sahf
jbe
xchg
or
or
cmp
call
cmp
jne
cmp
push
ret
jmp
inc
imul
xchg
push
or
inc
add
inc
fiadd
pushf
xchg
push
fldpi
push
arpl
jg
jne
jo
in
xchg
push
mov
xor
rcr
xchg
popa
data16
movs
xchg
add
cmps
sbb
call
(bad)
xchg
and
inc
and
push
sbb
xchg
ret
bound
popa
mov
add
xlat
js
xor
dec
movs
test
pcmpeqw
inc
dec
je
adc
call
cmp
jne
mov
mov
adc
shr
jecxz
cmp
(bad)
jmp
dec
cld
mov
dec
adc
sub
pavgb
jne
rol
jmp
pop
sbb
aaa
sbb
imul
sub
out
sbb
out
mov
push
iret
mov
and
dec
pop
int
mov
je
push
ins
fsubrp
xor
ja
sub
cmps
and
xchg
push
pop
cmp
popa
mov
fidivr
in
cwde
and
push
or
pextrw
push
xchg
inc
mov
adc
mov
enter
jo
in
jge
retf
ins
inc
cwde
sub
mov
ja
jae
or
lock
adc
mov
test
fisttp
jl
adc
xchg
mul
jne
push
pop
mov
inc
inc
add
and
push
sar
push
jb
adc
pushf
mov
leave
push
jne
(bad)
pop
test
jg
xchg
mov
jmp
xor
imul
add
hlt
dec
sub
and
pop
aaa
dec
aas
test
gs
xor
inc
mov
mov
xchg
ret
inc
dec
clc
fbld
test
fucomi
or
leave
inc
mov
mov
rol
and
xchg
xchg
(bad)
jmp
aam
xchg
push
and
pop
sbb
pop
push
loope
dec
sbb
push
(bad)
cmps
lock
pop
cmp
inc
jge
mov
inc
inc
pushfw
or
xchg
stc
imul
rcl
dec
xchg
jne
dec
shl
xchg
fisubr
cld
mov
ins
(bad)
cmp
sbb
mov
sub
rol
sbb
or
ret
cmp
sbb
jmp
sbb
and
pop
lea
jmp
sbb
or
movs
add
jmpw
ret
push
push
rol
xchg
fsubr
ins
jle
pop
ret
dec
das
pshufw
sbb
add
push
(bad)
inc
shr
aaa
inc
cmp
loope
int
mov
pop
sub
fmul
nop
int3
jb
or
jge
jg
fwait
lea
pusha
jmp
std
test
jne
add
or
pop
xchg
push
sbb
loopne
shr
pusha
pop
pop
adc
push
mov
loopne
sub
movs
lock
adc
xchg
(bad)
and
mov
xchg
popf
jnp
cwde
in
fxch
fdivr
xlat
push
or
and
cmps
inc
mov
or
aam
add
sahf
imul
sbb
out
add
inc
push
aam
loop
in
fcom
shl
outs
add
aaa
cwde
sbb
xchg
xor
add
sbb
pop
sub
or
cmc
(bad)
repnz
pop
lods
aam
xchg
xchg
je
in
mov
inc
mov
dec
or
or
adc
xchg
dec
loopne
cwde
xchg
and
dec
and
cli
xor
pop
lods
cdq
push
int3
and
adc
adc
add
mov
pusha
adc
ret
cmc
arpl
das
jbe
add
add
idiv
cmc
in
mov
(bad)
test
add
jae
sub
test
ss
dec
stos
jmp
stos
pop
or
inc
test
je
inc
cmps
or
inc
scas
jg
inc
aad
rcr
test
pop
jne
mov
fwait
push
add
arpl
(bad)
aas
loop
clc
inc
cmp
je
cmp
adc
inc
lods
jb
mov
int3
std
xchg
pop
mov
push
and
popa
stos
stos
mov
stos
stos
mov
jbe
mov
mov
test
out
inc
cmp
scas
pop
inc
inc
sar
ret
xchg
dec
mov
cmp
mov
lods
lahf
pop
lock
lea
int3
stos
lea
jnp
jg
int
sub
push
add
add
cli
cmp
ja
mov
mov
mov
jbe
add
sbb
inc
inc
adc
add
xor
jb
mov
mov
and
mov
pop
mov
mov
jns
into
inc
adc
push
mov
cmp
outs
fst
push
mov
clc
out
xor
jmp
call
mov
daa
pop
sub
sbb
fldcw
pop
mov
push
stos
popa
xchg
mov
push
push
pop
lods
(bad)
mov
std
fdiv
cld
jne
mov
or
xchg
sub
lods
(bad)
jle
lea
or
repz
ret
mov
pop
ret
repz
jecxz
sbb
jl
aas
mov
push
retf
movs
sub
jmp
and
inc
(bad)
dec
and
jle
adc
rol
push
mov
bsf
(bad)
jb
mov
mov
jp
loop
and
jno
push
jnp
call
lea
push
(bad)
or
cmps
(bad)
lock
psllq
push
rcr
lahf
(bad)
push
xor
int
xor
mov
imul
push
cmp
sbb
inc
(bad)
cmp
clc
mov
in
mov
test
je
pop
adc
xchg
add
in
sbb
add
push
mov
jecxz
mov
ret
xchg
add
inc
jb
or
gs
enter
mov
xchg
out
popa
jb
or
push
popf
cmp
pop
adc
and
loopne
xchg
mov
cld
test
push
in
pop
stc
lods
inc
adc
xchg
iret
or
clc
scas
adc
imul
scas
and
dec
push
jo
lahf
cmp
repnz
scas
clc
scas
imul
fadd
aam
imul
or
add
pusha
ror
loopne
push
sbb
scas
lahf
nop
xchg
nop
mov
mov
in
cmp
test
enter
add
add
test
mov
inc
dec
shl
pop
fs
je
mov
lahf
pusha
rcr
or
push
mov
add
lahf
push
pop
imul
(bad)
rcl
xchg
mov
mov
lea
aad
mov
or
ret
or
sbb
jg
syscall
mov
inc
jmp
cmp
push
idiv
(bad)
add
add
and
test
mov
add
adc
(bad)
int
mov
xlat
and
and
xor
inc
repz
or
std
js
or
lock
and
add
in
gs
das
aas
add
pop
pop
cmp
out
inc
inc
imul
div
mov
or
ret
jns
repz
jp
push
wrmsr
loope
mov
push
push
mov
and
and
ret
ror
push
(bad)
cmp
sub
aaa
cmp
jae
add
xor
and
jb
pop
pop
push
out
pop
push
cmp
jbe
add
or
scas
sbb
aam
jae
add
(bad)
cmc
mov
add
or
push
std
sbb
add
dec
test
mov
test
jne
in
ret
int
cmp
push
fisttp
jno
cmp
test
mov
jmp
scas
and
mov
mov
mov
mov
jo
fmul
push
cmps
push
xor
mov
outs
add
inc
inc
pusha
test
sub
in
add
js
aaa
call
(bad)
stos
mov
mov
shr
lods
mov
pop
fcom
mov
add
test
inc
iret
mov
add
leave
pop
outs
nop
inc
jno
imul
and
sbb
sub
or
or
adc
or
push
out
pcmpeqw
mov
inc
neg
add
cmp
sti
or
add
xor
ja
and
adc
jg
dec
mov
mov
mov
dec
inc
cmp
jb
and
dec
aaa
or
and
xchg
jmp
push
iret
push
adc
test
outs
outs
jno
xor
and
jl
jmp
loop
mov
adc
and
loop
ret
mov
int
outs
shl
adc
fstp
inc
mov
repz
mov
hlt
fst
jle
aas
inc
ja
or
data16
ins
cld
fistp
push
loope
lock
mov
cli
loop
mov
out
das
mov
jo
inc
adc
pop
jmp
adc
push
arpl
out
pop
dec
or
ret
loop
adc
loopne
sub
call
data16
jne
idiv
sbb
icebp
push
dec
mov
shr
rep
adc
or
xchg
adc
mov
xor
fist
shl
cli
sub
push
bound
popa
ror
and
movs
inc
call
fdiv
xchg
mov
add
mov
inc
(bad)
fsub
dec
xchg
dec
push
push
sbb
fsubr
cmp
fdiv
lahf
les
inc
cld
dec
add
or
mov
push
fstp
xchg
movs
mov
ja
mov
stc
jne
ds
ret
and
push
and
and
mov
adc
or
cmps
cmp
mov
lods
aam
mov
bsr
cmp
repz
daa
sub
inc
cdq
nop
retf
dec
push
retf
xor
sbb
xlat
jbe
sar
(bad)
jo
or
inc
or
enter
adc
aam
test
sti
add
push
mov
cmp
pop
mov
shr
rcl
jmp
add
push
or
loop
popa
scas
arpl
add
inc
adc
imul
mov
jbe
mov
cmp
mov
and
mov
sbb
add
je
movs
jecxz
dec
lahf
dec
shl
scas
jmp
nop
sbb
arpl
and
mov
adc
dec
add
fld
xchg
push
lods
test
rol
xchg
jge
mov
adc
and
ffreep
add
push
adc
inc
pop
adc
pop
adc
jp
or
fld
sub
jns
add
inc
jne
fild
(bad)
out
pushf
cmp
inc
stos
jae
repz
cmp
jle
mov
jg
cld
jg
push
sub
fdivr
std
(bad)
lods
test
das
cmp
jno
lock
add
test
and
jo
pop
sub
cmp
cs
mov
retf
(bad)
or
sub
jecxz
je
int
sub
jbe
(bad)
cmp
pop
cdq
mov
idiv
jnp
movsx
push
inc
add
or
dec
mov
sti
pop
mov
cdq
sub
inc
add
adc
push
add
or
push
mov
inc
push
test
in
in
aaa
stc
inc
or
or
xchg
jle
iret
mov
rol
push
inc
sbb
add
nop
ins
cmp
or
dec
jge
inc
pop
pop
mov
inc
cwde
jg
jnp
cld
(bad)
add
dec
or
pop
ins
(bad)
scas
add
or
mov
add
das
or
lahf
hlt
scas
cmp
and
or
sub
cmp
cld
ret
jb
stc
and
sbb
pop
ret
test
mov
sbb
pop
jae
cmp
fstp
pop
or
push
repnz
mov
sbb
inc
sub
in
mov
pusha
imul
inc
(bad)
(bad)
(bad)
jle
rol
fnsave
add
add
cld
push
xor
and
sbb
add
int
inc
dec
sti
stos
sub
ret
adc
std
cld
retf
xor
lds
jle
cmp
test
cmc
inc
(bad)
test
data16
and
test
ja
jl
loop
pop
push
or
push
add
pusha
scas
js
mov
adc
ficom
jge
or
int3
cs
adc
pop
out
das
div
mov
jle
out
and
add
push
jmp
retf
add
ret
add
pushf
std
clc
mov
dec
test
adc
ins
fsubrp
xchg
cmp
or
jge
lea
lea
shl
xadd
les
cmp
icebp
mov
mov
ss
inc
not
daa
repnz
in
not
(bad)
cmp
or
jae
add
inc
in
push
leave
pushf
jne
mov
test
push
adc
lahf
jns
or
or
xlat
jge
pop
shl
stos
dec
add
jo
(bad)
and
popa
and
cli
mov
cwde
dec
add
mov
pop
stos
fidivr
(bad)
mov
rep
fild
mov
jge
mov
adc
jo
scas
sub
and
icebp
cmp
inc
mov
js
repz
inc
retf
mov
mov
loope
dec
loopne
clc
add
cdq
test
fild
in
inc
lock
sub
inc
or
mov
push
add
jno
(bad)
pop
and
out
inc
fst
test
clc
jp
loope
inc
sbb
scas
(bad)
gs
cld
icebp
fld
push
sbb
fiadd
or
lea
cmp
jge
inc
inc
jmp
and
xchg
adc
int
adc
jp
test
leave
add
sbb
ins
adc
adc
add
sbb
sbb
icebp
push
and
and
xor
(bad)
mov
jno
push
fadd
xor
enter
pcmpgtb
popa
and
pop
cmc
xor
and
pcmpeqw
push
jo
and
pop
push
push
test
inc
add
push
xor
pop
push
jne
mov
jmp
repz
fst
mov
sub
cs
mov
cmp
scas
xlat
shl
pop
push
test
jg
mov
cmp
jne
or
or
pop
cmp
jne
sub
aam
sahf
mov
pop
shl
push
mov
mov
sbb
shl
inc
ret
pop
xchg
(bad)
scas
add
add
jmp
add
jg
mov
retf
jmp
leave
rcl
cmp
cld
push
mov
arpl
sar
fsub
pop
cmp
scas
push
icebp
sub
push
fsubp
pop
mov
xor
sbb
arpl
loopne
js
jbe
aas
add
or
das
mov
sbb
adc
iret
ret
rol
jmp
das
add
and
mov
cmp
inc
sbb
inc
or
cs
jl
scas
xchg
push
mov
stos
dec
call
inc
and
jle
bound
jle
jne
les
push
jo
jp
cmp
pop
mov
jo
cmovo
cdq
js
xchg
mov
fstp
add
retf
stc
add
adc
cmp
adc
repz
inc
sub
jge
stc
mov
scas
hlt
push
fstp
dec
inc
pop
cld
cmp
jae
dec
cmp
jg
cmp
jg
inc
cmps
or
pop
jle
(bad)
fistp
ror
clc
jle
cwde
cmp
mov
mov
sbb
dec
clc
xchg
cmp
(bad)
sti
adc
ins
jg
or
sbb
push
imul
fbstp
lds
adc
aaa
jb
lods
mov
ret
sub
fimul
aad
ja
inc
les
push
mov
ins
jmp
(bad)
les
dec
sbb
add
xor
clc
jae
cmp
jl
pop
and
lock
and
sbb
sbb
push
cmp
xlat
loopne
arpl
aad
and
in
pop
push
fst
rol
adc
add
or
rol
xchg
test
and
shl
ror
and
lods
loopne
cli
inc
push
and
push
add
test
sbb
mov
add
or
or
scas
jne
add
pop
or
ins
jl
scas
mov
add
les
je
adc
call
lods
inc
nop
push
(bad)
gs
or
mov
shl
mov
jl
sbb
cmp
or
test
ins
sub
fsubr
lock
cmps
mov
in
pop
mov
adc
add
not
xor
sbb
js
sbb
add
outs
jecxz
push
mov
fdivr
adc
outs
push
fst
pop
add
jl
out
and
inc
das
popa
dec
call
and
push
jbe
xchg
int3
mov
stos
pop
lock
inc
mov
popf
fmul
mov
cld
inc
jns
adc
xor
fs
pop
js
push
dec
jo
pop
sbb
not
mov
into
adc
(bad)
xchg
add
dec
inc
sub
imul
test
mov
adc
adc
push
or
jne
sbb
sbb
cmp
in
loopne
xlat
psubusb
jg
and
lods
push
bound
inc
cwde
dec
out
je
sahf
mov
jnp
adc
js
xchg
sbb
xchg
sbb
retf
xor
inc
jmp
pusha
sub
pop
mov
jl
add
add
inc
cmp
jns
loopne
das
pop
dec
xor
repnz
dec
and
push
jo
jmp
mov
jnp
aam
and
adc
dec
adc
cmp
push
in
shl
shr
mov
dec
sub
js
add
mov
(bad)
mov
push
jmp
xor
add
mov
xor
in
mov
push
cmp
jmp
jae
push
imul
pop
dec
dec
repz
add
cmp
lea
(bad)
rcl
jmp
dec
jmp
xor
push
mov
scas
jl
mov
mov
loop
sub
test
jmp
into
add
pop
push
push
int
ror
rcr
inc
or
aam
or
int3
adc
cli
mov
mov
add
add
pop
or
pop
xor
retf
pop
dec
and
out
es
xlat
jp
mov
mov
mov
aad
jle
add
leave
mov
pop
es
jmp
stc
mul
je
clc
jne
mov
pop
xor
into
shl
(bad)
adc
push
sti
cmp
fcompp
mov
jp
inc
pop
test
dec
push
jns
enter
pushf
pop
shl
push
dec
add
mov
jo
cmps
adc
push
or
out
xor
xchg
nop
jns
lea
aas
dec
mov
push
xor
aad
sar
push
dec
mov
mov
xchg
shr
push
pop
mov
pop
xor
je
in
add
pop
stc
or
jmp
rcl
jb
mov
mov
out
sbb
inc
ins
mov
adc
cmp
pop
stos
enter
ins
es
jbe
push
add
lahf
adc
dec
xor
(bad)
add
sbb
push
cmp
sbb
jno
inc
push
xchg
fisubr
add
pop
xchg
or
imul
(bad)
jl
lock
test
mov
sbb
mov
sahf
int
dec
or
mov
loop
dec
dec
fs
jmp
cli
adc
add
loop
add
or
xlat
ret
sar
sar
lea
shl
mov
call
jns
xchg
fs
inc
cmp
cmp
jl
mov
and
mov
(bad)
adc
sbb
out
cmp
cmp
push
stc
ds
(bad)
out
nop
lahf
sbb
pop
aas
add
push
call
pop
mov
ror
and
sbb
adc
inc
add
mov
sbb
call
mov
mov
xor
(bad)
push
out
stos
ret
cmp
add
jae
cmp
jne
pop
call
or
cmp
sbb
scas
jno
cmp
add
and
shr
mov
pushf
add
mov
mov
fistp
adc
out
gs
or
(bad)
out
mul
jbe
inc
sbb
ja
imul
dec
or
mov
mov
mov
xor
dec
dec
cld
cmps
cmp
cmp
je
inc
les
lock
cmp
es
xor
std
fnstcw
cmp
push
push
jae
call
jbe
jo
xchg
and
cmp
push
pop
and
icebp
mov
ss
loopne
dec
cmps
pop
add
outs
jne
pop
dec
scas
or
sbb
mov
xchg
mov
pop
and
xchg
sub
movs
fiadd
rol
xchg
(bad)
cmp
sbb
mov
push
push
add
mov
xor
scas
(bad)
es
pop
jge
fsubr
dec
dec
xchg
imul
dec
fdiv
cmp
arpl
test
ror
cdq
adc
(bad)
jl
adc
pop
aaa
clc
das
mov
cmp
inc
mov
inc
cmp
sahf
pop
mov
test
imul
mov
jle
test
jmp
sbb
add
and
inc
cmp
out
mov
(bad)
xor
mov
inc
retf
or
adc
jne
jnp
dec
arpl
cmc
xor
add
add
dec
add
icebp
das
enter
cli
inc
pop
inc
dec
inc
sbb
pop
jne
inc
inc
jmp
and
add
push
jno
or
add
(bad)
(bad)
cmp
lds
sbb
jg
es
or
jmp
ror
loopne
pop
dec
push
inc
adc
push
pop
inc
arpl
repz
and
dec
dec
fld
or
je
inc
je
popa
ret
inc
rcl
lds
aas
cmc
ins
pusha
mov
sub
inc
xor
call
sbb
mov
xchg
add
mov
loopne
imul
aad
clc
push
shl
pop
xchg
ret
jne
aad
push
div
in
or
push
hlt
dec
jb
xor
icebp
pop
fmul
sub
xlat
push
xchg
dec
ret
shl
lods
shl
jne
or
out
jno
mov
inc
add
rol
inc
and
imul
je
cli
sbb
(bad)
push
push
inc
adc
mul
inc
in
sbb
sbb
push
push
cmp
dec
and
arpl
mov
(bad)
je
inc
cmp
sti
or
or
push
popf
inc
push
jne
push
jmp
sar
in
out
pop
loopne
pop
js
jns
push
push
out
jns
push
sbb
add
adc
add
and
xchg
xor
cmp
jae
fild
clc
pop
fnsave
mov
mov
ds
mov
sbb
aas
adc
repnz
adc
jg
aad
shl
mov
movs
ror
outs
cmp
test
ins
or
add
lea
cld
shl
pusha
or
mov
pusha
sbb
and
pop
jp
or
jl
imul
or
push
and
dec
in
jl
adc
cmp
aaa
je
xchg
or
add
jl
into
sub
mov
or
cmps
dec
rol
mov
mov
mov
icebp
cmps
cmc
gs
inc
mov
gs
lock
fisttp
cmp
dec
test
sbb
add
and
icebp
shl
push
jns
xor
out
push
loope
and
lds
enter
iret
(bad)
xor
outs
or
or
jae
sti
add
xor
outs
movs
sahf
(bad)
and
dec
(bad)
push
dec
(bad)
aas
icebp
inc
dec
dec
cmp
or
sbb
mov
inc
add
mov
ror
push
lea
(bad)
cmp
(bad)
sbb
sbb
sbb
out
(bad)
jb
ret
addr16
push
sbb
push
scas
sbb
lea
fdivr
popf
or
add
idiv
or
and
jne
sub
fcmovne
inc
cdq
pop
cmp
es
(bad)
fs
lock
das
(bad)
out
out
lahf
and
or
loopne
test
xor
dec
ds
sbb
inc
shl
enter
cmp
xor
sbb
ja
push
push
mov
shl
sbb
rol
(bad)
push
xor
cmc
cmp
pop
test
or
jecxz
dec
jecxz
mov
daa
into
push
jae
es
and
scas
adc
ret
mov
adc
sahf
out
sub
pop
shr
addr16
or
in
pop
or
stos
xchg
jmp
xor
pop
inc
xor
sub
push
push
(bad)
(bad)
add
call
and
sbb
pushf
adc
mov
jae
add
popa
and
(bad)
pop
sbb
push
lea
call
pop
or
mov
js
dec
push
cmp
in
cmp
mov
or
(bad)
ret
and
add
stos
inc
jecxz
mov
jbe
pusha
xor
xor
jmp
sbb
mov
(bad)
jg
sub
jmp
cli
test
mov
inc
sbb
js
sbb
sub
stos
lea
sub
and
jl
or
fcmovb
inc
add
les
pop
mov
xor
stc
repnz
adc
cmp
test
cmp
fld
call
or
popf
cmp
inc
xchg
paddsw
fstp
das
pusha
pop
sbb
mov
mov
pop
shl
push
and
push
push
clc
sbb
add
push
out
cld
stos
pusha
(bad)
in
frstor
sbb
sbb
cmp
push
in
or
addr16
adc
loopne
mov
jmp
add
lea
ss
enter
push
std
ins
xor
leave
ret
mov
push
movs
and
jb
jo
jb
and
mov
pop
push
xchg
and
push
jns
retf
retf
out
lods
or
std
jmp
cld
pop
and
mov
mov
inc
dec
add
ret
(bad)
add
ror
mov
xlat
loope
xor
div
fucomp
daa
test
(bad)
jno
in
mov
frstor
mov
sbb
mov
push
popa
pxor
dec
cdq
stos
les
pusha
jns
xor
pop
lds
shl
mov
fs
or
rcr
adc
pop
mov
pusha
paddusb
adc
sub
push
jge
jge
add
pop
cmp
(bad)
adc
sbb
or
inc
inc
xchg
inc
or
out
jnp
loop
leave
add
mov
cmp
dec
test
stos
dec
loopne
mov
adc
lea
les
push
cld
jl
(bad)
jg
(bad)
loope
ret
jle
cli
add
cmp
jbe
push
(bad)
(bad)
aas
pop
mov
cmp
jne
pop
and
mov
(bad)
dec
shr
lea
not
and
dec
jne
add
dec
retf
jle
and
pushf
mov
jecxz
lahf
push
pop
add
in
inc
or
dec
push
xchg
pop
add
std
mov
add
aam
push
or
pop
sar
pop
lods
jecxz
pop
hlt
loope
ja
mov
sar
xor
jge
pop
cmp
jbe
(bad)
ss
in
sub
xchg
(bad)
and
cmp
bnd
mov
jno
cmp
cmp
mov
(bad)
and
add
cmp
xor
loopne
cmp
ds
mov
add
dec
pop
add
inc
popa
jo
fistp
hlt
ret
jmp
ret
mov
pop
shr
in
ins
sub
push
pop
outs
or
shl
sbb
xor
outs
mov
inc
mov
jae
cmp
push
mov
jmp
pop
ret
ins
or
adc
dec
or
imul
or
ror
adc
push
mov
seta
movs
push
dec
cli
mov
fadd
push
sbb
inc
dec
shl
add
movs
adc
push
push
push
call
aas
fstp
mov
or
inc
adc
std
in
mov
push
dec
adc
inc
jo
inc
loope
jge
and
pop
sti
imul
(bad)
and
adc
jmp
mov
sahf
add
push
lea
pop
sti
pop
daa
or
lea
retf
(bad)
jbe
or
movs
cld
cmp
xchg
dec
sbb
cmp
push
lea
pop
jge
mov
addr16
pop
jge
rol
pop
adc
sub
and
not
call
xchg
adc
into
sbb
jae
jg
jg
inc
mov
and
dec
iret
cmp
fisubr
pop
cld
xor
push
jne
mov
cmp
dec
adc
add
pop
dec
jae
inc
sahf
int
or
outs
jmp
cmp
jae
or
int
mov
mov
into
sbb
ins
lock
js
lock
dec
sub
pop
cdq
in
pop
mov
inc
xchg
ja
add
aaa
mov
clc
xchg
sbb
add
xor
or
scas
add
jne
push
mov
je
shl
call
inc
fisub
scas
xchg
dec
scas
into
jne
int
and
pop
(bad)
aam
adc
add
test
mov
cmp
pop
mov
add
cmp
call
div
or
pop
sahf
inc
dec
popa
cmp
sub
jo
sbb
movs
aam
pop
dec
fwait
and
mov
dec
jne
(bad)
je
scas
stos
dec
in
and
jmp
dec
sub
sub
push
jbe
ins
xor
adc
add
lods
jnp
mov
jmp
jmp
dec
inc
mov
mov
or
cmp
lods
outs
xchg
push
dec
jge
sub
and
mov
or
adc
push
or
das
push
or
loopne
retf
inc
push
jnp
bound
add
or
inc
or
mov
mov
cld
data16
clc
fiadd
fild
rol
and
cld
cli
not
mov
jne
cmp
fdiv
xchg
cmp
cmps
dec
fbstp
and
adc
or
xlat
add
push
faddp
inc
pushf
xchg
mov
xchg
inc
dec
test
je
xor
ret
push
mov
inc
sbb
out
jne
js
daa
je
jb
xor
mov
xor
add
push
repz
sbb
mov
add
inc
sbb
xchg
jno
or
push
sahf
loopne
ret
outs
imul
add
xor
in
inc
or
sti
out
add
or
out
jns
pop
adc
mov
dec
iret
js
xchg
add
cli
ja
lea
dec
int3
fild
in
mov
psubsb
inc
cld
lock
loopne
test
sub
icebp
je
and
add
cmp
clc
dec
or
clc
cmp
lea
dec
call
inc
pop
fs
aad
sahf
(bad)
mov
cmc
aaa
add
mov
jne
xor
lock
mov
and
add
push
push
and
call
xlat
lea
sub
out
jmp
jmp
cmp
retf
mov
in
cmc
dec
(bad)
mov
movs
dec
jmp
inc
add
add
loope
sbb
and
jnp
pop
push
mov
pop
dec
xor
pop
cmps
clc
(bad)
ror
loop
sub
sub
jo
scas
mov
adc
jg
mov
cld
adc
pop
scas
lock
rol
inc
mov
das
push
pop
add
xor
lea
adc
pop
dec
pop
ja
xchg
gs
pop
pop
pop
pop
add
cmp
out
xchg
adc
jae
int
pusha
xor
es
iret
retf
enter
jno
and
and
rcl
test
in
jp
les
xor
inc
xor
add
inc
jecxz
inc
clc
jl
imul
outs
jge
cpuid
pop
or
mov
dec
ins
pop
xor
fadd
addr16
jno
(bad)
jbe
adc
in
lods
test
xchg
rol
jns
ret
in
xlat
into
je
repz
sbb
cdq
inc
xlat
dec
push
in
and
ret
and
ja
daa
ret
test
(bad)
mul
mov
ret
adc
jnp
dec
sbb
xchg
leave
aam
enter
pop
fisttp
ret
pop
add
pextrw
sub
jns
into
bswap
push
jns
and
ds
add
in
popa
les
xor
data16
add
sbb
cmp
or
sub
mov
shr
xor
dec
rcl
jg
inc
stos
cmc
sbb
push
repnz
or
adc
mov
ret
sbb
push
jmp
mov
mov
scas
out
xor
xchg
lea
dec
pop
out
pshufw
dec
and
in
mov
repnz
std
adc
popf
ret
ror
add
es
data16
adc
jo
(bad)
add
cmp
jae
or
clc
jmp
lock
(bad)
xchg
add
jp
jmp
mov
jnp
jp
bound
imul
pop
mov
(bad)
fild
popa
sub
add
test
mov
mov
and
mov
mov
bound
mov
or
leave
shl
push
or
mov
add
iret
lock
lods
lahf
sbb
sar
jne
mov
push
mov
xchg
ret
ud0
or
adc
cmp
or
mov
std
add
jg
je
sub
jge
adc
iret
jp
jno
add
sub
jns
push
mov
scas
(bad)
lea
pop
int3
or
mov
ss
punpcklwd
shl
pop
cmp
or
mov
neg
aas
sbb
jmp
add
adc
movs
push
aaa
jmp
(bad)
call
in
lock
sbb
bnd
ror
ret
push
xor
add
(bad)
xchg
lock
sbb
clc
test
adc
sub
scas
stc
or
enter
mov
add
xor
lahf
xchg
and
mov
add
hlt
retf
or
xchg
aam
mov
push
push
mov
mov
and
mov
sbb
adc
sub
sub
cmc
add
loopne
ret
jns
stc
fbstp
mov
inc
or
adc
cmp
mov
mov
xlat
jae
jne
inc
fsub
adc
outs
movs
sbb
inc
test
xor
jecxz
sbb
push
fild
adc
push
mov
popf
es
xor
jge
jge
jb
mov
cmp
adc
adc
sub
out
or
ds
lods
lods
mov
jmp
mov
fs
pop
gs
mov
jmp
jnp
xchg
sub
(bad)
out
add
std
loope
push
adc
adc
xchg
pop
in
je
movs
movs
add
push
jo
ror
xor
jmp
jo
mov
jle
dec
aas
aad
outs
sbb
push
sbb
xchg
push
mov
inc
cmp
aas
add
mov
mov
ins
cmp
jae
cmp
outs
jnp
add
scas
pop
inc
mov
or
mov
pop
mov
add
mov
inc
scas
(bad)
pop
xor
je
addr16
jmp
xor
jmp
jmp
shr
inc
adc
sbb
adc
(bad)
push
scas
aas
push
sub
adc
lea
inc
sbb
hlt
not
mov
pop
mov
dec
jae
add
sub
mov
sub
ret
fadd
and
call
lea
cmp
jae
mov
and
xor
add
jne
inc
inc
jmp
(bad)
push
clc
mov
add
test
ins
or
jb
adc
push
add
jne
mov
jae
cmc
push
or
stc
mov
mov
inc
inc
ja
inc
ja
sbb
arpl
sub
test
(bad)
xor
mov
sub
inc
js
std
ret
sub
jb
fucomip
scas
and
std
pop
add
jmp
outs
push
ret
adc
or
mov
cmps
imul
xchg
jo
jmp
outs
call
jg
icebp
adc
clc
or
dec
adc
jg
cld
lea
jbe
sub
mov
add
lock
pusha
jae
movs
add
iret
cmps
lock
mov
bound
mov
fs
mov
mov
cmp
ja
pop
jg
cmp
adc
mov
cmp
retf
inc
int
shl
cmp
lea
arpl
mov
jmp
add
push
sub
add
xchg
pop
and
mov
fcom
jmp
fneni(8087
push
test
add
push
inc
xor
cmp
in
das
pop
cld
push
or
cwde
stos
push
jno
fprem
pop
outs
jno
idiv
jmp
xchg
ja
ss
outs
mov
movs
icebp
cmp
bound
jle
cmps
icebp
sub
ds
push
push
mov
sub
cmp
or
jmp
adc
ret
pop
jae
js
fild
inc
add
sar
ffree
lea
mov
ret
mov
jno
xchg
cmps
sbb
adc
adc
mov
inc
cmp
je
cmp
aaa
aad
or
in
ret
shl
push
adc
hlt
fbld
ror
xor
add
iret
xor
shl
(bad)
lods
aaa
jne
and
pop
jg
pop
loop
out
jne
pop
pop
pop
push
mov
cmp
je
pop
rcr
dec
out
cmp
je
push
out
dec
pop
adc
adc
rcr
jmp
pop
arpl
outs
or
jmp
loope
cld
fist
dec
sub
dec
sbb
add
inc
bts
jmp
push
xchg
mov
push
jmp
or
mov
xchg
cmp
cmovb
jns
pop
loope
test
inc
push
push
jno
push
sbb
ins
sbb
fist
dec
(bad)
sbb
clc
mov
int3
nop
sbb
add
movs
inc
xchg
jl
jge
pop
icebp
mov
and
mov
loopne
mov
(bad)
fild
mov
iret
push
loope
nop
add
rcr
dec
daa
mov
cwde
jns
mov
frstor
out
imul
inc
add
inc
inc
in
adc
xlat
fild
add
or
xor
pushf
test
mov
adc
pop
ja
sbb
dec
and
shr
inc
inc
ret
inc
scas
out
sub
call
sbb
std
dec
add
test
je
add
sbb
mov
stos
jg
mov
loope
mov
mov
or
adc
mov
pusha
jne
sbb
fsubr
xchg
in
adc
gs
or
jmp
in
je
push
icebp
sub
add
jmp
sbb
and
stos
add
dec
sbb
push
jno
jecxz
sub
aas
inc
xlat
aam
loopne
(bad)
mov
cmp
xchg
dec
dec
scas
or
or
mov
mov
inc
dec
jmp
mov
aad
and
pop
pusha
dec
add
pop
dec
retf
mov
inc
jmp
mov
push
sar
js
shl
shl
inc
push
add
iret
or
add
push
jmp
sbb
es
jecxz
jmp
inc
xor
add
add
iret
jne
or
out
push
inc
or
inc
or
daa
mov
jmp
or
in
retf
scas
fsubp
push
retf
push
or
cmp
jmp
add
aaa
fldcw
loope
rcr
adc
sbb
add
cmp
je
push
sbb
and
sub
mov
push
or
dec
mov
add
mov
push
xchg
push
mov
addr16
in
mov
(bad)
xchg
pop
sbb
shl
push
pop
fbld
sbb
sbb
loopne
xlat
arpl
mov
rep
hlt
push
or
es
std
push
sbb
adc
cs
sub
push
mov
mov
pushf
(bad)
pushf
test
jns
sbb
mov
jmp
and
xchg
jp
inc
sti
push
inc
cmp
div
xlat
push
lea
std
loopne
test
mov
mov
loopne
add
jae
rol
cmp
mov
mov
xchg
(bad)
cmps
adc
xchg
loope
dec
cmps
adc
(bad)
jge
xchg
jmp
fwait
pop
mov
push
inc
pop
mov
adc
enter
sub
push
or
mov
xor
jb
or
cld
add
(bad)
or
mov
sub
jne
cdq
pop
rcr
xchg
jmp
or
pop
imul
push
cmp
or
sbb
cmps
fild
icebp
jae
push
shr
inc
xchg
(bad)
es
lods
push
shr
rcr
or
jne
div
cmp
out
shl
cmp
or
cmp
add
xchg
ss
adc
out
push
xlat
push
mov
frstor
pop
xchg
fucomp
push
fdiv
push
sub
enter
sahf
cwde
xchg
or
xlat
or
shl
jbe
and
or
ficomp
fiadd
clc
je
adc
mov
add
icebp
das
repz
(bad)
sbb
add
clc
adc
lock
fdiv
mov
dec
add
call
sub
aas
push
fnstsw
sahf
jbe
js
jbe
mov
in
pop
in
movs
inc
not
je
and
pop
dec
ret
pusha
scas
xchg
shl
xor
pop
repnz
cmc
xlat
adc
pop
je
inc
dec
pop
repnz
dec
mov
push
pop
mov
adc
push
pandn
cld
addr16
inc
mov
icebp
mov
or
adc
inc
fwait
mov
pop
jnp
loope
retf
add
hlt
and
(bad)
dec
int3
sub
mov
(bad)
jg
les
outs
in
or
cmp
jne
dec
mov
jnp
rcl
std
mov
adc
mov
mov
sub
sbb
and
sub
mov
(bad)
cld
xchg
inc
inc
fisub
xor
inc
jmp
xor
ja
mov
pusha
cdq
retf
retf
sub
push
std
retf
sub
ss
(bad)
push
push
fs
movs
xor
gs
shr
mov
adc
push
dec
xchg
adc
iret
daa
test
stc
xor
rcl
ret
mov
pop
neg
sti
jg
mov
add
fwait
sub
inc
pop
mov
dec
loope
pop
sub
xchg
jl
rcl
ins
daa
loope
mov
jne
sgdtd
std
push
lock
inc
pop
adc
mov
inc
mov
add
and
neg
jbe
sti
fs
pop
mov
xlat
fs
mov
mov
or
dec
sub
or
pop
add
inc
inc
hlt
out
inc
add
or
or
xor
enter
in
sub
and
jge
sub
cmp
popa
jo
adc
repz
jle
mov
sbb
dec
add
pop
jg
aas
ins
clc
not
pop
xor
jmp
add
std
jo
pop
inc
jle
das
mov
popw
mov
inc
arpl
leave
add
mov
test
pop
or
and
pop
popa
popa
cmp
xor
push
(bad)
cli
push
ins
or
add
add
add
mov
sar
cmp
lock
pop
add
jl
cmp
or
call
icebp
stc
and
jmp
xchg
inc
add
and
arpl
xchg
adc
xor
mov
sub
bound
and
inc
in
xchg
jne
sti
mov
sub
mov
adc
movs
cwde
les
add
cmp
loop
retf
push
push
add
push
lods
adc
mov
nop
dec
inc
inc
neg
dec
mov
std
adc
pop
je
add
and
(bad)
mov
and
or
pop
pop
jne
out
inc
sbb
push
pop
mov
mov
repnz
lock
mov
or
mov
call
pop
stc
and
stc
sbb
test
mov
in
inc
mov
adc
push
icebp
and
and
add
int
cmp
rol
mov
stos
retf
inc
jmp
mov
mov
inc
popa
rcr
pop
push
mov
pop
retf
push
pop
adc
mov
jg
push
or
loope
cmps
mov
xor
jl
push
mov
and
adc
xchg
jno
in
cld
mov
mov
or
leave
mov
mov
inc
mov
fcomp
sub
mov
pop
pop
adc
mov
sub
mov
xchg
xor
ja
xor
ss
push
add
repnz
or
popf
test
xor
lods
out
sub
add
daa
pop
inc
cmps
xchg
sbb
(bad)
loope
jp
imul
add
push
(bad)
or
ret
jl
aas
jg
sbb
jle
xor
pop
xchg
sbb
add
xlat
pop
push
xor
mov
ins
mov
or
and
xor
sbb
mov
adc
loopne
mov
sbb
adc
pop
sub
pop
add
ret
out
cmp
jo
inc
js
inc
push
mov
add
sbb
imul
push
ror
out
jp
push
aad
mov
push
or
in
xor
mov
push
push
jns
neg
jne
adc
dec
sbb
inc
jmp
daa
push
out
aaa
xor
pop
imul
add
ret
push
and
mov
ds
outs
paddd
clc
ss
and
xor
mul
or
mov
inc
cmp
push
ds
inc
push
jmp
push
sti
add
mov
sub
aas
push
sti
and
xchg
in
add
mov
or
(bad)
aas
popa
repz
jge
cmp
jl
jg
cmp
jg
daa
enter
fbstp
ret
adc
jg
jle
push
xchg
push
jb
add
fistp
push
imul
xor
xlat
js
shr
xor
rcr
sbb
push
or
add
adc
mov
adc
or
adc
stos
or
out
xchg
cwde
or
outs
xchg
(bad)
fmul
clc
das
stc
sahf
movs
jg
(bad)
test
and
outs
nop
xchg
inc
sbb
push
sbb
push
adc
inc
mov
pop
stc
jmp
sbb
inc
aas
sbb
out
inc
adc
test
push
paddusb
es
cmp
jle
sub
jmp
test
icebp
mov
pop
pop
or
add
adc
add
sub
nop
dec
jne
fimul
ins
fsubrp
sbb
(bad)
pop
sub
adc
mov
je
push
test
and
arpl
mov
mov
pop
pop
es
sahf
sbb
adc
inc
and
mov
cmp
xor
adc
jo
lea
jp
ret
cmp
sbb
daa
inc
dec
in
(bad)
(bad)
cmp
je
sub
cmp
sbb
and
add
add
xchg
sbb
sar
sbb
aas
shr
lock
daa
lock
add
push
daa
or
out
imul
jo
into
daa
jp
xchg
in
fcom
or
add
push
cmp
mov
cmc
fdivr
sub
or
jmp
inc
mov
dec
pop
sahf
dec
adc
es
cmps
jl
mov
mov
scas
jg
dec
clc
(bad)
pop
retf
mov
(bad)
cmp
ja
gs
pop
jns
dec
not
mov
pushf
lock
push
pop
or
adc
and
fs
mov
fisttp
loopne
pop
mov
cmp
fs
ret
adc
int
popf
pop
arpl
pop
aaa
push
and
jmp
jle
mov
cdq
std
ret
retf
and
inc
add
sbb
fucomip
mov
outs
cmp
fidiv
mov
adc
mov
jmp
inc
enter
mov
adc
add
dec
push
retf
cmp
int3
sbb
idiv
aaa
nop
ja
pop
adc
das
sub
dec
loop
push
sub
shl
popa
std
pop
add
test
out
inc
jmp
outs
ins
movzx
dec
mov
push
cmp
inc
pop
mov
and
cmps
(bad)
call
rcr
inc
push
sbb
in
jnp
jnp
push
je
push
push
mov
fucompp
sbb
or
push
inc
inc
test
mov
scas
xchg
push
and
pop
xor
mov
jmp
mov
test
jmp
movs
pandn
jp
pop
(bad)
(bad)
jne
aaa
jne
jmp
(bad)
mov
xor
je
or
aas
(bad)
mov
push
and
je
inc
cmp
xchg
xchg
inc
das
ins
push
and
fistp
lods
ret
adc
je
dec
and
xor
xchg
inc
inc
loop
mov
rdmsr
and
push
push
add
mov
daa
fisubr
or
icebp
mul
mov
jae
sbb
add
push
add
outs
nop
popf
jae
retf
stos
or
pop
lock
cmps
pop
mov
test
push
sub
inc
test
or
icebp
inc
push
mov
mov
rcl
and
push
or
pop
call
pop
mov
jle
add
call
adc
lock
scas
xchg
aam
loope
push
add
out
pop
xchg
out
jne
inc
add
or
test
add
add
add
push
mov
mov
outs
ds
mov
cmps
jns
(bad)
unpcklps
or
(bad)
jne
or
jmp
cli
pop
jmp
or
xchg
add
iret
pop
xchg
int
mov
add
clc
pop
pop
test
mov
and
add
loopne
imul
and
ret
inc
dec
lock
mov
mov
mov
mov
je
cmps
or
repz
or
or
fwait
jns
add
add
dec
jne
xor
or
pop
sahf
add
adc
pop
sbb
repz
mov
stos
sbb
cmps
stc
pop
jg
out
out
sar
call
xor
test
or
(bad)
push
sbb
punpckhdq
js
push
jae
pop
aad
cmp
aam
out
sar
cmc
shr
mov
in
adc
aad
and
rol
push
ss
call
sub
retf
call
loop
rol
fwait
sar
imul
adc
rol
bnd
push
sub
ds
outs
cwd
adc
cmp
sub
shl
in
add
pop
dec
js
cmp
jmp
out
fmulp
xchg
pop
es
add
ret
pop
cdq
addr16
xchg
fs
mov
je
fsubrp
mov
pop
leave
clc
sub
xchg
rcr
add
xchg
or
mov
sbb
dec
pusha
sbb
push
sbb
inc
clc
inc
cmp
in
std
enter
dec
lods
mov
dec
mov
(bad)
push
push
aaa
push
xor
mov
mov
int3
sahf
or
dec
or
xor
in
daa
icebp
or
cmp
xchg
(bad)
leave
popf
dec
and
jle
scas
push
icebp
xlat
test
not
pop
mov
mov
mov
call
pop
xlat
or
fcomp
(bad)
fcom
xchg
clc
add
sar
mov
jmp
shr
mov
test
adc
sbb
xor
jp
or
sub
cmp
dec
push
or
add
daa
mov
lods
and
jnp
jmp
aas
cmp
jns
sti
add
push
mov
jmp
ins
shl
imul
in
mov
jns
and
jmp
lods
ss
sub
lds
mov
add
xchg
add
fyl2xp1
jge
cmp
fdivr
sub
pop
das
lds
mov
and
xchg
cmc
pop
test
inc
inc
call
stc
cmp
jl
hlt
mov
imul
ja
mov
push
push
sti
cmp
sub
daa
mov
jg
add
inc
sub
or
adc
ror
and
sar
jle
cs
or
or
inc
test
clc
pop
mov
or
iret
shr
xor
push
add
(bad)
cmps
xchg
call
mov
adc
or
jnp
pop
add
mov
and
pop
test
jb
fstp
inc
fsubr
or
add
push
xchg
lock
mov
jle
and
loopne
fcmovne
or
inc
xor
adc
jne
(bad)
jnp
ins
push
dec
jl
cmp
(bad)
sbb
inc
cmp
jnp
cmc
dec
xor
inc
jmp
push
mov
(bad)
sbb
jne
push
inc
icebp
push
mov
push
cmp
mov
sbb
add
cld
add
add
das
call
mov
mov
dec
add
dec
lods
add
adc
sbb
inc
hlt
call
mov
shl
iret
mov
into
ss
and
sahf
jo
test
sbb
imul
mov
cmp
or
xchg
pop
adc
ror
pop
xchg
sbb
or
jmp
dec
add
fiadd
and
lods
adc
inc
or
loop
inc
test
cs
dec
adc
leave
mov
shr
or
lea
mov
(bad)
data16
mov
jmp
adc
iret
test
xchg
xchg
cmp
ja
pusha
push
movs
(bad)
gs
mov
gs
lds
stos
dec
add
pop
loopne
mov
push
cmp
fprem
or
repnz
ds
shl
jno
jl
sti
inc
and
and
aaa
pop
inc
xorps
or
jg
add
shl
lea
pop
movs
and
std
mov
or
cmc
push
push
pop
jne
or
nop
push
sub
sub
mov
sbb
cmp
leave
and
stos
scas
pop
or
pop
and
pop
mov
and
xor
xor
add
jmp
outs
push
loopne
pushf
in
ss
or
push
jae
xchg
not
pushf
mov
sub
neg
sub
adc
adc
push
add
dec
retf
iret
dec
or
mov
lock
sbb
je
clc
add
sbb
mov
jl
xor
mov
jno
xor
je
aas
jmp
out
add
(bad)
movs
adc
arpl
ret
pop
shl
inc
xchg
cmp
shl
sti
push
cld
sub
test
lods
adc
and
sbb
hlt
out
cmp
jmp
inc
or
cmp
xchg
push
sub
xchg
xor
or
clc
shl
add
sbb
iret
cmp
xor
inc
cmp
mov
lods
(bad)
jl
lock
inc
inc
adc
xor
es
xchg
cld
or
add
ins
ret
das
fwait
(bad)
mov
inc
imul
(bad)
lea
push
push
mov
and
mov
or
loop
pushf
or
sub
lods
das
adc
inc
inc
je
add
mov
push
pop
sbb
jmp
dec
xchg
inc
push
rcr
icebp
or
fsubr
push
cmp
mov
aam
xor
xchg
out
push
test
pop
mov
and
or
hlt
shl
or
addr16
cmp
cld
xor
int
cmp
stc
sahf
xchg
jmp
sar
or
enter
add
mov
std
pop
or
or
add
inc
cmp
xchg
pusha
scas
(bad)
xchg
add
sbb
fstp
adc
jle
jb
xor
mov
clc
rcr
xor
jne
cmp
pop
rcl
cmp
repnz
scas
cmp
outs
cmp
inc
mov
ins
dec
dec
push
or
and
dec
jbe
push
adc
sti
or
je
adc
push
dec
cs
pop
sbb
aad
sbb
cmp
sti
or
inc
sbb
call
dec
iret
lock
(bad)
fidivr
popa
in
pop
jmp
test
mov
push
sub
sti
add
push
sub
aam
jnp
jmp
inc
fnstenv
movs
dec
inc
arpl
das
cld
mov
pop
out
(bad)
je
test
push
push
and
mov
jne
sbb
xor
add
test
mov
lods
rol
xlat
shl
push
inc
add
add
data16
cmp
iret
jl
jae
aam
loopne
sysenter
jmp
sbb
mov
sbb
sub
cdq
push
ins
add
push
cmps
iret
ror
jne
push
setge
jb
fiadd
shr
adc
mov
arpl
push
call
xor
retf
into
jae
xor
or
push
lods
es
push
stc
ss
nop
xor
sbb
lods
xchg
(bad)
(bad)
xor
add
or
das
retf
jno
call
lods
dec
(bad)
mov
into
mov
cmps
jg
sbb
pop
or
and
ucomiss
pop
shl
or
pop
outs
imul
mov
push
cmp
mov
shl
imul
in
imul
or
mov
or
out
shr
or
push
aas
mov
mov
cli
(bad)
(bad)
outs
inc
fcmovnb
push
inc
dec
inc
fs
mov
add
jbe
push
and
and
nop
cmp
sub
lock
mov
push
dec
scas
jnp
mov
jl
mov
adc
add
mov
stos
jne
cmp
or
outs
fwait
mov
arpl
bswap
shr
shl
mov
xor
shl
add
sar
adc
jge
or
cmp
stc
jmp
leave
pop
pop
ret
jg
inc
pop
push
jecxz
xchg
jmp
rcr
hlt
cmps
imul
fsub
aam
fild
adc
push
in
mov
imul
in
cmp
je
or
je
or
loopne
jmp
ret
pop
(bad)
jl
call
add
pop
adc
pop
sbb
xor
cmp
sbb
add
jns
sar
jle
sbb
jmp
mov
or
add
push
ret
cmp
cmps
ins
or
adc
mov
mov
nop
pop
pop
jle
into
mov
or
push
inc
jle
addr16
sbb
adc
gs
mov
fisttp
sti
dec
push
cmovp
jbe
inc
addr16
pop
add
jno
call
aam
fisttp
cli
cmp
and
pop
jmp
push
retf
imul
daa
mov
outs
sub
or
mov
ss
push
jmp
adc
addr16
mov
mov
stos
jnp
in
push
dec
dec
repz
inc
inc
scas
sbb
mov
mov
shr
add
cdq
mov
add
mov
dec
pop
mov
(bad)
push
dec
adc
push
xchg
data16
xchg
in
loopne
std
out
jmp
mov
cwde
add
xchg
(bad)
(bad)
stc
test
or
or
pop
dec
adc
inc
jmp
loop
sub
mov
adc
mov
dec
call
jmp
pop
pop
(bad)
dec
pop
inc
cdq
cmp
dec
xchg
and
add
fcmovne
inc
sub
shl
inc
add
lock
inc
add
out
retf
add
sbb
rcl
adc
ret
popf
test
and
dec
lock
das
loope
jle
jge
xor
sbb
jecxz
cmc
push
cmp
jl
inc
mov
dec
xchg
pop
mov
inc
dec
adc
xchg
xor
and
xor
mov
lods
cdq
sti
movs
cmc
out
push
cmp
mov
fidiv
sub
inc
adc
sub
rcl
inc
sbb
cmp
and
dec
aam
sbb
jg
push
dec
push
adc
test
cwde
in
in
add
mov
dec
jge
pop
rol
(bad)
test
scas
push
out
or
xchg
ret
enter
loope
jno
lds
ficom
nop
add
retf
sar
rol
loope
lock
mov
mov
inc
or
in
adc
adc
shl
adc
(bad)
xor
mov
dec
adc
lods
xchg
bound
enter
mov
mov
dec
jmp
call
out
call
jmp
jg
mov
out
sti
out
aas
(bad)
push
mov
shl
mov
sbb
dec
mov
jne
ja
and
pop
add
lock
ja
iret
fmul
adc
jp
adc
test
xchg
data16
sub
rol
cld
test
pop
pusha
pop
movs
outs
rol
adc
push
out
inc
jne
push
iret
fimul
and
sbb
outs
dec
mov
or
add
push
push
movzx
iret
ret
pop
inc
jmp
dec
popa
out
or
inc
xchg
push
pop
or
aaa
(bad)
push
dec
mov
lea
push
(bad)
in
repnz
jae
lock
and
jge
(bad)
aas
jb
mov
inc
xor
(bad)
imul
add
push
or
push
cld
xchg
jg
and
add
cmp
test
dec
js
adc
out
inc
clc
cli
mov
or
push
xchg
sbb
jne
ins
dec
jecxz
sbb
neg
cdq
xor
or
cmp
dec
xor
add
ja
pop
jno
enter
dec
add
fmul
xchg
mov
sbb
sub
and
out
loop
mov
out
mov
jne
(bad)
cmp
pop
xchg
mov
dec
add
xor
out
push
dec
(bad)
aad
aam
icebp
ins
inc
call
add
ret
sub
mov
fstp
add
outs
fmul
lods
clc
mov
pop
add
and
sub
loop
mov
add
pop
ret
sub
aaa
sar
or
add
adc
aaa
xchg
rcl
inc
pop
push
(bad)
cmps
push
push
test
fs
jnp
and
clc
aad
sbb
add
jb
and
mov
(bad)
out
je
(bad)
adc
push
push
push
inc
or
mov
add
movs
ss
jne
dec
push
jne
fld
cs
ret
add
pop
dec
add
leave
cmp
aaa
xor
xchg
loope
dec
mov
add
lock
mov
scas
es
mov
je
fwait
idiv
jg
sbb
jb
cmp
ja
add
cmp
adc
(bad)
cmp
dec
jne
stos
les
fstp
stos
neg
pop
or
js
jne
pop
sbb
sbb
retf
mov
test
je
or
je
out
push
push
xor
aad
xor
in
jmp
mov
sbb
mov
jge
adc
push
cli
add
cmp
sub
movs
xchg
es
cmp
xchg
pop
xor
add
xor
pop
ret
inc
xchg
pop
aas
sub
je
dec
je
(bad)
repnz
loope
adc
hlt
jmp
or
jmp
test
or
test
or
mov
imul
test
xchg
ins
stc
loopne
mov
xchg
add
add
adc
adc
xor
shr
sbb
cmp
shl
test
sbb
adc
addr16
mov
mov
int3
repnz
fs
js
pop
ins
push
push
dec
mov
jo
jmp
dec
and
jle
push
mov
pop
sub
add
inc
or
or
pop
inc
adc
push
jno
sbb
in
adc
sub
adc
into
and
xor
sbb
in
xlat
add
and
inc
cmp
test
cmp
stos
rcr
(bad)
or
inc
or
inc
dec
jbe
fmul
leave
pop
dec
sub
pop
sbb
mov
imul
adc
mov
add
adc
and
test
add
sub
lahf
test
test
test
cdq
js
test
and
pop
sub
mov
and
inc
xchg
into
mov
ins
add
ret
pop
and
clc
sbb
sub
cmp
sub
push
pop
jbe
imul
cld
jecxz
pop
xor
fild
loope
shl
and
rol
jns
or
sbb
xor
outs
sbb
pop
xor
imul
inc
cmp
jl
pop
jb
add
or
(bad)
js
xor
mov
push
jecxz
jmp
fadd
clc
aaa
loope
in
inc
or
clc
and
and
and
mov
cmp
and
cmc
mov
adc
repnz
pop
jg
lods
cli
std
mov
aas
ja
and
inc
test
inc
mov
push
sbb
xor
xor
faddp
cmp
push
rcr
cmp
jne
cli
mov
push
cmp
adc
add
cmp
dec
loop
push
adc
cs
or
das
loop
ss
or
mov
out
jo
xchg
lock
hlt
push
pop
adc
add
loop
xchg
retf
cmp
jecxz
mov
sub
jl
popf
xchg
rcr
mov
pop
sahf
loopne
pushf
and
or
push
add
mov
into
into
or
jg
or
mov
mov
jnp
lds
mov
sub
dec
aaa
repz
jnp
mov
inc
xor
dec
add
adc
sbb
loop
push
out
retf
scas
xchg
ret
jae
push
je
mov
dec
loop
fiadd
mov
sub
dec
jae
inc
mov
or
mov
fimul
or
inc
jg
mov
sbb
fistp
(bad)
jp
inc
lahf
ss
lods
and
js
clc
call
and
arpl
es
push
mov
or
adc
ja
arpl
loopne
or
mov
ret
push
icebp
add
aaa
adc
jno
lea
cmp
ror
hlt
sbb
pusha
adc
pop
xor
ret
(bad)
jl
and
enter
cwde
pop
xor
inc
jecxz
xchg
call
mov
lea
gs
mov
ds
cmp
xor
add
inc
lea
adc
repz
add
test
fsub
cmps
jno
xchg
sbb
popf
sbb
aas
push
sbb
or
jbe
popf
xor
mov
loopne
into
pushf
popf
int3
cmp
ins
fwait
pop
or
cwde
outs
xor
lea
jnp
pop
xor
push
fbstp
jg
push
adc
adc
mov
adc
std
xchg
dec
les
jb
cmp
je
dec
rcr
or
cmp
and
lods
inc
inc
out
fs
fld
movs
jp
popa
movs
popf
pop
xchg
xchg
in
sbb
jbe
or
cld
adc
push
adc
lods
cwde
pop
rol
mov
push
loope
sbb
xchg
fcmovnb
test
ins
das
mov
mov
mov
xor
mov
xchg
out
in
push
repnz
popa
movs
ss
add
push
fdivr
iret
(bad)
je
add
xor
push
outs
jecxz
imul
mov
mov
ret
(bad)
push
lea
or
loope
dec
loop
(bad)
popf
repz
add
and
(bad)
add
cmp
in
push
push
mov
xchg
fdivp
fild
mov
and
or
add
xchg
ret
not
xchg
sbb
mov
add
push
xchg
or
cmp
push
add
imul
mov
jno
fisttp
xchg
pop
sahf
xor
jo
xchg
fsub
xchg
rol
inc
cs
and
mov
cmp
and
sub
add
cmp
sbb
xor
cmps
add
jmp
jnp
jp
add
imul
fcmove
dec
jg
and
jmp
dec
push
or
and
scas
mov
popa
hlt
dec
pushf
add
pop
add
add
cs
xor
sti
push
mov
pop
sub
pop
lods
mov
push
sbb
not
and
xlat
jae
stos
sub
add
or
adc
sbb
mov
jle
ret
popa
daa
mov
addr16
add
push
mov
xor
(bad)
xor
out
sbb
add
mov
or
dec
ret
leave
fstp
xor
inc
pop
ret
xor
pop
adc
aam
push
push
add
pop
rcl
mov
lods
mov
les
les
push
cmps
test
sub
lea
add
jmp
inc
lds
pop
xor
push
pop
clc
inc
or
je
loopne
pop
sub
iret
lahf
shl
dec
dec
add
xor
nop
adc
mov
loopne
out
popa
out
jge
dec
push
cmp
imul
lahf
enter
xor
xchg
pop
sbb
ret
add
fwait
pop
outs
or
or
xchg
and
cmps
inc
outs
pop
sub
sar
push
add
mov
and
test
ins
mov
dec
push
in
pop
test
xor
loopne
dec
sbb
ffree
and
xor
cdq
push
add
mov
sub
xchg
dec
inc
dec
ror
inc
xor
(bad)
cmp
int
int3
mov
rcr
jne
adc
mov
ret
pusha
or
jmp
mov
ja
xor
pop
xchg
or
pop
pushf
inc
sub
sti
inc
fs
adc
repz
jmp
outs
stc
or
xor
mov
inc
or
int3
aas
adc
mov
icebp
or
into
retf
pop
cwde
ja
xor
lds
fs
xor
or
sbb
sub
adc
inc
loop
ror
pop
mov
out
adc
push
push
xor
sub
pop
retf
pusha
mov
out
je
fisubr
inc
call
push
inc
outs
loope
mov
ins
lods
and
repnz
and
xchg
in
and
jo
jmp
sbb
cmp
mov
push
dec
xor
cwde
imul
lods
aas
fwait
push
and
cmp
push
pop
cmp
and
cld
test
sub
(bad)
fcmovnbe
adc
lods
out
jmp
cmp
sbb
je
push
sbb
in
mov
add
adc
cmp
jne
mov
mov
add
sub
sub
xchg
add
push
clc
mov
xchg
test
std
push
mov
xchg
js
push
iret
lock
pop
in
lock
sbb
inc
adc
scas
test
push
mov
into
mov
sbb
and
push
or
mov
xchg
push
loopne
aas
pop
aaa
cld
push
sbb
data16
add
mov
mov
mov
cmp
out
or
in
cmp
cmp
mov
push
hlt
in
push
dec
sub
jno
push
sub
sbb
pop
sbb
lock
mov
xchg
sbb
(bad)
xor
jb
push
adc
and
lock
fstp
xchg
sub
sub
outs
test
retf
js
cs
sbb
(bad)
xchg
pop
add
xor
scas
out
and
push
pusha
or
add
lea
fisub
xor
jp
or
ins
stos
ret
nop
les
xchg
dec
jg
mov
loope
lds
leave
adc
sbb
add
and
ror
jo
pop
adc
sbb
push
xor
or
push
adc
inc
add
jl
nop
add
pop
mov
xor
add
mov
ins
mov
jae
pop
sub
fchs
sbb
test
add
daa
push
ja
xchg
xchg
xchg
jns
mov
jp
mov
adc
inc
sbb
adc
mov
ja
push
lods
int3
inc
sub
pop
push
sub
push
add
mov
adc
add
adc
add
xchg
pop
and
cmp
add
push
and
xor
cli
cmp
ds
and
dec
xbegin
jae
jne
push
int
sub
sahf
je
cmp
(bad)
push
jmp
inc
push
(bad)
pop
jne
and
xlat
jmp
add
addr16
cmp
cmc
jmp
jmp
fld
jmp
sub
and
lock
sbb
sbb
mov
add
xchg
imul
and
adc
aam
add
mov
enter
pushf
dec
push
push
dec
ins
sbb
shl
push
daa
cmp
add
adc
in
repnz
pushf
mov
pop
imul
inc
mov
jecxz
sub
cmp
jle
lea
inc
push
lea
jne
cmps
fdecstp
push
mov
or
inc
push
mov
dec
jg
mov
jge
lea
mov
cwde
lock
rep
cmp
xchg
adc
xchg
or
or
cmps
add
sub
ja
jp
mov
cmp
add
or
mov
sbb
loopne
jg
mov
mov
(bad)
out
lock
add
cmp
cmp
xchg
sbb
clc
test
push
mov
cs
add
push
jl
or
push
mov
aas
pop
rol
idiv
pusha
inc
or
loop
mov
dec
enter
pop
mov
dec
mov
sbb
mov
mov
push
mov
in
or
lahf
aam
repnz
sbb
xchg
(bad)
jmp
inc
pusha
sbb
add
daa
es
adc
adc
add
rol
adc
or
lods
ret
jg
or
add
push
popf
fistp
rcl
in
test
dec
scas
pop
push
pop
and
and
pop
pop
push
repnz
cmc
dec
add
js
lea
cmp
clc
pusha
and
call
sub
xlat
and
mov
cmp
jl
jne
cmp
and
jno
sub
jno
adc
cwde
xchg
shr
push
mov
and
xor
imul
and
push
out
pop
in
xchg
je
pop
and
mov
ror
inc
sub
cmp
pop
out
sub
inc
jg
loope
stos
les
lock
mov
sub
add
icebp
jl
mov
mov
nop
fs
pop
adc
inc
xchg
setne
or
mov
(bad)
in
inc
xor
ja
stos
adc
push
adc
mov
push
xchg
scas
bound
adc
xchg
(bad)
pop
bound
add
push
or
adc
fist
cmp
cmp
or
inc
es
cmps
jge
data16
sbb
push
dec
ret
and
inc
mov
push
mov
push
pop
loopne
test
and
push
pop
push
loop
imul
jmp
enter
xor
lahf
cmp
(bad)
push
jmp
push
loop
enter
out
pop
push
js
push
xor
fist
jb
mov
dec
jb
cmp
(bad)
inc
pusha
sbb
xor
aam
xchg
push
push
and
xor
push
fmul
or
adc
cmp
mov
sub
mov
or
(bad)
mov
pop
int
or
mov
nop
add
retf
push
popa
xchg
not
(bad)
push
jo
stos
push
push
fstp
je
jl
pop
push
pop
pop
daa
dec
jnp
xchg
rol
push
xchg
fsub
push
push
and
adc
add
sub
cwde
add
dec
mov
adc
aaa
and
sub
push
cdq
inc
add
sbb
dec
inc
sbb
cmp
sti
add
cmp
es
outs
mov
cmps
sub
in
mul
std
adc
fld
fcomp
inc
cmp
sbb
mov
les
rdmsr
and
int
js
sub
xor
and
add
sub
out
push
fnstenv
and
inc
std
int3
sbb
les
jno
cmps
push
inc
sbb
lods
test
popa
sub
inc
(bad)
sub
add
or
adc
cdq
fbld
cmp
mov
fcmovnu
pushf
and
je
sub
sub
(bad)
fnsave
xor
outs
fiadd
sub
pop
div
rcr
fisub
push
add
push
inc
addr16
test
je
and
aaa
inc
xor
outs
fadd
pop
sbb
inc
and
xor
mov
les
adc
(bad)
(bad)
fimul
dec
dec
mov
mov
sub
push
and
push
add
cmp
cmp
fsubr
add
test
push
aaa
push
cmp
pop
or
les
(bad)
xchg
add
jmp
inc
sbb
add
movs
xchg
imul
or
inc
fmul
jae
ja
pop
sub
hlt
pop
bound
push
pop
stos
adc
adc
syscall
and
ret
or
push
xor
pop
daa
and
ror
scas
clc
mov
inc
test
add
mov
jl
push
add
add
add
repz
dec
fnstenv
cmp
mov
adc
mov
addr16
adc
mov
in
push
je
push
popf
mov
push
sub
mov
pop
adc
mov
dec
push
jns
popa
repnz
lock
sahf
inc
inc
movs
fwait
inc
out
mov
push
pusha
sub
popa
(bad)
loop
mov
sbb
mov
xor
stos
and
loope
push
cld
push
lea
mov
mov
push
add
pop
add
pop
adc
dec
in
jb
jecxz
mov
ret
cmp
popf
cmp
pushf
nop
jbe
jne
mov
add
xchg
add
fistp
jg
je
(bad)
push
dec
aaa
ret
ror
jb
shr
outs
daa
je
stos
loop
adc
mov
aam
jmp
adc
dec
ficomp
ss
and
push
cdq
in
jmp
dec
lock
dec
jo
push
hlt
cmp
fidiv
and
or
xor
sub
rcl
movzx
inc
ss
retf
xor
(bad)
cs
and
ins
mov
add
hlt
sbb
dec
dec
sub
scas
or
cmp
jne
iret
and
add
xor
add
jp
shr
and
mov
and
repz
js
and
jne
addr16
int
cs
xchg
push
inc
sub
icebp
add
cmp
push
mov
push
(bad)
mov
dec
cmp
dec
icebp
xchg
add
pop
test
mov
cmp
test
add
jb
xor
and
(bad)
inc
cmp
je
inc
cmp
out
jns
mov
addr16
dec
push
stos
mov
push
dec
sar
pop
xchg
add
add
lea
sbb
push
retf
cld
jb
popa
push
xchg
xchg
push
clc
rcl
xor
pop
js
cmp
push
cmp
sysenter
push
push
sbb
or
sbb
call
sub
xor
mov
stos
sub
jg
jns
mov
xchg
jne
and
jo
jns
adc
cmp
push
xor
cmp
adc
jmp
adc
mov
cmove
xchg
jno
sbb
out
movs
imul
loopne
sbb
in
arpl
or
int
aaa
push
add
adc
sbb
dec
call
in
lea
or
push
mov
movs
adc
add
adc
pop
mov
mov
jb
add
jp
mov
or
and
(bad)
pmulhuw
pop
in
sbb
mov
push
stos
cmp
xchg
sub
push
stos
mov
dec
loop
stos
mov
cwde
push
dec
push
xor
dec
ret
push
mov
ja
int
dec
imul
inc
aas
cmp
sub
sahf
add
jo
sub
je
sub
mov
out
add
add
mov
xor
or
jecxz
aaa
inc
stos
je
imul
sbb
popa
(bad)
jae
cs
mov
pop
in
adc
sub
or
js
es
mov
jne
fisttp
pop
test
and
pushf
sbb
(bad)
or
sbb
into
push
mov
push
mov
cs
jne
push
sub
jle
shr
leave
add
jne
(bad)
sbb
iret
std
adc
push
mov
ret
push
xchg
adc
test
push
jmp
test
push
fbld
xchg
mov
ins
jmp
test
cs
and
(bad)
dec
sbb
push
xlat
ss
dec
je
sub
data16
xchg
push
cmp
loop
or
push
mov
mov
jo
sub
jmp
ins
xor
call
sbb
push
mov
int3
mov
xor
cmps
add
add
push
push
ss
and
fsubr
push
lds
sbb
push
inc
push
cmp
sub
jmp
mov
call
dec
or
cwde
or
adc
inc
fs
xor
sbb
sbb
stos
jne
hlt
data16
mov
or
into
imul
sbb
xchg
sub
enter
sub
inc
or
in
das
retf
sub
and
mov
pop
mov
cmp
or
push
and
(bad)
mov
cmp
je
test
je
aaa
adc
or
icebp
adc
mov
bnd
adc
adc
push
dec
sbb
or
pop
push
mov
jmp
cmp
mov
xchg
test
or
cmp
lea
push
pop
jnp
call
add
inc
cmp
(bad)
scas
inc
psubsw
dec
sub
xor
lea
mov
xchg
data16
or
mov
bound
ins
add
cmp
mov
inc
pop
or
mov
cmp
adc
es
je
cwde
push
jno
mov
cmp
mov
loopne
mov
cmp
xor
or
pop
adc
rol
cmp
xor
test
push
sti
inc
(bad)
fstp
pusha
aad
adc
outs
push
cmp
in
cmp
jge
push
test
add
sbb
adc
inc
les
sbb
dec
pop
or
(bad)
nop
int3
ins
rcl
in
(bad)
xor
dec
jg
mov
push
add
pop
or
pop
xchg
inc
aad
js
push
push
push
xor
arpl
pop
scas
push
jb
xor
sbb
and
(bad)
cmp
mov
cmp
(bad)
push
retf
seto
xor
xor
or
xor
into
mov
das
push
cmps
mov
lods
push
add
push
xor
fild
xchg
mov
mov
add
sbb
push
scas
test
or
je
push
push
push
xchg
inc
xchg
mov
pusha
inc
dec
push
in
ins
imul
jns
fnstenv
dec
push
aad
sbb
pop
or
test
and
cmp
(bad)
sub
mov
or
sbb
xor
int
btr
mov
sar
jb
std
mov
cmp
push
bound
or
jp
mov
movs
mov
imul
sbb
in
xchg
add
repnz
leave
mov
bound
xor
mov
sbb
add
sbb
mov
sbb
push
sub
je
(bad)
push
sbb
cmc
(bad)
mov
push
mov
sub
pop
call
inc
pop
add
test
ficom
cmp
cmp
mov
dec
xchg
int
test
pop
daa
sbb
cld
test
mov
test
stc
sbb
sub
in
mov
mov
add
(bad)
push
and
and
icebp
inc
dec
cmp
push
dec
add
mov
cmps
stos
int3
inc
cmp
mov
mov
jb
add
and
test
imul
ficomp
inc
shl
push
ss
cmp
fcmovnbe
fdiv
sub
add
pop
xor
push
push
add
cmp
loop
jne
cmp
inc
sti
cmp
pop
idiv
xor
mov
mov
cmp
sbb
jecxz
cmp
mov
and
push
scas
xor
push
add
jl
sbb
je
hlt
mov
jge
leave
addr16
inc
sub
or
shl
push
icebp
pusha
std
rcl
mov
addr16
aaa
arpl
mov
inc
pop
out
xor
aaa
or
or
inc
add
ret
xchg
sbb
aam
sbb
and
out
and
or
xchg
cmp
lock
popf
and
inc
les
fs
xor
add
push
loopne
xor
(bad)
or
loopne
cdq
cmp
dec
or
mov
or
test
mov
or
xchg
add
fs
jbe
xor
sub
and
int3
sub
loope
out
rcl
inc
jns
pop
fwait
or
jl
and
int
push
and
fld
in
add
dec
push
call
pop
xor
jne
in
fdivr
or
cmc
cmp
adc
data16
cmps
call
outs
push
cli
xchg
jne
cmp
icebp
stos
rcl
add
retf
or
xchg
mov
pop
ror
les
and
lods
test
mov
dec
js
lds
push
clc
push
lds
call
mov
aad
cmp
daa
inc
pop
push
xor
pop
push
push
es
push
mov
loopne
push
scas
add
ret
popa
aam
push
test
sbb
add
shr
mov
popa
in
repnz
mov
dec
mov
test
pop
push
loope
test
mov
dec
or
int
nop
sub
xchg
js
loope
or
and
shr
or
sbb
and
or
add
push
ficom
dec
inc
retf
xchg
pusha
sub
jo
mov
or
mov
cs
push
or
es
dec
cdq
movs
stc
add
cmp
sbb
xor
(bad)
les
nop
ret
dec
leave
pushf
ins
push
jns
out
out
dec
jp
push
push
stc
dec
daa
pop
dec
pusha
inc
inc
mov
jns
sbb
movs
pop
fs
pop
repz
ja
sub
fs
sbb
pusha
dec
add
mov
fcomi
or
ja
xchg
hlt
ins
jecxz
sbb
jno
jmp
and
test
push
cmp
mov
dec
cmp
inc
mov
sbb
pop
cmp
jne
cmp
out
sub
push
xor
dec
mov
xor
lds
pop
mov
and
mov
test
rcr
or
or
cwde
call
or
add
dec
aaa
and
jne
push
repnz
lds
add
cli
stos
adc
adc
inc
out
pop
loop
or
pop
je
mov
sub
jo
mov
cmps
cmp
push
popf
or
jge
fdivr
jge
xchg
or
test
cmp
ret
dec
popa
ins
fldcw
and
mov
int
push
and
push
or
xchg
clc
xor
lods
arpl
bound
out
push
popa
data16
xor
das
dec
aaa
cmp
add
push
pop
imul
xchg
jg
push
push
sbb
sub
sar
mov
mov
add
ret
sub
or
push
add
sub
jb
cwde
lock
and
jecxz
mov
and
mov
mov
inc
jl
and
or
aas
pop
add
cmp
and
movs
das
adc
mov
enter
adc
mov
and
inc
and
push
fld
cmp
jne
inc
inc
xor
inc
push
jae
iret
mov
dec
test
or
ins
mov
mov
mov
sbb
mov
test
adc
xchg
imul
dec
inc
fdiv
push
pusha
xor
xor
inc
test
xor
mov
sub
ret
adc
or
sbb
cmp
add
jecxz
push
sub
hlt
xor
pop
das
or
pusha
push
mov
ret
mov
mov
sbb
sub
mov
sub
(bad)
sub
je
push
lea
pop
push
imul
inc
fcom
inc
inc
sub
pusha
dec
mov
inc
pop
mov
inc
mov
mov
imul
sub
mov
push
cmp
(bad)
add
xor
inc
inc
pop
xor
adc
xor
pop
scas
inc
out
rol
jg
aas
sbb
cmps
and
and
popa
test
sub
jnp
ds
inc
add
inc
sbb
dec
pop
push
add
fistp
pop
add
pop
mov
xchg
enter
xchg
outs
adc
cmps
add
sbb
mov
sub
aaa
fdiv
and
push
mov
out
pop
jmp
lods
or
bound
inc
sub
push
pop
lock
ret
jmp
sbb
stos
xchg
mov
imul
push
sub
lea
inc
ss
and
push
push
jp
ins
add
pusha
jno
ret
jg
xor
(bad)
cmp
inc
cmc
inc
aas
jecxz
xor
sub
adc
sbb
ins
cmp
sub
jl
push
push
leave
jg
(bad)
cmp
xor
adc
xor
setno
xor
mov
add
data16
mov
inc
lods
movs
push
sub
lea
jnp
or
test
loope
and
cmp
pop
mov
ret
data16
stc
or
push
cmp
iret
mov
inc
sbb
nop
inc
shr
jecxz
pusha
or
and
xchg
mov
jmp
cs
xor
adc
inc
daa
push
mov
cmp
cmp
repnz
push
push
push
mov
outs
add
or
sub
mov
add
bound
push
loopne
(bad)
xchg
jl
push
xor
aas
cmp
jmp
sub
and
or
jbe
ret
mov
jnp
sub
movs
retf
aam
adc
pop
jge
aaa
sbb
lea
xor
(bad)
jae
sar
pop
inc
or
jg
ret
add
push
xchg
mov
inc
mov
add
and
cmp
and
lds
push
fbld
jecxz
xchg
retf
push
add
mov
test
je
test
std
mov
lods
xor
iret
pop
cmp
scas
lahf
push
mov
or
std
arpl
push
lods
xchg
lock
(bad)
lahf
jo
jns
adc
cmp
xchg
dec
popa
mov
dec
inc
pop
adc
sbb
ja
retf
mov
test
sub
inc
je
pop
call
push
xchg
push
je
push
stos
jmp
push
xchg
cmp
(bad)
mov
pop
cmp
call
lahf
add
push
pop
call
add
stos
or
adc
(bad)
mov
aam
xor
adc
push
cwde
test
ins
jb
push
bound
and
xchg
jmp
in
in
sub
push
nop
mov
into
pop
inc
frstor
mov
pop
jns
pop
pop
ss
(bad)
outs
out
fadd
or
add
add
push
or
pop
or
in
out
int3
stc
inc
popf
push
dec
call
pop
pop
and
in
call
daa
je
pop
add
inc
or
or
adc
and
pop
or
push
mov
push
xchg
jge
call
jl
adc
in
jl
das
js
movs
mov
(bad)
dec
mov
jo
in
fmul
inc
cs
or
lods
ret
stos
add
test
dec
jge
jo
adc
out
dec
adc
or
mov
pop
cmp
mov
or
and
jbe
ins
add
or
push
aam
or
test
push
dec
pop
jg
dec
jbe
mov
jp
sbb
and
dec
push
mov
jecxz
not
fcom
repz
push
add
pop
mul
xor
mov
xchg
les
sbb
mov
pop
loope
xchg
add
and
mov
xor
mov
add
dec
movs
movs
out
cld
ret
adc
loope
sar
or
push
push
or
mov
shl
sub
mov
xor
dec
jns
popf
retf
push
push
fnstcw
in
push
inc
pop
inc
pop
mov
push
pusha
in
xchg
mov
dec
push
inc
(bad)
pusha
adc
call
xchg
inc
cs
fs
sar
or
push
mov
mov
ror
js
lea
movs
push
ret
inc
mov
daa
push
in
(bad)
pop
sub
adc
inc
inc
mov
mov
add
dec
cld
popa
and
add
jne
adc
mov
test
cmp
loopne
or
sub
iret
push
jp
adc
dec
and
lea
fild
jmp
pop
inc
mov
mov
pop
mov
inc
or
inc
addr16
ret
pusha
jl
sahf
imul
inc
lods
push
cmps
icebp
push
je
icebp
mov
out
mov
and
sbb
mov
sbb
push
ds
dec
imul
mov
xchg
sub
and
push
xor
mov
call
js
pop
pop
bound
bound
out
or
and
gs
clc
or
(bad)
das
xchg
mov
cld
test
mov
xchg
mov
pop
jae
xchg
add
sbb
jmp
movzx
push
jp
iret
imul
or
push
pop
inc
add
or
pop
sbb
or
cld
or
xchg
pop
mov
cmc
mov
lahf
jle
sbb
dec
and
mov
adc
int
pop
xor
xchg
push
xchg
dec
sub
mov
enter
mov
mov
cmp
jmp
push
sbb
pushf
ins
fsubr
mov
and
jp
mov
adc
sbb
pop
cmp
mov
inc
cmp
(bad)
rcl
int
jmp
inc
adc
movs
in
dec
xchg
push
aam
(bad)
xchg
pusha
iret
jnp
inc
gs
(bad)
adc
dec
sbb
out
push
pop
push
mov
aaa
mov
xor
leave
test
loopne
sbb
and
(bad)
movs
add
dec
pop
adc
mov
and
in
add
scas
rol
inc
jge
adc
push
addr16
push
or
imul
sbb
(bad)
out
add
dec
cld
inc
retf
aam
push
sti
jp
sub
mov
jle
push
pop
loope
adc
pop
cmp
popa
cmp
dec
jge
nop
xchg
dec
jne
push
sbb
dec
rcl
out
xchg
push
fprem
inc
dec
or
inc
mov
retf
mov
out
or
push
fld
xchg
sbb
je
outs
arpl
dec
leave
adc
repz
inc
jmp
push
and
jecxz
fidivr
or
test
mov
mov
dec
mov
std
nop
push
leave
(bad)
pop
xchg
sbb
jl
pop
(bad)
jne
cmp
push
loopne
dec
lods
push
or
hlt
jle
xor
sbb
outs
sti
out
or
or
mov
add
ja
push
test
adc
or
test
ret
mov
mov
mov
push
add
js
xor
and
jne
jo
push
dec
stos
add
movs
mov
jp
or
mov
and
pop
mov
or
mov
pop
sub
pop
mov
test
xchg
lods
or
in
push
pop
mov
mov
sbb
adc
arpl
and
movs
push
sub
xchg
add
pop
aad
xchg
and
ret
cmp
fadd
into
jns
jno
xchg
inc
les
add
or
add
mov
lea
rep
inc
or
sbb
push
cmp
outs
mov
jae
xchg
hlt
dec
setne
cmp
add
adc
ret
adc
movs
mov
nop
push
mov
push
sub
sub
out
inc
aas
push
mov
ss
mov
stos
add
add
sbb
adc
push
leave
adc
in
add
xor
or
sbb
js
push
das
xor
stos
fwait
inc
adc
add
and
xor
mov
daa
jp
or
adc
and
in
inc
les
cli
sbb
lahf
ds
sub
inc
cmp
jae
push
lea
mov
cmp
iret
inc
rcr
ret
mov
cmp
inc
mov
ror
adc
mov
cs
and
mov
add
repz
nop
and
shl
(bad)
mov
loopne
push
mov
xchg
rol
cmp
nop
test
ficomp
or
inc
aam
cmp
arpl
shr
push
je
push
loope
sbb
xchg
cmp
or
push
sbb
pop
or
add
lods
ja
mov
and
and
push
jmp
cli
or
dec
ss
push
mov
cmps
jmp
push
mov
pop
dec
in
mov
lds
sar
mov
ins
mov
mov
cmp
add
xor
sub
pop
pop
imul
xchg
mov
loope
or
sub
push
cli
mov
sbb
fsubr
icebp
setl
out
add
dec
mov
ror
pusha
lds
enter
inc
cmp
jo
push
push
inc
sahf
cdq
mov
xchg
loop
jge
cmp
xor
outs
inc
fmul
jle
push
outs
cmp
gs
int3
push
stos
ret
push
inc
adc
push
push
outs
adc
push
mov
add
fsubr
js
cmp
call
xor
iret
adc
and
dec
xor
popf
dec
call
pop
jmp
lock
mov
xlat
cmp
outs
mov
test
adc
gs
in
test
xor
pop
ret
cmp
jp
sub
aam
neg
sti
daa
dec
sahf
or
inc
adc
cli
mov
push
mov
push
dec
push
pusha
es
inc
fistp
push
jne
push
inc
scas
jge
pop
loop
jo
sbb
imul
adc
xchg
shr
sahf
arpl
xchg
xchg
xchg
(bad)
jo
jnp
mov
add
push
add
lea
adc
sbb
mov
mov
js
cmp
fnstsw
jns
jle
and
jno
je
sub
mov
lds
jns
push
adc
inc
cmp
out
push
cmp
jle
loope
(bad)
and
mov
sbb
sbb
lds
xor
push
lds
push
push
push
xchg
push
push
push
cmp
xchg
add
push
in
loopne
enter
fs
(bad)
cmc
sar
outs
call
outs
mov
dec
xchg
push
mov
cs
leave
sub
jl
adc
pop
imul
xor
sbb
add
mov
jle
pop
fstp
ja
jbe
jmp
adc
pop
loop
cmp
sub
xor
adc
xor
loope
gs
ror
bnd
in
jae
sbb
pop
jns
mov
xchg
sbb
pop
push
push
push
xchg
test
sbb
add
mov
and
xor
and
das
je
fdiv
cmp
inc
sub
mov
pop
in
xchg
lds
mov
xchg
mov
xor
lock
xor
jno
pop
ja
sbb
push
mov
loope
jne
fisub
sub
push
jmp
dec
and
or
push
int3
nop
inc
pop
pop
add
or
loop
not
jmp
adc
iret
cdq
xor
inc
and
push
stos
mov
mov
nop
jne
in
dec
mov
mov
cmps
pop
add
imul
(bad)
cdq
pop
jo
and
jb
stos
cdq
clc
inc
mov
adc
nop
das
pop
jns
js
pop
pop
add
loope
jne
mov
test
neg
xor
iret
cmp
(bad)
data16
push
adc
push
add
or
and
mov
inc
mov
scas
add
or
xchg
jne
dec
(bad)
inc
dec
or
or
pop
pop
push
rcr
xor
xchg
dec
lock
push
xchg
mov
je
cmp
call
pop
cmp
inc
pop
pop
ja
popf
push
mov
mov
push
push
sahf
mov
dec
jge
cmp
mov
jae
retf
enter
dec
xor
cmp
sub
pop
adc
pop
and
sub
cmp
fdiv
cmp
xlat
push
push
fadd
dec
push
jne
xor
pop
mov
xor
jp
dec
and
sbb
loopne
pop
cdq
mov
jnp
or
push
add
mov
sbb
dec
sbb
or
xchg
mov
push
and
cwde
lock
mov
xor
les
ds
daa
pop
stos
xchg
mulps
sar
xchg
mov
push
or
ret
mov
mov
popa
not
adc
add
std
in
sbb
lds
gs
xchg
cmp
mov
and
out
dec
mov
sub
mov
push
sub
je
(bad)
or
mov
dec
adc
jbe
jne
mov
push
xchg
fidiv
pop
(bad)
and
outs
pop
adc
jmp
pop
jmp
sbb
push
pop
lds
je
ds
(bad)
jge
adc
fcomp
jae
adc
cmp
sbb
jbe
movs
push
push
sbb
xor
pop
test
scas
das
jmp
int
and
movs
and
xchg
fstp
jne
inc
sub
add
xor
jecxz
(bad)
push
not
and
push
push
jb
or
push
iret
popa
xor
scas
test
pop
push
jne
ja
(bad)
dec
popa
int3
fiadd
push
push
pop
(bad)
mov
xor
lock
push
push
adc
push
and
xlat
iret
inc
(bad)
clc
xchg
cmc
scas
mov
push
mov
aas
jmp
cmp
retf
aas
fmul
jmp
or
mov
dec
or
mov
test
push
test
add
adc
ss
jb
and
or
inc
loope
(bad)
or
std
mov
xchg
dec
pushf
add
add
adc
jmp
inc
or
aam
xchg
jo
fdivr
inc
or
pushf
jecxz
gs
xor
xor
inc
leave
pop
jnp
add
mov
mov
push
sbb
sbb
test
sbb
rol
or
(bad)
push
std
sti
add
sub
push
add
jne
mov
sub
sub
cmp
int
push
nop
ja
pusha
add
push
inc
xchg
or
cld
xchg
or
pop
mov
push
add
shl
or
test
sub
cmp
push
lock
xchg
xlat
test
adc
dec
and
ss
icebp
das
sub
movs
pop
loopne
lods
and
dec
fstp
push
jg
ret
add
jle
je
or
jne
cmp
movs
dec
(bad)
cmp
lods
sbb
test
xor
jae
add
or
in
(bad)
cmp
push
mov
push
push
push
push
pushf
out
and
out
test
mov
jmp
or
out
leave
icebp
adc
test
push
dec
pop
in
rcl
or
push
lea
inc
mov
repz
leave
push
or
add
dec
push
pushf
pop
ret
cmp
cmp
movs
push
push
mov
xor
mov
xor
inc
(bad)
add
loop
or
cmc
js
add
ins
cmp
call
xchg
ror
aaa
xchg
aaa
pop
ret
cmp
cmp
aaa
jp
fnsave
push
sbb
adc
nop
mov
je
pop
and
jbe
jg
jp
dec
xchg
mov
(bad)
cmp
push
or
dec
pop
or
add
ficom
xor
inc
dec
call
mov
jl
jp
pop
mov
mov
test
enter
add
push
cs
and
push
xchg
pop
js
cmp
sar
or
inc
add
sbb
mov
inc
mov
jnp
xchg
pop
mov
adc
sub
push
push
(bad)
or
pop
add
xchg
xchg
in
nop
push
neg
test
add
ins
push
add
mov
dec
add
pop
aam
test
add
je
sub
ja
inc
in
arpl
dec
data16
loopne
jp
loopne
movs
pop
call
xor
cld
fist
loope
icebp
xchg
push
push
or
mov
or
add
in
test
or
adc
or
sub
movs
in
push
aad
int3
cmp
loopne
in
in
pop
xchg
cmps
in
movs
dec
push
and
xor
cmp
cmp
rcl
or
pop
inc
aam
lock
push
fs
push
or
add
add
sbb
dec
daa
test
and
test
lods
out
ja
jecxz
xchg
mov
test
or
mov
jne
(bad)
call
pusha
push
(bad)
jmp
and
inc
adc
inc
and
stos
call
int3
mov
adc
xor
jno
mov
add
xchg
jmp
pop
pop
inc
pop
pop
xor
jle
push
jbe
dec
jmp
xchg
fnstenv
xlat
nop
ror
enter
mov
dec
inc
push
int3
jno
add
inc
es
ret
push
(bad)
fild
pop
sub
fdivr
pushf
(bad)
jecxz
test
jo
jnp
sti
xchg
push
cwde
or
sbb
pop
fisub
das
pop
ret
hlt
or
pop
outs
xchg
and
mov
in
dec
retf
inc
retf
or
ins
aas
mov
or
push
mov
ror
push
mov
pusha
ficom
cmp
or
es
sbb
sbb
lock
inc
push
add
jo
arpl
inc
lds
or
mov
sbb
gs
xchg
mov
xor
adc
cdq
fs
inc
mov
rcl
xchg
add
xchg
ins
test
push
or
push
adc
mov
je
push
pop
iret
mov
test
enter
in
shl
sbb
je
les
jne
xor
repnz
addr16
cdq
inc
sbb
mov
pop
into
adc
add
push
je
push
cmp
pop
and
icebp
mov
lock
jp
xor
jp
inc
mov
int3
adc
fbld
push
xor
mov
push
dec
jl
push
stos
xchg
jmp
adc
xor
scas
or
pop
lds
push
mov
aas
and
mov
xchg
addr16
xchg
push
outs
sub
call
xchg
cmp
push
loop
mov
sar
fst
pop
mov
cmp
mov
inc
dec
and
test
jb
jo
pusha
xor
out
inc
cmps
push
xchg
add
les
imul
push
adc
pop
jge
sub
add
xor
or
adc
inc
mov
mov
inc
xor
ja
inc
out
dec
pop
mov
icebp
fwait
sub
mov
cmp
dec
(bad)
xor
dec
sti
inc
adc
jbe
jmp
call
or
test
sbb
xor
data16
cmp
pop
cwde
or
push
sbb
hlt
add
add
jle
pop
push
imul
shl
xchg
sub
mov
mov
movups
dec
push
mov
test
jno
loope
cli
int
dec
retf
ins
nop
mov
jnp
mov
add
or
or
dec
jmp
leave
mov
scas
idiv
dec
add
(bad)
mov
xchg
test
pop
mov
push
ins
sub
mov
jns
jl
or
or
mov
xor
add
stos
inc
pop
inc
or
sub
sub
sbb
jge
rcr
pop
xor
push
inc
sbb
push
dec
pop
adc
adc
test
add
adc
shl
enter
mov
push
cmp
ins
inc
sbb
xor
or
push
push
add
je
dec
or
loope
ret
mov
in
mov
mov
in
adc
and
mov
add
imul
add
push
movs
adc
push
out
push
xchg
jbe
jne
jne
div
movs
das
test
aas
mov
nop
mov
aaa
push
jns
or
cli
es
pop
loopne
cmps
je
stc
sti
lea
add
xor
mov
jne
int
mov
jmp
add
(bad)
fadd
xchg
pop
clc
pop
jge
jb
push
cmp
inc
adc
add
sub
add
leave
add
push
sbb
(bad)
lods
adc
pop
or
dec
test
ret
cli
adc
aaa
sub
daa
jns
test
lock
cdq
or
push
les
ins
dec
pop
jmp
pop
test
pop
pop
lea
lea
test
je
or
dec
test
jle
mov
inc
mov
lock
jp
sub
adc
dec
xor
pop
jo
(bad)
jg
or
pop
stos
cmp
rol
(bad)
fdiv
call
ror
mov
sbb
bound
xor
push
sbb
sbb
loopne
push
ins
pop
or
add
dec
jae
ret
and
pop
sbb
loopne
shl
movs
add
ror
pop
sbb
movsx
pop
mov
dec
sub
lods
inc
mov
fistp
inc
sbb
cmp
add
xchg
or
fld
add
xor
jge
push
push
xchg
mov
ret
adc
or
sbb
pop
cmp
(bad)
mov
push
adc
pop
pop
add
pop
call
cmp
push
gs
xor
inc
in
cwde
jne
fst
fwait
jmp
dec
enter
add
mov
jnp
out
jge
test
mov
and
clc
cmc
pop
sbb
dec
push
push
sbb
mov
test
dec
cmp
jns
and
ret
or
add
pushf
sbb
pop
cmp
mov
in
fadd
and
and
mov
jmp
ds
outs
push
xchg
jmp
and
adc
xor
adc
popf
inc
dec
inc
and
aaa
int
sbb
jmp
pop
fwait
popa
aas
repnz
out
sbb
and
sub
xor
test
inc
pop
inc
outs
rcl
or
push
push
dec
or
sbb
cmp
xor
mov
jno
push
mov
push
pop
push
sbb
sub
cmp
and
push
jmp
in
loopne
mov
xlat
push
mov
jmp
in
and
lock
cmp
inc
(bad)
cld
and
sub
jb
xlat
or
je
pop
or
jle
int3
dec
(bad)
enter
mov
idiv
loopne
xchg
jb
retf
in
inc
xchg
fisttp
test
inc
cmp
fidiv
sbb
adc
dec
push
push
jns
mov
dec
sbb
and
clc
nop
xchg
sbb
xchg
daa
push
dec
add
ret
push
push
push
shr
jb
mov
add
jns
jae
sqrtps
push
jo
push
movzx
pop
dec
addr16
hlt
clc
push
daa
sbb
cli
adc
inc
and
and
aaa
xchg
xchg
jns
popa
ret
mov
push
jecxz
hlt
adc
xor
inc
js
push
jle
xchg
pop
sti
pop
and
mov
data16
push
mov
cdq
sbb
push
sbb
jno
xchg
sbb
ret
mov
push
jmp
popa
fwait
aam
aad
lods
cmp
in
mov
lea
dec
js
add
lahf
mov
xor
je
push
sbb
test
mov
mov
pop
mov
inc
ror
int3
sub
inc
and
gs
fucomip
adc
or
inc
in
jbe
cs
sub
pushf
in
cmps
adc
mov
xchg
push
inc
cmp
adc
and
push
and
popa
mov
xchg
push
pop
lods
cmp
fld
cdq
jle
push
fld
push
sub
dec
pop
or
inc
loopne
je
and
pusha
cmp
jl
sub
ds
or
mov
jle
jne
jne
rol
pop
or
inc
sub
cmp
addr16
loopne
add
(bad)
ret
xor
pop
inc
js
pop
xor
xor
and
test
clc
hlt
xchg
rcl
xor
sbb
inc
lods
dec
lods
sbb
inc
sub
xor
cmps
movs
mov
and
xchg
aam
jmp
pop
repz
repz
cmp
dec
push
push
movs
rol
sub
fsub
in
in
lock
cdq
mov
movs
and
dec
mov
xchg
daa
xchg
fisubr
xor
inc
xlat
stos
popf
js
das
(bad)
mov
inc
jge
adc
add
inc
sub
scas
test
push
and
sub
sub
push
test
xchg
push
mov
push
cmps
(bad)
stos
inc
cmp
sbb
pop
jb
(bad)
mov
and
ficomp
aas
nop
adc
enter
jmp
adc
or
or
daa
lods
das
ins
pop
pusha
and
test
xchg
pop
pop
jno
inc
mov
add
mov
xchg
sub
cmc
loop
cmps
jne
cli
je
cmp
jne
loope
mov
inc
cmp
jne
adc
ja
pop
or
push
push
mov
retf
jp
and
pop
and
xor
retf
je
ret
stos
stos
mov
call
add
push
and
test
dec
fnstcw
movs
mov
sbb
push
mov
test
hlt
ins
ror
shr
mov
add
(bad)
ja
xor
into
pop
popa
adc
lods
pop
sti
inc
lods
jmp
sbb
ror
aaa
sbb
pop
aas
loopne
inc
bound
loope
dec
add
jmp
and
mov
cdq
push
mov
xor
clc
sbb
xor
sub
ret
jmp
or
sbb
pop
fild
jp
je
xor
xor
xlat
mov
sbb
jae
icebp
xor
inc
sub
setns
push
pop
rcr
inc
and
pop
pop
shl
nop
xchg
add
push
popa
mov
jb
add
jnp
add
jge
cmp
test
jae
sbb
or
or
and
adc
push
cli
test
sub
outs
cmp
add
inc
push
inc
pusha
movs
push
jbe
adc
add
mov
aaa
test
test
mov
xchg
es
aam
sbb
cmp
jo
dec
mov
and
daa
sub
sub
icebp
push
dec
dec
xchg
fsub
sbb
inc
jecxz
dec
or
fcmovb
(bad)
xchg
inc
xchg
xchg
dec
or
in
rcl
outs
xchg
and
push
gs
jmp
pushf
dec
push
pop
retf
cmp
adc
lahf
add
loop
jp
push
dec
xchg
int3
ins
jmp
inc
adc
or
sub
cmp
jmp
sub
push
loopne
mov
xchg
mov
jmp
push
loope
inc
push
ss
loopne
jge
xor
or
and
dec
pop
retf
test
cmp
dec
mov
fidiv
jb
int
clc
and
mov
es
xchg
push
add
xchg
out
xor
(bad)
fistp
fadd
pop
ficom
mov
test
or
add
pop
or
sbb
sub
sbb
xor
xchg
or
and
mov
lea
jns
call
pop
adc
movs
jge
mov
adc
out
outs
ja
rcl
mov
(bad)
f2xm1
push
loope
and
scas
cdq
pop
sbb
dec
sbb
popa
sbb
push
adc
mov
push
inc
inc
sbb
sub
xor
xchg
add
(bad)
lock
outs
(bad)
pop
enter
icebp
(bad)
les
push
cmp
adc
mov
or
cmp
push
jmp
cmp
pop
adc
ret
sbb
push
add
test
mov
dec
or
or
sbb
inc
mov
sbb
xchg
pop
lea
and
push
les
arpl
pushf
cmp
sub
cli
jo
xchg
movs
in
add
and
stc
jne
jl
(bad)
push
cmp
adc
xchg
push
stos
cmp
(bad)
cmp
jne
xchg
jmp
test
pop
pop
iret
push
xchg
(bad)
cdq
dec
cmp
mov
es
push
or
inc
xchg
fld
and
mov
ret
push
pop
out
test
lea
mov
jno
or
jmp
rcr
mov
push
xor
xor
add
cmp
ss
pusha
xchg
xchg
or
shl
cmp
jne
repz
push
mov
push
test
call
sub
(bad)
mov
dec
or
int3
movs
test
cmp
jae
push
ret
sub
pop
sti
inc
aas
ins
jne
jmp
adc
push
push
sub
mov
push
or
adc
pushf
loopne
es
gs
pusha
push
jne
retf
movs
jne
hlt
mov
inc
shr
or
pop
mov
inc
pop
jns
sbb
jne
xor
cmp
clc
movs
xor
xor
xchg
sbb
xchg
jmp
ins
shl
mov
push
into
or
jno
fstp
sbb
es
sbb
jp
cmp
inc
(bad)
fdiv
loope
mov
mov
(bad)
push
xchg
mov
rol
dec
iret
dec
inc
add
adc
sub
dec
or
les
push
push
adc
pushf
xchg
sar
xchg
loopne
outs
sbb
and
add
loopne
cs
lds
cmc
push
fsubrp
mov
pop
jo
mov
pop
shl
cwde
and
xchg
adc
movzx
cdq
jmp
pop
loopne
push
push
push
inc
push
aaa
aam
ret
mov
rcl
test
and
jno
xchg
out
or
ret
push
enter
cmp
ss
mov
jmp
xchg
mov
js
xor
add
inc
gs
out
jmp
icebp
add
mul
or
jae
pop
pop
sbb
in
popa
push
test
xor
mov
sti
ja
jmp
push
push
jmp
mov
jle
jmp
sub
jne
or
push
rol
dec
or
dec
in
mov
(bad)
test
dec
add
mov
inc
mov
and
sub
pop
loope
adc
mov
mov
movs
xor
inc
mov
es
imul
sbb
xchg
sbb
cmp
dec
sub
gs
shl
mov
rcr
jmp
mov
cmp
inc
xchg
lds
push
push
mov
xor
nop
mov
mov
lods
test
dec
push
mov
lahf
mov
mov
adc
ret
add
xchg
or
mov
shl
sub
pushw
push
or
sbb
jp
mov
jge
call
movs
ds
mov
imul
bound
jno
les
jns
add
adc
cmp
adc
adc
dec
clc
ret
sbb
retf
lods
xchg
pop
ret
mov
push
gs
cmp
mov
lods
pusha
bound
cdq
inc
loopne
and
add
arpl
lds
pop
cs
outs
sbb
sub
add
dec
and
outs
inc
add
test
jmp
pop
or
lods
jo
mov
imul
inc
xchg
icebp
adc
sbb
rol
and
add
cdq
mov
jmp
add
js
add
cmp
sbb
push
imul
or
push
repnz
sbb
pusha
and
xor
movs
inc
xor
push
fadd
in
test
imul
mov
icebp
or
mov
mov
cmp
repz
stos
jle
shl
jne
neg
sbb
out
jno
adc
sbb
push
mov
(bad)
xor
inc
outs
icebp
or
clc
rcl
jno
aas
push
add
imul
mov
pop
in
jno
repnz
push
adc
cdq
push
mov
cdq
js
and
clc
sbb
xchg
xchg
iret
and
jmp
ret
push
pop
sbb
jg
pop
xchg
adc
jo
cmp
inc
mov
pop
add
inc
movs
adc
xor
add
jns
mov
push
mov
ror
imul
imul
jne
add
iret
xor
retf
inc
push
cmp
sbb
and
retf
mov
(bad)
lock
dec
ins
and
dec
push
pop
arpl
lods
or
push
cmp
add
outs
or
jns
inc
mov
pop
je
fs
aam
inc
adc
fs
stos
pop
cmp
sbb
(bad)
xchg
pop
pop
lods
xchg
imul
or
dec
in
adc
test
lods
mov
pop
mov
ins
in
sub
add
out
adc
das
jbe
or
je
dec
jne
mov
push
adc
push
xchg
pusha
test
push
dec
inc
pop
mov
push
dec
mov
pop
jbe
mov
sub
not
adc
popa
xor
add
cmp
pop
je
sub
and
adc
or
pop
cmp
pop
adc
scas
call
cmp
pop
adc
daa
jmp
cmp
sub
add
inc
adc
push
lea
fdiv
int
sbb
or
cmp
pop
ror
fisttp
xor
or
push
movs
push
les
aaa
and
pop
mov
pop
gs
lock
push
ret
jl
inc
jecxz
or
dec
or
mov
jecxz
ret
lahf
and
dec
sbb
jecxz
adc
rol
adc
xor
adc
adc
lds
sbb
(bad)
ss
dec
leave
lea
pop
iret
xchg
test
or
paddb
adc
rol
pop
dec
add
ds
inc
fsub
sbb
inc
xor
push
sbb
add
jbe
xchg
popf
xlat
sub
adc
and
or
and
mov
inc
fstp
add
xchg
in
(bad)
dec
xor
adc
inc
mov
in
pop
movs
xchg
inc
clc
inc
test
or
cmp
push
mov
jmp
mov
(bad)
push
push
push
lock
push
jmp
mov
and
rcl
arpl
or
push
cmp
movs
mov
push
stos
fcomp
push
and
inc
or
inc
add
jns
shr
imul
push
int3
push
adc
sahf
(bad)
aam
mov
xchg
js
xchg
cld
or
loopne
sub
fcomp
js
cwde
xor
sbb
fcomp
xor
les
sbb
adc
test
and
or
xlat
aam
lea
or
es
addr16
test
xchg
xchg
cmps
inc
mov
enter
das
mov
stc
jmp
mov
push
push
inc
add
cdq
gs
adc
cmp
push
mov
push
push
cmp
nop
xchg
xor
int3
adc
adc
loope
pusha
(bad)
clc
inc
or
and
jmp
sbb
cmp
inc
inc
imul
pop
or
jns
pop
loop
mov
cdq
test
inc
push
add
mov
mov
test
fstp
out
pop
aaa
lods
mov
or
imul
cmps
adc
cmp
jne
dec
(bad)
dec
push
mov
add
mov
pop
sbb
xchg
sbb
pop
daa
ret
mov
mov
call
sbb
jne
clc
cmps
dec
adc
fwait
out
out
fiadd
add
cmp
or
ret
push
jmp
imul
sub
rcr
pop
fsub
sub
adc
adc
(bad)
adc
sar
sar
int3
add
daa
test
and
mov
or
(bad)
sub
cmp
sub
jmp
adc
cmp
jle
sti
clc
jle
sub
cmp
jne
xor
jmp
cmp
call
add
cmp
jle
inc
sub
add
pop
push
adc
push
add
inc
cld
add
inc
ins
xchg
enter
xchg
ins
adc
cwde
rcr
push
push
cmp
and
pop
add
jne
xchg
test
ret
test
outs
lods
sub
push
mov
add
add
frstor
add
push
or
cmp
mov
push
adc
mov
mov
add
cld
int3
das
sbb
push
fdiv
inc
shr
loopne
push
adc
out
mov
pop
jne
(bad)
push
sbb
add
push
xlat
push
cli
and
sub
jle
pop
je
std
push
dec
js
jae
js
mov
cmp
test
mov
sbb
xor
cmp
sbb
cmp
sbb
add
jno
add
xchg
mov
je
pop
adc
dec
bnd
xor
dec
or
stc
push
cld
jp
out
movs
pop
pextrw
xor
je
cmps
or
adc
add
or
data16
adc
call
mov
sbb
call
push
mov
movs
sub
rol
arpl
cmp
inc
dec
push
sti
pop
and
fcmovb
mov
test
in
and
sar
cmp
sbb
add
sbb
cmovb
lods
dec
and
cmp
push
mov
inc
push
jb
lock
sub
loopne
mov
and
inc
xor
(bad)
xchg
sub
and
mov
mov
adc
pop
and
sbb
mov
nop
das
loopne
dec
xor
mov
and
push
in
loopne
ds
lods
add
shr
inc
sbb
into
jnp
cmp
daa
loopne
idiv
es
or
inc
dec
ins
push
add
les
iret
ss
xor
jle
sbb
aas
mov
(bad)
loopne
daa
pop
adc
test
sbb
out
xchg
add
jmp
aaa
or
ds
cmc
rol
or
fisub
sbb
shl
aas
ins
xchg
lahf
test
std
inc
or
enter
pop
mov
shl
rol
out
mov
lock
pop
mov
sub
lock
add
add
popa
lods
inc
fist
dec
enter
and
ds
cmovae
mov
xor
outs
add
mov
push
or
xchg
mov
add
and
lods
push
push
call
dec
xchg
xor
test
daa
push
xchg
aaa
movs
cld
dec
mov
or
mov
cmp
(bad)
ror
inc
xchg
lock
mov
aas
rol
push
ds
in
pop
js
je
add
sub
mov
inc
je
push
into
leave
mov
inc
xor
adc
and
ss
popf
xor
repnz
mov
fcom
push
in
inc
adc
and
and
jo
jge
test
add
cmps
cmp
(bad)
popf
jle
std
mov
leave
add
cli
add
mov
mov
and
sub
pop
(bad)
push
std
ins
adc
add
xor
or
inc
push
nop
aaa
lea
or
not
pusha
call
pop
lods
xor
add
push
hlt
inc
cs
push
fnsave
pop
in
repz
daa
sbb
sub
jo
push
inc
outs
(bad)
aam
add
in
dec
int
clc
lea
or
and
fimul
or
mov
(bad)
ds
ret
add
jo
in
adc
jb
mov
cmps
or
adc
mov
push
push
sbb
adc
push
pushf
or
or
(bad)
xor
ror
sbb
cld
nop
sbb
mov
pop
bound
dec
test
jae
mov
add
sbb
pushf
out
mov
jb
and
mov
xchg
xor
and
inc
xchg
add
lods
xor
sbb
push
scas
ret
add
mov
test
out
xchg
and
enter
es
xor
mov
pop
ret
adc
push
adc
push
fsubr
out
cwde
popf
and
push
daa
and
ss
cmp
dec
add
mov
ret
pop
xchg
add
push
mov
jl
ret
mov
sub
mov
fst
sbb
or
or
push
mov
sbb
push
int3
xchg
pop
inc
scas
std
pop
push
outs
mov
push
add
adc
fisubr
mov
sahf
out
ret
rcl
mov
push
jne
int
jmp
push
jnp
or
sub
cmps
jge
cmp
std
jmp
mov
cmp
xchg
cmp
out
pop
fsubr
(bad)
add
inc
(bad)
loope
xchg
jo
ror
outs
icebp
and
add
dec
nop
arpl
je
arpl
daa
push
fucomi
cmp
jbe
push
shl
jbe
iret
fdivr
push
jne
int
mov
loopne
xor
xchg
add
or
jg
xchg
add
pop
call
xchg
pop
push
ss
ficom
push
push
fimul
into
mov
ds
sub
jmp
sub
push
mov
jno
push
inc
cmp
imul
and
out
movs
arpl
adc
pop
popa
xor
jne
mov
cli
call
jle
xlat
mov
loopne
cmps
xchg
sbb
or
sbb
cwde
scas
std
addr16
ret
add
push
or
jl
mov
jmp
inc
add
inc
arpl
les
aas
hlt
mul
mov
ins
fsubr
pop
and
jge
ja
add
scas
test
push
push
addr16
cmp
inc
fstp
popa
or
xor
add
sar
push
mov
add
not
xchg
sbb
sbb
inc
cmp
popa
js
jno
outs
ror
loopne
xchg
and
xchg
cld
xor
adc
or
pop
push
add
jnp
dec
push
popa
dec
jae
add
enter
or
or
push
movs
loop
fdiv
lea
mov
ret
(bad)
ja
sahf
clc
cmp
jge
pop
push
pop
push
clc
or
inc
jnp
movs
jnp
sbb
pop
push
or
cmc
shr
add
test
ss
xor
push
out
inc
clc
or
adc
cmp
scas
push
add
cld
jo
sbb
push
push
lods
sub
add
sbb
add
add
pop
xor
inc
push
push
out
and
jmp
test
mov
add
cmp
mov
and
sub
add
adc
inc
push
sbb
ficomp
xor
(bad)
jge
xor
lahf
mov
cmp
sub
jp
(bad)
ret
jo
ror
add
adc
(bad)
stos
push
inc
push
jmp
add
push
sbb
(bad)
das
in
sbb
sbb
push
pop
inc
sbb
nop
popa
mov
sub
ret
in
nop
popa
ins
inc
int
add
push
jb
xchg
int3
jae
add
adc
adc
sbb
xchg
or
fisub
stc
sub
mov
jmp
pop
bound
mov
adc
rcpps
pop
(bad)
push
mov
jne
or
ret
pop
pop
mov
pop
inc
mov
sub
xchg
jp
aam
mov
jmp
arpl
cmp
inc
daa
lea
inc
test
hlt
and
mov
xor
gs
push
xchg
mov
pop
dec
sub
inc
xor
add
add
retf
loope
adc
movsx
movs
jge
sub
sub
xor
xor
cmp
daa
push
call
mov
push
data16
lock
or
loopne
inc
sbb
jle
adc
add
or
dec
jecxz
inc
or
jecxz
dec
sbb
pop
iret
mov
push
inc
sysret
mov
push
push
jp
arpl
sub
and
inc
and
daa
pop
inc
xchg
(bad)
xor
adc
push
sub
push
sbb
add
jno
jge
push
or
push
push
mov
dec
and
sbb
enter
adc
cmp
add
push
rol
mov
popa
xor
xor
push
mov
pop
jae
cmp
leave
sbb
dec
jb
addr16
push
bound
push
and
or
xor
xchg
mov
cmp
mov
add
push
inc
add
sbb
xor
push
jb
jle
ret
daa
dec
iret
pop
aad
mov
jo
lods
dec
push
inc
sar
and
or
inc
mov
retf
inc
std
rcr
or
cmps
sahf
push
fbstp
and
cmp
test
push
sbb
add
or
mov
xlat
dec
jmp
stos
add
sbb
ret
xchg
pop
cmp
sbb
dec
(bad)
mov
inc
push
mov
pop
xchg
call
sbb
ret
adc
pop
dec
ror
mov
ficom
int
mov
scas
and
mov
sub
push
add
mov
sbb
xlat
xchg
cmp
(bad)
popa
test
or
push
ret
movs
pop
push
jnp
fidiv
icebp
dec
add
push
fiadd
cwde
mov
push
lds
mov
add
ror
cmp
call
jbe
dec
in
inc
lock
daa
mov
aam
cmp
cwde
dec
and
or
and
add
sahf
sbb
adc
repz
rol
pop
into
test
ret
outs
les
cdq
mov
push
(bad)
sub
movs
dec
and
pop
dec
or
rol
mov
ret
add
cmp
push
lock
ret
inc
add
lods
dec
(bad)
(bad)
into
push
mov
or
mov
and
lock
xor
shl
(bad)
out
cdq
or
pop
adc
or
mov
jmp
inc
xchg
rol
sub
cmc
and
jle
push
test
jl
adc
add
mov
inc
cmp
add
shl
and
xchg
dec
xchg
inc
dec
loopne
dec
or
icebp
add
out
retf
pop
push
aad
in
cmps
jecxz
in
in
icebp
inc
jmp
loopne
push
fucom
(bad)
and
add
sahf
add
inc
add
cmp
inc
and
out
inc
vmovmskps
shl
cmp
dec
mov
loopne
or
mov
or
add
cmp
sbb
add
dec
fsubr
mov
push
add
xor
push
test
imul
mov
mov
xchg
and
push
push
or
mov
or
inc
jmp
jns
fadd
pop
add
and
lock
push
or
(bad)
push
push
(bad)
mov
adc
into
push
push
cmp
sti
pop
jge
dec
xchg
jle
dec
rol
mov
or
int
mov
test
retf
jo
mov
shl
fmul
dec
loopne
add
fstp
fincstp
stos
faddp
push
popa
xlat
stos
jge
or
adc
push
movs
int3
ret
repnz
dec
pop
dec
rcr
movs
sbb
xor
fdivr
stos
xor
ror
add
mov
xor
shr
retf
jae
or
pop
dec
or
mov
mov
cmps
retf
push
popa
mov
imul
icebp
push
pop
pop
mov
shl
cmp
sbb
jns
jne
mov
jmp
add
mov
pusha
adc
dec
mov
ret
jmp
xor
inc
fdiv
shl
(bad)
(bad)
aas
pxor
xor
sbb
jmp
iret
jecxz
sub
xor
ins
push
or
mov
or
push
test
sub
lea
and
gs
or
neg
or
push
aad
imul
out
xor
or
adc
outs
jmp
or
jmp
add
jo
je
arpl
inc
add
je
fst
pop
inc
outs
push
and
lahf
cmps
push
daa
cmc
scas
stos
ret
rcl
mov
adc
shr
and
or
popf
or
not
outs
or
lods
add
hlt
dec
mul
add
dec
jge
fistp
hlt
sbb
mov
fidivr
sub
jne
inc
sbb
ret
add
pop
movs
mov
dec
mov
outs
adc
fucomip
push
pop
call
rol
sub
cmp
loop
loope
adc
jo
pop
daa
push
ret
or
xlat
out
adc
jo
pusha
das
pushf
xor
cmovae
xchg
or
jb
aaa
js
mov
or
stos
in
or
jl
lock
in
adc
push
retf
and
cmp
dec
pop
stos
sbb
jl
cmp
loopne
cmc
dec
pop
in
inc
inc
xor
push
push
nop
cmp
fadd
cmp
push
arpl
ins
gs
sbb
or
mov
movhps
cmps
push
je
or
add
push
lods
sub
sbb
ins
shl
push
rol
fmul
xchg
jns
and
fcom
cmps
sub
sub
aad
jge
shl
xor
in
push
mov
inc
push
cmp
pop
loopne
push
mov
sub
lea
test
test
adc
cld
push
push
test
xor
jnp
fs
div
add
enter
lods
sbb
loopne
mov
push
ins
add
aam
fdiv
dec
or
mov
inc
and
ror
mov
mov
push
sub
mov
cmp
clc
je
cmp
jb
mov
jne
adc
call
fwait
pop
mov
jmp
mov
dec
inc
inc
adc
inc
push
or
rcr
jmp
cmp
pop
mov
daa
mov
add
adc
out
jnp
mul
(bad)
(bad)
add
loopne
sub
xor
cdq
mov
fsub
jb
ds
push
mov
int3
movs
pop
cmps
je
push
sub
iret
enter
or
xlat
sbb
nop
cdq
and
pop
add
inc
(bad)
scas
ror
js
mov
ficomp
imul
inc
retf
mov
ss
dec
sub
leave
adc
ficomp
pop
xchg
push
jmp
das
aas
and
add
add
lods
dec
xor
sbb
cld
in
popf
addr16
repnz
inc
mov
ins
xor
test
call
lea
push
test
mov
mov
es
adc
jae
lahf
push
inc
adc
sbb
mov
xor
ret
push
jg
daa
loopne
dec
push
and
push
inc
push
or
mov
xlat
push
fsub
aad
dec
mov
mov
in
aad
cmp
push
sbb
jnp
add
stos
mov
jo
ret
mov
iret
leave
push
bound
inc
arpl
cmp
push
push
push
(bad)
fcmovbe
add
push
mov
push
mov
or
ss
clc
adc
xor
or
ins
sub
sub
test
dec
mov
push
lds
enter
adc
push
sbb
int
and
dec
or
xor
push
fcmove
test
addr16
dec
sub
cld
mov
add
pushf
add
or
pushf
ss
and
or
pop
xchg
cmp
ds
add
sti
sbb
je
sub
mov
sbb
ret
mov
das
repnz
fisubr
dec
daa
ja
ins
(bad)
ja
je
or
jb
jmp
mov
dec
dec
jo
or
jle
or
jp
and
add
in
mov
and
push
jmp
push
sahf
sub
add
icebp
or
ret
jge
cmp
inc
out
pop
and
(bad)
das
imul
xchg
xchg
idiv
inc
je
jns
add
aad
daa
xor
mov
xor
sbb
mov
ret
retf
mov
jmp
mov
pop
push
ins
jne
repz
ins
je
pusha
xchg
fwait
adc
ins
mov
or
das
outs
or
push
std
in
and
cmp
xchg
in
mov
or
pop
arpl
bnd
ja
mov
jne
mov
cmps
cmp
sub
or
repz
icebp
dec
es
out
shl
sub
pop
or
imul
shr
sub
xchg
push
and
loop
mov
pop
adc
ss
push
jp
pop
fadd
out
outs
xor
xchg
push
jbe
in
jmp
pop
and
mov
inc
movs
or
cs
popf
or
jb
inc
jno
or
xchg
mov
out
adc
adc
icebp
lea
mov
push
mov
pop
mov
xor
pusha
dec
cmp
int3
jecxz
push
mov
pop
push
ret
jp
xchg
add
nop
push
mov
(bad)
fisub
fs
sbb
dec
cs
test
adc
add
push
lea
jmp
in
add
iret
xor
jmp
aas
mov
loopne
push
xchg
hlt
je
adc
xor
push
dec
pop
inc
movs
test
outs
inc
scas
adc
add
jmp
ret
or
mov
add
cmp
loop
sbb
call
mov
fwait
ror
jg
or
shr
push
push
jp
bound
xlat
aaa
adc
mov
add
neg
inc
xchg
je
push
lea
add
mov
ja
outs
add
lsl
test
xlat
or
bsr
mov
mov
cwde
jg
add
ficomp
pop
pop
pushf
mov
inc
nop
cmp
xchg
call
and
xor
ins
push
or
mov
sti
sar
sub
in
xchg
and
xor
enter
mov
mov
aaa
xor
or
dec
add
jne
dec
jbe
push
fst
push
jp
dec
or
out
adc
inc
imul
fs
jne
shl
mov
pusha
and
fs
lea
adc
and
push
arpl
syscall
xor
mov
push
or
mov
stc
or
and
sub
xchg
mov
mov
sbb
mov
sub
add
add
(bad)
fiadd
jbe
repnz
cwde
js
mov
nop
inc
add
inc
add
or
cmps
fs
inc
push
ror
and
mov
adc
push
addr16
ins
inc
cmps
add
pop
add
hlt
bound
cmp
into
jno
sbb
or
sbb
add
and
mov
dec
or
add
add
lods
(bad)
mov
push
cs
int3
xlat
seto
adc
loopne
aam
jne
push
lea
cwde
hlt
push
imul
pop
dec
mov
push
xchg
outs
scas
mov
les
out
adc
fwait
sbb
je
and
and
pop
jmp
sbb
(bad)
mov
bound
xchg
push
adc
mov
add
adc
ins
outs
sub
pop
nop
inc
ret
sbb
push
pop
ret
or
sbb
adc
sbb
or
or
add
bound
movs
jb
sub
add
maskmovq
mul
add
dec
jne
pop
adc
inc
ror
pop
dec
(bad)
cmp
sti
ss
jb
push
add
xor
(bad)
ret
(bad)
cmp
clc
xor
sbb
xchg
or
and
sbb
in
lods
xchg
adc
mov
adc
inc
add
daa
push
cli
xor
mov
loopne
jb
sbb
rol
sbb
and
or
or
mov
sub
loopne
daa
cmp
mov
inc
adc
or
outs
add
sub
mov
ds
inc
mov
jle
mov
or
call
sbb
adc
(bad)
shl
repnz
in
push
jp
arpl
test
ja
arpl
jge
stos
add
lea
sub
test
or
adc
scas
es
mov
aad
inc
cmp
jno
fiadd
shr
mov
cwde
repnz
or
nop
stos
or
push
add
and
clc
int3
jb
mov
in
cmp
xchg
and
add
push
inc
mov
mov
or
fcomi
add
or
shr
inc
mov
sub
cmp
jae
sti
imul
lock
gs
add
test
jne
(bad)
add
shl
das
inc
sub
stos
mov
out
and
add
adc
not
sub
or
pop
(bad)
cmp
fild
pop
clc
xchg
clc
jne
daa
mov
inc
jnp
fdiv
and
sub
sbb
clc
(bad)
clc
add
mov
popf
or
fcom
lea
bnd
add
inc
sub
jno
push
push
aaa
push
adc
mov
xchg
pop
pop
fstp
mov
mov
jne
test
arpl
jo
into
lahf
adc
ss
push
imul
(bad)
cmp
and
dec
mov
add
and
and
popa
fld
pop
and
clc
or
push
sub
cmp
je
mov
ret
call
mov
push
sub
push
push
push
sub
inc
sbb
daa
ret
push
ins
ins
(bad)
push
push
mov
call
jmp
and
push
push
sbb
fnstcw
sub
call
pop
es
ror
pop
mov
mov
mov
icebp
mov
sbb
mov
adc
cmps
aad
call
lds
and
pop
or
jmp
sti
mov
mov
pop
jle
push
cmp
xor
xor
cmp
aas
add
mov
sub
ins
sbb
fwait
mov
xchg
mov
jo
add
and
ss
rol
push
sub
jp
outs
xchg
sbb
jne
push
cmps
sbb
or
or
xor
out
xor
lea
add
xchg
push
adc
push
push
js
and
sub
push
movs
add
dec
and
cmps
retf
adc
nop
mov
fs
data16
jno
and
movs
inc
pushf
push
adc
push
lods
or
js
and
cmp
xor
pop
ror
(bad)
hlt
je
cmps
icebp
xchg
push
scas
movs
add
mov
dec
mov
ret
pop
push
xlat
inc
pop
jge
add
push
aam
ret
lock
ret
mov
mov
pop
sbb
adc
add
or
cmp
jg
mov
xchg
out
adc
lea
inc
cmps
push
movmskps
bound
adc
sbb
addr16
aad
test
cdq
cmps
cld
dec
sbb
(bad)
fs
nop
(bad)
or
xlat
adc
or
pop
add
or
test
mov
and
cmp
(bad)
pop
aam
mov
mov
les
aam
sub
pop
outs
mov
ins
and
movs
test
cli
in
mov
jne
mov
add
dec
cmc
into
(bad)
jae
mov
loope
dec
shl
push
jne
sub
and
or
add
push
add
sbb
das
cmp
je
add
pusha
mov
and
and
scas
mov
xor
ficomp
add
add
mov
les
push
loope
xor
xor
xor
in
mov
cmp
mov
push
sar
sub
cdq
movs
gs
lds
adc
mov
xor
mov
jmp
cmps
cs
arpl
or
adc
and
push
add
(bad)
sahf
add
call
jecxz
sbb
icebp
cmp
(bad)
jl
loop
pop
sbb
pusha
jl
ss
xor
out
mov
ins
loope
aad
popf
cld
ss
pop
inc
add
add
icebp
xchg
jmp
mov
push
dec
loop
add
out
and
mov
jbe
sub
nop
shl
jp
pushf
pop
in
dec
add
rol
call
iret
sub
mov
inc
and
push
push
or
jno
repnz
add
scas
xchg
leave
daa
mov
xchg
xchg
mov
icebp
dec
push
and
clc
push
and
or
leave
ror
add
or
lock
xlat
and
ret
cmp
mov
popa
movs
cmp
and
fbstp
sub
mov
mov
hlt
jae
or
clc
(bad)
rol
sbb
jne
rol
mov
push
push
das
mov
loop
pop
dec
add
pop
fdiv
adc
ins
mov
jle
movs
adc
sbb
punpcklwd
(bad)
pop
aas
sbb
jge
enter
adc
cmp
lock
push
and
rcl
add
sti
xor
adc
pop
add
sbb
es
add
cmp
fnstsw
mov
fstp
adc
and
dec
and
mov
aas
jbe
push
xor
ja
aad
retf
lahf
adc
or
push
ja
js
or
mov
out
jecxz
mov
xchg
pusha
popa
push
cmc
mov
add
and
cld
and
shr
icebp
retf
and
or
and
adc
in
mov
outs
push
push
adc
fdivr
push
call
sbb
and
inc
outs
or
popa
ds
test
jmp
sbb
xchg
gs
cmp
adc
push
sbb
sbb
sub
call
jge
sbb
sub
repnz
rol
scas
mov
(bad)
or
mov
jo
adc
cld
ins
ins
pop
dec
stc
retf
jae
xor
test
(bad)
cmp
je
enter
sar
inc
mov
cmp
jl
cmp
cmp
jl
cmp
aas
cmp
push
jg
call
(bad)
mov
rdtsc
inc
inc
cmp
jge
je
xor
sbb
fsubr
adc
xor
and
push
inc
sub
data16
sbb
inc
clc
cmp
mov
fmul
inc
inc
or
inc
jl
jno
(bad)
xchg
aas
inc
jmp
jmp
enter
stc
clc
jmp
add
pmaxub
add
jmp
sub
sti
push
adc
loope
das
jo
add
iret
fs
dec
sub
xor
and
fild
retf
jnp
and
(bad)
jns
or
mov
cwde
fldenv
iret
adc
lock
popf
and
(bad)
je
adc
(bad)
repz
bndstx
add
jecxz
mov
test
clc
mov
pop
xchg
shr
retf
imul
aad
repz
sub
and
arpl
add
add
jecxz
rol
je
test
add
add
shr
add
out
mov
fcom
lea
or
pop
jb
push
pop
adc
lock
cwde
add
add
sbb
sbb
(bad)
std
enter
jb
mov
fs
clc
adc
cmp
or
loope
push
xlat
inc
and
adc
sbb
add
cmp
iret
add
lods
add
lods
push
cmps
or
push
cdq
ror
xor
scas
mov
jbe
inc
daa
push
pop
adc
and
call
js
fadd
ins
loopne
jb
mov
into
mov
sbb
fs
or
push
aad
jl
xchg
xlat
int3
inc
test
and
mov
sub
mov
jo
inc
add
iret
mov
enter
mov
or
mov
into
mov
xchg
aas
test
mov
cmp
out
pusha
or
or
aaa
pop
xor
or
out
dec
retf
or
nop
push
pusha
dec
or
mov
nop
mov
or
out
icebp
mov
jno
xchg
je
add
jbe
loop
or
jo
jns
dec
and
jns
outs
rol
cwde
nop
enter
and
pop
je
add
mov
call
sbb
add
adc
dec
js
fld
cmc
adc
add
loop
lods
jo
js
(bad)
mov
mov
mov
jp
into
mov
mov
cmps
jne
cld
push
xor
loope
ss
loope
mov
mov
leave
jnp
dec
push
(bad)
jae
inc
lods
pop
jne
lea
in
add
iret
les
je
sbb
sbb
call
or
push
sub
xlat
inc
add
push
lock
ds
push
adc
sbb
xor
add
jno
sub
dec
loopne
add
push
aas
int3
mov
add
nop
cmp
dec
add
pop
loope
nop
jno
inc
pop
pop
push
mov
add
add
adc
pop
sar
add
sub
shr
repnz
mov
pop
push
stos
xchg
repnz
cmp
ins
and
xor
add
add
mov
fmul
sbb
addr16
pop
sbb
(bad)
arpl
pop
lea
lea
lods
ss
xchg
add
fwait
inc
sahf
clc
sub
(bad)
mov
or
inc
pop
adc
fdiv
push
pop
push
jo
pop
mov
das
mov
cli
sub
clc
imul
mov
in
add
mov
pop
add
add
xor
not
fnstsw
add
mul
stos
push
dec
imul
data16
push
adc
shl
add
jecxz
sbb
es
and
fisubr
cmp
test
inc
and
rol
cmp
stc
out
mov
jo
jo
das
or
jle
adc
sub
shl
and
xor
stc
cld
and
ss
sub
xor
sub
push
jecxz
push
dec
arpl
imul
mov
mov
sub
sbb
leave
(bad)
aad
pop
pop
ins
push
imul
cmp
pop
inc
or
test
call
dec
inc
adc
xchg
jae
pop
shl
or
or
mov
(bad)
dec
div
dec
loopne
xchg
test
push
daa
pop
xchg
adc
xchg
and
lds
pop
xchg
lock
and
sbb
mov
push
or
dec
rol
aam
inc
or
push
sbb
mov
xor
sub
adc
adc
add
pusha
adc
xor
add
lds
jbe
mov
ins
and
in
retf
pop
xlat
rol
call
aad
xor
in
fdiv
daa
dec
sbb
loopne
rcr
sub
repnz
push
inc
push
push
push
adc
cmp
mov
xchg
jo
lahf
dec
push
or
dec
fidivr
push
and
aam
fistp
sbb
daa
xor
add
cmp
popa
and
jbe
inc
jle
movs
popa
test
sub
adc
xor
inc
add
cmp
pop
adc
(bad)
in
bound
mov
adc
cdq
push
jl
enter
sub
inc
lods
test
add
(bad)
data16
scas
add
paddusw
int3
inc
add
push
fs
cmps
pop
sbb
and
icebp
inc
cmp
cmp
fild
push
jns
jmp
push
xor
loopne
push
push
sbb
lahf
adc
mov
add
push
xlat
pop
das
out
adc
in
stos
arpl
jo
dec
imul
cmp
ret
xor
or
and
or
iret
inc
and
and
xchg
(bad)
push
push
push
inc
xor
aad
push
or
xchg
and
xlat
pop
enter
jmp
mov
cmps
or
sbb
ret
or
sar
fnstsw
inc
rcr
dec
and
cmp
add
mov
sub
test
fcom
and
sbb
mov
mov
fdivr
and
aam
(bad)
outs
dec
ficomp
adc
enter
ret
outs
fld
fst
and
stos
icebp
jbe
in
and
nop
loope
adc
sbb
xchg
xor
pushf
or
pushf
xor
add
clc
add
mov
mov
stos
adc
push
loopne
fld
(bad)
call
xchg
cdq
test
inc
fimul
sub
mov
mov
mov
and
adc
fst
ss
repz
cmp
stc
nop
and
rol
inc
and
and
mov
jo
add
adc
cmp
xor
movs
inc
and
cli
dec
add
and
jmp
cmp
not
pop
repz
pop
and
add
es
push
out
pusha
push
imul
push
adc
dec
or
push
popa
sahf
rol
inc
push
stos
jl
loopne
sbb
in
jb
jb
adc
add
xor
loopne
cmp
mov
mov
sub
sbb
push
sub
ficomp
stos
(bad)
jne
xor
pop
dec
fdivr
scas
adc
imul
inc
lods
add
sbb
sub
add
out
push
push
push
mov
dec
arpl
pop
sbb
cmp
and
mov
xchg
test
push
mov
test
cmp
jle
idiv
sub
in
mov
jl
pop
jl
dec
push
jne
inc
and
add
aad
mov
and
jns
pop
fcom
cmp
dec
and
xor
push
cmp
repnz
pop
jmp
fisub
shl
mov
js
aaa
nop
ror
or
push
add
cld
pop
add
lea
aad
loopne
push
aas
mov
ins
push
push
or
shl
clc
daa
mov
mov
or
lods
fs
es
add
loope
push
and
call
pop
mov
mov
iret
test
fnstsw
and
test
out
fdivr
(bad)
fdivr
and
push
sbb
movs
pop
xchg
add
add
cmp
mov
jecxz
bound
fdivr
inc
stos
sub
in
popa
ja
add
xchg
dec
jne
dec
lock
sbb
scas
inc
outs
adc
mov
sbb
or
imul
inc
(bad)
dec
(bad)
fisttp
cmp
stos
outs
imul
inc
imul
mov
ss
xor
mov
(bad)
mov
test
add
sbb
jb
rcr
push
lds
dec
fstp
xor
inc
pop
sbb
sbb
stc
add
int3
cmp
or
(bad)
jmp
sub
inc
cmp
les
loope
retf
jnp
push
adc
dec
into
push
push
and
push
aam
in
xchg
pop
add
(bad)
xor
sbb
rol
test
sbb
dec
add
imul
push
add
push
cmps
jp
ror
(bad)
cmps
mov
jmp
push
repz
mov
outs
loopne
inc
ficomp
sbb
mov
or
lods
cmp
inc
jecxz
leave
mov
and
push
lock
mov
mov
xor
or
mov
dec
nop
xor
dec
daa
(bad)
mov
sub
jo
adc
inc
mov
dec
mov
mov
popa
fdiv
js
adc
int
jo
popf
push
shl
dec
jno
aas
cmp
jne
jmp
jp
sbb
call
inc
xor
movs
loope
pop
clc
ret
push
push
in
mov
add
sub
cmps
dec
or
(bad)
pop
jno
jge
sub
loope
aam
push
jl
mov
adc
pop
sub
fmul
rcl
xor
and
and
mov
pop
and
push
sub
fisub
push
add
inc
and
jmp
lahf
rol
xor
imul
push
pop
push
xlat
arpl
jl
or
mov
sar
hlt
cmp
dec
aaa
inc
mov
cmp
mov
and
je
pop
(bad)
ror
jg
clc
sub
lods
push
pop
add
mov
inc
sub
dec
push
mov
inc
sub
ds
or
fdecstp
or
push
leave
xchg
das
daa
les
dec
or
xchg
cdq
push
iret
call
push
jb
jae
lods
mov
push
mov
mov
push
(bad)
sbb
jl
push
jne
pushf
add
xor
cmp
jae
iret
or
xor
and
(bad)
sbb
sbb
pop
mov
mov
sbb
sbb
xor
mov
or
or
add
push
push
and
push
dec
fdivrp
fs
xchg
cmp
cs
xor
fcom
iret
js
out
sbb
mov
(bad)
xor
jne
push
mov
ret
dec
adc
add
test
or
rcr
adc
push
inc
jnp
out
jecxz
jmp
ret
fisttp
xchg
repz
sub
add
xor
shl
inc
push
mov
pop
add
mov
imul
push
and
sub
or
mov
leave
shl
dec
push
add
sub
adc
inc
pop
mov
enter
shr
pop
push
add
push
ss
fsubr
(bad)
push
and
add
add
adc
xor
idiv
inc
sar
sar
popf
pop
push
add
inc
pop
setne
xor
(bad)
int3
sar
cmp
test
and
bound
mov
daa
push
loopne
or
sbb
or
iret
(bad)
das
stos
mov
fldcw
in
in
ret
iret
fwait
pushf
in
(bad)
hlt
in
mov
aam
pop
mov
push
shr
out
ror
and
add
xor
idiv
adc
in
test
mov
rol
aas
xor
add
xor
fisttp
jo
or
xchg
rcr
nop
jo
jns
loope
dec
in
jo
clc
lea
xchg
or
pop
add
inc
add
or
inc
jge
and
xchg
adc
jmp
sub
xchg
ror
les
popf
scas
mov
cmp
test
lock
sub
cmp
out
inc
loopne
sub
icebp
inc
or
dec
loopne
pop
lods
add
push
and
inc
add
lahf
push
js
scas
arpl
inc
loopne
inc
add
shl
pop
cld
push
and
add
push
jle
pop
and
dec
jnp
xor
pop
push
adc
frstor
cmp
dec
push
fiadd
jne
add
jmp
cwde
aam
das
fwait
cmp
push
adc
push
adc
jmp
mov
mov
and
push
test
xor
dec
out
out
jp
loopne
mov
fistp
push
js
mov
adc
mov
pop
or
dec
xor
adc
xor
mov
sbb
sbb
inc
call
int3
and
mov
xlat
inc
dec
and
popa
lea
pop
or
adc
arpl
arpl
out
test
ret
jle
inc
xor
xchg
xor
cmp
and
clc
xchg
ror
popa
push
mov
pop
jmp
push
pop
adc
ins
sbb
and
mov
pop
ins
dec
push
jmp
ret
pop
and
add
dec
ret
add
xchg
rol
add
ror
cmp
(bad)
fisttp
jne
es
int3
push
xor
inc
fcom
sub
cmp
clc
mov
outs
inc
cmp
sub
mov
(bad)
and
pop
pop
push
cmp
inc
or
inc
push
or
idiv
ss
out
arpl
call
add
or
addr16
and
and
ror
pusha
push
dec
push
mov
and
mov
add
xchg
xchg
xor
pop
das
lock
mov
hlt
push
and
in
popa
cmp
pop
adc
mov
or
fimul
xor
or
xor
(bad)
cmp
add
sub
sbb
mov
mov
shl
rcl
dec
push
push
sub
add
(bad)
mov
les
push
jecxz
pop
jmp
inc
das
cmp
fucomip
inc
ret
push
(bad)
in
mov
or
test
or
das
cmp
pop
add
je
sub
inc
retf
out
sbb
add
add
lods
push
push
nop
in
popa
mov
adc
sbb
lea
add
mov
add
ss
xlat
mov
pop
ins
mov
int3
aaa
push
add
sub
xor
sbb
sub
cmp
jnp
jmp
push
jnp
ret
cmp
jne
push
fld
xor
adc
jmp
push
pop
mov
or
mov
bound
invd
fst
adc
cmc
inc
js
jns
and
add
int
add
inc
or
or
inc
add
mov
push
loop
test
xor
(bad)
sbb
dec
adc
das
js
adc
or
call
cmps
pop
ret
add
adc
cmc
xchg
xchg
jne
mov
iret
and
sbb
sbb
adc
fsubr
jnp
and
add
pop
sub
rcl
dec
dec
xchg
and
or
jmp
test
es
or
dec
add
xchg
jne
inc
out
sbb
daa
sbb
push
push
in
or
pop
mov
add
push
jmp
sbb
adc
ins
inc
test
nop
mov
call
push
and
jp
retf
gs
pop
or
or
or
mov
xor
adc
arpl
jge
jo
mov
pop
adc
lds
sahf
jne
pop
push
inc
jae
imul
sbb
dec
push
ret
scas
and
retf
(bad)
mov
pusha
push
pusha
push
and
ds
adc
pop
sub
fs
pop
data16
sbb
cld
inc
push
sub
add
adc
or
(bad)
(bad)
cmc
test
sbb
adc
push
mov
std
ret
not
add
clc
je
and
dec
add
jecxz
scas
and
imul
or
and
sbb
ja
adc
add
sub
inc
or
cmp
or
cmps
mov
in
mov
sbb
lock
push
out
and
xor
mov
sti
dec
mov
out
xor
cmp
fsub
jno
and
hlt
cmc
xor
push
retf
xor
xchg
add
pop
mov
xor
cmp
jb
rcl
ror
loopne
add
fcomp
inc
ja
sub
push
sub
ret
jns
dec
pushf
xor
shl
adc
cmp
or
jno
mov
fimul
out
ja
pop
mov
sti
or
dec
int3
shr
dec
rcr
leave
ret
inc
add
sub
cmp
and
int3
adc
rol
je
mov
aaa
mov
inc
arpl
ins
lods
arpl
and
bound
inc
inc
sbb
clc
mov
add
cmp
add
pusha
add
outs
or
pop
sub
push
mov
loopne
xor
jae
ins
fsub
sub
or
and
sbb
push
mov
add
jmp
and
mov
or
pop
mov
icebp
xor
xor
shl
out
int3
hlt
and
and
add
repz
or
ja
ja
ja
mov
mov
cmp
cmp
lods
and
cmp
into
test
cmp
push
or
cwde
and
push
loopne
sbb
data16
inc
enter
pop
inc
js
xchg
or
test
aaa
xor
and
bswap
or
adc
ud0
push
test
cmp
or
fmul
icebp
and
pop
jnp
jl
dec
jmp
xchg
add
lods
add
jmp
add
dec
fwait
mov
inc
aam
dec
and
add
xor
rol
scas
adc
pop
mov
add
push
mov
add
test
ret
dec
adc
mov
aad
sbb
sub
sub
lea
jge
ins
inc
dec
jmp
and
out
cmp
sub
lahf
pop
cmp
scas
mov
dec
add
rol
sbb
xor
repnz
dec
add
inc
cs
xchg
(bad)
(bad)
mov
xor
inc
inc
js
jne
sahf
push
aad
cmovo
daa
adc
push
mov
cvtpi2ps
ins
test
xchg
loopne
add
adc
jecxz
adc
or
adc
add
hlt
clc
pop
retf
adc
pushf
push
(bad)
aam
pop
and
adc
inc
xor
mov
add
add
shr
or
dec
pusha
sub
pop
sub
les
cmp
mov
rcl
xchg
dec
and
pop
daa
or
das
sub
and
cmp
or
dec
in
inc
outs
mov
xchg
sub
je
aas
add
dec
xchg
test
aaa
xor
xor
cmp
test
mov
sub
jmp
adc
ret
jge
add
and
popa
push
xchg
or
jo
aaa
pop
imul
jo
xchg
mov
or
mov
int3
je
pop
or
fst
mov
add
out
push
fwait
mov
dec
call
ror
add
lods
add
std
jmp
or
sti
daa
push
cmp
test
movs
sub
jg
mov
loope
add
mov
add
mov
(bad)
or
or
frstor
mov
sti
push
push
je
mov
ja
or
xor
mov
sub
sbb
mov
ins
inc
or
adc
xchg
or
adc
xchg
dec
xlat
ret
or
lea
fld
movs
or
stc
es
sub
cmp
mov
dec
test
hlt
js
sti
mov
or
cmp
or
das
inc
(bad)
pop
and
xlat
or
fisubr
je
lea
push
or
jl
and
xor
ins
jbe
stos
or
add
gs
adc
jmp
into
and
xchg
les
daa
and
into
mov
or
and
sbb
push
and
inc
fmul
xchg
mov
or
out
add
pop
jl
push
adc
jle
adc
ja
cwde
(bad)
adc
jmp
xrstor
jne
ret
add
or
add
sbb
dec
loop
and
fld
mov
jg
xchg
test
add
inc
push
jmp
mov
(bad)
xor
rcl
sbb
ja
add
push
lock
call
push
test
outs
xor
mov
and
popf
loop
jmp
je
and
add
fisub
inc
push
dec
daa
add
addr16
mov
ret
es
leave
(bad)
and
gs
xlat
adc
inc
mov
jne
sbb
test
xor
popf
add
jne
push
adc
ret
call
add
pop
and
adc
sub
inc
push
pop
or
inc
mov
and
mov
jmp
or
out
dec
or
xchg
jo
jge
sub
push
imul
je
ja
sbb
sbb
repz
push
cli
mov
xor
sbb
clc
mov
push
cs
xor
push
bts
and
jne
inc
(bad)
xlat
cmp
dec
add
mov
cmps
sbb
out
cwde
fwait
and
fst
lods
or
ins
rcl
imul
pop
test
call
jge
jbe
inc
mov
jns
adc
jb
mov
movs
jne
or
hlt
or
dec
call
outs
and
adc
repnz
or
mov
adc
(bad)
jg
lock
mov
ins
popf
int3
mov
rcr
fwait
or
ja
push
fisttp
inc
test
fnstsw
dec
mov
inc
lea
sbb
jmp
sbb
and
xchg
and
sub
pop
jmp
repz
jno
pusha
aad
enter
ret
jge
lea
jne
pop
sub
or
pop
push
xor
aaa
es
cmp
push
je
pop
in
or
sub
stos
movs
inc
and
sbb
retf
adc
fnstcw
or
out
jmp
loope
das
lods
fdivr
push
xchg
mov
test
push
imul
mov
dec
inc
cmps
mov
popa
jb
mov
mov
jno
and
pusha
imul
hlt
and
aaa
adc
cmp
pop
jmp
sub
js
adc
les
xor
push
call
xor
push
add
cmp
jo
or
mov
movs
cmp
mov
jl
add
inc
aam
push
or
jnp
pop
lock
inc
mov
or
lea
sub
icebp
jmp
call
sbb
sub
aam
or
pop
xor
hlt
or
shr
adc
push
adc
scas
jge
jge
movs
adc
or
and
sub
aas
in
mov
push
mov
push
xchg
pusha
jle
pop
movs
in
lods
inc
inc
jl
sbb
mov
pop
sbb
add
or
pshufw
sub
adc
push
add
add
rol
loope
or
lds
and
or
pop
dec
pop
dec
das
(bad)
cmp
inc
or
or
or
dec
cdq
xchg
imul
shl
or
fist
(bad)
pop
mov
xor
lods
cvtdq2ps
shufps
add
mov
aad
push
cmp
xchg
test
push
sub
inc
in
sbb
add
inc
rol
xchg
inc
rcl
pusha
add
in
dec
push
adc
cmps
mov
pop
into
cmps
outs
lock
sbb
mov
sbb
mov
ins
sub
xor
jp
cdq
loopne
retf
fwait
push
in
mov
add
pop
cld
lods
clc
(bad)
xchg
add
inc
mov
call
xchg
imul
pop
(bad)
push
jo
(bad)
mov
ror
or
or
lds
dec
mov
adc
jge
mov
add
mov
ret
pop
inc
mov
fwait
mov
iret
inc
or
fsubr
fstp
and
or
pop
adc
ret
sub
mov
shl
and
ret
es
pop
dec
aaa
xchg
xor
xor
rol
mov
inc
fsub
ret
popa
es
mov
je
xchg
in
lahf
lock
iret
mov
repz
test
xchg
fild
fimul
nop
mov
jmp
add
sub
pop
mov
cwde
pop
pop
pop
stos
int3
pop
or
pop
add
lock
cmp
out
adc
inc
mov
or
out
mov
je
inc
rcr
add
xor
cmps
lea
ss
mov
out
inc
pop
test
call
xchg
push
mov
inc
and
or
test
jne
(bad)
cmps
or
loopne
push
das
mov
cmp
pop
or
je
or
and
dec
leave
cmp
jne
xor
adc
jne
ja
jg
pop
sahf
fbld
sub
lea
add
cmp
jle
or
inc
lods
je
aas
xchg
test
shl
push
lods
dec
add
and
lods
mov
imul
std
test
test
out
addr16
mov
fcom
or
iret
and
jnp
pushf
sub
mov
mov
push
fmulp
movs
push
mov
pop
add
(bad)
jmp
adc
push
sub
(bad)
data16
sahf
mov
adc
push
xchg
xchg
daa
xchg
movs
(bad)
outs
mov
add
xbegin
ja
pushf
pop
stos
mov
mov
inc
mov
cs
dec
sar
xchg
fisubr
xor
adc
popf
fimul
int3
mov
mov
sub
xchg
call
repnz
cmovno
pop
nop
push
mov
mov
gs
std
cs
push
pop
jo
pop
mov
pop
outs
push
mov
sbb
stos
int
push
imul
pop
(bad)
mov
add
mov
sub
mov
pop
sub
(bad)
xor
pop
sar
sub
or
or
add
xchg
pop
add
mov
and
sbb
int3
mov
lods
cdq
dec
sar
push
mov
cmp
aam
leave
ror
mov
push
mov
inc
mov
ror
adc
jle
inc
push
pop
xor
xchg
add
cmp
xchg
fild
pop
lock
sbb
add
(bad)
test
sbb
mov
dec
mov
pop
call
mov
add
stc
cmc
retf
push
loope
ins
and
mov
xchg
(bad)
mov
ret
jne
sti
ds
mov
ja
jo
sbb
adc
fwait
push
add
inc
arpl
pop
or
or
inc
push
and
sbb
and
(bad)
push
pop
pop
sbb
inc
sub
and
xlat
push
inc
ret
int3
mov
repnz
ror
push
jle
dec
dec
repnz
ret
outs
adc
arpl
pusha
push
inc
pop
ror
imul
cwde
adc
daa
or
mov
mov
push
mov
rcl
fidivr
sub
fdiv
es
and
sub
pop
repnz
or
mov
movs
cmp
mov
add
mov
daa
or
cmp
sub
dec
jno
(bad)
ror
dec
mov
or
mov
or
scas
add
jbe
mov
xor
push
fmul
push
out
sbb
pop
scas
inc
mov
push
out
lock
jns
nop
test
xchg
jmp
xor
test
inc
arpl
add
pop
dec
jnp
sub
push
xor
push
xchg
leave
add
ins
ja
enter
dec
lock
mov
push
nop
nop
mov
push
adc
add
dec
dec
pop
mov
mov
mov
mov
sub
push
and
ins
adc
inc
and
inc
pusha
mov
inc
mov
mov
in
fidiv
push
xchg
push
pop
or
or
or
aaa
call
mov
add
mov
lea
daa
aas
lea
and
shl
ror
adc
or
xchg
inc
xor
shr
xor
imul
sbb
sar
nop
xchg
enter
adc
lods
ins
sbb
(bad)
daa
nop
xchg
mov
fsub
pop
ror
nop
nop
mov
sub
daa
push
scas
pop
rep
and
mov
test
or
xchg
xchg
mov
sbb
xlat
push
(bad)
add
daa
sub
sbb
cmp
out
mov
and
clc
aas
enter
jg
xchg
out
mov
cmp
xchg
sar
xor
out
lea
sahf
adc
xchg
or
pushf
adc
sub
or
add
fldenv
in
fisub
mov
sbb
shr
icebp
mov
test
xor
rcr
sbb
pusha
xchg
neg
mov
lock
(bad)
sbb
xchg
push
sbb
xchg
jg
daa
mov
push
sub
inc
cmp
pop
mov
iret
outs
mov
or
cwde
xor
and
sbb
jmp
adc
cwde
pop
dec
cmp
inc
pop
fisub
test
add
out
bound
adc
adc
mov
test
sar
fwait
daa
movs
stos
xlat
pop
sbb
add
lea
mov
stos
push
or
xor
pushf
mov
jo
push
jns
in
in
xor
(bad)
pop
popf
sbb
mov
das
loopne
cmp
dec
inc
sahf
add
call
add
cmp
add
mov
js
mov
xchg
push
test
shr
call
and
inc
imul
imul
imul
mov
pop
cmps
imul
cs
or
mov
mov
shl
in
add
imul
cmps
imul
imul
imul
cmps
imul
mov
out
add
dec
shl
outs
pop
inc
sub
shl
add
test
shr
cmps
imul
cmps
imul
imul
dec
shl
stos
sahf
nop
adc
dec
shl
dec
xor
cmps
pop
ss
sbb
hlt
cmps
fmul
call
mov
imul
xor
mov
movs
call
shl
ins
push
xor
shl
cmp
sbb
imul
mov
call
stos
xchg
add
or
add
jne
sbb
subps
jb
or
imul
dec
shl
mov
shl
cs
imul
loopne
enter
shl
xchg
test
fnstenv
and
mov
jns
data16
(bad)
scas
pop
les
pushf
mov
ds
cmps
imul
jmp
mov
xor
pop
inc
xor
adc
xor
xor
push
retf
shl
push
retf
cmps
pop
cmp
xchg
dec
shl
call
cmps
imul
loop
xor
rcl
shl
cmp
daa
and
pop
mov
push
jl
push
lods
(bad)
mov
cmps
imul
cmps
imul
push
inc
cmp
sbb
int3
mov
scas
pmuludq
scas
fimul
and
pop
cmp
dec
adc
push
bsf
ss
shl
cmp
or
mov
int
pop
out
mov
add
(bad)
push
jecxz
jl
stos
push
scas
or
in
mov
fs
lods
fucomi
inc
loope
or
pop
rol
nop
ret
cs
sbb
out
sti
ds
mov
pop
outs
jo
sbb
pop
and
add
push
pop
fcmovu
call
pop
lahf
pop
pop
mov
dec
daa
data16
sub
int
cdq
outs
adc
clc
fild
sbb
fwait
mov
mov
mov
adc
pop
shr
pop
dec
push
scas
dec
cmp
lea
sbb
and
cs
add
pop
nop
sbb
punpcklwd
ss
fbstp
and
jb
mov
xchg
loop
sbb
or
repnz
jae
mov
das
jmp
add
xchg
(bad)
mov
mov
imul
aaa
push
xchg
pusha
loopne
in
ins
dec
jnp
push
push
std
movs
out
in
xchg
retf
sub
pop
addr16
ss
neg
loope
xchg
inc
jb
shl
dec
leave
add
sbb
sbb
rcr
push
jmp
outs
inc
jo
add
aas
inc
cmp
psrld
ret
inc
das
inc
adc
(bad)
and
call
sub
pop
add
rol
jg
jg
jb
jbe
gs
popa
addr16
gs
add
cli
jge
pop
cwde
jmp
fnsave
push
or
inc
cmp
or
mov
inc
cmp
push
and
push
push
jb
lock
jo
push
loope
loopne
fild
in
jo
xchg
push
jns
imul
mov
(bad)
jp
imul
outs
cmp
sbb
inc
jge
pop
jg
ins
fs
popa
jb
je
femms
call
add
ds
lods
push
add
imul
int
daa
mov
mov
ja
push
ins
pop
push
pop
loopne
cwde
or
adc
cs
push
jo
cmp
cmp
(bad)
shl
jno
les
jb
inc
pop
mov
enter
cmp
outs
addr16
inc
inc
inc
imul
inc
sbb
add
jecxz
rcr
xchg
jp
push
dec
mov
ins
pop
fdiv
das
add
shl
imul
das
pop
pop
leave
in
jnp
add
mov
push
and
stos
(bad)
fidivr
jecxz
int3
ret
scas
test
inc
imul
jbe
je
stc
jb
sub
adc
lock
gs
jbe
dec
push
and
outs
jae
gs
popw
ja
lock
push
ins
neg
push
and
fucomip
sbb
js
out
mov
and
xor
push
in
cmp
jecxz
push
(bad)
(bad)
lock
outs
fs
cwde
dec
dec
mov
ins
pop
das
inc
push
push
inc
cmp
pop
push
push
mov
or
inc
enter
enter
xor
mov
nop
inc
sub
and
add
add
sub
mov
dec
xor
in
(bad)
cmp
mov
mov
sbb
adc
pusha
or
sbb
push
mov
sbb
shr
sbb
and
add
xchg
cmp
or
mov
pop
push
call
mov
pop
pop
pop
add
add
sub
add
fwait
rcl
and
bound
inc
data16
ins
fs
xor
xor
mov
popa
daa
and
jae
inc
outs
outs
je
ins
mov
popa
jb
es
inc
dec
inc
jb
ins
and
sbb
sub
jb
in
scas
gs
mov
gs
and
outs
mov
lahf
lock
outs
inc
inc
outs
jne
inc
imul
(bad)
or
ins
push
outs
imul
daa
push
arpl
scas
mov
ja
push
jns
je
dec
adc
inc
push
push
inc
push
xor
xorps
dec
inc
pop
add
jnp
neg
jge
ins
pop
inc
pop
addr16
icebp
sbb
stos
data16
jae
push
jg
js
jb
add
pushf
inc
dec
inc
mov
add
imul
or
pop
dec
inc
inc
fimul
lock
sbb
pop
jae
js
pop
jg
ror
dec
sub
inc
dec
dec
idiv
stos
or
xor
vmulsd
out
ror
js
sets
in
dec
out
ins
shl
out
inc
pop
or
or
call
movs
fucomp
mov
add
dec
push
repz
inc
sbb
fcomp
mov
push
iret
and
ins
fsubr
js
call
inc
cs
aam
or
imul
inc
xchg
add
dec
adc
add
sub
and
or
pop
jmp
xchg
mov
push
iret
push
popa
retf
out
ror
adc
(bad)
cwde
dec
inc
ins
and
sar
test
sbb
cs
loopne
cwde
(bad)
jle
adc
push
jae
jb
arpl
and
loopne
je
ror
inc
push
gs
jno
in
jne
push
sub
inc
jmp
clc
ret
cmp
inc
push
dec
push
pop
ss
rcl
mov
dec
mov
call
ins
mov
adc
pop
mov
sub
jns
fwait
cmps
imul
ror
out
dec
in
leave
and
xor
enter
and
sub
sbb
push
retf
lock
imul
out
mov
push
into
test
ss
jmp
cs
mov
pop
cmpxchg
dec
sbb
cmps
cs
cmp
mov
sub
bound
ds
mov
ja
jb
push
and
cmp
add
and
call
bound
dec
outs
je
jne
jo
jb
gs
fsubrp
mov
push
jns
xor
or
cs
imul
out
jo
icebp
shl
mov
push
mov
cmps
sub
popa
push
xor
outs
fisub
cs
fcom
and
push
out
sbb
and
adc
hlt
or
push
push
inc
and
pop
inc
movs
pop
lsl
inc
push
sahf
cs
test
cs
sbb
das
fwait
cmps
pop
mov
push
push
(bad)
ss
dec
shr
push
scas
pop
aaa
jnp
fwait
cmps
imul
jg
xchg
cmp
or
push
rcl
cmp
push
pushf
stos
cmp
pop
shl
push
jo
dec
arpl
jae
js
jns
jge
in
xor
enter
mov
dec
xor
je
push
inc
mov
jl
int
adc
in
mov
pop
(bad)
mov
sbb
into
and
stos
test
in
call
push
adc
shl
aaa
or
xor
xor
sub
cmp
sbb
cmp
push
mov
call
rcl
ds
pop
movs
imul
add
in
inc
test
dec
push
dec
jecxz
push
dec
imul
int
pop
dec
or
call
push
lods
mov
dec
mov
sub
fistp
push
ins
mov
pop
ins
push
push
(bad)
dec
inc
call
cs
retf
pop
pop
or
mov
xchg
jb
shl
add
ins
mov
mul
push
nop
(bad)
mov
xchg
jne
dec
pop
push
mov
fisttp
jg
out
ficom
xor
xchg
pop
cs
jbe
pop
arpl
jns
pop
fistp
inc
fwait
push
scas
push
outs
loop
aam
imul
ds
es
dec
mov
add
pop
and
sub
mov
out
cmps
imul
jnp
mov
das
shl
jecxz
jg
and
call
imul
iret
mov
mov
dec
inc
push
std
xor
imul
cdq
add
dec
iretw
dec
popa
jo
je
push
outs
or
repnz
out
hlt
popf
arpl
outs
jge
push
sub
imul
push
xlat
shld
es
mov
(bad)
pop
in
xchg
rcr
sub
push
cmps
pop
ss
xlat
popf
scas
aam
and
adc
(bad)
jle
fstp
push
push
mov
loopne
(bad)
jg
push
push
dec
inc
inc
dec
pop
push
dec
dec
dec
pop
inc
aaa
dec
dec
dec
rcl
dec
dec
(bad)
scas
adc
add
lock
or
jns
cmp
xchg
mov
mov
in
cs
pop
jecxz
mov
xor
xchg
cmps
mov
cmp
fild
scas
repnz
cmp
not
mov
push
dec
aas
inc
mov
pop
push
popa
je
push
mov
add
pop
sub
sbb
ja
sub
push
not
idiv
and
push
push
inc
add
push
into
mov
in
inc
call
fistp
and
pop
imul
aad
mov
add
in
mov
mov
in
imul
sti
and
or
and
mov
das
inc
outs
jb
popa
pcmpeqb
fist
cs
push
jle
outs
imul
sbb
inc
gs
jb
mov
adc
out
imul
(bad)
stos
mov
sbb
in
ret
jg
xchg
ja
gs
stc
mov
fadd
out
dec
jbe
mov
jns
imul
out
xor
cs
push
cli
es
mov
jb
adc
call
or
mov
adc
jnp
mov
es
sahf
pop
jbe
cdq
cld
ror
out
xor
xor
add
adc
add
push
pop
xor
adc
mov
dec
inc
imul
or
pop
repnz
enter
stc
jge
inc
rcl
fadd
call
xor
xchg
push
rcl
push
or
fwait
cmps
push
xchg
mov
sub
aas
nop
cmp
imul
fisttp
pusha
xor
leave
add
cmp
or
add
adc
jb
push
les
into
test
pop
push
pop
outs
and
icebp
add
inc
dec
push
dec
inc
adc
push
dec
outs
cli
ss
dec
int
popa
(bad)
stc
aaa
jo
outs
adc
outs
ins
pop
push
je
add
mov
jbe
bound
es
dec
int3
fidivr
mov
push
inc
mov
pop
jnp
call
cld
xor
cmp
sahf
arpl
xchg
jb
(bad)
jp
arpl
inc
out
out
loop
dec
inc
cmp
inc
shl
cmp
sub
aaa
add
stc
xor
dec
jo
outs
sti
in
rol
dec
das
inc
jne
cld
push
jns
cmp
addr16
(bad)
xor
xor
loopne
jg
ret
popaw
jne
je
xor
scas
add
aaa
dec
imul
mov
not
(bad)
adc
xchg
mov
sbb
and
sbb
inc
cmps
test
jae
je
push
and
cmp
push
mov
ins
call
push
sbb
shl
test
dec
imul
outs
hlt
imul
jl
mov
dec
mov
push
aaa
rcl
mov
mov
mov
mov
movnti
sbb
cmp
enter
cld
imul
and
push
push
sbb
in
sub
sbb
jo
push
outs
rcr
pop
out
fist
push
jbe
call
js
shr
jo
adc
fs
xchg
mov
xor
push
dec
scas
mov
add
fld
jns
sahf
cmps
xor
jb
test
imul
lock
dec
cmp
cmp
add
dec
and
jns
jnp
outs
add
dec
das
fs
or
dec
pop
inc
jle
or
jle
outs
jbe
js
rcl
dec
std
outs
adc
jmp
sbb
jne
dec
cli
call
test
mov
popa
jb
push
jne
out
out
out
mov
loope
into
mov
in
out
xchg
mov
jbe
mov
pop
jne
mov
xor
mov
jae
push
gs
sbb
fst
fcom
and
(bad)
ja
xchg
pop
dec
inc
ds
xchg
push
outs
mov
lds
leave
in
jbe
push
pop
push
dec
gs
imul
(bad)
push
rol
outs
jbe
(bad)
int
(bad)
lods
push
pushw
das
int3
mov
aaa
pop
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
fadd
dec
push
push
inc
push
push
outs
cdq
add
lock
and
(bad)
sub
jb
cs
adc
push
lods
jge
sbb
dec
dec
inc
sbb
loopne
mov
xor
cmp
sub
pop
sbb
and
ins
jg
sbb
sbb
popa
jo
dec
aaa
lods
icebp
loop
outs
outs
je
or
and
mov
dec
(bad)
ins
outs
ja
jno
sahf
inc
scas
sbb
outs
ss
fs
sbb
jo
push
jbe
js
ja
jb
inc
addr16
arpl
sub
gs
pop
ins
push
mov
mov
mov
dec
adc
adc
xor
out
outs
dec
cmp
arpl
push
test
ja
adc
rcl
aaa
or
rcl
ins
sbb
arpl
das
sbb
pop
sbb
cmp
add
fisubr
fld
ins
adc
xor
cmp
adc
mov
inc
sahf
pop
push
cmp
iret
retf
fidiv
jae
push
xor
popa
mov
add
xchg
jne
push
dec
mov
and
imul
mov
inc
dec
imul
mov
pop
sub
push
adc
test
add
pop
mov
pop
imul
outs
ds
pop
add
jmp
in
pop
mov
jb
ret
and
sahf
lods
out
mov
xor
rol
rol
jmp
in
push
jge
int
stos
add
frstor
sbb
inc
push
in
or
gs
dec
mov
outs
push
xor
data16
imul
xchg
ss
push
inc
jo
inc
bound
scas
ins
aas
cmp
ds
inc
sbb
inc
cmp
xor
pop
adc
(bad)
ins
ja
pop
inc
push
dec
lods
jge
jbe
outs
push
jbe
xchg
xor
shl
(bad)
jo
add
add
and
and
sbb
rol
mov
jo
add
rcr
in
rol
sbb
or
add
sub
and
sbb
add
mov
push
sub
add
add
dec
and
cmp
mov
aaa
dec
push
push
pop
push
and
add
pusha
push
rol
js
or
sub
mov
cdq
pop
add
sbb
cwde
sbb
movs
jne
add
aaa
outs
jge
and
fbstp
ins
fldcw
jne
daa
pop
mov
and
dec
je
les
inc
jne
daa
jg
mov
and
inc
dec
push
dec
dec
inc
add
and
cs
and
push
mov
adc
push
mov
nop
or
sbb
add
idiv
inc
loopne
mov
test
cmovno
(bad)
jmp
dec
dec
dec
push
and
fldcw
mov
pusha
cmps
dec
int
pop
pop
(bad)
and
loop
and
in
(bad)
nop
mov
cmp
or
sub
jl
call
push
fisttp
pushf
mov
mov
sbb
xchg
jmp
adc
mov
mov
mov
mov
pop
add
rol
lahf
cmp
ret
pop
sbb
jg
in
push
iret
(bad)
bound
shl
and
mov
ss
push
(bad)
inc
dec
sbb
scas
sub
(bad)
adc
in
mov
dec
loope
fwait
ror
mov
xadd
mov
adc
das
pusha
clc
mov
mov
lahf
adc
cmp
push
jmp
inc
or
adc
sub
push
enter
add
add
inc
enter
add
and
or
inc
enter
adc
test
or
and
or
xor
inc
adc
inc
enter
adc
and
sbb
inc
enter
in
fimul
mov
xor
add
nop
and
add
or
add
inc
xchg
or
add
fidiv
das
xchg
mov
or
pop
or
daa
pop
inc
xor
sbb
mov
jne
je
loope
add
push
dec
xchg
mov
push
push
or
int
bound
and
add
jns
adc
ss
lock
inc
push
adc
add
test
jg
nop
in
and
inc
xor
jmp
inc
adc
adc
mov
adc
cwde
push
aas
mov
es
lea
ja
push
add
fmul
xchg
add
push
and
push
das
add
add
into
loopne
enter
add
push
pop
xchg
sub
ja
cmp
mov
outs
adc
push
jbe
mov
mov
xchg
mov
lock
add
mov
inc
jnp
addr16
daa
jbe
adc
inc
jno
pop
lock
imul
ret
pop
xchg
mov
pop
push
clc
lahf
xchg
push
sbb
ins
daa
pop
out
jb
mov
push
pop
enter
push
imul
outs
push
pop
shr
shr
xchg
call
imul
lahf
cmp
nop
or
daa
mov
xor
mov
xor
xor
xor
rcr
add
enter
ins
inc
loop
enter
ins
xchg
ins
inc
mov
push
ds
mov
ficom
push
pusha
out
loopne
push
aas
mov
xor
mov
and
pop
lock
fwait
or
or
sbb
or
and
lock
or
pop
lahf
jo
mov
inc
xor
or
mov
xor
clc
xchg
mov
mov
loopne
dec
outs
aas
mov
and
fadd
mov
lock
or
shl
outs
xchg
test
call
push
js
pop
and
cs
pop
add
push
outs
cmp
outs
xor
push
and
in
outs
scas
test
pop
xchg
add
xchg
fsub
adc
push
lahf
add
out
sub
sub
ins
push
sub
jo
test
or
adc
rcl
push
clc
xchg
fdiv
push
add
inc
fwait
xchg
jno
daa
jbe
daa
loopne
bound
loopne
push
dec
stos
jbe
mov
add
ss
imul
js
pusha
dec
cmp
movs
mov
cmp
xchg
shl
psubsb
push
mov
fist
adc
psubusb
lds
inc
or
push
push
jb
scas
mov
fiadd
daa
adc
pop
psubusb
fist
(bad)
lahf
xchg
jae
dec
ins
pop
add
push
sub
enter
pop
jae
jns
jo
jo
mov
test
lods
xchg
add
nop
out
push
scas
enter
sub
clc
pusha
inc
aam
pop
je
pop
fs
(bad)
scas
xor
je
in
repnz
pop
shr
nop
retf
mov
mov
mov
cwde
xchg
or
fs
cwde
sbb
xchg
inc
jne
and
daa
fs
push
sbb
test
jbe
pop
xchg
or
xchg
lahf
sub
jne
jo
pop
enter
and
push
ror
outs
pusha
jbe
mov
fs
js
nop
enter
mov
loopne
test
enter
xor
lock
pop
and
xor
ja
ja
or
dec
ja
pop
daa
in
pop
push
pusha
pop
inc
cmps
cwde
daa
jbe
ja
sub
add
pop
enter
sub
loopne
xchg
ja
jecxz
sbb
js
loopne
repnz
sbb
js
das
nop
daa
fwait
lock
js
pop
cmp
pop
and
mov
outs
ror
add
loopne
pop
scas
cmp
jo
or
scas
and
xchg
pusha
lahf
or
inc
xor
xchg
fadd
iret
mov
inc
shr
mov
daa
addr16
push
mov
adc
pop
loope
repnz
jp
pop
inc
pop
sbb
mov
add
cmp
mov
or
daa
cwde
fild
jp
call
push
imul
adc
dec
cmp
mov
pop
jnp
pop
clc
pop
or
jnp
mov
pop
push
sub
nop
ror
pop
adc
jl
lsl
mov
push
pop
pop
es
ret
fisub
cmps
inc
daa
mov
or
ror
jl
lahf
sbb
or
outs
test
and
daa
ins
pop
sub
jbe
daa
pop
push
push
sbb
jg
jge
dec
imul
push
ss
push
pop
add
jbe
imul
aaa
fcomp
push
enter
or
push
lahf
fdiv
sti
test
ins
add
outs
adc
cmp
xchg
int
sbb
sub
mov
pusha
aas
inc
pop
nop
daa
daa
stc
cs
mov
mov
out
loopne
fcomp
pop
or
daa
not
add
jo
inc
pop
mov
pop
jo
nop
pop
jg
jg
add
jg
pop
fwait
sub
packuswb
daa
pop
shl
(bad)
or
pop
xchg
sbb
imul
loopne
in
jb
or
and
add
dec
sub
and
sbb
sbb
clc
jl
and
and
enter
or
add
mov
leave
add
add
sahf
call
call
cld
push
das
outs
sub
pop
and
(bad)
jns
mov
inc
outs
push
and
inc
mov
(bad)
push
in
jb
js
sbb
mov
mov
and
fcom
mov
xchg
jns
pop
adc
jbe
mov
cmp
nop
inc
push
mov
jns
sbb
cmp
test
pop
in
cwde
xor
test
les
dec
fldcw
mov
outs
mov
int3
pop
sbb
fsubr
leave
add
sub
out
in
test
cmp
push
ror
inc
(bad)
push
enter
popf
js
adc
inc
dec
mov
sbb
cmp
ins
push
sbb
add
xchg
sbb
ss
pop
or
or
inc
xchg
cwde
or
add
test
mov
call
cmp
xchg
cmp
pusha
add
and
and
inc
xor
mov
pop
xor
leave
sbb
sub
and
jo
mov
test
or
xor
xchg
mov
fdivr
cmp
mov
inc
mov
push
and
inc
nop
mov
scas
inc
push
cdq
in
lock
rcl
dec
xchg
call
jns
pushf
aas
sub
mov
push
xor
sbb
mov
mov
mov
xchg
imul
in
inc
sbb
pop
clc
dec
in
sbb
enter
idiv
mov
mov
mov
mov
(bad)
jns
pushf
or
cmp
cmps
jecxz
mov
(bad)
mov
mov
sbb
add
cwde
push
scas
mov
add
xor
ins
mov
xor
loopne
or
leave
add
adc
nop
push
cwde
pop
add
and
and
mov
or
jmp
sub
ror
sbb
or
add
xchg
fistp
mov
or
retf
les
pop
dec
and
cmp
mov
sbb
(bad)
xor
push
cmps
inc
outs
or
push
enter
cmp
pusha
in
stos
cmp
(bad)
and
setl
loopne
xchg
cmp
into
fsubrp
sub
cmp
push
cmc
rcr
dec
inc
pop
push
enter
nop
jns
xchg
and
loopne
mov
leave
mov
xchg
sbb
xor
jnp
scas
sti
dec
inc
pop
aam
push
enter
xchg
loopne
xchg
xor
or
repnz
cwde
xchg
test
rcl
push
inc
scas
lock
sbb
xor
call
mov
xchg
add
dec
dec
ror
push
pusha
add
nop
add
jl
sbb
xchg
push
sahf
pop
dec
xor
mov
mov
and
outs
inc
mov
in
aam
push
add
add
scas
clc
xchg
das
imul
push
mov
aad
xchg
xlat
push
gs
pop
mov
lods
scas
dec
xchg
pop
fadd
pop
xchg
jo
push
addr16
and
outs
scas
adc
xor
punpcklwd
push
imul
inc
mov
or
xor
xor
pop
push
add
or
enter
jg
les
xor
xchg
push
sbb
add
les
jmp
call
xchg
(bad)
jg
cmp
or
push
mov
mov
push
call
xchg
xchg
nop
imul
inc
scas
loopne
jo
lock
mov
cmp
push
pusha
xchg
push
push
fcmovb
adc
pop
xchg
dec
push
fcmovb
dec
mov
and
call
enter
or
pop
adc
nop
xor
mov
neg
push
outs
add
stos
or
clc
add
lahf
push
enter
pop
lahf
mov
mov
cmp
jp
push
cwde
scas
clc
cwde
or
or
dec
and
cmp
pop
adc
in
iret
jo
sbb
cdq
cmp
scas
enter
sbb
lock
daa
pop
fs
and
leave
mov
dec
add
mov
pop
dec
mov
cwde
enter
push
mov
iret
lock
sbb
nop
xchg
shr
inc
push
nop
jo
mov
mov
xor
popa
inc
call
hlt
pop
in
pop
pushf
cs
mov
and
and
pop
sbb
dec
and
js
push
xor
pushf
out
add
pusha
leave
popa
or
inc
xchg
popf
pop
and
and
sbb
dec
js
add
sahf
imul
inc
xlat
dec
leave
push
call
sbb
sbb
push
xor
pop
xor
sahf
das
mov
fisubr
int3
add
inc
push
push
add
and
xor
xor
mov
fs
bound
and
sub
push
dec
push
dec
dec
dec
popf
push
xor
ret
addr16
in
ss
repz
out
test
jle
retf
gs
aas
jmp
cmps
mov
ss
and
cmps
imul
pop
dec
jnp
add
ficomp
jl
(bad)
cld
push
xor
mov
cs
cmc
jp
popf
repnz
sti
dec
and
(bad)
mov
out
cld
or
pop
retf
or
sub
ja
bound
fs
mov
sub
add
push
inc
in
mov
(bad)
push
inc
mov
fild
cmp
or
outs
jo
addr16
scas
and
jo
ins
sahf
pop
outs
jb
pusha
gs
jo
ins
sahf
imul
inc
dec
push
sahf
ins
xchg
lods
lea
pop
sti
setns
mov
pop
loope
psubusw
pusha
loope
push
imul
pop
movs
pop
mov
pop
mov
int
stc
pop
fcomp
loope
mov
push
btc
xchg
mov
pop
push
push
sar
push
ds
push
imul
jo
push
dec
inc
dec
or
daa
fidivr
mov
push
outs
daa
or
popa
out
lods
or
push
push
and
in
ins
(bad)
or
in
add
or
adc
ret
xor
ficomp
in
mov
push
cmp
mov
lods
jb
jbe
mov
lock
pusha
add
jnp
popa
rol
jns
inc
movs
scas
syscall
cmp
jbe
mov
cmps
into
push
jns
aaa
mov
ds
gs
arpl
ins
ss
dec
inc
inc
std
call
or
mov
(bad)
(bad)
xchg
and
mov
inc
mov
(bad)
in
add
xchg
push
hlt
inc
mov
push
out
add
push
mov
rol
add
jle
push
(bad)
push
call
push
jo
or
inc
and
(bad)
dec
out
mov
paddd
mov
jmp
push
push
push
mov
cmp
push
stos
xchg
mov
mov
ja
mov
and
lahf
or
jae
or
or
dec
add
jnp
inc
or
jne
jmp
xlat
and
shl
lahf
inc
inc
xchg
pop
add
btc
je
push
adc
mov
dec
cmp
call
inc
es
out
add
pop
and
test
ret
stos
ja
cmp
sub
push
test
adc
call
mov
or
jmp
jne
xlat
adc
stos
jmp
js
or
rol
pop
div
inc
inc
mov
jb
out
(bad)
or
fild
sahf
mov
(bad)
sbb
xor
jo
dec
(bad)
test
mov
jge
not
sbb
dec
xchg
jmp
jl
repz
not
fimul
js
pop
pop
out
jle
retf
lds
(bad)
push
push
mov
dec
ins
add
add
(bad)
(bad)
jmp
pushf
mov
cmp
cld
jmp
and
sbb
out
fs
mov
dec
or
pushf
loop
andnps
inc
sbb
xor
cld
jo
and
das
or
(bad)
mov
fwait
int3
out
and
jae
pop
and
and
rol
in
jg
and
add
dec
mov
fld
fs
pop
xchg
fs
mov
outs
adc
push
je
fcomip
outs
xchg
test
imul
inc
mov
and
test
pop
mov
cmp
bnd
or
mov
mov
sbb
jmp
jmp
or
jbe
push
pusha
mov
sbb
sahf
and
push
out
std
jne
push
cmp
fild
or
and
and
mov
push
cmps
pop
pop
imul
jl
adc
cli
ret
pusha
sahf
stos
cs
add
inc
cld
loop
sahf
push
mov
mov
pop
pop
or
imul
fild
sbb
sub
or
xor
jno
push
ds
dec
cmp
jo
xor
add
mov
data16
and
mov
jae
in
cld
lods
push
mov
or
or
inc
aam
adc
xor
mov
sbb
cld
scas
cmps
idiv
ficom
out
in
or
jnp
leave
jge
jge
call
pusha
nop
add
sub
sar
cmp
lahf
into
stc
jge
pop
xchg
repz
jmp
(bad)
imul
sub
add
rep
stc
(bad)
ds
les
in
in
lods
pxor
jl
out
es
inc
das
lock
repz
repnz
cs
retf
in
inc
hlt
inc
test
retf
mov
clc
sti
push
pop
cli
inc
std
scas
push
sti
int
xchg
setne
sbb
test
jmp
add
clc
xchg
dec
and
out
fsub
pop
jne
pop
push
mov
cs
xchg
pop
sbb
add
or
inc
popa
out
clc
enter
cmps
daa
and
mov
dec
inc
leave
mov
xchg
repnz
stos
into
jns
mov
sbb
(bad)
adc
cmp
imul
adc
pop
mov
repz
(bad)
mov
sar
rcl
mov
cmps
(bad)
adc
idiv
out
add
lods
mov
scas
int
push
repz
int3
ja
push
mov
dec
mov
shl
hlt
mov
push
sub
xlat
push
and
jno
add
inc
mov
pop
leave
jle
xlat
push
dec
sub
or
shr
xchg
xchg
and
add
test
add
dec
cmp
ret
outs
(bad)
push
xchg
jmp
xchg
pop
push
popa
push
outs
pop
adc
add
rcr
sub
aad
pop
jno
popa
sub
or
into
ret
fiadd
lahf
jmp
cmp
loope
cmp
pop
cli
push
scas
daa
fidiv
mov
push
sub
mov
arpl
jno
push
fdivr
jns
mov
gs
fidiv
cli
scas
(bad)
(bad)
xchg
addr16
pop
or
jae
mov
retf
out
sti
xlat
jge
je
cwde
out
test
jne
adc
movs
popf
sub
cmp
sub
mov
xor
adc
add
cmp
mov
pop
sub
cmps
push
push
iret
out
mov
add
pop
add
ss
js
jle
push
or
mov
out
neg
ja
xchg
or
sbb
adc
pop
mov
clc
lock
pop
adc
movlps
sbb
or
out
push
inc
push
pop
push
xchg
sahf
add
loopne
jns
inc
les
loopne
mov
mov
jns
ins
xor
imul
jle
push
jne
enter
inc
repz
adc
add
add
pop
adc
dec
or
hlt
xlat
test
pop
push
jle
or
mov
lds
dec
pop
cmp
pop
pop
loop
push
nop
mov
jge
mov
fbstp
ret
stos
idiv
aaa
mov
leave
sub
mov
xchg
test
or
mov
jb
inc
loope
adc
fstp
sub
mov
inc
clc
adc
(bad)
stc
sbb
sti
dec
mov
and
sbb
out
mov
mov
mov
outs
or
clc
mov
aas
imul
inc
or
mov
inc
pop
jecxz
push
lods
shr
rol
pop
jp
or
out
inc
int3
xor
pop
or
pop
loope
nop
dec
ror
das
push
mov
jb
or
stc
lods
pop
cdq
jb
movzx
pop
add
jb
or
mov
mov
cmp
add
movsx
cld
scas
(bad)
das
fadd
shl
sub
mov
jg
add
jg
or
stos
int3
aas
out
pop
sbb
(bad)
jmp
cdq
adc
fdiv
ja
(bad)
mov
ret
je
cli
retf
xchg
inc
xor
pop
jmp
dec
pop
into
js
jmp
dec
cmp
cld
mov
add
inc
gs
test
jb
jg
outs
xchg
rcr
fwait
aaa
sub
jb
or
xlat
jecxz
sbb
sub
fs
sub
sub
cmp
ds
neg
fs
dec
repnz
bound
and
leave
sbb
fistp
cmp
in
xor
inc
stc
dec
(bad)
sti
mov
ins
clc
jnp
je
daa
inc
mov
lock
pop
jl
push
sbb
inc
fidiv
shr
shl
pop
ins
sub
or
movs
push
jp
(bad)
jmp
jae
popa
xor
jne
adc
(bad)
clc
push
jle
mov
xchg
adc
(bad)
je
pop
rol
sbb
xor
ret
pushw
(bad)
out
pop
aad
cmc
test
cwde
dec
sahf
sbb
jl
jb
mov
lods
mov
mov
jno
sub
mov
inc
sbb
lahf
inc
mov
pop
loope
imul
push
shl
inc
dec
sbb
adc
mov
std
push
inc
jmp
jmp
xlat
or
retf
lock
aad
cs
adc
inc
push
pop
retf
inc
rol
jno
inc
sbb
or
cmc
sub
mov
xchg
aad
mov
jle
cdq
push
adc
and
in
jo
add
xchg
xchg
inc
inc
mov
xchg
jmp
xor
cmp
xchg
mov
or
icebp
mov
shl
adc
push
xor
pslld
jl
push
xor
xlat
pusha
fwait
mov
shl
mov
outs
inc
stos
cli
cld
jl
push
push
lods
push
arpl
sbb
xchg
mov
jp
data16
adc
cmps
sbb
lods
data16
in
loope
or
add
mov
jno
icebp
pop
pop
add
ret
or
ret
ficom
hlt
loope
or
dec
pop
or
or
push
inc
shl
add
jge
imul
lds
out
pop
inc
pop
lock
xor
jae
jg
lock
sahf
push
clc
inc
lahf
out
repnz
xchg
retf
add
pop
fidivr
or
ss
icebp
push
jge
gs
sub
(bad)
je
push
sbb
repz
popf
add
xchg
cmp
sbb
or
out
xchg
rcl
mov
xor
out
adc
jge
and
loop
mov
sub
inc
jp
xor
mov
xor
outs
loop
movs
xor
dec
xchg
fistp
cmp
push
fsubp
inc
sti
or
sti
out
xchg
ins
jbe
push
out
ret
mov
cmps
sub
push
out
pop
addr16
adc
out
pusha
xor
es
fiadd
stos
xchg
fisttp
icebp
mov
(bad)
in
or
addr16
push
push
fst
push
out
and
mov
push
jmp
jns
mov
(bad)
cmp
aaa
mov
mov
lahf
ja
sbb
jae
or
jmp
pop
cli
fcomp
ss
pushf
xchg
out
pop
cli
push
add
dec
cli
icebp
data16
push
in
test
fs
cli
and
stos
jge
push
mov
mov
push
sub
repnz
jg
xchg
in
or
out
shl
inc
add
push
out
cs
inc
xor
or
sti
jnp
inc
jnp
sbb
cli
jl
ja
pusha
std
in
repnz
out
pop
xchg
xchg
xchg
mov
repnz
and
es
sbb
int3
mov
ds
pushf
jno
pop
paddsb
call
pop
mov
xlat
mov
test
cli
(bad)
jb
sbb
outs
mov
ins
mov
sahf
push
push
push
ins
in
inc
fdiv
jnp
out
and
and
cmp
ins
cmp
out
push
adc
add
lock
jle
js
popa
movs
test
pop
xchg
jmp
push
or
pop
loopne
pop
leave
inc
fcomp
das
mov
out
push
cld
jne
repz
xor
aad
lds
nop
jg
out
push
pop
cmc
inc
jl
(bad)
jp
or
or
mov
add
sti
ror
jl
jne
jns
inc
add
jae
add
fucomp
or
dec
ins
xchg
or
mov
and
clc
jmp
mov
add
cmp
sbb
idiv
retf
sti
fisttp
aaa
mov
dec
jne
pop
jmp
and
jg
inc
test
or
movs
rol
mov
out
mov
or
push
(bad)
and
mov
xor
lds
arpl
ror
fist
add
push
je
adc
dec
xchg
xchg
icebp
mov
pop
mov
int
pop
out
xchg
sub
shl
or
mov
cmp
stos
test
cmp
mov
neg
cmp
mov
add
jnp
mov
sub
mov
adc
ret
test
mov
jmp
or
inc
mov
sbb
jno
ret
std
or
jbe
cmps
cmp
fwait
jle
mov
pop
icebp
test
(bad)
and
dec
adc
dec
bound
les
not
add
pop
ret
movs
jge
fistp
retf
mov
fnstcw
pop
(bad)
sub
int
fnsave
aad
xor
jecxz
loop
push
pop
in
push
sub
xchg
aaa
push
loop
test
loop
xlat
pop
mov
and
pop
pop
mov
dec
jge
cmp
adc
lock
(bad)
cdq
(bad)
std
sbb
adc
push
in
cmp
mov
pop
out
adc
or
mov
neg
mul
test
mov
sar
ins
inc
aad
inc
pop
call
dec
aaa
mov
ret
mov
and
and
mov
aas
sbb
mov
mov
aad
xor
pop
hlt
push
xlat
or
cmp
(bad)
push
aam
enter
ss
cmp
test
clc
(bad)
ins
shr
push
adc
(bad)
adc
jb
cmp
pop
mov
xchg
fcomi
scas
out
cmps
cdq
loopne
stos
fiadd
fcomp
or
mov
adc
mov
sbb
in
movs
ret
jns
outs
cmp
scas
or
hlt
add
and
outs
cmp
rcl
jns
mov
jmp
dec
and
arpl
pop
cli
pop
mov
sub
sub
clc
icebp
cmps
imul
clc
inc
pop
push
outs
fiadd
dec
iret
rcr
js
jmp
xor
or
pop
jmp
enter
test
scas
jo
inc
jb
(bad)
aas
inc
ficom
scas
inc
adc
jno
cmp
add
out
imul
or
mov
lahf
ficomp
and
jb
fadd
sub
call
dec
fidivr
push
popf
retf
sahf
mov
repnz
es
add
and
add
or
test
loopne
(bad)
fistp
out
push
inc
mov
cmp
xor
inc
lock
clc
in
jne
push
push
cmc
out
xchg
loope
sbb
out
push
in
xchg
ret
mov
mov
jb
pop
add
push
jl
sbb
push
rol
cmps
imul
imul
movs
imul
inc
push
adc
and
cmps
clc
imul
dec
fsub
dec
stc
fcmovu
lds
fldcw
in
in
xchg
dec
sar
call
pop
je
(bad)
push
sbb
cmps
adc
out
pop
xor
and
push
pop
push
inc
or
pop
xchg
lock
leave
cli
addr16
ins
sahf
xchg
nop
arpl
scas
inc
idiv
sbb
cmps
not
dec
leave
and
out
out
add
mov
fcmovb
lock
out
addr16
mov
xchg
in
test
rcl
(bad)
test
fs
adc
xchg
inc
fs
nop
fsub
adc
inc
push
xor
or
push
lea
jb
sub
mov
jo
gs
mov
retf
dec
outs
gs
inc
shl
(bad)
mov
leave
enter
inc
int
xor
iret
cs
shl
rcl
mov
xchg
scas
test
ret
push
inc
or
jb
fisub
or
pop
adc
jno
adc
adc
movs
imul
mov
fisub
and
and
call
daa
sub
cmps
imul
jb
pop
call
jb
dec
repz
js
movs
(bad)
jnp
jp
inc
jge
lods
cdq
movs
pop
jl
jg
jle
add
test
xchg
inc
add
mov
loopne
push
in
mov
add
push
gs
xor
xor
call
cmp
(bad)
ins
cmp
cmp
inc
test
push
sar
add
xchg
and
and
dec
push
sbb
pop
sbb
fistp
outs
xchg
xor
sbb
push
sbb
repnz
add
hlt
arpl
cs
retf
in
imul
stc
jo
outs
sti
outs
pop
ds
pop
cli
call
repz
test
sbb
push
cmp
adc
cmp
test
mov
lea
push
and
fsubrp
push
pop
jmp
scas
dec
call
out
out
mov
push
add
cmc
ins
push
call
shl
sbb
adc
or
push
dec
jge
test
hlt
pusha
leave
int3
fcmovu
loope
push
sub
ja
sahf
xchg
(bad)
mov
outs
xchg
push
or
or
mov
into
push
movs
scas
mov
das
xchg
inc
(bad)
add
dec
sbb
xor
in
enter
or
jb
pop
cs
clc
sti
outs
cli
mov
mov
mov
xchg
push
int3
aad
int
pop
or
adc
push
fcomip
and
push
iret
or
fisttp
out
inc
dec
sub
or
lods
nop
jmp
inc
sti
dec
sbb
test
popa
in
cmp
rcl
popa
jns
movs
fst
adc
push
xor
fidiv
pop
daa
adc
pop
popa
mov
jmp
enter
xor
sbb
push
ss
enter
mul
pop
ficomp
jb
pop
(bad)
push
loope
jb
pop
cs
jecxz
loop
in
cmp
in
dec
out
mov
mov
xchg
in
push
pop
pop
xchg
gs
movs
inc
inc
inc
lods
movs
lock
sub
popa
jae
out
pop
call
jae
pop
cld
out
pop
sbb
sub
mov
xchg
dec
data16
cmps
inc
retfw
and
ja
loopne
loop
int
int
test
sub
popf
ins
mov
sub
jo
adc
fstp
adc
pop
scas
scas
mov
into
dec
push
cmp
addr16
add
sub
mov
fs
ins
add
std
lods
xor
imul
popa
sub
pop
lea
xor
sub
and
js
sti
(bad)
mov
inc
sbb
hlt
neg
shl
dec
idiv
clc
scas
out
pop
push
cmp
dec
add
int
sub
xor
(bad)
push
cmp
pop
rcr
xchg
pop
out
adc
mov
mov
test
rcr
repnz
not
jge
int3
inc
push
mov
nop
sbb
aas
pop
xor
mov
sbb
push
call
sbb
adc
xor
dec
(bad)
inc
or
pop
out
cld
mov
xchg
cmp
pop
ds
aad
push
or
test
sub
sub
cmp
mov
mov
call
test
and
shr
and
add
mov
or
pusha
rcl
(bad)
jmp
ss
or
push
or
outs
das
push
xchg
rcl
out
(bad)
and
nop
jne
dec
pop
sbb
jne
mov
mov
push
or
jne
add
es
pop
bound
cmp
inc
imul
cmp
pop
xchg
and
dec
dec
xchg
cmp
cld
mov
inc
mov
jl
cmp
mov
fnstcw
inc
mov
(bad)
movs
mov
ins
pop
cmp
es
push
hlt
and
adc
pop
sti
or
jae
jle
test
push
lock
jne
lahf
test
push
xor
retf
ja
pushf
hlt
sub
and
int3
cmp
fild
sub
stos
test
mov
mov
or
call
push
add
sbb
hlt
ins
inc
mov
scas
push
test
adc
adc
les
outs
(bad)
jmp
sub
loopne
dec
push
call
outs
js
push
ret
xchg
or
cld
scas
adc
mov
test
inc
jmp
jge
sub
gs
pushf
(bad)
and
cmovo
push
lahf
popa
cmp
out
or
les
sahf
sub
neg
or
mov
fld
xor
cmp
sbb
push
test
scas
add
jnp
or
adc
call
test
stc
add
fmul
xor
mov
bound
jo
les
aas
or
pop
pusha
sti
movs
mov
or
xchg
ins
push
(bad)
adc
or
ds
mov
rcr
xor
sti
mov
outs
jb
arpl
inc
pusha
xor
ins
cld
outs
rol
fstp
push
xor
jbe
mov
push
cli
pusha
sbb
pop
jl
inc
or
cmp
outs
mov
push
rcr
fmulp
sbb
add
into
(bad)
out
push
leave
fdivr
sahf
mov
pop
rol
(bad)
loope
les
gs
pop
daa
mov
and
fiadd
mov
dec
fisub
jns
mov
sub
cmc
push
data16
xchg
sub
sbb
mov
iret
shr
jbe
inc
call
mov
jl
out
push
lahf
pop
add
pop
sti
fimul
sbb
jge
jnp
dec
mov
ror
add
div
ins
adc
xor
repnz
mov
inc
sbb
and
icebp
inc
mov
or
add
frstor
cmp
and
sub
iret
ret
repz
push
aam
pushf
mov
push
stos
pop
lea
xchg
xchg
pop
mov
data16
mov
sbb
and
shl
nop
fisub
dec
aaa
and
(bad)
cdq
mov
(bad)
jo
add
mov
xchg
psraw
push
retf
out
xor
xor
lock
or
add
int
aas
pop
out
rcr
and
cdq
cmc
push
mov
add
push
sahf
pop
fs
rcr
sub
jno
test
rol
pop
sti
call
fnstenv
in
inc
cmp
cmp
pop
cs
fisttp
or
fldenv
add
in
fiadd
or
jb
into
sbb
retf
push
push
push
aad
cld
mov
xchg
and
mov
aam
sbb
lahf
in
xchg
sbb
cmp
xchg
mov
or
dec
aas
xchg
pusha
test
and
fisub
mov
test
pop
xchg
jno
das
test
add
es
jp
fist
retf
and
into
cmp
rcl
adc
or
cld
clc
xor
mov
jg
jne
out
in
add
test
out
pop
enter
xchg
sbb
rcr
sar
out
ins
pop
sbb
jns
call
inc
dec
push
or
int3
ja
or
mov
iret
cmp
mov
inc
jnp
mov
sbb
mov
push
xchg
push
push
adc
push
add
mov
in
mov
repnz
aad
icebp
and
data16
out
aaa
repnz
imul
in
repnz
mov
ret
push
ds
add
retf
cmps
ins
fiadd
call
jb
data16
pop
loop
outs
sbb
mov
pop
inc
repz
xchg
out
dec
imul
adc
clc
cs
repnz
mov
test
mov
dec
fmul
imul
ret
repnz
out
adc
loopne
inc
call
into
cli
push
sbb
imul
sbb
add
push
jmp
into
dec
and
test
add
and
loopne
cld
jae
or
xor
ins
jno
mov
mov
les
sbb
loope
out
sti
jg
pop
pop
sahf
jno
inc
pop
push
mov
or
pop
retf
sti
(bad)
int3
mov
pop
jg
adc
call
dec
jne
push
iret
push
push
rcr
enter
xchg
jnp
repnz
mov
push
sub
repnz
push
cmp
pop
aaa
frstor
push
imul
outs
sub
pop
sti
dec
pop
dec
cmp
jle
popa
cmps
push
out
cs
movs
sti
aad
lds
imul
jb
push
test
dec
aad
int
imul
push
jno
fs
mov
jmp
imul
jo
stos
sub
les
jb
popf
adc
pop
push
push
repnz
cli
jb
and
inc
sbb
addr16
sbb
xchg
shl
mov
rcl
or
and
test
shl
add
add
inc
push
jge
adc
(bad)
jae
clc
gs
(bad)
push
out
xchg
lock
int3
inc
fadd
aaa
push
hlt
out
leave
inc
dec
js
cs
fisubr
cmp
shl
xchg
cmps
scas
inc
fwait
push
mov
outs
clc
test
iret
fmul
fwait
inc
sbb
stos
and
cmp
dec
push
and
jne
inc
repz
sbb
addr16
cli
sahf
xor
xchg
cmps
xchg
adc
inc
pop
in
shl
push
sar
lock
adc
std
cmp
adc
cmps
out
cmp
sbb
add
inc
mov
mov
pop
mov
std
jno
inc
mov
mov
and
loopne
push
mov
or
or
push
pop
repnz
sub
scas
mov
inc
adc
out
and
mov
mov
push
add
and
push
xchg
push
or
mov
pushf
dec
mov
add
xchg
jl
and
imul
test
clc
lahf
cmp
mov
xchg
mov
repz
dec
test
mov
int
inc
jp
inc
inc
clc
ficomp
jle
(bad)
jo
xchg
in
mov
rol
lea
jns
rcr
and
stos
cmp
imul
cmps
loopne
sbb
jg
push
or
add
jo
mov
scas
in
lds
jle
xor
rcr
enter
ins
js
mov
mov
pop
gs
(bad)
mov
fwait
push
sbb
pushf
adc
sbb
push
or
jl
sub
and
push
movs
inc
pop
inc
sbb
fnstenv
sti
cmp
push
or
push
cmp
and
inc
dec
fsub
sub
xor
xchg
out
adc
in
das
xchg
mov
inc
xor
sbb
add
int3
inc
sbb
sti
arpl
or
cmp
(bad)
stc
dec
or
in
xchg
repnz
(bad)
jbe
(bad)
fdivr
adc
or
ss
test
mov
mov
mov
dec
fisttp
loop
in
pop
dec
sbb
adc
rcr
jno
mov
ss
les
out
enter
movs
cli
ss
cdq
in
dec
retf
mov
cs
xor
sar
repnz
dec
lds
dec
add
sub
inc
call
in
pop
add
loop
pop
pushf
dec
cmp
push
out
fprem
sub
inc
cmp
push
rcr
ins
jmp
adc
xchg
cld
xlat
es
add
push
aaa
loop
add
cli
push
dec
xlat
inc
add
cli
aaa
jae
add
xlat
push
aaa
loop
test
dec
not
and
shl
pop
cmp
add
xor
or
sbb
bt
sub
xchg
div
test
mov
test
xchg
push
test
scas
xor
aaa
sbb
(bad)
add
push
cmps
inc
test
pop
mov
inc
dec
cwde
mov
pusha
cmp
sbb
test
adc
dec
inc
mov
mov
cmp
adc
or
push
adc
add
sub
dec
and
and
int
popf
cwde
xor
dec
setg
inc
fimul
scas
std
(bad)
push
cli
repnz
add
xor
fcom
add
out
int
out
mov
mov
mov
push
sbb
mov
inc
add
mov
sub
icebp
retf
jge
sub
jecxz
pop
sub
(bad)
adc
and
in
mov
mov
jl
inc
inc
sub
pop
rcl
and
fcom
xchg
jno
jle
ret
pop
or
(bad)
ins
sti
jmp
push
mov
sub
cli
inc
sbb
mov
adc
jb
or
xor
push
inc
jo
movs
add
mov
pop
mov
mov
sbb
fidivr
addr16
pop
(bad)
out
retf
aaa
adc
arpl
lahf
sbb
jne
push
jb
sub
mov
xchg
in
jns
fisub
or
retf
add
(bad)
add
clc
(bad)
(bad)
cmovp
gs
or
les
(bad)
pop
lds
push
imul
aad
inc
and
cdq
inc
push
out
xor
sbb
jp
sahf
aad
mov
cmps
(bad)
out
inc
jl
imul
pusha
je
out
mov
fcmovu
adc
push
add
push
add
scas
scas
jmp
xchg
cmp
push
outs
jmp
xor
xor
icebp
dec
push
adc
dec
ins
fist
sbb
inc
out
popa
mov
push
imul
jo
sub
mov
cmps
and
out
xchg
shr
or
lods
add
cs
jecxz
cmp
pop
outs
dec
adc
inc
adc
mov
test
jmp
jns
mov
adc
jmp
and
adc
mov
xor
push
sub
sti
hlt
cmps
cs
repnz
add
and
xor
inc
jle
fldcw
add
mov
loope
fidiv
or
push
jns
or
mov
and
xchg
add
inc
xor
cmp
cmc
test
sbb
or
repnz
xchg
loop
xor
ins
test
(bad)
or
push
xchg
mov
addr16
pop
mov
push
mov
je
sub
stc
sti
push
fwait
jmp
inc
fcom
jmp
lds
sar
jb
dec
movs
xchg
jle
cld
sbb
mov
mul
sbb
push
cmp
mov
fucomip
or
repnz
push
jbe
dec
(bad)
imul
xchg
mov
test
call
push
dec
stos
out
jle
mov
add
push
push
out
inc
cdq
sub
movs
sbb
sbb
imul
sub
loope
xor
jae
mov
test
xchg
sub
mov
mov
and
pushw
push
mov
xor
push
inc
inc
jb
inc
jne
data16
inc
outs
push
dec
pop
sti
call
push
jmp
packuswb
lods
pop
inc
(bad)
(bad)
out
jbe
mov
mov
(bad)
adc
jmp
dec
in
retf
pshufw
or
lods
mov
dec
call
loopne
in
shl
mov
cmps
imul
sbb
cmp
cwde
jbe
jl
xchg
jne
xor
jecxz
iret
push
inc
test
repnz
cmp
and
xor
mov
fwait
hlt
repnz
sub
and
mov
xchg
test
and
add
inc
and
adc
jbe
int
adc
sub
push
repnz
jno
xchg
cs
push
lock
fcom
and
inc
cmp
sbb
jne
std
cmc
cmp
jns
xor
in
mov
mov
or
push
and
sub
sbb
and
mov
jmp
mov
pop
jne
mov
ret
lea
add
mov
dec
retf
mov
retf
push
imul
gs
test
test
mov
out
lods
sbb
jmp
ficom
cmp
into
cmp
call
mov
in
pop
sub
or
jae
enter
pushf
sahf
and
mov
sbb
push
addr16
fdivr
or
dec
jecxz
dec
call
sub
inc
loope
inc
jge
inc
xchg
leave
stos
pop
mov
rcr
add
bound
dec
test
adc
add
shr
sbb
add
adc
sub
aas
loop
adc
cmp
std
loopne
push
(bad)
push
dec
out
les
loop
inc
pop
xchg
out
mov
in
arpl
xchg
inc
mov
outs
gs
out
inc
rcl
out
jae
pop
mov
mov
add
mov
inc
pusha
cmps
sub
fucomip
fwait
or
ss
mov
mov
mov
enter
fwait
out
pusha
jg
pop
add
push
sub
enter
stos
into
push
ins
jbe
(bad)
pop
ss
push
mov
ret
dec
clc
int
out
popf
dec
je
xchg
and
ffree
add
faddp
xlat
test
scas
movs
fwait
or
loop
dec
shl
or
xor
test
outs
hlt
sub
pop
ds
cdq
pop
cmp
cmp
into
adc
mov
leave
mov
adc
arpl
sub
into
xchg
xor
test
sbb
loope
mov
xor
repz
push
pop
lds
mov
xor
inc
inc
ds
xchg
sbb
or
adc
jle
daa
inc
jb
add
ss
ins
xchg
scas
lock
adc
sbb
jmp
pop
test
mov
pop
push
int3
cmps
push
jb
sbb
mov
jne
sub
pop
push
and
test
pop
je
in
nop
mov
stos
ret
sub
dec
sbb
aam
nop
dec
jnp
aad
jmp
dec
dec
mov
jnp
pop
jb
pushw
inc
jmp
pushw
or
cli
pusha
arpl
ds
and
push
sbb
mov
jnp
cli
dec
jg
jb
out
mov
ret
(bad)
adc
fild
cmp
mov
jb
mov
std
(bad)
fnstsw
retf
jecxz
lock
or
fcomp
rol
jb
icebp
push
test
jl
and
icebp
mov
lods
inc
and
inc
adc
xchg
xchg
cli
mov
out
and
sahf
adc
sub
pop
pop
shl
jge
mov
scas
movs
bound
jle
mov
add
imul
fwait
add
mov
push
or
xor
loopne
push
stos
xchg
mov
dec
xor
repnz
clc
pop
inc
xor
fcmovne
imul
aam
mov
ja
mov
and
sbb
out
pop
pusha
in
and
inc
fistp
dec
cli
xchg
or
dec
push
mov
inc
cs
xor
test
jns
ret
jne
daa
(bad)
or
xor
xchg
cmp
and
jmp
sbb
popa
push
sbb
cli
movs
repz
leave
ss
jmp
jo
push
lea
movs
in
xor
dec
aaa
jns
icebp
ss
sub
and
stos
mov
jns
(bad)
and
cmps
and
ss
push
xor
cmp
push
pop
inc
push
cld
pop
movs
jns
or
cld
push
push
outs
pop
out
sbb
jb
das
and
push
add
mov
push
in
dec
xchg
pop
push
jl
add
sti
xor
mov
pop
movs
and
ret
mov
push
bound
mov
jmp
cmp
add
mov
inc
daa
mov
jmp
push
jmp
push
test
push
pusha
adc
jmp
cli
xchg
stos
inc
lods
stos
cmp
fistp
fs
or
ret
test
fwait
mov
and
loop
aas
cmp
xor
jl
xchg
cdq
loopne
xor
retf
inc
cmp
adc
test
pop
adc
mov
call
mov
aad
(bad)
sub
test
ds
punpcklwd
adc
aad
fs
sub
mov
dec
into
in
mov
and
scas
out
xor
and
pop
jnp
loope
push
sbb
or
ss
lods
scas
cli
cmps
call
inc
pop
and
adc
std
sti
mov
cmp
jns
jne
cmp
shr
push
out
jmp
stos
add
push
mov
cmp
sbb
or
pop
ret
or
xor
inc
cmp
jg
jg
xchg
in
into
fsubr
jb
data16
adc
lea
push
sub
out
nop
mov
imul
dec
pop
mov
clc
cmp
retf
push
loop
dec
popa
popf
retf
push
mov
sbb
push
push
in
mov
push
or
retf
out
jmp
add
jbe
mov
cmp
mov
jmp
mov
bound
push
movs
dec
in
mov
cmps
imul
stos
or
or
daa
mov
sbb
repnz
in
push
adc
mov
add
js
pusha
or
mov
(bad)
cmp
out
ds
sti
daa
outs
mov
jae
jb
push
sbb
pop
mov
stos
add
les
outs
lods
fstp
sub
cli
sbb
pop
xchg
xor
sub
out
mov
neg
mov
push
in
inc
mov
xchg
arpl
cmp
mov
repz
mov
mov
mov
lahf
in
jo
(bad)
sub
and
cmp
sbb
aam
pop
mov
and
mov
data16
adc
call
test
jmp
(bad)
js
hlt
xor
mov
(bad)
sti
mov
jo
xor
imul
(bad)
cld
gs
test
repnz
adc
and
xchg
and
cli
push
mov
test
aad
push
jo
and
pushf
xchg
or
movs
ficom
and
scas
popa
sub
cmps
cli
dec
adc
mov
aam
jecxz
mov
pop
or
jae
jno
js
sahf
cmp
mov
pop
popa
lock
sbb
or
sub
in
xlat
mov
popa
leave
int3
in
ds
repz
mov
xlat
push
xlat
and
push
and
and
push
sub
out
xor
and
lahf
into
(bad)
xchg
adc
adc
and
xchg
test
enter
or
pop
inc
jb
and
pushf
jo
in
jg
and
sub
push
jo
(bad)
fcomp
push
(bad)
cmp
ret
pop
sbb
jecxz
jne
sub
jge
push
pop
xchg
and
sub
cmps
or
int3
mov
leave
adc
fidiv
jmp
xor
jbe
enter
inc
div
call
call
mov
ja
xchg
push
sbb
or
ins
fistp
push
jbe
adc
out
xor
adc
jno
mov
xchg
push
(bad)
mov
or
mov
mov
mov
lock
jno
add
mov
arpl
xchg
push
push
sbb
or
xchg
jb
sub
lods
and
ja
sbb
std
bound
out
xor
dec
mov
pop
out
sub
xor
mov
pop
xchg
shl
fmul
ds
inc
add
inc
xchg
out
cdq
adc
data16
stos
mul
jae
xor
jns
pop
sbb
sbb
or
push
and
ins
and
imul
ss
jmp
xchg
jg
sub
mov
add
adc
fmul
add
xor
pop
lods
xor
jmp
xor
dec
aas
xchg
inc
aas
and
and
sahf
daa
xor
mov
pushf
jmp
mov
enter
mov
or
mov
inc
jo
sbb
push
and
int
jmp
xor
sbb
fwait
push
out
popa
daa
add
fnstcw
jmp
retf
jnp
cmp
(bad)
add
pop
sub
sbb
adc
inc
sahf
adc
sub
push
les
push
jmp
cli
dec
mov
neg
mov
jb
cmc
ror
jne
add
push
dec
call
push
out
cmp
sbb
data16
or
adc
mov
sub
or
lods
(bad)
xlat
test
aam
test
iret
out
pop
or
fild
inc
inc
push
shl
icebp
ss
pop
mov
adc
inc
push
mov
xor
idiv
mov
(bad)
sub
push
ins
fisubr
into
xchg
jl
mov
test
mov
fnstcw
imul
adc
push
push
add
in
call
sub
adc
dec
stos
inc
add
dec
inc
dec
mov
jae
push
add
or
out
data16
(bad)
(bad)
out
sahf
scas
imul
outs
xchg
inc
mov
data16
rol
push
jmp
ja
add
push
pop
xor
stc
dec
dec
fcmovne
jnp
imul
sahf
dec
pop
add
frstor
cld
push
cwde
mov
mov
(bad)
adc
mov
mov
dec
cli
idiv
dec
add
jb
mov
jl
jb
add
lds
pop
sbb
push
push
inc
aas
cmp
mov
sbb
inc
jb
dec
mov
bound
sbb
xchg
adc
or
add
aam
xchg
xor
aas
push
push
inc
enter
mov
mov
je
lods
jmp
pop
jne
lods
cwde
add
(bad)
jmp
sbb
sar
ds
nop
movs
or
daa
xor
push
dec
js
test
out
xchg
mov
sbb
ret
and
xchg
add
in
cwde
loope
aam
mov
or
mov
xor
outs
ret
push
jecxz
dec
ins
adc
jl
xchg
adc
mov
or
mov
pop
xlat
push
dec
push
scas
retf
dec
jg
sar
pop
repz
cmps
shl
or
int
daa
sbb
retf
cdq
outs
or
aas
push
(bad)
sbb
push
fistp
jo
in
xchg
add
mov
xlat
sub
xlat
sbb
cmps
jge
add
retf
aaa
inc
clc
dec
or
js
jo
hlt
lock
pushw
sti
cs
adc
pop
test
push
xor
stc
mov
movs
xlat
jnp
pop
fidivr
add
or
pop
or
mov
test
inc
sub
es
mov
in
push
jmp
add
pop
mov
jp
cwde
ja
fs
and
pop
push
push
inc
loopne
and
xchg
push
je
add
mul
inc
sbb
push
cmp
stos
add
mov
or
xchg
std
cld
push
icebp
fwait
mov
and
setl
or
and
ret
dec
push
fidivr
ds
lock
loop
data16
push
add
fild
xchg
jp
test
add
stos
inc
mov
inc
repnz
add
sub
out
push
out
je
jb
xchg
mov
cdq
add
push
mov
jle
(bad)
fist
mov
xchg
cwde
pop
pusha
and
or
inc
test
or
vpsubsb
sub
xacquire
add
mov
in
nop
mov
bound
cli
ss
and
dec
mov
movs
jns
rep
add
sti
and
cmp
and
sbb
pop
jb
xchg
mov
loopne
push
xor
imul
lds
and
push
push
xchg
mov
lea
xchg
inc
jno
popf
push
scas
dec
into
xchg
leave
mov
out
cli
outs
loopne
nop
pop
ret
das
xchg
out
sti
aad
cdq
repnz
add
rcr
daa
add
jle
and
jmp
inc
push
mov
sahf
movs
shl
dec
pop
rcr
pop
xchg
gs
push
inc
dec
pop
inc
gs
xchg
gs
jo
ins
xchg
gs
xchg
jb
outs
ins
jb
xchg
in
pop
outs
stc
push
cmp
xor
xchg
in
fwait
je
arpl
test
gs
out
mov
pop
ror
inc
push
xchg
cld
or
nop
mov
jne
adc
mov
add
leave
push
lea
or
bound
movs
push
pop
jbe
stos
lahf
(bad)
arpl
push
jne
mov
push
iret
dec
sub
shl
lods
xchg
sahf
adc
pop
loop
(bad)
pushf
enter
rcr
cs
pop
add
sbb
pop
jb
in
adc
mul
xchg
xor
(bad)
jle
cdq
sub
rcr
mov
cmovle
and
pop
scas
push
pop
push
pusha
xor
dec
(bad)
cli
sbb
outs
in
mov
mov
mov
cli
sub
iret
shl
not
fild
add
or
xchg
xchg
push
mov
mov
mov
loop
fstp
call
sbb
or
dec
out
inc
jge
div
dec
mov
jbe
mov
repnz
pushf
das
jne
fnsave
and
leave
xchg
inc
mov
dec
xor
cdq
sbb
dec
cld
push
pop
data16
mov
mov
loop
sti
pushf
rol
jno
in
fisubr
retf
push
fnsave
ins
adc
mov
add
add
mul
xchg
mov
mov
popf
test
lock
neg
test
adc
xchg
cmp
xchg
mov
mov
add
adc
imul
sahf
add
mov
dec
fimul
pop
and
mov
sbb
push
sub
movs
cmp
es
call
and
or
or
cmp
or
push
mov
ja
mov
xor
xchg
adc
idiv
dec
ficom
neg
push
sub
imul
push
data16
je
push
das
mov
jp
out
retf
sbb
bound
fidiv
jo
and
rol
mov
jmp
sub
stc
ficom
mov
js
push
add
js
jbe
push
mov
pop
cmc
push
out
push
test
dec
or
fcmovnbe
data16
cmp
mov
push
inc
ds
add
push
inc
push
int
ret
adc
inc
int
xchg
add
sti
(bad)
loope
push
adc
push
and
out
call
xor
xor
jns
push
sub
mov
rcl
sti
fcomp
fidiv
dec
icebp
pop
inc
jne
mov
retf
jo
gs
jb
sub
xchg
sub
jo
push
aam
retf
mov
jb
jo
pushf
sub
dec
je
gs
shr
movs
jae
push
test
retf
jb
repz
clc
repz
xchg
add
jns
push
dec
lock
mov
shl
cli
lods
inc
outs
jae
xor
pop
nop
fs
adc
popf
mov
mov
push
shr
into
pop
add
and
ficom
loop
sbb
push
(bad)
inc
mov
push
adc
xchg
adc
mov
sub
addr16
xchg
mov
cld
jmp
fild
mov
sbb
stos
fisubr
shl
data16
sbb
imul
dec
call
push
push
sbb
push
pop
pop
push
inc
call
data16
sbb
push
outs
ins
inc
call
fsub
int
repz
jle
add
ror
xor
int
ss
adc
dec
xor
mov
sbb
adc
and
int
xor
jb
cs
ror
inc
and
dec
xor
mov
ror
imul
xchg
data16
sbb
loop
ficomp
imul
out
xchg
data16
cmp
xor
and
test
retf
xchg
data16
jle
cld
jb
xor
mov
xchg
and
xchg
sbb
(bad)
jg
jae
sub
cmps
frstor
fst
pusha
sub
push
jb
js
(bad)
cmps
mov
dec
xor
jbe
cmp
loop
sti
mov
mov
fiadd
popf
sar
cs
push
repnz
scas
and
(bad)
fild
dec
pop
add
add
add
xchg
shl
bound
push
and
mov
sub
(bad)
movs
not
add
mov
xchg
pop
mov
pop
lods
data16
loop
xchg
cmps
sbb
and
pop
into
add
test
(bad)
aad
push
cs
ds
inc
outs
cmp
push
xchg
mov
mov
mov
jne
mov
xchg
or
jge
cli
push
fsub
dec
repnz
inc
mov
mov
push
push
inc
sbb
dec
fidiv
add
clc
inc
cmp
push
fmul
and
ror
pusha
cmp
icebp
or
mov
cs
mov
enter
and
ins
lea
lea
push
xchg
mov
aaa
stc
xchg
das
sub
or
pop
mov
outs
inc
add
ja
gs
out
sub
std
xchg
push
mov
jg
dec
push
or
(bad)
xchg
pop
out
fimul
push
jb
dec
je
jns
cmc
jecxz
clc
or
pop
push
inc
(bad)
pop
cmp
push
cs
pop
fld
or
adc
jne
cmp
or
idiv
out
cmp
into
mov
loope
movs
loop
cwde
jp
fcmovnb
mov
repnz
or
mov
xchg
out
aaa
adc
lds
sbb
ds
jae
aaa
cmp
jb
sar
xchg
sbb
xor
lahf
mov
movs
inc
enter
xlat
out
test
repnz
movs
(bad)
call
and
or
adc
enter
jae
inc
imul
jg
div
aas
jle
mov
dec
push
scas
rcr
dec
push
call
cmp
mov
and
gs
jae
cmp
popf
inc
out
nop
push
mov
jbe
mov
mov
sub
jae
jae
jae
mov
stos
xor
popa
frstor
imul
and
push
aam
and
test
ror
in
xor
push
mov
cmp
fadd
jecxz
jne
enter
push
mov
cmps
adc
leave
add
inc
call
sbb
pop
gs
pop
shr
aam
mov
jno
cmp
xlat
ss
jg
movs
push
or
data16
add
sub
adc
lahf
mov
or
add
stc
js
aas
xchg
arpl
outs
mov
and
cmc
inc
adc
popf
push
lock
cmps
adc
je
add
ins
sbb
jne
and
in
jl
ret
or
leave
add
add
or
or
fdiv
mov
sbb
mul
adc
pop
xor
cmps
shl
imul
pop
(bad)
aas
mov
or
out
pop
pop
mov
mov
mov
mov
xor
scas
out
sub
outs
push
mov
fnstcw
pop
push
mov
test
push
(bad)
adc
out
imul
adc
sbb
or
add
(bad)
aaa
inc
xchg
add
sbb
loopne
gs
xchg
pop
dec
mov
ss
mov
mov
mov
ror
adc
dec
mov
xchg
inc
cli
adc
and
pop
sub
and
xchg
in
ror
arpl
mov
jns
aaa
xor
je
dec
outs
push
addr16
aas
dec
push
inc
pop
or
adc
cmps
pop
adc
adc
outs
adc
add
loop
dec
dec
sbb
(bad)
aaa
dec
pop
mov
add
jmp
pushf
or
add
add
lahf
test
xor
mov
std
fwait
std
les
inc
or
adc
mov
push
pop
sub
int3
sbb
jmp
add
sar
xchg
jle
xchg
mov
mov
push
push
xchg
jp
or
ret
les
pop
xchg
inc
mov
fcomp
sar
lds
pop
mov
dec
or
pop
sbb
lods
clc
dec
mov
cli
test
or
pop
leave
jmp
mov
enter
mov
fnstenv
(bad)
popa
sti
xor
mov
jne
rol
(bad)
(bad)
(bad)
ins
jmp
iret
sbb
xchg
cmp
cmps
ja
ins
pop
(bad)
xchg
push
ror
adc
cmps
mov
fdiv
les
xor
cli
push
fs
call
inc
cli
mov
aad
fwait
jne
fsubr
sub
cmp
mov
test
fxch
mov
cwde
dec
xchg
sub
sbb
add
clc
mov
ja
cmps
inc
dec
push
cmp
inc
xchg
test
push
dec
sub
xor
out
jae
sub
add
adc
ret
cmp
xchg
mov
add
sub
adc
loop
cmp
inc
out
mov
and
cs
jb
jmp
push
cmp
sbb
xchg
mov
mov
xor
inc
add
inc
jp
sahf
out
mov
sahf
and
sar
and
aam
sar
js
ds
mov
push
xchg
pop
jbe
(bad)
call
jno
mov
or
xor
shl
push
xchg
jb
or
aad
(bad)
std
pop
mov
and
cmps
cwde
push
xchg
pop
and
mov
xchg
mov
inc
mov
and
sub
pop
aas
mov
dec
call
sub
fcom
jge
push
or
mov
dec
add
ror
daa
sub
adc
jl
xchg
repnz
jl
jp
std
iret
nop
cmp
jle
(bad)
fidiv
inc
gs
mov
inc
sbb
pop
stos
xor
xchg
movs
add
xchg
add
sahf
add
(bad)
call
sar
(bad)
sbb
push
test
call
mov
dec
sahf
mov
push
bound
cmp
pop
mov
sbb
pop
test
imul
loop
sbb
js
mov
xchg
xchg
xchg
xchg
xchg
stos
xchg
(bad)
mov
jecxz
loop
inc
outs
and
dec
inc
dec
inc
inc
sub
dec
inc
dec
inc
dec
adc
dec
inc
dec
inc
push
jbe
dec
inc
dec
inc
pop
push
bound
data16
push
dec
inc
dec
inc
outs
xchg
loopne
pop
cmp
sahf
jp
ficomp
fiadd
pop
jmp
fidiv
data16
movs
jns
xchg
mov
push
push
ss
inc
sbb
es
fs
xchg
push
adc
push
dec
ficomp
cdq
jle
iret
jbe
and
xor
dec
outs
ficomp
data16
leave
enter
push
cmp
scas
jmp
xchg
dec
dec
mov
xchg
push
xor
leave
dec
stos
repnz
cli
mov
pushf
fs
add
out
mov
leave
enter
(bad)
xchg
mov
into
xchg
ret
and
xchg
ss
movs
lea
loope
dec
jbe
mov
and
enter
inc
es
xor
mov
adc
jb
sahf
sub
xor
ficom
ss
ds
cdq
xor
(bad)
lahf
sbb
mov
es
into
mov
(bad)
fistp
fwait
xchg
sahf
push
pop
sbb
sbb
ss
(bad)
fadd
pop
fadd
push
push
and
xchg
dec
out
dec
mov
add
pop
add
jge
sub
bound
sub
pop
cwde
mov
xchg
imul
or
in
(bad)
aam
sar
xchg
inc
adc
dec
data16
and
test
jo
sbb
mov
or
fwait
push
inc
adc
adc
test
rcl
aad
sbb
in
push
cs
and
data16
jo
xchg
jb
push
(bad)
mov
call
push
dec
adc
push
ret
mov
or
lock
clc
add
add
push
fisub
adc
and
(bad)
jmp
adc
or
add
or
jmp
out
enter
add
lods
aam
hlt
and
sub
daa
data16
dec
aaa
rcr
mov
xor
pop
ror
xchg
add
rcl
add
adc
sub
aad
aaa
js
fwait
and
mov
mov
add
pop
push
popf
xchg
fimul
fsubrp
adc
xchg
pop
add
pusha
pusha
lds
fidiv
mov
mov
xchg
pop
shl
adc
sub
inc
mov
outs
cmps
inc
not
fwait
ds
adc
add
push
inc
jl
(bad)
jge
dec
(bad)
add
inc
das
stc
mov
push
out
(bad)
lds
xchg
retf
mov
or
and
cmp
sub
jl
xor
ins
mov
pop
sbb
mov
test
neg
cmps
frstor
lods
and
mov
(bad)
retf
sub
jno
out
cld
or
not
mov
out
pop
fwait
icebp
fld
xlat
lea
bnd
xor
add
or
aaa
aam
ror
mov
adc
jne
or
mov
clc
sbb
xlat
dec
add
shl
daa
mov
xchg
push
xchg
inc
inc
add
xchg
int
into
(bad)
jne
pop
les
xchg
mov
fstp
icebp
sbb
stos
jg
fstp
sar
or
cmps
push
fwait
sub
rcl
or
(bad)
dec
sbb
xor
jo
pop
and
neg
jbe
mov
or
and
xor
add
retf
inc
sbb
or
push
add
cli
cwd
scas
mov
jns
scas
ror
lds
dec
jmp
push
mov
mov
retf
pop
jnp
mov
adc
adc
(bad)
mov
pop
sub
adc
jb
pop
xchg
inc
popa
shl
fst
or
xchg
dec
mov
adc
ret
loop
jmp
adc
dec
out
mov
jb
push
push
dec
mov
add
mov
xor
inc
fidiv
xor
inc
jns
xchg
sbb
mov
test
sahf
gs
mov
sbb
data16
push
movs
push
shl
out
jmp
stos
lods
mov
in
jne
aaa
outs
inc
mov
pop
stos
sti
cmps
cmps
mov
jae
dec
push
xchg
fidiv
fcmovnbe
dec
mov
pop
push
mov
(bad)
fbld
or
add
dec
jne
or
dec
loopne
dec
mov
inc
jmp
enter
repz
mov
add
cmp
out
and
in
push
repnz
out
sti
and
sbb
repnz
ds
mov
mov
jo
repnz
ds
fist
scas
inc
or
inc
ret
jns
jecxz
(bad)
ds
and
ret
adc
add
js
cmp
jmp
xor
cwde
pop
cwde
mul
push
push
pop
shr
xchg
pop
pop
or
inc
or
cld
xor
loope
repnz
dec
jmp
or
adc
test
jmp
leave
jecxz
cwde
dec
cs
retf
fisub
sub
xchg
cmps
cmc
into
or
retf
cmps
mov
retf
sahf
call
push
xlat
fisub
or
or
data16
xchg
xchg
or
push
outs
add
inc
or
jg
idiv
add
stos
(bad)
or
sbb
loope
xchg
mov
or
fdivrp
or
and
cli
and
test
movs
or
dec
idiv
and
movs
lods
or
es
add
jnp
out
test
push
retf
test
sub
ret
addr16
clc
jg
jle
mov
jae
(bad)
sub
mov
jle
lahf
shl
xor
ret
mov
lock
lods
dec
sub
mov
mov
test
(bad)
pop
ret
and
push
and
and
or
and
neg
(bad)
mov
stos
bsr
mov
and
dec
cli
mov
leave
mov
pushf
cmp
dec
sub
(bad)
push
xlat
dec
pop
pop
stc
jecxz
pusha
jp
jmp
cmp
mov
jmp
retf
mov
and
jns
mov
adc
xor
mov
fucomp
sub
enter
cs
dec
inc
mov
cld
hlt
mov
cld
and
inc
push
mov
mov
mov
les
push
outs
cs
sbb
jne
cdq
inc
(bad)
jne
adc
lahf
aas
or
inc
js
mov
enter
push
es
sbb
into
sar
jmp
lahf
jle
jge
mov
and
jo
push
addr16
mov
pop
ins
pop
(bad)
out
ss
push
fimul
pop
push
xlat
jmp
in
add
fnstsw
scas
xor
enter
push
cmp
fidiv
retf
xor
inc
sbb
adc
adc
out
push
cmp
shl
add
shl
push
fnstenvw
ret
fnstenv
fadd
jmp
imul
cmps
imul
repz
mov
mov
cs
and
xor
adc
push
sar
dec
mov
call
mov
dec
shl
push
pop
push
rol
adc
xor
fnstenvw
cmp
call
imul
ins
call
nop
dec
shl
jp
ss
shl
cs
imul
imul
imul
shl
cwde
add
cmp
fnstenvw
(bad)
shl
push
mov
xor
call
fcomi
cmp
push
loop
sar
dec
shl
and
push
push
shl
push
dec
rcr
xor
mov
ins
not
fisub
adc
aam
push
add
or
rsqrtps
pop
inc
cmps
imul
imul
cmp
out
rcl
sahf
mov
ds
push
mov
adc
xchg
push
nop
imul
dec
shl
mov
xor
jb
(bad)
lds
fidivr
cmp
pop
dec
mov
jmp
mov
cmovbe
mov
mov
mov
pop
pop
cli
mov
popa
pusha
arpl
imul
outs
outs
jno
(bad)
mov
jne
ja
jns
jp
inc
push
sahf
mov
lods
data16
sbb
(bad)
mov
jae
xor
cmps
test
sub
test
lahf
(bad)
adc
or
jl
jge
aam
aas
test
pop
inc
mov
idiv
mov
dec
dec
dec
dec
dec
dec
inc
and
inc
inc
aaa
(bad)
dec
jmp
or
jns
addr16
out
add
push
dec
jb
xchg
mov
in
mov
scas
add
push
or
das
in
pop
cmp
sbb
(bad)
jl
(bad)
jmp
int3
xchg
add
ss
out
mov
leave
mov
pop
into
xchg
cmp
xchg
int3
add
xor
mov
adc
pop
pop
pop
cmp
jmp
outs
mov
and
add
inc
sar
into
test
jbe
daa
sahf
test
cdq
inc
sahf
xor
mov
adc
addr16
inc
jp
push
cmps
or
int
adc
jle
imul
push
or
pop
or
rcl
xchg
push
mov
xor
xchg
xor
jo
gs
setb
push
sbb
scas
mov
xor
in
and
adc
lock
adc
adc
cs
ds
je
and
leave
imul
mov
inc
or
ss
lods
jp
sbb
xchg
aaa
daa
xlat
or
or
push
(bad)
cmp
fild
and
dec
es
out
sub
jle
nop
sbb
and
nop
cmps
sbb
pop
dec
add
ror
mov
(bad)
sub
adc
fimul
xchg
add
sti
(bad)
pop
adc
inc
push
dec
add
sub
arpl
(bad)
call
fs
push
dec
(bad)
pop
pop
inc
jbe
inc
jo
inc
popa
ins
idiv
pop
push
xor
xor
adc
mov
xor
arpl
cmp
and
sbb
mov
fisttp
adc
cmc
pop
mov
inc
dec
push
data16
in
idiv
jecxz
jbe
outs
jb
outs
mov
bsr
out
outs
imul
xor
cs
outs
jo
ins
jb
(bad)
aaa
test
mov
into
or
mov
ss
loop
adc
push
fidiv
ds
sub
or
pop
data16
pop
daa
gs
and
jbe
call
data16
fistp
jmp
dec
push
push
inc
push
push
lods
arpl
mov
xor
mov
mov
mov
inc
sbb
cmp
pop
push
(bad)
fldcw
sbb
sbb
stc
bound
adc
jne
and
inc
lock
inc
xchg
mov
xor
ins
imul
dec
sbb
mov
inc
scas
bound
setae
pop
idiv
and
inc
add
inc
jne
mov
dec
jo
ret
jge
xchg
out
push
gs
call
rdseed
ret
push
sbb
mov
add
and
push
loope
mov
or
inc
gs
jne
outs
or
jno
inc
popa
mov
push
sub
fidiv
cmp
cmps
sbb
outs
jbe
and
pop
cmp
jno
aaa
in
add
dec
(bad)
xchg
push
and
inc
je
pop
push
jmp
inc
(bad)
clc
ja
push
push
lea
dec
pusha
push
sub
lods
dec
inc
cmp
inc
dec
imul
jo
push
rol
inc
bound
mov
cmp
int3
movmskps
aas
out
outs
mov
push
iret
adc
mov
sbb
icebp
jb
clc
test
fsub
dec
push
outs
jo
dec
addr16
add
sbb
push
imul
retf
jno
cmp
dec
imul
add
sbb
(bad)
push
fistp
sahf
outs
sbb
ret
push
sbb
push
sub
jae
and
dec
pusha
fiadd
jne
mov
(bad)
ins
lahf
adc
mov
mov
mov
popa
ficom
inc
mov
into
add
ins
ins
push
push
popa
cmp
mov
xor
cmc
dec
cs
es
jge
outs
stc
out
ins
sub
sub
sbb
jmp
fnstsw
or
outs
add
lds
imul
mov
or
je
fs
cmp
adc
aaa
ret
ret
loope
jae
pop
fdiv
bound
(bad)
xor
sbb
dec
aaa
dec
in
das
dec
cmc
call
xchg
jae
cmp
out
adc
adc
repz
mov
mov
cdq
lods
pusha
adc
and
jae
cmp
push
sub
inc
add
xor
xor
jge
mov
ins
cmp
xchg
arpl
(bad)
add
dec
int3
fwait
jle
pop
sar
mov
gs
mov
push
dec
loopne
loopne
pop
jae
fcom
arpl
push
sub
dec
pop
pop
test
sbb
pushf
ins
lods
ror
adc
loope
or
pop
mov
mov
and
pop
and
and
jae
dec
iret
inc
pop
sub
xchg
pop
xchg
and
stc
jns
movs
fsubr
add
cdq
xlat
or
pop
dec
dec
inc
push
dec
inc
dec
mov
mov
out
outs
or
pusha
outs
inc
cli
sbb
inc
push
hlt
or
imul
push
out
ja
aaa
mov
nop
dec
adc
inc
arpl
mov
jbe
xchg
pop
inc
outs
inc
xlat
xor
imul
push
pop
or
gs
fdivrp
(bad)
and
jecxz
jnp
add
inc
sbb
jo
or
or
jbe
stc
pusha
(bad)
fcomp
jne
(bad)
mov
jo
xor
test
call
stos
jp
xchg
cli
addr16
cmp
mov
xchg
or
je
jo
pusha
sub
cmp
ret
ins
out
mov
rol
sar
add
movs
movs
xchg
inc
dec
sbb
cmp
outs
imul
dec
icebp
push
clc
stc
aas
dec
xchg
and
xchg
outs
cmp
stc
retf
pop
or
das
adc
dec
add
cmp
mov
sbb
jo
in
ins
mov
(bad)
out
or
out
addr16
mov
dec
popa
pop
data16
dec
lock
and
xor
sbb
int
sbb
fwait
sub
push
sbb
fucomp
and
pop
fwait
or
mov
jae
jae
inc
inc
outs
xor
les
jo
popa
or
cmp
arpl
inc
arpl
sub
push
fcom
mov
or
lds
add
inc
mov
imul
mov
jae
data16
cmp
adc
adc
add
mov
pop
jle
pop
mov
enter
mov
push
jle
stc
test
lea
pop
inc
mov
jecxz
and
inc
inc
inc
push
inc
dec
nop
sub
ret
or
iret
cmp
bound
push
jl
stc
jmp
fs
adc
imul
push
inc
mov
jno
outs
fnstenv
jo
ins
dec
movs
inc
dec
push
fsub
jo
fwait
inc
popf
jg
sti
push
lds
sub
mov
lea
sub
xchg
and
das
push
outs
xor
cmp
aaa
or
out
mov
xor
jmp
lods
fsubr
sbb
sahf
cmp
daa
fcmovnbe
pop
(bad)
mov
mov
out
rol
jno
dec
jns
cmps
cmps
cmp
dec
lds
inc
or
retf
test
pop
pop
mov
lahf
mov
dec
dec
add
dec
aaa
push
dec
inc
loop
push
mov
fistp
scas
push
push
test
ins
pop
cmp
mov
rcl
retf
or
xlat
add
mov
test
push
cmps
les
scas
push
push
ins
mov
mov
jmp
sub
mov
loop
fild
aas
bound
sbb
movs
cmp
(bad)
into
lods
xchg
retf
jmp
in
std
cmp
int3
sub
aad
mov
gs
sti
add
ins
jb
(bad)
jae
test
test
push
gs
data16
call
xchg
or
inc
mov
inc
mov
push
mov
mov
inc
inc
lods
inc
inc
inc
mov
scas
mov
scas
mov
inc
mov
mov
mov
add
std
ja
inc
dec
inc
xchg
cmps
lods
pop
arpl
push
add
daa
cwde
add
inc
jnp
jo
inc
daa
and
push
mov
gs
out
ret
mov
scas
inc
(bad)
(bad)
mov
data16
mov
jae
inc
push
push
dec
scas
mov
mov
add
sti
movs
inc
imul
mov
popa
jmp
leave
scas
imul
cld
jbe
jbe
imul
pop
jbe
ret
out
outs
sbb
dec
scas
jne
(bad)
pusha
jle
js
lods
lods
inc
pop
ins
lods
dec
outs
mov
lods
push
scas
mov
scas
sahf
cmps
mov
sbb
mov
mov
mov
test
repnz
add
push
add
lods
inc
mov
aas
mul
test
test
cmps
outs
add
mov
ins
mov
and
fs
add
loop
mov
jno
fwait
outs
ins
xchg
scas
xchg
mov
(bad)
daa
or
sub
inc
or
push
xchg
das
addr16
leave
xor
stos
jb
or
ss
scas
mov
xchg
arpl
add
dec
mov
ret
scas
push
and
idiv
push
loopne
sbb
jne
mov
jecxz
inc
outs
mov
jmp
rcl
arpl
sub
ins
hlt
mov
lahf
dec
mov
mov
enter
(bad)
jno
sahf
imul
pop
sbb
mov
lods
pcmpgtw
cdq
push
xor
add
scas
(bad)
inc
aas
stos
mov
(bad)
fidivr
fist
cmp
jo
imul
sub
sbb
xlat
fadd
out
mov
(bad)
mov
(bad)
(bad)
repz
sub
stos
arpl
lods
jne
push
imul
adc
mov
ins
popf
cs
pop
sahf
push
jbe
(bad)
sti
scas
daa
push
dec
inc
inc
dec
pop
cmp
mov
push
call
enter
shl
into
fdiv
ret
xlat
jmp
rcr
in
lods
scas
lods
(bad)
jp
push
push
dec
dec
add
pop
nop
fxch
add
cmp
(bad)
sahf
iret
add
or
mov
mov
jmp
push
(bad)
dec
dec
push
push
jge
pmaddwd
dec
(bad)
stos
popa
jo
push
ins
jne
or
mov
ss
add
ror
jno
pop
pop
popa
int3
jnp
pop
cmps
jb
mov
mov
inc
pop
jae
pop
add
push
sub
ins
add
xlat
add
lahf
ins
fwait
sub
(bad)
push
push
push
pop
sbb
fadd
inc
inc
dec
pop
sbb
adc
sbb
push
push
push
pop
pop
and
ins
pop
pop
clc
add
pusha
popa
imul
xor
repz
imul
mov
mov
push
movs
sub
adc
inc
and
inc
jb
mov
loope
outs
mov
mov
cli
rol
pop
push
out
jns
sahf
add
or
jno
sub
push
inc
dec
push
push
push
sahf
(bad)
aad
ins
mov
mov
sahf
arpl
pop
scas
(bad)
push
xor
ret
ror
and
leave
iret
aaa
sahf
inc
adc
std
addr16
data16
leave
out
sbb
jmp
mov
adc
jle
movs
pop
fild
and
push
dec
or
jle
lock
sti
xlat
sub
mov
xchg
push
dec
les
add
xchg
add
push
daa
inc
mov
je
sub
jae
dec
pop
mov
jo
rol
sub
xor
mov
xor
shl
jg
and
lods
movs
in
jne
fld
ss
cmps
and
cmps
ins
add
lods
pop
leave
imul
rol
mov
pop
mov
daa
(bad)
fimul
sbb
ins
cmp
or
xor
xlat
cmp
rcl
sub
jo
sub
and
sbb
pop
stc
inc
lods
cmp
arpl
fstp
std
sbb
aas
jo
imul
sbb
jns
dec
xor
ins
(bad)
xor
lock
inc
scas
ds
add
scas
jo
ss
jae
add
pop
(bad)
es
ins
js
pop
jnp
or
dec
sbb
and
rcl
inc
test
(bad)
mov
inc
push
pop
inc
pop
inc
inc
push
inc
push
dec
dec
push
dec
dec
dec
pop
add
enter
jo
jo
rcl
jo
jmp
mov
call
mov
and
xor
int3
sub
pop
sbb
(bad)
push
adc
push
outs
mov
outs
sub
or
inc
int
aas
repz
mov
mov
xchg
das
movq
and
fnstenv
leave
xor
popa
js
sahf
in
inc
(bad)
push
bound
repz
pop
push
and
aam
lods
push
inc
popa
retf
imul
pop
fimul
inc
push
inc
pop
leave
es
mov
xchg
jnp
xlat
and
sbb
mov
in
xor
das
xchg
gs
(bad)
pop
sbb
inc
dec
sahf
inc
inc
inc
dec
push
inc
dec
dec
(bad)
jecxz
sub
lods
inc
push
inc
ss
push
pop
xchg
or
or
ret
adc
cmc
jns
cmp
cmp
cmp
jge
or
pop
jo
aaa
xor
test
dec
xchg
idiv
out
ror
sub
inc
dec
sub
leave
lds
imul
mov
js
push
push
sbb
xchg
push
push
lock
in
ret
ds
fidivr
rcl
popf
aas
shl
leave
cmp
sub
scas
jae
daa
lds
xor
jo
je
popa
mov
ret
fmul
(bad)
fcmove
shl
aaa
pusha
sar
out
or
into
and
jmp
jo
iret
push
movs
xlat
xor
shl
test
push
retf
test
repz
daa
aaa
mov
arpl
add
cs
out
into
(bad)
jge
lds
push
ror
(bad)
sub
lock
dec
sub
mov
retf
cmp
stc
in
fst
fcomp
mov
scas
push
push
jae
cmp
ins
push
mov
shl
push
dec
fstp
mov
dec
jne
pusha
adc
out
jb
add
repnz
pop
lods
jle
xor
aam
sbb
adc
das
shl
or
sahf
mov
adc
test
jb
stos
jo
inc
mov
and
push
(bad)
inc
(bad)
aas
test
inc
and
cmp
and
mov
mov
inc
add
jmp
dec
push
inc
xchg
push
mov
add
jb
add
push
mov
sbb
pop
push
dec
aaa
mov
add
aas
xor
outs
arpl
mov
dec
pop
sub
mov
xlat
(bad)
pusha
jns
dec
ins
mov
mov
mov
cmp
inc
clc
push
ja
cmp
mov
inc
mov
mov
and
and
mov
inc
jb
(bad)
fist
push
or
mov
jno
sti
add
inc
outs
test
lods
retf
pop
mov
push
add
add
sub
(bad)
inc
and
mov
bound
mov
pop
(bad)
jne
mov
das
add
mov
add
and
(bad)
cs
mov
xor
push
inc
mov
jae
bound
push
aas
sbb
or
les
fild
ja
sub
in
cmp
cmps
add
jae
(bad)
add
pop
jne
push
test
sub
pop
sbb
inc
add
adc
bound
or
sti
pop
scas
mov
outs
mov
ret
push
jl
mov
push
lahf
xchg
fdiv
and
add
sbb
push
or
pop
imul
popf
adc
shl
pop
shl
test
jbe
sbb
iret
mov
mov
mov
(bad)
(bad)
jmp
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
push
jnp
add
and
test
jp
adc
(bad)
(bad)
(bad)
mov
jle
btc
mov
sar
mov
mov
sbb
(bad)
(bad)
(bad)
mov
loope
hlt
mov
imul
adc
mov
sar
pop
scas
sbb
scas
fsubr
(bad)
(bad)
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
push
shl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
(bad)
push
ins
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
cld
(bad)
out
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
lock
(bad)
push
push
mov
into
mov
lea
pop
mov
(bad)
(bad)
call
mov
or
and
mov
repz
in
ins
mov
(bad)
(bad)
jmp
dec
scas
push
scas
(bad)
scas
jmp
mov
mov
mov
mov
mov
mov
mov
call
push
pop
mov
mov
mov
into
and
cmp
leave
mov
mov
(bad)
(bad)
(bad)
push
and
mov
adc
retf
mov
mov
mov
clc
(bad)
aas
clc
mov
mov
mov
jge
add
sbb
xor
xlat
(bad)
(bad)
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
jmp
mov
mov
mov
mov
mov
jl
adc
cmp
xlat
mov
(bad)
(bad)
(bad)
mov
cmps
mov
ins
mov
mov
mov
mov
mov
xor
std
mov
inc
mov
(bad)
call
jle
or
xor
mov
(bad)
jmp
jbe
mov
cmp
xor
(bad)
push
out
scas
loope
scas
imul
mov
mov
mov
mov
mov
pop
adc
ss
sbb
mov
push
inc
inc
shl
mov
mov
mov
mov
inc
add
(bad)
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lock
mov
mov
mov
mov
mov
dec
in
icebp
mov
fcomip
fcomip
mov
mov
dec
dec
mov
mov
mov
mov
pop
in
icebp
mov
cmp
(bad)
mov
lfs
mov
mov
mov
mov
mov
mov
xor
aaa
sbb
mov
outs
arpl
add
out
stc
jg
test
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
dec
mov
xor
iret
mov
in
mov
fcomip
(bad)
mov
fs
or
and
xor
lds
sahf
mov
(bad)
mov
dec
mov
jae
jbe
add
push
pop
and
shl
cld
(bad)
mov
cli
mov
dec
mov
leave
mov
(bad)
mov
cmp
mov
sbb
ret
mov
jmp
(bad)
(bad)
mov
popf
mov
add
mov
fwait
mov
adc
sar
xchg
loope
add
jbe
xchg
inc
rcl
jno
mov
adc
and
shr
mov
xchg
imul
leave
mov
mov
mov
(bad)
mov
(bad)
shl
nop
mov
mov
mov
mov
mov
mov
mov
(bad)
mov
mov
mov
pop
xor
push
mov
mov
mov
mov
(bad)
jmp
fwait
mov
adc
xor
loope
out
(bad)
mov
mov
jo
jns
add
cs
jmp
(bad)
mov
mov
mov
or
sub
push
ja
push
bsr
scas
mov
popa
mov
adc
(bad)
(bad)
(bad)
mov
dec
mov
outs
mov
int3
mov
lock
(bad)
fild
sub
xor
cmps
mov
mov
ret
dec
mov
mov
fistp
aaa
std
mov
mov
mov
idiv
mov
mov
xchg
outs
inc
icebp
add
in
xor
gs
mov
cmp
mov
add
(bad)
push
pop
mov
mov
mov
mov
mov
mov
mov
mov
es
(bad)
inc
call
mov
mov
mov
mov
mov
mov
call
lock
mov
mov
in
mov
mov
mov
mov
inc
mov
mov
mov
mov
outs
adc
sub
cmp
loop
mov
mov
mov
mov
mov
mov
jmp
mov
add
mov
mov
(bad)
clc
mov
mov
popf
mov
mov
(bad)
(bad)
(bad)
jg
mov
sbb
cmp
aam
fnstsw
clc
mov
jmp
mov
xor
mov
mov
mov
cli
push
mov
xor
sar
clc
mov
sub
mov
pop
push
adc
and
in
cli
dec
mov
call
mov
dec
mov
jmp
inc
lds
mov
xchg
mov
inc
dec
mov
add
cmp
ret
mov
aam
repz
mov
inc
(bad)
(bad)
push
pop
scas
jb
jnp
adc
cmp
fwait
enter
pop
push
cli
mov
mov
mov
mov
xchg
mov
mov
mov
mov
inc
sar
push
or
sbb
iret
mov
mov
fisub
jmp
bound
pop
push
mov
mov
mov
mov
shl
pop
pop
ret
jmp
mov
inc
retf
retf
pop
and
repnz
scas
pop
push
adc
pop
jl
mov
mov
xchg
mov
mov
mov
and
dec
cld
xor
inc
mov
mov
mov
mov
mov
mov
jmp
cli
add
sub
leave
mov
mov
mov
jbe
cmp
stc
sti
mov
mov
repz
or
pop
xor
mov
sbb
cmp
jmp
cmc
mov
jg
mov
mov
mov
mov
push
scas
pop
and
xchg
mov
jae
add
dec
mov
(bad)
mov
(bad)
jmp
mov
lods
xchg
mov
dec
mov
fnstcw
add
add
(bad)
jg
test
ja
add
retf
mov
pop
mov
cmp
xor
mov
mov
mov
mov
mov
mov
popf
shl
pop
loope
mov
pop
nop
mov
mov
mov
mov
outs
mov
jmp
xor
cli
loopne
mov
pop
jbe
add
mov
mov
mov
mov
mov
pop
loope
aas
out
mov
mov
mov
arpl
mov
sub
daa
mov
xor
aas
push
mov
retf
mov
mov
mov
add
pop
mov
mov
mov
scas
loope
push
aas
and
push
mov
mov
mov
ret
and
adc
call
mov
fidivr
cli
mov
inc
lahf
mov
sub
xlat
mov
repz
jg
jo
add
sbb
mov
fwait
mov
or
adc
popw
loopne
pop
mov
mov
push
jno
cld
inc
retf
mov
out
idiv
(bad)
push
(bad)
pop
cld
jg
add
xchg
dec
scas
add
lahf
adc
cmp
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
icebp
(bad)
(bad)
push
clc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
div
outs
test
scas
mov
call
js
mov
mov
mov
mov
loope
adc
imul
dec
mov
jno
aad
loope
lahf
or
movs
pop
shr
sub
xchg
mov
mov
jno
mov
aaa
out
push
push
cs
push
mov
mov
mov
mov
mov
lock
pusha
xor
push
iret
jle
add
jge
pop
add
mov
adc
mov
jle
inc
mov
fisttp
fistp
mov
mov
pop
loop
(bad)
mov
sbb
mov
mov
xchg
les
mov
and
jo
sti
add
mov
sti
enter
jge
(bad)
scas
cs
ficom
inc
sub
sub
add
push
and
sub
or
add
or
add
call
xor
mov
loope
out
popf
and
gs
jo
jb
gs
in
out
jbe
mov
aaa
inc
dec
and
ins
sbb
push
sbb
dec
pop
push
dec
dec
add
mov
pop
fcmove
inc
or
mov
pop
int3
pop
dec
mov
js
add
aas
inc
push
pop
push
in
aam
lock
arpl
inc
inc
aas
scas
in
pop
pop
inc
inc
pop
pop
push
dec
dec
pop
push
push
inc
push
inc
inc
add
sub
test
pusha
test
push
push
ins
pop
xchg
xchg
outs
shl
or
inc
mov
les
aas
push
dec
push
inc
inc
inc
inc
(bad)
fild
add
xlat
stos
inc
pusha
adc
dec
dec
ret
outs
sub
mov
dec
arpl
popa
outs
popa
in
jecxz
out
jb
push
xor
adc
add
and
cmp
pop
adc
inc
pop
out
sbb
cmp
sub
inc
push
dec
inc
outs
aas
push
iret
inc
inc
push
inc
fwait
int3
sbb
ret
push
pusha
mov
pusha
sbb
xchg
pop
xor
stos
scas
aaa
iret
inc
test
popa
ror
pop
inc
mov
mov
(bad)
inc
xchg
dec
cs
inc
adc
push
ja
outs
rcl
pop
(bad)
cs
and
sub
jecxz
or
and
test
aas
iret
aas
pop
adc
inc
aas
push
inc
mov
test
adc
push
outs
push
sub
inc
mov
fild
iret
(bad)
fs
loop
scas
push
jecxz
jo
dec
xchg
dec
mov
mov
lea
popa
rcl
push
dec
mov
outs
and
mov
inc
jnp
mov
test
adc
push
rol
das
das
outs
add
dec
xchg
and
or
pop
mov
ins
adc
pop
aas
gs
shl
inc
popa
ror
adc
lods
dec
jnp
outs
pop
add
iret
push
inc
jo
shl
je
imul
ins
aas
pop
aas
imul
pop
adc
(bad)
fiadd
inc
inc
(bad)
pusha
mov
lahf
aas
test
aas
adc
aad
dec
ins
lahf
aas
popf
shr
mov
inc
or
test
aas
dec
mov
push
pop
(bad)
adc
outs
imul
pop
(bad)
test
outs
xor
dec
inc
bound
add
lds
or
ins
bound
mov
aas
or
test
out
das
mov
cmp
jg
xor
add
pop
and
add
ret
inc
iret
stos
rol
inc
push
das
dec
in
push
pop
push
cs
mov
inc
adc
ds
jg
cs
test
shl
js
mov
pop
ss
aam
adc
xor
mov
lahf
out
push
dec
cmp
das
das
jae
mov
mov
jg
gs
rcl
ret
push
je
ins
pop
adc
out
mov
xchg
imul
pop
mov
(bad)
outs
xchg
icebp
jb
inc
sbb
sub
fsub
mov
aas
movs
cdq
adc
and
or
lahf
dec
dec
inc
pusha
mov
pop
sbb
xor
or
add
add
bound
add
add
push
in
mov
mov
jns
and
cmps
fisttp
mov
cld
sbb
mov
pusha
push
jle
cmp
rol
pop
inc
mov
inc
(bad)
outs
mov
sbb
in
call
xchg
cld
mov
push
ficomp
mov
xor
repnz
rcr
fsubp
stc
jae
jle
jne
xchg
pop
stc
data16
mov
add
aas
pop
add
jl
mov
pop
imul
les
mov
dec
rcr
js
jo
xor
shr
pusha
pop
dec
shl
inc
cmp
sub
push
sbb
ins
call
loopne
dec
shl
aam
mov
je
add
push
cmps
imul
call
pop
or
xor
or
aaa
or
imul
add
adc
nop
pop
movs
or
and
pop
inc
inc
push
ins
fdiv
push
xorps
pop
imul
push
and
and
jo
jb
pop
popa
ret
xchg
or
pusha
nop
add
movs
sahf
mov
or
into
aas
xlat
sbb
pop
iret
xchg
mov
dec
inc
aam
rcr
sbb
shr
xor
add
ror
push
add
and
mov
and
xor
and
xchg
xchg
add
push
xor
js
or
hlt
push
sbb
add
inc
in
pop
inc
imul
jo
imul
xor
lock
adc
sbb
sbb
hlt
pop
imul
imul
call
push
push
(bad)
lock
or
dec
inc
dec
shl
mov
(bad)
sub
add
es
or
adc
fs
push
add
adc
arpl
out
sub
cmp
adc
or
adc
mov
inc
add
lods
sbb
cmps
imul
cmps
imul
imul
cmps
imul
cmps
imul
imul
cmps
imul
cmps
imul
imul
fcmovne
xchg
add
(bad)
out
pop
dec
(bad)
call
test
daa
xor
imul
push
push
mov
mov
pop
js
in
cmp
xlat
pusha
mov
push
clts
add
pop
ror
outs
push
fsub
add
dec
push
mul
shl
xchg
mov
imul
das
outs
dec
ins
stos
mov
mov
add
cld
xor
mov
inc
sbb
xchg
es
cmps
mov
add
mov
rol
add
aas
mov
sbb
pop
jb
push
inc
outs
mov
(bad)
cmp
enter
jg
dec
sti
sbb
pop
add
add
cli
or
or
in
cmp
ret
mov
adc
stc
daa
aas
and
sbb
into
sbb
(bad)
(bad)
(bad)
call
dec
inc
and
sahf
mov
sub
inc
rcr
and
sbb
add
xlat
xchg
inc
idiv
(bad)
dec
add
inc
stc
mov
adc
mov
dec
js
(bad)
(bad)
(bad)
inc
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
(bad)
(bad)
(bad)
(bad)
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
(bad)
(bad)
push
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
adc
push
movs
mov
popa
sar
mov
and
cmp
jmp
xchg
clc
repz
mov
sub
fwait
xchg
and
and
mov
add
aas
jno
or
mov
pop
fs
dec
(bad)
(bad)
(bad)
(bad)
call
aas
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
(bad)
(bad)
(bad)
push
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
inc
add
in
das
dec
pop
jmp
xchg
xchg
out
aas
xchg
(bad)
(bad)
(bad)
(bad)
call
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
mov
aas
popa
push
pop
sar
jl
mov
das
lea
mov
inc
inc
aas
movs
jmp
cmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
(bad)
call
arpl
cmp
mov
cmp
std
xlat
cmp
(bad)
(bad)
jg
rcr
mov
jecxz
cmps
add
mov
aaa
fld
cmp
(bad)
(bad)
push
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
(bad)
(bad)
(bad)
call
adc
xor
push
scas
into
imul
faddp
jge
call
mov
idiv
call
cmp
push
and
dec
dec
gs
std
or
pop
ficomp
frstor
fmul
gs
push
xlat
mov
punpckhdq
gs
ins
imul
pop
jbe
push
inc
adc
ja
jae
mov
repnz
fs
dec
gs
dec
or
cld
repz
movhps
xor
aaa
fidiv
inc
das
out
push
ja
mov
pop
sub
in
xor
out
lds
mov
add
sub
mov
(bad)
dec
cld
daa
add
rol
nop
add
daa
push
add
or
outs
out
inc
nop
push
jo
popa
pop
xchg
and
or
mov
dec
add
push
add
sbb
add
ss
in
lods
dec
sbb
pop
add
rdmsr
enter
add
or
push
pop
add
jp
add
dec
add
and
jne
aaa
pop
rcr
outs
gs
popa
fiadd
add
aad
mov
add
cmps
add
jnp
imul
sar
adc
sbb
ror
inc
add
sbb
jnp
adc
pop
add
pop
pop
sub
xchg
push
cmp
pop
push
dec
in
fxch
push
(bad)
rcr
pop
add
xor
fwait
add
loopne
lock
ja
ins
dec
push
add
das
outs
inc
imul
dec
clc
sar
ret
xchg
mov
sbb
outs
adc
add
add
retf
in
ins
cmp
test
bswap
dec
test
mov
sbb
fs
rcr
sub
jl
test
mov
fwait
movs
fld
clc
jg
js
xchg
push
xchg
xor
ret
add
add
into
es
dec
jecxz
(bad)
cmp
inc
cs
jmp
sub
add
push
sbb
add
dec
mov
add
mov
and
rol
add
xchg
aaa
mov
daa
mov
lock
idiv
jo
js
jp
add
sbb
pusha
xchg
push
pop
sub
xchg
sbb
inc
pop
fadd
xchg
out
mov
inc
add
add
fnstsw
add
loop
imul
iret
outs
in
add
(bad)
js
or
mov
cvtpi2ps
(bad)
jbe
jge
mov
(bad)
sub
movs
fs
mov
sbb
inc
xor
mov
bound
retf
pop
sar
int3
aas
ret
ins
arpl
mov
add
jmp
fsubr
or
mov
pop
mov
mov
mov
(bad)
test
or
jle
mov
mov
adc
jg
or
retf
and
jmp
mov
sbb
or
jnp
or
idiv
inc
jp
jp
dec
or
ja
gs
sbb
sahf
dec
push
inc
push
(bad)
push
inc
push
inc
push
out
pusha
pop
fimul
js
mov
or
popf
ja
or
ja
xchg
out
inc
mov
sbb
add
push
or
or
dec
mov
jno
or
loopne
or
aad
cmc
clc
out
mov
mov
cs
sahf
xor
sbb
fiadd
ja
dec
into
sbb
push
(bad)
inc
into
mov
nop
jno
nop
xchg
mov
mov
sbb
iret
jle
xchg
jg
loop
push
cs
add
mov
cmp
call
loopne
call
les
enter
mov
add
jg
mov
cli
pop
mov
mov
imul
inc
or
xchg
jb
push
sbb
sub
es
jmp
dec
ja
add
sbb
add
sbb
jmp
(bad)
mov
(bad)
push
mov
(bad)
sbb
sub
cs
test
mov
or
push
cmp
paddq
push
pop
paddusb
in
inc
pop
push
push
dec
jae
outs
daa
or
sub
data16
pop
ins
push
outs
add
(bad)
cmp
inc
lock
lock
or
dec
(bad)
ficomp
ja
add
adc
and
sahf
out
mov
(bad)
bound
fisub
or
mov
jp
add
pop
mov
push
mov
daa
lock
or
jae
vmread
in
add
addr16
js
scas
daa
dec
push
jae
addr16
out
add
lock
xor
mov
xlat
jg
add
jae
mov
es
jae
sub
jb
jbe
ja
mov
dec
inc
add
add
mov
add
dec
pop
pop
cmp
fidiv
or
neg
jp
loopne
(bad)
in
cli
gs
push
sub
push
or
jns
lods
inc
nop
xchg
iret
test
(bad)
inc
mov
xor
push
sbb
add
dec
push
adc
scas
bound
sti
push
xchg
(bad)
out
jl
jle
das
add
jbe
fs
dec
aas
lds
mul
out
popa
sbb
outs
daa
aad
ja
sub
add
lea
lahf
xchg
mov
xchg
in
mov
dec
cmps
out
mov
pop
outs
xor
inc
mov
mov
push
push
and
ja
lods
pop
repz
pop
cmp
push
sub
cmp
xlat
pop
(bad)
ficomp
jp
dec
mov
in
cmps
sub
pop
or
inc
scas
das
mul
mov
das
push
sbb
push
xchg
sbb
das
mov
ja
mov
nop
xchg
pop
sti
xor
cld
sub
jp
pop
and
sub
xchg
je
mov
jo
or
retf
pop
pop
outs
loop
lock
fsubr
pop
push
call
cwde
repnz
stos
mov
push
fs
jbe
adc
clc
jbe
push
cmp
(bad)
sti
pop
ja
rdmsr
or
inc
push
sbb
push
or
pop
dec
push
or
push
sbb
shl
outs
mov
in
pop
xchg
push
push
bound
std
ds
out
mov
add
jle
xor
lock
lock
imul
mov
adc
dec
xchg
fimul
lock
jbe
xor
jae
mov
xchg
push
or
addr16
adc
pop
or
pop
dec
jb
sbb
sub
dec
scas
fdivrp
mov
push
xchg
aaa
mov
sti
mov
jecxz
es
out
lahf
cwde
pop
addr16
xchg
mov
pop
cmp
orps
sahf
or
cli
test
xchg
test
push
jae
es
arpl
js
pop
cld
test
fdiv
call
psraw
pop
stc
pop
arpl
fisttp
scas
mov
sbb
jle
out
clc
setnp
(bad)
dec
mov
mov
push
loopne
inc
jcxz
aad
aaa
cmp
jg
es
jmp
rcl
jne
sahf
pop
in
xor
jecxz
arpl
mov
pop
mov
fistp
or
inc
xchg
gs
pop
mov
(bad)
lods
lea
and
imul
ja
pop
out
mov
xor
dec
dec
hlt
stc
push
jnp
xchg
mov
sbb
push
pop
out
into
lahf
in
or
dec
pop
aas
push
lock
out
es
or
scas
xchg
or
fst
xor
(bad)
push
or
mov
jl
jg
gs
addr16
add
fdivr
out
push
jnp
push
jae
lea
pop
das
loope
pop
or
dec
leave
(bad)
adc
add
call
pop
mov
aas
(bad)
pop
cs
call
adc
add
xchg
pop
pop
aaa
pop
jle
ss
jmp
sti
ja
(bad)
push
xor
(bad)
fnstsw
dec
add
adc
cli
push
les
dec
push
in
jne
scas
mov
inc
retf
push
push
pop
dec
push
sub
push
addr16
das
adc
das
sbb
and
cli
pop
cmp
sbb
cmp
xor
push
ins
js
push
scas
ret
loope
retf
sti
jb
inc
dec
fimul
pop
movs
bound
pop
jbe
jno
stos
dec
fisttp
add
jb
sahf
xchg
adc
mov
pop
out
jp
mov
inc
scas
ud2
stos
in
sbb
stos
mov
repz
and
mov
stos
cdq
push
or
push
fcmovnbe
outs
dec
push
push
(bad)
jne
xor
fistp
xor
inc
(bad)
xor
and
pop
mov
out
or
mov
nop
ja
out
test
arpl
xor
mov
pop
mov
addr16
adc
out
and
loopne
add
xor
jge
mov
push
add
sbb
cmp
mov
add
ins
push
outs
xor
dec
add
imul
add
je
les
xlat
imul
popa
pop
dec
xor
and
gs
ins
adc
sbb
fistp
sbb
or
push
movups
xchg
xor
outs
out
xchg
push
sar
push
pop
and
retf
push
in
adc
adc
mov
ror
add
lods
or
xor
rol
mov
sub
psubusw
or
aas
mov
sbb
mov
push
daa
jae
cmp
cmp
test
jns
inc
and
aas
pop
dec
jae
popa
fs
shr
dec
mov
adc
movs
loope
sbb
pop
ret
push
mov
sbb
xchg
sbb
fs
push
push
xchg
bound
lods
gs
pop
into
dec
sub
cmp
popa
fwait
dec
jno
lods
nop
inc
add
or
add
lds
rcl
fist
je
bound
push
xchg
xor
arpl
jno
test
outs
pop
(bad)
movs
movs
mov
ds
mov
push
clc
popf
push
outs
adc
ins
mov
mov
call
inc
daa
hlt
mov
fs
data16
push
imul
adc
jae
adc
jne
loop
lds
test
push
mov
js
shl
pop
push
fmul
in
lock
out
jne
and
inc
lods
ins
dec
fsubr
ins
test
call
dec
and
mov
fwait
mov
mov
test
pop
mov
and
fisttp
out
cli
mov
inc
imul
ja
(bad)
in
ins
popa
or
div
ins
pop
arpl
jle
pop
mov
pop
stos
xor
ret
xor
sahf
mov
dec
inc
sbb
imul
mov
sbb
push
mov
or
dec
arpl
mov
dec
iret
fld
push
xchg
jl
dec
gs
sti
sub
or
imul
les
fs
imul
adc
cmp
das
sub
fsub
pop
adc
dec
jb
sub
add
ins
sub
repz
stos
sbb
add
fs
ins
mov
xor
push
xor
mov
lea
sbb
dec
pushf
sbb
gs
repnz
xor
sbb
pop
mov
popa
mov
imul
pop
mov
sub
and
mov
outs
mov
add
adc
sub
xor
mov
add
loope
inc
fadd
pop
push
or
xor
inc
sbb
mov
push
cmp
sbb
mul
mov
imul
(bad)
adc
ja
and
push
add
int
je
rol
imul
retf
sub
and
dec
jb
xchg
and
data16
dec
fsubr
in
sbb
dec
fsub
gs
and
xor
jne
jle
jmp
adc
cmp
xor
or
outs
or
rol
inc
rcpps
test
jle
fs
jb
and
(bad)
xchg
fs
mov
sub
je
outs
adc
add
lahf
sub
popa
addr16
fstp
inc
imul
mov
ret
popf
jns
dec
pop
ss
repz
pop
xor
and
push
movs
xor
cmp
sbb
cmp
inc
mov
dec
push
add
je
push
jo
dec
inc
ins
add
icebp
adc
sbb
std
inc
dec
inc
jecxz
pusha
je
ins
and
sub
xchg
cmp
mov
pop
popa
push
je
in
je
stc
fdivr
mov
dec
or
ret
push
int
gs
movs
add
or
or
push
shr
jne
(bad)
ss
pop
js
dec
shr
jae
outs
dec
jg
into
sbb
cmp
iret
xor
(bad)
dec
cmp
mov
lock
aaa
(bad)
dec
jae
pop
es
movs
mov
aam
and
and
ret
bound
idiv
add
push
xor
mov
and
cs
enter
fs
jae
shl
mov
sub
xlat
ins
scas
sets
pop
xchg
gs
or
xchg
pop
int
outs
or
or
or
mov
cwde
out
std
pop
mov
ds
xor
pop
xor
jno
mov
xchg
jo
jbe
fs
(bad)
push
ins
xchg
shl
popa
sbb
adc
lock
jae
fabs
pop
(bad)
adc
out
arpl
jnp
nop
loop
or
pop
lods
mov
outs
push
outs
mov
enter
jo
in
pushf
fsubr
sbb
aaa
adc
ret
hlt
adc
and
adc
fs
jo
je
stc
push
mov
sub
adc
adc
(bad)
adc
sbb
cmp
xchg
scas
inc
lock
sub
mov
mul
push
inc
mov
popf
jmp
das
leave
push
(bad)
adc
or
push
fistp
cmp
(bad)
push
rcr
jae
adc
cmp
xor
loop
ficom
cmps
ins
outs
in
jmp
lods
and
mov
je
and
outs
ja
sub
add
cmp
shr
sub
rcl
(bad)
loop
div
mov
mov
enter
cdq
fs
rcl
arpl
dec
sub
bound
cmp
cli
jno
sbb
add
jg
out
inc
xor
adc
sbb
mov
ffree
call
cmp
in
sub
mov
add
inc
es
jno
mov
jmp
lock
(bad)
gs
jbe
sub
jp
inc
aaa
nop
jbe
xchg
push
push
inc
cmp
mov
pop
push
and
mov
in
cmc
and
pusha
add
inc
mov
repz
jbe
inc
sbb
push
sub
add
jae
and
adc
imul
jmp
stos
jb
mov
dec
jge
push
mov
cmp
out
xchg
loopne
sbb
fld
inc
cwde
inc
inc
sbb
sub
dec
shr
(bad)
inc
sub
mov
xchg
mov
icebp
and
lahf
mov
imul
and
(bad)
mov
icebp
add
imul
test
ror
inc
stos
fadd
push
mov
or
sub
in
fcomip
and
push
adc
jne
push
sbb
jmp
add
je
sbb
pop
call
inc
sbb
mov
xchg
bound
outs
test
(bad)
mov
push
aam
enter
call
push
clc
out
imul
fwait
inc
stos
push
cmp
inc
fisub
repz
(bad)
rcl
pop
lds
test
(bad)
out
inc
push
fild
xor
cwde
inc
pusha
dec
cmp
out
push
scas
sbb
das
cmovge
pushfw
inc
pushf
add
mov
xchg
push
adc
rcr
mov
les
inc
jb
pop
xchg
test
inc
push
mov
sidtd
add
ins
pushf
mov
daa
test
int
in
pop
or
push
inc
pop
adc
(bad)
add
mov
adc
dec
lock
add
adc
cmp
cs
repz
add
add
jns
icebp
pusha
cs
popa
mul
mov
pop
add
out
mov
shr
dec
in
push
mov
jb
push
and
xchg
sahf
mov
add
add
and
xchg
and
add
test
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
