mov
outs
sbb
dec
push
push
(bad)
push
pop
cmp
dec
cmps
push
lea
nop
ficomp
push
add
mov
push
popf
or
aaa
jb
push
push
lea
fisubr
rcr
rol
cmp
shl
push
mov
cmp
push
xchg
addr16
rcl
push
pop
cmp
add
shl
clc
sbb
pushf
loope
ds
cmc
sub
sbb
dec
push
ror
inc
or
push
and
cmp
dec
loope
test
inc
or
adc
push
add
popf
mov
fadd
inc
pop
push
push
push
lock
mov
mov
push
lea
lea
fcmove
mov
push
popf
ret
cs
adc
or
fdivr
inc
xchg
sub
iret
mov
lea
pop
sti
enter
dec
push
fistp
xchg
cmp
dec
xchg
push
cs
adc
dec
mov
fmul
dec
mov
add
lea
fidiv
shr
dec
or
mov
dec
or
fidiv
adc
jb
xchg
push
rcl
fisub
movs
xor
fdiv
inc
dec
mov
push
(bad)
sbb
out
dec
add
loopne
jb
ficomp
inc
push
adc
shl
inc
push
xor
loope
dec
mov
push
cmp
test
mov
ror
je
dec
dec
push
xchg
iret
dec
adc
pop
adc
(bad)
enter
mov
out
fst
mov
dec
push
push
out
not
repnz
push
ror
pop
xchg
clc
dec
cmps
push
lea
mov
stc
popa
dec
lods
mov
mov
popf
xchg
test
mov
push
(bad)
sbb
mov
push
rcl
or
inc
nop
push
jbe
xchg
iret
dec
push
es
pop
push
lea
mov
lea
adc
push
lea
mov
lea
push
add
je
in
ficom
lea
test
dec
dec
aaa
add
push
push
lea
mov
add
test
ja
xor
mov
sbb
lea
push
cmp
outs
ficom
lea
ds
iret
dec
test
push
lods
mov
mov
ja
or
lods
mov
ret
dec
or
mov
push
pop
bound
scas
frstor
xlat
nop
jmp
dec
fst
ret
popf
pop
pop
push
gs
addr16
lea
dec
add
nop
popa
lods
fwait
retf
(bad)
dec
push
cmp
and
cmp
retf
jbe
sub
xor
push
add
xchg
stos
movs
mov
xchg
push
mov
mov
mov
or
jbe
ror
or
dec
mov
or
mov
lea
mov
mov
fld
jne
loopne
frstor
popf
xchg
xor
push
mov
retf
out
dec
push
ror
and
lods
inc
cmps
cmp
dec
push
movs
push
fwait
mov
dec
adc
or
fisubr
repnz
fistp
mov
jne
stc
fcmove
mov
xchg
xchg
add
out
add
loop
out
jbe
lea
lea
push
cmp
ds
mov
add
pop
movs
stc
dec
das
xchg
data16
es
mov
inc
jb
add
lea
mov
add
loope
jno
push
movs
stc
dec
das
xchg
push
popf
cs
imul
push
lea
stc
fcmove
mov
pop
or
sbb
add
dec
add
shl
stos
mov
push
loop
in
push
push
lea
push
lods
clc
inc
loope
test
xchg
xchg
test
cmc
pusha
jb
push
lods
clc
pop
loope
xchg
and
lods
clc
pop
loope
jno
cmp
lea
xchg
jb
loop
lea
push
push
test
cmc
pop
mov
retf
fisttp
or
sbb
add
popf
mov
push
adc
outs
lahf
push
jne
push
push
lea
shr
mov
push
mov
enter
movs
mov
sub
push
bound
pop
fmul
mov
stos
push
push
push
pop
xor
pop
xor
push
ds
adc
popf
fwait
jb
sahf
outs
mov
stos
mov
imul
jmp
ds
enter
xor
mov
out
fcmove
mov
fidivr
lods
int
and
ds
dec
cmp
push
test
(bad)
inc
mov
shl
jb
scas
or
lods
jb
cmps
lods
jb
push
mov
add
das
xchg
add
out
rcl
xlat
nop
fadd
sti
jmp
dec
pop
push
gs
imul
ds
mov
xchg
pop
mov
loope
cmc
(bad)
pop
push
add
pop
mov
xchg
push
test
(bad)
inc
mov
shl
jb
and
lea
movs
pop
xchg
stos
movs
mov
or
fistp
push
lea
das
fs
push
ret
enter
dec
iret
sbb
mov
push
add
pop
push
jb
cmc
push
add
aaa
mov
inc
or
add
dec
add
sbb
push
or
fimul
(bad)
fdiv
imul
dec
push
fdiv
inc
movs
add
push
add
jmp
xchg
je
aaa
cdq
add
inc
fimul
fdiv
add
xchg
bound
dec
jp
fcmovu
mov
push
test
inc
or
fisubr
dec
add
dec
push
loop
in
or
enter
lea
movs
ins
test
inc
movs
add
push
add
jmp
xchg
je
aaa
cdq
add
inc
fimul
fdiv
add
xchg
bound
iret
dec
xchg
push
test
imul
adc
xchg
mov
sbb
push
ds
fcom
pop
fst
jno
push
mov
pop
scas
jg
push
push
jb
xchg
iret
dec
xchg
movs
push
xchg
push
test
mov
in
jg
push
pop
xor
inc
mov
push
mov
or
mov
stos
xchg
push
jno
fcom
ret
mov
sbb
add
dec
add
sbb
mov
fidiv
out
dec
mov
sub
push
lods
clc
inc
jbe
jle
push
add
jb
pop
scas
push
push
adc
fisub
cwde
mov
out
mov
lods
ffree
inc
scas
into
sbb
xchg
mov
lods
push
(bad)
cmp
lea
mov
push
out
dec
adc
or
fisubr
dec
add
push
adc
xor
add
aaa
stos
add
loope
test
xchg
xchg
out
je
in
add
sbb
clc
inc
je
out
imul
jp
pop
push
lea
out
or
adc
fadd
sti
add
sbb
es
les
movs
and
xchg
push
jbe
loopne
dec
push
daa
xchg
and
dec
dec
fcom
or
xchg
dec
jb
push
fidiv
out
dec
rcr
mov
inc
imul
rcl
inc
nop
fadd
sti
shl
dec
add
xor
push
hlt
retf
fmul
shr
mov
xchg
push
sub
not
enter
mov
pop
push
gs
ins
push
(bad)
ret
jp
ins
push
lea
pop
push
inc
adc
ds
add
lea
sbb
(bad)
(bad)
pop
mov
lea
nop
mov
xlat
(bad)
enter
clc
js
mov
in
in
adc
ror
cdq
pop
push
push
lea
nop
or
ins
add
nop
adc
dec
ret
test
pop
mov
jne
fld
jb
das
xchg
rcl
xchg
mov
jnp
push
lea
dec
add
or
mov
sahf
xchg
iret
dec
loope
lea
push
push
outs
bound
icebp
(bad)
pop
push
mov
adc
pop
push
(bad)
rcr
aaa
ficom
(bad)
ret
push
ret
mov
lods
adc
xlat
lods
adc
sbb
lods
adc
test
(bad)
push
mov
lods
add
lahf
mov
in
loope
(bad)
(bad)
fwait
mov
mov
add
adc
out
jbe
jle
push
fimul
stos
loope
jb
test
mov
ror
and
enter
or
push
sub
push
(bad)
ret
push
ret
enter
enter
mov
xchg
imul
fcmove
mov
cs
adc
mov
push
push
push
ss
or
push
lea
ss
lahf
outs
or
mov
push
stc
addr16
mov
sahf
xchg
iret
dec
xchg
push
jns
sbb
dec
or
and
dec
or
push
sub
ficom
(bad)
ret
add
das
mov
lahf
mov
out
test
push
or
mov
loope
jb
fnsave
(bad)
rcr
push
div
or
push
out
add
ds
shl
xchg
mov
dec
push
push
lea
xchg
sub
sbb
ins
jb
ds
mov
mov
test
lods
adc
dec
xchg
push
jge
xchg
imul
push
lea
fcmove
mov
mov
xchg
(bad)
pop
mov
lods
add
popf
cs
imul
lods
jae
dec
repnz
pop
push
ffree
lods
sbb
push
push
(bad)
ret
or
lds
lea
xchg
clc
pop
fst
(bad)
pop
push
jb
push
push
push
push
adc
xchg
loope
jb
and
data16
(bad)
enter
or
push
stc
inc
mov
add
jnp
add
add
jmp
lods
jae
xchg
nop
push
push
jmp
mov
lods
push
outs
and
dec
push
or
adc
nop
fadd
sti
shl
dec
add
adc
stos
mov
xchg
mov
movs
pop
push
push
jp
xchg
push
jne
(bad)
enter
mov
dec
push
push
test
loop
lea
fidivr
add
lea
mov
push
jmp
(bad)
(bad)
sbb
mov
es
rcr
nop
jg
pop
mov
push
push
cs
push
push
push
fmulp
dec
pop
add
fld
lea
xchg
test
out
jne
fst
lea
into
jp
loope
dec
aas
adc
call
mov
xchg
xchg
push
ss
stc
pop
mov
lock
pop
push
add
xchg
push
cs
mov
mov
dec
lea
mov
dec
daa
mov
push
push
push
(bad)
dec
and
dec
popf
ss
lahf
xchg
loop
push
push
retf
rcr
ja
push
or
lods
jb
popf
ss
popf
cs
push
jb
push
cmp
cwde
outs
push
lea
xchg
stos
jp
xchg
push
popa
ret
lea
push
cmp
and
push
lea
jbe
and
push
mov
add
jmp
sbb
(bad)
dec
fmul
inc
xchg
xchg
push
and
or
mov
xchg
out
xchg
push
jge
dec
lods
clc
inc
loope
jns
and
dec
push
movs
push
pop
mov
dec
and
fmulp
mov
push
mov
jns
dec
and
mov
inc
or
add
cmps
iret
lea
mov
ficomp
inc
dec
or
add
mov
jecxz
jae
push
cmp
sub
(bad)
ret
jb
loope
or
neg
jbe
loope
test
push
push
xor
mov
loope
jb
fst
adc
lea
push
mov
gs
push
(bad)
ret
jb
loope
add
fisubr
mov
lods
push
(bad)
adc
mov
lods
adc
mov
lea
mov
xchg
(bad)
cmp
mov
lods
fucomp
and
dec
dec
fdiv
push
loop
dec
ds
push
(bad)
(bad)
fwait
(bad)
jb
loope
in
in
adc
mov
add
jae
inc
mov
push
push
(bad)
ret
test
push
push
or
pop
add
mov
lods
fucomp
and
dec
dec
fdiv
push
loop
dec
inc
fwait
test
cmp
sti
pop
push
jb
fisubr
mov
ror
xchg
xchg
retf
stos
jb
loope
push
jp
fimul
fwait
lahf
jb
loope
fsincos
pop
push
or
jg
lea
(bad)
xor
loopne
dec
dec
fdiv
push
loop
dec
inc
fwait
jbe
dec
push
xor
jae
push
pop
or
mov
push
or
pop
lea
push
in
in
adc
mov
add
call
pop
add
js
xor
loope
jb
cmc
repz
pop
cmp
mov
jae
and
rcr
lea
daa
mov
lods
int
xchg
(bad)
jo
loopne
frstor
dec
jecxz
dec
mul
dec
inc
adc
or
loope
jb
sbb
sti
pop
push
(bad)
enter
mov
push
xor
mov
loope
jb
fst
mov
ficom
lea
(bad)
sahf
dec
push
push
out
jbe
jle
push
cmp
sti
pop
push
gs
lods
jb
ficomp
mov
push
lea
cmp
mov
out
iret
dec
xchg
out
jo
loopne
fisub
popf
xchg
xor
pop
dec
into
mov
jae
pop
push
lea
mov
jbe
jg
push
cmp
sti
pop
push
movs
jmp
jb
ficomp
mov
push
lea
cmp
mov
cli
mov
jo
loopne
fisub
popf
xchg
xor
pop
dec
into
mov
jae
pop
push
lea
push
in
in
adc
dec
idiv
js
loope
dec
inc
and
and
cmp
pop
push
add
jecxz
jae
dec
mov
push
(bad)
adc
mov
push
stc
inc
(bad)
and
push
out
jbe
jg
push
cmp
sti
pop
push
gs
lods
jb
ficomp
mov
push
lea
cmp
mov
cli
mov
jo
loopne
fisub
popf
xchg
xor
pop
dec
into
mov
jae
pop
push
lea
mov
out
jbe
jg
push
cmp
sti
pop
push
gs
pop
mov
loope
lea
adc
or
loope
jb
push
push
lea
pop
cmp
mov
scas
adc
mov
xchg
xor
pop
dec
into
mov
jae
pop
push
lea
push
in
in
adc
dec
test
inc
and
and
cmp
pop
push
add
jecxz
jae
dec
mov
push
(bad)
adc
mov
push
clc
push
je
in
in
adc
mov
add
aad
lods
jb
ficomp
mov
push
lea
adc
or
loope
jb
push
push
(bad)
repz
jns
dec
jmp
lods
jae
xchg
nop
push
out
mov
jae
push
cmp
jbe
cmp
mov
adc
mov
push
stc
outs
je
in
in
adc
dec
neg
jns
loope
dec
inc
and
mov
push
lea
ror
pop
push
(bad)
enter
mov
push
clc
pop
fcom
(bad)
pop
push
(bad)
(bad)
fwait
scas
jb
loope
gs
lods
jb
cmc
inc
dec
dec
push
iret
dec
pop
repnz
pop
push
cs
adc
dec
push
xchg
or
idiv
dec
push
ficom
(bad)
fimul
(bad)
push
push
ret
or
xchg
(bad)
push
mov
lods
ffree
lods
ficom
xchg
push
jno
ficomp
sbb
(bad)
fwait
jmp
mov
add
into
(bad)
lods
jae
dec
fdiv
push
loop
dec
outs
pop
push
lea
pop
or
xchg
loope
add
aaa
mov
popf
neg
loopne
(bad)
enter
mov
push
add
push
lea
in
dec
push
movs
outs
ret
jb
loope
dec
sub
loopne
call
lods
mov
push
add
mov
jmp
lods
jb
xchg
(bad)
push
mov
lods
ffree
lods
fist
mov
retf
mov
cmp
into
xchg
mov
outs
lea
push
add
loop
dec
inc
fwait
push
mov
fimul
fwait
loope
jb
xchg
(bad)
pop
mov
lods
ffree
lods
sbb
pop
scas
add
jmp
lods
jae
xchg
nop
push
ss
or
push
lea
(bad)
gs
lods
ffree
fwait
xor
add
jae
add
ret
test
push
push
or
pop
add
imul
xchg
loope
jb
xchg
imul
fcmove
mov
mov
loop
or
push
lea
mov
add
cli
lods
jae
dec
fmul
mov
xchg
imul
fcmove
mov
xchg
or
push
lea
mov
push
out
out
lods
jae
push
lods
cmp
dec
jecxz
dec
xchg
(bad)
jo
loopne
frstor
popf
xchg
or
loope
fs
sbb
mov
add
aaa
mov
loope
popa
mov
lods
add
jecxz
jae
dec
cmp
mov
jecxz
jae
dec
mov
push
(bad)
dec
(bad)
fimul
(bad)
sbb
dec
xchg
(bad)
popa
mov
lods
add
xchg
mov
lods
ffree
stos
ret
jb
loope
popa
pop
xchg
mov
dec
push
push
lea
loope
jb
repnz
add
cmps
push
lea
mov
jb
loope
push
je
add
ret
add
pop
mov
popf
cs
adc
sti
dec
push
push
push
out
mov
jae
push
ficom
(bad)
fimul
fwait
sti
jb
loope
in
in
adc
mov
add
jae
inc
mov
push
push
(bad)
ret
test
push
push
or
orps
mov
lods
ffree
fwait
sti
jb
loope
push
jae
add
ret
test
push
push
push
out
mov
jae
push
mov
out
neg
loopne
push
or
aaa
mov
pop
mov
js
or
loope
jb
push
fmul
out
lods
jb
fwait
shl
loope
or
loope
jb
xchg
out
mov
lods
push
cmps
push
fisubr
sbb
dec
in
test
data16
jae
popf
mov
mov
push
jle
xchg
out
and
shl
fidivr
xchg
push
jno
(bad)
bound
fst
lock
pop
or
pop
push
(bad)
enter
mov
push
add
xchg
lods
jae
dec
cmp
into
xchg
lods
jae
dec
fdiv
dec
push
push
add
loop
data16
or
inc
ficomp
pop
push
(bad)
enter
mov
push
or
push
lea
(bad)
in
loopne
frstor
push
lods
cmp
fbstp
loope
push
jae
add
ret
add
pop
mov
popf
cs
adc
push
dec
push
push
jmp
mov
pop
or
push
lea
out
std
mov
lods
lea
lea
fimul
and
scas
jb
loope
std
mov
lods
gs
lods
jb
ficomp
mov
xor
loope
jb
(bad)
push
push
ret
xor
loope
jb
adc
add
push
dec
into
out
lods
jae
pop
push
lea
mov
loope
and
lods
jae
dec
cmp
mov
jecxz
jae
dec
mov
push
(bad)
mov
lods
jb
(bad)
lods
int
and
ds
or
stos
aaa
jb
loope
or
loope
jb
xchg
(bad)
jne
loopne
add
sbb
gs
(bad)
enter
xchg
aaa
mov
je
add
jecxz
jae
dec
cmp
mov
jecxz
jae
dec
mov
push
(bad)
push
ficom
(bad)
fimul
mov
push
stc
dec
xchg
(bad)
add
shr
fild
(bad)
and
lods
jae
daa
(bad)
and
lods
jb
xchg
(bad)
and
shr
fild
mov
xchg
(bad)
add
(bad)
sub
shr
fild
(bad)
popa
mov
lods
push
into
cli
lods
jae
daa
(bad)
popa
mov
lods
or
scas
jb
popf
out
jge
loopne
lea
sbb
jb
lahf
nop
mov
push
push
push
into
imul
mov
pop
push
test
jae
push
daa
add
loope
push
jnp
add
loop
push
shl
lahf
loope
jb
push
push
into
retf
mov
fdivr
into
(bad)
lods
jae
dec
fdivr
into
ret
mov
fdivr
xchg
aaa
mov
xchg
(bad)
ins
mov
lods
ffree
lods
fild
out
jnp
loope
rcl
xlat
nop
fadd
sti
cmp
xchg
xchg
iret
dec
jbe
popf
or
aaa
sub
push
push
lea
jp
test
push
push
(bad)
enter
sbb
fst
imul
arpl
add
cli
xchg
enter
lea
cs
imul
mov
popf
xchg
mov
popf
outs
or
sbb
mov
pop
lods
add
cli
mov
jb
loope
data16
push
ins
dec
push
push
(bad)
rcr
sar
push
ret
es
lock
xchg
stos
jp
xchg
push
push
shl
ss
retf
mov
push
loop
jb
loope
rcl
(bad)
fmul
mov
push
push
sbb
fcom
sbb
push
inc
add
das
stos
add
jbe
dec
or
cmp
outs
pop
push
out
je
gs
push
(bad)
ret
adc
(bad)
ret
jne
(bad)
mov
push
sbb
sbb
jb
fwait
jp
xchg
push
jno
fild
ret
test
mov
fwait
jp
xchg
push
jne
fbld
call
mov
lock
pop
push
add
pop
fwait
add
fst
out
push
mov
push
dec
dec
pop
cli
int3
dec
sbb
dec
xchg
mov
int
pop
push
cmp
adc
push
pop
dec
inc
xchg
ror
push
push
add
push
lea
ja
(bad)
adc
or
adc
push
lea
bound
and
(bad)
sbb
stos
sbb
add
out
push
mov
adc
dec
sahf
pop
xchg
in
push
int
sbb
into
pop
push
lea
push
int
pop
push
mov
adc
popa
out
push
mov
cld
int3
dec
cmc
push
jb
es
int3
dec
cmps
movs
sti
dec
push
movs
ins
ret
add
test
mov
lea
loope
cmc
(bad)
pop
push
jnp
push
cld
int3
dec
push
daa
mov
mov
xor
mov
xchg
xchg
or
dec
push
repz
pop
push
das
pop
mov
lods
jb
call
push
mov
sbb
mov
lahf
mov
or
dec
sbb
jnp
push
cld
int3
dec
push
daa
mov
mov
or
mov
pop
xchg
in
push
test
pop
cli
int3
dec
mov
mov
jnp
push
cld
int3
dec
pop
daa
mov
mov
or
pusha
or
dec
sahf
pop
xchg
in
push
mov
push
lea
fiadd
(bad)
fimul
lods
jb
call
push
(bad)
aas
sbb
mov
sahf
pop
xchg
in
push
pop
(bad)
bound
fist
dec
push
push
lea
loope
cmc
(bad)
pop
push
jb
es
int3
dec
lahf
mov
or
dec
pop
mov
sub
mov
lea
imul
push
jmp
jnp
push
jp
xchg
push
imul
mov
lea
div
out
push
push
mov
mov
adc
dec
mov
push
mov
adc
dec
mov
push
mov
adc
dec
loope
cmc
(bad)
pop
push
push
dec
es
int3
dec
sbb
das
dec
push
push
or
in
lea
push
mov
pop
push
mov
das
xchg
fs
pop
push
(bad)
retf
adc
or
jae
sbb
add
xchg
mov
(bad)
pop
push
cmp
add
aaa
dec
shl
popa
push
jb
fwait
mov
push
push
icebp
or
pushf
lea
sub
mov
(bad)
dec
lea
inc
push
cld
int3
dec
pop
mov
dec
or
mov
int3
dec
pop
push
mov
pop
push
data16
push
mov
pop
push
add
das
fwait
add
sahf
pop
xchg
in
push
int
or
push
lea
sahf
xchg
dec
push
movs
ins
ret
add
loope
cmc
(bad)
pop
push
jnp
push
cld
int3
dec
pop
pop
or
out
adc
cmp
push
fiadd
(bad)
fimul
push
std
cli
pop
push
test
push
push
(bad)
ret
pop
mov
cmp
push
shr
xchg
push
jg
test
jle
ficom
dec
adc
add
push
or
dec
loope
test
pop
push
or
arpl
mov
push
es
pop
cli
int3
dec
pop
push
test
pop
push
push
jbe
cli
int3
dec
sbb
cwde
retf
arpl
lock
sbb
or
push
data16
jns
inc
push
cld
int3
dec
sahf
jmp
inc
push
push
jp
xchg
push
popa
ret
jge
xchg
push
das
scas
mov
lea
imul
sbb
enter
jg
imul
in
push
clc
dec
popf
push
test
pop
push
mov
div
mov
shr
dec
cmc
dec
add
pop
fcomp
rcr
mov
cli
int3
dec
loope
sub
mov
pop
sub
ret
ins
ret
add
popf
jbe
jmp
push
lea
xchg
inc
sub
xchg
push
cwde
jecxz
adc
or
repnz
pop
push
mov
adc
int
ins
mov
xchg
iret
dec
xchg
mov
sub
or
push
add
pop
fwait
add
inc
or
add
cmp
dec
vcvtdq2pd
ret
mov
ficom
lea
adc
in
dec
push
fimul
or
inc
sub
push
cs
scas
adc
ret
mov
mov
mov
cmp
sbb
dec
mov
cmp
sbb
dec
mov
fidiv
out
dec
and
dec
dec
mov
adc
nop
fadd
sti
shl
dec
add
jmp
xchg
xchg
nop
jb
xchg
iret
dec
jbe
inc
or
fmulp
jecxz
lods
cwde
pop
scas
adc
dec
push
push
or
xlat
lea
ss
dec
xchg
push
and
push
jmp
mov
ficom
(bad)
fimul
jnp
lea
shr
fwait
push
jmp
jl
push
jp
xchg
push
adc
lahf
push
xchg
enter
lea
sbb
push
movs
outs
ret
add
fst
push
dec
push
push
(bad)
(bad)
sbb
inc
or
fcmove
stos
loope
cmc
(bad)
pop
push
dec
push
scas
push
lea
shl
and
out
dec
push
push
push
cmps
push
add
das
mov
xchg
cs
imul
mov
dec
cmp
push
cli
add
jmp
dec
push
movs
outs
ret
add
xchg
push
adc
je
add
mov
push
out
je
jb
cli
mov
add
mov
fmulp
sti
dec
cmp
loope
cmc
(bad)
pop
push
out
loope
sub
and
cmp
lock
(bad)
ret
push
ret
clc
scas
mul
dec
push
lods
mov
ficom
(bad)
(bad)
pop
mov
add
cli
add
jmp
mov
std
fcmove
(bad)
xchg
nop
rcl
xchg
mov
cmps
ss
enter
outs
jne
push
jno
pop
mov
push
(bad)
movs
call
ret
push
push
adc
enter
popf
ret
push
cs
ret
out
je
out
xchg
push
jne
xchg
push
gs
es
push
fmulp
mov
imul
cs
int3
dec
xchg
push
jns
adc
inc
addr16
push
jp
loop
enter
jno
fld
add
dec
in
mov
push
push
add
loope
cmc
(bad)
pop
push
jb
push
cmp
or
or
ror
pop
push
lea
nop
fadd
sti
shl
dec
add
push
push
adc
jp
pop
cmp
outs
jb
push
push
clc
jg
in
jl
outs
jb
push
push
clc
arpl
in
jl
outs
jb
push
push
clc
push
adc
leave
jl
outs
jb
push
push
clc
pop
adc
leave
jl
outs
jb
push
push
or
push
lea
push
popf
(bad)
pop
push
mov
or
pop
es
enter
cmp
loope
cmp
xor
cmp
push
inc
fwait
les
add
in
pop
daa
xchg
or
push
lea
test
cmp
push
ds
hlt
push
cmp
inc
mov
imul
inc
test
mov
push
lea
or
out
adc
mov
lahf
iret
dec
dec
mov
cmp
lods
out
or
cdq
pop
enter
dec
add
inc
push
(bad)
ret
push
and
fcomp
pop
sahf
dec
pop
test
pop
dec
pop
stos
push
mov
xchg
push
popf
(bad)
pop
push
mov
shl
xchg
push
jns
or
dec
push
push
imul
enter
cdq
retf
and
xchg
aas
adc
enter
mov
dec
xchg
iret
dec
sahf
outs
mov
imul
mov
shl
ret
gs
sahf
outs
mov
adc
popf
mov
mov
sub
jne
not
std
sbb
and
mov
push
push
lea
adc
push
or
pop
xchg
mov
jae
shl
popf
xchg
mov
sbb
dec
push
push
or
cs
stos
(bad)
push
(bad)
ds
fidiv
not
ja
push
clc
sbb
shl
ret
gs
adc
mov
mov
mov
push
lea
jl
and
fcomp
pop
sahf
dec
pop
test
pop
dec
(bad)
shl
xchg
push
jne
pop
inc
add
sbb
mov
add
sbb
dec
push
shl
ret
or
add
shl
ret
gs
sahf
outs
mov
pusha
add
popf
mov
mov
daa
xor
lea
push
mov
push
push
lea
push
mov
push
push
push
fcompp
pop
sbb
enter
dec
or
dec
push
adc
mov
push
lea
sar
mov
lods
rcl
xchg
mov
cmps
adc
fistp
push
cmc
(bad)
pop
push
push
ds
mov
mov
and
ds
adc
mov
push
lea
mov
lea
inc
retf
rcr
mov
fsub
lea
xchg
xchg
pop
cmp
push
xchg
outs
dec
xchg
outs
cwde
imul
jne
mov
adc
lods
jb
loope
cmc
(bad)
pop
push
cmp
dec
mov
push
push
lea
cmp
dec
push
push
stc
imul
add
sbb
push
add
mov
push
sub
mov
mov
xchg
ret
sbb
lgdtd
dec
xchg
push
jne
in
push
push
(bad)
into
fidiv
les
ret
add
add
push
jmp
or
shl
ins
fmul
and
jg
les
ret
push
dec
into
shl
xchg
push
jne
sbb
(bad)
pop
dec
mov
dec
stos
add
loope
cmc
(bad)
pop
push
push
and
jne
dec
dec
mov
shl
xchg
push
jne
sbb
lea
add
inc
test
popf
mov
push
jb
or
inc
or
mov
push
(bad)
adc
adc
nop
fadd
sti
jmp
outs
push
push
gs
inc
push
lea
dec
add
stos
out
jb
fwait
mov
mov
push
gs
push
lea
push
(bad)
retf
ins
push
dec
into
std
mov
pop
xchg
or
popf
push
cmc
(bad)
pop
push
mov
mov
push
clc
pop
adc
or
and
xchg
aas
add
xor
push
cmp
mov
mov
jp
iret
dec
sbb
(bad)
mov
in
mov
and
adc
lahf
iret
dec
dec
mov
push
fidiv
push
sbb
mov
lea
jle
loope
out
add
add
xchg
outs
dec
xchg
(bad)
sub
or
and
push
mov
push
fidivr
push
cwde
imul
bound
mov
dec
push
sahf
outs
mov
adc
shl
jb
push
pop
cmp
in
mov
(bad)
lods
jmp
mov
pop
cmp
in
mov
pop
or
loop
push
add
retf
mov
push
cmc
(bad)
pop
push
or
mov
pop
or
pop
push
lea
xchg
(bad)
push
xchg
loope
jb
xchg
iret
dec
xchg
(bad)
pop
xchg
loope
add
fistp
add
sbb
or
fimul
mov
loope
lods
and
inc
lea
mov
add
popf
movs
mov
mov
adc
mov
inc
lea
into
jns
loope
sti
pushf
xchg
(bad)
or
mov
push
cmc
(bad)
pop
push
push
out
repnz
add
push
in
loope
lea
lods
cmp
adc
add
push
push
out
sahf
lea
push
fcom
retf
shr
les
(bad)
push
jg
shr
and
lods
jb
pop
adc
mov
push
lea
mov
loope
lea
pop
add
sbb
dec
push
fimul
retf
shr
push
push
(bad)
retf
jge
push
and
gs
in
jb
lahf
(bad)
popa
movs
loope
lea
push
push
into
xchg
lea
xor
cmps
icebp
lods
jb
cwde
push
jb
loope
mov
ficom
lea
mov
or
(bad)
jle
loope
dec
test
ds
xchg
(bad)
jns
loope
push
out
jmp
mov
cld
push
add
fistp
mov
loop
sbb
lods
jb
mov
outs
dec
xchg
mov
xchg
ins
dec
sbb
rol
movs
loope
or
jmp
dec
ins
in
dec
xchg
iret
dec
sahf
out
outs
xchg
loope
lea
inc
cmp
xchg
mov
fwait
repz
mov
fimul
or
dec
push
push
add
or
dec
sbb
or
shr
loope
sbb
shr
xchg
(bad)
sbb
mov
(bad)
sbb
xchg
(bad)
sbb
into
mov
jb
xchg
(bad)
pop
xchg
loope
add
ret
mov
dec
add
cmps
mov
dec
lods
cmp
mov
(bad)
pop
xchg
loope
mov
mov
adc
into
fimul
xchg
loope
mov
ret
mov
out
outs
xchg
loope
lea
fnstsw
lea
jae
dec
xchg
(bad)
cmp
add
fisub
mov
lea
lods
sbb
shr
ficom
lea
jle
loope
dec
test
shr
loope
sbb
in
mov
cld
push
push
pop
or
or
ficomp
mov
push
inc
lea
mov
add
scas
mov
pop
xchg
or
push
lea
test
xlat
mov
push
push
push
into
jmp
jbe
push
lea
pop
or
iret
and
dec
test
mov
or
dec
push
push
push
mov
sbb
or
fwait
lock
mov
push
push
out
mov
sbb
cmp
out
sbb
ret
gs
sahf
imul
not
jae
es
ret
gs
sahf
imul
not
jae
daa
test
xchg
iret
dec
adc
sbb
shr
or
push
mov
ror
call
adc
mov
push
lea
inc
push
dec
sub
dec
push
shl
xchg
pop
mov
xchg
loope
leavew
xchg
movs
inc
xchg
(bad)
jns
loope
mov
xchg
inc
retf
mov
mov
and
lock
mov
push
cmp
lock
mov
xchg
outs
dec
xchg
out
cwde
out
les
ja
push
lea
push
clc
arpl
push
lea
dec
or
dec
push
push
clc
pop
sahf
outs
mov
push
push
lea
pop
or
dec
push
push
stc
dec
pop
mov
cs
loope
test
push
push
stc
push
adc
or
loope
push
xchg
loope
jb
retf
mov
and
dec
inc
sahf
out
outs
xchg
loope
lea
pop
shr
mov
xchg
(bad)
jns
loope
dec
test
not
stos
sbb
shl
lods
jb
sbb
into
jmp
movs
loope
lea
push
call
pop
push
fs
jb
fwait
mov
cmp
mov
dec
push
sahf
outs
mov
adc
mov
adc
xchg
mov
cmps
and
fistp
scas
mov
in
sub
loop
lahf
dec
push
xchg
enter
lock
xchg
data16
xchg
pop
push
push
lea
xchg
xchg
mov
arpl
iret
dec
cmps
pop
lea
mov
add
sahf
iret
dec
cmps
push
lea
mov
add
aaa
xchg
add
loop
mov
imul
pop
test
retf
iret
push
push
push
dec
push
in
pop
xchg
push
cmp
test
clc
dec
sahf
push
jbe
cmc
pop
or
ss
jmp
aas
push
lea
scas
push
lea
push
cmp
stos
mov
or
lea
ds
xor
retf
pop
test
inc
test
mov
push
lea
aas
cmp
push
test
push
push
(bad)
enter
dec
sahf
push
jbe
xchg
push
jno
fsub
ret
cmp
push
add
popf
mov
enter
inc
popf
test
jne
arpl
push
in
cmp
push
jnp
pop
xchg
clc
inc
popf
mov
enter
dec
sahf
push
jbe
xchg
push
jno
fsub
ret
cmp
push
test
push
push
lea
push
lea
push
or
es
jmp
push
pop
cmp
movs
lea
xchg
sbb
enter
enter
lock
pop
femms
loope
jb
pop
stos
lea
test
jne
pop
inc
pop
ds
enter
xchg
pop
stos
mov
arpl
enter
inc
ret
jp
rcr
enter
jno
test
mov
push
push
lea
sbb
enter
cmp
in
rcl
xlat
nop
fadd
sti
add
sbb
push
ds
call
add
jmp
fimul
loope
lea
cmp
dec
xchg
mov
or
mov
xchg
inc
sahf
outs
mov
imul
push
lea
pop
sub
rep
or
push
out
dec
adc
or
fisubr
sbb
dec
imul
dec
push
add
nop
add
xchg
(bad)
jno
loope
add
lahf
movs
in
jge
push
add
adc
or
lods
jb
mul
dec
push
fimul
dec
(bad)
lods
jb
test
push
ror
xchg
stos
movs
mov
xchg
mov
mov
xchg
rcl
sti
add
stos
push
pop
ret
retf
repz
push
cmp
inc
je
gs
dec
push
lea
nop
fadd
sti
shl
dec
add
lds
stos
movs
mov
xchg
out
jbe
lea
cmp
and
push
(bad)
retf
loope
test
xchg
xchg
push
mov
es
enter
aas
sbb
enter
(bad)
retf
stos
dec
push
bound
jge
lea
push
fimul
(bad)
lea
mov
push
jmp
pop
dec
cmp
mov
xchg
push
jno
out
jne
fnstcw
(bad)
enter
aas
push
fmul
inc
xchg
push
jge
sbb
enter
jge
imul
mov
dec
mov
push
push
loop
test
out
push
pop
mov
(bad)
sbb
add
dec
add
sbb
in
movs
outs
ror
cmp
and
cmp
dec
je
out
jbe
lea
lods
clc
inc
not
fimul
fimul
out
jne
fnop
jae
imul
cmc
add
dec
je
out
dec
mov
or
inc
cmp
dec
xchg
push
add
pop
shl
ret
(bad)
(bad)
dec
scas
fistp
loope
sbb
pop
scas
frstor
sbb
xchg
mov
movs
add
sbb
push
or
ins
push
lea
push
lea
or
adc
nop
fadd
sti
add
sbb
or
stos
add
cmps
imul
push
movs
push
pop
stos
add
je
in
push
push
lea
sbb
lea
push
cmp
ds
mov
add
popf
lods
jb
sbb
mov
push
cmp
dec
push
fidiv
out
dec
and
fmulp
mov
lods
clc
pop
loope
sbb
dec
push
(bad)
ret
jne
fldenv
or
inc
mov
push
shr
push
loop
jmp
add
enter
lea
mov
push
loop
dec
dec
(bad)
fdiv
adc
mov
nop
retf
pop
icebp
mov
jbe
jg
push
mov
in
in
adc
dec
popf
xchg
popf
jp
mov
xchg
sbb
jg
push
mov
push
(bad)
push
adc
rcr
mov
xchg
add
loop
jb
adc
mov
and
add
lea
popf
xchg
test
or
fisubr
dec
add
sbb
push
test
imul
loop
jmp
pop
jmp
push
push
push
jp
loop
enter
jno
and
mov
mov
std
sbb
and
mov
(bad)
ror
pop
push
cmp
shl
mov
sub
or
mov
aam
inc
or
fisubr
repnz
sbb
jmp
xor
mov
xchg
nop
jmp
pop
mov
dec
popf
ss
dec
popf
ss
popf
imul
int3
inc
or
jmp
lahf
mov
or
dec
js
enter
push
push
push
pop
cmp
sbb
enter
or
dec
pop
lea
in
mov
in
dec
out
ror
pop
push
popa
retf
arpl
cmps
sbb
push
jp
fimul
jae
mov
arpl
inc
adc
int
xchg
push
jae
xor
push
dec
(bad)
fimul
test
jae
test
mov
pop
mov
clc
dec
popf
ds
cmps
mov
dec
push
movs
outs
ret
add
sahf
ds
sahf
cs
imul
mov
xchg
nop
push
push
adc
xchg
push
test
movs
fwait
ja
loopne
push
push
cmp
mov
in
push
enter
gs
enter
shr
push
enter
add
cmp
push
movs
fwait
adc
fsubr
pop
mov
(bad)
es
lea
nop
push
push
adc
push
fcomp
inc
adc
fild
or
push
add
das
mov
inc
or
sbb
repz
inc
int
mov
rcr
pop
push
sbb
or
ret
sbb
fisttp
ret
sbb
fisttp
ret
sbb
fisttp
ret
sbb
fisttp
ret
sbb
dec
mov
jne
pop
push
sbb
daa
mov
dec
fisttp
ret
sbb
fisttp
push
sbb
fisttp
ret
sbb
fisttp
fimul
mov
sbb
dec
push
push
aad
mov
sbb
or
ret
mov
fist
ret
push
add
ret
sbb
fisttp
ret
sbb
fisttp
ret
sbb
fisttp
ret
sbb
fisttp
ret
sbb
fisttp
push
jo
push
inc
int
inc
ret
ins
xor
or
xchg
iret
dec
out
iret
dec
push
push
shl
xor
repz
inc
int
mov
mov
mov
sbb
fisttp
ret
sbb
fisttp
push
sbb
fisttp
ret
sbb
fisttp
ret
sbb
fisttp
ret
sbb
fisttp
ret
sbb
or
ret
sbb
fisttp
ret
sbb
dec
mov
jne
mov
sbb
fisttp
push
sbb
fisttp
ret
sbb
fisttp
ret
sbb
fisttp
ret
sbb
fisttp
ret
sbb
daa
mov
fisttp
ret
sbb
fisttp
ret
sbb
jo
scas
jb
fld
add
popf
mov
push
push
adc
mov
xchg
pop
mov
das
movs
add
aaa
mov
js
enter
fs
push
push
(bad)
retf
loope
push
fmul
inc
pop
mov
jb
inc
fimul
dec
lods
or
dec
fcom
jae
cmc
jns
jl
push
(bad)
ret
xor
hlt
sbb
dec
adc
fdiv
movs
je
(bad)
enter
je
(bad)
fdiv
sbb
cmp
xor
inc
push
push
push
push
jge
adc
popf
inc
test
jae
aam
popf
rcr
std
sbb
test
psubusb
inc
pop
mov
cmp
lods
movs
adc
pop
in
push
push
(bad)
(bad)
pop
movs
frstor
adc
enter
enter
ffree
pop
movs
cmp
lods
mov
push
push
add
aaa
mov
je
add
call
push
jge
test
dec
push
ror
xchg
mov
xchg
push
popa
ret
dec
dec
js
enter
enter
dec
inc
pushf
pop
jb
loope
rcl
xlat
nop
fadd
sti
shl
dec
add
adc
mov
gs
push
(bad)
icebp
adc
mov
dec
mov
in
dec
mov
jp
ret
add
xchg
push
(bad)
ret
mov
rcl
lea
pop
mov
dec
push
fidivr
out
fimul
pop
mov
mov
pop
gs
lods
jb
ficomp
mov
xchg
or
push
lea
in
movs
fbstp
xchg
pop
and
inc
or
ficomp
xchg
cs
in
movs
fbstp
xchg
xchg
sbb
push
fisub
je
out
xchg
mov
dec
sbb
faddp
dec
push
ror
mov
fcmove
mov
inc
or
enter
xchg
mov
lahf
rcl
lea
ror
mov
repnz
xchg
dec
into
sahf
iret
dec
daa
push
jno
(bad)
repnz
xchg
push
out
call
inc
ins
xchg
pop
xchg
mov
push
push
out
sub
rcl
lea
pop
push
push
mov
mov
push
push
(bad)
ret
gs
push
(bad)
shl
cld
loope
dec
inc
test
pop
pop
ret
inc
or
shl
pop
push
lea
xchg
push
push
mov
xchg
cs
inc
test
in
mov
inc
test
push
out
jbe
inc
or
ficom
sbb
gs
push
(bad)
enter
xchg
adc
push
xchg
mov
pop
ret
push
dec
pop
cmps
push
pop
retf
dec
das
inc
push
push
jmp
dec
sbb
enter
sub
rcl
(bad)
ret
pop
xchg
mov
stos
rcl
lea
ror
mov
pop
push
mov
sahf
iret
dec
daa
push
jge
rcr
dec
and
cmp
icebp
sub
(bad)
imul
xchg
pop
mov
call
ficom
and
cmp
icebp
sub
(bad)
xchg
inc
(bad)
sahf
iret
dec
xchg
pop
mov
arpl
mov
test
xchg
sbb
push
frstor
popf
xchg
test
push
cmp
and
cmp
ds
mov
add
cli
shl
dec
push
lea
push
fmulp
mov
dec
lods
clc
scas
test
dec
push
lods
clc
scas
mul
gs
push
(bad)
ret
imul
xchg
inc
or
fisubr
repnz
(bad)
dec
push
add
sbb
cld
lds
cmp
push
jp
xchg
(bad)
popa
mov
lods
add
lahf
push
cmc
(bad)
pop
push
daa
dec
push
push
add
mov
or
rcl
(bad)
icebp
int
out
pop
dec
fimul
xchg
ja
fild
pop
adc
fidiv
mov
dec
out
fimul
pop
lods
mov
push
push
cmp
lods
aaa
cwde
push
xor
mov
out
movs
adc
(bad)
mov
loopne
jb
pop
lods
mov
pop
lods
mov
push
lods
jb
push
mov
add
call
xchg
or
lods
jb
fcom
mov
bound
fcomp
or
ret
cmp
push
cmp
pop
push
add
in
jb
dec
mov
out
je
out
je
out
jbe
lea
fimul
mov
lods
jb
idiv
les
fimul
mov
imul
ret
sbb
mov
dec
push
ror
aaa
push
lea
push
fimul
mov
jbe
xchg
dec
push
cmp
pop
push
jb
jmp
dec
push
lods
cmp
test
lea
push
cmc
(bad)
pop
push
fisub
ret
mov
jb
loope
frstor
lahf
xchg
push
xor
push
add
in
jb
dec
cmp
pop
push
add
loope
jb
dec
cmp
push
push
push
lea
cmp
pop
push
in
out
adc
mov
add
dec
push
push
or
dec
cmps
mov
imul
mov
dec
sbb
jl
push
cmp
mov
push
push
or
dec
popf
xchg
fst
or
fisubr
repnz
ficomp
mov
sar
dec
push
lea
fidiv
stc
fcmove
mov
loop
add
out
add
loop
out
jbe
lea
lea
push
cmp
ds
mov
xor
mov
xchg
xchg
add
popf
fwait
jb
sahf
outs
mov
stos
add
out
clc
mov
cmp
loope
jno
in
lea
es
rcr
lea
movs
pop
inc
push
push
rcl
xchg
mov
hlt
outs
push
lahf
and
push
jb
or
out
dec
lods
clc
pop
loope
popf
mov
pop
jb
push
mov
push
pop
or
mov
push
jecxz
ror
outs
push
lea
sbb
mov
pop
inc
fnsave
lods
clc
inc
neg
dec
push
ror
cmc
push
or
add
push
dec
push
xchg
mov
cmps
push
add
dec
push
jno
repz
inc
lea
mov
push
jmp
dec
push
fmulp
mov
fmulp
mov
cmp
dec
je
out
je
jb
adc
dec
push
pop
dec
aas
sbb
mov
loope
cdq
mov
dec
out
loope
popf
mov
scas
gs
push
push
lea
daa
xor
mov
mov
jmp
mov
push
out
fimul
ficom
rol
popf
mov
clc
pop
xchg
push
xchg
sub
cmp
pop
xchg
stos
mov
sbb
mov
xchg
xchg
dec
dec
push
fmulp
mov
cmp
loope
xor
daa
mov
mov
fstp
loope
popf
mov
scas
fcom
lea
daa
xor
mov
jne
fldcw
dec
push
pop
cmp
push
or
sbb
add
popf
mov
fld
adc
add
popf
outs
lea
aaa
mov
frstor
xchg
push
jne
clc
xor
push
jmp
dec
daa
push
jne
xor
or
ins
out
jbe
lea
cmp
and
iret
dec
neg
dec
push
lock
pop
stos
add
pop
xchg
clc
dec
das
xchg
pop
xchg
stos
movs
mov
xchg
jb
push
mov
retf
fcmove
mov
or
push
cmps
push
fiadd
(bad)
fcmove
mov
xchg
push
push
push
ficomp
ret
or
push
nop
fadd
sti
shl
dec
add
push
push
adc
push
lahf
push
jno
pop
push
(bad)
ret
mov
and
ds
fidiv
mov
mov
imul
push
push
(bad)
enter
mov
mov
push
push
xchg
mov
shl
mov
xor
dec
xchg
stos
push
mov
or
retf
and
fcomp
aas
shl
ret
or
push
xchg
push
popf
lea
push
xor
mov
out
enter
int
push
fidivr
mov
je
push
(bad)
ret
enter
mov
inc
loope
nop
ret
push
sbb
es
mov
xchg
push
jno
fcom
ret
add
pop
stos
pop
das
xchg
pop
xchg
push
jno
pop
stos
add
jmp
ret
rcl
xchg
mov
cmps
xor
fistp
mov
push
push
out
fcmove
cmps
xchg
push
gs
cli
fcmove
mov
push
push
add
out
dec
call
int
in
lea
push
jns
jae
loop
push
push
mov
std
sbb
mov
adc
cmp
sar
xchg
push
mov
cmp
xor
lea
loopne
cmp
fidiv
add
lea
movs
je
enter
dec
fidiv
add
lea
sbb
(bad)
push
movs
outs
mov
push
add
(bad)
ficomp
fnstenv
fcmovb
arpl
iret
dec
dec
mov
push
(bad)
push
loopne
cmp
loopne
enter
push
push
out
fcmove
xchg
xchg
push
push
mov
retf
mov
inc
or
fisubr
push
push
(bad)
dec
div
fistp
out
enter
fwait
fs
(bad)
enter
mov
push
push
out
repnz
jo
push
fidivr
out
fimul
fwait
stos
jb
loope
jb
adc
push
(bad)
push
fimul
lds
mov
mov
push
mul
lods
jae
push
es
sbb
pop
leave
dec
push
bound
inc
pop
lea
mov
jb
or
add
(bad)
lods
jo
cmps
dec
lea
movs
sub
fwait
xchg
loope
xor
mov
popa
push
fmulp
lods
jo
xchg
out
mov
sbb
sbb
adc
pop
push
(bad)
ret
jb
loope
jnp
jp
lea
push
lea
xchg
push
test
fwait
xor
fimul
lods
int
and
ds
dec
and
fcomp
fwait
loope
jb
in
gs
jb
ficomp
lea
push
jl
push
lods
clc
inc
idiv
dec
inc
jbe
jl
push
lods
cmp
test
lea
xchg
test
cmps
pop
lea
retf
popf
test
xchg
mov
loop
jae
mul
retf
dec
push
ror
mul
retf
dec
push
jmp
out
ja
arpl
adc
push
(bad)
bnd
lea
movs
je
xchg
out
jno
loopne
fisub
and
ror
push
shl
sbb
adc
lea
retf
popf
test
xchg
mov
loop
jae
test
dec
push
ror
jbe
jl
push
lods
cmp
pop
adc
test
cmps
pop
lea
retf
popf
test
xchg
mov
loop
jae
test
push
ror
lahf
xchg
bound
push
push
gs
pop
push
(bad)
repnz
lea
movs
je
in
lock
push
jmp
out
push
mul
lods
jae
dec
cmp
mov
popf
xchg
popf
mov
ja
pop
out
adc
mov
add
push
adc
dec
push
ror
lahf
xchg
push
sub
push
xor
(bad)
repnz
lea
movs
je
in
lock
jbe
jle
push
lods
cmp
test
lea
xchg
test
adc
iret
dec
loope
jno
loopne
gs
pop
push
(bad)
enter
or
(bad)
repnz
lea
movs
je
in
lock
jbe
jle
push
lods
cmp
jl
lea
xchg
test
fdiv
dec
push
cmp
(bad)
loop
jae
neg
enter
dec
inc
not
dec
push
jmp
out
ja
arpl
mov
jge
lea
movs
je
xchg
out
jno
loopne
fisub
and
jge
push
push
push
(bad)
push
fidivr
out
fimul
aam
lea
mov
jp
dec
cmp
pop
push
add
shr
push
push
add
shr
xchg
(bad)
jno
loopne
frstor
into
mov
and
push
push
push
(bad)
ds
xor
push
push
(bad)
shr
stos
push
mov
cs
mov
cmps
xor
mov
fdiv
mov
lods
jb
jbe
jl
push
add
cmp
push
(bad)
enter
lea
add
dec
push
jmp
out
ja
arpl
push
in
adc
mov
mov
push
(bad)
push
mov
xor
push
push
(bad)
shr
stos
push
mov
cs
and
mov
jno
loopne
add
(bad)
enter
dec
pop
push
(bad)
repnz
lea
movs
je
in
lock
jbe
jle
push
lods
cmp
cmp
lea
xchg
test
call
cmp
mov
or
or
jbe
jge
push
add
pop
push
(bad)
enter
hlt
pop
push
(bad)
repnz
lea
movs
je
in
lock
jbe
jge
push
lods
cmp
rcl
dec
popf
xchg
test
out
movs
imul
lahf
jb
loope
dec
mov
cmps
pop
lea
retf
popf
test
xchg
mov
loop
jae
idiv
into
dec
push
ror
idiv
into
dec
push
jmp
out
ja
arpl
sbb
push
(bad)
bnd
lea
movs
je
xchg
out
jno
loopne
fisub
and
(bad)
push
push
push
(bad)
push
shl
imul
or
pop
push
(bad)
enter
mov
push
adc
push
lea
loope
add
aaa
mov
dec
mov
lods
lea
loope
jb
fwait
xchg
jb
loope
or
gs
dec
push
push
jp
xchg
(bad)
dec
mov
lods
add
xchg
out
inc
mov
lods
mov
fisubr
jo
stos
xor
push
push
(bad)
shr
stos
push
mov
add
cmps
dec
lea
jmp
jp
fistp
jb
loope
pop
enter
(bad)
mov
add
adc
adc
mov
add
in
push
(bad)
enter
into
fisubr
mov
lods
or
leave
outs
lods
jb
loope
jns
loopne
jb
push
fimul
dec
push
lods
jb
xchg
(bad)
jno
loopne
frstor
jp
iret
dec
dec
mov
push
pop
jmp
jp
push
jp
xchg
(bad)
dec
mov
lods
add
not
iret
dec
push
jmp
out
ja
arpl
push
out
adc
mov
mov
push
(bad)
push
mov
xor
push
push
(bad)
shr
stos
push
mov
cs
and
mov
jno
loopne
gs
push
(bad)
enter
mov
push
(bad)
repnz
lea
movs
je
in
lock
jbe
jle
push
lods
cmp
add
lea
xchg
test
fwait
fwait
jb
loope
lea
lods
or
fwait
stos
jb
loope
or
pushf
lds
loope
or
out
push
jge
fdivr
push
push
add
or
dec
push
lea
out
lea
lods
lea
mov
sar
das
push
(bad)
rcr
dec
(bad)
push
lea
stos
jb
loope
push
sbb
push
(bad)
rcr
or
imul
out
adc
mov
add
pop
push
(bad)
enter
(bad)
jmp
or
stos
add
js
xor
out
movs
imul
xchg
jb
loope
or
fcomp
or
lods
jb
adc
or
call
mov
xchg
(bad)
jns
jecxz
frstor
popf
xchg
mov
fwait
mov
cmp
imul
out
lods
jo
xchg
(bad)
jno
loopne
frstor
jp
iret
dec
dec
mov
push
pop
fidivr
out
fimul
fcom
lea
pop
lea
retf
popf
test
sar
loop
jae
div
dec
inc
div
int
push
jmp
out
ja
arpl
sub
lea
mov
push
(bad)
push
mov
xor
push
push
(bad)
shr
stos
push
mov
cs
and
mov
jno
loopne
rcr
(bad)
enter
mov
loope
jge
jecxz
gs
and
mov
cmps
jb
loope
or
lods
jb
loope
jne
loopne
fisub
popf
xchg
add
loope
dec
inc
fwait
aam
mov
cmp
(bad)
loop
jae
neg
int
push
ror
neg
dec
push
jmp
out
ja
arpl
push
out
adc
mov
mov
push
(bad)
push
fidivr
out
fimul
shr
pop
lea
retf
popf
test
inc
mov
loop
jae
imul
dec
inc
imul
mov
push
jmp
out
ja
arpl
push
in
adc
mov
mov
push
(bad)
push
cmp
(bad)
loop
jae
not
dec
inc
cmps
cmp
ret
jb
loope
dec
mov
cmps
pop
lea
retf
popf
test
in
je
push
xor
push
push
(bad)
shr
stos
ffreep
mov
add
jne
adc
dec
push
ror
imul
dec
push
jmp
out
ja
arpl
push
out
adc
mov
mov
push
(bad)
push
mov
xor
push
push
(bad)
shr
stos
push
mov
cs
and
mov
jno
loopne
gs
push
(bad)
enter
mov
fisubr
lods
and
repnz
lea
movs
je
in
lock
jbe
jle
push
lods
cmp
sbb
popf
xchg
test
cmps
pop
lea
retf
popf
test
cmp
sub
push
(bad)
shr
stos
ffreep
mov
add
jne
adc
dec
push
ror
jbe
jge
push
lods
cmp
mov
xchg
test
out
jp
ret
stc
jne
push
xor
push
push
(bad)
shr
stos
push
mov
cs
and
mov
jno
loopne
fsub
push
(bad)
enter
push
out
adc
mov
mov
push
(bad)
push
mov
xor
push
push
(bad)
shr
stos
push
mov
cs
and
mov
jno
loopne
adc
push
(bad)
enter
push
out
adc
mov
mov
push
(bad)
push
jmp
jb
push
jp
xchg
(bad)
dec
mov
lods
add
mul
xchg
push
adc
out
ja
arpl
push
in
adc
mov
mov
push
(bad)
push
fimul
xchg
loope
jb
xchg
(bad)
jno
loopne
frstor
sbb
iret
dec
dec
mov
push
(bad)
push
mov
xor
push
push
(bad)
shr
stos
push
mov
cs
and
mov
jno
loopne
gs
and
enter
mov
jbe
jge
push
lods
cmp
movs
outs
lea
xchg
test
cmps
pop
lea
retf
popf
test
xchg
mov
loop
jae
test
dec
push
ror
test
dec
push
jmp
out
pop
retf
stos
dec
push
add
mul
lods
jae
dec
cmp
pop
push
fisub
popf
xchg
popf
ret
jge
fdivr
xor
push
push
(bad)
shr
stos
push
mov
cs
and
mov
jno
loopne
gs
push
(bad)
enter
xchg
icebp
adc
mov
mov
push
(bad)
push
mov
xor
push
push
(bad)
shr
stos
push
mov
cs
and
mov
jno
loopne
gs
and
enter
movs
dec
inc
lea
out
mov
push
jmp
out
ja
arpl
loopne
push
(bad)
bnd
lea
movs
je
xchg
out
jno
loopne
fisub
and
and
(bad)
push
cmp
pop
push
jb
loop
jae
imul
mov
push
ror
je
out
je
out
je
in
push
push
int
imul
daa
push
(bad)
ret
jb
loope
jge
out
fimul
stos
scas
jb
loope
xor
dec
xchg
out
jns
loopne
ficomp
loope
jno
loopne
jb
imul
dec
push
lods
cmp
xor
lea
out
mov
lods
gs
es
(bad)
repz
into
mov
xchg
fisub
xchg
(bad)
popa
mov
lods
inc
xchg
mov
xor
lea
(bad)
sbb
add
lahf
mov
(bad)
lds
or
stos
jp
xchg
(bad)
jne
loope
add
fcom
jb
cmc
push
add
adc
enter
push
movs
pop
push
add
loope
jb
dec
mov
out
jbe
bound
push
fimul
mov
lods
jb
jbe
lea
mov
push
pop
ror
mov
fxch
mov
push
push
je
in
icebp
adc
dec
jbe
lea
mov
in
lock
dec
jbe
arpl
push
cmp
xchg
icebp
lods
jb
fidiv
mov
stos
add
inc
call
adc
dec
add
test
cmps
inc
sti
dec
push
movs
push
fwait
shl
loope
dec
enter
mov
push
push
push
push
shl
enter
into
mov
test
adc
dec
push
push
add
xchg
scas
jb
lahf
xchg
adc
push
mov
lea
add
(bad)
ror
pop
sbb
iret
ret
jo
loope
jne
out
dec
sbb
push
fimul
xor
lods
jb
stos
repz
loope
mov
push
push
fadd
xor
lods
jb
dec
pop
mov
dec
push
mov
xchg
(bad)
adc
mov
xchg
(bad)
stc
mov
lods
jb
mov
push
mov
push
fimul
cmp
lods
jb
stos
retf
jo
loope
jns
push
push
push
push
push
fadd
aas
jecxz
jb
dec
pop
mov
xchg
and
loope
fld
fcompp
dec
pop
adc
xchg
scas
jb
cmps
push
xchg
movs
push
fwait
aas
jo
loope
dec
and
mov
mov
(bad)
lods
jb
out
jne
fnstcw
popf
and
fimul
out
jecxz
jb
neg
dec
push
mov
frstor
jbe
mov
fimul
jmp
lods
jb
jbe
arpl
push
cmp
movs
pop
push
in
push
push
or
mov
xchg
test
sbb
push
bound
fs
lea
mov
gs
lods
jb
out
jne
fnstcw
mov
push
add
loop
jb
dec
fimul
jmp
lods
jb
div
mov
(bad)
lods
jb
stos
ret
jo
loope
cmp
jecxz
jb
stos
(bad)
loope
cmp
jecxz
jb
stos
repz
loope
add
stos
scas
jb
dec
mov
push
(bad)
fimul
xlat
jecxz
jb
fisub
sahf
sbb
push
fidiv
out
dec
jp
mov
in
lock
mov
add
daa
push
(bad)
ret
jne
(bad)
or
jecxz
jb
xchg
(bad)
jno
loope
frstor
mul
mov
fimul
iret
jecxz
jb
out
jne
fnstcw
leave
and
fimul
repz
jb
neg
dec
push
ror
xchg
stos
mov
into
cmps
lods
jb
pop
push
lea
(bad)
imul
fwait
mov
(bad)
ret
push
fwait
cmp
loope
dec
enter
mov
push
stc
push
js
or
push
fidiv
out
dec
(bad)
fwait
jmp
mov
add
icebp
lods
jb
xchg
(bad)
sub
fwait
jmp
mov
add
dec
je
out
je
out
je
add
loop
jb
dec
cmp
dec
pop
xchg
or
push
lea
out
mov
lods
gs
push
(bad)
retf
mov
(bad)
lods
jb
or
iret
dec
jbe
arpl
push
fimul
mov
lods
jb
test
dec
push
ror
fcom
jmp
sar
pop
push
(bad)
(bad)
fwait
scas
jae
loope
in
lock
dec
xchg
nop
test
sbb
lea
(bad)
jmp
xor
mov
outs
mov
(bad)
pop
push
aas
inc
cmp
js
push
(bad)
retf
mov
fninit
lods
jb
push
in
out
push
lea
jbe
mov
fimul
mov
lods
jb
dec
mov
out
jbe
arpl
push
fimul
mov
lods
jb
not
ss
ror
and
enter
mov
push
push
popf
not
mov
lods
(bad)
retf
nop
dec
push
mov
jo
loope
or
loope
lea
(bad)
cmp
and
dec
xchg
stos
jp
xchg
(bad)
jmp
mov
fnstcw
push
out
loope
sub
sub
ret
jne
fldcw
mov
xchg
(bad)
adc
inc
call
popf
mov
push
push
or
and
jns
add
jmp
fimul
mov
lea
mov
push
repnz
imul
sub
ret
add
loopne
clc
inc
div
mov
sub
out
push
pop
mov
popf
mov
xchg
xchg
jmp
dec
movs
fisub
xchg
xchg
jmp
dec
cmps
or
arpl
mov
in
mov
add
adc
fdivr
dec
cmp
dec
xchg
xchg
or
stos
lea
xchg
push
add
(bad)
fcmove
scas
xchg
push
out
xchg
push
xchg
sbb
ret
push
ror
loope
test
out
ror
dec
mov
add
pop
stos
add
loope
add
mov
dec
mov
jb
push
pop
cmp
loopne
leave
dec
sbb
loop
leave
pop
sbb
gs
das
push
lea
adc
enter
mov
in
mov
add
push
push
frstor
xchg
push
jne
je
(bad)
mov
push
out
test
ret
jne
fnstcw
jb
imul
mov
mov
add
lea
push
fidiv
out
dec
rcr
adc
xchg
mov
add
push
lea
dec
add
xor
dec
inc
loop
cmp
into
cmps
mov
mov
xchg
mov
mov
dec
lea
(bad)
xor
fwait
xchg
ins
mov
add
sub
mov
dec
xchg
xchg
test
push
push
add
aaa
stos
add
dec
lods
cmp
jl
lea
xchg
test
es
mov
fwait
ins
mov
lods
clc
inc
not
dec
push
fidiv
out
dec
jp
adc
(bad)
xor
push
push
or
jmp
lea
(bad)
xor
fwait
xchg
ins
mov
add
mov
pop
xchg
stc
gs
lods
cmp
adc
dec
popf
xchg
test
es
mov
fwait
ins
mov
lods
clc
inc
idiv
mov
(bad)
out
dec
jp
adc
cmc
stc
mov
movs
retf
inc
lea
or
add
cmps
jae
dec
push
mov
ficomp
mov
fidivr
out
fimul
sahf
sbb
into
jmp
and
push
lea
jb
dec
push
fidivr
out
fimul
(bad)
rol
pop
shl
ret
test
les
sbb
mov
loope
dec
inc
jbe
jl
push
add
sub
enter
mov
out
mov
xchg
(bad)
jge
loope
add
jbe
jl
push
fimul
dec
(bad)
lods
jb
imul
mov
inc
test
dec
push
jmp
out
ja
arpl
push
in
adc
mov
add
sub
enter
rcr
lea
lods
jb
fdivr
xor
push
push
(bad)
shr
stos
push
mov
movs
mov
cmps
xor
mov
fidiv
dec
(bad)
lods
jb
jbe
arpl
push
fidiv
dec
(bad)
lods
jb
neg
mov
pop
idiv
dec
push
jmp
out
ja
arpl
push
in
adc
mov
add
sub
enter
jl
adc
mov
add
sub
enter
mov
idiv
xchg
push
adc
out
ja
arpl
push
in
adc
mov
add
sub
enter
mov
push
lea
movs
je
in
lock
mul
mov
dec
push
push
adc
out
add
push
mov
mov
cmp
movs
pop
push
add
push
mov
mov
mov
push
(bad)
push
lods
clc
pop
jbe
jl
push
fimul
dec
(bad)
lods
jb
jbe
jl
push
fimul
dec
(bad)
lods
jb
neg
mov
pop
lahf
xchg
mov
push
push
sub
push
lea
movs
je
in
lock
jbe
jle
push
fimul
dec
(bad)
lods
jb
not
mov
inc
jbe
jl
push
fimul
dec
(bad)
lods
jb
idiv
mov
inc
lahf
xchg
stc
bound
push
gs
adc
lea
movs
je
in
lock
jbe
jle
push
fimul
dec
(bad)
lods
jb
not
mov
inc
jbe
jl
push
fimul
dec
(bad)
lods
jb
idiv
dec
push
ror
idiv
xchg
push
adc
out
ja
arpl
pushf
sub
(bad)
bnd
lea
movs
je
xchg
out
lea
inc
mov
lea
shl
dec
popf
xchg
popf
and
mov
lea
shl
popf
xchg
test
aaa
adc
add
test
sub
(bad)
repnz
lea
movs
je
in
lock
jbe
jle
push
fimul
dec
(bad)
lods
jb
idiv
mov
inc
jbe
arpl
push
fimul
dec
(bad)
lods
jb
test
dec
push
ror
test
dec
push
jmp
out
ja
arpl
push
in
adc
mov
add
sub
(bad)
enter
push
out
adc
mov
add
sub
(bad)
enter
mov
test
push
jmp
out
ja
arpl
push
in
adc
mov
add
sub
(bad)
enter
ds
or
lods
jb
jbe
arpl
push
fimul
dec
(bad)
lods
jb
idiv
dec
pop
neg
xchg
push
adc
out
ja
arpl
push
in
adc
mov
add
das
push
(bad)
enter
dec
out
adc
mov
add
das
push
(bad)
enter
mov
neg
mov
dec
push
push
adc
out
ja
arpl
push
in
adc
mov
add
das
push
(bad)
enter
sub
push
(bad)
repnz
dec
xchg
pop
cmp
sbb
out
lea
or
lea
dec
bound
mov
cmps
pop
lea
retf
popf
test
xchg
mov
push
mov
mov
mov
push
(bad)
push
fidivr
clc
fimul
scas
shr
pop
push
add
push
mov
mov
mov
push
(bad)
push
mov
xor
push
push
(bad)
shr
stos
push
mov
cs
and
mov
lea
adc
dec
popf
xchg
test
cmps
pop
lea
retf
popf
test
xor
sub
push
(bad)
shr
stos
ffreep
mov
add
adc
adc
mov
add
in
push
(bad)
enter
fwait
icebp
adc
mov
add
cs
(bad)
enter
dec
je
out
je
out
jbe
lea
add
xor
ret
push
mov
shl
dec
push
(bad)
(bad)
fwait
push
ins
mov
add
xor
and
fidiv
mov
lods
jb
dec
fidiv
dec
(bad)
lods
jb
loope
jno
loope
fdiv
push
lea
mov
xor
mov
shr
cmc
push
add
pop
mov
(bad)
sbb
add
lahf
mov
ficomp
cld
or
lea
lods
jb
fnop
sub
jecxz
jb
xchg
stos
mov
xchg
push
test
not
mov
inc
xchg
pop
(bad)
sbb
pop
jp
dec
xchg
stos
jp
xchg
(bad)
or
mov
mov
dec
push
add
xor
mov
xchg
stos
mov
dec
not
lea
xchg
(bad)
sub
pop
je
add
mov
mov
in
pop
push
(bad)
(bad)
fwait
out
mov
add
in
adc
dec
jbe
lea
mov
push
(bad)
cmp
inc
call
dec
push
push
add
loop
jb
dec
fimul
jmp
lods
jb
test
dec
out
dec
mov
repz
loope
add
stos
scas
jb
dec
mov
push
(bad)
adc
inc
call
movs
pop
push
add
loop
jb
dec
mov
add
stos
scas
jb
dec
fimul
mov
lods
jb
mul
dec
push
mov
add
xchg
mov
je
add
cmps
lods
jb
dec
mov
push
pop
fidiv
out
dec
mov
pop
lea
xchg
or
push
push
(bad)
enter
mov
push
stc
push
js
or
push
shl
pop
push
(bad)
(bad)
fwait
jmp
mov
add
sti
lods
jb
xchg
(bad)
sub
fwait
jmp
mov
add
dec
je
out
je
out
je
add
loop
jb
dec
cmp
dec
pop
xchg
or
push
lea
out
mov
lods
adc
(bad)
retf
jmp
push
lods
cmp
jecxz
jb
or
iret
dec
jbe
arpl
push
fimul
mov
lods
jb
neg
mov
pop
fcom
repnz
lods
lea
aaa
push
(bad)
(bad)
fwait
scas
jae
loope
in
lock
dec
xchg
xchg
test
sbb
js
dec
sahf
(bad)
repnz
lods
mov
fwait
sub
mov
outs
mov
(bad)
pop
jnp
call
mov
xor
(bad)
ret
jne
fnstcw
mov
push
add
mov
sub
cmp
movs
pop
push
add
mov
xchg
loope
push
(bad)
adc
mov
push
or
push
lea
(bad)
add
imul
jp
loope
dec
inc
pop
xchg
or
push
lea
push
jb
mov
add
hlt
jp
dec
lahf
mov
add
sub
(bad)
lods
jb
int3
xchg
xchg
xchg
or
loop
lea
out
mov
lods
gs
xor
lea
adc
loop
dec
push
add
inc
lock
dec
push
ror
pop
xchg
clc
bound
arpl
push
mov
push
(bad)
sub
sbb
lods
cmp
jecxz
jb
aam
jb
popf
xchg
and
mul
sbb
loope
gs
lods
jb
ficomp
mov
lea
mov
dec
into
sub
dec
lahf
xchg
es
push
push
add
stos
scas
jb
dec
mov
add
pop
stos
add
je
jb
mov
sahf
movs
dec
push
lods
cmp
jecxz
jb
mov
lea
(bad)
adc
xchg
stos
mov
inc
call
popf
mov
push
push
push
in
mov
pop
lea
mov
add
out
clc
inc
test
mov
pop
(bad)
pop
dec
cmp
mov
xchg
xchg
or
ret
dec
dec
add
lea
mul
movs
dec
push
lods
clc
inc
xchg
pop
mov
mov
fisub
xchg
push
jno
je
(bad)
std
xor
dec
je
out
div
movs
dec
push
fimul
pop
pop
lea
mov
push
jmp
or
push
(bad)
(bad)
pop
scas
fstp
push
add
(bad)
ret
jne
(bad)
enter
(bad)
sbb
add
cmps
push
popf
dec
push
mov
fistp
adc
inc
add
dec
(bad)
ins
push
lea
sbb
dec
push
fimul
call
mov
jne
fnstcw
jb
push
push
add
pop
mov
cmp
push
lea
pop
lods
clc
inc
xchg
(bad)
mov
repz
jb
popf
xchg
xor
push
add
cmc
inc
add
aaa
stos
add
je
(bad)
xchg
xchg
data16
or
push
hlt
pop
das
add
lods
xchg
push
jne
fnstenv
lea
out
dec
inc
test
push
arpl
push
fmulp
movs
dec
mov
add
lock
dec
jbe
mov
lods
mov
mov
adc
enter
mov
jbe
pusha
or
fmulp
movs
dec
mov
push
pop
fmulp
movs
dec
cmp
dec
loope
mov
enter
retf
sahf
dec
push
xor
cmp
loopne
jne
(bad)
(bad)
sbb
add
dec
add
sbb
cli
std
adc
jne
out
dec
and
cmp
and
cmp
push
cmp
dec
je
out
je
mov
push
(bad)
ret
bound
add
or
pop
push
gs
aaa
push
lea
pop
add
gs
push
gs
aaa
push
(bad)
ret
jne
fnstcw
mov
sahf
loop
dec
imul
mov
xor
int3
dec
idiv
mov
add
int
test
dec
out
dec
and
add
movs
in
push
mov
push
lea
pop
add
lods
in
push
gs
ss
lea
pop
add
sbb
call
pop
add
stc
cli
pop
push
fdiv
push
(bad)
retf
test
sbb
cs
int3
dec
imul
movs
dec
push
cmp
out
dec
dec
idiv
movs
dec
push
fidiv
stc
fcmove
mov
xchg
out
dec
cmp
or
mov
out
dec
cmp
or
mov
xor
mov
xchg
xchg
rcl
sti
add
hlt
xchg
cmp
mov
xchg
out
loope
gs
push
mov
push
(bad)
call
jbe
add
push
cmp
sub
xor
mov
or
push
gs
push
(bad)
call
jbe
add
push
cmp
sub
cmp
push
mov
add
jmp
fimul
loop
mov
mov
mov
cmp
pop
push
out
loope
mov
sub
push
lea
loop
mov
mov
mov
cmp
pop
push
out
loope
xchg
out
pop
push
or
push
lea
loop
mov
mov
mov
cmp
pop
push
out
loope
movs
in
push
gs
cmp
retf
test
cmp
sub
or
mov
cs
lea
retf
fcmove
dec
je
jb
ds
int3
dec
mul
jno
sub
cmp
push
mov
cs
mov
lea
retf
fcmove
dec
je
jb
call
dec
push
fidiv
out
dec
adc
nop
fadd
sti
shl
dec
add
gs
mov
jne
fnstcw
js
pop
push
jb
push
mov
add
jbe
pusha
or
add
jb
fiadd
inc
mov
(bad)
retf
xchg
dec
push
cmp
dec
push
shl
and
mov
test
push
cmp
or
cmp
pusha
pop
cmps
ffree
pop
stos
cmps
push
out
add
dec
je
in
push
rcr
and
mov
pusha
or
cmp
loopne
push
(bad)
call
je
jb
sub
int3
dec
je
frstor
and
enter
jge
div
frstor
or
cdq
and
push
or
or
cmp
pop
push
out
mul
stos
dec
push
lock
pop
push
add
jmp
fimul
push
lods
mov
and
lods
mov
and
push
jne
pop
mov
out
je
in
push
rcr
and
mov
pusha
or
cmp
dec
mov
cmp
and
cmp
and
cmp
dec
je
out
je
out
mul
stos
dec
push
fimul
pop
add
mov
pop
push
test
push
lea
push
lods
mov
and
lods
mov
and
cmp
das
je
in
push
push
frstor
push
iret
dec
jbe
pusha
or
cmp
dec
mov
shl
sub
and
lods
mov
and
lods
mov
and
cmp
xor
dec
push
push
frstor
ds
pusha
or
cmp
dec
mov
cmp
or
cmp
or
cmp
dec
jbe
lea
cmp
sbb
popa
or
cmp
pop
push
out
neg
test
push
lock
loope
mov
dec
loope
leave
sti
pop
push
out
jbe
mov
cmp
dec
push
push
out
jbe
lea
cmp
cmps
pop
push
in
repz
outs
push
push
cs
mov
lea
push
lods
mov
and
lods
mov
and
jmp
dec
je
in
push
rcr
and
mov
popa
or
cmp
dec
mov
ror
jnp
lea
pushf
mov
in
pop
push
lea
test
dec
push
cmp
cmps
pop
push
out
jbe
mov
lods
mov
mov
je
jb
sub
int3
dec
je
jb
jle
iret
dec
jbe
mov
cmp
dec
je
in
push
rcr
and
mov
popa
or
cmp
dec
mov
cmp
or
cmp
or
cmp
ja
stc
lea
cmp
dec
push
push
in
push
rcr
and
mov
popa
or
cmp
dec
mov
jmp
jl
push
jp
xchg
push
gs
(bad)
mov
lods
out
loope
mov
dec
loope
leave
sti
pop
push
out
je
in
push
push
lea
jbe
lea
push
lea
cmp
cmps
pop
push
in
repz
push
lods
adc
dec
push
cmp
or
cmp
or
cmp
dec
jbe
lea
cmp
dec
push
push
frstor
inc
mov
pusha
or
cmp
dec
mov
cmp
or
cmp
or
cmp
dec
push
push
in
push
push
lea
push
push
lea
jbe
popa
or
cmp
pop
push
out
mul
scas
dec
push
lock
dec
loope
mov
dec
loope
leave
sti
pop
push
out
jbe
lea
cmp
jbe
lea
cmp
test
push
mov
cs
out
jne
fnstcw
lea
cmp
or
cmp
dec
push
push
in
push
push
lea
push
push
lea
jbe
popa
or
cmp
pop
push
out
imul
sbb
pop
push
out
loope
mov
dec
loope
in
sti
pop
push
out
jbe
mov
cmp
push
push
out
jbe
(bad)
retf
dec
cmp
pop
push
in
repnz
dec
not
or
pop
push
out
loope
mov
dec
loope
in
sti
pop
push
out
jbe
lea
cmp
push
push
out
jbe
(bad)
retf
dec
cmp
inc
repnz
dec
not
scas
dec
push
lock
out
pop
push
add
aaa
stos
add
je
jb
sub
int3
dec
je
jb
jle
iret
dec
je
out
jbe
lea
cmp
sbb
jl
push
cmp
sbb
lea
mov
cmp
or
cmp
or
cmp
dec
push
push
out
jbe
(bad)
retf
dec
cmp
pop
push
in
repnz
dec
neg
dec
push
lock
in
push
out
loope
mov
dec
loope
leave
sti
pop
push
out
jbe
lea
cmp
push
push
out
jbe
(bad)
retf
dec
cmp
pop
push
in
repnz
push
push
shr
stos
jb
cmps
xchg
ret
add
div
je
loope
rol
popf
mov
pop
pop
mov
imul
push
lods
clc
inc
imul
dec
and
mov
mov
push
(bad)
push
lock
pop
push
add
aaa
stos
add
je
jb
push
cld
int3
dec
div
lods
dec
push
fidiv
stc
fcmove
cmps
xchg
xchg
add
out
add
mov
je
jb
sub
int3
dec
je
fcmovnb
pop
scas
cmps
push
jmp
mov
push
cmp
xchg
out
adc
dec
jbe
(bad)
dec
push
mov
ldmxcsr
lea
push
lods
mov
and
add
ja
push
jne
pop
mov
out
je
in
push
rcr
and
mov
pusha
or
cmp
dec
mov
fidiv
out
dec
and
lods
mov
and
lods
mov
and
push
lea
push
jne
pop
mov
out
je
in
push
rcr
and
mov
pusha
or
cmp
dec
mov
cmp
and
cmp
and
cmp
dec
je
out
je
out
idiv
dec
and
add
mov
pop
push
add
push
lea
push
lods
mov
and
lods
mov
and
jmp
and
(bad)
jl
push
cmp
cmps
pop
push
out
not
lods
dec
push
lock
push
add
pop
stos
add
jbe
popa
or
cmp
dec
loope
gs
push
gs
push
lea
arpl
in
pop
push
lea
mov
or
dec
sub
fwait
and
cmp
loope
gs
push
mov
push
lea
push
cmp
dec
push
push
jb
idiv
int3
dec
mul
xchg
dec
push
cmp
or
cmp
or
cmp
jns
inc
out
jbe
(bad)
retf
dec
cmp
pop
push
in
repnz
push
push
push
cs
scas
adc
dec
jmp
fimul
push
lods
mov
and
lods
mov
and
push
lea
outs
out
jbe
lea
cmp
xchg
out
adc
dec
je
gs
push
(bad)
call
mul
mov
cmp
or
cmp
or
cmp
dec
je
in
pop
push
lea
push
push
lea
jbe
popa
or
cmp
pop
push
out
div
dec
push
lock
cli
pop
push
or
in
lea
push
jb
sub
int3
dec
je
jb
pop
jecxz
dec
je
out
jbe
lea
cmp
push
push
in
push
push
frstor
push
mov
pusha
or
cmp
dec
mov
cmp
or
cmp
or
cmp
dec
jbe
lea
cmp
and
push
lea
jbe
popa
or
cmp
pop
push
out
idiv
xchg
dec
push
lock
pop
push
or
cwde
pop
lea
push
jb
sub
int3
dec
je
jb
pop
jecxz
dec
je
out
jbe
lea
cmp
dec
push
push
frstor
adc
pusha
or
cmp
dec
mov
cmp
or
cmp
or
cmp
dec
jbe
lea
cmp
sbb
or
cmp
pop
push
out
mul
dec
push
lock
cli
pop
push
out
loope
mov
dec
loope
leave
sti
pop
push
out
jbe
lea
cmp
push
push
out
jbe
lea
cmp
mov
repz
push
push
push
cs
adc
jg
adc
sub
cmp
dec
push
push
out
je
in
push
rcr
and
pop
popa
or
cmp
hlt
add
call
xchg
stos
mov
dec
loope
mov
dec
loope
in
sti
pop
push
out
je
out
je
in
push
rcr
and
mov
popa
or
cmp
enter
call
je
jb
sub
int3
dec
je
jb
jle
iret
dec
je
out
je
out
jbe
(bad)
retf
dec
cmp
pop
push
in
repnz
dec
neg
nop
dec
push
lock
in
push
out
loope
mov
dec
loope
leave
sti
pop
push
out
jbe
lea
cmp
dec
push
push
out
jbe
(bad)
retf
dec
cmp
pop
push
in
repnz
push
push
push
shr
mov
mov
in
jmp
push
xchg
mov
cmps
push
add
sbb
push
out
or
sbb
lea
push
cmp
dec
je
out
jbe
lea
lods
clc
inc
idiv
dec
enter
iret
mov
dec
je
(bad)
xchg
nop
or
mov
dec
dec
mov
push
cs
dec
push
jmp
cmc
add
(bad)
(bad)
pop
mov
ffree
pop
scas
fnsave
adc
retf
imul
sub
push
daa
push
jno
pop
cmp
adc
adc
dec
loope
xor
dec
add
out
dec
aas
cmp
fmulp
mov
lods
clc
pop
jbe
dec
or
cmp
sub
mov
(bad)
sbb
add
lahf
mov
ficomp
dec
jmp
sbb
push
jp
xchg
(bad)
jno
loope
add
lahf
xchg
lds
push
in
ficom
(bad)
(bad)
fwait
push
jb
loope
gs
and
dec
cmps
pop
lea
retf
xchg
add
pop
es
and
(bad)
lea
dec
lea
cs
imul
fist
(bad)
(bad)
fwait
push
jb
loope
sub
push
(bad)
ret
jge
fcom
lock
es
and
lea
dec
lea
cs
imul
fcom
(bad)
(bad)
fwait
push
jb
loope
gs
push
(bad)
retf
arpl
mov
into
push
lods
jb
dec
mov
or
test
dec
imul
fcom
(bad)
(bad)
fwait
push
jb
loope
gs
push
(bad)
retf
arpl
mov
into
push
lods
jb
dec
mov
or
pop
jbe
dec
or
fimul
dec
loope
jb
neg
lock
es
and
(bad)
lea
inc
lea
mov
or
pop
jbe
dec
or
fimul
dec
loope
jb
test
dec
push
shl
mov
es
and
xchg
iret
dec
xchg
(bad)
lea
inc
lea
cs
imul
fist
(bad)
(bad)
fwait
push
jb
loope
and
push
(bad)
retf
or
lock
es
and
iret
dec
xchg
(bad)
lea
inc
lea
cs
imul
fist
(bad)
(bad)
fwait
push
jb
loope
gs
push
lea
push
cmp
dec
jbe
or
fimul
dec
loope
jb
jbe
and
push
mov
in
cmc
adc
dec
jbe
and
push
mov
in
cmp
mov
popf
xchg
movs
ret
jge
fdivr
rcl
xlat
xchg
mov
fisubr
dec
add
sbb
es
and
or
movs
push
pop
stos
add
xchg
mov
lea
mov
add
sbb
push
loop
fbld
popf
xchg
test
daa
and
add
push
push
(bad)
retf
lods
dec
push
or
adc
xchg
mov
fisubr
bnd
dec
push
add
sbb
int3
mov
mov
jmp
fidivr
out
fimul
repz
iret
dec
xchg
(bad)
pusha
mov
inc
inc
lea
stos
xchg
dec
push
jmp
out
sbb
mov
push
clc
pop
jbe
dec
or
fimul
cmps
jmp
bound
jp
fimul
mov
push
clc
pop
jbe
dec
or
fimul
cmps
jmp
inc
fwait
dec
push
shl
mov
imul
fst
(bad)
(bad)
fwait
mov
gs
mov
push
clc
pop
jbe
dec
or
fimul
cmps
jmp
mov
imul
(bad)
ins
mov
sahf
out
jle
loope
mov
(bad)
sbb
rep
jb
dec
mov
or
mov
es
and
(bad)
pusha
mov
test
dec
sahf
out
jle
loope
mov
(bad)
inc
mov
into
rep
jb
dec
mov
add
aaa
mov
jle
loope
test
(bad)
dec
rep
jb
dec
mov
or
mov
es
and
pusha
mov
pop
inc
lea
out
jle
loope
xchg
(bad)
cmp
pop
push
add
rep
jb
dec
mov
add
pop
mov
jle
loope
xchg
(bad)
mov
into
rep
jb
dec
mov
or
mov
es
and
xchg
iret
dec
xchg
(bad)
pusha
mov
in
inc
lea
out
jle
loope
cmp
cmp
into
rep
jb
dec
mov
or
mov
es
and
xchg
iret
dec
xchg
(bad)
pusha
mov
mov
and
cmps
jmp
jmp
mov
shl
dec
push
lea
outs
jecxz
dec
jbe
dec
or
mov
push
(bad)
push
fimul
mov
mov
popa
stc
pop
popf
out
gs
adc
push
or
popa
aas
lea
movs
adc
push
push
or
xor
mov
nop
je
in
scas
adc
mov
xchg
test
fwait
mov
dec
inc
fwait
xchg
(bad)
dec
push
mov
or
mov
pop
or
sbb
(bad)
retf
mov
imul
mov
lods
mov
fwait
jnp
dec
push
xchg
or
mov
add
out
jb
dec
cmp
into
loop
jb
dec
mov
push
(bad)
adc
xor
push
gs
push
(bad)
icebp
ffree
xchg
sub
dec
mov
fild
pop
adc
stos
jne
loope
or
(bad)
enter
or
push
clc
jl
ret
cmp
push
cmp
into
loop
jb
dec
mov
or
inc
push
lea
ret
cmp
push
cmp
into
loop
jb
dec
mov
push
pop
mov
lea
(bad)
jno
loope
frstor
lahf
mov
add
loop
jb
dec
cmp
into
loop
jb
dec
mov
in
cmc
adc
mov
add
push
push
(bad)
enter
into
loop
jb
dec
mov
add
loop
jb
popf
xchg
mov
xchg
(bad)
jno
loope
frstor
sbb
iret
dec
xchg
(bad)
jno
loope
frstor
popf
xchg
popf
and
fimul
mov
lods
jb
idiv
jge
clc
fimul
xchg
jmp
cmp
xchg
(bad)
jno
loope
frstor
popf
xchg
add
push
(bad)
(bad)
fwait
scas
jno
loope
dec
dec
dec
mov
aam
fwait
stos
jne
loope
jnp
pop
push
(bad)
enter
int
push
lea
out
mov
lods
in
scas
adc
dec
xchg
(bad)
jno
loope
frstor
popf
xchg
popf
and
iret
dec
xchg
(bad)
jno
loope
frstor
xchg
(bad)
jno
loope
frstor
xchg
(bad)
push
mov
xchg
(bad)
push
mov
sbb
clc
pop
xchg
(bad)
push
mov
sbb
inc
loope
push
mov
ret
mov
and
ret
jge
fsubr
(bad)
fwait
scas
jae
loope
in
hlt
adc
mov
add
or
enter
into
loop
jb
dec
mov
add
(bad)
movs
jb
xchg
out
jno
loope
fisub
xchg
out
push
mov
sbb
and
mov
into
jmp
mov
lods
fnsave
mov
add
aaa
mov
jno
loope
frstor
xchg
out
jno
loope
fcmovb
mov
fdivp
dec
pop
add
aam
push
(bad)
(bad)
fwait
stos
jne
loope
out
loope
jns
loope
in
imul
and
cmp
dec
dec
mov
add
loop
jb
dec
add
repnz
jb
div
inc
mov
ror
xchg
nop
test
loope
jb
repnz
jb
idiv
lahf
dec
push
fidivr
out
fimul
pop
and
dec
not
cwde
dec
push
or
lods
jb
inc
or
push
fadd
sti
jmp
pop
push
push
gs
rcpps
xchg
ins
jle
ret
push
ret
jle
dec
push
lea
mov
in
push
dec
lea
xchg
(bad)
sub
push
frstor
je
gs
push
lea
lahf
mov
push
push
push
lock
dec
dec
dec
dec
mov
dec
xchg
mov
mov
lea
jbe
lea
cmp
and
push
lea
dec
mov
add
pop
mov
jbe
mov
fimul
cli
lock
jb
loope
test
je
in
scas
adc
mov
add
xchg
mov
push
lea
mov
ror
inc
iret
jbe
(bad)
pop
push
jb
xchg
iret
dec
cmps
adc
dec
push
movs
outs
ret
popa
mov
fimul
clc
inc
lea
add
push
add
jmp
xchg
je
aaa
cdq
add
inc
fimul
fst
add
xchg
(bad)
sub
test
mov
lea
in
cld
rep
jb
int
out
pop
dec
fimul
xchg
ja
fild
pop
adc
fidivr
mov
cmps
loope
or
mov
(bad)
cld
rep
jb
push
and
pusha
mov
push
gs
push
(bad)
ret
dec
dec
imul
mov
jb
sub
lods
jb
lahf
mov
add
mov
cmp
lahf
hlt
adc
mov
add
or
and
fimul
call
xchg
(bad)
cmp
loope
frstor
xchg
(bad)
cmps
loope
frstor
xchg
(bad)
sub
sub
xchg
retf
iret
dec
push
cmp
mov
add
rcpps
ret
mov
xchg
mov
hlt
adc
dec
jbe
or
in
push
gs
or
xor
loope
mov
repnz
push
lea
xor
out
push
cmp
mov
scas
adc
dec
jbe
cmp
pop
push
push
add
ss
(bad)
mov
push
push
lea
inc
push
lea
lods
jb
fnstsw
cmp
fld
mov
sub
pop
push
push
add
cld
mov
or
push
push
lea
add
dec
jbe
or
cli
pop
push
in
hlt
adc
dec
imul
dec
push
ror
xchg
out
xor
aam
iret
dec
cmps
pop
lea
mov
lea
mov
into
scas
mov
out
je
out
je
out
jbe
lea
cmp
cld
adc
ret
or
lds
dec
je
out
je
frstor
fst
xor
(bad)
pop
jmp
(bad)
fwait
out
mov
add
adc
(bad)
xchg
out
mov
rol
pop
shl
and
fdivrp
repz
add
imul
lods
clc
push
cmps
or
(bad)
(bad)
pop
jmp
and
xchg
mov
stos
mov
or
ins
xor
mov
push
(bad)
(bad)
pop
jmp
(bad)
fwait
out
mov
add
rcpps
mov
rol
pop
shl
and
fdivrp
repz
add
imul
lods
clc
push
into
or
(bad)
(bad)
pop
jmp
and
xchg
mov
stos
mov
jb
stos
mov
xor
mov
rep
jb
fwait
jmp
loope
dec
(bad)
sbb
enter
and
push
fcmove
xchg
push
add
(bad)
push
jp
fimul
push
sub
dec
je
test
push
(bad)
ret
in
popa
push
lea
push
mov
add
into
xchg
enter
lea
mov
div
popf
dec
push
fcmove
xchg
fst
xor
push
lea
push
or
or
lea
push
inc
dec
push
push
(bad)
(bad)
pop
out
frstor
je
jb
sub
int3
dec
je
out
je
out
je
out
jbe
lea
pop
push
in
repz
pop
push
push
cs
mov
lea
mov
out
test
dec
push
cmp
mov
xchg
mov
and
dec
sahf
and
dec
idiv
dec
push
cmp
mov
and
lea
(bad)
and
xchg
das
mov
test
sbb
(bad)
and
into
mov
jb
sbb
dec
lahf
mov
add
cmps
mov
or
lock
jb
jbe
dec
or
cmp
mov
ficom
lea
pop
push
(bad)
retf
neg
dec
push
pop
xchg
clc
dec
popf
jbe
(bad)
pop
push
lea
xchg
mov
mov
jb
dec
cmp
cmp
out
je
gs
adc
sbb
test
lock
jb
je
out
jbe
clc
or
cmp
inc
push
push
frstor
je
in
pop
push
lea
pop
lods
mov
mov
cmc
dec
add
cli
add
adc
retf
into
dec
push
fmulp
scas
dec
mov
out
je
out
xchg
push
imul
push
pop
dec
ds
or
adc
xchg
popf
dec
dec
fisubr
repnz
(bad)
dec
push
add
sbb
push
mov
cmp
pop
push
mov
pop
or
pop
push
lea
shl
adc
jecxz
push
push
fs
push
push
lea
push
lea
xlat
icebp
dec
push
push
mov
pop
push
lea
add
push
add
pop
lea
imul
push
lea
popf
outs
loope
pop
push
lea
lea
cmp
pop
push
jb
jb
iret
dec
test
cmps
jecxz
jb
fxam
jmp
cmps
pop
push
frstor
popf
xchg
popf
ret
jo
loope
jne
out
dec
(bad)
fwait
mov
loope
jb
imul
or
dec
inc
call
and
jb
loope
leave
sti
pop
push
gs
adc
inc
fisub
clc
rcr
or
not
fmulp
scas
jb
xor
lods
mov
imul
scas
jb
xor
lods
push
mov
jecxz
jb
mov
pop
aas
sub
mov
fwait
mov
mov
js
xchg
jecxz
jb
xchg
(bad)
ins
mov
lods
cmps
into
(bad)
scas
jb
dec
cmp
ldmxcsr
lea
xchg
stos
jp
xchg
(bad)
dec
mov
lods
add
popf
outs
in
pop
push
lea
mov
repnz
pop
push
cs
ficom
(bad)
retf
test
test
ficom
lea
outs
stc
(bad)
pop
push
lea
sbb
gs
cmc
lods
jb
sahf
outs
stc
(bad)
pop
push
mov
adc
mov
inc
fidiv
out
dec
mov
xchg
stos
mov
dec
mov
lea
pop
or
push
lea
push
gs
adc
mov
cmps
adc
dec
push
movs
push
fwait
mov
dec
jmp
test
mov
lods
clc
inc
test
push
mov
add
jmp
scas
jb
xchg
xchg
push
push
or
or
sbb
or
daa
leave
jo
daa
cmp
push
daa
mov
sbb
or
daa
mov
or
daa
mov
or
daa
test
or
daa
xchg
jo
repz
daa
cdq
jo
pop
and
push
daa
xor
pop
or
push
lods
clc
pop
idiv
or
sbb
cmp
push
daa
popf
jo
repz
daa
test
addr16
push
and
inc
popf
dec
loope
popf
mov
jbe
jb
push
lods
clc
pop
idiv
or
push
(bad)
enter
mov
push
push
out
ret
mov
fidiv
out
dec
(bad)
fwait
mov
loope
rcl
push
(bad)
ret
jo
loope
ror
push
or
push
sbb
dec
push
fimul
dec
loope
jb
loope
gs
push
gs
push
(bad)
retf
mov
push
clc
imul
jbe
or
mov
loope
gs
push
gs
adc
push
lea
mov
pop
into
pop
lods
jb
xchg
(bad)
js
loope
dec
into
call
shl
dec
adc
pop
dec
push
push
in
push
push
(bad)
(bad)
fwait
push
jb
loope
jb
call
dec
push
fiadd
dec
loope
jb
(bad)
lods
int
and
ds
jne
ins
dec
out
jbe
jle
push
ficom
dec
loope
jb
idiv
mov
ror
and
and
cmp
dec
je
gs
adc
lea
mov
and
push
(bad)
repz
mov
into
cli
scas
jb
xchg
xchg
add
pop
lods
jb
dec
fimul
mov
jbe
or
mov
test
dec
push
ror
jbe
lea
fimul
dec
loope
jb
loope
xchg
out
pop
push
gs
push
(bad)
retf
mov
push
clc
imul
jbe
or
mov
loope
xchg
out
pop
push
gs
adc
lea
xchg
fimul
loope
or
mov
stos
popf
aas
cmp
mov
mul
dec
push
lods
mov
mov
not
or
lods
jb
cmc
outs
cmp
push
jb
loope
or
lods
jb
and
dec
and
imul
jbe
or
cmp
dec
loope
xchg
out
pop
push
gs
fwait
push
lea
(bad)
lea
push
jb
loope
popf
cmp
fimul
fwait
push
jb
loope
add
jmp
jb
dec
cmp
jmp
jb
dec
mov
push
(bad)
push
cmp
push
push
add
pop
lods
jb
dec
lods
mov
mov
sahf
out
mov
cmp
mov
imul
test
lods
mov
mov
neg
dec
push
fidiv
stc
fimul
scas
jecxz
jb
(bad)
or
lods
jb
xchg
(bad)
js
loope
frstor
das
mov
js
loope
frstor
popf
xchg
popf
and
push
lea
(bad)
mov
jg
or
mov
or
mov
lods
and
cmp
dec
je
gs
pop
push
lea
mov
fs
push
(bad)
ret
jne
(bad)
or
lods
jb
xchg
(bad)
js
loope
frstor
mov
(bad)
js
loope
frstor
popf
xchg
popf
and
push
lea
(bad)
mov
jnp
or
mov
or
mov
lods
and
cmp
dec
je
gs
push
push
lea
mov
fs
push
(bad)
(bad)
xchg
push
jb
loope
inc
mov
shl
enter
imul
jbe
or
cmp
dec
loope
movs
in
push
gs
push
push
lea
fcom
jb
loope
lea
loope
jb
xchg
xlat
mov
lods
jb
cs
mov
sub
lea
cs
gs
push
lea
mov
mov
(bad)
retf
fwait
lods
jae
loope
pop
into
loope
jb
and
repnz
stos
movs
mov
xchg
add
pop
lods
jb
dec
fimul
mov
jbe
or
mov
div
dec
pop
jbe
lea
fimul
dec
loope
jb
loope
lods
in
push
gs
push
(bad)
retf
mov
push
clc
imul
jbe
or
cmp
dec
loope
lods
in
push
gs
push
lea
fcom
jae
loope
lea
loopne
jb
xchg
xlat
mov
lods
jb
cs
mov
sub
lea
in
mov
xor
push
lea
mov
fs
sbb
(bad)
retf
fwait
lods
jae
loope
add
pop
lods
jb
popf
fwait
jb
sahf
outs
mov
stos
cmp
lods
jae
loope
dec
cmp
push
(bad)
(bad)
fwait
push
jb
loope
add
jmp
jb
dec
cmp
jmp
jb
dec
mov
push
(bad)
push
cmp
and
cmp
or
and
push
mov
add
jmp
lods
xchg
(bad)
ins
mov
lods
push
into
(bad)
scas
jb
xchg
xchg
out
je
out
loope
jns
loope
gs
sbb
retf
and
dec
or
push
clc
or
pop
mov
and
or
mov
nop
out
xchg
(bad)
jge
loope
fistp
jbe
and
push
lods
cmp
hlt
push
lea
push
add
out
scas
jb
dec
cmp
dec
loope
jns
loope
test
push
(bad)
(bad)
xchg
cmps
jo
loope
inc
mov
shl
and
ficomp
mov
dec
ficom
mov
loope
jns
loope
gs
push
fimul
mov
je
in
in
adc
mov
mov
or
stc
imul
loope
gs
sbb
mov
pop
cmp
dec
push
push
out
je
out
je
out
jbe
lea
cmp
mov
push
(bad)
ret
jae
loope
(bad)
out
pop
push
lea
sbb
lea
push
lods
cmp
aam
lea
pop
sbb
and
or
mov
nop
out
xchg
(bad)
jge
loope
fistp
jbe
aas
or
lods
cmp
adc
lea
push
add
out
scas
jb
dec
cmp
loope
jns
loope
movs
sbb
ret
jne
fldcw
mov
fst
(bad)
pop
push
mov
push
or
pop
popa
lea
push
out
jbe
dec
or
cmp
mov
ficom
lea
pop
push
(bad)
retf
mul
add
loope
dec
push
je
jb
push
cld
int3
dec
div
jne
stc
fimul
xchg
jecxz
jb
fnstcw
jb
push
lods
clc
inc
loope
test
inc
or
lea
xchg
mov
cmps
adc
fistp
outs
push
inc
xchg
stos
jp
xchg
push
jno
(bad)
enter
mov
pop
or
out
jne
fnop
lock
pop
pop
or
sub
cmp
push
xchg
mov
add
aaa
stos
add
and
push
clc
inc
loope
or
les
push
lea
sar
push
xchg
mov
mov
xor
int3
dec
imul
add
int
idiv
mov
fidiv
out
dec
jo
dec
sub
push
xchg
mov
mov
ss
int3
dec
imul
ds
int3
dec
imul
dec
push
jmp
pushw
push
jp
xchg
push
jns
fldcw
imul
mov
ficom
lea
pop
jb
idiv
int3
dec
test
push
push
lea
add
mov
ficom
lea
inc
jb
call
dec
push
mov
jne
fldenv
jo
mov
mov
add
or
fidiv
out
dec
jo
sar
push
es
add
or
push
lea
sbb
nop
outs
mov
(bad)
ret
jne
fldcw
push
mov
fcom
jo
jnp
or
es
add
cmp
push
push
lea
sbb
nop
addr16
lea
xlat
cmp
push
es
add
or
pop
push
aas
or
clc
pop
loope
popf
mov
pop
fistp
mul
mov
mov
jne
(bad)
adc
xchg
popf
dec
push
push
jb
push
push
into
dec
mov
lea
push
jb
adc
dec
mov
lea
push
jb
push
push
into
dec
mov
lea
push
jb
or
dec
mov
lea
push
jb
ds
into
dec
mov
lea
push
jb
xor
dec
mov
lea
push
jb
cs
into
dec
mov
lea
push
jb
sub
dec
mov
lea
push
fadd
sti
add
mov
xchg
xchg
or
and
jne
dec
mov
push
(bad)
push
fcmove
mov
xchg
stc
bound
adc
je
daa
ja
add
cmc
sbb
aas
sbb
jne
imul
dec
pop
xchg
stc
dec
popf
stos
lods
aas
in
cmp
dec
je
fisub
push
add
lock
jb
xlat
nop
aam
repnz
popf
dec
push
jle
pop
push
push
or
outs
lea
push
(bad)
mov
cmp
pop
cmp
mov
aam
mov
push
lods
push
(bad)
sbb
bound
mov
xchg
pop
test
dec
push
push
jb
pop
push
into
dec
mov
lea
push
jb
pop
push
into
dec
mov
lea
push
jb
push
push
into
dec
mov
lea
push
jb
push
push
into
dec
mov
lea
push
jb
dec
push
into
dec
mov
lea
push
jb
dec
push
into
dec
mov
lea
push
jb
inc
push
into
dec
mov
lea
push
jb
inc
push
into
dec
mov
lea
push
jb
jle
into
dec
mov
lea
push
jb
jp
into
dec
mov
lea
push
jb
jbe
into
dec
mov
lea
push
jb
jb
into
dec
mov
lea
push
jb
outs
push
into
dec
mov
lea
push
jb
push
into
dec
mov
lea
push
jb
push
into
dec
mov
lea
push
jb
bound
dec
mov
lea
push
jb
sahf
push
into
dec
mov
lea
push
jb
call
dec
push
push
jb
xchg
push
into
dec
mov
lea
push
jb
xchg
push
into
dec
mov
lea
push
jb
mov
dec
mov
lea
push
jb
mov
dec
mov
lea
push
jb
xchg
dec
mov
lea
push
jb
adc
mov
lea
push
jb
mov
ret
lea
push
jb
mov
ret
lea
push
jb
mov
into
dec
mov
lea
push
jb
mov
into
dec
mov
lea
push
jb
scas
push
into
dec
mov
lea
push
jb
stos
push
into
dec
mov
lea
push
jb
cmps
push
into
dec
mov
lea
push
jb
mov
ret
lea
push
jb
ficom
dec
mov
lea
push
jb
ficom
dec
mov
lea
push
jb
(bad)
push
into
dec
mov
lea
push
jb
rcl
dec
mov
lea
push
jb
into
push
into
dec
mov
lea
push
jb
retf
dec
mov
lea
push
jb
(bad)
push
into
dec
mov
lea
push
jb
ret
dec
mov
lea
push
jb
(bad)
push
into
dec
mov
lea
push
jb
cli
push
into
dec
mov
lea
push
jb
not
dec
mov
lea
push
jb
repnz
into
dec
mov
lea
push
jb
out
into
dec
mov
lea
push
jb
loop
into
dec
mov
lea
push
jb
push
push
into
dec
mov
lea
push
jb
sbb
dec
mov
lea
push
jb
push
push
into
dec
mov
lea
push
jb
adc
dec
mov
lea
push
jb
push
push
into
dec
mov
lea
push
jb
or
dec
mov
lea
push
jb
push
push
into
dec
mov
lea
push
jb
add
dec
mov
lea
push
jb
ds
into
dec
mov
lea
push
jb
cmp
dec
mov
lea
push
jb
ss
into
dec
mov
lea
push
jb
xor
dec
mov
lea
push
jb
cs
into
dec
mov
lea
push
jb
sub
dec
mov
lea
push
jb
es
into
dec
mov
lea
push
jb
and
dec
mov
lea
push
jb
pop
push
into
dec
mov
lea
push
jb
pop
push
into
dec
mov
lea
push
jb
push
push
into
dec
mov
lea
push
jb
push
push
into
dec
mov
lea
push
jb
dec
push
into
dec
mov
lea
push
jb
dec
push
into
dec
mov
lea
push
jb
inc
push
into
dec
mov
lea
push
jb
inc
push
into
dec
mov
lea
push
jb
jle
into
dec
mov
lea
push
jb
jp
into
dec
mov
lea
push
jb
outs
push
into
dec
mov
lea
push
jb
push
into
dec
mov
lea
push
jb
push
into
dec
mov
lea
push
jb
bound
dec
mov
lea
push
jb
sahf
push
into
dec
mov
lea
push
jb
xchg
push
into
dec
mov
lea
push
jb
mov
dec
mov
lea
push
jb
mov
dec
mov
lea
push
jb
xchg
dec
mov
lea
push
jb
adc
mov
lea
push
jb
mov
ret
lea
push
jb
mov
ret
lea
push
jb
mov
into
dec
mov
lea
push
jb
mov
into
dec
mov
lea
push
jb
cmps
push
into
dec
mov
lea
push
jb
mov
ret
lea
push
jb
ficom
dec
mov
lea
push
jb
ficom
dec
mov
lea
push
jb
(bad)
push
into
dec
mov
lea
push
jb
rcl
dec
mov
lea
push
jb
into
push
into
dec
mov
lea
push
jb
retf
dec
mov
lea
push
jb
(bad)
push
into
dec
mov
lea
push
jb
ret
dec
mov
lea
push
jb
(bad)
push
into
dec
mov
lea
push
jb
cli
push
into
dec
mov
lea
push
jb
not
dec
mov
lea
push
jb
repnz
into
dec
mov
lea
push
jb
out
push
into
dec
mov
lea
push
jb
jmp
dec
push
push
jb
out
into
dec
mov
lea
push
jb
loop
into
dec
mov
lea
push
