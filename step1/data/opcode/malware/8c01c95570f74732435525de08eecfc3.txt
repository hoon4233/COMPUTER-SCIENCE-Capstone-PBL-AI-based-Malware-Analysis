dec
mov
mov
imul
idiv
fwait
arpl
das
fwait
jnp
jns
push
cs
scas
cmp
test
imul
jb
jnp
loop
jnp
imul
dec
pop
lock
test
call
inc
setnp
popa
xor
lock
div
fwait
arpl
xor
imul
inc
aas
into
jae
mov
jge
mov
xor
cwde
sub
cmp
adc
jnp
jnp
push
jne
adc
and
xchg
mov
cmp
jne
jmp
idiv
icebp
retf
std
imul
das
fstp
jnp
sub
mov
xlat
jge
mov
cs
repnz
xchg
fsubrp
movaps
cli
xchg
hlt
cmp
push
ja
adc
inc
xchg
jb
pop
imul
addr16
ret
in
jnp
push
sub
xor
ins
lock
xchg
jnp
imul
movaps
jmp
cmp
push
int
mov
jg
jnp
out
inc
movaps
mov
cmp
push
int
mov
sub
loopne
sub
outs
and
jg
push
add
adc
xchg
(bad)
mov
jmp
xchg
cmp
arpl
ja
loopne
hlt
xor
jno
jmp
jne
les
ja
loopne
hlt
push
or
nop
into
lock
inc
ja
imul
mov
jge
aad
xchg
sub
imul
arpl
dec
pop
jnp
outs
ins
retf
std
imul
imul
push
push
add
call
or
jge
mov
xchg
or
xchg
dec
imul
jge
movs
pop
jge
cmp
jne
mov
cmp
imul
mov
imul
loope
hlt
xchg
loop
inc
fstp
jnp
push
jp
mov
sbb
movaps
mov
popf
and
push
jnp
sub
mov
xchg
adc
adc
pmuludq
imul
xchg
jmp
cmp
fwait
imul
dec
(bad)
mov
mov
imul
lahf
fstp
jnp
jle
jnp
xchg
dec
push
movaps
mov
cmp
sub
call
or
cmps
pop
mov
repnz
sub
jnp
test
fdivr
imul
pop
shr
mov
imul
cmp
in
sbb
test
js
jge
mov
add
mov
dec
in
cmp
imul
cmp
or
pop
mov
mov
clc
mov
jge
cmp
adc
idiv
xchg
into
test
cs
jge
jge
in
sbb
aad
adc
idiv
pop
test
inc
xchg
sub
jnp
scas
jno
inc
xchg
jge
retf
outs
dec
mov
nop
pop
jge
dec
mov
(bad)
push
fadd
mov
or
or
pop
mov
mov
push
sub
add
out
int
test
loop
idiv
xchg
sub
adc
imul
aad
pop
jnp
push
jno
retf
loopne
imul
jmp
dec
pop
jns
jg
cmp
retf
push
stos
xchg
or
imul
push
into
add
mov
xchg
xchg
or
imul
pop
jns
jg
fs
ret
push
mov
imul
ss
js
mov
mov
jmp
jecxz
clc
push
or
ds
cmp
adc
push
jne
test
jge
lods
je
retf
outs
dec
mov
cmps
xchg
or
push
popa
adc
push
adc
inc
cmp
imul
dec
mov
inc
test
js
and
cmp
ins
sub
cmp
push
mov
in
inc
jno
hlt
mov
inc
outs
or
std
imul
dec
imul
inc
imul
ss
mov
retf
fistp
jnp
xchg
xchg
cmp
test
loopne
jae
aad
jns
aad
inc
xchg
xor
(bad)
jmp
jp
push
test
xchg
or
cs
cli
jnp
ds
push
js
cli
xchg
xchg
dec
ss
cwde
ss
bnd
hlt
mov
cmp
push
jl
retf
mov
inc
loopne
jae
stos
(bad)
mov
sub
inc
mov
test
cmp
add
mov
jg
push
xchg
lea
jge
in
cmp
mul
scas
lods
clc
xchg
adc
dec
lock
mov
xchg
add
cmp
stos
(bad)
mov
sub
inc
mov
lods
or
out
jl
inc
xchg
jge
mov
mov
dec
loopne
jae
jg
repz
jnp
xchg
cmp
pop
xchg
lock
mov
xchg
xor
inc
lea
inc
xchg
jge
cmp
test
and
jbe
sub
pop
cmp
sub
add
ja
lods
loop
mov
cmp
push
dec
xchg
xor
imul
arpl
test
or
ss
mov
inc
je
mov
mov
mov
cmp
xor
jne
mov
xor
out
cmp
sub
ss
cli
xchg
jbe
addr16
lds
imul
xchg
hlt
ds
loop
xchg
call
add
cmp
mov
mov
mov
mov
outs
mov
cmp
aas
jnp
cs
mov
xchg
hlt
mov
inc
xor
and
sub
pop
cmp
sub
xor
imul
sub
xchg
js
or
jge
dec
and
arpl
mov
cdq
div
mov
ret
outs
scas
push
lods
(bad)
pop
mov
inc
pusha
pop
popf
lock
xchg
hlt
mov
inc
pop
mov
mov
jmp
aam
jg
cmp
hlt
mov
std
imul
std
imul
cmp
xor
xlat
xor
xchg
or
sub
push
cmp
xchg
cmp
dec
and
pop
cmp
sub
ss
cmp
xchg
push
xor
or
adc
aad
pop
jnp
xchg
bound
cmp
test
arpl
jnp
imul
inc
push
bnd
jns
mov
xor
mov
out
cmp
sub
push
jne
ins
das
gs
pop
(bad)
cmp
pushf
call
push
loope
std
imul
retf
std
imul
xor
jns
leave
outs
mul
cmp
push
outs
jge
dec
mov
ds
loop
lock
xchg
cs
jp
jnp
xor
and
sub
pop
call
sub
retf
repz
mov
jnp
call
jns
aad
xchg
mov
cli
fwait
sub
jnp
stos
or
ret
lods
das
jge
dec
mov
ds
loop
dec
jg
cmps
je
stos
hlt
ds
bound
retf
pop
sub
mov
fwait
sub
jnp
test
mov
jg
cmp
ss
(bad)
mov
pop
sub
mov
xchg
imul
test
xchg
repnz
jge
mov
mov
mov
inc
add
jge
mov
mov
dec
mov
sbb
in
cmp
bound
jl
ss
inc
ret
fistp
jnp
xchg
jge
retf
ins
(bad)
pop
(bad)
fistp
jnp
retf
std
imul
stc
mov
cli
fiadd
or
jge
addr16
sahf
repnz
mov
cmp
neg
cmp
cmp
movs
bnd
pop
out
sub
xlat
xchg
cmp
clc
call
jno
jne
jge
aad
adc
idiv
mov
adc
jnp
inc
test
jge
mov
pop
out
sub
push
aas
jl
mov
loop
cli
jl
push
jnp
out
(bad)
out
loopne
jae
sub
xor
sub
cmp
mov
push
jp
imul
inc
imul
push
jnp
push
test
push
add
std
imul
ds
jb
imul
xor
mov
pop
leave
cmp
pop
leave
cmp
sub
cli
xchg
hlt
mov
aad
xchg
push
retf
imul
mov
mov
cli
mov
xor
test
cli
sbb
or
jge
cli
fwait
sub
xchg
scas
loop
ret
jge
dec
into
test
loopne
jg
loopne
test
dec
hlt
ds
jmp
jg
sub
and
aas
jnp
stos
pushf
cmp
loopne
test
imul
inc
bound
push
int3
imul
mov
test
fsub
sbb
jge
xor
sub
imul
xor
pop
leave
cmp
loopne
ja
out
mov
ds
push
imul
sahf
repnz
mov
cmp
neg
cmp
cmp
idiv
dec
push
cmp
inc
xchg
(bad)
pop
and
aas
jnp
loop
mov
stos
inc
xchg
xor
xor
and
sub
pop
call
sub
out
call
xor
dec
lea
cwde
hlt
adc
cmp
pop
jns
cmp
jge
mov
lods
cmp
ss
hlt
adc
hlt
mov
jnp
sbb
jne
sti
push
jne
mov
jns
ficom
lock
mov
leave
aas
jnp
cmp
jnp
call
jb
mov
leave
aas
jnp
and
retf
popa
(bad)
push
inc
imul
xchg
xchg
hlt
mov
retf
cmp
das
pop
sub
fcmovnu
aas
jnp
cs
or
ds
loop
clc
ficom
popa
jb
pop
jns
dec
push
jg
lods
loopne
jae
outs
dec
inc
xchg
inc
(bad)
push
jns
ficom
test
js
idiv
mov
inc
dec
mov
xchg
cmp
xchg
jge
ret
cmpxchg
cmp
imul
lods
pop
jnp
imul
aad
pop
jnp
imul
add
(bad)
imul
cli
xchg
pop
jns
imul
out
or
mov
mov
sti
sub
inc
loop
adc
cmp
adc
jnp
add
cli
lahf
sub
fwait
std
imul
mov
inc
jge
inc
push
test
loopne
es
ds
sahf
pop
ret
jge
mov
imul
call
and
mov
ss
mov
inc
xchg
add
xchg
rcl
imul
lahf
add
xchg
sub
jmp
mov
test
mov
mov
mov
into
imul
add
jnp
out
mov
inc
xchg
hlt
mov
inc
fidiv
(bad)
jnp
add
(bad)
mov
sbb
jge
retf
mov
jge
xor
popf
test
sub
jnp
loopne
test
and
ds
bound
push
mov
jge
cmp
adc
lock
test
inc
jnp
imul
xchg
je
mov
inc
jae
imul
mov
out
mov
fisub
enter
loopne
test
adc
ds
bound
jnp
add
into
jg
add
mov
repnz
clc
mov
xchg
sbb
retf
aas
jnp
and
mov
xchg
add
sub
pop
ss
imul
(bad)
ret
test
jge
cmp
jg
mov
xchg
cmp
fistp
pop
jp
xor
clc
xchg
sub
jg
test
mov
repnz
add
imul
inc
xchg
hlt
mov
inc
xchg
add
jge
mov
dec
jns
imul
fld
idiv
xchg
add
sub
cmc
sbb
cmp
jno
or
iret
test
mov
cmp
xchg
add
jge
mov
mov
mov
aad
adc
adc
retf
cmp
push
sti
mov
xchg
cmp
pop
adc
imul
inc
xchg
add
(bad)
mov
mov
out
leave
test
jl
mov
stos
popf
cmp
imul
jnp
inc
test
jge
cwde
add
mov
jnp
(bad)
add
add
jge
retf
popa
mov
test
push
(bad)
pop
sub
out
retf
cmp
push
mov
mov
jnp
pop
pop
adc
imul
inc
xchg
add
(bad)
mov
mov
out
leave
test
jl
mov
enter
add
mov
xchg
cmp
addr16
test
jge
cwde
add
mov
jnp
(bad)
add
add
jge
retf
popa
mov
test
push
out
pop
sub
out
retf
cmp
push
jecxz
test
mov
jnp
pop
ja
cmp
add
shr
sbb
out
aad
inc
xchg
hlt
mov
pop
sub
out
retf
cmp
push
aas
mov
xchg
cmp
ja
cmp
add
add
mov
jnp
cmp
cmp
xchg
(bad)
mov
mov
push
ret
jge
add
xchg
imul
inc
test
jge
mov
mov
jnp
(bad)
add
add
jge
retf
popa
mov
test
(bad)
leave
test
jge
test
sub
xor
add
add
leave
cmp
sub
fcmovnu
aas
jnp
test
dec
mov
xchg
add
hlt
mov
or
(bad)
addr16
add
sub
push
sub
cmp
dec
outs
jge
xor
lds
mov
test
test
pop
repnz
xchg
hlt
mov
cmp
cmp
imul
imul
addr16
clc
sbb
inc
pop
xchg
add
jge
push
inc
jno
mov
xchg
add
add
in
test
sub
test
idiv
addr16
add
cld
nop
imul
jnp
out
test
adc
mov
jnp
out
in
inc
xchg
sub
inc
mov
xor
imul
mov
idiv
imul
sub
cmp
mov
out
jl
mov
xchg
add
sub
push
sub
cmp
push
aad
jnp
out
xchg
inc
xchg
sub
out
mov
lock
repnz
bnd
add
mov
cwde
outs
jnp
out
lahf
inc
xchg
sub
out
xchg
test
sub
pop
ss
imul
cs
mov
xchg
cmp
test
sub
cmp
xchg
in
shr
clc
jnp
(bad)
ficom
add
pop
jnp
cmp
jnp
shr
cwde
ss
icebp
test
hlt
mov
inc
xchg
lock
add
lock
add
(bad)
mov
das
xchg
add
add
lock
sbb
jmp
xchg
cmp
jnp
pushf
push
outs
jge
mov
sti
add
mov
jg
imul
loopne
xchg
inc
xchg
sub
sub
cmp
ss
push
inc
imul
imul
inc
xchg
jge
cmp
add
sub
cmp
add
jg
jnp
imul
xchg
cld
mov
mov
jb
mov
jnp
out
aad
inc
xchg
sub
test
test
adc
cli
xchg
hlt
mov
cmp
cmp
imul
sete
jp
imul
push
ds
jnp
xor
nop
std
or
jnp
lods
clc
or
cmp
clc
retf
inc
xchg
xor
adc
inc
sub
fimul
xchg
scas
loop
ret
jge
dec
into
lock
iret
xchg
add
jns
mov
(bad)
rol
xchg
sub
ss
jl
add
mov
jecxz
test
lock
aaa
xchg
add
idiv
cmp
test
imul
inc
bound
jnp
call
cmp
jb
mov
xchg
add
add
xchg
sub
push
sub
cmp
ss
push
inc
imul
imul
call
xor
scas
jnp
imul
xlat
xchg
add
jge
cmp
add
xchg
add
mov
repnz
add
loop
and
xor
jmp
sbb
cmp
bnd
imul
mov
outs
or
xchg
add
sub
jnp
out
add
jge
cmp
imul
jl
lock
cmp
xchg
cmp
push
inc
loop
add
test
aaa
add
xchg
sub
out
test
xchg
add
imul
addr16
jg
out
add
aas
jnp
out
add
jge
cmp
ins
repnz
movs
bnd
shl
xchg
cmp
lds
imul
loop
daa
inc
xchg
xor
loopne
inc
sub
pop
sub
xchg
xor
ret
add
xchg
xor
test
clc
xlat
inc
xchg
sub
pop
sub
xchg
sub
pop
sub
imul
xchg
lahf
inc
xchg
add
add
xchg
cmp
fwait
add
out
add
add
cmp
add
out
lods
test
sub
jae
in
jnp
pushf
sahf
repnz
add
mov
or
out
test
lock
xchg
sub
out
movs
test
sub
jae
out
mov
lock
xchg
sub
test
outs
mov
xchg
add
xchg
dec
dec
xchg
and
mov
jmp
iret
std
imul
push
imul
cmp
repnz
outs
in
cmp
mov
outs
(bad)
loopne
lahf
ss
jl
ss
cdq
mov
mov
imul
add
cmp
jns
repz
jge
dec
push
cdq
repnz
mov
push
pop
loop
lahf
push
adc
sti
or
jge
retf
push
js
add
imul
cs
mov
cli
mov
fs
pop
cld
push
arpl
sub
adc
cli
xchg
add
idiv
dec
pmaxub
imul
test
xchg
xor
jle
adc
leave
cmp
add
jnp
imul
js
xchg
dec
fld
and
ds
sahf
cmp
gs
loopne
jae
std
cmps
xchg
rol
call
js
or
jge
popa
call
jge
ds
imul
hlt
cmp
mov
sub
cmp
jne
jmp
mov
mov
loop
jp
loop
mov
mov
loop
cmp
sub
or
loop
imul
add
imul
imul
sbb
mov
fistp
jnp
data16
imul
inc
outs
or
std
imul
pop
je
stos
xor
repnz
lahf
jl
xchg
cmp
push
push
jg
mov
sub
dec
ins
inc
je
inc
jg
mov
sub
retf
data16
mov
cmp
push
loop
mov
loop
xchg
mov
jge
inc
outs
inc
in
imul
pop
leave
cmp
sub
retf
ins
dec
mov
mov
imul
jae
cmp
sub
scas
sti
cmp
test
js
and
jge
retf
ins
dec
mov
mov
imul
jle
jo
and
jge
push
add
arpl
sub
retf
ins
dec
mov
mov
imul
jae
cmp
sub
dec
cmp
push
mov
arpl
sub
retf
ins
dec
mov
mov
loop
sti
mov
loop
mov
idiv
mov
fild
arpl
sub
retf
ins
dec
mov
mov
imul
jae
cmp
repnz
mov
jecxz
test
js
or
jge
mov
jmp
mov
loop
mov
imul
idiv
mov
imul
mov
gs
imul
push
xchg
cmp
outs
inc
in
imul
repnz
mov
imul
idiv
mov
imul
pop
leave
cmp
sub
push
hlt
jge
mov
loop
clc
mov
push
jge
jg
mov
jbe
hlt
cmp
lahf
jmp
dec
sub
fnstsw
mov
retf
aas
jnp
stos
add
cmp
jbe
mov
sar
jnp
jmp
jnp
pop
cmp
jo
jge
rcl
cmp
jo
and
jge
push
push
cmp
aas
jnp
pop
fcom
mov
sbb
push
loop
mov
imul
jae
cmp
stos
xchg
and
imul
pushf
pushf
repnz
xor
inc
outs
or
std
imul
jmp
mov
sub
fdivr
mov
loop
je
outs
or
mov
cli
pushf
jb
mov
call
mov
mov
imul
out
sti
jnp
imul
dec
sub
jge
outs
jne
jmp
mov
mov
ds
loop
je
mov
imul
pusha
fdivr
sub
mov
call
jge
retf
push
dec
imul
aas
push
mov
sub
cmp
sti
ret
push
fwait
jmp
arpl
sub
mov
hlt
mov
loope
fstp
cmp
mov
js
and
jge
pop
ins
cmc
ds
jmp
lea
pushf
jge
mov
sub
cmp
jno
jmp
nop
cmps
loop
cmp
jmp
jnp
outs
push
test
retf
jmp
jle
sti
cmp
mov
jge
cmp
jno
jmp
nop
cmps
loop
cmp
jmp
jnp
outs
push
test
retf
(bad)
imul
cmp
jle
fistp
jnp
fwait
push
mov
mov
addr16
imul
loop
(bad)
ss
and
jbe
sub
pop
cmp
sub
ss
mov
mov
imul
pop
leave
cmp
imul
jns
outs
sar
sub
sbb
fnstsw
mov
loop
xchg
lods
adc
sub
mov
imul
push
repnz
enter
imul
push
loop
jnp
enter
imul
push
adc
jnp
enter
imul
mov
xor
cwde
clc
push
add
sub
scas
outs
cld
mov
inc
outs
or
std
imul
cli
ret
sub
cmp
imul
mov
mov
push
imul
pop
loop
mov
mov
mov
xchg
jge
push
sbb
call
js
or
jge
fidivr
jo
mov
lods
cmp
js
mov
idiv
loop
fwait
inc
outs
or
std
imul
mov
loop
mov
mov
imul
add
or
mov
sub
xor
cdq
sub
mov
(bad)
imul
mov
loope
aad
lock
pop
jnp
imul
aad
or
adc
pop
cmp
retf
out
add
or
inc
outs
or
std
imul
inc
push
fst
mov
add
retf
mov
imul
inc
or
xchg
or
mov
sub
cli
sub
pop
cmp
jnp
cs
nop
mov
aam
mov
cs
jl
and
jbe
sub
pop
call
adc
xchg
hlt
mov
inc
loopne
ja
cs
lock
ss
call
scas
repnz
adc
xchg
sub
test
xchg
pop
jnp
mov
aad
or
xchg
push
lock
lahf
xchg
jno
cs
jmp
sub
je
inc
mov
test
loop
test
xchg
or
xchg
sub
cmp
loopne
mov
xchg
mov
sub
push
jne
loop
cmp
aas
jnp
xchg
jb
mov
imul
fs
aas
mov
test
fs
aas
mov
test
fs
aas
mov
test
fs
aas
mov
test
popa
jg
mov
das
jle
xor
push
mov
int
xchg
jb
mov
imul
push
inc
mov
mov
fs
outs
test
jecxz
jnp
loop
clc
push
imul
retf
cmp
imul
adc
inc
call
jns
add
je
adc
fs
add
cmp
imul
adc
jg
outs
stos
mov
sub
jnp
cs
ja
imul
scas
out
push
push
outs
push
stos
mov
outs
hlt
ds
loopne
imul
jle
mov
loopne
(bad)
ss
jp
imul
fs
ds
add
test
retf
fs
ds
push
dec
inc
xchg
add
inc
inc
mov
and
inc
mov
xchg
(bad)
xchg
mov
push
cmp
js
push
jnp
retf
cmp
je
outs
jnp
xlat
pop
outs
inc
add
jnp
pusha
hlt
cmp
sti
sub
test
jnp
das
xchg
xchg
mov
outs
push
sti
adc
(bad)
test
aas
push
jnp
retf
cmp
sti
sub
out
loop
clc
push
push
or
mov
push
xchg
jnp
imul
add
clc
ja
imul
scas
out
push
push
outs
push
stos
mov
loop
xor
idiv
push
xchg
jg
ds
stos
outs
jl
mov
push
sub
xchg
xor
push
mul
test
push
imul
inc
ss
(bad)
xchg
mov
push
dec
repnz
call
jns
adc
adc
inc
inc
imul
jae
jo
imul
jnp
das
lods
outs
jl
cmp
jns
mov
imul
inc
imul
fs
inc
xchg
and
mov
jmp
sub
or
jge
retf
mov
aas
push
inc
jnp
bound
cli
inc
cmp
sbb
jle
mov
cs
push
push
or
mov
outs
or
std
imul
jnp
cdq
mov
cli
cmp
cmp
add
jge
or
inc
push
imul
dec
inc
xchg
mov
call
jae
addr16
jp
stos
ins
cmp
retf
jmp
ds
sbb
fs
outs
arpl
sti
je
lock
cdq
jl
xchg
mov
jl
ss
sti
jne
lock
jmp
imul
mov
xchg
hlt
mov
xchg
jl
mov
loop
cmp
xchg
xor
arpl
ds
scas
xchg
js
or
jge
ja
push
xor
arpl
mov
cmp
mov
imul
mov
sub
mov
mov
(bad)
std
imul
jnp
and
ss
daa
call
jnp
cmp
add
jge
movs
xor
sub
aas
sbb
cmp
mov
test
sub
aas
(bad)
sahf
movs
inc
xchg
jge
scas
fs
dec
test
push
js
add
jge
retf
jno
(bad)
pop
mov
test
out
mov
or
cmp
xor
xchg
test
call
adc
lock
push
sar
cmp
lock
mov
out
out
repnz
mov
call
adc
lock
mov
cmp
loop
fbld
add
xchg
cmp
imul
iret
mov
outs
lahf
cli
cmp
xchg
inc
xchg
jl
or
mov
jmp
jle
sar
jnp
fs
ss
xchg
cmp
imul
cwde
xchg
test
lahf
jns
push
push
jnp
out
out
mov
cwde
xchg
test
lahf
jns
jg
sub
sub
sub
js
or
jge
add
jb
sub
jnp
or
pusha
xchg
add
call
repnz
stos
xchg
ins
jle
imul
outs
jge
jmp
dec
add
ins
jnp
cmp
bnd
mov
lea
or
test
imul
push
loopne
push
xchg
or
xchg
sub
stos
and
ud2
sub
sbb
xchg
idiv
xchg
jge
inc
ficom
into
addr16
test
xchg
xor
jmp
test
mul
aas
mov
test
test
mov
xchg
mov
ds
mov
test
cli
inc
imul
sbb
jnp
sbb
outs
jge
mov
mov
test
mov
ds
jge
mov
push
adc
push
xchg
cmp
jge
cmp
mov
test
test
test
cmp
aas
jnp
fisub
loopne
imul
push
call
mov
stos
dec
in
cmp
xchg
cmp
lahf
xchg
test
imul
dec
test
repnz
xchg
jns
mov
repnz
div
loop
outs
push
mov
test
mov
loop
mov
mov
mov
clc
(bad)
push
xchg
cmp
lahf
xchg
test
jns
mov
pop
leave
cmp
xchg
cmp
adc
xchg
mov
jge
ss
frstor
mov
imul
mul
add
add
imul
daa
mov
test
popa
js
loop
out
popa
xchg
xor
retf
mov
out
popa
xchg
cmp
clc
jmp
xchg
xor
(bad)
mov
scas
pusha
xchg
xor
mov
test
popa
idiv
shl
into
arpl
jnp
loopne
scas
pusha
xchg
add
mov
lock
clc
iret
pusha
xchg
cmp
mov
cwde
pusha
xchg
cmp
adc
adc
xchg
cmp
shl
ja
add
mov
mov
test
jle
fistp
jnp
fucomp
mov
cmp
mov
test
hlt
ja
pop
call
out
dec
test
lock
jle
jmp
add
xchg
in
imul
(bad)
je
or
jmp
jae
fs
inc
mov
lahf
xchg
test
retf
jnp
cmp
pop
jb
ret
je
push
jl
mov
imul
dec
test
jp
imul
xchg
lock
mov
mov
test
fisub
adc
test
mov
test
fwait
xor
push
ss
(bad)
xchg
mov
jne
mov
jle
xchg
outs
ss
(bad)
xchg
mov
popa
hlt
mov
js
xchg
jb
xor
mov
mov
test
jg
or
mov
sbb
add
jge
mov
pop
jl
mov
out
dec
mov
xchg
adc
loopne
(bad)
push
xchg
cmp
(bad)
icebp
test
ins
cmp
(bad)
cdq
movs
inc
xchg
setb
(bad)
fisub
or
fisub
mov
mov
test
jge
adc
mov
jmp
inc
mov
push
arpl
adc
mov
jmp
inc
mov
push
ja
adc
mov
sub
mov
(bad)
fsub
xor
fdivr
ret
bt
dec
test
cmps
pusha
xchg
add
or
mov
rcr
sub
fimul
add
cmp
cmp
imul
push
mov
test
outs
ins
test
lahf
xchg
test
ror
imul
xchg
js
or
jge
xchg
xchg
add
jl
or
mov
jmp
jle
sar
jnp
fs
push
inc
xchg
and
mov
jmp
sub
js
test
retf
inc
mov
push
push
pop
out
lar
jge
scas
imul
iret
cld
push
inc
jb
jnp
out
scas
xor
(bad)
std
imul
mov
out
mov
pop
jmp
jl
imul
jmp
sbb
addr16
cli
xchg
loope
mov
push
ds
imul
jmp
jge
cmp
std
ds
push
push
dec
jp
lahf
pop
inc
gs
pushf
sbb
cli
xchg
mov
fdivr
fs
cs
push
cmp
fs
hlt
mov
xchg
jl
or
jl
jg
jge
ret
ds
loop
jp
loop
xor
jge
mov
outs
std
ds
push
int
push
mov
inc
outs
or
xchg
js
mov
test
ret
ds
push
int
push
cmp
mov
inc
outs
or
cmp
ds
stos
jge
mov
imul
aas
cmp
test
jge
mov
int
push
mov
imul
dec
sub
outs
std
ds
outs
std
ds
push
push
dec
fs
in
xchg
add
idiv
(bad)
mov
ins
std
ds
push
jno
mov
push
mov
idiv
inc
loop
jp
loop
xor
jge
retf
ds
push
int
xchg
and
mov
in
cmp
(bad)
mov
out
push
jge
dec
mov
ds
loop
adc
jge
jmp
cmp
ss
mov
lods
xchg
jne
push
inc
daa
retf
aas
mov
nop
mov
adc
repnz
sahf
repnz
xchg
hlt
mov
jl
hlt
sahf
pop
outs
pop
jnp
add
add
push
(bad)
cmps
jmp
xchg
ss
dec
mov
inc
add
or
out
jnp
xchg
sub
add
jnp
out
jnp
xchg
sub
fs
mov
popf
hlt
adc
mov
jmp
or
imul
add
retf
jnp
call
jmp
sub
out
cld
mov
aad
adc
adc
jge
mov
or
cmp
or
call
jnp
cli
addr16
pop
mov
loop
mov
cmp
jmp
imul
cmp
ins
sub
sub
repnz
xchg
lds
pop
loop
(bad)
lods
pop
jnp
push
jno
retf
arpl
ds
cmp
inc
loop
mov
lea
inc
push
sub
out
imul
xchg
xchg
jge
test
and
ss
xchg
mov
sub
jmp
inc
loop
adc
imul
aad
pop
jnp
imul
xchg
or
scas
sub
mov
xchg
or
stos
xchg
sbb
push
jo
mov
xchg
hlt
mov
aad
sub
xor
jno
jle
mov
(bad)
jmp
jp
push
test
jl
jge
jmp
sub
mov
xchg
sub
fwait
std
imul
inc
cmp
jmp
imul
dec
mov
ds
loopne
(bad)
lods
lds
imul
xor
out
cmp
imul
lods
pop
jnp
jmp
jnp
add
mov
imul
push
jne
cdq
cmp
lods
inc
jg
inc
repnz
pushf
call
imul
xchg
xchg
cmp
aad
lock
cmp
ja
cmp
mov
cmp
mov
test
loop
and
mov
sub
jmp
lods
cmp
ds
fs
nop
mov
push
cmp
push
jno
dec
loopne
xchg
test
sub
dec
cs
add
std
imul
jnp
dec
mov
mov
mov
jnp
(bad)
cs
call
and
or
std
inc
sub
push
clc
push
add
fwait
idiv
inc
loop
jp
loop
xchg
add
std
imul
jnp
and
mov
jmp
loopne
ja
adc
mov
sub
mov
jge
out
adc
cmp
xchg
popf
cmp
cmp
jne
xchg
cmp
imul
xchg
hlt
mov
inc
xor
and
sub
pop
call
sub
xor
mov
mov
mov
cli
mov
push
xchg
jnp
push
xchg
jnp
push
cdq
jnp
push
(bad)
test
jle
mov
mov
mov
scas
push
jge
lods
cmp
mov
retf
jecxz
test
leave
shr
mov
cmps
ss
int
xchg
jb
sti
outs
mov
jg
jl
push
jmp
test
xchg
dec
sub
jnp
jmp
test
push
mov
cli
addr16
jmp
ds
sbb
cmps
jp
mov
fs
aas
mov
push
xchg
aas
push
cmp
(bad)
push
push
imul
push
inc
imul
ss
mov
mov
retf
ds
or
stos
(bad)
stos
adc
imul
mov
jge
cmp
ja
cmp
dec
mov
arpl
lahf
xor
jno
or
jnp
jmp
stos
mov
sub
cli
(bad)
cld
mov
gs
xor
jno
or
jne
jmp
stos
mov
(bad)
and
das
sti
in
jmp
sar
jmp
shr
cmp
cmovae
jmp
pop
push
jmp
sti
in
dec
mov
in
jmp
sub
jmp
sti
in
cmp
sti
in
jmp
sub
jmp
sti
in
cmp
sti
in
jmp
push
movs
jmp
sti
in
push
gs
in
jmp
sar
std
imul
outs
mov
jnp
rcl
(bad)
jg
in
jmp
pop
popa
jmp
sti
in
dec
mov
in
jmp
call
in
inc
addr16
in
jmp
push
xchg
jmp
sti
in
sbb
sti
in
jmp
or
repnz
xchg
cmp
sti
sbb
out
in
jmp
sti
js
sub
jmp
cmc
inc
cmp
sti
in
jmp
and
das
sti
imul
mov
in
jmp
js
jmp
sti
(bad)
mov
xchg
add
cmp
jno
das
sti
inc
sti
in
jmp
mov
sbb
das
sti
in
jmp
or
inc
xchg
jge
jmp
cmc
jmp
cmovae
call
mov
jmp
sar
jmp
adc
xor
jmp
sti
in
clc
inc
imul
das
pop
das
jmp
sti
in
shr
cmp
jmp
sti
in
push
jle
in
jmp
pop
scas
jmp
sti
in
sub
sti
in
jmp
loop
jmp
sti
in
mov
in
jmp
cli
in
jmp
sti
in
and
sti
in
jmp
aad
cmovae
jmp
push
jmp
sti
in
cdq
dec
sti
in
jmp
sar
std
imul
inc
imul
das
pop
das
jmp
sti
in
shr
jnp
loop
jmp
sti
in
push
jle
in
jmp
pop
scas
jmp
sti
in
sub
sti
in
jmp
loop
jmp
sti
in
mov
in
jmp
cli
in
jmp
sti
in
and
sti
in
jmp
aad
push
(bad)
sti
in
jmp
push
jmp
sti
in
cdq
dec
sti
in
jmp
or
jmp
sti
in
sbb
push
ins
xchg
mov
xchg
mov
sub
ss
cli
addr16
cli
addr16
jp
loopne
xchg
cs
repnz
or
ss
mov
ds
xchg
lods
cmp
mov
cmp
jnp
push
xor
inc
loop
jp
cmp
and
test
add
cli
xchg
jge
xchg
cmp
mov
rol
jl
imul
ds
inc
inc
lods
loop
xchg
hlt
mov
dec
xchg
hlt
mov
mov
jg
add
jnp
mov
or
int
xchg
push
mov
jnp
int
jne
cdq
mov
loop
jp
sub
scas
fs
ss
inc
mov
scas
loopne
xchg
test
adc
mov
cmp
je
xchg
ss
mov
out
mov
mov
jge
aad
lock
cmp
mov
or
scas
pop
ret
loopne
jge
dec
push
xor
inc
call
cmp
not
je
add
sub
pop
call
sub
add
xor
mov
lods
xchg
in
imul
imul
loop
mov
mov
inc
mov
inc
mov
outs
xor
mov
sub
jl
stos
xchg
dec
mov
mov
loop
xchg
cmp
arpl
mov
mov
fld
xchg
jle
jg
stos
push
rol
std
imul
ret
sar
loop
xor
push
xchg
sub
fld
xchg
jle
jg
mov
(bad)
std
imul
mov
imul
dec
es
aad
pop
jnp
mov
jle
(bad)
aas
jnp
cs
sub
xor
call
sar
loop
xchg
mov
ss
ds
loopne
stos
add
jge
scas
call
mov
std
imul
(bad)
aas
jnp
or
std
imul
inc
sub
cmp
std
imul
test
mov
js
add
jge
cli
xchg
shld
jnp
loop
cmps
push
retf
mov
fadd
test
push
sub
cmp
jge
ss
xchg
shl
jnp
push
movs
je
xchg
hlt
mov
pop
jnp
lods
ss
mov
xchg
push
push
jge
aad
adc
repnz
jge
push
jbe
jnp
call
sar
loop
(bad)
push
jl
mov
ss
ds
loopne
stos
add
jge
scas
call
mov
std
imul
(bad)
aas
jnp
mov
retfw
std
imul
dec
sub
push
bnd
movs
js
fwait
imul
(bad)
aas
jnp
jnp
ds
outs
fsubr
mov
push
cmp
mov
imul
test
add
jge
mov
sar
loop
inc
ss
inc
jnp
aas
jnp
(bad)
xchg
outs
mov
outs
sub
jo
add
jge
mov
std
push
push
push
jg
push
xchg
arpl
fwait
mov
jns
retf
cmp
mov
std
imul
cmp
jne
mov
add
mov
sub
xor
add
cli
sub
retf
int3
imul
repnz
pushf
fwait
repnz
mov
cdq
xchg
cmc
and
in
add
push
and
sub
pop
jmp
jmp
loop
repnz
pushf
fwait
repnz
mov
cmp
out
test
jge
adc
jge
dec
(bad)
hlt
(bad)
push
xchg
add
jge
ins
es
imul
mov
jl
xchg
bound
loop
and
lods
(bad)
mov
sub
pop
sub
cli
xchg
jl
xchg
cmp
ret
test
or
ss
mov
inc
je
mov
mov
mov
test
cmp
xchg
jl
cli
xchg
inc
jae
mov
add
hlt
mov
mov
clc
jle
xchg
or
jnp
inc
xchg
dec
idiv
xchg
add
jge
dec
mov
jnp
out
xchg
shl
jge
ss
push
mov
lods
pop
jnp
imul
aad
pop
jnp
imul
out
add
sub
xor
pop
xor
inc
(bad)
bnd
or
jecxz
cmp
imul
out
mov
sub
push
jnp
add
into
dec
xchg
add
enter
adc
outs
or
std
imul
bound
test
sub
jnp
lods
xchg
aaa
mov
xchg
add
lock
add
xchg
inc
mov
pop
leave
cmp
imul
cmp
jnp
imul
mov
add
movs
std
imul
mov
arpl
mov
xor
hlt
sahf
out
cmp
sub
add
frstor
mov
cmp
imul
xchg
jge
cli
xchg
sub
adc
imul
aad
pop
jnp
push
jno
retf
sbb
imul
call
inc
jp
push
test
cli
xchg
hlt
cmp
test
inc
push
ins
test
xchg
xchg
adc
imul
xchg
xchg
cmp
imul
xor
add
ret
jp
loop
test
jg
sub
imul
cmp
imul
test
arpl
clc
jnp
and
jl
hlt
sahf
call
sbb
or
pop
jg
imul
retf
push
mov
jnp
mov
xor
mov
out
cmp
cwde
xchg
out
cli
js
jb
mov
out
xchg
add
mov
imul
aad
or
xchg
or
into
xor
btc
nop
mov
test
ja
jnp
push
ins
test
xchg
xchg
int3
imul
jb
pop
jno
retf
cld
imul
dec
jg
ins
cli
push
jmp
jnp
xchg
or
mov
mov
(bad)
xchg
stos
cmp
idiv
cmps
or
mov
lds
cld
mov
pop
outs
imul
fwait
hlt
mov
cli
xchg
sub
jnp
imul
push
push
xor
btc
nop
and
arpl
cmp
or
xchg
or
mov
xchg
or
mov
rcl
mov
cs
bnd
or
mov
xor
mov
ds
sahf
out
cmp
sub
int3
ja
jmp
test
loop
clc
adc
pop
push
cmp
cmp
repnz
xchg
fadd
cli
xchg
or
jl
lods
dec
mov
mov
imul
aad
pop
jnp
or
cmp
push
jge
jg
jns
jg
imul
js
dec
xchg
jge
xor
and
sub
mov
stos
idiv
fwait
outs
lock
fidiv
mov
out
cmp
sub
push
jne
loop
mov
popf
xchg
loopne
xchg
test
xor
adc
xchg
loop
push
addr16
mov
jnp
fdivr
imul
addr16
adc
jns
mov
and
ss
(bad)
mov
aas
push
inc
jnp
scas
je
retf
inc
std
inc
sub
sti
sub
cmps
loopne
imul
ret
jno
jge
dec
push
xor
inc
loop
cmp
mov
das
jge
lods
cld
push
inc
and
mov
loop
jp
cmp
cmp
loop
dec
jge
sub
push
pusha
dec
mov
inc
enter
xor
and
sub
pop
call
sub
loop
ret
mov
dec
pop
(bad)
bnd
xchg
call
cli
xchg
hlt
mov
mov
pop
cmp
ds
loop
(bad)
test
sub
jge
int
pop
dec
mov
retf
jg
call
dec
cmp
pop
or
jge
mul
inc
fs
inc
test
test
movs
imul
pushf
test
imul
test
movs
imul
and
mov
push
push
stos
clc
js
sub
ret
adc
mov
jnp
add
mov
or
retf
push
cmp
dec
xor
and
sub
pop
shl
jnp
imul
jmp
ficomp
dec
fimul
mov
xchg
cmp
xchg
test
jge
dec
inc
(bad)
bnd
clc
add
sub
jno
aas
fwait
add
cmps
push
mov
pusha
jge
cmp
test
cmp
dec
jg
pop
jo
imul
mov
xchg
add
fadd
cmp
shl
mov
xchg
imul
imul
mov
sub
repnz
push
ss
out
lods
test
hlt
mov
mov
xchg
mov
loop
lock
arpl
(bad)
jae
add
std
inc
mov
lods
pop
jae
(bad)
mov
inc
xchg
jl
in
add
inc
xchg
(bad)
mov
std
imul
mov
add
movs
std
imul
push
out
jnp
call
cmp
shl
mov
call
adc
test
xchg
add
imul
mov
xor
jno
imul
xchg
inc
mov
jge
push
or
mov
loopne
xchg
sub
mov
dec
cli
imul
jnp
imul
mov
clc
mov
xchg
xor
cmp
imul
mov
xchg
inc
dec
mov
jnp
fiadd
pop
cli
imul
arpl
test
xchg
add
imul
mov
mov
mov
imul
xchg
inc
dec
mov
jnp
fiadd
nop
sti
imul
arpl
mov
hlt
(bad)
jnp
add
jge
mov
jge
es
test
inc
outs
add
loop
jnp
rcr
jnp
imul
inc
cmp
mov
test
add
std
imul
cmp
jge
cmp
ins
test
dec
adc
lock
adc
sub
cmp
call
cmp
shl
mov
call
adc
test
xchg
add
imul
mov
ja
std
imul
push
cmp
call
push
mov
lods
xchg
jo
imul
imul
pushf
test
inc
outs
add
fwait
popf
cmp
xchg
adc
scas
jne
mov
fiadd
ins
sti
imul
arpl
ret
jge
es
test
inc
outs
add
stos
ds
rcr
jnp
imul
inc
cmp
mov
test
add
std
imul
add
jge
cmp
ins
cli
dec
jbe
jnp
and
mov
imul
xchg
das
adc
aas
jnp
(bad)
mov
xchg
sub
jge
xor
mov
test
jnp
inc
add
sub
jnp
scas
pop
xchg
in
jge
push
popa
jge
mov
xchg
js
pushf
xor
mov
xchg
das
lock
adc
sub
cs
call
ds
shl
mov
call
adc
test
xchg
add
imul
mov
mov
loopne
jge
inc
sub
push
popa
jge
mov
xchg
js
lods
add
into
inc
xchg
add
mov
jnp
shl
mov
call
adc
test
xchg
add
imul
mov
jmp
loopne
xchg
sub
icebp
mov
enter
clc
jnp
xchg
call
mov
jge
es
test
inc
outs
add
mov
enter
adc
scas
jne
push
aaa
jge
dec
(bad)
hlt
(bad)
jg
add
jge
mov
jge
es
test
inc
outs
add
fwait
popf
cmp
xchg
adc
scas
jne
test
jge
push
popa
jge
mov
xchg
js
pushf
adc
imul
mov
xchg
das
lock
adc
sub
dec
aas
jnp
call
pop
jnp
out
or
imul
add
jp
imul
mov
imul
rol
or
inc
xchg
jle
pop
xchg
add
push
or
rol
add
les
imul
xchg
(bad)
mov
push
jno
jnp
shl
xchg
jnp
mov
sub
add
or
test
jge
inc
cmp
and
jge
add
test
xchg
hlt
(bad)
imul
jg
mov
out
lds
xchg
add
pop
test
or
xchg
add
jge
inc
cmp
inc
add
sub
jnp
scas
gs
xchg
sub
push
popa
jge
mov
xchg
js
lods
add
movs
std
imul
push
es
mov
fwait
push
mov
lods
xchg
js
imul
imul
pushf
test
inc
outs
add
mov
enter
adc
scas
jne
popa
sub
push
popa
jge
mov
xchg
js
lods
add
into
inc
xchg
add
mov
test
std
jnp
imul
xor
test
xchg
add
hlt
(bad)
push
xchg
add
xchg
icebp
mov
ja
inc
add
sar
cmp
ss
imul
xchg
fwait
hlt
mov
mov
out
test
push
jnp
out
test
xchg
add
aas
jnp
out
mov
sub
cmp
jno
xor
mov
(bad)
jmp
jp
push
test
js
hlt
mov
add
lock
mov
fs
xchg
add
sub
xor
mov
xchg
sub
ret
inc
call
lea
xchg
add
add
xchg
sub
bt
mov
imul
jae
lahf
jmp
mov
clc
ret
inc
xchg
xor
rol
xchg
sbb
push
popa
jge
mov
xchg
js
lods
add
movs
std
imul
push
scas
inc
jnp
call
inc
jnp
shl
mov
call
adc
test
xchg
add
imul
mov
and
les
imul
xchg
inc
dec
mov
jnp
fiadd
add
arpl
test
inc
jnp
jmp
cmp
clc
jnp
xchg
sub
fiadd
xchg
mov
scas
jno
cmp
mov
test
inc
movs
std
imul
push
inc
inc
jnp
call
inc
jnp
shl
mov
call
adc
test
xchg
add
imul
mov
mov
jno
imul
xchg
inc
je
aas
jnp
fiadd
cwde
sub
mov
repnz
jnp
shl
mov
call
adc
test
xchg
add
imul
mov
dec
movs
std
imul
push
into
inc
jnp
call
inc
jnp
shl
mov
call
xchg
xor
imul
imul
pushf
test
xor
add
xor
mov
adc
imul
mov
xchg
inc
loop
aas
jnp
fiadd
xor
arpl
xchg
fisttp
jge
push
push
jnp
shl
mov
call
adc
test
xchg
add
imul
mov
mov
jno
imul
xchg
inc
dec
mov
jnp
fiadd
add
xchg
int3
sub
mov
jge
es
test
inc
outs
add
into
inc
jnp
rcr
jnp
imul
inc
cmp
mov
test
add
std
imul
sbb
scas
ins
adc
fiadd
enter
clc
jnp
hlt
mov
hlt
inc
xchg
add
jge
mov
jge
es
test
inc
outs
add
fwait
popf
cmp
xchg
adc
scas
jne
mov
fiadd
adc
imul
arpl
ret
jge
es
test
inc
outs
add
fwait
popf
cmp
xchg
adc
scas
jne
movs
mov
jnp
fiadd
dec
sub
jnp
hlt
mov
xchg
mov
imul
inc
call
adc
test
xchg
add
imul
mov
clc
movs
inc
xchg
sub
out
add
xor
scas
adc
mov
imul
xchg
inc
dec
mov
jnp
fiadd
mov
imul
arpl
mov
imul
inc
xchg
adc
scas
jne
rcl
jnp
popa
jge
mov
xchg
js
lods
add
into
inc
xchg
add
mov
jnp
rcl
mov
stos
cli
js
pop
jnp
cmp
mov
test
add
xchg
adc
xchg
mov
popa
jge
mov
xchg
js
lods
add
into
inc
xchg
add
mov
cmp
xchg
adc
scas
jne
dec
inc
(bad)
bnd
popf
inc
mov
imul
xchg
inc
dec
mov
jnp
fiadd
test
xchg
rol
jnp
pushf
test
inc
outs
add
ret
mov
imul
inc
cmp
mov
test
add
std
imul
sbb
jnp
scas
ins
adc
aas
jnp
fiadd
int3
test
clc
jnp
pop
jnp
imul
aad
pop
jnp
imul
xchg
or
pop
inc
jnp
loop
xchg
inc
xchg
cmp
pop
jg
mov
xchg
adc
imul
dec
xchg
add
add
xchg
hlt
xchg
test
add
mov
xchg
add
lea
xchg
xor
cmp
lock
and
jbe
sub
pop
jmp
add
push
add
loop
dec
inc
loop
mov
test
mov
je
sub
loopne
cmp
xchg
sub
mov
jnp
add
cmp
add
imul
mov
addr16
cmp
add
ret
adc
imul
mov
xlat
lea
imul
push
mov
jnp
push
jnp
lahf
loop
dec
inc
loop
and
test
repnz
jmp
jmp
inc
inc
ret
mov
jge
dec
mov
(bad)
aas
xchg
add
add
jl
sub
clc
jmp
xchg
xor
arpl
jg
push
jnp
loop
test
test
js
cmps
lock
arpl
mov
push
sbb
mov
aas
jg
std
loop
fild
sub
loop
add
add
xor
imul
mov
lock
xor
popa
js
jmp
jl
ss
in
inc
xchg
hlt
adc
push
dec
mov
xchg
add
xchg
ins
mov
repnz
add
adc
ds
xor
add
lock
xor
popa
jl
jmp
jl
ss
cmc
xchg
adc
xchg
push
pop
jge
ss
jmp
imul
lock
sbb
dec
inc
mov
xchg
hlt
mov
mov
imul
push
jnp
out
leave
xchg
sub
jnp
fbld
jnp
jmp
adc
clc
jnp
je
retf
xchg
ins
pop
jge
mov
jge
lods
xchg
add
clc
xchg
sub
out
leave
xchg
sub
jnp
fsubrp
xchg
or
xchg
add
or
xchg
add
or
xchg
add
sub
push
pop
out
loope
inc
xchg
je
retf
xchg
aad
jge
mov
jge
pop
mov
jnp
out
add
ss
dec
xor
lock
xchg
add
sub
(bad)
inc
jnp
sub
cmp
jl
mov
imul
pop
xchg
add
(bad)
mov
inc
xchg
cmp
imul
ds
dec
mov
(bad)
rcl
mov
test
lods
clc
xchg
inc
xchg
cmp
sar
xchg
cmp
sbb
push
cli
push
push
adc
ret
inc
xchg
sub
mov
(bad)
sbb
clc
ret
inc
xchg
sub
imul
aad
pop
jnp
imul
xor
add
mov
out
xchg
jnp
imul
push
mov
xchg
loop
imul
inc
movs
std
imul
cmp
xchg
mov
jnp
mov
test
inc
test
js
clc
xchg
sub
push
mov
dec
mov
stos
or
cmp
xor
mov
xchg
add
add
mov
fs
pop
adc
add
mov
xchg
cmp
adc
xchg
jmp
jl
jnp
pushf
call
loop
adc
out
add
mov
mov
jnp
out
add
cmp
jno
inc
xchg
jge
retf
fisub
xchg
add
mov
out
xchg
cmp
and
imul
inc
xchg
jge
cmp
add
jge
push
or
jnp
cmp
jge
mov
xchg
adc
fcompp
xchg
xchg
ror
add
test
js
and
jbe
jns
jmp
sub
add
and
lods
dec
xor
or
adc
(bad)
sub
gs
jge
ss
or
xor
(bad)
sub
mov
loop
(bad)
ds
dec
mov
xchg
jb
jmp
lea
lahf
lock
scas
inc
sub
dec
mov
stos
inc
mov
loop
xchg
aaa
ins
hlt
or
lock
cmp
mov
cmp
clc
jnp
or
loop
clc
jg
sub
jnp
push
jno
or
xor
ins
js
out
cmp
scas
fs
out
jge
fs
out
imul
jge
inc
push
bnd
jb
cli
xchg
lock
mov
xchg
jl
mov
sub
out
cmp
imul
inc
cmp
jnp
add
sub
imul
aad
xchg
push
jns
test
loop
adc
xchg
ror
sub
jnp
cmp
jge
cli
xchg
and
ss
xor
pop
jge
in
cmp
ret
xor
inc
push
bnd
clc
(bad)
pop
xchg
cmp
imul
cld
add
out
(bad)
pop
xchg
sub
out
mov
adc
mov
jnp
mov
mov
fs
loop
imul
pop
test
js
or
mov
jnp
call
or
fidiv
push
mov
sub
retf
jge
pop
loop
ret
pop
xchg
xor
pop
mov
inc
mov
jnp
out
rcr
stos
popf
test
sub
mov
or
pushf
or
test
scas
popf
test
sub
imul
mov
mov
mov
xchg
add
jge
inc
pushf
call
loop
dec
jg
xchg
jg
iret
dec
mov
jl
hlt
sahf
pop
ja
jnp
adc
mov
loopne
jae
sub
cdq
sar
popf
ss
mov
fwait
hlt
mov
mov
imul
call
inc
jp
push
test
js
jne
gs
sub
rol
mov
sub
imul
arpl
cmp
imul
loop
mov
xor
fwait
mov
repnz
pop
(bad)
bnd
xor
mov
dec
mov
sbb
mov
xchg
inc
dec
mov
jnp
out
jge
inc
xchg
sub
jnp
scas
jne
jns
add
add
mov
imul
xchg
inc
sbb
jnp
or
mov
out
jnp
xchg
sub
mov
jnp
xchg
sub
dec
jnp
call
dec
jnp
shl
mov
call
adc
idiv
imul
mov
clc
jnp
adc
idiv
imul
mov
clc
jnp
hlt
mov
hlt
(bad)
push
mov
test
lods
xchg
dec
mov
ret
jge
es
test
inc
outs
add
fwait
popf
cmp
xchg
sub
ds
jnp
call
dec
jnp
shl
mov
call
xchg
test
imul
pushf
test
xor
jge
inc
xchg
sub
out
aas
jnp
(bad)
jge
inc
xchg
sub
cmp
ins
test
jnp
imul
popf
test
adc
idiv
imul
lea
clc
jnp
xchg
enter
ret
jge
es
test
inc
outs
add
fwait
popf
cmp
xchg
sub
mov
mov
cmp
xchg
sub
(bad)
dec
jnp
call
jge
mov
imul
imul
pushf
test
inc
outs
add
fwait
popf
cmp
xchg
sub
cli
dec
jnp
call
mov
jnp
xchg
sub
push
dec
jnp
call
dec
jnp
shl
mov
call
xchg
pop
lea
ret
jge
es
test
xor
jge
inc
xchg
sub
out
aas
jnp
(bad)
jge
inc
xchg
sub
cmp
ins
adc
out
jge
inc
xchg
sub
jnp
scas
jne
push
pop
jge
push
popa
jge
mov
xchg
js
stos
add
(bad)
mov
xor
imul
mov
lea
loop
adc
mov
jnp
out
jge
inc
xchg
sub
jnp
scas
jne
adc
popa
jge
mov
xchg
js
stos
add
(bad)
mov
xor
mov
movs
std
imul
mov
or
mov
or
mov
xchg
inc
dec
mov
jnp
out
jge
inc
xchg
sub
jnp
scas
jne
push
inc
imul
out
jge
inc
xchg
sub
jnp
out
jge
inc
xchg
sub
jnp
scas
ins
xchg
cdq
pop
jge
push
popa
jge
mov
xchg
js
stos
add
(bad)
mov
cmp
mov
add
std
imul
mov
or
imul
mov
movs
pusha
mov
out
xchg
movs
inc
xchg
hlt
mov
mov
imul
inc
call
adc
idiv
imul
(bad)
imul
arpl
ret
jge
es
test
push
imul
(bad)
jge
inc
xchg
sub
test
(bad)
jge
inc
xchg
sub
cmp
ins
xchg
cmp
jnp
popa
jge
mov
xchg
js
stos
add
(bad)
mov
sbb
mov
add
(bad)
mov
sub
mov
jmp
stc
pop
jge
push
popa
jge
mov
xchg
js
stos
add
(bad)
mov
sbb
mov
sbb
imul
mov
xchg
inc
mov
jge
push
or
mov
out
jnp
xchg
sub
mov
jnp
xchg
sub
dec
jnp
call
mov
jnp
xchg
sub
jle
jnp
call
pop
jnp
imul
jnp
imul
mov
xchg
cmp
sub
jnp
out
jnp
xchg
sub
jle
jnp
add
add
sub
test
or
mov
test
push
jnp
xchg
enter
adc
stos
cmp
mov
clc
lahf
pusha
xchg
xor
xor
and
sub
pop
jmp
jmp
hlt
jo
inc
inc
test
js
fsub
inc
xchg
cmp
cld
mov
dec
jge
xor
jne
push
ret
mov
aas
jg
ss
jmp
daa
mov
loop
inc
bnd
sub
xchg
test
push
jle
test
jge
std
imul
cmp
add
clc
fild
sub
cmps
push
jnp
add
mov
xchg
add
adc
adc
leave
cwde
test
mov
inc
imul
mov
xchg
sub
out
leave
xchg
sub
jnp
inc
das
jnp
pushf
call
loop
test
retf
add
add
(bad)
mov
cmp
jg
mov
imul
inc
xchg
add
lock
xchg
add
sub
repnz
jnp
or
inc
xchg
hlt
(bad)
daa
xchg
add
pop
aas
aad
lock
xchg
add
(bad)
mov
inc
loop
mov
inc
das
jge
mov
xchg
cmp
jge
add
add
clc
xchg
inc
xchg
cmp
test
loop
idiv
rol
stos
pop
xchg
and
out
fld
cmp
add
pop
pop
aad
pop
jnp
imul
inc
xchg
add
jge
mov
jb
cs
jnp
(bad)
xchg
xchg
mov
aam
jge
dec
mov
inc
nop
add
add
add
inc
xchg
add
(bad)
mov
inc
xchg
cmp
cld
mov
xor
add
push
dec
push
jnp
loop
jb
push
adc
jge
push
push
push
jnp
jmp
add
xchg
cmp
add
int
je
mov
jb
mov
imul
inc
jge
xlat
outs
jl
mov
xchg
sub
xor
mov
adc
idiv
sti
add
addr16
test
jge
cmp
clc
test
mov
(bad)
mov
cmp
jge
mov
inc
test
jnp
out
out
xchg
sub
fsubrp
xchg
xchg
sub
bnd
mov
xchg
imul
inc
push
mov
sub
test
add
std
imul
dec
inc
jge
cmp
imul
mov
jnp
xchg
push
jnp
loopne
out
xchg
cmp
push
cs
mov
inc
fsubrp
xchg
xchg
mov
cmp
addr16
pop
xor
loope
inc
xchg
(bad)
xchg
mov
sub
sub
mov
test
xchg
xor
cmp
jge
cmp
add
clc
iret
inc
xchg
sub
(bad)
push
jnp
add
or
add
hlt
adc
fld
xchg
imul
test
jnp
loop
clc
push
jnp
sub
add
mov
pop
loop
xor
cs
icebp
inc
jge
ss
imul
lahf
lock
mov
or
mov
cmp
jge
cmp
ds
loop
sub
push
jnp
xchg
or
aas
jnp
in
cmp
imul
in
dec
jge
xor
sub
ret
xor
pop
jnp
bound
loop
repnz
pop
test
js
sub
out
xchg
cmp
jge
push
add
mov
ins
hlt
adc
es
ds
sahf
pop
outs
ins
jnp
xor
mov
popf
jns
in
shr
jge
imul
inc
xchg
hlt
mov
mov
xchg
push
mov
xchg
jl
lods
je
retf
mov
mov
jge
cmp
test
sub
aad
or
out
jp
xchg
sub
and
test
mov
jnp
pop
jns
dec
sub
sbb
jnp
add
push
repnz
jnp
loop
nop
adc
mov
ds
sahf
cmp
jno
add
or
mov
cmp
adc
bnd
retf
cmp
idiv
lahf
sub
jnp
mov
aad
adc
test
sub
imul
xchg
(bad)
mov
sub
cli
lahf
sub
jnp
scas
gs
lahf
sub
jp
imul
push
mov
mov
imul
xor
clc
inc
add
loopne
mov
outs
inc
jb
adc
pop
jns
imul
aad
pop
jp
imul
aad
adc
adc
add
xchg
inc
jge
lods
pop
jp
add
mov
fdivr
mov
imul
sub
push
adc
sub
leave
inc
jge
aad
sub
(bad)
xchg
dec
sti
push
sub
fld
jnp
push
adc
sub
jmp
push
adc
sub
stc
inc
jge
ss
dec
xor
pop
jp
add
mov
cmp
imul
jmp
dec
loop
mov
imul
jmp
sti
fidivr
mov
imul
jmp
pop
fdivr
mov
imul
xchg
xchg
hlt
mov
(bad)
xchg
dec
dec
sub
push
dec
jge
aad
sub
(bad)
xchg
dec
mov
sub
gs
jge
aad
sub
(bad)
xchg
dec
out
sbb
jge
jne
jge
aad
sub
(bad)
xchg
dec
jecxz
sub
add
xchg
jl
lods
and
out
cmp
popf
out
imul
cli
xchg
hlt
mov
push
idiv
push
push
pop
jnp
enter
imul
inc
xchg
dec
xchg
and
jge
lea
aad
or
aas
jnp
jb
jnp
enter
imul
inc
xchg
dec
sti
push
sub
mov
jge
ss
dec
xor
pop
xchg
push
in
imul
fwait
hlt
cmp
xlat
mov
cmp
inc
loop
mov
imul
inc
pop
popa
out
jmp
mov
imul
sti
cmp
cmp
ja
cmp
imul
inc
pop
push
in
imul
(bad)
retf
xlat
mov
cmp
inc
loop
mov
imul
inc
pop
pop
in
imul
xchg
repnz
cmp
dec
loop
mov
imul
mov
xchg
or
aas
jnp
xor
mov
imul
inc
xchg
dec
call
sub
icebp
dec
jge
loopne
mov
xchg
stos
cmp
cmc
sbb
lods
xchg
ins
mov
sub
retf
jmp
jns
xchg
mov
cmp
ins
fdiv
test
jge
imul
out
adc
dec
cmp
xchg
fisttp
jnp
xchg
push
xor
pop
jnp
pop
dec
in
imul
jmp
mov
xor
test
fwait
sub
adc
mov
cmp
imul
xchg
dec
jge
sbb
fnstsw
mov
pop
loop
mov
push
idiv
inc
inc
cmp
aad
pop
outs
xlat
imul
add
mov
mov
imul
and
jge
mov
sub
mov
sub
das
push
jnp
test
fwait
(bad)
xchg
fstp
pop
sub
jg
jb
jmp
adc
aas
jnp
mov
cmp
dec
jge
sbb
fnstsw
mov
add
mov
add
mov
imul
aad
pop
outs
push
xchg
pop
jnp
loop
cli
js
push
jnp
add
pop
or
cmp
push
ds
jnp
add
mov
cmp
das
fnstsw
mov
imul
xlat
imul
add
mov
sub
mov
imul
push
sub
mov
sub
mov
sub
scas
add
mov
inc
adc
adc
mov
cmp
dec
jge
sbb
fidivr
mov
pop
loop
mov
das
fnstsw
mov
push
jnp
retf
jge
mov
imul
movs
cmps
cmp
imul
push
mov
jnp
enter
imul
pop
jnp
imul
aad
or
cmp
aad
adc
adc
imul
inc
adc
adc
mov
jnp
mov
cmp
dec
jge
sbb
loop
mov
pop
loop
mov
or
cmp
add
jnp
imul
xlat
push
mov
(bad)
sub
mov
imul
and
jge
lds
adc
sub
pop
jnp
add
mov
xlat
sub
xchg
dec
xchg
and
jge
lods
dec
jge
aad
or
cmp
aad
or
aas
jnp
inc
jl
mov
imul
adc
adc
aas
jnp
out
cmps
cmp
dec
jge
sbb
fdivr
mov
loop
adc
sub
mov
sub
xchg
push
jnp
push
adc
adc
imul
push
mov
(bad)
sub
mov
imul
and
jge
mov
or
cmp
aad
or
cmp
aad
pop
inc
xlat
lea
mov
imul
aam
aas
jnp
mov
cmp
dec
jge
sbb
fidivr
mov
imul
xchg
dec
dec
and
jge
mov
sub
scas
add
jnp
imul
stos
push
jnp
imul
add
mov
sub
mov
imul
push
sub
mov
sub
mov
sub
scas
add
adc
test
jnp
add
mov
sub
gs
jnp
imul
(bad)
repnz
aad
or
cmp
aad
or
cmp
aad
adc
adc
unpckhps
imul
xlat
mov
cmp
dec
jge
sbb
loopne
mov
loop
adc
sub
mov
sub
scas
add
adc
push
jnp
retf
jge
mov
cmp
adc
aas
jnp
imul
sub
aas
jnp
imul
aad
or
aas
jnp
jae
push
mov
imul
jg
jnp
jmp
adc
aas
jnp
push
cmp
imul
cmp
aas
jnp
imul
aad
or
aas
jnp
jae
stc
mov
imul
jg
jnp
jmp
adc
leave
aas
jnp
push
cmp
imul
mov
xchg
push
xor
pop
jnp
pop
dec
in
imul
inc
pop
sbb
arpl
inc
adc
adc
cmp
adc
imul
and
and
jge
mov
sub
mov
sub
cmps
add
adc
jge
aad
adc
adc
aas
jnp
push
cmp
imul
lahf
hlt
cmp
aad
or
cmp
aad
or
cmp
aad
adc
adc
push
jnp
jne
jnp
jmp
adc
jnp
xchg
movs
cmp
dec
jge
sbb
fidivr
mov
xchg
(bad)
imul
loop
xchg
lods
xchg
or
loope
mov
xchg
scas
cmp
mov
arpl
sub
retf
pop
dec
xchg
xor
add
xchg
stos
pushf
add
cmp
ss
push
xor
pop
jnp
pop
jne
(bad)
imul
cli
fwait
sub
jnp
jmp
mov
sub
mov
inc
cmp
xchg
lea
aad
pop
jnp
imul
add
call
jge
push
rcr
mov
imul
inc
pop
dec
in
imul
out
add
cli
xchg
push
ds
call
imul
aas
cmp
adc
aas
jnp
imul
mov
pushf
cmp
mov
pop
dec
in
imul
inc
pop
cmp
(bad)
imul
cli
xchg
push
ds
call
sub
stos
add
cmp
adc
aas
jnp
imul
(bad)
aas
jnp
imul
aad
pop
jnp
outs
pop
jp
imul
aad
adc
adc
add
cmp
lods
pop
jp
add
mov
cmp
imul
inc
pop
dec
in
imul
inc
pop
sbb
pop
aad
pop
outs
aad
adc
adc
aas
jnp
out
cmps
cmp
je
jnp
and
mov
loop
adc
mov
jnp
imul
mov
in
fs
sub
mov
imul
push
adc
mov
sub
retf
jnp
push
xor
mov
and
xchg
outs
aad
pop
jnp
and
dec
xchg
and
jge
stc
je
jnp
imul
aad
or
aas
jnp
inc
jl
mov
add
adc
mov
mov
push
push
bound
enter
imul
test
jge
aad
or
cmp
aad
or
aas
jnp
inc
jl
mov
add
jnp
imul
arpl
cmp
jne
jnp
inc
loop
mov
xchg
pop
jnp
pop
dec
in
imul
inc
pop
cmp
(bad)
imul
xlat
jmp
stos
push
jnp
imul
add
mov
sub
mov
imul
push
sub
inc
pop
test
js
jge
mov
cmp
das
fnstsw
mov
add
jnp
imul
mov
sub
mov
push
push
arpl
enter
imul
inc
pop
dec
in
imul
inc
pop
cmp
(bad)
imul
xlat
xchg
jge
mov
imul
xlat
imul
add
std
imul
mov
imul
and
jge
mov
sub
mov
sub
scas
add
adc
imul
retf
jge
mov
cmp
adc
aas
jnp
imul
sub
aas
jnp
imul
aad
or
cmp
aad
adc
adc
jge
aad
adc
adc
mov
jnp
mov
cmp
jbe
jnp
pop
fdivr
mov
pop
loop
mov
das
fnstsw
mov
imul
xchg
jge
mov
imul
cmp
cmp
imul
push
repnz
jnp
enter
imul
inc
pop
dec
in
imul
inc
pop
sbb
arpl
jmp
push
adc
cmp
adc
imul
sbb
sub
jge
js
imul
pop
loop
mov
or
cmp
add
adc
cmp
adc
imul
sbb
imul
and
jge
mov
sub
mov
sub
cmps
add
adc
add
mov
mov
cmp
imul
push
ja
jnp
dec
loop
mov
pop
loop
mov
das
fnstsw
mov
imul
sub
add
mov
mov
std
imul
push
fisub
mov
imul
inc
inc
test
js
mov
inc
xchg
and
pop
call
sub
pop
sbb
lods
dec
jo
imul
xlat
jmp
jnp
add
mov
imul
push
jne
xor
jnp
lods
inc
mov
cmp
jge
jl
test
loop
sub
mov
lods
cmp
xor
lea
xor
mov
xor
sub
sbb
jnp
push
jnp
sbb
inc
xchg
(bad)
mov
int3
es
jnp
push
adc
xlat
aas
movs
cmp
push
jne
jge
gs
xchg
je
retf
inc
pop
jg
outs
lock
cmp
iret
std
imul
sub
add
jge
dec
mov
ds
loop
and
xor
push
arpl
cmp
lds
lods
aad
mov
sub
cmp
test
xchg
sub
push
bnd
xchg
addr16
imul
xchg
hlt
test
ss
xchg
jl
scas
add
retf
std
imul
mov
sbb
imul
inc
imul
cmp
xchg
sub
data16
jmp
test
aas
jnp
out
jge
inc
xchg
sub
jnp
test
addr16
outs
or
jg
cmp
xchg
sub
mov
jnp
jmp
test
fidivr
jnp
out
jge
inc
xchg
sub
jnp
push
cmp
adc
idiv
imul
test
jge
ret
push
scas
add
retf
lock
mov
sub
mov
(bad)
hlt
inc
add
or
call
clc
jnp
xchg
sub
sbb
mov
push
ins
adc
out
jge
inc
xchg
sub
jnp
push
xor
adc
idiv
imul
test
jge
ret
push
scas
add
imul
mov
adc
imul
xchg
fwait
hlt
mov
retf
pop
or
imul
test
jge
ret
push
scas
add
imul
mov
add
inc
or
ds
cmp
xchg
sub
mov
mov
add
mov
sub
cmp
test
adc
xchg
jg
add
ret
retf
adc
xchg
fst
pop
jb
sbb
xchg
loop
mov
clc
add
bnd
push
test
and
jbe
jns
jmp
push
mov
fsubr
das
and
adc
sub
xor
jnp
call
xchg
cmp
arpl
arpl
jnp
xor
in
mov
sahf
xchg
mov
aad
cmp
fwait
hlt
mov
mov
(bad)
loop
adc
fnstcw
jnp
out
nop
mov
sub
jnp
fisub
mov
imul
inc
jecxz
mov
cmp
cwde
test
(bad)
iret
cmp
xchg
sub
sub
jmp
mov
cmp
adc
idiv
xchg
mov
imul
inc
(bad)
bnd
ror
jp
pushf
or
xchg
aam
imul
cwde
test
push
cmp
xchg
sub
(bad)
push
mov
cmp
adc
idiv
xchg
add
cmova
jmp
mov
cmp
adc
idiv
xchg
and
cwde
test
and
cmp
xchg
sub
sub
mov
xchg
xor
adc
idiv
xchg
pop
stos
imul
push
bnd
ror
jp
lock
jge
cmp
xchg
jl
imul
cwde
test
ror
mov
xchg
sub
xchg
mov
xchg
xor
adc
idiv
xchg
test
imul
pushf
fwait
repnz
mov
test
or
or
mov
xchg
sub
(bad)
imul
xchg
xor
adc
idiv
xchg
call
add
or
dec
leave
cmp
xchg
sub
adc
mov
imul
push
pushf
add
hlt
mov
hlt
(bad)
arpl
or
sub
xor
aas
jnp
adc
ss
xchg
mov
std
(bad)
dec
xchg
add
mov
push
dec
mov
lods
cld
mov
mov
fnstsw
mov
xchg
(bad)
mov
inc
xchg
xor
clc
movs
mov
push
add
mov
xchg
add
inc
jp
imul
inc
xchg
add
jge
cmp
inc
add
lock
add
(bad)
mov
mov
out
movs
mov
hlt
mov
inc
xchg
jge
xchg
add
imul
sub
sub
stos
mov
inc
je
mov
mov
inc
mov
test
imul
fcomip
cmp
mov
retf
xlat
inc
movs
cmp
xchg
sub
data16
jmp
das
retf
xlat
je
cmp
xchg
sub
call
push
and
idiv
xchg
test
imul
pushf
fwait
repnz
mov
test
adc
idiv
xchg
add
jge
mov
out
add
cmp
imul
inc
cmp
idiv
xchg
add
xchg
sub
xchg
movs
cmp
xchg
sub
push
push
mov
imul
inc
xchg
add
pop
jp
lahf
movs
cmp
xchg
sub
out
test
mov
(bad)
(bad)
push
jnp
out
add
test
out
test
lods
imul
loop
scas
dec
xchg
xor
call
xor
dec
jp
imul
xlat
sti
fdivr
mov
imul
inc
xchg
add
(bad)
mov
std
imul
inc
xchg
add
lock
add
hlt
(bad)
addr16
add
add
adc
(bad)
addr16
add
cmp
xor
pushf
add
jle
outs
jmp
or
clc
xchg
sub
mov
clc
xchg
sub
push
imul
mov
add
xchg
jge
jge
ss
lods
mov
lock
test
or
mov
pushf
add
cmp
jnp
out
mov
test
mov
clc
mov
xchg
xor
out
xchg
sub
fimul
adc
xchg
test
imul
xchg
add
add
xor
inc
add
test
imul
aad
xchg
xor
imul
mov
clc
xchg
sub
xchg
enter
adc
scas
jno
jl
mov
test
enter
adc
lods
pop
das
mov
jo
xchg
xchg
jle
jnp
adc
inc
xchg
and
mov
or
mov
imul
call
inc
cld
nop
mov
dec
cmp
imul
jle
jnp
loop
fist
xor
imul
mov
jg
jnp
loop
push
addr16
lock
arpl
dec
and
jge
mov
(bad)
jge
mov
imul
idiv
push
ss
jnp
add
jmp
sub
mov
pop
ins
jnp
cmp
repnz
movs
bnd
jns
mov
test
jae
mov
jl
das
retf
xor
int3
xchg
inc
xchg
sub
test
ins
inc
inc
xchg
jge
mov
arpl
imul
retf
fistp
jnp
mov
jge
mov
jmp
and
jnp
mov
hlt
mov
mov
mov
mov
xor
xchg
mov
test
jg
jnp
ffree
int3
push
xchg
add
es
imul
mov
jl
xchg
bound
loop
and
lods
(bad)
mov
sub
xchg
inc
xchg
std
dec
xchg
int3
push
xchg
add
mov
jnp
lods
clc
aam
xchg
cmp
imul
push
jne
out
rcl
cmp
nop
test
lock
sbb
in
(bad)
imul
cmp
xchg
test
xchg
jl
imul
out
fcom
sub
out
int3
xchg
inc
xchg
sub
jnp
out
ficom
test
cwde
in
mov
xchg
mov
cmps
add
cmp
xchg
test
xchg
test
push
bnd
jl
xchg
fs
xlat
(bad)
movs
cmp
imul
push
cmp
push
imul
mov
loop
test
xchg
test
dec
jg
sub
sahf
imul
or
aas
jnp
sti
fdivr
mov
imul
aad
jge
xor
push
xchg
inc
xchg
lock
stc
mov
jge
mov
shl
std
imul
lahf
sti
cmp
jnp
loop
dec
addr16
test
nop
test
dec
sti
imul
jge
dec
or
aas
jnp
sti
fdivr
mov
imul
mov
jge
cmp
cmp
test
dec
mov
mov
jge
dec
into
hlt
mov
aad
pop
jnp
outs
pop
jnp
imul
mov
out
jnp
loop
iret
aad
pop
jnp
imul
js
lds
shr
test
xchg
cmp
imul
ficom
test
jmp
jp
push
test
mov
cmp
(bad)
or
iret
push
mov
jge
cli
shr
fwait
std
imul
mov
xchg
jb
mov
out
into
push
xchg
sub
push
ins
jnp
out
into
push
xchg
cmp
xchg
cmp
push
inc
add
retf
sub
(bad)
enter
sub
imul
out
ret
out
add
dec
mov
jnp
push
leave
xchg
aad
jge
pop
scas
adc
pushf
sahf
repnz
nop
test
clc
iret
push
xchg
xor
xchg
or
push
call
sub
cli
mov
mov
push
pop
loop
mov
outs
mov
jmp
ds
jge
mov
fidiv
mov
mov
mov
shr
mov
imul
outs
lods
cmp
aad
xchg
cld
scas
imul
mov
jmp
imul
loop
retf
push
xchg
xor
fist
mov
mov
imul
lods
cmp
ss
mov
add
xchg
or
xchg
dec
dec
and
jge
mov
add
mov
imul
mov
imul
push
mov
mov
imul
sub
jge
xlat
dec
cmp
and
imul
push
jno
test
mov
jnp
push
jge
mov
(bad)
movs
cmp
imul
push
push
jnp
loop
xlat
push
xchg
cmp
sbb
jnp
and
mov
xchg
call
mov
inc
outs
jge
mov
loop
idiv
rcl
(bad)
adc
adc
std
imul
out
fistp
jnp
push
jnp
xor
inc
xchg
(bad)
mov
mov
sub
js
adc
std
imul
xchg
pop
pop
xchg
cmp
jae
jnp
out
rcl
sub
imul
xlat
movs
or
adc
imul
xor
aad
inc
xchg
sub
adc
jnp
imul
push
mov
xchg
cmp
add
jp
pop
jge
(bad)
imul
cmps
out
lahf
out
sub
mov
mov
mov
push
cli
jae
mov
add
cli
(bad)
sub
jnp
stos
or
jge
jge
ss
xchg
sub
in
cmp
lods
sub
aaa
adc
pushf
call
cs
inc
jnp
jmp
push
jnp
inc
mov
arpl
cmp
mov
imul
push
jnp
jo
push
imul
adc
jnp
push
inc
jp
imul
push
jnp
add
jnp
call
jge
mov
test
mov
test
and
xchg
hlt
(bad)
push
xchg
add
adc
test
add
inc
xchg
(bad)
mov
inc
xchg
xor
mov
or
xchg
add
mov
jnp
out
mov
inc
pop
cmp
(bad)
imul
jg
adc
cmp
clc
scas
inc
xchg
cmp
outs
imul
jae
add
inc
stos
retf
(bad)
pop
xchg
add
(bad)
xchg
mov
xchg
adc
add
jl
cmp
clc
mov
xor
mov
(bad)
imul
adc
sub
shl
ss
push
xor
inc
fistp
jnp
fs
jmp
fcmovnu
aas
jnp
add
cmp
loop
clc
call
inc
iret
fistp
jnp
push
jno
mov
leave
cmp
xchg
and
sbb
cmp
ins
jge
inc
pop
adc
and
and
and
mov
loop
fidivr
cs
cmp
jnp
add
imul
jnp
retf
(bad)
imul
jne
retf
cwde
mov
jge
inc
pushf
call
loop
xchg
mov
cs
inc
jmp
mov
pop
cmp
pop
fdivr
mov
pop
in
mov
fwait
loopne
mov
(bad)
fidivr
mov
pop
fdivr
mov
retf
fidivr
mov
addr16
mov
jg
cmp
imul
xchg
or
fidiv
mov
xchg
add
fdivr
mov
retf
fidivr
mov
pop
in
mov
jnp
jnp
push
ins
xchg
xor
xchg
add
jno
mov
imul
mov
test
(bad)
fisub
add
sub
add
mov
xchg
adc
xchg
dec
xor
adc
idiv
xchg
add
cmp
push
cmps
ja
mov
xchg
cmp
pop
jnp
imul
mov
imul
push
mov
mov
imul
inc
xchg
add
mov
test
sub
mov
out
mov
imul
xchg
add
aas
jnp
push
ja
mov
xchg
cmp
xchg
cmp
push
inc
call
pop
jp
xor
loopne
inc
xchg
sub
xchg
out
test
mov
jnp
push
pop
adc
mov
jnp
imul
mov
fdivr
mov
imul
jnp
jnp
mov
(bad)
pop
xchg
add
add
sub
inc
movs
cmp
xchg
sub
add
mov
xchg
jge
mov
xchg
sub
pop
popa
out
jmp
test
imul
xchg
add
pop
jnp
movs
cmp
popa
jge
inc
pop
popa
out
jmp
nop
mov
jge
pop
outs
jge
xor
add
sub
inc
mov
xchg
ins
setg
jge
mov
imul
push
bound
mov
sub
or
jnp
les
mov
xchg
cmp
jb
cmp
stc
jle
xchg
add
add
imul
xlat
mov
xchg
jne
jge
inc
pop
popa
out
jmp
or
imul
outs
jge
aas
out
add
inc
push
ins
or
jmp
cmp
lock
add
lock
add
(bad)
mov
mov
xchg
add
jge
pop
arpl
aas
(bad)
add
add
mov
imul
push
cmp
xchg
dec
sti
push
sub
inc
arpl
push
pushf
jle
mov
xchg
sub
out
mov
xchg
mov
jnp
out
mov
movs
pusha
jge
cmp
ins
adc
jge
xor
add
inc
loop
mov
imul
inc
xchg
add
jge
pop
mov
xchg
xchg
mov
jge
mov
cmp
imul
test
clc
xchg
sub
out
mov
sbb
out
mov
or
scas
ins
adc
jge
xor
add
inc
loop
mov
imul
inc
xchg
add
jge
aam
aas
jnp
imul
mov
cmp
imul
xchg
add
inc
jp
push
test
inc
push
pop
jnp
inc
stos
cmp
arpl
inc
pop
push
in
imul
inc
imul
inc
xchg
jge
and
xchg
add
add
jns
xchg
jge
xchg
mov
xchg
push
mov
cmp
imul
nop
add
add
test
imul
inc
xchg
add
sub
inc
movs
cmp
xchg
sub
scas
je
mov
xchg
jge
mov
xchg
sub
pop
pop
in
imul
add
or
imul
xlat
jp
cmp
ins
jge
inc
pop
pop
in
imul
jmp
jnp
out
xchg
and
xchg
add
add
jns
xchg
jge
push
mov
xchg
and
dec
loop
mov
imul
xchg
add
add
jl
retf
int
xchg
add
xchg
or
xchg
add
add
lock
add
(bad)
mov
mov
out
cdq
xchg
idiv
pop
xchg
add
pop
jg
imul
xlat
imul
add
clc
mov
fwait
add
jge
or
in
jle
imul
iret
fistp
jnp
push
cmp
mov
in
mov
jmp
jp
push
test
jl
jge
sub
adc
fimul
mov
mov
xchg
sub
imul
test
sar
imul
dec
xchg
add
jl
retf
jnp
(bad)
xchg
xchg
das
sub
test
fwait
add
pop
jnp
out
xchg
xchg
sub
fwait
std
imul
push
push
js
mov
xchg
adc
pop
cmp
(bad)
imul
mov
add
mov
sub
xchg
sbb
jnp
out
lea
mov
pop
jnp
imul
push
(bad)
jns
mov
sub
ja
cmp
push
inc
loop
adc
xchg
sub
add
fscale
imul
push
xchg
mov
xchg
jp
xchg
mov
adc
xchg
dec
xor
or
xchg
add
js
or
jge
mov
add
rcr
aas
jnp
adc
iret
std
imul
pop
out
test
adc
sub
jno
jge
ss
dec
xor
xchg
push
push
imul
mov
mov
test
cwde
clc
push
addr16
add
test
loop
lock
addr16
jnp
imul
mov
add
fs
mov
mov
fdivr
mov
and
mov
imul
inc
das
jge
test
out
imul
inc
pop
std
(bad)
imul
mov
fdivr
mov
inc
loop
mov
imul
hlt
cmp
retf
dec
mov
or
mov
sub
mov
dec
push
and
jge
icebp
outs
jge
ss
mov
push
dec
push
and
jge
mov
dec
pop
and
jge
lea
jnp
pop
pop
in
imul
aas
push
or
push
mov
dec
xchg
and
jge
test
pop
pop
in
imul
aas
push
or
push
cmps
xchg
dec
call
sub
inc
push
(bad)
imul
loop
(bad)
lods
dec
mov
(bad)
imul
xor
pop
out
jmp
dec
aas
retf
retf
xor
jnp
xchg
push
xor
inc
dec
xchg
hlt
cmp
retf
data16
hlt
cmp
test
out
jmp
jge
jbe
jmp
imul
hlt
cmp
retf
data16
retf
test
in
imul
xor
push
loop
imul
retf
retf
mov
mov
imul
or
cmp
jge
push
ins
hlt
adc
es
jnp
jnp
imul
das
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cmp
xchg
add
jnp
lods
std
inc
popf
push
pop
adc
sub
mov
cmp
lods
cmp
lahf
pop
xchg
mov
call
xchg
jp
fs
jl
stos
or
xchg
pop
cmovl
jge
jns
jge
aad
sub
mov
xchg
and
and
push
imul
inc
jge
mov
push
jge
mov
scas
clc
jg
xchg
pushf
jnp
imul
fwait
arpl
xchg
add
movs
div
xchg
idiv
fwait
arpl
lock
dec
jns
sbb
cli
lods
xor
pop
jg
arpl
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
cwde
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
mov
lahf
aas
jnp
sti
jge
.byte
.byte
