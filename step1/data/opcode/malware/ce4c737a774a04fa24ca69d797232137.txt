adc
test
pop
add
sub
add
enter
or
dec
sbb
add
mov
sbb
xor
shl
or
sub
push
loop
or
cdq
sub
arpl
retf
pop
in
jg
jl
pop
adc
mov
repz
lock
inc
fwait
xchg
mov
cmp
pop
shl
sahf
push
repnz
jne
popa
movs
hlt
inc
cli
js
xor
ja
lds
add
ins
xor
stos
pop
jno
cmp
jg
xchg
sub
xchg
lea
je
mov
or
into
pop
out
in
mov
outs
cmp
jo
inc
mov
sub
xchg
adc
loope
xchg
add
dec
ret
out
hlt
dec
mov
jge
jmp
xor
mov
xor
jmp
addr16
sar
pusha
cwde
mov
fld
pop
popf
dec
fs
xlat
dec
(bad)
sub
sbb
xor
and
lods
fdiv
and
xchg
arpl
loop
js
pop
mov
xchg
xor
adc
jno
push
cmp
in
inc
xor
mov
cmp
xchg
fmul
pushf
mov
jmp
push
dec
xor
sub
in
das
ficom
add
nop
push
mov
movs
(bad)
and
les
les
or
mov
(bad)
inc
dec
retf
or
or
mov
push
and
mov
call
fstp
cli
dec
bound
jecxz
rol
cmps
gs
sbb
(bad)
imul
push
shl
cmp
add
scas
and
ret
enter
dec
xor
fwait
cmp
icebp
pop
dec
sbb
xchg
xchg
std
stos
sub
add
inc
adc
mov
in
sub
fstp
inc
test
ret
lds
and
or
enter
lahf
sub
cmc
dec
mov
loopne
or
loopne
pusha
adc
push
xchg
call
frstor
repz
stc
out
and
pop
fst
pop
mov
jecxz
movs
and
dec
xor
into
movs
test
jmp
sub
daa
push
jmp
and
pop
inc
cmp
adc
add
or
nop
stos
inc
clc
sahf
sahf
test
rol
and
leave
and
dec
pop
std
sbb
mov
sub
lods
jecxz
add
std
icebp
lahf
lahf
call
jae
jge
sbb
repz
sahf
sub
push
dec
shl
jno
cdq
mov
cs
pop
repz
cwde
dec
pop
sub
xor
mov
inc
jge
pop
jecxz
push
enter
dec
ins
push
dec
push
jno
outs
mov
addr16
int
retf
jmp
jl
sub
shr
hlt
add
fwait
and
call
cs
jmp
inc
dec
mov
mov
icebp
loopne
sbb
pop
int
sub
dec
mov
inc
(bad)
popf
sub
dec
outs
ss
inc
lahf
sti
push
test
(bad)
aas
in
jns
xor
gs
add
stos
push
inc
add
mov
fwait
lock
xchg
xchg
and
mov
outs
mov
jno
fcomip
mov
add
mov
inc
gs
lds
xchg
div
pop
stc
fdivr
sbb
inc
push
mul
repnz
xchg
xchg
je
mov
ror
push
shr
pop
jmp
dec
dec
(bad)
pop
pop
cmps
leave
mov
dec
int
cli
and
addr16
ret
lock
mov
jge
jnp
cmps
loope
loope
gs
add
push
loopne
lods
retf
das
dec
push
test
sbb
fst
imul
dec
mov
xor
scas
aam
adc
pushf
(bad)
lea
push
lds
(bad)
sbb
loopne
cld
jno
xor
dec
dec
push
and
sbb
pop
add
or
in
aaa
cmp
xchg
inc
and
popf
repnz
adc
xchg
lods
in
jo
fst
mov
ret
sbb
mov
lock
mov
jbe
adc
test
jb
pop
or
retf
and
scas
aaa
std
sbb
and
sub
icebp
fsubr
sahf
lock
xor
cwde
and
add
das
test
hlt
fxch
scas
stos
mov
ins
jl
dec
jae
hlt
test
cmps
mov
ins
mov
les
adc
fisttp
jle
inc
adc
jp
inc
mov
in
sar
setb
jmp
neg
sbb
data16
mov
mov
jp
push
cmp
inc
inc
xlat
dec
xchg
jge
lods
mov
lds
bnd
pop
fsubr
pop
mov
aas
pushf
jg
imul
hlt
fisttp
and
movs
xlat
ret
inc
sub
xlat
shl
adc
sbb
daa
dec
aaa
and
push
push
scas
out
arpl
jbe
xor
jmp
mov
push
stos
jp
push
xchg
dec
or
(bad)
jne
jp
and
mov
out
mov
push
cmp
push
call
div
lods
push
stc
call
jmp
les
and
xchg
mov
leave
dec
or
lahf
lahf
inc
dec
cmp
pop
or
les
enter
test
dec
call
inc
mov
mov
push
and
sub
mov
call
xchg
push
fwait
std
mov
fcom
push
mov
and
xor
jmp
jle
or
add
xchg
rol
(bad)
mov
leave
adc
pushf
jb
test
cld
rcl
es
jne
lock
add
or
push
add
js
fisttp
jp
repnz
or
(bad)
jbe
cmp
jmp
push
jbe
mov
pop
mov
mov
mov
xor
dec
sar
movs
mov
xor
cvttps2pi
psllw
push
popf
les
xor
inc
test
scas
mov
sub
pop
push
cmp
test
mov
xchg
mov
cld
mul
sbb
aas
mov
mov
dec
stc
pop
mov
outs
test
arpl
mov
hlt
xchg
lea
mov
pop
pop
movs
das
jo
add
and
xor
cdq
pop
push
icebp
mov
xor
jne
pminub
sti
push
in
je
jbe
ins
jg
lock
mov
xchg
inc
jmp
std
add
js
ret
ss
jae
aam
jmp
bound
aas
mov
test
leave
imul
push
mov
bound
fisttp
loopne
and
pop
aaa
sub
mov
aaa
cli
add
or
setbe
jo
jmp
(bad)
xor
or
cs
shl
push
fwait
sbb
xlat
out
sar
mov
sub
repz
loope
outs
mov
fsubr
frstor
pop
loope
outs
(bad)
fcomi
cmp
ja
and
cmp
xchg
pop
imul
inc
xchg
ja
daa
scas
dec
frstor
inc
cmps
ins
push
inc
hlt
sbb
mov
ins
xor
mov
repnz
dec
inc
push
mov
dec
mov
mov
js
hlt
adc
scas
sub
rol
(bad)
popa
ja
sbb
ins
pop
jbe
test
adc
adc
or
popa
push
or
ror
scas
call
enter
rcl
mov
or
sub
fwait
mov
scas
stc
lds
cli
dec
dec
mov
fdiv
test
add
mov
cmp
jnp
pushf
mov
repnz
lahf
fs
cwde
ja
gs
les
or
(bad)
pop
pop
mov
adc
mov
call
cmp
mov
dec
outs
popf
dec
jmp
(bad)
sub
jb
or
std
rcl
xchg
xchg
test
xchg
jle
or
jmp
mov
mov
movs
cmp
jns
xchg
enter
push
gs
pop
xchg
(bad)
add
pop
xchg
jo
and
pushf
sbb
adc
pop
mov
mov
jmp
push
out
pop
mov
test
mov
data16
mov
inc
sar
stos
out
mov
mov
sti
or
in
xor
loope
xor
mov
push
mov
out
in
inc
add
stos
sub
fcomp
addr16
bound
mov
jns
in
jecxz
bnd
pop
not
inc
adc
and
jmp
fild
xor
ss
push
inc
mov
pop
add
cmps
jo
xor
ror
out
dec
cdq
and
pop
call
cmp
push
mov
xchg
into
jbe
(bad)
ror
lods
dec
mov
jle
loope
xchg
xchg
ins
or
pop
lahf
dec
push
aad
enter
add
and
push
imul
pop
retf
aam
call
fdivr
or
pusha
cmp
pop
adc
scas
sub
sub
aad
jl
push
retf
(bad)
fadd
mov
aas
and
xlat
adc
arpl
add
xlat
xor
mov
xor
ss
pop
(bad)
rcl
xchg
and
(bad)
cmp
fild
push
mov
movs
jns
dec
push
ret
jg
jo
jl
or
dec
test
shr
cmc
daa
sbb
in
lds
call
lds
push
div
test
mul
retf
aaa
aam
dec
(bad)
cmp
jmp
or
inc
pop
sbb
mov
add
cmp
test
pop
adc
(bad)
fstp
xor
push
ins
dec
jmp
test
les
jmp
int3
pop
popa
sbb
pusha
fild
and
and
outs
popf
clc
mov
stc
neg
stc
lds
adc
call
movs
adc
movs
daa
mov
lock
stos
mov
test
inc
xor
sub
sar
lock
adc
mov
daa
mov
dec
outs
nop
and
mov
lds
cli
and
data16
es
ds
mov
jbe
jo
mov
(bad)
mov
rol
inc
and
hlt
sbb
push
add
popa
ins
shl
jns
repnz
sbb
popa
jnp
inc
mov
and
sub
not
and
stc
int3
xchg
mov
xchg
xor
push
into
pop
stos
add
inc
cmps
push
clc
dec
mov
ficomp
push
push
cld
dec
jbe
sahf
pop
test
das
ret
fwait
and
push
clc
mov
(bad)
mov
dec
je
rcr
xor
adc
jnp
mov
cdq
push
mov
(bad)
mov
out
adc
push
icebp
cmps
in
xchg
push
add
hlt
cmp
dec
fild
mov
in
loopne
repnz
jl
xchg
jl
aas
mov
mov
or
rol
mov
pop
ja
xchg
push
and
or
jecxz
mov
test
jle
fwait
adc
cmc
dec
and
loop
ja
mov
mov
dec
cmps
stc
push
int3
jbe
sub
sub
movs
outs
mov
pop
into
or
jnp
das
lods
imul
add
jb
push
out
jb
pop
dec
das
aam
ins
dec
sub
int
mov
retf
stos
jae
fdiv
fidivr
neg
js
xchg
inc
movs
mov
pop
daa
(bad)
mov
push
test
addr16
(bad)
cmp
ss
adc
xchg
dec
out
mov
daa
sbb
retf
or
out
mov
cmp
in
pop
sub
or
jp
dec
inc
lods
jge
adc
xlat
inc
sbb
(bad)
hlt
jp
loopne
jg
test
dec
retf
(bad)
mov
pop
pop
mov
in
or
lods
dec
mov
sti
and
dec
jb
jne
imul
or
popf
call
test
test
jo
xchg
fs
repnz
ins
ja
loope
cmps
jae
mul
xchg
test
iret
dec
fstp
xchg
stos
(bad)
and
ja
mov
ins
sub
mov
jp
add
xor
iret
jmp
out
sub
cli
lods
mov
mov
fild
nop
outs
outs
jbe
adc
xor
into
and
popa
retf
mov
outs
retf
icebp
fisubr
stos
jae
and
and
enter
lahf
in
stos
pop
mov
enter
mov
xchg
sub
stc
xor
cmc
push
push
push
lods
dec
push
add
adc
ss
fnstenv
ret
out
loopne
dec
mov
int
popa
out
clc
stos
push
add
lock
fstp
inc
test
dec
int3
or
sbb
push
sbb
fcmovbe
xor
gs
(bad)
sbb
sahf
(bad)
mov
add
push
xor
into
ror
int
retf
aaa
jbe
shl
mov
ins
cld
in
idiv
loopne
pop
add
dec
adc
mov
pop
dec
pushf
rol
shr
loop
mov
push
push
add
mov
pop
bound
pop
scas
out
test
(bad)
popf
add
inc
dec
xor
pusha
mov
dec
mov
add
mov
push
push
lods
test
sub
dec
sbb
mov
jns
pop
pushf
cmp
into
pop
ja
(bad)
mov
(bad)
push
retf
ja
push
mov
mov
mov
retf
int
xor
xchg
xchg
inc
add
in
loopne
retf
xlat
push
rcl
lock
ror
mov
mov
(bad)
iret
push
sti
and
jp
ss
js
push
push
mov
mov
dec
imul
fcomip
(bad)
inc
cmp
xchg
xchg
inc
mov
mov
cmp
call
ret
mov
bound
rcl
daa
inc
dec
sub
xor
jge
or
fwait
sub
pusha
loop
xor
icebp
aas
outs
jb
push
mov
jbe
retf
loope
ret
xor
sti
rcl
push
orps
arpl
sub
mov
mov
pusha
pop
xor
push
bound
add
push
sbb
push
pop
fdiv
ins
jmp
sub
out
push
in
or
cmc
sbb
icebp
push
sahf
add
ret
push
adc
mov
gs
aaa
cmp
mov
sbb
mov
xor
push
jbe
ja
cld
ret
loop
push
dec
push
mov
test
das
dec
loopne
inc
mov
xlat
ss
push
fstp
mov
mov
lods
and
dec
ret
add
mov
arpl
mov
adc
mov
jbe
sbb
dec
loope
in
mov
xchg
loopne
pop
add
xchg
cmps
inc
fbstp
data16
fisubr
sub
mov
daa
push
jb
inc
mov
enter
outs
fimul
pop
sbb
(bad)
cmp
cli
movs
in
adc
cli
lahf
xor
pop
jno
mov
aaa
push
mov
out
add
adc
sbb
mov
sub
(bad)
push
adc
or
lahf
mov
popa
xor
mov
shl
lock
loopne
sub
data16
push
jl
std
gs
out
sbb
xchg
call
jbe
fidivr
dec
leave
mov
inc
popa
or
enter
pop
jbe
xor
pop
or
jo
sub
xor
push
dec
nop
mov
retf
dec
into
scas
dec
aas
xchg
xor
push
adc
push
shr
mov
aaa
mov
jmp
jo
fmul
mov
popa
mov
loopne
fs
add
inc
in
sub
add
sub
gs
sub
test
xchg
icebp
out
iret
mov
pop
mov
movs
jl
inc
mov
push
lea
xchg
inc
xor
int3
cmps
cmc
(bad)
push
xchg
add
scas
dec
and
xor
pop
mov
jl
xor
adc
test
jno
add
jg
mov
nop
ret
jle
mov
es
cmp
push
fst
adc
cwde
push
adc
jle
mov
stos
jle
rcl
mov
pop
and
repnz
aaa
xchg
mov
cmp
pop
sub
cmc
inc
imul
push
cmp
(bad)
jmp
(bad)
mov
sbb
jne
cli
mov
int
pop
xlat
push
push
pop
xchg
adc
ss
cmp
sbb
jnp
in
xchg
mov
mov
cmc
outs
inc
dec
adc
xchg
adc
xchg
or
call
pushf
shl
cwde
xlat
jno
jne
js
aad
mov
cmc
hlt
out
xor
fxch
or
(bad)
mov
sbb
enter
dec
xor
xchg
mov
in
add
sub
sbb
call
bts
mov
dec
fidivr
xchg
xor
scas
mov
dec
jnp
and
data16
mov
sub
cmps
mov
sbb
jae
sahf
xchg
cs
xchg
(bad)
jnp
lgs
les
sbb
call
inc
push
ror
std
imul
jle
jne
push
or
sbb
(bad)
sub
inc
xchg
repz
retf
outs
inc
ss
xchg
nop
loopne
dec
mov
dec
cmps
adc
out
aas
mov
sub
lods
cmp
fst
jmp
sti
repnz
mov
push
push
pop
add
ins
pop
popf
sbb
pop
inc
inc
or
cmps
dec
sbb
push
dec
sbb
nop
mov
ins
cdq
rsqrtps
(bad)
nop
or
mov
jno
adc
aad
xchg
or
ins
inc
iret
popa
xchg
mov
loope
aaa
pop
(bad)
and
fidiv
lock
pop
mov
dec
out
ds
nop
mov
sbb
out
loopne
retf
(bad)
hlt
mov
sub
loopne
pop
sbb
add
dec
pop
mov
and
jo
jno
movs
cmc
jle
push
pop
or
scas
xor
in
icebp
cmp
jmp
mov
jnp
mov
push
pop
aad
fbld
pop
sahf
cmp
sub
dec
es
xchg
push
adc
stos
mov
outs
xor
mov
jmp
push
inc
fst
jmp
and
jl
aad
mov
aaa
mov
fild
call
cdq
stos
rcl
pop
pop
pusha
dec
stc
ins
lahf
lahf
retf
shr
push
cmp
add
out
inc
dec
xor
or
and
cmp
daa
sti
pop
fidivr
sbb
jo
xlat
mov
data16
and
mov
cmp
or
adc
pop
les
dec
jecxz
dec
sub
js
xor
add
lds
xor
jge
and
les
jp
jbe
inc
push
cli
or
xchg
ss
outs
loopne
fmulp
xor
jecxz
and
inc
xchg
push
jge
imul
inc
xor
daa
push
push
mov
mov
(bad)
mov
ss
xor
push
jg
call
daa
movs
mov
or
xchg
ret
sti
add
push
push
popf
push
adc
pop
adc
(bad)
imul
and
and
or
sub
mov
aaa
loop
not
loop
push
add
adc
lahf
cdq
xchg
or
retf
ja
pop
xchg
inc
and
jecxz
or
jmp
add
mov
mov
loopne
sub
cmp
mov
enter
cmc
and
int
iret
jecxz
push
sub
ds
xor
lock
dec
jecxz
adc
shr
int3
pop
std
adc
call
sbb
adc
int3
xchg
sub
pop
adc
ins
repnz
and
and
js
jmp
sar
mov
add
ficomp
fdiv
outs
enter
xchg
mov
push
sub
jbe
or
icebp
inc
nop
push
push
jnp
xor
mov
sub
jg
ret
(bad)
iret
push
mov
sbb
es
or
(bad)
mov
daa
inc
mov
sub
dec
xchg
ins
push
lods
outs
or
je
dec
stos
mov
mov
add
int
cmp
cli
push
jno
scas
inc
push
clc
call
push
cmp
add
cs
inc
xchg
in
gs
push
cmp
pop
xchg
xchg
das
in
aad
mov
mov
sbb
std
push
jmp
ins
adc
fs
mov
(bad)
pusha
and
shl
inc
mov
in
mov
and
and
in
mov
imul
enter
cmc
adc
ins
fist
xchg
cli
sti
data16
push
enter
sbb
(bad)
push
stc
cmps
test
add
jae
xlat
js
and
mov
or
xchg
int3
sub
add
in
ror
xchg
loop
or
shl
mov
pop
mov
fimul
adc
add
dec
nop
scas
sub
fst
push
sbb
jmp
or
sbb
cmp
push
hlt
ds
sub
sub
(bad)
xchg
xchg
sbb
mov
jecxz
mov
xchg
mov
or
test
jbe
rcr
push
sahf
jp
rcr
das
cmp
and
sbb
aam
push
mov
cwde
xor
jbe
retf
stos
iret
jg
fcomp
push
pop
adc
or
fcom
clc
adc
aaa
inc
into
in
xor
dec
mov
ficom
ret
xor
push
dec
aad
jge
test
pop
in
stc
mov
das
lahf
xlat
inc
cmp
add
xchg
sahf
adc
jne
mov
adc
ja
mov
push
dec
ins
dec
push
mov
and
xor
sbb
cmp
push
mov
fst
fidiv
and
scas
clc
gs
(bad)
sbb
push
sahf
ss
repnz
clc
push
and
lods
outs
pop
aam
lds
xor
push
jo
mov
cmc
dec
jmp
cmp
shl
mov
frstor
mov
ja
sub
push
jmp
stos
push
scas
out
sbb
aaa
cmp
stos
cmp
jecxz
dec
pop
fdivr
daa
pop
call
add
sbb
cmps
push
mov
sbb
cmp
arpl
adc
push
bound
out
push
in
retf
popf
push
je
jge
push
mov
mov
ins
push
inc
inc
mov
pushf
jge
cld
mov
dec
ins
mov
sbb
jb
ror
adc
fisttp
cmc
out
xor
sub
loop
retf
lods
or
dec
cmp
call
sbb
dec
mov
jmp
pop
sub
mov
repnz
jl
(bad)
xlat
push
inc
or
cmp
out
lods
adc
dec
cmp
les
jnp
fbld
push
sub
inc
enter
add
mov
dec
repnz
stc
retf
lods
hlt
mov
sbb
stos
mov
jae
rol
ins
adc
cli
dec
pop
cmps
ficom
inc
js
pop
cmp
jp
sub
mov
ss
pop
idiv
fld
inc
mov
adc
mov
cmp
outs
aas
outs
mov
lods
es
jge
pop
pop
movs
cmp
or
jmp
rcr
(bad)
into
cmps
push
and
dec
push
fld
fcmovnu
pop
xchg
jge
dec
mov
jo
fcomp
add
cmp
mov
and
shr
ins
nop
pop
lods
aaa
mov
ror
imul
je
or
enter
mov
lods
xor
xor
nop
imul
add
in
ins
mov
push
push
ret
aam
movs
push
hlt
inc
movs
cmp
inc
test
fadd
mov
cmps
cmp
inc
sbb
xor
stos
sti
stc
data16
inc
sbb
mov
movs
push
jl
icebp
pop
mov
out
jbe
call
jmp
ret
xchg
mov
fcom
push
jnp
in
call
stos
push
jecxz
push
jge
add
sbb
sbb
arpl
sub
repz
daa
into
scas
mov
pop
jno
jg
jne
mov
mov
cmc
inc
test
clc
lea
sub
loop
mov
stos
push
out
cli
xchg
mov
add
xor
inc
sub
xchg
pop
xor
add
mov
push
out
bound
call
call
cli
test
dec
push
xor
xchg
pop
cmp
je
icebp
ins
xor
or
xlat
mov
imul
jne
pop
repnz
je
lea
mov
xor
or
push
pop
retf
fisttp
stc
or
aas
xor
lock
jmp
push
sahf
imul
and
call
cmps
sbb
lahf
inc
xchg
std
lds
add
mov
add
std
jnp
scas
fidivr
icebp
sub
loop
push
lahf
jns
mov
push
push
shl
add
mov
and
aam
mov
push
xor
inc
rcr
test
mov
fdiv
(bad)
loopne
comiss
mov
scas
out
lods
jb
int
push
jmp
add
fadd
xor
out
mov
(bad)
xlat
scas
xor
int3
pop
les
(bad)
and
xor
push
cdq
or
pop
dec
push
jg
rol
data16
pop
pop
add
scas
jl
mov
ss
sbb
adc
pop
mov
in
aad
fimul
jns
adc
mov
popa
mov
or
ds
jns
mov
inc
cmp
xchg
jb
xor
cmc
call
mov
in
jle
cmc
or
mov
sbb
fstp
inc
cmp
mov
jg
sar
int
pop
or
inc
pop
sub
test
fistp
mov
sbb
xor
push
iret
jbe
or
add
jns
loope
test
in
dec
stc
scas
sub
add
js
sub
enter
mov
mov
retf
xlat
inc
inc
fadd
mov
push
push
inc
test
pop
xchg
movs
and
mov
fidiv
out
mov
mov
fidivr
jmp
js
jne
in
mov
mov
push
mov
fiadd
js
cmps
inc
jecxz
in
mov
pushf
aad
or
dec
sbb
xor
mov
push
(bad)
sub
or
jg
jno
fcom
xor
push
out
test
jecxz
jmp
jo
cmp
sbb
jae
dec
repz
xchg
add
mov
mov
cmp
outs
xor
xchg
ins
sbb
dec
adc
inc
jno
push
adc
(bad)
lods
cmp
mov
popa
pop
outs
cmps
test
adc
adc
cmp
xor
mov
pop
call
hlt
jl
stos
repz
leave
imul
mov
mov
and
push
clc
inc
js
jle
rcl
dec
mov
sub
mov
or
add
enter
out
jle
cmp
lods
adc
cld
sar
or
mov
adc
test
retf
sub
into
mov
mov
mov
mov
(bad)
xchg
add
fs
out
test
inc
mov
jae
int3
sbb
jo
test
js
mov
mov
pop
or
rcr
scas
jmp
adc
es
push
pusha
dec
pop
adc
arpl
inc
or
mov
in
cmp
fdivr
arpl
fiadd
push
add
sahf
inc
jo
ds
dec
push
enter
xor
sub
jl
inc
in
sub
mov
dec
or
lahf
xor
adc
mov
xor
mov
mov
inc
lahf
jmp
dec
adc
lods
fiadd
sub
xor
sar
mov
jae
enter
fisubr
push
sub
jp
fstp
push
mov
aad
les
jns
fld
in
push
or
mov
mov
movs
ret
cmp
loopne
(bad)
dec
push
stos
test
gs
and
sbb
add
dec
shl
xchg
sahf
dec
xchg
xchg
dec
jmp
xchg
cmp
pop
dec
adc
test
fwait
sub
retf
ss
in
enter
push
(bad)
iret
stc
xchg
xor
rcr
dec
cmp
xchg
xchg
pop
xchg
jle
jg
stos
std
mov
or
(bad)
lods
retf
dec
clc
(bad)
cmp
push
ins
and
pop
pop
pop
std
push
mov
je
xchg
ja
shr
and
test
pop
xchg
xor
fcmovnbe
retf
cmp
or
int
adc
sub
adc
aas
add
and
ja
sub
shl
call
rcr
(bad)
in
jbe
push
pop
js
pop
add
mov
inc
mov
aas
loop
mov
mov
or
cmp
dec
add
retf
sub
push
xor
ds
dec
or
cmc
sbb
push
lock
and
xor
xchg
xor
rol
sbb
sub
repnz
cmp
mov
sbb
lds
jne
mov
retf
dec
repnz
mov
ret
pop
or
ja
mov
(bad)
inc
pop
jmp
aam
js
sbb
mov
pop
inc
mov
dec
mov
loope
add
pushf
sbb
sbb
cmc
les
sbb
cmps
cmp
add
mov
sub
sti
test
add
mov
push
cmps
sti
push
fs
outs
lock
jmp
cmp
stos
shl
dec
ret
xchg
push
js
(bad)
xor
sub
mov
cmp
cmp
pop
add
cmp
push
xor
movs
ja
jne
fldcw
iret
xchg
(bad)
sti
loope
scas
sbb
adc
sbb
push
cli
loope
fnstcw
aaa
fs
dec
pop
nop
lods
movs
xlat
sub
mov
std
dec
rcl
dec
sbb
jbe
addr16
ret
clc
push
pop
mov
ret
jp
pusha
xchg
jnp
jae
mov
out
pop
in
popf
xor
test
adc
dec
in
fistp
ds
arpl
jae
lock
xor
sbb
popf
sub
mov
clc
sub
lahf
pop
ja
xor
loopne
das
jmp
xor
je
bound
retf
enter
test
mov
stos
mov
and
popf
sub
push
sub
sahf
mov
(bad)
sbb
dec
mov
cmp
scas
and
mov
lods
push
dec
call
mov
imul
jb
cmps
jg
imul
cmp
hlt
push
jne
out
xlat
jle
(bad)
popa
add
jnp
add
xchg
mov
mov
xchg
out
inc
adc
test
shl
inc
add
imul
dec
sbb
mov
jne
loopne
in
push
leave
mov
leave
push
xchg
add
xchg
ror
or
sbb
iret
fld
jns
xor
jo
dec
or
mov
sbb
sub
mov
jecxz
xor
aad
aad
sbb
push
inc
in
aaa
mov
and
cs
sti
aam
in
clc
loope
jb
js
inc
dec
xor
pop
ror
shl
mov
cmp
scas
sbb
push
cmp
add
ds
mov
(bad)
sbb
nop
and
jge
xchg
cmc
push
push
ins
(bad)
cli
inc
repz
and
sbb
jl
fs
jo
cmp
cmps
in
and
in
in
add
jae
and
ja
stc
fs
xor
stos
test
mov
mov
rcl
loopne
add
jmp
or
test
stos
xor
jo
ds
sub
fucomp
cmc
mov
jb
not
enter
jmp
mov
rcl
test
or
inc
ins
inc
sub
xchg
mov
mov
stos
arpl
cmps
test
sub
imul
mov
iret
sub
dec
sub
adc
fnstcw
add
call
jno
push
ins
and
frstor
add
dec
sub
out
jg
dec
outs
stc
jmp
sub
imul
push
xchg
xchg
xor
lods
add
pushf
test
mov
outs
test
add
push
shl
test
outs
in
mov
pop
inc
rcr
gs
jle
arpl
inc
mov
cmps
sbb
dec
sbb
lahf
pop
fcomp
cmp
jne
loope
xchg
sti
dec
xchg
push
scas
mov
fmul
and
sbb
cld
dec
push
pop
in
fidivr
test
ret
mov
mov
sbb
jp
outs
xor
cmp
std
mov
retf
fnstenv
cmps
ret
cmp
mov
hlt
mov
dec
pushf
arpl
into
sbb
or
push
arpl
ret
test
(bad)
xor
dec
adc
cmp
sbb
and
mov
hlt
adc
outs
jns
ss
jmp
int
stos
fisub
mov
xor
daa
mov
gs
and
push
jmpw
in
in
mul
and
pop
adc
ret
sti
imul
mov
paddusb
in
aam
mov
lods
ret
loope
ror
pop
cmp
(bad)
fbld
cs
fcom
fst
scas
push
cmp
xchg
cld
hlt
push
xchg
scas
fdivr
(bad)
in
stos
lods
je
icebp
ins
test
xor
and
repnz
stos
push
mov
jmp
jg
jle
mov
call
shl
adc
cwde
movs
cli
int
dec
cmc
idiv
or
lods
xchg
xlat
mov
cmp
jo
fdivr
mov
mov
mov
xor
and
sbb
sub
fwait
ror
push
movs
aad
jmp
jne
sub
je
jmp
aam
dec
imul
retf
pop
pop
std
inc
add
sbb
jne
jge
cs
inc
mov
add
mov
out
mov
loopne
cwde
mov
mov
clc
mov
call
cmp
inc
sbb
mov
dec
into
hlt
sub
inc
jns
aaa
mov
sbb
mov
pop
pop
jge
mov
ins
mov
(bad)
hlt
(bad)
out
ret
add
loope
ss
add
mov
pop
pop
pop
out
movs
adc
shr
pop
sbb
or
xor
sti
outs
push
pop
inc
xchg
cdq
and
dec
push
pop
cli
into
adc
push
dec
(bad)
sbb
cmp
push
push
adc
xchg
test
lods
in
test
shl
js
mov
mov
sbb
or
in
loopne
fucom
in
mov
out
sbb
sbb
and
data16
in
inc
sti
loopne
stos
mov
sbb
imul
xor
(bad)
sub
mov
pop
or
jo
cli
pop
jne
push
push
call
sub
and
out
call
outs
xor
pop
xlat
push
out
pop
xchg
lea
push
sub
out
cmp
cs
cmp
and
push
loope
mov
xor
in
cwde
sub
mov
pop
sar
add
xchg
repz
lea
jecxz
sbb
ret
cmp
and
addr16
inc
xor
fmul
or
cmp
pop
stos
ret
sbb
inc
cmp
addr16
in
pop
pop
dec
das
mov
pop
pop
fisubr
sbb
in
xchg
mov
mov
add
aaa
pushf
pop
mov
dec
jmp
xor
xor
dec
sbb
sbb
out
fidivr
inc
ins
mov
(bad)
idiv
or
fwait
mov
mov
sbb
into
(bad)
adc
jmp
pcmpgtw
mov
add
or
jmp
loopne
cli
push
sub
sub
sbb
repz
addr16
mov
lds
mov
cli
xchg
xor
fimul
dec
mov
fbstp
lds
scas
(bad)
pop
jno
inc
movs
int
dec
imul
popf
js
push
xor
jmp
push
gs
cmp
or
push
xor
fidiv
data16
(bad)
outs
or
mov
jne
or
dec
hlt
aam
mov
(bad)
sub
mov
xchg
js
sub
inc
cmc
jne
aas
in
push
jo
dec
inc
daa
jle
push
mov
mov
jne
jnp
and
je
mov
jne
sbb
dec
jae
iret
ret
sar
ins
lods
ficom
mov
movs
repnz
arpl
imul
movs
rcl
aam
jge
or
rcr
inc
out
cmp
xor
mov
jo
test
pop
(bad)
in
sub
ja
in
push
cdq
and
loopne
push
or
jne
js
out
lahf
in
pop
add
or
pop
add
test
xchg
bound
int
cmp
outs
jnp
test
fwait
int
(bad)
outs
mov
shr
adc
mov
call
adc
or
xor
cld
(bad)
or
jmp
mov
xchg
mov
xor
test
sbb
es
sbb
xor
push
es
or
jmp
sub
repz
test
pop
pop
push
mov
push
rcr
pop
adc
in
cmp
cmps
cmp
and
imul
and
movs
aas
mov
dec
jg
add
and
xchg
das
rcl
xor
inc
pop
push
jp
pop
enter
sti
je
aam
mov
xchg
jp
int
mov
lahf
push
(bad)
pop
aam
xor
pusha
das
cmps
sub
mov
in
jl
daa
popa
fsubp
sbb
int3
push
cmp
out
dec
inc
lods
dec
jmp
adc
mov
div
ss
scas
shl
pop
fidivr
cmp
add
sub
inc
mov
or
mov
dec
or
cmc
loopne
movs
or
jle
pop
mov
mov
xor
daa
aad
call
aas
fldcw
pop
mov
jae
dec
add
fld
(bad)
(bad)
xchg
out
ins
pop
add
out
pop
movs
pop
cmps
aad
or
mov
push
fs
xor
jbe
jns
sub
cwde
fwait
repz
push
rcr
adc
xor
test
add
retf
(bad)
dec
icebp
aas
retf
jb
add
adc
adc
push
fiadd
ficom
hlt
sub
gs
scas
dec
ret
sub
xchg
sbb
adc
inc
mov
dec
xchg
scas
fadd
lock
and
xchg
retw
inc
and
icebp
ss
int3
inc
repnz
mov
sar
cmp
mov
pusha
cmp
popa
int3
sub
push
into
(bad)
xchg
rcl
and
inc
pop
ins
dec
cmp
adc
ins
fwait
adc
lods
fs
pusha
cmp
(bad)
out
jg
pop
xor
dec
and
js
mov
mov
(bad)
das
xchg
and
xor
mov
mov
bound
popf
pop
xor
lock
imul
pop
test
add
add
mov
push
ins
and
mov
repz
push
dec
sbb
mov
mov
out
and
fadd
out
scas
mov
nop
xlat
dec
bound
xor
mov
sub
sar
add
adc
ja
dec
xchg
repz
je
sub
dec
imul
aad
pop
adc
hlt
dec
dec
je
jbe
push
push
das
into
and
js
pop
adc
lods
idiv
aam
fcomi
cmp
mov
push
sub
enter
pop
mov
mov
psllw
popa
add
cmp
aas
mov
(bad)
aad
stos
mov
loopne
repz
push
push
rcl
leave
lahf
push
fwait
cmp
pop
or
loop
fnsave
(bad)
sbb
inc
jge
and
add
lahf
sub
call
add
push
and
sahf
xchg
mov
xchg
mov
jno
test
std
sahf
cmc
cmp
addr16
xchg
popa
dec
test
cli
(bad)
retf
int3
or
cmp
xlat
mov
mov
int
push
aad
repz
and
lahf
repz
lods
out
in
dec
xor
int
lock
test
jne
inc
inc
jno
pop
pop
imul
adc
mov
and
dec
jg
call
aaa
sub
sub
pop
dec
int3
cdq
dec
push
mov
fbstp
jns
pop
stos
cmps
fcomi
lea
retf
int3
pop
cld
imul
dec
mov
xor
add
xchg
into
movs
dec
rcr
ret
iret
sub
inc
sbb
add
aas
ret
mov
sub
push
lock
push
fstp
in
in
lea
cmp
ret
add
xor
mov
div
xchg
inc
loope
cmps
push
pop
mov
fistp
aas
adc
and
pop
mov
pop
pusha
or
push
sbb
sub
mov
and
mov
out
mov
(bad)
xor
pop
fsub
daa
test
movs
retf
add
ins
icebp
cmps
ss
adc
sbb
add
loop
adc
call
aaa
les
push
stc
and
dec
fwait
cmp
iret
dec
xchg
mov
cmp
(bad)
mov
cmp
mov
jmp
xor
dec
idiv
loope
mov
or
mov
cs
xor
jno
aam
sahf
sbb
xchg
mov
out
pushf
jge
lahf
jno
add
inc
pop
lea
xchg
test
test
push
lods
mov
sbb
call
jge
mov
retf
and
xor
fcomip
pop
sub
mov
in
je
mov
mov
mov
int3
into
mov
jne
fnstcw
inc
in
stc
fmul
jmp
mov
mov
imul
sbb
pop
xor
call
ss
ja
dec
(bad)
add
and
push
and
pop
in
in
add
or
dec
scas
out
adc
adc
mov
aam
mov
retf
add
inc
sub
scas
pop
mov
pop
push
xchg
adc
fucomi
addr16
sbb
retf
(bad)
(bad)
and
inc
clc
cmp
inc
popa
xchg
xor
retf
ja
fs
adc
pop
les
nop
(bad)
mov
xor
and
sbb
pop
jle
jl
out
mov
cmp
mov
fidiv
ss
cmps
in
adc
cmps
mov
cmp
mov
or
inc
adc
push
sub
add
push
cmps
inc
(bad)
xchg
ret
add
mov
sbb
shl
movs
hlt
mov
enter
and
adc
mov
xchg
inc
push
sahf
add
daa
sbb
push
or
mov
pusha
inc
or
xchg
sub
ret
test
or
outs
xchg
push
dec
push
ss
pusha
jp
pop
stos
fnsave
sti
stos
pop
and
in
push
cli
in
adc
rcl
imul
int
pop
xchg
jnp
in
enter
shl
addr16
pop
bound
mov
movs
adc
fwait
icebp
cmp
push
pop
pop
movs
cmp
push
pop
push
and
sub
fs
(bad)
adc
rcr
mov
daa
inc
movs
enter
push
jae
ret
pop
add
cmc
add
(bad)
jns
(bad)
jmp
aad
push
xor
mov
jno
adc
adc
push
adc
xchg
mov
(bad)
das
xor
ja
pop
or
je
sbb
sbb
fidivr
imul
sbb
cli
and
cmps
or
jo
popa
dec
and
cwde
pop
retf
adc
call
dec
lods
sub
(bad)
in
and
jg
int
ret
pusha
sbb
popa
mov
mov
sub
std
out
push
test
jno
add
push
inc
pop
loop
sub
fucom
popf
scas
int
in
movs
stos
fnsave
add
xchg
cwde
aaa
clc
in
and
cmp
jle
dec
pop
jle
(bad)
add
test
fsubr
rol
mov
jge
dec
fisub
rol
jle
imul
xor
cmp
inc
les
in
jnp
or
dec
dec
inc
lahf
push
mov
fs
cmc
fnstcw
push
mov
lahf
sub
fwait
mov
and
cmp
adc
dec
sub
out
sbb
lds
(bad)
ss
cmp
imul
daa
push
call
movs
fcom
in
cmp
jmp
enter
fstp
dec
stos
call
mov
or
jnp
icebp
push
das
shl
jbe
add
add
add
xchg
jmp
push
and
jbe
aam
frstor
add
mov
adc
cmp
outs
mov
stos
(bad)
ss
shl
mov
inc
nop
arpl
push
int3
lea
mov
cs
xor
outs
ss
stos
mov
adc
or
push
or
xchg
shl
ss
sbb
push
xchg
das
test
jno
imul
push
lods
or
add
data16
jns
dec
xor
adc
sbb
sti
mov
mov
add
jno
out
jae
pop
lods
je
sbb
sub
enter
mov
or
in
hlt
out
xchg
sub
fst
add
mov
data16
inc
les
add
sbb
mov
or
ja
in
mov
(bad)
pop
ins
xchg
add
scas
jg
ss
cmp
jnp
jb
xor
aaa
lods
mov
xor
in
sbb
add
outs
sbb
fwait
loopne
cmps
add
pop
mov
cld
stos
(bad)
fsub
or
or
pop
movs
xchg
cmp
pop
movs
mov
cwde
aas
and
add
jl
xor
pushf
xchg
stos
cmp
adc
dec
pop
das
xor
mov
js
jo
push
jbe
dec
xchg
pop
mov
ret
fiadd
pop
inc
retf
mov
inc
or
dec
dec
cdq
and
jle
cmp
mov
xor
out
cmp
lea
jb
push
mov
mov
popa
adc
add
push
mov
sub
xchg
out
adc
sub
mov
pop
mov
and
ins
inc
aam
pop
ror
push
inc
inc
pop
ficom
pop
(bad)
fadd
cmp
xor
sbb
imul
ffree
mov
lar
sub
movs
mov
(bad)
je
aad
cmp
out
mov
jg
out
scas
iret
fst
enter
sar
hlt
daa
js
mov
ins
call
gs
iret
(bad)
lahf
cli
into
cmps
jp
movs
fwait
jge
xchg
dec
in
push
xor
inc
sar
out
scas
push
or
mov
mov
dec
jmp
xor
xchg
aaa
inc
push
arpl
adc
mov
mov
mov
addr16
daa
xor
sub
outs
aam
rcl
repnz
ja
cli
cmc
aad
mov
cli
sbb
es
sti
pop
mov
mov
ret
sahf
retf
stc
(bad)
xchg
xchg
fs
inc
xchg
int3
data16
mov
xchg
cli
jnp
cmp
add
xchg
scas
xor
pop
pop
push
mov
sbb
mov
daa
mov
xor
mov
ds
mov
js
stos
rsqrtps
adc
dec
mov
cdq
push
xchg
jnp
jb
push
das
fbstp
cmps
ret
int
ret
or
and
ss
sub
add
std
jecxz
pop
ss
in
fcom
cmps
ret
jnp
xor
and
sub
fwait
xor
inc
popf
push
pop
(bad)
call
in
ret
and
repz
(bad)
jmp
jmp
sub
scas
sub
mov
in
lods
sub
xor
mov
call
lds
xchg
inc
in
popa
jns
mov
sub
pop
mov
repnz
sub
js
xchg
add
sub
xor
outs
mov
dec
push
adc
hlt
test
jmp
popa
and
sbb
int
mov
jae
ins
call
mov
mov
outs
push
xlat
gs
(bad)
adc
cmp
std
xor
jp
std
pop
dec
test
jb
aam
(bad)
mov
pop
sbb
cmps
or
xor
jne
bound
dec
dec
mov
inc
dec
aas
xor
inc
popf
sti
jmp
jg
f2xm1
xchg
add
test
lea
sub
jmp
lea
or
lahf
xor
sahf
cwde
das
mov
fidiv
and
call
iret
call
pop
lahf
adc
rcr
aam
cmp
into
ret
adc
push
out
stos
mov
adc
xlat
je
jae
mov
aas
daa
call
clc
ins
fmul
xchg
xor
jb
add
sbb
lock
xchg
(bad)
jae
pop
or
jecxz
imul
repnz
or
shl
jmp
lahf
fmul
repnz
inc
movs
scas
lods
outs
push
inc
mov
mov
imul
(bad)
cmp
daa
inc
fmul
push
inc
xchg
repnz
cld
sbb
inc
int
popf
shl
ss
imul
rcl
cwde
fstp
and
lahf
cmps
ror
retf
mov
mov
cwde
sbb
ja
dec
dec
cmp
mov
jle
(bad)
icebp
pusha
pushf
fisttp
sub
adc
movs
test
pop
mov
enter
mov
addr16
xchg
xchg
mov
cmp
cmovp
ja
mov
jle
jno
stc
cmp
lods
shl
in
sbb
pop
push
cmp
aas
xchg
jns
idiv
jne
imul
ret
sbb
push
lods
dec
int3
ret
loop
lds
aas
pop
cmp
inc
mov
xor
cmp
ret
fwait
add
push
icebp
jbe
(bad)
xchg
add
das
push
dec
sub
les
dec
dec
jno
mov
jl
jnp
mov
push
lock
push
inc
xlat
repnz
cmp
cmps
push
xchg
cmp
cli
jno
mov
jecxz
cdq
xchg
lods
sub
rcr
or
inc
movs
scas
fnsave
outs
ret
clc
sar
(bad)
loope
fs
fstp
jle
pusha
scas
adc
mov
jge
in
mov
mov
inc
aam
fs
fcmovbe
call
sbb
cmp
pop
movs
mov
dec
daa
dec
mov
xchg
inc
jns
imul
sbb
mov
int
ins
pop
bound
lock
mov
in
rcl
stos
and
xchg
sub
inc
push
adc
ins
mov
jns
stc
loope
lds
loopne
mov
(bad)
and
call
lock
cmp
jo
or
ror
mov
fidivr
popf
sbb
dec
scas
sub
or
jno
(bad)
or
push
jb
sub
jns
mov
cmps
(bad)
xchg
test
xor
jnp
jb
(bad)
test
fdivr
lock
inc
data16
test
cli
add
shl
adc
out
dec
movs
mov
jne
test
mov
je
mov
sar
cmps
push
repnz
add
xor
sar
lds
(bad)
pop
inc
sbb
(bad)
mov
mov
sbb
sbb
bound
jecxz
dec
xchg
pop
push
movs
sbb
test
dec
imul
out
rcl
cdq
scas
or
push
cld
call
ret
es
pop
mov
imul
mov
inc
push
xor
or
adc
mov
xor
imul
retf
cmp
fcom
jne
push
xchg
(bad)
pop
jmp
jb
scas
pop
sub
ins
test
and
jmp
pop
push
mov
push
mov
shr
mov
sub
daa
test
sub
pop
sbb
sbb
(bad)
out
lock
pop
pop
mov
sbb
call
out
ficomp
inc
or
dec
mov
mov
(bad)
jle
cwde
pop
xchg
cmp
push
inc
shl
or
sub
cwde
in
out
jecxz
sbb
or
fld
in
push
and
rol
lea
sub
xchg
mov
mov
std
mov
popf
cmp
ret
mov
into
mov
push
rcr
cmp
cmp
mov
mov
xor
popf
cdq
ja
stc
jle
jle
add
popa
(bad)
in
push
pop
cmp
lahf
outs
cs
sub
mov
add
hlt
sub
jg
jge
test
cwde
cli
aaa
or
call
imul
sbb
loope
mov
mov
mov
popa
ins
stos
mov
xchg
mov
fild
stos
push
inc
xchg
or
mov
inc
xchg
fwait
(bad)
cmp
mov
cmp
adc
ja
out
push
mov
std
sahf
movs
inc
loopne
jmp
fcom
fidivr
adc
retf
cmp
mov
adc
and
movs
stos
psubq
mov
inc
in
in
fsubp
outs
lock
dec
mov
daa
mov
rcr
mov
add
inc
mov
gs
fcomp
cmp
sti
ins
iret
xchg
sbb
xchg
mov
(bad)
sbb
pop
pop
xor
pop
cmc
mov
push
push
cdq
or
sub
imul
dec
push
pushf
test
inc
jo
into
test
arpl
inc
inc
add
xchg
cli
xchg
dec
adc
jae
je
ror
cmp
mov
aaa
xlat
imul
clc
pop
mov
daa
jmp
sar
repnz
or
jge
aam
and
sbb
icebp
lods
mul
cmps
pop
mov
jp
cld
ror
jge
pop
push
adc
adc
popa
sub
enter
pop
xadd
adc
xor
sub
push
xchg
dec
mov
lds
gs
mov
xchg
push
(bad)
sbb
test
stos
jmp
mov
mov
xchg
push
das
mov
daa
ds
adc
push
pop
push
stos
push
mov
cmp
imul
call
retf
mov
enter
push
mov
sub
js
and
inc
imul
stos
xor
pop
mov
mov
lock
enter
stos
enter
xor
xchg
stos
xchg
dec
pop
repz
xchg
fldenv
inc
retf
pop
sahf
mov
push
sbb
pop
fistp
cmp
mov
mov
mov
test
ret
cmp
mov
mov
pop
sub
dec
lahf
mov
jg
inc
xchg
shl
sub
jl
popf
jecxz
das
push
mov
stos
ins
movs
inc
push
or
jo
pop
dec
imul
dec
dec
fisttp
or
aas
or
add
cdq
mov
push
push
mov
outs
pop
retf
ins
inc
cli
cmps
jns
je
cmp
inc
sub
js
jp
and
cmps
hlt
out
dec
adc
inc
mov
repz
sub
and
fsub
aad
inc
enter
mov
mov
cmp
scas
(bad)
call
xchg
pop
add
or
fsub
xchg
push
jle
aam
or
lahf
inc
cdq
out
adc
xor
push
mov
cs
fisttp
cmp
sub
pop
fwait
inc
jae
neg
out
pop
in
call
cmp
push
pop
jae
adc
scas
test
les
outs
aam
add
in
out
xchg
dec
mov
mov
inc
dec
movs
test
pop
or
mov
and
xchg
xor
and
cmp
repz
sub
loopne
hlt
adc
xchg
dec
cmps
test
dec
dec
dec
add
int3
ds
mov
repnz
dec
shl
adc
mov
inc
out
xor
adc
push
(bad)
inc
and
or
cmp
jbe
mov
(bad)
dec
fucomp
lods
sbb
inc
push
test
jmp
add
mov
cmp
inc
fcmovb
push
xchg
and
(bad)
ins
das
or
cmp
js
push
cmps
mov
xlat
imul
sbb
xchg
pop
sub
(bad)
adc
sub
pop
cmp
dec
inc
sbb
loope
scas
jle
lds
adc
xchg
jl
mov
xor
(bad)
loopne
pop
mov
cmps
xor
sbb
and
cmp
jmp
pop
mov
mov
or
xchg
movs
push
jmp
sub
inc
push
dec
ins
pop
jmp
mov
jmp
in
push
sub
add
(bad)
jmp
or
push
addr16
jbe
dec
(bad)
jle
and
pop
inc
jmp
xor
mov
sar
add
sub
inc
clc
std
adc
mov
imul
xchg
cmp
mov
int
frstor
mov
les
rcr
ja
icebp
fild
mov
cmp
fidivr
dec
fstp
mov
push
mov
sbb
jmp
pop
dec
rol
pusha
mov
mov
daa
daa
pop
popa
in
xchg
test
add
retf
push
fldenv
mov
or
aam
adc
sbb
jb
xor
push
adc
pop
loop
or
ror
and
inc
dec
int3
daa
movs
fdiv
cdq
mov
fwait
push
cmp
xor
jo
(bad)
rol
inc
mov
shr
int
cmp
pop
(bad)
ss
xchg
pop
inc
in
jne
test
mov
xchg
add
loop
loope
das
stc
inc
rcl
mov
test
adc
xchg
clc
mov
push
cwde
pop
popa
(bad)
jmp
in
inc
mov
push
dec
cwde
sub
mov
mov
aam
xchg
in
sub
pop
pop
push
jbe
xadd
mov
mov
mov
repnz
xlat
and
jne
pop
jns
and
jl
dec
pop
xor
xor
es
out
adc
xchg
ins
out
rcl
push
rcl
push
and
data16
mov
retf
inc
int3
xchg
jb
shl
cmp
xchg
push
aam
das
fmul
sub
or
push
sbb
js
adc
out
cmp
js
or
xchg
sti
in
mov
movs
push
adc
mov
push
fwait
mov
dec
iret
ret
cmp
fstp
popf
adc
hlt
and
inc
in
cli
test
cmps
ret
add
jnp
inc
loope
je
inc
push
jne
jp
enter
pop
lahf
jmp
std
pop
pop
jl
pop
int3
xor
xor
outs
fnstcw
mov
jns
call
or
pusha
cli
arpl
out
sbb
xchg
enter
sbb
mov
and
mov
sub
mov
jmp
xor
scas
add
ins
push
inc
lds
mov
test
cmp
mov
repnz
int
sub
cmps
xchg
and
ret
cmp
js
cmps
fwait
sbb
xchg
mov
or
lahf
cmp
push
xchg
std
fsub
pop
enter
lea
jae
ret
pop
push
repnz
(bad)
add
gs
xchg
loop
pop
out
in
pop
jg
cli
sbb
sbb
push
mov
mov
push
add
loopne
out
fs
add
sbb
dec
call
sar
aad
pop
pop
mov
dec
fisttp
lods
or
test
std
adc
add
xor
mov
(bad)
dec
pop
ins
test
mov
mov
scas
push
es
(bad)
out
cmp
lods
push
fbstp
sbb
mov
and
fcos
mov
add
mov
pop
les
adc
fcomp
pop
sahf
shl
push
out
xor
pop
shl
push
jno
in
and
mov
imul
inc
popf
push
imul
ins
and
sar
out
punpcklbw
push
inc
mov
(bad)
lods
inc
rcr
jge
arpl
mov
add
ins
push
icebp
shl
adc
in
les
push
push
inc
jne
add
out
push
into
lock
jbe
and
scas
sub
fdivr
mov
and
sub
mov
aas
mov
jecxz
mov
(bad)
add
push
jnp
sub
jbe
nop
call
mov
(bad)
in
clc
sub
jns
pop
stc
jl
xor
xchg
inc
ret
and
xor
sub
fsubr
and
jmp
push
sbb
leave
in
pop
fnstenv
fwait
xor
outs
in
sbb
push
or
add
push
pushf
retf
lods
add
add
push
fcomp
cmp
pop
jo
sahf
js
mul
xor
adc
mov
ror
arpl
xor
sbb
push
sbb
js
mov
cmps
xor
mov
sbb
xchg
movs
sbb
icebp
jne
mov
xchg
call
mov
mov
pop
(bad)
clc
add
dec
jbe
fild
push
mov
das
or
(bad)
xor
stos
aaa
loopne
cmp
(bad)
fs
(bad)
fisttp
gs
pop
push
push
scas
push
sub
les
jg
or
scas
dec
shr
add
repz
pusha
pop
push
xchg
int3
dec
call
js
xchg
sbb
shr
jb
sar
jge
das
loop
add
push
cmp
sbb
jge
jnp
xchg
aam
jl
shl
mov
cmp
jecxz
dec
jecxz
popa
pcmpgtd
sub
movs
aad
jle
add
mov
ds
frstor
mov
call
mov
mov
sbb
in
repz
cmp
out
mul
mov
loope
pop
sbb
jg
xchg
jnp
dec
enter
mov
mov
dec
add
cdq
cmps
aas
aam
sub
loop
dec
adc
mov
je
(bad)
lahf
sub
cli
rol
call
sahf
mov
dec
or
repz
sbb
jo
fiadd
fiadd
add
inc
js
push
add
dec
xchg
std
pop
push
mov
push
cmps
or
(bad)
data16
(bad)
imul
das
push
jp
jle
jo
push
into
lea
int3
js
push
xchg
fcomp
pop
xor
rcl
add
xor
imul
repnz
adc
push
adc
pop
push
sahf
sub
add
cmp
lock
jo
sub
in
icebp
pop
call
sub
test
dec
push
jge
jmp
(bad)
xlat
push
or
jnp
in
fcomp
xor
xchg
adc
xor
and
ret
and
sub
(bad)
ja
ins
ins
or
cmp
fld
inc
daa
sub
inc
sub
dec
lahf
shl
cmp
leave
or
xor
fisub
and
and
in
test
xor
mov
cmp
mov
jno
mov
icebp
mov
cmps
jp
iret
jno
mov
(bad)
push
mov
add
push
mov
jmp
es
sub
sbb
push
cmps
mov
sub
jo
gs
mov
add
cmp
call
scas
push
test
int
xchg
cmp
neg
imul
mov
movs
jns
jmp
imul
xlat
mov
xchg
lahf
or
sbb
inc
movs
xchg
mov
xchg
fcomi
aad
pop
fdiv
mov
ins
sar
pop
push
mov
dec
push
adc
dec
cmps
push
cmp
add
or
in
aas
push
daa
pop
push
adc
outs
adc
(bad)
jmp
sub
or
ret
cs
ret
mov
test
push
inc
mov
pushf
dec
jo
sbb
stc
jg
leave
in
(bad)
mov
pop
fild
add
repz
push
and
movs
outs
loop
lds
mov
jmp
(bad)
xor
std
jmp
inc
push
mov
scas
fs
repz
daa
adc
and
mov
ss
dec
add
imul
cmp
push
mov
dec
sbb
pop
fild
sub
push
jl
cmp
pushf
and
add
sub
aas
cmp
push
sahf
psrlq
inc
adc
xchg
sar
sbb
ins
ds
cs
dec
movs
into
sbb
push
mov
icebp
sub
stos
mov
add
xchg
shl
mov
sbb
push
repz
cdq
push
or
das
clc
inc
(bad)
jnp
in
shl
mov
jmp
retf
jmp
xchg
jmp
mov
cs
mov
fbstp
jo
push
cmp
push
pop
popa
pop
xchg
arpl
sbb
xchg
fcom
popf
imul
and
cld
ins
in
adc
mov
stc
mov
add
mov
cdq
stos
mov
popf
sahf
add
sub
mov
push
pop
(bad)
leave
call
jb
pop
popa
sbb
mov
sub
and
les
(bad)
mov
xor
ds
cmps
pop
enter
(bad)
loope
test
push
loopne
out
call
loopne
push
and
and
test
fiadd
(bad)
fmul
xor
or
std
movs
or
jns
push
adc
arpl
adc
repnz
jl
lock
mov
sbb
scas
add
pop
mov
sar
frstor
pop
sahf
and
push
push
xchg
mov
inc
xchg
add
push
adc
ret
pop
out
or
stos
iret
cdq
retf
jns
fs
(bad)
leave
and
and
cli
xor
imul
mul
mov
push
cmps
sbb
ins
nop
inc
aas
aam
mov
call
mov
add
test
leave
jmp
mov
pop
lods
mov
xchg
push
stos
clc
jno
fidiv
retf
sbb
sti
(bad)
cmp
shl
scas
and
out
mov
sar
jnp
inc
sbb
jmp
mov
pusha
dec
and
cmp
cmp
stos
jo
mov
xchg
push
mov
mov
imul
xor
cmps
or
cld
push
mov
imul
adc
cmps
aad
fwait
bound
pop
lods
test
mov
inc
or
push
ror
(bad)
call
add
pop
ret
mov
repnz
jb
add
fsubr
test
mov
fiadd
mov
lahf
mov
mov
scas
enter
xor
or
or
jne
pop
push
in
mov
and
or
popf
mul
xor
or
mov
lds
mov
pop
js
ins
jne
jns
xchg
sub
ds
test
inc
xchg
add
aaa
retf
stos
loop
aad
adc
xchg
push
fiadd
call
and
pop
clc
push
mov
leave
push
inc
jae
push
jecxz
in
mov
arpl
inc
xchg
mov
and
popa
and
xor
clc
jae
mov
mov
sahf
out
test
add
fs
dec
push
jmp
xchg
ss
inc
pop
ds
cmp
lock
std
lahf
sbb
push
pop
push
pop
test
dec
cs
pusha
cld
push
enter
mov
in
idiv
addr16
fnstsw
(bad)
shl
or
adc
mov
jb
retf
aas
and
outs
adc
cmp
in
inc
popf
loope
popf
(bad)
ffreep
daa
cmp
mov
inc
bound
jo
sbb
or
xor
sub
push
pusha
hlt
test
out
ss
ror
gs
es
and
mov
cmps
fidiv
jnp
test
xchg
(bad)
cmp
in
xchg
fwait
mov
test
xchg
jae
dec
and
rcr
jno
add
push
enter
pop
jb
sbb
enter
add
adc
or
pop
ins
(bad)
or
mov
xchg
dec
daa
dec
mov
popf
das
mov
or
jnp
pushf
fstp
js
aas
mov
dec
fcmove
mov
loop
icebp
mov
in
xor
(bad)
aam
out
ins
fcomp
mov
dec
cmp
enter
dec
lahf
or
stos
sub
(bad)
sub
repnz
mov
adc
sbb
in
bound
push
sbb
and
sbb
lods
bound
push
and
aam
lock
jg
adc
cmps
ins
dec
mov
sbb
pop
and
rol
bound
add
inc
add
rol
fisttp
lods
xchg
int
pop
daa
outs
jmp
dec
cmp
sub
lock
mov
mov
loop
mov
and
stos
jo
xor
push
sti
jns
sub
cs
sahf
mov
add
fisubr
jnp
sahf
dec
stos
into
xchg
adc
mov
cmp
adc
int3
dec
out
sub
mov
aad
adc
stos
or
test
bound
push
arpl
push
fst
lods
xlat
xchg
add
les
ins
mov
pop
js
sbb
fistp
sub
dec
sbb
xchg
adc
lock
inc
loop
xchg
es
pop
push
dec
mov
daa
mov
clc
sbb
jp
mov
popa
sti
mov
ja
jmp
mov
jae
out
sub
outs
pop
ficom
xor
js
retf
push
cdq
rcl
jnp
cmps
jmp
fist
jb
in
ins
sbb
dec
stc
leave
sub
div
xchg
shr
pop
fwait
mov
jp
sbb
add
dec
je
push
fild
mov
push
shl
scas
mov
aaa
xor
dec
push
mov
jae
sub
jle
pushf
add
mul
dec
jne
xor
xchg
bound
push
lahf
imul
cmp
sbb
adc
mov
clc
mov
sti
neg
pop
cmp
fimul
rol
and
jge
mov
xlat
and
cli
sbb
jl
sahf
lds
ficomp
loope
push
push
cwde
ret
das
in
mov
xor
dec
mov
inc
movs
and
cmp
lock
leave
mov
push
pop
jg
rcr
sub
leave
idiv
mov
xchg
ret
aas
les
adc
gs
jecxz
pop
dec
mov
mov
or
sub
cs
jmp
mov
std
lods
push
ins
nop
daa
rcr
cmp
mov
inc
and
pop
add
xor
xchg
cmps
xor
retf
int
push
pop
std
push
test
or
repnz
call
jle
cli
imul
and
add
in
cmp
ss
mov
(bad)
add
arpl
xor
jge
adc
push
xchg
ss
cmp
clc
dec
push
jo
pop
rcl
pop
sbb
stc
push
sub
fldcw
hlt
sbb
or
or
movs
call
cmc
das
or
mov
inc
shr
inc
pusha
jnp
pushf
mov
push
jmp
clc
push
sar
push
xchg
xor
jl
inc
add
sbb
xlat
mov
sbb
iret
bound
imul
sbb
mov
push
inc
hlt
data16
in
fiadd
push
out
mov
add
sti
mov
pop
pushf
rcl
out
in
retf
mov
mov
xor
xor
clc
add
sbb
and
push
pop
fadd
push
int3
and
(bad)
jne
popf
lods
jb
stos
test
daa
and
data16
dec
arpl
mov
popa
fs
sub
in
lea
jle
das
cmp
jge
mov
rcr
imul
pop
and
sub
shl
push
cmc
pop
jae
stc
inc
data16
ds
dec
loope
cmp
call
shl
push
push
xlat
add
push
pop
xchg
imul
jle
jbe
daa
jmp
in
inc
and
es
daa
and
clc
add
fld
push
adc
xor
push
mov
xor
lds
push
sub
imul
icebp
cmps
cmp
mov
xor
mov
ror
and
int3
into
and
mov
cdq
mov
mov
into
retf
dec
add
add
inc
mov
xor
mov
pop
(bad)
cdq
fld
or
dec
mov
pop
fisttp
inc
add
mov
(bad)
movs
arpl
push
xlat
xlat
mov
stos
inc
imul
sahf
ret
or
fdivr
or
ins
xlat
xchg
pop
xchg
imul
outs
cmc
xor
jne
xor
outs
out
mov
push
or
pop
ret
ins
cdq
mov
(bad)
sub
pop
pop
jbe
stc
add
inc
imul
dec
retf
retf
and
retf
(bad)
repnz
sahf
das
mov
(bad)
mov
push
mov
push
jmp
fwait
es
jecxz
cdq
add
and
retf
xchg
add
sub
adc
retf
ss
loopne
mov
cmp
jne
jmp
xor
xor
ja
mov
stos
fs
xor
hlt
sbb
sbb
sbb
xchg
inc
stos
dec
pop
popf
xchg
test
sbb
xor
lods
in
pop
push
and
out
mov
sub
and
enter
inc
mov
adc
pop
cmp
xchg
sbb
mov
test
out
idiv
shr
imul
es
repnz
(bad)
mov
cmp
inc
retf
inc
sbb
loop
(bad)
pop
push
(bad)
(bad)
jp
cmps
add
shl
bound
outs
sub
cli
jne
and
mov
lock
push
and
mov
stc
frstor
xchg
xor
fld
jmp
mov
mov
sub
shr
mov
add
and
mov
push
jns
fisub
add
fild
pusha
pop
and
out
fcom
jns
fsubr
pop
xor
add
cli
cmps
mov
push
dec
(bad)
leave
or
push
addr16
cmp
pusha
pusha
(bad)
jmp
dec
add
jmp
mov
int
dec
mov
adc
dec
push
retf
xlat
xchg
addr16
js
push
call
push
dec
mov
push
mov
ins
mov
int
pop
push
test
jmp
leave
cmp
sbb
mov
cmc
jnp
(bad)
jp
in
dec
xchg
retf
xor
or
ins
xchg
sahf
lods
sahf
repz
xor
movs
xchg
mov
cmc
aad
cwde
sbb
sar
jno
mov
aad
lds
dec
arpl
add
cmp
addr16
mov
pop
pop
scas
out
jmp
addr16
dec
std
jmp
dec
pop
or
mov
je
mov
pop
iret
cwde
ficom
xor
mov
es
inc
pop
mov
imul
cmp
jns
mov
push
std
xor
inc
aam
cmp
mov
jb
jl
pop
lods
push
nop
dec
mov
call
cmps
jmp
mov
into
call
stc
jns
pop
cmp
or
mov
cmp
xchg
cmp
stc
cmc
and
or
mov
mov
jne
outs
cmps
stos
cmp
imul
int
ss
jg
push
loope
mov
lods
clc
mov
add
sub
or
mov
mov
hlt
inc
cli
xbegin
cdq
dec
mov
nop
pop
call
in
mov
xchg
movs
push
arpl
cmps
mov
sbb
jns
xor
cs
sbb
cmp
loop
fistp
jb
cmp
in
inc
jns
lahf
xor
cmp
jo
sbb
cld
sbb
pop
rcl
aaa
movs
jle
sbb
and
jno
push
mov
shl
dec
add
adc
arpl
leave
jbe
cli
in
pop
cmps
mov
int
aam
push
retf
loope
adc
add
sbb
cdq
(bad)
cmp
ins
dec
xchg
inc
in
cld
dec
push
mov
retf
cmc
pop
js
sbb
cli
pop
int3
repnz
stos
mov
fs
inc
fstp
out
int3
mov
mov
add
adc
mov
test
lock
sub
adc
inc
jb
(bad)
fsubp
push
hlt
imul
inc
arpl
ins
add
fwait
xchg
ja
inc
in
cdq
inc
ins
cmp
sbb
xor
sti
pusha
dec
inc
jbe
mov
inc
cli
stc
mov
xor
fsub
popf
dec
ds
pop
jnp
dec
cmp
mov
fwait
fwait
add
fistp
xor
dec
aas
mov
adc
sbb
adc
and
cmps
push
add
mov
or
and
test
call
cmp
jo
cmps
sub
and
inc
xor
adc
test
loop
arpl
mov
push
mov
scas
fimul
adc
push
cmps
push
push
dec
iret
and
xchg
and
jecxz
push
and
enter
xlat
rol
mov
mov
dec
xlat
bound
nop
push
inc
sbb
add
(bad)
sti
jbe
and
cmp
add
fnstenv
mov
jecxz
cmp
mov
pop
pavgb
lea
test
sti
add
dec
xor
mov
pop
scas
adc
adc
retf
mov
outs
push
adc
out
lock
xor
les
or
sub
jno
mov
adc
mov
adc
cs
jl
mov
bound
jo
adc
div
xchg
iret
imul
adc
lock
cdq
stc
enter
jno
mov
xor
movs
ror
sti
imul
push
in
mov
pop
add
(bad)
mov
pop
jmp
(bad)
sbb
jl
mov
xor
aaa
push
dec
aas
sub
jp
aas
pop
mov
in
bsr
xchg
add
xor
sub
pop
and
dec
mov
xor
fimul
sbb
and
lds
icebp
pusha
xchg
rol
or
in
push
inc
in
push
loopne
or
test
xchg
out
add
popf
and
fcom
sub
fldcw
cli
sbb
loope
out
(bad)
jmp
sti
xchg
iret
adc
ins
mov
pop
sub
mov
addr16
lods
inc
and
sub
scas
xor
push
adc
pop
jg
bound
(bad)
lahf
cmp
pop
push
cli
mov
hlt
push
iret
enter
bnd
cmps
lods
pop
adc
stos
je
inc
mov
clc
jno
jl
mov
push
ja
scas
out
sbb
mov
das
jo
rcl
retf
fnstcw
je
shl
push
mov
sti
outs
scas
xor
xchg
sub
xchg
mov
mov
or
inc
cmp
retf
fsubr
xor
mov
fidiv
scas
mov
pop
std
jle
in
mov
jb
shr
clc
add
adc
or
dec
dec
out
call
xor
cmps
mov
sar
outs
popf
xchg
test
nop
mov
sub
sbb
rol
stc
fidivr
inc
mov
mov
out
sti
aaa
pop
sub
push
stc
loopne
mov
in
push
pusha
movs
rcl
xchg
test
inc
(bad)
jbe
jge
ss
dec
dec
mov
cdq
int
pop
not
(bad)
sbb
mov
sbb
fcomp
in
dec
mov
icebp
mov
dec
fistp
stos
mov
sar
out
sbb
jb
adc
jns
xchg
sbb
test
mov
ret
mov
mov
push
out
outs
pusha
mov
or
mov
adc
cs
movaps
sbb
mov
adc
jl
xchg
stos
mov
mov
retf
jge
cdq
dec
sbb
scas
xor
sbb
test
cld
sahf
jmp
ucomiss
inc
xor
ficom
jmp
jmp
and
imul
and
pop
or
add
jg
imul
xlat
out
sub
out
rcl
pop
or
mov
push
into
mov
push
in
js
pop
pop
or
and
mov
adc
sub
mov
mov
dec
repz
out
pusha
cmp
mov
daa
adc
dec
jno
dec
frstor
inc
rcr
(bad)
xor
js
mov
mov
fisub
xor
rcr
movs
test
add
cmp
push
jbe
stos
adc
lahf
jns
rol
mov
loopne
and
ret
push
mov
sbb
jne
loopne
fs
jnp
je
mov
xor
shr
cwde
mov
jecxz
dec
or
retf
adc
ins
or
push
cmp
xchg
es
add
mov
mov
ins
add
jle
add
inc
jmp
lods
dec
push
loope
xchg
in
jne
sub
cmp
adc
cdq
fcomp
add
mov
sbb
and
xchg
dec
inc
cmp
cld
adc
jae
test
push
pop
fs
mov
pop
imul
sbb
cmps
jno
shl
pop
dec
sub
mov
fsubr
mov
push
sbb
jb
add
popf
ds
pop
fwait
test
mov
mov
mul
push
in
pusha
dec
stos
pop
mov
dec
and
pop
xchg
and
scas
xor
adc
fs
je
jle
lds
shl
out
xadd
stc
xchg
inc
push
xor
out
jns
and
ins
adc
pop
mov
shl
je
lods
adc
push
movs
rcl
dec
(bad)
adc
sbb
and
xchg
xchg
sub
add
jle
push
mov
cmp
clc
inc
adc
pop
scas
sub
outs
push
jne
cld
cld
ret
mov
out
aad
es
repnz
bound
pop
xchg
in
ficomp
ret
push
mov
xchg
mov
movs
adc
pop
fsubr
push
ins
cdq
jmp
mov
in
stc
dec
aad
xchg
cmp
or
fmul
aad
sub
les
add
mov
scas
xchg
test
out
inc
das
shl
popf
cmp
mov
mov
das
jle
adc
ret
cmovnp
mov
sub
shl
push
shl
xchg
jo
fidivr
push
data16
jp
in
fs
cdq
inc
imul
sbb
dec
shl
or
(bad)
mov
sbb
imul
or
pusha
bound
add
pusha
and
xchg
sar
jb
(bad)
retf
in
test
xor
shr
and
xchg
out
sbb
dec
jl
dec
pop
int3
repz
xchg
mov
out
retf
mov
inc
fwait
inc
mov
movs
push
scas
mov
mov
push
push
outs
push
(bad)
call
mov
cmc
in
jp
or
dec
clc
mov
add
fcom
mov
mov
mov
repnz
push
lea
das
call
sub
xchg
xor
pop
jecxz
imul
dec
push
cmc
mov
(bad)
mov
xchg
ss
inc
mov
sahf
push
test
inc
or
xchg
call
xchg
movs
lds
or
sub
movs
xor
push
sbb
movs
pop
lods
adc
mov
jl
fstp
stos
mul
repnz
and
xchg
mul
inc
and
jle
or
cmp
xor
cmps
push
fcom
mov
not
daa
mov
test
cdq
jmp
xor
sahf
push
into
aas
cmp
jecxz
cmc
push
fisttp
mov
push
sahf
lods
scas
and
lahf
xchg
add
sub
aad
inc
push
push
(bad)
fadd
pushf
push
inc
ret
retf
imul
xor
inc
jg
or
cmp
fdivr
pop
loope
test
sbb
test
data16
mov
sbb
sbb
and
icebp
cmps
std
sbb
sub
mov
pop
inc
sub
in
stc
push
inc
sub
fmul
test
in
lds
imul
dec
pop
stos
xor
mov
mov
scas
sub
scas
fiadd
sub
clc
dec
(bad)
(bad)
fstp
aas
lea
push
dec
cmp
aad
xor
fsubrp
je
lods
or
movs
icebp
sbb
out
cld
mov
(bad)
pushf
and
fs
in
sub
dec
or
pop
stc
pop
cld
scas
retf
or
shr
xchg
xchg
pop
adc
dec
jg
fwait
and
push
jmp
into
inc
loop
push
iret
(bad)
lds
pusha
cmp
add
(bad)
frstor
hlt
cmp
(bad)
(bad)
jb
movs
fsubp
adc
jl
mov
call
add
pop
daa
jbe
sar
leave
dec
pushf
outs
and
out
pop
fcmovnbe
cs
out
cmps
sbb
xor
imul
pop
fs
push
inc
cmp
loopne
push
xchg
inc
dec
pop
xchg
cwde
stos
out
cld
xchg
into
cdq
in
maxps
fiadd
ds
(bad)
sub
in
mov
in
inc
test
and
fs
jge
es
jno
xlat
test
(bad)
or
xor
inc
aam
and
sbb
add
in
shl
xchg
xchg
dec
jecxz
push
stc
fmul
add
push
jno
(bad)
arpl
push
fcom
xor
or
mov
or
dec
mov
cmp
cmp
or
sub
xchg
sbb
mov
dec
in
rcl
out
enter
fwait
repnz
pop
dec
leave
fisubr
pop
dec
cwde
jecxz
inc
adc
mov
out
fwait
xlat
lods
or
cwde
test
call
adc
push
xor
pop
jle
mov
adc
call
call
out
and
and
lods
xchg
pop
sbb
adc
(bad)
mov
pop
ret
repz
in
inc
sbb
mov
shl
add
add
call
in
movs
inc
push
clc
or
out
sti
scas
mov
sub
je
aas
out
adc
pop
imul
xor
ins
enter
popf
data16
cli
adc
mov
fsub
cmp
mov
ret
fiadd
ror
xchg
out
or
movs
cld
cdq
or
adc
fstp
mov
fcom
sub
xchg
dec
pop
add
in
(bad)
scas
pop
pop
adc
add
mov
and
ins
ins
adc
aad
xor
push
xchg
(bad)
jg
(bad)
imul
into
movs
cmps
adc
ret
cmps
cld
xchg
das
jmp
jnp
add
cwde
mov
in
pop
mov
shl
arpl
dec
add
cmp
imul
mov
gs
and
xchg
shl
outs
mov
fistp
fwait
sbb
shl
psrlq
inc
fcmovbe
out
ret
inc
jns
lahf
fcomp
ins
pop
imul
in
arpl
call
push
test
ret
aaa
push
and
xchg
in
clc
cmps
push
pop
daa
jg
push
jbe
nop
mov
pop
pop
or
add
push
int3
add
lods
addr16
add
lods
dec
ror
mov
adc
dec
(bad)
ds
daa
stc
sub
aam
mul
mov
shl
and
mov
ja
add
(bad)
xchg
fist
test
cwde
sbb
out
dec
call
adc
mov
push
and
add
pop
xchg
bound
sar
adc
outs
fimul
jae
fwait
sbb
adc
and
fst
arpl
mov
fcom
pop
ds
jne
jmp
jge
mov
add
movs
xchg
cwde
push
jg
in
dec
test
int
sub
dec
push
int3
xlat
jmp
and
nop
mov
loopne
adc
test
push
or
inc
add
and
dec
jmp
add
mov
sub
stos
ins
push
les
sub
sti
enter
xor
icebp
or
jle
and
or
pop
or
pop
outs
mov
pop
dec
jmp
push
mov
aaa
sbb
data16
mov
pop
cmp
or
imul
cld
ror
ins
aam
mov
pop
repnz
stos
cmc
mov
fcmovu
ds
call
jg
sbb
dec
mov
ret
stos
pop
pop
mov
into
(bad)
mov
(bad)
aaa
pop
adc
pop
stos
rcr
dec
jo
out
dec
ss
mov
aas
fwait
lock
(bad)
jns
mov
test
or
test
mov
mov
sub
stos
mov
cmovns
pop
cdq
pop
jmp
lea
je
addr16
cmp
xchg
add
push
repnz
jbe
lea
sub
mov
add
push
pandn
gs
cmp
add
into
jl
pusha
xchg
(bad)
sub
(bad)
(bad)
add
push
push
leave
mov
adc
int3
and
(bad)
ret
fisttp
cmps
pop
ror
sub
jno
repz
jmp
or
in
cmps
jb
stos
pop
dec
imul
mov
adc
mov
pop
es
call
psubw
inc
or
sub
pop
pop
shl
(bad)
jge
add
popf
and
xor
cmp
mov
mov
retf
mov
aaa
xchg
cdq
xchg
ds
mov
push
jae
and
lock
in
and
mov
in
dec
fcomp
or
in
mov
aaa
push
out
pop
pop
lahf
push
jecxz
daa
push
test
loope
das
jns
push
xchg
lahf
jg
push
push
rcl
loopne
push
push
and
cmp
aam
add
sub
pop
ds
dec
and
adc
shl
call
cdq
add
stos
mov
push
aas
call
(bad)
(bad)
leave
dec
test
pop
sub
cmp
neg
mov
imul
inc
mov
dec
ds
xchg
and
pop
mov
aad
(bad)
lock
jmp
mov
pop
dec
jg
loop
pushf
test
xor
sub
jl
jge
and
push
outs
lods
and
lds
sub
cmps
sbb
cwde
jns
push
popf
idiv
fs
rcr
sbb
call
or
cld
sbb
add
jge
jp
mov
into
aad
adc
aad
adc
mov
cmps
cmp
xor
cmc
int
sti
and
scas
jecxz
push
push
mov
and
pop
mov
mov
fcomp
jle
in
call
test
add
cmp
rcl
add
sub
mov
and
dec
mul
outs
or
popa
inc
jl
(bad)
dec
out
push
fwait
xchg
xchg
push
cmp
daa
out
sub
jae
mov
mov
lock
aaa
dec
or
call
push
scas
cmp
test
mov
sub
cmp
stc
push
shl
mov
dec
ja
loop
mov
adc
imul
mov
std
adc
xchg
rol
lahf
mov
out
scas
imul
mov
int
mov
lods
out
scas
(bad)
mov
pop
jle
jecxz
jp
out
retf
stos
rcr
fwait
imul
pop
call
cmp
adc
gs
sbb
adc
std
out
sbb
pop
(bad)
loopne
dec
mov
(bad)
cli
or
je
mov
cmp
stos
sub
test
in
lods
in
aad
(bad)
daa
xchg
iret
scas
int
mov
repz
xor
cdq
ja
dec
jmp
mov
fwait
mov
cdq
inc
or
ror
lock
xor
(bad)
mov
test
imul
xchg
lahf
pop
daa
xor
and
jbe
ins
mov
sbb
mov
repz
fdiv
hlt
mov
out
adc
mov
cwde
mov
adc
iret
mov
push
jp
cmc
pop
movs
sbb
loop
cmps
dec
leave
and
sar
jecxz
imul
push
lds
push
add
pop
retf
fnstenv
xor
sbb
cwde
jne
ja
mov
inc
cmps
cmp
and
js
dec
mov
mov
test
jmp
xchg
sar
dec
push
repnz
pop
xor
out
mov
rol
ror
jle
adc
xchg
sub
test
movs
iret
cmps
es
push
add
daa
test
cmp
pop
push
lea
btr
loope
or
hlt
inc
out
scas
mov
xchg
ret
rol
mov
test
loopne
es
sbb
test
lock
push
test
popa
cmp
sub
test
ror
int3
and
or
out
fstp
xchg
cmps
or
dec
sahf
pop
lods
mov
mov
dec
and
pop
test
or
call
xchg
pushf
stos
test
mov
out
mov
mov
je
aad
dec
hlt
or
repz
mov
xchg
jmp
ds
ss
mov
mov
mov
fwait
test
jbe
push
jne
inc
xor
inc
jae
mov
adc
fiadd
xchg
add
cld
sti
pop
sbb
loope
aad
loope
out
(bad)
pop
push
jns
(bad)
fxrstor
mov
fisttp
fiadd
jg
sbb
xchg
sub
jle
stos
mov
inc
ins
(bad)
mov
xchg
add
movd
jo
push
mov
shl
in
cdq
in
inc
inc
sub
xchg
xchg
adc
sub
push
push
outs
scas
leave
sbb
add
iret
dec
es
out
jnp
inc
adc
mov
push
lahf
jns
aad
mov
ins
mov
je
sub
ins
push
popa
sbb
xlat
sub
or
adc
xchg
(bad)
jne
or
adc
sub
repnz
and
adc
scas
cmp
aam
nop
jmp
mov
(bad)
pop
mov
scas
shl
fidiv
call
or
ret
pop
loopne
int
xchg
ret
cmp
js
repnz
clc
loopne
(bad)
jae
daa
lods
sub
(bad)
jle
lahf
js
push
test
xor
push
(bad)
enter
cmp
adc
icebp
xlat
scas
pop
mov
fs
mov
loop
mov
scas
das
mov
inc
mov
xchg
jp
int
ror
inc
adc
stc
scas
mov
mov
or
test
add
cmps
jb
dec
mov
or
pop
jnp
fadd
push
je
in
dec
inc
push
push
jge
fwait
test
xchg
stos
push
push
shl
and
pop
inc
bound
test
cmp
stos
shl
(bad)
cmp
(bad)
shl
mul
sysret
ss
pop
lods
test
sub
mov
mov
inc
and
push
jg
add
or
loope
mov
fiadd
mov
sbb
stos
test
push
fwait
add
push
int3
loope
sti
or
cli
inc
push
gs
clc
(bad)
ror
pop
leave
jo
mov
lods
push
pushf
out
shl
or
out
push
cmp
mov
jo
in
xlat
mov
aad
mov
imul
push
mov
inc
lods
cmps
sbb
jno
into
sub
xchg
movs
mov
sub
retf
dec
hlt
arpl
push
mov
das
cwde
retf
sbb
test
loop
stos
jge
out
(bad)
pushf
push
ret
ds
sub
sub
adc
mov
pop
hlt
daa
or
retf
scas
movs
ror
and
ja
movs
pop
je
stos
mov
mov
daa
and
dec
fdiv
popa
arpl
rcr
cs
pop
fldenv
sbb
push
cmp
xor
bound
pop
int
jo
push
iret
clc
sti
jne
outs
push
daa
gs
std
jno
mov
call
jmp
or
cmps
push
imul
and
repz
(bad)
outs
sub
mov
imul
fs
ret
pop
add
repnz
xor
ret
pop
movs
test
lods
sbb
pushf
cmp
stos
add
imul
enter
test
and
jl
jae
aas
retf
jecxz
cmp
add
inc
loopne
stos
movs
test
(bad)
in
(bad)
sub
icebp
push
ins
mov
cmp
sbb
xor
sbb
cwde
daa
inc
aaa
jl
mov
mov
jo
xchg
xchg
fadd
push
ror
dec
sub
push
or
sub
mov
xchg
aaa
jg
push
into
ficom
fldcw
test
jge
outs
repz
jp
xchg
add
mov
enter
out
pop
push
pop
test
mov
push
cs
xchg
aaa
inc
add
xor
xchg
imul
ret
(bad)
xor
push
pop
add
in
test
adc
cmps
and
cwde
xchg
dec
add
fld
mov
push
pusha
and
or
dec
cmp
push
jo
je
into
jae
add
xchg
xor
arpl
fwait
mov
dec
test
mov
mov
data16
cli
leave
jmp
and
fsubr
push
fs
dec
sbb
ret
xor
xchg
sti
loop
cmp
fsubr
loopne
sub
mov
call
sub
fild
and
sbb
mov
fisub
inc
mov
imul
fwait
int3
iretw
pusha
xor
dec
stos
inc
sbb
pop
jae
jns
push
jle
push
fdivr
cmp
out
add
xchg
call
gs
movs
sbb
ss
test
adc
mov
adc
push
cmp
jns
dec
mov
stos
mov
test
rcl
imul
jecxz
mov
dec
xchg
lods
jne
adc
dec
test
sbb
or
inc
mov
jne
ucomiss
and
scas
outs
pop
je
(bad)
loop
retf
sub
(bad)
xor
sub
jb
stos
pop
sub
in
jge
imul
retf
cs
retf
imul
bound
rcl
xor
adc
add
int
cmp
test
sbb
mov
jo
mov
out
push
mov
sub
jo
repz
inc
mov
mov
xchg
pop
add
pop
xchg
(bad)
repnz
nop
push
scas
sbb
loopne
mov
out
test
fucomip
mov
pop
sub
lock
div
cmps
cmp
jne
int
cmp
inc
(bad)
jne
or
sub
inc
mov
or
inc
lea
sti
scas
lods
jno
and
xor
aam
jne
mov
mov
add
jecxz
jl
inc
or
inc
punpckldq
mov
ror
inc
clc
fwait
test
dec
and
push
mul
out
out
enter
sub
in
aaa
ficomp
fidiv
das
shr
fcmovb
inc
sbb
push
dec
ud1
(bad)
or
popa
push
pop
pop
in
fsub
pop
add
(bad)
or
xor
jno
jno
ds
jl
popa
add
inc
(bad)
lods
cld
in
sahf
push
or
xchg
out
sar
pop
sbb
or
push
mov
(bad)
sub
js
add
xchg
or
pop
les
scas
aas
call
mov
scas
scas
adc
pop
ret
call
add
or
pop
fmul
push
test
pusha
(bad)
ss
xchg
pop
jne
cmp
aaa
fld
adc
mov
aaa
inc
sub
retf
cmp
xchg
push
call
imul
jle
(bad)
push
or
cdq
sub
out
pop
pop
sbb
pop
xor
mov
mov
inc
out
scas
push
les
stos
test
(bad)
adc
mov
xchg
out
xchg
cmc
ud1
and
ins
mov
inc
mov
cmp
mov
test
cmps
or
cmp
cmps
xor
mov
scas
inc
xlat
out
gs
mov
jns
aaa
cmp
mov
and
jae
leave
push
dec
imul
dec
aad
jle
adc
and
mov
aad
cmp
jg
inc
fwait
sub
pop
cwde
push
icebp
xor
fidiv
or
push
mov
jmp
aaa
into
pusha
mov
cmp
xchg
into
mov
fisttp
push
fisub
(bad)
mov
cmc
ret
ins
std
dec
jmp
lahf
movs
shl
mov
jns
repnz
pop
(bad)
not
test
sub
icebp
add
pop
push
mov
jecxz
pushf
sub
push
(bad)
push
xchg
loope
mov
pop
inc
cs
imul
rol
out
outs
mov
pop
stos
fisub
push
sbb
test
lahf
stos
push
mov
fcomip
pop
(bad)
or
mov
shl
stos
retf
adc
adc
pop
fcomi
in
mov
and
fldcw
in
mov
sub
aam
push
mov
or
mov
mov
mov
rcl
(bad)
ret
cmps
std
jnp
jmp
inc
jecxz
sub
les
jmp
jno
xchg
rcr
movs
dec
push
mov
popf
rcr
adc
je
out
and
adc
mov
out
shr
nop
dec
or
add
or
mov
sbb
lahf
pop
xor
pop
pop
adc
or
cmc
mov
dec
(bad)
push
cmc
hlt
jle
fstp
pushf
and
cmc
push
mov
f2xm1
ror
ins
push
dec
(bad)
cmps
cmp
(bad)
lods
mov
xor
fcom
stc
cwde
int
lds
or
cwde
mov
mov
scas
add
push
sub
lods
movs
test
fcmovnbe
dec
aad
xchg
mov
cmps
bound
jo
das
and
int3
mov
jl
cmp
aam
xchg
test
cmp
cmps
das
popf
add
xchg
clc
je
push
test
imul
fnsave
and
and
dec
popf
push
test
std
add
mov
es
adc
sbb
or
out
int
aaa
aaa
push
jnp
test
inc
sub
pop
loope
adc
adc
mov
adc
cmp
in
aas
pop
push
or
fnsave
push
sub
adc
add
fistp
push
(bad)
lea
hlt
data16
addr16
aad
push
inc
lock
or
sub
test
mov
cmp
adc
add
cmps
test
cmp
sar
or
aam
sbb
push
add
repz
cmp
sbb
(bad)
lock
xor
cmp
adc
movs
sbb
sbb
call
call
or
repnz
push
jmp
ret
push
or
adc
rcr
(bad)
dec
mov
in
call
mov
adc
ins
je
out
push
test
mov
xor
or
pop
cmp
xchg
or
call
sub
movs
addr16
push
nop
mov
(bad)
lock
aad
and
daa
cld
and
xchg
push
jb
mov
mov
popa
inc
sbb
sbb
ja
adc
popa
pop
sub
retf
pop
test
mov
sbb
repz
cmps
gs
aaa
push
cmp
outs
add
or
repnz
fwait
push
adc
stos
lahf
add
jb
jecxz
icebp
mov
cdq
jecxz
lds
inc
call
jbe
jno
lods
cli
jbe
pop
jb
call
sub
inc
add
int
push
adc
mov
lds
cs
cmovb
in
addr16
xor
sahf
sub
sar
and
ins
cmp
adc
cdq
test
rcl
sahf
or
push
and
sbb
rol
xor
stc
or
ror
push
push
shl
pusha
mov
shr
or
mov
inc
movs
adc
and
dec
mov
cmps
jmp
dec
loope
jl
cli
xor
inc
pusha
stos
push
or
sbb
lock
std
in
scas
fcom
daa
inc
push
ss
aad
retf
(bad)
mov
imul
aas
add
xchg
retf
xor
cmp
or
mov
xor
jle
inc
outs
rol
jge
add
dec
adc
jp
pushf
xor
in
xchg
add
fs
das
data16
inc
cmp
sbb
jl
fmul
push
ss
sub
mov
das
stos
(bad)
xchg
bound
jne
inc
jno
jp
mov
imul
and
ins
call
jmp
fist
int
stos
mov
retf
fdiv
aad
es
add
dec
or
fwait
xor
cli
aaa
xchg
and
ins
and
and
dec
or
mov
gs
sbb
push
rcr
mov
inc
idiv
or
dec
jb
fcomp
push
or
pop
dec
loope
aas
fld
sub
jp
adc
nop
fimul
mov
int3
push
cwde
dec
inc
cmp
inc
scas
sub
rcl
popf
test
scas
add
or
cmp
hlt
shl
ja
sub
and
cmp
or
movs
test
inc
mov
(bad)
aad
int
ds
pop
mov
and
adc
and
push
cmps
es
jae
(bad)
les
jle
push
pop
call
pop
cld
or
jle
mov
es
or
lock
ret
lods
xrelease
mov
sub
inc
outs
add
fisub
rol
in
adc
lds
ss
xchg
jmp
dec
mov
bndldx
push
or
(bad)
mov
mov
icebp
mov
or
sar
outs
add
mov
cli
jae
lahf
mov
ret
test
dec
test
or
jbe
sub
push
add
push
jl
push
pop
pop
adc
pop
adc
in
cwde
dec
inc
mov
in
cmp
mov
cmp
mov
loope
add
mov
push
call
retf
xor
add
mov
std
add
loope
int3
es
inc
dec
sti
retf
retf
push
inc
out
std
int
adc
enter
arpl
aam
sahf
mov
pop
enter
(bad)
fisub
iret
jb
int
or
ds
cmps
ret
xchg
sahf
xchg
fnstsw
inc
adc
jecxz
rcr
test
enter
pop
and
dec
(bad)
shr
mov
sub
cmp
xchg
lahf
stc
adc
xor
or
dec
or
dec
add
cmps
data16
sub
ja
loop
push
ins
jmp
cmp
call
inc
out
inc
fisttp
pop
jb
daa
in
add
pusha
das
pop
dec
popa
in
outs
cmps
sub
das
mov
aam
or
adc
jb
jle
in
popa
ret
not
dec
mov
or
pop
in
loopne
cmps
dec
mov
push
nop
mov
aam
ret
loopne
retf
pop
adc
ret
dec
add
inc
call
mov
inc
adc
mov
ds
mov
add
push
or
push
clc
fsub
test
sbb
push
jo
clc
sbb
gs
aas
(bad)
ror
or
es
sbb
xchg
mov
add
clc
sbb
xor
into
pop
inc
mov
sbb
jp
mov
dec
neg
dec
lds
xor
dec
xor
ret
cmc
ror
jno
iret
push
adc
jno
sub
fcomip
std
mov
jbe
xor
pop
add
imul
(bad)
clc
js
mov
sub
add
mov
xchg
adc
int3
cmp
bound
jl
test
mov
cmp
retf
mov
push
out
(bad)
idiv
cmps
jl
test
ds
ficomp
xlat
xor
jmp
das
mov
(bad)
cli
jae
sub
inc
inc
or
test
xor
out
nop
sub
or
std
cmc
mov
sub
gs
ret
jns
pop
inc
lock
outs
jle
and
fs
mov
sbb
mov
xchg
in
movs
sbb
add
mov
adc
or
cmp
std
add
push
inc
retf
stos
js
cmp
push
imul
(bad)
leave
push
push
in
std
out
out
movs
mov
adc
xchg
jns
retf
push
push
push
mov
and
sbb
xchg
cmc
jae
adc
ins
pop
ds
xchg
aaa
fs
pushf
and
fsub
pop
add
cmp
or
mov
mov
dec
xor
push
or
mov
sbb
gs
imul
push
xor
lahf
mov
adc
ss
icebp
fwait
in
aam
push
rcr
call
mov
and
sti
and
mov
std
push
mov
jmp
push
push
sub
int
icebp
jle
mov
mov
cmps
pop
cmp
xlat
jo
mov
cs
cmp
sub
sahf
pusha
imul
add
push
jl
or
xor
xchg
sbb
mov
pop
adc
cmp
add
inc
js
in
adc
outs
jp
outs
test
(bad)
cs
daa
(bad)
cmp
(bad)
dec
push
lods
ins
lods
mov
pop
outs
leave
pop
sbb
call
stos
inc
pop
mov
movs
fdivr
push
aaa
mov
mov
cmps
repz
data16
dec
in
cmp
lods
adc
div
repnz
adc
mov
repz
inc
out
gs
mov
cli
cmp
sbb
mov
inc
cmp
and
inc
outs
adc
cmp
stos
push
enterw
ds
xlat
sbb
ror
inc
stos
push
jle
push
mov
mov
fstp
fidiv
dec
test
cmp
es
add
icebp
mov
das
push
dec
sbb
adc
xchg
xchg
jecxz
mov
std
fstp
mov
mov
and
out
icebp
inc
sbb
mov
pop
fwait
out
popa
mov
pop
fwait
inc
jmp
xlat
add
push
sub
std
sbb
ins
adc
xor
inc
clc
call
fmul
cmp
dec
call
mov
dec
rol
dec
mov
(bad)
jg
and
inc
adc
pop
bound
lahf
mov
es
or
fsub
push
pop
pop
jle
in
push
(bad)
jo
xchg
mov
jne
lods
dec
push
bound
inc
mov
ins
sub
pop
push
pop
retf
(bad)
fidivr
dec
lods
ret
adc
retf
(bad)
cmc
mov
cmp
out
xchg
lds
jmp
fs
mov
neg
fldlg2
pop
and
jmp
gs
fld
enter
mov
mov
(bad)
fbld
retf
fldcw
test
pop
mov
push
lea
mov
loopne
push
test
and
(bad)
call
movs
sub
out
pop
test
aas
mul
sbb
sub
push
inc
into
cmp
cmp
pop
dec
lods
xor
jbe
xor
jmp
icebp
test
arpl
push
enter
xchg
cwde
out
lods
je
(bad)
inc
scas
xchg
sbb
in
out
shl
mov
add
add
imul
leave
jle
enter
jns
cmp
jecxz
jbe
stos
pop
jl
ins
mul
push
in
pop
and
or
jp
mov
sub
stos
xchg
jmp
inc
das
and
dec
push
sub
xchg
adc
out
xchg
imul
push
xor
popa
xchg
pop
jg
aad
ins
sahf
cmps
pop
adc
rcr
mov
lahf
ficomp
sar
cli
stos
stc
neg
pop
and
mov
shl
or
out
(bad)
pop
loop
inc
nop
push
test
jecxz
or
stc
push
add
cmps
out
mov
push
push
enter
mov
mov
pop
dec
outs
mov
mov
add
outs
fcomp
adc
arpl
mov
xchg
cmps
lods
mov
retf
add
dec
mov
xor
and
mov
push
adc
inc
aad
ss
(bad)
dec
popf
pop
cmp
jb
stos
retf
and
dec
(bad)
fbld
sti
iret
xor
dec
pushf
mov
pop
cmp
in
pop
add
add
jg
dec
jl
pop
or
push
xor
imul
fmul
inc
aaa
cmc
loop
or
pop
or
inc
cmp
clc
lods
psadbw
xor
sub
mov
popf
cmp
or
fadd
inc
inc
and
mov
vcvtsi2ss
aaa
fadd
in
mov
stos
sbb
rsqrtps
adc
cmps
int3
xor
int3
fwait
into
sub
xchg
or
rcl
inc
sub
xchg
jno
fwait
adc
cdq
mov
loop
aad
xor
jle
imul
xor
out
push
add
dec
in
int
ds
adc
add
push
cmp
das
push
pop
ss
pop
mov
jecxz
(bad)
bound
ror
xor
out
out
test
ret
jge
push
jle
out
rcr
jg
into
jae
adc
fld
in
and
sub
mov
push
hlt
adc
inc
adc
pop
cmp
unpcklps
lahf
test
sbb
xchg
cmp
cmp
or
xchg
fwait
js
icebp
xchg
or
cli
out
inc
test
addr16
xchg
dec
adc
sbb
sbb
jmp
inc
dec
repnz
and
cmps
add
add
or
mov
(bad)
lahf
jno
leave
clc
jne
mov
jns
push
jnp
adc
ror
cs
add
cmp
cld
cmp
jbe
in
and
pushf
aad
fcom
lds
das
mov
ret
add
test
arpl
ss
inc
(bad)
test
push
inc
inc
xchg
imul
sbb
xchg
xor
lods
push
cmp
cmps
dec
xlat
xor
sbb
push
mov
cs
(bad)
push
lds
fsubr
inc
mov
bound
aas
outs
mov
in
das
mov
retf
xchg
inc
sub
jno
fcom
imul
(bad)
cmp
shl
cmp
mov
xchg
inc
pop
add
cmps
aam
xchg
cld
imul
jo
inc
loop
pop
das
jge
sti
out
mov
inc
pop
ss
in
inc
in
pop
(bad)
push
and
mov
mov
cmp
sbb
mov
xor
and
push
test
outs
mov
movs
in
mov
mov
movs
adc
inc
push
mov
outs
loope
(bad)
jle
retf
into
icebp
and
mov
cmp
mov
cwde
icebp
mov
aas
jmp
repz
add
ret
and
inc
ja
pop
js
leave
push
sti
mov
xor
loopne
shl
pop
(bad)
cmps
adc
enter
loope
sbb
dec
dec
sub
stos
mov
shl
scas
scas
gs
fs
mov
cmp
sub
mov
lods
push
pushf
cmps
push
cmp
daa
jo
out
movs
arpl
sub
out
call
dec
pop
(bad)
mov
and
rcl
sti
ja
and
cmc
mov
fild
pop
nop
adc
fild
sub
jge
retf
addr16
lds
aas
add
pop
cmp
or
test
ins
(bad)
je
push
pop
cdq
fucom
add
fwait
mov
pop
mov
jno
in
pop
fdivrp
cli
jbe
jbe
inc
sbb
aas
add
(bad)
jbe
sub
jns
pop
xor
fidivr
and
popa
xchg
stos
and
jnp
loop
stc
push
fld
sbb
mov
jmp
sub
ja
daa
push
fstp
in
push
call
rcr
cdq
mov
rol
xchg
mov
(bad)
jne
out
mov
push
shl
iret
pop
pop
fcmove
out
jae
mul
out
pop
and
in
inc
enter
and
lea
or
cmp
xlat
test
aam
aaa
pop
mov
es
mov
ficomp
ins
loop
xlat
mov
cmp
arpl
jp
cmp
or
iret
fist
fimul
jmp
sub
lods
movs
mov
jae
mov
test
and
in
mov
je
or
repz
inc
pop
sbb
fnstenv
pop
ret
add
popa
(bad)
xor
lock
dec
dec
mov
push
xor
or
popf
cmp
cmp
dec
and
push
push
xor
(bad)
(bad)
outs
push
movs
lods
ja
mov
push
stos
(bad)
movs
cs
dec
mov
fwait
push
(bad)
jecxz
imul
cmps
pop
push
pop
add
movs
xchg
call
dec
mov
xor
hlt
ds
loop
out
mov
(bad)
not
in
push
xchg
sub
lea
sbb
pusha
ins
add
xor
push
in
aaa
add
push
movs
mov
push
cmp
and
mov
jne
repnz
mov
mov
jg
(bad)
mov
jle
mov
mov
pop
loope
stos
dec
mov
rcr
popf
test
iret
xchg
jnp
add
mov
cmp
mov
inc
mov
xchg
retf
ins
jle
xlat
jmp
jg
retf
pop
cmps
jnp
outs
out
fmul
ror
mov
mov
lea
in
retf
pop
daa
and
cwde
mov
ds
fild
jns
jnp
sbb
pop
nop
cmp
sub
xchg
aam
mov
out
xchg
aas
dec
mov
xchg
cmp
and
push
mov
add
mov
imul
aam
shl
lock
jmp
cmp
ret
sbb
xor
ins
test
mov
dec
pop
mov
sbb
xor
mov
inc
xchg
xlat
lock
call
cdq
xor
mov
mov
jne
jmp
xor
imul
and
dec
pusha
cmp
pop
daa
fsub
(bad)
dec
lds
out
jg
lods
and
mov
add
scas
lock
sub
out
popa
ins
popf
xchg
inc
mov
add
addr16
imul
and
pop
add
pop
xchg
mul
test
mov
or
call
jb
fisttp
mov
stc
adc
ins
rcr
jmp
(bad)
rcl
mov
add
enter
into
loopne
xchg
pop
push
out
pop
sbb
mov
cmp
sub
enter
fs
nop
adc
test
jg
mov
cmp
xchg
pop
movs
out
shl
xchg
movs
xchg
in
pop
mov
push
mov
jmp
push
in
aaa
add
lahf
jecxz
loop
push
cld
ret
js
and
cmps
mov
dec
mov
xor
ja
dec
xchg
loope
adc
call
rcr
xor
xor
aaa
test
lods
adc
xchg
leave
cmp
mul
jmp
test
pop
leave
xor
out
dec
inc
sub
lods
adc
and
(bad)
pop
idiv
leave
out
push
int3
je
cld
outs
and
dec
fcomp
jo
cmp
inc
jae
xchg
mov
xchg
inc
mov
imul
das
movs
dec
mov
test
xor
test
dec
es
pop
mov
js
sub
aad
into
mov
mov
xchg
cmp
ret
jecxz
je
test
jo
jmp
pop
adc
aaa
xchg
xor
daa
adc
add
cmp
sbb
retf
in
push
int3
inc
fs
mov
mov
imul
mov
sub
sub
std
test
test
push
push
sbb
das
mul
sbb
push
jg
dec
push
push
fist
mov
lea
mov
call
cmp
cmps
int3
sar
xchg
mov
ret
(bad)
jmp
add
fsubr
pop
fsincos
stos
in
stc
jbe
int3
int3
cmp
pushf
pusha
pop
xchg
and
or
or
or
xchg
lahf
jecxz
(bad)
fisub
push
or
push
xor
or
pop
sub
cmps
sbb
int3
in
imul
jmp
sbb
fucom
push
and
in
mov
in
fdiv
out
retf
fst
dec
stos
in
adc
leave
mov
push
mov
sub
in
jecxz
ret
shl
sbb
lods
in
or
mov
jmp
imul
pusha
push
mov
xchg
rol
mov
or
pop
imul
inc
nop
xor
inc
mov
adc
pop
outs
ret
mov
jp
or
fwait
inc
scas
popa
stos
sub
push
cmp
pushf
nop
and
(bad)
fld
retf
enter
into
test
push
jg
int3
push
push
fisubr
xor
sbb
out
bound
xchg
mov
mov
lods
or
xor
repz
jp
shl
cmp
cmps
sbb
mov
pop
ffree
push
into
sub
dec
lods
or
mov
jg
inc
jecxz
add
and
hlt
pop
sub
(bad)
cmp
jmp
repnz
mov
ja
fdiv
nop
enter
sub
cwde
ror
xchg
loopne
rcl
repz
std
stos
push
iret
imul
push
fwait
sbb
jmp
(bad)
add
shr
outs
lods
lahf
xchg
jge
stos
pop
dec
xor
icebp
or
cld
retf
sub
es
mov
daa
or
pop
jp
popa
lods
xchg
addr16
cmc
adc
arpl
test
stos
popf
push
jne
xor
test
pop
(bad)
xor
es
and
mov
mov
and
or
xor
xchg
pop
adc
adc
cdq
xor
xor
cli
call
xchg
xchg
fisttp
sub
xor
mov
mov
jnp
movs
and
mov
xchg
scas
call
mov
jp
mov
movs
mov
and
(bad)
lods
imul
push
sub
push
add
fcom
test
mov
jle
push
cmps
clc
mov
jle
inc
adc
loope
xchg
dec
mov
or
lahf
inc
jae
aas
out
jae
mov
sub
stc
outs
mov
int
mov
stos
jno
int
popf
xlat
mov
or
call
mov
repz
stos
inc
dec
popa
pop
push
clc
fwait
xchg
ret
mov
and
mov
sti
cmp
ds
mov
cs
sbb
iret
push
xchg
xor
aad
pop
xchg
(bad)
retf
pop
mov
mov
cmps
mov
xchg
js
and
arpl
xor
or
leave
mov
xor
cmc
inc
pop
clc
dec
int3
sub
xor
popf
mov
adc
mov
pop
sbb
pusha
mov
mov
cmp
inc
sbb
mov
dec
push
ret
xchg
arpl
sub
and
sub
cmp
pop
jne
shr
repz
lock
cmps
cdq
sbb
shl
ret
les
adc
dec
push
lahf
adc
popf
je
pusha
bound
mov
scas
cli
adc
aad
lods
xlat
ret
imul
pop
scas
or
sub
ja
xor
(bad)
rcr
hlt
xor
adc
push
ins
jne
in
sub
fdivr
push
cs
adc
mov
xlat
jo
popa
jl
(bad)
mov
push
xchg
jl
or
out
xchg
int3
jmp
mov
aaa
xchg
je
clc
mov
push
out
and
mov
(bad)
(bad)
add
imul
lods
add
pop
lock
dec
add
push
test
lods
pusha
sbb
mov
mov
mov
push
push
f2xm1
mov
cmp
and
fadd
movs
or
xchg
pop
adc
mov
aam
sahf
mov
fs
not
rcl
shl
jb
sti
sub
pop
adc
mov
and
test
inc
or
outs
pop
enter
(bad)
mov
into
mov
out
ds
pop
jbe
adc
mov
hlt
xor
or
inc
daa
hlt
arpl
lds
add
jp
jmp
cmp
push
pop
jmp
ds
mov
mov
jp
das
mov
jp
retf
jge
imul
mov
xchg
mov
jge
in
pop
popa
sub
mov
aam
inc
loopne
pop
jmp
jg
jns
xchg
test
nop
jnp
out
mov
mov
mov
out
push
int
or
or
mov
rol
lods
lods
mov
les
mov
repnz
scas
fld
das
pop
bnd
push
lods
pop
push
push
je
adc
jns
jno
repz
xor
adc
pop
mov
xchg
fbld
xchg
mov
cmc
(bad)
add
add
add
fadd
repnz
ins
add
cdq
mov
mov
sbb
gs
inc
sti
inc
imul
(bad)
hlt
mov
sahf
daa
add
out
retf
cdq
nop
cmp
loopne
int3
add
rol
inc
mov
out
les
push
mov
pop
sbb
and
add
icebp
test
xor
xchg
movs
xchg
and
xor
ret
scas
and
mov
dec
sbb
pop
cld
fisub
mov
mov
daa
stc
or
aaa
push
push
pop
in
mov
outs
sbb
leave
mov
mov
cmp
adc
outs
out
je
outs
adc
add
mov
inc
retf
leave
push
xchg
jb
sbb
retf
es
adc
pusha
adc
cmp
sar
mov
aad
movs
ja
and
pop
sbb
cdq
into
push
mov
mov
cli
cmc
adc
pop
sub
ss
cld
in
loopne
xchg
inc
push
loop
mov
mov
xor
rcr
pusha
sub
adc
push
rcl
out
stc
cmp
ficomp
dec
(bad)
movs
js
push
addr16
mov
shl
pop
fwait
sub
jmp
jno
jne
mov
outs
or
inc
push
jb
adc
mov
cmp
pop
call
lods
(bad)
leave
scas
sahf
int
cmp
mov
ret
adc
(bad)
mov
push
loope
leave
or
inc
dec
inc
aaa
adc
iret
push
dec
pop
fbld
mov
pop
stc
pop
mov
scas
xchg
pop
or
std
sbb
fadd
in
adc
stc
adc
nop
das
jp
dec
aad
movs
scas
loopne
adc
pop
std
and
sbb
sbb
sub
js
jbe
push
aaa
mov
(bad)
xchg
(bad)
add
inc
sub
xor
pushf
inc
pushf
fld
xor
jo
movs
pop
mov
sbb
rcl
push
es
ins
imul
outs
fbstp
dec
cdq
cmp
xchg
mov
pop
das
fmul
cmc
mov
jnp
dec
scas
mov
cmp
jb
inc
or
inc
rcl
inc
add
and
outs
sar
push
rol
aam
or
ret
dec
movs
jo
mov
mov
movs
scas
sbb
or
and
call
mov
adc
imul
mov
adc
mov
push
fxch
cmps
shl
jge
inc
ror
(bad)
dec
sbb
adc
pop
sbb
hlt
sahf
in
xor
sub
sub
add
pop
adc
dec
jp
ja
jbe
mov
and
add
loope
(bad)
rcl
dec
inc
dec
mov
jno
es
lods
stos
adc
aas
sub
dec
mov
out
aad
mov
push
out
mov
jnp
repnz
inc
lea
xor
inc
pop
push
jl
test
mov
mov
cmp
ror
aad
leave
and
dec
and
cli
push
mov
mov
arpl
ja
fst
xchg
cld
or
(bad)
push
sbb
sar
fucomp
and
cmp
fs
sahf
adc
aaa
and
(bad)
jnp
push
jae
div
stos
loop
sub
inc
mov
clc
pop
adc
jb
mov
in
jmp
pop
fst
out
sub
add
int3
in
jbe
iret
xor
xchg
dec
rcr
into
or
mov
cs
mov
mov
pop
les
add
sti
icebp
outs
xchg
js
dec
push
mov
cld
adc
cmp
stc
ins
push
cmp
xor
out
hlt
fld
add
scas
adc
test
fisttp
jo
dec
xchg
inc
ret
pop
and
sub
popa
shl
mov
mul
or
pusha
rcr
lahf
int
mov
push
cmp
mov
data16
arpl
icebp
push
adc
xchg
adc
popa
(bad)
jns
popf
or
out
arpl
fldcw
xchg
cdq
test
loope
mov
addr16
mov
sub
sub
adc
dec
sbb
push
out
ins
sbb
push
xor
mov
rcl
call
mov
popf
pop
mov
sub
(bad)
cdq
and
sbb
adc
push
jle
retf
mov
test
mov
movs
sbb
cdq
adc
lods
stos
or
aam
idiv
imul
pushf
neg
mov
mov
icebp
jle
stos
cmp
inc
pop
xchg
inc
inc
outs
mov
pusha
ins
ja
jmp
inc
add
xchg
mov
movs
daa
stc
and
inc
mov
outs
cmp
ret
in
xchg
test
sub
ins
(bad)
xchg
inc
xchg
aas
(bad)
push
xchg
cli
push
add
pop
leave
cmp
xor
mov
rcr
sbb
pushf
push
pop
adc
mov
mov
call
(bad)
das
adc
mov
pop
neg
adc
sbb
pusha
add
xchg
add
lods
sbb
pushf
stos
cdq
ds
repz
xor
xchg
pop
adc
mov
cmps
sub
test
ss
ret
pop
inc
ds
std
ss
add
(bad)
stos
inc
jle
popa
and
and
mov
ins
pop
lods
jp
retf
xor
add
or
repz
movs
movs
adc
jbe
int3
push
cmp
and
loopne
repz
neg
popa
stc
in
(bad)
sbb
daa
inc
movs
cld
xor
hlt
push
imul
cli
jns
or
jge
mov
js
jnp
fnstsw
mov
cmp
mov
mov
push
in
mov
pop
ret
aas
data16
push
stos
jns
inc
cmp
cdq
xor
retf
pop
aam
test
aad
lock
and
push
hlt
inc
jle
adc
ins
push
test
in
lds
xchg
aaa
loope
movs
in
mov
xor
test
call
mov
adc
sar
push
add
push
xchg
add
and
inc
inc
jns
sub
cmp
sti
sub
push
inc
jmp
mov
or
adc
fimul
sahf
or
ror
dec
repnz
aam
cs
jb
nop
into
(bad)
mov
aad
mov
mov
pop
pop
(bad)
in
cli
in
loopne
xor
pop
cmps
mov
ror
(bad)
into
scas
xor
adc
dec
scas
arpl
mov
addr16
enter
enter
rep
mov
mov
enter
push
pop
cmps
or
pop
scas
shr
xor
pusha
test
hlt
(bad)
dec
mov
jnp
enter
rcl
inc
sbb
mov
cwde
fadd
push
mov
jnp
shr
mov
inc
inc
dec
cld
inc
add
loope
sbb
fidiv
push
ds
xchg
add
xor
jae
aaa
in
pusha
in
and
adc
dec
dec
mov
xor
add
enter
push
outs
and
adc
(bad)
push
xchg
pop
dec
in
push
push
adc
jmp
sahf
outs
xchg
imul
add
test
psadbw
jb
je
sub
jmp
mul
fld
pop
cmp
inc
addr16
xchg
mov
movs
dec
test
in
xchg
loope
mov
mov
mov
jmp
cmp
test
mov
je
xlat
(bad)
outs
pop
add
adc
ficom
into
or
or
xchg
mov
in
sbb
or
mov
fnstcw
mov
call
xlat
xor
call
mov
jg
xchg
not
in
ds
sub
scas
mov
fs
cmps
mov
adc
sbb
sbb
lock
or
xchg
jmp
mul
scas
cmps
mov
icebp
push
mov
add
or
sbb
(bad)
cmp
or
in
mov
(bad)
push
or
cmp
adc
dec
mov
bnd
aad
out
mov
sub
dec
sar
jae
sub
lea
pop
dec
int3
fist
adc
xor
mov
jg
jb
idiv
jbe
mov
(bad)
inc
xchg
ror
shr
ins
add
xchg
jb
and
fcomi
repz
lea
jg
xlat
push
repnz
cmp
loopne
cmps
test
sub
push
lock
xor
push
jp
push
and
adc
mov
icebp
mov
out
inc
mov
pusha
cmp
jge
mov
mov
sub
fist
dec
repz
retf
(bad)
cmc
xchg
outs
lock
push
arpl
cmp
(bad)
push
pop
inc
(bad)
out
cs
cmp
outs
and
sbb
fisttp
push
ds
call
xchg
push
push
(bad)
mov
fdiv
pop
pop
adc
inc
int
or
scas
mov
stos
adc
gs
jmp
call
add
jl
jg
xchg
imul
adc
pop
scas
mov
gs
push
dec
or
adc
mov
push
dec
mov
sub
or
repz
push
pop
mov
cmps
adc
sbb
lahf
pop
mov
dec
adc
pop
call
pop
add
and
dec
push
xchg
push
inc
clc
out
aam
test
mov
fisttp
cmp
shr
arpl
mov
cmp
sub
pop
mov
adc
sub
jl
cmp
lock
dec
pushf
jl
sbb
cli
cmp
pop
mov
out
sub
sbb
nop
outs
out
jecxz
fdivr
xchg
(bad)
dec
dec
jmp
ficomp
add
int3
cdq
jnp
pop
lahf
pusha
xor
push
cli
dec
lahf
jne
aam
(bad)
(bad)
sbb
pop
xchg
add
add
test
inc
stos
sub
inc
scas
int
push
enter
scas
add
outs
clc
aad
add
sbb
or
mov
or
pop
mov
aad
push
retf
mov
pop
mov
and
inc
mov
ds
jmp
lea
fild
add
out
sub
push
fstp
jl
sub
arpl
cwde
fdivp
or
mov
hlt
xlat
test
push
add
retf
fs
mov
and
jns
mov
hlt
xlat
sub
jae
cs
fstp
adc
pop
aad
jg
and
adc
outs
aam
jne
cmp
sub
arpl
fld
mov
call
fimul
xchg
dec
mov
sbb
imul
movs
scas
sbb
pusha
ret
mov
pop
adc
cmp
xor
or
icebp
dec
fadd
retf
pop
add
dec
inc
test
xchg
sbb
outs
mov
mov
pop
out
jecxz
add
inc
outs
scas
cld
test
cli
or
ret
and
adc
jmp
aaa
repz
jge
(bad)
xchg
mov
cld
int
stos
inc
adc
(bad)
je
jmp
ss
in
mov
fmul
adc
jmp
stc
cwde
dec
lds
fistp
sub
xchg
sbb
ror
loop
call
xchg
and
sahf
push
dec
cmp
jecxz
outs
loope
sub
mov
into
jno
pop
xor
jbe
add
mov
push
shl
add
xchg
ror
(bad)
xchg
call
cmp
retf
(bad)
enter
fs
mov
push
jecxz
or
scas
mov
in
mov
sub
fs
icebp
pop
xchg
daa
lea
mov
or
cmp
push
arpl
aad
data16
mov
pop
cmp
sub
outs
inc
cli
sbb
repz
addr16
sahf
stos
xor
xchg
sub
lock
ins
and
ja
es
(bad)
popa
pop
into
outs
aas
cdq
psubusb
push
sbb
xchg
loope
inc
sar
and
stos
out
mov
jmp
mov
mov
icebp
dec
inc
(bad)
cmp
pop
fcom
mov
mov
fbstp
add
jmp
mov
data16
mov
sbb
sbb
dec
dec
mov
and
mov
mov
dec
mov
retf
aad
(bad)
(bad)
lods
xchg
or
push
add
ficom
and
imul
jae
mov
test
push
push
jg
jge
and
(bad)
rcr
or
std
test
push
mov
into
movs
pop
loopne
adc
(bad)
mov
lock
and
pop
xchg
out
inc
hlt
jmp
ins
sbb
mov
jno
enter
sub
and
jns
push
out
test
dec
pop
jnp
or
dec
jmp
and
xchg
sub
movs
push
mov
xchg
std
pop
addr16
fidivr
(bad)
mov
rcr
pop
mov
cmps
lds
shl
pushf
je
jmp
cmp
hlt
dec
sub
cmp
jns
in
xor
test
lods
add
scas
or
jge
popa
iret
inc
stos
(bad)
std
retf
in
mov
and
jg
jmp
repz
iret
inc
mov
div
dec
fisttp
inc
loopne
mov
mov
call
test
int3
ss
push
xor
(bad)
cmp
xchg
mov
xor
ret
fstp
pop
xor
push
shr
rol
inc
sbb
stos
popa
dec
ds
pushf
ins
jl
ja
push
cmp
inc
xlat
mov
xchg
lods
das
sbb
bnd
mov
mov
sbb
mov
xchg
js
jnp
cs
dec
frndint
cwde
dec
sub
rol
cdq
imul
int3
jo
into
sbb
xor
adc
sahf
pop
ret
dec
or
push
enter
mov
mov
scas
je
dec
jns
xchg
fld
ret
mov
pop
nop
mov
addr16
push
lahf
lods
pop
inc
xchg
pop
stos
fs
retf
mov
lods
mov
dec
mov
and
mov
sbb
ja
adc
xchg
add
lahf
xchg
(bad)
sub
and
mov
lods
mov
dec
adc
aad
mov
out
push
call
mov
and
inc
mov
adc
push
jbe
test
push
imul
mov
ror
inc
dec
and
ds
cmps
sbb
loope
test
jp
ins
cdq
xor
adc
jge
movs
inc
adc
ret
(bad)
sbb
inc
in
mov
inc
push
push
mov
mov
sbb
les
push
ds
dec
add
xor
std
mov
gs
cli
xchg
daa
or
xor
loop
push
jno
dec
into
lea
and
rol
cmps
inc
add
xchg
outs
xchg
mov
inc
xor
adc
out
or
adc
push
aad
push
data16
mov
push
xor
jne
lahf
les
add
jnp
adc
cmp
inc
jno
inc
test
cmp
ret
or
das
cmp
loope
jmp
test
push
push
xor
pop
outs
cld
mov
jbe
clc
adc
mov
mov
out
dec
fsubr
je
and
sbb
add
fld
mov
xchg
(bad)
push
fimul
fmul
mov
cmp
addr16
xchg
arpl
not
sub
dec
sahf
or
aam
popa
xor
mov
fsubr
repnz
cmp
mov
jl
adc
mov
inc
adc
mov
test
int3
popf
pop
pop
sub
ds
add
sbb
xchg
movs
mov
pusha
push
push
sti
arpl
sbb
push
xor
push
ss
pusha
mov
pop
into
dec
(bad)
mov
or
pop
add
add
jbe
and
xor
lea
daa
dec
ds
xchg
int3
mov
sbb
push
cmp
(bad)
mov
sub
stc
(bad)
xchg
and
xlat
pop
(bad)
jge
xchg
imul
in
xor
out
pop
cmps
cmp
call
ins
clc
lods
repz
jno
retf
xor
add
adc
sub
push
retf
mov
(bad)
fadd
mov
lds
pop
fld
mov
out
pop
iret
fs
jp
test
rcl
imul
fiadd
mov
(bad)
faddp
out
icebp
jmp
rcl
push
adc
mov
rcpps
scas
movs
mov
addr16
pop
dec
scas
sbb
into
das
std
adc
and
loope
call
stc
cwde
inc
ins
leave
or
sbb
clc
inc
call
test
mov
dec
pop
ror
mov
xor
jp
repz
jnp
or
imul
jg
ret
push
lods
rcr
push
mov
stc
pop
or
cmp
push
push
mov
pop
push
sahf
call
cmps
pop
inc
adc
sbb
imul
jge
xor
mov
xchg
push
stos
sub
test
add
add
ja
lods
xchg
xor
in
retf
scas
scas
ins
cmp
and
push
and
xchg
pop
dec
std
iret
das
packssdw
inc
out
jmp
xor
cli
dec
sub
jae
add
mov
cmc
pop
lock
pop
pop
loopne
jmp
ins
addr16
push
xchg
mov
(bad)
js
lea
push
mov
out
movs
inc
rcl
add
or
cmps
enter
cmc
cmp
in
jns
fcom
cmc
test
mov
jmp
or
fwait
into
cmp
xchg
(bad)
cmp
cmc
pop
jo
dec
arpl
ins
sbb
mov
scas
outs
sbb
clc
popa
aas
cmc
pop
clc
les
cmp
(bad)
enter
ja
xor
push
in
mov
aas
push
mov
mov
pop
jnp
bound
sub
(bad)
cs
sar
adc
add
test
sbb
movs
not
std
push
cmp
cs
ds
loopne
jmp
cmps
in
inc
ror
hlt
daa
sub
pop
push
adc
js
mov
sub
mov
fdivrp
inc
fcomp
int3
rol
mov
stos
adc
push
mov
push
xchg
cmp
dec
lds
jae
in
adc
pop
cld
mov
xor
mov
mov
mov
xchg
shr
es
cs
fucomi
jle
pop
outs
out
sub
fist
xchg
sub
xor
out
mov
jnp
mov
fwait
out
inc
xor
shl
sbb
aad
xor
and
mov
push
adc
dec
test
push
fsub
mov
ins
nop
test
xchg
push
outs
pop
xor
(bad)
stc
lds
jmp
pop
fs
adc
cmp
cwde
dec
fist
les
jnp
jge
imul
push
inc
xchg
cmc
dec
push
sar
jb
push
cmp
fstp
jne
leave
xor
sub
push
in
outs
push
xchg
inc
lods
xor
pop
or
sbb
mov
push
movs
mov
pop
pop
mov
cmps
mov
movs
dec
mov
test
and
(bad)
cmp
out
sbb
fcom
adc
xor
jmp
pop
fdivr
sub
cld
test
out
pop
aaa
ss
inc
mov
inc
fs
dec
sbb
outs
jg
into
and
and
out
push
mov
retf
loope
or
loopne
das
sub
inc
pop
mov
push
or
pushf
lahf
imul
sub
gs
mov
fstp
sbb
ins
inc
pop
or
adc
inc
movs
iret
jmp
loop
fnstenv
popa
xchg
shl
sub
push
jecxz
or
sub
fstp
(bad)
jl
push
mov
test
addr16
mov
ds
les
addr16
cmp
gs
inc
es
sub
adc
jno
sub
mov
add
cmps
pop
ds
xchg
mov
lahf
inc
sti
cmp
dec
fdivr
or
rsqrtps
psubq
add
pop
sub
and
jns
inc
xchg
jp
ret
test
jp
adc
xor
cmp
xchg
inc
out
(bad)
stos
adc
pusha
aas
icebp
loop
cdq
ins
popa
dec
in
cmp
mov
dec
mov
shl
mov
xor
adc
pop
hlt
xor
mov
mov
mov
sub
jl
inc
push
mov
sub
test
inc
ret
shl
das
test
sub
cli
dec
scas
or
dec
(bad)
push
mov
loop
lock
mov
enter
sub
and
xchg
xor
cmp
adc
inc
jnp
and
sub
ins
mov
aam
ins
ins
cmps
arpl
jle
push
pop
cmp
adc
dec
test
out
pop
xchg
jnp
xchg
fincstp
mov
test
pop
out
sub
sub
stos
add
xchg
in
inc
hlt
pop
(bad)
cmp
push
stc
sub
aad
dec
jl
pop
cmp
popf
stos
pop
pop
imul
sti
lea
test
push
push
ret
or
mov
cdq
into
mov
popa
cli
lods
push
push
dec
(bad)
outs
adc
jp
xchg
sti
pop
movs
adc
int
xchg
lock
push
mov
pop
push
or
dec
loope
sub
enter
pusha
add
clc
cmp
pop
fnsave
sub
scas
cmps
mov
into
jge
mov
dec
test
cs
int3
add
lds
add
mov
dec
test
(bad)
int3
fsub
jge
jo
jecxz
shr
dec
les
(bad)
call
cmp
and
fld
xor
mov
mov
pop
fs
mov
mov
sbb
jbe
(bad)
retf
jb
dec
cli
addr16
sbb
rcr
sub
shl
imul
fs
fmul
mov
(bad)
retf
push
add
das
mov
mov
sbb
push
std
jp
enter
add
mov
mov
lock
inc
push
add
cmps
lds
int
leave
push
xchg
inc
xchg
dec
cmp
mov
add
stos
lock
cmc
cmp
int3
in
sub
retf
jge
in
in
xor
sbb
mov
sub
sbb
adc
xchg
fwait
cmp
fidiv
inc
cdq
xor
adc
sbb
mov
in
mov
mov
jmp
xor
sahf
jo
les
jae
scas
sub
cmp
cmp
xlat
dec
and
fst
call
ss
in
xchg
mov
test
add
pop
sbb
ror
leave
call
add
jge
sub
loopne
adc
sub
(bad)
icebp
shl
mov
cmps
xchg
test
cmp
fidivr
mov
dec
add
jno
arpl
sub
cmp
int3
cmp
add
or
pop
lock
inc
loopne
out
jp
loope
pop
and
cwde
mov
gs
sti
jne
into
xchg
push
js
cld
push
jle
cmp
gs
pop
mov
xchg
jnp
stc
les
(bad)
push
sbb
xor
jmp
rcr
push
adc
addr16
add
repz
sbb
dec
movzx
inc
je
fmul
out
adc
ins
pop
mov
shl
pop
cmp
xchg
mov
pop
fistp
sbb
out
out
inc
mov
push
push
call
jo
xchg
sub
call
and
popf
mov
into
pop
mov
add
ds
(bad)
movs
mov
test
cmps
sbb
addr16
xchg
(bad)
adc
push
arpl
mov
jge
xchg
inc
pop
cmc
clc
int3
popf
enter
or
lds
mov
jl
mov
je
push
clc
ins
cmps
cmp
icebp
mov
ds
pop
stos
shr
pop
push
sbb
push
mov
cdq
mov
mov
lahf
mov
into
loop
in
sahf
cld
aam
mov
jge
xchg
fs
cld
(bad)
adc
lahf
in
adc
or
repnz
sub
jo
pop
call
fild
add
sub
push
movs
out
clc
jo
retf
icebp
scas
sbb
dec
xor
xchg
xor
ja
mov
sub
call
inc
sbb
pop
ja
and
(bad)
retf
inc
(bad)
bound
inc
cmps
popa
daa
test
cmp
cli
es
call
lods
retf
xchg
addr16
mov
mov
out
lods
push
ja
test
cmp
xor
sbb
mov
mov
mov
or
nop
jmp
jp
je
sub
mov
push
jns
loope
out
lea
in
dec
shr
adc
xchg
cmp
xchg
mov
les
add
sub
lea
xor
bnd
lods
ds
or
mov
pop
aad
mov
pop
lock
push
or
movs
jmp
pop
mov
mov
leave
fwait
mov
loopne
xor
icebp
dec
add
lods
adc
mov
in
cmp
push
xchg
(bad)
mov
dec
idiv
mov
fbld
int
dec
jl
fcom
inc
push
cmp
scas
or
push
mov
pop
and
pop
mov
sbb
lds
cmc
push
icebp
push
mov
mov
push
scas
cmp
inc
sbb
in
arpl
into
in
test
(bad)
cmp
xchg
xchg
cmps
dec
adc
and
mov
add
fucomp
sub
dec
inc
ja
arpl
mov
test
pusha
adc
out
inc
cdq
idiv
clc
jl
cmp
shl
add
jmp
add
jmp
xlat
cli
mov
aam
(bad)
xchg
dec
dec
cmps
pop
stos
les
push
pushf
pop
retf
inc
mov
daa
xlat
xchg
fimul
(bad)
mov
scas
adc
ret
repnz
mov
jp
inc
leave
or
ficomp
mov
imul
scas
fldenv
into
mov
hlt
mov
and
rol
sbb
outs
inc
int3
shr
push
dec
popa
inc
xor
out
dec
inc
out
shr
jae
or
in
fadd
ror
xchg
lea
add
cmp
or
popf
sti
add
dec
dec
or
push
mov
dec
mov
push
mov
sbb
add
mov
dec
jg
mov
xlat
dec
sbb
and
fcom
mov
fisub
test
aam
loope
adc
popa
stc
leave
sub
mov
cld
cmp
xor
add
jbe
ins
test
and
sub
gs
shr
dec
mov
cmps
jle
je
out
adc
mov
cmps
jb
inc
mov
mov
jmp
xchg
xor
xchg
sub
in
(bad)
pop
and
add
sbb
shr
jle
out
stos
sub
xor
xchg
outs
repnz
add
mov
or
jge
loopne
jae
movs
cmp
(bad)
mov
movs
or
lods
popf
cli
mov
in
cmc
or
loopne
loopne
push
stc
in
or
or
and
xor
ja
fcmovnbe
xchg
(bad)
aam
add
fcmove
xor
out
sahf
jne
(bad)
jle
sbb
inc
pusha
mov
xor
cld
add
clc
sbb
mov
ds
gs
jne
mov
xchg
popa
push
outs
adc
inc
add
xchg
imul
clc
fsub
dec
test
stos
add
push
es
jo
sar
fcom
mov
fcomp
pop
cmp
mov
js
inc
inc
addr16
xor
and
test
int
xchg
mov
jae
xor
std
cli
shl
push
repz
xor
add
addr16
aaa
es
push
mov
sub
mov
mov
mov
inc
mov
fidivr
mov
mov
les
pop
fidiv
outs
pop
leave
cli
imul
pop
mov
jge
outs
or
icebp
sbb
and
repnz
push
push
xchg
cli
inc
jecxz
icebp
dec
sub
inc
adc
dec
int3
and
push
in
lods
or
data16
fwait
int3
dec
cmps
outs
xchg
xor
xlat
pop
jne
fnsave
push
xor
out
dec
sbb
icebp
movs
and
mov
xchg
sub
push
shl
test
les
add
rcr
not
mov
stos
loopne
movs
push
bound
pop
sahf
sti
pop
(bad)
mov
imul
jge
push
leave
mov
cwde
bound
inc
mov
sub
rol
pop
adc
icebp
enter
movs
xchg
mov
dec
rcr
pop
dec
xchg
(bad)
scas
mov
lock
or
sub
inc
xor
outs
iret
add
push
cli
cmp
nop
call
test
sub
mov
popa
ins
ret
fadd
and
test
pop
outs
in
mov
rcr
xor
popf
jo
movs
aad
lea
push
dec
sbb
push
cmp
xchg
mov
add
fcom
jecxz
test
dec
push
int3
mov
test
retf
pushf
xchg
and
mov
call
test
dec
arpl
std
mov
test
jb
int3
test
push
add
sub
sbb
dec
mov
lock
push
rol
ins
mov
hlt
cmps
out
mov
inc
dec
cmps
loopne
sub
fldenv
fiadd
movzx
inc
pop
sar
out
sti
sub
push
paddw
push
sub
push
jmp
mov
jg
push
mov
fadd
and
fcomp
das
ds
shr
cmps
or
shl
mov
xor
mov
clc
movs
mov
mov
imul
dec
movs
push
cmp
push
mov
inc
sub
mov
cmp
jne
fiadd
in
adc
cmp
loope
outs
inc
(bad)
lock
je
icebp
sbb
jmp
sub
sbb
aad
pop
pop
mov
or
lds
cdq
adc
ret
adc
dec
icebp
add
sahf
loope
test
(bad)
shr
cmp
gs
call
shr
fdiv
lahf
inc
scas
cmp
dec
ss
add
mov
mov
test
xor
push
xchg
xchg
out
loopne
mov
ret
movs
pop
xlat
pop
popf
pop
inc
cmc
inc
(bad)
lea
outs
push
mov
push
dec
xchg
adc
dec
add
dec
dec
xor
into
pop
mul
add
jle
inc
and
sbb
call
into
cmp
in
add
mov
daa
and
dec
(bad)
leave
shl
movs
scas
and
mov
mov
mov
test
fstp
dec
fisubr
sti
push
jns
sbb
nop
out
mov
aas
jl
dec
lock
mov
inc
popa
mov
ja
mov
cld
push
pop
cmps
cmp
(bad)
cmp
push
fwait
ror
inc
lods
movs
arpl
pop
shl
scas
and
mov
pop
or
fwait
(bad)
sbb
or
stc
aas
add
nop
daa
adc
and
mov
leave
mov
xor
jnp
cmps
push
inc
inc
ror
inc
xchg
mov
add
add
(bad)
xchg
hlt
and
out
jbe
cmp
dec
fist
pop
inc
sahf
add
cld
loop
jmp
mov
js
mov
or
jmp
lahf
stc
or
dec
push
pop
int3
xchg
jb
je
adc
jne
scas
movs
cmp
into
adc
jl
cmp
icebp
and
test
pop
xchg
sbb
jbe
xchg
mov
jge
hlt
scas
test
retf
hlt
ret
mov
pop
std
loope
lds
sbb
and
pop
lahf
adc
xor
stos
aad
mov
xlat
and
ret
fdivr
fsubr
sahf
adc
cld
pushf
(bad)
int3
ror
dec
sbb
sub
or
mov
mov
(bad)
(bad)
or
mov
adc
lods
retf
or
mov
cmp
test
sbb
not
mov
js
bound
sub
add
adc
inc
daa
push
fisubr
or
add
mov
(bad)
sti
mov
inc
pop
repz
push
pushf
jle
xlat
add
retf
lahf
push
ret
int
in
dec
adc
and
scas
int3
cwde
sbb
fwait
xor
pop
ret
dec
adc
jb
inc
movs
pop
int
cmp
leave
loopne
lods
pop
ins
cdq
lahf
xor
fcomp
out
mov
cmps
xchg
and
stc
or
iret
repz
call
sti
cld
icebp
mov
outs
pop
rcr
mov
dec
daa
loope
mov
pop
jp
jecxz
test
js
adc
pop
fcmovnbe
div
retf
fistp
lahf
pop
mov
int3
enter
cmps
sub
ins
mov
xchg
fisttp
pop
jle
outs
jl
xor
add
pop
sbb
xor
push
loopne
mov
xchg
outs
popf
mov
bound
retf
lods
mov
ret
sub
int
sti
mov
imul
dec
lds
pop
out
iret
lods
outs
movs
(bad)
xlat
repz
mov
cs
js
push
adc
xlat
in
in
test
(bad)
in
sbb
imul
sub
and
mov
pop
in
shr
push
push
bound
inc
xchg
aas
mov
mov
shr
jns
adc
outs
retf
xlat
iret
mov
push
movs
jge
dec
dec
call
sbb
adc
mov
sar
and
fadd
mov
mov
mov
js
cmps
loopne
js
mov
push
je
sbb
xchg
mov
call
pusha
lods
push
js
jbe
outs
fisub
dec
and
in
xchg
pop
stos
xor
jmp
or
rcr
int3
or
adc
mov
mov
xchg
ins
clc
sbb
bnd
sub
hlt
pop
push
scas
adc
sub
test
mov
push
in
cmp
out
mov
push
xor
sbb
xchg
inc
jmp
xchg
dec
dec
xchg
cmp
sahf
or
ror
ret
dec
push
loope
mov
cmp
push
in
or
xchg
xchg
xchg
mov
adc
arpl
leave
mov
mov
test
mov
xor
nop
nop
jg
mov
int3
fisttp
lods
aas
cmp
jl
in
lock
jmp
xchg
jbe
std
stc
mov
in
ins
xor
rol
aam
and
shr
dec
aam
pop
mov
ins
mov
jne
je
ja
iret
test
push
loopne
sar
cmp
pop
jp
cmp
cmp
mov
mov
int
in
sbb
adc
cli
icebp
dec
js
push
shr
fwait
mov
mov
mov
stos
int3
retf
xchg
imul
or
and
mov
sbb
pop
or
(bad)
jmp
cmps
jp
js
leave
retf
jmp
fmul
loopne
ds
mov
and
call
leave
jb
clc
adc
or
iret
loop
ins
inc
mov
ror
pop
sbb
inc
inc
adc
xor
pop
gs
push
repz
mov
imul
popf
and
fucomip
push
(bad)
push
jne
cmp
sbb
adc
push
inc
imul
movs
dec
cmps
jl
xor
mov
adc
xchg
xor
iret
push
mov
cmp
jl
mov
adc
call
mov
mov
fdivr
push
jmp
dec
push
dec
sub
sar
call
add
dec
and
adc
pop
cmps
inc
adc
test
cmp
mov
mov
mov
or
pop
cmp
inc
popf
inc
inc
sar
inc
push
pop
jnp
(bad)
hlt
push
shr
inc
mov
test
and
shl
(bad)
into
and
adc
fcom
and
cmc
fldenv
jmp
ror
leave
pusha
sbb
xor
call
mov
xchg
pushf
into
fnsave
pop
jae
es
push
sub
sub
mov
cmp
clc
sub
xchg
ret
data16
xchg
scas
sti
scas
mov
jno
ja
sbb
xlat
adc
movs
inc
mov
add
inc
ror
jmp
pop
dec
je
fld
xchg
mov
or
cmp
inc
sub
rcr
and
stos
mov
pop
xlat
sahf
sbb
jo
out
ficom
jge
lock
mov
mov
repnz
or
pop
in
sbb
sbb
cmp
je
rcr
or
sahf
clc
xor
test
xor
jno
jmp
sahf
ss
fistp
shr
inc
rcl
and
push
bound
out
pop
xor
jnp
mov
xor
mov
mov
mov
xor
xchg
ins
(bad)
push
icebp
aaa
or
shr
nop
and
es
dec
dec
add
xor
mov
sbb
push
pop
xor
mov
fdiv
sbb
and
lods
jecxz
jg
jge
sub
xor
xchg
shl
daa
xor
xchg
fldcw
jl
xchg
fisub
test
sub
dec
lea
xchg
jno
retf
xor
jo
imul
sub
add
into
in
push
jmp
cli
lea
sar
arpl
cld
and
pop
in
jo
leave
dec
hlt
test
sbb
pop
xor
(bad)
cmp
add
lock
loope
cmps
je
add
mov
aas
mov
fldenv
outs
sahf
adc
leave
inc
xlat
adc
add
in
pop
inc
pop
jg
ret
call
mov
mov
inc
mov
sub
sbb
jle
pop
sbb
xchg
cmp
and
or
mov
dec
std
jns
mov
adc
add
sbb
push
stos
cmc
cmp
or
fsubr
add
cmp
add
pop
mov
dec
or
test
push
cmp
or
add
mov
arpl
add
call
pushf
out
(bad)
or
cmc
ins
or
cmp
adc
ud2
(bad)
not
fsubr
idiv
mov
(bad)
inc
sbb
pop
adc
xchg
aaa
inc
sbb
mov
pop
cmp
scas
dec
add
movs
addr16
mov
inc
pop
or
into
loop
cli
sbb
stos
shr
cmp
clc
fisubr
pop
mov
movs
test
scas
dec
(bad)
movs
dec
mov
push
dec
xchg
ret
jg
movs
stos
fsubp
mov
out
ror
xchg
sbb
(bad)
dec
stos
jae
add
pop
(bad)
imul
inc
push
rcr
mov
sbb
fmul
push
ja
cli
and
sub
jle
jno
scas
push
mov
mov
jmp
stos
fdivr
rcr
mov
jo
icebp
jmp
pop
iret
xor
fisttp
xchg
ss
clc
xor
div
pop
adc
xchg
mov
leave
mov
scas
inc
ror
push
aaa
jge
adc
bound
aad
push
push
rol
sub
sub
iret
cmp
xchg
push
ins
movs
lahf
xchg
adc
push
ficomp
mov
cmp
cmp
dec
add
pop
das
add
cmc
(bad)
std
mov
mov
mov
mov
cld
mov
shr
enter
cmp
adc
arpl
add
je
dec
jecxz
mov
xor
add
adc
mov
dec
call
sahf
mov
add
movs
cmp
add
scas
imul
repnz
xor
ficomp
leave
popa
jp
(bad)
cmp
dec
sti
das
mov
icebp
ss
sub
dec
pusha
and
xchg
dec
adc
sbb
sbb
or
imul
dec
mov
ins
ins
ret
xor
xor
inc
add
ds
push
call
ficom
pop
es
mov
xor
push
xor
dec
lock
das
sbb
fidivr
(bad)
call
push
sub
inc
dec
imul
adc
pop
call
cmps
mov
fdivrp
mov
inc
pop
inc
repz
jle
ret
ss
ins
add
outs
in
fimul
xor
div
inc
jl
loopne
dec
push
inc
movs
xor
ror
jle
sahf
jb
dec
sub
icebp
les
xchg
xor
pop
xchg
mov
mov
(bad)
push
test
imul
cmps
cs
int
aam
cmp
push
and
pop
shl
aam
mov
rcr
fwait
in
cld
xor
adc
xchg
add
mov
cmp
retf
ins
push
inc
imul
lahf
pop
adc
jne
dec
fisttp
inc
pop
xlat
push
test
add
fiadd
xchg
inc
inc
leave
daa
cmp
fscale
inc
retf
ror
fld
sub
daa
mov
cmc
jmp
movzx
sbb
xchg
xchg
out
mov
mov
inc
inc
sbb
js
call
(bad)
(bad)
pop
mov
add
and
ja
adc
aad
or
cmps
inc
outs
push
(bad)
add
test
pop
sub
fidiv
mov
xchg
sub
mov
and
retf
mov
dec
mov
push
lahf
popf
inc
out
pop
or
jo
and
xchg
add
(bad)
jmp
xor
packsswb
pop
and
repz
mov
addr16
(bad)
xchg
gs
retf
or
test
pop
mov
mov
and
push
popf
test
mov
push
js
pop
dec
cmp
add
(bad)
jp
and
loope
or
sbb
movs
ins
fcomi
cmps
cmp
enter
jecxz
sbb
fstp
out
sbb
pop
adc
xor
aam
and
add
iret
test
mov
xchg
inc
aam
sbb
call
jnp
mov
adc
push
iret
repz
iret
nop
ins
lods
dec
jne
outs
scas
mov
sub
enter
jnp
out
cmp
xchg
jmp
cmp
cwde
add
or
add
test
adc
daa
dec
es
aam
or
ret
fbstp
xor
addr16
mov
xor
cwde
xchg
cwde
inc
sbb
mov
pop
add
xchg
dec
test
aam
mov
popf
sbb
rol
arpl
sbb
fs
inc
jns
dec
xor
or
add
daa
sub
push
fist
adc
mov
(bad)
test
fsubrp
(bad)
ja
xor
pop
hlt
adc
cmp
movs
scas
je
sbb
pop
or
ins
lock
xchg
xchg
stos
jbe
rcr
movs
dec
jb
inc
iret
adc
test
sub
dec
add
sbb
pop
or
xchg
jl
pop
lods
cs
mov
(bad)
ficomp
leave
scas
pop
xchg
pop
mov
sbb
call
jo
rcl
loop
xchg
push
in
test
xchg
int
aaa
rol
or
sub
xchg
js
into
das
xor
add
test
cmps
in
call
xchg
shl
mov
push
or
mov
fbstp
mov
fcom
rcl
jne
inc
cmp
cs
(bad)
adc
cwde
test
lock
dec
push
pop
adc
dec
or
sbb
adc
cld
mov
data16
mov
bound
gs
push
lds
inc
repz
mov
out
jb
lods
imul
popa
jno
retf
sbb
cmp
push
cmp
clc
rcl
push
outs
xchg
lock
add
mov
repz
jae
dec
ss
out
fiadd
outs
adc
stos
rcl
pop
(bad)
adc
cmps
push
mov
sub
mov
(bad)
call
xchg
xor
xor
xor
xor
daa
inc
inc
push
adc
mov
mov
dec
inc
aam
sti
mov
xchg
and
or
xor
retf
cmp
fucom
stc
inc
stos
add
mov
sub
repz
neg
fadd
popf
inc
xchg
ret
pop
pop
and
retf
xor
xchg
hlt
sahf
mov
mov
mov
scas
ficomp
or
pop
xlat
push
fwait
loopne
div
ret
sub
mov
jl
movs
js
xor
int
sub
addr16
(bad)
int3
push
push
lock
fisttp
out
ror
aam
jae
nop
xchg
xchg
jg
mov
retf
dec
daa
jne
xchg
pop
shl
retf
lods
and
fst
dec
arpl
test
and
jle
rcr
(bad)
mov
test
iret
push
fwait
push
adc
jo
cmps
jmp
adc
int3
cld
inc
fdivr
js
cwde
movs
test
xchg
mov
stos
xchg
out
in
in
adc
fsub
xlat
xchg
sahf
lds
pusha
fs
fstp
(bad)
call
xor
outs
fwait
adc
xchg
adc
xchg
clc
and
fwait
jmp
dec
xchg
mov
int
rcl
in
jle
push
test
dec
mov
dec
popf
xchg
mov
xor
ins
das
mov
retf
ficom
test
mov
sub
cwde
sti
jo
mov
push
sub
dec
mov
mov
aam
dec
push
into
adc
retf
cmps
in
inc
mov
mov
pop
in
dec
sahf
mov
stc
sub
int3
int3
shr
icebp
imul
lods
ins
jp
sub
sbb
inc
jecxz
das
ja
cwde
sub
mov
ret
cld
push
addr16
pop
push
or
or
sbb
push
frndint
adc
push
and
mov
xor
pop
sub
aam
adc
popf
and
lahf
jo
push
fwait
(bad)
and
push
mov
cmp
aam
fs
mov
nop
dec
mov
(bad)
repnz
(bad)
cmp
push
arpl
call
cmc
and
lea
xchg
ja
mov
push
sahf
dec
(bad)
out
xchg
pop
xor
jg
ret
dec
call
loope
adc
sbb
mov
inc
xor
arpl
or
mov
sub
movs
test
sbb
data16
repnz
mov
xor
stc
test
dec
pusha
data16
mov
add
fxch
data16
aad
add
pop
inc
stos
push
mov
ins
sub
mov
pop
sub
call
loope
test
bound
gs
xchg
les
clc
sbb
sub
jmp
jbe
(bad)
sub
arpl
adc
clc
neg
js
xchg
sub
mov
pop
or
push
or
and
int3
mov
cwde
iret
sahf
push
pop
repnz
jno
push
repz
(bad)
sti
push
std
adc
ret
mov
push
mov
cmp
adc
fistp
push
mov
dec
ret
mov
rcr
dec
lods
dec
or
ret
icebp
push
outs
popf
icebp
pop
arpl
or
scas
xchg
adc
daa
push
fld
xchg
cli
movs
clc
ja
stos
loope
lods
and
jmp
xchg
loopne
lods
loopne
dec
mov
pop
push
dec
scas
add
ror
pushf
jg
dec
jae
(bad)
fild
add
mov
jl
add
push
jns
shl
or
sbb
out
or
dec
jmp
int3
les
imul
and
xor
xor
xchg
sub
cmp
fwait
pop
add
cmp
repz
or
sbb
sbb
arpl
scas
repnz
aas
adc
xchg
stos
cmp
fs
pop
fisttp
mov
fsubrp
mov
mov
lea
outs
mov
pop
sub
shl
pop
push
hlt
pushf
inc
push
xchg
clc
mov
pop
repz
scas
mov
(bad)
es
xchg
(bad)
fwait
jo
loope
xchg
(bad)
push
xor
lahf
scas
inc
and
iret
into
ins
scas
sbb
sahf
mov
test
das
nop
mov
mov
aas
stos
and
push
leave
pop
int3
sahf
dec
jbe
cmp
pop
jns
out
cli
pusha
xor
pop
cmp
sbb
test
push
cld
shr
push
leave
movs
jb
inc
stos
mov
pop
pop
dec
mov
dec
in
xchg
dec
inc
stos
xchg
jecxz
push
xchg
sub
xchg
sahf
push
jnp
mov
(bad)
fdiv
popf
in
ins
and
and
mov
adc
sub
ins
inc
out
add
or
xchg
loopne
dec
mov
pop
mov
adc
push
dec
(bad)
and
loop
(bad)
xor
jo
les
and
nop
cmp
mov
jg
and
add
sbb
pop
(bad)
inc
xchg
sbb
es
clc
pop
and
repz
jno
push
fdivr
jbe
dec
lahf
inc
adc
dec
xor
cmp
fst
push
mov
xchg
dec
in
in
inc
fs
push
fmul
rol
xor
mov
aaa
jae
movs
sub
jns
jmp
mov
scas
test
inc
and
adc
adc
jp
frstor
aam
sbb
push
or
xchg
into
dec
jmp
sahf
add
jno
fldenv
sub
inc
jl
mov
mov
mov
pop
cmp
cmp
stos
cwde
jns
pop
inc
inc
mov
xlat
retf
sub
xor
dec
cmp
adc
stos
fsub
(bad)
and
(bad)
xchg
mov
(bad)
call
rol
mov
in
imul
adc
jmp
jne
pushf
pop
jle
aaa
xchg
ficomp
aam
ret
out
sbb
fcom
mov
fs
dec
shl
sbb
addr16
fcomp
cmp
js
popf
dec
xchg
cmp
cs
push
mov
push
fld
in
sub
shl
not
(bad)
fadd
sub
push
inc
out
sub
pop
jo
aad
(bad)
les
mov
in
and
pusha
sahf
dec
xchg
test
add
xor
sub
(bad)
xchg
inc
out
mov
dec
call
inc
jecxz
rcl
outs
cmp
mov
inc
lods
ja
(bad)
adc
sahf
push
mov
mov
push
dec
mov
leave
sub
mov
push
jb
mov
adc
popa
pop
dec
sbb
adc
and
pop
xchg
jb
add
or
pop
ror
jle
leave
pop
imul
clc
xchg
movs
jge
dec
ss
xchg
ficomp
or
mov
in
cmps
xor
push
je
enter
movs
lods
xor
sahf
(bad)
shrd
xchg
cld
push
test
cs
call
cdq
xor
(bad)
cdq
xor
mov
and
pop
mov
push
retf
xor
add
jecxz
cmp
push
mov
adc
rcr
mov
cld
xor
dec
stc
movs
and
rol
lods
and
push
out
mov
ror
loop
cdq
push
sub
xchg
clc
in
repnz
mov
adc
push
call
push
(bad)
gs
xchg
pop
pop
or
mov
test
in
cmp
mov
push
shr
sbb
aad
scas
cmp
test
test
jb
retf
mov
mov
rcl
cwde
dec
xor
jae
sti
mov
cwde
jp
push
and
pop
stos
push
jns
jg
xchg
cmp
dec
out
(bad)
rcr
mov
sbb
and
inc
or
push
(bad)
aaa
pop
mov
pop
lea
fiadd
das
pop
sub
sbb
mov
clc
cmps
mov
aad
mov
sub
or
xchg
aaa
(bad)
pop
pop
xor
xchg
int3
stc
ror
add
rol
and
inc
cmps
(bad)
fdiv
adc
and
dec
inc
sub
aaa
push
mov
(bad)
mov
mov
fldcw
(bad)
add
and
cwde
mov
xlat
cli
les
addr16
into
jle
xchg
or
shl
dec
test
or
aaa
xchg
and
ret
pop
(bad)
mov
xor
rol
inc
xchg
dec
jno
aas
mov
and
sbb
cmc
rcl
movs
movs
jns
int
add
shr
mov
(bad)
and
dec
stos
jns
mov
(bad)
out
push
sub
int3
add
and
xor
gs
or
call
sbb
repnz
sti
jle
jmp
push
xor
sti
sub
jmp
jecxz
xchg
dec
pop
cwde
push
(bad)
jmp
nop
in
je
push
adc
int3
dec
fisub
test
push
shr
bound
loopne
mov
jno
rol
std
loope
mov
shr
rcr
imul
pop
xchg
jp
repz
jle
in
ja
cmp
(bad)
scas
call
mov
add
cmp
ja
bsr
adc
or
es
test
mov
inc
mov
test
repnz
sub
mov
aad
pop
mov
imul
dec
lock
jns
jg
pop
or
ja
into
scas
fidiv
xchg
ds
sbb
cmp
(bad)
push
push
in
enter
shl
ret
aaa
mov
xor
ror
adc
and
sbb
pop
adc
push
or
mov
mov
xchg
and
js
add
cli
adc
cmp
cmp
mov
ins
int3
cs
pop
enter
inc
xchg
dec
and
icebp
aad
int3
mov
jp
sbb
cmps
addr16
pop
mov
jo
aaa
mov
cmc
mov
push
(bad)
jecxz
sahf
add
fbstp
push
adc
add
adc
repnz
add
mov
enter
loop
or
mov
add
test
aas
(bad)
cld
and
sbb
in
push
xchg
test
inc
mov
mov
mov
cdq
fst
pop
mov
aaa
sub
inc
push
loopne
je
mov
mov
imul
hlt
mov
fld
out
or
dec
mov
seta
pusha
ds
stc
shr
leave
mov
hlt
push
pop
lods
sbb
pop
outs
sbb
out
jg
test
popf
mov
inc
imul
jp
jg
test
(bad)
stos
add
outs
mov
aas
mov
and
mov
lahf
out
or
aam
ja
mov
outs
xchg
fisttp
ror
cmp
jae
das
out
and
mov
scas
div
ror
enter
(bad)
hlt
lock
jg
data16
dec
mov
or
dec
rcl
je
rcl
adc
mov
adc
daa
adc
ins
adc
push
lock
movs
or
ror
sahf
xor
add
push
call
xchg
repnz
adc
hlt
int
test
sub
sbb
movs
aaa
mov
fnstenv
or
gs
hlt
push
lods
adc
call
inc
loope
and
dec
outs
mov
les
retf
push
mov
fwait
rol
mov
mov
sti
arpl
popf
mov
xor
test
jp
mov
aas
fisttp
in
call
fdivr
out
push
xchg
shr
shr
mov
test
inc
sar
dec
aaa
cld
aas
dec
cmp
jecxz
dec
fldenv
cld
call
pop
xchg
(bad)
dec
inc
mov
push
(bad)
mov
loopne
sar
(bad)
xchg
dec
dec
ss
int
push
rol
dec
jecxz
inc
mov
pop
sub
addr16
hlt
inc
push
xchg
fcomi
mov
sub
cmc
jecxz
call
lods
pusha
and
enter
push
pop
inc
sub
int3
pop
adc
je
jno
push
loope
cwde
int
cmps
inc
mov
mov
mov
push
sbb
adc
add
push
push
push
dec
pop
retf
sbb
pop
dec
in
mov
fistp
jbe
cwde
push
cmp
sub
mov
imul
inc
ja
adc
cmp
cmps
push
inc
in
in
loopne
mov
xor
cmp
dec
mov
out
hlt
mov
dec
lods
inc
adc
sbb
in
dec
mov
fsub
arpl
stos
or
out
mov
pushf
add
(bad)
nop
push
imul
pop
adc
jl
mov
in
fwait
stos
xlat
inc
(bad)
ins
jnp
mov
in
aam
and
mov
bound
dec
sub
cmp
xor
jbe
call
test
pop
in
inc
ds
gs
sbb
test
sbb
mov
pop
mov
pop
xchg
sub
mov
imul
push
in
fild
add
dec
jo
inc
ret
dec
icebp
cld
mov
clc
adc
cs
(bad)
mov
addr16
mov
jo
push
xchg
pop
adc
pusha
push
nop
lds
cmp
mov
xchg
fbstp
retf
(bad)
dec
sub
add
ss
push
push
(bad)
push
and
movs
jbe
call
jge
mov
sbb
push
imul
cmp
stos
imul
inc
test
in
popa
sahf
jmp
adc
cmp
ja
(bad)
cmp
and
outs
shr
imul
xor
shl
les
mov
jmp
test
pop
aam
rol
cmp
in
adc
loopne
or
in
or
adc
mov
push
sbb
jns
mov
jle
pop
addr16
sub
fsub
cmp
adc
inc
ins
pop
stc
push
sub
adc
push
and
sub
dec
int3
mov
push
hlt
sbb
xlat
lock
jns
(bad)
lds
push
outs
add
cld
sub
inc
fidiv
ins
loope
pushf
lock
or
mov
lods
mov
mov
pop
mov
sbb
inc
push
scas
nop
leave
push
test
xchg
data16
test
rcr
pop
ror
mov
or
retf
daa
dec
dec
add
iret
popw
xchg
or
add
pop
mov
sti
test
sbb
rcr
jge
hlt
xchg
pop
in
xchg
jo
outs
adc
sbb
pop
push
inc
push
mov
cld
fisttp
pop
dec
jno
mov
xchg
push
out
test
xchg
jp
pop
jmp
jp
inc
mov
pop
xchg
xor
mov
mov
sbb
dec
retf
rcr
push
mov
xchg
jo
push
mov
pop
dec
cmp
test
xchg
or
test
jl
push
std
shl
xchg
cmp
adc
mov
and
fnstenv
rol
sbb
ror
rol
dec
cmp
leave
xchg
je
or
(bad)
(bad)
inc
and
mov
xor
push
fucomi
test
dec
mov
jo
mov
sub
mov
icebp
jb
mov
pop
test
or
sti
(bad)
shl
inc
int3
or
std
inc
jmp
dec
sbb
lods
sub
push
jl
mov
sbb
sbb
push
movs
xor
fisubr
mov
dec
add
lods
popa
xor
movs
or
sub
or
enter
or
sbb
adc
jo
mov
stos
ds
arpl
gs
or
outs
sub
retf
add
mov
ficomp
pop
and
jmp
xor
imul
sub
cmps
call
mov
cmp
mov
pop
push
nop
dec
sahf
mov
repz
(bad)
dec
int3
es
ins
xchg
push
loop
cmp
adc
fisttp
mov
mov
in
ins
xchg
mov
adc
xchg
retf
cmp
adc
cmpxchg
or
or
test
add
mul
enter
stos
mov
sbb
jb
in
xchg
sub
push
call
(bad)
ja
dec
call
mov
pop
sub
imul
test
jae
fild
mov
sbb
xor
pusha
retf
or
cmp
(bad)
cwde
cmp
rcr
dec
or
lods
or
push
rcr
cmp
push
popa
cdq
add
fiadd
sbb
(bad)
arpl
repz
sbb
push
and
(bad)
int3
jecxz
in
mov
push
xor
and
xchg
and
jecxz
hlt
jnp
cmp
mov
cdq
cmp
jle
imul
jo
or
xchg
push
fnstenv
xchg
in
add
test
repz
dec
pop
cmp
lock
iret
pop
mov
mov
adc
cmp
stos
add
retf
cmc
loopne
cmp
leave
punpcklwd
jne
rol
ins
stc
sub
sub
dec
jns
mov
mov
pop
(bad)
cmp
stc
mov
jp
push
loopne
scas
push
scas
test
and
dec
jl
mov
leave
and
mov
popa
sbb
ins
cmp
sbb
pusha
adc
sbb
mov
xchg
inc
ret
jl
sbb
mov
cmc
jne
lods
dec
mov
cmps
imul
pop
xchg
test
mov
sahf
sub
pop
leave
(bad)
mov
lock
retf
popf
jecxz
jmp
dec
imul
test
cmp
outs
xor
xchg
xor
(bad)
loop
retf
adc
call
cmp
ins
cli
scas
js
movs
fbld
ins
sub
leave
mov
xor
(bad)
scas
dec
cld
rol
aad
xchg
or
mov
add
push
jb
add
xchg
jmp
dec
aam
fdiv
lock
test
lea
ret
ficomp
stc
pusha
sbb
and
in
mov
aaa
pop
xchg
outs
shr
adc
cli
inc
cld
add
test
xor
cld
cmp
shr
(bad)
out
repnz
repnz
in
test
cmp
push
push
cmc
adc
je
neg
push
(bad)
jbe
dec
jge
or
es
arpl
jbe
stos
rcl
lock
shl
xor
ins
and
mov
push
dec
nop
stos
sub
data16
push
dec
stc
loopne
hlt
dec
sbb
sbb
cmp
mov
and
cmp
int3
or
pop
and
push
or
dec
out
mov
cmps
pop
test
mov
inc
add
or
cld
fisttp
add
hlt
mov
jae
retf
out
ret
shr
(bad)
out
rcr
rcr
xchg
sti
pop
aad
out
aas
ja
jno
inc
clc
mov
test
xchg
mov
inc
enter
sar
cmp
cld
jnp
mov
adc
fwait
push
pop
ins
dec
inc
or
sti
pop
ret
das
ins
xchg
pop
cs
adc
sbb
sub
ret
(bad)
pop
loop
xchg
addr16
mov
mov
cmps
dec
stos
adc
cmps
or
aas
push
xchg
lods
aas
or
movs
xchg
sbb
push
(bad)
loope
mov
adc
xchg
lahf
mov
(bad)
test
call
adc
or
rcl
dec
mov
scas
xor
dec
(bad)
lahf
pop
aad
pop
mov
sahf
push
mov
imul
shl
mov
int
inc
push
and
leave
or
dec
ds
xchg
sub
cli
data16
mov
dec
cli
cmp
lock
bound
mov
aad
pop
int3
adc
mov
(bad)
shr
and
or
ins
mov
mov
xor
fisub
push
jmp
cli
inc
fnstenv
in
test
sbb
out
xlat
sub
je
fnstcw
jns
mov
xor
push
popf
les
lods
xchg
push
mov
and
sub
and
ins
jge
push
jmp
push
je
dec
out
leave
adc
ret
ficomp
aas
dec
hlt
mov
jmp
and
mov
ss
mov
fwait
outs
mov
add
aaa
in
scas
shl
sub
jp
sub
or
cmp
cs
repz
lods
inc
adc
pop
out
hlt
fcomp
scas
inc
cmp
xchg
jae
repz
sbb
ret
ja
sub
fcomp
(bad)
push
xor
(bad)
adc
mov
jae
arpl
and
cmp
mov
push
jmp
arpl
pusha
sbb
(bad)
push
inc
lds
cmp
add
dec
sahf
mov
add
mov
fisubr
aas
adc
sbb
pop
mov
cmp
int3
mov
mov
adc
sar
rcl
inc
adc
iret
scas
mov
iret
out
mov
add
add
ret
inc
(bad)
ss
jb
cmps
pop
push
or
fistp
inc
push
arpl
push
sub
pop
dec
(bad)
stos
or
pop
hlt
and
cli
(bad)
fs
pop
adc
repnz
xchg
pop
mov
out
call
push
mov
sub
adc
out
mov
repnz
sbb
mov
and
iret
mov
cmp
movs
xlat
clc
mov
adc
call
dec
cmp
push
das
xchg
mov
iret
mov
stc
shr
outs
xchg
inc
push
cmp
or
jne
cmps
push
push
inc
mov
push
and
stos
jmp
int3
fmul
scas
shl
jmp
adc
xor
hlt
dec
pop
ins
xchg
mov
cmp
stos
es
jbe
sbb
icebp
add
mov
add
sub
(bad)
xchg
dec
retf
int3
add
clc
out
inc
scas
mov
cwde
jmp
mov
fdivp
int
in
fld
xchg
fisub
js
popa
(bad)
pop
push
fs
xor
mov
or
adc
call
jge
popa
iret
aas
jmp
inc
sar
mov
sub
push
mov
push
push
lahf
test
push
fistp
inc
cmp
cmc
push
shl
xor
hlt
enter
(bad)
lahf
daa
sub
xchg
jne
and
jmp
mov
push
loopne
scas
pop
in
push
cmp
call
test
push
sub
call
xchg
mov
out
mov
das
test
ror
jecxz
pushf
lds
jecxz
cwde
mov
(bad)
sub
(bad)
es
call
or
out
sub
lea
in
adc
xchg
and
sahf
push
push
call
bound
sbb
cli
jo
and
cdq
repnz
mov
adc
aaa
adc
arpl
fstp
test
mov
pop
dec
mov
iret
popf
lods
dec
adc
push
pop
xchg
and
sbb
in
pop
sub
lea
cld
pop
xor
sbb
iret
or
jns
mov
aad
out
shr
inc
rcr
retf
gs
add
xchg
mov
pop
xor
pop
nop
sbb
and
inc
clc
xchg
jno
pop
jp
mov
push
mov
shr
out
push
mov
push
test
movs
cmp
xchg
push
mov
retf
retf
inc
mov
out
outs
or
fcomp
push
movs
mov
lock
mov
loop
div
ins
xchg
imul
adc
rol
test
add
mov
mov
es
sbb
cli
inc
fnstenv
add
sub
test
iret
dec
in
or
stc
nop
and
jb
pop
(bad)
cmp
add
shr
adc
cmp
shr
imul
int
mov
cmps
std
xchg
ret
pop
and
mov
ins
cwde
inc
rcl
mov
dec
rcl
sbb
jne
and
mov
sub
hlt
je
or
iret
adc
sahf
xchg
cmps
lods
xchg
pop
push
pushf
sub
(bad)
pop
es
sbb
shl
push
adc
push
retf
iret
dec
and
out
mov
je
in
dec
scas
mov
xor
shl
cdq
xor
jge
mov
mov
push
cmp
(bad)
sub
shl
sub
cli
inc
mov
(bad)
ins
xor
jmp
imul
inc
gs
sbb
test
xchg
xchg
pop
xchg
ret
sbb
mov
mov
push
cmp
pop
inc
(bad)
fsub
les
jl
addr16
call
push
aaa
iret
xchg
repz
xor
jnp
xchg
pop
sbb
mov
and
pop
js
nop
or
fs
or
jnp
push
xlat
scas
aaa
or
fst
jb
shl
hlt
enter
jno
mul
ss
fldenv
stos
outs
fcom
mov
(bad)
xchg
(bad)
fisub
sbb
div
scas
sub
sub
dec
cmc
int3
lds
ret
xor
(bad)
push
(bad)
cmp
push
push
mov
test
push
fnsetpm(287
push
mov
in
and
sbb
and
aad
das
or
in
inc
int3
mov
cmps
lahf
mov
inc
rcr
fisub
pusha
std
mov
jbe
inc
std
jl
out
sbb
ror
outs
dec
cmp
lds
adc
jne
cmc
sub
out
or
mov
or
add
adc
adc
jmp
or
cmp
test
and
mov
jmp
pcmpeqd
mov
call
daa
out
dec
push
stos
jmp
jne
cmp
sub
scas
ss
cmp
mov
pop
aad
jb
xor
sub
inc
jae
pusha
out
sub
cmp
aas
xchg
outs
cld
jle
xchg
icebp
jecxz
jecxz
push
xchg
cwde
stc
cs
outs
stos
adc
xor
ds
add
cmp
add
push
add
fidiv
cmps
mov
pop
inc
ja
xchg
mov
leave
fnsave
cdq
jmp
retf
xor
jle
dec
fnstcw
mov
out
cli
adc
or
add
push
push
add
scas
fdivr
mov
in
dec
jno
jmp
fs
and
icebp
aad
xchg
jmp
mov
mov
in
mov
out
jae
arpl
aaa
(bad)
cdq
fcom
jae
cwde
xchg
enter
out
movs
xor
ret
repz
in
cmc
in
jecxz
xchg
movs
rcl
jl
imul
xor
loop
lods
ret
fwait
mov
ret
jmp
xor
fist
scas
cld
call
dec
lock
lods
idiv
jmp
(bad)
sbb
test
adc
pusha
pop
nop
loope
sbb
jle
ret
stos
jbe
add
cmp
adc
hlt
inc
jae
jns
push
sub
mov
push
test
add
(bad)
push
or
cmp
push
test
xor
ret
jno
sbb
ficomp
cmp
sub
pop
add
(bad)
jns
arpl
hlt
mov
fild
sar
ret
cmps
sub
sar
add
xor
fcomp
clc
sbb
cmp
add
fisttp
xchg
cli
pop
(bad)
clc
cmp
aam
sub
mov
xor
fstp
popf
ins
pop
fucomip
scas
pop
fistp
stos
and
outs
jb
retf
xchg
sbb
dec
fisttp
retf
jp
mov
cmp
inc
and
pop
mov
lods
mov
out
cmps
(bad)
ins
cmp
mov
push
mov
imul
imul
mov
mov
adc
push
add
iret
leave
dec
dec
aaa
xlat
mov
lock
cdq
xor
or
xchg
mov
dec
and
mov
xchg
xchg
int3
mov
ins
dec
push
xchg
pop
mov
pop
pop
hlt
std
adc
adc
dec
sub
stc
inc
iret
cmp
dec
mov
or
loopne
mov
dec
xor
adc
addr16
or
pop
push
cmp
add
or
fcomp
cmp
inc
in
(bad)
std
jp
mov
aaa
sub
in
dec
es
into
cwde
jns
mov
bound
std
clc
add
(bad)
fimul
ret
push
ret
push
std
adc
mov
addr16
in
xchg
inc
jo
es
pop
xchg
fiadd
jle
test
mov
xchg
cmp
repz
cmp
and
lock
jl
cmp
sbb
xor
ror
mov
mov
pop
sbb
and
pusha
xchg
push
es
ja
ja
stos
sub
cmc
cmps
pop
std
xchg
mov
sahf
mov
sbb
xchg
cwde
xor
test
sub
fimul
les
xor
fs
xor
jns
jne
push
es
add
mov
test
fldl2e
push
mov
xlat
cmp
mov
shl
cmp
jecxz
adc
cmp
out
pop
push
inc
mov
jb
(bad)
pmuludq
call
lock
pop
mov
dec
sub
inc
jne
xchg
sti
xlat
arpl
pop
add
xor
not
jne
xchg
aaa
mov
scas
js
nop
push
mov
jle
scas
and
pop
mov
xor
loop
mov
cmp
add
ss
mov
aam
mov
call
adc
push
push
mov
int3
xor
pushf
jb
call
repz
push
cmp
imul
dec
pop
gs
push
call
nop
xchg
pop
lock
and
out
ins
cmp
jbe
pop
ficom
push
jne
jg
fst
es
push
inc
or
shl
dec
scas
jb
test
adc
dec
dec
jnp
xor
dec
sub
dec
xor
dec
icebp
mov
sbb
test
mov
mov
repz
fadd
sbb
mov
stos
jb
arpl
cmp
xchg
pop
out
ret
xlat
lahf
xor
test
cmps
adc
sahf
jmp
imul
cmps
inc
leave
xlat
out
ins
test
nop
push
ja
aas
sti
mov
xchg
fidiv
js
shl
mov
aas
pop
stos
adc
retf
rcr
cmp
inc
int
inc
pushf
sub
pop
xor
popf
cmc
jb
pop
les
lock
(bad)
jae
je
aad
movs
jmp
pusha
scas
in
jno
add
ret
in
xor
jp
mov
add
cmps
cld
and
jp
stc
lods
jge
jbe
ret
pop
jge
mov
pop
jmp
add
sub
jecxz
hlt
jo
neg
push
jb
cmp
inc
lahf
xor
mov
pop
in
or
xchg
sbb
cmps
xlat
in
cmp
push
les
mov
out
scas
in
push
or
repz
adc
cwde
xor
sub
or
fadd
leave
and
add
fs
cmp
in
pop
dec
push
pop
rol
jmp
icebp
push
shl
mov
or
es
(bad)
shl
sub
xor
xor
test
cld
or
out
ficom
popa
rcr
sub
in
sbb
aaa
aas
outs
(bad)
jae
mov
push
sahf
ss
mov
retf
outs
(bad)
shl
mov
jle
in
mov
fld
fldcw
pushw
jecxz
push
jmp
stos
xor
push
das
mov
or
and
fwait
adc
or
enter
and
loopne
xor
neg
test
or
adc
lods
push
icebp
inc
add
ins
clc
pop
mov
jl
icebp
js
mov
cmps
out
sub
dec
enter
jle
daa
sbb
dec
add
out
mov
rcl
jno
add
ret
les
lods
push
adc
xor
xchg
add
adc
in
aas
hlt
dec
dec
or
and
movs
pushf
test
(bad)
inc
or
pop
jo
loope
out
cmp
pop
les
popa
adc
fisttp
jg
retf
adc
push
or
add
retf
(bad)
adc
sub
mov
jmp
and
aas
xchg
sbb
js
xchg
cmpxchg
adc
ror
mov
(bad)
scas
(bad)
arpl
lea
push
sbb
in
inc
or
jmp
xchg
in
outs
out
and
scas
adc
sub
lds
in
(bad)
mov
data16
stos
cli
push
mov
fild
ins
mov
stc
pop
adc
cmp
hlt
push
adc
add
outs
lds
ins
(bad)
addr16
mov
mov
pop
out
pop
mov
sub
mov
mov
push
pop
cs
xor
mov
sub
lock
xchg
out
jmp
adc
inc
push
js
cmp
dec
out
sub
or
push
mov
mov
lock
mov
add
push
pop
adc
cmps
mov
test
hlt
push
imul
scas
add
adc
mov
je
xor
cmp
aas
mov
mov
fisubr
dec
dec
and
cli
mov
sub
mov
mov
or
xchg
sbb
xchg
pop
pop
or
das
push
lahf
test
mov
movs
imul
into
pop
leave
xor
lea
or
sub
xchg
ret
mov
or
jp
loopne
mov
test
aad
ret
mov
out
push
or
popf
cwde
fsub
cs
inc
test
repnz
jle
adc
mov
popf
cs
pop
push
jl
shr
psubb
data16
cmp
or
cmp
xor
jo
dec
arpl
out
or
shr
aam
inc
stos
mov
repz
shr
inc
mov
iret
popf
arpl
mov
add
(bad)
cmp
add
shl
sbb
mov
pop
sub
fadd
add
shl
pop
leave
sub
imul
and
cdq
je
dec
xchg
enter
jmp
xor
cwde
jl
dec
and
dec
or
add
sbb
push
retw
gs
jge
test
dec
push
clc
lock
clc
jecxz
aaa
push
daa
fst
stos
inc
xor
cmps
lods
retf
stos
push
xchg
xor
pop
cmp
mov
or
jo
das
cmc
adc
mov
aam
inc
mov
fadd
not
push
js
ret
lahf
dec
outs
mov
dec
loopne
scas
dec
add
dec
xor
cs
jo
or
sbb
sbb
aas
adc
out
xor
cmp
icebp
pusha
xchg
or
rcl
pop
imul
punpckldq
add
xchg
rol
fisub
cld
mov
mov
ror
sub
sti
movs
mov
adc
push
pop
mov
push
jo
fnstsw
popf
jbe
hlt
jmp
loope
bound
inc
mov
scas
inc
inc
adc
jmp
sbb
pusha
xor
cmp
or
add
inc
xchg
movs
das
add
inc
mov
mov
pop
pop
imul
push
dec
cmc
fwait
jg
xchg
in
repnz
sub
jmp
pop
cmps
ror
jmp
jmp
js
(bad)
fmul
add
pop
mov
test
inc
inc
div
fadd
dec
cmp
not
sbb
test
jns
xor
sub
adc
inc
mov
cmp
sbb
xor
nop
jg
shl
pop
dec
jmp
pop
cmc
inc
(bad)
shr
and
test
cmp
xchg
(bad)
dec
add
xchg
jbe
push
or
push
jne
lds
(bad)
jb
hlt
(bad)
js
sub
pop
jl
loope
sbb
fs
pop
dec
call
test
sub
ins
arpl
sub
adc
lea
cmp
cs
retf
ins
aas
sbb
(bad)
inc
and
iret
mov
cs
enter
push
arpl
push
adc
fmul
mov
inc
sbb
xor
jnp
das
jbe
mov
pop
rol
xor
jecxz
imul
xchg
mov
clc
out
in
mov
push
sar
popa
add
into
mov
fmul
sub
cmp
sahf
cmp
(bad)
ja
push
jb
pop
retf
pop
pop
je
sbb
sub
(bad)
or
sti
cdq
lods
mov
pop
mov
pop
jmp
sbb
inc
outs
fimul
xchg
cwde
or
cmp
stos
mov
jbe
or
jnp
fcomp
repz
ror
inc
add
loope
cmp
std
sbb
iret
push
stc
mov
jo
pop
sub
and
mov
add
xor
xchg
fnstenv
data16
ja
and
cmp
ds
xchg
xor
adc
fcomp
scas
setle
call
iret
adc
fidiv
mov
not
push
popa
cmps
pop
fnstenv
addr16
pushw
jge
xchg
lahf
pusha
out
int3
sub
fisub
push
mov
and
cmps
push
icebp
cmp
push
jle
adc
xor
adc
fadd
mov
xchg
xor
sub
clc
or
adc
in
ins
mov
add
hlt
cmp
and
mov
mov
jle
aad
bound
repnz
sbb
sbb
es
push
mov
jo
data16
dec
push
mov
les
push
push
sub
shl
sub
adc
mov
ja
dec
arpl
cdq
sub
lds
mov
aad
xlat
xor
fdiv
xlat
or
xor
xlat
loop
jae
inc
sub
enter
push
sbb
mov
jbe
jl
cld
out
cmp
pop
xor
sub
mov
das
(bad)
rcr
and
mov
xlat
push
jmp
hlt
mov
xchg
mov
shl
dec
sar
sub
push
push
scas
daa
push
inc
or
icebp
mov
push
and
xlat
repnz
js
mov
inc
add
fcmovnb
mov
jp
pop
mov
test
out
pop
movzx
enter
shl
call
ficomp
jbe
pop
out
test
push
push
sub
stos
test
cmps
and
jmp
push
les
inc
rol
jmp
jno
cmc
jmp
mov
cld
sub
cmp
adc
stos
push
mov
sbb
and
lds
add
add
into
inc
xor
(bad)
enter
mov
pop
pop
pop
pushf
push
fnstcw
cmps
xchg
cmp
sub
lods
les
mov
std
adc
popf
in
je
sub
cmp
fidiv
mov
cli
adc
lods
sti
or
inc
retf
push
mov
jecxz
dec
dec
leave
or
add
lds
icebp
and
iret
or
xchg
aaa
pop
jbe
dec
sti
sbb
xor
js
inc
xchg
xchg
sub
and
fiadd
gs
in
aam
je
mov
cmp
fs
push
lock
imul
mov
mov
in
in
stc
sub
inc
dec
dec
call
cmp
pop
cld
inc
xchg
sbb
(bad)
sbb
into
outs
sbb
sub
imul
xor
(bad)
mov
lods
(bad)
jmp
jp
fst
jo
add
bound
ja
or
xchg
(bad)
and
dec
fisttp
cmp
pop
iret
mov
cmc
aad
sub
std
icebp
jge
jp
cmps
in
cld
and
xchg
mov
pop
dec
call
mov
adc
xlat
std
adc
gs
jecxz
aas
iret
push
inc
jae
jb
call
clc
in
or
or
bound
and
cld
in
add
sub
or
scas
pop
or
inc
mov
ficomp
dec
add
dec
inc
mov
or
push
mov
(bad)
pop
imul
jns
ss
das
cwde
xchg
cdq
stos
cmp
sbb
ret
(bad)
mov
dec
and
fwait
pop
push
cmp
pop
loop
pop
lea
or
int3
xor
and
xchg
cmp
pop
mov
cld
call
sbb
mov
loope
xlat
cmp
jg
add
popf
fldcw
test
dec
retf
pop
sbb
xor
in
nop
shr
fcmovne
stos
mov
test
or
mov
inc
cmps
bound
dec
es
push
inc
push
loop
sti
sahf
int3
fsub
add
scas
icebp
mov
add
out
xchg
xor
pop
xchg
xchg
cmps
adc
jo
cmps
xchg
(bad)
pop
aas
jle
mov
fcomp
cld
popf
jle
jmp
inc
add
(bad)
xchg
ror
in
mov
popa
dec
lods
das
mov
cmp
pop
push
pop
mov
pop
inc
mov
popf
jbe
shr
dec
push
lahf
ss
pop
addr16
xchg
xor
and
into
and
and
push
adc
mov
repz
(bad)
adc
pcmpgtb
xor
stos
ja
mov
pop
inc
xchg
movs
test
mov
jg
xor
mov
movs
adc
and
stos
push
aas
xchg
inc
dec
xchg
pusha
cmp
cli
add
add
test
fist
mov
add
outs
cmps
sti
dec
dec
jae
jo
pop
das
jle
nop
pushf
push
repnz
xchg
mov
and
xchg
ins
mov
push
(bad)
jg
stos
and
mov
mov
popf
jb
mov
test
stc
inc
rcl
(bad)
xchg
add
jnp
adc
je
cmp
xchg
jmp
and
inc
js
sub
or
add
mov
mov
adc
pop
fsub
movs
stos
js
dec
imul
push
or
and
sbb
mov
xchg
dec
pop
mov
xor
sub
js
push
push
xchg
pop
xchg
xor
scas
ja
inc
mov
ret
test
jp
xchg
in
mov
xchg
pop
cmp
js
pop
mov
lea
arpl
test
leave
cmp
inc
mov
(bad)
sar
and
cmp
pop
pop
sub
out
sbb
mov
test
ret
or
int3
shrd
mov
pop
xor
ins
sub
push
mov
sbb
in
retf
sbb
movs
add
sub
dec
jle
rol
stos
inc
in
dec
stos
cmp
mov
push
mov
push
and
fistp
push
repnz
stos
xchg
loope
repz
jae
jb
loop
add
shl
ss
nop
jbe
(bad)
push
jge
pslld
enter
pop
pop
mov
fnstenv
loopne
dec
ror
adc
cmp
int3
cmp
(bad)
aaa
push
pop
sbb
mov
cmp
inc
les
jbe
inc
push
out
mov
(bad)
jg
adc
sbb
push
jecxz
pop
pop
add
fild
xor
pop
mov
or
xor
push
aad
dec
cwde
jno
add
xchg
jmp
or
xor
adc
scas
jmp
push
ins
fwait
pop
out
cs
pop
mov
dec
cmc
nop
test
jns
cmc
push
push
dec
popf
sub
(bad)
arpl
sub
rcl
cdq
test
aad
mov
gs
inc
xor
or
and
jl
or
push
arpl
mov
adc
fnsave
xlat
sbb
sbb
movs
int
mov
mov
(bad)
cmp
mov
lods
pop
and
mov
jle
sbb
mov
sub
stos
jecxz
cmp
lock
mov
cmp
popf
scas
fwait
aas
aaa
jl
aaa
inc
xlat
xchg
push
(bad)
mov
popa
(bad)
jle
int
xchg
dec
pop
pop
push
push
dec
out
xor
sbb
push
sbb
leave
aaa
mov
dec
inc
mov
pop
jle
mov
(bad)
icebp
outs
(bad)
repz
(bad)
cmp
jb
pop
test
xor
or
mov
mov
cmp
dec
cli
scas
fistp
mov
std
in
out
or
inc
repnz
or
js
pop
jne
js
mov
sub
and
cld
mov
mov
in
push
push
inc
loopne
mov
lahf
scas
inc
ror
mov
dec
(bad)
or
popf
dec
inc
adc
test
outs
mov
pop
jae
call
je
mov
jg
scas
fistp
jne
das
in
sub
movs
in
add
ficomp
xchg
push
imul
push
fwait
fwait
cwde
push
pop
fs
mov
add
jp
call
fisub
dec
or
ja
je
bound
test
enter
mov
jge
mov
imul
pop
(bad)
out
loopne
add
xor
pop
dec
inc
mov
arpl
dec
pop
rcl
mov
xchg
lock
repnz
mov
mov
cli
retf
cli
pop
adc
and
cmc
(bad)
mov
mov
iret
fidivr
inc
test
mov
sbb
enter
jae
jmp
push
mov
lods
pop
fsubr
adc
idiv
dec
cdq
jl
mov
aas
movs
fstp
(bad)
fistp
pop
add
push
ins
adc
lods
mov
inc
sar
fld
and
mov
test
and
pop
push
rol
xor
xlat
jns
bound
jns
loope
aaa
loop
lods
cmp
xor
adc
push
mov
add
int
not
xchg
ja
cmp
mov
in
movs
dec
mov
aam
sub
das
xchg
aas
hlt
popf
repnz
sbb
out
cld
lods
push
dec
push
sahf
sbb
xchg
mov
xchg
inc
pop
mov
jp
mov
pop
pop
imul
lods
adc
cmps
inc
sub
sbb
pop
or
pop
mov
sub
push
jne
xor
jb
sbb
dec
mov
mov
ss
xchg
ins
repnz
mov
repz
sub
pop
and
xchg
mul
xchg
pop
aam
push
pushf
sbb
test
sar
cwde
fs
(bad)
retf
xchg
or
mov
mov
adc
jno
sub
mov
aaa
sahf
push
cld
xchg
pop
ds
adc
sub
and
sar
loope
js
repz
sbb
add
dec
mov
push
jno
mov
xor
cld
test
shl
jp
pop
call
jb
jo
xchg
jmp
mov
dec
in
outs
(bad)
add
dec
mov
sbb
xchg
mov
neg
(bad)
sar
into
es
mov
test
fsub
fwait
xchg
leave
inc
or
fwait
jo
(bad)
sbb
dec
jg
aaa
popf
aad
jmp
movs
push
cld
loopne
aam
xlat
xchg
loope
mov
js
mov
cmp
(bad)
fdiv
lods
mov
xchg
dec
inc
inc
adc
add
popf
scas
inc
jge
and
cmps
stc
push
sub
mov
mov
dec
sub
cmp
loope
(bad)
(bad)
stc
add
add
mov
or
(bad)
bnd
push
pop
push
sub
xchg
imul
sub
pop
adc
jo
cmp
(bad)
pop
mov
fwait
int
add
les
iret
mov
mov
jmp
ins
mov
idiv
jae
icebp
ds
mov
jecxz
test
jl
scas
mov
cmp
loop
sbb
cld
loopne
nop
add
jo
retf
ret
adc
push
outs
xor
je
ror
cmp
jg
outs
fcom
mov
pop
pop
sub
xchg
mov
push
pop
mov
pop
mov
mov
mov
ins
arpl
jo
jge
gs
sub
and
mov
bound
dec
push
out
xchg
pop
inc
inc
pop
or
in
dec
das
test
mov
stc
(bad)
or
adc
sbb
mov
push
inc
fmul
pop
pop
stos
xor
xchg
dec
out
pop
les
cmp
cmc
test
cmp
pop
test
out
push
mov
imul
iret
push
shl
les
cmps
cdq
sbb
mov
(bad)
jmp
jg
mov
or
push
ret
int3
add
aaa
fisubr
and
stc
inc
ficomp
movaps
mov
scas
mov
and
rol
outs
adc
aad
fidiv
dec
mov
std
dec
call
dec
out
js
adc
xchg
mov
cld
sbb
mov
je
popf
cwde
test
or
push
push
cdq
jmp
add
jmp
das
shl
pop
jno
mov
lods
(bad)
xor
and
pop
rcr
ss
idiv
jb
dec
pop
cld
mov
push
pop
(bad)
sub
xchg
out
rol
dec
mov
shl
add
out
loop
jmp
sbb
ds
xchg
sub
xchg
in
inc
outs
add
daa
pop
aas
in
out
stc
cmps
jnp
adc
es
add
sbb
imul
dec
mov
push
jmp
ret
adc
adc
mov
scas
pop
xor
out
or
inc
ret
jne
or
mov
iret
std
and
je
int
sbb
sbb
jno
out
mov
imul
mov
scas
add
mov
addr16
daa
mov
and
mov
mov
push
add
aas
push
mov
sub
adc
push
jecxz
dec
test
out
pop
jne
test
js
and
mov
inc
pop
fsub
pop
adc
add
stos
mov
cmp
dec
data16
sbb
mov
pop
shl
mov
mov
arpl
inc
call
or
push
imul
and
aas
cmp
cmovg
fsub
gs
cmovs
cwde
je
mov
push
ins
loopne
xchg
ja
out
adc
std
sbb
jmp
in
nop
mov
mov
(bad)
int
ret
aam
mov
aam
xchg
test
fwait
dec
scas
leave
cmp
idiv
(bad)
adc
test
inc
into
or
in
daa
lds
mov
sbb
out
pop
out
loope
fmulp
outs
mov
mov
adc
xlat
pop
push
add
dec
xchg
xor
add
ja
mov
jg
push
mov
cs
(bad)
fisubr
clc
xchg
addr16
cmp
pusha
cmp
sbb
ds
jnp
push
or
(bad)
mov
mov
scas
jo
mov
int
add
dec
(bad)
mov
movs
mov
jmp
mov
add
fs
jne
pop
adc
dec
and
sbb
dec
or
push
sub
jmp
ficomp
mov
inc
stos
cmp
push
aam
sbb
pop
pop
mov
add
je
nop
out
pop
mov
jg
test
lock
mov
mov
(bad)
adc
sub
outs
ds
inc
xchg
inc
cmp
xor
sub
ror
loop
daa
xchg
es
pop
sbb
lods
in
xchg
mov
dec
sub
imul
fwait
jo
cmp
(bad)
mov
inc
cli
xor
cmp
mov
je
ja
cdq
sub
outs
pushf
das
mov
mov
popw
add
jbe
(bad)
aam
ret
add
xchg
arpl
mov
xchg
push
mov
jp
je
dec
jmp
ficom
jbe
and
push
pop
mov
inc
inc
add
sub
mov
arpl
out
push
pop
test
loopne
inc
sub
jo
mov
and
cwde
sbb
sbb
sbb
sar
cmps
jecxz
icebp
stos
jg
push
js
xchg
pop
call
pop
outs
jae
sbb
xchg
iret
data16
sub
mov
cmps
shr
in
jb
dec
cmp
cmp
add
adc
test
push
mov
out
cmps
cld
jl
and
jnp
ret
xor
call
mov
inc
bound
xchg
les
test
cli
sbb
fwait
adc
(bad)
jle
in
push
retf
adc
popf
pop
jae
call
pushf
imul
pusha
add
cmp
dec
jmp
pop
sbb
mov
push
xchg
jo
fld
sub
outs
jl
iret
bound
xchg
xchg
pop
mov
in
shl
fdiv
adc
dec
aas
in
arpl
mov
ret
jae
imul
hlt
xchg
inc
out
mov
push
xor
fldenv
icebp
(bad)
hlt
int3
movs
mov
test
and
ja
(bad)
outs
inc
fimul
add
dec
mov
sahf
daa
inc
inc
inc
sbb
push
sub
bound
imul
or
adc
pushf
aam
push
pop
xchg
mov
xchg
xchg
gs
sbb
fcmovb
cmp
addr16
push
jb
jp
cmps
out
sti
call
or
or
in
addr16
push
hlt
pop
cwde
adc
mov
mov
add
jno
outs
sahf
call
outs
jne
jle
dec
pop
sar
pop
fisttp
dec
mov
mov
repz
bound
mov
out
test
mul
or
lods
jg
inc
xchg
mov
cmps
sbb
jnp
sub
arpl
mov
or
adc
mov
mov
arpl
jb
sub
ret
mov
inc
inc
inc
lock
ja
icebp
sub
adc
xchg
jae
xor
adc
cli
mov
xor
in
jp
xchg
pop
push
out
push
xor
fist
adc
ror
push
mov
imul
aaa
test
push
cwde
into
jbe
xchg
inc
pop
(bad)
sbb
leave
inc
add
leave
icebp
pusha
push
retf
fs
pop
adc
xlat
mov
popf
cmps
std
xor
in
arpl
pusha
jl
add
mov
sbb
sub
out
dec
dec
shl
pop
(bad)
int
lods
dec
xor
test
(bad)
and
fwait
push
xor
sub
test
stos
in
add
mov
push
lahf
dec
cld
in
nop
(bad)
inc
and
add
sub
mov
adc
push
cmp
fst
jmp
and
fwait
sbb
inc
add
nop
jp
scas
neg
add
xchg
fwait
adc
daa
adc
out
adc
pop
nop
pop
mov
push
imul
adc
movs
add
retf
bnd
mov
mov
xor
cmp
hlt
jbe
lahf
mov
mov
sub
shr
jmp
inc
mov
xchg
push
or
sti
jg
(bad)
adc
(bad)
cs
popf
cwde
fld
popa
jge
dec
mov
jne
jmp
fsubr
dec
inc
pushf
fs
cs
mov
mov
rol
out
mov
xchg
cmp
cmp
sti
es
(bad)
sbb
push
pop
and
mov
(bad)
mov
push
aas
icebp
or
retf
mov
cmp
xchg
movlps
and
iret
sub
inc
dec
xor
loopne
pop
int
mov
cmp
push
rcl
push
inc
push
fcom
clc
xor
cmps
fisubr
iret
loope
xchg
xor
iret
dec
ins
std
dec
js
xchg
mov
int
int
jp
clc
sbb
sub
push
cwde
leave
adc
adc
cmps
lea
dec
and
dec
test
push
scas
imul
xchg
cmp
(bad)
cmp
imul
mov
in
fidivr
cmp
sbb
jle
push
test
cli
sub
cmp
cmp
sbb
out
push
xchg
push
ja
jp
scas
pop
imul
cmps
jge
push
mov
movs
sbb
aad
icebp
xchg
inc
arpl
test
jo
xchg
add
pop
(bad)
jmp
sub
cmp
in
mov
push
inc
ret
jo
xchg
outs
cwde
(bad)
jbe
jmp
sbb
inc
cli
mov
mov
sbb
and
mov
dec
inc
call
mov
(bad)
loopne
int
add
fs
mov
adc
rdpmc
mov
in
outs
lock
adc
test
and
pushf
mov
adc
ins
adc
xchg
loope
cmp
adc
and
mov
cmps
xor
adc
neg
sbb
mov
cmp
popa
aad
cs
push
ds
jmp
inc
adc
das
xchg
inc
fcmove
fst
fs
push
dec
scas
xlat
or
sahf
push
pushf
xor
das
sub
push
mov
jbe
(bad)
xlat
sti
pop
cmps
cmps
lods
aad
adc
xchg
fs
out
dec
dec
repnz
dec
mov
jge
jo
cmps
out
enter
xchg
out
out
cmp
xor
add
sbb
pop
cs
fcomp
ins
enter
in
popf
sub
jb
pop
xor
mov
cli
sub
inc
and
(bad)
xor
push
pop
sub
sub
cmp
adc
add
xchg
repnz
mov
bound
dec
ins
mov
mov
pop
(bad)
jg
movs
add
pop
neg
add
pop
pop
pop
xchg
es
sub
xor
xchg
mov
call
fcomp
(bad)
fild
inc
xor
mov
mov
repnz
sbb
dec
mov
arpl
add
pop
and
out
idiv
inc
jnp
je
imul
pop
pop
jne
lea
cmp
(bad)
adc
mov
adc
ja
jbe
in
push
sar
imul
xchg
dec
lea
xchg
xchg
hlt
(bad)
jns
mov
clts
pop
sub
cmp
movs
and
cli
and
pop
mov
(bad)
shl
inc
cmp
adc
xor
imul
shl
sti
scas
cdq
stos
clc
pop
or
cmp
test
cmp
mov
pop
sub
popf
outs
inc
push
dec
xchg
dec
and
and
pop
pop
loope
pop
mov
and
lea
pop
in
inc
jb
lds
nop
mov
loope
repnz
gs
sub
retf
sub
push
adc
(bad)
cdq
cmp
sub
sbb
mov
pop
mov
dec
fisub
pop
cli
or
sub
hlt
cwde
test
leave
mov
sub
loop
adc
mov
jo
aad
cs
cmp
inc
(bad)
xor
sub
push
fdivr
mov
aaa
adc
call
jo
popf
outs
and
cmp
jae
jae
test
jmp
adc
push
mov
test
xacquire
jno
jno
xor
jge
sub
pmaxub
or
and
xlat
mov
data16
out
inc
in
mov
fwait
inc
pop
prefetch
or
xor
mov
push
mov
or
sub
dec
adc
xchg
movs
inc
add
push
shl
add
je
mov
adc
push
movs
add
outs
inc
icebp
cmp
dec
icebp
je
push
cmp
call
(bad)
shl
nop
xchg
jmp
jne
test
js
and
mov
ins
repz
sbb
loopne
pushf
repz
add
mov
sub
mov
push
daa
inc
cmps
or
fmul
cmps
cmp
mov
fmul
aad
and
(bad)
mov
mov
cmp
or
sub
adc
sbb
cli
imul
push
push
int
jg
jb
or
aam
jmp
jl
jbe
sbb
into
and
stos
inc
jno
hlt
into
retf
lock
adc
pop
mov
test
pop
mov
in
in
in
lock
arpl
xor
add
jnp
stc
retf
mov
mov
hlt
mov
sti
pushw
pop
cmp
jmp
sbb
(bad)
cmp
scas
ds
loop
adc
xlat
pop
mov
adc
sar
mov
push
(bad)
aad
imul
inc
cmp
push
mov
push
and
xor
xchg
jmp
xchg
sub
sahf
xchg
not
gs
mov
inc
inc
jmp
inc
out
js
pop
mov
adc
ficomp
cdq
shr
test
mov
aaa
seta
ss
jb
xor
push
jge
adc
es
mov
cmp
sbb
mov
sub
xor
push
sbb
cdq
pop
dec
dec
(bad)
adc
call
adc
adc
jge
arpl
lds
push
outs
imul
push
daa
inc
cmps
mov
pop
test
xor
imul
cld
pop
jg
and
stc
lods
add
xchg
or
rcl
hlt
clc
ins
test
dec
push
test
cmp
movs
js
test
jmp
jge
jg
mov
jmp
repz
mov
fucomip
(bad)
xchg
arpl
aam
adc
enter
pop
cld
les
adc
inc
aam
dec
in
inc
(bad)
icebp
rcr
and
cmc
sub
sbb
fcom
psubsw
push
enter
push
dec
cli
mov
clc
retf
retf
es
xchg
bound
nop
dec
stos
push
mov
pop
in
xor
(bad)
push
push
scas
scas
aas
mov
push
sub
and
or
nop
mov
fild
into
add
sbb
adc
sbb
fild
pop
or
adc
push
sbb
and
mov
test
lahf
jb
pop
add
stos
popa
ins
popa
mov
pop
fdiv
loop
mov
mov
mov
xchg
push
push
adc
not
and
retf
xor
xor
mov
dec
aaa
mov
in
cmp
test
repnz
push
or
fld
ins
cli
cli
jo
cmp
leave
xchg
repnz
pushf
push
imul
xchg
jne
inc
push
aaa
cs
sbb
push
push
lea
fisubr
add
fstp
neg
imul
sbb
adc
call
adc
push
stos
jmp
(bad)
(bad)
push
xor
leave
outs
(bad)
scas
(bad)
jmp
dec
cmps
clc
add
cmp
jnp
ret
movs
cmc
and
bound
js
lods
sub
das
arpl
hlt
mov
inc
ret
fwait
inc
fimul
push
int3
jb
mov
daa
jnp
cli
push
fst
idiv
fsubrp
(bad)
in
add
add
push
loope
push
add
popa
or
add
pop
mov
mov
jg
push
sbb
out
inc
test
in
rcr
movs
aaa
ror
aam
ret
test
aad
xchg
fs
stos
add
push
ins
mov
ja
ret
daa
adc
ss
cmp
mov
sbb
push
loope
ret
pop
fs
xchg
cdq
xchg
fadd
mov
add
test
xchg
out
fstp
push
fiadd
cwde
test
mov
xlat
cli
mov
mov
scas
or
dec
add
mov
pop
cmp
or
cmp
dec
out
ss
mov
adc
jmp
add
retf
xchg
mov
cmovno
lods
jecxz
adc
mov
fsub
stos
adc
mov
fwait
mov
mov
aaa
hlt
inc
test
push
in
dec
pop
xchg
jb
scas
stos
jno
aas
lea
mov
xor
lahf
arpl
dec
stc
and
xchg
int3
mov
das
mov
cmp
pop
movs
daa
xchg
pop
xchg
fnsetpm(287
ror
hlt
jg
adc
sub
sub
inc
sbb
mov
vpaddb
sbb
dec
das
aad
cwde
sub
in
xor
add
data16
pop
jne
mov
in
fs
arpl
pop
and
jle
inc
out
jg
push
(bad)
cmps
jge
test
sub
retf
cmp
ins
xchg
sub
push
std
push
ret
cmps
or
sti
xchg
(bad)
je
xor
fidiv
sbb
adc
xor
cld
xchg
push
jmp
cmp
xchg
inc
sbb
cmp
jge
daa
mov
(bad)
mov
sub
or
mov
sub
(bad)
ja
outs
add
add
add
loope
mov
sar
(bad)
cmp
jae
pushf
adc
daa
je
(bad)
mov
mov
sar
rdtsc
(bad)
mov
in
jne
outs
pop
and
jecxz
pop
jl
mov
sbb
sub
(bad)
push
aaa
in
es
add
push
aad
aad
rcr
pop
outs
inc
dec
xor
adc
aam
cmps
pushf
cdq
cli
adc
scas
shl
(bad)
jbe
mov
movs
adc
data16
xlat
xchg
adc
lds
and
pop
mov
inc
xor
addr16
xor
xchg
cdq
push
stos
mov
lock
aam
bound
push
outs
test
arpl
shl
cld
pop
fadd
dec
ins
mov
jmp
(bad)
dec
or
and
push
and
xchg
xor
add
xchg
test
mov
movs
sahf
xchg
sub
hlt
call
jb
fstp
inc
or
mov
inc
mov
sub
pop
rcl
dec
xor
aas
pop
in
add
xor
pop
mov
repnz
and
mov
mov
pop
popf
imul
pop
out
sub
pushf
lea
out
adc
in
frstor
mov
std
sub
add
fisub
jl
xchg
fs
cdq
fild
mov
shr
retf
ins
and
cmp
sti
fdivrp
pop
cmp
out
out
mov
sub
pop
jp
mov
jmp
push
fisub
jae
adc
lods
push
stc
fisub
inc
add
stos
ror
push
sub
retf
jl
leave
or
or
retf
push
pop
sbb
push
out
ret
cmp
(bad)
add
or
push
sub
jns
cmps
rol
aaa
pop
mov
movs
ficom
cmp
in
mov
pop
inc
xor
outs
aad
pop
cmp
add
jle
dec
add
mov
mov
push
fild
sub
setg
lods
and
pop
lock
inc
lods
icebp
(bad)
je
mov
popa
je
ss
sub
clc
jnp
ja
mov
test
dec
and
mov
nop
or
inc
call
and
xchg
mov
inc
cwde
in
cmp
xchg
enter
dec
push
js
icebp
addr16
jbe
xchg
sbb
bnd
lahf
push
push
ss
add
mov
adc
push
sbb
jmp
adc
and
jg
fbstp
mov
inc
cli
xchg
fdivr
scas
cmp
imul
sub
or
xrelease
nop
sbb
inc
sub
sti
sub
cmps
(bad)
out
jg
or
xchg
iret
js
ror
jbe
cmc
es
sbb
cmp
pusha
push
rol
or
push
xor
jno
jns
lahf
jns
cs
mov
jl
call
out
bound
cld
add
push
sar
cmc
test
cmp
ret
mov
jnp
loopne
mov
loope
pop
jno
retf
sti
test
sbb
sub
pop
mov
sub
(bad)
or
jno
mov
inc
es
mov
leave
jmp
nop
jne
jmp
dec
mov
in
arpl
loopne
pop
push
in
add
dec
fsubr
scas
cld
inc
ror
sub
jne
retf
push
push
shr
xchg
and
and
mov
xchg
loope
or
ret
shl
cli
sbb
sbb
ins
out
stc
mov
jg
imul
xchg
sub
(bad)
adc
iret
js
icebp
jbe
mov
stc
inc
push
cmps
sub
jbe
div
stos
pop
xchg
xor
push
sti
sbb
cli
xor
cmp
or
sbb
cmps
popa
daa
and
popf
hlt
(bad)
fisttp
outs
loope
sbb
hlt
ss
push
push
push
xchg
(bad)
(bad)
(bad)
sub
jge
sbb
jg
jno
pop
push
rcr
push
mov
mov
add
xchg
lods
scas
or
(bad)
xchg
dec
push
sub
jge
jp
lds
xchg
dec
mov
or
inc
push
popf
cmps
xor
les
out
sbb
movs
inc
out
mov
and
es
or
test
sar
cmp
sub
jb
sbb
loope
movs
xor
mov
retf
push
jbe
mov
movs
mov
clc
or
rcr
rcr
in
dec
scas
sub
xchg
mov
push
sub
cmp
fdivr
xchg
push
jb
cld
loope
sub
mov
mov
stos
test
call
xchg
imul
sub
add
jp
and
pop
test
ror
aad
stos
lods
inc
lahf
int3
mov
jmp
xor
loop
cmp
out
pop
sbb
jp
mov
inc
pop
mov
add
jb
adc
ja
(bad)
cmp
inc
sub
test
shr
jo
je
nop
mov
outs
test
mov
xchg
push
sub
fs
xchg
scas
jp
scas
push
aad
or
add
dec
in
sub
bound
call
dec
ins
cmps
and
aad
or
and
jnp
add
cmp
dec
arpl
add
test
aad
xor
pusha
not
fwait
aam
ds
cwde
xor
loope
jmp
mov
adc
cdq
jno
adc
shl
sub
popf
jmp
jbe
inc
cmp
xchg
dec
stos
loope
cmp
jmp
and
lea
jb
cmp
mov
sar
and
cwde
aad
inc
das
neg
retf
dec
pop
jno
or
xchg
stos
dec
aad
xchg
mov
leave
sti
cwde
mov
test
and
and
push
stos
mov
dec
add
or
xchg
mov
cli
(bad)
lods
sbb
test
les
and
cwde
jl
mov
pushf
push
std
(bad)
sub
lahf
ror
repz
movs
cmps
popf
mov
int3
jnp
lods
inc
push
shl
push
or
int3
inc
xchg
dec
in
in
stos
into
jb
inc
aad
xchg
in
mov
lods
cwde
sub
push
jbe
pop
cmp
fld
retf
or
cmp
fist
add
mov
data16
mov
stc
lds
mov
(bad)
movs
mov
jecxz
push
mov
mov
shl
xchg
popa
retf
(bad)
fisub
push
outs
cmp
add
cmp
xor
(bad)
xchg
mov
test
xchg
add
xchg
sti
in
xchg
add
or
cdq
jmp
mov
dec
inc
inc
popf
or
sbb
sbb
mov
dec
test
sbb
sub
loope
add
dec
aad
adc
ins
ret
popa
add
scas
sbb
add
ja
(bad)
push
adc
ins
dec
ret
test
mov
bound
jmp
mov
rcl
enter
enter
jg
cwde
cmovg
mov
sbb
sbb
js
movs
mov
pushf
mov
cmc
rcr
loope
pop
dec
in
daa
retf
cs
cwde
sar
inc
xchg
or
push
and
int3
mov
loopne
neg
lods
adc
sub
add
pavgb
imul
enter
in
sar
sbb
adc
(bad)
mov
aas
call
cmc
pop
(bad)
shl
lea
xchg
add
stos
inc
(bad)
dec
cmp
inc
fwait
add
and
mov
jle
xlat
xlat
inc
das
add
mov
imul
arpl
cld
jns
fwait
adc
rcl
inc
xchg
cmp
dec
std
xlat
rol
jnp
or
dec
lahf
sub
rcr
push
jp
cmps
cmp
xlat
test
jns
sbb
mov
cs
scas
adc
jle
and
test
jae
jmp
test
mov
leave
push
adc
inc
pop
xchg
and
cmp
fstp
adc
or
push
stos
jo
into
lea
jnp
xchg
push
push
lods
rcl
sbb
and
out
out
push
cwde
out
mov
mov
adc
cmc
sar
or
(bad)
add
sbb
imul
xor
icebp
hlt
scas
imul
push
inc
and
cmp
cmp
xor
ficom
outs
pop
adc
push
stos
repz
and
cmp
push
and
dec
push
dec
lahf
sub
dec
and
ds
push
mov
push
(bad)
mov
cmp
test
stos
hlt
pop
out
(bad)
movzx
mov
add
dec
nop
cmp
xor
push
mov
inc
inc
xchg
shl
xchg
in
jmp
jns
test
lods
cmp
cli
jb
xchg
enter
xchg
fdiv
xchg
and
jmp
not
sbb
mov
in
outs
or
out
push
mov
lea
loop
cdq
or
(bad)
jmp
fld
cmp
int3
xchg
fwait
pusha
std
cmc
add
jbe
cld
push
pop
int
lods
xlat
je
adc
stos
inc
repnz
xor
retf
es
and
(bad)
xor
cmc
in
adc
sbb
stc
aaa
aaa
xlat
call
cmps
push
fiadd
lea
sub
xchg
loop
in
pop
stc
idiv
retf
call
inc
xchg
scas
xchg
mov
inc
or
push
jmp
cmp
test
out
out
std
pop
push
ds
sti
pop
imul
loopne
repz
loopne
dec
or
add
pop
hlt
or
and
repnz
into
adc
pusha
cli
in
jo
inc
pusha
test
cmp
mov
push
xor
das
(bad)
cmps
sub
fnsave
enter
cmps
scas
pusha
jne
add
or
pop
nop
fidivr
cld
xlat
dec
repnz
sbb
or
jmp
imul
sbb
xchg
or
sbb
(bad)
mov
add
movs
jns
jns
xor
pop
sbb
add
lahf
daa
dec
jns
inc
xchg
lahf
dec
dec
les
push
movs
adc
loopne
js
bound
push
jne
in
cmp
adc
aad
inc
popf
xor
out
inc
inc
dec
jne
fiadd
jmp
or
shl
jbe
(bad)
cmps
ror
enter
imul
mov
out
jmp
out
push
push
sbb
mov
push
int
pop
push
bswap
or
fs
cmp
into
(bad)
xor
push
inc
cli
aam
mov
sahf
test
cmp
xor
aad
mov
dec
fisubr
jae
in
popa
push
or
xor
pop
push
imul
and
out
mov
mov
das
dec
xlat
mov
push
jecxz
js
pop
xor
jecxz
(bad)
xchg
int3
cmp
jnp
jmp
add
xchg
mov
push
pop
addr16
adc
or
nop
xchg
scas
inc
outs
jg
cmp
mov
adc
data16
dec
fst
(bad)
test
push
xchg
cmp
mov
(bad)
les
outs
test
dec
mov
inc
(bad)
outs
jns
pushf
push
fnstsw
cmp
xchg
xor
xchg
jno
dec
repz
inc
cdq
stos
jo
scas
retf
push
retf
jle
ja
test
lods
adc
xor
lods
mov
cmp
rol
call
sub
pop
and
mov
aam
outs
aas
xor
into
out
mov
(bad)
lea
jns
add
mov
mov
sbb
xchg
inc
and
dec
mov
cmp
push
xchg
xor
aad
mov
(bad)
jge
rcr
fiadd
mov
sti
gs
lock
jge
xchg
sbb
sti
inc
icebp
ret
dec
pop
push
or
lea
loop
dec
dec
pop
dec
test
cmp
inc
xchg
dec
inc
cmp
xchg
jecxz
xchg
(bad)
jmp
fdivr
add
push
dec
gs
ret
jnp
xlat
js
jmp
lods
inc
inc
dec
test
mov
imul
test
dec
enter
xor
push
in
hlt
cs
or
test
out
xor
lea
sub
sbb
lods
jmp
xor
dec
bound
jmp
mul
pop
cmp
push
lahf
(bad)
mov
ins
pop
not
cli
and
(bad)
cld
cmp
rdtsc
add
pop
cli
xor
fwait
arpl
fdiv
into
stos
mov
outs
outs
scas
shl
jle
or
add
repz
aad
retf
jne
mov
and
arpl
stos
fmul
xchg
mov
mov
lods
jge
ja
and
xchg
lods
test
call
mov
xchg
jl
test
sub
mov
xchg
push
pushf
lahf
sub
add
repnz
outs
inc
inc
(bad)
out
cwde
lods
std
das
sar
and
dec
xchg
lea
jge
jno
icebp
mov
jo
xor
mov
int
dec
nop
add
dec
repnz
fst
mov
in
pmulhuw
or
loopne
add
rcl
outs
add
adc
inc
sbb
ret
mov
cmp
fdiv
jns
data16
lods
(bad)
pop
sbb
(bad)
pusha
je
mov
xchg
cs
mov
repz
sub
lds
push
cmp
ret
mov
outs
adc
ret
mov
push
dec
inc
imul
dec
pop
jnp
push
and
jmp
cld
mov
pop
rol
jecxz
sbb
test
pop
dec
xor
ret
mov
mov
in
into
jb
push
ds
sub
aad
dec
ja
rol
add
es
out
xor
jns
push
test
inc
dec
xchg
lock
cld
add
xchg
icebp
adc
fbld
scas
stos
pop
xchg
xchg
pop
pop
xchg
sbb
push
sbb
sbb
sbb
xor
push
(bad)
mov
and
outs
out
in
(bad)
mov
jg
scas
les
lods
aam
jge
fwait
jmp
out
mov
dec
pop
mov
dec
or
mov
aaa
jmp
mov
add
or
fisub
xchg
jge
xchg
push
pusha
ret
test
xor
dec
test
xchg
jne
dec
lods
or
mov
(bad)
adc
sar
stc
pop
xchg
mov
ds
(bad)
mov
sbb
pop
ror
cmp
pushf
mov
gs
push
push
repnz
test
jmp
daa
sti
sbb
jl
imul
sub
call
add
outs
inc
call
mov
dec
or
ret
test
sti
add
adc
(bad)
shl
fldcw
lods
mov
hlt
cs
in
dec
push
dec
addr16
aaa
or
fiadd
push
and
fxch
pop
mov
(bad)
pop
sahf
mov
or
pop
lock
jg
push
jne
dec
adc
lds
xor
repz
data16
jbe
lods
cld
push
mov
xchg
mov
mov
pop
adc
scas
xchg
mov
loop
aaa
jb
shl
mul
push
popf
iret
xchg
jg
neg
inc
repz
stos
lea
xchg
dec
pushf
mov
ja
add
out
and
mov
adc
sbb
cmps
mov
stc
cmp
lods
jmp
dec
fcmovu
dec
fldenv
push
ret
pop
pusha
xchg
ret
scas
jl
inc
push
enter
inc
(bad)
mov
and
ins
movs
inc
aam
out
cmp
ror
pop
mov
fxtract
adc
add
es
cli
jmp
aas
gs
pop
dec
fist
loop
test
cmp
(bad)
mov
ds
hlt
test
cmp
pop
cld
pop
xor
cdq
daa
or
imul
xor
jmp
ja
fist
movs
inc
stos
std
xchg
push
mov
xlat
mov
test
or
inc
push
out
ds
mov
(bad)
and
pop
imul
fst
ret
dec
jb
movs
jmp
mov
stc
adc
jl
adc
mul
mov
dec
cmp
(bad)
call
movs
mov
push
mov
sbb
dec
sub
les
sti
mov
dec
jmp
or
fsubr
push
mov
xchg
or
int3
and
jns
fsub
mov
fmul
push
pop
jo
stc
ss
in
loopne
dec
je
test
movs
out
pop
pop
xor
rcr
scas
stc
lds
bound
je
push
pcmpgtb
adc
sbb
(bad)
adc
je
jnp
push
mov
mov
pop
jne
bound
lods
sub
int
push
xchg
in
or
inc
lea
adc
jmp
jb
ja
pop
and
cld
gs
push
cmp
jmp
xchg
aaa
stc
scas
les
xchg
push
dec
(bad)
pop
ja
mov
mov
lea
cmp
dec
inc
idiv
add
xor
out
mov
pop
jecxz
into
adc
repnz
jo
pop
push
retf
aaa
sub
call
into
test
push
xor
retf
and
mov
je
les
xchg
xchg
or
xor
test
fistp
ror
push
fs
jno
xor
adc
and
adc
ret
or
cmc
mov
jnp
add
adc
nop
out
addr16
bound
jno
xchg
jo
mov
retf
jmp
xor
jo
add
ffree
fbstp
leave
(bad)
cmps
pop
ret
pop
scas
into
xchg
or
pop
je
retf
ins
xchg
xchg
rcl
in
gs
mov
fcomp
add
sub
mov
mov
sub
dec
or
mov
mov
jge
js
inc
repnz
ret
jp
push
xor
sar
xlat
push
dec
lock
dec
daa
dec
mov
dec
or
(bad)
in
mov
iret
lahf
fnstsw
mov
sar
adc
adc
dec
dec
jle
je
not
icebp
inc
loop
adc
shr
ins
add
in
cmp
pop
inc
sbb
mov
add
inc
or
(bad)
retf
fist
add
in
outs
in
sbb
imul
xchg
cmps
pop
mov
dec
inc
jns
push
lock
jo
xchg
(bad)
into
(bad)
push
movs
inc
aam
movs
pop
xor
cmp
test
mov
sbb
push
add
push
dec
inc
xor
movs
jle
fstp
mov
dec
in
mov
imul
sub
mov
cmps
mov
ds
adc
push
in
and
or
sahf
mov
pop
aam
push
out
jbe
imul
pop
cmps
push
scas
mov
jmp
rcl
dec
leave
loopne
retf
jge
dec
ret
loopne
sub
daa
jl
mov
jmp
ss
mov
in
test
push
sub
stos
(bad)
xchg
test
adc
cs
or
mov
mov
xor
outs
sahf
jb
dec
xor
mov
inc
dec
xlat
lods
add
pop
pop
cmp
dec
rcr
push
push
cmp
and
push
mov
int
mov
fwait
out
xchg
cmps
ficom
int3
loope
mov
sbb
pusha
or
retf
jbe
and
add
cmp
les
inc
push
cmp
adc
push
aas
dec
rcl
cmps
push
fld
jmp
pop
sbb
xor
mov
sub
add
xchg
pop
aad
jb
ret
jge
mov
std
and
and
stos
cmps
mov
addr16
pop
(bad)
sub
nop
iret
rcl
push
xor
mov
push
xor
cmp
das
into
adc
jo
fidivr
fcomp
rol
sub
mov
loopne
and
pop
movs
jmp
jmp
push
out
out
aas
and
inc
loope
xchg
sub
add
cmp
xor
xor
sub
lds
call
mov
out
mov
hlt
call
jo
daa
sbb
sbb
or
xor
je
js
cmp
sti
xchg
fst
aam
in
cli
inc
sub
pop
fs
push
sub
or
adc
jmp
retf
or
and
pop
mov
sub
dec
rcl
test
and
xlat
push
ret
out
dec
divps
leave
idiv
mov
ins
sub
mov
mov
jo
test
mov
inc
pop
mov
xor
scas
add
sub
call
mov
in
dec
and
fidivr
pop
jmp
xchg
adc
int3
mov
aad
mov
movs
mov
push
ret
fsubr
add
adc
fdiv
fidivr
cld
inc
xchg
in
imul
int
xor
call
shr
les
je
mov
dec
jp
fidiv
adc
icebp
rcr
test
and
fistp
push
jb
cmp
mov
leave
xchg
inc
mov
sti
pop
or
sbb
retf
pop
loop
adc
inc
jbe
lock
fild
sar
add
fnsave
jle
xchg
add
das
cmps
jbe
movs
mov
xor
rcl
dec
and
mov
or
out
loope
jecxz
popf
sub
in
add
add
cmp
ins
call
cmp
enter
lods
gs
pop
xchg
or
sub
add
sahf
dec
stos
add
neg
push
mov
push
cmps
mov
rol
xor
inc
ds
cmps
push
and
and
idiv
jle
mov
loop
popa
mov
in
push
xor
sbb
xor
cmp
sar
hlt
add
fbld
push
dec
and
xchg
addr16
mov
cdq
cmp
mov
mov
mov
es
fs
stc
test
fwait
sub
pop
pop
fsubr
add
xchg
push
adc
ds
jecxz
jp
add
sbb
inc
xchg
adc
push
pop
and
div
mov
cmp
cmps
push
sub
hlt
fcomp
cmp
xchg
mov
add
jo
stos
popf
das
sti
push
mov
and
xchg
jb
std
inc
cmc
jnp
nop
sbb
fcomip
push
push
sub
xchg
das
in
shl
ret
dec
and
pop
iret
jmp
push
and
popf
and
cmp
jae
push
mov
xchg
sub
xor
adc
or
sbb
push
rcl
imul
lods
mov
xchg
jbe
xchg
mov
ja
inc
retf
aam
imul
and
cmps
or
adc
jns
mov
cmp
fwait
inc
add
inc
push
outs
rol
ficom
addr16
call
xor
cmp
jecxz
scas
mov
xor
out
xor
mov
arpl
mov
xchg
cmp
in
mov
xchg
pop
out
fcom
mov
or
pop
enter
stos
mov
sub
in
into
mov
fwait
js
sbb
sbb
cs
out
or
je
mov
xor
(bad)
fidivr
popf
loop
mov
cmp
jae
rsqrtps
xor
push
clc
inc
test
push
xor
bound
mov
ds
inc
dec
out
(bad)
call
enter
push
addr16
pusha
clc
push
jle
in
cmp
xor
scas
mov
into
mov
and
mov
pop
dec
ror
test
scas
fisttp
jb
fwait
xor
pop
out
jmp
adc
js
inc
pushf
les
ret
push
mov
neg
xchg
stos
add
fdivr
dec
mov
ds
ds
fisttp
or
cld
fisub
or
and
mov
lods
or
mov
cdq
mov
sbb
mov
dec
mov
out
and
nop
xor
stos
not
sub
pop
cmp
into
loop
mov
in
or
inc
aas
cmp
adc
push
js
ja
pushf
jecxz
add
jmp
jmp
mov
mov
js
and
mov
in
es
xor
bound
test
adc
rcr
xchg
call
xor
dec
idiv
(bad)
cmc
sbb
lahf
es
cmp
lahf
pop
test
jle
fisttp
and
push
sbb
jge
jmp
sti
or
cmp
inc
add
sub
mov
test
test
inc
xchg
pop
adc
mov
pop
cmc
fstp
jne
shl
movs
clc
mov
cmp
jb
xor
aas
fwait
aad
pushf
xchg
add
std
data16
jmp
sbb
mov
in
pop
push
jno
mov
mov
xchg
(bad)
(bad)
jmp
loope
icebp
ins
outs
push
jmp
jno
or
and
jg
(bad)
je
enter
jl
cvtps2pi
mov
add
cmp
cmps
inc
lds
xchg
fstp
mov
outs
cmp
or
pusha
and
dec
fidiv
loopne
adc
sbb
shl
jne
es
xchg
not
xor
pusha
xor
rcl
aam
sbb
pop
test
add
mov
js
pop
nop
aam
xor
mov
push
and
inc
das
mov
cwde
leave
mov
mov
mov
rcl
lahf
inc
adc
cwde
mov
add
or
arpl
jecxz
loope
xor
cmp
pushf
inc
pop
cmp
adc
pop
lds
movs
push
stos
xchg
xlat
in
test
ja
stos
(bad)
jge
mov
mov
mov
push
sub
and
inc
pop
fimul
jbe
not
les
stos
inc
push
rol
icebp
call
pop
gs
fadd
arpl
retf
mov
test
mov
cmp
in
outs
mov
mov
inc
repz
mov
jb
ret
shr
mov
aaa
(bad)
dec
lods
pop
outs
xchg
ret
pop
dec
mov
adc
inc
cmps
(bad)
pop
rcl
call
stos
pop
leave
(bad)
movs
shl
fisttp
call
xor
loopne
adc
lahf
popa
fadd
daa
or
scas
daa
(bad)
retf
imul
shr
add
push
mov
pop
and
sbb
push
mov
fiadd
and
clc
popa
sahf
rcl
nop
fcomp
dec
cmp
les
or
ret
inc
pop
adc
bound
ds
lock
test
dec
add
push
ret
xor
mov
jno
fist
retf
lods
adc
mov
and
xor
movs
dec
fmul
push
cdq
arpl
lock
dec
aam
add
mov
xchg
xlat
setle
das
jge
cs
cld
dec
pop
fcom
cmp
std
fistp
aas
pop
daa
mul
aaa
inc
test
jnp
push
movs
out
dec
iret
dec
push
jb
test
sbb
jg
mov
pusha
pop
jecxz
or
mov
outs
sub
push
xchg
lock
outs
ds
cli
add
add
shl
mov
mov
mov
dec
lods
sbb
mov
jb
in
push
adc
push
xlat
and
xchg
inc
mov
or
or
push
jns
xchg
xchg
jae
or
nop
xlat
ja
adc
out
add
cmp
jmp
movs
or
mov
aas
iret
mov
movs
mov
arpl
mov
shl
and
mov
and
jns
cld
shl
outs
ins
rcl
dec
xchg
push
cmps
call
into
jge
xlat
sub
pop
sub
pop
int
test
mov
ds
mov
arpl
shl
jns
std
ja
jbe
and
imul
das
sub
xor
sti
add
call
dec
test
pop
push
call
lods
pusha
pop
js
cdq
lahf
loop
cmp
mov
(bad)
scas
fiadd
movs
test
in
jmp
ret
jb
cwde
push
retf
push
sbb
fisttp
push
outs
js
adc
jo
mov
in
mov
jmp
push
div
je
mov
sub
test
fisttp
retf
and
and
cmps
add
stc
jmp
mov
adc
or
cmc
retf
cdq
or
xor
or
std
lahf
mov
dec
jo
jne
and
popa
leave
push
popf
loope
rcr
sbb
in
jmp
pop
repz
push
push
mov
or
add
mov
mov
cmp
int
jmp
cmps
sub
adc
imul
sub
mul
iret
cs
or
add
jb
leave
sub
pop
cmp
pop
pushf
cmps
xchg
mov
ins
push
outs
aas
inc
mov
mov
je
in
outs
movs
scas
xchg
test
bound
fmul
mov
lods
mov
xor
pop
mov
xlat
jne
ret
imul
xchg
mov
js
fwait
sahf
dec
(bad)
fdiv
dec
repz
adc
mov
outs
loop
add
and
dec
pop
mov
out
rol
mov
in
pop
inc
inc
test
data16
push
ja
mov
adc
mov
mov
mov
mov
lods
sahf
jp
mov
rcl
cwde
add
sar
inc
push
imul
cmp
mov
fsubp
fist
popa
xchg
ss
or
loop
pop
inc
(bad)
mov
popa
xchg
loop
lds
jl
pop
call
inc
adc
int3
out
inc
sbb
and
aam
popa
inc
ins
in
push
dec
or
aaa
sbb
dec
push
push
or
cmp
mov
or
inc
pop
sub
addr16
push
push
xor
jnp
ja
pop
sti
imul
jmp
shl
sbb
inc
pusha
fild
mov
inc
lock
fwait
out
mov
dec
jle
leave
mov
stos
xchg
(bad)
pop
nop
pop
pop
pop
call
inc
out
xchg
add
add
mov
add
sub
push
aaa
fild
movs
xchg
in
repz
mov
aas
outs
xchg
lock
mov
inc
push
push
test
pop
sub
lds
jns
aaa
sar
ret
dec
and
imul
sub
pop
jae
push
imul
pop
cmps
mov
and
call
scas
ja
xor
stc
xchg
out
jno
imul
movs
adc
push
cmp
xor
fisubr
jne
cdq
jae
xor
(bad)
enter
test
jmp
ins
sti
adc
mov
rcl
lea
jo
mov
mov
cmc
fld
aam
std
and
pushf
leave
dec
cmp
push
push
dec
out
jo
sbb
mov
sub
jmp
adc
adc
fldcw
sub
xor
cli
sbb
(bad)
pop
mov
sbb
ficomp
sti
ins
lds
push
int
test
les
xchg
mov
xor
aaa
inc
push
pop
(bad)
movs
dec
jmp
gs
cwde
bound
call
add
cmp
bound
mov
scas
xlat
mov
jae
add
loopne
add
cmp
ss
add
xlat
mov
sbb
rcl
pop
dec
lods
pop
mov
je
and
xor
or
shr
push
popa
int3
adc
push
fcomp
out
push
ret
out
imul
adc
test
adc
and
fsub
stos
loop
movs
push
imul
push
int3
push
fist
pop
sbb
mov
inc
push
shl
mov
out
(bad)
repz
mov
repz
cmp
sahf
loopne
int
es
push
xor
jmp
test
sub
lahf
inc
loopne
lods
repnz
lods
pusha
xchg
adc
enter
fisubr
mov
(bad)
mov
dec
cmp
scas
jl
jns
mov
push
adc
jb
mov
outs
dec
xchg
dec
cmp
enter
scas
add
inc
cld
retf
mov
cmc
daa
jl
xor
dec
inc
ja
cmp
repnz
jo
mov
mov
repz
dec
mov
inc
xor
(bad)
test
shr
(bad)
fucom
cdq
mov
std
sub
adc
ret
push
aas
pop
jo
push
into
stos
sbb
push
bound
ret
dec
xor
mov
mov
pop
imul
daa
aam
sub
add
dec
xor
cmp
in
dec
and
mov
lds
cli
xor
sub
xchg
pusha
push
and
(bad)
data16
cmps
add
inc
jg
in
scas
in
dec
pop
xor
shr
sbb
out
xor
std
cmps
shl
or
sbb
aaa
stc
div
dec
dec
push
inc
jno
jmp
leave
outs
jl
and
ins
test
jmp
push
sbb
sbb
lahf
stos
imul
xor
xchg
add
cwde
imul
jge
and
push
out
adc
arpl
and
sbb
mov
fwait
push
pop
daa
rcr
retf
ror
mov
outs
jmp
test
push
adc
jmp
dec
jae
lods
mov
push
xor
je
mov
mov
xor
scas
mov
jbe
mov
dec
xchg
sub
inc
xchg
fstp
cwde
call
icebp
fnstcw
jo
iret
mov
pop
mov
xor
dec
sub
adc
xlat
sbb
cmps
div
adc
out
lea
dec
mov
cwde
inc
imul
adc
sub
mov
fiadd
call
js
dec
pop
push
fwait
iret
dec
and
adc
and
xlat
ret
pop
retf
sbb
test
repz
pop
(bad)
loope
push
scas
test
mov
js
cdq
stos
and
int3
xlat
adc
and
mov
stc
outs
rcl
cmp
or
mov
mov
sbb
xchg
test
sbb
and
lock
push
or
mov
dec
adc
loop
xchg
and
ficomp
idiv
mov
and
dec
les
mov
aad
hlt
lds
ja
mov
mov
fistp
dec
cmp
fs
push
xchg
mov
pushf
sub
movs
in
push
inc
loop
jmp
pop
jnp
jbe
jne
xchg
test
ss
pushf
mov
mov
call
mov
aaa
sub
adc
outs
push
ret
lods
in
sbb
cli
cld
pop
test
pushf
call
ss
fidivr
inc
std
mov
mov
cmp
or
xchg
fsubr
outs
jmp
cmp
push
aam
mov
fmul
xchg
mov
and
mov
jecxz
loop
push
hlt
mov
(bad)
xor
mov
imul
pop
ins
(bad)
(bad)
pusha
xor
je
shl
jg
jg
inc
xbegin
mov
push
jmp
retf
mov
imul
sti
ins
loopne
jp
cli
(bad)
sti
imul
nop
les
retf
mov
clc
adc
fwait
mov
in
xor
shl
sbb
out
repz
xor
inc
enter
push
fidivr
mov
add
jbe
(bad)
and
dec
mov
(bad)
and
lea
adc
enter
lods
lea
cmp
sbb
ret
xchg
mov
dec
xor
xchg
inc
pusha
push
cmp
add
and
xchg
add
jmp
sbb
fidiv
clc
popf
int3
nop
(bad)
dec
xchg
sbb
int3
popf
or
fst
aam
mov
cli
mov
outs
mov
js
test
jge
xor
enter
repnz
stc
xchg
imul
jo
sub
lods
repz
bound
pop
sub
sbb
(bad)
aam
(bad)
jmp
test
and
sbb
cmc
or
push
push
int
(bad)
repz
icebp
xchg
and
(bad)
push
or
inc
popf
adc
iret
test
bound
xchg
movs
bswap
xor
pop
mov
call
inc
scas
outs
mov
add
mov
enter
inc
cmovge
push
dec
push
mov
sbb
add
xchg
hlt
(bad)
and
push
fadd
push
sub
adc
dec
pop
and
jnp
fcomp
adc
pushf
mov
movs
xor
ficom
adc
fimul
lahf
sub
push
fs
je
ss
arpl
mov
out
test
aad
xor
inc
sub
adc
daa
sbb
sahf
cmc
lahf
dec
femms
icebp
push
or
mov
mov
adc
in
sbb
test
sbb
stos
call
sbb
iret
xor
inc
xor
popf
jb
pop
stos
mov
push
jae
push
outs
sbb
sahf
xchg
call
(bad)
nop
mov
xchg
xchg
scas
ds
push
mov
out
xchg
mov
lods
sar
mov
in
outs
cmps
ins
out
fxam
ret
mov
js
mov
dec
ins
mov
test
ds
mov
aas
stos
lahf
stc
and
sbb
dec
add
mov
add
pop
mov
jp
nop
in
inc
cmps
lods
pop
jno
hlt
adc
sub
mov
pusha
je
in
sar
sbb
mov
cs
cli
cmp
clc
nop
imul
sti
xor
iret
mov
adc
inc
cmp
es
dec
add
mov
jg
mov
(bad)
outs
add
movs
mov
jb
sahf
jne
push
inc
jns
ror
es
lahf
pop
jns
ins
sub
loop
inc
mov
ja
xor
pushf
ret
push
out
pop
adc
scas
ds
adc
xchg
pop
fisubr
aaa
aad
xor
std
sub
push
arpl
sbb
aam
mov
inc
ins
mov
push
clc
dec
cmp
imul
xchg
jmp
xchg
inc
pop
shl
cmp
shr
sbb
add
in
test
(bad)
or
test
in
test
pop
cmp
ror
or
mov
xchg
mov
jne
jbe
inc
xor
fld
adc
and
inc
dec
xchg
es
inc
arpl
mov
xchg
sbb
call
je
outs
pop
dec
call
xchg
scas
jnp
int
mov
arpl
sbb
adc
dec
push
leave
into
cmp
call
fwait
dec
and
ds
out
pop
mov
mov
mov
mov
lods
(bad)
push
pop
iret
pop
out
sub
xor
bnd
inc
retf
fdiv
icebp
sbb
add
pop
mov
push
(bad)
outs
push
add
dec
pop
out
ins
rcr
mov
jae
(bad)
mov
sbb
imul
ss
xor
pop
or
and
dec
cli
inc
(bad)
push
mov
mov
xchg
dec
std
and
aam
js
gs
aaa
mov
inc
pop
sub
push
sub
xchg
pop
(bad)
fwait
push
sbb
add
pop
cmovno
rcr
push
mov
loope
mov
ror
jns
dec
je
xchg
out
or
sub
jb
sub
xchg
inc
adc
and
stc
aaa
mov
je
cmps
mov
mov
cs
test
std
sub
mov
aas
test
adc
mul
scas
pop
fdivp
jnp
rol
xor
add
pop
and
shr
sub
fidiv
push
inc
pop
mov
std
or
out
xor
mov
mov
mov
mov
inc
ja
cli
sti
mov
jl
mov
stos
pop
xor
pusha
xor
(bad)
push
sub
or
adc
jl
cs
pop
pop
(bad)
adc
es
jno
loopne
fist
pop
cwde
cmc
cld
das
xor
add
sbb
push
sub
mov
daa
push
(bad)
inc
loope
and
fnsave
pop
dec
xchg
std
addr16
xchg
pop
cmps
cmp
out
rcl
(bad)
mov
adc
bound
outs
or
call
push
mov
adc
ret
pop
mov
movs
cmps
jl
xchg
pop
or
fstp
cmp
neg
push
in
div
jbe
sti
imul
cmc
int
iret
and
shld
push
cdq
daa
stc
enter
fist
dec
outs
test
rol
aad
sub
ror
jle
mov
push
fsub
jecxz
xor
mov
test
sahf
jnp
xchg
jmp
and
cmp
aam
pop
jns
leave
sub
stos
aaa
fidiv
pop
jne
icebp
cwde
dec
inc
daa
je
in
xor
jo
shl
pop
and
mov
imul
(bad)
test
and
lods
adc
cmp
das
out
cli
movs
cmc
inc
je
ds
je
sub
in
sub
mov
nop
lods
mov
addr16
frstor
cli
mov
in
das
jg
popa
aad
test
xchg
and
and
jbe
fsubr
pop
mov
jle
mov
cmp
sbb
out
jnp
addr16
dec
dec
pushw
xchg
out
pop
mov
aaa
pop
jle
mov
xchg
pop
rcr
cld
dec
aaa
dec
loope
pop
ja
sbb
mov
jmp
test
retf
adc
mov
xor
add
pop
out
mov
retf
pop
rcl
retf
mov
test
aas
fdivrp
jae
shl
fsub
(bad)
mov
aaa
in
mov
pop
dec
rcl
ss
out
lods
and
push
adc
sub
into
loop
cmp
cli
mov
sbb
xchg
fimul
(bad)
sbb
or
adc
push
retf
sti
mov
loope
sub
push
or
loopne
jecxz
(bad)
sti
cmp
test
das
(bad)
lock
jg
xchg
or
pop
push
data16
inc
add
pushf
mov
mov
and
add
push
xchg
sub
ds
xchg
adc
push
xchg
adc
dec
and
sbb
push
inc
cdq
out
movs
inc
xor
cmp
inc
int3
test
rcl
mov
inc
ins
inc
mov
jg
adc
arpl
in
or
(bad)
gs
cdq
pop
dec
pusha
or
mov
push
inc
sahf
mov
xchg
daa
xchg
jae
test
stos
and
(bad)
mov
or
hlt
inc
addr16
loope
retf
mov
mov
and
jle
push
xchg
jl
jp
sbb
mov
lock
fst
push
test
out
test
int3
ins
fldenv
sub
xor
pushf
add
sub
retf
btc
into
pop
int3
imul
jmp
push
ss
std
cwde
scas
int
or
sub
add
ins
dec
sbb
sbb
bound
jne
bswap
test
(bad)
xor
(bad)
pop
movs
hlt
xor
pop
popf
cmc
inc
lahf
out
ja
dec
xor
pusha
hlt
mov
ja
add
mov
inc
pop
xchg
add
lods
push
sub
in
dec
mov
xchg
mov
into
dec
lds
sub
add
inc
pop
test
add
stos
or
imul
xchg
icebp
cmp
jmp
jmp
les
sub
sub
aaa
aaa
or
and
jp
int3
ja
inc
fsub
outs
aam
pop
xchg
test
mov
js
inc
dec
and
mul
and
fdiv
or
test
clc
push
or
daa
xor
mov
lea
sar
add
push
pop
(bad)
mov
sbb
jecxz
jo
adc
sub
cmp
icebp
shr
dec
(bad)
fdiv
gs
icebp
aaa
push
push
push
outs
pop
inc
arpl
cmp
mov
mov
jo
pushf
pop
cmp
inc
out
cmp
js
mov
pop
jns
pop
dec
cmp
test
aas
jmp
and
andps
push
mov
loope
jmp
or
mov
push
fdivp
dec
pusha
out
js
sti
popf
and
out
ds
inc
fwait
imul
mov
les
and
sbb
mov
or
mov
xor
ret
int
xor
pop
pop
inc
xchg
lods
mov
xchg
mov
mov
nop
or
mov
push
and
fcmovnu
sub
xor
cwde
pop
mov
xor
leave
mov
and
cmps
or
mul
jg
cdq
xor
xor
(bad)
cmp
popf
icebp
neg
aam
das
jl
mov
xchg
push
xor
and
shl
(bad)
mov
adc
cmp
(bad)
pop
inc
call
orps
js
vpmacsswd
add
sbb
pop
or
repnz
arpl
arpl
retf
(bad)
cmp
loope
mov
pop
or
or
mov
mov
(bad)
or
out
ins
xlat
arpl
sbb
test
or
in
sar
in
cmp
popa
repnz
push
sti
push
movs
lods
mov
jge
xor
sub
add
push
jg
inc
fdiv
add
xchg
mov
push
pushf
jmp
(bad)
jno
in
mov
pop
test
cmp
mov
pusha
sub
dec
dec
jg
cmps
das
sub
scas
ins
add
mov
sbb
and
in
and
(bad)
push
mov
aaa
mov
inc
jbe
add
xor
fst
pop
lahf
pop
dec
push
fadd
or
ret
cdq
adc
ss
rcl
sbb
dec
aaa
test
xor
test
push
scas
int3
pop
inc
ror
neg
gs
push
shl
mov
jl
fldenv
jb
(bad)
mov
fistp
mov
sbb
dec
push
add
jp
retf
pop
xor
ror
cmp
cmc
jle
mov
sub
hlt
xchg
cld
xlat
cmp
and
pop
ja
push
(bad)
cmp
sti
inc
mov
out
or
mov
push
pop
pop
imul
mov
fsubr
outs
sahf
fs
in
dec
sub
cmp
dec
mov
jo
push
push
in
pop
in
cwde
cmps
ins
movs
js
fnstsw
pop
mov
sub
jl
lahf
mov
xchg
iret
cmp
rcr
ffree
inc
mov
hlt
inc
mov
ins
ret
fld
iret
dec
mov
sbb
xchg
dec
in
xchg
add
sub
and
jmp
dec
sbb
mov
(bad)
xchg
adc
adc
idiv
int3
jp
jle
dec
mov
shl
xchg
xchg
xor
mov
cmovnp
out
xchg
pop
shr
aas
fisttp
and
pop
sbb
cmp
mov
int3
and
sub
mov
pop
dec
jnp
xchg
es
and
daa
xor
xor
ds
(bad)
pop
mov
push
push
and
pop
cmc
xor
ja
into
and
jecxz
clc
pop
retf
(bad)
jnp
push
lods
ja
(bad)
stos
jge
pop
mov
xor
nop
test
cmp
gs
and
out
inc
int3
pop
outs
jmp
loope
and
adc
mov
shr
cmp
loope
in
shl
fs
xor
outs
inc
scas
xor
sub
mov
or
mov
sti
sahf
stos
jnp
jo
or
and
xor
mov
and
js
adc
mov
add
jp
push
xor
mov
and
mov
mov
xlat
mov
xchg
imul
popf
aaa
outs
xchg
sbb
xchg
jmp
mov
inc
and
out
fsubr
adc
mov
(bad)
push
imul
shl
pop
jl
lock
or
mov
pop
inc
adc
push
jge
xor
cmps
nop
mov
push
pop
lods
out
cmc
(bad)
iret
fwait
jne
rcl
inc
mov
pop
int
lahf
jb
mov
mov
neg
inc
shl
aas
pop
dec
in
ins
sbb
lods
or
adc
add
add
push
sub
aad
mov
lahf
test
pop
icebp
or
leave
sub
lds
cld
sub
scas
jmp
lea
jae
sar
in
aad
out
xor
add
pop
neg
mov
ss
in
addr16
out
or
dec
lock
stos
and
xchg
push
dec
xchg
data16
aas
add
out
mov
add
pusha
test
out
popa
xchg
push
inc
xchg
cmp
clc
sahf
mov
push
cmp
lock
inc
push
test
push
jo
nop
lods
push
(bad)
mov
in
inc
mov
pop
push
imul
dec
lods
mov
inc
mov
fidiv
int
or
xor
jns
add
mov
lea
fisubr
out
xchg
add
pop
sbb
adc
test
add
mov
aas
rcl
jbe
and
pushf
pop
jns
xlat
inc
mov
iret
mov
xor
jnp
sub
xor
ret
mov
lds
pop
mov
lods
rcl
adc
shl
or
sbb
push
mov
or
lods
lods
rcl
xchg
add
loopne
loope
mov
jge
mov
dec
jne
dec
xor
push
mov
or
cli
or
outs
cli
imul
fstp
mov
and
cwde
pop
loope
inc
mov
pop
jmp
mov
retf
adc
xchg
iret
push
add
dec
or
stos
ficom
int
je
dec
loopne
lods
sub
jns
fmul
or
dec
push
jge
sub
sbb
imul
inc
daa
pusha
pop
xor
sbb
mov
leave
das
mov
(bad)
stos
dec
cmp
arpl
add
push
cmp
xor
pop
mov
int3
fadd
mov
sti
mov
movs
js
mov
(bad)
jmp
xchg
test
jmp
sbb
popf
xor
sub
mul
call
mov
fnstenv
xor
cmp
cmps
push
cmp
mov
(bad)
jmp
mov
xchg
mov
mov
nop
aad
cmp
sub
test
lods
push
mov
aas
lea
fnsave
push
jb
rol
pop
xor
cwde
scas
mov
jmp
mov
push
mov
stos
and
es
arpl
inc
(bad)
out
cmp
leave
add
sub
xor
and
neg
cld
ss
dec
iret
pop
sbb
inc
pop
into
sub
loopne
pop
bnd
bound
push
inc
fsub
push
push
mov
cmp
pop
mov
or
out
test
addr16
(bad)
jmp
js
inc
mov
cmp
loopne
xchg
sub
sahf
test
mov
pushf
xchg
dec
sbb
shl
lods
je
addr16
sbb
cmp
add
popa
test
dec
push
call
inc
xchg
and
pinsrw
stos
in
xor
mov
std
inc
repz
and
mov
xchg
sbb
sbb
fbstp
push
push
push
or
cdq
inc
mov
adc
jb
out
xor
out
lock
mov
clc
inc
cmps
push
add
ins
jp
inc
fwait
sbb
mov
or
push
jg
mov
out
mov
adc
test
into
cmps
cmp
xchg
test
sbb
mov
cmp
pop
imul
add
sti
jmp
cmp
out
mov
sub
movsx
and
bound
and
in
or
imul
call
cmp
ret
mov
sub
out
jbe
dec
es
mov
sub
mov
jl
mov
dec
stc
adc
call
aas
scas
or
mov
push
fwait
repz
loopne
adc
or
pop
mov
rcr
in
pop
lods
dec
fisttp
adc
mov
push
dec
cli
mov
das
outs
test
call
ret
mov
mov
int3
jg
out
out
push
push
iret
fs
fldcw
push
lea
cli
lods
mov
adc
push
dec
(bad)
test
(bad)
mov
imul
xlat
shl
scas
xchg
jno
cmps
retf
in
out
mov
das
retf
cmp
jb
mov
pop
icebp
add
cmp
scas
dec
stos
mov
fwait
xchg
dec
(bad)
retf
and
(bad)
sbb
or
jns
mov
mov
push
pop
aas
inc
aaa
cmp
or
(bad)
push
dec
jecxz
add
jnp
idiv
inc
mov
add
fwait
inc
scas
fdivr
clc
dec
(bad)
cmp
mov
pop
cmp
clc
cmp
adc
push
ror
mov
outs
push
scas
mov
stos
(bad)
out
push
ins
inc
scas
cmp
leave
sahf
ja
mov
(bad)
xor
cmc
push
pop
xor
jb
jge
sar
mov
jge
out
adc
clc
adc
mov
ins
(bad)
pop
mov
aam
dec
data16
and
mov
xlat
jge
inc
adc
test
pop
test
imul
lods
xchg
popf
call
imul
jmp
outs
loopne
stos
(bad)
pop
add
mov
xchg
imul
pop
daa
int
pop
inc
cmps
adc
test
ja
pop
or
inc
mov
ror
dec
frstor
xor
add
mov
dec
popa
cmp
out
add
cli
jno
aaa
popf
pop
sub
lods
out
cdq
rol
pushf
sbb
push
mov
jo
into
mov
adc
rcl
xchg
(bad)
jo
int3
arpl
mov
sbb
hlt
mov
or
mov
mov
lods
or
int
sbb
cmp
xchg
test
jmp
outs
jmp
or
jmp
cmp
popa
cmps
push
fs
mov
js
pop
push
(bad)
mov
lahf
bswap
loopne
cli
jmp
int
mov
retf
mov
pop
pop
ror
jno
neg
pop
daa
and
and
mov
(bad)
gs
sbb
dec
aam
inc
dec
shr
mov
ror
rol
in
xor
cmc
inc
call
or
sar
or
adc
call
add
out
xor
push
sub
mov
dec
ins
cli
pop
sub
nop
xchg
sbb
in
fiadd
arpl
fldcw
mov
and
add
or
pop
push
push
ret
xor
sbb
mov
and
fs
push
dec
loop
test
mov
xchg
std
retf
fsubr
cmp
ins
sahf
cmp
inc
push
jns
pop
hlt
(bad)
(bad)
rcl
jl
cdq
mov
outs
mov
rcl
inc
or
cmp
jg
aad
sti
jg
mov
fiadd
test
cs
lods
or
sub
xchg
pusha
popf
cwde
mov
cmp
(bad)
in
sub
and
cli
scas
sbb
push
mov
mov
int3
test
pop
jg
out
int
mov
call
and
daa
mov
push
in
retf
leave
cdq
into
(bad)
mov
mov
in
push
jg
jl
ins
mov
inc
mov
push
fmul
sub
mov
icebp
lds
pop
int3
xchg
jmp
mov
dec
mov
jo
sbb
dec
in
and
lods
fmul
ja
sbb
daa
and
or
dec
gs
pop
cmps
xor
ret
mov
dec
push
les
sub
xor
adc
pop
sub
in
mov
ja
call
fiadd
dec
je
lods
dec
jae
pop
loopne
mov
daa
(bad)
pop
adc
icebp
test
add
js
mov
int3
mov
push
mov
cmp
outs
sbb
pop
mov
fdivr
cmps
or
xchg
xchg
imul
in
sbb
fild
xor
jl
lds
mov
cmp
mov
ret
xchg
jbe
daa
stc
leave
scas
cmp
mov
mov
push
adc
ss
ins
xchg
movs
or
cwde
sub
cmp
push
pusha
inc
dec
into
pop
jge
int3
aad
aad
xor
lods
test
adc
(bad)
int3
ret
outs
cmp
fsubr
aaa
popa
outs
lods
pop
in
jno
push
enter
cld
(bad)
stos
bound
sti
cdq
in
mov
jae
sti
push
or
or
in
jl
js
imul
dec
mov
in
jo
inc
test
repnz
mov
sbb
(bad)
adc
adc
iret
jnp
outs
push
cmp
sbb
std
mov
jnp
into
nop
fcomip
into
jp
cmp
jno
add
jmp
sbb
je
gs
loope
jbe
inc
in
inc
call
stos
shrd
ins
pop
fsubr
jnp
dec
sbb
sar
sub
xor
pop
(bad)
aam
mov
push
xor
jns
imul
nop
lds
daa
retw
mov
xchg
xor
add
cs
cmp
mov
fld
fdiv
fcomp
inc
mov
sub
into
cld
icebp
repz
sbb
jno
or
ds
cmc
out
mov
adc
add
xchg
fisttp
mov
mov
imul
mov
fisttp
shl
inc
imul
mov
dec
xchg
cmp
add
shr
pop
inc
xchg
inc
outs
adc
pop
(bad)
cmp
aam
and
mov
or
pop
repnz
add
fimul
push
sbb
sub
outs
mov
pusha
imul
lds
dec
(bad)
in
stos
ss
inc
or
inc
repnz
push
loope
test
aaa
imul
xchg
and
or
addr16
js
cmp
call
shl
adc
cmp
dec
push
int3
jno
int3
sub
ins
std
push
xor
in
jp
jmp
sahf
pushf
add
out
adc
pop
push
div
in
or
xchg
mov
scas
mov
inc
and
xchg
sub
mov
ret
addr16
movs
mov
call
mov
mov
mov
jge
data16
imul
inc
add
movs
inc
outs
lahf
adc
cs
dec
jge
rol
mov
loope
jp
xchg
stos
inc
inc
dec
adc
fist
adc
cmp
pop
sub
or
in
(bad)
retf
xchg
mov
cmp
std
rcl
sub
out
mov
dec
(bad)
pop
push
cmp
fcmovbe
stos
jp
ret
int3
dec
push
mov
loop
xchg
or
mov
xchg
dec
call
inc
cdq
imul
daa
cmps
mov
jmp
xor
jle
push
dec
add
mov
add
add
ss
sub
cs
cmp
mov
fwait
jp
jbe
lahf
mov
pop
add
push
outs
and
jmp
pusha
push
cmp
adc
test
int3
ins
sub
es
dec
mov
out
lods
push
daa
movs
iret
push
bound
push
dec
pop
push
cmps
jo
hlt
mov
loope
xor
fild
mov
out
push
icebp
mov
jg
push
fwait
xor
lds
imul
inc
call
movs
icebp
int3
in
cld
enter
ins
cmp
test
mov
adc
xchg
test
cmp
sub
sbb
jbe
jle
adc
popa
into
dec
push
cdq
fimul
mov
fbld
add
adc
gs
hlt
or
stc
in
cdq
fs
and
adc
cmps
test
mov
and
mov
fstp
push
mov
dec
bound
mov
loop
and
int
push
jmp
xchg
adc
push
jo
mov
sub
and
shl
lock
jns
inc
inc
out
mov
pushf
inc
mov
mov
std
rcl
int3
pusha
fdiv
push
mov
mov
inc
cdq
push
jge
pushf
add
pop
pop
pop
sar
retf
xor
xchg
inc
xchg
fsubr
add
pop
mov
or
inc
aas
imul
push
cmp
push
jmp
aaa
mov
out
(bad)
xlat
fistp
xchg
ins
push
out
and
and
sbb
sub
int3
mov
cmc
push
mov
dec
icebp
mov
jnp
xchg
sbb
or
out
cmp
addr16
lods
daa
jle
dec
cmp
pop
arpl
les
or
or
shl
mov
in
stos
mov
imul
mov
add
adc
add
icebp
inc
dec
in
sbb
pop
scas
stos
into
imul
dec
jg
add
test
mov
popw
push
xchg
mov
pop
or
pop
xchg
push
sbb
push
sbb
cmp
addr16
lds
retf
orps
push
sahf
add
into
lods
daa
jg
retf
dec
gs
mov
not
or
jae
in
ss
icebp
or
ds
movs
mov
mov
ds
and
movs
ret
jecxz
inc
xchg
mov
loop
pmaddwd
popa
push
pop
test
(bad)
mov
or
xor
std
mov
pop
cmps
lods
scas
jae
dec
xchg
xchg
pop
das
add
add
test
(bad)
cdq
sbb
aas
mov
add
add
mov
icebp
jmp
xchg
mov
sbb
out
retf
pop
mov
add
pop
mov
cmp
lock
mov
adc
pop
fild
xor
dec
jecxz
out
movs
retf
movs
jge
hlt
sub
bound
jmp
push
mov
gs
cli
xchg
inc
or
in
je
cmp
(bad)
or
jmp
cmp
jns
sar
neg
inc
adc
cmps
mov
adc
(bad)
leave
fwait
ret
fcom
or
rcr
nop
outs
mov
mov
and
jecxz
pop
cmp
sub
adc
lock
pop
lods
mul
imul
sub
test
loope
fild
dec
xchg
jg
addr16
adc
xchg
loopne
ins
add
loope
scas
test
xchg
enter
push
pushf
mov
sar
push
int3
outs
and
push
bound
sbb
das
in
popa
cmp
fwait
retf
into
popf
or
adc
sti
or
icebp
or
bound
and
and
xchg
out
xor
dec
jns
data16
das
(bad)
dec
ror
js
adc
inc
clc
scas
rcr
push
scas
cmc
or
add
inc
test
jb
adc
adc
rep
(bad)
xchg
cmp
shl
jecxz
jae
mov
cmp
stos
stos
ret
test
push
xor
jbe
sbb
test
xor
inc
jbe
fnstenv
push
sub
das
pop
stos
sbb
rcl
test
mov
movs
les
movs
push
cmp
push
std
popf
les
jp
cwde
push
pop
inc
mov
iret
int3
ins
push
loop
mov
mov
mov
popa
mov
das
push
push
iret
mov
imul
xchg
repnz
test
rcl
jns
adc
or
add
in
dec
xchg
ret
iret
in
clc
sar
cmc
test
xor
out
es
add
arpl
xchg
mov
mov
pop
rcr
push
outs
test
enter
pop
mov
hlt
(bad)
mov
or
add
jb
jge
aas
inc
dec
cmp
loop
int
adc
(bad)
xor
sar
cwde
fwait
or
(bad)
sub
jecxz
(bad)
jl
pop
mov
out
or
xor
cmp
xor
fs
and
or
lods
add
icebp
cld
push
int3
jmp
imul
aaa
pushf
or
clc
dec
ins
rcl
mov
daa
sub
mov
imul
mov
cmp
adc
push
mov
ins
mov
sub
sbb
jns
inc
push
call
pop
(bad)
addr16
push
mov
jmp
(bad)
outs
repz
and
repnz
movs
jl
rcl
out
xchg
dec
test
pop
push
mov
xor
sub
repnz
pop
sbb
pop
mov
aas
imul
bound
hlt
out
xchg
lahf
aad
add
push
pop
mov
cmps
inc
jle
in
addr16
ins
xor
and
ss
mov
push
cs
dec
sbb
cli
pop
lods
mov
jbe
mov
sub
sub
aas
lds
aad
movs
in
adc
pop
pop
int3
test
aad
or
sbb
popa
mov
add
add
jno
rcr
xor
inc
in
das
mov
cmp
mov
xor
in
cmp
imul
adc
mov
mov
idiv
push
aam
data16
or
cli
aad
fdiv
mov
lds
sub
and
call
xor
icebp
arpl
adc
mov
std
pmaddwd
je
fisub
sub
cs
not
test
fild
mov
icebp
mov
pop
les
dec
ins
cli
popf
(bad)
lahf
cmps
jge
jb
mov
xchg
xchg
sbb
xchg
inc
fwait
dec
dec
mov
stc
and
pop
sti
and
daa
mov
push
in
out
push
lahf
aas
outs
and
add
pop
cmp
popa
aaa
imul
inc
adc
test
and
cmp
push
dec
push
inc
aam
div
shr
xchg
das
adc
data16
ja
jge
adc
ins
popa
imul
or
in
inc
and
jp
cmp
nop
and
aaa
lahf
cmp
rcl
movs
pop
imul
(bad)
rcr
mov
fdivr
pop
imul
inc
xchg
loope
cs
loop
mov
shr
sub
sbb
not
ja
pop
pop
icebp
pushf
push
adc
clc
pop
cmc
out
imul
add
mov
and
ds
shr
jge
mov
jmp
loope
cdq
aam
mov
out
pop
pop
popa
rol
jg
inc
dec
inc
out
xor
hlt
in
dec
jge
sub
push
fadd
mov
cmp
cmp
lds
call
jae
cdq
and
outs
mov
and
xchg
mov
inc
jae
mov
sub
and
add
cwde
iret
cmp
and
cli
mov
or
neg
or
mov
in
in
ds
lahf
scas
push
repnz
mov
mov
stc
xor
sub
adc
sti
mov
xchg
mov
sbb
adc
push
push
mov
sub
and
mov
xor
test
stos
jp
or
xchg
pop
mov
xor
out
clc
add
das
mov
inc
outs
enter
into
movs
jecxz
inc
loopne
sub
and
ret
sbb
and
fistp
and
dec
dec
lock
mov
(bad)
bnd
aam
das
out
cmp
mov
jg
and
ins
repz
sahf
push
sub
xchg
fs
fcmovb
dec
or
aaa
cmp
and
fadd
inc
jnp
jecxz
imul
sbb
ss
sti
push
jbe
sar
fdivr
mov
fsubr
xor
or
mov
push
scas
aaa
add
pop
and
mov
pop
aam
inc
not
cmp
xchg
dec
jg
jl
jl
inc
fsubr
(bad)
mov
sahf
jmp
int
popf
stc
pop
movs
rcl
aas
pop
retf
push
xor
cmp
cld
add
pop
mov
adc
push
jmp
jge
jnp
push
lock
mov
push
cmc
leave
jmp
clc
sbb
inc
jp
cmp
xlat
add
pop
mov
jae
pop
in
fsubr
sub
push
aaa
lahf
mov
xor
in
or
je
sub
cmc
outs
mov
pop
jmp
fnstsw
in
std
ffree
push
push
ins
mov
cmps
outs
xchg
aam
dec
(bad)
aas
mov
add
xchg
jo
les
lahf
jp
lea
nop
inc
addr16
mov
jns
ins
sbb
ins
push
loopne
rep
fisub
xchg
popa
jmp
pushf
rcr
(bad)
frstor
pop
xchg
enter
pop
push
pop
sub
add
cmps
jb
sahf
test
lds
sbb
iret
pop
mov
inc
out
jae
pop
pop
jnp
popf
inc
dec
test
inc
or
dec
push
cmp
shl
push
(bad)
gs
cmps
ja
icebp
mov
inc
inc
hlt
loope
fisttp
sti
push
adc
add
jge
in
pusha
push
push
xchg
or
sahf
nop
pop
pop
dec
xor
inc
mov
sbb
jae
stos
pop
sub
push
mov
test
push
stc
xchg
push
mov
(bad)
ds
or
adc
xchg
daa
or
mov
iret
or
mov
out
shl
data16
push
movs
and
ror
hlt
shr
sahf
gs
or
mov
dec
rcr
jg
outs
(bad)
sub
or
jne
jnp
xor
leave
cmps
arpl
push
mov
ja
inc
rcl
inc
pushf
cmc
stos
mov
mov
lods
pop
std
mov
xchg
dec
cmp
jbe
int
mov
and
retf
mov
xchg
push
mov
mov
aas
outs
outs
push
aam
push
inc
pop
and
daa
jge
xchg
data16
xchg
or
mov
add
fisttp
outs
cmp
ins
pop
xor
lods
movs
(bad)
dec
aam
sahf
push
lods
sub
mov
jge
push
push
cwde
inc
dec
inc
xchg
mov
mov
cmp
xchg
dec
sti
adc
loopne
scas
(bad)
inc
mov
xor
add
cld
pusha
jmp
cld
ins
leave
aas
ja
fistp
add
sbb
dec
pop
pop
(bad)
mov
leave
push
mov
ds
sub
xadd
adc
int
push
jle
dec
adc
(bad)
cdq
pop
std
jne
stos
test
dec
test
inc
test
ins
mov
pop
sub
mov
adc
lea
cmps
aas
jnp
xchg
movs
lods
mov
xchg
jmp
pusha
aam
in
add
and
adc
dec
sub
popf
dec
push
inc
ins
call
aam
sub
daa
cmps
inc
enter
pop
push
sbb
iret
inc
(bad)
sbb
scas
pop
fcmovne
jae
mov
loop
xor
ror
mov
xlat
inc
xor
(bad)
mov
in
in
in
pop
and
dec
cmps
or
pop
out
xchg
sbb
add
(bad)
add
(bad)
js
dec
mov
sti
sub
xchg
arpl
les
pop
arpl
sbb
int3
xlat
ds
in
arpl
pop
push
mov
mov
ret
pop
enter
push
test
add
fwait
std
inc
loop
lock
sub
dec
cmp
retf
xor
test
pop
outs
and
mov
xchg
aad
test
jge
mov
retf
push
and
jle
cmp
inc
stos
ret
dec
push
and
jg
out
push
(bad)
loopne
push
pop
test
push
out
jbe
xchg
sub
out
fwait
(bad)
jmp
outs
pop
mov
sbb
sar
(bad)
test
jae
out
push
xchg
adc
sub
lods
shl
lods
push
and
outs
in
xchg
push
fstp
iret
push
pop
out
xor
into
and
popf
dec
test
add
cli
jno
adc
ret
or
ss
xor
add
clc
cs
repnz
inc
(bad)
push
mov
call
push
ins
pop
push
push
scas
inc
pop
aaa
js
jl
add
mov
popf
mov
cmp
mov
xchg
in
ds
mov
lahf
into
dec
or
xor
sbb
out
mov
mov
fmul
xchg
sub
mov
mov
ds
icebp
popf
pusha
cld
cmps
sub
out
pop
(bad)
push
and
pop
adc
sbb
in
test
push
xchg
xor
(bad)
adc
jge
dec
xchg
add
adc
mov
add
outs
out
fmul
ss
and
es
ret
dec
popf
lods
lods
ret
jbe
scas
sub
sub
fistp
leave
sbb
fucomip
mov
aam
jle
sbb
sub
jb
cmp
jp
xchg
jmp
cmps
adc
jo
es
loop
xchg
cmp
adc
(bad)
fdivr
pushf
mov
enter
les
shr
enter
mov
clc
sub
test
test
add
out
jl
jp
gs
or
fcmovnb
jb
sbb
mov
add
jge
ret
pop
add
xor
mov
leave
mov
(bad)
mov
mov
xor
cmp
mov
mov
xor
sub
sbb
test
int3
aas
mov
sbb
ins
mov
loope
fucomip
sub
sbb
jmp
sub
or
lea
and
arpl
imul
sub
ret
jmp
lods
movs
sub
and
sub
inc
out
imul
ret
jnp
xlat
xchg
rol
mov
outs
jae
mov
loopne
mov
jmp
aaa
scas
cld
imul
pop
fcmovnbe
mov
rcl
cs
icebp
repnz
ins
sbb
scas
mov
add
std
loop
xchg
repnz
pusha
shr
out
push
mov
into
push
fidivr
lds
jbe
dec
sbb
sub
ja
repz
mov
(bad)
out
outs
push
jnp
sbb
add
and
cmp
mov
dec
mov
jl
das
icebp
lds
xlat
xor
rol
adc
inc
dec
sahf
sub
int
cmp
adc
and
ror
and
lods
out
out
out
lea
sub
inc
es
push
pop
mov
lods
xchg
and
popf
adc
dec
dec
xor
inc
stos
pop
pop
push
(bad)
aad
cdq
aas
push
push
push
sbb
or
repnz
(bad)
loop
jmp
xchg
shr
(bad)
cmp
add
fsubr
pop
fsubr
outs
into
cmp
mov
and
jl
push
dec
fcom
outs
sbb
sbb
jnp
or
cmc
dec
hlt
dec
fmul
cmp
mov
test
pop
push
jmp
sub
push
(bad)
je
out
aas
add
pop
inc
xchg
cmps
xor
or
xchg
fwait
pop
mov
push
sbb
pop
shl
adc
int
in
xchg
and
or
int3
bound
out
cmps
loop
mov
xor
push
push
sbb
xchg
sbb
push
fiadd
ja
test
and
mov
into
icebp
sub
cmp
out
iret
sub
or
mov
dec
lahf
getsec
in
lods
xchg
mov
pop
jmp
iret
and
push
(bad)
or
add
cmp
push
pop
add
lea
jp
cmps
jmp
mov
pusha
imul
les
mov
retf
addr16
or
xchg
(bad)
inc
adc
ja
int
in
pop
je
jno
lds
sub
test
(bad)
bnd
lahf
mov
lea
inc
call
mov
popa
neg
aas
call
push
scas
mov
shl
sub
mov
push
sti
mov
ins
inc
pop
(bad)
xchg
add
inc
jecxz
enter
adc
ficomp
mov
rcr
sub
adc
sub
(bad)
aam
mov
jb
and
mov
mov
shr
rcl
or
xchg
in
mov
adc
add
cmc
mov
push
xchg
jo
dec
push
movs
push
ds
inc
loope
outs
inc
xor
fs
sbb
or
sub
leave
jle
call
cmps
dec
and
bound
or
nop
ds
jg
push
cmp
in
push
vfnmsub231ss
lock
pop
test
push
in
push
sub
movs
(bad)
xchg
fcmovu
xor
cmc
xchg
pop
mov
push
out
or
daa
loope
sbb
repz
imul
jmp
mov
sahf
sbb
pop
out
or
adc
push
and
loopne
jl
push
adc
pop
sub
push
cmp
jbe
push
out
stos
push
inc
rcl
mov
xchg
and
and
jmp
sub
jns
add
and
sbb
and
lods
or
or
sbb
shl
mov
xchg
loopne
adc
out
fwait
xor
adc
and
sub
fs
dec
pusha
sub
cs
rcr
jae
push
hlt
cwde
mov
daa
inc
add
leave
inc
in
mov
jo
out
scas
imul
or
cmp
cmp
popa
jle
xchg
sbb
adc
push
fcomp
jno
das
jae
mov
aad
mov
xor
mov
fnstenv
dec
and
dec
dec
leave
test
aam
ror
mov
pop
cmp
fld
cmp
das
mov
lods
dec
retf
xor
aas
pushf
es
jle
stos
in
mov
pop
inc
and
add
or
sub
inc
loop
cmc
mov
sbb
test
ss
shl
retf
xchg
cld
push
repnz
icebp
and
stos
xor
retf
out
xchg
mov
into
sub
push
sbb
in
and
retf
inc
outs
mov
mov
gs
outs
ss
(bad)
jg
sbb
mov
sbb
and
dec
shr
sub
jl
out
fiadd
(bad)
iret
and
push
lods
jne
adc
add
sbb
fldenv
mov
sub
jns
or
jno
mov
mov
movd
js
mov
jnp
push
cmp
sbb
xor
mov
push
loope
push
stos
mov
jb
pop
pop
scas
fnstcw
adc
hlt
pusha
cmp
add
dec
jge
sub
jbe
mov
push
daa
es
retf
int3
mov
lods
push
nop
iret
repz
pop
or
sbb
sbb
cmovl
jne
and
mov
adc
out
mov
sub
inc
retf
push
outs
sar
shl
jmp
call
ret
push
mov
cmp
dec
jp
scas
pop
jns
xchg
loope
ins
jo
nop
les
xchg
xchg
adc
popf
mov
aaa
add
fs
pop
sbb
xor
mov
sar
mov
inc
xor
push
and
pop
inc
adc
mov
mov
push
pop
mov
and
push
gs
xchg
in
and
lea
xor
mov
pop
fcom
xor
arpl
or
mov
popf
mov
push
sahf
stos
(bad)
adc
out
rol
xor
dec
xchg
adc
cdq
pushf
and
aaa
jl
sub
sbb
int
lods
lock
rol
cwde
mul
movs
sbb
cs
ds
jmp
or
push
lea
mul
int
xchg
bound
cdq
mov
push
jl
ror
cmc
popf
sbb
xor
jmp
cmp
lds
repnz
adc
out
dec
das
jae
jno
pop
in
shl
sub
imul
cmps
cmp
mov
jmp
sar
mov
rcl
data16
xor
mov
out
cdq
xor
fcmovnbe
mov
push
daa
lock
inc
dec
or
inc
scas
dec
in
mov
mov
mov
mov
je
clc
xchg
inc
pop
fisubr
(bad)
loop
ja
adc
arpl
sbb
mov
btr
in
dec
inc
inc
es
in
adc
repz
fs
sbb
add
mov
sbb
cmp
fistp
inc
(bad)
clc
pop
(bad)
sahf
or
inc
(bad)
es
fcom
sti
iret
jbe
pusha
push
out
(bad)
push
les
mov
sub
jbe
push
ja
xchg
aaa
inc
mov
pop
and
lods
jp
scas
sbb
int3
ret
std
and
xchg
retf
jle
test
push
icebp
mov
lahf
mov
cmc
sub
or
or
dec
push
fimul
repnz
cli
cmp
lea
sti
scas
mov
xor
into
sbb
cmp
xchg
pusha
cmp
mov
pop
ins
or
jge
jecxz
int
gs
add
push
arpl
lock
mov
shl
and
das
retf
bound
mov
cwde
xor
stos
add
fwait
ret
retf
stc
(bad)
std
adc
mov
pusha
retf
mov
xchg
jp
mov
pop
mov
jmp
cmp
(bad)
in
xor
imul
sahf
ins
lods
xor
mov
inc
ja
mov
int
lods
rcr
call
outs
fbstp
fimul
add
fist
add
adc
fstp
outs
cmps
add
loopne
xchg
or
out
nop
sti
jecxz
outs
or
adc
daa
pop
sub
sahf
das
xor
ret
std
imul
sbb
or
xor
push
sub
rcr
out
(bad)
mov
je
cmp
and
mov
xchg
rcr
xchg
ins
sar
sub
xchg
jae
ins
cmp
rcr
add
leave
dec
lock
push
sub
sbb
push
sahf
cmp
push
imul
inc
outs
xchg
adc
pop
aam
and
jb
xchg
jo
pushf
fwait
gs
jl
xlat
into
(bad)
mov
jbe
add
in
(bad)
imul
mov
sub
fcom
and
pop
(bad)
div
fdivr
rol
div
pop
sbb
xchg
push
cmps
scas
cmp
retf
call
sbb
jo
pop
xchg
popa
lds
pop
cmp
cmp
jecxz
add
adc
and
dec
les
and
mov
push
out
cld
mov
mov
sbb
in
div
fsubr
stc
mov
stc
sub
add
lock
movs
dec
mov
in
rcl
jns
xlat
cmps
pop
cmps
iret
mov
push
cmp
pop
push
fwait
push
pop
rcl
fistp
int
fcom
jmp
push
push
push
ins
(bad)
bound
call
jo
scas
loopne
mov
scas
mov
cli
adc
shl
pop
(bad)
in
and
fisttp
lahf
loopne
xchg
pop
adc
or
paddusb
cmp
xchg
dec
pop
test
loope
les
rep
push
aad
out
lock
pop
data16
mov
(bad)
pop
pop
dec
sbb
je
cli
in
mov
lods
enter
jae
sub
outs
out
(bad)
into
push
cmp
and
lods
out
clc
sbb
test
jnp
mov
clc
or
inc
in
mov
movs
xor
std
dec
push
jae
mov
fucomi
adc
aad
push
sbb
mov
xor
inc
add
cmp
adc
(bad)
daa
and
push
mov
retf
push
dec
sbb
ror
dec
das
clc
jns
xor
adc
sub
addr16
fcom
xlat
aad
or
cmp
pop
xchg
leave
pushf
push
xor
cmc
das
adc
test
pop
and
add
jmp
cld
and
call
xor
cmp
out
jmp
cs
mov
imul
or
mov
test
xchg
cmp
sbb
repz
jno
jge
(bad)
push
cs
ret
pop
pop
std
fldcw
pop
popf
repnz
jle
dec
call
pop
push
push
pop
pop
imul
sbb
sub
sti
sbb
push
pushf
mov
(bad)
mov
adc
jb
bound
(bad)
clc
(bad)
xchg
cmp
jo
shl
ret
cmp
fisttp
pop
gs
push
das
lea
xor
sbb
mov
xor
pop
inc
arpl
dec
rcr
pushf
(bad)
push
retf
sub
inc
push
push
dec
movs
mov
inc
push
es
jge
in
outs
mov
pop
xchg
mov
retf
pop
sbb
push
popa
push
aad
stos
cmps
inc
in
pushf
and
mov
cmp
ds
repz
dec
cmps
adc
sbb
push
fld
pop
add
mov
mov
jae
fst
mov
add
pop
(bad)
sbb
xor
mov
sbb
out
outs
mov
and
arpl
jmp
push
out
and
pop
or
fst
cmp
icebp
imul
mov
dec
mov
out
sbb
mov
lods
sbb
arpl
mov
pusha
std
xor
fwait
popf
outs
stos
inc
sub
sub
adc
dec
imul
rcl
or
movs
lahf
dec
popf
or
xchg
inc
cmp
push
dec
mul
jmp
(bad)
in
aam
xchg
inc
fimul
fcomi
lahf
cmps
sub
sbb
(bad)
mov
mov
loop
push
aas
call
mov
pop
xchg
fstp
mov
cwde
push
lahf
retf
popa
push
adc
sbb
addr16
(bad)
jno
test
sar
call
cmp
pop
shl
cli
dec
cs
or
fnop
or
ret
push
jecxz
in
test
jle
or
xor
int
jle
and
arpl
inc
mov
dec
shl
or
int
pop
mov
outs
sub
and
aad
int3
pop
dec
mov
aas
daa
sub
sub
cli
or
ror
ins
add
nop
lds
(bad)
lods
daa
stos
mov
xor
xchg
dec
sub
adc
mov
dec
cmp
inc
push
inc
dec
fisttp
out
lahf
pushf
cmp
sub
xor
(bad)
das
sub
nop
in
sbb
repnz
js
lods
out
js
xchg
push
and
push
sar
cmp
dec
adc
fs
xchg
mov
adc
cmp
add
ins
inc
or
mul
dec
lock
mov
rol
push
aas
stc
es
cmp
xchg
(bad)
repnz
cdq
movs
sahf
cmp
sub
mov
out
xchg
ret
push
fisubr
shl
sub
mov
scas
inc
jb
mov
stos
out
pop
dec
sahf
sub
adc
sub
out
call
ret
push
movs
and
jo
das
inc
lea
imul
and
ja
mov
push
rcl
sub
leave
add
jg
fs
iret
mov
leave
imul
cld
dec
fucom
dec
push
sub
repnz
mov
les
ds
cmp
mov
ss
ss
sti
sti
jns
clc
or
push
mov
jnp
rcr
mov
cmp
(bad)
dec
pusha
mov
xchg
icebp
outs
retf
pushf
fcomp
mov
lods
jmp
mov
scas
popa
inc
mov
cmp
cbw
jbe
mov
addr16
dec
xchg
inc
mov
arpl
and
or
xor
push
mov
outs
pushf
mov
mov
retf
cmp
mov
lods
iret
adc
dec
rcr
push
ins
or
pop
pop
sub
lods
sbb
js
push
push
xchg
push
loopne
popa
cld
mov
rol
mov
(bad)
pusha
inc
(bad)
shl
mov
and
push
in
movs
cmp
pop
mov
sbb
push
lds
add
cwde
clc
stos
pop
sahf
xor
std
xlat
outs
imul
xor
fstp
xor
jmp
inc
inc
mov
pop
push
retf
rcl
imul
inc
jb
sbb
shr
mov
movs
enter
mov
sbb
pop
adc
mov
mov
push
jmp
sbb
and
scas
push
mov
add
sub
jg
test
inc
xlat
and
pop
mov
mov
imul
pop
mov
adc
loop
out
imul
lods
ret
dec
movs
push
adc
xor
out
movs
icebp
fs
sahf
xchg
pop
pop
(bad)
push
(bad)
arpl
xchg
hlt
fs
into
inc
idiv
push
(bad)
sub
jbe
sahf
sbb
xchg
jge
or
mov
aaa
cvtps2pi
jl
cmps
test
sahf
lods
push
sbb
inc
pop
cmp
and
xor
push
out
push
push
inc
inc
and
jecxz
int3
fisubr
xchg
jge
int3
call
mov
rol
or
pop
cmp
xchg
outs
pop
sbb
and
ds
xor
adc
mov
mov
dec
xor
arpl
add
repz
add
jb
addr16
in
xchg
xchg
sbb
or
jge
lods
cmps
or
pushf
sub
xor
js
cli
add
clc
test
pusha
stos
mov
jne
xor
repnz
or
cmp
div
pushf
nop
push
adc
mov
sbb
cmp
test
xor
ins
jbe
mov
adc
pushfw
mov
test
fcom
xchg
fmulp
jae
cmp
cmp
(bad)
fdiv
pushf
inc
mov
xchg
in
jmp
call
xchg
rcl
jecxz
(bad)
jp
add
adc
cmp
test
outs
sub
xchg
mov
jae
repz
aas
xchg
imul
in
jmp
pop
(bad)
add
jmp
xchg
shl
inc
mov
arpl
sub
fisub
imul
mov
lea
data16
push
adc
mov
in
xchg
sbb
movs
sbb
xchg
test
test
sbb
jne
adc
ficomp
(bad)
ss
xor
cmp
pop
into
jmp
test
jg
stc
xchg
pop
and
dec
hlt
cmps
inc
cld
pop
or
pop
loope
xchg
push
in
rol
scas
scas
retf
ds
in
sub
xchg
lods
push
dec
aad
scas
or
xchg
xor
or
loopne
bound
cwde
imul
scas
mov
js
cmp
rcl
xchg
pop
mov
adc
jae
pop
add
inc
(bad)
adc
or
jmp
dec
sbb
lock
pop
jne
jo
push
cdq
sahf
add
leave
sbb
retf
adc
push
cmp
popf
mov
nop
pop
in
push
or
xchg
cmp
outs
sub
addr16
push
and
out
sbb
add
mov
aas
clc
repnz
sub
push
pop
push
inc
jle
aam
test
or
out
imul
cwde
call
pop
(bad)
sbb
or
xor
inc
add
adc
addr16
mov
iret
bound
push
jns
and
xor
out
cmp
mov
and
lds
out
ret
jne
xchg
jge
dec
push
mov
lods
lahf
xor
in
xor
jns
call
adc
divps
add
das
dec
(bad)
fsubrp
push
in
xor
in
lds
sbb
mov
out
push
cmc
shl
pop
popa
mov
inc
sbb
pushf
xor
push
fstp
or
mov
fcomi
push
stos
xor
xor
jae
sbb
inc
scas
xchg
mov
push
add
cmp
xchg
mov
xor
cmp
cld
into
jmp
xor
call
into
inc
add
xor
int
and
fimul
(bad)
bnd
xchg
pop
retf
jmp
jmp
jg
or
jne
fwait
mov
push
mov
adc
xor
test
jge
test
scas
rcl
ror
hlt
daa
add
popf
ret
sti
push
mov
je
ficom
leave
push
(bad)
cmp
cmp
inc
jnp
pop
push
push
sub
jle
sub
and
in
pusha
int
(bad)
mov
xor
sbb
push
jo
sub
ins
fsub
sbb
lds
pop
loop
mov
adc
call
cs
pandn
fild
sbb
int3
adc
daa
sub
jmp
out
push
ror
es
xchg
in
xchg
xchg
mov
jg
test
mov
hlt
xchg
inc
cmc
adc
cmp
stc
cli
sub
scas
ins
and
or
pop
leave
jle
xor
mov
cmp
adc
test
int
adc
cmc
cmp
retf
mov
arpl
mov
pop
or
xchg
cli
test
push
jb
add
add
mov
add
(bad)
rol
push
push
(bad)
push
jne
jno
loope
add
rcr
lahf
and
mov
hlt
mov
jmp
fmul
stos
mov
push
sbb
mov
and
add
shl
fdiv
jno
lea
das
add
mov
cmc
iret
jge
aad
and
movs
loopne
es
ss
push
add
ret
add
jle
mov
js
adc
scas
jmp
jno
(bad)
sub
mov
dec
jmp
cld
(bad)
mov
push
push
scas
nop
in
sahf
leave
enter
pop
or
mov
inc
cdq
fist
add
imul
iret
sub
sub
ins
dec
nop
xor
push
pushw
xlat
sub
std
jle
psrlw
mov
xchg
mov
ins
xor
xor
sub
and
adc
cmp
pop
mov
clc
sub
dec
add
data16
ins
sbb
shr
int3
(bad)
xor
mov
shr
jp
into
inc
fs
fcomi
das
mov
pop
(bad)
mov
xor
jmp
repz
mov
xchg
iret
iret
inc
push
cmp
stos
push
dec
lds
in
xchg
cmp
adc
xor
jp
inc
test
jg
pop
and
jno
mov
outs
ins
loop
xchg
cmp
push
rol
push
fs
jbe
rol
sahf
sub
retf
cmp
outs
(bad)
sub
inc
shl
sbb
sti
or
mov
and
jmp
xor
(bad)
xchg
addr16
sub
mov
test
and
icebp
movs
xchg
jne
sbb
stos
in
hlt
stc
xchg
push
aam
data16
(bad)
clc
rcr
jg
jns
cdq
cli
imul
lea
xor
sbb
jmp
add
mov
jp
cmps
mov
or
dec
jbe
adc
sub
scas
dec
jnp
sahf
test
jl
sub
adc
jmp
mov
sub
xor
mov
or
out
pushf
push
fidivr
leave
loop
xchg
jge
xchg
or
stos
subps
and
and
inc
test
inc
pop
jle
nop
dec
mov
push
ins
cmp
sub
dec
fmulp
jns
jnp
jo
or
repz
mov
push
xchg
aad
fwait
cmp
sub
test
not
mov
pop
pop
aas
cld
ins
and
sar
and
xor
(bad)
out
loop
fcom
dec
je
rcr
dec
imul
mov
jae
adc
jl
push
pop
xor
jo
xor
mov
es
loopne
imul
cmp
cmps
add
ins
(bad)
cmps
inc
push
shl
pop
out
mov
and
(bad)
clc
push
not
jbe
shr
js
mov
call
out
push
push
mov
popa
pushf
xor
std
fsubr
adc
(bad)
lds
sub
pop
enter
jg
inc
mov
call
lods
ds
fsubr
mov
(bad)
cmp
push
sub
jbe
pop
mov
cmp
movs
ud0
dec
call
dec
cmp
push
jb
mov
adc
sbb
sbb
(bad)
and
pushf
cmp
clc
ds
dec
push
jg
adc
dec
jg
add
into
cli
dec
cwde
out
div
mov
pop
pushf
(bad)
mov
loopne
sbb
aad
jmp
or
mov
adc
jne
sti
or
adc
stc
mov
pop
pop
test
scas
mov
retf
push
inc
je
div
loopne
pop
jbe
jno
ret
cli
mov
mov
stos
push
xlat
adc
pop
jg
repz
div
push
jecxz
dec
shr
and
cmps
push
aaa
push
add
jb
ret
xor
cmp
fcomp
neg
movs
add
dec
mov
aad
mov
add
aaa
lahf
push
xor
sbb
dec
adc
scas
xchg
jg
fdivr
mov
pusha
test
cmc
in
pop
inc
pushf
or
mov
movs
pop
mov
fucomip
push
ror
es
sbb
out
retf
ficom
std
sbb
xor
pop
push
aaa
add
adc
push
or
dec
mov
ret
mov
test
pop
and
inc
iret
lahf
push
jbe
cdq
scas
pop
dec
or
mov
out
mov
int3
sti
sub
sbb
xchg
das
push
(bad)
sahf
gs
ret
in
pop
pop
pop
push
pop
sbb
test
sub
xchg
cld
loope
gs
iret
mov
fsubrp
mov
ret
xchg
loopne
sub
inc
int
mov
aam
push
mov
inc
mov
cdq
lea
(bad)
xchg
adc
icebp
sub
mov
call
(bad)
cli
add
call
scas
jb
pop
lds
ret
add
dec
push
fiadd
mov
das
xor
cmps
shr
xlat
cmp
xor
div
push
inc
cmp
cmp
xchg
in
sub
push
pusha
lahf
mov
jmp
jmp
mov
jmp
test
lea
ror
mov
push
sahf
xchg
leave
xchg
lahf
popf
xor
xchg
cmps
mov
mov
mov
adc
pop
mov
aam
jmp
cli
sub
inc
clc
xchg
int
xchg
out
scas
jbe
xor
and
rcl
rcr
jnp
call
and
stc
mov
test
in
sub
sub
xchg
and
jmp
pop
add
cmc
div
lods
cmps
ins
add
in
push
xchg
mov
pop
cli
mov
dec
lea
test
mov
fwait
or
cmc
or
out
xchg
add
pop
pop
sbb
stos
mov
push
mov
shl
repz
shr
ins
and
mov
fsub
test
mov
test
adc
jl
mov
jg
add
xchg
push
scas
adc
call
add
add
xchg
cmc
stos
xlat
sub
sbb
lds
xchg
int3
mov
addr16
jmp
pop
sbb
mov
cmp
test
adc
cmps
jb
jle
fidiv
mov
std
xchg
sbb
pop
aad
leave
call
jb
rcr
push
add
pop
nop
adc
test
bound
jb
(bad)
jae
fnstcw
aam
aas
mov
movs
sahf
lahf
in
nop
mov
loopne
mov
into
inc
jnp
mov
imul
jo
jmp
jnp
test
xor
push
in
dec
mov
call
sub
xchg
in
das
dec
and
add
mov
fs
pushf
xchg
popf
(bad)
loopne
add
movs
sbb
out
pop
mov
push
mov
xchg
fwait
pop
push
jb
or
xlat
xchg
add
sub
pop
aad
and
rcr
(bad)
xor
sbb
outs
ret
xor
push
sbb
pop
pop
in
inc
fwait
pop
nop
ds
out
fs
(bad)
movs
std
mov
int3
xor
push
scas
push
dec
adc
retf
push
xchg
rol
cmp
dec
xor
scas
cmp
mul
aad
daa
fstp
fsubr
dec
mov
mov
pushf
out
ds
inc
and
cmp
ins
inc
xor
cmp
xor
stc
mov
xchg
jmp
js
jge
repnz
mov
add
leave
or
scas
and
les
xchg
test
stos
push
stc
gs
arpl
jb
ins
out
xchg
je
iret
sbb
add
jge
test
(bad)
inc
push
fisttp
inc
cmp
add
cmp
test
cmovle
or
sub
outs
mov
stos
stc
repz
add
les
or
add
adc
xor
sbb
icebp
int3
mov
sahf
xchg
enter
add
dec
jmp
xchg
or
lds
pop
xchg
in
mov
sbb
imul
add
mov
dec
and
mov
rol
push
xlat
lock
lea
adc
add
mov
cmp
(bad)
es
icebp
pop
fdiv
jb
jo
aam
inc
push
vhsubps
inc
lds
(bad)
and
jno
popf
jb
mov
les
xchg
xchg
push
mov
xor
lock
test
dec
imul
std
cmps
int
xor
ret
sbb
enter
inc
arpl
rcl
and
pop
outs
std
repnz
arpl
cmps
fs
cmp
and
dec
mov
repz
out
std
out
aas
mov
fbstp
cmp
mov
inc
and
inc
xor
movs
mov
xor
sbb
icebp
sbb
dec
mov
xor
mov
clc
inc
fwait
int3
(bad)
ds
mov
push
pop
dec
sub
retf
shl
or
fadd
xchg
mov
mov
jge
bound
sar
cmps
(bad)
in
add
shl
or
xor
fcom
pop
mov
adc
imul
mov
leave
add
sbb
out
push
cmp
dec
push
jno
cmc
xor
adc
mov
cmp
mov
inc
push
fistp
sub
xor
pop
inc
mov
int
mov
ret
xor
outs
leave
cmps
sbb
sbb
sub
cmp
dec
out
mov
into
jns
xchg
cs
cld
aaa
sub
dec
xchg
retf
sbb
mov
imul
popf
xchg
nop
xchg
sbb
dec
mov
clc
adc
mov
xor
repnz
mov
add
jne
leave
or
cmp
pop
jmp
aas
jns
inc
ins
jae
add
cmp
(bad)
into
outs
pusha
sub
push
dec
ss
jecxz
stos
test
sbb
sub
add
jne
dec
cmp
xor
jp
fsubp
mov
cmp
jmp
dec
fst
std
pop
xchg
test
or
shr
mov
pop
xchg
je
pop
ja
idiv
add
pop
movs
mov
push
(bad)
xlat
fdivr
xchg
fs
xchg
and
hlt
adc
push
xor
dec
mov
and
or
ffree
sub
outs
mov
mov
cmp
mov
mov
mov
cs
rcl
jg
aad
sub
in
cli
pop
cli
jg
rcr
cli
push
xlat
push
inc
ss
ins
mov
aad
jo
pop
xchg
shl
(bad)
in
jl
movs
push
and
lods
jmp
dec
es
retf
ins
call
cmp
dec
cmp
push
lea
retf
ret
add
pop
jmp
sbb
out
loopne
enter
fdivr
hlt
lock
xchg
fmul
rol
mov
stos
mov
mov
xchg
inc
iret
jmp
inc
(bad)
rcl
jbe
pop
add
sub
push
imul
test
je
bound
div
cmp
pusha
or
adc
sub
cmp
and
cwde
push
scas
ret
or
rcr
push
lds
mov
lea
mov
popf
int3
in
lea
push
shl
jmp
xor
ins
xor
jnp
push
jnp
outs
mov
stos
or
add
lds
inc
mov
push
outs
mov
sbb
fwait
mov
pop
aam
clc
retf
xchg
jecxz
jmp
push
sub
hlt
test
movs
jl
xor
fisubr
cld
and
pop
or
pop
add
jo
test
push
stc
js
pop
jb
or
mov
inc
jmp
inc
mov
mov
and
xchg
popa
sbb
mov
stos
test
adc
aam
fxch
push
cld
inc
push
out
mov
pop
xor
les
xchg
(bad)
cmp
inc
jge
push
push
daa
inc
sbb
sub
push
adc
ins
mov
jge
inc
cmc
test
gs
ja
ror
adc
ds
inc
push
xchg
adc
sub
ds
lods
clc
cmc
dec
sub
xchg
xchg
rcl
es
mov
mov
aaa
inc
pop
push
sub
cmps
mov
into
retf
mov
rcr
ss
int3
stos
push
add
or
push
mov
test
mov
movs
sub
int3
fsub
mov
add
cmps
adc
test
aad
adc
push
dec
pop
cmp
test
mov
xchg
call
out
sahf
push
popf
pop
imul
cmp
mov
sub
sti
bound
rcr
xchg
or
mov
(bad)
repnz
fistp
movs
add
mov
test
push
je
(bad)
test
dec
rcr
sbb
outs
push
pop
cmps
pop
(bad)
pop
push
cwde
lea
mov
loop
jbe
mov
adc
push
add
mov
sub
in
fisub
sbb
clc
or
inc
lock
add
jle
clc
or
dec
nop
stos
mov
ficom
sbb
icebp
stc
fdiv
dec
push
mov
push
pop
into
fdiv
(bad)
mov
and
pop
pop
push
xor
or
mov
adc
shl
call
add
jmp
mov
popf
jmp
adc
push
popa
adc
jbe
cld
sub
sub
in
movs
mov
(bad)
adc
or
adc
dec
sub
add
stos
add
out
jb
mov
pop
push
adc
in
and
std
fwait
pop
and
cwde
jecxz
in
cdq
inc
and
jl
sub
push
xchg
dec
adc
int
test
mov
inc
cld
or
mov
add
fnstsw
das
popa
(bad)
movs
jmp
push
aaa
jns
jle
out
inc
popf
clc
loope
loopne
dec
mov
xor
cmps
sub
or
cmp
popf
sub
out
sar
and
mov
dec
add
jno
or
mov
sbb
js
enter
mov
sbb
mov
lock
jmp
pushf
fldcw
rcl
mov
inc
daa
loop
sahf
cmp
push
mov
mov
ja
daa
adc
push
mov
rol
and
sub
loopne
adc
imul
add
and
call
jnp
cmp
sub
xchg
outs
cmps
shr
js
fcmovb
ins
in
dec
mov
icebp
xor
in
pusha
mov
xor
pusha
stc
les
fdivr
lods
cmp
jge
mov
fwait
and
mov
adc
xchg
movs
and
imul
enter
xchg
(bad)
scas
(bad)
cmps
ins
out
mov
inc
test
xchg
mov
lahf
xchg
dec
stos
imul
sti
mov
jmp
fadd
retf
cmp
jns
ins
push
imul
mov
cmp
int
push
mov
jno
leave
add
test
dec
push
pop
int
push
fsubr
scas
sub
imul
cvtps2pd
and
inc
xor
ja
dec
sbb
mov
bound
std
mov
add
push
sbb
nop
rol
push
ins
pusha
daa
sub
(bad)
push
popf
mov
mov
aaa
inc
jbe
fld
add
push
inc
sbb
mov
pop
cmp
add
popa
das
mov
push
xchg
stos
loope
out
xchg
jg
addr16
mov
in
xor
(bad)
mov
jno
nop
mov
cmp
sbb
lahf
sahf
fdiv
mov
loop
adc
adc
xor
push
mov
mov
xchg
jne
fwait
push
outs
cmps
mov
sbb
mov
fld
xchg
in
loop
mov
ins
mov
mov
(bad)
mov
mov
out
mov
sahf
ja
adc
adc
add
nop
repz
mov
fist
ret
pop
ficom
jno
rcr
pop
fwait
daa
fldpi
push
sbb
ret
pop
dec
(bad)
cmc
in
enter
mov
jnp
adc
jno
mov
in
jnp
xchg
pop
lahf
repz
sub
stc
inc
cdq
sbb
(bad)
das
add
adc
sahf
fist
cld
dec
test
lea
aam
call
stos
fwait
cdq
or
outs
in
mov
push
xor
push
imul
push
push
sbb
mov
lahf
inc
fistp
push
pop
fist
add
add
inc
mov
pop
int3
and
mov
mov
ins
aaa
cli
sbb
imul
cmc
dec
dec
mov
test
pop
jp
test
xchg
sbb
fstp
xchg
outs
push
or
(bad)
xchg
mov
inc
add
xor
stc
inc
loope
not
add
je
sbb
cs
(bad)
pop
lock
mov
stos
movs
sbb
fidiv
jb
jb
imul
sbb
cmc
dec
dec
out
outs
dec
xor
push
leave
cmp
mov
out
in
mov
add
fs
jmp
push
iret
in
mov
and
call
(bad)
pop
nop
not
lods
sub
cs
xchg
cmp
jae
xchg
push
mov
dec
mov
sbb
fst
mov
and
sub
add
inc
jmp
sub
call
mov
clc
nop
and
stos
fstp
mov
or
into
leave
xchg
bound
xchg
or
xor
and
popa
rcr
jle
push
jle
icebp
aad
(bad)
lods
xchg
inc
xor
inc
jbe
leave
in
inc
inc
adc
or
mov
pop
ins
dec
pop
and
jl
mov
sbb
add
xor
add
adc
ds
pop
sub
xchg
sub
out
cmp
sub
repz
sub
mov
sbb
icebp
pop
loop
dec
jmp
dec
fidivr
jo
lock
add
not
retw
inc
cmc
push
xor
imul
xchg
jg
aam
pop
rcr
outs
ins
inc
sbb
mov
pop
shr
cdq
es
push
and
sbb
push
sub
jecxz
jns
dec
ds
bound
imul
test
daa
enter
aam
movs
rol
dec
call
sbb
hlt
mov
pusha
inc
outs
pushw
or
daa
mov
jg
fdiv
adc
mov
add
inc
adc
cdq
push
push
sahf
dec
bound
inc
pop
jg
xchg
dec
add
xchg
add
mov
pop
movs
sub
aad
dec
dec
xchg
mov
jl
cmps
into
mul
and
js
les
sbb
add
jecxz
jo
lahf
in
mov
jne
sti
add
jno
scas
out
xchg
mov
xor
nop
inc
or
mov
mov
sub
cmp
cmps
cmps
js
xor
add
loop
jno
sub
out
es
clc
ins
xchg
fwait
sub
dec
xor
sub
retf
mov
(bad)
fstp
pop
hlt
pop
(bad)
(bad)
js
dec
inc
stc
mov
retf
jg
stc
cmp
loope
adc
xchg
aam
fdiv
or
lods
mov
inc
aam
stc
mov
mov
mov
(bad)
push
(bad)
xor
scas
out
sbb
lahf
mov
sub
repnz
xchg
add
cs
xchg
in
fwait
pop
scas
call
imul
adc
jmp
iret
dec
imul
scas
icebp
xchg
jns
xchg
pop
pop
fisubr
call
inc
cmp
cli
mov
push
mov
sahf
lock
mov
push
mov
fst
mov
pop
fcomp
mov
daa
and
pop
sbb
retf
mov
adc
mov
movs
pushw
test
cmp
push
pop
jge
std
scas
je
outs
and
and
cdq
mov
pushf
ins
jmp
inc
mov
pop
dec
push
das
js
or
popf
fiadd
stos
fnstsw
test
xchg
retf
(bad)
data16
or
inc
inc
mov
mov
sub
inc
lds
nop
pop
fisttp
inc
add
mov
(bad)
push
in
xor
ss
and
(bad)
fdivr
add
and
out
scas
pop
leave
xchg
pop
xchg
cmp
push
sar
stos
in
fld
mov
imul
dec
lods
cmp
stc
fmul
push
ins
push
loopne
dec
xchg
test
pop
mov
pop
int
jp
das
xchg
mov
mov
bound
cmp
mov
adc
imul
aas
sbb
psubw
xchg
sbb
mov
xchg
(bad)
enter
or
adc
nop
call
xor
inc
xor
ret
les
mov
aas
stc
ins
fimul
xor
jbe
out
cdq
cli
les
or
ds
add
test
jne
jl
pop
xchg
ret
and
jmp
fild
bound
in
loope
rcr
mov
bswap
pop
shr
movs
push
add
jmp
dec
sbb
jnp
mov
out
ror
arpl
aas
aaa
sar
jns
mov
or
xor
xchg
adc
xor
and
es
push
push
call
jmp
cwde
cmps
ja
jnp
lock
push
push
cmps
hlt
in
retf
pop
hlt
push
dec
sbb
sbb
adc
inc
mov
or
lds
popa
cmp
sub
and
pop
add
shr
(bad)
in
lahf
lea
(bad)
fnstcw
or
lds
jmp
outs
jns
mov
mov
dec
pop
sbb
jbe
movs
and
mov
jle
mov
fbld
sbb
cli
adc
shr
xor
sar
add
das
ins
xor
mov
sti
call
js
loope
and
and
mov
ss
out
cmp
imul
add
cmp
lods
adc
imul
aaa
mov
out
push
push
cmc
pop
jno
pop
xor
mov
loopne
ret
ss
out
jnp
les
cld
add
cmp
jne
aas
out
xor
adc
lock
jecxz
xor
js
fsub
fisttp
popf
push
rcl
les
rol
jmp
mov
and
cmp
retf
pop
(bad)
out
mov
jmp
push
mov
mov
push
add
pop
movntps
sub
and
retf
cmp
mov
sub
jle
push
ins
or
pop
test
jg
and
mov
repz
sub
push
test
xor
jp
push
pop
dec
add
jno
je
test
fwait
lds
mov
bnd
sbb
pop
rol
dec
lea
xchg
mov
enter
add
outs
(bad)
adc
add
xchg
out
jno
cli
icebp
sbb
mov
neg
or
out
ss
push
arpl
xor
cmp
dec
pop
jmp
xlat
jle
dec
add
cmp
jmp
sub
fild
mov
test
push
out
jo
test
leave
cmp
push
xchg
pop
cwde
and
pop
push
mov
and
jl
xchg
jne
sbb
add
lds
fnsave
jmp
cmp
jp
or
mov
and
cmp
mov
jbe
jnp
sbb
dec
js
add
adc
pusha
ss
outs
xchg
dec
cld
repz
aam
pop
xor
push
xor
and
in
and
ins
sub
inc
ret
push
enter
jno
div
outs
out
sub
mov
jle
adc
dec
cmps
cmp
aad
test
add
hlt
cld
in
pushf
inc
jge
xlat
out
jl
enter
and
scas
cld
shl
push
push
rcr
sub
repnz
push
nop
and
xchg
ficomp
or
mov
inc
call
das
jmp
jmp
sub
fs
pop
(bad)
js
cmps
dec
dec
outs
jl
inc
xchg
jbe
cmps
scas
scas
mov
fidiv
(bad)
mov
iret
ins
ins
daa
jmp
xchg
fcmovne
sub
lds
jb
pop
inc
daa
aaa
mov
mov
sub
in
sub
sti
mov
fwait
push
mov
ins
adc
jl
adc
jg
xchg
or
mov
loop
and
ret
popa
xchg
inc
dec
cmc
pop
in
ret
loop
js
adc
or
mov
pop
popf
lods
loop
rcl
sti
loop
pop
pushf
xlat
inc
ss
push
add
jl
sub
jbe
(bad)
mov
(bad)
dec
das
stos
jno
push
sub
mov
mov
jecxz
mov
mov
mov
push
fisubr
repz
pop
cli
xor
jmp
sar
jb
mov
inc
call
sbb
retf
push
jmp
into
ret
lods
das
pop
mov
push
and
add
jmp
ins
lods
loope
ficomp
cli
pop
cmp
inc
jge
mov
dec
sti
add
cmp
enter
aad
mov
jp
xchg
icebp
lods
pop
popf
add
mov
pop
mov
adc
leave
cmp
mov
cmps
rcl
iret
cmp
sbb
sbb
lock
hlt
sub
push
fdivrp
mov
inc
cmp
inc
popa
pop
out
cmp
jecxz
mov
xor
add
enter
mov
or
imul
xchg
inc
adc
push
test
imul
hlt
loopne
(bad)
jns
(bad)
fstp
jns
bound
dec
xor
outs
fbstp
or
mov
jbe
inc
retf
test
xor
xor
clc
(bad)
fistp
sbb
jg
in
cmp
stos
add
scas
(bad)
xchg
mov
pop
lods
push
test
in
call
xchg
add
std
fcom
mov
pop
outs
icebp
inc
imul
mov
jo
xor
jp
loopne
sahf
mov
sub
retf
sub
icebp
add
jl
les
push
xchg
imul
jle
int
popf
or
add
das
xchg
leave
sbb
das
ror
xchg
adc
fcom
mov
adc
das
aaa
arpl
push
and
nop
mov
mov
xor
fucomi
mov
inc
mov
push
adc
lods
cs
sub
test
aas
jmp
jmp
push
or
fsubr
in
outs
scas
mov
leave
and
xchg
ret
xchg
loope
push
dec
outs
pop
in
inc
(bad)
mov
jno
jg
out
cmp
xor
dec
jp
or
adc
(bad)
lea
(bad)
mov
mov
xlat
xchg
jle
cmp
stc
adc
addr16
aad
outs
and
arpl
pop
pop
pop
cmp
or
(bad)
movs
inc
add
jnp
adc
enter
test
scas
pop
stos
inc
loope
and
add
pop
push
imul
mov
dec
xor
mov
cmp
jne
mov
js
push
cmp
cmc
jecxz
aam
pop
call
test
xchg
push
jns
xor
dec
ins
stos
loopne
js
xor
stos
push
movs
stos
sti
pushf
pop
ret
and
fstp
and
cmp
push
jecxz
bound
cmp
jo
jns
data16
rol
xor
loope
mov
movs
test
retf
lea
jb
or
sub
pop
scas
inc
(bad)
psubb
dec
call
in
xor
(bad)
call
dec
aad
sti
pop
aas
idiv
dec
pop
aam
lds
cmp
cwde
adc
mov
ins
mov
cmps
or
fwait
adc
test
jno
pusha
fdivrp
scas
(bad)
or
dec
movs
cmp
stos
xchg
pop
pop
test
mov
scas
mov
adc
fld
and
in
(bad)
nop
cld
call
xchg
mov
jbe
mov
sub
mov
cmp
hlt
cli
pop
lea
jns
dec
imul
(bad)
pop
pop
loopne
xchg
ss
cmp
je
fst
int3
sbb
adc
sub
fdivr
int3
fisttp
fnstenv
push
sbb
pop
iret
mov
mov
outs
fdivr
cmp
(bad)
sbb
ds
movs
push
mov
sbb
rcl
adc
jbe
adc
ds
call
jmp
adc
aas
jns
sub
cmp
dec
fisub
lea
cs
in
(bad)
in
pop
sbb
jecxz
cmps
xor
xchg
gs
in
test
or
in
outs
sub
push
loop
cmp
data16
loopne
or
and
lahf
out
sbb
loopne
cld
std
fst
out
arpl
rcl
push
jo
add
xchg
aad
jb
add
packuswb
(bad)
or
fisttp
ror
ficomp
ret
mov
fwait
sub
fnsave
call
in
cmp
and
jae
or
mov
test
mov
gs
dec
push
or
pushf
stc
inc
xchg
mov
mov
pmaddwd
cmp
mov
movs
xlat
call
loope
adc
push
lahf
or
add
gs
notrack
cwde
xor
sbb
stc
les
call
aaa
mov
push
es
fsubr
push
and
ret
ja
pushf
mov
cli
cmps
jl
pop
mov
xchg
push
loope
les
fwait
xor
jbe
ret
js
jecxz
jno
scas
imul
adc
or
push
call
dec
lock
sub
std
mov
xchg
push
push
or
in
outs
and
dec
pop
sbb
scas
mov
pop
(bad)
and
aas
jp
push
add
jbe
sub
jno
xor
lods
addr16
adc
inc
(bad)
sub
and
mov
mov
mov
lods
xchg
test
repz
sbb
jns
pop
mov
gs
mov
call
xor
in
popf
scas
(bad)
ss
aaa
pop
push
adc
jl
inc
scas
add
ror
and
dec
jp
xchg
xchg
shl
pop
inc
iret
mov
xchg
pmullw
nop
pop
mov
xor
push
sbb
pop
xor
test
fistp
outs
inc
stos
jae
adc
pop
inc
addr16
test
or
(bad)
cmp
sar
jmp
ja
cmc
xor
call
test
cmps
push
daa
and
imul
sbb
mov
inc
stc
repz
jmp
packuswb
jne
or
mov
fmul
cmp
inc
sti
push
xchg
cmps
enter
adc
add
mov
jg
sbb
add
xor
(bad)
jbe
mov
stos
rcl
sbb
or
mov
xchg
mov
out
mov
fwait
inc
mov
pop
mov
lock
cmp
inc
test
sahf
outs
sub
das
repnz
popa
inc
(bad)
std
cmp
test
idiv
or
not
mov
add
cs
inc
mov
sub
(bad)
or
inc
xchg
jno
std
push
iret
scas
xchg
add
cdq
jle
xchg
push
sbb
add
jo
pop
data16
imul
sbb
mov
ret
cmp
test
daa
lds
or
mov
push
dec
sbb
cmps
or
scas
jle
or
in
xchg
or
and
rol
mov
pop
inc
mov
test
xor
stc
and
mov
(bad)
sub
sub
addr16
imul
xchg
push
cs
scas
add
pop
(bad)
loop
(bad)
sub
push
and
stc
int
dec
lock
pusha
jmp
cmp
dec
fwait
into
movs
add
jmp
jo
div
mov
and
sub
lea
dec
inc
or
sub
out
test
lahf
mov
or
inc
jo
add
fucomp
xor
and
movs
lods
loopne
dec
movq
arpl
mov
pop
cs
jo
outs
dec
repz
es
push
cdq
(bad)
aas
stos
pop
inc
pop
retf
xor
jmp
sbb
push
(bad)
retf
push
mov
out
(bad)
stc
lods
bound
ret
sar
adc
bound
push
and
sub
clc
cmps
jmp
push
cmp
stc
mov
ins
mov
cmp
out
ja
push
jno
popa
pop
add
jns
(bad)
(bad)
pushf
shr
leave
es
faddp
mov
push
xor
or
cs
div
mov
xchg
jecxz
cmp
loopne
ret
das
sti
xor
hlt
je
bound
ror
or
cmc
in
fist
sub
or
dec
add
mov
adc
nop
xor
add
fst
jg
loop
mov
fsub
and
xchg
outs
pop
add
fmul
lods
out
int3
ret
ins
xlat
into
jecxz
jmp
cmp
pop
jmp
jecxz
inc
int
stos
jp
mov
lods
xor
leave
cmp
cs
jg
jp
jae
pop
nop
in
add
dec
retf
jb
mul
dec
das
fcmovnu
aam
call
in
xchg
cmp
shl
not
ds
hlt
loope
add
jg
xchg
pop
shr
out
cdq
ins
test
jmp
xchg
out
lods
mov
jbe
pop
pop
jo
mov
loopne
mov
mov
cmps
xchg
jmp
jmp
(bad)
xchg
pop
cmp
popf
adc
pop
push
mov
xor
xor
mov
mov
mov
jnp
jge
add
xchg
(bad)
push
into
mov
imul
fcomp
into
movs
mov
(bad)
mov
dec
inc
fwait
(bad)
push
xor
xchg
rcl
adc
jmp
cmp
retf
pop
aad
jmp
mov
and
(bad)
(bad)
push
mov
inc
sub
push
hlt
xchg
jno
in
mov
and
or
pop
sub
cmps
repz
outs
push
sbb
sub
cmp
pop
mov
out
ins
sbb
push
(bad)
cli
jb
sub
jb
out
push
scas
xchg
dec
dec
push
int3
les
lods
mov
out
mov
mov
ins
xchg
pop
pop
push
dec
jnp
mov
mov
cli
jge
adc
jle
leave
xchg
cwde
xchg
mov
inc
xor
out
sub
nop
mov
add
cmc
mov
aad
pop
inc
pop
dec
dec
mov
add
pop
mov
pop
or
pop
mov
rcr
sbb
pop
loop
test
stc
xchg
mov
pop
rcr
and
pop
lds
aaa
movnti
neg
pop
in
mov
outs
push
ja
adc
sub
ror
retf
lahf
cmp
push
clc
or
pop
jmp
inc
xchg
sbb
dec
mov
sub
mov
cmp
in
ret
push
inc
inc
push
lds
dec
push
daa
in
jmp
fsub
sub
out
push
dec
or
cmp
fcom
inc
adc
xchg
adc
and
add
retf
mov
sub
sub
inc
cmp
fs
mov
sbb
repz
in
pop
stos
aam
in
mov
pop
pop
in
xlat
jg
pop
inc
or
mov
bound
pusha
pop
cli
dec
or
dec
je
cli
mov
sub
out
pop
cli
into
clc
test
mov
rcl
push
or
arpl
daa
jb
je
icebp
fidiv
imul
loope
and
and
cmp
nop
cmc
fsub
jne
fwait
push
loopne
cmp
call
pop
sbb
call
gs
jge
std
cmp
push
or
push
xchg
ficom
imul
scas
call
cwde
add
jb
pop
or
lea
lahf
bound
xor
sbb
fcom
outs
push
mov
xchg
not
push
shl
popa
sbb
iret
cmp
xchg
int
jns
xchg
inc
mov
aam
and
icebp
jg
popf
scas
add
js
add
xchg
or
das
arpl
jne
movs
nop
mov
and
leave
mov
enter
movs
cmp
sbb
sbb
icebp
pushf
push
xchg
xlat
sbb
and
sbb
xor
into
in
pop
mov
test
sub
cmp
push
movs
ret
mov
rol
push
iret
outs
fmul
pop
aad
jnp
cmp
arpl
std
iret
mov
pop
xchg
xchg
imul
push
inc
loop
mov
pop
jno
in
fld
js
inc
xor
cmps
push
inc
ss
mov
(bad)
(bad)
xchg
movs
xchg
xor
jle
mov
pop
mov
xor
lds
test
inc
popf
push
js
or
stos
adc
mov
xor
xchg
jnp
or
jns
push
xchg
jns
retf
cmp
pop
jmp
rol
test
movs
test
push
(bad)
pop
sbb
push
sar
stc
mov
or
mov
sub
inc
sub
push
rcl
pop
push
sbb
outs
pop
das
adc
cmp
mov
or
cmp
stc
mov
sbb
cmp
dec
jbe
pop
sbb
stos
pop
mov
icebp
idiv
js
test
sub
mov
aas
(bad)
ja
jle
pusha
pushf
sbb
dec
push
pop
add
cmc
cwde
rcl
xchg
sar
xor
les
sar
dec
or
mov
add
mov
arpl
call
fld
add
pop
(bad)
lods
pop
sti
add
pop
xchg
retf
je
aas
jns
les
jnp
inc
mov
xchg
xor
fistp
(bad)
lods
ds
mov
dec
xchg
dec
sub
xor
aas
pop
in
mul
inc
inc
dec
mov
nop
push
cs
pop
rcr
fistp
xor
mov
cdq
call
aam
inc
lea
rol
inc
xchg
js
add
xchg
push
iret
hlt
inc
dec
mov
push
test
adc
xchg
fwait
inc
push
push
jecxz
(bad)
jle
stos
jnp
popa
loopne
and
dec
repnz
pusha
sub
das
aas
inc
pushf
outs
cmp
mov
hlt
and
jmp
fisttp
leave
ss
jae
push
dec
dec
cmp
arpl
push
es
repz
jecxz
xor
mov
mov
sbb
int
adc
mul
mov
inc
mov
mov
gs
sub
sbb
pushf
call
movs
mov
mov
retf
int
icebp
mov
ins
inc
rcr
in
ret
xor
dec
jl
ins
in
mov
mov
dec
test
iret
mov
dec
xchg
ja
fs
or
push
sbb
rcl
int
mov
push
push
arpl
into
into
mov
loop
rol
and
jo
(bad)
cld
mov
add
cs
inc
xor
das
stos
retf
mov
icebp
call
(bad)
mov
ins
cmc
mov
jmp
test
jl
mov
sar
push
push
movs
dec
sub
in
mov
pop
pop
cmp
mov
mov
push
mov
rol
repz
lock
and
nop
in
and
push
pop
test
xchg
push
sbb
les
sbb
mov
loop
xor
hlt
movs
xchg
stos
mov
dec
pop
jbe
mov
mov
jge
test
test
pop
int3
mov
push
ret
in
xor
imul
in
adc
mov
test
scas
sbb
out
shr
cwde
jns
test
movs
mov
in
icebp
mov
pusha
test
test
repnz
dec
push
into
adc
inc
sub
sbb
xchg
or
out
mov
hlt
or
cmps
mov
push
idiv
jp
mov
clc
shr
and
ja
cmp
fst
mov
dec
and
rcl
pop
repnz
cwde
push
pop
xor
aaa
movs
add
rol
out
jl
inc
xor
xchg
xchg
adc
push
xchg
loop
outs
mov
adc
iret
outs
nop
sti
dec
inc
into
adc
adc
stc
mov
daa
out
cmp
lds
fisttp
aam
loope
xor
cdq
mov
(bad)
mov
mov
mov
(bad)
scas
iret
push
scas
and
xor
xchg
jecxz
push
push
lods
lods
adc
int3
js
(bad)
pusha
je
(bad)
cli
inc
and
js
push
out
inc
int
aaa
xchg
data16
arpl
imul
jp
cmp
mov
xchg
jo
icebp
stos
mov
std
mov
sub
mov
mov
mov
dec
mov
(bad)
adc
xor
xchg
jae
fadd
aas
cwde
retf
dec
or
adc
pop
adc
(bad)
aaa
jae
in
in
cmps
add
aad
mov
or
dec
dec
test
cmps
inc
enter
retf
push
push
cld
push
mov
push
and
leave
pop
jo
mov
ins
sub
cmc
retf
dec
dec
mov
push
or
jecxz
inc
adc
pop
pushf
(bad)
jle
arpl
mov
les
test
les
(bad)
cmp
jo
aad
mov
movs
stos
imul
fnstsw
mov
daa
dec
inc
cmp
or
arpl
ja
inc
data16
xchg
lds
out
jle
lods
cmp
xchg
jo
mov
into
jmp
ror
jo
sub
bswap
xor
fwait
push
dec
std
mov
pop
adc
cmp
xchg
lock
pushf
ror
pop
icebp
mov
dec
mov
xchg
push
add
and
jbe
push
adc
outs
icebp
clc
clc
sub
inc
pop
stc
xchg
fidivr
ret
test
js
sbb
hlt
mov
sbb
gs
jno
hlt
or
fist
lock
cli
jo
shl
inc
movs
jne
es
mov
jo
push
fadd
icebp
mov
(bad)
int3
mov
jl
add
or
sub
das
pusha
retf
sahf
push
sub
xchg
popf
cwde
push
pop
hlt
jle
fdiv
push
bound
jp
mov
or
inc
sub
clc
je
xor
ss
mov
sub
dec
aad
out
aas
mov
mov
adc
out
mov
shr
and
jno
dec
and
mov
push
add
mul
sbb
xor
ss
popf
sbb
jl
int3
dec
xor
jae
or
xor
out
std
cmps
fstp
push
jl
fisub
mov
jns
popf
or
outs
lahf
mov
jb
repz
pop
nop
daa
imul
scas
imul
and
adc
push
and
push
aam
int
ror
add
iret
sub
hlt
fmul
pop
sbb
push
cmp
adc
fdivr
das
push
sti
fs
mov
fldcw
shr
push
fucomp
cli
mov
popa
je
pop
mov
aaa
out
or
cmp
mov
pusha
int3
mov
movs
inc
sub
xor
mov
inc
mov
push
rcl
xchg
test
mov
sub
sbb
xchg
mov
test
cmp
add
les
pop
xor
outs
test
fbstp
jmp
and
in
pop
and
movs
mov
adc
push
jle
fs
arpl
push
fcomp
jns
fstp
call
clc
pushw
sub
aaa
neg
sahf
adc
into
or
xor
and
xlat
xor
fmul
dec
or
mov
fwait
or
mov
mov
push
addr16
pop
xor
push
sar
pop
push
fabs
xchg
inc
(bad)
sbb
imul
add
jg
retf
ins
scas
and
xor
stos
mov
clc
and
cli
mov
cmp
dec
mov
push
mov
xor
aad
fs
cmc
int3
iret
push
dec
jg
lock
call
mov
ficom
lds
sub
mov
fistp
int3
cmp
imul
or
jecxz
loop
fwait
and
or
icebp
lahf
xor
inc
add
mov
and
(bad)
sub
xlat
div
xor
test
lahf
out
loope
xchg
jb
out
push
push
or
call
or
xor
push
inc
(bad)
pop
lods
sbb
fistp
xchg
and
scas
push
mov
push
or
mov
nop
fld
dec
rcr
jo
mov
or
jmp
bound
xchg
sbb
sbb
mov
in
add
cmps
adc
sub
dec
pop
pusha
mov
pop
xor
inc
inc
xchg
ds
cmps
(bad)
scas
push
lods
ds
sub
aaa
mov
cmp
sbb
mov
push
sbb
mov
icebp
outs
mov
pop
in
rcl
push
fstp
adc
mov
sbb
scas
jl
inc
mov
pop
(bad)
pop
lock
jmp
aas
outs
jg
js
sub
mov
add
mov
fldenv
and
test
dec
(bad)
add
mov
ror
test
movhps
push
(bad)
push
cmps
xchg
dec
cmp
xchg
js
push
or
ins
pop
loop
imul
jg
scas
int3
or
cmp
push
ss
shr
(bad)
cld
jmp
or
mov
fldenv
mov
lahf
pop
add
add
(bad)
imul
test
mov
pop
add
push
xor
xchg
pop
dec
imul
mov
in
sti
jnp
movs
movs
enter
ins
jge
sti
push
cli
sub
dec
add
push
inc
stos
retf
int
retf
leave
sub
call
sbb
and
(bad)
cli
or
pop
sbb
int
inc
sub
dec
cmp
inc
test
inc
and
mov
dec
(bad)
xlat
xchg
aam
cli
setns
and
arpl
push
mov
push
imul
retf
cmp
push
xchg
test
push
aam
push
xor
pop
retf
movs
pop
mov
adc
mov
jp
lock
jg
ss
data16
cld
shr
out
push
pop
mov
adc
lods
pop
pusha
dec
mov
mov
fcomi
sub
jbe
add
icebp
fnstcw
rol
inc
mov
or
and
icebp
inc
shl
nop
cmp
addr16
xor
nop
repnz
sub
imul
add
and
mov
mov
mov
dec
xor
outs
jno
jmp
popf
push
movntq
lea
fcom
sbb
clc
sub
sub
movs
shl
inc
(bad)
loop
dec
repnz
push
mov
pop
out
jl
popa
cdq
data16
sar
sub
pop
add
aam
dec
adc
mov
movs
jo
ret
jns
inc
in
pop
les
mov
inc
add
fs
and
lods
xchg
mov
cmps
pop
test
fnstenv
(bad)
daa
mov
or
pop
sub
test
(bad)
into
mov
cdq
jge
inc
lods
int
mov
jmp
mov
(bad)
jmp
push
adc
sub
iret
jno
stc
jno
lods
jno
std
jp
adc
retf
xchg
dec
div
push
jns
ret
and
and
retf
or
rol
jle
ret
stos
xor
xor
xor
cli
sub
mov
fsub
jo
sbb
mov
adc
cmp
cmp
push
xchg
je
add
mov
rcl
mov
leave
pop
xchg
jbe
mov
and
in
sahf
inc
pop
mov
pop
xor
scas
out
(bad)
loopne
stos
popa
(bad)
loopne
cli
cmps
retf
push
mov
push
jmp
xchg
cli
rol
movs
dec
xor
ds
inc
pop
fist
ja
push
outs
dec
popa
es
cmp
sbb
test
jl
xchg
mov
ja
cmp
sbb
(bad)
or
int3
and
retf
dec
mov
mov
jae
js
jmp
daa
ins
repz
call
aam
xor
dec
add
inc
test
mov
mov
or
ja
and
cmp
jg
sbb
mov
in
gs
cdq
bnd
xor
push
ret
arpl
mov
cld
sbb
mov
sub
xchg
scas
pusha
out
sbb
sub
sahf
adc
pop
or
adc
and
in
fist
stos
inc
icebp
xchg
push
stc
pop
jl
cld
and
or
mov
sub
je
pop
add
sar
add
pop
xchg
dec
push
out
cmps
push
or
or
out
pusha
gs
mov
lock
or
(bad)
(bad)
mov
sub
pop
stos
ffreep
pop
lea
mov
hlt
rol
lods
test
push
iret
adc
loope
fmul
and
mov
movs
shl
out
inc
xchg
into
and
test
addr16
adc
mov
int
(bad)
push
iret
dec
imul
retf
mov
pop
outs
into
int3
sub
movs
cli
std
cld
cs
pusha
xchg
mov
inc
mov
ror
test
adc
and
push
cs
jl
jge
inc
mov
fst
push
in
retf
or
pop
cdq
aad
jg
popf
arpl
mov
mov
mov
jno
shl
sub
jp
fbld
mov
in
div
test
mov
shr
pop
aaa
sbb
test
mov
sbb
aad
sub
push
arpl
or
adc
and
(bad)
sti
pop
in
jno
(bad)
cmp
outs
mov
out
xor
repz
lds
xchg
or
push
iret
xor
and
test
sbb
ror
push
aaa
(bad)
jne
dec
inc
cwde
(bad)
hlt
jae
pop
jns
mov
cmps
fld
mov
mov
pop
jg
ja
mov
daa
test
mov
ss
xor
pusha
cmp
lahf
jle
mov
and
or
aaa
xor
adc
sar
mov
sbb
addr16
cwde
add
adc
xchg
stc
add
lods
xchg
pop
test
or
scas
push
repnz
jbe
pcmpgtd
out
icebp
aam
cwde
sbb
(bad)
or
sub
xor
cld
scas
popf
xor
mov
ret
mov
out
not
jbe
hlt
xor
adc
dec
(bad)
nop
xor
in
push
icebp
mov
push
jmp
mov
lods
arpl
bound
inc
and
inc
pop
mov
pop
mov
vmread
sub
(bad)
mov
pop
ins
fs
stos
jno
inc
sub
cld
fadd
test
(bad)
push
out
push
test
xchg
sub
cwde
sbb
sub
sahf
sbb
in
jmp
mov
aad
mov
leave
xor
jmp
call
in
sar
jno
mov
and
dec
xor
repnz
outs
js
mov
fst
mov
into
arpl
ret
and
iret
cld
jno
retf
mov
jl
dec
jecxz
sbb
cs
xor
or
nop
call
mov
out
add
mov
adc
jge
dec
inc
lds
movs
cmp
push
mov
mov
hlt
mov
sub
xchg
mov
(bad)
jo
ss
inc
int3
mov
(bad)
dec
dec
out
popf
test
add
cld
push
fimul
fisubr
imul
repnz
jmp
jno
call
dec
int3
mov
inc
neg
aad
leave
lds
jnp
sub
std
push
inc
ins
xchg
(bad)
ret
les
or
sbb
aam
inc
and
fcom
dec
inc
add
push
jl
inc
pop
fcmovu
aad
or
lahf
mov
xchg
arpl
mov
sub
div
fwait
jmp
les
(bad)
xlat
mov
(bad)
into
mov
cmp
js
inc
dec
cld
test
mov
mov
pop
mov
push
fimul
dec
push
jmp
es
stos
lea
adc
ins
ficomp
rol
fwait
push
icebp
fisub
ins
dec
dec
ror
jae
cmp
dec
mov
xchg
out
repnz
out
test
add
sub
sub
fsubr
call
pop
pusha
sub
imul
lea
loope
out
(bad)
cmp
fdivr
gs
pop
inc
cmp
inc
mov
sub
mov
scas
inc
pop
sar
test
enter
cs
and
mov
adc
inc
sbb
push
test
popa
inc
sub
mov
sub
ds
fadd
pop
fwait
jns
sub
ss
xchg
leave
repnz
add
(bad)
int
add
jp
imul
push
mov
fisttp
(bad)
lods
adc
sbb
popf
pop
add
ja
adc
scas
movs
je
pop
loopne
mov
xor
jl
scas
pop
fnstcw
sub
mov
mov
push
icebp
call
xor
iret
(bad)
add
movs
xor
push
mov
dec
imul
xor
ret
adc
pop
mov
inc
add
ds
lahf
or
into
add
adc
mov
mov
retf
xchg
lds
call
test
pop
and
xlat
lods
cmp
inc
hlt
jl
stos
bound
add
sub
dec
jg
mov
xor
push
ja
sbb
mov
push
dec
out
xlat
pop
pop
enter
mov
gs
(bad)
jmp
sub
test
loop
hlt
fwait
dec
jne
and
sbb
pop
or
scas
jne
mov
cmp
sbb
out
add
cmp
lods
xchg
mov
inc
mov
pop
add
lods
scas
pop
sbb
cld
mov
dec
adc
inc
inc
stos
pop
mov
add
push
or
mov
sahf
inc
push
sbb
fidivr
and
popa
push
add
jbe
mov
jmp
(bad)
sar
inc
test
fist
in
jl
push
push
inc
xchg
cmp
xor
jmp
lock
outs
cmp
xor
mov
hlt
jp
arpl
repnz
jmp
int
stos
xchg
pop
xchg
sbb
and
jae
(bad)
ss
ret
fcomip
mov
nop
push
fidiv
adc
sbb
rcl
pop
mov
retf
jbe
mov
cdq
loope
call
push
scas
jae
mov
fsub
sub
dec
and
call
xor
xor
call
sbb
cld
cmp
sub
out
mov
jp
jnp
inc
cdq
fsub
bound
adc
imul
or
rcl
shr
test
cmps
mov
cmp
arpl
xor
or
add
pop
imul
fdiv
push
cmc
(bad)
retf
(bad)
pop
cmp
adc
fucomp
jecxz
hlt
fs
jbe
cwde
test
pop
test
(bad)
arpl
inc
leave
pop
lahf
xchg
and
adc
aaa
xchg
cmp
push
popa
push
outs
and
cmps
dec
cdq
mov
jecxz
mov
mov
loopne
ret
jmp
(bad)
jle
sub
stos
xor
mov
bound
cmp
xchg
cmp
dec
fnstcw
movs
cmc
idiv
cmp
xchg
mov
sbb
mov
cli
arpl
or
pop
retf
push
push
aaa
xchg
loope
or
dec
in
mov
dec
pop
scas
adc
adc
lahf
pop
xchg
add
rcl
mov
pop
hlt
stos
mov
jmp
idiv
cmp
xchg
jmp
lods
mov
xor
sahf
or
adc
pop
pop
in
dec
out
fdivp
dec
stos
inc
aaa
xchg
push
out
inc
into
cmp
in
dec
adc
push
add
rcl
and
adc
inc
and
cli
pop
adc
xor
dec
fidivr
out
jno
sub
popf
sub
mov
les
sbb
xor
je
cmp
(bad)
fcmovbe
enter
aam
mov
pop
and
(bad)
and
or
adc
mov
sbb
iret
outs
icebp
mov
popa
or
pop
nop
pop
cmc
loopne
sbb
cmc
mov
mov
addr16
mov
add
push
ja
push
mov
sub
pop
mov
ja
ret
xchg
(bad)
jbe
xchg
sbb
inc
arpl
mov
mov
sub
movs
sti
sub
repz
jle
mov
aas
mov
jae
sti
mov
sub
pushf
jne
ds
rcl
jge
ds
imul
mov
call
jmp
pop
push
mov
dec
std
pop
cmps
xor
retf
xor
test
leave
push
inc
ds
add
pusha
jl
outs
add
mov
(bad)
mov
cs
daa
and
adc
mov
(bad)
jmp
push
jp
xchg
push
and
or
inc
mov
jmp
aaa
shl
add
fbstp
cmp
je
ret
stos
fsub
sbb
out
rol
inc
add
xlat
cmps
sbb
call
and
mov
xor
loope
hlt
mov
cwde
dec
or
cmc
fistp
xchg
(bad)
in
jl
push
sub
lds
jp
pop
mov
cmp
dec
dec
imul
push
jns
imul
mov
xlat
pop
inc
ror
je
loope
test
loope
dec
dec
ja
inc
add
ins
push
lods
cld
add
sub
sub
inc
push
mov
push
rcl
mov
xor
xor
mov
pop
cmp
inc
pop
and
jns
sub
mov
ins
fadd
jg
(bad)
mov
scas
fadd
xchg
sub
imul
mov
push
pop
xor
lea
scas
pop
stos
jb
add
pop
test
xor
repnz
push
mov
ret
mov
mov
cli
mov
sbb
iret
arpl
test
fcomp
test
inc
ss
mov
(bad)
scas
in
mov
(bad)
cmp
test
add
sahf
sbb
mov
or
mov
sub
cdq
sbb
pop
mov
push
in
sub
inc
les
lock
push
(bad)
pop
sub
xor
aad
mov
cli
mov
sub
xchg
add
and
jmp
cld
lds
ds
mov
cwde
out
mov
in
in
xor
ret
adc
adc
mov
dec
lea
and
push
loopne
fild
dec
cmps
dec
jecxz
cmp
js
and
aam
mov
bswap
stc
xchg
jne
xchg
sub
call
jns
mov
xchg
popfw
and
sahf
inc
pop
retf
mov
push
inc
fnsave
out
in
and
mov
mov
push
mov
sub
push
repz
dec
cmp
inc
cmc
dec
add
sbb
ret
cmps
cmp
aam
(bad)
jge
fs
test
xchg
outs
mov
mov
div
adc
xchg
sub
dec
xchg
mov
sbb
loop
cmp
xchg
sub
mov
js
das
xlat
cmp
pop
mov
icebp
and
jmp
jg
jno
mov
fld
fs
neg
fstp
pop
aad
nop
ret
retfw
inc
arpl
xchg
push
mov
cmp
pushf
call
je
or
jge
retf
cld
mov
call
sub
add
sbb
mov
jbe
ins
push
mov
jg
inc
xchg
inc
cmc
sbb
test
mov
sub
int
jecxz
jp
sahf
jbe
and
fldcw
adc
push
aaa
dec
aam
repz
mov
xor
inc
neg
pop
cs
adc
adc
call
or
sbb
retf
dec
icebp
dec
adc
cmp
jno
cmps
cdq
in
cld
xchg
jbe
adc
xchg
(bad)
sbb
sbb
jb
in
sar
ret
jle
rcr
adc
mov
dec
xor
inc
out
pop
ret
iret
xor
mov
(bad)
push
dec
xor
jmp
jb
addr16
or
push
xor
mov
and
mov
stos
ss
jne
movs
sub
fidivr
and
sbb
loop
and
push
pop
pop
mov
push
cmp
dec
mov
fist
pusha
and
xchg
cmp
or
dec
inc
hlt
lods
jae
pop
das
ja
(bad)
(bad)
call
or
hlt
aaa
jge
dec
sbb
push
stos
adc
frstor
xchg
imul
inc
jl
jmp
jb
ins
adc
sub
dec
int3
imul
mov
das
inc
outs
push
in
(bad)
imul
cmps
test
sti
stc
add
mov
inc
mov
shl
sbb
mov
iret
pop
mov
loope
lock
lods
lock
xor
popf
inc
jp
test
xlat
xor
shl
xlat
test
cmp
addr16
adc
fimul
jmp
inc
jo
push
retf
jns
and
stc
outs
nop
mov
adc
out
fs
retf
loop
xchg
gs
adc
mov
mov
inc
cmc
lahf
inc
out
dec
scas
cmc
add
mov
ficomp
mov
scas
mov
nop
daa
rcl
out
inc
les
push
test
(bad)
mov
and
pop
iret
movs
push
jge
icebp
ret
fadd
xchg
int3
jmp
xlat
cmp
pop
or
add
mov
jno
add
pop
push
int3
mov
mov
fmul
or
add
pop
jp
sar
mov
mov
clc
or
dec
jmp
cld
pop
jmp
adc
test
inc
cmc
sar
sub
aaa
test
stc
inc
je
adc
sub
push
fs
aas
inc
and
jecxz
push
loope
movs
clc
shl
or
dec
add
test
xor
push
jg
mov
enter
pushf
push
sub
push
sbb
push
dec
lds
jmp
cmp
jb
fadd
and
push
dec
repz
neg
dec
mov
(bad)
jmp
movsx
scas
sahf
push
shl
idiv
cwde
shl
push
push
jo
js
cld
xchg
ret
jg
fcomi
mov
lahf
and
shl
xchg
call
sub
das
mov
int3
test
loop
or
and
loop
repnz
jge
(bad)
cmp
xor
dec
push
or
imul
repnz
dec
test
and
mov
mov
sub
test
xchg
jb
out
or
rep
inc
jp
push
pusha
mov
mov
cld
fist
mov
rcl
(bad)
mov
pop
jae
xor
bound
cdq
cdq
xchg
jge
pop
adc
dec
push
ja
dec
cmp
dec
push
(bad)
in
stc
mov
jmp
test
outs
cmp
mov
jge
clc
pmaxub
icebp
and
push
add
fdiv
pop
fs
or
cmp
mov
aad
retf
adc
imul
(bad)
mov
inc
mov
push
adc
adc
in
ins
test
jmp
push
mov
(bad)
jge
cmp
or
div
in
dec
add
xchg
xchg
mov
push
sbb
ss
mov
jmp
xchg
pop
fwait
mov
ds
std
jge
mov
(bad)
dec
jmp
add
xor
mov
pop
rcl
mov
mov
repz
jl
pop
std
mov
inc
mov
sub
sub
inc
mov
pop
aaa
jo
mov
add
cmp
(bad)
xor
lock
fadd
sbb
cmps
pusha
popa
dec
aas
shl
test
jae
stos
jne
dec
jo
mov
or
mov
neg
jmp
jnp
sub
jl
xchg
jae
add
pushf
inc
sbb
adc
push
sar
(bad)
(bad)
mov
push
aaa
or
nop
imul
fwait
mov
jnp
mov
jmp
push
push
or
sar
cmps
clc
sbb
popa
lds
mov
xor
popf
jae
xor
add
add
sub
in
popa
jg
jns
out
xor
push
xchg
pop
xor
(bad)
jno
aas
pusha
cdq
movs
mov
dec
int3
fwait
pop
lds
sti
add
fwait
not
and
jg
jo
xor
fistp
xchg
pop
dec
mov
xlat
jb
sahf
cmps
add
imul
add
popf
aam
(bad)
ror
or
adc
and
mov
push
cdq
mov
clc
lods
scas
sbb
les
loopne
mov
sbb
cdq
out
mov
movs
popf
jns
xor
lock
lods
icebp
jnp
sub
push
add
sub
inc
or
imul
nop
mov
xchg
cmp
xchg
outs
mov
out
sub
or
(bad)
lods
pop
or
int
dec
sub
int
jmp
sub
fisttp
xchg
and
inc
xor
int
push
push
or
xor
movs
in
mov
adc
add
xchg
xor
push
push
aad
add
jo
out
xchg
mov
daa
movs
adc
push
fcmovbe
mov
lea
push
test
adc
(bad)
(bad)
pop
out
or
add
xor
sahf
mov
and
in
out
stos
pusha
sar
adc
test
pop
dec
sbb
fdivr
inc
cmc
adc
xchg
mov
sub
sbb
cmp
ret
pop
cli
or
scas
inc
cmp
mov
jecxz
dec
cmp
adc
jmp
out
movs
mov
mov
cmps
mov
add
in
and
sbb
sub
or
sub
push
movs
jnp
in
ins
and
test
xor
sub
pop
inc
pop
(bad)
das
mov
idiv
icebp
(bad)
xor
mov
dec
mov
icebp
int
xor
add
sbb
mul
(bad)
loop
add
push
and
adc
hlt
es
mov
mov
in
or
inc
cli
xchg
mov
mov
push
pop
adc
xchg
sbb
and
mov
(bad)
fldenv
fdiv
fld
pop
push
retf
pusha
fst
fcmovnb
mov
mov
jmp
into
and
and
test
and
cpuid
loop
dec
push
dec
nop
or
xor
repz
cmp
pop
pop
adc
cmps
mov
and
icebp
lahf
inc
aas
stos
jae
cdq
adc
out
xor
outs
iret
lea
jecxz
push
in
icebp
mov
imul
xchg
(bad)
imul
sub
fldcw
push
mov
scas
sub
cld
out
jmp
push
mov
sbb
fcmovnbe
call
and
call
jp
int
and
std
and
mov
je
adc
mov
push
fisubr
pop
aam
rcl
xor
out
idiv
jmp
push
ret
sbb
xchg
jno
call
and
lock
aam
xchg
ret
push
mov
xacquire
push
lea
test
ins
sub
jns
aas
jne
jns
rol
jge
mov
cdq
dec
jbe
or
cmp
(bad)
loopne
cmp
xchg
cld
sub
clc
mov
mov
imul
pop
and
test
fmul
retf
pushf
and
mov
jcxz
iret
push
call
push
pop
add
imul
mov
mov
sub
mov
add
add
icebp
es
ds
mov
(bad)
sbb
xor
shr
pop
and
aas
jge
bound
test
dec
lods
mov
sti
test
and
(bad)
out
popf
mov
push
and
jle
xchg
xchg
and
imul
add
xor
cwde
mov
fldenv
popa
mov
stc
mov
popw
enter
fnstsw
int3
aas
xchg
sub
xchg
inc
ja
sahf
mov
sbb
je
nop
scas
pop
cmp
xor
data16
stc
pop
in
ds
jle
and
mov
jmp
inc
out
mov
and
mov
dec
dec
xchg
mov
jmp
mov
push
cmp
xor
loopne
sbb
sbb
sbb
mov
(bad)
scas
mov
mov
hlt
cmps
inc
and
adc
cmp
mov
pop
mov
jno
clc
repz
jae
jo
xchg
mov
xor
lods
mov
cmp
or
rcl
mov
jne
push
add
out
rol
sti
addr16
dec
lahf
push
push
in
cmp
or
neg
leave
mov
push
or
cmp
and
pop
bound
out
jno
sub
mov
adc
pusha
sbb
mov
mov
cmp
lds
pop
adc
xor
aam
dec
in
pop
mov
fimul
inc
test
adc
imul
sbb
js
(bad)
aam
cmp
mov
inc
sub
int
je
mov
hlt
fsubr
mov
(bad)
mov
movs
inc
mov
in
jle
cmp
adc
jp
cmp
mov
fdivr
xchg
push
push
fcom
cmp
pop
push
or
fidiv
xor
sub
xchg
pop
mov
adc
dec
clc
pop
adc
popa
mov
sub
cmp
or
mov
add
call
fmul
daa
mov
cdq
sbb
arpl
out
fimul
dec
mov
movs
push
fdivr
ds
pop
inc
in
mov
fcomp
and
outs
xchg
mov
inc
xchg
clc
and
mov
call
jp
mov
xchg
pop
je
(bad)
sti
jmp
pop
imul
std
in
cmc
imul
sbb
ret
sub
shr
push
call
cdq
cmp
xor
push
or
outs
mov
push
mov
addr16
xchg
pop
push
ja
outs
pop
stos
fisttp
aaa
xchg
jnp
into
stos
lea
loope
mov
pop
sbb
(bad)
or
jmp
mov
xor
xchg
cdq
addr16
xchg
and
les
sbb
pop
xchg
inc
inc
dec
sti
adc
add
xchg
mov
or
mov
sbb
fnstcw
std
and
dec
scas
dec
sahf
dec
into
or
mov
mov
pusha
inc
setb
push
loopne
data16
je
clc
sub
inc
jmp
cmps
fisttp
add
mov
and
daa
not
xor
pop
mov
cld
stos
cmp
push
test
mov
rcr
mov
pop
or
mov
cwde
js
adc
out
mov
in
jo
push
sbb
jl
test
(bad)
sbb
fisubr
rcr
add
cmp
add
mov
inc
aaa
xor
nop
push
xor
jge
scas
mov
jns
pop
ins
clc
sub
jo
xchg
pop
lds
adc
cmp
xor
mov
stos
lods
xchg
or
push
test
dec
out
sahf
mov
or
jle
cmp
arpl
out
pop
call
movs
pop
ss
xchg
or
mov
xchg
cld
int
es
shr
cmp
test
jb
jno
jb
dec
sub
retf
daa
outs
xor
push
sub
lods
sar
inc
out
or
jp
mov
cmc
mov
jecxz
in
rol
(bad)
rcl
in
daa
sub
and
push
int3
sbb
bound
int3
jg
xlat
addr16
push
sbb
mov
int3
fld
imul
cmps
inc
add
aad
in
push
sti
sub
and
fs
(bad)
cmps
or
popf
das
fadd
(bad)
out
sysexit
pop
jno
mov
xor
mov
push
lea
retf
mov
jmp
mov
scas
mov
pop
into
aaa
add
pushf
or
xchg
sar
push
xor
sub
popf
popa
mov
dec
sysret
xor
fiadd
mov
and
pushf
test
jge
push
int
fadd
sub
outs
push
jl
cmp
inc
clc
fisubr
xor
mov
lods
and
sub
mov
mov
xor
stos
dec
jne
das
mov
sbb
mov
inc
pushf
cwde
add
sti
pop
sub
fisttp
mov
jo
imul
shl
out
out
rcr
out
into
pop
push
or
inc
iret
mov
sub
mov
xchg
add
lock
mov
adc
jb
loope
addr16
outs
dec
std
std
stos
mov
rcr
or
sbb
xchg
fisub
lock
sub
outs
mov
jecxz
arpl
rcl
mov
cld
and
loopne
(bad)
gs
cld
popf
and
aad
push
retf
sbb
xchg
dec
shl
mov
jnp
mov
inc
and
movs
nop
sub
movs
je
and
mov
mov
loope
add
push
sahf
popf
push
jecxz
ret
dec
dec
aaa
pslld
repz
loopne
mov
fst
jbe
nop
pop
cmp
in
jl
mov
push
push
xchg
mov
xchg
hlt
sub
cmp
and
dec
jnp
sbb
pop
aad
xlat
xor
shl
jp
cmps
dec
dec
fidiv
push
test
sub
mov
dec
nop
fld
stc
push
bnd
pop
sbb
and
sbb
outs
mov
push
pop
hlt
mov
into
mov
add
sbb
movs
sub
push
call
adc
jp
mov
data16
(bad)
mov
out
adc
call
jmp
jg
and
jl
xlat
int3
or
add
adc
loopne
mov
stos
mov
cmp
stc
push
inc
cmp
jmp
cmp
push
xor
loop
push
mov
jle
in
mov
fld
out
jmp
dec
ins
add
enter
das
sahf
xchg
jge
pop
xor
std
mov
aam
xor
add
(bad)
mov
jmp
or
push
mov
cmp
jbe
dec
mov
sub
out
test
add
push
push
fidivr
inc
inc
inc
movs
and
aas
sbb
test
dec
mov
and
dec
movs
scas
bound
push
add
jne
test
adc
xlat
jp
inc
int3
popa
inc
mov
add
or
jbe
leave
call
cs
leave
pop
mov
sbb
adc
pop
add
push
call
sub
repnz
jl
std
mov
cwde
ret
jnp
adc
fsub
iret
xor
lods
adc
rcr
dec
jl
test
add
stc
gs
vfrczss
jne
repz
sbb
add
sub
imul
mov
outs
adc
xlat
xchg
cmps
sbb
js
push
mov
cdq
lods
cwde
inc
ret
out
push
cmps
and
aas
jg
lock
test
cmp
in
les
mov
mov
pop
scas
adc
jb
scas
pop
fimul
cmp
adc
inc
sub
(bad)
pop
adc
mov
fidivr
mov
mov
mov
test
sub
jo
mov
push
stos
loopne
push
rol
jb
sub
xor
fist
fwait
add
aam
adc
test
imul
jbe
inc
lods
pushf
ret
mov
stos
sub
icebp
dec
cmps
sti
add
dec
jb
sbb
int3
inc
retf
sub
ins
cmp
push
sbb
push
addr16
sbb
enter
into
outs
inc
mov
(bad)
shl
lock
(bad)
mov
mov
mov
in
test
mov
repz
pop
and
dec
mov
repz
hlt
inc
xchg
cmp
jb
movs
cs
scas
std
mov
stos
ss
(bad)
ficom
pop
popa
mov
rcl
sbb
xchg
jnp
or
push
pop
dec
push
(bad)
out
imul
neg
push
test
int3
pop
add
mov
ret
sub
js
data16
shl
gs
cmp
mov
or
imul
adc
into
inc
loopne
jae
(bad)
(bad)
jb
jg
aad
in
pop
add
hlt
(bad)
gs
and
mov
push
cmp
mov
retf
pop
xor
call
lock
pop
sub
out
sahf
mov
add
xchg
sub
aam
aam
xchg
xor
adc
xor
mov
in
push
stos
cdq
test
ror
pop
outs
pop
xchg
push
rcl
fs
cdq
sbb
push
push
fisttp
add
shl
dec
arpl
aas
(bad)
(bad)
xchg
(bad)
out
or
cmp
push
out
mov
adc
sbb
add
inc
mov
dec
(bad)
adc
das
adc
mov
aaa
data16
test
ret
jg
nop
xchg
scas
and
xor
outs
xchg
inc
stos
into
xchg
ss
mov
and
sar
dec
icebp
push
shl
sbb
mov
push
dec
mov
mov
mov
fild
or
mov
push
jmp
jle
popf
sub
popf
jp
shl
xor
adc
push
jecxz
fnstcw
(bad)
jmp
and
popa
dec
cmc
mov
or
iret
les
cmc
call
push
pop
mov
lods
adc
cmp
add
mov
xchg
pop
push
mov
push
in
enter
jo
jb
dec
mov
cmp
das
outs
je
mov
out
inc
xor
cld
fwait
sbb
cmp
repnz
mov
sub
push
cmp
xchg
aam
imul
or
hlt
jg
push
popa
out
nop
fs
xor
push
not
push
mov
xchg
rol
ds
jmp
lods
pop
cmp
and
push
xor
ds
fwait
mov
pop
xor
adc
shl
ins
ret
fdivr
bswap
dec
dec
or
psubusw
pop
mov
shl
adc
push
mov
xor
test
aas
sbb
ds
jb
retf
daa
out
out
and
(bad)
sub
outs
push
jae
cwde
push
jnp
xchg
xor
inc
xlat
or
ss
cdq
ret
cwde
mov
imul
push
pop
adc
lds
dec
dec
xchg
call
(bad)
std
stc
inc
sahf
(bad)
call
int3
repz
mov
cmc
rcl
in
ins
adc
(bad)
(bad)
jge
pop
jl
sbb
xchg
add
call
ds
dec
push
scas
stc
shr
test
or
fwait
sahf
pop
sbb
test
test
mov
test
push
pop
push
pop
sbb
adc
push
cwde
and
mov
and
sub
pop
test
mov
repnz
lahf
ins
adc
or
pop
mov
cwde
stc
jb
xor
std
cdq
lock
push
out
imul
sub
add
aam
std
dec
shl
jp
dec
mov
adc
dec
push
push
stc
adc
dec
xor
fbstp
aaa
imul
clc
mov
movs
jbe
xchg
sbb
xor
aaa
call
pop
ins
xor
mov
sar
xor
je
cmp
push
and
cmps
adc
aas
pusha
push
push
addr16
les
jp
ins
ins
pop
xor
adc
cmp
and
int
inc
lahf
pop
shl
adc
push
loopne
mov
ins
js
frstor
push
xchg
mov
les
add
push
dec
mov
and
cmp
cmps
call
idiv
(bad)
pop
sbb
xchg
in
dec
jnp
fst
lea
sbb
fcomp
dec
aaa
aam
sub
jb
push
sub
jno
add
aaa
jo
adc
or
xor
push
imul
push
xor
add
dec
jae
test
and
xor
inc
adc
mul
les
mov
inc
cwde
lods
mov
xchg
lods
shl
stc
out
icebp
mov
xlat
(bad)
ds
lods
sub
xchg
push
jmp
mov
push
nop
in
xlat
out
mov
rol
push
outs
push
sub
dec
out
inc
sbb
sbb
into
loopne
in
in
mov
adc
push
cs
jb
inc
repz
stos
test
push
ja
xchg
popa
fxch
cmps
or
xor
add
and
jmp
jae
(bad)
in
push
ins
stc
mov
les
xchg
adc
retf
jp
aas
mov
pop
jp
cld
pop
mov
pop
bound
dec
xchg
fldcw
jl
imul
cmps
les
in
out
je
stos
leave
jae
push
retf
jecxz
cmps
pop
and
sbb
mov
ins
inc
push
mov
push
retf
xchg
(bad)
stc
ja
js
lds
jbe
sbb
push
jae
fstp
bound
dec
pusha
jmp
(bad)
sub
lods
or
dec
out
jl
dec
je
aad
jnp
mov
push
nop
clc
xor
retf
pop
outs
cwde
cdq
mov
shl
or
test
jo
cmp
jae
das
repz
or
fidiv
jo
dec
mov
pop
jb
int
jl
pop
mov
push
daa
inc
sbb
je
pop
inc
inc
fucomip
fidiv
push
add
cmps
jnp
ins
jmp
loop
fcomp
fisttp
or
mov
jae
mov
xchg
pop
movs
daa
es
cmps
sahf
cmp
jecxz
ss
fstp
sbb
jmp
xchg
adc
(bad)
call
mov
add
retf
cmp
push
push
movs
pushf
and
adc
shl
sub
or
push
pop
mul
out
pusha
loope
jnp
ret
mov
les
movs
dec
nop
repnz
xchg
inc
xor
js
sbb
or
hlt
add
or
enter
in
neg
xchg
int
int
push
xchg
ss
test
sub
clc
les
or
imul
mov
test
bound
stc
sbb
inc
or
pop
add
add
dec
fisub
ret
xchg
enter
hlt
cmp
mov
adc
push
sbb
aas
pop
sbb
arpl
aaa
cmc
ins
jmp
mov
jg
jnp
jmp
daa
push
xchg
int
push
es
jle
jge
xchg
mov
aam
test
xor
push
loop
pop
sti
mov
das
mov
arpl
or
mov
adc
dec
daa
mov
jns
xchg
cli
rcr
out
add
(bad)
xor
sub
mov
call
and
sbb
sbb
movs
adc
cwde
or
mov
popf
dec
popa
inc
test
iret
sbb
fdivrp
sahf
test
inc
adc
jnp
outs
mov
mov
out
xchg
push
dec
data16
inc
jle
sbb
or
sub
push
ret
enter
xchg
shl
test
daa
cmp
xor
jmp
or
jne
int
pop
sub
jp
mov
pop
inc
fild
lea
add
outs
(bad)
rcr
sub
test
inc
cld
mov
mov
inc
and
stos
sub
and
gs
nop
jns
and
popf
cli
mov
mov
adc
(bad)
loop
cmp
sub
and
js
aad
xchg
(bad)
aad
lods
aam
popa
jecxz
cli
fidivr
jp
and
(bad)
leave
jmp
fisub
pop
stos
daa
aad
and
sub
movs
fs
fidivr
shr
jp
leave
bnd
jp
icebp
out
xchg
aad
outs
mov
outs
stos
or
cmp
mov
arpl
and
fld
(bad)
jmp
ins
in
cmp
dec
ins
dec
xchg
in
nop
ret
pop
inc
or
hlt
dec
ins
bound
arpl
jne
stos
ins
sub
cmp
xchg
xchg
repnz
and
add
cli
fsubr
rcl
int3
in
ins
pop
test
std
enter
cmp
inc
xor
ret
adc
je
jno
xchg
imul
xchg
pop
mov
jecxz
pop
and
push
add
xchg
(bad)
das
mov
rcl
pop
aas
stos
out
fidiv
pop
inc
les
out
xchg
loopne
dec
xor
lods
mov
inc
and
stos
call
dec
cwde
fdiv
out
cdq
jle
add
rcl
sub
jecxz
dec
jmp
call
jl
ficomp
mov
out
sub
call
pop
jae
and
inc
retf
push
repz
fwait
sbb
jbe
jno
and
std
rol
aaa
sti
add
push
xchg
popf
jo
inc
cmp
jne
je
test
cmp
cmovo
mov
scas
inc
push
repnz
xchg
rol
not
dec
neg
cmp
cmp
xor
pop
pop
xchg
jns
xchg
push
sar
lea
aaa
pop
cdq
sbb
mov
loop
das
pop
mov
add
xchg
jae
mov
mov
fild
and
cmps
rcr
jne
test
lods
lock
cdq
adc
repnz
imul
jae
sbb
sbb
rcr
aaa
aas
js
out
call
xor
ja
add
test
sar
imul
popf
jle
popf
(bad)
mov
fisubr
cmc
mov
jbe
iret
mov
xor
cwde
fidivr
in
add
clc
jmp
lods
mov
retf
not
dec
jmp
adc
inc
mov
mov
mov
imul
or
jge
pop
push
dec
jp
push
cmp
mov
popa
adc
dec
in
dec
popa
sbb
push
push
rcl
lea
mov
movs
(bad)
repnz
scas
sahf
imul
lahf
call
xchg
div
dec
xchg
test
mov
(bad)
sub
rcl
push
aad
jle
repnz
out
xchg
movs
shl
xor
jl
into
xchg
sub
fimul
fmul
sbb
dec
mov
mov
cmp
push
push
mov
out
dec
mov
(bad)
ds
push
retf
dec
or
call
pop
(bad)
dec
imul
daa
jae
adc
cld
sbb
xor
jmp
mov
ins
xor
cli
cmp
loope
cwde
fldl2e
mov
mov
pop
or
mov
cmp
push
jge
clc
xor
jg
sbb
aaa
sub
lods
fnstenv
jmp
jl
out
test
push
shl
and
inc
enter
ss
je
shl
mov
lods
jle
scas
popf
cdq
or
sbb
pop
push
adc
xor
push
call
xor
dec
sar
pushf
sbb
mov
outs
xor
shl
jp
add
pop
and
stos
movs
sub
imul
inc
jbe
push
pop
adc
add
ins
mov
fidiv
mov
mov
xor
(bad)
pushf
dec
xor
cmp
cmps
push
enter
in
xchg
shl
inc
or
push
inc
pushf
adc
lods
aad
aam
push
fisubr
push
cmp
push
jp
mov
dec
or
dec
push
inc
mov
xchg
mov
outs
(bad)
fadd
push
sbb
mov
sub
push
mov
sub
jg
cmps
fucom
mov
ss
dec
jbe
push
mov
prefetch
or
add
mov
loope
xchg
dec
xchg
std
mov
dec
fist
sbb
mov
dec
mov
out
pop
dec
inc
inc
ds
(bad)
and
cmp
add
imul
imul
rol
sbb
mov
sahf
js
stos
mov
or
rcr
inc
stos
(bad)
fs
repnz
outs
scas
jmp
mov
dec
mov
outs
fcomi
fbld
or
mov
pop
dec
dec
lds
xchg
sahf
pop
mov
loop
pusha
cdq
nop
fsub
push
hlt
es
sahf
sub
rcl
fcomip
add
dec
mov
xchg
mov
fsin
or
fld
test
int
cli
add
pop
jle
in
popf
aaa
pop
daa
add
movs
and
sub
(bad)
xchg
xor
adc
pop
cld
int3
pop
inc
lods
(bad)
and
pop
ins
cs
xchg
iret
out
push
mov
pop
lods
das
pop
int3
fwait
fwait
pop
int3
adc
mov
inc
jg
out
mov
lods
fcomip
xor
dec
xchg
aaa
mov
lods
ins
xlat
les
mov
pop
and
aam
sub
or
pop
jmp
fimul
cwde
imul
ror
int
sub
test
xchg
aas
(bad)
hlt
lea
(bad)
push
push
repnz
mov
push
in
or
sbb
push
cs
xchg
sbb
adc
dec
inc
stc
icebp
mov
test
ret
pop
rcr
mov
out
arpl
retf
loope
ror
sbb
rol
leave
add
stos
ja
cmp
sbb
hlt
imul
pop
jg
add
xchg
in
cli
sahf
adc
add
xor
rcl
dec
sbb
pop
ror
call
mov
fadd
mov
inc
repz
imul
pop
xchg
push
xor
cwde
inc
inc
and
sub
jle
mov
inc
dec
sbb
cmc
inc
mov
cs
outs
push
pushf
movs
std
mov
sti
mov
mov
or
mov
mov
mov
pop
sbb
idiv
jecxz
and
inc
outs
add
mov
mov
mov
iret
mov
cmp
pop
into
mov
jnp
gs
pop
or
mov
out
jo
push
mov
add
cmp
imul
es
shl
xchg
sbb
push
loop
popf
mov
dec
add
je
aam
push
jmp
mov
jge
xchg
test
(bad)
cld
adc
stc
imul
call
sub
add
out
inc
mov
push
and
mov
sub
mov
lea
test
sbb
xchg
in
sti
test
retf
mov
pop
pop
adc
adc
pop
std
push
call
xchg
push
mov
and
ins
pop
or
nop
inc
loopne
out
lahf
stos
stos
lahf
push
mov
aaa
clc
cmps
sbb
inc
mov
out
cwde
out
lsl
lock
adc
mov
pop
jge
jmp
inc
call
std
jae
xchg
and
pop
sar
pop
sahf
sbb
add
pop
lods
pop
dec
popf
popa
pushf
fcomp
push
add
fs
or
out
movs
stc
xchg
jae
jno
pushf
jmp
jmp
pop
add
mov
shl
iret
cmp
fadd
xor
push
jno
in
mov
sub
or
in
in
pop
in
cmp
push
dec
xchg
or
xor
xor
xor
adc
sub
lods
repz
mov
sbb
(bad)
push
and
add
xor
xlat
lea
test
add
and
or
aaa
dec
or
jae
test
mov
adc
pop
test
jne
dec
gs
dec
(bad)
mov
pop
inc
rcr
xor
je
and
pop
pop
mov
and
in
mov
jae
aam
pop
stos
push
adc
mov
(bad)
retf
add
fwait
test
lods
lods
loop
fimul
cld
gs
or
jnp
jmp
and
loop
inc
sub
sti
jecxz
jle
fcom
push
daa
inc
fimul
inc
test
icebp
adc
ja
or
das
mov
sar
xchg
loopne
mov
mov
sbb
dec
cmp
mov
lds
pusha
mov
push
push
pop
imul
jno
movs
push
push
cmc
sbb
fmul
cmps
cld
mov
xchg
enter
jnp
in
ror
rol
jmp
mov
inc
pop
cmc
ret
repnz
add
push
leave
pusha
pop
sub
xor
cld
leave
sbb
pop
sahf
sub
popf
dec
pop
cmp
dec
outs
or
adc
int
or
lds
cmp
pop
push
push
icebp
mov
sbb
mov
adc
stc
sub
mov
mov
pushf
into
inc
(bad)
jmp
pop
xchg
js
icebp
imul
call
or
cwde
pop
dec
xor
aaa
mov
push
aaa
imul
retf
lock
xor
jmp
push
hlt
enter
repz
cmp
popa
in
popf
retf
cmp
mov
or
mov
in
pop
xor
cmp
xor
or
pop
dec
or
call
push
mov
outs
jae
or
add
sbb
int
(bad)
out
mov
xor
in
int3
ins
dec
adc
add
jo
sub
mov
int
test
out
push
or
add
loope
sbb
dec
arpl
jl
mov
out
out
xchg
inc
mov
mov
pop
cmp
push
add
cmp
pop
mov
xchg
data16
outs
imul
and
pop
cld
xchg
xor
lahf
mov
and
mov
push
in
inc
call
push
adc
and
dec
ins
dec
or
pusha
lods
mov
cs
sbb
shl
pop
sub
xor
addr16
in
adc
xor
outs
retf
dec
pusha
test
mov
push
xor
cmp
cmp
sbb
jp
ins
add
pusha
mov
dec
push
xlat
stos
movs
rcl
mov
add
data16
dec
sbb
mov
mov
shr
je
xor
loop
jmp
cmp
iret
je
dec
mov
push
jmp
daa
mov
mov
(bad)
std
imul
call
mov
lods
sub
inc
jge
pop
push
pop
(bad)
movs
adc
push
jecxz
lods
dec
retf
push
hlt
jecxz
outs
cmp
push
ds
cld
pusha
and
push
lods
out
jge
in
pop
mov
mov
push
xor
inc
mov
mov
mov
sub
mov
jo
lds
sub
adc
or
mov
ss
fidivr
clc
fst
jno
mov
test
cmp
adc
mov
xor
push
out
into
and
enter
(bad)
mov
mov
and
dec
lahf
inc
enter
dec
pop
into
jne
jo
or
loop
bound
push
les
push
push
xchg
ds
mov
and
sti
ins
or
pop
jns
repnz
dec
fnstenv
cmp
inc
out
lahf
ins
inc
scas
ins
or
sub
cmp
test
xor
rol
sub
sar
inc
xor
(bad)
fiadd
inc
test
mov
test
rcr
sub
fs
cmps
xchg
and
cmp
dec
(bad)
fild
(bad)
clc
pop
jge
pop
in
push
jmp
fidiv
mov
test
sub
cmp
adc
xchg
lahf
jnp
stc
pop
sbb
dec
mov
mov
dec
xchg
jecxz
mov
jno
std
pop
dec
in
movs
push
sbb
mov
outs
dec
adc
mov
stos
ret
cmp
and
or
sbb
(bad)
ret
mov
std
push
fwait
or
sar
(bad)
xor
test
mov
push
int
add
pop
xor
ror
xchg
mov
push
pop
cmp
cmp
cmp
dec
jae
fcomp
aam
sti
mov
fnstsw
inc
adc
js
or
inc
jmp
ja
push
dec
sar
xchg
mov
or
dec
mov
loopne
mov
pop
adc
push
pop
lods
js
and
xchg
sbb
jae
or
push
xchg
(bad)
fstp
pop
push
or
out
push
ins
pop
popa
ds
jnp
aaa
sbb
leave
adc
jge
fild
inc
or
retf
test
mov
fmulp
les
sar
aam
mov
pop
cmp
inc
pop
repnz
pop
cmp
adc
and
dec
daa
sub
mov
cmps
dec
jo
test
scas
mov
mov
xor
jecxz
jne
imul
(bad)
pop
cdq
mov
in
icebp
adc
adc
dec
pusha
(bad)
dec
and
sub
or
shl
push
mov
xchg
add
sbb
lds
fisub
push
sub
mov
add
rcl
retf
test
push
ja
scas
cli
lds
shr
imul
sub
push
stc
int
sbb
out
iret
into
and
pop
xchg
mov
dec
sbb
cdq
pop
or
ins
es
mov
or
mov
dec
jg
jp
fmul
cmps
repz
or
sub
in
mov
fistp
xchg
idiv
push
jbe
out
xor
ins
mov
ss
fisttp
mov
out
or
stos
pop
test
jae
test
cmp
jmp
cs
sbb
ror
xor
sbb
not
mov
inc
iret
sbb
in
mov
xchg
fwait
xchg
jns
mov
mov
mov
in
mov
dec
jns
mov
gs
jo
gs
xchg
jl
jmp
xchg
pop
dec
data16
cwde
xchg
lds
stos
(bad)
cmp
mov
loope
pop
mov
push
dec
jle
push
out
aaa
jo
xchg
lock
cmp
enter
inc
in
repz
mov
pop
dec
add
xchg
jge
loopne
add
cli
cmp
inc
nop
shl
mov
rcl
in
sub
jbe
imul
push
ror
jmp
mov
repz
fidivr
sbb
sbb
in
adc
xchg
and
loop
fs
sub
jg
in
dec
clc
jns
inc
jb
cld
push
rol
fiadd
push
aam
mov
sub
push
daa
xchg
shl
mov
pop
gs
les
sbb
test
xor
jae
retf
int
push
sub
inc
addr16
lock
(bad)
cmp
add
int
and
nop
iret
std
mov
shr
repnz
fidiv
sbb
cmp
jge
sbb
lahf
retf
ins
dec
jl
movs
xor
test
lahf
in
push
popf
stos
mov
jno
or
stos
adc
dec
cdq
nop
mov
(bad)
cmp
cmp
xchg
pop
xor
shl
(bad)
push
xchg
jnp
sbb
lea
and
pop
xchg
jecxz
nop
shl
loope
push
(bad)
sti
mov
pop
push
cmp
ds
sub
mov
jp
jo
jns
dec
cmps
mov
in
pop
(bad)
push
ja
mov
rcl
or
xor
mov
or
lea
cmp
ja
aam
inc
push
mov
mov
xchg
or
sub
inc
fwait
aad
add
mov
dec
mov
jg
mov
fwait
scas
adc
(bad)
sahf
ret
pushf
cli
pop
mov
test
push
and
mov
pop
and
adc
jecxz
sbb
fcom
and
inc
xlat
setge
or
fcomp
jbe
js
pop
sbb
ss
nop
aas
jb
mov
mov
ss
xchg
sub
(bad)
jl
out
inc
ror
test
dec
xchg
lea
jmp
mov
imul
xchg
neg
movs
cmps
mov
sbb
jno
xor
imul
pop
in
mul
and
in
xchg
jle
(bad)
out
loopne
fld
cmp
mov
xor
sbb
add
jbe
jecxz
mov
lds
lds
dec
lahf
dec
fimul
mov
stos
mov
mov
pop
outs
xchg
and
jg
adc
ret
jno
xor
ss
mov
mov
add
mov
ret
adc
fisttp
aaa
push
dec
or
jmp
cmc
push
dec
std
sbb
mov
mov
add
inc
fisub
cli
(bad)
pusha
retf
jp
jge
dec
mov
pusha
sub
sbb
int3
xchg
in
retf
mov
mov
loopne
aas
xor
test
cmp
xchg
jmp
mov
inc
in
xchg
mov
test
mov
aas
jmp
mov
inc
fist
stc
inc
mov
inc
clc
aas
xchg
inc
push
out
push
shl
xchg
je
push
push
mov
in
or
stos
mov
and
sub
loop
mov
or
push
mov
clc
xchg
xor
(bad)
int
ja
scas
cli
test
jnp
mov
aad
loope
mov
lds
xchg
adc
retf
jp
mov
jo
cmp
ror
jns
ins
cmps
cmp
(bad)
pop
jnp
test
push
aad
jmp
cmc
cmps
ins
std
sub
xor
pop
push
add
and
cmp
pop
adc
shl
mov
jo
stos
popf
ret
pushf
jne
jns
ror
das
enter
or
add
mov
pop
lods
ins
pop
lock
push
mov
cmp
jmp
mov
icebp
mov
jge
and
inc
sub
pop
bound
mov
lods
inc
xchg
sub
movs
mov
lods
icebp
and
mov
xchg
jge
jecxz
xor
or
dec
jbe
add
scas
and
ss
and
loop
push
adc
int
xor
scas
fst
xor
xor
sub
inc
das
out
and
loope
add
jmp
jge
mov
imul
pop
pop
xchg
xchg
jne
xlat
push
pop
pushf
inc
loop
mov
and
popf
pop
mov
inc
cmps
ror
mov
scas
cmp
dec
sub
call
xor
loop
xor
inc
add
xor
adc
test
cmps
add
fdiv
dec
pop
cmp
or
mov
ins
fdivr
sub
jne
mov
jae
inc
xchg
dec
jo
leave
mov
dec
sub
dec
ins
icebp
cmp
cmc
movs
dec
adc
test
or
imul
jne
aaa
add
inc
in
mov
push
cmps
ja
xchg
popa
sub
in
dec
jmp
pop
mov
cmps
pop
mov
aas
jp
cmp
xchg
jae
mov
sub
aam
test
dec
ins
push
mov
stos
nop
outs
icebp
lods
je
outs
pop
adc
cmp
jnp
jns
mov
mov
in
mov
fst
popf
ss
rol
mov
push
jecxz
or
cmps
sbb
lock
mov
push
pop
retf
sub
push
outs
mov
sub
jb
ja
call
pop
aaa
jge
in
or
fnsave
(bad)
lock
pop
mov
fmul
test
cmps
fadd
jg
cmp
adc
ret
out
xchg
rcr
push
ins
sbb
xor
push
ins
xchg
ffreep
outs
into
or
stos
cmp
mov
call
pushw
aaa
mov
push
(bad)
out
mov
ret
aam
mov
or
mov
ds
pop
or
push
lods
gs
js
(bad)
xlat
jmp
in
sbb
in
ret
add
mov
mov
pop
or
mov
xchg
pop
popf
mov
arpl
jb
mov
and
and
outs
es
dec
(bad)
call
push
pop
jbe
cmps
pop
jl
cmps
mov
and
jnp
xchg
adc
dec
mov
inc
add
sbb
ret
scas
int
mov
add
clc
lods
xchg
fcomip
add
int
mov
stos
jg
dec
imul
iret
xor
sbb
add
xlat
pop
mov
cld
inc
xchg
and
sub
pop
es
rcr
mov
xchg
stc
push
outs
pop
popf
clc
sti
push
dec
jne
pop
xor
and
jmp
dec
sbb
pop
mov
jbe
or
sbb
cli
test
jp
icebp
push
in
cmp
sbb
cmp
aad
pushf
mov
xchg
not
cmc
push
jmp
xchg
int
pop
retf
bound
mov
mov
pop
and
sbb
into
xchg
jns
outs
dec
xlat
jns
pop
fild
mov
sub
add
adc
shl
mov
loop
adc
pop
aad
jg
fisubr
jae
fstp
or
out
mov
and
jmp
fisubr
repnz
mov
retf
std
jecxz
in
and
dec
outs
cmp
ja
or
xchg
ss
ins
dec
fdivrp
imul
pop
cmp
je
add
loope
xchg
dec
adc
and
inc
nop
lock
nop
test
retf
push
inc
fs
pop
outs
xchg
xchg
mov
stos
or
dec
xlat
pop
sbb
loope
dec
pusha
push
and
push
ret
inc
aad
fild
das
cdq
loope
retf
xchg
adc
xchg
ds
dec
rol
int
mov
mov
out
in
mov
or
xor
leave
dec
les
aam
push
shr
xor
sbb
scas
std
mov
dec
cld
mov
fcmovnu
adc
out
cmp
jb
popf
int3
stos
xchg
jae
mov
ds
push
js
xlat
inc
sub
or
xor
dec
fmul
pop
cli
jmp
adc
(bad)
in
jle
mov
sbb
xor
jo
lock
pop
cmp
leave
fmul
mov
fsubr
jl
lahf
xchg
and
jnp
mov
test
icebp
aad
cmp
inc
je
mov
jp
hlt
xor
adc
lea
mov
or
test
and
js
sbb
mov
mov
sub
out
xchg
sbb
neg
lods
popa
or
pop
mov
(bad)
stc
jmp
enter
mov
je
xchg
hlt
cmp
inc
cmps
fisttp
pop
je
xchg
pop
pop
retf
iret
or
gs
push
es
ds
fucomp
mov
int3
jnp
enter
iret
adc
pusha
in
mov
mov
loopne
scas
ds
mov
mov
sub
pop
mov
push
loopne
lods
mov
adc
sbb
fwait
xchg
ficom
xor
mov
shl
dec
push
inc
inc
add
ja
mov
std
sub
push
ret
jmp
iret
pop
push
icebp
movs
cmps
mov
std
dec
or
test
jne
mov
mov
inc
cdq
jle
xchg
pop
pop
adc
arpl
std
or
into
sbb
lods
ins
mov
xchg
mov
inc
xchg
or
lds
movs
cdq
inc
test
mov
fs
adc
sahf
(bad)
popa
pop
mov
dec
pop
sub
imul
arpl
in
jl
push
jne
add
mov
ror
stos
inc
and
imul
dec
cmp
pop
xchg
inc
pop
jae
pop
mov
bound
or
call
pushf
int3
pop
cmc
inc
cmps
je
mov
mov
dec
(bad)
cwde
jge
aam
popa
fnsave
adc
cmp
ds
inc
dec
pop
ins
mov
shl
sub
mov
scas
dec
shl
push
adc
jnp
lods
jbe
and
nop
inc
jbe
cmp
dec
pop
fmul
or
mov
jo
pop
sbb
sbb
into
dec
dec
ret
frstor
loop
jo
dec
mov
mov
sbb
popf
xchg
mov
jl
mov
cs
and
jnp
xchg
jmp
sbb
cs
push
cmc
cmp
mov
adc
cs
sbb
dec
add
les
lea
stos
dec
imul
adc
or
or
push
pop
xchg
aam
nop
or
test
inc
fsubr
aas
retf
cmps
adc
xchg
add
dec
mov
daa
scas
push
xchg
add
adc
pop
mov
pushf
and
ds
imul
inc
or
sub
sub
or
and
jb
push
sub
xchg
fild
cmps
sar
dec
push
sbb
dec
loop
jno
out
pop
xor
fs
out
sbb
ins
mov
int
jo
mov
jmp
inc
pop
pop
out
in
data16
sar
push
aam
das
xor
mov
add
pop
fild
jg
in
sub
es
scas
dec
mov
es
(bad)
mov
jge
and
cmp
loop
or
cmp
int3
lods
hlt
aaa
arpl
pop
not
xor
sbb
mov
sar
pop
repnz
adc
add
fidiv
mov
pop
aad
inc
(bad)
inc
enter
jnp
sti
pop
lock
data16
sbb
add
(bad)
fild
jo
scas
fist
cdq
push
sbb
mov
pop
(bad)
shl
push
mov
enter
xchg
pop
(bad)
xchg
adc
mov
add
ins
sub
pop
push
mov
jecxz
mov
inc
add
pop
repz
and
mov
jmp
(bad)
jo
fist
popa
sahf
hlt
cmps
movs
nop
jbe
aaa
sub
mov
mov
sub
ficomp
pop
fcom
xor
repz
mov
xchg
cwde
cmp
in
mov
jge
mov
push
ret
lea
jb
sti
shl
(bad)
jnp
pop
test
iret
fst
add
sub
push
sbb
sbb
push
out
cmp
mov
push
mov
movs
pop
daa
ficomp
push
or
xchg
call
aam
fadd
cmp
shr
or
in
push
adc
push
ja
jecxz
or
(bad)
(bad)
fisubr
je
repz
lea
jge
mov
mov
push
cmps
in
lahf
sbb
and
sahf
push
aaa
cmp
repnz
into
fneni(8087
fld
push
mov
je
out
sub
pop
sub
test
add
cmp
jmp
or
(bad)
add
mov
sbb
adc
popa
in
dec
mov
add
out
push
jl
(bad)
cld
dec
mov
lock
movs
xchg
sbb
sub
push
lods
lock
mov
jle
shl
enter
xor
in
out
xor
inc
pop
jbe
mov
shl
jl
jmp
mov
fucom
lock
rcl
and
mov
stos
ins
push
pop
xchg
pushf
add
and
retf
mov
sbb
std
lock
dec
ss
or
xor
cmp
add
jge
sub
cdq
test
push
lahf
pop
rol
mov
inc
es
mov
(bad)
xchg
rcl
inc
jns
inc
nop
loop
mov
(bad)
aad
popa
iret
imul
(bad)
std
mov
adc
xor
iret
push
dec
dec
sbb
cmc
xchg
sbb
xchg
sub
ret
xchg
sub
or
mov
out
adc
or
aaa
pop
ss
(bad)
leave
or
mov
xlat
iret
mov
rcl
sbb
mov
jbe
add
xor
push
xor
shl
dec
out
ret
xor
ficom
pop
popf
push
or
rol
pusha
sahf
int
rol
call
imul
push
xor
mov
push
test
cmps
iret
xor
mov
daa
jo
and
sub
ds
ins
adc
pop
ins
mov
std
mov
ins
xchg
pop
pop
and
add
outs
jmp
scas
scas
ins
and
sti
push
in
(bad)
into
cdq
(bad)
repz
cli
mov
dec
jb
ret
(bad)
hlt
and
into
icebp
pop
js
(bad)
je
int3
das
vmovaps
mov
dec
shl
mov
mov
or
sbb
sbb
inc
in
and
jmp
xchg
xchg
pop
out
es
(bad)
adc
cmp
cmc
mov
sub
lds
mov
sub
fmul
pop
mov
jnp
xor
add
push
out
jbe
pusha
dec
out
pop
(bad)
jge
in
pop
stos
pop
rcr
into
xchg
bound
xor
into
pop
popa
repnz
sbb
out
jecxz
mov
xor
lods
jge
inc
cwde
prefetchw
sub
call
sbb
hlt
push
cs
mov
sbb
in
leave
inc
(bad)
fwait
mov
bound
rol
das
fild
clc
scas
retf
cli
xchg
pop
lahf
push
sub
push
mov
sub
jns
repnz
daa
das
scas
ja
outs
es
or
call
out
das
fimul
pusha
repnz
cmc
out
jge
mov
fidivr
xor
out
(bad)
out
fsubr
pusha
retf
jo
xchg
pop
dec
in
fucomp
inc
js
dec
mov
push
inc
scas
mov
xchg
cmps
dec
fwait
inc
lahf
gs
cmp
inc
sahf
pusha
sub
push
stos
adc
sub
idiv
sbb
je
aas
movs
sbb
sub
gs
push
or
jne
xor
jno
aaa
cmp
sub
cld
jp
pusha
int3
repnz
inc
loop
fst
inc
cli
nop
popf
pop
icebp
pop
add
dec
sti
and
jbe
daa
jmp
test
jno
sbb
cmp
jmp
inc
ret
in
rol
cmp
inc
jecxz
push
retf
xchg
jp
jp
icebp
loop
mov
pop
push
lds
(bad)
pop
in
inc
xor
test
inc
loopne
in
pop
cld
sahf
adc
mov
je
mov
add
clc
das
loopne
out
cmp
add
mov
iret
loopne
xchg
push
mov
xor
mov
sub
jg
loop
adc
xor
dec
inc
and
inc
aam
rol
xchg
pop
sub
push
xlat
pop
data16
xchg
pop
fst
cmc
popa
xchg
out
or
test
out
jnp
cdq
arpl
pop
retf
sbb
outs
sbb
js
loop
ss
adc
push
xor
or
and
mov
lahf
(bad)
movs
mov
int3
push
mov
or
test
lock
outs
std
gs
add
push
dec
cmp
cmp
ret
push
cwde
mov
cmps
unpckhps
pop
xchg
xor
sub
xor
in
test
or
xchg
xchg
mov
jmp
in
mov
mov
ret
jge
inc
retf
icebp
xchg
fs
or
clc
nop
jns
popa
rcl
call
sbb
int3
lock
fsubr
std
repnz
loop
adc
adc
arpl
aaa
inc
mov
hlt
rcr
shl
das
push
int
sub
cs
mov
mov
push
lds
and
inc
ss
or
enter
pop
sbb
rol
stos
xlat
jl
(bad)
les
mov
ss
dec
scas
sbb
adc
mov
neg
xchg
push
adc
cdq
jnp
or
dec
movs
adc
mov
in
jmp
popf
fxch
pop
push
sub
sub
cmp
ficomp
push
push
cmps
push
add
aas
push
hlt
movs
mov
ins
or
dec
push
adc
and
retf
adc
adc
fidivr
loope
jmp
cmp
mov
inc
mov
lahf
jbe
xlat
jmp
les
mov
test
jecxz
mov
inc
mov
sub
out
test
out
aam
js
mov
mov
xchg
mov
or
xchg
out
ds
jp
dec
xchg
push
rcl
shl
inc
and
push
rcr
imul
mov
or
adc
stc
cdq
jne
cmps
outs
sbb
daa
cmp
(bad)
loopne
sub
sub
lods
mov
mov
adc
ror
cli
cdq
ins
leave
mov
hlt
enter
sbb
ficomp
sub
setle
fcom
sbb
push
mov
cmps
sbb
movsx
adc
push
mov
mov
seto
xchg
adc
sbb
fs
jl
stos
fidivr
adc
call
mov
cmp
cmp
push
sub
stos
pop
sub
in
sbb
or
mov
add
xchg
fs
movs
inc
ror
into
mov
outs
dec
rol
or
lahf
jns
data16
dec
add
outs
loopne
or
push
imul
jne
jbe
fistp
ret
or
in
inc
sub
fldenv
mov
sbb
int
scas
cwde
add
and
pusha
les
rol
push
outs
retf
int3
(bad)
pop
sbb
clc
popf
jno
loope
fsub
push
sub
test
sub
and
mov
shl
mov
js
sub
xor
dec
std
or
lea
pop
mov
loop
fbld
dec
ins
imul
jl
les
inc
movsx
xor
test
fst
test
sbb
push
mov
pop
aam
gs
xor
cmps
(bad)
mov
scas
stos
pop
fwait
push
dec
sub
(bad)
rol
cmps
arpl
data16
lods
out
bound
xchg
movs
adc
pop
fs
ds
add
out
ret
outs
jmp
mov
cld
lahf
pop
add
mov
jl
int
mov
and
test
lods
pop
dec
jo
ja
mov
dec
ins
sbb
sub
gs
fistp
jnp
(bad)
mov
repz
xor
xchg
adc
xchg
loope
and
mov
sub
ret
push
push
shr
(bad)
add
cs
dec
mov
push
push
xchg
pop
ror
pop
push
in
pushf
or
pop
cmp
repnz
mov
push
addr16
jge
data16
sbb
xchg
xchg
iret
and
stc
or
call
cmp
mov
jmp
arpl
xor
cmp
retf
mov
adc
xchg
rcr
jmp
scas
stos
mov
mov
mov
sti
xchg
jns
aas
mov
aaa
imul
cmps
xlat
pop
pop
movs
les
sub
shl
and
sub
inc
dec
add
lods
push
jle
push
out
shr
xchg
add
aas
cmp
movs
(bad)
fisub
jmp
retf
out
inc
cmp
out
or
stos
clc
sahf
mov
fistp
sub
jl
fs
sbb
or
mov
adc
loop
loopne
and
jg
hlt
xchg
push
jg
inc
cmps
ins
hlt
adc
push
push
pushf
das
neg
push
jno
xor
ja
push
adc
retf
add
or
mov
mov
ins
xchg
pop
sbb
xor
xchg
dec
fld
dec
xchg
xchg
pop
je
ins
cwde
cmc
mov
mov
xchg
sar
jmp
jb
mov
mov
clc
xchg
add
mov
bound
mov
pop
mov
adc
jo
mov
sbb
inc
cmp
xor
out
mov
add
push
cli
lods
shl
fidivr
popf
jmp
xchg
inc
movs
sub
retf
cmps
jmp
pushf
aas
fadd
cmp
daa
inc
xor
fisubr
mov
or
pushf
push
jmp
call
cmp
push
inc
mov
in
test
stos
jp
sar
mov
and
outs
(bad)
hlt
fisubr
xor
pop
mov
fsubr
mov
jl
out
movs
xchg
gs
repz
out
loopne
test
sar
and
add
(bad)
pusha
sbb
xchg
not
div
cmovns
leave
les
fbstp
imul
call
out
push
mov
movs
fcmovne
sub
call
aas
mov
movs
scas
retf
dec
mov
add
mov
out
adc
and
and
shr
inc
outs
jle
das
out
and
sahf
fimul
shl
iret
inc
or
push
push
fcom
push
sub
imul
(bad)
mov
adc
and
test
adc
clc
mov
sbb
xchg
adc
jmp
xor
push
mov
in
(bad)
xchg
mov
ficom
jno
sub
push
mov
xchg
push
sub
mov
stos
xchg
lahf
std
xchg
xchg
xchg
mov
mov
movs
xor
sub
xlat
adc
sti
push
repz
jmp
mov
ret
mov
and
dec
hlt
xor
adc
mov
and
nop
ret
or
jnp
fwait
sbb
lahf
test
call
(bad)
jge
push
clc
jmp
leave
adc
inc
mov
in
popf
sub
xor
mov
jecxz
inc
ret
aam
inc
jnp
test
jo
sbb
sub
and
retf
xchg
int
iret
stc
cmps
and
loopne
cmp
cmp
test
add
ret
sar
xchg
jle
sahf
mov
pop
leave
addr16
pop
xchg
outs
stc
mov
push
fidivr
sub
repz
cmp
cmc
int3
imul
sti
dec
xchg
fs
or
xor
pop
adc
in
mov
es
xor
push
cmp
in
inc
cwde
mov
pushf
outs
sahf
jo
adc
inc
int
arpl
jl
xor
rcl
shl
std
cmp
imul
shr
das
mov
cs
dec
lods
call
or
je
mov
lds
loop
adc
mov
sbb
mov
push
cmp
adc
lea
aaa
loope
pop
jle
pushf
inc
cs
add
inc
xor
push
out
clc
lock
bound
dec
and
and
mov
jmp
sub
(bad)
push
jnp
pop
mov
sbb
in
fisubr
xchg
outs
cmp
cmp
jle
out
fnstsw
xor
dec
xchg
xchg
enter
add
dec
(bad)
or
std
jp
popf
jp
sub
cmp
sbb
mov
movs
mov
dec
daa
xchg
dec
stc
adc
dec
pop
ja
mov
mov
dec
and
fwait
xchg
imul
les
dec
mov
pop
push
adc
dec
jns
aas
xor
xchg
xor
jns
mov
cmp
imul
jns
cmp
inc
ds
mov
jns
mov
mov
mov
cmc
push
jl
daa
mov
adc
shl
sahf
xor
(bad)
in
add
std
fsubrp
push
sbb
fistp
enter
adc
pushf
or
in
jge
pcmpgtd
xchg
jmp
inc
imul
sti
adc
leave
mov
in
push
dec
out
popf
shl
lock
ins
adc
jecxz
hlt
out
add
inc
and
mov
add
(bad)
sub
xor
xor
or
int
push
add
sbb
and
mov
ins
fmul
pop
shl
push
push
or
sbb
push
movs
data16
je
adc
adc
or
jbe
mov
xor
push
sub
cdq
ja
and
call
cmp
jb
es
push
imul
stos
hlt
ret
push
inc
cmp
push
mov
and
mov
xor
sub
add
inc
pop
out
js
xor
jne
pop
sar
adc
mov
stc
pop
repz
dec
jp
fst
inc
arpl
jb
sub
xor
xchg
repz
push
cdq
pushf
adc
xor
sbb
mov
sar
jne
je
ins
into
sbb
jne
cmc
xor
push
jle
jle
mov
movs
mov
popf
lods
dec
(bad)
sahf
jmp
es
mov
into
inc
pop
adc
ficomp
hlt
neg
cmps
(bad)
push
cmp
jae
ret
aaa
or
jne
xor
cwde
and
and
pop
mov
loope
pop
inc
add
sub
mov
pop
pop
mov
(bad)
cli
fmul
out
mov
jp
leave
push
sub
or
mov
jmp
(bad)
fsubp
push
scas
aad
pushf
rcl
stos
shl
test
(bad)
retf
addr16
cs
sub
or
ja
mov
cs
lds
dec
mov
and
fwait
pop
push
cmp
jnp
mov
dec
inc
pop
lods
jmp
lahf
outs
inc
test
inc
das
and
retfw
call
(bad)
adc
mov
pop
mov
rol
jae
pop
pop
cmp
loope
and
mov
push
sbb
xor
jnp
dec
fist
mov
jecxz
jmp
xor
sbb
dec
in
lahf
sub
repz
fsubr
jecxz
mov
fnstenv
jp
fstp
js
lahf
cmp
mov
nop
sub
fdiv
outs
pop
rol
jno
or
sbb
data16
sti
xor
and
cwde
cmps
fsubr
(bad)
out
inc
jl
fistp
jle
jl
cld
push
aam
pushf
inc
leave
pop
cmp
xchg
lods
or
lea
adc
dec
sub
stc
std
push
fwait
pop
ss
jo
xor
sbb
std
nop
add
rcr
pop
adc
les
test
das
dec
add
cmp
fild
adc
les
adc
add
aaa
xor
hlt
pop
sub
add
jmp
adc
stos
stos
inc
add
jmp
lods
jg
push
cmp
ret
push
fwait
hlt
jne
es
dec
enter
enter
stos
ret
push
es
add
inc
imul
ins
std
xor
jbe
int
sbb
movs
jp
retf
jno
add
inc
inc
gs
clc
imul
fstp
jmp
xchg
xor
(bad)
pop
mov
adc
scas
js
fistp
mov
xor
or
jmp
jmp
sub
fadd
jmp
call
inc
(bad)
cli
mov
test
outs
mov
std
jns
not
ins
or
hlt
js
jnp
inc
in
fmul
dec
xchg
js
sbb
push
or
push
jle
and
push
fst
jnp
mov
adc
aas
enter
dec
push
jae
cdq
loopne
and
arpl
mov
ins
gs
or
jmp
xchg
enter
repz
jecxz
lahf
push
cmp
cmp
inc
inc
scas
xor
std
mov
xor
mov
loopne
push
xor
int
in
xor
jo
jmp
sar
inc
and
mov
mov
inc
push
xor
jl
cmps
repnz
jl
pop
pop
add
mov
mov
stos
nop
push
add
mov
jmp
pop
icebp
jae
retf
mov
xchg
add
leave
addr16
add
icebp
dec
movs
scas
push
call
lahf
adc
cwde
mov
enter
mov
cwde
in
out
outs
add
sbb
or
test
push
add
retf
inc
add
repz
pop
mov
sti
dec
cmp
mov
dec
pop
pop
mov
ret
cmp
loope
out
setae
aam
outs
and
sbb
mov
cmp
repz
cmp
pop
neg
clc
mov
add
or
jecxz
inc
aas
xor
jmp
inc
or
mov
mov
push
fidivr
jno
mov
in
push
sub
aaa
push
sub
mov
xor
push
(bad)
fidiv
mov
fldenv
lea
imul
cwde
xchg
mov
ret
sbb
mov
(bad)
sbb
sbb
sbb
lea
adc
add
add
or
or
dec
fwait
cmps
js
rcr
loope
ds
and
test
cmc
arpl
xor
pop
in
stos
rcr
out
cmp
jge
fistp
das
cmp
ins
mov
cmps
ficom
aaa
aas
mov
into
ret
clc
dec
sar
call
pop
mov
retf
pop
sbb
push
push
ror
adc
sbb
and
stc
push
and
push
outs
fmul
mov
shr
jl
out
jnp
out
pop
loopne
dec
push
and
out
addr16
cmp
mov
cmps
clc
sbb
scas
(bad)
iret
sti
lock
sub
sbb
sahf
call
leave
or
or
inc
lock
mov
sahf
dec
loop
retf
lods
xor
(bad)
jb
out
scas
jb
scas
fwait
data16
ds
mov
mov
and
rol
out
mov
inc
iret
in
push
jp
adc
sbb
adc
xchg
lods
add
cdq
jecxz
fbstp
mov
fcmovnu
rcl
lock
daa
sar
mov
pop
cmp
pusha
sub
sbb
and
push
jo
mov
push
pop
cmps
xchg
adc
das
mov
push
ror
leave
push
rcr
mov
aad
fnstcw
jbe
adc
jmp
rcl
retf
mov
or
sti
lods
pop
test
fneni(8087
inc
cmp
pop
and
inc
sahf
push
jno
xor
rcl
add
sub
(bad)
mov
shl
or
adc
lods
push
push
dec
xor
push
and
icebp
out
(bad)
lahf
(bad)
cli
xlat
popf
test
lea
enter
mov
pop
retf
mov
jbe
adc
mov
ds
bound
jecxz
scas
daa
mov
call
movs
sar
lea
repz
dec
stos
and
ja
dec
bound
scas
mov
fdivr
out
xchg
jmp
ins
rcr
ror
xchg
jmp
les
aaa
xor
call
cmp
fdiv
lods
lahf
iret
ficom
loopne
inc
lock
push
mov
or
mov
or
pushf
or
mov
inc
dec
xor
push
sbb
push
sahf
out
jno
xchg
cdq
push
xchg
int
xor
jne
and
paddusb
mov
cmp
hlt
xor
pop
sbb
icebp
inc
xchg
push
in
test
jbe
fst
dec
sub
call
inc
mov
jle
aam
addr16
into
push
dec
push
mov
jle
test
xchg
ficomp
cwde
pop
int
xchg
add
sub
je
pop
and
mov
add
xchg
enter
mul
dec
xchg
push
inc
ror
xor
(bad)
mov
dec
or
dec
fsubp
jno
div
in
mov
sbb
inc
sar
outs
and
(bad)
gs
jnp
inc
sbb
hlt
call
or
cmp
push
and
repz
mov
mov
cdq
or
out
adc
adc
dec
lahf
inc
lahf
xchg
inc
int
aam
sbb
pop
scas
jp
xor
arpl
dec
xchg
rcr
mov
add
movs
push
ret
addr16
xchg
pop
cs
out
pop
in
sub
stos
push
ins
mov
retf
fs
imul
and
(bad)
cli
repz
mov
jl
in
(bad)
sub
push
sar
cmp
mov
aam
mov
mov
push
xlat
push
adc
adc
ftst
je
mov
js
pop
arpl
push
shl
repz
sub
jne
jns
push
jmp
rol
pop
sbb
add
jnp
sub
call
stos
mov
lock
jp
(bad)
lds
jge
in
daa
xchg
pop
xchg
mov
mov
push
dec
out
sbb
jecxz
xor
cmp
out
(bad)
push
xchg
xchg
les
xchg
mov
xchg
out
cs
call
xchg
jb
repnz
pop
ins
push
xchg
addr16
sti
xor
push
cld
inc
pop
cmp
xchg
enter
pop
cld
aaa
sub
sahf
stos
add
jne
push
cmp
push
mov
cmp
push
mov
retf
xchg
sar
or
or
dec
outs
xchg
retf
imul
sub
push
jo
xor
add
adc
add
cmps
jae
pcmpeqd
jmp
mov
inc
xchg
inc
or
sbb
ins
push
cmp
retf
sub
(bad)
push
lds
sbb
iret
clc
inc
mov
call
jae
or
mov
and
call
sbb
cdq
pop
or
add
inc
inc
popf
clc
push
cwde
lock
mul
inc
cs
and
or
adc
cmps
cmp
mov
pop
xor
je
ds
hlt
jb
pop
add
aas
ror
xchg
fs
adc
ins
xor
mov
pop
inc
mov
icebp
lock
mov
aaa
aam
xor
xchg
mov
jmp
ror
jmp
sahf
outs
pop
xchg
out
aam
jle
imul
xchg
or
pop
ror
adc
push
jb
cmps
in
mov
imul
shl
sbb
lea
data16
mov
pop
push
push
mov
cli
aam
inc
or
inc
xor
mov
stos
cmp
idiv
mov
scas
aam
push
push
lock
(bad)
dec
test
inc
js
jecxz
cwde
scas
mov
mov
retf
in
jmp
lods
and
sbb
out
and
mov
int
jb
jae
and
xor
xchg
mov
sub
cmc
nop
push
xchg
pop
movs
gs
ins
lea
inc
xchg
fbstp
icebp
xchg
xchg
or
add
dec
in
xlat
retf
add
push
mov
mov
rcl
lods
iret
pop
pop
mov
cdq
int3
bound
ret
mov
push
mov
inc
(bad)
retf
movs
icebp
push
pop
inc
fxch
outs
and
jbe
adc
loope
mov
cld
xor
je
sahf
test
les
or
bound
cmp
test
inc
xor
xchg
iret
mov
sub
xchg
adc
add
cmp
pop
jmp
push
gs
push
cmp
jecxz
fdivr
leave
push
ret
inc
out
nop
imul
and
vpmulhuw
or
int3
loope
(bad)
rcl
adc
arpl
ret
push
scas
mov
xchg
not
mov
out
adc
sbb
imul
addr16
adc
dec
sbb
or
out
movs
push
xor
call
push
pushf
pop
dec
inc
dec
mov
add
xchg
sti
cld
mov
push
mov
xchg
fdivr
(bad)
test
inc
jg
imul
call
inc
dec
or
inc
movs
jge
sub
jo
xchg
hlt
addr16
loope
jnp
jae
daa
mov
and
outs
std
push
test
xchg
add
popa
and
sub
jecxz
mov
mov
addr16
jbe
add
mov
mov
mov
shl
dec
test
add
pop
cmc
gs
std
es
stos
sub
ss
adc
sub
stc
xchg
xor
pop
xchg
xchg
aaa
(bad)
ss
test
test
adc
mov
test
inc
test
ja
daa
push
imul
xchg
out
test
cmp
ss
stc
into
fdiv
lods
pop
cmp
popf
es
and
jb
shl
cld
jg
inc
call
int3
or
add
sahf
js
push
gs
pop
pop
stos
mov
sbb
sub
cwde
ds
mov
push
push
jbe
jmp
pop
aad
jae
jecxz
fild
dec
shr
out
cmp
ret
fbld
add
jmp
pushf
orps
mov
or
movs
push
imul
nop
nop
xor
push
mov
mov
cmp
loope
fbstp
aas
and
pop
ret
dec
hlt
xchg
(bad)
add
xlat
call
sahf
sti
cmp
mov
retf
or
fcom
jno
jmp
adc
sbb
sub
mov
adc
les
in
lds
xor
push
fiadd
xor
and
pushf
movs
loop
cmp
and
test
mov
mov
fisubr
popf
jmp
or
clc
rcl
cmps
pushf
mov
pop
push
aam
imul
sub
push
shl
inc
fistp
scas
arpl
add
js
adc
neg
shr
stos
sbb
pushf
mov
es
clc
mov
cmps
ror
outs
adc
sbb
in
and
dec
movs
fnsave
outs
retf
adc
cmp
into
or
stos
addr16
mov
and
and
int3
ficom
cld
imul
mov
fs
scas
sbb
ffreep
sub
jae
cmp
ss
call
mov
jo
dec
dec
jno
rcl
sahf
andps
adc
hlt
mov
cmp
mov
push
dec
lea
sub
ds
mov
in
call
int
inc
std
mov
dec
dec
repz
pop
or
cmp
jp
test
pop
dec
adc
adc
in
push
enter
and
sub
stc
mov
fist
inc
jge
inc
or
dec
call
cmps
and
pop
mov
inc
retf
and
fs
sar
idiv
inc
aam
jae
(bad)
pop
add
retf
pop
sub
adc
inc
dec
cmp
fadd
or
mov
cmps
dec
int
mov
outs
mov
lds
inc
mov
inc
ja
add
frstor
enter
ficom
ja
push
push
and
jmp
push
retf
shr
lods
add
cmp
in
add
xor
push
add
and
sbb
sub
mov
xchg
fmul
ret
xor
cmp
test
mov
mov
adc
jne
pop
out
jl
xchg
daa
lods
loopne
(bad)
cli
int3
mov
and
push
jmp
jecxz
fmul
jp
jbe
int3
mov
pusha
adc
xchg
jge
stos
(bad)
(bad)
out
adc
icebp
mov
add
ror
shl
adc
cmp
adc
jge
mov
sub
stos
pop
shr
outs
xor
xchg
not
sbb
jns
xchg
sub
ret
xlat
ins
out
xor
jns
mov
cld
pop
cmp
call
cwde
ret
test
ins
(bad)
cs
pop
(bad)
xchg
cld
movs
and
mov
gs
dec
xchg
sub
dec
sbb
push
pop
pop
ret
jne
pop
in
push
jo
ins
mov
push
(bad)
jbe
pop
sub
out
fcmovu
mov
dec
pop
(bad)
push
mov
pop
jnp
xor
adc
inc
dec
loope
(bad)
in
mov
jne
mov
mov
lock
mov
jg
pop
jnp
(bad)
loop
mov
inc
dec
fiadd
xlat
jecxz
int3
loopne
inc
jns
iret
xchg
and
cli
movs
lahf
or
pop
sub
pop
lods
mov
mov
ficom
jl
mov
and
sub
sbb
fisubr
dec
push
mov
mov
add
pop
nop
dec
inc
lea
stc
cwde
and
push
xchg
loope
pop
call
jno
(bad)
jl
jnp
in
fwait
scas
(bad)
out
shl
call
xchg
(bad)
imul
mov
jmp
xor
or
dec
jns
out
jno
xor
xchg
jns
shr
outs
pusha
cmp
dec
mov
or
data16
pusha
cdq
dec
or
(bad)
and
lods
stos
sbb
sub
push
jp
call
retf
sub
or
pop
scas
retf
(bad)
stos
mov
js
fidiv
dec
je
dec
aam
ret
shl
adc
mov
test
inc
push
ds
cmp
js
scas
or
cmp
adc
cmp
imul
sbb
sti
movs
fs
gs
cs
cmp
lahf
jmp
out
mov
inc
inc
mov
cmp
xchg
jmp
int
push
inc
adc
sti
aas
rcl
or
les
fcom
dec
cmp
xchg
push
imul
in
cmp
aas
loope
mov
xchg
or
jmp
sbb
int3
fisub
dec
das
dec
pop
adc
loopne
sbb
dec
push
leave
not
add
(bad)
cmp
les
pop
mov
lds
in
repnz
mov
scas
jecxz
test
pop
in
inc
push
pusha
mov
gs
xchg
mov
sbb
sub
out
loopne
mov
loope
imul
adc
out
xchg
jecxz
sub
pop
test
dec
fsub
jmp
pop
fbld
bound
pop
cmp
imul
adc
adc
(bad)
mov
xchg
pop
cmp
cmp
int
fcomp
das
push
outs
sbb
jno
fmulp
and
test
mov
push
inc
ror
add
aad
jbe
fild
lock
adc
mov
pop
sbb
rol
pop
jmp
sub
jle
add
mov
mov
push
fucomip
cli
xor
je
cmp
fisttp
mov
ret
cmp
out
pop
es
stc
loopne
test
push
enter
inc
movs
rcr
inc
adc
(bad)
cmps
add
mov
sub
mov
mov
dec
mov
inc
sahf
ja
or
add
fcomp
out
xchg
sub
jl
(bad)
jno
hlt
rcr
mov
xchg
xchg
sbb
mov
leave
mov
jae
cmp
div
in
test
loope
out
adc
mov
adc
loop
add
out
mov
add
dec
sub
pop
xchg
adc
call
lea
test
xchg
xor
fsubrp
jno
mov
loop
pop
sub
data16
in
(bad)
xchg
or
imul
inc
mov
or
or
fwait
dec
xchg
push
(bad)
cwde
add
dec
pop
cmp
aas
aam
loope
pop
out
sti
push
mov
jne
add
adc
outs
sahf
test
mov
or
loop
xor
cmc
nop
and
stc
sbb
loope
adc
mov
addr16
int
test
and
dec
mov
jle
inc
xchg
mov
adc
mov
pop
int3
in
cld
fbld
repnz
fs
idiv
mov
sti
outs
xor
dec
or
retf
sub
mov
mov
enter
sub
js
mov
aaa
jg
sbb
adc
rcr
inc
push
jecxz
push
fidivr
in
retf
sub
repz
clc
jmp
pusha
test
dec
jae
lock
in
stos
out
ins
retf
push
test
xor
add
repnz
or
sub
out
iret
pop
mov
push
aas
xor
inc
mov
pop
push
xchg
pop
loopne
pop
jmp
adc
idiv
ins
cs
jnp
fisub
mov
int3
pushf
inc
and
or
cmp
je
adc
test
sbb
scas
mov
jbe
add
mov
jmp
sti
(bad)
push
sub
enter
add
ss
das
aam
popf
pop
loop
cdq
scas
cli
out
rcl
mov
pop
sub
std
imul
sahf
jge
mov
xor
sar
(bad)
jmp
jle
popa
test
and
stc
mov
retf
dec
mov
sar
pop
push
fisttp
rcr
push
push
xchg
push
stc
push
push
and
and
dec
scas
lahf
mov
cmp
jo
xchg
cmp
push
sar
jl
test
rcr
jecxz
fisubr
cmp
ret
mov
shl
push
jle
or
sar
fwait
xchg
dec
mov
mov
push
push
pop
sbb
dec
mov
neg
inc
jno
mov
add
test
xchg
cli
test
sbb
fcmove
mov
or
add
nop
mov
fldpi
sbb
sbb
xchg
and
test
ret
add
xor
xor
nop
mov
sub
lahf
sti
in
push
xchg
mov
fisttp
ret
aaa
fdiv
stc
ja
lods
dec
pop
sub
mov
mov
mov
int
scas
mov
dec
jb
rcr
pop
inc
pushf
or
and
pushf
push
out
dec
in
mov
into
cmp
sub
pop
inc
aaa
test
jne
push
push
jb
shl
jge
add
add
movs
mov
movs
neg
aaa
leave
dec
cli
mov
adc
cld
add
jbe
shr
repz
out
lods
inc
aam
inc
sahf
(bad)
cli
mov
mov
mul
sbb
jecxz
popa
mov
push
dec
xchg
jle
sub
mov
adc
sub
jbe
mov
cmc
push
push
mov
sbb
dec
xchg
(bad)
movs
imul
or
pop
push
inc
sbb
in
xchg
in
aaa
sbb
add
loop
ja
push
imul
aaa
inc
adc
rcl
mov
iret
push
test
cmp
icebp
sbb
mul
or
xor
push
ja
push
xchg
mov
sub
push
xor
mov
fdivr
call
adc
in
add
int3
arpl
loopne
leave
mov
ins
in
inc
fldl2e
add
jl
scas
test
add
daa
add
xchg
mov
push
fcmovnb
int3
cmps
sub
push
js
jmp
rol
add
pop
adc
popa
dec
adc
adc
mov
(bad)
movs
mov
test
pop
test
mov
popa
out
cld
inc
jle
xor
add
sbb
add
mov
rcr
jl
adc
jp
add
and
push
jo
cli
push
jp
lea
mov
and
div
lock
js
hlt
aam
fdivp
in
jmp
xchg
test
(bad)
int
ds
mov
push
ins
in
adc
jmp
loop
xor
sar
mov
dec
dec
push
dec
aam
adc
mov
cs
stos
mov
jns
seto
mov
ror
scas
add
add
loop
xchg
mov
jbe
fwait
enter
mov
(bad)
fist
aam
pop
cmp
rcl
mov
xchg
mov
mov
out
xchg
stos
fstp
jae
dec
mov
lea
or
inc
sub
cwde
in
cmp
stos
and
and
xor
inc
sub
ss
test
rcr
mov
loopne
xchg
lock
out
clc
(bad)
ror
xchg
jmp
pusha
lods
jae
mov
push
mov
dec
jnp
or
jp
lahf
(bad)
push
sub
call
nop
imul
and
inc
ret
call
loop
jg
(bad)
pop
(bad)
adc
mov
fwait
outs
fwait
ins
call
pop
(bad)
sar
xchg
xlat
ins
and
dec
push
retf
js
or
and
cmp
cwde
push
test
mov
dec
add
inc
rcr
push
repnz
jmp
jg
mov
movs
mov
xchg
cmp
ds
test
gs
fnstcw
fld
sbb
pop
sbb
add
dec
or
les
idiv
int
in
xor
sbb
(bad)
test
hlt
ret
mov
dec
xchg
inc
test
movs
stos
aad
mov
pusha
popa
jno
add
jle
mov
loopne
popa
(bad)
rol
repz
sbb
pop
push
xor
cmp
mov
retf
cli
xor
fidivr
or
(bad)
lods
jl
cmp
out
mov
iret
lds
lock
push
mov
scas
int3
(bad)
stos
or
bound
pop
jmp
bound
fdiv
xor
mov
push
dec
mov
(bad)
ja
and
or
mov
and
inc
xor
sub
cmp
xchg
mov
jl
lahf
in
adc
enter
xor
push
mov
pop
or
add
nop
mov
popa
loopne
inc
cmp
mov
aaa
sub
adc
(bad)
mov
sbb
jmp
pop
sub
cmp
cs
jle
(bad)
sar
clc
addr16
pop
push
mov
test
cmp
les
mov
jp
test
and
cmp
imul
xor
mov
lock
out
fimul
xor
sahf
frstor
inc
into
out
jmp
dec
scas
leave
and
cmp
in
xor
mov
outs
cmp
jb
or
(bad)
ds
jne
jne
sbb
js
lock
xchg
ss
push
jns
fstp
jecxz
clc
sar
sbb
(bad)
aad
xor
dec
inc
sbb
outs
movs
fwait
scas
dec
pop
popa
(bad)
mov
jbe
sub
imul
jb
push
pop
cmp
xor
scas
pop
adc
fbstp
out
adc
add
leave
cmp
or
sub
shl
sti
fisub
(bad)
pop
cmc
retf
iret
jp
adc
mov
pop
dec
out
inc
dec
imul
rcl
lods
popa
dec
dec
in
fnstsw
clc
leave
or
pop
sbb
mov
mov
cmp
push
mov
pop
add
inc
and
sub
add
jecxz
xor
jne
jg
push
and
outs
jg
rcr
cmp
loop
in
sbb
jl
sub
(bad)
shr
nop
sub
fbstp
in
outs
aad
and
sub
sahf
outs
int
sub
loope
pushf
ror
fisub
mov
sbb
out
jle
loope
xchg
movs
sub
movs
adc
pop
pusha
mov
xchg
shl
shl
pushf
rcr
add
pop
push
retf
test
scas
or
mov
aad
and
stos
jp
and
pop
aad
test
xchg
retf
pop
or
fisubr
sar
fisubr
adc
xchg
(bad)
es
and
ret
add
push
push
je
add
fiadd
fisub
fdiv
fs
lahf
int
pop
xchg
pop
fwait
stc
popa
and
xchg
or
jns
dec
push
mov
in
cmp
cmps
dec
cmp
mov
mov
fnstcw
fwait
int
push
faddp
pop
not
pusha
mov
movs
xor
push
mov
leave
mov
sub
repz
neg
pop
call
inc
mov
(bad)
xchg
push
fsubr
cmp
lock
mov
xor
or
mov
mov
ret
push
push
cmp
and
cli
xchg
or
push
jg
aam
dec
dec
mov
cmp
stc
xor
pop
sub
pushf
je
xchg
mov
pop
pop
sub
dec
retf
(bad)
lods
jge
sub
inc
inc
out
sbb
pop
out
xchg
test
ins
xor
cmps
mov
jg
and
jmp
fs
and
cmps
dec
fwait
pop
movs
xlat
in
pop
scas
stos
outs
imul
mov
mov
add
test
add
enter
jbe
xchg
push
mov
cmp
xchg
jmp
mov
iret
movs
pop
pop
mov
dec
outs
pop
pushf
inc
stos
pop
jmp
out
xchg
repnz
(bad)
leave
add
ins
ins
std
in
stos
loopne
imul
xor
dec
int3
mov
ret
int
cli
cmc
loop
addr16
dec
(bad)
add
stos
cmp
sbb
ja
add
jle
push
add
lock
push
aaa
and
push
inc
adc
je
pop
in
mov
fcomp
mov
js
test
paddd
clc
mov
enter
mov
pcmpeqd
ds
mov
xchg
cld
and
xor
mov
ja
push
push
mov
fild
ins
or
cmc
(bad)
or
push
es
movs
dec
sub
jmp
out
inc
jb
inc
hlt
outs
jp
sbb
fcomp
mov
test
mov
ja
addr16
ins
pop
jp
lods
loopne
(bad)
shl
stc
pop
push
sbb
aad
jno
es
mov
mov
jmp
jmp
movs
fs
loop
aad
icebp
adc
mov
cmc
lock
cmp
out
push
sbb
imul
shl
inc
mov
cwde
and
ins
jb
jns
push
sub
pop
iretw
inc
xchg
add
jecxz
test
nop
pop
bound
mov
pop
and
and
(bad)
out
mov
in
xchg
fnstsw
sbb
mov
pop
scas
in
xchg
inc
mov
es
scas
xchg
jg
or
into
pop
retf
scas
jo
push
(bad)
in
cmp
aam
push
fist
int3
sti
jmp
xchg
enter
jno
and
xlat
fcom
push
or
mov
outs
xor
loop
mov
shr
out
dec
out
mov
in
imul
imul
ins
(bad)
lods
call
adc
inc
mov
jge
mov
loope
out
scas
fisub
sar
and
cwde
sbb
sar
test
addr16
ffree
outs
sbb
jae
out
sar
cmps
frstor
out
je
stc
push
(bad)
shl
movs
xor
fisttp
stos
retf
push
xor
aas
test
xchg
jb
pop
cs
and
dec
dec
cmps
or
test
sub
or
std
push
mov
mov
popa
xor
mov
jne
sub
popa
iret
mov
adc
sub
push
rol
dec
pop
cmps
mov
dec
dec
aas
fidivr
push
cmps
adc
stos
jp
mov
xchg
xor
cld
js
dec
es
sub
jl
inc
ret
(bad)
cmps
jmp
sub
or
popf
rcl
mov
movups
call
out
inc
xchg
lahf
stc
mov
inc
add
cmp
sbb
cmp
je
push
(bad)
(bad)
dec
mov
xor
jnp
data16
jno
es
cdq
jmp
dec
or
pop
mov
cmp
je
xchg
pop
mov
lods
cmp
jmp
outs
ja
cwde
xor
cmp
(bad)
movs
push
rol
cwde
jmp
add
jbe
inc
cmp
or
sbb
and
xchg
mov
stos
or
or
push
imul
jg
imul
pop
cmp
jg
mov
mov
or
sahf
rcl
es
jno
push
retf
dec
mov
push
and
and
cmp
mov
adc
mov
imul
out
or
out
and
(bad)
call
dec
mov
aam
jb
and
into
ror
cmp
mov
pushf
sub
es
inc
stc
jle
xor
ins
jle
add
icebp
jge
cmp
adc
clc
and
fld
cmp
ja
or
xor
fistp
pop
pop
mov
les
push
inc
movs
xor
ins
jns
data16
fldenv
add
fcmovb
shl
loope
pop
mov
shr
mov
cmp
cld
cmp
repnz
jb
pop
pop
(bad)
fidiv
lea
nop
dec
and
hlt
push
xchg
(bad)
cwde
fiadd
out
inc
sahf
xor
jmp
stos
mov
int3
cs
je
clc
and
jmp
mov
adc
pop
(bad)
retf
and
sbb
jg
push
rcr
int
lods
fsubp
jl
fwait
pop
movs
leave
mov
stos
inc
lahf
call
ins
mov
inc
movs
mov
mov
xchg
es
sub
sbb
test
jle
jno
aas
test
xor
fbstp
lds
lods
jle
or
xchg
mov
mov
add
mov
mov
mov
pop
cmc
loop
movs
fimul
xchg
addr16
cwde
cs
fs
add
cmc
jp
sub
test
test
aad
jmp
inc
sbb
arpl
bound
(bad)
(bad)
xor
in
dec
mov
cmps
pop
test
lahf
mov
out
cdq
(bad)
and
je
das
pop
bound
push
xchg
push
push
out
cmp
push
cli
pop
test
clc
pop
xor
push
mov
add
jg
dec
pop
sub
jmp
adc
lahf
(bad)
stc
dec
fidiv
call
bound
jnp
aaa
call
aaa
dec
dec
icebp
stos
js
and
sub
les
not
popa
add
pushf
dec
add
inc
nop
call
leave
inc
push
shr
fcmovu
lea
cmp
inc
inc
jecxz
lahf
and
and
std
in
adc
aad
loope
out
adc
out
dec
inc
inc
mov
adc
test
xor
(bad)
pop
fst
stc
sahf
pop
fsub
adc
or
call
jl
pushf
iret
mov
push
js
sub
(bad)
shl
mov
loope
add
add
pusha
mov
lea
mov
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmp
je
sub
cmp
ja
cmp
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
lea
lea
push
xor
stos
pop
dec
push
push
push
call
popa
lea
push
cmp
jne
sub
jmp
jmp
push
mov
cld
lods
test
je
push
pop
push
loop
call
jmp
pop
ret
or
inc
add
dec
inc
add
in
add
dec
inc
add
inc
inc
