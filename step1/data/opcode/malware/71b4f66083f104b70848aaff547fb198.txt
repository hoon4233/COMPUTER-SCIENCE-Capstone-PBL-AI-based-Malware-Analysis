inc
add
add
fwait
inc
add
jmp
pfacc
jmp
mov
add
fwait
in
popa
add
pop
pop
repnz
mov
stc
mov
cmp
xor
leave
add
mul
out
mov
add
je
and
fstp
and
fdivr
js
sahf
and
push
adc
bnd
adc
adc
enter
rcl
adc
and
xchg
out
adc
adc
cmp
sahf
and
adc
jns
mov
sub
in
xor
enter
sbb
out
fs
adc
adc
lahf
and
adc
adc
adc
repz
jl
adc
adc
or
xchg
fs
das
add
dec
adc
pusha
fs
test
popa
ret
call
loope
cmc
adc
enter
add
push
iret
clc
adc
mov
xor
sbb
fwait
or
sbb
ss
add
hlt
and
xchg
out
adc
loopne
(bad)
and
(bad)
fsubr
inc
inc
movs
rol
xor
rcr
add
xor
into
(bad)
inc
ror
mov
xchg
pop
rcr
mov
adc
xor
pop
pop
fs
int
inc
inc
xor
sub
setl
dec
and
add
inc
(bad)
jle
data16
sbb
adc
fsub
jo
fiadd
aaa
pusha
adc
rol
mov
xchg
add
mov
dec
mov
rol
fistp
lsl
imul
jmp
dec
sbb
(bad)
xor
jbe
push
arpl
cmp
inc
add
xor
and
pop
sub
or
or
in
cs
mov
cld
sbb
lock
or
add
scas
loopne
adc
ins
shl
mov
mov
xchg
scas
(bad)
in
in
and
aad
(bad)
aad
nop
dec
shl
add
add
inc
add
cld
int3
repnz
sbb
imul
pop
ror
movhps
cmp
ror
leave
inc
pop
inc
add
mov
hlt
add
cwde
mov
jmp
nop
add
jo
mov
mov
adc
mov
pop
shl
cmpps
iret
fsubr
xchg
fld
rcl
sahf
movs
adc
add
xchg
scas
sub
xchg
sbb
add
or
in
xchg
xlat
hlt
outs
and
sbb
mov
fwait
scas
loope
and
pop
rcr
sbb
fistp
imul
add
mov
push
int
sub
cmp
pop
pop
add
ss
or
dec
pop
rcr
pop
pop
jb
mov
add
pop
out
jbe
add
daa
in
pop
jle
pop
aaa
fmul
jmp
and
sub
or
inc
jb
push
xor
mov
out
or
out
hlt
sar
lock
sbb
jo
add
in
adc
pop
jg
mov
add
cmp
jae
add
add
push
add
push
sbb
dec
add
fnclex
out
inc
cmove
pop
imul
outs
inc
jmp
pop
rdpmc
push
dec
push
xor
add
push
inc
push
sub
das
push
clc
out
or
and
ins
add
data16
adc
mov
iret
add
bound
inc
cmps
scas
sub
adc
cmp
addr16
mov
cmp
pop
mov
(bad)
inc
add
pusha
scas
imul
(bad)
jmp
add
dec
das
jae
add
mov
add
jl
add
pop
das
cmp
mov
dec
mov
add
in
inc
arpl
and
inc
push
movs
imul
sub
enter
sub
or
das
mov
pop
clc
pop
jmp
cmp
xchg
test
fs
inc
dec
dec
add
add
xor
fist
dec
outs
fs
xor
xor
adc
push
div
dec
add
push
add
dec
jg
xor
mov
push
lahf
dec
mov
xchg
(bad)
sub
pop
adc
inc
hlt
dec
cmps
int
or
rol
jne
xlat
rcl
cmp
push
adc
xor
jmp
outs
ret
je
pop
jae
adc
add
and
push
xlat
aad
inc
jne
jb
outs
and
xlat
or
push
inc
xor
inc
cmp
xchg
inc
cmps
sti
jb
vmwrite
or
pop
repz
push
jne
call
push
inc
push
jmp
movs
inc
scas
shr
add
jnp
jle
and
jmp
mov
ss
cmp
data16
inc
pop
mov
push
cli
adc
mov
in
cmp
xor
inc
stos
sar
outs
pushf
rcl
push
cs
push
lock
mov
mov
cmp
outs
addr16
ins
and
shl
js
test
mov
dec
imul
and
jae
popa
ins
and
fadd
pop
call
cmp
add
cs
dec
inc
jg
sbb
fs
add
dec
mov
mov
mov
test
mov
(bad)
jne
inc
outs
imul
in
mov
mov
(bad)
cld
dec
gs
push
idiv
jb
outs
addr16
outs
inc
jns
gs
jb
jns
push
sbb
xor
add
data16
mov
pop
add
out
jg
xlat
push
js
sti
sub
xchg
or
jmp
sahf
(bad)
sub
aad
cmp
pop
mov
retf
jno
sahf
mov
aas
adc
or
out
dec
and
ins
popa
jae
jecxz
sbb
xchg
fnstenv
es
add
add
xor
out
fldcw
psllw
add
movs
mov
cmp
es
scas
add
iret
shl
jnp
test
shl
out
sub
adc
pop
aaa
xor
daa
aaa
sub
jae
add
adc
aaa
or
pop
neg
xor
inc
add
or
or
sub
sbb
xor
jnp
aaa
ss
inc
sbb
idiv
inc
add
fldenv
test
cmp
jne
xor
inc
add
enter
minps
inc
push
bound
xor
add
aaa
rol
pop
and
xchg
nop
xor
sbb
adc
inc
push
inc
pop
xor
aas
ret
ret
jnp
mov
mov
idiv
xor
aaa
adc
dec
xor
fcomp
inc
pop
sbb
movs
mov
inc
dec
pop
das
push
retf
inc
xor
xlat
and
inc
xor
xor
cmp
mov
das
ss
outs
xor
mov
fst
xor
sbb
test
adc
dec
pop
imul
add
nop
mov
adc
xchg
pop
sub
xor
add
add
xor
adc
ja
aaa
jmp
retf
ss
pop
xchg
ret
dec
aaa
fs
xor
shr
xor
out
cmp
add
aaa
lahf
xor
sub
add
mov
inc
add
xor
push
and
add
jmp
xor
xor
inc
mov
cmovne
adc
loop
(bad)
cmp
cmovbe
popf
pusha
mov
adc
dec
test
inc
or
xor
pop
xor
in
mov
mov
add
xor
(bad)
xor
or
add
cmp
mov
and
cmc
cmp
cmp
inc
jns
ins
es
icebp
pop
pop
cmp
and
cmp
jae
dec
mov
xor
xor
aas
pop
inc
push
cmp
add
pop
inc
mov
xor
xchg
sbb
jg
or
mov
jmp
xor
bound
pop
fldlg2
sbb
pop
jg
test
inc
or
add
add
and
xor
mov
add
add
cmp
push
loop
pop
xor
and
add
jb
in
je
jecxz
daa
jae
fwait
add
dec
xlat
imul
inc
and
sub
inc
ins
and
and
dec
cmps
xchg
xor
inc
xchg
add
xchg
xchg
sub
iret
imul
(bad)
xor
nop
dec
xor
xchg
xor
xor
add
sub
add
and
add
aad
sub
pop
xor
inc
or
xor
add
ss
or
inc
cmp
in
aad
inc
jns
daa
or
dec
lock
lock
les
or
add
add
js
mov
add
cdq
inc
cmp
sar
aaa
aaa
cmp
dec
ss
inc
and
mov
dec
fwait
das
mov
aaa
pop
adc
daa
pop
fs
div
cmp
pop
sar
popf
xor
xor
xor
aaa
and
mul
xor
xchg
add
push
add
add
sbb
xor
cmp
call
sbb
outs
ins
inc
aaa
pop
inc
jo
pop
fs
pop
inc
inc
(bad)
in
int
loope
jmp
das
sbb
addr16
mov
xor
cmp
nop
sub
jg
int3
into
pop
pop
sub
jnp
jo
iret
xor
xlat
add
xchg
pop
clc
inc
inc
std
xor
das
sysret
mov
jns
cmp
push
arpl
jnp
xor
sbb
jnp
mov
xchg
xor
ins
test
or
fs
cmp
popa
mov
fwait
jno
in
div
ret
xor
idiv
inc
stc
retf
adc
pop
neg
and
arpl
stos
cmp
(bad)
into
fimul
rcr
cmps
xor
or
es
dec
dec
mov
inc
mov
xchg
dec
inc
mov
or
pop
or
ret
inc
jmp
btr
add
adc
xor
cmp
xlat
test
xor
xchg
mov
fwait
es
fdivp
pop
inc
xor
scas
(bad)
adc
ffreep
jnp
shl
mov
jge
das
jb
and
repz
(bad)
pop
imul
out
or
outs
mov
mul
push
jnp
cmps
stos
ja
je
cmp
shl
aaa
pop
push
jno
test
sti
aas
aaa
fld
out
cmp
(bad)
xchg
out
popf
sbb
daa
xor
in
xor
outs
neg
das
mov
fs
int
xchg
xor
fwait
hlt
inc
mov
rdpmc
or
or
scas
(bad)
cmovns
and
sbb
inc
addr16
js
jmp
aaa
ret
lods
gs
mov
mov
cwde
dec
js
xchg
or
cmp
dec
add
push
cmps
btr
jnp
rol
fstp
cwde
sbb
jge
xchg
dec
out
cmp
jge
outs
jmp
sub
mov
pop
sbb
mov
sbb
mov
pop
xor
sbb
aad
cmp
jnp
xor
inc
imul
mov
mov
popf
pop
out
dec
or
ret
fisub
xchg
xchg
outs
push
pop
out
popa
sar
push
sub
cmp
rol
(bad)
neg
out
int
sar
scas
jae
int3
es
fwait
int
and
jbe
shl
leave
mov
dec
xchg
xor
cmc
fsubrp
xor
mov
dec
ret
lods
neg
fwait
int
lock
test
or
es
fwait
aaa
imul
pop
inc
xor
lahf
xchg
retf
xchg
fwait
xor
std
imul
imul
inc
sbb
sbb
xor
(bad)
arpl
jnp
neg
ret
xchg
pop
push
adc
test
std
ret
pop
fiadd
daa
imul
or
cmp
adc
jp
mov
xchg
neg
mov
jno
cmp
popf
out
mov
pop
shl
inc
xor
aaa
dec
xor
inc
lods
sbb
lods
loopne
iret
cmp
outs
push
xchg
sbb
cmp
push
add
jecxz
stos
int
mov
out
mov
mov
fnstcw
arpl
and
pop
inc
loop
gs
xchg
or
or
xchg
lds
test
ret
jmp
dec
shl
push
or
(bad)
ficomp
jg
outs
mov
xor
js
add
cmp
xor
pop
adc
dec
int
adc
pop
push
push
or
or
jg
outs
push
xor
inc
xchg
or
shl
je
rcr
jns
lock
inc
lds
cwde
cmc
sbb
jae
lds
xor
aaa
xchg
lock
mov
inc
loope
cmp
sub
es
test
fiadd
rcl
xor
imul
aaa
jge
shl
pop
adc
adc
es
int3
and
call
dec
push
xchg
test
dec
das
jnp
or
adc
xchg
fisub
inc
pop
xor
int3
push
mov
or
outs
sbb
pop
(bad)
mov
sti
xlat
mov
mov
rol
fiadd
xrelease
mov
rcl
neg
jmp
jmp
es
add
ja
outs
inc
out
sbb
lods
cmp
mov
jne
sets
retf
cmc
inc
jmp
(bad)
sti
fidiv
cmp
fwait
xor
pop
add
push
mov
jp
ret
in
retf
push
cmc
xchg
adc
sub
push
dec
and
jns
dec
xchg
ficomp
hlt
data16
imul
dec
pop
int
outs
push
aad
ret
out
dec
sbb
or
jecxz
fisub
es
cmp
ret
dec
mov
xor
jae
fwait
shr
ins
sub
popf
adc
popf
dec
hlt
dec
ret
and
xchg
sbb
jge
aam
add
sbb
lods
mov
or
aam
inc
push
rol
xor
mov
popa
shr
imul
js
es
imul
inc
xchg
daa
and
push
xchg
popf
leave
mov
jmp
jge
das
loope
mov
out
das
mov
cvtps2pi
mov
sar
int
add
es
call
cwde
add
fwait
mov
xor
adc
sub
scas
ret
or
(bad)
mov
cwde
xor
popa
sub
or
cmc
pop
xchg
mov
arpl
mov
es
add
xor
xlat
hlt
pop
xchg
and
fwait
hlt
cmp
inc
xor
and
jne
xor
jno
retf
mov
add
push
out
pop
adc
pop
jnp
cmp
push
imul
lds
scas
pop
js
xor
cmps
dec
mov
dec
inc
(bad)
push
movnti
popa
sub
xor
mov
icebp
push
xchg
xor
out
xor
shr
jnp
dec
mov
xchg
stos
iret
lods
add
cmp
ins
adc
inc
out
or
and
cmp
sbb
hlt
or
mov
cmps
or
movs
pop
movs
sbb
js
scas
sub
and
icebp
lds
xor
adc
sub
cmps
sub
mov
push
pandn
fwait
rcr
stos
ret
add
out
inc
add
fisubr
bound
mov
aad
mov
out
bsr
sti
repz
in
fwait
lods
js
mov
sub
int3
adc
jno
inc
dec
mov
mov
dec
dec
out
cmp
xlat
mov
cmp
mov
imul
inc
lods
push
adc
stc
es
pusha
mov
xor
add
lahf
pop
cmp
movs
push
mov
adc
dec
xchg
stos
dec
ror
mov
popa
add
and
mov
pop
mov
movs
iret
imul
rol
es
and
inc
call
aad
shl
call
int3
push
popa
daa
xchg
(bad)
fwait
je
inc
pop
cmp
arpl
cmc
fwait
jno
or
sbb
jp
push
ins
std
fwait
jecxz
pop
xchg
mov
inc
adc
int3
bound
mov
add
jge
mov
popa
add
cwde
push
sbb
dec
push
sub
jmp
cmps
(bad)
or
aad
int
ins
dec
cmc
aaa
shr
test
in
mov
cmp
mov
jmp
inc
stc
fs
xor
loopne
xchg
int
lock
pop
cmps
mov
jmp
sub
push
int
arpl
test
mov
xor
sbb
shl
mov
imul
ret
dec
setp
mov
push
mov
test
add
js
dec
push
dec
cmp
sbb
mov
(bad)
test
sbb
mov
cwde
gs
imul
test
and
pop
cdq
xor
test
dec
mov
loopne
rcr
call
cmps
aaa
mov
imul
xchg
dec
pop
cmp
xor
or
leave
xchg
inc
repz
or
es
ret
xor
pop
or
outs
xchg
aaa
and
dec
out
mov
inc
dec
adc
fwait
daa
mov
cwde
inc
cvtdq2ps
es
jne
popf
and
jmp
int3
jmp
fwait
adc
or
dec
loopne
(bad)
cmc
pop
sbb
repz
mov
jmp
(bad)
sbb
dec
cwde
lods
rdpmc
(bad)
jmp
add
fisub
and
xchg
jno
sub
shl
dec
pop
stos
in
push
test
mov
loope
sbb
xchg
stc
mov
shl
pop
movs
xor
push
icebp
xchg
mov
sub
push
shl
dec
lds
test
imul
inc
cmp
pop
push
xor
loope
js
and
outs
xchg
jnp
mov
xor
or
icebp
inc
xchg
inc
inc
cmp
and
loope
inc
fistp
adc
sbb
pop
or
jmp
cdq
pop
adc
mov
loop
or
jg
stos
aaa
mov
jno
dec
cmp
int
push
and
add
shr
ret
daa
and
cdq
es
sar
pop
push
xchg
xor
cmc
aam
xchg
push
dec
icebp
or
jae
push
xor
xchg
sbb
mov
popf
push
pop
icebp
xor
mov
push
dec
call
jbe
lods
inc
arpl
outs
repz
cmp
jnp
or
push
ja
repz
xchg
cwde
icebp
jg
mov
mov
push
pop
adc
sub
mov
aaa
dec
outs
sbb
adc
call
push
xor
jno
cmp
in
cdq
xchg
and
cmp
or
outs
ss
int
out
mov
aad
xor
outs
ret
addr16
retf
xor
cmp
fwait
aas
pop
mov
data16
mov
cmp
adc
jnp
dec
inc
xchg
jne
xchg
jp
stc
cmp
pop
(bad)
cmc
push
add
cwde
dec
rcr
pop
data16
xchg
ror
lock
jno
shr
inc
mov
cmc
push
jo
in
(bad)
out
jno
mov
scas
sbb
rdpmc
ret
mov
inc
xchg
iret
add
hlt
in
ja
outs
push
leave
loopne
jns
inc
loop
imul
icebp
fisub
icebp
sahf
test
ret
lock
mov
pop
loop
(bad)
arpl
or
sbb
adc
cdq
pop
mov
test
inc
jge
or
xchg
lds
cwde
sar
jnp
std
mov
push
(bad)
fild
js
ins
(bad)
cmp
shl
es
imul
lods
xchg
add
jg
arpl
in
inc
pop
xor
ficom
ret
sbb
mov
cmp
(bad)
sub
mov
cmps
or
lods
aaa
jmp
adc
and
mov
cwde
adc
inc
sbb
dec
push
dec
push
xor
pop
js
neg
iret
int
pop
or
xor
js
and
movs
call
fs
inc
pop
out
aaa
stos
dec
popa
xchg
inc
ins
inc
mov
mov
aaa
popf
sbb
lahf
dec
xchg
lods
xchg
inc
cmp
add
add
aas
arpl
dec
push
addr16
push
jmp
xchg
xor
cmp
push
adc
and
cmps
add
les
cmc
call
xor
lods
ja
icebp
inc
xlat
adc
sub
in
or
sbb
mov
daa
outs
(bad)
jecxz
sbb
mov
outs
inc
push
jne
fwait
and
jno
aaa
mov
dec
inc
int3
es
cmp
dec
ror
adc
jno
pusha
inc
xor
adc
mov
xchg
ja
daa
xchg
adc
int3
push
dec
jnp
mov
add
js
xchg
dec
js
add
aad
xor
sub
sub
leave
jg
dec
jne
ror
and
sub
ins
gs
sbb
popf
xor
shr
jnp
fisubr
fwait
lock
test
add
shl
jmp
xor
dec
cmp
add
push
int3
lahf
cdq
sbb
mov
cmp
pop
xor
int3
fiadd
xchg
sbb
cmp
call
int
sti
pop
fild
sbb
xchg
inc
xchg
jp
fwait
sti
test
pop
sbb
cmp
les
cmp
aad
(bad)
xor
data16
outs
not
sub
loope
sbb
fiadd
xor
mov
sbb
fnstsw
sti
fisubr
inc
mov
mov
loopne
pop
out
(bad)
adc
sti
sub
xlat
imul
arpl
(bad)
in
jmp
fist
inc
rcr
mov
inc
pop
inc
aad
add
out
leave
jnp
mov
stos
jmp
xor
push
sbb
dec
cmp
mov
mov
mov
or
xor
fld
daa
fidivr
call
add
xor
dec
inc
cmp
dec
int3
jge
or
test
or
inc
mov
xchg
call
outs
ret
pop
(bad)
push
mov
pop
dec
xchg
data16
xor
add
and
cwde
or
data16
daa
jnp
xor
sbb
adc
and
pushf
bound
dec
push
adc
fwait
test
fucom
jnp
dec
hlt
inc
icebp
add
ret
sbb
sbb
dec
cmps
xor
mov
jmp
js
add
add
xor
xor
xor
ret
in
inc
les
pop
pop
fst
and
adc
xor
mov
sbb
jno
xchg
or
jnp
xor
leave
call
stos
and
addr16
xchg
inc
inc
cdq
dec
dec
or
push
inc
mov
mov
jnp
push
inc
test
pop
fisttp
mov
mov
inc
sbb
push
outs
mov
rol
dec
test
aas
retf
add
ret
mov
fimul
and
mov
sub
or
or
jge
int3
js
mov
cwde
les
pop
rol
mov
sar
bound
mov
pushf
cmc
ror
cdq
xor
xchg
movs
retf
dec
bound
stc
inc
add
call
xor
lods
pop
mov
scas
sbb
imul
not
mov
int3
xchg
and
jbe
shr
mov
mov
int
xor
and
dec
mov
arpl
jge
mov
sub
cwde
sub
outs
adc
cmp
mov
mul
xor
test
dec
mov
jnp
pop
aam
scas
jmp
loope
or
xor
xor
shl
and
rcl
jmp
mov
bound
pop
xchg
push
addr16
out
fiadd
sub
and
xor
in
ins
pop
icebp
or
imul
jp
and
adc
push
inc
paddusw
add
leave
data16
dec
jmp
fnstenv
add
aam
inc
pop
mov
movs
adc
loope
es
fldenv
sub
mov
pop
sub
cmc
adc
mov
shl
test
add
jmp
push
movs
cwde
aam
pop
jns
mov
fwait
les
loop
push
ja
pop
sti
fwait
adc
(bad)
int
fwait
ror
cmp
(bad)
in
inc
mov
pushf
fiadd
adc
cmps
jne
inc
xor
lock
and
or
mov
inc
out
ss
js
ins
xor
cmp
cmp
pop
or
adc
pop
pop
sub
sub
fnstcw
test
and
jge
inc
sbb
test
lds
sub
xor
xchg
and
daa
cdq
in
das
pusha
inc
sar
xor
add
dec
xchg
pop
stos
aaa
sar
addr16
adc
jno
test
aam
ja
scas
fimul
lds
cmps
es
inc
xchg
aad
xor
jno
std
leave
loopne
test
test
mov
icebp
sbb
and
ins
mov
pop
push
xor
fldenv
call
loop
adc
push
inc
xchg
dec
shl
(bad)
movs
js
sub
jp
sbb
add
cmc
xchg
das
cwde
jno
adc
sbb
bound
lea
imul
jo
inc
mov
test
nop
inc
sub
dec
test
xchg
cmc
cwde
ror
adc
aad
jp
xor
and
cmp
lock
mov
daa
jecxz
sub
ficom
stos
push
outs
push
movs
xor
mov
por
adc
mov
xor
retf
mov
mul
pop
xlat
std
aad
data16
popf
push
daa
lock
pop
mov
cmp
lahf
jecxz
dec
int
or
mov
mov
ja
pop
pop
aas
xor
mov
cdq
sub
inc
stc
add
mov
mov
jge
xor
or
int
pop
cmp
movs
mov
jge
(bad)
fwait
cmp
mov
shl
xrelease
mov
mov
inc
xchg
mov
fimul
xchg
jbe
mov
pop
sbb
adc
or
inc
out
jae
or
push
outs
std
stc
or
pop
arpl
sub
sbb
cmp
cmp
scas
adc
popf
cwde
push
int3
cwde
aas
fnstsw
pop
rol
aaa
xchg
aaa
xchg
and
xor
rcr
pop
les
leave
jmp
shl
add
mov
cmp
push
dec
out
ins
sub
test
addr16
xchg
shl
xor
icebp
pop
in
call
and
and
inc
xor
jmp
call
into
pop
xor
loope
adc
mov
inc
xor
hlt
adc
ficomp
outs
ret
movs
xlat
ins
cmp
add
test
pop
fsub
cmp
fs
outs
xchg
add
cmp
(bad)
stc
out
cmp
dec
mov
inc
ror
xchg
inc
adc
xor
mov
sbb
fldenv
sbb
pop
dec
inc
adc
je
int
dec
bound
imul
push
xor
mov
sbb
mov
data16
mov
call
cmps
push
mov
dec
loop
or
dec
out
mov
mov
sub
dec
sbb
and
rol
jmp
leave
icebp
cmp
sbb
and
neg
and
sub
stos
or
addr16
pop
xor
inc
adc
bound
sbb
inc
sub
and
xor
adc
fisttp
movs
add
pop
xor
xor
and
add
jnp
cwde
les
ret
pop
and
(bad)
pop
loopne
mov
xor
movs
es
mov
cwde
jecxz
mov
mov
xor
fistp
mov
xor
pop
push
mov
in
xor
daa
leave
out
lock
jmp
mov
stc
lea
jmp
add
dec
xchg
jp
mov
ja
inc
imul
dec
(bad)
jne
xor
push
arpl
fwait
add
push
xor
dec
pop
or
cmp
int
pop
int3
out
xchg
cmps
loop
jp
jg
xchg
out
sub
add
adc
inc
pop
out
jne
mov
ins
mov
or
xor
cmp
leave
push
shl
int3
push
retf
inc
leave
loopne
inc
inc
shl
pop
jmp
xchg
jnp
ficomp
inc
inc
iret
pushf
inc
bound
inc
xor
mul
rdpmc
sub
leave
fst
inc
sub
mov
and
fimul
add
hlt
adc
cmp
es
std
addr16
frstor
sbb
cmp
js
dec
rol
or
sar
rcr
or
fimul
or
int
push
pop
outs
xchg
aas
add
jo
xchg
popf
das
out
shl
aaa
lods
ror
cmp
xchg
xchg
cmp
das
pop
add
ror
aaa
jmp
xchg
cmp
push
jge
mov
hlt
imul
je
mov
sub
call
dec
dec
cmp
mov
cmp
xor
jne
arpl
es
icebp
ja
js
fwait
push
aad
(bad)
rol
xchg
lds
stos
ja
push
add
icebp
dec
xor
frstor
inc
jne
cmc
mov
add
and
or
faddp
out
(bad)
retfw
add
xor
and
mov
add
xchg
push
int
xchg
punpcklbw
arpl
cmp
int3
add
icebp
and
cmp
and
ins
adc
data16
push
cmc
inc
aad
in
adc
xor
mov
pop
fwait
or
xor
jecxz
cwde
and
shl
add
ror
xor
xchg
in
xor
in
jne
adc
repz
cwde
rcr
(bad)
int
push
cmc
pop
add
dec
inc
jge
sti
sub
xor
mov
pop
inc
(bad)
dec
loop
ret
aas
sub
cmp
fisub
inc
inc
and
xchg
outs
adc
mov
es
ins
ins
push
xor
popf
lock
std
cmc
inc
jnp
xchg
cmp
add
sbb
cmp
xchg
sub
xor
fwait
ins
sbb
xor
nop
in
adc
mov
xchg
aad
das
mov
ret
sbb
xor
xchg
mov
fsubr
fwait
shl
add
add
sub
and
cmp
pop
bswap
dec
jp
cwde
xor
popf
js
pop
xchg
push
or
pop
mov
int
dec
ret
lds
fisubr
cwde
movs
dec
dec
xor
std
sbb
cmp
test
adc
and
test
mov
mov
xchg
or
cmp
rcr
adc
mov
sub
jnp
jp
or
pop
pop
xchg
dec
inc
dec
mov
inc
xlat
scas
mov
lea
stc
cmp
sbb
dec
gs
jecxz
sub
out
add
and
pop
push
xor
cdq
pop
seto
dec
or
jmp
xor
dec
and
sub
xor
adc
cmp
fld
scas
jae
movs
loopne
xor
sub
retf
mov
popf
sbb
imul
loopne
push
neg
addr16
es
outs
add
cmp
and
test
cmps
pop
sbb
xlat
xchg
mov
pop
dec
sti
icebp
daa
mov
imul
and
xor
fnstenv
imul
sbb
cmp
aaa
jnp
shl
movs
mov
lea
int3
mov
mov
cwde
jno
cmp
lods
jns
ret
(bad)
and
cmp
push
lods
push
dec
ret
stos
add
mov
adc
jmp
xchg
mov
es
add
mov
pop
(bad)
fidivr
les
sub
cwde
or
sub
rol
cmp
mov
and
xor
push
imul
push
in
ror
fisubr
in
sbb
xchg
inc
xor
mov
sar
mov
int3
and
inc
push
lods
fidivr
add
xor
jge
add
xchg
pop
fst
adc
popa
icebp
mov
sbb
int3
or
xor
push
adc
ins
dec
cmc
movs
pusha
shl
leave
inc
sub
mov
fldcw
pushf
xchg
cwde
arpl
popa
or
(bad)
sar
xchg
jne
cmp
inc
test
xchg
xchg
inc
jge
shl
iret
je
shl
mov
call
test
mov
leave
dec
lods
xor
lds
jp
mov
and
mov
and
lock
jmp
pop
(bad)
arpl
pop
shr
data16
sti
cmp
mov
cwde
jns
scas
inc
xlat
xor
xlat
dec
call
xchg
mov
xchg
fld
push
daa
push
cmc
call
out
hlt
pop
adc
loopne
and
out
mov
jno
mov
and
test
stos
aaa
sbb
imul
lahf
mov
outs
inc
add
dec
or
inc
aas
xor
out
lods
rcl
xor
popf
loopne
mov
pop
out
rcr
push
sbb
push
xchg
dec
jecxz
int3
mov
add
test
add
xor
cwde
les
dec
ins
mov
pop
dec
js
fbstp
aas
fcmovnbe
xchg
lods
fsubrp
jmp
fisubr
mov
push
iret
add
adc
in
inc
pop
mov
xor
les
add
mov
mov
stos
dec
addr16
outs
mov
adc
popf
loop
add
jmp
cwde
xor
leave
mov
movs
bound
dec
push
jae
or
cdq
fwait
mov
ret
test
arpl
mov
jp
das
enter
xchg
into
fiadd
imul
add
push
pop
in
xchg
sub
jne
add
aaa
mov
sub
and
inc
lds
sti
mov
mov
adc
jmp
iret
xor
mov
pop
les
xor
ins
pop
(bad)
fprem1
push
daa
dec
cmp
(bad)
adc
xor
call
inc
dec
push
inc
or
cmp
stc
pop
icebp
and
adc
and
mov
mov
dec
jnp
pusha
inc
jns
adc
cwde
jno
shl
mov
fldenv
jecxz
outs
push
test
test
lds
leave
sti
xchg
ret
add
and
pop
push
push
(bad)
aaa
jmp
dec
sub
ret
in
ret
and
pop
inc
nop
jg
lods
cwde
inc
mov
jno
aas
dec
pusha
push
xchg
int
(bad)
push
in
push
add
inc
imul
xchg
xor
mov
sub
(bad)
int
aas
mov
adc
int3
cmp
(bad)
pop
(bad)
(bad)
mov
fincstp
push
xchg
xor
mov
ja
xor
xor
int3
bound
dec
stc
(bad)
jnp
es
mov
inc
outs
push
addr16
cwde
xor
push
scas
lds
and
jp
pop
xchg
mov
xchg
ror
fidiv
inc
jmp
call
ret
xor
dec
xor
ins
mul
out
int
sbb
sti
adc
and
jne
inc
stos
xlat
mov
and
repz
les
dec
xchg
pop
mov
call
call
xchg
js
xchg
pop
aaa
push
or
stos
pusha
mul
xor
or
pop
add
or
xor
es
mov
pop
and
xor
mov
jne
hlt
test
lahf
xchg
jne
jmp
leave
pop
mov
mov
rcl
jmp
add
pop
cmp
ror
adc
sbb
or
sub
xor
int
js
loop
or
sbb
fstp
add
pop
dec
movs
fwait
stos
int3
call
ss
xor
fld
scas
push
cmp
mov
pop
xor
add
(bad)
popa
push
out
das
inc
mov
jg
ja
push
xor
add
popa
shr
inc
add
xor
xchg
xor
pop
push
xor
xchg
mov
dec
sub
test
push
xchg
sbb
jns
stc
adc
pop
scas
cmp
xor
call
repnz
(bad)
jp
aaa
jnp
xor
jge
xlat
cmp
out
setp
test
div
sub
dec
iret
daa
lds
push
aad
fist
pop
out
das
(bad)
push
adc
sub
mov
test
jmp
xor
cdq
jno
mov
and
push
cdq
xor
fnsave
add
pop
icebp
fstp
out
scas
(bad)
movs
test
mov
jg
scas
jo
not
inc
or
sbb
and
popf
inc
idiv
sbb
dec
lock
ror
call
adc
add
and
ins
or
sbb
push
lods
lock
add
dec
imul
cdq
xor
out
call
daa
popw
bound
mov
lahf
outs
daa
mov
mov
add
adc
rcr
int
test
sub
movs
and
fidivr
xchg
pop
inc
jge
push
add
fwait
icebp
push
jg
add
loope
int
dec
call
mov
dec
sbb
jg
push
pop
rol
arpl
lds
push
lds
int
es
cdq
xchg
jecxz
data16
sub
mov
xor
sbb
cmps
sbb
jmp
es
ror
xor
imul
or
adc
jno
push
mov
mov
inc
mov
mov
out
xor
sbb
icebp
mov
xor
das
(bad)
ss
call
int
add
cmc
cdq
aaa
or
cmp
popf
xor
mov
xor
jnp
xchg
out
sub
jo
adc
aaa
popa
ret
adc
dec
or
shl
inc
adc
call
or
js
sti
mov
repnz
pusha
adc
das
aaa
xor
sar
in
xchg
inc
or
xchg
sub
outs
push
xchg
imul
fnstenv
dec
shl
xor
ins
sbb
mov
cmp
pop
repz
pop
daa
add
jp
inc
dec
ins
jg
mov
das
sbb
pushf
xchg
inc
out
jmp
out
cmp
rcl
loop
dec
cmp
sub
icebp
jp
adc
loope
mov
retf
dec
call
xlat
fwait
adc
dec
js
(bad)
stos
add
jg
inc
adc
sbb
add
rcr
mov
and
inc
aas
jno
ss
add
es
cmp
xchg
mov
in
sbb
push
inc
add
inc
inc
mov
or
leave
pop
mov
imul
rcl
pop
mov
and
inc
ss
add
dec
call
ss
or
inc
pusha
inc
int3
cwde
iret
adc
sbb
(bad)
lods
popa
inc
int3
xchg
sub
es
loop
push
jmp
stos
pop
(bad)
lods
call
icebp
sbb
and
adc
leave
dec
sbb
sbb
pop
inc
jno
les
add
pushfw
hlt
fidiv
dec
inc
ja
xor
icebp
loope
das
jecxz
or
cmp
mov
or
pop
bound
imul
imul
push
sub
sub
outs
ss
loop
push
daa
inc
int3
sbb
xor
add
adc
push
dec
fwait
cmc
pop
adc
outs
adc
cwde
jno
lods
xchg
rol
xchg
call
and
xor
mov
out
xor
retf
xchg
lods
pop
xchg
cwde
xlat
xchg
cmps
pop
jnp
movs
xlat
sbb
xchg
dec
sar
cmp
mov
xlat
jmp
popf
and
mov
into
aaa
fwait
adc
cmp
arpl
lds
and
xlat
fcmovne
daa
inc
das
bound
xor
outs
ret
xlat
aaa
retf
int
rol
cmp
fst
test
cmp
xor
pop
lahf
jns
push
mov
icebp
in
inc
cmps
sbb
xchg
cmp
and
xor
mov
adc
fimul
pop
bound
or
jae
cwde
aam
push
xor
xchg
pop
or
das
arpl
call
outs
ss
push
lahf
xor
mov
lahf
or
mov
xor
mov
outs
xchg
cmp
xor
inc
cmp
fwait
int
daa
xor
test
jae
icebp
cwde
icebp
dec
cmp
mov
sbb
mov
xchg
push
jne
adc
arpl
jne
mov
add
mov
and
adc
(bad)
pop
push
aas
dec
sbb
or
push
adc
in
out
inc
dec
push
mov
xor
mov
xor
cwde
je
inc
outs
(bad)
aaa
imul
es
add
jp
xchg
addr16
push
sub
(bad)
cmc
popa
imul
cmp
jo
rol
sub
leave
call
stos
sbb
or
jnp
loop
mov
pusha
(bad)
test
cmps
inc
daa
dec
sbb
sbb
inc
loopne
and
lods
stc
test
test
xor
(bad)
xor
sub
mov
in
xchg
add
ins
(bad)
mov
adc
xor
popa
add
pop
sbb
mov
movs
xor
or
xchg
ss
jmp
retf
inc
xor
dec
mov
in
fbld
xor
aaa
lods
push
dec
lahf
cmps
inc
cdq
jp
fwait
mov
inc
or
mov
or
push
int3
sbb
or
in
mov
sbb
add
bound
or
das
rcr
cdq
pop
out
or
jnp
shl
mov
cmps
cmp
xchg
inc
xchg
movs
ret
xchg
mov
dec
inc
leave
and
mov
xchg
ret
test
xor
leave
call
dec
add
add
stos
dec
das
popf
pop
in
jge
pop
fwait
push
adc
movs
jmp
data16
pmaxub
mov
and
xchg
mov
pop
add
fwait
sar
call
int
push
jmp
dec
ja
sti
xchg
xor
sbb
dec
cmc
pop
hlt
mov
movs
adc
xchg
push
aaa
or
jno
outs
adc
outs
dec
dec
(bad)
jnp
xor
mov
sub
or
or
aaa
dec
inc
xor
ror
fldenv
inc
outs
push
cdq
or
sbb
dec
adc
out
cmp
and
and
push
pusha
dec
aad
imul
stos
cwde
add
imul
inc
and
imul
cmp
data16
es
pop
retf
pushf
mov
xlat
push
xor
sbb
lods
adc
and
pop
arpl
jnp
lahf
and
fwait
je
or
mov
mov
jns
jne
xor
icebp
jnp
and
ret
xchg
int3
xchg
add
jne
dec
push
add
adc
out
pop
push
xor
dec
or
dec
xor
xor
dec
or
cmp
mov
aaa
lods
not
or
ins
inc
scas
xor
sub
sbb
fistp
popa
ror
sbb
fsubp
or
mov
xor
dec
neg
sysexit
rcr
adc
sub
cmp
sbb
jno
mov
js
mov
bound
test
pop
or
xor
ret
adc
add
mov
mov
les
dec
icebp
jno
mov
push
scas
cwde
sbb
ja
retf
or
adc
mov
test
xor
push
xchg
pop
cmp
inc
inc
mov
retf
pop
addr16
mov
aaa
les
or
pop
sbb
adc
or
pop
out
pop
(bad)
jmp
push
test
call
test
shl
push
int3
es
lahf
ja
xor
lds
sar
dec
push
test
adc
aaa
std
sbb
cmp
lds
jp
jae
inc
lock
jecxz
stos
dec
mov
sub
mov
(bad)
or
pop
adc
call
push
xchg
mov
xor
push
adc
in
xchg
mov
inc
dec
jno
hlt
fiadd
stos
inc
mov
cmp
dec
sbb
lahf
sub
jp
inc
cmp
or
pop
cmp
addr16
jmp
jp
fidiv
inc
arpl
jnp
push
mov
xor
jmp
pop
jno
add
push
mov
and
das
shl
xor
and
xor
popa
aam
push
stc
dec
cwde
shl
stos
loope
pop
daa
shl
push
mov
fidiv
(bad)
movs
stos
dec
add
cwde
ror
mov
add
movs
mov
fcomp
retf
es
xor
xor
shl
add
addr16
mov
lods
inc
add
fisub
pop
adc
stos
inc
mov
(bad)
shl
push
stos
adc
lds
not
js
aad
sbb
mov
loopne
mov
pop
push
xor
push
ja
fild
pop
inc
test
adc
xlat
ret
ror
mov
xchg
add
inc
popf
push
xor
mov
ins
daa
loopne
sbb
pop
mov
js
or
and
xor
es
call
adc
mov
movs
fisub
test
out
pop
inc
xor
outs
push
cmps
js
icebp
ja
iret
sub
or
fist
pop
arpl
fldcw
inc
mov
inc
adc
mov
leave
xor
fwait
jne
xor
aaa
and
(bad)
int
outs
pop
shl
call
cmp
mov
inc
xor
aad
lods
outs
es
hlt
cwde
retf
dec
fwait
xor
lds
push
xor
mov
and
(bad)
shr
(bad)
les
test
int3
add
mov
sti
xchg
xor
js
or
mov
push
popa
lods
inc
jmp
or
test
stc
or
test
(bad)
mov
iret
popf
lds
sbb
mov
inc
mov
fst
jnp
dec
jecxz
pop
xor
xor
and
add
jnp
sti
icebp
out
js
adc
es
sub
mov
lahf
shl
in
ja
movs
jp
aas
scas
fidiv
inc
xor
add
xor
mov
div
inc
inc
xchg
mov
pop
data16
out
arpl
ret
jae
sbb
mov
mov
rcr
pushf
outs
cmps
xor
xchg
aad
shl
imul
and
fldenv
loope
retf
in
xchg
pop
call
cmp
sub
std
add
retf
(bad)
adc
movs
inc
lea
xchg
dec
and
icebp
lods
mov
adc
mov
in
data16
inc
cmp
jnp
repz
add
lds
(bad)
push
pushf
cmp
pop
pop
or
or
add
outs
or
test
in
test
add
sbb
icebp
rcr
lahf
adc
(bad)
sbb
or
jno
add
jp
out
pop
jge
push
adc
and
mov
mov
add
pop
popf
fmulp
adc
js
dec
daa
push
pop
int3
pop
jmp
xor
sbb
int
or
add
and
imul
xor
mov
and
and
sbb
dec
mov
or
mov
xor
inc
int
sub
cmp
jns
cmp
pop
adc
fwait
jno
push
rcr
sbb
mov
es
sbb
int
push
xchg
xchg
or
mov
xor
outs
push
xor
cmp
leave
xchg
mov
pushf
xor
gs
xor
sar
sbb
sbb
push
pop
push
xor
push
or
push
mov
inc
sub
xor
pushf
out
aam
movs
jno
cmp
(bad)
pop
adc
test
xor
test
push
and
shr
mov
jecxz
mov
sbb
mov
mov
adc
jnp
cmp
repz
lods
not
aaa
or
aaa
dec
xor
fsubp
mov
pop
xor
fwait
das
fld
int
push
das
xchg
mov
jecxz
push
xor
outs
stos
js
sub
dec
xor
call
sbb
sub
test
mov
and
rcr
xor
shl
test
(bad)
sti
fstp
mov
int3
xchg
and
push
or
pop
inc
mov
inc
adc
(bad)
xor
push
icebp
fisubr
mov
and
adc
hlt
cwde
cmc
mov
sbb
xor
cmc
sub
daa
pop
or
hlt
mul
xor
movs
cdq
xor
pop
pusha
push
dec
mov
or
pop
pop
xlat
mov
jnp
mov
mov
js
mov
cmp
jae
jnp
mov
add
sub
jge
test
or
cmps
sbb
dec
pop
inc
xor
sub
cmp
popa
adc
inc
cmps
xor
push
xor
or
mov
sbb
cdq
mov
and
daa
ss
rcr
adc
and
jecxz
iret
cmc
inc
mov
push
cmp
add
xchg
call
dec
push
mov
out
and
push
inc
mov
dec
xor
cmp
push
or
jno
sbb
arpl
add
or
and
mov
hlt
and
add
popf
inc
add
sbb
arpl
daa
cwde
ror
jae
xor
add
xchg
push
cmp
add
cwde
mov
sub
add
retf
int
dec
adc
inc
imul
imul
inc
fwait
jmp
add
pop
jne
div
xor
jp
fwait
dec
int3
cwde
adc
cmp
repnz
xor
fimul
mov
add
nop
or
mov
mov
and
int3
call
adc
cmp
fs
stc
xor
cmp
loope
popf
push
int3
sbb
(bad)
pop
xor
iret
jns
int
int3
pop
xor
imul
outs
dec
sub
adc
cmp
icebp
push
sti
inc
imul
xor
push
adc
or
and
imul
xor
mov
and
adc
add
xchg
dec
add
imul
fwait
ja
sbb
enter
mov
dec
inc
or
cmps
sbb
mov
xchg
mov
jmp
call
mov
jne
push
add
jns
inc
scas
xchg
or
(bad)
sub
dec
push
sub
call
in
push
mov
lock
and
rol
es
stos
xchg
jge
hlt
es
dec
call
adc
sub
push
push
lds
jmp
int
fwait
cmp
and
gs
push
test
dec
sub
and
jge
loopne
sub
leave
mov
dec
xor
cwde
or
push
xchg
xchg
add
loope
(bad)
mov
arpl
iret
adc
aaa
test
mov
leave
sub
dec
push
aad
aad
mov
fwait
cmc
sub
jnp
mov
aas
jno
inc
xor
jae
(bad)
int
inc
int3
iret
fild
es
out
jg
sub
add
mov
dec
push
jecxz
icebp
xor
xchg
call
lock
pop
and
das
lds
push
outs
ret
sub
inc
je
popf
inc
jae
bound
sub
sbb
xchg
movs
js
push
cmp
int3
mov
jmp
fild
inc
jecxz
call
adc
das
aad
and
fwait
ror
dec
jmp
sub
jge
shl
bound
or
call
stos
int
xor
sbb
pop
call
xlat
fwait
xor
leave
inc
fisttp
lods
inc
sbb
sbb
lahf
pop
jg
adc
mov
loope
push
stos
adc
pop
mov
dec
outs
sbb
sub
call
lods
cmps
imul
sbb
pop
add
out
add
xchg
outs
push
or
xchg
adc
es
retf
cpuid
sbb
mov
retf
(bad)
pop
mov
not
fwait
add
or
aam
lds
dec
mov
jns
popa
rol
mov
pop
jbe
popa
inc
add
popa
aaa
pop
mov
jnp
ret
test
std
mov
aad
xlat
repz
movs
adc
mov
inc
xchg
jo
aas
jno
sbb
sub
imul
scas
pusha
jne
leave
xchg
push
cmc
xchg
adc
push
int
xor
nop
xchg
sub
aaa
imul
push
and
or
cmp
mov
sub
jp
fstp
fwait
(bad)
jmp
jno
inc
xchg
push
and
pop
xor
push
mov
stos
mov
adc
jne
fidivr
mov
ficom
cmp
add
adc
add
lea
out
inc
jmp
xor
mov
popa
xor
xor
scas
lea
(bad)
repz
jae
adc
and
sbb
add
sbb
mov
jmp
sub
test
hlt
fimul
pop
das
xor
mov
imul
dec
mov
loope
jecxz
mov
out
int3
mov
sbb
add
rol
push
(bad)
outs
ss
jg
arpl
rcr
add
loop
cmps
dec
xor
xchg
bound
xor
int3
rcl
(bad)
xor
daa
ror
pop
jge
fistp
or
loope
xlat
je
dec
xor
icebp
jo
rcr
push
aam
xchg
(bad)
jae
jo
jne
adc
and
pop
xchg
imul
ss
xor
adc
test
and
push
sub
add
mov
sbb
es
mov
icebp
xchg
es
icebp
sbb
xrelease
inc
(bad)
popa
xchg
int
test
xchg
add
push
pop
adc
sub
mov
push
ror
in
push
nop/reserved
fwait
mov
xor
jp
out
pop
pop
arpl
lock
push
or
lods
call
outs
mov
fstp
outs
add
xchg
aaa
mov
mov
gs
outs
push
xchg
and
jmp
aad
aas
repz
sub
add
sub
mov
inc
int3
dec
push
popf
in
xchg
cmps
and
or
pop
xor
scas
pop
mov
jnp
movs
jge
or
fild
inc
dec
xchg
call
ret
mov
outs
pop
add
dec
icebp
lds
xor
adc
call
int3
jp
mov
and
cmp
outs
push
pop
lods
push
leave
loop
xor
jae
dec
and
imul
test
xchg
cmc
cmp
lds
imul
ret
adc
cmp
popa
push
mov
push
inc
adc
adc
out
lea
xor
xor
retf
jp
sbb
cmp
sub
push
cmc
xor
or
in
xor
add
int
xchg
lea
jmp
dec
rcr
mov
loope
aas
push
das
es
int
or
aad
dec
xor
push
and
push
int3
ja
pop
fisub
and
xchg
adc
(bad)
jg
add
mov
fisttp
mov
aaa
mov
adc
pop
add
lock
xor
xchg
cmp
loope
sbb
hlt
mov
cwde
shl
inc
retf
or
(bad)
or
push
cmc
stc
xor
inc
cmc
mov
pop
push
mov
xchg
stc
out
aaa
add
dec
cwde
jno
fwait
(bad)
test
aaa
popf
data16
pop
pushf
push
xor
push
leave
pop
scas
icebp
xchg
lods
add
lds
and
aaa
popa
pop
adc
dec
jmp
sub
and
pop
int
call
shl
das
stc
cmps
push
int3
mov
xchg
(bad)
outs
or
repz
add
xor
add
fisubr
xchg
es
and
lods
or
mov
cmp
and
test
lods
jns
outs
(bad)
in
ret
mov
int
push
adc
call
int
arpl
call
inc
test
adc
das
loope
popa
cmp
inc
xor
mov
mov
cmp
shl
pop
pushf
pop
adc
ret
lods
add
dec
push
(bad)
aad
add
cdq
pop
and
sbb
addr16
pop
aaa
cmp
mov
aaa
out
int
outs
adc
in
and
rcr
xor
xor
ret
and
inc
outs
pop
add
push
add
call
fldcw
mov
arpl
fwait
push
lods
(bad)
and
jnp
jp
xchg
mov
xchg
xor
retf
or
frstor
jge
sbb
shr
or
cmp
ret
test
int3
repz
jmp
rcl
jnp
popa
(bad)
cmp
shr
cwde
or
pop
or
loope
in
int
icebp
ret
xor
outs
dec
jo
jns
leave
inc
int3
and
jecxz
popa
enter
mov
pop
inc
movs
xchg
mov
adc
inc
out
das
fld
or
outs
push
stos
lds
adc
pop
mov
daa
pop
xor
sbb
aas
arpl
add
or
scas
or
adc
push
xchg
mov
xor
xchg
cmp
or
push
adc
fidiv
data16
push
mov
xchg
dec
jno
fwait
push
jmp
inc
inc
call
cmp
int
fbstp
call
stos
dec
add
add
xor
cdq
test
shl
xor
mov
repz
and
xchg
adc
jnp
push
int3
and
pop
pop
sub
aas
stc
les
popa
aad
aad
cmp
dec
dec
push
mov
jnp
and
cmp
cmc
int
push
vpsllq
push
adc
test
addr16
inc
mov
sub
rcr
xchg
mov
xor
test
cmp
pop
rcl
(bad)
fs
pop
push
dec
inc
out
div
lds
fwait
add
sbb
xchg
ror
xor
mov
cwde
xchg
scas
mov
rcr
jp
mov
push
xchg
mov
push
fist
cmp
push
add
js
and
adc
cmps
pop
fwait
aad
mov
jno
and
cmp
sbb
push
inc
xor
sub
inc
pusha
pop
std
or
push
add
aaa
test
(bad)
cmp
retf
stos
or
xchg
(bad)
arpl
mov
adc
mov
adc
cmp
sti
xchg
xor
mov
inc
cmc
scas
pop
push
xor
inc
xchg
cmp
sbb
jge
add
es
or
shl
(bad)
and
out
mov
js
dec
cmp
push
leave
adc
push
popf
xchg
dec
adc
call
mov
pop
std
imul
and
lods
fisttp
inc
dec
dec
lahf
adc
cmp
add
movs
(bad)
iret
lock
xchg
(bad)
pop
dec
jnp
fstp
xlat
cmp
fwait
mov
popf
sub
mov
lds
sub
pop
dec
pop
lea
lods
stos
pop
in
xor
xor
pushf
push
adc
xchg
or
mov
es
push
gs
out
(bad)
(bad)
lods
jmp
sbb
sub
or
ss
int3
cmp
fwait
jnp
xor
jne
xchg
inc
fwait
xor
mov
pop
add
pusha
ret
movs
jecxz
ja
or
dec
pop
adc
js
push
xchg
pusha
test
jnp
sub
rcr
dec
ret
adc
and
xor
je
mov
ret
lea
and
dec
movs
pop
rol
js
sbb
inc
(bad)
mov
dec
push
cmp
stos
jge
jnp
or
dec
pop
adc
sub
inc
aad
xchg
sbb
adc
bound
push
fucomp
xchg
hlt
cwde
add
mov
inc
xor
pop
adc
mov
add
jmp
outs
test
or
call
sbb
xchg
lods
pop
push
xlat
adc
imul
sub
daa
mov
(bad)
aaa
or
stos
xor
nop
jmp
aad
ss
retf
retf
mov
lea
inc
xchg
data16
outs
adc
pop
fld
adc
or
and
in
call
cwde
xor
inc
cmp
sgdtd
inc
xchg
js
ret
mov
jge
pop
iret
loope
pop
or
sti
dec
mov
sub
sbb
sbb
inc
xor
loop
(bad)
jg
es
push
imul
daa
mov
in
jge
xchg
fsubrp
sub
pop
js
push
aad
pop
imul
mov
out
jne
fisub
(bad)
lds
inc
sbb
data16
sbb
pop
int
push
jns
jmp
mov
mov
in
hlt
xchg
movs
ja
cmp
jmp
cwde
xor
push
das
xchg
es
pusha
dec
arpl
hlt
data16
cmp
leave
call
cwde
lds
dec
cmc
sub
data16
lods
mov
push
outs
inc
gs
add
icebp
sub
mov
ror
add
popa
xchg
adc
stos
cmp
cmp
xor
and
leave
push
sub
xor
cwde
inc
retf
mov
mov
add
mov
gs
dec
mov
xchg
into
xlat
scas
xor
dec
sar
or
inc
xor
mov
call
xchg
ins
xchg
(bad)
out
jmp
xor
mov
pop
icebp
imul
test
xor
rol
outs
sbb
add
popa
sbb
add
dec
cwde
push
aad
xor
cmp
adc
dec
cmp
aad
pop
xor
data16
xlat
fisub
sub
xchg
(bad)
aad
sub
repz
mov
shr
add
popa
sbb
dec
loopne
mov
adc
jp
mov
mov
js
push
jae
and
daa
inc
dec
jne
xor
dec
jno
sbb
es
es
or
ret
lods
mov
loopne
sbb
fwait
xor
data16
jne
dec
int
mov
add
and
xor
push
and
lods
loop
addr16
xchg
int
xchg
mov
jno
div
xor
xchg
es
aas
aad
push
dec
cmp
int3
and
xor
lea
retf
mov
in
or
call
ret
jmp
(bad)
rol
jae
inc
adc
call
jne
sbb
lods
jmp
xchg
ja
dec
pushf
push
and
cmp
pop
pop
dec
jbe
sub
div
stos
loop
add
retf
mov
mov
shl
cwde
rcr
mov
sbb
stos
in
xchg
(bad)
xlat
test
popa
ret
and
push
mov
xchg
push
sub
or
dec
pop
or
cwde
adc
pop
xor
jecxz
xor
cmp
push
arpl
outs
and
sar
push
leave
pop
ret
inc
or
sbb
dec
out
mov
inc
icebp
aaa
and
fisub
add
sbb
xchg
in
mov
jnp
pop
es
mov
add
(bad)
aam
call
ror
cmp
inc
das
js
outs
sti
and
inc
lock
arpl
imul
or
pop
jecxz
xchg
push
mov
int3
add
cmp
fwait
mov
mov
mov
xchg
pop
push
xor
mov
dec
and
add
pop
mov
jmp
mov
gs
sbb
arpl
inc
lahf
mov
mov
xchg
pop
or
and
xchg
add
xor
mov
push
dec
aad
xor
ins
mov
xor
xchg
push
inc
push
sub
xor
das
xchg
aas
sub
mov
dec
pop
pop
rol
cmps
or
cmps
leave
and
mov
popa
hlt
bound
xchg
sbb
dec
ins
enter
pop
add
push
xchg
sbb
xor
dec
xor
or
jne
pop
cmp
lods
gs
mov
fldenv
sub
push
adc
xor
ja
sbb
mov
ss
pop
daa
imul
popa
lds
xor
test
lea
and
mov
jno
pop
shl
shr
fisttp
mov
gs
mov
pop
(bad)
fdivp
or
xor
push
xor
or
xchg
dec
nop
xchg
imul
xor
pop
push
shl
xor
(bad)
aas
dec
mov
fwait
out
adc
popf
test
int3
es
scas
sub
mov
cmc
dec
mov
jno
bndstx
aad
and
sbb
cmp
shl
movs
cdq
xor
cmp
mov
dec
call
js
inc
movs
and
das
or
sbb
adc
lods
sbb
std
xor
int
sbb
inc
int
lods
ret
push
cmp
xor
adc
dec
in
popa
inc
cmp
cmp
sti
int
ficomp
test
bound
hlt
es
lods
mov
scas
sbb
call
test
mov
js
mov
xor
addr16
mov
push
mov
in
mov
in
idiv
scas
test
popf
xor
mov
(bad)
jecxz
or
dec
inc
and
dec
sbb
fbstp
sbb
sub
cmp
pop
inc
adc
adc
pop
sbb
pop
cmc
dec
add
(bad)
push
xor
es
cmc
rol
and
sbb
mov
rol
or
aam
stos
fiadd
cwde
xor
xor
fwait
and
adc
loope
fisubr
or
jnp
std
movs
jnp
jp
adc
lahf
xor
add
aaa
imul
rol
pop
popf
mov
mov
push
xor
xor
and
int
ret
inc
std
arpl
pop
push
xchg
rcl
aad
add
retf
pop
movs
dec
mul
inc
lahf
adc
aas
or
push
movs
xchg
stos
dec
lock
cmp
and
mov
inc
mov
int
out
mov
xlat
push
scas
mov
iret
ja
xor
cmp
int3
pusha
or
mov
add
push
jno
mov
int3
cmp
cmc
fiadd
icebp
pop
scas
lods
fs
fimul
movs
(bad)
in
icebp
push
lds
sbb
and
std
push
fsub
fild
fisub
sbb
dec
mov
mov
fwait
aam
cmp
call
neg
mov
call
push
xor
daa
out
mov
xchg
inc
data16
inc
or
cmp
addr16
dec
sub
adc
inc
int3
test
mov
add
adc
sub
inc
sbb
and
add
push
pop
fwait
xor
gs
xchg
adc
dec
add
fcomp
sbb
out
jmp
inc
xor
lods
push
mov
jne
push
inc
fimul
xor
call
call
push
mov
or
add
jno
xor
dec
or
loop
outs
push
mov
sub
xor
xlat
movs
sbb
adc
or
fimul
inc
icebp
sub
das
dec
push
fistp
add
dec
pop
mov
es
pop
mov
jae
pop
dec
xor
push
jnp
inc
add
push
adc
cwde
adc
stos
and
stc
sub
or
loope
sbb
add
push
es
inc
cmc
xor
or
push
icebp
dec
cdq
imul
inc
ins
addr16
shl
test
shl
xor
jp
jmp
or
add
push
jecxz
pop
and
sub
push
add
push
int3
cmp
mov
inc
or
jmp
test
int
push
popf
int
mov
xor
popa
imul
mov
pop
mov
out
jp
es
jne
retf
and
xor
push
mov
inc
push
mov
daa
out
add
sbb
sar
iret
sbb
cmp
jmp
loope
adc
xchg
xor
loop
mov
les
push
lock
push
mov
cwde
lock
outs
lods
and
adc
mov
int
dec
or
jmp
cmc
fimul
or
xor
dec
inc
in
icebp
stos
xor
or
push
hlt
xlat
sbb
fidiv
stos
ret
setns
jmp
fiadd
(bad)
ja
out
es
inc
pop
sub
(bad)
jns
gs
or
cwde
je
cdq
mov
sub
xchg
ret
cmc
add
in
aas
push
xor
retf
rdtsc
inc
in
test
mov
jge
les
and
popa
push
inc
inc
xlat
ss
aaa
mov
pop
xchg
jp
push
push
or
inc
dec
add
inc
xor
dec
in
lahf
fwait
mov
xor
pop
aad
leave
sub
loop
xor
adc
xor
test
push
or
outs
jns
mov
adc
aad
inc
leave
cmp
outs
test
cwde
xor
sbb
jge
add
test
cwde
rcr
or
div
mov
test
pop
inc
cmp
inc
dec
pop
lahf
add
push
ror
push
dec
cwde
rol
jnp
int
sbb
stos
loope
fisub
jne
cmp
fld
inc
ret
in
dec
cmp
xor
cwde
lds
mov
xor
xchg
lock
test
fwait
cmp
push
mov
add
popa
mov
xlat
pusha
push
mov
dec
jns
xor
jns
sub
push
mov
dec
(bad)
inc
in
dec
xor
outs
xor
xchg
es
xchg
or
arpl
shl
rol
es
test
daa
das
jnp
dec
(bad)
xor
inc
ror
or
and
push
mov
pop
cmp
sbb
(bad)
lods
fwait
push
adc
add
xchg
sar
or
stos
not
mov
test
mov
mov
xor
xlat
popf
sbb
inc
xor
xchg
and
hlt
jns
sbb
mov
add
es
fs
in
and
or
xchg
inc
mov
push
xor
cwde
push
push
test
pusha
jns
vandnps
imul
inc
mov
sbb
and
or
xor
add
fcmovnb
test
jne
lahf
mov
lds
jmp
pop
mov
ja
aaa
mov
inc
leave
lea
or
cmp
sub
inc
ins
es
icebp
pop
adc
daa
sbb
jmp
add
inc
lahf
es
add
sbb
mov
or
xchg
add
cwde
adc
test
popa
jmp
dec
frstor
xor
leave
loopne
jg
xchg
(bad)
in
push
sub
xchg
dec
adc
movs
cmp
xor
adc
xor
cmp
(bad)
xor
mov
call
or
fist
xor
mov
jmp
mov
and
or
push
mov
fisubr
mov
or
popa
stc
pop
jmp
imul
xchg
sub
fwait
add
outs
push
shl
repz
jnp
mov
mov
or
pop
or
sti
xor
data16
or
xchg
lods
sub
mov
js
mov
dec
mov
sub
arpl
jo
inc
arpl
std
movs
cwde
add
and
addr16
or
cmp
xor
js
sbb
mov
xor
es
fyl2xp1
shr
dec
cwde
loope
test
dec
lods
fidivr
mov
dec
xchg
mov
pop
es
loopne
imul
xor
push
xchg
gs
sbb
sbb
fldcw
mov
xor
or
gs
outs
pop
ret
and
xchg
pop
and
cmp
test
mov
icebp
lahf
jge
push
popf
es
xchg
mov
out
dec
stos
js
scas
daa
pop
fs
lahf
sub
aaa
cmp
shl
icebp
cwde
popf
mov
cmp
push
shr
adc
xor
add
das
xor
fwait
xor
xor
leave
pop
mov
es
xor
lods
neg
mov
xor
xor
call
mov
fwait
les
arpl
fwait
mov
js
xor
xchg
and
xor
mov
xor
movs
adc
mov
into
xchg
and
mov
popf
add
(bad)
xor
mov
cmp
push
mov
data16
std
stos
(bad)
push
int3
add
scas
ja
or
aaa
jmp
jnp
jg
fs
leave
fild
jmp
push
xor
xchg
out
inc
lds
inc
lods
add
(bad)
and
pop
add
aas
xor
push
shl
push
xor
lahf
jae
ret
mov
jmp
cwde
cmc
pop
stc
sbb
scas
add
scas
fs
dec
pop
sub
or
mov
and
sub
pop
mov
mov
and
xor
pop
xor
inc
test
sub
inc
mov
sbb
aaa
add
add
scas
add
xchg
or
jne
bound
icebp
sub
cmp
xor
dec
adc
out
add
(bad)
out
xchg
xchg
scas
jge
sbb
or
mov
cmp
xor
cmp
dec
push
or
pusha
mov
xchg
mul
popa
jne
mov
mov
aas
mov
es
jecxz
xor
mov
arpl
and
inc
dec
xor
inc
cmp
adc
imul
cmp
add
std
jmp
dec
cmp
or
and
test
cwde
push
sbb
pop
xchg
jno
bt
cmp
xor
push
es
jmp
mov
jecxz
aam
es
mov
es
sbb
dec
leave
sbb
dec
push
aaa
push
jmp
or
xchg
ins
xchg
stos
inc
adc
int
jae
fisub
loope
xchg
push
xor
ja
mov
or
push
aam
std
aad
pop
or
lds
iret
adc
and
adc
inc
stos
cdq
sub
xchg
push
les
aaa
icebp
in
cmp
lods
and
stc
mov
jne
loope
inc
call
xchg
ror
cmp
push
cmp
dec
add
test
adc
fwait
mov
sbb
mov
ret
add
hlt
push
int3
daa
inc
iret
and
cmp
cmp
fstp
int
adc
xchg
pop
xor
dec
jp
fstp
mov
sub
cmp
test
fiadd
jp
xor
xchg
dec
cmp
adc
lahf
lea
adc
jp
(bad)
scas
and
pusha
popf
movs
mov
pop
adc
adc
mov
push
mov
xchg
fwait
push
cmps
pop
and
fimul
dec
xchg
and
jecxz
(bad)
dec
jmp
xor
sbb
rol
sub
(bad)
mov
sbb
test
test
ja
in
ret
push
inc
jno
dec
push
add
push
popf
lods
inc
test
inc
mov
adc
jmp
popa
(bad)
or
dec
jp
(bad)
and
sbb
out
int
mov
dec
and
xchg
mov
js
dec
push
sbb
popw
push
ins
add
xchg
inc
(bad)
aas
or
retf
ret
add
xor
and
mov
push
dec
mov
dec
sub
adc
push
lock
arpl
xchg
mov
push
(bad)
outs
xchg
sbb
nop
lods
push
int3
shl
cmp
jmp
dec
arpl
sub
sbb
mov
loope
sbb
int3
shl
das
xchg
movs
inc
xchg
mov
xor
adc
xchg
mov
adc
ret
loopne
outs
jmp
mov
test
lea
jp
cmp
dec
ror
ss
dec
(bad)
inc
ins
(bad)
sbb
adc
pop
mov
mov
popf
(bad)
push
mov
call
neg
popa
out
and
sub
inc
outs
or
jns
mov
xor
data16
sub
sub
and
adc
inc
icebp
inc
mov
inc
les
gs
dec
push
cmps
sbb
xor
cmp
adc
fidiv
ret
cmp
imul
sub
int
inc
(bad)
jmp
add
or
popa
icebp
xor
imul
lds
mov
add
xchg
add
inc
xchg
mov
mov
jns
mov
jnp
lods
(bad)
iret
jg
xchg
push
xchg
xor
sbb
dec
loop
aas
mov
sub
(bad)
aaa
stos
inc
shl
cmp
mov
pop
daa
jg
(bad)
and
mov
ja
shr
stos
and
int
dec
jae
stos
popa
add
sub
push
pop
xor
icebp
push
out
adc
jp
lods
call
imul
dec
inc
adc
mov
xor
movups
hlt
sbb
mov
or
es
sub
std
or
dec
mov
ss
add
aaa
cmps
sbb
dec
push
outs
lea
in
les
xchg
pop
cmc
aad
adc
xchg
cmp
mov
adc
add
dec
and
mov
test
aad
inc
xor
mov
stos
pop
cmps
dec
cmp
fldenv
pop
out
pop
push
xor
or
fisubr
arpl
pop
mov
sub
mov
sub
xor
stos
dec
in
inc
dec
cmp
leave
call
xor
rol
adc
data16
inc
int3
out
imul
sbb
inc
mov
cmp
add
xor
mov
jge
adc
mov
adc
add
outs
or
movs
out
fs
ja
pop
call
mov
out
data16
lea
imul
add
xchg
mov
or
mov
call
dec
dec
pusha
gs
cwde
xor
aaa
sbb
dec
out
adc
fimul
sbb
mov
int
mov
push
mov
rol
call
stos
xchg
or
inc
xchg
out
inc
push
adc
inc
int3
loop
inc
xlat
pcmpgtd
pop
dec
xor
stos
mov
mov
and
inc
cmp
test
jg
inc
mov
adc
ret
ss
mov
aaa
mov
pop
or
dec
add
inc
or
jno
test
inc
retf
ror
mov
mov
popf
rcl
mov
push
shr
mov
fistp
int
mov
and
mov
fwait
jne
sub
and
lds
call
arpl
call
data16
pop
and
stc
gs
jg
popa
or
xchg
popf
stos
mov
(bad)
cdq
outs
dec
rol
movs
push
pop
adc
call
int3
jp
mov
jp
pop
pop
and
push
int
pop
sbb
data16
les
int
(bad)
(bad)
mov
cmp
ins
icebp
xchg
aaa
xor
pusha
add
sub
imul
in
call
mov
out
dec
dec
pop
dec
add
ficomp
inc
int
pop
pusha
das
std
and
out
or
data16
shl
inc
xor
vmovdqa
or
and
fst
lds
bound
sub
xchg
add
xor
mov
shl
imul
das
call
jge
mov
ins
xor
xchg
add
inc
out
rcr
cmps
sub
pop
adc
loopne
mov
pop
adc
dec
sub
sub
fisttp
test
stos
dec
sbb
inc
shl
aaa
out
shr
add
es
add
aas
lea
retf
add
ins
call
adc
mov
adc
movs
pop
in
sbb
dec
loope
pop
out
push
add
or
add
cwde
adc
and
xor
ins
or
and
cmps
xor
and
int
movs
lds
mov
test
sub
ins
dec
inc
mov
idiv
mov
mov
xchg
imul
mov
dec
call
or
inc
pop
dec
leave
aaa
sub
stc
jns
sbb
cmps
lea
pop
xor
or
shl
mov
jmp
cmp
repz
dec
xor
in
sar
dec
xor
sbb
push
xchg
sbb
fwait
pop
stos
es
pusha
mov
imul
mov
push
mov
dec
or
lods
push
push
xchg
xor
fild
xor
xor
xchg
gs
pop
stos
cwde
sbb
mov
or
cmp
xchg
pusha
push
add
(bad)
nop
loop
xchg
sbb
xlat
fnstsw
and
dec
and
arpl
xor
in
sub
and
adc
fisubr
or
mov
add
push
and
pushf
add
inc
xor
jnp
mov
fisubr
aas
adc
test
jno
push
mov
mov
dec
imul
arpl
pusha
adc
call
xor
test
dec
arpl
pop
data16
jmp
cmp
and
lock
in
jmp
mov
pop
add
outs
mov
and
inc
sbb
ja
push
int
push
dec
xchg
fiadd
mov
das
dec
mov
xor
ret
fild
pop
scas
inc
sub
movs
fld
adc
push
xor
xor
inc
das
cwde
xor
mov
mov
(bad)
(bad)
fs
sbb
aad
push
dec
and
mov
pop
xor
mov
or
xchg
cmp
inc
arpl
adc
mov
aad
outs
dec
inc
sets
lds
and
icebp
movs
pop
or
cmp
mov
jecxz
jns
or
rcr
push
push
sbb
mov
xchg
or
jo
rcl
jmp
loope
inc
ret
test
cmp
mov
mov
add
aaa
or
inc
rcl
adc
inc
(bad)
ret
test
and
aam
mov
pop
mov
sub
or
es
sbb
stc
dec
daa
pusha
ret
and
or
xor
jne
xor
or
or
shl
(bad)
adc
adc
push
mov
cmp
imul
sub
or
js
js
and
inc
das
sbb
fucomi
aad
xor
outs
xchg
aam
les
jns
inc
aad
xchg
cmps
pop
sbb
sub
(bad)
xchg
fwait
cmc
mov
mov
sbb
pop
aaa
inc
xor
pop
push
add
or
push
gs
dec
movs
push
push
leave
bound
ins
sub
adc
push
lods
stc
mov
movs
adc
cmp
(bad)
fimul
push
scas
jp
ret
int
fidivr
(bad)
out
pop
aas
fist
cdq
pop
popa
rol
std
add
fnstenv
cmc
and
add
int
popa
add
int
ret
retf
fucomi
xor
sti
sub
pop
(bad)
cmc
mov
xchg
sbb
rcr
lods
pop
mov
add
mov
fidivr
inc
(bad)
cmp
jmp
aad
pop
add
mov
pop
xor
(bad)
pop
push
vandnpd
add
cmp
jns
gs
int
jo
iret
pop
out
xchg
popf
cmp
cmp
fstp
dec
pop
mov
mov
xor
es
dec
mov
cmp
aad
push
adc
int3
and
shl
xchg
inc
mov
add
lods
cmp
jg
xor
xor
stos
inc
and
mov
and
mov
inc
xor
or
ficomp
aad
jnp
mov
pop
movs
fucomip
push
out
jge
xchg
xlat
xor
pop
retf
xlat
cmp
dec
pextrw
cmp
inc
fisttp
dec
mov
jne
sbb
add
scas
lods
xor
int
in
pop
inc
fwait
xchg
mov
popf
cmp
inc
sbb
xor
sub
jmp
xchg
push
iret
aaa
loope
xor
or
fisubr
cdq
popf
loop
pusha
dec
mov
add
xlat
addr16
stos
ficomp
popf
inc
sbb
or
dec
fst
xchg
inc
push
int3
sub
and
sbb
pushf
mov
pop
inc
pusha
sar
xchg
or
xlat
call
test
inc
scas
out
dec
int
cdq
push
pop
dec
xor
ins
inc
xor
hlt
mov
cmp
inc
sbb
addr16
mov
inc
call
test
int
jns
dec
adc
inc
and
sbb
test
fwait
adc
add
js
(bad)
aad
fwait
add
aas
dec
jmp
arpl
and
add
aad
add
and
or
or
lock
xlat
aas
add
imul
and
add
or
jge
push
ret
push
xor
dec
int
iret
sbb
shl
mul
shl
push
xor
pushf
jae
out
ficom
and
sbb
stos
inc
or
pop
inc
mov
mov
add
cwde
xor
dec
jae
mov
jno
out
in
adc
call
push
dec
jmp
inc
je
dec
jp
xlat
stos
icebp
push
mov
pop
inc
cmp
inc
push
mov
or
mov
add
ret
sub
mov
xor
sub
stos
cmp
mov
and
lds
or
inc
mov
or
pop
or
sbb
cmp
call
adc
push
data16
inc
aas
cmc
pop
mov
xchg
jg
or
lea
aas
std
shr
sbb
jnp
inc
cdq
fwait
and
call
or
ret
test
inc
xchg
ja
movs
push
dec
stos
mov
inc
xor
or
cmp
cmp
jmp
test
and
fxch
add
fiadd
daa
mov
aas
(bad)
rcl
ror
imul
lds
dec
rol
inc
sub
fs
ins
adc
xor
xchg
ja
and
pop
or
mov
xor
jno
test
sbb
test
frstor
call
xor
pop
sub
xchg
sub
inc
scas
gs
jo
stos
add
or
lds
adc
jnp
sub
or
push
mov
std
imul
(bad)
and
sub
xchg
mov
or
popa
ins
xor
popa
out
add
push
mov
lds
rcl
mov
jg
inc
(bad)
cwde
(bad)
or
push
pop
inc
fwait
cmp
sbb
aaa
and
and
and
test
add
adc
int3
dec
imul
shl
adc
in
xor
lds
ror
int
sar
fwait
xor
es
mov
pop
aas
pop
lea
sbb
jmp
or
cmp
out
xchg
lock
dec
cmp
or
pop
adc
cmp
adc
sub
and
xchg
mov
jae
sbb
sbb
mov
leave
and
pop
call
test
int3
mov
ja
call
bound
inc
or
dec
movs
mov
call
cmps
movs
cmp
adc
xor
sub
sbb
jbe
or
push
mov
mov
cmp
pop
outs
and
data16
jp
cmp
sbb
pusha
pop
aad
mov
add
(bad)
jne
push
jne
sub
sbb
popf
dec
dec
cmp
jno
int
add
arpl
(bad)
bsr
call
outs
ret
jne
add
jnp
sub
shl
mov
jp
or
cmp
inc
jno
mov
addr16
xchg
lea
pop
mov
add
cmp
test
cmp
mov
adc
and
push
mov
aas
das
dec
int
jge
sub
push
mov
cmp
ret
or
push
cmp
xchg
jp
jge
mov
or
ss
adc
cmp
jno
popa
sbb
cmc
or
mov
pop
cmp
shr
imul
cmp
ss
xchg
cdq
fldenv
mov
pop
std
or
mov
(bad)
and
scas
and
xor
fs
test
inc
pop
das
push
lds
add
dec
inc
daa
sbb
sbb
cmps
xchg
retf
jp
xor
movs
aad
add
cmc
mov
int
neg
imul
mov
add
jge
bound
aaa
repz
int3
jmp
xor
and
or
jno
call
lock
xor
frstor
xor
es
out
and
pop
mov
adc
mov
mov
and
pop
push
jmp
xor
inc
(bad)
xchg
jno
push
xor
dec
pusha
xor
xor
add
pop
push
mov
mov
xchg
loop
mov
xor
call
push
xor
xchg
fimul
loope
loopne
jp
dec
imul
test
aam
test
int3
dec
jge
mov
mov
inc
int3
push
popf
aas
imul
add
jge
and
mov
icebp
xor
aas
and
cmc
xchg
leave
mov
mov
outs
dec
xchg
mov
pop
stc
push
imul
shr
push
xor
retf
mov
adc
rol
ror
xor
sbb
popa
xor
and
(bad)
dec
daa
inc
rcr
add
and
imul
lods
loopne
add
ret
out
cmp
pusha
push
xor
pushf
and
inc
mov
aam
sbb
jnp
das
mov
les
rcl
(bad)
mov
or
int3
int3
dec
lea
int
in
mov
inc
mov
popf
or
fstp
sbb
popa
iret
scas
cmp
popa
push
outs
push
and
int
loope
int
shr
daa
dec
cdq
pop
call
inc
cwde
mov
push
in
test
or
aas
pop
xor
aad
cmp
xor
fisub
imul
mov
das
sbb
fbstp
rol
cmp
call
or
push
cdq
leave
cmc
iretw
pushf
cdq
xor
iret
cmps
mov
js
scas
in
xor
xor
in
dec
scas
call
and
mov
lea
call
mov
or
dec
call
and
xchg
or
jmp
stos
es
xor
add
jecxz
std
push
mov
imul
xor
(bad)
fstp
fist
xor
dec
mov
mov
or
jp
xor
cmp
fwait
push
cmp
adc
rcl
call
xchg
cmc
(bad)
xchg
lock
mov
mov
add
leave
jno
jo
xchg
jns
mov
shr
sub
arpl
dec
push
imul
mov
dec
data16
js
daa
dec
sub
inc
xchg
lea
dec
xor
xor
movs
lea
lds
sbb
pop
fwait
inc
fwait
adc
mov
dec
lock
addr16
pop
gs
adc
call
cwde
imul
mov
inc
or
mov
add
es
dec
sub
lds
add
leave
xor
add
and
lods
adc
xor
retf
and
ss
adc
xchg
lds
and
adc
xor
dec
adc
pop
mov
push
dec
call
adc
dec
cmp
daa
cmp
fwait
xor
fnstcw
sbb
sbb
xchg
add
sub
mov
shr
imul
dec
aaa
(bad)
pop
mov
cwde
leave
mov
sub
movs
or
add
push
xor
push
out
mov
jne
movs
inc
xchg
cmp
add
sub
psubsb
or
adc
mov
int3
add
fild
fild
outs
pop
adc
cmp
add
xchg
stos
xor
js
mov
add
xor
push
rcl
mov
jno
imul
(bad)
test
mov
mov
daa
jmp
jnp
push
add
mov
(bad)
pop
mov
inc
fistp
add
adc
inc
aam
or
xor
push
fwait
rcl
lea
jmp
int3
cmp
inc
add
sbb
icebp
jmp
(bad)
mul
dec
xor
aaa
mov
cmp
or
outs
xor
xchg
mov
call
adc
rcr
pop
xor
xchg
sysret
frstor
sbb
(bad)
std
shl
fistp
add
es
aad
dec
jmp
shr
mov
xor
push
inc
test
mov
fwait
ins
aaa
pop
mov
adc
add
jno
push
pop
xor
and
push
int3
aad
push
sbb
movs
(bad)
movs
inc
dec
mov
or
or
adc
cmp
pop
es
rcl
icebp
movs
sbb
lea
lods
xchg
inc
(bad)
(bad)
cmp
xlat
and
jnp
xor
sbb
movs
pop
cmc
xchg
int
push
inc
mov
add
jns
pop
xor
lsl
and
xor
adc
std
rcl
xor
int
inc
xor
pop
mov
ror
stos
cmp
adc
mov
xchg
sub
sub
jecxz
jne
xchg
aad
jne
xor
in
or
cmp
cmp
pop
mov
ins
jg
rcl
aaa
cmp
or
test
pop
jge
test
shr
fidivr
aam
pop
inc
ret
movs
or
sub
inc
popf
mov
stc
mov
or
jns
int3
sub
dec
ja
mov
xchg
cmps
dec
push
or
js
sar
out
cmp
sbb
mov
push
repz
cmp
addr16
cmp
lods
out
and
jmp
out
inc
dec
rep
lds
xchg
push
jmp
std
das
dec
cmps
mov
aad
inc
dec
jp
imul
adc
xchg
cdq
jecxz
and
push
mov
shl
dec
sub
call
push
jp
mov
in
xor
adc
or
and
jns
icebp
jp
mov
and
stos
xor
cmps
jno
in
mov
jmp
inc
xor
mov
rcr
sbb
daa
call
add
mov
dec
and
popa
adc
test
xor
popa
ins
inc
hlt
adc
daa
sub
ja
call
xor
cwde
xchg
xor
loop
xchg
aaa
sbb
sub
mov
push
xchg
dec
stos
gs
das
int
xchg
mov
sar
xor
lods
xor
pop
inc
and
movs
loopne
or
(bad)
fisub
outs
iret
adc
aas
fwait
adc
sub
add
mov
movs
loop
adc
fbstp
arpl
loope
add
or
test
call
in
pop
or
add
jecxz
push
int
dec
xor
adc
arpl
movs
or
xchg
pop
hlt
fdivrp
xor
pushf
push
or
mov
dec
mov
scas
aaa
stos
ret
or
lds
stos
push
mov
loopne
adc
retf
fldenv
std
push
ret
and
imul
outs
and
or
stc
jmp
ins
xor
imul
aad
sbb
xlat
pop
int
dec
shl
in
ret
mov
std
fbld
js
mov
and
hlt
xchg
mov
inc
stc
aas
inc
pop
add
push
xor
dec
rcl
push
add
(bad)
sbb
stos
imul
pop
inc
add
sbb
aaa
dec
xchg
imul
jecxz
or
cwde
push
jae
pop
cdq
mov
movs
xchg
scas
add
cdq
mov
cmps
jno
es
int
xlat
mov
shl
mov
mov
xor
int3
bound
pop
dec
jp
mov
ret
or
inc
xor
jmp
push
hlt
inc
xchg
push
jne
jnp
and
add
pop
push
rcl
pop
and
adc
mov
hlt
es
gs
and
imul
xor
mov
out
jmp
lea
add
lsl
jecxz
gs
cmp
dec
call
int3
sbb
inc
fwait
push
mov
mov
dec
add
leave
inc
pop
inc
inc
and
push
scas
das
imul
or
inc
fistp
add
jns
mov
mov
or
pop
add
fist
push
sbb
arpl
xlat
cmc
adc
aas
xchg
movs
aaa
arpl
das
sub
lods
or
add
mov
cdq
popf
jecxz
inc
or
popf
imul
mov
jecxz
shr
fbstp
sbb
add
or
xor
int
sub
call
xchg
pop
mov
mov
jne
pop
mov
and
mov
push
daa
or
dec
ss
xor
and
addr16
dec
bound
aad
cmp
icebp
sbb
and
add
pop
bound
imul
mov
adc
inc
aad
add
adc
int3
or
aaa
sbb
stos
inc
cmp
and
test
jno
fld
sbb
xor
sahf
fisubr
adc
(bad)
xchg
and
int
sbb
sbb
xchg
cmp
ret
int
dec
retf
jp
cwde
jno
cmps
imul
cmp
icebp
jno
xor
pop
mov
sub
or
or
xchg
scas
scas
and
shr
mov
cwde
lock
retf
or
int
aam
fisubr
add
xchg
jmp
mov
data16
lods
stos
dec
xor
mov
hlt
fild
inc
popf
dec
mov
lahf
xlat
mov
push
test
int3
popf
repz
push
pop
sbb
pop
cmp
loopne
int3
xor
xchg
mov
sbb
cmc
ja
repz
movs
cmp
mov
inc
push
dec
sub
push
inc
and
leave
(bad)
push
push
gs
pop
xor
mov
test
adc
call
adc
sbb
daa
jno
xor
xchg
aaa
jnp
jns
sub
xor
push
lock
retf
or
mov
jnp
popf
dec
mov
xor
pop
data16
sub
xlat
pop
cmps
fisubr
dec
jp
sub
fwait
pop
call
les
sub
cmp
lods
adc
pop
mov
sbb
inc
jg
add
sub
mov
push
inc
xor
and
out
push
sub
inc
out
mov
or
or
dec
push
lds
sar
addr16
pop
int
push
xchg
or
pop
dec
add
dec
lds
test
test
pop
retf
and
movs
push
into
sbb
xor
inc
lods
pop
or
and
adc
retf
push
dec
call
int
aaa
add
das
retf
in
test
jge
inc
xchg
clts
push
xchg
cwde
lds
mov
or
inc
ret
add
pop
ficom
sub
inc
sbb
add
aaa
sbb
sub
sub
pop
test
xor
dec
dec
cmp
xlat
mov
pop
xchg
lds
add
mov
add
ins
movs
test
jmp
xchg
ss
xchg
shl
mov
shr
xor
add
js
stos
dec
jmp
adc
in
and
cmp
call
jo
imul
xor
dec
sub
in
imul
xchg
popa
aaa
sbb
and
sub
mov
ins
mov
mov
aas
jmp
push
daa
call
adc
xor
and
call
xor
adc
mov
sbb
adc
mov
jmp
scas
mov
jg
xchg
in
xor
lahf
fcmovnb
push
leave
sub
sub
mov
sbb
or
lods
jp
es
mov
jne
inc
popf
fisubr
das
mov
inc
imul
jnp
pop
or
dec
shr
out
hlt
data16
stc
xor
sbb
pushf
cmc
inc
popa
xor
test
mov
das
xchg
loopne
mov
add
fst
cmc
sbb
les
movs
xor
sbb
push
push
inc
sbb
xchg
inc
(bad)
jne
inc
shl
dec
aad
sub
stos
push
xchg
xchg
mov
loopne
push
sbb
or
cmc
es
inc
mov
xor
ficomp
retf
sub
(bad)
xlat
dec
or
dec
icebp
cdq
stc
xchg
push
lds
jae
mov
xchg
sbb
sub
dec
les
iret
daa
mov
sbb
mov
pop
and
xor
int
xchg
or
xor
xor
mov
jg
loope
or
fwait
gs
pop
mov
pop
inc
pop
inc
jge
call
call
int
dec
jo
retf
inc
cmps
add
call
test
or
pop
(bad)
cmp
data16
repz
in
data16
inc
sbb
fiadd
call
mov
shr
std
xor
aad
sbb
push
shl
inc
arpl
jns
jno
nop
test
xlat
mov
jns
adc
dec
not
xchg
sbb
mov
jmp
popf
sub
inc
dec
push
(bad)
cmp
jae
add
outs
xor
outs
in
cmp
lods
bound
lea
mov
add
(bad)
xrelease
mov
add
mov
mov
pop
or
sbb
inc
jge
mov
test
pop
rol
and
int3
bound
sub
fnstcw
ja
push
and
xor
cmp
jne
xor
mov
xchg
lds
data16
sbb
es
sbb
push
stc
in
inc
imul
add
mov
cmp
push
push
xor
lods
aaa
and
test
cmp
sub
es
pop
cmp
mov
loop
test
and
jo
pop
inc
stos
xchg
cwde
icebp
test
retf
arpl
inc
adc
inc
out
inc
cmps
addr16
and
data16
sub
ja
sbb
xchg
imul
pop
retf
or
lds
mov
dec
xor
dec
pushf
xor
int
aaa
dec
mov
lea
ret
lods
dec
aas
sti
not
cmc
pop
xor
outs
cmps
push
popa
or
int
(bad)
gs
cwde
xchg
movs
xor
aad
add
mov
dec
aas
fistp
push
xor
and
add
sub
test
xor
outs
ret
adc
pop
mov
stos
dec
shr
sub
push
pop
popa
mov
push
(bad)
jecxz
mov
call
(bad)
and
dec
dec
arpl
cmp
or
xchg
outs
push
fwait
adc
int
imul
push
xor
mov
xchg
and
addr16
or
xor
push
aad
sbb
xchg
and
rcr
jge
or
aad
jnp
and
push
push
dec
cmp
and
xor
aad
sbb
stc
and
and
daa
or
in
rol
mov
jnp
xchg
scas
and
cmovs
dec
int
shl
xor
pop
pop
inc
xor
xor
jge
sub
or
sub
push
lods
div
inc
retf
add
aaa
inc
leave
jp
xor
les
shl
adc
outs
or
inc
mov
les
add
xor
dec
add
add
inc
dec
scas
aaa
fwait
cmps
imul
pushf
adc
fiadd
data16
jl
xor
out
hlt
push
xor
mov
loope
retf
or
sti
data16
mov
aad
jp
add
std
mov
int3
stos
cmp
outs
adc
cmp
bound
cmp
sbb
cdq
and
ja
rcl
inc
cmp
into
xor
xchg
cmp
inc
dec
ret
mov
cmp
jnp
add
enter
mov
shl
xchg
movs
mov
dec
cwde
adc
push
inc
jae
ja
or
jno
add
adc
xchg
hlt
call
mov
ins
or
aad
pop
aad
xor
push
jmp
add
mov
scas
jge
es
setp
mov
aad
daa
int
inc
xor
movs
cwde
pop
xor
add
inc
xor
adc
pop
adc
arpl
xlat
mov
jae
or
xor
mov
add
outs
inc
mov
push
fbstp
xlat
mov
sub
mov
popa
popa
xchg
rol
lock
dec
push
push
ret
push
int
cmp
sbb
icebp
imul
int3
push
pop
inc
lds
sar
mov
mov
xor
inc
cmc
js
test
jp
sbb
cmp
shr
mov
loope
test
mov
sub
shr
ins
shl
pop
pop
push
movs
dec
in
int
dec
bound
sbb
es
xchg
mov
ins
xor
xor
and
mov
inc
xor
jge
pop
inc
lock
out
and
pop
mov
add
(bad)
pop
out
shl
or
cmp
or
push
mov
and
(bad)
(bad)
lds
and
dec
xor
push
stos
dec
int
es
pusha
add
shl
pop
jnp
adc
pop
inc
aam
mov
ror
data16
lods
jns
jnp
cmp
xor
retf
cmc
and
stos
test
and
or
mov
xor
pop
or
push
punpckhbw
jmp
pop
mov
add
sar
push
std
sbb
pop
adc
xor
xor
pusha
push
push
out
movs
sub
jno
shr
and
inc
dec
jg
xchg
lds
sub
xor
out
int
cmps
rol
and
add
and
icebp
xor
not
push
or
dec
jae
cmps
and
lock
jmp
adc
adc
push
movs
call
sbb
mov
or
mov
shr
mov
daa
lea
adc
jnp
sub
sbb
fbld
or
repz
int
hlt
cvtdq2ps
das
rol
xchg
sbb
xor
int
xchg
xlat
jae
pop
or
js
inc
inc
cwde
rcr
push
jnp
test
mov
es
sub
mov
cmp
inc
sub
and
call
dec
test
loope
adc
adc
mov
clc
add
dec
adc
adc
sbb
push
int
inc
pop
pop
outs
push
xchg
call
fs
cmp
imul
mov
jecxz
outs
or
ss
adc
mov
shr
popf
pop
rcl
fimul
fwait
xor
xchg
dec
call
sbb
or
add
pop
jmp
jnp
inc
out
add
les
fsubp
lods
jmp
call
retf
std
(bad)
sbb
jno
aas
shl
bound
push
jns
fwait
bound
or
sbb
imul
in
add
or
fiadd
xor
int
sbb
pop
jmp
lods
ja
sbb
inc
sub
xchg
dec
imul
xor
inc
cmovs
inc
xor
or
pop
stc
sub
sbb
icebp
xor
neg
std
out
outs
dec
push
mov
xor
adc
mov
lock
aaa
gs
push
test
sbb
or
push
retf
sub
push
xor
cmp
ja
add
sbb
xchg
cdq
aad
lods
push
push
das
call
xchg
cmp
jge
push
jnp
add
daa
cmp
sti
lds
sub
mov
cmps
xchg
dec
xor
icebp
and
popf
int
ja
ins
or
cmc
call
pop
outs
ret
add
or
or
push
lahf
je
pop
mov
adc
cwde
xor
push
xor
mov
dec
leave
jno
int3
pusha
or
and
inc
in
in
or
ss
lods
es
ficomp
dec
dec
(bad)
cdq
jge
daa
sbb
cmp
sbb
dec
arpl
dec
adc
adc
pop
arpl
retf
(bad)
call
cmc
and
jnp
adc
xchg
adc
aam
inc
xor
repz
stos
and
pop
xor
adc
(bad)
cmp
or
cmc
loope
popw
jp
loope
cmp
sub
xor
lds
dec
push
addr16
aaa
adc
aaa
sbb
push
cmp
pop
mov
jne
rcr
not
addr16
jge
add
cmp
data16
sbb
mov
push
movs
xchg
mov
push
sbb
pop
sti
outs
add
xchg
jns
mov
pop
(bad)
mov
or
gs
dec
or
xor
pop
and
xor
ror
pop
popa
xor
push
xor
or
hlt
or
inc
sub
nop
pop
lahf
neg
jp
jecxz
xor
inc
push
fnstenv
push
add
lds
aaa
pushf
fimul
and
movs
sbb
or
movs
aaa
or
adc
std
idiv
push
mov
ins
dec
and
sets
test
inc
stos
js
out
add
cmp
pop
cwde
dec
lea
xchg
lods
jno
stc
push
inc
scas
jp
fild
gs
arpl
or
(bad)
aas
in
cmp
fistp
iret
inc
xor
call
adc
jp
leave
cdq
jg
lock
and
push
mov
mov
sub
cmp
lods
add
xor
pop
js
push
xor
cmp
inc
aaa
outs
xchg
mov
add
cmps
jmp
mov
das
mov
loop
cmp
inc
and
out
pop
mov
push
jge
mov
xor
pop
int
mov
sub
cwde
adc
rep
cmps
dec
mov
rcl
ret
fwait
or
xchg
data16
lods
outs
xchg
jnp
test
mov
adc
movs
dec
dec
mov
jp
mov
xor
or
data16
imul
adc
cmc
xchg
sar
push
imul
arpl
pop
mov
and
fstp
mov
xchg
sub
dec
rol
ret
in
mov
sub
fwait
sbb
pop
mov
lock
xchg
xchg
dec
sub
sbb
cmp
dec
aam
or
mov
pop
mov
sbb
test
loop
pusha
popf
cdq
pop
jbe
sbb
dec
ins
xchg
int3
push
lods
add
xor
add
add
aaa
add
loop
pop
lea
aaa
push
sbb
hlt
int
xor
fnsave
div
sar
inc
aad
loop
loop
mov
aas
and
dec
test
cmps
sbb
imul
scas
pop
inc
mov
or
les
(bad)
mov
aaa
iret
aam
mov
data16
cmc
movs
aas
inc
int3
jmp
mov
call
or
das
and
mov
cmp
xor
(bad)
or
fwait
aaa
dec
cmp
or
dec
push
outs
inc
mov
cdq
add
ins
and
gs
dec
jp
mov
adc
out
add
call
lods
aaa
arpl
ins
inc
out
xor
ins
ret
rol
leave
adc
pop
inc
inc
lea
fidivr
(bad)
push
xchg
lea
icebp
or
mov
adc
dec
fild
ror
aas
xor
mov
add
sbb
out
mov
shl
add
pop
adc
(bad)
xor
pop
aas
xchg
and
das
cmp
and
add
stos
sbb
out
push
mov
sbb
jnp
xor
pop
call
or
cmp
jne
rol
sbb
shr
jne
adc
test
ficomp
pop
(bad)
or
shl
sbb
add
pop
fild
inc
adc
aaa
jmp
jmp
adc
jecxz
mov
lds
and
pop
xor
scas
fwait
mov
jmp
jae
xchg
bound
sub
or
dec
mov
sub
pop
lods
outs
call
stos
xor
leave
mov
icebp
imul
stos
fbstp
shl
mov
mov
ja
inc
mov
or
xchg
adc
push
mov
adc
inc
dec
mov
jno
mov
push
mov
mov
popfw
rcl
loopne
xor
int
aaa
or
das
mov
add
xchg
(bad)
call
int3
push
and
mov
ret
xor
js
and
inc
das
cmp
push
xor
mov
push
rcr
dec
outs
inc
xor
(bad)
repz
push
mov
push
xor
stos
pusha
leave
popf
pop
add
loop
outs
add
vsqrtpd
sbb
loop
mov
aas
mov
jae
xor
pop
ror
adc
fwait
(bad)
and
call
adc
aaa
push
outs
ret
xor
shr
sub
jne
das
inc
cmp
fimul
xor
mov
cmc
es
xchg
(bad)
and
inc
in
or
fnstenv
dec
xor
cmp
das
jg
mov
mov
xor
fild
xor
or
inc
mov
adc
add
repz
dec
mov
inc
cmps
cmp
(bad)
push
cmps
loopne
fwait
push
mov
dec
mov
mov
inc
push
fsubrp
mov
pop
jge
inc
pusha
jbe
int
scas
fst
adc
mov
std
shl
popa
inc
xor
movs
push
cdq
mov
sbb
and
adc
adc
inc
stc
popf
addps
mov
or
es
dec
(bad)
push
pop
xchg
neg
jecxz
lods
pop
mov
push
out
xor
dec
sbb
fld
arpl
call
ss
or
fwait
sub
xor
mov
push
cmc
or
out
add
dec
and
or
iret
outs
pop
les
call
fwait
rcr
cmps
pop
adc
jg
lds
add
addr16
xchg
loope
xor
in
loop
or
adc
add
test
pop
jns
int3
sbb
pop
push
add
call
mov
jecxz
pushf
mov
(bad)
mov
shl
int
cmp
test
es
jmp
and
test
or
retf
iret
fstp
cmp
sub
push
adc
mov
aas
inc
fidivr
rcl
adc
rcr
mov
stos
xor
dec
ret
mov
push
pop
fisttp
xor
call
xchg
or
xor
inc
inc
adc
mov
fisub
and
ins
shr
mov
lds
add
mov
outs
pusha
inc
xor
lds
icebp
fiadd
xchg
out
sub
or
add
mov
cmps
push
xor
or
or
adc
add
mov
pop
or
test
and
dec
sub
lds
ins
xchg
mov
stos
xchg
sar
in
fwait
cmc
es
jge
mov
mov
mov
push
shl
dec
fld
enter
imul
int
dec
push
inc
mov
xchg
jmp
adc
xor
js
movs
sbb
or
xor
inc
cmc
dec
(bad)
sbb
xchg
pop
push
rcl
fucomip
pusha
(bad)
mov
add
mov
adc
imul
jno
inc
inc
repz
popa
push
push
inc
sar
icebp
mov
call
add
jae
mov
les
jmp
daa
icebp
xchg
loop
loop
jge
adc
leave
add
int3
lgdtd
xor
in
mov
cmp
sbb
std
dec
or
xchg
dec
inc
adc
imul
mov
ficomp
jnp
xchg
push
mov
mov
cmps
cwde
rcr
dec
add
or
cmc
push
scas
movs
add
cmp
aad
ss
xchg
xor
and
adc
movs
jge
pop
adc
sub
imul
out
or
cmc
cwde
add
adc
sbb
xchg
mov
sub
add
aad
icebp
xchg
inc
sbb
dec
ins
push
movs
fwait
xor
daa
push
scas
pusha
(bad)
cdq
xlat
sbb
xor
test
outs
xor
xor
dec
mov
aas
push
adc
xchg
xor
mov
xor
imul
sbb
and
pop
xor
xchg
fneni(8087
push
dec
and
movs
mov
mov
iret
stc
lds
daa
jae
add
adc
test
popa
imul
pop
jmp
jecxz
fisttp
jge
cwde
mov
shl
adc
push
out
jecxz
xchg
inc
mov
and
cmp
sub
add
xor
sbb
inc
adc
and
and
(bad)
mov
call
sub
add
mov
cmc
mov
(bad)
fwait
sbb
inc
sbb
adc
mov
xchg
jp
fisttp
sbb
sub
or
imul
adc
int
push
mov
adc
xor
int3
js
fstp
hlt
mov
sbb
and
mov
cmp
jnp
(bad)
cwde
jo
inc
fnstenv
xchg
push
cmp
pop
(bad)
loope
push
xor
xchg
shr
inc
adc
loope
cwde
inc
out
fld
jmp
arpl
cmp
or
movs
(bad)
xor
inc
call
dec
test
imul
adc
pop
jmp
icebp
cwde
inc
xor
mov
rol
icebp
neg
mov
not
addr16
or
xchg
push
fnstenv
cmp
mov
and
inc
push
nop
add
dec
pop
cmps
imul
ja
call
adc
dec
pushf
push
pop
and
xor
out
int
adc
xchg
sub
inc
jnp
outs
pop
les
mov
push
cmps
fs
pop
aas
pop
and
ret
ins
cdq
add
fimul
mov
add
jmp
pop
inc
xchg
push
cmovge
add
outs
push
out
and
test
adc
cmc
fwait
mov
into
push
ret
(bad)
and
xor
xchg
add
pop
mov
arpl
adc
fldenv
and
push
outs
dec
aaa
and
adc
cwde
inc
loope
loop
push
mov
scas
dec
cmp
add
dec
cmp
js
lds
ret
fwait
daa
scas
mov
dec
(bad)
jcxz
das
fnstcw
(bad)
stc
cmp
xor
cmp
jnp
es
xchg
mov
jg
cmp
and
call
int3
pusha
push
jge
ret
or
add
mov
pop
xor
rcr
jg
outs
add
aaa
call
adc
mov
cmp
call
push
lds
shl
das
cmp
shl
or
cwde
jg
inc
arpl
and
or
push
jmp
jecxz
mov
test
xor
shl
js
std
and
inc
pop
dec
cmps
cmp
inc
iret
push
cdq
lock
inc
fwait
inc
pop
loopne
sbb
out
or
mov
push
repz
data16
sar
or
aaa
jmp
ins
inc
xor
or
or
add
pop
sbb
das
adc
add
mov
cmp
pop
inc
xor
and
xor
cwde
and
je
icebp
cmp
mov
test
outs
and
push
sbb
xor
aaa
popf
pop
xor
push
and
xor
pop
jno
out
adc
ror
mov
mov
in
push
sub
popf
mov
sbb
add
jne
sbb
pop
pop
call
ins
bswap
es
cmps
jns
adc
fwait
das
lahf
mov
inc
pop
add
xor
cmp
or
mov
aad
in
outs
or
les
inc
int3
xchg
shl
mov
push
fwait
in
or
jmp
xor
pop
arpl
call
add
sbb
add
fisubr
mov
cmp
pop
add
xor
adc
dec
jmp
shr
pop
mov
aaa
imul
inc
xchg
fwait
aam
sub
leave
data16
lds
push
loope
sbb
mov
add
cmps
cmc
test
inc
pop
das
push
jmp
in
imul
in
xor
in
ins
xchg
inc
pop
lahf
inc
push
inc
dec
call
inc
sub
cmp
xor
push
mov
pop
out
xchg
mov
mov
sub
xor
test
push
movs
cmp
popa
retfw
and
inc
addr16
or
out
push
dec
(bad)
or
addr16
add
xor
addr16
dec
sbb
sub
fwait
lds
push
xor
adc
xor
test
sub
adc
pop
ins
adc
cwde
test
xchg
fisubr
inc
lahf
sbb
mov
pavgb
mov
cmc
sub
push
adc
fnstcw
add
adc
popa
sar
(bad)
arpl
push
add
dec
mov
out
adc
rol
gs
jno
ja
xchg
sbb
and
mov
and
fimul
fwait
mov
and
movs
dec
inc
dec
add
jl
push
jg
xor
(bad)
repz
imul
jp
cmp
jno
pop
dec
dec
loop
pop
cdq
pop
arpl
fisttp
jge
mov
inc
sub
xchg
mov
sub
xor
shr
mov
sub
movs
jmp
sub
retfw
cdq
jg
xchg
iret
cwde
xor
rcr
fs
sub
gs
pop
or
test
call
jp
jno
xadd
xor
or
xchg
inc
or
xchg
push
fwait
(bad)
dec
call
xchg
or
jno
cmp
mov
lahf
inc
xchg
cmps
xor
aaa
adc
adc
inc
mov
add
dec
call
add
daa
pop
push
dec
xchg
cmp
shr
mov
inc
jecxz
inc
mov
addr16
pusha
ss
out
(bad)
or
sti
lds
out
xor
aaa
jnp
outs
mov
inc
xchg
jp
addr16
mov
or
ret
fwait
pop
and
xchg
jmp
sar
cmp
lahf
or
push
int
cmp
cmp
data16
call
int3
cmp
(bad)
push
adc
xchg
xchg
and
pop
adc
ins
sbb
and
mov
adc
pushf
es
(bad)
bound
jnp
push
pushf
push
adc
test
rcr
out
ret
adc
mov
imul
mov
and
xor
or
(bad)
(bad)
cmps
xor
call
xor
mov
push
int
fldenv
in
xchg
shr
and
xchg
outs
ret
daa
xor
push
xchg
fild
and
sub
push
ror
cmp
(bad)
pop
inc
mov
xor
xchg
xor
shl
mov
mov
xchg
lods
movs
cmc
lahf
inc
xchg
xchg
cmp
out
loop
and
cwde
aam
arpl
jp
jne
and
nop
ins
xchg
mov
stos
popa
lds
mov
and
imul
test
mov
jg
shl
fwait
dec
sub
cmc
sub
sar
fist
out
inc
mov
mov
pop
icebp
fwait
sub
and
mov
jnp
xor
js
or
mov
or
dec
jecxz
xor
push
dec
adc
xchg
adc
scas
inc
ret
add
and
cmp
mov
jp
stc
dec
stos
xchg
mov
xor
inc
jmp
fild
jmp
sbb
adc
xchg
xlat
cmps
rcl
hlt
faddp
pop
xor
ret
aas
repz
push
sti
(bad)
mov
mov
pop
push
xor
xor
jae
lds
mov
xchg
adc
inc
inc
xlat
outs
(bad)
mov
add
jp
fist
sbb
lods
or
cmps
or
stos
scas
pop
adc
add
repz
movs
leave
xchg
adc
sbb
fst
ins
dec
daa
mov
stc
jne
or
add
loope
add
dec
pop
and
mov
movs
jg
mov
repz
sbb
pop
and
fisttp
data16
dec
mov
cmc
xlat
pop
pop
adc
pusha
icebp
mov
mov
cmp
mov
xchg
sbb
xchg
in
mov
mov
ret
fimul
sti
retf
xor
mov
cmp
mov
and
fs
and
mov
mov
ret
add
pushf
data16
push
jne
push
or
imul
icebp
popf
add
lock
adc
push
sar
je
add
pxor
pop
xor
cmp
lahf
retf
ins
dec
xor
sub
mov
fld
mov
cmp
or
gs
and
xor
(bad)
xchg
ja
stc
mov
push
sub
jg
lds
dec
outs
cmps
jno
pop
push
sbb
add
mov
movs
(bad)
ins
jbe
inc
das
sar
xchg
fwait
and
xchg
das
stos
ja
ret
and
adc
xlat
inc
fimul
and
arpl
lock
add
mov
stos
and
pop
add
add
popa
pop
icebp
dec
fldenv
aaa
mov
pop
ror
inc
cmps
and
daa
sti
or
jmp
pop
jmp
mov
out
xor
cmp
adc
retf
out
lds
test
adc
stc
inc
mov
xchg
popa
popa
inc
(bad)
fbstp
outs
push
sub
xor
jp
or
pop
push
shr
sbb
cmp
xchg
adc
and
int3
dec
ret
xchg
popf
sub
jns
mov
sbb
rcr
cmc
das
out
inc
outs
idiv
aad
or
cwde
inc
iret
cmp
fbstp
gs
dec
push
icebp
mov
or
sbb
add
pop
loope
push
inc
loop
xor
dec
(bad)
fwait
adc
dec
das
les
shl
aas
xlat
jg
mov
inc
ret
or
inc
add
sbb
js
cwde
int
xlat
aad
fwait
inc
int
push
vmovhpd
pop
mov
xor
pop
mov
dec
and
mov
xor
cmp
dec
jne
cmp
mov
sub
lahf
shl
jp
cwde
(bad)
mov
inc
jne
adc
loope
add
fldenv
mov
jge
cwde
lock
loop
popf
xlat
scas
inc
push
dec
push
adc
rcr
dec
push
cmp
or
or
mov
or
or
cmp
mov
pop
loop
push
int
(bad)
push
adc
and
pop
push
inc
add
loope
dec
mov
jmp
leave
data16
xor
dec
ins
or
jmp
pop
sbb
mov
retf
imul
adc
adc
jnp
(bad)
sbb
and
sbb
xor
xor
pop
push
inc
cdq
inc
test
xor
es
bound
inc
stc
or
inc
xor
cwde
cmc
or
aad
jmp
push
pop
retf
xchg
ret
push
out
dec
lods
ja
or
bound
lea
lods
or
add
or
sbb
xor
push
mov
or
dec
jmp
mov
jne
aaa
aam
sub
aas
stos
imul
or
daa
stc
fimul
rcl
(bad)
adc
pop
inc
int
es
mov
(bad)
jmp
pop
fstp
and
neg
popa
int
outs
xor
adc
imul
(bad)
ja
add
dec
inc
not
ret
mov
cwde
mov
mov
or
inc
dec
mov
outs
mov
push
xor
retf
test
push
daa
push
xor
call
sar
loop
xor
or
aam
pop
fcomp
jnp
aas
out
push
inc
xchg
sbb
or
dec
sub
cmp
jno
inc
cmp
data16
pop
pop
jge
fimul
or
mov
pop
popa
imul
fisub
xor
call
and
fwait
dec
mov
das
and
inc
sbb
push
add
push
and
adc
les
or
fbstp
push
push
or
or
popf
pop
xor
sub
and
mov
bswap
add
popa
les
arpl
jmp
rol
adc
dec
xchg
int
in
in
and
test
add
sbb
pop
xor
inc
cmp
pop
inc
sub
pop
int
or
pop
aam
sub
div
std
cmp
test
lds
xor
popa
push
mov
(bad)
ret
call
bound
xchg
add
jno
sub
mov
pop
fld
mov
mov
pop
xor
popf
xchg
data16
neg
xchg
mov
sbb
int3
xchg
in
mov
ficomp
pop
pop
fimul
push
and
add
lahf
add
and
mov
push
rcr
sub
cmps
xor
mov
retf
mov
cmps
cwde
adc
scas
and
retf
and
ins
inc
retf
and
push
ins
or
sbb
popf
sub
pop
popa
mov
(bad)
stc
add
mov
or
lahf
fs
cmp
mov
add
jbe
push
jns
cmp
xchg
outs
or
arpl
ja
xchg
inc
mov
xchg
cwde
je
and
xchg
xor
jo
fnstenv
xchg
test
inc
cmps
fild
popa
and
jge
xor
xchg
movs
ror
popa
int3
call
je
pop
sub
sub
loopne
outs
xor
push
hlt
xchg
jl
xor
test
inc
adc
sti
out
push
adc
xor
fwait
inc
adc
pop
lods
xor
dec
and
xor
xor
mov
fwait
xor
push
inc
or
or
adc
sti
sub
push
and
(bad)
dec
dec
inc
cmps
pop
jne
inc
and
and
inc
and
inc
push
jb
das
mov
adc
inc
lahf
inc
sub
sub
dec
lahf
jnp
jnp
add
mov
dec
sub
pop
inc
outs
nop
sbb
outs
and
retf
push
or
rol
and
or
mov
mov
ret
pop
mov
pop
cmc
inc
popa
push
xor
mov
fs
dec
inc
mov
sbb
pop
gs
aaa
daa
sbb
pop
pcmpgtb
in
xchg
sub
mov
mov
inc
xchg
mov
add
mov
mov
mov
inc
pop
xor
and
or
jnp
push
inc
add
jnp
mov
add
sbb
pop
rol
xchg
add
dec
in
or
movs
jmp
add
and
push
push
fwait
and
das
add
in
ins
fstp
xor
inc
fnsave
inc
inc
xor
in
and
adc
xchg
cmp
cmp
stos
inc
addr16
inc
movs
ins
fisttp
sub
arpl
call
pop
dec
xor
inc
push
nop
shl
and
ror
xchg
(bad)
dec
xor
sub
shl
cmp
aad
and
push
xor
cmp
int3
xchg
xchg
pop
add
xor
ss
and
jnp
ss
pop
mov
aaa
xor
sti
sbb
adc
mov
cmp
pusha
loope
adc
xor
jne
fidiv
daa
pop
inc
mov
cmc
mov
sub
sub
es
add
inc
xchg
mov
aaa
xor
retf
rol
push
mov
inc
xchg
retfw
sub
add
and
mov
xchg
mov
cdq
mov
jbe
add
xor
dec
js
mov
stos
sub
aas
xor
adc
imul
mov
inc
mov
inc
out
gs
dec
mov
xor
les
or
inc
imul
shr
mov
sbb
cmp
sbb
dec
lods
cmp
loop
mov
shr
fldenv
jns
test
xchg
in
xor
retf
or
dec
ret
inc
inc
sub
add
or
fs
neg
test
dec
mov
dec
out
adc
movs
fwait
cdq
cmp
and
xor
data16
cmp
dec
cmp
das
pop
test
inc
adc
xchg
xchg
adc
adc
dec
mov
rol
dec
and
shl
mov
mov
ja
imul
or
sub
xchg
dec
fld
inc
and
inc
mov
pop
(bad)
xchg
cmp
or
sub
ja
aaa
movs
stos
and
leave
inc
xor
and
popa
outs
inc
lds
scas
pop
pop
inc
xor
push
xchg
inc
or
arpl
test
sbb
xchg
adc
jge
xchg
lea
add
gs
(bad)
shr
test
dec
mov
or
popa
xor
outs
fidiv
add
adc
adc
or
test
shl
inc
(bad)
or
xchg
mov
inc
xchg
nop
je
(bad)
xor
mov
imul
pop
adc
ret
add
sub
(bad)
jnp
gs
lods
aaa
mov
adc
push
call
outs
fnstenv
xchg
in
adc
aas
ret
cwde
xor
sbb
pop
inc
imul
cmp
inc
sub
xchg
xor
ss
leave
xchg
int
outs
xor
rol
ss
das
imul
mov
ret
aaa
xor
dec
xor
ror
mov
fstp
push
ret
int
rcl
fisub
push
xchg
adc
inc
stos
xchg
ins
adc
aas
imul
xchg
xchg
hlt
xchg
xor
xor
xor
dec
xchg
lea
inc
xor
ins
(bad)
fwait
(bad)
std
and
inc
xchg
sbb
sub
sub
nop
lds
inc
popf
dec
pop
scas
add
lea
xor
xor
xchg
aaa
and
inc
mov
xchg
and
push
ret
gs
mov
jo
repz
div
push
xchg
icebp
and
jne
lds
xchg
pop
mov
add
test
cmp
outs
push
xor
lods
push
ins
pusha
movlps
stos
mov
mov
sub
inc
push
add
aaa
cdq
adc
mov
pusha
scas
stos
push
or
ss
aad
retf
xor
test
retf
data16
and
imul
jmp
dec
cmp
ret
xor
hlt
pop
fbstp
cmps
lds
and
inc
ret
lock
mov
loope
sub
sbb
int
push
mov
daa
jnp
jae
sub
push
xor
aaa
fwait
popf
push
int3
mov
mov
jnp
cmp
test
and
inc
xchg
mov
inc
(bad)
daa
pop
push
pushf
mov
xor
add
aaa
fs
xor
xor
stos
mov
sbb
ret
mov
jns
jns
mov
xchg
fucom
xchg
test
leave
add
(bad)
pop
inc
inc
arpl
ret
jmp
xor
add
cmp
xchg
lods
jae
jns
cmp
ss
jp
pop
icebp
xchg
xchg
aad
addr16
inc
sar
not
mov
aaa
ins
mov
out
aas
daa
jno
inc
test
adc
stos
inc
ja
xchg
movs
outs
sbb
mov
mov
leave
imul
and
push
xor
fldenv
and
and
mov
inc
mov
(bad)
mov
pop
fbstp
sbb
sub
leavew
jnp
icebp
dec
xchg
test
inc
dec
rol
or
nop
test
pop
adc
jne
(bad)
adc
or
lahf
pushf
icebp
cwde
mov
lds
inc
xchg
xor
and
xchg
aaa
arpl
ja
icebp
and
jge
fidivr
mov
xor
cmps
pusha
pop
mov
lock
dec
call
push
xor
ror
cmp
sbb
push
mov
xor
das
mov
mov
xor
inc
int
scas
push
dec
add
int
mov
sbb
jmp
xchg
adc
cmp
ret
dec
jg
lods
pop
movs
test
mov
xchg
push
shl
adc
mov
pop
movs
cmps
popa
mov
mov
add
sub
xor
xor
or
xlat
call
push
adc
mov
jp
mov
push
cmc
or
and
dec
call
and
add
mov
mov
inc
pop
cmovno
loopne
pop
pop
lds
mov
sub
mov
sub
sub
or
push
outs
push
popf
loope
test
sti
pop
pusha
ret
cmp
dec
inc
dec
xchg
push
xchg
rcl
cwde
popf
add
and
jo
inc
(bad)
dec
sbb
mov
xor
lahf
lahf
pop
xchg
or
xor
push
mov
call
adc
xchg
or
mov
dec
rcl
inc
xchg
mov
inc
xchg
arpl
mov
leave
lea
lods
inc
mov
dec
jmp
lds
xchg
daa
xor
adc
push
sub
push
leave
call
mov
sub
lods
fdivp
sti
shl
mov
add
arpl
dec
mul
sar
lock
test
stos
(bad)
cwde
jmp
int
mov
test
jmp
sub
dec
xor
inc
pop
inc
shl
bound
rol
(bad)
jns
or
sti
xchg
adc
mov
inc
cmp
jns
xor
and
or
daa
xchg
jno
pop
xor
mov
dec
mov
add
jmp
addr16
test
shl
popa
or
push
xor
add
or
xor
sbb
fist
sub
loope
stos
xor
push
dec
adc
ins
or
imul
and
dec
xor
sub
test
sub
jnp
xor
push
mov
add
jno
outs
fcomp
pop
jmp
imul
and
xor
retf
inc
inc
mov
retf
adc
ja
xchg
jo
mov
sbb
cwde
test
xor
inc
mov
ror
es
ins
inc
add
mov
fwait
gs
add
push
test
aas
add
and
fisttp
xchg
stos
mov
cdq
add
pop
aaa
push
or
mov
sub
pop
dec
adc
lea
adc
xor
xchg
adc
pop
pop
pop
imul
jmp
inc
cmove
retf
mov
cmp
sub
or
ret
retf
ret
mov
jnp
lea
mov
xor
mov
loop
mov
or
aaa
cdq
xchg
mov
and
dec
stos
sub
out
fisttp
test
xor
mov
repz
ror
add
mov
dec
xchg
sub
push
add
sub
je
mov
cmp
inc
in
mov
inc
mov
mov
adc
add
pop
cmp
push
and
retf
(bad)
(bad)
jne
or
mov
aas
xlat
xor
add
test
add
sub
sub
pop
(bad)
dec
mov
aam
sysenter
dec
dec
jae
das
xor
pop
add
mov
xchg
ror
inc
and
push
xor
ror
ss
bswap
int
mov
sti
pop
xor
and
mov
sub
or
xor
fndisi(8087
cmp
or
or
adc
and
imul
ss
gs
inc
call
mov
push
mov
xor
imul
aaa
sub
lahf
xor
in
xor
bswap
lahf
and
dec
scas
es
and
adc
inc
in
(bad)
sub
jg
xor
fwait
in
das
fbstp
pop
inc
inc
mov
jg
movs
adc
rcr
aas
inc
es
adc
fwait
mov
das
ins
das
inc
jmp
inc
sub
dec
cmp
mov
jg
sub
pop
es
jne
fld
xor
xor
and
mov
sbb
(bad)
sbb
add
mov
mov
xchg
mov
into
xchg
cmovae
mov
push
cmp
mov
pusha
push
xchg
mov
sub
retf
push
test
add
dec
inc
add
arpl
add
push
and
cmp
pop
dec
adc
dec
rcl
push
mov
xchg
data16
xor
mov
or
add
add
and
mov
popa
outs
add
ja
dec
push
cmp
inc
popa
(bad)
mov
int
inc
pxor
mov
outs
add
lock
add
ins
sub
xor
push
out
(bad)
pop
ss
cwde
adc
sub
pop
mov
sub
ins
pop
pop
jno
xchg
nop
jo
and
jae
mov
loop
mov
inc
sub
popa
or
inc
jnp
add
test
inc
fwait
xor
pop
xor
out
add
out
or
dec
ja
xor
xchg
fild
jg
jnp
dec
ret
add
sbb
in
inc
ja
mov
push
xchg
jae
push
popa
dec
add
retf
into
test
push
das
xor
gs
repz
and
sub
shr
mov
adc
add
or
jg
mov
xlat
popa
xor
cmp
inc
and
or
or
fs
sbb
fisttp
pop
in
ins
and
xor
jg
dec
inc
sub
enter
add
mov
pop
add
ficomp
add
pop
push
mov
xor
jg
sub
fld
sub
jg
adc
mov
jg
sbb
cmp
xchg
push
xchg
xor
mov
adc
xor
jmp
xor
push
add
dec
push
ins
jnp
ja
jo
inc
xchg
or
test
jp
lods
adc
adc
push
pop
inc
out
inc
sbb
or
xor
mov
or
inc
shl
xor
ss
pop
inc
push
sbb
mov
sbb
ror
xor
or
and
xor
sub
and
inc
loope
(bad)
sbb
inc
pop
and
sbb
lea
adc
xor
les
(bad)
push
int
or
cmps
and
dec
and
xor
pop
test
xchg
adc
dec
push
jmp
push
aad
rol
xchg
cmp
das
ret
xor
sbb
mov
mov
movs
aas
adc
hlt
test
push
stc
test
cmp
int
inc
or
pop
inc
inc
mov
inc
gs
or
jnp
mov
test
pextrw
xor
adc
mov
cmp
xor
cwde
cmp
ins
push
hlt
pop
cmp
test
add
outs
push
add
and
jnp
movhps
push
or
inc
lock
or
mov
pop
jge
aaa
and
cmc
fsubrp
jge
daa
std
sbb
pop
pop
rol
adc
adc
inc
push
repz
adc
adc
mov
sar
mov
or
int3
xchg
sti
lods
pusha
inc
xor
sub
icebp
mov
in
inc
hlt
and
pop
add
pop
sbb
add
inc
imul
push
lock
arpl
jnp
inc
xor
das
or
xchg
retf
add
cmp
push
xor
div
push
push
sbb
push
add
xchg
gs
sub
int
jmp
js
mov
sbb
test
or
inc
aas
and
pop
in
jno
aaa
das
adc
sbb
push
or
mov
or
jecxz
jns
dec
push
add
repz
mov
add
jmp
cmc
es
dec
loope
lock
sbb
movs
add
sub
popf
cmp
dec
jnp
xor
fisub
int
data16
(bad)
pop
push
shr
cmc
sbb
mov
dec
scas
dec
popa
stos
push
mov
loope
add
pop
adc
or
lods
mov
nop
test
cdq
mov
int
(bad)
cmp
pop
pop
dec
daa
or
inc
sbb
xchg
cmc
in
fbstp
xlat
loope
add
or
and
imul
mov
mov
push
shr
cmps
adc
arpl
inc
add
(bad)
(bad)
mov
xchg
and
mov
add
dec
sti
(bad)
(bad)
call
enter
in
mov
inc
cmp
outs
outs
ja
pop
push
jns
push
pop
outs
(bad)
jg
xor
dec
push
push
inc
push
dec
xor
inc
dec
dec
pop
mov
or
add
jne
lods
inc
xor
sub
movs
add
mov
out
mov
add
add
pop
push
push
inc
push
push
adc
inc
popa
ins
ins
jl
jb
arpl
sub
push
fsub
sbb
add
push
or
je
jmp
push
adc
call
or
arpl
jae
aaa
inc
xor
jo
pop
fs
add
cmc
sbb
jns
sub
add
adc
into
push
mov
xor
shr
add
jae
arpl
jb
inc
mov
jg
sub
pop
pop
jbe
popa
inc
jb
inc
outs
jo
cmpps
dec
outs
inc
jae
jb
gs
inc
inc
jb
gs
bound
orps
test
imul
push
je
dec
gs
sti
(bad)
pusha
xchg
(bad)
mov
jbe
jne
aaa
dec
and
ins
je
push
out
ffree
xchg
dec
outs
jbe
unpcklps
inc
add
add
out
add
add
pop
jo
outs
gs
add
arpl
je
es
and
data16
daa
or
inc
push
add
sub
fdiv
gs
or
mov
popa
inc
fcomp
idiv
adc
jne
out
mov
jno
jne
push
add
or
pop
imul
pop
test
dec
fucom
push
add
cdq
push
mov
xlat
xor
adc
js
jbe
jmp
int
dec
ins
add
dec
add
mov
dec
cmps
inc
jno
pop
push
xor
popf
scas
inc
pop
sbb
outs
imul
outs
(bad)
xor
pop
xor
imul
jne
inc
jg
mov
popf
inc
push
dec
gs
mov
or
ins
lea
sbb
sbb
add
xlat
dec
and
jnp
add
fiadd
dec
lds
jne
pop
mov
and
(bad)
inc
dec
mov
dec
and
dec
xchg
test
adc
push
jae
imul
je
ret
outs
sub
fsub
and
fst
gs
dec
inc
ror
je
adc
mov
xlat
or
sub
push
outs
pop
xlat
jne
pop
aaa
arpl
je
sbb
(bad)
mov
and
ins
mov
bound
outs
jnp
fwait
ins
or
aad
aas
xor
int
or
xor
enter
xchg
inc
mov
aas
js
adc
xor
xlat
js
dec
fbstp
ret
test
aaa
dec
inc
inc
inc
mov
rcr
adc
loopne
adc
cmps
(bad)
mov
push
jne
and
test
mov
dec
and
lds
popa
fs
inc
add
jecxz
mov
aaa
div
cdq
push
aas
pop
pop
adc
ret
jne
fs
sub
imul
scas
mov
xchg
outs
jns
mov
int3
dec
outs
jbe
jns
inc
ins
push
mov
inc
daa
ins
test
outs
pop
push
out
xlat
jne
daa
push
or
inc
ins
outs
loope
ja
xchg
or
dec
xchg
(bad)
push
or
pop
mov
push
push
jge
jmp
outs
popa
and
adc
and
xchg
inc
add
jne
leave
mov
(bad)
jp
add
push
rcl
pop
pop
aaa
jae
gs
jo
sbb
popa
cmp
data16
outs
or
(bad)
(bad)
sbb
or
inc
mov
inc
aaa
jmp
inc
pop
(bad)
ins
pop
outs
addr16
cmp
imul
xchg
mov
jns
je
arpl
cmp
daa
mov
push
pop
xlat
dec
jbe
fild
pop
xor
outs
jmp
mov
dec
in
sar
or
jmp
add
lods
mov
rcr
fild
addr16
outs
data16
test
push
bound
sub
dec
push
gs
inc
inc
bound
jb
mov
push
dec
xor
pop
gs
not
popa
jae
sbb
ja
xor
mov
imul
or
js
jmp
and
arpl
stc
mov
lar
add
jmp
push
ja
jne
sbb
sub
or
jb
addr16
mov
push
cmp
outs
je
jo
mov
and
xchg
sbb
adc
mov
ret
adc
rcr
lahf
or
add
ret
popa
(bad)
dec
xchg
fcomip
mov
adc
adc
adc
inc
je
retf
cmp
imul
inc
fs
adc
inc
das
pushf
cmps
jecxz
mov
gs
inc
fisttp
in
lods
jnp
das
mov
arpl
dec
add
jg
in
mov
jl
mov
rcl
dec
dec
push
jns
gs
inc
int3
mov
int3
(bad)
(bad)
call
dec
popa
mov
xlat
js
fsubr
fwait
inc
push
xchg
sbb
leave
adc
rcr
xor
enter
iret
xor
scas
in
pop
in
sub
inc
jmp
pop
outs
jmp
sar
or
jmp
jae
add
lea
addr16
inc
or
pop
xlat
mov
jns
je
ins
push
(bad)
jmp
and
add
popf
imul
and
(bad)
xor
inc
inc
jb
in
outs
ins
pop
ret
sar
js
ja
pop
cmps
(bad)
jae
js
add
xchg
popa
sbb
ja
hlt
int
mov
outs
rol
fild
ret
addr16
inc
pop
and
adc
outs
fs
fistp
inc
add
pop
sbb
dec
jg
push
sar
int3
xor
adc
adc
add
dec
inc
adc
add
xlat
add
jl
and
add
dec
enter
loopne
add
and
and
add
aaa
mov
adc
add
sahf
jge
fist
add
push
mov
cmp
out
mov
jns
das
add
add
outs
iret
into
ins
or
mov
punpckhbw
pop
xchg
inc
and
push
mov
and
rcr
push
cmp
dec
mov
add
jmp
rol
add
jmp
adc
jnp
dec
inc
inc
push
and
add
inc
inc
inc
inc
push
jg
jmp
inc
jbe
aaa
xor
add
(bad)
retf
mov
cmp
add
mov
inc
jbe
push
mov
enter
mov
mov
pop
inc
js
enter
cs
(bad)
(bad)
dec
push
call
mov
mov
fild
sub
inc
mov
xor
neg
stc
addr16
addr16
sbb
mov
jl
iret
inc
xchg
jle
test
mov
adc
jnp
dec
add
imul
mov
(bad)
adc
dec
mov
das
neg
enter
call
(bad)
clc
pop
jae
jnp
adc
int3
addr16
pop
stos
xchg
or
and
(bad)
fidivr
jno
pop
das
in
clc
(bad)
sbb
sub
mov
ins
int3
ja
adc
(bad)
repz
mov
ins
adc
push
stc
outs
mov
xchg
ja
enter
aad
ja
out
les
test
sub
xchg
mov
fwait
jnp
je
cmp
in
inc
inc
inc
dec
jle
loopne
out
mov
test
inc
inc
inc
inc
das
out
mov
inc
inc
fmul
jg
or
lea
push
test
mov
sbb
pop
mov
inc
inc
mov
lods
je
push
das
push
inc
sbb
pop
mov
jo
inc
pop
cmp
add
pusha
addr16
mov
push
cs
cmp
xor
add
jno
ins
ins
inc
gs
sbb
add
mov
sub
mov
gs
sbb
ret
xchg
cmps
and
cdq
jns
cmps
mov
mov
sbb
(bad)
push
jp
jns
mov
jle
out
cdq
out
xchg
jne
ja
sbb
push
cmp
js
jl
rol
fwait
jae
loopne
cmp
xlat
shl
pushf
dec
cdq
cwde
cmp
shl
xlat
addr16
xchg
cdq
mov
add
xor
jp
jo
inc
cdq
or
(bad)
fmul
xchg
xchg
jg
ja
jns
mov
push
fnstsw
mov
rcl
push
mov
add
xor
in
mov
sbb
fmul
mov
(bad)
out
movs
fcomi
sbb
add
sbb
das
out
jp
adc
jecxz
fwait
(bad)
ja
stos
push
popa
add
xlat
(bad)
fisubr
test
mov
push
out
push
adc
in
fadd
mov
jp
mov
fwait
bound
aaa
pop
fwait
cmps
and
add
and
jo
fst
or
push
push
(bad)
pop
loopne
add
pop
aas
cmp
xadd
adc
cmp
(bad)
jg
inc
xchg
addr16
clc
pop
lock
rol
pop
push
add
test
mov
lea
iret
pop
ret
out
pop
fstp
test
add
pop
inc
pop
cld
mov
jg
(bad)
es
inc
sysret
movs
stc
loopne
and
add
clc
adc
jo
popa
sbb
xchg
mov
jo
inc
inc
jl
mov
pop
je
out
loopne
dec
out
inc
add
jnp
ins
pop
lods
inc
dec
push
mov
or
mov
(bad)
inc
js
js
push
sbb
in
push
xchg
adc
jo
scas
jge
push
push
bnd
mul
sar
mov
ret
sti
add
(bad)
call
inc
inc
in
daa
xlat
(bad)
inc
aad
sbb
jg
fstp
xchg
stos
ja
push
adc
or
inc
mov
inc
outs
push
test
push
xchg
pusha
inc
data16
test
push
sbb
cli
mov
ficom
scas
cmc
fistp
add
test
xor
pop
cdq
das
out
cli
push
add
arpl
inc
push
push
js
mov
mov
(bad)
test
fcomp
adc
mov
jno
cmp
mov
(bad)
cmps
daa
lahf
jns
cmc
mov
ja
push
mov
jge
cld
mov
arpl
mov
int
call
pop
out
stos
ss
pop
cdq
xchg
cmp
jp
xor
xchg
dec
mov
(bad)
(bad)
jle
push
jbe
push
adc
mov
mov
addr16
fcomp
cmp
call
cli
push
push
add
out
pmaxub
add
sbb
jg
scas
aas
lock
loopne
leave
inc
xchg
out
add
ficom
add
je
inc
imul
push
aas
out
arpl
add
imul
pop
loopne
nop
add
mov
push
inc
das
xor
or
mov
lods
mov
into
pop
or
jne
jmp
inc
xchg
push
enter
jl
test
mov
cmp
sub
inc
or
jbe
and
cmp
aaa
cwde
mov
cdq
fisubr
fdiv
xchg
pop
jns
mov
push
out
ja
pop
inc
loopne
add
mov
out
inc
inc
outs
mul
das
loopne
cmp
or
or
mov
mov
lods
add
xor
pop
push
pop
pop
fst
sub
xchg
jb
ja
pop
inc
aas
es
leave
daa
(bad)
in
lock
jecxz
(bad)
idiv
push
outs
in
add
movs
add
addr16
push
cld
pop
push
add
dec
sbb
add
xchg
(bad)
not
add
ret
add
(bad)
xor
(bad)
fistp
in
mov
outs
imul
xchg
jl
div
mov
test
ins
sbb
and
jne
or
aaa
pop
mov
in
aas
mov
push
mov
mov
cs
outs
cmp
mov
fcomi
mov
or
pop
cld
fld
mov
xchg
jge
jmp
add
mov
stc
mov
adc
jmp
add
jmp
mov
pop
test
sbb
sub
nop
inc
int3
stos
push
fcmovnu
fbstp
popf
push
xor
pop
aas
addr16
mov
scas
sti
pop
(bad)
not
dec
mov
icebp
rcr
leave
mov
arpl
loope
add
inc
cmp
outs
fld
inc
pop
repz
sub
xchg
xor
dec
or
(bad)
cdq
test
mov
xlat
out
les
rol
loopne
ret
fdivr
stos
pop
mov
(bad)
jb
aaa
adc
cmp
cwde
inc
adc
xor
pop
js
aas
jns
(bad)
dec
inc
xor
cld
lods
xchg
rol
xchg
aaa
mov
(bad)
test
(bad)
scas
add
aaa
hlt
sar
not
enter
xchg
retf
in
div
mov
rcl
xor
rcr
in
in
not
add
jmp
jmp
cwde
pop
add
xchg
pop
fld
fsubr
aaa
adc
jp
mov
adc
lahf
ret
jnp
shr
mov
(bad)
(bad)
rcl
daa
cli
fmul
add
mov
cli
out
inc
in
fld
mov
xor
in
(bad)
mov
add
fsubr
jecxz
out
out
bnd
jbe
out
ja
jnp
fcmovnb
or
int3
das
out
loop
mov
ins
push
jmp
(bad)
repz
clc
add
fnsave
dec
psllw
cli
test
sbb
lea
aaa
mov
or
or
mov
or
iret
sbb
into
les
mov
jecxz
add
shl
jmp
fwait
imul
out
jmp
psubq
ja
je
xchg
cmp
pushf
shl
add
sub
sti
inc
inc
and
js
pop
push
test
dec
mov
aaa
outs
outs
popa
scas
pop
lahf
out
add
push
or
adc
xchg
or
mov
cmp
sub
cld
shl
popa
pop
repnz
add
or
ret
jge
or
sar
fistp
mov
hlt
aas
cmp
add
push
mov
or
inc
daa
aad
sar
or
(bad)
sbb
out
adc
loopne
push
dec
div
bound
sbb
retf
ret
mov
fwait
mov
mov
shl
xor
ins
push
mov
cs
inc
push
xor
or
jl
add
or
std
lea
add
mov
jnp
in
mov
les
add
pusha
dec
xchg
push
mov
popa
cmp
je
dec
fs
jg
jne
inc
das
push
aad
aad
push
pop
popa
je
in
jmp
jle
inc
cs
fst
aam
aam
fstp
mov
mov
inc
das
(bad)
fninit
xlat
aam
add
je
mov
pop
cmps
stos
cs
add
jnp
cs
xor
pop
push
xor
jg
jnp
je
sub
addr16
fucom
(bad)
xor
leave
retf
aam
push
popa
push
jne
sub
push
xor
pop
test
xlat
arpl
mov
mov
jle
jle
test
out
pop
lods
scas
cwde
jo
xor
jecxz
aam
fdivr
mov
mov
jae
daa
xlat
fimul
mov
mov
cmp
daa
mov
ja
mov
lods
popf
popf
mov
mov
pusha
fcomi
push
fstp
xlat
ret
push
das
push
jecxz
fsubr
add
push
pop
jae
add
(bad)
sbb
xchg
pushf
xchg
mov
adc
xor
xlat
fnstcw
(bad)
push
inc
inc
xor
adc
and
sub
movs
mov
mov
sub
out
ds
xlat
shl
dec
das
xor
push
mov
xchg
mov
movs
sub
xchg
xchg
jnp
jp
mov
xor
in
mov
fsub
pop
fs
xor
addr16
(bad)
out
out
jl
fwait
jl
sub
mov
dec
dec
push
loopne
fdivr
jecxz
cmp
scas
jnp
call
xchg
jp
pop
jp
jge
cs
dec
imul
hlt
loop
mov
das
sub
out
push
xchg
nop
xchg
mov
call
jp
call
cmp
mov
pusha
loop
mov
das
gs
inc
add
out
jg
jb
mov
xchg
xchg
cmp
inc
push
sub
xor
jg
fwait
test
sbb
loop
in
aad
das
dec
inc
inc
xor
push
jo
pop
jno
pop
sti
jg
xor
cmp
inc
inc
arpl
push
push
jo
unpcklps
xlat
ins
std
outs
ins
inc
sub
pop
loop
push
nop
pop
cmp
std
(bad)
outs
test
cwde
mov
sub
(bad)
out
fild
pop
test
cs
sub
inc
in
xor
push
cmps
push
inc
sbb
outs
dec
xor
es
fstp
fiadd
xor
inc
and
pop
in
nop
sti
fistp
xor
aaa
dec
dec
xor
and
jns
es
das
sbb
movs
retf
sub
shl
arpl
xor
xor
inc
xor
push
das
and
xor
xor
ss
adc
loop
fimul
jg
pop
dec
push
adc
xor
outs
push
sub
sub
data16
das
xor
fldcw
dec
add
add
imul
ins
iret
fstp
sub
and
sub
addr16
mov
das
push
xor
mov
mov
push
ja
push
div
pop
call
outs
outs
pop
cmp
mov
inc
xor
push
pop
jmp
data16
push
das
pusha
or
call
dec
pop
jb
popa
xlat
enter
cs
xor
mov
data16
adc
loope
mov
jmp
sub
jge
dec
pop
add
das
(bad)
repnz
ins
dec
ss
mov
(bad)
in
in
in
imul
sbb
pop
dec
inc
pop
inc
test
xchg
outs
scas
das
push
adc
retf
les
lock
add
dec
sbb
sub
sbb
xchg
sub
cdq
mov
xchg
pop
out
mov
das
mov
pop
nop
sub
dec
pop
pop
jno
xchg
mov
aam
xlat
sub
mov
out
sahf
mov
in
add
cdq
mov
dec
cmp
pop
pop
jl
das
xor
shr
jp
test
pop
(bad)
jmp
addr16
test
cmp
jge
lea
sti
push
xchg
int
pusha
mov
enter
sbb
mov
add
out
jmp
mov
pusha
xor
popa
jnp
pop
cwde
pusha
ins
ins
cmp
lds
pop
or
imul
jg
xlat
add
xor
aaa
bsr
pop
int
xor
xor
out
out
out
mov
(bad)
fcomp
mov
mov
mov
cs
mov
mov
lock
fdivrp
pop
xor
lods
test
mov
xor
mov
sbb
outs
leave
fstp
shl
cmc
jmp
push
test
lods
jae
popf
fist
int
loop
xchg
mov
push
lock
lods
mov
pop
add
and
int
pop
fadd
jp
add
repz
cld
out
lock
xor
test
xor
shl
jmp
icebp
(bad)
test
cs
mov
fisttp
or
icebp
das
into
push
ss
shl
ins
in
or
add
icebp
ror
rol
mov
push
add
div
xor
into
mov
mov
iret
add
mov
sub
mov
sub
add
pusha
and
jo
neg
dec
pusha
push
inc
sub
adc
aad
in
cmps
add
lea
stos
mov
loop
dec
das
aad
jne
sub
xor
(bad)
adc
inc
mov
mov
pop
inc
outs
jne
out
mov
(bad)
ret
fnsave
sub
fdiv
outs
cmc
add
mov
jae
cmp
aaa
or
dec
fnstsw
(bad)
xor
push
das
mov
pop
mov
or
sub
(bad)
add
sub
dec
add
sub
fild
dec
xor
pop
xor
addr16
aas
(bad)
cwde
out
(bad)
out
(bad)
push
cmp
dec
sbb
scas
scas
add
add
js
dec
jle
inc
xchg
outs
mov
add
test
into
sub
jne
mov
xchg
pop
ins
sbb
add
loop
mov
add
out
je
mov
test
cmp
or
mov
push
shl
jg
mov
fmul
add
or
ret
in
fild
push
inc
mov
jae
push
add
jno
outs
push
outs
(bad)
ss
xlat
and
jo
loop
sbb
mov
pop
mov
xchg
rep
(bad)
sub
sar
stos
xchg
add
mov
adc
daa
shl
stc
icebp
xor
sbb
inc
lahf
shl
ret
inc
inc
(bad)
jg
cmps
pop
aaa
push
jl
jbe
loope
mov
push
pop
aaa
sub
and
fadd
add
mov
in
mov
mov
add
(bad)
xchg
dec
xchg
aaa
push
add
xor
xchg
mov
popa
add
xchg
xchg
mov
mov
in
test
imul
mov
add
fistp
mov
ret
enter
int
jnp
or
std
push
add
xchg
call
ins
pop
or
jnp
xchg
add
mov
add
mov
movs
add
mov
add
shr
in
jbe
dec
xor
icebp
mov
sbb
add
and
pop
out
ins
sub
outs
outs
addr16
retf
sar
leave
shr
in
outs
jg
pop
add
sahf
jbe
ret
cmps
add
shl
aam
mov
test
int3
psrad
inc
loope
cmc
out
pop
out
in
(bad)
loopne
movs
ja
arpl
mov
(bad)
in
loopne
out
outs
outs
ins
and
imul
sbb
rol
sti
mov
shr
fsubr
in
(bad)
inc
dec
inc
inc
mov
cmp
addr16
pop
mov
and
addr16
xchg
pop
cld
adc
mov
pop
test
addr16
sub
into
and
sbb
sbb
xor
adc
icebp
das
imul
add
xchg
dec
mov
js
frstor
sar
jns
jae
mov
jbe
jg
sub
add
lahf
sbb
imul
shl
loope
inc
push
loope
jne
inc
shr
mov
data16
ret
out
cmps
(bad)
lods
or
jmp
int3
pop
xor
ins
fwait
sub
push
das
fadd
setl
sub
(bad)
test
and
pop
mov
cmps
mov
pop
(bad)
sub
jecxz
sub
dec
mov
pop
mov
fild
ror
imul
dec
dec
inc
add
jae
lea
(bad)
dec
lods
mov
lods
mov
aas
xor
fld
push
jg
add
adc
popf
jle
fild
inc
fwait
mov
add
stc
add
or
(bad)
daa
cmp
mov
call
add
inc
pop
pop
and
sbb
pop
pop
daa
sbb
and
pop
imul
(bad)
fwait
mov
in
inc
scas
nop
xchg
inc
(bad)
fcmovnbe
xlat
aad
sbb
and
test
push
js
outs
fnstsw
fbld
(bad)
fld
not
and
inc
inc
scas
cmp
dec
dec
dec
cmp
(bad)
in
retf
mov
cs
nop
cmp
push
test
push
es
and
and
push
push
inc
pop
cmp
ss
sti
inc
fild
(bad)
fsub
fisub
call
sbb
das
bound
mov
lods
mov
mov
and
(bad)
pop
pop
sbb
inc
cmp
inc
jne
addr16
push
mov
jmp
popa
sbb
inc
jg
push
add
mov
arpl
outs
jmp
jmp
inc
cmp
push
inc
xchg
xchg
lahf
test
xchg
cmps
sahf
xchg
lea
xor
jmp
cs
(bad)
(bad)
cmp
imul
xchg
cmp
jg
xor
sbb
adc
(bad)
(bad)
out
pop
sub
push
pop
dec
or
gs
inc
imul
dec
dec
xor
out
(bad)
xchg
sub
jle
xchg
imul
cmp
sub
mov
mov
pop
jp
xor
jmp
imul
sub
cmp
push
call
imul
dec
cmp
(bad)
adc
pop
ins
outs
jle
push
ds
out
out
ds
sub
inc
pop
mov
leave
leave
sbb
cli
out
out
add
imul
or
push
xchg
fs
inc
pop
dec
dec
mov
aas
std
mov
fstp
dec
pop
pusha
push
xor
jns
mov
mov
ret
sbb
push
repnz
push
push
and
xchg
add
fsub
dec
pop
dec
xor
xchg
sti
(bad)
mov
push
je
jbe
jl
jg
sahf
sahf
xchg
xchg
cmp
pop
sbb
fdivr
push
sbb
arpl
mov
(bad)
aas
div
jle
ins
xor
int
pop
pop
or
icebp
stc
std
sysexit
xor
cmps
sub
xchg
inc
xchg
dec
inc
mov
imul
repz
std
sti
add
lahf
cwde
and
ds
not
pop
(bad)
pop
adc
cmc
and
clc
pop
test
mov
(bad)
and
mov
xchg
jmp
inc
adc
div
hlt
test
sub
call
std
add
fistp
or
cmc
hlt
sti
xchg
std
or
mov
(bad)
into
jl
adc
in
test
stos
rcr
mov
xchg
and
adc
int3
add
mov
leave
sub
daa
daa
adc
jmp
out
aam
ret
mov
jg
and
push
adc
sbb
ja
jg
push
enter
dec
fcom
lock
fld
cli
mov
ins
push
repz
jl
mov
xchg
bound
add
bound
mov
sbb
mov
xor
and
jl
push
add
or
(bad)
iret
out
add
mov
loopne
fs
out
mov
popa
fucomi
int3
(bad)
mov
lds
bound
shr
ins
adc
pop
and
sub
inc
adc
icebp
mov
psubd
mov
dec
xor
sbb
pushf
pop
mov
or
out
mov
repnz
mov
mov
pop
inc
outs
jne
repnz
mov
mov
xchg
inc
sub
mov
mov
retf
xchg
jle
test
add
jno
(bad)
loopne
imul
pop
mov
jno
cs
dec
mov
mov
fisubr
retf
mov
(bad)
mov
out
test
xor
fidiv
mov
fincstp
jecxz
ret
arpl
push
imul
outs
adc
cmp
mov
retf
aam
aad
iret
adc
cs
push
dec
es
mov
jge
ins
dec
fdivr
loopne
lahf
into
imul
adc
mov
ror
mov
hlt
mov
out
vsubsd
stc
fcmovne
jae
jnp
dec
ins
add
cmps
in
xchg
(bad)
addr16
dec
xchg
mov
loop
sar
clc
(bad)
(bad)
cld
and
out
mul
fldln2
inc
frstor
int3
in
imul
outs
aas
in
xor
inc
dec
out
xchg
repz
cdq
in
or
or
push
add
push
mov
jo
cs
jmp
jbe
jp
mov
bound
push
mov
ror
inc
jle
sub
pop
mov
adc
inc
movs
push
pop
mov
aaa
aam
inc
push
fstp
pop
pop
daa
pop
xchg
hlt
jbe
gs
push
sub
bound
push
stos
test
inc
stc
mov
mov
loopne
mov
pop
call
add
scas
xlat
daa
sbb
das
pop
sar
lea
mov
emms
cdq
sbb
mov
movs
fistp
fisttp
mov
jg
das
push
inc
push
pusha
std
pop
sbb
das
adc
jnp
or
mov
inc
sbb
push
add
daa
jle
mov
lods
add
lods
pop
mov
popa
nop
jbe
push
push
sub
xchg
xchg
mov
aas
call
cmp
sbb
cdq
xchg
xchg
lods
and
sub
inc
fwait
lea
rcr
(bad)
cvttps2pi
sub
(bad)
jmp
popf
call
jae
ds
push
sahf
mov
aas
cmp
pop
loopne
lods
ss
xor
hlt
lods
adc
sbb
(bad)
jg
jg
and
arpl
push
inc
push
inc
dec
xor
es
(bad)
inc
pop
ins
inc
push
pop
bound
and
xchg
cmps
or
dec
dec
imul
pop
add
js
pop
push
xor
add
cmps
lods
add
cld
lahf
cld
cvtpi2ps
mov
mov
neg
and
ja
jb
mov
and
sub
push
sbb
add
dec
shl
sub
ss
aaa
daa
sbb
or
add
mov
pop
stos
adc
xor
inc
push
push
cmps
jmp
shr
in
jnp
call
jecxz
sbb
pop
sar
(bad)
jg
or
scas
sub
add
xor
aaa
adc
stc
aaa
adc
(bad)
aaa
mov
mov
adc
(bad)
cli
xor
call
or
ret
add
xchg
cmps
pop
(bad)
sub
mov
loop
adc
xchg
sub
add
call
std
aas
sbb
call
inc
push
xor
ret
jmp
mov
jmp
xchg
scas
inc
inc
pusha
inc
and
pop
add
cmp
(bad)
xor
add
or
adc
or
(bad)
jo
(bad)
dec
add
(bad)
fistp
inc
sbb
push
sbb
(bad)
out
nop
pop
cmc
xchg
pusha
(bad)
push
add
ss
jae
inc
fcos
or
(bad)
(bad)
jmp
xchg
retf
sub
sub
cs
shl
(bad)
ds
lods
inc
aas
mov
add
or
ins
nop
cmps
imul
add
xor
xchg
ss
sbb
pop
outs
mov
sahf
mov
add
in
mov
dec
js
push
inc
inc
xchg
jg
stos
enter
sub
in
jmp
loope
retf
in
psllq
das
push
out
inc
loopne
jecxz
mov
pop
or
cmp
mov
arpl
das
or
fistp
sbb
add
ds
and
cs
je
cmp
pop
xchg
retf
in
xchg
pop
xchg
dec
je
arpl
jnp
std
in
shl
cmps
(bad)
inc
enter
daa
(bad)
cmc
mov
mov
mov
faddp
in
(bad)
movs
(bad)
int
xor
in
pop
pop
addr16
movs
cs
or
mov
cld
mov
mov
jae
jecxz
jbe
fisttp
fs
jae
scas
push
cs
mov
mov
outs
mov
push
jo
(bad)
out
jo
bound
inc
outs
adc
mov
clc
fcomi
jmp
lods
sbb
lds
div
xor
fisttp
cs
cmp
push
je
arpl
mov
fs
movs
sbb
add
in
push
test
loopne
arpl
in
mov
cmps
mov
loope
repz
xchg
push
(bad)
in
mov
mov
aam
adc
add
fadd
mov
out
fld
mov
aam
(bad)
ffree
(bad)
mov
mov
call
mov
cld
mov
jmp
(bad)
mov
mov
cs
fcomp
sub
xor
add
adc
pop
jo
or
jb
out
cs
in
pop
mov
add
out
pop
mov
mov
mov
outs
outs
sti
sar
(bad)
(bad)
inc
stc
mov
pop
outs
add
jecxz
iret
fnstcw
mov
mov
in
pop
shr
rcl
xchg
or
jmp
loope
inc
cmp
adc
pop
idiv
xor
ficom
mov
icebp
ret
add
imul
dec
pop
mov
aaa
into
mov
pop
dec
ins
xchg
outs
ja
cmps
dec
(bad)
cld
pop
sti
std
sub
fwait
ins
std
sti
or
add
ins
fild
push
call
mov
jmp
pop
leave
test
in
std
ret
aaa
push
cmovl
pop
dec
sbb
pop
xor
push
fldcw
pop
mov
mov
or
(bad)
dec
scas
jl
retf
and
retf
scas
push
shl
cli
add
stc
sti
ins
mov
call
div
adc
jg
ficomp
call
mov
loop
dec
mov
(bad)
das
sub
retf
sub
xor
sbb
add
ror
out
(bad)
adc
xor
aaa
or
adc
jbe
adc
xchg
in
lods
lods
push
cmp
pop
jne
adc
jbe
add
jmp
leave
call
mov
cli
xchg
test
frstor
xchg
jl
idiv
cmc
mov
daa
clc
icebp
add
out
cmc
in
hlt
in
inc
movs
dec
xlat
out
adc
shl
mov
dec
sbb
and
pop
sub
shl
xor
(bad)
mov
cmp
and
push
sub
xchg
sub
sti
add
xchg
fucomi
ins
jbe
call
inc
outs
imul
push
das
cmc
jmp
ds
test
push
jnp
add
outs
and
xchg
out
int
mov
scas
(bad)
repz
add
icebp
xor
cld
jmp
mov
shl
xchg
mov
pop
sub
loopne
and
xlat
or
popf
inc
or
inc
mov
sub
pop
(bad)
mov
aas
pop
mov
cmp
fs
pop
xor
adc
in
addr16
mov
hlt
in
sbb
std
and
repnz
outs
in
stc
scas
repnz
cmc
out
in
in
int
mov
call
std
jmp
xlat
cs
fmul
sbb
(bad)
jmp
mov
mov
xchg
scas
xchg
pop
mov
sub
rcr
outs
pop
sub
les
sbb
retf
cmps
add
push
das
outs
outs
ins
mov
xor
sbb
retf
jnp
sbb
pop
inc
rcr
mov
neg
bnd
scas
jmp
adc
lock
call
mov
cmps
imul
jecxz
mov
pop
pop
jb
lock
out
jecxz
loopne
lock
in
mov
push
iret
mov
jno
mov
jne
push
nop
lahf
sbb
das
and
and
pop
mov
push
pop
add
call
xchg
adc
(bad)
pop
mov
inc
pop
mov
pop
or
dec
sbb
mov
fisttp
xchg
icebp
out
in
jbe
mov
mov
fild
shl
(bad)
iret
sti
in
jecxz
or
pop
icebp
mov
loop
mov
dec
xlat
enter
mov
mov
lods
stos
inc
mov
jae
lahf
rol
mov
ret
scas
mov
sub
loop
sbb
pop
pop
mov
or
scas
pop
fisttp
aaa
mov
mov
sub
push
inc
in
sar
rcl
in
cld
out
sbb
out
loop
mov
ja
popa
scas
scas
pop
xor
xchg
fidivr
jmp
ret
mov
in
loopne
xor
(bad)
(bad)
mov
(bad)
sbb
mov
retf
mov
mov
test
mov
shl
jmp
cdq
or
fucomi
call
stos
jae
test
mov
retf
aaa
dec
xchg
mov
jnp
clc
lea
add
jne
and
jo
sti
pop
xchg
stos
dec
cs
push
and
ficomp
leave
add
sub
leave
xor
jnp
rol
or
cld
aam
xchg
fiadd
jnp
or
out
aas
lods
fs
popa
mov
mov
pushf
fstp
pop
fadd
div
call
mov
jb
fcmovne
rol
retf
mov
mov
test
stos
mov
test
pop
xchg
jns
mov
test
sahf
fistp
mov
pop
std
les
jg
jbe
xchg
dec
add
sbb
add
(bad)
sub
push
das
or
dec
sub
lods
jecxz
rcl
in
movs
jae
mov
xor
(bad)
(bad)
aas
(bad)
std
in
ss
daa
sti
loopne
iret
mov
pop
xchg
clc
pop
call
pop
sahf
dec
and
div
dec
pushf
jae
mov
lahf
retf
push
outs
mov
lds
or
mov
jbe
ja
mov
lods
call
pop
outs
jnp
lea
imul
pop
jmp
(bad)
iret
lods
xlat
call
adc
ret
or
outs
outs
adc
lahf
cmp
aas
mul
sub
pop
pop
fadd
inc
inc
movs
push
jecxz
mov
mov
pop
jnp
mov
retf
jae
cli
fnstenv
sti
fmul
iret
xlat
pop
(bad)
xchg
idiv
fsubp
add
test
push
mov
in
mov
inc
and
or
je
popf
push
repz
aas
leave
xchg
sbb
pop
outs
outs
(bad)
out
ret
scas
inc
retf
mov
(bad)
mov
stos
mov
ja
dec
jmp
fwait
jmp
cmps
xchg
das
mov
in
cwde
in
bnd
ins
sbb
mov
mov
dec
aaa
iret
aaa
and
or
add
mov
sub
and
dec
mov
inc
aas
inc
fsubr
(bad)
add
imul
dec
mov
pop
xor
cmps
dec
ret
lods
mov
cmps
fcmovnbe
mov
iret
ret
in
jbe
in
imul
add
iret
jbe
pop
ja
add
pop
loop
xor
scas
aaa
sbb
cmp
xchg
sub
mov
xchg
push
(bad)
mov
xchg
retf
inc
(bad)
lods
jmp
loop
cwde
xor
popf
aaa
int
in
xchg
jnp
mov
outs
fcmovnu
loope
and
jbe
jmp
cdq
mov
je
and
xor
adc
icebp
outs
das
shr
dec
out
bound
pop
lahf
dec
ret
aaa
not
daa
aas
ds
jbe
icebp
ror
mov
arpl
outs
mov
add
lods
cs
leave
(bad)
mov
add
pusha
imul
adc
and
jmp
or
or
bound
adc
sub
fdivr
sub
xor
inc
sub
arpl
mov
sti
rcl
mov
sahf
mov
outs
or
adc
jns
adc
jg
or
sbb
sbb
sbb
jmp
jg
cld
fcmovnu
test
imul
movs
inc
daa
cwde
inc
pop
cdq
inc
adc
inc
lea
nop
inc
imul
loope
sub
in
mov
inc
mov
fld
sbb
scas
retf
les
or
mov
fld
pop
sbb
jmp
cmp
fsubr
je
arpl
jne
ss
outs
pop
ja
fisttp
lahf
fsubr
fidiv
fwait
test
xchg
jge
mov
mov
mov
bound
pusha
pop
das
mov
xchg
stos
jmp
mov
xlat
sub
mov
xor
jmp
jns
fwait
jbe
aaa
(bad)
js
mov
inc
jnp
mov
pop
pop
pop
pop
mov
lods
in
mov
mov
lock
icebp
mov
push
rol
outs
xor
mov
and
outs
and
and
jmp
repnz
mov
add
outs
xlat
fisubr
sub
mov
sub
fisubr
fld
ja
push
add
mov
popf
mov
mov
fiadd
mov
adc
fdivr
(bad)
cmp
mov
popf
scas
pop
sti
rcr
out
mov
xor
jno
jmp
(bad)
sbb
shl
les
cmp
xchg
in
ins
mov
test
pop
movs
ret
jmp
lea
out
ret
or
cs
mov
sbb
xchg
mov
and
in
ret
jae
and
js
xchg
js
mov
push
add
pop
(bad)
sbb
adc
mov
imul
outs
push
aas
lahf
div
in
in
cmp
adc
outs
jecxz
je
mov
popf
sbb
(bad)
(bad)
xor
sbb
aas
outs
jl
enter
sub
(bad)
jmp
xor
mov
xchg
mov
addr16
push
ret
xchg
xlat
mov
mov
popf
inc
imul
jmp
inc
cmps
inc
jnp
cmp
jecxz
cmp
lea
mov
sub
test
fistp
js
mov
sub
mov
(bad)
nop
jne
cmps
mov
imul
shl
repz
mov
outs
or
push
pop
mov
push
ja
ror
scas
(bad)
sbb
mov
inc
push
mov
aas
ins
lods
add
mov
fbld
jbe
pop
fstp
repnz
and
and
pop
xor
xor
retf
adc
pop
xchg
xlat
retf
xor
sub
(bad)
jecxz
xor
mov
imul
ins
inc
add
mov
aas
sbb
lahf
scas
pop
xor
sub
fcomp
cmp
pushf
inc
pop
ins
dec
(bad)
frstor
outs
inc
cmc
mov
aas
in
ins
shr
jmp
xchg
mov
movs
dec
sbb
dec
mov
aaa
mov
in
pop
mov
pop
pop
jg
cli
pop
mov
jae
leave
aaa
sbb
mov
xor
arpl
outs
xor
pop
push
jae
xchg
addr16
jb
xlat
out
lods
sti
les
loope
ror
mov
xor
in
int3
mov
xchg
repz
aaa
loop
pusha
retf
lahf
mov
push
or
mov
sub
(bad)
pop
outs
cmp
lods
enter
dec
mov
(bad)
in
xchg
mov
add
es
out
dec
mov
sub
je
mov
aaa
mov
mov
pop
pcmpeqb
loopne
or
add
stos
or
add
js
shl
inc
out
inc
push
mov
jne
mov
pop
or
mov
ret
(bad)
jb
jnp
icebp
int3
repz
jnp
(bad)
mov
aaa
fmul
imul
fwait
sti
movs
jle
mov
fstp
iret
cmp
jg
rcl
xor
mov
jb
mov
mov
lods
inc
sti
push
mov
xchg
and
xor
mov
xchg
neg
bound
push
xchg
imul
mov
je
mov
sbb
add
pusha
sub
dec
ins
aad
pop
cmp
inc
adc
mov
adc
pop
fs
ins
sti
or
loop
(bad)
(bad)
mov
jne
mov
mov
mov
jo
neg
into
ret
(bad)
aas
retf
stos
mov
ins
fld
mov
lods
xchg
imul
sbb
sub
scas
(bad)
ror
mov
jns
ret
(bad)
mov
fwait
fwait
das
jg
jo
cmps
jg
mov
in
mov
cld
in
pop
mov
dec
mov
ret
mov
mov
xor
inc
xor
ret
push
inc
repz
inc
xor
push
fs
cs
mov
(bad)
jno
ret
xchg
mov
int3
jbe
les
jae
je
xor
xchg
aad
in
pop
aad
cmps
ins
inc
mov
mov
add
push
xor
pop
jmp
vminss
ret
aam
iret
xchg
int
fstp
enter
cmps
mov
scas
mov
movs
mov
out
call
je
push
ret
retf
dec
mov
jmp
sti
imul
dec
out
pop
stc
jb
add
(bad)
in
shl
sbb
push
data16
pop
call
mov
ja
aaa
jg
out
push
pop
jo
jae
mov
div
or
arpl
loopne
daa
aad
fisubr
shl
aad
dec
pop
outs
cmps
ss
jmp
shl
iret
pop
xor
mov
les
inc
inc
dec
mov
test
mov
cwde
daa
xchg
jbe
pop
fld
(bad)
arpl
outs
mov
loopne
sar
push
leave
pop
dec
lds
adc
pop
loopne
dec
dec
xor
xor
add
xchg
cmp
mov
ss
imul
fmul
lods
adc
or
cs
jno
xor
lods
sahf
out
fcmovnu
not
les
jecxz
stos
loope
clc
in
add
adc
mov
push
aam
lods
iret
adc
fist
shr
out
in
cli
jns
ins
gs
das
(bad)
mov
fcom
popa
fadd
int3
mov
or
movs
add
mov
xchg
xchg
lss
push
mov
xchg
jb
inc
enter
pop
(bad)
push
mov
fst
inc
jnp
sti
rcr
(bad)
add
fsubr
mov
sub
or
jns
jp
add
fisttp
repz
scas
jmp
(bad)
jnp
stos
cld
out
add
scas
fstp
(bad)
in
ror
fwait
fwait
stos
loope
ret
sti
out
aad
cli
mov
rcl
int3
cmp
xchg
mov
xor
movs
scas
mov
jecxz
cdq
cmp
mov
pop
ficomp
rcr
int
push
adc
mov
dec
sbb
idiv
push
adc
push
mov
inc
test
outs
xor
mov
mov
sti
pop
mov
or
mov
repz
add
out
in
add
in
mov
repnz
std
add
adc
ret
out
out
loop
stos
je
sub
fcmovb
(bad)
mov
retf
call
pop
clc
aam
or
jne
(bad)
(bad)
cmps
shr
fisttp
arpl
(bad)
loopne
arpl
mov
cmp
pop
in
pop
mov
jae
mov
xchg
adc
jnp
sub
test
sbb
test
jbe
fcmovne
xchg
(bad)
test
leave
mov
ds
mov
cmc
hlt
xchg
inc
outs
sbb
hlt
icebp
shl
add
icebp
add
xlat
add
jmp
enter
out
out
jecxz
(bad)
in
scas
add
inc
xlat
xchg
ror
iret
(bad)
iret
mov
mov
(bad)
je
fsub
jb
or
dec
gs
(bad)
inc
das
jae
ficomp
in
push
cmp
dec
mov
fcomip
sbb
add
or
aam
pop
arpl
cld
push
dec
retf
xchg
in
lods
mov
add
or
xchg
lahf
cmps
mov
out
jnp
and
xlat
(bad)
clc
cmc
add
test
ret
in
enter
sub
and
(bad)
(bad)
idiv
fcmovnb
xor
(bad)
(bad)
fdiv
or
mov
fistp
jmp
aas
shl
arpl
mov
mov
scas
adc
(bad)
(bad)
jecxz
outs
test
xor
mov
outs
mov
mov
jg
call
fld
(bad)
xchg
lahf
mov
dec
test
(bad)
cmp
imul
hlt
add
repz
ret
rcl
dec
shr
in
in
rol
sub
test
loope
test
xor
fsubr
outs
jb
div
jo
adc
fcmovnu
loopne
push
push
scas
dec
imul
adc
ret
mov
arpl
xchg
fwait
in
outs
sbb
test
mov
pop
lahf
(bad)
mov
ret
fwait
mov
setl
add
repnz
retf
(bad)
cmc
test
ins
les
or
test
not
ins
jnp
lahf
sahf
push
cdq
mov
icebp
jnp
(bad)
fucomi
push
jne
loop
mov
push
sub
(bad)
xor
add
push
or
aas
dec
inc
fld
or
xchg
fild
pop
jle
mov
lahf
mov
(bad)
mov
add
shl
rcl
pop
cmc
call
sub
hlt
enter
push
xchg
(bad)
mul
(bad)
jmp
push
repz
lods
test
scas
(bad)
fnsave
xchg
add
ret
sub
pop
mov
jb
mov
sbb
retf
mov
mov
jmp
outs
mov
xor
cmp
stos
ret
shr
add
jbe
stos
xchg
cmps
lods
(bad)
mov
push
mov
movs
das
test
retf
mov
iret
xlat
rcl
fldenv
mov
(bad)
mov
scas
mov
(bad)
mov
lea
frstpm(287
ret
test
cmp
icebp
add
outs
fsubr
jae
push
out
sbb
mov
sub
fcomi
daa
xchg
enter
push
push
pop
lods
mov
mov
stos
scas
stc
mov
lods
mov
pop
pop
cs
pop
std
shr
cmps
movs
mov
mov
fcmovnu
mov
pop
mov
pushf
add
cmps
push
mov
in
in
cdq
in
xchg
(bad)
jmp
mov
in
or
xchg
or
jnp
mov
xchg
adc
psrlq
lods
push
xchg
aas
and
add
(bad)
iret
add
mov
scas
mov
push
call
xchg
arpl
test
mov
call
xlat
call
mov
out
out
fisttp
call
sub
and
mov
scas
and
add
aad
fdiv
pop
inc
xchg
xchg
jne
pop
enter
pop
ret
leave
mov
out
sar
scas
mov
pop
mov
jmp
mov
or
shl
sbb
xchg
ja
outs
xor
inc
and
push
pop
out
add
lods
dec
add
mov
add
lahf
mov
js
jbe
pop
jnp
push
xrelease
add
mov
into
ins
ins
mov
mov
retf
arpl
push
sub
aad
ficomp
mov
jnp
je
cmp
outs
adc
and
nop
jg
cmp
das
repz
or
xor
sbb
mov
xor
pop
inc
add
push
cmps
cs
sti
jg
gs
dec
inc
sub
cmp
adc
bound
mov
add
xchg
sbb
sbb
xchg
(bad)
cmp
push
mov
or
out
mov
out
inc
fist
pushf
mov
xor
and
add
add
jb
loopne
in
or
xchg
mov
pop
fsub
xchg
add
sub
add
scas
iret
adc
(bad)
out
ja
and
and
jg
add
pop
jb
mov
mov
add
adc
fsub
mov
adc
sub
xchg
pop
xchg
lods
loopne
push
xor
gs
xchg
gs
add
push
or
std
(bad)
jg
pop
or
push
mov
inc
es
dec
sub
jmp
mov
sub
adc
repz
sbb
sub
adc
ror
and
call
jmp
adc
and
mov
pop
inc
movs
call
sub
jno
jmp
outs
pop
push
stos
jl
(bad)
in
cmp
mov
mov
fwait
sbb
xchg
gs
ficom
or
call
add
add
cmp
sbb
outs
xchg
mov
push
mov
fadd
sahf
popa
jnp
notrack
push
lds
pop
loopne
cmps
(bad)
or
sti
sub
addr16
jmp
push
call
and
ror
xchg
aas
dec
call
adc
(bad)
aas
and
mov
mov
cs
add
mov
imul
idiv
div
inc
aaa
mov
pop
mov
xchg
mov
and
fwait
and
push
push
(bad)
pop
inc
dec
inc
(bad)
cmp
sbb
or
pop
and
ret
push
fwait
pop
push
sbb
sbb
in
sti
ret
ffreep
ins
cmp
imul
cmc
outs
mov
cmp
repz
pop
jmp
pushf
jl
movs
mov
test
sub
pop
bound
xchg
mov
mov
jmp
cs
aad
pusha
sub
inc
stos
cmp
nop
mov
or
or
add
ins
cmp
cmp
pop
call
mov
fidivr
xchg
mov
out
retf
xor
loop
jmp
jle
add
lock
mov
push
das
jecxz
(bad)
mov
mov
xchg
(bad)
(bad)
call
(bad)
icebp
or
fwait
sub
cmp
je
ja
or
std
jg
and
push
cli
std
jg
jnp
dec
ja
mov
sbb
(bad)
mov
add
neg
stc
hlt
sti
clc
jnp
retf
stc
pop
lods
xchg
scas
mov
pusha
test
mov
sti
shl
push
inc
inc
dec
std
sub
ins
and
sbb
push
out
and
imul
mov
cmp
jp
jmp
jb
sub
outs
out
fst
pop
cmc
dec
pop
lock
adc
das
shr
jmp
icebp
out
out
lock
lods
jmp
mov
adc
loope
cmc
neg
inc
sub
cli
push
pop
test
inc
mov
pusha
das
frstor
and
pop
arpl
popa
cmp
test
idiv
(bad)
jg
xchg
ror
add
sti
arpl
add
push
loop
push
dec
ja
in
loop
aad
test
sub
mov
fild
mov
cwde
pop
push
xchg
adc
loopne
and
cmp
shl
(bad)
pop
fs
sbb
add
stos
xchg
repz
daa
(bad)
pop
xlat
jne
das
imul
pop
(bad)
jmp
mov
fistp
inc
inc
call
out
mov
(bad)
jae
pusha
in
add
bnd
aam
push
and
fxch
push
int
icebp
(bad)
mov
dec
xchg
mov
mov
jmp
lahf
sub
cli
invd
push
call
pop
inc
addr16
sub
cld
mov
sub
and
add
cld
out
push
outs
add
jecxz
or
lea
cmc
pop
sub
call
shl
pop
in
mov
pop
cli
xor
iret
dec
les
inc
mov
pop
dec
nop
ja
jmp
cld
(bad)
lea
or
mov
inc
(bad)
sub
leave
jecxz
inc
sti
stos
(bad)
fidivr
push
xor
mov
repz
not
inc
mul
push
jae
sti
pop
xlat
pop
add
adc
adc
mov
xchg
sbb
sbb
cmps
out
retf
mov
or
rcl
xchg
dec
iret
call
retf
jno
in
push
sbb
cwde
scas
mov
aaa
pop
(bad)
call
fs
js
mov
xor
mov
stos
inc
push
inc
push
push
mov
fsubr
aas
shr
cld
mov
je
sbb
scas
out
jp
or
aam
or
or
lahf
outs
xor
mov
add
aaa
mov
jp
mov
lahf
fsubrp
inc
add
jnp
fwait
call
sub
pop
fidivr
retf
ds
or
adc
push
jle
je
and
sub
mov
inc
ret
movs
xor
mov
sub
stos
call
and
mov
jmp
jmp
or
sbb
adc
sti
push
mov
add
push
sub
mov
mov
jg
mov
xchg
cmp
lods
or
sub
pop
push
push
jg
or
jmp
add
add
sub
cld
test
retf
inc
sub
mov
adc
add
xor
jbe
fiadd
jg
jns
out
loop
xchg
stos
outs
ja
sbb
stos
fiadd
outs
and
pop
fisubr
pop
sbb
jnp
shr
(bad)
and
loop
inc
cli
pusha
jns
(bad)
mov
xchg
scas
pusha
xor
xchg
(bad)
aaa
cmp
push
fidivr
cmp
das
mov
ins
test
call
out
mov
test
or
xchg
ds
inc
js
test
pop
jg
pop
(bad)
and
pop
gs
dec
aas
cmp
add
(bad)
jnp
sbb
shl
(bad)
mov
loopne
mov
mov
jl
xchg
addr16
jns
xchg
ss
xchg
and
sar
adc
jecxz
test
cmc
push
mov
mov
mov
inc
inc
mov
xchg
fwait
dec
shr
cmp
add
cmps
push
ror
mov
add
adc
xor
or
sub
jmp
mov
cdq
cmp
or
aaa
dec
xchg
jae
mov
and
jg
jg
aad
xor
sub
test
fld
cmp
lahf
mov
imul
mov
retf
pop
mov
jmp
imul
push
ret
ret
jbe
test
pop
outs
das
mov
lahf
sbb
lahf
stos
sub
mov
fnclex
lahf
stos
outs
fdiv
xchg
imul
xchg
cmp
push
mov
and
adc
jg
movs
mov
pop
push
push
fs
call
mov
ret
add
mov
jo
aad
add
ror
rol
cmps
dec
sbb
jne
sahf
xlat
fistp
lahf
int
stos
mov
inc
loope
mov
mov
jg
daa
mov
fdivr
mov
jae
push
in
push
pop
stos
mov
inc
xlat
scas
mov
ins
sub
jg
fidivr
and
mov
std
push
push
ins
(bad)
arpl
mov
aam
mov
jg
retf
adc
xlat
clc
loopne
(bad)
mov
mov
hlt
xlat
(bad)
(bad)
jmp
(bad)
in
das
ret
clc
shl
mov
jnp
ret
sahf
xor
arpl
iret
dec
xchg
aam
out
out
inc
shl
sbb
mov
and
sbb
in
push
pop
outs
imul
js
popf
xchg
sub
xchg
(bad)
sbb
push
mov
call
push
sub
fdivr
int3
jmp
lea
ja
pop
out
ret
fisubr
clc
sar
popa
fisttp
dec
pop
xchg
fidiv
mov
dec
stos
fldenv
and
pop
or
pop
in
add
addr16
pop
cmps
add
or
push
fcmovnb
mul
in
jmp
in
movq
jne
add
rcl
fadd
jg
add
lods
fcomi
cmc
les
xchg
jne
call
cs
movs
fisttp
pop
out
dec
xor
sbb
das
sbb
sar
add
inc
in
imul
in
mov
mov
xchg
fbld
je
in
in
div
mov
cld
bnd
call
add
jg
xlat
mov
add
push
dec
xchg
sub
arpl
imul
xchg
je
pop
sti
clc
and
adc
or
imul
xor
xchg
popf
addr16
inc
jecxz
pop
ins
(bad)
(bad)
aaa
call
mov
outs
inc
adc
arpl
in
pop
inc
sbb
mov
shl
aaa
js
mov
mov
or
(bad)
bnd
in
mov
dec
dec
sub
aaa
sbb
stos
jg
in
jg
xchg
add
test
cmp
sti
sahf
lods
idiv
mov
push
sbb
xchg
outs
cdq
and
jmp
mov
xor
mov
mov
lahf
mul
fild
ins
imul
jg
mov
outs
jmp
cwde
out
sub
mul
mov
lods
dec
aaa
inc
int3
add
add
fbstp
add
push
cli
xor
out
mov
mov
stos
lods
jae
lods
pop
test
fcmovu
setg
jae
arpl
xchg
inc
jmp
test
add
repz
inc
add
js
push
imul
push
dec
aam
adc
xor
mov
popw
test
mov
mov
add
pop
ret
lods
dec
dec
sbb
adc
or
xor
sbb
fistp
sub
lock
aaa
(bad)
lods
outs
icebp
fild
ins
mov
xor
aas
faddp
sub
cmp
repz
outs
sbb
jge
sub
and
xchg
push
mov
imul
out
ret
push
rcl
mov
or
repz
pop
sub
xchg
jmp
es
cld
xchg
add
adc
jmp
dec
sub
out
push
aas
inc
stc
mov
rol
jg
jae
add
retf
test
push
dec
adc
daa
repnz
repz
stos
mov
sbb
daa
mov
mov
inc
sub
aas
adc
sub
dec
inc
add
daa
stc
dec
sub
jecxz
pusha
sti
pop
mov
aas
and
jnp
repz
mov
sbb
movs
mov
retf
pop
cmps
loopne
pop
mov
pop
loopne
add
ins
add
inc
in
out
ins
rcl
pop
addr16
outs
fadd
das
and
fld
in
add
adc
shl
xor
inc
nop
repz
sub
xor
dec
cmp
shl
das
lock
xor
aas
bound
inc
inc
cmp
sub
stos
or
call
cmp
dec
aas
aaa
xor
shr
push
dec
push
mov
push
inc
(bad)
mov
arpl
fistp
bound
icebp
inc
push
inc
imul
push
add
mov
xchg
lods
daa
(bad)
(bad)
cmp
(bad)
dec
inc
gs
sbb
push
cmc
dec
pop
push
inc
or
inc
ss
ja
cmps
push
lods
sub
imul
scas
neg
(bad)
push
jmp
dec
(bad)
sbb
cmp
push
lods
dec
dec
iret
stos
or
iret
push
pusha
push
stos
jae
push
push
in
push
cmp
push
sub
ret
aad
dec
xor
pop
inc
movs
popf
push
pop
ja
mov
outs
xchg
call
mov
xor
adc
nop
stos
mov
ins
push
mov
inc
das
mov
inc
inc
fdivr
outs
gs
xor
fiadd
push
out
push
pop
push
mov
push
mov
dec
inc
stos
push
stos
ret
mov
jecxz
push
pusha
jmp
jmp
js
cmc
push
das
pop
imul
stc
push
add
xchg
call
mov
xchg
and
push
(bad)
jmp
rcl
add
add
add
mov
imul
dec
aad
mov
fs
(bad)
jg
mov
cmc
inc
aas
pusha
in
push
xchg
push
push
mov
push
fcmovnu
aad
mov
or
(bad)
jmp
add
idiv
dec
push
iret
mov
mov
add
call
scas
test
std
ja
es
push
aas
inc
cmps
cmps
sbb
pop
dec
sbb
daa
lods
stos
rcl
imul
stos
pop
or
repz
shl
jo
stos
into
mov
mov
cmp
jg
sub
fnstenv
inc
xor
push
fld
sti
sub
add
call
add
or
xchg
inc
in
ret
push
test
stos
jmp
ss
(bad)
iret
pop
dec
ds
test
ins
push
das
call
inc
stos
push
jmp
jnp
and
add
add
mov
idiv
loopne
push
aaa
fdiv
sub
stos
push
or
inc
xor
fidiv
shr
cmp
add
add
inc
or
outs
addr16
push
add
inc
fbstp
jns
jmp
inc
xor
pop
dec
dec
mov
lea
ret
dec
add
mov
dec
add
add
inc
inc
call
inc
les
xor
cmp
pop
pusha
jmp
cmc
dec
mov
bound
outs
outs
push
pop
pop
inc
mov
inc
xor
mov
xor
sbb
push
and
add
xor
mov
sub
pop
shl
inc
and
jecxz
inc
add
inc
cmps
mov
sbb
stos
mov
lods
sbb
xchg
xchg
inc
pop
cmps
pop
jbe
adc
sbb
cmp
xor
loopne
lods
pop
mov
or
adc
jecxz
mov
or
lods
jp
movs
pop
xchg
inc
test
pop
das
std
push
xor
out
add
xchg
sbb
dec
idiv
and
add
xchg
add
adc
sbb
int
pop
mov
rol
add
paddw
add
cmp
and
mov
or
mov
jnp
mov
movs
das
nop
pop
scas
mov
add
push
aas
nop
inc
mov
cld
call
pushf
jl
cmp
daa
pop
mov
dec
xor
and
add
or
in
jl
mov
mov
cmp
mov
pop
lock
jne
out
dec
(bad)
(bad)
mov
popa
jb
loope
push
and
mov
xor
nop
out
iret
xor
jbe
dec
and
add
push
mov
sub
push
loop
mov
and
in
mov
hlt
mov
cmp
cld
mov
add
rol
mov
adc
loopne
sbb
call
(bad)
daa
ror
rcr
xor
push
sbb
cwde
push
fs
nop
adc
or
pop
cld
fs
dec
and
enter
add
sbb
xchg
lea
nop
adc
nop
xchg
pop
fwait
sub
hlt
test
scas
jb
cmp
enter
and
lock
nop
adc
inc
dec
push
fbld
out
jb
cmp
in
mov
in
cli
push
add
nop
adc
sbb
call
inc
dec
and
add
sbb
or
add
aaa
jl
and
nop
adc
adc
sbb
cmp
inc
addr16
int3
or
adc
je
in
repnz
je
daa
nop
adc
inc
mov
fcom
movs
popf
jo
jb
cmp
enter
aam
mov
adc
int
pushf
inc
dec
add
rcr
add
add
pushf
loope
call
xor
add
int3
seto
nop
cld
cwde
add
or
cld
pop
push
sub
or
ja
or
push
or
xchg
cmp
fbld
or
jge
push
push
and
dec
xor
push
or
push
push
push
xchg
cli
pop
sbb
dec
adc
mov
push
mov
push
or
xor
pop
pop
push
nop
inc
mov
mov
ret
repz
dec
xor
or
add
cs
aaa
dec
or
cmp
retf
fadd
aam
int3
enter
retf
(bad)
sar
push
sub
xor
(bad)
(bad)
rcl
fcmovnu
loop
push
push
retf
(bad)
pop
and
pusha
ror
mov
shl
aas
and
dec
cmps
mov
sbb
cmp
rcr
rol
dec
call
mov
push
or
fist
fiadd
mov
push
mov
add
fistp
mov
sbb
ret
and
cdq
ins
rcl
enter
call
sub
fnsave
push
enter
je
ror
aam
add
ins
push
mov
les
xchg
xchg
xor
adc
inc
or
and
dec
outs
dec
push
cmp
dec
add
push
dec
fcom
add
cmp
sahf
je
fwait
add
jge
lea
movs
and
jb
movs
or
xchg
fs
dec
enter
mov
movs
lahf
fmul
jg
mov
je
cdq
sub
sar
or
pop
movs
fcom
adc
push
outs
sbb
lods
sbb
mov
outs
mov
pop
pop
push
loopne
or
(bad)
scas
and
pop
jne
add
mov
gs
cmp
outs
repnz
jb
pmaxub
fcom
sbb
xor
jae
call
call
jb
sub
cmp
or
add
cmp
fisttp
or
sbb
add
mov
sar
jg
push
sub
push
cdq
idiv
shl
or
mov
pop
add
(bad)
xor
xchg
fimul
xchg
or
or
ss
ret
xor
or
push
add
xor
stos
or
cld
fadd
shl
add
mov
push
xchg
les
rcl
pop
mov
clc
push
cmovb
ins
aas
cmp
or
and
and
cld
push
ret
ret
push
sbb
mov
lock
jg
xor
in
xor
call
fisttp
mov
push
adc
fcmovnbe
mov
mov
retf
mov
jo
sbb
sbb
add
xor
repnz
(bad)
in
les
xor
xor
xor
pop
dec
cmp
cmp
xor
sbb
add
std
fs
fcom
shl
shl
xor
fs
xor
loope
data16
xchg
or
std
pop
inc
push
mov
push
lea
lahf
outs
popa
and
cld
inc
es
xchg
out
ins
sbb
mov
adc
xchg
test
jge
mov
and
int3
pushf
sub
(bad)
fs
dec
nop
sbb
pop
mov
int
mov
test
mov
adc
xchg
mov
mov
add
mov
and
and
mov
jae
sahf
nop
and
pop
inc
jb
pop
push
jecxz
pop
outs
push
loopne
sbb
push
pop
push
mov
loop
std
fidivr
dec
pop
lock
sub
and
add
cmp
inc
cwde
in
les
add
push
pusha
ret
add
or
in
mov
sar
add
dec
js
adc
leave
leave
or
xchg
pop
and
ficom
add
mov
popf
in
adc
dec
adc
xchg
adc
push
push
cs
and
(bad)
(bad)
les
xor
hlt
mov
mov
in
add
test
in
popf
or
inc
dec
push
or
or
les
int
jle
push
jecxz
js
or
dec
movs
fwait
inc
ins
lods
mov
mov
dec
iret
adc
leave
adc
loope
mov
sbb
or
add
jae
add
cld
cld
pop
jp
mov
adc
pop
pop
xor
test
cmp
cmp
xor
add
jb
add
inc
inc
call
or
add
cmp
cmp
pusha
sub
nop
xchg
data16
pop
push
test
and
push
mov
enter
pop
inc
cs
dec
cwde
jnp
aaa
xor
mov
cmp
or
sbb
xor
shr
mov
jmp
(bad)
mov
push
and
ret
mov
push
push
push
push
cmp
push
dec
dec
inc
inc
and
xchg
js
clc
cld
je
test
hlt
hlt
add
push
jbe
xlat
shl
adc
push
mov
sbb
dec
ins
push
cmps
dec
addr16
cmp
sub
cmps
cmp
push
add
imul
inc
lock
jb
adc
in
imul
dec
sbb
xor
adc
cmp
or
dec
dec
outs
xor
or
and
mov
mov
pusha
adc
das
jge
push
nop
add
sub
xor
enter
and
xchg
sub
outs
lds
inc
xor
push
and
jmp
mov
lds
inc
mov
or
test
sub
add
mov
dec
push
data16
pop
adc
(bad)
and
push
call
scas
adc
pusha
mov
int
pop
and
lock
and
and
cld
ins
mov
mov
adc
xchg
sub
inc
sar
paddq
xor
ror
nop
out
std
adc
and
adc
and
mov
and
enter
xor
sub
fsub
or
dec
leave
inc
and
and
sub
mov
mov
cmps
xor
push
jb
fsub
enter
fwait
in
and
and
in
fwait
fs
jmp
cdq
in
fwait
test
aam
out
push
or
add
mov
or
sub
xchg
add
add
in
cs
add
sbb
cmp
push
in
and
nop
jl
jecxz
jmp
and
shr
shl
dec
jbe
arpl
and
add
test
sbb
(bad)
xchg
xor
adc
mov
lods
jo
sub
retf
jne
jge
pop
inc
outs
cld
cmp
ret
add
xchg
inc
enter
mov
les
mov
ror
or
rcl
popa
push
jb
mov
in
enter
mov
mov
mov
push
ret
push
pop
jmp
sub
jb
mov
add
or
push
outs
jb
and
lock
inc
pop
mov
mov
mov
cmp
fs
pusha
ds
xchg
dec
push
mov
fstp
sub
sbb
pusha
mov
lods
xchg
mov
in
aam
jb
gs
mov
cdq
in
and
gs
xchg
add
sbb
pop
dec
cs
sub
mov
add
jg
fmul
xor
sbb
inc
cld
inc
enter
sbb
in
rol
(bad)
fild
lock
lea
leave
mov
lahf
int3
add
pushf
cwde
mov
enter
pop
dec
test
xor
inc
nop
mov
xor
dec
inc
pushf
xchg
xor
rcl
mov
int
pusha
int3
jo
in
push
inc
in
leave
push
inc
dec
cwde
push
adc
pop
mov
inc
pop
aad
in
lds
call
in
pop
dec
cld
js
inc
adc
or
aaa
xor
fidiv
adc
mov
mov
inc
mov
pop
mov
cmp
push
or
mov
pop
sub
outs
add
mov
or
and
bound
and
or
push
or
js
fild
xchg
push
pop
nop
dec
mov
popa
and
jp
add
and
cmp
add
fs
or
es
pop
mov
lods
pushf
loop
and
(bad)
shl
xor
and
add
sbb
ins
pop
(bad)
in
adc
cmc
lea
div
add
mov
sbb
inc
stos
cmp
or
cld
(bad)
in
repz
inc
bnd
repz
mov
push
and
xor
adc
cmp
sbb
pop
std
std
std
cld
sbb
sbb
cld
cld
cld
cld
sbb
sbb
cld
cld
cld
cld
sbb
sbb
cld
cld
cld
cld
sbb
sbb
cld
cld
cld
sti
sbb
sbb
sti
sti
sti
sti
sbb
sbb
sti
sti
sti
sti
sbb
sbb
sti
sti
sti
sti
sbb
sbb
sti
sti
sti
cli
sbb
sbb
cli
cli
cli
cli
sbb
sbb
cli
cli
cli
cli
sbb
sbb
cli
cli
cli
cli
sbb
sbb
cli
cli
cli
stc
sbb
sbb
stc
stc
stc
stc
sbb
sbb
stc
stc
stc
stc
sbb
sbb
stc
stc
stc
stc
sbb
sbb
stc
stc
stc
clc
sbb
sbb
clc
clc
clc
clc
sbb
sbb
clc
clc
clc
clc
sbb
sbb
clc
clc
clc
clc
sbb
sbb
clc
clc
clc
mul
sbb
add
fs
fs
push
inc
xor
fs
add
imul
movs
int
loopne
mov
mov
sti
sbb
jne
sbb
sbb
div
div
sbb
sbb
div
div
sbb
sbb
div
div
sbb
sbb
cmc
cmc
cmc
pop
cmc
sbb
sbb
cmc
cmc
cmc
cmc
sbb
sbb
cmc
cmc
cmc
cmc
sbb
sbb
cmc
cmc
cmc
cmc
sbb
sbb
hlt
hlt
hlt
hlt
sbb
sbb
hlt
hlt
hlt
hlt
sbb
sbb
hlt
hlt
hlt
hlt
loopne
sbb
hlt
hlt
adc
outs
lock
pop
xor
pop
jne
xchg
fcomp
gs
mov
mov
fwait
stos
inc
enter
push
fisubr
sub
dec
or
xlat
mov
loopne
mov
ins
xor
cmp
sub
sbb
loopne
cmp
dec
jae
and
and
imul
adc
and
add
enter
sub
xchg
inc
cmp
sub
and
retf
add
jo
inc
mov
push
sub
sub
pop
movs
cdq
inc
push
sbb
pop
in
xchg
cmps
dec
dec
inc
inc
sbb
or
cmp
xor
or
or
nop
xchg
in
and
push
sbb
or
push
adc
mov
sub
inc
push
sbb
add
in
mov
std
inc
lock
or
iret
add
std
in
add
inc
push
mov
xchg
gs
rcl
enter
inc
xadd
xor
xor
stos
adc
fstp
or
test
jns
dec
les
data16
es
nop
adc
add
js
jo
movs
imul
call
add
nop
inc
inc
push
push
stos
sub
sub
dec
ss
pop
or
xchg
cmp
enter
xor
and
sbb
and
enter
sbb
adc
or
sbb
cld
dec
xor
sub
cld
and
sbb
enter
fadd
rcl
cwde
sbb
and
xor
cmp
or
xor
stc
sar
cld
sub
sub
test
mov
cdq
cwde
and
or
and
sbb
cld
cld
and
and
retf
cld
(bad)
cld
cld
jb
cmp
and
jae
sbb
es
ret
sbb
and
cld
cld
and
sbb
movs
push
inc
mov
mul
pop
loopne
xchg
push
dec
and
jb
dec
shr
xor
and
rcl
dec
and
jb
dec
add
ss
sub
rol
jns
nop
inc
sti
sub
fs
loopne
mov
shl
test
mov
sbb
push
inc
pop
inc
inc
call
movs
jmp
sub
or
add
mov
cmp
nop
sub
xor
call
imul
push
mov
sub
ss
outs
sub
sbb
test
and
sar
into
sti
add
and
fnstsw
cmp
xor
mov
cdq
inc
push
and
sbb
in
xchg
and
adc
or
sti
sti
leave
repnz
cmp
ss
cmp
cli
sub
cli
cmp
call
movs
imul
call
enter
mov
(bad)
cli
cli
mov
inc
pop
mov
adc
mov
sub
repz
inc
enter
cwde
adc
inc
mov
or
sbb
inc
js
adc
and
jo
inc
sbb
shl
je
pusha
and
add
enter
dec
adc
and
mov
cli
fs
nop
cli
dec
cli
dec
out
cmp
cli
cli
dec
add
pop
xchg
cli
sub
sbb
repnz
dec
retf
mov
cli
cli
cli
daa
retf
jae
dec
stc
jmp
call
dec
call
out
loopne
xchg
cmps
cdq
dec
fmul
in
dec
enter
push
sbb
rcl
xchg
cmps
mov
imul
push
mov
nop
xchg
ret
nop
nop
push
sbb
push
mov
adc
push
call
push
push
pusha
pusha
nop
xchg
cmps
cdq
push
pop
push
push
imul
push
sbb
pop
in
xchg
cmps
cmp
xor
or
push
iret
add
stc
stc
pop
stc
and
stc
push
dec
repnz
stc
sub
and
cwde
inc
pop
repz
clc
add
out
push
sub
clc
inc
inc
call
imul
in
data16
fs
pop
nop
inc
inc
call
imul
mov
add
mov
arpl
fsub
and
nop
enter
arpl
add
and
push
fld
clc
clc
gs
clc
push
sub
xor
xor
pop
add
sbb
addr16
js
enter
inc
ret
and
xor
add
xor
imul
jmp
push
mov
in
imul
cmp
cmp
clc
ins
int3
adc
mov
jo
add
imul
sbb
inc
push
jmp
enter
neg
shl
shl
outs
enter
adc
sbb
pop
mov
aas
mov
jo
imul
inc
push
sbb
nop
xchg
cmps
cwde
jecxz
nop
xchg
in
or
div
sahf
add
nop
div
je
inc
push
cmp
div
jb
in
jne
push
pusha
mov
push
ror
push
ja
(bad)
in
lea
ret
mov
xor
pop
or
jns
sub
aaa
sbb
enter
sbb
adc
xor
je
jnp
or
add
sbb
jl
mul
(bad)
dec
xor
sub
test
rcr
int
jb
jle
cld
dec
and
jb
dec
ror
lods
rol
xchg
push
push
jb
test
mov
hlt
sbb
mov
push
xor
and
xchg
cbw
je
nop
inc
call
inc
es
inc
add
cs
enter
test
pusha
int
add
pusha
xchg
adc
and
push
push
xchg
mov
jg
popf
dec
not
pop
inc
xchg
xchg
(bad)
imul
sbb
and
mov
call
mov
mov
loopne
cmp
dec
mov
mov
lock
inc
push
nop
xor
(bad)
call
and
loopne
movs
sbb
data16
ror
xchg
jne
rol
xchg
nop
mov
es
mov
and
cmc
fild
mov
mov
and
lahf
nop
cmc
nop
cmc
xchg
xchg
mov
xchg
adc
enter
xchg
popf
js
in
inc
jo
jo
inc
call
inc
es
pusha
xchg
pop
cwd
inc
push
sbb
xchg
nop
inc
sbb
dec
inc
call
cmp
sbb
sub
cmp
and
cmp
call
and
add
test
pushf
fcomip
ds
xor
hlt
fcomip
cmp
popf
and
call
data16
add
or
nop
rcl
lahf
mov
cmp
hlt
hlt
in
cmp
mov
in
cmp
mov
pop
test
nop
xchg
cwde
nop
nop
inc
inc
call
jb
js
xchg
js
pop
pop
and
out
hlt
jo
movs
movs
push
fwait
sub
xlat
hlt
pop
mov
sbb
pop
add
fs
push
cmps
in
xchg
dec
pop
inc
inc
inc
call
inc
es
inc
xor
imul
cdq
stos
sbb
adc
xchg
or
adc
mov
push
repz
xor
ds
fisttp
fstp
push
es
jp
les
mov
mov
mov
mov
pop
push
push
pop
push
mov
les
enter
or
arpl
dec
pop
lea
cmp
and
inc
dec
push
and
je
add
nop
xchg
pop
sub
es
mov
mov
fsubr
sbb
test
inc
mov
inc
and
sti
or
and
pop
or
sub
adc
push
pop
push
jne
push
add
mov
inc
adc
fst
adc
adc
adc
and
pop
cmp
repz
mov
pusha
and
aam
push
jo
sti
imul
(bad)
lock
test
cmp
and
jl
dec
jbe
pushf
leave
push
pusha
jmp
fcomp
jb
test
cwde
xchg
sbb
push
mov
or
shl
or
push
lea
addr16
(bad)
ror
and
push
sub
push
call
add
ds
cwde
jne
enter
and
or
pop
xchg
and
mov
cmp
sbb
mov
mov
adc
jno
add
cmc
mov
mov
inc
push
jnp
xor
nop
xchg
mov
xor
fsub
mov
mov
repnz
mov
loopne
push
xchg
rol
dec
ror
or
ret
mov
std
aas
cmps
adc
add
ins
mov
push
sub
lock
push
bound
retf
sub
adc
mov
adc
in
sub
lods
loop
dec
or
cld
inc
dec
es
in
call
movs
loopne
mov
enter
fs
sahf
xchg
sbb
rcl
sub
mov
rol
mov
and
mov
adc
sbb
pop
mov
int3
or
dec
pop
cwde
adc
and
mov
inc
sub
or
mov
gs
fisttp
add
dec
ss
lods
sub
mov
fadd
in
lea
cmps
inc
pop
jb
rol
add
nop
mov
add
js
sbb
or
ins
sub
push
popa
data16
stos
xor
mov
mov
imul
mov
loop
push
add
test
mov
pop
xchg
xor
test
imul
xor
cwde
stos
adc
mov
ficom
addr16
in
aaa
movs
ins
pop
fwait
add
mov
dec
ja
out
gs
jmp
adc
xor
cwde
rcl
outs
int3
add
jno
add
adc
inc
inc
and
sbb
mov
ins
add
mov
or
dec
arpl
adc
sti
out
pop
popa
fs
data16
popa
outs
and
les
test
imul
and
inc
ds
jb
bound
data16
inc
jl
sub
add
std
rol
mov
pop
ins
ss
and
dec
xor
add
and
popa
shr
xor
shl
inc
popa
pop
dec
adc
fs
lds
adc
add
sbb
push
push
fcomp
mov
push
lock
pop
sbb
ret
inc
push
inc
lods
add
mov
inc
inc
aas
xor
imul
jae
inc
(bad)
shr
and
mov
addr16
mov
ret
ja
sub
cmp
push
js
fbstp
imul
dec
and
pop
push
dec
dec
dec
pop
push
xor
and
mov
sub
mov
inc
jne
pop
imul
xor
or
and
jge
inc
test
retf
xchg
pop
mov
sbb
mov
jmp
ins
daa
in
jno
je
push
jne
jns
je
in
popa
mov
add
in
dec
push
les
and
jg
das
dec
add
leave
add
arpl
jne
and
cmp
call
xlat
jo
add
add
inc
push
push
xchg
not
enter
add
push
inc
xchg
mov
xor
mov
adc
es
test
and
cmp
data16
xchg
or
add
pop
ret
jg
xchg
jo
fistp
pop
pop
mov
xor
mov
jle
imul
pop
lods
mov
ins
cmps
xor
stos
mov
sub
xchg
sub
inc
pop
add
xor
jo
arpl
sub
dec
inc
dec
dec
adc
add
pop
lods
test
loopne
sidtd
add
add
lock
rol
bound
addr16
add
adc
into
das
cmp
pop
add
dec
inc
cmp
das
jnp
push
add
sub
mov
shr
add
in
pusha
fnstsw
je
movs
add
jge
mov
cs
add
loopne
nop
jmp
jge
mov
cs
dec
cwde
sti
add
inc
or
in
std
sahf
stc
cs
jb
ret
retf
add
daa
js
mov
add
inc
jmp
push
jne
add
add
add
add
inc
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
